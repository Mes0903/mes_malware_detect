
1600cdfc2408b69a75a6993a41d50ad0ac8c4666269785cae0731fe43a855ee5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    esi,ebx
  402e93:	add    dh,BYTE PTR [ebp+0x7c7c7c5c]
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x12],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	add    ecx,esi
  402f43:	outs   dx,BYTE PTR ds:[esi]
  402f44:	ss mov bh,0xdb
  402f47:	js     0x402fc4
  402f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f4a:	test   al,0x36
  402f4c:	sub    ah,BYTE PTR [eax-0x7cfff526]
  402f52:	add    ch,BYTE PTR [edi]
  402f54:	sbb    dh,BYTE PTR [esi]
  402f56:	xor    BYTE PTR [edi],al
  402f58:	adc    DWORD PTR [esi+0x6d],0xffffff8b
  402f5c:	mov    ds:0xce6c1db5,eax
  402f61:	mov    eax,ds:0xebdf7b59
  402f66:	je     0x402fd2
  402f68:	in     eax,dx
  402f69:	cmp    DWORD PTR [eax],0xffffff9b
  402f6c:	shl    DWORD PTR [di],0xf9
  402f70:	scas   eax,DWORD PTR es:[edi]
  402f71:	mov    cl,BYTE PTR [eax]
  402f73:	mov    DWORD PTR [edx+0x39],eax
  402f76:	or     cl,cl
  402f78:	cmp    al,0x46
  402f7a:	xchg   edi,eax
  402f7b:	popa   
  402f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7d:	loop   0x402f5e
  402f7f:	mov    bl,0xc4
  402f81:	push   edx
  402f82:	sbb    BYTE PTR fs:0x265bc71e,dh
  402f89:	jb     0x402fef
  402f8b:	cwde   
  402f8c:	rol    DWORD PTR [ecx+esi*1+0x44],0xcb
  402f91:	or     al,0x2d
  402f93:	mov    dh,0xaf
  402f95:	sub    eax,0xdeb13bf6
  402f9a:	scas   eax,DWORD PTR es:[edi]
  402f9b:	jb     0x402fbc
  402f9d:	dec    ebp
  402f9e:	loope  0x402f8a
  402fa0:	repnz add BYTE PTR [edi-0x41],ch
  402fa4:	imul   esi,DWORD PTR [edi-0x1],0x54
  402fa8:	pushf  
  402fa9:	call   0x67b85199
  402fae:	and    eax,0x97a57693
  402fb3:	mov    edi,DWORD PTR [edi-0x1e]
  402fb6:	inc    ebp
  402fb7:	and    DWORD PTR [ebx+0x2b],edx
  402fba:	std    
  402fbb:	imul   esp,esi,0x1b
  402fbe:	dec    ebx
  402fbf:	enter  0x8644,0x6d
  402fc3:	shl    ecx,1
  402fc5:	inc    edi
  402fc6:	cmp    ch,BYTE PTR [eax+0x35]
  402fc9:	repnz bound edx,QWORD PTR [esp+ebx*2]
  402fcd:	sub    ah,bl
  402fcf:	js     0x402fa9
  402fd1:	pushf  
  402fd2:	stos   BYTE PTR es:[edi],al
  402fd3:	fisttp DWORD PTR [ebp+0x42a3d97f]
  402fd9:	mov    esp,0x41bd9f0e
  402fde:	in     eax,0x69
  402fe0:	out    0xe8,al
  402fe2:	jns    0x402f87
  402fe4:	xor    dh,bl
  402fe6:	test   eax,0x25f40c36
  402feb:	int3   
  402fec:	pop    edi
  402fed:	enter  0x303a,0x2d
  402ff1:	repz mov es,WORD PTR [edi]
  402ff4:	test   ah,bh
  402ff6:	ja     0x403028
  402ff8:	loope  0x402f7e
  402ffa:	aad    0x39
  402ffc:	ror    bh,cl
  402ffe:	shl    BYTE PTR [edi],cl
  403000:	loope  0x403007
  403002:	and    al,0xa1
  403004:	cmp    ecx,ebp
  403006:	xchg   DWORD PTR [edi+0x74],edx
  403009:	(bad)
  40300d:	sub    eax,0x41519cab
  403012:	mov    edx,0x2161b745
  403017:	mov    ecx,DWORD PTR [ecx-0x42794a08]
  40301d:	cwde   
  40301e:	dec    eax
  40301f:	jecxz  0x402fa8
  403021:	imul   esi,DWORD PTR [eax-0xf3ef765],0xe
  403028:	xchg   ebx,eax
  403029:	in     eax,0x84
  40302b:	imul   esi,DWORD PTR [ebp+0x7e],0x36
  40302f:	mov    ecx,0x67802f19
  403034:	and    DWORD PTR [esi+0x7ede42d5],esi
  40303a:	inc    ebp
  40303b:	pusha  
  40303c:	inc    esp
  40303d:	(bad)  
  40303e:	mov    ebx,0x88288220
  403043:	mov    esp,0x80dfb1eb
  403048:	test   DWORD PTR [eax],ebx
  40304a:	mov    cl,0xb7
  40304c:	adc    cl,BYTE PTR [edi]
  40304e:	jp     0x403024
  403050:	shr    DWORD PTR [edx+0x73fe862b],cl
  403056:	dec    ebx
  403057:	pushf  
  403058:	dec    edi
  403059:	mov    ecx,0x42f6669e
  40305e:	mov    al,ds:0x91cce764
  403063:	sub    ecx,esp
  403065:	xchg   esp,eax
  403066:	(bad)  
  403067:	arpl   si,di
  403069:	das    
  40306a:	mov    ds:0x20adc4d1,eax
  40306f:	(bad)  
  403070:	and    al,0x3
  403072:	mov    ebx,0x355c540b
  403077:	or     dh,BYTE PTR [esi+0x14d9c1a8]
  40307d:	inc    ebp
  40307e:	int    0xb1
  403080:	out    0x3e,ax
  403083:	and    BYTE PTR [eax-0x7c],0xe0
  403087:	aaa    
  403088:	pop    edi
  403089:	sti    
  40308a:	js     0x403083
  40308c:	stos   DWORD PTR es:[edi],eax
  40308d:	sub    eax,0x1a848f0c
  403092:	mov    DWORD PTR [ebx-0x52],ebp
  403095:	and    DWORD PTR [ebx-0x5be046b1],ebx
  40309b:	xchg   BYTE PTR [ebx+0x3179eb69],bh
  4030a1:	not    BYTE PTR [ecx+0x49]
  4030a4:	dec    ebp
  4030a5:	dec    ecx
  4030a6:	cmp    bh,ah
  4030a8:	pop    ss
  4030a9:	cwde   
  4030aa:	add    dl,BYTE PTR [esp+esi*8-0x479989a6]
  4030b1:	xor    al,cl
  4030b3:	sbb    dl,bl
  4030b5:	test   BYTE PTR [edi+0x2b],al
  4030b8:	mov    esi,DWORD PTR [edi+0x6a3541ad]
  4030be:	adc    DWORD PTR [eax+esi*8-0x9cc74ed],esi
  4030c5:	dec    ecx
  4030c6:	mov    ds:0xd89055bf,eax
  4030cb:	jmp    0xd096e1ab
  4030d0:	(bad)  
  4030d1:	sub    eax,0x26a81f87
  4030d6:	ret    
  4030d7:	pop    edi
  4030d8:	jns    0x4030f3
  4030da:	and    bl,BYTE PTR [eax-0x6a47b1db]
  4030e0:	test   al,0x8c
  4030e2:	inc    ecx
  4030e3:	pop    ebx
  4030e4:	shl    BYTE PTR [eax],0xb8
  4030e7:	retf   0xd03a
  4030ea:	sub    BYTE PTR [esi],bh
  4030ec:	jmp    0x6f0d:0x58e40b67
  4030f3:	aas    
  4030f4:	push   ecx
  4030f5:	xchg   edi,eax
  4030f6:	nop
  4030f7:	pop    ecx
  4030f8:	add    edx,DWORD PTR [edi+0x45991a00]
  4030fe:	les    esi,FWORD PTR [eax-0x5f699cce]
  403104:	clc    
  403105:	xchg   DWORD PTR [edi+0x6],esi
  403108:	add    eax,0x6ab8191c
  40310d:	test   al,0x1d
  40310f:	mov    dl,0x7a
  403111:	and    edi,esp
  403113:	dec    edx
  403114:	dec    ebp
  403115:	pop    ebp
  403116:	jbe    0x40315d
  403118:	lods   al,BYTE PTR ds:[esi]
  403119:	mov    bl,0xa4
  40311b:	dec    ecx
  40311c:	popa   
  40311d:	push   ss
  40311e:	outs   dx,BYTE PTR ds:[esi]
  40311f:	sbb    BYTE PTR [ecx+0x1f],dh
  403122:	inc    ebx
  403123:	sub    eax,0xed537aea
  403128:	adc    DWORD PTR [eax-0x2f],esp
  40312b:	call   0x8aee:0x22556005
  403132:	push   ss
  403133:	arpl   WORD PTR [edx],bx
  403135:	mov    esi,0x7d4af576
  40313a:	pop    edi
  40313b:	push   ebp
  40313c:	test   BYTE PTR [ecx+eiz*1],dh
  40313f:	sub    al,0x31
  403141:	pop    esp
  403142:	mov    bl,0x54
  403144:	mov    esp,0x624f5b1c
  403149:	pop    edx
  40314a:	xchg   BYTE PTR ds:0x53ea8cdd,al
  403150:	jmp    0x40317e
  403152:	fucom  st(1)
  403154:	lea    ebx,[esi-0x4e]
  403157:	test   ch,al
  403159:	jmp    0x5240:0xfdcee766
  403160:	pop    esi
  403161:	xor    dh,dh
  403163:	in     al,dx
  403164:	arpl   WORD PTR [ecx],bp
  403166:	shr    DWORD PTR [edx+0x328527d4],1
  40316c:	retf   
  40316d:	stc    
  40316e:	sbb    BYTE PTR [ebx-0x32],bl
  403171:	sbb    eax,0x2b542dea
  403176:	fcomp  QWORD PTR [ebx]
  403178:	xor    BYTE PTR [ecx],ch
  40317a:	xchg   BYTE PTR [edx-0x7d],ah
  40317d:	push   es
  40317e:	das    
  40317f:	outs   dx,BYTE PTR ds:[esi]
  403180:	push   ds
  403181:	jg     0x403181
  403183:	lods   eax,DWORD PTR ds:[esi]
  403184:	dec    ecx
  403185:	gs addr16 cmc 
  403188:	inc    ebx
  403189:	test   esp,esp
  40318b:	pop    eax
  40318c:	rol    edx,0x7a
  40318f:	mov    edi,0x36aecb10
  403194:	int    0xcd
  403196:	cdq    
  403197:	mov    esp,0x906aba3b
  40319c:	jbe    0x4031e1
  40319e:	mov    dl,BYTE PTR [ebp+0xe]
  4031a1:	pop    edi
  4031a2:	xor    BYTE PTR [ebx],dl
  4031a4:	xchg   ecx,eax
  4031a5:	call   0xa7b6:0x3e8de8ab
  4031ac:	jmp    0x4a62:0x7eda373b
  4031b3:	and    al,0x93
  4031b5:	outs   dx,BYTE PTR ds:[esi]
  4031b6:	sbb    eax,0x42a6b73f
  4031bb:	mov    dl,0x27
  4031bd:	jbe    0x403179
  4031bf:	iret   
  4031c0:	adc    edi,DWORD PTR [ebp+0x121f23f8]
  4031c6:	out    dx,eax
  4031c7:	mov    al,0xc0
  4031c9:	sahf   
  4031ca:	push   es
  4031cb:	adc    edx,DWORD PTR [edi+ebp*8-0x5a9099a6]
  4031d2:	in     eax,0x22
  4031d4:	mov    ebp,0xcf3e002
  4031d9:	push   eax
  4031da:	dec    eax
  4031db:	out    dx,eax
  4031dc:	sub    eax,DWORD PTR [esi]
  4031de:	xor    al,cl
  4031e0:	les    eax,FWORD PTR [ebx]
  4031e2:	inc    ebx
  4031e3:	enter  0xb61f,0xa8
  4031e7:	test   BYTE PTR [edx-0x3d8782a7],dl
  4031ed:	push   ss
  4031ee:	(bad)  
  4031ef:	jg     0x403197
  4031f1:	repz (bad) 
  4031f3:	fidiv  WORD PTR [edi+0x30]
  4031f6:	push   ebp
  4031f7:	ja     0x4031a7
  4031f9:	push   0xfffffff1
  4031fb:	inc    ebx
  4031fc:	fwait
  4031fd:	test   al,0x91
  4031ff:	xchg   DWORD PTR [esi],ecx
  403201:	jmp    0xcd05eb16
  403206:	mov    dl,BYTE PTR [edi]
  403208:	pop    ecx
  403209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40320a:	and    BYTE PTR [esi+edx*8-0x28eed9ce],al
  403211:	jg     0x4031e4
  403213:	fstp   TBYTE PTR [ecx]
  403215:	sbb    DWORD PTR [ebp-0x1e],edi
  403218:	adc    esi,edi
  40321a:	test   dl,dl
  40321c:	aas    
  40321d:	icebp  
  40321e:	inc    ebx
  40321f:	jl     0x403239
  403221:	(bad)  
  403222:	and    eax,0xc2ccd4a3
  403227:	outs   dx,DWORD PTR ds:[esi]
  403228:	pop    ds
  403229:	xchg   esp,eax
  40322a:	shl    BYTE PTR [eax-0x7b],0x83
  40322e:	ins    BYTE PTR es:[edi],dx
  40322f:	sub    DWORD PTR [esi],ebx
  403231:	popa   
  403232:	jp     0x4031c7
  403234:	ret    
  403235:	jnp    0x40320a
  403237:	push   es
  403238:	pop    ds
  403239:	push   esi
  40323a:	xlat   BYTE PTR ds:[ebx]
  40323b:	mov    ebx,DWORD PTR [edx]
  40323d:	(bad)  
  40323e:	cld    
  40323f:	and    eax,0x731c3fee
  403244:	icebp  
  403245:	outs   dx,BYTE PTR ds:[esi]
  403246:	cmp    bh,bl
  403248:	mov    eax,ds:0x8625906d
  40324d:	scas   al,BYTE PTR es:[edi]
  40324e:	pop    esp
  40324f:	sbb    esi,ebp
  403251:	out    0xee,al
  403253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403254:	cli    
  403255:	test   esi,ebp
  403257:	stc    
  403258:	popa   
  403259:	inc    ebx
  40325a:	mov    eax,0x26e04865
  40325f:	ret    
  403260:	clc    
  403261:	xor    dl,BYTE PTR [eax+0x62225861]
  403267:	pop    es
  403268:	adc    BYTE PTR [edi],dh
  40326a:	pop    esi
  40326b:	jbe    0x40329d
  40326d:	in     al,dx
  40326e:	inc    esp
  40326f:	cld    
  403270:	repz retf 
  403272:	and    BYTE PTR [ebx],0xa9
  403275:	xchg   ebx,eax
  403276:	mov    esi,0xe48bc248
  40327b:	ds pop ss
  40327d:	ds ret 0x5ac4
  403281:	mov    al,ds:0xf7418565
  403286:	push   ecx
  403287:	sar    BYTE PTR [edx+0x44],1
  40328a:	mov    al,0xb4
  40328c:	inc    esi
  40328d:	pop    ebx
  40328e:	jo     0x40324b
  403290:	or     DWORD PTR [edi+ecx*4],0x2d1bed4
  403297:	fmulp  st(2),st
  403299:	sbb    al,0x5d
  40329b:	into   
  40329c:	lock popa 
  40329e:	(bad)  [edi-0x73f2dc5c]
  4032a4:	out    0xad,al
  4032a6:	hlt    
  4032a7:	push   ds
  4032a8:	pushf  
  4032a9:	pop    esi
  4032aa:	and    DWORD PTR [ebp+0x16310868],0x56
  4032b1:	push   ss
  4032b2:	mov    ch,0x64
  4032b4:	in     al,0x2
  4032b6:	lock cmp eax,0xe6bd3612
  4032bc:	pop    eax
  4032bd:	mov    al,0x8b
  4032bf:	sub    eax,0x3b886e6
  4032c4:	cmc    
  4032c5:	push   0x2
  4032c7:	push   cs
  4032c8:	mov    eax,0xece70b7f
  4032cd:	(bad)  
  4032ce:	fsub   DWORD PTR [esi+0x26ff60e9]
  4032d4:	xlat   BYTE PTR ds:[ebx]
  4032d5:	std    
  4032d6:	dec    eax
  4032d7:	and    esp,DWORD PTR ds:0x8915ce9a
  4032dd:	and    DWORD PTR [ebp-0x54a15444],edi
  4032e3:	les    ebp,FWORD PTR ds:0x9e4ecb58
  4032e9:	sub    BYTE PTR ds:0x82843989,0xaa
  4032f0:	add    esp,DWORD PTR [edx+0x20]
  4032f3:	ret    
  4032f4:	test   DWORD PTR [esi+0x465b7a6f],ebx
  4032fa:	add    esp,esp
  4032fc:	and    al,0xbd
  4032fe:	push   ecx
  4032ff:	pop    es
  403300:	cmp    al,BYTE PTR [edi]
  403302:	cmc    
  403303:	push   edx
  403304:	sub    ebx,esp
  403306:	xor    ecx,ecx
  403308:	push   0xfffffff3
  40330a:	jmp    0xef6f:0xb71796a2
  403311:	stc    
  403312:	sub    DWORD PTR [edx+0x60],eax
  403315:	cmp    al,0x53
  403317:	xor    al,0x6c
  403319:	nop
  40331a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40331b:	cdq    
  40331c:	push   esi
  40331d:	(bad)  [edi+0x3965fdb7]
  403323:	lds    esi,FWORD PTR [ecx+0x579f5018]
  403329:	packsswb mm4,QWORD PTR [edx-0x70]
  40332d:	dec    edx
  40332e:	pusha  
  40332f:	clc    
  403330:	inc    esi
  403331:	xchg   DWORD PTR [eax-0x3963c9f0],ebx
  403337:	add    ah,bl
  403339:	retf   0x8af4
  40333c:	jno    0x40332e
  40333e:	or     BYTE PTR [edi-0x78110f39],0xfc
  403345:	push   eax
  403346:	push   0x6091057d
  40334b:	push   ss
  40334c:	add    al,0xcf
  40334e:	push   ebx
  40334f:	inc    edi
  403350:	test   BYTE PTR [edx-0x5a47d596],ah
  403356:	sbb    eax,0xfa0e58bd
  40335b:	sbb    eax,0xd75da515
  403360:	xchg   ebx,eax
  403361:	jno    0x403360
  403363:	or     al,0x22
  403365:	add    ch,BYTE PTR [ebx+0x2]
  403368:	sub    eax,0x9ac1da71
  40336d:	das    
  40336e:	xchg   BYTE PTR [eax+eiz*4-0x5a],bh
  403372:	push   eax
  403373:	pop    esi
  403374:	and    DWORD PTR [ebp-0x6],0x7e2dad65
  40337b:	fistp  QWORD PTR [ecx+0x115ceed0]
  403381:	or     DWORD PTR [edi-0x4b],ebx
  403384:	pop    ecx
  403385:	stc    
  403386:	xor    eax,DWORD PTR [ebp-0x6bb6e5ee]
  40338c:	out    dx,eax
  40338d:	loop   0x4033ec
  40338f:	and    eax,0xb912d931
  403394:	call   0x4b58:0xf77f18d0
  40339b:	inc    ebp
  40339c:	(bad)  
  40339d:	mov    ds:0x2c79de54,eax
  4033a2:	adc    DWORD PTR [eax-0x71],0xf564cfdb
  4033a9:	or     ecx,DWORD PTR [esi+0x4a809df6]
  4033af:	jmp    0x2957:0xe7ecb81e
  4033b6:	pop    esi
  4033b7:	push   edx
  4033b8:	(bad)  
  4033b9:	mov    ds:0x746e00bd,eax
  4033be:	xrelease mov BYTE PTR [ebp+0x4f],ah
  4033c2:	dec    esp
  4033c3:	add    DWORD PTR [ebx],edi
  4033c5:	adc    eax,DWORD PTR [ebp+0x6d]
  4033c8:	in     eax,0x3d
  4033ca:	fbstp  TBYTE PTR [eax-0x6a]
  4033cd:	retf   0xf63c
  4033d0:	mov    eax,ds:0x5621714d
  4033d5:	and    BYTE PTR [edx-0x64af744d],ah
  4033db:	mov    dl,ah
  4033dd:	mov    edx,0xe2cd8f3d
  4033e2:	sbb    eax,0x7d383783
  4033e7:	or     eax,edi
  4033e9:	push   0xffffffe4
  4033eb:	mov    ch,0xf5
  4033ed:	add    al,0xac
  4033ef:	mov    bl,0xd4
  4033f1:	imul   eax,ebp,0xbf12e2a6
  4033f7:	adc    edi,esi
  4033f9:	push   eax
  4033fa:	add    DWORD PTR [ecx+0x74],ebx
  4033fd:	pop    edx
  4033fe:	ret    
  4033ff:	pop    eax
  403400:	xor    esp,DWORD PTR [ebx-0x29]
  403403:	rcl    BYTE PTR [ebx+ecx*2-0x4278f8ad],cl
  40340a:	(bad)  
  40340b:	cli    
  40340c:	mov    ebp,0x27ba04ce
  403411:	dec    esp
  403412:	(bad)  
  403413:	xor    eax,0xe25a35fa
  403418:	lea    edx,[edi+0x348730e1]
  40341e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40341f:	repz (bad) 
  403421:	ds imul esi,esi,0x3f
  403425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403426:	sub    BYTE PTR [eax-0x70],0x9b
  40342a:	mov    esp,0xcd8b0a0d
  40342f:	fucomi st,st(0)
  403431:	fwait
  403432:	imul   ebx,ecx,0x70409b7d
  403438:	in     al,dx
  403439:	test   BYTE PTR [ebx+0x41],0x82
  40343d:	in     eax,0xaf
  40343f:	sub    ebp,DWORD PTR [ebx-0x101a0a8b]
  403445:	and    esi,edx
  403447:	pop    ds
  403448:	dec    edi
  403449:	test   al,0x81
  40344b:	sbb    eax,0xa5cbc506
  403450:	jmp    0x38d38ca8
  403455:	enter  0xbd60,0xd5
  403459:	(bad)  
  40345b:	lds    eax,FWORD PTR [eax+0x37]
  40345e:	test   DWORD PTR [ecx-0x54],0x503a4f2b
  403465:	jae    0x403451
  403467:	aad    0xd0
  403469:	arpl   WORD PTR [esi-0x49],bp
  40346c:	sbb    eax,0xcb8c3081
  403471:	jne    0x40346e
  403473:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403475:	inc    ebp
  403476:	mov    al,0xc5
  403478:	out    0x4e,eax
  40347a:	inc    edx
  40347b:	cld    
  40347c:	in     eax,0xba
  40347e:	mov    ecx,0xccee4a92
  403484:	mov    al,0xa6
  403486:	adc    ecx,DWORD PTR [esi]
  403488:	sub    DWORD PTR [ecx-0x6d],0xffffffe2
  40348c:	test   BYTE PTR [eax+eax*1-0x42],bl
  403490:	inc    esi
  403491:	push   edi
  403492:	pop    ebp
  403493:	mov    eax,ds:0x539520ce
  403498:	inc    esi
  403499:	repnz dec eax
  40349b:	push   esp
  40349c:	test   eax,0xd169c4d9
  4034a1:	ja     0x403517
  4034a3:	sbb    al,0x4b
  4034a5:	and    al,0x38
  4034a7:	sbb    dl,BYTE PTR [esi+0x7f230d2]
  4034ad:	popa   
  4034ae:	mov    cl,0x43
  4034b0:	push   ecx
  4034b1:	pop    ecx
  4034b2:	mov    DWORD PTR [eax+0x1a9f1d3e],ecx
  4034b8:	ja     0x403533
  4034ba:	pop    ecx
  4034bb:	retf   
  4034bc:	jne    0x403451
  4034be:	jecxz  0x4034dc
  4034c0:	or     esi,DWORD PTR [ecx+0x52ec1462]
  4034c6:	mov    ebx,0xdb3d7118
  4034cb:	push   0x5c
  4034cd:	loope  0x403532
  4034cf:	mov    ch,dl
  4034d1:	lahf   
  4034d2:	cmp    bl,BYTE PTR [ebp+0x24]
  4034d5:	xor    eax,0x85365460
  4034da:	inc    ebx
  4034db:	pop    eax
  4034dc:	inc    edx
  4034dd:	rcr    BYTE PTR [ecx+0x1d],1
  4034e0:	aas    
  4034e1:	mov    dl,0x2f
  4034e3:	xchg   esi,eax
  4034e4:	imul   edx,DWORD PTR [ebx+0x45ac00c2],0x57
  4034eb:	and    ebp,DWORD PTR [ecx+0x32]
  4034ee:	pop    eax
  4034ef:	sub    eax,0x9e97bae8
  4034f4:	sahf   
  4034f5:	call   0xec2310f7
  4034fa:	cld    
  4034fb:	jmp    0x7806:0x2eea4219
  403502:	cmp    DWORD PTR [ebp-0x15],ebp
  403505:	adc    eax,0x479d7333
  40350a:	in     eax,0xdc
  40350c:	add    BYTE PTR [edx+0x5f],cl
  40350f:	imul   eax,DWORD PTR [ecx+0x308f9fbf],0xcd80ddf5
  403519:	jl     0x403510
  40351b:	cwde   
  40351c:	dec    esi
  40351d:	or     cl,dl
  40351f:	or     edi,DWORD PTR [edi+ebp*8]
  403522:	xchg   ebp,eax
  403523:	jle    0x4034ab
  403525:	xor    al,0x28
  403527:	sbb    dl,BYTE PTR [esi-0x3331e7b5]
  40352d:	mov    bh,0x2
  40352f:	fsubp  st(0),st
  403531:	lds    esp,FWORD PTR [ebp+ebx*2-0x1fe9586a]
  403538:	(bad)  
  403539:	out    dx,eax
  40353a:	aam    0x23
  40353c:	daa    
  40353d:	pop    ebx
  40353e:	out    0x31,al
  403540:	adc    DWORD PTR [edi+0x31],ecx
  403543:	sahf   
  403544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403546:	mov    BYTE PTR [ebp+0x7801bc0a],bh
  40354c:	mov    BYTE PTR [ecx-0x276ff31a],al
  403552:	cs push ebx
  403554:	mov    dl,BYTE PTR [ebx-0x71d80ec9]
  40355a:	hlt    
  40355b:	or     al,0xb0
  40355d:	pusha  
  40355e:	push   0xffffff8c
  403560:	les    ecx,FWORD PTR [edx+0xc]
  403563:	dec    esp
  403564:	mov    cl,0x9e
  403566:	shl    edx,1
  403568:	popf   
  403569:	jg     0x403533
  40356b:	inc    ebx
  40356c:	lock (bad) 
  40356e:	jmp    0x40357c
  403570:	xor    ebp,DWORD PTR [esi-0x64]
  403573:	adc    al,BYTE PTR [esi-0x40221177]
  403579:	jl     0x4034fe
  40357b:	jbe    0x4035d9
  40357d:	aas    
  40357e:	sub    DWORD PTR [edi+0x1868e0d1],eax
  403584:	mov    BYTE PTR [ecx],0x98
  403587:	mov    DWORD PTR [edx+0xdbff08e],ecx
  40358d:	add    DWORD PTR [eax],ebx
  40358f:	add    BYTE PTR [edi],al
  403591:	pushf  
  403592:	jnp    0x4035e2
  403594:	xchg   edi,eax
  403595:	jp     0x403542
  403597:	mov    esi,0x743f9420
  40359c:	fsubp  st(5),st
  40359e:	sbb    ch,al
  4035a0:	jnp    0x4035dd
  4035a2:	lds    edx,FWORD PTR [edi-0xefbe4fe]
  4035a8:	jno    0x40361a
  4035aa:	arpl   WORD PTR [esi+0x344d83e4],di
  4035b0:	sub    eax,0x5fe363e
  4035b5:	aad    0xbd
  4035b7:	inc    esi
  4035b8:	fwait
  4035b9:	add    eax,0xf90ac93
  4035be:	pop    ecx
  4035bf:	mov    esi,0x97d0bcfe
  4035c4:	popf   
  4035c5:	inc    esp
  4035c6:	jg     0x4035db
  4035c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035c9:	mov    dl,0x12
  4035cb:	jmp    0x403568
  4035cd:	ss dec eax
  4035cf:	fwait
  4035d0:	sub    eax,0x8af3c13a
  4035d5:	adc    eax,0xd87902dd
  4035da:	popf   
  4035db:	(bad)  
  4035dc:	fadd   QWORD PTR [esi+ebp*1]
  4035df:	sbb    eax,0x4c2942fa
  4035e4:	dec    ebx
  4035e5:	mov    eax,ds:0x557f6b1f
  4035ea:	rol    edx,0x7d
  4035ed:	xor    al,0xf6
  4035ef:	push   edx
  4035f0:	hlt    
  4035f1:	js     0x403653
  4035f3:	cmp    esp,esi
  4035f5:	cmp    DWORD PTR [eax-0x2ee197a1],ebx
  4035fb:	xor    eax,0x37798b9a
  403600:	stc    
  403601:	inc    ecx
  403602:	int3   
  403603:	jne    0x403676
  403605:	neg    BYTE PTR [ecx+0x1]
  403608:	inc    eax
  403609:	cdq    
  40360a:	(bad)  
  40360b:	mov    edi,0xb5c5f1ef
  403610:	shl    esp,0x5c
  403613:	das    
  403614:	bound  esp,QWORD PTR [ecx]
  403616:	mov    ah,0x53
  403618:	push   ecx
  403619:	xchg   BYTE PTR [edi-0x1ad7acd4],bh
  40361f:	stos   DWORD PTR es:[edi],eax
  403620:	adc    al,0xd1
  403622:	push   cs
  403623:	and    BYTE PTR [ebx],0x1c
  403626:	xchg   edx,eax
  403627:	dec    ebx
  403628:	sub    ebx,eax
  40362a:	pop    esi
  40362b:	jmp    0x4035da
  40362d:	pop    esi
  40362e:	xchg   ebx,eax
  40362f:	retf   0x3a5f
  403632:	mov    BYTE PTR [esi],bl
  403634:	inc    ecx
  403635:	or     BYTE PTR [esi-0x54486edf],bh
  40363b:	or     ecx,edx
  40363d:	xor    al,BYTE PTR [ecx]
  40363f:	lods   al,BYTE PTR ds:[esi]
  403640:	adc    BYTE PTR [ecx+0x5d],0xbc
  403644:	push   0xffffffc7
  403646:	call   0x2bcfda94
  40364b:	add    BYTE PTR [eax+0xd51b0ae],dh
  403651:	xlat   BYTE PTR ds:[ebx]
  403652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403653:	(bad)  [ecx]
  403655:	lock mov cl,0x99
  403658:	jl     0x4035f2
  40365a:	adc    DWORD PTR [ebx+edi*4-0x20be47d4],edi
  403661:	xchg   BYTE PTR [eax],cl
  403663:	jle    0x40364f
  403665:	inc    ebp
  403666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403667:	mov    dh,0x4a
  403669:	lock mov edx,0x971d0891
  40366f:	jns    0x403687
  403671:	ja     0x40366c
  403673:	mov    eax,ds:0x1255b03f
  403678:	int3   
  403679:	popf   
  40367a:	stos   DWORD PTR es:[edi],eax
  40367b:	mov    ebx,DWORD PTR [edx+0x2e3b8386]
  403681:	pusha  
  403682:	inc    esp
  403683:	adc    eax,DWORD PTR [edi+edi*8]
  403686:	and    DWORD PTR [ebp-0xf],edx
  403689:	mov    edx,0x810758ba
  40368f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403690:	sub    dh,BYTE PTR [esi+0x9]
  403693:	ins    DWORD PTR es:[edi],dx
  403694:	jnp    0x40361c
  403696:	sbb    al,dl
  403698:	in     eax,0xc
  40369a:	jge    0x40364b
  40369c:	dec    ebx
  40369d:	cs aad 0x50
  4036a0:	fdivr  QWORD PTR [ecx+edx*2-0x128fc51d]
  4036a7:	pop    ecx
  4036a8:	sti    
  4036a9:	rol    BYTE PTR [edi+0x69],cl
  4036ac:	mov    DWORD PTR [eax],esp
  4036ae:	xchg   esp,eax
  4036af:	aas    
  4036b0:	cmp    al,0x28
  4036b2:	and    eax,0x8ba875da
  4036b7:	sbb    al,BYTE PTR [esi+0x4e4b7b4]
  4036bd:	popf   
  4036be:	adc    eax,0x838c506b
  4036c3:	sti    
  4036c4:	(bad)  
  4036c5:	pop    esp
  4036c6:	add    dl,cl
  4036c8:	outs   dx,BYTE PTR gs:[esi]
  4036ca:	in     eax,0x3a
  4036cc:	loopne 0x403669
  4036ce:	stc    
  4036cf:	mov    edi,0x9ec20efe
  4036d4:	pop    es
  4036d5:	and    BYTE PTR [edx-0x42],cl
  4036d8:	into   
  4036d9:	xchg   esp,eax
  4036da:	es sahf 
  4036dc:	inc    ecx
  4036dd:	pop    ebp
  4036de:	aaa    
  4036df:	out    0x62,al
  4036e1:	or     BYTE PTR [eax-0x3c],0x1a
  4036e5:	test   BYTE PTR [ecx+0xbb2f790],0x91
  4036ec:	jge    0x40371e
  4036ee:	mov    ch,0x94
  4036f0:	pop    es
  4036f1:	adc    DWORD PTR [ebp-0xbd09f70],0xffffffa2
  4036f8:	bound  eax,QWORD PTR [edi-0x107ec395]
  4036fe:	mov    DWORD PTR [ebx],ecx
  403700:	into   
  403701:	cld    
  403702:	in     al,0x90
  403704:	test   eax,0x4516658f
  403709:	and    ebx,DWORD PTR [eax+0xd]
  40370c:	sbb    al,0x1d
  40370e:	pop    esp
  40370f:	je     0x403703
  403711:	(bad)  
  403712:	jp     0x403754
  403714:	lock test edx,ecx
  403717:	sub    dl,BYTE PTR [ecx]
  403719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40371a:	hlt    
  40371b:	dec    edx
  40371c:	xchg   esp,eax
  40371d:	push   edx
  40371e:	and    bh,BYTE PTR [eax]
  403720:	lods   eax,DWORD PTR ds:[esi]
  403721:	push   ebp
  403722:	popa   
  403723:	(bad)  
  403724:	mov    dh,0xc4
  403726:	sti    
  403727:	sahf   
  403728:	xchg   BYTE PTR [ebp+0x7e2aada6],al
  40372e:	arpl   bx,dx
  403730:	jne    0x4036ef
  403732:	neg    bh
  403734:	iret   
  403735:	cdq    
  403736:	jl     0x403707
  403738:	mul    ebp
  40373a:	inc    edi
  40373b:	rol    dh,1
  40373d:	mov    ah,0xc4
  40373f:	jmp    0x403794
  403741:	clc    
  403742:	mov    edi,0xd070cc8b
  403747:	scas   al,BYTE PTR es:[edi]
  403748:	(bad)  
  403749:	test   eax,0x3486df7f
  40374e:	ret    
  40374f:	xlat   BYTE PTR ds:[ebx]
  403750:	xlat   BYTE PTR es:[ebx]
  403752:	popf   
  403753:	loop   0x403711
  403755:	pop    ebp
  403756:	lods   eax,DWORD PTR ds:[esi]
  403757:	dec    ecx
  403758:	gs pop eax
  40375a:	sbb    eax,0xb3c2d2c3
  40375f:	or     ebp,DWORD PTR [esi]
  403761:	in     eax,0x1
  403763:	ret    
  403764:	cmp    al,0x1
  403766:	test   al,0x42
  403768:	test   DWORD PTR [edx],esi
  40376a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376b:	xchg   esp,eax
  40376c:	(bad)  
  40376d:	outs   dx,DWORD PTR ds:[esi]
  40376e:	mov    BYTE PTR [ebp+0xd],bl
  403771:	jmp    DWORD PTR [ebp-0x1d73824f]
  403777:	push   eax
  403778:	push   ebx
  403779:	rcr    ah,0xf4
  40377c:	xor    al,0x9d
  40377e:	jmp    0x403733
  403780:	xor    ebp,DWORD PTR [ecx]
  403782:	or     dl,0xa2
  403785:	mov    ds:0x6c898eb5,eax
  40378a:	or     eax,0x39248ed4
  40378f:	jg     0x40371d
  403791:	adc    eax,0x9ccc7898
  403796:	rol    DWORD PTR [esi-0x16c5a5ba],0x10
  40379d:	mov    ebx,0x1bd355e1
  4037a2:	and    eax,0x2fd99959
  4037a7:	into   
  4037a8:	sub    eax,0x2d1c5ad0
  4037ad:	cmp    edx,ecx
  4037af:	pop    ds
  4037b0:	inc    ecx
  4037b1:	push   0xffffff99
  4037b3:	je     0x4037d6
  4037b5:	pop    eax
  4037b6:	and    eax,0x60d9952d
  4037bb:	lods   eax,DWORD PTR ds:[esi]
  4037bc:	and    bh,BYTE PTR [ecx-0x16]
  4037bf:	cmp    DWORD PTR [eax-0x70573714],edi
  4037c5:	add    cl,BYTE PTR [edx+0x4c20ee06]
  4037cb:	popf   
  4037cc:	or     ch,BYTE PTR [esi-0x6]
  4037cf:	sbb    al,bl
  4037d1:	jle    0x403814
  4037d3:	retf   
  4037d4:	es mov dh,0x93
  4037d7:	add    al,0x1a
  4037d9:	jae    0x4037e4
  4037db:	popf   
  4037dc:	gs das 
  4037de:	cmp    edi,ebp
  4037e0:	pop    ss
  4037e1:	icebp  
  4037e2:	dec    ebx
  4037e3:	push   cs
  4037e4:	mov    cs,WORD PTR [bx+si-0x20]
  4037e8:	and    eax,0x10268f0c
  4037ed:	sar    cl,0xca
  4037f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037f1:	call   0x971c8f5b
  4037f6:	jp     0x4037a2
  4037f8:	das    
  4037f9:	jp     0x403858
  4037fb:	test   esp,eax
  4037fd:	lods   al,BYTE PTR ds:[esi]
  4037fe:	dec    esp
  4037ff:	fmul   QWORD PTR [edi]
  403801:	mov    dl,0x94
  403803:	xchg   edx,eax
  403804:	mov    edi,0xd7f3a317
  403809:	adc    DWORD PTR [esi+0x495dc83e],eax
  40380f:	mov    eax,0xe8a7644f
  403814:	add    al,0x21
  403816:	sbb    eax,0xcda7edbd
  40381b:	push   ebp
  40381c:	ret    0xfdec
  40381f:	test   BYTE PTR [ecx-0x12920e6],dh
  403825:	gs cmp al,0xa8
  403828:	ds leave 
  40382a:	stos   BYTE PTR es:[edi],al
  40382b:	sbb    eax,0x9b20ac1d
  403830:	leave  
  403831:	lds    eax,FWORD PTR [edi-0x3c]
  403834:	int3   
  403835:	aas    
  403836:	or     eax,0x80f51029
  40383b:	(bad)  
  40383c:	mov    edi,0xeb032e8f
  403841:	loop   0x4037e4
  403843:	aam    0x4c
  403845:	std    
  403846:	push   esp
  403847:	pop    edi
  403848:	inc    esp
  403849:	in     al,dx
  40384a:	ret    
  40384b:	xlat   BYTE PTR ds:[ebx]
  40384c:	rcl    edi,0xd
  40384f:	rcr    BYTE PTR [eax+0x2a0a045d],cl
  403855:	xchg   ebp,eax
  403856:	hlt    
  403857:	fadd   DWORD PTR [ecx]
  403859:	lds    ebx,FWORD PTR [edx-0x54ab0f8b]
  40385f:	aaa    
  403860:	inc    ebx
  403861:	or     BYTE PTR [edi+0x434743c8],0xf6
  403868:	inc    esp
  403869:	mov    edi,0x723c4535
  40386e:	xchg   DWORD PTR [edx-0x292008ed],ecx
  403874:	in     al,0xc4
  403876:	push   es
  403877:	sbb    al,0x30
  403879:	ror    eax,cl
  40387b:	inc    edx
  40387c:	inc    edi
  40387d:	dec    edx
  40387e:	pop    esp
  40387f:	push   edx
  403880:	adc    BYTE PTR [edi+0x42],ah
  403883:	hlt    
  403884:	mov    ecx,0x16698d93
  403889:	test   BYTE PTR [edx+0x54],dl
  40388c:	daa    
  40388d:	dec    ebx
  40388e:	cld    
  40388f:	out    0x62,eax
  403891:	out    0x49,al
  403893:	pusha  
  403894:	rcl    ah,1
  403896:	bound  esi,QWORD PTR [eax]
  403898:	xor    bl,BYTE PTR [edi]
  40389a:	adc    al,0x7d
  40389c:	arpl   WORD PTR [ebx-0x2a573ca],bp
  4038a2:	mov    al,0xd8
  4038a4:	jmp    0x4038f3
  4038a6:	fcomp  QWORD PTR [ebp-0x28]
  4038a9:	shl    DWORD PTR [esi],0xa2
  4038ac:	mov    ds:0x4d11702b,al
  4038b1:	popa   
  4038b2:	enter  0x2e6b,0xa1
  4038b6:	test   DWORD PTR [esi+ecx*1+0x38],ecx
  4038ba:	sahf   
  4038bb:	mov    bl,0xd4
  4038bd:	or     bl,cl
  4038bf:	pop    ds
  4038c0:	scas   al,BYTE PTR es:[edi]
  4038c1:	adc    DWORD PTR [esi],ebp
  4038c3:	inc    eax
  4038c4:	loope  0x40387e
  4038c6:	or     dl,BYTE PTR [edi-0x4f6e2251]
  4038cc:	jmp    0x40392f
  4038ce:	int3   
  4038cf:	mov    bh,bl
  4038d1:	add    al,0xff
  4038d3:	cmp    DWORD PTR [ebx+edi*1-0x35a1f5a9],ebx
  4038da:	or     al,0x1a
  4038dc:	xor    al,0x7b
  4038de:	cmp    BYTE PTR [edx+0x49],bl
  4038e1:	add    ebx,edi
  4038e3:	cmp    ah,BYTE PTR [ebp+0x6d]
  4038e6:	inc    esp
  4038e7:	xor    DWORD PTR [ebx+0x2],0x76
  4038eb:	mov    edx,0xc4c5a70b
  4038f0:	pusha  
  4038f1:	mov    bh,0xe0
  4038f3:	ror    BYTE PTR [ebp+0x57f555f9],1
  4038f9:	xor    BYTE PTR [edx-0x17],dh
  4038fc:	das    
  4038fd:	daa    
  4038fe:	sbb    BYTE PTR [ebx-0x7072ca9e],dl
  403904:	pop    es
  403905:	ss inc ebx
  403907:	adc    edx,DWORD PTR [edx-0x12]
  40390a:	jp     0x403949
  40390c:	(bad)  
  40390e:	std    
  40390f:	cmp    ecx,0x5aaa6d6d
  403915:	retf   0x2c42
  403918:	inc    ecx
  403919:	pop    edi
  40391a:	inc    esp
  40391b:	jmp    0x40398f
  40391d:	cmp    eax,ebx
  40391f:	add    BYTE PTR [esi-0x13a383c1],dh
  403925:	and    DWORD PTR [esi+ebx*2+0x4b253417],edx
  40392c:	dec    ebp
  40392d:	cwde   
  40392e:	mov    edx,edi
  403930:	test   al,0x6a
  403932:	ss (bad) 
  403934:	fs jb  0x4038df
  403937:	sbb    BYTE PTR [ecx-0x71f4ad18],dl
  40393d:	fadd   st,st(2)
  40393f:	sbb    bh,dl
  403941:	push   ds
  403942:	and    eax,0x9316b012
  403947:	add    BYTE PTR [eax+ebp*2-0x79],0x8b
  40394c:	inc    esp
  40394d:	call   0xf1528a41
  403952:	xchg   ecx,eax
  403953:	mov    dl,0xe6
  403955:	or     DWORD PTR [ecx-0x14],0x37a685c
  40395c:	jmp    0xc080:0x7adc8836
  403963:	mov    ds:0xf500e720,al
  403968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403969:	add    eax,0x8ef56fcb
  40396e:	lods   eax,DWORD PTR ds:[esi]
  40396f:	add    al,0x40
  403971:	cs or  eax,0x10178cd2
  403977:	xchg   edi,eax
  403978:	test   eax,0x6c64f0d
  40397d:	xor    DWORD PTR [eax-0x4ba3b4fa],esp
  403983:	repz and DWORD PTR [edi+0x190dae4a],esp
  40398a:	stos   BYTE PTR es:[edi],al
  40398b:	enter  0xc065,0x11
  40398f:	test   ecx,0x7216cbe
  403995:	sbb    edi,DWORD PTR [ebx]
  403997:	stos   BYTE PTR es:[edi],al
  403998:	addr16 call 0x14d7:0x2cb0d28e
  4039a0:	xchg   DWORD PTR [ebp+0x62],edx
  4039a3:	mov    BYTE PTR [edx+edx*4],ah
  4039a6:	ror    BYTE PTR [ebp-0x381874c0],cl
  4039ac:	test   DWORD PTR [ebx+eiz*4],ebp
  4039af:	neg    BYTE PTR [esi+ecx*1]
  4039b2:	adc    al,0xf5
  4039b4:	push   ss
  4039b5:	fiadd  DWORD PTR [ecx+0x3b5f6b00]
  4039bb:	into   
  4039bc:	cld    
  4039bd:	aad    0xe9
  4039bf:	mov    esi,0xb8f4be76
  4039c4:	mov    al,0xb1
  4039c6:	cdq    
  4039c7:	or     eax,0xb64bffff
  4039cc:	jecxz  0x403980
  4039ce:	xchg   edi,eax
  4039cf:	jmp    0x5106:0x18a66510
  4039d6:	xor    BYTE PTR [ecx-0x4b53daf5],dh
  4039dc:	mov    ebx,0x8e710c5b
  4039e1:	out    dx,al
  4039e2:	pop    ebp
  4039e3:	bound  ebx,QWORD PTR [esi+0x32975df7]
  4039e9:	and    eax,0xdf177f20
  4039ee:	loope  0x403a43
  4039f0:	sub    al,0x72
  4039f2:	addr16 aas 
  4039f4:	or     DWORD PTR [edx-0x6da8a91f],edi
  4039fa:	sub    esp,DWORD PTR [esi]
  4039fc:	xor    ebx,esi
  4039fe:	out    0xf6,eax
  403a00:	mov    edx,0x462a4b11
  403a05:	or     bh,dl
  403a07:	loopne 0x4039cf
  403a09:	ror    bh,1
  403a0b:	out    dx,al
  403a0c:	ds push ecx
  403a0e:	rcl    BYTE PTR [eax+edx*8],1
  403a11:	retf   
  403a12:	jmp    0x6139:0x18c5fb37
  403a19:	add    al,0x8
  403a1b:	push   ebp
  403a1c:	push   esp
  403a1d:	int3   
  403a1e:	jl     0x403a0c
  403a20:	shr    BYTE PTR [edx+0x50],cl
  403a23:	dec    edi
  403a24:	out    0x96,al
  403a26:	loope  0x4039fa
  403a28:	xchg   esp,eax
  403a29:	and    ah,BYTE PTR [ebx-0x5e]
  403a2c:	std    
  403a2d:	push   esi
  403a2e:	shl    BYTE PTR [eax],0x98
  403a31:	mov    ah,0x4c
  403a33:	or     eax,0x1876f6d8
  403a38:	or     DWORD PTR [edi+0x1d0e9a45],ecx
  403a3e:	fidiv  DWORD PTR [edx-0x24901393]
  403a44:	mov    cl,BYTE PTR [esi]
  403a46:	in     eax,0xfd
  403a48:	shl    BYTE PTR [edi],1
  403a4a:	add    BYTE PTR [esi+0x7a719b24],0x5f
  403a51:	shl    DWORD PTR [eax-0x4ba6f82],1
  403a57:	mov    ds:0x212bf2fb,al
  403a5c:	pop    ds
  403a5d:	in     eax,dx
  403a5e:	push   eax
  403a5f:	aas    
  403a60:	jecxz  0x4039f9
  403a62:	xchg   ebp,eax
  403a63:	outs   dx,BYTE PTR ds:[esi]
  403a64:	push   0xfffffff2
  403a66:	jle    0x403acf
  403a68:	popa   
  403a69:	(bad)  
  403a6a:	and    dl,BYTE PTR [edi+0x398dfe91]
  403a70:	leave  
  403a71:	aas    
  403a72:	inc    ebp
  403a73:	ret    0x5d8
  403a76:	je     0x403a41
  403a78:	jmp    0x7ac7:0x86ccaf1c
  403a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a80:	int    0xc3
  403a82:	pop    es
  403a83:	test   eax,0x91340a03
  403a88:	sar    DWORD PTR [ebp-0x2df44bcc],cl
  403a8e:	shl    DWORD PTR ds:0x1ea5ba0a,1
  403a94:	das    
  403a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a96:	(bad)  
  403a97:	mov    al,0xe3
  403a99:	(bad)  
  403a9a:	mov    dl,0x2d
  403a9c:	pop    esp
  403a9d:	push   ds
  403a9e:	jmp    0x403aa4
  403aa0:	lock mov WORD PTR [eax+0x1072d09],es
  403aa7:	(bad)  
  403aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aa9:	pop    es
  403aaa:	cwde   
  403aab:	jmp    0xad72:0xa9661833
  403ab2:	sbb    BYTE PTR [ebx+0x1c],al
  403ab5:	sbb    edx,esp
  403ab7:	sbb    al,ch
  403ab9:	std    
  403aba:	aad    0x15
  403abc:	xor    cl,BYTE PTR [edi+0x5f]
  403abf:	sub    BYTE PTR [edi+0x7d],ah
  403ac2:	popa   
  403ac3:	nop
  403ac4:	mov    al,0x74
  403ac6:	mov    dl,0x52
  403ac8:	in     al,0x81
  403aca:	pusha  
  403acb:	adc    DWORD PTR [esi],esi
  403acd:	push   ebx
  403ace:	call   0xf4638bb9
  403ad3:	fs or  eax,0x81a6ffb4
  403ad9:	pop    ebx
  403ada:	loope  0x403b5b
  403adc:	add    eax,0x61aad25f
  403ae1:	jno    0x403b3d
  403ae3:	call   0x36ef:0xa425a9d2
  403aea:	mov    ah,0x1c
  403aec:	sub    esp,eax
  403aee:	adc    ebx,ebx
  403af0:	imul   ecx,DWORD PTR [edi],0xb
  403af3:	je     0x403b2b
  403af5:	pop    edx
  403af6:	nop
  403af7:	and    DWORD PTR [ebp-0x1a],esi
  403afa:	pop    ss
  403afb:	mov    al,BYTE PTR [ebx-0x1a029c5f]
  403b01:	mov    edi,0xeb9afcb8
  403b06:	adc    cl,bl
  403b08:	jno    0x403ad3
  403b0a:	outs   dx,BYTE PTR ds:[esi]
  403b0b:	and    DWORD PTR [ebx+edx*1-0x2a2a8ded],0xffffffa8
  403b13:	gs adc al,0x0
  403b16:	fs (bad) 
  403b18:	cdq    
  403b19:	aas    
  403b1a:	push   ebp
  403b1b:	ss ret 0x1379
  403b1f:	fwait
  403b20:	ja     0x403b17
  403b22:	pop    ebp
  403b23:	xchg   edx,eax
  403b24:	pop    ebp
  403b25:	call   0xa6ed:0x7b55abf9
  403b2c:	fs xchg edx,eax
  403b2e:	adc    dl,BYTE PTR [edx]
  403b30:	mov    edx,0x79df7eff
  403b35:	xchg   esp,eax
  403b36:	sub    BYTE PTR [ebp+0x16],ah
  403b39:	push   esi
  403b3a:	mov    ss,WORD PTR [edx]
  403b3c:	rol    DWORD PTR [ecx],1
  403b3e:	jne    0x403b80
  403b40:	adc    BYTE PTR [esi],dl
  403b42:	sahf   
  403b43:	sahf   
  403b44:	jl     0x403aff
  403b46:	cmc    
  403b47:	mov    esi,0xa9b4cb3c
  403b4c:	push   esp
  403b4d:	pmuludq mm2,mm0
  403b50:	test   bh,bh
  403b52:	mov    bh,0x2b
  403b54:	loop   0x403b02
  403b56:	stc    
  403b57:	out    dx,al
  403b58:	inc    ebp
  403b59:	sbb    BYTE PTR [ebp-0x3dd34f25],ch
  403b5f:	loop   0x403afe
  403b61:	lods   al,BYTE PTR ds:[esi]
  403b62:	jne    0x403b0a
  403b64:	lods   eax,DWORD PTR ds:[esi]
  403b65:	je     0x403be0
  403b67:	sub    eax,ecx
  403b69:	mov    esi,0xb4f67657
  403b6e:	test   DWORD PTR [esi-0x31163db9],esi
  403b74:	sbb    ebp,DWORD PTR [ebx]
  403b76:	and    DWORD PTR [edi+0x42],eax
  403b79:	sub    bh,BYTE PTR ds:0xc9ac4bae
  403b7f:	pop    esi
  403b80:	fucomp st(4)
  403b82:	mov    dh,0x8b
  403b84:	and    al,0xce
  403b86:	cdq    
  403b87:	add    edx,ebp
  403b89:	mov    esi,0xf08c3022
  403b8e:	stc    
  403b8f:	pop    ds
  403b90:	into   
  403b91:	add    BYTE PTR [eax-0x208f2734],dl
  403b97:	xor    dh,BYTE PTR [ecx+0xbafb037]
  403b9d:	mov    esp,0x91651b8f
  403ba2:	adc    al,BYTE PTR [edx+0x72]
  403ba5:	les    eax,FWORD PTR fs:0x354a6316
  403bac:	in     al,0x1f
  403bae:	adc    eax,0x92d6b1e5
  403bb3:	daa    
  403bb4:	push   ds
  403bb5:	pop    ecx
  403bb6:	dec    edi
  403bb7:	mov    ebx,0x1fc8dcfe
  403bbc:	adc    eax,0x7d2b17d4
  403bc1:	(bad)  [ebp-0x2d4684e4]
  403bc7:	(bad)  
  403bc8:	jne    0x403bd6
  403bca:	lods   al,BYTE PTR ds:[esi]
  403bcb:	push   0x8fc341b8
  403bd0:	jnp    0x403b61
  403bd2:	mov    al,ds:0x69dc0cdc
  403bd7:	xor    dh,BYTE PTR [ecx-0x33]
  403bda:	ins    BYTE PTR es:[edi],dx
  403bdb:	outs   dx,BYTE PTR ds:[esi]
  403bdc:	xchg   ebp,eax
  403bdd:	push   0xffffffdc
  403bdf:	push   eax
  403be0:	retf   
  403be1:	jmp    0xad7c4a8c
  403be6:	(bad)  
  403be7:	in     eax,0x62
  403be9:	xchg   DWORD PTR [edx],edx
  403beb:	jmp    0x8fb2:0x9c073dc7
  403bf2:	sbb    DWORD PTR [esi-0x6c],esp
  403bf5:	fcom   DWORD PTR [edx]
  403bf7:	pop    ebx
  403bf8:	aam    0x85
  403bfa:	stc    
  403bfb:	retf   
  403bfc:	or     BYTE PTR [eax-0x7a],ah
  403bff:	test   DWORD PTR [esi+edi*1-0x3b],edi
  403c03:	mov    ds:0xfbf175a7,eax
  403c08:	adc    cl,BYTE PTR [edx]
  403c0a:	sbb    BYTE PTR [edx-0x6],0x44
  403c0e:	popa   
  403c0f:	push   es
  403c10:	xor    dl,cl
  403c12:	jnp    0x403bea
  403c14:	xchg   ebp,eax
  403c15:	fldz   
  403c17:	dec    ebx
  403c18:	pop    esp
  403c19:	shl    DWORD PTR [ebp+edi*1-0x4b],1
  403c1d:	clc    
  403c1e:	addr16 fsubr st(6),st
  403c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c22:	xchg   esp,eax
  403c23:	pop    ds
  403c24:	cmp    al,0x33
  403c26:	ficom  DWORD PTR [ebx]
  403c28:	jecxz  0x403bfe
  403c2a:	neg    DWORD PTR [ecx-0x78]
  403c2d:	mov    dh,0x4e
  403c2f:	bound  ebp,QWORD PTR [ebx-0x19c0f299]
  403c35:	scas   al,BYTE PTR es:[edi]
  403c36:	mov    eax,ds:0xa5a90b6e
  403c3b:	fcomp  QWORD PTR [edi]
  403c3d:	pusha  
  403c3e:	loope  0x403be9
  403c40:	aam    0xd4
  403c42:	mov    bh,0x31
  403c44:	out    dx,al
  403c45:	(bad)  
  403c46:	fdiv   st(3),st
  403c48:	xchg   DWORD PTR [ebx],ecx
  403c4a:	xchg   esp,eax
  403c4b:	or     al,0xe4
  403c4d:	inc    ecx
  403c4e:	(bad)  
  403c4f:	jle    0x403ca8
  403c51:	aas    
  403c52:	in     al,0x6a
  403c54:	(bad)  
  403c56:	imul   al
  403c58:	dec    eax
  403c59:	daa    
  403c5a:	jae    0x403c97
  403c5c:	push   edx
  403c5d:	push   edi
  403c5e:	adc    ch,BYTE PTR [edx+ecx*2-0xd]
  403c62:	in     eax,dx
  403c63:	shl    DWORD PTR [ecx+ecx*1],cl
  403c66:	jle    0x403cd0
  403c68:	xchg   edi,eax
  403c69:	cmp    al,0x2
  403c6b:	icebp  
  403c6c:	cs pusha 
  403c6e:	xor    BYTE PTR [ebx-0x2661c178],bh
  403c74:	xchg   DWORD PTR ss:[esi+0x619eb294],ebx
  403c7b:	jecxz  0x403c06
  403c7d:	repnz imul DWORD PTR [edi]
  403c80:	pop    esp
  403c81:	aas    
  403c82:	push   0xca7f7788
  403c87:	sti    
  403c88:	fnstcw WORD PTR [edi+ebx*4+0x42]
  403c8c:	test   dh,bh
  403c8e:	sar    cl,cl
  403c90:	pop    eax
  403c91:	jnp    0x403cc4
  403c93:	mov    DWORD PTR [edx-0x158de094],ebx
  403c99:	add    al,0x2e
  403c9b:	jp     0x403cd2
  403c9d:	(bad)  
  403c9e:	cld    
  403c9f:	cmc    
  403ca0:	(bad)  [ebx+eax*8-0x5ceb55bb]
  403ca7:	scas   al,BYTE PTR es:[edi]
  403ca8:	mov    ch,0xef
  403caa:	retf   0x2cc5
  403cad:	pop    ebp
  403cae:	or     BYTE PTR [esi-0x98df59d],bh
  403cb4:	xor    al,0xdf
  403cb6:	cs into 
  403cb8:	std    
  403cb9:	jmp    0x403cfc
  403cbb:	outs   dx,BYTE PTR ds:[esi]
  403cbc:	or     bl,BYTE PTR [ebp+0x1067f404]
  403cc2:	addr16 jmp 0x403c87
  403cc5:	popf   
  403cc6:	lods   eax,DWORD PTR ds:[esi]
  403cc7:	imul   esi,DWORD PTR [edx-0x627f20ed],0xec91f421
  403cd1:	aam    0x20
  403cd3:	sub    al,0xd8
  403cd5:	lods   al,BYTE PTR ds:[esi]
  403cd6:	pusha  
  403cd7:	cmp    al,0x3f
  403cd9:	je     0x403d05
  403cdb:	ror    DWORD PTR [ecx-0x2da3bf39],0xc6
  403ce2:	inc    ecx
  403ce3:	(bad)  
  403ce4:	lods   al,BYTE PTR ds:[esi]
  403ce5:	jge    0x403d29
  403ce7:	in     eax,0x3c
  403ce9:	and    ebx,edx
  403ceb:	xchg   esi,eax
  403cec:	das    
  403ced:	outs   dx,BYTE PTR ds:[esi]
  403cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cef:	or     dh,BYTE PTR [edx-0x66854c7f]
  403cf5:	xchg   edx,eax
  403cf6:	add    eax,0xb8209195
  403cfb:	div    esi
  403cfd:	mov    ds:0x78cc70b9,al
  403d02:	jbe    0x403d1a
  403d04:	jg     0x403d5a
  403d06:	(bad)  
  403d07:	fwait
  403d08:	gs in  al,0x36
  403d0b:	enter  0xb4f6,0x77
  403d0f:	and    eax,0x61280449
  403d14:	mov    dl,0x8
  403d16:	(bad)  
  403d17:	pop    edx
  403d18:	rol    DWORD PTR [ecx],0x87
  403d1b:	mov    dl,0xdc
  403d1d:	(bad)  
  403d1e:	xchg   esi,eax
  403d1f:	mov    ebp,0x831f8279
  403d24:	scas   al,BYTE PTR es:[edi]
  403d25:	xlat   BYTE PTR ds:[ebx]
  403d26:	pop    edx
  403d27:	cld    
  403d28:	bound  edx,QWORD PTR [esi+0x55]
  403d2b:	jno    0x403d51
  403d2d:	dec    eax
  403d2e:	push   ecx
  403d2f:	or     DWORD PTR [edx],ebp
  403d31:	into   
  403d32:	push   ebp
  403d33:	dec    eax
  403d34:	ret    
  403d35:	pop    ebp
  403d36:	in     al,dx
  403d37:	fwait
  403d38:	mov    ah,0x9c
  403d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d3b:	int    0x5a
  403d3d:	das    
  403d3e:	inc    esp
  403d3f:	imul   ecx,DWORD PTR [ebp-0x66726b01],0xc51b18ae
  403d49:	adc    DWORD PTR [esi+0x4f6fab28],0xffffffb7
  403d50:	ins    DWORD PTR es:[edi],dx
  403d51:	inc    eax
  403d52:	xor    al,0x11
  403d54:	scas   eax,DWORD PTR es:[edi]
  403d55:	fidiv  DWORD PTR [ecx-0x22833886]
  403d5b:	ins    BYTE PTR es:[edi],dx
  403d5c:	pop    eax
  403d5d:	mov    edx,DWORD PTR [eax+eiz*8-0x60f6d53]
  403d64:	adc    eax,DWORD PTR [ebx]
  403d66:	hlt    
  403d67:	push   es
  403d68:	mov    al,ds:0x2b86da2
  403d6d:	sub    dl,BYTE PTR [edx+0x552cca3f]
  403d73:	in     eax,0x13
  403d75:	push   edi
  403d76:	xchg   ecx,eax
  403d77:	push   ss
  403d78:	int    0x21
  403d7a:	pusha  
  403d7b:	inc    DWORD PTR [ebp-0x35515411]
  403d81:	sub    DWORD PTR [edx+0x1ff4008f],ebp
  403d87:	imul   edi,DWORD PTR [edi],0x42b222a5
  403d8d:	leave  
  403d8e:	dec    eax
  403d8f:	mov    ah,0x20
  403d91:	pop    esi
  403d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d93:	clc    
  403d94:	jo     0x403e0b
  403d96:	sbb    al,0xe5
  403d98:	pop    ebx
  403d99:	add    bl,BYTE PTR ds:0xc39727ec
  403d9f:	sbb    eax,DWORD PTR [ecx-0x306ff501]
  403da5:	stc    
  403da6:	jbe    0x403dab
  403da8:	popa   
  403da9:	inc    ebx
  403daa:	jns    0x403d87
  403dac:	in     eax,0xd6
  403dae:	or     eax,0xa5f63bdc
  403db3:	jmp    0xd58c:0x71ef81f5
  403dba:	xlat   BYTE PTR ds:[ebx]
  403dbb:	cwde   
  403dbc:	mov    eax,ds:0xfeb1e436
  403dc1:	scas   al,BYTE PTR es:[edi]
  403dc2:	aas    
  403dc3:	sbb    ebx,DWORD PTR [edi+0x213642d6]
  403dc9:	or     dh,BYTE PTR [edi]
  403dcb:	push   eax
  403dcc:	xlat   BYTE PTR ds:[ebx]
  403dcd:	and    BYTE PTR [esp+edi*1],ah
  403dd0:	mov    esi,0x80da2109
  403dd5:	push   cs
  403dd6:	test   eax,0xb35d0929
  403ddb:	aad    0xbf
  403ddd:	leave  
  403dde:	int3   
  403ddf:	fucomip st,st(5)
  403de1:	pop    eax
  403de2:	in     eax,dx
  403de3:	mov    ah,0x84
  403de5:	ret    0xab83
  403de8:	aas    
  403de9:	xor    ch,ah
  403deb:	(bad)  
  403dec:	js     0x403d7c
  403dee:	nop
  403def:	std    
  403df0:	and    al,0xba
  403df2:	add    eax,0xd1d8b056
  403df7:	imul   eax,DWORD PTR [edx-0x25],0xffffffcb
  403dfb:	xlat   BYTE PTR ds:[ebx]
  403dfc:	inc    esi
  403dfd:	adc    eax,0xbd42d782
  403e02:	jge    0x403db4
  403e04:	stos   BYTE PTR es:[edi],al
  403e05:	jp     0x403d8b
  403e07:	push   ebp
  403e08:	es loope 0x403e33
  403e0b:	into   
  403e0c:	(bad)
  403e0f:	lea    esp,[ecx+0x2c]
  403e12:	loope  0x403dbf
  403e14:	inc    ecx
  403e15:	ja     0x403e34
  403e17:	mov    ebx,0x1f04a93f
  403e1c:	stc    
  403e1d:	fstp   TBYTE PTR [eax-0x80]
  403e20:	pop    ds
  403e21:	push   ecx
  403e22:	jecxz  0x403dbf
  403e24:	sub    eax,0x16eab410
  403e29:	out    0xf,al
  403e2b:	jecxz  0x403e86
  403e2d:	lds    ebp,FWORD PTR [esi+esi*2+0x24]
  403e31:	js     0x403dce
  403e33:	stc    
  403e34:	scas   al,BYTE PTR es:[edi]
  403e35:	jmp    0xa03dafb2
  403e3a:	(bad)
  403e3d:	cmp    eax,0x6026e4e4
  403e42:	ret    
  403e43:	mov    dh,BYTE PTR [ecx]
  403e45:	push   ds
  403e46:	out    0xbc,eax
  403e48:	test   DWORD PTR [eax+0xb],eax
  403e4b:	not    BYTE PTR [edx]
  403e4d:	mov    ds:0x566a3997,al
  403e52:	sub    bh,BYTE PTR [ebp+0x107d324a]
  403e58:	push   es
  403e59:	mov    eax,ds:0x137b79df
  403e5e:	sbb    DWORD PTR [edi-0x606e245d],ebp
  403e64:	sub    BYTE PTR [ebx+0x6d],bh
  403e67:	ja     0x403e86
  403e69:	fs cmp ecx,edx
  403e6c:	ret    
  403e6d:	dec    ebx
  403e6e:	cmc    
  403e6f:	mov    bh,0x82
  403e71:	add    ah,BYTE PTR [esi+ebp*8+0x0]
  403e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e76:	scas   al,BYTE PTR es:[edi]
  403e77:	cmp    bl,BYTE PTR [edx+edi*1-0x7bb3da7a]
  403e7e:	and    al,0xe
  403e80:	jno    0x403ed4
  403e82:	pop    ecx
  403e83:	outs   dx,BYTE PTR ds:[esi]
  403e84:	mov    ecx,0xde6fdcd9
  403e89:	das    
  403e8a:	adc    ch,BYTE PTR [eiz*8-0x198dbc4c]
  403e91:	test   esp,edi
  403e93:	xlat   BYTE PTR ds:[ebx]
  403e94:	and    al,BYTE PTR [eax-0x1aafd100]
  403e9a:	inc    ecx
  403e9b:	in     al,0xa6
  403e9d:	aas    
  403e9e:	pop    edi
  403e9f:	imul   eax,DWORD PTR [ebp-0x5c],0xffffff8b
  403ea3:	sbb    al,0x89
  403ea5:	lods   al,BYTE PTR ds:[esi]
  403ea6:	sub    BYTE PTR [ecx+edx*1+0x76],al
  403eaa:	call   0xc1c8fc92
  403eaf:	xchg   ebx,eax
  403eb0:	mov    cl,0x99
  403eb2:	scas   al,BYTE PTR es:[edi]
  403eb3:	jg     0x403e77
  403eb5:	mov    ch,0x4b
  403eb7:	dec    ecx
  403eb8:	pop    edi
  403eb9:	add    esi,esi
  403ebb:	or     dh,cl
  403ebd:	jecxz  0x403e91
  403ebf:	(bad)  
  403ec0:	popf   
  403ec1:	push   ebp
  403ec2:	or     BYTE PTR [esi-0x2535d17b],cl
  403ec8:	adc    eax,0xa8564d23
  403ecd:	or     al,0x41
  403ecf:	xlat   BYTE PTR ds:[ebx]
  403ed0:	int3   
  403ed1:	push   ebp
  403ed2:	push   ecx
  403ed3:	into   
  403ed4:	or     DWORD PTR [edx],ebx
  403ed6:	xor    al,0x89
  403ed8:	and    DWORD PTR ss:[esi-0x439e54e3],edi
  403edf:	into   
  403ee0:	cld    
  403ee1:	dec    ebx
  403ee2:	ret    
  403ee3:	lods   eax,DWORD PTR ds:[esi]
  403ee4:	jno    0x403eaf
  403ee6:	test   BYTE PTR [edx],ah
  403ee8:	pop    edx
  403ee9:	sbb    DWORD PTR [edi],0xffffff8c
  403eec:	jecxz  0x403ef2
  403eee:	cmp    ch,BYTE PTR [eax+edi*4]
  403ef1:	loope  0x403ed0
  403ef3:	addr16 push ebp
  403ef5:	fs lock xchg ebx,eax
  403ef8:	mov    ch,0x7f
  403efa:	sub    eax,0xa0587aed
  403eff:	bnd jns 0x403ec5
  403f02:	sub    DWORD PTR [ebp-0x22],edx
  403f05:	xchg   esp,eax
  403f06:	std    
  403f07:	and    eax,0x790b6fe0
  403f0c:	sti    
  403f0d:	clc    
  403f0e:	pop    eax
  403f0f:	je     0x403f90
  403f11:	mov    eax,ds:0xaf74bbd1
  403f16:	bound  eax,QWORD PTR [eax-0x2532d6b0]
  403f1c:	(bad)  
  403f1d:	pusha  
  403f1e:	and    DWORD PTR ds:0x252766cb,0x281c7091
  403f28:	lock mov edi,0xafa9f2cf
  403f2e:	aaa    
  403f2f:	clc    
  403f30:	cs aam 0xd4
  403f33:	outs   dx,BYTE PTR ds:[esi]
  403f34:	mov    esp,0x7a839799
  403f39:	clc    
  403f3a:	fs popa 
  403f3c:	or     eax,0x6aac09b4
  403f41:	int3   
  403f42:	mov    cl,0xb
  403f44:	cmp    BYTE PTR [eax],dh
  403f46:	mov    al,0x77
  403f48:	fnstsw ax
  403f4a:	push   edi
  403f4b:	dec    edx
  403f4c:	or     dh,BYTE PTR [esi]
  403f4e:	cmp    eax,0x91df0c27
  403f53:	test   DWORD PTR [edx],ebx
  403f55:	sub    ecx,esi
  403f57:	pop    ds
  403f58:	test   BYTE PTR [esi+0xc],0x1e
  403f5c:	inc    esi
  403f5d:	ss ins DWORD PTR es:[edi],dx
  403f5f:	mov    eax,0xf23bd197
  403f64:	inc    esp
  403f65:	and    dh,BYTE PTR [edx]
  403f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f68:	mov    bl,0xd3
  403f6a:	jae    0x403f7a
  403f6c:	outs   dx,DWORD PTR ds:[esi]
  403f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f6e:	fst    DWORD PTR [edx]
  403f70:	or     ebx,0xffffffc0
  403f73:	sbb    ch,bh
  403f75:	mov    esp,0x559d0d4
  403f7a:	push   ebp
  403f7b:	ret    0x266f
  403f7e:	and    BYTE PTR [ecx+0x58],0x40
  403f82:	ins    BYTE PTR es:[edi],dx
  403f83:	(bad)  
  403f85:	pop    ds
  403f86:	mov    ah,BYTE PTR [eax]
  403f88:	or     al,0x62
  403f8a:	(bad)  
  403f8b:	jg     0x403f78
  403f8d:	add    BYTE PTR [esi+0x505db0b0],dl
  403f93:	sbb    dl,BYTE PTR [edi+0x4cdf0469]
  403f99:	outs   dx,BYTE PTR ds:[esi]
  403f9a:	mov    dh,BYTE PTR [ecx+edx*4-0x6f]
  403f9e:	test   al,0x8a
  403fa0:	sar    dl,cl
  403fa2:	pop    ebx
  403fa3:	pop    ecx
  403fa4:	inc    ecx
  403fa5:	stos   DWORD PTR es:[edi],eax
  403fa6:	mov    bh,0xba
  403fa8:	test   eax,0xb237c19f
  403fad:	pop    edi
  403fae:	adc    eax,0x73c12eb7
  403fb3:	xchg   ecx,eax
  403fb4:	dec    edi
  403fb5:	pop    eax
  403fb6:	pop    edi
  403fb7:	lods   al,BYTE PTR ds:[esi]
  403fb8:	cmp    BYTE PTR [eax],dh
  403fba:	sbb    DWORD PTR [edx],edx
  403fbc:	test   bl,cl
  403fbe:	into   
  403fbf:	jle    0x403fc2
  403fc1:	in     al,0x66
  403fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc4:	fwait
  403fc5:	mov    al,ds:0xcc2bab15
  403fca:	jae    0x403fe0
  403fcc:	mov    cl,0x23
  403fce:	sahf   
  403fcf:	push   ebx
  403fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fd1:	push   ebp
  403fd2:	fs mov cl,0x7f
  403fd5:	sbb    edi,DWORD PTR [edx-0x41fd7f8d]
  403fdb:	es dec ecx
  403fdd:	out    dx,al
  403fde:	adc    ebx,DWORD PTR [esp+eiz*8-0x2f]
  403fe2:	inc    ebp
  403fe3:	retf   0x43a7
  403fe6:	hlt    
  403fe7:	inc    esp
  403fe8:	stc    
  403fe9:	(bad)  
  403fea:	sbb    ch,ch
  403fec:	lock inc eax
  403fee:	call   0x7754:0xfc0f8374
  403ff5:	mov    cl,0xb7
  403ff7:	cld    
  403ff8:	xchg   esi,eax
  403ff9:	and    BYTE PTR [ecx+0x25f5b84f],bl
  403fff:	mov    dh,0x97
  404001:	and    DWORD PTR [edx+edx*2-0x3],eax
  404005:	mov    eax,ds:0xa949afd5
  40400a:	jae    0x404023
  40400c:	xchg   edi,eax
  40400e:	hlt    
  40400f:	mov    WORD PTR [ebx+0x64],gs
  404012:	loop   0x404043
  404014:	imul   ecx,DWORD PTR [esi],0xcde790ac
  40401a:	jo     0x40400c
  40401c:	ds xor eax,0x27689eb9
  404022:	shrd   DWORD PTR [edx],eax,0xca
  404026:	retf   0x7e6d
  404029:	repz int3 
  40402b:	sar    BYTE PTR [edi-0x36],1
  40402e:	les    edi,FWORD PTR [esi+0x3d]
  404031:	push   edi
  404032:	sub    DWORD PTR [edx-0x5],0xad418b51
  404039:	scas   eax,DWORD PTR es:[edi]
  40403a:	mov    ds:0x893434df,al
  40403f:	pop    ebx
  404040:	mov    edi,0x56a94ea5
  404045:	xor    BYTE PTR [eax-0x60],bl
  404048:	xor    dl,al
  40404a:	jo     0x40409e
  40404c:	dec    eax
  40404d:	add    dl,dh
  40404f:	push   ss
  404050:	mov    esi,edi
  404052:	scas   eax,DWORD PTR es:[edi]
  404053:	ja     0x40403e
  404055:	js     0x404004
  404057:	in     eax,dx
  404058:	fstp   DWORD PTR [eax-0x15d3ce09]
  40405e:	mov    dl,0xae
  404060:	xchg   ebx,eax
  404061:	add    al,BYTE PTR [esi+eax*8+0x6c32f13]
  404068:	(bad)  
  404069:	inc    eax
  40406a:	pushf  
  40406b:	sbb    eax,0xb603ff09
  404070:	jmp    0x40407e
  404072:	jbe    0x4040d0
  404074:	pop    ds
  404075:	(bad)  
  404076:	pushf  
  404077:	imul   ebx,DWORD PTR [esi+0x63],0x13
  40407b:	int3   
  40407c:	cs out dx,eax
  40407e:	mov    cl,BYTE PTR [esp+ebp*8-0x36]
  404082:	sub    ebx,DWORD PTR [ebx+0x3e]
  404085:	imul   ebp,DWORD PTR [ecx+0x4c],0xffffffa8
  404089:	push   0xffffffb9
  40408b:	pop    ecx
  40408c:	push   0x49ca0263
  404091:	lea    esp,[esi]
  404093:	stos   DWORD PTR es:[edi],eax
  404094:	mov    bh,0x63
  404096:	jle    0x404085
  404098:	mov    dl,0xe0
  40409a:	cmp    cl,BYTE PTR [ebp+0x567d372c]
  4040a0:	jno    0x40404b
  4040a2:	outs   dx,BYTE PTR ds:[esi]
  4040a3:	sar    DWORD PTR [edi+0x8],1
  4040a6:	test   DWORD PTR [bx+si-0x46f9],ebx
  4040ab:	sahf   
  4040ac:	out    dx,eax
  4040ad:	cmp    eax,0x65010af0
  4040b2:	cmp    BYTE PTR [edi],bl
  4040b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b5:	push   ebp
  4040b6:	hlt    
  4040b7:	mov    bl,BYTE PTR [esi+0x2b896025]
  4040bd:	dec    ebp
  4040be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040bf:	mov    edx,0x832da2b6
  4040c4:	sbb    eax,0x604bb27d
  4040c9:	repz scas eax,DWORD PTR es:[edi]
  4040cb:	in     al,dx
  4040cc:	or     BYTE PTR [ebp-0xb592b5],dl
  4040d2:	adc    BYTE PTR [ecx-0x64],dh
  4040d5:	(bad)  
  4040d6:	test   cl,0x7
  4040d9:	neg    BYTE PTR [edx+0xcda79ea]
  4040df:	shl    DWORD PTR [edx-0x7f],0x3b
  4040e3:	enter  0xb252,0xef
  4040e7:	jb     0x404072
  4040e9:	fcom   DWORD PTR [ecx+0x14cbbb03]
  4040f0:	ds add ah,al
  4040f3:	shl    dl,1
  4040f5:	xor    al,0x7
  4040f7:	sbb    al,0x4c
  4040f9:	in     eax,dx
  4040fa:	shl    DWORD PTR [ecx],0x52
  4040fd:	pcmpeqw mm1,QWORD PTR [edx+0x44ea9704]
  404104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404105:	and    dh,ah
  404107:	cmp    BYTE PTR [eax+0x5f399226],bh
  40410d:	pop    ebp
  40410e:	jle    0x4040d1
  404110:	cs pop esp
  404112:	cli    
  404113:	dec    edi
  404114:	addr16 pushf 
  404116:	mov    WORD PTR ds:0x5e7afd24,es
  40411c:	out    0x78,eax
  40411e:	(bad)  
  40411f:	aad    0x41
  404121:	xor    dh,dl
  404123:	dec    edi
  404124:	in     eax,dx
  404125:	mov    al,ds:0x1a0b2376
  40412a:	leave  
  40412b:	call   0xe5f3cee6
  404130:	push   cs
  404131:	dec    edx
  404132:	and    cl,BYTE PTR [esi-0x38]
  404135:	xchg   DWORD PTR [esi],ebp
  404137:	sub    al,0x42
  404139:	stc    
  40413a:	repnz (bad) 
  40413c:	bound  esi,QWORD PTR [esi]
  40413e:	(bad)  
  40413f:	push   edi
  404140:	js     0x404140
  404142:	aas    
  404143:	jmp    0x6897:0x5a7bda44
  40414a:	jg     0x404152
  40414c:	push   ecx
  40414d:	and    BYTE PTR [eax-0x7a],0xeb
  404151:	and    BYTE PTR ds:0xbd3ad4ec,ah
  404157:	mov    ds:0xe7a09986,al
  40415c:	sbb    al,0xca
  40415e:	mov    ch,0x7e
  404160:	out    dx,eax
  404161:	push   ebx
  404162:	cli    
  404163:	loope  0x40415a
  404165:	in     al,0xc6
  404167:	and    al,0x32
  40416a:	into   
  40416b:	ret    0x96a0
  40416e:	ret    0xd1ec
  404171:	and    BYTE PTR [edi],cl
  404173:	inc    ebx
  404174:	mov    dl,0x49
  404176:	xor    ecx,0x58
  404179:	fisttp DWORD PTR [esi-0x5f65610c]
  40417f:	cmp    ecx,esp
  404181:	icebp  
  404182:	xor    ebx,edi
  404184:	pushf  
  404185:	or     eax,0x59fadba8
  40418a:	or     bl,dl
  40418c:	push   ebp
  40418d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40418e:	jmp    0x404133
  404190:	in     eax,0x29
  404192:	inc    esi
  404193:	mov    ds:0xbc8d9e5a,al
  404198:	sub    eax,0x6eccb9dc
  40419d:	xor    DWORD PTR [ecx],esp
  40419f:	add    cl,0x46
  4041a2:	xchg   esp,eax
  4041a3:	push   esi
  4041a4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4041a6:	jecxz  0x404209
  4041a8:	das    
  4041a9:	or     eax,0xaaa10989
  4041ae:	lods   al,BYTE PTR ds:[esi]
  4041af:	shl    BYTE PTR [eax-0x5a],0xef
  4041b3:	and    eax,ebp
  4041b5:	ss aaa 
  4041b7:	fbld   TBYTE PTR [ebp+0x1e43191e]
  4041bd:	lods   al,BYTE PTR ds:[esi]
  4041be:	ds and ecx,esi
  4041c1:	pop    ebp
  4041c2:	xchg   ecx,eax
  4041c3:	jb     0x40420e
  4041c5:	pop    ds
  4041c6:	xor    esi,ecx
  4041c8:	into   
  4041c9:	xor    ebx,DWORD PTR [edi-0x10]
  4041cc:	jo     0x404225
  4041ce:	dec    ebp
  4041cf:	int3   
  4041d0:	dec    edx
  4041d1:	test   eax,0x909ea73
  4041d6:	fistp  QWORD PTR [esi+0x13]
  4041d9:	loope  0x40420b
  4041db:	inc    esp
  4041dc:	dec    esi
  4041dd:	(bad)  
  4041de:	lods   eax,DWORD PTR ds:[esi]
  4041df:	inc    BYTE PTR [ebx]
  4041e1:	scas   al,BYTE PTR es:[edi]
  4041e2:	out    0xbd,eax
  4041e4:	cwde   
  4041e5:	mov    ch,0xb6
  4041e7:	xchg   esi,eax
  4041e8:	ja     0x4041a6
  4041ea:	jmp    0x8271:0xcbbcef86
  4041f1:	mov    eax,ds:0x51a3d06
  4041f6:	call   0xfe847fe8
  4041fb:	addr16 das 
  4041fd:	call   0x60b32561
  404202:	wbinvd 
  404204:	jl     0x404260
  404206:	scas   eax,DWORD PTR es:[edi]
  404207:	nop
  404208:	(bad)  
  404209:	out    dx,al
  40420a:	push   ss
  40420b:	sbb    DWORD PTR [ebx],0x2b
  40420e:	retf   
  40420f:	xor    al,BYTE PTR [esi]
  404211:	inc    edx
  404212:	mov    ebp,0x1c9ce3de
  404217:	add    DWORD PTR [ebx+esi*2-0x7c],ebx
  40421b:	pop    edi
  40421c:	call   0xbb86:0x69168958
  404223:	sub    ecx,eax
  404225:	inc    edi
  404226:	idiv   DWORD PTR [ebx+0x7f]
  404229:	fimul  WORD PTR [ecx+0x46e6c921]
  40422f:	ins    DWORD PTR es:[edi],dx
  404230:	inc    edi
  404231:	cmp    eax,0x3197638e
  404236:	cld    
  404237:	ror    BYTE PTR [esi-0x15366221],cl
  40423d:	faddp  st(2),st
  40423f:	popa   
  404240:	mov    esp,DWORD PTR [ebx-0x63]
  404243:	sbb    ch,BYTE PTR [ecx-0x1017da26]
  404249:	out    dx,eax
  40424a:	adc    BYTE PTR [ecx+0x62],bl
  40424d:	jge    0x404239
  40424f:	daa    
  404250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404251:	jo     0x40421f
  404253:	popf   
  404254:	(bad)  
  404256:	mov    ch,BYTE PTR ds:[esi]
  404259:	cmp    edi,edi
  40425b:	ja     0x40424f
  40425d:	xlat   BYTE PTR ds:[ebx]
  40425e:	(bad)  [edx]
  404260:	data16 (bad) 
  404262:	frstor [ebp+0x4e]
  404265:	pop    esi
  404266:	pop    edi
  404267:	out    dx,eax
  404268:	cwde   
  404269:	popf   
  40426a:	or     BYTE PTR [ebx+edi*1],0x7d
  40426e:	jnp    0x4041fd
  404270:	xchg   BYTE PTR [esi],bh
  404272:	jbe    0x404233
  404274:	pop    esi
  404275:	sub    DWORD PTR [ebx+edx*1],ecx
  404278:	jnp    0x40427c
  40427a:	das    
  40427b:	jmp    0x404266
  40427d:	or     BYTE PTR [esi+0x6632dad4],dh
  404283:	stos   DWORD PTR es:[edi],eax
  404284:	ret    
  404285:	inc    ecx
  404286:	adc    esp,ecx
  404288:	int    0xcc
  40428a:	dec    edx
  40428b:	(bad)
  404290:	inc    ebx
  404292:	in     al,dx
  404293:	adc    eax,0x180eb9c2
  404298:	pop    eax
  404299:	leave  
  40429a:	lods   eax,DWORD PTR ds:[esi]
  40429b:	push   esp
  40429c:	sub    DWORD PTR [edx],eax
  40429e:	mov    dl,0xe4
  4042a0:	in     al,0x85
  4042a2:	dec    eax
  4042a3:	arpl   WORD PTR [edx+0x4e79fee3],bx
  4042a9:	ins    BYTE PTR es:[edi],dx
  4042aa:	mov    DWORD PTR fs:[edi+ecx*8+0x70],edi
  4042af:	pop    esi
  4042b0:	sbb    BYTE PTR [ecx-0x1774103c],dh
  4042b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b7:	mov    ah,0x28
  4042b9:	add    ah,dl
  4042bb:	in     al,0x0
  4042bd:	sbb    al,0x49
  4042bf:	adc    bh,dl
  4042c1:	xchg   esp,eax
  4042c2:	cmp    al,0x68
  4042c4:	test   dh,bh
  4042c6:	mov    bh,0x71
  4042c8:	lea    ebx,[ebx-0x23]
  4042cb:	cmp    DWORD PTR [esi+0x22],eax
  4042ce:	jns    0x4042f4
  4042d0:	shr    edx,1
  4042d2:	dec    ebp
  4042d3:	jmp    0xd07040eb
  4042d8:	ja     0x404345
  4042da:	gs stos DWORD PTR es:[edi],eax
  4042dc:	int    0xd7
  4042de:	inc    ecx
  4042df:	adc    ecx,DWORD PTR [ebx]
  4042e1:	(bad)  
  4042e2:	in     al,dx
  4042e3:	jns    0x4042fc
  4042e5:	pop    esi
  4042e6:	fsubr  QWORD PTR [esi]
  4042e8:	outs   dx,BYTE PTR ds:[esi]
  4042e9:	out    0xdf,al
  4042eb:	inc    ebx
  4042ec:	(bad)  
  4042ee:	and    dh,BYTE PTR [ecx]
  4042f0:	out    dx,eax
  4042f1:	ins    DWORD PTR es:[edi],dx
  4042f2:	idiv   dh
  4042f4:	imul   esp,ebp,0xc0ca6e8f
  4042fa:	arpl   cx,di
  4042fc:	cld    
  4042fd:	inc    esi
  4042fe:	mov    ebp,0x18443fd0
  404303:	xor    eax,ebp
  404305:	(bad)  
  404306:	cmp    eax,0xce687fb
  40430b:	pusha  
  40430c:	xchg   edx,eax
  40430d:	(bad)  
  40430e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40430f:	int3   
  404310:	std    
  404311:	mov    ah,0x16
  404313:	sbb    BYTE PTR [esi-0x80],al
  404316:	test   eax,0x5650c4ff
  40431b:	iret   
  40431c:	dec    esi
  40431d:	add    BYTE PTR [ebp-0x3973f93c],bl
  404323:	cmp    BYTE PTR [eax+ebx*2],al
  404326:	jno    0x404318
  404328:	dec    ecx
  404329:	jne    0x404320
  40432b:	clc    
  40432c:	xlat   BYTE PTR ds:[ebx]
  40432d:	aas    
  40432e:	mov    cl,0x32
  404330:	xor    esp,ebx
  404332:	dec    ebx
  404333:	mov    ds:0xbe363cf0,eax
  404338:	jne    0x404391
  40433a:	enter  0x5ae3,0x6d
  40433e:	mov    eax,0x95636a08
  404343:	rcl    DWORD PTR [edi],0x5
  404346:	mul    DWORD PTR [eax-0x5b867640]
  40434c:	and    ebp,DWORD PTR [eax+0x478877c5]
  404352:	add    DWORD PTR [eax-0x5e2b2759],edi
  404358:	jecxz  0x4042eb
  40435a:	xor    eax,0x2574698
  40435f:	imul   BYTE PTR [ebx]
  404361:	mov    eax,ds:0x3c1c14d2
  404366:	inc    ecx
  404367:	dec    edi
  404368:	imul   ebp,DWORD PTR [edi-0x74],0x13a9bb84
  40436f:	and    BYTE PTR [ecx-0x58dacde],al
  404375:	sub    DWORD PTR [esi+0x3d],edx
  404378:	call   0xe9d6:0x3a733d15
  40437f:	div    DWORD PTR [esi]
  404381:	pop    edx
  404382:	loop   0x40436c
  404384:	sbb    dh,BYTE PTR [esi]
  404386:	cmp    ebx,0x2e
  404389:	mov    ecx,0xe8ad9daa
  40438e:	mov    eax,0xfcb06872
  404393:	outs   dx,BYTE PTR ds:[esi]
  404394:	xor    eax,edi
  404396:	xor    BYTE PTR [ebp+0x2e],al
  404399:	popa   
  40439a:	inc    ebp
  40439b:	aas    
  40439c:	mov    esi,0xecdd8053
  4043a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043a2:	xchg   edx,eax
  4043a3:	dec    esi
  4043a4:	dec    ebx
  4043a5:	mov    ebp,0x3f47588b
  4043aa:	(bad)  
  4043ab:	leave  
  4043ac:	ins    DWORD PTR es:[edi],dx
  4043ad:	retf   
  4043ae:	call   FWORD PTR [edi+0xc2b2ab3]
  4043b4:	pop    ebx
  4043b5:	xor    BYTE PTR [ebx],0xc9
  4043b8:	pop    ebp
  4043b9:	je     0x4043c0
  4043bb:	adc    eax,0xd715659a
  4043c0:	sar    BYTE PTR [ebp-0x62eb6b28],cl
  4043c6:	enter  0x815f,0x36
  4043ca:	add    eax,0x4ab7ac83
  4043cf:	jbe    0x4043a1
  4043d1:	pop    esi
  4043d2:	scas   al,BYTE PTR es:[edi]
  4043d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043d4:	xor    DWORD PTR ds:0x6614ad99,edi
  4043da:	and    eax,0xe862e24a
  4043df:	push   es
  4043e0:	cwde   
  4043e1:	mov    ebp,0x2e4bb010
  4043e6:	or     ebp,ebx
  4043e8:	dec    esp
  4043e9:	inc    eax
  4043ea:	out    0xc1,al
  4043ec:	gs dec ebp
  4043ee:	(bad)  
  4043ef:	xor    DWORD PTR [eax-0x3b],ebp
  4043f2:	js     0x404409
  4043f4:	add    ebp,edx
  4043f6:	xchg   DWORD PTR [eax+0x9],ebp
  4043f9:	mov    dl,0x92
  4043fb:	je     0x404403
  4043fd:	scas   al,BYTE PTR es:[edi]
  4043fe:	cmp    DWORD PTR [eax-0x52],eax
  404401:	mov    ds:0x5f115b5b,eax
  404406:	sub    bh,BYTE PTR [eax+0x4eb92005]
  40440c:	je     0x4043b6
  40440e:	lahf   
  40440f:	pop    ebp
  404410:	push   ss
  404411:	test   ah,cl
  404413:	mov    dh,0x84
  404415:	jb     0x4043d8
  404417:	fbld   TBYTE PTR [ebp+0x6c]
  40441a:	sbb    ah,BYTE PTR [eax-0x2451b902]
  404420:	mov    dh,0xe
  404422:	mov    bl,0xab
  404424:	ror    DWORD PTR [ebx-0x8],0x29
  404428:	sahf   
  404429:	xchg   edi,eax
  40442a:	aam    0x48
  40442c:	aas    
  40442d:	call   0xcf57b65b
  404432:	jnp    0x404429
  404434:	in     eax,dx
  404435:	shl    BYTE PTR [edx+0x5b820f7f],0x9d
  40443c:	jmp    0x4043f8
  40443e:	dec    eax
  40443f:	xor    al,0x6b
  404441:	xor    DWORD PTR [edx],eax
  404443:	in     eax,dx
  404444:	cmp    DWORD PTR [ebx-0x28d9160e],ecx
  40444a:	popf   
  40444b:	push   edi
  40444c:	dec    edi
  40444d:	push   esi
  40444e:	(bad)  
  40444f:	pop    ebp
  404450:	cwde   
  404451:	sbb    BYTE PTR [edi],ch
  404453:	cmp    eax,ecx
  404455:	mov    esi,0x20f3c969
  40445a:	dec    esi
  40445b:	mov    al,ds:0xbadd7659
  404460:	push   ds
  404461:	adc    edx,eax
  404463:	call   0x7dd04faa
  404468:	push   ss
  404469:	rol    DWORD PTR [esi],cl
  40446b:	cs inc esp
  40446d:	adc    BYTE PTR [edx-0x2f8a5ecc],ch
  404473:	dec    esp
  404474:	aam    0xe8
  404476:	xor    BYTE PTR [ecx+eiz*4+0x3c8a7d3],bl
  40447d:	imul   esi,DWORD PTR [ebx],0x75
  404480:	aaa    
  404481:	test   BYTE PTR [ecx-0x7a],ch
  404484:	sub    dl,BYTE PTR [esi]
  404486:	sbb    al,0x73
  404488:	add    al,0x1a
  40448a:	and    al,0x2f
  40448c:	sbb    eax,0x2a7b7dd1
  404491:	jb     0x40450e
  404493:	addr16 pop edx
  404495:	jl     0x40446f
  404497:	test   esp,esp
  404499:	xor    cl,BYTE PTR [ebx+0x198c2b60]
  40449f:	push   ss
  4044a0:	jle    0x4044a4
  4044a2:	and    ecx,edi
  4044a4:	ins    DWORD PTR es:[edi],dx
  4044a5:	cmc    
  4044a6:	(bad)  
  4044a7:	mov    es,WORD PTR [ecx-0x5416d08e]
  4044ad:	dec    esp
  4044ae:	pushf  
  4044af:	inc    edx
  4044b0:	into   
  4044b1:	push   ebp
  4044b2:	push   ss
  4044b3:	xor    ch,BYTE PTR [eax+0x1a]
  4044b6:	cli    
  4044b7:	add    cl,BYTE PTR [eax+0x33]
  4044ba:	mov    ch,0xe3
  4044bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044bd:	pop    ss
  4044be:	test   BYTE PTR [edx-0x46],ah
  4044c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c2:	out    dx,al
  4044c3:	popf   
  4044c4:	mov    esp,0x3eaca71c
  4044c9:	loop   0x4044c1
  4044cb:	(bad)  
  4044cc:	sub    BYTE PTR [edx-0x23116023],cl
  4044d2:	out    0x63,eax
  4044d4:	mov    dh,0x77
  4044d6:	jne    0x4044c3
  4044d8:	dec    edx
  4044d9:	inc    esp
  4044da:	daa    
  4044db:	das    
  4044dc:	or     DWORD PTR [edx],ecx
  4044de:	jl     0x404546
  4044e0:	out    dx,al
  4044e1:	xchg   esp,eax
  4044e2:	mov    ch,ch
  4044e4:	in     al,dx
  4044e5:	jle    0x40450c
  4044e7:	das    
  4044e8:	(bad)  
  4044e9:	pop    esi
  4044ea:	scas   eax,DWORD PTR es:[edi]
  4044eb:	sbb    eax,0xdafaf066
  4044f0:	sub    al,0xfe
  4044f2:	mov    ebp,0x57b2aec3
  4044f7:	xor    BYTE PTR [esi+0x16dae6e0],bl
  4044fd:	mov    ecx,0x67ab1dcb
  404502:	in     eax,0xcc
  404504:	push   cs
  404505:	ja     0x4044af
  404507:	shl    BYTE PTR [esi],1
  404509:	fnsave [edx+eiz*1+0x63]
  40450d:	out    dx,al
  40450e:	inc    edx
  40450f:	xchg   ebx,eax
  404510:	pop    esi
  404511:	loop   0x404510
  404513:	jle    0x4044df
  404515:	inc    edi
  404516:	lods   eax,DWORD PTR ds:[esi]
  404517:	outs   dx,BYTE PTR ds:[esi]
  404518:	shr    BYTE PTR [ecx-0x1c],0x33
  40451c:	xchg   edx,eax
  40451d:	test   DWORD PTR [ebx+ecx*4],ebp
  404520:	mov    BYTE PTR [ebp+edi*8-0x35],ch
  404524:	imul   BYTE PTR [edi-0x202cffa0]
  40452a:	fadd   st(0),st
  40452c:	arpl   bp,sp
  40452e:	or     bl,dl
  404530:	pop    edx
  404531:	sub    ebp,ebp
  404533:	sbb    eax,0x256b3fb9
  404538:	dec    ebx
  404539:	fist   WORD PTR [edx]
  40453b:	jg     0x404507
  40453d:	cwde   
  40453e:	je     0x4044d5
  404540:	gs call 0xdaf8:0x546039ec
  404548:	mov    ebp,0xd2b9a7d3
  40454d:	mov    gs,WORD PTR [esi]
  40454f:	ins    DWORD PTR es:[edi],dx
  404550:	jne    0x404575
  404552:	sub    BYTE PTR ds:0xf5ea175f,bh
  404558:	pop    ebp
  404559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40455a:	cmp    cl,BYTE PTR [esi+0x6a]
  40455d:	mov    esi,0xf38c8a16
  404562:	outs   dx,DWORD PTR ds:[esi]
  404563:	jae    0x4045cd
  404565:	sets   BYTE PTR [ebx]
  404568:	cmp    BYTE PTR [eax+0x3f],dl
  40456b:	xor    BYTE PTR [ecx-0x5c],0xb2
  40456f:	stos   DWORD PTR es:[edi],eax
  404570:	push   esi
  404571:	(bad)  
  404572:	in     eax,dx
  404573:	ss mov ch,0xf4
  404576:	pop    edx
  404577:	sti    
  404578:	mov    dl,0x79
  40457a:	ss inc esi
  40457c:	inc    edx
  40457d:	lock xchg ecx,eax
  40457f:	mov    ds:0x553f8546,al
  404584:	mov    edi,0x3c8c224e
  404589:	pop    ecx
  40458a:	push   ds
  40458b:	je     0x40451b
  40458d:	bnd addr16 js 0x404533
  404591:	xor    ecx,DWORD PTR [eax+edi*2+0x5ffb27ab]
  404598:	mov    ds:0x8e83efdd,eax
  40459d:	inc    ebx
  40459e:	cmp    eax,0xe110fc5
  4045a3:	mov    bl,BYTE PTR [edx]
  4045a5:	mov    eax,0xc4aaa2f
  4045aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ab:	cld    
  4045ac:	add    dl,BYTE PTR [eax]
  4045ae:	(bad)  
  4045af:	in     eax,dx
  4045b0:	or     eax,0x13606576
  4045b5:	pop    ebx
  4045b6:	sbb    al,0xf8
  4045b8:	aad    0xc
  4045ba:	jnp    0x3509de48
  4045c0:	or     BYTE PTR [eax],cl
  4045c2:	dec    ebp
  4045c3:	mov    ds:0xfb6b56c6,al
  4045c8:	test   eax,0xe5ba993
  4045cd:	mov    esp,0x10520c3f
  4045d2:	add    esi,DWORD PTR [edi+0x20a7c269]
  4045d8:	xchg   esp,eax
  4045d9:	in     eax,dx
  4045da:	add    ch,BYTE PTR [esi]
  4045dc:	in     al,0xc1
  4045de:	jl     0x4045d7
  4045e0:	jae    0x4045bb
  4045e2:	or     BYTE PTR [edi-0x8ae331e],ch
  4045e8:	mov    WORD PTR [ebp+0x47],?
  4045eb:	pushf  
  4045ec:	int    0xd8
  4045ee:	lock cmp BYTE PTR [ebp+eax*4-0x64],bh
  4045f3:	mov    ds,WORD PTR [ebp-0x760f47d9]
  4045f9:	xchg   ebp,eax
  4045fa:	stos   BYTE PTR es:[edi],al
  4045fb:	loop   0x404583
  4045fd:	call   0xb3e9:0x892d98f1
  404604:	js     0x404666
  404606:	sbb    DWORD PTR [eax+ecx*2+0x55952bca],edx
  40460d:	push   es
  40460e:	inc    edx
  40460f:	or     ch,BYTE PTR [ebx+0x3907ca32]
  404615:	mov    al,0x97
  404617:	ficom  WORD PTR [eax]
  404619:	or     eax,0x51736696
  40461e:	imul   esp,esp,0x67806ab
  404624:	push   ecx
  404625:	mov    fs,WORD PTR ds:0xb27768c4
  40462b:	jae    0x40462b
  40462d:	sbb    BYTE PTR [edi+0x51bfd58b],0x6b
  404634:	imul   edi,DWORD PTR [esi-0x5df0563c],0x7459d930
  40463e:	sar    DWORD PTR [bx-0x62],0xe5
  404643:	in     eax,dx
  404644:	sbb    esp,DWORD PTR [edx-0x5b]
  404647:	xlat   BYTE PTR ds:[ebx]
  404648:	(bad)  
  40464a:	push   ds
  40464b:	lea    ebp,[ebp+0x6388c77b]
  404651:	iret   
  404652:	pop    eax
  404653:	xchg   esi,eax
  404654:	pause  
  404656:	mov    gs,WORD PTR [esi+0x1e]
  404659:	outs   dx,BYTE PTR ds:[esi]
  40465a:	in     eax,0x75
  40465c:	(bad)  
  40465d:	adc    BYTE PTR [edx],ch
  40465f:	lock xchg esp,eax
  404661:	or     eax,0x656c6b89
  404666:	dec    esp
  404667:	or     al,0x70
  404669:	into   
  40466a:	xchg   esi,eax
  40466b:	sub    BYTE PTR [esi],0x90
  40466e:	or     DWORD PTR [esi+0x4eeaf9b7],edx
  404674:	dec    eax
  404675:	mov    ebp,0x91fb24bf
  40467a:	dec    eax
  40467b:	sub    esi,ecx
  40467d:	mov    ah,0x7e
  40467f:	add    edx,esp
  404681:	jae    0x40469b
  404683:	das    
  404684:	jno    0x40468b
  404686:	lds    ecx,FWORD PTR [esi-0xb4da55f]
  40468c:	iret   
  40468d:	push   0x8f3ea1a4
  404692:	mov    ds:0xd9d86b50,eax
  404697:	call   0xba2a:0x9db72c39
  40469e:	jae    0x4046c9
  4046a0:	or     eax,0x17ac86f0
  4046a5:	push   edi
  4046a6:	fild   DWORD PTR [eax-0x63067d04]
  4046ac:	aaa    
  4046ad:	and    eax,0x3de574e6
  4046b2:	or     bl,BYTE PTR [edx]
  4046b4:	lock jmp 0x404721
  4046b7:	jmp    0x3be13b92
  4046bc:	lahf   
  4046bd:	int    0x8
  4046bf:	leave  
  4046c0:	and    bl,BYTE PTR [edx+0x2c645c3d]
  4046c6:	mov    dl,0x95
  4046c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046c9:	mov    dh,0x1
  4046cb:	call   FWORD PTR fs:[ebx+edi*8-0x44]
  4046d0:	jns    0x404670
  4046d2:	out    dx,al
  4046d3:	in     al,dx
  4046d4:	retf   0xbbca
  4046d7:	jnp    0x404716
  4046d9:	jnp    0x404696
  4046db:	aad    0x70
  4046dd:	pop    edx
  4046de:	inc    edi
  4046df:	imul   ecx,ebx,0xb60713c1
  4046e5:	retf   0x463d
  4046e8:	call   0x69de:0x27232b89
  4046ef:	fwait
  4046f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f1:	add    al,0x29
  4046f3:	mov    eax,ds:0x7e21e2be
  4046f8:	stc    
  4046f9:	pop    edi
  4046fa:	outs   dx,BYTE PTR ds:[esi]
  4046fb:	jle    0x404773
  4046fd:	ja     0x40475c
  4046ff:	bound  edi,QWORD PTR [ebp-0x61]
  404702:	ror    DWORD PTR [esi+0x53f5fc82],cl
  404708:	mov    cl,0xf7
  40470a:	or     BYTE PTR [ebp+0x6b0a5e1d],bl
  404710:	ins    BYTE PTR es:[edi],dx
  404711:	push   ecx
  404712:	out    dx,eax
  404713:	mov    edx,0xb5a0561
  404718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404719:	xor    eax,0xfead1e1f
  40471e:	inc    ecx
  40471f:	sahf   
  404720:	in     eax,dx
  404721:	mov    ds:0x8c014486,al
  404726:	inc    edx
  404727:	scas   al,BYTE PTR es:[edi]
  404728:	out    0x59,al
  40472a:	or     al,0x8e
  40472c:	ja     0x404792
  40472e:	not    BYTE PTR [edi]
  404730:	rol    DWORD PTR [eax+eiz*4+0x63],1
  404734:	iret   
  404735:	js     0x404747
  404737:	xor    ebp,esi
  404739:	mov    dl,0x28
  40473b:	sbb    al,0x5f
  40473d:	and    ecx,ecx
  40473f:	and    BYTE PTR ds:0x94b0936a,bh
  404745:	cmp    eax,0x73b2ab2b
  40474a:	mov    edi,0xcef45859
  40474f:	sbb    BYTE PTR [ecx+0x60],ah
  404752:	mov    ebx,0x5b14eeb0
  404757:	pop    esp
  404758:	pop    ebp
  404759:	int    0xff
  40475b:	pop    ds
  40475c:	sbb    al,0xe8
  40475e:	in     eax,dx
  40475f:	js     0x404710
  404761:	leave  
  404762:	icebp  
  404763:	mov    ds:0x1cb8bbbe,al
  404768:	frstor ds:0xd39aade3
  40476e:	pusha  
  40476f:	inc    edi
  404770:	pop    ds
  404771:	pop    ebx
  404772:	adc    al,BYTE PTR [edi+edx*4+0x6b]
  404776:	or     DWORD PTR [eax],esp
  404778:	outs   dx,BYTE PTR ds:[esi]
  404779:	cmc    
  40477a:	(bad)  
  40477b:	cmp    DWORD PTR [edx],esi
  40477d:	mov    ss:0xaed856f,eax
  404783:	jge    0x404792
  404785:	das    
  404786:	mov    ah,0x3e
  404788:	push   ecx
  404789:	mov    al,ds:0x63094f6a
  40478e:	rcr    dl,0xd6
  404791:	push   0x64
  404793:	clc    
  404794:	jno    0x40478f
  404796:	int3   
  404797:	xchg   ecx,eax
  404798:	mov    ds:0xc96c7934,al
  40479d:	iret   
  40479e:	mov    al,0xb8
  4047a0:	(bad)  
  4047a1:	scas   eax,DWORD PTR es:[edi]
  4047a2:	nop
  4047a3:	mov    esp,0x2811276e
  4047a8:	push   edi
  4047a9:	jl     0x40478c
  4047ab:	leave  
  4047ac:	shl    DWORD PTR [esi],cl
  4047ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b0:	imul   edi,edx,0x9802d0ce
  4047b6:	in     al,dx
  4047b7:	pop    ss
  4047b8:	mov    WORD PTR [esi],fs
  4047ba:	mov    ah,0x64
  4047bc:	adc    eax,0x9414c1d5
  4047c1:	test   al,0x44
  4047c3:	push   ss
  4047c4:	fisub  WORD PTR [ecx]
  4047c6:	mov    dh,BYTE PTR [edx]
  4047c8:	sti    
  4047c9:	out    0x5e,eax
  4047cb:	push   0x36
  4047cd:	bound  ebp,QWORD PTR [ecx]
  4047cf:	rcr    BYTE PTR [esi+esi*4+0x3a],1
  4047d3:	pop    ds
  4047d4:	sbb    eax,DWORD PTR [esi-0x3a]
  4047d7:	jnp    0x40476f
  4047d9:	dec    ecx
  4047da:	xor    eax,0xaf24698a
  4047df:	inc    edi
  4047e0:	hlt    
  4047e1:	push   esi
  4047e2:	hlt    
  4047e3:	arpl   WORD PTR ss:[edx+esi*4-0x23b604a3],sp
  4047eb:	fwait
  4047ec:	cli    
  4047ed:	ss push ebp
  4047ef:	imul   eax,ecx,0x63
  4047f2:	and    al,BYTE PTR [ebp+0x4c]
  4047f5:	sub    edx,0xd1030371
  4047fb:	fwait
  4047fc:	xchg   BYTE PTR [edi-0x4dd24c13],ch
  404802:	ins    DWORD PTR es:[edi],dx
  404803:	or     ah,BYTE PTR [edi+0x21]
  404806:	cmp    edi,eax
  404808:	out    0xe2,al
  40480a:	int    0x2
  40480c:	test   BYTE PTR [eax],bl
  40480e:	out    0xf1,eax
  404810:	push   ds
  404811:	cwde   
  404812:	xchg   BYTE PTR [edx-0x14f72f77],ch
  404818:	lea    edx,[ebp+0x37]
  40481b:	pop    esp
  40481c:	sahf   
  40481d:	cli    
  40481e:	arpl   WORD PTR [eax-0x6e7395a8],bx
  404824:	ret    
  404825:	push   esp
  404826:	test   eax,0x5d59da9d
  40482b:	mov    eax,ds:0x956b5037
  404830:	add    al,0x46
  404832:	sti    
  404833:	push   ecx
  404834:	mov    ecx,0x163c0dfc
  404839:	das    
  40483a:	aaa    
  40483b:	mov    eax,ds:0xadca0683
  404840:	mov    dh,0xe0
  404842:	test   DWORD PTR [ecx],0x55887ec6
  404848:	and    eax,0x39f72f1b
  40484d:	loope  0x404844
  40484f:	add    ah,cl
  404851:	rol    DWORD PTR [eax+0x1658b4f5],0x21
  404858:	mov    edx,0x890a8d6d
  40485d:	idiv   DWORD PTR [edx+0x75]
  404860:	mov    ah,0x8b
  404862:	in     al,dx
  404863:	nop
  404864:	in     eax,0x6c
  404866:	sbb    ecx,DWORD PTR [edx+0x6ddc867b]
  40486c:	bound  esp,QWORD PTR ds:0x5165b35f
  404872:	pop    esp
  404873:	jp     0x4048b3
  404875:	test   eax,0x9dc4e900
  40487a:	push   esp
  40487b:	pop    ecx
  40487c:	in     eax,dx
  40487d:	mov    cl,0x34
  40487f:	scas   al,BYTE PTR es:[edi]
  404880:	rcr    BYTE PTR [ebx-0x12],1
  404883:	adc    eax,0x69b55a26
  404888:	retf   
  404889:	cmp    eax,0xdf6995c3
  40488e:	dec    esp
  40488f:	inc    ebx
  404890:	sub    DWORD PTR [ecx+eax*4+0x5fcdd8a1],0xffffffb6
  404898:	inc    ebp
  404899:	adc    eax,0x551cb0a4
  40489e:	inc    eax
  40489f:	je     0x404858
  4048a1:	mov    edi,0xc6d6458f
  4048a6:	aam    0x91
  4048a8:	enter  0xebc7,0x98
  4048ac:	je     0x40488b
  4048ae:	addr16 call 0x106:0xe3326933
  4048b6:	dec    eax
  4048b7:	dec    edx
  4048b8:	retf   0x7b77
  4048bb:	adc    al,0xe1
  4048bd:	clc    
  4048be:	ror    BYTE PTR [edx-0x39f4e6a],1
  4048c4:	test   eax,0xf8133b7a
  4048c9:	cmp    ch,dh
  4048cb:	ret    0x74d5
  4048ce:	out    0x6a,al
  4048d0:	sbb    DWORD PTR [edx+eiz*8+0x2a],0x901b450a
  4048d8:	add    al,0xc6
  4048da:	test   DWORD PTR [ecx-0x2f0ff7a5],ecx
  4048e0:	fiadd  WORD PTR [edx+0x6eae38dd]
  4048e6:	inc    esi
  4048e7:	mov    edi,edi
  4048e9:	cld    
  4048ea:	and    al,BYTE PTR [edi-0x588c9477]
  4048f0:	sti    
  4048f1:	fstp   TBYTE PTR [eax]
  4048f3:	pop    es
  4048f4:	inc    eax
  4048f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f6:	cmp    bl,BYTE PTR [edi]
  4048f8:	fisub  WORD PTR [eax-0x68]
  4048fb:	retf   0xf46c
  4048fe:	xchg   edi,eax
  4048ff:	ss mov esi,0x2e80b051
  404905:	lds    esp,FWORD PTR [esp+edi*1]
  404908:	jge    0x40495d
  40490a:	mov    bh,0x8c
  40490c:	pop    ecx
  40490d:	add    al,0xfb
  40490f:	push   ds
  404910:	and    BYTE PTR ds:0x695f2b1a,0xd9
  404917:	xor    BYTE PTR [ecx+0x5f],0xb8
  40491b:	and    eax,0x3bb934fd
  404920:	dec    esi
  404921:	and    dl,bh
  404923:	out    dx,al
  404924:	add    bh,BYTE PTR [eax-0x39]
  404927:	enter  0x5de2,0xd5
  40492b:	or     al,0xfe
  40492d:	cmp    BYTE PTR [eax],cl
  40492f:	cmp    BYTE PTR [esi-0x695dc42f],dl
  404935:	and    BYTE PTR [ebx+0x3a299638],dl
  40493b:	pop    edx
  40493c:	ss sub al,0xb7
  40493f:	and    dh,BYTE PTR [eax]
  404941:	out    dx,eax
  404942:	xchg   ebp,eax
  404943:	mov    cl,0xd0
  404945:	sbb    dl,BYTE PTR [edx-0x5c]
  404948:	dec    ecx
  404949:	sbb    BYTE PTR [eax+0x69],ch
  40494c:	les    esp,FWORD PTR [ecx-0x1e]
  40494f:	imul   ecx,DWORD PTR [eax-0x5b],0xc32b3a98
  404956:	push   es
  404957:	dec    esp
  404958:	jmp    0x404922
  40495a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40495b:	neg    BYTE PTR [ecx-0x72ffd94c]
  404961:	leave  
  404962:	clc    
  404963:	test   BYTE PTR [edi-0x47],bh
  404966:	push   edx
  404967:	int    0x2b
  404969:	mov    bh,0xcd
  40496b:	mov    ds:0x7660c718,al
  404970:	xchg   ecx,eax
  404971:	and    BYTE PTR [edi],bh
  404973:	pop    esi
  404974:	xchg   edx,eax
  404975:	fxch   st(2)
  404977:	push   cs
  404978:	icebp  
  404979:	pop    edx
  40497a:	jge    0x4049ae
  40497c:	lea    ebp,[edi+0x4]
  40497f:	xchg   esp,eax
  404980:	cld    
  404981:	jno    0x4049f5
  404983:	fs dec esp
  404985:	inc    eax
  404986:	aad    0x28
  404988:	iret   
  404989:	fld    TBYTE PTR [ecx]
  40498b:	push   esi
  40498c:	mov    fs,WORD PTR [ebx-0x13]
  40498f:	adc    BYTE PTR [eax],0xc6
  404992:	gs leave 
  404994:	jne    0x404942
  404996:	jmp    0xba520c19
  40499b:	pop    edx
  40499c:	and    eax,DWORD PTR [edi+0x5d]
  40499f:	jmp    0x404a13
  4049a1:	test   DWORD PTR es:[edi-0xb],ebp
  4049a5:	mov    BYTE PTR [ebp-0x18],bh
  4049a8:	push   edx
  4049a9:	out    dx,al
  4049aa:	or     eax,0x8ff15361
  4049af:	mov    al,0x12
  4049b1:	pop    es
  4049b2:	(bad)  
  4049b3:	out    0x6c,al
  4049b5:	jecxz  0x40497b
  4049b7:	or     DWORD PTR [esi+ecx*1],edi
  4049ba:	cld    
  4049bb:	and    al,0x51
  4049bd:	inc    edi
  4049be:	ret    0x5d10
  4049c1:	pop    ss
  4049c2:	push   esp
  4049c3:	in     eax,dx
  4049c4:	xor    DWORD PTR ds:0x34943384,ecx
  4049ca:	cdq    
  4049cb:	or     eax,0x41a4ce21
  4049d0:	fcomp  st(7)
  4049d2:	pop    esp
  4049d3:	retf   0x960b
  4049d6:	cmp    BYTE PTR [ecx+0x4f],al
  4049d9:	sbb    ebp,DWORD PTR [ebx]
  4049db:	cmp    ebp,DWORD PTR [edi]
  4049dd:	push   ebp
  4049de:	ret    0xc546
  4049e1:	stos   BYTE PTR es:[edi],al
  4049e2:	sti    
  4049e3:	mov    eax,0x831aa0ab
  4049e8:	sbb    DWORD PTR ds:0xa66b2059,0x36
  4049ef:	retf   0x9975
  4049f2:	sub    al,0xfd
  4049f4:	jae    0x4049a9
  4049f6:	push   esp
  4049f7:	push   0xe124211b
  4049fc:	add    bl,BYTE PTR [edi+0x22da86bb]
  404a02:	icebp  
  404a03:	mov    ebp,0xa8f05eaa
  404a08:	dec    esp
  404a09:	cmp    eax,0x97ec1693
  404a0e:	pop    edi
  404a0f:	out    0x82,al
  404a11:	jmp    0x80fb1c01
  404a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a17:	sbb    eax,0x67973e72
  404a1c:	std    
  404a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a1e:	int    0xa7
  404a20:	(bad)  
  404a21:	jl     0x404a36
  404a23:	icebp  
  404a24:	ja     0x404a4b
  404a26:	mov    dl,0x55
  404a28:	xor    eax,0xfc03dd36
  404a2d:	mov    ebx,0x14127c96
  404a32:	dec    esi
  404a33:	rol    BYTE PTR [ecx+0x77a17de5],1
  404a39:	ror    DWORD PTR [ebx-0x4f35604b],0xd5
  404a40:	mov    ecx,0xdb5642d9
  404a45:	mov    ah,0x6f
  404a47:	out    dx,eax
  404a48:	push   ebx
  404a49:	hlt    
  404a4a:	ss or  eax,0xfce8d6eb
  404a50:	(bad)  
  404a51:	nop
  404a52:	ss jns 0x4049dd
  404a55:	cli    
  404a56:	adc    al,cl
  404a58:	xor    al,0x75
  404a5a:	adc    dl,BYTE PTR [ebp-0x7ad94282]
  404a60:	gs fwait
  404a62:	cmp    al,0x73
  404a64:	out    0xa6,eax
  404a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a67:	out    dx,eax
  404a68:	popa   
  404a69:	jo     0x404a40
  404a6b:	ja     0x404ada
  404a6d:	stc    
  404a6e:	mov    al,ds:0x83541bc3
  404a73:	jg     0x404a8f
  404a75:	mov    al,0x8
  404a77:	daa    
  404a78:	loop   0x404a79
  404a7a:	es mov eax,0x5e22f832
  404a80:	out    0xf9,al
  404a82:	loop   0x404ad7
  404a84:	ret    
  404a85:	and    ecx,DWORD PTR [edi]
  404a87:	popa   
  404a88:	imul   DWORD PTR [eax+0x79]
  404a8b:	xchg   esp,eax
  404a8c:	ret    0xbd5b
  404a8f:	sbb    esp,0xfffffff6
  404a92:	and    BYTE PTR [edi+0x6efa7fe9],0x93
  404a99:	int3   
  404a9a:	adc    dl,BYTE PTR [eax-0x193ebd77]
  404aa0:	(bad)  
  404aa1:	push   0x5e
  404aa3:	lods   al,BYTE PTR ds:[esi]
  404aa4:	out    dx,al
  404aa5:	jo     0x404a4a
  404aa7:	shl    BYTE PTR [ecx+0x62],1
  404aaa:	clc    
  404aab:	adc    ah,BYTE PTR ss:[eax]
  404aae:	push   edx
  404aaf:	push   esi
  404ab0:	sahf   
  404ab1:	add    DWORD PTR [ebp+0x5a],edx
  404ab4:	cwde   
  404ab5:	and    DWORD PTR [ecx+0x2c3c194e],ebp
  404abb:	and    eax,0x1ccc773a
  404ac0:	je     0x404a44
  404ac2:	sbb    eax,0xd278710e
  404ac7:	push   esp
  404ac8:	(bad)  
  404ac9:	pop    ds
  404aca:	xchg   ecx,eax
  404acb:	out    dx,al
  404acc:	or     bh,BYTE PTR [ebp-0x47]
  404acf:	popa   
  404ad0:	dec    ebx
  404ad1:	fcomp  QWORD PTR ds:0x287e7ac6
  404ad7:	add    DWORD PTR [eax-0x51],esi
  404ada:	sub    eax,0xae6d345d
  404adf:	jecxz  0x404b12
  404ae1:	inc    ebx
  404ae2:	fstp   st(7)
  404ae4:	xor    DWORD PTR [edx+0x25],edi
  404ae7:	test   al,0x2a
  404ae9:	aaa    
  404aea:	pop    edx
  404aeb:	test   edx,ebx
  404aed:	ficomp DWORD PTR [edx-0x5]
  404af0:	stc    
  404af1:	xadd   BYTE PTR [esi],cl
  404af4:	sti    
  404af5:	call   0x70a02c69
  404afa:	and    BYTE PTR [ebp+0x78af679d],ah
  404b00:	mov    esi,0xb1873ac5
  404b05:	add    DWORD PTR es:[ecx-0x20],eax
  404b09:	xchg   BYTE PTR [ecx-0x2c],bl
  404b0c:	fistp  QWORD PTR [esi]
  404b0e:	dec    edi
  404b0f:	pusha  
  404b10:	mov    bp,0x3118
  404b14:	adc    dl,BYTE PTR [edi-0x2e33c485]
  404b1a:	inc    ebp
  404b1b:	fwait
  404b1c:	test   DWORD PTR [edx],ebx
  404b1e:	mov    eax,gs
  404b20:	mov    bh,0xcb
  404b22:	and    edx,DWORD PTR [ebp+0x66]
  404b25:	in     al,dx
  404b26:	cs jbe 0x404ab7
  404b29:	adc    DWORD PTR [ebp+edi*1+0x3b],ebp
  404b2d:	jl     0x404b6d
  404b2f:	inc    eax
  404b30:	mov    dh,0x59
  404b32:	inc    esp
  404b33:	xchg   ebx,eax
  404b34:	into   
  404b35:	(bad)  
  404b36:	dec    ebp
  404b37:	not    DWORD PTR [esi]
  404b39:	ja     0x404b28
  404b3b:	test   ebx,eax
  404b3d:	push   edx
  404b3e:	aaa    
  404b3f:	inc    ebp
  404b40:	inc    DWORD PTR [esi-0x3f]
  404b43:	dec    ebp
  404b44:	ss inc ecx
  404b46:	mov    ds:0x30935bc8,eax
  404b4b:	stos   BYTE PTR es:[edi],al
  404b4c:	mov    dh,0x64
  404b4e:	xor    BYTE PTR [ebx],dl
  404b50:	out    dx,eax
  404b51:	in     al,0xd1
  404b53:	jmp    0x404b79
  404b55:	jmp    0xb832646e
  404b5a:	in     al,0xaf
  404b5c:	rol    BYTE PTR [ebx-0x71be79e4],0xcf
  404b63:	pop    ecx
  404b64:	mov    eax,0xd83f5385
  404b69:	jae    0x404bca
  404b6b:	mov    bh,0x3a
  404b6d:	repz push 0xd0d844c6
  404b73:	pop    ebx
  404b74:	imul   BYTE PTR [ebx-0x2712a375]
  404b7a:	jl     0x404b58
  404b7c:	dec    edx
  404b7d:	add    bh,BYTE PTR [eax+eiz*8-0x22d5d48f]
  404b84:	gs mov ebx,0x46cfeda2
  404b8a:	and    BYTE PTR [eax],bl
  404b8c:	fdiv   DWORD PTR [esi-0x12]
  404b8f:	pop    ebp
  404b90:	mov    al,ds:0xf863579c
  404b95:	fxch   st(3)
  404b97:	test   al,0xfe
  404b99:	iret   
  404b9a:	pop    edi
  404b9b:	stc    
  404b9c:	test   BYTE PTR [esi+0x2d],dl
  404b9f:	repz aad 0xae
  404ba2:	push   esp
  404ba3:	sbb    DWORD PTR [ebp-0x57ce8425],0xffffff8d
  404baa:	dec    ecx
  404bab:	cs cmp ch,dl
  404bae:	inc    edi
  404baf:	retf   0x9d7e
  404bb2:	mov    DWORD PTR [ebp-0xf94d984],0x8c05b088
  404bbc:	pop    ebp
  404bbd:	ret    0x5215
  404bc0:	je     0x404bdf
  404bc2:	jl     0x404b93
  404bc4:	cmp    DWORD PTR [ebp+0x27715a48],0xffffffe9
  404bcb:	pop    esp
  404bcc:	fstp   DWORD PTR [ebx-0x3d]
  404bcf:	inc    edx
  404bd0:	xchg   edx,eax
  404bd1:	inc    esi
  404bd2:	icebp  
  404bd3:	xchg   esp,eax
  404bd4:	cs pop es
  404bd6:	popf   
  404bd7:	loop   0x404ba6
  404bd9:	or     DWORD PTR [edi-0x25439e4b],0xd06dbf0f
  404be3:	(bad)  
  404be4:	sbb    dl,BYTE PTR [eax+0x67]
  404be7:	mov    esi,0xc77dfb14
  404bec:	mov    dh,0x7f
  404bee:	mov    ebx,0x6af3f282
  404bf3:	xchg   ebp,eax
  404bf4:	test   eax,0x159c366c
  404bf9:	jmp    0x404c13
  404bfb:	lahf   
  404bfc:	inc    ecx
  404bfd:	std    
  404bfe:	(bad)  
  404bff:	push   ss
  404c00:	scas   al,BYTE PTR es:[edi]
  404c01:	xchg   ecx,eax
  404c02:	or     BYTE PTR [ecx],0xb6
  404c05:	push   ss
  404c06:	sub    esp,0x32b10ef6
  404c0c:	mov    eax,ds:0xcfd1eaf1
  404c11:	add    al,0xa9
  404c13:	ins    BYTE PTR es:[edi],dx
  404c14:	xchg   esi,eax
  404c15:	jl     0x404c3a
  404c17:	dec    BYTE PTR [eax]
  404c19:	in     al,0x15
  404c1b:	jge    0x404ba1
  404c1d:	scas   eax,DWORD PTR es:[edi]
  404c1e:	dec    esp
  404c1f:	sbb    BYTE PTR [eax-0x48],bh
  404c22:	xchg   esp,eax
  404c23:	mov    edx,edx
  404c25:	fsubr  QWORD PTR [edi]
  404c27:	and    esi,ebx
  404c29:	push   ebp
  404c2a:	loopne 0x404bcd
  404c2c:	pop    esp
  404c2d:	shr    DWORD PTR [esi+0x6c],cl
  404c30:	inc    edx
  404c31:	icebp  
  404c32:	mov    eax,eax
  404c34:	pop    ebx
  404c35:	clc    
  404c36:	out    0x8a,al
  404c38:	xchg   al,dl
  404c3a:	add    cl,bh
  404c3c:	cmp    al,0x18
  404c3e:	xor    DWORD PTR [edi],esi
  404c40:	hlt    
  404c41:	mov    bh,0x1d
  404c43:	iret   
  404c44:	pop    edx
  404c45:	ficomp WORD PTR [esi-0x37]
  404c48:	xchg   esi,eax
  404c49:	jmp    0xd28:0x91a4eab
  404c50:	mov    ecx,0xb8ce8dda
  404c55:	pop    edi
  404c56:	fwait
  404c57:	dec    esp
  404c58:	inc    ebx
  404c59:	int    0xe6
  404c5b:	sub    DWORD PTR [esi+0x39f2811],edi
  404c61:	fs cmc 
  404c63:	fisub  WORD PTR [ebx-0x37456933]
  404c69:	xor    ebp,ebx
  404c6b:	jmp    0x86f:0x5bfe929e
  404c72:	leave  
  404c73:	push   ebp
  404c74:	pop    ebx
  404c75:	jp     0x404c8f
  404c77:	jb     0x404c19
  404c79:	or     DWORD PTR [edi],ebx
  404c7b:	push   ebx
  404c7c:	cmc    
  404c7d:	mov    al,ds:0xc6712bfc
  404c82:	jo     0x404c2a
  404c84:	inc    ebp
  404c85:	xchg   DWORD PTR [edx-0x50],edi
  404c88:	adc    DWORD PTR [ecx-0x48],0xffffffe5
  404c8c:	not    BYTE PTR [eax-0x6318eb43]
  404c92:	dec    edi
  404c93:	add    ah,BYTE PTR [edx]
  404c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c96:	lahf   
  404c97:	scas   al,BYTE PTR es:[edi]
  404c98:	data16 arpl WORD PTR [edi],bp
  404c9b:	pushf  
  404c9c:	xchg   esp,eax
  404c9d:	stos   DWORD PTR es:[edi],eax
  404c9e:	push   0x61
  404ca0:	arpl   bp,si
  404ca2:	mov    al,0x3c
  404ca4:	sar    BYTE PTR [ecx-0x60],1
  404ca7:	sub    eax,0xdda6b6cd
  404cac:	aad    0xfc
  404cae:	mov    bl,0xcc
  404cb0:	mov    DWORD PTR [edx-0x61450c69],edi
  404cb6:	xor    ebx,DWORD PTR [esi+0x15]
  404cb9:	fldenv [ecx]
  404cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbc:	mov    bh,0x81
  404cbe:	outs   dx,DWORD PTR ds:[esi]
  404cbf:	hlt    
  404cc0:	add    al,0x20
  404cc2:	fwait
  404cc3:	cwde   
  404cc4:	mov    bl,BYTE PTR [esi-0x19]
  404cc7:	int3   
  404cc8:	retf   0xf423
  404ccb:	sbb    al,0x6
  404ccd:	cdq    
  404cce:	into   
  404ccf:	repnz xchg ch,al
  404cd2:	push   es
  404cd3:	push   edi
  404cd4:	jns    0x404c9f
  404cd6:	dec    eax
  404cd7:	call   0x57e7:0xe0e98e1f
  404cde:	adc    BYTE PTR [edi],0x8d
  404ce1:	or     eax,edi
  404ce3:	(bad)  [ebp-0x78ca337d]
  404ce9:	sub    BYTE PTR [ecx-0x7],cl
  404cec:	int3   
  404ced:	sub    dh,ah
  404cef:	in     al,0x85
  404cf1:	push   cs
  404cf2:	add    DWORD PTR [eax+0x119d87a1],ebp
  404cf8:	mov    ah,0x81
  404cfa:	lds    ebp,FWORD PTR gs:[edi]
  404cfd:	retf   0x7070
  404d00:	mov    DWORD PTR ds:0x64979837,ebx
  404d06:	retf   
  404d07:	xchg   ecx,eax
  404d08:	add    al,BYTE PTR [edi-0x77]
  404d0b:	xor    DWORD PTR ds:0xaac5e5b2,0xffffffa8
  404d12:	vshufps ymm7,ymm5,YMMWORD PTR [edx],0x21
  404d17:	sbb    eax,0x10b22ce7
  404d1c:	cs mov bl,0xe2
  404d1f:	jns    0x404d78
  404d21:	pushf  
  404d22:	add    eax,0xfc836238
  404d27:	mov    dl,0x9
  404d29:	(bad)  
  404d2a:	dec    ebx
  404d2b:	inc    edx
  404d2c:	pop    esi
  404d2d:	nop
  404d2e:	iret   
  404d2f:	pop    ecx
  404d30:	inc    ebx
  404d31:	dec    ebp
  404d32:	adc    DWORD PTR es:[edx],esi
  404d35:	add    al,0x8
  404d37:	stos   BYTE PTR es:[edi],al
  404d38:	cld    
  404d39:	les    eax,FWORD PTR [ebp-0x20]
  404d3c:	xchg   ebx,eax
  404d3d:	cld    
  404d3e:	pop    edx
  404d3f:	add    al,0xfa
  404d41:	or     ch,BYTE PTR [ebp+0x69]
  404d44:	pop    es
  404d45:	stos   BYTE PTR es:[edi],al
  404d46:	(bad)  
  404d47:	out    dx,eax
  404d48:	xor    DWORD PTR [esi+0x58],ebx
  404d4b:	dec    ecx
  404d4c:	inc    edx
  404d4d:	repz fnsave [ebx-0x4b]
  404d51:	iret   
  404d52:	mov    dl,0xd9
  404d54:	shl    BYTE PTR [eax+0x39],1
  404d57:	cli    
  404d58:	push   ecx
  404d59:	cld    
  404d5a:	nop
  404d5b:	stos   DWORD PTR es:[edi],eax
  404d5c:	adc    ebx,DWORD PTR [edx-0x2dfa2c1b]
  404d62:	gs inc ebp
  404d64:	and    edx,DWORD PTR [edi+0x60cd80f5]
  404d6a:	stos   BYTE PTR es:[edi],al
  404d6b:	jle    0x404d52
  404d6d:	scas   eax,DWORD PTR es:[edi]
  404d6e:	daa    
  404d6f:	cmp    eax,0x2bdb2545
  404d74:	xchg   DWORD PTR [esi],edi
  404d76:	xor    eax,0x11363953
  404d7b:	test   BYTE PTR [esi],cl
  404d7d:	inc    ebx
  404d7e:	xor    eax,0x8275310c
  404d83:	mov    bl,ah
  404d85:	lds    esi,FWORD PTR [edx+0x3e]
  404d88:	dec    esp
  404d89:	ret    
  404d8a:	in     eax,0xfc
  404d8c:	mov    ds:0x6966a989,eax
  404d91:	mov    eax,ds:0xd679f641
  404d96:	addr16 or eax,0xadbb870a
  404d9c:	mov    ecx,0x9a528c71
  404da1:	ds jb  0x404dbe
  404da4:	scas   eax,DWORD PTR es:[edi]
  404da5:	cmp    al,0x58
  404da7:	mov    ds:0xf27cfaa4,al
  404dac:	shr    eax,1
  404dae:	sar    ch,0x13
  404db1:	push   ds
  404db2:	pop    es
  404db3:	mov    edi,DWORD PTR [ecx]
  404db5:	(bad)  
  404db6:	out    0x23,al
  404db8:	cmp    ch,BYTE PTR [edx-0x44]
  404dbb:	scas   eax,DWORD PTR es:[edi]
  404dbc:	dec    edi
  404dbd:	in     al,dx
  404dbe:	das    
  404dbf:	jne    0x404d53
  404dc1:	ins    DWORD PTR es:[edi],dx
  404dc2:	adc    DWORD PTR [esi-0x35],edx
  404dc5:	pop    esp
  404dc6:	and    eax,0x7fc38a55
  404dcb:	popa   
  404dcc:	rcl    BYTE PTR [esi-0x26c2037f],cl
  404dd2:	int3   
  404dd3:	jns    0x404e33
  404dd5:	pop    ebp
  404dd6:	stos   DWORD PTR es:[edi],eax
  404dd7:	jno    0x404db6
  404dd9:	add    ecx,DWORD PTR [esi-0x69]
  404ddc:	in     eax,0x84
  404dde:	jmp    0xeebc:0x75c80ed
  404de5:	into   
  404de6:	jnp    0x404e27
  404de8:	xchg   esp,eax
  404de9:	jg     0x404d6d
  404deb:	int3   
  404dec:	mov    edi,esp
  404dee:	xlat   BYTE PTR ds:[ebx]
  404def:	pop    ebx
  404df0:	nop
  404df1:	pusha  
  404df2:	and    ebp,DWORD PTR [esi-0x26]
  404df5:	mov    eax,ds:0xd7456b27
  404dfa:	sbb    DWORD PTR [ebx+esi*2-0x19],edx
  404dfe:	mov    bh,0xb2
  404e00:	mov    ebp,0x138493e7
  404e05:	ret    0xc6d2
  404e08:	outs   dx,DWORD PTR ds:[esi]
  404e09:	sbb    DWORD PTR [edx-0x6c],edx
  404e0c:	cmc    
  404e0d:	popa   
  404e0e:	gs fs mov ebp,0xd0d9fc0a
  404e15:	dec    ecx
  404e16:	ret    
  404e17:	pop    ds
  404e18:	mov    dl,0x41
  404e1a:	inc    DWORD PTR [ecx-0x3e667587]
  404e20:	cwde   
  404e21:	sub    al,0xa
  404e23:	mov    esp,0x96964898
  404e28:	pushf  
  404e29:	(bad)  
  404e2a:	jle    0x404de3
  404e2c:	xor    DWORD PTR [edi-0x46],0x4e
  404e30:	mov    ds,WORD PTR [eax]
  404e32:	data16 fsubr DWORD PTR [ecx+0xcd29475]
  404e39:	xor    al,0x51
  404e3b:	imul   eax,DWORD PTR [eax+0x5d0d6a7d],0x86398f73
  404e45:	loopne 0x404dd6
  404e47:	jno    0x404e82
  404e49:	sar    ch,0x72
  404e4c:	ja     0x404e77
  404e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e4f:	sbb    al,0xe1
  404e51:	ret    0xeb3d
  404e54:	int3   
  404e55:	mov    edx,0x13b3acad
  404e5a:	dec    ebx
  404e5b:	fstp   QWORD PTR [ebp-0x1c]
  404e5e:	ins    DWORD PTR es:[edi],dx
  404e5f:	jo     0x404e50
  404e61:	pop    ebx
  404e62:	add    al,0x2d
  404e64:	mov    DWORD PTR fs:[esi+0x3b2bb134],0xf23841c3
  404e6f:	push   es
  404e70:	mov    ecx,0x4a911d55
  404e75:	adc    ebx,esi
  404e77:	arpl   WORD PTR [ecx+0xc],di
  404e7a:	daa    
  404e7b:	and    DWORD PTR [ecx],0x48
  404e7e:	sub    al,0x28
  404e80:	inc    eax
  404e81:	aaa    
  404e82:	popf   
  404e83:	xchg   edi,eax
  404e84:	(bad)  
  404e85:	fdivr  QWORD PTR [esp+edi*2+0x10]
  404e89:	xor    BYTE PTR [eax],0x33
  404e8c:	lock loopne 0x404ebb
  404e8f:	mov    bl,0x80
  404e91:	cmp    dh,BYTE PTR [ebp+0x31fbf2f6]
  404e97:	dec    edx
  404e98:	rcr    BYTE PTR [ebp+0x32],cl
  404e9b:	adc    esi,DWORD PTR [edi-0x6c]
  404e9e:	ret    0xc37
  404ea1:	and    eax,0xa675a11b
  404ea6:	and    eax,ecx
  404ea8:	mov    bh,0x27
  404eaa:	xor    BYTE PTR [edi],ch
  404eac:	add    eax,0xafeb63e5
  404eb1:	cld    
  404eb2:	jbe    0x404e66
  404eb4:	inc    esi
  404eb5:	inc    eax
  404eb6:	(bad)  
  404eb7:	aad    0x84
  404eb9:	sbb    DWORD PTR [edi+0x3d],ebx
  404ebc:	adc    edi,DWORD PTR [esi]
  404ebe:	(bad)  
  404ebf:	add    al,0xa7
  404ec1:	push   cs
  404ec2:	mov    ds:0x8b4aa7e7,eax
  404ec7:	sahf   
  404ec8:	add    DWORD PTR [edx],ebp
  404eca:	add    DWORD PTR [esi+0x58],esp
  404ecd:	in     al,dx
  404ece:	in     al,0x55
  404ed0:	mov    ebx,0x95c2428c
  404ed5:	shl    DWORD PTR ss:[edx+0x47a37243],0xbc
  404edd:	add    DWORD PTR [edi-0x71],esi
  404ee0:	mov    dl,0x3
  404ee2:	push   ebx
  404ee3:	cdq    
  404ee4:	scas   eax,DWORD PTR es:[edi]
  404ee5:	sub    al,0x67
  404ee7:	push   edi
  404ee8:	mov    cs,WORD PTR [ebx]
  404eea:	gs lahf 
  404eec:	add    BYTE PTR [edi],0x52
  404eef:	loop   0x404f3d
  404ef1:	jno    0x404e86
  404ef3:	mov    ds:0x41732b5d,al
  404ef8:	mov    esi,0xcc216156
  404efd:	mov    eax,ds:0x2230d8b1
  404f02:	cld    
  404f03:	mov    al,ds:0xb31bb030
  404f08:	sub    al,BYTE PTR [edx-0x7c]
  404f0b:	push   edi
  404f0c:	inc    ebx
  404f0d:	mov    ah,0x93
  404f0f:	jae    0x404ecb
  404f11:	imul   esi,DWORD PTR [ecx+0x2a],0x6f1f1032
  404f18:	sahf   
  404f19:	mov    ebx,0x14013e9d
  404f1e:	fmul   DWORD PTR [edi-0x4e]
  404f21:	scas   al,BYTE PTR es:[edi]
  404f22:	jnp    0x404f6a
  404f24:	lahf   
  404f25:	sbb    al,0x8
  404f27:	test   DWORD PTR [ecx],eax
  404f29:	xchg   ecx,eax
  404f2a:	rcl    eax,cl
  404f2c:	test   DWORD PTR [eax],ebx
  404f2e:	xchg   esp,eax
  404f2f:	(bad)  
  404f30:	popf   
  404f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f32:	sbb    ebx,edi
  404f34:	mul    BYTE PTR [ecx]
  404f36:	aaa    
  404f37:	mov    ch,0x67
  404f39:	mov    ebp,0x777ef036
  404f3e:	fdivr  DWORD PTR [ebp+0x2559be9d]
  404f44:	test   DWORD PTR [edi],0xe1a8cf28
  404f4a:	jle    0x404f3e
  404f4c:	mov    ah,0xd
  404f4e:	and    DWORD PTR [edi+0x3781c6d8],0xffffffc1
  404f55:	popa   
  404f56:	pop    ebp
  404f57:	adc    eax,0x49e90d6b
  404f5c:	jo     0x404f1c
  404f5e:	cs sbb edi,edx
  404f61:	jecxz  0x404f36
  404f63:	outs   dx,DWORD PTR ds:[esi]
  404f64:	aas    
  404f65:	dec    ebp
  404f66:	xchg   ecx,eax
  404f67:	scas   al,BYTE PTR es:[edi]
  404f68:	or     eax,0x226f6d42
  404f6d:	fisub  DWORD PTR [edi+0x1]
  404f70:	in     al,0x72
  404f72:	pop    ds
  404f73:	rol    esi,1
  404f75:	rcl    DWORD PTR [ebp-0x2ff576a2],0xff
  404f7c:	(bad)  
  404f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f7e:	xchg   ecx,eax
  404f7f:	mov    ds:0xecca1af3,al
  404f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f85:	enter  0x3b6d,0xb6
  404f89:	inc    ebp
  404f8a:	(bad)  
  404f8b:	pop    esp
  404f8c:	jbe    0x404ffb
  404f8e:	out    dx,eax
  404f8f:	ins    DWORD PTR es:[edi],dx
  404f90:	or     BYTE PTR [eax+ebp*4+0x7cbf174e],ch
  404f97:	push   esi
  404f98:	inc    edx
  404f99:	mov    dl,0x99
  404f9b:	retf   0x1065
  404f9e:	mov    cl,BYTE PTR [edx]
  404fa0:	fld    DWORD PTR [ecx-0x2d]
  404fa3:	sbb    DWORD PTR [ebp-0x3120dc32],esp
  404fa9:	adc    edi,DWORD PTR [ebp-0x79]
  404fac:	and    eax,0xe2a4eecc
  404fb1:	xchg   ebx,eax
  404fb2:	call   0xdcd5:0x5f102466
  404fb9:	cmp    ebp,DWORD PTR [edi]
  404fbb:	or     eax,0x77b0ea59
  404fc0:	sbb    ch,cl
  404fc2:	pop    edi
  404fc3:	rcl    DWORD PTR [eax-0x29],0x35
  404fc7:	fwait
  404fc8:	sbb    BYTE PTR [ecx],bl
  404fca:	dec    ecx
  404fcb:	arpl   WORD PTR [ebp+0x47b43982],cx
  404fd1:	mov    bl,0xd5
  404fd3:	fistp  QWORD PTR [eax+eiz*2]
  404fd6:	inc    ebp
  404fd7:	push   0xd
  404fd9:	loop   0x404f96
  404fdb:	mov    cl,0x5b
  404fdd:	xchg   edx,eax
  404fde:	jae    0x405021
  404fe0:	imul   edx,DWORD PTR [edx],0x4
  404fe3:	adc    DWORD PTR [edx+0x51],edi
  404fe6:	ss mov dl,0x78
  404fe9:	popf   
  404fea:	push   esp
  404feb:	hlt    
  404fec:	push   edi
  404fed:	fcom   DWORD PTR [esi-0x4e]
  404ff0:	mov    edx,0xbea5915
  404ff5:	inc    ebx
  404ff6:	test   BYTE PTR [edi],bl
  404ff8:	outs   dx,BYTE PTR ds:[esi]
  404ff9:	sahf   
  404ffa:	jmp    0x65c1b636
  404fff:	retf   
  405000:	jl     0x404fc4
  405002:	outs   dx,DWORD PTR ds:[esi]
  405003:	jne    0x404fb9
  405005:	sbb    DWORD PTR [edx],ebx
  405007:	inc    edx
  405008:	dec    ebx
  405009:	lea    esi,[edx]
  40500b:	mov    gs,WORD PTR ds:0x3451786d
  405011:	jg     0x405021
  405013:	out    0x85,al
  405015:	sbb    bh,bh
  405017:	(bad)  
  405018:	mov    esi,DWORD PTR [ecx]
  40501a:	lock xor dh,dh
  40501d:	dec    esi
  40501e:	jl     0x40506b
  405020:	jbe    0x405069
  405022:	push   es
  405023:	push   ebp
  405024:	clc    
  405025:	aas    
  405026:	mov    WORD PTR [esi-0x17],es
  405029:	les    ecx,FWORD PTR ds:0xd7d2e7b6
  40502f:	and    DWORD PTR [edx-0x18],esp
  405032:	dec    edi
  405033:	jno    0x405072
  405035:	xchg   dh,ah
  405037:	into   
  405038:	cmp    BYTE PTR [ebp-0x4f9c5575],al
  40503e:	(bad)  
  40503f:	lock popf 
  405041:	enter  0x7645,0xd2
  405045:	pop    edi
  405046:	pop    es
  405047:	js     0x405084
  405049:	imul   edx,eax,0x1a6f20a3
  40504f:	and    al,0xea
  405051:	mov    ds:0xb1dca21e,eax
  405056:	fist   DWORD PTR [edi]
  405058:	mov    ds:0x719c84ca,al
  40505d:	imul   esi,DWORD PTR [esi-0x78],0xa82c6fc9
  405064:	push   ebx
  405065:	pop    ebp
  405066:	adc    eax,DWORD PTR [esi+ebp*1]
  405069:	and    BYTE PTR [edx+0x76],al
  40506c:	imul   edx,eax,0xffffffa1
  40506f:	sbb    eax,0xd5e3e2d1
  405074:	xchg   bh,dh
  405076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405077:	cmc    
  405078:	push   esi
  405079:	xchg   esp,eax
  40507a:	(bad)  
  40507b:	cmp    BYTE PTR [esi+0x92deebb],ch
  405081:	or     ch,BYTE PTR [ebp+0x21]
  405084:	mov    ebp,0xf9214b5
  405089:	jl     0x405109
  40508b:	and    BYTE PTR [edi-0x6a88e9f6],0xf6
  405092:	mov    eax,ds:0xc51e13ff
  405097:	ins    DWORD PTR es:[edi],dx
  405098:	and    BYTE PTR [ebp+0x5a],ch
  40509b:	pop    esp
  40509c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40509d:	mov    bl,0x82
  40509f:	call   0x7398898f
  4050a4:	into   
  4050a5:	idiv   ah
  4050a7:	sbb    DWORD PTR [esi-0x1643094a],esi
  4050ad:	gs xchg esp,eax
  4050af:	xor    al,0x20
  4050b1:	jno    0x40510f
  4050b3:	or     eax,0xfb34a623
  4050b8:	dec    esi
  4050b9:	clc    
  4050ba:	das    
  4050bb:	xchg   ecx,eax
  4050bc:	sbb    edx,DWORD PTR [ebx+0x5]
  4050bf:	cmp    al,0xd7
  4050c1:	pop    edi
  4050c2:	jne    0x405139
  4050c4:	jl     0x405072
  4050c6:	and    BYTE PTR [ecx-0x7],0xba
  4050ca:	adc    DWORD PTR [ecx-0xb],esi
  4050cd:	mov    al,0x3
  4050cf:	jmp    0x405066
  4050d1:	pop    ds
  4050d2:	sbb    ah,BYTE PTR [ebx+ebx*1]
  4050d5:	mov    esp,0xed47e7f4
  4050da:	lods   al,BYTE PTR ds:[esi]
  4050db:	inc    esi
  4050dc:	shr    cl,cl
  4050de:	jne    0x40510f
  4050e0:	inc    DWORD PTR [eax-0x24d1d1f]
  4050e6:	fiadd  WORD PTR [esi-0x5433066a]
  4050ec:	cmp    al,0xd2
  4050ee:	lahf   
  4050ef:	dec    ecx
  4050f0:	pop    edi
  4050f1:	jecxz  0x405127
  4050f3:	je     0x4050df
  4050f5:	call   0x960ef5b
  4050fa:	fwait
  4050fb:	adc    eax,0x4401ccd6
  405100:	mov    esp,0xe58584f6
  405105:	outs   dx,BYTE PTR ds:[esi]
  405106:	jo     0x40512c
  405108:	repnz inc edx
  40510a:	and    al,0x32
  40510c:	and    BYTE PTR [ebx+ebx*2],ah
  40510f:	ret    0x7fa7
  405112:	sbb    edi,DWORD PTR [ebx+ecx*1]
  405115:	test   eax,0x86aba452
  40511a:	ins    DWORD PTR es:[edi],dx
  40511b:	pop    ss
  40511c:	jmp    0x6d4b:0x8398bbe8
  405123:	test   al,0x1b
  405125:	xchg   edx,eax
  405126:	mov    BYTE PTR [edi-0x5b],bh
  405129:	test   eax,0x5dafbca6
  40512e:	mov    ebx,0xd510b10e
  405133:	mov    bh,BYTE PTR [ebx+ebx*8-0x1e]
  405137:	jmp    0x405102
  405139:	inc    ebp
  40513a:	popf   
  40513b:	ror    DWORD PTR [ecx],cl
  40513d:	rcl    BYTE PTR [edi],0xfb
  405140:	imul   ebx,edx,0x2f
  405143:	xor    ch,0xef
  405146:	rol    BYTE PTR [di],0x57
  40514a:	and    edx,eax
  40514c:	add    eax,0x270ab905
  405151:	cmp    BYTE PTR gs:[edi-0x68fe789e],0xf8
  405159:	jecxz  0x4051d4
  40515b:	cmc    
  40515c:	icebp  
  40515d:	adc    eax,0x7af2218a
  405162:	pushf  
  405163:	fwait
  405164:	add    cl,BYTE PTR [eax]
  405166:	fnstcw WORD PTR [eax-0x1637db0b]
  40516c:	adc    al,0x76
  40516e:	and    al,0x6d
  405170:	shl    esp,0x54
  405173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405174:	add    eax,0x4aaa4386
  405179:	inc    esi
  40517a:	fsubr  st(3),st
  40517c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40517d:	mov    dh,0xb4
  40517f:	test   eax,0x6818235f
  405184:	bound  eax,QWORD PTR [edi]
  405186:	out    dx,eax
  405187:	nop
  405188:	add    DWORD PTR [esi-0x16],eax
  40518b:	add    ebx,0x12
  40518e:	scas   al,BYTE PTR es:[edi]
  40518f:	loope  0x40513d
  405191:	dec    esi
  405192:	mov    ecx,0xb914b79b
  405197:	inc    edi
  405198:	dec    esp
  405199:	xlat   BYTE PTR ds:[ebx]
  40519a:	cmp    eax,0xd3bf8dfb
  40519f:	aas    
  4051a0:	cmp    eax,0xbdf3bd0d
  4051a5:	jmp    0xc30349f
  4051aa:	addr16 test bl,al
  4051ad:	inc    edi
  4051ae:	hlt    
  4051af:	sub    eax,edx
  4051b1:	jne    0x405204
  4051b3:	aas    
  4051b4:	jno    0x4051af
  4051b6:	int    0x6a
  4051b8:	leave  
  4051b9:	ss loope 0x40520a
  4051bc:	call   FWORD PTR es:[edi+edi*8+0x40]
  4051c1:	movntq QWORD PTR [ebp-0x1ee7bfb8],mm7
  4051c8:	pop    ebx
  4051c9:	sub    eax,0xf15e3b8a
  4051ce:	or     dl,BYTE PTR [edi+0x55]
  4051d1:	cmp    bl,ch
  4051d3:	call   0x6809:0x8a6ad45a
  4051da:	jl     0x40517c
  4051dc:	adc    dh,BYTE PTR [eax+0x79]
  4051df:	jo     0x405226
  4051e1:	inc    ecx
  4051e2:	adc    dl,bl
  4051e4:	mov    ds:0xd97bd6ba,al
  4051e9:	pop    edi
  4051ea:	jno    0x4051d3
  4051ec:	dec    edx
  4051ed:	sbb    ah,ah
  4051ef:	(bad)  
  4051f1:	mov    cl,0x41
  4051f3:	sbb    bl,BYTE PTR [ebx+0x661f51c0]
  4051f9:	inc    edi
  4051fa:	ss dec ecx
  4051fc:	push   edi
  4051fd:	inc    esp
  4051fe:	cmp    bh,BYTE PTR [esi-0x6f]
  405201:	aas    
  405202:	jb     0x40523b
  405204:	stos   BYTE PTR es:[edi],al
  405205:	es ins BYTE PTR es:[edi],dx
  405207:	xor    ch,BYTE PTR [eax]
  405209:	adc    bl,BYTE PTR [edi+0x78]
  40520c:	inc    ebx
  40520d:	dec    edi
  40520e:	mov    ebp,0x76f50c7c
  405213:	call   0x4f54:0x5b6c7e4f
  40521a:	push   0x32f12122
  40521f:	bound  ecx,QWORD PTR [edi]
  405221:	inc    esp
  405222:	xor    eax,ebx
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xe99594ee
  405804:	jb     0x40579f
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	arpl   WORD PTR [esi],bp
  405810:	mov    ch,0xe1
  405812:	pop    esp
  405813:	cmp    cl,dl
  405815:	xchg   ebx,eax
  405816:	and    DWORD PTR [ebp-0x32],ebx
  405819:	push   cs
  40581a:	and    DWORD PTR ds:0xcbb0ad59,esi
  405820:	(bad)  
  405821:	dec    ebx
  405822:	or     al,0xe9
  405824:	fist   DWORD PTR [edx]
  405826:	jl     0x4057f9
  405828:	push   esp
  405829:	es dec eax
  40582b:	(bad)  
  40582c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40582d:	fistp  DWORD PTR [eax-0x4d]
  405830:	jns    0x4057b7
  405832:	(bad)  
  405833:	or     DWORD PTR [edi+0x7],edi
  405836:	lock aas 
  405838:	add    eax,0x4a9665f1
  40583d:	mov    eax,ss:0x996f160
  405843:	cmp    eax,0xaf787e42
  405848:	imul   eax,DWORD PTR [ebx],0xfffffff5
  40584b:	retf   
  40584c:	and    al,0x52
  40584e:	ins    DWORD PTR es:[edi],dx
  40584f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405850:	imul   esi,DWORD PTR [edx],0xffffffd3
  405853:	add    ah,dl
  405855:	xor    DWORD PTR [ebp-0x4e],0xfffffff8
  405859:	arpl   WORD PTR [edi+0x67],si
  40585c:	jp     0x405841
  40585e:	jge    0x4057eb
  405860:	sub    BYTE PTR fs:0xf552e3a1,0xbb
  405868:	push   edx
  405869:	xchg   esi,eax
  40586a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586b:	call   0xc86f3a4e
  405870:	mov    gs,WORD PTR [eax]
  405872:	or     DWORD PTR [ecx-0x48814286],ecx
  405878:	pop    edi
  405879:	push   eax
  40587a:	or     al,0x62
  40587c:	ret    
  40587d:	repnz pop edi
  40587f:	or     al,BYTE PTR [edx+edi*1-0x4e232df2]
  405886:	pop    ebp
  405887:	ins    BYTE PTR es:[edi],dx
  405888:	dec    esp
  405889:	lods   eax,DWORD PTR ds:[esi]
  40588a:	add    bl,bh
  40588c:	mov    esi,0xd732afbc
  405891:	mov    BYTE PTR [ebp-0x27],0x11
  405895:	pop    edx
  405896:	lods   eax,DWORD PTR ds:[esi]
  405897:	push   ss
  405898:	(bad)  
  405899:	in     al,dx
  40589a:	scas   al,BYTE PTR es:[edi]
  40589b:	scas   eax,DWORD PTR es:[edi]
  40589c:	scas   al,BYTE PTR es:[edi]
  40589d:	scas   al,BYTE PTR es:[edi]
  40589e:	push   0x30ef4120
  4058a3:	shl    BYTE PTR [bp-0x1dad],1
  4058a8:	xlat   BYTE PTR ds:[ebx]
  4058a9:	(bad)  
  4058aa:	out    dx,eax
  4058ab:	adc    eax,0xa8dbc337
  4058b0:	pop    ds
  4058b1:	push   es
  4058b2:	push   0xac2da855
  4058b7:	push   ecx
  4058b8:	push   0x3e2c9a87
  4058bd:	(bad)  
  4058be:	mov    esi,0xdfe18820
  4058c3:	cmp    eax,0xfaffa9c2
  4058c8:	or     ebp,DWORD PTR [ecx-0x68091416]
  4058ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058cf:	sub    DWORD PTR es:[ecx-0x45686156],ebx
  4058d6:	retf   
  4058d7:	mov    al,ds:0xd060d6c9
  4058dc:	stos   DWORD PTR es:[edi],eax
  4058dd:	and    DWORD PTR [ebx+0x77],ebp
  4058e0:	lea    ebp,[ecx+0x2e]
  4058e3:	(bad)  
  4058e4:	out    0xa1,al
  4058e6:	outs   dx,BYTE PTR ds:[esi]
  4058e7:	hlt    
  4058e8:	lds    edi,FWORD PTR [ebx+0x6f339c98]
  4058ee:	icebp  
  4058ef:	fisttp QWORD PTR [eax+ebx*8]
  4058f2:	cmp    BYTE PTR [eax-0x52a8e89],al
  4058f8:	call   0xfcf8:0x34c46f27
  4058ff:	mov    edx,0xd7b1ca0d
  405904:	or     ebx,DWORD PTR [ebp+0x3df82113]
  40590a:	mov    dl,0xf8
  40590c:	rcl    dh,cl
  40590e:	sbb    eax,0xc680179f
  405913:	pop    esi
  405914:	shr    ah,1
  405916:	xor    BYTE PTR [edi],cl
  405918:	pop    es
  405919:	out    0x4f,al
  40591b:	cs js  0x4058c4
  40591e:	fstp   QWORD PTR [ebp+0xa8820e]
  405924:	push   ds
  405925:	pop    edx
  405926:	sub    al,0xf8
  405928:	mov    DWORD PTR [eax],edx
  40592a:	inc    edx
  40592b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40592c:	mov    ebp,0x75a404b0
  405931:	pop    esi
  405932:	inc    esp
  405933:	imul   ebx,DWORD PTR [ebx],0xa5f08402
  405939:	add    ah,BYTE PTR [ecx+edx*1]
  40593c:	or     eax,0x191185a8
  405941:	je     0x4058fd
  405943:	sub    DWORD PTR [ecx+esi*2-0x3f],0x5d222fab
  40594b:	pop    ebx
  40594c:	ss ja  0x40590f
  40594f:	ins    BYTE PTR es:[edi],dx
  405950:	cmp    BYTE PTR [ecx-0x3e],0x7d
  405954:	(bad)  
  405955:	test   BYTE PTR [eax],0x9c
  405958:	add    al,0xcd
  40595a:	add    DWORD PTR [esi],0x56b9194
  405960:	repnz fdiv DWORD PTR [ecx+ebp*2+0x254968fc]
  405968:	mov    edx,0xff5ca669
  40596d:	cmp    DWORD PTR [ecx*2-0x59a84fee],edi
  405974:	mov    eax,0xfcbd26d5
  405979:	shr    BYTE PTR [ecx],cl
  40597b:	sbb    ecx,0x23e08453
  405981:	or     cl,BYTE PTR [eax-0x1fb94d0c]
  405987:	pminsw mm5,QWORD PTR [esp+edx*2]
  40598b:	dec    edx
  40598c:	push   esp
  40598d:	(bad)  
  40598e:	aam    0x8b
  405990:	mov    esi,0x1a06a31c
  405995:	mov    ah,0x1f
  405997:	das    
  405998:	fld    QWORD PTR [edx+ebp*4+0x72c2b0af]
  40599f:	xchg   edx,eax
  4059a0:	cmc    
  4059a1:	xor    cl,BYTE PTR [ebp-0x7f]
  4059a4:	fistp  DWORD PTR [ecx-0x20e9a026]
  4059aa:	(bad)  
  4059ab:	cmp    al,0xb3
  4059ad:	sbb    BYTE PTR [edx+0x3bae5726],bl
  4059b3:	dec    edx
  4059b4:	and    al,bl
  4059b6:	enter  0xc5f0,0xd3
  4059ba:	dec    edi
  4059bb:	std    
  4059bc:	xchg   edi,eax
  4059bd:	push   ds
  4059be:	aaa    
  4059bf:	and    eax,0xad244fd1
  4059c4:	pop    ebp
  4059c5:	scas   eax,DWORD PTR es:[edi]
  4059c6:	cli    
  4059c7:	imul   edi,DWORD PTR [esi],0x64
  4059ca:	push   eax
  4059cb:	inc    edx
  4059cc:	add    bh,BYTE PTR [esi+0x2e]
  4059cf:	imul   ecx,ecx,0x51c811f2
  4059d5:	mov    bl,0x6c
  4059d7:	add    edx,DWORD PTR [edi+0x19]
  4059da:	mov    esi,0x9981b56d
  4059df:	xchg   edx,eax
  4059e0:	or     eax,0x5f1e3256
  4059e6:	daa    
  4059e7:	dec    edx
  4059e8:	sub    dh,BYTE PTR [ebp+0x3e]
  4059eb:	or     ecx,DWORD PTR [edx]
  4059ed:	ret    
  4059ee:	std    
  4059ef:	test   eax,0xaac506df
  4059f4:	lock dec ebp
  4059f6:	push   ds
  4059f7:	in     al,0x77
  4059f9:	push   ss
  4059fa:	xchg   edi,eax
  4059fb:	js     0x4059ae
  4059fd:	sbb    esp,edx
  4059ff:	sbb    BYTE PTR [ebx+0x59],ch
  405a02:	sbb    ebx,edi
  405a04:	(bad)  
  405a05:	int    0xc5
  405a07:	cwde   
  405a08:	packuswb mm6,QWORD PTR [ebp-0x18]
  405a0c:	xchg   esp,eax
  405a0d:	in     eax,0x4
  405a0f:	inc    eax
  405a10:	add    bl,0xc2
  405a13:	xor    eax,0x565bc003
  405a18:	jns    0x405a21
  405a1a:	jmp    0x405a07
  405a1c:	pop    esi
  405a1d:	jmp    0x4059bb
  405a1f:	cmp    eax,0x39bdbe50
  405a24:	frstor [edx]
  405a26:	shl    al,1
  405a28:	iret   
  405a29:	aaa    
  405a2a:	fdivr  DWORD PTR [eax-0x56]
  405a2d:	and    cl,bh
  405a2f:	mov    al,0xab
  405a31:	mov    ecx,0xd119882b
  405a36:	cli    
  405a37:	pop    ecx
  405a38:	loop   0x405a03
  405a3a:	sahf   
  405a3b:	mov    al,ds:0x7b1c01d0
  405a40:	out    0x25,al
  405a42:	or     eax,0x6021f550
  405a47:	loop   0x4059e4
  405a49:	outs   dx,DWORD PTR ds:[esi]
  405a4a:	adc    dl,BYTE PTR [esi+esi*4+0x4a]
  405a4e:	mov    al,0x7b
  405a50:	inc    ebx
  405a51:	sub    al,0xd1
  405a53:	test   esp,eax
  405a55:	inc    ebp
  405a56:	rcr    BYTE PTR [edi],0xf2
  405a59:	xor    eax,0xf5d4d6d0
  405a5e:	or     dh,cl
  405a60:	push   0x5a
  405a62:	imul   esi,DWORD PTR [ecx],0x38
  405a65:	and    ebx,edi
  405a67:	push   0xffffff8c
  405a69:	fst    DWORD PTR [edx]
  405a6b:	xor    al,0x3d
  405a6d:	std    
  405a6e:	adc    BYTE PTR [eax],bh
  405a70:	cmp    al,ch
  405a72:	cmp    esi,eax
  405a74:	pusha  
  405a75:	or     esp,DWORD PTR [edx+0x4a022763]
  405a7b:	fs mov dl,0x5b
  405a7e:	push   eax
  405a7f:	xor    eax,0x4152a10a
  405a84:	or     BYTE PTR [edi],ah
  405a86:	jno    0x405a25
  405a88:	sbb    ecx,esi
  405a8a:	adc    DWORD PTR [edi+0x4884237b],esi
  405a90:	retf   0x8fb9
  405a93:	dec    ebp
  405a94:	mov    ds:0x8453ae26,al
  405a99:	cmp    al,0x88
  405a9b:	rcr    DWORD PTR [esi-0x463137eb],0xbd
  405aa2:	sub    al,0x7b
  405aa4:	mov    al,0xa1
  405aa6:	xor    eax,0x2b07ed23
  405aab:	add    al,0xd9
  405aad:	jp     0x405aa0
  405aaf:	ins    BYTE PTR es:[edi],dx
  405ab0:	push   ebp
  405ab1:	dec    eax
  405ab2:	cmp    dl,bh
  405ab4:	jae    0x405ab4
  405ab6:	pop    edi
  405ab7:	loope  0x405a8a
  405ab9:	mov    ebx,0x5f94a51f
  405abf:	rol    BYTE PTR [esi-0xe],0x55
  405ac3:	ins    DWORD PTR es:[edi],dx
  405ac4:	out    dx,ax
  405ac6:	adc    DWORD PTR [esi],edx
  405ac8:	mov    ebp,0x6d6ee23f
  405acd:	jnp    0x405b3c
  405acf:	je     0x405a8f
  405ad1:	xchg   DWORD PTR [ebx+0x7036c04d],ecx
  405ad7:	pushf  
  405ad8:	jmp    0x94909fbe
  405add:	mov    ds:0xe6bf5fce,al
  405ae2:	xor    esp,DWORD PTR [edi+ecx*8+0x2a2a8b83]
  405ae9:	aaa    
  405aea:	or     dl,dl
  405aec:	mov    ds:0x552709ed,al
  405af1:	jb     0x405b0a
  405af3:	aad    0x2d
  405af5:	outs   dx,BYTE PTR ds:[esi]
  405af6:	sbb    BYTE PTR [eax+0x5c],ah
  405af9:	hlt    
  405afa:	mov    ebp,0x7f0daa74
  405aff:	xor    ebp,DWORD PTR [edi+eiz*4]
  405b02:	inc    ebx
  405b03:	dec    ebp
  405b04:	cs fucomp st(6)
  405b07:	fmul   st(1),st
  405b09:	(bad)  
  405b0b:	sar    DWORD PTR [eax-0x27],0xbc
  405b0f:	(bad)  
  405b10:	aad    0x81
  405b12:	int    0x24
  405b14:	mov    dl,0x3c
  405b16:	aas    
  405b17:	inc    ebp
  405b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b19:	or     eax,0xd4fe2174
  405b1e:	mov    eax,0x46bc31bc
  405b23:	and    al,BYTE PTR [ebp+0x13]
  405b26:	sub    eax,0xdecb430e
  405b2b:	ds cdq 
  405b2d:	leave  
  405b2e:	jae    0x405b6f
  405b30:	or     eax,0xea25afb6
  405b35:	xchg   ecx,eax
  405b36:	lds    ebx,FWORD PTR [eax-0x44]
  405b39:	in     eax,0x3d
  405b3b:	and    ch,BYTE PTR [edi+0x59]
  405b3e:	test   al,0xe0
  405b40:	leave  
  405b41:	ja     0x405b8b
  405b43:	sub    al,0x28
  405b45:	in     eax,0xe2
  405b47:	jnp    0x405ba1
  405b49:	inc    ebp
  405b4a:	fldenv [ebx+0xa]
  405b4d:	adc    dh,BYTE PTR [esi+0x7b]
  405b50:	enter  0x8f6e,0xaa
  405b54:	int    0xb5
  405b56:	pop    ebx
  405b57:	push   ebp
  405b58:	mov    ch,0xa7
  405b5a:	les    ecx,FWORD PTR ds:0xcdfab4a4
  405b60:	xlat   BYTE PTR ds:[ebx]
  405b61:	lock xor edx,DWORD PTR [ecx]
  405b64:	repz push 0xfffffffc
  405b67:	sub    DWORD PTR [edx+0x1dd16b40],ebx
  405b6d:	aad    0x31
  405b6f:	xchg   ecx,eax
  405b70:	jecxz  0x405b1a
  405b72:	and    eax,0xf1cf987c
  405b77:	scas   eax,DWORD PTR es:[edi]
  405b78:	add    cl,BYTE PTR [edi+0x57]
  405b7b:	std    
  405b7c:	outs   dx,BYTE PTR ds:[esi]
  405b7d:	xchg   ebx,eax
  405b7e:	adc    eax,0xd57bd2ec
  405b83:	add    BYTE PTR [ebx],bh
  405b85:	and    DWORD PTR [ebx-0x54ac7c01],0x16095579
  405b8f:	addr16 mov ds:0x3e95,al
  405b93:	test   ebp,edi
  405b95:	jp     0x405b20
  405b97:	pop    edx
  405b98:	mov    edx,0xdb81052b
  405b9d:	add    BYTE PTR [ebp-0x488305d2],0x19
  405ba4:	push   cs
  405ba5:	inc    ecx
  405ba6:	aas    
  405ba7:	cmp    edx,edx
  405ba9:	cmp    DWORD PTR [ebp+esi*8+0x74028d2b],0xf3d665f
  405bb4:	push   ss
  405bb5:	jle    0x405b5d
  405bb7:	arpl   WORD PTR ds:0xf2c7afa6,sp
  405bbd:	pop    esp
  405bbe:	aam    0xa0
  405bc0:	xor    BYTE PTR [edx-0x2179405f],ah
  405bc6:	cwde   
  405bc7:	lods   al,BYTE PTR ds:[esi]
  405bc8:	sub    dl,bl
  405bca:	cmp    dl,BYTE PTR [ecx-0x43]
  405bcd:	mov    bh,0x1c
  405bcf:	test   DWORD PTR [ebp+ecx*1-0x64],ebx
  405bd3:	pop    esp
  405bd4:	lods   eax,DWORD PTR ds:[esi]
  405bd5:	test   DWORD PTR [edx+0x18d023fa],eax
  405bdb:	jnp    0x405bea
  405bdd:	rcr    al,0x8
  405be0:	dec    eax
  405be1:	mov    cl,0xac
  405be3:	inc    ebp
  405be4:	arpl   WORD PTR [esi],bx
  405be6:	push   eax
  405be7:	pop    ds
  405be8:	xchg   BYTE PTR [ebx+0x22],bl
  405beb:	pop    es
  405bec:	int3   
  405bed:	iret   
  405bee:	outs   dx,DWORD PTR ds:[esi]
  405bef:	mov    edx,0xa806cd87
  405bf4:	jge    0x405b76
  405bf6:	fisubr DWORD PTR [edx]
  405bf8:	mov    ecx,0x4f116075
  405bfd:	test   BYTE PTR [ebp+0xcd295dd],dh
  405c03:	cs fwait
  405c05:	popa   
  405c06:	sbb    eax,DWORD PTR [eax+0x5f221591]
  405c0c:	es inc esp
  405c0e:	xchg   DWORD PTR [edx+0x16],edi
  405c11:	push   ss
  405c12:	je     0x405c00
  405c14:	test   al,dl
  405c16:	loopne 0x405c74
  405c18:	in     al,0x1
  405c1a:	pop    ss
  405c1b:	loopne 0x405c05
  405c1d:	in     eax,0x8c
  405c1f:	and    DWORD PTR [ebp+0x5e],esp
  405c22:	clc    
  405c23:	and    BYTE PTR [ecx],bl
  405c25:	mov    ch,0x7
  405c27:	stos   BYTE PTR es:[edi],al
  405c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c29:	xor    al,0xdf
  405c2b:	cmp    DWORD PTR [esi-0x42],eax
  405c2e:	mov    ds,WORD PTR [edx+0x54]
  405c31:	jp     0x405c29
  405c33:	not    DWORD PTR [esi+0x33]
  405c36:	pop    edi
  405c37:	jmp    0x384b:0x353ad11a
  405c3e:	ror    DWORD PTR [ebx-0x3940cb81],cl
  405c44:	scas   al,BYTE PTR es:[edi]
  405c45:	inc    esi
  405c46:	mov    ebp,0x2cb9ace0
  405c4b:	lods   eax,DWORD PTR ds:[esi]
  405c4c:	lods   eax,DWORD PTR ds:[esi]
  405c4d:	push   ebp
  405c4e:	fnstcw WORD PTR [ebx-0x25]
  405c51:	mov    bl,0xae
  405c53:	in     al,dx
  405c54:	into   
  405c55:	push   es
  405c56:	loopne 0x405c56
  405c58:	(bad)  
  405c59:	scas   eax,DWORD PTR es:[edi]
  405c5a:	lods   al,BYTE PTR ds:[esi]
  405c5b:	and    ah,al
  405c5d:	cwde   
  405c5e:	lock in eax,0xfc
  405c61:	xlat   BYTE PTR ds:[ebx]
  405c62:	xor    dh,BYTE PTR [edx]
  405c64:	call   DWORD PTR [edi]
  405c66:	lods   eax,DWORD PTR ds:[esi]
  405c67:	out    0xec,eax
  405c69:	mov    ah,0x51
  405c6b:	and    DWORD PTR [ecx+0x504d7cd4],edi
  405c71:	add    ch,ch
  405c73:	pop    edi
  405c74:	mov    esi,0x67baef95
  405c79:	std    
  405c7a:	loop   0x405c42
  405c7c:	in     eax,0x26
  405c7e:	psubusb mm1,mm7
  405c81:	lahf   
  405c82:	jg     0x405cc9
  405c84:	pusha  
  405c85:	test   DWORD PTR [esi-0x27ed9d1f],0x3fec4c00
  405c8f:	xor    ebx,edx
  405c91:	jmp    0x6087:0xbffcdc8e
  405c98:	inc    ebx
  405c99:	add    BYTE PTR fs:[edx],al
  405c9c:	push   ecx
  405c9d:	or     DWORD PTR [eax+0x3589198c],ebp
  405ca3:	pop    ebx
  405ca4:	xchg   ecx,eax
  405ca5:	pop    ebp
  405ca6:	lods   eax,DWORD PTR ds:[esi]
  405ca7:	lods   al,BYTE PTR ds:[esi]
  405ca8:	js     0x405cce
  405caa:	sub    DWORD PTR [eax],ebp
  405cac:	adc    BYTE PTR [eax-0x78],bl
  405caf:	add    DWORD PTR [ebx-0x76],ebx
  405cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cb3:	int    0x58
  405cb5:	fstp   TBYTE PTR [esi+0x50]
  405cb8:	push   edx
  405cb9:	mov    al,BYTE PTR [edi]
  405cbb:	sub    DWORD PTR [edx+eax*4-0x324934e2],esi
  405cc2:	sbb    al,0x6a
  405cc4:	test   ch,0x6f
  405cc7:	imul   edi,DWORD PTR [ebp+0x69],0x4bc735bb
  405cce:	je     0x405c81
  405cd0:	int    0x26
  405cd2:	xchg   esi,eax
  405cd3:	mov    edi,0xa3d47f91
  405cd8:	test   eax,0x986b43cb
  405cdd:	inc    esp
  405cde:	into   
  405cdf:	add    al,0x7a
  405ce1:	arpl   WORD PTR [ebx],ax
  405ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce4:	(bad)  
  405ce5:	push   esp
  405ce6:	push   edi
  405ce7:	scas   al,BYTE PTR es:[edi]
  405ce8:	push   0xffffff9f
  405cea:	sbb    eax,0xd9b40a5d
  405cef:	jnp    0x405cbc
  405cf1:	ins    DWORD PTR es:[edi],dx
  405cf2:	push   cs
  405cf3:	ins    BYTE PTR es:[edi],dx
  405cf4:	fnstsw WORD PTR [ecx-0x6c9f66a6]
  405cfa:	(bad)  
  405cfb:	arpl   WORD PTR [ebx+0x3e],dx
  405cfe:	imul   edx,DWORD PTR [edi],0xbe0feb00
  405d04:	cmp    eax,0xb7aa084b
  405d09:	sbb    BYTE PTR [edi+0x15],ah
  405d0c:	dec    esp
  405d0d:	jecxz  0x405cc8
  405d0f:	sar    ah,cl
  405d11:	cmp    al,0x18
  405d13:	dec    esp
  405d14:	leave  
  405d15:	(bad)  
  405d16:	fistp  QWORD PTR [eax-0x55f389ee]
  405d1c:	inc    esi
  405d1d:	push   cs
  405d1e:	inc    ebx
  405d1f:	dec    edi
  405d20:	jne    0x405cb8
  405d22:	xchg   BYTE PTR [ebx+0x3daa3554],bh
  405d28:	daa    
  405d29:	stos   DWORD PTR es:[edi],eax
  405d2a:	mov    dh,0x92
  405d2c:	add    cl,ch
  405d2e:	adc    DWORD PTR ss:[esi+0x52],0xffffffe6
  405d33:	lods   eax,DWORD PTR ds:[esi]
  405d34:	pop    edx
  405d35:	gs push eax
  405d37:	outs   dx,BYTE PTR ds:[esi]
  405d38:	jno    0x405d8f
  405d3a:	neg    DWORD PTR [edi-0x58]
  405d3d:	jmp    0x5a80c2ee
  405d42:	je     0x405da9
  405d44:	mov    al,ds:0x7c61502
  405d49:	or     BYTE PTR [edx+0x79],0x71
  405d4d:	xlat   BYTE PTR ds:[ebx]
  405d4e:	icebp  
  405d4f:	dec    ebx
  405d50:	mov    ebx,0xcd560b75
  405d55:	jmp    0x75d8:0x5f8051a9
  405d5c:	test   eax,0x9e821beb
  405d61:	and    eax,esp
  405d63:	mov    ah,BYTE PTR ds:0x83b80d7
  405d69:	jae    0x405d3b
  405d6b:	dec    esi
  405d6c:	aaa    
  405d6d:	mov    WORD PTR [ebp+0x24],ss
  405d70:	test   ebx,0x662803b3
  405d76:	js     0x405d89
  405d78:	fsubr  DWORD PTR [esi]
  405d7a:	mov    eax,ds:0xfbf79cf6
  405d7f:	out    0x1f,eax
  405d81:	aad    0x6f
  405d83:	mov    WORD PTR [ebp+0x7b],0x9d1b
  405d89:	or     eax,0x16
  405d8c:	jge    0x405db1
  405d8e:	inc    edx
  405d8f:	in     al,0xb2
  405d91:	iret   
  405d92:	sbb    eax,0xd251a723
  405d97:	stc    
  405d98:	inc    esi
  405d99:	push   es
  405d9a:	(bad)  
  405d9b:	or     esi,edx
  405d9d:	es pop ebx
  405d9f:	inc    eax
  405da0:	imul   ebx,DWORD PTR [eax-0x1b3ac983],0x31
  405da7:	push   eax
  405da8:	jmp    0x99742c85
  405dad:	jnp    0x405da3
  405daf:	neg    edx
  405db1:	ins    DWORD PTR es:[edi],dx
  405db2:	xchg   ebx,eax
  405db3:	unpckhps xmm4,xmm4
  405db6:	and    al,0x94
  405db8:	pop    eax
  405db9:	int3   
  405dba:	cmp    bl,ah
  405dbc:	cmp    ebp,eax
  405dbe:	xor    eax,0xc101b546
  405dc3:	sbb    cl,BYTE PTR [esi+ecx*4-0xc47e8ab]
  405dca:	cli    
  405dcb:	hlt    
  405dcc:	sbb    BYTE PTR [ecx+ecx*8],ah
  405dcf:	out    dx,al
  405dd0:	inc    esp
  405dd1:	mov    esp,esp
  405dd3:	mov    edx,0xedcb033b
  405dd8:	sub    dh,BYTE PTR [ecx+0x28]
  405ddb:	repz inc esi
  405ddd:	mov    eax,0x8fb68114
  405de2:	fldcw  WORD PTR [edi+0xcc9b795]
  405de8:	int    0xd9
  405dea:	jp     0x405e48
  405dec:	rol    BYTE PTR gs:[esi-0x5207e352],cl
  405df3:	adc    bl,bl
  405df5:	les    esp,FWORD PTR ds:0x92292db5
  405dfb:	xor    dl,ah
  405dfd:	push   ebx
  405dfe:	and    dh,ch
  405e00:	or     eax,0x9cc888fc
  405e05:	pop    edi
  405e06:	test   ah,cl
  405e08:	(bad)  
  405e09:	ins    DWORD PTR es:[edi],dx
  405e0a:	cmc    
  405e0b:	mov    ds:0xaadb60bf,eax
  405e10:	cld    
  405e11:	loopne 0x405da0
  405e13:	dec    eax
  405e14:	mov    eax,ds:0x7a78ca37
  405e19:	inc    esp
  405e1a:	retf   
  405e1b:	push   es
  405e1c:	sti    
  405e1d:	adc    DWORD PTR [edx+0x26],0x58
  405e21:	aad    0xdd
  405e23:	es test ch,ah
  405e26:	outs   dx,BYTE PTR ds:[esi]
  405e27:	mov    edx,DWORD PTR [ebx-0x49]
  405e2a:	mov    edx,DWORD PTR [eax]
  405e2c:	enter  0x254f,0x82
  405e30:	dec    esi
  405e31:	mov    bl,0xc9
  405e33:	mov    bl,0xa9
  405e35:	pop    ebp
  405e36:	mov    esp,DWORD PTR [esi+0x3fe8be9a]
  405e3c:	xchg   ecx,eax
  405e3d:	push   cs
  405e3e:	or     edx,esi
  405e40:	push   edx
  405e41:	rep ins DWORD PTR es:[edi],dx
  405e43:	cmovg  edx,eax
  405e46:	(bad)  [edx-0x3a7e385]
  405e4c:	push   ss
  405e4d:	jmp    0xcabf:0x7ddc7266
  405e54:	push   ss
  405e55:	(bad)  
  405e56:	mov    ah,0x74
  405e58:	pop    edi
  405e59:	mov    dh,0x94
  405e5b:	gs (bad) 
  405e5d:	ja     0x405e06
  405e5f:	sbb    DWORD PTR [ecx+0x547ba96e],ebx
  405e65:	jae    0x405e03
  405e67:	icebp  
  405e68:	sub    BYTE PTR [edi+0x35],bh
  405e6b:	and    al,0x27
  405e6d:	(bad)
  405e70:	mov    ds:0xfb3a3492,al
  405e75:	cs loope 0x405e4c
  405e78:	and    eax,0x3e66640
  405e7d:	sbb    DWORD PTR [ebp-0x7bb7061],ebx
  405e83:	and    bl,al
  405e85:	popf   
  405e86:	pop    es
  405e87:	retf   
  405e88:	fs xor al,0x90
  405e8b:	xchg   edx,eax
  405e8c:	outs   dx,BYTE PTR ds:[esi]
  405e8d:	dec    ebx
  405e8e:	push   edi
  405e8f:	dec    ecx
  405e90:	pop    ebx
  405e91:	add    DWORD PTR [edi+0x5b],eax
  405e94:	int3   
  405e95:	loopne 0x405f04
  405e97:	mov    ebx,0x64803d1b
  405e9c:	out    dx,eax
  405e9d:	dec    edx
  405e9e:	xor    eax,0x51fdd0ab
  405ea3:	scas   eax,DWORD PTR es:[edi]
  405ea4:	mov    esp,0x1a5c1e0d
  405ea9:	inc    ecx
  405eaa:	mov    edx,0xc04a1457
  405eaf:	sbb    BYTE PTR [esi-0x836cb35],0x6
  405eb6:	out    dx,eax
  405eb7:	xor    DWORD PTR [ecx],esp
  405eb9:	and    BYTE PTR [edx],ch
  405ebb:	xor    al,BYTE PTR [edx]
  405ebd:	pop    ecx
  405ebe:	jge    0x405e51
  405ec0:	ja     0x405e59
  405ec2:	shl    ecx,0xc6
  405ec5:	retf   
  405ec6:	sub    BYTE PTR [edi+0xf8262c3],al
  405ecc:	jmp    0x71cff2d1
  405ed1:	cld    
  405ed2:	mov    esp,0x820c8f27
  405ed7:	aad    0x1e
  405ed9:	cmp    BYTE PTR [ebp+0xfbd38a2],0x20
  405ee0:	(bad)  
  405ee1:	outs   dx,DWORD PTR ds:[esi]
  405ee2:	prefetchwt1 BYTE PTR [edx+edi*8]
  405ee6:	sub    ah,BYTE PTR [eax+0x70]
  405ee9:	sbb    esp,esp
  405eeb:	mov    esi,0xf08f19b9
  405ef0:	inc    ebp
  405ef1:	push   edx
  405ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ef4:	xor    bh,cl
  405ef6:	xor    eax,DWORD PTR [ebp+0x1a]
  405ef9:	scas   eax,DWORD PTR es:[edi]
  405efa:	or     dl,BYTE PTR [edx+0x4b]
  405efd:	lock pop es
  405eff:	push   esp
  405f00:	gs inc edi
  405f02:	xlat   BYTE PTR ds:[ebx]
  405f03:	mov    ds:0xdc323e5b,eax
  405f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f09:	int    0xe0
  405f0b:	push   ecx
  405f0c:	fstp   TBYTE PTR [ebp-0x43]
  405f0f:	jne    0x405ea2
  405f11:	xor    bh,ch
  405f13:	xchg   edi,eax
  405f14:	jae    0x405f88
  405f16:	mov    al,ds:0x44275d7a
  405f1b:	icebp  
  405f1c:	stc    
  405f1d:	ret    0x20ca
  405f20:	(bad)  
  405f21:	sbb    ebx,DWORD PTR [ebp+0x64]
  405f24:	mov    bh,BYTE PTR [ecx+eax*2]
  405f27:	les    ecx,FWORD PTR [esi+eiz*4]
  405f2a:	retf   
  405f2b:	iret   
  405f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f2d:	pop    ecx
  405f2e:	add    DWORD PTR [ebp-0x7f],esp
  405f31:	xchg   ebx,eax
  405f32:	pop    esi
  405f33:	lahf   
  405f34:	std    
  405f35:	inc    edx
  405f36:	fs test al,0xc
  405f39:	(bad)  
  405f3b:	bound  ebx,QWORD PTR [edx+0x31]
  405f3e:	sbb    ebx,edx
  405f40:	or     BYTE PTR [ebx-0x1e88041b],bh
  405f46:	mov    dh,0xc9
  405f48:	sub    bl,BYTE PTR [esi]
  405f4a:	pop    ds
  405f4b:	sub    dh,BYTE PTR [ecx+0x75c00a85]
  405f51:	(bad)  
  405f52:	repz add WORD PTR [ecx-0x117a8eea],di
  405f5a:	mov    cl,0x93
  405f5c:	adc    ch,BYTE PTR [ecx-0x42]
  405f5f:	mov    ah,0x14
  405f61:	mov    ah,0x15
  405f63:	scas   al,BYTE PTR es:[edi]
  405f64:	ret    
  405f65:	cwde   
  405f66:	fwait
  405f67:	je     0x405f42
  405f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f6a:	test   al,0x90
  405f6c:	ret    0x7c4a
  405f6f:	push   DWORD PTR [ebx]
  405f71:	jns    0x405f75
  405f73:	les    eax,FWORD PTR [ecx+edx*4-0x6b58dfad]
  405f7a:	out    dx,eax
  405f7b:	inc    esp
  405f7c:	retf   
  405f7d:	aam    0xa6
  405f7f:	aaa    
  405f80:	icebp  
  405f81:	jb     0x405fd8
  405f83:	mov    esi,DWORD PTR [edx+0x1c]
  405f86:	xor    BYTE PTR [ebp+0x55],0x19
  405f8a:	inc    eax
  405f8b:	jb     0x405f5c
  405f8d:	(bad)  
  405f8e:	arpl   cx,di
  405f90:	pop    eax
  405f91:	mov    eax,0xde19784
  405f96:	push   edx
  405f97:	mov    cl,0xdc
  405f99:	test   eax,0xc12ed90d
  405f9e:	out    dx,eax
  405f9f:	sub    esp,DWORD PTR [eax]
  405fa1:	std    
  405fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa3:	jb     0x405ff0
  405fa5:	and    al,0xda
  405fa7:	xor    eax,0xd98ba100
  405fac:	or     ebx,ebp
  405fae:	(bad)  
  405faf:	rcr    DWORD PTR [edi+edx*1],cl
  405fb2:	sbb    edi,DWORD PTR [edx+0x3f39f99f]
  405fb8:	(bad)  
  405fb9:	mov    ds:0x2099cba6,eax
  405fbe:	loope  0x405f4c
  405fc0:	out    dx,eax
  405fc1:	xor    al,0xfa
  405fc3:	test   DWORD PTR [ebx+0x7],0xa1e1ddfb
  405fca:	retf   
  405fcb:	mov    edx,0x792c32d5
  405fd0:	push   ebp
  405fd1:	ins    BYTE PTR es:[edi],dx
  405fd2:	fimul  DWORD PTR ds:0x99bc2f0f
  405fd8:	push   edi
  405fd9:	sbb    al,BYTE PTR [eax+0x32d354be]
  405fdf:	cld    
  405fe0:	fdivp  st(6),st
  405fe2:	and    eax,0x2ef5b418
  405fe7:	ins    DWORD PTR es:[edi],dx
  405fe8:	fcom   QWORD PTR [ebp-0x4dd6d5b8]
  405fee:	out    dx,eax
  405fef:	pushf  
  405ff0:	inc    edx
  405ff1:	(bad)  
  405ff2:	sbb    edi,DWORD PTR [ebp+ebp*4+0x2a6096a8]
  405ff9:	pop    ecx
  405ffa:	clc    
  405ffb:	cmp    bl,dl
  405ffd:	jmp    0x406006
  405fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406000:	push   cs
  406001:	mov    es,WORD PTR [esp+ecx*1-0x59]
  406005:	inc    ebp
  406006:	cmp    BYTE PTR [ebp+0x4a],ah
  406009:	in     al,dx
  40600a:	shr    DWORD PTR [esi+esi*4],1
  40600d:	jecxz  0x406051
  40600f:	inc    edi
  406010:	fnstsw WORD PTR [edi+0x4fd7b35e]
  406016:	mov    ds:0xffc3527a,al
  40601b:	loop   0x406041
  40601d:	add    al,0x7a
  40601f:	fs stos DWORD PTR es:[edi],eax
  406021:	dec    edi
  406022:	cdq    
  406023:	inc    ebp
  406024:	aas    
  406025:	out    0x45,al
  406027:	push   eax
  406028:	jg     0x405fd7
  40602a:	sbb    BYTE PTR [ebx+eiz*8],bh
  40602d:	mov    eax,0x62250f65
  406032:	clc    
  406033:	fcomp  DWORD PTR [esi+0x7d508127]
  406039:	xchg   DWORD PTR [edx],esi
  40603b:	bound  edi,QWORD PTR [edi+0xc8622a2]
  406041:	imul   edi,DWORD PTR [eax+0x33],0x9bf8358c
  406048:	add    bl,bl
  40604a:	in     eax,0xd2
  40604c:	sub    eax,0x1ff68492
  406051:	loopne 0x405ffe
  406053:	or     al,0x36
  406055:	ret    0xb6df
  406058:	(bad)  
  406059:	das    
  40605a:	mov    ch,0x96
  40605c:	cmp    cl,BYTE PTR ds:0x959429d0
  406062:	jno    0x4060c6
  406064:	fdiv   DWORD PTR [esi+ebx*4]
  406067:	(bad)  
  406068:	out    dx,eax
  406069:	daa    
  40606a:	test   BYTE PTR [eax+0x22009df],bl
  406070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406071:	xor    ecx,esp
  406073:	sub    eax,esi
  406075:	cwde   
  406076:	xor    edi,DWORD PTR [esi-0x33]
  406079:	popf   
  40607a:	scas   eax,DWORD PTR es:[edi]
  40607b:	or     DWORD PTR [ebx-0x25ce2964],ebx
  406081:	and    BYTE PTR [eax],0xe6
  406084:	cli    
  406085:	sbb    dh,cl
  406087:	(bad)  
  406088:	jp     0x406013
  40608a:	jnp    0x406060
  40608c:	std    
  40608d:	adc    eax,0xff8e83f7
  406092:	lods   eax,DWORD PTR ds:[esi]
  406093:	sub    ecx,DWORD PTR [eax]
  406095:	add    DWORD PTR [ecx+0x5b],eax
  406098:	push   ds
  406099:	scas   eax,DWORD PTR es:[edi]
  40609a:	out    dx,eax
  40609b:	gs inc esi
  40609d:	lock js 0x4060f6
  4060a0:	js     0x40604b
  4060a2:	sub    ecx,ebp
  4060a4:	loopne 0x4060f4
  4060a6:	stc    
  4060a7:	pop    edi
  4060a8:	leave  
  4060a9:	cs mov ebx,DWORD PTR cs:[ecx]
  4060ad:	mov    edi,0xbb22fbcb
  4060b2:	fiadd  DWORD PTR [edi+0x40]
  4060b5:	jno    0x4060b8
  4060b7:	sbb    eax,0xb4f358b5
  4060bc:	ss dec edi
  4060be:	iret   
  4060bf:	rcl    cl,1
  4060c1:	in     al,0xc7
  4060c3:	repz mov edi,0x44843a52
  4060c9:	loop   0x406094
  4060cb:	jb     0x4060d0
  4060cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ce:	scas   al,BYTE PTR es:[edi]
  4060cf:	mov    ah,0x73
  4060d1:	mul    DWORD PTR [ebx]
  4060d3:	out    dx,al
  4060d4:	jne    0x40611a
  4060d6:	lahf   
  4060d7:	aad    0xe3
  4060d9:	adc    BYTE PTR [esi+0xe1dbea2],ch
  4060df:	xor    eax,0x33efb57f
  4060e4:	(bad)  
  4060e5:	cli    
  4060e6:	jo     0x4060a6
  4060e8:	mov    edx,0x859cf8c8
  4060ed:	dec    ecx
  4060ee:	inc    ecx
  4060ef:	jb     0x406110
  4060f1:	and    BYTE PTR [eax+edi*1+0x3d],ch
  4060f5:	(bad)  
  4060f6:	sub    cl,BYTE PTR gs:[ecx-0x24]
  4060fa:	xor    BYTE PTR [ebp-0x7ab61ddc],0xc8
  406101:	sbb    ch,0xc1
  406104:	sbb    eax,0x280772f4
  406109:	jo     0x406187
  40610b:	pop    esi
  40610c:	mov    al,0x42
  40610e:	repnz xchg edi,eax
  406110:	push   eax
  406111:	adc    DWORD PTR [ecx],eax
  406113:	cmp    BYTE PTR [edx],0x99
  406116:	jge    0x406152
  406118:	xchg   edx,eax
  406119:	push   ebx
  40611a:	lock stos DWORD PTR es:[edi],eax
  40611c:	jae    0x40618a
  40611e:	mov    eax,0x1db1848e
  406123:	push   ss
  406124:	xchg   ebp,eax
  406125:	imul   edx,DWORD PTR [esp+edi*8-0x5c],0x6
  40612a:	movlps QWORD PTR [edx+0x2c315d36],xmm4
  406131:	cmp    BYTE PTR [ebx+0x38],dl
  406134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406135:	rol    bl,cl
  406137:	inc    ecx
  406138:	lock fistp WORD PTR [ebp+0x1]
  40613c:	(bad)  
  40613d:	cmp    DWORD PTR [eax],ebx
  40613f:	in     eax,0xe5
  406141:	out    dx,eax
  406142:	jl     0x406172
  406144:	retf   
  406145:	dec    eax
  406146:	or     dl,dh
  406148:	mov    dl,0xdc
  40614a:	stos   BYTE PTR es:[edi],al
  40614b:	mov    ds:0xb86b022e,eax
  406150:	xchg   ecx,eax
  406151:	daa    
  406152:	sub    DWORD PTR [esp+eiz*4+0x0],eax
  406156:	push   eax
  406157:	and    al,0xb0
  406159:	in     eax,dx
  40615a:	ss sub eax,0x4f524652
  406160:	inc    edx
  406161:	sub    DWORD PTR [ecx],esi
  406163:	mov    bh,0x27
  406165:	imul   edx,ebx,0x5b
  406168:	and    eax,DWORD PTR [ecx]
  40616a:	xchg   edx,eax
  40616b:	cmc    
  40616c:	outs   dx,BYTE PTR ds:[esi]
  40616d:	and    DWORD PTR [ebp-0x5b],ebp
  406170:	(bad)  
  406171:	je     0x40611c
  406173:	fisub  DWORD PTR [esi+0x59]
  406176:	push   0x33
  406178:	sahf   
  406179:	or     eax,0x1f4e28e7
  40617e:	jno    0x4061b0
  406180:	scas   eax,DWORD PTR es:[edi]
  406181:	xchg   ebx,eax
  406182:	shl    BYTE PTR [edx+0x29],cl
  406185:	add    BYTE PTR [ecx+edi*4+0x5e50a8b3],cl
  40618c:	or     ebx,ebp
  40618e:	add    al,0xaa
  406190:	push   ax
  406192:	push   edx
  406193:	loope  0x40615f
  406195:	stos   BYTE PTR es:[edi],al
  406196:	pop    ds
  406197:	mov    dl,0x29
  406199:	pop    edx
  40619a:	push   ebx
  40619b:	inc    DWORD PTR [esp+ebx*2]
  40619e:	int3   
  40619f:	std    
  4061a0:	mov    bl,0x7
  4061a2:	pop    ds
  4061a3:	out    dx,eax
  4061a4:	mov    ds:0x3db567f2,al
  4061a9:	dec    edx
  4061aa:	rcr    DWORD PTR [esi],cl
  4061ac:	pop    ds
  4061ad:	cmp    edx,DWORD PTR [ebp+0x44]
  4061b0:	repnz mov ds:0xb1959ff3,al
  4061b6:	adc    al,0xcc
  4061b8:	xchg   ecx,eax
  4061b9:	neg    dl
  4061bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061bc:	and    eax,0xcf2c0634
  4061c1:	imul   dx,WORD PTR [ebp-0x6e],0xffd7
  4061c6:	popa   
  4061c7:	mov    eax,ds:0x7503a757
  4061cc:	jae    0x40622b
  4061ce:	pop    ebx
  4061cf:	leave  
  4061d0:	add    eax,0x666d7945
  4061d5:	fwait
  4061d6:	or     BYTE PTR [esi],0x1c
  4061d9:	pop    edi
  4061da:	mov    esi,0xc6f7556e
  4061df:	aas    
  4061e0:	out    dx,al
  4061e1:	cmp    dl,BYTE PTR [edi-0x50de16aa]
  4061e7:	mov    esp,0xa18bf21b
  4061ec:	pusha  
  4061ed:	mov    edx,0x515e415e
  4061f2:	sbb    eax,0x774b518d
  4061f7:	dec    edi
  4061f8:	ja     0x4061d0
  4061fa:	dec    edi
  4061fb:	push   es
  4061fc:	sbb    eax,0xf35d8e52
  406201:	and    ebp,edi
  406203:	sahf   
  406204:	aad    0x6
  406206:	sbb    edx,esp
  406208:	add    ebp,ebx
  40620a:	xchg   ebx,eax
  40620b:	loop   0x406287
  40620d:	daa    
  40620e:	or     al,0x4e
  406210:	mov    dl,0xba
  406212:	dec    eax
  406213:	fistp  QWORD PTR [edi+0x31ff1204]
  406219:	xor    edi,edx
  40621b:	adc    eax,0x7a08252
  406220:	xchg   edi,eax
  406221:	not    edi
  406223:	lods   al,BYTE PTR ds:[si]
  406225:	push   0xffffffb5
  406227:	push   ds
  406228:	fadd   QWORD PTR [ebx]
  40622a:	or     eax,0x3cafea03
  40622f:	dec    esi
  406230:	repz cwde 
  406232:	ds dec esi
  406234:	jle    0x40627e
  406236:	out    0xe5,al
  406238:	dec    ebx
  406239:	cpuid  
  40623b:	jbe    0x4061ce
  40623d:	fwait
  40623e:	not    BYTE PTR [esi-0x623ab14b]
  406244:	das    
  406245:	fdivp  st(5),st
  406247:	outs   dx,BYTE PTR ds:[esi]
  406248:	or     edi,ebp
  40624a:	mov    ch,0x52
  40624c:	mov    cl,0xe4
  40624e:	add    ch,cl
  406250:	or     bl,BYTE PTR [edi]
  406252:	add    al,0xa7
  406254:	xor    al,BYTE PTR [esi]
  406256:	mov    ds:0x1f561ceb,al
  40625b:	inc    edi
  40625c:	call   0x5a3998c7
  406261:	sub    DWORD PTR [edx],ebp
  406263:	jne    0x40620c
  406265:	sbb    al,0xcd
  406267:	(bad)  
  406268:	or     al,0x6c
  40626a:	in     al,0xb9
  40626c:	(bad)  
  40626d:	lahf   
  40626e:	out    0x2b,eax
  406270:	lahf   
  406271:	push   0xffffffab
  406273:	push   ss
  406274:	push   es
  406275:	cwde   
  406276:	mov    cl,0xc3
  406278:	sub    edx,DWORD PTR [ebx]
  40627a:	pop    eax
  40627b:	and    eax,0xeb664a22
  406280:	ds call 0x550d:0x51c0e68a
  406288:	stc    
  406289:	mov    cl,0xe5
  40628b:	loopne 0x4062ef
  40628d:	ret    
  40628e:	in     eax,dx
  40628f:	dec    esi
  406290:	jmp    0x6d7b:0xbfd44bda
  406297:	adc    al,0x6
  406299:	jae    0x40629c
  40629b:	les    eax,FWORD PTR [ecx+0x35]
  40629e:	mov    ch,0xe6
  4062a0:	mov    ecx,0xb409dbe0
  4062a5:	hlt    
  4062a6:	out    0x85,eax
  4062a8:	jecxz  0x4062b7
  4062aa:	cwde   
  4062ab:	loop   0x40631b
  4062ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062ae:	ror    edx,1
  4062b0:	popf   
  4062b1:	cs cmc 
  4062b3:	cmp    DWORD PTR ds:0xe7d5ca5e,eax
  4062b9:	and    eax,0xf69bfc82
  4062be:	push   ecx
  4062bf:	cmp    DWORD PTR [eax-0x25],ecx
  4062c2:	and    bl,BYTE PTR [ebx]
  4062c4:	jnp    0x406290
  4062c6:	cld    
  4062c7:	popa   
  4062c8:	adc    al,0x2e
  4062ca:	dec    esi
  4062cb:	xchg   ebx,eax
  4062cc:	mov    esp,DWORD PTR [ebx]
  4062ce:	fwait
  4062cf:	nop
  4062d0:	jl     0x40630a
  4062d2:	mov    esp,0x4e77972b
  4062d7:	jp     0x4062e6
  4062d9:	or     ebx,DWORD PTR [edi+esi*4]
  4062dc:	aam    0x75
  4062de:	test   DWORD PTR [esi],eax
  4062e0:	push   eax
  4062e1:	or     ebx,DWORD PTR [esi-0x19b83103]
  4062e7:	push   edx
  4062e8:	out    0xbf,eax
  4062ea:	bound  esp,QWORD PTR [esi-0x43]
  4062ed:	inc    esi
  4062ee:	or     ch,BYTE PTR [edx+0x6cff8696]
  4062f4:	loop   0x406362
  4062f6:	or     ah,BYTE PTR [edx+0x46]
  4062f9:	lea    edi,[ecx+0xe]
  4062fc:	icebp  
  4062fd:	adc    al,BYTE PTR [esp+esi*4+0x27]
  406301:	push   eax
  406302:	mov    ebx,0x3ddbcf15
  406307:	jae    0x406368
  406309:	xor    BYTE PTR ds:0xf3f29ffc,ch
  40630f:	retf   
  406310:	jbe    0x406307
  406312:	cs daa 
  406314:	jae    0x40632f
  406316:	ins    DWORD PTR es:[edi],dx
  406317:	es call 0x2dbed196
  40631d:	jge    0x4062b3
  40631f:	push   cs
  406320:	loope  0x406366
  406322:	sbb    BYTE PTR [esi+eax*4-0x58e49c34],0x2a
  40632a:	inc    ebx
  40632b:	sbb    al,0xa0
  40632d:	xchg   ch,dl
  40632f:	leave  
  406330:	mov    ebx,0x408d6deb
  406335:	push   0x5
  406337:	mov    bl,0xcf
  406339:	mov    cl,0x85
  40633b:	add    bl,cl
  40633d:	or     dl,dl
  40633f:	xor    eax,DWORD PTR [ecx]
  406341:	in     al,dx
  406342:	arpl   WORD PTR [edx-0xbeda67d],dx
  406348:	pop    esp
  406349:	stos   BYTE PTR es:[edi],al
  40634a:	fs inc ebp
  40634c:	or     al,0x9f
  40634e:	sub    al,0xcb
  406350:	popf   
  406351:	dec    ecx
  406352:	xlat   BYTE PTR ds:[ebx]
  406353:	stos   DWORD PTR es:[edi],eax
  406354:	pop    es
  406355:	or     DWORD PTR [ecx-0x1c],0xffffffc2
  406359:	push   esi
  40635a:	mov    ah,0x57
  40635c:	xor    eax,0xfb2f5b0d
  406361:	sbb    al,BYTE PTR [ebx]
  406363:	hlt    
  406364:	fidiv  DWORD PTR [eax-0x302627fa]
  40636a:	stos   BYTE PTR es:[edi],al
  40636b:	(bad)  
  40636c:	fild   DWORD PTR [eax]
  40636e:	loopne 0x4063d8
  406370:	adc    DWORD PTR [edx-0x2e],esp
  406373:	(bad)  
  406374:	and    BYTE PTR ds:0xb304dc1d,dh
  40637a:	test   eax,0x348d6214
  40637f:	(bad)  
  406381:	in     eax,dx
  406382:	out    dx,al
  406383:	outs   dx,DWORD PTR ds:[esi]
  406384:	dec    ecx
  406385:	pop    eax
  406386:	in     eax,0xc4
  406388:	jo     0x40634c
  40638a:	aaa    
  40638b:	push   ebx
  40638c:	add    BYTE PTR [ecx+0x5f],bl
  40638f:	mov    edx,0x7ac93d80
  406394:	cmp    DWORD PTR [ebp-0x31],esp
  406397:	push   0xd504e58a
  40639c:	cmp    edi,esp
  40639e:	adc    al,0xb
  4063a0:	xor    BYTE PTR [edi+0x79],dl
  4063a3:	popf   
  4063a4:	mov    ah,BYTE PTR [esi+0x526876cf]
  4063aa:	pop    ds
  4063ab:	sti    
  4063ac:	xor    al,0x79
  4063ae:	and    cl,bh
  4063b0:	add    ah,bh
  4063b2:	add    esp,ecx
  4063b4:	sbb    dl,0x72
  4063b7:	out    0xcb,al
  4063b9:	jmp    0xcaeb:0x778929fa
  4063c0:	cdq    
  4063c1:	imul   esp,DWORD PTR [esi],0x6ade674c
  4063c7:	mov    BYTE PTR [edx-0x27],0x67
  4063cb:	or     dh,BYTE PTR [esi]
  4063cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ce:	arpl   ax,sp
  4063d0:	sbb    eax,DWORD PTR [edi+0x1dd7b3ea]
  4063d6:	mov    bl,0xa8
  4063d8:	test   eax,0x434b94
  4063dd:	push   eax
  4063de:	sub    eax,0x12c0827c
  4063e3:	ins    DWORD PTR es:[edi],dx
  4063e4:	sar    DWORD PTR [ecx],0x3e
  4063e7:	loope  0x40643b
  4063e9:	nop
  4063ea:	dec    ebp
  4063eb:	sub    BYTE PTR [ecx-0x6569902a],ah
  4063f1:	outs   dx,DWORD PTR ds:[esi]
  4063f2:	or     DWORD PTR [ecx-0x573b6c57],0xfb0d54a7
  4063fc:	or     dh,BYTE PTR [ebp+0x7]
  4063ff:	sub    DWORD PTR [eax+ecx*2],esi
  406402:	mov    al,0x53
  406404:	inc    BYTE PTR [esi]
  406406:	fimul  WORD PTR [edi-0x2e]
  406409:	pop    ss
  40640a:	or     DWORD PTR [ebx+eiz*8-0x35],ebp
  40640e:	(bad)  
  406410:	(bad)  
  406411:	cs ss sbb eax,0xdcd74da7
  406418:	imul   esp,DWORD PTR [ebx+0x1f4eb296],0xffffff9d
  40641f:	fidivr DWORD PTR [eax-0x4515116a]
  406425:	inc    eax
  406426:	jno    0x40647e
  406428:	lea    eax,[edi+ebx*4-0x5e7573f5]
  40642f:	mov    ah,0x26
  406431:	pop    eax
  406432:	not    BYTE PTR [edx]
  406434:	jne    0x4063cc
  406436:	fbld   TBYTE PTR [edi-0xc1b803d]
  40643c:	stc    
  40643d:	ror    ebp,cl
  40643f:	out    dx,eax
  406440:	aam    0x5e
  406442:	ins    DWORD PTR es:[edi],dx
  406443:	gs mov esi,0x2fb5579f
  406449:	test   al,0x3a
  40644b:	and    BYTE PTR [esi],ah
  40644d:	test   DWORD PTR [esi+0x25720d30],ebp
  406453:	sub    cl,BYTE PTR [ebx-0x38]
  406456:	neg    ebp
  406458:	jmp    0x406498
  40645a:	cs lahf 
  40645c:	mov    edx,0xfd011364
  406461:	in     al,0x61
  406463:	rcr    DWORD PTR [edi-0x2a],1
  406466:	ins    BYTE PTR es:[edi],dx
  406467:	je     0x40644c
  406469:	mov    bh,0x93
  40646b:	(bad)  
  40646c:	sbb    DWORD PTR [edi+edi*4-0x4dc61d69],eax
  406473:	mov    ds:0xb5a7e312,al
  406479:	sub    DWORD PTR [esi],esi
  40647b:	ins    BYTE PTR es:[edi],dx
  40647c:	es or  al,0x85
  40647f:	test   ch,dh
  406481:	scas   eax,DWORD PTR es:[edi]
  406482:	pop    edi
  406483:	stc    
  406484:	add    DWORD PTR [edx],ebx
  406486:	popf   
  406487:	inc    esp
  406488:	aaa    
  406489:	retf   0x1b75
  40648c:	push   0xbfe188b5
  406491:	pushf  
  406492:	sahf   
  406493:	pop    esi
  406494:	int3   
  406495:	mov    dl,BYTE PTR [esi]
  406497:	hlt    
  406498:	(bad)  
  406499:	call   0x305f8c97
  40649e:	jp     0x406431
  4064a0:	lahf   
  4064a1:	(bad)  
  4064a2:	out    dx,al
  4064a3:	ins    BYTE PTR es:[edi],dx
  4064a4:	jp     0x406519
  4064a6:	and    eax,0xf14c5765
  4064ab:	mov    al,ds:0x904db34a
  4064b0:	sbb    bh,0x24
  4064b3:	hlt    
  4064b4:	and    eax,0xc9f3b2e0
  4064b9:	sbb    bh,BYTE PTR [ecx]
  4064bb:	mov    edi,0xc7fe3117
  4064c0:	xchg   ebx,eax
  4064c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c2:	xchg   DWORD PTR [eax-0x224978f8],esp
  4064c8:	test   BYTE PTR [ebx-0x48],bh
  4064cb:	jg     0x4064f0
  4064cd:	mov    ds:0x28f2c528,al
  4064d2:	dec    edx
  4064d3:	fwait
  4064d4:	and    BYTE PTR [eax],0x25
  4064d7:	dec    edx
  4064d8:	xchg   ebp,eax
  4064d9:	jns    0x4064f9
  4064db:	popa   
  4064dc:	dec    esi
  4064dd:	or     BYTE PTR [ecx-0x21],dl
  4064e0:	add    esp,eax
  4064e2:	call   0x1f8:0x731d7680
  4064e9:	or     ah,BYTE PTR [eax]
  4064eb:	and    al,0xcb
  4064ed:	cdq    
  4064ee:	xchg   edi,eax
  4064ef:	and    DWORD PTR [esp+ecx*2+0x18],eax
  4064f3:	mov    al,ds:0xfc1e0f9e
  4064f8:	loope  0x40655b
  4064fa:	mov    ds:0xd8d61d53,al
  4064ff:	pusha  
  406500:	icebp  
  406501:	push   esp
  406502:	dec    esi
  406503:	sahf   
  406504:	fcom   DWORD PTR [ecx-0x4f6295ce]
  40650a:	cmp    ecx,DWORD PTR [ecx-0x4f]
  40650d:	ds call 0xbef24aa1
  406513:	sahf   
  406514:	inc    esp
  406515:	and    edx,DWORD PTR [esi+0x37]
  406518:	fist   WORD PTR [edi]
  40651a:	sub    DWORD PTR [ecx+0x76d32ede],edx
  406520:	das    
  406521:	jne    0x40651a
  406523:	hlt    
  406524:	gs daa 
  406526:	ret    
  406527:	xor    DWORD PTR [eax],esi
  406529:	adc    bl,ah
  40652b:	fmul   QWORD PTR [ecx-0x2452b9be]
  406531:	mov    bl,0xb0
  406533:	jns    0x406595
  406535:	add    DWORD PTR [ecx],esp
  406537:	fld    QWORD PTR [esp+eax*2-0x1b]
  40653b:	retf   0x9650
  40653e:	cmp    esi,DWORD PTR fs:[edx-0xee45c2b]
  406545:	(bad)  
  406546:	jmp    0xacfa:0xe901100
  40654d:	mov    bh,0xf8
  40654f:	popa   
  406550:	fs xor al,0x33
  406553:	loop   0x406513
  406555:	dec    esi
  406556:	lea    edx,[eax]
  406558:	push   edi
  406559:	aam    0x72
  40655b:	mov    cl,0xfa
  40655d:	mov    ds:0x93498ac1,al
  406562:	jmp    0x1e538843
  406567:	es nop
  406569:	repz test al,0x5b
  40656c:	pop    ebx
  40656d:	mov    edx,0xa163eaca
  406572:	shr    DWORD PTR [ebx],1
  406574:	inc    ebp
  406575:	cli    
  406576:	and    BYTE PTR [ebp-0x4be8fe64],bl
  40657c:	das    
  40657d:	movzx  esp,BYTE PTR ds:0xf34ee8b5
  406584:	xchg   esp,eax
  406585:	repnz sbb eax,0x3d17a4aa
  40658b:	mov    ch,0x6f
  40658d:	arpl   WORD PTR [esi-0x39],di
  406590:	sbb    BYTE PTR [edx+0x90e38f7],al
  406596:	pop    esi
  406597:	push   edx
  406598:	out    0x6,eax
  40659a:	outs   dx,BYTE PTR ds:[esi]
  40659b:	lahf   
  40659c:	ds inc ebp
  40659e:	inc    esi
  40659f:	int    0x90
  4065a1:	mov    al,0x67
  4065a3:	mov    ds:0xcbef2fa2,al
  4065a8:	push   esi
  4065a9:	jmp    0x40654e
  4065ab:	in     eax,dx
  4065ac:	or     eax,0xe6064d18
  4065b1:	in     al,dx
  4065b2:	je     0x406552
  4065b4:	fcmovnu st,st(3)
  4065b6:	fwait
  4065b7:	stos   BYTE PTR es:[edi],al
  4065b8:	or     DWORD PTR [ebp-0x3c],esi
  4065bb:	sub    eax,0x617699ba
  4065c0:	call   0xcc4df1b4
  4065c5:	inc    ecx
  4065c6:	xor    BYTE PTR [esi+0x7d7ca77f],al
  4065cc:	fiadd  DWORD PTR [edx]
  4065ce:	test   eax,0xa43eb90e
  4065d3:	inc    ebp
  4065d4:	fist   WORD PTR [eax]
  4065d6:	fsub   st(2),st
  4065d8:	test   BYTE PTR [ebx-0x54],bl
  4065db:	jge    0x406574
  4065dd:	inc    edi
  4065de:	retf   0xb59a
  4065e1:	cdq    
  4065e2:	inc    ecx
  4065e3:	adc    eax,ebp
  4065e5:	push   ds
  4065e6:	aaa    
  4065e7:	pop    ebp
  4065e8:	add    BYTE PTR ds:0xaa5d4c88,dh
  4065ee:	mov    al,0x17
  4065f0:	add    eax,0xec0ae90e
  4065f5:	dec    esi
  4065f7:	xchg   esp,eax
  4065f8:	pop    ss
  4065f9:	cmp    ah,cl
  4065fb:	std    
  4065fc:	test   eax,0x8fc22f53
  406601:	xor    DWORD PTR ds:0xaad026b7,ecx
  406607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406608:	mov    bl,0xaa
  40660a:	and    eax,0xff401dd4
  40660f:	sub    DWORD PTR [ebp+0x19],ebx
  406612:	dec    eax
  406613:	call   0x76f6:0x2e52e41a
  40661a:	shl    DWORD PTR [eax+0x3efff3c5],0xc9
  406621:	cmp    DWORD PTR [edi],esp
  406623:	push   esi
  406624:	mov    bh,0x61
  406626:	outs   dx,DWORD PTR ds:[esi]
  406627:	std    
  406628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406629:	push   edx
  40662a:	jo     0x4066a4
  40662c:	inc    esi
  40662d:	and    bl,0xce
  406630:	in     eax,0x5c
  406632:	iret   
  406633:	mov    BYTE PTR [edx-0x3d],ah
  406636:	jbe    0x4065de
  406638:	inc    eax
  406639:	jl     0x4066ae
  40663b:	adc    eax,0xe18fc1d
  406640:	mov    ecx,0xe12c686a
  406645:	in     eax,dx
  406646:	mov    WORD PTR [edx+edi*2-0x10],fs
  40664a:	lahf   
  40664b:	sbb    DWORD PTR ds:[eax+0x41],edi
  40664f:	cwde   
  406650:	add    ebp,DWORD PTR [esi-0x5be800ce]
  406656:	icebp  
  406657:	mov    ds:0xbfc5374,al
  40665c:	dec    esi
  40665d:	pop    ss
  40665e:	cmp    DWORD PTR [esp+eiz*8],esi
  406661:	cmp    eax,ebx
  406663:	xor    ch,dh
  406665:	data16 mov ss,WORD PTR [edx+0x7b]
  406669:	(bad)
  40666d:	popf   
  40666e:	(bad)  
  40666f:	sar    DWORD PTR [eax],1
  406671:	es call 0x48eb945e
  406677:	fld    TBYTE PTR [edi]
  406679:	sub    eax,0x4aa61c02
  40667e:	data16 loopne 0x406659
  406681:	push   ebx
  406682:	out    dx,eax
  406683:	in     al,dx
  406684:	sbb    DWORD PTR [edx+0x74],edx
  406687:	push   eax
  406688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406689:	shl    BYTE PTR ds:0xe96b13d6,1
  40668f:	jbe    0x406701
  406691:	scas   eax,DWORD PTR es:[edi]
  406692:	les    edi,FWORD PTR [ebx-0x7f]
  406695:	or     ah,BYTE PTR [ebx]
  406697:	xchg   edx,eax
  406698:	push   cs
  406699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40669a:	mov    ds:0xc7cc01a2,eax
  40669f:	xor    ch,BYTE PTR [edx-0xc]
  4066a2:	aaa    
  4066a3:	push   0xa9f4390
  4066a8:	mov    esp,DWORD PTR [ecx+eax*8-0x3117705e]
  4066af:	xor    edx,DWORD PTR [eax+0x97ece6b]
  4066b5:	add    al,0x64
  4066b7:	or     bl,BYTE PTR [eax]
  4066b9:	inc    ecx
  4066ba:	in     eax,0xd0
  4066bc:	mov    edx,0xf05f06fc
  4066c1:	and    DWORD PTR [ebp+0x1a473825],ebp
  4066c7:	add    al,0x45
  4066c9:	jbe    0x4066fc
  4066cb:	sub    dl,BYTE PTR [esi]
  4066cd:	lahf   
  4066ce:	dec    edx
  4066cf:	dec    BYTE PTR [esi-0x492e2ff3]
  4066d5:	or     al,0x1f
  4066d7:	popf   
  4066d8:	call   0xd2e9b2e8
  4066dd:	xor    DWORD PTR [ecx+0x4845a20a],esi
  4066e3:	(bad)  
  4066e4:	inc    edi
  4066e5:	ins    DWORD PTR es:[edi],dx
  4066e6:	or     DWORD PTR [eax],0x4e3c74c2
  4066ec:	mov    ?,WORD PTR [edi+edx*4]
  4066ef:	ins    BYTE PTR es:[edi],dx
  4066f0:	sub    ebp,edx
  4066f2:	into   
  4066f3:	push   ecx
  4066f4:	xor    eax,DWORD PTR [eax+0x32]
  4066f7:	int3   
  4066f8:	xchg   edi,eax
  4066f9:	pop    ds
  4066fa:	repnz sbb eax,DWORD PTR [ebx]
  4066fd:	xor    ah,cl
  4066ff:	and    bl,BYTE PTR [edx]
  406701:	mov    edi,0x302cb2c6
  406706:	push   ebx
  406707:	xchg   ebp,eax
  406708:	adc    ebx,DWORD PTR [edi]
  40670a:	(bad)  
  40670b:	clc    
  40670c:	jnp    0x4066f2
  40670e:	ds xchg ecx,eax
  406710:	or     ebx,DWORD PTR [ecx+ecx*4-0x49]
  406714:	sbb    al,0xbc
  406716:	loope  0x4066ac
  406718:	div    ebp
  40671a:	adc    edi,DWORD PTR [eax]
  40671c:	xchg   edi,eax
  40671d:	sbb    BYTE PTR [ecx+edx*1],0x7b
  406721:	inc    eax
  406722:	ins    BYTE PTR es:[edi],dx
  406723:	lock into 
  406725:	in     al,0x33
  406727:	test   eax,0x72069837
  40672c:	(bad)  
  40672d:	pop    es
  40672e:	bsr    eax,DWORD PTR [edi+ebx*1-0x1f9dbc9d]
  406736:	test   al,0xb4
  406738:	jne    0x40677b
  40673a:	and    eax,0x56c3f3ce
  40673f:	cmp    DWORD PTR [ebp+0x75],esp
  406742:	adc    edx,DWORD PTR [edx+0x61]
  406745:	jb     0x406740
  406747:	sar    BYTE PTR [ebp-0x50e2eea5],0x92
  40674e:	mov    esi,0x27881b76
  406753:	call   0xa0d1:0xf77da99d
  40675a:	bound  ebx,QWORD PTR [eax+0x30a0ec43]
  406760:	push   edi
  406761:	and    BYTE PTR [ebx],bh
  406763:	mov    edi,0x5916dfcf
  406768:	xchg   al,bl
  40676a:	xor    ah,bh
  40676c:	xchg   DWORD PTR [edi-0x1a],edx
  40676f:	lds    esi,FWORD PTR [edi]
  406771:	call   0x414085d8
  406776:	mov    ebx,0xd254fb69
  40677b:	pop    ecx
  40677c:	enter  0x9d7c,0x5
  406780:	jp     0xd5a7430c
  406786:	stos   BYTE PTR es:[edi],al
  406787:	pop    esi
  406788:	add    eax,0xa38828ac
  40678d:	xlat   BYTE PTR ds:[ebx]
  40678e:	xor    DWORD PTR [eax-0x5b],ebx
  406791:	sti    
  406792:	mov    ebp,0x95a89114
  406797:	aam    0xec
  406799:	sbb    eax,0x165dd748
  40679e:	push   cs
  40679f:	test   BYTE PTR [ecx+edx*1],ah
  4067a2:	ja     0x40674b
  4067a4:	scas   eax,DWORD PTR es:[edi]
  4067a5:	pop    ecx
  4067a6:	or     dh,BYTE PTR [ecx-0x4ed4776]
  4067ac:	out    0x94,al
  4067ae:	inc    eax
  4067af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067b0:	hlt    
  4067b1:	(bad)  
  4067b2:	or     ebx,DWORD PTR [ecx+0x55]
  4067b5:	stos   BYTE PTR es:[edi],al
  4067b6:	(bad)  
  4067b7:	call   0x974a:0xd9104689
  4067be:	int    0xde
  4067c0:	sub    BYTE PTR [esi-0x4979c1d5],al
  4067c6:	jge    0x40683d
  4067c8:	loop   0x40680c
  4067ca:	cmp    esp,DWORD PTR [ebx-0x24]
  4067cd:	sar    DWORD PTR [edx-0x5f],1
  4067d0:	les    eax,FWORD PTR [edi+0x13]
  4067d3:	xchg   al,bh
  4067d5:	leave  
  4067d6:	add    cl,BYTE PTR [ecx+0x66]
  4067d9:	hlt    
  4067da:	xor    cl,al
  4067dc:	push   ecx
  4067dd:	sbb    esi,DWORD PTR [edx+0x2d15a7e5]
  4067e3:	jecxz  0x406847
  4067e5:	in     al,dx
  4067e6:	sti    
  4067e7:	sahf   
  4067e8:	jp     0x4067e3
  4067ea:	cmp    ecx,DWORD PTR [ebx]
  4067ec:	mov    esi,0x588b1c6a
  4067f1:	cmp    eax,0x726f64ac
  4067f6:	dec    ebx
  4067f7:	or     BYTE PTR [edx],dh
  4067f9:	data16 sbb BYTE PTR [esi+0x60],dh
  4067fd:	iret   
  4067fe:	jns    0x4067cb
  406800:	out    dx,eax
  406801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406802:	cwde   
  406803:	push   ds
  406804:	xor    DWORD PTR ds:0x7534a3c9,edx
  40680a:	idiv   BYTE PTR [edi-0x79d80d67]
  406810:	outs   dx,DWORD PTR ds:[esi]
  406811:	scas   al,BYTE PTR es:[edi]
  406812:	ret    
  406813:	jg     0x4067eb
  406815:	ds js  0x40679b
  406818:	call   0x9ebe9d02
  40681d:	ret    0xf4a7
  406820:	pusha  
  406821:	ja     0x40686b
  406823:	dec    ebx
  406824:	add    eax,0xd1c203fc
  406829:	scas   al,BYTE PTR es:[edi]
  40682a:	mov    ?,esi
  40682c:	mov    DWORD PTR [eax+0x66],ebx
  40682f:	sbb    al,0x1d
  406831:	adc    cl,BYTE PTR [esp+edx*1+0x5a]
  406835:	mov    eax,ds:0xc2df4e81
  40683a:	(bad)  
  40683b:	test   DWORD PTR [edi+eax*4],0xe16dcdca
  406842:	sti    
  406843:	cmp    DWORD PTR [ecx],ebp
  406845:	stos   BYTE PTR es:[edi],al
  406846:	mov    ch,0xc4
  406848:	bound  ebx,QWORD PTR [ebp+0xb0a4ac3]
  40684e:	mov    edx,ebx
  406850:	fcom   DWORD PTR [edi]
  406852:	and    al,0x10
  406854:	mov    al,0xd4
  406856:	jo     0x4068b3
  406858:	ror    edi,cl
  40685a:	push   es
  40685b:	in     eax,dx
  40685c:	daa    
  40685d:	in     al,0x63
  40685f:	sub    al,0x95
  406861:	mov    eax,ds:0x551ad902
  406866:	push   eax
  406867:	sub    cl,dl
  406869:	in     eax,0x95
  40686b:	mov    BYTE PTR [ebx+eiz*8],cl
  40686e:	cmp    BYTE PTR [esi+0x7f03463d],al
  406874:	pop    ss
  406875:	pop    ecx
  406876:	rol    DWORD PTR [ecx],1
  406878:	call   0xde0a3f34
  40687d:	fisttp WORD PTR [edx+0x7e]
  406880:	pushf  
  406881:	or     eax,0x6430ee76
  406886:	gs push eax
  406888:	pop    edi
  406889:	xlat   BYTE PTR ds:[ebx]
  40688a:	jg     0x406865
  40688c:	in     eax,0xd4
  40688e:	mov    cl,BYTE PTR ds:[esi+ecx*8]
  406892:	sub    al,0x37
  406894:	int3   
  406895:	pop    ss
  406896:	loop   0x4068f0
  406898:	cmp    esp,DWORD PTR [edx]
  40689a:	ds xchg esp,eax
  40689c:	fmul   DWORD PTR [ebx+0x5]
  40689f:	js     0x406861
  4068a1:	repz lock icebp 
  4068a4:	sti    
  4068a5:	pop    esi
  4068a6:	mov    bh,0xce
  4068a8:	fwait
  4068a9:	jecxz  0x4068d0
  4068ab:	dec    esi
  4068ac:	mov    esp,ebp
  4068ae:	test   dl,ah
  4068b0:	fistp  QWORD PTR [ebx]
  4068b2:	mov    WORD PTR [edi],es
  4068b4:	and    cl,dh
  4068b6:	add    bl,dh
  4068b8:	(bad)  
  4068b9:	pushf  
  4068ba:	lds    esp,FWORD PTR [eax-0x80]
  4068bd:	lea    ebp,[ebx+0x14]
  4068c0:	sbb    eax,0x53fbfa6
  4068c5:	retf   
  4068c6:	rol    DWORD PTR [edx],cl
  4068c8:	sbb    ecx,edi
  4068ca:	jns    0x4068cc
  4068cc:	push   cs
  4068cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ce:	ds xor eax,0x75391a4
  4068d4:	shl    ch,1
  4068d6:	ds aam 0xf7
  4068d9:	and    cl,bl
  4068db:	mov    cl,BYTE PTR [ebx]
  4068dd:	push   eax
  4068de:	add    al,0x29
  4068e0:	inc    esp
  4068e1:	add    bl,BYTE PTR [edx+0x53]
  4068e4:	sar    DWORD PTR [ebp+0x782bd1f2],cl
  4068ea:	outs   dx,BYTE PTR ds:[esi]
  4068eb:	xchg   edi,eax
  4068ec:	push   ecx
  4068ed:	mov    ch,0x9e
  4068ef:	xchg   esp,eax
  4068f0:	sahf   
  4068f1:	mov    eax,ds:0x5f8f930e
  4068f6:	fld    QWORD PTR [eax-0x5e]
  4068f9:	call   0xd2b5:0x74f5050e
  406900:	sub    BYTE PTR [esp+edx*8],bh
  406903:	(bad)
  406907:	jno    0x406892
  406909:	rol    BYTE PTR [eax+eax*1],0x3a
  40690d:	dec    edx
  40690e:	leave  
  40690f:	inc    eax
  406910:	xor    ebp,DWORD PTR [ecx-0x45]
  406913:	test   eax,0x298031f8
  406918:	and    al,0x89
  40691a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40691b:	cmp    eax,ecx
  40691d:	add    al,0xe
  40691f:	aas    
  406920:	lds    edx,FWORD PTR [eax+0xabe2a89]
  406926:	dec    edx
  406927:	ret    0x56e7
  40692a:	or     bl,dh
  40692c:	jns    0x4068ca
  40692e:	add    eax,0xb36f4558
  406933:	xchg   esi,eax
  406934:	das    
  406935:	jmp    0xae4f:0xff4b33dc
  40693c:	fiadd  DWORD PTR [eax+0x69]
  40693f:	aaa    
  406940:	popa   
  406941:	loope  0x40695f
  406943:	push   edx
  406944:	or     dh,dh
  406946:	add    BYTE PTR [edi],0x27
  406949:	cmc    
  40694a:	cmp    DWORD PTR [ecx],eax
  40694c:	inc    esp
  40694d:	pushf  
  40694e:	(bad)  
  40694f:	hlt    
  406950:	inc    ebx
  406951:	test   eax,0x33dd7a6e
  406956:	mov    DWORD PTR [edi],eax
  406958:	int    0x17
  40695a:	popa   
  40695b:	xor    al,0xc1
  40695d:	mov    edi,0xde26f6a9
  406962:	mov    bl,0xff
  406964:	je     0x406925
  406966:	fnstcw WORD PTR [ecx-0x78176334]
  40696c:	in     eax,0x9
  40696e:	pop    es
  40696f:	jg     0x406970
  406971:	addr16 dec ebx
  406973:	cmp    edx,esi
  406975:	sbb    al,BYTE PTR [ebx+0x57]
  406978:	mov    eax,ds:0x8b0ad885
  40697d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40697e:	int3   
  40697f:	push   ebx
  406980:	inc    edx
  406981:	loopne 0x4069f5
  406983:	das    
  406984:	mov    cl,0x17
  406986:	mov    ebx,DWORD PTR [esi+0x26]
  406989:	jnp    0x40696d
  40698b:	outs   dx,DWORD PTR ds:[esi]
  40698c:	jae    0x406a0c
  40698e:	cwde   
  40698f:	sbb    esp,esi
  406991:	adc    dl,BYTE PTR [eax]
  406993:	push   cs
  406994:	fucomip st,st(1)
  406996:	pusha  
  406997:	ret    0x1229
  40699a:	push   edi
  40699b:	out    dx,eax
  40699c:	inc    ebp
  40699d:	sbb    ebx,DWORD PTR [edx]
  40699f:	sub    al,0x4c
  4069a1:	sbb    dl,BYTE PTR [ebx]
  4069a3:	cdq    
  4069a4:	out    0x93,al
  4069a6:	fadd   QWORD PTR [ecx-0x434ef5df]
  4069ac:	jle    0x406a27
  4069ae:	fs jne 0x406987
  4069b1:	ds nop
  4069b3:	cmp    BYTE PTR [edx],al
  4069b5:	in     eax,dx
  4069b6:	ds scas eax,DWORD PTR es:[edi]
  4069b8:	dec    eax
  4069b9:	adc    DWORD PTR [ecx+0x4fe923],ebx
  4069bf:	mov    al,ds:0x904e6a7
  4069c4:	outs   dx,BYTE PTR ds:[esi]
  4069c5:	fbstp  TBYTE PTR ds:0xdd579c21
  4069cb:	mov    al,ds:0x8a36185a
  4069d0:	(bad)  
  4069d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d2:	dec    ecx
  4069d3:	adc    ebp,DWORD PTR [ebp+0x63]
  4069d6:	add    ebp,DWORD PTR [eax-0x5fe8b21b]
  4069dc:	ret    
  4069dd:	jge    0x4069db
  4069df:	ins    BYTE PTR es:[edi],dx
  4069e0:	lahf   
  4069e1:	nop
  4069e2:	dec    ebp
  4069e3:	fild   WORD PTR [ebp-0x57]
  4069e6:	call   0xbeb8d46b
  4069eb:	sub    dh,al
  4069ed:	jns    0x4069f9
  4069ef:	jbe    0x406a0e
  4069f1:	imul   ecx
  4069f3:	(bad)  
  4069f4:	and    BYTE PTR [esi-0x26910179],0x54
  4069fb:	jl     0x406a27
  4069fd:	and    bl,bh
  4069ff:	inc    ebp
  406a00:	adc    BYTE PTR [ebp+0x6b6e08c7],al
  406a06:	mov    ds,WORD PTR [ecx-0x3b346dc1]
  406a0c:	inc    edi
  406a0d:	mov    edx,0xefedd38b
  406a12:	pop    es
  406a13:	test   DWORD PTR [esi-0x107adc04],edx
  406a19:	jle    0x406a6c
  406a1b:	sbb    eax,0xb47278db
  406a20:	popf   
  406a21:	add    DWORD PTR [ecx+0xf],esp
  406a24:	mov    eax,ds:0x49582dd7
  406a29:	js     0x406a7b
  406a2b:	mov    ah,0xbd
  406a2d:	cmp    DWORD PTR ds:[ebp-0x79],0x15
  406a32:	(bad)  
  406a33:	or     al,0x1b
  406a35:	sar    edi,0x72
  406a38:	xor    dh,ch
  406a3a:	jl     0x406a54
  406a3c:	call   0xe833:0x7c89cf70
  406a43:	mov    al,0xd6
  406a45:	and    dl,BYTE PTR [ebx]
  406a47:	jnp    0x406a98
  406a49:	and    al,0x78
  406a4b:	or     ecx,DWORD PTR [ecx+ecx*1]
  406a4e:	push   0x33
  406a50:	pop    es
  406a51:	and    bl,BYTE PTR [ebx-0x6b]
  406a54:	mov    dl,0x5f
  406a56:	mov    WORD PTR [edi],?
  406a58:	cmp    DWORD PTR [edi-0x402de83c],0x789ca2be
  406a62:	push   eax
  406a63:	pop    edi
  406a64:	pop    eax
  406a65:	adc    edi,DWORD PTR [edx+0x65b1683e]
  406a6b:	stos   BYTE PTR es:[edi],al
  406a6c:	(bad)  
  406a6d:	adc    dh,BYTE PTR [edx-0xa42aeef]
  406a73:	mov    dh,0x9c
  406a75:	xchg   esp,eax
  406a76:	sbb    eax,0x16b22e8e
  406a7b:	mov    esp,0xac47311b
  406a80:	fwait
  406a81:	repz mov al,0x90
  406a84:	imul   BYTE PTR [eax-0x6cbba9cf]
  406a8a:	arpl   WORD PTR [ebp+0x267879bd],si
  406a90:	ret    
  406a91:	test   al,0xb4
  406a93:	popa   
  406a94:	test   al,0x5b
  406a96:	or     DWORD PTR [ecx-0x29],edx
  406a99:	es into 
  406a9b:	adc    DWORD PTR [eax+0x19],esi
  406a9e:	lock and BYTE PTR [esi+0x53b868f0],dl
  406aa5:	sahf   
  406aa6:	(bad)  
  406aa7:	xor    BYTE PTR [eax],ch
  406aa9:	imul   esp,DWORD PTR [ecx+0x6c],0x8c845c88
  406ab0:	mul    ecx
  406ab2:	pop    ebp
  406ab3:	int3   
  406ab4:	popf   
  406ab5:	mov    esi,esi
  406ab7:	push   esi
  406ab8:	je     0x406ad8
  406aba:	jno    0x406aac
  406abc:	sub    al,0x97
  406abe:	add    eax,DWORD PTR [edi+0x7e]
  406ac1:	test   ebp,ebp
  406ac3:	xchg   ecx,eax
  406ac4:	cmc    
  406ac5:	or     DWORD PTR [ecx],edi
  406ac7:	popa   
  406ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac9:	int3   
  406aca:	sbb    BYTE PTR [edx],cl
  406acc:	fsubr  DWORD PTR [ecx+0x68d12b0e]
  406ad2:	push   ebp
  406ad3:	cmp    cl,BYTE PTR [ecx+eiz*4-0x1b591a78]
  406ada:	adc    cl,BYTE PTR [esp]
  406add:	shl    BYTE PTR [ecx+0x49],cl
  406ae0:	inc    ebp
  406ae1:	lahf   
  406ae2:	imul   esi,ebx,0x67508d6f
  406ae8:	lods   eax,DWORD PTR ds:[esi]
  406ae9:	pop    edx
  406aea:	xchg   ebx,eax
  406aeb:	(bad)  
  406aec:	stos   DWORD PTR es:[edi],eax
  406aed:	adc    BYTE PTR [ebx],bl
  406aef:	icebp  
  406af0:	push   0xb0099f1c
  406af5:	pop    esp
  406af6:	js     0x406a98
  406af8:	add    eax,0x79563998
  406afd:	sub    DWORD PTR [ecx+0x132f6984],esp
  406b03:	add    eax,eax
  406b05:	dec    edx
  406b06:	cdq    
  406b07:	lahf   
  406b08:	xor    DWORD PTR [ebx],eax
  406b0a:	(bad)  [ebx+ebx*2-0x6972bca8]
  406b11:	jne    0x406b21
  406b13:	add    BYTE PTR [ecx],cl
  406b15:	pop    ebp
  406b16:	imul   ebx,DWORD PTR [ebx+0x4cab2c9a],0xc5c5953
  406b20:	bt     DWORD PTR [edx-0xb],eax
  406b24:	retf   0x19f5
  406b27:	xchg   ecx,eax
  406b28:	mov    eax,ds:0xb7568e53
  406b2d:	loop   0x406b08
  406b2f:	stos   DWORD PTR es:[edi],eax
  406b30:	shl    BYTE PTR [ebp+0x47],cl
  406b33:	inc    ecx
  406b34:	adc    esp,edi
  406b36:	push   esi
  406b37:	fbstp  TBYTE PTR [edx]
  406b39:	jbe    0x406b69
  406b3b:	dec    ebx
  406b3c:	xchg   edx,eax
  406b3d:	ror    BYTE PTR [edi+0x37208b89],cl
  406b43:	in     eax,0xa2
  406b45:	push   edx
  406b46:	pop    esp
  406b47:	cwde   
  406b48:	mov    ?,edi
  406b4a:	cmp    eax,ebx
  406b4c:	xchg   edi,eax
  406b4d:	and    al,0x88
  406b4f:	out    dx,eax
  406b50:	imul   ecx,DWORD PTR [ecx-0x129f0a28],0x94e93b66
  406b5a:	sbb    DWORD PTR [edi],ebx
  406b5c:	cld    
  406b5d:	ds jno 0x406b68
  406b60:	pusha  
  406b61:	or     DWORD PTR [ebx],eax
  406b63:	cmp    eax,0xd07ac1a1
  406b68:	pop    eax
  406b69:	or     eax,0xa7e4028b
  406b6e:	sbb    ebx,ebx
  406b70:	mov    ?,WORD PTR [edi+0x35]
  406b73:	pop    esp
  406b74:	xor    bl,BYTE PTR [eax+0x78a92c3c]
  406b7a:	xor    eax,0x442a0d50
  406b7f:	and    al,0xb2
  406b81:	jp     0x406b27
  406b83:	pop    ss
  406b84:	pop    ds
  406b85:	sbb    DWORD PTR ds:0x9307de94,ecx
  406b8b:	mov    al,0xb
  406b8d:	lods   al,BYTE PTR ds:[esi]
  406b8e:	clc    
  406b8f:	or     BYTE PTR ds:0x1530b4ab,al
  406b95:	mov    bh,0xb2
  406b97:	ret    0xfd89
  406b9a:	xor    eax,0x921aa94f
  406b9f:	fmul   DWORD PTR [esi-0x3e]
  406ba2:	scas   al,BYTE PTR es:[edi]
  406ba3:	xor    al,0x74
  406ba5:	inc    esi
  406ba6:	outs   dx,DWORD PTR ds:[esi]
  406ba7:	jp     0x406b5a
  406ba9:	scas   al,BYTE PTR es:[edi]
  406baa:	jb     0x406c20
  406bac:	repnz lds ebp,FWORD PTR fs:[edi-0x3f]
  406bb1:	xchg   ch,ah
  406bb3:	adc    BYTE PTR [eax],ch
  406bb5:	jnp    0x406b59
  406bb7:	dec    edi
  406bb8:	hlt    
  406bb9:	dec    ecx
  406bba:	scas   eax,DWORD PTR es:[edi]
  406bbb:	scas   al,BYTE PTR es:[edi]
  406bbc:	retf   
  406bbd:	or     DWORD PTR [esi+esi*1-0x28],edi
  406bc1:	and    ah,dl
  406bc3:	retf   
  406bc4:	lods   eax,DWORD PTR ds:[esi]
  406bc5:	adc    eax,0xfe54bf9
  406bca:	xor    eax,DWORD PTR [edi-0x13]
  406bcd:	addr16 mov bh,0xad
  406bd0:	mov    WORD PTR [ebp+0x56315b19],ss
  406bd6:	ds out 0x23,al
  406bd9:	add    DWORD PTR [esi-0x7a],eax
  406bdc:	sahf   
  406bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bde:	int    0x32
  406be0:	(bad)  
  406be1:	jle    0x406bf3
  406be3:	loop   0x406c42
  406be5:	dec    ebx
  406be6:	mov    eax,0x45aaf698
  406beb:	fistp  WORD PTR ds:0xe9956472
  406bf1:	cmp    BYTE PTR [edi-0x14],bh
  406bf4:	push   ebx
  406bf5:	mov    DWORD PTR [ebx],ebx
  406bf7:	jmp    0xb555:0x17fc9f29
  406bfe:	mov    ebp,0x1ec3637b
  406c03:	sub    BYTE PTR [edi+0x6451c854],bl
  406c09:	xlat   BYTE PTR ds:[ebx]
  406c0a:	sub    bh,BYTE PTR [edi+eax*4-0xe]
  406c0e:	sub    cl,BYTE PTR [ebx]
  406c10:	and    eax,0xed78d0fa
  406c15:	(bad)  
  406c16:	jmp    0x2502:0xf7ad0dc1
  406c1d:	das    
  406c1e:	inc    eax
  406c1f:	inc    ebp
  406c20:	cmp    DWORD PTR [ecx+0x29],edi
  406c23:	jl     0x406c4b
  406c25:	test   DWORD PTR [edi-0x59],ebp
  406c28:	call   0x4b30:0xdfef1a03
  406c2f:	lock inc esp
  406c31:	mov    dl,0xbc
  406c33:	outs   dx,BYTE PTR ds:[esi]
  406c34:	pop    edi
  406c35:	ror    DWORD PTR [edx+0x6d751d8f],0x92
  406c3c:	aaa    
  406c3d:	add    BYTE PTR [edx+edx*4-0x3b8522df],ah
  406c44:	cwde   
  406c45:	(bad)  
  406c46:	in     al,dx
  406c47:	fist   DWORD PTR [edx-0x4355a268]
  406c4d:	ror    eax,0x12
  406c50:	adc    BYTE PTR [ebx+0x56],dl
  406c53:	and    bh,bh
  406c55:	jl     0x406c1a
  406c57:	push   edx
  406c58:	int    0xc5
  406c5a:	pop    edx
  406c5b:	push   esp
  406c5c:	sti    
  406c5d:	(bad)
  406c61:	out    0x43,al
  406c63:	sub    eax,0x72b37c43
  406c68:	(bad)
  406c6b:	pop    ebp
  406c6c:	pop    eax
  406c6d:	inc    eax
  406c6e:	ins    BYTE PTR es:[edi],dx
  406c6f:	mov    dl,0xbb
  406c71:	mov    ebp,0xd35de64a
  406c76:	or     al,0x16
  406c78:	loope  0x406bfb
  406c7a:	inc    edx
  406c7b:	in     eax,dx
  406c7c:	outs   dx,DWORD PTR ds:[esi]
  406c7d:	fstp   QWORD PTR [edi+0x51]
  406c80:	stos   BYTE PTR es:[edi],al
  406c81:	add    DWORD PTR [edi+0x38],ebp
  406c84:	sub    al,0x9b
  406c86:	jae    0x406c5e
  406c88:	test   esp,ebx
  406c8a:	jecxz  0x406c98
  406c8c:	mov    dl,0x4c
  406c8e:	imul   esi,ebx,0xffffffc5
  406c91:	mov    edi,0x91df25f9
  406c96:	(bad)  [edx-0x33]
  406c99:	mov    ecx,0x81856e35
  406c9e:	cld    
  406c9f:	sbb    DWORD PTR [esi+0x9190160],esp
  406ca5:	push   0x41a4cf10
  406caa:	cmp    BYTE PTR [edi+0x65],ch
  406cad:	ja     0x406c7a
  406caf:	pushf  
  406cb0:	and    al,0x1a
  406cb2:	xor    DWORD PTR [edx+0x695f0bf],esi
  406cb8:	in     eax,0x40
  406cba:	jecxz  0x406c79
  406cbc:	fisubr WORD PTR [eax+esi*1+0x2792988a]
  406cc3:	mov    dl,0x62
  406cc5:	cmp    al,0x57
  406cc7:	pop    edi
  406cc8:	xchg   esp,eax
  406cc9:	sbb    al,0xad
  406ccb:	push   0x7577f3fc
  406cd0:	push   0xfd58dc62
  406cd5:	jmp    0x3c23:0xcae214ba
  406cdc:	xchg   ebx,eax
  406cdd:	lds    ebx,FWORD PTR [edx]
  406cdf:	jmp    0x49b9047a
  406ce4:	int    0xae
  406ce6:	mov    ds:0xda625ee4,eax
  406ceb:	or     bx,WORD PTR [eax]
  406cee:	fidivr DWORD PTR [ebx]
  406cf0:	cmc    
  406cf1:	add    eax,eax
  406cf3:	(bad)  
  406cf5:	lahf   
  406cf6:	and    al,0xbe
  406cf8:	inc    ebx
  406cf9:	(bad)  
  406cfa:	outs   dx,DWORD PTR ds:[esi]
  406cfb:	pop    edi
  406cfc:	cmp    eax,0x3edb187e
  406d01:	imul   ecx,ecx,0x79
  406d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d05:	jno    0x406d6a
  406d07:	repz out dx,al
  406d09:	imul   ecx,DWORD PTR [ecx-0x16],0xffffffd6
  406d0d:	sbb    dl,BYTE PTR [ebx+0x44df2388]
  406d13:	jle    0x406d2d
  406d15:	pushf  
  406d16:	mov    ah,0xbd
  406d18:	js     0x406d7d
  406d1a:	cmp    al,0xc3
  406d1c:	sbb    eax,0xf6bc28b5
  406d21:	jp     0x406cab
  406d23:	push   ecx
  406d24:	xor    eax,0x1f0dfb5b
  406d29:	jnp    0x406d5e
  406d2b:	mov    al,ds:0x8d043323
  406d30:	inc    eax
  406d31:	xchg   edx,eax
  406d32:	push   edi
  406d33:	jmp    0x9cf14a5a
  406d38:	aaa    
  406d39:	jae    0x406d50
  406d3b:	outs   dx,DWORD PTR ds:[esi]
  406d3c:	sbb    dl,0xfd
  406d3f:	jp     0x406cdc
  406d41:	loop   0x406d08
  406d43:	pop    edi
  406d44:	popa   
  406d45:	sbb    esp,DWORD PTR [edx]
  406d47:	mov    ebp,0x2f59b9e5
  406d4c:	clc    
  406d4d:	xor    BYTE PTR [ebp-0x2c],0xa8
  406d51:	sbb    esi,edi
  406d53:	mov    ds:0xdee8df78,eax
  406d58:	js     0x406d32
  406d5a:	fstp   QWORD PTR [edx-0x17f423f7]
  406d60:	cld    
  406d61:	fidivr DWORD PTR [edi-0x2c813e54]
  406d67:	fnstsw WORD PTR ds:0x284a1a65
  406d6d:	sbb    BYTE PTR [edi+0x78],dl
  406d70:	dec    edi
  406d71:	fstp   QWORD PTR es:[ebx]
  406d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d75:	mov    DWORD PTR [edi+0x520847dc],ecx
  406d7b:	cmp    DWORD PTR [eax+0x1e],esp
  406d7e:	dec    edx
  406d7f:	cli    
  406d80:	cld    
  406d81:	xchg   BYTE PTR [edi+0x68],ch
  406d84:	in     eax,0x3c
  406d86:	or     cl,BYTE PTR [ecx]
  406d88:	or     DWORD PTR [edi-0x41],ebx
  406d8b:	xchg   esi,eax
  406d8c:	in     eax,0x75
  406d8e:	(bad)  
  406d8f:	lea    esi,[ebx+edx*2-0x2]
  406d93:	icebp  
  406d94:	mov    ebx,es
  406d96:	(bad)  
  406d97:	fwait
  406d98:	mov    ds:0x43fd7756,eax
  406d9d:	mul    BYTE PTR [edi-0x15]
  406da0:	enter  0x87ad,0x37
  406da4:	lods   eax,DWORD PTR ds:[esi]
  406da5:	fisttp QWORD PTR [edx+ebp*8-0x4a2f36c1]
  406dac:	pusha  
  406dad:	mov    dh,0x2f
  406daf:	sbb    dh,ah
  406db1:	pop    ss
  406db2:	shl    BYTE PTR [edi-0x5015a136],1
  406db8:	sub    DWORD PTR cs:[esi-0x15b2b9a3],0xffffffa5
  406dc0:	mov    edx,0x7d060b2b
  406dc5:	in     eax,0x54
  406dc7:	mov    esi,edi
  406dc9:	push   ebx
  406dca:	pop    ebp
  406dcb:	scas   al,BYTE PTR es:[edi]
  406dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dcd:	ror    DWORD PTR [eax],cl
  406dcf:	(bad)  
  406dd0:	mov    bl,0xd8
  406dd2:	xor    ecx,DWORD PTR [ebp-0x4f9d04d3]
  406dd8:	mov    ds,WORD PTR [edx]
  406dda:	dec    edx
  406ddb:	je     0x406de4
  406ddd:	ficom  WORD PTR [edx]
  406ddf:	add    BYTE PTR [ecx+0x1c288900],bl
  406de5:	je     0x406e0c
  406de7:	lods   eax,DWORD PTR ds:[esi]
  406de8:	push   edx
  406de9:	jae    0x406dfb
  406deb:	jecxz  0x406e52
  406ded:	push   esi
  406dee:	popf   
  406def:	jl     0x406dfa
  406df1:	lods   eax,DWORD PTR ds:[esi]
  406df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406df3:	lds    ecx,FWORD PTR [ebx+0x3f7871d6]
  406df9:	aaa    
  406dfa:	pop    esi
  406dfb:	dec    edx
  406dfc:	loopne 0x406e64
  406dfe:	pop    esi
  406dff:	fadd   st(6),st
  406e01:	sbb    ecx,DWORD PTR [eax+0x6b]
  406e04:	aas    
  406e05:	neg    DWORD PTR [ebp-0x26]
  406e08:	repz or eax,0x4c99295e
  406e0e:	push   es
  406e0f:	lahf   
  406e10:	loope  0x406dca
  406e12:	adc    al,0x7a
  406e14:	add    ch,BYTE PTR [ecx]
  406e16:	idiv   BYTE PTR [esi*2+0x260e991e]
  406e1d:	adc    edi,DWORD PTR [edi]
  406e1f:	push   0xd0c19ac1
  406e24:	xchg   ebp,eax
  406e25:	and    DWORD PTR [ecx+edi*8-0x739e3e63],eax
  406e2c:	adc    DWORD PTR [ebx+0x4abc5ab],ecx
  406e32:	mov    ecx,0xe049d756
  406e37:	xor    bl,BYTE PTR [edi]
  406e39:	add    BYTE PTR [esi+0x23],0xb2
  406e3d:	ficomp WORD PTR [esi+0x17d51783]
  406e43:	out    dx,al
  406e44:	xchg   edi,eax
  406e45:	scas   eax,DWORD PTR es:[edi]
  406e46:	xchg   ebp,eax
  406e47:	sbb    esi,ebp
  406e49:	mov    esp,DWORD PTR [ecx+0x20]
  406e4c:	xor    bh,dl
  406e4e:	sbb    DWORD PTR [ebp+ecx*4-0x7b],esi
  406e52:	stc    
  406e53:	or     ah,BYTE PTR [ecx+0x7830eb86]
  406e59:	in     eax,0x7d
  406e5b:	or     cl,0x3
  406e5e:	lock dec edx
  406e60:	es inc ecx
  406e62:	sbb    DWORD PTR [ecx+0x53b93e58],ebx
  406e68:	in     eax,dx
  406e69:	js     0x406e5b
  406e6b:	jecxz  0x406e2f
  406e6d:	ss daa 
  406e6f:	sub    esp,edi
  406e71:	imul   eax,ebp,0x22
  406e74:	add    dl,BYTE PTR [edx]
  406e76:	in     al,0x21
  406e78:	jmp    0x9a109a39
  406e7d:	push   ebx
  406e7e:	and    eax,0x518b84d2
  406e83:	daa    
  406e84:	mov    ds:0x2b29e31c,al
  406e89:	inc    edi
  406e8a:	pop    ecx
  406e8b:	ds and al,0x67
  406e8e:	sbb    dl,bl
  406e90:	lock pusha 
  406e92:	popa   
  406e93:	fisttp DWORD PTR [eax+ebp*1]
  406e96:	stc    
  406e97:	aad    0x1c
  406e99:	ds xchg edx,eax
  406e9b:	ins    BYTE PTR es:[edi],dx
  406e9c:	mov    ds:0xa6526049,eax
  406ea1:	mov    esi,0xf14a5cb4
  406ea6:	(bad)  
  406ea7:	xor    ecx,ebp
  406ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eaa:	call   0xf8f3eff6
  406eaf:	xchg   esp,eax
  406eb0:	jne    0x406ee4
  406eb2:	xchg   esp,eax
  406eb3:	ins    BYTE PTR es:[edi],dx
  406eb4:	mov    ebx,0xd9f9e1a2
  406eb9:	call   0x9c3b:0xa446a81
  406ec0:	or     ecx,0xc5f6962d
  406ec6:	std    
  406ec7:	pop    edx
  406ec8:	inc    ebp
  406ec9:	pop    esi
  406eca:	push   ss
  406ecb:	xchg   ecx,eax
  406ecc:	fisttp WORD PTR [ebx]
  406ece:	cmp    eax,0xe393ede5
  406ed3:	or     al,0x9e
  406ed5:	and    ecx,DWORD PTR [esi+0x2e258cfb]
  406edb:	dec    DWORD PTR [ebp-0x4]
  406ede:	(bad)  
  406ee0:	jne    0x406eba
  406ee2:	je     0x406e64
  406ee4:	xlat   BYTE PTR ds:[ebx]
  406ee5:	sti    
  406ee6:	inc    ecx
  406ee7:	fcom   DWORD PTR [esi*2+0x9a506f]
  406eee:	nop
  406eef:	mov    edi,0x24b5f663
  406ef4:	call   0x6de32d86
  406ef9:	mov    al,0xac
  406efb:	in     al,0x5c
  406efd:	repz xor dh,BYTE PTR [eax]
  406f00:	dec    ebp
  406f01:	cmp    DWORD PTR [ecx],edi
  406f03:	and    DWORD PTR [ecx],ebx
  406f05:	inc    ebp
  406f06:	pop    ebx
  406f07:	and    al,0x6e
  406f09:	sahf   
  406f0a:	shl    ah,0xb9
  406f0d:	push   cs
  406f0e:	xor    ebx,edi
  406f10:	dec    ecx
  406f11:	fdiv   DWORD PTR [eax-0xedd2b1f]
  406f17:	or     ebx,edi
  406f19:	rol    ebp,0x33
  406f1c:	mov    dh,0x66
  406f1e:	jg     0x406ef2
  406f20:	mov    bh,0x33
  406f22:	cmp    eax,0x14cb9507
  406f27:	xor    DWORD PTR [edi+0x46],ebx
  406f2a:	popa   
  406f2b:	adc    ch,BYTE PTR [ebp-0x53104950]
  406f31:	xor    BYTE PTR [ebp+0x2c],bl
  406f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f35:	add    BYTE PTR [edx+0x4d74a5df],al
  406f3b:	call   0xbe2c58de
  406f40:	rcr    BYTE PTR [edi+0x1332c9d4],1
  406f46:	xlat   BYTE PTR ds:[ebx]
  406f47:	sbb    ebp,DWORD PTR [esi+0x5c93a9]
  406f4d:	and    BYTE PTR [ebx],cl
  406f4f:	mov    dl,0x65
  406f51:	out    dx,al
  406f52:	xchg   ebx,ecx
  406f54:	xchg   ebx,eax
  406f55:	sub    ebx,ebx
  406f57:	adc    cl,ch
  406f59:	arpl   WORD PTR [ebx+0x5d],sp
  406f5c:	sbb    DWORD PTR [ebx-0x68feba23],edi
  406f62:	inc    eax
  406f63:	and    al,0x12
  406f65:	push   esi
  406f66:	jmp    0x93b4c725
  406f6b:	int    0x75
  406f6d:	cli    
  406f6e:	fidivr WORD PTR [esi+0x66e625ec]
  406f74:	inc    ecx
  406f75:	test   DWORD PTR [eax],eax
  406f77:	retf   0xf6c8
  406f7a:	push   0xdef27852
  406f7f:	xchg   ebx,eax
  406f80:	jo     0x406f58
  406f82:	cmp    DWORD PTR [eax+0x5b76766a],eax
  406f88:	aaa    
  406f89:	add    al,0x32
  406f8b:	mov    edx,0xa50c7398
  406f90:	mov    ebx,0xf48877b
  406f95:	cmp    esi,esp
  406f97:	and    al,0x5a
  406f99:	dec    edx
  406f9a:	loopne 0x406fe1
  406f9c:	ins    BYTE PTR es:[edi],dx
  406f9d:	dec    edi
  406f9e:	sbb    eax,0xa50f6290
  406fa3:	inc    ebp
  406fa4:	pushf  
  406fa5:	cmp    BYTE PTR [ebx+0x35],dl
  406fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa9:	in     al,0x3c
  406fab:	push   edi
  406fac:	add    esp,DWORD PTR [eax-0x3d]
  406faf:	sub    ebp,DWORD PTR [eax+ecx*8-0x30bff9fb]
  406fb6:	jecxz  0x406f53
  406fb8:	xchg   esi,eax
  406fb9:	push   0x55
  406fbb:	dec    edx
  406fbc:	stos   BYTE PTR es:[edi],al
  406fbd:	and    al,0x70
  406fbf:	or     eax,0xb2e131a4
  406fc4:	retf   
  406fc5:	sar    BYTE PTR [ecx+0x5b],0x5d
  406fc9:	in     al,dx
  406fca:	or     eax,edi
  406fcc:	lock das 
  406fce:	aaa    
  406fcf:	mov    ds:0x24141f5c,eax
  406fd4:	dec    ebp
  406fd5:	data16 loope 0x406f8a
  406fd8:	repz xchg ebx,eax
  406fda:	sbb    eax,0xaf5223b7
  406fdf:	or     dh,bl
  406fe1:	arpl   WORD PTR [edx],bx
  406fe3:	inc    ebx
  406fe4:	push   eax
  406fe5:	pop    edx
  406fe6:	xor    al,0x61
  406fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fe9:	and    al,0x9b
  406feb:	test   al,0x39
  406fed:	div    BYTE PTR [esi]
  406fef:	or     ah,ch
  406ff1:	xor    DWORD PTR [ebx+0x33],ecx
  406ff4:	lods   eax,DWORD PTR ds:[esi]
  406ff5:	fwait
  406ff6:	xor    eax,0xbedf6f2c
  406ffb:	call   0xcfefedea
  407000:	mov    ch,0xf6
  407002:	sahf   
  407003:	ja     0x407065
  407005:	lods   al,BYTE PTR ds:[esi]
  407006:	data16 aas 
  407008:	pusha  
  407009:	sbb    dh,BYTE PTR [edx-0x57326052]
  40700f:	gs sbb dl,bh
  407012:	dec    ebp
  407013:	fldcw  WORD PTR [esi+0x5f]
  407016:	jae    0x40708f
  407018:	int    0xfe
  40701a:	cli    
  40701b:	pop    ss
  40701c:	(bad)  [ebx-0x6695c31d]
  407022:	xchg   ebp,eax
  407023:	pop    esi
  407024:	push   ebp
  407025:	sbb    eax,0x8acd8f1f
  40702a:	or     ecx,DWORD PTR ds:0xa9af3521
  407030:	xor    dl,BYTE PTR [edi+0x47f141f8]
  407036:	xor    eax,0xd3dac619
  40703b:	xor    eax,0x4846c5cb
  407040:	in     al,0x21
  407042:	cdq    
  407043:	add    BYTE PTR [esi+0x0],ch
  407046:	jnp    0x40709d
  407048:	out    0x17,al
  40704a:	(bad)  
  40704b:	mov    edx,0x24b05dde
  407050:	test   al,cl
  407052:	pusha  
  407053:	outs   dx,DWORD PTR ds:[esi]
  407054:	mov    BYTE PTR [ebp+0x7a713627],bh
  40705a:	(bad)  
  40705b:	inc    esp
  40705c:	popa   
  40705d:	cmp    al,dl
  40705f:	sub    DWORD PTR [ebp-0x31],esi
  407062:	jmp    0x40709c
  407064:	xchg   dl,al
  407066:	(bad)  
  407067:	in     eax,dx
  407068:	jns    0x40703a
  40706a:	xor    edi,DWORD PTR [esi-0x48784518]
  407070:	xchg   ebx,eax
  407071:	(bad)  
  407072:	loopne 0x407083
  407074:	or     eax,0xdadd7a93
  407079:	pop    ecx
  40707a:	xchg   esp,eax
  40707b:	aam    0xe1
  40707d:	int3   
  40707e:	push   cs
  40707f:	call   0x4882:0xea8da50a
  407086:	or     al,0xf4
  407088:	adc    dh,BYTE PTR [ebx]
  40708a:	jbe    0x50c21973
  407090:	loopne 0x407014
  407092:	push   0x9760e5c
  407097:	xlat   BYTE PTR ds:[ebx]
  407098:	ss in  eax,0x54
  40709b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40709c:	jp     0x4070f6
  40709e:	push   ecx
  40709f:	into   
  4070a0:	sub    ecx,DWORD PTR [ebx+eax*1-0x31]
  4070a4:	retf   0xc21
  4070a7:	jae    0x4070c8
  4070a9:	cmp    eax,0x8de5def8
  4070ae:	and    al,0x39
  4070b0:	jo     0x40709c
  4070b2:	fsub   DWORD PTR [edx]
  4070b4:	xchg   edi,eax
  4070b5:	int3   
  4070b6:	leave  
  4070b7:	inc    edi
  4070b8:	ins    BYTE PTR es:[edi],dx
  4070b9:	inc    esp
  4070ba:	jl     0x407093
  4070bc:	jae    0x4070ab
  4070be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070bf:	dec    ebp
  4070c0:	fs mov ebp,0xd99a14f2
  4070c6:	push   ecx
  4070c7:	sbb    bh,BYTE PTR [edi+esi*1]
  4070ca:	ins    DWORD PTR es:[di],dx
  4070cc:	(bad)  
  4070cd:	hlt    
  4070ce:	jge    0x40707b
  4070d0:	ja     0x40711b
  4070d2:	pop    ecx
  4070d3:	in     eax,0x6
  4070d5:	ja     0x407069
  4070d7:	sub    bh,BYTE PTR [esp+ecx*4+0x426627]
  4070de:	dec    ebp
  4070df:	lods   eax,DWORD PTR ds:[esi]
  4070e0:	cli    
  4070e1:	sbb    dl,BYTE PTR [esi]
  4070e3:	ffreep st(1)
  4070e5:	ja     0x4070a7
  4070e7:	inc    edx
  4070e8:	repnz cmp ch,BYTE PTR [ecx+eax*1]
  4070ec:	add    ch,BYTE PTR [ebp+0x61]
  4070ef:	or     cl,BYTE PTR [edx]
  4070f1:	scas   eax,DWORD PTR es:[edi]
  4070f2:	add    esp,DWORD PTR [ecx-0x54]
  4070f5:	ficom  DWORD PTR [ebx-0x35245527]
  4070fb:	mov    BYTE PTR [edi],al
  4070fd:	push   es
  4070fe:	(bad)  [ecx]
  407100:	inc    edx
  407101:	scas   al,BYTE PTR es:[edi]
  407102:	retf   0xb84b
  407105:	mov    cs,WORD PTR [eax-0x28]
  407108:	push   cs
  407109:	or     BYTE PTR [eax],ch
  40710b:	dec    edx
  40710c:	aas    
  40710d:	mov    bh,0xdb
  40710f:	and    BYTE PTR [esi+ecx*8+0x19ff8523],0xeb
  407117:	retf   
  407118:	inc    eax
  407119:	cld    
  40711a:	es loope 0x407129
  40711d:	call   0x710:0x70663407
  407124:	mov    ds:0x22576f82,al
  407129:	adc    al,0x36
  40712b:	es dec esi
  40712d:	shl    BYTE PTR ds:0x2df42b17,0x20
  407134:	push   ebp
  407135:	dec    edx
  407136:	data16 fidiv WORD PTR [ecx+0x5b5c3fbd]
  40713d:	xchg   DWORD PTR [edx+0x30],edi
  407140:	imul   esp,DWORD PTR [edi-0x51],0x7c
  407144:	les    edx,FWORD PTR [edx+eiz*4]
  407147:	out    dx,al
  407148:	or     edx,esp
  40714a:	dec    eax
  40714b:	dec    edi
  40714c:	or     al,0x12
  40714e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40714f:	push   es
  407150:	sbb    cl,BYTE PTR [ebx-0x63404ac4]
  407156:	cmp    dh,BYTE PTR [ecx]
  407158:	adc    edi,DWORD PTR [eax+0x7d]
  40715b:	jbe    0x407178
  40715d:	mov    edx,0xa465a99c
  407162:	clc    
  407163:	adc    BYTE PTR [esi+0xec9fbe8],dh
  407169:	leave  
  40716a:	sbb    BYTE PTR [eax],0x35
  40716d:	inc    ebx
  40716e:	inc    ecx
  40716f:	jo     0x40718f
  407171:	pop    es
  407172:	push   es
  407173:	ds es cdq 
  407176:	push   esi
  407177:	mov    ds:0x3ef8b42c,al
  40717c:	cli    
  40717d:	mov    esp,0x72744770
  407182:	aas    
  407183:	jecxz  0x407147
  407185:	xchg   DWORD PTR [edx],ecx
  407187:	adc    al,0x13
  407189:	add    eax,0xd47af707
  40718e:	std    
  40718f:	rcr    DWORD PTR [eax-0x3e86b976],1
  407195:	das    
  407196:	inc    ecx
  407197:	bnd jb 0x4071fe
  40719a:	xchg   esp,eax
  40719b:	adc    eax,0xaee319e1
  4071a0:	enter  0xcbf,0x9b
  4071a4:	fdivp  st(4),st
  4071a6:	scas   eax,DWORD PTR es:[edi]
  4071a7:	adc    BYTE PTR [ebx+ecx*4-0x345dab21],dh
  4071ae:	push   ebx
  4071af:	(bad)  
  4071b1:	push   edx
  4071b2:	sar    BYTE PTR [ecx*4-0x1e828d8b],1
  4071b9:	(bad)  
  4071bb:	push   edx
  4071bc:	mov    ecx,0x8a2e2180
  4071c1:	pop    esp
  4071c2:	or     BYTE PTR [ecx-0x7bac07e6],0x9e
  4071c9:	pop    ebp
  4071ca:	ret    0xb191
  4071cd:	dec    edx
  4071ce:	lock fsubr QWORD PTR ds:0x799bc50b
  4071d5:	ins    BYTE PTR es:[edi],dx
  4071d6:	jle    0x407161
  4071d8:	jp     0x40720b
  4071da:	es adc eax,0x721c3042
  4071e0:	lds    esp,FWORD PTR [eax-0x58775cb5]
  4071e6:	sbb    bh,BYTE PTR [esp+ebx*2-0x72]
  4071ea:	daa    
  4071eb:	jle    0x4071fb
  4071ed:	sub    eax,0xeb461c5
  4071f2:	(bad)
  4071f6:	cdq    
  4071f7:	dec    esp
  4071f8:	and    al,0x3f
  4071fa:	popa   
  4071fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071fc:	and    eax,0xf6166697
  407201:	outs   dx,BYTE PTR ds:[esi]
  407202:	and    DWORD PTR [esi-0x259dd2b1],edx
  407208:	xchg   edi,eax
  407209:	adc    bh,bh
  40720b:	xchg   ecx,eax
  40720c:	xor    al,0xc6
  40720e:	push   eax
  40720f:	sbb    BYTE PTR [ecx+0x402dd326],0x69
  407216:	fdiv   st(1),st
  407218:	(bad)  
  407219:	or     BYTE PTR [edx],cl
  40721b:	je     0x40727c
  40721d:	popa   
  40721e:	out    dx,eax
  40721f:	jo     0x4071ff
  407221:	adc    BYTE PTR [esi+ebp*8],al
  407224:	push   esi
  407225:	dec    ecx
  407226:	mov    al,0xef
  407228:	in     al,dx
  407229:	lahf   
  40722a:	(bad)  
  40722b:	outs   dx,DWORD PTR ds:[esi]
  40722c:	lods   eax,DWORD PTR ds:[esi]
  40722d:	(bad)  
  40722f:	mov    ecx,0x1ebc12dc
  407234:	neg    DWORD PTR [ecx]
  407236:	sbb    eax,0x424b9f2c
  40723b:	nop
  40723c:	inc    esi
  40723d:	std    
  40723e:	ins    DWORD PTR es:[edi],dx
  40723f:	xor    ah,ch
  407241:	jecxz  0x40723b
  407243:	dec    ebx
  407244:	lea    edi,[edi-0x42]
  407247:	ficomp WORD PTR [ebp+0x60388550]
  40724d:	xor    al,0xa0
  40724f:	sub    BYTE PTR [edx+0x52],0x2
  407253:	pusha  
  407254:	ficom  WORD PTR [ebx]
  407256:	adc    ch,dl
  407258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407259:	fcomip st,st(7)
  40725b:	or     ebp,edx
  40725d:	inc    esp
  40725e:	add    DWORD PTR [eax+0x3f],edx
  407261:	cmp    DWORD PTR [esi],ebp
  407263:	sbb    DWORD PTR [edi],esi
  407265:	and    al,0x13
  407267:	and    edx,DWORD PTR [ebp+0x29aba343]
  40726d:	pop    es
  40726e:	mov    dh,0xb6
  407270:	or     ecx,esp
  407272:	cli    
  407273:	imul   ebx,DWORD PTR [edx-0x56],0x35f85ee9
  40727a:	inc    esi
  40727b:	sbb    ecx,DWORD PTR ds:0xe6d59f64
  407281:	repnz popa 
  407283:	sub    dl,BYTE PTR [ebx+0xd]
  407286:	jo     0x4072be
  407288:	push   esp
  407289:	outs   dx,DWORD PTR ds:[esi]
  40728a:	in     al,0x9e
  40728c:	popa   
  40728d:	inc    ebp
  40728e:	pop    ecx
  40728f:	test   cl,bh
  407291:	pusha  
  407292:	lds    ecx,FWORD PTR [ebx-0x9cef16d]
  407298:	loope  0x407275
  40729a:	jne    0x407223
  40729c:	inc    esi
  40729d:	test   BYTE PTR [eax+0x6de10243],cl
  4072a3:	push   esp
  4072a4:	scas   al,BYTE PTR es:[edi]
  4072a5:	in     eax,dx
  4072a6:	and    BYTE PTR [esi+0x45eaae9b],0xdb
  4072ad:	inc    edx
  4072ae:	adc    BYTE PTR ds:0x6667e134,bl
  4072b4:	sbb    eax,0xc97ca48b
  4072b9:	push   ss
  4072ba:	dec    eax
  4072bb:	out    dx,al
  4072bc:	loop   0x40732f
  4072be:	sbb    al,0xb9
  4072c0:	cld    
  4072c1:	xchg   DWORD PTR [edi+0x38],eax
  4072c4:	sti    
  4072c5:	mov    eax,DWORD PTR [esi+ebp*8+0x2f]
  4072c9:	hlt    
  4072ca:	loop   0x407310
  4072cc:	xchg   BYTE PTR [ecx],bh
  4072ce:	int    0x2b
  4072d0:	imul   esi,DWORD PTR [edi*1-0x181f3dc],0xefc005d
  4072db:	xchg   ebx,eax
  4072dc:	inc    edx
  4072dd:	xchg   BYTE PTR [ebx+0x66],ch
  4072e0:	(bad)  
  4072e1:	dec    esi
  4072e2:	pop    ecx
  4072e3:	outs   dx,BYTE PTR ds:[esi]
  4072e4:	add    eax,0x41bb120d
  4072e9:	adc    BYTE PTR ds:0xc609acbb,0xeb
  4072f0:	lahf   
  4072f1:	icebp  
  4072f2:	pushf  
  4072f3:	les    ebp,FWORD PTR [ecx+ebx*1-0x1a]
  4072f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072f8:	imul   edi,DWORD PTR [esi+ecx*1],0x19
  4072fc:	sti    
  4072fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072fe:	inc    eax
  4072ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407300:	cmp    bh,ah
  407302:	xchg   esi,eax
  407303:	and    DWORD PTR [esi],ecx
  407305:	lea    edx,[eax-0x5a4acae2]
  40730b:	mov    ebp,0x7f216023
  407310:	xchg   ebp,eax
  407311:	mov    esp,0xef67046c
  407316:	lahf   
  407317:	pusha  
  407318:	mov    dl,0xaf
  40731a:	rcr    DWORD PTR [ecx-0x389b56d3],cl
  407320:	neg    BYTE PTR [edx-0x1f]
  407323:	adc    BYTE PTR [ecx],ch
  407325:	xchg   edi,eax
  407326:	cmp    al,0x22
  407328:	add    ecx,ebx
  40732a:	loopne 0x4072b0
  40732c:	jg     0x407350
  40732e:	add    al,0x7c
  407330:	imul   edx,DWORD PTR [eax+0x1],0x6a524474
  407337:	inc    esp
  407338:	sub    BYTE PTR [edi+0x5b91fe6f],bh
  40733e:	or     BYTE PTR [edx+0x6],dl
  407341:	jnp    0x40736a
  407343:	fbld   TBYTE PTR [ecx+0x3d]
  407346:	cmp    dh,ah
  407348:	or     eax,0xe54db7f2
  40734d:	leave  
  40734e:	mov    ecx,0x930ab570
  407353:	push   0xab5e1f56
  407358:	int    0x81
  40735a:	es mov ch,0x9a
  40735d:	dec    edx
  40735e:	mov    eax,0x727f3467
  407363:	rcl    ebp,0xac
  407366:	xchg   ebx,eax
  407367:	aad    0x72
  407369:	imul   ebp,esi,0xd8d58a4e
  40736f:	dec    ebx
  407370:	lahf   
  407371:	and    al,0x58
  407373:	mov    esp,0xac2b8346
  407378:	fabs   
  40737a:	xor    eax,0x23b284e7
  40737f:	mov    cl,dh
  407381:	jno    0x40738f
  407383:	or     eax,0x71d3605a
  407388:	ss xchg ecx,eax
  40738a:	sbb    eax,0x143ff878
  40738f:	lea    ebx,[edi]
  407391:	shl    DWORD PTR [ecx-0x39],0xaf
  407395:	cmp    eax,0x46008631
  40739a:	lods   eax,DWORD PTR ds:[esi]
  40739b:	stos   DWORD PTR es:[edi],eax
  40739c:	mov    dh,0x46
  40739e:	fmul   DWORD PTR [ecx]
  4073a0:	push   ebp
  4073a1:	inc    ecx
  4073a2:	sahf   
  4073a3:	(bad)  
  4073a4:	neg    bh
  4073a6:	(bad)  
  4073a7:	xchg   ebx,eax
  4073a8:	dec    ecx
  4073a9:	mov    bh,0xa5
  4073ab:	hlt    
  4073ac:	mov    dh,0x66
  4073ae:	outs   dx,DWORD PTR ds:[esi]
  4073af:	lds    ebx,FWORD PTR [edx]
  4073b1:	fdivr  DWORD PTR [ecx]
  4073b3:	and    BYTE PTR [esi+0x534f0aeb],cl
  4073b9:	sbb    BYTE PTR [ebp+0x2b],bl
  4073bc:	jecxz  0x40742f
  4073be:	sbb    eax,0x9296e0c1
  4073c3:	push   edx
  4073c4:	imul   edx,DWORD PTR [ecx],0xffffffa8
  4073c7:	jg     0x4073d3
  4073c9:	imul   ebx,ebp,0x8eef0ff4
  4073cf:	into   
  4073d0:	push   ebx
  4073d1:	xchg   esi,eax
  4073d2:	jge    0x4073a7
  4073d4:	cli    
  4073d5:	into   
  4073d6:	inc    esp
  4073d7:	hlt    
  4073d8:	mov    ch,BYTE PTR [edi-0x4b]
  4073db:	mov    edi,0x81bebdb5
  4073e0:	das    
  4073e1:	loop   0x40736e
  4073e3:	mov    DWORD PTR [edi-0x762c39ec],esp
  4073e9:	lahf   
  4073ea:	std    
  4073eb:	cld    
  4073ec:	inc    ebx
  4073ed:	mov    ebx,DWORD PTR [eax]
  4073ef:	or     al,0xd9
  4073f1:	add    eax,0x21a9aa00
  4073f6:	adc    dh,BYTE PTR [ebx-0x20268f59]
  4073fc:	dec    ecx
  4073fd:	mov    al,ds:0xb87f12b
  407402:	std    
  407403:	dec    esp
  407404:	push   cs
  407405:	inc    eax
  407406:	cmp    eax,0x7eebaccf
  40740b:	out    0x4b,eax
  40740d:	pusha  
  40740e:	mov    al,0x48
  407410:	nop
  407411:	jo     0x4073ea
  407413:	sub    al,0xeb
  407415:	sbb    al,0xf4
  407417:	jmp    0x40748c
  407419:	or     bl,BYTE PTR [esi]
  40741b:	es mov ecx,0x2bccd417
  407421:	cmp    eax,0x8ad08359
  407426:	jl     0x4073ab
  407428:	ins    DWORD PTR es:[edi],dx
  407429:	jp     0x407463
  40742b:	outs   dx,DWORD PTR ds:[esi]
  40742c:	fstp   TBYTE PTR [edx-0x9993927]
  407432:	mov    dl,0xcf
  407434:	jp     0x407404
  407436:	xor    al,0x27
  407438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407439:	mov    eax,0xed973e54
  40743e:	jne    0x40747b
  407440:	lods   eax,DWORD PTR ds:[esi]
  407441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407442:	stos   DWORD PTR es:[edi],eax
  407443:	dec    esi
  407444:	or     BYTE PTR [ebx+0x59],dh
  407447:	std    
  407448:	and    cl,BYTE PTR [ebx]
  40744a:	push   edi
  40744b:	cmp    ch,BYTE PTR [esi]
  40744d:	mov    dh,BYTE PTR [esi-0x28]
  407450:	inc    eax
  407451:	rcr    BYTE PTR [esp+ecx*4-0x2326e0cc],cl
  407458:	cdq    
  407459:	xchg   esi,eax
  40745a:	xchg   edx,eax
  40745b:	inc    ebx
  40745c:	inc    edi
  40745d:	xor    ch,dh
  40745f:	ss call 0x8c90ac54
  407465:	lock test eax,0x26b0d923
  40746b:	adc    ebp,DWORD PTR [edx+eiz*4-0x4e4318d9]
  407472:	(bad)
  407475:	inc    edx
  407476:	or     cl,BYTE PTR [esi-0x7761c612]
  40747c:	fs cmp eax,0x4aabb60
  407482:	push   0xe87cbeee
  407487:	arpl   WORD PTR [edi],ax
  407489:	stos   BYTE PTR es:[edi],al
  40748a:	ret    
  40748b:	push   es
  40748c:	retf   
  40748d:	js     0x40742f
  40748f:	int3   
  407490:	mov    edi,edi
  407492:	loopne 0x407458
  407494:	stos   DWORD PTR es:[edi],eax
  407495:	call   0x1ef2e6dd
  40749a:	inc    edi
  40749b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40749c:	enter  0xe8a5,0x50
  4074a0:	lods   eax,DWORD PTR ds:[esi]
  4074a1:	sub    al,0x70
  4074a3:	jle    0x407461
  4074a5:	fs popf 
  4074a7:	cdq    
  4074a8:	fisttp WORD PTR [edx-0x46]
  4074ab:	js     0x407473
  4074ad:	sbb    bh,al
  4074af:	and    eax,0xa33b64ff
  4074b4:	leave  
  4074b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b6:	(bad)  [esp+eax*8]
  4074b9:	pushf  
  4074ba:	mov    ds:0x429bcda9,eax
  4074bf:	and    BYTE PTR [eax+ebp*4],bh
  4074c2:	arpl   ax,sp
  4074c4:	(bad)  
  4074c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074c6:	aas    
  4074c7:	aam    0x12
  4074c9:	call   0xf534:0x1d2fc50a
  4074d0:	jl     0x40747f
  4074d2:	out    0x92,eax
  4074d4:	cmp    al,0xfa
  4074d6:	xchg   esp,eax
  4074d7:	or     bl,dh
  4074d9:	adc    eax,0x76a3bcdc
  4074de:	mov    ch,0xa1
  4074e0:	imul   edi,DWORD PTR ds:0x1c05c13,0xffffffe6
  4074e7:	mov    edx,0x8a0bb2c2
  4074ec:	pop    es
  4074ed:	packsswb mm7,QWORD PTR ds:0x6c6800bc
  4074f4:	add    eax,edi
  4074f6:	or     bh,BYTE PTR [ebx+0x5e545012]
  4074fc:	dec    ebp
  4074fd:	inc    esp
  4074fe:	in     al,dx
  4074ff:	fwait
  407500:	xor    ebp,DWORD PTR [esp+ebp*4+0x22661753]
  407507:	inc    eax
  407508:	das    
  407509:	imul   ecx,DWORD PTR [ecx],0xeea666a9
  40750f:	ror    DWORD PTR [ebp+0x1],0x48
  407513:	cli    
  407514:	and    dh,dl
  407516:	fwait
  407517:	or     eax,0xdd20e03
  40751c:	or     bl,ch
  40751e:	daa    
  40751f:	popf   
  407520:	in     eax,0x39
  407522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407523:	lods   al,BYTE PTR ds:[esi]
  407524:	inc    edi
  407525:	sbb    al,0xfe
  407527:	xlat   BYTE PTR ds:[ebx]
  407528:	gs cmc 
  40752a:	idiv   edx
  40752c:	ror    DWORD PTR [esi],1
  40752e:	in     al,dx
  40752f:	push   ds
  407530:	push   ebx
  407531:	(bad)  
  407532:	jns    0x4075a7
  407534:	call   0x9e39:0x154ff7a8
  40753b:	div    dh
  40753d:	repnz out dx,eax
  40753f:	das    
  407540:	cmc    
  407541:	xor    bl,cl
  407543:	dec    ebp
  407544:	pop    ds
  407545:	push   cs
  407546:	pop    ebx
  407547:	inc    ecx
  407548:	add    ah,BYTE PTR [edx+0x4f]
  40754b:	imul   edi,esi,0x24
  40754e:	stos   DWORD PTR es:[edi],eax
  40754f:	aas    
  407550:	mov    edi,0x14c2b58e
  407555:	push   esp
  407556:	ret    
  407557:	sbb    esi,edi
  407559:	loopne 0x4075c0
  40755b:	fcomp  st(1)
  40755d:	stos   BYTE PTR es:[edi],al
  40755e:	or     al,0x8f
  407560:	es pop ss
  407562:	pop    edx
  407563:	aad    0xa7
  407565:	jmp    0xb62331f2
  40756a:	popa   
  40756b:	mov    edi,0xf0271994
  407570:	aas    
  407571:	mov    BYTE PTR ds:0x6c41bdaa,dl
  407577:	jg     0x40750d
  407579:	aam    0x7
  40757b:	bound  esi,QWORD PTR [edx+0x34089715]
  407581:	push   ebp
  407582:	push   edi
  407583:	inc    esp
  407584:	xor    BYTE PTR [edi+0x48a2b591],ch
  40758a:	inc    ebp
  40758b:	push   esp
  40758c:	in     eax,dx
  40758d:	js     0x4075a8
  40758f:	mov    ah,0x74
  407591:	add    ebx,DWORD PTR [eax]
  407593:	pop    esp
  407594:	std    
  407595:	sbb    esp,DWORD PTR [eax]
  407597:	scas   al,BYTE PTR es:[edi]
  407598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407599:	in     al,0xe6
  40759b:	dec    ebp
  40759c:	ins    BYTE PTR es:[edi],dx
  40759d:	test   eax,0xc414aed0
  4075a2:	cmp    BYTE PTR [eax-0x6a8348ed],ah
  4075a8:	cmc    
  4075a9:	cmp    eax,0x369c08cc
  4075ae:	fcomi  st,st(7)
  4075b0:	pop    esp
  4075b1:	or     al,0xac
  4075b3:	cmc    
  4075b4:	shr    ecx,1
  4075b6:	bound  edx,QWORD PTR [eax-0x39]
  4075b9:	cmp    ebp,DWORD PTR [eax-0x5696162c]
  4075bf:	hlt    
  4075c0:	inc    edx
  4075c1:	in     al,0x6d
  4075c3:	mov    bh,0xf
  4075c5:	je     0x4075d6
  4075c7:	dec    ebp
  4075c8:	aaa    
  4075c9:	in     eax,0x50
  4075cb:	fbld   TBYTE PTR [ebx+0x6ba61b16]
  4075d1:	loope  0x407630
  4075d3:	pop    ecx
  4075d4:	loope  0x407601
  4075d6:	(bad)  
  4075d7:	in     al,dx
  4075d8:	mov    bh,0xf0
  4075da:	pop    edi
  4075db:	leave  
  4075dc:	ds inc edi
  4075de:	scas   eax,DWORD PTR es:[edi]
  4075df:	pop    ss
  4075e0:	jp     0x40764d
  4075e2:	(bad)  
  4075e3:	adc    al,0x9f
  4075e5:	jns    0x40760c
  4075e7:	xchg   edx,eax
  4075e8:	jns    0x40762c
  4075ea:	dec    eax
  4075eb:	ret    
  4075ec:	test   eax,0xc8c1d26b
  4075f1:	push   eax
  4075f2:	mov    ebx,0xb331661e
  4075f7:	imul   esp,DWORD PTR [edx+0x25f5b0ed],0xd
  4075fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ff:	inc    edx
  407600:	pop    ebx
  407601:	inc    ebx
  407602:	loopne 0x4075fa
  407604:	xchg   ebp,eax
  407605:	sbb    edx,ebx
  407607:	inc    ebx
  407608:	test   al,0x81
  40760a:	and    edx,DWORD PTR [edi-0x8]
  40760d:	jne    0x40761b
  40760f:	mov    DWORD PTR [eax-0x5],0xc874b287
  407616:	adc    ch,al
  407618:	ds or  al,0xfe
  40761b:	fcomi  st,st(2)
  40761d:	sub    eax,0xd4298d1e
  407622:	pop    ecx
  407623:	pop    eax
  407624:	adc    dh,0x52
  407627:	ds inc edx
  407629:	shl    ecx,cl
  40762b:	jo     0x40765f
  40762d:	or     DWORD PTR [eax+0x5d],0xfffffffe
  407631:	pop    ebp
  407632:	sub    BYTE PTR [ebx-0x4a],0x27
  407636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407637:	imul   eax,ebx,0xfb6710c7
  40763d:	pop    ecx
  40763e:	sub    eax,0x69463a52
  407643:	shl    cl,0x76
  407646:	sbb    esi,eax
  407648:	pop    eax
  407649:	cmp    ah,BYTE PTR [esi-0x37]
  40764c:	loopne 0x407668
  40764e:	ja     0x40768e
  407650:	out    dx,al
  407651:	or     bl,BYTE PTR [edi-0x144f5ea0]
  407657:	xor    eax,0x6332a257
  40765c:	das    
  40765d:	adc    eax,0x840b45da
  407662:	push   eax
  407663:	nop
  407664:	repnz pop ebx
  407666:	push   eax
  407667:	test   ebp,eax
  407669:	cmp    dh,dl
  40766b:	ins    DWORD PTR es:[edi],dx
  40766c:	jl     0x40762e
  40766e:	sbb    ebx,DWORD PTR [ebx]
  407670:	jmp    0x883377de
  407675:	out    dx,eax
  407676:	pop    ebp
  407677:	xlat   BYTE PTR ds:[ebx]
  407678:	inc    ebp
  407679:	or     al,0x4a
  40767b:	cmp    edi,DWORD PTR [edx+edx*1+0x56]
  40767f:	xor    esi,esp
  407681:	and    BYTE PTR [ebp+0x743ec5fe],dl
  407687:	out    dx,eax
  407688:	cmp    eax,0xb2614f51
  40768d:	mov    al,0x4b
  40768f:	inc    ebx
  407690:	(bad)  
  407691:	dec    cx
  407693:	test   eax,0x81dfd485
  407698:	and    bh,bh
  40769a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40769b:	xor    al,0x5
  40769d:	sub    eax,0xb6620d4d
  4076a2:	scas   eax,DWORD PTR es:[edi]
  4076a3:	cs jp  0x4076f0
  4076a6:	adc    dh,al
  4076a8:	or     edi,ebx
  4076aa:	pop    ecx
  4076ab:	mov    ah,0x8f
  4076ad:	loop   0x407669
  4076af:	xchg   edx,eax
  4076b0:	out    dx,al
  4076b1:	adc    edx,esp
  4076b3:	fldcw  WORD PTR ds:[ebx+0x42]
  4076b7:	sbb    al,0xfc
  4076b9:	call   0x177a:0xad444ad0
  4076c0:	into   
  4076c1:	sbb    eax,0x1b208d9b
  4076c6:	(bad)  
  4076c8:	xor    ecx,0xab8718fb
  4076ce:	rcl    DWORD PTR [edx],1
  4076d0:	pop    edx
  4076d1:	xchg   esp,eax
  4076d2:	jnp    0x407686
  4076d4:	cmp    bl,bl
  4076d6:	sub    eax,0x593bb678
  4076db:	nop
  4076dc:	sub    eax,0x786e287d
  4076e1:	push   edi
  4076e2:	rcl    eax,0xc4
  4076e5:	and    eax,0x16e321ef
  4076ea:	mov    ecx,0xf1b2b022
  4076ef:	pop    ds
  4076f0:	adc    eax,0xf36f416e
  4076f5:	jmp    0xf28fb114
  4076fa:	add    ch,BYTE PTR [ebp+0x53]
  4076fd:	test   al,0x7b
  4076ff:	int3   
  407700:	or     DWORD PTR [edx-0x1f15f6a4],edi
  407706:	xor    edi,DWORD PTR [edx+0x23]
  407709:	retf   0x8a0a
  40770c:	adc    DWORD PTR [ebp-0x2d],eax
  40770f:	mov    dh,0x90
  407711:	push   esp
  407712:	ins    DWORD PTR es:[edi],dx
  407713:	push   edx
  407714:	dec    edi
  407715:	xchg   ebp,eax
  407716:	mov    ds:0xba18e5f6,eax
  40771b:	jmp    0x54:0x70b8c57
  407722:	(bad)  
  407724:	sub    edi,DWORD PTR [ebx-0x129c2b58]
  40772a:	dec    edx
  40772b:	aam    0x63
  40772d:	push   ebx
  40772e:	sar    BYTE PTR [ebx+edx*2-0x473dc579],cl
  407735:	and    DWORD PTR [edi+edi*1],0xffffffa4
  407739:	adc    ah,BYTE PTR [ecx+0x5e]
  40773c:	out    dx,eax
  40773d:	popa   
  40773e:	bound  esi,QWORD PTR [ebx-0x35]
  407741:	retf   
  407742:	adc    al,0xf7
  407744:	cli    
  407745:	jle    0x4076ed
  407747:	xchg   ecx,eax
  407748:	stos   BYTE PTR es:[edi],al
  407749:	cld    
  40774a:	xor    eax,0xf44e34c0
  40774f:	mov    ah,0x22
  407751:	add    DWORD PTR [ecx],edx
  407753:	jne    0x407789
  407755:	fld    TBYTE PTR [esi]
  407757:	scas   al,BYTE PTR es:[edi]
  407758:	inc    ecx
  407759:	or     ch,BYTE PTR [ebp-0x3e]
  40775c:	mov    al,0x59
  40775e:	push   esi
  40775f:	cmp    esi,DWORD PTR [edi+0x78]
  407762:	mov    esi,0x256f62e9
  407767:	loopne 0x40778c
  407769:	das    
  40776a:	jmp    0x4077ad
  40776c:	out    dx,eax
  40776d:	(bad)  
  40776e:	sar    DWORD PTR [ebx],1
  407770:	push   edi
  407771:	test   BYTE PTR [edx-0x64],0x7e
  407775:	dec    esi
  407776:	fcmove st,st(3)
  407778:	and    ch,bh
  40777a:	(bad)  
  40777b:	cli    
  40777c:	jmp    0x7183e43f
  407781:	mov    DWORD PTR [esi],eax
  407783:	adc    bl,ch
  407785:	mov    eax,ds:0x8a82ff52
  40778a:	fld    st(5)
  40778c:	push   ebp
  40778d:	clc    
  40778e:	mov    edx,0x2af42be5
  407793:	inc    esi
  407794:	(bad)  
  407795:	jle    0x407720
  407797:	or     DWORD PTR [eax+ecx*2-0x1e],edi
  40779b:	outs   dx,BYTE PTR ds:[esi]
  40779c:	iret   
  40779d:	fs add al,0xe6
  4077a0:	jp     0x407792
  4077a2:	fbstp  TBYTE PTR [edi]
  4077a4:	dec    esp
  4077a5:	in     al,dx
  4077a6:	ds pop ss
  4077a8:	ret    0xe38
  4077ab:	sub    al,0x46
  4077ad:	mov    ebx,0xf19daca5
  4077b2:	loop   0x4077d7
  4077b4:	aad    0x2a
  4077b6:	or     al,0xb9
  4077b8:	mov    ah,BYTE PTR [esi]
  4077ba:	hlt    
  4077bb:	jmp    esi
  4077bd:	retw   
  4077bf:	add    DWORD PTR [esp+esi*4+0xaf8a197],ebp
  4077c6:	stos   BYTE PTR es:[edi],al
  4077c7:	xlat   BYTE PTR ds:[ebx]
  4077c8:	in     al,dx
  4077c9:	inc    eax
  4077ca:	mov    ebp,0x238d32be
  4077cf:	mov    dl,BYTE PTR [ebx+0x1999f6bd]
  4077d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077d6:	and    ah,BYTE PTR [eax+0x3a]
  4077d9:	cmp    DWORD PTR [eax-0x56],esp
  4077dc:	push   cs
  4077dd:	or     BYTE PTR [ecx+ecx*1],0xca
  4077e1:	mov    ecx,0xfe40289d
  4077e6:	and    ecx,DWORD PTR [ebx]
  4077e8:	imul   edx,DWORD PTR ds:0x426b1c24,0x6e4d65ae
  4077f2:	sbb    DWORD PTR [esi+0x2c],eax
  4077f5:	sub    al,0x22
  4077f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f8:	fsubp  st(5),st
  4077fa:	add    DWORD PTR [esi],edi
  4077fc:	leave  
  4077fd:	popa   
  4077fe:	sub    al,cl
  407800:	retf   0xe8b7
  407803:	cmp    DWORD PTR [esi+eiz*8-0x7c],eax
  407807:	std    
  407808:	sti    
  407809:	mov    ds:0xceb74a4,al
  40780e:	loope  0x4077dc
  407810:	add    DWORD PTR [ebp+0x52f4de7a],ecx
  407816:	pop    esp
  407817:	sub    al,BYTE PTR [esp+eiz*8-0x145b67bf]
  40781e:	jae    0x407812
  407820:	pushf  
  407821:	xor    eax,0xed0d26d9
  407826:	push   ds
  407827:	jecxz  0x407813
  407829:	inc    ecx
  40782a:	xchg   ecx,eax
  40782b:	push   0xa70b5645
  407830:	ret    0x5232
  407833:	call   0x5a5a:0xf5227d23
  40783a:	dec    ecx
  40783b:	cmc    
  40783c:	into   
  40783d:	jp     0x4077e8
  40783f:	mov    ch,0xd
  407841:	(bad)  
  407842:	fcom   QWORD PTR [edi-0x2]
  407845:	inc    DWORD PTR [edx]
  407847:	push   ecx
  407848:	sbb    ebp,DWORD PTR [edx]
  40784a:	jmp    0xe72908a2
  40784f:	inc    eax
  407850:	pop    ebx
  407851:	scas   eax,DWORD PTR es:[edi]
  407852:	jo     0x4077f5
  407854:	aaa    
  407855:	ret    0x8f8a
  407858:	loopne 0x4077ff
  40785a:	out    0x44,al
  40785c:	mov    al,ds:0xdf420cc9
  407861:	jbe    0x40780f
  407863:	jmp    0x407834
  407865:	jae    0x4078b1
  407867:	sub    BYTE PTR [ebp+0x28b398f2],bh
  40786d:	into   
  40786e:	pop    ecx
  40786f:	nop
  407870:	mov    ebp,0xef103f50
  407875:	jns    0x40780b
  407877:	adc    BYTE PTR [edx-0x3084bf73],ch
  40787d:	push   edi
  40787e:	aad    0x55
  407880:	lahf   
  407881:	sub    DWORD PTR [edi],esi
  407883:	add    BYTE PTR [ebx-0x45],dh
  407886:	cmc    
  407887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407888:	adc    cl,BYTE PTR [edi-0xec2131c]
  40788e:	xchg   DWORD PTR [ebx],edx
  407890:	or     DWORD PTR ds:0xb51438c,esp
  407896:	and    DWORD PTR ds:0xa5d9bcd1,0xffffffbe
  40789d:	adc    BYTE PTR [edi-0x3dec25ff],0x52
  4078a4:	inc    edi
  4078a5:	xchg   ebx,eax
  4078a6:	aaa    
  4078a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078a8:	and    BYTE PTR [esi+0x57],0x65
  4078ac:	jecxz  0x407872
  4078ae:	push   ds
  4078af:	or     al,BYTE PTR [edx+ecx*2+0x7b]
  4078b3:	push   0x6
  4078b5:	mov    edi,0x48535a5e
  4078ba:	es mov bh,0xaa
  4078bd:	inc    edi
  4078be:	rcl    dl,0xa9
  4078c1:	mov    ch,BYTE PTR [edx+0x5833d9cf]
  4078c7:	repz into 
  4078c9:	popa   
  4078ca:	mov    esi,DWORD PTR [edx+0x937523f]
  4078d0:	clc    
  4078d1:	pop    edx
  4078d2:	ret    0x6d8b
  4078d5:	xchg   edi,eax
  4078d6:	into   
  4078d7:	inc    edx
  4078d8:	mov    edx,0x9c5ebf2d
  4078dd:	pop    eax
  4078de:	ret    
  4078df:	fdiv   DWORD PTR [ecx-0x37]
  4078e2:	mov    ecx,0x4f717ac1
  4078e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078e8:	lock adc cl,bh
  4078eb:	adc    al,0xb4
  4078ed:	or     DWORD PTR [edx+edx*2-0x10],ecx
  4078f1:	jmp    0x407923
  4078f3:	cld    
  4078f4:	fimul  WORD PTR [edi+0x5bfa522b]
  4078fa:	pusha  
  4078fb:	pop    edi
  4078fc:	(bad)  
  4078fd:	fisttp DWORD PTR [eax+esi*2-0x46151a97]
  407904:	push   ds
  407905:	int3   
  407906:	mov    edi,0xe9d7d3c2
  40790b:	xlat   BYTE PTR ds:[bx]
  40790d:	adc    DWORD PTR [edx-0x19],ebp
  407910:	xor    DWORD PTR [edi+esi*1+0x32],0x8cee2a24
  407918:	rol    DWORD PTR [ecx+0x3dbda134],cl
  40791e:	push   edx
  40791f:	ret    0x147f
  407922:	sti    
  407923:	fcmovu st,st(7)
  407925:	push   cs
  407926:	lea    ebx,[esi+ebp*2]
  407929:	dec    esi
  40792a:	or     DWORD PTR [ecx+0x7a],0xffffffcb
  40792e:	inc    ebp
  40792f:	mov    cs:0xc101c64a,al
  407935:	fwait
  407936:	lds    esi,FWORD PTR [esp+esi*4-0x7e]
  40793a:	mov    edx,0xe632e40b
  40793f:	outs   dx,DWORD PTR ds:[esi]
  407940:	mov    dl,0x29
  407942:	out    0xf9,eax
  407944:	dec    ebx
  407945:	data16 mov ch,0xdc
  407948:	pop    es
  407949:	mov    dl,0x96
  40794b:	(bad)  
  40794c:	or     DWORD PTR [edx-0x7446483b],edi
  407952:	or     eax,0xac337913
  407957:	add    eax,0x67f4c4fb
  40795c:	in     eax,0xb5
  40795e:	pop    edx
  40795f:	ss cmp edi,eax
  407962:	pusha  
  407963:	enter  0xae,0x7e
  407967:	test   eax,0x96aeed30
  40796c:	push   edi
  40796d:	mov    WORD PTR [edx-0x40b0dcf],gs
  407973:	jle    0x40792a
  407975:	push   edx
  407976:	add    eax,0x89189a49
  40797b:	mov    edx,0x8af29947
  407980:	enter  0x3e05,0x70
  407984:	xor    bl,BYTE PTR ds:0xdf57e693
  40798a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40798b:	inc    edi
  40798c:	rcr    BYTE PTR [edi],cl
  40798e:	mov    edx,DWORD PTR [edi]
  407990:	pusha  
  407991:	pop    ss
  407992:	fsub   QWORD PTR [eax+0x53]
  407995:	imul   ebx,DWORD PTR [ecx+esi*2+0x1ff3991e],0xa78b22e5
  4079a0:	data16 shl BYTE PTR [edx-0x66064b9d],cl
  4079a7:	ret    
  4079a8:	add    BYTE PTR [edi+0x2c],dl
  4079ab:	dec    ebx
  4079ac:	ins    DWORD PTR es:[edi],dx
  4079ad:	aas    
  4079ae:	cmp    al,0x6
  4079b0:	(bad)  
  4079b1:	push   eax
  4079b2:	fadd   st,st(1)
  4079b4:	test   al,0x39
  4079b6:	xchg   esi,eax
  4079b7:	sbb    cl,BYTE PTR [ebp-0x7]
  4079ba:	or     BYTE PTR [ebx],0x37
  4079bd:	into   
  4079be:	push   edi
  4079bf:	stos   BYTE PTR es:[edi],al
  4079c0:	jns    0x407968
  4079c2:	rol    DWORD PTR gs:[si+0x58],0x9
  4079c8:	rol    BYTE PTR [ecx+0x71],0x54
  4079cc:	mov    bh,0xba
  4079ce:	leave  
  4079cf:	xchg   edx,eax
  4079d0:	nop
  4079d1:	dec    esp
  4079d2:	push   es
  4079d3:	retf   
  4079d4:	or     ecx,edx
  4079d6:	pop    ebp
  4079d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079d8:	push   esi
  4079d9:	xchg   BYTE PTR [eax-0x2d],ch
  4079dc:	pushf  
  4079dd:	into   
  4079de:	pop    ecx
  4079e0:	inc    eax
  4079e1:	jl     0x4079a7
  4079e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e4:	sub    BYTE PTR [eax+0x64],bh
  4079e7:	xor    eax,DWORD PTR [ecx+0x34382ae4]
  4079ed:	jns    0x40798c
  4079ef:	dec    ebx
  4079f0:	addr16 retf 
  4079f2:	je     0x4079e9
  4079f4:	aaa    
  4079f5:	fcmovnb st,st(3)
  4079f7:	sub    BYTE PTR [edx+0x7],al
  4079fa:	in     eax,0xa8
  4079fc:	dec    ecx
  4079fd:	adc    ah,BYTE PTR [esi]
  4079ff:	inc    eax
  407a00:	in     al,dx
  407a01:	sub    DWORD PTR [edx+eiz*1],edx
  407a04:	jmp    0xddc5:0x3fde8908
  407a0b:	js     0x407a3d
  407a0d:	(bad)  
  407a0f:	mov    ss,WORD PTR [edx+0xc]
  407a12:	repnz daa 
  407a14:	jge    0x407a8e
  407a16:	das    
  407a17:	int3   
  407a18:	and    ecx,esi
  407a1a:	adc    eax,0x67409874
  407a1f:	xor    cl,BYTE PTR [eax+esi*8]
  407a22:	ds std 
  407a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a25:	xchg   edi,eax
  407a26:	pop    ecx
  407a27:	pop    edi
  407a28:	(bad)  
  407a29:	imul   ebx,DWORD PTR [eax-0x3f],0xffffff99
  407a2d:	xor    DWORD PTR [eax-0x3d],0x73fb8aad
  407a34:	call   DWORD PTR [ebx-0x5a]
  407a37:	(bad)  
  407a38:	stc    
  407a39:	imul   DWORD PTR [esi]
  407a3b:	inc    ecx
  407a3c:	adc    eax,0xd49b4641
  407a41:	and    al,0x70
  407a43:	adc    ecx,edi
  407a45:	and    DWORD PTR [edi],edx
  407a47:	data16 out dx,al
  407a49:	adc    cl,BYTE PTR [ebp+0x1e]
  407a4c:	mov    ah,0x6f
  407a4e:	(bad)  
  407a4f:	sar    BYTE PTR [eax+eiz*4-0x72f982cb],0x53
  407a57:	pop    ebx
  407a58:	test   DWORD PTR [edx-0x74],esi
  407a5b:	mov    ch,0xc4
  407a5d:	jge    0x407a3e
  407a5f:	pop    ecx
  407a60:	xor    dl,0x33
  407a63:	retf   
  407a64:	js     0x4079e6
  407a66:	xchg   ebp,eax
  407a67:	add    ecx,DWORD PTR [ebp-0xd]
  407a6a:	outs   dx,BYTE PTR ds:[si]
  407a6c:	mov    cl,BYTE PTR [ebx-0x2584bffc]
  407a72:	pop    ebx
  407a73:	aaa    
  407a74:	mov    cl,0x9f
  407a76:	sub    BYTE PTR [ebp-0x61],cl
  407a79:	mov    bh,0xde
  407a7b:	popf   
  407a7c:	bound  edx,QWORD PTR [edi]
  407a7e:	daa    
  407a7f:	and    bl,al
  407a81:	test   al,0xb5
  407a83:	dec    BYTE PTR [edi+0x24]
  407a86:	xor    dl,BYTE PTR [ebx+0x73]
  407a89:	cmp    dh,ah
  407a8b:	test   al,0x2f
  407a8d:	dec    ecx
  407a8e:	div    BYTE PTR [ebp+0x40]
  407a91:	add    esp,DWORD PTR [ebx+eiz*4]
  407a94:	shr    al,0x32
  407a97:	das    
  407a98:	inc    esi
  407a99:	repnz loop 0x407af1
  407a9c:	leave  
  407a9d:	aaa    
  407a9e:	or     al,0x2c
  407aa0:	je     0x407aa3
  407aa2:	xor    esi,DWORD PTR [edx]
  407aa4:	aaa    
  407aa5:	loopne 0x407a95
  407aa7:	push   es
  407aa8:	sub    DWORD PTR [ecx],eax
  407aaa:	(bad)  
  407aab:	mov    ebp,0xd81de595
  407ab0:	inc    DWORD PTR [eax+0x2f201f62]
  407ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab7:	cld    
  407ab8:	(bad)  
  407ab9:	jle    0x407b20
  407abb:	ins    DWORD PTR es:[edi],dx
  407abc:	mov    cl,0x1a
  407abe:	fstp   TBYTE PTR [edi-0x56]
  407ac1:	dec    esp
  407ac2:	mov    WORD PTR gs:[ebp+0x75f4c32f],fs
  407ac9:	jb     0x407b2e
  407acb:	mov    eax,0x829b912e
  407ad0:	aam    0x9d
  407ad2:	in     eax,dx
  407ad3:	mov    ds:0x2b1ce36b,eax
  407ad8:	(bad)  
  407ad9:	loopne 0x407a6d
  407adb:	sbb    eax,0x9716d113
  407ae0:	inc    edi
  407ae1:	hlt    
  407ae2:	aad    0x3a
  407ae4:	iret   
  407ae5:	jnp    0x407a96
  407ae7:	rcl    edx,1
  407ae9:	clc    
  407aea:	mov    eax,0x695918d8
  407aef:	add    esp,edx
  407af1:	ins    BYTE PTR es:[edi],dx
  407af2:	pop    eax
  407af3:	push   ss
  407af4:	ins    BYTE PTR es:[edi],dx
  407af5:	sbb    eax,ebp
  407af7:	pop    esp
  407af8:	mov    ss,WORD PTR [ebx+0x168937fc]
  407afe:	mov    dh,0x6a
  407b00:	fidivr DWORD PTR [edi-0x13]
  407b03:	in     eax,dx
  407b04:	and    al,0xc1
  407b06:	les    eax,FWORD PTR [edi+0x4c]
  407b09:	mov    esp,0x6bed2039
  407b0e:	nop
  407b0f:	jns    0x407b1b
  407b11:	xchg   ecx,eax
  407b12:	scas   eax,DWORD PTR es:[edi]
  407b13:	xchg   edi,eax
  407b14:	in     eax,0xa7
  407b16:	repz mov cl,0x88
  407b19:	dec    eax
  407b1a:	xor    bh,BYTE PTR [ecx-0x4]
  407b1d:	jmp    0x407b77
  407b1f:	xchg   al,ah
  407b21:	push   ds
  407b22:	aas    
  407b23:	pop    es
  407b24:	sti    
  407b25:	imul   ebx,DWORD PTR [ecx-0x28407488],0x54
  407b2c:	adc    eax,DWORD PTR [ebx-0x48e59249]
  407b32:	jns    0x407b4a
  407b34:	mov    bh,0x80
  407b36:	or     BYTE PTR [eax+edx*4],dl
  407b39:	loope  0x407b58
  407b3b:	nop
  407b3c:	dec    ecx
  407b3d:	xor    edi,ecx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x232e70e0
  407e5b:	push   edx
  407e5c:	pop    ecx
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	addr16 enter 0xdd03,0x6
  407e6a:	cmp    DWORD PTR fs:[eax+0x642e36a6],ebx
  407e71:	xchg   edi,eax
  407e72:	or     BYTE PTR [ebx],bh
  407e74:	aam    0xa0
  407e76:	xor    BYTE PTR [edi],bl
  407e78:	push   ebp
  407e79:	(bad)  
  407e7a:	rol    BYTE PTR [edx],1
  407e7c:	rol    DWORD PTR [ecx],0xf
  407e7f:	lods   eax,DWORD PTR ds:[esi]
  407e80:	and    esi,DWORD PTR [edi]
  407e82:	push   edx
  407e83:	dec    edx
  407e84:	in     al,0x2a
  407e86:	inc    ebp
  407e87:	mov    al,ds:0xf6baa6b7
  407e8c:	xor    eax,0x75125999
  407e91:	push   eax
  407e92:	mov    DWORD PTR [eax-0x65816cfd],esi
  407e98:	cmc    
  407e99:	push   ecx
  407e9a:	arpl   WORD PTR [edi],bx
  407e9c:	push   0xad0a9332
  407ea1:	imul   esp,edi,0xe8a56385
  407ea7:	or     al,BYTE PTR [edx+0x3a]
  407eaa:	mov    edi,0x3a8e8ea3
  407eaf:	jg     0x407e94
  407eb1:	arpl   WORD PTR [ebx+0x3],si
  407eb4:	nop
  407eb5:	arpl   WORD PTR [edx+ebx*8],ax
  407eb8:	inc    esi
  407eb9:	xor    BYTE PTR [edx],ch
  407ebb:	dec    di
  407ebd:	iret   
  407ebe:	retf   0x4859
  407ec1:	push   0x54
  407ec3:	sbb    eax,0xa8fa131d
  407ec8:	pop    ebx
  407ec9:	jne    0x407ec2
  407ecb:	mov    dh,0xdf
  407ecd:	push   edx
  407ece:	push   ebp
  407ecf:	retf   0x113e
  407ed2:	mul    ecx
  407ed4:	fidivr DWORD PTR [eax+0x5d]
  407ed7:	dec    DWORD PTR [edx-0x75]
  407eda:	dec    esi
  407edb:	push   0x87e4549a
  407ee0:	pop    ebp
  407ee1:	data16 sub bl,dl
  407ee4:	bound  ebp,QWORD PTR [ecx]
  407ee6:	push   edi
  407ee7:	inc    ebx
  407ee8:	xor    BYTE PTR [esp+edx*8-0xa],dl
  407eec:	mov    ecx,DWORD PTR [edi+0x7a]
  407eef:	or     ah,BYTE PTR [edi]
  407ef1:	lahf   
  407ef2:	scas   al,BYTE PTR es:[edi]
  407ef3:	xor    dl,BYTE PTR [ecx+ebx*4+0x4594c108]
  407efa:	mov    eax,ds:0xc3713581
  407eff:	sub    eax,0x651e5b3a
  407f04:	fild   DWORD PTR [eax-0x56ed6839]
  407f0a:	inc    esi
  407f0b:	in     al,dx
  407f0c:	clc    
  407f0d:	rol    DWORD PTR [esi],cl
  407f0f:	cmp    ebp,DWORD PTR [ebx+0x59abce05]
  407f15:	dec    ebp
  407f16:	dec    eax
  407f17:	or     BYTE PTR [esp+eiz*8],0x1d
  407f1b:	and    BYTE PTR [eax+eax*1+0x44219fc7],bh
  407f22:	cdq    
  407f23:	cdq    
  407f24:	mov    bh,0x55
  407f26:	xor    BYTE PTR [eax+edx*4],al
  407f29:	js     0x407f9c
  407f2b:	sbb    BYTE PTR [edi-0x5d430226],0xa0
  407f32:	and    al,bh
  407f34:	mov    cs,esp
  407f36:	jae    0x407f69
  407f38:	les    edx,FWORD PTR [ebx]
  407f3a:	xor    al,0x9c
  407f3c:	jnp    0x407ef6
  407f3e:	jb     0x407f21
  407f40:	sub    eax,esi
  407f42:	gs pop edx
  407f44:	add    bh,BYTE PTR [edi]
  407f46:	fdiv   st,st(3)
  407f48:	ficom  WORD PTR [ebx+0x131560c4]
  407f4e:	cmp    BYTE PTR [esi],0xaa
  407f51:	shl    BYTE PTR [edi+esi*4-0x41],cl
  407f55:	mov    cl,0xbe
  407f57:	out    dx,al
  407f58:	ret    0x9b6
  407f5b:	push   0x5f8a657c
  407f60:	xchg   esi,eax
  407f61:	adc    DWORD PTR [edi+0x76467d4f],0x3
  407f68:	outs   dx,BYTE PTR ds:[esi]
  407f69:	pop    ss
  407f6a:	push   0xe819c6dc
  407f6f:	sahf   
  407f70:	sub    DWORD PTR [esi-0x15],esp
  407f73:	xor    al,BYTE PTR [ebp-0xd8d4a2a]
  407f79:	cmp    ebx,edi
  407f7b:	test   eax,0x59c86df3
  407f80:	xor    BYTE PTR [ebp-0x7190b7eb],al
  407f86:	adc    eax,0xb382e54f
  407f8b:	fwait
  407f8c:	sub    ah,BYTE PTR [ebx]
  407f8e:	mov    ch,0x6a
  407f90:	ins    DWORD PTR es:[edi],dx
  407f91:	mov    bl,0xd0
  407f93:	(bad)  
  407f94:	outs   dx,BYTE PTR ds:[esi]
  407f95:	push   ss
  407f96:	jno    0x407f5f
  407f98:	dec    edx
  407f99:	sbb    al,0x94
  407f9b:	cs scas al,BYTE PTR es:[edi]
  407f9d:	cwde   
  407f9e:	pop    esp
  407f9f:	sbb    DWORD PTR [ebp+0x46],ecx
  407fa2:	mov    ds:0xcd951e82,eax
  407fa7:	xchg   ecx,eax
  407fa8:	out    0x62,eax
  407faa:	or     BYTE PTR [edi-0x6ceb8382],bh
  407fb0:	inc    eax
  407fb1:	and    DWORD PTR [ecx+0x54dc8cbc],ebp
  407fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fb8:	scas   eax,DWORD PTR es:[edi]
  407fb9:	stos   BYTE PTR es:[edi],al
  407fba:	in     eax,0xaf
  407fbc:	and    eax,0x707e6096
  407fc1:	fwait
  407fc2:	enter  0x67ce,0x87
  407fc6:	sbb    eax,0xf75cce9f
  407fcb:	leave  
  407fcc:	enter  0xd8da,0x3c
  407fd0:	shl    BYTE PTR [ecx],cl
  407fd2:	push   0x36
  407fd4:	fild   DWORD PTR [edi]
  407fd6:	repz add edx,DWORD PTR [eax-0x782a98bb]
  407fdd:	jmp    0x3bd0:0x8c790903
  407fe4:	cmp    ebx,ecx
  407fe6:	and    DWORD PTR [edx+0x4570da1],esp
  407fec:	adc    ah,BYTE PTR [edi]
  407fee:	ja     0x407f8f
  407ff0:	ins    DWORD PTR es:[edi],dx
  407ff1:	sub    edi,DWORD PTR [ebx]
  407ff3:	ficom  WORD PTR [bx+di+0x5e]
  407ff7:	xchg   edx,eax
  407ff8:	fsubr  QWORD PTR [ecx-0x32e9f575]
  407ffe:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408000:	std    
  408001:	(bad)  
  408002:	je     0x407fc5
  408004:	cmc    
  408005:	pop    eax
  408006:	mov    edx,0x5471ca49
  40800b:	test   dl,dh
  40800d:	test   eax,0x2a853ed4
  408012:	loopne 0x40804e
  408014:	hlt    
  408015:	dec    esi
  408016:	das    
  408017:	pop    edi
  408018:	sub    al,0x2c
  40801a:	add    al,0xeb
  40801c:	fsub   DWORD PTR [ecx+ecx*8+0x2cab4e3e]
  408023:	push   esi
  408024:	fisubr WORD PTR [ecx]
  408026:	mov    esi,0xba7558cb
  40802b:	aaa    
  40802c:	mov    ebp,0x23188b70
  408031:	mov    bl,0xf9
  408033:	int3   
  408034:	pop    edx
  408035:	jp     0x407fe3
  408037:	outs   dx,BYTE PTR ds:[esi]
  408038:	outs   dx,BYTE PTR ds:[esi]
  408039:	sub    al,BYTE PTR [ebp+0x2dde3b1a]
  40803f:	xor    al,0x45
  408041:	ja     0x40800f
  408043:	sbb    ecx,eax
  408045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408046:	daa    
  408047:	push   es
  408048:	inc    edi
  408049:	cs inc ebp
  40804b:	hlt    
  40804c:	cmp    BYTE PTR [eax+eiz*2+0x2c0dc914],0xc2
  408054:	and    al,0xca
  408056:	add    al,BYTE PTR [edi+0x1d]
  408059:	adc    eax,0xf0b750b7
  40805e:	xor    ebp,DWORD PTR [esi+0x6c]
  408061:	dec    ebx
  408062:	adc    edx,ebx
  408064:	scas   al,BYTE PTR es:[edi]
  408065:	sub    ebx,DWORD PTR [ebx+0x4e]
  408068:	xchg   ecx,eax
  408069:	xor    DWORD PTR [ebp+0x6825e857],edx
  40806f:	call   0xd374:0x1e71bb5
  408076:	jmp    0x274c0e86
  40807b:	xchg   esp,eax
  40807c:	push   0xd9f63292
  408081:	jbe    0x40802b
  408083:	loop   0x408070
  408085:	inc    ecx
  408086:	jo     0x408069
  408088:	in     eax,0x6b
  40808a:	push   es
  40808b:	out    dx,al
  40808c:	push   0x3fcdc3e0
  408091:	gs jb  0x40803a
  408094:	aam    0x76
  408096:	mov    esp,0x35933b71
  40809b:	rol    DWORD PTR [eax-0x50],cl
  40809e:	push   ebp
  40809f:	aad    0xba
  4080a1:	and    ch,al
  4080a3:	adc    BYTE PTR ds:0x6c9666c1,dh
  4080a9:	jmp    0xdac79c40
  4080ae:	push   ebx
  4080af:	outs   dx,BYTE PTR ds:[esi]
  4080b0:	jmp    0x4080c7
  4080b2:	stos   BYTE PTR es:[edi],al
  4080b3:	mov    eax,ds:0x423cb082
  4080b8:	push   ebx
  4080b9:	mov    ebx,edx
  4080bb:	xchg   edx,eax
  4080bc:	push   ebx
  4080bd:	out    0x55,al
  4080bf:	adc    ecx,esi
  4080c1:	push   ebx
  4080c2:	(bad)  
  4080c3:	out    dx,al
  4080c4:	fwait
  4080c5:	ins    BYTE PTR es:[edi],dx
  4080c6:	popf   
  4080c7:	lods   eax,DWORD PTR ds:[esi]
  4080c8:	ss sbb al,0x56
  4080cb:	pop    esi
  4080cc:	xchg   esp,eax
  4080cd:	test   ah,dh
  4080cf:	pop    ecx
  4080d0:	push   edx
  4080d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d2:	scas   al,BYTE PTR es:[edi]
  4080d3:	int    0x11
  4080d5:	pop    esp
  4080d6:	sub    DWORD PTR [ebp-0x38],0x401679b8
  4080dd:	test   eax,0x1c1f6b00
  4080e2:	aaa    
  4080e3:	dec    ebp
  4080e4:	fcom   DWORD PTR [ecx+0x38]
  4080e7:	pop    edx
  4080e8:	into   
  4080e9:	push   0xfffffffe
  4080eb:	adc    al,0x2b
  4080ed:	pusha  
  4080ee:	mov    eax,0x8ed4b9be
  4080f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f4:	in     eax,0x38
  4080f6:	mov    ds:0xed703dd1,eax
  4080fb:	xchg   BYTE PTR [ebp+0x16700424],ch
  408101:	and    BYTE PTR [ecx-0x614e95c],ah
  408107:	in     eax,0xbf
  408109:	cwde   
  40810a:	xlat   BYTE PTR ds:[ebx]
  40810b:	cld    
  40810c:	data16 aas 
  40810e:	jle    0x40814a
  408110:	or     al,0xb8
  408112:	arpl   WORD PTR [edx],sp
  408114:	add    BYTE PTR [edi+0x1cd91bac],dh
  40811a:	test   BYTE PTR [esi],dl
  40811c:	stos   BYTE PTR es:[edi],al
  40811d:	cdq    
  40811e:	icebp  
  40811f:	daa    
  408120:	mov    ebp,0xe98046cc
  408125:	jno    0x408156
  408127:	(bad)  [edi]
  408129:	stc    
  40812a:	fsqrt  
  40812c:	fidiv  WORD PTR [edx]
  40812e:	xlat   BYTE PTR ds:[ebx]
  40812f:	shl    DWORD PTR [edx-0x58],0x8f
  408133:	hlt    
  408134:	fadd   QWORD PTR [edx]
  408136:	lock ret 
  408138:	sub    bh,BYTE PTR [ebx-0x7937825b]
  40813e:	mov    ds:0xe8f8f73d,al
  408143:	fisttp DWORD PTR es:[esi+0x61]
  408147:	dec    edi
  408148:	lods   eax,DWORD PTR ds:[esi]
  408149:	or     ch,BYTE PTR [ebp+ebx*4-0x22db32ce]
  408150:	sub    DWORD PTR [esi],edi
  408152:	pop    eax
  408153:	pop    esi
  408154:	xlat   BYTE PTR ds:[ebx]
  408155:	imul   esi,esp,0xdaa3a0f
  40815b:	pop    edi
  40815c:	std    
  40815d:	ins    WORD PTR es:[edi],dx
  40815f:	(bad)  
  408161:	stos   BYTE PTR es:[edi],al
  408162:	shr    dl,0xb1
  408165:	jg     0x4081a2
  408167:	mov    ebp,0x7065db6e
  40816c:	mov    al,0x1a
  40816e:	ret    0xba4
  408171:	out    0xb1,al
  408173:	test   ecx,ecx
  408175:	ja     0x40819f
  408177:	mov    bh,0x3
  408179:	inc    ebp
  40817a:	test   dl,0x8e
  40817d:	mov    dl,BYTE PTR [ecx-0x5b]
  408180:	mov    ebp,0xbe3f0651
  408185:	test   al,0x56
  408187:	dec    ecx
  408188:	pop    es
  408189:	sub    eax,0x34a11e58
  40818e:	lea    esi,[ebx]
  408190:	in     eax,0x8
  408192:	push   ecx
  408193:	push   edi
  408194:	ja     0x40812f
  408196:	lods   eax,DWORD PTR ds:[esi]
  408197:	mov    ecx,0x9a5864e3
  40819c:	ret    
  40819d:	rcr    DWORD PTR [ecx-0x2e47231e],1
  4081a3:	cmp    BYTE PTR [edx],ah
  4081a5:	sub    cl,dl
  4081a7:	sar    DWORD PTR [ecx+0x19],0x7f
  4081ab:	fidivr WORD PTR ds:0x6cd2afa1
  4081b1:	mov    bh,0xcc
  4081b3:	inc    esi
  4081b4:	sbb    ch,BYTE PTR [edx]
  4081b6:	inc    ebp
  4081b7:	fld    TBYTE PTR [esi-0x56a648b7]
  4081bd:	jnp    0x40821e
  4081bf:	mov    cl,0x6
  4081c1:	or     eax,0x4f
  4081c4:	in     eax,0x63
  4081c6:	ret    0xa560
  4081c9:	jbe    0x408156
  4081cb:	adc    al,0x9d
  4081cd:	mov    esi,eax
  4081cf:	lahf   
  4081d0:	cmp    BYTE PTR [edi-0x4d],0x3e
  4081d4:	pop    ds
  4081d5:	adc    dl,BYTE PTR [ecx+ebx*1-0x19]
  4081d9:	or     BYTE PTR [ebp-0x44aa0eaa],cl
  4081df:	std    
  4081e0:	clc    
  4081e1:	cwde   
  4081e2:	fbld   TBYTE PTR [eax-0x635eb559]
  4081e8:	pop    edx
  4081e9:	ror    DWORD PTR ds:0x2f92c220,1
  4081ef:	fwait
  4081f0:	xor    DWORD PTR [edx+0x68],0x45167c8b
  4081f7:	mov    ah,0x9a
  4081f9:	out    0x21,al
  4081fb:	xchg   ecx,eax
  4081fc:	call   0x88eaa064
  408201:	sbb    ah,dh
  408203:	pushf  
  408204:	cmp    DWORD PTR [edi+0x54],ebp
  408207:	xchg   DWORD PTR [ebx+ecx*1],esi
  40820a:	loope  0x4081e5
  40820c:	jecxz  0x4081b3
  40820e:	(bad)  
  40820f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408210:	dec    esi
  408211:	push   edi
  408212:	fld    TBYTE PTR ds:0x1c66499
  408218:	retf   0x7943
  40821b:	mov    dh,0x5e
  40821d:	jle    0x408296
  40821f:	pop    esi
  408220:	dec    ecx
  408221:	pop    esi
  408222:	hlt    
  408223:	xor    al,0x3f
  408225:	jne    0x4081be
  408227:	inc    edx
  408228:	test   bl,cl
  40822a:	push   0x39
  40822c:	cmp    ecx,DWORD PTR [ecx]
  40822e:	rcr    BYTE PTR [ecx-0x55a2af8],1
  408234:	xchg   ecx,eax
  408235:	repz sbb BYTE PTR [eax],bl
  408238:	sub    DWORD PTR [edx+eax*2-0x65831351],0xffffff9d
  408240:	mov    edx,0xa3348fe9
  408245:	mov    bh,0x48
  408247:	out    dx,eax
  408248:	cmp    edi,DWORD PTR ds:0xa8e4f2fa
  40824e:	xor    ecx,esp
  408250:	jb     0x408215
  408252:	(bad)  
  408253:	xor    eax,0x16ef44ee
  408258:	inc    edx
  408259:	pushf  
  40825a:	repz add eax,0x70959eb1
  408260:	and    BYTE PTR ds:0xb41fbf94,al
  408266:	jno    0x40822a
  408268:	cmp    ch,BYTE PTR [edx*2-0x2b927ea7]
  40826f:	xchg   edx,eax
  408270:	or     DWORD PTR [edi],ebp
  408272:	mov    ch,0xb5
  408274:	and    BYTE PTR ss:[ecx],al
  408277:	(bad)  
  408279:	sub    BYTE PTR [esi-0x7ef3c637],bl
  40827f:	outs   dx,DWORD PTR ds:[esi]
  408280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408281:	hlt    
  408282:	cwde   
  408283:	add    BYTE PTR cs:[eax-0x76],bh
  408287:	mov    ebp,0x3dc00ad
  40828c:	adc    DWORD PTR [ecx+0x46d29450],esp
  408292:	sub    esp,DWORD PTR [esi+0x1ab8cceb]
  408298:	adc    ecx,DWORD PTR [esi+0x44e82c48]
  40829e:	mov    ch,0x85
  4082a0:	imul   ebp,DWORD PTR [eax],0xbd884a5
  4082a6:	sbb    DWORD PTR [edi+0xc7b7ed0],esi
  4082ac:	inc    ecx
  4082ad:	push   eax
  4082ae:	mov    cl,0xe4
  4082b0:	jmp    0x408259
  4082b2:	inc    ebx
  4082b3:	aad    0xcb
  4082b5:	xchg   ebp,eax
  4082b6:	int    0x13
  4082b8:	std    
  4082b9:	sbb    bh,BYTE PTR [edi-0x36]
  4082bc:	sub    eax,0x5c043dd1
  4082c1:	pop    es
  4082c2:	xchg   esi,eax
  4082c3:	test   edi,0x11c89fe7
  4082c9:	adc    eax,0xbcbb7e90
  4082ce:	or     BYTE PTR [eax],dl
  4082d0:	or     esp,DWORD PTR [ebx+0x598cbf95]
  4082d6:	mov    edx,0xc99d70f1
  4082db:	dec    ebp
  4082dc:	lahf   
  4082dd:	mov    esi,DWORD PTR [eax-0x721e6582]
  4082e3:	pop    ebx
  4082e4:	sbb    edi,DWORD PTR [eax+0x5c]
  4082e7:	mul    DWORD PTR [eax+0x41629126]
  4082ed:	xor    cl,al
  4082ef:	lahf   
  4082f0:	scas   eax,DWORD PTR es:[edi]
  4082f1:	mov    WORD PTR [esi+edx*4],gs
  4082f4:	ja     0x40833f
  4082f6:	mov    ecx,0x9a8e3fc3
  4082fb:	jle    0x408312
  4082fd:	addr16 test al,0xb1
  408300:	pop    esp
  408301:	cmp    DWORD PTR [eax],ecx
  408303:	jecxz  0x408373
  408305:	inc    ecx
  408306:	test   cl,dl
  408308:	xchg   DWORD PTR [ebx+ebx*8-0xd18dfc0],esi
  40830f:	outs   dx,DWORD PTR ds:[esi]
  408310:	rcl    DWORD PTR [ebx+0x72e4061f],0x45
  408317:	or     al,0xfb
  408319:	sahf   
  40831a:	add    cl,BYTE PTR [eax-0xb]
  40831d:	out    dx,al
  40831e:	mov    al,ds:0xf00173fe
  408323:	xchg   ebp,eax
  408324:	gs add eax,0x3b8321dd
  40832a:	in     eax,dx
  40832b:	mov    ebx,0xd743b391
  408330:	sahf   
  408331:	sar    BYTE PTR [esi+edx*8+0x56],cl
  408335:	scas   eax,DWORD PTR es:[edi]
  408336:	test   BYTE PTR [eax+eax*1],al
  408339:	push   ebx
  40833a:	xchg   esp,eax
  40833b:	sub    dh,BYTE PTR [edi+0x16]
  40833e:	cld    
  40833f:	call   DWORD PTR [eax]
  408341:	ins    DWORD PTR es:[edi],dx
  408342:	jae    0x408341
  408344:	je     0x4082d8
  408346:	pop    esp
  408347:	inc    ecx
  408348:	mov    ?,WORD PTR [ecx]
  40834a:	(bad)  
  40834c:	in     eax,0xc
  40834e:	and    BYTE PTR [edi-0x68],cl
  408351:	cmp    BYTE PTR [eax-0x6c],dh
  408354:	or     eax,DWORD PTR [ecx]
  408356:	arpl   WORD PTR [edx],dx
  408358:	cmc    
  408359:	push   eax
  40835a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40835b:	in     al,dx
  40835c:	cmp    ch,BYTE PTR [ebx-0x5b]
  40835f:	outs   dx,DWORD PTR ds:[esi]
  408360:	mov    ds:0xe82c29ad,al
  408365:	aad    0x88
  408367:	sbb    DWORD PTR [esi],0x65805796
  40836d:	lahf   
  40836e:	add    al,0xd5
  408370:	push   ebx
  408371:	mov    bh,0x95
  408373:	(bad)  
  408374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408375:	add    cl,ch
  408377:	jg     0x408319
  408379:	sbb    eax,0xe39e2e4
  40837e:	sub    DWORD PTR [ecx],edi
  408380:	adc    DWORD PTR [eax-0x4dd89eef],ebp
  408386:	addr16 pop es
  408388:	gs dec esi
  40838a:	scas   eax,DWORD PTR es:[edi]
  40838b:	mov    ecx,0xe28d76b5
  408390:	jmp    0x4083cd
  408392:	ins    DWORD PTR es:[edi],dx
  408393:	jle    0x408385
  408395:	in     al,0xfe
  408397:	jb     0x4083c2
  408399:	mov    dh,cl
  40839b:	adc    eax,0x7ed23ada
  4083a0:	adc    ah,BYTE PTR [edi]
  4083a2:	sbb    ebx,DWORD PTR [eax]
  4083a4:	gs sahf 
  4083a6:	sbb    BYTE PTR [esi+ecx*1],al
  4083a9:	jmp    DWORD PTR ds:0xc052c9f1
  4083af:	sub    bh,bl
  4083b1:	mov    eax,0x2218b39e
  4083b6:	cmp    al,bh
  4083b8:	ins    BYTE PTR es:[edi],dx
  4083b9:	ins    DWORD PTR es:[edi],dx
  4083ba:	xchg   DWORD PTR [esi+ebx*4+0x2e3793fb],ecx
  4083c1:	mov    eax,0x10f8e8dc
  4083c6:	sub    BYTE PTR [ebp-0x427a1c14],dh
  4083cc:	sar    ch,0x52
  4083cf:	or     al,0x7c
  4083d1:	in     al,0xaf
  4083d3:	clc    
  4083d4:	add    ecx,DWORD PTR [edx+0x5ee055d3]
  4083da:	sahf   
  4083db:	bound  ebx,QWORD PTR [edx]
  4083dd:	out    dx,eax
  4083de:	inc    edi
  4083df:	or     edx,DWORD PTR [edi+eax*2-0x3e6b604]
  4083e6:	je     0x4083c8
  4083e8:	test   al,0xdf
  4083ea:	lahf   
  4083eb:	adc    BYTE PTR ds:[edi-0x29],cl
  4083ef:	pop    esi
  4083f0:	xor    eax,ebp
  4083f2:	lds    edi,FWORD PTR [eax]
  4083f4:	mov    BYTE PTR [edi],bh
  4083f6:	es push edi
  4083f8:	mov    eax,gs
  4083fa:	das    
  4083fb:	stos   DWORD PTR es:[edi],eax
  4083fc:	shr    DWORD PTR es:[edx-0x2b],0xa0
  408401:	cmp    DWORD PTR [eax],eax
  408403:	jmp    0x43bf:0x8155b307
  40840a:	ret    0xfd56
  40840d:	pop    es
  40840e:	clc    
  40840f:	inc    eax
  408410:	call   0x3347:0x28c341fc
  408417:	or     eax,0x34dccfdb
  40841c:	fldcw  WORD PTR [ecx]
  40841e:	outs   dx,BYTE PTR ds:[esi]
  40841f:	ror    BYTE PTR [ebp+0x2a7c39af],1
  408425:	rcl    DWORD PTR [ebp+ebx*2+0x1f],0x9d
  40842a:	stc    
  40842b:	fstp   DWORD PTR [eax+ecx*2+0x7f]
  40842f:	pop    ebx
  408430:	push   ebp
  408431:	or     BYTE PTR [esi],ah
  408433:	fstp   DWORD PTR [edx]
  408435:	mov    dl,0x6d
  408437:	(bad)  
  408438:	stc    
  408439:	mov    es,edx
  40843b:	jle    0x408450
  40843d:	dec    ebx
  40843e:	mov    esp,0x55397f89
  408443:	mov    WORD PTR [ebx+0x4b406311],?
  408449:	in     al,dx
  40844a:	(bad)  
  40844b:	fst    QWORD PTR [edi+0x4155ca79]
  408451:	jmp    0x40847c
  408453:	std    
  408454:	jge    0x4083fe
  408456:	xchg   edx,eax
  408457:	adc    DWORD PTR [eax-0x1f],esi
  40845a:	jb     0x40845f
  40845c:	not    BYTE PTR [edi+0x20]
  40845f:	cmp    esp,ecx
  408461:	xchg   edx,eax
  408462:	shr    ch,1
  408464:	icebp  
  408465:	dec    ecx
  408466:	push   eax
  408467:	stos   BYTE PTR es:[edi],al
  408468:	loopne 0x4084c7
  40846a:	in     al,0x88
  40846c:	icebp  
  40846d:	inc    esi
  40846e:	lock xor al,0x60
  408471:	pop    ebp
  408472:	push   0x54
  408474:	je     0x40841e
  408476:	ss push edi
  408478:	rol    edx,cl
  40847a:	mov    ebx,0xa988f2ed
  40847f:	xor    eax,0x50fc63ac
  408484:	xor    al,0xa8
  408486:	loope  0x40844b
  408488:	test   BYTE PTR [ebp-0x45],dl
  40848b:	fisttp DWORD PTR [ebx+0x4d897ca0]
  408491:	aaa    
  408492:	jnp    0x40850d
  408494:	in     eax,dx
  408495:	mov    WORD PTR [esi-0x5c],fs
  408498:	adc    bh,ah
  40849a:	pop    esp
  40849b:	cmp    al,0xd0
  40849d:	arpl   bx,sp
  40849f:	add    eax,0xfb68b52e
  4084a4:	stc    
  4084a5:	jb     0x408505
  4084a7:	mov    BYTE PTR [ebp-0x7a],bl
  4084aa:	clc    
  4084ab:	into   
  4084ac:	pop    es
  4084ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ae:	lea    edx,[ecx]
  4084b0:	push   edi
  4084b1:	sar    DWORD PTR [ecx],0xb4
  4084b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b5:	jmp    0x40847e
  4084b7:	push   DWORD PTR [eax]
  4084b9:	mov    DWORD PTR [ebx+ebp*1],ecx
  4084bc:	mov    al,ds:0xc6b90dfd
  4084c1:	das    
  4084c2:	fimul  DWORD PTR [ecx+0x78]
  4084c5:	add    BYTE PTR [edx+0x26bc7ebc],bh
  4084cb:	sub    dl,BYTE PTR [ecx+0x6e]
  4084ce:	mov    esi,0x7257e19e
  4084d3:	es into 
  4084d5:	xchg   esp,eax
  4084d6:	push   ebx
  4084d7:	dec    edi
  4084d8:	pop    es
  4084d9:	bound  ecx,QWORD PTR [edx-0x5a]
  4084dc:	out    0x52,al
  4084de:	sbb    BYTE PTR [ebx-0x41],0x71
  4084e2:	test   BYTE PTR [ecx],0x6e
  4084e5:	pop    esi
  4084e6:	xor    al,0x44
  4084e8:	xchg   ecx,eax
  4084e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ea:	cmp    edi,esi
  4084ec:	pop    edi
  4084ed:	(bad)  
  4084ee:	or     DWORD PTR [edi],0x4a
  4084f1:	inc    ebp
  4084f2:	mov    DWORD PTR [eax+ecx*2+0xf],ebx
  4084f6:	dec    ebp
  4084f7:	loope  0x408507
  4084f9:	(bad)  
  4084fb:	in     al,0x2d
  4084fd:	push   ebx
  4084fe:	stos   BYTE PTR es:[edi],al
  4084ff:	nop
  408500:	fdivr  QWORD PTR ds:[ebx-0x1c64657b]
  408507:	int    0x80
  408509:	push   edx
  40850a:	push   esp
  40850b:	inc    edi
  40850c:	fwait
  40850d:	in     eax,0x24
  40850f:	push   es
  408510:	add    cl,BYTE PTR [ecx]
  408512:	pusha  
  408513:	jno    0x40858b
  408515:	(bad)  
  408516:	cld    
  408517:	imul   ebx,DWORD PTR [ebx],0x1b
  40851a:	sbb    DWORD PTR [edi-0x58],esp
  40851d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40851e:	add    esi,DWORD PTR [eax-0x3c4742ff]
  408524:	mov    DWORD PTR [ebx+ebx*4-0x49412b8a],edi
  40852b:	mov    ds:0xe6ba588e,al
  408530:	xor    dl,cl
  408532:	push   ds
  408533:	fisttp WORD PTR [ecx+0x4b8c5f79]
  408539:	xlat   BYTE PTR ds:[ebx]
  40853a:	push   esi
  40853b:	jle    0x408545
  40853d:	dec    ebx
  40853e:	sub    DWORD PTR [ecx+ebx*1+0x28b103e5],esp
  408545:	adc    edi,esi
  408547:	arpl   WORD PTR [esi],sp
  408549:	push   ecx
  40854a:	mov    bh,0x7e
  40854d:	test   al,ah
  40854f:	(bad)  
  408550:	dec    esp
  408551:	inc    ebx
  408552:	push   esi
  408553:	out    0xf6,al
  408555:	xor    eax,0x9ab0b239
  40855a:	pop    ecx
  40855b:	fsubr  st(7),st
  40855d:	add    eax,0x8275abb4
  408562:	jecxz  0x408592
  408564:	sbb    ecx,DWORD PTR [edx+edi*1-0x1167edec]
  40856b:	add    eax,DWORD PTR [ebx]
  40856d:	push   eax
  40856e:	push   ecx
  40856f:	mov    bl,0xfe
  408571:	push   esp
  408572:	jns    0x4085a8
  408574:	sti    
  408575:	(bad)  
  408576:	popa   
  408577:	std    
  408578:	and    eax,0xd389e9a0
  40857d:	mov    DWORD PTR [eax+0x585c7f7e],0xe8966695
  408587:	mov    BYTE PTR [ecx+0x18],ah
  40858a:	sub    BYTE PTR [eax],bl
  40858c:	test   BYTE PTR [eax-0x3a],ah
  40858f:	cmp    al,0x64
  408591:	adc    DWORD PTR ds:0xf183bb29,ebp
  408597:	in     al,dx
  408598:	mov    ebx,DWORD PTR [esi]
  40859a:	mov    ebx,0x324d5090
  40859f:	call   0xd7b95ab0
  4085a4:	ror    BYTE PTR [edi+0x68],0xf4
  4085a8:	ja     0x408601
  4085aa:	and    edx,DWORD PTR [ebx+0x5673d46b]
  4085b0:	adc    BYTE PTR [edx+0x2],0x9
  4085b4:	nop
  4085b5:	outs   dx,BYTE PTR ds:[esi]
  4085b6:	test   DWORD PTR ds:[edi],eax
  4085b9:	mov    eax,ds:0x5832acfe
  4085be:	fwait
  4085bf:	aaa    
  4085c0:	and    ebp,ebp
  4085c2:	test   BYTE PTR [si],0x2d
  4085c6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085c8:	(bad)  
  4085c9:	(bad)  
  4085ca:	ins    DWORD PTR es:[edi],dx
  4085cb:	mov    bl,bh
  4085cd:	inc    eax
  4085ce:	cli    
  4085cf:	(bad)  
  4085d0:	mov    eax,0x36e8e3a1
  4085d5:	scas   al,BYTE PTR es:[edi]
  4085d6:	pop    esp
  4085d7:	es add al,0xac
  4085da:	xchg   edx,eax
  4085db:	add    ebp,DWORD PTR [ecx-0x55]
  4085de:	inc    ebp
  4085df:	hlt    
  4085e0:	test   eax,0x61690ee6
  4085e5:	and    eax,0x3c86920d
  4085ea:	fimul  WORD PTR [edx]
  4085ec:	shl    al,cl
  4085ee:	add    DWORD PTR [esi],esp
  4085f0:	pop    ds
  4085f1:	icebp  
  4085f2:	int    0x57
  4085f4:	loop   0x408669
  4085f6:	jo     0x4085ec
  4085f8:	inc    edx
  4085f9:	es jo  0x4085f4
  4085fc:	mov    ebx,es
  4085fe:	mov    al,0x8c
  408600:	int    0xb4
  408602:	mov    dl,0xf5
  408604:	es aad 0x8a
  408607:	sbb    al,0x33
  408609:	adc    ecx,DWORD PTR [ebx]
  40860b:	xchg   ebx,eax
  40860c:	(bad)  
  40860d:	outs   dx,DWORD PTR ds:[esi]
  40860e:	inc    edi
  40860f:	pop    ebx
  408610:	clc    
  408611:	xlat   BYTE PTR ds:[ebx]
  408612:	ins    BYTE PTR es:[edi],dx
  408613:	in     al,0xff
  408615:	pop    esi
  408616:	pop    ebx
  408617:	cmp    eax,0x81649cda
  40861c:	push   esp
  40861d:	das    
  40861e:	(bad)  
  40861f:	mov    ebp,0x3c1a3296
  408624:	pop    ebp
  408625:	sti    
  408626:	in     al,dx
  408627:	xor    al,BYTE PTR [eax+esi*8-0x6a]
  40862b:	ss (bad) 
  40862d:	data16 fst DWORD PTR [ecx-0x1]
  408631:	push   ebx
  408632:	dec    edi
  408633:	cwde   
  408634:	jbe    0x408627
  408636:	loop   0x40861b
  408638:	cs push 0x1c967a51
  40863e:	pop    ecx
  40863f:	cdq    
  408640:	das    
  408641:	pushf  
  408642:	addr16 loope 0x408698
  408645:	dec    ebx
  408646:	cmp    DWORD PTR [edi+0x3a],esp
  408649:	fbstp  TBYTE PTR [esi-0x25]
  40864c:	dec    esi
  40864d:	mov    esp,0xaddd1bc1
  408652:	pop    eax
  408653:	lea    ebx,ds:0xac6268e6
  408659:	bswap  ebp
  40865b:	pop    esp
  40865c:	aad    0x95
  40865e:	cmp    al,0xe0
  408660:	or     esi,edx
  408662:	lahf   
  408663:	std    
  408664:	fwait
  408665:	and    bh,BYTE PTR [esi+ebp*1]
  408668:	jne    0x4086c4
  40866a:	aad    0x4d
  40866c:	xchg   edx,eax
  40866d:	repz sahf 
  40866f:	mov    ds:0x5d9f8cd6,eax
  408674:	imul   esi,DWORD PTR [esi-0x30],0x400f277d
  40867b:	cld    
  40867c:	addr16 jno 0x4086c5
  40867f:	mov    ds:0xb936215,al
  408684:	fadd   QWORD PTR [eax]
  408686:	inc    eax
  408687:	(bad)  
  408689:	mov    ds:0x1ba1cadb,eax
  40868e:	cld    
  40868f:	sar    BYTE PTR [edi],0xcd
  408692:	arpl   WORD PTR [esi+eiz*4+0x42],bp
  408696:	mov    cl,0x36
  408698:	xor    eax,edx
  40869a:	push   ds
  40869b:	(bad)  
  40869c:	jmp    0x40866f
  40869e:	jo     0x4086ef
  4086a0:	nop
  4086a1:	add    cl,ah
  4086a3:	jp     0x4086f5
  4086a5:	dec    esp
  4086a6:	jb     0x408685
  4086a8:	std    
  4086a9:	xchg   esi,eax
  4086aa:	xchg   esp,eax
  4086ab:	icebp  
  4086ac:	dec    ebp
  4086ad:	pop    esi
  4086ae:	adc    al,0x93
  4086b0:	in     eax,0xfb
  4086b2:	dec    ebx
  4086b3:	jno    0x4086d1
  4086b5:	daa    
  4086b6:	fst    QWORD PTR [ecx+0x3f]
  4086b9:	mov    edi,0x883ff6a5
  4086be:	mov    bh,0xf8
  4086c0:	arpl   WORD PTR [edx],si
  4086c2:	(bad)  
  4086c4:	aaa    
  4086c5:	fsub   st,st(2)
  4086c7:	sub    eax,0x673193ad
  4086cc:	pop    eax
  4086cd:	(bad)  
  4086cf:	mov    bl,0x37
  4086d1:	jb     0x4086cb
  4086d3:	mov    al,ds:0xf42d08a4
  4086d8:	or     eax,0x26a41e0e
  4086dd:	xor    esp,edi
  4086df:	or     al,0xe3
  4086e1:	call   0x9dcc:0x5fa3d73c
  4086e8:	inc    eax
  4086e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ea:	mov    cl,0x10
  4086ec:	loope  0x408689
  4086ee:	or     DWORD PTR [eax+0x60f6cb96],eax
  4086f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f5:	inc    edi
  4086f6:	mov    al,0xa1
  4086f8:	hlt    
  4086f9:	ficom  DWORD PTR [ebx]
  4086fb:	out    0x87,eax
  4086fd:	lea    eax,[esi+eax*8+0x53d4eea0]
  408704:	sbb    edi,DWORD PTR [ecx-0x3a089846]
  40870a:	imul   esi,ecx,0x1bddd010
  408710:	push   edx
  408711:	adc    al,0x1c
  408713:	hlt    
  408714:	and    DWORD PTR [ecx+0x37f00846],esi
  40871a:	add    al,0xf
  40871c:	rcr    BYTE PTR [eax+0x37ab649b],1
  408722:	and    eax,0xb87dec1
  408727:	mov    edx,0x62283be5
  40872c:	adc    DWORD PTR [edx],esi
  40872e:	mov    dh,0x64
  408730:	sbb    al,0xb4
  408732:	inc    edx
  408733:	inc    edi
  408734:	cmp    eax,0x8581663f
  408739:	test   DWORD PTR [ecx+ebx*4+0x2b],ebp
  40873d:	mov    WORD PTR [edx+0x4],gs
  408740:	add    eax,0x539859e8
  408745:	lea    edx,ds:0x2896b710
  40874b:	iret   
  40874c:	dec    eax
  40874d:	xor    DWORD PTR [edx-0x4ed28da0],eax
  408753:	xchg   ebx,eax
  408754:	and    DWORD PTR [eax],esp
  408756:	pop    edi
  408757:	(bad)  
  408759:	out    dx,eax
  40875a:	int    0xcc
  40875c:	inc    ebp
  40875d:	hlt    
  40875e:	gs notrack call DWORD PTR [ecx+0x5c53c951]
  408766:	nop
  408767:	push   eax
  408768:	jb     0x408730
  40876a:	(bad)  
  40876b:	arpl   WORD PTR [esi],si
  40876d:	les    edi,FWORD PTR [edx]
  40876f:	(bad)  
  408770:	scas   al,BYTE PTR es:[edi]
  408771:	data16 or cl,0x12
  408775:	or     DWORD PTR [ecx],eax
  408777:	call   0xad905d8d
  40877c:	in     al,dx
  40877d:	in     eax,0xa5
  40877f:	jnp    0x408734
  408781:	sub    DWORD PTR [ecx+0x2e],esi
  408784:	retf   
  408785:	push   0x9cc6ebd9
  40878a:	mov    eax,ds:0x55db763e
  40878f:	out    0x12,eax
  408791:	test   eax,0x5459b8b7
  408796:	cmp    DWORD PTR [ebx-0x6eb0589d],0x4a
  40879d:	mov    ah,0xd7
  40879f:	mov    cl,0x9a
  4087a1:	pop    ss
  4087a2:	pop    ecx
  4087a3:	adc    eax,DWORD PTR [ebx-0x70d0e91b]
  4087a9:	dec    ebx
  4087aa:	cld    
  4087ab:	lds    eax,FWORD PTR [edx]
  4087ad:	pushf  
  4087ae:	aas    
  4087af:	add    DWORD PTR [ebx-0xd5cc762],edi
  4087b5:	xchg   DWORD PTR [ebp+0xcf8fa6e],esi
  4087bb:	push   es
  4087bc:	(bad)  [eax+0x3385d9b]
  4087c2:	retf   0xc942
  4087c5:	add    BYTE PTR [ecx],cl
  4087c7:	idiv   BYTE PTR [ecx-0x66]
  4087ca:	xor    dl,ch
  4087cc:	addr16 out dx,eax
  4087ce:	clc    
  4087cf:	and    eax,0x49a5d89e
  4087d4:	popf   
  4087d5:	pushf  
  4087d6:	adc    BYTE PTR [ebx+0x565ccce],bl
  4087dc:	div    ebp
  4087de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087df:	ret    0x1450
  4087e2:	or     edi,edi
  4087e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087e5:	pop    edx
  4087e6:	(bad)
  4087ea:	or     eax,0x9d641226
  4087ef:	xchg   edi,eax
  4087f0:	inc    esp
  4087f1:	cmp    eax,DWORD PTR [edi+0x3ea15af6]
  4087f7:	test   eax,0x6d9e0e2e
  4087fc:	pop    ecx
  4087fd:	dec    ecx
  4087fe:	push   ebx
  4087ff:	and    al,0xfd
  408801:	pusha  
  408802:	xor    dh,al
  408804:	rcr    BYTE PTR [ebp+0x55],cl
  408807:	shl    DWORD PTR [edx+0x1e],0x44
  40880b:	mov    ds:0xbfc6ced,eax
  408810:	or     bh,BYTE PTR [edi]
  408812:	sub    eax,0x643dd5e3
  408817:	pop    ds
  408818:	pop    edi
  408819:	sbb    dl,ah
  40881b:	push   esp
  40881c:	xchg   esi,eax
  40881d:	xor    BYTE PTR [ecx-0x4f],dh
  408820:	ins    BYTE PTR es:[edi],dx
  408821:	into   
  408822:	add    eax,0x340fb593
  408827:	sub    al,0x8
  408829:	push   ecx
  40882a:	out    dx,eax
  40882b:	div    bh
  40882d:	dec    esi
  40882e:	lds    edi,FWORD PTR [esp+eiz*4]
  408831:	xchg   edi,eax
  408832:	ret    0x59aa
  408835:	sbb    eax,0xa7c56929
  40883a:	inc    ecx
  40883b:	call   0x88b846c0
  408840:	mov    BYTE PTR [esi],cl
  408842:	sbb    ah,0x61
  408845:	imul   esp,DWORD PTR [edx+0x55a6a2e0],0x3e
  40884c:	jae    0x408816
  40884e:	lock iret 
  408850:	mov    ds:0x8395d21,al
  408855:	dec    ebx
  408856:	sbb    eax,0x54fce7d7
  40885b:	fwait
  40885c:	shl    ebp,1
  40885e:	in     al,dx
  40885f:	nop
  408860:	outs   dx,DWORD PTR ds:[esi]
  408861:	xchg   ebp,eax
  408862:	inc    ebx
  408863:	jp     0x4087f4
  408865:	mov    ebp,0x46c19f94
  40886a:	mov    edi,0x1d865df5
  40886f:	or     eax,0x1304f810
  408874:	out    dx,eax
  408875:	test   al,0x78
  408877:	dec    edi
  408878:	lea    esi,[eax+0x18c1b3bf]
  40887e:	mov    dl,BYTE PTR [ebx+0x3c]
  408881:	sbb    eax,0x7d092295
  408886:	inc    ebp
  408887:	mov    edx,ebx
  408889:	mov    bl,0x30
  40888b:	add    ecx,DWORD PTR [ebx+ebp*4+0x7b4c674a]
  408892:	clc    
  408893:	cmp    BYTE PTR [edi],dh
  408895:	push   edx
  408896:	iret   
  408897:	lock setl BYTE PTR [ecx+0x12]
  40889c:	push   es
  40889d:	arpl   WORD PTR [ebp+0x4ac06606],di
  4088a3:	push   esi
  4088a4:	retf   0x1639
  4088a7:	je     0x4088d4
  4088a9:	pop    ecx
  4088aa:	popa   
  4088ab:	add    bl,BYTE PTR [edi-0x5]
  4088ae:	repz lock inc ebp
  4088b1:	lods   al,BYTE PTR ds:[esi]
  4088b2:	pop    ss
  4088b3:	or     cl,cl
  4088b5:	pop    ebp
  4088b6:	sbb    DWORD PTR fs:[ebp-0x6],edx
  4088ba:	cli    
  4088bb:	retf   
  4088bc:	call   0x98bc6c22
  4088c1:	pop    DWORD PTR [ebp-0x17121706]
  4088c7:	push   bx
  4088c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ca:	mov    cl,0xff
  4088cc:	ins    BYTE PTR es:[edi],dx
  4088cd:	dec    ebx
  4088ce:	test   DWORD PTR [edx+esi*2],ecx
  4088d1:	fdiv   QWORD PTR [eax-0x49]
  4088d4:	mov    fs,WORD PTR [ecx+0xa8c9ff8]
  4088da:	sub    al,0x68
  4088dc:	xchg   BYTE PTR [eax+edi*2+0x79],dl
  4088e0:	jge    0x40887d
  4088e2:	in     al,0x6b
  4088e4:	fidivr DWORD PTR [ecx]
  4088e6:	stos   DWORD PTR es:[edi],eax
  4088e7:	addr16 mov eax,0xe712cea8
  4088ed:	fadd   st,st(4)
  4088ef:	and    DWORD PTR [ecx-0x5450ce36],edx
  4088f5:	mov    esi,0x99cb6195
  4088fa:	pop    es
  4088fb:	and    al,0x39
  4088fd:	push   ecx
  4088fe:	pop    ecx
  4088ff:	jl     0x40890a
  408901:	(bad)  
  408903:	adc    dl,BYTE PTR [edx]
  408905:	and    al,0x9e
  408907:	jg     0x40896c
  408909:	fld    QWORD PTR [esi]
  40890b:	or     edx,DWORD PTR [ecx+0x1]
  40890e:	jae    0x40897c
  408910:	push   ebp
  408911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408912:	rcl    DWORD PTR [ebx+0x3e],cl
  408915:	sbb    al,0xb2
  408917:	js     0x408916
  408919:	jo     0x40892e
  40891b:	js     0x4088cd
  40891d:	outs   dx,DWORD PTR ds:[esi]
  40891e:	lods   al,BYTE PTR ds:[esi]
  40891f:	jmp    0x59d0:0x13b7e78e
  408926:	and    edx,edi
  408928:	mov    al,0x5
  40892a:	rol    DWORD PTR [ecx-0x7e887d92],0x58
  408931:	push   ecx
  408932:	clc    
  408933:	xchg   BYTE PTR [ecx+0x3501d75b],bl
  408939:	mov    ss,ebp
  40893b:	xchg   ecx,eax
  40893c:	mov    eax,ds:0x7426c204
  408941:	lahf   
  408942:	xchg   edi,eax
  408943:	jmp    0x40894c
  408945:	imul   edx,esp,0xdf439a88
  40894b:	pop    ebp
  40894c:	iret   
  40894d:	or     al,0xf3
  40894f:	imul   ebx,ebp,0xffffffb2
  408952:	xchg   edx,eax
  408953:	out    dx,eax
  408954:	or     eax,0xef0511f5
  408959:	jbe    0x408932
  40895b:	(bad)  
  40895d:	and    eax,0xb561f877
  408962:	outs   dx,BYTE PTR ds:[esi]
  408963:	mov    ds:0x36cb4fef,eax
  408968:	pop    ss
  408969:	or     al,0xd2
  40896b:	outs   dx,BYTE PTR ds:[esi]
  40896c:	add    esi,eax
  40896e:	cs and bh,dh
  408971:	dec    esp
  408972:	push   es
  408973:	stc    
  408974:	data16 mov ah,0xfa
  408977:	lock mov cl,0x90
  40897a:	imul   DWORD PTR [esi]
  40897c:	std    
  40897d:	aaa    
  40897e:	xchg   ebx,eax
  40897f:	sub    ecx,DWORD PTR [edi+0x73cad2c1]
  408985:	dec    ebp
  408986:	mov    al,ds:0x42450120
  40898b:	jb     0x408936
  40898d:	aad    0xc3
  40898f:	in     eax,dx
  408990:	or     edx,0xeb3fa233
  408996:	pop    ecx
  408997:	out    dx,al
  408998:	pop    ebx
  408999:	popa   
  40899a:	shl    BYTE PTR [ebp+0x7f463df3],cl
  4089a0:	hlt    
  4089a1:	fsubr  DWORD PTR [ebx-0x2d7bd36f]
  4089a7:	dec    esp
  4089a8:	popf   
  4089a9:	jl     0x40893c
  4089ab:	mov    eax,ds:0x2e748993
  4089b0:	pop    ebx
  4089b1:	inc    esp
  4089b2:	add    DWORD PTR [eax],ecx
  4089b4:	repz shr DWORD PTR [edx],0x86
  4089b8:	sbb    BYTE PTR [edx+0x3a146854],bh
  4089be:	js     0x40895c
  4089c0:	jbe    0x4089d6
  4089c2:	mov    bh,0x56
  4089c4:	inc    edi
  4089c5:	loop   0x408962
  4089c7:	mov    al,ds:0x4e020ba1
  4089cc:	repz es cwde 
  4089cf:	cmc    
  4089d0:	adc    esi,esp
  4089d2:	mov    al,ds:0x1ed30075
  4089d7:	mov    ch,0xdb
  4089d9:	jle    0x40896b
  4089db:	or     DWORD PTR [ebp+0x1de4223],ebx
  4089e1:	(bad)  
  4089e2:	xchg   esi,eax
  4089e3:	dec    eax
  4089e4:	fcom   DWORD PTR [eax-0x4b]
  4089e7:	outs   dx,BYTE PTR ds:[esi]
  4089e8:	fild   QWORD PTR [ebp-0x29]
  4089eb:	jg     0x4089bb
  4089ed:	push   cs
  4089ee:	ss inc esp
  4089f0:	sti    
  4089f1:	fwait
  4089f2:	push   cs
  4089f3:	lock lahf 
  4089f5:	cld    
  4089f6:	pusha  
  4089f7:	sub    BYTE PTR [ebp-0x44d1545c],cl
  4089fd:	push   0xe07e364f
  408a02:	push   esi
  408a03:	inc    ecx
  408a04:	jg     0x408999
  408a06:	push   ebp
  408a07:	sub    DWORD PTR [edi+edi*8],0xd57f9ebf
  408a0e:	push   esi
  408a0f:	xchg   ebp,eax
  408a10:	mov    ds:0xaa10befc,al
  408a15:	lock xchg esi,eax
  408a17:	push   cs
  408a18:	adc    eax,0x396693b0
  408a1d:	and    al,0xfb
  408a1f:	or     DWORD PTR [edx+0x5a],edx
  408a22:	jae    0x4089d4
  408a24:	loope  0x408a92
  408a26:	(bad)  
  408a28:	out    0x78,al
  408a2a:	(bad)  
  408a2b:	outs   dx,BYTE PTR ds:[esi]
  408a2c:	add    al,0x81
  408a2e:	popa   
  408a2f:	lahf   
  408a30:	fdiv   QWORD PTR [edx+0x4980128d]
  408a36:	mov    DWORD PTR [eax-0x64],edi
  408a39:	scas   al,BYTE PTR es:[edi]
  408a3a:	cld    
  408a3b:	cwde   
  408a3c:	jbe    0x4089da
  408a3e:	test   esi,edx
  408a40:	adc    al,0xe7
  408a42:	pop    esp
  408a43:	sub    DWORD PTR [eax+ebx*2],0x17ec236e
  408a4a:	push   esp
  408a4b:	icebp  
  408a4c:	rcl    al,cl
  408a4e:	mov    edi,0x73431fb2
  408a53:	sub    BYTE PTR [eax+eiz*1],dl
  408a56:	push   edx
  408a57:	(bad)  
  408a58:	retf   
  408a59:	inc    edx
  408a5a:	add    DWORD PTR [eax-0x78324843],edi
  408a60:	fsub   QWORD PTR ds:0xdd5bdd0c
  408a66:	fidiv  DWORD PTR [edx]
  408a68:	out    dx,eax
  408a69:	dec    ebp
  408a6a:	inc    edi
  408a6b:	mov    ds:0x414e14aa,al
  408a70:	mov    al,ds:0xc5922f3c
  408a75:	and    esi,DWORD PTR [ecx]
  408a77:	and    al,0x4b
  408a79:	sbb    al,0x36
  408a7b:	enter  0x8b77,0x7c
  408a7f:	in     eax,0xa5
  408a81:	cmp    esp,esp
  408a83:	mov    edx,0x99e28186
  408a88:	push   eax
  408a89:	fwait
  408a8a:	imul   edx,DWORD PTR [eax],0xb7fcf81c
  408a90:	je     0x408a6a
  408a92:	pop    eax
  408a93:	scas   al,BYTE PTR es:[edi]
  408a94:	out    dx,al
  408a95:	pop    ss
  408a96:	cmp    al,0x15
  408a98:	mov    esp,ebp
  408a9a:	cmc    
  408a9b:	jle    0xe1a3724f
  408aa1:	call   0x9b0f:0x362ee840
  408aa8:	test   al,0x40
  408aaa:	pop    eax
  408aab:	and    ch,al
  408aad:	call   0x3b12:0x847869ab
  408ab4:	fwait
  408ab5:	lahf   
  408ab6:	mov    ds,WORD PTR [esi]
  408ab8:	dec    esi
  408ab9:	cmp    eax,0xc8cdd8d
  408abe:	in     al,dx
  408abf:	fstp   TBYTE PTR [ecx-0x65]
  408ac2:	xchg   ecx,eax
  408ac3:	(bad)  
  408ac4:	clc    
  408ac5:	pop    ecx
  408ac6:	mov    ecx,0x93138e7b
  408acb:	xlat   BYTE PTR ds:[ebx]
  408acc:	sbb    BYTE PTR [ebp+0x3e95e7f6],bl
  408ad2:	sbb    DWORD PTR [ecx],ebp
  408ad4:	inc    esi
  408ad5:	and    al,0xf5
  408ad7:	fwait
  408ad8:	cmp    eax,0x8199cdd6
  408add:	mov    BYTE PTR ds:[esi],ch
  408ae0:	cwde   
  408ae1:	fldln2 
  408ae3:	push   ebp
  408ae4:	out    0xfb,eax
  408ae6:	cmp    al,al
  408ae8:	pop    esp
  408ae9:	scas   eax,DWORD PTR es:[edi]
  408aea:	or     ch,BYTE PTR [ecx]
  408aec:	cmp    eax,0x314900f6
  408af1:	xchg   edx,eax
  408af2:	push   edx
  408af3:	push   ecx
  408af4:	mov    al,0xb
  408af6:	mov    edi,0x64ad260f
  408afb:	cmp    eax,0x97416d58
  408b00:	adc    dh,BYTE PTR [eax*1-0x5c2f145c]
  408b07:	mov    dl,0x82
  408b09:	cdq    
  408b0a:	inc    eax
  408b0b:	cmc    
  408b0c:	pop    eax
  408b0d:	jae    0x408b61
  408b0f:	jne    0x408ab6
  408b11:	call   edi
  408b13:	idiv   BYTE PTR es:[ecx+0x24]
  408b17:	repnz xchg edx,eax
  408b19:	pop    edi
  408b1a:	je     0x408aa3
  408b1c:	frstor gs:[esi+0x395f5f0d]
  408b23:	mov    ah,0xd9
  408b25:	in     eax,0xba
  408b27:	pop    ebx
  408b28:	aad    0x4d
  408b2a:	xchg   edx,eax
  408b2b:	jbe    0x408b4e
  408b2d:	inc    ebp
  408b2e:	dec    esi
  408b2f:	mov    esp,0xa842ed7e
  408b34:	pushf  
  408b35:	lods   al,BYTE PTR ds:[esi]
  408b36:	mov    ah,BYTE PTR [edx+0x0]
  408b39:	cmp    al,BYTE PTR [eax+0x13]
  408b3c:	cld    
  408b3d:	dec    esi
  408b3e:	call   0x26e2:0xbedf8b30
  408b45:	dec    edx
  408b46:	inc    edi
  408b47:	int    0x36
  408b49:	sub    al,0xb1
  408b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b4c:	outs   dx,DWORD PTR ds:[esi]
  408b4d:	hlt    
  408b4e:	sub    eax,0xfd44038b
  408b53:	gs jo  0x408af3
  408b56:	fimul  DWORD PTR [edx]
  408b58:	sub    ch,cl
  408b5a:	xor    al,0x26
  408b5c:	adc    al,0x64
  408b5e:	xchg   esp,eax
  408b5f:	mov    ebx,0x9d7ad5c5
  408b64:	neg    DWORD PTR [ebp-0x28a6d1d3]
  408b6a:	or     edx,ebx
  408b6c:	jbe    0x408b15
  408b6e:	shl    BYTE PTR [ecx-0x1fb6a764],0x72
  408b75:	push   esi
  408b76:	mov    ebp,0x2b9a1136
  408b7b:	js     0x408b3b
  408b7d:	and    dl,bl
  408b7f:	xlat   BYTE PTR ds:[ebx]
  408b80:	or     ch,0xdf
  408b83:	xor    DWORD PTR [ebx+0x75],0x4c
  408b87:	mov    dh,0xa7
  408b89:	and    al,0x48
  408b8b:	test   DWORD PTR [edx-0x70],0x9262687c
  408b92:	scas   eax,DWORD PTR es:[edi]
  408b93:	mov    dl,0x77
  408b95:	xchg   esp,eax
  408b96:	pop    edi
  408b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b98:	push   eax
  408b99:	push   esp
  408b9a:	packssdw mm3,mm3
  408b9d:	xchg   ebp,eax
  408b9e:	stos   DWORD PTR es:[edi],eax
  408b9f:	xchg   esp,eax
  408ba0:	jl     0x408b43
  408ba2:	mov    esi,0xf6d4f36e
  408ba7:	push   edi
  408ba8:	mov    eax,0x12ea23cd
  408bad:	rcl    DWORD PTR [esi-0x34b0f30e],1
  408bb3:	push   0xffffffe3
  408bb5:	pop    ss
  408bb6:	mov    cl,0xa0
  408bb8:	(bad)  
  408bb9:	xchg   esp,eax
  408bba:	cmp    BYTE PTR ds:0xc61d20ad,ch
  408bc0:	clc    
  408bc1:	push   eax
  408bc2:	push   0x30
  408bc4:	mov    eax,ds:0xd3af933f
  408bc9:	fwait
  408bca:	xchg   ecx,eax
  408bcb:	sbb    ecx,edx
  408bcd:	repz fwait
  408bcf:	ins    DWORD PTR es:[edi],dx
  408bd0:	cmp    DWORD PTR [ecx-0x2536519],edx
  408bd6:	in     al,0xf8
  408bd8:	popa   
  408bd9:	into   
  408bda:	jl     0x408bd2
  408bdc:	mov    edx,0x10448c37
  408be1:	adc    esp,esi
  408be3:	adc    bl,ch
  408be5:	ror    edi,1
  408be7:	adc    al,0x48
  408be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bea:	or     DWORD PTR [edi-0x8],esi
  408bed:	es out 0xa3,al
  408bf0:	jnp    0x408b73
  408bf2:	retf   
  408bf3:	loop   0x408c1c
  408bf5:	xchg   bh,ch
  408bf7:	pushf  
  408bf8:	sti    
  408bf9:	fidiv  WORD PTR [esi]
  408bfb:	xchg   DWORD PTR [eax-0x279731ef],esi
  408c01:	retf   
  408c02:	sbb    dh,BYTE PTR [ecx-0x79799bf6]
  408c08:	test   eax,0x5a283970
  408c0d:	xor    eax,0x26b93bfb
  408c12:	and    DWORD PTR [edi-0x5e],0xcf5829a
  408c19:	fistp  DWORD PTR [eax-0x46]
  408c1c:	sbb    DWORD PTR [ecx+0x6c],esi
  408c1f:	pop    es
  408c20:	and    DWORD PTR [edx+eiz*8-0x72],ecx
  408c24:	push   0x50
  408c26:	jae    0x408bbf
  408c28:	mov    bl,0xb4
  408c2a:	cmp    eax,0xa0a315db
  408c2f:	mov    bl,0x8b
  408c31:	push   esi
  408c32:	dec    esp
  408c33:	cmp    dh,BYTE PTR [edi-0x4b]
  408c36:	in     al,0x44
  408c38:	in     eax,0x8
  408c3a:	xor    esi,DWORD PTR [edx+0x77]
  408c3d:	pop    ecx
  408c3e:	sbb    DWORD PTR ds:0x82f759a6,esp
  408c44:	mov    eax,0xec58af91
  408c49:	ret    
  408c4a:	jmp    0xe193:0xe181dda8
  408c51:	jbe    0x408cc1
  408c53:	inc    ecx
  408c54:	mov    esp,0xd500c1b6
  408c59:	shl    BYTE PTR [edx-0x19],cl
  408c5c:	mov    ecx,0x940b3782
  408c61:	push   0x33
  408c63:	aas    
  408c64:	out    0x83,al
  408c66:	xor    DWORD PTR [esi-0x5b],0x33
  408c6a:	aad    0xd2
  408c6c:	enter  0xf4ab,0xa8
  408c70:	int3   
  408c71:	jns    0x408c56
  408c73:	mov    gs,edx
  408c75:	retf   0xd5ce
  408c78:	lock pop es
  408c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7b:	jle    0x408c2b
  408c7d:	jne    0x408ca5
  408c7f:	popa   
  408c80:	mov    ds:0xb1e18120,eax
  408c85:	stos   DWORD PTR es:[edi],eax
  408c86:	sbb    al,0xd4
  408c88:	jle    0x408c41
  408c8a:	repz push ss
  408c8c:	mov    dh,0x43
  408c8e:	cmc    
  408c8f:	xor    BYTE PTR [ecx],ah
  408c91:	xor    al,0x8c
  408c93:	adc    cl,BYTE PTR [ebp+0x6d]
  408c96:	dec    edx
  408c97:	nop
  408c98:	icebp  
  408c99:	jae    0x408cc2
  408c9b:	jno    0x408ca6
  408c9d:	das    
  408c9e:	push   edi
  408c9f:	ror    BYTE PTR [eax-0x370bd625],0xa7
  408ca6:	xor    edx,DWORD PTR [eax+ebx*4]
  408ca9:	sbb    esi,edi
  408cab:	jns    0x408cb0
  408cad:	inc    esp
  408cae:	shl    DWORD PTR [esi-0x617e7f58],cl
  408cb4:	lods   eax,DWORD PTR ds:[esi]
  408cb5:	je     0x408cb1
  408cb7:	mov    WORD PTR [esi-0x5e],ss
  408cba:	ss jmp 0x408d15
  408cbd:	sub    eax,0x17d991a0
  408cc2:	ror    BYTE PTR [eax+0x18],1
  408cc5:	sbb    ebx,eax
  408cc7:	mov    al,0xf
  408cc9:	sbb    eax,0xcfc51fef
  408cce:	gs scas eax,DWORD PTR es:[edi]
  408cd0:	lock sub esp,DWORD PTR [esi+0x67]
  408cd4:	(bad)  
  408cd5:	lods   eax,DWORD PTR ds:[esi]
  408cd6:	shl    DWORD PTR [ebx-0x3c638b1b],cl
  408cdc:	aaa    
  408cdd:	or     BYTE PTR [edx],bl
  408cdf:	or     BYTE PTR ds:0xc8528ad3,al
  408ce5:	jg     0x408c8e
  408ce7:	xchg   edi,eax
  408ce8:	(bad)  
  408cea:	lea    esp,[edx+0x57]
  408ced:	or     al,0xa3
  408cef:	cmp    BYTE PTR [ecx],ah
  408cf1:	pop    esi
  408cf2:	outs   dx,BYTE PTR ds:[esi]
  408cf3:	loop   0x408cd0
  408cf5:	popa   
  408cf6:	push   0x54
  408cf8:	pop    edi
  408cf9:	outs   dx,BYTE PTR ds:[esi]
  408cfa:	inc    ecx
  408cfb:	pusha  
  408cfc:	push   0x66
  408cfe:	(bad)  
  408d00:	fnstsw WORD PTR [ecx-0x1f23ddcd]
  408d06:	mov    ebp,0xf266dcf
  408d0b:	cmp    BYTE PTR [eax+edi*8+0x33],al
  408d0f:	hlt    
  408d10:	fwait
  408d11:	rcr    BYTE PTR [edi-0x67],cl
  408d14:	test   al,0xf3
  408d16:	push   es
  408d17:	fwait
  408d18:	cmc    
  408d19:	or     al,0xc2
  408d1c:	mov    esi,0xec5c9c53
  408d21:	mov    al,0xcb
  408d23:	add    eax,0x536f99df
  408d28:	fst    QWORD PTR [ecx]
  408d2a:	or     ch,BYTE PTR [esi]
  408d2c:	xor    DWORD PTR [edi-0x11],ebp
  408d2f:	mov    BYTE PTR [edi],ch
  408d31:	xchg   ebx,eax
  408d32:	mov    ebp,DWORD PTR [ebx-0x63ec9d6c]
  408d38:	adc    eax,0x12f32409
  408d3d:	cdq    
  408d3e:	push   esi
  408d3f:	dec    ebp
  408d40:	sahf   
  408d41:	out    dx,al
  408d42:	and    ebx,DWORD PTR [edi]
  408d44:	dec    ebx
  408d45:	sub    BYTE PTR [edx+ebx*4],ch
  408d48:	push   0x28
  408d4a:	push   ebp
  408d4b:	push   ebp
  408d4c:	in     al,0x40
  408d4e:	retf   0x4200
  408d51:	mov    esi,0xd4196798
  408d56:	ds repnz and ecx,ebp
  408d5a:	daa    
  408d5b:	sti    
  408d5c:	mov    ebp,0xb18c79e1
  408d61:	pop    ss
  408d62:	or     eax,0x333c93bc
  408d67:	ins    DWORD PTR es:[edi],dx
  408d68:	lock jp 0x408d14
  408d6b:	aam    0x77
  408d6d:	lds    edi,FWORD PTR [esi]
  408d6f:	cmp    ecx,edx
  408d71:	or     ebx,DWORD PTR [esi+0x5359c2d4]
  408d77:	jg     0x408da9
  408d79:	dec    esp
  408d7a:	add    dh,BYTE PTR ds:0x4cf65fa2
  408d80:	dec    eax
  408d81:	js     0x408d29
  408d83:	sub    ah,ah
  408d85:	mov    esp,0xdc96d0a9
  408d8a:	call   0x546a:0x4831c0e
  408d91:	clc    
  408d92:	jne    0x408d35
  408d94:	xor    al,0x44
  408d96:	test   al,0x56
  408d98:	push   esp
  408d99:	push   edi
  408d9a:	pcmpeqb mm1,QWORD PTR [ebp-0x61204e2d]
  408da1:	leave  
  408da2:	repnz imul ecx,DWORD PTR [ebx+0x2b46ef60],0xfbbe571
  408dad:	pop    ds
  408dae:	push   esi
  408daf:	in     eax,0x3f
  408db1:	jae    0x408dde
  408db3:	dec    ebp
  408db4:	into   
  408db5:	call   0x7e5e:0xdefb8da4
  408dbc:	push   esi
  408dbd:	in     al,0x2e
  408dbf:	jle    0x408d9b
  408dc1:	sub    eax,DWORD PTR [edx]
  408dc3:	loope  0x408e16
  408dc5:	push   ss
  408dc6:	sub    esi,DWORD PTR [edi]
  408dc8:	(bad)  
  408dca:	cmp    al,0x4f
  408dcc:	stc    
  408dcd:	icebp  
  408dce:	inc    ebx
  408dcf:	sbb    eax,0xd3d1a8f0
  408dd4:	jo     0x408de2
  408dd6:	cmp    al,0xd
  408dd8:	mov    ecx,0xe08bcbd2
  408ddd:	xchg   ecx,eax
  408dde:	out    dx,eax
  408ddf:	cmc    
  408de0:	cmp    DWORD PTR ds:0xd112f04f,0x228308be
  408dea:	mov    ah,0x71
  408dec:	cmp    BYTE PTR [edx-0x48],0x97
  408df0:	scas   al,BYTE PTR es:[edi]
  408df1:	retf   0x8b28
  408df4:	jbe    0x408d80
  408df6:	pop    edx
  408df7:	dec    ebp
  408df8:	(bad)  
  408df9:	in     al,0xda
  408dfb:	nop
  408dfc:	cwde   
  408dfd:	mov    WORD PTR [eax],ds
  408dff:	test   ebx,0x94e18204
  408e05:	inc    edx
  408e06:	push   edx
  408e07:	xchg   edx,eax
  408e08:	out    dx,al
  408e09:	ror    BYTE PTR [edi+0x28],cl
  408e0c:	dec    ebx
  408e0d:	lods   eax,DWORD PTR ds:[esi]
  408e0e:	shl    BYTE PTR [ecx],0xa0
  408e11:	jns    0x408dbc
  408e13:	mov    esp,0x11e891e9
  408e18:	adc    eax,0x7239606
  408e1d:	dec    edx
  408e1e:	xor    al,BYTE PTR [edx+0x5b]
  408e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e22:	mov    esi,0xdc5a4794
  408e27:	mov    cs,WORD PTR [edi+0x76]
  408e2a:	push   cs
  408e2b:	push   ss
  408e2c:	sub    al,0xf1
  408e2e:	pusha  
  408e2f:	and    BYTE PTR [edx-0x4f],0x7f
  408e33:	xchg   esi,eax
  408e34:	inc    esi
  408e35:	inc    esi
  408e36:	aam    0x35
  408e38:	(bad)  
  408e3a:	jecxz  0x408dfa
  408e3c:	sbb    ebx,DWORD PTR [ebx+0x5756a66a]
  408e42:	and    BYTE PTR [edx-0x18],bh
  408e45:	arpl   bx,bx
  408e47:	pop    edx
  408e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e49:	sbb    DWORD PTR [esi],ebp
  408e4b:	in     eax,0x85
  408e4d:	inc    edx
  408e4e:	pop    ecx
  408e4f:	aam    0x63
  408e51:	outs   dx,BYTE PTR ds:[esi]
  408e52:	ret    
  408e53:	sub    al,0x41
  408e55:	rsqrtps xmm2,XMMWORD PTR [edi]
  408e58:	lea    esi,[eax-0x45]
  408e5b:	ins    DWORD PTR es:[edi],dx
  408e5c:	imul   edi,DWORD PTR [edi+edi*4+0x77d680e0],0xb6465086
  408e67:	fcom   QWORD PTR [eax]
  408e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e6a:	fdivr  DWORD PTR [esi-0x75]
  408e6d:	mov    ebp,0x15752c11
  408e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e73:	popa   
  408e74:	xor    edi,DWORD PTR [esi-0x9]
  408e77:	into   
  408e78:	addr16 jo 0x408e49
  408e7b:	add    eax,0x12b6ecbc
  408e80:	mov    ebp,0x64a756c9
  408e85:	lods   al,BYTE PTR ds:[esi]
  408e86:	inc    esp
  408e87:	sub    eax,DWORD PTR [ebx]
  408e89:	popa   
  408e8a:	xchg   ebp,eax
  408e8b:	adc    cl,BYTE PTR [edx+0x47c725ef]
  408e91:	inc    esi
  408e92:	call   0xc8d6a940
  408e97:	jmp    0xfaf332a5
  408e9c:	jne    0x408e63
  408e9e:	jge    0x408f10
  408ea0:	mov    al,0xe7
  408ea2:	(bad)  
  408ea3:	setno  dh
  408ea6:	mov    ah,0x80
  408ea8:	adc    ah,BYTE PTR [esi+0x16]
  408eab:	mov    ah,0x17
  408ead:	(bad)  
  408eae:	mov    bh,0x19
  408eb0:	inc    ecx
  408eb2:	icebp  
  408eb3:	rcl    bh,0x91
  408eb6:	mov    al,0xc4
  408eb8:	(bad)  
  408eb9:	xchg   ebp,eax
  408eba:	add    eax,DWORD PTR [esi+0x56b359da]
  408ec0:	arpl   WORD PTR [ebx-0x30a4abfa],di
  408ec6:	imul   esp,DWORD PTR fs:[ebx-0x61],0xd1b4e180
  408ece:	les    ecx,FWORD PTR [eax]
  408ed0:	scas   al,BYTE PTR es:[edi]
  408ed1:	out    dx,al
  408ed2:	mov    ?,WORD PTR [edi+0x6b]
  408ed5:	stc    
  408ed6:	mov    ecx,DWORD PTR [eax+0x42b9dd9c]
  408edc:	or     ch,BYTE PTR [esi]
  408ede:	xchg   al,ah
  408ee0:	inc    edx
  408ee1:	inc    ebx
  408ee2:	(bad)  
  408ee3:	inc    ebx
  408ee4:	stc    
  408ee5:	and    dh,dh
  408ee7:	push   es
  408ee8:	lods   eax,DWORD PTR ds:[esi]
  408ee9:	test   BYTE PTR [esi-0xf],bh
  408eec:	test   DWORD PTR [ebp+0x5592498e],0xb8e30e6e
  408ef6:	sub    cl,BYTE PTR [ebx]
  408ef8:	inc    esi
  408ef9:	int    0x7a
  408efb:	adc    bh,BYTE PTR [ebp+0x65387678]
  408f01:	jb     0x408f2a
  408f03:	iret   
  408f04:	scas   al,BYTE PTR es:[edi]
  408f05:	mov    ah,0x78
  408f07:	imul   DWORD PTR [ebp-0x2355b591]
  408f0d:	and    al,0xf0
  408f0f:	push   ds
  408f10:	ror    BYTE PTR [ecx],cl
  408f12:	xchg   DWORD PTR [eax-0xc],esi
  408f15:	out    dx,al
  408f16:	test   al,0x89
  408f18:	nop
  408f19:	cmp    ecx,DWORD PTR [edx-0x5d]
  408f1c:	rol    DWORD PTR [esi+edi*2-0x2d5d8c0f],1
  408f23:	sahf   
  408f24:	push   ds
  408f25:	xchg   edi,eax
  408f26:	mov    esp,0x7c39f4c3
  408f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f2c:	mov    cl,0xe5
  408f2e:	jp     0x408efd
  408f30:	(bad)  [eax-0x77]
  408f33:	mov    bh,BYTE PTR [ecx-0xf90905]
  408f39:	enter  0x196,0x8a
  408f3d:	ret    0xb296
  408f40:	into   
  408f41:	dec    esp
  408f42:	cmp    BYTE PTR [ebp+0x7d58ef55],cl
  408f48:	data16 and ah,BYTE PTR [eax-0x48]
  408f4c:	loop   0x408f48
  408f4e:	cli    
  408f4f:	mov    ebp,0x707b2b05
  408f54:	mov    al,ds:0xf4a0a413
  408f59:	arpl   WORD PTR [esi],dx
  408f5b:	sahf   
  408f5c:	lahf   
  408f5d:	js     0x408ee5
  408f5f:	fmul   QWORD PTR [ecx-0x68]
  408f62:	xor    edx,ebp
  408f64:	inc    eax
  408f65:	ror    BYTE PTR [eax+0x495f722e],cl
  408f6b:	hlt    
  408f6c:	enter  0xe2ec,0xb9
  408f70:	out    0x2d,eax
  408f72:	adc    eax,0x6d638569
  408f77:	dec    ebp
  408f78:	sub    esp,DWORD PTR [ebx]
  408f7a:	cdq    
  408f7b:	daa    
  408f7c:	jnp    0x408f8b
  408f7e:	or     eax,0x6025a60
  408f83:	std    
  408f84:	xchg   BYTE PTR [ebx-0x53b6d6f0],dl
  408f8a:	push   esi
  408f8b:	dec    eax
  408f8c:	sub    edi,DWORD PTR [esp+ebx*8-0x58]
  408f90:	ret    
  408f91:	or     eax,0x2f323116
  408f96:	repz out dx,al
  408f98:	popa   
  408f99:	(bad)  
  408f9a:	dec    ebx
  408f9b:	ret    
  408f9c:	inc    eax
  408f9d:	repz xchg ecx,eax
  408f9f:	call   0x10f1:0x241f13ea
  408fa6:	hlt    
  408fa7:	xchg   ecx,eax
  408fa8:	out    dx,al
  408fa9:	data16 sub ch,BYTE PTR [eax+0x49]
  408fad:	add    dh,BYTE PTR [ebx]
  408faf:	enter  0x9b72,0x1b
  408fb3:	leave  
  408fb4:	cmp    DWORD PTR [ebp-0x2c],edi
  408fb7:	push   esp
  408fb8:	loope  0x408f48
  408fba:	jae    0x408ffa
  408fbc:	or     bl,dl
  408fbe:	mov    ds:0x3bbcc319,al
  408fc3:	push   0x2c35933f
  408fc8:	and    DWORD PTR [edx-0x6796b1cb],edx
  408fce:	push   cs
  408fcf:	aam    0xd
  408fd1:	fadd   DWORD PTR [ecx]
  408fd3:	aad    0xb2
  408fd5:	pushf  
  408fd6:	ds mov ecx,0x26ae7fd5
  408fdc:	jo     0x408fc6
  408fde:	test   BYTE PTR [ebx+0x758c0247],dh
  408fe4:	sar    BYTE PTR [ebx],1
  408fe6:	ffreep st(2)
  408fe8:	ror    BYTE PTR [ebp+edi*2-0x62e4d1cd],cl
  408fef:	and    eax,0x32c58ac5
  408ff4:	mov    al,ds:0xf6f33b93
  408ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ffa:	data16 dec BYTE PTR [ebx+0x5b]
  408ffe:	shl    BYTE PTR [edx],1
  409000:	pop    eax
  409001:	ficom  WORD PTR [eax+esi*2-0x5366219c]
  409008:	call   0x9da7:0x9577144e
  40900f:	xchg   esp,eax
  409010:	mov    ?,WORD PTR [ecx+0x3136b724]
  409016:	ret    0x7df4
  409019:	call   0x27a5:0x17ba62db
  409020:	retf   0x3ec9
  409023:	mov    dh,0x24
  409025:	pop    edi
  409026:	sbb    eax,0xbb60e1e
  40902b:	xchg   dh,ch
  40902d:	dec    edx
  40902e:	mov    ebp,0xe7f93a29
  409033:	adc    BYTE PTR [ecx+0x4f],dl
  409036:	(bad)  
  409037:	test   eax,0xf79e116f
  40903c:	aad    0xc2
  40903e:	sbb    al,0xa9
  409040:	ror    dh,1
  409042:	loopne 0x409062
  409044:	push   cs
  409045:	add    DWORD PTR [ebx+edx*4-0x79],ecx
  409049:	ror    DWORD PTR ds:0x16267a11,1
  40904f:	push   edi
  409050:	pop    edx
  409051:	push   ebx
  409052:	lock rcr ah,1
  409055:	sbb    al,BYTE PTR [ecx]
  409057:	ds jecxz 0x4090c3
  40905a:	and    ebp,DWORD PTR [esi]
  40905c:	addr16 into 
  40905e:	jne    0x40904e
  409060:	mov    edi,0xd79afd2b
  409065:	mov    ds:0xabc0fa6d,al
  40906a:	inc    edx
  40906b:	jge    0x4090b8
  40906d:	and    DWORD PTR [eax-0x24],edi
  409070:	popa   
  409071:	adc    bl,al
  409073:	jb     0x4090b2
  409075:	xor    esp,eax
  409077:	mov    esp,0x8e53723b
  40907c:	push   esi
  40907d:	imul   ebx,DWORD PTR [eax-0x43],0x49
  409081:	arpl   sp,sp
  409083:	stos   DWORD PTR es:[edi],eax
  409084:	or     ch,BYTE PTR [eax]
  409086:	xchg   DWORD PTR [ebx],esp
  409088:	jmp    0x409063
  40908a:	scas   al,BYTE PTR es:[edi]
  40908b:	fsub   st,st(6)
  40908d:	push   esp
  40908e:	sbb    ch,dl
  409090:	cld    
  409091:	in     al,0x79
  409093:	mov    ds:0x638e4800,eax
  409098:	xchg   esp,eax
  409099:	cmp    edx,edi
  40909b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40909c:	mov    DWORD PTR [esi-0xda51fd9],ebp
  4090a2:	ret    
  4090a3:	jle    0x409082
  4090a5:	dec    edx
  4090a6:	je     0x409124
  4090a8:	mov    ah,0xc
  4090aa:	inc    edx
  4090ab:	sub    bl,0x58
  4090ae:	mov    ah,0x35
  4090b0:	int    0x57
  4090b2:	ror    eax,1
  4090b4:	stos   DWORD PTR es:[edi],eax
  4090b5:	xchg   ebx,eax
  4090b6:	jne    0x40906d
  4090b8:	jnp    0x409130
  4090ba:	je     0x409040
  4090bc:	outs   dx,BYTE PTR ds:[esi]
  4090bd:	fwait
  4090be:	aas    
  4090bf:	pop    esi
  4090c0:	or     ah,bh
  4090c2:	call   0x808e8d5d
  4090c7:	pusha  
  4090c8:	pop    ebx
  4090c9:	pop    edi
  4090ca:	cmp    al,0xb2
  4090cc:	and    DWORD PTR [edi-0x34],ebx
  4090cf:	pop    edx
  4090d0:	shl    BYTE PTR ds:0xea44bc65,1
  4090d6:	pop    ds
  4090d7:	or     edx,0x666c561f
  4090dd:	dec    esp
  4090de:	jns    0x4090d9
  4090e0:	add    esp,0x3f
  4090e3:	push   ebp
  4090e4:	xchg   edi,eax
  4090e5:	push   es
  4090e6:	rcr    DWORD PTR [eax],cl
  4090e8:	dec    edi
  4090e9:	test   al,0x3b
  4090eb:	mov    edx,0xfb0b59f5
  4090f0:	xor    al,0x97
  4090f2:	leave  
  4090f3:	imul   ecx,DWORD PTR [ecx-0x45],0x8241b0fb
  4090fa:	js     0x4090ca
  4090fc:	cmp    al,0xfa
  4090fe:	pop    edx
  4090ff:	loop   0x409121
  409101:	mov    es,WORD PTR [ebx-0x240e9ac7]
  409107:	loope  0x409131
  409109:	ja     0x40918a
  40910b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40910c:	or     eax,0x9114c0ca
  409111:	and    al,0xa3
  409113:	xor    eax,0x6d2373b9
  409118:	jo     0x4090d8
  40911a:	push   ecx
  40911b:	pop    ds
  40911c:	jne    0x40916f
  40911e:	mov    dh,0xdf
  409120:	cdq    
  409121:	mov    bl,bl
  409123:	scas   al,BYTE PTR es:[edi]
  409124:	mov    cs,WORD PTR [edi]
  409126:	aaa    
  409127:	repnz sbb esi,esp
  40912a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40912b:	pusha  
  40912c:	popa   
  40912d:	or     eax,0x8c5b48da
  409132:	stos   DWORD PTR es:[edi],eax
  409133:	dec    esi
  409134:	xlat   BYTE PTR ds:[ebx]
  409135:	add    eax,DWORD PTR [edi-0x24]
  409138:	dec    esp
  409139:	xchg   esp,eax
  40913a:	fcomp  QWORD PTR [edi-0x2]
  40913d:	and    bl,ch
  40913f:	into   
  409140:	add    eax,0xf2326c39
  409145:	jne    0x409136
  409147:	xor    eax,0x46051c58
  40914c:	push   ebp
  40914d:	push   esp
  40914e:	aas    
  40914f:	pop    edi
  409150:	call   0xe167:0x10d9dba8
  409157:	sub    DWORD PTR [esi],edi
  409159:	sbb    DWORD PTR [edx+edx*2-0x64],0xb430191f
  409161:	or     bl,al
  409163:	push   ebp
  409164:	xor    DWORD PTR [ebx],0xffffffdf
  409167:	cmovs  esi,DWORD PTR [ebp-0x29]
  40916b:	or     cl,BYTE PTR [ecx-0x67]
  40916e:	mov    ds:0xf889e24,eax
  409173:	inc    esp
  409174:	xchg   ebp,eax
  409175:	in     eax,dx
  409176:	mov    al,ds:0x1d0677cd
  40917b:	scas   eax,DWORD PTR es:[edi]
  40917c:	xor    DWORD PTR [esi],ebx
  40917e:	mov    esp,0xda0519bf
  409183:	xchg   ebp,eax
  409184:	rcr    BYTE PTR [esi+ebx*1+0x54],1
  409188:	sub    BYTE PTR ds:[esp+edi*2],bl
  40918c:	(bad)  
  40918d:	out    dx,al
  40918e:	mov    bl,BYTE PTR [edx-0x6031a87a]
  409194:	xchg   edx,eax
  409195:	add    esp,eax
  409197:	push   ds
  409198:	iret   
  409199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40919a:	mov    ch,0x70
  40919c:	or     DWORD PTR [edx],eax
  40919e:	cli    
  40919f:	dec    ecx
  4091a0:	fnsave [ebp+ecx*8+0x4ede5263]
  4091a7:	hlt    
  4091a8:	xor    dl,BYTE PTR [edi-0x2f]
  4091ab:	inc    eax
  4091ac:	jns    0x4091df
  4091ae:	cmp    eax,0x7b9ca54b
  4091b3:	clc    
  4091b4:	dec    esi
  4091b5:	loope  0x4091f3
  4091b7:	mov    al,BYTE PTR [edx+ecx*1-0x1f]
  4091bb:	and    edx,esi
  4091bd:	jmp    0x647bec09
  4091c2:	(bad)  
  4091c3:	sub    BYTE PTR [ebx+edi*2],dh
  4091c6:	xchg   esp,eax
  4091c7:	and    ch,0x8d
  4091ca:	pop    eax
  4091cb:	xchg   ebp,eax
  4091cc:	lock fs inc ecx
  4091cf:	inc    edx
  4091d0:	xchg   ebp,eax
  4091d1:	test   DWORD PTR [ebp+0x71],ebp
  4091d4:	xchg   ebx,eax
  4091d5:	xchg   esi,eax
  4091d6:	xchg   BYTE PTR [ecx],ch
  4091d8:	sti    
  4091d9:	and    BYTE PTR [ebx],cl
  4091db:	adc    DWORD PTR [edi-0x375dbf96],edx
  4091e1:	je     0x409247
  4091e3:	push   esi
  4091e4:	sub    al,0xf4
  4091e6:	jnp    0x409187
  4091e8:	xor    esp,DWORD PTR [edx]
  4091ea:	pop    esi
  4091eb:	psubq  mm1,mm5
  4091ee:	es call 0x2943d28f
  4091f4:	or     ah,BYTE PTR [ebx-0x4155cd3d]
  4091fa:	cwde   
  4091fb:	dec    ebx
  4091fc:	sbb    eax,0xc0825e85
  409201:	jl     0x4091a7
  409203:	mov    edx,DWORD PTR [ebp+eax*1+0x45]
  409207:	add    ebp,DWORD PTR [esi]
  409209:	xchg   edx,eax
  40920a:	sub    esi,esp
  40920c:	sbb    eax,0xed28c390
  409211:	push   ss
  409212:	daa    
  409213:	std    
  409214:	addr16 xchg ecx,eax
  409216:	xchg   ebx,eax
  409217:	out    dx,al
  409218:	adc    al,0x5a
  40921a:	imul   ebp,DWORD PTR [esp+esi*1+0x3e],0x34
  40921f:	test   DWORD PTR [ebp-0xc],esp
  409222:	inc    ebp
  409223:	adc    DWORD PTR [esi],edi
  409225:	js     0x409278
  409227:	mov    al,0x8b
  409229:	mov    ah,0xb
  40922b:	cmp    bh,BYTE PTR [esi+0x357bdca5]
  409231:	gs sub eax,0x9a7ee6eb
  409237:	xor    esp,esp
  409239:	sbb    bh,BYTE PTR [edi+0x53f46328]
  40923f:	jmp    0x4091c9
  409241:	xchg   BYTE PTR [esi-0x5e74224e],al
  409247:	test   BYTE PTR [ebx-0x1e40de06],bl
  40924d:	lock jle 0x4091ed
  409250:	and    al,BYTE PTR [edx+esi*1]
  409253:	ret    0xbb56
  409256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409257:	mov    al,ds:0xc323774d
  40925c:	in     al,dx
  40925d:	xchg   ebx,eax
  40925e:	xchg   edi,eax
  40925f:	inc    dx
  409261:	jo     0x409289
  409263:	mov    edi,0xab446119
  409268:	ins    BYTE PTR es:[edi],dx
  409269:	cld    
  40926a:	fist   WORD PTR [ecx+0xc]
  40926d:	inc    ebx
  40926e:	pushf  
  40926f:	outs   dx,BYTE PTR ds:[esi]
  409270:	xor    eax,0x4ae96b88
  409275:	push   ebp
  409276:	rcl    BYTE PTR [ecx],cl
  409278:	imul   edx,DWORD PTR [edx],0x25af16b6
  40927e:	push   cs
  40927f:	jno    0x4092c6
  409281:	imul   edi,edi,0x82882692
  409287:	loopne 0x4092da
  409289:	sbb    DWORD PTR [eax-0x5dc66cc2],ecx
  40928f:	(bad)  
  409290:	mov    bl,0x4
  409292:	ror    BYTE PTR [edi-0x41],cl
  409295:	jbe    0x409311
  409297:	inc    esp
  409298:	jmp    0xda2686b
  40929d:	nop
  40929e:	add    al,0xaf
  4092a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092a1:	ds jmp 0xa2b2:0xae0962ee
  4092a9:	lods   eax,DWORD PTR ds:[esi]
  4092aa:	rol    BYTE PTR [esi+0x23],cl
  4092ad:	(bad)  
  4092ae:	jg     0x4092d0
  4092b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b1:	dec    ebx
  4092b2:	ss jno 0x40928c
  4092b5:	(bad)  
  4092b6:	(bad)  
  4092b7:	(bad)
  4092ba:	jne    0x409321
  4092bc:	addr16 or dl,ch
  4092bf:	fidiv  DWORD PTR [edx-0xe]
  4092c2:	jmp    0x835c175
  4092c7:	pop    DWORD PTR [ecx]
  4092c9:	loop   0x4092ca
  4092cb:	adc    BYTE PTR [ecx+edi*2+0x2231c7c8],dl
  4092d2:	xchg   ebp,eax
  4092d3:	sub    esp,eax
  4092d5:	retf   0x60de
  4092d8:	lods   al,BYTE PTR ds:[esi]
  4092d9:	adc    al,0xba
  4092db:	ds int 0x6e
  4092de:	mov    bh,BYTE PTR [edx+ebx*1-0x7d]
  4092e2:	push   esp
  4092e3:	jnp    0x40929c
  4092e5:	push   cs
  4092e6:	dec    ecx
  4092e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e8:	pusha  
  4092e9:	mov    bh,0x79
  4092eb:	sbb    DWORD PTR [ecx+0x7],ebp
  4092ee:	mov    ch,0x30
  4092f0:	pop    ss
  4092f1:	lock cdq 
  4092f3:	adc    eax,0xb77eedaa
  4092f8:	xchg   edx,esi
  4092fa:	lods   al,BYTE PTR ds:[esi]
  4092fb:	cmp    BYTE PTR [edx+0x6d],ah
  4092fe:	mov    WORD PTR [eax+0x60],fs
  409301:	and    eax,0x44256ab2
  409306:	inc    eax
  409307:	imul   ebp,DWORD PTR [edx],0x61
  40930a:	fsub   st,st(5)
  40930c:	(bad)  
  40930d:	call   0xaccc7ad1
  409312:	divps  xmm5,XMMWORD PTR [eax+0x3d4a9ef6]
  409319:	in     al,0x38
  40931b:	div    BYTE PTR [eax+0x3f271624]
  409321:	xchg   ebx,eax
  409322:	daa    
  409323:	shr    DWORD PTR [ebx-0x50df0cea],0xbb
  40932a:	cmc    
  40932b:	inc    edx
  40932c:	push   es
  40932d:	cmp    DWORD PTR [edi+edx*4+0x12f28f03],edx
  409334:	add    esi,esi
  409336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409337:	jne    0x40938e
  409339:	jecxz  0x409303
  40933b:	and    al,0x2
  40933d:	add    eax,0xdb6b6f18
  409342:	call   0xa1fc:0x6b4e5740
  409349:	int    0x87
  40934b:	outs   dx,DWORD PTR ds:[esi]
  40934c:	rcl    DWORD PTR [ebx+esi*4],1
  40934f:	repz ss dec ebp
  409352:	xor    ecx,ecx
  409354:	out    dx,eax
  409355:	adc    ah,BYTE PTR [edx+0x46fd43cd]
  40935b:	xlat   BYTE PTR ds:[ebx]
  40935c:	jmp    DWORD PTR [edx-0x1b]
  40935f:	cmp    BYTE PTR [edx+esi*4+0x48],ah
  409363:	mov    dl,0x94
  409365:	loope  0x40936a
  409367:	inc    edi
  409368:	sub    dl,BYTE PTR [ebp-0x46e6ec95]
  40936e:	jns    0x40936c
  409370:	push   esp
  409371:	sub    eax,DWORD PTR ds:0xd1360b78
  409377:	push   eax
  409378:	xchg   ebx,eax
  409379:	push   ebp
  40937a:	bound  ebx,QWORD PTR [edi]
  40937c:	xor    al,0x7e
  40937e:	xchg   ebp,ebp
  409380:	ret    
  409381:	jmp    0x4093ba
  409383:	sbb    eax,0xc4ac9603
  409388:	imul   ah
  40938a:	test   al,0x6f
  40938c:	mov    ah,0x59
  40938e:	inc    esp
  40938f:	pop    ebp
  409390:	add    eax,0x10b8608f
  409395:	imul   DWORD PTR [ecx+edi*1-0x71]
  409399:	xchg   esp,eax
  40939a:	jmp    0xfd16a345
  40939f:	mov    ds:0x26097204,eax
  4093a4:	and    esi,DWORD PTR [edi+0x13]
  4093a7:	pop    ecx
  4093a8:	push   edx
  4093a9:	mov    ah,dl
  4093ab:	iret   
  4093ac:	das    
  4093ad:	cmp    edi,edx
  4093af:	xor    al,0x51
  4093b1:	jecxz  0x4093ae
  4093b3:	popa   
  4093b4:	enter  0xd6a9,0xda
  4093b8:	and    DWORD PTR [esi+0x1cb97b3d],esi
  4093be:	cmp    cl,ch
  4093c0:	sti    
  4093c1:	add    BYTE PTR [edx+eiz*8-0x60],cl
  4093c5:	test   al,0xce
  4093c7:	push   ecx
  4093c8:	adc    ah,al
  4093ca:	(bad)  
  4093cb:	mov    esi,0x1109391e
  4093d0:	out    0x3,al
  4093d2:	jg     0x4093c4
  4093d4:	add    ecx,DWORD PTR [edi-0x7dec54aa]
  4093da:	les    eax,FWORD PTR [edx-0x7b2d4569]
  4093e0:	in     al,dx
  4093e1:	xor    ah,al
  4093e3:	out    dx,eax
  4093e4:	(bad)  
  4093e5:	jmp    0x3749:0xcc1010f2
  4093ec:	mov    bh,0x94
  4093ee:	stos   DWORD PTR es:[edi],eax
  4093ef:	dec    ecx
  4093f0:	mov    ah,0x32
  4093f2:	loope  0x4093a3
  4093f4:	shr    WORD PTR [ebx*4+0x339c0b61],1
  4093fc:	hlt    
  4093fd:	outs   dx,BYTE PTR ds:[esi]
  4093fe:	shr    DWORD PTR [edi],cl
  409400:	adc    esi,ecx
  409402:	sbb    al,0x41
  409404:	int3   
  409405:	jne    0x4093cb
  409407:	xor    ebp,DWORD PTR [ebp+0xcdb90b5]
  40940d:	mov    WORD PTR [ecx+0x1],cs
  409410:	mov    ebp,0x5a69a19a
  409415:	dec    ebx
  409416:	sbb    eax,0xb3b2bc1b
  40941b:	jb     0x409472
  40941d:	mov    edx,0x5cf9832f
  409422:	mov    cl,0x4e
  409424:	repnz cmova edi,DWORD PTR [esi+esi*4]
  409429:	jae    0x4093b9
  40942b:	sbb    esi,ecx
  40942d:	pop    esi
  40942e:	rol    DWORD PTR [ecx+ecx*1+0x67df19a6],1
  409435:	mov    eax,ds:0x6998e9ce
  40943a:	xchg   ecx,eax
  40943b:	pushf  
  40943c:	lock add al,0xf
  40943f:	rcr    BYTE PTR [ecx],1
  409441:	inc    eax
  409442:	loop   0x40944b
  409444:	mov    ds:0x8f6687d9,al
  409449:	mov    al,ds:0x8ea866ed
  40944e:	scas   al,BYTE PTR es:[edi]
  40944f:	xor    eax,0xe462a8ef
  409454:	sar    ebx,1
  409456:	pop    ss
  409457:	jb     0x409476
  409459:	fisttp DWORD PTR [edx]
  40945b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40945c:	pop    edx
  40945d:	gs and eax,0xffaee3aa
  409463:	call   0x2d25639e
  409468:	lds    ecx,FWORD PTR [ebx-0x544bc527]
  40946e:	(bad)  
  40946f:	pop    ss
  409470:	aas    
  409471:	jae    0x40947e
  409473:	add    al,0x99
  409475:	inc    ecx
  409476:	sbb    DWORD PTR [ebx],edx
  409478:	and    ah,BYTE PTR [eax-0x7080946f]
  40947e:	rcr    DWORD PTR [esi],1
  409480:	and    ecx,DWORD PTR [ecx]
  409482:	push   ecx
  409483:	fadd   QWORD PTR [esi+0x19]
  409486:	sbb    eax,0xd04fff19
  40948b:	(bad)  
  40948c:	jmp    0x40945a
  40948e:	and    eax,0x3159bfc8
  409493:	test   BYTE PTR [edi+0x22d30ff],dh
  409499:	pop    edx
  40949a:	fs gs test al,0x22
  40949e:	pop    esi
  40949f:	sub    bx,WORD PTR [esi-0x48]
  4094a3:	jbe    0x409473
  4094a5:	add    al,0x98
  4094a7:	fs lock jae 0x4094ec
  4094ab:	cmp    eax,0x351abcc5
  4094b0:	dec    ebp
  4094b1:	cmp    DWORD PTR [edx-0x35],ebp
  4094b4:	mov    ebp,0xd4db6b82
  4094b9:	into   
  4094ba:	lahf   
  4094bb:	dec    esp
  4094bc:	jecxz  0x40951b
  4094be:	int    0x3
  4094c0:	push   es
  4094c1:	push   ds
  4094c2:	cmp    eax,0x58
  4094c5:	fistp  WORD PTR [eax+0x53]
  4094c8:	sub    eax,0xb5c83069
  4094cd:	ret    0x5d7d
  4094d0:	icebp  
  4094d1:	jmp    0xd5cb0e3f
  4094d6:	mov    ebx,0xae039f8b
  4094db:	pop    esp
  4094dc:	mov    ebp,0x42bb9e28
  4094e1:	or     al,BYTE PTR [bp+si]
  4094e4:	mov    esi,0x9683178f
  4094e9:	fcom   QWORD PTR [ecx+ecx*1-0x2c9014e9]
  4094f0:	jmp    0x31b4:0x856ccd9
  4094f7:	ja     0x40949a
  4094f9:	xchg   edx,eax
  4094fa:	dec    ebx
  4094fb:	loop   0x409496
  4094fd:	scas   eax,DWORD PTR es:[edi]
  4094fe:	push   cs
  4094ff:	into   
  409500:	mov    ch,ch
  409502:	pop    eax
  409503:	mov    ecx,DWORD PTR [ebx]
  409505:	mov    eax,0xb7d754c2
  40950a:	in     al,dx
  40950b:	adc    al,0x89
  40950d:	out    0xdc,eax
  40950f:	in     al,0x6c
  409511:	jnp    0x4094e7
  409513:	mov    ecx,0xcf11b2db
  409518:	cmp    ah,BYTE PTR [edx]
  40951a:	pusha  
  40951b:	sbb    edi,eax
  40951d:	xor    al,0x40
  40951f:	push   edx
  409520:	cwde   
  409521:	add    cl,BYTE PTR [esi]
  409523:	xchg   esp,eax
  409524:	xor    eax,0x78d96ba0
  409529:	jae    0x4094db
  40952b:	sbb    DWORD PTR [eax],esi
  40952d:	test   al,0x93
  40952f:	nop
  409530:	sbb    dl,BYTE PTR ds:0xe099b61b
  409536:	mov    al,ds:0x62e7eed4
  40953b:	pop    edx
  40953c:	iret   
  40953d:	in     eax,0x8d
  40953f:	fild   DWORD PTR [ecx]
  409541:	call   0x93f6:0x1855b7da
  409548:	mov    ah,0xa8
  40954a:	ja     0x4094f3
  40954c:	pavgb  mm7,QWORD PTR [ebx+0x33b38434]
  409553:	iret   
  409554:	add    BYTE PTR [edi-0x18],ah
  409557:	adc    cl,BYTE PTR [ecx+0x45b9d143]
  40955d:	mov    esp,DWORD PTR [ebp+0x23]
  409560:	sbb    BYTE PTR [ebx+0x56],dh
  409563:	jno    0x40958c
  409565:	retf   0xa24
  409568:	sub    edx,eax
  40956a:	cmp    ah,BYTE PTR [edi-0x35]
  40956d:	lock sub BYTE PTR [edx-0x76872672],bh
  409574:	jecxz  0x4095eb
  409576:	cmp    al,0x54
  409578:	shr    BYTE PTR [ebx+0x323c50b3],0xf7
  40957f:	jmp    0x6bf1b090
  409584:	inc    edx
  409585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409586:	(bad)  [ecx+ebx*2+0x6b]
  40958a:	push   ebp
  40958b:	ins    BYTE PTR es:[edi],dx
  40958c:	hlt    
  40958d:	pop    ecx
  40958e:	cmp    al,0x5e
  409590:	test   DWORD PTR [eax],0x3b915cfd
  409596:	aas    
  409597:	int    0x82
  409599:	aas    
  40959a:	push   cs
  40959b:	xchg   ecx,eax
  40959c:	jnp    0x40955f
  40959e:	loope  0x40959d
  4095a0:	push   ds
  4095a1:	cld    
  4095a2:	dec    edx
  4095a3:	lds    esi,FWORD PTR [bp+si-0x40]
  4095a7:	aad    0x4c
  4095a9:	dec    edi
  4095aa:	dec    esi
  4095ab:	loopne 0x40957c
  4095ad:	xchg   edi,eax
  4095ae:	inc    ebp
  4095af:	in     eax,0xca
  4095b1:	inc    esi
  4095b2:	js     0x40958e
  4095b4:	out    0x35,eax
  4095b6:	mov    ch,0x1c
  4095b8:	jo     0x409606
  4095ba:	pushf  
  4095bb:	mov    cl,0xe7
  4095bd:	daa    
  4095be:	dec    eax
  4095bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095c0:	xchg   ebp,eax
  4095c1:	in     eax,0x19
  4095c3:	jno    0x409552
  4095c5:	out    dx,al
  4095c6:	icebp  
  4095c7:	(bad)  [edx+0x46cb43a0]
  4095cd:	cld    
  4095ce:	add    al,0xa7
  4095d0:	rcl    bh,cl
  4095d2:	test   al,0xc0
  4095d4:	dec    edx
  4095d5:	push   0xff6beed0
  4095da:	mov    DWORD PTR [eax+0x4d],ebx
  4095dd:	sahf   
  4095de:	cli    
  4095df:	daa    
  4095e0:	jecxz  0x409630
  4095e2:	pop    ecx
  4095e3:	dec    esi
  4095e4:	mov    edx,0x96856b3a
  4095e9:	fistp  QWORD PTR gs:[ebx+edx*8+0x23]
  4095ee:	adc    cl,BYTE PTR [esi+0x33d471e9]
  4095f4:	mov    esp,0x1621ba26
  4095f9:	adc    eax,0xe88fbf00
  4095fe:	bound  edx,QWORD PTR [eax]
  409600:	push   esi
  409601:	adc    ah,BYTE PTR [eax]
  409603:	push   ebp
  409604:	or     bl,BYTE PTR [ebx]
  409606:	jno    0x4095ba
  409608:	in     eax,0xcb
  40960a:	lahf   
  40960b:	jp     0x40961f
  40960d:	test   al,0x3e
  40960f:	xor    ebx,DWORD PTR [ebx+0x52]
  409612:	call   0xaf0983ae
  409617:	imul   edx,DWORD PTR [ebx+0x8],0x76de6f93
  40961e:	pop    esp
  40961f:	cmp    eax,0x7125be43
  409624:	cld    
  409625:	mov    cl,0x95
  409627:	inc    ecx
  409628:	or     eax,0xdbb6c28a
  40962d:	inc    edi
  40962e:	sbb    bl,BYTE PTR [esi+0x25]
  409631:	(bad)  
  409635:	lea    eax,[ecx+0x72]
  409638:	xchg   esi,eax
  409639:	stc    
  40963a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40963b:	stc    
  40963c:	pop    eax
  40963d:	add    eax,0x6ff8d61
  409642:	jl     0x409615
  409644:	push   edx
  409645:	push   esp
  409646:	jmp    0xb563:0x470df176
  40964d:	(bad)  
  40964e:	mov    bh,0xff
  409650:	cmp    ebp,DWORD PTR [esi]
  409652:	fld    st(5)
  409654:	dec    eax
  409655:	dec    ebp
  409656:	dec    esp
  409657:	xchg   edi,eax
  409658:	cwde   
  409659:	adc    esi,edx
  40965b:	out    0xd5,al
  40965d:	xchg   esi,eax
  40965e:	push   ebx
  40965f:	dec    ebp
  409660:	not    ah
  409662:	out    0x77,al
  409664:	and    al,0x1d
  409666:	xchg   ebx,eax
  409667:	mov    ch,0xcf
  409669:	ficom  WORD PTR [eax+0x76]
  40966c:	mov    al,0x95
  40966e:	cmp    eax,0xc0fba9fc
  409673:	ja     0x4096b3
  409675:	dec    eax
  409676:	test   BYTE PTR [ebp-0x374bc60b],al
  40967c:	mov    eax,ds:0x5c8bb20d
  409681:	int3   
  409682:	dec    eax
  409683:	rcl    edx,0xbe
  409686:	imul   edi,DWORD PTR [esi],0xe51a520d
  40968c:	mov    esp,0x92bd0892
  409691:	mov    fs,WORD PTR [edi+0x57bff0ea]
  409697:	xor    eax,0xc01ae8cf
  40969c:	shl    esi,0x6f
  40969f:	jmp    0xfd7e:0xb4beca43
  4096a6:	pop    ss
  4096a7:	stos   BYTE PTR es:[edi],al
  4096a8:	into   
  4096a9:	mov    cl,0xe6
  4096ab:	stc    
  4096ac:	adc    al,0x5e
  4096ae:	or     al,0xe
  4096b0:	mov    ecx,0x8e3a6671
  4096b5:	dec    edi
  4096b6:	push   es
  4096b7:	out    dx,al
  4096b8:	jle    0x40969b
  4096ba:	arpl   WORD PTR [ecx-0x8],bx
  4096bd:	xchg   BYTE PTR [edx+0x38],al
  4096c0:	in     eax,dx
  4096c1:	shl    DWORD PTR [ebp+0xdc330fb],0x7b
  4096c8:	pop    es
  4096c9:	mov    edi,0xb68b77f1
  4096ce:	xor    DWORD PTR [eax],eax
  4096d0:	mov    bl,0xff
  4096d2:	(bad)  
  4096d3:	mov    edx,0xee167764
  4096d8:	sar    DWORD PTR [ecx],cl
  4096da:	xchg   DWORD PTR [edx],ebp
  4096dc:	sbb    DWORD PTR [ecx+0x48],0x52
  4096e0:	js     0x40969b
  4096e2:	stos   DWORD PTR es:[edi],eax
  4096e3:	xchg   esp,eax
  4096e4:	push   es
  4096e5:	xor    BYTE PTR [edx],ch
  4096e7:	jl     0x4096c2
  4096e9:	xor    ch,ch
  4096eb:	retf   0x4181
  4096ee:	pop    esp
  4096ef:	ror    edi,cl
  4096f1:	sar    BYTE PTR [edi+0x4f],0xc6
  4096f5:	mov    DWORD PTR [edi+ecx*8],0xd6159e18
  4096fc:	dec    edx
  4096fd:	inc    esp
  4096fe:	cdq    
  4096ff:	faddp  st(7),st
  409701:	xchg   esi,ebx
  409703:	adc    eax,0xc8a7ab55
  409708:	dec    ebx
  409709:	sbb    al,0x2c
  40970b:	jecxz  0x40974d
  40970d:	or     BYTE PTR [edx+0x73b86973],dl
  409713:	mov    ah,0xde
  409715:	int    0x5b
  409717:	retf   0x3f8
  40971a:	pop    ss
  40971b:	dec    ebx
  40971c:	lds    ecx,FWORD PTR [esi+0x252fc626]
  409722:	pop    es
  409723:	cmp    dh,BYTE PTR [edx]
  409725:	xchg   ebx,eax
  409726:	mov    ds:0x58492a33,eax
  40972b:	jmp    0x409733
  40972d:	(bad)  
  40972e:	dec    edx
  40972f:	pushf  
  409730:	cld    
  409731:	cli    
  409732:	int3   
  409733:	inc    edx
  409734:	push   DWORD PTR [edi]
  409736:	inc    ebx
  409737:	mov    ds:0x8393c1c5,al
  40973c:	sbb    dl,BYTE PTR [edx]
  40973e:	mov    bh,0xf4
  409740:	bound  ecx,QWORD PTR [edi+0x2b322118]
  409746:	or     cl,bh
  409748:	xchg   edi,eax
  409749:	xor    ebp,DWORD PTR [edx+0x32]
  40974c:	xchg   ecx,eax
  40974d:	sbb    dh,dh
  40974f:	sub    al,0x5e
  409751:	jns    0x40976c
  409753:	push   ebx
  409754:	pop    ebp
  409755:	mov    esp,0xde393b05
  40975a:	loop   0x40978f
  40975c:	inc    esi
  40975d:	loopne 0x40977f
  40975f:	ss pop edi
  409761:	ja     0x409744
  409763:	push   esp
  409764:	and    edi,DWORD PTR [eax-0x2e061466]
  40976a:	xchg   edi,eax
  40976b:	jle    0x4097b5
  40976d:	or     DWORD PTR [edi+eax*4+0x5a448685],esi
  409774:	sbb    DWORD PTR [eax+0x18bf1911],eax
  40977a:	xor    ch,ch
  40977c:	fldcw  WORD PTR [esi+0x5a]
  40977f:	aad    0xd7
  409781:	jp     0x409781
  409783:	scas   eax,DWORD PTR es:[edi]
  409784:	ins    BYTE PTR es:[edi],dx
  409785:	sub    BYTE PTR [edi-0x466702d5],cl
  40978b:	or     BYTE PTR [edx+0x41161ca4],bh
  409791:	(bad)  
  409792:	sub    eax,0xa50d60ce
  409797:	mov    ds:0xe4fa6f72,eax
  40979c:	daa    
  40979d:	daa    
  40979e:	adc    DWORD PTR [edi-0x5d697cc3],0x98365467
  4097a8:	push   0xced84b3c
  4097ad:	shl    eax,0x49
  4097b0:	mov    dl,0x33
  4097b2:	repz fs cmc 
  4097b5:	nop
  4097b6:	rol    DWORD PTR ds:[edi+0x51e16a49],0x32
  4097be:	dec    eax
  4097bf:	adc    BYTE PTR [ebx-0x39],0xa9
  4097c3:	jae    0x40980f
  4097c5:	inc    ebx
  4097c6:	(bad)  
  4097c7:	push   esi
  4097c8:	and    BYTE PTR [edx-0x54],0xab
  4097cc:	jecxz  0x4097d5
  4097ce:	int    0xdc
  4097d0:	sbb    al,0xca
  4097d2:	bound  edx,QWORD PTR [edx-0x6d]
  4097d5:	jmp    0x2f667024
  4097da:	push   0xba57dcce
  4097df:	inc    ebx
  4097e0:	cmp    eax,ebx
  4097e2:	adc    esi,DWORD PTR [esi-0x24]
  4097e5:	rcl    BYTE PTR [edi+0x75bde71d],1
  4097eb:	mov    ch,0x6e
  4097ed:	inc    ecx
  4097ee:	imul   edi,DWORD PTR [esi-0x2d],0xffffffae
  4097f2:	les    ecx,FWORD PTR [ecx+0x58a68bd8]
  4097f8:	out    dx,eax
  4097f9:	xchg   edi,eax
  4097fa:	push   esi
  4097fb:	mov    esi,0xe0a7e56c
  409800:	and    al,0x6
  409802:	(bad)  
  409803:	rcr    DWORD PTR [ecx],0xc8
  409806:	(bad)  
  409807:	ins    BYTE PTR es:[edi],dx
  409808:	cmp    al,0x85
  40980a:	shl    BYTE PTR [ebx+eax*4-0x7fee222a],1
  409811:	scas   eax,DWORD PTR es:[edi]
  409812:	sbb    BYTE PTR [ebx],0xbe
  409815:	push   edx
  409816:	and    al,0x65
  409818:	mov    dl,0x7c
  40981a:	pop    edi
  40981b:	fwait
  40981c:	inc    esp
  40981d:	test   al,0x71
  40981f:	fdiv   QWORD PTR [eax]
  409821:	or     ebp,esp
  409823:	mov    fs,eax
  409825:	fistp  DWORD PTR [esi]
  409827:	pop    ecx
  409828:	pusha  
  409829:	dec    ecx
  40982a:	xor    eax,0x53a8d1e2
  40982f:	push   ecx
  409830:	sbb    BYTE PTR [ecx],cl
  409832:	(bad)  
  409833:	in     al,dx
  409834:	inc    edx
  409835:	jbe    0x409861
  409837:	bound  edi,QWORD PTR [eax-0x49603835]
  40983d:	sbb    dh,BYTE PTR [ecx]
  40983f:	jg     0x40982f
  409841:	(bad)  
  409842:	nop
  409843:	fsub   DWORD PTR [ecx]
  409845:	sbb    DWORD PTR [eax+esi*1-0x1bb4ff63],eax
  40984c:	jnp    0x4098c8
  40984e:	in     eax,dx
  40984f:	jl     0x40983d
  409851:	pop    eax
  409852:	jo     0x409831
  409854:	mov    al,0x7c
  409856:	into   
  409857:	mov    eax,0x320d84a8
  40985c:	pop    ebx
  40985d:	or     al,0x52
  40985f:	lock inc esi
  409861:	mov    ecx,0xac16dc2e
  409866:	call   0xafb0df56
  40986b:	pusha  
  40986c:	jle    0x4098a8
  40986e:	(bad)
  409872:	mov    cl,0x2a
  409874:	mov    edi,0x31cf6efc
  409879:	dec    ebx
  40987a:	sub    eax,0xd247392
  409880:	xlat   BYTE PTR ds:[ebx]
  409881:	adc    BYTE PTR [ebx-0x33c0273e],dl
  409887:	ins    DWORD PTR es:[edi],dx
  409888:	adc    BYTE PTR [esi+0x5f12e99],ah
  40988e:	mov    dl,0x4c
  409890:	lock or BYTE PTR [bx+di],ah
  409894:	std    
  409895:	push   esp
  409896:	into   
  409897:	mov    dl,0xef
  409899:	aas    
  40989a:	inc    ebp
  40989b:	push   0x22acb983
  4098a0:	xchg   esp,eax
  4098a1:	dec    esp
  4098a2:	adc    eax,esp
  4098a4:	ins    DWORD PTR es:[edi],dx
  4098a5:	fdiv   st,st(0)
  4098a7:	clc    
  4098a8:	imul   esp,DWORD PTR [edi+0x50],0xa52eb078
  4098af:	adc    eax,0x51f6ea23
  4098b4:	lods   al,BYTE PTR ds:[esi]
  4098b5:	pushf  
  4098b6:	mov    BYTE PTR [esi],cl
  4098b8:	dec    ecx
  4098b9:	push   edx
  4098ba:	mov    BYTE PTR [edx-0x30],bh
  4098bd:	out    dx,eax
  4098be:	fwait
  4098bf:	mov    al,0x58
  4098c1:	mov    ch,0xcb
  4098c3:	cmp    al,0xaf
  4098c5:	cmp    ecx,edx
  4098c7:	pop    ebp
  4098c8:	jnp    0x4098dd
  4098ca:	mov    ch,0x69
  4098cc:	cld    
  4098cd:	jl     0x409931
  4098cf:	add    DWORD PTR [edi],edi
  4098d1:	enter  0x136d,0x9e
  4098d5:	and    eax,0x9121f28e
  4098da:	mov    al,bh
  4098dc:	jnp    0x4098cc
  4098de:	inc    esp
  4098df:	xor    eax,ecx
  4098e1:	pop    esp
  4098e2:	shl    BYTE PTR [ebp-0x6042789b],0x82
  4098e9:	pop    edx
  4098ea:	in     al,dx
  4098eb:	std    
  4098ec:	cmp    ebx,edi
  4098ee:	hlt    
  4098ef:	mov    esi,0xebb77126
  4098f4:	stos   DWORD PTR es:[edi],eax
  4098f5:	stos   DWORD PTR es:[edi],eax
  4098f6:	mov    ebx,0xd6897844
  4098fb:	xchg   esi,eax
  4098fc:	into   
  4098fd:	mov    bh,0x30
  4098ff:	dec    edx
  409900:	sub    al,0x58
  409902:	repnz adc DWORD PTR [ecx+0x5a875a19],ecx
  409909:	aad    0x2b
  40990b:	outs   dx,DWORD PTR ds:[esi]
  40990c:	dec    eax
  40990d:	push   eax
  40990e:	push   ds
  40990f:	and    BYTE PTR [ebx+0x25],0xda
  409913:	js     0x409958
  409915:	mov    ah,0x11
  409917:	inc    esp
  409918:	ret    0x569f
  40991b:	mov    ch,0xfe
  40991d:	lods   eax,DWORD PTR ds:[esi]
  40991e:	xchg   esp,eax
  40991f:	add    BYTE PTR [edx-0x5c],bh
  409922:	dec    edi
  409923:	loope  0x4098d6
  409925:	jbe    0x40995d
  409927:	loop   0x409910
  409929:	sub    BYTE PTR [ecx-0x4],bh
  40992c:	in     al,0x26
  40992e:	pop    ecx
  40992f:	xchg   ebx,eax
  409930:	shl    bl,cl
  409932:	jecxz  0x409980
  409934:	mov    eax,ds:0x51db5a6
  409939:	fwait
  40993a:	xchg   edx,eax
  40993b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40993c:	mov    ebx,0x72d53d75
  409941:	push   esp
  409942:	push   ecx
  409943:	fldcw  WORD PTR [ebp+0x1e7f32dd]
  409949:	push   ebp
  40994a:	outs   dx,DWORD PTR ds:[esi]
  40994b:	mov    ds:0xb74aa89f,eax
  409950:	pop    ds
  409951:	jmp    0x409962
  409953:	push   cs
  409954:	mov    eax,0xdba6b502
  409959:	inc    eax
  40995a:	mov    cl,0x12
  40995c:	jmp    0x5da5:0x2b655a74
  409963:	dec    esp
  409964:	push   ss
  409965:	and    DWORD PTR [eax+0x61a4df72],edi
  40996b:	or     edi,DWORD PTR [edx+0x3d]
  40996e:	in     eax,dx
  40996f:	xchg   ebp,eax
  409970:	in     al,dx
  409971:	div    BYTE PTR [eax]
  409973:	mov    bh,0xb5
  409975:	xchg   ebx,eax
  409976:	pop    esi
  409977:	call   0xe536d469
  40997c:	popa   
  40997d:	mov    bh,0x51
  40997f:	mov    ebp,0x3b5dffcb
  409984:	add    al,BYTE PTR [edi-0x7ae89301]
  40998a:	out    0xdf,eax
  40998c:	xor    edi,DWORD PTR [ebp+0x28536b52]
  409992:	je     0x4099a7
  409994:	xchg   ecx,eax
  409995:	nop
  409996:	jae    0x4099ba
  409998:	cmp    DWORD PTR [eax],edx
  40999a:	aaa    
  40999b:	clc    
  40999c:	and    al,0x53
  40999e:	mov    esi,0xd3218a56
  4099a3:	xchg   ebp,eax
  4099a4:	jmp    0xf415367
  4099a9:	call   0x4a55:0xfbfde852
  4099b0:	mov    ecx,0x96443071
  4099b5:	add    DWORD PTR [edi-0x76],0xffffffa7
  4099b9:	jl     0x409a1d
  4099bb:	mov    al,0x6
  4099bd:	jl     0x409a29
  4099bf:	add    ebx,0xfffffffc
  4099c2:	adc    DWORD PTR [edi],eax
  4099c4:	xchg   esi,eax
  4099c5:	sub    DWORD PTR ds:0x9673ee33,0xffffffda
  4099cc:	ret    0xe079
  4099cf:	out    dx,eax
  4099d0:	cmp    ch,0x37
  4099d3:	mov    ebx,0x34a97752
  4099d8:	dec    edi
  4099d9:	xor    BYTE PTR [edx+0x6cfc9b47],ch
  4099df:	lds    esi,FWORD PTR [esi*1+0x48560ab3]
  4099e6:	sbb    eax,0xf09084a8
  4099eb:	fs call 0xdf747a50
  4099f1:	inc    ebp
  4099f2:	sar    BYTE PTR [esi],cl
  4099f4:	add    BYTE PTR [edi-0x4c],ch
  4099f7:	fidiv  DWORD PTR [esi+0x1018c9da]
  4099fd:	mov    esp,0xb24bcbbb
  409a02:	mov    ebx,0xf04dc2ae
  409a07:	pop    eax
  409a08:	jecxz  0x40998f
  409a0a:	xor    esp,DWORD PTR [edi+0x8]
  409a0d:	jecxz  0x409a13
  409a0f:	iret   
  409a10:	mov    bl,0xb3
  409a12:	in     eax,dx
  409a13:	sub    ebx,ecx
  409a15:	add    al,BYTE PTR [ecx+0x7bfb9121]
  409a1b:	xchg   BYTE PTR [ecx],bh
  409a1d:	push   0x53
  409a1f:	sub    BYTE PTR [ebp-0xf9e2684],bh
  409a25:	sub    eax,0x9bbf7aa6
  409a2a:	inc    ecx
  409a2b:	mov    BYTE PTR [edx+ecx*1+0x2b9c7fe5],dl
  409a32:	mov    al,0xbc
  409a34:	bnd ja 0x409a32
  409a37:	pop    ss
  409a38:	pushf  
  409a39:	int3   
  409a3a:	pop    es
  409a3b:	push   ds
  409a3c:	daa    
  409a3d:	out    dx,al
  409a3e:	call   0xd31d2410
  409a43:	adc    eax,0x93ab0e99
  409a48:	sbb    ebx,DWORD PTR ds:0x8c88f021
  409a4e:	cwde   
  409a4f:	cmp    bl,BYTE PTR [ecx+0x37f2a0e8]
  409a55:	adc    ebx,edi
  409a57:	enter  0x2402,0x27
  409a5b:	inc    BYTE PTR [edx]
  409a5d:	xchg   ecx,eax
  409a5e:	ror    BYTE PTR [ebx+eax*4],cl
  409a61:	in     eax,0xdb
  409a63:	inc    edx
  409a64:	pop    es
  409a65:	loopne 0x409ad7
  409a67:	repnz mov ebx,0x7cac6ae6
  409a6d:	addr16 jl 0x409a00
  409a70:	push   esp
  409a71:	and    ah,BYTE PTR [edi+0x50cffa7f]
  409a77:	fisttp DWORD PTR [eax+ebp*2+0x9]
  409a7b:	(bad)  
  409a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a7d:	cmc    
  409a7e:	(bad)  
  409a7f:	mov    esp,0x8cb66fd8
  409a84:	xchg   edi,eax
  409a85:	popa   
  409a86:	mov    ch,0x5a
  409a88:	enter  0x55a,0x6f
  409a8c:	push   edi
  409a8d:	cld    
  409a8e:	pop    ebx
  409a8f:	mov    eax,ds:0x2c310acb
  409a95:	mov    eax,0x90b77ed0
  409a9a:	arpl   WORD PTR [edx],ax
  409a9c:	hlt    
  409a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a9e:	xchg   edi,eax
  409a9f:	mov    eax,ds:0x76b385cf
  409aa4:	dec    ecx
  409aa5:	psubw  mm7,QWORD PTR [esi+edi*8]
  409aa9:	vpshld ymm4,xmm3,xmm3
  409aae:	jnp    0x409b2f
  409ab0:	cmp    eax,0x3bfd403c
  409ab5:	sti    
  409ab6:	lods   al,BYTE PTR ds:[esi]
  409ab7:	icebp  
  409ab8:	and    BYTE PTR [edi+edx*8-0x6d],ah
  409abc:	xchg   edi,eax
  409abd:	dec    esp
  409abe:	scas   al,BYTE PTR es:[edi]
  409abf:	fdivr  st(1),st
  409ac1:	ror    BYTE PTR [edi-0x7ac3a85a],0x6e
  409ac8:	sar    DWORD PTR [esi],0xd9
  409acb:	(bad)  
  409acc:	std    
  409acd:	cmc    
  409ace:	xor    bl,BYTE PTR [ebx+0x55]
  409ad1:	dec    ebx
  409ad2:	inc    esp
  409ad3:	out    dx,eax
  409ad4:	stos   BYTE PTR es:[edi],al
  409ad5:	push   ebx
  409ad6:	or     DWORD PTR [ebp+0x10],ebp
  409ad9:	add    al,BYTE PTR [ecx+0x30]
  409adc:	adc    ebp,DWORD PTR [ecx-0x2d5841b1]
  409ae2:	scas   eax,DWORD PTR es:[edi]
  409ae3:	jl     0x409a80
  409ae5:	daa    
  409ae6:	push   eax
  409ae7:	dec    esp
  409ae8:	cld    
  409ae9:	retf   
  409aea:	or     eax,0xb2b75227
  409aef:	cmc    
  409af0:	cmp    eax,0x5de64181
  409af5:	mov    eax,0xecc22d1d
  409afa:	in     eax,0x68
  409afc:	rol    DWORD PTR ds:0x2e8e03c9,0xf3
  409b03:	stos   BYTE PTR es:[edi],al
  409b04:	jae    0x409b26
  409b06:	xchg   edx,eax
  409b07:	test   dh,0x5f
  409b0a:	mov    ebx,0xb70ee368
  409b0f:	ins    DWORD PTR es:[edi],dx
  409b10:	in     eax,0xc6
  409b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b13:	and    DWORD PTR [ecx+eax*4+0x74511240],ecx
  409b1a:	mov    WORD PTR [esi+0x42c569c1],gs
  409b20:	xor    al,BYTE PTR [ebx+ebp*2]
  409b23:	adc    ecx,DWORD PTR [edx-0x5e]
  409b26:	dec    edx
  409b27:	xor    dl,BYTE PTR ds:0x2239d3aa
  409b2d:	stos   BYTE PTR es:[edi],al
  409b2e:	loopne 0x409b36
  409b30:	pop    ebp
  409b31:	neg    dl
  409b33:	mov    esi,0xd37c6680
  409b38:	push   ecx
  409b39:	ret    
  409b3a:	(bad)  
  409b3b:	js     0x409acc
  409b3d:	sti    
  409b3e:	push   ebx
  409b3f:	dec    edi
  409b40:	and    eax,0x35853dab
  409b45:	fstp   TBYTE PTR [edi-0x71e8da2d]
  409b4b:	sub    edx,DWORD PTR [ebx-0x16]
  409b4e:	stos   DWORD PTR es:[edi],eax
  409b4f:	(bad)  
  409b50:	mov    bl,0xb9
  409b52:	mov    al,0xf
  409b54:	fdivr  st(1),st
  409b56:	jle    0x409bc3
  409b58:	in     eax,dx
  409b59:	shl    ebp,0xbe
  409b5c:	and    al,0x81
  409b5e:	pop    DWORD PTR [edi+0x1a]
  409b61:	xchg   edi,eax
  409b62:	pop    edi
  409b63:	push   ebx
  409b64:	js     0x409b5b
  409b66:	mov    ch,0xe4
  409b68:	push   edx
  409b69:	shl    DWORD PTR [ecx-0x3cab74c5],cl
  409b6f:	push   ss
  409b70:	mov    WORD PTR [esp+edi*1],es
  409b73:	sbb    DWORD PTR [ecx+0x7c],esp
  409b76:	or     cl,BYTE PTR [ecx]
  409b78:	inc    ecx
  409b79:	cmc    
  409b7a:	jmp    0x409bbd
  409b7c:	call   0xbe29:0xeec703b5
  409b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b84:	pusha  
  409b85:	or     eax,0x1461c827
  409b8a:	jne    0x409b4e
  409b8c:	(bad)  
  409b8d:	das    
  409b8e:	aas    
  409b8f:	jge    0x409b1a
  409b91:	xor    al,0x2
  409b93:	mov    ebx,0xa2e58b05
  409b98:	mov    WORD PTR [edx-0x63],es
  409b9b:	xchg   edi,eax
  409b9c:	ja     0x409bd4
  409b9e:	cmp    al,BYTE PTR [ecx-0x3abea60f]
  409ba4:	jbe    0x409b57
  409ba6:	sbb    BYTE PTR [eax-0x7e],dl
  409ba9:	mov    eax,0x44a85907
  409bae:	into   
  409baf:	jmp    0xdb5805cd
  409bb4:	mov    cl,0x60
  409bb6:	je     0x409b4f
  409bb8:	call   0x4cd8:0x808e97fe
  409bbf:	jnp    0x409b91
  409bc1:	and    edi,DWORD PTR [edi+eiz*1+0x1a]
  409bc5:	jecxz  0x409c10
  409bc7:	inc    ecx
  409bc8:	lahf   
  409bc9:	or     edx,edi
  409bcb:	loope  0x409c40
  409bcd:	loope  0x409b4f
  409bcf:	sahf   
  409bd0:	cld    
  409bd1:	pop    eax
  409bd2:	add    dh,BYTE PTR [ecx]
  409bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bd5:	js     0x409bd5
  409bd7:	ss (bad) 
  409bd9:	clc    
  409bda:	clc    
  409bdb:	push   ebx
  409bdc:	call   0xd3d1:0x6878f5e9
  409be3:	test   al,0x25
  409be5:	mov    bh,0x79
  409be7:	or     edi,DWORD PTR [ebp-0x1f]
  409bea:	je     0x409bb9
  409bec:	popf   
  409bed:	xor    ecx,edi
  409bef:	and    DWORD PTR [esi+0x19b4382d],edx
  409bf5:	sbb    DWORD PTR [si],esp
  409bf8:	jp     0x409c6c
  409bfa:	pusha  
  409bfb:	je     0x409bfd
  409bfd:	inc    esi
  409bfe:	lock adc BYTE PTR [ecx],dl
  409c01:	and    al,0xf8
  409c03:	or     DWORD PTR [eax-0x2b],esi
  409c06:	adc    DWORD PTR [edx],0xa42e73fa
  409c0c:	call   0xa81c8b41
  409c11:	xor    BYTE PTR [ecx-0x50],bl
  409c14:	fisubr WORD PTR [edi]
  409c16:	test   eax,0xb71f810a
  409c1b:	add    esp,ebx
  409c1d:	and    edx,DWORD PTR [ecx+0x77f02e7e]
  409c23:	retf   0xd1a8
  409c26:	sub    eax,DWORD PTR ds:0xe6853380
  409c2c:	jp     0x409c01
  409c2e:	or     eax,0x5fc7d4f
  409c33:	jge    0x409c3b
  409c35:	sbb    BYTE PTR [ecx*8-0x230e60d],ah
  409c3c:	ins    DWORD PTR es:[edi],dx
  409c3d:	inc    ebp
  409c3e:	sbb    DWORD PTR [eax],ebp
  409c40:	jbe    0x409c17
  409c42:	mov    ebx,0xc01e4959
  409c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c48:	icebp  
  409c49:	ret    0x64be
  409c4c:	pop    edx
  409c4d:	in     eax,0x53
  409c4f:	test   DWORD PTR [ebx+ecx*2+0x16e867a8],ebp
  409c56:	jecxz  0x409be8
  409c58:	push   es
  409c59:	xor    eax,0xf50678ed
  409c5e:	mov    ds:0xf928c2fe,al
  409c63:	adc    edi,esp
  409c65:	mov    ecx,0xa474cfc6
  409c6a:	sub    BYTE PTR [edx+ebp*2],bl
  409c6d:	es push ebx
  409c6f:	cmp    eax,ebx
  409c71:	mov    eax,0x4a8400fb
  409c76:	xor    al,0x8c
  409c78:	sar    dh,0xb3
  409c7b:	cmp    eax,0xc4ca25ff
  409c80:	xor    DWORD PTR [ebx+0x2b],ecx
  409c83:	scas   al,BYTE PTR es:[edi]
  409c84:	(bad)  
  409c85:	aas    
  409c86:	mov    al,dl
  409c88:	sbb    eax,0xdf8ae2e9
  409c8d:	adc    al,0x64
  409c8f:	sahf   
  409c90:	into   
  409c91:	adc    dl,bh
  409c93:	and    BYTE PTR [ebx+0x20],ch
  409c96:	pop    esp
  409c97:	pusha  
  409c98:	mov    ah,0x1a
  409c9a:	mov    DWORD PTR [ebp-0x64a719e5],ecx
  409ca0:	add    eax,0x9a0d8cc1
  409ca5:	dec    esi
  409ca6:	rol    BYTE PTR [edx-0x58],cl
  409ca9:	inc    edx
  409caa:	mov    ecx,0x6d75d602
  409caf:	dec    ecx
  409cb0:	mov    ah,0x60
  409cb2:	xchg   edx,eax
  409cb3:	push   edx
  409cb4:	sbb    dl,bl
  409cb6:	hlt    
  409cb7:	sbb    ebp,ecx
  409cb9:	lock or eax,0xbb210425
  409cbf:	push   esp
  409cc0:	or     eax,0x6dde75ef
  409cc5:	pop    ds
  409cc6:	pop    ss
  409cc7:	mov    ecx,0xfa54168f
  409ccc:	pop    edi
  409ccd:	pop    edi
  409cce:	xor    bh,BYTE PTR [esi-0x3b9e8acb]
  409cd4:	mov    ebp,0x16984420
  409cd9:	fcomp  DWORD PTR [eax-0x17c0268f]
  409cdf:	push   esi
  409ce0:	xor    ch,BYTE PTR [eax-0x151fd44a]
  409ce6:	shr    DWORD PTR [edx*2+0x6fd1328b],cl
  409ced:	ins    DWORD PTR es:[edi],dx
  409cee:	ficom  DWORD PTR [eax+0x7d]
  409cf1:	sbb    BYTE PTR [eax],dl
  409cf3:	push   edi
  409cf4:	and    edi,DWORD PTR [eax]
  409cf6:	jns    0x409d4d
  409cf8:	mov    ds:0x3ed19c47,eax
  409cfd:	add    ah,BYTE PTR [ebx+0x5ed61cfd]
  409d03:	pusha  
  409d04:	scas   al,BYTE PTR es:[edi]
  409d05:	sbb    DWORD PTR [ebp-0x389e94c9],esi
  409d0b:	jno    0x409d4a
  409d0d:	sbb    dh,BYTE PTR [edi]
  409d0f:	dec    ebp
  409d10:	push   es
  409d11:	push   0x90ba652c
  409d16:	jmp    0x6171fa31
  409d1b:	sub    BYTE PTR [edx-0x1f],bh
  409d1e:	xor    BYTE PTR [edi+0x2886e7c],ah
  409d24:	xchg   ecx,eax
  409d25:	or     BYTE PTR [ebp-0x51],ah
  409d28:	int3   
  409d29:	clc    
  409d2a:	cmc    
  409d2b:	mov    esi,0x8abcaf0
  409d30:	cmp    ecx,eax
  409d32:	mov    BYTE PTR [eax+0x34fe4890],dl
  409d38:	fidiv  DWORD PTR [ecx+0x730bafa5]
  409d3e:	test   al,0xe3
  409d40:	and    ebp,DWORD PTR [edi+esi*4]
  409d43:	out    dx,al
  409d44:	test   BYTE PTR [edi-0x7d44f287],bh
  409d4a:	xor    dl,BYTE PTR [ecx+edx*4-0x11]
  409d4e:	push   0x73
  409d50:	stos   BYTE PTR es:[edi],al
  409d51:	xchg   ch,ah
  409d53:	add    DWORD PTR [ecx+0x37],edx
  409d56:	cmp    bh,BYTE PTR [ecx+0x3bab5dab]
  409d5c:	or     eax,0x8a577789
  409d61:	add    ecx,DWORD PTR [ebx-0x51aeffa5]
  409d67:	lahf   
  409d68:	pusha  
  409d69:	neg    DWORD PTR [ebp-0x23107c2a]
  409d6f:	cmp    DWORD PTR [edi-0x63],esi
  409d72:	mov    al,0x76
  409d74:	jo     0x409d4a
  409d76:	push   ax
  409d78:	mov    ah,0xcc
  409d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7b:	hlt    
  409d7c:	lds    edx,FWORD PTR [ecx]
  409d7e:	lods   eax,DWORD PTR ds:[esi]
  409d7f:	cmp    BYTE PTR [edi-0x4c],dl
  409d82:	mov    dh,0x13
  409d84:	jecxz  0x409d5e
  409d86:	fnstsw WORD PTR [esi]
  409d88:	fwait
  409d89:	or     eax,0x542a0b77
  409d8e:	jecxz  0x409d45
  409d90:	sub    bl,cl
  409d92:	dec    ebp
  409d93:	daa    
  409d94:	fwait
  409d95:	mov    dl,0x6f
  409d97:	cli    
  409d98:	or     eax,0x717c345a
  409d9d:	sbb    DWORD PTR [ecx-0x66b08f74],edx
  409da3:	in     al,0x11
  409da5:	daa    
  409da6:	adc    DWORD PTR [ebp-0x65],0x88f320e9
  409dad:	jb     0x409d85
  409daf:	push   esi
  409db0:	cli    
  409db1:	adc    BYTE PTR [edi+eax*8-0x6],dl
  409db5:	adc    bl,BYTE PTR [edi-0x4a51178a]
  409dbb:	test   dl,ah
  409dbd:	sbb    eax,0x787219fe
  409dc2:	or     ah,0x91
  409dc5:	out    dx,eax
  409dc6:	neg    BYTE PTR [edx-0x1337e0b8]
  409dcc:	or     BYTE PTR [esi],ah
  409dce:	(bad)  
  409dcf:	fcom   st(3)
  409dd1:	repz xor dh,BYTE PTR [ecx]
  409dd4:	(bad)  
  409dd5:	je     0x409d5a
  409dd7:	xchg   esp,eax
  409dd8:	ret    
  409dd9:	inc    edi
  409dda:	mov    esi,0xd695707e
  409ddf:	add    eax,0x1af7531
  409de4:	(bad)  
  409de5:	lock pop esp
  409de7:	stos   DWORD PTR es:[edi],eax
  409de8:	xor    ch,0xf6
  409deb:	mov    dl,0x8b
  409ded:	and    ebx,edx
  409def:	jl     0x409dcd
  409df1:	xlat   BYTE PTR ds:[ebx]
  409df2:	sub    ah,BYTE PTR [ebx]
  409df4:	add    al,0x5b
  409df6:	inc    ebp
  409df7:	cdq    
  409df8:	loopne 0x409da5
  409dfa:	push   0x66
  409dfc:	sub    BYTE PTR [edi+0x56],0x88
  409e00:	adc    edi,DWORD PTR [eax]
  409e02:	call   0x5cf62ae6
  409e07:	push   ecx
  409e08:	das    
  409e09:	(bad)  
  409e0a:	mov    edx,0xb8253346
  409e0f:	je     0x409dc9
  409e11:	leave  
  409e12:	jmp    0x9a52:0xa3778989
  409e19:	sbb    BYTE PTR [ecx],al
  409e1b:	dec    eax
  409e1c:	cmc    
  409e1d:	(bad)  
  409e1e:	(bad)  [esi]
  409e20:	lods   al,BYTE PTR ds:[esi]
  409e21:	in     eax,dx
  409e22:	iret   
  409e23:	repz test BYTE PTR [edx+esi*2-0x37e35030],bh
  409e2b:	stos   DWORD PTR es:[edi],eax
  409e2c:	inc    esi
  409e2d:	shr    DWORD PTR [esi],cl
  409e2f:	cld    
  409e30:	push   cs
  409e31:	and    eax,0x51110313
  409e36:	ret    
  409e37:	mov    al,0x4c
  409e39:	and    DWORD PTR [ecx],ecx
  409e3b:	scas   al,BYTE PTR es:[edi]
  409e3c:	push   edi
  409e3d:	mov    edx,0xd35c8a56
  409e42:	or     BYTE PTR [ecx+0x3578437c],bh
  409e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e49:	mul    ebp
  409e4b:	in     al,0x42
  409e4d:	dec    esp
  409e4e:	pop    eax
  409e4f:	or     eax,0x4cacf696
  409e54:	jmp    0x2085e10
  409e59:	xor    BYTE PTR [edx+0x3ac2c179],cl
  409e5f:	dec    esi
  409e60:	pop    ebp
  409e61:	nop
  409e62:	jp     0x409eb0
  409e64:	mov    WORD PTR [edi+ecx*4],?
  409e67:	test   eax,0x9379e40
  409e6c:	loope  0x409ea6
  409e6e:	xchg   edi,eax
  409e6f:	test   eax,0x2778fdc5
  409e74:	xchg   ecx,eax
  409e75:	cdq    
  409e76:	ja     0x409e91
  409e78:	jnp    0x409ea8
  409e7a:	inc    eax
  409e7b:	stc    
  409e7c:	ds jo  0x409e56
  409e7f:	push   ds
  409e80:	xchg   ebx,eax
  409e81:	imul   esi,DWORD PTR [ebx+0x58],0xffffff89
  409e85:	xor    BYTE PTR [edx+0x5fcf03cc],dl
  409e8b:	or     ecx,DWORD PTR [eax+0x52]
  409e8e:	jns    0x409e68
  409e90:	inc    edi
  409e91:	paddq  mm4,QWORD PTR [ecx+0x23]
  409e95:	lds    esi,FWORD PTR [ebx]
  409e97:	xchg   ecx,eax
  409e98:	outs   dx,DWORD PTR ds:[esi]
  409e99:	cli    
  409e9a:	push   ds
  409e9b:	sub    al,0xf7
  409e9d:	call   0xe276b6da
  409ea2:	jmp    0x1164:0xb8fcb75d
  409ea9:	mov    esi,DWORD PTR [eax+0x45]
  409eac:	xchg   esi,eax
  409ead:	xchg   ecx,eax
  409eae:	leave  
  409eaf:	imul   esp,DWORD PTR [edi-0x46],0x25f9b9be
  409eb6:	shl    BYTE PTR [ebx-0x67],cl
  409eb9:	add    al,0xd2
  409ebb:	sbb    BYTE PTR [ebp+ebp*2-0x1f716f7e],ch
  409ec2:	inc    ecx
  409ec3:	push   ss
  409ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec5:	sbb    DWORD PTR [ebx-0x73],ebx
  409ec8:	les    ebx,FWORD PTR [ecx]
  409eca:	cmp    ah,cl
  409ecc:	fimul  WORD PTR [esi-0x4f]
  409ecf:	adc    ecx,ebx
  409ed1:	ds stc 
  409ed3:	mov    ebx,0x8ffa7be9
  409ed8:	sbb    BYTE PTR [edx],ah
  409eda:	xchg   ecx,eax
  409edb:	sbb    DWORD PTR [ecx+0x75],0xfffffffc
  409edf:	fadd   DWORD PTR [edi]
  409ee1:	mov    ah,0xf
  409ee3:	cmp    DWORD PTR ds:0xf0cfdfda,0x76491d24
  409eed:	mov    WORD PTR [ecx-0x16],cs
  409ef0:	xor    ebx,edi
  409ef2:	jl     0x409eaf
  409ef4:	pop    ebp
  409ef5:	fwait
  409ef6:	mov    WORD PTR [eax],cs
  409ef8:	push   ds
  409ef9:	addr16 sbb al,0x9f
  409efc:	cli    
  409efd:	pop    ds
  409efe:	pushf  
  409eff:	rcl    DWORD PTR [ebx],cl
  409f01:	dec    esp
  409f02:	push   es
  409f03:	fs popa 
  409f05:	sbb    DWORD PTR ds:0x70f6b98f,edi
  409f0b:	or     cl,0x3d
  409f0e:	data16 jnp 0x409f86
  409f11:	jp     0x409f12
  409f13:	in     al,dx
  409f14:	cld    
  409f15:	inc    esp
  409f16:	(bad)  
  409f17:	bound  eax,QWORD PTR [edx+0x6b]
  409f1a:	test   BYTE PTR [ebp+eiz*4-0x75],dh
  409f1e:	or     edx,esi
  409f20:	clc    
  409f21:	enter  0xfcc9,0x1d
  409f25:	in     al,dx
  409f26:	loop   0x409fa6
  409f28:	cmp    DWORD PTR [ebx],0x79bf8789
  409f2e:	adc    DWORD PTR [edx+edi*2+0x7a],ebx
  409f32:	mov    edi,0xf739d19c
  409f37:	aas    
  409f38:	push   edi
  409f39:	mov    WORD PTR [ebp+eiz*1-0x1e],?
  409f3d:	lea    edi,gs:[edx+0x2fa74574]
  409f44:	add    al,0x78
  409f46:	adc    DWORD PTR [edi-0x2dde3b97],edx
  409f4c:	das    
  409f4d:	addr16 dec eax
  409f4f:	pop    es
  409f50:	fmul   st(6),st
  409f52:	enter  0xce4f,0x24
  409f56:	push   eax
  409f57:	fisttp WORD PTR [ecx-0x11]
  409f5a:	bound  eax,QWORD PTR [eax-0x31fb6a9c]
  409f60:	jmp    0xecfd:0xcb6a0a45
  409f67:	les    esi,FWORD PTR [ecx+edi*4]
  409f6a:	jecxz  0x409fd0
  409f6c:	aaa    
  409f6d:	adc    al,0x27
  409f6f:	mov    eax,ds:0x57bde69a
  409f74:	push   0xffffff84
  409f76:	cmp    BYTE PTR fs:[esi-0x71],0xf9
  409f7b:	fld    QWORD PTR [esi-0x10]
  409f7e:	in     al,dx
  409f7f:	mov    dh,0xa5
  409f81:	cmp    eax,0xc3dfd27a
  409f86:	and    BYTE PTR [eax+0x5132c47e],dl
  409f8c:	bound  ebx,QWORD PTR [edi+0x34e4c1ae]
  409f92:	and    al,0x6f
  409f94:	sbb    al,0xc5
  409f96:	sti    
  409f97:	jp     0x409fe9
  409f99:	add    BYTE PTR [edi-0x44],ah
  409f9c:	popf   
  409f9d:	dec    ebx
  409f9e:	jle    0x40a011
  409fa0:	cmp    al,0xc2
  409fa2:	add    al,0x9f
  409fa4:	pushf  
  409fa5:	cmc    
  409fa6:	fst    DWORD PTR [eax+ebp*2]
  409fa9:	iret   
  409faa:	enter  0x316c,0x1e
  409fae:	outs   dx,BYTE PTR ds:[esi]
  409faf:	pusha  
  409fb0:	ss pop ds
  409fb2:	jmp    0xf84b90c5
  409fb7:	imul   edi,DWORD PTR ds:0xf1ec96a9,0x3db92a97
  409fc1:	sar    edx,cl
  409fc3:	hlt    
  409fc4:	dec    ecx
  409fc5:	std    
  409fc6:	inc    edi
  409fc7:	jbe    0x409f4f
  409fc9:	inc    ebp
  409fca:	imul   edi,DWORD PTR [ebp+0x363df64f],0xc0ff2801
  409fd4:	inc    esi
  409fd5:	or     ch,ch
  409fd7:	xor    ebx,ebx
  409fd9:	add    eax,0xb6d3eb23
  409fde:	mov    ch,0xd9
  409fe0:	sbb    ecx,esi
  409fe2:	push   es
  409fe3:	imul   esi,edx,0x5a
  409fe6:	mov    bh,BYTE PTR [edx]
  409fe8:	jb     0x409fa5
  409fea:	add    edi,ebx
  409fec:	rcl    BYTE PTR [esi],0x10
  409fef:	sub    eax,0x75f62cf6
  409ff4:	ins    BYTE PTR es:[edi],dx
  409ff5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409ff7:	add    cl,BYTE PTR [ebp+0x1c]
  409ffa:	mov    ds,eax
  409ffc:	sbb    eax,0xab529208
  40a001:	in     al,dx
  40a002:	xchg   cl,bh
  40a004:	lock nop
  40a006:	(bad)  
  40a007:	jmp    0xcce27f82
  40a00c:	mov    ebp,0xbfde15e3
  40a011:	(bad)  
  40a012:	pop    eax
  40a013:	and    DWORD PTR [ebx],0xffffffce
  40a016:	or     DWORD PTR [ecx-0x5f],eax
  40a019:	loopne 0x409fe6
  40a01b:	int3   
  40a01c:	xchg   ebp,eax
  40a01d:	outs   dx,BYTE PTR ds:[esi]
  40a01e:	mov    esp,0x57c9efed
  40a023:	adc    esi,esp
  40a025:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a027:	in     eax,0x90
  40a029:	mov    dh,0x26
  40a02b:	mov    WORD PTR [ebp+0x29],gs
  40a02e:	ins    BYTE PTR es:[edi],dx
  40a02f:	push   eax
  40a030:	push   ebx
  40a031:	and    eax,0x4bd9fea1
  40a036:	jne    0x409fbe
  40a038:	stos   DWORD PTR es:[edi],eax
  40a039:	in     al,dx
  40a03a:	aad    0x37
  40a03c:	jge    0x40a02d
  40a03e:	in     al,dx
  40a03f:	(bad)  
  40a040:	aam    0x48
  40a042:	call   0x8d5bfb26
  40a047:	adc    bh,ah
  40a049:	test   DWORD PTR [eax+0x4f156e28],ebx
  40a04f:	jns    0x40a04a
  40a051:	pusha  
  40a052:	cs jo  0x409feb
  40a055:	mov    ch,0x2d
  40a057:	bswap  edx
  40a059:	pop    edx
  40a05a:	repz sbb al,0x67
  40a05d:	sbb    ebp,DWORD PTR [ebx-0x157ba483]
  40a063:	int3   
  40a064:	add    eax,0xe9de863c
  40a069:	dec    edx
  40a06a:	adc    DWORD PTR [eax+0x4ff89983],edi
  40a070:	pop    esp
  40a071:	out    0xbc,al
  40a073:	(bad)  
  40a075:	test   DWORD PTR [eax-0xf],ebp
  40a078:	push   cs
  40a079:	sub    DWORD PTR [ebp-0x6e15e8b],edi
  40a07f:	pop    ebp
  40a080:	inc    ebx
  40a081:	adc    al,0x83
  40a083:	mov    esi,0x33840f9a
  40a088:	xchg   edx,eax
  40a089:	sub    al,bh
  40a08b:	aaa    
  40a08c:	ror    BYTE PTR [edx-0xa],1
  40a08f:	fsubr  QWORD PTR [edi-0x7d]
  40a092:	mov    edi,DWORD PTR [esi-0x38]
  40a095:	out    dx,al
  40a096:	loop   0x40a0b3
  40a098:	adc    cl,cl
  40a09a:	sub    bh,BYTE PTR [esi-0x20046c4c]
  40a0a0:	xor    dl,BYTE PTR [edi+0x4e91546c]
  40a0a6:	xor    ch,bh
  40a0a8:	ficomp DWORD PTR [ebp-0x50]
  40a0ab:	sub    al,0x76
  40a0ad:	arpl   ax,dx
  40a0af:	sbb    BYTE PTR [edi-0x2b],dh
  40a0b2:	push   0xffffffb2
  40a0b4:	jl     0x40a0de
  40a0b6:	out    0x4e,al
  40a0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0b9:	cli    
  40a0ba:	rcr    DWORD PTR [ebx],1
  40a0bc:	cs mov esi,0xd22d897c
  40a0c2:	(bad)  
  40a0c3:	arpl   ax,bx
  40a0c5:	xchg   ecx,eax
  40a0c6:	iret   
  40a0c7:	adc    DWORD PTR ds:0x785ff0b3,ecx
  40a0cd:	adc    cl,BYTE PTR [ebx+ecx*2-0x7c]
  40a0d1:	std    
  40a0d2:	ror    BYTE PTR [esi],1
  40a0d4:	dec    edx
  40a0d5:	aaa    
  40a0d6:	sub    al,BYTE PTR [ecx+eax*1-0x60]
  40a0da:	icebp  
  40a0db:	sbb    eax,0xb681e41c
  40a0e0:	or     dl,dl
  40a0e2:	fild   QWORD PTR [edi+0x6c]
  40a0e5:	es in  eax,dx
  40a0e7:	ja     0x40a0b6
  40a0e9:	adc    eax,0xcede04fa
  40a0ee:	jnp    0x40a16a
  40a0f0:	fs xchg ecx,eax
  40a0f2:	enter  0xb812,0x5d
  40a0f6:	add    al,0xe
  40a0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f9:	adc    DWORD PTR [edi],ecx
  40a0fb:	or     ecx,DWORD PTR [edi+esi*2+0x12]
  40a0ff:	cmp    al,0x8d
  40a101:	lods   al,BYTE PTR ds:[esi]
  40a102:	adc    dl,BYTE PTR [eax+0x7c768fb7]
  40a108:	das    
  40a109:	sub    al,0xd8
  40a10b:	adc    ah,BYTE PTR [ebx+0x66]
  40a10e:	pop    ebp
  40a10f:	or     eax,0x161628c9
  40a114:	add    edi,DWORD PTR [ecx]
  40a116:	cli    
  40a117:	push   edi
  40a118:	inc    ebp
  40a119:	xchg   esi,eax
  40a11a:	and    BYTE PTR [edx+0x37ecbc9a],cl
  40a120:	push   esp
  40a121:	sub    cl,BYTE PTR [edx]
  40a123:	mov    BYTE PTR [ebp-0x4f],cl
  40a126:	dec    ecx
  40a127:	outs   dx,BYTE PTR ds:[esi]
  40a128:	push   esp
  40a129:	push   es
  40a12a:	mov    esi,0xb524722f
  40a12f:	mov    BYTE PTR [ebp+0x4ce6d385],bh
  40a135:	lods   al,BYTE PTR ds:[esi]
  40a136:	and    bh,cl
  40a138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a139:	inc    ebp
  40a13a:	mov    dh,0x30
  40a13c:	mov    al,ds:0x983ffbd7
  40a141:	addr16 pop esi
  40a143:	push   edx
  40a144:	inc    ecx
  40a145:	scas   al,BYTE PTR es:[edi]
  40a146:	out    dx,al
  40a147:	mov    ah,0xb8
  40a149:	jb     0x40a165
  40a14b:	and    cl,al
  40a14d:	pop    es
  40a14e:	mov    eax,0xe8cc54a9
  40a153:	sub    edx,0xa0f6ba8a
  40a159:	into   
  40a15a:	cs je  0x40a1a8
  40a15d:	sub    al,0xc
  40a15f:	ret    
  40a160:	and    eax,0x4bd14d1c
  40a165:	loop   0x40a13d
  40a167:	arpl   WORD PTR es:[edx],ax
  40a16a:	sub    al,0x3a
  40a16c:	lods   eax,DWORD PTR ds:[esi]
  40a16d:	aaa    
  40a16e:	sbb    al,0xb
  40a170:	outs   dx,BYTE PTR ds:[esi]
  40a171:	(bad)  
  40a172:	xor    al,0x97
  40a174:	or     edi,DWORD PTR [ecx-0x352256d1]
  40a17a:	jle    0x40a108
  40a17c:	fild   QWORD PTR [esp+esi*1-0x4777fa08]
  40a183:	jmp    0xbe40:0x2f35a6ed
  40a18a:	fnstsw WORD PTR [ebx]
  40a18c:	in     eax,0x9e
  40a18e:	fs je  0x40a169
  40a191:	addr16 fs sbb eax,0xfe1fa3b4
  40a198:	and    DWORD PTR [edx-0x4f],edi
  40a19b:	fcom   st(2)
  40a19d:	out    0x94,al
  40a19f:	dec    ebx
  40a1a0:	mov    esp,0x3afdb62d
  40a1a5:	and    BYTE PTR [edx],bl
  40a1a7:	push   ecx
  40a1a8:	xor    al,0x8
  40a1aa:	rcl    BYTE PTR [eax-0x4d],0x36
  40a1ae:	repz pop edi
  40a1b0:	lods   eax,DWORD PTR ds:[esi]
  40a1b1:	mov    ss,WORD PTR [ebx-0x41]
  40a1b4:	jae    0x40a1d6
  40a1b6:	pusha  
  40a1b7:	or     BYTE PTR [esi-0x3068f9f3],bl
  40a1bd:	push   ebp
  40a1be:	inc    edx
  40a1bf:	add    BYTE PTR [ecx],ch
  40a1c1:	sub    DWORD PTR ds:[eax-0x31],eax
  40a1c5:	cmp    al,0x65
  40a1c7:	sbb    ebp,DWORD PTR [ebx-0x71]
  40a1ca:	sub    ah,BYTE PTR [edi]
  40a1cc:	popa   
  40a1cd:	mov    ecx,DWORD PTR [edx-0x425eb8cb]
  40a1d3:	scas   al,BYTE PTR es:[edi]
  40a1d4:	jne    0x40a216
  40a1d6:	inc    esp
  40a1d7:	add    ah,al
  40a1d9:	adc    BYTE PTR [eax+0x51],0x4d
  40a1dd:	fs sahf 
  40a1df:	loop   0x40a241
  40a1e1:	std    
  40a1e2:	sti    
  40a1e3:	jo     0x40a1f0
  40a1e5:	pop    esp
  40a1e6:	jbe    0x40a212
  40a1e8:	std    
  40a1e9:	rol    DWORD PTR [eax],0x20
  40a1ec:	ret    
  40a1ed:	in     al,dx
  40a1ee:	sbb    BYTE PTR [edx+0x5d],ah
  40a1f1:	ss inc esi
  40a1f3:	lea    esp,[edi]
  40a1f5:	or     eax,0xc8d71545
  40a1fa:	inc    ecx
  40a1fb:	jp     0x40a21e
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	add    ch,ch
  40a5ea:	cld    
  40a5eb:	inc    ecx
  40a5ec:	daa    
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	mov    edx,0xe98e0c35
  40a5f9:	inc    esp
  40a5fa:	add    eax,0x79573e29
  40a5ff:	push   eax
  40a600:	and    edi,edx
  40a602:	(bad)  
  40a604:	in     eax,0xef
  40a606:	push   ebx
  40a607:	sbb    cl,BYTE PTR [esi+0x77]
  40a60a:	xor    DWORD PTR [eax-0x5e],0x7a7e1122
  40a611:	add    ebp,DWORD PTR [edx-0x738bb772]
  40a617:	shr    DWORD PTR [ebx],cl
  40a619:	or     al,0xfa
  40a61b:	jb     0x40a64f
  40a61d:	ret    0x6942
  40a620:	lods   al,BYTE PTR ds:[esi]
  40a621:	xor    eax,0xf360172a
  40a626:	fisubr WORD PTR [ecx-0x4074679d]
  40a62c:	mov    ecx,DWORD PTR [esi+0x37ef882a]
  40a632:	push   esp
  40a633:	mov    esi,0x406e253d
  40a638:	add    BYTE PTR ds:0x519533cb,cl
  40a63e:	jmp    0xec48e62b
  40a643:	xchg   ecx,eax
  40a644:	mov    ch,0x49
  40a646:	dec    ebx
  40a647:	jl     0x40a68e
  40a649:	leave  
  40a64a:	and    dh,BYTE PTR [ebx+edi*2+0x2d865c31]
  40a651:	push   cs
  40a652:	bound  ebx,QWORD PTR [esi]
  40a654:	pusha  
  40a655:	in     eax,dx
  40a656:	fcomp  DWORD PTR [edx+0x4b]
  40a659:	xchg   DWORD PTR [esi],esp
  40a65b:	push   ebp
  40a65c:	jecxz  0x40a672
  40a65e:	loop   0x40a64c
  40a660:	cmp    DWORD PTR [ebx+0xb],edx
  40a663:	jge    0x40a617
  40a665:	ja     0x40a654
  40a667:	mov    bl,0xf2
  40a669:	jmp    0x1290e4d2
  40a66e:	sbb    ah,dl
  40a670:	mov    BYTE PTR [ecx+ebx*8],0xae
  40a674:	add    eax,0x1a0e9b2a
  40a679:	push   0x19936243
  40a67e:	int3   
  40a67f:	test   BYTE PTR [ecx],ch
  40a681:	outs   dx,BYTE PTR ds:[esi]
  40a682:	adc    esi,esp
  40a684:	xchg   esp,eax
  40a685:	push   es
  40a686:	cmp    BYTE PTR [edi-0x7dec4517],0xe8
  40a68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a68e:	or     DWORD PTR [ecx+eiz*1],esi
  40a691:	mov    ah,0x5c
  40a693:	pop    ds
  40a694:	scas   eax,DWORD PTR es:[edi]
  40a695:	lds    esp,FWORD PTR [ecx]
  40a697:	push   esp
  40a698:	fist   DWORD PTR [ebp+ecx*1-0x7e]
  40a69c:	sub    esp,DWORD PTR [edx+0x6]
  40a69f:	dec    edx
  40a6a0:	cwde   
  40a6a1:	pop    es
  40a6a2:	lock cmp BYTE PTR [edi-0x4ec3fcb1],bh
  40a6a9:	push   eax
  40a6aa:	xchg   edi,eax
  40a6ab:	jb     0x40a714
  40a6ad:	push   ebx
  40a6ae:	(bad)  
  40a6af:	mov    al,0xf1
  40a6b1:	dec    ebp
  40a6b2:	call   0x41fe:0x6a7ccb7d
  40a6b9:	push   esp
  40a6ba:	pop    ds
  40a6bb:	xchg   edi,eax
  40a6bc:	sahf   
  40a6bd:	loop   0x40a6c0
  40a6bf:	sub    eax,0x462eb744
  40a6c4:	das    
  40a6c5:	test   eax,0xcf5f206c
  40a6ca:	(bad)  
  40a6cb:	dec    ecx
  40a6cc:	retf   
  40a6cd:	jl     0x40a662
  40a6cf:	xor    al,0xc4
  40a6d1:	and    eax,0xf65fe0e6
  40a6d6:	ins    DWORD PTR es:[edi],dx
  40a6d7:	and    bl,ah
  40a6d9:	fxch   st(2)
  40a6db:	call   0x67e9667b
  40a6e0:	add    dl,BYTE PTR [ecx]
  40a6e2:	pop    ebx
  40a6e3:	call   0xe32e:0xf18b16b6
  40a6ea:	test   al,0x94
  40a6ec:	push   ss
  40a6ed:	mov    ds:0x6424b127,al
  40a6f2:	jmp    0x40a678
  40a6f4:	push   0x574abcf4
  40a6f9:	cmc    
  40a6fa:	xchg   esi,eax
  40a6fb:	mov    ecx,0x95641cf7
  40a700:	and    eax,DWORD PTR [esp+ecx*8]
  40a703:	push   ebx
  40a704:	mov    ebp,0xbb1b7deb
  40a709:	fiadd  DWORD PTR [eax-0x3a8ddc0f]
  40a70f:	jp     0x40a703
  40a711:	arpl   WORD PTR [esi+0x42],bp
  40a714:	dec    ebp
  40a715:	shl    DWORD PTR [esi],0xac
  40a718:	xor    eax,DWORD PTR [esi+0x2b]
  40a71b:	and    al,0xf8
  40a71d:	enter  0xa75d,0x7e
  40a721:	imul   edx,DWORD PTR [edx-0x67],0xffffffb8
  40a725:	cmp    bh,BYTE PTR [edi]
  40a727:	mov    ebp,0xb6258017
  40a72c:	les    esp,FWORD PTR [edx+0x50f496ac]
  40a732:	and    al,BYTE PTR [ebx]
  40a734:	in     eax,0x84
  40a736:	sbb    eax,0x9df7b2a0
  40a73b:	clc    
  40a73c:	lahf   
  40a73d:	mov    ebp,0xa0d47733
  40a742:	pop    ecx
  40a743:	or     esp,DWORD PTR [ebx+0x36]
  40a746:	or     bl,BYTE PTR [edx+0x57]
  40a749:	pusha  
  40a74a:	push   esp
  40a74b:	mov    esp,0xe3d33f4c
  40a750:	sahf   
  40a751:	jg     0x40a789
  40a753:	inc    ebp
  40a754:	std    
  40a755:	inc    edx
  40a756:	pop    ds
  40a757:	inc    eax
  40a758:	in     al,dx
  40a759:	push   edi
  40a75a:	add    ebp,DWORD PTR [ebp-0x2a]
  40a75d:	cmp    al,0x7b
  40a75f:	pcmpeqw mm1,QWORD PTR [eax+0x21f4caca]
  40a766:	push   ds
  40a767:	(bad)  
  40a768:	pusha  
  40a769:	pusha  
  40a76a:	shl    BYTE PTR [ecx+0x2f75e691],0x63
  40a771:	cmp    al,0xf8
  40a773:	test   eax,0x71ff8e29
  40a778:	or     eax,0x1567ef91
  40a77d:	std    
  40a77e:	pop    ds
  40a77f:	mov    bl,0xf7
  40a781:	pushf  
  40a782:	xchg   esi,eax
  40a783:	pusha  
  40a784:	mov    dl,0x76
  40a786:	xchg   edx,eax
  40a787:	push   esi
  40a788:	or     BYTE PTR [esi+0x4982e63d],al
  40a78e:	jmp    0x40a73a
  40a790:	push   esp
  40a791:	dec    edx
  40a792:	dec    esp
  40a793:	and    al,0x44
  40a795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a797:	dec    edx
  40a798:	push   esp
  40a799:	add    cl,BYTE PTR [esi]
  40a79b:	gs cdq 
  40a79d:	add    BYTE PTR [ecx],ch
  40a79f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7a0:	mov    dl,ah
  40a7a2:	mov    cl,0xc4
  40a7a4:	jae    0x40a7f2
  40a7a6:	repz sub ch,BYTE PTR [edx+0x18]
  40a7aa:	test   eax,0x91e1d764
  40a7af:	pop    edi
  40a7b0:	ins    DWORD PTR es:[edi],dx
  40a7b1:	cdq    
  40a7b2:	psrlw  mm2,QWORD PTR [esi-0x7]
  40a7b6:	xchg   ebp,eax
  40a7b7:	nop
  40a7b8:	aad    0x1a
  40a7ba:	jno    0x40a77f
  40a7bc:	mov    dh,0x87
  40a7be:	in     eax,dx
  40a7bf:	fst    DWORD PTR [ecx-0x6f]
  40a7c2:	out    0x42,al
  40a7c4:	jmp    0x174c:0x70c304e2
  40a7cb:	xlat   BYTE PTR ds:[ebx]
  40a7cc:	scas   eax,DWORD PTR es:[edi]
  40a7cd:	fs shl bl,0x74
  40a7d1:	or     BYTE PTR [ecx+0x42b439ee],bl
  40a7d7:	pcmpgtw mm3,QWORD PTR [esi+0x6d]
  40a7db:	or     al,0xfc
  40a7dd:	add    edx,DWORD PTR [ecx]
  40a7df:	pushf  
  40a7e0:	int3   
  40a7e1:	pop    esi
  40a7e2:	inc    DWORD PTR [eax-0x66]
  40a7e5:	das    
  40a7e6:	jg     0x40a7a3
  40a7e8:	ins    DWORD PTR es:[edi],dx
  40a7e9:	xor    DWORD PTR [esi],edx
  40a7eb:	mov    edi,0xd8372793
  40a7f0:	xor    DWORD PTR [edi],ebx
  40a7f2:	repnz pop esi
  40a7f4:	push   esp
  40a7f5:	jmp    0xebb4677c
  40a7fa:	xchg   esp,eax
  40a7fb:	pop    eax
  40a7fc:	jns    0x40a7a8
  40a7fe:	es sbb bl,al
  40a801:	sub    DWORD PTR ds:0xd8807ff1,edx
  40a807:	xchg   ecx,eax
  40a808:	leave  
  40a809:	cli    
  40a80a:	add    al,0xc1
  40a80c:	jo     0x40a7ff
  40a80e:	xlat   BYTE PTR ds:[ebx]
  40a80f:	lock out dx,eax
  40a811:	sub    BYTE PTR [eax-0x14],bh
  40a814:	std    
  40a815:	adc    esp,esp
  40a817:	retf   0x8ed3
  40a81a:	pop    ds
  40a81b:	jno    0x40a7d0
  40a81d:	int3   
  40a81e:	stos   BYTE PTR es:[edi],al
  40a81f:	call   0x7b25479c
  40a824:	jp     0x40a885
  40a826:	ror    al,1
  40a828:	call   DWORD PTR ds:0x2eb97f56
  40a82e:	adc    al,0x97
  40a830:	aad    0x4
  40a832:	inc    ebx
  40a833:	sar    BYTE PTR [edi+0x248be792],1
  40a839:	dec    ebp
  40a83a:	inc    edx
  40a83b:	cmp    eax,0xf453f0e
  40a840:	int3   
  40a841:	lea    ebp,[ecx+0x4]
  40a844:	ds inc ecx
  40a846:	push   edi
  40a847:	dec    esp
  40a848:	iret   
  40a849:	push   eax
  40a84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a84b:	stos   BYTE PTR es:[edi],al
  40a84c:	ins    DWORD PTR es:[edi],dx
  40a84d:	xchg   esi,eax
  40a84e:	mov    dl,0xbc
  40a850:	inc    ebp
  40a851:	push   eax
  40a852:	scas   eax,DWORD PTR es:[edi]
  40a853:	xchg   ebx,eax
  40a854:	and    dh,bh
  40a856:	int3   
  40a857:	mov    ebx,0xcdb7ba19
  40a85c:	jo     0x40a86d
  40a85e:	(bad)  
  40a85f:	adc    ah,BYTE PTR [ecx+0x62]
  40a862:	cmp    al,0x4f
  40a864:	mov    dl,0x32
  40a866:	ja     0x40a8e1
  40a868:	lds    edi,FWORD PTR [ebp+0x23]
  40a86b:	push   edx
  40a86c:	or     al,ah
  40a86e:	icebp  
  40a86f:	mov    dl,BYTE PTR [esp]
  40a872:	xchg   BYTE PTR [ebx+0x2d044989],ah
  40a878:	loope  0x40a8bb
  40a87a:	mov    ds:0x2343a933,eax
  40a87f:	cdq    
  40a880:	or     al,0xd6
  40a882:	push   esi
  40a883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a884:	jg     0x40a81e
  40a886:	arpl   WORD PTR [edx-0x4],sp
  40a889:	adc    al,0xb5
  40a88b:	adc    eax,0x20eeb851
  40a890:	sbb    eax,0x174ffe2
  40a895:	mov    esi,0x36bfa452
  40a89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a89b:	add    eax,0x7643b4a0
  40a8a0:	push   ds
  40a8a1:	mov    ?,ecx
  40a8a3:	jge    0x40a903
  40a8a5:	add    eax,eax
  40a8a7:	mov    dh,0x38
  40a8a9:	xchg   al,bl
  40a8ab:	hlt    
  40a8ac:	pop    es
  40a8ad:	jno    0x40a874
  40a8af:	call   0x5a13:0xe6d08913
  40a8b6:	sar    DWORD PTR [edx-0x5c],cl
  40a8b9:	dec    ecx
  40a8ba:	dec    esp
  40a8bb:	daa    
  40a8bc:	xchg   ebp,eax
  40a8bd:	adc    al,0x3d
  40a8bf:	mov    ebx,0xaa42c3bf
  40a8c4:	adc    eax,0xbd517427
  40a8c9:	jle    0x40a923
  40a8cb:	arpl   WORD PTR [edi-0x42],dx
  40a8ce:	je     0x40a915
  40a8d0:	or     BYTE PTR [eax-0x17d31df4],ch
  40a8d6:	sub    eax,DWORD PTR [eax+0x7d]
  40a8d9:	sbb    BYTE PTR [esi+0x22],al
  40a8dc:	xor    edx,DWORD PTR ds:0x43997258
  40a8e2:	xor    esi,eax
  40a8e4:	dec    esp
  40a8e5:	cdq    
  40a8e6:	mov    ds:0xe91d07a4,eax
  40a8eb:	add    ebp,eax
  40a8ed:	xor    eax,0xe9c87e0b
  40a8f2:	mov    eax,ds:0xcbd08211
  40a8f7:	fmul   QWORD PTR [ecx+0x7572624e]
  40a8fd:	in     al,dx
  40a8fe:	mov    dl,0x27
  40a900:	add    dl,BYTE PTR [eax]
  40a902:	jp     0x40a959
  40a904:	mov    esi,0x1eb3287b
  40a909:	dec    ebx
  40a90a:	mov    ebx,edx
  40a90c:	xchg   ecx,eax
  40a90d:	adc    DWORD PTR [esi+0x47],0xbeaf308d
  40a914:	call   0x30012bb8
  40a919:	sub    bh,cl
  40a91b:	je     0x40a959
  40a91d:	jns    0x40a994
  40a91f:	add    edx,esp
  40a921:	pushf  
  40a922:	leave  
  40a923:	sti    
  40a924:	jg     0x40a989
  40a926:	and    al,BYTE PTR [edi]
  40a928:	in     eax,dx
  40a929:	enter  0xea,0xda
  40a92d:	rcl    BYTE PTR [esi+0x6f],1
  40a930:	jp     0x40a975
  40a932:	(bad)  
  40a933:	pusha  
  40a934:	cmp    eax,0x1b715c22
  40a939:	dec    ebx
  40a93a:	cmc    
  40a93b:	gs add eax,0x16284be7
  40a941:	sti    
  40a942:	xchg   edx,eax
  40a943:	xchg   edx,eax
  40a944:	dec    ebp
  40a945:	sti    
  40a946:	psadbw mm6,QWORD PTR [eax]
  40a949:	mov    bl,0x7e
  40a94b:	jae    0x40a8ee
  40a94d:	and    BYTE PTR [edx],0xdd
  40a950:	xchg   esi,eax
  40a951:	repz sub eax,0x2ef0600b
  40a957:	in     eax,dx
  40a958:	leave  
  40a959:	in     eax,0xc0
  40a95b:	fsub   st,st(2)
  40a95d:	shr    BYTE PTR [esi+0x29],cl
  40a960:	or     DWORD PTR [ebx+0x8b94454],esi
  40a966:	jnp    0x40a8f1
  40a968:	cdq    
  40a969:	rcr    esi,0x41
  40a96c:	pop    ecx
  40a96d:	rcl    BYTE PTR [esi+0x41],1
  40a970:	pusha  
  40a971:	mov    edx,0x75f70d48
  40a976:	fild   DWORD PTR [eax]
  40a978:	pop    edi
  40a979:	sahf   
  40a97a:	dec    esi
  40a97b:	sbb    BYTE PTR ds:0x78a0cc65,al
  40a981:	xor    esi,DWORD PTR [ebx]
  40a983:	mov    ?,WORD PTR [eax-0x376a80e]
  40a989:	xchg   ebp,eax
  40a98a:	sti    
  40a98b:	mov    ebp,edx
  40a98d:	hlt    
  40a98e:	xchg   DWORD PTR [eax+0x5],ebp
  40a991:	push   cs
  40a992:	test   eax,0x2dd8762d
  40a997:	mov    eax,ds:0xd8509405
  40a99c:	call   0xab74f0c1
  40a9a1:	leave  
  40a9a2:	aam    0xa6
  40a9a4:	push   esi
  40a9a5:	pop    ebp
  40a9a6:	mov    dh,0xc1
  40a9a8:	xchg   edi,eax
  40a9a9:	push   esi
  40a9aa:	dec    ecx
  40a9ab:	nop
  40a9ac:	sub    eax,0xcd7169d8
  40a9b1:	mov    ds:0x588a0435,al
  40a9b6:	sbb    eax,0xafdee511
  40a9bb:	nop
  40a9bc:	add    BYTE PTR ss:[ebp+edx*2+0x1de4d562],dl
  40a9c4:	xchg   esp,esi
  40a9c6:	push   eax
  40a9c7:	lock popf 
  40a9c9:	mov    esi,0xe23b63d5
  40a9ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9cf:	lock pop esi
  40a9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d2:	sub    dh,BYTE PTR [ebx+0x49]
  40a9d5:	jne    0x40aa3e
  40a9d7:	jle    0x40a95b
  40a9d9:	mov    ah,0x9a
  40a9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9dc:	dec    esp
  40a9dd:	mov    esi,0x5e783184
  40a9e2:	push   0x37
  40a9e4:	mov    bh,0xba
  40a9e6:	sbb    edx,DWORD PTR [ebp+0x5c]
  40a9e9:	stos   BYTE PTR es:[edi],al
  40a9ea:	pop    esp
  40a9eb:	inc    edx
  40a9ec:	cmp    dh,bl
  40a9ee:	fnop   
  40a9f0:	cmp    dl,BYTE PTR [edi]
  40a9f2:	mov    ds:0x8675ac7,al
  40a9f7:	popa   
  40a9f8:	leave  
  40a9f9:	push   0x51
  40a9fb:	popa   
  40a9fc:	rcl    DWORD PTR [esi+0x25226550],1
  40aa02:	xchg   ebp,eax
  40aa03:	jo     0x40a999
  40aa05:	nop
  40aa06:	jg     0x40aa18
  40aa08:	je     0x40aa52
  40aa0a:	ins    DWORD PTR es:[edi],dx
  40aa0b:	and    BYTE PTR [edi],ch
  40aa0d:	sub    eax,0xc6e3f301
  40aa12:	retf   
  40aa13:	jno    0x40a9e3
  40aa15:	mov    al,0x92
  40aa17:	leave  
  40aa18:	ret    
  40aa19:	inc    esi
  40aa1a:	adc    ah,BYTE PTR [edi+ecx*1+0x48a23fac]
  40aa21:	mov    ds:0xd306649e,eax
  40aa26:	push   edi
  40aa27:	inc    ebp
  40aa28:	test   DWORD PTR [eax-0x44a785a5],0xc410c464
  40aa32:	aas    
  40aa33:	leave  
  40aa34:	sbb    BYTE PTR [eax+ecx*2-0x3f278ca],bh
  40aa3b:	in     al,0x34
  40aa3d:	sub    DWORD PTR [edx+0x30ea62fa],ebx
  40aa43:	cmp    eax,0x7d7730fe
  40aa48:	mov    bh,0xa3
  40aa4a:	cmp    al,0xc8
  40aa4c:	es or  bh,dh
  40aa4f:	mov    eax,0x782543a3
  40aa54:	xor    al,0x53
  40aa56:	(bad)  
  40aa57:	clc    
  40aa58:	inc    edi
  40aa59:	scas   eax,DWORD PTR es:[edi]
  40aa5a:	out    0x0,al
  40aa5c:	das    
  40aa5d:	jb     0x40aa08
  40aa5f:	sub    ah,0xd8
  40aa62:	ret    0xe221
  40aa65:	inc    esp
  40aa66:	xor    al,0x34
  40aa68:	inc    esp
  40aa69:	mov    eax,0x4c6af427
  40aa6e:	scas   al,BYTE PTR es:[edi]
  40aa6f:	xor    al,0xd0
  40aa71:	call   0x6d09583b
  40aa76:	cwde   
  40aa77:	dec    esi
  40aa78:	xor    eax,0xd21ffd70
  40aa7d:	mov    eax,0xc6427734
  40aa82:	mov    ecx,ecx
  40aa84:	into   
  40aa85:	sub    eax,0x85bf986b
  40aa8a:	or     BYTE PTR [edx+0x594fdb0],bl
  40aa90:	jae    0x40aadd
  40aa92:	repz ficomp WORD PTR [edi+0x23]
  40aa96:	sbb    DWORD PTR [esi+0x328a3c2],edi
  40aa9c:	(bad)  
  40aa9d:	repz in al,dx
  40aa9f:	mov    edx,DWORD PTR [ecx]
  40aaa1:	cwde   
  40aaa2:	or     esi,edi
  40aaa4:	or     eax,0xa42cb2ff
  40aaa9:	and    ah,BYTE PTR [edx+0xd]
  40aaac:	pop    ss
  40aaad:	outs   dx,DWORD PTR ds:[esi]
  40aaae:	mov    esp,esp
  40aab0:	pop    esi
  40aab1:	mov    edx,ds
  40aab3:	mov    WORD PTR [ebx],ss
  40aab5:	fisttp DWORD PTR [edx+0x5c0293ca]
  40aabb:	xor    DWORD PTR [ecx+edi*2-0x4dd82fa0],edx
  40aac2:	pop    ecx
  40aac3:	repnz xchg edi,eax
  40aac5:	add    DWORD PTR [edx],edx
  40aac7:	pop    ss
  40aac8:	(bad)  
  40aac9:	push   0x5c
  40aacb:	jb     0x40aa99
  40aacd:	and    dh,al
  40aacf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aad0:	popa   
  40aad1:	into   
  40aad2:	(bad)  
  40aad3:	popf   
  40aad4:	call   0x878c:0xa6d46e4f
  40aadb:	loopne 0x40aa71
  40aadd:	fsub   DWORD PTR [edi]
  40aadf:	mov    ecx,0x7eadcd3d
  40aae4:	fsub   DWORD PTR ds:0xd9ff169f
  40aaea:	scas   al,BYTE PTR es:[edi]
  40aaeb:	mov    ah,0xd0
  40aaed:	fst    QWORD PTR [ebp-0x73]
  40aaf0:	cdq    
  40aaf1:	mov    esp,0x4ea5e7bd
  40aaf6:	xchg   BYTE PTR [ebx+0x387d7cd2],ch
  40aafc:	mov    WORD PTR [ebx-0x6b],cs
  40aaff:	imul   eax,eax,0x32
  40ab02:	sbb    eax,eax
  40ab04:	ins    BYTE PTR es:[edi],dx
  40ab05:	xor    bl,0x39
  40ab08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab09:	mov    bh,0x73
  40ab0b:	jae    0x40ab1c
  40ab0d:	xchg   edx,eax
  40ab0e:	loop   0x40ab2d
  40ab10:	adc    ch,cl
  40ab12:	jae    0x40ab4e
  40ab14:	(bad)  
  40ab15:	push   esi
  40ab16:	mov    DWORD PTR [ecx+0x16],edi
  40ab19:	adc    BYTE PTR [ebp+0x151a8ade],dl
  40ab1f:	inc    edi
  40ab20:	ret    0xa6f4
  40ab23:	jno    0x40aaa5
  40ab25:	add    BYTE PTR [ebx-0x57e29290],dl
  40ab2b:	push   ebp
  40ab2c:	or     ebp,esi
  40ab2e:	fidiv  WORD PTR [ecx-0x411655ec]
  40ab34:	jns    0x40aaed
  40ab36:	es inc eax
  40ab38:	xor    BYTE PTR [edi+0x45],ah
  40ab3b:	push   ss
  40ab3c:	cli    
  40ab3d:	or     dh,al
  40ab3f:	push   edi
  40ab40:	ins    BYTE PTR es:[edi],dx
  40ab41:	sbb    eax,0x403ef6d1
  40ab46:	ss xchg esi,eax
  40ab48:	dec    esi
  40ab49:	jae    0x40ab6f
  40ab4b:	sub    al,0x18
  40ab4d:	add    BYTE PTR [edx-0x1f59d916],0xe4
  40ab54:	or     BYTE PTR [esi+0x2a],bh
  40ab57:	mov    cl,0x1c
  40ab59:	popf   
  40ab5a:	stos   DWORD PTR es:[edi],eax
  40ab5b:	sar    BYTE PTR [esp-0x28],0x13
  40ab60:	add    BYTE PTR [ebx],0x5e
  40ab63:	hlt    
  40ab64:	pop    esp
  40ab65:	call   0x1fa3:0x7fb66843
  40ab6c:	and    BYTE PTR [edx-0x1eb7c33f],0x58
  40ab73:	push   ds
  40ab74:	jge    0x40ab24
  40ab76:	and    BYTE PTR ss:[edi],0xc2
  40ab7a:	and    DWORD PTR [ecx],ebp
  40ab7c:	and    al,0x76
  40ab7e:	push   es
  40ab7f:	push   0xb7efc230
  40ab84:	inc    eax
  40ab85:	in     eax,dx
  40ab86:	mov    ah,0x79
  40ab88:	jnp    0x40ab9c
  40ab8a:	(bad)  
  40ab8c:	mov    bl,0x5c
  40ab8e:	add    DWORD PTR [ebx+0x49],ecx
  40ab91:	or     esp,eax
  40ab93:	jbe    0x40abe0
  40ab95:	mov    ebp,0x7ed22124
  40ab9a:	mov    al,0xfc
  40ab9c:	mov    ah,0x72
  40ab9e:	ja     0x40abd7
  40aba0:	ins    BYTE PTR es:[edi],dx
  40aba1:	mov    gs,WORD PTR [edx+0x765b29dc]
  40aba7:	inc    ecx
  40aba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aba9:	fld    QWORD PTR [esi-0x4bc1894d]
  40abaf:	push   ds
  40abb0:	xor    bh,0x37
  40abb3:	push   cs
  40abb4:	xchg   DWORD PTR [eax+0x66],edi
  40abb7:	push   ss
  40abb8:	pop    ebp
  40abb9:	xchg   edi,eax
  40abba:	jae    0x40abde
  40abbc:	cdq    
  40abbd:	pop    esi
  40abbe:	push   ebp
  40abbf:	lods   eax,DWORD PTR ds:[esi]
  40abc0:	cld    
  40abc1:	xor    BYTE PTR [edi],al
  40abc3:	xchg   ebp,eax
  40abc4:	ins    BYTE PTR es:[edi],dx
  40abc5:	push   edx
  40abc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abc7:	lea    ebp,[ecx]
  40abc9:	xor    al,0xe4
  40abcb:	jne    0x40ab79
  40abcd:	inc    esi
  40abce:	ffree  st(2)
  40abd0:	and    edi,edi
  40abd2:	pusha  
  40abd3:	mov    al,dl
  40abd5:	and    dh,BYTE PTR [esi]
  40abd7:	mov    esp,0xaa6f6b6
  40abdc:	mov    bl,0xa1
  40abde:	cmovg  edi,DWORD PTR [ecx-0x25915b53]
  40abe5:	jae    0x40aba9
  40abe7:	icebp  
  40abe8:	in     al,0x4a
  40abea:	or     dl,BYTE PTR [ebp-0x12]
  40abed:	sbb    esi,edi
  40abef:	sub    DWORD PTR [ebx-0x55],ebp
  40abf2:	rcr    BYTE PTR [ecx],1
  40abf4:	ds inc edi
  40abf6:	fnstenv [eax]
  40abf8:	inc    edx
  40abf9:	fstp   QWORD PTR [esi+0x6c]
  40abfc:	cdq    
  40abfd:	pop    edi
  40abfe:	pop    ss
  40abff:	sbb    ecx,DWORD PTR [ebp-0x4]
  40ac02:	shr    BYTE PTR [ebx-0x58fee2a7],cl
  40ac08:	pop    ebp
  40ac09:	push   ss
  40ac0a:	test   DWORD PTR [ebp+ebx*1+0x22],eax
  40ac0e:	das    
  40ac0f:	and    edx,DWORD PTR [ecx+0x55]
  40ac12:	sti    
  40ac13:	inc    esp
  40ac14:	adc    ebx,esi
  40ac16:	dec    ebx
  40ac17:	cmp    cl,BYTE PTR [eax-0x1f]
  40ac1a:	pop    esp
  40ac1b:	pop    edi
  40ac1c:	adc    al,0x96
  40ac1e:	not    DWORD PTR [esi+0x1e]
  40ac21:	int3   
  40ac22:	sbb    al,0x45
  40ac24:	adc    dh,BYTE PTR [edx]
  40ac26:	ds aam 0xbb
  40ac29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac2a:	push   cx
  40ac2c:	dec    ecx
  40ac2d:	dec    ecx
  40ac2e:	popf   
  40ac2f:	aaa    
  40ac30:	mov    ebx,0xd79c2a52
  40ac35:	dec    eax
  40ac36:	lods   al,BYTE PTR ds:[esi]
  40ac37:	aam    0x11
  40ac39:	lahf   
  40ac3a:	add    edx,DWORD PTR [eax]
  40ac3c:	ins    BYTE PTR es:[edi],dx
  40ac3d:	push   esi
  40ac3e:	jmp    0x80ef:0x750cd08c
  40ac45:	(bad)  
  40ac47:	cmc    
  40ac48:	mov    esi,0x7f12eebd
  40ac4d:	push   cs
  40ac4e:	les    esi,FWORD PTR [esi+0x367d8af8]
  40ac54:	cli    
  40ac55:	pop    ebx
  40ac56:	sbb    al,0xb3
  40ac58:	in     eax,dx
  40ac59:	jmp    0x3102a795
  40ac5e:	out    dx,al
  40ac5f:	pop    ss
  40ac60:	jg     0x40ac1c
  40ac62:	dec    esi
  40ac63:	mov    al,0xf7
  40ac65:	pop    ebx
  40ac66:	rcr    BYTE PTR [ebx+edx*8],1
  40ac69:	mov    ebx,0x18e6a27f
  40ac6e:	pop    edx
  40ac6f:	in     eax,dx
  40ac70:	stos   DWORD PTR es:[edi],eax
  40ac71:	mov    edi,0x53b0329d
  40ac76:	jns    0x40ac26
  40ac78:	iret   
  40ac79:	inc    esi
  40ac7a:	sub    ah,bl
  40ac7c:	arpl   WORD PTR [ebx-0x15a6d102],cx
  40ac82:	or     BYTE PTR [ebp+edi*1-0x6541e6f0],ch
  40ac89:	(bad)  
  40ac8b:	push   DWORD PTR [edx]
  40ac8d:	into   
  40ac8e:	pop    es
  40ac8f:	gs fwait
  40ac91:	clc    
  40ac92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac93:	aas    
  40ac94:	xor    DWORD PTR [eax],esi
  40ac96:	xlat   BYTE PTR ds:[ebx]
  40ac97:	push   edi
  40ac98:	(bad)  
  40ac99:	gs pop es
  40ac9b:	pop    ds
  40ac9c:	dec    esi
  40ac9d:	dec    ebx
  40ac9e:	xchg   esp,eax
  40ac9f:	inc    ebx
  40aca0:	xor    bl,bl
  40aca2:	dec    edi
  40aca3:	push   0xffffffe4
  40aca5:	add    eax,0xa0ecfa4
  40acaa:	jb     0x40ad0b
  40acac:	aaa    
  40acad:	mul    dh
  40acaf:	movmskps esi,xmm2
  40acb2:	mov    edi,0xe981d033
  40acb7:	cmp    bh,BYTE PTR [eax]
  40acb9:	test   al,0x7c
  40acbb:	pop    ebx
  40acbc:	aam    0x98
  40acbe:	xor    eax,0x70d51d54
  40acc3:	fnsave [ebx]
  40acc5:	or     eax,0x55d22bdb
  40acca:	fnsave [ebp-0x26e344c8]
  40acd0:	sbb    al,0xba
  40acd2:	and    al,0xf6
  40acd4:	in     eax,dx
  40acd5:	jge    0x40ad2c
  40acd7:	or     esi,DWORD PTR [edx+ecx*8]
  40acda:	cmp    BYTE PTR [ebx-0x35],0x11
  40acde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acdf:	mov    bh,0xc0
  40ace1:	in     eax,dx
  40ace2:	aad    0x80
  40ace4:	xchg   esp,eax
  40ace5:	sbb    DWORD PTR ds:0x4c6d,0x44
  40aceb:	out    dx,eax
  40acec:	inc    edx
  40aced:	add    eax,0x40376350
  40acf2:	sub    esi,DWORD PTR [eax+ebx*1]
  40acf5:	rol    ecx,1
  40acf7:	stos   BYTE PTR es:[edi],al
  40acf8:	xchg   bh,dl
  40acfa:	rol    ecx,0xaf
  40acfd:	lock sbb cl,BYTE PTR [edi+0x2196b15c]
  40ad04:	xchg   DWORD PTR [ebx],ecx
  40ad06:	setns  BYTE PTR [eax]
  40ad09:	adc    esi,eax
  40ad0b:	outs   dx,BYTE PTR ds:[esi]
  40ad0c:	sar    BYTE PTR [edx],0x77
  40ad0f:	into   
  40ad10:	pop    esi
  40ad11:	pop    ss
  40ad12:	sahf   
  40ad13:	arpl   WORD PTR [ecx+eax*2],cx
  40ad16:	dec    esp
  40ad17:	adc    esp,DWORD PTR ds:[ecx]
  40ad1a:	push   esi
  40ad1b:	cli    
  40ad1c:	or     BYTE PTR [esi],al
  40ad1e:	loope  0x40ad7d
  40ad20:	rol    BYTE PTR [eax],0x50
  40ad23:	or     al,0x66
  40ad25:	pushf  
  40ad26:	mov    WORD PTR [eax],?
  40ad28:	cs push ss
  40ad2a:	push   esp
  40ad2b:	sbb    BYTE PTR [eax+0x3d],cl
  40ad2e:	mov    eax,ds:0x51655a9c
  40ad33:	data16 adc BYTE PTR [ebx],cl
  40ad36:	pushf  
  40ad37:	and    al,0x1c
  40ad39:	(bad)  
  40ad3a:	adc    al,0x57
  40ad3c:	cmp    eax,0x167bd441
  40ad41:	jmp    0x2415:0xde638027
  40ad48:	xchg   edx,eax
  40ad49:	sbb    DWORD PTR [ebx-0x65],ebp
  40ad4c:	and    eax,0xef6add09
  40ad51:	loop   0x40ad55
  40ad53:	ja     0x40ad9c
  40ad55:	sub    eax,0xefa28670
  40ad5a:	xor    ebx,DWORD PTR [ebp-0x33656033]
  40ad60:	jne    0x40ad21
  40ad62:	pop    edi
  40ad63:	nop
  40ad64:	out    dx,eax
  40ad65:	ins    DWORD PTR es:[edi],dx
  40ad66:	adc    DWORD PTR [ebx+0x1a15d05],ecx
  40ad6c:	mov    ebp,0x5442ba7a
  40ad71:	adc    bl,ah
  40ad73:	xor    eax,edi
  40ad75:	adc    ebx,0x62
  40ad78:	loope  0x40adc4
  40ad7a:	or     bl,BYTE PTR [ecx+0x7e]
  40ad7d:	mov    ecx,0xf34bfa21
  40ad82:	inc    eax
  40ad83:	pusha  
  40ad84:	sub    eax,0x92a80277
  40ad89:	mov    edi,0x152914c8
  40ad8e:	push   eax
  40ad8f:	cwde   
  40ad90:	ds mov edi,0xd957fe00
  40ad96:	sub    eax,0x2dfca35a
  40ad9b:	dec    ecx
  40ad9c:	scas   eax,DWORD PTR es:[edi]
  40ad9d:	xor    BYTE PTR [esp+ebp*8-0x3544cf14],bl
  40ada4:	(bad)  
  40ada5:	push   cs
  40ada6:	mov    esi,0xa4354a4f
  40adab:	loopne 0x40adf7
  40adad:	cmp    DWORD PTR [eax+0x76f2ad52],ecx
  40adb3:	not    DWORD PTR [edx-0x27]
  40adb6:	je     0x40adb3
  40adb8:	in     eax,dx
  40adb9:	mov    cl,0x4a
  40adbb:	pushf  
  40adbc:	mov    edx,DWORD PTR [edx]
  40adbe:	loop   0x40adb2
  40adc0:	hlt    
  40adc1:	mov    ah,bl
  40adc3:	cmc    
  40adc4:	loope  0x40ae0b
  40adc6:	test   ebx,ebp
  40adc8:	scas   al,BYTE PTR es:[edi]
  40adc9:	mov    ecx,0xa6ab560b
  40adce:	or     bl,bl
  40add0:	ror    DWORD PTR [ecx+0x8835d38],1
  40add6:	inc    ecx
  40add7:	fbld   TBYTE PTR [ebx+0x3da3a595]
  40addd:	push   0xffffff8c
  40addf:	fcom   DWORD PTR [ebp+0x1bceb68d]
  40ade5:	sahf   
  40ade6:	outs   dx,BYTE PTR ds:[esi]
  40ade7:	fiadd  DWORD PTR [edi]
  40ade9:	lock pop ss
  40adeb:	adc    al,0xf4
  40aded:	ror    BYTE PTR [ebp+0x1343e9e7],0x38
  40adf4:	mov    ebx,0x2b4291ef
  40adf9:	pop    es
  40adfa:	pop    ebx
  40adfb:	addr16 or al,0x2d
  40adfe:	adc    edi,edx
  40ae00:	ss xchg ebx,eax
  40ae02:	dec    esp
  40ae03:	or     bh,BYTE PTR [ebx]
  40ae05:	sbb    eax,0xa4296c55
  40ae0a:	(bad)  
  40ae0b:	loope  0x40ae6d
  40ae0d:	push   cs
  40ae0e:	inc    esi
  40ae0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae10:	sub    ebx,DWORD PTR [ebx+eiz*1-0x6e]
  40ae14:	cmp    bl,BYTE PTR [eax-0xd164300]
  40ae1a:	repz cmp DWORD PTR [edx-0x377fb8ce],ebx
  40ae21:	int3   
  40ae22:	add    eax,0x3bd55937
  40ae27:	sub    DWORD PTR [ecx+0x58],esi
  40ae2a:	cmp    al,0x94
  40ae2c:	loopne 0x40ae47
  40ae2e:	mov    eax,0x2962d657
  40ae33:	jmp    0x6086:0xd7984940
  40ae3a:	(bad)  
  40ae3b:	sbb    DWORD PTR ds:0x25acc970,ebp
  40ae41:	ret    0xac35
  40ae44:	in     al,0xd7
  40ae46:	sub    BYTE PTR [esi-0x7e17a395],0x6b
  40ae4d:	loopne 0x40ae9d
  40ae4f:	cmp    ah,BYTE PTR [esi-0x73]
  40ae52:	mov    cl,0xa8
  40ae54:	in     al,dx
  40ae55:	daa    
  40ae56:	adc    BYTE PTR [esp+ebx*4],ch
  40ae59:	pushf  
  40ae5a:	mov    ds:0x402a7443,al
  40ae5f:	into   
  40ae60:	shl    DWORD PTR [ecx-0x40],0x32
  40ae64:	sub    BYTE PTR [eax+0x1104e169],ah
  40ae6a:	adc    BYTE PTR ds:0x5688b6d8,dh
  40ae70:	retf   0xdb97
  40ae73:	pop    edx
  40ae74:	out    dx,al
  40ae75:	ins    BYTE PTR es:[edi],dx
  40ae76:	test   BYTE PTR [esi+0x54ef1d15],ah
  40ae7c:	cmp    ebp,edi
  40ae7e:	mov    ebx,0x4e3d584d
  40ae83:	ins    DWORD PTR es:[edi],dx
  40ae84:	dec    esp
  40ae85:	or     BYTE PTR [ebp+0x2f34bd6b],0x68
  40ae8c:	lahf   
  40ae8d:	mov    ?,WORD PTR [ebx+0x15db9b0d]
  40ae93:	and    esp,DWORD PTR [esi+0x59c1a0aa]
  40ae99:	outs   dx,BYTE PTR ds:[esi]
  40ae9a:	addr16 out dx,eax
  40ae9c:	(bad)  
  40ae9d:	mov    dl,0x5e
  40ae9f:	mov    DWORD PTR ds:0x69a45833,ebp
  40aea5:	lahf   
  40aea6:	jmp    0x40ae4a
  40aea8:	sbb    BYTE PTR [ecx+edi*8+0x2c5c3594],dl
  40aeaf:	push   ebx
  40aeb0:	inc    ebx
  40aeb1:	jmp    0x4e3d6329
  40aeb6:	mov    ecx,0xc99ee953
  40aebb:	add    eax,0xd7a47700
  40aec0:	test   eax,0x2ead335
  40aec5:	shl    BYTE PTR [edx-0x4d404007],0x56
  40aecc:	mov    ds:0x7a06bdf4,al
  40aed1:	imul   ecx,DWORD PTR [eax-0x7d],0xfffffffb
  40aed5:	add    ah,BYTE PTR [edx]
  40aed7:	leave  
  40aed8:	loope  0x40af24
  40aeda:	out    0x1c,eax
  40aedc:	ror    DWORD PTR [edi+0x62],1
  40aedf:	je     0x40af49
  40aee1:	add    DWORD PTR [esi],esp
  40aee3:	in     eax,0x48
  40aee5:	arpl   WORD PTR [ebx-0x69],di
  40aee8:	mov    WORD PTR [edx-0x6c],es
  40aeeb:	inc    ebp
  40aeec:	cs xchg esp,eax
  40aeee:	popa   
  40aeef:	and    eax,DWORD PTR [ecx+0x1be758e5]
  40aef5:	retf   
  40aef6:	and    bl,dl
  40aef8:	mov    cl,0x40
  40aefa:	mov    bh,0x31
  40aefc:	ret    0xd533
  40aeff:	inc    esp
  40af00:	cmp    edi,ebx
  40af02:	adc    cl,ah
  40af04:	sbb    bl,BYTE PTR ds:0x7e2951a1
  40af0a:	adc    al,0x7d
  40af0c:	and    BYTE PTR [edx+0x21],bl
  40af0f:	add    DWORD PTR [ebp+0x13],edx
  40af12:	int    0xc7
  40af14:	sbb    ebp,esp
  40af16:	and    bl,cl
  40af18:	les    edi,FWORD PTR [eax-0x3639840b]
  40af1e:	cwde   
  40af1f:	inc    esp
  40af20:	in     eax,dx
  40af21:	(bad)  
  40af22:	cmp    al,bl
  40af24:	jle    0x40af1e
  40af26:	out    0x57,al
  40af28:	pushw  es
  40af2a:	test   al,0xd4
  40af2c:	ret    
  40af2d:	cmp    DWORD PTR [eax-0x37],0xffffffc7
  40af31:	or     eax,0xb5a6078c
  40af36:	push   esi
  40af37:	loop   0x40af09
  40af39:	fistp  QWORD PTR [edi]
  40af3b:	mov    bl,0xcd
  40af3d:	sub    DWORD PTR [esi+0x63feeb68],ebx
  40af43:	mov    ebx,fs
  40af45:	(bad)  
  40af46:	jl     0x40af0a
  40af48:	mov    BYTE PTR [edi],cl
  40af4a:	add    BYTE PTR ds:0x2941bb5c,dl
  40af50:	cwde   
  40af51:	sbb    al,0x95
  40af53:	ficom  DWORD PTR [edx]
  40af55:	sbb    eax,0xbd0202aa
  40af5a:	xchg   edx,eax
  40af5c:	ror    ecx,cl
  40af5e:	xchg   esi,eax
  40af5f:	cwde   
  40af60:	mov    ds:0x1847ea6d,eax
  40af65:	out    0xd5,al
  40af67:	pop    ecx
  40af68:	mov    edi,0xa5851e7f
  40af6d:	sbb    BYTE PTR [ecx+0x2ff97f92],0xa2
  40af74:	mov    dh,0x8a
  40af76:	sub    bl,BYTE PTR [edx+edi*2+0x1e]
  40af7a:	xchg   esp,eax
  40af7b:	sahf   
  40af7c:	repnz shl BYTE PTR [ebx*2+0x11dc254d],cl
  40af84:	sar    DWORD PTR [edx-0x5d923549],cl
  40af8a:	cmp    BYTE PTR [esi+0x2695f7af],cl
  40af90:	pushf  
  40af91:	mov    ch,0x11
  40af93:	aad    0x69
  40af95:	leave  
  40af96:	fldcw  WORD PTR ss:[esi+0x0]
  40af9a:	in     eax,0x49
  40af9c:	or     al,0xe8
  40af9e:	pushf  
  40af9f:	add    ebx,DWORD PTR [ecx+edi*1-0xd]
  40afa3:	int    0xdd
  40afa5:	test   BYTE PTR [edi],al
  40afa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afa8:	push   edi
  40afa9:	sahf   
  40afaa:	(bad)  
  40afac:	pusha  
  40afad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afae:	les    ecx,FWORD PTR [esi+0x39448cc3]
  40afb4:	cmp    DWORD PTR [ebx+0xa],edx
  40afb7:	je     0x40b002
  40afb9:	or     esp,DWORD PTR [ebp-0x75]
  40afbc:	xor    edx,edi
  40afbe:	les    esi,FWORD PTR [esi+edx*2+0x6a]
  40afc2:	jno    0x40b03b
  40afc4:	inc    ebx
  40afc5:	data16 clc 
  40afc7:	mov    BYTE PTR [edx-0x503fbde9],al
  40afcd:	fisubr WORD PTR [ebp-0x2bb2b3ee]
  40afd3:	jno    0x40b050
  40afd5:	cdq    
  40afd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afd7:	popaw  
  40afd9:	cmp    eax,0x90dbc851
  40afde:	lods   al,BYTE PTR ds:[esi]
  40afdf:	add    DWORD PTR [edx+edx*2],eax
  40afe2:	xor    cl,BYTE PTR [ebp-0x2781521b]
  40afe8:	mov    edi,0x1587c113
  40afed:	mov    al,BYTE PTR [eax+0x4f5901dc]
  40aff3:	ja     0x40afb5
  40aff5:	xchg   ecx,eax
  40aff6:	mov    BYTE PTR [eax-0x63],cl
  40aff9:	push   esi
  40affa:	add    eax,0x48c01415
  40afff:	rcl    esi,0x9b
  40b002:	out    0xaa,eax
  40b004:	jne    0x40aff0
  40b006:	loop   0x40b001
  40b008:	lock test eax,0x3071f0a7
  40b00e:	rcr    DWORD PTR [edi+0x30776705],cl
  40b014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b015:	adc    BYTE PTR [eax+0x1570a629],bl
  40b01b:	stc    
  40b01c:	retf   0x80c1
  40b01f:	jbe    0x40b08d
  40b021:	ss das 
  40b023:	mov    ds:0x9424027b,eax
  40b028:	(bad)  
  40b029:	nop
  40b02a:	ds and eax,0x47daff6b
  40b030:	and    edx,DWORD PTR [ebx]
  40b032:	dec    edi
  40b033:	xbegin 0x663f1272
  40b039:	pop    ecx
  40b03a:	inc    edi
  40b03b:	sti    
  40b03c:	or     ebx,esp
  40b03e:	cmp    al,0x3f
  40b040:	pop    eax
  40b041:	or     ebp,ebp
  40b043:	add    DWORD PTR [eax+0x39],eax
  40b046:	aad    0xc2
  40b048:	clc    
  40b049:	das    
  40b04a:	pop    esi
  40b04b:	mov    bl,0x96
  40b04d:	inc    ebp
  40b04e:	nop
  40b04f:	repnz std 
  40b051:	fistp  QWORD PTR [eax+ecx*1+0x1b]
  40b055:	xlat   BYTE PTR ds:[ebx]
  40b056:	xchg   ecx,eax
  40b057:	leave  
  40b058:	cmc    
  40b059:	xor    DWORD PTR [esi+0x638055d4],0x51
  40b060:	push   esp
  40b061:	scas   al,BYTE PTR es:[edi]
  40b062:	or     BYTE PTR [esi],dl
  40b064:	jg     0x40b0cd
  40b066:	call   0x35a9:0x1c7a0a2b
  40b06d:	push   eax
  40b06e:	mov    esp,0x92b39993
  40b073:	mov    eax,ds:0x22d7dd76
  40b078:	in     al,0x7
  40b07a:	sbb    edi,DWORD PTR [esi+edx*1-0x7def1f26]
  40b081:	or     edi,DWORD PTR [esi-0xa]
  40b084:	sbb    al,0xac
  40b086:	daa    
  40b087:	pop    edi
  40b088:	leave  
  40b089:	dec    esi
  40b08a:	and    DWORD PTR [edi+0x6561dc2],esp
  40b090:	sbb    eax,0x33f2e450
  40b095:	sar    DWORD PTR [edx-0x30],0x9a
  40b099:	ins    BYTE PTR es:[edi],dx
  40b09a:	pop    ss
  40b09b:	js     0x40b077
  40b09d:	push   ss
  40b09e:	sub    dh,BYTE PTR [esi-0x29]
  40b0a1:	push   0x67
  40b0a3:	jl     0x40b072
  40b0a5:	sub    esp,DWORD PTR [edx+0x1704d261]
  40b0ab:	push   ds
  40b0ac:	adc    eax,0x555e78b8
  40b0b1:	fst    DWORD PTR [eax+0x3cdee5fb]
  40b0b7:	fcos   
  40b0b9:	int    0x14
  40b0bb:	shl    DWORD PTR [esi+eax*8+0x66a155dd],1
  40b0c2:	or     esi,0x3cb74912
  40b0c8:	icebp  
  40b0c9:	call   0x19ef:0x72576459
  40b0d0:	mov    cl,0x8a
  40b0d2:	inc    edi
  40b0d3:	mov    ds:0x2dd85141,al
  40b0d8:	addr16 inc edx
  40b0da:	ds dec eax
  40b0dc:	inc    edi
  40b0dd:	jge    0x40b14a
  40b0df:	or     al,0xcb
  40b0e1:	bound  ecx,QWORD PTR [esi+0x65]
  40b0e4:	push   edi
  40b0e5:	nop
  40b0e6:	shl    bh,0xba
  40b0e9:	xchg   al,cl
  40b0eb:	jle    0x40b08e
  40b0ed:	xor    DWORD PTR [eax-0x74],edx
  40b0f0:	loope  0x40b0f7
  40b0f2:	jle    0x40b0cf
  40b0f4:	and    eax,0x86841224
  40b0f9:	adc    bl,BYTE PTR [eax+0x47]
  40b0fc:	mov    ecx,0x34ee47ca
  40b101:	push   ss
  40b102:	outs   dx,DWORD PTR ds:[esi]
  40b103:	fs dec eax
  40b105:	out    0x2a,al
  40b107:	pop    es
  40b108:	mov    ds:0xab1e2b13,al
  40b10d:	mov    BYTE PTR ds:0x266f4852,ch
  40b113:	call   0x2b2dfca0
  40b118:	push   es
  40b119:	xchg   esi,eax
  40b11a:	pop    edi
  40b11b:	sub    al,BYTE PTR [eax+ecx*1-0x5e]
  40b11f:	jbe    0x40b104
  40b121:	inc    esp
  40b122:	inc    edx
  40b123:	call   0x4525:0xc3e88941
  40b12a:	xchg   edi,eax
  40b12b:	pop    edi
  40b12c:	xchg   DWORD PTR [ecx-0x17e1d033],edi
  40b132:	mov    ebx,0xd670487c
  40b137:	mov    bl,0xae
  40b139:	xlat   BYTE PTR ds:[ebx]
  40b13a:	ja     0x40b0ef
  40b13c:	inc    ebp
  40b13d:	cmc    
  40b13e:	imul   ebp,DWORD PTR [ecx+0x71],0xffffffd1
  40b142:	scas   al,BYTE PTR es:[edi]
  40b143:	jae    0x40b0cf
  40b145:	pop    ebx
  40b146:	fdivp  st(7),st
  40b148:	dec    ecx
  40b149:	sti    
  40b14a:	adc    edx,DWORD PTR [edx]
  40b14c:	xor    al,0x4
  40b14e:	bound  edi,QWORD PTR [ebx+eax*4]
  40b151:	sahf   
  40b152:	push   eax
  40b153:	push   0x45
  40b155:	mov    eax,ds:0xc0079113
  40b15a:	mov    eax,0xada853a2
  40b15f:	les    esp,FWORD PTR [eax]
  40b161:	and    al,0x6d
  40b163:	std    
  40b164:	pop    ebx
  40b165:	(bad)  
  40b166:	push   0xddfebf7c
  40b16b:	inc    ebp
  40b16c:	ret    0xeadd
  40b16f:	outs   dx,DWORD PTR ds:[esi]
  40b170:	leave  
  40b171:	ja     0x40b1f0
  40b173:	call   0xcb3b18c3
  40b178:	popa   
  40b179:	pop    es
  40b17a:	(bad)  
  40b17b:	sti    
  40b17c:	adc    bh,ah
  40b17e:	sbb    eax,0xfc8bbfa
  40b183:	mov    ecx,0x36a476c0
  40b188:	xchg   BYTE PTR [ebp-0x5b47225c],al
  40b18e:	hlt    
  40b18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b190:	cmp    al,0x65
  40b192:	cdq    
  40b193:	xlat   BYTE PTR ds:[ebx]
  40b194:	js     0x40b1a5
  40b196:	loope  0x40b13f
  40b198:	xchg   ebx,eax
  40b199:	jno    0x40b1f5
  40b19b:	ret    0x2346
  40b19e:	jnp    0x40b1ba
  40b1a0:	adc    BYTE PTR [edi],0x5b
  40b1a3:	repz lock jg 0x40b157
  40b1a7:	inc    edi
  40b1a8:	pushf  
  40b1a9:	shr    DWORD PTR [ecx-0x11fd000b],1
  40b1af:	mov    bh,0xa2
  40b1b1:	pusha  
  40b1b2:	jbe    0x40b144
  40b1b4:	mov    bh,0x7
  40b1b6:	push   ebx
  40b1b7:	pop    ds
  40b1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b9:	sub    eax,0xd3bd7403
  40b1be:	mov    eax,0x2110c2d6
  40b1c3:	push   0xffffffa0
  40b1c5:	cld    
  40b1c6:	xchg   esi,eax
  40b1c7:	pop    ds
  40b1c8:	cmc    
  40b1c9:	jo     0x40b1f8
  40b1cb:	pop    ss
  40b1cc:	inc    edx
  40b1cd:	sub    al,0x63
  40b1cf:	test   al,0x23
  40b1d1:	test   dl,bl
  40b1d3:	xor    DWORD PTR [eax+0x4dd21368],edi
  40b1d9:	ja     0x40b195
  40b1db:	ss imul ecx,eax,0xfffffffa
  40b1df:	fidivr DWORD PTR [ecx+0x5909ac15]
  40b1e5:	and    BYTE PTR ds:0x872bf2e0,ah
  40b1eb:	jl     0x40b21b
  40b1ed:	push   cs
  40b1ee:	xchg   DWORD PTR [edi-0x16],edx
  40b1f1:	shl    BYTE PTR [bx+si],1
  40b1f4:	ins    DWORD PTR es:[edi],dx
  40b1f5:	inc    esi
  40b1f6:	iret   
  40b1f7:	dec    edx
  40b1f8:	pop    es
  40b1f9:	push   edi
  40b1fa:	jg     0x40b1eb
  40b1fc:	xchg   ecx,eax
  40b1fd:	pushf  
  40b1fe:	pusha  
  40b1ff:	das    
  40b200:	cli    
  40b201:	mov    ah,0x57
  40b203:	sub    eax,0x6bd46f87
  40b208:	stc    
  40b209:	cmp    edi,DWORD PTR [edi]
  40b20b:	shr    DWORD PTR [ebx],0xea
  40b20e:	xchg   esi,eax
  40b20f:	mov    eax,0xee7abb2
  40b214:	popa   
  40b215:	cld    
  40b216:	and    BYTE PTR [ebx+0x20],bh
  40b219:	div    al
  40b21b:	cwde   
  40b21c:	cmp    eax,ebx
  40b21e:	jge    0x40b1e6
  40b220:	pop    ss
  40b221:	jnp    0x40b25d
  40b223:	sar    BYTE PTR [eax+0x3112f415],1
  40b229:	xor    esp,DWORD PTR [edi-0x4b]
  40b22c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b22d:	out    dx,al
  40b22e:	xor    al,0x15
  40b230:	nop
  40b231:	xor    al,0x33
  40b233:	sbb    DWORD PTR [ecx],esp
  40b235:	add    DWORD PTR [edx+0x7abbe926],ebp
  40b23b:	bound  esp,QWORD PTR ds:0xfbb958eb
  40b241:	pop    ds
  40b242:	xor    cl,BYTE PTR [eax]
  40b244:	sub    ecx,DWORD PTR ds:0xd7cbff89
  40b24a:	inc    esi
  40b24b:	push   edi
  40b24c:	jmp    0xb0de:0x2e4610a2
  40b253:	scas   al,BYTE PTR es:[edi]
  40b254:	sbb    BYTE PTR [esi+0x13],bh
  40b257:	or     al,0x63
  40b259:	xor    ah,ch
  40b25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b25c:	or     DWORD PTR ds:0x4605ee71,eax
  40b262:	or     DWORD PTR [edx-0x2b],0xffffffd7
  40b266:	add    DWORD PTR [ecx],ebp
  40b268:	xor    eax,0xce6b352c
  40b26d:	mov    ebx,0xb7d98b49
  40b272:	pop    esp
  40b273:	push   0x80684ae0
  40b278:	in     al,dx
  40b279:	or     ebx,eax
  40b27b:	lods   eax,DWORD PTR ds:[esi]
  40b27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b27d:	(bad)  
  40b27e:	sbb    BYTE PTR [eax+0x6beadf6e],dl
  40b284:	inc    ebp
  40b285:	sbb    BYTE PTR [ecx+0x63],cl
  40b288:	push   cs
  40b289:	sbb    DWORD PTR [ecx+eiz*8],0xd98e3263
  40b290:	mov    gs,WORD PTR ds:0x55f4ca88
  40b296:	jge    0x40b258
  40b298:	jge    0x40b2c2
  40b29a:	inc    edi
  40b29b:	stos   DWORD PTR es:[edi],eax
  40b29c:	xchg   esi,eax
  40b29d:	add    BYTE PTR [esi],cl
  40b29f:	out    dx,al
  40b2a0:	and    BYTE PTR [ecx],cl
  40b2a2:	scas   al,BYTE PTR es:[edi]
  40b2a3:	ret    
  40b2a4:	sbb    ebp,DWORD PTR [ebx+0x6f]
  40b2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2a8:	push   cs
  40b2a9:	lock cli 
  40b2ab:	loopne 0x40b304
  40b2ad:	sbb    al,0x80
  40b2af:	and    edx,DWORD PTR [eax+edx*8]
  40b2b2:	dec    edi
  40b2b3:	jbe    0x40b2a1
  40b2b5:	sub    bl,BYTE PTR [ecx-0x6a]
  40b2b8:	sub    ah,BYTE PTR [ecx]
  40b2ba:	add    esp,esp
  40b2bc:	mov    esi,0x190833c9
  40b2c1:	sbb    DWORD PTR [ecx-0x77],ecx
  40b2c4:	lods   al,BYTE PTR ds:[esi]
  40b2c5:	jbe    0x40b326
  40b2c7:	dec    ebp
  40b2c8:	js     0x40b2ef
  40b2ca:	dec    esi
  40b2cb:	test   dh,ah
  40b2cd:	jmp    0x8aa929fd
  40b2d2:	jne    0x40b341
  40b2d4:	mov    dx,0x37d7
  40b2d8:	or     DWORD PTR [edi+0x277b8cb0],edx
  40b2de:	imul   ebx,DWORD PTR ds:0x5e37ed4e,0x41
  40b2e5:	fdiv   QWORD PTR [eax-0x1505eb64]
  40b2eb:	push   0xffffffed
  40b2ed:	in     eax,0xa2
  40b2ef:	sbb    al,0x55
  40b2f1:	dec    ebp
  40b2f3:	dec    ebp
  40b2f4:	pop    ecx
  40b2f5:	add    al,0x9f
  40b2f7:	popa   
  40b2f8:	xchg   ebp,eax
  40b2f9:	dec    ebx
  40b2fa:	and    eax,0xcf72f305
  40b2ff:	add    eax,0x8fd3790d
  40b304:	test   ah,bl
  40b306:	cmp    DWORD PTR [edx+ebx*4],ebp
  40b309:	inc    edx
  40b30a:	(bad)  
  40b30b:	mov    ch,0x2a
  40b30d:	leave  
  40b30e:	fst    DWORD PTR [edi+edx*8]
  40b311:	xchg   ecx,eax
  40b312:	inc    ebp
  40b313:	sbb    ebx,0x5f
  40b316:	mov    esp,0xc8cc19dd
  40b31b:	mov    cl,0x3c
  40b31d:	sub    ebp,DWORD PTR [ebx-0x5a756290]
  40b323:	dec    edi
  40b324:	jl     0x40b2f0
  40b326:	jmp    0xb39a:0xd12816f3
  40b32d:	int3   
  40b32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b32f:	mov    bh,0x7d
  40b331:	pop    ss
  40b332:	jmp    0x2893:0xfad4ad22
  40b339:	cli    
  40b33a:	sbb    ah,BYTE PTR [edi-0x31326647]
  40b340:	add    ebx,DWORD PTR [edx-0xd50d200]
  40b346:	and    BYTE PTR [esi-0x24],cl
  40b349:	push   ecx
  40b34a:	mov    dh,0x6d
  40b34c:	dec    esi
  40b34d:	and    BYTE PTR [ebx],dh
  40b34f:	sbb    DWORD PTR [ecx-0x44],0xfffffff0
  40b353:	sbb    cl,BYTE PTR [edi+0x12525538]
  40b359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35a:	into   
  40b35b:	ss jne 0x40b34c
  40b35e:	pop    edx
  40b35f:	iret   
  40b360:	fcomp  QWORD PTR [ecx]
  40b362:	mov    bl,0xac
  40b364:	ror    BYTE PTR [ebp+0x3429ebc9],cl
  40b36a:	push   eax
  40b36b:	repz pop ds
  40b36d:	mov    ecx,0x98dc79fd
  40b372:	adc    BYTE PTR [ecx-0x4b],bh
  40b375:	push   esp
  40b376:	clc    
  40b377:	jmp    FWORD PTR [ebx]
  40b379:	rsqrtps xmm7,XMMWORD PTR [ebp-0x72]
  40b37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b37f:	ins    DWORD PTR es:[edi],dx
  40b380:	or     BYTE PTR [edx-0x44],ah
  40b383:	gs in  eax,dx
  40b385:	js     0x40b3e8
  40b387:	add    esp,eax
  40b389:	mov    dl,BYTE PTR [edi+edx*2-0x77]
  40b38d:	aaa    
  40b38e:	mov    bl,0x17
  40b390:	mov    bl,al
  40b392:	ins    BYTE PTR es:[edi],dx
  40b393:	jmp    0x40b338
  40b395:	add    eax,0xad1c80b0
  40b39a:	adc    DWORD PTR [esi],esp
  40b39c:	and    ch,dh
  40b39e:	or     ah,al
  40b3a0:	hlt    
  40b3a1:	lahf   
  40b3a2:	stos   BYTE PTR es:[edi],al
  40b3a3:	cwde   
  40b3a4:	pushf  
  40b3a5:	retf   
  40b3a6:	xchg   ebx,eax
  40b3a7:	mov    dh,0x62
  40b3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3aa:	leave  
  40b3ab:	dec    esi
  40b3ac:	scas   al,BYTE PTR es:[edi]
  40b3ad:	inc    ebp
  40b3ae:	ret    
  40b3af:	jmp    0x40b3f3
  40b3b1:	add    al,0x6d
  40b3b3:	jmp    0x54f8:0xb0c06fb5
  40b3ba:	sbb    esp,eax
  40b3bc:	cs repnz loope 0x40b3f8
  40b3c0:	mov    edi,0x805898a8
  40b3c5:	cmp    eax,0xa2bbb1db
  40b3ca:	outs   dx,BYTE PTR ds:[esi]
  40b3cb:	mov    cl,0x96
  40b3cd:	dec    esi
  40b3ce:	fucom  st(6)
  40b3d0:	out    0xf1,eax
  40b3d2:	pop    ebp
  40b3d3:	mov    dl,0x9c
  40b3d5:	sar    ch,cl
  40b3d7:	fidiv  WORD PTR [edi-0x6b]
  40b3da:	and    al,0x24
  40b3dc:	dec    edi
  40b3dd:	pop    ss
  40b3de:	popf   
  40b3df:	rcr    DWORD PTR [ebx+0x50],cl
  40b3e2:	mov    dh,0x84
  40b3e4:	fs jmp 0x40b3a0
  40b3e7:	jl     0x40b378
  40b3e9:	scas   eax,DWORD PTR es:[edi]
  40b3ea:	pop    ebx
  40b3eb:	sbb    eax,0xe92a446d
  40b3f0:	mov    eax,edx
  40b3f2:	in     eax,dx
  40b3f3:	sub    DWORD PTR [esi+eiz*2-0x2a62216c],ebp
  40b3fa:	mov    ebp,0x8c802446
  40b3ff:	push   edx
  40b400:	out    dx,al
  40b401:	cmp    al,0xad
  40b403:	mov    esi,0x254edc89
  40b408:	xchg   si,ax
  40b40a:	iret   
  40b40b:	push   ebx
  40b40c:	lods   al,BYTE PTR ds:[esi]
  40b40d:	aaa    
  40b40e:	mov    bl,0xc4
  40b410:	inc    ebp
  40b411:	sub    al,0x14
  40b413:	mov    esi,0x8e86dd95
  40b418:	jmp    0x6b0b102f
  40b41d:	stos   DWORD PTR es:[edi],eax
  40b41e:	pop    ds
  40b41f:	test   al,0x4a
  40b421:	lods   eax,DWORD PTR ds:[esi]
  40b422:	sbb    al,0x7f
  40b424:	addr16 push esp
  40b426:	sbb    ah,ch
  40b428:	and    DWORD PTR [edi+0x29cbf71c],esp
  40b42e:	add    dl,BYTE PTR [eax+0x1e0f0ba5]
  40b434:	dec    ebp
  40b435:	retf   
  40b436:	test   DWORD PTR ds:0xa29a8445,edx
  40b43c:	imul   esi,DWORD PTR [eax+0x58],0xffffffdc
  40b440:	(bad)  
  40b441:	enter  0xa542,0x63
  40b445:	and    esi,DWORD PTR [esi-0x7734ff4b]
  40b44b:	out    0xcf,al
  40b44d:	stos   BYTE PTR es:[edi],al
  40b44e:	mov    al,0xcb
  40b450:	pop    esi
  40b451:	lock inc esi
  40b453:	jae    0x40b40d
  40b455:	jno    0x40b481
  40b457:	sbb    edx,DWORD PTR [edx-0x7b]
  40b45a:	pushf  
  40b45b:	xchg   DWORD PTR [edi+0x69],ebp
  40b45e:	add    al,0xf2
  40b460:	mov    WORD PTR [ecx+0x19],cs
  40b463:	push   esp
  40b464:	lahf   
  40b465:	fistp  DWORD PTR [ebx-0x2f03625e]
  40b46b:	xchg   edi,eax
  40b46c:	mov    bh,0x66
  40b46e:	lds    edx,FWORD PTR [edx+0x1a]
  40b471:	pop    esp
  40b472:	cli    
  40b473:	ss push ebx
  40b475:	and    DWORD PTR [eax-0x3c],0x8
  40b479:	test   DWORD PTR [edx-0x1e],esi
  40b47c:	push   ds
  40b47d:	dec    esi
  40b47e:	shl    DWORD PTR [edi+0x6e],1
  40b481:	xchg   edx,eax
  40b482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b483:	pop    es
  40b484:	add    bl,al
  40b486:	pop    edx
  40b487:	test   BYTE PTR [edx],dh
  40b489:	mov    ds:0x129b1fb6,al
  40b48e:	clc    
  40b48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b490:	icebp  
  40b491:	pop    es
  40b492:	retf   0xd305
  40b495:	test   bl,0x9d
  40b498:	xchg   BYTE PTR [edx],bh
  40b49a:	fsub   st(7),st
  40b49c:	mov    bh,0x88
  40b49e:	xor    al,0x63
  40b4a0:	stc    
  40b4a1:	xchg   DWORD PTR [ebp-0x1f6f849f],edi
  40b4a7:	push   0x78
  40b4a9:	cmp    DWORD PTR [edx+0x46],edi
  40b4ac:	pop    ecx
  40b4ad:	mov    esi,DWORD PTR [ebx-0x70]
  40b4b0:	je     0x40b4af
  40b4b2:	shl    DWORD PTR [ecx],1
  40b4b4:	mov    eax,0x31d86d50
  40b4b9:	pop    ds
  40b4ba:	xor    DWORD PTR [edx+ebx*2],ebx
  40b4bd:	sbb    al,0x34
  40b4bf:	addr16 inc esi
  40b4c2:	test   al,0x2
  40b4c4:	bswap  esi
  40b4c6:	cdq    
  40b4c7:	ds jecxz 0x40b511
  40b4ca:	mov    dl,0x87
  40b4cc:	xchg   edi,edx
  40b4ce:	mov    ds:0x75881869,al
  40b4d3:	sbb    al,0x9e
  40b4d5:	jmp    0x77f3d345
  40b4da:	sub    esp,ebp
  40b4dc:	cmp    BYTE PTR [esi+0x523b10c3],cl
  40b4e2:	sbb    esp,edi
  40b4e4:	push   ss
  40b4e5:	je     0x40b473
  40b4e7:	xor    edx,esi
  40b4e9:	loopne 0x40b53b
  40b4eb:	fmul   QWORD PTR [edi+0x74ccd9b1]
  40b4f1:	les    eax,FWORD PTR [edx+0x527fbd96]
  40b4f7:	daa    
  40b4f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f9:	jl     0x40b4b3
  40b4fb:	xor    ebp,DWORD PTR [esi+0x43]
  40b4fe:	iret   
  40b4ff:	inc    esi
  40b500:	shl    BYTE PTR [ecx-0x56936230],1
  40b506:	xchg   ebx,eax
  40b507:	in     al,dx
  40b508:	mov    bh,0x71
  40b50a:	cmp    edi,DWORD PTR [edx]
  40b50c:	repnz pop es
  40b50e:	cld    
  40b50f:	inc    esi
  40b510:	mov    edi,0xaca96663
  40b515:	sub    edx,DWORD PTR [esi-0x6772473a]
  40b51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b51c:	add    dl,BYTE PTR [eax-0x18]
  40b51f:	call   0x710af74a
  40b524:	mov    esp,0xa2a98f9
  40b529:	dec    ecx
  40b52a:	jo     0x40b565
  40b52c:	sub    eax,0xa318256e
  40b531:	pop    esp
  40b532:	(bad)
  40b536:	retf   0xd357
  40b539:	sub    al,0x8c
  40b53b:	fsubrp st(4),st
  40b53d:	xchg   edx,eax
  40b53e:	push   edi
  40b53f:	div    BYTE PTR [eax-0x31d48f35]
  40b545:	xor    eax,0x8a63cc04
  40b54a:	lods   eax,DWORD PTR ds:[esi]
  40b54b:	mov    al,ds:0x89fc9ca
  40b550:	pop    ds
  40b551:	mov    dl,0x89
  40b553:	xchg   BYTE PTR ss:[edx],bl
  40b556:	stc    
  40b557:	xchg   esp,eax
  40b558:	test   eax,0x8c729d84
  40b55d:	mov    esp,0xa764d8a6
  40b562:	call   0x8fe3c1e3
  40b567:	outs   dx,DWORD PTR ds:[esi]
  40b568:	cmp    ecx,DWORD PTR [ebx+eiz*2]
  40b56b:	xor    BYTE PTR [ecx],dl
  40b56d:	xor    al,bh
  40b56f:	fimul  DWORD PTR [eax+ebp*8]
  40b572:	inc    esi
  40b573:	hlt    
  40b574:	lods   eax,DWORD PTR ds:[esi]
  40b575:	lds    ebp,FWORD PTR [edi+0x22a18aa3]
  40b57b:	jmp    0xb5488b3e
  40b580:	xchg   dl,ch
  40b582:	mov    ebp,0xf9054a91
  40b587:	call   0x5ec5517c
  40b58c:	adc    DWORD PTR [edi],edi
  40b58e:	gs jecxz 0x40b569
  40b591:	xor    al,0x95
  40b593:	das    
  40b594:	es ret 
  40b596:	fidiv  DWORD PTR es:[eax+0x34aeb62b]
  40b59d:	mov    esp,0x1d0afda6
  40b5a2:	fadd   QWORD PTR [ebp-0x3de143dc]
  40b5a8:	mov    ch,ah
  40b5aa:	and    BYTE PTR [ecx+0x54],0x3a
  40b5ae:	addr16 inc edi
  40b5b0:	or     eax,0xc757902c
  40b5b5:	inc    esi
  40b5b6:	mov    BYTE PTR [edx-0x3699fb88],dh
  40b5bc:	xchg   DWORD PTR [esi-0x3ff3a02b],esi
  40b5c2:	jno    0x40b54a
  40b5c4:	inc    esp
  40b5c5:	bound  ebp,QWORD PTR [esi+0x29]
  40b5c8:	icebp  
  40b5c9:	(bad)  
  40b5ca:	jb     0x40b5a5
  40b5cc:	fsubr  QWORD PTR [ebx-0x4a]
  40b5cf:	add    al,0xb3
  40b5d1:	sbb    dl,BYTE PTR [eax+0x40]
  40b5d4:	sub    BYTE PTR [eax+0x4b],ch
  40b5d7:	int3   
  40b5d8:	out    dx,eax
  40b5d9:	(bad)  [esi]
  40b5db:	lods   al,BYTE PTR ds:[esi]
  40b5dd:	lds    ebx,FWORD PTR [ebx]
  40b5df:	pop    ecx
  40b5e0:	call   FWORD PTR [ebx]
  40b5e2:	xchg   DWORD PTR [esi+0x59971995],edi
  40b5e8:	fwait
  40b5e9:	push   edi
  40b5ea:	cmp    BYTE PTR [ebx],bh
  40b5ec:	dec    eax
  40b5ed:	push   ebx
  40b5ee:	adc    DWORD PTR [ecx],esp
  40b5f0:	jo     0x40b616
  40b5f2:	and    esi,DWORD PTR [ebx+0x7f048f5c]
  40b5f8:	and    edx,DWORD PTR [ecx-0x58]
  40b5fb:	ret    0x7427
  40b5fe:	mov    WORD PTR [eax-0x21],ds
  40b601:	mov    dl,0xf1
  40b603:	or     eax,0xcff2e252
  40b608:	fisttp DWORD PTR ds:0xf535226d
  40b60e:	push   ecx
  40b60f:	mov    esp,0x5ab51cde
  40b614:	mov    eax,0x13671ab2
  40b619:	in     eax,0xfc
  40b61b:	or     edx,edx
  40b61d:	mov    ds:0x5a57282a,al
  40b622:	sub    bh,BYTE PTR [edx+0x709381f6]
  40b628:	iret   
  40b629:	xor    bl,BYTE PTR [ecx+esi*1+0x6d]
  40b62d:	adc    al,0xfc
  40b62f:	mov    al,0xc7
  40b631:	stos   DWORD PTR es:[edi],eax
  40b632:	push   ebp
  40b633:	test   BYTE PTR [edx+0x3f],al
  40b636:	pop    edx
  40b637:	jmp    0xf07648e2
  40b63c:	lea    esp,[ebx-0x3f32f34f]
  40b642:	mov    cl,0x84
  40b644:	or     BYTE PTR [ebp-0x62b8b98c],dl
  40b64a:	inc    al
  40b64c:	loopne 0x40b5d9
  40b64e:	jbe    0x40b609
  40b650:	(bad)  
  40b652:	pusha  
  40b653:	ja     0x40b618
  40b655:	int3   
  40b656:	retf   0x16c5
  40b659:	jo     0x40b605
  40b65b:	or     edi,DWORD PTR [esi+0x7e]
  40b65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b65f:	cmp    al,0x95
  40b661:	or     dl,BYTE PTR [edx+0x57]
  40b664:	loopne 0x40b632
  40b666:	cmp    DWORD PTR [esi+0x2b],0x8e213182
  40b66d:	sub    DWORD PTR [esi-0x69],0x9a847d59
  40b674:	push   cs
  40b675:	es aas 
  40b677:	(bad)  
  40b678:	ins    BYTE PTR es:[edi],dx
  40b679:	and    BYTE PTR [ebx-0x73c29180],dh
  40b67f:	sub    DWORD PTR [ebx-0x3c],0x58b5046
  40b686:	mov    ?,ebp
  40b688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b689:	and    al,0x88
  40b68c:	xchg   DWORD PTR ss:[esi-0x773cf4cf],eax
  40b693:	push   0x6263caab
  40b698:	jo     0x40b6a3
  40b69a:	adc    eax,0x1fafbee2
  40b69f:	pop    ds
  40b6a0:	ret    
  40b6a1:	nop
  40b6a2:	into   
  40b6a3:	sub    esp,ecx
  40b6a5:	hlt    
  40b6a6:	fdiv   st,st(7)
  40b6a8:	aas    
  40b6a9:	rol    BYTE PTR [esi],cl
  40b6ab:	leave  
  40b6ac:	mov    bh,BYTE PTR [ecx+esi*4-0x60657ca0]
  40b6b3:	sub    al,0x11
  40b6b5:	pushf  
  40b6b6:	jae    0x40b713
  40b6b8:	das    
  40b6b9:	cmp    edx,DWORD PTR cs:[edx+0x64d8dde2]
  40b6c0:	xchg   esp,eax
  40b6c1:	pop    edx
  40b6c2:	mul    BYTE PTR [ebp-0x4b]
  40b6c5:	inc    eax
  40b6c6:	lock jg 0x40b6dd
  40b6c9:	xchg   BYTE PTR [ebx+esi*8-0x41],bh
  40b6cd:	push   esi
  40b6ce:	addr16 repnz inc edi
  40b6d1:	mov    cl,0xd3
  40b6d3:	cmc    
  40b6d4:	icebp  
  40b6d5:	cli    
  40b6d6:	or     al,0xbe
  40b6d8:	cmp    eax,0xbfb15fdd
  40b6dd:	shl    eax,0x40
  40b6e0:	push   ecx
  40b6e1:	mov    esi,0xd0f59f94
  40b6e6:	and    eax,0xb4131038
  40b6eb:	dec    edi
  40b6ec:	fpatan 
  40b6ee:	add    al,0x15
  40b6f0:	bound  ebx,QWORD PTR [eax-0x593b9ed3]
  40b6f6:	adc    ah,BYTE PTR [esi-0x10798a54]
  40b6fc:	loop   0x40b71a
  40b6fe:	or     ah,cl
  40b700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b701:	movsx  ebx,cx
  40b704:	xor    esp,DWORD PTR [ebx+0x42]
  40b707:	mov    ecx,DWORD PTR [edx+ebx*2-0x4112a2ca]
  40b70e:	aad    0x5c
  40b710:	adc    DWORD PTR [esi+0x4c820ded],edi
  40b716:	fs (bad) 
  40b718:	addr16 mov dh,0xc0
  40b71b:	in     al,dx
  40b71c:	sbb    eax,0x42e5fad9
  40b721:	sahf   
  40b722:	into   
  40b723:	bound  cx,DWORD PTR [edx]
  40b726:	and    ch,BYTE PTR [ecx-0x6e154db8]
  40b72c:	sbb    DWORD PTR [ecx],ecx
  40b72e:	mov    ecx,0xaaea8fa1
  40b733:	loope  0x40b711
  40b735:	mov    ecx,0xe715909a
  40b73a:	dec    ebp
  40b73b:	imul   edi,DWORD PTR [edx],0x79e0f91e
  40b741:	mov    edx,esi
  40b743:	cmp    ah,BYTE PTR [ebx+ecx*1]
  40b746:	sub    eax,0xfec8c2eb
  40b74b:	pop    ds
  40b74c:	shr    BYTE PTR [edx],1
  40b74e:	pushf  
  40b74f:	xchg   DWORD PTR [esi],edi
  40b751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b752:	jo     0x40b6ef
  40b754:	je     0x40b6da
  40b756:	ret    0x2a57
  40b759:	mov    bh,cl
  40b75b:	adc    ebx,DWORD PTR [ebp+0x3d]
  40b75e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b75f:	mov    ecx,0x7050ecb0
  40b764:	sbb    BYTE PTR [esp+ebp*2-0x583a150d],0xf2
  40b76c:	sti    
  40b76d:	(bad)  
  40b76e:	std    
  40b76f:	push   esi
  40b770:	aaa    
  40b771:	imul   ebp,DWORD PTR [ebx],0x7d
  40b774:	dec    edx
  40b775:	mov    DWORD PTR [edi-0x1751762],esp
  40b77b:	fsubr  DWORD PTR [ecx-0x424b5997]
  40b781:	je     0x40b775
  40b783:	xor    DWORD PTR [ebx],0xab4dc2c7
  40b789:	xor    dh,cl
  40b78b:	mov    al,ds:0x7032d9dd
  40b790:	mov    esp,0x2f5ce13e
  40b795:	adc    eax,0x19562684
  40b79a:	cmp    al,0x73
  40b79c:	inc    ecx
  40b79d:	mov    cl,0x35
  40b79f:	and    eax,0xd90e8824
  40b7a4:	gs pop edi
  40b7a6:	test   al,0xca
  40b7a8:	cwde   
  40b7a9:	push   ebp
  40b7aa:	in     al,dx
  40b7ab:	xchg   ebx,eax
  40b7ac:	jbe    0x40b75a
  40b7ae:	push   ebp
  40b7af:	inc    edx
  40b7b0:	retf   0xad8d
  40b7b3:	xchg   BYTE PTR [eax],dl
  40b7b5:	dec    esp
  40b7b6:	dec    edx
  40b7b7:	mov    ecx,0x2f25ffcc
  40b7bc:	repz or edx,DWORD PTR [esi+0x28b7c2dd]
  40b7c3:	and    BYTE PTR [ecx-0x1b090d31],dh
  40b7c9:	sub    eax,0x5ad26749
  40b7ce:	test   BYTE PTR ds:0x97611966,0x19
  40b7d5:	add    BYTE PTR ds:0xcb057408,bh
  40b7db:	pop    ds
  40b7dc:	pop    esi
  40b7dd:	mov    edi,0xbcc11c5f
  40b7e2:	inc    esi
  40b7e3:	xor    ebx,ebx
  40b7e5:	ins    DWORD PTR es:[edi],dx
  40b7e6:	xchg   esp,eax
  40b7e7:	jnp    0x40b81f
  40b7e9:	lods   al,BYTE PTR ds:[esi]
  40b7ea:	mov    WORD PTR [ebp+0x3d],es
  40b7ed:	ja     0x40b7eb
  40b7ef:	(bad)  
  40b7f0:	sti    
  40b7f1:	xchg   sp,ax
  40b7f3:	cdq    
  40b7f4:	inc    ecx
  40b7f5:	mov    cs,WORD PTR [ebp-0x7995af07]
  40b7fb:	or     esi,DWORD PTR [eax+esi*2+0x6f903467]
  40b802:	cmp    DWORD PTR [ebp+0x72],ebp
  40b805:	mov    dl,ah
  40b807:	adc    DWORD PTR [edi-0x3c66f6],eax
  40b80d:	in     al,0xbc
  40b80f:	xchg   esp,eax
  40b810:	push   ebp
  40b811:	mov    esp,0x81d656ce
  40b816:	scas   al,BYTE PTR es:[edi]
  40b817:	mov    BYTE PTR [esi+0x6f5cb507],0x7e
  40b81e:	in     eax,dx
  40b81f:	jae    0x40b80e
  40b821:	loop   0x40b7d5
  40b823:	push   esi
  40b824:	or     DWORD PTR [ebx-0x6f],esp
  40b827:	call   0xd592:0x46e3fde2
  40b82e:	sub    al,0x39
  40b830:	call   0x93315293
  40b835:	loope  0x40b8a4
  40b837:	push   es
  40b838:	fidiv  WORD PTR [esi+0x23]
  40b83b:	xchg   ebx,eax
  40b83c:	lahf   
  40b83d:	adc    DWORD PTR [ecx],0xa2dd45c0
  40b843:	inc    ebx
  40b844:	repz mov cl,0x60
  40b847:	stc    
  40b848:	lods   al,BYTE PTR ds:[esi]
  40b849:	inc    esp
  40b84a:	addr16 test al,0xdd
  40b84d:	pop    edi
  40b84e:	into   
  40b84f:	sbb    eax,0x23b39f81
  40b854:	cmp    bh,BYTE PTR [ecx-0x67]
  40b857:	loop   0x40b830
  40b859:	xchg   ecx,eax
  40b85a:	sar    BYTE PTR [eax+esi*1+0x3b9b374b],cl
  40b861:	mov    eax,0x835f3b74
  40b866:	xchg   edx,esp
  40b868:	rcl    BYTE PTR [esi+0x34],cl
  40b86b:	push   edi
  40b86c:	push   edi
  40b86d:	push   ds
  40b86e:	jnp    0x40b8b1
  40b870:	xchg   edi,eax
  40b871:	add    eax,0x372e6f35
  40b876:	adc    edx,ecx
  40b878:	push   eax
  40b879:	mov    esp,0x4fc1bfff
  40b87e:	add    al,BYTE PTR [edx-0xa682e57]
  40b884:	in     al,dx
  40b885:	push   ss
  40b886:	scas   eax,DWORD PTR es:[edi]
  40b887:	mov    edi,0xac2186bf
  40b88c:	(bad)  
  40b88d:	ins    DWORD PTR es:[edi],dx
  40b88e:	cwde   
  40b88f:	sbb    DWORD PTR [edx],esp
  40b891:	sbb    eax,0xfa561fe7
  40b896:	adc    DWORD PTR [ecx-0x75aaae10],edi
  40b89c:	repz adc cl,dh
  40b89f:	jge    0x40b865
  40b8a1:	mov    ds:0x71550f02,eax
  40b8a6:	(bad)  
  40b8a7:	jmp    0x7533:0xa3bd5753
  40b8ae:	mov    ss,ebx
  40b8b0:	dec    eax
  40b8b1:	and    ebx,edi
  40b8b3:	xor    eax,0x8b5e2dd7
  40b8b8:	lahf   
  40b8b9:	sahf   
  40b8ba:	retf   
  40b8bb:	inc    ebp
  40b8bc:	add    cl,BYTE PTR [eax]
  40b8be:	push   ss
  40b8bf:	jo     0x40b917
  40b8c1:	push   es
  40b8c2:	ret    
  40b8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c4:	pop    esi
  40b8c5:	dec    ebp
  40b8c6:	popf   
  40b8c7:	jge    0x40b909
  40b8c9:	clc    
  40b8ca:	cdq    
  40b8cb:	mov    bl,0x8
  40b8cd:	das    
  40b8ce:	mov    bl,0x7d
  40b8d0:	lea    ebx,[esi+eax*2-0x9]
  40b8d4:	ret    0xaca5
  40b8d7:	fwait
  40b8d8:	and    dl,BYTE PTR [ecx-0x28439af9]
  40b8de:	fwait
  40b8df:	adc    eax,0x2f8f3ee2
  40b8e4:	mov    ch,0x22
  40b8e6:	jmp    0x340c:0xe1aa0a57
  40b8ed:	mov    al,ds:0x5924e481
  40b8f2:	cmp    DWORD PTR [edi-0x1e0ef462],edi
  40b8f8:	bound  ebp,QWORD PTR ss:[eax+0x1c326fdf]
  40b8ff:	scas   al,BYTE PTR es:[edi]
  40b900:	inc    esp
  40b901:	push   ss
  40b902:	ret    
  40b903:	loop   0x40b950
  40b905:	push   ds
  40b906:	cdq    
  40b907:	inc    ecx
  40b908:	push   edi
  40b909:	out    0x49,eax
  40b90b:	repz mov ch,0xd4
  40b90e:	xchg   esi,eax
  40b90f:	shr    DWORD PTR [eax],cl
  40b911:	jns    0x40b900
  40b913:	loope  0x40b96b
  40b915:	loop   0x40b973
  40b917:	add    ebp,ebx
  40b919:	jne    0x40b8f1
  40b91b:	test   DWORD PTR [edi],ebp
  40b91d:	(bad)  
  40b91e:	js     0x40b98f
  40b920:	xor    DWORD PTR [eax],esp
  40b922:	stos   BYTE PTR es:[edi],al
  40b923:	xchg   BYTE PTR [edi+edx*1],al
  40b926:	fdivr  DWORD PTR [ebx]
  40b928:	mov    edx,0xd3ccb5a9
  40b92d:	ds push ss
  40b92f:	nop
  40b930:	nop
  40b931:	inc    ecx
  40b932:	or     al,0x71
  40b934:	dec    ebp
  40b935:	jbe    0x40b958
  40b937:	or     BYTE PTR [edi],dh
  40b939:	jecxz  0x40b922
  40b93b:	xor    BYTE PTR [ebx+edi*4],0x27
  40b93f:	jle    0x40b92d
  40b941:	ds ret 0xb343
  40b945:	push   edi
  40b946:	mul    BYTE PTR [eax]
  40b948:	retf   0x4201
  40b94b:	sub    eax,0xfceca045
  40b950:	test   BYTE PTR [ebp+0x6154e058],0xee
  40b957:	inc    edi
  40b958:	push   ds
  40b959:	inc    ebp
  40b95a:	test   eax,0xd12ac128
  40b95f:	mov    ah,0x83
  40b961:	xor    ecx,DWORD PTR ds:0x32c31022
  40b967:	(bad)  
  40b969:	cmp    esi,0x44
  40b96c:	lds    eax,FWORD PTR [ebx]
  40b96e:	mov    eax,0xc0941f6d
  40b973:	or     esi,DWORD PTR [ebp+0x601fccb9]
  40b979:	and    BYTE PTR [edi-0x1c],ah
  40b97c:	rcr    BYTE PTR [edi+0x64],1
  40b97f:	and    DWORD PTR [ebp+esi*1-0x4f],eax
  40b983:	sbb    al,0x74
  40b985:	iret   
  40b986:	mov    esi,0x6ee04703
  40b98b:	sub    BYTE PTR [eax+eax*8-0x470fb9e7],ah
  40b992:	sbb    eax,0x220df2df
  40b997:	fld    DWORD PTR [ebp-0x56]
  40b99a:	fs or  edx,edi
  40b99d:	push   eax
  40b99e:	and    BYTE PTR [edi+0x765a379e],ah
  40b9a4:	xor    DWORD PTR [ebp+0x4],edx
  40b9a7:	inc    edi
  40b9a8:	xor    edi,ecx
  40b9aa:	mov    ss,WORD PTR [edi+0x102ff3c7]
  40b9b0:	stc    
  40b9b1:	ja     0x40b9af
  40b9b3:	inc    ebp
  40b9b4:	into   
  40b9b5:	dec    ecx
  40b9b6:	push   ecx
  40b9b7:	mov    ecx,0xdfaf0b75
  40b9bc:	mov    ebx,0x57f3d0a2
  40b9c1:	test   DWORD PTR ds:0xff43801c,edi
  40b9c7:	cmc    
  40b9c8:	cmp    eax,0x609dcefb
  40b9cd:	fnsave [edx-0x9df0faf]
  40b9d3:	push   ss
  40b9d4:	icebp  
  40b9d5:	xchg   ecx,eax
  40b9d6:	fisubr DWORD PTR [ebx+ebp*1+0x8d53a2d]
  40b9dd:	call   0xf9b1997d
  40b9e2:	cdq    
  40b9e3:	mov    al,BYTE PTR es:[ebx+0x54]
  40b9e7:	inc    ebx
  40b9e8:	hlt    
  40b9e9:	out    dx,eax
  40b9ea:	in     eax,dx
  40b9eb:	arpl   WORD PTR [edi+0x5b2b825d],cx
  40b9f1:	jb     0x40b979
  40b9f3:	cli    
  40b9f4:	outs   dx,DWORD PTR ds:[esi]
  40b9f5:	add    eax,0x12504c1b
  40b9fa:	dec    edx
  40b9fb:	push   ebp
  40b9fc:	or     ah,BYTE PTR [ebx-0x40]
  40b9ff:	push   ebx
  40ba00:	add    dl,BYTE PTR [ebp-0x779b5a11]
  40ba06:	jnp    0x40b9b1
  40ba08:	push   cs
  40ba09:	ja     0x40ba5b
  40ba0b:	popa   
  40ba0c:	fstp   QWORD PTR [ebp+0x29]
  40ba0f:	test   ah,0xab
  40ba12:	scas   eax,DWORD PTR es:[edi]
  40ba13:	push   esp
  40ba14:	mov    WORD PTR [ecx+0x38],?
  40ba17:	sbb    ch,ch
  40ba19:	leave  
  40ba1a:	push   es
  40ba1b:	cmc    
  40ba1c:	pop    ebx
  40ba1d:	ins    BYTE PTR es:[edi],dx
  40ba1e:	fimul  DWORD PTR [ebx+0x78de6adf]
  40ba24:	add    al,0x4b
  40ba26:	jbe    0x40ba8f
  40ba28:	push   edi
  40ba29:	sbb    eax,0xeb7728fa
  40ba2e:	cmp    dl,BYTE PTR [ecx+eax*1]
  40ba31:	je     0x40b9b8
  40ba33:	ficom  WORD PTR [di+0x4b]
  40ba37:	mov    edi,0x1826930
  40ba3c:	in     al,0xde
  40ba3e:	ja     0x40ba62
  40ba40:	dec    ecx
  40ba41:	mov    al,ds:0xc8fee0bc
  40ba46:	sbb    ch,BYTE PTR [edx+0x4b]
  40ba49:	stc    
  40ba4a:	sub    al,0x54
  40ba4c:	fwait
  40ba4d:	sbb    BYTE PTR [esi],bh
  40ba4f:	mov    al,0x29
  40ba51:	mov    esi,0xf55b944
  40ba56:	mov    eax,0x18bb8e3b
  40ba5b:	xchg   ebx,eax
  40ba5c:	xor    eax,0xd1855ddc
  40ba61:	jle    0x40bad9
  40ba63:	push   ebx
  40ba64:	sub    al,0xa4
  40ba66:	test   eax,0xb69cb64e
  40ba6b:	iret   
  40ba6c:	out    0x3a,al
  40ba6e:	(bad)  
  40ba6f:	neg    DWORD PTR [eax-0x1c5c2f38]
  40ba75:	mov    ebx,DWORD PTR [edi-0x3a4c9fa7]
  40ba7b:	mov    esi,0x4f866a74
  40ba80:	cmp    al,0x20
  40ba82:	popf   
  40ba83:	call   0x1c0764af
  40ba88:	ret    
  40ba89:	pushf  
  40ba8a:	or     al,0x90
  40ba8c:	or     ah,0x40
  40ba8f:	daa    
  40ba90:	aaa    
  40ba91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba92:	mov    al,ds:0x944b2d13
  40ba97:	ins    BYTE PTR es:[edi],dx
  40ba98:	add    eax,0xe99b3d13
  40ba9d:	jo     0x40ba5e
  40ba9f:	mov    dl,0x81
  40baa1:	and    BYTE PTR [edx],dh
  40baa3:	pop    DWORD PTR [esi]
  40baa5:	sub    dh,ch
  40baa7:	mov    bl,0xf7
  40baa9:	lea    edi,[ebx-0x72bdc12]
  40baaf:	sahf   
  40bab0:	dec    eax
  40bab1:	bound  ecx,QWORD PTR [ebp-0x46]
  40bab4:	shl    DWORD PTR [ebx-0xd],1
  40bab7:	mov    WORD PTR [edi-0x28],cs
  40baba:	gs xor ebx,esp
  40babd:	dec    ecx
  40babe:	sbb    bh,BYTE PTR [ecx-0x598d90a3]
  40bac4:	pop    esi
  40bac5:	sub    ebp,DWORD PTR [ebx+0x60]
  40bac8:	push   es
  40bac9:	mov    WORD PTR [ebx+eiz*1],gs
  40bacc:	or     eax,0x23b6a328
  40bad1:	int3   
  40bad2:	sub    DWORD PTR [edi+0x59a2aef3],ecx
  40bad8:	data16 stos BYTE PTR es:[edi],al
  40bada:	dec    ecx
  40badb:	cmp    DWORD PTR ds:0xacaf75f1,ebx
  40bae1:	lock jecxz 0x40bb5e
  40bae4:	push   eax
  40bae5:	test   dh,ah
  40bae7:	int3   
  40bae8:	inc    ebx
  40bae9:	sti    
  40baea:	das    
  40baeb:	out    dx,al
  40baec:	lock loop 0x40bb0e
  40baef:	push   esi
  40baf0:	cmp    ebp,DWORD PTR [ecx-0x1f]
  40baf3:	popa   
  40baf4:	fwait
  40baf5:	push   eax
  40baf6:	mov    ebx,0xb4ba6b35
  40bafb:	pop    ebx
  40bafc:	call   0xb338:0xdafab1c0
  40bb03:	mov    ch,0x5c
  40bb05:	dec    ebx
  40bb06:	mov    ch,0x42
  40bb08:	ror    BYTE PTR [ecx+0x6b],0x22
  40bb0c:	inc    esi
  40bb0d:	sahf   
  40bb0e:	push   esp
  40bb0f:	or     edx,esi
  40bb11:	das    
  40bb12:	cmc    
  40bb13:	sbb    al,BYTE PTR [edi+0x15ec828e]
  40bb19:	icebp  
  40bb1a:	inc    eax
  40bb1b:	stos   BYTE PTR es:[edi],al
  40bb1c:	push   ds
  40bb1d:	hlt    
  40bb1e:	test   DWORD PTR [ecx],0xdf5ae8bc
  40bb24:	jo     0x40bb67
  40bb26:	sub    edx,DWORD PTR [ebp-0x5b]
  40bb29:	and    ebx,0xffffffec
  40bb2c:	adc    al,0xd9
  40bb2e:	jcxz   0x40bafc
  40bb31:	(bad)  
  40bb32:	ss out dx,al
  40bb34:	mov    DWORD PTR [ecx+0x79c785fa],ebx
  40bb3a:	jl     0x40baef
  40bb3c:	lea    eax,[eax-0x59]
  40bb3f:	test   DWORD PTR [ecx],0xcc2a800e
  40bb45:	ja     0x40bb71
  40bb47:	mov    edx,0x22002e99
  40bb4c:	jge    0x40badb
  40bb4e:	fidiv  WORD PTR [ebp+0x11]
  40bb51:	mov    ?,WORD PTR [ecx-0x33]
  40bb54:	retf   0xe61b
  40bb57:	inc    ebx
  40bb58:	cdq    
  40bb59:	push   0x3f31434e
  40bb5e:	sub    edi,ebx
  40bb60:	pop    ecx
  40bb61:	mov    al,0xd8
  40bb63:	mov    esp,0xb7401cf7
  40bb68:	xor    al,0x6a
  40bb6a:	or     DWORD PTR [ebx-0x180fb555],ecx
  40bb70:	ja     0x40bb52
  40bb72:	jmp    0xa451:0xc0340290
  40bb79:	repz scas eax,DWORD PTR es:[edi]
  40bb7b:	xchg   DWORD PTR [edx+ebp*4-0x4a41918d],ebp
  40bb82:	lahf   
  40bb83:	in     al,0x43
  40bb85:	jne    0x40bb33
  40bb87:	hlt    
  40bb88:	les    ebp,FWORD PTR [eax-0xd]
  40bb8b:	test   DWORD PTR [ecx+edx*1+0x28],edx
  40bb8f:	scas   eax,DWORD PTR es:[edi]
  40bb90:	xchg   BYTE PTR [ebx],bh
  40bb92:	xlat   BYTE PTR ds:[ebx]
  40bb93:	add    eax,0x8e656f49
  40bb98:	mov    al,ds:0x3922f05
  40bb9d:	sar    BYTE PTR [ecx],cl
  40bb9f:	dec    esi
  40bba0:	cli    
  40bba1:	(bad)  
  40bba2:	cli    
  40bba3:	test   eax,0x12b82e4a
  40bba8:	loope  0x40bbf8
  40bbaa:	push   eax
  40bbab:	in     al,0x47
  40bbad:	jmp    0x1313:0x3f47ab1f
  40bbb4:	out    0x76,al
  40bbb6:	repnz fild DWORD PTR [eax-0x1cdb9060]
  40bbbd:	clc    
  40bbbe:	pushf  
  40bbbf:	push   ebp
  40bbc0:	jp     0x40bbc7
  40bbc2:	aas    
  40bbc3:	add    al,0x16
  40bbc5:	out    dx,eax
  40bbc6:	and    eax,0x423dfd20
  40bbcb:	nop
  40bbcc:	pop    es
  40bbcd:	shl    BYTE PTR [ecx+0x3f],0x40
  40bbd1:	sub    ecx,DWORD PTR [edx]
  40bbd3:	inc    esi
  40bbd4:	les    edi,FWORD PTR [eax+0x28]
  40bbd7:	push   edx
  40bbd8:	std    
  40bbd9:	cmp    BYTE PTR [ebx-0x40],ch
  40bbdc:	lea    edi,[esi]
  40bbde:	mov    ebx,0x1e8a1a9e
  40bbe3:	mov    bl,0x37
  40bbe5:	sahf   
  40bbe6:	or     ch,0x13
  40bbe9:	jbe    0x40bbab
  40bbeb:	mov    al,0x98
  40bbed:	sub    DWORD PTR [edi+0x852eae8],0x8e1deb6a
  40bbf7:	cld    
  40bbf8:	dec    cx
  40bbfa:	push   ebx
  40bbfb:	(bad)  
  40bbfc:	cld    
  40bbfd:	bound  ebp,QWORD PTR [edx-0x1fbb5535]
  40bc03:	dec    esi
  40bc04:	add    BYTE PTR [ecx-0x2f60f2ed],bl
  40bc0a:	sbb    ah,dh
  40bc0c:	lahf   
  40bc0d:	sub    bl,al
  40bc0f:	inc    ebp
  40bc10:	push   ds
  40bc11:	outs   dx,DWORD PTR ds:[esi]
  40bc12:	inc    ebp
  40bc13:	sub    BYTE PTR [ebx-0x2a22d784],0xa1
  40bc1a:	gs cld 
  40bc1c:	cmp    ecx,esp
  40bc1e:	fisubr WORD PTR [eax+0x8794d5d]
  40bc24:	imul   ebx,DWORD PTR [eax+eax*1-0x53],0xd0b70e74
  40bc2c:	retf   
  40bc2d:	mov    esp,ebp
  40bc2f:	pop    ebp
  40bc30:	out    dx,al
  40bc31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc32:	aad    0x8e
  40bc34:	inc    edi
  40bc35:	ss pop ds
  40bc37:	push   ds
  40bc38:	test   DWORD PTR [ebx-0x7],edi
  40bc3b:	lods   al,BYTE PTR ds:[esi]
  40bc3c:	mov    dl,0x28
  40bc3e:	fisubr DWORD PTR [ecx+0x5da49e41]
  40bc44:	mov    bh,0xb1
  40bc46:	sbb    ah,BYTE PTR [ecx+0x19]
  40bc49:	xchg   esp,eax
  40bc4a:	push   ds
  40bc4b:	jo     0x40bc1d
  40bc4d:	nop
  40bc4e:	test   eax,0x301c44f5
  40bc53:	mov    ds:0x1668806b,al
  40bc58:	pop    es
  40bc59:	(bad)  
  40bc5a:	xchg   ebx,eax
  40bc5b:	fdivr  DWORD PTR [eax-0x65b67637]
  40bc61:	pop    edx
  40bc62:	pop    esi
  40bc63:	jns    0x40bcd2
  40bc65:	and    al,0xe8
  40bc67:	fadd   QWORD PTR [ecx+0x724399a]
  40bc6d:	bound  esi,QWORD PTR [esp+ebx*8+0x5d]
  40bc71:	xor    esp,edi
  40bc73:	pusha  
  40bc74:	jge    0x40bc09
  40bc76:	in     eax,dx
  40bc77:	mov    BYTE PTR [esi+0x15d5264a],dh
  40bc7d:	add    BYTE PTR [ebx],dh
  40bc7f:	or     edx,DWORD PTR [edx-0x2a138c61]
  40bc85:	xchg   esp,eax
  40bc86:	std    
  40bc87:	push   0x61fecc54
  40bc8c:	push   ds
  40bc8d:	mov    edx,DWORD PTR [edi-0x7e]
  40bc90:	push   ebp
  40bc91:	shl    DWORD PTR [ebx-0x57],cl
  40bc94:	dec    ebp
  40bc95:	ror    DWORD PTR [ebp-0x36f96516],0x30
  40bc9c:	int3   
  40bc9d:	xchg   BYTE PTR [eax+0x6d0ad878],al
  40bca3:	(bad)  
  40bca4:	scas   al,BYTE PTR es:[edi]
  40bca5:	repz or DWORD PTR [ebx+eax*2+0x3f53e591],ebp
  40bcad:	cli    
  40bcae:	sbb    ah,bh
  40bcb0:	sbb    BYTE PTR [edi-0x1e1191e3],dl
  40bcb6:	cld    
  40bcb7:	jg     0x40bc97
  40bcb9:	lahf   
  40bcba:	xchg   ebx,eax
  40bcbb:	nop
  40bcbc:	mov    ah,0x52
  40bcbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcbf:	xchg   ebp,eax
  40bcc0:	xor    eax,esi
  40bcc2:	push   edx
  40bcc3:	pushf  
  40bcc4:	stos   DWORD PTR es:[edi],eax
  40bcc5:	data16 fwait
  40bcc7:	adc    eax,0x86ad7f5b
  40bccc:	mov    bh,BYTE PTR [eax+0x7]
  40bccf:	cwde   
  40bcd0:	push   ebx
  40bcd1:	out    0x6b,al
  40bcd3:	inc    ecx
  40bcd4:	pop    ax
  40bcd6:	xor    DWORD PTR [ecx+ebp*1+0x78],eax
  40bcda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcdb:	stc    
  40bcdc:	out    0x2,eax
  40bcde:	mov    cl,0x18
  40bce0:	sbb    eax,0xdbd99a50
  40bce5:	adc    BYTE PTR [esi-0x144cbf51],dh
  40bceb:	mov    ds:0x85b56b88,eax
  40bcf0:	xchg   bh,bl
  40bcf2:	adc    al,BYTE PTR [eax]
  40bcf4:	xchg   edx,eax
  40bcf5:	dec    esi
  40bcf6:	sbb    edx,ebx
  40bcf8:	imul   ebp,eax,0xffffffc7
  40bcfb:	lods   eax,DWORD PTR ds:[esi]
  40bcfc:	mov    ecx,0xfc78845d
  40bd01:	es hlt 
  40bd03:	jmp    0xc6b222b8
  40bd08:	xchg   esp,eax
  40bd09:	fiadd  DWORD PTR [esi]
  40bd0b:	push   eax
  40bd0c:	xchg   esi,eax
  40bd0d:	sub    al,0x21
  40bd0f:	test   al,0xa8
  40bd11:	std    
  40bd12:	mov    esi,0xcc4b1478
  40bd17:	jge    0x40bd6c
  40bd19:	xchg   esp,eax
  40bd1a:	pop    ds
  40bd1b:	jmp    0xe375:0x2b7b8ca6
  40bd22:	push   ds
  40bd23:	pusha  
  40bd24:	fsub   DWORD PTR [ecx+eax*8+0x7e2d8015]
  40bd2b:	cmp    DWORD PTR [ebp-0x13774fe],0x6572292f
  40bd35:	push   0x66e4a2d9
  40bd3a:	retf   
  40bd3b:	push   eax
  40bd3c:	jl     0x40bd4e
  40bd3e:	cmp    edi,DWORD PTR ds:0xd5be92b2
  40bd44:	fadd   QWORD PTR ds:0x16a1aa28
  40bd4a:	lds    ecx,FWORD PTR [edi+0x3694b165]
  40bd50:	xor    BYTE PTR [ecx-0x64],ch
  40bd53:	push   es
  40bd54:	int3   
  40bd55:	cmc    
  40bd56:	test   eax,0x8fd0c284
  40bd5b:	(bad)  
  40bd5c:	repz ja 0x40bd8c
  40bd5f:	lds    esi,FWORD PTR [edx-0x16017beb]
  40bd65:	and    BYTE PTR [ebx+eax*4+0x40998e74],ch
  40bd6c:	out    dx,al
  40bd6d:	inc    dx
  40bd6f:	imul   edx,DWORD PTR ds:0x8a61d202,0x880b0081
  40bd79:	and    ch,BYTE PTR [edx-0x24b7ce78]
  40bd7f:	dec    eax
  40bd80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd81:	int3   
  40bd82:	mov    esi,0xc319b5ce
  40bd87:	sbb    esi,esp
  40bd89:	add    al,0xe
  40bd8b:	stos   BYTE PTR es:[edi],al
  40bd8c:	(bad)  
  40bd8d:	pop    eax
  40bd8e:	fs fs dec edx
  40bd91:	mov    ds:0x1b67633c,al
  40bd96:	xchg   ebp,eax
  40bd97:	outs   dx,DWORD PTR ds:[esi]
  40bd98:	push   es
  40bd99:	dec    edx
  40bd9a:	push   cs
  40bd9b:	mov    ah,0x5f
  40bd9d:	dec    edi
  40bd9e:	mov    ds:0xae5354d8,al
  40bda3:	ror    BYTE PTR [ecx],0xbd
  40bda6:	test   DWORD PTR [ebp+0x63],eax
  40bda9:	hlt    
  40bdaa:	push   ds
  40bdab:	bound  ecx,QWORD PTR [ecx+0x53]
  40bdae:	pop    edx
  40bdaf:	je     0x40be0f
  40bdb1:	adc    ebx,DWORD PTR [edx-0x38b943fd]
  40bdb7:	adc    al,0xd7
  40bdb9:	lock mov al,0x49
  40bdbc:	mov    ah,0xd3
  40bdbe:	sub    DWORD PTR [edi],ecx
  40bdc0:	fcomp  DWORD PTR [ecx+0x33]
  40bdc3:	nop
  40bdc4:	sub    DWORD PTR gs:[ecx+0x1d89db34],esi
  40bdcb:	iret   
  40bdcc:	add    cl,dl
  40bdce:	jecxz  0x40bdb9
  40bdd0:	and    eax,0xd496d15f
  40bdd5:	mul    DWORD PTR [esi]
  40bdd7:	lock and BYTE PTR ds:0x21c50f6f,dh
  40bdde:	(bad)
  40bde1:	jp     0x40bd85
  40bde3:	xchg   ebp,eax
  40bde4:	xchg   ebx,eax
  40bde5:	push   ebp
  40bde6:	rcl    BYTE PTR ds:0x14265d66,cl
  40bdec:	and    edx,DWORD PTR [ecx-0x41]
  40bdef:	pop    es
  40bdf0:	dec    ebp
  40bdf1:	jg     0x40be23
  40bdf3:	mov    bh,BYTE PTR [eax]
  40bdf5:	inc    edx
  40bdf6:	js     0x40bd90
  40bdf8:	out    dx,eax
  40bdf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdfa:	mov    dl,0x2c
  40bdfc:	sahf   
  40bdfd:	pushf  
  40bdfe:	rol    DWORD PTR [ecx+0x2a],1
  40be01:	cmp    DWORD PTR [edx+0x52],ecx
  40be04:	xchg   esp,eax
  40be05:	in     al,0x36
  40be07:	jle    0x40bd8e
  40be09:	repnz inc edi
  40be0b:	or     edx,ebp
  40be0d:	mov    cl,0x96
  40be0f:	hlt    
  40be10:	mov    eax,ds:0xcf2d01a8
  40be15:	(bad)  
  40be17:	sub    DWORD PTR [ebx+0x78],ecx
  40be1a:	jecxz  0x40be27
  40be1c:	in     al,dx
  40be1d:	jno    0x40bdd0
  40be1f:	inc    dh
  40be21:	pushf  
  40be22:	clc    
  40be23:	cmp    DWORD PTR [edx],esi
  40be25:	into   
  40be26:	pop    ecx
  40be27:	mov    al,ds:0xf74b396
  40be2c:	adc    DWORD PTR [ebx-0x4eae0865],edi
  40be32:	cmp    DWORD PTR [eax+0x78],0x32
  40be36:	test   BYTE PTR [eax+0x4d],ah
  40be39:	hlt    
  40be3a:	ins    DWORD PTR es:[edi],dx
  40be3b:	jecxz  0x40be37
  40be3d:	inc    dh
  40be3f:	fsubr  st(4),st
  40be41:	lds    edx,FWORD PTR [ebx-0x7c]
  40be44:	jo     0x40bdfa
  40be46:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40be48:	arpl   WORD PTR [eax+0x6f5e7ef2],di
  40be4e:	cmp    ecx,esp
  40be50:	cmp    al,0xdf
  40be52:	bound  esi,QWORD PTR [esi+0x23c401]
  40be58:	lahf   
  40be59:	out    0x79,al
  40be5b:	(bad)  
  40be5c:	cmc    
  40be5d:	call   0x7a41:0x9cc96240
  40be64:	xor    BYTE PTR [esi-0x12],bh
  40be67:	outs   dx,BYTE PTR ds:[esi]
  40be68:	lahf   
  40be69:	adc    DWORD PTR [eax+0x68],0xe2a6f064
  40be70:	js     0x40bed2
  40be72:	adc    eax,0xa14d1e6e
  40be77:	mov    edx,0x90e59ebe
  40be7c:	nop
  40be7d:	mov    al,0xe6
  40be7f:	int    0xbd
  40be81:	mov    ch,0x3b
  40be83:	adc    esp,ebp
  40be85:	jnp    0x40be34
  40be87:	dec    edi
  40be88:	repnz dec ecx
  40be8a:	std    
  40be8b:	bound  edx,QWORD PTR [edx+0x727bc096]
  40be91:	arpl   WORD PTR [edx],di
  40be93:	cmp    al,0xb5
  40be95:	(bad)  
  40be96:	sahf   
  40be97:	cmp    DWORD PTR [esi-0x4a],esi
  40be9a:	or     al,0x11
  40be9c:	xor    edx,DWORD PTR ds:0x6c2114d2
  40bea2:	fist   WORD PTR [esi]
  40bea4:	and    BYTE PTR [ebp+0x3741c56b],cl
  40beaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beab:	ret    
  40beac:	int    0x43
  40beae:	enter  0x41ed,0x14
  40beb2:	bound  edi,QWORD PTR [ebx]
  40beb4:	and    DWORD PTR [esi],esi
  40beb6:	push   ecx
  40beb7:	or     al,0x2c
  40beb9:	jge    0x40be42
  40bebb:	test   eax,0x5408af0c
  40bec0:	or     dl,BYTE PTR [edx]
  40bec2:	dec    esi
  40bec4:	mov    dh,BYTE PTR [ebp+0x5a17c8c9]
  40beca:	and    al,0x7b
  40becc:	and    ebx,DWORD PTR ds:0xdfd8c002
  40bed2:	ss sub al,0x9e
  40bed5:	(bad)  
  40bed6:	xlat   BYTE PTR ds:[ebx]
  40bed7:	and    al,dh
  40bed9:	push   edi
  40beda:	or     eax,DWORD PTR [esp+esi*8+0x650c8b9a]
  40bee1:	imul   esi,DWORD PTR [ecx+0x6d5de604],0x34
  40bee8:	dec    ebp
  40bee9:	jl     0x40bf51
  40beeb:	inc    ebp
  40beec:	enter  0x72b9,0xc3
  40bef0:	dec    ebx
  40bef1:	jb     0x40bedc
  40bef3:	lea    edi,[ecx+0x31]
  40bef6:	or     eax,0xf0103df1
  40befb:	in     eax,0x8f
  40befd:	mov    al,ch
  40beff:	imul   esi,esi,0x9ec3f56c
  40bf05:	or     eax,0xfdecd8f5
  40bf0a:	imul   ebx,eax,0x155a3a38
  40bf10:	xor    BYTE PTR ds:0x10497f5e,0x48
  40bf17:	fsubp  st(5),st
  40bf19:	shr    DWORD PTR [edi],1
  40bf1b:	xchg   ebp,eax
  40bf1c:	data16 xchg BYTE PTR [edi+0x3b],dl
  40bf20:	add    al,0xbf
  40bf22:	jae    0x40bf6d
  40bf24:	xor    dl,0x88
  40bf27:	pop    esi
  40bf28:	dec    edi
  40bf29:	fisttp WORD PTR [ebx+ebp*8+0x2d43f117]
  40bf30:	fcmovb st,st(1)
  40bf32:	add    eax,0x8ed2d48c
  40bf37:	cmp    DWORD PTR [esi-0x37],ebp
  40bf3a:	icebp  
  40bf3b:	faddp  st(1),st
  40bf3d:	xor    esp,DWORD PTR ds:0xd1809ca
  40bf43:	xchg   esi,eax
  40bf44:	xor    BYTE PTR [ebp+0x45],al
  40bf47:	push   ebx
  40bf48:	into   
  40bf49:	pop    ecx
  40bf4a:	mov    cl,0x1b
  40bf4c:	dec    ebp
  40bf4d:	mov    ch,0xc1
  40bf4f:	loopne 0x40bfab
  40bf51:	push   edi
  40bf52:	int    0x79
  40bf54:	scas   eax,DWORD PTR es:[edi]
  40bf55:	mov    BYTE PTR [esi],cl
  40bf57:	adc    eax,esp
  40bf59:	(bad)  
  40bf5a:	hlt    
  40bf5b:	or     dh,BYTE PTR [ecx]
  40bf5d:	je     0x40bf71
  40bf5f:	mov    bh,0x7b
  40bf61:	out    0xda,al
  40bf63:	adc    ebp,ecx
  40bf65:	push   0x7b
  40bf67:	out    0x8a,al
  40bf69:	les    ecx,FWORD PTR [ebx+edx*8]
  40bf6c:	stc    
  40bf6d:	or     eax,0xdf8e90d7
  40bf72:	lahf   
  40bf73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf74:	int    0x7a
  40bf76:	popf   
  40bf77:	and    DWORD PTR ds:0x1eef9691,0x46
  40bf7e:	jmp    0x657e:0xb5bed2bb
  40bf85:	or     eax,0x62c4ff72
  40bf8a:	bound  edi,QWORD PTR [esi+0x2c51b9cd]
  40bf90:	lods   eax,DWORD PTR ds:[esi]
  40bf91:	(bad)  
  40bf92:	mov    dl,0x6
  40bf94:	mov    ch,BYTE PTR [edx-0x6ba343fe]
  40bf9a:	sbb    al,0x47
  40bf9c:	mov    DWORD PTR [esi+edx*1+0x2735a02b],ecx
  40bfa3:	shl    BYTE PTR [edx+eiz*2-0x14],0x9d
  40bfa8:	rcr    dl,1
  40bfaa:	jp     0x40bf9e
  40bfac:	mov    WORD PTR [edx+0x80dc5d8],es
  40bfb2:	pop    ss
  40bfb3:	arpl   WORD PTR [eax-0x33edc3b1],di
  40bfb9:	push   ds
  40bfba:	push   0x87cf010b
  40bfbf:	push   ebp
  40bfc0:	jg     0x40bfd4
  40bfc2:	sub    eax,DWORD PTR ds:0x584be
  40bfc8:	jg     0x40bfb1
  40bfca:	pop    esi
  40bfcb:	les    ebp,FWORD PTR [ebx+0x4f7d1eb9]
  40bfd1:	lock add ah,0x78
  40bfd5:	test   BYTE PTR [ebp+0x49d225af],0xab
  40bfdc:	mov    dl,0x49
  40bfde:	imul   edx,DWORD PTR [ebx],0xcf64a64c
  40bfe4:	arpl   cx,dx
  40bfe6:	bound  ebp,QWORD PTR [ebp+0x3f]
  40bfe9:	or     eax,0x2db9206a
  40bfee:	sbb    eax,0xa51999a9
  40bff3:	dec    ebx
  40bff4:	or     DWORD PTR [eax+0x26],edx
  40bff7:	push   esi
  40bff8:	push   edx
  40bff9:	ror    DWORD PTR [edi-0x17],0x4
  40bffd:	stos   DWORD PTR es:[edi],eax
  40bffe:	popa   
  40bfff:	or     eax,0xc6c4e6d9
  40c004:	icebp  
  40c005:	mov    eax,0x130226ac
  40c00a:	or     DWORD PTR [edx],eax
  40c00c:	jo     0x40c007
  40c00e:	nop
  40c00f:	push   0x65f8091c
  40c014:	mov    eax,ds:0xca675ad1
  40c019:	in     eax,0x38
  40c01b:	cmp    eax,0xcb6af1e1
  40c020:	sub    bh,BYTE PTR [eax+0x3ba364b9]
  40c026:	out    0xd9,eax
  40c028:	int3   
  40c029:	inc    ebp
  40c02a:	test   al,0x92
  40c02c:	adc    eax,0x88c61a1
  40c031:	lods   al,BYTE PTR ds:[esi]
  40c032:	cdq    
  40c033:	sbb    ah,BYTE PTR [ebp-0x7eadac61]
  40c039:	xor    cl,BYTE PTR [ebx]
  40c03b:	or     DWORD PTR [esi-0xcf578cc],esp
  40c041:	fwait
  40c042:	test   BYTE PTR [ebx+0x5e],ah
  40c045:	mov    es:0x9514787d,eax
  40c04b:	xchg   edi,eax
  40c04c:	xlat   BYTE PTR ds:[ebx]
  40c04d:	push   eax
  40c04e:	dec    ecx
  40c04f:	stos   DWORD PTR es:[edi],eax
  40c050:	add    BYTE PTR [eax+eiz*2-0x5410204f],dl
  40c057:	rol    BYTE PTR [ebp-0x2],cl
  40c05a:	jo     0x40c064
  40c05c:	mov    WORD PTR [edx+0x2f],?
  40c05f:	loopne 0x40c0e0
  40c061:	and    ecx,DWORD PTR [eax-0x6eb8645]
  40c067:	jg     0x40c0e8
  40c069:	fldpi  
  40c06b:	push   es
  40c06c:	aad    0x75
  40c06e:	aas    
  40c06f:	xchg   esi,eax
  40c070:	mov    ds:0xda05c052,al
  40c075:	out    0xe2,al
  40c077:	jg     0x40c0dd
  40c079:	lahf   
  40c07a:	dec    ebx
  40c07b:	sub    al,0xde
  40c07d:	pop    esp
  40c07e:	or     BYTE PTR [edi-0x56],ch
  40c081:	inc    ebp
  40c082:	xchg   DWORD PTR [edx+0x2d268bef],esi
  40c088:	or     ebp,DWORD PTR [eax+0x3a43bddb]
  40c08e:	inc    edx
  40c08f:	dec    esp
  40c090:	xlat   BYTE PTR ds:[ebx]
  40c091:	mov    ?,WORD PTR [ebp+0x3f]
  40c094:	pop    eax
  40c095:	or     esi,DWORD PTR [ecx]
  40c097:	test   eax,0x8a4433bd
  40c09c:	mov    edx,0xe13a5643
  40c0a1:	dec    ecx
  40c0a2:	aas    
  40c0a3:	pop    ds
  40c0a4:	jmp    0x6c93:0xb5652beb
  40c0ab:	fidiv  WORD PTR [edx+0x1a]
  40c0ae:	pusha  
  40c0af:	retf   
  40c0b0:	xchg   BYTE PTR [ebp+0x6857e83f],dh
  40c0b6:	cmp    al,0xc6
  40c0b8:	lods   eax,DWORD PTR ds:[esi]
  40c0b9:	in     al,dx
  40c0ba:	ror    BYTE PTR [ebx-0x44f79823],cl
  40c0c0:	sbb    BYTE PTR [edi],0xcc
  40c0c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0c4:	dec    ebx
  40c0c5:	xor    DWORD PTR [ebp+0xd867a99],edx
  40c0cb:	push   0x87e10323
  40c0d0:	out    dx,eax
  40c0d1:	xchg   edi,eax
  40c0d2:	popa   
  40c0d3:	imul   DWORD PTR [edx-0x18]
  40c0d6:	mov    dl,0x1a
  40c0d8:	fs cmp eax,0xaa7ed46d
  40c0de:	mov    DWORD PTR [ebp+ebp*2-0x6255d267],ecx
  40c0e5:	sti    
  40c0e6:	or     BYTE PTR [eax-0x18],ah
  40c0e9:	sub    cl,BYTE PTR [edi-0x3df53dac]
  40c0ef:	jg     0x40c0ad
  40c0f1:	push   esi
  40c0f2:	adc    BYTE PTR [edi],cl
  40c0f4:	shr    BYTE PTR [edi+0x466a5ad1],1
  40c0fa:	add    eax,0x4a0e6f6e
  40c0ff:	mov    bl,0x6e
  40c101:	scas   al,BYTE PTR es:[edi]
  40c102:	cmc    
  40c103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c104:	data16 and ah,ch
  40c107:	mov    esi,DWORD PTR [ebx]
  40c109:	jmp    0x6d124da8
  40c10e:	jo     0x40c09d
  40c110:	mov    dh,dl
  40c112:	sub    dh,cl
  40c114:	faddp  st(7),st
  40c116:	in     al,0x5e
  40c118:	sub    al,0xb0
  40c11a:	pop    es
  40c11b:	inc    eax
  40c11c:	daa    
  40c11d:	lods   eax,DWORD PTR ds:[esi]
  40c11e:	sbb    eax,0x44bee778
  40c123:	xor    ecx,ebx
  40c125:	test   DWORD PTR [eax+0x63],esp
  40c128:	(bad)  
  40c129:	jbe    0x40c103
  40c12b:	or     BYTE PTR [ecx+0x11],al
  40c12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c12f:	data16 jnp 0x40c126
  40c132:	clc    
  40c133:	fstp   QWORD PTR ss:[ebp-0x7b]
  40c137:	sbb    eax,0xeb41f441
  40c13c:	dec    ebx
  40c13d:	and    edx,DWORD PTR [esi+0x5554a8c0]
  40c143:	stos   DWORD PTR es:[di],eax
  40c145:	mov    ebx,DWORD PTR [edi]
  40c147:	inc    esi
  40c148:	lods   al,BYTE PTR ds:[esi]
  40c149:	mov    bl,0xa9
  40c14b:	jg     0x40c0e5
  40c14d:	jge    0x40c113
  40c14f:	(bad)  
  40c150:	or     eax,DWORD PTR [edx]
  40c152:	popa   
  40c153:	push   edi
  40c154:	pushf  
  40c155:	stos   DWORD PTR es:[edi],eax
  40c156:	sub    eax,0x1304d296
  40c15b:	mul    BYTE PTR [esi]
  40c15d:	push   ebp
  40c15e:	or     al,0x72
  40c160:	scas   eax,DWORD PTR es:[edi]
  40c161:	loop   0x40c151
  40c163:	and    eax,0x8b1b94e6
  40c168:	imul   edi,DWORD PTR [edx-0x4d],0x279ad933
  40c16f:	jge    0x40c188
  40c171:	xor    ch,bh
  40c173:	pop    edi
  40c174:	(bad)  
  40c175:	xchg   esi,eax
  40c176:	xchg   DWORD PTR [edx-0x549aca02],edx
  40c17c:	rcr    BYTE PTR [eax+ebx*8],0x32
  40c180:	(bad)  
  40c181:	neg    DWORD PTR [edi+0x641ed683]
  40c187:	nop
  40c188:	pop    esp
  40c189:	dec    BYTE PTR [ecx-0x78]
  40c18c:	pop    ss
  40c18d:	les    ebx,FWORD PTR es:0x86f3b66a
  40c194:	aad    0x19
  40c196:	call   0xa902:0x8a46bb35
  40c19d:	dec    eax
  40c19e:	iret   
  40c19f:	jb     0x40c19c
  40c1a1:	lock cmp DWORD PTR [esi+0x8a82b0c],esi
  40c1a8:	inc    ebx
  40c1a9:	xchg   ebp,eax
  40c1aa:	mov    al,ds:0x9645989d
  40c1af:	mov    ebp,0x4bbb64ab
  40c1b4:	into   
  40c1b5:	jecxz  0x40c1af
  40c1b7:	setnp  BYTE PTR [ebx]
  40c1ba:	push   ecx
  40c1bb:	inc    esp
  40c1bc:	shl    DWORD PTR [edx+0xc],cl
  40c1bf:	adc    eax,0xe7644fed
  40c1c4:	fxtract 
  40c1c6:	mov    bl,BYTE PTR [eax+0x2486de16]
  40c1cc:	or     edi,DWORD PTR [edx+0x6b5727c0]
  40c1d2:	pop    esi
  40c1d3:	mov    ds:0xa4eb6026,eax
  40c1d8:	lahf   
  40c1d9:	call   0x7312:0xe711fa26
  40c1e0:	js     0x40c234
  40c1e2:	scas   eax,DWORD PTR es:[edi]
  40c1e3:	mov    bh,0x1a
  40c1e5:	data16 sbb BYTE PTR [esi],cl
  40c1e8:	adc    ah,cl
  40c1ea:	mov    esp,DWORD PTR [edi-0x3a5f9e34]
  40c1f0:	xlat   BYTE PTR ds:[ebx]
  40c1f1:	dec    esp
  40c1f2:	rol    esi,1
  40c1f4:	inc    eax
  40c1f5:	call   0x1abef6a6
  40c1fa:	push   esp
  40c1fb:	sub    edi,DWORD PTR [ecx]
  40c1fd:	sar    ebx,0xca
  40c200:	jmp    0x40c279
  40c202:	sub    cl,ch
  40c204:	adc    BYTE PTR [edx],al
  40c206:	enter  0xc199,0x79
  40c20a:	jmp    0xe093:0x21fae4e2
  40c211:	mov    ch,0xd3
  40c213:	sbb    DWORD PTR [ebp+0x2fd0d145],0xffffffd5
  40c21a:	add    eax,0x399b9a33
  40c21f:	ins    DWORD PTR es:[edi],dx
  40c220:	mov    dh,0xd4
  40c222:	pop    ebp
  40c223:	push   edx
  40c224:	(bad)  
  40c225:	push   edx
  40c227:	bound  edx,QWORD PTR [edx]
  40c229:	add    DWORD PTR [edx+0x5],0x7a
  40c22d:	dec    eax
  40c22e:	push   edx
  40c22f:	div    DWORD PTR [edi+0xe]
  40c232:	aam    0x6f
  40c234:	pop    ebx
  40c235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c236:	mov    esp,0x3b813f9a
  40c23b:	test   DWORD PTR [esi-0x17],esi
  40c23e:	aaa    
  40c23f:	lahf   
  40c240:	mov    bh,0x85
  40c242:	lock xchg edi,eax
  40c244:	loopne 0x40c243
  40c246:	fstp   QWORD PTR [ebx+0x36]
  40c249:	push   es
  40c24a:	sub    bh,BYTE PTR [ebx]
  40c24c:	inc    ecx
  40c24d:	or     ch,dl
  40c24f:	pop    ebp
  40c250:	add    cl,BYTE PTR [ecx+0x28036944]
  40c256:	sub    DWORD PTR [esi],ebp
  40c258:	je     0x40c1ec
  40c25a:	inc    eax
  40c25b:	xchg   ebx,eax
  40c25c:	cmp    bh,BYTE PTR [edi]
  40c25e:	cmc    
  40c25f:	iret   
  40c260:	repz das 
  40c262:	fisttp QWORD PTR [eax+0xf]
  40c265:	out    0x80,eax
  40c267:	frstor [esi]
  40c269:	and    esp,ebx
  40c26b:	xchg   ah,al
  40c26d:	lods   al,BYTE PTR ds:[esi]
  40c26e:	in     al,dx
  40c26f:	pop    edx
  40c270:	pusha  
  40c271:	xchg   ecx,eax
  40c272:	mov    al,0x3e
  40c274:	sub    ah,cl
  40c276:	jns    0x40c2db
  40c278:	arpl   cx,ax
  40c27a:	mov    ch,0x3b
  40c27c:	cmc    
  40c27d:	stc    
  40c27e:	adc    al,0xf7
  40c280:	cmp    bh,bh
  40c282:	add    al,0xb6
  40c284:	sub    edi,DWORD PTR [ecx+0x39b2247c]
  40c28a:	dec    edi
  40c28b:	mov    bl,BYTE PTR [esi-0x4a5172df]
  40c291:	sbb    BYTE PTR [ebx+0x28],ah
  40c294:	sub    ebp,DWORD PTR [edx]
  40c296:	cs aas 
  40c298:	hlt    
  40c299:	(bad)  
  40c29a:	in     eax,dx
  40c29b:	cmp    DWORD PTR [edx],edi
  40c29d:	xchg   ebp,eax
  40c29e:	cdq    
  40c29f:	xlat   BYTE PTR ds:[ebx]
  40c2a0:	mov    eax,DWORD PTR [ebx+ecx*2-0x6e]
  40c2a4:	xchg   esi,eax
  40c2a5:	xor    eax,0x36419a4a
  40c2aa:	jnp    0x40c2f1
  40c2ac:	(bad)  ds:0x371448fb
  40c2b2:	pop    esi
  40c2b3:	fadd   QWORD PTR [ebx-0x21980fce]
  40c2b9:	lods   eax,DWORD PTR ds:[esi]
  40c2ba:	mov    ebx,0x207234b3
  40c2bf:	mov    ebp,0x516ad8e6
  40c2c4:	int    0x2
  40c2c6:	sbb    cl,BYTE PTR [esi-0x22]
  40c2c9:	data16 add BYTE PTR [ecx+0x6cf56d16],bl
  40c2d0:	push   ebp
  40c2d1:	cmp    al,0xc8
  40c2d3:	sbb    ah,BYTE PTR [eax-0x5f]
  40c2d6:	outs   dx,BYTE PTR ds:[esi]
  40c2d7:	js     0x40c320
  40c2d9:	xchg   edx,eax
  40c2da:	add    dh,BYTE PTR [edi+0x4]
  40c2dd:	jmp    0x8971:0xb84f7831
  40c2e4:	dec    ebp
  40c2e5:	xchg   ebx,eax
  40c2e7:	cld    
  40c2e8:	imul   edi,DWORD PTR [eax-0x4f],0xffffffeb
  40c2ec:	lods   al,BYTE PTR ds:[esi]
  40c2ed:	scas   al,BYTE PTR es:[edi]
  40c2ee:	into   
  40c2ef:	sub    BYTE PTR [eax+0x6ff1f312],al
  40c2f5:	outs   dx,DWORD PTR ds:[esi]
  40c2f6:	mov    bh,0x6b
  40c2f8:	hlt    
  40c2f9:	cmp    eax,0x59f0a169
  40c2fe:	in     eax,dx
  40c2ff:	jae    0x40c296
  40c301:	int3   
  40c302:	cmp    cl,BYTE PTR [edx+0x27]
  40c305:	xor    al,0xd0
  40c307:	add    eax,0x3bfed7bf
  40c30c:	jge    0x40c2d4
  40c30e:	xor    BYTE PTR [ebx-0x45693251],al
  40c314:	xor    eax,0x51800e78
  40c319:	cmp    eax,0x34d39ec6
  40c31e:	aam    0xa0
  40c320:	(bad)  
  40c321:	adc    ebp,DWORD PTR [edx-0x48173f6d]
  40c327:	pop    ds
  40c328:	mov    ebp,0xe299c77c
  40c32d:	mov    esi,0xf252e10
  40c332:	cmp    DWORD PTR [eax-0x4be5be04],esp
  40c338:	sub    BYTE PTR [esi],dl
  40c33a:	xlat   BYTE PTR ds:[ebx]
  40c33b:	or     DWORD PTR [ebx-0x5e],ebx
  40c33e:	gs xor al,0x35
  40c341:	int3   
  40c342:	xchg   BYTE PTR [ebx-0x5a],bl
  40c345:	or     esp,DWORD PTR [ebx]
  40c347:	pextrw ecx,(bad),0xc5
  40c349:	mov    WORD PTR [eax],fs
  40c34b:	xor    al,0x87
  40c34d:	mov    dl,0x55
  40c34f:	add    esp,DWORD PTR [ebp+0x49ff6536]
  40c355:	pushf  
  40c356:	or     eax,0x76476d13
  40c35b:	leave  
  40c35c:	les    edi,FWORD PTR ds:0xdee71d7a
  40c362:	adc    al,0x49
  40c364:	jmp    0x40c340
  40c366:	pop    edx
  40c367:	and    edi,DWORD PTR [ebx-0x80]
  40c36a:	or     al,0x86
  40c36c:	and    ah,ah
  40c36e:	scas   eax,DWORD PTR es:[edi]
  40c36f:	fidivr DWORD PTR ds:0x4a893855
  40c375:	adc    BYTE PTR [ecx],cl
  40c377:	xlat   BYTE PTR ds:[ebx]
  40c378:	lock cdq 
  40c37a:	xor    eax,DWORD PTR [edi]
  40c37c:	xor    DWORD PTR [ebx-0x3d],edi
  40c37f:	inc    edx
  40c380:	xor    ebx,DWORD PTR [edi-0x4d93ab50]
  40c386:	add    eax,DWORD PTR ds:0xba514653
  40c38c:	jp     0x40c3aa
  40c38e:	imul   ebx,ebx,0xbbf91dc4
  40c394:	pop    ss
  40c395:	push   edx
  40c396:	popa   
  40c397:	xor    eax,0x4297c11a
  40c39c:	les    ebx,FWORD PTR [edx]
  40c39e:	out    0x49,eax
  40c3a0:	cwde   
  40c3a1:	lahf   
  40c3a2:	lds    ecx,FWORD PTR [ebx]
  40c3a4:	add    eax,0x1b2adff5
  40c3a9:	push   ecx
  40c3aa:	pop    edx
  40c3ab:	es sbb cl,al
  40c3ae:	(bad)  
  40c3b0:	push   ecx
  40c3b1:	xchg   BYTE PTR [ebp-0x63],ch
  40c3b4:	xor    esi,DWORD PTR [eax+0x5e]
  40c3b7:	xchg   ebp,eax
  40c3b8:	scas   al,BYTE PTR es:[edi]
  40c3b9:	adc    edi,DWORD PTR [eax+0x74]
  40c3bc:	jnp    0x40c3cd
  40c3be:	rcl    esi,1
  40c3c0:	sub    eax,0xe1b0f6ea
  40c3c5:	or     ah,BYTE PTR [eax+0x6cba05e4]
  40c3cb:	and    edi,DWORD PTR [ecx]
  40c3cd:	jns    0x40c407
  40c3cf:	and    bh,BYTE PTR [ecx+0x61b16166]
  40c3d5:	retf   0x89c5
  40c3d8:	mov    WORD PTR [edx+edi*2-0x7dec4c02],gs
  40c3df:	arpl   WORD PTR [ecx],di
  40c3e1:	js     0x40c36c
  40c3e3:	(bad)  
  40c3e4:	jle    0x40c389
  40c3e6:	pop    edx
  40c3e7:	push   ecx
  40c3e8:	test   DWORD PTR [ebx-0x9eb56c6],0x80645b0d
  40c3f2:	add    esi,edi
  40c3f4:	jge    0x40c446
  40c3f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f7:	mov    bl,0x1f
  40c3f9:	std    
  40c3fa:	retf   
  40c3fb:	xor    ebx,DWORD PTR [ecx]
  40c3fd:	in     al,0x8e
  40c3ff:	rcl    DWORD PTR [ecx+0x7a],cl
  40c402:	push   ebx
  40c403:	dec    ebx
  40c404:	das    
  40c405:	xchg   edi,eax
  40c406:	pop    ebp
  40c407:	adc    bh,al
  40c409:	mov    eax,0x49901c6
  40c40e:	(bad)  
  40c40f:	cmp    eax,0xa23515cd
  40c414:	add    al,0xa9
  40c416:	rcl    BYTE PTR [edi-0x26],1
  40c419:	cld    
  40c41a:	inc    edx
  40c41b:	mov    dh,0x4d
  40c41d:	mov    gs,WORD PTR [esi-0x60]
  40c420:	dec    eax
  40c421:	add    ch,BYTE PTR [edi-0x24b74a65]
  40c427:	std    
  40c428:	xor    dh,BYTE PTR [ecx+0x39]
  40c42b:	mov    dl,0xcc
  40c42d:	xchg   edi,eax
  40c42e:	jmp    0xe7e:0x186941f5
  40c435:	or     ebx,DWORD PTR [edi+ebp*2]
  40c438:	jp     0x40c46d
  40c43a:	hlt    
  40c43b:	xchg   ebx,eax
  40c43c:	inc    eax
  40c43d:	int3   
  40c43e:	xchg   ebp,edi
  40c440:	push   ebp
  40c441:	push   edi
  40c442:	repnz adc eax,0x4a48ffc4
  40c448:	leave  
  40c449:	jnp    0x40c441
  40c44b:	fs hlt 
  40c44d:	or     cl,BYTE PTR [esi-0x6d49d2e4]
  40c453:	push   ecx
  40c454:	push   es
  40c455:	ret    0x631
  40c458:	xchg   ecx,eax
  40c459:	jbe    0x40c4d9
  40c45b:	retf   0x4773
  40c45e:	or     bh,BYTE PTR [edi+0x49b14322]
  40c464:	leave  
  40c465:	xchg   esp,eax
  40c466:	add    eax,0x1ea69daa
  40c46b:	jecxz  0x40c449
  40c46d:	ins    BYTE PTR es:[edi],dx
  40c46e:	inc    ecx
  40c46f:	push   eax
  40c470:	iret   
  40c471:	js     0x40c414
  40c473:	mov    bl,0x9c
  40c475:	xchg   esp,eax
  40c476:	test   eax,0x54ac60f1
  40c47b:	jne    0x40c423
  40c47d:	xchg   ebx,eax
  40c47e:	xor    edi,DWORD PTR [eax-0x76]
  40c481:	dec    esi
  40c482:	hlt    
  40c483:	ret    0x25c7
  40c486:	cmp    eax,0x5b8f32c8
  40c48b:	mov    eax,0x2f36407f
  40c490:	mov    eax,0xafeb7c85
  40c495:	fadd   st(3),st
  40c497:	in     eax,dx
  40c498:	bound  esp,QWORD PTR [eax-0x6e228a42]
  40c49e:	out    dx,al
  40c49f:	jle    0x40c508
  40c4a1:	sbb    edi,DWORD PTR [edi+eax*8-0x7a4a02f7]
  40c4a8:	nop
  40c4a9:	jl     0x40c496
  40c4ab:	imul   eax,DWORD PTR [esi+0x34],0x953c578
  40c4b2:	jb     0x40c4ae
  40c4b4:	pop    ebp
  40c4b5:	fs cmp eax,0xe5dbc476
  40c4bb:	sub    al,BYTE PTR [esi]
  40c4bd:	pop    esp
  40c4be:	enter  0x7507,0xed
  40c4c2:	vminps xmm0,xmm4,XMMWORD PTR [esi+0xf99c836]
  40c4ca:	or     BYTE PTR [edi],al
  40c4cc:	ins    DWORD PTR es:[edi],dx
  40c4cd:	sub    DWORD PTR [edi-0x74],esi
  40c4d0:	and    BYTE PTR [ecx-0xa],bl
  40c4d3:	rol    DWORD PTR [eax],0x9f
  40c4d6:	inc    esi
  40c4d7:	(bad)  
  40c4d8:	in     al,dx
  40c4d9:	shl    BYTE PTR [ecx],1
  40c4db:	mov    ebp,DWORD PTR [ecx-0x5c]
  40c4de:	in     eax,dx
  40c4df:	push   edx
  40c4e0:	pop    es
  40c4e1:	lock jle 0x40c47f
  40c4e4:	arpl   WORD PTR [esi],cx
  40c4e6:	pushf  
  40c4e7:	mov    ecx,cs
  40c4e9:	dec    esi
  40c4ea:	add    al,0xe8
  40c4ec:	fwait
  40c4ed:	sub    edx,DWORD PTR [edx-0x10]
  40c4f0:	lods   eax,DWORD PTR ds:[esi]
  40c4f1:	jle    0x40c4ff
  40c4f3:	mov    ch,0x11
  40c4f5:	(bad)
  40c4f9:	dec    esp
  40c4fa:	imul   BYTE PTR [edx-0x6e]
  40c4fd:	add    ebp,DWORD PTR [ecx-0x5f]
  40c500:	xchg   ebp,eax
  40c501:	ret    0x588
  40c504:	sub    DWORD PTR [esi+0x40],esi
  40c507:	in     eax,dx
  40c508:	mov    dh,0xae
  40c50a:	xor    esp,esi
  40c50c:	dec    ebx
  40c50d:	push   0xffffffe9
  40c50f:	sub    DWORD PTR [ecx+eiz*1+0x30],ebx
  40c513:	and    eax,0xc88ec588
  40c518:	pop    ecx
  40c519:	cmp    eax,DWORD PTR [eax-0x10222709]
  40c51f:	addr16 xor dl,dh
  40c522:	bound  ebp,QWORD PTR [eax+0x5b]
  40c525:	or     bl,BYTE PTR [edi+0x25fb11f2]
  40c52b:	fstp   DWORD PTR [esi]
  40c52d:	in     al,0xa7
  40c52f:	out    0x6a,eax
  40c531:	ror    BYTE PTR [ebx-0x4f1385a5],0x4b
  40c538:	js     0x40c50c
  40c53a:	mov    ch,0x19
  40c53c:	stos   DWORD PTR es:[edi],eax
  40c53d:	push   esi
  40c53e:	inc    esi
  40c53f:	ret    
  40c540:	mov    esp,0xfc9abfca
  40c545:	cmp    eax,0x48969784
  40c54a:	xor    ch,BYTE PTR [ecx+0x538e0ca1]
  40c550:	jecxz  0x40c5a7
  40c552:	pushf  
  40c553:	addr16 xor al,0x39
  40c556:	stos   BYTE PTR es:[edi],al
  40c557:	add    eax,0xb55e76a6
  40c55c:	pop    edi
  40c55d:	mov    dl,0xa1
  40c55f:	or     BYTE PTR [edi+eiz*4],dl
  40c562:	call   0x4152:0x25ee8faf
  40c569:	js     0x40c5a6
  40c56b:	or     DWORD PTR [ebp+eax*4+0x47],eax
  40c56f:	mov    ebp,0x296740f4
  40c574:	dec    esi
  40c575:	daa    
  40c576:	leave  
  40c577:	and    esi,edi
  40c579:	push   edx
  40c57a:	ds mov edx,0xb051aa31
  40c580:	fwait
  40c581:	jae    0x40c58d
  40c583:	repz test BYTE PTR [eax-0x69c6abdb],0x29
  40c58b:	push   ebx
  40c58c:	dec    esp
  40c58d:	in     al,dx
  40c58e:	sub    BYTE PTR [edx-0x5b9e7312],0x27
  40c595:	mov    al,ds:0x4b8c560b
  40c59a:	jmp    FWORD PTR [esi]
  40c59c:	sar    DWORD PTR [eax+0x1523e9ab],cl
  40c5a2:	sbb    al,ah
  40c5a4:	jmp    0x40c5a1
  40c5a6:	fwait
  40c5a7:	imul   ebp,DWORD PTR [ecx+0x6fc16c2],0xc9970e7f
  40c5b1:	sub    esp,esp
  40c5b3:	out    dx,al
  40c5b4:	outs   dx,DWORD PTR ds:[esi]
  40c5b5:	cmp    esi,DWORD PTR [ecx-0x13]
  40c5b8:	pop    edx
  40c5b9:	ins    BYTE PTR es:[edi],dx
  40c5ba:	sar    BYTE PTR [eax+eiz*8+0x5c],0xa5
  40c5bf:	loopne 0x40c57f
  40c5c1:	mov    ecx,0xc4b39098
  40c5c6:	enter  0x61b6,0xc7
  40c5ca:	pop    ebp
  40c5cb:	sahf   
  40c5cc:	out    dx,al
  40c5cd:	lods   eax,DWORD PTR ds:[esi]
  40c5ce:	das    
  40c5cf:	sbb    al,0x6e
  40c5d1:	jb     0x40c652
  40c5d3:	push   ds
  40c5d4:	push   0x5c
  40c5d6:	out    dx,al
  40c5d7:	sbb    BYTE PTR [esi-0x74],dh
  40c5da:	xor    al,BYTE PTR [ebx-0xc346897]
  40c5e0:	add    ch,bl
  40c5e2:	test   BYTE PTR [esi-0x780a7f2c],0x40
  40c5e9:	repnz cmc 
  40c5eb:	push   ebx
  40c5ec:	es int3 
  40c5ee:	mov    ds:0xc9de6caa,al
  40c5f3:	clc    
  40c5f4:	xchg   ebp,eax
  40c5f5:	xchg   ecx,eax
  40c5f6:	xor    DWORD PTR ds:0x71604557,0x10
  40c5fd:	adc    al,0xdf
  40c5ff:	mov    ds:0xe00860a7,eax
  40c604:	add    esp,DWORD PTR [ebx+ecx*1-0x62f49120]
  40c60b:	push   eax
  40c60c:	sub    esi,DWORD PTR [ebp-0x7c]
  40c60f:	or     BYTE PTR [ebp-0x4645ea5c],ch
  40c615:	fld    TBYTE PTR [eax+0x35d06d3a]
  40c61b:	outs   dx,BYTE PTR ds:[esi]
  40c61c:	scas   eax,DWORD PTR es:[edi]
  40c61d:	int3   
  40c61e:	or     esp,DWORD PTR [eax+ebp*4+0x68]
  40c622:	pop    es
  40c623:	cmp    al,0x93
  40c625:	inc    edi
  40c626:	clc    
  40c627:	enter  0x54c,0x71
  40c62b:	dec    ecx
  40c62c:	push   ss
  40c62d:	cmp    ebx,DWORD PTR [ecx+0x38]
  40c630:	mov    ecx,0x52086223
  40c635:	sub    al,BYTE PTR [esi+eax*8]
  40c638:	inc    esi
  40c639:	or     edx,esi
  40c63b:	add    DWORD PTR [esi+0x70],0xfffffff4
  40c63f:	mov    ds:0x6fdf3fb9,eax
  40c644:	jle    0x40c6a9
  40c646:	jecxz  0x40c67f
  40c648:	mov    bl,0xf3
  40c64a:	lods   al,BYTE PTR ds:[esi]
  40c64b:	mov    esp,gs
  40c64d:	test   al,0x81
  40c64f:	int3   
  40c650:	dec    ebx
  40c651:	stc    
  40c652:	pop    esi
  40c653:	sbb    ah,BYTE PTR [esi+ebx*2-0x12]
  40c657:	ret    
  40c658:	dec    esi
  40c659:	pop    eax
  40c65a:	in     eax,0x86
  40c65c:	(bad)  
  40c65d:	or     ebx,DWORD PTR [ebx-0x68a110ec]
  40c663:	xchg   DWORD PTR [esi+0x75014a7e],ecx
  40c669:	fidiv  DWORD PTR [ecx+edx*8+0x7]
  40c66d:	mov    esp,0x74548add
  40c672:	jbe    0x40c689
  40c674:	add    dh,bl
  40c676:	fld    QWORD PTR [ebx-0x299c2e3e]
  40c67c:	jo     0x40c62e
  40c67e:	int3   
  40c67f:	xchg   edx,eax
  40c680:	adc    DWORD PTR [esi+ebp*4],0xd1c5029c
  40c687:	xchg   BYTE PTR [ecx],ch
  40c689:	jg     0x40c6af
  40c68b:	leave  
  40c68c:	xor    BYTE PTR [edx],dl
  40c68e:	aaa    
  40c68f:	lahf   
  40c690:	loop   0x40c6f6
  40c692:	cmp    eax,0xa3d8df94
  40c697:	cmp    eax,DWORD PTR [edx-0x1be1205b]
  40c69d:	and    ah,al
  40c69f:	pop    esp
  40c6a0:	(bad)  
  40c6a1:	sti    
  40c6a2:	sub    al,BYTE PTR [eax+0x2ee0017b]
  40c6a8:	dec    esp
  40c6a9:	shl    DWORD PTR [edx],1
  40c6ab:	retf   
  40c6ac:	xchg   ebx,eax
  40c6ad:	in     al,dx
  40c6ae:	xchg   esp,eax
  40c6af:	lds    ebp,FWORD PTR [ebp+0x1d6c2d4e]
  40c6b5:	loopne 0x40c668
  40c6b7:	or     ecx,DWORD PTR [esi]
  40c6b9:	das    
  40c6ba:	repz retf 
  40c6bc:	cli    
  40c6bd:	sbb    al,0xd4
  40c6bf:	cs jns 0x40c665
  40c6c2:	fsub   QWORD PTR [ecx-0x6d5ba7dd]
  40c6c8:	or     eax,0xee0c4590
  40c6cd:	iret   
  40c6ce:	pop    ss
  40c6cf:	adc    esi,edx
  40c6d1:	jae    0x40c6a1
  40c6d3:	aas    
  40c6d4:	push   cs
  40c6d5:	dec    edi
  40c6d6:	cli    
  40c6d7:	sbb    BYTE PTR [ebp-0x15],ch
  40c6da:	(bad)  
  40c6db:	in     eax,0x22
  40c6dd:	mov    bl,0xb2
  40c6df:	jg     0x40c75e
  40c6e1:	xchg   ebp,eax
  40c6e2:	shl    DWORD PTR ds:0xfa7e2fe,cl
  40c6e8:	lock push 0x6fa9b4b6
  40c6ee:	push   ecx
  40c6ef:	nop
  40c6f0:	push   edi
  40c6f1:	jle    0x40c6e3
  40c6f3:	ss jo  0x40c6d1
  40c6f6:	paddb  mm6,QWORD PTR [ecx-0x29]
  40c6fa:	cdq    
  40c6fb:	mov    cs,WORD PTR [ebx+0x7c728465]
  40c701:	jo     0x40c733
  40c703:	sbb    BYTE PTR [ebx-0x30],bh
  40c706:	test   eax,0xd5a1c76
  40c70b:	adc    bh,BYTE PTR [edx+eax*1-0x17]
  40c70f:	sbb    edx,DWORD PTR [ebx]
  40c711:	popf   
  40c712:	dec    edx
  40c713:	test   DWORD PTR [edx],esp
  40c715:	sub    al,0x36
  40c717:	sar    ebx,1
  40c719:	imul   esp,DWORD PTR [ebp+0x38],0x4f
  40c71d:	push   ecx
  40c71e:	jae    0x40c796
  40c720:	lahf   
  40c721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c722:	sti    
  40c723:	and    BYTE PTR [edx+0x332af3b6],dl
  40c729:	scas   al,BYTE PTR es:[edi]
  40c72a:	loopne 0x40c6e3
  40c72c:	sub    DWORD PTR [esi-0x3f0066a4],eax
  40c732:	or     BYTE PTR [ecx],al
  40c734:	in     eax,dx
  40c735:	test   eax,0x3ea339ae
  40c73a:	repz adc BYTE PTR [ebp+edi*2-0x7345b253],0x3b
  40c743:	imul   edi,edx,0x2b
  40c746:	jns    0x40c6df
  40c748:	mov    al,0x9c
  40c74a:	inc    esp
  40c74b:	(bad)
  40c74e:	dec    esi
  40c74f:	mov    cl,0xbb
  40c751:	push   edi
  40c752:	enter  0x550c,0xf3
  40c756:	out    dx,eax
  40c757:	xlat   BYTE PTR ds:[ebx]
  40c758:	aaa    
  40c759:	jmp    0x40c7be
  40c75b:	sbb    esp,DWORD PTR [ecx-0x2e]
  40c75e:	dec    esi
  40c75f:	arpl   sp,di
  40c761:	xchg   esp,eax
  40c762:	lock lahf 
  40c764:	inc    esi
  40c765:	and    BYTE PTR [ebx+0x62e9a1fa],ch
  40c76b:	dec    edx
  40c76c:	pop    esp
  40c76d:	cwde   
  40c76e:	ins    BYTE PTR es:[edi],dx
  40c76f:	xchg   edi,eax
  40c770:	push   eax
  40c771:	pop    ebp
  40c772:	fwait
  40c773:	add    DWORD PTR [ecx],ebp
  40c775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c776:	add    cl,ch
  40c778:	dec    esi
  40c779:	repnz pop ebx
  40c77b:	rcr    DWORD PTR [edx+eiz*1+0x57],cl
  40c77f:	loopne 0x40c7a4
  40c781:	shl    DWORD PTR [esi],0xa
  40c784:	shl    BYTE PTR [eax-0x14],cl
  40c787:	shl    BYTE PTR [ebx],1
  40c789:	ins    BYTE PTR es:[edi],dx
  40c78a:	xor    edx,eax
  40c78c:	sahf   
  40c78d:	push   edi
  40c78e:	sub    BYTE PTR [edi-0x4fff8fc6],dh
  40c794:	popf   
  40c795:	sub    DWORD PTR [edi],ebp
  40c797:	sub    al,0xb6
  40c799:	add    ch,BYTE PTR [ebp+ebp*4+0x6b]
  40c79d:	call   0x1276:0x7cbc0b7e
  40c7a4:	jecxz  0x40c79a
  40c7a6:	loope  0x40c77f
  40c7a8:	sbb    DWORD PTR [esi],0x69
  40c7ab:	or     DWORD PTR [eax],edi
  40c7ad:	mov    eax,ds:0xb00e2552
  40c7b2:	and    eax,0x68b8d6ea
  40c7b7:	or     DWORD PTR [ebp-0x48],eax
  40c7ba:	mul    eax
  40c7bc:	mov    dl,BYTE PTR [esi+0x2e]
  40c7bf:	cmc    
  40c7c0:	imul   ebp,esp,0xffffffc7
  40c7c3:	scas   eax,DWORD PTR es:[edi]
  40c7c4:	and    al,0xc3
  40c7c6:	pop    ds
  40c7c7:	cmp    ecx,DWORD PTR [edx+0x57]
  40c7ca:	lods   eax,DWORD PTR ds:[esi]
  40c7cb:	retf   
  40c7cc:	push   ecx
  40c7cd:	add    al,0x31
  40c7cf:	mov    dh,0xfd
  40c7d1:	repz les eax,FWORD PTR [ecx+0x4d0290a5]
  40c7d8:	push   edx
  40c7d9:	arpl   WORD PTR [esi+0x26],cx
  40c7dc:	push   es
  40c7dd:	rcr    DWORD PTR [esi-0x1fe65a93],1
  40c7e3:	mov    cl,BYTE PTR [esi-0x4efc4ee7]
  40c7e9:	mov    bh,0x34
  40c7eb:	pop    edx
  40c7ec:	jmp    0x3bdd:0x17e23144
  40c7f3:	sbb    eax,0x6907e6d4
  40c7f8:	mov    ds:0xdac4d7a3,al
  40c7fd:	in     al,0xfe
  40c7ff:	in     eax,0x3f
  40c801:	fucomi st,st(1)
  40c803:	cld    
  40c804:	push   ecx
  40c805:	push   0xffffffd5
  40c807:	and    ch,BYTE PTR [edx-0x15]
  40c80a:	xor    ebx,DWORD PTR [ebp-0x5cf05241]
  40c810:	jnp    0x40c81e
  40c812:	sbb    ah,bh
  40c814:	mov    dh,0xec
  40c816:	dec    esi
  40c817:	xchg   DWORD PTR [ebp-0x32e61c28],eax
  40c81d:	sub    ebp,eax
  40c81f:	mov    bl,0x7e
  40c821:	scas   al,BYTE PTR es:[edi]
  40c822:	inc    ecx
  40c823:	stc    
  40c824:	and    BYTE PTR [edx],bl
  40c826:	add    al,0xa2
  40c828:	mov    ch,0xd4
  40c82a:	dec    edx
  40c82b:	xchg   DWORD PTR [ecx-0x47],esi
  40c82e:	pop    edx
  40c82f:	lods   al,BYTE PTR ds:[esi]
  40c830:	xor    al,0xfc
  40c832:	jnp    0x40c81d
  40c834:	sbb    al,0xd7
  40c836:	stos   DWORD PTR es:[edi],eax
  40c837:	scas   al,BYTE PTR es:[edi]
  40c838:	push   ds
  40c839:	sbb    al,0xce
  40c83c:	ins    BYTE PTR es:[edi],dx
  40c83d:	arpl   WORD PTR [eax-0x5],bp
  40c840:	push   0xffffff87
  40c842:	in     al,dx
  40c843:	jmp    FWORD PTR [ebp+0x59]
  40c846:	aam    0xd2
  40c848:	outs   dx,DWORD PTR ds:[esi]
  40c849:	mov    ds:0x82b87935,al
  40c84e:	rcr    DWORD PTR [ecx-0x1d40a703],0xdc
  40c855:	xor    dl,dl
  40c857:	arpl   WORD PTR [ecx],sp
  40c859:	mov    bh,0x57
  40c85b:	inc    ebp
  40c85c:	push   esp
  40c85d:	mov    ecx,0xfcb52e8
  40c862:	xchg   esi,eax
  40c863:	in     al,dx
  40c864:	aaa    
  40c865:	push   ds
  40c866:	outs   dx,BYTE PTR ds:[esi]
  40c867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c868:	aas    
  40c869:	bound  eax,QWORD PTR [esi]
  40c86b:	aaa    
  40c86c:	dec    ebp
  40c86d:	push   ss
  40c86e:	mov    al,BYTE PTR [esi+edi*2]
  40c871:	rcl    DWORD PTR [eax+eiz*2-0x3d],0xf5
  40c876:	sti    
  40c877:	pop    ss
  40c878:	(bad)  
  40c879:	pop    eax
  40c87a:	sbb    eax,0x38bce817
  40c87f:	mov    edx,0x43bd9fb8
  40c884:	xor    eax,0x3eb46eb7
  40c889:	shr    BYTE PTR [ebp+0x65],cl
  40c88c:	mov    WORD PTR [edx-0x6b80198],es
  40c892:	scas   al,BYTE PTR es:[edi]
  40c893:	pop    ebx
  40c894:	pop    ds
  40c895:	mov    ds:0xcf9470d2,eax
  40c89a:	arpl   WORD PTR [edi+eiz*2-0x22],sp
  40c89e:	rcl    BYTE PTR [ebp-0x67],cl
  40c8a1:	push   ebp
  40c8a2:	sar    ch,1
  40c8a4:	jg     0x40c84a
  40c8a6:	or     ecx,DWORD PTR fs:[ebx+0x2b]
  40c8aa:	or     al,0x13
  40c8ac:	sbb    eax,0x44deab1a
  40c8b1:	sbb    DWORD PTR [ebx+0x2b],ebx
  40c8b4:	or     BYTE PTR [esi-0x5fc48c71],bl
  40c8ba:	stos   BYTE PTR es:[edi],al
  40c8bb:	mov    eax,0x6b9f1e0
  40c8c0:	lods   eax,DWORD PTR ds:[esi]
  40c8c1:	ss mov cl,0xce
  40c8c4:	inc    esp
  40c8c5:	js     0x40c8dd
  40c8c7:	mov    ecx,0x9a25d958
  40c8cc:	adc    DWORD PTR [edi+0x26],edx
  40c8cf:	jbe    0x40c895
  40c8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d2:	or     DWORD PTR [eax-0x1e],edi
  40c8d5:	aad    0x31
  40c8d7:	mov    ebp,0xa51feab4
  40c8dc:	push   esp
  40c8dd:	pop    ss
  40c8de:	pop    edx
  40c8df:	push   esi
  40c8e0:	repz cwde 
  40c8e2:	inc    ah
  40c8e4:	hlt    
  40c8e5:	xor    ecx,DWORD PTR [ebp+0x21]
  40c8e8:	xchg   esi,eax
  40c8e9:	iret   
  40c8ea:	adc    eax,0xcbffc057
  40c8ef:	repz jns 0x40c944
  40c8f2:	mov    ds:0x11b7a890,eax
  40c8f7:	fldenv [edx-0x45]
  40c8fa:	sbb    DWORD PTR [edi-0x65],edi
  40c8fd:	int    0x7e
  40c8ff:	push   ds
  40c900:	sbb    bl,cl
  40c902:	mov    BYTE PTR [eax+ebp*1],cl
  40c905:	sahf   
  40c906:	into   
  40c907:	out    0x5,eax
  40c909:	push   0x37dbffb5
  40c90e:	jmp    0x40c89c
  40c910:	pop    edx
  40c911:	pop    ss
  40c912:	inc    ecx
  40c913:	push   esp
  40c914:	pop    ds
  40c915:	dec    ebp
  40c916:	inc    eax
  40c917:	rcl    BYTE PTR [edi+0x7d6cddd8],0xac
  40c91e:	xor    al,0x3d
  40c920:	add    ah,BYTE PTR [ebx]
  40c922:	add    BYTE PTR [eax+edx*2-0x2],bl
  40c926:	inc    ebx
  40c927:	xchg   edx,eax
  40c928:	and    ebp,DWORD PTR [esi]
  40c92a:	out    0x7f,eax
  40c92c:	and    BYTE PTR [eax-0x28bcc00d],0x34
  40c933:	fdivr  st,st(4)
  40c935:	xchg   edi,esi
  40c937:	push   es
  40c938:	ret    0xc96a
  40c93b:	xchg   ebp,eax
  40c93c:	pop    edx
  40c93d:	int3   
  40c93e:	jo     0x40c8d2
  40c940:	mov    WORD PTR gs:[eax],ds
  40c943:	push   ds
  40c944:	enter  0x51e0,0x9b
  40c948:	sbb    al,BYTE PTR [edx-0x63]
  40c94b:	push   edx
  40c94c:	push   esi
  40c94d:	push   ss
  40c94e:	ror    BYTE PTR [ebx-0x31af2f3a],1
  40c954:	adc    DWORD PTR [ecx+0x6d3b6c52],ebx
  40c95a:	xchg   BYTE PTR [ebp-0x3871dd6f],bh
  40c960:	inc    ebp
  40c961:	clc    
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x59d1a1a3]
  40d00c:	mov    cl,0xb2
  40d00e:	jmp    0x5f484c8f
  40d013:	jl     0x40d091
  40d015:	sbb    eax,0xc4d95f4
  40d01a:	fisttp QWORD PTR [ecx+0x9]
  40d01d:	retf   0x3e7f
  40d020:	mov    ds:0x7a69ada6,eax
  40d025:	clc    
  40d026:	or     BYTE PTR [ecx+0x34],bh
  40d029:	les    ebp,FWORD PTR [eax-0x4267492c]
  40d02f:	mov    ch,0x8f
  40d031:	ja     0x40cfee
  40d033:	mov    esi,0x45fe7da5
  40d038:	xor    edx,edi
  40d03a:	dec    ebp
  40d03b:	ja     0x40d038
  40d03d:	int    0x31
  40d03f:	jp     0x40cfe2
  40d041:	fdivr  QWORD PTR [eax+eiz*8]
  40d044:	jne    0x40d0b4
  40d046:	pop    ebx
  40d047:	xor    DWORD PTR [si+0x40],esp
  40d04b:	sbb    eax,DWORD PTR [edi+0x32]
  40d04e:	fisubr DWORD PTR [esp+edi*8]
  40d051:	jne    0x40d009
  40d053:	sub    BYTE PTR [ebp-0x573635f6],ah
  40d059:	dec    esp
  40d05a:	cmp    bh,dl
  40d05c:	jp     0x40d055
  40d05e:	add    BYTE PTR [ecx],al
  40d060:	fidiv  WORD PTR [ebx+edx*8]
  40d063:	push   cs
  40d064:	push   ebx
  40d065:	mov    edi,0x9d804ac5
  40d06a:	inc    edi
  40d06b:	sbb    al,0x53
  40d06d:	cmc    
  40d06e:	test   al,0xd5
  40d070:	mov    ecx,0x578ac69
  40d075:	ror    edi,cl
  40d077:	cmp    eax,0x48d995bf
  40d07c:	(bad)
  40d080:	in     al,dx
  40d081:	(bad)  
  40d082:	cdq    
  40d083:	fs retf 0x51e6
  40d087:	pop    eax
  40d088:	(bad)  
  40d089:	cmp    dl,BYTE PTR [ebx+edi*1-0x4b052fb8]
  40d090:	int3   
  40d091:	or     eax,0x1d0af278
  40d096:	comiss xmm6,DWORD PTR [esi+0x62]
  40d09a:	xchg   esp,eax
  40d09b:	inc    edi
  40d09c:	icebp  
  40d09d:	mov    ds:0xb620f883,al
  40d0a2:	mov    eax,ds:0xb5ec5189
  40d0a7:	in     al,dx
  40d0a8:	in     al,0xad
  40d0aa:	mov    dl,BYTE PTR [esi-0x4a549915]
  40d0b0:	test   eax,0x313935e2
  40d0b5:	mov    esp,0x9088246b
  40d0ba:	pop    ds
  40d0bb:	or     eax,0x1010c345
  40d0c0:	mov    eax,0xb192779c
  40d0c5:	rol    eax,0x4b
  40d0c8:	iret   
  40d0c9:	cdq    
  40d0ca:	jl     0x40d0ce
  40d0cc:	add    BYTE PTR [edx],ah
  40d0ce:	mov    ds:0x84a4a804,al
  40d0d3:	iret   
  40d0d4:	int    0x5f
  40d0d6:	inc    ecx
  40d0d7:	mov    dl,0x47
  40d0d9:	cmp    edi,edi
  40d0db:	retf   
  40d0dc:	into   
  40d0dd:	and    DWORD PTR [ecx+0x74],edi
  40d0e0:	jns    0x40d104
  40d0e2:	cmp    cl,ch
  40d0e4:	mov    BYTE PTR [ecx-0x4339fa0b],cl
  40d0ea:	daa    
  40d0eb:	not    DWORD PTR [edi]
  40d0ed:	jnp    0x40d0e3
  40d0ef:	scas   al,BYTE PTR es:[edi]
  40d0f0:	add    esi,DWORD PTR [ebx]
  40d0f2:	outs   dx,DWORD PTR ds:[esi]
  40d0f3:	add    eax,0x8b07d627
  40d0f8:	mov    WORD PTR [edx-0x51],?
  40d0fb:	int    0x56
  40d0fd:	sub    dh,BYTE PTR [ebp-0x39]
  40d100:	sub    DWORD PTR [ecx+0x5e456d8f],eax
  40d106:	fwait
  40d107:	inc    ecx
  40d108:	adc    DWORD PTR [esi],eax
  40d10a:	xchg   edi,eax
  40d10b:	jg     0x40d0f3
  40d10d:	out    0x19,al
  40d10f:	cwde   
  40d110:	imul   edx,DWORD PTR [ebx-0xad6902b],0x21f6b897
  40d11a:	sub    DWORD PTR [eax-0xa0f99c7],0xe5753376
  40d124:	mul    BYTE PTR [edx-0x1e]
  40d127:	jns    0x40d120
  40d129:	adc    esi,DWORD PTR [eax+0x33886519]
  40d12f:	xor    bl,BYTE PTR [esi-0x2d]
  40d132:	jg     0x40d0ca
  40d134:	inc    edx
  40d135:	adc    DWORD PTR [eax],ecx
  40d137:	ss cs aaa 
  40d13a:	hlt    
  40d13b:	leave  
  40d13c:	add    eax,0xc66c921e
  40d141:	mov    BYTE PTR [eax],ah
  40d143:	pop    ds
  40d144:	push   esi
  40d145:	sub    al,0x70
  40d147:	aam    0x4e
  40d149:	jns    0x40d167
  40d14b:	lds    esi,FWORD PTR [ecx]
  40d14d:	pop    ss
  40d14e:	sub    ebp,DWORD PTR [edx+eiz*1]
  40d151:	jge    0x40d16e
  40d153:	sahf   
  40d154:	iret   
  40d155:	scas   al,BYTE PTR es:[edi]
  40d156:	cmp    eax,0x82dcf20e
  40d15b:	iret   
  40d15c:	mov    ch,0x36
  40d15e:	push   cs
  40d15f:	mov    ebp,0x41f3b9ae
  40d164:	fstp   TBYTE PTR [esi-0x25]
  40d167:	icebp  
  40d168:	xlat   BYTE PTR ds:[ebx]
  40d169:	in     al,0x23
  40d16b:	loope  0x40d19f
  40d16d:	imul   edi,ebx,0xc6fa2d3b
  40d173:	and    ch,BYTE PTR [esi]
  40d175:	ja     0x40d179
  40d177:	cs push ebp
  40d179:	mov    esp,0x6723e70d
  40d17e:	lea    ebx,[ebp-0x58f57fcb]
  40d184:	xchg   ecx,eax
  40d185:	add    BYTE PTR [ebp-0x1f],bl
  40d188:	lock dec edi
  40d18a:	and    ebx,DWORD PTR [eax-0x47fcd305]
  40d190:	mov    al,0x8d
  40d192:	inc    ecx
  40d193:	fwait
  40d194:	pushf  
  40d195:	(bad)  
  40d196:	jl     0x40d134
  40d198:	scas   al,BYTE PTR es:[edi]
  40d199:	fistp  QWORD PTR [eax-0x2e]
  40d19c:	push   eax
  40d19d:	and    al,0x78
  40d19f:	cmp    DWORD PTR [ebp-0x743c41ec],ebp
  40d1a5:	test   eax,0x713f6638
  40d1aa:	pop    ds
  40d1ab:	sub    esp,DWORD PTR [ebx+0x272eac6]
  40d1b1:	iret   
  40d1b2:	fld    QWORD PTR [ecx+0x63]
  40d1b5:	sbb    al,ah
  40d1b7:	retf   0x35af
  40d1ba:	cdq    
  40d1bb:	mov    dl,0xc4
  40d1bd:	jnp    0x40d151
  40d1bf:	jne    0x40d1c2
  40d1c1:	cmp    bh,BYTE PTR [ebx+0x1e3b5705]
  40d1c7:	repnz fld QWORD PTR [edi]
  40d1ca:	add    eax,0x8327c1b1
  40d1cf:	pop    ds
  40d1d0:	std    
  40d1d1:	ds das 
  40d1d3:	push   ecx
  40d1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1d5:	jne    0x40d18e
  40d1d7:	cmp    DWORD PTR [ebx-0x754ead9e],0xffffffd5
  40d1de:	scas   eax,DWORD PTR es:[edi]
  40d1df:	add    dl,BYTE PTR [ebx]
  40d1e1:	fsubr  st(1),st
  40d1e3:	psrlq  mm7,QWORD PTR [edi]
  40d1e6:	jbe    0x40d173
  40d1e8:	add    al,0x1e
  40d1ea:	xor    DWORD PTR [ecx+ecx*4],0xce897135
  40d1f1:	add    al,0xa0
  40d1f3:	rcr    dh,0x88
  40d1f6:	cmp    DWORD PTR [ecx-0x6fd25eff],0xffffffed
  40d1fd:	mov    DWORD PTR [eax-0x61],eax
  40d200:	push   cs
  40d201:	push   es
  40d202:	in     eax,dx
  40d203:	cmp    eax,0x99445c28
  40d208:	adc    BYTE PTR [edi-0x4b802893],bh
  40d20e:	mov    ds:0x6e4b4994,eax
  40d213:	xchg   ebx,eax
  40d214:	push   ecx
  40d215:	aas    
  40d216:	add    dl,BYTE PTR [eax-0x2]
  40d219:	in     eax,0xb2
  40d21b:	inc    ecx
  40d21c:	adc    BYTE PTR [ebp+0x73cab280],dh
  40d222:	pop    ds
  40d223:	nop
  40d224:	jecxz  0x40d1c9
  40d226:	mov    DWORD PTR [ecx],0x3ac81cbc
  40d22c:	jns    0x40d1e4
  40d22e:	call   0xf023:0x3d9348a
  40d235:	push   ds
  40d236:	ja     0x40d218
  40d238:	and    edx,ebp
  40d23a:	mov    bh,ah
  40d23c:	mov    edi,0xed833bbe
  40d241:	call   0xd713:0xab627143
  40d248:	or     DWORD PTR [esi],ebx
  40d24a:	test   DWORD PTR [ebx],0x587500a8
  40d250:	std    
  40d251:	push   0x9f5eb754
  40d256:	xchg   esp,eax
  40d257:	pusha  
  40d258:	dec    esi
  40d259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d25a:	add    edx,esp
  40d25c:	mov    ds:0x9e56731b,al
  40d261:	bound  edi,QWORD PTR [eax]
  40d263:	nop
  40d264:	jo     0x40d26d
  40d266:	rcr    BYTE PTR [edx],1
  40d268:	(bad)  
  40d26a:	mov    BYTE PTR [esp+ebx*1+0x12892cd2],ah
  40d271:	adc    BYTE PTR [ecx],ah
  40d273:	jmp    0x2bf2:0xfd453ceb
  40d27a:	dec    esp
  40d27b:	in     al,0x8e
  40d27d:	dec    edx
  40d27e:	mov    ds:0x61d77915,al
  40d283:	add    eax,0x2ad1adf5
  40d288:	aaa    
  40d289:	dec    esi
  40d28a:	mov    ds:0x90002232,eax
  40d28f:	ja     0x40d27e
  40d291:	and    al,0x2a
  40d293:	outs   dx,DWORD PTR ds:[esi]
  40d294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d295:	shl    BYTE PTR [ecx-0x2d],0x8d
  40d299:	cmp    eax,DWORD PTR [edx-0x6b]
  40d29c:	pop    ss
  40d29d:	rol    DWORD PTR [ecx-0x3d],cl
  40d2a0:	dec    edx
  40d2a1:	(bad)  
  40d2a2:	fwait
  40d2a3:	outs   dx,BYTE PTR ds:[esi]
  40d2a4:	aaa    
  40d2a5:	inc    esi
  40d2a6:	push   eax
  40d2a7:	icebp  
  40d2a8:	adc    al,0x62
  40d2aa:	pop    esp
  40d2ab:	push   ecx
  40d2ac:	lahf   
  40d2ad:	pop    ecx
  40d2ae:	lahf   
  40d2af:	mul    BYTE PTR [ecx-0x62]
  40d2b2:	outs   dx,DWORD PTR ds:[esi]
  40d2b3:	and    BYTE PTR [edx],0xe0
  40d2b6:	and    DWORD PTR [ebp-0x33ca85e1],ebx
  40d2bc:	mov    cl,0xa7
  40d2be:	outs   dx,DWORD PTR ds:[esi]
  40d2bf:	fld    DWORD PTR [edi+0x793a0f06]
  40d2c5:	push   esi
  40d2c6:	data16 int 0x8b
  40d2c9:	jle    0x40d328
  40d2cb:	loope  0x40d2b7
  40d2cd:	push   0xffffffe2
  40d2cf:	not    BYTE PTR [ebp-0x35375368]
  40d2d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2d6:	cmp    BYTE PTR [ecx+0x33],ch
  40d2d9:	(bad)  
  40d2da:	jg     0x40d261
  40d2dc:	test   BYTE PTR [ebp+0xb26eaaa],bh
  40d2e2:	cmp    ah,BYTE PTR ds:0x85e3d6c3
  40d2e8:	rcr    DWORD PTR ds:0x97a5243a,cl
  40d2ee:	mov    bh,0xbd
  40d2f0:	fidiv  DWORD PTR [ecx+edx*1+0x5e]
  40d2f4:	inc    ebp
  40d2f5:	(bad)
  40d2fa:	arpl   WORD PTR [ebx+ebp*1+0x7f],di
  40d2fe:	mov    ecx,0x40395a90
  40d303:	add    eax,0x87ef39dd
  40d308:	scas   eax,DWORD PTR es:[edi]
  40d309:	int3   
  40d30a:	mov    edx,0x11234d9d
  40d30f:	adc    ebx,0xffffffde
  40d312:	and    al,0x46
  40d314:	out    dx,al
  40d315:	sbb    BYTE PTR [ebp-0x4c],ch
  40d318:	inc    ebx
  40d319:	cmc    
  40d31a:	mov    ah,0x5d
  40d31c:	xchg   ecx,edx
  40d31e:	xor    eax,0x424e4dbe
  40d323:	addr16 pop ebp
  40d325:	pusha  
  40d326:	adc    ebx,DWORD PTR [esi+esi*1-0x1d3d66cb]
  40d32d:	xchg   ebp,eax
  40d32e:	neg    DWORD PTR [edx-0x57]
  40d331:	cmp    dh,dh
  40d333:	jo     0x40d2f9
  40d335:	cld    
  40d336:	inc    eax
  40d337:	inc    esp
  40d338:	inc    eax
  40d339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d33b:	push   0x9d375d27
  40d340:	clc    
  40d341:	cmp    eax,0x247d516c
  40d346:	mov    BYTE PTR [ecx-0x1a03e111],0x49
  40d34d:	loop   0x40d359
  40d34f:	inc    ebp
  40d350:	cmp    DWORD PTR [eax],eax
  40d352:	push   ebx
  40d353:	mov    dh,bh
  40d355:	in     al,0x9f
  40d357:	push   0x30
  40d359:	in     eax,0xb5
  40d35b:	lods   eax,DWORD PTR ds:[esi]
  40d35c:	enter  0xc083,0xc0
  40d360:	mov    ah,0x0
  40d362:	sbb    al,0x85
  40d364:	test   DWORD PTR [edi-0x5c68e499],0x8394bd25
  40d36e:	clc    
  40d36f:	ins    BYTE PTR es:[edi],dx
  40d370:	in     eax,dx
  40d371:	xchg   ecx,eax
  40d372:	inc    ebp
  40d373:	or     DWORD PTR [ebx+0x64],edx
  40d376:	(bad)  
  40d377:	sbb    bh,BYTE PTR [edi+0x278abef7]
  40d37d:	or     cl,BYTE PTR [edx+eax*8-0x32]
  40d381:	xchg   edx,eax
  40d382:	out    dx,eax
  40d383:	sub    edi,DWORD PTR [ebx+eiz*8+0x5d]
  40d387:	jne    0x40d389
  40d389:	mov    ebp,0xa772d42d
  40d38e:	daa    
  40d38f:	sub    al,BYTE PTR [edx+0x16]
  40d392:	mov    ds:0xf6b2d9,al
  40d397:	and    dh,dl
  40d399:	and    al,0x6d
  40d39b:	pop    ss
  40d39c:	shl    DWORD PTR es:[ebx-0x20],1
  40d3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3a1:	xchg   BYTE PTR [ecx],al
  40d3a3:	es dec edi
  40d3a5:	pop    edi
  40d3a6:	lods   al,BYTE PTR ds:[esi]
  40d3a7:	and    dl,ch
  40d3a9:	mov    WORD PTR [eax+0x7e],cs
  40d3ac:	and    eax,0x1a24e13c
  40d3b1:	retf   0xc9d3
  40d3b4:	mul    BYTE PTR ds:0x388c05ba
  40d3ba:	and    esi,0x29
  40d3bd:	xor    al,0x58
  40d3bf:	or     BYTE PTR [edx],ah
  40d3c1:	lock sbb edi,DWORD PTR [esi-0x4ea365a9]
  40d3c8:	jge    0x40d3a6
  40d3ca:	mov    ch,0xdb
  40d3cc:	iret   
  40d3cd:	mov    ecx,0xa083e5ae
  40d3d2:	sti    
  40d3d3:	adc    esi,ecx
  40d3d5:	mov    ?,WORD PTR [eax+0x19cf915e]
  40d3db:	pop    ds
  40d3dc:	hlt    
  40d3dd:	test   eax,0x305353f4
  40d3e2:	cmps   BYTE PTR ss:[si],BYTE PTR es:[di]
  40d3e5:	push   esp
  40d3e6:	mov    ss,WORD PTR [edx+0x271d0556]
  40d3ec:	add    ebx,DWORD PTR [ebp+ecx*1-0x4283d37e]
  40d3f3:	fs inc edx
  40d3f5:	pop    ss
  40d3f6:	add    bl,BYTE PTR [ecx-0x70]
  40d3f9:	arpl   WORD PTR [ebx+esi*1-0x5f],bx
  40d3fd:	fcmovb st,st(3)
  40d3ff:	inc    esi
  40d400:	fistp  WORD PTR [edi+0x55]
  40d403:	cmp    BYTE PTR [edx+0x57],cl
  40d406:	xor    al,0xeb
  40d408:	test   eax,0x6b6f9e49
  40d40d:	ss ja  0x40d45a
  40d410:	icebp  
  40d411:	mov    ch,BYTE PTR [edi+0x48]
  40d414:	dec    ebp
  40d415:	xor    dl,bh
  40d417:	mov    ecx,DWORD PTR [edi+0x365a2b2a]
  40d41d:	and    eax,0x8200b1bf
  40d422:	xchg   ecx,eax
  40d423:	outs   dx,DWORD PTR ds:[esi]
  40d424:	outs   dx,BYTE PTR ds:[esi]
  40d425:	ret    
  40d426:	xchg   ch,bh
  40d428:	ins    DWORD PTR es:[edi],dx
  40d429:	es mov edi,esp
  40d42c:	adc    eax,0x62a84497
  40d431:	lock sub eax,0x982edf80
  40d437:	je     0x40d439
  40d439:	or     al,0x5f
  40d43b:	and    eax,0xfb8a778f
  40d440:	into   
  40d441:	cmp    dh,BYTE PTR [eax+eax*4-0x7ff97d28]
  40d448:	outs   dx,BYTE PTR ds:[esi]
  40d449:	xchg   ebx,eax
  40d44a:	mov    ds:0x58248988,eax
  40d44f:	call   DWORD PTR [eax-0x2f90e825]
  40d455:	add    al,0x75
  40d457:	adc    bl,BYTE PTR [esi]
  40d459:	scas   al,BYTE PTR es:[edi]
  40d45a:	stos   BYTE PTR es:[edi],al
  40d45b:	mov    dl,0x93
  40d45d:	shl    ebx,cl
  40d45f:	inc    ebp
  40d460:	in     eax,0xb2
  40d462:	repz xchg ecx,eax
  40d464:	pop    edx
  40d465:	mov    ecx,0x449795b4
  40d46a:	jbe    0x40d48d
  40d46c:	aaa    
  40d46d:	mov    bh,0xab
  40d46f:	test   eax,0x4f0db233
  40d474:	das    
  40d475:	fld    TBYTE PTR [eax]
  40d477:	in     al,dx
  40d478:	push   cs
  40d479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d47a:	mov    ah,0x9b
  40d47c:	and    ecx,DWORD PTR [ebp+0x50]
  40d47f:	retf   0x3e00
  40d482:	mov    al,0x47
  40d484:	outs   dx,BYTE PTR ds:[esi]
  40d485:	aas    
  40d486:	cdq    
  40d487:	(bad)  
  40d488:	jmp    0x37056833
  40d48d:	pop    ss
  40d48e:	stc    
  40d48f:	pusha  
  40d490:	mov    ah,0x1f
  40d492:	mov    ds:0xac716e90,al
  40d497:	xlat   BYTE PTR ds:[ebx]
  40d498:	js     0x40d501
  40d49a:	mov    ebp,0xdb659db6
  40d49f:	mov    ecx,0x90f70a81
  40d4a4:	(bad)
  40d4a9:	xchg   edi,eax
  40d4aa:	cmc    
  40d4ab:	push   ebp
  40d4ac:	pop    ds
  40d4ad:	ret    0xca9a
  40d4b0:	icebp  
  40d4b1:	mov    eax,0xe9aeb0e2
  40d4b6:	mov    cl,0x18
  40d4b8:	cmp    ah,BYTE PTR [ebx+0x16]
  40d4bb:	mov    ds:0xc2434f9c,al
  40d4c0:	adc    ebp,eax
  40d4c2:	xchg   ebp,eax
  40d4c3:	not    DWORD PTR [edi+0x7059d884]
  40d4c9:	clc    
  40d4ca:	popf   
  40d4cb:	and    al,0x8f
  40d4cd:	jnp    0x40d4d0
  40d4cf:	inc    esp
  40d4d0:	in     al,dx
  40d4d1:	aam    0xed
  40d4d3:	fs stos DWORD PTR es:[edi],eax
  40d4d5:	cmp    al,0x66
  40d4d7:	fsub   DWORD PTR [edx+0x23ef05a0]
  40d4dd:	push   esi
  40d4de:	outs   dx,BYTE PTR ds:[esi]
  40d4df:	dec    eax
  40d4e0:	adc    bh,BYTE PTR [ecx-0x219ced6]
  40d4e6:	push   edx
  40d4e7:	imul   esp,esi,0xc03e0e42
  40d4ed:	adc    ebx,DWORD PTR [ecx-0x4fe3b7b8]
  40d4f3:	xchg   esi,eax
  40d4f4:	pop    ebp
  40d4f5:	sti    
  40d4f6:	idiv   edx
  40d4f8:	or     al,0xa7
  40d4fa:	push   ebx
  40d4fb:	not    BYTE PTR [edi-0x33507eba]
  40d501:	test   ch,bh
  40d503:	push   ds
  40d504:	and    BYTE PTR [ebp+0x2382fc10],dh
  40d50a:	mov    cl,0x98
  40d50c:	fcomp  st(0)
  40d50e:	or     ecx,DWORD PTR [ebp+edx*1+0x2b365f53]
  40d515:	or     al,0x78
  40d517:	xlat   BYTE PTR ds:[ebx]
  40d518:	pop    ebp
  40d519:	loop   0x40d4b5
  40d51b:	pop    eax
  40d51c:	or     al,0xdb
  40d51e:	sub    ebp,DWORD PTR [ebx]
  40d520:	push   ss
  40d521:	scas   eax,DWORD PTR es:[edi]
  40d522:	fisub  WORD PTR [edx]
  40d524:	sbb    BYTE PTR ds:0x4564944c,bl
  40d52a:	jno    0x40d555
  40d52c:	jge    0x40d53c
  40d52e:	push   esi
  40d52f:	stc    
  40d530:	fild   WORD PTR [ebx]
  40d532:	jae    0x40d4ce
  40d534:	rol    BYTE PTR [edx],1
  40d536:	mov    esp,edx
  40d538:	jb     0x40d515
  40d53a:	mov    edi,DWORD PTR [ecx+0x500716ce]
  40d540:	push   esi
  40d541:	fwait
  40d542:	retf   
  40d543:	inc    edx
  40d544:	mov    eax,ds:0x8b47f1a2
  40d549:	aaa    
  40d54a:	fldenv [edi-0x4f]
  40d54d:	add    BYTE PTR [ecx-0x4a],0x2c
  40d551:	test   DWORD PTR [ecx+ecx*8+0x3a],0x9be5ef8c
  40d559:	mov    ch,0x71
  40d55b:	pop    esp
  40d55c:	add    edx,DWORD PTR [esi+0x8360b5f]
  40d562:	add    BYTE PTR [esi+0x482b9014],dl
  40d568:	daa    
  40d569:	and    esp,DWORD PTR [ebp+esi*4+0x50]
  40d56d:	ja     0x40d522
  40d56f:	push   0x31368dd8
  40d574:	mov    bh,0x90
  40d576:	dec    edi
  40d577:	in     al,dx
  40d578:	in     eax,0xe3
  40d57a:	out    dx,al
  40d57b:	or     DWORD PTR [ebx+0x4249fcd2],ecx
  40d581:	mov    edi,0xa5706013
  40d586:	jnp    0x40d570
  40d588:	aas    
  40d589:	ins    BYTE PTR es:[edi],dx
  40d58a:	push   esp
  40d58b:	add    al,0xa
  40d58d:	xchg   ebx,eax
  40d58e:	test   eax,0xb4c08251
  40d593:	inc    esp
  40d594:	dec    ecx
  40d595:	and    al,0x7a
  40d597:	push   edx
  40d598:	ds sar dh,cl
  40d59b:	inc    ecx
  40d59c:	pop    ebx
  40d59d:	mov    edi,0x7b2b3265
  40d5a2:	push   ebx
  40d5a3:	jg     0x40d5c8
  40d5a5:	and    dh,BYTE PTR [ebp-0x5a]
  40d5a8:	icebp  
  40d5a9:	inc    esi
  40d5aa:	pop    eax
  40d5ab:	adc    DWORD PTR [edi-0x29],edx
  40d5ae:	push   esp
  40d5af:	add    dh,BYTE PTR [eax]
  40d5b1:	add    BYTE PTR [ecx-0x56f23f02],ah
  40d5b7:	jns    0x40d53c
  40d5b9:	sbb    eax,0xb1e5440a
  40d5be:	ja     0x40d60a
  40d5c0:	add    bl,al
  40d5c2:	cmp    bl,BYTE PTR [esi]
  40d5c4:	mov    esi,0x2eae8013
  40d5c9:	inc    edx
  40d5ca:	mov    ah,0x60
  40d5cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5cd:	push   ebx
  40d5ce:	add    BYTE PTR [edi+0x0],0x4b
  40d5d2:	push   ds
  40d5d3:	inc    edx
  40d5d4:	jns    0x40d584
  40d5d6:	cdq    
  40d5d7:	xor    al,0xd3
  40d5d9:	jnp    0x40d5f4
  40d5db:	fist   DWORD PTR [edx+esi*4-0x2b]
  40d5df:	repnz or ebp,ebp
  40d5e2:	sbb    esp,edi
  40d5e4:	out    0x61,al
  40d5e6:	bnd call 0xa7c30477
  40d5ec:	pusha  
  40d5ed:	loopne 0x40d669
  40d5ef:	(bad)  
  40d5f0:	stos   DWORD PTR es:[edi],eax
  40d5f1:	mov    bh,0xbd
  40d5f3:	mov    ds:0x888a091d,al
  40d5f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f9:	popa   
  40d5fa:	add    edx,DWORD PTR [edx]
  40d5fc:	mov    esi,0xe81c4e8f
  40d601:	in     al,dx
  40d602:	loop   0x40d64a
  40d604:	in     eax,dx
  40d605:	xor    al,0x5c
  40d607:	jg     0x40d628
  40d609:	stos   DWORD PTR es:[edi],eax
  40d60a:	loop   0x40d686
  40d60c:	out    dx,eax
  40d60d:	push   eax
  40d60e:	jmp    0x616a1735
  40d613:	cld    
  40d614:	sub    ebx,ebx
  40d616:	xor    BYTE PTR [edi+0x1e],cl
  40d619:	into   
  40d61a:	fisub  DWORD PTR [ebx+0x10bfba4b]
  40d620:	mov    al,0xa4
  40d622:	xchg   edi,eax
  40d624:	push   ds
  40d625:	or     esp,ebx
  40d627:	loope  0x40d620
  40d629:	xchg   edx,eax
  40d62a:	sub    edx,DWORD PTR [ecx]
  40d62c:	inc    ecx
  40d62d:	(bad)  
  40d62e:	cli    
  40d62f:	sbb    eax,0x5fa9f28
  40d634:	bound  ecx,QWORD PTR [edx]
  40d636:	cdq    
  40d637:	je     0x40d5e6
  40d639:	pop    ebx
  40d63a:	jmp    0x40d62f
  40d63c:	dec    eax
  40d63d:	sub    eax,0xab7b340d
  40d642:	in     al,dx
  40d643:	add    eax,0xf032790d
  40d648:	jnp    0x40d5cc
  40d64a:	bound  edx,QWORD PTR [eax+0x2eec3f12]
  40d650:	mov    ch,0x86
  40d652:	sahf   
  40d653:	add    esi,DWORD PTR [edi-0x4]
  40d656:	int    0x42
  40d658:	xchg   ebp,eax
  40d659:	repz les eax,FWORD PTR [esi]
  40d65c:	lods   eax,DWORD PTR ds:[esi]
  40d65d:	popa   
  40d65e:	fisttp DWORD PTR [edi-0x20d17b72]
  40d664:	pop    ss
  40d665:	test   DWORD PTR [esi],ecx
  40d667:	mul    DWORD PTR [ebp+0x41c21e1d]
  40d66d:	push   0xffffffb5
  40d66f:	sbb    ah,BYTE PTR ds:[ecx+0x33]
  40d673:	js     0x40d6b7
  40d675:	inc    edx
  40d676:	retf   0xcc01
  40d679:	jno    0x40d680
  40d67b:	push   ebp
  40d67c:	(bad)  
  40d67e:	ret    0x4fa5
  40d681:	test   BYTE PTR [edx+0x3e0aa127],ah
  40d687:	add    eax,0xb67341a9
  40d68c:	or     ecx,DWORD PTR [ebx+ecx*2-0xf]
  40d690:	repz sub al,0x39
  40d693:	and    BYTE PTR [esp+eiz*4+0x31],al
  40d697:	mov    cl,0xc
  40d699:	xchg   ebx,eax
  40d69a:	loopne 0x40d646
  40d69c:	fisubr DWORD PTR [ecx-0x26]
  40d69f:	and    eax,edx
  40d6a1:	add    DWORD PTR [eax-0x6],ebp
  40d6a4:	aam    0x6a
  40d6a6:	pop    ecx
  40d6a7:	xor    eax,0xee3fbf2f
  40d6ac:	sbb    eax,0xba484897
  40d6b1:	dec    edi
  40d6b2:	sbb    eax,0x8c972aa2
  40d6b7:	push   ss
  40d6b8:	jo     0x40d686
  40d6ba:	sbb    ebx,DWORD PTR [edx-0x18]
  40d6bd:	cld    
  40d6be:	ret    
  40d6bf:	nop
  40d6c0:	mov    al,0x5d
  40d6c2:	dec    edx
  40d6c3:	mov    bh,0x1e
  40d6c5:	je     0x40d696
  40d6c7:	cmp    edi,esi
  40d6c9:	or     DWORD PTR [edi-0x502913e2],ebp
  40d6cf:	mov    esp,0xac32ea97
  40d6d4:	mov    BYTE PTR [esi+eax*4+0x99dac63],dh
  40d6db:	cmp    al,0x33
  40d6de:	icebp  
  40d6df:	sub    dl,ch
  40d6e1:	sub    ah,BYTE PTR [ebx+0x21]
  40d6e4:	pop    esi
  40d6e5:	jp     0x40d6e2
  40d6e7:	pop    esi
  40d6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6e9:	lods   al,BYTE PTR ds:[esi]
  40d6ea:	call   0xf34a1d70
  40d6ef:	mov    BYTE PTR [ebx],bh
  40d6f1:	jno    0x40d689
  40d6f3:	mov    dl,0x7b
  40d6f5:	xlat   BYTE PTR ds:[ebx]
  40d6f6:	into   
  40d6f7:	shr    ebp,cl
  40d6f9:	or     al,BYTE PTR [eax+0xa66a17f]
  40d6ff:	pop    esp
  40d700:	push   ds
  40d701:	xchg   ecx,eax
  40d702:	mov    cl,0x55
  40d704:	inc    ecx
  40d705:	mov    dl,0xa2
  40d707:	out    dx,eax
  40d708:	sub    eax,DWORD PTR [eax-0x1d775a15]
  40d70e:	leave  
  40d70f:	ds test eax,0xfa9ead4f
  40d715:	lods   eax,DWORD PTR ds:[esi]
  40d716:	sub    BYTE PTR [esi+0x7e706e9a],bh
  40d71c:	pop    ebx
  40d71d:	hlt    
  40d71e:	sbb    dl,BYTE PTR [edx]
  40d720:	ss je  0x40d78a
  40d723:	icebp  
  40d724:	aad    0x78
  40d726:	mov    DWORD PTR [edx],edx
  40d728:	add    DWORD PTR [edx+eax*1-0x52117a57],0xc10bee9c
  40d733:	inc    cx
  40d735:	cdq    
  40d736:	icebp  
  40d737:	and    eax,0x4b8839ac
  40d73c:	mov    eax,ds:0x80cad0db
  40d741:	xchg   BYTE PTR [ebx+0x25fb455a],ch
  40d747:	pop    edx
  40d748:	mov    esi,es
  40d74a:	xor    edx,DWORD PTR [eax-0x27434d7b]
  40d750:	cdq    
  40d751:	aad    0x7e
  40d753:	xchg   ecx,eax
  40d754:	push   ds
  40d755:	je     0x5af6cef5
  40d75b:	adc    DWORD PTR [ecx],0xdac8796b
  40d761:	mov    eax,gs
  40d763:	je     0x40d7cf
  40d765:	nop
  40d766:	xchg   ebp,eax
  40d767:	(bad)  
  40d768:	xor    BYTE PTR [ebp+0x1154489],ch
  40d76e:	nop
  40d76f:	xor    BYTE PTR [esi],bh
  40d771:	mov    ds:0xadef84a,eax
  40d776:	mov    eax,ds:0xec13b3a2
  40d77b:	scas   eax,DWORD PTR es:[edi]
  40d77c:	mov    ds:0x79fe1844,eax
  40d781:	xor    bl,ah
  40d783:	xor    BYTE PTR ss:[esi+edx*1-0x6e],cl
  40d788:	or     DWORD PTR [esi],ebp
  40d78a:	cmp    ebp,0x76
  40d78d:	ss mov bh,0xb8
  40d790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d791:	pop    ss
  40d792:	shl    DWORD PTR [edi-0x2598bbbc],0x81
  40d799:	push   ds
  40d79a:	inc    DWORD PTR [ecx+0x56bb7f86]
  40d7a0:	out    0x16,al
  40d7a2:	inc    ebx
  40d7a3:	lea    eax,[esi-0x5bdbe868]
  40d7a9:	push   ds
  40d7aa:	or     DWORD PTR [ebx+edx*2],esp
  40d7ad:	loopne 0x40d808
  40d7af:	mov    bh,0xd4
  40d7b1:	pop    ecx
  40d7b2:	xchg   ecx,eax
  40d7b3:	inc    esp
  40d7b4:	clc    
  40d7b5:	push   esp
  40d7b6:	jge    0x40d7ee
  40d7b8:	loope  0x40d7e5
  40d7ba:	test   eax,0x245061be
  40d7bf:	add    cl,BYTE PTR [ebp-0x2f]
  40d7c2:	in     eax,0xce
  40d7c4:	xor    BYTE PTR [edi+ecx*1],dl
  40d7c7:	retf   
  40d7c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c9:	pop    ds
  40d7ca:	cs (bad) 
  40d7cc:	adc    BYTE PTR [esi-0x56],cl
  40d7cf:	sti    
  40d7d0:	loopne 0x40d763
  40d7d2:	mov    BYTE PTR [ebp+ebp*1+0x59],0x17
  40d7d7:	mov    bh,0x27
  40d7d9:	in     eax,dx
  40d7da:	dec    esp
  40d7db:	cmp    eax,0x9260e4a6
  40d7e0:	inc    ebx
  40d7e1:	lea    ebp,[ecx+0x307003bc]
  40d7e7:	bound  ebp,QWORD PTR ds:0xbdaeb7bb
  40d7ed:	pop    es
  40d7ee:	mov    ecx,0x837aad62
  40d7f3:	mov    eax,0x3831684
  40d7f8:	je     0x40d84d
  40d7fa:	fidivr WORD PTR [esi+0x45824304]
  40d800:	enter  0x9101,0x0
  40d804:	movzx  ebp,dx
  40d807:	sub    dl,dh
  40d809:	dec    ebp
  40d80a:	into   
  40d80b:	jp     0x40d86e
  40d80d:	in     al,0xd6
  40d80f:	sbb    dl,BYTE PTR [esi+0x5f25a66e]
  40d815:	pop    esi
  40d816:	aas    
  40d817:	outs   dx,DWORD PTR ds:[esi]
  40d818:	sahf   
  40d819:	repz cmp ebx,DWORD PTR [ecx]
  40d81c:	fwait
  40d81d:	jns    0x40d857
  40d81f:	or     DWORD PTR [ecx-0x6168b588],edx
  40d825:	stos   BYTE PTR es:[edi],al
  40d826:	stc    
  40d827:	adc    eax,0xc321867
  40d82c:	cwde   
  40d82d:	sub    BYTE PTR [ebx-0x21a9bc5d],dl
  40d833:	mov    edi,0x13b365c2
  40d838:	lock loop 0x40d88d
  40d83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d83c:	adc    cl,BYTE PTR [eax+esi*8+0x74411cb7]
  40d843:	mov    ch,0x2f
  40d845:	mov    ecx,DWORD PTR [edx+edi*2]
  40d848:	mov    eax,0xc308deae
  40d84d:	mov    ecx,esi
  40d84f:	mov    ecx,DWORD PTR [edx]
  40d851:	mov    edx,0x176901b3
  40d856:	stos   DWORD PTR es:[edi],eax
  40d857:	mov    BYTE PTR [ebx-0x52],dl
  40d85a:	push   ss
  40d85b:	xchg   BYTE PTR [esi-0x73d0f81],cl
  40d861:	(bad)  
  40d862:	cs stc 
  40d864:	jae    0x40d83e
  40d866:	add    al,0xd9
  40d868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d869:	jl     0x40d896
  40d86b:	or     esi,DWORD PTR [eax]
  40d86d:	adc    al,0xe
  40d86f:	hlt    
  40d870:	push   edi
  40d871:	fptan  
  40d873:	inc    ecx
  40d874:	mov    dl,0x6d
  40d876:	pop    ds
  40d877:	mov    eax,ds:0xe8a8c66
  40d87c:	mov    al,0x4f
  40d87e:	pop    ebx
  40d87f:	dec    esi
  40d880:	mov    DWORD PTR [ecx],ebx
  40d882:	icebp  
  40d883:	xor    esi,ecx
  40d885:	add    BYTE PTR [ebx+0x13],bh
  40d888:	pushf  
  40d889:	gs call 0x21116d0d
  40d88f:	in     eax,0xd
  40d891:	les    ebx,FWORD PTR [edx+0x7b9eca4f]
  40d897:	lahf   
  40d898:	out    0xc4,eax
  40d89a:	sub    al,0xef
  40d89c:	adc    DWORD PTR [edi],ebp
  40d89e:	js     0x40d8db
  40d8a0:	xchg   edi,eax
  40d8a1:	fwait
  40d8a2:	or     BYTE PTR [edx+esi*4+0x55af385d],ah
  40d8a9:	xchg   ebp,eax
  40d8aa:	dec    ecx
  40d8ab:	(bad)
  40d8af:	pushf  
  40d8b0:	dec    ebp
  40d8b1:	jbe    0x40d894
  40d8b3:	(bad)  
  40d8b4:	jo     0x40d933
  40d8b6:	cmp    al,0x25
  40d8b8:	loopne 0x40d8d2
  40d8ba:	ins    DWORD PTR es:[edi],dx
  40d8bb:	cmp    DWORD PTR [edi-0x2fbc6121],ebx
  40d8c1:	mov    cl,0xcc
  40d8c3:	loope  0x40d8cf
  40d8c5:	adc    eax,0x61ffdf96
  40d8ca:	int3   
  40d8cb:	pop    esi
  40d8cc:	sbb    bl,BYTE PTR [eax+0x6a96943a]
  40d8d2:	mov    esp,ebp
  40d8d4:	xchg   ecx,eax
  40d8d5:	pop    eax
  40d8d6:	xchg   esi,eax
  40d8d7:	xlat   BYTE PTR ds:[ebx]
  40d8d8:	gs pop ecx
  40d8da:	out    dx,eax
  40d8db:	sub    eax,esp
  40d8dd:	nop
  40d8de:	mul    DWORD PTR [eax+0x70]
  40d8e1:	push   ecx
  40d8e2:	jge    0x40d871
  40d8e4:	lods   eax,DWORD PTR ds:[esi]
  40d8e5:	push   eax
  40d8e6:	mov    ds:0x4ef065e8,al
  40d8eb:	mov    bh,0x17
  40d8ed:	(bad)  
  40d8ee:	push   esi
  40d8ef:	cs repnz push ebx
  40d8f2:	xor    al,0xae
  40d8f4:	pop    esi
  40d8f5:	retf   0x8eaf
  40d8f8:	in     eax,0xcd
  40d8fa:	sub    BYTE PTR [ebp+0x153c331d],ah
  40d900:	out    dx,eax
  40d901:	push   es
  40d902:	jg     0x40d925
  40d904:	mov    dh,BYTE PTR [ebx]
  40d906:	loop   0x40d97a
  40d908:	pushf  
  40d909:	and    ebp,ecx
  40d90b:	stos   BYTE PTR es:[edi],al
  40d90c:	pop    eax
  40d90d:	ret    
  40d90e:	push   0x39b8abe1
  40d913:	in     eax,dx
  40d914:	(bad)  
  40d916:	fwait
  40d917:	cdq    
  40d918:	neg    DWORD PTR [esi]
  40d91a:	xchg   BYTE PTR [esi-0x39c16834],al
  40d920:	dec    esp
  40d921:	xor    eax,0x98275540
  40d926:	jl     0x40d90d
  40d928:	(bad)  
  40d929:	adc    DWORD PTR [eax+0x38686f26],ecx
  40d92f:	rcr    DWORD PTR ds:0x7080a01f,0x45
  40d936:	dec    esi
  40d937:	in     eax,0x58
  40d939:	jg     0x40d948
  40d93b:	dec    ecx
  40d93c:	mov    esi,0x1c9480e5
  40d941:	test   DWORD PTR [esi+ecx*1-0x7151dae6],edi
  40d948:	sahf   
  40d949:	mov    ds:0x9dce9bc6,eax
  40d94e:	xchg   ecx,eax
  40d94f:	enter  0x126e,0x86
  40d953:	sbb    eax,0xb7680ef4
  40d958:	cmp    DWORD PTR ds:0xbf7e0e99,eax
  40d95e:	in     eax,dx
  40d95f:	(bad)
  40d964:	pop    esp
  40d965:	into   
  40d966:	stc    
  40d967:	ror    BYTE PTR [eax-0x7579b29f],cl
  40d96d:	and    dh,al
  40d96f:	inc    ebx
  40d970:	jle    0x40d941
  40d972:	stos   BYTE PTR es:[edi],al
  40d973:	sbb    edx,edx
  40d975:	mov    BYTE PTR [eax+0x52],0x19
  40d979:	push   ebx
  40d97a:	cmp    eax,0x530e616
  40d97f:	ins    DWORD PTR es:[edi],dx
  40d980:	(bad)  
  40d981:	pop    ebx
  40d982:	push   es
  40d983:	in     eax,0xc
  40d985:	xor    dh,0x76
  40d988:	jo     0x40d9b8
  40d98a:	inc    edi
  40d98b:	(bad)  
  40d98c:	cld    
  40d98d:	out    dx,eax
  40d98e:	or     esi,DWORD PTR [eax-0x77]
  40d991:	retf   0x8d0
  40d994:	sbb    ch,BYTE PTR [ecx]
  40d996:	inc    ebp
  40d997:	fimul  DWORD PTR [esi+0x53]
  40d99a:	cli    
  40d99b:	repnz xchg al,cl
  40d99e:	and    al,0x27
  40d9a0:	sahf   
  40d9a1:	fisubr DWORD PTR [ebp-0x13]
  40d9a4:	out    dx,eax
  40d9a5:	xchg   ebp,eax
  40d9a6:	xchg   ebp,eax
  40d9a7:	(bad)  
  40d9a8:	(bad)  [edx+edi*2-0x6e38b3eb]
  40d9af:	push   0x27
  40d9b1:	ins    BYTE PTR es:[edi],dx
  40d9b2:	imul   eax,DWORD PTR [edx+edx*8],0xc7deeb7a
  40d9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ba:	push   ds
  40d9bb:	cmp    BYTE PTR [edx-0x16eda255],ah
  40d9c1:	fbld   TBYTE PTR [ebp-0x71aabee7]
  40d9c7:	in     al,dx
  40d9c8:	mov    ebx,0x4c87295f
  40d9cd:	xchg   DWORD PTR [esi+0x39],edi
  40d9d0:	push   ds
  40d9d1:	cmp    bh,BYTE PTR [ebp+0xc4c68d7]
  40d9d7:	and    eax,0x72355767
  40d9dc:	mov    eax,ds:0xc4db79cd
  40d9e1:	xchg   esi,eax
  40d9e2:	jo     0x40d9ad
  40d9e4:	cmp    DWORD PTR [esi-0x2f],edx
  40d9e7:	outs   dx,BYTE PTR ds:[esi]
  40d9e8:	cmp    cl,BYTE PTR ds:0xa60c60ce
  40d9ee:	and    BYTE PTR [ecx],cl
  40d9f0:	inc    edx
  40d9f1:	mov    ds:0x2343522e,eax
  40d9f6:	push   ds
  40d9f7:	push   ebp
  40d9f8:	or     ecx,DWORD PTR ds:0x5e2d3704
  40d9fe:	jmp    0xc105a422
  40da03:	jl     0x40da77
  40da05:	sysenter 
  40da07:	push   ebp
  40da08:	stos   DWORD PTR es:[edi],eax
  40da09:	ret    
  40da0a:	fs repz add eax,0x996a347b
  40da11:	push   eax
  40da12:	jmp    0x34a8be87
  40da17:	loopne 0x40d9e3
  40da19:	dec    edx
  40da1a:	push   ebx
  40da1b:	iret   
  40da1c:	inc    DWORD PTR [edx+ebp*4-0x5a45ae0d]
  40da23:	gs dec dl
  40da26:	enter  0x97b5,0xc3
  40da2a:	loopne 0x40d9cc
  40da2c:	mov    esi,0xdc143d2f
  40da31:	mov    ebp,0xcd0279e6
  40da36:	add    eax,0xe13d0098
  40da3b:	into   
  40da3c:	retf   0x7c33
  40da3f:	(bad)  
  40da40:	das    
  40da41:	sub    eax,0xca6dc76b
  40da46:	adc    al,0xc2
  40da48:	fist   DWORD PTR [eax-0x2c]
  40da4b:	mov    al,0xb3
  40da4d:	mov    esi,0x64c1e6f
  40da52:	pop    edi
  40da53:	mov    DWORD PTR ds:0x7e7cad87,ecx
  40da59:	fwait
  40da5a:	out    0xc5,al
  40da5c:	ret    
  40da5d:	enter  0x7dbb,0x3b
  40da61:	arpl   WORD PTR ds:0xe005ced3,bx
  40da67:	retf   0xe264
  40da6a:	cld    
  40da6b:	cmp    bh,BYTE PTR [eax]
  40da6d:	test   al,0x18
  40da6f:	mov    eax,ds:0x19c10308
  40da74:	jge    0x40dadf
  40da76:	lods   eax,DWORD PTR ds:[esi]
  40da77:	retf   0x413
  40da7a:	xchg   esp,eax
  40da7b:	xor    edi,DWORD PTR [edx-0xe]
  40da7e:	call   0xda9b:0xe9e3512e
  40da85:	test   al,0x51
  40da87:	xor    bl,BYTE PTR [ecx+ebp*8+0x4492c3e]
  40da8e:	pop    esp
  40da8f:	addr16 and eax,0x6435424e
  40da95:	push   cs
  40da96:	mov    ds:0xc2eaa013,eax
  40da9b:	adc    eax,0xd36a56d7
  40daa0:	dec    ebp
  40daa1:	push   ecx
  40daa2:	jb     0x40da42
  40daa4:	das    
  40daa5:	ins    DWORD PTR es:[edi],dx
  40daa6:	hlt    
  40daa7:	sub    eax,0x95e5a617
  40daac:	mov    ecx,0xd8edbf8f
  40dab1:	(bad)  
  40dab2:	cld    
  40dab3:	fnstsw ax
  40dab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab6:	push   ebp
  40dab7:	cmp    dh,BYTE PTR [edi-0x68be9798]
  40dabd:	inc    ecx
  40dabe:	sahf   
  40dabf:	pop    ebx
  40dac0:	stos   DWORD PTR es:[edi],eax
  40dac1:	and    BYTE PTR [ecx-0x2],0xfa
  40dac5:	jne    0x40dad1
  40dac7:	cld    
  40dac8:	or     BYTE PTR [eax+0x475de717],al
  40dace:	push   ss
  40dacf:	xchg   edx,eax
  40dad0:	xchg   BYTE PTR [edx-0x5a1b2a1],dl
  40dad6:	mov    dl,0x6
  40dad8:	(bad)
  40dadd:	mov    dl,BYTE PTR [ebx]
  40dadf:	or     esi,DWORD PTR [esp+edi*4-0x686d4685]
  40dae6:	stos   DWORD PTR es:[edi],eax
  40dae7:	jns    0x40daca
  40dae9:	xor    eax,0xa5a3ff5a
  40daee:	sahf   
  40daef:	pop    edi
  40daf0:	or     eax,0xc6d6aca6
  40daf5:	xor    al,0x43
  40daf7:	je     0x40db0e
  40daf9:	mov    al,0xfc
  40dafb:	fbstp  TBYTE PTR [esp+eiz*4-0x6e1f66e8]
  40db02:	sub    BYTE PTR [esi-0x73],dh
  40db05:	lds    ebx,FWORD PTR [esi+0x45]
  40db08:	popf   
  40db09:	push   ds
  40db0a:	lds    edx,FWORD PTR [eax+ebx*2]
  40db0d:	shl    DWORD PTR [edi+eax*1],cl
  40db10:	mov    ecx,ebx
  40db12:	ficomp WORD PTR [esi+0x7a]
  40db15:	pop    edx
  40db16:	dec    esp
  40db17:	push   esp
  40db18:	loop   0x40da9b
  40db1a:	scas   al,BYTE PTR es:[edi]
  40db1b:	fisttp WORD PTR ds:[ecx]
  40db1e:	aas    
  40db1f:	iret   
  40db20:	ror    BYTE PTR [ebp+0x50],cl
  40db23:	push   0xc944ddc6
  40db28:	cmp    DWORD PTR [ecx-0x76],ebx
  40db2b:	and    cl,BYTE PTR [esi-0x70086244]
  40db31:	nop
  40db32:	xchg   esp,eax
  40db33:	push   eax
  40db34:	fsin   
  40db36:	dec    ecx
  40db37:	rcl    DWORD PTR [edx],0x36
  40db3a:	pop    ebp
  40db3b:	imul   eax,DWORD PTR [eax+0x17],0x8aab9080
  40db42:	icebp  
  40db43:	mov    edx,0x7bb5538c
  40db48:	mov    ecx,0xf0d11888
  40db4d:	jns    0x40dbbf
  40db4f:	and    ch,cl
  40db51:	jp     0x40dae5
  40db53:	outs   dx,BYTE PTR ds:[esi]
  40db54:	dec    esp
  40db55:	test   al,0xb
  40db57:	(bad)  
  40db58:	retf   
  40db59:	popf   
  40db5a:	aaa    
  40db5b:	stos   DWORD PTR es:[edi],eax
  40db5c:	daa    
  40db5d:	jle    0x40dba9
  40db5f:	sbb    BYTE PTR [ebp-0x612bf800],dh
  40db65:	dec    esi
  40db66:	sub    eax,0x2278ee49
  40db6b:	mov    ecx,0xedecf23a
  40db70:	in     al,dx
  40db71:	fs cli 
  40db73:	jle    0x40db27
  40db75:	or     eax,0x2a7bae34
  40db7a:	mov    cl,0x7b
  40db7c:	dec    ebx
  40db7d:	jne    0x40db97
  40db7f:	into   
  40db80:	add    esi,DWORD PTR [eax-0x18]
  40db83:	pop    ds
  40db84:	sub    dl,dl
  40db86:	push   esi
  40db87:	mov    eax,0xa559bad
  40db8c:	scas   al,BYTE PTR es:[edi]
  40db8d:	mov    edx,0xcbd4e1c8
  40db92:	(bad)  
  40db93:	out    0xdf,al
  40db95:	mov    bl,0x90
  40db97:	dec    esi
  40db98:	lock xor DWORD PTR [edi-0x6a5c550b],ebx
  40db9f:	push   0x7e
  40dba1:	mov    ch,0x6c
  40dba3:	in     eax,dx
  40dba4:	scas   eax,DWORD PTR es:[edi]
  40dba5:	out    0xdf,al
  40dba7:	mov    cs,WORD PTR [edx+0x5e2d9978]
  40dbad:	leave  
  40dbae:	or     ch,BYTE PTR [ebp-0x7e32f116]
  40dbb4:	xchg   ebp,eax
  40dbb5:	add    DWORD PTR [eax],0xffffffcc
  40dbb8:	jmp    0x9521eaea
  40dbbd:	imul   esp,DWORD PTR [eax+0x57],0x73
  40dbc1:	popf   
  40dbc2:	adc    ch,dl
  40dbc4:	jae    0x40db60
  40dbc6:	push   0xdcc97f11
  40dbcb:	push   edx
  40dbcc:	inc    ebx
  40dbcd:	inc    ecx
  40dbce:	mov    esp,0x4f4d9dc8
  40dbd3:	aas    
  40dbd4:	repz mov bl,0x20
  40dbd7:	into   
  40dbd8:	stc    
  40dbd9:	sahf   
  40dbda:	jbe    0x40dc09
  40dbdc:	sbb    al,BYTE PTR [edi+0x5d]
  40dbdf:	and    al,0x8d
  40dbe1:	fs xor ah,cl
  40dbe4:	sbb    al,0xef
  40dbe6:	sub    eax,0x4e8f9784
  40dbeb:	mov    dl,0x15
  40dbed:	imul   DWORD PTR [ecx]
  40dbef:	add    al,BYTE PTR [ebp+0x1c367f38]
  40dbf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf6:	pushf  
  40dbf7:	sbb    bl,BYTE PTR [ebp-0x4b]
  40dbfa:	icebp  
  40dbfb:	fld    DWORD PTR [ebp-0x8]
  40dbfe:	mov    ss,WORD PTR [ebx-0x2a8d133c]
  40dc04:	jne    0x40dbcf
  40dc06:	xchg   dh,bh
  40dc08:	loopne 0x40dc0c
  40dc0a:	or     DWORD PTR [ebx+0x6953fccc],edx
  40dc10:	mov    WORD PTR [ecx-0x22],?
  40dc13:	ss into 
  40dc15:	fisub  DWORD PTR [ecx]
  40dc17:	pop    ebx
  40dc18:	jae    0x40db9a
  40dc1a:	dec    edx
  40dc1b:	and    ebp,edx
  40dc1d:	dec    ebx
  40dc1e:	nop
  40dc1f:	adc    ah,BYTE PTR [ecx-0x16]
  40dc22:	mov    al,ds:0x950c27c
  40dc27:	je     0x40dbae
  40dc29:	xchg   ecx,eax
  40dc2a:	test   DWORD PTR [ecx-0x44090b52],eax
  40dc30:	enter  0xabd9,0xdb
  40dc34:	sub    BYTE PTR [ebx+0x61],0x2e
  40dc38:	mov    bl,0xdc
  40dc3a:	sysret 
  40dc3c:	imul   ebx,DWORD PTR [ebx+0x4],0x5be6ba91
  40dc43:	push   esi
  40dc44:	mov    al,fs:0x688082a7
  40dc4a:	(bad)  
  40dc4b:	pop    ecx
  40dc4c:	or     DWORD PTR [eax+ebp*2-0x381da352],edx
  40dc53:	sub    al,0xe8
  40dc55:	add    BYTE PTR [ecx+0x16],dh
  40dc58:	jecxz  0x40dc1c
  40dc5a:	push   esi
  40dc5b:	sbb    cl,BYTE PTR [ebp+0x3f]
  40dc5e:	jmp    0x40dc08
  40dc60:	repnz mov al,0x4c
  40dc63:	out    0x5c,eax
  40dc65:	ins    BYTE PTR es:[edi],dx
  40dc66:	cmp    eax,0x38b64c18
  40dc6b:	cmp    ecx,DWORD PTR [ebx+0x76de12e0]
  40dc71:	sub    bl,BYTE PTR [ebx]
  40dc73:	div    BYTE PTR [esi]
  40dc75:	xor    edi,eax
  40dc77:	clc    
  40dc78:	fs jp  0x40dc13
  40dc7b:	call   0x70c1:0xc71da0d1
  40dc82:	cdq    
  40dc83:	sahf   
  40dc84:	dec    ecx
  40dc85:	mov    edi,0x8e6f63a0
  40dc8a:	lock std 
  40dc8c:	jb     0x40dcf2
  40dc8e:	jg     0x40dcf8
  40dc90:	mov    ebp,0xab8f1f9a
  40dc95:	iret   
  40dc96:	mov    eax,0x95deef09
  40dc9b:	lds    edi,FWORD PTR ds:0x79097b2a
  40dca1:	dec    ecx
  40dca2:	xor    al,0x78
  40dca4:	bnd ss jb 0x40dcc4
  40dca8:	xlat   BYTE PTR ds:[ebx]
  40dca9:	or     eax,0xbd1dfe80
  40dcae:	mov    ecx,0xa165e0bf
  40dcb4:	je     0x40dcc5
  40dcb6:	dec    esi
  40dcb7:	fcomp  QWORD PTR [edi]
  40dcb9:	neg    ebp
  40dcbb:	or     BYTE PTR [edi-0x70],ch
  40dcbe:	in     eax,dx
  40dcbf:	loope  0x40dc90
  40dcc1:	lock xor eax,0x9c6ded6b
  40dcc7:	shr    DWORD PTR [edi+0xc],1
  40dcca:	sar    BYTE PTR es:[ecx],cl
  40dccd:	jne    0x40dcfb
  40dccf:	inc    esp
  40dcd0:	adc    al,0x4c
  40dcd2:	xor    dh,al
  40dcd4:	dec    ebp
  40dcd5:	out    0xcb,eax
  40dcd7:	push   ss
  40dcd8:	xor    DWORD PTR [edi],ebx
  40dcda:	mov    al,ds:0x8e47a66c
  40dcdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce0:	add    ecx,ecx
  40dce2:	into   
  40dce3:	inc    ecx
  40dce4:	test   eax,0xd62f7c2f
  40dce9:	in     eax,0x3d
  40dceb:	inc    edi
  40dcec:	test   DWORD PTR [ebp+0x12],edx
  40dcef:	pop    ss
  40dcf0:	mov    esp,0xb85ef585
  40dcf5:	ret    0x4a10
  40dcf8:	in     eax,0x7e
  40dcfa:	mov    ebp,DWORD PTR [ebp+0x2e]
  40dcfd:	icebp  
  40dcfe:	pop    ss
  40dcff:	dec    eax
  40dd00:	retf   
  40dd01:	popf   
  40dd02:	mov    cl,0x34
  40dd04:	mov    edx,0x112f8fd4
  40dd09:	and    DWORD PTR [ecx],0xffffffb4
  40dd0c:	and    DWORD PTR [ecx+0x14],ecx
  40dd0f:	aas    
  40dd10:	mov    ds:0x4ccf33fa,eax
  40dd15:	in     al,0xde
  40dd17:	push   ebp
  40dd18:	push   cs
  40dd19:	out    0x9,al
  40dd1b:	das    
  40dd1c:	ret    
  40dd1d:	lods   eax,DWORD PTR ds:[esi]
  40dd1e:	xchg   edx,eax
  40dd1f:	dec    ebx
  40dd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd21:	out    0xa2,al
  40dd23:	and    edx,DWORD PTR [eax-0x2ea1bd65]
  40dd29:	mov    esp,0x5afbad4
  40dd2e:	repnz pop es
  40dd30:	adc    edx,DWORD PTR [ecx]
  40dd32:	pop    ebp
  40dd33:	jmp    0xe951:0xf750b40f
  40dd3a:	mov    ds:0x8901ba27,eax
  40dd3f:	mov    ch,cl
  40dd41:	mov    ebp,0xce6803
  40dd46:	lea    ecx,[eax]
  40dd48:	clc    
  40dd49:	lds    eax,FWORD PTR [ecx+0x68ae4c70]
  40dd4f:	test   al,0x88
  40dd51:	push   cs
  40dd52:	or     al,0x7e
  40dd54:	jbe    0x40dd18
  40dd56:	shr    dh,cl
  40dd58:	pop    es
  40dd59:	ret    0x4461
  40dd5c:	or     DWORD PTR [esi+ebx*2+0x62f451d],eax
  40dd63:	pop    edi
  40dd64:	stos   BYTE PTR es:[edi],al
  40dd65:	dec    ebp
  40dd66:	outs   dx,DWORD PTR ds:[esi]
  40dd67:	in     al,dx
  40dd68:	xor    BYTE PTR [edx-0x37eadf3f],0x14
  40dd6f:	dec    esp
  40dd70:	call   0xad32:0x7add8233
  40dd77:	ret    0xf2be
  40dd7a:	jmp    0x781031de
  40dd7f:	and    BYTE PTR [esi-0x58],0x25
  40dd83:	pop    esp
  40dd84:	adc    edi,ebx
  40dd86:	mov    ebp,edx
  40dd88:	push   es
  40dd89:	cmp    al,0x93
  40dd8b:	xor    ch,dh
  40dd8d:	jo     0x40ddc8
  40dd8f:	adc    BYTE PTR [ebx],al
  40dd91:	shl    DWORD PTR [ecx-0x24],0xf
  40dd95:	outs   dx,BYTE PTR ds:[esi]
  40dd96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd97:	cmp    DWORD PTR [ecx-0x31],0x2e
  40dd9b:	jle    0x40ddf4
  40dd9d:	mov    bl,0x90
  40dd9f:	imul   esi
  40dda1:	jno    0x40ddd8
  40dda3:	adc    al,BYTE PTR [esi]
  40dda5:	dec    esi
  40dda6:	sub    BYTE PTR [eax],ah
  40dda8:	jne    0x40dd4a
  40ddaa:	adc    DWORD PTR [ecx-0x47e45d38],edx
  40ddb0:	retf   0x3d88
  40ddb3:	add    ah,BYTE PTR [esi+0x77]
  40ddb6:	rcr    DWORD PTR [ebx+0x7c],1
  40ddb9:	cmc    
  40ddba:	push   0xdb8db498
  40ddbf:	je     0x40ddc4
  40ddc1:	test   eax,0x77c3aff2
  40ddc6:	repz sahf 
  40ddc8:	dec    esp
  40ddc9:	js     0x40dd54
  40ddcb:	(bad)  
  40ddcd:	add    al,0x46
  40ddcf:	adc    al,0xe9
  40ddd1:	adc    DWORD PTR [edx+ebx*1+0x66],esp
  40ddd5:	sbb    eax,0x73693538
  40ddda:	cmc    
  40dddb:	outs   dx,BYTE PTR ds:[esi]
  40dddc:	out    dx,eax
  40dddd:	or     ah,BYTE PTR [esp+edx*8+0x61]
  40dde1:	add    DWORD PTR [eax],0x20
  40dde4:	pop    edi
  40dde5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dde6:	add    eax,0x18505031
  40ddeb:	test   ebp,eax
  40dded:	sahf   
  40ddee:	sar    al,1
  40ddf0:	mov    esi,0x6a8f1858
  40ddf5:	scas   eax,DWORD PTR es:[edi]
  40ddf6:	mov    cl,0xeb
  40ddf8:	fdiv   QWORD PTR [edx-0x1c]
  40ddfb:	sbb    DWORD PTR [edx+0x5ffd93b3],esp
  40de01:	gs mov bh,0xe1
  40de04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de05:	mov    dh,0xc6
  40de07:	dec    ebx
  40de08:	(bad)  
  40de09:	jp     0x40ddad
  40de0b:	nop
  40de0c:	dec    edi
  40de0d:	inc    eax
  40de0e:	loopne 0x40ddb2
  40de10:	js     0x40de3c
  40de12:	inc    esp
  40de13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de14:	pop    ds
  40de15:	jae    0x40de7e
  40de17:	daa    
  40de18:	iret   
  40de19:	mov    eax,0xcf3f1afd
  40de1e:	ins    BYTE PTR es:[edi],dx
  40de1f:	cmc    
  40de20:	aad    0xd9
  40de22:	xchg   ebp,eax
  40de23:	or     esp,edx
  40de25:	icebp  
  40de26:	popa   
  40de27:	push   ebp
  40de28:	xor    DWORD PTR [esp+esi*4-0x1d8371fc],esp
  40de2f:	nop    DWORD PTR [ecx+0x4435c2e]
  40de36:	xchg   esp,eax
  40de37:	repz into 
  40de39:	cmp    al,0x4
  40de3b:	hlt    
  40de3c:	es mov ebp,0x944ebcfa
  40de42:	sahf   
  40de43:	add    dh,BYTE PTR ds:0xf49068c5
  40de49:	addr16 push ecx
  40de4b:	shl    BYTE PTR [ecx+esi*1-0x475e0c4f],0xfa
  40de53:	mov    cl,0x71
  40de55:	shr    BYTE PTR [ebx+eax*4+0x54],1
  40de59:	fcomp  QWORD PTR [ebp+0x7]
  40de5c:	pop    esi
  40de5d:	aam    0xd0
  40de5f:	jnp    0x40de90
  40de61:	hlt    
  40de62:	xchg   ebp,eax
  40de63:	(bad)  
  40de64:	es and al,0xa2
  40de67:	lods   eax,DWORD PTR ds:[esi]
  40de68:	jle    0x40de21
  40de6a:	cmp    bl,BYTE PTR [ebx]
  40de6c:	leave  
  40de6d:	mov    dl,0x45
  40de6f:	cmp    ebx,ecx
  40de71:	imul   ebp,DWORD PTR [ebx-0x210df384],0x9f087cd3
  40de7b:	xor    DWORD PTR [ebx-0x49],0x76
  40de7f:	repnz add al,0x3d
  40de82:	js     0x40de68
  40de84:	loopne 0x40df02
  40de86:	retf   0x528
  40de89:	inc    esp
  40de8a:	add    cl,bl
  40de8c:	adc    eax,0xa31ff3e0
  40de91:	xlat   BYTE PTR ds:[ebx]
  40de92:	add    eax,0xe4bc4819
  40de97:	dec    edx
  40de98:	ins    BYTE PTR es:[edi],dx
  40de99:	jge    0x40ded7
  40de9b:	into   
  40de9c:	mov    ah,0x64
  40de9e:	or     al,0x65
  40dea0:	aad    0x61
  40dea2:	mov    bl,0x69
  40dea4:	aaa    
  40dea5:	mov    DWORD PTR [ebp-0x2f],ebp
  40dea8:	out    dx,eax
  40dea9:	xor    eax,0xc4d7755e
  40deae:	sub    cl,0x0
  40deb1:	ret    0x65ab
  40deb4:	jecxz  0x40deb1
  40deb6:	jae    0x40df04
  40deb8:	pop    esi
  40deb9:	cld    
  40deba:	inc    ebp
  40debb:	or     edx,edi
  40debd:	stc    
  40debe:	into   
  40debf:	retf   0x7bde
  40dec2:	pusha  
  40dec3:	out    0x5d,eax
  40dec5:	test   DWORD PTR [edi],ebx
  40dec7:	dec    ebp
  40dec8:	mov    edi,0x2f4645b6
  40decd:	mov    BYTE PTR [ebx-0x1261078],bh
  40ded3:	xchg   edx,eax
  40ded4:	pushf  
  40ded5:	mov    ecx,0x6fd58021
  40deda:	xor    ecx,DWORD PTR [ecx+0x2bebc051]
  40dee0:	dec    edi
  40dee1:	lds    ebp,FWORD PTR [ebx]
  40dee3:	mov    ebx,0x7fc807b4
  40dee8:	or     BYTE PTR [ebp+0x7d],0x18
  40deec:	int    0x4c
  40deee:	pusha  
  40deef:	inc    esi
  40def0:	push   edx
  40def1:	lds    edi,FWORD PTR [eax+0x7d]
  40def4:	js     0x40ded3
  40def6:	mov    DWORD PTR [ecx+eax*2+0x535a9209],esi
  40defd:	in     eax,dx
  40defe:	outs   dx,DWORD PTR ds:[esi]
  40deff:	ds mov ebx,ecx
  40df02:	jae    0x40df03
  40df04:	ret    0xc6c9
  40df07:	add    bl,BYTE PTR [esi-0x52]
  40df0a:	rcl    DWORD PTR [edx-0x31c21776],cl
  40df10:	test   eax,0x3f9a40db
  40df15:	loopne 0x40ded0
  40df17:	rcl    BYTE PTR [edi-0x64799e7a],0x67
  40df1e:	scas   eax,DWORD PTR es:[edi]
  40df1f:	lods   eax,DWORD PTR ds:[esi]
  40df20:	into   
  40df21:	mov    BYTE PTR [edi],dl
  40df23:	call   0x1d09f3ca
  40df28:	addr16 xchg edx,ecx
  40df2b:	int    0x4c
  40df2d:	xchg   edi,eax
  40df2e:	test   DWORD PTR [ecx],ebx
  40df30:	lahf   
  40df31:	ds je  0x40df71
  40df34:	sub    ebx,ebx
  40df36:	das    
  40df37:	push   esp
  40df38:	repnz xchg esi,eax
  40df3a:	sti    
  40df3b:	call   0xcfb0fdf
  40df40:	adc    eax,0xd4184ad2
  40df45:	sbb    bl,BYTE PTR [ecx+esi*1+0x51]
  40df49:	pusha  
  40df4a:	jmp    0x7d587829
  40df4f:	mov    dh,dl
  40df51:	shl    BYTE PTR [ebx],1
  40df53:	les    esi,FWORD PTR [eax+0x73cf3b04]
  40df59:	mov    edi,0xe417e429
  40df5e:	xchg   ebx,eax
  40df5f:	adc    BYTE PTR [ecx+0x5eb20f0f],0x21
  40df66:	(bad)
  40df6a:	sbb    eax,0x9a113211
  40df6f:	fimul  DWORD PTR [edx+eax*2+0x636ea770]
  40df76:	and    esi,DWORD PTR [edi+0x4249c1cd]
  40df7c:	push   0x53a6f356
  40df81:	call   0x7c10:0xd8939c4f
  40df88:	fdivr  QWORD PTR [ebx+0x1d]
  40df8b:	retf   
  40df8c:	not    DWORD PTR [esi-0x53eed55f]
  40df92:	mov    edi,0x33c95226
  40df97:	xchg   edx,eax
  40df98:	mov    dl,0x4e
  40df9a:	mov    ah,0x99
  40df9c:	shl    BYTE PTR [ebp-0x3d027314],1
  40dfa2:	inc    esi
  40dfa3:	stc    
  40dfa4:	jl     0x40df55
  40dfa6:	jle    0x40dfc8
  40dfa8:	jmp    0x40dfb5
  40dfaa:	pop    edi
  40dfab:	loop   0x40df4d
  40dfad:	mov    bl,0x4a
  40dfaf:	pop    ebx
  40dfb0:	jne    0x40df86
  40dfb2:	call   0x8cd52f5
  40dfb7:	ds lahf 
  40dfb9:	adc    eax,0x60539394
  40dfbe:	push   edx
  40dfbf:	push   eax
  40dfc0:	add    eax,0x7858fd00
  40dfc5:	gs dec esi
  40dfc7:	out    dx,eax
  40dfc8:	mov    WORD PTR [edi],?
  40dfca:	add    al,BYTE PTR gs:[ecx+0x15]
  40dfce:	test   eax,0xd91e3a39
  40dfd3:	pop    ebx
  40dfd4:	cdq    
  40dfd5:	push   edi
  40dfd6:	sbb    eax,edx
  40dfd8:	push   ebp
  40dfd9:	mov    dl,al
  40dfdb:	mov    ebx,cs
  40dfdd:	arpl   ax,cx
  40dfdf:	inc    eax
  40dfe0:	xor    cl,al
  40dfe2:	fmul   DWORD PTR [ecx-0x29]
  40dfe5:	rcl    DWORD PTR [edx+ebx*1-0x70],0x3a
  40dfea:	inc    ebx
  40dfeb:	or     al,0xe7
  40dfed:	int    0xa2
  40dfef:	icebp  
  40dff0:	pop    ebp
  40dff1:	jno    0x40e014
  40dff3:	hlt    
  40dff4:	cmp    al,0x94
  40dff6:	or     al,0x74
  40dff8:	inc    esp
  40dff9:	cmp    DWORD PTR [edi-0x18],edx
  40dffc:	sub    ecx,DWORD PTR [esi+0x40bfbf84]
  40e002:	mov    edx,0xe9295a38
  40e007:	call   0x9a0bd5cf
  40e00c:	test   DWORD PTR ds:0x2a42e27e,edi
  40e012:	push   esp
  40e013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e014:	or     edi,DWORD PTR [ebx-0x73]
  40e017:	cs mov ebx,0x4ac88599
  40e01d:	add    DWORD PTR [ecx-0x50],edx
  40e020:	mov    esi,0x211bccd
  40e025:	add    DWORD PTR [edx+esi*4-0x4d4bc5e7],0x315faa90
  40e030:	das    
  40e031:	cld    
  40e032:	inc    esp
  40e033:	(bad)  
  40e034:	popa   
  40e035:	call   0xd40d:0x6a0eb1be
  40e03c:	sub    DWORD PTR [edi-0x6c],esp
  40e03f:	arpl   WORD PTR [ebx],bp
  40e041:	add    DWORD PTR [esi],ebx
  40e043:	mov    cl,0x44
  40e045:	div    BYTE PTR [esi]
  40e047:	pushf  
  40e048:	inc    ebx
  40e049:	or     al,0xc
  40e04b:	xchg   cl,bh
  40e04d:	mov    esp,0x4ee81c57
  40e052:	call   0x64d2:0x66905103
  40e059:	call   0xe493d802
  40e05e:	mov    WORD PTR [eax-0x69],fs
  40e061:	icebp  
  40e062:	fistp  DWORD PTR [esi]
  40e064:	rcl    DWORD PTR [edx-0x4f],1
  40e067:	cmc    
  40e068:	pop    esi
  40e069:	stos   BYTE PTR es:[edi],al
  40e06a:	jl     0x40e06f
  40e06c:	int    0x6a
  40e06e:	sbb    BYTE PTR [ebp-0x57c507df],dl
  40e074:	xor    bl,BYTE PTR [ebx]
  40e076:	xchg   ebx,eax
  40e077:	in     al,0x77
  40e079:	lea    edi,ds:0x55fce56c
  40e07f:	(bad)  
  40e082:	push   edi
  40e083:	push   edx
  40e084:	jb     0x40e079
  40e086:	fld    DWORD PTR [edx]
  40e088:	adc    BYTE PTR [ecx],dh
  40e08a:	call   0xa139:0x8cbe2da6
  40e091:	hlt    
  40e092:	(bad)  
  40e093:	out    0xf8,al
  40e095:	cmp    esp,edi
  40e097:	lods   al,BYTE PTR ds:[esi]
  40e098:	ret    0x999f
  40e09b:	dec    edx
  40e09c:	jbe    0x40e032
  40e09e:	cld    
  40e09f:	mov    esi,0xa037c785
  40e0a4:	in     al,0x46
  40e0a6:	jecxz  0x40e0e9
  40e0a8:	leave  
  40e0a9:	dec    esi
  40e0aa:	push   es
  40e0ab:	inc    ebp
  40e0ac:	dec    eax
  40e0ad:	pop    es
  40e0ae:	push   ss
  40e0af:	pushf  
  40e0b0:	repnz popf 
  40e0b2:	xor    dl,bl
  40e0b4:	cmc    
  40e0b5:	in     eax,0x1d
  40e0b7:	and    cl,BYTE PTR [ebp-0x1e]
  40e0ba:	cs sahf 
  40e0bc:	inc    esp
  40e0bd:	shl    ebp,0x82
  40e0c0:	lods   al,BYTE PTR ds:[esi]
  40e0c1:	xchg   ebx,eax
  40e0c2:	cmp    DWORD PTR [ebp+0x1e],0x6e
  40e0c6:	pop    ecx
  40e0c7:	sub    eax,0xe6378364
  40e0cc:	rcr    esi,cl
  40e0ce:	mov    bh,0x52
  40e0d0:	stc    
  40e0d1:	inc    edi
  40e0d2:	retf   
  40e0d3:	sti    
  40e0d4:	xor    al,0xe
  40e0d6:	popf   
  40e0d7:	cdq    
  40e0d8:	dec    esi
  40e0d9:	inc    eax
  40e0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0db:	xor    BYTE PTR [esi+0x72],bh
  40e0de:	cmp    ebx,DWORD PTR [eax+0x6449b88f]
  40e0e4:	or     dl,cl
  40e0e6:	ror    DWORD PTR [edi+0x1c],cl
  40e0e9:	mov    cl,0x9d
  40e0eb:	push   eax
  40e0ec:	xchg   esi,eax
  40e0ed:	inc    esi
  40e0ee:	in     al,dx
  40e0ef:	das    
  40e0f0:	pop    eax
  40e0f1:	stc    
  40e0f2:	imul   eax,DWORD PTR [eax+0x61745651],0x86bc0c91
  40e0fc:	adc    ebp,DWORD PTR [esi-0x68]
  40e0ff:	jp     0x40e095
  40e101:	xchg   esp,eax
  40e102:	and    eax,0x3452a34d
  40e107:	push   edx
  40e108:	cmp    DWORD PTR [edi],0xa0e04f2f
  40e10e:	dec    edx
  40e10f:	pop    ebp
  40e110:	gs pushf 
  40e112:	stos   DWORD PTR es:[edi],eax
  40e113:	pop    DWORD PTR [edi]
  40e115:	jg     0x40e161
  40e117:	addr16 pop eax
  40e119:	cmp    DWORD PTR [esi+0xd],eax
  40e11c:	in     al,dx
  40e11d:	jno    0x40e19e
  40e11f:	and    al,0x40
  40e121:	addr16 jne 0x40e150
  40e124:	xor    BYTE PTR [ecx+edi*1+0x7f],ah
  40e128:	je     0x40e188
  40e12a:	rcl    DWORD PTR [edx-0x2eababbb],0xf1
  40e131:	cmp    eax,0x74cd6576
  40e136:	sub    ecx,ecx
  40e138:	fwait
  40e139:	out    dx,eax
  40e13a:	pop    edi
  40e13b:	adc    al,0xe2
  40e13d:	scas   eax,DWORD PTR es:[edi]
  40e13e:	jmp    0x40e150
  40e140:	outs   dx,BYTE PTR ds:[esi]
  40e141:	xor    bh,BYTE PTR [eax]
  40e143:	mov    ds:0x257d696a,al
  40e148:	mov    cl,0x85
  40e14a:	cmc    
  40e14b:	jmp    0x80e6:0xaee8c506
  40e152:	(bad)  
  40e153:	in     al,0xab
  40e155:	and    eax,0xbd840311
  40e15a:	or     DWORD PTR [ecx+0x20919a7c],0x56
  40e161:	ja     0x40e0fa
  40e163:	(bad)  
  40e164:	in     eax,dx
  40e165:	mov    ds:0x7b6d54d5,al
  40e16a:	fst    DWORD PTR [ebp-0x70c10947]
  40e170:	jbe    0x40e1c9
  40e172:	je     0x40e1c3
  40e174:	or     al,0x6a
  40e176:	inc    BYTE PTR [edi]
  40e178:	jle    0x40e1b2
  40e17a:	add    ebx,DWORD PTR [esi-0x39f3d611]
  40e180:	adc    edx,DWORD PTR [edi]
  40e182:	daa    
  40e183:	xchg   edx,eax
  40e184:	fwait
  40e185:	idiv   BYTE PTR [ebp+edx*4+0x3f62f630]
  40e18c:	(bad)  
  40e18d:	call   0x33042e9c
  40e192:	jo     0x40e143
  40e194:	in     al,0x32
  40e196:	xor    BYTE PTR [edx],bl
  40e198:	push   ebp
  40e199:	lock push cs
  40e19b:	(bad)  
  40e19c:	(bad)  
  40e19d:	and    BYTE PTR [ecx-0x1f5bcd84],bh
  40e1a3:	call   FWORD PTR [esi]
  40e1a5:	jmp    esp
  40e1a7:	or     BYTE PTR [edi-0x7d2cf9b8],ch
  40e1ad:	(bad)  
  40e1ae:	fadd   st,st(0)
  40e1b0:	repz cwde 
  40e1b2:	clc    
  40e1b3:	fwait
  40e1b4:	xchg   esp,eax
  40e1b5:	popa   
  40e1b6:	iret   
  40e1b7:	adc    eax,0xe6d49019
  40e1bc:	call   0x47cd7c2
  40e1c1:	jecxz  0x40e1be
  40e1c3:	dec    ebp
  40e1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1c5:	out    0x55,al
  40e1c7:	and    al,BYTE PTR [ecx]
  40e1c9:	lahf   
  40e1ca:	mov    esi,0xe43f99b4
  40e1cf:	push   esi
  40e1d0:	sahf   
  40e1d1:	jle    0x40e1d5
  40e1d3:	cmp    DWORD PTR [esi+0x5d051f9d],ecx
  40e1d9:	stos   DWORD PTR es:[edi],eax
  40e1da:	mov    edi,0x9059e3f9
  40e1df:	scas   eax,DWORD PTR es:[edi]
  40e1e0:	into   
  40e1e1:	jnp    0x40e169
  40e1e3:	test   DWORD PTR [esp+ecx*2-0x6dc9b883],0x9d7d57c3
  40e1ee:	loop   0x40e224
  40e1f0:	xor    BYTE PTR [edx+0x66],dh
  40e1f3:	mov    bh,0x95
  40e1f5:	aam    0x0
  40e1f7:	cmp    ch,bh
  40e1f9:	rcr    DWORD PTR [eiz*8+0x1528cf8],cl
  40e200:	test   DWORD PTR [ebx-0x79e97f3a],eax
  40e206:	mov    dl,dl
  40e208:	mov    ebp,0x1aaea7db
  40e20d:	pop    eax
  40e20e:	xchg   esi,eax
  40e20f:	rol    bh,1
  40e211:	xchg   DWORD PTR [eax],esp
  40e213:	pushf  
  40e214:	xchg   esp,eax
  40e215:	add    eax,0x5e6fa450
  40e21a:	je     0x40e1a6
  40e21c:	or     al,0x97
  40e21e:	jmp    0x54d1:0xa9cb5d5b
  40e225:	xlat   BYTE PTR ds:[ebx]
  40e226:	stos   DWORD PTR es:[edi],eax
  40e227:	loopne 0x40e293
  40e229:	mov    bl,0x44
  40e22b:	or     ecx,DWORD PTR [esi-0x3dfa9e0c]
  40e231:	cs jmp 0x6657:0xb734bc5e
  40e239:	(bad)  
  40e23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e23b:	inc    edi
  40e23c:	retf   
  40e23d:	das    
  40e23e:	rol    BYTE PTR [ecx+ebp*8+0x41fe6427],1
  40e245:	stos   DWORD PTR es:[edi],eax
  40e246:	xor    esp,DWORD PTR es:[ebx]
  40e249:	loopne 0x40e201
  40e24b:	(bad)  
  40e24c:	popf   
  40e24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e24e:	xchg   ebp,eax
  40e24f:	and    BYTE PTR [edi+0x166870d9],0xae
  40e256:	(bad)  
  40e257:	in     eax,0x26
  40e259:	loop   0x40e29d
  40e25b:	inc    ecx
  40e25c:	add    BYTE PTR [ebx-0x1],cl
  40e25f:	data16 sbb BYTE PTR [eax],ch
  40e262:	sub    ecx,DWORD PTR [edx-0x5b37517a]
  40e268:	and    eax,DWORD PTR [edi-0x67]
  40e26b:	sbb    BYTE PTR [edx-0x2311977f],al
  40e271:	push   cs
  40e272:	jns    0x40e226
  40e274:	sbb    eax,0xbbb9577b
  40e279:	(bad)  
  40e27a:	push   0xced33c8
  40e27f:	sub    al,0x5d
  40e281:	rol    BYTE PTR [esi+ebp*8],cl
  40e284:	(bad)
  40e287:	mov    ecx,0xd065842d
  40e28c:	sub    BYTE PTR [ebx-0x487741c],ah
  40e292:	js     0x40e2aa
  40e294:	xchg   edx,eax
  40e295:	das    
  40e296:	push   ecx
  40e297:	retf   0x693d
  40e29a:	pushf  
  40e29b:	jp     0x40e2a3
  40e29d:	test   eax,0x1570104c
  40e2a2:	adc    al,0xaf
  40e2a4:	push   ebp
  40e2a5:	and    BYTE PTR [ecx],bl
  40e2a7:	mov    bl,0x51
  40e2a9:	dec    ebp
  40e2aa:	iret   
  40e2ab:	jnp    0x40e24e
  40e2ad:	and    eax,0x94a43abe
  40e2b2:	bound  ecx,QWORD PTR [ebx+esi*1+0xd]
  40e2b6:	xchg   edi,eax
  40e2b7:	adc    bl,BYTE PTR [edx]
  40e2b9:	mov    gs,WORD PTR [esi+0x73]
  40e2bc:	push   esi
  40e2bd:	jmp    0xfa130b0c
  40e2c2:	dec    ebp
  40e2c3:	push   esp
  40e2c4:	idiv   DWORD PTR [edi-0x37]
  40e2c7:	or     eax,0xb89c3207
  40e2cc:	cmp    eax,0x1caab91e
  40e2d1:	jle    0x40e2a5
  40e2d3:	and    DWORD PTR [edx-0x4caefe7a],esp
  40e2d9:	retf   
  40e2da:	js     0x40e317
  40e2dc:	icebp  
  40e2dd:	push   es
  40e2de:	push   ebx
  40e2df:	cwde   
  40e2e0:	adc    cl,cl
  40e2e2:	(bad)  [ecx]
  40e2e4:	js     0x40e314
  40e2e6:	fild   QWORD PTR [edi+ecx*8+0x18de9dbd]
  40e2ed:	adc    eax,0x97c4b24f
  40e2f2:	inc    esp
  40e2f3:	(bad)  
  40e2f4:	jmp    0xfc51d769
  40e2f9:	add    BYTE PTR [ebx],0x85
  40e2fc:	stc    
  40e2fd:	xor    DWORD PTR [eax],edx
  40e2ff:	push   0x7c
  40e301:	dec    ebp
  40e302:	das    
  40e303:	js     0x40e357
  40e305:	xchg   ecx,eax
  40e306:	sahf   
  40e307:	inc    eax
  40e308:	mov    al,ds:0x54eca9a4
  40e30d:	mov    dl,0xd
  40e30f:	mov    dl,0x1f
  40e311:	in     eax,0x64
  40e313:	and    ah,BYTE PTR cs:[ecx-0x3a0e5dd3]
  40e31a:	dec    ebx
  40e31b:	and    BYTE PTR [eax+0x30],0xcd
  40e31f:	int    0x63
  40e321:	dec    ebp
  40e322:	hlt    
  40e323:	dec    edi
  40e324:	push   ecx
  40e325:	mov    ebx,0xb8de55a1
  40e32a:	jge    0x40e2db
  40e32c:	pusha  
  40e32d:	mov    edx,0x66f9815d
  40e332:	xchg   ecx,eax
  40e333:	loopne 0x40e31a
  40e335:	adc    DWORD PTR [ecx+0x64830970],edx
  40e33b:	xchg   edx,eax
  40e33c:	inc    DWORD PTR [eax]
  40e33e:	popf   
  40e33f:	dec    esp
  40e340:	inc    ebx
  40e341:	dec    ebp
  40e342:	inc    ebp
  40e343:	imul   ch
  40e345:	pop    ds
  40e346:	dec    ebp
  40e347:	(bad)  
  40e348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e349:	fmul   DWORD PTR [ecx]
  40e34b:	sub    edx,DWORD PTR [ebx-0x6b]
  40e34e:	dec    edi
  40e34f:	sub    eax,0x1dcbacdf
  40e354:	pusha  
  40e355:	mov    ebx,0xcd0ab98
  40e35a:	and    eax,0x2a85498f
  40e35f:	jmp    0x176bfc99
  40e364:	neg    BYTE PTR [eax]
  40e366:	popa   
  40e367:	cmp    dh,BYTE PTR [edi-0x7f]
  40e36a:	fld    DWORD PTR [ebx-0x497a2c78]
  40e370:	ins    DWORD PTR es:[edi],dx
  40e371:	rcl    BYTE PTR [edx+ebx*8],0x4d
  40e375:	xor    eax,0x844775e2
  40e37a:	xchg   ebp,eax
  40e37b:	test   eax,0xecfa92f9
  40e380:	xchg   ebp,eax
  40e381:	(bad)  
  40e382:	fnstsw WORD PTR [edx]
  40e384:	sub    al,0xee
  40e386:	xchg   edx,eax
  40e387:	and    al,0xf3
  40e389:	or     al,BYTE PTR [esi+0x7b]
  40e38c:	add    DWORD PTR [ecx+0x37],ecx
  40e38f:	test   eax,0x82994f23
  40e394:	mov    ah,0x40
  40e396:	add    al,0xd0
  40e398:	shl    DWORD PTR [ebp-0x34],0x65
  40e39c:	mov    dh,0x4
  40e39e:	js     0x40e3cb
  40e3a0:	cmc    
  40e3a1:	fstp   QWORD PTR [esi+ecx*1-0xcc1ea2b]
  40e3a8:	les    ecx,FWORD PTR [esi]
  40e3aa:	mov    cl,0xc3
  40e3ac:	gs (bad) 
  40e3ae:	je     0x40e40f
  40e3b0:	shl    ah,1
  40e3b2:	pop    ebx
  40e3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3b4:	popf   
  40e3b5:	jmp    0x40e358
  40e3b7:	jne    0x40e3f5
  40e3b9:	pop    ecx
  40e3ba:	repnz inc esi
  40e3bc:	test   BYTE PTR [edi-0x7d961d28],dh
  40e3c2:	iret   
  40e3c3:	bound  ecx,QWORD PTR [ebx-0x14d0cb77]
  40e3c9:	jae    0x40e43f
  40e3cb:	call   0xe1a1:0x2ea7564c
  40e3d2:	js     0x40e36c
  40e3d4:	mov    edi,0xab0384ee
  40e3d9:	and    ebp,DWORD PTR [esi-0x4f0eee67]
  40e3df:	mov    ss,WORD PTR [eax-0x5d7121d4]
  40e3e5:	and    DWORD PTR ds:0x9c1c95c6,edx
  40e3eb:	push   0x7280c7ce
  40e3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f1:	in     eax,0x3d
  40e3f3:	add    al,BYTE PTR [ecx]
  40e3f5:	(bad)  
  40e3f6:	popa   
  40e3f7:	add    DWORD PTR [esi],eax
  40e3f9:	xchg   edx,eax
  40e3fa:	xchg   esp,eax
  40e3fb:	or     BYTE PTR [ebx-0x3e],0x5c
  40e3ff:	dec    ebx
  40e400:	test   BYTE PTR [esi+0x48d63d6a],0xc4
  40e407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e408:	sbb    edx,DWORD PTR [eax+0x1d]
  40e40b:	imul   esp,DWORD PTR fs:[edx],0xffffffb9
  40e40f:	inc    cl
  40e411:	add    ecx,DWORD PTR [ecx]
  40e413:	sahf   
  40e414:	adc    DWORD PTR [esi],esi
  40e416:	fld    TBYTE PTR [eax]
  40e418:	xchg   edi,eax
  40e419:	inc    edx
  40e41a:	arpl   bx,sp
  40e41c:	cmp    al,0x6
  40e41e:	daa    
  40e41f:	mul    DWORD PTR [edx+0x33b3a87f]
  40e425:	push   es
  40e426:	daa    
  40e427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e428:	push   esp
  40e429:	pop    esp
  40e42a:	(bad)  
  40e42b:	rcl    DWORD PTR [edx-0x4c],cl
  40e42e:	jne    0x40e40c
  40e430:	div    DWORD PTR [esi+0x8]
  40e433:	popf   
  40e434:	out    0x18,eax
  40e436:	fnstcw WORD PTR [ebp+0x2bee0b65]
  40e43c:	fnsave [esi]
  40e43e:	xchg   ebx,eax
  40e43f:	or     DWORD PTR [eax+edx*2-0x1d855651],ebx
  40e446:	push   0x8b6a88b9
  40e44b:	dec    esp
  40e44c:	mov    ch,0x1
  40e44e:	adc    eax,0x5c7acb87
  40e453:	sbb    dh,BYTE PTR [eax+ecx*1+0x62]
  40e457:	pop    eax
  40e458:	fcmovnb st,st(0)
  40e45a:	add    DWORD PTR [edx],esi
  40e45c:	and    BYTE PTR [esi+ecx*1-0xbd70517],0x5b
  40e464:	adc    esp,DWORD PTR [ebp+0xf]
  40e467:	retf   0xa8fc
  40e46a:	call   0x5e9d:0x8a7fa08
  40e471:	jns    0x40e491
  40e473:	sub    BYTE PTR [edx-0x2f0887a],cl
  40e479:	push   0xffffffb2
  40e47b:	dec    esi
  40e47c:	fsubr  QWORD PTR [esp+eax*1+0xb]
  40e480:	and    BYTE PTR [edi],al
  40e482:	imul   eax,DWORD PTR [ebx],0xf4b063b
  40e488:	inc    esp
  40e489:	ud2    
  40e48b:	sbb    BYTE PTR [ebx-0x4d],ch
  40e48e:	jb     0x40e4bf
  40e490:	jmpw   0x9dca
  40e494:	ror    edi,1
  40e496:	xor    DWORD PTR [ecx],ebp
  40e498:	dec    ebx
  40e499:	mov    eax,ds:0x71ea6fad
  40e49e:	dec    esi
  40e49f:	lds    ecx,FWORD PTR [eax-0x287427aa]
  40e4a5:	pop    esp
  40e4a6:	fwait
  40e4a7:	out    dx,eax
  40e4a8:	cmp    eax,0x88e66d5c
  40e4ad:	fbstp  TBYTE PTR [ebx-0x59c4705c]
  40e4b3:	retf   
  40e4b4:	lods   eax,DWORD PTR ds:[esi]
  40e4b5:	lea    ebx,[eax]
  40e4b7:	pop    es
  40e4b8:	sbb    ebp,DWORD PTR [edi+0x2e1fa509]
  40e4be:	cmp    BYTE PTR [edi-0x2fdc9c84],cl
  40e4c4:	repz into 
  40e4c6:	jo     0x40e517
  40e4c8:	ja     0x40e4d7
  40e4ca:	mov    edi,0x3fd26ee5
  40e4cf:	pop    ss
  40e4d0:	mov    eax,ds:0x4c5f59d4
  40e4d5:	xchg   esp,ebp
  40e4d7:	scas   al,BYTE PTR es:[edi]
  40e4d8:	adc    eax,0xa3202dcb
  40e4dd:	out    dx,al
  40e4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4df:	mul    WORD PTR [esi+eax*2+0x3c]
  40e4e4:	mov    ch,0xd2
  40e4e6:	sar    DWORD PTR [edi+0x55a947f4],cl
  40e4ec:	or     edi,esi
  40e4ee:	cmp    al,0x13
  40e4f0:	fsubr  st,st(1)
  40e4f2:	pop    ebp
  40e4f3:	jecxz  0x40e4b4
  40e4f5:	inc    esi
  40e4f6:	xor    DWORD PTR [ebx],edx
  40e4f8:	or     DWORD PTR [esi],0x7
  40e4fb:	inc    ecx
  40e4fc:	int3   
  40e4fd:	push   esi
  40e4fe:	les    eax,FWORD PTR [ecx+0x1253dd06]
  40e504:	clc    
  40e505:	inc    eax
  40e506:	inc    edi
  40e507:	test   BYTE PTR [eax],cl
  40e509:	cmp    DWORD PTR [ecx-0x39],esp
  40e50c:	stos   DWORD PTR es:[edi],eax
  40e50d:	and    DWORD PTR [ebx+0x65],esp
  40e510:	sub    esp,DWORD PTR [esp+eax*1]
  40e513:	or     al,0x10
  40e515:	jno    0x40e4d5
  40e517:	mov    ds:0x7509d001,al
  40e51c:	stos   BYTE PTR es:[edi],al
  40e51d:	sahf   
  40e51e:	mov    edi,0x39b3e056
  40e523:	scas   al,BYTE PTR es:[edi]
  40e524:	pop    ecx
  40e525:	nop
  40e526:	sahf   
  40e527:	mov    ebp,0xcfce5bde
  40e52c:	test   al,0x92
  40e52e:	xchg   esp,eax
  40e52f:	(bad)  
  40e530:	test   BYTE PTR [esi+edi*2],0x24
  40e534:	gs scas eax,DWORD PTR es:[edi]
  40e536:	push   esi
  40e537:	adc    DWORD PTR [ebx+0x66],esi
  40e53a:	jne    0x40e506
  40e53c:	adc    BYTE PTR [ecx-0x1040b158],ah
  40e542:	outs   dx,BYTE PTR ds:[esi]
  40e543:	xchg   BYTE PTR [esi+0x77d2b377],al
  40e549:	repz cmp al,0xd0
  40e54c:	mov    ebp,0x8367aaf5
  40e551:	fs pop esp
  40e553:	mov    eax,0x5bc15033
  40e558:	inc    ebx
  40e559:	push   esp
  40e55a:	inc    ebx
  40e55b:	mov    WORD PTR [edi+eax*1],ss
  40e55e:	sbb    ch,cl
  40e560:	mov    DWORD PTR [eax-0x582658a1],0xe699c5dd
  40e56a:	pop    ecx
  40e56b:	inc    edx
  40e56c:	add    dh,bh
  40e56e:	mov    eax,ds:0x88153f4a
  40e573:	push   ss
  40e574:	xchg   edx,eax
  40e575:	hlt    
  40e576:	enter  0x5176,0xb3
  40e57a:	imul   ebp,esi,0xbb8e931e
  40e580:	push   esi
  40e581:	jo     0x40e5ab
  40e583:	cmc    
  40e584:	dec    esi
  40e585:	xchg   ebx,eax
  40e586:	mov    ds:0xc14e7edf,al
  40e58b:	xor    al,0xdc
  40e58d:	sub    al,BYTE PTR [edx]
  40e58f:	inc    esi
  40e590:	push   edx
  40e591:	clc    
  40e592:	repnz (bad) 
  40e594:	shl    cl,1
  40e596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e597:	shl    BYTE PTR [edx],cl
  40e599:	dec    edx
  40e59a:	cmp    al,0xaf
  40e59c:	cmp    eax,0x13f88ffe
  40e5a1:	sub    DWORD PTR [eax],ecx
  40e5a3:	pop    esi
  40e5a4:	pop    esp
  40e5a5:	and    DWORD PTR [ebx+0x7a],eax
  40e5a8:	jmp    0xfdda:0xfb369fd7
  40e5af:	add    esp,DWORD PTR [esi-0x632daab2]
  40e5b5:	arpl   si,di
  40e5b7:	jb     0x40e593
  40e5b9:	or     ebp,esp
  40e5bb:	out    dx,eax
  40e5bc:	mov    edi,0x6bcf8411
  40e5c1:	push   ds
  40e5c2:	xchg   ebp,eax
  40e5c3:	sub    eax,ebx
  40e5c5:	fisubr WORD PTR [edx]
  40e5c7:	push   0x87a88339
  40e5cc:	loope  0x40e5af
  40e5ce:	cli    
  40e5cf:	add    BYTE PTR [esi],dl
  40e5d1:	xchg   edi,eax
  40e5d2:	stc    
  40e5d3:	es retfw 0x9237
  40e5d8:	adc    DWORD PTR [edx+0x13],edx
  40e5db:	push   ecx
  40e5dc:	xor    esi,DWORD PTR [eax-0x35dc3712]
  40e5e2:	pop    ebp
  40e5e3:	(bad)  
  40e5e4:	retf   0x78e5
  40e5e7:	std    
  40e5e8:	add    BYTE PTR [ebx+0x4023fbaa],al
  40e5ee:	sub    eax,0xafa02399
  40e5f3:	or     eax,0xc69db792
  40e5f8:	or     DWORD PTR [eax-0x1a358f4],eax
  40e5fe:	addr16 js 0x40e5ea
  40e601:	sbb    DWORD PTR [edi-0x2071c732],0x43
  40e608:	pop    ss
  40e609:	sub    eax,0xee61fc87
  40e60e:	cmp    al,0x5c
  40e610:	or     eax,0x58850a28
  40e615:	sar    DWORD PTR [edx],cl
  40e617:	mov    esi,0xe120387c
  40e61c:	sub    ch,al
  40e61e:	adc    al,0x7d
  40e620:	sbb    eax,0xbfb5fe5e
  40e625:	jno    0x40e67c
  40e627:	bound  ecx,QWORD PTR ds:0xa2394403
  40e62d:	call   0x25f1:0x31907450
  40e634:	in     eax,dx
  40e635:	and    al,BYTE PTR [eax+edx*4-0x59]
  40e639:	mov    esi,0x770ceac7
  40e63e:	mov    dl,0xb3
  40e640:	sbb    dh,cl
  40e642:	cmp    ebp,ebp
  40e644:	pop    ebp
  40e645:	mov    cl,BYTE PTR [esi-0x7f40b3d5]
  40e64b:	jbe    0x40e626
  40e64d:	test   al,0xc1
  40e64f:	xchg   esi,eax
  40e650:	cmp    DWORD PTR [esi-0x20],edx
  40e653:	jge    0x40e63e
  40e655:	sub    bh,BYTE PTR [edi+ebx*4]
  40e658:	mov    esi,0x445ccfc7
  40e65d:	add    eax,0xd88b5ae1
  40e662:	dec    ebp
  40e663:	mov    cl,0x69
  40e665:	ror    DWORD PTR [edx],cl
  40e667:	retf   0x1979
  40e66a:	jo     0x40e678
  40e66c:	fist   DWORD PTR [ebx]
  40e66e:	iret   
  40e66f:	add    ah,BYTE PTR gs:[esi+0x2]
  40e673:	xor    ebx,DWORD PTR [edx-0x680abb8a]
  40e679:	cmp    ebp,DWORD PTR [edi*4+0x37a6580a]
  40e680:	push   ecx
  40e681:	popa   
  40e682:	and    DWORD PTR [esi+0x3a94cd8d],ebp
  40e688:	or     esp,DWORD PTR [eax]
  40e68a:	jl     0x40e67e
  40e68c:	stos   DWORD PTR es:[edi],eax
  40e68d:	scas   al,BYTE PTR es:[edi]
  40e68e:	popa   
  40e68f:	sbb    al,0x97
  40e691:	fild   QWORD PTR [ecx-0x7548169]
  40e697:	js     0x40e6ad
  40e699:	loope  0x40e658
  40e69b:	jmp    0xbd569723
  40e6a0:	pop    ecx
  40e6a1:	clc    
  40e6a2:	shl    DWORD PTR [esi-0x4f],0xfa
  40e6a6:	mov    ds:0x464c815f,al
  40e6ab:	push   ss
  40e6ac:	ja     0x40e705
  40e6ae:	sbb    al,0x82
  40e6b0:	jmp    0x51dd2382
  40e6b5:	repz cwde 
  40e6b7:	push   eax
  40e6b8:	xor    BYTE PTR [esi+ebp*2],0xb
  40e6bc:	shr    BYTE PTR [eax],1
  40e6be:	(bad)  
  40e6bf:	not    BYTE PTR [ebp-0x3ddb30cd]
  40e6c5:	jnp    0x40e6cf
  40e6c7:	jmp    FWORD PTR [ecx+0x25]
  40e6ca:	gs mov al,0x83
  40e6cd:	bound  esp,QWORD PTR [eax]
  40e6cf:	repz shl BYTE PTR [edi+0x23],cl
  40e6d3:	jl     0x40e6e3
  40e6d5:	inc    edi
  40e6d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6d7:	pop    ss
  40e6d8:	xchg   esi,eax
  40e6d9:	jno    0x40e6a2
  40e6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6dc:	in     eax,0xc
  40e6de:	mov    cl,0x8c
  40e6e0:	loope  0x40e74a
  40e6e2:	neg    BYTE PTR [esi+edx*4+0x4a4d8120]
  40e6e9:	jle    0x40e6e5
  40e6eb:	jmp    DWORD PTR [ebx+esi*8]
  40e6ee:	sbb    ecx,DWORD PTR [eax-0x96dbaba]
  40e6f4:	iret   
  40e6f5:	in     al,dx
  40e6f6:	sbb    eax,0xb31ac11b
  40e6fb:	sbb    ebp,DWORD PTR [edi]
  40e6fd:	sbb    al,0x57
  40e6ff:	push   ebx
  40e700:	jmp    0x6bf:0x3d2c03d0
  40e707:	imul   edx,eax,0x5f69ebb
  40e70d:	daa    
  40e70e:	xor    DWORD PTR [esi+0x4c],esp
  40e711:	sbb    ebp,DWORD PTR [ebx+0x20]
  40e714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e715:	sar    BYTE PTR fs:[edi-0x2a4f485f],1
  40e71c:	aad    0xde
  40e71e:	mov    edi,0x25aff583
  40e723:	cli    
  40e724:	retf   0xb5d8
  40e727:	js     0x40e6fc
  40e729:	xor    bh,BYTE PTR [ebx-0x2f]
  40e72c:	fnstcw WORD PTR [ebx-0x41e03fc5]
  40e732:	mov    dl,0x9c
  40e734:	imul   eax,DWORD PTR [edx-0x166500cd],0xc13f0b6
  40e73e:	jbe    0x40e6ff
  40e740:	scas   eax,DWORD PTR es:[edi]
  40e741:	aaa    
  40e742:	in     al,dx
  40e743:	ror    DWORD PTR ds:0xd47138c,1
  40e749:	inc    ebx
  40e74a:	mov    dh,0xee
  40e74c:	sub    BYTE PTR [ecx],al
  40e74e:	mov    dh,0xbc
  40e750:	xchg   ecx,eax
  40e751:	push   cs
  40e752:	loope  0x40e6f2
  40e754:	sub    ebx,DWORD PTR [eax]
  40e756:	push   edx
  40e757:	retf   0xfd14
  40e75a:	leave  
  40e75b:	mov    bh,0x2
  40e75d:	idiv   BYTE PTR [ebx]
  40e75f:	mov    dl,BYTE PTR [eax+0x63ddf42f]
  40e765:	jne    0x40e7cc
  40e767:	retf   0x64f6
  40e76a:	xchg   edx,eax
  40e76b:	pop    ecx
  40e76c:	pop    esp
  40e76d:	fbstp  TBYTE PTR [ecx]
  40e76f:	xchg   DWORD PTR [di+0x39],eax
  40e773:	pushf  
  40e774:	enter  0xbd76,0xb7
  40e778:	leave  
  40e779:	jnp    0x40e77e
  40e77b:	ja     0x40e7de
  40e77d:	and    dh,BYTE PTR ds:0xdef80e49
  40e783:	ins    BYTE PTR es:[edi],dx
  40e784:	xor    eax,0x91303d54
  40e789:	dec    eax
  40e78a:	xchg   ebp,eax
  40e78b:	dec    esp
  40e78c:	adc    edi,esi
  40e78e:	scas   al,BYTE PTR es:[edi]
  40e78f:	cwde   
  40e790:	ins    DWORD PTR es:[edi],dx
  40e791:	add    dl,BYTE PTR [edi]
  40e793:	or     eax,0xc7765334
  40e798:	jle    0x40e76e
  40e79a:	je     0x40e797
  40e79c:	mov    esp,eax
  40e79e:	push   cs
  40e79f:	aaa    
  40e7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a1:	xor    DWORD PTR [edi+0x1a],eax
  40e7a4:	jle    0x40e770
  40e7a6:	jge    0x40e740
  40e7a8:	push   esi
  40e7a9:	cdq    
  40e7aa:	jle    0x40e794
  40e7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ad:	sbb    bh,dl
  40e7af:	mov    WORD PTR [esi+ebp*4],ds
  40e7b2:	add    bh,BYTE PTR [eax+ecx*8]
  40e7b5:	out    0x47,eax
  40e7b7:	mov    bl,BYTE PTR [edi+ecx*1-0x1bed5468]
  40e7be:	mov    ch,0x45
  40e7c0:	in     al,0x24
  40e7c2:	mov    dl,0x13
  40e7c4:	loop   0x40e76a
  40e7c6:	mov    ebx,0xb3d4b604
  40e7cb:	stos   DWORD PTR es:[edi],eax
  40e7cc:	ins    DWORD PTR es:[edi],dx
  40e7cd:	mov    esp,0x2feb152
  40e7d2:	mov    ch,0xf3
  40e7d4:	rol    BYTE PTR [ebx],0x8d
  40e7d7:	jmp    0x40e7c9
  40e7d9:	add    eax,0x8fdfb90b
  40e7de:	(bad)  
  40e7df:	mov    esp,esi
  40e7e1:	clc    
  40e7e2:	sbb    eax,0x27f61735
  40e7e7:	or     eax,0x478f25ee
  40e7ec:	mov    eax,fs
  40e7ee:	lods   eax,DWORD PTR ds:[esi]
  40e7ef:	jg     0x40e848
  40e7f1:	adc    ebx,DWORD PTR [ecx+0x5e5d30b4]
  40e7f7:	mov    eax,0x176c4582
  40e7fc:	push   es
  40e7fd:	sub    bl,BYTE PTR [edx+0x2a520f3a]
  40e803:	xchg   ebp,eax
  40e804:	sub    DWORD PTR [ecx-0x37],edi
  40e807:	fst    DWORD PTR cs:[edi+0x36]
  40e80b:	std    
  40e80c:	mov    eax,ds:0x43af6c1d
  40e811:	mov    al,ds:0xd946ee9d
  40e816:	push   esp
  40e817:	xchg   eax,esi
  40e819:	mov    al,0x4f
  40e81b:	cmp    eax,0xd9a3a4a2
  40e820:	xchg   edx,eax
  40e821:	punpckhwd mm7,QWORD PTR [esi+0x44d62480]
  40e828:	jle    0x40e873
  40e82a:	cmc    
  40e82b:	push   edi
  40e82c:	pop    esi
  40e82d:	push   ebx
  40e82e:	rcl    DWORD PTR ss:[ebx+0x7464cdf9],cl
  40e835:	inc    eax
  40e836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e837:	mov    bl,0xa6
  40e839:	push   cs
  40e83a:	enter  0x9c7c,0x6
  40e83e:	cwde   
  40e83f:	mov    eax,ds:0xfb0dc33c
  40e844:	xchg   DWORD PTR [esp+ebx*4],esp
  40e847:	push   es
  40e848:	dec    esp
  40e849:	lods   eax,DWORD PTR ds:[esi]
  40e84a:	inc    eax
  40e84b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e84c:	mov    ebx,0x2a869d3d
  40e851:	pop    edi
  40e852:	aam    0x36
  40e854:	outs   dx,BYTE PTR ds:[esi]
  40e855:	or     ebx,DWORD PTR [esp+eax*2+0x3d6987a0]
  40e85c:	lahf   
  40e85d:	mov    dl,0x5e
  40e85f:	xchg   edi,eax
  40e860:	ror    esp,1
  40e862:	cmp    al,0x5f
  40e864:	inc    esi
  40e865:	pop    esi
  40e866:	call   0x4825cb0e
  40e86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e86c:	ss jbe 0x40e8b5
  40e86f:	mov    ebp,0x7164ed59
  40e874:	and    ecx,DWORD PTR [ebx+eiz*4]
  40e877:	adc    ecx,DWORD PTR [ebp+0x156ca30c]
  40e87d:	stos   BYTE PTR es:[edi],al
  40e87e:	mov    esi,0x1c859a1d
  40e883:	jb     0x40e82e
  40e885:	push   esp
  40e886:	(bad)  
  40e887:	pop    esi
  40e888:	sub    ebx,DWORD PTR [eax-0xd]
  40e88b:	aam    0x75
  40e88d:	in     al,0x8e
  40e88f:	ins    BYTE PTR es:[edi],dx
  40e890:	loope  0x40e827
  40e892:	jne    0x40e83d
  40e894:	jbe    0x40e88f
  40e896:	sub    al,0x71
  40e898:	cdq    
  40e899:	sub    dl,BYTE PTR [ebp-0x6a]
  40e89c:	mov    cs:0x9c2f4e26,al
  40e8a2:	pop    eax
  40e8a3:	and    BYTE PTR [ebx+ebp*2+0x7f],al
  40e8a7:	xchg   edx,eax
  40e8a8:	cmp    dl,0x69
  40e8ab:	aam    0x12
  40e8ad:	daa    
  40e8ae:	pop    es
  40e8af:	xor    DWORD PTR [edi],esp
  40e8b1:	sar    DWORD PTR [ebx-0x120cfc3d],1
  40e8b7:	scas   eax,DWORD PTR es:[edi]
  40e8b8:	adc    esi,DWORD PTR [edx-0x49]
  40e8bb:	sti    
  40e8bc:	into   
  40e8bd:	dec    edi
  40e8be:	(bad)  
  40e8c0:	xor    DWORD PTR [ecx],edx
  40e8c2:	or     edi,DWORD PTR [edx]
  40e8c4:	pushf  
  40e8c5:	cmc    
  40e8c6:	mov    ebx,0x23696b96
  40e8cb:	pop    ebp
  40e8cc:	jl     0x40e8c3
  40e8ce:	js     0x40e92f
  40e8d0:	fwait
  40e8d1:	sbb    bh,BYTE PTR [esi+ecx*8+0x16]
  40e8d5:	das    
  40e8d6:	add    eax,0xb52766f7
  40e8db:	adc    eax,0x59261b18
  40e8e0:	sbb    DWORD PTR [edi],0x3873526c
  40e8e6:	sbb    al,0x84
  40e8e8:	xchg   edi,eax
  40e8e9:	adc    BYTE PTR [eax-0x7e5b38a6],al
  40e8ef:	and    al,0x16
  40e8f1:	sub    dl,dl
  40e8f3:	dec    ebx
  40e8f4:	pop    ebp
  40e8f5:	add    ecx,DWORD PTR [ecx-0x3ea4d8a1]
  40e8fb:	jae    0x40e912
  40e8fd:	fidivr WORD PTR [ebp+0x3d805f7b]
  40e903:	mov    al,ah
  40e905:	cld    
  40e906:	pop    edx
  40e907:	sahf   
  40e908:	sub    DWORD PTR [eax+0xb],0x6a
  40e90c:	mov    al,ds:0xc51ddb0f
  40e911:	dec    eax
  40e912:	push   0xbd29d2a7
  40e917:	mov    bh,0xbc
  40e919:	cmp    eax,0xe98a139b
  40e91e:	sub    DWORD PTR [eax+0x49439c10],esp
  40e924:	dec    ebp
  40e925:	test   DWORD PTR [esi],eax
  40e927:	cmp    ecx,esi
  40e929:	xchg   edx,eax
  40e92a:	(bad)  
  40e92b:	retf   0x51c
  40e92e:	out    0x76,al
  40e930:	inc    edi
  40e931:	dec    ecx
  40e932:	sti    
  40e933:	add    BYTE PTR [esi],ch
  40e935:	jp     0x40e9b3
  40e937:	fidiv  WORD PTR [esi-0x79]
  40e93a:	xlat   BYTE PTR ds:[ebx]
  40e93b:	daa    
  40e93c:	hlt    
  40e93d:	push   esp
  40e93e:	popf   
  40e93f:	cmp    dl,BYTE PTR [ebx-0x408c61c8]
  40e945:	mov    eax,0xad4e7049
  40e94a:	(bad)  
  40e94b:	das    
  40e94c:	pop    es
  40e94d:	leave  
  40e94e:	jecxz  0x40e9bb
  40e950:	rol    BYTE PTR [ebp+0x67],1
  40e953:	xchg   BYTE PTR [edi],bh
  40e955:	mov    al,0x45
  40e957:	mov    DWORD PTR [ebx+edi*8+0x1bc1f069],edx
  40e95e:	add    DWORD PTR [edx-0x42189a34],esi
  40e964:	pusha  
  40e965:	shl    BYTE PTR [ecx-0x68],cl
  40e968:	call   0x550f:0x290377bd
  40e96f:	(bad)  
  40e970:	mov    edi,0xe8f3afbf
  40e975:	mov    esp,0xbd07ef24
  40e97a:	gs mov ah,0x82
  40e97d:	mov    dh,0x8a
  40e97f:	pop    esi
  40e980:	outs   dx,DWORD PTR ds:[esi]
  40e981:	pop    ebp
  40e982:	cmp    al,0xb6
  40e984:	cwde   
  40e985:	call   0x23b:0x81578f6a
  40e98c:	std    
  40e98d:	dec    eax
  40e98e:	and    BYTE PTR [esi+0x6d7e864d],ch
  40e994:	arpl   WORD PTR [ecx],di
  40e996:	fimul  WORD PTR [edx]
  40e998:	(bad)  
  40e999:	cdq    
  40e99a:	jg     0x40e964
  40e99c:	pop    ebx
  40e99d:	ret    
  40e99e:	sub    DWORD PTR [ebp-0x2],edx
  40e9a1:	pop    esi
  40e9a2:	iret   
  40e9a3:	icebp  
  40e9a4:	or     ebx,DWORD PTR [ecx-0x1c7aaa33]
  40e9aa:	cli    
  40e9ab:	out    0x82,eax
  40e9ad:	dec    edi
  40e9ae:	jo     0x40ea06
  40e9b0:	addr16 inc eax
  40e9b2:	pushf  
  40e9b3:	ds push ds
  40e9b5:	mov    bh,0x9d
  40e9b7:	sub    al,0xf9
  40e9b9:	retf   
  40e9ba:	adc    BYTE PTR [edi],dh
  40e9bc:	(bad)  
  40e9be:	mov    ecx,edx
  40e9c0:	mov    cl,0x8
  40e9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c3:	ret    
  40e9c4:	xchg   ecx,eax
  40e9c5:	or     BYTE PTR [esi+0xdc15d6e],ch
  40e9cb:	mov    edx,0xcce8b8a7
  40e9d0:	mov    cl,0xaa
  40e9d2:	rcl    DWORD PTR [edx+ecx*4+0x57],1
  40e9d6:	jge    0x40e9b2
  40e9d8:	inc    ebx
  40e9d9:	sbb    al,0x7c
  40e9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9dc:	lds    edx,FWORD PTR [ecx-0x57ba14cd]
  40e9e2:	jnp    0x40ea18
  40e9e4:	pusha  
  40e9e5:	push   esi
  40e9e6:	nop
  40e9e7:	aad    0xff
  40e9e9:	xchg   ebp,eax
  40e9ea:	xchg   esp,eax
  40e9eb:	repnz stc 
  40e9ed:	fisttp DWORD PTR [edx]
  40e9ef:	ins    BYTE PTR es:[edi],dx
  40e9f0:	dec    ecx
  40e9f1:	inc    ebp
  40e9f2:	and    al,0x84
  40e9f4:	lds    edi,FWORD PTR [ebx]
  40e9f6:	and    eax,0x9cbec062
  40e9fb:	outs   dx,BYTE PTR ds:[esi]
  40e9fc:	loop   0x40e99c
  40e9fe:	add    ah,BYTE PTR [edi]
  40ea00:	and    ebp,edx
  40ea02:	loope  0x40ea4e
  40ea04:	adc    al,0xad
  40ea06:	add    DWORD PTR [esi-0x1a],eax
  40ea09:	shld   DWORD PTR [ebx+edx*8],esp,cl
  40ea0d:	loop   0x40e9e6
  40ea0f:	xchg   esp,eax
  40ea10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea11:	loop   0x40e9af
  40ea13:	cmp    al,cl
  40ea15:	stos   BYTE PTR es:[edi],al
  40ea16:	int3   
  40ea17:	cld    
  40ea18:	mov    dh,0xe9
  40ea1a:	mov    esi,0x95cf316d
  40ea1f:	cmp    eax,0xca68c6eb
  40ea24:	shl    DWORD PTR [edi],0x24
  40ea27:	inc    ebx
  40ea28:	and    BYTE PTR [ecx],bh
  40ea2a:	jno    0x40ea7f
  40ea2c:	inc    esi
  40ea2d:	jge    0x40ea8e
  40ea2f:	shl    DWORD PTR [ecx+0x47682a21],0x84
  40ea36:	pop    ebx
  40ea37:	push   ebx
  40ea38:	mov    cl,0xb
  40ea3a:	in     al,dx
  40ea3b:	mov    ch,0xfd
  40ea3d:	pslld  mm3,QWORD PTR [esp+ecx*1+0x32c4572e]
  40ea45:	mov    ecx,0xbe1723ff
  40ea4a:	add    eax,0xeeaf8a0a
  40ea4f:	adc    DWORD PTR [ebp-0x2c],0x53
  40ea53:	cld    
  40ea54:	xchg   ebx,eax
  40ea55:	rcl    DWORD PTR [edx-0x6af4fa5f],cl
  40ea5b:	je     0x40ea63
  40ea5d:	repnz dec edx
  40ea5f:	(bad)  
  40ea60:	xchg   ebx,eax
  40ea61:	loope  0x40eabe
  40ea63:	and    al,0xf
  40ea65:	(bad)  
  40ea66:	push   0xbb6feea1
  40ea6b:	pop    es
  40ea6c:	pop    esi
  40ea6d:	jno    0x40ea0b
  40ea6f:	ja     0x40ea8a
  40ea71:	add    cl,BYTE PTR [esp+edx*4]
  40ea74:	add    eax,DWORD PTR [eax-0x67]
  40ea77:	out    dx,al
  40ea78:	mov    ecx,0xadc1efca
  40ea7d:	test   al,0x9c
  40ea7f:	push   ebx
  40ea80:	ja     0x40eaac
  40ea82:	idiv   DWORD PTR [edi+0x5451029c]
  40ea88:	cwde   
  40ea89:	adc    BYTE PTR [ebx+ebp*1+0x6f377a5],bh
  40ea90:	inc    esi
  40ea91:	loope  0x40eadc
  40ea93:	mov    BYTE PTR [eax+ebx*8-0x5],dl
  40ea97:	mov    edx,ecx
  40ea99:	mov    eax,ds:0xc5720696
  40ea9e:	loop   0x40ea33
  40eaa0:	sbb    DWORD PTR [esi-0x4a],ebx
  40eaa3:	xor    BYTE PTR [edx],ch
  40eaa5:	fwait
  40eaa6:	scas   al,BYTE PTR es:[edi]
  40eaa7:	push   esi
  40eaa8:	std    
  40eaa9:	not    BYTE PTR [esi+0x687c857b]
  40eaaf:	and    edi,ebx
  40eab1:	add    eax,0xa86ea6a3
  40eab6:	mul    ah
  40eab8:	sub    eax,0xf3bd29b5
  40eabd:	mov    ebx,0x80a96723
  40eac2:	push   ecx
  40eac3:	push   cs
  40eac4:	mov    fs,WORD PTR [eax+0x7e89d6af]
  40eaca:	adc    bh,BYTE PTR [ebx-0x78059fd9]
  40ead0:	mov    dl,cl
  40ead2:	inc    dl
  40ead4:	sbb    BYTE PTR [ecx],0x86
  40ead7:	inc    edx
  40ead8:	mov    ebp,0x1626adf9
  40eadd:	retf   
  40eade:	sbb    eax,0xc218b203
  40eae3:	ret    
  40eae4:	stos   BYTE PTR es:[edi],al
  40eae5:	fnsave [edi-0x2231480a]
  40eaeb:	mov    edi,0x7207aafa
  40eaf0:	cmp    bl,ah
  40eaf2:	sub    BYTE PTR [edx+0x11],dl
  40eaf5:	pop    ebp
  40eaf6:	add    esi,DWORD PTR [ebx+0x43fec7a6]
  40eafc:	test   al,0xe
  40eafe:	push   edi
  40eaff:	cmp    dl,BYTE PTR [esi-0x19]
  40eb02:	and    eax,0xefe854b7
  40eb07:	xor    eax,0x4a4b5489
  40eb0c:	imul   edx,esi,0xffffffa2
  40eb0f:	or     eax,0xab26b795
  40eb14:	bound  edx,QWORD PTR [edx]
  40eb16:	stc    
  40eb17:	pop    esp
  40eb18:	outs   dx,BYTE PTR ds:[esi]
  40eb19:	cmp    eax,0xca4b7cc0
  40eb1e:	hlt    
  40eb1f:	cmc    
  40eb20:	es inc eax
  40eb22:	ret    0xcd94
  40eb25:	jo     0x40eb7d
  40eb27:	fs and eax,0x45c88439
  40eb2d:	pop    edx
  40eb2e:	push   ebx
  40eb2f:	mov    ebp,0x877f990a
  40eb34:	out    dx,eax
  40eb35:	or     BYTE PTR [ebp+0x66],cl
  40eb38:	mov    cl,0xf
  40eb3a:	add    eax,esp
  40eb3c:	imul   ebx,DWORD PTR [edx-0x76],0xe36482c
  40eb43:	mov    dh,0xc8
  40eb45:	int3   
  40eb46:	pop    eax
  40eb47:	push   eax
  40eb48:	aad    0x17
  40eb4a:	mov    al,ds:0x3f4d03f3
  40eb4f:	cmc    
  40eb50:	cmc    
  40eb51:	push   es
  40eb52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb53:	push   esi
  40eb54:	out    dx,eax
  40eb55:	rcl    dh,cl
  40eb57:	push   edx
  40eb58:	sbb    BYTE PTR cs:[eax-0x6],bh
  40eb5c:	and    al,0xe5
  40eb5e:	push   esi
  40eb5f:	outs   dx,BYTE PTR ds:[esi]
  40eb60:	ror    ebp,1
  40eb62:	in     eax,0xf7
  40eb64:	pop    edx
  40eb65:	hlt    
  40eb66:	lods   al,BYTE PTR ds:[esi]
  40eb67:	and    cl,BYTE PTR [ebp+0x995cb2a]
  40eb6d:	or     al,0x0
  40eb6f:	ins    DWORD PTR es:[edi],dx
  40eb70:	fisttp WORD PTR ds:[ebx-0x33]
  40eb74:	jno    0x40eb14
  40eb76:	das    
  40eb77:	fbstp  TBYTE PTR [edx-0x68]
  40eb7a:	neg    edx
  40eb7c:	je     0x40eb4f
  40eb7e:	sbb    al,0xed
  40eb80:	push   0xf4042507
  40eb85:	lods   al,BYTE PTR ds:[esi]
  40eb86:	xor    bh,ah
  40eb88:	imul   ebx,DWORD PTR [esp+edx*2-0x2278d50a],0x29
  40eb90:	aam    0xc7
  40eb92:	retf   0x2457
  40eb95:	jmp    0x40eb5b
  40eb97:	daa    
  40eb98:	mov    cl,0xb
  40eb9a:	cmp    dl,0x52
  40eb9d:	into   
  40eb9e:	ret    
  40eb9f:	retf   0xb079
  40eba2:	push   ss
  40eba3:	aam    0xcd
  40eba5:	or     dl,BYTE PTR [eax+ebx*8]
  40eba8:	aas    
  40eba9:	xchg   BYTE PTR [edi],ah
  40ebab:	(bad)  
  40ebac:	lock pop ecx
  40ebae:	loopne 0x40ebf6
  40ebb0:	mov    dh,0x17
  40ebb2:	push   edi
  40ebb3:	imul   eax,DWORD PTR [edi+0x7e105ecd],0x9b505b9e
  40ebbd:	mov    edx,0xe64566ad
  40ebc2:	ins    DWORD PTR es:[edi],dx
  40ebc3:	adc    BYTE PTR ds:0xb1669efc,0x71
  40ebca:	sub    cl,cl
  40ebcc:	mov    ds:0x85851f0,eax
  40ebd1:	add    BYTE PTR [eax],al
  40ebd3:	xlat   BYTE PTR ds:[ebx]
  40ebd4:	pushf  
  40ebd5:	mov    bl,0xba
  40ebd7:	mov    cl,0x96
  40ebd9:	mov    al,ds:0x323b155
  40ebde:	in     eax,dx
  40ebdf:	cwde   
  40ebe0:	mov    cl,0xf8
  40ebe2:	bound  esi,QWORD PTR ds:0x6bb8b5ac
  40ebe8:	dec    ebp
  40ebe9:	ss into 
  40ebeb:	xlat   BYTE PTR ds:[ebx]
  40ebec:	ror    cl,1
  40ebee:	popf   
  40ebef:	or     dl,dh
  40ebf1:	outs   dx,BYTE PTR ds:[esi]
  40ebf2:	push   0xffffff88
  40ebf4:	push   es
  40ebf5:	sbb    al,0x82
  40ebf7:	sub    al,0x70
  40ebf9:	in     eax,0x58
  40ebfb:	mov    edx,0x779a8c5f
  40ec00:	xchg   edi,eax
  40ec01:	inc    ebp
  40ec02:	xor    dh,BYTE PTR [eax+0x125fc952]
  40ec08:	pop    ebx
  40ec09:	hlt    
  40ec0a:	js     0x40ec16
  40ec0c:	jns    0x40ec43
  40ec0e:	(bad)  
  40ec0f:	js     0x40ec51
  40ec11:	push   0xabe5267f
  40ec16:	mov    cl,0x8d
  40ec18:	ins    DWORD PTR es:[edi],dx
  40ec19:	into   
  40ec1a:	rcl    bl,cl
  40ec1c:	cmp    edi,edi
  40ec1e:	int3   
  40ec1f:	shl    esp,1
  40ec21:	test   eax,0xd52817e
  40ec26:	sbb    eax,0x55c32359
  40ec2b:	mov    esp,gs
  40ec2d:	xlat   BYTE PTR ds:[ebx]
  40ec2e:	pusha  
  40ec2f:	mov    ah,0xff
  40ec31:	push   es
  40ec32:	push   ecx
  40ec33:	cmp    eax,0xaae49079
  40ec38:	adc    ebp,DWORD PTR [esi]
  40ec3a:	xchg   bl,cl
  40ec3c:	cmp    eax,DWORD PTR [ebx]
  40ec3e:	stos   DWORD PTR es:[edi],eax
  40ec3f:	sti    
  40ec40:	lea    ebp,[ebx-0x50]
  40ec43:	jae    0x40ecc4
  40ec45:	js     0x40ec51
  40ec47:	lock cmp dl,BYTE PTR [ebp-0x1cca413b]
  40ec4e:	xor    eax,0x790c3df2
  40ec53:	fcomp  st(6)
  40ec55:	mov    eax,0xc868f6ac
  40ec5a:	push   0xa660f70a
  40ec5f:	dec    edx
  40ec60:	jno    0x40ec09
  40ec62:	add    esi,0x49
  40ec65:	mov    al,ds:0x3316be72
  40ec6a:	sbb    al,0x61
  40ec6c:	popf   
  40ec6d:	aaa    
  40ec6e:	inc    esp
  40ec6f:	lea    edx,[ecx]
  40ec71:	and    DWORD PTR [edx],eax
  40ec73:	mov    DWORD PTR [edi+0x2d72806d],ebx
  40ec79:	and    DWORD PTR [ebx+0x552133c3],eax
  40ec7f:	jmp    0x21ae:0x1a7ac592
  40ec86:	test   edx,ebp
  40ec88:	stos   DWORD PTR es:[edi],eax
  40ec89:	fidivr WORD PTR [eax-0x2d744244]
  40ec8f:	mov    edi,0x3ac8aa60
  40ec94:	bound  ebp,QWORD PTR [ecx+0x57]
  40ec97:	scas   eax,DWORD PTR es:[edi]
  40ec98:	test   DWORD PTR [edx-0x4172c963],ecx
  40ec9e:	pop    edx
  40ec9f:	xor    DWORD PTR [edx+0x28],edx
  40eca2:	in     eax,dx
  40eca3:	xchg   ebp,eax
  40eca4:	cs mov esp,0x5bbbc067
  40ecaa:	add    esp,eax
  40ecac:	jecxz  0x40ed07
  40ecae:	mov    eax,ds:0x9be35be0
  40ecb3:	je     0x40ec41
  40ecb5:	cmp    bl,ah
  40ecb7:	push   cs
  40ecb8:	mov    bh,0x4f
  40ecba:	call   0xb6ac:0x3c416c4e
  40ecc1:	ja     0x40ed24
  40ecc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecc4:	enter  0x28d0,0xac
  40ecc8:	jmp    0x60ef:0xe65c1ea1
  40eccf:	xchg   edi,eax
  40ecd0:	push   ebp
  40ecd1:	xor    al,0xf6
  40ecd3:	push   edx
  40ecd4:	test   al,0x14
  40ecd6:	jne    0x40ed18
  40ecd8:	dec    eax
  40ecd9:	push   0xffffffa6
  40ecdb:	mov    edi,DWORD PTR [edi]
  40ecdd:	hlt    
  40ecde:	inc    ebp
  40ecdf:	jmp    0x40ecdf
  40ece1:	sbb    eax,0x44bb3d82
  40ece6:	jg     0x40ec88
  40ece8:	jnp    0x40ecc3
  40ecea:	push   ss
  40eceb:	sub    eax,0x8a50e421
  40ecf0:	mov    ecx,0x99b9e7be
  40ecf5:	test   DWORD PTR [ebx+0x6b887da7],ecx
  40ecfb:	sub    eax,0xaa82d372
  40ed00:	fstp   DWORD PTR [edx-0x35e8876c]
  40ed06:	js     0x40ed83
  40ed08:	jmp    0xa3cf914d
  40ed0d:	lock popa 
  40ed0f:	iret   
  40ed10:	in     al,0xf3
  40ed12:	ins    BYTE PTR es:[edi],dx
  40ed13:	lock jl 0x40ed17
  40ed16:	pop    es
  40ed17:	push   esp
  40ed18:	adc    DWORD PTR [edx-0x35],esi
  40ed1b:	push   ebp
  40ed1c:	inc    edi
  40ed1d:	mov    al,ah
  40ed1f:	pop    ds
  40ed20:	push   ebp
  40ed21:	mov    edi,0x28319b61
  40ed26:	mov    eax,ds:0x665682a2
  40ed2b:	stos   BYTE PTR es:[edi],al
  40ed2c:	xchg   ebx,eax
  40ed2d:	jae    0x40ed53
  40ed2f:	lods   eax,DWORD PTR ds:[esi]
  40ed30:	mov    ds:0x4299754f,al
  40ed35:	xchg   DWORD PTR [ebx-0x3e],edx
  40ed38:	cmc    
  40ed39:	inc    esi
  40ed3a:	std    
  40ed3b:	popa   
  40ed3c:	bound  edi,QWORD PTR [ebp-0x6c762ad3]
  40ed42:	pop    edi
  40ed43:	scas   al,BYTE PTR es:[edi]
  40ed44:	aad    0xd6
  40ed46:	aaa    
  40ed47:	cmp    DWORD PTR [ebx],ebx
  40ed49:	(bad)  
  40ed4a:	cmp    ecx,DWORD PTR [ecx]
  40ed4c:	xor    bl,BYTE PTR [ecx]
  40ed4e:	or     eax,0xf7376a6b
  40ed53:	cmp    bl,BYTE PTR [ebx]
  40ed55:	rcr    DWORD PTR [edx-0x2697853c],cl
  40ed5b:	(bad)  
  40ed5c:	ficomp DWORD PTR [edx-0x5a]
  40ed5f:	sbb    ah,BYTE PTR [ebx+0x5022c6fb]
  40ed65:	loopne 0x40ed07
  40ed67:	sbb    ch,BYTE PTR [ecx]
  40ed69:	int    0x98
  40ed6b:	shl    BYTE PTR [esi-0x50],1
  40ed6e:	push   eax
  40ed6f:	xor    al,0xca
  40ed71:	fcomp  DWORD PTR [edi]
  40ed73:	pusha  
  40ed74:	jnp    0x40ede2
  40ed76:	jb     0x40ed78
  40ed78:	in     eax,dx
  40ed79:	fdiv   DWORD PTR [esi-0x4e]
  40ed7c:	loope  0x40eda8
  40ed7e:	and    eax,0x272d3cdf
  40ed83:	or     BYTE PTR [di],dl
  40ed86:	in     eax,dx
  40ed87:	ja     0x40ed68
  40ed89:	jg     0x40ed71
  40ed8b:	enter  0x8ab5,0x16
  40ed8f:	and    DWORD PTR [ebx],esi
  40ed91:	mov    ch,0xa0
  40ed93:	pop    ss
  40ed94:	fldenv [esi+0x65de66ca]
  40ed9a:	mov    cl,0x56
  40ed9c:	aam    0x9b
  40ed9e:	in     eax,0x38
  40eda0:	adc    eax,0x672f67ae
  40eda5:	xchg   ebp,eax
  40eda6:	and    BYTE PTR [ebp+0x75f0161e],ah
  40edac:	loopne 0x40ed93
  40edae:	pop    ebx
  40edaf:	xchg   esp,eax
  40edb0:	daa    
  40edb1:	xor    DWORD PTR [esi+esi*2],ebx
  40edb4:	adc    eax,0x5f425cc6
  40edb9:	jp     0x40eda0
  40edbb:	jecxz  0x40ed7d
  40edbd:	test   DWORD PTR [esi],ebp
  40edbf:	inc    ecx
  40edc0:	(bad)  
  40edc1:	not    ah
  40edc3:	adc    BYTE PTR [edi+0x168f2fb9],dh
  40edc9:	inc    edx
  40edca:	add    eax,0x6f693573
  40edcf:	test   ecx,edi
  40edd1:	jmp    0x40ee20
  40edd3:	leave  
  40edd4:	pop    ebx
  40edd5:	jae    0x40ede3
  40edd7:	add    BYTE PTR [eax-0x9dbc12d],0xc1
  40edde:	adc    DWORD PTR [edi],esp
  40ede0:	std    
  40ede1:	xchg   ebp,eax
  40ede2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ede3:	pop    ds
  40ede4:	xchg   ebx,eax
  40ede5:	outs   dx,DWORD PTR ds:[esi]
  40ede6:	ss add cl,BYTE PTR ds:[ebp+edx*1-0x258888f5]
  40edef:	mov    eax,0x21356359
  40edf4:	popa   
  40edf5:	mov    dh,0xf5
  40edf7:	push   0xbfaa702e
  40edfc:	fstp   QWORD PTR [edx]
  40edfe:	sbb    esi,DWORD PTR [eax-0x63]
  40ee01:	pushf  
  40ee02:	mov    al,0x9a
  40ee04:	adc    BYTE PTR [edi+edx*1+0x1a],dl
  40ee08:	pop    ds
  40ee09:	idiv   BYTE PTR [ebx]
  40ee0b:	xlat   BYTE PTR ds:[ebx]
  40ee0c:	sub    eax,0x8a9b43fe
  40ee11:	popf   
  40ee12:	fdivr  QWORD PTR [edi]
  40ee14:	jle    0x40ee2a
  40ee16:	(bad)  
  40ee17:	dec    ebp
  40ee18:	jge    0x40ee57
  40ee1a:	or     ch,ch
  40ee1c:	dec    esi
  40ee1d:	sbb    eax,0x30e8c1b7
  40ee22:	sbb    DWORD PTR [eax-0x56],ebx
  40ee25:	cwde   
  40ee26:	xchg   esi,eax
  40ee27:	xchg   edx,eax
  40ee28:	sar    DWORD PTR [ebp-0x46],0x89
  40ee2c:	ret    
  40ee2d:	sub    eax,0xcb8bff8c
  40ee32:	out    dx,eax
  40ee33:	dec    edi
  40ee34:	fnsave [eax]
  40ee36:	pop    eax
  40ee37:	addr16 adc edi,eax
  40ee3a:	mov    ebp,0xffbfe6f9
  40ee3f:	mov    bl,0x6d
  40ee41:	(bad)  
  40ee43:	mov    ds:0x46a2863a,al
  40ee48:	mov    es,WORD PTR [ebp-0x60aec895]
  40ee4e:	inc    ebp
  40ee4f:	pop    ebp
  40ee50:	push   es
  40ee51:	jecxz  0x40ee81
  40ee53:	test   DWORD PTR [edx-0x7ef4f3da],ebx
  40ee59:	and    DWORD PTR [esp+ebp*8+0xa],eax
  40ee5d:	sbb    esi,DWORD PTR [edi-0x13]
  40ee60:	pop    ebp
  40ee61:	mov    ecx,0x7ae6c278
  40ee66:	sbb    al,0x82
  40ee68:	mov    fs,WORD PTR [esi]
  40ee6a:	outs   dx,DWORD PTR ds:[esi]
  40ee6b:	adc    al,0x49
  40ee6d:	xchg   esi,eax
  40ee6e:	cmp    ch,BYTE PTR [bp+di-0x5ce8]
  40ee73:	sar    cl,0x7a
  40ee76:	stos   DWORD PTR es:[edi],eax
  40ee77:	sub    eax,DWORD PTR [edx]
  40ee79:	cdq    
  40ee7a:	cmp    al,0xeb
  40ee7c:	sbb    eax,0x53737e26
  40ee81:	mov    ds:0xba7463a0,eax
  40ee86:	setle  BYTE PTR [eax+edx*8-0x56]
  40ee8b:	mov    cl,0xb1
  40ee8d:	ds stc 
  40ee8f:	sbb    al,0x4d
  40ee91:	lock (bad) 
  40ee93:	je     0x40ee19
  40ee95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee96:	cwde   
  40ee97:	fs inc ecx
  40ee99:	push   ebx
  40ee9a:	sub    al,0xbd
  40ee9c:	pop    ss
  40ee9d:	mov    ebp,0xc8d93a0d
  40eea2:	mov    al,ds:0x7a125b15
  40eea7:	out    dx,al
  40eea8:	mov    ebx,0x36b8f282
  40eead:	leave  
  40eeae:	cdq    
  40eeaf:	dec    eax
  40eeb0:	(bad)  
  40eeb2:	jmp    FWORD PTR [edi-0x20227c8a]
  40eeb8:	shr    BYTE PTR [edi-0x62616d13],0xf0
  40eebf:	push   esi
  40eec0:	test   eax,0xd03086ce
  40eec6:	push   ecx
  40eec7:	in     al,dx
  40eec8:	and    al,0xec
  40eeca:	mov    edi,0xd10516f2
  40eecf:	std    
  40eed0:	mov    ebx,0x266546aa
  40eed5:	ret    
  40eed6:	call   0xcf4123fe
  40eedb:	push   ebp
  40eedc:	add    al,0x86
  40eede:	fs pop edi
  40eee0:	stc    
  40eee1:	jns    0x40ee6b
  40eee3:	sti    
  40eee4:	sbb    ecx,ebp
  40eee6:	cwde   
  40eee7:	(bad)  
  40eee8:	in     eax,0x77
  40eeea:	es out 0xa8,eax
  40eeed:	push   edi
  40eeee:	outs   dx,BYTE PTR ds:[esi]
  40eeef:	mov    bh,0x5d
  40eef1:	fisubr DWORD PTR [edi]
  40eef3:	mov    bl,0xa7
  40eef5:	scas   al,BYTE PTR es:[edi]
  40eef6:	retf   
  40eef7:	test   DWORD PTR [ecx+0x14],ecx
  40eefa:	mov    eax,0xaa1da1be
  40eeff:	scas   eax,DWORD PTR es:[edi]
  40ef00:	push   ebx
  40ef01:	adc    eax,0x8b84d7e9
  40ef06:	mov    ch,0xe
  40ef08:	xorps  xmm0,XMMWORD PTR [ebx]
  40ef0b:	sub    DWORD PTR [edi+esi*8-0x5d51c2bf],eax
  40ef12:	push   ss
  40ef13:	ficomp WORD PTR [eax-0x5a]
  40ef16:	shr    DWORD PTR [esi+0x7b],1
  40ef19:	fsubr  DWORD PTR [edi-0x3f]
  40ef1c:	xchg   esp,eax
  40ef1d:	jl     0x40eefb
  40ef1f:	cmp    BYTE PTR [ebp+0x78c63779],ch
  40ef25:	jg     0x40ef21
  40ef27:	arpl   WORD PTR [esi],si
  40ef29:	jg     0x40ef9d
  40ef2b:	jns    0x40ef76
  40ef2d:	mov    ebx,0x5532fb68
  40ef32:	lock push 0xf9c9c4e
  40ef38:	test   dh,al
  40ef3a:	aam    0x65
  40ef3c:	dec    esp
  40ef3d:	lods   eax,DWORD PTR ds:[esi]
  40ef3e:	xchg   DWORD PTR [ecx+ebp*1-0x23],esi
  40ef42:	aas    
  40ef43:	xchg   edi,eax
  40ef44:	jge    0x40ef86
  40ef46:	mov    BYTE PTR [eax+0x2a7b7144],dh
  40ef4c:	adc    DWORD PTR [edi+0x739221fd],ebp
  40ef52:	stc    
  40ef53:	push   edx
  40ef54:	fidivr WORD PTR [ebx-0x22]
  40ef57:	mov    edx,0x4c2a2da6
  40ef5c:	inc    ecx
  40ef5d:	icebp  
  40ef5e:	mov    bh,0x1
  40ef60:	add    BYTE PTR [edi+0x70],al
  40ef63:	lea    ebx,[ecx-0xf4f7398]
  40ef69:	retf   
  40ef6a:	fadd   DWORD PTR [edi]
  40ef6c:	push   esi
  40ef6d:	not    BYTE PTR [ecx+0x4112f81]
  40ef73:	dec    ecx
  40ef74:	sbb    eax,0xc7db644c
  40ef79:	dec    ebp
  40ef7a:	and    ch,BYTE PTR [esp+ecx*2+0x21]
  40ef7e:	fmul   DWORD PTR [ebp-0x55854de]
  40ef84:	xlat   BYTE PTR ds:[ebx]
  40ef85:	jne    0x40efe8
  40ef87:	lahf   
  40ef88:	or     eax,0x7c4e0ab5
  40ef8d:	inc    eax
  40ef8e:	adc    ebp,ebp
  40ef90:	pop    ss
  40ef91:	xor    al,0x2d
  40ef93:	adc    al,0x63
  40ef95:	test   BYTE PTR [ecx+0x307a5aa0],dl
  40ef9b:	out    0xbb,eax
  40ef9d:	pop    ebp
  40ef9e:	call   0x96f32de0
  40efa3:	test   DWORD PTR ds:0x22bbcd1e,ecx
  40efa9:	pop    edx
  40efaa:	pop    ss
  40efab:	stc    
  40efac:	mov    eax,ds:0x122caa25
  40efb1:	in     al,0xf4
  40efb3:	cmp    BYTE PTR [ecx],ch
  40efb5:	data16 (bad) 
  40efb7:	cli    
  40efb8:	mov    ch,0x1d
  40efba:	(bad)  
  40efbb:	cli    
  40efbc:	push   esi
  40efbd:	jmp    0x10c9d2ec
  40efc2:	into   
  40efc3:	xor    bl,dl
  40efc5:	leave  
  40efc6:	sahf   
  40efc7:	test   eax,0xdcf8346a
  40efcc:	pop    ecx
  40efcd:	jo     0x40efaa
  40efcf:	xchg   edx,eax
  40efd0:	adc    dl,al
  40efd2:	inc    eax
  40efd3:	add    edx,DWORD PTR [esi+0x2d]
  40efd6:	outs   dx,DWORD PTR ds:[esi]
  40efd7:	(bad)  
  40efd8:	mov    eax,ds:0xf53ff616
  40efdd:	pop    esp
  40efde:	addr16 mov al,0xaa
  40efe1:	push   ds
  40efe2:	cmc    
  40efe3:	inc    ebp
  40efe4:	ss (bad) 
  40efe6:	icebp  
  40efe7:	fcmovne st,st(5)
  40efe9:	call   0x99d7:0xd0128707
  40eff0:	stos   DWORD PTR es:[edi],eax
  40eff1:	pop    edx
  40eff2:	ja     0x40ef9b
  40eff4:	pop    ebp
  40eff5:	adc    eax,0xce2bc7d0
  40effa:	(bad)  
  40effb:	and    eax,0x6595f34a
  40f000:	nop
  40f001:	inc    edx
  40f002:	fs mov ebx,0x996390a
  40f008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f009:	add    eax,0x92e6fc23
  40f00e:	cdq    
  40f00f:	fistp  WORD PTR [edi-0x69]
  40f012:	loopne 0x40efaf
  40f014:	rcl    esi,1
  40f016:	add    esi,DWORD PTR [edi+0x6dbca5da]
  40f01c:	fidiv  DWORD PTR [edi]
  40f01e:	shl    BYTE PTR [edi+0x72],1
  40f021:	pop    esi
  40f022:	out    0x18,al
  40f024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f025:	mov    BYTE PTR [ebx-0x6f],dh
  40f028:	repz mov ecx,0xde265113
  40f02e:	add    DWORD PTR [edi],eax
  40f030:	push   ss
  40f031:	bound  esi,QWORD PTR [ebx+edi*8]
  40f034:	inc    esi
  40f035:	pop    edi
  40f036:	and    DWORD PTR [eax],esi
  40f038:	scas   eax,DWORD PTR es:[edi]
  40f039:	scas   al,BYTE PTR es:[edi]
  40f03a:	dec    edx
  40f03b:	dec    esi
  40f03c:	neg    ch
  40f03e:	mov    al,0xb5
  40f040:	mov    ecx,0x588f4684
  40f045:	lock cmovs edi,edx
  40f049:	inc    ebx
  40f04a:	pop    es
  40f04b:	pop    ebp
  40f04c:	in     eax,0x9f
  40f04e:	pop    ds
  40f04f:	loop   0x40f02b
  40f051:	fucomp st(2)
  40f053:	dec    edi
  40f054:	add    DWORD PTR [ebp-0x4a38129],esp
  40f05a:	add    eax,ecx
  40f05c:	jb     0x40f08c
  40f05e:	retf   0xbc7d
  40f061:	fcmovnb st,st(5)
  40f063:	loop   0x40f0b7
  40f065:	jge    0x40f0a5
  40f067:	mov    gs,WORD PTR [ecx]
  40f069:	mov    ebp,0xb9362e80
  40f06e:	(bad)  
  40f06f:	push   ds
  40f070:	(bad)  
  40f071:	loope  0x40f03d
  40f073:	std    
  40f074:	add    DWORD PTR [ecx],ebp
  40f076:	jb     0x40f02e
  40f078:	out    dx,al
  40f079:	cmp    bl,al
  40f07b:	sbb    BYTE PTR [ebx+0x48],ah
  40f07e:	pop    ss
  40f07f:	sub    edx,DWORD PTR [edi]
  40f081:	add    cl,BYTE PTR [edx+ecx*2+0x5800e107]
  40f088:	das    
  40f089:	xchg   BYTE PTR [edi],dh
  40f08b:	jb     0x40f0d0
  40f08d:	fidivr DWORD PTR [eax]
  40f08f:	gs aaa 
  40f091:	scas   al,BYTE PTR es:[edi]
  40f092:	or     BYTE PTR [edx+0x233c631f],dl
  40f098:	xor    al,BYTE PTR [ebp-0x2f5b846d]
  40f09e:	cmc    
  40f09f:	or     eax,0xc977e0b8
  40f0a4:	retf   
  40f0a5:	cmp    DWORD PTR [ebp-0x22],edi
  40f0a8:	jg     0x40f045
  40f0aa:	lds    ebx,FWORD PTR [ebx]
  40f0ac:	sub    DWORD PTR [eax],edx
  40f0ae:	cmc    
  40f0af:	mul    BYTE PTR [ecx-0x5735f1ac]
  40f0b5:	push   esi
  40f0b6:	rol    bl,1
  40f0b8:	push   ss
  40f0b9:	icebp  
  40f0ba:	(bad)  
  40f0bb:	sub    edx,DWORD PTR [ecx+0x6c]
  40f0be:	out    0xbc,eax
  40f0c0:	sub    eax,0xfdb12122
  40f0c5:	into   
  40f0c6:	sbb    BYTE PTR ds:0x95ae6b0f,ah
  40f0cc:	in     al,dx
  40f0cd:	jmp    0xb16c:0x656d44fc
  40f0d4:	mov    cl,0x55
  40f0d6:	dec    esi
  40f0d7:	xor    edi,DWORD PTR [ecx+0x5e9bae01]
  40f0dd:	mov    al,ds:0xe51686a7
  40f0e2:	sub    al,0x8d
  40f0e4:	jp     0x40f0b8
  40f0e6:	popf   
  40f0e7:	push   esi
  40f0e8:	xor    eax,0xea287224
  40f0ed:	push   eax
  40f0ee:	iret   
  40f0ef:	dec    esp
  40f0f0:	test   BYTE PTR [esi+0x21],dl
  40f0f3:	dec    ecx
  40f0f4:	dec    ebx
  40f0f5:	(bad)  
  40f0f6:	xlat   BYTE PTR ds:[ebx]
  40f0f7:	mov    cl,al
  40f0f9:	cmovbe ebp,DWORD PTR [esi-0x15]
  40f0fd:	dec    edi
  40f0fe:	sub    BYTE PTR [ecx-0x12e3850c],ah
  40f104:	push   0xfffffff1
  40f106:	inc    eax
  40f107:	stos   DWORD PTR es:[edi],eax
  40f108:	pop    ss
  40f109:	cmp    ch,0xd1
  40f10c:	mov    BYTE PTR [esi-0x37],0x59
  40f110:	or     al,0x25
  40f112:	pusha  
  40f113:	push   ss
  40f114:	mov    edi,0xb178c73f
  40f119:	mov    dh,0x8c
  40f11b:	sub    bh,BYTE PTR [ecx-0x3ad3f83a]
  40f121:	inc    eax
  40f122:	gs retf 
  40f124:	xchg   al,cl
  40f126:	cvtpi2ps xmm1,QWORD PTR [ebx]
  40f129:	xchg   DWORD PTR [ebx+0x6],esp
  40f12c:	and    BYTE PTR [ebp-0x3b],al
  40f12f:	into   
  40f130:	fs jo  0x40f0bf
  40f133:	jno    0x40f0f9
  40f135:	push   esi
  40f136:	fild   QWORD PTR [esi+0x26]
  40f139:	enter  0x2c59,0x48
  40f13d:	pop    ss
  40f13e:	pop    edx
  40f13f:	inc    esi
  40f140:	adc    ebp,DWORD PTR [ecx]
  40f142:	xor    ebx,esi
  40f144:	test   al,0x11
  40f146:	jle    0x40f0ff
  40f148:	iret   
  40f149:	arpl   WORD PTR [ebp-0x53d72635],ax
  40f14f:	push   ecx
  40f150:	xor    esi,0x3b15e74
  40f156:	push   esi
  40f157:	dec    esi
  40f158:	mov    esi,0xe427d0be
  40f15d:	scas   eax,DWORD PTR es:[edi]
  40f15e:	jle    0x40f100
  40f160:	out    0x91,al
  40f162:	sar    DWORD PTR [esi+ebx*1],cl
  40f165:	inc    eax
  40f166:	mov    ecx,0xb96dbcd1
  40f16b:	mov    al,ds:0xa1e2d6e1
  40f170:	popa   
  40f171:	mov    ?,WORD PTR [edx]
  40f173:	out    dx,eax
  40f174:	bound  edx,QWORD PTR [ebp+0x41342b5f]
  40f17a:	popa   
  40f17b:	mov    bh,0xb
  40f17d:	pop    esi
  40f17e:	clc    
  40f17f:	xchg   ebp,eax
  40f180:	outs   dx,DWORD PTR ds:[esi]
  40f181:	fsub   st(5),st
  40f183:	mov    edi,0xba370e96
  40f188:	in     eax,dx
  40f189:	cwde   
  40f18a:	push   cs
  40f18b:	jmp    0x40f1d8
  40f18d:	pop    esp
  40f18e:	and    DWORD PTR [ecx-0x1ef6a55e],0x41340463
  40f198:	pop    ds
  40f199:	mov    ds:0x5b7b1eae,al
  40f19e:	mov    bl,0x30
  40f1a0:	ds mov edi,cs
  40f1a3:	(bad)  
  40f1a4:	fdivr  DWORD PTR [esi]
  40f1a6:	cmp    eax,0xf7a419ec
  40f1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ac:	pop    edx
  40f1ad:	jl     0x9050bf79
  40f1b3:	mov    ecx,0xfe929026
  40f1b8:	cmp    eax,0x8ab6e1f9
  40f1bd:	jo     0x40f1b4
  40f1bf:	pop    eax
  40f1c0:	cs cld 
  40f1c2:	sub    bl,BYTE PTR [edi]
  40f1c4:	sub    al,0x9c
  40f1c6:	into   
  40f1c7:	dec    ecx
  40f1c8:	add    BYTE PTR [edx+eiz*4],0x11
  40f1cc:	dec    edx
  40f1cd:	mov    dh,0x1b
  40f1cf:	lds    edi,FWORD PTR [ebx+0x2]
  40f1d2:	fild   DWORD PTR [ebx-0x4b7d4a1e]
  40f1d8:	pusha  
  40f1d9:	daa    
  40f1da:	int3   
  40f1db:	push   ebp
  40f1dc:	cmp    al,0x9b
  40f1de:	iret   
  40f1df:	aas    
  40f1e0:	imul   edx,DWORD PTR [ebp+0x77],0xffffffec
  40f1e4:	call   0xdd0ef541
  40f1e9:	pop    ds
  40f1ea:	or     eax,0xe0d43de7
  40f1ef:	mov    edx,0x13d5f7be
  40f1f4:	xchg   ebx,edx
  40f1f6:	fimul  DWORD PTR [eax+0x5606038]
  40f1fc:	jmp    0x78e82342
  40f201:	call   0x9d89:0x2a25
  40f207:	cmp    al,0x9
  40f209:	(bad)  
  40f20a:	jmp    0x41e9540a
  40f20f:	rcr    al,1
  40f211:	inc    esi
  40f212:	lods   al,BYTE PTR ds:[esi]
  40f213:	and    ecx,DWORD PTR [ecx+0x6e05d46c]
  40f219:	xchg   cl,bl
  40f21b:	mov    cl,0xd
  40f21d:	mov    al,0x6d
  40f21f:	sahf   
  40f220:	and    edi,edx
  40f222:	gs push 0x1ae8df54
  40f228:	cmp    DWORD PTR [ecx],eax
  40f22a:	mov    DWORD PTR [ecx+0x585889f6],ebp
  40f230:	ins    DWORD PTR es:[edi],dx
  40f231:	repnz fs nop
  40f234:	(bad)  [edi+0x163fadb2]
  40f23a:	ror    edi,1
  40f23c:	outs   dx,DWORD PTR ds:[esi]
  40f23d:	in     al,dx
  40f23e:	stc    
  40f23f:	test   al,0x21
  40f241:	loopne 0x40f1f5
  40f243:	push   ebx
  40f244:	and    dh,al
  40f246:	ins    DWORD PTR es:[edi],dx
  40f247:	inc    edi
  40f248:	repnz sbb DWORD PTR [ecx],ebp
  40f24b:	ror    BYTE PTR gs:[edx],0x3
  40f24f:	pushf  
  40f250:	dec    edi
  40f251:	adc    eax,0x4376636a
  40f256:	inc    ebx
  40f257:	ret    0x23dc
  40f25a:	mov    ch,0x1e
  40f25c:	scas   al,BYTE PTR es:[edi]
  40f25d:	xor    BYTE PTR [edi+0x4f978c4a],dh
  40f263:	xlat   BYTE PTR ds:[ebx]
  40f264:	mov    ch,0x5a
  40f266:	jae    0x40f2b7
  40f268:	cmp    al,0xcc
  40f26a:	dec    eax
  40f26b:	hlt    
  40f26c:	jp     0x40f25d
  40f26e:	jmp    0x27fe016e
  40f273:	jns    0x40f250
  40f275:	mov    ds:0x830dcc6e,al
  40f27a:	cmp    al,0x5d
  40f27c:	jl     0x40f238
  40f27e:	daa    
  40f27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f280:	xchg   ecx,eax
  40f281:	adc    edx,DWORD PTR [ecx+0x5d95c369]
  40f287:	mov    ebx,ebx
  40f289:	cmc    
  40f28a:	js     0x40f2c2
  40f28c:	loope  0x40f2cd
  40f28e:	jno    0x40f242
  40f290:	xor    DWORD PTR [edx-0x36bbb471],ebx
  40f296:	mov    bh,BYTE PTR [ebp-0x8e22baf]
  40f29c:	xor    BYTE PTR [ecx],al
  40f29e:	mov    bh,0xa8
  40f2a0:	push   eax
  40f2a1:	mov    ebx,0x90b3e73b
  40f2a6:	fisubr DWORD PTR [eax]
  40f2a8:	sbb    bh,BYTE PTR [ecx+0x76]
  40f2ab:	aaa    
  40f2ac:	cdq    
  40f2ad:	fdiv   DWORD PTR [esi-0x4a26e6a1]
  40f2b3:	ss jnp 0x40f265
  40f2b6:	mov    gs,WORD PTR [ecx]
  40f2b8:	gs cli 
  40f2ba:	aaa    
  40f2bb:	push   es
  40f2bc:	jae    0x40f2fe
  40f2be:	pop    eax
  40f2bf:	(bad)  
  40f2c0:	xchg   ebp,eax
  40f2c1:	sbb    al,0x1
  40f2c3:	xchg   ebx,eax
  40f2c4:	pop    ds
  40f2c5:	fisubr DWORD PTR [ebx+0x8]
  40f2c8:	cmp    eax,0xc8bc694d
  40f2cd:	sub    al,0x61
  40f2cf:	sub    BYTE PTR [edx-0x42c4b8ee],al
  40f2d5:	mov    edx,0xb7505cc7
  40f2da:	adc    eax,0x637d1927
  40f2df:	pop    ecx
  40f2e0:	jnp    0x40f310
  40f2e2:	in     al,dx
  40f2e3:	shl    eax,1
  40f2e5:	mov    cl,0x65
  40f2e7:	fisttp WORD PTR [ecx+esi*4-0x295c367a]
  40f2ee:	pop    esi
  40f2ef:	loope  0x40f341
  40f2f1:	or     al,0x3f
  40f2f3:	jb     0x40f291
  40f2f5:	aaa    
  40f2f6:	(bad)  
  40f2f7:	inc    esp
  40f2f8:	mov    cl,0x53
  40f2fa:	mov    dh,0xe
  40f2fc:	daa    
  40f2fd:	jecxz  0x40f2c2
  40f2ff:	outs   dx,BYTE PTR ds:[esi]
  40f300:	mov    DWORD PTR [ebx+eiz*4],ecx
  40f303:	fstp   DWORD PTR [eax]
  40f305:	cli    
  40f306:	or     bh,BYTE PTR [eax-0x59]
  40f309:	pop    esi
  40f30a:	aam    0x4d
  40f30c:	out    dx,al
  40f30d:	mov    eax,ds:0xaf0b4dd6
  40f312:	faddp  st(4),st
  40f314:	xchg   BYTE PTR [eax-0x20fbf344],ch
  40f31a:	popf   
  40f31b:	sub    al,0xf2
  40f31d:	or     al,0x86
  40f31f:	retf   
  40f320:	xchg   edx,eax
  40f321:	jle    0x40f302
  40f323:	pop    edx
  40f324:	jg     0x40f34e
  40f326:	lods   al,BYTE PTR ds:[esi]
  40f327:	pop    esp
  40f328:	inc    edi
  40f329:	cwde   
  40f32a:	and    esi,DWORD PTR [esi-0x33e16da4]
  40f330:	push   ebp
  40f331:	jmp    0x98ac:0x5db34fae
  40f338:	popa   
  40f339:	jnp    0x40f359
  40f33b:	pop    edx
  40f33c:	add    esi,ebx
  40f33e:	(bad)  
  40f33f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f340:	out    0xc,eax
  40f342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f343:	or     edi,DWORD PTR [edx]
  40f345:	nop
  40f346:	pop    es
  40f347:	hlt    
  40f348:	mov    ?,ebx
  40f34a:	ins    BYTE PTR es:[edi],dx
  40f34b:	pusha  
  40f34c:	ss mov dl,0x14
  40f34f:	fdiv   DWORD PTR [ebx]
  40f351:	std    
  40f352:	mov    al,0x1
  40f354:	(bad)  
  40f355:	xor    ecx,DWORD PTR [edi+ebp*1-0x11]
  40f359:	add    al,0xf
  40f35b:	or     al,0x18
  40f35d:	sar    DWORD PTR [eax-0x25],0x13
  40f361:	inc    ebx
  40f362:	es dec esi
  40f364:	jecxz  0x40f308
  40f366:	popa   
  40f367:	out    0xcd,eax
  40f369:	out    0x36,eax
  40f36b:	ror    BYTE PTR [ebp+0x2d],cl
  40f36e:	sub    eax,0xa2c99a3b
  40f373:	mov    edx,0x681e1ae9
  40f378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f379:	retf   
  40f37a:	stc    
  40f37b:	enter  0x1d5b,0x14
  40f37f:	xor    eax,0xfb331a8b
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x37fc3695,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	ja     0x40f4e3
  40f485:	fisttp QWORD PTR [edx]
  40f487:	mov    ebx,0xcd7a12d3
  40f48c:	xchg   DWORD PTR [edx+0x13b4acb5],esi
  40f492:	outs   dx,DWORD PTR ds:[esi]
  40f493:	adc    eax,0x15115787
  40f498:	or     DWORD PTR [eax+0x11],eax
  40f49b:	inc    esi
  40f49c:	xchg   edx,eax
  40f49d:	mov    esi,0x25d755fb
  40f4a2:	inc    ebx
  40f4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4a4:	add    al,0x71
  40f4a6:	xor    eax,0x2a2a0f85
  40f4ab:	push   esi
  40f4ac:	push   ss
  40f4ad:	mov    ch,0xe2
  40f4af:	(bad)
  40f4b2:	inc    esp
  40f4b3:	mov    esi,ebx
  40f4b5:	sbb    eax,0xa84e90a4
  40f4ba:	call   0x639e4fd5
  40f4bf:	push   eax
  40f4c0:	aad    0x1a
  40f4c2:	fdiv   QWORD PTR [esp+edx*8]
  40f4c5:	icebp  
  40f4c6:	aas    
  40f4c7:	mov    ah,0x8f
  40f4c9:	or     al,0x48
  40f4cb:	out    dx,al
  40f4cc:	mov    dl,BYTE PTR [eax-0x3d]
  40f4cf:	push   ebx
  40f4d0:	pop    ebx
  40f4d1:	pop    ds
  40f4d2:	stos   DWORD PTR es:[edi],eax
  40f4d3:	pop    edx
  40f4d4:	enter  0x4693,0xdf
  40f4d8:	mov    esi,0xc479056b
  40f4dd:	dec    esp
  40f4de:	popaw  
  40f4e0:	adc    cl,BYTE PTR [esi+0xc1f2681]
  40f4e6:	nop
  40f4e7:	mov    ebx,0xa7dd6678
  40f4ec:	shl    DWORD PTR [eax-0x413c51e7],1
  40f4f2:	ins    DWORD PTR es:[edi],dx
  40f4f3:	lock mov ebx,0xa38a001e
  40f4f9:	xor    dl,BYTE PTR [edi+0x50]
  40f4fc:	(bad)  
  40f4fd:	pop    ebx
  40f4fe:	mov    ah,0x76
  40f500:	dec    edi
  40f501:	retf   0xb83b
  40f504:	aad    0xa0
  40f506:	clc    
  40f507:	cmp    dl,bl
  40f509:	sbb    eax,0xcdb586cf
  40f50e:	js     0x40f566
  40f510:	ds push ss
  40f512:	outs   dx,DWORD PTR ds:[esi]
  40f513:	sti    
  40f514:	int3   
  40f515:	(bad)  
  40f516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f517:	dec    edx
  40f518:	mov    esp,0xe58ee43e
  40f51d:	jns    0x40f4c5
  40f51f:	push   ebx
  40f520:	dec    edi
  40f521:	xchg   esp,eax
  40f522:	or     dl,ch
  40f524:	cmc    
  40f525:	stos   DWORD PTR es:[edi],eax
  40f526:	xlat   BYTE PTR ds:[ebx]
  40f527:	inc    edx
  40f528:	rol    BYTE PTR [edx-0x50],1
  40f52b:	out    0x2,al
  40f52d:	out    dx,eax
  40f52e:	arpl   si,si
  40f530:	sub    al,BYTE PTR [edx+0x2d8fd09]
  40f536:	or     eax,0x5b4d9195
  40f53b:	jmp    0xbaeb7f81
  40f540:	addr16 dec edx
  40f542:	cli    
  40f543:	inc    edi
  40f544:	inc    edi
  40f545:	test   al,0xc7
  40f547:	jne    0x40f5c1
  40f549:	sub    al,0xe8
  40f54b:	cmp    al,0xf2
  40f54d:	popa   
  40f54e:	adc    edi,DWORD PTR [ebp+0x16]
  40f551:	mov    cs,WORD PTR [eax+0x2c]
  40f554:	pop    ss
  40f555:	sbb    bh,BYTE PTR [ebx-0x1925836c]
  40f55b:	cld    
  40f55c:	es ja  0x40f53e
  40f55f:	jno    0x40f582
  40f561:	sbb    bh,BYTE PTR ds:[esi+0x29a68e26]
  40f568:	inc    eax
  40f569:	mov    bl,0x43
  40f56b:	xchg   edi,eax
  40f56c:	mov    cl,0xeb
  40f56e:	out    0x1,al
  40f570:	test   DWORD PTR [ebp-0x7c],ecx
  40f573:	loope  0x40f5f2
  40f575:	mov    ch,0x94
  40f577:	xor    bh,BYTE PTR [ebx+0x73]
  40f57a:	lods   eax,DWORD PTR ds:[esi]
  40f57b:	scas   al,BYTE PTR es:[edi]
  40f57c:	aaa    
  40f57d:	test   BYTE PTR [ebx+edi*4+0x7d6aeb58],0x3
  40f585:	inc    ecx
  40f586:	xchg   ebp,eax
  40f587:	pop    ebp
  40f588:	out    0xb0,eax
  40f58a:	inc    edx
  40f58b:	push   ds
  40f58c:	mov    edx,0x3071381f
  40f591:	mov    ebx,DWORD PTR [eax]
  40f593:	and    DWORD PTR [edx-0x155f3adc],esp
  40f599:	enter  0xe34b,0xd4
  40f59d:	out    0xc4,al
  40f59f:	dec    ebp
  40f5a0:	mov    esi,0xae9766d8
  40f5a5:	mov    DWORD PTR [ebx-0xd],ebp
  40f5a8:	mov    eax,0x3d7f4389
  40f5ad:	clc    
  40f5ae:	out    0xcb,eax
  40f5b0:	retf   
  40f5b1:	xchg   esp,eax
  40f5b2:	xchg   BYTE PTR [edi],al
  40f5b4:	dec    esi
  40f5b5:	fdivr  QWORD PTR [esi]
  40f5b7:	outs   dx,BYTE PTR ds:[esi]
  40f5b8:	or     dh,dl
  40f5ba:	xor    BYTE PTR [ebx+0x2d7e002f],al
  40f5c0:	aaa    
  40f5c1:	fadd   DWORD PTR [eax]
  40f5c3:	ds das 
  40f5c5:	mov    esi,0x4f23e13a
  40f5ca:	lods   al,BYTE PTR ds:[esi]
  40f5cb:	mov    ds:0x433bee76,eax
  40f5d0:	in     al,0xb3
  40f5d2:	icebp  
  40f5d3:	aaa    
  40f5d4:	lea    esp,[ebp+0x5f]
  40f5d7:	pop    edx
  40f5d8:	add    al,0x93
  40f5da:	popf   
  40f5db:	push   edi
  40f5dc:	(bad)  
  40f5dd:	xor    ecx,DWORD PTR cs:[edx-0x18]
  40f5e1:	or     al,0x1f
  40f5e3:	test   DWORD PTR [ecx-0x22446999],esp
  40f5e9:	fcom   DWORD PTR [edi-0x39]
  40f5ec:	sub    eax,0x91548511
  40f5f1:	outs   dx,DWORD PTR ds:[esi]
  40f5f2:	clc    
  40f5f3:	jmp    0xf956:0x79c54377
  40f5fa:	js     0x40f5fb
  40f5fc:	and    BYTE PTR [esi-0x5c16c6d3],ah
  40f602:	sbb    BYTE PTR [eax-0x4a9e0f76],dh
  40f608:	(bad)  
  40f609:	xor    BYTE PTR [ebp+0x5394d095],bl
  40f60f:	and    eax,0x25ba8e8c
  40f614:	rol    BYTE PTR [edi-0x45],cl
  40f617:	sub    eax,DWORD PTR [eax-0x1f]
  40f61a:	mov    ebx,0x2ea6a1af
  40f61f:	adc    al,0x6d
  40f621:	je     0x40f601
  40f623:	rol    edi,1
  40f625:	and    al,0x17
  40f627:	inc    ecx
  40f628:	add    ch,bl
  40f62a:	jne    0x40f63a
  40f62c:	pop    ebp
  40f62d:	xchg   edi,eax
  40f62e:	push   ds
  40f62f:	xor    al,0xb5
  40f631:	arpl   WORD PTR [edx],cx
  40f633:	inc    ebp
  40f634:	lea    ebp,[ecx]
  40f636:	je     0x40f66a
  40f638:	imul   eax,DWORD PTR [edx],0xffffff99
  40f63b:	aam    0x8f
  40f63d:	sar    DWORD PTR [edx+0x5ab167c6],cl
  40f643:	mov    gs,WORD PTR [edi]
  40f645:	call   0x820c:0xc1e3f19f
  40f64c:	jno    0x40f6b6
  40f64e:	lock push ecx
  40f650:	jle    0x40f686
  40f652:	pop    edi
  40f653:	mov    BYTE PTR [bx+si],al
  40f656:	dec    ebp
  40f657:	lea    ebp,[ecx+edx*8+0x75]
  40f65b:	add    ecx,DWORD PTR [eax-0x6f03ec33]
  40f661:	ss loope 0x40f620
  40f664:	cmp    al,0x1b
  40f666:	mov    ebp,0xdfa38b1c
  40f66b:	jo     0x40f6c9
  40f66d:	loop   0x40f607
  40f66f:	shl    edx,cl
  40f671:	mov    ch,0x27
  40f673:	aas    
  40f674:	iret   
  40f675:	loop   0x40f61d
  40f677:	jg     0x40f62d
  40f679:	fnstsw WORD PTR [eax+0x2a3dd269]
  40f67f:	std    
  40f680:	scas   al,BYTE PTR es:[edi]
  40f681:	add    esp,DWORD PTR [ebp-0x45]
  40f684:	xchg   edi,eax
  40f685:	jl     0x40f663
  40f687:	mov    al,0x98
  40f689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f68a:	loope  0x40f60e
  40f68c:	das    
  40f68d:	pop    esi
  40f68e:	inc    eax
  40f68f:	mov    esi,0xea726e55
  40f694:	call   0x632:0xeaf70734
  40f69b:	jno    0x40f61f
  40f69d:	mov    ds:0xfc705a86,eax
  40f6a2:	mov    ebx,0xc602ac7
  40f6a7:	popf   
  40f6a8:	sbb    eax,0x66f360eb
  40f6ad:	push   esp
  40f6ae:	push   0x32
  40f6b0:	mov    ebx,0xd653e8ef
  40f6b5:	out    0x64,al
  40f6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6b8:	test   DWORD PTR [eiz*8+0x5f0f131e],ebp
  40f6bf:	icebp  
  40f6c0:	popf   
  40f6c1:	scas   al,BYTE PTR es:[edi]
  40f6c2:	mov    esp,0xeafd7306
  40f6c7:	shl    esp,1
  40f6c9:	adc    al,0xbd
  40f6cb:	cmc    
  40f6cc:	dec    ebp
  40f6cd:	out    0x8d,eax
  40f6cf:	pop    ecx
  40f6d0:	sbb    edx,DWORD PTR [edx+0x2186365]
  40f6d6:	hlt    
  40f6d7:	fcom   DWORD PTR [ecx+0x28]
  40f6da:	ret    0x45dd
  40f6dd:	inc    esp
  40f6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6df:	mov    al,0xbb
  40f6e1:	mov    DWORD PTR [eax],0x93419b8a
  40f6e7:	sub    al,0x3c
  40f6e9:	add    ebx,DWORD PTR cs:[edx+0x49]
  40f6ed:	sub    dl,0x2
  40f6f0:	mov    al,ds:0x95507701
  40f6f5:	xor    esp,DWORD PTR fs:[edi]
  40f6f8:	push   ebx
  40f6f9:	or     ebx,DWORD PTR [eax-0x1f]
  40f6fc:	push   edx
  40f6fd:	test   al,0xfb
  40f6ff:	xor    DWORD PTR [ecx],eax
  40f701:	mov    ah,0x6d
  40f703:	mov    al,0x4e
  40f705:	push   esi
  40f706:	jle    0x40f783
  40f708:	aaa    
  40f709:	xor    al,BYTE PTR [esi+0x790ab1de]
  40f70f:	and    BYTE PTR [edx-0x59abbd37],dh
  40f715:	push   ss
  40f716:	cld    
  40f717:	inc    DWORD PTR [edx]
  40f719:	pop    ebx
  40f71a:	or     DWORD PTR ds:0xb6c80627,edx
  40f720:	sub    al,0x1a
  40f722:	test   al,0x9a
  40f724:	mov    bh,0xb2
  40f726:	sar    BYTE PTR [ebp-0x80],1
  40f729:	loope  0x40f775
  40f72b:	rcl    BYTE PTR ds:0x2d747ec3,0xcd
  40f732:	push   edi
  40f734:	arpl   dx,di
  40f736:	push   ebp
  40f737:	mov    dh,0xc5
  40f739:	mov    al,0xcd
  40f73b:	scas   eax,DWORD PTR es:[edi]
  40f73c:	popa   
  40f73d:	loope  0x40f756
  40f73f:	mov    edi,0xad44ce4c
  40f744:	clc    
  40f745:	and    al,0x66
  40f747:	call   0xf2ff0278
  40f74c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f74d:	add    ebp,DWORD PTR [edx-0x58]
  40f750:	popf   
  40f751:	imul   edi,DWORD PTR [ecx+0x7708df9c],0x47b6fe86
  40f75b:	(bad)  
  40f75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f75e:	pushf  
  40f75f:	xchg   ebx,eax
  40f760:	and    eax,0x2b17f0ec
  40f765:	je     0x40f720
  40f767:	mov    edx,0xc4cd69b9
  40f76c:	ja     0x40f6f4
  40f76e:	jo     0x40f780
  40f770:	push   ds
  40f771:	loop   0x40f76e
  40f773:	lods   eax,DWORD PTR ds:[esi]
  40f774:	dec    esp
  40f775:	mov    bh,0xd
  40f777:	fcom   st(7)
  40f779:	fistp  QWORD PTR [ebx+eax*4+0x6bcc4995]
  40f780:	mov    al,0xf6
  40f782:	pop    eax
  40f783:	inc    esi
  40f784:	dec    esi
  40f785:	mov    al,ds:0x1926b4a8
  40f78a:	cmp    DWORD PTR [esi],0xa3a5303c
  40f790:	pushf  
  40f791:	jl     0x40f729
  40f793:	push   0xb505c9c7
  40f798:	dec    edi
  40f799:	mov    eax,0x1e846ebe
  40f79e:	mov    ecx,0x11b1c40c
  40f7a3:	fst    QWORD PTR [edi+0x4]
  40f7a6:	test   eax,0xafe29b4f
  40f7ab:	jmp    0x4dce:0xd92d161d
  40f7b2:	dec    esp
  40f7b3:	dec    DWORD PTR [ebp-0x70b5d898]
  40f7b9:	out    dx,al
  40f7ba:	cmovl  ebx,DWORD PTR [ebp-0x10]
  40f7be:	repnz xchg edi,eax
  40f7c0:	sbb    eax,eax
  40f7c2:	push   cs
  40f7c3:	stos   BYTE PTR es:[edi],al
  40f7c4:	cwde   
  40f7c5:	dec    eax
  40f7c6:	dec    eax
  40f7c7:	sub    eax,0x7eb4d709
  40f7cc:	aad    0x30
  40f7ce:	test   eax,0xfa4c683d
  40f7d3:	bound  eax,QWORD PTR [ecx+0x4d]
  40f7d6:	stc    
  40f7d7:	and    eax,0xb01bd661
  40f7dc:	mov    eax,0xc47f903
  40f7e1:	jbe    0x40f78a
  40f7e3:	mov    ebp,0x71d37c3
  40f7e8:	pop    ebp
  40f7e9:	mov    ecx,0x8b8ad20f
  40f7ee:	or     DWORD PTR [edi],ecx
  40f7f0:	call   0xe868e8e8
  40f7f5:	adc    ebp,DWORD PTR [ebx-0x7616e51b]
  40f7fb:	lahf   
  40f7fc:	xchg   BYTE PTR [ebx+0x7f],cl
  40f7ff:	xor    al,BYTE PTR [edx+0x4490c202]
  40f805:	lock mov eax,0x133cb55f
  40f80b:	or     al,0x56
  40f80d:	loope  0x40f839
  40f80f:	test   BYTE PTR [edx],0x3
  40f812:	or     BYTE PTR [eax+0x2a],al
  40f815:	das    
  40f816:	es ret 0xc6e7
  40f81a:	jne    0x40f7c8
  40f81c:	or     al,0x9e
  40f81e:	cmp    ebp,edx
  40f820:	popf   
  40f821:	jb     0x40f857
  40f823:	mov    ebp,0xd18a403c
  40f828:	pop    ecx
  40f829:	push   ebx
  40f82a:	inc    ecx
  40f82b:	aam    0x74
  40f82d:	outs   dx,DWORD PTR ds:[esi]
  40f82e:	popa   
  40f82f:	les    esi,FWORD PTR [edi]
  40f831:	or     eax,0x5c1e6c0a
  40f836:	popa   
  40f837:	xor    DWORD PTR [ecx+edi*1-0x4afc7b35],ebx
  40f83e:	data16 data16 mov al,ds:0x253f4724
  40f845:	sahf   
  40f846:	call   0x659c420e
  40f84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f84c:	fs push cs
  40f84e:	mov    eax,0x97b61229
  40f853:	xchg   DWORD PTR [ebx+0x48],esp
  40f856:	mov    eax,0x770dcb15
  40f85b:	stc    
  40f85c:	sahf   
  40f85d:	in     eax,dx
  40f85e:	inc    esi
  40f85f:	daa    
  40f860:	sub    BYTE PTR fs:[ecx+0x24],bl
  40f864:	cmp    bh,BYTE PTR [edx]
  40f866:	mov    esi,DWORD PTR [ebp+0x14]
  40f869:	je     0x40f7ff
  40f86b:	fstp   st(2)
  40f86d:	in     al,dx
  40f86e:	retw   
  40f870:	xor    eax,0x22c033ff
  40f875:	(bad)  
  40f876:	sub    eax,0xccecd84c
  40f87b:	loop   0x40f8f5
  40f87d:	push   edx
  40f87e:	add    edi,DWORD PTR [ebx]
  40f880:	or     eax,0xe504a25b
  40f885:	outs   dx,DWORD PTR ds:[esi]
  40f886:	dec    ecx
  40f887:	xchg   esi,eax
  40f888:	enter  0x927c,0xba
  40f88c:	sti    
  40f88d:	mov    ebx,0xdd029f24
  40f892:	sbb    ch,al
  40f894:	or     DWORD PTR [eax],0x3a48b7c9
  40f89a:	or     al,0x70
  40f89c:	in     eax,dx
  40f89d:	push   es
  40f89e:	aam    0xba
  40f8a0:	adc    ebp,DWORD PTR [edx+eiz*2]
  40f8a3:	xchg   ah,dl
  40f8a5:	push   eax
  40f8a6:	add    al,0xcf
  40f8a8:	call   0xfb34:0xad70c17f
  40f8af:	mov    ch,0x39
  40f8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b2:	push   cs
  40f8b3:	adc    BYTE PTR [edi],ah
  40f8b5:	adc    BYTE PTR [edx+edx*1+0x48],al
  40f8b9:	loopne 0x40f922
  40f8bb:	cs push ecx
  40f8bd:	addr16 xchg edi,eax
  40f8bf:	pop    DWORD PTR [ebx+0x39]
  40f8c2:	cs aas 
  40f8c4:	sub    eax,DWORD PTR [eax+ebx*2+0x31]
  40f8c8:	mov    al,0x85
  40f8ca:	sar    BYTE PTR [ebp-0x4629907e],cl
  40f8d0:	jle    0x40f8e6
  40f8d2:	and    eax,0x866f4383
  40f8d7:	das    
  40f8d8:	push   ds
  40f8d9:	jp     0x40f8e5
  40f8db:	mov    al,0x70
  40f8dd:	(bad)  
  40f8de:	cmp    DWORD PTR [ecx-0x5886db4d],esp
  40f8e4:	call   0x336:0xc7c58b7e
  40f8eb:	call   0x17bf:0x9088820f
  40f8f2:	ins    BYTE PTR es:[edi],dx
  40f8f3:	jnp    0x40f950
  40f8f5:	pop    edx
  40f8f6:	push   0x3f
  40f8f8:	adc    ch,al
  40f8fa:	fwait
  40f8fb:	pop    ds
  40f8fc:	xchg   ebx,eax
  40f8fd:	xchg   edx,eax
  40f8fe:	sub    edx,DWORD PTR [edx+edx*1+0x1eacceaf]
  40f905:	in     al,0x9f
  40f907:	mov    esi,edx
  40f909:	jno    0x40f975
  40f90b:	sub    al,0xf7
  40f90d:	add    bh,dh
  40f90f:	sbb    eax,0x50cbd05
  40f914:	sbb    bh,BYTE PTR [edx-0x189e8225]
  40f91a:	mov    dl,dl
  40f91c:	or     al,0x4d
  40f91e:	aad    0xa6
  40f920:	ret    0xb6f9
  40f923:	jbe    0x40f942
  40f925:	cmp    ebx,esi
  40f927:	jbe    0x40f8bd
  40f929:	mov    dh,0x12
  40f92b:	pop    ebp
  40f92c:	xchg   DWORD PTR [ebx-0x51c7413],ebp
  40f932:	mov    edx,0x7ab79cf2
  40f937:	push   ds
  40f938:	mov    esp,0x873f086
  40f93d:	stc    
  40f93e:	stos   DWORD PTR es:[edi],eax
  40f93f:	inc    edx
  40f940:	bound  eax,QWORD PTR [eax]
  40f942:	(bad)  
  40f943:	loope  0x40f8d8
  40f945:	jecxz  0x40f9a8
  40f947:	xor    eax,0x86735c1
  40f94c:	mov    si,0x7404
  40f950:	sbb    BYTE PTR [eax-0x7c98fb80],0x22
  40f957:	adc    esi,DWORD PTR [ebx-0x55]
  40f95a:	sbb    bh,dl
  40f95c:	out    0x60,al
  40f95e:	inc    ebp
  40f960:	mov    bl,0xf7
  40f962:	pop    es
  40f963:	ror    BYTE PTR [ecx-0x4baa44dd],cl
  40f969:	push   ebp
  40f96a:	bound  esi,QWORD PTR [edi+0x1c030755]
  40f970:	clc    
  40f971:	nop
  40f972:	imul   edx,DWORD PTR [edx-0x74],0xb4ae8a7e
  40f979:	cld    
  40f97a:	mov    eax,ds:0xca0585f3
  40f97f:	test   DWORD PTR [edx],ebx
  40f981:	adc    al,0xdc
  40f983:	xor    DWORD PTR [edi-0x7f],0xffffffd8
  40f987:	xlat   BYTE PTR ds:[ebx]
  40f988:	pop    edi
  40f989:	sub    bl,ch
  40f98b:	inc    ebp
  40f98c:	scas   eax,DWORD PTR es:[edi]
  40f98d:	push   esp
  40f98e:	jbe    0x40f9be
  40f990:	dec    edx
  40f991:	shl    DWORD PTR [ebx],0xa6
  40f994:	or     ah,BYTE PTR [edi-0x76]
  40f997:	and    al,ch
  40f999:	je     0x40fa01
  40f99b:	ret    0x6c87
  40f99e:	leave  
  40f99f:	push   ss
  40f9a0:	arpl   WORD PTR ds:0xc67fe285,dx
  40f9a6:	sub    cl,BYTE PTR [ecx-0x49fa0a23]
  40f9ac:	xlat   BYTE PTR ds:[ebx]
  40f9ad:	dec    esp
  40f9ae:	(bad)  
  40f9af:	or     al,0xa0
  40f9b1:	sbb    bl,bh
  40f9b3:	xor    BYTE PTR [edi+0x37d87c0e],al
  40f9b9:	mov    ecx,DWORD PTR [ebx-0x6220f166]
  40f9bf:	ins    DWORD PTR es:[edi],dx
  40f9c0:	sub    BYTE PTR ds:0xb38f5125,dh
  40f9c6:	pop    esi
  40f9c7:	leave  
  40f9c8:	fisubr WORD PTR [edx+ebp*4]
  40f9cb:	cs or  al,0xb6
  40f9ce:	ficomp DWORD PTR [ecx+0x23]
  40f9d1:	mov    ds,WORD PTR [ecx+0x6cba67c7]
  40f9d7:	push   ebp
  40f9d8:	aad    0x61
  40f9da:	add    dh,BYTE PTR [esi-0x3c6ea96b]
  40f9e0:	and    al,0x9a
  40f9e2:	or     BYTE PTR [ebx],0xf5
  40f9e5:	cmp    bl,BYTE PTR [eax]
  40f9e7:	mov    ss,WORD PTR [edi-0x5d]
  40f9ea:	jle    0x40f9f4
  40f9ec:	and    al,0x63
  40f9ee:	je     0x40f9fd
  40f9f0:	adc    dl,al
  40f9f2:	xor    DWORD PTR [eax],esp
  40f9f4:	js     0x40fa3a
  40f9f6:	inc    ebx
  40f9f7:	xchg   ecx,eax
  40f9f8:	xchg   esi,eax
  40f9f9:	adc    BYTE PTR [edi+ebx*1],bh
  40f9fc:	cmp    eax,0xa9b54b41
  40fa01:	int3   
  40fa02:	mov    eax,0x4b4a06cc
  40fa07:	out    0xf1,eax
  40fa09:	mov    eax,ds:0x45aa2274
  40fa0e:	les    eax,FWORD PTR [ebp-0x676ab039]
  40fa14:	mov    ds:0xe76b1476,eax
  40fa19:	pop    esp
  40fa1a:	xchg   ebp,eax
  40fa1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa1c:	or     eax,0x88332afb
  40fa21:	adc    DWORD PTR [ecx+0x7d],esp
  40fa24:	inc    esp
  40fa25:	push   ebx
  40fa26:	inc    ebx
  40fa27:	or     al,BYTE PTR [edi+0x78fc9ebc]
  40fa2d:	pop    ebp
  40fa2e:	cmc    
  40fa2f:	iret   
  40fa30:	cmp    edi,eax
  40fa32:	gs pop ecx
  40fa34:	popa   
  40fa35:	sub    DWORD PTR [eax-0x177e06fd],edx
  40fa3b:	sbb    eax,0x49b77888
  40fa40:	mov    ch,0x87
  40fa42:	js     0x40f9f4
  40fa44:	test   al,0x57
  40fa46:	sub    esi,esp
  40fa48:	adc    dh,bh
  40fa4a:	repz inc edi
  40fa4c:	adc    cl,BYTE PTR [edi]
  40fa4e:	fmul   DWORD PTR [eax]
  40fa50:	stc    
  40fa51:	lock lea ebp,[eax-0x4906c68f]
  40fa58:	add    ch,BYTE PTR [ecx+0x30]
  40fa5b:	push   ecx
  40fa5c:	rcl    BYTE PTR [edx],cl
  40fa5e:	xchg   esp,eax
  40fa5f:	enter  0xb886,0x5c
  40fa63:	cmp    al,0xb4
  40fa65:	fistp  WORD PTR [ebp+0x63a7ce35]
  40fa6b:	cmp    eax,0x9d0a2365
  40fa70:	call   0xea62:0x9745bde3
  40fa77:	pop    ebx
  40fa78:	bound  ecx,QWORD PTR [edi]
  40fa7a:	mov    ebp,0x27bad0f9
  40fa7f:	iret   
  40fa80:	and    eax,edx
  40fa82:	popf   
  40fa83:	mov    ?,WORD PTR [ebp-0x64]
  40fa86:	push   cs
  40fa87:	xchg   ebx,eax
  40fa88:	dec    ecx
  40fa89:	dec    ebp
  40fa8a:	ins    BYTE PTR es:[edi],dx
  40fa8b:	test   BYTE PTR [esi+eax*4+0x490b13d2],al
  40fa92:	mov    al,cl
  40fa94:	sar    DWORD PTR [ecx-0x54],cl
  40fa97:	repnz xor ah,bh
  40fa9a:	pop    es
  40fa9b:	shr    DWORD PTR [eax-0x13],cl
  40fa9e:	mov    ebp,DWORD PTR [edx+0x682d0771]
  40faa4:	leave  
  40faa5:	and    DWORD PTR [edi+esi*2+0x5e],edx
  40faa9:	or     bl,al
  40faab:	push   es
  40faac:	add    edx,DWORD PTR [edi+eax*4+0x19]
  40fab0:	pushf  
  40fab1:	in     eax,dx
  40fab2:	jns    0x40fad5
  40fab4:	fsubp  st(2),st
  40fab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fab7:	add    al,0xc2
  40fab9:	pop    esi
  40faba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fabb:	jb     0x40fb34
  40fabd:	ins    DWORD PTR es:[edi],dx
  40fabe:	icebp  
  40fabf:	mov    DWORD PTR [ebp-0x11],0xcab191ed
  40fac6:	push   eax
  40fac7:	jnp    0x40fb0e
  40fac9:	mov    al,ds:0xf4ac3d3f
  40face:	hlt    
  40facf:	scas   al,BYTE PTR es:[edi]
  40fad0:	xor    dh,bh
  40fad2:	adc    eax,eax
  40fad4:	pop    ebp
  40fad5:	je     0x40fb3f
  40fad7:	in     al,0xb5
  40fad9:	push   es
  40fada:	mov    ecx,0x7da3d82f
  40fadf:	into   
  40fae0:	or     al,0xc4
  40fae2:	and    DWORD PTR [eax+0x3984e232],ebp
  40fae8:	cmp    BYTE PTR [edi],0x56
  40faeb:	push   0xffffffb3
  40faed:	(bad)  
  40faee:	test   al,0xfd
  40faf0:	xchg   ebp,eax
  40faf1:	inc    esp
  40faf2:	adc    ebp,esp
  40faf4:	mov    ds:0x3faab403,eax
  40faf9:	repnz sub cx,WORD PTR [edi+ecx*1]
  40fafe:	mov    WORD PTR [edi],?
  40fb00:	fstp   st(1)
  40fb02:	mov    ebx,0x9268095f
  40fb07:	and    eax,DWORD PTR [ebx]
  40fb09:	jp     0x40fade
  40fb0b:	aam    0x19
  40fb0d:	push   ecx
  40fb0e:	or     ch,BYTE PTR [ecx+0xb353eca]
  40fb14:	lods   al,BYTE PTR ds:[esi]
  40fb15:	cmp    ecx,edx
  40fb17:	push   ss
  40fb18:	int3   
  40fb19:	mov    fs,WORD PTR [ebp+0x3]
  40fb1c:	bound  ebp,QWORD PTR [esi-0x6d]
  40fb1f:	rcr    DWORD PTR [ebp+0x527428e2],cl
  40fb25:	(bad)  
  40fb26:	sti    
  40fb27:	mov    edx,gs
  40fb29:	and    al,0x29
  40fb2b:	push   edi
  40fb2c:	std    
  40fb2d:	xor    eax,0xddd09e21
  40fb32:	cmp    DWORD PTR [ebx+0x3f92428d],ebp
  40fb38:	mov    esi,0xf95127db
  40fb3d:	xchg   esi,eax
  40fb3e:	mov    WORD PTR [ebx-0x1526bba0],fs
  40fb44:	push   ds
  40fb45:	sbb    BYTE PTR [ebx-0x4],0x39
  40fb49:	hlt    
  40fb4a:	sub    al,0x3a
  40fb4c:	inc    eax
  40fb4d:	loop   0x40fbc0
  40fb4f:	inc    ebp
  40fb50:	fnstcw WORD PTR [edi-0x29]
  40fb53:	stc    
  40fb54:	(bad)  
  40fb55:	push   ebx
  40fb56:	pop    esi
  40fb57:	push   cs
  40fb58:	sub    al,0x77
  40fb5a:	add    eax,0x63809af7
  40fb5f:	(bad)  
  40fb60:	dec    edx
  40fb61:	or     ebp,DWORD PTR [esi-0x7ba7ae31]
  40fb67:	mov    ebx,0x581cf3d7
  40fb6c:	sub    dl,ah
  40fb6e:	mov    esp,0x83547af
  40fb73:	jmp    0x40fbe4
  40fb75:	mov    al,ds:0x54109723
  40fb7a:	(bad)  
  40fb7c:	jge    0x40fb53
  40fb7e:	and    DWORD PTR [eax],esi
  40fb80:	push   0x7d049f22
  40fb85:	or     eax,edi
  40fb87:	sti    
  40fb88:	cmp    al,0x98
  40fb8a:	repnz mov ch,0xfa
  40fb8d:	sub    BYTE PTR [esi-0x18c7b14d],dl
  40fb93:	and    al,0xd4
  40fb95:	cmp    cl,cl
  40fb97:	jg     0x40fbfd
  40fb99:	je     0x40fbf5
  40fb9b:	mov    esi,0x1f52fe0d
  40fba0:	es push ebp
  40fba2:	mov    edx,0xb4c1e959
  40fba7:	cld    
  40fba8:	xchg   ebp,eax
  40fba9:	adc    al,0x27
  40fbab:	cmp    ebx,DWORD PTR [eax+esi*8+0x2b9f3ed1]
  40fbb2:	imul   edx,DWORD PTR [eax+0x9],0x99ac097c
  40fbb9:	pop    ebx
  40fbba:	nop
  40fbbb:	fld    DWORD PTR [esi-0x28e94683]
  40fbc1:	mov    dl,0x83
  40fbc3:	lock xor edx,DWORD PTR [eax+0x7e08cd9e]
  40fbca:	ja     0x40fbc9
  40fbcc:	adc    eax,0xdd62b398
  40fbd1:	pop    esi
  40fbd2:	lahf   
  40fbd3:	ss ins BYTE PTR es:[edi],dx
  40fbd5:	jns    0x40fbb1
  40fbd7:	mov    BYTE PTR [ebp+ebp*4+0x67ae4a5f],cl
  40fbde:	nop
  40fbdf:	xlat   BYTE PTR ds:[ebx]
  40fbe0:	ficomp DWORD PTR [ebx+0x52f59c16]
  40fbe6:	jns    0x40fc4e
  40fbe8:	add    DWORD PTR [esi+edx*1+0x38],eax
  40fbec:	les    edi,FWORD PTR [edi]
  40fbee:	xor    DWORD PTR [edx],ecx
  40fbf0:	xor    eax,0x3234f654
  40fbf5:	lods   al,BYTE PTR ds:[esi]
  40fbf6:	mov    ds:0x99e8dc9e,eax
  40fbfb:	jmp    0xe61f1779
  40fc00:	fst    QWORD PTR [edx-0x3e0b8e35]
  40fc06:	ins    BYTE PTR es:[edi],dx
  40fc07:	jge    0x40fbbc
  40fc09:	cmp    DWORD PTR [edx],esp
  40fc0b:	fldenv [ebx+0x53beedb0]
  40fc11:	in     eax,0xd
  40fc13:	ret    
  40fc14:	jmp    0x40fbde
  40fc16:	mov    ds:0x29bcecbe,al
  40fc1b:	loopne 0x40fc5d
  40fc1d:	mov    dh,0x24
  40fc1f:	nop
  40fc20:	adc    ch,cl
  40fc22:	mov    al,0x87
  40fc24:	pop    eax
  40fc25:	iret   
  40fc26:	dec    edx
  40fc27:	fdivr  st(0),st
  40fc29:	or     al,0xf4
  40fc2b:	add    edi,DWORD PTR [ebx+0x5e]
  40fc2e:	hlt    
  40fc2f:	mov    ecx,0x7b41fad0
  40fc34:	and    ebp,DWORD PTR [eax]
  40fc36:	or     DWORD PTR [ebx+edx*4+0x18811bd4],0xffffffe4
  40fc3e:	mov    ds:0x14191b23,al
  40fc43:	mov    ds:0x9a9153a,al
  40fc48:	or     eax,0x1a2b4f1a
  40fc4e:	push   ebx
  40fc4f:	jp     0x40fc17
  40fc51:	mov    ch,0xe
  40fc53:	xchg   esi,eax
  40fc54:	mov    ebp,0xdf75a3fa
  40fc59:	cmove  eax,DWORD PTR [edi+0x4d]
  40fc5d:	jmp    0x40fc4b
  40fc5f:	inc    ecx
  40fc60:	and    DWORD PTR [esp+ebx*1],0xc6136c0c
  40fc67:	dec    eax
  40fc68:	adc    eax,0x9de338d5
  40fc6d:	cli    
  40fc6e:	sbb    dh,BYTE PTR [esi]
  40fc70:	sbb    dh,bh
  40fc72:	je     0x40fc21
  40fc74:	ins    BYTE PTR es:[edi],dx
  40fc75:	pop    eax
  40fc76:	jle    0x40fc3c
  40fc78:	cmp    DWORD PTR [eax+edi*1-0x40034c5b],esp
  40fc7f:	mov    DWORD PTR [edx-0x3a79129a],ebx
  40fc85:	aam    0x95
  40fc87:	or     bh,BYTE PTR [ebx-0xf0e3aa]
  40fc8d:	nop
  40fc8e:	iret   
  40fc8f:	loop   0x40fc24
  40fc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc92:	nop
  40fc93:	add    edi,DWORD PTR [ebx+ebx*1]
  40fc96:	adc    edi,esi
  40fc98:	mov    ch,0x47
  40fc9a:	xchg   esi,eax
  40fc9b:	ds xchg ebp,eax
  40fc9d:	jnp    0x40fc47
  40fc9f:	mov    ebx,0x3b2d1b81
  40fca4:	inc    edx
  40fca5:	out    dx,eax
  40fca6:	jo     0x40fc33
  40fca8:	mov    esi,0xaec69bed
  40fcad:	daa    
  40fcae:	jl     0x40fc82
  40fcb0:	jmp    0xc53f97df
  40fcb5:	or     DWORD PTR [edx+0x25858f9e],0xaf300aa2
  40fcbf:	enter  0xa975,0xb0
  40fcc3:	pop    eax
  40fcc4:	mov    ds:0x6982690b,al
  40fcc9:	inc    ebp
  40fcca:	push   0x63
  40fccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fccd:	mov    dl,0x13
  40fccf:	mov    edx,0x3fbc8cfb
  40fcd4:	js     0x40fd15
  40fcd6:	add    ah,BYTE PTR [edx-0x46]
  40fcd9:	(bad)  
  40fcda:	imul   ecx,DWORD PTR [eax+0x29],0xb829d0c5
  40fce1:	dec    ecx
  40fce2:	cmp    ebp,DWORD PTR [ebx+0x33]
  40fce5:	mov    esp,0x99957ee
  40fcea:	mov    cl,BYTE PTR [esi]
  40fcec:	xlat   BYTE PTR ds:[ebx]
  40fced:	rol    DWORD PTR [edi+0x2a04c9b4],0xc4
  40fcf4:	jbe    0x40fcd8
  40fcf6:	xlat   BYTE PTR ds:[ebx]
  40fcf7:	aas    
  40fcf8:	das    
  40fcf9:	sahf   
  40fcfa:	push   0xffffffec
  40fcfc:	mov    DWORD PTR [eax],ecx
  40fcfe:	loopne 0x40fd7b
  40fd00:	out    0x82,eax
  40fd02:	retf   0x713d
  40fd05:	int3   
  40fd06:	int3   
  40fd07:	(bad)  
  40fd08:	cdq    
  40fd09:	xor    al,0x45
  40fd0b:	push   0x35
  40fd0d:	and    al,BYTE PTR [ebx+edi*1+0x307a7844]
  40fd14:	adc    eax,0x48ca4a09
  40fd19:	dec    eax
  40fd1a:	mov    DWORD PTR [ebp+0x45be3705],ebx
  40fd20:	enter  0xb803,0xa4
  40fd24:	xchg   edx,eax
  40fd25:	push   ss
  40fd26:	ins    DWORD PTR es:[edi],dx
  40fd27:	mov    ch,0x77
  40fd29:	inc    edi
  40fd2a:	loop   0x40fd5e
  40fd2c:	std    
  40fd2d:	xchg   ecx,eax
  40fd2e:	js     0x40fd81
  40fd30:	cmp    DWORD PTR [ecx+ebx*1],esp
  40fd33:	ss pop esp
  40fd35:	xchg   esp,eax
  40fd36:	popa   
  40fd37:	repz sub ebp,DWORD PTR [edi+0x5b]
  40fd3b:	loope  0x40fd20
  40fd3d:	adc    BYTE PTR [ebx],cl
  40fd3f:	pop    eax
  40fd40:	and    ch,BYTE PTR [eax-0x58823247]
  40fd46:	xor    DWORD PTR [ecx],ecx
  40fd48:	popa   
  40fd49:	jge    0x40fd34
  40fd4b:	test   eax,0x796cef53
  40fd50:	mov    edi,0x6dcdda60
  40fd55:	mov    eax,gs:0x7ef47392
  40fd5b:	fcomp  DWORD PTR [esi+0x3b9cdcdf]
  40fd61:	and    bh,BYTE PTR [edi]
  40fd63:	rol    BYTE PTR [edi-0x27b4c479],1
  40fd69:	btc    DWORD PTR [ebx+edx*8-0x423276c6],ecx
  40fd71:	inc    eax
  40fd72:	push   ebp
  40fd73:	ins    BYTE PTR es:[edi],dx
  40fd74:	push   es
  40fd75:	(bad)  
  40fd77:	pop    ss
  40fd78:	fidiv  DWORD PTR ds:0xd4a6932
  40fd7e:	add    esp,esi
  40fd80:	je     0x40fd41
  40fd82:	pusha  
  40fd83:	fstp   QWORD PTR [edx+0x16723bd5]
  40fd89:	or     ebp,edx
  40fd8b:	lods   eax,DWORD PTR ds:[esi]
  40fd8c:	xchg   esi,eax
  40fd8d:	push   ss
  40fd8e:	adc    eax,0x12671a46
  40fd93:	es jnp 0x40fe06
  40fd96:	pop    edi
  40fd97:	mov    ebp,0x2f3d5ef5
  40fd9c:	ins    BYTE PTR es:[edi],dx
  40fd9d:	inc    edx
  40fd9e:	xchg   ecx,edi
  40fda0:	sbb    edi,esi
  40fda2:	lea    esi,[ecx-0x5c]
  40fda5:	xchg   esp,eax
  40fda6:	jnp    0x40fd37
  40fda8:	pop    ecx
  40fda9:	fmul   DWORD PTR ds:0xd33db1ad
  40fdaf:	cmp    DWORD PTR [edx+esi*4],ecx
  40fdb2:	dec    edx
  40fdb3:	hlt    
  40fdb4:	test   DWORD PTR [edi+0x6641f5b7],esp
  40fdba:	ret    0xc043
  40fdbd:	push   edi
  40fdbe:	jne    0x40fd69
  40fdc0:	lods   al,BYTE PTR ds:[esi]
  40fdc1:	cld    
  40fdc2:	out    dx,al
  40fdc3:	aad    0xa6
  40fdc5:	cmp    al,0xe5
  40fdc7:	jg     0x40fe00
  40fdc9:	xchg   DWORD PTR [ecx],esi
  40fdcb:	jmp    0x9182:0xda7ce1ce
  40fdd2:	pop    eax
  40fdd3:	ins    DWORD PTR es:[edi],dx
  40fdd4:	(bad)  [ebp-0x75]
  40fdd7:	jg     0x40fdbf
  40fdd9:	imul   edx,DWORD PTR [eax],0xa
  40fddc:	loop   0x40fd69
  40fdde:	ds pushf 
  40fde0:	pop    eax
  40fde1:	iret   
  40fde2:	dec    edx
  40fde3:	push   edi
  40fde4:	and    eax,0x37e91a0b
  40fde9:	sbb    DWORD PTR [eax+0x61],0xfffffff3
  40fded:	test   eax,0x81cc5a77
  40fdf2:	add    al,0xa4
  40fdf4:	out    dx,eax
  40fdf5:	pushf  
  40fdf6:	mov    cl,0x4a
  40fdf8:	add    eax,0x7a8d686a
  40fdfd:	xchg   esi,eax
  40fdfe:	in     al,dx
  40fdff:	mov    bl,0x56
  40fe01:	faddp  st(2),st
  40fe03:	lea    esi,[ecx+0x25]
  40fe06:	add    dh,BYTE PTR [edi+0x10]
  40fe09:	int3   
  40fe0a:	hlt    
  40fe0b:	nop
  40fe0c:	jg     0x40fe86
  40fe0e:	inc    ebp
  40fe0f:	or     esp,esi
  40fe11:	sub    al,BYTE PTR [edx-0x4a]
  40fe14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe15:	lock dec esp
  40fe17:	xor    al,dh
  40fe19:	iret   
  40fe1a:	cwde   
  40fe1b:	sbb    BYTE PTR [edi],0x5b
  40fe1e:	adc    DWORD PTR [ebx],ebx
  40fe20:	lahf   
  40fe21:	pop    edx
  40fe22:	enter  0x62ee,0x73
  40fe26:	call   0xec228a3f
  40fe2b:	icebp  
  40fe2c:	push   esp
  40fe2d:	in     al,dx
  40fe2e:	mov    BYTE PTR [eax-0x2b],ch
  40fe31:	or     DWORD PTR [ebx+0x5481891d],ebp
  40fe37:	aad    0x65
  40fe39:	jmp    0xb824:0x6e1c1c4a
  40fe40:	mov    dl,0xa4
  40fe42:	hlt    
  40fe43:	hlt    
  40fe44:	mov    ah,0x8c
  40fe46:	and    BYTE PTR [ebp+0x82e8ffa],bh
  40fe4c:	sub    al,0xa7
  40fe4e:	test   al,0x7d
  40fe50:	mov    eax,0xa85ac99c
  40fe55:	adc    eax,0x637a04b6
  40fe5a:	mov    ds:0x38698193,al
  40fe5f:	(bad)  
  40fe60:	xor    DWORD PTR [ecx+0x6f],ecx
  40fe63:	dec    ebp
  40fe64:	mov    BYTE PTR [ebp+edx*1+0x479c72c4],bh
  40fe6b:	leave  
  40fe6c:	into   
  40fe6d:	push   0x604346fb
  40fe72:	neg    BYTE PTR ds:0x166e93d7
  40fe78:	into   
  40fe79:	push   ss
  40fe7a:	call   0x8d7a:0x9a24538c
  40fe81:	add    dh,0xb6
  40fe84:	outs   dx,BYTE PTR ds:[esi]
  40fe85:	dec    esp
  40fe86:	mov    fs,WORD PTR [ebp-0xa]
  40fe89:	xchg   ebx,eax
  40fe8a:	adc    eax,0xf9ffd3c3
  40fe8f:	repnz sbb BYTE PTR [ecx*2+0x4aff4423],cl
  40fe97:	xor    al,0x95
  40fe99:	mov    eax,0x6b6dae5
  40fe9e:	(bad)  
  40fe9f:	out    0x4a,al
  40fea1:	aam    0x27
  40fea3:	or     dh,BYTE PTR [edi-0x20]
  40fea6:	addr16 mov edx,0xff920ff4
  40feac:	(bad)  
  40fead:	retf   0x4eb6
  40feb0:	aad    0x70
  40feb2:	inc    esi
  40feb3:	in     al,0xd5
  40feb5:	cld    
  40feb6:	mov    ecx,0x97762350
  40febb:	pop    ebx
  40febc:	(bad)
  40fec0:	pop    ebx
  40fec1:	cld    
  40fec2:	addr16 dec esp
  40fec4:	in     al,0x6d
  40fec6:	cmp    al,0xa6
  40fec8:	ds in  al,0x10
  40fecb:	test   eax,0x59aaf1b8
  40fed0:	test   al,0x2a
  40fed2:	repnz mov es,WORD PTR [ebx]
  40fed5:	sub    eax,0x6de93ce8
  40feda:	int    0x55
  40fedc:	fisttp QWORD PTR [eax-0x2b]
  40fedf:	cmp    ebp,DWORD PTR [esi-0x3b]
  40fee2:	icebp  
  40fee3:	leave  
  40fee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fee5:	dec    ecx
  40fee6:	inc    ebp
  40fee7:	ss cmp eax,0xdf047767
  40feed:	ror    DWORD PTR [edi+0x5c1140c9],cl
  40fef3:	sbb    dh,BYTE PTR [ebp+0x1d774826]
  40fef9:	jae    0x40ff26
  40fefb:	dec    ebx
  40fefc:	dec    esp
  40fefd:	sub    eax,0xf5525e73
  40ff02:	shr    edx,cl
  40ff04:	xchg   ebx,eax
  40ff05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff06:	sub    BYTE PTR [esi],dl
  40ff08:	xor    ecx,0x70
  40ff0b:	in     eax,0x89
  40ff0d:	xlat   BYTE PTR ds:[ebx]
  40ff0e:	cwde   
  40ff0f:	push   0x41e57af9
  40ff14:	mov    dl,BYTE PTR [edx]
  40ff16:	dec    eax
  40ff17:	scas   eax,DWORD PTR es:[edi]
  40ff18:	call   0x6ac8:0x657f43be
  40ff1f:	xor    cl,al
  40ff21:	cmp    ah,BYTE PTR ds:[edx]
  40ff24:	jns    0x40febb
  40ff26:	into   
  40ff27:	fld    QWORD PTR [ebx-0x18b10678]
  40ff2d:	outs   dx,BYTE PTR ds:[esi]
  40ff2e:	sbb    DWORD PTR [edi-0x24],ebx
  40ff31:	mov    edx,0x28e8d3aa
  40ff36:	sahf   
  40ff37:	mov    ds:0xf5f28e98,al
  40ff3c:	mov    bl,0xe8
  40ff3e:	scas   eax,DWORD PTR es:[edi]
  40ff3f:	fs add ebx,eax
  40ff42:	pusha  
  40ff43:	jmp    0x40fef9
  40ff45:	sub    BYTE PTR [eax+0x4a],dl
  40ff48:	stc    
  40ff49:	xor    ecx,DWORD PTR [edi-0x3e]
  40ff4c:	push   cs
  40ff4d:	mov    al,ds:0xa5ae4f9a
  40ff52:	in     eax,dx
  40ff53:	arpl   WORD PTR [edx],dx
  40ff55:	and    al,0x17
  40ff57:	(bad)  
  40ff58:	popf   
  40ff59:	leave  
  40ff5a:	cli    
  40ff5b:	scas   eax,DWORD PTR es:[edi]
  40ff5c:	sub    BYTE PTR [esp+ebp*2-0x1],bl
  40ff60:	nop
  40ff61:	sti    
  40ff62:	pop    ebp
  40ff63:	loop   0x40ff7c
  40ff65:	mov    bl,0xf3
  40ff67:	jmp    0xbb7c:0xd057fa65
  40ff6e:	cmp    al,0x66
  40ff70:	outs   dx,DWORD PTR ds:[esi]
  40ff71:	ss ins BYTE PTR es:[edi],dx
  40ff73:	mov    bl,0x1e
  40ff75:	dec    edi
  40ff76:	pop    esi
  40ff77:	sub    DWORD PTR [edi-0x36],esp
  40ff7a:	repz in eax,dx
  40ff7c:	dec    ebx
  40ff7d:	and    DWORD PTR [edx+0x243dd35f],esi
  40ff83:	cmp    ebp,DWORD PTR fs:[ebx+0x2914b6b1]
  40ff8a:	mov    edi,0x1f640f11
  40ff8f:	xor    ah,BYTE PTR [edx+0x32]
  40ff92:	or     al,0x4f
  40ff94:	or     ch,BYTE PTR [ebx-0x65]
  40ff97:	lock and cl,BYTE PTR [edi]
  40ff9a:	shl    BYTE PTR [ecx],1
  40ff9c:	push   ecx
  40ff9d:	or     al,0x7e
  40ff9f:	inc    esi
  40ffa0:	div    DWORD PTR [ebp+0xee90023]
  40ffa6:	push   ds
  40ffa7:	sub    BYTE PTR ds:0xb53ed52a,bh
  40ffad:	xor    BYTE PTR [edi-0x3b],ch
  40ffb0:	xchg   ecx,eax
  40ffb1:	jge    0x40ffd4
  40ffb3:	mov    DWORD PTR [ecx],ebp
  40ffb5:	fbstp  TBYTE PTR [ecx+0x2f77a1ab]
  40ffbb:	in     eax,0x7
  40ffbd:	xchg   ebx,eax
  40ffbe:	pop    esp
  40ffbf:	dec    edi
  40ffc0:	adc    dl,ch
  40ffc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffc3:	fistp  QWORD PTR [edx+edx*2-0x3f]
  40ffc7:	adc    dh,BYTE PTR [ebx-0x16]
  40ffca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffcb:	sub    esi,DWORD PTR [ebp-0x1]
  40ffce:	add    BYTE PTR [ebp-0x1f],0x5d
  40ffd2:	push   0xffffff83
  40ffd4:	mov    eax,ds:0x463ebadb
  40ffd9:	mov    esp,0x55e113c2
  40ffde:	idiv   DWORD PTR [ebp-0x63]
  40ffe1:	dec    eax
  40ffe2:	mov    WORD PTR [ebx],gs
  40ffe4:	in     eax,0x1a
  40ffe6:	mov    cs,WORD PTR [eax]
  40ffe8:	or     bh,dl
  40ffea:	adc    dx,cx
  40ffed:	pop    es
  40ffee:	mov    al,BYTE PTR [edi]
  40fff0:	mov    es,WORD PTR [esi+0x22]
  40fff3:	cmp    DWORD PTR [edx+0xc6e0114],ebx
  40fff9:	mov    al,ah
  40fffb:	loop   0x410018
  40fffd:	jecxz  0x410070
  40ffff:	xchg   DWORD PTR [esi],ebx
  410001:	mov    bl,0xc1
  410003:	dec    esp
  410004:	repz mov ecx,0x27d68928
  41000a:	adc    DWORD PTR [esi],ecx
  41000c:	sub    edx,DWORD PTR [edi+0x20]
  41000f:	and    eax,0x247f0613
  410014:	(bad)  
  410015:	fldenv [edx+0x60ea4d1b]
  41001b:	lds    edi,FWORD PTR [edi+0x22]
  41001e:	jmp    0x8b3656b7
  410023:	add    esi,DWORD PTR [edi+0x5d9a2cf2]
  410029:	(bad)  
  41002a:	and    ecx,DWORD PTR [eax+0x1f]
  41002d:	sbb    al,0x34
  41002f:	aam    0xae
  410031:	sub    DWORD PTR [edi-0x1d92c12d],ebx
  410037:	cwde   
  410038:	pop    ecx
  410039:	std    
  41003a:	add    DWORD PTR [esp+ebx*4],edi
  41003d:	mov    ds:0x2e3ad5bb,eax
  410042:	mov    cl,BYTE PTR [eax-0x39e4a59b]
  410048:	cmp    DWORD PTR [ebp+0x70d0e566],ebp
  41004e:	fst    QWORD PTR [edi]
  410050:	sub    eax,0x491e93cb
  410055:	xor    ebp,ecx
  410057:	jne    0x247b2152
  41005d:	sahf   
  41005e:	je     0x410040
  410060:	add    al,dl
  410062:	sar    BYTE PTR [ebx],0xc2
  410065:	push   edi
  410066:	test   BYTE PTR [edx],0x8d
  410069:	imul   ebp,DWORD PTR [esi+0x39e4581],0xfd05042c
  410073:	xchg   DWORD PTR [esi],ebp
  410075:	cmp    BYTE PTR [ecx],dh
  410077:	aaa    
  410078:	(bad)  
  410079:	pushf  
  41007a:	pop    edi
  41007b:	push   esp
  41007c:	mov    cl,0x4a
  41007e:	xchg   ebx,eax
  41007f:	xor    BYTE PTR [edx+0x44],0x8
  410083:	add    DWORD PTR [ecx],ebx
  410085:	and    ah,dl
  410087:	sti    
  410088:	mov    ds,WORD PTR [ecx]
  41008a:	xchg   BYTE PTR [edx+0x2f],al
  41008d:	jnp    0x410031
  41008f:	jne    0x410066
  410091:	enter  0x179c,0xfd
  410095:	fst    QWORD PTR ds:0x38bb1c2a
  41009b:	xchg   esi,eax
  41009c:	mov    dl,0x39
  41009e:	mov    cl,0xb1
  4100a0:	repz das 
  4100a2:	dec    eax
  4100a3:	jb     0x4100ae
  4100a5:	mov    al,BYTE PTR [ebp+0x190d27b2]
  4100ab:	repz inc ebx
  4100ad:	pop    edi
  4100ae:	jg     0x41007b
  4100b0:	ja     0x410050
  4100b2:	mov    edx,0x511d8286
  4100b7:	dec    ebx
  4100b8:	dec    eax
  4100b9:	mov    ch,0xf1
  4100bb:	rcl    esp,0xc8
  4100be:	fsubr  QWORD PTR [ebp+ebp*1+0x11682ae8]
  4100c5:	fist   DWORD PTR [ebp-0x1c]
  4100c8:	dec    ecx
  4100c9:	sbb    DWORD PTR [eax-0x522b5699],edx
  4100cf:	mov    ebx,0x915d0258
  4100d4:	adc    al,0x18
  4100d6:	mov    eax,0x4bbdad94
  4100db:	arpl   WORD PTR [bx+si],si
  4100de:	and    DWORD PTR [ecx-0x1],ecx
  4100e1:	mov    eax,ds:0xb6c1f51a
  4100e6:	mov    esp,0x6966c68d
  4100eb:	mov    ds,WORD PTR [edi+0x22]
  4100ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ef:	(bad)  
  4100f0:	aad    0x89
  4100f2:	lea    edx,[ecx+0x6a]
  4100f5:	(bad)
  4100f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100f9:	inc    ebx
  4100fa:	pop    ebx
  4100fb:	jns    0x410136
  4100fd:	ss push eax
  4100ff:	mov    bh,0x1e
  410101:	js     0x4100be
  410103:	sbb    dh,BYTE PTR [edx]
  410105:	push   ds
  410106:	jle    0x41015d
  410108:	test   eax,0xf7ceed7e
  41010d:	retf   0xdfec
  410110:	addr16 jmp 0x4100c0
  410113:	cmp    ecx,DWORD PTR [edx]
  410115:	imul   edi,DWORD PTR [ecx+edx*1],0x117f2138
  41011c:	sub    cl,BYTE PTR [esi+0x888e750]
  410122:	ss inc ebp
  410124:	sbb    al,0x17
  410126:	cmp    DWORD PTR [esi+0xb72405f],edx
  41012c:	shr    BYTE PTR [edx+eax*2],cl
  41012f:	push   esp
  410130:	adc    esp,DWORD PTR [ebp+ecx*2+0x37]
  410134:	rcr    DWORD PTR [eax+edx*4-0x551a6068],0x60
  41013c:	xchg   ebp,eax
  41013d:	js     0x410136
  41013f:	popa   
  410140:	mov    BYTE PTR [esi-0x793ae073],ah
  410146:	adc    al,dl
  410148:	scas   eax,DWORD PTR es:[edi]
  410149:	cmp    cl,dl
  41014b:	mov    esp,0xbb256e9
  410150:	outs   dx,BYTE PTR ds:[esi]
  410151:	mov    ah,ch
  410153:	sbb    BYTE PTR [eax],bl
  410155:	fidivr DWORD PTR [edi+0xb]
  410158:	jbe    0x410160
  41015a:	jne    0x4101c0
  41015c:	xchg   edi,eax
  41015d:	scas   al,BYTE PTR es:[edi]
  41015e:	sub    eax,esp
  410160:	sbb    DWORD PTR [eax-0x1d],ebp
  410163:	jl     0x410180
  410165:	mov    dl,0x34
  410167:	stos   DWORD PTR es:[edi],eax
  410168:	shl    esi,1
  41016a:	xchg   ecx,eax
  41016b:	(bad)  
  41016c:	adc    DWORD PTR [edx],eax
  41016e:	(bad)  
  410170:	rcl    DWORD PTR [edi+0x1],1
  410173:	jno    0x4101e9
  410175:	or     esi,DWORD PTR [edx]
  410177:	ins    BYTE PTR es:[edi],dx
  410178:	loop   0x410178
  41017a:	les    edx,FWORD PTR [eax+ecx*4-0x29]
  41017e:	dec    eax
  41017f:	add    ah,BYTE PTR [edx]
  410181:	or     al,0xdb
  410183:	and    al,0x26
  410185:	push   0xfffffff5
  410187:	in     al,0x69
  410189:	sub    al,0x6e
  41018b:	add    eax,0xb4bfcf
  410190:	(bad)  
  410191:	rol    BYTE PTR [esi+0x23784872],1
  410197:	std    
  410198:	shr    BYTE PTR [ebp-0x1e],1
  41019b:	sbb    bl,BYTE PTR [ecx]
  41019d:	call   0xcffba2a4
  4101a2:	inc    eax
  4101a3:	(bad)  
  4101a5:	mov    ds:0x8b151706,eax
  4101aa:	dec    ecx
  4101ab:	sbb    esi,DWORD PTR [ebp-0x2d]
  4101ae:	out    0x7b,eax
  4101b0:	cmp    al,0x1c
  4101b2:	sbb    eax,DWORD PTR [ebp-0x22]
  4101b5:	bound  esi,QWORD PTR [eax]
  4101b7:	mov    esi,0x54c80eeb
  4101bc:	mov    esi,0xf9396d2a
  4101c1:	(bad)  
  4101c2:	cli    
  4101c3:	cmp    bl,0xa8
  4101c6:	cs xchg edx,eax
  4101c8:	mov    edx,0x747ae714
  4101cd:	mov    edi,0x17a21220
  4101d2:	arpl   bp,di
  4101d4:	cmp    eax,0x508198f4
  4101d9:	inc    ecx
  4101da:	aad    0x7
  4101dc:	push   ebp
  4101dd:	psllw  mm5,QWORD PTR [edi-0x55e980f5]
  4101e4:	test   BYTE PTR [ecx-0x44ec46db],al
  4101ea:	xchg   esi,eax
  4101eb:	retf   0xd78f
  4101ee:	(bad)  
  4101ef:	aad    0x6b
  4101f1:	mov    ch,0x9c
  4101f3:	xchg   BYTE PTR [edi-0xbefa108],al
  4101f9:	stc    
  4101fa:	fnstsw WORD PTR [esi+0x70990d8f]
  410200:	dec    esp
  410201:	jns    0x4101c7
  410203:	push   edx
  410204:	sub    eax,DWORD PTR [esi]
  410206:	arpl   WORD PTR [esi+0x443c43ee],bx
  41020c:	xor    ebx,DWORD PTR [ecx+0x23e20f60]
  410212:	cmp    al,0x0
  410214:	ret    
  410215:	mov    eax,gs
  410217:	xor    dl,BYTE PTR [eax]
  410219:	data16 and al,0xb2
  41021c:	jo     0x41028e
  41021e:	jle    0x41021c
  410220:	(bad)  
  410221:	cmp    eax,0x51e6d948
  410226:	adc    al,0xc8
  410228:	cmp    bh,BYTE PTR [edi]
  41022a:	push   ebx
  41022b:	pop    eax
  41022c:	lock ins DWORD PTR es:[edi],dx
  41022e:	div    DWORD PTR [ebx+0x69]
  410231:	retf   
  410232:	in     eax,dx
  410233:	inc    esi
  410234:	jne    0x41020f
  410236:	imul   esp,DWORD PTR ds:0x7febea4b,0x2039ef8a
  410240:	in     al,dx
  410241:	and    al,0xb5
  410243:	add    ecx,DWORD PTR ds:0x7214c30e
  410249:	rcr    DWORD PTR [edi],cl
  41024b:	mov    eax,ds:0x709415d6
  410250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410251:	mov    al,0x1
  410253:	dec    edx
  410254:	pop    ebx
  410255:	inc    edi
  410256:	call   0xbdf51542
  41025b:	aam    0xfa
  41025d:	cli    
  41025e:	pop    eax
  41025f:	mov    esi,0x9947b968
  410264:	mov    ah,0x4
  410266:	sbb    al,0xd6
  410268:	pop    edi
  410269:	(bad)  
  41026a:	ja     0x4102e3
  41026c:	mov    edx,0xc6fc28ed
  410271:	add    bh,BYTE PTR [ebx]
  410273:	ficom  DWORD PTR [ebp+0x71793c51]
  410279:	in     eax,0x7
  41027b:	adc    dh,cl
  41027d:	mov    eax,0x70f0e3d4
  410282:	or     eax,0x680d198a
  410287:	xor    DWORD PTR [edx-0x3b7e540c],edi
  41028d:	loope  0x410294
  41028f:	not    BYTE PTR fs:[edx-0x2998241d]
  410296:	sub    esi,eax
  410298:	pop    edx
  410299:	dec    eax
  41029a:	push   0x83c182d2
  41029f:	sti    
  4102a0:	pop    ss
  4102a1:	cmc    
  4102a2:	dec    esp
  4102a3:	sbb    bh,BYTE PTR [ebx-0x4d244fdd]
  4102a9:	into   
  4102aa:	das    
  4102ab:	je     0x410323
  4102ad:	pop    ds
  4102ae:	je     0x4102fa
  4102b0:	inc    edx
  4102b1:	hlt    
  4102b2:	xor    DWORD PTR [eax-0x584552df],esp
  4102b8:	mov    eax,0xce8d25dd
  4102bd:	add    DWORD PTR [ecx-0x2418a00a],esp
  4102c3:	iret   
  4102c4:	rcr    esi,0x3f
  4102c7:	(bad)  
  4102c8:	(bad)  
  4102c9:	scas   al,BYTE PTR es:[edi]
  4102ca:	into   
  4102cb:	and    eax,DWORD PTR [edx]
  4102cd:	xchg   esi,eax
  4102ce:	push   esi
  4102cf:	push   edx
  4102d0:	sti    
  4102d1:	jmp    0x3ef9b491
  4102d6:	jne    0x4102bc
  4102d8:	scas   al,BYTE PTR es:[edi]
  4102d9:	mov    al,ds:0xaaf0faeb
  4102de:	(bad)  
  4102df:	fs dec edi
  4102e1:	cmp    BYTE PTR [esi-0x64],0x4d
  4102e5:	sbb    bh,BYTE PTR [ecx+esi*2-0x5565637e]
  4102ec:	inc    esp
  4102ed:	mov    al,ds:0xfa841720
  4102f2:	inc    edi
  4102f3:	push   0xfffffff1
  4102f5:	test   ebp,ecx
  4102f7:	outs   dx,DWORD PTR ds:[esi]
  4102f8:	sahf   
  4102f9:	pop    esp
  4102fa:	push   ecx
  4102fb:	mov    ebx,0x43258de6
  410300:	out    dx,al
  410301:	loopne 0x410292
  410303:	push   ebx
  410304:	pop    ecx
  410305:	fld    QWORD PTR [esi-0x69]
  410308:	aad    0x22
  41030a:	not    ebx
  41030c:	out    0x1e,al
  41030e:	pusha  
  41030f:	dec    ebp
  410310:	sub    DWORD PTR [edi+eiz*2],esp
  410313:	pop    esi
  410314:	push   es
  410315:	aaa    
  410316:	add    esp,eax
  410318:	in     al,dx
  410319:	adc    eax,0x144e2616
  41031e:	xor    esp,DWORD PTR ds:0xebdda02b
  410324:	adc    eax,DWORD PTR [esi]
  410326:	mov    DWORD PTR [edi+ecx*8-0xf0157b2],edx
  41032d:	jb     0x4103aa
  41032f:	or     eax,0x8330e910
  410334:	lods   eax,DWORD PTR ds:[esi]
  410335:	aas    
  410336:	loope  0x4103b6
  410338:	stos   DWORD PTR es:[edi],eax
  410339:	dec    eax
  41033a:	loop   0x4102fa
  41033c:	xchg   dh,ah
  41033e:	js     0x4102c0
  410340:	addr16 xchg ebp,eax
  410342:	iret   
  410343:	aaa    
  410344:	and    DWORD PTR [ebx-0x2e],edx
  410347:	lea    edx,[edi+0x7a88a86a]
  41034d:	pop    ss
  41034e:	dec    edi
  41034f:	daa    
  410350:	scas   al,BYTE PTR es:[edi]
  410351:	aas    
  410352:	cwde   
  410353:	mov    edx,cs
  410355:	addr16 out 0x16,eax
  410358:	mov    dh,0x89
  41035a:	hlt    
  41035b:	mov    ch,0xfe
  41035d:	in     al,0x84
  41035f:	mov    ecx,0x417c998f
  410364:	cmp    eax,0x6ba44f77
  410369:	xchg   DWORD PTR [edi-0x70],ebx
  41036c:	adc    al,0x1e
  41036e:	pop    esp
  41036f:	out    0xee,eax
  410371:	mov    edi,0xdf517c9d
  410376:	mov    al,0x9
  410378:	cld    
  410379:	and    DWORD PTR [ecx-0x29],0x325fbb98
  410380:	or     ch,BYTE PTR [ebp+0x2c31f991]
  410386:	dec    esi
  410387:	or     DWORD PTR [edi+esi*2-0x2ed91b3f],esi
  41038e:	add    ecx,DWORD PTR [ebx+ecx*2+0x3e5cb1a9]
  410395:	pop    es
  410396:	loopne 0x41040f
  410398:	and    eax,0xdc051e7
  41039d:	aad    0xf9
  41039f:	test   eax,0xae8317b1
  4103a4:	sar    BYTE PTR [edx-0x603990af],1
  4103aa:	mov    ch,0xd6
  4103ac:	std    
  4103ad:	jmp    0x63ee:0x312c146b
  4103b4:	pop    ds
  4103b5:	in     al,0x95
  4103b7:	fistp  DWORD PTR [eax+0x2f]
  4103ba:	test   al,0xb
  4103bc:	out    0x84,al
  4103be:	xchg   edi,eax
  4103bf:	and    eax,0xd35028f4
  4103c4:	sub    esi,DWORD PTR [edx]
  4103c6:	cmp    al,0x2
  4103c8:	ret    0x5729
  4103cb:	das    
  4103cc:	jmp    0xbf86:0x4a9595a2
  4103d3:	int3   
  4103d4:	les    ebx,FWORD PTR [edx+0x47]
  4103d7:	or     DWORD PTR [edx],esp
  4103d9:	scas   al,BYTE PTR es:[edi]
  4103da:	pop    ebp
  4103db:	inc    ecx
  4103dc:	clc    
  4103dd:	xchg   edx,eax
  4103de:	loope  0x410442
  4103e0:	cld    
  4103e1:	loope  0x410456
  4103e3:	into   
  4103e4:	jmp    0xfd46:0xa2332bc6
  4103eb:	cli    
  4103ec:	rol    BYTE PTR [esp+eax*1-0x2cd34d28],cl
  4103f3:	xchg   ecx,eax
  4103f4:	inc    ebx
  4103f5:	js     0x4103d7
  4103f7:	sbb    al,0x89
  4103f9:	sbb    eax,0x754fc873
  4103fe:	sub    al,0xc
  410401:	into   
  410402:	xor    BYTE PTR [ecx-0x501b5586],cl
  410408:	jno    0x4103d1
  41040a:	mov    edx,ecx
  41040c:	dec    edi
  41040d:	and    ebx,DWORD PTR [ebp+0x5]
  410410:	js     0x41039f
  410412:	dec    esi
  410413:	xor    dh,BYTE PTR [ebx+0x21b11919]
  410419:	in     al,0x80
  41041b:	test   edx,esi
  41041d:	aaa    
  41041e:	lods   eax,DWORD PTR ds:[esi]
  41041f:	clc    
  410420:	mov    esi,0xabb067d3
  410425:	inc    ecx
  410426:	xchg   esp,eax
  410427:	aad    0x5d
  410429:	ss inc ebx
  41042b:	retf   
  41042c:	mov    bl,0x5c
  41042e:	shr    DWORD PTR [ecx+0x2a],0x17
  410432:	ret    
  410433:	(bad)  
  410434:	cmp    al,0x82
  410436:	test   DWORD PTR [edi],0x14dd5fea
  41043c:	mov    dh,0xb6
  41043e:	ficomp WORD PTR [esp+edx*4-0x5006dc5]
  410445:	xlat   BYTE PTR ds:[ebx]
  410446:	iret   
  410447:	fwait
  410448:	aas    
  410449:	dec    ebx
  41044a:	lods   eax,DWORD PTR ds:[esi]
  41044b:	loope  0x41048b
  41044d:	daa    
  41044e:	outs   dx,DWORD PTR ds:[esi]
  41044f:	in     al,dx
  410450:	call   0x714a306c
  410455:	mov    ebp,0x7ed7dbd0
  41045a:	cwde   
  41045b:	mov    esi,0x6166ddb6
  410460:	add    al,0x14
  410462:	das    
  410463:	fst    st(5)
  410465:	pop    edx
  410466:	mov    eax,ds:0xd3115614
  41046b:	dec    ecx
  41046c:	mov    esi,0xa61797a3
  410471:	test   BYTE PTR [ebx+0x26],0x76
  410475:	sbb    BYTE PTR [edi],0xd5
  410478:	add    ebp,esp
  41047a:	je     0x41044d
  41047c:	mov    cl,0xb
  41047e:	jmp    0x7d9aa9ba
  410483:	cmp    eax,0xee8f0daf
  410488:	xor    eax,0x8d360df1
  41048d:	push   ecx
  41048e:	into   
  41048f:	es aaa 
  410491:	xchg   esp,eax
  410492:	ret    
  410493:	mov    ds:0x6b7e8178,eax
  410498:	lea    ebp,[esi]
  41049a:	sub    al,0x70
  41049c:	jle    0x4104da
  41049e:	scas   al,BYTE PTR es:[edi]
  41049f:	xchg   ebp,eax
  4104a0:	cmp    dh,BYTE PTR [esi+0x64f2c23e]
  4104a6:	cli    
  4104a7:	les    edx,FWORD PTR [ebp+0x44]
  4104aa:	push   0x63
  4104ac:	icebp  
  4104ad:	sbb    DWORD PTR [edi-0x7b602f2f],0x78
  4104b4:	int3   
  4104b5:	xor    al,0x51
  4104b7:	call   DWORD PTR ds:0x55f64d6c
  4104bd:	pop    ecx
  4104be:	add    DWORD PTR ds:0x51fb8119,ecx
  4104c4:	ja     0x410516
  4104c6:	aam    0xfb
  4104c8:	adc    ah,bl
  4104ca:	(bad)  
  4104cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104cd:	sub    al,0xb2
  4104cf:	jmp    0x848e:0x429f1710
  4104d6:	out    dx,al
  4104d7:	(bad)  
  4104d8:	lock (bad) 
  4104db:	mov    ecx,0x8ad676d1
  4104e0:	dec    esi
  4104e1:	push   esi
  4104e2:	push   es
  4104e3:	call   0xf8c51a55
  4104e8:	cdq    
  4104e9:	jno    0x410509
  4104eb:	push   edx
  4104ec:	sti    
  4104ed:	adc    ch,BYTE PTR [eax]
  4104ef:	leave  
  4104f0:	inc    esp
  4104f1:	sti    
  4104f2:	fsub   DWORD PTR [ecx+0x9]
  4104f5:	aas    
  4104f6:	add    edx,DWORD PTR [esi]
  4104f8:	xlat   BYTE PTR ds:[ebx]
  4104f9:	out    dx,eax
  4104fa:	fwait
  4104fb:	xchg   edi,eax
  4104fc:	outs   dx,BYTE PTR ds:[esi]
  4104fd:	jle    0x41057b
  4104ff:	add    BYTE PTR [ecx+ebp*2-0x4132ad00],dl
  410506:	retf   0x3c81
  410509:	push   esi
  41050a:	int    0xf
  41050c:	inc    edx
  41050d:	fadd   QWORD PTR [esi]
  41050f:	xor    al,0xc9
  410511:	xchg   edi,eax
  410512:	push   edi
  410513:	(bad)  
  410514:	(bad)  [ebx+ebp*8-0x72]
  410518:	push   ecx
  410519:	pop    esp
  41051a:	fwait
  41051b:	add    eax,0x74ddf5da
  410520:	lods   al,BYTE PTR ds:[esi]
  410521:	inc    esp
  410522:	aam    0x60
  410524:	push   ebx
  410525:	pop    ds
  410526:	nop
  410527:	pop    eax
  410528:	sub    al,0x64
  41052a:	in     al,dx
  41052b:	jnp    0x4104ee
  41052d:	xor    edi,eax
  41052f:	sbb    eax,0x8eb81c23
  410534:	es dec esi
  410536:	and    eax,0xa8c022b3
  41053b:	push   es
  41053c:	inc    eax
  41053d:	jl     0x41056d
  41053f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410540:	fiadd  WORD PTR [esi]
  410542:	mov    ebp,0x5408f049
  410547:	inc    edi
  410548:	sub    al,0xd4
  41054a:	dec    ebp
  41054b:	cmp    eax,0xff478c4e
  410550:	ja     0x410559
  410552:	jle    0x410504
  410554:	mov    ecx,0x4586ff85
  410559:	loope  0x410589
  41055b:	mov    ds:0xcd144344,eax
  410560:	(bad)  
  410561:	adc    eax,DWORD PTR [edi+0x49b84d64]
  410567:	ret    0xe73e
  41056a:	fdiv   st(0),st
  41056c:	xchg   ebp,esi
  41056e:	(bad)  
  41056f:	retf   
  410570:	mov    eax,0x9972e9ff
  410575:	ret    0xf06c
  410578:	fsubr  DWORD PTR [edx-0x30bc3449]
  41057f:	stc    
  410580:	scas   al,BYTE PTR es:[edi]
  410581:	mov    ds:0x363eca3,eax
  410586:	sub    al,0x1c
  410588:	out    dx,eax
  410589:	sub    eax,0x59c03c3
  41058e:	sbb    al,0x69
  410590:	outs   dx,BYTE PTR ds:[esi]
  410591:	inc    ecx
  410592:	stc    
  410593:	push   0x91cca446
  410598:	(bad)  
  410599:	into   
  41059a:	clc    
  41059b:	push   ss
  41059c:	ins    DWORD PTR es:[edi],dx
  41059d:	cmp    ah,cl
  41059f:	not    al
  4105a1:	pop    ecx
  4105a2:	fsubp  st(1),st
  4105a4:	jns    0x4105d2
  4105a6:	loop   0x4105c9
  4105a8:	add    DWORD PTR [edx+edx*4+0x77],eax
  4105ac:	pop    ecx
  4105ad:	in     al,0x8b
  4105af:	pushf  
  4105b0:	or     BYTE PTR [eax+esi*2],bh
  4105b3:	mov    eax,0xd3aa989f
  4105b8:	in     eax,0x21
  4105ba:	or     eax,0xffa885f3
  4105bf:	and    dl,dh
  4105c1:	cmp    al,0xd8
  4105c3:	lods   al,BYTE PTR ds:[esi]
  4105c4:	(bad)  
  4105c5:	clc    
  4105c6:	in     eax,0x21
  4105c8:	shl    eax,1
  4105ca:	mov    ebx,0x3ca8c86
  4105cf:	int3   
  4105d0:	ror    BYTE PTR [esi+0x48],cl
  4105d3:	aaa    
  4105d4:	fsub   st,st(1)
  4105d6:	push   esp
  4105d7:	mov    dl,0x3
  4105d9:	or     BYTE PTR [eax-0x10],dl
  4105dc:	enter  0xc52f,0xf7
  4105e0:	push   ebx
  4105e1:	test   dh,bl
  4105e3:	push   edx
  4105e4:	push   ecx
  4105e5:	push   ebp
  4105e6:	cmp    edx,DWORD PTR [eax]
  4105e8:	pop    ebp
  4105e9:	out    0xe2,al
  4105eb:	or     ecx,esi
  4105ed:	sbb    bh,bl
  4105ef:	div    BYTE PTR [edx+0x6b7dca8d]
  4105f5:	mov    ds:0x68d870dc,eax
  4105fa:	push   es
  4105fb:	mov    eax,0x7ee27a48
  410600:	in     eax,dx
  410601:	and    DWORD PTR [edi+0x23],edx
  410604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410605:	enter  0x2da7,0x8f
  410609:	ret    
  41060a:	es in  eax,dx
  41060c:	xchg   edi,eax
  41060d:	push   esi
  41060e:	test   BYTE PTR [esi+0x77403aa6],bl
  410614:	xor    ecx,DWORD PTR [ecx]
  410616:	and    eax,0x248ba4ff
  41061b:	(bad)  
  41061c:	pop    edi
  41061d:	mul    DWORD PTR [eax-0x2716fef5]
  410623:	jnp    0x41067d
  410625:	and    BYTE PTR [esi],ch
  410627:	aaa    
  410628:	jmp    0xe0426ccd
  41062d:	and    eax,0xe10e8159
  410632:	in     al,0xdf
  410634:	cld    
  410635:	int3   
  410636:	or     DWORD PTR [edi+ebp*8],eax
  410639:	mov    ds,WORD PTR [ebx]
  41063b:	xchg   esp,eax
  41063c:	(bad)  
  41063d:	iret   
  41063e:	adc    eax,0x4ff3c46a
  410643:	inc    esi
  410644:	push   ax
  410646:	pusha  
  410647:	ret    
  410648:	enter  0x8eb1,0xaa
  41064c:	or     dl,al
  41064e:	jb     0x410626
  410650:	xchg   ecx,eax
  410651:	lock fadd DWORD PTR [edi+0x21591d17]
  410658:	ror    DWORD PTR [ebx+edi*2],cl
  41065b:	fwait
  41065c:	sbb    DWORD PTR [ebp+0x6d],esp
  41065f:	push   esi
  410660:	aam    0x2c
  410662:	shl    DWORD PTR [esi+ebx*1],1
  410665:	jb     0x4105fb
  410667:	or     al,0xa6
  410669:	mov    cl,0xe2
  41066b:	std    
  41066c:	pop    edx
  41066d:	xlat   BYTE PTR ds:[ebx]
  41066e:	fcom   QWORD PTR [eax]
  410670:	xor    BYTE PTR [esi+ebx*4+0x72d05451],ch
  410677:	push   0x85c782ce
  41067c:	or     ebp,DWORD PTR [esi-0x441fae63]
  410682:	inc    eax
  410683:	sub    dh,BYTE PTR [eax]
  410685:	pop    ebp
  410686:	jg     0x410703
  410688:	out    dx,al
  410689:	xor    BYTE PTR [edx],ah
  41068b:	xor    BYTE PTR [eax+edi*1-0x73ac7a57],bh
  410692:	aad    0x15
  410694:	jl     0x410626
  410696:	inc    ecx
  410697:	pusha  
  410698:	outs   dx,BYTE PTR ds:[esi]
  410699:	in     al,0x79
  41069b:	or     DWORD PTR [eax+0x6],0x5d007e
  4106a2:	jns    0x4106cd
  4106a4:	xchg   esi,eax
  4106a5:	fsubr  DWORD PTR [ebp+eiz*2+0x615127a0]
  4106ac:	out    dx,eax
  4106ad:	jg     0x410703
  4106af:	(bad)
  4106b2:	cmp    eax,0x3ccb3e
  4106b7:	adc    BYTE PTR [edi+0x3f],ah
  4106ba:	fbld   TBYTE PTR [ecx+0x48]
  4106bd:	arpl   WORD PTR [edx-0x5],bp
  4106c0:	mov    bh,0xcf
  4106c2:	cwde   
  4106c3:	adc    ebx,eax
  4106c5:	pop    ss
  4106c6:	out    0xe9,al
  4106c8:	adc    ebx,DWORD PTR [ecx+0x319989e8]
  4106ce:	xchg   DWORD PTR [ebx-0x1a],ebx
  4106d1:	aaa    
  4106d2:	retf   
  4106d3:	add    DWORD PTR [eax+0x5669f68b],edi
  4106d9:	adc    ah,BYTE PTR [ebp+edi*1+0x7]
  4106dd:	repz popa 
  4106df:	mov    DWORD PTR [bp+si+0x66],ecx
  4106e3:	out    0x7,eax
  4106e5:	sbb    eax,0xb9d7cb3a
  4106ea:	das    
  4106eb:	aad    0xfa
  4106ed:	mov    al,ds:0x7a4d76e4
  4106f2:	cmp    DWORD PTR [esi+0xa7b7ee8],edi
  4106f8:	in     al,0xb
  4106fa:	in     al,dx
  4106fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106fc:	jle    0x4106d0
  4106fe:	xchg   esi,eax
  4106ff:	repz sbb DWORD PTR [edi+ebp*1],edi
  410703:	fisttp DWORD PTR [eax]
  410705:	cld    
  410706:	fs aas 
  410708:	test   al,0x15
  41070a:	imul   ebp,edx,0x4cfc860b
  410710:	jmp    0xd99259ab
  410715:	inc    eax
  410716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410717:	mov    bh,0x5b
  410719:	push   esi
  41071a:	jae    0x410748
  41071c:	(bad)  
  41071d:	mov    dh,0x5e
  41071f:	retf   0xd2ec
  410722:	pop    ss
  410723:	retf   
  410724:	mov    al,ds:0x2aeacc23
  410729:	and    eax,0x405f3483
  41072e:	add    eax,0xeea1a991
  410733:	push   cs
  410734:	mov    al,bh
  410736:	mov    BYTE PTR [ebp+0x49],ah
  410739:	xchg   esp,eax
  41073a:	sub    al,0x1d
  41073c:	cmp    eax,0xa64977aa
  410741:	sbb    BYTE PTR [edi*2+0x11cb7ef9],al
  410748:	int    0xba
  41074a:	test   BYTE PTR [edi+ebp*4],bh
  41074d:	ja     0x4107ce
  41074f:	pusha  
  410750:	popa   
  410751:	shl    edx,0xc0
  410754:	cmc    
  410755:	jb     0x4106e9
  410757:	push   esi
  410758:	imul   esi,esi,0x5e60557
  41075e:	lea    ebp,[ecx+0x3f]
  410761:	mov    eax,ds:0x87214423
  410766:	dec    edx
  410767:	xor    eax,0xa48839ee
  41076c:	je     0x4107c1
  41076e:	jle    0x4107a7
  410770:	test   al,0x3f
  410772:	stc    
  410773:	mov    BYTE PTR [ebp-0x75a18327],bh
  410779:	addr16 ret 
  41077b:	into   
  41077c:	stos   BYTE PTR es:[edi],al
  41077d:	lods   eax,DWORD PTR ds:[esi]
  41077e:	mov    al,0xd6
  410780:	dec    ebx
  410781:	push   0x5d
  410783:	push   edi
  410784:	add    ebx,DWORD PTR [edx-0x53]
  410787:	jbe    0x410721
  410789:	pop    edi
  41078a:	jp     0x4107fe
  41078c:	arpl   WORD PTR [ebx+0x12529087],bp
  410792:	pop    eax
  410793:	sub    esi,eax
  410795:	sbb    DWORD PTR [ebp-0xb49243c],0xd6b7939e
  41079f:	popa   
  4107a0:	add    eax,0xf4f403df
  4107a5:	xor    al,0xec
  4107a7:	pop    ebp
  4107a8:	mov    ebp,0xc75162a0
  4107ad:	outs   dx,DWORD PTR ds:[esi]
  4107ae:	lock test DWORD PTR [edx+ebx*1-0x4],0xa4e5ddd8
  4107b7:	xchg   ecx,eax
  4107b8:	inc    eax
  4107b9:	pop    ecx
  4107ba:	xchg   dh,dl
  4107bc:	popa   
  4107bd:	inc    ebx
  4107be:	out    dx,eax
  4107bf:	dec    esp
  4107c0:	es jmp 0x20895099
  4107c6:	daa    
  4107c7:	push   ecx
  4107c8:	hlt    
  4107c9:	sub    esp,0xe5a6dac3
  4107cf:	and    eax,0x87e304cb
  4107d4:	and    eax,DWORD PTR [eax-0x3b]
  4107d7:	or     DWORD PTR [edi],edi
  4107d9:	pusha  
  4107da:	cdq    
  4107db:	sbb    eax,0xb74e923f
  4107e0:	stc    
  4107e1:	push   eax
  4107e2:	push   cs
  4107e3:	xor    al,0xab
  4107e5:	adc    DWORD PTR [eax],0x42d52e30
  4107eb:	push   ds
  4107ec:	aaa    
  4107ed:	in     eax,dx
  4107ee:	mov    dh,0x3c
  4107f0:	mov    bh,0x19
  4107f2:	(bad)  
  4107f3:	lahf   
  4107f4:	sub    BYTE PTR [esi],cl
  4107f6:	call   0x2878:0x9e3091d4
  4107fd:	xchg   esi,eax
  4107fe:	mov    ebp,0xf14dde1c
  410803:	add    dl,BYTE PTR [ebp+0x69]
  410806:	cmp    edx,esp
  410808:	(bad)  
  410809:	mov    ebx,0x5104eb35
  41080e:	aad    0xd5
  410810:	add    eax,0xf2c7fdb2
  410815:	cmp    DWORD PTR [eax-0x3980089e],ebp
  41081b:	mov    ebx,0x6ed9bd4f
  410820:	sub    ebp,DWORD PTR ds:0x4e38d020
  410826:	jne    0x4107ae
  410828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410829:	les    eax,FWORD PTR [ebx+0x1d]
  41082c:	adc    al,0xa6
  41082e:	xchg   BYTE PTR [esi],ah
  410830:	sar    DWORD PTR [edi+0x31],cl
  410833:	inc    ecx
  410834:	xchg   DWORD PTR [esi+0x5f],esi
  410837:	stos   BYTE PTR es:[edi],al
  410838:	(bad)  
  410839:	adc    al,0xdc
  41083b:	out    0xdc,eax
  41083d:	jmp    0x97c701a8
  410842:	mov    DWORD PTR [ecx+edi*1],eax
  410845:	and    ch,BYTE PTR [ebx-0x6d77913e]
  41084b:	fild   DWORD PTR [esi]
  41084d:	mov    dh,0x42
  41084f:	popa   
  410850:	push   es
  410851:	ss dec esi
  410853:	and    al,BYTE PTR [ecx+ecx*1]
  410856:	mov    al,0x4
  410858:	std    
  410859:	cmp    DWORD PTR [esi+0x6aa07bd8],esi
  41085f:	jg     0x41089f
  410861:	sub    BYTE PTR [ecx-0x3d],0x6e
  410865:	aad    0x69
  410867:	inc    DWORD PTR [ecx]
  410869:	outs   dx,DWORD PTR ds:[esi]
  41086a:	ret    
  41086b:	push   ecx
  41086c:	inc    esi
  41086d:	adc    al,0x3b
  41086f:	ds pop ebp
  410871:	in     al,0xd6
  410873:	inc    eax
  410874:	add    DWORD PTR [ebp-0x207a5660],ebp
  41087a:	sahf   
  41087b:	fist   WORD PTR [edx+0x0]
  41087e:	pop    esp
  41087f:	sbb    al,0x85
  410881:	inc    edx
  410882:	mov    edi,ss
  410884:	push   esp
  410885:	or     bh,BYTE PTR [ecx+0x20738770]
  41088b:	shl    BYTE PTR [edx-0x4a25cace],0xd
  410892:	gs cmp al,0xb3
  410895:	adc    bh,al
  410897:	sbb    BYTE PTR [ecx-0x3e],bh
  41089a:	cmp    eax,0x1fbaae8b
  41089f:	jp     0x4108b2
  4108a1:	outs   dx,DWORD PTR ds:[esi]
  4108a2:	call   0x414a:0xa203e464
  4108a9:	pop    ecx
  4108aa:	xchg   ebp,eax
  4108ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ac:	xor    edx,ebp
  4108ae:	std    
  4108af:	jns    0x41083f
  4108b1:	fwait
  4108b2:	lahf   
  4108b3:	adc    bh,BYTE PTR [esp+edi*8]
  4108b6:	(bad)  
  4108b7:	mov    ebp,0x687809a3
  4108bc:	push   eax
  4108bd:	aad    0x96
  4108bf:	or     eax,0xed841362
  4108c4:	inc    edi
  4108c5:	add    bh,BYTE PTR [edi]
  4108c7:	stos   DWORD PTR es:[edi],eax
  4108c8:	ja     0x41091e
  4108ca:	xchg   ebp,eax
  4108cb:	adc    al,0xff
  4108cd:	and    DWORD PTR [ebx-0x28c52fdf],ebx
  4108d3:	xchg   esi,eax
  4108d4:	pop    esi
  4108d5:	shl    BYTE PTR [esi+0x269c536b],cl
  4108db:	stos   BYTE PTR es:[edi],al
  4108dc:	aam    0x82
  4108de:	(bad)  
  4108df:	pop    edx
  4108e0:	test   ecx,esp
  4108e2:	arpl   WORD PTR [ebx],dx
  4108e4:	ret    0x26b7
  4108e7:	clc    
  4108e8:	outs   dx,DWORD PTR ds:[esi]
  4108e9:	fsub   QWORD PTR [esi-0x5d]
  4108ec:	test   al,0x2e
  4108ee:	xor    edi,DWORD PTR [edx+0x4b775b18]
  4108f4:	push   ds
  4108f5:	call   0x1531:0x9de08922
  4108fc:	aas    
  4108fd:	cli    
  4108fe:	loopne 0x410955
  410900:	addr16 push 0x33
  410903:	ds icebp 
  410905:	test   BYTE PTR ds:0xec9d3ed3,al
  41090b:	sbb    bl,bl
  41090d:	or     eax,0xf7181725
  410912:	fbstp  TBYTE PTR [edi-0x7f0d6085]
  410918:	jge    0x410926
  41091a:	fcomi  st,st(6)
  41091c:	or     DWORD PTR [ebx],0x37
  41091f:	lods   al,BYTE PTR ds:[esi]
  410920:	cwde   
  410921:	inc    ecx
  410922:	inc    edx
  410923:	jmp    FWORD PTR [edi+0x14]
  410926:	sub    bl,BYTE PTR [esi]
  410928:	test   al,0xb2
  41092a:	mov    ch,0xc5
  41092c:	cs sahf 
  41092e:	mov    dl,0x3d
  410930:	adc    al,0xd6
  410932:	pop    eax
  410933:	sub    eax,DWORD PTR [ebx+0x4f36fb2e]
  410939:	jmp    0xed1d:0x6c9f7d86
  410940:	mov    ecx,ss
  410942:	std    
  410943:	pop    es
  410944:	mov    bl,0x38
  410946:	scas   al,BYTE PTR es:[edi]
  410947:	lds    esp,FWORD PTR [edx-0x40de7d4f]
  41094d:	sbb    ch,dh
  41094f:	popa   
  410950:	daa    
  410951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410952:	adc    DWORD PTR [ecx+0x14],edi
  410955:	xor    dl,dl
  410957:	clc    
  410958:	aas    
  410959:	mov    es,WORD PTR [ecx+0x50]
  41095c:	xchg   ecx,eax
  41095d:	mov    dl,0x6c
  41095f:	add    al,0x8c
  410961:	jl     0x410905
  410963:	sbb    DWORD PTR [eax+eiz*1-0x40],ebp
  410967:	pushf  
  410968:	pop    edx
  410969:	pop    es
  41096a:	jecxz  0x41090c
  41096c:	xchg   ebp,eax
  41096d:	shl    edx,1
  41096f:	lahf   
  410970:	xchg   DWORD PTR [ebx-0x1f5cca1f],eax
  410976:	or     cl,BYTE PTR [ebx+edi*4-0xa8a3770]
  41097d:	jmp    0x4109e8
  41097f:	(bad)  
  410980:	cmp    edi,ecx
  410982:	dec    esp
  410983:	jns    0x4109a8
  410985:	test   al,0xef
  410987:	push   edx
  410988:	stos   BYTE PTR es:[edi],al
  410989:	push   ds
  41098a:	fmul   QWORD PTR [ebx]
  41098c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41098d:	dec    edi
  41098e:	xchg   ecx,eax
  41098f:	retf   0x6f4a
  410992:	mov    dh,0x8c
  410994:	jmp    0x9be0:0x73d8889c
  41099b:	out    dx,al
  41099c:	test   DWORD PTR [ebx+0x2e3e8c77],ebx
  4109a2:	lock push cs
  4109a4:	adc    cl,ch
  4109a6:	mov    cl,0xa2
  4109a8:	mov    esp,0x4a0e9f48
  4109ad:	mov    ds:0xc4f65191,al
  4109b2:	sar    BYTE PTR [esi+0x3e],cl
  4109b5:	fmul   QWORD PTR [eax+0x16]
  4109b8:	and    BYTE PTR [ebx+0x40],0x62
  4109bc:	sub    eax,0xc5fe90d
  4109c1:	or     cl,dl
  4109c3:	(bad)  
  4109c4:	dec    ebx
  4109c5:	xor    ecx,edx
  4109c7:	mov    al,ds:0x3abd1cf3
  4109cc:	inc    edi
  4109cd:	jae    0x4109ca
  4109cf:	frstor [edi+0x8]
  4109d2:	jo     0x410a03
  4109d4:	loope  0x410958
  4109d6:	xchg   edx,eax
  4109d7:	sub    esp,DWORD PTR [edi-0x7f]
  4109da:	das    
  4109db:	mov    edx,0xd77399b2
  4109e0:	xchg   BYTE PTR ds:0xbe6d6dd2,dl
  4109e6:	repz xchg edi,eax
  4109e8:	mov    esp,0xe60c5f7f
  4109ed:	xor    esi,esp
  4109ef:	push   edx
  4109f0:	dec    esi
  4109f1:	(bad)  
  4109f2:	(bad)  
  4109f3:	sub    al,0xed
  4109f5:	fild   QWORD PTR [eax-0x6e909527]
  4109fb:	jno    0x4109f9
  4109fd:	xor    eax,0xdaf29da7
  410a02:	mov    bh,0xec
  410a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a05:	jmp    0x410a5c
  410a07:	ins    DWORD PTR es:[edi],dx
  410a08:	pop    ecx
  410a09:	or     BYTE PTR fs:[edi-0x11edfdf3],0x70
  410a11:	out    dx,eax
  410a12:	mov    ah,0xff
  410a14:	pop    ebx
  410a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a16:	mov    esp,0xc4f4907f
  410a1b:	dec    ebp
  410a1c:	jbe    0x4109d4
  410a1e:	push   0x6e
  410a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a21:	in     eax,dx
  410a22:	cmc    
  410a23:	sbb    al,0x5f
  410a25:	in     al,dx
  410a26:	shl    ch,0xf7
  410a29:	jmp    0x4ee4:0xbb1aa261
  410a30:	aas    
  410a31:	aad    0x55
  410a33:	push   ebx
  410a34:	stos   DWORD PTR es:[edi],eax
  410a35:	aam    0x35
  410a37:	mov    esi,0xb9f188d4
  410a3c:	dec    ebp
  410a3d:	(bad)  
  410a3f:	mov    dh,0x81
  410a41:	cmovge ebx,esi
  410a44:	add    esp,DWORD PTR [ecx+0x69]
  410a47:	jae    0x410ac6
  410a49:	jecxz  0x410aa7
  410a4b:	jp     0x4109ec
  410a4d:	es scas al,BYTE PTR es:[edi]
  410a4f:	pop    edx
  410a50:	mov    eax,DWORD PTR ds:0x15b825a0
  410a56:	icebp  
  410a57:	push   edx
  410a58:	mov    dl,0xac
  410a5a:	push   ds
  410a5b:	and    dl,BYTE PTR [esi]
  410a5d:	aaa    
  410a5e:	cdq    
  410a5f:	shl    DWORD PTR [edi+0x2],1
  410a62:	aam    0xc3
  410a64:	dec    ebp
  410a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a66:	popa   
  410a67:	or     DWORD PTR [ebp+0x0],esi
  410a6a:	faddp  st(6),st
  410a6c:	jl     0x410a1b
  410a6e:	push   cs
  410a6f:	popf   
  410a70:	sub    bl,BYTE PTR [ebx-0xf]
  410a73:	ja     0x4109ff
  410a75:	or     BYTE PTR [eax],bl
  410a77:	jecxz  0x410a0f
  410a79:	push   ebx
  410a7a:	sar    cl,cl
  410a7c:	int    0xd8
  410a7e:	lock in al,dx
  410a80:	mov    ds,edi
  410a82:	das    
  410a83:	cdq    
  410a84:	add    DWORD PTR [edx],eax
  410a86:	adc    al,0x2f
  410a88:	cdq    
  410a89:	xchg   ebx,eax
  410a8a:	out    dx,al
  410a8b:	fild   DWORD PTR ds:0x6df4de35
  410a91:	ret    0xbe17
  410a94:	into   
  410a95:	mov    edi,0xceb8fa02
  410a9a:	mov    ah,0x32
  410a9c:	adc    BYTE PTR [esi],0xb7
  410a9f:	mov    al,0x96
  410aa1:	pushf  
  410aa2:	shl    al,cl
  410aa4:	sahf   
  410aa5:	cli    
  410aa6:	cmovp  edi,DWORD PTR [ebx+ebx*8]
  410aaa:	xor    BYTE PTR [ecx+0x23],bl
  410aad:	(bad)  
  410ab0:	jbe    0x410a51
  410ab2:	and    eax,0x8093aac9
  410ab7:	mov    esp,0x72a4dc5d
  410abc:	mov    ds:0xf7aac050,al
  410ac1:	icebp  
  410ac2:	fld1   
  410ac4:	mov    ebp,0x3940787b
  410ac9:	pop    es
  410aca:	ins    BYTE PTR es:[edi],dx
  410acb:	ja     0x410a73
  410acd:	push   edx
  410ace:	pop    esi
  410acf:	pop    ss
  410ad0:	and    BYTE PTR [edi+esi*4+0x77957228],0x71
  410ad8:	inc    esp
  410ad9:	jecxz  0x410a84
  410adb:	in     eax,0xa
  410add:	xchg   esi,eax
  410ade:	xchg   DWORD PTR [edi-0x649009da],ebx
  410ae4:	xchg   ebp,eax
  410ae5:	and    al,dl
  410ae7:	enter  0x1eaa,0xcc
  410aeb:	in     al,0xbb
  410aed:	adc    al,0x4
  410aef:	arpl   ax,dx
  410af1:	es ret 
  410af3:	xor    eax,0x4ad53e3c
  410af8:	int    0xef
  410afa:	mov    al,ds:0xe94a0728
  410aff:	jbe    0x410b55
  410b01:	shr    BYTE PTR [edi+0x7d3502d8],cl
  410b07:	aas    
  410b08:	jb     0x410af9
  410b0a:	xlat   BYTE PTR ds:[ebx]
  410b0b:	call   0xa533:0x97075991
  410b12:	in     eax,dx
  410b13:	sub    edx,eax
  410b15:	jns    0x410b89
  410b17:	fs ins BYTE PTR es:[edi],dx
  410b19:	test   al,0xe2
  410b1b:	jl     0x410b18
  410b1d:	and    ebp,edi
  410b1f:	in     eax,0xf0
  410b21:	jecxz  0x410aa8
  410b23:	ds inc edi
  410b25:	adc    eax,0x9a816fb4
  410b2a:	sti    
  410b2b:	call   0xf95e2595
  410b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b31:	data16 arpl WORD PTR [edi-0x3],bx
  410b35:	in     al,dx
  410b36:	inc    esp
  410b37:	mov    dl,0x2d
  410b39:	xchg   edx,eax
  410b3a:	test   DWORD PTR [esi+0x0],ebx
  410b3d:	popf   
  410b3e:	sub    dl,al
  410b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b41:	push   ds
  410b42:	test   BYTE PTR [ebp+0x23],bh
  410b45:	sahf   
  410b46:	push   esi
  410b47:	ret    
  410b48:	out    dx,eax
  410b49:	push   esp
  410b4a:	fidiv  DWORD PTR [edi]
  410b4c:	sbb    al,0xfd
  410b4e:	bound  eax,QWORD PTR [edx+eiz*4-0x1150e5d]
  410b55:	dec    esp
  410b56:	mov    ds,WORD PTR [edi-0x39]
  410b59:	sbb    eax,0xcf8a4099
  410b5e:	aam    0x13
  410b60:	mov    edi,0x99c01875
  410b65:	pop    edx
  410b66:	enter  0xec2,0xfd
  410b6a:	fdivr  st(3),st
  410b6c:	cwde   
  410b6d:	fistp  DWORD PTR [ebp-0x17]
  410b70:	push   0x871b7e31
  410b75:	mov    edx,0xdaef501a
  410b7a:	pushf  
  410b7b:	jne    0x410b37
  410b7d:	aam    0x69
  410b7f:	adc    eax,DWORD PTR [ebp+edi*4-0x64]
  410b83:	xchg   edx,eax
  410b84:	xchg   esi,eax
  410b85:	mov    esi,0xecea4603
  410b8a:	cdq    
  410b8b:	mov    edx,0x402081a8
  410b90:	xchg   edi,eax
  410b91:	dec    ecx
  410b92:	add    bl,BYTE PTR [edx+0x37]
  410b95:	ror    cl,0x7c
  410b98:	sub    al,0x78
  410b9a:	xor    ah,BYTE PTR ds:0xc1237fe4
  410ba0:	pushf  
  410ba1:	sbb    esp,eax
  410ba3:	adc    eax,0xcae0d0de
  410ba8:	daa    
  410ba9:	out    dx,eax
  410baa:	ret    
  410bab:	xchg   ecx,eax
  410bac:	dec    ebx
  410bad:	test   BYTE PTR [edx-0x7c],bl
  410bb0:	sbb    esi,ebp
  410bb2:	sar    BYTE PTR [edi],cl
  410bb4:	sbb    BYTE PTR [ecx-0xaa73896],ch
  410bba:	cs in  al,dx
  410bbc:	mov    edx,0xa93af66e
  410bc1:	xor    eax,0x76920e9a
  410bc6:	into   
  410bc7:	rol    BYTE PTR [ebp+0x3b4e091e],1
  410bcd:	icebp  
  410bce:	jns    0x410b97
  410bd0:	or     BYTE PTR [edx],ch
  410bd2:	adc    al,0x36
  410bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd5:	inc    edi
  410bd6:	mov    eax,ds:0xd18da3d3
  410bdb:	fdiv   st,st(3)
  410bdd:	inc    ebp
  410bde:	sbb    al,0x5c
  410be0:	aad    0x8
  410be2:	imul   eax,DWORD PTR [esi-0x773edc3f],0x91c01f4e
  410bec:	or     ebx,eax
  410bee:	neg    DWORD PTR [ebx+0x50]
  410bf1:	adc    eax,0xf4cc498b
  410bf6:	lahf   
  410bf7:	retf   0x70be
  410bfa:	cmc    
  410bfb:	cmp    dl,dh
  410bfd:	int    0xe6
  410bff:	imul   ecx,ecx,0xfffffffc
  410c02:	xor    DWORD PTR [ebx+0x38],ebx
  410c05:	mov    ebx,0x2d9d655e
  410c0a:	popa   
  410c0b:	jge    0x410bb3
  410c0d:	ja     0x410c0f
  410c0f:	das    
  410c10:	stc    
  410c11:	add    eax,0x8077b283
  410c16:	lds    edi,FWORD PTR [edx]
  410c18:	jmp    0x13bb:0x57adb650
  410c1f:	add    ah,BYTE PTR [esi+0x2840bf47]
  410c25:	loop   0x410c79
  410c27:	xchg   BYTE PTR [esi],bh
  410c29:	jl     0x410c2d
  410c2b:	test   DWORD PTR [ebx-0x2c],ebx
  410c2e:	adc    eax,0xbbbebc1a
  410c33:	mov    dl,dl
  410c35:	push   esi
  410c36:	fld    TBYTE PTR [esp+edi*8-0x61]
  410c3a:	mov    edx,0xf650d7b8
  410c3f:	sub    eax,0x5052f63f
  410c44:	lods   eax,DWORD PTR ds:[esi]
  410c45:	push   0xd1774562
  410c4a:	int3   
  410c4b:	jecxz  0x410bf8
  410c4d:	cmp    eax,DWORD PTR [edi*2+0x594d3559]
  410c54:	cmp    DWORD PTR [edi],ecx
  410c56:	sahf   
  410c57:	mov    ds:0x6146ed2b,eax
  410c5c:	cs stos BYTE PTR es:[edi],al
  410c5e:	jp     0x410ca5
  410c60:	test   al,0x88
  410c62:	or     ebp,DWORD PTR [ebx+ebp*2+0x3d744ab7]
  410c69:	mov    ebx,DWORD PTR [edi+0x40]
  410c6c:	je     0x410c6e
  410c6e:	clc    
  410c6f:	pop    esi
  410c70:	shl    esi,1
  410c72:	or     BYTE PTR ds:0xb28665b0,al
  410c78:	pop    edi
  410c79:	cmp    DWORD PTR [esi],edi
  410c7b:	and    ah,al
  410c7d:	stc    
  410c7e:	dec    esi
  410c7f:	mov    ?,edx
  410c81:	pop    ebx
  410c82:	ins    DWORD PTR es:[edi],dx
  410c83:	or     esp,0x1b
  410c86:	js     0x410cda
  410c88:	pop    edx
  410c89:	fcmovbe st,st(3)
  410c8b:	call   0x64785059
  410c90:	lahf   
  410c91:	or     eax,0x804e20f0
  410c96:	pop    ecx
  410c97:	inc    edx
  410c98:	loope  0x410cfa
  410c9a:	inc    esi
  410c9b:	test   al,0x59
  410c9d:	imul   edi,DWORD PTR ds:0xf7c545ad,0x73
  410ca4:	loop   0x410c73
  410ca6:	and    DWORD PTR [esi],esp
  410ca8:	pop    ecx
  410ca9:	mov    ch,0xbe
  410cab:	adc    dh,BYTE PTR [ecx+0x47]
  410cae:	sbb    al,0x93
  410cb0:	shl    dl,1
  410cb2:	sahf   
  410cb3:	loope  0x410ce1
  410cb5:	cmp    BYTE PTR [edx],cl
  410cb7:	shl    BYTE PTR [esp+ecx*1],1
  410cba:	push   esi
  410cbb:	rcl    BYTE PTR [ecx+0x5a],1
  410cbe:	into   
  410cbf:	mov    bh,0xdd
  410cc1:	int3   
  410cc2:	adc    eax,0xffffffb0
  410cc5:	sub    al,0x95
  410cc7:	adc    eax,0x1bb0a759
  410ccc:	push   cs
  410ccd:	dec    eax
  410cce:	imul   edx,edi,0x66
  410cd1:	cmp    al,0xf3
  410cd3:	sbb    al,0x29
  410cd5:	add    DWORD PTR [eax],eax
  410cd7:	or     DWORD PTR [ebx],ebp
  410cd9:	jmp    FWORD PTR [edi+0xf]
  410cdc:	or     DWORD PTR [ebp-0x21899671],ebx
  410ce2:	inc    ecx
  410ce3:	mov    cl,0x70
  410ce5:	xchg   ebp,eax
  410ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce7:	or     al,0xd5
  410ce9:	pop    es
  410cea:	sbb    eax,0xd109905d
  410cef:	jecxz  0x410d1f
  410cf1:	jo     0x410d27
  410cf3:	loopne 0x410d52
  410cf5:	hlt    
  410cf6:	out    0x57,al
  410cf8:	js     0x410d30
  410cfa:	and    DWORD PTR [eax+0x30],0x21
  410cfe:	inc    esi
  410cff:	test   BYTE PTR [ecx-0x53],bh
  410d02:	mov    ecx,ebp
  410d04:	mov    esp,0xe461d075
  410d09:	imul   ebx,DWORD PTR [eiz*2+0x4b72a5e9],0xffffffce
  410d11:	aam    0xad
  410d13:	and    al,0x8e
  410d15:	out    dx,al
  410d16:	jb     0x410d52
  410d18:	ins    BYTE PTR es:[edi],dx
  410d19:	xor    cl,dh
  410d1b:	xor    eax,0xa1d8796f
  410d20:	ins    DWORD PTR es:[edi],dx
  410d21:	mov    ch,0xa4
  410d23:	jmp    0x4fb3:0x9184b1cb
  410d2a:	sub    dl,al
  410d2c:	mov    eax,ds:0x5c1ae82e
  410d31:	xor    al,BYTE PTR [ebx+0x2b]
  410d34:	popa   
  410d35:	push   cs
  410d36:	xchg   edx,edx
  410d38:	je     0x410d4a
  410d3a:	imul   esi,DWORD PTR [esi],0xeb8d3a31
  410d40:	test   DWORD PTR fs:[ebx*4-0x2d491418],0x9918962a
  410d4c:	shl    DWORD PTR [eax],1
  410d4e:	mov    al,ds:0x6ef92f29
  410d53:	mov    eax,ds:0x37b7dfe
  410d58:	adc    eax,0x6c86bec1
  410d5d:	cmp    cl,BYTE PTR [eax+0x44e64431]
  410d63:	push   cs
  410d64:	bound  esp,QWORD PTR [esi]
  410d66:	call   0x3bb788
  410d6b:	repnz sbb eax,0x62e73ba5
  410d71:	cmp    ch,BYTE PTR [eax]
  410d73:	jle    0x410de4
  410d75:	jmp    0x5c70fb93
  410d7a:	jne    0x410d94
  410d7c:	(bad)  
  410d7d:	push   edx
  410d7e:	jno    0x410d03
  410d80:	call   0x9776:0xc0ff3f4e
  410d87:	xor    DWORD PTR [edi-0x527fefb7],ebx
  410d8d:	lock aas 
  410d8f:	pop    esi
  410d90:	sub    bh,BYTE PTR [edi+0x68651027]
  410d96:	mov    esp,0xb0b36ed4
  410d9b:	fwait
  410d9c:	retf   0xfd9b
  410d9f:	sbb    dh,BYTE PTR ds:0x80e98c87
  410da5:	aas    
  410da6:	test   eax,0xc3712216
  410dac:	outs   dx,BYTE PTR ds:[esi]
  410dad:	es mov es,esp
  410db0:	inc    edx
  410db1:	pop    ds
  410db2:	out    dx,al
  410db3:	sub    ecx,DWORD PTR [ecx-0x27]
  410db6:	sub    DWORD PTR [edx-0x4e],edx
  410db9:	mov    ds:0x4c7fea2c,al
  410dbe:	or     esi,DWORD PTR [ebx+0x6a]
  410dc1:	xchg   ebx,eax
  410dc2:	or     bl,BYTE PTR [edx-0x1ca12a5f]
  410dc8:	leave  
  410dc9:	hlt    
  410dca:	xor    al,BYTE PTR [edx-0x17]
  410dcd:	add    BYTE PTR [esi+ecx*2+0x2d],0x65
  410dd2:	int    0x66
  410dd4:	into   
  410dd5:	cmp    DWORD PTR ds:0xcc397acc,esp
  410ddb:	iret   
  410ddc:	mov    ebp,0xff86da11
  410de1:	pop    edx
  410de2:	stc    
  410de3:	mov    ebx,0x3e600dcc
  410de8:	inc    edi
  410de9:	push   0xffffff9a
  410deb:	mov    esp,0x64809ace
  410df0:	clc    
  410df1:	cmp    cl,ch
  410df3:	out    0xc3,al
  410df5:	sub    DWORD PTR ds:0xa43b9995,esp
  410dfb:	cwde   
  410dfc:	jg     0x410d9d
  410dfe:	(bad)  
  410dff:	ret    0xa17a
  410e02:	or     eax,0x2659f1aa
  410e07:	push   0x14
  410e09:	fucomip st,st(3)
  410e0b:	mov    ebx,0x6efd064e
  410e10:	fsub   QWORD PTR [ebx]
  410e12:	bnd ja 0x410dd1
  410e15:	(bad)  
  410e16:	bound  ebp,QWORD PTR [edi-0x5ee28c15]
  410e1c:	inc    eax
  410e1d:	aam    0x8e
  410e1f:	sbb    al,0xdc
  410e21:	pop    ebx
  410e22:	fnstenv [ecx+0x2b]
  410e25:	mov    eax,DWORD PTR [edx+0x6f]
  410e28:	cmp    ebp,DWORD PTR [ebx-0x33d8bf2f]
  410e2e:	stc    
  410e2f:	pushf  
  410e30:	lahf   
  410e31:	out    0x9,al
  410e33:	sbb    dl,dh
  410e35:	jmp    0x59e:0x4f9f4442
  410e3c:	xchg   edx,eax
  410e3d:	out    dx,eax
  410e3e:	rol    DWORD PTR [ebx+0x1b],1
  410e41:	cdq    
  410e42:	dec    ebp
  410e43:	jbe    0x410eb7
  410e45:	or     edx,eax
  410e47:	fistp  WORD PTR [esi]
  410e49:	mov    cl,0x70
  410e4b:	sbb    al,0x98
  410e4d:	enter  0x1b5f,0xbc
  410e51:	call   0x38396699
  410e56:	ja     0x410eaf
  410e58:	mov    al,0x74
  410e5a:	mov    ebp,0xe425e98f
  410e5f:	(bad)  
  410e60:	out    dx,al
  410e61:	aas    
  410e62:	pop    ss
  410e63:	out    0x28,eax
  410e65:	jae    0x410e8c
  410e67:	pop    ecx
  410e68:	mov    ebx,0x3da68230
  410e6d:	xchg   ebx,eax
  410e6e:	jmp    0x4545:0xeb1b7ccb
  410e75:	mov    edi,0x3effd967
  410e7a:	inc    esp
  410e7b:	or     esi,DWORD PTR [ebx]
  410e7d:	add    esi,ebp
  410e7f:	push   es
  410e80:	shl    DWORD PTR [ebp-0x1fb94e05],cl
  410e86:	ret    0x7e56
  410e89:	mov    BYTE PTR gs:[ebp+0x54],bh
  410e8d:	je     0x410e83
  410e8f:	cmp    DWORD PTR [edx+0x1],ebx
  410e92:	scas   eax,DWORD PTR es:[edi]
  410e93:	mov    ch,0x6d
  410e95:	ret    
  410e96:	jnp    0x410ef8
  410e98:	fwait
  410e99:	mov    eax,0xcc893829
  410e9e:	cmp    eax,0xe949f850
  410ea3:	out    dx,eax
  410ea4:	loop   0x410e85
  410ea6:	fist   DWORD PTR [edx]
  410ea8:	jg     0x410ea8
  410eaa:	push   edx
  410eab:	dec    ebx
  410eac:	or     ebx,esi
  410eae:	add    ecx,DWORD PTR [edx-0x36c3ac40]
  410eb4:	out    0xcf,al
  410eb6:	pop    ebp
  410eb7:	(bad)  
  410eb8:	std    
  410eb9:	inc    esp
  410eba:	adc    al,0xab
  410ebc:	sub    eax,0xd6fb0682
  410ec1:	aam    0x9e
  410ec3:	and    eax,0x70f67aa6
  410ec8:	or     bl,BYTE PTR [eax+0x48eecd04]
  410ece:	mov    WORD PTR [ecx],ss
  410ed0:	mov    dl,0x8f
  410ed2:	and    al,0x45
  410ed4:	add    al,0x99
  410ed6:	ret    0x2033
  410ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eda:	repnz jecxz 0x410f31
  410edd:	add    BYTE PTR [ebp-0x18365023],bl
  410ee3:	jmp    0xbf00:0xa0b556ed
  410eea:	repz out 0x2d,al
  410eed:	pop    esi
  410eee:	or     esi,edx
  410ef0:	jno    0x410f11
  410ef2:	push   ecx
  410ef3:	icebp  
  410ef4:	out    0x58,eax
  410ef6:	popa   
  410ef7:	pop    es
  410ef8:	adc    eax,0x86f5e861
  410efd:	adc    al,0x47
  410eff:	sub    al,0xdf
  410f01:	push   esp
  410f02:	mov    al,0x67
  410f04:	xchg   edx,eax
  410f05:	retf   
  410f06:	sar    BYTE PTR [ebx],cl
  410f08:	push   0x2890aaca
  410f0d:	jge    0x410ed5
  410f0f:	jg     0x410eca
  410f11:	pop    esi
  410f12:	gs iret 
  410f14:	imul   eax,DWORD PTR [edx-0x754647da],0x552f5cc0
  410f1e:	add    ebp,DWORD PTR [ecx+0x30951cba]
  410f24:	and    BYTE PTR [ebp+0x400293ee],dl
  410f2a:	jl     0x410ef9
  410f2c:	std    
  410f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f2e:	sbb    edi,DWORD PTR [edx]
  410f30:	adc    bl,ch
  410f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f33:	fwait
  410f34:	push   es
  410f35:	das    
  410f36:	jmp    0x410ed2
  410f38:	ror    DWORD PTR [edx+0x5d],1
  410f3b:	sub    BYTE PTR [ebx-0x1ca407de],bl
  410f41:	int3   
  410f42:	adc    DWORD PTR [esi-0x18],edx
  410f45:	not    BYTE PTR [eax-0x26]
  410f48:	sub    al,BYTE PTR ds:0x10b8
  410f4d:	mov    cl,0xd1
  410f4f:	cwde   
  410f50:	xlat   BYTE PTR ds:[ebx]
  410f51:	inc    eax
  410f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f53:	dec    ecx
  410f54:	jg     0x410f5b
  410f56:	xchg   edi,eax
  410f57:	fs sbb ah,al
  410f5a:	sbb    al,BYTE PTR [ebp+0x4550b887]
  410f60:	sub    al,0xcd
  410f62:	nop
  410f63:	jmp    0x2bce:0xd4e913d0
  410f6a:	aad    0xa3
  410f6c:	dec    ebp
  410f6d:	sub    DWORD PTR [ebx-0x72],ecx
  410f70:	rcl    DWORD PTR ds:0x619d8599,0xfc
  410f77:	aam    0x62
  410f79:	cmp    ebx,DWORD PTR [ecx+0x61]
  410f7c:	in     eax,dx
  410f7d:	xor    BYTE PTR [ebx],bh
  410f7f:	jae    0x410ff2
  410f81:	cmp    ebp,DWORD PTR [edx+0x1b]
  410f84:	aas    
  410f85:	stos   BYTE PTR es:[edi],al
  410f86:	sbb    DWORD PTR [ebp+0x96c654d],0x8e4ff1ba
  410f90:	xchg   edi,eax
  410f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f92:	fisttp WORD PTR [eax+0x35]
  410f95:	add    BYTE PTR [edi-0x10],0x64
  410f99:	adc    eax,esp
  410f9b:	mov    al,0x8f
  410f9d:	fbld   TBYTE PTR [ebx+0xda7b541]
  410fa3:	xchg   edi,eax
  410fa4:	jmp    0x410f72
  410fa6:	lea    ebx,[ecx]
  410fa8:	jmp    0xfa61:0x27b1bd6
  410faf:	mov    dh,0xd1
  410fb1:	(bad)  
  410fb2:	hlt    
  410fb3:	imul   ebx,ebx,0xe6ae85e
  410fb9:	adc    esp,esi
  410fbb:	fwait
  410fbc:	mov    bl,0x17
  410fbe:	pushf  
  410fbf:	jb     0x410f4e
  410fc1:	retf   0xd7a0
  410fc4:	add    eax,0x6beeee7d
  410fc9:	mov    dx,0x3c19
  410fcd:	retf   0xb684
  410fd0:	pusha  
  410fd1:	enter  0x1f89,0xe1
  410fd5:	(bad)  
  410fd6:	fmul   DWORD PTR [edi]
  410fd8:	(bad)  
  410fda:	push   0x990959b4
  410fdf:	add    DWORD PTR [esi],ebp
  410fe1:	adc    esi,DWORD PTR [eax+0x4f]
  410fe4:	and    al,0xeb
  410fe6:	fcom   DWORD PTR [ecx-0x5e7f1806]
  410fec:	pop    edi
  410fed:	xchg   edi,eax
  410fee:	imul   edx,DWORD PTR [ebx],0x56
  410ff1:	pop    esi
  410ff2:	stos   BYTE PTR es:[edi],al
  410ff3:	mov    eax,0x66ef0c9c
  410ff8:	test   eax,0xfe72e931
  410ffd:	add    eax,0x8b7a734a
  411002:	mov    al,0x37
  411004:	shr    DWORD PTR [edi+0x4d],1
  411007:	sbb    DWORD PTR [eax+0x4a],0xeb2b166e
  41100e:	ret    
  41100f:	cmp    al,0x2d
  411011:	mov    esi,0xa639c58
  411016:	lods   eax,DWORD PTR ds:[esi]
  411017:	stos   DWORD PTR es:[edi],eax
  411018:	xchg   ebp,eax
  411019:	and    eax,0x40144343
  41101e:	loop   0x411098
  411020:	aam    0xb3
  411022:	inc    ecx
  411023:	cmc    
  411024:	pop    ds
  411025:	sub    eax,0x1bc3d8b9
  41102a:	xor    al,BYTE PTR [eax]
  41102c:	cmp    ah,BYTE PTR [edi+eiz*8+0x3e]
  411030:	xor    eax,0xe3bd8317
  411035:	aad    0x3d
  411037:	ret    0x664c
  41103a:	mov    WORD PTR [ecx+0x41bd81df],es
  411040:	retf   0xe485
  411043:	fimul  WORD PTR [ebx]
  411045:	test   al,0x7c
  411047:	and    BYTE PTR [edi+0x1ef6d8e7],0x8c
  41104e:	xchg   edi,eax
  411050:	jb     0x410fe3
  411052:	mov    ds:0x8815389c,eax
  411057:	inc    eax
  411058:	cmp    DWORD PTR [edx+0x725283b2],ecx
  41105e:	sub    al,BYTE PTR ds:0x9edbe61b
  411064:	loop   0x411048
  411066:	(bad)  
  411067:	cld    
  411068:	dec    ebp
  411069:	add    eax,0x8f5e769d
  41106e:	ss mov al,0x95
  411071:	shr    ebx,1
  411073:	dec    ecx
  411074:	(bad)  
  411075:	lods   eax,DWORD PTR ds:[esi]
  411076:	fldl2t 
  411078:	xchg   ebp,eax
  411079:	inc    edi
  41107a:	mov    esp,0x5e185378
  41107f:	retf   
  411080:	arpl   WORD PTR [ebx],bp
  411082:	and    al,0x2e
  411084:	mov    bh,BYTE PTR [esi]
  411086:	fs wbinvd 
  411089:	mov    WORD PTR [esp+esi*1+0xf],?
  41108d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108e:	jmp    0x841f:0x4f011113
  411095:	aam    0x50
  411097:	mov    gs,WORD PTR [edi]
  411099:	mov    ch,BYTE PTR [edx]
  41109b:	(bad)  
  41109c:	xor    DWORD PTR es:[ebx+ebx*4],edx
  4110a0:	push   eax
  4110a1:	lahf   
  4110a2:	(bad)  
  4110a3:	pop    edx
  4110a4:	fdivr  DWORD PTR [ebx]
  4110a6:	xlat   BYTE PTR ds:[ebx]
  4110a7:	pop    ss
  4110a8:	dec    edi
  4110a9:	add    DWORD PTR [ecx],ebx
  4110ab:	in     eax,0x98
  4110ad:	add    eax,0x47116870
  4110b2:	pop    ebx
  4110b3:	cmp    DWORD PTR [eax-0x45b563de],0xffffffdc
  4110ba:	jae    0x411110
  4110bc:	sbb    cl,BYTE PTR [edi-0x5405c017]
  4110c2:	sub    DWORD PTR [edi-0x4b],ecx
  4110c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c6:	shl    DWORD PTR [esi+0x76],cl
  4110c9:	or     esi,DWORD PTR [esi-0x60]
  4110cc:	in     al,dx
  4110cd:	fs push ebp
  4110cf:	mov    bh,0x3
  4110d1:	retf   0x451d
  4110d4:	jle    0x411115
  4110d6:	imul   edx,DWORD PTR [eax+0x7c],0x87ed2256
  4110dd:	sub    eax,edx
  4110df:	pusha  
  4110e0:	inc    esi
  4110e1:	sub    DWORD PTR [esi+0x29721b22],ecx
  4110e7:	xchg   ecx,eax
  4110e8:	outs   dx,DWORD PTR ds:[esi]
  4110e9:	jo     0x4110c5
  4110eb:	inc    ebp
  4110ec:	push   esp
  4110ed:	inc    esp
  4110ee:	cmp    ch,BYTE PTR [ebp-0x42]
  4110f1:	prefetcht2 BYTE PTR [esi+0x42]
  4110f5:	ins    DWORD PTR es:[edi],dx
  4110f6:	or     dh,BYTE PTR [eax+0x6b]
  4110f9:	push   edx
  4110fa:	fstp   TBYTE PTR [ecx+0x7b]
  4110fd:	sbb    DWORD PTR [edx],0xffffffc9
  411100:	xor    DWORD PTR [edx],0xffffffe1
  411103:	sub    eax,0x27c41e63
  411108:	imul   ecx,DWORD PTR [ecx+0x7c4401a2],0xc41ff39e
  411112:	xlat   BYTE PTR ds:[ebx]
  411113:	and    dh,al
  411115:	mov    ds:0xa8400404,al
  41111a:	div    DWORD PTR [edi+eiz*4]
  41111d:	sub    BYTE PTR [ebx],cl
  41111f:	gs dec ecx
  411121:	inc    ecx
  411122:	jle    0x41113b
  411124:	cmp    DWORD PTR [ebp-0xb],ebx
  411127:	xchg   esi,eax
  411128:	dec    edx
  411129:	fbld   TBYTE PTR [ebx+0x3e]
  41112c:	test   DWORD PTR [ecx-0x2e7ba2ab],ebp
  411132:	mov    eax,ds:0x70d5eb90
  411137:	jno    0x411183
  411139:	frstor [ebp+0xb9cd40f]
  41113f:	xor    ch,BYTE PTR [esi]
  411141:	push   eax
  411142:	sub    DWORD PTR [eax+ecx*1-0xe],edx
  411146:	add    eax,0x837c1daf
  41114b:	jp     0x411166
  41114d:	jmp    0x5fbe15b5
  411152:	fisttp QWORD PTR [edx-0xe]
  411155:	setge  al
  411158:	sub    DWORD PTR [edx-0x9],0xffffffce
  41115c:	mov    bh,0x3a
  41115e:	test   al,0xc0
  411160:	ins    BYTE PTR es:[edi],dx
  411161:	dec    esp
  411162:	sbb    edx,DWORD PTR [ecx+0x17c7f5bb]
  411168:	fcomp  QWORD PTR [ecx+0x4ca8c93a]
  41116e:	fadd   DWORD PTR [ebp+0x53761845]
  411174:	sahf   
  411175:	(bad)  
  411176:	(bad)  
  411177:	icebp  
  411178:	mov    ecx,0xc1e850a
  41117d:	mov    eax,ds:0x72eb2da
  411182:	ret    
  411183:	pop    es
  411184:	in     al,0x38
  411186:	jmp    0xbdd1:0xb6e5c738
  41118d:	and    DWORD PTR [ebp+ecx*2+0x57fb6c9d],ebx
  411194:	xchg   ecx,eax
  411195:	mov    ecx,0xf79e71a7
  41119a:	mov    ds:0x1c367381,al
  41119f:	mov    ch,BYTE PTR [edx-0x2362965c]
  4111a5:	mov    al,0x94
  4111a7:	xchg   edx,ebx
  4111a9:	rcr    DWORD PTR [edi],1
  4111ab:	jmp    0x564e1b2c
  4111b0:	sbb    DWORD PTR [ecx-0x9],0xe4efab92
  4111b7:	and    DWORD PTR [esi+eiz*4-0x4c4732a9],ebx
  4111be:	dec    edx
  4111bf:	push   edx
  4111c0:	inc    sp
  4111c2:	cmp    al,cl
  4111c4:	xchg   DWORD PTR [esi-0x1b11034],eax
  4111ca:	sti    
  4111cb:	jno    0x4111fc
  4111cd:	neg    BYTE PTR [ecx+0x53]
  4111d0:	sar    DWORD PTR [edx],cl
  4111d2:	out    dx,eax
  4111d3:	lock std 
  4111d5:	in     al,dx
  4111d6:	add    eax,0xd17bd4f0
  4111db:	xchg   BYTE PTR [eax-0x4044c7a7],bh
  4111e1:	and    ebp,DWORD PTR [edi]
  4111e3:	xchg   esi,edi
  4111e5:	fistp  DWORD PTR [esi]
  4111e7:	shl    DWORD PTR [ecx-0x4a],1
  4111ea:	daa    
  4111eb:	mul    DWORD PTR [edx+0x68]
  4111ee:	cmc    
  4111ef:	adc    al,0x63
  4111f1:	cld    
  4111f2:	dec    esp
  4111f3:	(bad)  
  4111f4:	jnp    0xbb31076f
  4111fa:	and    al,0x1
  4111fc:	scas   al,BYTE PTR es:[edi]
  4111fd:	ss cmp al,0xae
  411200:	mov    eax,edx
  411202:	pusha  
  411203:	enter  0xa0f8,0x78
  411207:	gs ds stc 
  41120a:	arpl   WORD PTR [eax+0x45],bx
  41120d:	mov    ebx,0x744463
  411212:	mov    ecx,0x40b1de64
  411217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411218:	sbb    bl,ch
  41121a:	mov    bh,0x78
  41121c:	(bad)  
  41121d:	out    0x22,eax
  41121f:	xchg   esi,eax
  411220:	push   esi
  411221:	jmp    0xac7f78ee
  411226:	lds    esp,FWORD PTR [esp+ebp*2+0x2b]
  41122a:	aas    
  41122b:	mov    ds:0xd3638946,al
  411230:	add    eax,0x7fffc479
  411235:	or     BYTE PTR ds:0x4eb7a607,0xcd
  41123c:	jno    0x411238
  41123e:	mov    al,0xc3
  411240:	cwde   
  411241:	retf   0xf1c4
  411244:	out    dx,al
  411245:	jecxz  0x411258
  411247:	iret   
  411248:	or     ebp,DWORD PTR [esi+0x2]
  41124b:	adc    eax,0x9ca727a9
  411250:	cdq    
  411251:	jl     0x411251
  411253:	test   DWORD PTR [esi-0xbab76a6],0x950b4702
  41125d:	pop    ecx
  41125e:	call   0x6c6ada76
  411263:	pop    ds
  411264:	pop    ecx
  411265:	das    
  411266:	das    
  411267:	int3   
  411268:	xor    ch,ah
  41126a:	lods   eax,DWORD PTR ds:[esi]
  41126b:	icebp  
  41126c:	ds aaa 
  41126e:	pop    edi
  41126f:	jae    0x41122c
  411271:	cmp    BYTE PTR [ebx+0x79fc1aca],ch
  411277:	mov    dh,0xd2
  411279:	adc    esi,DWORD PTR [ecx]
  41127b:	mov    ah,0xf0
  41127d:	test   eax,0x15b475
  411282:	and    ecx,DWORD PTR [eax-0x51c6efd4]
  411288:	sbb    bh,BYTE PTR [esi+0x7425bc13]
  41128e:	scas   eax,DWORD PTR es:[edi]
  41128f:	loopne 0x4112dd
  411291:	inc    esi
  411292:	iret   
  411293:	imul   edi,eax,0xffffff8d
  411296:	and    BYTE PTR [edi],bh
  411298:	mov    ecx,0x7a7a082c
  41129d:	adc    BYTE PTR ds:0x239e8415,ch
  4112a3:	rcr    BYTE PTR [edi-0x78],1
  4112a6:	imul   BYTE PTR [esi+eax*1+0x4d073233]
  4112ad:	scas   al,BYTE PTR es:[edi]
  4112ae:	fwait
  4112af:	lea    edi,[eax+0x8081973]
  4112b5:	aam    0x37
  4112b7:	in     eax,0xfb
  4112b9:	jae    0x411261
  4112bb:	out    0xb1,eax
  4112bd:	lods   al,BYTE PTR fs:[esi]
  4112bf:	mov    ss:0xdf6fce7a,al
  4112c5:	and    al,0xd9
  4112c7:	sub    ch,BYTE PTR fs:[eax]
  4112ca:	nop
  4112cb:	xchg   edx,eax
  4112cc:	mov    edx,0xc5b419b4
  4112d1:	xor    eax,0x3e6b2d9c
  4112d6:	push   edi
  4112d7:	push   edx
  4112d8:	inc    esp
  4112d9:	loopne 0x4112ff
  4112db:	mov    eax,0xd72c3759
  4112e0:	xlat   BYTE PTR ds:[ebx]
  4112e1:	jmp    0x3011:0x703fde4c
  4112e8:	in     al,0x7d
  4112ea:	nop
  4112eb:	test   DWORD PTR [ebp-0xc],ebx
  4112ee:	loope  0x41127f
  4112f0:	push   0xffffff8c
  4112f2:	gs test eax,0x1b9b25b3
  4112f8:	test   al,0x5
  4112fa:	mov    ?,eax
  4112fc:	or     DWORD PTR [ecx+0x1d],ebx
  4112ff:	ja     0x411325
  411301:	sahf   
  411302:	inc    ebp
  411303:	pop    edi
  411304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411305:	leave  
  411306:	test   BYTE PTR [edx-0x7afb61d3],ch
  41130c:	pusha  
  41130d:	out    dx,al
  41130e:	mov    esi,0x6a540cd0
  411313:	into   
  411314:	xchg   esi,eax
  411315:	add    BYTE PTR [eax+0x14534216],bh
  41131b:	mov    bl,0xfd
  41131d:	mov    eax,0x17a4a0cc
  411322:	mul    DWORD PTR [eax+ebx*8]
  411325:	add    cl,BYTE PTR [eax-0x42]
  411328:	in     al,dx
  411329:	mov    WORD PTR [eax-0x19b3599d],gs
  41132f:	clc    
  411330:	adc    al,0x0
  411332:	(bad)  
  411333:	mov    dl,0xce
  411335:	fs in  eax,dx
  411337:	add    DWORD PTR [eax+0x15b87127],ecx
  41133d:	xor    al,0x30
  41133f:	sahf   
  411340:	or     eax,0x4e45a512
  411345:	cmp    al,0x64
  411347:	das    
  411348:	inc    esi
  411349:	mov    cl,0x6c
  41134b:	mov    ch,0xe1
  41134d:	mov    esi,0x4c06f32e
  411352:	scas   eax,DWORD PTR es:[edi]
  411353:	cmp    al,0xd9
  411355:	mov    ebx,0x40d15b81
  41135a:	jbe    0x411347
  41135c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41135d:	cmp    al,0x3d
  41135f:	mov    esp,0x9da43864
  411364:	dec    esp
  411365:	cld    
  411366:	xor    al,0xd1
  411368:	(bad)  
  411369:	mov    al,0xd8
  41136b:	cdq    
  41136c:	bound  esp,QWORD PTR [ebp-0x56]
  41136f:	inc    esp
  411370:	cli    
  411371:	lock sbb dh,bh
  411374:	xchg   esp,eax
  411375:	xchg   ebx,eax
  411376:	mov    ebx,0x4bc4a99e
  41137b:	mov    al,ds:0xf113b14d
  411380:	pop    ds
  411381:	mov    ss,WORD PTR [ebp+0x44]
  411384:	lahf   
  411385:	sub    al,0xd4
  411387:	lahf   
  411388:	dec    esi
  411389:	xchg   ebp,eax
  41138a:	gs mov dl,0xe7
  41138d:	jo     0x4113f9
  41138f:	xchg   ebx,eax
  411390:	cmp    eax,0xf6313b16
  411395:	mov    eax,0x7f1dbaf4
  41139a:	push   ebp
  41139b:	jno    0x4113e0
  41139d:	pop    ebp
  41139e:	data16 aas 
  4113a0:	jge    0x4113cd
  4113a2:	push   ds
  4113a3:	or     ch,BYTE PTR [eax]
  4113a5:	jne    0x411373
  4113a7:	sub    ebx,DWORD PTR [ecx+0x25638db0]
  4113ad:	mov    esi,0x54e4f0a5
  4113b2:	sub    dl,BYTE PTR [esi+0x4c5839f0]
  4113b8:	adc    eax,0xb2d543e7
  4113bd:	imul   ecx,DWORD PTR [ecx],0xb55bcb76
  4113c3:	sbb    BYTE PTR [edx+0x5d],0x46
  4113c7:	push   ecx
  4113c8:	cmp    al,BYTE PTR [ebx+ecx*8-0x74]
  4113cc:	pop    edi
  4113cd:	sub    esi,DWORD PTR [edx-0x34]
  4113d0:	push   ss
  4113d1:	in     eax,0x20
  4113d3:	jg     0x4113b0
  4113d5:	xchg   edx,eax
  4113d6:	sub    eax,0xbd7566db
  4113db:	sbb    eax,ecx
  4113dd:	cmp    DWORD PTR [edi+0x1f],0xa
  4113e1:	push   es
  4113e2:	jne    0x411400
  4113e4:	loope  0x411407
  4113e6:	dec    eax
  4113e7:	cdq    
  4113e8:	pop    esi
  4113e9:	cmp    al,0xb1
  4113eb:	push   eax
  4113ec:	jae    0x411393
  4113ee:	imul   BYTE PTR [ebp-0x5d]
  4113f1:	mov    WORD PTR [esp+edi*4],cs
  4113f4:	ins    BYTE PTR es:[edi],dx
  4113f5:	adc    al,0x92
  4113f7:	inc    eax
  4113f8:	inc    esi
  4113f9:	loop   0x411429
  4113fb:	dec    edi
  4113fc:	pop    ds
  4113fd:	xchg   esp,eax
  4113fe:	cmp    al,0x8e
  411400:	in     al,0xf8
  411402:	sub    al,0x91
  411404:	outs   dx,BYTE PTR ds:[esi]
  411405:	test   eax,0x1250521b
  41140a:	fld    DWORD PTR [eax-0x682ecdd4]
  411410:	mov    eax,DWORD PTR [edi+0x3d]
  411413:	into   
  411414:	mov    eax,0x91dd029b
  411419:	mov    fs,esp
  41141b:	(bad)  
  41141c:	adc    esi,DWORD PTR [edi-0x22]
  41141f:	repz sar DWORD PTR [ebx-0x7c],0x71
  411424:	aaa    
  411425:	jmp    0xd4e8b249
  41142a:	sbb    DWORD PTR [ecx+0x311da353],0x79
  411431:	dec    esi
  411432:	test   al,0xe
  411434:	cmp    ch,BYTE PTR [ebp+0x1750ad2]
  41143a:	inc    ebx
  41143b:	nop
  41143c:	fsub   st(5),st
  41143e:	dec    ecx
  41143f:	clc    
  411440:	xlat   BYTE PTR ds:[ebx]
  411441:	rcr    BYTE PTR [edx-0x80],cl
  411444:	push   ds
  411445:	inc    esi
  411446:	push   es
  411447:	xchg   DWORD PTR [edx-0x731be714],ebx
  41144d:	adc    BYTE PTR [esi-0x37],cl
  411450:	dec    ebx
  411451:	aam    0x54
  411453:	cdq    
  411454:	jl     0x4114be
  411456:	std    
  411457:	nop
  411458:	jbe    0x4114c3
  41145a:	xor    ah,BYTE PTR [ebx]
  41145c:	loop   0x41143c
  41145e:	test   eax,0xddc3372d
  411463:	das    
  411464:	dec    esp
  411465:	lock ret 0x9575
  411469:	popa   
  41146a:	pop    ebx
  41146b:	add    eax,0xfb263ca0
  411470:	div    bh
  411472:	jg     0x41147b
  411474:	(bad)  
  411475:	xor    al,0x97
  411477:	xor    edx,edi
  411479:	push   es
  41147a:	mov    dh,0xad
  41147c:	push   cs
  41147d:	les    esp,FWORD PTR [eax+0x5284d624]
  411483:	jl     0x411487
  411485:	sub    al,0x11
  411487:	mov    esp,0x2a69889
  41148c:	push   edi
  41148d:	and    esi,DWORD PTR [ebp-0x17]
  411490:	std    
  411491:	inc    ebx
  411492:	xchg   ebx,eax
  411493:	cmp    ebx,DWORD PTR [esi-0x4a0a586b]
  411499:	loope  0x41148c
  41149b:	push   es
  41149c:	jmp    0x666ea6b5
  4114a1:	retf   0xdc69
  4114a4:	sub    al,0xe2
  4114a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a7:	jecxz  0x41147b
  4114a9:	adc    esi,ebx
  4114ab:	push   eax
  4114ac:	mov    ebp,0x48d100bd
  4114b1:	ja     0x411437
  4114b3:	adc    dl,bl
  4114b5:	aas    
  4114b6:	or     bh,BYTE PTR [edx+0x40]
  4114b9:	repz mov al,BYTE PTR [ebp+0x29667029]
  4114c0:	out    dx,eax
  4114c1:	push   eax
  4114c2:	jmp    0xa3d9b045
  4114c7:	push   ebp
  4114c8:	sub    dh,BYTE PTR [esi-0x4cac9453]
  4114ce:	sub    eax,0xcc7bda08
  4114d3:	mov    al,ch
  4114d5:	jns    0x41145c
  4114d7:	mov    dh,0x18
  4114d9:	daa    
  4114da:	pusha  
  4114db:	outs   dx,BYTE PTR ds:[esi]
  4114dc:	dec    esi
  4114dd:	xchg   DWORD PTR [eax-0x58],ebp
  4114e0:	lods   eax,DWORD PTR ds:[esi]
  4114e1:	bound  edi,QWORD PTR [edi-0x7345f30c]
  4114e7:	ficomp WORD PTR [ebp-0x5dc8cb8e]
  4114ed:	add    eax,0x8c820674
  4114f2:	jb     0x4114b3
  4114f4:	push   es
  4114f5:	popf   
  4114f6:	mov    eax,ds:0x113e46c8
  4114fb:	xchg   dl,ah
  4114fd:	cdq    
  4114fe:	push   es
  4114ff:	sub    DWORD PTR [edi-0x1640a307],0x5fcccfc2
  411509:	aam    0xe4
  41150b:	cmp    BYTE PTR [ecx],ah
  41150d:	daa    
  41150e:	mov    cl,0x98
  411510:	sbb    eax,0x24dd479b
  411515:	add    ebp,DWORD PTR [esi+0x5c]
  411518:	push   ebx
  411519:	push   ebp
  41151a:	jl     0x411560
  41151c:	add    ebx,DWORD PTR [ebx+eax*4-0x27]
  411520:	xor    al,0xae
  411522:	test   ch,ch
  411524:	adc    dl,cl
  411526:	(bad)  
  411528:	stos   BYTE PTR es:[edi],al
  411529:	xor    eax,0x470748d6
  41152e:	lock mov edx,0xced85420
  411534:	(bad)  
  411535:	push   edx
  411536:	add    cl,ah
  411538:	add    edi,DWORD PTR [edi-0x4c]
  41153b:	mov    edx,0x51ea868d
  411540:	adc    BYTE PTR [eax],ch
  411542:	icebp  
  411543:	and    BYTE PTR [ecx+0xaef24bd],ah
  411549:	inc    eax
  41154a:	xchg   esp,eax
  41154b:	mov    edi,0x1e10e573
  411550:	jge    0x4115a7
  411552:	push   esp
  411553:	pop    edx
  411554:	add    BYTE PTR [ecx+0x0],dh
  411557:	and    edx,ecx
  411559:	cmp    BYTE PTR [ebx-0x53],dh
  41155c:	xchg   edx,eax
  41155d:	lods   eax,DWORD PTR ds:[esi]
  41155e:	sub    al,bh
  411560:	add    al,0x1
  411562:	mov    ecx,0xf33ab6ff
  411567:	and    DWORD PTR [eax],0xffffffe7
  41156a:	outs   dx,DWORD PTR ds:[esi]
  41156b:	sahf   
  41156c:	fwait
  41156d:	punpckhbw mm5,QWORD PTR [esp+edx*8+0x4200d332]
  411575:	mov    WORD PTR [eax+0x7d],?
  411578:	inc    ebx
  411579:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41157b:	xchg   esi,eax
  41157c:	inc    eax
  41157d:	dec    edi
  41157e:	xor    edi,eax
  411580:	xor    DWORD PTR [edi],esi
  411582:	push   es
  411583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411584:	mov    dl,dh
  411586:	push   cs
  411587:	mov    edi,?
  411589:	cli    
  41158a:	imul   esi,esi,0x7d2f1724
  411590:	ror    DWORD PTR [esi-0x5ba431a2],cl
  411596:	xor    al,0x7d
  411598:	push   eax
  411599:	aad    0x36
  41159b:	push   ecx
  41159c:	pop    eax
  41159d:	inc    ebp
  41159e:	stos   DWORD PTR es:[edi],eax
  41159f:	test   edi,ebp
  4115a1:	jmp    0x4115d6
  4115a3:	icebp  
  4115a4:	sbb    BYTE PTR [ecx-0x2f85f25d],al
  4115aa:	shr    BYTE PTR [edi+0x24d83616],1
  4115b0:	cmp    al,0x27
  4115b2:	loope  0x411568
  4115b4:	sbb    DWORD PTR [esi],edi
  4115b6:	scas   al,BYTE PTR es:[edi]
  4115b7:	sti    
  4115b8:	cmc    
  4115b9:	cmp    al,ch
  4115bb:	outs   dx,BYTE PTR ds:[esi]
  4115bc:	mov    al,0x47
  4115be:	add    BYTE PTR ss:[edi-0x6585ee72],0xb8
  4115c6:	(bad)  
  4115c7:	sub    BYTE PTR [edi-0x1d],cl
  4115ca:	ret    0x7be1
  4115cd:	gs jb  0x411576
  4115d0:	mov    esi,0x4655d6ee
  4115d5:	arpl   WORD PTR [esi-0x18ac391b],bx
  4115db:	push   edx
  4115dc:	or     al,0x32
  4115de:	dec    esp
  4115df:	lods   al,BYTE PTR ds:[esi]
  4115e0:	(bad)
  4115e4:	sub    BYTE PTR [ebx-0x149db25e],bh
  4115ea:	jnp    0x411663
  4115ec:	jp     0x4115e3
  4115ee:	mov    eax,0xc5ecaf7d
  4115f3:	mov    ebx,0xe572f36
  4115f8:	out    0x1a,al
  4115fa:	mov    ecx,0x7af1a8dd
  4115ff:	xlat   BYTE PTR ds:[ebx]
  411600:	rcl    BYTE PTR [ecx+0x6f],cl
  411603:	out    0x6b,eax
  411605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411606:	dec    ebx
  411607:	xchg   ebx,eax
  411608:	mov    al,ds:0x2e472741
  41160d:	gs sahf 
  41160f:	push   edx
  411610:	pushf  
  411611:	pop    bx
  411613:	mov    eax,ds:0xf8e746aa
  411618:	cdq    
  411619:	lods   eax,DWORD PTR ds:[esi]
  41161a:	add    eax,0x76aa622d
  41161f:	cmp    eax,0x5fc7dcd2
  411624:	jb     0x411603
  411626:	pop    edi
  411627:	dec    edx
  411628:	push   ss
  411629:	inc    eax
  41162a:	in     al,0xb3
  41162c:	in     eax,0x1e
  41162e:	pop    ds
  41162f:	ror    BYTE PTR [edi+0x11],cl
  411632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411633:	cmp    cl,bl
  411635:	loopne 0x41168b
  411637:	add    al,0x3b
  411639:	test   al,0x94
  41163b:	mov    dl,0xbd
  41163d:	adc    BYTE PTR [ebp-0x3a],bl
  411640:	daa    
  411641:	mov    bl,0xd8
  411643:	push   esp
  411644:	xor    BYTE PTR [eax-0x5b08194b],dl
  41164a:	lods   al,BYTE PTR ds:[esi]
  41164b:	jmp    0x7854:0x4420fc36
  411652:	lahf   
  411653:	cli    
  411654:	xchg   esi,eax
  411655:	pop    ss
  411656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411657:	retf   0x50fa
  41165a:	nop
  41165b:	cmp    edx,DWORD PTR [ebx]
  41165d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41165e:	hlt    
  41165f:	shr    BYTE PTR [edi],cl
  411661:	inc    ecx
  411662:	in     eax,0x9e
  411664:	and    bh,BYTE PTR [esi-0x4f]
  411667:	in     eax,0x2b
  411669:	ficomp WORD PTR [edi]
  41166b:	xor    ch,BYTE PTR [edx-0x68906900]
  411671:	mov    dl,0xe2
  411673:	stos   DWORD PTR es:[edi],eax
  411674:	sbb    DWORD PTR [edx+0x3],eax
  411677:	mov    eax,0x8d6638d5
  41167c:	sub    BYTE PTR [ecx],bl
  41167e:	push   ds
  41167f:	push   ss
  411680:	stc    
  411681:	xlat   BYTE PTR ds:[ebx]
  411682:	stc    
  411683:	mov    bh,0x53
  411685:	jg     0x4116ba
  411687:	pop    ds
  411688:	mov    bh,0xd4
  41168a:	test   DWORD PTR [edx],eax
  41168c:	mov    dl,0x65
  41168e:	sbb    BYTE PTR [edx-0x4e],dl
  411691:	pop    edi
  411692:	push   edi
  411693:	ja     0x41169f
  411695:	xor    dl,al
  411697:	(bad)  
  411698:	cli    
  411699:	push   edx
  41169a:	fcom   DWORD PTR cs:[eax-0xd]
  41169e:	mov    edi,0xdeab6b5e
  4116a3:	scas   eax,DWORD PTR es:[edi]
  4116a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116a5:	mov    WORD PTR [eax-0x7d],cs
  4116a8:	das    
  4116a9:	test   eax,0xb2be253a
  4116ae:	int3   
  4116af:	lahf   
  4116b0:	mov    ecx,0x856f90d4
  4116b5:	cmp    esp,esi
  4116b7:	iret   
  4116b8:	daa    
  4116b9:	add    DWORD PTR [ebx+0x41],edi
  4116bc:	inc    ebp
  4116bd:	or     cl,al
  4116bf:	les    ebx,FWORD PTR [eax+ebp*8]
  4116c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c3:	sub    esi,DWORD PTR [eax+0x6d]
  4116c6:	mov    esp,0xf6350d59
  4116cb:	cmp    BYTE PTR [edx+edi*2-0x17],al
  4116cf:	xchg   ecx,eax
  4116d0:	pop    edx
  4116d1:	das    
  4116d2:	aam    0xfc
  4116d4:	sar    DWORD PTR ds:0xc5e9ae2,0x51
  4116db:	and    BYTE PTR [edx],bh
  4116dd:	push   ebx
  4116de:	xchg   esi,eax
  4116df:	rcl    BYTE PTR [esi+ecx*1-0x6193f0c0],0x13
  4116e7:	cmp    al,BYTE PTR [ecx+0x32]
  4116ea:	xchg   ebx,eax
  4116eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ec:	xchg   ecx,eax
  4116ed:	scas   eax,DWORD PTR es:[edi]
  4116ee:	jmp    0x6e99e68c
  4116f3:	arpl   sp,dx
  4116f5:	jecxz  0x41167b
  4116f7:	arpl   WORD PTR [edx+0x23],dx
  4116fa:	mov    eax,ebx
  4116fc:	and    eax,0x2b1dc8f8
  411701:	xor    bh,BYTE PTR [edx+0x5849925a]
  411707:	test   eax,0x4285afd3
  41170c:	hlt    
  41170d:	add    ebx,DWORD PTR [eax]
  41170f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411710:	and    al,0xce
  411712:	ins    BYTE PTR es:[edi],dx
  411713:	push   0x1a8c9b7c
  411718:	fisttp DWORD PTR [ebx+0x7b141d2d]
  41171e:	scas   al,BYTE PTR es:[edi]
  41171f:	sub    eax,DWORD PTR [eax+0x0]
  411722:	mov    ebp,0x581cdf6c
  411727:	inc    edx
  411728:	je     0x4116ed
  41172a:	pop    ecx
  41172b:	mov    ds:0x7c4daf79,eax
  411730:	fcmovnu st,st(4)
  411732:	sub    eax,0xaf1c2c8
  411737:	and    bh,cl
  411739:	mov    ah,0x74
  41173b:	int    0x1d
  41173d:	test   al,0x80
  41173f:	jg     0x411724
  411741:	scas   al,BYTE PTR es:[edi]
  411742:	add    edi,edi
  411744:	neg    BYTE PTR [ebx-0x1e]
  411747:	mov    cl,0x56
  411749:	inc    ecx
  41174a:	jp     0x41173a
  41174c:	mov    ds:0xa44313be,al
  411751:	rcr    BYTE PTR [ecx-0x6b387fde],cl
  411757:	xchg   ecx,eax
  411758:	enter  0x1061,0xf
  41175c:	lea    ebx,[esi+eiz*2]
  41175f:	cwde   
  411760:	xchg   edx,eax
  411761:	imul   esi,DWORD PTR [eax+eax*1+0x6c27107],0x649d3f0e
  41176c:	xchg   edx,eax
  41176d:	cwde   
  41176e:	push   ds
  41176f:	and    al,0x5e
  411771:	and    BYTE PTR [ebp+eax*2+0x6c2cf1a5],bl
  411778:	inc    edx
  411779:	jl     0x4116fb
  41177b:	jns    0x411794
  41177d:	aas    
  41177e:	inc    ecx
  41177f:	add    eax,DWORD PTR [ebp+0x3b]
  411782:	hlt    
  411783:	push   ebp
  411784:	(bad)
  411787:	mov    ebx,0x5c52ae92
  41178c:	push   ss
  41178d:	push   0x2d
  41178f:	pop    ebx
  411790:	mov    esi,0x6bb0fe55
  411795:	xchg   ebx,eax
  411796:	dec    edx
  411797:	or     edx,DWORD PTR [eax]
  411799:	sub    BYTE PTR [ecx-0x676c4066],dl
  41179f:	push   edx
  4117a0:	xchg   esp,eax
  4117a1:	loop   0x41174b
  4117a3:	mov    WORD PTR [esi+0x4e77110a],cs
  4117a9:	stos   BYTE PTR es:[edi],al
  4117aa:	fistp  QWORD PTR [ebx+0x747acfa0]
  4117b0:	popa   
  4117b1:	lods   al,BYTE PTR ds:[esi]
  4117b2:	hlt    
  4117b3:	fidivr DWORD PTR [ebp+0x3a431ec8]
  4117b9:	test   BYTE PTR [edx+0x38485f01],dh
  4117bf:	dec    edi
  4117c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c1:	out    0xe2,al
  4117c3:	xor    dh,BYTE PTR [ebx+0x77]
  4117c6:	mov    bh,0x8b
  4117c8:	pusha  
  4117c9:	cmp    ecx,DWORD PTR [eax]
  4117cb:	imul   esp,DWORD PTR [ecx+0x68],0x1361f4cb
  4117d2:	fidiv  DWORD PTR [eax]
  4117d4:	(bad)  
  4117d5:	pop    eax
  4117d6:	fnstsw WORD PTR [eax+0x2c]
  4117d9:	push   edi
  4117da:	ds cmp eax,0xde1e684f
  4117e0:	leave  
  4117e1:	pop    edx
  4117e2:	cmp    edi,ebx
  4117e4:	or     eax,DWORD PTR [ebp-0x689bcc0c]
  4117ea:	cmp    BYTE PTR [esi-0x65],ah
  4117ed:	adc    ch,BYTE PTR [ebx]
  4117ef:	into   
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	sub    bh,ah
  41186e:	mov    dh,BYTE PTR [ebp-0x18]
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	iret   
  411879:	cmp    eax,0x289f156c
  41187e:	(bad)  
  41187f:	call   0x10767229
  411884:	cld    
  411885:	xor    esi,esi
  411887:	in     eax,0xf8
  411889:	dec    eax
  41188a:	xchg   ebp,eax
  41188b:	sbb    ch,BYTE PTR [edi]
  41188d:	adc    eax,0x6c1e960b
  411892:	icebp  
  411893:	cld    
  411894:	in     eax,dx
  411895:	stc    
  411896:	pop    ecx
  411897:	fucom  st(4)
  411899:	repnz pop edi
  41189b:	aad    0x2
  41189d:	mov    bh,0xd4
  41189f:	dec    esp
  4118a0:	dec    esp
  4118a1:	cmc    
  4118a2:	sar    BYTE PTR [edi+0x15e4f8be],0xbc
  4118a9:	pop    ebx
  4118aa:	loop   0x4118e6
  4118ac:	mov    ch,0xe4
  4118ae:	mov    al,0xca
  4118b0:	mov    edi,0xd7be0c06
  4118b5:	addr16 or dh,bl
  4118b8:	addr16 (bad) 
  4118ba:	clc    
  4118bb:	mov    dl,0x92
  4118bd:	mov    BYTE PTR [edi+0x3eae216c],cl
  4118c3:	pop    ebx
  4118c4:	xor    DWORD PTR [ecx],edx
  4118c6:	or     BYTE PTR [esi-0x2a],ah
  4118c9:	fnstcw WORD PTR [eax]
  4118cb:	imul   ecx,DWORD PTR [edx+0x65],0x7f
  4118cf:	jno    0x411939
  4118d1:	das    
  4118d2:	push   eax
  4118d3:	dec    esi
  4118d4:	in     eax,dx
  4118d5:	js     0x411919
  4118d7:	out    dx,al
  4118d8:	rcr    BYTE PTR [ebp+0x74a0c629],0x98
  4118df:	ret    
  4118e0:	fstp   TBYTE PTR [edx]
  4118e2:	cmp    BYTE PTR [ebx+0x1c46c523],bh
  4118e8:	push   0x1b6a2621
  4118ed:	aaa    
  4118ee:	and    ebx,DWORD PTR [esi-0x3c]
  4118f1:	jae    0x411952
  4118f3:	test   DWORD PTR [edi-0x68],ebp
  4118f6:	xchg   ebp,eax
  4118f7:	pop    eax
  4118f8:	pop    ecx
  4118f9:	mov    eax,0xe24af958
  4118fe:	mov    dh,0xc8
  411900:	push   esi
  411901:	push   ds
  411902:	add    al,0x80
  411904:	jle    0x4118ff
  411906:	xor    eax,0xadc59d08
  41190b:	(bad)  
  41190c:	jo     0x41191f
  41190e:	in     al,dx
  41190f:	add    edi,eax
  411911:	addr16 jne 0x411986
  411914:	pop    ecx
  411915:	mov    al,0xd8
  411917:	outs   dx,BYTE PTR ds:[esi]
  411918:	pop    ebx
  411919:	jmp    0x4118fd
  41191b:	clc    
  41191c:	daa    
  41191d:	and    eax,0xddae1f33
  411922:	sbb    dh,BYTE PTR [edx-0x123d3966]
  411928:	pop    edx
  411929:	ja     0x4119a3
  41192b:	pop    esp
  41192c:	cmp    BYTE PTR [edi],ch
  41192e:	in     eax,0xb9
  411930:	sub    bl,BYTE PTR [ecx+0x0]
  411933:	imul   DWORD PTR [ecx]
  411935:	pop    ss
  411936:	cli    
  411937:	jmp    0x331e7cd7
  41193c:	leave  
  41193d:	in     eax,dx
  41193e:	cs out dx,eax
  411940:	push   ebp
  411941:	fld    TBYTE PTR [ebx+0x43]
  411944:	mov    dh,0x45
  411946:	adc    ch,BYTE PTR [esi]
  411948:	jne    0x4118e3
  41194a:	sbb    eax,0x18bd0b4e
  41194f:	xor    ebp,DWORD PTR [ebp-0x11]
  411952:	cs cmp edx,ebp
  411955:	into   
  411956:	sbb    edx,edi
  411958:	adc    cl,ch
  41195a:	rcl    BYTE PTR [edi+0x66d2793e],1
  411960:	inc    edi
  411961:	rol    eax,1
  411963:	xor    bl,BYTE PTR [edx]
  411965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411966:	sbb    DWORD PTR [esi+0x14ee6b5b],eax
  41196c:	jae    0x4118f5
  41196e:	inc    ecx
  41196f:	adc    eax,0x527ddd0
  411974:	into   
  411975:	cmp    esi,DWORD PTR [edi+eiz*1-0x59]
  411979:	pushf  
  41197a:	pop    ebx
  41197b:	movlps xmm2,QWORD PTR [edx+esi*2]
  41197f:	icebp  
  411980:	push   esi
  411981:	pop    ecx
  411982:	add    BYTE PTR ds:0x5b6c3b94,dh
  411988:	(bad)  
  411989:	jl     0x411923
  41198b:	out    dx,al
  41198c:	mov    dl,0xc1
  41198e:	sbb    BYTE PTR [ebp+0x165606a4],0x8e
  411995:	sub    BYTE PTR [ecx+edi*4-0x12],bh
  411999:	mov    eax,ds:0xab31925f
  41199e:	les    edx,FWORD PTR [ebp-0x13]
  4119a1:	retf   
  4119a2:	stos   DWORD PTR es:[edi],eax
  4119a3:	push   es
  4119a4:	or     BYTE PTR [ecx-0xb91d00],0x28
  4119ab:	dec    esi
  4119ac:	gs push esp
  4119ae:	not    BYTE PTR [edi]
  4119b0:	xchg   ebp,eax
  4119b1:	jge    0x4119bb
  4119b3:	arpl   di,bp
  4119b5:	cmp    DWORD PTR cs:[edi],0xdbcaefb
  4119bc:	pop    eax
  4119bd:	fdivp  st(6),st
  4119bf:	sub    ah,BYTE PTR [eax-0x13]
  4119c2:	popa   
  4119c3:	mov    dh,0x17
  4119c5:	and    eax,0x819861fe
  4119ca:	sbb    BYTE PTR [esi+0x21],ah
  4119cd:	xchg   edx,eax
  4119ce:	xor    dl,dh
  4119d0:	mov    ds,ebx
  4119d2:	stos   BYTE PTR es:[edi],al
  4119d3:	ss or  bh,bh
  4119d6:	js     0x41198e
  4119d8:	push   0x46
  4119da:	jecxz  0x411995
  4119dc:	mov    ch,0x51
  4119de:	dec    esi
  4119df:	sbb    DWORD PTR [edi-0x51b03f3a],edi
  4119e5:	inc    eax
  4119e6:	and    al,0xdc
  4119e8:	add    BYTE PTR ds:0x16864dc5,dl
  4119ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ef:	nop
  4119f0:	test   BYTE PTR [edx-0x2653af26],0x6e
  4119f7:	popf   
  4119f8:	test   BYTE PTR [esi+eiz*8-0x15135e72],dl
  4119ff:	inc    ebx
  411a00:	jecxz  0x411a7e
  411a02:	jp     0x411a3d
  411a04:	cmp    dh,BYTE PTR ds:0x616ccd8
  411a0a:	ficom  WORD PTR [edx+ecx*8]
  411a0d:	or     eax,0xb3cd2492
  411a12:	aam    0x5f
  411a14:	mov    ebp,0xfafe5608
  411a19:	sub    ebx,DWORD PTR [esi]
  411a1b:	jge    0x411a64
  411a1d:	gs mov al,0xd2
  411a20:	xchg   edi,eax
  411a21:	ja     0x411a38
  411a23:	fs mov dl,0xc2
  411a26:	test   eax,0xa773632
  411a2b:	mov    ebp,DWORD PTR [edx]
  411a2d:	outs   dx,DWORD PTR ds:[esi]
  411a2e:	js     0x411a9b
  411a30:	mov    cl,0xec
  411a32:	bound  edx,QWORD PTR [edx+eax*2-0x52]
  411a36:	xor    DWORD PTR [edi],edx
  411a38:	clc    
  411a39:	lock inc esi
  411a3b:	enter  0xdbee,0x45
  411a3f:	jle    0x411a86
  411a41:	add    BYTE PTR [esi+eiz*1],0x93
  411a45:	in     eax,dx
  411a46:	xchg   edx,eax
  411a47:	cmp    BYTE PTR [esi+ecx*4+0x65ffff59],bl
  411a4e:	and    esi,DWORD PTR [ebx+ecx*1]
  411a51:	mov    dh,0x2d
  411a53:	xor    eax,0x4064bc1c
  411a58:	call   0xa721:0xd23ad387
  411a5f:	test   eax,0x73980e92
  411a64:	inc    ebp
  411a65:	call   0x831a98ec
  411a6a:	enter  0x9326,0x48
  411a6e:	ret    
  411a6f:	push   ecx
  411a70:	aad    0x86
  411a72:	in     eax,dx
  411a73:	or     DWORD PTR [edx+0x5e],ebx
  411a76:	pop    esi
  411a77:	cmp    bh,bl
  411a79:	imul   BYTE PTR [ebp-0xc8fb951]
  411a7f:	cmp    bh,BYTE PTR [ecx+esi*2]
  411a82:	mov    dh,0xa
  411a84:	jmp    0x651add57
  411a89:	aas    
  411a8a:	mov    eax,0x8924dbf2
  411a8f:	push   edi
  411a90:	push   cs
  411a91:	inc    eax
  411a92:	sbb    BYTE PTR [edx-0x3ba81a1b],bl
  411a98:	ror    WORD PTR [ecx],1
  411a9b:	pop    ebp
  411a9c:	std    
  411a9d:	and    al,bh
  411a9f:	jecxz  0x411a3c
  411aa1:	aaa    
  411aa2:	ror    DWORD PTR [esi+0x38],0x59
  411aa6:	loop   0x411a40
  411aa8:	jle    0x411b0f
  411aaa:	add    ebx,DWORD PTR [ecx+edi*8]
  411aad:	ins    DWORD PTR es:[edi],dx
  411aae:	aaa    
  411aaf:	icebp  
  411ab0:	in     eax,dx
  411ab1:	sbb    DWORD PTR [eax-0x70],eax
  411ab4:	fmul   DWORD PTR [ebx]
  411ab6:	not    DWORD PTR [esi-0x50]
  411ab9:	adc    BYTE PTR [edi+esi*2+0x1c],bl
  411abd:	fidivr WORD PTR [ecx]
  411abf:	xchg   esp,eax
  411ac0:	popf   
  411ac1:	stos   BYTE PTR es:[edi],al
  411ac2:	outs   dx,DWORD PTR ds:[esi]
  411ac3:	jg     0x411b06
  411ac5:	aaa    
  411ac6:	imul   DWORD PTR [ebx]
  411ac8:	sti    
  411ac9:	push   ecx
  411aca:	add    eax,DWORD PTR [edx-0x4d39c296]
  411ad0:	cmp    edi,DWORD PTR [edx+esi*8+0x331da82a]
  411ad7:	dec    edx
  411ad8:	and    cl,BYTE PTR [eax-0x9]
  411adb:	cmp    ebx,ebx
  411add:	xor    BYTE PTR [eax-0x67],dh
  411ae0:	or     BYTE PTR [esi],cl
  411ae2:	in     eax,0x39
  411ae4:	adc    al,0x77
  411ae6:	dec    esp
  411ae7:	jge    0x411a70
  411ae9:	idiv   DWORD PTR [ecx+eax*4]
  411aec:	aad    0x5
  411aee:	in     al,0xf
  411af0:	add    ecx,edx
  411af2:	fidivr DWORD PTR [ebp+0x5f]
  411af5:	mov    bl,0x23
  411af7:	mov    ds:0xdc87411b,eax
  411afc:	popa   
  411afd:	mov    ds:0xfdd0fb63,al
  411b02:	or     DWORD PTR [esi-0x3a7bbf3e],ebp
  411b08:	cmp    bh,bl
  411b0a:	jmp    0xab9c:0x56855df3
  411b11:	(bad)  
  411b12:	stc    
  411b13:	arpl   WORD PTR [esi+0x68886a66],ax
  411b19:	jmp    0x411b0b
  411b1b:	pop    ebx
  411b1c:	int    0xf
  411b1e:	popf   
  411b1f:	or     ecx,edx
  411b21:	outs   dx,DWORD PTR ds:[esi]
  411b22:	xor    edi,ebp
  411b24:	shl    BYTE PTR [ebx],cl
  411b26:	mov    esi,0xc4dc7dab
  411b2b:	sub    ah,BYTE PTR [edi+ecx*1+0x57]
  411b2f:	jns    0x411b86
  411b31:	ret    
  411b32:	push   ss
  411b33:	or     DWORD PTR [edx],0xdd7d03c9
  411b39:	dec    esi
  411b3a:	and    al,0x5f
  411b3c:	inc    ecx
  411b3d:	cs inc ebx
  411b3f:	ins    BYTE PTR es:[edi],dx
  411b40:	in     al,dx
  411b41:	dec    esp
  411b42:	outs   dx,DWORD PTR ds:[esi]
  411b43:	popa   
  411b44:	sbb    DWORD PTR [edx],0x2
  411b47:	ja     0x411bb9
  411b49:	mov    esp,0xa27cc94d
  411b4e:	lods   eax,DWORD PTR ds:[esi]
  411b4f:	fwait
  411b50:	hlt    
  411b51:	jnp    0x411ba6
  411b53:	in     eax,0x7d
  411b55:	(bad)  
  411b56:	scas   al,BYTE PTR es:[edi]
  411b57:	aad    0x25
  411b59:	ds mov bh,0xbf
  411b5c:	mov    ?,ecx
  411b5e:	icebp  
  411b5f:	sbb    eax,0x97b9fabd
  411b64:	loope  0x411b4c
  411b66:	lods   al,BYTE PTR ds:[esi]
  411b67:	std    
  411b68:	jb     0x411b17
  411b6a:	xchg   edi,eax
  411b6b:	push   ebx
  411b6c:	repz fiadd DWORD PTR [esi+0x3214298a]
  411b73:	fwait
  411b74:	sub    al,0x9a
  411b76:	out    dx,al
  411b77:	xor    dl,BYTE PTR [ebp-0x374cd04d]
  411b7d:	mov    bh,0x3c
  411b7f:	sbb    BYTE PTR [edx-0x56acfb71],0xf3
  411b86:	xlat   BYTE PTR ds:[ebx]
  411b87:	(bad)  
  411b88:	pop    es
  411b89:	push   ebx
  411b8a:	pop    edx
  411b8b:	test   DWORD PTR [edi-0x3f],0xec709272
  411b92:	mov    ecx,0x79fc4532
  411b97:	sbb    eax,0xe763d53e
  411b9c:	pusha  
  411b9d:	inc    BYTE PTR [edx]
  411b9f:	fdivrp st(7),st
  411ba1:	call   0xa55568fe
  411ba6:	cwde   
  411ba7:	pop    edx
  411ba8:	push   ebp
  411ba9:	(bad)  
  411baa:	xchg   ebp,eax
  411bab:	sub    ebx,eax
  411bad:	or     DWORD PTR [eax*8+0x37e1f8aa],0x3818e719
  411bb8:	fsubrp st(4),st
  411bba:	in     eax,dx
  411bbb:	or     al,0xef
  411bbd:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411bbf:	jl     0x411c33
  411bc1:	or     BYTE PTR [ebp-0x72],al
  411bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc5:	(bad)  
  411bc6:	imul   BYTE PTR [edx]
  411bc8:	cmp    al,0xa5
  411bca:	jno    0x411ba4
  411bcc:	in     al,dx
  411bcd:	mov    ebx,DWORD PTR [edx-0x37]
  411bd0:	xchg   esp,eax
  411bd1:	ins    DWORD PTR es:[edi],dx
  411bd2:	retf   0xa8e9
  411bd5:	push   ebp
  411bd6:	xchg   esi,eax
  411bd7:	mov    DWORD PTR [edi],0x4faf7d2a
  411bdd:	push   esi
  411bde:	or     DWORD PTR [esi+0x32],esi
  411be1:	sub    al,0x3e
  411be3:	and    eax,0x8958dfc4
  411be8:	or     esp,DWORD PTR [edi-0x5a670235]
  411bee:	lds    sp,DWORD PTR [eax]
  411bf1:	jmp    0x4f28:0xcf50a692
  411bf8:	hlt    
  411bf9:	jle    0x411bdf
  411bfb:	out    dx,al
  411bfc:	and    al,0xb0
  411bfe:	jmp    0x411c00
  411c00:	les    esp,FWORD PTR [ecx+0x43ad74df]
  411c06:	mov    fs,edx
  411c08:	outs   dx,DWORD PTR ds:[esi]
  411c09:	aad    0x96
  411c0b:	pop    esi
  411c0c:	jmp    0x411bb0
  411c0e:	cs push es
  411c10:	xchg   edx,eax
  411c11:	mov    ah,BYTE PTR [ebx]
  411c13:	mov    bh,0x53
  411c15:	push   0xffffffc3
  411c17:	pop    esi
  411c18:	and    DWORD PTR ds:0xfe45,edi
  411c1d:	and    DWORD PTR [ebx-0x67985c64],ebx
  411c23:	pop    esp
  411c24:	push   eax
  411c25:	daa    
  411c26:	je     0x411c7e
  411c28:	add    DWORD PTR ds:0x89980b05,eax
  411c2e:	dec    ecx
  411c2f:	int3   
  411c30:	inc    edi
  411c31:	inc    eax
  411c32:	sub    ah,dh
  411c34:	pop    ds
  411c35:	out    dx,eax
  411c36:	sbb    DWORD PTR [esi+0x7f7b06dc],ebp
  411c3c:	push   0x840d0ef4
  411c41:	xor    al,dl
  411c43:	xor    DWORD PTR [ebx+ebp*1-0x10],ecx
  411c47:	dec    esi
  411c48:	add    esi,0x3
  411c4b:	hlt    
  411c4c:	aaa    
  411c4d:	push   edx
  411c4e:	ins    DWORD PTR es:[edi],dx
  411c4f:	(bad)  
  411c50:	inc    ebp
  411c51:	das    
  411c52:	addr16 push edx
  411c54:	push   cs
  411c55:	sbb    ah,dl
  411c57:	call   0x2fe9:0x976b2242
  411c5e:	push   edx
  411c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c60:	push   eax
  411c61:	add    DWORD PTR es:[eax-0x50cd5abc],0x85ebd610
  411c6c:	inc    ebx
  411c6d:	adc    BYTE PTR [edi+0x4028ae63],al
  411c73:	scas   eax,DWORD PTR es:[edi]
  411c74:	std    
  411c75:	imul   ebp,DWORD PTR [ebx-0x27f91c0c],0xffffffcc
  411c7c:	mov    edi,0xbacbffdd
  411c81:	pop    ebx
  411c82:	mov    cl,0x27
  411c84:	jge    0x411cba
  411c86:	add    DWORD PTR [edx+0x33],0x72ecda98
  411c8d:	fcmovnb st,st(0)
  411c8f:	push   0xffffffef
  411c91:	in     al,0x74
  411c93:	push   esi
  411c94:	mov    eax,ds:0x89f2113
  411c99:	fidivr DWORD PTR [esi-0x2d]
  411c9c:	enter  0x22b0,0x8c
  411ca0:	imul   BYTE PTR [edi+ecx*8]
  411ca3:	or     BYTE PTR [edx],0x7f
  411ca6:	mov    esi,0x20953662
  411cab:	frstor [edx-0x53b59b12]
  411cb1:	jae    0x411c47
  411cb3:	aaa    
  411cb4:	repnz push esp
  411cb6:	test   dh,dh
  411cb8:	sti    
  411cb9:	pop    edx
  411cba:	into   
  411cbb:	(bad)  
  411cbc:	dec    eax
  411cbd:	out    0x1f,al
  411cbf:	jo     0x411d34
  411cc1:	cli    
  411cc2:	cld    
  411cc3:	sti    
  411cc4:	xor    dh,BYTE PTR [eax-0x3]
  411cc7:	sbb    ch,BYTE PTR [ebx-0x69]
  411cca:	dec    edx
  411ccb:	(bad)  
  411ccc:	lea    edi,[esi+0x7129a59c]
  411cd2:	fdivp  st(0),st
  411cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd5:	jge    0x411cc9
  411cd7:	jne    0x411ccf
  411cd9:	jbe    0x411d53
  411cdb:	lods   al,BYTE PTR ds:[esi]
  411cdc:	gs jne 0x411cad
  411cdf:	pop    ebx
  411ce0:	mov    esp,0x41f3387e
  411ce5:	xchg   edi,eax
  411ce6:	push   ss
  411ce7:	add    BYTE PTR [eax],ah
  411ce9:	mov    ebp,0xdf173a3a
  411cee:	jg     0x411ccf
  411cf0:	xchg   ebx,eax
  411cf1:	js     0x411cdc
  411cf3:	imul   esi,DWORD PTR [ebp+0x31],0x762a8d73
  411cfa:	xchg   edx,eax
  411cfb:	(bad)  
  411cfc:	inc    BYTE PTR [ecx]
  411cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cff:	popa   
  411d00:	mov    ds:0x5089c393,al
  411d05:	push   0x1c1ff39
  411d0a:	mov    ecx,0x938c62f8
  411d0f:	cmp    dh,dl
  411d11:	cmp    eax,0x6a4f90b
  411d16:	or     DWORD PTR [ecx+0x65],esi
  411d19:	pop    ebx
  411d1a:	push   esp
  411d1b:	inc    ebx
  411d1c:	cs mov eax,0x2935f73c
  411d22:	mov    ebp,0x895976a2
  411d27:	xor    ch,dh
  411d29:	daa    
  411d2a:	leave  
  411d2b:	cmp    al,0xad
  411d2d:	shl    eax,0xd
  411d30:	mov    eax,ds:0xa9126e61
  411d35:	sub    BYTE PTR [edi-0x7c],0x5f
  411d39:	cli    
  411d3a:	sub    BYTE PTR [esi+0x26],dh
  411d3d:	std    
  411d3e:	(bad)  [eax-0x6b]
  411d41:	sti    
  411d42:	mov    edi,0x9434dc50
  411d47:	ds sbb DWORD PTR cs:[esi+edx*8-0x59d00ba5],ebp
  411d50:	mov    esi,DWORD PTR [ebx+eiz*8]
  411d53:	mov    al,ds:0xb271d556
  411d58:	inc    edi
  411d59:	hlt    
  411d5a:	mov    edx,0x1a09e40a
  411d5f:	mov    WORD PTR [edi-0x48],es
  411d62:	lods   eax,DWORD PTR ds:[esi]
  411d63:	call   0x9987:0xbbd8a0a1
  411d6a:	nop
  411d6b:	add    DWORD PTR [edx+0x26],edi
  411d6e:	pop    eax
  411d6f:	pop    eax
  411d70:	int3   
  411d71:	mov    ecx,0x181c114d
  411d76:	fs cld 
  411d78:	outs   dx,BYTE PTR ds:[esi]
  411d79:	das    
  411d7a:	jmp    0xce64:0x303e385f
  411d81:	in     eax,dx
  411d82:	jmp    0x849223e4
  411d87:	jo     0x411d0f
  411d89:	js     0x411dc8
  411d8b:	(bad)  
  411d8c:	mov    al,ds:0x7f2325ea
  411d91:	mov    DWORD PTR [edi+eax*1-0x55],edi
  411d95:	ins    BYTE PTR es:[edi],dx
  411d96:	dec    eax
  411d97:	leave  
  411d98:	fadd   DWORD PTR [esi]
  411d9a:	sbb    al,0x4d
  411d9c:	mov    gs,WORD PTR [ebx-0x1f199645]
  411da2:	pop    ss
  411da3:	mov    dl,BYTE PTR [ebp-0x7f328766]
  411da9:	test   DWORD PTR [ebx+0xf52283b],esp
  411daf:	repnz push ebp
  411db1:	dec    edi
  411db2:	or     bl,ah
  411db4:	ret    0xfbbf
  411db7:	pop    eax
  411db8:	aam    0x9c
  411dba:	int    0x6
  411dbc:	adc    dl,BYTE PTR [edx]
  411dbe:	xchg   edi,eax
  411dbf:	xor    BYTE PTR [esi],bh
  411dc1:	inc    ebp
  411dc2:	sahf   
  411dc3:	emms   
  411dc5:	leave  
  411dc6:	pop    esp
  411dc7:	jnp    0x411d50
  411dc9:	(bad)  
  411dca:	imul   ebp,DWORD PTR [ebx+0x39],0x4800a8f2
  411dd1:	cmp    BYTE PTR gs:[ebx],al
  411dd4:	add    DWORD PTR [edi+0x69],ecx
  411dd7:	xchg   edx,eax
  411dd8:	lds    esp,FWORD PTR [edi]
  411dda:	add    BYTE PTR [edi],cl
  411ddc:	mov    ebp,0xfca4cb46
  411de1:	int3   
  411de2:	pop    es
  411de3:	adc    eax,0x7f434c30
  411de8:	dec    esi
  411de9:	into   
  411dea:	add    DWORD PTR [edi],esp
  411dec:	mov    ch,0x79
  411dee:	dec    ecx
  411def:	test   dh,al
  411df1:	jmp    0x411db6
  411df3:	cdq    
  411df4:	mov    al,ds:0x57b62074
  411df9:	iret   
  411dfa:	iret   
  411dfb:	(bad)  
  411dfc:	out    dx,al
  411dfd:	mov    bh,0x10
  411dff:	pop    esp
  411e00:	popf   
  411e01:	mov    al,0x97
  411e03:	cmp    eax,DWORD PTR [esi-0x6132ded3]
  411e09:	inc    ecx
  411e0a:	fadd   DWORD PTR [esi]
  411e0c:	sahf   
  411e0d:	dec    ebx
  411e0e:	shr    DWORD PTR [ecx-0x6d11d17c],1
  411e14:	jae    0x411e59
  411e16:	enter  0x21a8,0x31
  411e1a:	arpl   WORD PTR [edx-0x31ce2a22],sp
  411e20:	rol    ebx,cl
  411e22:	cmp    dl,BYTE PTR [eax]
  411e24:	xchg   ebp,eax
  411e25:	jecxz  0x411e38
  411e27:	mov    ebx,0xd5fdfed5
  411e2c:	mov    eax,0x987bd47a
  411e31:	lock (bad) 
  411e33:	retf   
  411e34:	or     eax,DWORD PTR [ebx]
  411e36:	cs in  al,dx
  411e38:	inc    edx
  411e39:	repnz cmp al,0x20
  411e3c:	dec    esi
  411e3d:	adc    al,0x3b
  411e3f:	sar    edx,cl
  411e41:	jne    0x411e49
  411e43:	and    al,0x73
  411e45:	lds    ebp,FWORD PTR [ebx]
  411e47:	sub    esi,DWORD PTR [edx+esi*2+0x10564838]
  411e4e:	lock (bad) 
  411e50:	js     0x411e6e
  411e52:	(bad)  
  411e53:	jecxz  0x411e55
  411e55:	out    dx,eax
  411e56:	jno    0x411df2
  411e58:	add    BYTE PTR [ebp-0x1da751b7],bl
  411e5e:	adc    DWORD PTR [ecx+0x41bcfbcd],ebx
  411e64:	jbe    0x411ede
  411e66:	cmp    ebp,ecx
  411e68:	and    BYTE PTR ds:0x581a5333,dl
  411e6e:	push   ebp
  411e6f:	dec    esp
  411e70:	mov    WORD PTR [ebx-0x5e8e7a5c],?
  411e76:	sbb    al,0x48
  411e78:	data16 into 
  411e7a:	add    DWORD PTR ds:0xf276dd7c,ecx
  411e80:	xchg   esp,eax
  411e81:	jmp    0xe3f0ce49
  411e86:	in     eax,0xbf
  411e88:	push   ds
  411e89:	clc    
  411e8a:	mov    ebp,0x62f694ec
  411e8f:	aas    
  411e90:	jp     0x411eb1
  411e92:	popa   
  411e93:	mov    ebx,0xd6f7a08e
  411e98:	xor    eax,0x5e5b1e2f
  411e9d:	adc    bl,BYTE PTR [ecx-0x54]
  411ea0:	(bad)  
  411ea1:	cli    
  411ea2:	jo     0x411f20
  411ea4:	arpl   WORD PTR [edi+ebx*8-0x2ca74b06],di
  411eab:	inc    esi
  411eac:	push   ds
  411ead:	lahf   
  411eae:	stc    
  411eaf:	cmc    
  411eb0:	mov    eax,0xcec8f8af
  411eb5:	(bad)  
  411eb6:	mov    esp,edx
  411eb8:	loope  0x411eaf
  411eba:	jmp    0x411efe
  411ebc:	jmp    0x5eea269e
  411ec1:	sub    al,0x45
  411ec3:	lock add ah,al
  411ec6:	and    eax,0x7f7caeb7
  411ecb:	(bad)  
  411ecc:	cmp    ch,BYTE PTR [ebx-0x31ade3c8]
  411ed2:	pop    ss
  411ed3:	aad    0x64
  411ed5:	or     DWORD PTR [ebx+0x21],ecx
  411ed8:	pop    edx
  411ed9:	push   ebp
  411eda:	emms   
  411edc:	or     esi,ebx
  411ede:	pop    ebp
  411edf:	mov    al,ds:0x31b37a25
  411ee4:	test   BYTE PTR [ebx],ch
  411ee6:	lahf   
  411ee7:	cmp    edx,DWORD PTR [edi-0x7fcc0206]
  411eed:	cli    
  411eee:	mov    bl,0xa6
  411ef0:	sbb    BYTE PTR [ebp-0x3fadbe69],0xed
  411ef7:	mov    dh,0xc9
  411ef9:	cmp    BYTE PTR [esi+0x5e],dl
  411efc:	sub    ah,BYTE PTR [ebx]
  411efe:	sub    DWORD PTR ds:[ecx-0x44],ebx
  411f02:	mov    dl,0xa3
  411f05:	jne    0x411eeb
  411f07:	xor    ebp,DWORD PTR [eax]
  411f09:	stos   DWORD PTR es:[edi],eax
  411f0a:	mov    cl,BYTE PTR [ecx-0x567b410c]
  411f10:	lahf   
  411f11:	or     ah,BYTE PTR [edi]
  411f13:	scas   eax,DWORD PTR es:[edi]
  411f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f15:	dec    edx
  411f16:	or     DWORD PTR [ebx],ebp
  411f18:	sahf   
  411f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1a:	nop
  411f1b:	or     BYTE PTR [edi-0x5f79eff6],dh
  411f21:	jp     0x411f59
  411f23:	and    BYTE PTR [ebx-0x43d17fea],bl
  411f29:	fbld   TBYTE PTR [ebx]
  411f2b:	add    eax,0x5bd01607
  411f30:	out    0xe7,eax
  411f32:	sbb    dh,0xe0
  411f35:	add    dl,BYTE PTR [edi+ecx*8]
  411f38:	ins    BYTE PTR es:[edi],dx
  411f39:	dec    ebx
  411f3a:	sbb    eax,0xc936c16
  411f3f:	and    eax,0x845945c1
  411f44:	sbb    cl,BYTE PTR [eax-0x6]
  411f47:	loopne 0x411ef7
  411f49:	repz dec edx
  411f4b:	add    BYTE PTR [edi+0x33],cl
  411f4e:	jae    0x411f11
  411f50:	mov    ecx,0x91fb7119
  411f55:	mov    ebx,0x66a3b4d3
  411f5a:	and    BYTE PTR [esi],ch
  411f5c:	std    
  411f5d:	add    al,BYTE PTR [ebp+0x5928cadf]
  411f63:	out    dx,al
  411f64:	mov    edi,0x30951c90
  411f69:	pusha  
  411f6a:	pop    esi
  411f6b:	lds    ebx,FWORD PTR [ebx+0x53]
  411f6e:	mov    esi,0x21e266d1
  411f73:	stc    
  411f74:	jmp    0x681f256a
  411f79:	adc    edx,ebx
  411f7b:	or     BYTE PTR ds:0x947f6ba1,ah
  411f81:	(bad)  
  411f82:	mov    esi,0x50c1a7dc
  411f87:	xchg   esp,eax
  411f88:	mov    edx,0xe9754a62
  411f8d:	mov    eax,ds:0x1ddc7586
  411f92:	ret    
  411f93:	ins    DWORD PTR es:[edi],dx
  411f94:	and    DWORD PTR [eax-0x604ef0d9],ecx
  411f9a:	mov    ah,0x2a
  411f9c:	cs or  esp,ebx
  411f9f:	call   0xf4a0ac96
  411fa4:	call   0x4115fe7c
  411fa9:	out    dx,al
  411faa:	add    al,0xe8
  411fac:	xchg   dl,dl
  411fae:	sbb    BYTE PTR cs:[ecx],bh
  411fb1:	mul    esi
  411fb3:	adc    edi,DWORD PTR [esi]
  411fb5:	pushf  
  411fb6:	pop    ebp
  411fb7:	repz (bad) 
  411fb9:	pop    ebp
  411fba:	iret   
  411fbb:	cmp    ecx,DWORD PTR [eax]
  411fbd:	cwde   
  411fbe:	cld    
  411fbf:	jno    0x411f9b
  411fc1:	(bad)  
  411fc2:	pop    ebx
  411fc3:	xor    DWORD PTR [edx+0x1747f080],0xbd1b21ab
  411fcd:	pop    edi
  411fce:	and    esi,DWORD PTR [esi]
  411fd0:	or     eax,0xbf2e8ba3
  411fd5:	leave  
  411fd6:	repnz or al,0xb1
  411fd9:	mov    eax,ds:0xfdc23b6a
  411fde:	out    0xc3,al
  411fe0:	mov    eax,ds:0x3ce14e01
  411fe5:	pop    ebp
  411fe6:	daa    
  411fe7:	mov    edi,0x91408f8d
  411fec:	loop   0x412026
  411fee:	sub    ah,BYTE PTR [edi-0x7a]
  411ff1:	sub    BYTE PTR [ecx-0x16],dl
  411ff4:	js     0x411fc8
  411ff6:	or     DWORD PTR [edi+0x7c],edx
  411ff9:	xor    BYTE PTR [ecx],0x53
  411ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ffd:	xor    ch,cl
  411fff:	mov    al,ds:0xb513840b
  412004:	dec    ebx
  412005:	dec    ebx
  412006:	ror    BYTE PTR ds:0x4bc51e56,0xc9
  41200d:	xlat   BYTE PTR ds:[ebx]
  41200e:	mov    edi,0x70edcd3
  412013:	adc    eax,0x26416bc2
  412019:	loop   0x411fe3
  41201b:	fisubr WORD PTR [edi-0x65]
  41201e:	push   esi
  41201f:	or     BYTE PTR [ebx],dl
  412021:	outs   dx,BYTE PTR ds:[esi]
  412022:	div    BYTE PTR [ecx+0x70]
  412025:	rol    DWORD PTR [ebx+0x70],1
  412028:	dec    esp
  412029:	(bad)  
  41202a:	fadd   st(2),st
  41202c:	pop    ebx
  41202d:	cmp    eax,esi
  41202f:	mov    BYTE PTR [eax-0x2326303],ch
  412035:	adc    cl,bh
  412037:	sub    dl,BYTE PTR [esi+0x6c]
  41203a:	(bad)  
  41203c:	xchg   ebp,eax
  41203d:	(bad)  
  41203e:	out    dx,eax
  41203f:	outs   dx,DWORD PTR ds:[esi]
  412040:	inc    ebp
  412041:	lods   eax,DWORD PTR ds:[esi]
  412042:	and    al,0x86
  412044:	mov    ds,WORD PTR [ebx]
  412046:	in     eax,0xf0
  412048:	aam    0x9
  41204a:	jmp    0xf6746020
  41204f:	dec    esi
  412050:	jp     0x412041
  412052:	lock imul edx,ebx,0xef6ed782
  412059:	add    al,0x4b
  41205b:	mov    ds:0xa405cc39,al
  412060:	dec    ebp
  412061:	repz xor dl,BYTE PTR [edx+0x15635a97]
  412068:	stos   DWORD PTR es:[edi],eax
  412069:	lock sbb eax,0xaa23a565
  41206f:	jl     0x41201e
  412071:	xchg   BYTE PTR [esi+0x2b],ch
  412074:	sub    DWORD PTR [edi],esp
  412076:	into   
  412077:	fnstcw WORD PTR [edx]
  412079:	sti    
  41207a:	cmp    dh,dl
  41207c:	inc    esp
  41207d:	shl    ebx,1
  41207f:	into   
  412080:	repnz mov esi,0x34d74ddf
  412086:	ret    
  412087:	push   eax
  412088:	mov    BYTE PTR [edi+0x30],ah
  41208b:	js     0x4120f2
  41208d:	sub    eax,0x615509b5
  412092:	clc    
  412093:	pop    edi
  412094:	loope  0x41201f
  412096:	jecxz  0x4120c8
  412098:	js     0x4120c0
  41209a:	inc    esp
  41209b:	test   DWORD PTR [esi],0x57ec4571
  4120a1:	jbe    0x412112
  4120a3:	sbb    bl,0x7e
  4120a6:	dec    ecx
  4120a7:	fistp  WORD PTR [ebx+0x33]
  4120aa:	js     0x4120fd
  4120ac:	in     al,0xcc
  4120ae:	rcl    ch,cl
  4120b0:	sub    BYTE PTR [ecx+eax*2],bh
  4120b3:	cwde   
  4120b4:	mov    edx,0xaf34b643
  4120b9:	jl     0x4120a2
  4120bb:	mov    BYTE PTR [ecx+eax*8],ah
  4120be:	ins    DWORD PTR es:[edi],dx
  4120bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120c0:	sbb    ecx,DWORD PTR [ecx+0x2747d268]
  4120c6:	lock cdq 
  4120c8:	xor    DWORD PTR [edx+0x98d5e09],esi
  4120ce:	sub    eax,0x2635f48
  4120d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d5:	stos   DWORD PTR es:[edi],eax
  4120d6:	pop    ebp
  4120d7:	popa   
  4120d8:	sub    DWORD PTR [esi+eax*4+0x4fe1e2cc],ecx
  4120df:	into   
  4120e0:	aas    
  4120e1:	xchg   esp,eax
  4120e2:	push   esi
  4120e3:	push   ss
  4120e4:	es aaa 
  4120e6:	xchg   ecx,eax
  4120e7:	jbe    0x4120fb
  4120e9:	aad    0xdc
  4120eb:	adc    BYTE PTR gs:[ebx+0x51e16ce7],cl
  4120f2:	ds jb  0x4120b4
  4120f5:	sbb    dh,BYTE PTR [ecx]
  4120f7:	test   BYTE PTR ds:0x53c08479,bh
  4120fd:	jb     0x4120b6
  4120ff:	test   al,0x83
  412101:	mov    gs,WORD PTR [esi]
  412103:	pop    esp
  412104:	mov    esi,0x521125c6
  412109:	rcr    BYTE PTR [edx-0x5c],cl
  41210c:	faddp  st(1),st
  41210e:	push   0xffffffe9
  412110:	mov    eax,ds:0xd2184393
  412115:	in     eax,0xeb
  412117:	xor    BYTE PTR [esi+ebp*1+0x7e9a194f],0x1a
  41211f:	cmpxchg ecx,edi
  412122:	cmp    BYTE PTR [esi-0x56],0x1
  412126:	mov    esp,0xc34bf3cd
  41212b:	aas    
  41212c:	outs   dx,BYTE PTR ds:[esi]
  41212d:	jg     0x4120d8
  41212f:	jl     0x41212c
  412131:	fadd   DWORD PTR [ebx]
  412133:	inc    esi
  412134:	fist   DWORD PTR [edx+eiz*4+0x1f]
  412138:	arpl   si,bp
  41213a:	loopne 0x4120f6
  41213c:	dec    ecx
  41213d:	out    dx,al
  41213e:	lock inc esi
  412140:	loop   0x4121b1
  412142:	sub    DWORD PTR [edx+0x54df8700],0x57
  412149:	xor    dl,BYTE PTR [ebx+0x59]
  41214c:	imul   edi,DWORD PTR [eax],0x7
  41214f:	sbb    esi,DWORD PTR [ecx]
  412151:	sub    edx,DWORD PTR [ebp-0x736d4e16]
  412157:	js     0x412178
  412159:	or     bh,BYTE PTR [esi-0x4d4156be]
  41215f:	mov    ah,BYTE PTR ds:[edi+edi*2-0x12]
  412164:	stos   BYTE PTR es:[edi],al
  412165:	xor    al,0x4
  412167:	(bad)  
  412168:	xchg   esp,eax
  412169:	dec    edi
  41216a:	sbb    al,0xb4
  41216c:	push   eax
  41216d:	dec    edi
  41216e:	inc    edx
  41216f:	or     DWORD PTR ds:0xaf3d8612,edx
  412175:	in     eax,0x54
  412177:	pop    eax
  412178:	add    al,0xf0
  41217a:	pop    es
  41217b:	push   esi
  41217c:	stc    
  41217d:	outs   dx,BYTE PTR ds:[esi]
  41217e:	inc    esp
  41217f:	(bad)  
  412180:	sub    esi,ebp
  412182:	adc    ch,BYTE PTR [ecx+0x1a]
  412185:	and    ch,ah
  412187:	sahf   
  412188:	popf   
  412189:	call   0x7edd:0x70705941
  412190:	out    dx,eax
  412191:	mov    edi,ecx
  412193:	loope  0x4121fd
  412195:	loop   0x4121d2
  412197:	sbb    al,0x34
  412199:	enter  0x8385,0x92
  41219d:	sbb    DWORD PTR [esi+0x79aad416],ecx
  4121a3:	shl    cl,cl
  4121a5:	pushf  
  4121a6:	sbb    DWORD PTR [edi+0x26],esi
  4121a9:	lods   al,BYTE PTR ds:[esi]
  4121aa:	push   0x505d1ba3
  4121af:	mov    ch,0xd4
  4121b1:	cli    
  4121b2:	fabs   
  4121b4:	mov    dl,0x79
  4121b6:	fsubr  st(5),st
  4121b8:	fidiv  WORD PTR [eax+0x7f]
  4121bb:	sbb    eax,0x3fbb42dc
  4121c0:	arpl   WORD PTR [edi],ax
  4121c2:	add    al,0xe5
  4121c4:	push   edi
  4121c5:	mov    al,BYTE PTR [edi+0xc29db39]
  4121cb:	pusha  
  4121cc:	pop    edi
  4121cd:	inc    ebp
  4121ce:	jb     0x4121ce
  4121d0:	xor    BYTE PTR [esp+ebx*1-0x7f],dl
  4121d4:	adc    esi,DWORD PTR [edi+0x71f2d9e3]
  4121da:	pusha  
  4121db:	inc    esi
  4121dc:	xor    eax,0x5aeaa5f5
  4121e1:	stos   BYTE PTR es:[edi],al
  4121e2:	retf   
  4121e3:	(bad)  
  4121e6:	mov    ebp,0x2565b4b5
  4121eb:	push   cs
  4121ec:	repnz sub BYTE PTR [esi+0x1441c59b],al
  4121f3:	and    al,bh
  4121f5:	jnp    0x4121cb
  4121f7:	fistp  QWORD PTR [ecx]
  4121f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121fa:	push   ebx
  4121fb:	repz sub DWORD PTR [ebx+0x33cc16db],eax
  412202:	jge    0x41226a
  412204:	jecxz  0x4121d5
  412206:	pop    ds
  412207:	pushf  
  412208:	cmp    ah,BYTE PTR ds:0x2cb0a157
  41220e:	adc    bh,BYTE PTR [esi-0x78]
  412211:	and    al,0xc
  412213:	jmp    0x11c4:0xfeda332e
  41221a:	(bad)  
  41221b:	mov    BYTE PTR [ebx],dh
  41221d:	add    eax,0x6910d0f7
  412222:	inc    edi
  412223:	out    0x9d,eax
  412225:	mov    ecx,0x6286ce71
  41222a:	repnz cmp bl,BYTE PTR [ebx+edi*1]
  41222e:	int3   
  41222f:	hlt    
  412230:	mov    ah,0x8c
  412232:	fidivr WORD PTR [esi]
  412234:	xchg   esp,eax
  412235:	and    bl,BYTE PTR [ecx+0x70168dd5]
  41223b:	(bad)  
  41223c:	lahf   
  41223d:	add    ch,BYTE PTR [edi]
  41223f:	inc    edx
  412240:	ficomp DWORD PTR [ecx-0x23]
  412243:	inc    esp
  412244:	mov    dl,0x40
  412246:	sub    BYTE PTR [ebx],0x94
  412249:	cmp    DWORD PTR [ebp-0x43333383],0x907068dc
  412253:	(bad)  
  412254:	and    cl,BYTE PTR [esi+0xbb2539f]
  41225a:	pop    ebx
  41225b:	and    ecx,ebp
  41225d:	sti    
  41225e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41225f:	or     bh,BYTE PTR [edx+0x6c]
  412262:	xchg   DWORD PTR [ebx],eax
  412264:	mov    ds:0x6e59c7e4,al
  412269:	adc    BYTE PTR [esi-0x6c],dh
  41226c:	data16 mov cl,0x43
  41226f:	adc    DWORD PTR ds:0x5e4bdbb,esp
  412275:	inc    ecx
  412276:	xor    ecx,DWORD PTR [esi-0x56909d16]
  41227c:	cwde   
  41227d:	sbb    esp,DWORD PTR [esi]
  41227f:	pop    ss
  412280:	sbb    BYTE PTR [eax+0x202645dc],0x73
  412287:	loope  0x41229e
  412289:	lods   al,BYTE PTR ds:[esi]
  41228a:	shr    BYTE PTR [esi+0x307bb4f],0x74
  412291:	cld    
  412292:	leave  
  412293:	jge    0x4122fd
  412295:	repz cmp ebp,DWORD PTR [edi+0x25]
  412299:	jle    0x412243
  41229b:	bound  esp,QWORD PTR [ebx-0x1f]
  41229e:	push   esp
  41229f:	mov    eax,ds:0xd3b8a77b
  4122a4:	mov    dh,0xa9
  4122a6:	push   ebp
  4122a7:	pop    ecx
  4122a8:	inc    esp
  4122a9:	(bad)  
  4122aa:	mov    al,0x72
  4122ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ad:	lods   al,BYTE PTR ds:[esi]
  4122ae:	cmp    bl,BYTE PTR [edi-0x13]
  4122b1:	sahf   
  4122b2:	aas    
  4122b3:	cmp    BYTE PTR [ebp+0x58b35542],bl
  4122b9:	lods   eax,DWORD PTR ds:[esi]
  4122ba:	mov    al,0xf0
  4122bc:	mov    dh,0xa7
  4122be:	jmp    0x103:0x60f86d89
  4122c5:	jnp    0x41230a
  4122c7:	test   DWORD PTR [esi],ebx
  4122c9:	mov    ebp,0x85043938
  4122ce:	clc    
  4122cf:	int    0x51
  4122d1:	ret    
  4122d2:	leave  
  4122d3:	outs   dx,BYTE PTR ds:[esi]
  4122d4:	mov    ebx,0x3338f5d4
  4122d9:	sbb    edi,ebp
  4122db:	leave  
  4122dc:	push   esp
  4122dd:	push   edi
  4122de:	pusha  
  4122df:	mov    bh,0x24
  4122e1:	loopne 0x41226e
  4122e3:	xor    dl,BYTE PTR [esi]
  4122e5:	pop    esi
  4122e6:	in     eax,dx
  4122e7:	inc    ebx
  4122e8:	sbb    esi,DWORD PTR [ebp+0x46450816]
  4122ee:	mov    ebx,0x5ca3b1d1
  4122f3:	(bad)  
  4122f4:	rol    BYTE PTR [ebx+0x68],1
  4122f7:	call   0xd464:0x5b7443bc
  4122fe:	inc    edx
  4122ff:	or     BYTE PTR [esi],dh
  412301:	test   al,dl
  412303:	or     ebx,edi
  412305:	imul   ebx,DWORD PTR [ebp-0x5a],0xfffffff7
  412309:	adc    eax,0x484392e
  41230e:	and    ch,BYTE PTR [ebx-0x42c85]
  412314:	bound  esp,QWORD PTR [ebp-0x58]
  412317:	fild   WORD PTR [ebp+0x1e]
  41231a:	icebp  
  41231b:	sbb    al,0xc6
  41231d:	jb     0x412362
  41231f:	lea    edx,[edi]
  412321:	and    bh,BYTE PTR [ebx-0x5caa0d7c]
  412327:	pop    edi
  412328:	repz push ss
  41232a:	mov    bl,BYTE PTR [eax+edx*4-0x80]
  41232e:	mov    edx,DWORD PTR [esi+0x20]
  412331:	pop    esp
  412332:	lds    ebp,FWORD PTR [ebp-0x34]
  412335:	jle    0x41234d
  412337:	and    al,0x61
  412339:	int    0xd9
  41233b:	aam    0x8c
  41233d:	nop
  41233e:	lods   al,BYTE PTR ds:[esi]
  41233f:	pop    eax
  412340:	and    ebx,DWORD PTR [eax-0x271d362c]
  412346:	cmp    eax,edx
  412348:	cmp    eax,0xb024cc4f
  41234d:	loop   0x4123be
  41234f:	nop
  412350:	cwde   
  412351:	xchg   edi,eax
  412352:	xabort 0xc2
  412355:	mov    edi,0xd65d467c
  41235a:	test   DWORD PTR [ebp+0x33],esp
  41235d:	add    bh,bl
  41235f:	xchg   edx,eax
  412360:	adc    al,0xd7
  412362:	loopne 0x412336
  412364:	std    
  412365:	jbe    0x4123b1
  412367:	xor    al,0x77
  412369:	inc    edi
  41236a:	xchg   ebx,eax
  41236b:	fld    st(4)
  41236d:	bound  edi,QWORD PTR [edi]
  41236f:	push   ebp
  412370:	or     BYTE PTR [ebp+edx*8-0x2e17b447],0x86
  412378:	push   esi
  412379:	aam    0x23
  41237b:	mov    edx,0x128d4190
  412380:	pop    edx
  412381:	pop    esi
  412382:	pop    es
  412383:	jb     0x41232a
  412385:	cmc    
  412386:	addr16 dec edi
  412388:	in     eax,0x4b
  41238a:	(bad)
  41238d:	sub    dh,BYTE PTR [ebx+0x62]
  412390:	xor    bl,BYTE PTR [esi-0x2bbc5a1e]
  412396:	out    dx,al
  412397:	repz arpl WORD PTR [ecx+0x24],bp
  41239b:	jg     0x4123ad
  41239d:	and    al,0xfb
  41239f:	jns    0x41235a
  4123a1:	icebp  
  4123a2:	fnstcw WORD PTR [ecx+0xe6dc981]
  4123a8:	in     eax,0x7c
  4123aa:	inc    eax
  4123ab:	repz pop es
  4123ad:	mov    esi,0x54817f71
  4123b2:	mov    bh,0x4
  4123b4:	es mov dl,0x41
  4123b7:	xchg   DWORD PTR [eax],ecx
  4123b9:	xor    ebx,esp
  4123bb:	jmp    0x41240b
  4123bd:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4123bf:	rcr    DWORD PTR [ebp+0x9],0x21
  4123c3:	pushf  
  4123c4:	push   es
  4123c5:	(bad)  
  4123c7:	or     edi,DWORD PTR [ecx+0x30]
  4123ca:	push   esp
  4123cb:	xchg   edi,eax
  4123cc:	xchg   esp,eax
  4123cd:	or     DWORD PTR [ebx],0xffffffd2
  4123d0:	ds xor eax,0xf92e6e3d
  4123d6:	int3   
  4123d7:	mov    al,0x4c
  4123d9:	faddp  st(3),st
  4123db:	scas   eax,DWORD PTR es:[edi]
  4123dc:	inc    edi
  4123dd:	outs   dx,DWORD PTR ds:[esi]
  4123de:	fbstp  TBYTE PTR [edx+0x7b]
  4123e1:	mov    DWORD PTR [ebp+0x57],ebx
  4123e4:	add    BYTE PTR [esi],dh
  4123e6:	or     BYTE PTR [ebx+0x1c545660],ah
  4123ec:	pop    es
  4123ed:	sbb    BYTE PTR [edx-0x3],dh
  4123f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123f1:	cld    
  4123f2:	mov    bl,0x31
  4123f4:	call   DWORD PTR [ecx-0x3c]
  4123f7:	xor    edx,0x8d4377aa
  4123fd:	adc    eax,0x41454d9
  412402:	popa   
  412403:	stc    
  412404:	xchg   DWORD PTR [eax+0x46],ebp
  412407:	xor    bl,BYTE PTR [edi+0x10]
  41240a:	or     eax,ebp
  41240c:	cmp    eax,0x31225f7e
  412411:	xchg   esi,eax
  412412:	mov    esi,0x6fec6339
  412417:	or     ebx,DWORD PTR [esi+ebp*1]
  41241a:	add    ah,BYTE PTR [edi+ebx*2]
  41241d:	ret    
  41241e:	mov    bl,0xd0
  412420:	push   esi
  412421:	pop    ds
  412422:	and    bh,BYTE PTR [esi+0x62]
  412425:	adc    dl,BYTE PTR [edx+0x7f]
  412428:	or     eax,0xb83443a1
  41242d:	daa    
  41242e:	push   ecx
  41242f:	inc    esi
  412430:	jge    0x41241a
  412432:	push   es
  412433:	ror    BYTE PTR [eax+0x2274c54b],cl
  412439:	clc    
  41243a:	mov    ds:0x8cfc7f1b,al
  41243f:	test   ch,bl
  412441:	ins    DWORD PTR es:[edi],dx
  412442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412443:	fcmovnbe st,st(5)
  412445:	or     BYTE PTR [ebp-0x3],0xea
  412449:	clc    
  41244a:	popa   
  41244b:	cmp    DWORD PTR [esi+ebp*8],0x977d9ca4
  412452:	test   DWORD PTR [edi],eax
  412454:	dec    eax
  412455:	sti    
  412456:	(bad)  
  412457:	sahf   
  412458:	iret   
  412459:	push   0x12e74e8f
  41245e:	mov    eax,ds:0x1779c8c9
  412463:	fdivr  DWORD PTR [ecx-0x39abe306]
  412469:	jo     0x41242d
  41246b:	retf   
  41246c:	arpl   cx,bx
  41246e:	pop    ebx
  41246f:	cmp    ah,dh
  412471:	add    al,0xc3
  412473:	ret    
  412474:	sub    al,0xc1
  412476:	arpl   ax,di
  412478:	adc    ecx,DWORD PTR [ecx]
  41247a:	xchg   bh,ch
  41247c:	and    cl,BYTE PTR [edi+0x77]
  41247f:	xor    eax,0xcdbf43b
  412484:	mov    edi,0x60a2e6e4
  412489:	cdq    
  41248a:	clc    
  41248b:	(bad)  [ebp+0x55ab0845]
  412491:	out    dx,eax
  412492:	dec    esp
  412493:	push   ebx
  412494:	neg    DWORD PTR [ebx+eiz*1+0x454a9b92]
  41249b:	lea    ecx,[eax+edi*4]
  41249e:	xlat   BYTE PTR ds:[ebx]
  41249f:	cmc    
  4124a0:	aad    0x89
  4124a2:	xchg   edx,eax
  4124a3:	in     al,0x6d
  4124a5:	inc    ebp
  4124a6:	sub    esp,DWORD PTR [ebp-0x68]
  4124a9:	fidiv  DWORD PTR [esi+0x38]
  4124ac:	mov    bh,BYTE PTR [edx-0x32d6a3b5]
  4124b2:	cmp    dl,BYTE PTR [ebx-0x6c]
  4124b5:	mov    al,0x25
  4124b7:	cdq    
  4124b8:	xchg   BYTE PTR [edx],cl
  4124ba:	out    dx,al
  4124bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124bc:	lahf   
  4124bd:	stos   BYTE PTR es:[edi],al
  4124be:	call   0x9644fa2d
  4124c3:	push   edx
  4124c4:	jmp    0x412489
  4124c6:	mov    dh,0xf5
  4124c8:	push   ds
  4124c9:	pop    eax
  4124ca:	es xchg esi,eax
  4124cc:	in     eax,0x8d
  4124ce:	retf   0x1d52
  4124d1:	mov    ch,0x1
  4124d3:	xchg   esp,eax
  4124d4:	scas   eax,DWORD PTR es:[edi]
  4124d5:	fild   DWORD PTR [eax]
  4124d7:	mov    dh,0xff
  4124d9:	add    DWORD PTR [ebx-0x6632534a],0xa86e493c
  4124e3:	adc    eax,0xbd2c44a1
  4124e8:	shl    al,0x4e
  4124eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124ec:	enter  0x90c,0x96
  4124f0:	add    al,0x5f
  4124f2:	stc    
  4124f3:	xchg   BYTE PTR [eax+edx*1],dh
  4124f6:	rcl    DWORD PTR [edx],1
  4124f8:	or     ah,0x86
  4124fb:	add    DWORD PTR [edx-0x10],edx
  4124fe:	adc    bh,dh
  412500:	cmp    eax,0x509a1b4a
  412505:	sub    bl,BYTE PTR [ebx+eax*1]
  412508:	mov    ecx,0x2ee48a57
  41250d:	mov    esi,DWORD PTR [ebx-0x5f4d312e]
  412513:	int3   
  412514:	jle    0x4124c5
  412516:	data16 ds jns 0x4124da
  41251a:	mov    ds:0x97603c84,eax
  41251f:	mov    ch,0x46
  412521:	or     esi,ebp
  412523:	repnz repz mov ds:0xd0610eb,eax
  41252a:	mov    ecx,0x1fb1438b
  41252f:	and    eax,0x4c67a30
  412534:	fnstcw WORD PTR [ecx+0x2e]
  412537:	mov    ebx,esi
  412539:	mov    al,0x84
  41253b:	mov    al,0xf0
  41253d:	call   DWORD PTR [edi+0x70]
  412540:	and    esp,DWORD PTR [ebp+edi*2+0x3ea18024]
  412547:	cwde   
  412548:	jae    0x412554
  41254a:	fcmovbe st,st(5)
  41254c:	mov    dl,0xde
  41254e:	pop    ss
  41254f:	fsub   QWORD PTR [eax]
  412551:	cld    
  412552:	mov    ch,0x8f
  412554:	(bad)  
  412555:	fnstenv [ecx]
  412557:	fidivr WORD PTR [ebp+0x1f6a0e42]
  41255d:	mov    bl,0xed
  41255f:	repz mov eax,ds:0x7d1047a2
  412565:	sbb    al,0x27
  412567:	repz xchg esi,eax
  412569:	xchg   esi,eax
  41256a:	push   ebp
  41256b:	inc    eax
  41256c:	pop    es
  41256d:	and    DWORD PTR [eax],esp
  41256f:	in     eax,dx
  412570:	cmp    al,0x32
  412572:	adc    al,0x78
  412574:	xchg   edx,eax
  412575:	rcl    BYTE PTR [ecx-0x6f],1
  412578:	stos   DWORD PTR es:[edi],eax
  412579:	or     ax,0xc484
  41257d:	dec    eax
  41257e:	xchg   ebp,eax
  41257f:	and    al,dh
  412581:	jle    0x41251d
  412583:	sbb    DWORD PTR [ebx+ebp*4],ebx
  412586:	mov    ecx,0xcf947891
  41258b:	cmp    BYTE PTR [eax-0x2c63e5ee],0x66
  412592:	rcr    ebx,cl
  412594:	dec    ecx
  412595:	or     BYTE PTR ds:0xe6f70d41,bh
  41259b:	xchg   esp,eax
  41259c:	inc    edx
  41259d:	pushf  
  41259e:	pop    edi
  41259f:	inc    esp
  4125a0:	(bad)  
  4125a1:	sub    al,0x73
  4125a3:	into   
  4125a4:	sbb    dl,dl
  4125a6:	mov    bh,0xad
  4125a8:	jnp    0x4125f8
  4125aa:	xchg   esi,eax
  4125ab:	aad    0x8d
  4125ad:	cmp    eax,0x35bbf208
  4125b2:	jne    0x412581
  4125b4:	(bad)  
  4125b5:	leave  
  4125b6:	pop    ebx
  4125b7:	cmp    bl,BYTE PTR [ebp+0x6]
  4125ba:	imul   edi,DWORD PTR [edx-0x26],0x55
  4125be:	fld    TBYTE PTR [ebp+0x52]
  4125c1:	push   ss
  4125c2:	cmp    al,0xee
  4125c4:	adc    BYTE PTR [ebp-0x53],ah
  4125c7:	add    eax,0x2b15cceb
  4125cc:	jnp    0x41256c
  4125ce:	cmp    eax,0x28c10a7c
  4125d3:	jo     0x412626
  4125d5:	mov    edi,0xc5de30aa
  4125da:	or     BYTE PTR [edx-0x49],ah
  4125dd:	push   0x88cb0a65
  4125e2:	imul   ebx,DWORD PTR [eax+0x68],0xa8a5fe4
  4125e9:	fs inc ebp
  4125eb:	jg     0x4125ed
  4125ed:	leave  
  4125ee:	push   0x5d828193
  4125f3:	(bad)  
  4125f4:	ds push ebx
  4125f6:	or     edx,edi
  4125f8:	or     DWORD PTR [edx+0x37fd1cad],0x62cdff47
  412602:	in     eax,0x2c
  412604:	jmp    0x41264a
  412606:	lock call 0xda84ee68
  41260c:	loopne 0x4125a1
  41260e:	data16 sbb BYTE PTR [edx*1-0x6b606f9d],bh
  412616:	adc    eax,0x64174238
  41261b:	or     esi,DWORD PTR [ebp+edx*4+0x19806bc9]
  412622:	push   esp
  412623:	std    
  412624:	cmp    dh,ah
  412626:	pushf  
  412627:	pop    esi
  412628:	stos   BYTE PTR es:[edi],al
  412629:	adc    eax,ebp
  41262b:	or     al,0xd7
  41262e:	loopne 0x41269a
  412630:	loope  0x41260a
  412632:	dec    edi
  412633:	test   al,0xf5
  412635:	and    eax,0xffffffd1
  412638:	mov    dl,0x65
  41263a:	(bad)  
  41263b:	hlt    
  41263c:	pop    ebx
  41263d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263e:	out    0x79,eax
  412640:	dec    esi
  412641:	rcl    dh,1
  412643:	or     ecx,DWORD PTR [eax-0x5f2e587d]
  412649:	icebp  
  41264a:	imul   esi,DWORD PTR [edx-0x4e],0x6b5d1f30
  412651:	sub    BYTE PTR [edi],dl
  412653:	and    al,0x0
  412655:	(bad)  
  412656:	mov    al,ds:0x36e5f062
  41265b:	in     al,0x98
  41265d:	push   cs
  41265e:	cmp    ecx,DWORD PTR [eax-0x40caf804]
  412664:	or     edi,DWORD PTR [esi]
  412666:	int    0x8
  412668:	shl    DWORD PTR [edi],1
  41266a:	popf   
  41266b:	inc    ecx
  41266c:	lods   al,BYTE PTR ds:[esi]
  41266d:	jae    0x4126be
  41266f:	lea    ecx,[ecx+0x7123552]
  412675:	sbb    DWORD PTR [edi],esi
  412677:	loop   0x412615
  412679:	add    al,0xb0
  41267b:	and    eax,0x81006e7d
  412680:	daa    
  412681:	gs retf 0x9ea4
  412685:	clc    
  412686:	push   ecx
  412687:	jl     0x41262f
  412689:	inc    ebp
  41268a:	dec    esi
  41268b:	ror    DWORD PTR [esi-0x5899f646],1
  412691:	sub    eax,0xdc927bfe
  412696:	adc    al,0x60
  412698:	or     eax,0x4254b1f6
  41269d:	mov    ah,0x4b
  41269f:	aaa    
  4126a0:	push   ss
  4126a1:	jbe    0x412633
  4126a3:	sbb    al,0x3b
  4126a5:	mov    eax,0x93ccc5d7
  4126aa:	sbb    eax,0x43126bcb
  4126af:	leave  
  4126b0:	jno    0x412708
  4126b2:	add    bl,dh
  4126b4:	inc    ebp
  4126b5:	push   eax
  4126b6:	and    DWORD PTR [ebp-0x65],0x7e80547
  4126bd:	mov    bh,0xe
  4126bf:	fstp   QWORD PTR [esi-0x7e]
  4126c2:	and    DWORD PTR [esi+0xde61acf],esi
  4126c8:	cli    
  4126c9:	dec    edi
  4126ca:	xchg   esp,eax
  4126cb:	(bad)  
  4126cc:	mov    ds:0x405e618e,eax
  4126d1:	adc    dh,BYTE PTR [ecx-0x2f]
  4126d4:	inc    ebp
  4126d5:	pop    esi
  4126d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126d7:	je     0x4126b1
  4126d9:	or     edi,0xffffff9e
  4126dc:	jno    0x4126e2
  4126de:	scas   al,BYTE PTR es:[edi]
  4126df:	jle    0x4126cb
  4126e1:	lea    ecx,[edx-0x31]
  4126e4:	es push es
  4126e6:	fnsave [ebp+ebx*4+0x5f]
  4126ea:	mov    al,dh
  4126ec:	dec    ebx
  4126ed:	mov    bl,0x7c
  4126ef:	xchg   edi,eax
  4126f0:	sahf   
  4126f1:	popf   
  4126f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f3:	aaa    
  4126f4:	ins    DWORD PTR es:[edi],dx
  4126f5:	(bad)  [ebp+0x5]
  4126f8:	push   ds
  4126f9:	into   
  4126fa:	mov    bh,0x2f
  4126fc:	mov    bh,0x21
  4126fe:	sub    al,dl
  412700:	xchg   edi,eax
  412701:	jge    0x4126e7
  412703:	icebp  
  412704:	in     eax,dx
  412705:	cdq    
  412706:	das    
  412707:	or     edi,ebx
  412709:	sbb    ch,ah
  41270b:	aad    0x83
  41270d:	ins    BYTE PTR es:[edi],dx
  41270e:	cmp    al,0x54
  412710:	xchg   esi,eax
  412711:	jecxz  0x4126f4
  412713:	jp     0x41278c
  412715:	std    
  412716:	inc    ecx
  412717:	pusha  
  412718:	(bad)  
  412719:	aaa    
  41271a:	lea    esp,[esi]
  41271c:	into   
  41271d:	adc    al,0x70
  41271f:	loope  0x4126e7
  412721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412722:	add    al,0x85
  412724:	test   BYTE PTR [ecx+0x3a],dl
  412727:	inc    esi
  412728:	icebp  
  412729:	les    ebx,FWORD PTR [esi-0x2e1c4937]
  41272f:	shl    BYTE PTR [esi],0xb0
  412732:	arpl   WORD PTR [ecx],cx
  412734:	ret    0xb95
  412737:	xchg   ecx,eax
  412738:	jmp    0x7f3b:0x8e2d3318
  41273f:	and    bh,bl
  412741:	fcomp  DWORD PTR [edi]
  412743:	ja     0x412796
  412745:	dec    ecx
  412746:	bsf    ebp,DWORD PTR [edx]
  412749:	mov    bh,0x72
  41274b:	bound  esp,QWORD PTR [edx+0x16]
  41274e:	mov    bl,0xeb
  412750:	inc    ebx
  412751:	sub    DWORD PTR [ebx],edx
  412753:	and    al,0x4b
  412755:	cmp    eax,0x5e8d2a8c
  41275a:	int3   
  41275b:	cli    
  41275c:	jbe    0x412713
  41275e:	sub    al,0x6a
  412760:	pop    edx
  412761:	gs sbb eax,0xc695e17
  412767:	mov    eax,ds:0xd89eb7cc
  41276c:	(bad)  [edi+eiz*1]
  41276f:	pop    esp
  412770:	and    DWORD PTR [ebx+0x5f],0xd3aec95
  412777:	in     eax,dx
  412778:	jge    0x412778
  41277a:	mov    eax,ds:0xf13a00b0
  41277f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412780:	push   0xf660358
  412785:	or     al,0xa
  412787:	sub    BYTE PTR [edx+0x334b2663],bl
  41278d:	out    0x9f,al
  41278f:	add    dl,bl
  412791:	pusha  
  412792:	jo     0x412744
  412794:	xlat   BYTE PTR ds:[ebx]
  412795:	jnp    0x412736
  412797:	and    ch,al
  412799:	push   esp
  41279a:	lods   al,BYTE PTR ds:[esi]
  41279b:	dec    BYTE PTR [ebp+ecx*2+0x2dcd57f]
  4127a2:	test   BYTE PTR [edi-0x7a],ah
  4127a5:	pop    ebp
  4127a6:	pop    ds
  4127a7:	cmc    
  4127a8:	mov    eax,ds:0xce395173
  4127ad:	int    0x4f
  4127af:	sbb    ecx,DWORD PTR [ecx]
  4127b1:	fnstsw WORD PTR [edx]
  4127b3:	dec    ebx
  4127b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b5:	(bad)  
  4127b6:	mov    ch,0x84
  4127b8:	loope  0x4127c7
  4127ba:	mov    DWORD PTR [edx+eiz*1],edx
  4127bd:	leave  
  4127be:	into   
  4127bf:	pushf  
  4127c0:	out    0x7a,al
  4127c2:	mov    di,0x4a7b
  4127c6:	jns    0x412748
  4127c8:	pop    es
  4127c9:	pop    ecx
  4127ca:	lock xchg BYTE PTR [esi],ah
  4127cd:	inc    ebp
  4127ce:	lds    ebx,FWORD PTR [esi-0x5bae09ed]
  4127d4:	stc    
  4127d5:	rol    BYTE PTR [edi+eax*1-0x79],cl
  4127d9:	int3   
  4127da:	mov    ecx,0x4929002b
  4127df:	aas    
  4127e0:	cmp    DWORD PTR [edi-0xf],esp
  4127e3:	add    BYTE PTR [ebp+0x13726162],dl
  4127e9:	(bad)  
  4127ea:	dec    ecx
  4127eb:	mov    ah,0x15
  4127ed:	fdiv   DWORD PTR [ecx]
  4127ef:	mov    eax,ds:0x46d3ac79
  4127f4:	and    BYTE PTR [edx+0x9a43ae],0x8b
  4127fb:	nop
  4127fc:	jmp    0x41286f
  4127fe:	cmp    DWORD PTR [ebx],esi
  412800:	test   DWORD PTR [ecx],edi
  412802:	fiadd  DWORD PTR [ecx+eiz*8]
  412805:	push   ebx
  412806:	pop    ds
  412807:	push   cs
  412808:	ror    ebp,cl
  41280a:	retf   0xeb8e
  41280d:	sub    eax,0x522ef4ca
  412812:	shr    DWORD PTR [ecx-0x2bce0338],0x4b
  412819:	popf   
  41281a:	cwde   
  41281b:	inc    edx
  41281c:	xlat   BYTE PTR ds:[ebx]
  41281d:	add    eax,0x3460333b
  412822:	add    eax,0x4c251de3
  412827:	add    edi,esi
  412829:	popf   
  41282a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41282b:	xor    ch,0x7b
  41282e:	hlt    
  41282f:	int3   
  412830:	mov    BYTE PTR gs:[ebx+0x35],dl
  412834:	mov    esi,ebx
  412836:	sar    ebx,0xaf
  412839:	test   DWORD PTR [ebp+0x2b03d0a5],ecx
  41283f:	in     eax,0x3a
  412841:	pop    esp
  412842:	sub    cl,ch
  412844:	sbb    al,al
  412846:	dec    edx
  412847:	or     DWORD PTR [eax+0x29b36017],edi
  41284d:	in     eax,0xc7
  41284f:	dec    ebx
  412850:	jne    0x412867
  412852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412853:	(bad)  
  412854:	enter  0xaecd,0xc2
  412858:	mov    esp,0x6502e34b
  41285d:	fwait
  41285e:	imul   ecx,DWORD PTR [esi+ebx*4+0x38],0x8
  412863:	push   cs
  412864:	test   DWORD PTR [edi],ebp
  412866:	lods   al,BYTE PTR ds:[esi]
  412867:	imul   eax,DWORD PTR [ecx+0x68]
  41286b:	loop   0x41287b
  41286d:	pop    eax
  41286e:	shl    ebp,1
  412870:	je     0x412827
  412872:	jp     0x4128ac
  412874:	jmp    0x412854
  412876:	xchg   edi,eax
  412877:	pop    es
  412878:	and    esi,DWORD PTR [eax-0x74a15360]
  41287e:	mov    dh,0xfb
  412880:	push   cs
  412881:	mov    WORD PTR [edx-0xb],?
  412884:	push   esi
  412885:	xchg   edi,eax
  412886:	push   0xb7f95337
  41288b:	mov    ch,BYTE PTR [eax-0x1d]
  41288e:	lds    edx,FWORD PTR [edx]
  412890:	add    al,0xaa
  412892:	pop    ebp
  412893:	mov    dl,0xbf
  412895:	xchg   BYTE PTR [esi*1-0x66bc13d9],al
  41289c:	add    esi,DWORD PTR [edx+0x3f]
  41289f:	popf   
  4128a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a1:	pop    edi
  4128a2:	mov    ebp,0xb110b42
  4128a7:	fcomi  st,st(7)
  4128a9:	rcr    BYTE PTR [edi-0x24],1
  4128ac:	retf   
  4128ad:	je     0x4128bc
  4128af:	aaa    
  4128b0:	(bad)  
  4128b1:	jns    0x4128b9
  4128b3:	push   edi
  4128b4:	mov    esp,0x3f4bcfe4
  4128b9:	lods   eax,DWORD PTR ds:[si]
  4128bb:	ins    DWORD PTR es:[edi],dx
  4128bc:	loopne 0x4128bd
  4128be:	sub    DWORD PTR [eax-0x67],ecx
  4128c1:	mov    edx,0x4f9db800
  4128c6:	(bad)  
  4128c7:	push   ebp
  4128c8:	mov    esi,0x2983f3f5
  4128cd:	call   0x113292e
  4128d2:	jno    0x412868
  4128d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128d5:	xchg   BYTE PTR [ebp+0x67],dh
  4128d8:	arpl   WORD PTR [ecx],bp
  4128da:	fld    TBYTE PTR [esi]
  4128dc:	mov    ds:0x1ead9040,al
  4128e1:	gs std 
  4128e3:	sub    al,0x68
  4128e5:	push   esi
  4128e6:	jnp    0x4128ce
  4128e8:	cmp    al,0x58
  4128ea:	mov    WORD PTR [esp+eax*8+0x7a],cs
  4128ee:	aam    0x5c
  4128f0:	xchg   edx,eax
  4128f1:	aam    0x1a
  4128f3:	loopne 0x412959
  4128f5:	pop    ss
  4128f6:	dec    esi
  4128f7:	ret    0xf8f2
  4128fa:	push   esi
  4128fb:	dec    ebp
  4128fc:	cmp    eax,DWORD PTR [ebx-0x72]
  4128ff:	stos   DWORD PTR es:[edi],eax
  412900:	sti    
  412901:	fsub   QWORD PTR [ebx-0x76]
  412904:	cmc    
  412905:	mov    dh,0xa8
  412907:	xchg   ebx,eax
  412908:	mov    eax,cr7
  41290b:	dec    edx
  41290c:	cmp    bh,BYTE PTR [ecx]
  41290e:	sti    
  41290f:	push   ds
  412910:	mov    DWORD PTR [esi-0x61],ebp
  412913:	xor    al,0x77
  412915:	fwait
  412916:	pop    esi
  412917:	jae    0x41292d
  412919:	push   eax
  41291a:	mov    eax,ds:0x13de276
  41291f:	xchg   ebx,eax
  412920:	dec    ebx
  412921:	jp     0x412953
  412923:	jns    0x4128b9
  412925:	adc    edx,DWORD PTR [edi-0x23]
  412928:	mov    al,BYTE PTR [eax-0x6b]
  41292b:	aad    0x0
  41292d:	nop
  41292e:	loopne 0x4128cd
  412930:	xor    BYTE PTR [esi-0x9],ah
  412933:	clc    
  412934:	adc    ch,BYTE PTR [edi-0x61]
  412937:	xchg   esp,eax
  412938:	jno    0x412920
  41293a:	fisttp DWORD PTR [edx+0x53]
  41293d:	dec    ebp
  41293e:	pop    eax
  41293f:	and    ebp,DWORD PTR [esi]
  412941:	cmc    
  412942:	sbb    bh,BYTE PTR [edi-0x1dd2f041]
  412948:	addr16 jae 0x4128d5
  41294b:	jmp    0x412964
  41294d:	mov    ds:0x539f605c,eax
  412952:	ret    0xb4bd
  412955:	out    0x8d,eax
  412957:	xchg   DWORD PTR [esi],esi
  412959:	mov    ecx,0xc7d10b0c
  41295e:	sbb    eax,0x97a4e3b3
  412963:	fst    st(7)
  412965:	bound  ecx,QWORD PTR [edx-0x7b]
  412968:	or     eax,0xc506d542
  41296d:	jecxz  0x412948
  41296f:	cmp    bl,BYTE PTR [edi]
  412971:	imul   edx,DWORD PTR [edi],0x1a207d99
  412977:	fsubr  st,st(4)
  412979:	push   0x36f3cd0a
  41297e:	(bad)  
  412980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412981:	adc    al,0x73
  412983:	xlat   BYTE PTR ds:[ebx]
  412984:	test   al,0xf5
  412986:	push   ecx
  412987:	mov    dl,0xba
  412989:	mov    dh,0xf6
  41298b:	sub    DWORD PTR [edx-0x7],ebx
  41298e:	in     al,dx
  41298f:	popa   
  412990:	lds    esi,FWORD PTR [eax]
  412992:	pop    esp
  412993:	sbb    eax,0x4ad45f03
  412998:	loopne 0x41299c
  41299a:	in     al,dx
  41299b:	aad    0x16
  41299d:	es cld 
  41299f:	in     al,dx
  4129a0:	shl    cl,1
  4129a2:	sahf   
  4129a3:	push   cs
  4129a4:	and    ch,BYTE PTR [eax-0x3d7e478e]
  4129aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ab:	repnz pop ecx
  4129ad:	(bad)  
  4129ae:	dec    ebx
  4129af:	or     eax,0x88a4a594
  4129b4:	(bad)  [esi-0x6d]
  4129b7:	loopne 0x41297e
  4129b9:	sbb    ebp,ecx
  4129bb:	xchg   ecx,eax
  4129bc:	mov    ecx,0x1fb3c471
  4129c1:	ret    
  4129c2:	inc    eax
  4129c3:	sbb    DWORD PTR [ebx-0x17c89121],esp
  4129c9:	mov    bh,0xfe
  4129cb:	cmp    al,0x35
  4129cd:	push   0x66
  4129cf:	iret   
  4129d0:	and    eax,0xbd6f9672
  4129d5:	mov    eax,0x21ab3915
  4129da:	call   0x5b6710e8
  4129df:	or     eax,0x3796d47
  4129e4:	mov    ch,0xd7
  4129e6:	cwde   
  4129e7:	loope  0x4129f2
  4129e9:	and    BYTE PTR [ebp+0x2873e6cc],dh
  4129ef:	popa   
  4129f0:	sbb    bl,al
  4129f2:	mov    DWORD PTR [esi+0x64806e5b],esp
  4129f8:	stos   DWORD PTR es:[edi],eax
  4129f9:	mov    cl,BYTE PTR [edi]
  4129fb:	in     eax,dx
  4129fc:	ret    
  4129fd:	xchg   esp,eax
  4129fe:	pop    ss
  4129ff:	jno    0x412a0c
  412a01:	loop   0x412a3a
  412a03:	test   al,0x7f
  412a05:	paddusw mm3,QWORD PTR [edi+eax*8+0x2994ef98]
  412a0d:	out    dx,eax
  412a0e:	dec    ebp
  412a0f:	(bad)  
  412a10:	xchg   esp,eax
  412a11:	pop    edx
  412a12:	fld    QWORD PTR [ebx-0x7f]
  412a15:	sub    DWORD PTR [edx-0x7e6f79ba],edi
  412a1b:	cli    
  412a1c:	or     cl,bh
  412a1e:	(bad)  
  412a1f:	arpl   WORD PTR [ebp*8+0xe180c43],cx
  412a26:	sbb    ecx,esi
  412a28:	shr    BYTE PTR [ecx+eiz*2+0x596c5abc],cl
  412a2f:	test   ebx,ebx
  412a31:	idiv   dl
  412a33:	out    0x4b,al
  412a35:	dec    edi
  412a36:	daa    
  412a37:	cwde   
  412a38:	cwde   
  412a39:	jns    0x412a29
  412a3b:	jne    0x412a74
  412a3d:	add    ch,BYTE PTR [ebp-0x6d]
  412a40:	jle    0x412a76
  412a42:	fbld   TBYTE PTR [edx]
  412a44:	fbld   TBYTE PTR [ebx-0x5a]
  412a47:	(bad)
  412a4a:	sbb    eax,0xefc95497
  412a4f:	dec    esi
  412a50:	cmp    al,0x1f
  412a52:	(bad)  
  412a53:	or     bl,bh
  412a55:	push   ebx
  412a56:	push   0x3856b8e2
  412a5b:	pop    ebp
  412a5c:	mov    bl,0xe
  412a5e:	dec    ebp
  412a5f:	and    al,0x92
  412a61:	ss inc eax
  412a63:	sar    BYTE PTR [ecx+0x5245a589],1
  412a69:	jb     0x412a31
  412a6b:	cmp    dh,dh
  412a6d:	out    dx,eax
  412a6e:	and    BYTE PTR [edi+0x2a7c2940],0x6c
  412a75:	xchg   edi,eax
  412a76:	add    al,0x9b
  412a78:	adc    cl,BYTE PTR [esp+edx*1+0x64]
  412a7c:	push   esp
  412a7d:	je     0x412ade
  412a7f:	sbb    al,0x7c
  412a81:	arpl   WORD PTR [ebx-0xe],sp
  412a84:	rol    BYTE PTR [ecx+0x6d44baf],1
  412a8a:	push   ds
  412a8b:	out    0x29,eax
  412a8d:	in     al,dx
  412a8e:	retf   
  412a8f:	imul   edi,DWORD PTR [ebp+0x2b9cc0f4],0x5d
  412a96:	stos   DWORD PTR es:[edi],eax
  412a97:	cmp    esp,esp
  412a99:	add    al,0xf3
  412a9b:	(bad)  [eax-0x8]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	fldcw  WORD PTR [edi+ebx*8+0x53b4207e]
  412aa6:	push   0xffffffbc
  412aa8:	and    bh,dl
  412aaa:	scas   al,BYTE PTR es:[edi]
  412aab:	mov    ch,ah
  412aad:	xchg   ebp,eax
  412aae:	js     0x412a3c
  412ab0:	cmp    edi,esi
  412ab2:	mov    ebx,0xa062ce42
  412ab7:	sub    BYTE PTR [ecx+0x381962e0],dl
  412abd:	clc    
  412abe:	cwde   
  412abf:	lds    ecx,FWORD PTR [ecx+0x481ea6b4]
  412ac5:	test   DWORD PTR [ebx],esp
  412ac7:	mov    ?,WORD PTR [esi]
  412ac9:	adc    BYTE PTR [ecx+edx*2-0x3ee906a3],0x55
  412ad1:	dec    ebx
  412ad2:	inc    edx
  412ad3:	mov    edi,0xaf4ff159
  412ad8:	jnp    0x412a92
  412ada:	push   0x69
  412adc:	and    al,BYTE PTR [edi-0x220f4d9]
  412ae2:	mov    eax,ds:0x68135c00
  412ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae8:	and    DWORD PTR [ebp-0x79],ecx
  412aeb:	add    DWORD PTR [eax-0x65],edx
  412aee:	sbb    BYTE PTR [ebp-0x41a8608f],dl
  412af4:	or     al,0x55
  412af6:	sub    DWORD PTR [eax+ebp*4+0x66],0xffffff9e
  412afb:	ret    0xa913
  412afe:	aad    0xb2
  412b00:	sbb    dl,BYTE PTR [ebx+0x1e2800a7]
  412b06:	cli    
  412b07:	sbb    al,0xab
  412b09:	adc    BYTE PTR [eax-0x21],al
  412b0c:	stos   DWORD PTR es:[edi],eax
  412b0d:	xchg   ebx,eax
  412b0e:	cmp    DWORD PTR [edx+ecx*4-0x12],edx
  412b12:	sub    esi,DWORD PTR [ecx-0x41162566]
  412b18:	repnz inc edx
  412b1a:	outs   dx,DWORD PTR ds:[esi]
  412b1b:	sbb    bl,bh
  412b1d:	and    eax,0xb59e89b8
  412b22:	sub    al,0x24
  412b24:	jne    0x412b4e
  412b26:	shr    DWORD PTR [ebx],0x39
  412b29:	lods   al,BYTE PTR ds:[esi]
  412b2a:	out    dx,al
  412b2b:	sbb    BYTE PTR [esi-0x73],bh
  412b2e:	pop    esp
  412b2f:	mov    edx,0x1f81e0f3
  412b34:	scas   al,BYTE PTR es:[edi]
  412b35:	adc    dl,BYTE PTR [ebp-0x59]
  412b38:	lods   al,BYTE PTR ds:[esi]
  412b39:	sahf   
  412b3a:	xchg   BYTE PTR [edi+0x1de5fe74],dl
  412b40:	call   DWORD PTR [edx-0x273a29ba]
  412b46:	jmp    0xc5b1edd8
  412b4b:	or     eax,0xccac33f2
  412b50:	rcl    DWORD PTR [edi-0x80],0x1f
  412b54:	xor    BYTE PTR [ecx],bl
  412b56:	loopne 0x412bbe
  412b58:	adc    eax,0x1c54241f
  412b5d:	and    BYTE PTR [edi-0x6f],ah
  412b60:	cdq    
  412b61:	add    al,0x4a
  412b63:	adc    BYTE PTR [ebp+0x66],dl
  412b66:	push   edx
  412b67:	out    dx,eax
  412b68:	mov    edi,0x69cbd68c
  412b6d:	xchg   esp,eax
  412b6e:	call   0x6c79:0x3bcfaa07
  412b75:	xchg   edx,eax
  412b76:	xor    edi,DWORD PTR [ebp+0x11]
  412b79:	push   esp
  412b7a:	adc    BYTE PTR [eax],ch
  412b7c:	lahf   
  412b7d:	fcomp  DWORD PTR [edi+ebx*1]
  412b80:	sub    ecx,ebx
  412b82:	div    BYTE PTR ds:0x8358d0d6
  412b88:	outs   dx,BYTE PTR ds:[esi]
  412b89:	in     al,dx
  412b8a:	add    al,0xac
  412b8c:	mov    bl,0x44
  412b8e:	sub    al,0xe4
  412b90:	sub    al,0xa
  412b92:	(bad)  [edx]
  412b94:	js     0x412ba8
  412b96:	mov    esi,0xc10cde41
  412b9b:	pop    eax
  412b9c:	sbb    DWORD PTR [edi+0x67],ebp
  412b9f:	mov    ah,0xf
  412ba1:	jne    0x412b67
  412ba3:	xor    DWORD PTR ds:0x185e7799,ebx
  412ba9:	xlat   BYTE PTR ds:[ebx]
  412baa:	or     al,0xf1
  412bac:	pop    ebp
  412bad:	xor    BYTE PTR [esi+0x7d],cl
  412bb0:	(bad)  
  412bb1:	xchg   ebx,eax
  412bb2:	jp     0x412b3e
  412bb4:	es cmc 
  412bb6:	sbb    eax,0xfb4fc245
  412bbb:	push   edx
  412bbc:	fdivr  QWORD PTR [edi]
  412bbe:	ret    0x927f
  412bc1:	jle    0x412bd2
  412bc3:	dec    ecx
  412bc4:	push   cs
  412bc5:	fld    TBYTE PTR [ebx-0x7237b621]
  412bcb:	iret   
  412bcc:	xor    ebp,DWORD PTR [ecx+0x28]
  412bcf:	jne    0x412c03
  412bd1:	scas   al,BYTE PTR es:[edi]
  412bd2:	pusha  
  412bd3:	jp     0x412bbc
  412bd5:	outs   dx,BYTE PTR ds:[esi]
  412bd6:	and    al,0xda
  412bd8:	div    BYTE PTR [ebx-0x71bd3c87]
  412bde:	pop    es
  412bdf:	test   eax,0x841f6dbb
  412be4:	adc    edx,eax
  412be6:	push   ss
  412be7:	popa   
  412be8:	jmp    0x26085a7e
  412bed:	xchg   BYTE PTR [ebp+0x68],al
  412bf0:	and    edi,ebp
  412bf2:	leave  
  412bf3:	loopne 0x412c6f
  412bf5:	add    edi,DWORD PTR [ecx+0x2e]
  412bf8:	fild   WORD PTR [ebp+0x74]
  412bfb:	adc    edx,DWORD PTR [eax+edi*4-0x71ff97ba]
  412c02:	test   DWORD PTR [eax+0x6e],eax
  412c05:	push   edi
  412c06:	test   BYTE PTR [esi+0x3551e3a4],ah
  412c0c:	shl    BYTE PTR [esi+eax*2+0x167cf565],0x25
  412c14:	ins    DWORD PTR es:[edi],dx
  412c15:	pop    eax
  412c16:	push   0xffffffad
  412c18:	jmp    0x77705515
  412c1d:	js     0x412bd2
  412c1f:	mov    bl,BYTE PTR [edx+ecx*8]
  412c22:	sbb    eax,0x509c934
  412c27:	jo     0x412c84
  412c29:	adc    BYTE PTR [ecx+0x374124d0],dl
  412c2f:	jae    0x412bd6
  412c31:	popa   
  412c32:	in     eax,dx
  412c33:	add    eax,0x66e74633
  412c38:	adc    dl,BYTE PTR [edi+ebx*2]
  412c3b:	aam    0xb9
  412c3d:	jae    0x412cab
  412c3f:	ret    0xee67
  412c42:	bound  esi,QWORD PTR [edi+0x4ea9157e]
  412c48:	push   eax
  412c49:	jmp    DWORD PTR [ecx+0x67]
  412c4c:	ficomp WORD PTR [edx]
  412c4e:	fld    QWORD PTR [eax]
  412c50:	xor    esp,DWORD PTR [ecx-0xa]
  412c53:	jmp    esp
  412c55:	and    eax,0xb0f78b51
  412c5a:	scas   eax,DWORD PTR es:[edi]
  412c5b:	add    BYTE PTR [ebp+0x4cbad1a6],0x56
  412c62:	cmp    esp,edi
  412c64:	xor    ah,BYTE PTR [ecx-0x1572b80a]
  412c6a:	lods   al,BYTE PTR ds:[esi]
  412c6b:	xchg   ebp,eax
  412c6c:	sub    edx,DWORD PTR ds:0x92171269
  412c72:	cli    
  412c73:	push   ds
  412c74:	daa    
  412c75:	cwde   
  412c76:	xchg   ecx,eax
  412c77:	(bad)  
  412c78:	test   ebp,edi
  412c7a:	test   al,0x3a
  412c7c:	push   ds
  412c7d:	xor    edx,ecx
  412c7f:	fsubr  QWORD PTR [edx+0x3c01f33d]
  412c85:	out    dx,eax
  412c86:	call   0x22fb:0xae74f74f
  412c8d:	xor    al,0xb
  412c8f:	mov    DWORD PTR [ecx+0xc],ebp
  412c92:	sbb    esi,DWORD PTR [edx+esi*2]
  412c95:	das    
  412c96:	and    ebp,DWORD PTR [eax]
  412c98:	push   esp
  412c99:	out    dx,al
  412c9a:	mov    ebp,edx
  412c9c:	in     eax,0x47
  412c9e:	mov    esp,0xc91a9131
  412ca3:	xchg   bl,ch
  412ca5:	rcl    ch,cl
  412ca7:	mov    dl,0x57
  412ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412caa:	add    BYTE PTR [esi-0x5ae0bd7d],0x90
  412cb1:	sti    
  412cb2:	dec    edx
  412cb3:	pop    ss
  412cb4:	sbb    eax,0x7a5ad831
  412cb9:	fstp   TBYTE PTR [ebx-0x21]
  412cbc:	fistp  DWORD PTR [edx+0x711d0b6e]
  412cc2:	jne    0x412d2b
  412cc4:	mov    eax,ds:0xe0c42e7a
  412cc9:	jmp    0x412c6c
  412ccb:	cmp    BYTE PTR [ebx+ebx*8+0x408e02ac],ch
  412cd2:	jb     0x412d40
  412cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cd5:	mov    ah,0x2a
  412cd7:	dec    edi
  412cd8:	or     al,0xc3
  412cda:	cmp    bl,bl
  412cdc:	retf   0x13b9
  412cdf:	add    cl,BYTE PTR [eax+ebx*2-0x79a4095e]
  412ce6:	mov    esp,0xd8629f10
  412ceb:	in     al,0x5f
  412ced:	sbb    eax,0xa4f7b02e
  412cf2:	cld    
  412cf3:	xor    BYTE PTR [ebx],dl
  412cf5:	imul   edx,eax,0xf993b712
  412cfb:	xchg   esp,eax
  412cfc:	sbb    eax,0x29a39538
  412d01:	jno    0x412cf2
  412d03:	sbb    eax,0xe63edf9a
  412d08:	pusha  
  412d09:	stos   BYTE PTR es:[edi],al
  412d0a:	sub    DWORD PTR [edi+0x31840ca6],eax
  412d10:	and    DWORD PTR [ebx+0x1c],edx
  412d13:	fist   WORD PTR [edi]
  412d15:	jno    0x412cbb
  412d17:	cmc    
  412d18:	outs   dx,DWORD PTR ds:[esi]
  412d19:	lock test esi,ebp
  412d1c:	std    
  412d1d:	and    cl,BYTE PTR [ebp+0x65c69b6a]
  412d23:	xchg   esi,eax
  412d24:	fst    DWORD PTR [eax]
  412d26:	adc    eax,0x77f09346
  412d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d2c:	stos   DWORD PTR es:[edi],eax
  412d2d:	dec    ecx
  412d2e:	data16 sub BYTE PTR [eax],dh
  412d31:	das    
  412d32:	xchg   ebp,eax
  412d33:	fcom   QWORD PTR [edx-0x36]
  412d36:	inc    BYTE PTR [ecx+0x29]
  412d39:	jmp    0x3807e0e0
  412d3e:	js     0x412dbb
  412d40:	gs int 0x3b
  412d43:	pop    ecx
  412d44:	inc    esi
  412d45:	sbb    cl,ah
  412d47:	or     BYTE PTR [edi],dh
  412d49:	lods   eax,DWORD PTR ds:[esi]
  412d4a:	dec    ebx
  412d4b:	mov    bl,0xb6
  412d4d:	xchg   esi,edx
  412d4f:	pop    edx
  412d50:	les    esp,FWORD PTR [ecx-0x36]
  412d53:	sti    
  412d54:	push   cs
  412d55:	retf   
  412d56:	shl    BYTE PTR [eax],cl
  412d58:	clc    
  412d59:	push   eax
  412d5a:	mov    al,ds:0x49f28dfa
  412d5f:	pop    edx
  412d60:	ret    0x9b14
  412d63:	bound  esp,QWORD PTR [edi-0x6db10bc]
  412d69:	inc    edx
  412d6a:	dec    sp
  412d6c:	sbb    DWORD PTR [ebx+0x62a33114],0xf511d6b2
  412d76:	sub    BYTE PTR [edx+0x22aa648b],bh
  412d7c:	les    esi,FWORD PTR [ebp+0x4ecd73ec]
  412d82:	and    edx,eax
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	lea    esi,[ecx+0x4a]
  412d88:	pop    esi
  412d89:	mov    ecx,0x819b1d8e
  412d8e:	lods   eax,DWORD PTR ds:[esi]
  412d8f:	daa    
  412d90:	cmp    al,BYTE PTR [esi-0x56]
  412d93:	fidivr WORD PTR [edx+0x18]
  412d96:	and    al,0x38
  412d98:	xor    DWORD PTR [ecx-0x2b],ecx
  412d9b:	add    DWORD PTR [eax],ecx
  412d9d:	(bad)  
  412d9e:	imul   cl
  412da0:	int3   
  412da1:	repz test BYTE PTR [eax-0x2],dh
  412da5:	clc    
  412da6:	mov    ecx,0xf4400c4
  412dab:	loope  0x412de2
  412dad:	xor    al,0x4e
  412daf:	pop    ebp
  412db0:	fild   DWORD PTR [eax+esi*4-0x6e57e8a0]
  412db7:	lds    ebx,FWORD PTR [ebx]
  412db9:	sub    bh,BYTE PTR [esi+0x3ab379d6]
  412dbf:	out    0x9e,eax
  412dc1:	sbb    DWORD PTR cs:0xaec0a4dc,eax
  412dc8:	rcr    DWORD PTR ds:0x3a6ae43,cl
  412dce:	inc    esp
  412dcf:	sub    bh,0x2c
  412dd2:	xchg   ecx,eax
  412dd3:	stos   DWORD PTR es:[edi],eax
  412dd4:	jmp    0xdb1c49f1
  412dd9:	scas   al,BYTE PTR es:[edi]
  412dda:	mov    BYTE PTR [edi+edx*2+0x1],0x70
  412ddf:	sbb    ebp,DWORD PTR [ebp+eiz*2-0x4fa39c9b]
  412de6:	mov    al,ds:0xb27674a1
  412deb:	push   ecx
  412dec:	add    BYTE PTR [edi+0x5b],bl
  412def:	retf   0x6de2
  412df2:	in     eax,dx
  412df3:	cvttps2pi mm7,QWORD PTR [esi]
  412df6:	jne    0x412dce
  412df8:	enter  0x6635,0x52
  412dfc:	mov    al,ds:0x9db188db
  412e01:	push   eax
  412e02:	jns    0x412dee
  412e04:	or     ch,0x34
  412e07:	push   esp
  412e08:	dec    esi
  412e09:	cdq    
  412e0a:	hlt    
  412e0b:	xchg   edx,eax
  412e0c:	gs jl  0x412d9c
  412e0f:	push   cs
  412e10:	les    esi,FWORD PTR ds:[edx]
  412e13:	xlat   BYTE PTR ds:[ebx]
  412e14:	fmul   st(3),st
  412e16:	inc    edx
  412e17:	and    DWORD PTR [edi+0x2481cffc],esp
  412e1d:	or     al,0x81
  412e1f:	dec    esp
  412e20:	xor    BYTE PTR [ebp-0x7482c5b1],dh
  412e26:	xor    DWORD PTR [esi+0x59ec8c4a],esi
  412e2c:	inc    esp
  412e2d:	ds fs mov ebp,0x6f499e23
  412e34:	test   BYTE PTR [ebx],0x8
  412e37:	fadd   QWORD PTR [edx+0x57]
  412e3a:	cli    
  412e3b:	jmp    0x6a859436
  412e40:	and    ebx,edx
  412e42:	out    dx,eax
  412e43:	in     al,dx
  412e44:	mov    eax,0xe6615168
  412e49:	mov    ds:0x9c7c0f3,al
  412e4e:	pop    edi
  412e50:	daa    
  412e51:	in     al,0xd6
  412e53:	dec    edx
  412e54:	push   edi
  412e55:	and    DWORD PTR [eax],edi
  412e57:	mov    esi,0x19fa8f48
  412e5c:	lods   al,BYTE PTR ds:[esi]
  412e5d:	fdiv   QWORD PTR [ecx]
  412e5f:	ss mov al,0xf1
  412e62:	sbb    eax,0x1a9aced5
  412e67:	(bad)  
  412e68:	jl     0x412ede
  412e6a:	xchg   esp,eax
  412e6b:	push   ss
  412e6c:	clts   
  412e6e:	in     al,dx
  412e6f:	mov    BYTE PTR [esi+0x731b505f],al
  412e75:	mul    BYTE PTR [ebx+0x5444cd4e]
  412e7b:	inc    eax
  412e7c:	cs push esp
  412e7e:	cmp    eax,DWORD PTR [edi-0x80]
  412e81:	sub    eax,ebx
  412e83:	gs popa 
  412e85:	aad    0xd0
  412e87:	jg     0x412e13
  412e89:	mov    al,0x69
  412e8b:	cmp    ah,BYTE PTR [ebx*4+0x56f4c98d]
  412e92:	mov    BYTE PTR [esi-0x1224ede1],bl
  412e98:	cli    
  412e99:	ret    0x2995
  412e9c:	test   BYTE PTR [ecx+esi*8+0x57],al
  412ea0:	fld    DWORD PTR [ecx+0x6e3fbe88]
  412ea6:	outs   dx,DWORD PTR ds:[esi]
  412ea7:	sbb    al,0x61
  412ea9:	scas   al,BYTE PTR es:[edi]
  412eaa:	inc    esi
  412eab:	idiv   BYTE PTR [edi-0x7b]
  412eae:	cmp    al,0x1a
  412eb0:	out    0xa1,eax
  412eb2:	aas    
  412eb3:	jp     0x412edd
  412eb5:	inc    esp
  412eb6:	iret   
  412eb7:	adc    eax,0xcac7240c
  412ebc:	xchg   edx,eax
  412ebd:	out    dx,eax
  412ebe:	xchg   BYTE PTR [eax],dh
  412ec0:	or     eax,0xf2669fe2
  412ec5:	and    BYTE PTR [eax+0x24],al
  412ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ec9:	fwait
  412eca:	xor    ebx,DWORD PTR [edx+eax*8+0x260f9b33]
  412ed1:	pop    ebx
  412ed2:	sub    BYTE PTR [ecx+0x380e6285],bh
  412ed8:	jne    0x412f02
  412eda:	out    dx,al
  412edb:	(bad)
  412edf:	ret    
  412ee0:	leave  
  412ee1:	cmp    ebx,DWORD PTR [edx+0x57ba6662]
  412ee7:	mov    al,ds:0x2df4092e
  412eec:	(bad)  
  412eed:	stos   DWORD PTR es:[edi],eax
  412eee:	in     al,0x2d
  412ef0:	(bad)  
  412ef1:	clc    
  412ef2:	hlt    
  412ef3:	(bad)  
  412ef4:	sahf   
  412ef5:	cld    
  412ef6:	pop    esi
  412ef8:	pop    es
  412ef9:	jle    0x412ecc
  412efb:	jle    0x412efc
  412efd:	sbb    eax,0x985680f6
  412f02:	push   eax
  412f03:	jle    0x412ee8
  412f05:	gs mov dh,0x1c
  412f08:	bnd call 0x50b33da2
  412f0e:	pop    esi
  412f0f:	ror    DWORD PTR [edx+0x1f],cl
  412f12:	add    BYTE PTR [ebx+0x36],dh
  412f15:	sub    al,0xbc
  412f17:	xor    BYTE PTR [edx-0x201d19f6],bl
  412f1d:	call   0x8781ddbe
  412f22:	aad    0x17
  412f24:	adc    eax,0x68aba1de
  412f29:	pop    ecx
  412f2a:	dec    ebp
  412f2b:	cmp    edi,DWORD PTR [esi]
  412f2d:	mov    DWORD PTR [ebp-0x6e],0x9f7b688c
  412f34:	dec    edx
  412f35:	sbb    DWORD PTR [edx+eiz*2+0x1648d5a9],ecx
  412f3c:	inc    esp
  412f3d:	in     al,dx
  412f3e:	addr16 jp 0x412f03
  412f41:	fwait
  412f42:	push   es
  412f43:	ins    DWORD PTR es:[edi],dx
  412f44:	dec    ecx
  412f45:	scas   eax,DWORD PTR es:[edi]
  412f46:	or     DWORD PTR [ebx+eiz*1+0x17cfa891],0xaeb93e32
  412f51:	adc    BYTE PTR [ebx],bh
  412f53:	or     BYTE PTR [ebx],dh
  412f55:	jg     0x412f11
  412f57:	retf   
  412f58:	ins    BYTE PTR es:[edi],dx
  412f59:	inc    edx
  412f5a:	xchg   BYTE PTR [esi-0x3c],cl
  412f5d:	ins    DWORD PTR es:[edi],dx
  412f5e:	and    al,0x27
  412f60:	dec    edi
  412f61:	clc    
  412f62:	mov    esi,0xe3590df9
  412f67:	cmp    dh,BYTE PTR [edi+ebp*4+0xd4a082c]
  412f6e:	dec    edx
  412f6f:	es enter 0x28ae,0xe5
  412f74:	dec    ebp
  412f75:	and    BYTE PTR [ebp-0x68],al
  412f78:	in     al,0xbf
  412f7a:	imul   eax,DWORD PTR [ebx+0x27],0xb3ae1c29
  412f81:	pusha  
  412f82:	push   ecx
  412f83:	jl     0x412fab
  412f85:	xchg   esp,eax
  412f86:	repnz aad 0x38
  412f89:	push   eax
  412f8a:	jne    0x412f46
  412f8c:	les    edx,FWORD PTR ds:[edi]
  412f8f:	adc    DWORD PTR [ecx+0x7b],eax
  412f92:	mov    BYTE PTR [edx-0xbdbd5b8],0xa8
  412f99:	daa    
  412f9a:	pop    ss
  412f9b:	push   edi
  412f9c:	inc    eax
  412f9d:	bound  esi,QWORD PTR [edi]
  412f9f:	daa    
  412fa0:	(bad)  [ecx-0x1191545b]
  412fa6:	add    al,0x75
  412fa8:	(bad)  
  412fa9:	jnp    0x413029
  412fab:	lahf   
  412fac:	dec    edx
  412fad:	shr    DWORD PTR [edi],cl
  412faf:	xchg   esi,eax
  412fb0:	jae    0x412fd8
  412fb2:	cmp    al,0x2
  412fb4:	mov    ds:0xb4edb826,eax
  412fb9:	sbb    eax,0x4fde9919
  412fbe:	stos   BYTE PTR es:[edi],al
  412fbf:	sbb    eax,0xedb099a2
  412fc4:	sbb    eax,0x67d8e799
  412fc9:	inc    ebp
  412fca:	ins    BYTE PTR es:[edi],dx
  412fcb:	arpl   WORD PTR [ebx+0x2f77eef9],si
  412fd1:	push   esp
  412fd2:	sahf   
  412fd3:	and    ebx,ebx
  412fd5:	add    DWORD PTR [ebp+0x25],ecx
  412fd8:	pop    esi
  412fd9:	jne    0x412f79
  412fdb:	pop    es
  412fdc:	inc    edx
  412fdd:	adc    DWORD PTR [ebx+0x56ab84d3],edx
  412fe3:	cmp    al,0xc1
  412fe5:	retf   
  412fe6:	retf   
  412fe7:	inc    esi
  412fe8:	lods   al,BYTE PTR ds:[esi]
  412fe9:	in     eax,0xdf
  412feb:	call   0x6270:0x798f7abc
  412ff2:	shl    DWORD PTR [edx-0x2a],1
  412ff5:	and    BYTE PTR [edi-0x1fbe5397],0xe1
  412ffc:	dec    ebx
  412ffd:	call   0xe385:0xe32beef0
  413004:	ror    al,0xff
  413007:	or     dh,BYTE PTR [edi+0x38]
  41300a:	push   0x13babf45
  41300f:	aaa    
  413010:	push   edx
  413011:	pop    ecx
  413012:	mov    ss,WORD PTR [esi+0x48]
  413015:	gs iret 
  413017:	or     esp,esi
  413019:	xchg   ebp,eax
  41301a:	adc    DWORD PTR [esi],ebp
  41301c:	dec    esp
  41301d:	in     al,0x90
  41301f:	jg     0x41305b
  413021:	dec    edi
  413022:	out    dx,al
  413023:	js     0x41301a
  413025:	out    dx,eax
  413026:	lds    edx,FWORD PTR [ebx]
  413028:	int3   
  413029:	mov    ah,0xc5
  41302b:	rcl    esp,cl
  41302d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41302e:	aam    0x7d
  413030:	push   esi
  413031:	sub    BYTE PTR [edx-0x16],bh
  413034:	sbb    ch,BYTE PTR ds:0x68493f11
  41303a:	(bad)  
  41303c:	push   ebx
  41303d:	dec    edx
  41303e:	sbb    ecx,eax
  413040:	clc    
  413041:	scas   eax,DWORD PTR es:[edi]
  413042:	enter  0xf202,0x1c
  413046:	xor    bh,BYTE PTR [eax]
  413048:	and    al,0x80
  41304a:	xchg   esp,eax
  41304b:	cli    
  41304c:	das    
  41304d:	inc    esp
  41304e:	retf   0xcde1
  413051:	shl    BYTE PTR [eax],0x52
  413054:	pop    edx
  413055:	push   esp
  413056:	or     eax,DWORD PTR [edx]
  413058:	sub    ecx,DWORD PTR [esp+edi*1-0x44]
  41305c:	pop    eax
  41305d:	addr16 mov ds:0xd698,eax
  413061:	bnd jle 0x4130d7
  413064:	ins    BYTE PTR es:[edi],dx
  413065:	mov    ebp,DWORD PTR [edi-0x73]
  413068:	inc    ebp
  413069:	mov    al,0xbd
  41306b:	jnp    0x413076
  41306d:	mov    dl,0x43
  41306f:	jne    0x4130bb
  413071:	push   ebx
  413072:	or     eax,0xbe0ddb6b
  413077:	idiv   BYTE PTR [esi-0x7f]
  41307a:	xchg   BYTE PTR [eax],dh
  41307c:	mov    WORD PTR [ebp+0x19],cs
  41307f:	inc    edi
  413080:	es mov eax,0xb0513542
  413086:	mov    edx,0xdd3b846c
  41308b:	sbb    BYTE PTR cs:[edi+esi*1+0x52422180],al
  413093:	mov    al,BYTE PTR [eax-0x4d]
  413096:	clc    
  413097:	loope  0x413036
  413099:	xor    eax,0x245efbd1
  41309e:	push   edi
  41309f:	mov    ds:0xcc46b9ba,eax
  4130a4:	or     bl,ch
  4130a6:	aad    0xab
  4130a8:	add    al,0x26
  4130aa:	rcl    DWORD PTR [eax+ecx*1],cl
  4130ad:	rol    BYTE PTR [edi],0x89
  4130b0:	push   eax
  4130b1:	daa    
  4130b2:	call   0xb8f95409
  4130b7:	pop    esi
  4130b8:	sar    DWORD PTR [esi],0x37
  4130bb:	cmp    DWORD PTR [ebx],edi
  4130bd:	dec    ebp
  4130be:	xor    al,0x1a
  4130c0:	mov    WORD PTR [esi-0x684ed5fb],gs
  4130c6:	inc    ecx
  4130c7:	push   esi
  4130c8:	fwait
  4130c9:	sub    DWORD PTR [ebp-0xf],edx
  4130cc:	sbb    eax,esi
  4130ce:	mov    edi,0x34b95f35
  4130d3:	imul   edi,DWORD PTR [ebx],0xc97068d4
  4130d9:	mov    ch,0x41
  4130db:	sub    ah,dl
  4130dd:	mov    bl,0xc4
  4130df:	and    ah,ch
  4130e1:	jmp    0x9a4b:0x9cd6f5db
  4130e8:	jbe    0x4130ab
  4130ea:	aam    0xb8
  4130ec:	imul   BYTE PTR [eax-0x56]
  4130ef:	mov    esi,es
  4130f1:	cmp    esp,DWORD PTR [eax+edx*1]
  4130f4:	push   0x647876f9
  4130f9:	and    ebx,DWORD PTR [ecx-0x4b1524ca]
  4130ff:	dec    esp
  413100:	sbb    dh,ah
  413102:	inc    eax
  413103:	mov    bl,0x52
  413105:	and    BYTE PTR [edi+0x71],bl
  413108:	xor    BYTE PTR [esi],0xe4
  41310b:	jo     0x41309c
  41310d:	mov    bh,0x59
  41310f:	push   esi
  413110:	lock retf 
  413112:	in     eax,0x82
  413114:	push   ss
  413115:	adc    al,0x78
  413117:	cmp    edi,ebx
  413119:	fs nop
  41311b:	jmp    0x6ae880e6
  413120:	ins    BYTE PTR es:[edi],dx
  413121:	sti    
  413122:	cmp    al,0x6b
  413124:	jp     0x4131a2
  413126:	inc    ebx
  413127:	mov    eax,ds:0x5b05c983
  41312c:	pop    eax
  41312d:	stos   BYTE PTR es:[edi],al
  41312e:	int    0xe
  413130:	retf   0xdbd6
  413133:	mov    bl,BYTE PTR [edi-0x12]
  413136:	push   ecx
  413137:	and    esi,edx
  413139:	std    
  41313a:	add    BYTE PTR [edx+ebp*2-0x5e],dl
  41313e:	xchg   ecx,eax
  41313f:	mov    ds:0xefab6fff,al
  413144:	mov    ecx,0x9fbd2b44
  413149:	mov    bl,0x13
  41314b:	cmc    
  41314c:	rcr    BYTE PTR [eax-0x24],cl
  41314f:	and    esi,DWORD PTR [ecx+0x2aa23de1]
  413155:	cwde   
  413156:	fild   DWORD PTR [esi+0x45]
  413159:	cmp    esp,edx
  41315b:	ins    DWORD PTR es:[edi],dx
  41315c:	mov    ecx,0x16b1b10e
  413161:	mov    eax,fs
  413163:	inc    eax
  413164:	mov    al,BYTE PTR [ebp+0x19c8cdc5]
  41316a:	out    0x32,eax
  41316c:	ja     0x413164
  41316e:	xchg   edi,eax
  41316f:	inc    ecx
  413170:	mov    esi,0x85dfc031
  413175:	mov    cl,0x97
  413177:	in     al,dx
  413178:	(bad)  
  413179:	cmc    
  41317a:	push   es
  41317b:	adc    DWORD PTR [ebx-0x637db8bd],esp
  413181:	push   0xffffff8a
  413183:	mov    ecx,0x515f42ac
  413188:	sub    al,0xb5
  41318a:	xlat   BYTE PTR ds:[ebx]
  41318b:	icebp  
  41318c:	sub    ah,BYTE PTR [edi+0x7f9d333]
  413192:	dec    ebx
  413193:	aaa    
  413194:	mov    esp,0x1f2adb80
  413199:	mov    dl,0x9e
  41319b:	xchg   ecx,eax
  41319c:	(bad)  
  41319d:	mov    ah,BYTE PTR [esi-0x23872ab3]
  4131a3:	xor    ah,BYTE PTR [eax+0x2a]
  4131a6:	inc    edx
  4131a7:	push   eax
  4131a8:	imul   ebp,DWORD PTR [ebp+0x62],0x8f8847db
  4131af:	mov    ds:0x42f0f0c9,al
  4131b4:	dec    esi
  4131b5:	jnp    0x4131a9
  4131b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131b8:	xchg   edi,eax
  4131b9:	ds dec edx
  4131bb:	pop    ebx
  4131bc:	jmp    0x959c:0xcc2fd966
  4131c3:	sub    dl,ch
  4131c5:	test   eax,0xaec42453
  4131ca:	lds    esp,FWORD PTR ds:0x3d79f3b7
  4131d0:	jae    0x4131d9
  4131d2:	jl     0x4131aa
  4131d4:	jg     0x4131ee
  4131d6:	das    
  4131d7:	push   edx
  4131d8:	mov    ch,0x52
  4131da:	sbb    eax,0xb60eeca3
  4131df:	aas    
  4131e0:	push   ecx
  4131e1:	sbb    eax,0x2fe84248
  4131e6:	inc    ebp
  4131e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131e8:	icebp  
  4131e9:	or     dl,BYTE PTR [ecx+eiz*2-0x60bdef6f]
  4131f0:	mov    edi,0xb1148c7c
  4131f5:	mov    edx,0x47fd8ad6
  4131fa:	push   esp
  4131fb:	(bad)  
  4131fc:	aas    
  4131fd:	pusha  
  4131fe:	mov    dh,0xe9
  413200:	jge    0x4131c6
  413202:	ja     0x4131bb
  413204:	fisubr WORD PTR [edi]
  413206:	imul   ecx,DWORD PTR [eax-0x53327c66],0x543e6759
  413210:	xor    ch,BYTE PTR [ecx+0x3c8a976c]
  413216:	push   ss
  413217:	add    al,0xa0
  413219:	fisub  DWORD PTR [edx-0x5900a25d]
  41321f:	mov    bh,0x22
  413221:	mov    BYTE PTR [eax-0x20],dl
  413224:	jo     0x4131cc
  413226:	das    
  413227:	and    BYTE PTR [eax-0x65],0x20
  41322b:	push   esp
  41322c:	call   0xf9b4:0xeb38e3f0
  413233:	adc    eax,0x56c24f7e
  413238:	pushf  
  413239:	inc    ebx
  41323a:	fsub   DWORD PTR [ebx]
  41323c:	jmp    0xf8a70363
  413241:	test   al,0xe2
  413243:	pop    ebx
  413244:	aaa    
  413245:	dec    ebp
  413246:	cld    
  413247:	jle    0x4131d5
  413249:	aam    0x46
  41324b:	jae    0x4132b3
  41324d:	xchg   ebx,eax
  41324e:	jle    0x413212
  413250:	enter  0x5364,0xdd
  413254:	fild   QWORD PTR [edi]
  413256:	mov    bh,0x31
  413258:	fbld   TBYTE PTR [edi+0x11]
  41325b:	xchg   esi,eax
  41325c:	daa    
  41325d:	inc    eax
  41325e:	addr16 mov ah,0xe7
  413261:	or     BYTE PTR [ebp+0x45af3c34],dl
  413267:	test   eax,0x871f117c
  41326c:	daa    
  41326d:	or     esi,DWORD PTR [ebp+0x6445ca00]
  413273:	cmp    al,0x27
  413275:	adc    BYTE PTR [esp+ebx*8-0x9],0xa3
  41327a:	lock (bad) 
  41327c:	mov    esp,0x56e00a96
  413281:	pop    eax
  413282:	bound  ecx,QWORD PTR [eax+0xb3074e3]
  413288:	push   esi
  413289:	sub    eax,edi
  41328b:	jmp    0x137:0x1c547506
  413292:	xchg   BYTE PTR [ecx-0x27dff46a],ch
  413298:	loop   0x4132dd
  41329a:	pop    ecx
  41329b:	cdq    
  41329c:	xchg   edi,eax
  41329d:	test   dh,al
  41329f:	ss adc al,0xdd
  4132a2:	rcr    DWORD PTR [ecx+edi*8+0x21],1
  4132a6:	pop    ds
  4132a7:	mov    bl,0x1
  4132a9:	inc    esi
  4132aa:	mov    ebx,0x914d0cf6
  4132af:	mov    bh,0x1f
  4132b1:	into   
  4132b2:	adc    dh,0x8d
  4132b5:	idiv   BYTE PTR [ebp+0x4c20ab8e]
  4132bb:	les    ecx,FWORD PTR [edx]
  4132bd:	sbb    eax,DWORD PTR [edx+0x590ae8a5]
  4132c3:	push   0xffffffc7
  4132c5:	out    0x1f,eax
  4132c7:	pop    eax
  4132c8:	ss addr16 ret 0x2862
  4132cd:	int    0x2d
  4132cf:	iret   
  4132d0:	out    dx,eax
  4132d1:	xchg   esp,eax
  4132d3:	ja     0x4132d1
  4132d5:	add    ebx,DWORD PTR ds:0x44dd2176
  4132db:	(bad)  
  4132dc:	int    0x16
  4132de:	ret    0x5033
  4132e1:	fwait
  4132e2:	sbb    eax,DWORD PTR [esi]
  4132e4:	jb     0x41334c
  4132e6:	outs   dx,BYTE PTR ds:[esi]
  4132e7:	lds    eax,FWORD PTR [ebx+0x38fb08d4]
  4132ed:	pop    ebx
  4132ee:	mov    ebx,0xcc0456e5
  4132f3:	pushf  
  4132f4:	pop    esi
  4132f5:	in     eax,dx
  4132f6:	inc    ecx
  4132f7:	xchg   edi,eax
  4132f8:	mov    eax,ds:0x40a1dc40
  4132fd:	cld    
  4132fe:	add    DWORD PTR [ecx],ebx
  413300:	and    edx,esp
  413302:	inc    ebx
  413303:	or     eax,0x5814d3ff
  413308:	call   0x71e8be4b
  41330d:	cmp    esi,edi
  41330f:	and    al,0x51
  413311:	retf   
  413312:	xchg   ecx,eax
  413313:	mov    ecx,0x6a4a8c10
  413318:	retf   
  413319:	popa   
  41331a:	data16 cld 
  41331c:	and    edx,esi
  41331e:	push   edx
  41331f:	and    dh,cl
  413321:	sbb    eax,0xdc8ffb8c
  413326:	(bad)  
  413327:	mov    ds:0xb8141430,eax
  41332c:	cmpxchg BYTE PTR [edx],dh
  41332f:	jno    0x41337d
  413331:	mov    edi,DWORD PTR fs:[eax-0x39]
  413335:	ret    
  413336:	dec    eax
  413337:	out    dx,eax
  413338:	xor    al,0x5d
  41333a:	inc    edx
  41333b:	dec    esp
  41333c:	mov    WORD PTR [ebx+ebp*4+0x2f6b5f43],?
  413343:	jecxz  0x41331e
  413345:	mov    DWORD PTR [ebp-0x4a],ecx
  413348:	cwde   
  413349:	aam    0x8c
  41334b:	jp     0x4132e9
  41334d:	xchg   DWORD PTR [ecx-0xf],esi
  413350:	ins    DWORD PTR es:[edi],dx
  413351:	adc    ebx,DWORD PTR [edi+ecx*4-0x2f]
  413355:	xchg   ecx,eax
  413356:	sbb    BYTE PTR ds:0xd16a5c95,dl
  41335c:	adc    bh,BYTE PTR [edx+0x2e]
  41335f:	popf   
  413360:	inc    ebp
  413361:	xchg   edx,eax
  413362:	sub    eax,0xfaef646b
  413367:	or     dl,dh
  413369:	aaa    
  41336a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336b:	cld    
  41336c:	out    0xea,eax
  41336e:	das    
  41336f:	mov    dl,0x16
  413371:	adc    eax,DWORD PTR [ebp-0x19]
  413374:	jl     0x41330a
  413376:	je     0x4132fa
  413378:	daa    
  413379:	(bad)  
  41337b:	js     0x4133a1
  41337d:	fcom   DWORD PTR [esi-0x35]
  413380:	outs   dx,DWORD PTR ds:[esi]
  413381:	idiv   ch
  413383:	cli    
  413384:	mov    ebp,0x88958e2
  413389:	aam    0xd4
  41338b:	mov    dl,0x31
  41338d:	mov    edx,DWORD PTR [edx+0x45]
  413390:	dec    edx
  413391:	push   ecx
  413392:	sub    eax,0x271e35d4
  413397:	sub    al,0x70
  413399:	clc    
  41339a:	adc    DWORD PTR [ebx+0x3ce2e73a],ecx
  4133a0:	int3   
  4133a1:	push   esi
  4133a2:	mov    ds:0xe42e5a6b,eax
  4133a7:	lods   al,BYTE PTR ds:[esi]
  4133a8:	sti    
  4133a9:	add    eax,0x8b8ed042
  4133ae:	fidivr DWORD PTR [edx+eax*2+0x35]
  4133b2:	xchg   esp,eax
  4133b3:	(bad)  
  4133b4:	sahf   
  4133b5:	pop    edx
  4133b6:	mov    ch,0xcd
  4133b8:	pop    esi
  4133b9:	mov    bh,BYTE PTR [edi]
  4133bb:	pop    es
  4133bc:	adc    eax,DWORD PTR [ebp+0x744bd2f9]
  4133c2:	cwde   
  4133c3:	add    BYTE PTR [edx-0x587d5086],bh
  4133c9:	xchg   edx,eax
  4133ca:	fwait
  4133cb:	cmp    ebp,ebp
  4133cd:	mov    ds:0xcad16f27,eax
  4133d2:	cmp    ebp,ebx
  4133d4:	iret   
  4133d5:	push   es
  4133d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d7:	sub    eax,0x16ed570b
  4133dc:	mov    esp,0x2a9b4315
  4133e1:	jae    0x4133af
  4133e3:	and    bh,BYTE PTR [esi]
  4133e5:	in     al,dx
  4133e6:	push   esp
  4133e7:	sbb    dl,BYTE PTR [edx+0x24230668]
  4133ed:	push   ebx
  4133ee:	mov    dl,0xd6
  4133f0:	fwait
  4133f1:	jl     0x413442
  4133f3:	mov    ah,0x36
  4133f5:	xchg   edx,eax
  4133f6:	inc    ebx
  4133f7:	sub    bl,BYTE PTR [edi+0x20]
  4133fa:	pop    ecx
  4133fb:	pop    es
  4133fc:	aaa    
  4133fd:	sbb    eax,0xa125f20c
  413402:	push   cs
  413403:	outs   dx,BYTE PTR ds:[esi]
  413404:	push   esp
  413405:	xlat   BYTE PTR ds:[ebx]
  413406:	xchg   DWORD PTR [edx+0x6b],edx
  413409:	cli    
  41340a:	aaa    
  41340b:	push   esp
  41340c:	fistp  WORD PTR [ebp+0x45]
  41340f:	icebp  
  413410:	pop    esi
  413411:	sti    
  413412:	cmp    al,0x77
  413414:	xchg   esi,eax
  413415:	js     0x413431
  413417:	enter  0x3670,0x5d
  41341b:	inc    esp
  41341c:	(bad)  
  41341d:	rcl    cl,1
  41341f:	shr    BYTE PTR [eax+0x71],1
  413422:	leave  
  413423:	sbb    eax,0x4be7aacd
  413428:	ror    ah,1
  41342a:	pop    ebx
  41342b:	adc    esp,DWORD PTR [ebp+0x3dfb83aa]
  413431:	and    eax,0xc3b759cd
  413436:	jg     0x41346c
  413438:	jl     0x41343f
  41343a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41343b:	adc    eax,0xefa6d31b
  413440:	psrad  mm3,mm7
  413443:	and    dl,dh
  413445:	push   ss
  413446:	adc    BYTE PTR [edx-0x35],bh
  413449:	imul   ebx,DWORD PTR cs:[ecx-0x7cfc3f97],0x6330879e
  413454:	mov    bl,0x17
  413456:	cmp    DWORD PTR [ecx+0x7cee285f],ecx
  41345c:	aad    0x16
  41345e:	cmp    al,0xf9
  413460:	test   DWORD PTR [eax-0x22],eax
  413463:	mov    dl,0xf9
  413465:	lods   eax,DWORD PTR ds:[esi]
  413466:	or     eax,DWORD PTR [ecx+0x3e34dbaa]
  41346c:	inc    ebp
  41346d:	and    ch,BYTE PTR [esi]
  41346f:	jp     0x413444
  413471:	and    eax,0xe055156d
  413476:	pushf  
  413477:	jg     0x41349e
  413479:	cmp    eax,DWORD PTR [ecx+0x4ff3b9d5]
  41347f:	jle    0x4134ef
  413481:	call   0xd320210
  413486:	inc    ebx
  413487:	pop    ss
  413488:	cdq    
  413489:	shl    BYTE PTR [ecx+ecx*8+0x52],cl
  41348d:	cmp    al,0xb9
  41348f:	push   eax
  413490:	nop
  413491:	sub    al,0x58
  413493:	mov    al,0xce
  413495:	and    bl,BYTE PTR [ebp+0x58d758d5]
  41349b:	int3   
  41349c:	cmp    al,0x12
  41349e:	push   esp
  41349f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134a0:	add    DWORD PTR [edi],esi
  4134a2:	jg     0x4134c7
  4134a4:	mov    ds:0xbf3c32ac,al
  4134a9:	rcl    DWORD PTR [eax-0x4945e988],0x79
  4134b0:	cmp    BYTE PTR cs:0xde9df0d5,dh
  4134b7:	sub    eax,0xdecbe948
  4134bc:	and    eax,0x5e8c45a2
  4134c1:	inc    ecx
  4134c2:	xchg   dl,ch
  4134c4:	pop    ebx
  4134c5:	sub    cl,BYTE PTR [esi]
  4134c7:	cmp    DWORD PTR [ebp+0x246d952e],ebx
  4134cd:	ins    DWORD PTR es:[edi],dx
  4134ce:	jne    0x413512
  4134d0:	fld    DWORD PTR [edi-0x3b]
  4134d3:	mov    al,0xc0
  4134d5:	(bad)  
  4134d6:	pushf  
  4134d7:	fldenv [esi]
  4134d9:	cld    
  4134da:	jp     0x41352b
  4134dc:	sbb    ebx,ebp
  4134de:	pusha  
  4134df:	int3   
  4134e0:	imul   ecx,esp,0x3e
  4134e3:	inc    eax
  4134e4:	fs test eax,eax
  4134e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e8:	aas    
  4134e9:	push   esi
  4134ea:	or     al,0xd2
  4134ec:	jnp    0x4134c8
  4134ee:	xchg   edi,eax
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	dec    eax
  4134f1:	pop    ds
  4134f2:	sahf   
  4134f3:	jl     0x413532
  4134f5:	out    dx,al
  4134f6:	adc    al,0x3a
  4134f8:	(bad)  
  4134f9:	lea    ebp,[edx+0x746bd56]
  4134ff:	lods   al,BYTE PTR ds:[esi]
  413500:	inc    eax
  413501:	fs jnp 0x4134ab
  413504:	inc    ecx
  413505:	mov    ds:0x87faa718,al
  41350a:	add    eax,DWORD PTR [edi+0xe]
  41350d:	popa   
  41350e:	fist   DWORD PTR [edi+0x49]
  413511:	sar    DWORD PTR [esi-0x26],0x55
  413515:	scas   eax,DWORD PTR es:[edi]
  413516:	pop    esp
  413517:	ins    BYTE PTR es:[edi],dx
  413518:	adc    al,0x81
  41351a:	add    bl,BYTE PTR [edi-0x50357437]
  413520:	or     bh,ch
  413522:	and    eax,0xa15642a3
  413527:	xchg   edx,eax
  413528:	fisubr WORD PTR [ecx+0x5f]
  41352b:	adc    eax,0x8ce3205
  413530:	push   ebp
  413531:	sbb    eax,0x704b2e3b
  413536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413537:	inc    ebp
  413538:	fwait
  413539:	sbb    bh,ah
  41353b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41353c:	cmp    DWORD PTR [ecx],0x2f
  41353f:	mov    cl,0x65
  413541:	inc    ebx
  413542:	je     0x4134d2
  413544:	das    
  413545:	ficom  DWORD PTR [ebx+0x3a]
  413548:	clc    
  413549:	lods   al,BYTE PTR ds:[esi]
  41354a:	pop    edi
  41354b:	add    eax,0x17f6c41d
  413550:	nop
  413551:	sbb    eax,0xb3ec10f2
  413556:	sub    BYTE PTR [edx-0x5d176b05],bl
  41355c:	jnp    0x413563
  41355e:	dec    ebx
  41355f:	mov    edi,edi
  413561:	add    eax,0x1b250771
  413566:	xlat   BYTE PTR ds:[ebx]
  413567:	mov    cl,0xb6
  413569:	aaa    
  41356a:	cmp    DWORD PTR [edi+0x3ab8331a],ecx
  413570:	dec    esi
  413571:	fst    DWORD PTR [edi+0x14]
  413574:	out    dx,eax
  413575:	ds arpl bp,ax
  413578:	or     dl,BYTE PTR [edi-0x4a]
  41357b:	sub    DWORD PTR [edi],0xffffff88
  41357e:	push   0x7c
  413580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413581:	test   al,0xf8
  413583:	adc    bl,dh
  413585:	adc    al,0xdd
  413587:	dec    edx
  413588:	aaa    
  413589:	ins    BYTE PTR es:[edi],dx
  41358a:	push   0xffffffb4
  41358c:	adc    DWORD PTR [eax],0x25e440cd
  413592:	mov    al,0x5c
  413594:	xor    ebp,ebx
  413596:	fimul  DWORD PTR [esi]
  413598:	dec    ecx
  413599:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41359b:	rcl    BYTE PTR [edx+0x3f70ffa6],1
  4135a1:	ins    BYTE PTR es:[edi],dx
  4135a2:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4135a4:	adc    al,0x6d
  4135a6:	mov    ds:0xa1d7edcc,al
  4135ab:	sub    DWORD PTR ds:0x5b4d014e,esi
  4135b1:	hlt    
  4135b2:	leave  
  4135b3:	push   esi
  4135b4:	stos   DWORD PTR es:[edi],eax
  4135b5:	ret    
  4135b6:	mov    ebp,0x5e2b9918
  4135bb:	mov    eax,ds:0xd5130971
  4135c0:	(bad)  
  4135c1:	or     DWORD PTR [ebp+0x5825789f],ecx
  4135c7:	jmp    0x4135cc
  4135c9:	ret    
  4135ca:	mov    dh,0xf1
  4135cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135cd:	mov    eax,ds:0xd6040ed0
  4135d2:	mov    BYTE PTR [eax+0x5],0xd5
  4135d6:	sub    al,0xfa
  4135d8:	arpl   WORD PTR [ebx-0x62],ax
  4135db:	popf   
  4135dc:	loop   0x413630
  4135de:	in     eax,dx
  4135df:	pop    esp
  4135e0:	icebp  
  4135e1:	repnz mov edi,0xccc8e556
  4135e7:	xchg   BYTE PTR [edx],ah
  4135e9:	fst    st(0)
  4135eb:	inc    ecx
  4135ec:	scas   al,BYTE PTR es:[edi]
  4135ed:	in     eax,dx
  4135ee:	xchg   ebx,eax
  4135ef:	rcr    dl,cl
  4135f1:	add    al,0x4d
  4135f3:	test   eax,0xdfe962cf
  4135f8:	xchg   esi,eax
  4135f9:	sbb    al,0x2d
  4135fb:	pop    esp
  4135fc:	cmp    al,0xbf
  4135fe:	clc    
  4135ff:	mov    al,0x28
  413601:	dec    eax
  413602:	hlt    
  413603:	xchg   esi,eax
  413604:	pop    es
  413605:	add    BYTE PTR [eax-0x31e38194],bl
  41360b:	xchg   DWORD PTR [esp+ebx*8-0x6742b9d8],ebx
  413612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413613:	add    ebx,DWORD PTR [edi-0x4d]
  413616:	adc    bh,BYTE PTR [edx+0x1e]
  413619:	and    edx,DWORD PTR [esi]
  41361b:	add    al,0xec
  41361d:	push   0x7da88e79
  413622:	push   esp
  413623:	and    ecx,DWORD PTR [edi-0x18]
  413626:	and    DWORD PTR [eax+0x5e725f40],esp
  41362c:	jge    0x413642
  41362e:	imul   edi,ebp,0x51
  413631:	imul   ebp,DWORD PTR [esi+0x1463f657],0xf766324
  41363b:	xchg   edi,eax
  41363d:	cdq    
  41363e:	and    BYTE PTR [eax-0x9],0xbd
  413642:	dec    ebp
  413643:	inc    ebp
  413644:	push   esp
  413645:	loop   0x41365e
  413647:	(bad)  
  413648:	dec    esi
  413649:	test   DWORD PTR [ecx],ebx
  41364b:	add    DWORD PTR [edi-0x3b04384f],edx
  413651:	stos   BYTE PTR es:[edi],al
  413652:	jmp    0xf706dd45
  413657:	cmp    BYTE PTR [eax-0x26],0x9f
  41365b:	push   ss
  41365c:	mov    eax,ds:0xbe3c61ea
  413661:	or     al,0x3f
  413663:	ds pop esi
  413665:	sbb    DWORD PTR [eax+0x140b0191],esi
  41366b:	dec    ebp
  41366c:	popf   
  41366d:	pop    esp
  41366e:	mov    dh,0xfc
  413670:	das    
  413671:	mov    edi,esp
  413673:	add    BYTE PTR [ecx-0x13b6a96],al
  413679:	push   ecx
  41367a:	in     eax,0x2a
  41367c:	clc    
  41367d:	into   
  41367e:	(bad)  
  41367f:	pop    ebx
  413680:	pop    esp
  413681:	or     dh,bl
  413683:	ror    DWORD PTR [esi+0x6d],0xec
  413687:	pop    ebx
  413688:	pop    es
  413689:	addr16 mov ebp,0xb66763c7
  41368f:	loopne 0x41368b
  413691:	xor    DWORD PTR [ecx-0x7b],0xdd63d61f
  413698:	popf   
  413699:	mov    esi,0xce69be61
  41369e:	imul   esi
  4136a0:	mov    ds:0xd19bbc88,al
  4136a5:	add    bl,BYTE PTR [esi]
  4136a7:	jle    0x4136a9
  4136a9:	stc    
  4136aa:	int3   
  4136ab:	(bad)  
  4136ac:	mov    ebp,0x999e04d2
  4136b1:	in     eax,dx
  4136b2:	dec    edi
  4136b3:	adc    al,0x51
  4136b5:	dec    BYTE PTR [edi+eax*2-0x2ff20ced]
  4136bc:	push   edi
  4136bd:	push   ds
  4136be:	adc    eax,0x4dd986d9
  4136c3:	cmc    
  4136c4:	call   0xd5ca:0xabd473ae
  4136cb:	je     0x41371b
  4136cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136ce:	or     ebp,edi
  4136d0:	outs   dx,BYTE PTR ds:[esi]
  4136d1:	pop    esp
  4136d2:	mov    ds:0x6741dd3f,al
  4136d7:	cmp    al,0xa8
  4136d9:	jle    0x4136df
  4136db:	ret    
  4136dc:	mov    cl,0xb2
  4136de:	sub    al,0x7d
  4136e0:	pop    ebx
  4136e1:	and    ah,BYTE PTR [edx+0x2c]
  4136e4:	retf   
  4136e5:	je     0x4136ae
  4136e7:	pusha  
  4136e8:	in     eax,dx
  4136e9:	sbb    BYTE PTR [edx],bh
  4136eb:	xlat   BYTE PTR ds:[ebx]
  4136ec:	sub    bh,BYTE PTR [ecx+0x7cfbd221]
  4136f2:	fs mov ebx,0x1af6813e
  4136f8:	out    dx,al
  4136f9:	test   eax,0x5c4d49bd
  4136fe:	in     eax,0x44
  413700:	add    ah,ch
  413702:	push   ecx
  413703:	mov    al,BYTE PTR [edi+0x54a6c399]
  413709:	popa   
  41370a:	cmp    ax,WORD PTR [edx-0x6e]
  41370e:	arpl   di,dx
  413710:	mov    edi,0x3830ef33
  413715:	cmp    DWORD PTR [edi+eiz*8+0x143213e2],edx
  41371c:	hlt    
  41371d:	jmp    0x41371b
  41371f:	imul   edi,DWORD PTR [esi-0x4ab28de0],0x821191db
  413729:	jge    0x413757
  41372b:	rcl    BYTE PTR [esi],0xc4
  41372e:	jno    0x4136fb
  413730:	pushf  
  413731:	loopne 0x413738
  413733:	hlt    
  413734:	pop    eax
  413735:	xchg   esi,eax
  413736:	mov    ds:0x61a0799e,eax
  41373b:	retf   0xe3f9
  41373e:	fst    DWORD PTR [edx]
  413740:	aas    
  413741:	xor    al,0xe9
  413743:	mov    es,WORD PTR [edx+eax*2-0x5da0a162]
  41374a:	mov    cl,0x84
  41374c:	sbb    esi,eax
  41374e:	popf   
  41374f:	mov    eax,0xae532edd
  413754:	inc    esp
  413755:	push   esp
  413756:	mov    bh,0x32
  413758:	js     0x41377e
  41375a:	lods   eax,DWORD PTR ds:[esi]
  41375b:	repz ficomp DWORD PTR [edx-0x3e]
  41375f:	int    0x78
  413761:	mov    al,ds:0xb80b7221
  413766:	adc    al,0xf9
  413768:	adc    eax,0xd31813d4
  41376d:	aas    
  41376e:	add    eax,0x1ab23910
  413773:	scas   eax,DWORD PTR es:[edi]
  413774:	nop
  413775:	scas   eax,DWORD PTR es:[edi]
  413776:	rcr    ebx,1
  413778:	xlat   BYTE PTR ds:[ebx]
  41377a:	call   0xcc84f2c4
  41377f:	sub    BYTE PTR [edi+0x3d7dc301],al
  413785:	push   ebx
  413786:	loopne 0x413722
  413788:	sbb    eax,0xa30cde2a
  41378d:	cmp    eax,0x4071a559
  413792:	xor    dl,0xfc
  413795:	and    al,0x18
  413797:	sub    DWORD PTR gs:[edx+0x379303af],esp
  41379e:	cdq    
  41379f:	xchg   esp,eax
  4137a0:	fsub   st,st(2)
  4137a2:	jg     0x41380b
  4137a4:	jg     0x413785
  4137a6:	stos   BYTE PTR es:[edi],al
  4137a7:	mov    edx,0x730416a8
  4137ac:	xlat   BYTE PTR ds:[ebx]
  4137ad:	push   edi
  4137ae:	cmp    DWORD PTR [edi+0x5cdc3e1a],eax
  4137b4:	es in  al,dx
  4137b6:	or     DWORD PTR [edx],ebp
  4137b8:	ins    BYTE PTR es:[edi],dx
  4137b9:	fcomp  st(3)
  4137bb:	mov    ds:0x5ff4ffdd,eax
  4137c0:	aas    
  4137c1:	aas    
  4137c2:	div    DWORD PTR [edi+esi*4-0x53]
  4137c6:	mov    esp,0x906617aa
  4137cb:	data16 das 
  4137cd:	dec    esp
  4137ce:	jmp    0x3169:0x3d06b0b8
  4137d5:	xchg   ebp,eax
  4137d6:	pop    ds
  4137d7:	pop    ds
  4137d8:	xchg   ecx,eax
  4137d9:	push   eax
  4137da:	in     eax,0x76
  4137dc:	pop    edi
  4137dd:	ja     0x413815
  4137df:	mov    ch,0x45
  4137e1:	or     ch,BYTE PTR [edx+0x4103b3d1]
  4137e7:	or     edi,0x1e
  4137ea:	(bad)  
  4137eb:	adc    eax,0x739e3ec5
  4137f0:	clc    
  4137f1:	xor    al,0x5b
  4137f3:	jp     0x4137a7
  4137f5:	xor    esp,0xfffffff5
  4137f8:	xchg   BYTE PTR [eax+ecx*8-0x65],ah
  4137fc:	pop    ebx
  4137fd:	and    al,0xc6
  4137ff:	shl    ebp,cl
  413801:	cmp    eax,0x6892a032
  413806:	lods   eax,DWORD PTR ds:[esi]
  413807:	push   cs
  413808:	add    DWORD PTR [edi+0x952dd7e],eax
  41380e:	mov    es,WORD PTR [edi]
  413810:	cld    
  413811:	mov    bl,0xe1
  413813:	pop    ds
  413814:	in     eax,dx
  413815:	in     al,dx
  413816:	mov    ds:0xaefb0a58,al
  41381b:	adc    BYTE PTR [eax],al
  41381d:	sbb    BYTE PTR [edi+0x454073d0],dh
  413823:	or     dh,cl
  413825:	loopne 0x41384d
  413827:	push   eax
  413828:	mov    bh,0x9c
  41382a:	cmp    al,0xf4
  41382c:	in     al,dx
  41382d:	dec    esi
  41382e:	jg     0x41382d
  413830:	xor    esi,ebx
  413832:	and    ah,BYTE PTR [edx+0x127cc2ec]
  413838:	pop    edi
  413839:	ins    DWORD PTR es:[edi],dx
  41383a:	pop    ss
  41383b:	test   BYTE PTR [ebx],bl
  41383d:	sub    BYTE PTR [edi],bl
  41383f:	cs stos BYTE PTR es:[edi],al
  413841:	cmp    cl,0xfb
  413844:	pop    ebp
  413845:	pop    edx
  413846:	adc    ch,bl
  413848:	or     bh,0x3e
  41384b:	mov    esi,0x24d1e7fa
  413850:	or     al,0x2d
  413852:	ret    0xc6b
  413855:	push   ebx
  413856:	mov    ds,WORD PTR [eax+0x6f]
  413859:	or     eax,0x8676b889
  41385e:	jmp    0x41385c
  413860:	ins    BYTE PTR es:[edi],dx
  413861:	test   eax,0x7cebfbac
  413866:	mov    esi,0xabc77c26
  41386b:	fisttp DWORD PTR [eax+0x63]
  41386e:	ins    BYTE PTR es:[edi],dx
  41386f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413870:	bound  eax,QWORD PTR [esi]
  413872:	cmp    edx,esi
  413874:	nop
  413875:	iret   
  413876:	sbb    al,0xbf
  413878:	cmc    
  413879:	pop    eax
  41387a:	int3   
  41387b:	sbb    al,0x3f
  41387d:	stc    
  41387e:	dec    eax
  41387f:	adc    DWORD PTR [edx],esp
  413881:	pop    ds
  413882:	and    dh,BYTE PTR [eax]
  413884:	sub    DWORD PTR [ebx-0x39],edx
  413887:	arpl   WORD PTR [edi],sp
  413889:	dec    eax
  41388a:	pop    esp
  41388b:	xchg   BYTE PTR [edi+0x26],al
  41388e:	or     edx,DWORD PTR [ebx+0x12]
  413891:	mov    ch,0x5d
  413893:	add    dh,BYTE PTR [edx+0x50f3ecb3]
  413899:	pop    ds
  41389a:	sahf   
  41389b:	cmp    DWORD PTR [eax+ebp*4+0x2a],eax
  41389f:	sbb    BYTE PTR [eax-0x7cb1c1ac],dh
  4138a5:	out    dx,al
  4138a6:	fs jmp 0xc559c7f5
  4138ac:	add    ebx,esp
  4138ae:	xchg   ebx,eax
  4138af:	cs pop ebx
  4138b1:	and    eax,0x30793660
  4138b6:	test   DWORD PTR [esi+0x3c],edi
  4138b9:	imul   eax,DWORD PTR [eax+ecx*4-0x3a],0x58
  4138be:	pop    ebx
  4138bf:	into   
  4138c0:	pop    ss
  4138c1:	les    esp,FWORD PTR [edi-0x5d]
  4138c4:	hlt    
  4138c5:	sub    bh,ch
  4138c7:	mov    bh,0xba
  4138c9:	jle    0x413916
  4138cb:	xchg   esp,eax
  4138cc:	mov    ecx,0xda3a2a46
  4138d1:	fwait
  4138d2:	add    BYTE PTR [esi+eiz*8-0x59],0x3d
  4138d7:	jnp    0x413899
  4138d9:	xor    DWORD PTR [edi-0x4616b825],ecx
  4138df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e0:	add    DWORD PTR [esi],eax
  4138e2:	pusha  
  4138e3:	sub    BYTE PTR [edx],al
  4138e5:	mov    al,0x40
  4138e7:	iret   
  4138e8:	cld    
  4138e9:	loope  0x413903
  4138eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ec:	jo     0x4138f5
  4138ee:	dec    edi
  4138ef:	outs   dx,DWORD PTR ds:[esi]
  4138f0:	loopne 0x41389f
  4138f2:	enter  0xa3ad,0xaf
  4138f6:	dec    ebx
  4138f7:	aam    0x4
  4138f9:	ficom  WORD PTR [edi-0x2c]
  4138fc:	adc    eax,0xc87eac2b
  413901:	es mov eax,0xebe340fc
  413907:	arpl   WORD PTR [ebx+0x492e0aa],sp
  41390d:	add    eax,0x166512ab
  413912:	fisubr DWORD PTR [ebp-0x6d]
  413915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413916:	pop    ebx
  413917:	stc    
  413918:	sbb    DWORD PTR [ebx-0x61],eax
  41391b:	out    dx,al
  41391c:	cmp    bl,BYTE PTR [eax+0x31]
  41391f:	fwait
  413920:	pop    ebp
  413921:	test   BYTE PTR [ebp+edx*1-0x63],dh
  413925:	fisub  DWORD PTR [edx+ecx*2-0x77d8714f]
  41392c:	or     dh,BYTE PTR [esi+0x2dcbc4cd]
  413932:	jle    0x413922
  413934:	push   ecx
  413935:	push   esi
  413936:	jns    0x413923
  413938:	sbb    ah,BYTE PTR [ebx-0x14]
  41393b:	cli    
  41393c:	push   es
  41393d:	hlt    
  41393e:	xor    esi,esi
  413940:	je     0x413965
  413942:	pavgw  mm7,QWORD PTR [ebx+0xb4e360a]
  413949:	enter  0xa0fd,0xf9
  41394d:	mov    ds:0xa891af35,eax
  413952:	repz out 0xee,eax
  413955:	loope  0x4139c5
  413957:	stc    
  413958:	jge    0x4139b2
  41395a:	cmp    DWORD PTR [ebp-0x45fca003],ebx
  413960:	int    0xca
  413962:	adc    edi,DWORD PTR [eax+0x7f]
  413965:	ja     0x413943
  413967:	dec    eax
  413968:	sub    ch,BYTE PTR [ecx+ebx*4-0x49aee26]
  41396f:	in     al,0x63
  413971:	push   esp
  413972:	(bad)  
  413973:	xadd   DWORD PTR [esi+0x12b4add3],edi
  41397a:	xchg   esi,eax
  41397b:	push   ss
  41397c:	xchg   DWORD PTR [ebp+0x6e3f1e9],ecx
  413982:	das    
  413983:	(bad)  
  413984:	repz fldenv [edi+0x65]
  413988:	das    
  413989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41398a:	lds    eax,FWORD PTR [ebp+0x5a732f98]
  413990:	cld    
  413991:	imul   edx,edx,0x10101306
  413997:	iret   
  413998:	add    cl,ch
  41399a:	cmp    ebx,DWORD PTR [edi]
  41399c:	mov    al,0xf
  41399e:	shl    BYTE PTR [edi+0x52],cl
  4139a1:	dec    edi
  4139a2:	ror    BYTE PTR [ecx],1
  4139a4:	xor    al,0x2
  4139a6:	jl     0x41396a
  4139a8:	sbb    esi,ecx
  4139aa:	sub    ebp,edx
  4139ac:	rol    DWORD PTR [ecx-0x2e],1
  4139af:	adc    edx,DWORD PTR [ebx+eiz*2-0x58]
  4139b3:	shl    bh,0xa1
  4139b6:	adc    edi,DWORD PTR [ecx-0x4b04b30d]
  4139bc:	mov    ds:0x20678dd6,al
  4139c1:	mov    bl,0xd4
  4139c3:	cs aaa 
  4139c5:	jmp    0x4139be
  4139c7:	scas   al,BYTE PTR es:[edi]
  4139c8:	inc    esi
  4139c9:	pop    ebx
  4139ca:	mov    WORD PTR [edx+ebp*8],?
  4139cd:	dec    esp
  4139ce:	jecxz  0x413a0a
  4139d0:	fbld   TBYTE PTR [eax+esi*2-0x67]
  4139d4:	push   ebp
  4139d5:	sbb    eax,0x8be1ac55
  4139da:	fcomp  QWORD PTR [edx-0x16]
  4139dd:	or     BYTE PTR [ebx+esi*4+0x57],al
  4139e1:	and    al,BYTE PTR ds:0x4e11dfab
  4139e7:	lock not BYTE PTR [edx]
  4139ea:	jmp    0x413a38
  4139ec:	and    eax,0x6710b115
  4139f1:	lock into 
  4139f3:	mov    esi,0x7c922014
  4139f8:	dec    ecx
  4139f9:	or     BYTE PTR [ebx-0x7a37464b],bl
  4139ff:	mov    ?,WORD PTR [ebp+edi*2-0x65]
  413a03:	not    DWORD PTR [edx-0x71642e86]
  413a09:	dec    esi
  413a0a:	bound  esi,QWORD PTR [ebx+edi*4]
  413a0d:	push   edx
  413a0e:	or     bh,BYTE PTR [ebx]
  413a10:	out    dx,eax
  413a11:	pop    ss
  413a12:	icebp  
  413a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a14:	mov    eax,ds:0xc1db3aa9
  413a19:	int    0xae
  413a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a1c:	inc    edi
  413a1d:	dec    ebp
  413a1e:	mov    edx,0x116e24fa
  413a23:	loop   0x4139e7
  413a25:	push   eax
  413a26:	mov    al,ds:0x8c659379
  413a2b:	mov    ch,0x22
  413a2d:	adc    BYTE PTR [edi-0x28a01339],cl
  413a33:	cmp    BYTE PTR [ebx],cl
  413a35:	push   ss
  413a36:	adc    eax,0x7fd7508e
  413a3b:	leave  
  413a3c:	fidiv  WORD PTR ds:0x9fb3f8c8
  413a42:	inc    ebp
  413a43:	frstor [ebx-0x53]
  413a46:	inc    esp
  413a47:	bsf    edi,DWORD PTR [ecx]
  413a4a:	imul   ecx,DWORD PTR [ebp-0x49],0xdaa455d
  413a51:	xchg   ecx,eax
  413a52:	popa   
  413a53:	or     al,0x26
  413a55:	push   eax
  413a56:	retf   
  413a57:	push   eax
  413a58:	mov    ah,0xa9
  413a5a:	fs pop eax
  413a5c:	mov    BYTE PTR [edx+eax*4+0x69],ah
  413a60:	jecxz  0x413a95
  413a62:	imul   ecx,edi,0xffffff86
  413a65:	enter  0x730,0x79
  413a69:	retf   
  413a6a:	ss push ds
  413a6c:	imul   ebx,DWORD PTR [esi+0x29],0xf6e18925
  413a73:	add    DWORD PTR [eax+0x2c85dbdd],ebp
  413a79:	jne    0x413a12
  413a7b:	stos   DWORD PTR es:[edi],eax
  413a7c:	or     edi,eax
  413a7e:	push   esi
  413a7f:	dec    eax
  413a80:	sbb    BYTE PTR [ecx+0x33],dl
  413a83:	sbb    DWORD PTR [edx-0x33],0x1a
  413a87:	jno    0x413ae9
  413a89:	ret    
  413a8a:	cwde   
  413a8b:	adc    DWORD PTR [edi],0x6bda504c
  413a91:	mov    esi,0x4b568dd2
  413a96:	retf   0xf973
  413a99:	sbb    ebp,edx
  413a9b:	sub    BYTE PTR [esi-0x345dfaed],dh
  413aa1:	not    ebx
  413aa3:	xchg   ebx,eax
  413aa4:	sbb    al,0x15
  413aa6:	test   ch,bl
  413aa8:	cmp    DWORD PTR [eax],ebp
  413aaa:	xor    al,0x44
  413aac:	mov    ds:0xdf2b5ee8,eax
  413ab1:	mov    BYTE PTR [eax],0xd7
  413ab4:	nop
  413ab5:	mov    esi,0xe28a7c75
  413aba:	clc    
  413abb:	and    BYTE PTR [edx-0x3],0x65
  413abf:	xchg   BYTE PTR [eax-0x305adcec],bh
  413ac5:	xchg   esp,eax
  413ac6:	mov    cl,bh
  413ac8:	in     eax,0xa8
  413aca:	fst    st(2)
  413acc:	(bad)  
  413acd:	stos   BYTE PTR es:[edi],al
  413ace:	mov    ch,0xd
  413ad0:	xchg   DWORD PTR [edx+0x1],esi
  413ad3:	xchg   DWORD PTR [ebp-0x7a284550],eax
  413ad9:	inc    ebp
  413ada:	push   0xfc740454
  413adf:	ror    BYTE PTR [edx+0x1f],cl
  413ae2:	hlt    
  413ae3:	push   0x50
  413ae5:	inc    esi
  413ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae7:	outs   dx,DWORD PTR ds:[esi]
  413ae8:	aad    0xd8
  413aea:	fsub   QWORD PTR [ebx+0x5e513f64]
  413af0:	inc    ecx
  413af1:	add    al,0xed
  413af3:	mov    BYTE PTR fs:[ebx],0x7c
  413af7:	clc    
  413af8:	sbb    eax,0x9ba4a3d8
  413afd:	push   0x480e148c
  413b02:	out    0xb2,eax
  413b04:	jp     0x413acb
  413b06:	data16 hlt 
  413b08:	push   esi
  413b09:	jecxz  0x413b1d
  413b0b:	out    0x82,al
  413b0d:	std    
  413b0e:	(bad)  [esi-0x5c20f052]
  413b14:	cmp    ch,dl
  413b16:	mov    ?,WORD PTR [ebp-0x4c49e330]
  413b1c:	imul   ebx,DWORD PTR [esi-0x49313428],0xffffffd7
  413b23:	sbb    DWORD PTR [eax+0x7e4f3941],edx
  413b29:	stc    
  413b2a:	mov    bh,0x4e
  413b2c:	int    0x9c
  413b2e:	mov    ah,0x60
  413b30:	lods   eax,DWORD PTR ds:[esi]
  413b31:	push   ebp
  413b32:	push   0x9667e643
  413b37:	dec    edx
  413b38:	loop   0x413b37
  413b3a:	inc    ebx
  413b3b:	push   ebp
  413b3c:	mov    ss,WORD PTR [ecx+eax*1+0x4f]
  413b40:	pop    ebp
  413b41:	(bad)  
  413b43:	daa    
  413b44:	push   0x78
  413b46:	dec    ebp
  413b47:	jmp    0xa083995
  413b4c:	xor    BYTE PTR [edi],bh
  413b4e:	sar    DWORD PTR [ebp-0xd],cl
  413b51:	imul   edx,DWORD PTR [ebx],0x23bd07cb
  413b57:	dec    edx
  413b58:	dec    ecx
  413b59:	dec    esi
  413b5a:	mov    ah,0x5
  413b5c:	xchg   edi,eax
  413b5d:	adc    ah,al
  413b5f:	pop    edi
  413b60:	or     eax,0x2bc79d0a
  413b65:	xor    eax,0x319ce3d7
  413b6a:	push   sp
  413b6c:	push   ebp
  413b6d:	mov    ds:0x77ade675,al
  413b72:	push   ebp
  413b73:	add    al,0xa8
  413b75:	pushf  
  413b76:	fsubr  QWORD PTR [eax+0x69d2160f]
  413b7c:	retf   0x4a2a
  413b7f:	xor    BYTE PTR [edi-0x7e],0x3e
  413b83:	inc    esp
  413b84:	cwde   
  413b85:	fucom  st(5)
  413b87:	test   eax,0xbbe8aa0
  413b8c:	lds    ecx,FWORD PTR [edx-0xa2e4561]
  413b92:	inc    BYTE PTR [ebp-0x369c4e9b]
  413b98:	xor    al,0xbf
  413b9a:	repz sub bl,BYTE PTR [ebx]
  413b9d:	jge    0x413ba7
  413b9f:	pop    eax
  413ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ba1:	jno    0x413bfd
  413ba3:	repnz inc edi
  413ba5:	cld    
  413ba6:	iret   
  413ba7:	jmp    0x413bcc
  413ba9:	mov    al,ds:0x826ec4cb
  413bae:	jbe    0x413bed
  413bb0:	out    dx,al
  413bb1:	cmp    eax,ecx
  413bb3:	jns    0x413b7c
  413bb5:	jg     0x413bad
  413bb7:	mov    esi,0xf7d7cc33
  413bbc:	call   0xcf05:0xe72c0ac3
  413bc3:	or     dh,BYTE PTR [ebx+edx*2+0x62]
  413bc7:	std    
  413bc8:	sbb    dl,cl
  413bca:	mov    al,0x67
  413bcc:	jp     0x413b53
  413bce:	adc    dh,0x74
  413bd1:	scas   eax,DWORD PTR es:[edi]
  413bd2:	push   es
  413bd3:	or     cl,BYTE PTR [edi+0x6698188e]
  413bd9:	sbb    eax,0x247307db
  413bde:	xor    ebx,DWORD PTR ds:0x8b5f72f5
  413be4:	dec    ebp
  413be5:	clc    
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	mov    dx,0x166d
  413d48:	push   ds
  413d49:	and    eax,ebp
  413d4b:	inc    ebx
  413d4c:	mov    cl,0x9b
  413d4e:	inc    edi
  413d4f:	xchg   ebp,eax
  413d50:	cmp    al,ch
  413d52:	and    eax,DWORD PTR [ecx+0x1]
  413d55:	add    BYTE PTR [eax],al
  413d57:	add    BYTE PTR [ebp+0x3a],al
  413d5a:	pop    esp
  413d5b:	dec    ecx
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
