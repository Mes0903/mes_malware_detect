
2c0f1812add5ea4c3d0a5112fdefd3af2cdc00eecf45d7c00a51e4b6ab639ca6.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	retf   
  41107b:	into   
  41107c:	jnp    0x411063
  41107e:	or     eax,0xcd0d11
  411083:	lods   al,BYTE PTR ds:[esi]
  411084:	pop    es
  411085:	(bad)  
  411086:	mov    ebx,0x7190ac53
  41108b:	loop   0x4110a4
  41108d:	sub    ebp,edi
  41108f:	ret    
  411090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411091:	pusha  
  411092:	sar    BYTE PTR [eax+0x61],cl
  411095:	loop   0x4110e1
  411097:	jne    0x41104c
  411099:	inc    eax
  41109a:	ret    
  41109b:	sbb    al,0x56
  41109d:	and    DWORD PTR [ebp+eiz*8-0x52],esi
  4110a1:	sub    eax,0x61ff0667
  4110a6:	xchg   edx,eax
  4110a7:	jne    0x4110bf
  4110a9:	xor    esi,DWORD PTR [eax]
  4110ab:	sti    
  4110ac:	pusha  
  4110ad:	or     BYTE PTR [esi+0x51],ch
  4110b0:	ror    bh,cl
  4110b2:	dec    ebx
  4110b3:	lods   al,BYTE PTR ds:[esi]
  4110b4:	mov    cl,0x82
  4110b6:	popf   
  4110b7:	cmp    BYTE PTR [ecx],dl
  4110b9:	sbb    DWORD PTR [eax-0x2a975d9e],ebx
  4110bf:	jecxz  0x41107d
  4110c1:	xor    DWORD PTR [ecx],ebx
  4110c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c4:	fs in  eax,dx
  4110c6:	sub    BYTE PTR [edi+ebx*2+0x237807dc],cl
  4110cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ce:	sbb    BYTE PTR [edx],cl
  4110d0:	loope  0x411109
  4110d2:	pop    ecx
  4110d3:	and    eax,0x2a2becda
  4110d8:	test   DWORD PTR [edi+0x1ae282f7],esp
  4110de:	stos   BYTE PTR es:[edi],al
  4110df:	lahf   
  4110e0:	jmp    0x5407:0x9f13aa47
  4110e7:	outs   dx,DWORD PTR ds:[esi]
  4110e8:	jg     0x411156
  4110ea:	(bad)  
  4110eb:	into   
  4110ec:	mov    gs,WORD PTR [esi]
  4110ee:	pop    esp
  4110ef:	or     DWORD PTR [edx+0x28],ecx
  4110f2:	mov    esp,0x968333d4
  4110f7:	dec    ecx
  4110f8:	or     BYTE PTR [ebx+eiz*1+0x18],bh
  4110fc:	fs xor bh,ah
  4110ff:	mov    al,0x6f
  411101:	in     eax,dx
  411102:	xchg   edi,eax
  411103:	out    dx,al
  411104:	enter  0x155f,0x11
  411108:	and    ebx,DWORD PTR [esi-0x3d]
  41110b:	cmp    BYTE PTR [ecx+edx*4+0x682ac9f5],dl
  411112:	mov    al,0x83
  411114:	into   
  411115:	adc    al,0x80
  411117:	cmp    ebp,DWORD PTR [edi]
  411119:	scas   al,BYTE PTR es:[edi]
  41111a:	pop    esp
  41111b:	push   cs
  41111c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41111d:	stos   DWORD PTR es:[edi],eax
  41111e:	inc    ebx
  41111f:	adc    BYTE PTR es:[edx+0x2001f96a],al
  411126:	in     al,0x9d
  411128:	cwde   
  411129:	sbb    eax,0x78963e7
  41112e:	mov    ecx,DWORD PTR [ebp+0x1f]
  411131:	lods   eax,DWORD PTR ds:[esi]
  411132:	fwait
  411133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411134:	add    DWORD PTR [eax-0x3c],0xffffff98
  411138:	cmp    BYTE PTR [esi],ch
  41113a:	and    eax,0x5fe04e28
  41113f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411140:	jnp    0x41117f
  411142:	adc    BYTE PTR [ebx-0x52],0x20
  411146:	lahf   
  411147:	repz add dh,BYTE PTR [ebx+0x76a742c2]
  41114e:	call   0x9b8:0x75ec1ccf
  411155:	pop    esi
  411156:	jmp    FWORD PTR [edi-0x53df1cba]
  41115c:	jge    0x4111b4
  41115e:	cwde   
  41115f:	cli    
  411160:	(bad)  
  411161:	std    
  411162:	dec    ecx
  411163:	jg     0x411198
  411165:	out    dx,eax
  411166:	dec    esp
  411167:	add    al,0xe8
  411169:	mov    edx,0x954a88de
  41116e:	inc    edx
  41116f:	cmp    DWORD PTR [ebx+0x6c],esp
  411172:	push   ebx
  411173:	int    0x91
  411175:	jl     0x41114b
  411177:	add    DWORD PTR [eax],edi
  411179:	jmp    0x4111e0
  41117b:	retf   
  41117c:	mov    eax,0x4ab2e4a8
  411181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411182:	pop    ss
  411183:	mov    esi,esp
  411185:	xor    BYTE PTR [ebx+edx*1],cl
  411188:	(bad)  
  411189:	loopne 0x411208
  41118b:	sbb    DWORD PTR [esi+0x7d],edi
  41118e:	addr16 push edi
  411190:	arpl   WORD PTR [edi+eiz*4],bp
  411193:	jns    0x4111cf
  411195:	push   esi
  411196:	jmp    0x4111a4
  411198:	imul   ebx,ebx,0xffffffae
  41119b:	sbb    al,0x33
  41119d:	test   al,0x11
  41119f:	mov    DWORD PTR ds:0x14299f99,0x966b3457
  4111a9:	xor    eax,0xaca22af1
  4111ae:	adc    eax,0xf4387c48
  4111b3:	pop    ebx
  4111b4:	jbe    0x4111ec
  4111b6:	daa    
  4111b7:	dec    edx
  4111b8:	jge    0x411227
  4111ba:	cmp    bh,BYTE PTR [edx-0x4d92efdd]
  4111c0:	dec    eax
  4111c1:	push   0xa986a446
  4111c6:	ret    0x6b2f
  4111c9:	and    dh,bh
  4111cb:	jae    0x4111eb
  4111cd:	push   esp
  4111ce:	push   edi
  4111cf:	xchg   DWORD PTR [eax],edx
  4111d1:	ja     0x411177
  4111d3:	lods   al,BYTE PTR ds:[esi]
  4111d4:	fild   QWORD PTR [edi]
  4111d6:	lods   eax,DWORD PTR ds:[esi]
  4111d7:	xor    al,0xe1
  4111d9:	imul   eax,DWORD PTR [ebp+0x64b6c517],0x5de04c08
  4111e3:	mul    dh
  4111e5:	sbb    BYTE PTR [edx-0x214aa1be],bh
  4111eb:	or     BYTE PTR [edx-0x74],ch
  4111ee:	add    eax,0x43718811
  4111f3:	pop    es
  4111f4:	fadd   st,st(7)
  4111f6:	out    0xae,eax
  4111f8:	jg     0x41125c
  4111fa:	bound  eax,QWORD PTR [ebx-0x44]
  4111fd:	mov    al,ds:0x5e3c1549
  411202:	add    ebx,esp
  411204:	and    DWORD PTR [esp+edi*2],ebp
  411207:	sub    al,0x2c
  411209:	push   0x60
  41120b:	mov    eax,ds:0x256de46c
  411210:	sub    BYTE PTR [esi],al
  411212:	jecxz  0x41123c
  411214:	mov    eax,DWORD PTR [ebp-0x51]
  411217:	stos   DWORD PTR es:[edi],eax
  411218:	jae    0x411253
  41121a:	inc    edx
  41121b:	jge    0x41128a
  41121d:	std    
  41121e:	inc    esp
  41121f:	push   edx
  411220:	and    DWORD PTR [ecx+edx*8-0x3e],ebx
  411224:	ret    0x461f
  411227:	test   DWORD PTR [edx+0xa],edi
  41122a:	push   ebp
  41122b:	loopne 0x411284
  41122d:	imul   BYTE PTR [ecx+0xc]
  411230:	dec    ebx
  411231:	mov    BYTE PTR [ecx+0x62],0xd1
  411235:	xor    edi,edx
  411237:	(bad)  
  411238:	retf   
  411239:	add    eax,0x77acaaf3
  41123e:	loope  0x41121c
  411240:	mov    dh,0x3c
  411242:	ret    0x357
  411245:	fwait
  411246:	jns    0x41126b
  411248:	inc    edx
  411249:	shr    BYTE PTR [esi-0x676d8b08],0x92
  411250:	in     eax,dx
  411251:	psrlw  xmm2,XMMWORD PTR [ecx+0x54]
  411256:	xchg   edi,eax
  411257:	mov    bh,0xb
  411259:	sub    BYTE PTR [edi],bh
  41125b:	stos   DWORD PTR es:[edi],eax
  41125c:	jo     0x411234
  41125e:	adc    bl,bl
  411260:	xor    BYTE PTR [ebp-0x1fc64248],0x85
  411267:	fdivr  QWORD PTR [eax+eiz*1-0x466f343a]
  41126e:	jne    0x4112b0
  411270:	out    0xab,al
  411272:	test   bh,dh
  411274:	xchg   esi,eax
  411275:	pop    ecx
  411276:	fist   WORD PTR [ebp+0x7b783779]
  41127c:	xor    eax,0xfe7293b1
  411281:	fst    QWORD PTR [edx+eiz*8]
  411284:	pop    edi
  411285:	inc    ecx
  411286:	ins    BYTE PTR es:[edi],dx
  411287:	jl     0x4112bd
  411289:	lds    ebp,FWORD PTR [edx+esi*8-0x26b50abf]
  411290:	or     al,0x6c
  411292:	push   edx
  411293:	inc    esi
  411294:	sub    eax,0x46282882
  411299:	dec    ebp
  41129a:	mov    ecx,0x6f2d7bfc
  41129f:	stos   BYTE PTR es:[edi],al
  4112a0:	sub    edx,edx
  4112a2:	cmp    al,0x63
  4112a4:	nop
  4112a5:	cs in  al,dx
  4112a7:	ficom  WORD PTR [edi+0x75]
  4112aa:	fs sbb bl,cl
  4112ad:	mov    ds:0x8fbec84,al
  4112b2:	pusha  
  4112b3:	scas   eax,DWORD PTR es:[edi]
  4112b4:	icebp  
  4112b5:	sbb    DWORD PTR [eax-0x76],0x4f8141ec
  4112bc:	mov    WORD PTR [eax+0x1ea3f8ed],?
  4112c2:	xchg   BYTE PTR [edx],dl
  4112c4:	pushf  
  4112c5:	(bad)  
  4112c6:	mov    ch,0x81
  4112c8:	push   0x906d1713
  4112cd:	push   ebx
  4112ce:	add    eax,0x75bda20b
  4112d3:	loopne 0x411295
  4112d5:	inc    edi
  4112d6:	out    dx,al
  4112d7:	cmp    esi,DWORD PTR [edi+0x4a843615]
  4112dd:	fadd   DWORD PTR [ecx+0xb]
  4112e0:	inc    ebx
  4112e1:	dec    ecx
  4112e2:	xor    ch,BYTE PTR [ebp+edi*8+0x4ceb0cfc]
  4112e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ea:	add    cl,bl
  4112ec:	frndint 
  4112ee:	test   DWORD PTR ds:0xc6b74728,eax
  4112f4:	(bad)  
  4112f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f6:	add    al,0xda
  4112f8:	cmp    esp,DWORD PTR [ebp-0x25]
  4112fb:	lods   al,BYTE PTR ds:[esi]
  4112fc:	lahf   
  4112fd:	adc    BYTE PTR [ebx],cl
  4112ff:	aas    
  411300:	inc    ebx
  411301:	add    al,0x1a
  411303:	out    0xb6,al
  411305:	push   edx
  411306:	xor    BYTE PTR [ecx+0xb9cff2e],ah
  41130c:	and    bl,BYTE PTR [ebx+0x21c7ab0]
  411312:	mov    gs,esi
  411314:	mov    edi,ss
  411316:	ins    DWORD PTR es:[edi],dx
  411317:	mov    DWORD PTR [ecx-0x75b7cbb1],edx
  41131d:	jecxz  0x411304
  41131f:	call   0x17dcf713
  411324:	int3   
  411325:	add    cl,BYTE PTR ds:0x96b08835
  41132b:	adc    BYTE PTR [edi+0x7f],0xb
  41132f:	imul   ecx,DWORD PTR [edx-0x45],0xc5303ad9
  411336:	mov    cl,ah
  411338:	out    dx,al
  411339:	dec    ebx
  41133a:	add    eax,0x756e4372
  41133f:	or     BYTE PTR [ecx],dl
  411341:	cmp    al,0xe7
  411343:	sub    eax,0x60e47160
  411348:	jmp    0x41135b
  41134a:	mov    ebp,0xe8ce53b7
  41134f:	or     al,0x91
  411351:	in     al,0xd
  411353:	hlt    
  411354:	or     esp,DWORD PTR [ebx-0x26]
  411357:	stos   BYTE PTR es:[edi],al
  411358:	fadd   DWORD PTR [edi-0x54d10fc6]
  41135e:	stos   BYTE PTR es:[edi],al
  41135f:	aam    0x2b
  411361:	jno    0x411372
  411363:	aas    
  411364:	test   BYTE PTR [ecx-0x26],ch
  411367:	sub    al,0x75
  411369:	(bad)  
  41136a:	sbb    edx,esp
  41136c:	jbe    0x1f375f82
  411372:	add    esp,0x5b
  411375:	mov    ss,WORD PTR [esi+0x692d21c0]
  41137b:	inc    eax
  41137c:	ret    0xf549
  41137f:	xchg   esp,eax
  411380:	dec    esi
  411381:	sub    BYTE PTR [ecx],bl
  411383:	jbe    0x41139b
  411385:	stos   BYTE PTR es:[edi],al
  411386:	stos   BYTE PTR es:[edi],al
  411387:	mov    eax,ds:0x8f183949
  41138c:	ins    BYTE PTR es:[edi],dx
  41138d:	aad    0x2
  41138f:	adc    edx,DWORD PTR [esi-0x18ced0e3]
  411395:	xchg   ebx,eax
  411396:	mov    dh,0xe0
  411398:	dec    esi
  411399:	jno    0x4113b0
  41139b:	jp     0x411353
  41139d:	adc    cl,BYTE PTR [eax+edx*8+0x15ba96ee]
  4113a4:	in     al,0x19
  4113a6:	push   ss
  4113a7:	adc    al,BYTE PTR ds:0x8a7e3bc6
  4113ad:	sbb    cl,bl
  4113af:	icebp  
  4113b0:	pop    edx
  4113b1:	out    0xef,al
  4113b3:	iret   
  4113b4:	mov    al,ds:0xe00d27a4
  4113b9:	movlps xmm1,QWORD PTR [ebx]
  4113bc:	mov    al,ds:0x50081762
  4113c1:	mov    ds:0xd1b25fa,al
  4113c6:	cmc    
  4113c7:	xchg   BYTE PTR [ebx-0xd],ah
  4113ca:	test   cl,ch
  4113cc:	push   es
  4113cd:	rcl    DWORD PTR [edx],0xb0
  4113d0:	jmp    0x28a3:0x3123e097
  4113d7:	fldenv [esi-0x5fd2790]
  4113dd:	enter  0x5e11,0x75
  4113e1:	mov    ebp,0x2b8e183e
  4113e6:	xor    DWORD PTR [edx-0x6f321dab],esp
  4113ec:	jecxz  0x41140c
  4113ee:	xchg   DWORD PTR [eiz*8+0x5fa6692c],eax
  4113f5:	dec    ecx
  4113f6:	inc    esi
  4113f7:	cmp    al,0x5a
  4113f9:	pop    es
  4113fa:	push   ebp
  4113fb:	mov    ds:0xe66df4cf,al
  411400:	ins    DWORD PTR es:[edi],dx
  411401:	bound  ebp,QWORD PTR ds:0x35c7e962
  411407:	call   0xfdf5:0x97509e76
  41140e:	jl     0x411455
  411410:	cmp    BYTE PTR [edi-0x2acd2699],cl
  411416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411417:	push   esi
  411418:	jae    0x4113e9
  41141a:	cmp    eax,0x8e2d345
  41141f:	ins    BYTE PTR es:[edi],dx
  411420:	bswap  ebx
  411422:	mov    eax,0x9528eb48
  411427:	sbb    BYTE PTR [ecx],ah
  411429:	sti    
  41142a:	or     eax,0x45574bf9
  41142f:	or     ebp,DWORD PTR [edx+edi*4+0x1a8435ae]
  411436:	or     al,0xc6
  411438:	mov    ch,0x62
  41143a:	arpl   WORD PTR [eax+0x43782076],bp
  411440:	mov    esi,0xabe47721
  411445:	adc    eax,0x5c79d2f3
  41144a:	push   ds
  41144b:	nop
  41144c:	(bad)  
  41144e:	dec    edx
  41144f:	leave  
  411450:	es pop eax
  411452:	cmovno eax,DWORD PTR [ebp-0x7f121fd0]
  411459:	and    cl,BYTE PTR [esi]
  41145b:	mov    ah,0xd1
  41145d:	(bad)  
  41145e:	jp     0x4114c6
  411460:	mov    eax,0x6aee1066
  411465:	sbb    eax,0x1242d040
  41146a:	shl    DWORD PTR [esi-0xc],0x6f
  41146e:	jb     0x4114ab
  411470:	shl    DWORD PTR [eax+0x5a392260],0xcc
  411477:	sar    dh,cl
  411479:	scas   eax,DWORD PTR es:[edi]
  41147a:	mov    dh,0xe
  41147c:	xlat   BYTE PTR ds:[ebx]
  41147d:	add    ecx,edx
  41147f:	into   
  411480:	fs loope 0x41141b
  411483:	ss dec ecx
  411485:	dec    ebp
  411486:	xlat   BYTE PTR ds:[ebx]
  411487:	pop    ds
  411488:	(bad)  
  411489:	xor    cl,BYTE PTR [ecx+0x361fbedd]
  41148f:	(bad)  
  411490:	out    dx,al
  411491:	push   ds
  411492:	jae    0x411457
  411494:	lock xchg DWORD PTR [edx],edi
  411497:	dec    ebp
  411498:	sub    eax,0xe40c88af
  41149d:	sbb    BYTE PTR [esp+eax*8+0x3e],0xf6
  4114a2:	mov    esi,0x83dc578a
  4114a7:	add    ebx,DWORD PTR [ecx]
  4114a9:	js     0x4114a4
  4114ab:	mov    eax,ds:0x81ab6109
  4114b0:	je     0x411477
  4114b2:	jb     0x411482
  4114b4:	popa   
  4114b5:	pop    ebx
  4114b6:	gs push ecx
  4114b8:	xlat   BYTE PTR ds:[ebx]
  4114b9:	test   bl,0xc7
  4114bc:	mov    ds:0x58eb3a0,eax
  4114c1:	lahf   
  4114c2:	retf   0x381f
  4114c5:	jae    0x4114dd
  4114c7:	sub    ebx,DWORD PTR [ebx]
  4114c9:	and    BYTE PTR [ecx],cl
  4114cb:	mov    ebp,0xcb32221c
  4114d0:	nop
  4114d1:	pop    ds
  4114d2:	and    edi,DWORD PTR [eax+esi*8+0x75]
  4114d6:	das    
  4114d7:	sub    dh,BYTE PTR [eax-0x6b80cb1e]
  4114dd:	xchg   esp,eax
  4114de:	nop
  4114df:	and    BYTE PTR [ecx],0xe2
  4114e2:	je     0x41148f
  4114e4:	scas   eax,DWORD PTR es:[edi]
  4114e5:	or     ch,bl
  4114e7:	mov    esi,0xeeeacf4d
  4114ec:	outs   dx,BYTE PTR ds:[esi]
  4114ed:	inc    esi
  4114ee:	retf   0x1e9c
  4114f1:	aam    0x5e
  4114f3:	scas   eax,DWORD PTR es:[edi]
  4114f4:	scas   al,BYTE PTR es:[edi]
  4114f5:	inc    eax
  4114f6:	mov    esp,0x19251a4a
  4114fb:	sbb    al,0xb1
  4114fd:	adc    BYTE PTR [ecx],bh
  4114ff:	cmp    eax,0x15b638a5
  411504:	aad    0xdb
  411506:	jge    0x41157c
  411508:	push   ebp
  411509:	mov    ebx,gs
  41150b:	aam    0x76
  41150d:	ret    
  41150e:	push   cs
  41150f:	fisttp DWORD PTR [ebp+0x7487046]
  411515:	imul   ebp,DWORD PTR [eax-0x6c912f72],0x6c
  41151c:	out    0x2c,eax
  41151e:	lods   al,BYTE PTR ds:[esi]
  41151f:	mov    dl,0x52
  411521:	push   0x1b31547
  411526:	jecxz  0x4114e0
  411528:	sub    DWORD PTR [ebp+0x2f],ebx
  41152b:	loope  0x4114da
  41152d:	xchg   eax,esp
  41152f:	jmp    0x41157f
  411531:	dec    al
  411533:	test   DWORD PTR [edx],edx
  411535:	xchg   esi,eax
  411536:	outs   dx,BYTE PTR ds:[esi]
  411537:	out    dx,eax
  411538:	retf   0x5735
  41153b:	xor    eax,0x99b9328a
  411540:	loopne 0x411556
  411542:	add    BYTE PTR [ebx-0x45ea5bac],bh
  411548:	adc    eax,0x7e3342bf
  41154d:	(bad)  
  41154e:	lock pop ecx
  411550:	retf   0x53ab
  411553:	mov    gs,WORD PTR [ebp+0x576112db]
  411559:	into   
  41155a:	mov    eax,0x1f3a6523
  41155f:	mov    al,ds:0x9bbc448d
  411564:	and    ebp,ebp
  411566:	test   al,0x3c
  411568:	fistp  WORD PTR [edx-0x4847471c]
  41156e:	in     al,dx
  41156f:	adc    ebx,DWORD PTR [eax]
  411571:	test   al,0xa0
  411573:	stc    
  411574:	stc    
  411575:	retf   0x108f
  411578:	mov    ch,0x9c
  41157a:	sub    DWORD PTR [edi],eax
  41157c:	fwait
  41157d:	int3   
  41157e:	rcl    BYTE PTR [ebx],cl
  411580:	mov    bl,0xa0
  411582:	js     0x411584
  411584:	nop
  411585:	mov    esp,0xf2b00af1
  41158a:	pop    es
  41158b:	and    bh,dh
  41158d:	dec    ecx
  41158e:	xchg   edx,eax
  41158f:	mov    ah,0xc3
  411591:	in     eax,dx
  411592:	mov    edx,0xedff95a2
  411597:	je     0x411565
  411599:	mov    ebp,0x8617bd0a
  41159e:	jmp    0x82dd:0x3b7604ea
  4115a5:	sbb    al,0xfe
  4115a7:	loop   0x4115ce
  4115a9:	mov    cl,0xdb
  4115ab:	addr16 push cs
  4115ad:	and    BYTE PTR [edx],bl
  4115af:	xor    al,BYTE PTR [ebp+0x2f35e8ed]
  4115b5:	jae    0x411588
  4115b7:	xchg   ebx,eax
  4115b8:	outs   dx,BYTE PTR ds:[esi]
  4115b9:	lods   eax,DWORD PTR ds:[esi]
  4115ba:	xchg   edx,eax
  4115bb:	mov    ebp,0x1b40e88e
  4115c0:	popf   
  4115c1:	sbb    DWORD PTR [eax+0x66a66490],ebp
  4115c7:	bound  edx,QWORD PTR [edx]
  4115c9:	sbb    esi,DWORD PTR [eax+0x67160ea0]
  4115cf:	pop    edi
  4115d0:	fisub  DWORD PTR [edi+0x67841bd4]
  4115d6:	fimul  WORD PTR [ebp+0x67bfa8b0]
  4115dc:	sahf   
  4115dd:	test   eax,0x5b7e001f
  4115e2:	xchg   esi,eax
  4115e3:	mov    edi,0x9b241e41
  4115e8:	mov    edx,0xd7ddbf99
  4115ed:	mov    ds:0x70b25b7e,al
  4115f2:	add    al,0xd6
  4115f4:	mov    ecx,edx
  4115f6:	and    dh,BYTE PTR [eax]
  4115f8:	pcmpgtb mm7,QWORD PTR [eax]
  4115fb:	and    ecx,DWORD PTR [edi-0x40]
  4115fe:	adc    ah,BYTE PTR [ecx+0x46edbff5]
  411604:	or     DWORD PTR [eax],ebx
  411606:	sbb    ecx,eax
  411608:	lods   al,BYTE PTR ds:[esi]
  411609:	jmp    0x2422:0xe4e2f033
  411610:	jns    0x411629
  411612:	into   
  411613:	push   cs
  411614:	adc    BYTE PTR [edx],ah
  411616:	js     0x411626
  411618:	xchg   edx,eax
  411619:	mov    al,ds:0x4953e85f
  41161e:	call   0xf1a3:0x15b11006
  411625:	sub    DWORD PTR ds:0xaa05331c,esp
  41162b:	xchg   edx,eax
  41162c:	push   0xffffffac
  41162e:	(bad)  
  411630:	call   0x2898:0x7cb802c8
  411637:	add    al,0x2b
  411639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41163a:	mov    bl,0x4a
  41163c:	inc    esp
  41163d:	and    BYTE PTR ds:0x6ce8fb82,dl
  411643:	jecxz  0x4115fd
  411645:	outs   dx,DWORD PTR ds:[esi]
  411646:	mov    eax,0xba3b8e90
  41164b:	push   ebp
  41164c:	xor    eax,0xaa371a3a
  411651:	leave  
  411652:	lds    esp,FWORD PTR [esi]
  411654:	(bad)  [ecx+0x43]
  411657:	mov    bl,BYTE PTR [esi]
  411659:	sub    al,0x99
  41165b:	xor    eax,0x15ecedf5
  411660:	loopne 0x41166c
  411662:	xlat   BYTE PTR ds:[ebx]
  411663:	daa    
  411664:	ja     0x4116b2
  411666:	das    
  411667:	pop    di
  411669:	pop    ss
  41166a:	ficom  WORD PTR [esi+ecx*1-0x2c9e3636]
  411671:	mov    dl,0x43
  411673:	mov    dh,0x9e
  411675:	adc    bl,cl
  411677:	test   DWORD PTR [ebx+0x7d],esp
  41167a:	scas   al,BYTE PTR es:[edi]
  41167b:	addr16 or al,0xd2
  41167e:	shl    BYTE PTR [esi],0x36
  411681:	adc    DWORD PTR [esi+esi*4],0xffffff96
  411685:	fst    DWORD PTR [edi]
  411687:	out    0x2e,eax
  411689:	add    BYTE PTR [edx+0x33],cl
  41168c:	push   cs
  41168d:	stos   DWORD PTR es:[edi],eax
  41168e:	sbb    al,0x13
  411690:	pop    edx
  411691:	sub    bh,BYTE PTR ds:0x25850937
  411697:	inc    esi
  411698:	pushf  
  411699:	fstp   st(5)
  41169b:	pop    ss
  41169c:	jp     0x41168a
  41169e:	pop    ds
  41169f:	sbb    eax,0x61d9d5d7
  4116a4:	cvtps2pi mm7,QWORD PTR [eax+eax*4]
  4116a8:	sar    ecx,cl
  4116aa:	das    
  4116ab:	push   eax
  4116ac:	jg     0x411665
  4116ae:	mov    bl,0xc8
  4116b0:	sar    DWORD PTR [edx],1
  4116b2:	push   esi
  4116b3:	push   esi
  4116b4:	push   edx
  4116b5:	mov    eax,ds:0xff46fa68
  4116ba:	xchg   ebx,eax
  4116bb:	icebp  
  4116bc:	cs mov db5,edi
  4116c0:	lods   eax,DWORD PTR ds:[esi]
  4116c1:	and    esi,esp
  4116c3:	invd   
  4116c5:	jmp    0xec979bf1
  4116ca:	push   ecx
  4116cb:	cld    
  4116cc:	test   al,0x54
  4116ce:	cmp    DWORD PTR es:[esp+esi*8],eax
  4116d2:	xchg   esi,eax
  4116d3:	xor    ecx,esi
  4116d5:	mov    ds:0x10a4a23f,eax
  4116da:	xchg   bx,ax
  4116dc:	dec    eax
  4116dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116de:	out    dx,al
  4116df:	std    
  4116e0:	or     eax,0xae21dcb1
  4116e5:	test   BYTE PTR [edi+0x6b],bh
  4116e8:	scas   al,BYTE PTR es:[edi]
  4116e9:	mov    edx,0x642300c5
  4116ee:	jmp    0x411707
  4116f0:	arpl   WORD PTR ds:[ebx-0x63],si
  4116f4:	cmp    al,0x49
  4116f6:	jmp    0x67d9820f
  4116fb:	mov    dl,0x0
  4116fd:	in     eax,dx
  4116fe:	xchg   ebp,eax
  4116ff:	pop    es
  411700:	push   es
  411701:	call   FWORD PTR [ecx+eax*8]
  411704:	scas   eax,DWORD PTR es:[edi]
  411705:	mov    bh,0x5d
  411707:	jne    0x41177c
  411709:	xlat   BYTE PTR ds:[ebx]
  41170a:	push   eax
  41170b:	repz adc al,0xd4
  41170e:	jno    0x411769
  411710:	inc    ebp
  411711:	pushf  
  411712:	push   esi
  411713:	ja     0x411766
  411715:	sbb    cl,0xab
  411718:	cmp    edx,edi
  41171a:	fist   DWORD PTR [ebx]
  41171c:	cmp    BYTE PTR [eax-0x643491ff],0x6c
  411723:	dec    ebp
  411724:	stc    
  411725:	dec    ebx
  411726:	adc    esp,ecx
  411728:	jae    0x4116b4
  41172a:	fst    DWORD PTR [edi+0x4f]
  41172d:	lock shr BYTE PTR [eax-0x727cb494],cl
  411734:	pop    ebp
  411735:	inc    esi
  411736:	jge    0x4116de
  411738:	(bad)  
  411739:	and    BYTE PTR [esi+0x5d],bl
  41173c:	(bad)  
  41173d:	mov    ebx,0x64b279d4
  411742:	test   BYTE PTR [eax+0x5a],cl
  411745:	(bad)  
  411746:	adc    dh,BYTE PTR [edx+0x4f]
  411749:	outs   dx,BYTE PTR ds:[esi]
  41174a:	idiv   DWORD PTR [eax+edx*1]
  41174d:	fistp  DWORD PTR [eax]
  41174f:	ss fcmovne st,st(6)
  411752:	inc    ebx
  411753:	fistp  WORD PTR [edx-0x3265b5d7]
  411759:	cmc    
  41175a:	jb     0x411743
  41175c:	iret   
  41175d:	mov    ah,0x29
  41175f:	lods   al,BYTE PTR ds:[esi]
  411760:	data16 (bad) 
  411762:	sbb    eax,0xf2fae218
  411767:	add    BYTE PTR [ebx+edi*8-0x1916c825],cl
  41176e:	dec    eax
  41176f:	bnd jo 0x4116f6
  411772:	adc    eax,DWORD PTR [eax]
  411774:	stos   DWORD PTR es:[edi],eax
  411775:	jne    0x411724
  411777:	out    dx,eax
  411778:	dec    ebp
  411779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41177a:	mov    al,ds:0xf0ce75d7
  41177f:	sub    al,0x4b
  411781:	pop    esp
  411782:	jmp    0x72a4:0x76494bb2
  411789:	mov    al,ds:0x10df0
  41178e:	inc    eax
  41178f:	push   eax
  411790:	test   al,0x2
  411792:	lahf   
  411793:	push   ds
  411794:	xchg   ebx,eax
  411795:	mov    dl,0x3f
  411797:	mov    bl,0xbf
  411799:	out    0x3a,al
  41179b:	cli    
  41179c:	aas    
  41179d:	nop
  41179e:	popf   
  41179f:	jne    0x4117b5
  4117a1:	loopne 0x4117ac
  4117a3:	sub    ah,dh
  4117a5:	push   ecx
  4117a6:	jl     0x4117e3
  4117a8:	in     al,dx
  4117a9:	add    eax,0x8b69b0d1
  4117ae:	adc    eax,DWORD PTR [edx+0x3d]
  4117b1:	mov    BYTE PTR [ebp+0x28f7811e],ch
  4117b7:	jecxz  0x4117ff
  4117b9:	sub    esp,eax
  4117bb:	iret   
  4117bc:	and    DWORD PTR [ebx-0x1c],ecx
  4117bf:	gs sbb al,0x29
  4117c2:	dec    esp
  4117c3:	iret   
  4117c4:	sub    eax,0x458c43f2
  4117c9:	sbb    cl,dh
  4117cb:	push   esp
  4117cc:	adc    eax,0xe061ad8a
  4117d1:	adc    bh,BYTE PTR [ecx]
  4117d3:	cmp    esp,DWORD PTR [eax+0x664fcef9]
  4117d9:	xchg   esp,eax
  4117da:	vpavgw xmm5,xmm7,XMMWORD PTR [edi]
  4117de:	ud0    esp,DWORD PTR [ecx+0x15014c]
  4117e5:	fsubrp st(5),st
  4117e7:	xchg   edi,eax
  4117e8:	cmp    esi,eax
  4117ea:	adc    eax,DWORD PTR [ebp+0x421330]
  4117f0:	inc    ebx
  4117f1:	mov    cl,0xf4
  4117f3:	jae    0x4117e8
  4117f5:	cmp    BYTE PTR ds:0x751e5469,ah
  4117fb:	adc    bl,ah
  4117fd:	pop    ss
  4117fe:	fnsave [ecx-0x60]
  411801:	jmp    0x8ac8bc4
  411806:	dec    ebx
  411807:	xchg   ebx,eax
  411808:	push   edi
  411809:	jecxz  0x411813
  41180b:	ffreep st(3)
  41180d:	jne    0x4117c5
  41180f:	adc    al,0x34
  411811:	repz out 0x58,eax
  411814:	dec    ebx
  411815:	sbb    al,0x5f
  411817:	inc    edx
  411818:	rol    BYTE PTR [ebp-0x3efc9625],1
  41181e:	sbb    BYTE PTR [ecx],dl
  411820:	mov    bh,0xf4
  411822:	out    dx,eax
  411823:	outs   dx,DWORD PTR ds:[esi]
  411824:	push   0xd7d4f2b6
  411829:	adc    ch,BYTE PTR [ecx-0x1b8bb48d]
  41182f:	in     eax,dx
  411830:	fisub  WORD PTR [ebx-0x54]
  411833:	cmp    al,0x85
  411835:	mov    bl,dh
  411837:	add    al,0x2b
  411839:	aaa    
  41183a:	sbb    esp,esi
  41183c:	(bad)  
  41183d:	enter  0xdda4,0xbe
  411841:	std    
  411842:	adc    BYTE PTR [ebp+0x54],bl
  411845:	in     al,0xef
  411847:	sbb    BYTE PTR [ebp-0x33],bl
  41184a:	xchg   BYTE PTR [eax+0x400d5897],ah
  411850:	es stos BYTE PTR es:[edi],al
  411852:	sbb    DWORD PTR [edi],edi
  411854:	lea    ecx,[ebx+esi*8+0x63832946]
  41185b:	cmovno ecx,DWORD PTR [edi+0x18]
  41185f:	inc    DWORD PTR [esi]
  411861:	inc    esi
  411862:	aaa    
  411863:	mov    BYTE PTR [eax+0x41],dh
  411866:	into   
  411867:	jb     0x4117f6
  411869:	or     bh,BYTE PTR [ebx+eax*4]
  41186c:	mov    dh,0xa8
  41186e:	and    DWORD PTR [eax-0x25c7c803],0x75
  411875:	test   DWORD PTR [ebp+0x61],edi
  411878:	in     al,0xdf
  41187a:	gs mov edx,0xdb05d5ba
  411880:	ret    
  411881:	xchg   esp,eax
  411882:	inc    DWORD PTR [ecx-0x3ba09186]
  411888:	test   eax,0x351db7bc
  41188d:	xor    dl,BYTE PTR [eax+edx*8-0x77]
  411891:	adc    bh,BYTE PTR [eax-0x6371c01]
  411897:	push   ebx
  411898:	test   al,0x53
  41189a:	add    al,0x3
  41189d:	sbb    DWORD PTR [eax*8-0x321f83b5],esp
  4118a4:	push   ds
  4118a5:	sub    eax,DWORD PTR [ebx]
  4118a7:	fmul   DWORD PTR [ecx+0xadb5c02]
  4118ad:	mov    ah,0x9a
  4118af:	mov    al,ds:0x414d6833
  4118b4:	call   DWORD PTR [ecx-0x68]
  4118b7:	rcr    edi,0x8d
  4118ba:	outs   dx,DWORD PTR ds:[esi]
  4118bb:	popf   
  4118bc:	mov    ds:0x3c41ca4d,eax
  4118c1:	enter  0x2a89,0xb2
  4118c5:	lahf   
  4118c6:	mov    al,ds:0x637a11f0
  4118cb:	mov    esp,0xfb657d5e
  4118d0:	rol    BYTE PTR [ecx+0x2f765f85],cl
  4118d6:	cmp    esp,esp
  4118d8:	rcl    DWORD PTR [edi+0x24],0xb5
  4118dc:	loopne 0x41194d
  4118de:	push   ebp
  4118df:	in     al,0xb2
  4118e1:	pop    eax
  4118e2:	addr16 imul esp,edi,0xffffffd6
  4118e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e7:	pop    edi
  4118e8:	cmp    eax,0xdfd80c87
  4118ed:	xchg   ebx,eax
  4118ee:	and    al,0x35
  4118f0:	mov    ecx,0xf29d3b78
  4118f5:	sar    DWORD PTR [ecx-0x68],0x4a
  4118f9:	(bad)  fs:[ebx-0x36]
  4118fd:	ins    BYTE PTR es:[edi],dx
  4118fe:	push   edi
  4118ff:	mov    al,0x53
  411901:	sub    dl,BYTE PTR [ebp+0x2a0987d3]
  411907:	or     edx,DWORD PTR [esi-0x7d6291a7]
  41190d:	shl    BYTE PTR [ecx+0x22],1
  411910:	pusha  
  411911:	loopne 0x4118f3
  411913:	hlt    
  411914:	add    BYTE PTR [ebx-0x348e1a2f],ch
  41191a:	mov    ds:0xa807a3d7,al
  41191f:	adc    al,0xaf
  411921:	lods   al,BYTE PTR ds:[esi]
  411922:	mov    DWORD PTR [ecx+0x3d],0x7040c71
  411929:	pop    ecx
  41192a:	or     BYTE PTR [esi-0x275e5c85],bh
  411930:	xchg   esp,eax
  411931:	jns    0x4118cc
  411933:	fcomp  DWORD PTR [eax-0x72]
  411936:	jecxz  0x411950
  411938:	mov    eax,ds:0x19b4ec88
  41193d:	jbe    0x4119b9
  41193f:	jg     0x411919
  411941:	add    DWORD PTR [eax+0x43],ecx
  411944:	stos   DWORD PTR es:[edi],eax
  411945:	pop    ecx
  411946:	jbe    0x4119a4
  411948:	out    0xf5,eax
  41194a:	xchg   esp,eax
  41194b:	cdq    
  41194c:	cmp    bh,bl
  41194e:	adc    al,0x4f
  411950:	or     al,0x7a
  411952:	imul   ebp,DWORD PTR [eax+0x58468ca7],0xb8fcedcc
  41195c:	loop   0x41198f
  41195e:	and    eax,0x34893b75
  411963:	xor    dl,bl
  411965:	jns    0x411948
  411967:	(bad)  
  411968:	fmulp  st(3),st
  41196a:	out    0xf8,al
  41196c:	xor    BYTE PTR [eax-0x31616b9],dl
  411972:	adc    DWORD PTR [ebp+0x75],edi
  411975:	mov    ds:0x28ec18f9,al
  41197a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41197b:	mov    ?,WORD PTR [ebp+0x3f66598d]
  411981:	adc    al,0x43
  411983:	and    eax,esp
  411985:	add    ah,cl
  411987:	clc    
  411988:	inc    esp
  411989:	and    eax,0xe862bf83
  41198e:	ret    
  41198f:	jg     0x41191c
  411991:	call   0xe8c5:0x957acc6c
  411998:	jno    0x4119d6
  41199a:	ja     0x4119ca
  41199c:	neg    ch
  41199e:	in     eax,dx
  41199f:	and    BYTE PTR [edx+0x51c125c1],bh
  4119a5:	popa   
  4119a6:	jmp    0xe19d924a
  4119ab:	sbb    DWORD PTR [ecx],0x38dfc763
  4119b1:	mov    al,ds:0x24217fcd
  4119b6:	les    edi,FWORD PTR [ecx]
  4119b8:	es ret 0xae44
  4119bc:	cmp    DWORD PTR ds:0x5536038e,esp
  4119c2:	pop    ecx
  4119c3:	neg    BYTE PTR [edx-0x29a2db5a]
  4119c9:	dec    ebp
  4119ca:	mov    dl,0x16
  4119cc:	outs   dx,BYTE PTR ds:[esi]
  4119cd:	mov    esp,0xbf900e4c
  4119d2:	inc    ebp
  4119d3:	(bad)  
  4119d4:	dec    ecx
  4119d5:	ins    BYTE PTR es:[edi],dx
  4119d6:	ins    DWORD PTR es:[edi],dx
  4119d7:	dec    eax
  4119d8:	xchg   BYTE PTR [edx+0x59],ah
  4119db:	outs   dx,BYTE PTR ds:[esi]
  4119dc:	inc    esi
  4119dd:	inc    ebx
  4119de:	mov    dh,0x36
  4119e0:	push   0x45
  4119e2:	or     al,0xa4
  4119e4:	pop    esi
  4119e5:	pop    ecx
  4119e6:	aam    0x85
  4119e8:	mov    eax,ds:0x82bdaf92
  4119ed:	sub    DWORD PTR [edi-0x53],edi
  4119f0:	ins    BYTE PTR es:[edi],dx
  4119f1:	imul   DWORD PTR [ecx-0x66bd59ae]
  4119f7:	push   es
  4119f8:	cmp    al,BYTE PTR [esi+ecx*8-0xf]
  4119fc:	inc    ebx
  4119fd:	fwait
  4119fe:	and    al,0xd2
  411a00:	mov    ds:0xd7dc2a09,al
  411a05:	in     eax,0xd8
  411a07:	mov    al,ds:0x7a3719bd
  411a0c:	cli    
  411a0d:	lock dec ecx
  411a0f:	xchg   edi,eax
  411a10:	sub    dl,dl
  411a12:	test   eax,0x13f91ee
  411a17:	jno    0x4119ca
  411a19:	aad    0x74
  411a1b:	and    BYTE PTR [esi-0x3a],bh
  411a1e:	push   ss
  411a1f:	xchg   BYTE PTR [ebx+0x703f224f],dh
  411a25:	push   edi
  411a26:	add    BYTE PTR [edx],dh
  411a28:	in     eax,0x59
  411a2a:	cmp    cl,cl
  411a2c:	add    esi,DWORD PTR [ebx]
  411a2e:	or     DWORD PTR [ecx-0x17857ed9],esp
  411a34:	or     eax,0x653cca74
  411a39:	mov    ebx,0xcabe71f9
  411a3e:	jb     0x411a5e
  411a40:	mov    bl,0x6b
  411a42:	ins    DWORD PTR es:[edi],dx
  411a43:	adc    al,BYTE PTR [edi-0x9]
  411a46:	push   esp
  411a47:	pop    ss
  411a48:	ror    BYTE PTR [edx+0x1d3594ba],1
  411a4e:	add    al,BYTE PTR [edi]
  411a50:	pop    ds
  411a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a52:	test   al,0xbc
  411a54:	push   ebx
  411a55:	sub    esi,DWORD PTR [ebx+0x18]
  411a58:	pop    edx
  411a59:	xor    ebp,DWORD PTR ds:0x4a38325
  411a5f:	out    0x84,eax
  411a61:	cdq    
  411a62:	add    dh,BYTE PTR [esi+0xb]
  411a65:	push   ss
  411a66:	loopne 0x411a92
  411a68:	xor    BYTE PTR [edi-0x80],bl
  411a6b:	dec    edi
  411a6c:	xor    DWORD PTR [esi],0x456eedfd
  411a72:	sbb    ecx,esp
  411a74:	es pop ebx
  411a76:	js     0x411a18
  411a78:	xchg   edi,eax
  411a79:	mov    cs,ebp
  411a7b:	stc    
  411a7c:	or     ecx,DWORD PTR [edx]
  411a7e:	jmp    0x411a92
  411a80:	adc    bl,ch
  411a82:	mov    BYTE PTR [edi+0x20],cl
  411a85:	in     al,dx
  411a86:	cmp    ecx,DWORD PTR [esi]
  411a88:	fmul   DWORD PTR [edx+eiz*1]
  411a8b:	cmp    BYTE PTR [edx+0x51],ah
  411a8e:	ss pop es
  411a90:	repz cs icebp 
  411a93:	fmul   st(4),st
  411a95:	jl     0x411a3d
  411a97:	in     eax,0x64
  411a99:	push   ebx
  411a9a:	ret    
  411a9b:	add    al,0xeb
  411a9d:	pop    edx
  411a9e:	mul    BYTE PTR [ebx-0x12]
  411aa1:	leave  
  411aa2:	mov    ebx,0xcaf150a6
  411aa7:	js     0x411b22
  411aa9:	repz into 
  411aab:	dec    esi
  411aac:	pusha  
  411aad:	gs addr16 mov dl,0xa3
  411ab1:	fmulp  st(0),st
  411ab3:	xor    eax,0x43039e83
  411ab8:	sub    DWORD PTR [esi-0x6542e80d],esp
  411abe:	push   ds
  411abf:	lds    esi,FWORD PTR [esi]
  411ac1:	cli    
  411ac2:	and    bh,dh
  411ac4:	popf   
  411ac5:	inc    edx
  411ac6:	test   BYTE PTR [edx-0x5f],cl
  411ac9:	repz pop esp
  411acb:	cwde   
  411acc:	push   ecx
  411acd:	scas   al,BYTE PTR es:[edi]
  411ace:	rcr    DWORD PTR [edx],0x7d
  411ad1:	jns    0x411b4f
  411ad3:	popa   
  411ad4:	jmpw   0x1cad
  411ad8:	jecxz  0x411b13
  411ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411adb:	test   al,0x8b
  411add:	mov    eax,0x5bb77af
  411ae2:	in     al,dx
  411ae3:	and    eax,0xced457de
  411ae8:	xchg   edx,eax
  411ae9:	jmp    0x5977:0x1e2844ae
  411af0:	sub    edi,DWORD PTR [ebx+0x5d]
  411af3:	into   
  411af4:	sub    edx,DWORD PTR [edx+0x1b]
  411af7:	push   0x868049a8
  411afc:	bound  eax,QWORD PTR [edx-0x41]
  411aff:	push   ecx
  411b00:	out    dx,eax
  411b01:	dec    edx
  411b02:	repz jl 0x411b84
  411b05:	xchg   edi,eax
  411b06:	xchg   esi,eax
  411b07:	xchg   DWORD PTR [esi],edi
  411b09:	jo     0x411aa6
  411b0b:	push   ds
  411b0c:	(bad)  
  411b0d:	mov    ds:0xca00a7f2,eax
  411b12:	sbb    al,0xc
  411b14:	les    esi,FWORD PTR [eax+ebx*1]
  411b17:	idiv   ebp
  411b19:	add    al,0xdb
  411b1b:	popa   
  411b1c:	cld    
  411b1d:	xor    esi,edx
  411b1f:	or     al,0x92
  411b21:	pop    ebp
  411b22:	lods   eax,DWORD PTR ds:[esi]
  411b23:	outs   dx,BYTE PTR ds:[esi]
  411b24:	fld    QWORD PTR [ebx]
  411b26:	sbb    DWORD PTR [edi+eiz*2-0x2bd91a4],eax
  411b2d:	popa   
  411b2e:	bound  esi,QWORD PTR [ebx-0x24]
  411b31:	cli    
  411b32:	and    bh,BYTE PTR ds:0x61b82c90
  411b38:	movntps XMMWORD PTR [ebp-0x5bad56ac],xmm7
  411b3f:	sub    BYTE PTR [ebp+0x1fefab21],dl
  411b45:	cmp    BYTE PTR [eax],bl
  411b47:	hlt    
  411b48:	loop   0x411bb7
  411b4a:	jp     0x411b25
  411b4c:	out    dx,al
  411b4d:	repnz mov ds:0x22912722,al
  411b53:	mov    ds:0xfdfc9ffd,al
  411b58:	mov    bh,cl
  411b5a:	(bad)  
  411b5c:	cmp    esi,DWORD PTR [eax]
  411b5e:	sub    esi,DWORD PTR [eax]
  411b60:	arpl   WORD PTR [ebx],ax
  411b62:	jno    0x411b43
  411b64:	xor    DWORD PTR [edx],0x1
  411b67:	push   es
  411b68:	pop    ss
  411b69:	jmp    0xaa97:0x118ae3e0
  411b70:	cmp    DWORD PTR [esi+ecx*8+0x2f],edi
  411b74:	clc    
  411b75:	(bad)  [esi-0x3af1a37c]
  411b7b:	adc    DWORD PTR [ebx-0x2ec0fe1a],0xbe5d2a54
  411b85:	lahf   
  411b86:	test   eax,0x38353e61
  411b8b:	or     esi,DWORD PTR [eax+0x8]
  411b8e:	jae    0x411b52
  411b90:	(bad)  
  411b91:	xor    BYTE PTR [esi],cl
  411b93:	pop    eax
  411b94:	jae    0x411be3
  411b96:	ds xchg edx,eax
  411b98:	cld    
  411b99:	loop   0x411b1f
  411b9b:	pop    es
  411b9c:	cs push ebx
  411b9e:	or     ebp,edi
  411ba0:	fistp  DWORD PTR [eax]
  411ba2:	aad    0xab
  411ba4:	adc    al,0x54
  411ba6:	mov    bl,0x9
  411ba8:	shl    BYTE PTR [ebx+0x78],cl
  411bab:	mov    ch,ch
  411bad:	mov    ds:0xd7673f48,al
  411bb2:	clc    
  411bb3:	dec    edx
  411bb4:	fidiv  DWORD PTR [ecx]
  411bb6:	into   
  411bb7:	mov    eax,ds:0xc4e2f18b
  411bbc:	ficomp WORD PTR [eax+0x15]
  411bbf:	xor    edi,DWORD PTR [edi+ebx*1]
  411bc2:	test   DWORD PTR [esi-0x12147bf1],ebp
  411bc8:	sub    ecx,eax
  411bca:	mov    ds:0x6feb415b,eax
  411bcf:	adc    bh,BYTE PTR [ecx]
  411bd1:	push   ebx
  411bd2:	push   ecx
  411bd3:	clc    
  411bd4:	sub    ah,BYTE PTR [edi+ecx*8]
  411bd7:	adc    DWORD PTR [ebp+0x3f0f815e],0xc
  411bde:	sub    ecx,DWORD PTR [eax+0x5320f88]
  411be4:	or     DWORD PTR ds:0x3b05c9e,ebx
  411bea:	fisub  DWORD PTR [esi+0x122164e5]
  411bf0:	call   0xf49949e2
  411bf5:	dec    esi
  411bf6:	test   BYTE PTR [eax+ebp*4+0x41bfcb27],dh
  411bfd:	pop    ds
  411bfe:	loope  0x411c36
  411c00:	jl     0x411c02
  411c02:	sbb    al,0xc
  411c04:	into   
  411c05:	push   ds
  411c06:	add    BYTE PTR [edx],ah
  411c08:	lea    edi,[edi+esi*4]
  411c0b:	add    DWORD PTR [ebx],ecx
  411c0d:	ja     0x411c46
  411c0f:	add    BYTE PTR [edi],ah
  411c11:	addr16 mov eax,0x479f6682
  411c17:	sti    
  411c18:	jecxz  0x411c4b
  411c1a:	in     al,dx
  411c1b:	int    0xe
  411c1d:	ja     0x411c91
  411c1f:	cs cs cmp eax,esi
  411c23:	bound  edx,QWORD PTR es:[ebx-0x3c7a639]
  411c2a:	mov    ebp,0x1b941fb0
  411c2f:	stc    
  411c30:	adc    ch,BYTE PTR [ebp+0x679e0b6d]
  411c36:	cmp    eax,0x63865ef1
  411c3b:	loopne 0x411c9c
  411c3d:	cmp    DWORD PTR [ebp-0x73f93cec],edi
  411c43:	loope  0x411c1f
  411c45:	stos   BYTE PTR es:[edi],al
  411c46:	mov    ch,0xa7
  411c48:	jo     0x411bce
  411c4a:	(bad)  
  411c4c:	sbb    dh,bh
  411c4e:	(bad)  
  411c4f:	fstp   DWORD PTR [esi+0x7b1989bf]
  411c55:	cdq    
  411c56:	push   ds
  411c57:	and    BYTE PTR [esi*8-0x26a63dda],dl
  411c5e:	repz jne 0x411c83
  411c61:	inc    edi
  411c62:	addr16 dec ebp
  411c64:	enter  0xbcd0,0xd1
  411c68:	mov    al,ds:0x40dcac3d
  411c6d:	xor    ebx,eax
  411c6f:	sbb    al,BYTE PTR [esi+0x5c4fe2e]
  411c75:	nop
  411c76:	popf   
  411c77:	into   
  411c78:	push   edx
  411c79:	xchg   ebp,eax
  411c7a:	push   DWORD PTR [ecx+eiz*2]
  411c7d:	sub    BYTE PTR [esi],dl
  411c7f:	jg     0x411cff
  411c81:	jb     0x411cab
  411c83:	mov    cl,0xcd
  411c85:	push   edi
  411c86:	cld    
  411c87:	cmc    
  411c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c89:	shr    cl,cl
  411c8b:	out    0x5,eax
  411c8d:	shr    DWORD PTR [ebp+ebp*4-0x68],0xfd
  411c92:	lods   eax,DWORD PTR ds:[esi]
  411c93:	dec    ebp
  411c94:	jl     0x411ca9
  411c96:	imul   ecx,DWORD PTR [ecx+0x1b5708bd],0x26e019fc
  411ca0:	outs   dx,BYTE PTR ds:[esi]
  411ca1:	mov    ds:0x93a62ee2,eax
  411ca6:	ins    DWORD PTR es:[edi],dx
  411ca7:	add    dl,dl
  411ca9:	inc    esi
  411caa:	cdq    
  411cab:	pop    ecx
  411cac:	arpl   WORD PTR [ebx+0x1d],ax
  411caf:	push   edi
  411cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb1:	cmp    al,0xf8
  411cb3:	xchg   esp,eax
  411cb4:	addr16 add eax,0x5619cc74
  411cba:	sti    
  411cbb:	mov    ah,0xc5
  411cbd:	call   0xfade:0xba847210
  411cc4:	pop    es
  411cc5:	xlat   BYTE PTR ds:[ebx]
  411cc6:	ins    DWORD PTR es:[edi],dx
  411cc7:	add    eax,0xb126789
  411ccc:	cmc    
  411ccd:	ss pop ecx
  411ccf:	ds cmp eax,0x2678108f
  411cd5:	shl    BYTE PTR [ecx],cl
  411cd7:	mov    ah,0x3c
  411cd9:	jo     0x411cb2
  411cdb:	or     eax,DWORD PTR [ebp-0x29]
  411cde:	xchg   BYTE PTR [edx-0x48a76b69],dh
  411ce4:	ss dec edi
  411ce6:	lods   eax,DWORD PTR ds:[esi]
  411ce7:	jo     0x411c86
  411ce9:	out    0xe9,al
  411ceb:	cmp    ch,dl
  411ced:	dec    ebx
  411cee:	lds    eax,FWORD PTR [esi-0x7d]
  411cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf2:	xor    BYTE PTR [ebx-0x51d06b7d],bl
  411cf8:	mov    ah,0xf9
  411cfa:	imul   edx,DWORD PTR [ecx+0x25],0x16
  411cfe:	pop    esi
  411cff:	pop    edx
  411d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d01:	sub    edx,0xffffffe2
  411d04:	inc    edx
  411d05:	add    bh,BYTE PTR [edx]
  411d07:	xlat   BYTE PTR ds:[ebx]
  411d08:	in     al,0x91
  411d0a:	outs   dx,BYTE PTR ds:[esi]
  411d0b:	mov    DWORD PTR [ebp-0x26],edx
  411d0e:	daa    
  411d0f:	inc    esp
  411d10:	aad    0xaf
  411d12:	mov    bl,0xcc
  411d14:	pop    ebx
  411d15:	fild   QWORD PTR [edx-0x59]
  411d18:	mov    esp,DWORD PTR [edi]
  411d1a:	data16 cmp dh,cl
  411d1d:	inc    ebx
  411d1e:	test   eax,0x2bc25a7e
  411d23:	mov    BYTE PTR [ecx+0x6d],bl
  411d26:	out    0x4d,al
  411d28:	ds popf 
  411d2a:	and    BYTE PTR ds:0xc0fc2465,dh
  411d30:	jo     0x411cb2
  411d32:	mov    DWORD PTR [edi],ebx
  411d34:	(bad)  
  411d35:	mov    edi,0x708cdab8
  411d3b:	out    0xb3,al
  411d3d:	xor    al,dh
  411d3f:	cli    
  411d40:	adc    al,0x7d
  411d42:	les    edi,FWORD PTR [edx+0x748c1797]
  411d48:	cli    
  411d49:	int3   
  411d4a:	push   edx
  411d4b:	add    BYTE PTR [esi+0x7b],cl
  411d4e:	jns    0x411d29
  411d50:	and    eax,0xedf3309a
  411d55:	inc    ecx
  411d56:	push   ebx
  411d57:	mov    ch,0x63
  411d59:	push   ss
  411d5a:	aaa    
  411d5b:	call   0x8902:0xd5e38c25
  411d62:	out    dx,eax
  411d63:	or     BYTE PTR [esi+0x5fa8992b],0x30
  411d6a:	pop    esp
  411d6b:	cmc    
  411d6c:	sub    BYTE PTR [ebx-0x7ea2582e],al
  411d72:	test   al,0x7c
  411d74:	sti    
  411d75:	imul   eax,DWORD PTR [ebx+ebp*8],0xcb2437ff
  411d7c:	jo     0x411d32
  411d7e:	mov    cl,0x3b
  411d80:	bound  ecx,QWORD PTR [ebp+0x2dd3b00d]
  411d86:	pop    eax
  411d87:	call   0x601c0f4f
  411d8c:	aam    0x7f
  411d8e:	mov    al,BYTE PTR [esi-0x6f6000dc]
  411d94:	push   ebx
  411d95:	inc    ebx
  411d96:	mov    edx,0x356a43ec
  411d9b:	das    
  411d9c:	and    ch,BYTE PTR [edi+0x1e]
  411d9f:	pop    ecx
  411da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411da2:	out    0x22,al
  411da4:	pop    ss
  411da5:	(bad)  
  411da6:	icebp  
  411da7:	push   edx
  411da8:	and    al,0x4e
  411daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dab:	mov    esi,0x75e10412
  411db0:	push   cs
  411db1:	jnp    0x411da5
  411db3:	sbb    DWORD PTR [edi],edi
  411db5:	jb     0x411d4a
  411db7:	pop    edi
  411db8:	add    cl,bl
  411dba:	inc    ebp
  411dbb:	popa   
  411dbc:	pop    ebx
  411dbd:	cld    
  411dbe:	push   ebp
  411dbf:	cmp    ah,BYTE PTR [esi+0x66]
  411dc2:	out    dx,eax
  411dc3:	add    eax,0x4162cba
  411dc8:	ds dec ecx
  411dca:	sahf   
  411dcb:	xor    eax,DWORD PTR [esi]
  411dcd:	(bad)  
  411dce:	test   eax,0xfc1d6ff7
  411dd3:	out    0xfd,al
  411dd5:	jecxz  0x411dc7
  411dd7:	xchg   esi,eax
  411dd8:	rcr    DWORD PTR [ebx-0x7e],0x3c
  411ddc:	(bad)  [eax+0x3d34c860]
  411de2:	mov    ch,0xd4
  411de4:	fnsave [edx-0x53bf3f4]
  411dea:	test   DWORD PTR ds:0xc8dde50b,eax
  411df0:	adc    ecx,ebx
  411df2:	jge    0x411de0
  411df4:	add    al,0x9a
  411df6:	out    dx,al
  411df7:	cmp    ebp,DWORD PTR gs:[edx+0x17]
  411dfb:	out    dx,al
  411dfc:	out    0x4b,eax
  411dfe:	rol    edx,cl
  411e00:	jbe    0x411e3f
  411e02:	push   ebp
  411e03:	sub    BYTE PTR [ebx],ah
  411e05:	jae    0x411dec
  411e07:	and    BYTE PTR [edi-0xaa84186],dh
  411e0d:	cmp    ebp,DWORD PTR [ecx]
  411e0f:	ins    DWORD PTR es:[edi],dx
  411e10:	or     al,0xff
  411e12:	je     0x411dbc
  411e14:	shr    DWORD PTR [esi+eiz*8+0x73],1
  411e18:	rcl    BYTE PTR [esi-0x6b2a1fe4],cl
  411e1e:	mov    edi,0x75284d32
  411e23:	loope  0x411e34
  411e25:	mov    dl,BYTE PTR [edx]
  411e27:	add    eax,0x94927b29
  411e2c:	or     al,cl
  411e2e:	mov    esp,0xc82de2a7
  411e33:	add    al,0xdd
  411e35:	cmp    BYTE PTR [eax-0x87b1c94],bh
  411e3b:	sbb    eax,0x13d5287
  411e40:	imul   edx,DWORD PTR [esi+ebx*4],0x12e99675
  411e47:	fs push ebp
  411e49:	lods   eax,DWORD PTR ds:[esi]
  411e4a:	dec    edx
  411e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e4c:	leave  
  411e4d:	add    DWORD PTR [ebp-0x70],edx
  411e50:	enter  0x803d,0xdf
  411e54:	popa   
  411e55:	int3   
  411e56:	ret    0x90dc
  411e59:	mov    eax,ds:0xb3b0a19f
  411e5e:	je     0x411df7
  411e60:	test   esp,edi
  411e62:	es sti 
  411e64:	mov    edi,0xb16c6e9b
  411e69:	(bad)
  411e6e:	lahf   
  411e6f:	mov    ebp,0xc23fa5b1
  411e74:	xlat   BYTE PTR ds:[ebx]
  411e75:	mov    ecx,0x4b0f0b10
  411e7a:	pop    es
  411e7b:	push   edx
  411e7c:	inc    DWORD PTR [ebp+0x19]
  411e7f:	push   edi
  411e80:	loope  0x411eba
  411e82:	(bad)  
  411e83:	jnp    0x411eaf
  411e85:	jecxz  0x411ef4
  411e87:	fiadd  WORD PTR [esi]
  411e89:	inc    esp
  411e8a:	and    edx,DWORD PTR [ebx]
  411e8c:	pop    eax
  411e8d:	pop    ds
  411e8e:	pop    ebx
  411e8f:	sbb    ah,BYTE PTR [ecx]
  411e91:	cmp    BYTE PTR [ebx+0x53],bl
  411e94:	dec    eax
  411e95:	inc    esp
  411e96:	daa    
  411e97:	arpl   WORD PTR [esi+0x68],bx
  411e9a:	(bad)  
  411e9b:	clc    
  411e9c:	adc    al,0xa2
  411e9e:	add    ebx,DWORD PTR [ebp+0x6afacdb5]
  411ea4:	or     al,0x69
  411ea6:	loopne 0x411ebd
  411ea8:	adc    ecx,ebp
  411eaa:	sub    ah,dh
  411eac:	fld    DWORD PTR [ecx+ecx*8-0xacc705]
  411eb3:	sbb    DWORD PTR [edx+edi*8+0xe],esp
  411eb7:	inc    edi
  411eb8:	shr    DWORD PTR [edi+ebx*4-0x36e3a4dc],1
  411ebf:	adc    eax,0x336336c1
  411ec4:	mov    eax,0x2792c756
  411ec9:	mov    dl,0x1d
  411ecb:	out    0x9b,al
  411ecd:	pop    edi
  411ece:	punpcklbw mm0,DWORD PTR gs:[edi+0x6f]
  411ed3:	adc    BYTE PTR [edi-0xc],dh
  411ed6:	mov    bh,0xbf
  411ed8:	mov    dl,0xa4
  411eda:	fist   DWORD PTR ds:0xb69e691e
  411ee0:	imul   bl
  411ee2:	sub    ebx,edx
  411ee4:	dec    ebx
  411ee5:	leave  
  411ee6:	inc    ebx
  411ee7:	clc    
  411ee8:	icebp  
  411ee9:	cmp    WORD PTR [eax+0x137859d1],di
  411ef0:	pop    ebp
  411ef1:	popa   
  411ef2:	pop    ebx
  411ef3:	jge    0x411eb1
  411ef5:	push   esi
  411ef6:	push   ds
  411ef7:	(bad)  
  411ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef9:	call   0xe7d11405
  411efe:	push   ds
  411eff:	xlat   BYTE PTR ds:[ebx]
  411f00:	jl     0x411e8b
  411f02:	outs   dx,DWORD PTR ds:[esi]
  411f03:	inc    eax
  411f04:	cdq    
  411f05:	mov    esi,0xc20e6325
  411f0a:	dec    ebp
  411f0b:	std    
  411f0c:	rcr    DWORD PTR [esp+ebx*1+0x28],cl
  411f10:	mov    al,0xaa
  411f12:	pop    ss
  411f13:	retf   0x8101
  411f16:	inc    ebx
  411f17:	dec    ebp
  411f18:	xchg   DWORD PTR [ebx-0x4f],ecx
  411f1b:	shr    DWORD PTR [ecx],0x28
  411f1e:	cdq    
  411f1f:	out    dx,al
  411f20:	pop    edi
  411f21:	and    bh,ch
  411f23:	mov    bl,0xb5
  411f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f26:	jae    0x411f54
  411f28:	sbb    bl,al
  411f2a:	cmc    
  411f2b:	fsubr  QWORD PTR [edx+0x15df6e4c]
  411f31:	(bad)  
  411f32:	(bad)  
  411f33:	pop    esp
  411f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f35:	test   BYTE PTR [eax+0x4f1560c2],ah
  411f3b:	mov    al,0x44
  411f3e:	pop    esp
  411f3f:	test   eax,0xefc7a1a5
  411f44:	pushf  
  411f45:	inc    DWORD PTR [ebx+0x36]
  411f48:	pop    ds
  411f49:	or     BYTE PTR [ebp-0x41],bh
  411f4c:	pop    esp
  411f4d:	call   0xd9eb:0xcb7761a0
  411f54:	gs mov edi,0xe4e7af83
  411f5a:	sub    DWORD PTR [ebx-0x5a3330da],ebx
  411f60:	pop    ss
  411f61:	adc    esp,DWORD PTR [ebp+0x7b]
  411f64:	test   DWORD PTR [ecx+0x42686fcd],esi
  411f6a:	mov    ebx,0x4e3705b3
  411f6f:	mov    ds:0x18f9d17c,al
  411f74:	lods   al,BYTE PTR ds:[esi]
  411f75:	arpl   WORD PTR [edi],sp
  411f77:	sti    
  411f78:	mov    bh,0xa1
  411f7a:	xor    eax,0x611b6f47
  411f7f:	loopne 0x411f74
  411f81:	sub    ecx,edx
  411f83:	and    ecx,edi
  411f85:	out    dx,al
  411f86:	mov    esi,0x6f07deec
  411f8b:	pop    ds
  411f8c:	and    ebp,DWORD PTR [eax]
  411f8e:	sub    al,0x75
  411f90:	push   ecx
  411f91:	mov    ah,0xe9
  411f93:	xchg   ebx,eax
  411f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f95:	scas   al,BYTE PTR es:[edi]
  411f96:	loopne 0x411f47
  411f98:	or     esi,DWORD PTR [edx]
  411f9a:	je     0x411fcd
  411f9c:	jno    0x411fe9
  411f9e:	mov    ebx,0xd39ce440
  411fa3:	jge    0x411f2a
  411fa5:	dec    ecx
  411fa6:	inc    ebp
  411fa7:	adc    BYTE PTR gs:[ebp+edi*1+0x1f0cb760],ah
  411faf:	or     al,0x45
  411fb1:	pop    ebx
  411fb2:	call   0x5d5a7d9b
  411fb7:	and    al,0xe
  411fb9:	jl     0x411fd0
  411fbb:	sbb    esp,eax
  411fbd:	jae    0x412009
  411fbf:	adc    DWORD PTR [ebx],edi
  411fc1:	jge    0x411fe2
  411fc3:	cmp    dl,BYTE PTR [eax]
  411fc5:	xchg   DWORD PTR [edx-0x31],eax
  411fc8:	mov    al,ds:0x18f1f672
  411fcd:	out    0x6a,al
  411fcf:	dec    esi
  411fd0:	sub    edx,edx
  411fd2:	add    ah,dl
  411fd4:	mov    ecx,0x2d73a5ae
  411fd9:	or     BYTE PTR [ebp-0x5d],dl
  411fdc:	or     bh,dl
  411fde:	enter  0x9d9f,0xa4
  411fe2:	mov    ecx,0xa1f105f9
  411fe7:	fisubr WORD PTR [esi-0x31]
  411fea:	idiv   BYTE PTR ds:0x31cf8364
  411ff0:	pop    esp
  411ff1:	push   0x53bdb969
  411ff6:	ss dec esi
  411ff8:	jl     0x41202a
  411ffa:	xlat   BYTE PTR ds:[ebx]
  411ffb:	jp     0x41206e
  411ffd:	jmp    0x940e06e3
  412002:	popa   
  412003:	in     eax,dx
  412004:	jg     0x41206c
  412006:	mov    edx,0x37d4e6cb
  41200b:	dec    ecx
  41200c:	pop    DWORD PTR [esi+0x30]
  41200f:	and    ebp,DWORD PTR gs:[ebx]
  412012:	mov    al,ds:0xef2bb8ba
  412017:	and    ebp,DWORD PTR [ebp-0x62]
  41201a:	stos   DWORD PTR es:[edi],eax
  41201b:	sbb    dl,0xc4
  41201e:	in     al,0xa7
  412020:	in     eax,dx
  412021:	mov    ebp,0x949ba05a
  412026:	fcomp  DWORD PTR [edx+0x36c7e3db]
  41202c:	scas   al,BYTE PTR es:[edi]
  41202d:	out    dx,eax
  41202e:	or     BYTE PTR [edi+esi*1],bh
  412031:	jl     0x411fde
  412033:	sar    eax,1
  412035:	scas   al,BYTE PTR es:[edi]
  412036:	dec    esi
  412037:	jbe    0x411fdc
  412039:	adc    dh,BYTE PTR ds:0x19f2b367
  41203f:	xchg   esp,eax
  412040:	js     0x412077
  412042:	cmp    dh,BYTE PTR [ebp-0x61]
  412045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412046:	or     ch,BYTE PTR [edi]
  412048:	nop
  412049:	mov    ch,0xe7
  41204b:	in     eax,dx
  41204c:	adc    BYTE PTR [ebp+ecx*4+0x5e],dh
  412050:	sub    eax,0x66486dee
  412055:	add    al,0x34
  412057:	ins    BYTE PTR es:[edi],dx
  412058:	pop    ds
  412059:	rcl    ebx,1
  41205b:	push   cs
  41205c:	add    al,0x5e
  41205e:	cmp    ch,BYTE PTR [esi*2+0x4a51cf4e]
  412065:	jecxz  0x412043
  412067:	mov    al,ds:0x6261f49e
  41206c:	cmp    eax,0xa83fb239
  412071:	mov    edi,0xd82af594
  412076:	call   0x1ea8:0x4289717f
  41207d:	inc    ebp
  41207e:	or     eax,0x2dd0e19
  412083:	adc    al,0xbb
  412085:	pop    ss
  412086:	ss jmp 0xb2f4a0d5
  41208c:	mov    BYTE PTR [esp+esi*4-0x33fb5486],0x89
  412094:	hlt    
  412095:	xchg   esi,eax
  412096:	popa   
  412097:	jbe    0x4120cb
  412099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41209a:	pop    edi
  41209b:	int3   
  41209c:	or     ch,BYTE PTR [edx-0x2dd52632]
  4120a2:	xor    DWORD PTR [ebp-0x56],ebp
  4120a5:	xchg   BYTE PTR [eax+eax*1],dh
  4120a8:	dec    edi
  4120a9:	xchg   edi,eax
  4120aa:	ret    
  4120ab:	in     al,0x17
  4120ad:	fldenv [ebp-0x26fd7713]
  4120b3:	mul    DWORD PTR es:[esp+esi*1+0x18]
  4120b8:	iret   
  4120b9:	ss in  al,dx
  4120bb:	arpl   di,cx
  4120bd:	pop    edi
  4120be:	cmp    ch,ch
  4120c0:	fcom   DWORD PTR [ecx+eiz*8]
  4120c3:	ins    DWORD PTR es:[edi],dx
  4120c4:	mov    dh,0xdb
  4120c6:	lods   eax,DWORD PTR ds:[esi]
  4120c7:	push   ebp
  4120c8:	xchg   edi,eax
  4120c9:	or     esi,DWORD PTR [ecx]
  4120cb:	mov    bh,BYTE PTR [ebx+edx*1+0x4a983737]
  4120d2:	sbb    BYTE PTR [edx+ebx*2+0x4c],al
  4120d6:	pop    eax
  4120d7:	(bad)  
  4120d8:	cmc    
  4120d9:	arpl   WORD PTR [ebp-0x57dd6b6a],cx
  4120df:	fs or  al,0x3a
  4120e2:	mov    dh,0x8e
  4120e4:	or     eax,0xe275f684
  4120e9:	stos   DWORD PTR es:[edi],eax
  4120ea:	or     eax,0xf49b9f9
  4120ef:	fcmovnb st,st(1)
  4120f1:	push   ebx
  4120f2:	out    dx,al
  4120f3:	push   es
  4120f4:	jecxz  0x412153
  4120f6:	mov    ds:0xbfc4cc89,eax
  4120fb:	pop    ecx
  4120fc:	and    al,0xe3
  4120fe:	push   esi
  4120ff:	jmp    0x41215c
  412101:	sub    DWORD PTR [eax],0x543c660e
  412107:	or     cl,ch
  412109:	mov    eax,ds:0x126ca3fc
  41210e:	xchg   edi,eax
  41210f:	cmp    BYTE PTR [ebx+ecx*8+0x73],ah
  412113:	jbe    0x412180
  412115:	push   esp
  412116:	pop    ecx
  412117:	inc    edi
  412118:	xchg   DWORD PTR [ebp+0x2b],edx
  41211b:	nop
  41211c:	inc    ecx
  41211d:	scas   al,BYTE PTR es:[edi]
  41211e:	cwde   
  41211f:	(bad)  
  412120:	lock loop 0x412155
  412123:	push   es
  412124:	(bad)  
  412125:	nop
  412126:	(bad)  
  412127:	icebp  
  412128:	jns    0x412176
  41212a:	in     al,dx
  41212b:	icebp  
  41212c:	scas   al,BYTE PTR es:[edi]
  41212d:	aad    0xd0
  41212f:	fild   DWORD PTR ss:[eax]
  412132:	aaa    
  412133:	dec    eax
  412134:	xchg   esp,eax
  412135:	push   ecx
  412136:	and    ecx,DWORD PTR [eax]
  412138:	dec    BYTE PTR [ecx+0x4c]
  41213b:	test   DWORD PTR [edi-0x39c202f3],0xdb1d35c
  412145:	aad    0x94
  412147:	add    ah,BYTE PTR ds:0xba98342a
  41214d:	inc    edi
  41214e:	cmp    BYTE PTR [ecx+0x11d7f8f8],ch
  412154:	dec    ebx
  412155:	shr    DWORD PTR [edx-0xbe446c],cl
  41215b:	js     0x4121b5
  41215d:	jge    0x412160
  41215f:	aas    
  412160:	leave  
  412161:	shl    BYTE PTR [ecx-0x6],1
  412164:	ret    0x9ec6
  412167:	ja     0x41213d
  412169:	in     eax,dx
  41216a:	xchg   esi,eax
  41216b:	(bad)  
  41216c:	test   BYTE PTR [eax+0x5],dl
  41216f:	hlt    
  412170:	ins    DWORD PTR es:[edi],dx
  412171:	xchg   DWORD PTR [edx],esp
  412173:	add    esp,DWORD PTR [esi]
  412175:	aas    
  412176:	sub    BYTE PTR [edx-0x5f608021],0x44
  41217d:	popf   
  41217e:	in     al,0x15
  412180:	mov    ah,0xe8
  412182:	xchg   ebp,eax
  412183:	fistp  DWORD PTR [ecx]
  412185:	mov    bh,0x33
  412187:	sbb    ebx,edx
  412189:	fsubr  st(3),st
  41218b:	into   
  41218c:	mov    eax,ds:0x8d4c7b69
  412191:	cmp    bh,BYTE PTR [esi+0x5e]
  412194:	mov    ecx,0xd24d990
  412199:	lods   al,BYTE PTR ds:[esi]
  41219a:	xchg   ebx,eax
  41219b:	push   edx
  41219c:	leave  
  41219d:	lahf   
  41219e:	and    bh,BYTE PTR [esi-0x2dc16885]
  4121a4:	lods   al,BYTE PTR ds:[esi]
  4121a5:	fild   DWORD PTR [esi-0x80]
  4121a8:	push   cs
  4121a9:	cdq    
  4121aa:	pop    ebp
  4121ab:	sub    esp,esp
  4121ad:	call   FWORD PTR [esi+ecx*2+0x40fbfd3e]
  4121b4:	jmp    0x412140
  4121b6:	fcomp  DWORD PTR [ebp+0x5d110fdf]
  4121bc:	xor    eax,ecx
  4121be:	pushf  
  4121bf:	and    eax,0x7c7e7ea
  4121c4:	(bad)  
  4121c5:	loop   0x4121d8
  4121c7:	inc    edx
  4121c8:	adc    eax,0x220e3152
  4121cd:	jcxz   0x412199
  4121d0:	push   esi
  4121d1:	jb     0x4121f6
  4121d3:	test   DWORD PTR [ecx+0x6c],edi
  4121d6:	cmp    esi,ebx
  4121d8:	sub    eax,0x30462aca
  4121dd:	sbb    al,0x6
  4121df:	mov    esi,0x6e658b8a
  4121e4:	pop    DWORD PTR [edi+eax*1+0x51]
  4121e8:	ds popa 
  4121ea:	mov    ecx,0x67e6de54
  4121ef:	sbb    esp,DWORD PTR [ebp-0xf]
  4121f2:	sbb    esp,edi
  4121f4:	push   ebx
  4121f5:	clc    
  4121f6:	adc    eax,0x935d740b
  4121fb:	sbb    BYTE PTR [edi-0x2e],dl
  4121fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ff:	jbe    0x412183
  412201:	(bad)  
  412202:	fldenv [eax+0x22]
  412205:	sbb    DWORD PTR [ebx],eax
  412207:	out    dx,al
  412208:	pusha  
  412209:	arpl   WORD PTR [esi+0x22c88eec],bx
  41220f:	lahf   
  412210:	sahf   
  412211:	jne    0x412198
  412213:	xchg   ebx,eax
  412214:	inc    ebx
  412215:	adc    eax,0x9a1bf1c4
  41221a:	or     eax,0x3bc16cf9
  41221f:	cmp    eax,DWORD PTR [ebp-0x6e]
  412222:	cmp    al,0xf3
  412224:	fbstp  TBYTE PTR [esp+edi*4]
  412227:	outs   dx,BYTE PTR ds:[esi]
  412228:	pop    ebx
  412229:	in     al,dx
  41222a:	mov    ch,0xe2
  41222c:	and    BYTE PTR [ebx+0x10667604],ah
  412232:	inc    edx
  412233:	or     eax,0xd4de06f6
  412238:	pop    ebx
  412239:	je     0x4122af
  41223b:	xchg   esi,eax
  41223c:	jo     0x412268
  41223e:	push   ebp
  41223f:	stc    
  412240:	std    
  412241:	mov    ebx,0x5019b636
  412246:	aaa    
  412247:	cmp    al,0xcd
  412249:	sbb    ch,BYTE PTR [eax]
  41224b:	xchg   edi,eax
  41224c:	sbb    eax,0x67f7d39a
  412251:	mov    cl,0xb4
  412253:	sbb    BYTE PTR [ecx+0x78bfd993],cl
  412259:	mov    al,0xf4
  41225b:	in     al,dx
  41225c:	call   0x823cf1b2
  412261:	xor    ebp,DWORD PTR [eax-0x11]
  412264:	push   ecx
  412265:	xchg   ebp,eax
  412266:	jg     0x412273
  412268:	int    0xca
  41226a:	(bad)  
  41226c:	fcomp  DWORD PTR [eax-0x13]
  41226f:	dec    edx
  412270:	adc    DWORD PTR [ebp+0x2a9c0fbd],esi
  412276:	pop    esi
  412277:	add    ecx,DWORD PTR ds:0x8f83aac4
  41227d:	sub    DWORD PTR [ebp+0x50],esi
  412280:	xchg   edx,eax
  412281:	cmp    BYTE PTR [esp+ebx*4-0x3e2579c],ch
  412288:	and    ebp,DWORD PTR [ebx-0x3]
  41228b:	push   ecx
  41228c:	add    BYTE PTR [eax+0x5],cl
  41228f:	xor    esi,DWORD PTR [esi]
  412291:	add    DWORD PTR [ebp+0xd],esp
  412294:	or     ah,dh
  412296:	nop
  412297:	inc    edi
  412298:	shl    DWORD PTR [edx+0x3],cl
  41229b:	(bad)  
  41229c:	mov    cl,0xf6
  41229e:	xor    esp,DWORD PTR [eax-0x7a]
  4122a1:	pushf  
  4122a2:	fstp   QWORD PTR [ebp-0x21d26ac7]
  4122a8:	mov    esi,0xfa572f0b
  4122ad:	fmulp  st(0),st
  4122af:	sub    DWORD PTR [edx],esi
  4122b1:	jmp    0x44f8:0xc0f4cb04
  4122b8:	mov    ecx,0xa94a2be4
  4122bd:	call   0x29dc:0xa5194da8
  4122c4:	arpl   WORD PTR es:[edx],bx
  4122c7:	pop    esp
  4122c8:	sbb    dh,cl
  4122ca:	cli    
  4122cb:	push   es
  4122cc:	mov    ds:0x801eb074,eax
  4122d1:	sbb    ah,BYTE PTR [ebx-0x3d042f34]
  4122d7:	dec    ebp
  4122d8:	jge    0x41225a
  4122da:	mov    al,0xa3
  4122dc:	ret    0xab8
  4122df:	jmp    0xd025b6cb
  4122e4:	inc    edi
  4122e5:	jae    0x412330
  4122e7:	xor    eax,0x5b097ce0
  4122ec:	xor    cl,cl
  4122ee:	xor    ecx,ebp
  4122f0:	clc    
  4122f1:	or     BYTE PTR [edx+0x19],bl
  4122f4:	adc    al,bl
  4122f6:	pop    ss
  4122f7:	xor    eax,0xd2339204
  4122fc:	aaa    
  4122fd:	jbe    0x412320
  4122ff:	mov    ebp,0x4aabc260
  412304:	stos   DWORD PTR es:[edi],eax
  412305:	fadd   DWORD PTR [ebp+0x3a]
  412308:	popa   
  412309:	std    
  41230a:	xrelease xchg DWORD PTR ds:0x935348df,esi
  412311:	jl     0x4122dd
  412313:	pop    ebp
  412314:	add    eax,0xe9fcbcbe
  412319:	xlat   BYTE PTR ds:[ebx]
  41231a:	push   ss
  41231b:	ds pusha 
  41231d:	shl    di,cl
  412320:	les    eax,FWORD PTR [ecx-0x19]
  412323:	jbe    0x41232a
  412325:	repz mov ch,0xde
  412328:	sbb    DWORD PTR [eax+0x68],edx
  41232b:	je     0x412332
  41232d:	lods   eax,DWORD PTR ds:[esi]
  41232e:	cmp    al,BYTE PTR [ebp+0x15]
  412331:	push   ebx
  412332:	rcr    DWORD PTR [ecx-0x58],cl
  412335:	push   ebp
  412336:	mov    BYTE PTR [ebp+0x6d],bh
  412339:	add    al,0x80
  41233b:	sbb    DWORD PTR [eax],edi
  41233d:	cmc    
  41233e:	pop    ebx
  41233f:	mov    dl,0x51
  412341:	clc    
  412342:	pop    ds
  412343:	adc    DWORD PTR [eax],eax
  412345:	xchg   esp,eax
  412346:	jnp    0x412364
  412348:	rcl    DWORD PTR [ebx],cl
  41234a:	adc    al,0x1b
  41234c:	loop   0x4122f2
  41234e:	stc    
  41234f:	stos   BYTE PTR es:[edi],al
  412350:	ins    DWORD PTR es:[edi],dx
  412351:	cmp    DWORD PTR [ebx+0x1e5208dd],esp
  412357:	sbb    DWORD PTR [esi],eax
  412359:	add    esi,DWORD PTR [ebp+0x35]
  41235c:	sub    ch,BYTE PTR [eax-0x5b]
  41235f:	shl    dl,1
  412361:	imul   edx,DWORD PTR [ebx+eiz*4],0xfffffff7
  412365:	cli    
  412366:	mov    esp,0x3076fe3a
  41236b:	stos   DWORD PTR es:[edi],eax
  41236c:	pop    eax
  41236d:	sbb    esi,DWORD PTR [eax]
  41236f:	jae    0x412383
  412371:	in     eax,0x1c
  412373:	push   0x78
  412375:	faddp  st(3),st
  412377:	mov    ch,0xbe
  412379:	sbb    eax,0xa31d38bc
  41237e:	pop    ds
  41237f:	mov    dl,0xe3
  412381:	jae    0x412392
  412383:	push   edi
  412384:	dec    edi
  412385:	cmp    edx,DWORD PTR [ebx]
  412387:	pop    eax
  412388:	sub    ecx,ebp
  41238a:	int3   
  41238b:	adc    DWORD PTR [edx-0x4e],0xdcf22e5a
  412392:	and    al,0x39
  412394:	xchg   esp,eax
  412395:	xor    bh,0x8f
  412398:	inc    ebp
  412399:	or     eax,0xdea72a82
  41239e:	pop    ss
  41239f:	test   BYTE PTR [esi+ebx*1-0xb],al
  4123a3:	mov    ebx,0xf4caaa28
  4123a8:	jne    0x412382
  4123aa:	gs inc eax
  4123ac:	sub    BYTE PTR [eax+0x30e4e276],bl
  4123b2:	push   ecx
  4123b3:	pushf  
  4123b4:	mov    esp,0xaadd53d8
  4123b9:	cmp    cl,BYTE PTR [ebx]
  4123bb:	xchg   edx,eax
  4123bc:	adc    al,0x4c
  4123be:	add    ebp,DWORD PTR [ebp+eiz*8+0x52]
  4123c2:	push   eax
  4123c3:	pop    es
  4123c4:	add    al,0x3f
  4123c6:	inc    esp
  4123c7:	data16 in al,0x34
  4123ca:	(bad)  
  4123cb:	push   ebp
  4123cd:	xor    eax,0xe7537950
  4123d2:	ins    BYTE PTR es:[edi],dx
  4123d3:	in     eax,0x31
  4123d5:	jmp    0xed257bbf
  4123da:	pop    es
  4123db:	adc    ecx,0x6b
  4123de:	jg     0x412363
  4123e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123e1:	imul   ebx,DWORD PTR ds:0xef8e34d9,0xffffff9c
  4123e8:	mov    edx,0xd3fe5a66
  4123ed:	dec    eax
  4123ee:	adc    BYTE PTR [ebx],ch
  4123f0:	icebp  
  4123f1:	(bad)  
  4123f2:	xchg   esp,eax
  4123f3:	xchg   esp,eax
  4123f4:	mov    edi,0xa5dd7c3c
  4123f9:	jecxz  0x41239c
  4123fb:	pop    edx
  4123fc:	adc    dl,BYTE PTR [edi+0xc25a685]
  412402:	outs   dx,BYTE PTR ds:[esi]
  412403:	xchg   DWORD PTR [ecx+0x5e],esp
  412406:	setne  BYTE PTR [edx]
  412409:	(bad)  
  41240a:	pop    edx
  41240b:	push   esi
  41240c:	inc    DWORD PTR ds:0x46014a31
  412412:	sbb    eax,ecx
  412414:	loope  0x4123fa
  412416:	sar    BYTE PTR [eax+0x5b],cl
  412419:	(bad)  
  41241a:	mov    ds:0x9028dc1a,eax
  41241f:	sub    eax,0xa27ef0a0
  412424:	(bad)  
  412425:	lods   al,BYTE PTR ds:[esi]
  412426:	jbe    0x4124a4
  412428:	mov    esp,0x2603dba0
  41242d:	inc    eax
  41242e:	lods   eax,DWORD PTR ds:[esi]
  41242f:	mov    cl,0xf9
  412431:	popa   
  412432:	test   DWORD PTR [ebx+edi*2-0x74fb3b57],ebp
  412439:	jl     0x412437
  41243b:	scas   al,BYTE PTR es:[edi]
  41243c:	dec    ecx
  41243d:	jno    0x4123c6
  41243f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412440:	cli    
  412441:	leave  
  412442:	(bad)  
  412443:	jl     0x4123e9
  412445:	mov    gs,WORD PTR ds:0xa2e6c527
  41244b:	outs   dx,BYTE PTR ds:[esi]
  41244c:	jg     0x412482
  41244e:	dec    eax
  41244f:	fwait
  412450:	sar    BYTE PTR [esp+edi*4-0x61],1
  412454:	mov    bl,0x83
  412456:	pop    ds
  412457:	cdq    
  412458:	inc    ebx
  412459:	jns    0x4123ec
  41245b:	shr    bl,1
  41245d:	sub    esi,DWORD PTR [ebp*8-0x61b5459a]
  412464:	mov    ds:0x4eef6f30,al
  412469:	enter  0x78cc,0xe5
  41246d:	adc    al,BYTE PTR [edx]
  41246f:	pushf  
  412470:	dec    ebp
  412471:	push   edx
  412472:	dec    edx
  412473:	in     al,0x2c
  412475:	add    ecx,DWORD PTR [edx-0x52]
  412478:	les    edx,FWORD PTR [ebx+0x67]
  41247b:	sar    BYTE PTR ds:0xd182fada,cl
  412481:	mov    edi,edx
  412483:	cmp    al,0xbb
  412485:	xor    dl,BYTE PTR [edi+0x289642e9]
  41248b:	ins    DWORD PTR es:[edi],dx
  41248c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41248d:	aad    0xb2
  41248f:	pop    edx
  412490:	int3   
  412491:	adc    eax,0x3df9e16b
  412496:	ss sahf 
  412498:	js     0x4124ff
  41249a:	fcomp  DWORD PTR ds:0x729c2433
  4124a0:	dec    esp
  4124a1:	xor    esp,DWORD PTR [edi-0x77199421]
  4124a7:	pop    edi
  4124a9:	push   cs
  4124aa:	out    dx,al
  4124ab:	js     0x412443
  4124ad:	mov    dl,0x11
  4124af:	out    0xcd,al
  4124b1:	fwait
  4124b2:	pop    ecx
  4124b3:	add    bh,bl
  4124b5:	xchg   edx,eax
  4124b6:	pusha  
  4124b7:	dec    ecx
  4124b8:	cmp    al,0xd2
  4124ba:	sub    ebx,DWORD PTR [ebx+esi*2+0x6da23ee1]
  4124c1:	mov    al,0xee
  4124c3:	outs   dx,DWORD PTR ds:[esi]
  4124c4:	fwait
  4124c5:	loop   0x4124ce
  4124c7:	shl    DWORD PTR [ebp-0x3e3cbe27],cl
  4124cd:	or     edi,eax
  4124cf:	push   eax
  4124d0:	cs iret 
  4124d2:	push   0x64
  4124d4:	mov    es,WORD PTR [ebp-0x70]
  4124d7:	fdiv   QWORD PTR [ebx]
  4124d9:	ror    DWORD PTR [edx-0x34],0x66
  4124dd:	jnp    0x4124a3
  4124df:	rol    DWORD PTR [ecx],1
  4124e1:	sub    BYTE PTR [edi-0x668c4a70],bh
  4124e7:	cmp    al,al
  4124e9:	pop    eax
  4124ea:	push   eax
  4124eb:	leave  
  4124ec:	and    bh,ah
  4124ee:	mov    bh,0xe7
  4124f0:	test   BYTE PTR [esi+0x4d],dh
  4124f3:	mov    ecx,0x66fbfab6
  4124f8:	sbb    eax,0x82415b11
  4124fd:	retf   0x1212
  412500:	jl     0x41257f
  412502:	fisub  WORD PTR [esi+0x30be4b30]
  412508:	pop    ss
  412509:	mov    bl,BYTE PTR [esi]
  41250b:	nop
  41250c:	aas    
  41250d:	push   eax
  41250e:	vrcpss xmm7,xmm0,xmm7
  412512:	outs   dx,DWORD PTR ds:[esi]
  412513:	cwde   
  412514:	addr16 aaa 
  412516:	leave  
  412517:	(bad)  
  412519:	(bad)  
  41251a:	cmc    
  41251b:	mov    ecx,cs
  41251d:	or     eax,0xebb55d10
  412522:	mov    ebx,0x5fd8bb48
  412527:	jb     0x412567
  412529:	dec    eax
  41252a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41252c:	test   BYTE PTR [eax+0x1c],ch
  41252f:	mov    al,ds:0x4d8e1e6f
  412534:	mov    dh,0xe7
  412536:	mov    DWORD PTR [edx+ecx*8],ebp
  412539:	push   es
  41253a:	pop    ecx
  41253b:	dec    edx
  41253c:	inc    edx
  41253d:	inc    ecx
  41253e:	sbb    al,0xc
  412540:	mov    ebp,0xd84daf43
  412545:	shr    dh,1
  412547:	scas   eax,DWORD PTR es:[edi]
  412548:	dec    eax
  412549:	inc    ebx
  41254a:	mov    esi,0x9f94db2
  41254f:	xchg   ebp,eax
  412550:	mov    dh,0x44
  412552:	or     DWORD PTR [esi-0x1e],0xffffffce
  412556:	mov    ch,0x99
  412558:	dec    esi
  412559:	ds fs mov dh,0xcd
  41255d:	test   al,0x7c
  41255f:	mov    BYTE PTR [ecx-0x7f85da8a],ch
  412565:	aas    
  412566:	add    bl,BYTE PTR [ecx+ebx*2+0x11a5b99c]
  41256d:	xor    eax,0x2adc8b3c
  412572:	(bad)  
  412573:	ror    DWORD PTR [edx],1
  412575:	jmp    0x23789e5b
  41257a:	adc    edi,DWORD PTR [edx+ebp*8+0x4b]
  41257e:	or     al,0x26
  412580:	cmp    eax,0xe45cbe82
  412585:	out    0xed,eax
  412587:	cmp    dl,BYTE PTR [ecx-0x57]
  41258a:	cmp    DWORD PTR [ecx-0x32],edx
  41258d:	repnz rep ins DWORD PTR es:[edi],dx
  412590:	in     eax,0x5b
  412592:	cmc    
  412593:	or     DWORD PTR [ebx-0x22cf596f],eax
  412599:	sub    BYTE PTR [ecx+0x66e6983c],dh
  41259f:	mov    edi,0x930c1635
  4125a4:	ret    0x9a34
  4125a7:	das    
  4125a8:	sbb    dl,BYTE PTR [ebx-0x7e7b2ac5]
  4125ae:	sbb    esi,edi
  4125b0:	repnz cmp DWORD PTR [esi+0x3c],0x16
  4125b5:	call   DWORD PTR [esi+0x15315684]
  4125bb:	pusha  
  4125bc:	cmp    ecx,DWORD PTR [edx-0x39]
  4125bf:	mov    al,ds:0xb88c450c
  4125c4:	sbb    ecx,DWORD PTR [ecx-0x38]
  4125c7:	pop    eax
  4125c8:	add    DWORD PTR [ecx+ebx*8-0x4d],esp
  4125cc:	scas   al,BYTE PTR es:[edi]
  4125cd:	pop    es
  4125ce:	pop    ebp
  4125cf:	adc    eax,0x479f7132
  4125d4:	push   ecx
  4125d5:	pop    ss
  4125d6:	pop    ebp
  4125d7:	and    al,0xeb
  4125d9:	mov    bl,0x84
  4125db:	xchg   ebp,eax
  4125dc:	addr16 daa 
  4125de:	cmp    al,0x0
  4125e0:	jo     0x412651
  4125e2:	cmc    
  4125e3:	je     0x412631
  4125e5:	or     eax,0xee18f997
  4125ea:	mov    ch,0x10
  4125ec:	dec    esp
  4125ed:	inc    eax
  4125ee:	(bad)  
  4125ef:	sbb    al,0xd5
  4125f1:	ds in  eax,dx
  4125f3:	jmp    0x4125bb
  4125f5:	inc    BYTE PTR [esp+ecx*8+0x64]
  4125f9:	aam    0xf8
  4125fb:	jno    0x41259d
  4125fd:	daa    
  4125fe:	push   ecx
  4125ff:	pop    DWORD PTR [ebx+ebx*1-0x16]
  412603:	jp     0x412585
  412605:	pop    esp
  412606:	sub    eax,0x281b3f9d
  41260b:	push   0xae8a4bb7
  412610:	push   cs
  412611:	into   
  412612:	fstp   TBYTE PTR [ecx+edx*2-0x67]
  412616:	(bad)  
  412617:	fbld   TBYTE PTR [esi+0x18]
  41261a:	shl    BYTE PTR [ebx],1
  41261c:	retf   
  41261d:	jnp    0x412620
  41261f:	mov    eax,ds:0xbdeebc8e
  412624:	and    BYTE PTR [ecx+0x172fe2db],0x26
  41262b:	jmp    0x4617ffd7
  412630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412631:	mov    ds:0x7181d032,al
  412636:	out    0x33,eax
  412638:	mov    ebp,0x324f09e2
  41263d:	add    eax,0xdf021e3b
  412642:	cwde   
  412643:	and    bh,BYTE PTR [ecx+0x15cf4b26]
  412649:	cwde   
  41264a:	jle    0x41263e
  41264c:	xlat   BYTE PTR ds:[ebx]
  41264d:	inc    eax
  41264e:	out    0xda,al
  412650:	lods   eax,DWORD PTR ds:[esi]
  412651:	repz fisubr DWORD PTR [ebx+0x2e]
  412655:	mov    bl,0xea
  412657:	pusha  
  412658:	cdq    
  412659:	fnsave [edx+ecx*8]
  41265c:	mov    esi,0x89942ee7
  412661:	inc    edx
  412662:	out    0x8e,al
  412664:	pop    edi
  412665:	push   ss
  412666:	int3   
  412667:	sbb    eax,0x7dcc248f
  41266c:	jbe    0x41260f
  41266e:	mov    DWORD PTR [edi],ebx
  412670:	xor    ch,BYTE PTR [ebx]
  412672:	inc    eax
  412673:	add    al,0x7d
  412675:	in     eax,dx
  412676:	push   ebx
  412677:	pop    ebx
  412678:	xchg   ecx,eax
  412679:	push   es
  41267a:	adc    eax,0xbbd08f8
  41267f:	mov    dl,BYTE PTR [eax]
  412681:	mov    dl,0x7d
  412683:	sti    
  412684:	and    BYTE PTR [esi],al
  412686:	jmp    0x4126b2
  412688:	adc    eax,edi
  41268a:	sbb    al,0x96
  41268c:	push   ecx
  41268d:	dec    eax
  41268e:	adc    eax,0x14fe1be9
  412693:	jmp    FWORD PTR [ecx+0x1c]
  412696:	in     eax,dx
  412697:	mov    ds:0xbd2ebb3b,eax
  41269c:	les    esi,FWORD PTR [ecx+0x3b]
  41269f:	xchg   BYTE PTR [ebx+0x48],cl
  4126a2:	leave  
  4126a3:	mov    esi,DWORD PTR ds:0x94a66edf
  4126a9:	lock cmpps xmm7,XMMWORD PTR [eax-0x4c],0xd8
  4126af:	add    ebp,esp
  4126b1:	pop    ebp
  4126b2:	jle    0x412698
  4126b4:	mov    ds:0x810bed9a,eax
  4126b9:	(bad)  
  4126ba:	jmp    0x830f8169
  4126bf:	adc    dl,BYTE PTR [ecx+0x7f]
  4126c2:	pop    edi
  4126c3:	jge    0x41269e
  4126c5:	add    al,0x49
  4126c7:	jno    0x4126ca
  4126c9:	inc    esp
  4126ca:	add    ah,BYTE PTR [ebp+0x21]
  4126cd:	scas   eax,DWORD PTR es:[edi]
  4126ce:	fimul  WORD PTR [esi]
  4126d0:	arpl   WORD PTR [eax+0x3a2c9978],sp
  4126d6:	pop    eax
  4126d7:	in     eax,dx
  4126d8:	rcr    DWORD PTR [ebx+0x5494f158],1
  4126de:	test   dh,bh
  4126e0:	sub    eax,0x494fc1f5
  4126e5:	inc    ebp
  4126e6:	bnd jg 0x412711
  4126e9:	outs   dx,DWORD PTR ds:[esi]
  4126ea:	cs cld 
  4126ec:	and    esp,DWORD PTR [ecx+eax*1-0x63]
  4126f0:	push   edx
  4126f1:	je     0x412764
  4126f3:	push   0x2b42b1e8
  4126f8:	lea    esi,[ebx]
  4126fa:	lea    esp,[edx+0x7aa711ed]
  412700:	test   eax,0x5a1f8207
  412705:	ret    0xe777
  412708:	mov    bl,BYTE PTR [ebx]
  41270a:	leave  
  41270b:	std    
  41270c:	add    esi,DWORD PTR [esi]
  41270e:	xor    DWORD PTR [ebp+0x4a],edx
  412711:	or     BYTE PTR [edx],dh
  412713:	cs dec esi
  412715:	imul   edi,DWORD PTR [edi+0x57a42014],0xd7381261
  41271f:	loop   0x412789
  412721:	xchg   edx,eax
  412722:	sti    
  412723:	std    
  412724:	or     BYTE PTR [ebx-0x40],ch
  412727:	adc    al,0x0
  412729:	test   cl,ch
  41272b:	sub    dl,BYTE PTR [edi+edx*1-0x26f182b7]
  412732:	sbb    cl,cl
  412734:	repz add BYTE PTR [esp+ecx*1],dh
  412738:	and    ah,cl
  41273a:	fidivr DWORD PTR [ebp-0x2c]
  41273d:	inc    edi
  41273e:	sub    al,0xd2
  412740:	jg     0x412711
  412742:	gs ss (bad) 
  412746:	lahf   
  412747:	xchg   esi,eax
  412748:	mov    ah,0xdd
  41274a:	pop    ebp
  41274b:	ins    BYTE PTR es:[edi],dx
  41274c:	leavew 
  41274e:	out    0xd1,al
  412750:	iret   
  412751:	mov    gs,esp
  412753:	push   ds
  412754:	xchg   edx,eax
  412755:	sbb    ah,BYTE PTR [edi+0x2b]
  412758:	cmp    ch,ch
  41275a:	mov    ecx,0xc2c77bcc
  41275f:	mov    eax,0x47ab0a6c
  412764:	jne    0x41275a
  412766:	jge    0x4127c7
  412768:	cld    
  412769:	(bad)  
  41276a:	dec    ecx
  41276b:	mov    bh,0x28
  41276d:	(bad)  
  41276e:	(bad)  
  412770:	pop    ds
  412771:	leave  
  412772:	addr16 fsub st(3),st
  412775:	xor    al,ch
  412777:	repz add al,0x90
  41277a:	icebp  
  41277b:	push   0xa0ed2ba5
  412780:	adc    DWORD PTR [edx+0x60cd3eb8],ecx
  412786:	into   
  412787:	pop    edx
  412788:	inc    edi
  412789:	ins    DWORD PTR es:[edi],dx
  41278a:	test   eax,0xf454a46b
  41278f:	pop    ebp
  412790:	sar    DWORD PTR [ebx-0x6d],1
  412793:	and    DWORD PTR [eax],esi
  412795:	inc    ecx
  412796:	jge    0x41279c
  412798:	clc    
  412799:	dec    edi
  41279a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41279b:	jb     0x41273c
  41279d:	push   edi
  41279e:	add    dh,dl
  4127a0:	fwait
  4127a1:	and    BYTE PTR [ebx],0x9c
  4127a4:	jp     0x41276f
  4127a6:	mov    ah,0x60
  4127a8:	adc    ah,ah
  4127aa:	sbb    esp,DWORD PTR [eax-0x28]
  4127ad:	mov    al,0xc9
  4127af:	mov    ah,0x87
  4127b1:	mov    ch,0xd7
  4127b3:	(bad)  
  4127b4:	jg     0x412757
  4127b6:	cli    
  4127b7:	sub    ah,bh
  4127b9:	aas    
  4127ba:	scas   eax,DWORD PTR es:[edi]
  4127bb:	cmc    
  4127bc:	jne    0x4127d9
  4127be:	or     DWORD PTR [ebp+0x27],ebp
  4127c1:	les    esp,FWORD PTR [edi-0x2d93cab1]
  4127c7:	sub    eax,0xe196e197
  4127cc:	clc    
  4127cd:	fild   WORD PTR [esi]
  4127cf:	mov    al,0x22
  4127d1:	mov    dh,0x63
  4127d3:	add    esp,DWORD PTR [eax+0x32]
  4127d6:	cmp    esi,DWORD PTR [esi+0x53ef3146]
  4127dc:	mov    edx,0xa93c5dd2
  4127e1:	(bad)  
  4127e2:	data16 and bl,BYTE PTR [esi-0x4c]
  4127e6:	cs (bad) 
  4127e8:	scas   al,BYTE PTR es:[edi]
  4127e9:	mov    dl,0xbc
  4127eb:	int3   
  4127ec:	mov    esi,0xf116b648
  4127f1:	js     0x41281f
  4127f3:	sub    ecx,DWORD PTR [edi]
  4127f5:	adc    eax,0xa2afdcad
  4127fa:	int3   
  4127fb:	icebp  
  4127fc:	in     eax,0xcd
  4127fe:	adc    DWORD PTR [edx],ebx
  412800:	mov    edi,DWORD PTR ds:0x8506152b
  412806:	pop    eax
  412807:	pop    esp
  412808:	ror    DWORD PTR [eax],1
  41280a:	pop    esp
  41280b:	pop    esp
  41280c:	mov    cl,0x96
  41280e:	test   eax,0x31448e46
  412813:	mov    eax,0x8b6a82d
  412818:	mov    esp,0x2e3bbd9f
  41281d:	add    al,0x15
  41281f:	and    ebx,DWORD PTR [ebp-0x59ea0e61]
  412825:	fcomp  DWORD PTR [ebp-0x3]
  412828:	je     0x41285f
  41282a:	push   ebx
  41282b:	fwait
  41282c:	lock sbb eax,0xb0084f35
  412832:	jle    0x4127fc
  412834:	mov    dh,0xf2
  412836:	sbb    cl,BYTE PTR [edi-0x5]
  412839:	xor    cl,al
  41283b:	sbb    ecx,DWORD PTR [edx]
  41283d:	fs aam 0x72
  412840:	sbb    DWORD PTR [esi],esi
  412842:	sbb    al,0x67
  412844:	xor    bh,BYTE PTR [esi+0x1e79b81f]
  41284a:	ds call 0xadf8cf63
  412850:	lahf   
  412851:	xchg   edx,eax
  412852:	ja     0x4128a0
  412854:	mov    dl,BYTE PTR [edi]
  412856:	mov    esp,0x2329afb4
  41285b:	sub    al,0xb5
  41285d:	or     al,0xf
  41285f:	bnd jl 0x412854
  412862:	push   esi
  412863:	mov    dh,0xbb
  412865:	outs   dx,DWORD PTR ds:[esi]
  412866:	xor    al,0x37
  412868:	xor    ecx,edi
  41286a:	jnp    0x4128d1
  41286c:	ja     0x41289b
  41286e:	daa    
  41286f:	adc    al,BYTE PTR [ebp+0x27]
  412872:	retf   0x12ce
  412875:	xchg   bh,al
  412877:	fs cli 
  412879:	xchg   dh,ah
  41287b:	int3   
  41287c:	xor    al,BYTE PTR [edx-0x59fd659]
  412882:	sbb    bl,BYTE PTR [ebx+0x6e]
  412885:	add    bh,bl
  412887:	hlt    
  412888:	dec    BYTE PTR [ebx-0x6c]
  41288b:	fld    QWORD PTR [edx+edi*4]
  41288e:	cmp    eax,0x1c838bd
  412893:	clc    
  412894:	push   esp
  412895:	sub    bh,dl
  412897:	xor    DWORD PTR [eax+0x62],ebx
  41289a:	push   edx
  41289b:	cmp    DWORD PTR [ebx-0x73],ecx
  41289e:	ss and eax,0xcf67fb64
  4128a4:	xor    eax,0x49b58bcb
  4128a9:	push   edi
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	add    eax,0xe5c97f1
  4128b0:	in     al,0x17
  4128b2:	xchg   BYTE PTR [ecx],al
  4128b4:	push   ds
  4128b5:	inc    esp
  4128b6:	(bad)  
  4128b7:	bound  esp,QWORD PTR [ebx+edx*4-0x4d74e080]
  4128be:	and    ecx,DWORD PTR [esi+0x60eab0ba]
  4128c4:	sbb    bl,dh
  4128c6:	nop
  4128c7:	aas    
  4128c8:	ret    0x5f89
  4128cb:	cmp    BYTE PTR ds:0x38d051f8,0x3a
  4128d2:	inc    edx
  4128d3:	push   esi
  4128d4:	mov    dh,0x5e
  4128d6:	xchg   ebp,eax
  4128d7:	jne    0x412875
  4128d9:	loopne 0x412911
  4128db:	mov    cl,0xb4
  4128dd:	push   edi
  4128de:	ror    DWORD PTR [ecx+0x7393fe08],cl
  4128e4:	lods   eax,DWORD PTR ds:[esi]
  4128e5:	adc    DWORD PTR [edi+0xb],ebp
  4128e8:	fisttp QWORD PTR [eax+eiz*2-0x1988164f]
  4128ef:	dec    ebx
  4128f0:	sbb    dh,BYTE PTR [eax+0x32]
  4128f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128f4:	push   ss
  4128f5:	xlat   BYTE PTR ds:[ebx]
  4128f6:	call   0x142cca6b
  4128fb:	outs   dx,BYTE PTR ds:[esi]
  4128fc:	mov    dl,0x7c
  4128fe:	mov    dh,dl
  412900:	xor    bl,cl
  412902:	mov    ds:0xe5c855e0,al
  412907:	jg     0x41288f
  412909:	push   esp
  41290a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41290b:	pop    eax
  41290c:	sbb    edi,DWORD PTR ds:0x12e57089
  412912:	call   0x49feaf9d
  412917:	hlt    
  412918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412919:	neg    BYTE PTR [esi]
  41291b:	inc    ebp
  41291c:	sar    BYTE PTR [ebx],1
  41291e:	ins    DWORD PTR es:[edi],dx
  41291f:	out    dx,eax
  412920:	mov    eax,0xa8cac46e
  412925:	fnstcw WORD PTR [edi]
  412927:	(bad)  
  412928:	adc    eax,0xb6c3bee5
  41292d:	sub    edi,DWORD PTR [ebx+0x62ea48dc]
  412933:	dec    edi
  412934:	inc    esp
  412935:	fidivr DWORD PTR [ebx+ebp*8-0x682155da]
  41293c:	xchg   edi,eax
  41293d:	test   eax,0x6ee2e2b9
  412942:	xchg   esi,eax
  412943:	mov    ah,0x9e
  412945:	ret    
  412946:	aaa    
  412947:	int3   
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41294a:	mov    eax,ds:0x9c13897a
  41294f:	jno    0x41293d
  412951:	aaa    
  412952:	lea    edx,[edi-0x71]
  412955:	xor    DWORD PTR [ebp-0x2d35c13c],0x7c
  41295c:	xchg   esi,eax
  41295d:	imul   esi,DWORD PTR [edi],0xffffff99
  412960:	and    eax,0x73ae45d4
  412965:	out    dx,eax
  412966:	lds    eax,FWORD PTR [ebp+0x5a5b72f5]
  41296c:	dec    ebx
  41296d:	(bad)  
  41296e:	pop    ebx
  41296f:	xchg   esp,eax
  412970:	fild   DWORD PTR [esi-0x2978bb95]
  412976:	hlt    
  412977:	cld    
  412978:	add    dl,cl
  41297a:	stos   DWORD PTR es:[edi],eax
  41297b:	mov    eax,0x72757824
  412980:	push   0xffffffd6
  412982:	jmp    0x4129a1
  412984:	sbb    eax,0x238a282d
  412989:	test   al,0x48
  41298b:	clc    
  41298c:	ret    0x917f
  41298f:	inc    edi
  412990:	inc    ecx
  412991:	(bad)  
  412992:	xchg   ebx,eax
  412993:	call   0x64f1:0x26ce6b74
  41299a:	inc    esi
  41299b:	push   0x8f02077f
  4129a0:	inc    ecx
  4129a1:	sbb    DWORD PTR [eax-0x3],esp
  4129a4:	xlat   BYTE PTR ds:[ebx]
  4129a5:	aam    0xa2
  4129a7:	aaa    
  4129a8:	dec    edx
  4129a9:	push   edx
  4129aa:	and    eax,0x84b3317b
  4129af:	fnsave cs:[ebx+0x14851a1f]
  4129b6:	test   eax,0x890a1b2a
  4129bb:	int    0x65
  4129bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129be:	inc    ecx
  4129bf:	ds ss iret 
  4129c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c3:	sub    DWORD PTR fs:[edx],ebp
  4129c6:	jle    0x4129dc
  4129c8:	test   eax,0xda972e94
  4129cd:	imul   ebp,DWORD PTR [edx],0xbfac60b9
  4129d3:	int3   
  4129d4:	stc    
  4129d5:	mov    WORD PTR [ecx-0x7e],es
  4129d8:	xor    ah,BYTE PTR [ebp+0xe]
  4129db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129dc:	adc    DWORD PTR [eax-0x5873fdec],edi
  4129e2:	retf   
  4129e3:	and    al,0x20
  4129e5:	sbb    eax,DWORD PTR [esi+0xd8f4bf5]
  4129eb:	mov    eax,ds:0x916aa7b6
  4129f0:	push   es
  4129f1:	xchg   ebx,eax
  4129f2:	mov    ds:0xf7fb2877,al
  4129f7:	aaa    
  4129f8:	cmp    DWORD PTR [ecx-0x56],edx
  4129fb:	in     al,0x37
  4129fd:	push   es
  4129fe:	sbb    al,0x19
  412a00:	sahf   
  412a01:	cs popf 
  412a03:	mov    BYTE PTR [eax+eax*1+0x23f5c341],ch
  412a0a:	xor    DWORD PTR [edi-0xe],edi
  412a0d:	adc    DWORD PTR [esi],edx
  412a0f:	scas   al,BYTE PTR es:[edi]
  412a10:	ficom  DWORD PTR [edx+0x37cd84f9]
  412a16:	cmc    
  412a17:	in     al,0x30
  412a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a1a:	adc    ebp,DWORD PTR [ecx]
  412a1c:	fpatan 
  412a1e:	loopne 0x412a0b
  412a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a21:	jge    0x4129f8
  412a23:	lds    ebp,FWORD PTR [edx+0x33]
  412a26:	(bad)  
  412a28:	xor    ebp,ecx
  412a2a:	aad    0x8f
  412a2c:	xchg   ebx,eax
  412a2d:	lea    ecx,[ebx]
  412a2f:	mov    dl,cl
  412a31:	stos   BYTE PTR es:[edi],al
  412a32:	and    bh,bh
  412a34:	dec    esp
  412a35:	cdq    
  412a36:	in     eax,dx
  412a37:	aad    0x54
  412a39:	aad    0x3d
  412a3b:	and    DWORD PTR [edx+edi*2-0x69],ebx
  412a3f:	out    dx,al
  412a40:	and    DWORD PTR [edx],edi
  412a42:	mov    BYTE PTR [ebp+0x37e8fe0c],ch
  412a48:	je     0x412a59
  412a4a:	lods   eax,DWORD PTR ds:[esi]
  412a4b:	cmp    ch,ch
  412a4d:	xor    al,0x7
  412a4f:	in     eax,0x16
  412a51:	sbb    DWORD PTR [edi],ebp
  412a53:	(bad)  
  412a55:	inc    ecx
  412a56:	bound  ecx,QWORD PTR [edi-0x74]
  412a59:	and    DWORD PTR [esi+0x3a],edx
  412a5c:	jmp    0xae51:0x90ebdfee
  412a63:	sub    ch,BYTE PTR [ebx+0x22]
  412a66:	sbb    bl,ah
  412a68:	cmc    
  412a69:	rol    edx,cl
  412a6b:	stc    
  412a6c:	jp     0x412a5f
  412a6e:	ds mov ebp,0xfe1d770
  412a74:	scas   al,BYTE PTR es:[edi]
  412a75:	int3   
  412a76:	shr    bl,cl
  412a78:	push   ds
  412a79:	xlat   BYTE PTR ds:[ebx]
  412a7a:	sahf   
  412a7b:	ds mov dh,0x58
  412a7e:	push   edx
  412a7f:	call   0x1844cf20
  412a84:	clc    
  412a85:	xchg   esi,eax
  412a86:	xor    ah,BYTE PTR [edx-0x4b42753b]
  412a8c:	(bad)  
  412a8d:	out    0xbb,al
  412a8f:	retf   
  412a90:	sahf   
  412a91:	outs   dx,BYTE PTR ds:[esi]
  412a92:	call   0x748a:0xda55e433
  412a99:	retf   0xec00
  412a9c:	repnz xor al,0x9e
  412a9f:	xchg   ecx,eax
  412aa0:	sbb    dh,BYTE PTR [edx+0x273eeaf8]
  412aa6:	adc    esi,DWORD PTR [ecx]
  412aa8:	xor    DWORD PTR [esi+ebx*2],esp
  412aab:	xor    bl,BYTE PTR [edi+0x3fbaab3e]
  412ab1:	in     eax,dx
  412ab2:	mov    al,0xe5
  412ab4:	cdq    
  412ab5:	inc    esp
  412ab6:	sti    
  412ab7:	ret    0xc05e
  412aba:	push   ebx
  412abb:	(bad)
  412abf:	iret   
  412ac0:	pushf  
  412ac1:	mov    eax,ds:0xe2b1b9db
  412ac6:	sub    bh,BYTE PTR [edi+0x1f584125]
  412acc:	js     0x412a6f
  412ace:	gs pop edi
  412ad0:	adc    ah,BYTE PTR ds:[ebp+0x33]
  412ad4:	popf   
  412ad5:	(bad)  
  412ad6:	jnp    0x412af2
  412ad8:	inc    edx
  412ad9:	arpl   sp,sp
  412adb:	inc    esp
  412adc:	xor    DWORD PTR [edi-0x6f],0x2b
  412ae0:	bound  ecx,QWORD PTR [esi-0x2b]
  412ae3:	add    eax,0xbe7a0966
  412ae8:	sub    al,0x53
  412aea:	cwde   
  412aeb:	or     BYTE PTR [ebx-0x552dd6a3],al
  412af1:	and    esi,eax
  412af3:	inc    esp
  412af4:	add    al,0x85
  412af6:	cld    
  412af7:	mov    cl,BYTE PTR [eax]
  412af9:	cmp    al,0x29
  412afb:	retf   0x91fb
  412afe:	loop   0x412b50
  412b00:	test   BYTE PTR [ecx-0x55693ee2],0x5c
  412b07:	xchg   esp,eax
  412b08:	shr    edi,cl
  412b0a:	and    ecx,DWORD PTR [ecx+eax*1-0x8]
  412b0e:	push   edx
  412b0f:	or     DWORD PTR [ebp+0xa],0x475f26d6
  412b16:	mov    bl,0x6
  412b18:	or     BYTE PTR [edx+0xa59e403],0x81
  412b1f:	cmp    DWORD PTR [edi+0x4d193edb],ecx
  412b25:	xchg   edi,ecx
  412b27:	cmp    eax,0xf39721b7
  412b2c:	arpl   WORD PTR [eax],cx
  412b2e:	inc    ebx
  412b2f:	sub    DWORD PTR cs:[edx-0x4],eax
  412b33:	shl    esi,1
  412b35:	out    0x8c,al
  412b37:	mov    cl,0x18
  412b39:	sahf   
  412b3a:	add    bl,BYTE PTR [ecx+0x64d56e2c]
  412b40:	sub    al,dl
  412b42:	pusha  
  412b43:	ds pop esi
  412b45:	ja     0x412b44
  412b47:	push   0xbe7af6a9
  412b4c:	outs   dx,DWORD PTR ds:[esi]
  412b4d:	jb     0x412b56
  412b4f:	imul   ebx,esi,0x37
  412b52:	test   eax,0xa3776eab
  412b57:	sbb    BYTE PTR [edi-0x759bf3d1],ah
  412b5d:	mov    ch,0x48
  412b5f:	fs pop esp
  412b61:	dec    ecx
  412b62:	adc    eax,0x81c19cbb
  412b67:	jno    0x412b17
  412b69:	sbb    eax,0xd14f3e4f
  412b6e:	pop    esi
  412b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b70:	pop    esp
  412b71:	jo     0x412b7f
  412b73:	xor    eax,0xbc81d284
  412b78:	jmp    DWORD PTR [ecx]
  412b7a:	jg     0x412b44
  412b7c:	push   0xdbc0e311
  412b81:	push   ebx
  412b82:	std    
  412b83:	jmp    0x412b66
  412b85:	jecxz  0x412b40
  412b87:	lods   al,BYTE PTR ds:[esi]
  412b88:	mov    edx,0x23dbdf20
  412b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b8e:	dec    esi
  412b8f:	cdq    
  412b90:	mov    eax,0x4e4ab64b
  412b95:	outs   dx,BYTE PTR ds:[esi]
  412b96:	xchg   edi,eax
  412b97:	xchg   ebp,eax
  412b98:	xor    eax,0x50fb7945
  412b9d:	retf   
  412b9e:	test   eax,0x5fe1ff
  412ba3:	pushf  
  412ba4:	xor    al,0xd0
  412ba6:	scas   al,BYTE PTR es:[edi]
  412ba7:	and    al,0x1b
  412ba9:	mov    dh,0x1e
  412bab:	add    eax,0x625c058b
  412bb0:	push   ds
  412bb1:	and    DWORD PTR [esi+0x67337746],ecx
  412bb7:	test   BYTE PTR cs:[ecx-0x6fbbd195],bl
  412bbe:	mov    esi,0xde872724
  412bc3:	shl    DWORD PTR [ebp+0x5ca8ca2e],0x27
  412bca:	retf   
  412bcb:	fs pop eax
  412bcd:	jae    0x412c3b
  412bcf:	es inc edi
  412bd1:	mov    esp,0xe2a2e9c6
  412bd6:	mov    ds:0x67b68432,al
  412bdb:	shr    ecx,cl
  412bdd:	jle    0x412bec
  412bdf:	or     eax,0x5da96241
  412be4:	sahf   
  412be5:	pop    ss
  412be6:	xchg   edx,eax
  412be7:	pop    esp
  412be8:	cs pop ebx
  412bea:	retf   0xfba7
  412bed:	sbb    al,0x2f
  412bf0:	sbb    eax,0xbbc9224
  412bf5:	sub    DWORD PTR [edx],esp
  412bf7:	loopne 0x412b9f
  412bf9:	test   BYTE PTR [ebp+0x2862ea4d],al
  412bff:	pushf  
  412c00:	into   
  412c01:	xchg   ebx,eax
  412c02:	mov    eax,0x953c5b59
  412c07:	cmp    edx,ecx
  412c09:	and    esi,0xffffffc8
  412c0c:	cmp    al,0x5b
  412c0e:	mov    dh,0x7
  412c10:	mov    ds:0x102bcd64,al
  412c15:	adc    DWORD PTR [ebp+0x76],ebx
  412c18:	mov    ebx,0x1fe250f4
  412c1d:	jg     0x412bda
  412c1f:	cwde   
  412c20:	and    eax,0xcb6507b6
  412c25:	call   0x5cc4:0x6f8611a2
  412c2c:	sub    al,0xbd
  412c2e:	aas    
  412c2f:	xlat   BYTE PTR ds:[ebx]
  412c30:	les    ecx,FWORD PTR [edx+0xaaed7dc]
  412c36:	sbb    DWORD PTR [ecx],0x3a06e408
  412c3c:	loope  0x412c2e
  412c3e:	pop    edx
  412c3f:	cld    
  412c40:	jb     0x412c1a
  412c42:	sbb    ecx,DWORD PTR [esi-0x58817e41]
  412c48:	js     0x412caf
  412c4a:	inc    ebp
  412c4b:	lock dec esp
  412c4d:	xor    al,0xe9
  412c4f:	push   ss
  412c50:	loop   0x412caa
  412c52:	js     0x412bd8
  412c54:	mov    eax,ds:0x64034df6
  412c59:	sub    eax,DWORD PTR [eax]
  412c5b:	rol    bh,0xe5
  412c5e:	jmp    0x412bf8
  412c60:	fmul   DWORD PTR [esi+0x40]
  412c63:	sbb    eax,0xa053a5e4
  412c68:	sub    DWORD PTR [eax],esi
  412c6a:	mov    esp,0x94b5c3a3
  412c6f:	hlt    
  412c70:	mov    esi,0x5bc3ae45
  412c75:	leave  
  412c76:	xor    edi,eax
  412c78:	rcl    DWORD PTR [ebp+0x182ea5a5],cl
  412c7e:	and    eax,0xc3ae99f4
  412c83:	mov    al,0xc5
  412c85:	mov    dh,0x32
  412c87:	xchg   ecx,eax
  412c88:	fldlg2 
  412c8a:	stc    
  412c8b:	jae    0x412cae
  412c8d:	in     al,dx
  412c8e:	js     0x412c9c
  412c90:	lock js 0x412c7f
  412c93:	pop    esi
  412c94:	mov    ds:0x1c02444c,al
  412c99:	jg     0x412c26
  412c9b:	nop
  412c9c:	sub    eax,0xc6ac874b
  412ca1:	pop    ecx
  412ca2:	dec    edi
  412ca3:	mov    eax,ds:0x8f58ff0
  412ca8:	repnz iret 
  412caa:	test   edi,edi
  412cac:	test   DWORD PTR [esp+edi*1+0x47],edi
  412cb0:	dec    ebp
  412cb1:	adc    al,0x3
  412cb3:	and    ecx,DWORD PTR [ebp+0x4a5e8756]
  412cb9:	lea    esi,[ebx-0x674268a1]
  412cbf:	jle    0x412d1c
  412cc1:	(bad)  
  412cc2:	push   ds
  412cc3:	cmp    edi,DWORD PTR [ebx-0x6d]
  412cc6:	fld    DWORD PTR [ebx+0x10]
  412cc9:	mov    ebp,0xc767b262
  412cce:	shl    DWORD PTR [esi-0x27],1
  412cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cd2:	data16 jge 0x412d04
  412cd5:	push   cs
  412cd6:	inc    ebx
  412cd7:	aaa    
  412cd8:	clc    
  412cd9:	aas    
  412cda:	pop    esi
  412cdb:	fmul   st(1),st
  412cdd:	pop    edx
  412cde:	repz aaa 
  412ce0:	loope  0x412cc6
  412ce2:	push   esi
  412ce3:	xchg   BYTE PTR [esi+ecx*1],ah
  412ce6:	mov    ecx,0xedb3a9d5
  412ceb:	add    ebx,DWORD PTR [ebx+0x159d2b80]
  412cf1:	or     dh,BYTE PTR [edx-0x23]
  412cf4:	sbb    bl,cl
  412cf6:	rol    BYTE PTR [ebp+0x66],1
  412cf9:	push   ebp
  412cfa:	gs stos DWORD PTR es:[edi],eax
  412cfc:	push   es
  412cfd:	or     eax,0x75e4ff8c
  412d02:	jae    0x412cf4
  412d04:	push   cs
  412d05:	call   0x28910970
  412d0a:	sar    DWORD PTR [eax+0x56],cl
  412d0d:	stc    
  412d0e:	or     al,0x54
  412d10:	sbb    dh,BYTE PTR [eax+0x79]
  412d13:	jmp    FWORD PTR [ecx+0x3e]
  412d16:	enter  0xdf14,0x96
  412d1a:	scas   al,BYTE PTR es:[edi]
  412d1b:	not    edi
  412d1d:	cmp    bl,BYTE PTR [edx-0x51]
  412d20:	lea    ebp,[ecx-0x3]
  412d23:	(bad)  
  412d24:	idiv   BYTE PTR [eax+0x7e]
  412d27:	in     eax,dx
  412d28:	ficomp DWORD PTR ds:0xa5f9f30d
  412d2e:	sub    bh,bh
  412d30:	or     BYTE PTR [esi],ch
  412d32:	ja     0x412d5e
  412d34:	mov    ds:0x83b14dc2,al
  412d39:	pop    esp
  412d3a:	arpl   WORD PTR [eax+0x19e9711b],cx
  412d40:	xchg   esi,eax
  412d41:	mov    fs:0xdf4d5c90,eax
  412d47:	cmp    esi,ecx
  412d49:	jns    0x412d11
  412d4b:	cli    
  412d4c:	jae    0x412d0c
  412d4e:	sub    bl,BYTE PTR [ecx+0x37e8c8bb]
  412d54:	shl    BYTE PTR [edx+edi*2],0xbf
  412d58:	outs   dx,DWORD PTR ds:[esi]
  412d59:	jne    0x412d1b
  412d5b:	cld    
  412d5c:	xchg   ebp,eax
  412d5d:	imul   esi,DWORD PTR [eax],0xffffffee
  412d60:	fist   DWORD PTR [ebx+eax*8]
  412d63:	es push ebp
  412d65:	jp     0x412d36
  412d67:	mov    edx,0xc38953b0
  412d6c:	pop    esi
  412d6d:	(bad)  
  412d6e:	mov    al,gs:0x525e61ad
  412d74:	cmp    BYTE PTR [esp+eax*1-0x5fad094c],0xc0
  412d7c:	data16 jmp 0x412d82
  412d7f:	and    eax,0xb9b4c80c
  412d84:	sbb    BYTE PTR [eax+0x13],bh
  412d87:	jbe    0x412ddc
  412d89:	xor    eax,0x6e7bba12
  412d8e:	loop   0x412d9b
  412d90:	bnd jo 0x412e04
  412d93:	push   ebx
  412d94:	ds push cs
  412d96:	cmp    al,0x6d
  412d98:	jnp    0x412de3
  412d9a:	fxam   
  412d9c:	cmp    DWORD PTR [edx-0x37],ebp
  412d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412da0:	nop
  412da1:	lods   al,BYTE PTR ds:[esi]
  412da2:	dec    ebp
  412da3:	in     eax,dx
  412da4:	sbb    DWORD PTR [ecx],eax
  412da6:	inc    esi
  412da7:	dec    edx
  412da8:	jno    0x412df1
  412daa:	inc    esp
  412dab:	sub    BYTE PTR [ebx+edx*4-0x3b9045c9],dh
  412db2:	push   edx
  412db3:	rcr    DWORD PTR [ecx],1
  412db5:	lods   al,BYTE PTR ds:[esi]
  412db6:	sar    BYTE PTR [edx],cl
  412db8:	xor    esp,0x59
  412dbb:	push   es
  412dbc:	das    
  412dbd:	dec    ecx
  412dbe:	sbb    eax,0x8fcbb7b
  412dc3:	cmp    eax,0xc1828ab
  412dc8:	pop    ds
  412dc9:	inc    esi
  412dca:	test   eax,0xbc1672ea
  412dcf:	clc    
  412dd0:	(bad)  
  412dd1:	sub    al,0x11
  412dd3:	jp     0x412e44
  412dd5:	in     eax,0xb3
  412dd7:	(bad)  
  412dd8:	call   0x9681f78e
  412ddd:	int3   
  412dde:	inc    edi
  412ddf:	mov    ebp,0x751097d8
  412de4:	into   
  412de5:	inc    eax
  412de6:	mov    ds:0x83cb0bd5,al
  412deb:	call   0xfd11:0xb460227d
  412df2:	adc    al,0xab
  412df4:	je     0x412e1f
  412df6:	mov    ecx,0x68e763e4
  412dfb:	clc    
  412dfc:	ds mov dh,0x75
  412dff:	jae    0x412e1f
  412e01:	xchg   ebp,eax
  412e02:	and    eax,0x8288538e
  412e07:	sbb    DWORD PTR [edi+0x14],edx
  412e0a:	jae    0x412e83
  412e0c:	into   
  412e0d:	and    BYTE PTR [ecx],al
  412e0f:	scas   eax,DWORD PTR es:[edi]
  412e10:	fisubr DWORD PTR [esi-0x3]
  412e13:	gs add eax,0xc66a87f9
  412e19:	xor    DWORD PTR [esi-0x4717bdbd],ebp
  412e1f:	push   edi
  412e20:	ja     0xc1fff18f
  412e26:	pushf  
  412e27:	cmp    DWORD PTR [edx*1-0x60cd63a6],ebx
  412e2e:	jb     0x412e09
  412e30:	retf   
  412e31:	popf   
  412e32:	and    BYTE PTR [eax+0x239fda4e],bl
  412e38:	cmp    edx,DWORD PTR [edx+0x7b5a9ccd]
  412e3e:	jmp    0x2cec:0xf8eba7ef
  412e45:	push   ss
  412e46:	add    BYTE PTR [edx+0x3b],ah
  412e49:	pop    edi
  412e4a:	xchg   ebx,eax
  412e4b:	lahf   
  412e4c:	pop    esi
  412e4d:	addr16 jo 0x412e4a
  412e50:	jae    0x412e74
  412e52:	shl    DWORD PTR [ebx],1
  412e54:	mov    cl,0x94
  412e56:	lods   al,BYTE PTR ds:[esi]
  412e57:	out    dx,eax
  412e58:	sub    eax,eax
  412e5a:	stos   BYTE PTR es:[edi],al
  412e5b:	and    ecx,DWORD PTR [esi-0x7a]
  412e5e:	inc    esp
  412e5f:	gs push 0x858936b3
  412e65:	(bad)  
  412e66:	in     al,0xc1
  412e68:	cmp    eax,0x75f7f806
  412e6d:	sbb    BYTE PTR [edi+0x65],bh
  412e70:	int3   
  412e71:	and    eax,0x49c89ff2
  412e76:	push   ebx
  412e77:	mov    eax,0xa64d5813
  412e7c:	and    ebx,ecx
  412e7e:	retf   0xdb8
  412e81:	push   esp
  412e82:	cwde   
  412e83:	add    esi,DWORD PTR [ecx+0x56]
  412e86:	fsub   DWORD PTR [edx]
  412e88:	dec    esp
  412e89:	mov    esi,0x3f826665
  412e8e:	popf   
  412e8f:	mov    edx,0xd7005ef0
  412e94:	add    ch,ch
  412e96:	aaa    
  412e97:	sbb    DWORD PTR ds:0xb33a2df4,edi
  412e9d:	outs   dx,BYTE PTR ds:[esi]
  412e9e:	push   ecx
  412e9f:	out    dx,eax
  412ea0:	repnz xchg ecx,eax
  412ea2:	xor    DWORD PTR [ebx+0x3c],ebp
  412ea5:	aam    0xe3
  412ea7:	xlat   BYTE PTR ds:[ebx]
  412ea8:	stos   DWORD PTR es:[edi],eax
  412ea9:	pop    ds
  412eaa:	(bad)  
  412eab:	jp     0x412e74
  412ead:	loope  0x412ef5
  412eaf:	inc    ecx
  412eb0:	ja     0x412e3b
  412eb2:	je     0x412e61
  412eb4:	je     0x412ee7
  412eb6:	mov    bh,dl
  412eb8:	inc    edx
  412eb9:	mov    ds:0x51c260d1,eax
  412ebe:	push   esi
  412ebf:	sahf   
  412ec0:	inc    edi
  412ec1:	sbb    al,0xc8
  412ec3:	adc    ah,BYTE PTR [edi+0x6b29d9e7]
  412ec9:	mov    ebx,0xb6d8d6a2
  412ece:	xor    al,0x7a
  412ed0:	cwde   
  412ed1:	sub    ecx,ebx
  412ed3:	jmp    0x236:0x59d2f1c5
  412eda:	add    cl,BYTE PTR [eax-0x78]
  412edd:	call   0xfa96432b
  412ee2:	xchg   edx,eax
  412ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ee4:	out    dx,eax
  412ee5:	pop    eax
  412ee6:	pushf  
  412ee7:	cmc    
  412ee8:	adc    eax,DWORD PTR [esi-0x6b2dfdc5]
  412eee:	call   DWORD PTR [ecx+edi*4+0x8]
  412ef2:	pop    esp
  412ef3:	aad    0x6a
  412ef5:	shr    ebx,1
  412ef7:	fnstsw WORD PTR fs:[esi+0x707b710c]
  412efe:	rcl    esi,cl
  412f00:	pop    esi
  412f01:	arpl   bx,di
  412f03:	push   ecx
  412f04:	js     0x412e88
  412f06:	stc    
  412f07:	jo     0x412ee1
  412f09:	dec    esi
  412f0a:	sbb    DWORD PTR [edx-0x25],0xc6b4e061
  412f11:	cmp    eax,0x4b9eb6c1
  412f16:	mov    edi,0x31b3c874
  412f1b:	fisttp WORD PTR [esp+edx*2-0x2a16c5c3]
  412f22:	daa    
  412f23:	push   0x54
  412f25:	lods   al,BYTE PTR ds:[esi]
  412f26:	(bad)  
  412f27:	xchg   ecx,eax
  412f28:	push   edi
  412f29:	std    
  412f2a:	(bad)  
  412f2b:	ja     0x412f96
  412f2d:	mov    cl,0x8b
  412f2f:	cmc    
  412f30:	adc    eax,DWORD PTR [edi+ebp*2]
  412f33:	les    edi,FWORD PTR [eax+0x5b]
  412f36:	call   0xaeb0:0x8c38f328
  412f3d:	sti    
  412f3e:	outs   dx,DWORD PTR ds:[esi]
  412f3f:	mov    edx,edx
  412f41:	into   
  412f42:	sbb    DWORD PTR [ecx-0x3eca2827],ebp
  412f48:	xlat   BYTE PTR ds:[ebx]
  412f49:	inc    edi
  412f4a:	loope  0x412efe
  412f4c:	(bad)  
  412f4d:	lods   al,BYTE PTR ds:[esi]
  412f4e:	sbb    ebp,ebx
  412f50:	fld    DWORD PTR [edx]
  412f52:	lock test BYTE PTR [ebp+0x8],dl
  412f56:	xchg   edi,ebp
  412f58:	dec    esp
  412f59:	rcl    DWORD PTR [ecx-0x30],0x1
  412f5d:	and    BYTE PTR ds:0x789f1f7d,bh
  412f63:	mov    BYTE PTR [ebx+0x86e21eb],ah
  412f69:	jno    0x412fa8
  412f6b:	push   ecx
  412f6c:	push   ss
  412f6d:	pop    ebx
  412f6e:	ins    DWORD PTR es:[edi],dx
  412f6f:	mov    edx,0x753b66bf
  412f74:	mov    bh,0xeb
  412f76:	push   edx
  412f77:	xor    al,BYTE PTR [edx]
  412f79:	dec    ecx
  412f7a:	jp     0x412f4e
  412f7c:	loope  0x412fc3
  412f7e:	dec    esp
  412f7f:	push   0xfffffffb
  412f81:	shr    BYTE PTR [eax+0x3093c12c],0x1b
  412f88:	mov    edi,0xa101638d
  412f8d:	inc    ebx
  412f8e:	sbb    DWORD PTR [ebx-0x6b],edi
  412f91:	and    al,0x67
  412f93:	mov    al,0x6b
  412f95:	cmp    DWORD PTR [ecx-0x2b],edx
  412f98:	add    DWORD PTR ds:0x497bfea4,edi
  412f9e:	jmp    0x539:0x3577a96c
  412fa5:	sahf   
  412fa6:	ror    BYTE PTR [esi+edx*8-0x1c],0x50
  412fab:	inc    edx
  412fac:	add    DWORD PTR [edx-0x20],esi
  412faf:	sbb    BYTE PTR [esi-0x65805b0e],ch
  412fb5:	cmp    eax,DWORD PTR [edx-0x2b]
  412fb8:	mov    bl,0xde
  412fba:	in     al,dx
  412fbb:	in     al,dx
  412fbc:	ins    BYTE PTR es:[edi],dx
  412fbd:	scas   al,BYTE PTR es:[edi]
  412fbe:	sbb    eax,0x4e22f22f
  412fc3:	jno    0x412f72
  412fc5:	xchg   esp,eax
  412fc6:	xor    ebx,DWORD PTR [edi]
  412fc8:	push   ds
  412fc9:	xchg   edi,eax
  412fca:	aaa    
  412fcb:	mov    ecx,0xabd251c3
  412fd0:	imul   esi,DWORD PTR ds:0xe95131ce,0x73
  412fd8:	sti    
  412fd9:	mov    ecx,0x9e32dc2b
  412fde:	mov    cl,0xfd
  412fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe1:	in     al,dx
  412fe2:	push   ds
  412fe3:	add    edi,edi
  412fe5:	cmp    al,0xe7
  412fe7:	ds nop
  412fe9:	and    al,0xd0
  412feb:	jno    0x412fce
  412fed:	(bad)  
  412fee:	sti    
  412fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff0:	out    dx,eax
  412ff1:	stos   DWORD PTR es:[edi],eax
  412ff2:	scas   al,BYTE PTR es:[edi]
  412ff3:	ror    DWORD PTR [edi],1
  412ff5:	(bad)  
  412ff6:	jne    0x412fcd
  412ff8:	mov    bl,0xe3
  412ffa:	in     al,0x96
  412ffc:	xor    dl,BYTE PTR [edi+0x42807fbe]
  413002:	pop    ds
  413003:	dec    esp
  413004:	jle    0x412fd6
  413006:	nop
  413007:	(bad)  
  413008:	sub    ebx,DWORD PTR [ecx+ebp*8]
  41300b:	mov    bh,0x9
  41300d:	test   eax,0xedce90f5
  413012:	push   ebx
  413013:	jno    0x412fb0
  413015:	test   al,0x25
  413017:	or     BYTE PTR [eax+eiz*8],dh
  41301a:	inc    eax
  41301b:	xor    ch,BYTE PTR [ecx+0x67b193a6]
  413021:	shr    DWORD PTR [ecx],0xb9
  413024:	push   ebx
  413025:	cwde   
  413026:	hlt    
  413027:	mov    ch,0x21
  413029:	into   
  41302a:	mov    esp,0xa5c56e54
  41302f:	(bad)  
  413030:	dec    ecx
  413031:	adc    BYTE PTR [edi+0x4d],0xea
  413035:	enter  0x5b78,0xd0
  413039:	call   0x6b7d7402
  41303e:	pmaxsw mm1,QWORD PTR [ecx-0x7a125b35]
  413045:	bound  edi,QWORD PTR [ebx]
  413047:	or     bl,al
  413049:	sbb    esp,DWORD PTR [edx-0x64]
  41304c:	or     BYTE PTR [edx],al
  41304e:	and    dl,BYTE PTR [edx]
  413050:	cld    
  413051:	push   eax
  413052:	pop    ebx
  413053:	mov    esp,0x5de84de
  413058:	push   0x61
  41305a:	mov    edi,ebp
  41305c:	lds    esp,FWORD PTR [eax+eax*2]
  41305f:	ficom  WORD PTR [ecx-0x29a5bcc6]
  413065:	and    edi,eax
  413067:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413069:	inc    esi
  41306a:	fisub  DWORD PTR [esi+0x6dd5ed5e]
  413070:	sub    bh,BYTE PTR [edi+0x2f2f89b9]
  413076:	push   ss
  413077:	xor    eax,0xce165eff
  41307c:	jno    0x413027
  41307e:	inc    ebx
  41307f:	in     al,0x83
  413081:	mov    esi,0x619962e3
  413086:	pop    edx
  413087:	xor    cl,al
  413089:	test   eax,0x1da421c3
  41308e:	bound  ebp,QWORD PTR [esi-0x14cd353b]
  413094:	dec    esi
  413095:	test   eax,0xb2b0e4bc
  41309a:	mov    bl,0x69
  41309c:	sbb    BYTE PTR [esp+edi*1+0x5d8d220c],cl
  4130a3:	in     eax,0xe6
  4130a5:	cmp    DWORD PTR [ecx],eax
  4130a7:	sbb    BYTE PTR [esi],ah
  4130a9:	mov    dl,0x50
  4130ab:	loopne 0x41311b
  4130ad:	push   0x526a08ef
  4130b2:	rol    dh,cl
  4130b4:	enter  0x5966,0x4a
  4130b8:	xor    DWORD PTR ds:0x8b2a187b,ecx
  4130be:	xchg   edi,eax
  4130bf:	mov    ecx,0xb01ff9b8
  4130c4:	or     al,BYTE PTR ds:0x643a5da5
  4130ca:	and    eax,edi
  4130cc:	push   ds
  4130cd:	jae    0x413065
  4130cf:	stos   BYTE PTR es:[edi],al
  4130d0:	cmp    dh,bl
  4130d2:	inc    esi
  4130d3:	dec    eax
  4130d4:	pop    edi
  4130d5:	push   edi
  4130d6:	inc    esi
  4130d7:	sbb    ebx,DWORD PTR [eax]
  4130d9:	ja     0x413138
  4130db:	push   edi
  4130dc:	arpl   WORD PTR [eax-0x56],bx
  4130df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130e0:	mov    al,0x4a
  4130e2:	icebp  
  4130e3:	adc    BYTE PTR [ecx+0x30542f31],dl
  4130e9:	lods   eax,DWORD PTR ds:[esi]
  4130ea:	jne    0x41309a
  4130ec:	or     al,0x21
  4130ee:	xchg   edi,eax
  4130ef:	retf   
  4130f0:	pop    ds
  4130f1:	jne    0x413135
  4130f3:	jbe    0x413169
  4130f5:	inc    ebx
  4130f6:	xchg   ebp,eax
  4130f7:	cs ds sbb eax,0xde034872
  4130fe:	push   ds
  4130ff:	js     0x41312f
  413101:	xchg   ebx,eax
  413102:	ins    BYTE PTR es:[edi],dx
  413103:	popa   
  413104:	xchg   edi,eax
  413105:	call   0x10be241
  41310a:	mov    dh,0x79
  41310c:	in     eax,0x3b
  41310e:	dec    ecx
  41310f:	sti    
  413110:	sub    dl,BYTE PTR [ebx-0x56]
  413113:	xchg   edx,eax
  413114:	lds    ebp,FWORD PTR [esi]
  413116:	xchg   ecx,eax
  413117:	xor    DWORD PTR ds:0x6c4e0bca,0x4ac00f6e
  413121:	push   ss
  413122:	mov    ebp,0x8cc49dbf
  413127:	add    bh,BYTE PTR [eax+ebp*1]
  41312a:	in     eax,dx
  41312b:	fisubr DWORD PTR ds:0x3767f22c
  413131:	or     eax,0xa3125bc0
  413136:	rol    DWORD PTR [ebx-0x7e],1
  413139:	shr    DWORD PTR [ecx+0x71],1
  41313c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41313d:	adc    dh,BYTE PTR [edx+ebx*8]
  413140:	push   esp
  413141:	sub    edi,DWORD PTR [edi-0x732b50b2]
  413147:	inc    esi
  413148:	adc    BYTE PTR [ebp+edi*1+0x7b],0x5
  41314d:	test   ebx,0xc64335c8
  413153:	push   DWORD PTR [ebp-0x72c9c729]
  413159:	ss mov ch,0xdc
  41315c:	call   FWORD PTR [ecx-0x13238636]
  413162:	xor    bl,BYTE PTR [ebx]
  413164:	fild   WORD PTR [edx+0x7a]
  413167:	adc    al,0x11
  413169:	ja     0x413123
  41316b:	jle    0x413193
  41316d:	dec    ebx
  41316e:	push   ebp
  41316f:	mov    BYTE PTR [edi+0x218828d4],dl
  413175:	dec    esp
  413176:	adc    eax,0x9a7f00a9
  41317b:	xor    al,0x9e
  41317d:	jmp    0x413125
  41317f:	adc    DWORD PTR [edx],eax
  413181:	cwde   
  413182:	mov    DWORD PTR [ebx+esi*1],esp
  413185:	ds hlt 
  413187:	pop    edi
  413188:	push   edx
  413189:	sbb    eax,0x553db4e9
  41318e:	shr    DWORD PTR [edi+0x19883424],0x4a
  413195:	outs   dx,DWORD PTR ds:[esi]
  413196:	sbb    DWORD PTR [esi+0x22],edi
  413199:	jle    0x4131f9
  41319b:	inc    esp
  41319c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319d:	dec    ebp
  41319f:	outs   dx,DWORD PTR ds:[esi]
  4131a0:	dec    edi
  4131a1:	mov    esp,0x338fdac1
  4131a6:	mov    esi,0xf1b81a1a
  4131ab:	sbb    al,0xff
  4131ad:	popa   
  4131ae:	inc    ebp
  4131af:	jnp    0x413173
  4131b1:	sub    esp,DWORD PTR [esi+ebp*1]
  4131b4:	stos   BYTE PTR es:[edi],al
  4131b5:	inc    ebx
  4131b6:	cs ins DWORD PTR es:[edi],dx
  4131b8:	mov    ch,0x5b
  4131ba:	es cmp eax,0xadc89c22
  4131c0:	aas    
  4131c1:	dec    ebx
  4131c2:	jno    0x413221
  4131c4:	test   eax,0x8a0c884
  4131c9:	cwde   
  4131ca:	(bad)  [edi]
  4131cc:	sbb    eax,0xde09f041
  4131d1:	rcr    BYTE PTR ds:0x40622d3a,0x3
  4131d8:	sub    edi,DWORD PTR [ebp-0x3e94c85f]
  4131de:	xchg   BYTE PTR [ebx-0xa9ece84],dh
  4131e4:	ret    
  4131e5:	pusha  
  4131e6:	je     0x413244
  4131e8:	mov    bh,0x34
  4131ea:	stos   DWORD PTR es:[edi],eax
  4131eb:	cmp    DWORD PTR [edi+0x1c],eax
  4131ee:	js     0x41322d
  4131f0:	out    dx,al
  4131f1:	adc    bh,BYTE PTR [edx+0x19]
  4131f4:	mov    ebx,0x2c757c47
  4131f9:	xchg   edi,eax
  4131fa:	adc    ebx,esi
  4131fc:	push   cs
  4131fd:	pop    ecx
  4131fe:	test   BYTE PTR [esi-0x31],cl
  413201:	or     BYTE PTR [esi+0x40],ch
  413204:	getsec 
  413206:	pop    ss
  413207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413208:	mov    edx,0xaf5ac661
  41320d:	fwait
  41320e:	sub    esp,DWORD PTR [ebx]
  413210:	jb     0x4131b1
  413212:	mov    edi,DWORD PTR [edx]
  413214:	sbb    esp,0xfffffff4
  413217:	(bad)  
  413218:	xlat   BYTE PTR ds:[ebx]
  413219:	xchg   edx,eax
  41321a:	int3   
  41321b:	xor    eax,0xb7fd6843
  413220:	lds    esp,FWORD PTR [eax]
  413222:	or     DWORD PTR [edx-0x1a125cd3],ebp
  413228:	ret    
  413229:	sbb    al,0x9b
  41322b:	jb     0x413225
  41322d:	adc    dh,BYTE PTR [esi-0x6bc236]
  413233:	lahf   
  413234:	push   edx
  413235:	es mov dh,0x5a
  413238:	cwde   
  413239:	mul    esp
  41323b:	push   0xd4280b1f
  413240:	mov    edx,0x3738d72
  413245:	jae    0x41322a
  413247:	cli    
  413248:	ja     0x413244
  41324a:	jg     0x41325d
  41324c:	cmp    dx,WORD PTR [edi]
  41324f:	leave  
  413250:	lock pushf 
  413252:	fchs   
  413254:	or     al,0x5c
  413256:	jmp    0xd12f:0x29ea05b0
  41325d:	push   es
  41325e:	or     ch,BYTE PTR [ecx]
  413260:	ja     0x4132ca
  413262:	fcmovbe st,st(2)
  413264:	jg     0x413237
  413266:	inc    edi
  413267:	pop    ebp
  413268:	ret    
  413269:	loop   0x413276
  41326b:	mov    cl,0xb8
  41326d:	test   DWORD PTR [ebp+0x3ebce3da],ebp
  413273:	pop    edx
  413274:	push   cs
  413275:	test   BYTE PTR [ebx+0x3b],bl
  413278:	adc    bh,ch
  41327a:	ins    BYTE PTR es:[edi],dx
  41327b:	mov    al,0x36
  41327d:	rcl    DWORD PTR [ebp-0x39],0xd1
  413281:	test   DWORD PTR [ebx-0x78],ecx
  413284:	push   ebp
  413285:	sahf   
  413286:	xchg   ecx,eax
  413287:	call   0x1520f973
  41328c:	lock push ds
  41328e:	lds    eax,FWORD PTR [esi]
  413290:	adc    ebx,ebx
  413292:	enter  0xd9fa,0x25
  413296:	jp     0x4132f3
  413298:	(bad)  
  413299:	cwde   
  41329a:	xor    DWORD PTR [edi+0x70187700],esi
  4132a0:	retf   0x98a4
  4132a3:	jo     0x4132d0
  4132a5:	fs jecxz 0x4132f2
  4132a8:	pop    esp
  4132a9:	clc    
  4132aa:	dec    ebp
  4132ab:	call   0x3dee:0x5468588b
  4132b2:	cmp    al,0x36
  4132b4:	push   edx
  4132b5:	xchg   edx,eax
  4132b6:	xchg   ebp,eax
  4132b7:	imul   BYTE PTR [edi+edi*1-0x4b]
  4132bb:	stc    
  4132bc:	(bad)  
  4132bd:	rcr    DWORD PTR [ecx-0xd26cd16],cl
  4132c3:	mov    edx,0x8fffc0e0
  4132c8:	push   esi
  4132c9:	jl     0x413282
  4132cb:	xchg   esp,eax
  4132cc:	clc    
  4132cd:	cld    
  4132ce:	or     esi,esp
  4132d0:	xchg   ebx,eax
  4132d1:	(bad)  
  4132d2:	mov    ecx,0x8b7d07ba
  4132d7:	and    eax,0x8b15abf9
  4132dc:	inc    esi
  4132dd:	inc    ebx
  4132de:	(bad)  
  4132df:	sbb    edi,DWORD PTR [ebp+0x1e]
  4132e2:	aad    0xa4
  4132e4:	jnp    0x413348
  4132e6:	int3   
  4132e7:	push   esi
  4132e8:	lea    edi,[ebp+0x63]
  4132eb:	pop    ds
  4132ec:	and    DWORD PTR [edi+0xa],esp
  4132ef:	mov    bh,0x7a
  4132f1:	es scas eax,DWORD PTR es:[edi]
  4132f3:	xor    cl,cl
  4132f5:	les    ebp,FWORD PTR [esi-0x63e786a1]
  4132fb:	jmp    0x5e0f:0x1bbe4711
  413302:	sub    ecx,DWORD PTR [eax]
  413304:	dec    ebx
  413305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413306:	outs   dx,DWORD PTR ds:[esi]
  413307:	gs inc eax
  413309:	pop    es
  41330a:	mov    esi,0x28bac68d
  41330f:	dec    ebx
  413310:	das    
  413311:	shl    DWORD PTR [edx+0x1],0xd1
  413315:	add    bh,BYTE PTR [ecx-0x6b9a3a2c]
  41331b:	xor    dl,BYTE PTR [ecx]
  41331d:	shl    DWORD PTR [ecx],0xa4
  413320:	stos   DWORD PTR es:[edi],eax
  413321:	out    dx,eax
  413322:	test   bl,dh
  413324:	xor    BYTE PTR [ebx],ch
  413326:	icebp  
  413327:	push   edi
  413328:	and    DWORD PTR [edx],ebp
  41332a:	stc    
  41332b:	pop    edx
  41332c:	adc    al,dh
  41332e:	jg     0x4132d8
  413330:	dec    eax
  413331:	mov    WORD PTR [esi+0x1a],fs
  413334:	arpl   WORD PTR [esi],sp
  413336:	mov    dl,0x45
  413338:	pop    edx
  413339:	push   edi
  41333a:	dec    edi
  41333b:	repnz ins BYTE PTR es:[edi],dx
  41333d:	adc    al,0x56
  41333f:	int3   
  413340:	sbb    BYTE PTR [esi-0x66ca75d3],ah
  413346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413347:	fistp  DWORD PTR [edi+0x4f]
  41334a:	bound  edx,QWORD PTR ds:0xb72d9a06
  413350:	mov    dl,0x4
  413352:	jp     0x4132ea
  413354:	sbb    ecx,DWORD PTR [ebx+0x1925f580]
  41335a:	push   0xffffff94
  41335c:	fcom   DWORD PTR [esi-0x6ae9bf1f]
  413362:	ss push ebx
  413364:	je     0x413350
  413366:	or     ebx,DWORD PTR [ebx-0x600dd28c]
  41336c:	or     al,0x91
  41336e:	inc    esp
  41336f:	pop    ebp
  413370:	call   0xcee61105
  413375:	add    DWORD PTR [edx-0x341bf3e4],edi
  41337b:	xor    bl,cl
  41337d:	dec    ecx
  41337e:	mov    ecx,0xde6828b9
  413383:	mov    ch,0x22
  413385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413386:	inc    esi
  413387:	pop    edi
  413388:	pop    ecx
  413389:	mov    ah,BYTE PTR [esi-0x20]
  41338c:	inc    esp
  41338d:	fistp  WORD PTR [eax+0x79]
  413390:	push   esi
  413391:	pop    eax
  413392:	ror    dh,1
  413394:	out    dx,eax
  413395:	mov    esi,DWORD PTR [eax*8-0x10d7cb7b]
  41339c:	push   ds
  41339d:	stos   DWORD PTR es:[edi],eax
  41339e:	jp     0x413342
  4133a0:	repz push 0xadbe1aa2
  4133a6:	adc    al,0x1f
  4133a8:	sti    
  4133a9:	or     eax,0x649c4b5
  4133ae:	sbb    al,0xdc
  4133b0:	dec    ebp
  4133b1:	push   ebp
  4133b2:	pop    ebx
  4133b3:	cmp    BYTE PTR [esp+ebp*8-0x49],ah
  4133b7:	cmc    
  4133b8:	pop    ebx
  4133b9:	(bad)  
  4133bb:	dec    ebp
  4133bc:	daa    
  4133bd:	pop    ebx
  4133be:	retf   
  4133bf:	ja     0x875a5b8
  4133c5:	leave  
  4133c6:	dec    esp
  4133c7:	mov    edx,0xd8bb99b4
  4133cc:	pop    edi
  4133cd:	into   
  4133ce:	stos   DWORD PTR es:[edi],eax
  4133cf:	dec    edi
  4133d0:	mov    bh,0xee
  4133d2:	js     0x413380
  4133d4:	cld    
  4133d5:	inc    esp
  4133d6:	outs   dx,DWORD PTR ds:[esi]
  4133d7:	push   ss
  4133d8:	sbb    BYTE PTR [eax+0x2f24536d],dh
  4133de:	mov    BYTE PTR [edx+0x1f],ch
  4133e1:	sbb    esi,DWORD PTR [eax+0x11]
  4133e4:	mov    eax,ds:0x6c02ff7f
  4133e9:	aas    
  4133ea:	in     al,0x89
  4133ec:	fisubr DWORD PTR [ebx+0x7de227dd]
  4133f2:	add    BYTE PTR [edi-0x61],cl
  4133f5:	mov    cs,WORD PTR [esi+0x31]
  4133f8:	cmp    dl,bh
  4133fa:	pusha  
  4133fb:	sbb    DWORD PTR [edi],eax
  4133fd:	sbb    edx,ecx
  4133ff:	pop    ds
  413400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413401:	mov    ebp,0xd713050b
  413406:	xchg   ebx,eax
  413407:	and    BYTE PTR [edx-0x20],0xed
  41340b:	jo     0x4133f3
  41340d:	in     eax,0x47
  41340f:	in     al,dx
  413410:	test   DWORD PTR [ebp+eiz*8+0x3efc997b],0xb2a3aa31
  41341b:	xchg   esp,eax
  41341c:	rcl    DWORD PTR [eax],cl
  41341e:	(bad)  
  41341f:	sti    
  413420:	stos   BYTE PTR es:[edi],al
  413421:	jnp    0x4133d5
  413423:	jo     0x4133d0
  413425:	add    al,0x3a
  413427:	xchg   BYTE PTR [ecx+edx*4],al
  41342a:	ins    BYTE PTR es:[edi],dx
  41342b:	bound  esp,QWORD PTR [eax-0x39]
  41342e:	out    dx,al
  41342f:	in     eax,0x90
  413431:	dec    ecx
  413432:	in     eax,0xee
  413434:	jae    0x4133e6
  413436:	lods   al,BYTE PTR ds:[esi]
  413437:	mov    eax,0xbca321b2
  41343c:	jbe    0x4133c3
  41343e:	lock aas 
  413440:	mov    ecx,0x38ed403a
  413445:	or     eax,0x57d87988
  41344a:	call   0xc146:0x15c621f6
  413451:	rcl    ch,cl
  413453:	or     edx,DWORD PTR [edi+0xc9a748]
  413459:	test   BYTE PTR [ebp+0x62ef6b9a],ah
  41345f:	lahf   
  413460:	popf   
  413461:	or     ch,BYTE PTR [eax-0xe]
  413464:	lods   eax,DWORD PTR ds:[esi]
  413465:	out    dx,eax
  413466:	stc    
  413467:	or     dl,dh
  413469:	xchg   ecx,edx
  41346b:	fisubr DWORD PTR [ebx]
  41346d:	aaa    
  41346e:	iret   
  41346f:	loop   0x4134ed
  413471:	jge    0x413418
  413473:	rol    edx,cl
  413475:	in     eax,0xc4
  413477:	jno    0x41343f
  413479:	(bad)  
  41347a:	mov    BYTE PTR [ecx],cl
  41347c:	and    DWORD PTR [ebp-0x2],0x8485fd1b
  413483:	or     esi,DWORD PTR [edi+0x30]
  413486:	adc    eax,0xa844d033
  41348b:	popf   
  41348c:	xor    DWORD PTR [eax-0x584af23a],ebx
  413492:	aas    
  413493:	call   0x454b:0x39a44327
  41349a:	xchg   dh,ch
  41349c:	mov    esp,DWORD PTR [ebx-0x45d1ea2e]
  4134a2:	data16 jle 0x41351c
  4134a5:	mov    bh,0xd8
  4134a7:	jmp    0x413503
  4134a9:	inc    ecx
  4134aa:	int    0xca
  4134ac:	jp     0x4134e7
  4134ae:	mov    ss,edx
  4134b0:	push   eax
  4134b1:	jnp    0x4134f0
  4134b3:	jg     0x413507
  4134b5:	mov    cl,0x20
  4134b7:	call   0x2c95:0x1e4eeef9
  4134be:	mov    ds:0x617c3936,al
  4134c3:	pop    edi
  4134c4:	ds xchg esi,eax
  4134c6:	cs dec edi
  4134c8:	clc    
  4134c9:	retf   
  4134ca:	adc    esp,ebp
  4134cc:	push   0x38
  4134ce:	ret    
  4134cf:	push   ebp
  4134d0:	in     al,dx
  4134d1:	(bad)
  4134d4:	cmp    eax,0xe9d88d58
  4134d9:	mov    ebp,0x410a4cc8
  4134de:	add    ebx,ecx
  4134e0:	and    DWORD PTR [edi-0x706dc91c],esi
  4134e6:	adc    DWORD PTR [ebx-0x70],ebx
  4134e9:	int    0x77
  4134eb:	pop    edi
  4134ec:	outs   dx,DWORD PTR ds:[esi]
  4134ed:	repz sub DWORD PTR [edx+0x73],esi
  4134f1:	mov    eax,DWORD PTR [ecx]
  4134f3:	jmp    0xad3bde8b
  4134f8:	push   ds
  4134f9:	or     eax,0xa752804f
  4134fe:	xor    edx,esp
  413500:	mov    ecx,DWORD PTR [edi]
  413502:	push   es
  413503:	fs sbb bh,0x8
  413507:	sbb    bh,BYTE PTR [edi-0x52]
  41350a:	(bad)  
  41350b:	sahf   
  41350c:	icebp  
  41350d:	sbb    WORD PTR ss:[ebx+ecx*2+0x70],0x37ab
  413515:	je     0x413582
  413517:	sub    BYTE PTR [ecx-0x61bc7146],bh
  41351d:	pop    esp
  41351e:	fdivr  st(4),st
  413520:	xlat   BYTE PTR ds:[ebx]
  413521:	aad    0x5b
  413523:	mov    ds:0x949ed979,eax
  413528:	xchg   ecx,eax
  413529:	pop    ebx
  41352a:	inc    ecx
  41352b:	or     al,BYTE PTR [edi+0x53]
  41352e:	jmp    0x9a196cd5
  413533:	btr    DWORD PTR [ebx+0x5cf203df],edx
  41353a:	call   0x8d47:0x5c94590
  413541:	sbb    ebx,DWORD PTR [esi]
  413543:	mov    ecx,0x3c9a8540
  413548:	hlt    
  413549:	pop    ecx
  41354a:	mov    ah,0xcf
  41354c:	(bad)  
  41354d:	or     esi,DWORD PTR [ebx+0x41]
  413550:	ss dec esi
  413552:	push   esi
  413553:	add    DWORD PTR [eax],edi
  413555:	cmp    eax,0xd60347a4
  41355a:	shl    BYTE PTR [eax],cl
  41355c:	xor    al,0xd7
  41355e:	sub    edi,ebp
  413560:	sbb    eax,0xe0bfd30d
  413565:	ins    DWORD PTR es:[edi],dx
  413566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413567:	xchg   esp,eax
  413568:	not    eax
  41356a:	sbb    eax,0x2fbd1a96
  41356f:	xchg   ebp,eax
  413570:	or     dl,BYTE PTR [edi]
  413572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413573:	addr16 push ss
  413575:	push   esp
  413576:	mov    BYTE PTR [edi+0x6f],0xd0
  41357a:	popf   
  41357b:	jg     0x4135d9
  41357d:	or     eax,0xb5b6f0ea
  413582:	jo     0x41359d
  413584:	inc    ebp
  413585:	sub    dh,ah
  413587:	in     al,dx
  413588:	xchg   edx,eax
  413589:	pusha  
  41358a:	xchg   esi,eax
  41358b:	lods   al,BYTE PTR ds:[esi]
  41358c:	adc    dl,BYTE PTR [esi-0x7f]
  41358f:	cld    
  413590:	mov    ecx,0xd1bd02b7
  413595:	pop    edx
  413596:	xchg   edx,eax
  413597:	mov    ds:0xac8fb7f7,eax
  41359c:	jg     0x413589
  41359e:	adc    ah,0xfc
  4135a1:	call   0x64b6:0x5cea0970
  4135a8:	adc    al,BYTE PTR [edi]
  4135aa:	clc    
  4135ab:	cmp    eax,0x474ce744
  4135b0:	and    bl,BYTE PTR [ebx]
  4135b2:	mov    ecx,0x1e90c59c
  4135b7:	pop    ecx
  4135b8:	fist   WORD PTR [ebx+0x69]
  4135bb:	xor    al,0x2c
  4135bd:	jg     0x4135b8
  4135bf:	(bad)  
  4135c0:	fiadd  DWORD PTR [esi+0x7a6e4e69]
  4135c6:	push   ss
  4135c7:	inc    edx
  4135c8:	cmp    al,0xc6
  4135ca:	mov    bl,0xa9
  4135cc:	or     al,0x23
  4135ce:	xor    BYTE PTR [edi+0x4ecc79f4],0x11
  4135d5:	mov    ds:0x745d27f9,eax
  4135da:	sbb    DWORD PTR [esi-0x2b],0x809df7e5
  4135e1:	(bad)  
  4135e2:	or     DWORD PTR [esi-0x4c1bb7c1],ecx
  4135e8:	cdq    
  4135e9:	cmp    ecx,esi
  4135eb:	mov    ch,0x57
  4135ed:	clc    
  4135ee:	aaa    
  4135ef:	out    dx,al
  4135f0:	mov    bh,0x60
  4135f2:	mov    ebp,0x9259b940
  4135f7:	mov    ebx,0x6511f219
  4135fc:	mov    WORD PTR [esi+0x29ee5cdc],ds
  413602:	push   edi
  413603:	add    al,0x69
  413605:	loope  0x413608
  413607:	lea    eax,[eax-0x4b]
  41360a:	into   
  41360b:	addr16 push eax
  41360d:	stos   DWORD PTR es:[edi],eax
  41360e:	or     edx,DWORD PTR [ebx+0x27]
  413611:	fimul  WORD PTR [edx+0x7813cc3b]
  413617:	ins    BYTE PTR es:[edi],dx
  413618:	gs scas eax,DWORD PTR es:[edi]
  41361a:	inc    ebp
  41361b:	pop    esi
  41361c:	xchg   DWORD PTR [ebp-0x2284e92a],esp
  413622:	cmp    BYTE PTR [edi+0x745609f2],bh
  413628:	push   ds
  413629:	test   al,0x36
  41362b:	cmc    
  41362c:	push   ss
  41362d:	stos   BYTE PTR es:[edi],al
  41362e:	lock inc ebx
  413630:	adc    eax,0x16edae99
  413635:	and    ebp,ecx
  413637:	jnp    0x4136a9
  413639:	pushf  
  41363a:	sub    DWORD PTR [ebp-0x70],0x433b6a3a
  413641:	(bad)  
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	scas   eax,DWORD PTR es:[edi]
  413645:	call   0xa3ba:0x9f156384
  41364c:	mov    ch,0x0
  41364e:	out    dx,al
  41364f:	enter  0xae74,0xc
  413653:	(bad)  
  413654:	out    0x56,eax
  413656:	cwde   
  413657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413658:	dec    ebp
  413659:	call   0xe5dd:0xdd9e454
  413660:	xlat   BYTE PTR ds:[ebx]
  413661:	or     eax,0xb365fe54
  413666:	popf   
  413667:	xchg   ebp,eax
  413668:	inc    ecx
  413669:	jb     0x4135f7
  41366b:	ds mov dh,0x2d
  41366e:	stos   DWORD PTR es:[edi],eax
  41366f:	adc    eax,0xc57416ec
  413674:	sub    ecx,edx
  413676:	mov    edi,0x5c6e3b18
  41367b:	enter  0x52c1,0x51
  41367f:	jp     0x413671
  413681:	add    BYTE PTR [edx],0xa5
  413684:	push   ebp
  413685:	xchg   DWORD PTR [esi-0x31],esp
  413688:	sub    eax,0x19ddadb0
  41368d:	fnstsw WORD PTR [ebp-0x47]
  413690:	cs push 0xffffff99
  413693:	mov    ds:0x58328e5f,eax
  413698:	outs   dx,DWORD PTR ds:[esi]
  413699:	call   0xb6ece32
  41369e:	push   eax
  41369f:	sbb    dh,dl
  4136a1:	dec    esi
  4136a2:	daa    
  4136a3:	and    BYTE PTR [esi-0x695c11f6],0x13
  4136aa:	pand   mm2,QWORD PTR [eax-0xf]
  4136ae:	push   cs
  4136af:	pusha  
  4136b0:	mov    cl,0xf2
  4136b2:	daa    
  4136b3:	adc    al,0x9a
  4136b5:	push   esi
  4136b6:	push   ecx
  4136b7:	sub    ah,BYTE PTR [edi]
  4136b9:	ins    BYTE PTR es:[edi],dx
  4136ba:	add    bl,BYTE PTR [edi-0x30]
  4136bd:	fisub  WORD PTR [ecx+0x1a]
  4136c0:	xchg   edi,eax
  4136c1:	test   DWORD PTR [eax],edx
  4136c3:	popf   
  4136c4:	sub    esp,DWORD PTR [ecx]
  4136c6:	fld    DWORD PTR [ebx-0x18]
  4136c9:	cmp    ah,dl
  4136cb:	adc    ch,BYTE PTR [ecx]
  4136cd:	xor    edi,DWORD PTR [esi+0x5b]
  4136d0:	fsubrp st(0),st
  4136d2:	pop    ss
  4136d3:	lock jo 0x413678
  4136d6:	push   ds
  4136d7:	mov    dl,0x16
  4136d9:	es in  eax,dx
  4136db:	jmp    0x4136ff
  4136dd:	aas    
  4136de:	imul   ebp,DWORD PTR [ecx+ecx*4+0x34fec637],0x67
  4136e6:	mov    bl,0x23
  4136e8:	ins    DWORD PTR es:[edi],dx
  4136e9:	sbb    ebx,DWORD PTR [edx-0x39]
  4136ec:	push   0xa7f23a6
  4136f1:	cmp    DWORD PTR [ebx],edx
  4136f3:	jg     0x413705
  4136f5:	fisttp DWORD PTR [ecx-0x6470f8bb]
  4136fb:	stc    
  4136fc:	cmp    DWORD PTR [edi-0x35f45e26],eax
  413702:	fs daa 
  413704:	add    BYTE PTR [edx],bl
  413706:	add    ch,BYTE PTR ds:[edi]
  413709:	xor    dl,bh
  41370b:	xchg   DWORD PTR [eax+0x5091727c],edx
  413711:	dec    esi
  413712:	inc    esp
  413713:	in     eax,dx
  413714:	rcr    BYTE PTR [esi-0x71],cl
  413717:	dec    ebx
  413718:	mov    al,0x69
  41371a:	ror    BYTE PTR [ebp+0x4291ffa0],1
  413720:	fmul   DWORD PTR ds:0x694083e7
  413726:	in     eax,dx
  413727:	mov    eax,DWORD PTR [eax+0x22]
  41372a:	mov    ss:0x433a89b3,al
  413730:	dec    ebp
  413731:	xchg   DWORD PTR [ecx],ecx
  413733:	jne    0x4136f7
  413735:	mov    al,ds:0x8969deb0
  41373a:	dec    esi
  41373b:	repz push ebp
  41373d:	jb     0x41372e
  41373f:	mov    ds:0x632a8514,eax
  413744:	(bad)  
  413745:	sti    
  413746:	add    esi,edi
  413748:	push   esi
  413749:	in     al,0x63
  41374b:	in     eax,dx
  41374c:	adc    bh,ah
  41374e:	loopne 0x413714
  413750:	clc    
  413751:	sbb    DWORD PTR [esi-0x7838d462],ebp
  413757:	(bad)
  41375a:	je     0x413719
  41375c:	test   al,0xb5
  41375e:	jmp    DWORD PTR [eax+0xa]
  413761:	sahf   
  413762:	(bad)  
  413763:	xchg   esi,eax
  413764:	and    BYTE PTR [edx-0x4e],cl
  413767:	cmp    al,0xfd
  413769:	jmp    0x4137cd
  41376b:	pop    esp
  41376c:	(bad)  
  41376d:	push   ss
  41376e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41376f:	bound  esp,QWORD PTR [edi-0xb]
  413772:	cwde   
  413773:	hlt    
  413774:	fild   WORD PTR [edi-0x41]
  413777:	sub    BYTE PTR ds:0x520b5fed,0x88
  41377e:	adc    esp,ebp
  413780:	xchg   edx,eax
  413781:	mov    bh,0xc4
  413783:	and    DWORD PTR [edx-0x63],ebx
  413786:	pop    ss
  413787:	push   edi
  413788:	xchg   ecx,eax
  41378a:	mov    ecx,DWORD PTR [ebp+0x76]
  41378d:	stos   DWORD PTR es:[edi],eax
  41378e:	push   ds
  41378f:	sub    al,0x44
  413791:	sub    eax,DWORD PTR [ecx-0x1a57ff21]
  413797:	adc    DWORD PTR [eax],0xffffffc9
  41379a:	inc    ecx
  41379b:	dec    ecx
  41379c:	out    0x82,al
  41379e:	push   cs
  41379f:	xchg   esi,eax
  4137a0:	dec    esi
  4137a1:	mov    dh,0x92
  4137a3:	jne    0x4137cb
  4137a5:	inc    edx
  4137a6:	jmp    ebx
  4137a8:	popa   
  4137a9:	push   esi
  4137aa:	(bad)  
  4137ab:	ss mov dh,0x21
  4137ae:	mov    ebp,0x1d394ce5
  4137b3:	add    eax,0xe901e106
  4137b8:	sbb    eax,0xcf7ec570
  4137bd:	icebp  
  4137be:	xchg   ebp,eax
  4137bf:	in     al,0xb7
  4137c1:	scas   eax,DWORD PTR es:[edi]
  4137c2:	repz xor al,0xc4
  4137c5:	inc    ebp
  4137c6:	sub    eax,0x5dbb0bbf
  4137cb:	cs addr16 in al,dx
  4137ce:	hlt    
  4137cf:	xor    eax,0xa9a08974
  4137d4:	and    eax,0xb36d77a5
  4137d9:	pop    ss
  4137da:	aam    0x6
  4137dc:	xor    al,0xbb
  4137de:	push   es
  4137df:	aad    0xb7
  4137e1:	pushf  
  4137e2:	mov    dl,0x5c
  4137e4:	inc    ecx
  4137e5:	xchg   edx,eax
  4137e6:	cmp    DWORD PTR [edi],0x27
  4137e9:	mov    edi,0x55ed0350
  4137ee:	or     dl,ah
  4137f0:	xor    edx,DWORD PTR [ecx-0x2c]
  4137f3:	aad    0x7a
  4137f5:	aad    0xf
  4137f7:	int    0x61
  4137f9:	xor    ecx,eax
  4137fb:	and    esi,DWORD PTR [edx+0x61]
  4137fe:	xchg   esp,eax
  4137ff:	shl    DWORD PTR [edx-0x1d],1
  413802:	lods   eax,DWORD PTR ds:[esi]
  413803:	shl    BYTE PTR [ebx+0x37],1
  413806:	imul   esp,DWORD PTR [esi],0x60
  413809:	std    
  41380a:	fmul   st(6),st
  41380c:	xchg   ebx,eax
  41380d:	add    esi,ecx
  41380f:	cmp    dl,ah
  413811:	repz push eax
  413813:	push   es
  413814:	pop    ebp
  413815:	inc    ebp
  413816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413817:	pop    edx
  413818:	cmc    
  413819:	sbb    ch,BYTE PTR [edx]
  41381b:	ss imul eax,edx,0x52f767a6
  413822:	fiadd  DWORD PTR [edx-0x79]
  413825:	xor    al,0xe9
  413827:	les    esi,FWORD PTR [eax+0x11]
  41382a:	aad    0x4f
  41382c:	shl    DWORD PTR [eax],1
  41382e:	js     0x413882
  413830:	and    ah,BYTE PTR [ebp-0x65]
  413833:	stc    
  413834:	cmp    eax,0x563e5238
  413839:	out    dx,eax
  41383a:	repz adc al,0xc8
  41383d:	push   edx
  41383e:	retf   
  41383f:	out    0x38,eax
  413841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413843:	iret   
  413844:	pop    eax
  413845:	loopne 0x41385e
  413847:	pop    edx
  413848:	(bad)  
  413849:	xchg   esp,eax
  41384a:	sti    
  41384b:	push   0x107c3c8a
  413850:	in     al,dx
  413851:	lock jno 0x41385f
  413854:	sbb    al,0x25
  413856:	fdivrp st(7),st
  413858:	in     eax,0xe9
  41385a:	mov    edx,0x22b666ad
  41385f:	fnstenv [edi+0x66e9346]
  413865:	jge    0x4138d2
  413867:	les    ebp,FWORD PTR [ecx]
  413869:	mov    dh,dh
  41386b:	adc    DWORD PTR [eax],esp
  41386d:	jl     0x4138dd
  41386f:	mov    bh,0xf0
  413871:	and    eax,0x3533f345
  413876:	in     eax,0x20
  413878:	pop    ds
  413879:	inc    esi
  41387a:	push   ecx
  41387b:	clc    
  41387c:	xor    ah,BYTE PTR [eax-0x4d]
  41387f:	shl    BYTE PTR [edx+0x71],0xb2
  413883:	ss cli 
  413885:	dec    eax
  413886:	xchg   esi,eax
  413887:	into   
  413888:	mov    bh,0x1f
  41388a:	mov    ss,WORD PTR [esi+0xb179ba7]
  413890:	xchg   esp,eax
  413891:	aam    0xcc
  413893:	call   0x4d25:0x9410bbae
  41389a:	sub    eax,0xede9f6f0
  41389f:	sbb    BYTE PTR [ebp-0x1b],dh
  4138a2:	jl     0x4138a2
  4138a4:	sub    dl,dl
  4138a6:	dec    edi
  4138a7:	mov    eax,0x783d8137
  4138ac:	xchg   esp,eax
  4138ad:	nop
  4138ae:	fcmovu st,st(7)
  4138b0:	popf   
  4138b1:	into   
  4138b2:	es push ebp
  4138b4:	push   ss
  4138b5:	shl    DWORD PTR [esi-0x68081c71],1
  4138bb:	and    al,0x97
  4138bd:	add    DWORD PTR [edx-0x5c],eax
  4138c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138c1:	or     DWORD PTR [edx],esi
  4138c3:	(bad)  
  4138c5:	push   cs
  4138c6:	mov    cl,0xc6
  4138c8:	cld    
  4138c9:	mov    bh,0xd1
  4138cb:	jecxz  0x413947
  4138cd:	cmp    bl,BYTE PTR [ecx-0x538899fd]
  4138d3:	and    dh,BYTE PTR [edx-0x45aa7d8d]
  4138d9:	sub    BYTE PTR fs:[edx-0x1eee31c9],al
  4138e0:	add    eax,0xfade772b
  4138e5:	inc    edi
  4138e6:	out    dx,al
  4138e7:	inc    ebp
  4138e8:	dec    edi
  4138e9:	sahf   
  4138ea:	mov    esi,DWORD PTR [esp+eiz*8]
  4138ed:	dec    ebp
  4138ee:	les    edx,FWORD PTR [ebp-0x76]
  4138f1:	bound  eax,QWORD PTR [esi-0x26]
  4138f4:	add    bh,bl
  4138f6:	dec    ebx
  4138f7:	call   0x3eaebc00
  4138fc:	leave  
  4138fd:	sub    al,0xa6
  4138ff:	out    dx,al
  413900:	dec    esi
  413901:	and    DWORD PTR [edx+0x46],edx
  413904:	push   edi
  413905:	(bad)
  41390a:	push   ebp
  41390b:	mov    eax,ds:0xd540d012
  413910:	pop    esp
  413911:	mov    dl,0x8b
  413913:	xchg   ebx,eax
  413914:	in     eax,0x86
  413916:	jnp    0x413951
  413918:	jb     0x413907
  41391a:	mov    al,0xfc
  41391c:	scas   al,BYTE PTR es:[edi]
  41391d:	pop    ds
  41391e:	xchg   ebx,eax
  41391f:	cs cli 
  413921:	jecxz  0x413943
  413923:	cmp    BYTE PTR [eax],0xaf
  413926:	jp     0x41395b
  413928:	pop    eax
  413929:	xor    DWORD PTR [eax+ebp*4],esi
  41392c:	mov    esi,DWORD PTR [edx]
  41392e:	(bad)  
  41392f:	dec    edx
  413930:	jb     0x413972
  413932:	jbe    0x4138f3
  413934:	stos   DWORD PTR es:[edi],eax
  413935:	or     DWORD PTR [ebp+0x47],edi
  413938:	jmp    0x37c:0x65a1ea02
  41393f:	addr16 repnz mov eax,0xca38fd24
  413946:	mov    al,0x86
  413948:	push   0xe
  41394a:	mov    bh,0x8f
  41394c:	mov    al,BYTE PTR [ecx]
  41394e:	stos   DWORD PTR es:[edi],eax
  41394f:	xor    dh,BYTE PTR ds:0xc826d8cc
  413955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413956:	lea    ecx,[esi+0x27]
  413959:	nop
  41395a:	xor    bh,dl
  41395c:	adc    BYTE PTR [ebp-0x1238fa34],0x8b
  413963:	sbb    ebx,esi
  413965:	mov    ch,0x47
  413967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413968:	inc    ebx
  413969:	imul   ebx,DWORD PTR fs:[edi+0x2677e52b],0x13
  413971:	push   es
  413972:	sub    DWORD PTR [edx+0x3425db2d],esi
  413978:	lahf   
  413979:	(bad)  
  41397a:	pop    eax
  41397b:	mov    bl,0xbe
  41397d:	out    dx,al
  41397e:	push   edx
  41397f:	(bad)  
  413981:	mov    dh,0x62
  413983:	cs jp  0x413910
  413986:	lods   eax,DWORD PTR ds:[esi]
  413987:	mov    edx,0xe0559909
  41398c:	or     eax,0x4142ef21
  413991:	std    
  413992:	loope  0x4139e6
  413994:	aad    0x38
  413996:	mov    al,ds:0x5ddd466d
  41399b:	jb     0x413a08
  41399d:	imul   eax,DWORD PTR [eax],0xffffffd8
  4139a0:	pop    ds
  4139a1:	jae    0x4139cf
  4139a3:	pusha  
  4139a4:	test   DWORD PTR [eax+0xd16a387],esp
  4139aa:	and    bh,al
  4139ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ad:	pop    ds
  4139ae:	mov    esp,0x7eaf981
  4139b3:	mov    dh,0xd8
  4139b5:	jae    0x4139da
  4139b7:	pop    eax
  4139b8:	push   edi
  4139b9:	sbb    BYTE PTR [eax],ah
  4139bb:	psubusb mm5,QWORD PTR [ebx+0x7c99f903]
  4139c2:	and    eax,0xcfabc07b
  4139c7:	push   ebp
  4139c8:	inc    esi
  4139c9:	gs cmp al,0x71
  4139cc:	call   DWORD PTR [ebp-0x4e298e2a]
  4139d2:	pop    ebx
  4139d3:	mov    bl,0x7a
  4139d5:	call   0x14c793ca
  4139da:	mov    bl,0x4b
  4139dc:	call   0x574076c4
  4139e1:	ror    dl,cl
  4139e3:	mov    ds:0xc06d9e7c,eax
  4139e8:	xchg   BYTE PTR [ebx],ch
  4139ea:	aaa    
  4139eb:	popf   
  4139ec:	iret   
  4139ed:	xor    al,0x4f
  4139ef:	(bad)  [eax]
  4139f1:	push   edi
  4139f2:	mov    fs,WORD PTR ds:0x799d0c7f
  4139f8:	mov    DWORD PTR [edi],esi
  4139fa:	in     eax,dx
  4139fb:	add    bl,BYTE PTR [esi-0x3a]
  4139fe:	mov    bh,0x3a
  413a00:	mov    BYTE PTR [eax-0x7c7f4696],0xdb
  413a07:	jecxz  0x4139b8
  413a09:	sub    ah,0x9e
  413a0c:	pop    edi
  413a0d:	mov    ds:0x4f85e05e,al
  413a12:	sbb    esi,ebx
  413a14:	push   ss
  413a15:	neg    BYTE PTR [edi]
  413a17:	inc    ebp
  413a18:	call   0xba93d729
  413a1d:	inc    ecx
  413a1e:	adc    edi,esi
  413a20:	outs   dx,DWORD PTR ds:[esi]
  413a21:	add    al,0x6e
  413a23:	mov    esp,0xa6611501
  413a28:	rcr    BYTE PTR [ebx+0x51deabbf],0x44
  413a2f:	out    dx,al
  413a30:	adc    al,0xfc
  413a32:	pop    ebp
  413a33:	in     al,0x68
  413a35:	daa    
  413a36:	nop
  413a37:	adc    al,0xff
  413a39:	fsubr  QWORD PTR [ebp+0x74]
  413a3c:	xor    edi,edx
  413a3e:	push   ds
  413a3f:	mov    ebp,esi
  413a41:	mov    DWORD PTR [edi-0x23],ebx
  413a44:	in     al,0xdc
  413a46:	stc    
  413a47:	ret    
  413a48:	xor    DWORD PTR [esi-0xf085323],ecx
  413a4e:	and    ah,0x42
  413a51:	outs   dx,BYTE PTR ds:[esi]
  413a52:	popf   
  413a53:	inc    ecx
  413a54:	std    
  413a55:	shr    ah,0x8
  413a58:	inc    ebx
  413a59:	daa    
  413a5a:	sub    BYTE PTR [edx-0x2a],dl
  413a5d:	push   edx
  413a5e:	sub    BYTE PTR [edi],dh
  413a60:	push   esi
  413a61:	gs pop ss
  413a63:	push   ds
  413a64:	and    al,BYTE PTR [ebx+esi*1+0x3f]
  413a68:	ja     0x413a64
  413a6a:	mov    dl,0x3f
  413a6c:	mov    edi,es
  413a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6f:	xor    eax,0x1af49ba2
  413a74:	sub    al,0x20
  413a76:	sub    ebx,DWORD PTR [edi+0x19]
  413a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a7a:	inc    ebp
  413a7b:	iret   
  413a7c:	imul   esp,DWORD PTR [eax],0x5a
  413a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a80:	not    DWORD PTR [ecx+0x7b]
  413a83:	and    eax,0x805a880c
  413a88:	(bad)  [ebx]
  413a8a:	ds sahf 
  413a8c:	cli    
  413a8d:	sbb    BYTE PTR [ebx+0x237728f5],cl
  413a93:	or     dh,dl
  413a95:	ret    0xa26c
  413a98:	push   0xe577eef0
  413a9d:	jg     0x413ad7
  413a9f:	jp     0x413b07
  413aa1:	sbb    dh,ch
  413aa3:	and    al,0xf8
  413aa5:	adc    eax,0x23c29692
  413aaa:	pop    esp
  413aab:	jg     0x413b23
  413aad:	xor    al,0x9f
  413aaf:	inc    esp
  413ab0:	out    0x7b,eax
  413ab2:	pop    DWORD PTR [eax+esi*1-0x28d5590e]
  413ab9:	(bad)  
  413aba:	dec    esp
  413abb:	stos   DWORD PTR es:[edi],eax
  413abc:	loop   0x413af2
  413abe:	pop    ss
  413abf:	xchg   BYTE PTR [edi-0x32],ah
  413ac2:	and    eax,0xc581b200
  413ac7:	aad    0x1e
  413ac9:	cld    
  413aca:	(bad)
  413acf:	cwde   
  413ad0:	mov    ah,0xaa
  413ad2:	push   ss
  413ad3:	adc    BYTE PTR [edi],ch
  413ad5:	xchg   DWORD PTR [ecx],eax
  413ad7:	icebp  
  413ad8:	jmp    0x413b0c
  413ada:	les    ecx,FWORD PTR [ebp-0x39]
  413add:	cwde   
  413ade:	repnz or eax,0x3fe84104
  413ae4:	cli    
  413ae5:	push   ebp
  413ae6:	ficom  DWORD PTR [eax]
  413ae8:	mov    bh,0x98
  413aea:	(bad)  
  413aeb:	xlat   BYTE PTR ds:[ebx]
  413aec:	sbb    edx,DWORD PTR [ebx-0x351f6cc9]
  413af2:	(bad)  
  413af3:	out    0xa1,eax
  413af5:	test   edx,0xe9540485
  413afb:	xchg   esi,eax
  413afc:	in     eax,0xeb
  413afe:	jmp    0x5fed5cce
  413b03:	gs push ds
  413b05:	push   ecx
  413b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b07:	lods   eax,DWORD PTR ds:[esi]
  413b08:	daa    
  413b09:	fwait
  413b0a:	jmp    0x413b42
  413b0c:	xor    edx,edx
  413b0e:	fldcw  WORD PTR [ecx]
  413b10:	and    cl,dl
  413b12:	mov    BYTE PTR [edi+0x66],cl
  413b15:	fs add eax,0x4b266c36
  413b1b:	jle    0x413b7b
  413b1d:	sub    al,0x17
  413b1f:	lods   eax,DWORD PTR ds:[esi]
  413b20:	push   esp
  413b21:	sub    ecx,ecx
  413b23:	mov    ah,dl
  413b25:	(bad)  
  413b26:	enter  0x86ec,0xc
  413b2a:	pop    edx
  413b2b:	test   eax,0x90bce4a8
  413b30:	and    esi,esp
  413b32:	pop    ecx
  413b33:	adc    al,0xf4
  413b35:	dec    esp
  413b36:	jg     0x413b2d
  413b38:	setnp  BYTE PTR [edi]
  413b3b:	sbb    BYTE PTR [eax+0x5c],dh
  413b3e:	outs   dx,DWORD PTR ds:[esi]
  413b3f:	test   BYTE PTR [esi-0x1a6b86f1],bh
  413b45:	pop    esi
  413b46:	popf   
  413b47:	push   esp
  413b48:	ret    
  413b49:	add    dl,BYTE PTR [ebx-0x2f]
  413b4c:	mov    ecx,DWORD PTR [eax-0x5a9c86fd]
  413b52:	mov    esi,0x3fbb9eb5
  413b57:	ja     0x413b5a
  413b59:	loop   0x413ba3
  413b5b:	xchg   esp,eax
  413b5c:	out    0x6e,eax
  413b5e:	adc    ah,BYTE PTR gs:[esi+0x3a40c244]
  413b65:	mov    ebx,0xac9bacf0
  413b6a:	stos   BYTE PTR es:[edi],al
  413b6b:	add    al,BYTE PTR [esi-0x21623737]
  413b71:	nop
  413b72:	pop    ebx
  413b73:	mov    bh,BYTE PTR [ecx+0x4d0ad86e]
  413b79:	cmp    eax,0xdcbeada7
  413b7e:	cmp    dh,BYTE PTR [esi+0x3bdc4290]
  413b84:	push   ss
  413b85:	sbb    BYTE PTR [eax+0x54],al
  413b88:	mov    WORD PTR [edx+edx*8-0x21],es
  413b8c:	gs aas 
  413b8e:	mov    bl,0x8b
  413b90:	scas   eax,DWORD PTR es:[edi]
  413b91:	leave  
  413b92:	inc    esp
  413b93:	xor    dl,cl
  413b95:	dec    ecx
  413b96:	test   BYTE PTR [esi+edi*2],ch
  413b99:	pop    ebx
  413b9a:	push   0x14f43444
  413b9f:	lock jg 0x413b6b
  413ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ba3:	fsub   QWORD PTR [esi+0x6e]
  413ba6:	adc    bl,BYTE PTR [edx+0x4f]
  413ba9:	dec    esp
  413baa:	shl    dh,1
  413bac:	xchg   DWORD PTR [ecx+0x5d],ecx
  413baf:	pop    es
  413bb0:	xchg   BYTE PTR [eax-0x33],cl
  413bb3:	int    0x98
  413bb5:	aad    0xeb
  413bb7:	fcomi  st,st(3)
  413bb9:	imul   ecx
  413bbb:	sub    DWORD PTR [ebx-0x39bfa863],esp
  413bc1:	fisttp QWORD PTR [eax]
  413bc3:	add    al,0xe6
  413bc5:	pop    esi
  413bc6:	add    DWORD PTR [eax+0x60561b75],0xc0d78e81
  413bd0:	mov    eax,ds:0x3fd68b74
  413bd5:	add    edi,DWORD PTR [edi-0x9c7d7f1]
  413bdb:	mov    ?,WORD PTR [ebp-0x1e]
  413bde:	ret    0x828f
  413be1:	rcr    dh,1
  413be3:	shl    dl,1
  413be5:	add    ecx,DWORD PTR [ebx]
  413be7:	leave  
  413be8:	arpl   WORD PTR [edx-0x55fad8d3],cx
  413bee:	xor    DWORD PTR ds:0x343f3c7,ebx
  413bf4:	popf   
  413bf5:	out    dx,eax
  413bf6:	add    eax,0x23de9146
  413bfb:	outs   dx,DWORD PTR ds:[esi]
  413bfc:	jp     0x413c36
  413bfe:	cld    
  413bff:	mov    eax,ds:0x2f39e53d
  413c04:	dec    ebx
  413c05:	cs sbb al,0xc8
  413c08:	sbb    al,0xde
  413c0a:	adc    ch,BYTE PTR [ebx]
  413c0c:	mov    al,0x7c
  413c0e:	xor    eax,0xe2c231b8
  413c13:	mov    edi,0xccbf04da
  413c18:	adc    DWORD PTR [esi+0x78e8722e],esi
  413c1e:	pop    edi
  413c1f:	mov    edi,0x64e63d57
  413c24:	test   eax,0x949cc77d
  413c29:	inc    edx
  413c2a:	xor    ah,BYTE PTR [ecx+0x6f]
  413c2d:	out    dx,al
  413c2e:	sahf   
  413c2f:	fist   WORD PTR [ebx-0x3d380b74]
  413c35:	dec    ecx
  413c36:	push   esi
  413c37:	mov    esi,0xb05454a
  413c3c:	push   ds
  413c3d:	test   BYTE PTR [edi],dh
  413c3f:	pusha  
  413c40:	dec    edx
  413c41:	jnp    0x413c24
  413c43:	pop    ebp
  413c44:	mov    ecx,0xd9de7871
  413c49:	push   ebx
  413c4a:	adc    edi,edi
  413c4c:	test   al,0x80
  413c4e:	out    0x92,al
  413c50:	jo     0x413c30
  413c52:	dec    ecx
  413c53:	add    cl,BYTE PTR [edi+0x42]
  413c56:	scas   al,BYTE PTR es:[edi]
  413c57:	add    ecx,edx
  413c59:	and    al,0x52
  413c5b:	push   ecx
  413c5c:	mov    ah,0x71
  413c5e:	sti    
  413c5f:	jecxz  0x413bea
  413c61:	pop    ebx
  413c62:	in     al,0xe4
  413c64:	mov    ch,0xe3
  413c66:	fist   WORD PTR [esi-0x677d8943]
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	in     eax,0xf
  413c6f:	jb     0x413c2e
  413c71:	dec    edi
  413c72:	(bad)  
  413c73:	in     eax,dx
  413c74:	imul   edx,esi,0xffffffd4
  413c77:	cmp    edi,DWORD PTR [edi-0x31]
  413c7a:	sub    DWORD PTR [edx-0x1d34b869],0x358d5a3b
  413c84:	fidivr DWORD PTR [edi+0x20a7d4b1]
  413c8a:	or     DWORD PTR [eax],ebx
  413c8c:	xor    DWORD PTR gs:[edx+0x1f],ebx
  413c90:	je     0x413cd5
  413c92:	bound  edi,QWORD PTR [eax+0x12520bb0]
  413c98:	test   eax,0x9c55fc23
  413c9d:	lea    edi,[edx-0x5e20d9ea]
  413ca3:	aaa    
  413ca4:	add    DWORD PTR [esi+0x345b102d],edi
  413caa:	push   ebp
  413cab:	imul   esp,DWORD PTR [esi+0x3d7445f],0x7256cc82
  413cb5:	jle    0x413c7a
  413cb7:	dec    esi
  413cb8:	sub    dl,BYTE PTR [ecx]
  413cba:	std    
  413cbb:	push   ds
  413cbc:	ins    DWORD PTR es:[edi],dx
  413cbd:	arpl   ax,ax
  413cbf:	add    eax,0x721e456b
  413cc4:	dec    esp
  413cc5:	dec    bl
  413cc7:	xchg   ebp,eax
  413cc8:	cmc    
  413cc9:	inc    eax
  413cca:	aas    
  413ccb:	shr    dh,0x10
  413cce:	ins    BYTE PTR es:[edi],dx
  413ccf:	scas   al,BYTE PTR es:[edi]
  413cd0:	ror    edi,0x30
  413cd3:	popa   
  413cd4:	push   esp
  413cd5:	add    ebp,DWORD PTR [edx+0x30]
  413cd8:	in     eax,0xb4
  413cda:	rcl    BYTE PTR [esi],cl
  413cdc:	mov    eax,ds:0xcae85fab
  413ce1:	jge    0x413d39
  413ce3:	pop    esi
  413ce4:	in     eax,0x1e
  413ce6:	nop
  413ce7:	cmp    al,cl
  413ce9:	dec    esp
  413cea:	test   DWORD PTR [ecx],0x7dd1b6c2
  413cf0:	adc    al,0x4
  413cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf3:	aad    0xbc
  413cf5:	add    BYTE PTR [ebp+0x11],al
  413cf8:	js     0x413cfe
  413cfa:	or     dl,BYTE PTR [edx+0xf266efe]
  413d00:	loope  0x413d14
  413d02:	mov    bh,0xcc
  413d04:	inc    ecx
  413d05:	repnz ds stc 
  413d08:	and    al,BYTE PTR [esi+edx*4+0x1fc2d501]
  413d0f:	je     0x413cb4
  413d11:	or     BYTE PTR [ecx-0x7e6df7db],bh
  413d17:	pop    ss
  413d18:	fucomp st(6)
  413d1a:	xchg   ebx,eax
  413d1b:	mov    ds:0x4fbf484d,eax
  413d20:	stos   BYTE PTR es:[edi],al
  413d21:	mov    eax,0xb9450dc
  413d26:	and    BYTE PTR [ecx+0x7852c9ec],bh
  413d2c:	fdiv   DWORD PTR ds:0xf267271f
  413d32:	mov    esp,0x1b857e25
  413d37:	inc    esp
  413d38:	dec    eax
  413d39:	sbb    eax,0xc788a461
  413d3e:	jecxz  0x413d27
  413d40:	retf   0xa4cf
  413d43:	xor    DWORD PTR [ecx+eiz*4],0xffffffdb
  413d47:	fnstenv [edx+ebp*8]
  413d4a:	arpl   dx,dx
  413d4c:	xor    bh,ch
  413d4e:	xchg   ebp,eax
  413d4f:	in     eax,0x1b
  413d51:	xchg   edi,eax
  413d52:	into   
  413d53:	lock outs dx,DWORD PTR ds:[esi]
  413d55:	fs in  eax,0x22
  413d58:	jg     0x413d94
  413d5a:	iret   
  413d5b:	sbb    dh,cl
  413d5d:	mov    edx,0x8cf3cb1b
  413d62:	jmp    0x8a53:0xc332c029
  413d69:	push   0xffffff8c
  413d6b:	ss pushf 
  413d6d:	ins    BYTE PTR es:[edi],dx
  413d6e:	leave  
  413d6f:	jle    0x413d1d
  413d71:	adc    al,0xaf
  413d73:	sahf   
  413d74:	and    BYTE PTR [edi-0x28f036a3],bh
  413d7a:	les    eax,FWORD PTR [edi]
  413d7c:	int    0xa3
  413d7e:	mov    ah,0xef
  413d80:	mov    ah,0x43
  413d82:	repz imul ecx,DWORD PTR [esi],0xebb3bf0f
  413d89:	xchg   esp,eax
  413d8a:	add    eax,0xc2f278fb
  413d8f:	out    0x70,eax
  413d91:	popa   
  413d92:	aad    0x1a
  413d94:	dec    ebp
  413d95:	imul   eax,DWORD PTR [ebp-0xa],0x4960c95d
  413d9c:	inc    esi
  413d9d:	popf   
  413d9e:	test   eax,0x90364429
  413da3:	dec    edi
  413da4:	dec    esp
  413da5:	add    esi,DWORD PTR [esp+ebp*1-0x6437f746]
  413dac:	retf   0xecf4
  413daf:	arpl   sp,ax
  413db1:	dec    ebx
  413db2:	(bad)  
  413db3:	push   es
  413db4:	in     al,dx
  413db5:	std    
  413db6:	pop    esp
  413db7:	leave  
  413db8:	dec    ecx
  413db9:	out    dx,eax
  413dba:	mov    cl,0x47
  413dbc:	js     0x413d6f
  413dbe:	mov    edx,0xd9a24566
  413dc3:	push   esi
  413dc4:	(bad)  
  413dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dc6:	test   DWORD PTR [ecx],esp
  413dc8:	mov    dl,0x3f
  413dca:	jb     0x413dd1
  413dcc:	xchg   bl,ch
  413dce:	pop    edi
  413dcf:	test   ax,0x3ab3
  413dd3:	nop
  413dd4:	popf   
  413dd5:	fisttp DWORD PTR [ecx-0x54]
  413dd8:	xor    eax,0x389a0b53
  413ddd:	(bad)  
  413dde:	mov    eax,0x2c939903
  413de3:	fstp   TBYTE PTR [ebp-0x63]
  413de6:	push   eax
  413de7:	icebp  
  413de8:	rcr    DWORD PTR [eax+0x67],1
  413deb:	lods   ax,WORD PTR ds:[esi]
  413ded:	push   0x5d36114d
  413df2:	or     edi,DWORD PTR [esi-0xea95052]
  413df8:	cld    
  413df9:	into   
  413dfa:	mov    cs:0x95510659,al
  413e00:	inc    esp
  413e01:	fbld   TBYTE PTR [esi]
  413e03:	fdiv   QWORD PTR ss:[eax-0x3e8c9eeb]
  413e0a:	or     eax,0x9347c781
  413e0f:	sub    eax,0x9305280b
  413e14:	rcr    BYTE PTR [ecx-0x4167c55],1
  413e1a:	add    BYTE PTR [eax+0x47],0xfe
  413e1e:	mov    cl,0x59
  413e20:	push   cs
  413e21:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e23:	jge    0x413ded
  413e25:	out    dx,al
  413e26:	in     al,0xe2
  413e28:	popa   
  413e29:	ret    0xdf85
  413e2c:	es or  al,0xa6
  413e2f:	sahf   
  413e30:	jecxz  0x413ddf
  413e32:	mov    BYTE PTR [edi+0x31bcb4b5],ah
  413e38:	xchg   edx,eax
  413e39:	mov    eax,0xe024278a
  413e3e:	xchg   esp,eax
  413e3f:	push   edx
  413e40:	arpl   dx,si
  413e42:	xor    ch,bl
  413e44:	xchg   esi,eax
  413e45:	mov    edx,0x76d328cd
  413e4a:	cmp    al,0x53
  413e4c:	popf   
  413e4d:	int3   
  413e4e:	adc    BYTE PTR [edx],al
  413e50:	or     eax,0x55bee034
  413e55:	and    esi,DWORD PTR [esi-0x19]
  413e58:	push   eax
  413e59:	rcr    DWORD PTR [edx-0xe476ca8],1
  413e5f:	sbb    BYTE PTR [ebx+ebp*1+0x54ce0cdb],ch
  413e66:	imul   eax,DWORD PTR [ebp+0x12],0xffffffa4
  413e6a:	data16 sub ch,BYTE PTR [ebx+ecx*1]
  413e6e:	std    
  413e6f:	mov    al,ds:0x91d43464
  413e74:	jne    0x413eca
  413e76:	and    cl,BYTE PTR [ecx-0x1299120a]
  413e7c:	(bad)  
  413e7e:	mov    dl,0xb7
  413e80:	std    
  413e81:	add    DWORD PTR [ecx],edi
  413e83:	aam    0x50
  413e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e86:	sbb    eax,0x7980b3e
  413e8b:	inc    esi
  413e8c:	hlt    
  413e8d:	jp     0x413e1a
  413e8f:	adc    dh,cl
  413e91:	adc    eax,0xf7a94f6d
  413e96:	ror    DWORD PTR [edi+0x7dcf775],0x4e
  413e9d:	pop    ss
  413e9e:	cli    
  413e9f:	je     0x413f06
  413ea1:	sub    ch,BYTE PTR [edx+eax*1]
  413ea4:	jne    0x413e47
  413ea6:	mov    ebp,0xb0ca3077
  413eab:	jnp    0x413efd
  413ead:	dec    edx
  413eae:	cdq    
  413eaf:	ficom  DWORD PTR [eax-0x27c3f526]
  413eb5:	jo     0x413ed1
  413eb7:	jb     0x413ea8
  413eb9:	lods   al,BYTE PTR ds:[esi]
  413eba:	mov    ds:0xcb90d4b6,eax
  413ebf:	leave  
  413ec0:	dec    edx
  413ec1:	add    DWORD PTR [ebx+0x795c5554],esp
  413ec7:	push   es
  413ec8:	ja     0x413f44
  413eca:	xchg   esp,eax
  413ecb:	add    al,0xeb
  413ecd:	shl    BYTE PTR [edx],1
  413ecf:	cld    
  413ed0:	sbb    edi,ebp
  413ed2:	call   0x7d632afc
  413ed7:	sahf   
  413ed8:	fs sbb DWORD PTR ds:[esi-0x7b2cc927],esi
  413ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ee1:	mov    ebp,0xdd8b0208
  413ee6:	lea    ebx,gs:[edx]
  413ee9:	mov    BYTE PTR [edi-0x39],al
  413eec:	mov    WORD PTR [eax+0x33],es
  413eef:	mov    eax,0x761a2523
  413ef4:	in     al,dx
  413ef5:	test   DWORD PTR [eax],esp
  413ef7:	ret    0x9cfb
  413efa:	out    dx,al
  413efb:	popf   
  413efc:	mov    ah,0x58
  413efe:	lock sbb ch,0x94
  413f02:	arpl   WORD PTR [eax],dx
  413f04:	push   0x4c
  413f06:	and    DWORD PTR ds:0xa34d7388,ebx
  413f0c:	lods   eax,DWORD PTR ds:[esi]
  413f0d:	(bad)  
  413f0e:	adc    dl,BYTE PTR [ecx-0x63c2d75a]
  413f14:	je     0x413f19
  413f16:	mov    edi,edi
  413f18:	call   0x9882:0x635304ef
  413f1f:	mov    ?,WORD PTR [ebx]
  413f21:	xchg   edx,eax
  413f22:	adc    al,dl
  413f24:	push   0xffffffcb
  413f26:	pop    ebx
  413f27:	xor    eax,0x6165494c
  413f2c:	scas   al,BYTE PTR es:[edi]
  413f2d:	xchg   ecx,eax
  413f2e:	repnz xchg ebx,eax
  413f30:	add    eax,0x2d537d7a
  413f35:	loope  0x413f51
  413f37:	push   0xbfe9b67b
  413f3c:	sbb    al,BYTE PTR [esi-0x15]
  413f3f:	xor    BYTE PTR [eax+0x7e],0x8f
  413f43:	(bad)  
  413f44:	push   esi
  413f45:	ret    
  413f46:	jb     0x413fb5
  413f48:	in     al,0x39
  413f4a:	add    esp,edx
  413f4c:	inc    esp
  413f4d:	popa   
  413f4e:	les    eax,FWORD PTR [eax+0x5f]
  413f51:	loopne 0x413fa3
  413f53:	xchg   ebp,eax
  413f54:	push   ebx
  413f55:	pop    eax
  413f56:	mov    dh,0xe0
  413f58:	push   edx
  413f59:	mov    ds:0x93fffcba,eax
  413f5e:	hlt    
  413f5f:	and    ebp,ebp
  413f61:	arpl   si,sp
  413f63:	pushf  
  413f64:	ret    
  413f65:	aaa    
  413f66:	clc    
  413f67:	sub    dl,ch
  413f69:	push   esi
  413f6a:	out    dx,eax
  413f6b:	jbe    0x413f7b
  413f6d:	sub    DWORD PTR [esi+0x8148013],esi
  413f73:	inc    edi
  413f74:	dec    edi
  413f75:	mov    eax,gs
  413f77:	shr    DWORD PTR [edx],1
  413f79:	push   esi
  413f7a:	or     ebp,ebx
  413f7c:	inc    edi
  413f7d:	pop    ds
  413f7e:	ja     0x413f0c
  413f80:	sub    ebx,DWORD PTR [edi+eax*8]
  413f83:	lds    ebp,FWORD PTR [esi-0x16]
  413f86:	(bad)  
  413f87:	cdq    
  413f88:	sti    
  413f89:	push   edx
  413f8a:	push   cs
  413f8b:	xchg   ecx,eax
  413f8c:	imul   ecx,DWORD PTR [edi+0x61],0xffffffa6
  413f90:	sub    ebp,DWORD PTR [edx+edi*4]
  413f93:	sbb    dl,BYTE PTR [edx+0x1b1d6e73]
  413f99:	(bad)  
  413f9b:	xchg   DWORD PTR [ebx],edx
  413f9d:	cmp    BYTE PTR [ebx],ah
  413f9f:	js     0x413f24
  413fa1:	jmp    0x3bf32930
  413fa6:	mov    ch,0xca
  413fa8:	das    
  413fa9:	sub    eax,0x65f829df
  413fae:	(bad)
  413fb3:	std    
  413fb4:	bound  esi,QWORD PTR [ecx+0x62]
  413fb7:	mov    cl,0x93
  413fb9:	pop    esi
  413fba:	mov    gs,WORD PTR [eax]
  413fbc:	pop    ebx
  413fbd:	out    0x19,al
  413fbf:	mov    eax,ds:0x9a0d3298
  413fc4:	cmc    
  413fc5:	pop    es
  413fc6:	inc    esp
  413fc7:	adc    BYTE PTR [esi+0x17],ch
  413fca:	test   BYTE PTR [edx],dh
  413fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fce:	mov    cl,0x95
  413fd0:	repz sub eax,0xffbf4c1f
  413fd6:	xchg   esp,eax
  413fd7:	xchg   ecx,eax
  413fd8:	popa   
  413fd9:	(bad)  
  413fda:	(bad)  [ecx-0x15c6436e]
  413fe0:	push   edx
  413fe1:	(bad)  
  413fe2:	outs   dx,BYTE PTR ds:[esi]
  413fe3:	inc    esp
  413fe4:	aad    0xdc
  413fe6:	out    dx,eax
  413fe7:	push   edx
  413fe8:	dec    edi
  413fe9:	jmp    0x413f88
  413feb:	fistp  WORD PTR [ebp-0x1333608]
  413ff1:	mov    ebp,0xcee37d4d
  413ff6:	pushf  
  413ff7:	mov    ds:0x26a4830b,eax
  413ffc:	fwait
  413ffd:	adc    eax,0xa2f07705
  414002:	cmp    al,0x3b
  414004:	xor    eax,0x13ee4e77
  414009:	popf   
  41400a:	sbb    al,0xf9
  41400c:	sbb    ecx,DWORD PTR [ecx-0x53]
  41400f:	fild   QWORD PTR [ebx]
  414011:	cmc    
  414012:	enter  0x8c91,0x59
  414016:	mov    ecx,0xa5d9bd3a
  41401b:	sbb    eax,0xe44e18f0
  414020:	pop    ss
  414021:	jecxz  0x413ff1
  414023:	and    al,0xcc
  414025:	and    BYTE PTR [eax+ebx*2+0x72bd95ca],cl
  41402c:	or     eax,0xc2cf84eb
  414031:	xchg   dl,ch
  414033:	jecxz  0x414007
  414035:	loope  0x414078
  414037:	test   BYTE PTR [ebx],al
  414039:	mov    ah,bl
  41403b:	lea    edx,[edx]
  41403d:	sub    BYTE PTR [esi],bl
  41403f:	scas   eax,DWORD PTR es:[edi]
  414040:	dec    edx
  414041:	mov    cl,0xf4
  414043:	pop    edi
  414044:	push   0xffffff9b
  414046:	popa   
  414047:	cwde   
  414048:	dec    eax
  414049:	popa   
  41404a:	ja     0x41406e
  41404c:	pusha  
  41404d:	mov    DWORD PTR [edi+0x627f8368],esi
  414053:	and    DWORD PTR [edi],ebp
  414055:	and    ebx,DWORD PTR [edx]
  414057:	and    dl,BYTE PTR [ebx+0x5c]
  41405a:	ror    DWORD PTR [esp+ebx*1-0x4e4b341b],cl
  414061:	ret    0xe04e
  414064:	mov    edi,0xc1f6871b
  414069:	mov    ah,0xf4
  41406b:	arpl   WORD PTR [ecx],cx
  41406d:	ret    0x1a89
  414070:	jb     0x41408f
  414072:	icebp  
  414073:	stc    
  414074:	push   ss
  414075:	sub    dl,bl
  414077:	sbb    edx,DWORD PTR [ebx+0x19d1c496]
  41407d:	fcom   QWORD PTR [esi]
  41407f:	mov    esi,0xca12c0fd
  414084:	sub    DWORD PTR gs:0xab7d4707,edi
  41408b:	lods   eax,DWORD PTR ds:[esi]
  41408c:	mov    al,ds:0xcd354f78
  414091:	scas   al,BYTE PTR es:[edi]
  414092:	rcr    BYTE PTR [esi+0x6e],cl
  414095:	mov    DWORD PTR [ebx],esi
  414097:	pushf  
  414098:	jo     0x41409d
  41409a:	retf   
  41409b:	out    dx,al
  41409c:	repnz bound esp,QWORD PTR cs:[esi+0x3cdd5f6]
  4140a4:	mov    ch,0x45
  4140a6:	xor    BYTE PTR [edx-0x3a],al
  4140a9:	inc    ebx
  4140aa:	adc    DWORD PTR [esi-0x206a0863],0x68371c56
  4140b4:	test   DWORD PTR [eax-0x64890cf],ebp
  4140ba:	js     0x41403e
  4140bc:	fsubrp st(3),st
  4140be:	jle    0x414047
  4140c0:	out    dx,eax
  4140c1:	push   ebx
  4140c2:	push   0x28137103
  4140c7:	adc    edi,DWORD PTR [eax-0x22]
  4140ca:	or     dh,dh
  4140cc:	shr    esi,cl
  4140ce:	and    esp,DWORD PTR [ebx+0x58]
  4140d1:	(bad)  
  4140d2:	jp     0x414061
  4140d4:	aam    0xd1
  4140d6:	outs   dx,BYTE PTR ds:[esi]
  4140d7:	mov    ah,0x25
  4140d9:	mov    al,0x12
  4140db:	push   edi
  4140dc:	adc    eax,0xb942b618
  4140e1:	inc    ebx
  4140e2:	aaa    
  4140e3:	call   0xdd0c:0x2e7f3734
  4140ea:	in     al,0x18
  4140ec:	xor    eax,0x1f93f751
  4140f1:	cmp    eax,0x40bc1be
  4140f6:	pop    edi
  4140f7:	jmp    0x4140d8
  4140f9:	in     eax,0xf
  4140fb:	inc    esi
  4140fc:	popa   
  4140fd:	mov    es,WORD PTR [edi]
  4140ff:	dec    ecx
  414100:	lods   eax,DWORD PTR ds:[esi]
  414101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414102:	xor    cl,BYTE PTR [ebx]
  414104:	xor    dl,cl
  414106:	loope  0x414104
  414108:	mov    al,0xa
  41410a:	jno    0x414118
  41410c:	xlat   BYTE PTR ds:[ebx]
  41410d:	fistp  WORD PTR [esi+0x28955531]
  414113:	xchg   ecx,eax
  414114:	xor    BYTE PTR [ebx],ch
  414116:	mov    DWORD PTR [edi],ebx
  414118:	gs jmp 0x414175
  41411b:	mov    edi,0x19d4bd2
  414120:	cmc    
  414121:	jmp    0xe54e:0x26d71d9b
  414128:	sar    BYTE PTR [edx+0x55de1000],cl
  41412e:	jns    0x41412c
  414130:	sbb    eax,DWORD PTR [ecx+0x44236361]
  414136:	ret    
  414137:	out    dx,eax
  414138:	outs   dx,BYTE PTR ds:[esi]
  414139:	push   edx
  41413a:	sbb    DWORD PTR [ecx-0xe],ebx
  41413d:	add    BYTE PTR [edx-0x7f2a193e],dh
  414143:	xor    BYTE PTR [esi-0x2bac92ec],0x52
  41414a:	pop    edi
  41414b:	pop    ds
  41414c:	neg    eax
  41414e:	pop    ss
  41414f:	scas   al,BYTE PTR es:[edi]
  414150:	repnz add esi,DWORD PTR [edi+0x43aab834]
  414157:	xchg   ecx,eax
  414158:	sbb    DWORD PTR [ebx],esi
  41415a:	jg     0x414144
  41415c:	pop    es
  41415d:	dec    edi
  41415e:	aam    0xbf
  414160:	arpl   WORD PTR [ebp+0x7d],ax
  414163:	push   esp
  414164:	(bad)  
  414166:	mov    eax,0x41648c63
  41416b:	jle    0x4141b0
  41416d:	adc    ch,BYTE PTR [ebp-0x164043c2]
  414173:	lds    esp,FWORD PTR [eax]
  414175:	jns    0x4141c6
  414177:	cmp    BYTE PTR [edi],bl
  414179:	mov    edx,0x95f29bb3
  41417e:	test   DWORD PTR ds:0x5edd86e9,esp
  414184:	pop    ds
  414185:	mov    esi,0xb3e8ec8b
  41418a:	daa    
  41418b:	xchg   BYTE PTR [ebx-0x6578f1d9],dl
  414191:	repnz sub al,0xfa
  414194:	fwait
  414195:	pusha  
  414196:	mov    ebx,0x9483504e
  41419b:	add    BYTE PTR [ebp+0x1770a0ac],0x91
  4141a2:	push   cs
  4141a3:	fdivr  DWORD PTR [ebp-0x2282e4fe]
  4141a9:	and    eax,0x607d7631
  4141ae:	ret    
  4141af:	cmp    bl,ch
  4141b1:	xor    DWORD PTR [edx+0x8],0xffffff93
  4141b5:	shl    DWORD PTR [edx+0x2e7be95b],0x9d
  4141bc:	ret    0x11c1
  4141bf:	pop    ecx
  4141c0:	jl     0x414182
  4141c2:	frstor [esi-0x3]
  4141c5:	dec    edx
  4141c6:	cld    
  4141c7:	scas   eax,DWORD PTR es:[edi]
  4141c8:	and    DWORD PTR [esi+0x21],edx
  4141cb:	daa    
  4141cc:	es mov ebp,0xdb3c801f
  4141d2:	retf   
  4141d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141d4:	jnp    0x4141c4
  4141d6:	push   ecx
  4141d7:	adc    bh,bl
  4141d9:	fucompp 
  4141db:	mov    ah,0xcf
  4141dd:	add    edi,DWORD PTR [ebx-0x42332e12]
  4141e3:	sbb    esi,DWORD PTR [eax+0x27]
  4141e6:	aas    
  4141e7:	jne    0x4141d6
  4141e9:	mov    bh,0x3a
  4141eb:	test   eax,0x1ed733b9
  4141f0:	push   esp
  4141f1:	(bad)  
  4141f2:	sbb    bl,al
  4141f4:	stos   BYTE PTR es:[edi],al
  4141f5:	std    
  4141f6:	or     ah,BYTE PTR [ebx]
  4141f8:	scas   eax,DWORD PTR es:[edi]
  4141f9:	xor    esp,edx
  4141fb:	mov    ds:0x54476240,eax
  414200:	jle    0x414191
  414202:	daa    
  414203:	adc    eax,0xcbe232b0
  414208:	jg     0x4141a8
  41420a:	mov    bl,BYTE PTR [ebp-0x1f13ee22]
  414210:	xor    DWORD PTR [edx-0x6c],ebp
  414213:	test   DWORD PTR [edx],edi
  414215:	daa    
  414216:	xor    bh,al
  414218:	ins    DWORD PTR es:[edi],dx
  414219:	jmp    0x4eee:0x6379d41a
  414220:	(bad)  
  414221:	mov    cl,0x41
  414223:	mov    ebx,0xed620446
  414228:	repnz and BYTE PTR [ecx-0x833bd50],0xa8
  414230:	popf   
  414231:	ins    BYTE PTR es:[edi],dx
  414232:	mov    esp,0xc08a02bc
  414237:	mov    ah,0x92
  414239:	(bad)
  41423e:	xchg   edx,eax
  41423f:	and    edi,esp
  414241:	and    eax,0x334c3f25
  414246:	test   DWORD PTR cs:[ebp+0x7849b7d2],esi
  41424d:	lea    edx,[esp+edi*8]
  414250:	xor    DWORD PTR [edx-0x54],edx
  414253:	test   BYTE PTR [ecx+0x4e],dl
  414256:	sub    ebx,esp
  414258:	mov    dh,0x50
  41425a:	and    ecx,DWORD PTR [edx-0x62e735b]
  414260:	shl    edx,1
  414262:	cmp    esp,DWORD PTR cs:[ecx]
  414265:	outs   dx,BYTE PTR ds:[esi]
  414266:	mov    esi,0x1377b278
  41426b:	xchg   ecx,eax
  41426c:	std    
  41426d:	loopne 0x4142ac
  41426f:	ds push esi
  414271:	rol    esp,cl
  414273:	xchg   edi,eax
  414274:	sub    cl,BYTE PTR [ecx+0x6]
  414277:	mov    ah,0xb3
  414279:	push   es
  41427a:	outs   dx,DWORD PTR ds:[esi]
  41427b:	daa    
  41427c:	jbe    0x414257
  41427e:	push   cs
  41427f:	or     cl,BYTE PTR [esp+ecx*8]
  414282:	enter  0x621a,0x36
  414286:	jp     0x414290
  414288:	test   ebp,eax
  41428a:	cmp    edi,DWORD PTR [eax]
  41428c:	pop    es
  41428d:	sub    bl,al
  41428f:	test   BYTE PTR [esi],bl
  414291:	xor    al,0xd6
  414293:	ret    0x35f2
  414296:	push   ebx
  414297:	mov    ds:0xf40874ba,al
  41429c:	shr    DWORD PTR [esi-0x65c6f4e9],1
  4142a2:	cmp    esp,eax
  4142a4:	dec    esi
  4142a5:	cmp    esp,DWORD PTR [edi+0x65]
  4142a8:	sahf   
  4142a9:	xchg   esp,eax
  4142aa:	mov    edx,DWORD PTR [esi]
  4142ac:	iret   
  4142ad:	nop
  4142ae:	les    eax,FWORD PTR [eax]
  4142b0:	leave  
  4142b1:	jno    0x4142a0
  4142b3:	cwde   
  4142b4:	test   eax,0xaf8f7e7c
  4142b9:	xchg   ecx,eax
  4142ba:	dec    ebp
  4142bb:	fcom   DWORD PTR [edi-0x550e96b0]
  4142c1:	xchg   ecx,eax
  4142c2:	ds ja  0x4142d6
  4142c5:	retf   0x78c3
  4142c8:	stos   DWORD PTR es:[edi],eax
  4142c9:	jle    0x4142d9
  4142cb:	or     al,0xf5
  4142cd:	(bad)  
  4142ce:	aad    0xce
  4142d0:	mov    edi,0x3bdfc555
  4142d5:	dec    esi
  4142d6:	inc    edx
  4142d7:	mov    BYTE PTR [edx],ah
  4142d9:	adc    dl,BYTE PTR [edi]
  4142db:	push   0xa6851fc6
  4142e0:	cmp    al,0x94
  4142e2:	ror    bl,0x83
  4142e5:	lods   al,BYTE PTR ds:[esi]
  4142e6:	hlt    
  4142e7:	ja     0x4142d2
  4142e9:	push   ds
  4142ea:	mov    dl,0xae
  4142ec:	sub    dl,BYTE PTR [eax+0x1d79adb0]
  4142f2:	and    BYTE PTR [ebx-0x296ac182],bl
  4142f8:	pop    edi
  4142f9:	mov    edx,0xbcbd84a3
  4142fe:	or     al,bl
  414300:	push   es
  414301:	push   eax
  414302:	dec    ebp
  414303:	es lahf 
  414305:	mov    eax,es:0xd3d2a403
  41430b:	jmp    0x414314
  41430d:	cmp    ecx,ebx
  41430f:	out    dx,eax
  414310:	out    0x6a,al
  414312:	es aaa 
  414314:	into   
  414315:	and    cl,0xda
  414318:	push   ecx
  414319:	neg    DWORD PTR es:[edx-0xf8f2ff3]
  414320:	add    al,BYTE PTR [eax+0x3e512789]
  414326:	int    0xc6
  414328:	iret   
  414329:	inc    edi
  41432a:	pop    ds
  41432b:	imul   ebx,DWORD PTR [ebx+esi*4+0x492de8ac],0xffffffd0
  414333:	aas    
  414334:	gs push edi
  414336:	mov    dl,0x33
  414338:	lods   al,BYTE PTR ds:[esi]
  414339:	leave  
  41433a:	ja     0x414392
  41433c:	(bad)  
  41433e:	sbb    DWORD PTR [ebx+ebx*8-0x31690998],ebp
  414345:	xor    BYTE PTR [edi],0xff
  414348:	std    
  414349:	mov    eax,ds:0xb081f2c1
  41434e:	xchg   ah,ch
  414350:	jg     0x414321
  414352:	imul   eax,DWORD PTR [ecx+0x18],0x7129676a
  414359:	std    
  41435a:	rcl    DWORD PTR [esi-0x3e],cl
  41435d:	loope  0x4143d2
  41435f:	mov    esp,0x4ef04be
  414364:	lods   al,BYTE PTR ds:[esi]
  414365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414366:	inc    eax
  414367:	popa   
  414368:	(bad)  
  414369:	clc    
  41436a:	into   
  41436b:	(bad)  
  41436c:	mov    eax,ds:0x4363f761
  414371:	sbb    BYTE PTR [edi],cl
  414373:	je     0x414316
  414375:	rol    DWORD PTR [edi+0x18],1
  414378:	xchg   ebx,eax
  414379:	xor    BYTE PTR [ecx-0x467fedb6],cl
  41437f:	jno    0x414328
  414381:	out    0x24,al
  414383:	xchg   esi,eax
  414384:	shl    DWORD PTR [esi-0x3a10a39e],1
  41438a:	add    DWORD PTR [edi],ecx
  41438c:	jno    0x4143bb
  41438e:	rcr    BYTE PTR [eax+0x23bbb999],1
  414394:	inc    ecx
  414395:	or     ah,ah
  414397:	pop    edi
  414398:	xor    bl,BYTE PTR [ebx-0x4e45a5eb]
  41439e:	mov    esi,0x1ea4b46e
  4143a3:	mov    dh,0xfe
  4143a5:	mov    ds:0x21ec9f29,eax
  4143aa:	mov    ds:0xd582b515,al
  4143af:	jp     0x414425
  4143b1:	inc    edx
  4143b2:	add    edx,DWORD PTR [esi+ebx*8+0x35]
  4143b6:	add    DWORD PTR [edi-0x3e73ee84],0x4282f26a
  4143c0:	pop    eax
  4143c1:	cmp    DWORD PTR [ebx+0x42fceaf1],edx
  4143c7:	shl    DWORD PTR [esp+esi*8-0x6be187f6],1
  4143ce:	and    bh,cl
  4143d0:	gs mov esi,0xff230546
  4143d6:	inc    esi
  4143d7:	fwait
  4143d8:	jno    0x414448
  4143da:	ret    0xddff
  4143dd:	sub    DWORD PTR [edi-0x25],edx
  4143e0:	rcl    DWORD PTR [edi+0x6784d466],cl
  4143e6:	add    al,al
  4143e8:	call   0xa3774136
  4143ed:	sub    esp,ecx
  4143ef:	cmp    al,0xc8
  4143f1:	leave  
  4143f2:	cmp    BYTE PTR [esp+0x27],ah
  4143f6:	ins    DWORD PTR es:[edi],dx
  4143f7:	imul   esp,DWORD PTR [edi],0x5db96450
  4143fd:	pop    ebx
  4143fe:	mov    cl,0x5e
  414400:	pusha  
  414401:	cli    
  414402:	fdiv   DWORD PTR [eax*8+0x6225dd13]
  414409:	inc    ecx
  41440a:	inc    esi
  41440b:	mov    cl,0x1e
  41440d:	jl     0x41440f
  41440f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414411:	or     BYTE PTR [eax+0x5a],dl
  414414:	(bad)  
  414415:	ins    DWORD PTR es:[edi],dx
  414416:	hlt    
  414417:	jmp    0xaa9b:0x6787a944
  41441e:	jns    0x414472
  414420:	out    dx,al
  414421:	outs   dx,BYTE PTR fs:[esi]
  414423:	xchg   BYTE PTR [esi-0x69],dl
  414426:	and    BYTE PTR [ebx-0x3815ccd1],al
  41442c:	or     ebp,DWORD PTR [ebx]
  41442e:	leave  
  41442f:	sbb    DWORD PTR [edx-0x6e6a5249],edi
  414435:	scas   eax,DWORD PTR es:[edi]
  414436:	push   edi
  414437:	dec    edx
  414438:	jle    0x414414
  41443a:	es out dx,eax
  41443c:	jp     0x414461
  41443e:	and    eax,DWORD PTR [edx]
  414440:	aad    0xc4
  414442:	popf   
  414443:	adc    ebp,ebp
  414445:	inc    edi
  414446:	sub    eax,0x215a7eb8
  41444b:	stc    
  41444c:	adc    BYTE PTR [eax-0x55],dl
  41444f:	std    
  414450:	jmp    0x9a94:0x3914f9ed
  414457:	ret    
  414458:	adc    BYTE PTR [edi-0x566b8e50],cl
  41445e:	js     0x4143eb
  414460:	fld    DWORD PTR [ebp+0x3b]
  414463:	xchg   esi,eax
  414464:	cmp    al,0x2f
  414466:	sub    al,0x96
  414468:	dec    esi
  414469:	and    dh,al
  41446b:	xchg   edi,eax
  41446c:	pop    ds
  41446d:	data16 shr BYTE PTR [ebx-0x536e75e6],0xb5
  414475:	fstp   DWORD PTR [edx]
  414477:	xchg   edx,eax
  414478:	std    
  414479:	push   ebp
  41447a:	jbe    0x414427
  41447c:	sbb    al,0xad
  41447e:	mov    ch,BYTE PTR ds:0x7b270c96
  414484:	push   cs
  414485:	(bad)  
  414486:	rol    dl,1
  414488:	repz xchg ebx,eax
  41448a:	pop    ds
  41448b:	sbb    eax,ecx
  41448d:	or     ch,dl
  41448f:	call   0x336140a4
  414494:	jg     0x41446c
  414496:	daa    
  414497:	cmp    eax,0x8155d259
  41449c:	add    al,BYTE PTR [ecx-0x4ccc1e26]
  4144a2:	xchg   DWORD PTR [eax+0x2],ebx
  4144a5:	and    al,0x1c
  4144a7:	imul   edi,DWORD PTR [ecx-0x38],0x1afe0e09
  4144ae:	repnz std 
  4144b0:	retf   
  4144b1:	mov    esp,0x4b1deee4
  4144b6:	clc    
  4144b7:	adc    edi,ebp
  4144b9:	test   al,0xe8
  4144bb:	mov    ch,0x4d
  4144bd:	les    ebx,FWORD PTR [edx-0x2d6c0e53]
  4144c3:	mov    eax,0xb51f8c4c
  4144c8:	jbe    0x4144d0
  4144ca:	push   es
  4144cb:	and    edx,DWORD PTR [edx]
  4144cd:	cmp    DWORD PTR [eax],ebx
  4144cf:	mov    WORD PTR [eax],cs
  4144d1:	(bad)  
  4144d2:	fwait
  4144d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d4:	mov    BYTE PTR [ebp+0x7c60db3d],ch
  4144da:	mov    al,0x84
  4144dc:	dec    ecx
  4144dd:	ins    DWORD PTR es:[edi],dx
  4144de:	retf   
  4144df:	(bad)  
  4144e0:	ror    DWORD PTR [ecx],cl
  4144e2:	aad    0xa9
  4144e4:	neg    DWORD PTR [edx-0x26]
  4144e7:	imul   edi,DWORD PTR [ecx],0xdb6a56ad
  4144ed:	xchg   BYTE PTR [eax+eiz*2],bh
  4144f0:	sbb    ebx,ecx
  4144f2:	pop    esi
  4144f3:	push   es
  4144f4:	jnp    0x4144f2
  4144f6:	ja     0x4144e2
  4144f8:	push   ecx
  4144f9:	(bad)  
  4144fa:	shl    bh,1
  4144fc:	inc    ebx
  4144fd:	jno    0x414519
  4144ff:	push   eax
  414500:	loop   0x41451e
  414502:	push   eax
  414503:	cmc    
  414504:	jmp    0xb03b:0xe7e6f88
  41450b:	push   ebp
  41450c:	popa   
  41450d:	outs   dx,DWORD PTR ds:[esi]
  41450e:	pop    edx
  41450f:	push   edx
  414510:	icebp  
  414511:	push   ss
  414512:	xchg   edi,eax
  414513:	jge    0x414593
  414515:	cmp    eax,0x196c2fbb
  41451a:	jp     0x4144b8
  41451c:	xchg   edx,eax
  41451d:	add    BYTE PTR ds:0xf71807f0,0xf2
  414524:	ror    DWORD PTR [eax+0x39e4a9e7],cl
  41452a:	retf   
  41452b:	xchg   ebp,eax
  41452c:	xor    edi,DWORD PTR [ecx+0x53]
  41452f:	pop    ecx
  414530:	jg     0x414593
  414532:	and    DWORD PTR [eax],ebp
  414534:	dec    ecx
  414535:	mov    WORD PTR [eax+0xc],cs
  414538:	xor    eax,0x9a41ac0f
  41453d:	xor    al,0xbf
  41453f:	pop    ebx
  414540:	sbb    ah,BYTE PTR [edx]
  414542:	mov    bh,0xd4
  414544:	cmp    ch,ah
  414546:	leave  
  414547:	jle    0x4145c2
  414549:	ss and al,0xaa
  41454c:	cmp    eax,0xef5d0404
  414551:	fidiv  WORD PTR [esi+esi*1]
  414554:	lea    esi,[ecx+edx*8-0x77a79ff9]
  41455b:	sysret 
  41455d:	in     al,dx
  41455e:	push   eax
  41455f:	mov    bl,0x9b
  414561:	es mov ecx,0x5389fc15
  414567:	jnp    0x4145b0
  414569:	inc    ebx
  41456a:	mov    ah,cl
  41456c:	add    DWORD PTR [ebx+0x62da726b],ebx
  414572:	out    dx,eax
  414573:	std    
  414574:	ins    DWORD PTR es:[edi],dx
  414575:	pop    esp
  414576:	aad    0x25
  414578:	(bad)  
  414579:	and    eax,0xb1bc23de
  41457e:	jb     0x4145b4
  414580:	xchg   esp,eax
  414581:	cmp    BYTE PTR [ecx],bl
  414583:	xor    eax,0x26003c71
  414588:	sub    al,0xe4
  41458a:	jns    0x4145bf
  41458c:	loope  0x414564
  41458e:	mov    dl,0x4d
  414590:	imul   BYTE PTR [edi+0x36e244da]
  414596:	push   esi
  414597:	push   0x69
  414599:	test   dh,0x7f
  41459c:	addr16 pop ebx
  41459e:	call   0xc5508357
  4145a3:	loope  0x4145f4
  4145a5:	add    eax,0xe422dfc4
  4145aa:	lds    edx,FWORD PTR [ebp-0x3b]
  4145ad:	jmp    0x755f:0x421d6954
  4145b4:	push   ecx
  4145b5:	dec    esi
  4145b6:	jne    0x414553
  4145b8:	dec    ebp
  4145b9:	and    dh,cl
  4145bb:	sbb    BYTE PTR [ecx-0x654d8569],0xd
  4145c2:	retf   0xc994
  4145c5:	cmc    
  4145c6:	imul   edx,ebp,0x8
  4145c9:	fldcw  WORD PTR ds:0x445985e9
  4145cf:	stos   BYTE PTR es:[edi],al
  4145d0:	jbe    0x414580
  4145d2:	call   0x3fbc0a34
  4145d7:	jb     0x4145c9
  4145d9:	pop    ebx
  4145da:	xchg   edi,eax
  4145db:	mov    ch,0x10
  4145dd:	out    0x20,eax
  4145df:	outs   dx,BYTE PTR ds:[esi]
  4145e0:	out    0xb,al
  4145e2:	mov    cl,0x98
  4145e4:	lods   eax,DWORD PTR ds:[esi]
  4145e5:	neg    BYTE PTR [esi+0x3908df11]
  4145eb:	in     eax,0xf
  4145ed:	pop    edx
  4145ee:	pop    esi
  4145ef:	in     eax,dx
  4145f0:	mov    esi,0x94a9eb09
  4145f5:	inc    ebp
  4145f6:	jmp    0xf9c7:0xc7a80822
  4145fd:	mov    ecx,0x6d1d0a1f
  414602:	mov    edx,0x259f4c1
  414607:	imul   esp,ebp,0x37
  41460a:	jb     0x4145e1
  41460c:	aaa    
  41460d:	popf   
  41460e:	hlt    
  41460f:	sbb    eax,0x14ddc2a8
  414614:	sub    cl,BYTE PTR [edx+ecx*8]
  414617:	icebp  
  414618:	fadd   QWORD PTR [edx+0x67fa927b]
  41461e:	jne    0x414634
  414620:	aas    
  414621:	cmp    eax,0x85e3d45c
  414626:	xchg   edx,eax
  414627:	leave  
  414628:	cwde   
  414629:	fwait
  41462a:	mov    ebx,0x2b478876
  41462f:	ror    BYTE PTR [ebp+0x3],0xb2
  414633:	jo     0x414657
  414635:	repnz xchg ecx,eax
  414637:	mov    edx,0xa7dc75d5
  41463c:	mov    ecx,0xc1376f1c
  414641:	(bad)  
  414642:	std    
  414643:	push   esi
  414644:	fdivr  QWORD PTR [edx+0x169caaa3]
  41464a:	cmp    dl,BYTE PTR [eax-0x30fe28ef]
  414650:	xor    eax,DWORD PTR [ebp+0x4536f81e]
  414656:	mov    ds:0xc8203f2a,eax
  41465b:	push   esi
  41465c:	iret   
  41465d:	jno    0x414698
  41465f:	pop    ss
  414660:	jg     0x4146a9
  414662:	das    
  414663:	or     eax,DWORD PTR [edx+0x6ee37e7c]
  414669:	and    DWORD PTR [ebp-0x77],ecx
  41466c:	mov    BYTE PTR [esi],cl
  41466e:	dec    edx
  41466f:	inc    esi
  414670:	jmp    0x41460e
  414672:	inc    esi
  414673:	test   BYTE PTR [ecx+0xe2b4770],ah
  414679:	loop   0x4146a9
  41467b:	push   ss
  41467c:	stos   BYTE PTR es:[edi],al
  41467d:	pop    edx
  41467e:	push   ecx
  41467f:	push   ebp
  414680:	lds    ebx,FWORD PTR [edi+esi*2+0x60]
  414684:	jae    0x4146ef
  414686:	lock fdivr QWORD PTR [ebp+0x7b]
  41468a:	daa    
  41468b:	adc    al,BYTE PTR ds:0x24a296ba
  414691:	repnz pushf 
  414693:	push   eax
  414694:	xchg   BYTE PTR [esi+edx*4+0x75913e33],dh
  41469b:	inc    esp
  41469c:	ins    DWORD PTR es:[edi],dx
  41469d:	push   0xe
  41469f:	push   0x6
  4146a1:	push   esi
  4146a2:	and    edx,DWORD PTR [ecx]
  4146a4:	fisttp DWORD PTR [ebx]
  4146a6:	or     ch,ah
  4146a8:	loopne 0x4146fe
  4146aa:	add    bl,dl
  4146ac:	add    ch,bl
  4146ae:	add    ch,ch
  4146b0:	inc    ecx
  4146b1:	fst    QWORD PTR [edx]
  4146b3:	and    bl,BYTE PTR [edi+esi*2]
  4146b6:	pop    edi
  4146b7:	stos   DWORD PTR es:[edi],eax
  4146b8:	or     al,0xd6
  4146ba:	sti    
  4146bb:	push   ss
  4146bc:	dec    edi
  4146bd:	gs pop ecx
  4146bf:	mov    eax,0x44d9afd6
  4146c4:	dec    ebx
  4146c5:	ds fwait
  4146c7:	inc    edi
  4146c8:	mov    edi,0x9987e161
  4146cd:	sahf   
  4146ce:	cmc    
  4146cf:	mov    eax,0x7eadf49f
  4146d4:	and    ah,bh
  4146d6:	idiv   BYTE PTR [esi+0x32de3e76]
  4146dc:	scas   eax,DWORD PTR es:[edi]
  4146dd:	std    
  4146de:	cmc    
  4146df:	clc    
  4146e0:	ins    BYTE PTR es:[edi],dx
  4146e1:	jp     0x414740
  4146e3:	or     al,0x41
  4146e5:	data16 ja 0x41466b
  4146e8:	xor    al,0x8b
  4146ea:	aad    0x77
  4146ec:	loop   0x414767
  4146ee:	sub    BYTE PTR ds:0xafb3fe26,0x32
  4146f5:	push   ss
  4146f6:	pop    edi
  4146f7:	pop    ebx
  4146f8:	sbb    DWORD PTR [esi],ecx
  4146fa:	add    ecx,ebp
  4146fc:	in     al,dx
  4146fd:	mov    eax,0x4fbf870e
  414702:	sub    edx,DWORD PTR [ebx-0x2f5e59ab]
  414708:	cli    
  414709:	cdq    
  41470a:	mov    al,ds:0x9f573f1
  41470f:	mov    DWORD PTR [ebx],ebx
  414711:	xor    BYTE PTR [edi+0x68],0xb2
  414715:	mov    ds:0x5c837105,eax
  41471a:	xor    eax,0x6a647888
  41471f:	outs   dx,DWORD PTR ds:[esi]
  414720:	sub    edi,DWORD PTR [esi]
  414722:	push   edx
  414723:	aas    
  414724:	dec    edi
  414725:	and    eax,DWORD PTR [ecx-0x3e]
  414728:	fimul  DWORD PTR [ebx+0x2b42acd4]
  41472e:	aas    
  41472f:	sub    DWORD PTR [ecx],ecx
  414731:	inc    edx
  414732:	jne    0x414725
  414734:	out    0xe0,al
  414736:	mov    eax,0x9b9cc62e
  41473b:	aam    0xf6
  41473d:	mov    cl,0x47
  41473f:	and    esi,edi
  414741:	test   al,0xd4
  414743:	dec    ebx
  414744:	mov    esp,0xb423035b
  414749:	call   DWORD PTR [ebp+ebx*4+0x2d]
  41474d:	adc    DWORD PTR [ecx+ecx*1+0x42],edi
  414751:	jns    0x4147b5
  414753:	outs   dx,BYTE PTR ds:[esi]
  414754:	cmp    eax,0x46d6ba7f
  414759:	aas    
  41475a:	sbb    esi,ebx
  41475c:	add    BYTE PTR [esi+0x5a],bh
  41475f:	pop    es
  414760:	xor    esp,edx
  414762:	or     eax,0x36d05746
  414767:	inc    ebp
  414768:	(bad)  
  414769:	stos   DWORD PTR es:[edi],eax
  41476a:	call   0xc6367c6
  41476f:	mov    bl,0xfb
  414771:	test   eax,0x68b1fae6
  414776:	pop    ecx
  414777:	adc    BYTE PTR [esi+0x79],0x96
  41477b:	xor    DWORD PTR [ecx+ecx*8-0x5477671c],esp
  414782:	aaa    
  414783:	jg     0x414758
  414785:	mov    esp,0x2232d481
  41478a:	test   esp,0x3a7b2b7d
  414790:	test   eax,0x6fc04809
  414795:	mov    ah,0x2d
  414797:	cdq    
  414798:	mov    cl,0xc6
  41479a:	add    eax,0xf0cc89ae
  41479f:	inc    esp
  4147a0:	out    0xfe,al
  4147a2:	sub    eax,0x493a158d
  4147a7:	cdq    
  4147a8:	pop    ss
  4147a9:	icebp  
  4147aa:	test   al,0xf8
  4147ac:	das    
  4147ad:	fs stos BYTE PTR es:[edi],al
  4147af:	mov    esp,0xc742469f
  4147b4:	call   0xfd6e:0x48b0e68e
  4147bb:	xchg   ebp,eax
  4147bc:	mov    WORD PTR [ebx+0x50],gs
  4147bf:	lss    edi,FWORD PTR [ebx+0x5857cd1e]
  4147c6:	fdiv   QWORD PTR [esi+eiz*2]
  4147c9:	into   
  4147ca:	(bad)  
  4147cc:	lahf   
  4147cd:	jge    0x41476d
  4147cf:	adc    esp,ecx
  4147d1:	lods   eax,DWORD PTR ds:[esi]
  4147d2:	mov    eax,0x5ae53d48
  4147d7:	or     bl,dl
  4147d9:	cmp    al,BYTE PTR [edx+0x39ec1814]
  4147df:	js     0x414784
  4147e1:	mov    WORD PTR [ebp+eiz*1-0x3a386c73],cs
  4147e8:	add    BYTE PTR [ebx-0x39],0xca
  4147ec:	ror    BYTE PTR ds:0x6886a71f,0x72
  4147f3:	fmul   DWORD PTR ds:0x5b4bc81e
  4147f9:	into   
  4147fa:	test   BYTE PTR [edi],al
  4147fc:	out    dx,al
  4147fd:	jmp    0x883cf1f1
  414802:	repz arpl WORD PTR [ecx+edx*1+0x4aa43e0],bp
  41480a:	bound  ecx,QWORD PTR [ebx]
  41480c:	or     ch,dl
  41480e:	dec    ebp
  41480f:	push   esp
  414810:	xchg   esp,eax
  414811:	inc    esi
  414812:	inc    BYTE PTR [edi+0x1e]
  414815:	hlt    
  414816:	mov    cs,WORD PTR [esi]
  414818:	cld    
  414819:	jl     0x41486e
  41481b:	jae    0x414836
  41481d:	mov    dl,BYTE PTR [ecx]
  41481f:	and    ebp,esi
  414821:	ret    0x8486
  414824:	push   ecx
  414825:	(bad)  
  414826:	popf   
  414827:	icebp  
  414828:	adc    eax,0x2511adc
  41482d:	stos   DWORD PTR es:[edi],eax
  41482e:	mov    bh,0xcb
  414830:	ret    0x39b3
  414833:	dec    ebp
  414834:	xor    bl,BYTE PTR [edx-0x5dab967d]
  41483a:	jmp    FWORD PTR [esi]
  41483c:	push   0x68130219
  414841:	(bad)  
  414842:	inc    bx
  414844:	cmp    al,0x82
  414846:	test   esp,esi
  414848:	or     eax,DWORD PTR [ebx+0x3d977d9d]
  41484e:	pop    esi
  414850:	push   cs
  414851:	or     BYTE PTR [esi-0x80],0xa2
  414855:	bound  ebx,QWORD PTR [ecx-0x6a4f4a87]
  41485b:	popf   
  41485c:	jbe    0x4148c1
  41485e:	int3   
  41485f:	stos   DWORD PTR es:[edi],eax
  414860:	addr16 aaa 
  414862:	mov    ah,0x1d
  414864:	xor    esi,edi
  414866:	in     eax,dx
  414867:	dec    edx
  414868:	rep lods al,BYTE PTR ds:[esi]
  41486a:	jbe    0x41481c
  41486c:	jns    0x414873
  41486e:	jle    0x414881
  414870:	inc    esi
  414871:	mov    al,BYTE PTR [ebx+0x71]
  414874:	gs std 
  414876:	xor    eax,0xdc9632ae
  41487b:	jle    0x4148a7
  41487d:	pop    esi
  41487e:	inc    ecx
  41487f:	loop   0x414895
  414881:	in     al,dx
  414882:	push   es
  414883:	push   es
  414884:	xchg   edx,eax
  414885:	(bad)  
  414886:	rol    DWORD PTR [esi],1
  414888:	mov    ah,0xd6
  41488a:	or     ebx,DWORD PTR [ebp-0x6e]
  41488d:	jbe    0x414900
  41488f:	(bad)  
  414890:	and    ebp,eax
  414892:	js     0x4148a8
  414894:	xchg   esi,eax
  414895:	imul   ebp,DWORD PTR [ecx-0x69],0x55
  414899:	je     0x41481d
  41489b:	adc    BYTE PTR [ebp+edx*2-0x1a007108],al
  4148a2:	imul   eax,DWORD PTR [eax-0x75],0xa4b1c3be
  4148a9:	aad    0xb7
  4148ab:	dec    eax
  4148ac:	(bad)
  4148af:	mov    BYTE PTR [edx+eax*4+0x2cc3d25],0xb5
  4148b7:	cld    
  4148b8:	jne    0x414922
  4148ba:	into   
  4148bb:	jge    0x4148db
  4148bd:	jl     0x4148f0
  4148bf:	mov    DWORD PTR [edx-0x1c975a52],edx
  4148c5:	xor    BYTE PTR [edi+0x46],bh
  4148c8:	pop    es
  4148c9:	cmp    DWORD PTR [edi+0x69fe8fd9],edi
  4148cf:	popa   
  4148d0:	jno    0x41488c
  4148d2:	adc    ch,ch
  4148d4:	lahf   
  4148d5:	xor    BYTE PTR [ecx+0x24],0x76
  4148d9:	cdq    
  4148da:	jle    0x414916
  4148dc:	in     eax,dx
  4148dd:	retf   0x3a80
  4148e0:	pop    ss
  4148e1:	js     0x414930
  4148e3:	xor    dl,BYTE PTR ds:0x3cb532dc
  4148e9:	push   ecx
  4148ea:	in     al,dx
  4148eb:	push   edx
  4148ec:	jge    0x4148c6
  4148ee:	stos   BYTE PTR es:[edi],al
  4148ef:	adc    al,0xf0
  4148f1:	clc    
  4148f2:	xchg   edx,eax
  4148f3:	cld    
  4148f4:	inc    esp
  4148f5:	hlt    
  4148f6:	mov    cl,0x6d
  4148f8:	ja     0x41494d
  4148fa:	xchg   esp,eax
  4148fb:	popa   
  4148fc:	adc    BYTE PTR [ecx-0xf],bh
  4148ff:	enter  0x2828,0x3c
  414903:	retf   0x6ad6
  414906:	jbe    0x41496e
  414908:	lock jge 0x41493b
  41490b:	nop
  41490c:	test   esi,0xd3dd103d
  414912:	out    dx,al
  414913:	and    cl,cl
  414915:	xchg   al,cl
  414917:	xchg   edi,eax
  414918:	push   ebx
  414919:	adc    DWORD PTR [ebp+0x70c812ee],ebx
  41491f:	mov    DWORD PTR [ebp+0x21],esi
  414922:	lds    edx,FWORD PTR ds:0xfc8ceebe
  414928:	dec    esi
  414929:	and    ebx,esp
  41492b:	sbb    dh,cl
  41492d:	xor    BYTE PTR [esi],dl
  41492f:	fdivp  st(6),st
  414931:	shl    BYTE PTR [ebx+0x19e8fb7c],0x16
  414938:	jo     0x41493d
  41493a:	or     edi,DWORD PTR [ebx]
  41493c:	mov    eax,ds:0x211984eb
  414941:	sbb    cl,BYTE PTR [edi-0x1cc74a13]
  414947:	jmp    0x8123e764
  41494c:	dec    edx
  41494d:	out    0xdf,eax
  41494f:	pop    esi
  414950:	dec    edi
  414951:	stc    
  414952:	and    ah,BYTE PTR [ecx]
  414954:	out    dx,al
  414955:	xchg   ebp,eax
  414956:	in     eax,0xd0
  414958:	inc    esi
  414959:	mov    al,BYTE PTR [eax+0x1b]
  41495c:	das    
  41495d:	or     DWORD PTR [edx],eax
  41495f:	cmp    ebx,DWORD PTR [esi+ebp*4]
  414962:	push   ds
  414963:	dec    edi
  414964:	lods   al,BYTE PTR ds:[esi]
  414965:	add    BYTE PTR [ecx+0x1db7b2a5],ah
  41496b:	xor    ecx,0xc2e5c452
  414971:	pop    ebp
  414972:	call   0xe4dd:0x83e37ab8
  414979:	pop    edi
  41497a:	aad    0xab
  41497c:	stos   BYTE PTR es:[edi],al
  41497d:	push   ecx
  41497e:	fmul   QWORD PTR [esi-0x5d]
  414981:	adc    eax,0x1ff5233
  414986:	out    0xcb,al
  414988:	stos   BYTE PTR es:[edi],al
  414989:	iret   
  41498a:	je     0x4149b5
  41498c:	les    ecx,FWORD PTR [ecx+0x15]
  41498f:	sub    ecx,DWORD PTR [ebp-0x2558a570]
  414995:	dec    ebp
  414996:	dec    ecx
  414997:	bound  ecx,QWORD PTR [ecx]
  414999:	push   ds
  41499a:	cwde   
  41499b:	ret    
  41499c:	or     bh,BYTE PTR [edi*4+0x3dd76af3]
  4149a3:	sub    ebp,DWORD PTR [esi+0x58]
  4149a6:	adc    eax,0x63bf11d8
  4149ab:	cmp    DWORD PTR [ebx+0xb8251c8],0xffffff94
  4149b2:	mov    eax,ds:0xe3419e91
  4149b7:	dec    edx
  4149b8:	pop    esi
  4149b9:	ficomp DWORD PTR [edi+eax*8-0x35f84564]
  4149c0:	jb     0x414996
  4149c2:	addr16 int 0x1a
  4149c5:	mov    dl,0x42
  4149c7:	sub    eax,0xa0ee38fe
  4149cc:	mov    eax,ds:0x10d924e6
  4149d1:	inc    ecx
  4149d2:	rdmsr  
  4149d4:	xchg   si,ax
  4149d6:	ret    
  4149d7:	pusha  
  4149d8:	mov    ebp,eax
  4149da:	push   cs
  4149db:	mov    edi,0xc3ec7f30
  4149e0:	in     al,0x17
  4149e2:	cs jne 0x4149c2
  4149e5:	lods   eax,DWORD PTR ds:[esi]
  4149e6:	xchg   ecx,eax
  4149e7:	mov    ds:0xca1f04bd,al
  4149ec:	jp     0x4149b8
  4149ee:	xchg   ebx,eax
  4149ef:	repz mov ebp,0x9d3dd779
  4149f5:	dec    ecx
  4149f6:	xor    bl,dh
  4149f8:	push   esp
  4149f9:	(bad)  
  4149fb:	add    ch,dl
  4149fd:	lods   al,BYTE PTR ds:[esi]
  4149fe:	cmp    BYTE PTR [ebx-0x207afeff],0x40
  414a05:	scas   al,BYTE PTR es:[di]
  414a07:	sbb    BYTE PTR [edx+0xb2b053b],0x87
  414a0e:	add    ah,BYTE PTR [esi+eiz*2+0x58c095d1]
  414a15:	dec    ebp
  414a16:	bound  eax,QWORD PTR [ebx+0x28247a1e]
  414a1c:	pusha  
  414a1d:	mov    ds:0xeac71de6,al
  414a22:	mov    eax,ds:0xd33f7ca8
  414a27:	clc    
  414a28:	inc    esp
  414a29:	lea    ecx,[esi-0xf]
  414a2c:	fidivr DWORD PTR [eax-0xd4f146]
  414a32:	out    0x70,al
  414a34:	ret    0xf864
  414a37:	in     al,0x82
  414a39:	pop    esi
  414a3a:	jle    0x414a07
  414a3c:	push   es
  414a3d:	test   BYTE PTR [ebx+0x26],cl
  414a40:	dec    esp
  414a41:	cmp    eax,0x3aa0155e
  414a46:	fwait
  414a47:	inc    eax
  414a48:	test   DWORD PTR [ebp-0x1496aa69],0xecafe640
  414a52:	icebp  
  414a53:	jns    0x414a43
  414a55:	cmp    cl,BYTE PTR [edi+eiz*2-0x4464ee28]
  414a5c:	mov    dh,0x26
  414a5e:	mov    eax,ds:0x3acc6201
  414a63:	add    DWORD PTR [esi+0x2509dbb1],edi
  414a69:	(bad)  
  414a6b:	xor    esp,DWORD PTR [ebx+esi*4]
  414a6e:	clc    
  414a6f:	(bad)  
  414a70:	sbb    dl,BYTE PTR [edx+0x37]
  414a73:	outs   dx,BYTE PTR ds:[esi]
  414a74:	(bad)  
  414a75:	enter  0x5340,0xb6
  414a79:	xchg   edx,eax
  414a7a:	mov    esi,esp
  414a7c:	fcomp  DWORD PTR [eax+esi*2]
  414a7f:	push   eax
  414a80:	jecxz  0x414a22
  414a82:	or     eax,0xb5f42e1
  414a87:	mov    al,0xd4
  414a89:	jmp    0x414a7b
  414a8b:	mov    dh,0xd7
  414a8d:	test   eax,0x77562fea
  414a92:	jg     0x414a61
  414a94:	ror    edi,0x5f
  414a97:	xchg   bh,bh
  414a99:	daa    
  414a9a:	adc    edi,DWORD PTR [edx]
  414a9c:	std    
  414a9d:	mov    al,0xfd
  414a9f:	in     eax,0x16
  414aa1:	dec    ebx
  414aa2:	aad    0x2d
  414aa4:	addr16 (bad) 
  414aa7:	lods   eax,DWORD PTR ds:[esi]
  414aa8:	mov    ds:0x83c630c2,al
  414aad:	hlt    
  414aae:	int3   
  414aaf:	aam    0x8a
  414ab1:	out    dx,al
  414ab2:	jle    0x414b0d
  414ab4:	lock mov bh,0x9c
  414ab7:	xchg   DWORD PTR [esi-0x18fd166f],esp
  414abd:	int    0x73
  414abf:	lods   al,BYTE PTR ds:[esi]
  414ac0:	stc    
  414ac1:	xchg   edx,eax
  414ac2:	int    0x6d
  414ac4:	adc    BYTE PTR [eax+0x41a62ecc],dl
  414aca:	sbb    eax,0x49a72839
  414acf:	fs push eax
  414ad1:	jg     0x414b2e
  414ad3:	aam    0xbb
  414ad5:	jo     0x414af5
  414ad7:	loopne 0x414b0c
  414ad9:	loopne 0x414b34
  414adb:	pop    edx
  414adc:	push   edx
  414add:	out    0xf0,eax
  414adf:	and    cl,bh
  414ae1:	shr    DWORD PTR [esi-0xe7f7b64],cl
  414ae7:	repz lds esp,FWORD PTR [ecx]
  414aea:	mov    ah,0x2c
  414aec:	jnp    0x414b53
  414aee:	jg     0x414af1
  414af0:	cs xor edi,esp
  414af3:	fbld   TBYTE PTR [eax]
  414af5:	mov    ecx,0xd8e35006
  414afa:	ss clc 
  414afc:	cmp    bl,BYTE PTR [edi+esi*1+0x1a6ddaa1]
  414b03:	or     al,0x9e
  414b05:	mov    ebp,0x1dff57e
  414b0a:	sti    
  414b0b:	jne    0x414ac4
  414b0d:	dec    edi
  414b0e:	fidiv  DWORD PTR [esp-0x4616fdb6]
  414b15:	and    DWORD PTR [eax-0x5e],eax
  414b18:	push   es
  414b19:	or     al,0x64
  414b1b:	mov    ah,BYTE PTR [esp+ebp*8-0x3f]
  414b1f:	sbb    ebx,esi
  414b21:	mov    al,0xdc
  414b23:	mov    ch,BYTE PTR [esi+ecx*8+0x67]
  414b27:	imul   eax,esp,0x1d3f9088
  414b2d:	and    eax,edi
  414b2f:	adc    ebp,DWORD PTR es:[edi]
  414b32:	leave  
  414b33:	neg    ecx
  414b35:	stos   DWORD PTR es:[edi],eax
  414b36:	or     al,cl
  414b38:	hlt    
  414b39:	mov    ebp,0xa34b4f00
  414b3e:	xchg   esi,eax
  414b3f:	ret    0x9144
  414b42:	cmp    al,0x10
  414b44:	retf   0x7a3a
  414b47:	cmc    
  414b48:	cmp    al,0xce
  414b4a:	xor    DWORD PTR [edx+edx*2-0x475f7d58],edi
  414b51:	xchg   DWORD PTR [edi],eax
  414b53:	or     al,0xd0
  414b55:	test   DWORD PTR [ecx-0x37c99a1f],eax
  414b5b:	jp     0x414b64
  414b5d:	loope  0x414b78
  414b5f:	mov    bh,0xf2
  414b61:	and    al,0xe9
  414b63:	frstor ds:0x2fbbfcf3
  414b69:	xor    al,0x6c
  414b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6c:	jno    0x414b2a
  414b6e:	cmp    al,0x35
  414b70:	dec    edx
  414b71:	cld    
  414b72:	ja     0x414bce
  414b74:	push   es
  414b75:	and    al,0xae
  414b77:	mov    ebx,0xb09f7358
  414b7c:	sahf   
  414b7d:	cs jbe 0x414b2d
  414b80:	pop    es
  414b81:	sti    
  414b82:	push   eax
  414b83:	scas   eax,DWORD PTR es:[edi]
  414b84:	repnz cmp bl,dh
  414b87:	xchg   esi,eax
  414b88:	push   ebp
  414b89:	out    dx,al
  414b8a:	out    dx,eax
  414b8b:	xchg   ecx,eax
  414b8c:	retf   0xdbff
  414b8f:	mov    dh,BYTE PTR [ebp+0x38]
  414b92:	xor    eax,0x789217a4
  414b97:	imul   ecx,DWORD PTR [eax],0xffffff98
  414b9a:	adc    eax,0xa283cf09
  414b9f:	mov    BYTE PTR [edi-0x47],0x1
  414ba3:	ins    BYTE PTR es:[edi],dx
  414ba4:	clc    
  414ba5:	mov    edx,0xfb2ad262
  414baa:	ins    DWORD PTR es:[edi],dx
  414bab:	bound  edx,QWORD PTR [eax+edx*8]
  414bae:	aas    
  414baf:	js     0x414c1d
  414bb1:	faddp  st(2),st
  414bb3:	hlt    
  414bb4:	xchg   esi,eax
  414bb5:	pusha  
  414bb6:	mov    ebp,0x32a5376d
  414bbb:	aad    0x7d
  414bbd:	dec    ebp
  414bbe:	fst    QWORD PTR [edx+esi*4+0x5f]
  414bc2:	fs loope 0x414b6d
  414bc5:	cmp    BYTE PTR [eax-0x6406c71],dl
  414bcb:	les    ebx,FWORD PTR [edi+0x6656eb29]
  414bd1:	pcmpeqb mm3,QWORD PTR [ebp+0x155662ec]
  414bd8:	fild   DWORD PTR [edi+0x61]
  414bdb:	icebp  
  414bdc:	clc    
  414bdd:	jl     0x414c3d
  414bdf:	popf   
  414be0:	fcmovbe st,st(1)
  414be2:	ds call 0xecd8:0x5f4ffab9
  414bea:	push   ecx
  414beb:	shr    BYTE PTR [edi+0x3eadb8a1],cl
  414bf1:	cs loopne 0x414b8c
  414bf4:	daa    
  414bf5:	in     al,0xb
  414bf7:	addr16 ret 
  414bf9:	or     esi,DWORD PTR [esi-0x60]
  414bfc:	jmp    0x414bfe
  414bfe:	imul   ebx,edi,0xffffffa7
  414c01:	aas    
  414c02:	and    dl,dl
  414c04:	test   al,0x1a
  414c06:	push   ds
  414c07:	iret   
  414c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c09:	js     0x414c1f
  414c0b:	addr16 xor esp,0xeccbfc7a
  414c12:	out    dx,eax
  414c13:	mov    gs,WORD PTR [eax+0x86a66d]
  414c19:	outs   dx,DWORD PTR ss:[esi]
  414c1b:	mov    esp,0x516a2559
  414c20:	adc    cl,ch
  414c22:	je     0x414be0
  414c24:	xchg   esi,eax
  414c25:	(bad)  
  414c27:	pop    edx
  414c28:	jae    0x414bee
  414c2a:	fidiv  WORD PTR [ecx]
  414c2c:	pop    eax
  414c2d:	mov    bh,0xea
  414c2f:	or     eax,0xee1d9335
  414c34:	call   0x923c:0x4b6bb39c
  414c3b:	pop    ebx
  414c3c:	clc    
  414c3d:	cmp    DWORD PTR [esi-0x2babcc30],0x26
  414c44:	retf   0xf692
  414c47:	cmp    eax,0x12b0f4f3
  414c4c:	push   0xebcd6c7d
  414c51:	pop    esp
  414c52:	dec    esp
  414c53:	or     al,0xe6
  414c55:	and    ax,0xf544
  414c59:	cmp    DWORD PTR [ecx-0x47629eb1],esp
  414c5f:	(bad)  
  414c60:	push   ds
  414c61:	jbe    0x414ccc
  414c63:	adc    edi,DWORD PTR [ebx-0x38]
  414c66:	je     0x414ca3
  414c68:	fnstsw WORD PTR [edi-0x5280e312]
  414c6e:	bound  ebx,QWORD PTR [ebp+0x7129d4a1]
  414c74:	arpl   WORD PTR ds:0xa69fe5a6,di
  414c7a:	sbb    esp,DWORD PTR [edx-0x11fca9fc]
  414c80:	pop    es
  414c81:	retf   0x5b21
  414c84:	jne    0x414c95
  414c86:	mov    al,0xc3
  414c88:	push   ss
  414c89:	fst    DWORD PTR [edx-0x7128954d]
  414c8f:	or     eax,0x3f063cea
  414c94:	data16 adc al,0x82
  414c97:	jae    0x414cb7
  414c99:	lahf   
  414c9a:	in     al,0xc3
  414c9c:	pop    esi
  414c9d:	mov    ebx,0xf2afb759
  414ca2:	xchg   edx,eax
  414ca3:	hlt    
  414ca4:	sub    dl,BYTE PTR [esi+0x37861f8a]
  414caa:	jle    0x414c4a
  414cac:	pop    eax
  414cad:	imul   DWORD PTR es:[ebx-0x7bc2da5]
  414cb4:	int    0xa9
  414cb6:	push   edi
  414cb7:	mul    BYTE PTR [ecx-0x7810a1cb]
  414cbd:	inc    esi
  414cbe:	sbb    edx,DWORD PTR [edx+0x35]
  414cc1:	dec    esp
  414cc2:	xchg   ecx,edi
  414cc4:	sub    al,0x1
  414cc6:	mov    dh,0x8a
  414cc8:	push   ebx
  414cc9:	in     al,0xc8
  414ccb:	sub    al,0xef
  414ccd:	pushf  
  414cce:	inc    esp
  414ccf:	cs jle 0x414c60
  414cd2:	jmp    FWORD PTR [ebx+0x79]
  414cd5:	std    
  414cd6:	(bad)  
  414cd7:	pop    ss
  414cd8:	test   esi,edi
  414cda:	imul   edi,eax,0x57
  414cdd:	cmp    eax,0xcd264c9f
  414ce2:	jns    0x414d59
  414ce4:	or     BYTE PTR [esi+eax*8-0x7c],dh
  414ce8:	lahf   
  414ce9:	out    0x32,al
  414ceb:	sub    al,0x10
  414ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cef:	in     eax,0x92
  414cf1:	out    dx,al
  414cf2:	sub    eax,0xe50cb154
  414cf7:	pop    ds
  414cf8:	and    al,0x50
  414cfa:	xchg   esi,eax
  414cfb:	jnp    0x414cc8
  414cfd:	test   BYTE PTR [esi+0x1ef9621],ch
  414d03:	jle    0x414d47
  414d05:	dec    esi
  414d06:	lock or eax,0x93389408
  414d0c:	in     eax,0xfa
  414d0e:	shr    BYTE PTR [ebx-0x15],cl
  414d11:	sti    
  414d12:	add    BYTE PTR [ecx],0xb9
  414d15:	inc    ecx
  414d16:	lahf   
  414d17:	stc    
  414d18:	(bad)
  414d1b:	pop    ss
  414d1c:	mov    gs,WORD PTR [edi+0x6c]
  414d1f:	cmc    
  414d20:	dec    edx
  414d21:	lahf   
  414d22:	jne    0x414caa
  414d24:	dec    esi
  414d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d26:	int    0xf9
  414d28:	xor    al,0x1d
  414d2a:	fwait
  414d2b:	sbb    ebx,ecx
  414d2d:	mov    eax,ds:0x3b6f9d22
  414d32:	out    0xd9,eax
  414d34:	jge    0x414d38
  414d36:	cmp    ebx,DWORD PTR [edi]
  414d38:	js     0x414d96
  414d3a:	push   ecx
  414d3c:	jmp    0x3c32:0x2096bd9
  414d43:	(bad)  
  414d44:	and    bl,BYTE PTR [edx+0x7c]
  414d47:	dec    edx
  414d48:	pop    edx
  414d49:	jmp    0xf10d:0xe05ca8a8
  414d50:	cdq    
  414d51:	mov    ds:0x3e28ee1a,eax
  414d56:	cs test al,0xc3
  414d59:	shl    DWORD PTR [ecx-0x45045117],1
  414d5f:	push   cs
  414d60:	cmp    dl,BYTE PTR [ebp-0x351b16b6]
  414d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d67:	out    dx,eax
  414d68:	xchg   ebx,eax
  414d69:	out    0xac,eax
  414d6b:	dec    eax
  414d6c:	daa    
  414d6d:	xlat   BYTE PTR ds:[ebx]
  414d6e:	xchg   edi,eax
  414d6f:	pop    eax
  414d70:	push   ss
  414d71:	hlt    
  414d72:	mov    BYTE PTR [edx-0x2e],al
  414d75:	data16 or BYTE PTR [eax],ah
  414d78:	mov    ebp,0x2c389aa5
  414d7d:	mov    ebx,0x613452a1
  414d82:	mov    DWORD PTR [ebp-0x4ec7a0ec],esp
  414d88:	add    al,0x32
  414d8a:	sti    
  414d8b:	jb     0x414df8
  414d8d:	jmp    0x81eb:0x114342a2
  414d94:	pushf  
  414d95:	imul   DWORD PTR [edx+0x18590d43]
  414d9b:	data16 fist WORD PTR ss:[eax-0x15]
  414da0:	pop    ds
  414da1:	cdq    
  414da2:	sub    cl,BYTE PTR [ebx-0x4f]
  414da5:	pop    ss
  414da6:	dec    eax
  414da7:	(bad)  
  414da8:	fwait
  414da9:	inc    esp
  414daa:	jmp    0xb1f3ed6
  414daf:	push   eax
  414db0:	mov    bh,0x9
  414db2:	jbe    0x414d68
  414db4:	lods   eax,DWORD PTR ds:[esi]
  414db5:	fnstcw WORD PTR [edi-0x70]
  414db8:	cmp    al,0x2a
  414dba:	mov    ch,0x5b
  414dbc:	xchg   ebp,eax
  414dbd:	jo     0x414d5f
  414dbf:	ins    DWORD PTR es:[edi],dx
  414dc0:	mov    esi,DWORD PTR [ebp+esi*4+0x7e469c91]
  414dc7:	iret   
  414dc8:	stos   DWORD PTR es:[edi],eax
  414dc9:	push   eax
  414dca:	mov    ch,BYTE PTR [eax+0x26]
  414dcd:	out    0x56,eax
  414dcf:	pop    ebx
  414dd0:	ror    DWORD PTR [edi+esi*8+0x54],1
  414dd4:	fst    DWORD PTR [esi-0x68]
  414dd7:	addr16 hlt 
  414dd9:	es fs push edi
  414ddc:	ss dec ebx
  414dde:	test   DWORD PTR [edi+0x71],ebx
  414de1:	dec    edi
  414de2:	dec    eax
  414de3:	in     al,dx
  414de4:	and    DWORD PTR [ebx],0x5
  414de7:	sub    edi,edx
  414de9:	test   eax,0x39a4c396
  414dee:	xor    bh,BYTE PTR [edx+0x44]
  414df1:	or     esp,DWORD PTR [edx+edi*1]
  414df4:	sbb    DWORD PTR [ebx-0x16],edi
  414df7:	adc    DWORD PTR [edi],edi
  414df9:	mov    ch,0x8f
  414dfb:	fs mov bh,0xbc
  414dfe:	add    eax,0x75f5e7dc
  414e03:	aaa    
  414e04:	xchg   edi,eax
  414e05:	add    ah,ch
  414e07:	pop    esp
  414e08:	inc    ecx
  414e09:	xchg   dh,bh
  414e0b:	pop    eax
  414e0c:	push   cs
  414e0d:	sub    bh,ch
  414e0f:	pop    eax
  414e10:	test   DWORD PTR [edx-0x34],0x2574974e
  414e17:	(bad)  
  414e18:	cli    
  414e19:	ds cmp al,0x6b
  414e1c:	ss sbb al,0xc1
  414e1f:	aad    0x96
  414e21:	jmp    0x8a2c:0x33498f4f
  414e28:	ja     0x414e95
  414e2a:	dec    eax
  414e2b:	test   BYTE PTR [edi+0x39c57c6c],cl
  414e31:	xchg   DWORD PTR [eax-0x34],eax
  414e34:	cmp    BYTE PTR [eax-0x46],bh
  414e37:	jns    0x414eb5
  414e39:	inc    ebx
  414e3a:	mov    dl,0x9e
  414e3c:	jb     0x414e4c
  414e3e:	arpl   WORD PTR ds:[edi+0x3d],sp
  414e42:	sub    al,BYTE PTR ds:0x85e7290e
  414e48:	push   edi
  414e49:	gs stos DWORD PTR es:[edi],eax
  414e4b:	cmp    bl,bh
  414e4d:	mov    esp,0xd1a923ed
  414e52:	(bad)  [edx]
  414e54:	out    0x18,al
  414e56:	sti    
  414e57:	imul   eax,DWORD PTR [esi+0x74161d60],0xed8d91d1
  414e61:	or     BYTE PTR [edi+0xa73fed9],ah
  414e67:	dec    ebp
  414e68:	pop    es
  414e69:	xchg   esi,eax
  414e6a:	stc    
  414e6b:	mov    bl,0x36
  414e6d:	jl     0x414e94
  414e6f:	cwde   
  414e70:	outs   dx,DWORD PTR ds:[esi]
  414e71:	call   0xc9e2846e
  414e76:	call   0x3256fadb
  414e7b:	cmp    DWORD PTR [ebp-0x1c],ecx
  414e7e:	mov    edi,0x6e1a9a72
  414e83:	sar    BYTE PTR [esi+0x35853fef],1
  414e89:	push   DWORD PTR [ebp+0x65399f9e]
  414e8f:	mov    ch,BYTE PTR [esi-0xb822d1]
  414e95:	xchg   ebp,eax
  414e96:	in     al,0xe
  414e98:	cmp    dh,BYTE PTR [esi+edi*4]
  414e9b:	jp     0x414e7e
  414e9d:	test   al,0x25
  414e9f:	xlat   BYTE PTR ds:[ebx]
  414ea0:	push   ebx
  414ea1:	inc    edx
  414ea2:	mov    ah,BYTE PTR [edx-0x3c]
  414ea5:	adc    al,0x86
  414ea7:	jo     0x414e38
  414ea9:	inc    edx
  414eaa:	mov    edi,0xdf02bc30
  414eaf:	pop    es
  414eb0:	add    ch,BYTE PTR [eax+ecx*2]
  414eb3:	jbe    0x414e72
  414eb5:	cdq    
  414eb6:	inc    edi
  414eb7:	jmp    0x7cbce098
  414ebc:	pop    ebx
  414ebd:	push   es
  414ebe:	adc    ebp,DWORD PTR ds:[edx+0x55]
  414ec2:	dec    esp
  414ec3:	adc    al,0x67
  414ec5:	fiadd  DWORD PTR [ecx-0xc]
  414ec8:	xor    BYTE PTR [edx-0x67],0x1c
  414ecc:	mov    al,0xa0
  414ece:	mov    BYTE PTR [ebx+0x1985bcda],dl
  414ed4:	repnz xor ebx,DWORD PTR [ecx+0x6a]
  414ed8:	mov    edx,0xf2f56ba0
  414edd:	push   eax
  414ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414edf:	adc    dh,BYTE PTR [eax]
  414ee1:	inc    ebx
  414ee2:	outs   dx,BYTE PTR ds:[esi]
  414ee3:	xchg   ebx,eax
  414ee4:	sub    ch,al
  414ee6:	es push ecx
  414ee8:	xor    eax,0xa84397c7
  414eed:	int3   
  414eee:	sub    DWORD PTR [ebx-0x59b2940],edi
  414ef4:	and    DWORD PTR [ebp-0x6c],eax
  414ef7:	(bad)  
  414ef8:	dec    esp
  414ef9:	mov    esp,0x9f9a58cb
  414efe:	jne    0x414ee2
  414f00:	and    dh,cl
  414f02:	loop   0x414ee0
  414f04:	outs   dx,DWORD PTR ds:[esi]
  414f05:	pop    ds
  414f06:	push   esi
  414f07:	mov    DWORD PTR [eax+eax*8],eax
  414f0a:	sub    edi,DWORD PTR [ebp+esi*1+0x26]
  414f0e:	sti    
  414f0f:	add    eax,0x6f2c4bf9
  414f14:	fld    DWORD PTR [esi-0x39f21a7a]
  414f1a:	out    dx,al
  414f1b:	jo     0x414ec1
  414f1d:	(bad)  
  414f1e:	sub    eax,0xaa74de4d
  414f23:	sbb    BYTE PTR [edi+0x6a],0x93
  414f27:	and    cl,dh
  414f29:	pop    es
  414f2a:	sub    ch,0xaf
  414f2d:	push   eax
  414f2e:	or     eax,0x9d9a067a
  414f33:	sbb    DWORD PTR [ebx-0x30],esp
  414f36:	cmp    al,BYTE PTR ds:0xf2bd7814
  414f3c:	jmp    0x414ee9
  414f3e:	pandn  mm1,QWORD PTR [ecx+0x676cd57c]
  414f45:	shr    DWORD PTR [esi],0xab
  414f48:	inc    esp
  414f49:	rcl    DWORD PTR [ebp-0x758961ea],1
  414f4f:	xchg   ebp,eax
  414f50:	pusha  
  414f51:	sub    BYTE PTR [ebx+0x4665053b],ah
  414f57:	push   esi
  414f58:	addr16 (bad) 
  414f5a:	mov    edx,0xd4b77ac6
  414f5f:	cli    
  414f60:	inc    DWORD PTR [esi]
  414f62:	push   ebx
  414f63:	xchg   DWORD PTR ds:0xf6791648,ebx
  414f69:	or     al,0x12
  414f6b:	push   0x1a533c34
  414f70:	adc    dh,BYTE PTR [edx-0x46efda72]
  414f76:	jmp    0xda4a:0xc5fc6281
  414f7d:	ret    
  414f7e:	cwde   
  414f7f:	out    0x40,al
  414f81:	pop    edi
  414f82:	addr16 push esp
  414f84:	xor    dh,BYTE PTR [edi-0x28]
  414f87:	repz in eax,dx
  414f89:	(bad)  
  414f8a:	push   0x12
  414f8c:	jbe    0x414f59
  414f8e:	in     al,dx
  414f8f:	adc    al,0x48
  414f91:	jae    0x414f27
  414f93:	pop    ebp
  414f94:	mov    edi,0xd0af87cc
  414f99:	fucompp 
  414f9b:	jmp    0x414f29
  414f9d:	push   edx
  414f9e:	inc    esi
  414f9f:	lds    esi,FWORD PTR [edx+0x23]
  414fa2:	mov    edx,ecx
  414fa4:	out    dx,eax
  414fa5:	mov    eax,ds:0x7d314c6e
  414faa:	jbe    0x415013
  414fac:	cli    
  414fad:	dec    esi
  414fae:	into   
  414faf:	outs   dx,DWORD PTR ds:[esi]
  414fb0:	cmp    edi,0xffffff8d
  414fb3:	pop    eax
  414fb4:	push   ebp
  414fb5:	aam    0x88
  414fb7:	and    eax,0x32b3eea4
  414fbc:	retf   
  414fbd:	mov    eax,ds:0xc534e632
  414fc2:	mov    al,0xeb
  414fc4:	(bad)  
  414fc6:	test   BYTE PTR [edi+0x34],ah
  414fc9:	xor    eax,0x1b48bce7
  414fce:	add    eax,ebp
  414fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fd1:	push   esi
  414fd2:	jmp    0x414f73
  414fd4:	mov    edx,0x20e5a2fe
  414fd9:	in     eax,dx
  414fda:	push   ecx
  414fdb:	xchg   ebp,eax
  414fdc:	adc    eax,0x5ff4c294
  414fe1:	cmp    esp,esp
  414fe3:	pop    ss
  414fe4:	mov    al,ds:0x7fb1796e
  414fe9:	xchg   esp,eax
  414fea:	push   cs
  414feb:	je     0x415038
  414fed:	xor    esi,DWORD PTR [edi+0x29]
  414ff0:	fmul   QWORD PTR [esi+0x7f]
  414ff3:	(bad)  
  414ff4:	push   es
  414ff5:	dec    edx
  414ff6:	push   ds
  414ff7:	mov    edx,0xeeb1fcb1
  414ffc:	add    cl,BYTE PTR ds:0xb21a4fe6
  415002:	sti    
  415003:	jnp    0x415040
  415005:	cmp    DWORD PTR [ebx],esp
  415007:	pop    ss
  415008:	pushf  
  415009:	rol    BYTE PTR ds:0x7277597b,0x62
  415010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415011:	lods   al,BYTE PTR ds:[esi]
  415012:	shr    bh,0xdd
  415015:	pop    es
  415016:	sub    edx,DWORD PTR [edx]
  415018:	mov    edi,0xb680917e
  41501d:	xor    esi,eax
  41501f:	push   0x2aed64cf
  415024:	sub    al,0x8d
  415026:	add    bh,cl
  415028:	outs   dx,BYTE PTR ds:[esi]
  415029:	mov    bl,0x8a
  41502b:	jge    0x414fe2
  41502d:	ins    DWORD PTR es:[edi],dx
  41502e:	xchg   edi,eax
  41502f:	sub    ebp,DWORD PTR [ecx+0x2b]
  415032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415033:	repz or bh,BYTE PTR [edi]
  415036:	sti    
  415037:	mov    ebp,0x8e6463eb
  41503c:	pop    ebp
  41503d:	dec    ebp
  41503e:	(bad)  
  41503f:	jmp    0x415008
  415041:	mov    al,ds:0x7243b2b8
  415046:	aaa    
  415047:	inc    ecx
  415048:	sub    eax,0xad840386
  41504d:	fcmovu st,st(1)
  41504f:	outs   dx,BYTE PTR ds:[esi]
  415050:	out    dx,eax
  415051:	mov    ds:0x2186d8a2,eax
  415056:	(bad)  
  415057:	femms  
  415059:	call   0x6fe3d9bf
  41505e:	pop    ds
  41505f:	fcomp  QWORD PTR [ecx+0x0]
  415062:	jbe    0x41506f
  415064:	inc    edi
  415065:	enter  0x294e,0xa1
  415069:	mov    DWORD PTR [edx],ecx
  41506b:	in     eax,0xdb
  41506d:	jo     0x415054
  41506f:	push   cs
  415070:	out    dx,eax
  415071:	add    BYTE PTR [edx+eax*8+0x1f],ch
  415075:	into   
  415076:	outs   dx,DWORD PTR ds:[esi]
  415077:	(bad)  
  415078:	push   ds
  415079:	mov    WORD PTR [edi-0x61ebc84e],gs
  41507f:	xlat   BYTE PTR ds:[ebx]
  415080:	hlt    
  415081:	ret    
  415082:	pop    esi
  415083:	and    BYTE PTR [ecx-0x65],dh
  415086:	mov    eax,ds:0xb5ed51e9
  41508b:	or     eax,0xea309a96
  415090:	mov    eax,0xca05c094
  415095:	popf   
  415096:	jae    0x415045
  415098:	sbb    cl,al
  41509a:	shr    DWORD PTR ds:0x143dc0f7,1
  4150a0:	jmp    0x415029
  4150a2:	hlt    
  4150a3:	clc    
  4150a4:	shl    DWORD PTR [esi+0x53],cl
  4150a7:	dec    edx
  4150a8:	add    DWORD PTR [eax],esi
  4150aa:	leave  
  4150ab:	imul   BYTE PTR [edx]
  4150ad:	aaa    
  4150ae:	stc    
  4150af:	xchg   BYTE PTR [esi],dh
  4150b1:	cmp    eax,0xf7e5149d
  4150b6:	pop    ecx
  4150b7:	outs   dx,DWORD PTR ds:[esi]
  4150b8:	xlat   BYTE PTR ds:[ebx]
  4150b9:	push   cs
  4150ba:	mov    al,dh
  4150bc:	jmp    0xc5a8:0x97cc8e22
  4150c3:	sub    ebp,DWORD PTR [esi+0x601147f8]
  4150c9:	inc    ebx
  4150ca:	in     eax,dx
  4150cb:	jle    0x4150f7
  4150cd:	jo     0x41513b
  4150cf:	and    eax,0x9c23570a
  4150d4:	fsubr  DWORD PTR [edx+ebx*1+0x64]
  4150d8:	xor    DWORD PTR ds:0x5836d529,ecx
  4150de:	pop    ebx
  4150df:	sbb    esp,DWORD PTR [ecx]
  4150e1:	sti    
  4150e2:	jo     0x4150e4
  4150e4:	imul   bh
  4150e6:	mov    esp,0x3aa4d721
  4150eb:	jo     0x4150c8
  4150ed:	or     eax,0xae8fdd99
  4150f2:	scas   eax,DWORD PTR es:[edi]
  4150f3:	cmp    eax,edi
  4150f5:	div    DWORD PTR [ebx-0x52]
  4150f8:	sar    DWORD PTR [ecx],1
  4150fa:	xchg   esp,eax
  4150fb:	mov    esi,0x733e5c55
  415100:	mov    ds:0x38891c25,al
  415105:	sub    al,0x88
  415107:	cdq    
  415108:	mov    ds:0xa3739110,al
  41510d:	cmp    DWORD PTR [ebx+edi*1-0x32d953e0],0xa806aaab
  415118:	dec    edx
  415119:	mov    eax,ds:0xfe6c6bdb
  41511e:	test   eax,0xc4211780
  415123:	ss and esp,0x24
  415127:	aas    
  415128:	bound  eax,QWORD PTR [eax]
  41512a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41512b:	retf   0xa3f9
  41512e:	mov    WORD PTR [eax-0x30],cs
  415131:	ror    BYTE PTR [ecx],cl
  415133:	push   cs
  415134:	out    dx,al
  415135:	mov    ecx,0x3392874a
  41513a:	mov    edi,DWORD PTR [edi]
  41513c:	jb     0x4150d7
  41513e:	jg     0x41514f
  415140:	cs xchg esp,eax
  415142:	xor    ebx,DWORD PTR [edi]
  415144:	add    eax,0x2b3bdec2
  415149:	inc    edx
  41514a:	shl    DWORD PTR ds:0x14ad0ba6,0x50
  415151:	sbb    BYTE PTR [ebp+0x50],bl
  415154:	out    dx,eax
  415155:	fisubr WORD PTR ds:0x4ba1136
  41515b:	and    ebx,DWORD PTR [eax-0x7a]
  41515e:	push   ss
  41515f:	pop    ebx
  415160:	into   
  415161:	mov    al,ds:0xfc36a61f
  415166:	adc    BYTE PTR [eax-0x40339802],bh
  41516c:	sub    cl,BYTE PTR [esi-0x19]
  41516f:	loopne 0x415196
  415171:	mul    DWORD PTR [edi-0x34]
  415174:	int    0xa
  415176:	pop    ebx
  415177:	fnstenv [ebp-0x4c1404a]
  41517d:	mov    cl,0xca
  41517f:	dec    ecx
  415180:	add    BYTE PTR [ecx-0x44886ddd],dh
  415186:	retf   0xa550
  415189:	mov    cl,0x8b
  41518b:	cld    
  41518c:	(bad)  
  41518d:	xor    edi,DWORD PTR [edx]
  41518f:	fs in  eax,0x5f
  415192:	nop
  415193:	out    dx,al
  415194:	lods   al,BYTE PTR ds:[esi]
  415195:	rcl    DWORD PTR [eax-0x7e],1
  415198:	push   esp
  415199:	adc    esi,DWORD PTR [esi+0x3ced01c2]
  41519f:	aas    
  4151a0:	xchg   ecx,eax
  4151a1:	(bad)  
  4151a3:	lahf   
  4151a4:	add    BYTE PTR [ecx],cl
  4151a6:	dec    esp
  4151a7:	fucomi st,st(6)
  4151a9:	sbb    bl,BYTE PTR [ebx+0x6]
  4151ac:	jbe    0x415210
  4151ae:	je     0x41516f
  4151b0:	lods   al,BYTE PTR ds:[esi]
  4151b1:	add    eax,0x93043210
  4151b6:	js     0x41515b
  4151b8:	imul   eax,DWORD PTR [eax+0x37],0xfffffff7
  4151bc:	add    ebx,ebp
  4151be:	arpl   WORD PTR [esi-0x281ab83c],di
  4151c4:	(bad)  
  4151c5:	cwde   
  4151c6:	mov    edi,0x2ddb9966
  4151cb:	mov    dh,0x81
  4151cd:	pop    esi
  4151ce:	enter  0x485a,0x3c
  4151d2:	pop    edi
  4151d3:	push   edi
  4151d4:	sub    cl,dh
  4151d6:	pop    edi
  4151d7:	or     dh,cl
  4151d9:	inc    esp
  4151da:	ja     0x415224
  4151dc:	in     al,0x17
  4151de:	and    BYTE PTR [ecx],ah
  4151e0:	js     0x415224
  4151e2:	loope  0x415229
  4151e4:	sub    DWORD PTR [esi],0x8093641d
  4151ea:	pop    esi
  4151eb:	sbb    esi,DWORD PTR [esi-0x320897bd]
  4151f1:	xor    DWORD PTR [ecx-0x5b608b7e],ecx
  4151f7:	or     BYTE PTR [edi+0x6130c88b],dh
  4151fd:	or     bl,BYTE PTR [esi+0x27]
  415200:	call   FWORD PTR [esi-0x61]
  415203:	mov    bh,0x5c
  415205:	pop    edi
  415206:	out    0xa6,al
  415208:	test   DWORD PTR [edx-0x5e70781c],esp
  41520e:	nop
  41520f:	nop
  415210:	and    eax,0xf6fd4e02
  415215:	mov    al,0x19
  415217:	emms   
  415219:	fmul   DWORD PTR [ecx+0x1c8b8c4]
  41521f:	ins    BYTE PTR es:[edi],dx
  415220:	fldenv [ebx+edx*2+0x3]
  415224:	pop    ds
  415225:	cmp    dh,ch
  415227:	mov    al,ds:0xd7b6a7cd
  41522c:	dec    ecx
  41522d:	jge    0x415260
  41522f:	loop   0x415231
  415231:	test   bh,cl
  415233:	push   cs
  415234:	imul   edi,DWORD PTR [ebx],0x1bc559fc
  41523a:	xchg   BYTE PTR [ecx],bl
  41523c:	retf   0xeee
  41523f:	cwde   
  415240:	and    BYTE PTR [eax+0x3eb5950a],cl
  415246:	cmp    dh,BYTE PTR [edx+0x4fdf5a14]
  41524c:	adc    BYTE PTR [edx-0x77],bh
  41524f:	pop    es
  415250:	sub    al,0xdf
  415252:	dec    ebx
  415253:	xchg   DWORD PTR ds:0x6767965a,esi
  415259:	inc    esp
  41525a:	pop    esp
  41525b:	repnz das 
  41525d:	mov    al,0xe0
  41525f:	call   0x1c16:0x2b3d69d1
  415266:	popa   
  415267:	fs jecxz 0x415259
  41526a:	(bad)  
  41526b:	dec    esp
  41526c:	test   al,0xb4
  41526e:	cwde   
  41526f:	popa   
  415270:	popf   
  415271:	aad    0xf9
  415273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415274:	aaa    
  415275:	mov    ds:0xd7808012,eax
  41527a:	stos   BYTE PTR es:[edi],al
  41527b:	dec    edx
  41527c:	sbb    al,0x86
  41527e:	adc    eax,0x496a2f6b
  415283:	retf   
  415284:	push   esi
  415285:	(bad)  
  415286:	push   eax
  415287:	js     0x4152c2
  415289:	dec    ebx
  41528a:	mov    al,0x24
  41528c:	dec    ebx
  41528d:	call   0x5909:0x4afcf17a
  415294:	jecxz  0x415220
  415296:	lock lahf 
  415298:	(bad)  
  41529a:	hlt    
  41529b:	adc    edx,DWORD PTR [edx]
  41529d:	jp     0x4152fc
  41529f:	pop    eax
  4152a0:	or     ebp,eax
  4152a2:	xchg   ecx,eax
  4152a3:	sbb    BYTE PTR [edi],cl
  4152a5:	out    dx,eax
  4152a6:	jae    0x415279
  4152a8:	bound  ebx,QWORD PTR [esi-0x60278913]
  4152ae:	retf   
  4152af:	mov    ebp,0xac38f379
  4152b4:	leave  
  4152b5:	mov    ecx,0xe936864b
  4152ba:	stos   DWORD PTR es:[edi],eax
  4152bb:	push   esp
  4152bc:	add    esi,DWORD PTR [edx+0x3e]
  4152bf:	mov    ah,0x2c
  4152c1:	add    DWORD PTR [eax+0x3b6f7e6b],ebp
  4152c7:	ds dec esp
  4152c9:	js     0x415328
  4152cb:	sub    BYTE PTR [eax+ebx*8-0x4c],ah
  4152cf:	dec    ebp
  4152d0:	or     al,al
  4152d2:	sbb    BYTE PTR ds:0x87df6235,cl
  4152d8:	sti    
  4152d9:	jno    0x415260
  4152db:	fdivr  QWORD PTR [eax-0x11]
  4152de:	dec    ebp
  4152df:	and    BYTE PTR [esi],0x6c
  4152e2:	rep outs dx,DWORD PTR ds:[esi]
  4152e4:	xchg   ebx,eax
  4152e5:	mov    esp,0xe54316
  4152ea:	(bad)  
  4152eb:	pop    esp
  4152ec:	lock clc 
  4152ee:	or     esi,DWORD PTR [esi+ebx*8]
  4152f1:	mov    BYTE PTR [edi],cl
  4152f3:	adc    esp,DWORD PTR [edi]
  4152f5:	add    al,0x78
  4152f7:	inc    ebp
  4152f8:	add    bl,BYTE PTR [edi+0x26]
  4152fb:	xchg   edi,eax
  4152fc:	aaa    
  4152fd:	push   ss
  4152fe:	and    ebx,eax
  415300:	sbb    edi,0x79
  415303:	ins    BYTE PTR es:[edi],dx
  415304:	sbb    DWORD PTR [edx+ebx*4+0x17f79219],0x49
  41530c:	arpl   WORD PTR [eax-0x64],cx
  41530f:	lods   eax,DWORD PTR ds:[esi]
  415310:	jmp    0xf7fda8a0
  415315:	imul   ebx,DWORD PTR [eax+eax*8-0x23b2032],0xffffff97
  41531d:	in     al,0xe8
  41531f:	sub    BYTE PTR [edx],0x85
  415322:	pop    edi
  415323:	pop    ecx
  415324:	push   esp
  415325:	or     dh,0xca
  415328:	adc    edx,esp
  41532a:	or     eax,0xeacb0ca4
  41532f:	popf   
  415330:	mov    dl,BYTE PTR [edx-0x5d]
  415333:	mov    ch,0x12
  415335:	push   edx
  415336:	retf   
  415337:	jb     0x415356
  415339:	mov    DWORD PTR [eax+edx*8],esi
  41533c:	push   edi
  41533d:	cdq    
  41533e:	push   ecx
  41533f:	push   0x805512d5
  415344:	inc    esp
  415345:	mov    ah,0x72
  415347:	fstp   TBYTE PTR [ebp+0x2b]
  41534a:	cmp    bh,bl
  41534c:	retf   
  41534d:	inc    edi
  41534e:	mov    bl,0xd2
  415350:	outs   dx,BYTE PTR es:[esi]
  415352:	jae    0x41539b
  415354:	nop
  415355:	stc    
  415356:	imul   ecx,DWORD PTR [ebx-0x5c9e20e7],0x3becb6df
  415360:	pop    ecx
  415361:	xchg   ecx,eax
  415362:	jg     0x41534b
  415364:	jbe    0x4152ec
  415366:	push   bp
  415368:	test   BYTE PTR [edx+edx*1+0x77b36830],al
  41536f:	sbb    DWORD PTR fs:[esi-0x40],ecx
  415373:	pop    ebp
  415374:	push   edi
  415375:	pop    edi
  415376:	push   esp
  415377:	push   esp
  415378:	xchg   ecx,eax
  415379:	xor    esi,esp
  41537b:	jbe    0x415312
  41537d:	jbe    0x415300
  41537f:	pop    ss
  415380:	xchg   DWORD PTR [eax-0x24e8f0bc],edi
  415386:	imul   BYTE PTR [ebp-0x21]
  415389:	pop    ecx
  41538a:	std    
  41538b:	xchg   ecx,eax
  41538c:	test   eax,0xeb27cb2c
  415391:	repz es adc al,0x13
  415395:	pop    es
  415396:	iret   
  415397:	jle    0x415382
  415399:	add    ecx,esp
  41539b:	iret   
  41539c:	test   eax,0xe7490537
  4153a1:	mov    ebx,DWORD PTR [edi+0x34]
  4153a4:	cmc    
  4153a5:	mov    esi,0xc6074cb4
  4153aa:	xchg   ebp,eax
  4153ab:	inc    ebx
  4153ac:	repnz pop es
  4153ae:	pusha  
  4153af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b0:	jbe    0x4153d5
  4153b2:	fist   DWORD PTR [ebp+0x45]
  4153b5:	aaa    
  4153b6:	xchg   DWORD PTR [ebx+0x56],edx
  4153b9:	ret    
  4153ba:	xchg   edi,eax
  4153bb:	mov    eax,0xab8dd2e5
  4153c0:	sti    
  4153c1:	ss dec ecx
  4153c3:	fs dec ebx
  4153c5:	pop    ebp
  4153c6:	ret    
  4153c7:	push   0xb
  4153c9:	leave  
  4153ca:	mov    DWORD PTR [edx+0x4e],edx
  4153cd:	loope  0x415385
  4153cf:	inc    edi
  4153d0:	cmp    ebx,DWORD PTR [edx+eiz*2+0x66]
  4153d4:	mov    WORD PTR [ebp+0x66],?
  4153d7:	and    eax,0x16512dd3
  4153dc:	or     al,0xd7
  4153de:	or     BYTE PTR [ebx],bl
  4153e0:	test   eax,0xc9c68e38
  4153e5:	xchg   edi,eax
  4153e6:	pop    esp
  4153e7:	mov    edx,0xd41af1a
  4153ec:	xor    BYTE PTR [edx+eiz*2],bl
  4153ef:	pop    esi
  4153f0:	mov    WORD PTR [ecx+0x11],ss
  4153f3:	cmc    
  4153f4:	cmc    
  4153f5:	and    esp,DWORD PTR [edi]
  4153f7:	dec    ebx
  4153f8:	jl     0x4153e2
  4153fa:	push   ecx
  4153fb:	inc    ecx
  4153fc:	xchg   edi,eax
  4153fd:	call   0x7e9034a1
  415402:	xchg   edi,eax
  415403:	aas    
  415404:	popf   
  415405:	push   eax
  415406:	scas   eax,DWORD PTR es:[edi]
  415407:	repnz mov ss:0x36a956ab,al
  41540e:	xor    edi,DWORD PTR [esi]
  415410:	adc    BYTE PTR [ebp-0x5974a6a5],cl
  415416:	out    0xa,al
  415418:	ja     0x41541d
  41541a:	mov    al,ds:0x48dc5728
  41541f:	cld    
  415420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415421:	add    cl,BYTE PTR [ecx]
  415423:	rol    DWORD PTR [ebx+0x28],1
  415426:	sub    edi,DWORD PTR [eax+eiz*2+0x16126112]
  41542d:	dec    ebp
  41542e:	mov    esp,0xdb146af3
  415433:	jg     0x415455
  415435:	call   0xf9f6:0x24a4dabb
  41543c:	push   0xffffffd4
  41543e:	sti    
  41543f:	xchg   esi,eax
  415440:	mov    BYTE PTR [esp+ebx*1-0x67],bh
  415444:	out    dx,eax
  415445:	add    eax,0x3709d011
  41544a:	mov    fs,WORD PTR [edi]
  41544c:	mov    eax,0xcbb697b4
  415451:	les    ebp,FWORD PTR [edi-0x13]
  415454:	jbe    0x41541a
  415456:	cli    
  415457:	xlat   BYTE PTR ds:[ebx]
  415458:	sbb    al,0xaa
  41545a:	pop    edi
  41545b:	cmp    al,0x85
  41545d:	rol    BYTE PTR [edx+0x30],cl
  415460:	xor    al,BYTE PTR [edx]
  415462:	pushf  
  415463:	adc    al,0x68
  415465:	add    eax,0x495efbb
  41546a:	mov    ?,ecx
  41546c:	pop    ebp
  41546d:	jae    0x4153ff
  41546f:	cwde   
  415470:	pop    ebx
  415471:	cmp    ecx,eax
  415473:	inc    ecx
  415474:	adc    ecx,edi
  415476:	mov    esp,0xe2b40cc7
  41547b:	jmp    0xadd9:0x709b50a
  415482:	popf   
  415483:	inc    ebx
  415484:	dec    edi
  415485:	rcr    edx,1
  415487:	jbe    0x415490
  415489:	fld    TBYTE PTR [ebx-0x2f]
  41548c:	stos   DWORD PTR es:[edi],eax
  41548d:	xchg   edi,eax
  41548e:	jno    0x415420
  415490:	loop   0x41543e
  415492:	aaa    
  415493:	or     BYTE PTR [edx],bh
  415495:	jo     0x41545d
  415497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415498:	dec    esp
  415499:	mov    ecx,0xc9ae1f90
  41549e:	dec    esp
  41549f:	stc    
  4154a0:	call   0xf70acfd9
  4154a5:	mov    bh,BYTE PTR [edi-0x36e0ccfa]
  4154ab:	xchg   esi,eax
  4154ac:	push   cs
  4154ad:	or     BYTE PTR [ecx],al
  4154af:	rcl    BYTE PTR [esi+0x46],cl
  4154b2:	pop    ss
  4154b3:	xchg   edx,eax
  4154b4:	fld    DWORD PTR [ebx]
  4154b6:	pushf  
  4154b7:	sbb    esp,0x9b9e01af
  4154bd:	xchg   edi,eax
  4154be:	xchg   edx,eax
  4154bf:	jo     0x4154b5
  4154c1:	in     al,dx
  4154c2:	cmp    cl,ch
  4154c4:	xchg   edi,eax
  4154c5:	inc    edi
  4154c7:	cdq    
  4154c8:	pop    ebx
  4154c9:	ja     0x41544c
  4154cb:	mov    ebx,0x95a0c248
  4154d0:	xchg   edx,eax
  4154d1:	inc    esp
  4154d2:	test   eax,0x86fbe700
  4154d7:	and    eax,0xe48bb875
  4154dc:	mov    esp,0x3b1c46e1
  4154e1:	add    ch,BYTE PTR [edx+eiz*1-0x7d]
  4154e5:	test   eax,0x725d10bb
  4154ea:	cmp    BYTE PTR [edx],bh
  4154ec:	sub    DWORD PTR ss:[ebx+0x3e],edi
  4154f0:	or     eax,0x777b9e1
  4154f5:	dec    edi
  4154f6:	ror    edi,0x23
  4154f9:	jecxz  0x4154d0
  4154fb:	(bad)  
  4154fc:	test   BYTE PTR [ebx-0x3],al
  4154ff:	sbb    esp,DWORD PTR [eax+0x5943c351]
  415505:	outs   dx,BYTE PTR ds:[esi]
  415506:	push   edi
  415507:	xor    eax,0xc07278f8
  41550c:	push   ds
  41550d:	adc    eax,0x626e905d
  415512:	test   al,0xb5
  415514:	mov    ebp,0xfe95f6e7
  415519:	mov    dh,0xff
  41551b:	sub    bl,BYTE PTR [edx+0x78a62593]
  415521:	sbb    eax,0xc516b2b2
  415526:	or     al,0xc4
  415528:	lods   al,BYTE PTR ds:[esi]
  415529:	push   edi
  41552a:	scas   eax,DWORD PTR es:[edi]
  41552b:	repnz jmp 0x105d:0xfbe380e6
  415533:	inc    edx
  415534:	or     BYTE PTR [edx-0x3d],bh
  415537:	adc    ecx,edi
  415539:	cli    
  41553a:	xor    eax,0x12fa8e87
  41553f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415540:	mov    ds,WORD PTR [ecx]
  415542:	fnstenv [ebx+0x28]
  415545:	jl     0x4154ca
  415547:	inc    edi
  415548:	fcom   DWORD PTR [eax+0x2badbde0]
  41554e:	jmp    0x415567
  415550:	icebp  
  415551:	das    
  415552:	jmp    0x4154f4
  415554:	and    ah,BYTE PTR [ebx]
  415556:	sub    esp,0xffffffbb
  415559:	xchg   edx,eax
  41555a:	lahf   
  41555b:	pusha  
  41555c:	mov    ch,0x28
  41555e:	addr16 xor esi,esp
  415561:	loope  0x4155d8
  415563:	inc    eax
  415564:	ins    DWORD PTR es:[edi],dx
  415565:	and    BYTE PTR [ecx+0x74],ch
  415568:	gs xchg ebx,eax
  41556a:	mov    edx,0x1538361d
  41556f:	(bad)  
  415570:	xlat   BYTE PTR ds:[ebx]
  415571:	sbb    DWORD PTR [ebx],eax
  415573:	mov    ecx,0x470e63cf
  415578:	outs   dx,DWORD PTR ds:[esi]
  415579:	inc    edx
  41557a:	jno    0x41559a
  41557c:	xor    BYTE PTR [ebx],0x40
  41557f:	sbb    ebp,edi
  415581:	aad    0x96
  415583:	ror    BYTE PTR [esi+0x5],1
  415586:	ret    0x8de6
  415589:	fwait
  41558a:	out    0x53,eax
  41558c:	aad    0x4a
  41558e:	repz shl DWORD PTR [ebp+0x18],0xd2
  415593:	(bad)  
  415595:	mov    esi,0xead2de42
  41559a:	mov    ds:0x8060c8f2,al
  41559f:	or     esp,ebx
  4155a1:	jnp    0x41561a
  4155a3:	push   ds
  4155a4:	mov    ch,0x56
  4155a6:	retf   
  4155a7:	sbb    al,0x46
  4155a9:	das    
  4155aa:	lock pop ds
  4155ac:	mov    eax,0x34806d8d
  4155b1:	lds    esp,FWORD PTR [edi]
  4155b3:	inc    eax
  4155b4:	jg     0x4155c8
  4155b6:	add    esi,DWORD PTR [edi-0x49a76470]
  4155bc:	push   ss
  4155bd:	sbb    dl,0xe8
  4155c0:	cwde   
  4155c1:	add    dl,BYTE PTR [edi-0x68]
  4155c4:	xchg   edx,eax
  4155c5:	test   al,0xcf
  4155c7:	pusha  
  4155c8:	push   0xa7d80ecb
  4155cd:	dec    esp
  4155ce:	dec    ebx
  4155cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d0:	jbe    0x415618
  4155d2:	pop    ss
  4155d3:	iret   
  4155d4:	fiadd  DWORD PTR [ebp+edx*8+0x70092b62]
  4155db:	and    al,0x6a
  4155dd:	rol    BYTE PTR [esi+edx*4-0x6e],cl
  4155e1:	sar    BYTE PTR [ebx-0x1eee4f4e],1
  4155e7:	ror    BYTE PTR [ebx],1
  4155e9:	ret    0x75aa
  4155ec:	cmp    DWORD PTR [esp+ecx*4+0x1597551c],eax
  4155f3:	jge    0x415593
  4155f5:	cmp    BYTE PTR ds:0x874c92cc,0xca
  4155fc:	shr    dl,0x8d
  4155ff:	cmc    
  415600:	pusha  
  415601:	adc    BYTE PTR [esi+0x13],dh
  415604:	mov    BYTE PTR [edi+edi*4],cl
  415607:	pop    ebx
  415608:	mov    eax,ds:0x9dc8bc9b
  41560d:	jp     0x415618
  41560f:	out    0x3b,eax
  415611:	push   eax
  415612:	dec    esi
  415613:	in     eax,0xe9
  415615:	or     DWORD PTR [eax-0x8444de5],edx
  41561b:	int    0x0
  41561d:	enter  0x5946,0xb6
  415621:	in     al,0x51
  415623:	mov    ebp,0x5252566a
  415628:	xchg   esi,eax
  415629:	jge    0x415633
  41562b:	clc    
  41562c:	fist   DWORD PTR [edx+0x3a]
  41562f:	pop    DWORD PTR [ebx-0x2e20fd00]
  415635:	mov    BYTE PTR [esi-0x5a974e27],al
  41563b:	pop    es
  41563c:	push   eax
  41563d:	sub    BYTE PTR [edi-0x65b013c2],al
  415643:	mov    dl,0x13
  415645:	mov    eax,0xefdb48b
  41564a:	fistp  QWORD PTR [ecx+0x0]
  41564d:	into   
  41564e:	mov    ah,0x9e
  415650:	pop    esp
  415651:	inc    eax
  415652:	cmp    al,BYTE PTR [edx-0x56]
  415655:	fld    QWORD PTR [esi+0x5ad107f9]
  41565b:	dec    esp
  41565c:	inc    eax
  41565d:	leave  
  41565e:	aas    
  41565f:	lock pop ss
  415661:	xor    cl,cl
  415663:	inc    ebp
  415664:	fadd   DWORD PTR [eax-0x6443ad6]
  41566a:	adc    eax,esp
  41566c:	xchg   edi,eax
  41566d:	data16 add al,0x83
  415670:	fmul   QWORD PTR [ebx]
  415672:	in     eax,0xc8
  415674:	adc    eax,ecx
  415676:	sbb    eax,0x86eccd74
  41567b:	inc    edi
  41567c:	shl    BYTE PTR [ecx-0x7304fd4d],1
  415682:	mov    ecx,0x1e8f3cf8
  415687:	shl    BYTE PTR [edx-0x3],1
  41568a:	jnp    0x415673
  41568c:	mov    ecx,0x16b9eeb9
  415691:	pop    edx
  415692:	sbb    ch,BYTE PTR [esp+ebp*4+0x6d8558ed]
  415699:	sub    edi,DWORD PTR [esi-0x773d7b2e]
  41569f:	fld    QWORD PTR [edi-0x2a]
  4156a2:	popa   
  4156a3:	xchg   bh,ah
  4156a5:	mov    BYTE PTR [ebp+0x7e],cl
  4156a8:	or     DWORD PTR [ebx],0xf
  4156ab:	adc    ebx,ebp
  4156ad:	mov    eax,ds:0xe1b0be59
  4156b2:	push   ebx
  4156b3:	and    eax,0xd526815a
  4156b8:	lods   eax,DWORD PTR ds:[esi]
  4156b9:	fisub  WORD PTR [edx-0x11]
  4156bc:	loope  0x41571d
  4156be:	shl    DWORD PTR [eax+0x2b],cl
  4156c1:	xor    eax,0x8d48b5ca
  4156c6:	pop    esp
  4156c7:	dec    esi
  4156c8:	inc    esp
  4156c9:	iret   
  4156ca:	sbb    al,BYTE PTR [edi]
  4156cc:	test   DWORD PTR [edi-0x17ed8e3],esi
  4156d2:	pop    eax
  4156d3:	or     esp,DWORD PTR [edi]
  4156d5:	add    ch,BYTE PTR [edi-0x13302b71]
  4156db:	pop    edi
  4156dc:	xor    al,0x59
  4156de:	int3   
  4156df:	jmp    0x41567b
  4156e1:	inc    edx
  4156e2:	dec    ecx
  4156e3:	pop    eax
  4156e4:	jg     0x415703
  4156e6:	jno    0x41575a
  4156e8:	outs   dx,DWORD PTR ds:[esi]
  4156e9:	cmp    esp,DWORD PTR [ecx+0x68]
  4156ec:	call   0x874c:0x16adfd24
  4156f3:	inc    edi
  4156f4:	mov    esi,0x44e62f93
  4156f9:	jp     0x4156aa
  4156fb:	imul   esp,edx,0xffffffb5
  4156fe:	sti    
  4156ff:	je     0x415730
  415701:	out    0xf1,al
  415703:	adc    bh,al
  415705:	fnsave [edx]
  415707:	cmp    edx,eax
  415709:	fwait
  41570a:	das    
  41570b:	fisubr WORD PTR [esp+ecx*4+0x4c]
  41570f:	test   eax,0x49065d52
  415714:	ret    
  415715:	jo     0x4156ff
  415717:	jne    0x4156af
  415719:	dec    edx
  41571a:	out    0xf6,al
  41571c:	in     eax,0x1c
  41571e:	xchg   DWORD PTR [ecx+0x14e7ff49],ebp
  415724:	push   eax
  415725:	cmp    eax,0x15998224
  41572a:	imul   edx,DWORD PTR [ebp-0x28055eeb],0x836b2e35
  415734:	je     0x4156de
  415736:	fisub  WORD PTR [edi]
  415738:	retf   
  415739:	or     ebp,ecx
  41573b:	fcmovu st,st(6)
  41573d:	das    
  41573e:	mov    cl,0x3e
  415740:	(bad)  
  415741:	and    DWORD PTR [ebx],ebp
  415743:	push   esi
  415744:	arpl   WORD PTR [ebx],dx
  415746:	pop    esp
  415747:	js     0x41576f
  415749:	jge    0x4156e6
  41574b:	dec    edx
  41574c:	pop    ebp
  41574d:	adc    eax,0xb1a761a0
  415752:	or     esi,edi
  415754:	sub    ch,BYTE PTR [edi]
  415756:	sbb    bh,BYTE PTR [edi+0x10bdea78]
  41575c:	cdq    
  41575d:	inc    eax
  41575e:	cmc    
  41575f:	loop   0x41573e
  415761:	mov    ebx,ss
  415763:	icebp  
  415764:	loope  0x415794
  415766:	xor    DWORD PTR ds:0xfc7a3ef3,0x60
  41576d:	mov    ah,0xf1
  41576f:	pop    eax
  415770:	gs xchg esi,eax
  415772:	iret   
  415773:	pop    esp
  415774:	stos   BYTE PTR es:[edi],al
  415775:	ins    BYTE PTR es:[edi],dx
  415776:	mov    ebx,0xea4dc3f6
  41577b:	call   0x6414:0x2c664fcb
  415782:	imul   ebx
  415784:	dec    ebx
  415785:	inc    ecx
  415786:	idiv   BYTE PTR [ecx]
  415788:	pop    ss
  415789:	int3   
  41578a:	les    edx,FWORD PTR [ecx+ebp*4+0x54]
  41578e:	test   eax,0xe369d486
  415793:	pop    ss
  415794:	mov    esp,0x85912395
  415799:	cdq    
  41579a:	cmp    esi,DWORD PTR [ecx+0x33]
  41579d:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4157a0:	mov    al,ds:0xb93de82f
  4157a5:	jmp    0x41573c
  4157a7:	pop    es
  4157a8:	mov    ebx,0x6e15f0a2
  4157ad:	outs   dx,DWORD PTR ds:[esi]
  4157ae:	fnstsw WORD PTR [eax+esi*1+0x30bb8754]
  4157b5:	addps  xmm4,XMMWORD PTR [edi]
  4157b8:	retf   
  4157b9:	mov    bl,0xe2
  4157bb:	push   ds
  4157bc:	add    al,0x5
  4157be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157bf:	neg    DWORD PTR [edx-0x1f051474]
  4157c5:	add    BYTE PTR [ebx-0x47],dh
  4157c8:	retf   0x5181
  4157cb:	cmp    BYTE PTR [ecx+eax*8+0x7b4b2262],0x45
  4157d3:	fidiv  WORD PTR [edi+esi*2]
  4157d6:	pop    ebx
  4157d7:	imul   ebx,DWORD PTR [edx+0x1],0x784e3874
  4157de:	pop    edx
  4157df:	push   es
  4157e0:	mov    dh,0x5a
  4157e2:	je     0x4157f4
  4157e4:	mov    esi,0xb22ceb5d
  4157e9:	or     al,BYTE PTR [ebx]
  4157eb:	test   DWORD PTR [ebx+0x1b],0x5c966fc0
  4157f2:	rcr    DWORD PTR [esi-0x80],cl
  4157f5:	sub    esi,DWORD PTR [ebp-0x46]
  4157f8:	and    DWORD PTR [edi],ebx
  4157fa:	loop   0x415803
  4157fc:	(bad)  
  4157fe:	pop    esi
  415800:	ins    DWORD PTR es:[edi],dx
  415801:	cmp    edx,ecx
  415803:	test   DWORD PTR [ebx+0x78cae06f],esi
  415809:	sbb    DWORD PTR [ebx+eax*1],eax
  41580c:	adc    bl,ah
  41580e:	or     DWORD PTR [ecx-0x2364a71e],ebx
  415814:	jle    0x4157c8
  415816:	dec    esp
  415817:	shr    DWORD PTR [eax+0x5fe9ef83],1
  41581d:	ins    DWORD PTR es:[edi],dx
  41581e:	ds push esp
  415820:	sti    
  415821:	adc    bl,bl
  415823:	aad    0x3
  415825:	mov    ?,WORD PTR ds:0x84175f7e
  41582b:	mov    al,ds:0x37b90cf0
  415830:	gs pop ebx
  415832:	div    DWORD PTR [esi-0x775c5ec4]
  415838:	jne    0x41588a
  41583a:	push   cs
  41583b:	xchg   ebx,eax
  41583c:	adc    BYTE PTR [eax-0x9],0xf5
  415840:	mov    ecx,0x51007a49
  415845:	cwde   
  415846:	mov    ch,0x3b
  415848:	sub    BYTE PTR [ebp-0x72],ch
  41584b:	fs mov edx,eax
  41584e:	cmp    al,0x36
  415850:	fs pop ds
  415852:	mov    gs,WORD PTR [eax-0x3]
  415855:	pop    ds
  415856:	pop    es
  415857:	stos   BYTE PTR es:[edi],al
  415858:	mov    cl,0xd0
  41585a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41585b:	stos   BYTE PTR es:[edi],al
  41585c:	pop    ebp
  41585d:	mov    cl,0x7f
  41585f:	xchg   BYTE PTR [esi-0x19efedfe],ah
  415865:	inc    esp
  415866:	popf   
  415867:	fidivr DWORD PTR [ebx]
  415869:	lahf   
  41586a:	adc    bl,dl
  41586c:	icebp  
  41586d:	popa   
  41586e:	sbb    al,0x98
  415870:	lods   al,BYTE PTR ds:[esi]
  415871:	imul   ecx,DWORD PTR [ecx-0x33],0xffffffc2
  415875:	cmp    eax,0xf97b807f
  41587a:	sbb    al,0x7
  41587c:	mov    edx,0xba5fab16
  415881:	mov    edx,0xd28a8007
  415886:	and    al,0xf8
  415888:	(bad)  
  415889:	pop    ebx
  41588a:	inc    esp
  41588b:	repnz sub al,0xc9
  41588e:	pop    edx
  41588f:	push   ebp
  415890:	jg     0x415875
  415892:	stos   DWORD PTR es:[edi],eax
  415893:	push   ds
  415894:	mov    esp,0x45c4c6d1
  415899:	add    eax,0x10450a40
  41589e:	jecxz  0x415870
  4158a0:	add    al,0x29
  4158a2:	por    mm0,mm5
  4158a5:	add    eax,0x1c30106f
  4158aa:	and    DWORD PTR [esi+ecx*4-0x7793fe45],esi
  4158b1:	lods   al,BYTE PTR ds:[esi]
  4158b2:	shl    DWORD PTR ds:0x867a13eb,1
  4158b8:	push   edx
  4158b9:	jae    0x41591f
  4158bb:	and    al,0xf4
  4158bd:	pop    ebp
  4158be:	test   BYTE PTR [edx-0x714a0f92],bh
  4158c4:	mov    cs,WORD PTR [ebx+0x61ad4a6f]
  4158ca:	sbb    eax,0xc4e62ec7
  4158cf:	or     ebx,DWORD PTR [ecx]
  4158d1:	std    
  4158d2:	scas   eax,DWORD PTR es:[edi]
  4158d3:	ret    
  4158d4:	inc    ebp
  4158d5:	nop
  4158d6:	mov    eax,ds:0x5d62496d
  4158db:	mov    gs:0xb2b06915,al
  4158e1:	outs   dx,BYTE PTR ds:[esi]
  4158e2:	add    bl,ch
  4158e4:	test   al,0xbc
  4158e6:	ror    BYTE PTR [edx-0xaadc212],1
  4158ec:	and    BYTE PTR [ebx],cl
  4158ee:	jbe    0x4158c7
  4158f0:	sar    DWORD PTR [ecx],cl
  4158f2:	(bad)  
  4158f3:	mov    al,es:0x6fe20b72
  4158f9:	jp     0x4158ba
  4158fb:	pop    ebx
  4158fc:	sbb    BYTE PTR [edx+ebp*2],ah
  4158ff:	in     eax,0xfd
  415901:	cwde   
  415902:	(bad)  
  415903:	mov    ebp,0x17e7817f
  415908:	in     eax,0x2a
  41590a:	mov    bh,0xa
  41590c:	fimul  WORD PTR [esi]
  41590e:	mov    cl,0x4d
  415910:	xor    eax,DWORD PTR [ebp+0x476adff0]
  415916:	jae    0x4158b3
  415918:	sbb    BYTE PTR [esi-0x57],dl
  41591b:	les    esi,FWORD PTR ds:[edx-0xd]
  41591f:	mov    BYTE PTR [eax+ecx*4],cl
  415922:	sub    al,0xc
  415924:	add    al,0xb9
  415926:	or     bh,BYTE PTR [edi-0x1a]
  415929:	int    0xb5
  41592b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41592c:	adc    dl,al
  41592e:	loopne 0x41596f
  415930:	scas   al,BYTE PTR es:[di]
  415932:	in     eax,0xb8
  415934:	cmp    eax,0x787f2825
  415939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41593a:	scas   eax,DWORD PTR es:[edi]
  41593b:	inc    esi
  41593c:	or     edi,ecx
  41593e:	mov    dl,0xb2
  415940:	shl    DWORD PTR [eax],0x70
  415943:	call   0x7958a794
  415948:	inc    DWORD PTR [ebx]
  41594a:	retf   
  41594b:	adc    ebp,esi
  41594d:	add    ebp,DWORD PTR [eax+edx*2+0x39018bed]
  415954:	dec    edi
  415955:	mov    ebx,0xa7caf95e
  41595a:	test   eax,0x53046924
  41595f:	or     BYTE PTR [esp+edx*8-0x1e],0x36
  415964:	cmp    eax,0x64faeb77
  415969:	je     0x41592c
  41596b:	ret    0x586b
  41596e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41596f:	call   0xb1ea3de7
  415974:	les    ecx,FWORD PTR [ecx-0x54ffa1ab]
  41597a:	fcom   DWORD PTR ds:0xbaf6e3b4
  415980:	cmp    eax,0xc170df93
  415985:	sub    DWORD PTR [edi+0x21],esi
  415988:	add    DWORD PTR [esi],ebx
  41598a:	or     DWORD PTR [eax+0x66231a12],eax
  415990:	std    
  415991:	mov    dl,0xb2
  415993:	int3   
  415994:	mov    ch,0x71
  415996:	cmp    ebx,DWORD PTR [eax-0x285abfcb]
  41599c:	repnz cmp eax,0x7940dac8
  4159a2:	enter  0xdec5,0x52
  4159a6:	push   ecx
  4159a7:	inc    ecx
  4159a8:	mov    esp,0x7af90a92
  4159ad:	sbb    al,0x70
  4159af:	enter  0xe1cd,0x72
  4159b3:	and    ebx,DWORD PTR [ecx+edx*8+0x50c37267]
  4159ba:	sti    
  4159bb:	jo     0x415a07
  4159bd:	xchg   edx,eax
  4159be:	fs push eax
  4159c1:	test   BYTE PTR [ebx],bl
  4159c3:	mov    WORD PTR [ebp-0x6a],fs
  4159c6:	jbe    0x415a0d
  4159c8:	xor    eax,0x2c769999
  4159cd:	(bad)  
  4159ce:	fistp  QWORD PTR [ebp+0x6]
  4159d1:	icebp  
  4159d2:	fld    TBYTE PTR [ebx]
  4159d4:	sbb    DWORD PTR [ecx+0x2b148b3],ebp
  4159da:	ins    BYTE PTR es:[edi],dx
  4159db:	(bad)
  4159df:	jecxz  0x4159fa
  4159e1:	in     al,dx
  4159e2:	(bad)  
  4159e3:	xor    eax,0x23ce810a
  4159e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e9:	push   ebp
  4159ea:	pop    ebp
  4159eb:	adc    esi,esp
  4159ed:	and    eax,0x2a126f59
  4159f2:	fst    QWORD PTR [esi]
  4159f4:	cmc    
  4159f5:	addr16 cmp al,0xc1
  4159f8:	cld    
  4159f9:	out    dx,eax
  4159fa:	jns    0x4159ea
  4159fc:	fisubr WORD PTR [eax+0x16cd738e]
  415a02:	inc    ebp
  415a03:	sub    esi,ebp
  415a05:	jae    0x415a57
  415a07:	lea    esi,[ebp-0x7c]
  415a0a:	lods   al,BYTE PTR ds:[esi]
  415a0b:	inc    edx
  415a0c:	(bad)  
  415a0d:	adc    BYTE PTR [ecx],al
  415a0f:	xchg   ecx,eax
  415a10:	fcmove st,st(3)
  415a12:	dec    ebp
  415a13:	cmp    ch,BYTE PTR [esp+eiz*8-0x3c]
  415a17:	or     bl,dl
  415a19:	mov    esi,0xe07812c7
  415a1e:	mov    ebp,0x7ab3cbc6
  415a23:	shl    edx,0xcb
  415a26:	lds    ecx,FWORD PTR [ebx]
  415a28:	bound  edx,QWORD PTR [eax-0x7099797c]
  415a2e:	xchg   ebp,eax
  415a2f:	push   eax
  415a30:	js     0x415a1d
  415a32:	pop    es
  415a33:	pop    ebp
  415a34:	cmp    BYTE PTR [ecx],dl
  415a36:	add    DWORD PTR [edx],0xffffff80
  415a39:	adc    ebp,DWORD PTR [ebx+ebp*1+0x2e]
  415a3d:	mov    ds:0xa7b56df5,eax
  415a42:	int    0x71
  415a44:	add    al,BYTE PTR [ebp-0x11]
  415a47:	fldenv [edx-0x16]
  415a4a:	xor    edi,DWORD PTR [edx-0x6e]
  415a4d:	pop    ss
  415a4e:	leave  
  415a4f:	(bad)  
  415a50:	loop   0x4159f8
  415a52:	mov    ah,al
  415a54:	lods   al,BYTE PTR ds:[esi]
  415a55:	adc    DWORD PTR [edi],edx
  415a57:	push   esp
  415a58:	push   ebx
  415a59:	inc    esp
  415a5a:	or     al,0xef
  415a5c:	pop    eax
  415a5d:	fmul   DWORD PTR [ecx]
  415a5f:	jmp    0x415a1d
  415a61:	or     edi,DWORD PTR [eax+0x59]
  415a64:	outs   dx,DWORD PTR ds:[esi]
  415a65:	mov    dl,0xa
  415a67:	mov    esi,0x26616acf
  415a6c:	nop
  415a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a6e:	rol    DWORD PTR [ebx+ebx*2-0x154d3c62],cl
  415a75:	stc    
  415a76:	ret    
  415a77:	add    eax,0x6c186cb3
  415a7c:	pop    ds
  415a7d:	dec    ebp
  415a7e:	mov    al,0x5
  415a80:	call   0xc3eb91a0
  415a85:	push   ebx
  415a86:	dec    ebx
  415a87:	push   0x16
  415a89:	push   0x26503c14
  415a8e:	push   eax
  415a8f:	pop    eax
  415a90:	popa   
  415a91:	sar    DWORD PTR [edx],0x58
  415a94:	jle    0x415a71
  415a96:	or     eax,0xceb5dca
  415a9b:	sub    eax,0x7c314660
  415aa0:	jg     0x415af7
  415aa2:	and    esi,DWORD PTR [esi-0x3301f17b]
  415aa8:	popf   
  415aa9:	sahf   
  415aaa:	pushf  
  415aab:	(bad)  
  415aac:	sbb    dl,BYTE PTR [ebx-0x51416541]
  415ab2:	pop    edi
  415ab3:	call   0x1d0c:0x125f421e
  415aba:	mov    eax,ds:0xa7caa145
  415abf:	push   edi
  415ac0:	xlat   BYTE PTR ds:[ebx]
  415ac1:	push   ecx
  415ac2:	dec    ecx
  415ac3:	pushf  
  415ac4:	sbb    al,0x14
  415ac6:	or     ebp,DWORD PTR [ebp-0x26aefcfb]
  415acc:	mov    eax,ds:0xe26119e7
  415ad1:	dec    edi
  415ad2:	scas   eax,DWORD PTR es:[edi]
  415ad3:	clc    
  415ad4:	or     cl,BYTE PTR [ecx-0x16]
  415ad7:	mov    bh,0x1d
  415ad9:	dec    edx
  415ada:	add    ebp,DWORD PTR [esi-0x22ef7577]
  415ae0:	not    DWORD PTR [ebp+0x1033974c]
  415ae6:	jmp    0x2aae15e3
  415aeb:	inc    ebx
  415aec:	dec    esi
  415aed:	retf   0xc4aa
  415af0:	inc    esi
  415af1:	xor    al,0x6f
  415af3:	aam    0x64
  415af5:	ret    
  415af6:	jmp    DWORD PTR [ebp-0x5ca0d5ea]
  415afc:	aam    0xcc
  415afe:	and    BYTE PTR [ebx+0x7928dabb],bh
  415b04:	pop    ebx
  415b05:	imul   edx,DWORD PTR [esi+0x5],0xaee36494
  415b0c:	and    esp,DWORD PTR [edi+ecx*4-0xd]
  415b10:	bound  eax,QWORD PTR [ebx-0x726418e7]
  415b16:	add    al,0x46
  415b18:	sub    BYTE PTR [ebp-0x3e],dh
  415b1b:	in     eax,dx
  415b1c:	std    
  415b1d:	repz push esi
  415b1f:	ds xchg ebx,eax
  415b21:	and    BYTE PTR [ebp+0x3cd2ffb7],al
  415b27:	fcmovu st,st(7)
  415b29:	adc    BYTE PTR [edx+0x39bdd0b],cl
  415b2f:	jl     0x415b85
  415b31:	or     BYTE PTR [ecx-0x50],dh
  415b34:	pop    es
  415b35:	call   0xc43c:0xe27c02c8
  415b3c:	adc    ah,bh
  415b3e:	sub    dl,BYTE PTR [esi]
  415b40:	imul   eax,DWORD PTR [edi],0xf0f6a980
  415b46:	push   ebp
  415b47:	mov    cl,0x2b
  415b49:	ret    0x420e
  415b4c:	inc    ebp
  415b4d:	retf   0x76e5
  415b50:	xor    al,0xd6
  415b52:	dec    edx
  415b53:	xchg   edx,eax
  415b54:	dec    edx
  415b55:	xchg   ebx,eax
  415b56:	xchg   ebp,eax
  415b57:	sbb    DWORD PTR [edi],0xcd44d4cf
  415b5d:	inc    esi
  415b5e:	xlat   BYTE PTR ds:[ebx]
  415b5f:	dec    esp
  415b60:	iret   
  415b61:	sbb    BYTE PTR [esi-0x522494f9],dh
  415b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b68:	mov    ?,WORD PTR [ecx+ebx*8+0x5b5451b2]
  415b6f:	out    dx,al
  415b70:	cmp    ah,dl
  415b72:	out    0xea,al
  415b74:	es arpl sp,si
  415b77:	or     esp,0x291eaf2d
  415b7d:	out    0x77,al
  415b7f:	cmc    
  415b80:	mov    al,0x96
  415b82:	mov    ecx,0x701ee0b2
  415b87:	bound  eax,QWORD PTR [eax-0x758d5037]
  415b8d:	ror    ebp,cl
  415b8f:	inc    edi
  415b90:	pop    es
  415b91:	loope  0x415bce
  415b93:	stc    
  415b94:	and    al,0x6e
  415b96:	cwde   
  415b97:	and    esi,DWORD PTR [eax-0x76]
  415b9a:	hlt    
  415b9b:	sahf   
  415b9c:	mov    ah,0xca
  415b9e:	mov    al,0x33
  415ba0:	stos   DWORD PTR es:[edi],eax
  415ba1:	sbb    ebx,esi
  415ba3:	and    ebx,edx
  415ba5:	out    0x70,al
  415ba7:	mov    bh,0x5b
  415ba9:	ret    
  415baa:	ror    BYTE PTR [ebp-0x4adf244b],1
  415bb0:	jns    0x415b34
  415bb2:	and    al,0x72
  415bb4:	loopne 0x415b63
  415bb6:	or     eax,0x62583926
  415bbb:	jl     0x415bb9
  415bbd:	mov    bh,0x1a
  415bbf:	sub    eax,0x68c7f613
  415bc4:	jp     0x415bbc
  415bc6:	in     al,0xb0
  415bc8:	aam    0xb4
  415bca:	mov    ds:0xfa56fd73,al
  415bcf:	dec    ebp
  415bd0:	rcl    BYTE PTR [ebx],cl
  415bd2:	xchg   edi,eax
  415bd4:	jne    0x415bcd
  415bd6:	xchg   ecx,eax
  415bd7:	push   ebx
  415bd8:	mov    esp,0x169f946
  415bdd:	mov    ebx,0x4b36c8a2
  415be2:	mov    edi,0xbe1ac0cf
  415be7:	nop
  415be8:	push   esi
  415be9:	rcr    BYTE PTR [edi],cl
  415beb:	icebp  
  415bec:	xchg   esp,eax
  415bed:	imul   ebp,DWORD PTR [esi+ebp*1+0x6132c517],0xfffffff2
  415bf5:	xchg   BYTE PTR [esi+0x78],ch
  415bf8:	shr    DWORD PTR [eax-0x3eac4803],1
  415bfe:	lods   eax,DWORD PTR ds:[esi]
  415bff:	add    al,0x62
  415c01:	int    0xa1
  415c03:	or     eax,0x7af7f828
  415c08:	dec    ebx
  415c09:	ret    0x2e6d
  415c0c:	(bad)  
  415c0d:	shl    BYTE PTR [ebx-0x20],0xd8
  415c11:	jae    0x415bbd
  415c13:	adc    edx,DWORD PTR [ebx-0x60e6003d]
  415c19:	mov    ds:0x7738b1a0,al
  415c1e:	xor    DWORD PTR [edi+ecx*8-0x307a15ae],ebx
  415c25:	xor    bl,BYTE PTR [ecx+edx*1]
  415c28:	aad    0xa2
  415c2a:	mov    ah,0xeb
  415c2c:	outs   dx,DWORD PTR ds:[esi]
  415c2d:	nop
  415c2e:	lods   al,BYTE PTR ds:[esi]
  415c2f:	lods   eax,DWORD PTR ds:[esi]
  415c30:	mov    esp,0x5c0271b0
  415c35:	mov    cl,0xcb
  415c37:	pop    edi
  415c38:	xor    al,0x85
  415c3a:	dec    esp
  415c3b:	call   0xa8a4:0x6866fadc
  415c42:	ret    
  415c43:	lea    ecx,[ebx+0x4deb1b45]
  415c49:	jne    0x415bf4
  415c4b:	call   DWORD PTR [edi+0x67]
  415c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c4f:	xchg   esp,eax
  415c50:	shl    bh,0x83
  415c53:	push   esi
  415c54:	rcl    BYTE PTR [ebx-0x3b],1
  415c57:	inc    eax
  415c58:	shl    DWORD PTR [eax-0xe17f3c7],1
  415c5e:	out    0x87,al
  415c60:	aas    
  415c61:	mov    WORD PTR [esi+0x5b],ds
  415c64:	cld    
  415c65:	sub    al,0x6b
  415c67:	js     0x415c01
  415c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6a:	cmp    esp,DWORD PTR ds:0x63452753
  415c70:	shr    DWORD PTR [ebx-0x484ae759],cl
  415c76:	mov    al,ds:0x9a5784b9
  415c7b:	add    al,0x5c
  415c7d:	sub    DWORD PTR [eax+0x3358671d],0x5
  415c84:	(bad)  
  415c86:	(bad)  
  415c87:	shl    BYTE PTR [ebx+esi*1+0xf506586],cl
  415c8e:	push   ecx
  415c8f:	inc    edx
  415c90:	out    dx,eax
  415c91:	dec    esi
  415c92:	imul   ebp,DWORD PTR [eax+0x5fd0211c],0xa6575e0a
  415c9c:	pop    ss
  415c9d:	xor    ch,cl
  415c9f:	icebp  
  415ca0:	adc    BYTE PTR [esi+0x7da78b6a],bh
  415ca6:	popa   
  415ca7:	je     0x415c7a
  415ca9:	add    esp,DWORD PTR ds:0xc7707154
  415caf:	mov    bl,cl
  415cb1:	push   cs
  415cb2:	push   ebx
  415cb3:	dec    esi
  415cb4:	xor    BYTE PTR [eax-0x22e4c9f7],cl
  415cba:	mov    bl,0xf9
  415cbc:	xor    eax,0x25e7eedf
  415cc1:	ficom  DWORD PTR [esi+0x7aa50cc7]
  415cc7:	mov    ah,BYTE PTR [edi+0xee76f8b]
  415ccd:	(bad)  
  415cce:	dec    edi
  415ccf:	out    dx,eax
  415cd0:	sub    ebp,esi
  415cd2:	add    al,0x8a
  415cd4:	push   esi
  415cd5:	xor    DWORD PTR [edi],eax
  415cd7:	in     al,dx
  415cd8:	mov    esp,DWORD PTR [esi+edi*4-0x6b]
  415cdc:	push   0x153b2dd
  415ce1:	adc    eax,0xc7508285
  415ce6:	jg     0x415d52
  415ce8:	lds    ecx,FWORD PTR [eax-0x65]
  415ceb:	sti    
  415cec:	into   
  415ced:	mov    al,0x84
  415cef:	and    al,0x31
  415cf1:	sub    ah,dl
  415cf3:	inc    bx
  415cf5:	into   
  415cf6:	mov    edi,0x7d60f5eb
  415cfb:	ja     0x415c81
  415cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cfe:	push   cs
  415cff:	aam    0x29
  415d01:	sar    esi,1
  415d03:	add    ebx,DWORD PTR [ecx+0x34]
  415d06:	repnz sub eax,0xa5ad2947
  415d0c:	mov    al,bh
  415d0e:	test   DWORD PTR [ecx],0xa927b36d
  415d14:	enter  0x75e6,0x4f
  415d18:	cmp    eax,0x1ff25070
  415d1d:	or     eax,0x25dc2b06
  415d22:	leave  
  415d23:	out    0xdb,eax
  415d25:	dec    ebx
  415d26:	pop    esi
  415d27:	inc    eax
  415d28:	sahf   
  415d29:	mov    bh,0xdd
  415d2b:	mov    al,ds:0x1249dd2e
  415d30:	leave  
  415d31:	sbb    cl,0xc0
  415d34:	cmp    BYTE PTR [ebx+0x3a0ee010],bl
  415d3a:	lea    edi,[ecx-0x56]
  415d3d:	imul   esi,DWORD PTR [esi+0x4cb23054],0xffffffbd
  415d44:	daa    
  415d45:	jns    0x415db5
  415d47:	fild   QWORD PTR [eax+0x8]
  415d4a:	jle    0x415d81
  415d4c:	loopne 0x415d23
  415d4e:	and    BYTE PTR [ebx+0x4],dh
  415d51:	push   ds
  415d52:	or     ebp,edx
  415d54:	std    
  415d55:	std    
  415d56:	enter  0xb44d,0xd5
  415d5a:	xchg   esi,eax
  415d5b:	push   edi
  415d5c:	sbb    DWORD PTR fs:[ecx+esi*1+0x3d],eax
  415d61:	cmp    ch,BYTE PTR [edi-0x2e0edbc4]
  415d67:	pop    ecx
  415d68:	out    dx,eax
  415d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d6a:	xor    al,0x4c
  415d6c:	push   ss
  415d6d:	pusha  
  415d6e:	inc    ebp
  415d6f:	lods   al,BYTE PTR ds:[esi]
  415d70:	mov    ds:0x907e3535,al
  415d75:	stos   BYTE PTR es:[edi],al
  415d76:	loop   0x415d6c
  415d78:	mov    edi,0x4b5928ef
  415d7d:	pop    DWORD PTR [ebx-0x46acada]
  415d83:	xlat   BYTE PTR ds:[ebx]
  415d84:	pop    esi
  415d85:	lds    ebx,FWORD PTR [ebx]
  415d87:	push   esi
  415d88:	(bad)  
  415d89:	je     0x415dc3
  415d8b:	fbstp  TBYTE PTR [ecx+ebx*2+0xb]
  415d8f:	and    eax,eax
  415d91:	sub    al,0x64
  415d93:	test   al,0xd4
  415d95:	mov    ebp,0x1d77b468
  415d9a:	retf   0x65ad
  415d9d:	mov    eax,0xa5b8a4e
  415da2:	xor    DWORD PTR [ecx-0x53],ecx
  415da5:	in     eax,dx
  415da6:	dec    edi
  415da7:	xchg   ecx,eax
  415da8:	pop    esi
  415da9:	xor    ecx,DWORD PTR [ebx+0x3216a9e2]
  415daf:	add    eax,0x9ad00b77
  415db4:	push   0x28747740
  415db9:	or     ch,bl
  415dbb:	aas    
  415dbc:	or     DWORD PTR ds:0x22d8faeb,ebx
  415dc2:	mov    DWORD PTR [ebp-0x607c13c4],edi
  415dc8:	test   eax,0x401f82c1
  415dcd:	add    BYTE PTR [esp+ebx*1],ah
  415dd0:	(bad)  
  415dd1:	cmp    esi,DWORD PTR [edi]
  415dd3:	push   0x56ea769d
  415dd8:	nop
  415dd9:	cli    
  415dda:	xchg   ebp,eax
  415ddb:	ficomp WORD PTR [ecx-0x70]
  415dde:	mov    eax,0x690b3fe5
  415de3:	int    0xfa
  415de5:	pop    es
  415de6:	arpl   WORD PTR [edx+0xbb98511],cx
  415dec:	push   ebp
  415ded:	les    esp,FWORD PTR [ecx]
  415def:	cmp    BYTE PTR [edi],bl
  415df1:	pop    ecx
  415df2:	adc    al,BYTE PTR ds:0x91c349e
  415df8:	mov    dl,0x56
  415dfa:	ror    dh,cl
  415dfc:	test   DWORD PTR [ecx],ebp
  415dfe:	call   0xc81c:0x9919a549
  415e05:	test   BYTE PTR [edi],dl
  415e07:	test   eax,0xea80d36
  415e0c:	jns    0x415e04
  415e0e:	mov    ch,0x22
  415e10:	sbb    esp,DWORD PTR [eax-0x25bf8b8e]
  415e16:	pop    esi
  415e17:	shl    BYTE PTR [esi+0x6affd0e],1
  415e1d:	scas   al,BYTE PTR es:[edi]
  415e1e:	ficom  DWORD PTR [ebx]
  415e20:	ret    
  415e21:	outs   dx,DWORD PTR ds:[esi]
  415e22:	sub    esi,esi
  415e24:	xor    al,0x80
  415e26:	cdq    
  415e27:	addr16 fadd st,st(3)
  415e2a:	and    DWORD PTR [ecx+0x10556689],esp
  415e30:	dec    edx
  415e31:	jg     0x415e60
  415e33:	mov    esp,0x781ce980
  415e38:	je     0x415e69
  415e3a:	mov    bl,0xc0
  415e3c:	and    DWORD PTR [ebx+0x6cc1e797],0x66f87b57
  415e46:	jae    0x415e70
  415e48:	xor    ch,cl
  415e4a:	iret   
  415e4b:	sub    al,0x2b
  415e4d:	hlt    
  415e4e:	xchg   edi,eax
  415e4f:	fild   WORD PTR [esi+0x59f54287]
  415e55:	fdiv   QWORD PTR [ebx]
  415e57:	push   ecx
  415e58:	mov    ch,BYTE PTR [edi+ebp*1+0x6c9cfa23]
  415e5f:	mov    eax,ds:0x5b8e984d
  415e64:	jge    0x415ec3
  415e66:	retf   
  415e67:	jmp    0x415dff
  415e69:	add    eax,0x93ef83e4
  415e6e:	gs js  0x415e71
  415e71:	push   0xffffff8a
  415e73:	sub    esi,DWORD PTR [edx+eax*2+0x70]
  415e77:	sub    ebx,DWORD PTR [ecx-0x123f8a38]
  415e7d:	xor    BYTE PTR [ebp+0x1711fd89],al
  415e83:	sahf   
  415e84:	mov    ds:0x5158dd25,eax
  415e89:	push   ds
  415e8a:	outs   dx,DWORD PTR ds:[esi]
  415e8b:	lods   al,BYTE PTR ds:[esi]
  415e8c:	popa   
  415e8d:	inc    edi
  415e8e:	jns    0x415e68
  415e90:	pop    esi
  415e91:	fs dec esp
  415e93:	or     al,0x51
  415e95:	dec    ecx
  415e96:	inc    ebp
  415e97:	mov    ds:0x6b0f654f,al
  415e9c:	jae    0x415eea
  415e9e:	test   ch,ah
  415ea0:	mov    ebp,0x10973f9e
  415ea5:	mov    bl,0x99
  415ea7:	pop    ebx
  415ea8:	adc    DWORD PTR [esi-0x24],ebp
  415eab:	xchg   ebp,eax
  415eac:	in     eax,dx
  415ead:	cs dec ebx
  415eaf:	dec    ebp
  415eb0:	lds    edx,FWORD PTR [esi+0x6]
  415eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb4:	aas    
  415eb5:	outs   dx,BYTE PTR ds:[esi]
  415eb6:	addr16 (bad) 
  415eb8:	fidivr DWORD PTR [ebp+0x5f5081cc]
  415ebe:	(bad)
  415ec1:	out    dx,al
  415ec2:	(bad)  
  415ec3:	mov    BYTE PTR [ebp+0x6d],ch
  415ec6:	stc    
  415ec7:	pop    ds
  415ec8:	adc    ebx,DWORD PTR [ebx]
  415eca:	sub    al,0xa3
  415ecc:	push   0xa3011297
  415ed1:	cmp    edi,edx
  415ed3:	bound  ebx,QWORD PTR [ebp+edx*2+0xcd25f5e]
  415eda:	jne    0x415e82
  415edc:	xchg   ebx,eax
  415edd:	mov    ds,esp
  415edf:	js     0x415ea8
  415ee1:	ins    BYTE PTR es:[edi],dx
  415ee2:	or     BYTE PTR [esi-0x3b8d5ae6],ch
  415ee8:	in     al,dx
  415ee9:	arpl   WORD PTR [edx-0x2b],ax
  415eec:	rol    BYTE PTR [esi+edx*2],cl
  415eef:	fs ds js 0x415f0b
  415ef3:	pop    eax
  415ef4:	repnz das 
  415ef6:	test   al,0x5b
  415ef8:	mov    esi,0x7723c1bd
  415efd:	out    0xac,eax
  415eff:	jb     0x1f33ee3e
  415f05:	pop    ds
  415f06:	cmp    BYTE PTR [ebp+0x36],bh
  415f09:	sub    eax,0xe2bf0e5c
  415f0e:	outs   dx,BYTE PTR ds:[esi]
  415f0f:	dec    edi
  415f10:	cmp    BYTE PTR [edi+0x19cebc3c],cl
  415f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f17:	ret    0xb090
  415f1a:	jns    0x415f66
  415f1c:	ins    BYTE PTR es:[edi],dx
  415f1d:	ja     0x415f26
  415f1f:	mov    cl,0xe9
  415f21:	(bad)  
  415f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f23:	jg     0x415f81
  415f25:	jecxz  0x415f57
  415f27:	popa   
  415f28:	and    al,0xd
  415f2a:	rcr    BYTE PTR [edx],1
  415f2c:	inc    edi
  415f2d:	xor    edi,DWORD PTR [ecx-0x71]
  415f30:	call   0x44438ea9
  415f35:	repz jge 0x415f6e
  415f38:	adc    ebx,DWORD PTR [edi]
  415f3a:	cmp    BYTE PTR [ebx+0x553372eb],cl
  415f40:	xor    BYTE PTR [esi+eiz*1],cl
  415f43:	xchg   BYTE PTR [edi],cl
  415f45:	mov    eax,ds:0x47dfcd30
  415f4a:	add    al,0xaa
  415f4c:	add    edx,edx
  415f4e:	or     BYTE PTR cs:[ebx+edi*2],al
  415f52:	cmp    DWORD PTR [ecx-0x5e751c1],edx
  415f58:	scas   al,BYTE PTR es:[edi]
  415f59:	sbb    DWORD PTR [esi],0x22
  415f5c:	psubsw mm3,QWORD PTR [edi-0x68eeb1fd]
  415f63:	retf   0xa4eb
  415f66:	push   es
  415f67:	addr16 test esp,edx
  415f6a:	mov    esi,0x716583ed
  415f6f:	pusha  
  415f70:	dec    esi
  415f71:	or     al,0xa3
  415f73:	push   eax
  415f74:	outs   dx,DWORD PTR ds:[esi]
  415f75:	or     al,0x88
  415f77:	adc    eax,0xc628fa1c
  415f7d:	cmp    al,0x1d
  415f7f:	ds mov ah,0x4f
  415f82:	call   0xb165:0xf0274ca9
  415f89:	push   0x74
  415f8b:	mov    DWORD PTR [ecx],esi
  415f8d:	mov    al,0xc9
  415f8f:	movzx  esp,WORD PTR [eax-0x63]
  415f93:	iret   
  415f94:	adc    al,0xa0
  415f96:	push   esi
  415f97:	pop    ss
  415f98:	sbb    eax,0x948a6b3
  415f9d:	cmp    bl,BYTE PTR [esi+0x63102f90]
  415fa3:	push   ebx
  415fa4:	sbb    edi,DWORD PTR [edx-0x186e4f44]
  415faa:	pop    eax
  415fab:	inc    eax
  415fac:	(bad)  
  415fad:	adc    eax,esp
  415faf:	sub    eax,ebx
  415fb1:	mov    dl,0x70
  415fb3:	xlat   BYTE PTR ds:[ebx]
  415fb4:	pop    ds
  415fb5:	pop    eax
  415fb6:	sahf   
  415fb7:	sti    
  415fb8:	jb     0x416039
  415fba:	pop    eax
  415fbb:	leave  
  415fbc:	pop    edx
  415fbd:	inc    ax
  415fbf:	pop    esp
  415fc0:	stos   DWORD PTR es:[edi],eax
  415fc1:	pop    ecx
  415fc2:	ret    0xbc57
  415fc5:	aaa    
  415fc6:	shl    BYTE PTR [eax+0x62],1
  415fc9:	gs jbe 0x415fa8
  415fcc:	inc    esp
  415fcd:	mov    esp,0x1ee6d206
  415fd2:	and    eax,0xa9bbe70c
  415fd7:	push   ss
  415fd8:	adc    DWORD PTR [esi+0x5dc50a26],ebx
  415fde:	xchg   dl,al
  415fe0:	sbb    al,0x35
  415fe2:	loop   0x415f7b
  415fe4:	gs mov ebp,0xb34c8790
  415fea:	gs cld 
  415fec:	fcmovnu st,st(0)
  415fee:	jbe    0x415f7f
  415ff0:	das    
  415ff1:	and    ch,al
  415ff3:	jecxz  0x416005
  415ff5:	ds inc ebp
  415ff7:	adc    DWORD PTR [edi],edi
  415ff9:	cmp    esp,ebx
  415ffb:	fldenv [edi]
  415ffd:	xor    al,0xb8
  415fff:	xchg   BYTE PTR [edi+ebx*4],dh
  416002:	xchg   ecx,eax
  416003:	cmp    ah,dh
  416005:	fld    st(2)
  416007:	outs   dx,BYTE PTR ds:[esi]
  416008:	mov    ebx,0x1652730
  41600d:	cmp    eax,0x1dae9ddf
  416012:	ja     0x416000
  416014:	repz sub ecx,DWORD PTR [esi+0x12641353]
  41601b:	mov    al,0x8a
  41601d:	aad    0x26
  41601f:	ja     0x41603c
  416021:	mov    cl,0x27
  416023:	push   edx
  416024:	add    DWORD PTR [edi+0x3c],edi
  416027:	and    DWORD PTR [edx-0x79],ebp
  41602a:	pop    ss
  41602b:	retf   
  41602c:	cli    
  41602d:	xchg   BYTE PTR [ebx+0x632e3640],al
  416033:	xor    BYTE PTR [esi+0x46],bh
  416036:	sbb    cl,BYTE PTR [ebx]
  416038:	sbb    BYTE PTR [edi+0x5d90f91f],dl
  41603e:	cmp    eax,0x2c518d95
  416043:	mov    bl,0x66
  416045:	xchg   edx,eax
  416046:	jle    0x416078
  416048:	je     0x415fdd
  41604a:	test   DWORD PTR [ecx*4+0x3472cd4a],ecx
  416051:	dec    ecx
  416052:	or     ebx,DWORD PTR [bx+di+0x64]
  416056:	hlt    
  416057:	repz and BYTE PTR [ebx-0x19d77bcf],dh
  41605e:	(bad)  
  41605f:	cld    
  416060:	pop    ecx
  416061:	(bad)  
  416062:	jne    0xc2440a8b
  416068:	lock lods eax,DWORD PTR ds:[esi]
  41606a:	jl     0x41600a
  41606c:	shl    edi,cl
  41606e:	test   BYTE PTR [ebp-0x701fda10],0xcc
  416075:	add    DWORD PTR [ebp-0x4cfd6e31],0xf1db32f9
  41607f:	sbb    eax,0x19b8e664
  416084:	push   esi
  416085:	div    BYTE PTR [eax-0x5e]
  416088:	retf   
  416089:	xor    eax,0x8614181b
  41608e:	retf   0xf197
  416091:	in     al,0x2f
  416093:	std    
  416094:	ror    DWORD PTR [edx+0x10],1
  416097:	push   esp
  416098:	dec    esi
  416099:	call   0x9deba74c
  41609e:	push   eax
  41609f:	(bad)
  4160a3:	xchg   BYTE PTR [eax],ch
  4160a5:	scas   eax,DWORD PTR es:[edi]
  4160a6:	and    dh,BYTE PTR [ebp+eiz*2-0x26f371de]
  4160ad:	xchg   esi,ebx
  4160af:	fstp   QWORD PTR gs:[ebx+0x6cc93baa]
  4160b6:	ret    
  4160b7:	(bad)  
  4160b8:	jnp    0x4160f0
  4160ba:	cmc    
  4160bb:	shl    DWORD PTR [esi-0x40de8478],1
  4160c1:	fisub  WORD PTR [edx+0x438f6a26]
  4160c7:	xor    al,0x8c
  4160c9:	test   al,0x44
  4160cb:	sbb    eax,0x74b1be39
  4160d0:	sahf   
  4160d1:	retf   
  4160d2:	repz (bad) [ebx]
  4160d5:	adc    al,0x96
  4160d7:	sub    al,0x83
  4160d9:	push   esp
  4160da:	pushf  
  4160db:	jbe    0x416129
  4160dd:	xchg   edx,eax
  4160de:	mov    eax,0xb5747d75
  4160e3:	sub    bl,BYTE PTR [edx]
  4160e5:	xchg   ebp,eax
  4160e6:	mov    dl,BYTE PTR [ecx]
  4160e8:	fiadd  DWORD PTR [ecx+0x18]
  4160eb:	std    
  4160ec:	xor    ebx,DWORD PTR [eax]
  4160ee:	push   ebp
  4160ef:	adc    BYTE PTR [ecx-0x4600b3a0],cl
  4160f5:	or     BYTE PTR [edx+0x49],dl
  4160f8:	xor    eax,0x63a2c75d
  4160fd:	fst    QWORD PTR [ebx+0x5ae28a1b]
  416103:	jg     0x416134
  416105:	stos   DWORD PTR es:[edi],eax
  416106:	imul   edx,DWORD PTR [ebx+0x9b20659],0x1dc061ad
  416110:	out    dx,eax
  416111:	jne    0x4160e7
  416113:	xor    eax,0xe5006aea
  416118:	cs scas al,BYTE PTR es:[edi]
  41611a:	dec    esi
  41611b:	stos   BYTE PTR es:[edi],al
  41611c:	out    0x5c,eax
  41611e:	aad    0x6b
  416120:	rcr    edi,1
  416122:	scas   eax,DWORD PTR es:[edi]
  416123:	(bad)
  416126:	pop    esi
  416127:	pop    edx
  416128:	pop    ss
  416129:	dec    ebx
  41612a:	pop    eax
  41612b:	cwde   
  41612c:	iret   
  41612d:	xchg   ebp,eax
  41612e:	ds nop
  416130:	add    eax,0x9d8e40fb
  416135:	js     0x416113
  416137:	sbb    eax,0x73c4fd81
  41613c:	test   DWORD PTR [ecx+eax*2+0x206f9687],eax
  416143:	cmp    ebp,eax
  416145:	xchg   esi,eax
  416146:	add    ah,ch
  416148:	bound  esi,QWORD PTR [ebp-0x71]
  41614b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41614d:	push   esp
  41614e:	clc    
  41614f:	and    al,0xc9
  416151:	xor    cl,BYTE PTR [esi]
  416153:	js     0x416195
  416155:	mov    BYTE PTR [edx],ch
  416157:	js     0x416157
  416159:	add    al,0xfe
  41615b:	mov    ecx,0x482626da
  416160:	push   esi
  416161:	loop   0x416135
  416163:	push   esi
  416164:	pop    ss
  416165:	cmp    DWORD PTR [edi],0x1f
  416168:	pop    edx
  416169:	push   es
  41616a:	adc    al,BYTE PTR ds:0x287a27d6
  416170:	cmp    BYTE PTR [edx-0x3170e11],0x6c
  416177:	pop    ecx
  416178:	push   esp
  416179:	outs   dx,DWORD PTR ds:[esi]
  41617a:	cmp    dl,0x10
  41617d:	mov    BYTE PTR [ebp-0x6e449417],bh
  416183:	in     al,dx
  416184:	push   cs
  416185:	into   
  416186:	mov    dh,0x96
  416188:	ins    DWORD PTR es:[edi],dx
  416189:	lahf   
  41618a:	mov    edi,DWORD PTR [edx-0x5e]
  41618d:	push   esi
  41618e:	push   0xffffff88
  416190:	dec    esi
  416191:	mov    al,ds:0x63845954
  416196:	jne    0x416199
  416198:	mov    esp,0x843aac3
  41619d:	aad    0xbf
  41619f:	cwde   
  4161a0:	or     eax,0xb2962cc1
  4161a5:	in     al,dx
  4161a6:	mov    esp,0x89fd6c20
  4161ab:	xchg   ebp,eax
  4161ac:	fs jbe 0x416206
  4161af:	adc    eax,0xa0d826ad
  4161b4:	jle    0x4161a5
  4161b6:	inc    ebx
  4161b7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4161b9:	out    dx,eax
  4161ba:	mov    DWORD PTR [ebx+ebp*1+0x72],eax
  4161be:	ins    BYTE PTR es:[edi],dx
  4161bf:	sbb    eax,0xe6791762
  4161c4:	enter  0x6b3b,0x37
  4161c8:	mov    cl,0xd6
  4161ca:	aas    
  4161cb:	lahf   
  4161cc:	push   esp
  4161cd:	adc    al,0xe1
  4161cf:	jno    0x416207
  4161d1:	mov    al,ds:0xf106f91c
  4161d6:	and    edi,esi
  4161d8:	outs   dx,WORD PTR cs:[esi]
  4161db:	mov    edi,0x6615b519
  4161e0:	sub    BYTE PTR [ebx-0x9bfde4a],dl
  4161e6:	xchg   edi,eax
  4161e7:	iret   
  4161e8:	mov    ebp,0xb3b08201
  4161ed:	call   0x2225:0x4d2050bb
  4161f4:	fld    DWORD PTR [esp+esi*2-0x2e]
  4161f8:	int3   
  4161f9:	sbb    edi,DWORD PTR [ebp+edi*4-0x4]
  4161fd:	mov    esi,0xd2dd1726
  416202:	cmp    DWORD PTR [ebx+esi*1],esi
  416205:	sub    al,0xf2
  416207:	jmp    0xa6edeed0
  41620c:	mov    dl,0x69
  41620e:	mov    cl,0xc3
  416210:	rcl    edx,1
  416212:	sub    bl,BYTE PTR [edi+0x1e]
  416215:	mov    cl,0xe4
  416217:	cmc    
  416218:	sub    BYTE PTR [ebp+esi*8+0x56],bh
  41621c:	jo     0x41624a
  41621e:	hlt    
  41621f:	dec    esp
  416220:	jl     0x41623d
  416222:	mov    ah,0x5e
  416224:	sti    
  416225:	loop   0x4161f5
  416227:	sbb    ebx,DWORD PTR [edi]
  416229:	into   
  41622a:	xchg   edx,eax
  41622b:	mov    ch,0x3e
  41622d:	(bad)  
  41622e:	jmp    0x4162ab
  416230:	outs   dx,DWORD PTR ds:[esi]
  416231:	gs xchg esp,eax
  416233:	ja     0x41624c
  416235:	sub    edi,DWORD PTR [eax+0x2da2dd1e]
  41623b:	and    BYTE PTR [edx],dh
  41623d:	jae    0x4161f0
  41623f:	mov    eax,ds:0xd932b5a
  416244:	jo     0x41626d
  416246:	fwait
  416247:	pop    ss
  416248:	add    al,0xa
  41624a:	sub    BYTE PTR [ecx],bl
  41624c:	push   esi
  41624d:	sti    
  41624e:	cmp    edx,edx
  416250:	cmp    eax,edi
  416252:	push   es
  416253:	sub    al,ch
  416255:	mov    gs,WORD PTR [ebx-0x2cd2deaa]
  41625b:	jns    0x416212
  41625d:	mov    ebx,es
  41625f:	in     eax,0x4a
  416261:	fnstcw WORD PTR [eax+0x8]
  416264:	sub    BYTE PTR [eax],ch
  416266:	jns    0x416202
  416268:	pushf  
  416269:	cmp    DWORD PTR [edx],edi
  41626b:	bound  esi,QWORD PTR [edx]
  41626d:	adc    ah,BYTE PTR ds:0x89c12199
  416273:	loop   0x4162f4
  416275:	dec    esi
  416276:	ins    BYTE PTR es:[edi],dx
  416277:	popf   
  416278:	or     ah,cl
  41627a:	xchg   ebp,eax
  41627b:	stc    
  41627c:	daa    
  41627d:	xor    DWORD PTR [ebx+0x59],ecx
  416280:	aad    0xcb
  416282:	das    
  416283:	and    esp,DWORD PTR [ecx+0x678b101c]
  416289:	mov    gs,edi
  41628b:	bound  esi,QWORD PTR gs:[esi-0x6f]
  41628f:	fwait
  416290:	sti    
  416291:	inc    edi
  416292:	(bad)  
  416293:	mov    ch,0x4c
  416295:	ret    0xea9f
  416298:	loop   0x4162b5
  41629a:	pop    edi
  41629b:	sahf   
  41629c:	les    esp,FWORD PTR ds:0xf72cc6ae
  4162a2:	and    DWORD PTR [ecx+0x59],ebp
  4162a5:	and    ebx,edx
  4162a7:	test   al,0xbd
  4162a9:	and    eax,0x62b45a4a
  4162ae:	sbb    bl,dl
  4162b0:	mov    ecx,0x261dec18
  4162b5:	xor    DWORD PTR [ebx+esi*8-0xf],ebx
  4162b9:	push   ebp
  4162ba:	sti    
  4162bb:	inc    edi
  4162bc:	or     ch,dl
  4162be:	test   eax,0x3542a56d
  4162c3:	js     0x416268
  4162c5:	ins    BYTE PTR es:[edi],dx
  4162c6:	adc    eax,0x283e9f00
  4162cb:	addr16 mov ch,0x5d
  4162ce:	or     eax,0xaf5477d2
  4162d3:	xchg   edx,eax
  4162d4:	xchg   edx,eax
  4162d5:	jp     0x416293
  4162d7:	sbb    DWORD PTR [edi-0x4c0c6095],0xac327af1
  4162e1:	bound  esp,QWORD PTR [eax]
  4162e3:	cmp    edx,edi
  4162e5:	xor    al,BYTE PTR [ebx+eax*4]
  4162e8:	xchg   ebp,eax
  4162e9:	int    0xb6
  4162eb:	pop    edx
  4162ec:	mov    dl,0x6a
  4162ee:	sbb    ebp,DWORD PTR [ebx-0x6f]
  4162f1:	mov    eax,0xff550cae
  4162f6:	and    esp,eax
  4162f8:	fsqrt  
  4162fa:	loopne 0x416312
  4162fc:	cli    
  4162fd:	test   ch,ah
  4162ff:	ret    
  416300:	test   eax,0xbaab5e71
  416305:	cwde   
  416306:	fstp   TBYTE PTR [edx-0x78]
  416309:	ja     0x41631b
  41630b:	popa   
  41630c:	jge    0x416365
  41630e:	inc    eax
  41630f:	push   ecx
  416310:	(bad)  
  416311:	push   cs
  416312:	inc    esi
  416313:	mov    ebp,0x6d6a3e
  416318:	imul   al
  41631a:	push   ecx
  41631b:	adc    cl,BYTE PTR fs:[edx-0x17dad57]
  416322:	enter  0xf322,0xbf
  416326:	adc    eax,0xb823dcbb
  41632b:	pop    esi
  41632c:	jmp    0x41639c
  41632e:	and    BYTE PTR [ebx-0x72],bh
  416331:	outs   dx,DWORD PTR ds:[esi]
  416332:	xor    al,0x1f
  416334:	add    esi,DWORD PTR [edi-0xb1260c7]
  41633a:	adc    eax,0x45a38bff
  41633f:	sub    al,al
  416341:	cmp    DWORD PTR [edx],ebp
  416343:	add    eax,0xa0fb4fbb
  416348:	(bad)  
  416349:	push   0x7c3aecd5
  41634e:	adc    edi,DWORD PTR [ebx-0x14]
  416351:	es push ecx
  416353:	mov    esi,0x974780b7
  416358:	add    ch,ah
  41635a:	out    0x9,al
  41635c:	scas   al,BYTE PTR es:[edi]
  41635d:	outs   dx,DWORD PTR ds:[esi]
  41635e:	mov    bh,0x22
  416360:	retf   
  416361:	fiadd  WORD PTR [esi-0x667197f7]
  416367:	jmp    0xfa24:0x63392367
  41636e:	or     DWORD PTR [esi],ebp
  416370:	ja     0x41633e
  416372:	ror    ebx,1
  416374:	and    edi,esp
  416376:	mov    al,ds:0xaf9216c8
  41637b:	pop    ss
  41637c:	loop   0x41638e
  41637e:	hlt    
  41637f:	hlt    
  416380:	sbb    DWORD PTR [ecx+0x79],edi
  416383:	icebp  
  416384:	aas    
  416385:	je     0x416358
  416387:	mov    bh,0x73
  416389:	pushf  
  41638a:	test   BYTE PTR [ebx+edx*2+0x7e],bh
  41638e:	mov    edx,0xfea01586
  416393:	or     ah,BYTE PTR [esi-0x409ce4e9]
  416399:	xlat   BYTE PTR ds:[ebx]
  41639a:	out    0xf0,al
  41639c:	out    0x92,eax
  41639e:	clc    
  41639f:	and    DWORD PTR [edx+0x3afeda20],edx
  4163a5:	leave  
  4163a6:	outs   dx,BYTE PTR ds:[esi]
  4163a7:	add    dh,0x8b
  4163aa:	enter  0xda05,0xae
  4163ae:	pop    eax
  4163af:	daa    
  4163b0:	int    0xfc
  4163b2:	retf   0xbdf8
  4163b5:	repnz add al,0xe5
  4163b8:	xor    dl,BYTE PTR [edx-0x44]
  4163bb:	add    BYTE PTR [esi+0x222285f5],0x86
  4163c2:	ss and eax,0x6e2509c4
  4163c8:	lock xchg ecx,eax
  4163ca:	sbb    cl,BYTE PTR ds:0xab7e9a1b
  4163d0:	test   DWORD PTR cs:[esi+0x10],eax
  4163d4:	fld    st(0)
  4163d6:	data16 js 0x416382
  4163d9:	sbb    eax,0xaac54ac
  4163de:	ret    0xe520
  4163e1:	push   esi
  4163e2:	loopne 0x416395
  4163e4:	ret    
  4163e5:	enter  0x6f56,0x8b
  4163e9:	jmp    0x73b:0xd65a032f
  4163f0:	jne    0x416412
  4163f2:	xchg   DWORD PTR [eax+0x7],eax
  4163f5:	aam    0x30
  4163f7:	inc    edi
  4163f8:	mov    cl,0xf5
  4163fa:	fisubr WORD PTR [esi]
  4163fc:	(bad)  
  4163fd:	pop    ss
  4163fe:	mov    BYTE PTR [edx-0x516eb99],bl
  416404:	inc    esi
  416405:	call   0x1b580d28
  41640a:	pop    es
  41640b:	add    DWORD PTR [ecx+edi*2+0x24f46101],ebp
  416412:	and    dl,BYTE PTR [edx-0x5315a0c3]
  416418:	xor    BYTE PTR [ecx+edi*4+0x35],bh
  41641c:	jmp    0x7fce:0x8928c158
  416423:	ret    
  416424:	retf   0x506a
  416427:	arpl   WORD PTR [edi+0x7a999130],ax
  41642d:	out    dx,eax
  41642e:	mov    ah,0x3f
  416430:	aas    
  416431:	adc    BYTE PTR [ecx],dh
  416433:	jecxz  0x416475
  416435:	pop    edi
  416436:	enter  0xae79,0x39
  41643a:	and    eax,0x2138dfdc
  41643f:	and    dh,BYTE PTR [esi-0x795997ac]
  416445:	f2xm1  
  416447:	cld    
  416448:	enter  0xac91,0x11
  41644c:	ror    BYTE PTR [esi+0x745d044f],cl
  416452:	xchg   ecx,eax
  416453:	sahf   
  416454:	mov    cl,0x96
  416456:	pop    ds
  416457:	push   cs
  416458:	es pop ss
  41645a:	mov    edx,0x5bf3bff0
  41645f:	dec    edi
  416460:	fld    TBYTE PTR [edi-0x337c4eaf]
  416466:	inc    esi
  416467:	sub    al,0xd1
  416469:	pop    edi
  41646a:	outs   dx,DWORD PTR ds:[esi]
  41646b:	jnp    0x4164bb
  41646d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41646e:	push   esi
  41646f:	inc    edx
  416470:	lock jo 0x416456
  416473:	push   eax
  416474:	mov    edi,0x49781958
  416479:	xor    eax,0x3daf061e
  41647e:	icebp  
  41647f:	push   eax
  416480:	pop    edx
  416481:	cs mov cl,0x85
  416484:	stc    
  416485:	cmp    al,0xb2
  416487:	mov    edi,edi
  416489:	adc    ecx,edi
  41648b:	pop    ecx
  41648c:	(bad)  
  41648d:	je     0x4164cc
  41648f:	call   0xb71a:0x30ab8160
  416496:	mov    edx,0x5d8519d1
  41649b:	mov    ebp,0xe32d99f8
  4164a0:	pop    ecx
  4164a1:	cs jle 0x4164bf
  4164a4:	aaa    
  4164a5:	mov    dh,0x45
  4164a7:	sbb    eax,DWORD PTR [eax+edx*1]
  4164aa:	popa   
  4164ab:	or     bh,dl
  4164ad:	test   ebp,eax
  4164af:	mov    edi,?
  4164b1:	icebp  
  4164b2:	ja     0x4164bd
  4164b4:	pop    ds
  4164b5:	xchg   ebp,eax
  4164b6:	mov    bh,0x23
  4164b8:	sbb    al,0xf7
  4164ba:	ja     0x4164e7
  4164bc:	inc    eax
  4164bd:	jbe    0x4164fa
  4164bf:	(bad)  
  4164c0:	cmp    edi,esp
  4164c2:	cmp    eax,0x189f8b47
  4164c7:	stos   DWORD PTR es:[edi],eax
  4164c8:	stos   BYTE PTR es:[edi],al
  4164c9:	jp     0x4164e6
  4164cb:	mov    eax,ds:0x8f4787d9
  4164d0:	add    al,0xd9
  4164d2:	or     al,dl
  4164d4:	adc    al,0x3a
  4164d6:	pop    ss
  4164d7:	ins    DWORD PTR es:[edi],dx
  4164d8:	dec    esp
  4164d9:	je     0x41654c
  4164db:	cli    
  4164dc:	sub    bl,ah
  4164de:	pusha  
  4164df:	repz jmp 0x46aae026
  4164e5:	jmp    0x52fb:0xe0de
  4164eb:	je     0x41654b
  4164ed:	(bad)  
  4164ee:	dec    ebp
  4164ef:	int3   
  4164f0:	bound  ebx,QWORD PTR [edx+0x59]
  4164f3:	fild   QWORD PTR [ecx+0x6b0ab342]
  4164f9:	mov    ebp,0xb6019bd8
  4164fe:	fnsave [esi+0x52]
  416501:	call   0xc29e:0x4dfef120
  416508:	and    BYTE PTR [ebp+0x54e5f8bf],bl
  41650e:	mov    cl,ch
  416510:	sbb    ebx,DWORD PTR [ebx-0x7f]
  416513:	test   esi,ebx
  416515:	sbb    DWORD PTR [ebp+0x6f1159fe],esi
  41651b:	(bad)  
  41651c:	das    
  41651d:	sbb    dh,BYTE PTR [edi-0x58]
  416520:	mov    dl,0xc2
  416522:	pop    ebp
  416523:	pop    edx
  416524:	mov    ds:0x344a40e6,al
  416529:	xor    ecx,DWORD PTR [eax-0x77]
  41652c:	mov    ebx,DWORD PTR [esi-0x7e1d9167]
  416532:	cld    
  416533:	icebp  
  416534:	xchg   ebx,eax
  416535:	ins    DWORD PTR es:[edi],dx
  416536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416537:	ret    
  416538:	inc    esp
  416539:	es sahf 
  41653b:	xchg   edx,eax
  41653c:	cmp    bl,cl
  41653e:	mov    edx,0x44581135
  416543:	mov    edi,0x2f38654a
  416548:	stc    
  416549:	add    esp,DWORD PTR [edi-0x22cb79b9]
  41654f:	push   esi
  416550:	mov    bh,0x44
  416552:	adc    eax,0x7839887
  416557:	push   0x43caabf0
  41655c:	fwait
  41655d:	aaa    
  41655e:	dec    esi
  41655f:	adc    al,0xc1
  416561:	dec    esi
  416562:	dec    edi
  416563:	sub    bh,BYTE PTR ds:0x9c37f1a1
  416569:	(bad)  
  41656a:	cld    
  41656b:	bound  ebp,QWORD PTR [edi]
  41656d:	fsubr  QWORD PTR [eax-0x67916f15]
  416573:	mov    DWORD PTR [ebp-0x1178bfdb],edi
  416579:	sbb    DWORD PTR [ebx-0x18],edi
  41657c:	pusha  
  41657d:	ret    0x5f1
  416580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416581:	xor    bl,cl
  416583:	push   ebp
  416584:	retf   0x9e56
  416587:	xchg   esi,eax
  416588:	mov    bl,BYTE PTR [esi-0x6127df5d]
  41658e:	cmp    bh,bh
  416590:	leave  
  416591:	add    dl,cl
  416593:	mov    dh,0x90
  416595:	clc    
  416596:	pusha  
  416597:	mov    eax,ds:0xc32a8076
  41659c:	icebp  
  41659d:	shl    DWORD PTR [edi],0x45
  4165a0:	aad    0xc4
  4165a2:	jecxz  0x416620
  4165a4:	xor    DWORD PTR ds:0x62c31c91,0x7c27a15c
  4165ae:	push   0x51
  4165b0:	cwde   
  4165b1:	cdq    
  4165b2:	imul   esi,DWORD PTR [esi-0x29653db8],0x65a1f51f
  4165bc:	ins    DWORD PTR es:[edi],dx
  4165bd:	jmp    0x416608
  4165bf:	adc    esp,DWORD PTR [ebx]
  4165c1:	mov    ebp,0x6b9d6f91
  4165c6:	xchg   esi,eax
  4165c7:	dec    ebp
  4165c8:	jle    0x41654d
  4165ca:	add    ebx,DWORD PTR [ebx]
  4165cc:	loope  0x4165d2
  4165ce:	jle    0x4165f3
  4165d0:	ja     0x416586
  4165d2:	repz jno 0x41655f
  4165d5:	pushf  
  4165d6:	cld    
  4165d7:	cmc    
  4165d8:	sub    eax,DWORD PTR [edi]
  4165da:	xchg   edi,eax
  4165db:	ins    DWORD PTR es:[edi],dx
  4165dc:	fdivrp st(7),st
  4165de:	dec    edi
  4165df:	mov    ecx,0x9b4f7cd0
  4165e4:	aaa    
  4165e5:	pop    ss
  4165e6:	out    dx,al
  4165e7:	dec    esp
  4165e8:	mov    ch,0xed
  4165ea:	jbe    0x4165b9
  4165ec:	(bad)  
  4165ee:	ss jb  0x41663f
  4165f1:	sahf   
  4165f2:	or     edx,esi
  4165f4:	imul   edi,DWORD PTR [ecx-0x3c470fa3],0x327e923d
  4165fe:	out    dx,al
  4165ff:	push   ss
  416600:	out    0x59,al
  416602:	leave  
  416603:	dec    edi
  416604:	add    ebx,0xe9f9b45e
  41660a:	inc    ecx
  41660b:	xchg   ecx,eax
  41660c:	jge    0x4165c6
  41660e:	test   BYTE PTR [esp+ecx*1-0x37],ch
  416612:	cld    
  416613:	mov    dl,0xb0
  416615:	gs jno 0x41659a
  416618:	pop    ebp
  416619:	mul    esp
  41661b:	(bad)  
  41661c:	aam    0x13
  41661e:	outs   dx,BYTE PTR ds:[esi]
  41661f:	mov    ecx,0x5d918e8f
  416624:	iret   
  416625:	outs   dx,BYTE PTR ds:[esi]
  416626:	mov    ds:0x2e6c5f89,eax
  41662b:	mov    al,ds:0xf86276cd
  416630:	in     eax,dx
  416631:	dec    esi
  416632:	lods   eax,DWORD PTR ds:[esi]
  416633:	push   ds
  416634:	das    
  416635:	and    eax,0x78ea0f56
  41663a:	stos   BYTE PTR es:[edi],al
  41663b:	pop    ecx
  41663c:	and    al,0x7a
  41663e:	jmp    0x4166ab
  416640:	and    edi,DWORD PTR [ebx+0x19]
  416643:	lahf   
  416644:	jo     0x41660b
  416646:	inc    esi
  416647:	pop    es
  416648:	(bad)  
  416649:	xor    ebp,ebp
  41664b:	push   ds
  41664c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41664d:	ins    DWORD PTR es:[edi],dx
  41664e:	or     al,0xdc
  416650:	sbb    al,0x73
  416652:	mov    al,ds:0xb6ac2e57
  416657:	adc    BYTE PTR [edi-0x3ff23a7d],0x55
  41665e:	and    dl,BYTE PTR [esi+0x77aafd34]
  416664:	mov    dl,BYTE PTR [esi-0x60]
  416667:	push   ebx
  416668:	sbb    DWORD PTR [ecx-0x1],ecx
  41666b:	xchg   esp,eax
  41666c:	push   esp
  41666d:	jo     0x4166ed
  41666f:	inc    edi
  416670:	sar    DWORD PTR [eax+0x6e],cl
  416673:	mov    bh,0xd1
  416675:	push   cs
  416676:	cwde   
  416677:	fmul   DWORD PTR [ecx+ecx*1+0x3375d64d]
  41667e:	ins    BYTE PTR es:[edi],dx
  41667f:	sbb    DWORD PTR [edx-0x4d],0x20df141b
  416686:	cmp    eax,0x8fd8e5e9
  41668b:	jno    0x416662
  41668d:	mov    ebx,0x2766d309
  416692:	shr    edi,0xc9
  416695:	inc    edx
  416696:	fbld   TBYTE PTR [edx-0x37]
  416699:	mov    bl,0xd2
  41669b:	gs enter 0x986f,0x37
  4166a0:	cmp    al,0x25
  4166a2:	mov    ebx,0xa3be6708
  4166a7:	mov    esp,0x9dfbcbf9
  4166ac:	cdq    
  4166ad:	stos   BYTE PTR es:[edi],al
  4166ae:	jg     0x416726
  4166b0:	xchg   esi,eax
  4166b1:	mov    WORD PTR [edi+0x54],cs
  4166b4:	mov    esp,?
  4166b6:	outs   dx,BYTE PTR ds:[esi]
  4166b7:	in     al,dx
  4166b8:	lahf   
  4166b9:	aad    0x2d
  4166bb:	aad    0x85
  4166bd:	enter  0x4b08,0xad
  4166c1:	and    esi,ebx
  4166c3:	lahf   
  4166c4:	popf   
  4166c5:	loopne 0x416682
  4166c7:	out    0x21,eax
  4166c9:	jl     0x4166e8
  4166cb:	jl     0x4166fb
  4166cd:	into   
  4166ce:	lea    ecx,[edi+0x6dcc4e3]
  4166d4:	cld    
  4166d5:	sub    BYTE PTR [edx+ecx*1],al
  4166d8:	test   al,0x4
  4166da:	cmp    esi,0xffffffb3
  4166dd:	ror    ecx,cl
  4166df:	ins    BYTE PTR es:[edi],dx
  4166e0:	test   eax,0x733e49cc
  4166e5:	imul   esp,DWORD PTR [edi-0x722f2889],0xffffffca
  4166ec:	pop    ds
  4166ed:	pop    ecx
  4166ee:	dec    ecx
  4166ef:	pop    ss
  4166f0:	push   cs
  4166f1:	adc    BYTE PTR [esi],ch
  4166f3:	daa    
  4166f4:	sar    DWORD PTR ds:0xe75c18c9,0xc5
  4166fb:	sub    BYTE PTR [ecx],0x81
  4166fe:	(bad)  
  4166ff:	imul   edi,DWORD PTR [edx-0x6d4d4dfb],0xffffffdf
  416706:	jno    0x416774
  416708:	enter  0xed7d,0xcd
  41670c:	test   DWORD PTR [esp+ebp*8-0x5ffdd1f1],0xdf9c9694
  416717:	aaa    
  416718:	jne    0x416723
  41671a:	push   ebx
  41671b:	mov    ds:0x937e2936,al
  416720:	ret    
  416721:	(bad)  
  416722:	sar    ebp,cl
  416724:	mov    bl,0xe5
  416726:	sbb    al,0x17
  416728:	xchg   ebx,eax
  416729:	fdiv   DWORD PTR [ebx+ebp*4+0x29]
  41672d:	mov    al,ds:0xb0c60492
  416732:	pop    ss
  416733:	in     al,dx
  416734:	dec    esp
  416735:	push   0x54
  416737:	mov    dh,0xc9
  416739:	jbe    0x416764
  41673b:	push   esi
  41673c:	ds add ch,0x7f
  416740:	out    0xd7,al
  416742:	mov    dh,0xcf
  416744:	adc    ebx,eax
  416746:	into   
  416747:	jmp    0x416795
  416749:	repnz push cs
  41674b:	(bad)  
  41674c:	jg     0x41679c
  41674e:	inc    ecx
  41674f:	and    eax,0x7883d2e2
  416754:	fstp   DWORD PTR [esi-0x60]
  416757:	jecxz  0x4167ac
  416759:	xor    bh,BYTE PTR [ecx+0x6abe91e3]
  41675f:	shr    dl,cl
  416761:	popa   
  416762:	call   0x5bce4c77
  416767:	lods   eax,DWORD PTR ds:[esi]
  416768:	das    
  416769:	retf   
  41676a:	in     al,dx
  41676b:	mov    bl,BYTE PTR [edi-0x5b]
  41676e:	dec    eax
  41676f:	repz adc BYTE PTR [esi+0x5b687c6d],ch
  416776:	and    al,0xc5
  416778:	lock and eax,0x75bcc406
  41677e:	aas    
  41677f:	loopne 0x41670e
  416781:	push   es
  416782:	shl    DWORD PTR [ebx-0x1e0587da],cl
  416788:	mov    eax,ds:0x7bf1ffeb
  41678d:	hlt    
  41678e:	adc    ebp,DWORD PTR [edi]
  416790:	jno    0x416777
  416792:	addr16 hlt 
  416794:	repnz mov ebx,0xd0f6a647
  41679a:	call   0x8363ea
  41679f:	daa    
  4167a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167a1:	mov    al,0xab
  4167a3:	push   ebp
  4167a4:	fsub   DWORD PTR [eax]
  4167a6:	mov    ds:0x2d1f37d,al
  4167ab:	or     BYTE PTR [edx+0x51],bl
  4167ae:	aaa    
  4167af:	pop    edx
  4167b0:	rcl    DWORD PTR [ebx+0x77],0x95
  4167b4:	push   ds
  4167b5:	xchg   ecx,eax
  4167b6:	iret   
  4167b7:	xor    BYTE PTR [ebx+0x39],dl
  4167ba:	ja     0x416783
  4167bc:	aad    0xbe
  4167be:	inc    edx
  4167bf:	lds    esp,FWORD PTR ds:0x3de4d781
  4167c5:	int3   
  4167c6:	mov    ebx,0x7c2ab843
  4167cb:	std    
  4167cc:	and    ch,0x89
  4167cf:	pop    es
  4167d0:	ins    DWORD PTR es:[edi],dx
  4167d1:	stos   DWORD PTR es:[edi],eax
  4167d2:	or     al,0x82
  4167d4:	dec    ebx
  4167d5:	popf   
  4167d6:	jno    0x4167b8
  4167d8:	and    BYTE PTR [ebx+0x537e0c76],bh
  4167de:	mov    WORD PTR [edx+0x5d],fs
  4167e1:	icebp  
  4167e2:	cmp    DWORD PTR [edx-0x2dde8e84],ebx
  4167e8:	daa    
  4167e9:	stos   BYTE PTR es:[edi],al
  4167ea:	stc    
  4167eb:	mov    esp,0xc3a8c874
  4167f0:	(bad)  
  4167f1:	(bad)  
  4167f2:	lock frstpm(287 only) 
  4167f5:	stos   DWORD PTR es:[edi],eax
  4167f6:	push   ebp
  4167f7:	mov    eax,0x216377e2
  4167fc:	mov    ebp,0xd810351d
  416801:	dec    edx
  416802:	mov    ds:0x1cf70e60,al
  416807:	mov    ch,0x4a
  416809:	jge    0x4167f1
  41680b:	rcr    ebx,1
  41680d:	sub    BYTE PTR [ecx-0x2b],dl
  416810:	shl    BYTE PTR [esi+0x5151ffe3],cl
  416816:	shl    ch,0xa2
  416819:	adc    DWORD PTR [edx+0x74befe99],0x6545a224
  416823:	test   DWORD PTR [edx-0x57454b65],ebx
  416829:	out    0xb0,al
  41682b:	sub    ch,BYTE PTR [ebx]
  41682d:	jmp    0x416856
  41682f:	mov    ebx,0x4b00e2ef
  416834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416835:	stc    
  416836:	jmp    0x62269a74
  41683b:	adc    BYTE PTR [edi+edi*1+0x1a],bh
  41683f:	pop    esi
  416840:	pop    edx
  416841:	outs   dx,BYTE PTR ds:[esi]
  416842:	cmc    
  416843:	mov    ds:0x24f1c0cc,eax
  416848:	outs   dx,BYTE PTR ds:[esi]
  416849:	sar    bl,cl
  41684b:	popa   
  41684c:	call   0xc911ff5a
  416851:	rol    BYTE PTR [ecx],cl
  416853:	jbe    0x4168a4
  416855:	jmp    0x41684c
  416857:	adc    dl,bh
  416859:	int3   
  41685a:	iret   
  41685b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41685c:	dec    edi
  41685d:	sar    DWORD PTR [edi],cl
  41685f:	mov    edx,edx
  416861:	pop    ss
  416862:	mov    ch,0x50
  416864:	jmp    0x2e8dd9d0
  416869:	fmul   DWORD PTR [ebp-0x35]
  41686c:	dec    ebp
  41686d:	not    DWORD PTR [eax+0x3d29dbd0]
  416873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416874:	ffreep st(6)
  416876:	xor    eax,0x69736ac
  41687b:	ja     0x416818
  41687d:	test   eax,0xa2fbf314
  416882:	push   0xcaba1f97
  416887:	enter  0x60dd,0x70
  41688b:	jne    0x416824
  41688d:	call   0x71d0:0xc86b4d9
  416894:	jno    0x416883
  416896:	ret    0x728c
  416899:	mov    BYTE PTR [ebx],dh
  41689b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41689c:	adc    BYTE PTR [ebx+0x12],bh
  41689f:	push   ecx
  4168a0:	xchg   ebp,eax
  4168a1:	mov    ch,0x57
  4168a3:	inc    ebp
  4168a4:	cmp    esi,DWORD PTR [ecx+0x4f]
  4168a7:	in     al,dx
  4168a8:	adc    cl,BYTE PTR [edx-0x57]
  4168ab:	and    ebp,DWORD PTR [ebx+edx*2+0x465cfdce]
  4168b2:	mov    ebx,0x3f7599c4
  4168b7:	(bad)  
  4168b8:	fcom   QWORD PTR [ebx]
  4168ba:	pop    ebx
  4168bb:	lods   al,BYTE PTR ds:[esi]
  4168bc:	mov    eax,ebx
  4168be:	shr    BYTE PTR [ebx+0xd],0x89
  4168c2:	sar    bl,cl
  4168c4:	in     al,0xea
  4168c6:	inc    esp
  4168c7:	mov    ch,0x71
  4168c9:	and    edi,DWORD PTR [edi]
  4168cb:	popf   
  4168cc:	je     0x4168e3
  4168ce:	xlat   BYTE PTR ds:[ebx]
  4168cf:	push   ds
  4168d0:	or     bh,BYTE PTR [ebx-0x109701b7]
  4168d6:	div    BYTE PTR [edi]
  4168d8:	dec    esi
  4168d9:	ja     0x4168cb
  4168db:	mov    edi,edi
  4168dd:	xchg   DWORD PTR [edi-0x22],ebp
  4168e0:	xchg   ecx,eax
  4168e1:	clc    
  4168e2:	iret   
  4168e3:	jmp    0xe806f39f
  4168e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e9:	test   DWORD PTR [edi],edi
  4168eb:	adc    al,0x40
  4168ed:	xor    al,0x86
  4168ef:	cmp    bl,BYTE PTR [ebp-0x6b25c39]
  4168f5:	retf   
  4168f6:	mov    bl,dl
  4168f8:	nop
  4168f9:	inc    DWORD PTR [edx+edx*1]
  4168fc:	mov    dh,0x97
  4168fe:	aad    0x2b
  416900:	push   ebp
  416901:	pop    ss
  416902:	xchg   ebx,eax
  416903:	add    edi,DWORD PTR [edx+0x575e392d]
  416909:	hlt    
  41690a:	sub    DWORD PTR ds:0x5b8aa261,ebx
  416910:	hlt    
  416911:	xor    eax,0xb6bf1c03
  416916:	(bad)  
  416917:	into   
  416918:	pop    ds
  416919:	xchg   esp,eax
  41691a:	lods   al,BYTE PTR ds:[esi]
  41691b:	cmp    dl,BYTE PTR [ecx]
  41691d:	pusha  
  41691e:	xchg   dh,dh
  416920:	sbb    eax,0xe034ad60
  416925:	out    dx,al
  416926:	mov    edi,0xcfcf2361
  41692b:	mov    ecx,0x282dc734
  416930:	shr    DWORD PTR [eax],1
  416932:	xor    al,0x55
  416934:	outs   dx,BYTE PTR ds:[esi]
  416935:	sub    edx,DWORD PTR [ecx+0x27]
  416938:	sub    dh,dl
  41693a:	outs   dx,BYTE PTR ds:[esi]
  41693b:	in     eax,0x86
  41693d:	daa    
  41693e:	retf   0x9933
  416941:	pop    es
  416942:	inc    edi
  416943:	clc    
  416944:	cmc    
  416945:	retf   
  416946:	inc    esp
  416947:	dec    edx
  416948:	mov    BYTE PTR [edx-0xdb3554],ch
  41694e:	rcl    bl,1
  416950:	fmulp  st(1),st
  416952:	cmp    BYTE PTR [esi+0x3056c66],ah
  416958:	cld    
  416959:	and    eax,0x1ab53a45
  41695e:	(bad)  
  41695f:	mov    esi,0x832e248
  416964:	mov    ds:0x1f12ae6a,al
  416969:	cmp    eax,0xc30d3ca7
  41696e:	dec    edx
  41696f:	retf   
  416970:	xor    DWORD PTR [ecx],0xb86325fe
  416976:	cli    
  416977:	mov    edi,0x29992dad
  41697c:	add    BYTE PTR [ebx+0x78],ch
  41697f:	daa    
  416980:	add    dh,BYTE PTR [eax-0x2b]
  416983:	aas    
  416984:	sub    eax,0xfd6b35d1
  416989:	repnz shr BYTE PTR [esi+0x5602ff5d],1
  416990:	or     eax,0xe7175147
  416995:	pop    ds
  416996:	jmp    0x777a:0x812b7ed2
  41699d:	push   esp
  41699e:	jne    0x4169c8
  4169a0:	in     al,0x91
  4169a2:	adc    eax,0xfe8c74d7
  4169a7:	call   FWORD PTR [ebp+0x7d]
  4169aa:	jmp    0x8458e8cd
  4169af:	and    esi,DWORD PTR [ebp+edi*4-0x6b]
  4169b3:	pop    esp
  4169b4:	fdiv   QWORD PTR [ecx]
  4169b6:	lds    edi,FWORD PTR [edi+0x2fd35fe7]
  4169bc:	xchg   ecx,eax
  4169bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169be:	xchg   esi,eax
  4169bf:	dec    eax
  4169c0:	mov    edx,0x89249fbe
  4169c5:	pushf  
  4169c6:	repnz rcl DWORD PTR [esi],0x46
  4169ca:	pushf  
  4169cb:	xor    esi,DWORD PTR [esi]
  4169cd:	pop    edi
  4169ce:	test   al,0xd8
  4169d0:	stos   DWORD PTR es:[edi],eax
  4169d1:	pop    ebx
  4169d2:	sbb    ebp,esp
  4169d4:	jge    0x4169c2
  4169d6:	call   0xb4bc:0x62e5cf7c
  4169dd:	daa    
  4169de:	out    0xdb,eax
  4169e0:	pusha  
  4169e1:	sub    cl,BYTE PTR [ecx-0x7c77edd1]
  4169e7:	jg     0x416a58
  4169e9:	or     BYTE PTR [esi],ah
  4169eb:	test   esp,ecx
  4169ed:	mov    dh,0x3b
  4169ef:	jb     0x4169a6
  4169f1:	adc    dh,BYTE PTR [ebx-0x69]
  4169f4:	sbb    eax,0xdbd32c3a
  4169f9:	cdq    
  4169fa:	sti    
  4169fb:	in     al,0x75
  4169fd:	mov    edx,0x55f45d34
  416a02:	push   eax
  416a03:	xor    bh,bh
  416a05:	cmc    
  416a06:	hlt    
  416a07:	stos   BYTE PTR es:[edi],al
  416a08:	inc    esp
  416a09:	and    edx,DWORD PTR [eax+0x40]
  416a0c:	in     eax,0x55
  416a0e:	div    DWORD PTR ds:0x6e8bd7ec
  416a14:	test   DWORD PTR [esi-0xc],ecx
  416a17:	cwde   
  416a18:	push   esi
  416a19:	push   ss
  416a1a:	jno    0x416a4d
  416a1c:	bound  esp,QWORD PTR [esi+edx*8-0x262b5169]
  416a23:	sub    esp,ecx
  416a25:	les    esp,FWORD PTR ds:0x609011b
  416a2b:	int3   
  416a2c:	dec    ebp
  416a2d:	jne    0x416a23
  416a2f:	sbb    dl,BYTE PTR [eax]
  416a31:	shl    DWORD PTR [esi-0x529c9769],cl
  416a37:	inc    edi
  416a38:	xchg   ebx,eax
  416a39:	scas   eax,DWORD PTR es:[edi]
  416a3a:	js     0x4169d1
  416a3c:	push   edi
  416a3d:	pop    edx
  416a3e:	ds fs push cs
  416a41:	je     0x416a05
  416a43:	(bad)  [eax]
  416a45:	mov    dh,0xb1
  416a47:	mov    ds:0xed919f7,eax
  416a4c:	(bad)  
  416a4d:	mov    ecx,0xa939eaac
  416a52:	addr16 ja 0x4169f9
  416a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a56:	and    eax,0x63e4c28
  416a5b:	sub    al,BYTE PTR [edi+0x6b]
  416a5e:	or     eax,0x40ed3889
  416a63:	das    
  416a64:	daa    
  416a65:	test   al,0xc4
  416a67:	inc    ebx
  416a68:	jb     0x416a43
  416a6a:	pop    ecx
  416a6b:	int3   
  416a6c:	hlt    
  416a6d:	gs dec esp
  416a6f:	pop    ds
  416a70:	jae    0x416a0a
  416a72:	mov    al,ds:0xf42255e2
  416a77:	das    
  416a78:	div    BYTE PTR [edi+0x3e]
  416a7b:	frstor [esi+0x316c8b5c]
  416a81:	ins    BYTE PTR es:[edi],dx
  416a82:	xchg   esp,eax
  416a83:	fiadd  WORD PTR [ebp-0x51]
  416a86:	leave  
  416a87:	xor    al,0x32
  416a89:	or     BYTE PTR [edi],dl
  416a8b:	push   eax
  416a8c:	mov    BYTE PTR [esi],ch
  416a8e:	jmp    0x515acd7a
  416a93:	dec    eax
  416a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a95:	rcr    edi,cl
  416a97:	test   eax,0x8a767f22
  416a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a9d:	xor    bh,ch
  416a9f:	jns    0x416aee
  416aa1:	xor    edx,DWORD PTR [ebx+0x4e71277d]
  416aa7:	sub    BYTE PTR [edi],bh
  416aa9:	inc    eax
  416aaa:	push   edx
  416aab:	ja     0x416b1c
  416aad:	popf   
  416aae:	dec    edi
  416aaf:	call   0x1c15:0x3c950ae0
  416ab6:	mov    eax,edx
  416ab8:	add    ah,ch
  416aba:	leave  
  416abb:	inc    esi
  416abc:	sub    al,0x8b
  416abe:	xchg   BYTE PTR [edx+ebp*1+0x74ff9278],ah
  416ac5:	ja     0x416ab0
  416ac7:	push   ds
  416ac8:	fild   DWORD PTR [ebp-0x76]
  416acb:	xor    esp,0x4d7f6698
  416ad1:	aam    0xf2
  416ad3:	jle    0x416add
  416ad5:	js     0x416a6d
  416ad7:	jne    0x416b0f
  416ad9:	test   eax,0x74a2c031
  416ade:	adc    DWORD PTR [edi+0x35],0x25
  416ae2:	out    dx,eax
  416ae3:	out    dx,eax
  416ae4:	ins    BYTE PTR es:[edi],dx
  416ae5:	sub    ah,bh
  416ae7:	jle    0x416a96
  416ae9:	ins    DWORD PTR es:[edi],dx
  416aea:	sub    ebp,DWORD PTR [ebp+0x2624957a]
  416af0:	sahf   
  416af1:	and    eax,DWORD PTR [ebx-0x35074149]
  416af7:	pop    ecx
  416af8:	sbb    DWORD PTR [eax+eiz*2],0xffffffb4
  416afc:	pop    esi
  416afd:	push   edi
  416afe:	cmp    dl,BYTE PTR [ecx]
  416b00:	mov    BYTE PTR [ebp+0x57],dl
  416b03:	inc    edi
  416b04:	cmc    
  416b05:	cmp    bh,BYTE PTR [ebx-0x79]
  416b08:	push   0xadfd1910
  416b0d:	test   al,0xa8
  416b0f:	add    bh,BYTE PTR [ecx+eax*4]
  416b12:	inc    esi
  416b13:	xor    BYTE PTR [edi+0x5e9cd341],dl
  416b19:	push   0x150a4891
  416b1e:	or     esp,ebx
  416b20:	in     al,dx
  416b21:	jg     0x416b6b
  416b23:	push   esp
  416b24:	(bad)  
  416b25:	bound  ebp,QWORD PTR [ecx+esi*4]
  416b28:	popa   
  416b29:	dec    edx
  416b2a:	inc    ebx
  416b2b:	jb     0x416b4f
  416b2d:	pushf  
  416b2e:	xchg   edx,eax
  416b2f:	or     ecx,DWORD PTR [edx+0x1b4548fa]
  416b35:	mov    dh,0xab
  416b37:	jle    0x416b7a
  416b39:	pop    esi
  416b3a:	dec    ebp
  416b3b:	aaa    
  416b3c:	lock nop
  416b3e:	frstor [eax]
  416b40:	fisub  DWORD PTR [ecx]
  416b42:	mov    dh,0xa2
  416b44:	fst    QWORD PTR [edi-0x5105b62d]
  416b4a:	cmp    al,0x75
  416b4c:	fiadd  DWORD PTR [ecx-0x63]
  416b4f:	stos   DWORD PTR es:[edi],eax
  416b50:	pop    ebx
  416b51:	dec    eax
  416b52:	fiadd  DWORD PTR [ecx+0x47924596]
  416b58:	xchg   esp,eax
  416b59:	mov    ebx,esi
  416b5b:	sub    DWORD PTR [edi-0x68],ecx
  416b5e:	fprem  
  416b60:	fisttp DWORD PTR [esi]
  416b62:	lea    edx,[edx-0x48]
  416b65:	test   DWORD PTR [edx],edx
  416b67:	mov    eax,0x1bb6e602
  416b6c:	fdiv   QWORD PTR [edx]
  416b6e:	add    al,0x38
  416b70:	mov    ch,dh
  416b72:	cdq    
  416b73:	jle    0x416b49
  416b75:	sbb    BYTE PTR [ebp-0x1c],al
  416b78:	xor    DWORD PTR [ebx],eax
  416b7a:	dec    ebp
  416b7b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  416b7d:	jne    0x416bf9
  416b7f:	repz mov ebx,0x5e61a1ae
  416b85:	dec    esp
  416b86:	mov    ds:0xc8a67f8b,al
  416b8b:	pop    ebx
  416b8c:	pop    ds
  416b8d:	jae    0x416b19
  416b8f:	push   cs
  416b90:	jo     0x416ba1
  416b92:	mov    al,ds:0x1a7a15ac
  416b97:	push   0x3
  416b99:	adc    al,0x45
  416b9b:	jmp    0x7a62:0x96db81af
  416ba2:	psraw  mm0,mm7
  416ba5:	push   ebp
  416ba6:	sbb    DWORD PTR [ebx-0x68631815],esi
  416bac:	jae    0x416b3d
  416bae:	imul   ecx,DWORD PTR [ecx-0x3e653959],0x2d246a4
  416bb8:	add    DWORD PTR [eax+ecx*8-0x55],eax
  416bbc:	(bad)  
  416bbd:	pop    edx
  416bbe:	daa    
  416bbf:	imul   ecx,DWORD PTR [ebx],0x74
  416bc2:	loope  0x416bb1
  416bc4:	test   BYTE PTR [ebx+0x26],bh
  416bc7:	into   
  416bc8:	mov    ecx,0xcebc0265
  416bcd:	adc    BYTE PTR [esi-0x28107261],0x79
  416bd4:	std    
  416bd5:	fidivr DWORD PTR ss:[edx+0x66ac65cf]
  416bdc:	pop    ds
  416bdd:	addr16 or eax,0x6e2b68fc
  416be3:	out    0x35,al
  416be5:	jb     0x416b93
  416be7:	sbb    ch,BYTE PTR [edx-0x661f04d1]
  416bed:	adc    ebp,DWORD PTR [ebp+eiz*2+0x375867c6]
  416bf4:	popf   
  416bf5:	pop    ebp
  416bf6:	add    DWORD PTR [eax],0x27
  416bf9:	and    DWORD PTR [ecx-0x7a],ebp
  416bfc:	adc    edx,DWORD PTR [ecx+eax*8-0x5b]
  416c00:	js     0x416be0
  416c02:	ds mov ch,0xc6
  416c05:	mov    ds:0x380d90ed,eax
  416c0a:	push   edi
  416c0b:	js     0x416be0
  416c0d:	imul   eax,ecx,0xffffffd4
  416c10:	xchg   DWORD PTR [edx-0x17],ecx
  416c13:	sbb    ebx,ecx
  416c15:	aam    0xde
  416c17:	icebp  
  416c18:	jmp    0xcc7a74f7
  416c1d:	dec    eax
  416c1e:	mov    WORD PTR [ecx+0x53f0181d],es
  416c24:	adc    al,0x74
  416c26:	sbb    al,0xa6
  416c28:	mov    WORD PTR [ecx-0x18],cs
  416c2b:	or     edi,DWORD PTR [esi+0x61ae7441]
  416c31:	cs fnop 
  416c34:	test   al,0x92
  416c36:	push   esi
  416c37:	loope  0x416c57
  416c39:	cld    
  416c3a:	shl    DWORD PTR [ebx+ecx*1+0x1],cl
  416c3e:	(bad)  
  416c40:	or     al,0xd9
  416c42:	or     DWORD PTR [ebx-0x72850675],edi
  416c48:	gs jmp 0x6e96555b
  416c4e:	mov    ebp,0xf7edc998
  416c53:	imul   ebp,DWORD PTR [edi-0x7f014977],0xa2c643ed
  416c5d:	pusha  
  416c5e:	ror    edx,cl
  416c60:	xor    cl,BYTE PTR [ebx]
  416c62:	out    dx,al
  416c63:	xchg   ebx,eax
  416c64:	cmp    BYTE PTR [ebx],dh
  416c66:	push   esp
  416c67:	jg     0x416cba
  416c69:	dec    edi
  416c6a:	fwait
  416c6b:	stc    
  416c6c:	(bad)  
  416c6d:	gs sbb al,0x8c
  416c70:	fisubr DWORD PTR [edx]
  416c72:	xor    dl,BYTE PTR [esi-0x7e5e3330]
  416c78:	push   eax
  416c79:	adc    ebx,ebx
  416c7b:	inc    esi
  416c7c:	xor    eax,ebx
  416c7e:	rcr    cl,0x7b
  416c81:	cld    
  416c82:	shr    DWORD PTR [esi],1
  416c84:	push   0x3b3fb59a
  416c89:	push   ds
  416c8a:	and    eax,0xe8e911a9
  416c8f:	ja     0x416d0f
  416c91:	and    BYTE PTR [ebx-0x33],ch
  416c94:	sbb    esp,0xffffffde
  416c97:	mov    ebx,0xcada1812
  416c9c:	pop    ebx
  416c9d:	jp     0x416d16
  416c9f:	push   ecx
  416ca0:	pop    edx
  416ca1:	inc    edi
  416ca2:	xor    ah,ah
  416ca4:	add    ebx,ebx
  416ca6:	(bad)  ds:[eax+0x6c]
  416caa:	jmp    0x8ce8122
  416caf:	jg     0x416c55
  416cb1:	xchg   DWORD PTR [edi+0x2],ebx
  416cb4:	and    edi,DWORD PTR ds:0x62f6b3d
  416cba:	out    dx,al
  416cbb:	xchg   esi,eax
  416cbc:	mov    BYTE PTR [edi],dh
  416cbe:	pop    ds
  416cbf:	lods   eax,DWORD PTR ds:[esi]
  416cc0:	sti    
  416cc1:	loope  0x416c72
  416cc3:	pop    ds
  416cc4:	push   eax
  416cc5:	sbb    dh,BYTE PTR [ebx-0x118ff7d4]
  416ccb:	test   BYTE PTR [ebx],dh
  416ccd:	jne    0x416cce
  416ccf:	jmp    0x416c87
  416cd1:	and    esi,0x73
  416cd4:	mov    esi,0xd01f1a60
  416cd9:	push   edx
  416cda:	sub    dh,BYTE PTR [esi+0x16522e16]
  416ce0:	outs   dx,BYTE PTR ds:[esi]
  416ce1:	cmc    
  416ce2:	test   DWORD PTR [edi+0x1173eb9a],ecx
  416ce8:	aas    
  416ce9:	mov    cl,cl
  416ceb:	fs test ebp,edx
  416cee:	mov    DWORD PTR [ecx],edi
  416cf0:	dec    edi
  416cf1:	mov    ebx,DWORD PTR [edi+0x23]
  416cf4:	pop    edi
  416cf5:	pop    es
  416cf6:	sbb    al,0x45
  416cf8:	dec    edi
  416cf9:	out    0x75,al
  416cfb:	mov    eax,0x99922769
  416d00:	dec    esi
  416d01:	mov    ch,0x3
  416d03:	and    DWORD PTR [eax-0x19ae414e],edx
  416d09:	sbb    DWORD PTR [edi],edx
  416d0b:	dec    ecx
  416d0c:	add    DWORD PTR [ebx+0x11],0x826a39bc
  416d13:	js     0x416d00
  416d15:	out    dx,al
  416d16:	in     al,0x7a
  416d18:	sbb    BYTE PTR [ecx+0x4b],dh
  416d1b:	push   ebx
  416d1c:	mov    cl,dh
  416d1e:	lods   al,BYTE PTR ds:[esi]
  416d1f:	aaa    
  416d20:	fsubr  DWORD PTR [esi-0x53f36f1b]
  416d26:	jg     0x416cc8
  416d28:	inc    ebp
  416d29:	and    eax,0x7bdf1a30
  416d2e:	test   ebx,ebp
  416d30:	call   0x7783:0x1a5cd294
  416d37:	stos   BYTE PTR es:[edi],al
  416d38:	sbb    eax,0x6868d5ce
  416d3d:	sub    DWORD PTR [esi-0x1b2b15d3],edx
  416d43:	pop    ss
  416d44:	les    esi,FWORD PTR [ecx-0x15]
  416d47:	pop    ebp
  416d48:	cli    
  416d49:	pop    ecx
  416d4a:	(bad)  
  416d4b:	iret   
  416d4c:	mov    eax,0x9230ce3
  416d51:	adc    edi,ebp
  416d53:	popa   
  416d54:	mov    esi,0x7fa3b104
  416d59:	stos   DWORD PTR es:[edi],eax
  416d5a:	les    eax,FWORD PTR ds:0x4ce75547
  416d60:	adc    DWORD PTR [edi],ecx
  416d62:	adc    eax,DWORD PTR [eax-0xd]
  416d65:	mov    esi,0xdd1f3ffb
  416d6a:	fwait
  416d6b:	loope  0x416d49
  416d6d:	mov    eax,ds:0xbcfec67d
  416d72:	hlt    
  416d73:	sti    
  416d74:	in     eax,dx
  416d75:	jecxz  0x416d05
  416d77:	dec    esp
  416d78:	xor    eax,0x126ff01e
  416d7d:	sbb    edi,esp
  416d7f:	fld    TBYTE PTR [esi]
  416d81:	fwait
  416d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d83:	or     eax,0xd981a580
  416d88:	pop    edi
  416d89:	ret    
  416d8a:	lahf   
  416d8b:	je     0x416d2d
  416d8d:	and    DWORD PTR [edx+ebx*4],ebp
  416d90:	adc    DWORD PTR [ecx-0x450f487c],esi
  416d96:	and    al,0xc4
  416d98:	in     eax,dx
  416d99:	(bad)  
  416d9a:	jl     0x416db5
  416d9c:	fdiv   DWORD PTR [eax+edx*4]
  416d9f:	add    al,0xe0
  416da1:	jnp    0x416d32
  416da3:	ins    BYTE PTR es:[edi],dx
  416da4:	push   esp
  416da5:	stc    
  416da6:	mov    edi,0xd1075b4f
  416dab:	adc    eax,0x1ac29fa0
  416db0:	jl     0x416e06
  416db2:	hlt    
  416db3:	inc    ecx
  416db4:	lock or DWORD PTR [edi],esi
  416db7:	fwait
  416db8:	mov    cl,0xe0
  416dba:	mov    BYTE PTR [ebp-0x1c],bh
  416dbd:	int    0x26
  416dbf:	push   esi
  416dc0:	xchg   esi,eax
  416dc1:	inc    edi
  416dc2:	cmp    BYTE PTR [edi],ah
  416dc4:	sbb    ah,BYTE PTR [edx]
  416dc6:	pop    esp
  416dc7:	jbe    0x416d8d
  416dc9:	mov    cl,0x63
  416dcb:	mov    dl,0xf2
  416dcd:	sbb    DWORD PTR [ebp-0x73],0x64
  416dd1:	ds jmp 0x416de2
  416dd4:	fmul   st,st(4)
  416dd6:	or     DWORD PTR [esi+edx*1+0x1a],edx
  416dda:	mov    bh,0x92
  416ddc:	mov    ah,0x44
  416dde:	scas   al,BYTE PTR es:[edi]
  416ddf:	fs mov ebp,0x841c6efc
  416de5:	not    ebp
  416de7:	xor    BYTE PTR [ecx],dh
  416de9:	retf   0x512f
  416dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ded:	push   edi
  416dee:	cmp    al,0x3b
  416df0:	push   0x319a4dfd
  416df5:	pop    edi
  416df6:	out    0x62,eax
  416df8:	pushf  
  416df9:	add    al,0xe3
  416dfb:	push   edi
  416dfc:	jl     0x416db8
  416dfe:	mov    esi,0xc5fa37b6
  416e03:	fcomp  DWORD PTR [ebx]
  416e05:	inc    BYTE PTR [ecx]
  416e07:	popa   
  416e08:	jmp    0x2922:0x2141cd16
  416e0f:	xchg   esp,eax
  416e10:	shr    BYTE PTR [ecx],1
  416e12:	test   BYTE PTR [ecx+ebx*4+0x31d5584d],bl
  416e19:	pop    edi
  416e1a:	cmp    DWORD PTR [esi-0x3274e766],esi
  416e20:	in     eax,0x9c
  416e22:	popa   
  416e23:	lea    ecx,ds:0xd6d95b7
  416e29:	sub    al,0xa5
  416e2b:	ffreep st(0)
  416e2d:	test   eax,0x5d58bd31
  416e32:	mov    ebx,DWORD PTR [esi]
  416e34:	call   0x51a87a24
  416e39:	xchg   esp,eax
  416e3a:	icebp  
  416e3b:	out    0x2c,eax
  416e3d:	jnp    0x416e7b
  416e3f:	popf   
  416e40:	push   cs
  416e41:	loopne 0x416dd1
  416e43:	sub    eax,0x70092872
  416e48:	jb     0x416e13
  416e4a:	lock ret 0xb318
  416e4e:	cmp    DWORD PTR [ecx-0x7f],ecx
  416e51:	call   0xe8f9:0x3e018ddb
  416e58:	shr    ebx,1
  416e5a:	sar    ah,cl
  416e5c:	mov    BYTE PTR [edi-0x24],dl
  416e5f:	sbb    DWORD PTR [eax+0x110a64cd],ebp
  416e65:	pop    ebp
  416e66:	daa    
  416e67:	xchg   edi,eax
  416e68:	push   ds
  416e69:	arpl   WORD PTR [ecx-0x1f3f24f9],bx
  416e6f:	rcl    BYTE PTR [edx-0x80],1
  416e72:	mov    eax,0xdeda5273
  416e77:	pop    edi
  416e78:	ins    BYTE PTR es:[edi],dx
  416e79:	retf   0x734a
  416e7c:	in     eax,0xb5
  416e7e:	rdtsc  
  416e80:	cld    
  416e81:	sbb    ah,BYTE PTR [ebp+0x3ca7cfd4]
  416e87:	mov    ds:0xf8827a9e,eax
  416e8c:	call   0xf6827ac2
  416e91:	loopne 0x416e62
  416e93:	mov    dh,0xfd
  416e95:	ja     0x416ec6
  416e97:	xchg   ecx,eax
  416e98:	imul   DWORD PTR [ebp-0x52cbfe5c]
  416e9e:	les    edx,FWORD PTR ds:0xd052c29e
  416ea4:	mov    eax,0xddd3a6b4
  416ea9:	ja     0x416e85
  416eab:	stos   BYTE PTR es:[edi],al
  416eac:	add    eax,0x9561a6b5
  416eb1:	outs   dx,BYTE PTR ds:[esi]
  416eb2:	pusha  
  416eb3:	pop    ecx
  416eb4:	inc    BYTE PTR ds:0xab2f560d
  416eba:	imul   eax,ebp,0x3d15ef91
  416ec0:	call   0x80a122ad
  416ec5:	popf   
  416ec6:	dec    eax
  416ec7:	test   dl,dh
  416ec9:	fstp   DWORD PTR [esi+0x53]
  416ecc:	bt     DWORD PTR [esi],ebx
  416ecf:	das    
  416ed0:	lods   eax,DWORD PTR ds:[esi]
  416ed1:	adc    cl,BYTE PTR [ebx+0x2231ac38]
  416ed7:	lock sub edi,DWORD PTR [eax]
  416eda:	jns    0x416f2b
  416edc:	xchg   esp,eax
  416edd:	gs dec ebp
  416edf:	sbb    al,0xbe
  416ee1:	add    esp,DWORD PTR [ecx-0x80]
  416ee4:	push   ds
  416ee5:	outs   dx,DWORD PTR ds:[esi]
  416ee6:	(bad)  
  416ee7:	inc    esi
  416ee8:	adc    bh,BYTE PTR ds:0x4f8d9fb8
  416eee:	hlt    
  416eef:	jge    0x416eb6
  416ef1:	xor    BYTE PTR [edx-0x45d9e262],bl
  416ef7:	lock rcr eax,cl
  416efa:	aad    0xec
  416efc:	mov    bl,ah
  416efe:	add    eax,DWORD PTR [edi]
  416f00:	sbb    DWORD PTR [edi+0x6d],edi
  416f03:	jns    0x416f50
  416f05:	repz xchg bl,dh
  416f08:	fstp   st(0)
  416f0a:	loope  0x416f33
  416f0c:	mov    edx,0xbdb72774
  416f11:	mov    ebp,esp
  416f13:	ret    
  416f14:	pop    ebx
  416f15:	jb     0x416ea4
  416f17:	pop    ss
  416f18:	jno    0x416f4b
  416f1a:	sbb    dh,BYTE PTR [ecx-0x4d]
  416f1d:	ret    0xc9cd
  416f20:	sub    al,0x4e
  416f22:	icebp  
  416f23:	test   BYTE PTR [esi+ebx*2+0x3e43e51d],ah
  416f2a:	cmc    
  416f2b:	and    eax,0xcdc310eb
  416f30:	pop    esp
  416f31:	xor    BYTE PTR [edx-0x45],dh
  416f34:	inc    ecx
  416f35:	mov    al,0xdd
  416f37:	(bad)  
  416f38:	imul   edx,DWORD PTR [edx],0xffffffbc
  416f3b:	xor    eax,0x42fd1f5a
  416f40:	stos   DWORD PTR es:[edi],eax
  416f41:	xor    BYTE PTR [edi],al
  416f43:	je     0x416f33
  416f45:	fnstsw WORD PTR [eax]
  416f47:	repz pusha 
  416f49:	cmp    eax,0x80f90987
  416f4e:	add    eax,0xaf242262
  416f53:	mov    edi,0xf3b5ec66
  416f58:	fnsave [esp+ebx*2+0x2a]
  416f5c:	repz mov fs,WORD PTR [ebx-0x4f2ed2a4]
  416f63:	(bad)  [esi]
  416f65:	xor    eax,0xe17b7baf
  416f6a:	cmp    cl,BYTE PTR [edx+0x6edf8c5d]
  416f70:	adc    dh,dl
  416f72:	sub    DWORD PTR [ebx+0x53071fc1],ebp
  416f78:	mov    edx,0xc76c9592
  416f7d:	mov    ds,WORD PTR [eax-0x61e8bf07]
  416f83:	inc    esp
  416f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f85:	mov    dh,0x7
  416f87:	or     eax,0x39fdcdad
  416f8c:	sub    dh,BYTE PTR [edi+0x3c19b39e]
  416f92:	sbb    al,0xf3
  416f94:	in     al,0x28
  416f96:	rcr    DWORD PTR [ebx+0x10],cl
  416f99:	inc    edi
  416f9a:	fisttp DWORD PTR [ebp+0xa]
  416f9d:	push   0x1f47988a
  416fa2:	test   DWORD PTR [ebx-0x5404aabb],0x8a6d41a0
  416fac:	xchg   BYTE PTR [eax-0x7e],bl
  416faf:	std    
  416fb0:	cmp    eax,0x92fd46ad
  416fb5:	inc    eax
  416fb6:	and    DWORD PTR [ecx-0x4cd84dc],ebp
  416fbc:	sbb    BYTE PTR [ecx+0x4702f11c],0x24
  416fc3:	aad    0xa6
  416fc5:	aaa    
  416fc6:	xor    dh,ch
  416fc8:	mov    ch,0x74
  416fca:	xor    eax,0x81530ee
  416fcf:	loope  0x417047
  416fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd2:	inc    edx
  416fd3:	or     ecx,ecx
  416fd5:	push   es
  416fd6:	add    al,0x33
  416fd8:	mov    bl,BYTE PTR [edx+0x696037a9]
  416fde:	test   BYTE PTR ds:0xbcdc8b49,0xc9
  416fe5:	xchg   esp,eax
  416fe6:	pop    ebx
  416fe7:	dec    eax
  416fe8:	pop    esi
  416fe9:	adc    BYTE PTR [edx+ecx*8+0x2f],0x9d
  416fee:	lods   eax,DWORD PTR ds:[esi]
  416fef:	or     eax,0xd7ec35e6
  416ff4:	test   BYTE PTR [eax+0x8d84d81],bl
  416ffa:	in     eax,0x6c
  416ffc:	call   0x8f3e:0xc8881df2
  417003:	or     eax,0xace4ec0f
  417008:	aad    0x43
  41700a:	cwde   
  41700b:	test   al,0x2
  41700d:	or     eax,0xae8937e7
  417012:	sbb    ch,bl
  417014:	adc    al,0x2f
  417016:	mov    ecx,0x5e483e34
  41701b:	icebp  
  41701c:	idiv   DWORD PTR [edx]
  41701e:	and    esp,DWORD PTR [edx-0x182eaf93]
  417024:	test   eax,0xe4f87d07
  417029:	dec    ecx
  41702a:	push   esi
  41702b:	mov    dh,BYTE PTR [esi-0x11]
  41702e:	sub    ah,BYTE PTR [esi-0x3d]
  417031:	push   ecx
  417032:	or     DWORD PTR [ecx-0x10],esp
  417035:	pop    edx
  417036:	mov    ch,0xb8
  417038:	xor    ecx,DWORD PTR [edi+0x73]
  41703b:	push   cs
  41703c:	and    eax,0xf63a3b64
  417041:	nop
  417042:	fidiv  DWORD PTR [eax]
  417044:	add    ah,dh
  417046:	and    BYTE PTR [esi],ch
  417048:	pop    ebp
  417049:	and    esp,DWORD PTR [edi-0x3f434f4a]
  41704f:	std    
  417050:	aaa    
  417051:	jp     0x41700f
  417053:	or     al,0xa5
  417055:	pushf  
  417056:	jp     0x416fe9
  417058:	adc    ah,bl
  41705a:	and    bl,0x81
  41705d:	jecxz  0x41705b
  41705f:	int    0x2b
  417061:	repz das 
  417063:	sbb    eax,0x6b1df6c7
  417068:	push   ebx
  417069:	mov    dh,BYTE PTR [ebx+0x28]
  41706c:	dec    eax
  41706d:	and    al,0x1a
  41706f:	pop    esp
  417070:	sub    bh,BYTE PTR ds:0x189b3c7
  417076:	or     DWORD PTR ds:0x185bbb8e,0x94f4807c
  417080:	mov    ah,dl
  417082:	jg     0x4170bd
  417084:	into   
  417085:	and    esi,DWORD PTR [eax+0x66e0dc7f]
  41708b:	inc    ecx
  41708c:	and    bl,BYTE PTR [ebp+0x50c1eb85]
  417092:	call   0xb7789f7f
  417097:	loopne 0x4170e6
  417099:	adc    al,0x17
  41709b:	mov    ds:0x3e42e398,eax
  4170a0:	lods   al,BYTE PTR ds:[esi]
  4170a1:	or     DWORD PTR [ecx-0x3a],edi
  4170a4:	jo     0x4170da
  4170a6:	loope  0x41704c
  4170a8:	iret   
  4170a9:	sbb    al,0x4b
  4170ab:	loopne 0x4170f6
  4170ad:	add    DWORD PTR [ebp-0x62],edx
  4170b0:	ss inc edi
  4170b2:	lock dec eax
  4170b4:	out    0x91,al
  4170b6:	jne    0x417135
  4170b8:	aaa    
  4170b9:	hlt    
  4170ba:	xchg   edi,eax
  4170bb:	mov    eax,0xfc9d0cb4
  4170c0:	fld    TBYTE PTR [ebp+0x20]
  4170c3:	cmp    BYTE PTR [esi-0x6fb0f040],0xbf
  4170ca:	push   0x213eeff5
  4170cf:	push   ss
  4170d0:	hlt    
  4170d1:	fldenv [ecx+ebx*4]
  4170d4:	scas   al,BYTE PTR es:[edi]
  4170d5:	cvttps2pi mm6,xmm6
  4170d8:	mov    esi,ecx
  4170da:	cmp    BYTE PTR [ebp+0x788b773e],bh
  4170e0:	mov    bl,bh
  4170e2:	or     eax,0x3de45554
  4170e7:	sbb    eax,0x8d894520
  4170ec:	jns    0x4170e5
  4170ee:	les    ebp,FWORD PTR [edi+esi*1]
  4170f1:	in     eax,0xc5
  4170f3:	mov    WORD PTR [ebx],cs
  4170f5:	enter  0x21df,0x23
  4170f9:	call   0xe213:0x2fedb8ad
  417100:	aas    
  417101:	pop    eax
  417102:	sbb    ecx,DWORD PTR [ebp-0x44b3fdd5]
  417108:	dec    ebp
  417109:	add    BYTE PTR [ebx-0x6bfb5d73],ah
  41710f:	aaa    
  417110:	pop    edx
  417111:	xchg   edi,eax
  417112:	cmp    BYTE PTR [ebx],dl
  417114:	lds    esi,FWORD PTR [esi-0xb]
  417117:	pop    ebp
  417118:	fidiv  WORD PTR [ecx-0x10]
  41711b:	out    dx,eax
  41711c:	in     eax,dx
  41711d:	sbb    BYTE PTR ds:0x2037d5cf,al
  417123:	adc    dl,bl
  417125:	cmp    DWORD PTR [edi+0x4],edx
  417128:	test   DWORD PTR [ebx+0x4f493e33],0xdff365df
  417132:	jecxz  0x4170cb
  417134:	sub    DWORD PTR [eax-0x24a73b27],0x25e3b060
  41713e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41713f:	outs   dx,BYTE PTR ds:[esi]
  417140:	gs (bad) 
  417142:	lods   eax,DWORD PTR ds:[esi]
  417143:	mov    esi,0x72fa743b
  417148:	xlat   BYTE PTR ds:[ebx]
  417149:	js     0x417116
  41714b:	stos   BYTE PTR es:[edi],al
  41714c:	sub    BYTE PTR [esi-0x64],bh
  41714f:	xchg   ch,al
  417151:	pop    ebp
  417152:	rol    ebx,cl
  417154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417155:	hlt    
  417156:	sub    ebx,DWORD PTR [edx]
  417158:	xchg   ebp,eax
  417159:	pause  
  41715b:	loop   0x417118
  41715d:	inc    ebp
  41715e:	popf   
  41715f:	jmp    0x4170fc
  417161:	cld    
  417162:	mov    dh,BYTE PTR [esi+esi*4]
  417165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417166:	mov    bh,0x6
  417168:	je     0x417197
  41716a:	cmp    esp,DWORD PTR [ebx+0x40]
  41716d:	fwait
  41716e:	inc    esi
  41716f:	jmp    0x417189
  417171:	retf   
  417172:	cli    
  417173:	int3   
  417174:	shl    BYTE PTR [ebp+0x12],0x10
  417178:	js     0x417191
  41717a:	jl     0x41711d
  41717c:	or     al,0x9b
  41717e:	adc    al,0x30
  417180:	xor    al,0x4
  417182:	test   al,0x7b
  417184:	cld    
  417185:	rep lods al,BYTE PTR ds:[esi]
  417187:	jg     0x41715b
  417189:	xchg   edx,eax
  41718a:	dec    ebx
  41718b:	cs aam 0x69
  41718e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41718f:	in     al,dx
  417190:	pop    esi
  417191:	jno    0x417206
  417193:	mov    bh,0x28
  417195:	add    BYTE PTR [eax+0x6c],cl
  417198:	js     0x4171db
  41719a:	sbb    BYTE PTR [ebx-0x1f],cl
  41719d:	cwde   
  41719e:	dec    esi
  41719f:	test   DWORD PTR [esi+0x1f],0xc487ac4b
  4171a6:	(bad)  
  4171a7:	mov    al,ds:0x3df11f2c
  4171ac:	fs mov ebp,0xa7c97c1b
  4171b2:	xlat   BYTE PTR ds:[ebx]
  4171b3:	cmp    DWORD PTR [edx+0x308eb821],edi
  4171b9:	pop    esp
  4171ba:	enter  0xc17,0xf
  4171be:	cmp    DWORD PTR [ecx-0x7105cd87],edi
  4171c4:	dec    ebx
  4171c5:	add    BYTE PTR [edx],0x7d
  4171c8:	cmp    ebp,esi
  4171ca:	pop    ss
  4171cb:	stos   DWORD PTR es:[edi],eax
  4171cc:	mov    ebp,0x77eadabe
  4171d1:	int3   
  4171d2:	pop    esi
  4171d3:	pop    ebx
  4171d4:	pop    esi
  4171d5:	aaa    
  4171d6:	(bad)  
  4171d7:	adc    ebx,DWORD PTR ds:0x1b10
  4171dc:	pusha  
  4171dd:	into   
  4171de:	adc    eax,0x5018a39f
  4171e3:	loope  0x417229
  4171e5:	(bad)  
  4171e6:	out    0x4e,eax
  4171e8:	cmp    DWORD PTR [ebp+0x1db19f25],ecx
  4171ee:	mov    BYTE PTR [esi+0x3231bd0a],ah
  4171f4:	push   0x6444e3b3
  4171f9:	test   eax,0x18250846
  4171fe:	jp     0x4171ce
  417200:	or     eax,0xbf0c8bf5
  417205:	xor    DWORD PTR [esi-0x3d065059],esi
  41720b:	bound  ebp,QWORD PTR [ebx-0x29]
  41720e:	dec    edi
  41720f:	sbb    edi,DWORD PTR [edx]
  417211:	fnstenv [edx]
  417213:	lock mov WORD PTR [esp+edi*8+0x3b],cs
  417218:	and    DWORD PTR [edx+0x3b83ce2],edx
  41721e:	rsqrtps xmm3,xmm0
  417221:	sub    DWORD PTR [edi+0x4f],ebx
  417224:	ficomp WORD PTR [esi-0xc]
  417227:	stc    
  417228:	dec    ebp
  417229:	cmc    
  41722a:	imul   edi,DWORD PTR [ecx+0x1d],0x3447525e
  417231:	xchg   esp,eax
  417232:	scas   eax,DWORD PTR es:[edi]
  417233:	xchg   ecx,eax
  417234:	push   0xffffffc9
  417236:	test   al,bl
  417238:	jmp    0xb32:0x9f40ddc1
  41723f:	(bad)  
  417240:	jns    0x4171cd
  417242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417243:	adc    DWORD PTR [esp+eax*1+0x35],esi
  417247:	add    DWORD PTR [ebx+0x11],ebp
  41724a:	mov    ds:0x9d0afc3b,al
  41724f:	pusha  
  417250:	test   al,0x90
  417252:	jne    0x4171e6
  417254:	pop    ebx
  417255:	cmc    
  417256:	push   0x46687afc
  41725b:	rcl    bh,cl
  41725d:	out    0xab,al
  41725f:	mov    BYTE PTR [edx+edx*4-0x61],dh
  417263:	jle    0x4171fe
  417265:	lahf   
  417266:	imul   ecx,esp,0xffffffb4
  417269:	fsubr  DWORD PTR [ebp+ebx*8-0x12a5850]
  417270:	adc    DWORD PTR [ebp-0x22fca6a3],ebx
  417276:	js     0x41729d
  417278:	xchg   esp,eax
  417279:	xchg   esp,eax
  41727a:	adc    esi,edx
  41727c:	push   edx
  41727d:	adc    DWORD PTR [esi],ecx
  41727f:	sub    edi,DWORD PTR [edx+0x10]
  417282:	daa    
  417283:	add    al,BYTE PTR [eax+0x14]
  417286:	xchg   ebx,eax
  417287:	and    cl,BYTE PTR [edx+0x672e0f85]
  41728d:	lea    ebp,[ebp-0x47d3e37a]
  417293:	loop   0x41725c
  417295:	int3   
  417296:	push   cs
  417297:	mov    edi,0xfa5b744
  41729c:	xchg   ebx,eax
  41729d:	in     al,0x9c
  41729f:	mov    ss,WORD PTR [eax+0x1c74f1cf]
  4172a5:	lods   al,BYTE PTR ds:[esi]
  4172a6:	sub    BYTE PTR [ebx+0x60],bh
  4172a9:	pop    ss
  4172aa:	or     al,0xe1
  4172ac:	mov    eax,ds:0x52f7a56c
  4172b1:	js     0x41731d
  4172b3:	add    bh,dh
  4172b5:	jl     0x4172bc
  4172b7:	stc    
  4172b8:	lods   al,BYTE PTR ds:[esi]
  4172b9:	mov    ch,0x35
  4172bb:	clc    
  4172bc:	jns    0x417297
  4172be:	sti    
  4172bf:	jmp    0x417262
  4172c1:	push   0xdb642f0
  4172c6:	lahf   
  4172c7:	cli    
  4172c8:	mov    es,WORD PTR [eax]
  4172ca:	push   ds
  4172cb:	jae    0x417279
  4172cd:	jmp    0xa1f3:0x7636eb9b
  4172d4:	pusha  
  4172d5:	pushf  
  4172d6:	fcomp  DWORD PTR [edi+ecx*4+0x34]
  4172da:	(bad)  
  4172db:	sti    
  4172dc:	sbb    BYTE PTR [eax-0x67],dl
  4172df:	fimul  WORD PTR [ebx+esi*1]
  4172e2:	sbb    BYTE PTR [esi+0x3d],al
  4172e5:	push   esp
  4172e6:	enter  0x3a4c,0x1e
  4172ea:	xor    esp,esi
  4172ec:	stc    
  4172ed:	jo     0x4172c6
  4172ef:	jle    0x41728b
  4172f1:	push   0x40
  4172f3:	popa   
  4172f4:	stos   BYTE PTR es:[edi],al
  4172f5:	jno    0x4172a1
  4172f7:	inc    ebp
  4172f8:	xchg   esp,eax
  4172f9:	fs daa 
  4172fb:	push   edi
  4172fc:	and    BYTE PTR [edx+edi*8+0x7c],cl
  417300:	popf   
  417301:	dec    eax
  417302:	push   ebx
  417303:	sbb    eax,0x394ba7c5
  417308:	lds    eax,FWORD PTR [esi-0x76]
  41730b:	pop    ds
  41730c:	adc    DWORD PTR [ecx],esi
  41730e:	test   eax,0xc42d656b
  417313:	call   DWORD PTR [esi-0x3e]
  417316:	ret    0xde30
  417319:	sub    BYTE PTR [esi],ah
  41731b:	cmp    cl,BYTE PTR [esi-0x11]
  41731e:	(bad)  
  417320:	xor    bl,dl
  417322:	or     ecx,DWORD PTR [esi]
  417324:	nop
  417325:	gs dec ecx
  417327:	fidiv  DWORD PTR [esi]
  417329:	cmp    al,0x95
  41732b:	mov    edi,0x3972231f
  417330:	mov    eax,ds:0xfa3d4d8d
  417335:	sub    DWORD PTR [ebx+0x41],esi
  417338:	imul   edx,DWORD PTR [ebp-0x18],0xffffffdc
  41733c:	jle    0x41739d
  41733e:	out    dx,eax
  41733f:	push   ss
  417340:	push   ecx
  417341:	mov    esp,0x156004ba
  417346:	iret   
  417347:	js     0x417371
  417349:	pop    edx
  41734a:	or     BYTE PTR [ebp-0x355f7ba1],dl
  417350:	dec    ebx
  417351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417352:	jl     0x417396
  417354:	fucom  st(0)
  417356:	loopne 0x4173a5
  417358:	pop    ebx
  417359:	popf   
  41735a:	sbb    ah,BYTE PTR [ecx]
  41735c:	pop    eax
  41735d:	pop    esp
  41735e:	sub    eax,DWORD PTR [eax-0xbee6e1d]
  417364:	xor    al,0xed
  417366:	iret   
  417367:	push   0x5851cd29
  41736c:	jae    0x4173d4
  41736e:	std    
  41736f:	mov    edx,0xae5f263e
  417374:	inc    edx
  417375:	rcr    BYTE PTR [ecx+0x4c064ed6],0x14
  41737c:	stos   DWORD PTR es:[edi],eax
  41737d:	sbb    al,0xb
  41737f:	inc    edx
  417380:	ret    
  417381:	in     eax,dx
  417382:	fwait
  417383:	pop    ebx
  417384:	in     eax,0x6c
  417386:	mov    BYTE PTR [ebx+0x22],0x25
  41738a:	jp     0x41737c
  41738c:	inc    ebp
  41738d:	nop
  41738e:	mov    al,ds:0x687993e6
  417393:	out    0x94,eax
  417395:	imul   esp,DWORD PTR [esi+0x71],0xde185f7f
  41739c:	cmp    al,0x9d
  41739e:	jmp    0xd4675023
  4173a3:	sub    al,0x66
  4173a5:	mov    al,bh
  4173a7:	pop    edx
  4173a8:	nop
  4173a9:	enter  0xaebe,0x7e
  4173ad:	mov    edx,0x981a0db5
  4173b2:	cmp    esp,DWORD PTR [ebp+0x2c8aaa0a]
  4173b8:	jle    0x41739b
  4173ba:	jb     0x4173c3
  4173bc:	xor    DWORD PTR [ebp-0x48beb81f],eax
  4173c2:	pop    edx
  4173c3:	lods   al,BYTE PTR ds:[esi]
  4173c4:	mov    ch,0x6f
  4173c6:	jbe    0x4173e9
  4173c8:	cli    
  4173c9:	rol    ecx,1
  4173cb:	ins    DWORD PTR es:[edi],dx
  4173cc:	inc    edx
  4173cd:	xchg   BYTE PTR ds:0x630a3f99,cl
  4173d3:	loope  0x4173d8
  4173d5:	pop    ebx
  4173d6:	sub    DWORD PTR [eax],edi
  4173d8:	test   DWORD PTR [edx+0x4a46ce7e],ebx
  4173de:	loop   0x417435
  4173e0:	scas   eax,DWORD PTR es:[edi]
  4173e1:	pop    ss
  4173e2:	(bad)  
  4173e3:	push   ebp
  4173e4:	retf   
  4173e5:	and    DWORD PTR [edx],edi
  4173e7:	add    DWORD PTR [eax],0xffffffcc
  4173ea:	sti    
  4173eb:	add    al,0x43
  4173ed:	pop    ds
  4173ee:	jo     0x41745f
  4173f0:	and    ecx,edi
  4173f2:	loop   0x41741f
  4173f4:	push   0x6f
  4173f6:	inc    esi
  4173f7:	mov    esp,0x9e587950
  4173fc:	test   DWORD PTR [ecx+0x1b527a19],0xf536544a
  417406:	inc    ebp
  417407:	pop    esp
  417408:	imul   ecx,DWORD PTR [edx+0x50],0x9
  41740c:	pushf  
  41740d:	leave  
  41740e:	cs push 0xffffffc1
  417411:	mov    bl,0x5e
  417413:	xchg   ebx,eax
  417414:	les    esp,FWORD PTR [edi-0x50]
  417417:	mov    dh,0x56
  417419:	xlat   BYTE PTR ds:[ebx]
  41741a:	fistp  WORD PTR [edi+0x64f440ec]
  417420:	add    al,0x4a
  417422:	lods   eax,DWORD PTR ds:[esi]
  417423:	cwde   
  417424:	xchg   DWORD PTR [esi+0x66],edx
  417427:	inc    eax
  417428:	into   
  417429:	push   ds
  41742a:	mov    ch,0x95
  41742c:	cmc    
  41742d:	sbb    esp,DWORD PTR [edi-0x290cf73e]
  417433:	sbb    eax,0xb8492ec1
  417438:	loope  0x41745b
  41743a:	mov    ds:0x53c72e0c,eax
  41743f:	into   
  417440:	adc    al,0xc
  417442:	jae    0x4174a3
  417444:	mov    bh,0x19
  417446:	call   0xb72ed8ae
  41744b:	into   
  41744c:	mov    bh,0x1b
  41744e:	ins    DWORD PTR es:[edi],dx
  41744f:	pop    esp
  417450:	fisub  WORD PTR [esi+0x63]
  417453:	push   0xb15a228a
  417458:	cmc    
  417459:	fistp  WORD PTR [ebx+ebx*1+0x2296dfa3]
  417460:	ss mov al,al
  417463:	dec    ecx
  417464:	jno    0x4174ab
  417466:	les    ebx,FWORD PTR [ecx-0x7ab3c5b]
  41746c:	js     0x41743f
  41746e:	inc    esp
  41746f:	ret    0xa1fc
  417472:	sbb    ah,BYTE PTR [ebx+eax*4]
  417475:	loope  0x41743d
  417477:	les    ecx,FWORD PTR [esi+0x5bf7a19b]
  41747d:	jge    0x417418
  41747f:	xchg   cl,bh
  417481:	rcr    DWORD PTR [ecx-0xae90b61],1
  417487:	ja     0x4174d9
  417489:	xor    al,0x4f
  41748b:	mov    ch,0xae
  41748d:	sbb    eax,0xd5153b02
  417492:	xor    DWORD PTR [ecx],esi
  417494:	and    al,0x9f
  417496:	bound  ebx,QWORD PTR ds:0x4bcbad5e
  41749c:	xchg   BYTE PTR [ecx+0x6d],ah
  41749f:	pop    esi
  4174a0:	aad    0x84
  4174a2:	fs daa 
  4174a4:	xchg   edi,eax
  4174a5:	add    dh,ch
  4174a7:	jg     0x417485
  4174a9:	cmc    
  4174aa:	pusha  
  4174ab:	push   ds
  4174ac:	mov    bh,0xd0
  4174ae:	dec    esi
  4174af:	call   ecx
  4174b1:	inc    esp
  4174b2:	cmc    
  4174b3:	lea    edi,[eax-0x64]
  4174b6:	push   0xffffffdb
  4174b8:	sub    eax,0xc9ca425d
  4174bd:	adc    eax,0xf4267610
  4174c2:	idiv   DWORD PTR [edx+0x5c]
  4174c5:	sbb    BYTE PTR [edx+0x3d],ah
  4174c8:	mov    ds:0xd213f960,eax
  4174cd:	stos   BYTE PTR es:[edi],al
  4174ce:	mov    edi,0x75be364a
  4174d3:	in     eax,0x8f
  4174d5:	mov    esi,0xc54b7bbd
  4174da:	rol    BYTE PTR [ecx+ebx*2-0x7dd0bdfe],cl
  4174e1:	cdq    
  4174e2:	fsubr  QWORD PTR [ecx-0x1360aa89]
  4174e8:	pop    ds
  4174e9:	aam    0x84
  4174eb:	arpl   WORD PTR [ebp-0xb2e50b7],sp
  4174f1:	sti    
  4174f2:	inc    ebx
  4174f3:	arpl   ax,si
  4174f5:	jnp    0x4174aa
  4174f7:	mov    ebp,0xb33cfb68
  4174fc:	xchg   BYTE PTR [edi],bh
  4174fe:	xor    al,0x74
  417500:	xchg   edi,eax
  417501:	cwde   
  417502:	bound  edi,QWORD PTR [ebx-0x12f21dd9]
  417508:	xor    al,0x8a
  41750a:	and    DWORD PTR [edx-0x68a3525e],esi
  417510:	std    
  417511:	jge    0x4174eb
  417513:	adc    DWORD PTR [eax-0x62],esi
  417516:	(bad)  
  417517:	xlat   BYTE PTR ds:[ebx]
  417518:	add    ch,BYTE PTR [ebx-0x43848221]
  41751e:	mov    bl,0xe9
  417520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417521:	xor    BYTE PTR [ebp-0x2d],ah
  417524:	cwde   
  417525:	inc    ebp
  417526:	lock sahf 
  417528:	ins    DWORD PTR es:[edi],dx
  417529:	jbe    0x417515
  41752b:	xchg   edi,eax
  41752c:	mov    ebx,0xb4045b77
  417531:	xchg   edx,eax
  417532:	cmp    edi,edx
  417534:	or     edx,DWORD PTR es:[esi]
  417537:	sub    DWORD PTR [ecx],esp
  417539:	popa   
  41753a:	adc    ch,bl
  41753c:	cmp    eax,0x1cb7b113
  417541:	dec    ecx
  417542:	xchg   ebp,eax
  417543:	jecxz  0x417599
  417545:	test   BYTE PTR [edi+eax*8-0x4fce3562],bh
  41754c:	jg     0x417549
  41754e:	test   eax,0xbf512dae
  417553:	mov    ecx,?
  417555:	mov    al,bl
  417557:	xor    edx,DWORD PTR [esi-0x1d75248f]
  41755d:	jnp    0x417528
  41755f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417560:	mov    ecx,0xeaa11ee3
  417565:	pop    DWORD PTR [ebx]
  417567:	sbb    DWORD PTR [ebx-0x19acf9c0],esp
  41756d:	jmp    0x41dd:0xf4478f2e
  417574:	dec    edx
  417575:	loop   0x4175e7
  417577:	mov    ecx,0xd89bad42
  41757c:	jge    0x41758f
  41757e:	hlt    
  41757f:	add    dh,BYTE PTR [ebx+0x143ae638]
  417585:	test   BYTE PTR [ebx+ebx*1-0x28],al
  417589:	and    BYTE PTR [esi-0x4c50345a],bl
  41758f:	xchg   ebp,eax
  417590:	mov    esp,0x43f7d609
  417595:	inc    esi
  417596:	mov    ds:0x73d1cbde,eax
  41759b:	jmp    0x4bc03388
  4175a0:	sbb    al,0x28
  4175a2:	push   ss
  4175a3:	add    DWORD PTR [eax-0x5a],ebx
  4175a6:	sub    eax,DWORD PTR [esi-0x2b]
  4175a9:	cmp    eax,DWORD PTR fs:[edi]
  4175ac:	cmp    al,0x6c
  4175ae:	shr    bl,0x4
  4175b1:	push   ecx
  4175b2:	pop    ecx
  4175b3:	jbe    0x417562
  4175b5:	inc    esp
  4175b6:	fwait
  4175b7:	push   cs
  4175b8:	cs xchg ebp,eax
  4175ba:	pop    edi
  4175bb:	inc    edi
  4175bc:	mov    ?,ebx
  4175be:	sar    DWORD PTR [eax],0xee
  4175c1:	sub    edx,ecx
  4175c3:	mov    al,0x5b
  4175c5:	in     al,dx
  4175c6:	or     ecx,edx
  4175c8:	pop    ebp
  4175c9:	adc    eax,0x751c94cc
  4175ce:	fisubr DWORD PTR [eax+0x10b0de27]
  4175d4:	dec    eax
  4175d5:	adc    ebp,DWORD PTR [eax]
  4175d7:	lds    edi,FWORD PTR [esi+esi*8+0x5]
  4175db:	test   al,0xdd
  4175dd:	das    
  4175de:	push   esi
  4175df:	dec    esi
  4175e0:	test   DWORD PTR [edx-0x7],ebx
  4175e3:	das    
  4175e4:	cmp    DWORD PTR [ebp-0x6f8dc0ba],0x9ad63310
  4175ee:	(bad)  [ebx+edx*4+0x50e968ee]
  4175f5:	aaa    
  4175f6:	ins    DWORD PTR es:[edi],dx
  4175f7:	ret    
  4175f8:	sbb    BYTE PTR [esi+0x2224ee89],bl
  4175fe:	call   0xfa72788f
  417603:	lods   eax,DWORD PTR ds:[esi]
  417604:	push   esp
  417605:	mov    bh,0x6e
  417607:	push   0xe45f8ba4
  41760c:	and    DWORD PTR [edx-0x495bfbd2],0x4b5b3edf
  417616:	inc    esp
  417617:	push   edx
  417618:	add    BYTE PTR [ecx-0x73],bl
  41761b:	icebp  
  41761c:	and    BYTE PTR [ebp-0x44],dl
  41761f:	sub    dl,cl
  417621:	sub    BYTE PTR [esi+0x6f],bh
  417624:	aad    0x2e
  417626:	retf   
  417627:	cs push esi
  417629:	int3   
  41762a:	in     eax,0xe5
  41762c:	mov    WORD PTR [ebp+0xe],?
  41762f:	rcl    DWORD PTR [eax-0x13bb4494],cl
  417635:	sbb    eax,0xc0ece6d0
  41763a:	test   al,0x4f
  41763c:	ins    BYTE PTR es:[edi],dx
  41763d:	jmp    0x417674
  41763f:	or     bh,BYTE PTR [eax+0x61018234]
  417645:	jns    0x41767f
  417647:	sub    eax,0xb1cdc7cf
  41764c:	in     eax,dx
  41764d:	adc    al,0xbb
  41764f:	adc    BYTE PTR ds:0xe82bcc,dl
  417655:	or     ebx,DWORD PTR es:[ecx+0x2]
  417659:	mov    ebx,0x19cf544
  41765e:	mov    esp,0x5f47c0
  417663:	loop   0x4176cb
  417665:	sahf   
  417666:	sub    DWORD PTR [ecx+edx*4],eax
  417669:	push   edi
  41766a:	and    al,0x88
  41766c:	ret    0xb012
  41766f:	jne    0x41768b
  417671:	dec    edi
  417672:	retf   0xe45a
  417675:	adc    ch,bl
  417677:	cmc    
  417678:	add    eax,edi
  41767a:	mov    ebx,0x807e6fd2
  41767f:	adc    al,0xac
  417681:	mov    edi,DWORD PTR [esi]
  417683:	retf   0x3871
  417686:	std    
  417687:	aaa    
  417688:	jae    0x4176a0
  41768a:	in     al,dx
  41768b:	lea    esi,[esi-0xf]
  41768e:	(bad)  
  41768f:	push   edi
  417690:	hlt    
  417691:	push   eax
  417692:	push   edi
  417693:	dec    eax
  417694:	jl     0x417650
  417696:	or     DWORD PTR [eax+0x5d41a11d],ebp
  41769c:	ret    0x16f3
  41769f:	mov    WORD PTR [edi+0x71],es
  4176a2:	jge    0x4176a8
  4176a4:	outs   dx,BYTE PTR ds:[esi]
  4176a5:	sub    al,0xb0
  4176a7:	sbb    BYTE PTR [ebx+0x23ab97f6],bh
  4176ad:	jmp    DWORD PTR [ecx+0x39]
  4176b0:	cld    
  4176b1:	retf   
  4176b2:	adc    cl,dl
  4176b4:	xchg   esi,eax
  4176b5:	popa   
  4176b6:	ins    DWORD PTR es:[edi],dx
  4176b7:	rcl    DWORD PTR [edi+edx*1],cl
  4176ba:	popf   
  4176bb:	mov    esp,0x23b36520
  4176c0:	in     eax,dx
  4176c1:	mov    WORD PTR [edx+esi*1-0x35],es
  4176c5:	mov    dl,0xc
  4176c7:	ficomp DWORD PTR [ecx]
  4176c9:	retf   0x18eb
  4176cc:	test   edi,esp
  4176ce:	add    al,0xad
  4176d0:	sbb    ebp,ebp
  4176d2:	imul   eax,esp,0xede5699a
  4176d8:	dec    ebx
  4176d9:	cs jge 0x41767c
  4176dc:	int    0x46
  4176de:	sbb    eax,0xd47f9849
  4176e3:	outs   dx,DWORD PTR ds:[esi]
  4176e4:	jmp    0xd6a93033
  4176e9:	cmc    
  4176ea:	mov    ecx,0x297ddb79
  4176ef:	neg    DWORD PTR [edi]
  4176f1:	je     0x4176e2
  4176f3:	push   ecx
  4176f4:	mov    WORD PTR [eax*8-0x7afeb43b],es
  4176fb:	add    eax,0xb595edd6
  417700:	fiadd  WORD PTR [eax]
  417702:	gs loop 0x417764
  417705:	xor    DWORD PTR [eax-0x63950dea],0x7296ca6b
  41770f:	mov    esp,0x51de1c45
  417714:	cmp    eax,0x3f6c2d09
  417719:	xchg   BYTE PTR [ebp-0x38530432],ah
  41771f:	push   ebx
  417720:	add    esp,DWORD PTR [eax+0x637f3282]
  417726:	dec    ebx
  417727:	ficomp DWORD PTR [eax]
  417729:	jo     0x41770f
  41772b:	and    esp,ecx
  41772d:	cdq    
  41772e:	jp     0x417741
  417730:	cmp    al,dl
  417732:	aas    
  417733:	and    bh,bh
  417735:	ficom  WORD PTR ds:0xa5b4526e
  41773b:	ficom  DWORD PTR [esi-0x5e]
  41773e:	sub    ebp,DWORD PTR [edx-0x78]
  417741:	mov    edi,0xe7e39e45
  417746:	ja     0x41770c
  417748:	and    DWORD PTR ds:0xb9f9ccd8,edi
  41774e:	pop    ebp
  41774f:	adc    eax,0x33fadec8
  417754:	xchg   esp,eax
  417755:	stos   DWORD PTR es:[edi],eax
  417756:	xor    ebx,ebp
  417758:	xchg   BYTE PTR [esi-0x4467b63b],al
  41775e:	stos   DWORD PTR es:[edi],eax
  41775f:	inc    ecx
  417760:	loope  0x417726
  417762:	xor    BYTE PTR [edx+0x31],ch
  417765:	jnp    0x4177c4
  417767:	mov    DWORD PTR [ecx+0x5d467fdf],0xf495081e
  417771:	out    0x17,eax
  417773:	jle    0x4177c1
  417775:	mov    ch,0x51
  417777:	xchg   BYTE PTR [edi+0x7c],ah
  41777a:	pop    ebx
  41777b:	enter  0x33f,0xb1
  41777f:	ss inc ebx
  417781:	sahf   
  417782:	push   cs
  417783:	lods   eax,DWORD PTR ds:[esi]
  417784:	lahf   
  417785:	sbb    bl,al
  417787:	mov    eax,ds:0x1e9e347f
  41778c:	jnp    0x4177f2
  41778e:	adc    DWORD PTR [esp+ebx*1],eax
  417791:	fiadd  DWORD PTR [edx]
  417793:	jg     0x4177f7
  417795:	fwait
  417796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417797:	and    BYTE PTR [ebp*2+0x382c94bf],ch
  41779e:	iret   
  41779f:	int    0x7e
  4177a1:	push   cs
  4177a2:	push   esi
  4177a3:	loope  0x4177b3
  4177a5:	les    edx,FWORD PTR [ebx+ebp*1-0x3c]
  4177a9:	mov    al,ds:0x3742a74c
  4177ae:	lahf   
  4177af:	jp     0x4177b8
  4177b1:	sub    cl,BYTE PTR [edi+eax*1-0x5d4e886a]
  4177b8:	into   
  4177b9:	mov    edi,0xd9177d51
  4177be:	cmp    ecx,ebp
  4177c0:	push   0xffffffb8
  4177c2:	add    DWORD PTR [edx],edi
  4177c4:	sti    
  4177c5:	pop    esp
  4177c6:	(bad)  
  4177c7:	pop    ebp
  4177c8:	call   0x7a93868e
  4177cd:	pop    eax
  4177ce:	out    dx,eax
  4177cf:	jp     0x41777a
  4177d1:	adc    edx,ebx
  4177d3:	xchg   esp,eax
  4177d4:	outs   dx,BYTE PTR ds:[esi]
  4177d5:	outs   dx,DWORD PTR ds:[esi]
  4177d6:	nop
  4177d7:	shl    DWORD PTR [ebx],cl
  4177d9:	aam    0x20
  4177db:	sub    BYTE PTR [ecx-0x9],al
  4177de:	xchg   ebp,eax
  4177df:	fimul  DWORD PTR [ebx]
  4177e1:	imul   DWORD PTR [ebx-0x1f]
  4177e4:	push   0xffffffaf
  4177e6:	xchg   edx,eax
  4177e7:	into   
  4177e8:	push   ebp
  4177e9:	mov    ebx,edi
  4177eb:	push   esi
  4177ec:	shl    al,0x57
  4177ef:	ficomp DWORD PTR [ebp+ebx*1+0x173a0608]
  4177f6:	lods   al,BYTE PTR ds:[esi]
  4177f7:	adc    cl,BYTE PTR [ecx-0x7e64a47e]
  4177fd:	jo     0x41787d
  4177ff:	sub    ecx,DWORD PTR [ebx+0x21]
  417802:	je     0x41783d
  417804:	dec    esp
  417805:	xor    esp,eax
  417807:	push   eax
  417808:	aam    0xe3
  41780a:	jmp    0x417816
  41780c:	dec    BYTE PTR [edx+0x3772e761]
  417812:	dec    ecx
  417813:	ret    0x8bb
  417816:	xchg   ecx,eax
  417817:	jp     0x4177cc
  417819:	and    ebp,DWORD PTR [esi-0x35]
  41781c:	inc    esi
  41781d:	dec    eax
  41781e:	dec    esp
  41781f:	retf   0x7c7b
  417822:	pop    edx
  417823:	fs stos DWORD PTR es:[edi],eax
  417825:	jle    0x41785c
  417827:	js     0x41786a
  417829:	aas    
  41782a:	test   DWORD PTR [edx+0x49d94eba],0xd4120181
  417834:	loop   0x4178ab
  417836:	enter  0x9a99,0xe7
  41783a:	inc    ecx
  41783b:	jnp    0x4177cc
  41783d:	cmp    esp,DWORD PTR es:[ebx-0x3f]
  417841:	add    al,0x74
  417843:	ins    DWORD PTR es:[edi],dx
  417844:	pop    esp
  417845:	iret   
  417846:	jb     0x4177fe
  417848:	cmp    BYTE PTR [edx+0x7aba8a1b],ah
  41784e:	imul   ecx,DWORD PTR [esi-0x1f],0xffffffc3
  417852:	(bad)  
  417853:	in     eax,dx
  417854:	mov    ch,0xa0
  417856:	mov    edi,0x4872ce8d
  41785b:	lods   eax,DWORD PTR ds:[esi]
  41785c:	addr16 fwait
  41785e:	adc    BYTE PTR [edi+0x565841df],dh
  417864:	imul   ecx,esp,0x6b
  417867:	scas   al,BYTE PTR es:[edi]
  417868:	imul   esp,DWORD PTR [ebp+0x22c13770],0xffffffcb
  41786f:	adc    eax,0xa79ace9b
  417874:	xchg   esi,eax
  417875:	cld    
  417876:	sbb    eax,DWORD PTR [ecx+eiz*8-0x14]
  41787a:	or     BYTE PTR [edi+ebp*1],dh
  41787d:	sbb    al,0x8c
  41787f:	adc    ah,BYTE PTR [ecx-0xc]
  417882:	dec    ecx
  417883:	mov    al,0x5d
  417885:	xchg   edi,eax
  417886:	mov    al,0xbd
  417888:	jb     0x417877
  41788a:	mov    ds:0x26fe80f1,al
  41788f:	test   DWORD PTR [edx+edi*8-0xd],0x2179b5ae
  417897:	xchg   esp,eax
  417898:	repz in al,dx
  41789a:	jne    0x41790d
  41789c:	cmp    eax,0xeb6dc731
  4178a1:	arpl   bp,bp
  4178a3:	dec    eax
  4178a4:	xlat   BYTE PTR ds:[ebx]
  4178a5:	mov    dl,BYTE PTR [ebp+0x7cb84c4b]
  4178ab:	nop
  4178ac:	adc    edx,DWORD PTR [ecx+edx*1+0x5598f266]
  4178b3:	icebp  
  4178b4:	jg     0x4178ee
  4178b6:	repz jbe 0x417845
  4178b9:	out    0x12,eax
  4178bb:	dec    eax
  4178bc:	mov    edi,0xbb872299
  4178c1:	retf   
  4178c2:	inc    ebp
  4178c3:	or     DWORD PTR [ebx],ebx
  4178c5:	cwde   
  4178c6:	fisub  WORD PTR [ebx-0x28bfc513]
  4178cc:	shl    DWORD PTR [eax-0x22a79224],1
  4178d2:	les    ebp,FWORD PTR [eax]
  4178d4:	pop    esi
  4178d5:	cmp    eax,0x6170c938
  4178da:	jns    0x417862
  4178dc:	or     bh,BYTE PTR [ebx+esi*1+0x6346b849]
  4178e3:	mov    ds:0xfc36326b,eax
  4178e8:	inc    edx
  4178e9:	loopne 0x41792d
  4178eb:	jmp    0x4741a162
  4178f0:	lahf   
  4178f1:	inc    ebx
  4178f2:	xor    DWORD PTR [edx-0x61c3e248],0xb8d38bac
  4178fc:	das    
  4178fd:	jbe    0x417955
  4178ff:	xor    BYTE PTR cs:[edi],bl
  417902:	icebp  
  417903:	loop   0x417964
  417905:	jno    0x417895
  417907:	dec    ebx
  417908:	jge    0x417894
  41790a:	test   al,0x4
  41790c:	xchg   ah,bh
  41790e:	sub    edi,DWORD PTR [edx+0x453be799]
  417914:	aam    0x48
  417916:	mov    al,BYTE PTR [ebp-0x28]
  417919:	jae    0x4178c7
  41791b:	repnz or esi,DWORD PTR ss:[esi+0x5a]
  417920:	cmp    BYTE PTR [eax-0x17],0xf6
  417924:	popa   
  417925:	(bad)  
  417926:	xchg   BYTE PTR [ebx+0x13],ah
  417929:	stos   DWORD PTR es:[edi],eax
  41792a:	dec    ecx
  41792b:	push   ss
  41792c:	cmp    eax,ebp
  41792e:	xlat   BYTE PTR ds:[ebx]
  41792f:	(bad)  
  417930:	in     eax,0x8f
  417932:	(bad)  
  417933:	fsubr  QWORD PTR [esi]
  417935:	xchg   ebp,eax
  417936:	popf   
  417937:	stos   DWORD PTR es:[edi],eax
  417938:	or     DWORD PTR [esi+0x71],0xf3b15d2b
  41793f:	sbb    al,0x4c
  417941:	sbb    BYTE PTR [edi+0x2f76f8a8],ah
  417947:	add    ch,BYTE PTR [ecx+eiz*1+0x4a3579b1]
  41794e:	add    DWORD PTR [ebx],edi
  417950:	inc    esp
  417951:	pop    ebp
  417952:	ret    
  417953:	push   edx
  417954:	mov    ah,0xd8
  417956:	sub    dl,dh
  417958:	test   al,0x83
  41795a:	mov    ah,BYTE PTR [edx]
  41795c:	and    eax,0x78c01fd8
  417961:	nop
  417962:	or     BYTE PTR gs:[ecx-0x239738ca],ah
  417969:	mov    bh,0xb4
  41796b:	loopne 0x41797a
  41796d:	jno    0x417903
  41796f:	or     DWORD PTR [ebp+ebx*2+0x3426f5d1],ecx
  417976:	pusha  
  417977:	jo     0x417993
  417979:	(bad)  
  41797a:	jle    0x4179b3
  41797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41797d:	lods   eax,DWORD PTR ds:[esi]
  41797e:	aad    0x10
  417980:	arpl   WORD PTR [edx-0x3a4ba7e6],sp
  417986:	popa   
  417987:	xor    BYTE PTR [edx],0xa0
  41798a:	shr    BYTE PTR [ebx+0x5922a488],0xd6
  417991:	scas   al,BYTE PTR es:[edi]
  417992:	add    BYTE PTR [ebx-0xe],0x2b
  417996:	out    dx,eax
  417997:	sub    DWORD PTR [edx+0x7a],ecx
  41799a:	stos   BYTE PTR es:[edi],al
  41799b:	das    
  41799c:	in     al,0x8f
  41799e:	lea    eax,[ecx+0x64]
  4179a1:	aas    
  4179a2:	jmp    0x4179ef
  4179a4:	jmp    0xc7612497
  4179a9:	iretw  
  4179ab:	dec    ecx
  4179ac:	pop    eax
  4179ad:	cmp    al,0x7
  4179af:	add    dl,bl
  4179b1:	xor    eax,0xefadb444
  4179b6:	fcmove st,st(1)
  4179b8:	xchg   DWORD PTR [edi+0x65],edx
  4179bb:	dec    edi
  4179bc:	xor    BYTE PTR [ebp+0x7],al
  4179bf:	mov    ds:0x1d1e395d,al
  4179c4:	push   ecx
  4179c5:	pop    esp
  4179c6:	stos   DWORD PTR es:[edi],eax
  4179c7:	lds    ebx,FWORD PTR [eax+0x36]
  4179ca:	popa   
  4179cb:	(bad)  
  4179cc:	mov    esp,0xe12e2084
  4179d1:	fiadd  DWORD PTR [edi+eiz*2]
  4179d4:	or     eax,0xb7b6656d
  4179d9:	rol    BYTE PTR [edx-0x494dd49a],0x56
  4179e0:	mov    dh,bl
  4179e2:	std    
  4179e3:	pop    edx
  4179e4:	imul   edi,DWORD PTR [edx-0x5c],0xffffffbf
  4179e8:	mov    WORD PTR [ebx+eiz*1+0x7d],ds
  4179ec:	xor    BYTE PTR [ecx],dh
  4179ee:	retf   0xf83e
  4179f1:	sar    DWORD PTR [eax+ebp*2],0x2f
  4179f5:	jbe    0x417988
  4179f7:	rcr    BYTE PTR [ebp+0x5d],cl
  4179fa:	pop    ecx
  4179fb:	data16 sub al,0x70
  4179fe:	(bad)  
  4179ff:	(bad)  
  417a00:	pop    ss
  417a01:	ror    BYTE PTR [ebx],1
  417a03:	stc    
  417a04:	adc    ebx,ebx
  417a06:	pop    esi
  417a07:	jmp    0x8577:0x95874e5f
  417a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a0f:	xchg   esp,eax
  417a10:	repnz pop cx
  417a14:	xchg   edx,eax
  417a15:	data16 sahf 
  417a17:	nop
  417a18:	dec    eax
  417a19:	jno    0x4179e7
  417a1b:	mov    esi,0xce0da483
  417a20:	retf   
  417a21:	push   esp
  417a22:	fdiv   st,st(4)
  417a24:	aas    
  417a25:	fdivr  QWORD PTR [edx]
  417a27:	repnz mov ecx,0xa364b8c9
  417a2d:	in     eax,dx
  417a2e:	inc    ecx
  417a2f:	xchg   ebp,eax
  417a30:	int3   
  417a31:	mov    dl,0x2
  417a33:	xlat   BYTE PTR ds:[ebx]
  417a34:	dec    ebx
  417a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a36:	and    BYTE PTR [edi+0x137c1ae5],ah
  417a3c:	imul   esp,DWORD PTR [edi],0xffffffc8
  417a3f:	and    BYTE PTR [eax],dh
  417a41:	mov    ecx,0x8dd0d467
  417a46:	mov    edx,0x2bccc5ed
  417a4b:	inc    edi
  417a4c:	xchg   esi,eax
  417a4d:	dec    edi
  417a4e:	and    ecx,esp
  417a50:	ss jp  0x4179fb
  417a53:	icebp  
  417a54:	jge    0x417ac2
  417a56:	(bad)  
  417a57:	rcl    BYTE PTR [eax],cl
  417a59:	shl    DWORD PTR [esi-0x50],1
  417a5c:	test   al,0x8e
  417a5e:	xchg   ecx,eax
  417a5f:	xchg   edx,eax
  417a60:	push   cs
  417a61:	sub    BYTE PTR gs:[esi-0x52],ah
  417a65:	ja     0x417a70
  417a67:	sbb    cl,BYTE PTR [ebx]
  417a69:	xchg   BYTE PTR [edx-0x1999b3e],ch
  417a6f:	loopne 0x417a6b
  417a71:	jno    0x417a13
  417a73:	mov    dh,0x57
  417a75:	adc    DWORD PTR [edx],edx
  417a77:	jno    0x417a26
  417a79:	add    esi,edi
  417a7b:	(bad)  
  417a7c:	adc    ah,al
  417a7e:	push   eax
  417a7f:	popa   
  417a80:	mov    ch,0x3a
  417a82:	in     eax,0x5
  417a84:	pop    ds
  417a85:	fidiv  DWORD PTR [eax]
  417a87:	cmc    
  417a88:	mov    ecx,0x6021d0c9
  417a8d:	xor    DWORD PTR [edi+ebp*1+0x3a],esp
  417a91:	into   
  417a92:	imul   ecx,DWORD PTR [ecx+0x1c0173b8],0xe82e33c8
  417a9c:	fnstsw WORD PTR [edi+0x1dcabbe6]
  417aa2:	add    eax,0x4801ce8b
  417aa7:	inc    eax
  417aa8:	bound  ebx,QWORD PTR [esi+0x373fde25]
  417aae:	jmp    0xffe5:0x4baff656
  417ab5:	(bad)  
  417ab6:	les    esp,FWORD PTR [ebx+0x5]
  417ab9:	add    eax,0x5b4c74e5
  417abe:	push   esp
  417abf:	mov    eax,0xa10e67ac
  417ac4:	cmp    DWORD PTR [edx],esp
  417ac6:	sbb    DWORD PTR [ecx],0xdefd72c3
  417acc:	loop   0x417ab1
  417ace:	push   edi
  417acf:	push   0xd
  417ad1:	(bad)  
  417ad2:	dec    esi
  417ad3:	adc    DWORD PTR [edx-0x2812765b],esi
  417ad9:	push   ss
  417ada:	adc    BYTE PTR [ebp+0x591b4f83],dl
  417ae0:	mov    dh,0x9a
  417ae2:	out    0x5,al
  417ae4:	mov    eax,0xa6edd2b8
  417ae9:	jno    0x417aa1
  417aeb:	lock mov WORD PTR [ecx-0x1d398c16],cs
  417af2:	cmp    esp,DWORD PTR [edi]
  417af4:	(bad)  
  417af6:	sar    dl,cl
  417af8:	pop    ebx
  417af9:	hlt    
  417afa:	xor    eax,0x6b5de858
  417aff:	ss (bad) 
  417b01:	jo     0x417ab6
  417b03:	mov    ecx,0x8367fc9c
  417b08:	mov    BYTE PTR [esi-0x5f4d4236],cl
  417b0e:	scas   eax,DWORD PTR es:[edi]
  417b0f:	bound  edx,QWORD PTR [eax-0x12]
  417b12:	xchg   edx,eax
  417b13:	test   DWORD PTR [ecx-0x23],eax
  417b16:	pop    ecx
  417b17:	push   0xffffffff
  417b19:	lods   eax,DWORD PTR ds:[esi]
  417b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1b:	mov    WORD PTR [ecx+0x2c5d02fa],?
  417b21:	test   BYTE PTR [edi-0x23],ah
  417b24:	or     DWORD PTR [ebx],0x52fd815e
  417b2a:	cmp    al,BYTE PTR [esi]
  417b2c:	inc    ebx
  417b2d:	sbb    BYTE PTR [eax],ch
  417b2f:	aaa    
  417b30:	fild   WORD PTR [ebx]
  417b32:	push   ecx
  417b33:	push   ss
  417b34:	es pop di
  417b37:	(bad)  
  417b38:	mov    edi,fs
  417b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b3b:	push   ss
  417b3c:	inc    ecx
  417b3d:	pop    edx
  417b3e:	dec    esi
  417b3f:	jg     0x417af4
  417b41:	ins    DWORD PTR es:[edi],dx
  417b42:	stos   DWORD PTR es:[edi],eax
  417b43:	pop    DWORD PTR [edx-0x3a77188b]
  417b49:	xor    bh,BYTE PTR [ebp+0x7b]
  417b4c:	sbb    ecx,0xe78f8032
  417b52:	ds (bad) 
  417b54:	lods   al,BYTE PTR ds:[esi]
  417b55:	(bad)  
  417b56:	aas    
  417b57:	outs   dx,DWORD PTR ds:[esi]
  417b58:	test   BYTE PTR [ebx+0x32],dh
  417b5b:	test   ecx,eax
  417b5d:	dec    esp
  417b5e:	shl    DWORD PTR ds:0x466c5cc3,0xb4
  417b65:	or     al,BYTE PTR [esi-0x6c]
  417b68:	call   0xadf2:0xd551b3dd
  417b6f:	and    eax,0x64a33d4b
  417b74:	push   ebp
  417b75:	jmp    0x417be3
  417b77:	xchg   DWORD PTR [edx+0x19],edi
  417b7a:	jmp    0x19b10f19
  417b7f:	mov    eax,0x5f7050c6
  417b84:	cwde   
  417b85:	jp     0x417bd5
  417b87:	cmp    cl,BYTE PTR ds:0x88940ca0
  417b8d:	rol    BYTE PTR ds:0x7f545138,cl
  417b93:	mov    bl,0x10
  417b95:	jns    0x417be1
  417b97:	(bad)  
  417b98:	out    dx,al
  417b99:	imul   ebx,DWORD PTR [edi+eiz*2-0x32c30729],0xfffffffc
  417ba1:	outs   dx,BYTE PTR ds:[esi]
  417ba2:	enter  0xe26a,0xd5
  417ba6:	dec    ebp
  417ba7:	push   eax
  417ba8:	lock aam 0x26
  417bab:	inc    ebp
  417bac:	cmp    al,0xae
  417bae:	mov    ebx,0x69936a8d
  417bb3:	dec    al
  417bb5:	repz add dl,BYTE PTR [edi+0x115e23c1]
  417bbc:	in     al,0x5f
  417bbe:	arpl   WORD PTR [ebp-0x5781c5f7],sp
  417bc4:	mov    ebx,?
  417bc6:	pop    esi
  417bc7:	or     esp,eax
  417bc9:	jb     0x417c0b
  417bcb:	popa   
  417bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bcd:	lahf   
  417bce:	shr    BYTE PTR [esi],1
  417bd0:	les    esp,FWORD PTR [edx+esi*1+0x3d]
  417bd4:	retf   
  417bd5:	mov    al,0xe0
  417bd7:	add    bh,BYTE PTR [esi-0x1c173781]
  417bdd:	iret   
  417bde:	mov    dl,0x39
  417be0:	imul   esp,DWORD PTR [ebp-0x729f48c8],0x35bdbd6b
  417bea:	push   ebx
  417beb:	imul   edi,edi,0xffffff89
  417bee:	lods   al,BYTE PTR ds:[esi]
  417bef:	call   0xc11ce17
  417bf4:	mov    dl,0x9f
  417bf6:	jno    0x417c14
  417bf8:	(bad)  
  417bf9:	jne    0x417b9e
  417bfb:	in     eax,dx
  417bfc:	(bad)  
  417bfe:	bt     DWORD PTR [edx],ebx
  417c01:	sbb    ebx,ebx
  417c03:	loop   0x417c58
  417c05:	fisttp DWORD PTR [ecx+0x43]
  417c08:	and    edx,DWORD PTR [edx+edx*8+0x5b82194d]
  417c0f:	pop    esi
  417c10:	stos   BYTE PTR es:[edi],al
  417c11:	aad    0x28
  417c13:	xchg   esi,eax
  417c14:	loopne 0x417c65
  417c16:	sub    ah,BYTE PTR [esi+eiz*2+0x1aa8cc1b]
  417c1d:	stos   DWORD PTR es:[edi],eax
  417c1e:	adc    DWORD PTR [edi-0x5ac64f29],0x37
  417c25:	pop    ebx
  417c26:	jmp    FWORD PTR [ebx+eiz*4]
  417c29:	stc    
  417c2a:	inc    ebp
  417c2b:	mov    eax,db1
  417c2e:	jne    0x417be7
  417c30:	call   0x201d4132
  417c35:	jle    0x417bfd
  417c37:	cwde   
  417c38:	pusha  
  417c39:	or     al,0x45
  417c3b:	ret    
  417c3c:	aam    0xaf
  417c3e:	or     eax,0x57f93e55
  417c43:	mov    dh,0xd0
  417c45:	sar    BYTE PTR [esi],0x54
  417c48:	mov    ds:0xbdd9864f,al
  417c4d:	sub    ebp,DWORD PTR [edi]
  417c4f:	sub    edi,DWORD PTR ds:0xe9d0bcf6
  417c55:	dec    esp
  417c56:	adc    al,0xf5
  417c58:	(bad)  
  417c59:	das    
  417c5a:	add    DWORD PTR [esi-0x13],ebp
  417c5d:	xchg   edi,eax
  417c5e:	jno    0x417cb0
  417c60:	cmp    edx,edx
  417c62:	test   esp,esi
  417c64:	jae    0x417c04
  417c66:	popf   
  417c67:	push   eax
  417c68:	cwde   
  417c69:	add    BYTE PTR [edx],cl
  417c6b:	outs   dx,BYTE PTR ds:[esi]
  417c6c:	sub    DWORD PTR [eax+0xf],ebx
  417c6f:	into   
  417c70:	dec    edx
  417c71:	xchg   edx,eax
  417c72:	xchg   ebx,eax
  417c73:	xchg   edx,eax
  417c74:	push   es
  417c75:	add    BYTE PTR [ecx],bh
  417c77:	icebp  
  417c78:	(bad)  
  417c79:	jne    0x417cf8
  417c7b:	inc    ebx
  417c7c:	sahf   
  417c7d:	in     al,dx
  417c7e:	enter  0x9bce,0x69
  417c82:	stc    
  417c83:	out    0xa8,eax
  417c85:	lods   al,BYTE PTR ds:[esi]
  417c86:	imul   edx,DWORD PTR [ecx],0xc7047b76
  417c8c:	xlat   BYTE PTR ds:[ebx]
  417c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c8e:	mov    ch,0x77
  417c90:	pop    ebp
  417c91:	jle    0x417cfd
  417c93:	mov    esi,0x3de330ad
  417c98:	lods   al,BYTE PTR ds:[esi]
  417c99:	mov    BYTE PTR [ecx-0x7a],0xff
  417c9d:	aad    0x7c
  417c9f:	std    
  417ca0:	xchg   ecx,eax
  417ca1:	xchg   ebx,eax
  417ca2:	addr16 in al,dx
  417ca4:	sbb    ch,BYTE PTR [ecx+0x3babf5f8]
  417caa:	and    DWORD PTR [ecx+0x41583004],esi
  417cb0:	and    BYTE PTR [edi-0xffa206f],al
  417cb6:	fldlg2 
  417cb8:	or     DWORD PTR ds:[ecx+ebp*1+0x53],ebx
  417cbd:	mov    BYTE PTR [ecx*8+0x6ab7010c],dl
  417cc4:	pop    esp
  417cc5:	scas   al,BYTE PTR es:[edi]
  417cc6:	mov    eax,ds:0xc214e116
  417ccb:	xchg   edi,eax
  417ccc:	das    
  417ccd:	dec    esp
  417cce:	dec    esp
  417ccf:	ficomp WORD PTR [esi+0x4f]
  417cd2:	add    BYTE PTR [ebx+0x7419370f],al
  417cd8:	div    BYTE PTR [edx+eiz*4]
  417cdb:	adc    esi,DWORD PTR [ecx+0x62]
  417cde:	ja     0x417caf
  417ce0:	adc    dl,BYTE PTR [esi-0x55]
  417ce3:	mov    edi,ecx
  417ce5:	in     al,dx
  417ce6:	xlat   BYTE PTR ds:[ebx]
  417ce7:	mov    ds:0xa0f8b453,eax
  417cec:	or     al,0xc1
  417cee:	sbb    bl,0xeb
  417cf1:	mov    eax,ds:0x5e485816
  417cf6:	or     eax,0x8e680806
  417cfb:	dec    esp
  417cfc:	(bad)  
  417cfd:	pusha  
  417cfe:	lock aas 
  417d00:	inc    esp
  417d01:	loope  0x417c8e
  417d03:	xchg   edi,eax
  417d04:	xlat   BYTE PTR ds:[ebx]
  417d05:	push   ds
  417d06:	lea    ecx,[eax]
  417d08:	fisttp DWORD PTR [eax+0x5992b693]
  417d0e:	adc    BYTE PTR [ecx+0x163298d8],cl
  417d14:	jmp    0x2f2a:0xab40ccb6
  417d1b:	inc    DWORD PTR es:[eax]
  417d1e:	xchg   DWORD PTR [ecx+0x6695283f],ebp
  417d24:	neg    DWORD PTR [edx-0x21bf021a]
  417d2a:	cli    
  417d2b:	push   esi
  417d2c:	in     al,0x3
  417d2e:	jns    0x417cd4
  417d30:	(bad)  
  417d31:	pop    esi
  417d32:	mov    esi,0xf8044eea
  417d37:	mov    ds:0x9aec6e64,eax
  417d3c:	in     eax,dx
  417d3d:	aad    0x67
  417d3f:	mov    dh,BYTE PTR [ebx+0x5fe85415]
  417d45:	push   ebx
  417d46:	inc    esi
  417d47:	inc    ebx
  417d48:	test   DWORD PTR [eax],ecx
  417d4a:	mov    ebp,0xae997235
  417d4f:	push   ebx
  417d50:	in     eax,0x80
  417d52:	mov    cl,0xc
  417d54:	jmp    0x76a6:0xe29ecceb
  417d5b:	cld    
  417d5c:	sbb    al,BYTE PTR [edi+eax*1+0x15]
  417d60:	mul    bh
  417d62:	mov    ah,0xcc
  417d64:	mov    ebx,DWORD PTR [ebp+0x38c5fbaf]
  417d6a:	std    
  417d6b:	inc    ecx
  417d6c:	sub    eax,DWORD PTR [ecx+0x54]
  417d6f:	in     eax,dx
  417d70:	add    BYTE PTR [edi-0x7b7ba64e],0x46
  417d77:	sub    al,0x39
  417d7a:	ss stc 
  417d7c:	sbb    BYTE PTR [ebx+0x7a],ch
  417d7f:	repnz adc BYTE PTR ds:[edi+0x74286f73],bl
  417d87:	cdq    
  417d88:	cli    
  417d89:	fs (bad) 
  417d8c:	or     DWORD PTR [eax],0x91dc34f6
  417d92:	push   edi
  417d93:	dec    ebp
  417d94:	push   esi
  417d95:	rol    DWORD PTR [ecx-0x4d089b49],cl
  417d9b:	sbb    BYTE PTR [esi-0x61],dh
  417d9e:	mov    ds:0xb9495ec2,eax
  417da3:	xchg   BYTE PTR [esi+ebp*8-0x61],cl
  417da7:	lods   al,BYTE PTR ds:[esi]
  417da8:	rcl    BYTE PTR [esi-0x79aa49ef],0x5a
  417daf:	neg    BYTE PTR [ebx]
  417db1:	aaa    
  417db2:	pop    esp
  417db3:	mov    esi,DWORD PTR [edx]
  417db5:	fsub   QWORD PTR [edx]
  417db7:	pop    ebx
  417db8:	fwait
  417db9:	jne    0x417d42
  417dbb:	icebp  
  417dbc:	push   ebx
  417dbd:	test   DWORD PTR [eax+ebp*4-0x23],eax
  417dc1:	mov    ecx,0xc4617c4c
  417dc6:	pop    eax
  417dc7:	sti    
  417dc8:	out    0x40,al
  417dca:	stc    
  417dcb:	mov    ebp,0x5bed1e57
  417dd0:	leave  
  417dd1:	pusha  
  417dd2:	in     al,dx
  417dd3:	fisubr DWORD PTR [ebx+0x45]
  417dd6:	inc    esi
  417dd7:	dec    ebp
  417dd8:	sub    DWORD PTR [esi+0x1c],0x8f4630f7
  417ddf:	ror    BYTE PTR [ebp+0x4dc653a6],cl
  417de5:	call   0x4599:0x4873ee86
  417dec:	fwait
  417ded:	test   ebx,ecx
  417def:	in     al,dx
  417df0:	int    0xda
  417df2:	add    al,0x9d
  417df4:	cwde   
  417df5:	mov    ds:0x127a964c,al
  417dfa:	jo     0x417e4f
  417dfc:	loope  0x417e3a
  417dfe:	sbb    DWORD PTR [ebx-0x7e],eax
  417e01:	call   0x8604:0x2f71276b
  417e08:	cld    
  417e09:	shr    DWORD PTR [ebx-0x44],cl
  417e0c:	mov    cl,BYTE PTR [edx+esi*8-0x2d]
  417e10:	dec    edi
  417e11:	mov    eax,ds:0x244fac06
  417e16:	xor    ebx,ebp
  417e18:	push   edi
  417e19:	cmp    DWORD PTR [ebp+0x447b9b3d],esp
  417e1f:	scas   eax,DWORD PTR es:[edi]
  417e20:	(bad)  
  417e21:	cmp    DWORD PTR ds:0xe4e68f41,ecx
  417e27:	cwde   
  417e28:	xchg   edx,eax
  417e29:	lahf   
  417e2a:	jle    0x417e31
  417e2c:	lea    ebp,[edi+0x5972a767]
  417e32:	jo     0x417e41
  417e34:	mov    ebx,0xa69c5331
  417e39:	dec    esi
  417e3a:	sbb    ah,BYTE PTR [eax-0x6cde24dd]
  417e40:	out    dx,al
  417e41:	dec    ecx
  417e42:	addr16 rsqrtps xmm5,xmm0
  417e46:	sub    BYTE PTR [eax],dl
  417e48:	inc    esi
  417e49:	frstor [eax]
  417e4b:	inc    esi
  417e4c:	out    0xbc,eax
  417e4e:	(bad)  
  417e50:	pop    ebx
  417e51:	mov    bh,dh
  417e53:	xchg   DWORD PTR [ebp+edx*1+0x28],edx
  417e57:	jbe    0x417e50
  417e59:	pop    edx
  417e5a:	pop    ds
  417e5b:	pop    ebp
  417e5c:	rcr    edx,cl
  417e5e:	jne    0x417e6e
  417e60:	scas   eax,DWORD PTR es:[edi]
  417e61:	add    eax,0xb2bf67e6
  417e66:	push   edx
  417e67:	ins    BYTE PTR es:[edi],dx
  417e68:	popf   
  417e69:	pop    es
  417e6a:	sub    al,0xc3
  417e6c:	dec    esi
  417e6d:	dec    edi
  417e6e:	pop    ecx
  417e6f:	mov    ecx,0x9824f4e0
  417e74:	nop
  417e75:	pop    eax
  417e76:	loopne 0x417edc
  417e78:	mov    al,0x56
  417e7a:	sub    al,cl
  417e7c:	test   cl,ch
  417e7e:	fsubrp st(1),st
  417e80:	cmp    eax,0x9a114289
  417e85:	nop
  417e86:	stos   DWORD PTR es:[edi],eax
  417e87:	leave  
  417e88:	and    BYTE PTR ds:0x8df65c37,ah
  417e8e:	lods   al,BYTE PTR ds:[esi]
  417e8f:	sbb    dl,dl
  417e91:	mov    fs,WORD PTR [ebx+0x1e]
  417e94:	adc    eax,0x9b1c6327
  417e99:	sub    ch,BYTE PTR [edx]
  417e9b:	(bad)  [ecx-0x26]
  417e9e:	sbb    BYTE PTR [edi],0x4f
  417ea1:	inc    ecx
  417ea2:	mov    esi,0xe50c8b7f
  417ea7:	fadd   st,st(7)
  417ea9:	loop   0x417f22
  417eab:	shr    BYTE PTR [esi-0xe29ce8a],1
  417eb1:	int    0xaa
  417eb3:	out    0xe0,al
  417eb5:	call   0xc54f:0x4353bb4d
  417ebc:	popf   
  417ebd:	mov    eax,ds:0x81b8fc84
  417ec2:	mov    edx,eax
  417ec4:	cmp    ah,BYTE PTR [esi+0x1f716cf0]
  417eca:	int3   
  417ecb:	lods   al,BYTE PTR ds:[esi]
  417ecc:	cmp    eax,ecx
  417ece:	cmp    esi,ecx
  417ed0:	pop    eax
  417ed1:	sbb    dh,ch
  417ed3:	shr    DWORD PTR [eax-0x53f35d91],1
  417ed9:	or     al,BYTE PTR [esi-0x1c34506f]
  417edf:	pop    es
  417ee0:	stos   BYTE PTR es:[edi],al
  417ee1:	nop    DWORD PTR [esi-0x5b2e44b0]
  417ee8:	ret    
  417ee9:	or     eax,0xcdbdfb2
  417eee:	lds    esi,FWORD PTR [esi-0x52]
  417ef1:	stos   BYTE PTR es:[edi],al
  417ef2:	mov    ebp,0x6e23781f
  417ef7:	je     0x417e8b
  417ef9:	add    BYTE PTR [edx+edx*2],al
  417efc:	(bad)  
  417efd:	iret   
  417efe:	stc    
  417eff:	pop    es
  417f00:	icebp  
  417f01:	and    ebp,0x9dd4fcbd
  417f07:	xchg   esi,eax
  417f08:	mov    esp,0xd1d21642
  417f0d:	mov    es,WORD PTR [edi+edx*2+0x72]
  417f11:	adc    eax,0xcbc8e8ce
  417f16:	mov    al,ch
  417f18:	repnz push 0x763b4248
  417f1e:	mov    ch,0xa0
  417f20:	cld    
  417f21:	mov    bh,0x39
  417f23:	lds    esp,FWORD PTR [edx+0x6fcdd9b5]
  417f29:	cmp    eax,0x46e7d4b1
  417f2e:	dec    ecx
  417f2f:	jne    0x417f6c
  417f31:	sar    DWORD PTR [ecx+0xe],cl
  417f34:	pop    ebp
  417f35:	xchg   DWORD PTR [ecx],esi
  417f37:	inc    edx
  417f38:	outs   dx,DWORD PTR ds:[esi]
  417f39:	sbb    eax,0x84ba1259
  417f3e:	cmp    DWORD PTR [ecx],edi
  417f40:	rol    DWORD PTR [ebx+0x62],1
  417f43:	int3   
  417f44:	mov    eax,ds:0x460a395e
  417f49:	clc    
  417f4a:	jb     0x417ed3
  417f4c:	dec    edi
  417f4d:	loop   0x417f53
  417f4f:	mov    edx,0x922ed9ec
  417f54:	and    DWORD PTR es:[ecx],eax
  417f57:	repnz mov al,0x2f
  417f5a:	out    0x42,eax
  417f5c:	or     cl,BYTE PTR [esi+ebx*4-0x75789b67]
  417f63:	mov    ebx,0xa198ded5
  417f68:	repz dec esi
  417f6a:	mov    ebp,0x1c39a695
  417f6f:	mov    ebp,0x62c0d826
  417f74:	out    dx,al
  417f75:	fild   DWORD PTR [esi+0x5f9cfb32]
  417f7b:	or     ecx,DWORD PTR [eax-0x15a804f4]
  417f81:	push   esp
  417f82:	add    edi,DWORD PTR [edi+0x37]
  417f85:	mov    eax,DWORD PTR [ecx]
  417f87:	sub    BYTE PTR [ebp+0x45ab74e5],ah
  417f8d:	sbb    al,0xad
  417f8f:	mov    al,ds:0xeb499bf2
  417f94:	into   
  417f95:	xchg   esp,eax
  417f96:	push   0xa
  417f98:	mov    eax,ds:0x94846f7e
  417f9d:	shl    DWORD PTR ds:0x122863d8,0x67
  417fa4:	sub    BYTE PTR [edx-0x24],ah
  417fa7:	jmp    0xb08d068b
  417fac:	loopne 0x417fba
  417fae:	mov    cl,0xb1
  417fb0:	gs mov dl,0x82
  417fb3:	jp     0x41802e
  417fb5:	pop    eax
  417fb6:	cmp    bh,BYTE PTR [ebp-0x160e556]
  417fbc:	mov    ebp,esp
  417fbe:	mov    edi,DWORD PTR [edi+0x30]
  417fc1:	cld    
  417fc2:	ret    0x6437
  417fc5:	lds    esi,FWORD PTR ds:0xe4fa9ab6
  417fcb:	sub    esp,ebp
  417fcd:	cmp    eax,0x7fff1514
  417fd2:	or     ebx,DWORD PTR [ebx+0x146a386a]
  417fd8:	dec    eax
  417fd9:	inc    ebp
  417fda:	stos   DWORD PTR es:[edi],eax
  417fdb:	inc    edi
  417fdc:	hlt    
  417fdd:	dec    edx
  417fde:	ss inc esi
  417fe0:	dec    ecx
  417fe1:	mov    ecx,0xdf7f4fea
  417fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fe7:	ja     0x418047
  417fe9:	into   
  417fea:	jmp    0x417f81
  417fec:	sub    bl,cl
  417fee:	lea    esp,[edi*2+0x1ad09ba3]
  417ff5:	ins    BYTE PTR es:[edi],dx
  417ff6:	stos   BYTE PTR es:[edi],al
  417ff7:	sub    BYTE PTR [edi],bh
  417ff9:	jnp    0x418020
  417ffb:	and    DWORD PTR [edi],ebx
  417ffd:	xchg   edx,eax
  417ffe:	outs   dx,DWORD PTR ds:[esi]
  417fff:	jmp    0x418008
  418001:	stos   BYTE PTR es:[edi],al
  418002:	stos   DWORD PTR es:[edi],eax
  418003:	and    eax,0x2d8d8da7
  418008:	lea    ebp,[edx-0x473b502d]
  41800e:	outs   dx,DWORD PTR ds:[esi]
  41800f:	in     eax,0xa8
  418011:	in     al,0x2a
  418013:	jbe    0x418007
  418015:	sbb    BYTE PTR [ebx],dh
  418017:	cmp    eax,0x87b9a30b
  41801c:	into   
  41801d:	pop    edi
  41801e:	std    
  41801f:	sahf   
  418020:	hlt    
  418021:	sub    esp,edx
  418023:	push   es
  418024:	mov    ah,BYTE PTR [esi]
  418026:	xor    cl,BYTE PTR [eax]
  418028:	mov    dl,0x0
  41802a:	gs shl dl,cl
  41802d:	jp     0x417fd4
  41802f:	loopne 0x417fe4
  418031:	dec    ebp
  418032:	(bad)  
  418033:	jp     0x418028
  418035:	or     bh,BYTE PTR [edx]
  418037:	scas   eax,DWORD PTR es:[edi]
  418038:	push   cs
  418039:	(bad)  [edx+0x53]
  41803c:	dec    esp
  41803d:	imul   edx,DWORD PTR [eax],0xffffffec
  418040:	stos   BYTE PTR es:[edi],al
  418041:	cmp    BYTE PTR [edi-0x23ae4550],bh
  418047:	xchg   BYTE PTR [ebp+0x44],bl
  41804a:	pop    ecx
  41804b:	xor    al,0x6e
  41804d:	int    0x92
  41804f:	std    
  418050:	jb     0x417fd6
  418052:	pop    ds
  418053:	(bad)  
  418054:	dec    esi
  418055:	mov    edi,0xd42af09b
  41805a:	cmp    ebp,DWORD PTR [ebx]
  41805c:	xchg   DWORD PTR [edi],esp
  41805e:	push   ebp
  41805f:	repz ja 0x41802b
  418062:	ficom  WORD PTR [eax+0x42dcfe01]
  418068:	xchg   BYTE PTR [eax+esi*8+0x3b0332b1],ch
  41806f:	lock cli 
  418071:	addr16 das 
  418073:	push   cs
  418074:	inc    edx
  418075:	jnp    0x4180ec
  418077:	mov    ebx,0x679667f7
  41807c:	stos   BYTE PTR es:[edi],al
  41807d:	mov    ebp,0xdd51f7fa
  418082:	scas   eax,DWORD PTR es:[edi]
  418083:	in     al,0x56
  418085:	popa   
  418086:	je     0x4180c7
  418088:	pop    es
  418089:	inc    ecx
  41808a:	jnp    0x4180a1
  41808c:	xor    al,0x26
  41808e:	into   
  41808f:	fs push cs
  418091:	add    bh,dl
  418093:	add    eax,esi
  418095:	xchg   ebp,eax
  418096:	mov    BYTE PTR [ebx+edx*8+0x26],bl
  41809a:	into   
  41809b:	imul   esp,DWORD PTR [ebp-0x75b9ea6d],0x6f
  4180a2:	pop    esi
  4180a3:	xor    DWORD PTR [edi],edx
  4180a5:	cmp    ecx,DWORD PTR [eax-0x3f]
  4180a8:	sub    BYTE PTR [edi],ah
  4180aa:	sub    dl,0x2c
  4180ad:	inc    esp
  4180ae:	cmp    eax,0xc7bac3bc
  4180b3:	push   ebp
  4180b4:	out    dx,al
  4180b5:	int    0x5
  4180b7:	push   ds
  4180b8:	fucomp st(4)
  4180ba:	mov    ch,0x64
  4180bc:	dec    eax
  4180bd:	fimul  WORD PTR [bx-0x23]
  4180c1:	cmp    BYTE PTR [ebp+0x43],0x47
  4180c5:	out    0x7d,al
  4180c7:	add    al,0xc7
  4180c9:	inc    eax
  4180ca:	dec    esi
  4180cb:	xchg   esp,eax
  4180cc:	mov    bl,0x9a
  4180ce:	pop    ss
  4180cf:	add    BYTE PTR [ebp+0x5e],bh
  4180d2:	out    dx,eax
  4180d3:	or     edx,esp
  4180d5:	clc    
  4180d6:	aam    0x22
  4180d8:	sbb    DWORD PTR ds:0x59dd7661,ebx
  4180de:	loop   0x418101
  4180e0:	inc    ebp
  4180e1:	(bad)  
  4180e2:	loop   0x418103
  4180e4:	cmp    bl,ch
  4180e6:	mov    ds:0x14a0e63e,eax
  4180eb:	fst    st(4)
  4180ee:	mov    fs,WORD PTR [edi-0x17cc5647]
  4180f4:	sub    DWORD PTR [esp+ecx*2],0xffffffd4
  4180f8:	pop    eax
  4180f9:	imul   edi,ebx,0xf71165f0
  4180ff:	fild   DWORD PTR es:[esi+0x3494b878]
  418106:	pop    es
  418107:	retf   
  418108:	inc    eax
  418109:	fimul  DWORD PTR [ebp+0x7d323021]
  41810f:	xor    BYTE PTR [ebx+0x50d372b4],dh
  418115:	inc    esp
  418116:	xor    cl,BYTE PTR [ebp+0x29]
  418119:	or     bh,dl
  41811b:	push   ecx
  41811c:	fwait
  41811d:	cs js  0x4180fd
  418120:	ret    
  418121:	xchg   ebx,eax
  418122:	xlat   BYTE PTR ds:[ebx]
  418123:	das    
  418124:	push   edx
  418125:	idiv   eax
  418127:	mov    edi,0x202f4ff1
  41812c:	test   eax,0xfd3f77f
  418131:	jl     0x418156
  418133:	(bad)
  418136:	mov    eax,ds:0x1f458c93
  41813b:	addr16 jle 0x418105
  41813e:	ss push esp
  418140:	jnp    0x418142
  418142:	inc    esi
  418143:	loope  0x4181a2
  418145:	daa    
  418146:	jae    0x418164
  418148:	inc    ebx
  418149:	in     al,0x9d
  41814b:	cmp    bh,BYTE PTR [ecx-0x76f96c62]
  418151:	add    eax,0xa25df90b
  418156:	(bad)
  418159:	dec    edx
  41815a:	adc    BYTE PTR ds:0x1594bcd0,dh
  418160:	mov    ch,bh
  418162:	aaa    
  418163:	jns    0x41810b
  418165:	popa   
  418166:	idiv   DWORD PTR [ebp-0x61]
  418169:	xor    eax,0xce12d812
  41816e:	add    esi,DWORD PTR [edx]
  418170:	and    ah,BYTE PTR [eax]
  418172:	lods   al,BYTE PTR ds:[esi]
  418173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418174:	adc    al,0x35
  418176:	sbb    ebx,edx
  418178:	dec    esi
  418179:	push   edi
  41817a:	clc    
  41817b:	mov    gs,WORD PTR [ebp+0x6ca5d0e0]
  418181:	add    dh,BYTE PTR [eax]
  418183:	and    al,0x43
  418185:	mov    al,0x1c
  418187:	call   0x654c:0x735182ac
  41818e:	out    0x9e,eax
  418190:	mov    cl,BYTE PTR [ecx+ebx*2]
  418193:	mov    ds:0xae976af8,eax
  418198:	inc    edx
  418199:	xchg   edi,eax
  41819a:	adc    eax,0x13de5869
  41819f:	and    ah,BYTE PTR [ebp+0x30]
  4181a2:	sbb    BYTE PTR [edi+0x2d],ah
  4181a5:	jmp    0x418199
  4181a7:	inc    esp
  4181a8:	pop    ds
  4181a9:	adc    ebx,ecx
  4181ab:	sub    al,0xa2
  4181ad:	xchg   esi,eax
  4181ae:	and    bl,BYTE PTR [ebx-0x74e5ee1e]
  4181b4:	and    BYTE PTR [ebx-0x6a],bh
  4181b7:	sbb    al,0x4e
  4181b9:	lea    ebp,[edi+ecx*2]
  4181bc:	dec    edi
  4181bd:	pop    ebx
  4181be:	inc    eax
  4181bf:	or     BYTE PTR [edi],bh
  4181c1:	sub    eax,0x78840dfe
  4181c6:	(bad)  
  4181c7:	pop    ecx
  4181c8:	retf   
  4181c9:	(bad)  
  4181cb:	into   
  4181cc:	mov    dh,0xea
  4181ce:	test   eax,0xa93223e6
  4181d3:	(bad)  
  4181d4:	daa    
  4181d5:	jl     0x41815e
  4181d7:	ja     0x4181fb
  4181d9:	icebp  
  4181da:	and    DWORD PTR [ecx+0x4045edf3],esp
  4181e0:	loope  0x4181ba
  4181e2:	test   BYTE PTR [edx+0x66],bh
  4181e5:	pop    edx
  4181e6:	adc    al,0x3
  4181e8:	cs xchg edx,eax
  4181ea:	shr    edx,cl
  4181ec:	pop    ebp
  4181ed:	pusha  
  4181ee:	mov    edi,0xa02ba633
  4181f3:	add    DWORD PTR ds:0x31b3527,eax
  4181f9:	dec    esp
  4181fa:	cmp    DWORD PTR [esi-0x26],ecx
  4181fd:	push   ds
  4181fe:	sbb    eax,0x242466d3
  418203:	std    
  418204:	repnz popf 
  418206:	loopne 0x41821a
  418208:	push   esi
  418209:	xchg   edi,eax
  41820a:	dec    esi
  41820b:	xchg   edi,eax
  41820c:	lods   eax,DWORD PTR ds:[esi]
  41820d:	inc    edx
  41820e:	add    ch,dl
  418210:	fisubr DWORD PTR [eax]
  418212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418213:	sub    ah,BYTE PTR [esi+0x68]
  418216:	fadd   st(0),st
  418218:	pop    ds
  418219:	int    0xbd
  41821b:	sbb    eax,0x1718ca43
  418220:	fmul   QWORD PTR [ebx]
  418222:	push   ds
  418223:	sbb    eax,0x9c3da7cf
  418228:	push   esi
  418229:	pop    esp
  41822a:	stos   BYTE PTR es:[edi],al
  41822b:	mov    dl,0x9
  41822d:	cld    
  41822e:	jno    0x418223
  418230:	mov    ah,BYTE PTR [edi+0x7e48a731]
  418236:	inc    edi
  418237:	dec    esi
  418238:	pop    ss
  418239:	push   es
  41823a:	sar    DWORD PTR [ebx+0x5e],0x5e
  41823e:	pop    es
  41823f:	in     al,dx
  418240:	into   
  418241:	add    eax,0x1e0947e5
  418246:	mov    esi,0x68798033
  41824b:	sti    
  41824c:	or     eax,DWORD PTR [eax-0x538ea464]
  418252:	cmc    
  418253:	retf   
  418254:	inc    ebx
  418255:	mov    ebp,0xd5d1567c
  41825a:	ret    0xced6
  41825d:	loop   0x4182ba
  41825f:	push   ecx
  418260:	fwait
  418261:	mov    dh,0x1d
  418263:	pop    edi
  418264:	mov    esi,edx
  418266:	daa    
  418267:	retf   0x5d9b
  41826a:	adc    ebp,DWORD PTR [eax]
  41826c:	loop   0x4182cd
  41826e:	into   
  41826f:	inc    ebp
  418270:	repnz imul BYTE PTR [ebx]
  418273:	test   al,0xc1
  418275:	loopne 0x41828b
  418277:	pop    edi
  418278:	(bad)
  41827c:	push   cs
  41827d:	mov    ecx,0xb801126e
  418282:	jg     0x4182af
  418284:	pushf  
  418285:	sub    esp,DWORD PTR [eax+0x37]
  418288:	mov    gs,WORD PTR [ecx+0x4c]
  41828b:	jo     0x4182f8
  41828d:	mov    eax,ds:0xdf5ed76a
  418292:	xchg   ebp,eax
  418293:	stc    
  418294:	inc    ecx
  418295:	call   0x3d89a0e1
  41829a:	in     eax,dx
  41829b:	or     BYTE PTR [edi+esi*1],bh
  41829e:	mov    BYTE PTR [ebx],bh
  4182a0:	add    esi,eax
  4182a2:	lods   al,BYTE PTR ds:[esi]
  4182a3:	adc    bl,cl
  4182a5:	push   eax
  4182a6:	cmp    dl,BYTE PTR [edx+0x64]
  4182a9:	cmp    eax,0x1acfe464
  4182ae:	pop    ds
  4182af:	sbb    bl,BYTE PTR [ecx]
  4182b1:	inc    esi
  4182b2:	add    eax,0x662d34df
  4182b7:	icebp  
  4182b8:	adc    BYTE PTR [edi-0x356cdb0],bh
  4182be:	mov    al,ds:0xed41471f
  4182c3:	mov    edx,0x66a3b8dd
  4182c8:	test   ecx,edi
  4182ca:	rcr    DWORD PTR [eax],cl
  4182cc:	push   ds
  4182cd:	fnstsw WORD PTR [eax-0x6bf6722d]
  4182d3:	xor    DWORD PTR [esi-0x1a0f374f],0x3fa2298d
  4182dd:	test   eax,0x61092d00
  4182e2:	int    0xe3
  4182e4:	sti    
  4182e5:	add    edx,DWORD PTR [edi+0x176da5cb]
  4182eb:	adc    DWORD PTR [edx+0x4],edi
  4182ee:	hlt    
  4182ef:	dec    esi
  4182f0:	jo     0x418313
  4182f2:	cmp    eax,0x8b3ad75c
  4182f7:	fdiv   st(3),st
  4182f9:	int3   
  4182fa:	cwde   
  4182fb:	xor    esp,DWORD PTR [edi]
  4182fd:	inc    eax
  4182fe:	(bad)  
  418300:	ins    BYTE PTR es:[edi],dx
  418301:	out    dx,al
  418302:	ja     0x41830d
  418304:	push   edi
  418305:	cmp    DWORD PTR [esi+0x1c],eax
  418308:	sbb    eax,0x10912a09
  41830d:	rol    bl,0x7e
  418310:	stos   BYTE PTR es:[edi],al
  418311:	retf   0xb41f
  418314:	ret    
  418315:	stc    
  418316:	cmp    bl,al
  418318:	adc    BYTE PTR [eax+0x4eb47a71],ch
  41831e:	sub    esp,ebp
  418320:	pop    ss
  418321:	arpl   WORD PTR [eax+0x5f752489],dx
  418327:	ja     0x4182c2
  418329:	sti    
  41832a:	rcr    BYTE PTR [ecx+edi*4],0x1f
  41832e:	rcr    DWORD PTR [ecx],cl
  418330:	fsubr  QWORD PTR [esi]
  418332:	adc    eax,0x111cb390
  418337:	fs out 0x9,eax
  41833a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41833b:	cmp    al,0xf0
  41833d:	arpl   WORD PTR [ebp+0x3],dx
  418340:	into   
  418341:	or     eax,0x335ee944
  418346:	stc    
  418347:	nop
  418348:	jg     0x418354
  41834a:	jl     0x418376
  41834c:	ins    BYTE PTR es:[edi],dx
  41834d:	int    0x38
  41834f:	loope  0x418326
  418351:	adc    BYTE PTR ds:0xfb1b7074,al
  418357:	xchg   esp,eax
  418358:	call   0x29182d13
  41835d:	sbb    DWORD PTR [ebx-0x178f35e9],ebx
  418363:	mov    dh,0x73
  418365:	inc    ecx
  418366:	(bad)  
  418368:	cli    
  418369:	mov    dh,0xb2
  41836b:	mov    ecx,0x656cbe90
  418370:	mov    eax,ds:0x73201b13
  418375:	ss cmc 
  418377:	sbb    DWORD PTR [esi+0x3a2f9e1c],ebx
  41837d:	push   ebx
  41837e:	cmp    DWORD PTR [ecx+0x2004b761],esp
  418384:	adc    esi,DWORD PTR [edx+ebp*2+0x13]
  418388:	or     al,0x3f
  41838a:	sbb    dl,bh
  41838c:	popa   
  41838d:	mov    ds:0x7384652d,eax
  418392:	out    0x24,eax
  418394:	ja     0x418352
  418396:	push   eax
  418397:	push   edi
  418398:	xchg   ebp,eax
  418399:	(bad)  
  41839a:	mov    ecx,0x22b43bfa
  41839f:	cmp    al,0xde
  4183a1:	ret    
  4183a2:	mov    ds:0x3438a25f,al
  4183a7:	pop    edx
  4183a8:	push   eax
  4183a9:	repnz scas al,BYTE PTR es:[edi]
  4183ab:	sub    BYTE PTR [edi+0x6d],0xa8
  4183af:	loopne 0x418410
  4183b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b2:	xor    BYTE PTR [edx+0x39],cl
  4183b5:	(bad)  [esi+ebx*1-0x5f]
  4183b9:	cdq    
  4183ba:	and    BYTE PTR [edx+ebx*1+0x6e],dl
  4183be:	dec    ebx
  4183bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183c0:	fcom   QWORD PTR [ebx+0x2bc4e9eb]
  4183c6:	mov    bl,0x22
  4183c8:	fisubr WORD PTR [ecx+0xa2ff232]
  4183ce:	out    dx,al
  4183cf:	js     0x4183c2
  4183d1:	xchg   ebp,eax
  4183d2:	fwait
  4183d3:	pop    eax
  4183d4:	push   cs
  4183d5:	addr16 adc ecx,edx
  4183d8:	jmp    0x4183e2
  4183da:	xor    esp,DWORD PTR [eax]
  4183dc:	scas   al,BYTE PTR es:[edi]
  4183dd:	jbe    0x4183f2
  4183df:	popf   
  4183e0:	cmp    eax,0x65ba7fc8
  4183e5:	(bad)  
  4183e7:	hlt    
  4183e8:	push   edx
  4183e9:	(bad)  
  4183ea:	jbe    0x418402
  4183ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ed:	int3   
  4183ee:	imul   ebx,DWORD PTR [ebx-0x22],0xb4eff11b
  4183f5:	sbb    al,0x85
  4183f7:	push   es
  4183f8:	aam    0xb2
  4183fa:	sbb    al,0x63
  4183fc:	xchg   BYTE PTR [ecx],bl
  4183fe:	mov    eax,ds:0x69191609
  418403:	daa    
  418404:	int    0xf4
  418406:	adc    al,0x1a
  418408:	xor    eax,edi
  41840a:	mov    esp,eax
  41840c:	jl     0x418457
  41840e:	jg     0x4183c7
  418410:	push   0xffffffc2
  418412:	mov    ds:0x9aecc4ec,al
  418417:	and    BYTE PTR ds:0x5402d302,al
  41841d:	mov    esi,0x692b39ca
  418422:	pop    ebp
  418423:	pop    edx
  418424:	sub    al,0xd1
  418426:	cvtps2pd xmm2,QWORD PTR ds:0xae30c4cf
  41842d:	xchg   esp,eax
  41842e:	adc    bh,BYTE PTR [ebp-0x2dd0572e]
  418434:	lods   eax,DWORD PTR ds:[esi]
  418435:	jno    0x41845b
  418437:	and    al,0x1b
  418439:	ficomp WORD PTR [edx+0x4cbf6950]
  41843f:	and    dh,BYTE PTR [ecx-0x27]
  418442:	inc    esi
  418443:	add    DWORD PTR [ebx+0x42],ebp
  418446:	jp     0x4183d1
  418448:	repnz dec esp
  41844a:	xchg   BYTE PTR [edx-0x74959d84],cl
  418450:	sbb    eax,0x55f9d0b8
  418455:	pop    esp
  418456:	add    BYTE PTR [ebx+0x11282268],bl
  41845c:	xchg   DWORD PTR [eax+eax*8+0x18],ebp
  418460:	xchg   edi,eax
  418461:	xor    dl,dl
  418463:	xor    eax,0x2b570a26
  418468:	daa    
  418469:	adc    eax,0xcf106bf3
  41846e:	jecxz  0x418492
  418470:	sub    ebx,DWORD PTR [ecx-0x41]
  418473:	sub    DWORD PTR [esi+0x70571206],edi
  418479:	div    DWORD PTR [esi+0x441b2991]
  41847f:	popf   
  418480:	fidivr DWORD PTR [eax-0x4d016357]
  418486:	clc    
  418487:	push   ds
  418488:	pop    edi
  418489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41848a:	std    
  41848b:	sti    
  41848c:	imul   DWORD PTR [ebp-0x6b6e652]
  418492:	mov    edx,DWORD PTR [eax]
  418494:	jns    0x418451
  418496:	xor    al,0x76
  418498:	adc    eax,0x6cb1cb6f
  41849d:	or     ebp,esp
  41849f:	mov    es,WORD PTR [esi-0x372cc1e3]
  4184a5:	xchg   WORD PTR [edi+eax*2+0xa],dx
  4184aa:	imul   esp,esp,0x7407e83b
  4184b0:	scas   al,BYTE PTR es:[edi]
  4184b1:	mov    bl,0x13
  4184b3:	push   esp
  4184b4:	cmp    eax,0x6919be1a
  4184b9:	and    DWORD PTR [edx+0x3b311c9e],ebx
  4184bf:	sti    
  4184c0:	int    0xd6
  4184c2:	inc    edx
  4184c3:	and    al,0x17
  4184c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c6:	xor    edi,DWORD PTR [edi+0x797d90f2]
  4184cc:	mov    al,BYTE PTR [ecx+0x30]
  4184cf:	sub    eax,DWORD PTR [ebp-0x69f103ba]
  4184d5:	mov    eax,0x71de1e4
  4184da:	sbb    al,0x5
  4184dc:	and    al,0xd1
  4184de:	je     0x4184e6
  4184e0:	(bad)  
  4184e1:	call   0x7a03:0xc448c01f
  4184e8:	inc    ebp
  4184e9:	pushf  
  4184ea:	retf   
  4184eb:	sbb    al,0xee
  4184ed:	dec    BYTE PTR [edi-0x23216d09]
  4184f3:	cwde   
  4184f4:	shr    DWORD PTR [edi+0x0],1
  4184f7:	aaa    
  4184f8:	pop    ds
  4184f9:	aam    0xbf
  4184fb:	pop    ebp
  4184fc:	sub    BYTE PTR ds:[esi+0x727d4a37],0x54
  418504:	push   cs
  418505:	mov    cl,0x4f
  418507:	xor    al,0x2
  418509:	std    
  41850a:	jb     0x418578
  41850c:	jne    0x418525
  41850e:	repz push ecx
  418510:	sti    
  418511:	jne    0x4184d8
  418513:	xchg   BYTE PTR [esp+esi*8+0x73],ch
  418517:	lock dec ebx
  418519:	fcomp  QWORD PTR ds:0x9eb6c3cc
  41851f:	jp     0x4184e3
  418521:	outs   dx,DWORD PTR ds:[esi]
  418522:	pop    esp
  418523:	dec    edi
  418524:	mov    ecx,edx
  418526:	(bad)  
  418527:	jge    0x4184ee
  418529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41852a:	test   DWORD PTR [eax],eax
  41852c:	shl    DWORD PTR [ebx],1
  41852e:	mov    ch,0x55
  418530:	cmp    DWORD PTR gs:[ebx],0x51c737cd
  418537:	jmp    0x6b7daef8
  41853c:	test   al,0x3d
  41853e:	outs   dx,BYTE PTR ds:[esi]
  41853f:	das    
  418540:	pop    ebx
  418541:	inc    eax
  418542:	mov    BYTE PTR [edx],bh
  418544:	pop    esi
  418545:	mov    ebp,DWORD PTR [edi-0x328b724d]
  41854b:	mov    edi,0x1e80bd0c
  418550:	loopne 0x4184e1
  418552:	mov    esp,0xdf436f46
  418557:	pop    esp
  418558:	stos   BYTE PTR es:[edi],al
  418559:	mov    edx,DWORD PTR [esi]
  41855b:	sti    
  41855c:	mov    edx,0xa9ebc21e
  418561:	or     DWORD PTR [ecx+0xa28ac80],esp
  418567:	mov    edx,0x1f4e2414
  41856c:	push   esi
  41856d:	cmp    al,0x79
  41856f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418570:	(bad)  
  418571:	fnstenv [esi+0x5d5834af]
  418577:	xlat   BYTE PTR ds:[ebx]
  418578:	mov    eax,ds:0x13665b95
  41857d:	push   ds
  41857e:	enter  0x6807,0x5a
  418582:	inc    ecx
  418583:	repz jo 0x4185dd
  418586:	ret    0x88ce
  418589:	xchg   esp,ebp
  41858b:	in     eax,0x80
  41858d:	cmp    al,0x32
  41858f:	aam    0xb1
  418591:	adc    dl,BYTE PTR ds:0xa00eb33f
  418597:	loopne 0x4185e7
  418599:	inc    esi
  41859a:	dec    ecx
  41859b:	mov    ch,0xb4
  41859d:	popf   
  41859e:	xchg   ebp,eax
  41859f:	sub    esp,DWORD PTR [edi+0x14]
  4185a2:	stos   DWORD PTR es:[edi],eax
  4185a3:	cdq    
  4185a4:	or     eax,0x52dea6a5
  4185a9:	jno    0x4185ef
  4185ab:	test   BYTE PTR [esi-0x5f03cbee],dl
  4185b1:	out    dx,al
  4185b2:	xchg   ebx,eax
  4185b3:	mov    ebx,DWORD PTR [ebx+0x2f]
  4185b6:	push   edi
  4185b7:	popa   
  4185b8:	or     dh,BYTE PTR [ecx+0x6ca89872]
  4185be:	mov    WORD PTR [esi+0x64],fs
  4185c1:	jae    0x41854e
  4185c3:	mov    ah,0x61
  4185c5:	sbb    DWORD PTR [esi+0x4b616c4d],eax
  4185cb:	push   ds
  4185cc:	lods   eax,DWORD PTR ds:[esi]
  4185cd:	aad    0xb4
  4185cf:	in     eax,dx
  4185d0:	fldcw  WORD PTR [edx-0x23c4c1b5]
  4185d6:	add    BYTE PTR [edx+0x608792ff],bl
  4185dc:	jns    0x4185d8
  4185de:	add    ch,BYTE PTR [eax+0x4a]
  4185e1:	lods   eax,DWORD PTR ds:[esi]
  4185e2:	mov    edx,?
  4185e4:	jae    0x418663
  4185e6:	jmp    FWORD PTR [eax+0x42ab544c]
  4185ec:	stos   DWORD PTR es:[edi],eax
  4185ed:	cmp    bh,BYTE PTR [edi+0x3c]
  4185f0:	outs   dx,BYTE PTR ds:[esi]
  4185f1:	mov    ecx,0x580cd808
  4185f6:	push   0x1577abd7
  4185fb:	ret    0x3f9
  4185fe:	dec    eax
  4185ff:	stos   DWORD PTR es:[edi],eax
  418600:	pop    edi
  418601:	inc    ebp
  418602:	and    al,0x10
  418604:	push   esi
  418605:	cmp    esp,ebx
  418607:	sub    BYTE PTR [edi-0x40],dl
  41860a:	adc    BYTE PTR [edi+0x3a5fbb17],bl
  418610:	cmp    ah,BYTE PTR [ebp-0x76cc5269]
  418616:	(bad)  
  418617:	xor    al,0x9a
  418619:	sar    DWORD PTR [esi+0x73cde55b],cl
  41861f:	xchg   edx,eax
  418620:	lahf   
  418621:	retf   0x6966
  418624:	mov    edi,0x6f7d4a03
  418629:	sar    BYTE PTR [ecx+0x67],1
  41862c:	mov    ah,0x51
  41862e:	push   ds
  41862f:	add    al,0xdd
  418631:	mov    dl,0x79
  418633:	mul    DWORD PTR [edx+ebp*4+0xa]
  418637:	(bad)  [ebp+0x11d876b]
  41863d:	fdivr  st,st(6)
  41863f:	call   0xbba810f7
  418644:	jo     0x418654
  418646:	push   ebx
  418647:	jg     0x41862e
  418649:	fild   DWORD PTR [edx-0x33beb177]
  41864f:	sub    bh,BYTE PTR [ecx-0x1b3e7a27]
  418655:	sahf   
  418656:	or     cl,dl
  418658:	out    dx,eax
  418659:	xor    edx,DWORD PTR [edi+0x10a1c717]
  41865f:	lahf   
  418660:	and    eax,0x1cdaa396
  418665:	dec    eax
  418666:	sub    al,0x76
  418668:	test   bh,0xab
  41866b:	or     bh,BYTE PTR [esi]
  41866d:	sub    BYTE PTR [esi],dl
  41866f:	neg    dh
  418671:	xchg   ebx,eax
  418672:	push   ebx
  418673:	inc    edx
  418674:	lahf   
  418675:	repnz xor eax,0xb8e201e6
  41867b:	in     al,0x8
  41867d:	fld    DWORD PTR ds:0xdb02615
  418683:	repnz or dl,ah
  418686:	push   ecx
  418687:	fimul  WORD PTR [esi+0x3]
  41868a:	push   edx
  41868b:	jmp    0x5693642c
  418690:	mov    al,0xdb
  418692:	sti    
  418693:	ins    BYTE PTR es:[edi],dx
  418694:	int3   
  418695:	jne    0x418637
  418697:	icebp  
  418698:	push   ebp
  418699:	adc    ebp,DWORD PTR ds:0x5d9a634d
  41869f:	fwait
  4186a0:	and    eax,0x952d6ea9
  4186a5:	das    
  4186a6:	sbb    eax,0x4cfaf330
  4186ab:	int    0x8a
  4186ad:	rcl    BYTE PTR gs:[esi+ebx*4-0x42b0b7ab],0xe6
  4186b6:	(bad)  
  4186b7:	(bad)  
  4186b8:	mov    cl,0x87
  4186ba:	or     bh,ch
  4186bc:	add    ebx,DWORD PTR fs:[esp+eiz*8-0x5ea5afb0]
  4186c4:	stos   DWORD PTR es:[edi],eax
  4186c5:	jecxz  0x41866f
  4186c7:	jno    0x4186ef
  4186c9:	jo     0x418736
  4186cb:	jl     0x4186a9
  4186cd:	mov    ebp,0x7978820
  4186d2:	ss mov edi,0xdd559852
  4186d8:	inc    ebp
  4186d9:	in     al,dx
  4186da:	leave  
  4186db:	js     0x4186c8
  4186dd:	jne    0x418750
  4186df:	mov    ch,0xc4
  4186e1:	fcomi  st,st(4)
  4186e3:	inc    esi
  4186e4:	sahf   
  4186e5:	mov    dh,0x59
  4186e7:	xchg   esp,eax
  4186e8:	fwait
  4186e9:	or     DWORD PTR [edi-0x18a30366],esp
  4186ef:	mov    al,BYTE PTR [edi-0x4a]
  4186f2:	dec    ecx
  4186f3:	dec    esi
  4186f4:	push   esi
  4186f5:	pop    ebx
  4186f6:	out    dx,eax
  4186f7:	aad    0x4b
  4186f9:	mov    eax,0xc8c53acd
  4186fe:	xor    BYTE PTR [ebx+edi*1],al
  418701:	sbb    BYTE PTR [esp+0x5c],bh
  418705:	das    
  418706:	icebp  
  418707:	push   esi
  418708:	fs stos BYTE PTR es:[edi],al
  41870a:	sbb    esi,DWORD PTR [ebx]
  41870c:	mov    ecx,0x51307e12
  418711:	cmc    
  418712:	adc    edi,DWORD PTR [ebp-0x4cc9e94d]
  418718:	pusha  
  418719:	or     dl,ah
  41871b:	sub    BYTE PTR [esi-0x38b99fbc],bl
  418721:	push   ds
  418722:	dec    esi
  418723:	mov    esi,edi
  418725:	push   0xffffffee
  418727:	xchg   ecx,eax
  418728:	neg    BYTE PTR [ebx+edx*1+0x7e]
  41872c:	adc    eax,0xf46c7e75
  418731:	mov    BYTE PTR [ecx-0x483193bb],bh
  418737:	add    al,0xba
  41873a:	xchg   ebp,eax
  41873b:	pop    ecx
  41873c:	jg     0x418708
  41873e:	cli    
  41873f:	mov    ah,bl
  418741:	lock mov ah,0x9
  418744:	jp     0x4187bd
  418746:	retf   0x2bd0
  418749:	jl     0x4186f5
  41874b:	int    0x7a
  41874d:	fsub   QWORD PTR [edx-0x8855d57]
  418753:	pop    eax
  418754:	imul   eax,DWORD PTR [ecx+0x76],0x96d28a02
  41875b:	clc    
  41875c:	lods   al,BYTE PTR ds:[esi]
  41875d:	xor    DWORD PTR [edx+eiz*2-0x6b],edi
  418761:	js     0x41874c
  418763:	leave  
  418764:	fwait
  418765:	xchg   edx,eax
  418766:	jns    0x4187d2
  418768:	and    ch,cl
  41876a:	add    al,0x28
  41876c:	mov    BYTE PTR [edx-0x6006f8ba],cl
  418772:	sbb    bh,BYTE PTR [ebp+eiz*4-0xb]
  418776:	pusha  
  418777:	xor    edx,DWORD PTR [edi]
  418779:	sbb    eax,0x8439d46b
  41877e:	in     al,dx
  41877f:	inc    ebp
  418780:	xchg   ecx,eax
  418781:	inc    esi
  418782:	ret    0xbdfd
  418785:	sbb    BYTE PTR [esi-0x28],ah
  418788:	sub    DWORD PTR [ecx+0xc4bf4a],0x4d1c3873
  418792:	in     eax,dx
  418793:	sbb    ebp,ecx
  418795:	xchg   ebx,eax
  418796:	dec    ebp
  418797:	adc    BYTE PTR [ebx],ch
  418799:	cli    
  41879a:	inc    esp
  41879b:	(bad)  
  41879c:	fbstp  TBYTE PTR [ebx+eax*2-0x75]
  4187a0:	xor    DWORD PTR [esi+ebp*8-0x4a],esp
  4187a4:	lahf   
  4187a5:	ja     0x418750
  4187a7:	xchg   ecx,eax
  4187a8:	je     0x4187b1
  4187aa:	scas   al,BYTE PTR es:[edi]
  4187ab:	xor    cl,al
  4187ad:	push   0xf472d9e6
  4187b2:	cmp    ecx,DWORD PTR [edi]
  4187b4:	dec    eax
  4187b5:	push   ss
  4187b6:	xchg   ebx,eax
  4187b7:	adc    edx,DWORD PTR [esi-0x27]
  4187ba:	aas    
  4187bb:	scas   eax,DWORD PTR es:[edi]
  4187bc:	daa    
  4187bd:	leave  
  4187be:	adc    BYTE PTR [ebx],ah
  4187c0:	xchg   DWORD PTR [ebp+0x623ee6ae],edi
  4187c6:	mov    bh,BYTE PTR [edi+0x43c6b366]
  4187cc:	or     BYTE PTR [eax],dl
  4187ce:	mov    DWORD PTR [esi-0x70],ebx
  4187d1:	js     0x418811
  4187d3:	inc    ebp
  4187d4:	dec    esp
  4187d5:	outs   dx,DWORD PTR ds:[esi]
  4187d6:	or     ebx,0xffffffe9
  4187d9:	outs   dx,DWORD PTR ds:[esi]
  4187da:	dec    edi
  4187db:	adc    DWORD PTR [ebx-0x23],esi
  4187de:	xchg   esi,ebx
  4187e0:	pop    esi
  4187e1:	push   0x64
  4187e3:	adc    BYTE PTR [ebp-0x10972df1],ch
  4187e9:	mov    esp,DWORD PTR [eax-0x7a773bba]
  4187ef:	int    0xf5
  4187f1:	jae    0x418776
  4187f3:	repz int3 
  4187f5:	cmp    edx,ebp
  4187f7:	ret    
  4187f8:	in     eax,dx
  4187f9:	add    dl,BYTE PTR [ecx-0x730063c8]
  4187ff:	dec    ecx
  418800:	rep lods eax,DWORD PTR ds:[esi]
  418802:	xchg   bp,sp
  418805:	je     0x4187ce
  418807:	imul   edx,ebx,0x43
  41880a:	clc    
  41880b:	cs in  eax,dx
  41880d:	loopne 0x4187fe
  41880f:	pop    edi
  418810:	pop    ds
  418811:	outs   dx,BYTE PTR ds:[esi]
  418812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418813:	pop    ebp
  418814:	pop    edx
  418815:	push   cs
  418816:	xlat   BYTE PTR ds:[ebx]
  418817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418818:	push   esi
  418819:	pusha  
  41881a:	aaa    
  41881b:	shl    BYTE PTR [edx],0x8a
  41881e:	leave  
  41881f:	add    al,0x36
  418821:	(bad)  
  418822:	and    edx,DWORD PTR [ebp+0x657f9248]
  418828:	pop    ecx
  418829:	aas    
  41882a:	pop    ecx
  41882b:	jnp    0x418831
  41882d:	add    DWORD PTR [edx],0x0
  418830:	dec    esp
  418831:	ds aad 0xe4
  418834:	call   0x66a9:0xe800b2c3
  41883b:	leave  
  41883c:	cmp    al,0xc5
  41883e:	cmp    dl,BYTE PTR [edi-0x3248ef1]
  418844:	pop    ds
  418845:	call   esi
  418847:	pop    ds
  418848:	outs   dx,BYTE PTR ds:[esi]
  418849:	in     al,dx
  41884a:	into   
  41884b:	pop    eax
  41884c:	inc    ecx
  41884d:	hlt    
  41884e:	and    DWORD PTR [ecx+0x30],esi
  418851:	aas    
  418852:	mov    esi,0x4598e9c5
  418857:	fist   WORD PTR [eax-0x3e]
  41885a:	test   eax,0x1e979a0a
  41885f:	pop    ebp
  418860:	pop    ebx
  418861:	and    al,0x5
  418863:	leave  
  418864:	imul   edi,edi,0x48
  418867:	pop    esp
  418868:	mov    ebx,0x17435c2b
  41886d:	fucom  st(7)
  41886f:	xchg   ebp,eax
  418870:	xchg   dh,bl
  418872:	ins    DWORD PTR es:[edi],dx
  418873:	jae    0x4188e4
  418875:	bound  edx,QWORD PTR [ecx]
  418877:	pop    esi
  418878:	test   al,0xfc
  41887a:	dec    esi
  41887b:	sbb    ebx,ebx
  41887d:	cmp    edi,0x1ab67807
  418883:	mov    ch,BYTE PTR [esi]
  418885:	mov    eax,0xb0ed65c1
  41888a:	sub    al,0xa6
  41888c:	pop    ebx
  41888d:	cmc    
  41888e:	or     esp,esp
  418890:	cmc    
  418891:	pop    eax
  418892:	cwde   
  418893:	sub    eax,0x5c6bc206
  418898:	push   ss
  418899:	fsub   DWORD PTR [edi+0x73]
  41889c:	inc    ebp
  41889d:	cdq    
  41889e:	mov    eax,ds:0x8df00c23
  4188a3:	lahf   
  4188a4:	add    dh,0xdc
  4188a7:	data16 (bad) 
  4188a9:	or     dl,BYTE PTR [ecx+edi*1]
  4188ac:	and    al,0x32
  4188ae:	xchg   BYTE PTR [esi],ah
  4188b0:	(bad)  
  4188b2:	cdq    
  4188b3:	mov    al,0xf1
  4188b5:	push   eax
  4188b6:	and    BYTE PTR [esi-0x67],cl
  4188b9:	and    ah,ah
  4188bb:	ins    BYTE PTR es:[edi],dx
  4188bc:	or     al,0xfb
  4188be:	ret    0x7031
  4188c1:	and    ah,BYTE PTR [ebx-0x48ab8982]
  4188c7:	pop    ss
  4188c8:	or     al,BYTE PTR [esi+0x1934acc6]
  4188ce:	mov    ds:0xa6ded80f,eax
  4188d3:	or     esi,DWORD PTR [esi]
  4188d5:	cmc    
  4188d6:	(bad)  
  4188d7:	jge    0x41889e
  4188d9:	or     BYTE PTR [eax],0x1a
  4188dc:	std    
  4188dd:	and    cl,BYTE PTR [edi]
  4188df:	icebp  
  4188e0:	jl     0x418903
  4188e2:	sbb    ebp,ebx
  4188e4:	or     al,0x16
  4188e6:	stos   DWORD PTR es:[edi],eax
  4188e7:	(bad)  
  4188e8:	aam    0x3b
  4188ea:	sti    
  4188eb:	or     ecx,DWORD PTR [ecx]
  4188ed:	or     esp,eax
  4188ef:	xor    BYTE PTR [ebx-0x1e],dh
  4188f2:	dec    ecx
  4188f3:	push   ebx
  4188f4:	mov    edi,0xb65d5402
  4188f9:	xor    esp,DWORD PTR [eax+0x53c385f9]
  4188ff:	xor    ebx,esp
  418901:	or     edi,DWORD PTR [ebx+0x10]
  418904:	jg     0x4188b0
  418906:	les    esi,FWORD PTR [edi-0x2bbff11e]
  41890c:	jg     0x418981
  41890e:	mov    dh,0xfa
  418910:	call   0x32baabf7
  418915:	in     al,dx
  418916:	rcl    DWORD PTR ss:[edx-0x8],1
  41891a:	cmp    DWORD PTR [edx+0x161f3aea],edx
  418920:	shl    BYTE PTR [ebx+0x7520d485],1
  418926:	lahf   
  418927:	xchg   BYTE PTR ds:0x8d6ede8c,bh
  41892d:	and    BYTE PTR [eax+0x589ce806],ah
  418933:	stos   BYTE PTR es:[edi],al
  418934:	imul   esi,eax,0x54
  418937:	xchg   esp,eax
  418938:	pop    esi
  418939:	sub    al,0x16
  41893b:	or     ecx,edi
  41893d:	aas    
  41893e:	sbb    DWORD PTR [edx-0x46],eax
  418941:	fs inc edi
  418943:	mov    al,ds:0x4a2d2b89
  418948:	in     al,dx
  418949:	xchg   esi,eax
  41894a:	lods   eax,DWORD PTR ds:[esi]
  41894b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41894c:	sbb    eax,0x811d0f6d
  418951:	call   0x2cd81179
  418956:	and    ecx,DWORD PTR [edx-0x728d53fd]
  41895c:	in     al,0x55
  41895e:	aam    0x27
  418960:	pop    esi
  418961:	inc    edx
  418962:	cmp    BYTE PTR [edx+ebx*8+0x33d24254],ah
  418969:	push   0xffffffd6
  41896b:	call   0x3929:0x92e4b5da
  418972:	stos   BYTE PTR es:[edi],al
  418973:	or     al,0xba
  418975:	cs mov ecx,0x609e8082
  41897b:	cmp    BYTE PTR [ebp+0x1d390ef3],bh
  418981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418982:	sub    ch,BYTE PTR [ecx+0x56]
  418985:	iret   
  418986:	fbstp  TBYTE PTR [edx+0x46]
  418989:	adc    DWORD PTR [edx-0x3f78e9a9],ebp
  41898f:	inc    eax
  418990:	xchg   edx,eax
  418991:	fstp   TBYTE PTR [edx-0x2]
  418994:	mov    esi,0x20a67be8
  418999:	addr16 aad 0x5a
  41899c:	add    edi,ebx
  41899e:	mov    bl,0xc2
  4189a0:	push   0xe07973ab
  4189a5:	sbb    edx,0xea1cfa2f
  4189ab:	(bad)
  4189ae:	add    al,0xa0
  4189b0:	stc    
  4189b1:	je     0x4189de
  4189b3:	mov    al,0xdb
  4189b5:	push   cs
  4189b6:	pop    esi
  4189b7:	cmp    DWORD PTR [edx-0x31af17bc],esi
  4189bd:	xchg   edx,eax
  4189be:	and    eax,0x7fce57ec
  4189c3:	std    
  4189c4:	into   
  4189c5:	cmp    BYTE PTR [edx-0x44],bl
  4189c8:	xchg   edi,eax
  4189c9:	sub    eax,0x63ce43b4
  4189ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189cf:	ret    
  4189d0:	mov    al,ds:0xeac371ac
  4189d5:	fiadd  WORD PTR [ebp+0x7a69818e]
  4189db:	arpl   WORD PTR [esi-0x50d70a4e],si
  4189e1:	rol    DWORD PTR [ebp-0x4c],0xf5
  4189e5:	fs shr bh,0x78
  4189e9:	fidivr DWORD PTR [ebp-0x75]
  4189ec:	outs   dx,BYTE PTR ds:[esi]
  4189ed:	dec    esi
  4189ee:	(bad)  
  4189ef:	xchg   esp,eax
  4189f0:	xor    esi,DWORD PTR [edx]
  4189f2:	sysenter 
  4189f4:	sbb    al,0xa1
  4189f6:	pop    esp
  4189f7:	ins    DWORD PTR es:[edi],dx
  4189f8:	xchg   esp,eax
  4189f9:	xchg   esi,eax
  4189fa:	out    dx,al
  4189fb:	pusha  
  4189fc:	rol    BYTE PTR [ebx+0xb],1
  4189ff:	pushf  
  418a00:	inc    edi
  418a01:	or     eax,0x2665ef35
  418a06:	ds mov bh,0x36
  418a09:	call   0x202a:0x8e9c28d4
  418a10:	mov    DWORD PTR [eax+0x4eab69fd],esp
  418a16:	jbe    0x418a30
  418a18:	xchg   DWORD PTR [eax-0x4f],esp
  418a1b:	inc    ecx
  418a1c:	sbb    BYTE PTR [edi+0xc],0x5c
  418a20:	or     DWORD PTR [ebx+0x7dfedf19],edi
  418a26:	clc    
  418a27:	sbb    ebx,DWORD PTR [ecx+0x71535498]
  418a2d:	aaa    
  418a2e:	push   0x7f
  418a30:	add    BYTE PTR [edx-0x2437c9f1],bl
  418a36:	add    ebp,DWORD PTR [eax]
  418a38:	fcomp  QWORD PTR [ebp+0x4993412c]
  418a3e:	or     eax,0xa96c9048
  418a43:	push   edx
  418a44:	int3   
  418a45:	jns    0x418a0b
  418a47:	mov    gs,WORD PTR [ecx]
  418a49:	add    al,bl
  418a4b:	ja     0x418a35
  418a4d:	ret    
  418a4e:	cld    
  418a4f:	mov    ebp,0xf27dd031
  418a54:	repnz xor DWORD PTR [ecx+ebx*2],esi
  418a58:	pop    edi
  418a59:	cdq    
  418a5a:	fistp  QWORD PTR [edx-0x75c5565e]
  418a60:	in     eax,0xc9
  418a62:	push   eax
  418a63:	jg     0x418a0c
  418a65:	popf   
  418a66:	push   0xd2dc4da5
  418a6b:	sbb    BYTE PTR [ebx-0x69],ch
  418a6e:	pop    esi
  418a6f:	(bad)  [ebx+0x12]
  418a72:	push   ds
  418a73:	fcomp  DWORD PTR [edx+ecx*1+0x564be6e0]
  418a7a:	je     0x418a42
  418a7c:	icebp  
  418a7d:	ja     0x418a8b
  418a7f:	fild   QWORD PTR [edx+ecx*1]
  418a82:	push   esi
  418a83:	pop    ds
  418a84:	loope  0x418a8d
  418a86:	jecxz  0x418af7
  418a88:	dec    esp
  418a89:	rcl    DWORD PTR [eax-0x58],0x7c
  418a8d:	mov    WORD PTR [eax-0x6b],?
  418a90:	std    
  418a91:	retf   
  418a92:	fadd   DWORD PTR [edx-0x73]
  418a95:	(bad)  
  418a96:	or     DWORD PTR [ebp+0x6eba99fc],esp
  418a9c:	pushf  
  418a9d:	mov    esp,0x27dd989d
  418aa2:	pop    ebx
  418aa3:	and    dl,BYTE PTR [edi]
  418aa5:	scas   al,BYTE PTR es:[edi]
  418aa6:	cmp    DWORD PTR [edi+0x49],ecx
  418aa9:	cmp    ecx,DWORD PTR [eax]
  418aab:	mov    eax,ds:0xd8737df5
  418ab0:	jns    0x418a93
  418ab2:	sbb    al,0x4a
  418ab4:	or     BYTE PTR [eax-0x2f],al
  418ab7:	idiv   BYTE PTR [ebx+edx*2+0x68e8db76]
  418abe:	mov    dl,0x83
  418ac0:	sub    cl,al
  418ac2:	dec    edi
  418ac3:	test   al,0xb9
  418ac5:	mov    bh,0x6e
  418ac7:	cli    
  418ac8:	ret    0xc418
  418acb:	push   ecx
  418acc:	arpl   WORD PTR [edx+0x187a093f],dx
  418ad2:	stc    
  418ad3:	mov    ah,0xcd
  418ad5:	adc    bl,BYTE PTR [esi+0x70]
  418ad8:	cdq    
  418ad9:	(bad)  
  418adb:	sbb    BYTE PTR [edx],bh
  418add:	sub    BYTE PTR [ecx+0x4c2704b8],al
  418ae3:	cli    
  418ae4:	(bad)  
  418ae6:	in     al,dx
  418ae7:	pop    ds
  418ae8:	gs xchg ebp,eax
  418aea:	mov    ebp,0x6e32e6b
  418aef:	stc    
  418af0:	sbb    edx,edi
  418af2:	mov    ecx,0xd55ebcfd
  418af7:	add    BYTE PTR [ebx],al
  418af9:	pop    esp
  418afa:	mov    dh,0xcc
  418afc:	ss xchg ebp,eax
  418afe:	mov    edi,0x53279d
  418b03:	add    al,BYTE PTR [esi+0x30]
  418b06:	ret    
  418b07:	test   cl,bl
  418b09:	jns    0x418aa3
  418b0b:	and    eax,0xeb9bcb39
  418b10:	add    BYTE PTR [eax-0x124359b2],ah
  418b16:	shr    BYTE PTR [edx],0x9f
  418b19:	mov    al,0xd0
  418b1b:	add    DWORD PTR [edx],ebp
  418b1d:	jo     0x418b9e
  418b1f:	fwait
  418b20:	(bad)  
  418b21:	xor    edi,DWORD PTR [ebp+edx*1-0x5a]
  418b25:	pushf  
  418b26:	mov    dh,0xf8
  418b28:	outs   dx,BYTE PTR ss:[esi]
  418b2a:	sub    esi,ecx
  418b2c:	loope  0x418ab8
  418b2e:	mov    al,0xc4
  418b30:	das    
  418b31:	loop   0x418afc
  418b33:	adc    BYTE PTR [esi-0x354a2257],0x5b
  418b3a:	aas    
  418b3b:	or     BYTE PTR [ebx-0x4be053cb],ch
  418b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b42:	div    DWORD PTR [ecx+0x38353069]
  418b48:	mov    ebx,0x870aea56
  418b4d:	sub    eax,0xc797a8b4
  418b52:	cmc    
  418b53:	dec    esp
  418b54:	inc    DWORD PTR [edi]
  418b56:	xchg   esi,eax
  418b57:	das    
  418b58:	mov    BYTE PTR [ebx-0xc76e638],cl
  418b5e:	and    al,BYTE PTR [esi+ecx*4+0x1e]
  418b62:	push   ebx
  418b63:	mov    ebp,0xf054976f
  418b68:	mov    DWORD PTR [esi+0x7ded631],ecx
  418b6e:	fs pop ebx
  418b70:	mov    ds:0x1539afbc,eax
  418b75:	xchg   ebx,eax
  418b76:	adc    eax,0xdab9b257
  418b7b:	retf   
  418b7c:	leave  
  418b7d:	jae    0x418b10
  418b7f:	(bad)  
  418b80:	out    0x61,al
  418b82:	jp     0x418b32
  418b84:	std    
  418b85:	jns    0x418b0c
  418b87:	and    bl,BYTE PTR [ecx+ebx*4-0x2810f983]
  418b8e:	xor    ebx,esi
  418b90:	int3   
  418b91:	scas   eax,DWORD PTR es:[edi]
  418b92:	ret    
  418b93:	sbb    eax,esi
  418b95:	loopne 0x418b75
  418b97:	(bad)  
  418b99:	mov    bh,0x68
  418b9b:	lds    esp,FWORD PTR [ecx]
  418b9d:	(bad)  
  418b9e:	retf   0xdd5c
  418ba1:	push   eax
  418ba2:	sbb    al,0xd3
  418ba4:	lea    ebp,[esi]
  418ba6:	imul   DWORD PTR [edx+0x1d096adf]
  418bac:	jle    0x418bea
  418bae:	cwde   
  418baf:	mul    DWORD PTR [ecx-0x12]
  418bb2:	sub    ecx,esi
  418bb4:	push   ecx
  418bb5:	jno    0x418b7b
  418bb7:	and    eax,0xd2529a1c
  418bbc:	ins    DWORD PTR es:[edi],dx
  418bbd:	rcl    DWORD PTR [ecx],1
  418bbf:	jge    0x418bd0
  418bc1:	jnp    0x418c18
  418bc3:	mov    gs,WORD PTR [ecx]
  418bc5:	push   es
  418bc6:	retf   0x5071
  418bc9:	adc    DWORD PTR [ebp+0x51e71dc6],esi
  418bcf:	xchg   edi,eax
  418bd0:	or     edi,ecx
  418bd2:	and    BYTE PTR [edx],0x66
  418bd5:	sub    DWORD PTR [edi-0x80],edi
  418bd8:	inc    edi
  418bd9:	sub    ch,cl
  418bdb:	repz xchg esi,eax
  418bdd:	inc    edx
  418bde:	pop    esi
  418bdf:	fist   WORD PTR ds:0x2414d6ae
  418be5:	jns    0x418bc4
  418be7:	stos   DWORD PTR es:[edi],eax
  418be8:	push   esp
  418be9:	sahf   
  418bea:	ja     0x418bae
  418bec:	adc    BYTE PTR [eax],cl
  418bee:	add    ebp,DWORD PTR [ecx+0xb]
  418bf1:	push   esp
  418bf2:	xchg   esi,eax
  418bf3:	test   DWORD PTR ds:0xa1a2ad0e,edi
  418bf9:	sub    BYTE PTR [ecx+edi*8+0x4ef4d9c],ch
  418c00:	sub    eax,0x691a060
  418c05:	push   edx
  418c06:	mov    esi,0x72facca3
  418c0b:	jno    0x418ba8
  418c0d:	lea    ecx,[edx+0x6459facf]
  418c13:	call   0xbfd6:0xdcf6a054
  418c1a:	pop    edi
  418c1b:	cld    
  418c1c:	mov    BYTE PTR [esp+edi*1],dh
  418c1f:	mov    ah,BYTE PTR [edx-0xa40a470]
  418c25:	test   dl,ah
  418c27:	push   ss
  418c28:	mov    esi,0x2f6917b5
  418c2d:	pop    es
  418c2e:	xchg   esi,eax
  418c2f:	pop    esi
  418c30:	scas   al,BYTE PTR es:[edi]
  418c31:	lock hlt 
  418c33:	addr16 mov esp,0x91344ecb
  418c39:	fdiv   DWORD PTR [ebx]
  418c3b:	inc    eax
  418c3c:	retf   0x1485
  418c3f:	sub    al,0x78
  418c41:	push   0xdccd2354
  418c46:	mov    esp,0xf437aed6
  418c4b:	or     edx,DWORD PTR [ebp-0x1c]
  418c4e:	xchg   DWORD PTR [eax],ebp
  418c50:	xor    eax,DWORD PTR [edx-0x7]
  418c53:	ins    BYTE PTR es:[edi],dx
  418c54:	jle    0x418cd2
  418c56:	rcl    dh,0x4c
  418c59:	pop    esp
  418c5a:	cwde   
  418c5b:	mov    ebp,esi
  418c5d:	adc    esp,edx
  418c5f:	xor    eax,0xc57baad6
  418c64:	pop    esi
  418c65:	pop    esi
  418c66:	push   esp
  418c67:	out    dx,al
  418c68:	js     0x418c77
  418c6a:	test   al,0xd7
  418c6c:	xchg   ebp,eax
  418c6d:	lds    esp,FWORD PTR [edx+esi*1+0x6c]
  418c71:	popa   
  418c72:	xor    DWORD PTR [edx+0x4d],0x2003f6eb
  418c79:	xchg   edi,eax
  418c7a:	jl     0x418c19
  418c7c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c7e:	cmp    edi,ecx
  418c80:	repz int 0x94
  418c83:	fdivr  DWORD PTR [ecx+0x3c]
  418c86:	push   edi
  418c87:	add    al,0x7c
  418c89:	push   esp
  418c8a:	lods   eax,DWORD PTR ds:[esi]
  418c8b:	sub    BYTE PTR [ebx-0x27ff0ec0],cl
  418c91:	xchg   esi,eax
  418c92:	(bad)  
  418c93:	or     BYTE PTR [esp+edi*2],dh
  418c96:	out    0x60,eax
  418c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c99:	test   al,0x69
  418c9b:	jmp    esi
  418c9d:	mov    esp,0xa8216d98
  418ca2:	stos   BYTE PTR es:[edi],al
  418ca3:	lods   eax,DWORD PTR ds:[esi]
  418ca4:	sahf   
  418ca5:	jb     0x418cd2
  418ca7:	mov    DWORD PTR [ebx+0x3c],esp
  418caa:	and    ah,BYTE PTR [esp+eax*8]
  418cad:	imul   edi,DWORD PTR [eax+0x11],0x7b
  418cb1:	fild   QWORD PTR [edi+0x69184016]
  418cb7:	jmp    0xe0bdfb1c
  418cbc:	scas   al,BYTE PTR es:[edi]
  418cbd:	scas   al,BYTE PTR es:[edi]
  418cbe:	retf   0x5d07
  418cc1:	xor    dh,BYTE PTR [ebp-0x18303e08]
  418cc7:	not    BYTE PTR [edx-0x43]
  418cca:	add    esi,DWORD PTR [esi]
  418ccc:	or     eax,0x1c977c95
  418cd1:	das    
  418cd2:	mov    ds:0x4cfe2ebd,eax
  418cd7:	int    0x4d
  418cd9:	mov    ah,0x44
  418cdb:	hlt    
  418cdc:	call   0x36f1:0xe9462325
  418ce3:	inc    ebx
  418ce4:	push   edi
  418ce5:	pop    ebx
  418ce6:	dec    esi
  418ce7:	ror    al,1
  418ce9:	jge    0x418d57
  418ceb:	fwait
  418cec:	popa   
  418ced:	call   0xbd71c436
  418cf2:	pop    esp
  418cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cf4:	mov    esp,0x74001b6d
  418cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cfa:	cmp    ecx,DWORD PTR [esi+edx*1-0x28]
  418cfe:	mov    ds:0x1a5d3c90,al
  418d03:	jne    0x418cb3
  418d05:	ror    DWORD PTR [eiz*8+0x73f1efe1],1
  418d0c:	mov    DWORD PTR [ebx+0x4b],ecx
  418d0f:	push   es
  418d10:	in     al,dx
  418d11:	aam    0x29
  418d13:	and    BYTE PTR [edi],cl
  418d15:	adc    al,0x18
  418d17:	imul   ecx,DWORD PTR ds:0x8124c929,0x70
  418d1e:	mov    fs,esi
  418d20:	out    0x20,eax
  418d22:	(bad)  
  418d23:	cmc    
  418d24:	jge    0x418d23
  418d26:	in     al,dx
  418d27:	xchg   BYTE PTR [ecx],cl
  418d29:	dec    ebp
  418d2a:	dec    esp
  418d2b:	mov    ch,bh
  418d2d:	(bad)  
  418d2f:	cmp    ah,BYTE PTR [esi]
  418d31:	pop    ss
  418d32:	shr    DWORD PTR [edi+edx*4],0x40
  418d36:	ja     0x418cba
  418d38:	xor    dh,BYTE PTR [ebx-0x1]
  418d3b:	xchg   BYTE PTR [edi-0x5879bb89],dl
  418d41:	popa   
  418d42:	add    edi,ebp
  418d44:	or     esp,edx
  418d46:	push   0xfffffff6
  418d48:	xchg   ebx,eax
  418d49:	in     eax,dx
  418d4a:	add    ch,BYTE PTR [eax+esi*8+0x29]
  418d4e:	out    0x66,eax
  418d50:	inc    ebx
  418d51:	and    ch,0xf4
  418d54:	xlat   BYTE PTR fs:[ebx]
  418d56:	loopne 0x418dc0
  418d58:	popf   
  418d59:	push   edi
  418d5a:	sub    edx,DWORD PTR [edx+0xa]
  418d5d:	into   
  418d5e:	out    dx,eax
  418d5f:	pop    ebp
  418d60:	sub    DWORD PTR [edx],ebp
  418d62:	and    dh,al
  418d64:	pop    ebx
  418d65:	and    BYTE PTR [edx+0x9],ch
  418d68:	push   0x44
  418d6a:	icebp  
  418d6b:	imul   ebx,DWORD PTR [esi-0x43870866],0x901d721c
  418d75:	lahf   
  418d76:	mov    eax,ds:0x5059180e
  418d7b:	xor    eax,0x4ed4768e
  418d80:	loopne 0x418df6
  418d82:	js     0x418d39
  418d84:	sub    ch,bl
  418d86:	out    dx,eax
  418d87:	add    ch,bl
  418d89:	aad    0xd4
  418d8b:	mov    edi,0x7ddb4326
  418d90:	mov    dh,0xf3
  418d92:	out    0xca,eax
  418d94:	aaa    
  418d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d96:	cmp    al,0x86
  418d98:	les    ebp,FWORD PTR [ecx+0x1b32db88]
  418d9e:	shr    esi,cl
  418da0:	jb     0x418d9e
  418da2:	(bad)  
  418da3:	mov    ebp,0xd4259b8c
  418da8:	cmp    al,0x23
  418daa:	push   ds
  418dab:	fwait
  418dac:	xchg   esi,eax
  418dad:	popa   
  418dae:	arpl   si,bx
  418db0:	cmp    al,0xda
  418db2:	or     cl,ch
  418db4:	inc    ebx
  418db5:	pop    eax
  418db6:	sub    cl,BYTE PTR [ebp-0x5d]
  418db9:	jnp    0x418d67
  418dbb:	shr    edi,cl
  418dbd:	shl    DWORD PTR [ebx+0x2947b4a7],0xea
  418dc4:	sub    BYTE PTR [edi-0x420658f2],0xa5
  418dcb:	retf   
  418dcc:	jmp    0xeca1:0x5d4dea21
  418dd3:	cmp    al,0xf6
  418dd5:	mov    dl,0x86
  418dd7:	in     al,dx
  418dd8:	fs xchg ebx,eax
  418dda:	gs pop ss
  418ddc:	nop
  418ddd:	or     bl,BYTE PTR [edi-0x68]
  418de0:	add    al,0x4c
  418de2:	imul   ecx,DWORD PTR [ecx+ebp*8+0x5e],0x15
  418de7:	pop    ebp
  418de8:	in     al,dx
  418de9:	sub    edi,DWORD PTR [eax-0x2144d53c]
  418def:	pop    esp
  418df0:	test   ebp,ebx
  418df2:	mov    dh,0x7c
  418df4:	aam    0xf3
  418df6:	in     al,dx
  418df7:	stos   DWORD PTR es:[edi],eax
  418df8:	jge    0x418e42
  418dfa:	leave  
  418dfb:	iret   
  418dfc:	pop    es
  418dfd:	dec    edx
  418dfe:	rcl    DWORD PTR [edi+0x6b],cl
  418e01:	jecxz  0x418d88
  418e03:	cmp    DWORD PTR ds:0x2e384b7e,edx
  418e09:	mov    edi,0x3e9b8ad2
  418e0e:	inc    esp
  418e0f:	mov    bh,0x6a
  418e11:	inc    ebx
  418e12:	das    
  418e13:	stos   DWORD PTR es:[edi],eax
  418e14:	das    
  418e15:	inc    edi
  418e16:	sub    dl,dh
  418e18:	mov    bh,0xca
  418e1a:	mov    cl,0x6e
  418e1c:	mov    cl,0x3c
  418e1e:	out    dx,al
  418e1f:	ja     0x418df6
  418e21:	repz mov ds:0x7a6085d1,al
  418e27:	mov    bh,BYTE PTR [edx-0x61]
  418e2a:	mov    ebx,0xdce63022
  418e2f:	imul   edx,DWORD PTR [edi],0x542434bc
  418e35:	ror    BYTE PTR [ebp+0x5fb0fe13],1
  418e3b:	scas   eax,DWORD PTR es:[edi]
  418e3c:	xor    ecx,esp
  418e3e:	fimul  WORD PTR [ebx+0x2b8aa2f9]
  418e44:	out    dx,eax
  418e45:	addr16 cmp al,0x5d
  418e48:	cmp    DWORD PTR [esi-0x56],esp
  418e4b:	ror    edi,0xb4
  418e4e:	pop    esi
  418e4f:	out    dx,al
  418e50:	ins    BYTE PTR es:[edi],dx
  418e51:	sar    DWORD PTR [esi],cl
  418e53:	call   0x90f98421
  418e58:	xchg   ebx,eax
  418e59:	mov    al,0x38
  418e5b:	push   ecx
  418e5c:	pop    ecx
  418e5d:	mov    dl,0x4f
  418e5f:	sbb    DWORD PTR [ebx],ebp
  418e61:	aam    0x34
  418e63:	out    dx,al
  418e64:	dec    ecx
  418e65:	fisub  DWORD PTR gs:[edx+0x11]
  418e69:	cmp    ebp,edx
  418e6b:	pop    esp
  418e6c:	inc    edx
  418e6d:	fmulp  st(2),st
  418e6f:	mov    ebp,0x85f18159
  418e74:	daa    
  418e75:	mov    cl,0xc8
  418e77:	mov    ch,0x25
  418e7a:	cld    
  418e7b:	je     0x418eea
  418e7d:	or     edi,ebp
  418e7f:	mov    bl,0xef
  418e81:	dec    DWORD PTR [ebx+0x4c]
  418e84:	shr    BYTE PTR [edx-0xa558813],1
  418e8a:	and    esp,DWORD PTR [edx+0x6a]
  418e8d:	ror    DWORD PTR [esi+0x6f],0x56
  418e91:	imul   eax,DWORD PTR [eax+0x43890c3b],0x4d
  418e98:	aam    0xb3
  418e9a:	ds imul eax,edi,0xffffffd7
  418e9e:	lahf   
  418e9f:	xor    al,0xf6
  418ea1:	pusha  
  418ea2:	repz out dx,al
  418ea4:	push   es
  418ea5:	ret    0xbe12
  418ea8:	xchg   ecx,eax
  418ea9:	adc    al,0x71
  418eab:	mov    ah,BYTE PTR [edi-0x751c92c6]
  418eb1:	push   edx
  418eb2:	std    
  418eb3:	bound  ebp,QWORD PTR [ebx]
  418eb5:	xchg   esp,eax
  418eb6:	cmp    DWORD PTR [ebx],ebx
  418eb8:	xchg   ecx,eax
  418eb9:	jl     0x418f1c
  418ebb:	push   ds
  418ebc:	cmp    eax,0xd1fb8888
  418ec1:	add    DWORD PTR [edi],esp
  418ec3:	sti    
  418ec4:	cwde   
  418ec5:	push   0x48
  418ec7:	nop
  418ec8:	(bad)  
  418ec9:	cdq    
  418eca:	dec    ebp
  418ecb:	les    eax,FWORD PTR [ebx+ebx*2-0x5a]
  418ecf:	cli    
  418ed0:	mov    ds:0xf648d8af,al
  418ed5:	xor    eax,0x3c13e2d4
  418eda:	(bad)  
  418edc:	daa    
  418edd:	xchg   dh,bh
  418edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ee0:	in     al,dx
  418ee1:	hlt    
  418ee2:	fld    QWORD PTR [edi+ecx*8+0x54688837]
  418ee9:	and    al,0x37
  418eeb:	inc    ebp
  418eec:	pop    esi
  418eed:	and    DWORD PTR [ebx-0x28],0xffffffbe
  418ef1:	sbb    al,0xa0
  418ef3:	les    edi,FWORD PTR [esi]
  418ef5:	scas   eax,DWORD PTR es:[edi]
  418ef6:	push   ds
  418ef7:	imul   ebx,DWORD PTR ds:0x2630f31a,0xc803c98a
  418f01:	pop    esp
  418f02:	aas    
  418f03:	push   ds
  418f04:	fstp   QWORD PTR [ecx]
  418f06:	xor    dh,BYTE PTR [esi]
  418f08:	cld    
  418f09:	xchg   esp,eax
  418f0a:	jns    0x418ed1
  418f0c:	test   BYTE PTR [ebx-0x1d3f992],0xbf
  418f13:	mov    ecx,0x410d2c21
  418f18:	xor    al,0x67
  418f1a:	outs   dx,DWORD PTR ds:[esi]
  418f1b:	clc    
  418f1c:	sbb    esi,DWORD PTR [ebx-0x1c]
  418f1f:	jb     0x418ee1
  418f21:	jae    0x418f1c
  418f23:	mov    BYTE PTR [edx+0x12],bh
  418f26:	jns    0x418ec8
  418f28:	sub    edi,0xb62834bc
  418f2e:	add    eax,0xa4b6d112
  418f33:	pusha  
  418f34:	and    BYTE PTR [eax],bl
  418f36:	pusha  
  418f37:	inc    edx
  418f38:	inc    edx
  418f39:	jns    0x418ebe
  418f3b:	pop    ds
  418f3c:	pop    es
  418f3d:	jle    0x418f3a
  418f3f:	sub    al,0x97
  418f41:	jns    0x418f7d
  418f43:	add    BYTE PTR [ebx],cl
  418f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f46:	fmul   st,st(3)
  418f48:	in     eax,dx
  418f49:	xchg   edi,eax
  418f4a:	fdivr  QWORD PTR [ecx+edi*2]
  418f4d:	retf   
  418f4e:	inc    edi
  418f4f:	jmp    0xf62f:0x5e3fe626
  418f56:	and    DWORD PTR [ebx],esp
  418f58:	mov    eax,0x148c4e21
  418f5d:	xchg   edi,eax
  418f5e:	cs retf 0x4e6d
  418f62:	fcomp  DWORD PTR ds:0xe835e856
  418f68:	fstp   TBYTE PTR [esi]
  418f6a:	jg     0x418ef8
  418f6c:	push   0xd56750be
  418f71:	pop    ebx
  418f72:	jle    0x418fef
  418f74:	or     eax,0xa4bd5d54
  418f79:	fstp   TBYTE PTR [ecx]
  418f7b:	mov    bl,0x42
  418f7d:	fild   DWORD PTR [edi+0x35]
  418f80:	stc    
  418f81:	cmp    ebp,DWORD PTR [esi]
  418f83:	imul   eax,DWORD PTR ds:0x554edc5f,0x67b3167c
  418f8d:	aad    0xca
  418f8f:	sub    esi,DWORD PTR [ecx+ebx*4+0x137d88aa]
  418f96:	fisttp QWORD PTR [esi-0x63]
  418f99:	(bad)  
  418f9b:	or     al,0x13
  418f9d:	or     DWORD PTR [ebp+0x6f],edx
  418fa0:	aaa    
  418fa1:	in     al,dx
  418fa2:	push   eax
  418fa3:	mov    eax,0x12daa2b4
  418fa8:	shl    DWORD PTR [edx-0x22],cl
  418fab:	sub    bl,BYTE PTR [esi+0x34221a66]
  418fb1:	call   0x81221cfa
  418fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fb7:	cmc    
  418fb8:	fimul  DWORD PTR [edx+ecx*4+0x4e35e646]
  418fbf:	(bad)  
  418fc0:	aam    0x8c
  418fc2:	ds pop edx
  418fc4:	retf   
  418fc5:	ret    0x2352
  418fc8:	mov    ebp,0x7339e3a9
  418fcd:	cmp    eax,0xd5416844
  418fd2:	lds    esi,FWORD PTR [edx-0x16d866de]
  418fd8:	mov    gs,WORD PTR [esi+0x19]
  418fdb:	adc    edi,ebp
  418fdd:	outs   dx,DWORD PTR ds:[esi]
  418fde:	ds cwde 
  418fe0:	inc    ecx
  418fe1:	inc    ecx
  418fe2:	dec    ebp
  418fe3:	cmp    dl,0x2f
  418fe6:	xchg   ecx,ebp
  418fe8:	aas    
  418fe9:	push   es
  418fea:	push   ss
  418feb:	sbb    DWORD PTR [ecx-0x2d],edi
  418fee:	mov    ebx,0x46b44cac
  418ff3:	dec    esp
  418ff4:	sbb    eax,0xc5613b6c
  418ff9:	and    DWORD PTR [edx],ebx
  418ffb:	jmp    0x41905f
  418ffd:	push   cs
  418ffe:	pop    esi
  418fff:	je     0x418fd7
  419001:	fldenv [edx]
  419003:	xor    bl,al
  419005:	add    ch,BYTE PTR [edx]
  419007:	stos   BYTE PTR es:[edi],al
  419008:	push   0xffffffed
  41900a:	ins    BYTE PTR es:[edi],dx
  41900b:	stos   DWORD PTR es:[edi],eax
  41900c:	mov    bl,0x8b
  41900e:	push   eax
  41900f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419010:	popf   
  419011:	cmp    DWORD PTR [esi+0x2],esp
  419014:	mov    fs,WORD PTR [ebp+0x3f99d65]
  41901a:	adc    dl,dl
  41901c:	inc    edi
  41901d:	jae    0x418fb8
  41901f:	nop
  419020:	mov    dl,0xd8
  419022:	and    bl,BYTE PTR [eax-0x3beac681]
  419028:	xchg   DWORD PTR [esi+0x774fabb0],esp
  41902e:	jmp    0x5321:0xe40982e2
  419035:	dec    edx
  419036:	and    al,0x11
  419038:	loopne 0x41901c
  41903a:	sub    DWORD PTR [edx-0x32],0xb
  41903e:	sbb    DWORD PTR [eax-0x531affb8],0xfffffffa
  419045:	dec    ebx
  419046:	sbb    cl,BYTE PTR [ebp-0x550ad6c]
  41904c:	fcom   st(0)
  41904e:	mov    esp,0xafcb47bf
  419053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419054:	aam    0xa2
  419056:	xchg   esp,eax
  419057:	iret   
  419058:	jnp    0x41909d
  41905a:	xchg   esp,eax
  41905b:	in     al,0x53
  41905d:	inc    ebx
  41905e:	idiv   BYTE PTR [edx+0x11950a51]
  419064:	mov    al,0x13
  419066:	adc    eax,0x3dc07c0
  41906b:	mov    edi,0xe2697c61
  419070:	mov    esi,0xcfbf4052
  419075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419076:	lea    ecx,[edi+0x49]
  419079:	mov    ah,0x97
  41907b:	cwde   
  41907c:	in     eax,0x2a
  41907e:	aam    0xb0
  419080:	mov    esi,0x5a4ea303
  419085:	push   cs
  419086:	mov    bl,0xc7
  419088:	dec    edx
  419089:	adc    eax,ebp
  41908b:	fisubr DWORD PTR [esi-0x5]
  41908e:	sbb    eax,0x67abd9
  419093:	jl     0x419100
  419095:	shl    dl,1
  419097:	(bad)  
  419098:	out    dx,al
  419099:	and    eax,0xc5977211
  41909e:	stc    
  41909f:	xor    ebx,DWORD PTR [ebx-0x6]
  4190a2:	mov    ebp,0x51ef1063
  4190a7:	lods   eax,DWORD PTR ds:[esi]
  4190a8:	lods   al,BYTE PTR ds:[esi]
  4190a9:	mov    WORD PTR [edx+0x6cb14943],es
  4190af:	out    dx,al
  4190b0:	rcr    dh,0x95
  4190b3:	jae    0x4190e6
  4190b5:	repnz sbb cl,ch
  4190b8:	cmp    BYTE PTR [ebp-0x41],bh
  4190bb:	jne    0x419068
  4190bd:	cli    
  4190be:	fcom   DWORD PTR [esi+edi*4+0x6b82bc2b]
  4190c5:	pop    ds
  4190c6:	int3   
  4190c7:	(bad)  
  4190c8:	jnp    0x419111
  4190ca:	jge    0x419062
  4190cc:	inc    esi
  4190cd:	or     DWORD PTR [ebx-0x3f],ebp
  4190d0:	xor    edi,esi
  4190d2:	ja     0x41909c
  4190d4:	add    dh,BYTE PTR [ebx]
  4190d6:	lds    eax,FWORD PTR [esi+0x8]
  4190d9:	(bad)  
  4190da:	jnp    0x419111
  4190dc:	push   0x4e362164
  4190e1:	jae    0x41910d
  4190e3:	leave  
  4190e4:	add    esp,esp
  4190e6:	fs ja  0x419085
  4190e9:	lahf   
  4190ea:	outs   dx,BYTE PTR ds:[esi]
  4190eb:	push   esi
  4190ec:	ror    BYTE PTR [ebp-0x1e],cl
  4190ef:	mov    edi,0x3b7c571b
  4190f4:	dec    esi
  4190f5:	call   0xb78f:0x3f8a9598
  4190fc:	pop    ebp
  4190fd:	rol    BYTE PTR [ebp-0x1],cl
  419100:	aad    0x6e
  419102:	xor    ch,BYTE PTR [ebx+ebx*2-0x4d]
  419106:	mov    cl,0x0
  419108:	test   al,0xed
  41910a:	xchg   ebp,eax
  41910b:	sub    bl,BYTE PTR [edi+0x7b7c84dd]
  419111:	mov    esp,0x3509e275
  419116:	push   esi
  419117:	dec    ecx
  419118:	inc    edx
  419119:	lods   al,BYTE PTR ds:[esi]
  41911a:	cwde   
  41911b:	sub    eax,edi
  41911d:	pop    es
  41911e:	(bad)  
  41911f:	adc    eax,0x3f9989bc
  419124:	and    esi,ecx
  419126:	ds in  al,0xb7
  419129:	dec    edx
  41912a:	mov    ah,0x2f
  41912c:	sbb    BYTE PTR gs:[edi],al
  41912f:	xlat   BYTE PTR ds:[ebx]
  419130:	cmp    BYTE PTR ds:0xa934c061,bl
  419136:	adc    ecx,edx
  419138:	jle    0x419113
  41913a:	dec    ebx
  41913b:	dec    edi
  41913c:	jle    0x419139
  41913e:	stos   DWORD PTR es:[edi],eax
  41913f:	clc    
  419140:	imul   eax,DWORD PTR [ecx+0x71],0x35
  419144:	mov    ds:0xd51b6bfd,eax
  419149:	inc    ebx
  41914a:	mov    edx,gs
  41914c:	hlt    
  41914d:	clc    
  41914e:	stc    
  41914f:	xchg   esi,eax
  419150:	pusha  
  419151:	sbb    cl,bl
  419153:	dec    eax
  419154:	adc    dl,0xfb
  419157:	lahf   
  419158:	pop    ecx
  419159:	shl    BYTE PTR [ebp+eax*1-0x3f2a64f8],cl
  419160:	hlt    
  419161:	inc    eax
  419162:	mov    dl,0x58
  419164:	or     dl,BYTE PTR [ebx]
  419166:	and    al,0xdc
  419168:	xor    DWORD PTR [edi+0x6d],ebx
  41916b:	sbb    BYTE PTR [ebx+0x4f],al
  41916e:	sbb    al,ch
  419170:	test   DWORD PTR [ecx-0x45],ebp
  419173:	sar    esi,0x5d
  419176:	xor    eax,0x676bf5bc
  41917b:	popa   
  41917c:	jns    0x4191ef
  41917e:	sub    BYTE PTR [edi-0x4423f30a],cl
  419184:	mov    ss,esi
  419186:	clc    
  419187:	scas   al,BYTE PTR es:[edi]
  419188:	leave  
  419189:	mov    esi,ecx
  41918b:	or     al,0xb2
  41918d:	aam    0x9c
  41918f:	dec    edi
  419190:	jo     0x41919a
  419192:	mov    edx,0xa74f2ee9
  419197:	xchg   esp,eax
  419198:	xchg   ebp,eax
  419199:	or     al,0xd
  41919b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41919c:	pop    edi
  41919d:	gs push edx
  41919f:	or     BYTE PTR [edi+0x31],ch
  4191a2:	or     al,0x84
  4191a4:	mov    ah,0x2a
  4191a6:	stos   BYTE PTR es:[edi],al
  4191a7:	add    BYTE PTR [ebx-0x2cb3164c],0x75
  4191ae:	push   ds
  4191af:	outs   dx,DWORD PTR ds:[esi]
  4191b0:	ja     0x419168
  4191b2:	shl    BYTE PTR ds:0x703c794b,0x91
  4191b9:	xchg   ebx,eax
  4191ba:	mov    cl,0xa9
  4191bc:	cwde   
  4191bd:	les    ecx,FWORD PTR [ecx-0xf]
  4191c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c1:	add    al,0xe
  4191c3:	aaa    
  4191c4:	xor    eax,0xb22a8b25
  4191c9:	stos   BYTE PTR es:[edi],al
  4191ca:	push   ebx
  4191cb:	mov    gs,WORD PTR [edx-0x51]
  4191ce:	add    al,0x89
  4191d0:	jmp    FWORD PTR ds:0x718aefdb
  4191d6:	pop    ebp
  4191d7:	mov    ebp,0x1da2d9af
  4191dc:	pop    ds
  4191dd:	or     bl,BYTE PTR [ecx+0x52eb0c9e]
  4191e3:	mov    esi,DWORD PTR [ecx+0x58a175ed]
  4191e9:	mov    esi,0x33823bd
  4191ee:	inc    ebp
  4191ef:	sar    BYTE PTR [eax],1
  4191f1:	sbb    al,0x52
  4191f3:	cmc    
  4191f4:	stc    
  4191f5:	sahf   
  4191f6:	dec    edx
  4191f7:	out    0x67,eax
  4191f9:	xlat   BYTE PTR ds:[ebx]
  4191fa:	sub    eax,0x248e5214
  4191ff:	push   ebp
  419200:	fs cmc 
  419202:	xor    DWORD PTR [ebp+0x3b],edi
  419205:	(bad)  
  419206:	(bad)  
  419207:	out    0xe1,al
  419209:	jmp    0xbbeca17f
  41920e:	or     eax,0x42c7f5d4
  419213:	imul   ecx,DWORD PTR ss:[edi],0x72
  419217:	adc    al,0x7c
  419219:	ins    DWORD PTR es:[edi],dx
  41921a:	mov    edx,0x34117e83
  41921f:	jg     0x4192a0
  419221:	mov    ecx,0x1057f70c
  419226:	jg     0x419281
  419228:	addr16 lock jp 0x4191dd
  41922c:	aad    0x6e
  41922e:	xor    eax,0x402cf550
  419233:	mov    dh,0x38
  419235:	dec    esp
  419236:	(bad)  
  419237:	repz aaa 
  419239:	int3   
  41923a:	aaa    
  41923b:	pop    esp
  41923c:	cdq    
  41923d:	and    al,0xfa
  41923f:	js     0x4191e4
  419241:	sub    dh,BYTE PTR [edi]
  419243:	push   esp
  419244:	and    al,0xac
  419246:	push   edi
  419247:	hlt    
  419248:	push   esi
  419249:	(bad)  
  41924a:	(bad)  
  41924b:	jge    0x4191e9
  41924d:	push   esi
  41924e:	pusha  
  41924f:	push   es
  419250:	or     bh,BYTE PTR [edi-0x52847dd3]
  419256:	nop
  419257:	xchg   esp,eax
  419258:	jne    0x41927a
  41925a:	iret   
  41925b:	sbb    ah,bh
  41925d:	inc    BYTE PTR [edx+0x73]
  419260:	xchg   esi,eax
  419261:	(bad)  
  419262:	pop    eax
  419263:	test   al,0x5d
  419265:	es jno 0x41921b
  419268:	adc    BYTE PTR [edi],dh
  41926a:	cs gs jmp 0x419271
  41926e:	push   esp
  41926f:	mov    fs,WORD PTR [ebp+0x57f0f660]
  419275:	pop    edi
  419276:	mov    ebp,0x8ad62b0a
  41927b:	in     al,dx
  41927c:	or     BYTE PTR [eax-0x5f],cl
  41927f:	and    BYTE PTR [esi+0xc],ah
  419282:	adc    al,0xc3
  419284:	pushf  
  419285:	xor    DWORD PTR [esi-0x1dad05b],eax
  41928b:	mov    al,0x11
  41928d:	sub    eax,0xb89c0c8e
  419292:	sub    eax,0xc34edfb0
  419297:	xor    eax,ebx
  419299:	daa    
  41929a:	pop    ds
  41929b:	push   ebx
  41929c:	xchg   edx,eax
  41929d:	jbe    0x419257
  41929f:	imul   esp,DWORD PTR [ecx],0xffffff93
  4192a2:	inc    ebx
  4192a3:	mov    edi,0x86b42934
  4192a8:	fistp  WORD PTR [eax]
  4192aa:	leave  
  4192ab:	aas    
  4192ac:	inc    ebp
  4192ad:	xor    eax,0xa199cd9f
  4192b2:	pop    ds
  4192b3:	out    0xa6,al
  4192b5:	pop    ecx
  4192b6:	fistp  WORD PTR [edi]
  4192b8:	push   ecx
  4192b9:	dec    ecx
  4192ba:	stos   DWORD PTR es:[edi],eax
  4192bb:	cmp    ah,bh
  4192bd:	fucomi st,st(4)
  4192bf:	addr16 xchg edi,eax
  4192c1:	mov    bh,0x42
  4192c3:	cmp    eax,0xc3916359
  4192c8:	sbb    al,0xa
  4192ca:	inc    edx
  4192cb:	lods   al,BYTE PTR ds:[esi]
  4192cc:	mov    BYTE PTR [ecx+edi*4+0x4b3cc5df],cl
  4192d3:	mov    edx,0x40152ceb
  4192d8:	xlat   BYTE PTR ds:[ebx]
  4192d9:	mov    eax,ds:0x5d4e2b28
  4192de:	push   es
  4192df:	pop    ebx
  4192e0:	hlt    
  4192e1:	das    
  4192e2:	jmp    0xff2f2998
  4192e7:	shl    DWORD PTR [esp+edx*2+0x717e0271],0xa9
  4192ef:	pop    edx
  4192f0:	clc    
  4192f1:	ds test eax,0xca08ceec
  4192f7:	fs jp  0x4192c8
  4192fa:	xchg   DWORD PTR [edx-0x6780b7c8],ebp
  419300:	xor    al,BYTE PTR [edx+0x56]
  419303:	ror    DWORD PTR [ebx+0x55],0x70
  419307:	ret    0x9366
  41930a:	(bad)  
  41930b:	or     edi,DWORD PTR [ebp+edi*2-0x65]
  41930f:	push   cs
  419310:	(bad)  [eax]
  419312:	pop    ss
  419313:	jo     0x4192d5
  419315:	sbb    DWORD PTR [ebp+0xe],edi
  419318:	fst    st(6)
  41931a:	adc    cl,BYTE PTR [esi+ebx*2+0x31]
  41931e:	fs es mov edi,0x7bd9bd6f
  419325:	stos   BYTE PTR es:[edi],al
  419326:	or     esi,ebp
  419328:	mov    bh,0x1a
  41932a:	xor    edi,DWORD PTR [ebx+0x17c950ff]
  419330:	pop    ebx
  419331:	xor    al,0xf5
  419333:	js     0x419300
  419335:	sbb    BYTE PTR [edi-0x2fc16a5c],0x50
  41933c:	push   0x67
  41933e:	repz retf 
  419340:	test   al,0xb6
  419342:	leave  
  419343:	jl     0x41938a
  419345:	inc    ebx
  419346:	cmp    BYTE PTR [edi+0x425d7f4f],cl
  41934c:	pop    esp
  41934d:	in     eax,0x60
  41934f:	rcr    DWORD PTR [edi-0x3c24d195],0x7e
  419356:	push   es
  419357:	dec    edx
  419358:	mov    al,0xb6
  41935a:	add    DWORD PTR [edi-0x46],edi
  41935d:	xor    eax,0xe65f72dc
  419362:	shl    BYTE PTR [ecx],1
  419364:	sub    DWORD PTR [edx-0x48],edx
  419367:	dec    edx
  419368:	xor    eax,0x249a3686
  41936d:	lds    ebp,FWORD PTR [eax+0x44b2c20e]
  419373:	mov    dh,0x14
  419375:	sbb    DWORD PTR ds:0x3092902c,eax
  41937b:	mov    esi,0xfa64897b
  419380:	fidivr WORD PTR [edx+0x20]
  419383:	imul   ecx,DWORD PTR [eax+0x16],0xe63569d6
  41938a:	pop    esi
  41938b:	pushf  
  41938c:	xchg   edx,esi
  41938e:	and    eax,0x396d2d00
  419393:	or     eax,0xd87513cb
  419398:	js     0x419339
  41939a:	in     al,0xbe
  41939c:	dec    edx
  41939d:	repz or al,0xcf
  4193a0:	xchg   edx,eax
  4193a1:	xor    ch,cl
  4193a3:	test   esp,edx
  4193a5:	adc    DWORD PTR [ecx],0x6890d614
  4193ab:	mov    ds:0xea565e78,al
  4193b0:	ret    0xa37f
  4193b3:	and    edx,0xbaf6dec0
  4193b9:	fxch   st(3)
  4193bb:	mov    dh,0x24
  4193bd:	and    dl,bl
  4193bf:	adc    eax,DWORD PTR [edi+0x2ff19320]
  4193c5:	pusha  
  4193c6:	mov    ch,BYTE PTR [edi+0x35]
  4193c9:	pop    es
  4193ca:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4193cc:	mov    bl,BYTE PTR [eax-0x6a830b3]
  4193d2:	mov    dh,0x22
  4193d4:	cmp    edx,ebp
  4193d6:	cli    
  4193d7:	retf   0x5229
  4193da:	and    al,0x3a
  4193dc:	adc    al,0x72
  4193de:	jg     0x419390
  4193e0:	fsub   st,st(0)
  4193e2:	aam    0x40
  4193e4:	fs inc edx
  4193e6:	mov    eax,ds:0x15f73631
  4193eb:	fst    DWORD PTR [ebx+0x4ac28752]
  4193f1:	fs shr esp,0x4b
  4193f5:	sub    BYTE PTR [ebp+0xde77de1],ah
  4193fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193fc:	lods   al,BYTE PTR ds:[esi]
  4193fd:	fcomip st,st(2)
  4193ff:	bound  edx,QWORD PTR [edx+ebp*1-0x50279c9f]
  419406:	or     DWORD PTR [edi],0x31
  419409:	pop    es
  41940a:	(bad)  
  41940b:	vandpd xmm7,xmm2,XMMWORD PTR [edi-0x204d485b]
  419413:	mov    ebp,0xec284069
  419418:	xchg   ebx,eax
  419419:	adc    BYTE PTR [edi],0x2
  41941c:	mov    dl,ch
  41941e:	inc    ebx
  41941f:	daa    
  419420:	mov    dh,0xea
  419422:	in     al,dx
  419423:	loope  0x419428
  419425:	ins    BYTE PTR es:[edi],dx
  419426:	push   esi
  419427:	pusha  
  419428:	test   al,0x4b
  41942a:	retf   0xf279
  41942d:	daa    
  41942e:	add    esi,esp
  419430:	cdq    
  419431:	stc    
  419432:	xor    dh,cl
  419434:	lods   eax,DWORD PTR ds:[esi]
  419435:	sub    eax,0xafea3ee
  41943a:	fild   WORD PTR [eax+ebx*2]
  41943d:	out    dx,al
  41943e:	neg    ch
  419440:	xchg   edx,eax
  419441:	or     DWORD PTR [edi],eax
  419443:	retf   
  419444:	stos   BYTE PTR es:[edi],al
  419445:	adc    eax,0x84a01243
  41944a:	and    ch,BYTE PTR [ebx-0x59e2f1c8]
  419450:	sar    BYTE PTR [edi],1
  419452:	xchg   edi,eax
  419453:	add    BYTE PTR [esi-0x55],ch
  419456:	(bad)  
  419457:	sahf   
  419458:	mov    ah,0x5c
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	lock and DWORD PTR [esi+0x73],eax
  41945f:	push   esp
  419460:	mov    bh,ah
  419462:	jle    0x4194b7
  419464:	aam    0x5a
  419466:	(bad)  
  419467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419468:	xor    ebx,0x31a78fba
  41946e:	xchg   edx,eax
  41946f:	(bad)  
  419471:	dec    eax
  419472:	lods   al,BYTE PTR ds:[esi]
  419473:	(bad)  
  419474:	lds    ecx,FWORD PTR es:[si-0x58]
  419479:	jl     0x419419
  41947b:	jmp    DWORD PTR es:[ebx+0x62]
  41947f:	gs or  eax,esp
  419482:	(bad)  
  419483:	dec    edx
  419484:	add    DWORD PTR [ebx+edi*1-0x69cf1d2e],ecx
  41948b:	mov    dh,0xdd
  41948d:	cmp    esi,DWORD PTR [ecx-0x11]
  419490:	inc    esp
  419491:	ficom  DWORD PTR [ecx]
  419493:	xchg   DWORD PTR [eax+0x1b9f3a54],ebx
  419499:	push   0xfffffff1
  41949b:	(bad)  
  41949c:	mov    ebx,0x98c4aed1
  4194a1:	iret   
  4194a2:	call   eax
  4194a4:	adc    DWORD PTR [edi+0x37be54ed],0xcca472d
  4194ae:	adc    BYTE PTR [edi],0xae
  4194b1:	icebp  
  4194b2:	(bad)  
  4194b3:	jb     0x41946e
  4194b5:	(bad)  
  4194b7:	gs cmp al,0xe7
  4194ba:	sbb    BYTE PTR [ebx+esi*1],bh
  4194bd:	sti    
  4194be:	inc    edx
  4194bf:	jl     0x4194a0
  4194c1:	mov    bl,0xec
  4194c3:	(bad)  
  4194c4:	leave  
  4194c5:	ds pop esp
  4194c7:	fiadd  WORD PTR [eax-0x31041e5d]
  4194cd:	push   ds
  4194ce:	or     eax,0xbe124b1
  4194d3:	sbb    ebx,DWORD PTR ds:0x557b6e10
  4194d9:	test   eax,0xe1b3731e
  4194de:	inc    ebx
  4194df:	mov    ds:0x8a5689ac,eax
  4194e4:	outs   dx,BYTE PTR ds:[esi]
  4194e5:	and    eax,0x53176da2
  4194ea:	mov    bl,0x37
  4194ec:	aas    
  4194ed:	stos   DWORD PTR es:[edi],eax
  4194ee:	cmp    eax,0xfa8b0b33
  4194f3:	scas   al,BYTE PTR es:[edi]
  4194f4:	(bad)  
  4194f5:	cmp    al,0x50
  4194f7:	xor    eax,0xd86c9c43
  4194fc:	mov    eax,0x30d67b31
  419501:	xor    ecx,DWORD PTR [eax-0x4a]
  419504:	sub    eax,0xd592bd38
  419509:	inc    ecx
  41950a:	jb     0x419522
  41950c:	sbb    bh,BYTE PTR [edx+edi*8+0xd979428]
  419513:	cmp    ebx,DWORD PTR [edi]
  419515:	mov    ebp,0x46e1706e
  41951a:	adc    dl,bl
  41951c:	daa    
  41951d:	call   0x59bf2d12
  419522:	sub    BYTE PTR [edi-0x55b67cea],ch
  419528:	xor    eax,0x9b6bd6f1
  41952d:	ret    0x43e4
  419530:	sbb    dh,BYTE PTR [eax-0x58302c4c]
  419536:	mov    ah,0x58
  419538:	inc    ebx
  419539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41953a:	out    0xc7,eax
  41953c:	stc    
  41953d:	jns    0x419579
  41953f:	popf   
  419540:	into   
  419541:	add    ch,bh
  419543:	inc    eax
  419544:	dec    ecx
  419545:	dec    ecx
  419546:	(bad)  
  419547:	sbb    eax,0xbdcbc61c
  41954c:	and    eax,0x64f35cb2
  419551:	in     al,0xf6
  419553:	mov    dh,BYTE PTR [ebx]
  419555:	outs   dx,BYTE PTR ds:[esi]
  419556:	dec    edx
  419557:	jns    0x41954c
  419559:	xor    DWORD PTR [ecx+0x67],esp
  41955c:	dec    edi
  41955d:	jl     0x419539
  41955f:	mov    es,WORD PTR [esi+0x2f]
  419562:	mov    eax,ds:0xe088588e
  419567:	push   eax
  419568:	xchg   BYTE PTR [ebp-0x24],bh
  41956b:	inc    edx
  41956c:	inc    esp
  41956d:	mov    cl,0x57
  41956f:	sbb    esp,DWORD PTR [ecx-0x69]
  419572:	shr    DWORD PTR [esi+0x53],cl
  419575:	loope  0x41952e
  419577:	xchg   ecx,eax
  419578:	es fwait
  41957a:	adc    DWORD PTR [ecx+0x1cf30964],edi
  419580:	jnp    0x41955a
  419582:	aam    0x83
  419584:	xor    eax,0xcf83f08f
  419589:	leave  
  41958a:	sbb    BYTE PTR [ecx],dh
  41958c:	in     al,0xd8
  41958e:	xor    eax,0xe7ee1238
  419593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419594:	pop    ecx
  419595:	jne    0x419555
  419597:	mov    dl,0xe7
  419599:	ja     0x419541
  41959b:	add    al,0x26
  41959d:	or     ebx,DWORD PTR [edi+0x20796452]
  4195a3:	push   eax
  4195a4:	pusha  
  4195a5:	and    esp,DWORD PTR [eax-0x45cb2737]
  4195ab:	xor    DWORD PTR [ecx-0x3f],ebx
  4195ae:	rcr    BYTE PTR [esi+ecx*4],0xc8
  4195b2:	data16 aad 0xd2
  4195b5:	inc    ebp
  4195b6:	fdiv   DWORD PTR [esi-0x57]
  4195b9:	pusha  
  4195ba:	loope  0x419595
  4195bc:	leavew 
  4195be:	mov    al,0xaa
  4195c0:	(bad)  
  4195c1:	rcl    DWORD PTR [edx+0xd],cl
  4195c4:	jae    0x419632
  4195c6:	out    0x84,eax
  4195c8:	sbb    al,0x9f
  4195ca:	dec    esi
  4195cb:	add    BYTE PTR [ecx],0x6f
  4195ce:	inc    esp
  4195cf:	inc    esi
  4195d0:	fnstsw WORD PTR [edi+0x37a5d365]
  4195d6:	fnsave [esi+0x77bd0d06]
  4195dc:	jl     0x4195e0
  4195de:	gs jae 0x4195b1
  4195e1:	push   ebp
  4195e2:	enter  0x78ef,0x20
  4195e6:	mov    ch,0xc4
  4195e8:	dec    esp
  4195e9:	xor    BYTE PTR [ecx+0x30a57611],ah
  4195ef:	mov    al,gs:0xff87c0ce
  4195f5:	test   al,0xc
  4195f7:	(bad)  
  4195f9:	(bad)  
  4195fa:	mov    esi,0xc1afe8cc
  4195ff:	(bad)  
  419600:	test   DWORD PTR [ebx-0x5fd70400],0x67390085
  41960a:	ret    
  41960b:	push   es
  41960c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41960d:	ss inc ecx
  41960f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419610:	mov    eax,ds:0x12c7a4c1
  419615:	retf   
  419616:	push   ecx
  419617:	cli    
  419618:	inc    ebp
  419619:	aam    0xe2
  41961b:	jl     0x419600
  41961d:	rcr    BYTE PTR [edi-0x3aff6c29],cl
  419623:	ds push ds
  419625:	jl     0x4196a3
  419627:	xchg   ebx,eax
  419628:	sub    BYTE PTR [ebx-0x49],al
  41962b:	cmp    eax,0x995f59e7
  419630:	std    
  419631:	pop    ss
  419632:	loop   0x419606
  419634:	xchg   edi,eax
  419635:	ins    DWORD PTR es:[edi],dx
  419636:	pop    esi
  419637:	and    dh,BYTE PTR [edx+0x19c58ae5]
  41963d:	and    esi,0xce5730f1
  419643:	pop    ebp
  419644:	ret    0x970d
  419647:	sbb    DWORD PTR [eax-0x4b],0xe
  41964b:	xor    al,0x55
  41964d:	jns    0x41968b
  41964f:	mov    eax,0x70e78927
  419654:	push   edi
  419655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419656:	leave  
  419657:	xchg   esp,eax
  419658:	jae    0x419642
  41965a:	out    0xb8,al
  41965c:	hlt    
  41965d:	sbb    ebx,DWORD PTR [ebx+0x7f432d15]
  419663:	fiadd  WORD PTR [ecx+0x4ed86ef9]
  419669:	pop    ss
  41966a:	(bad)  
  41966b:	dec    edi
  41966c:	pop    ebx
  41966d:	dec    esp
  41966e:	adc    ch,dl
  419670:	dec    edi
  419671:	adc    eax,0xb5edd259
  419676:	sahf   
  419677:	jle    0x4196dd
  419679:	lea    eax,ds:0xdcdd9c4c
  41967f:	pop    ebp
  419680:	ins    BYTE PTR es:[edi],dx
  419681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419682:	out    dx,al
  419683:	(bad)  
  419684:	push   ds
  419685:	xor    al,0x81
  419687:	sahf   
  419688:	repz leave 
  41968a:	sbb    eax,0x11ff1986
  41968f:	xor    al,0x2e
  419691:	neg    BYTE PTR [esi-0x75d786b4]
  419697:	jne    0x419714
  419699:	xor    DWORD PTR [edi+0x3ea23081],edx
  41969f:	test   bh,ah
  4196a1:	pop    edi
  4196a2:	push   0xffffff82
  4196a4:	pop    edx
  4196a5:	xchg   ebx,eax
  4196a6:	jbe    0x41967a
  4196a8:	sbb    eax,ebx
  4196aa:	stc    
  4196ab:	and    DWORD PTR [ecx+ebx*2],0xf092ca91
  4196b2:	shr    DWORD PTR [ebp-0x3],cl
  4196b5:	pop    ds
  4196b6:	es mov ebx,0x5bac96ff
  4196bc:	mov    cs:0x9f8f7677,al
  4196c2:	dec    ebp
  4196c3:	mov    al,0xed
  4196c5:	lods   al,BYTE PTR ds:[esi]
  4196c6:	mov    ebx,0x8b6d8a7f
  4196cb:	xchg   BYTE PTR [edx],bh
  4196cd:	push   esp
  4196ce:	mov    ch,0x20
  4196d0:	sbb    esi,DWORD PTR [edi+0x67]
  4196d3:	daa    
  4196d4:	mov    ah,0x8b
  4196d6:	dec    edx
  4196d7:	mov    esp,0x9788b7d6
  4196dc:	adc    DWORD PTR [edx+ebx*2],0x4a
  4196e0:	xchg   ebx,eax
  4196e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196e2:	and    eax,0x29c0df2f
  4196e7:	dec    ebx
  4196e8:	cmp    eax,0xd31b2c3b
  4196ed:	call   0x29e8911d
  4196f2:	or     BYTE PTR [esi-0x21],dh
  4196f5:	push   eax
  4196f6:	mov    ds:0xf31bd182,al
  4196fb:	push   es
  4196fc:	fnstcw WORD PTR [esi]
  4196fe:	and    ch,BYTE PTR [esi-0x27]
  419701:	adc    BYTE PTR [ebx+ebx*8+0x4d],bh
  419705:	push   0xb
  419707:	inc    ebx
  419708:	lea    edx,[ecx+0x71]
  41970b:	push   ebx
  41970c:	cwde   
  41970d:	inc    eax
  41970e:	iret   
  41970f:	repnz mov ebp,0x1995a743
  419715:	mov    ch,0xbd
  419717:	mov    eax,ds:0xf366d97e
  41971c:	out    dx,eax
  41971d:	sub    esp,esi
  41971f:	std    
  419720:	in     eax,0x38
  419722:	and    esi,DWORD PTR [esi-0x28]
  419725:	or     eax,0x4da03341
  41972a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41972b:	jge    0x419785
  41972d:	mov    bh,0xdd
  41972f:	pop    edi
  419730:	out    0x60,al
  419732:	loopne 0x4196b7
  419734:	pop    ds
  419735:	fwait
  419736:	push   ebx
  419737:	cli    
  419738:	pop    ss
  419739:	cmp    eax,0xaebacde9
  41973e:	(bad)  
  41973f:	scas   al,BYTE PTR es:[edi]
  419740:	jmp    0x4196ec
  419742:	mov    gs,edi
  419744:	sub    cl,BYTE PTR [ecx+0x4]
  419747:	call   DWORD PTR [edx]
  419749:	loop   0x4197ab
  41974b:	popf   
  41974c:	enter  0xfc4f,0x9f
  419750:	je     0x41971a
  419752:	fs jmp 0x41973b
  419755:	aad    0x38
  419757:	(bad)  [eax+eax*8]
  41975a:	sbb    al,0xcf
  41975c:	xor    DWORD PTR [ebx+0x1bd7fea3],edx
  419762:	int3   
  419763:	ds out 0xf7,eax
  419766:	xchg   ecx,eax
  419767:	xchg   esi,eax
  419768:	stc    
  419769:	mov    al,0x36
  41976b:	sub    edx,DWORD PTR [edi+0x2e401ecf]
  419771:	add    al,0x32
  419773:	push   0xffffffa4
  419775:	cdq    
  419776:	sbb    al,0x61
  419778:	popa   
  419779:	xchg   edx,eax
  41977a:	bound  ebp,QWORD PTR [esi]
  41977c:	out    dx,al
  41977d:	pop    edi
  41977e:	sub    BYTE PTR [edi-0x4e12a2b9],0x2d
  419785:	and    al,0xd6
  419787:	xchg   ecx,eax
  419788:	shl    al,0xff
  41978b:	mov    WORD PTR [ecx],?
  41978d:	xor    BYTE PTR [esi+0xd],ah
  419790:	or     DWORD PTR [ebx+0x77],ebp
  419793:	push   0xffffffb9
  419795:	sbb    eax,esi
  419797:	sbb    eax,0xda225dc3
  41979c:	ficom  WORD PTR [edi+0x47a9e496]
  4197a2:	fcomp  QWORD PTR [edx+0x59]
  4197a5:	xor    dh,ch
  4197a7:	mov    esi,0x1a3b0e59
  4197ac:	aam    0x1c
  4197ae:	pop    edx
  4197af:	test   DWORD PTR [edi-0x8],edx
  4197b2:	mov    WORD PTR [ebx-0x70bad041],?
  4197b8:	arpl   si,bx
  4197ba:	imul   eax,eax,0xbf325e79
  4197c0:	in     eax,0xeb
  4197c2:	sub    eax,0x663529ba
  4197c7:	mov    esp,eax
  4197c9:	sbb    eax,DWORD PTR ds:0x391e88a5
  4197cf:	sti    
  4197d0:	mov    dh,0xf2
  4197d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197d3:	cmc    
  4197d4:	mov    ch,0xe2
  4197d6:	mov    esp,0x6fdd241a
  4197db:	rep data16 stos BYTE PTR es:[edi],al
  4197de:	add    dl,BYTE PTR [ebx-0x2e412dc4]
  4197e4:	sub    eax,0x5e44b06b
  4197e9:	dec    eax
  4197ea:	xchg   edx,eax
  4197eb:	fstp   QWORD PTR [esi+0x13]
  4197ee:	jmp    0x4197d0
  4197f0:	jle    0x4197ee
  4197f2:	out    0x85,al
  4197f4:	sbb    al,0x94
  4197f6:	mov    al,ds:0x6dc6209
  4197fb:	cs int3 
  4197fd:	(bad)  
  4197fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ff:	inc    edi
  419800:	inc    esp
  419801:	dec    eax
  419802:	test   eax,0x511f59c5
  419807:	mov    edi,0xaf0c7348
  41980c:	jo     0x41988d
  41980e:	pop    ecx
  41980f:	imul   edx,DWORD PTR [eax+0x34],0xfffffffa
  419813:	ins    DWORD PTR es:[edi],dx
  419814:	fiadd  DWORD PTR [ebx+edi*8+0x40]
  419818:	push   eax
  419819:	cli    
  41981a:	mov    bh,BYTE PTR [esi]
  41981c:	dec    ebx
  41981d:	pop    ss
  41981e:	adc    eax,0xd2e42c88
  419823:	aam    0x47
  419825:	xchg   esi,eax
  419826:	cs icebp 
  419828:	addr16 jns 0x4197d1
  41982b:	inc    esp
  41982c:	mov    fs,WORD PTR cs:[ecx+eax*8+0x9e73093]
  419834:	out    0x36,al
  419836:	xchg   ebx,eax
  419837:	push   cs
  419838:	clc    
  419839:	mov    ah,0xe7
  41983b:	rcr    BYTE PTR [eax-0x29],1
  41983e:	aaa    
  41983f:	sub    eax,0x9f99625d
  419844:	lahf   
  419845:	inc    ebp
  419846:	sti    
  419847:	cmp    eax,0xfb045ec
  41984c:	pop    ecx
  41984d:	cmp    ebx,DWORD PTR [eax+esi*1]
  419850:	mov    esp,0x7013b442
  419855:	pop    edx
  419856:	in     eax,dx
  419857:	push   esp
  419858:	or     BYTE PTR [ebx+0x3d5a1abd],dl
  41985e:	push   edi
  41985f:	ret    
  419860:	cdq    
  419861:	fs into 
  419863:	mov    ebx,0xa7d9500c
  419868:	cli    
  419869:	xlat   BYTE PTR ds:[ebx]
  41986a:	mov    DWORD PTR ds:0x55cfbaa4,ebx
  419870:	imul   edx,DWORD PTR [ecx],0xd89cae8e
  419876:	mov    edx,0x9b186d44
  41987b:	ret    
  41987c:	(bad)  
  41987d:	jmp    0xad92be5e
  419882:	out    dx,al
  419883:	and    al,0xdd
  419885:	add    DWORD PTR [eax],ebp
  419887:	jno    0x4198c9
  419889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41988a:	push   esp
  41988b:	(bad)  
  41988c:	hlt    
  41988d:	mov    cl,0xec
  41988f:	xchg   esi,esp
  419891:	mov    bh,0xe2
  419893:	or     cl,al
  419895:	push   esi
  419896:	push   ecx
  419897:	fist   DWORD PTR [eax-0x3ba4c4bb]
  41989d:	pop    ecx
  41989e:	outs   dx,DWORD PTR ds:[esi]
  41989f:	in     al,dx
  4198a0:	adc    dl,BYTE PTR [edi+0x9]
  4198a3:	mov    edi,0x59a4e259
  4198a8:	loope  0x4198c5
  4198aa:	stos   DWORD PTR es:[edi],eax
  4198ab:	jecxz  0x419875
  4198ad:	add    al,0x3a
  4198af:	jecxz  0x4198bd
  4198b1:	jmp    0xb5720fee
  4198b6:	push   ebx
  4198b7:	enter  0x6a07,0x42
  4198bb:	mov    WORD PTR [eax],fs
  4198bd:	scas   al,BYTE PTR es:[edi]
  4198be:	sbb    DWORD PTR [ebp+esi*2-0x3a63d855],0x4f
  4198c6:	mov    ecx,0xe30de319
  4198cb:	and    DWORD PTR [ebp-0x6891f1ac],ebp
  4198d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d2:	push   ecx
  4198d3:	stos   DWORD PTR es:[edi],eax
  4198d4:	shl    al,cl
  4198d6:	sub    edx,DWORD PTR [edi+0x53]
  4198d9:	psllw  mm4,mm7
  4198dc:	and    dh,BYTE PTR [ebp-0x39d2a8a6]
  4198e2:	test   eax,0xa3c6328a
  4198e7:	pusha  
  4198e8:	cdq    
  4198e9:	shl    BYTE PTR ds:0x3823172f,0xf4
  4198f0:	cld    
  4198f1:	rol    DWORD PTR [edi+0x20],0xdc
  4198f5:	psubsw mm2,mm6
  4198f8:	jb     0x419966
  4198fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fb:	sahf   
  4198fc:	mov    bl,0x5b
  4198fe:	jo     0x41990c
  419900:	data16 (bad) 
  419902:	lock loope 0x41989c
  419905:	jbe    0x4198c6
  419907:	xchg   esi,eax
  419908:	mov    bh,bl
  41990a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990b:	fsubr  QWORD PTR [eax+0x9]
  41990e:	xor    dh,cl
  419910:	scas   al,BYTE PTR es:[edi]
  419911:	dec    ecx
  419912:	inc    ecx
  419913:	push   ecx
  419914:	sbb    dl,BYTE PTR ds:0x4a16a0e0
  41991a:	(bad)  
  41991b:	neg    BYTE PTR [ebx+0x10c40452]
  419921:	mov    ch,0xdc
  419923:	or     BYTE PTR [edi],0x2a
  419926:	mov    al,ds:0x69590bc7
  41992b:	data16 mov ds:0x75b4e597,al
  419931:	inc    edx
  419932:	add    BYTE PTR ds:0x13d48b07,cl
  419938:	ret    
  419939:	aad    0x79
  41993b:	call   0x38d9:0xc86294c1
  419942:	mov    esp,0x46ddd941
  419947:	and    DWORD PTR [esi-0x2ea8d260],edi
  41994d:	jge    0x419902
  41994f:	sti    
  419950:	dec    edx
  419951:	aas    
  419952:	adc    DWORD PTR [ebx],ecx
  419954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419955:	jg     0x4199c5
  419957:	nop
  419958:	outs   dx,BYTE PTR ds:[esi]
  419959:	imul   esi,DWORD PTR [eax-0x80],0xffffff85
  41995d:	xchg   bl,dl
  41995f:	jp     0x4199d7
  419961:	rol    DWORD PTR [ebp+0x26d9b476],1
  419967:	jne    0x419990
  419969:	pusha  
  41996a:	loop   0x4198ff
  41996c:	sbb    eax,0xc1696087
  419971:	into   
  419972:	jb     0x4199e0
  419974:	xor    BYTE PTR [ecx-0x27],ch
  419977:	int    0xcf
  419979:	or     al,0xdc
  41997b:	or     DWORD PTR [edi+esi*1],ebx
  41997e:	scas   al,BYTE PTR es:[edi]
  41997f:	pop    ss
  419980:	enter  0x6cea,0x48
  419984:	sbb    al,0x25
  419986:	push   0x48
  419988:	ins    DWORD PTR es:[edi],dx
  419989:	xor    ebp,DWORD PTR [edx+eax*1+0x50]
  41998d:	xor    edx,DWORD PTR [edi+ebx*8-0x58]
  419991:	cwde   
  419992:	sahf   
  419993:	pop    edx
  419994:	push   0xffffffda
  419996:	in     eax,0xa
  419998:	scas   al,BYTE PTR es:[edi]
  419999:	sub    al,0x47
  41999b:	(bad)  
  41999d:	mov    eax,ds:0x724f5f06
  4199a2:	pop    esp
  4199a3:	outs   dx,DWORD PTR ds:[esi]
  4199a4:	rcr    DWORD PTR [ebx-0x7c],1
  4199a7:	es cmp al,0x20
  4199aa:	(bad)  
  4199ab:	inc    edi
  4199ac:	jl     0x419a01
  4199ae:	pop    ebx
  4199af:	repz (bad) 
  4199b2:	das    
  4199b3:	jae    0x419a16
  4199b5:	stos   BYTE PTR es:[edi],al
  4199b6:	mov    ds:0x9ff5aecb,al
  4199bb:	cld    
  4199bc:	mov    al,ds:0xb3b59877
  4199c1:	xor    DWORD PTR [ecx],esp
  4199c3:	stc    
  4199c4:	mov    cl,0xec
  4199c6:	loop   0x419a25
  4199c8:	or     al,0x56
  4199ca:	inc    eax
  4199cb:	adc    eax,0x2aee7f1a
  4199d0:	push   eax
  4199d1:	push   ds
  4199d2:	push   es
  4199d3:	test   BYTE PTR [ecx-0x19],bl
  4199d6:	sub    eax,0x92f3fb54
  4199db:	(bad)  
  4199dc:	pop    ebx
  4199dd:	jmp    DWORD PTR [ecx-0x9]
  4199e0:	jp     0x419a54
  4199e2:	jmp    0x33da74c8
  4199e7:	xchg   edi,eax
  4199e8:	aad    0x3f
  4199ea:	fadd   DWORD PTR [ebx+esi*4-0x1d]
  4199ee:	sti    
  4199ef:	dec    esi
  4199f0:	xchg   BYTE PTR [ecx],ah
  4199f2:	loopne 0x419989
  4199f4:	aam    0x3e
  4199f6:	mov    WORD PTR [eax-0x13f2d298],gs
  4199fc:	ds push cs
  4199fe:	dec    edi
  4199ff:	jmp    0x73f68cff
  419a04:	(bad)  
  419a05:	aad    0x76
  419a07:	shr    DWORD PTR [edi+0x17693738],0x42
  419a0e:	and    al,0x35
  419a10:	mov    edx,0x8103fce0
  419a15:	dec    ebx
  419a16:	(bad)  
  419a17:	cli    
  419a18:	xchg   edx,eax
  419a19:	xchg   edx,eax
  419a1a:	inc    dx
  419a1c:	shl    DWORD PTR [esi+ebx*4-0x6e90d256],0x20
  419a24:	sbb    BYTE PTR [ebp+0x2d411bd6],cl
  419a2a:	js     0x4199b9
  419a2c:	mov    DWORD PTR [edi+ecx*8+0x57],0x7ed01de2
  419a34:	mov    al,0x0
  419a36:	out    dx,eax
  419a37:	sbb    BYTE PTR [edx+0x6665f987],bh
  419a3d:	push   es
  419a3e:	mov    dl,0xe7
  419a40:	pop    edx
  419a41:	mov    cl,0x57
  419a43:	pop    ss
  419a44:	adc    BYTE PTR [eax+0x53],cl
  419a47:	aam    0x98
  419a49:	mov    esi,0x9d62a17b
  419a4e:	jns    0x419abb
  419a50:	push   0x1f
  419a52:	retf   0x95e6
  419a55:	cmp    BYTE PTR [edi],0x6b
  419a58:	ins    DWORD PTR es:[edi],dx
  419a59:	xlat   BYTE PTR ds:[ebx]
  419a5a:	or     ebx,esi
  419a5c:	dec    ebx
  419a5d:	pop    ebp
  419a5e:	test   DWORD PTR [edx-0x7c8fed26],edx
  419a64:	cld    
  419a65:	jne    0x419a35
  419a67:	or     dh,BYTE PTR [ebp+ebp*2+0x5c]
  419a6b:	hlt    
  419a6c:	mov    ch,0xc6
  419a6e:	fdivr  st(1),st
  419a70:	outs   dx,BYTE PTR ds:[esi]
  419a71:	popa   
  419a72:	icebp  
  419a73:	daa    
  419a74:	sar    esp,1
  419a76:	(bad)  
  419a77:	fnstcw WORD PTR [ecx+0x4]
  419a7a:	test   DWORD PTR [esi],ecx
  419a7c:	cmc    
  419a7d:	mov    dl,0x6c
  419a7f:	dec    edx
  419a80:	inc    ecx
  419a81:	arpl   WORD PTR [ebx-0x23638fb9],si
  419a87:	adc    bh,BYTE PTR ds:0xb2f01fb4
  419a8d:	enter  0x72ee,0xf5
  419a91:	loopne 0x419b0b
  419a93:	pop    ds
  419a94:	cdq    
  419a95:	stos   DWORD PTR es:[edi],eax
  419a96:	ja     0x419aeb
  419a98:	and    dl,BYTE PTR ds:0x62e06089
  419a9e:	jg     0x419a63
  419aa0:	cmp    ah,BYTE PTR [esi+0x5cc092cb]
  419aa6:	lahf   
  419aa7:	xchg   ah,al
  419aa9:	dec    ebp
  419aaa:	xor    BYTE PTR [esi-0x49ffd56f],ch
  419ab0:	inc    edi
  419ab1:	call   0x2a6f60e7
  419ab6:	and    DWORD PTR ss:0x431ea1f9,ecx
  419abd:	loope  0x419a89
  419abf:	inc    edi
  419ac0:	repz fst DWORD PTR [esi]
  419ac3:	out    dx,al
  419ac4:	imul   ebp,DWORD PTR [esi+0x6a7f5570],0x75a24320
  419ace:	daa    
  419acf:	fwait
  419ad0:	ins    DWORD PTR es:[edi],dx
  419ad1:	inc    ecx
  419ad2:	or     esi,DWORD PTR [ebx+edi*2-0x5]
  419ad6:	cdq    
  419ad7:	mov    al,ds:0xeb10684d
  419adc:	fnstcw WORD PTR [edi]
  419ade:	icebp  
  419adf:	jge    0x419b44
  419ae1:	push   es
  419ae2:	fwait
  419ae3:	jae    0x419b52
  419ae5:	(bad)  
  419ae6:	mov    eax,0x551bf0db
  419aeb:	fwait
  419aec:	jae    0x419b49
  419aee:	cmp    eax,0x8324d0fd
  419af3:	mov    bl,0x88
  419af5:	lds    ecx,FWORD PTR [eax+eiz*2-0x2e]
  419af9:	ins    BYTE PTR es:[edi],dx
  419afa:	fistp  WORD PTR [edi+edx*4-0x3d]
  419afe:	jp     0x419ad5
  419b00:	iret   
  419b01:	and    edx,eax
  419b03:	stc    
  419b04:	and    eax,0x499f0763
  419b09:	cdq    
  419b0a:	sub    eax,eax
  419b0c:	push   esp
  419b0d:	jmp    0x419af2
  419b0f:	clc    
  419b10:	inc    BYTE PTR [edi-0xef4bae0]
  419b16:	inc    esi
  419b17:	mov    ebp,0x8ac8de95
  419b1c:	dec    ebx
  419b1d:	inc    ebp
  419b1e:	and    ah,cl
  419b20:	dec    ebp
  419b21:	ret    0x8c9b
  419b24:	shr    DWORD PTR [edi],cl
  419b26:	popf   
  419b27:	mov    gs,ebx
  419b29:	jmp    0x54361520
  419b2e:	popa   
  419b2f:	ret    0xd0cc
  419b32:	mov    ecx,0xfd50d856
  419b37:	mov    bh,dl
  419b39:	dec    eax
  419b3a:	(bad)  
  419b3b:	hlt    
  419b3c:	test   DWORD PTR [esi-0x10],esi
  419b3f:	jns    0x419b61
  419b41:	jmp    0x419b5f
  419b43:	dec    esp
  419b44:	mov    dl,0xf2
  419b46:	cmp    ebp,ecx
  419b48:	push   ebp
  419b49:	push   ds
  419b4a:	xchg   edi,eax
  419b4b:	fistp  QWORD PTR [ebx+0x2c]
  419b4e:	std    
  419b4f:	mov    esi,0xa03bcfab
  419b54:	dec    esp
  419b55:	(bad)  
  419b57:	sub    al,dl
  419b59:	test   ebx,eax
  419b5b:	xchg   esi,eax
  419b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b5d:	and    eax,0xfe5bfb6e
  419b62:	loop   0x419b7c
  419b64:	rcl    al,1
  419b66:	mov    bh,0xa9
  419b68:	imul   ebx,DWORD PTR [ebp-0x1d],0x2e7dc656
  419b6f:	fiadd  WORD PTR [edi]
  419b71:	scas   al,BYTE PTR es:[edi]
  419b72:	ret    0x3234
  419b75:	sbb    esi,DWORD PTR [esi]
  419b77:	sub    eax,0x358ccbd5
  419b7c:	aam    0xcd
  419b7e:	mov    DWORD PTR [esi+eiz*1+0x8],0xc0d27dc
  419b86:	in     eax,dx
  419b87:	aaa    
  419b88:	mov    bl,0x7d
  419b8a:	ss dec eax
  419b8c:	xlat   BYTE PTR ds:[ebx]
  419b8d:	out    dx,al
  419b8e:	lock or BYTE PTR [eax],0x2f
  419b92:	xor    eax,DWORD PTR [edi+0x37]
  419b95:	or     al,0xad
  419b97:	sbb    eax,0x662e0851
  419b9c:	(bad)  
  419b9d:	mov    esi,0xfe882425
  419ba2:	imul   edi,ecx,0x58
  419ba5:	add    ebx,DWORD PTR [edi+0x3ff96563]
  419bab:	or     dh,ch
  419bad:	inc    ebp
  419bae:	jns    0x419b69
  419bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb1:	rcl    esi,0x4b
  419bb4:	mov    ds,esp
  419bb6:	jo     0x419b41
  419bb8:	ins    BYTE PTR es:[edi],dx
  419bb9:	push   edx
  419bba:	daa    
  419bbb:	clc    
  419bbc:	test   DWORD PTR [eax],esi
  419bbe:	mov    eax,ds:0xa4361e4a
  419bc3:	jge    0x419bb8
  419bc5:	fldenv [ecx+edi*2]
  419bc8:	inc    eax
  419bc9:	sar    DWORD PTR [esp+eax*1+0x19],cl
  419bcd:	mov    cl,dh
  419bcf:	jg     0x419beb
  419bd1:	and    eax,0xa43d55f4
  419bd6:	out    dx,eax
  419bd7:	div    bh
  419bd9:	jg     0x419bea
  419bdb:	xchg   ebx,eax
  419bdc:	(bad)  
  419bdd:	es mov eax,0x6917dbb7
  419be3:	mov    dh,0x5e
  419be5:	(bad)  
  419be6:	fcmovb st,st(2)
  419be8:	imul   esp,esp,0x5647a2e
  419bee:	(bad)  
  419bf0:	dec    ch
  419bf2:	mov    edi,0xbca2d836
  419bf7:	push   ebp
  419bf8:	pushf  
  419bf9:	xchg   BYTE PTR [ecx+edi*4],cl
  419bfc:	daa    
  419bfd:	bnd js 0x419c47
  419c00:	outs   dx,BYTE PTR ds:[esi]
  419c01:	dec    ebp
  419c02:	cmp    al,0xd4
  419c04:	inc    eax
  419c05:	adc    DWORD PTR [esi+0x2a],ebx
  419c08:	aaa    
  419c09:	nop
  419c0a:	fdiv   DWORD PTR [eax+ebx*8]
  419c0d:	mov    WORD PTR [ebp-0x310870bf],es
  419c13:	xor    ebp,DWORD PTR [edx+esi*2-0x21]
  419c17:	sub    ch,dl
  419c19:	mov    ecx,0x5adbe883
  419c1e:	jo     0x20e8b3fc
  419c24:	retf   0x99e7
  419c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c28:	pop    edi
  419c29:	inc    ebp
  419c2a:	cs pushf 
  419c2c:	mov    dl,bh
  419c2e:	jle    0x419c57
  419c30:	dec    eax
  419c31:	add    edx,DWORD PTR [edx]
  419c33:	mov    ds:0xdd77c655,eax
  419c38:	or     DWORD PTR [eax],ebp
  419c3a:	pushf  
  419c3b:	dec    esi
  419c3c:	mov    WORD PTR [ebx+edx*4-0x63],?
  419c40:	push   ecx
  419c41:	jmp    0xf04b:0x8d1a27d0
  419c48:	push   edx
  419c49:	mov    ebx,0xdba51ea7
  419c4e:	dec    esp
  419c4f:	adc    al,0xec
  419c51:	rol    BYTE PTR [edx+0x1c],cl
  419c54:	mov    ecx,0xd2e1cea7
  419c59:	mov    ds:0x163fd317,al
  419c5e:	fcmovu st,st(5)
  419c60:	cmc    
  419c61:	(bad)  
  419c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c64:	repz ds cli 
  419c67:	pop    edi
  419c68:	mov    ds:0x842eee98,al
  419c6d:	xor    al,0xe1
  419c6f:	jmp    0x419c91
  419c71:	inc    ecx
  419c72:	nop
  419c73:	cmp    BYTE PTR [edx+0x62],dl
  419c76:	pop    ecx
  419c77:	or     eax,0xaff2eac3
  419c7c:	rcr    BYTE PTR [edx],cl
  419c7e:	mov    cl,bh
  419c80:	push   cs
  419c81:	jge    0x419c2b
  419c83:	pop    esi
  419c84:	cld    
  419c85:	push   es
  419c86:	xor    cl,BYTE PTR [edi+edi*2+0x5f]
  419c8a:	ficom  DWORD PTR [ebx]
  419c8c:	ds xor edi,ebx
  419c8f:	pop    ds
  419c90:	les    eax,FWORD PTR ds:0x6498fc28
  419c96:	or     ebp,DWORD PTR [esi]
  419c98:	retf   0x39ba
  419c9b:	cmp    bh,cl
  419c9d:	std    
  419c9e:	lock mov dh,0xe3
  419ca1:	arpl   WORD PTR [edi-0x6ddd12c7],si
  419ca7:	scas   al,BYTE PTR es:[edi]
  419ca8:	pop    ds
  419ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419caa:	pop    edi
  419cab:	dec    ebp
  419cac:	adc    cl,ah
  419cae:	enter  0x4ff8,0x86
  419cb2:	daa    
  419cb3:	inc    esp
  419cb4:	adc    eax,0x1f7d2372
  419cb9:	mov    DWORD PTR [ecx+ebp*8],edx
  419cbc:	aas    
  419cbd:	push   0x2292582a
  419cc2:	jno    0x419cf6
  419cc4:	in     al,0xa1
  419cc6:	fdiv   st,st(4)
  419cc8:	xchg   esp,eax
  419cc9:	mov    dl,0xe
  419ccb:	push   ebx
  419ccc:	call   0x61e708e7
  419cd1:	ja     0x419c7a
  419cd3:	out    0x5a,eax
  419cd5:	stos   DWORD PTR es:[edi],eax
  419cd6:	stos   DWORD PTR es:[edi],eax
  419cd7:	pop    ds
  419cd8:	inc    edx
  419cd9:	enter  0xdb65,0xed
  419cdd:	icebp  
  419cde:	jl     0x419d10
  419ce0:	loope  0x419cc2
  419ce2:	addr16 daa 
  419ce4:	and    BYTE PTR [ecx],0x58
  419ce7:	pop    edx
  419ce8:	or     al,0xa5
  419cea:	in     al,0x63
  419cec:	xlat   BYTE PTR ds:[ebx]
  419ced:	push   ebp
  419cee:	lock (bad) 
  419cf0:	neg    DWORD PTR [edi-0x3a]
  419cf3:	mov    eax,ds:0x4da84f7d
  419cf8:	out    0x51,al
  419cfa:	aad    0xbf
  419cfc:	das    
  419cfd:	or     eax,0x64a7016a
  419d02:	sar    DWORD PTR [ecx+0x49],cl
  419d05:	not    esp
  419d07:	fsubr  st,st(1)
  419d09:	xor    BYTE PTR [esi+0x1e],ah
  419d0c:	icebp  
  419d0d:	push   edx
  419d0e:	(bad)  
  419d0f:	leave  
  419d10:	sub    BYTE PTR [edx+eiz*2],dh
  419d13:	pop    ebx
  419d14:	and    DWORD PTR [eax-0x16],ebp
  419d17:	xor    BYTE PTR [edi+eiz*4],bl
  419d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d1b:	mov    ch,BYTE PTR [ecx-0x63984984]
  419d21:	cdq    
  419d22:	mov    edx,0x3642a22
  419d27:	stc    
  419d28:	jle    0x419cb8
  419d2a:	loope  0x419d38
  419d2c:	mov    ebp,0x27031c2b
  419d31:	mov    bh,BYTE PTR [eax-0x31]
  419d34:	test   DWORD PTR [edi+0x30c20e60],esi
  419d3a:	retf   
  419d3b:	inc    edx
  419d3c:	sub    al,0xb5
  419d3e:	loope  0x419d61
  419d40:	add    ecx,DWORD PTR [edx]
  419d42:	fwait
  419d43:	lds    esi,FWORD PTR [ebp+0x7039a89e]
  419d49:	fisub  WORD PTR [eax+0x36e36328]
  419d4f:	push   esp
  419d50:	inc    esp
  419d51:	sub    ebp,DWORD PTR [esi-0x35]
  419d54:	inc    ebx
  419d55:	fmul   DWORD PTR [eax+0xd8a5d9c]
  419d5b:	pop    ss
  419d5c:	lods   al,BYTE PTR ds:[esi]
  419d5d:	js     0x419cf3
  419d5f:	jns    0x419cf3
  419d61:	xor    DWORD PTR [ebp-0x35a9bd41],esi
  419d67:	iret   
  419d68:	xchg   ebp,eax
  419d69:	pop    ebp
  419d6a:	dec    edx
  419d6b:	xchg   edx,eax
  419d6c:	int    0xf2
  419d6e:	adc    DWORD PTR [edi+edx*1-0x4578f1ca],edi
  419d75:	pusha  
  419d76:	addr16 (bad) 
  419d78:	shl    DWORD PTR [ebx+eax*1],cl
  419d7b:	inc    eax
  419d7c:	hlt    
  419d7d:	cmp    BYTE PTR [edi+0x3cc47ecc],cl
  419d83:	inc    ebx
  419d84:	in     eax,dx
  419d85:	pop    edi
  419d86:	retf   
  419d87:	add    DWORD PTR [ebx-0x5f],ebp
  419d8a:	pop    esi
  419d8b:	js     0x419d1e
  419d8d:	dec    ch
  419d8f:	xchg   BYTE PTR [ecx+0x19],bh
  419d92:	inc    edx
  419d93:	push   eax
  419d94:	arpl   WORD PTR [edi+0x43a37a00],ax
  419d9a:	push   ss
  419d9b:	add    eax,0x58324aa4
  419da0:	scas   eax,DWORD PTR es:[edi]
  419da1:	pop    ss
  419da2:	jbe    0x419dc4
  419da4:	(bad)  
  419da5:	lahf   
  419da6:	xor    cl,bh
  419da8:	scas   eax,DWORD PTR es:[edi]
  419da9:	inc    al
  419dab:	arpl   WORD PTR [ecx+0x44c7fefb],sp
  419db1:	je     0x419e16
  419db3:	lock or DWORD PTR [eax+ebp*4],eax
  419db7:	mov    ecx,0xff7134e6
  419dbc:	dec    eax
  419dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dbe:	popa   
  419dbf:	or     DWORD PTR [edx-0x5204f129],esp
  419dc5:	std    
  419dc6:	jns    0x419dd8
  419dc8:	mov    eax,0x24b8f0d6
  419dcd:	mov    ecx,0x4abf318
  419dd2:	imul   ebx,DWORD PTR [esi+0x68147994],0xfffffff6
  419dd9:	int3   
  419dda:	jecxz  0x419e14
  419ddc:	push   esi
  419ddd:	mov    BYTE PTR [edx+0x3f],ch
  419de0:	ss jnp 0x419dcc
  419de3:	mov    edi,0x27fa52ce
  419de8:	sbb    ecx,0xe1812fe1
  419dee:	pusha  
  419def:	mov    edi,0x705aa8a3
  419df4:	add    al,BYTE PTR [ebp-0x71]
  419df7:	mov    ds:0x5b9637,al
  419dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dfd:	or     cl,bh
  419dff:	(bad)  
  419e00:	popa   
  419e01:	out    dx,eax
  419e02:	pop    es
  419e03:	in     eax,0x50
  419e05:	std    
  419e06:	and    bl,BYTE PTR [edx]
  419e08:	cmp    DWORD PTR [edx+0x5],esi
  419e0b:	fisttp QWORD PTR [esi+edi*4-0x7d1f9b4e]
  419e12:	cld    
  419e13:	xchg   ebx,eax
  419e14:	lods   al,BYTE PTR ds:[esi]
  419e15:	inc    esp
  419e16:	aaa    
  419e17:	push   cs
  419e18:	cmp    DWORD PTR [edx],ebp
  419e1a:	and    al,BYTE PTR [edi+0x1a28873c]
  419e20:	push   0xfb7d8c16
  419e25:	adc    BYTE PTR [ebx],dh
  419e27:	das    
  419e28:	cmp    eax,0x72e24852
  419e2d:	dec    eax
  419e2e:	ins    DWORD PTR es:[edi],dx
  419e2f:	xor    cl,BYTE PTR [ebx+ebx*2+0x1cebf952]
  419e36:	xchg   DWORD PTR [ebp-0x17],eax
  419e39:	pusha  
  419e3a:	imul   ebp,esi,0x49
  419e3d:	cli    
  419e3e:	loopne 0x419e8d
  419e40:	lahf   
  419e41:	mov    eax,0xf2a7c3e5
  419e46:	xchg   ecx,esp
  419e48:	jb     0x419e7a
  419e4a:	int3   
  419e4b:	shl    BYTE PTR [ebx-0x5f83b146],cl
  419e51:	mov    esi,0xc91edc19
  419e56:	sub    BYTE PTR ds:0x238502a7,cl
  419e5c:	aam    0x54
  419e5e:	inc    DWORD PTR [edi]
  419e60:	out    0x96,al
  419e62:	or     DWORD PTR [esi+0x9],0xffffffac
  419e66:	jl     0x419e05
  419e68:	push   es
  419e69:	test   al,0x36
  419e6b:	jle    0x419e79
  419e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e6e:	ja     0x419e67
  419e70:	adc    al,0xc2
  419e72:	sti    
  419e73:	daa    
  419e74:	inc    ecx
  419e75:	sar    BYTE PTR [ecx-0x64fb8bbe],1
  419e7b:	jmp    0xb3346d13
  419e80:	(bad)  
  419e81:	(bad)  
  419e82:	stc    
  419e83:	add    dl,bh
  419e85:	cli    
  419e86:	mov    WORD PTR [edx-0x6e],fs
  419e89:	dec    ebp
  419e8a:	push   eax
  419e8b:	xchg   ebp,eax
  419e8c:	lods   eax,DWORD PTR ds:[esi]
  419e8d:	sub    eax,0x9b836f72
  419e92:	inc    ebx
  419e93:	int    0xf2
  419e95:	and    DWORD PTR [edi+0x28],0xffffff95
  419e99:	(bad)  
  419e9a:	retf   
  419e9b:	repz or WORD PTR [edx],0x2
  419ea0:	ret    0x1386
  419ea3:	push   ebx
  419ea4:	pop    esp
  419ea5:	xchg   DWORD PTR cs:[esi+0x5c],edi
  419ea9:	jg     0x419efc
  419eab:	pop    ds
  419eac:	xchg   esi,eax
  419ead:	lds    esp,FWORD PTR [esi+0x6c79e690]
  419eb3:	pop    ebp
  419eb4:	cmp    al,dl
  419eb6:	int3   
  419eb7:	enter  0xe45c,0x6e
  419ebb:	or     eax,0x28dd7f78
  419ec0:	mov    eax,0x71a32391
  419ec5:	inc    edi
  419ec6:	mov    ds:0x26cec11f,eax
  419ecb:	pop    edx
  419ecc:	sub    BYTE PTR [ecx+ebp*8-0x7],0x1a
  419ed1:	xchg   ebx,eax
  419ed2:	in     eax,0xc4
  419ed4:	(bad)  
  419ed5:	les    edi,FWORD PTR [esi+0xe]
  419ed8:	sub    ah,0x85
  419edb:	mov    dl,0x67
  419edd:	repnz adc DWORD PTR [edx+0x514d653b],0x3a6305fc
  419ee8:	lahf   
  419ee9:	std    
  419eea:	mov    BYTE PTR [ebx+0x23ef1008],ah
  419ef0:	cmp    BYTE PTR [ebx],dh
  419ef2:	push   ss
  419ef3:	inc    ebp
  419ef4:	pop    esp
  419ef5:	mov    bl,0x28
  419ef7:	loopne 0x419eca
  419ef9:	adc    eax,0x3f28d7a1
  419efe:	loop   0x419edb
  419f00:	jl     0x419f75
  419f02:	fs lahf 
  419f04:	popf   
  419f05:	push   ss
  419f06:	and    bh,BYTE PTR ds:0xa8a72f99
  419f0c:	retf   0x549a
  419f0f:	aaa    
  419f10:	jb     0x419ebb
  419f12:	xlat   BYTE PTR ds:[ebx]
  419f13:	or     esp,DWORD PTR [ebp+0x1e]
  419f16:	pop    edx
  419f17:	or     DWORD PTR [edi-0x28],edx
  419f1a:	rcl    bl,cl
  419f1c:	sar    BYTE PTR [ecx-0x5d],0xf7
  419f20:	int3   
  419f21:	lock addr16 dec ebp
  419f24:	mov    bl,0xfb
  419f26:	out    dx,eax
  419f27:	ret    0xfdfd
  419f2a:	ret    0x195d
  419f2d:	icebp  
  419f2e:	sub    esp,DWORD PTR [ebx+esi*8+0x22]
  419f32:	pop    edx
  419f33:	mov    ah,0x33
  419f35:	adc    edi,DWORD PTR [eax]
  419f37:	sbb    esp,DWORD PTR [edx-0x7]
  419f3a:	in     eax,dx
  419f3b:	inc    esi
  419f3c:	or     al,0x60
  419f3e:	popw   ss
  419f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f41:	mov    bh,0x6d
  419f43:	or     al,0xa0
  419f45:	imul   ebx,DWORD PTR [edi-0x5257980a],0xe2e404a7
  419f4f:	cdq    
  419f50:	mov    edi,0xd461b9e8
  419f55:	or     al,0xa5
  419f57:	xor    eax,esp
  419f59:	ret    0x2e07
  419f5c:	cs xchg ebx,eax
  419f5e:	fbld   TBYTE PTR [ecx]
  419f60:	stos   DWORD PTR es:[edi],eax
  419f61:	repnz pop es
  419f63:	test   DWORD PTR [eax+0x1d],0x2bb920c8
  419f6a:	sub    al,0xea
  419f6c:	mov    esi,0x90eec2dc
  419f71:	cmp    DWORD PTR [eax+ebx*1],0xe2f17fac
  419f78:	mov    WORD PTR [esi-0x33baf3a7],?
  419f7e:	cmc    
  419f7f:	adc    BYTE PTR [eax+0x30],al
  419f82:	out    dx,al
  419f83:	(bad)  
  419f84:	leave  
  419f85:	jmp    0x468ca532
  419f8a:	(bad)  
  419f8b:	mov    al,ds:0x4bc3dc3d
  419f90:	call   0x148b2746
  419f95:	aas    
  419f96:	xor    ecx,esi
  419f98:	mov    ebp,0x694c7cb9
  419f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f9e:	mov    ss,WORD PTR [eax+esi*4+0x65a4f82c]
  419fa5:	mov    bh,0x93
  419fa7:	pop    eax
  419fa8:	mov    ds:0xe6e46333,al
  419fad:	aad    0x8b
  419faf:	sbb    bh,BYTE PTR [esi+0x1d79f667]
  419fb5:	pop    esp
  419fb6:	lods   eax,DWORD PTR ds:[esi]
  419fb7:	test   DWORD PTR [esi],ebp
  419fb9:	dec    edx
  419fba:	loop   0x419f51
  419fbc:	mov    ds:0x51660a3f,eax
  419fc1:	pop    ebx
  419fc2:	push   es
  419fc3:	je     0x419fbc
  419fc5:	out    dx,eax
  419fc6:	inc    esp
  419fc7:	les    eax,FWORD PTR ds:[ecx+0x5d]
  419fcb:	shl    DWORD PTR [ebx+ecx*1-0x7a087b7e],1
  419fd2:	inc    edx
  419fd3:	shl    BYTE PTR [eax+0xd],0xc6
  419fd7:	pusha  
  419fd8:	icebp  
  419fd9:	mov    ds:0xa69ad4c6,al
  419fde:	or     BYTE PTR [eax*4+0x6a227a06],dh
  419fe5:	pop    ds
  419fe6:	push   edx
  419fe7:	nop
  419fe8:	sbb    DWORD PTR [edi-0x5],0xffffff8c
  419fec:	cwde   
  419fed:	or     al,0x73
  419fef:	in     eax,0xd
  419ff1:	fidiv  DWORD PTR [ebp+eax*1-0x71]
  419ff5:	xchg   esp,eax
  419ff6:	sbb    eax,0x56c3b5d6
  419ffb:	jae    0x419fd3
  419ffd:	xor    BYTE PTR [edi+0x66],0x29
  41a001:	xor    cl,ah
  41a003:	adc    BYTE PTR [edi],dh
  41a005:	scas   eax,DWORD PTR es:[edi]
  41a006:	test   al,0x6f
  41a008:	test   DWORD PTR [edx],edi
  41a00a:	out    0xb,al
  41a00c:	sbb    esp,0x841186dd
  41a012:	sub    al,0x42
  41a014:	mov    eax,0x4b55baf8
  41a019:	sub    BYTE PTR [ebx-0x623b0194],al
  41a01f:	dec    edi
  41a020:	scas   eax,DWORD PTR es:[edi]
  41a021:	fbstp  TBYTE PTR [ebx+eax*1-0x4d0efc13]
  41a028:	js     0x41a064
  41a02a:	and    dh,BYTE PTR [esi-0x5c25e819]
  41a030:	std    
  41a031:	xor    eax,0x3336ade
  41a036:	xor    al,0xab
  41a038:	push   edi
  41a039:	ja     0x419ff5
  41a03b:	add    eax,0xa7d99949
  41a040:	add    eax,0x6cb4f503
  41a045:	and    BYTE PTR [ecx],al
  41a047:	lea    esp,[edi]
  41a049:	add    eax,0x54a7ffb6
  41a04e:	mov    ebx,0x3c759cfb
  41a053:	sub    al,0x84
  41a055:	mov    ds:0x434d68df,al
  41a05a:	sar    DWORD PTR [ecx+0x78740e48],cl
  41a060:	adc    eax,0xa28c903d
  41a065:	cmp    ax,0x3a46
  41a069:	fucomp st(1)
  41a06b:	sbb    BYTE PTR [ebx+0x24],bh
  41a06e:	ins    DWORD PTR es:[edi],dx
  41a06f:	mov    WORD PTR ds:0x8b9aef28,?
  41a075:	jp     0x41a0aa
  41a077:	and    bh,ah
  41a079:	int3   
  41a07a:	sub    edi,edi
  41a07c:	int3   
  41a07d:	sbb    edx,DWORD PTR [edx+0x77]
  41a080:	ins    BYTE PTR es:[edi],dx
  41a081:	sbb    BYTE PTR [eax-0x29],bl
  41a084:	sti    
  41a085:	pop    ds
  41a086:	dec    eax
  41a087:	not    ebx
  41a089:	push   esp
  41a08a:	xchg   edi,eax
  41a08b:	stos   DWORD PTR es:[edi],eax
  41a08c:	mov    esi,0x17aca9d2
  41a091:	dec    ebx
  41a092:	inc    ebp
  41a093:	sub    edi,edi
  41a095:	(bad)  
  41a096:	xchg   ebx,eax
  41a097:	add    ebx,0x47
  41a09a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a09c:	pop    edx
  41a09d:	jmp    0xd14e4dc9
  41a0a2:	arpl   WORD PTR [edx+0x65521c9b],bx
  41a0a8:	jno    0x41a0fb
  41a0aa:	push   ds
  41a0ab:	call   0x92fb:0x23c03d02
  41a0b2:	out    0x79,eax
  41a0b4:	in     al,dx
  41a0b5:	icebp  
  41a0b6:	cmp    eax,0xe0763295
  41a0bb:	aas    
  41a0bc:	add    ch,BYTE PTR [edx+0x33]
  41a0bf:	add    BYTE PTR [ebx-0x6ffd061d],0xcb
  41a0c6:	pop    DWORD PTR [edx+ecx*8]
  41a0c9:	in     al,0x2d
  41a0cb:	pop    esp
  41a0cc:	xor    esp,DWORD PTR [edi]
  41a0ce:	add    ebp,esp
  41a0d0:	mov    al,0xc2
  41a0d2:	call   0x23d2f52f
  41a0d7:	pop    esi
  41a0d8:	mov    esi,0xf998d30d
  41a0dd:	call   0xdde0:0xe246881a
  41a0e4:	pop    esp
  41a0e5:	popa   
  41a0e6:	cli    
  41a0e7:	mov    al,0x44
  41a0e9:	rol    BYTE PTR [ebp+0x24160e61],cl
  41a0ef:	gs pop esp
  41a0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f2:	aad    0xa6
  41a0f4:	xor    DWORD PTR [esi],ebp
  41a0f6:	pop    ss
  41a0f7:	stc    
  41a0f8:	adc    BYTE PTR [ecx+0x5f2ebe48],cl
  41a0fe:	add    al,0x21
  41a100:	xchg   esi,eax
  41a101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a102:	imul   eax,DWORD PTR [esi-0x23],0xb6e11237
  41a109:	dec    esp
  41a10a:	add    eax,0x3b0f0af
  41a10f:	jnp    0x41a0b7
  41a111:	call   0x7cb9:0x5b5312b
  41a118:	dec    edx
  41a119:	adc    eax,0x58651cbc
  41a11e:	fld    st(1)
  41a120:	and    eax,0xb985d45f
  41a125:	dec    esp
  41a126:	ins    DWORD PTR es:[edi],dx
  41a127:	push   ss
  41a128:	sbb    DWORD PTR fs:[ecx],0x520a6b89
  41a12f:	ror    DWORD PTR [ecx],cl
  41a131:	pop    edi
  41a132:	je     0x41a108
  41a134:	lods   al,BYTE PTR ds:[esi]
  41a135:	adc    BYTE PTR [esp+eiz*2],bh
  41a138:	lock lock fld QWORD PTR [esp+edx*2+0x1]
  41a13e:	add    eax,0xabbc564
  41a143:	mov    bl,0xd5
  41a145:	add    ah,bl
  41a147:	push   ds
  41a148:	bound  edi,QWORD PTR [edi-0x44c02d86]
  41a14e:	lock das 
  41a150:	int3   
  41a151:	out    dx,al
  41a152:	mov    dh,0x88
  41a154:	cmc    
  41a155:	inc    esp
  41a156:	xor    ebp,DWORD PTR [esi]
  41a158:	cwde   
  41a159:	pslld  mm7,QWORD PTR [ebx-0x27]
  41a15d:	not    esp
  41a15f:	fsub   DWORD PTR [esp+edi*8+0x6d8bb6cf]
  41a166:	inc    ebx
  41a167:	sti    
  41a168:	jmp    0x217b5596
  41a16d:	add    eax,0xa24e5d9f
  41a172:	call   FWORD PTR [edx+esi*8+0x5a866427]
  41a179:	jmp    0x2a1e:0x67432efb
  41a180:	loopne 0x41a109
  41a182:	test   al,0xd6
  41a184:	popa   
  41a185:	lods   eax,DWORD PTR ds:[esi]
  41a186:	retf   
  41a187:	outs   dx,BYTE PTR ds:[esi]
  41a188:	mov    ch,0xf8
  41a18a:	cdq    
  41a18b:	test   DWORD PTR [edx],edi
  41a18d:	shl    BYTE PTR [ebx],0xc4
  41a190:	shr    DWORD PTR [ebx+0x42],0xf7
  41a194:	push   esi
  41a195:	jp     0x41a1be
  41a197:	scas   eax,DWORD PTR es:[edi]
  41a198:	pop    ecx
  41a199:	xchg   DWORD PTR [ebx+0x3f],eax
  41a19c:	fmul   QWORD PTR [esi+0x14]
  41a19f:	repz and ecx,DWORD PTR [esi]
  41a1a2:	(bad)  
  41a1a3:	fbstp  TBYTE PTR [ebx-0x56]
  41a1a6:	(bad)  
  41a1a7:	pop    ss
  41a1a8:	mov    eax,ds:0x5f53ed17
  41a1ad:	stos   BYTE PTR es:[edi],al
  41a1ae:	out    dx,al
  41a1af:	cs mov dl,0xe9
  41a1b2:	hlt    
  41a1b3:	das    
  41a1b4:	fcomp  QWORD PTR [eax+0x3d]
  41a1b7:	dec    edi
  41a1b8:	ror    BYTE PTR [ebp-0x10ff2b97],0xa3
  41a1bf:	mov    bl,0x99
  41a1c1:	xchg   ebx,eax
  41a1c2:	jmp    0x41a196
  41a1c4:	push   ebp
  41a1c5:	inc    esp
  41a1c6:	dec    eax
  41a1c7:	(bad)  
  41a1c8:	dec    eax
  41a1ca:	dec    DWORD PTR [ecx+0x691178eb]
  41a1d0:	fcom   st(7)
  41a1d2:	or     eax,0xee190ec9
  41a1d7:	fistp  DWORD PTR [ecx-0x4d]
  41a1da:	pop    ebp
  41a1db:	and    al,0xd4
  41a1dd:	pop    ds
  41a1de:	(bad)  
  41a1df:	cmc    
  41a1e0:	rol    DWORD PTR [edi-0x2b],cl
  41a1e3:	jmp    0xa3b0:0xc7f75ceb
  41a1ea:	clc    
  41a1eb:	leave  
  41a1ec:	into   
  41a1ed:	dec    eax
  41a1ee:	outs   dx,DWORD PTR ds:[esi]
  41a1ef:	hlt    
  41a1f0:	repz test al,0xa4
  41a1f3:	and    BYTE PTR [ebx-0x63],dh
  41a1f6:	(bad)  
  41a1f7:	sbb    BYTE PTR [eax-0x77],dl
  41a1fa:	or     al,BYTE PTR [edx+0x4b]
  41a1fd:	sbb    al,0x2e
  41a1ff:	repz cmp DWORD PTR [edx-0x7271eb07],eax
  41a206:	add    al,0x51
  41a208:	mov    WORD PTR [edi+0x77],?
  41a20b:	mov    al,0x68
  41a20d:	mov    BYTE PTR [edx],bh
  41a20f:	cwde   
  41a210:	cmc    
  41a211:	xor    DWORD PTR [ebx+0x24],edx
  41a214:	mov    dh,0xe3
  41a216:	call   0x714c7b3
  41a21b:	jbe    0x41a1e2
  41a21d:	pop    eax
  41a21e:	repnz adc DWORD PTR [ecx],0xffffff96
  41a222:	clc    
  41a223:	mov    al,ds:0x6680529f
  41a228:	fstp   DWORD PTR [ebx]
  41a22a:	sbb    bh,bl
  41a22c:	cli    
  41a22d:	or     BYTE PTR [eax+0x79],bl
  41a230:	add    bl,cl
  41a232:	jbe    0x41a226
  41a234:	nop
  41a235:	aaa    
  41a236:	pop    DWORD PTR [ebx]
  41a238:	stos   DWORD PTR es:[edi],eax
  41a239:	hlt    
  41a23a:	nop
  41a23b:	xlat   BYTE PTR ds:[ebx]
  41a23c:	xchg   ebx,eax
  41a23d:	int3   
  41a23e:	aad    0xc4
  41a240:	mov    al,ds:0xfb86fb11
  41a245:	mov    eax,0xdc4124c9
  41a24a:	rcl    esi,1
  41a24c:	lea    edi,[ebp+ecx*1+0x7e]
  41a250:	(bad)  
  41a251:	pop    esi
  41a252:	mov    ah,0xd0
  41a254:	jo     0x41a2ae
  41a256:	into   
  41a257:	icebp  
  41a258:	cmp    DWORD PTR ds:0xd347ac7b,edx
  41a25e:	loopne 0x41a201
  41a260:	or     ecx,DWORD PTR [esi+eax*8]
  41a263:	mov    ch,bl
  41a265:	fmul   QWORD PTR [ebx]
  41a267:	fs mov ch,0x28
  41a26a:	push   edi
  41a26b:	data16 adc BYTE PTR [ebp+edi*4-0x6d],ah
  41a270:	ss push ebx
  41a272:	hlt    
  41a273:	mov    ebx,0x6e38ff36
  41a278:	je     0x41a23c
  41a27a:	int    0xb2
  41a27c:	mov    WORD PTR [ecx+eax*2],fs
  41a27f:	ins    BYTE PTR es:[edi],dx
  41a280:	scas   eax,DWORD PTR es:[edi]
  41a281:	(bad)  
  41a282:	adc    eax,0xbfce7b12
  41a287:	mov    dl,0x23
  41a289:	xchg   ebp,eax
  41a28a:	data16 add BYTE PTR [edi-0x20],dh
  41a28e:	xor    bl,BYTE PTR [esi-0x29f65858]
  41a294:	or     eax,0xfbc2f738
  41a299:	ja     0x41a276
  41a29b:	iret   
  41a29c:	outs   dx,BYTE PTR ds:[esi]
  41a29d:	mov    esp,0xe5b1409e
  41a2a2:	push   ebx
  41a2a3:	lds    esp,FWORD PTR [ecx+0x102380a8]
  41a2a9:	test   edi,edx
  41a2ab:	mov    gs,WORD PTR [ebx-0x10439078]
  41a2b1:	mov    eax,0x9305074d
  41a2b6:	mov    edx,0x79b769cd
  41a2bb:	cmc    
  41a2bc:	mov    bl,0xc9
  41a2be:	test   eax,0xa26c1441
  41a2c3:	xor    DWORD PTR [eax],esi
  41a2c5:	mov    esi,0x2f8854da
  41a2ca:	xchg   bh,cl
  41a2cc:	push   ds
  41a2cd:	add    DWORD PTR [esi-0x20],ecx
  41a2d0:	adc    eax,0xbc1ff039
  41a2d5:	adc    ebx,DWORD PTR [eax]
  41a2d7:	sub    DWORD PTR [esp+ecx*8],ebp
  41a2da:	daa    
  41a2db:	shr    DWORD PTR [edx+0x5f],cl
  41a2de:	arpl   WORD PTR [esi],dx
  41a2e0:	loope  0x41a2d1
  41a2e2:	enter  0x3027,0x1f
  41a2e6:	mov    ecx,0x1ed5f444
  41a2eb:	jmp    0x97472a8a
  41a2f0:	mov    eax,ds:0xf0eba177
  41a2f5:	dec    ecx
  41a2f6:	xchg   edi,eax
  41a2f7:	inc    ebx
  41a2f8:	int    0xc0
  41a2fa:	(bad)  
  41a2fb:	std    
  41a2fc:	jecxz  0x41a327
  41a2fe:	stos   BYTE PTR es:[edi],al
  41a2ff:	and    eax,0x65c0496f
  41a304:	xchg   edx,eax
  41a305:	in     eax,0x50
  41a307:	outs   dx,DWORD PTR ds:[esi]
  41a308:	inc    ecx
  41a309:	sbb    DWORD PTR [edx],0x8abf6512
  41a30f:	(bad)  [ebx+0x79]
  41a312:	jmp    0x41a366
  41a314:	stos   BYTE PTR es:[edi],al
  41a315:	and    DWORD PTR [edi-0xe49d54d],ebx
  41a31b:	xor    al,0xff
  41a31d:	out    dx,al
  41a31e:	jle    0x41a2df
  41a320:	jmp    0x41a395
  41a322:	jmp    FWORD PTR [ebp+0x536be14a]
  41a328:	fwait
  41a329:	mov    bh,0x77
  41a32b:	in     al,dx
  41a32c:	pop    ebx
  41a32d:	add    edx,ebp
  41a32f:	pushf  
  41a330:	pop    ecx
  41a331:	sbb    eax,0x3176dd01
  41a336:	inc    edx
  41a337:	mov    ebp,0xb0b96da
  41a33c:	jne    0x41a2df
  41a33e:	pop    esi
  41a33f:	mov    esp,0xe21289b1
  41a344:	push   ds
  41a345:	cwde   
  41a346:	jge    0x41a2ee
  41a348:	ret    0x1051
  41a34b:	fdivr  QWORD PTR ds:0x7f0cfeca
  41a351:	mov    cl,0x3d
  41a353:	mov    dl,al
  41a355:	rcr    DWORD PTR [ebp-0x4a680196],cl
  41a35b:	enter  0xf7b2,0x23
  41a35f:	pushf  
  41a360:	adc    ah,BYTE PTR [ecx]
  41a362:	mov    edi,0xb603fe41
  41a367:	arpl   WORD PTR [esp+esi*1-0x30e5caed],bp
  41a36e:	test   eax,0x8913558
  41a373:	add    DWORD PTR [eax+0x4a42796a],ebp
  41a379:	mov    ah,0x47
  41a37b:	mov    DWORD PTR ds:0x4bec8433,esi
  41a381:	sbb    al,0x68
  41a383:	pop    eax
  41a384:	sti    
  41a385:	xor    ecx,DWORD PTR [edx]
  41a387:	mov    edx,0xfc61d9b3
  41a38d:	fcom   DWORD PTR [eax]
  41a38f:	sbb    al,0x5d
  41a391:	mov    ah,0x7b
  41a393:	sub    ah,BYTE PTR [ecx+0x22525b69]
  41a399:	adc    ecx,esp
  41a39b:	ins    DWORD PTR es:[edi],dx
  41a39c:	push   eax
  41a39d:	or     BYTE PTR [edi-0x39340bd4],bh
  41a3a3:	xchg   ch,bl
  41a3a5:	jl     0x41a405
  41a3a7:	cmp    DWORD PTR [edi],ebx
  41a3a9:	daa    
  41a3aa:	sbb    BYTE PTR ds:0xbbd0fba7,ah
  41a3b0:	test   DWORD PTR ds:0xe2fac4c6,0x6d6817b2
  41a3ba:	mov    es,esi
  41a3bc:	add    ah,0x94
  41a3bf:	mov    ebp,0x3cd4c39
  41a3c4:	fdivr  DWORD PTR [esi]
  41a3c6:	lahf   
  41a3c7:	jmp    0x324f:0xaa66eb6b
  41a3ce:	push   ss
  41a3cf:	nop
  41a3d0:	ret    
  41a3d1:	(bad)  
  41a3d2:	pop    es
  41a3d3:	dec    esi
  41a3d4:	add    eax,0xd67a0737
  41a3d9:	pop    es
  41a3da:	int    0x6e
  41a3dc:	ja     0x41a382
  41a3de:	sti    
  41a3df:	(bad)
  41a3e2:	inc    ebx
  41a3e3:	and    DWORD PTR [esi],edi
  41a3e5:	daa    
  41a3e6:	pop    esi
  41a3e7:	test   eax,0xbe626f38
  41a3ec:	inc    edx
  41a3ed:	mov    ebp,0xda87caa5
  41a3f2:	sbb    ebp,ecx
  41a3f4:	and    ah,BYTE PTR [edx+0x415e0128]
  41a3fa:	sbb    BYTE PTR [ecx],al
  41a3fc:	cwde   
  41a3fd:	das    
  41a3fe:	sahf   
  41a3ff:	outs   dx,BYTE PTR ds:[esi]
  41a400:	scas   al,BYTE PTR es:[edi]
  41a401:	mov    eax,0x8be2eded
  41a406:	xor    BYTE PTR [esi+0x7a],ch
  41a409:	in     eax,0x77
  41a40b:	and    ebp,DWORD PTR [ebp-0x338b12c1]
  41a411:	mov    esi,DWORD PTR [edi]
  41a413:	mov    esi,0x4b5a6881
  41a418:	mov    cl,0x2f
  41a41a:	cmp    ch,cl
  41a41c:	mov    ebx,0x80da86ce
  41a421:	jl     0x41a3ca
  41a423:	xchg   DWORD PTR [ecx+0x128aa10f],ecx
  41a429:	mov    ecx,0xfe3da349
  41a42e:	push   ecx
  41a42f:	(bad)  
  41a430:	xchg   esi,eax
  41a431:	setno  BYTE PTR [ebx]
  41a434:	scas   al,BYTE PTR es:[edi]
  41a435:	sub    edx,ecx
  41a437:	jge    0x41a4a1
  41a439:	adc    al,0xe4
  41a43b:	lahf   
  41a43c:	pop    ecx
  41a43d:	shl    DWORD PTR [edi-0x1789386],cl
  41a443:	ror    DWORD PTR [edx-0x5eb75e77],1
  41a449:	xchg   BYTE PTR [edx+eiz*4],bh
  41a44c:	nop
  41a44d:	jnp    0x41a3d6
  41a44f:	popf   
  41a450:	add    ecx,edi
  41a452:	sti    
  41a453:	xchg   ebp,eax
  41a454:	pop    ds
  41a455:	scas   al,BYTE PTR es:[edi]
  41a456:	das    
  41a457:	lods   eax,DWORD PTR es:[esi]
  41a459:	fstp   DWORD PTR [edi-0x6d]
  41a45c:	leave  
  41a45d:	and    BYTE PTR [edx+0x3ecfe31c],al
  41a463:	(bad)  
  41a464:	mov    dh,BYTE PTR [esi+0x42]
  41a467:	pop    ebx
  41a468:	xchg   esi,eax
  41a469:	push   esi
  41a46a:	adc    BYTE PTR [ebx],al
  41a46c:	jge    0x41a4bf
  41a46e:	stc    
  41a46f:	pop    ss
  41a470:	pop    eax
  41a471:	mov    ah,0x8d
  41a473:	jmp    0xff3a:0x9074fcf7
  41a47a:	into   
  41a47b:	add    cl,BYTE PTR [esi+0x36]
  41a47e:	call   0x20cbc7ba
  41a483:	adc    bh,dh
  41a485:	enter  0xbf15,0xac
  41a489:	daa    
  41a48a:	xor    al,0xc1
  41a48c:	and    ecx,DWORD PTR [esi+0x5c]
  41a48f:	icebp  
  41a490:	sbb    ah,bl
  41a492:	test   al,0x9c
  41a494:	(bad)  
  41a496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a497:	mov    al,0x3b
  41a499:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41a49b:	adc    edx,0xffffffac
  41a49e:	lods   eax,DWORD PTR ds:[esi]
  41a49f:	dec    edi
  41a4a0:	inc    edi
  41a4a1:	clc    
  41a4a2:	mov    al,0x1d
  41a4a4:	mov    esp,DWORD PTR [eax+0x117ce748]
  41a4aa:	jo     0x41a4c8
  41a4ac:	cdq    
  41a4ad:	sbb    bl,BYTE PTR [esi]
  41a4af:	rol    edx,0x77
  41a4b2:	sbb    eax,0xccc966f6
  41a4b7:	loopne 0x41a499
  41a4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4ba:	sub    bl,BYTE PTR es:[ebp+0x1998188]
  41a4c1:	add    al,0x8f
  41a4c3:	sub    ah,BYTE PTR [edi-0x1c0ddfb1]
  41a4c9:	xchg   ebx,eax
  41a4ca:	push   ebp
  41a4cb:	enter  0xf0cd,0xea
  41a4cf:	inc    ebx
  41a4d0:	adc    cl,BYTE PTR [ebp+0x68e426de]
  41a4d6:	cwde   
  41a4d7:	mov    edx,0xe598227b
  41a4dc:	sahf   
  41a4dd:	mov    eax,0x67fb8d25
  41a4e2:	sub    esi,DWORD PTR [ebp+0x6999ad1d]
  41a4e8:	mov    fs,WORD PTR [edi]
  41a4ea:	xchg   DWORD PTR [ebx-0x58],ebx
  41a4ed:	mov    WORD PTR [edi+0x15],ds
  41a4f0:	fs mov edx,0xeaf4b90d
  41a4f6:	outs   dx,BYTE PTR ds:[esi]
  41a4f7:	shl    DWORD PTR [ebp+0x1ba32e7c],cl
  41a4fd:	das    
  41a4fe:	rol    DWORD PTR [edi+0x4fa5eda5],0xbc
  41a505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a506:	mov    ebx,edx
  41a508:	inc    ecx
  41a509:	fsub   DWORD PTR [edx+0xd]
  41a50c:	sbb    al,0xf9
  41a50e:	lods   eax,DWORD PTR ds:[esi]
  41a50f:	push   ss
  41a510:	xor    al,0x40
  41a512:	inc    esp
  41a513:	sub    DWORD PTR [eax],edi
  41a515:	mov    WORD PTR [ebp-0x51],fs
  41a518:	ret    0xe4f1
  41a51b:	and    eax,0x9d1e6a7a
  41a520:	mov    ebx,0x60c4fb24
  41a525:	sub    bh,cl
  41a527:	les    ebx,FWORD PTR [ecx-0x58]
  41a52a:	add    al,0x1f
  41a52c:	call   0x265e:0x90a59547
  41a533:	inc    esp
  41a534:	mov    al,ds:0x8cc82677
  41a539:	outs   dx,DWORD PTR ds:[esi]
  41a53a:	pop    ebx
  41a53b:	inc    esi
  41a53c:	ins    BYTE PTR es:[edi],dx
  41a53d:	xchg   esp,eax
  41a53e:	loop   0x41a568
  41a540:	stos   DWORD PTR es:[edi],eax
  41a541:	push   0x1dbde0f2
  41a546:	xor    DWORD PTR ds:0xfb193608,eax
  41a54c:	dec    ebx
  41a54d:	jns    0x41a52e
  41a54f:	cmc    
  41a550:	add    al,BYTE PTR [ecx+0x5862dfd9]
  41a556:	loopne 0x41a58e
  41a558:	fsub   QWORD PTR [edi+0x5cf8855a]
  41a55e:	dec    edi
  41a55f:	mov    ebp,0x17fc3109
  41a564:	ds mov eax,0xb8dc103e
  41a56a:	popa   
  41a56b:	fild   DWORD PTR [ebx]
  41a56d:	clc    
  41a56e:	rcr    DWORD PTR [edi-0x5cad22b0],1
  41a574:	add    DWORD PTR [ecx],esp
  41a576:	imul   ebp,DWORD PTR [edx+0x54],0x7244f659
  41a57d:	inc    esp
  41a57e:	retf   
  41a57f:	xchg   ecx,esp
  41a581:	mov    ch,BYTE PTR [ebp-0x15]
  41a584:	cld    
  41a585:	div    BYTE PTR [ebp+0x4e]
  41a588:	into   
  41a589:	pop    edi
  41a58a:	sbb    BYTE PTR [eax+0x64],ah
  41a58d:	rol    BYTE PTR [ebx+0x3c],0x35
  41a591:	dec    esi
  41a592:	push   cs
  41a593:	jmp    0x12a44a79
  41a598:	jmp    0xf70eb12b
  41a59d:	push   0x49
  41a59f:	retf   0xd222
  41a5a2:	sti    
  41a5a3:	call   0x684d:0x9188e71e
  41a5aa:	stc    
  41a5ab:	push   esp
  41a5ac:	js     0x41a538
  41a5ae:	out    0x5,al
  41a5b0:	sub    al,0xef
  41a5b2:	mov    edi,0x98cba773
  41a5b7:	in     al,0xde
  41a5b9:	fiadd  DWORD PTR [edx]
  41a5bb:	and    DWORD PTR [ecx],eax
  41a5bd:	jmp    0xa2410a4
  41a5c2:	repnz mov bh,0x3
  41a5c5:	fistp  DWORD PTR [esi-0x327246f8]
  41a5cb:	pop    ds
  41a5cc:	popa   
  41a5cd:	or     al,0x27
  41a5cf:	ss in  eax,dx
  41a5d1:	xchg   edx,esp
  41a5d3:	stos   BYTE PTR es:[edi],al
  41a5d4:	push   ebx
  41a5d5:	(bad)  
  41a5d7:	icebp  
  41a5d8:	daa    
  41a5d9:	adc    BYTE PTR [eax+0x1d1d27fb],ah
  41a5df:	div    BYTE PTR [esi+0x74e44f3c]
  41a5e5:	loop   0x41a63c
  41a5e7:	popa   
  41a5e8:	adc    DWORD PTR [eax+edx*1],0x22
  41a5ec:	aam    0x61
  41a5ee:	pop    esp
  41a5ef:	nop
  41a5f0:	mov    ch,0xf5
  41a5f2:	push   ebx
  41a5f3:	aaa    
  41a5f4:	push   cs
  41a5f5:	pusha  
  41a5f6:	fstp   TBYTE PTR [edi-0x7b]
  41a5f9:	popf   
  41a5fa:	cld    
  41a5fb:	mov    edx,0x26f59a3e
  41a600:	loopne 0x41a65b
  41a602:	cwde   
  41a603:	pop    ecx
  41a604:	fdecstp 
  41a606:	dec    esi
  41a607:	sbb    esp,esi
  41a609:	jae    0x41a671
  41a60b:	dec    eax
  41a60c:	(bad)  
  41a60d:	es inc eax
  41a60f:	div    BYTE PTR [eax+ecx*1-0x3971a4e4]
  41a616:	pop    ebp
  41a617:	xchg   ebx,eax
  41a618:	dec    ebp
  41a619:	cmp    al,0x36
  41a61b:	pop    ss
  41a61c:	outs   dx,BYTE PTR ds:[esi]
  41a61d:	xlat   BYTE PTR ds:[ebx]
  41a61e:	sbb    eax,0x16a501d5
  41a623:	add    esp,DWORD PTR [edi]
  41a625:	jg     0x41a5e2
  41a627:	sbb    ebx,DWORD PTR ds:0xaa4a6f3
  41a62d:	je     0x41a616
  41a62f:	sbb    al,ah
  41a631:	mov    bh,0x78
  41a633:	int3   
  41a634:	call   0xbb4dc902
  41a639:	(bad)  
  41a63a:	hlt    
  41a63b:	ret    
  41a63c:	fidiv  DWORD PTR [eax+0x3a979e28]
  41a642:	loopne 0x41a623
  41a644:	mov    edx,0xa12aada6
  41a649:	icebp  
  41a64a:	aas    
  41a64b:	xor    DWORD PTR [ecx],0x7a
  41a64e:	dec    eax
  41a64f:	cld    
  41a650:	inc    ebx
  41a651:	or     BYTE PTR [esi],bl
  41a653:	ds pop ss
  41a655:	stos   DWORD PTR es:[edi],eax
  41a656:	or     al,BYTE PTR [eax+0x4a]
  41a659:	or     DWORD PTR [edi],ebp
  41a65b:	fidiv  WORD PTR [ecx-0x72e44271]
  41a661:	out    0x30,al
  41a663:	pop    ebx
  41a664:	sbb    al,BYTE PTR [ebx]
  41a666:	arpl   WORD PTR [ebx-0x2eb36e65],bx
  41a66c:	pop    edx
  41a66d:	in     eax,0x98
  41a66f:	xchg   edx,eax
  41a670:	jmp    0xcf20:0x851b000
  41a677:	jo     0x41a6b9
  41a679:	icebp  
  41a67a:	sub    ecx,DWORD PTR [ebx-0x25548e1c]
  41a680:	xor    DWORD PTR [ecx],edx
  41a682:	sar    BYTE PTR [esi-0x4082e5f2],1
  41a688:	in     eax,0xc6
  41a68a:	pop    esp
  41a68b:	sbb    BYTE PTR [edi-0x4040b7bc],cl
  41a691:	nop
  41a692:	push   0x66
  41a694:	cmp    edx,DWORD PTR [edx-0x1]
  41a697:	fnsave [ebx]
  41a699:	and    al,0xde
  41a69b:	(bad)  
  41a69c:	mov    eax,0xfbdc1dc1
  41a6a1:	mov    bh,0x56
  41a6a3:	ud1    ebx,DWORD PTR [ebp+ebp*2-0x31fe37ac]
  41a6ab:	or     eax,0x4466053f
  41a6b0:	dec    edi
  41a6b1:	mov    ebp,0x61ffb777
  41a6b6:	test   al,0xd
  41a6b8:	jmp    0xaae6:0xc8ac8041
  41a6bf:	push   ebp
  41a6c0:	(bad)  
  41a6c1:	mov    dh,0x75
  41a6c3:	call   0x89d1:0x1a6f357d
  41a6ca:	stos   BYTE PTR es:[edi],al
  41a6cb:	scas   eax,DWORD PTR es:[edi]
  41a6cc:	clc    
  41a6cd:	(bad)  
  41a6ce:	popf   
  41a6cf:	or     eax,0x19702a19
  41a6d4:	inc    ebp
  41a6d5:	fisttp WORD PTR [ebp+0x63]
  41a6d8:	cmp    bl,BYTE PTR [edx-0x1197cad5]
  41a6de:	sbb    ebx,edx
  41a6e0:	add    edx,DWORD PTR [ebp-0x760dec7d]
  41a6e6:	jle    0x41a6db
  41a6e8:	xor    bh,BYTE PTR [edi]
  41a6ea:	shr    BYTE PTR [ebx-0x45],cl
  41a6ed:	(bad)  
  41a6ef:	sbb    al,0x3b
  41a6f1:	jbe    0x41a6a9
  41a6f3:	ret    0x5ba4
  41a6f6:	test   al,0xd2
  41a6f8:	call   0x2029:0x96821cdb
  41a6ff:	mov    eax,ebx
  41a701:	pushf  
  41a702:	std    
  41a703:	repz fwait
  41a705:	fs stos BYTE PTR es:[edi],al
  41a707:	jp     0x41a6e9
  41a709:	or     BYTE PTR [esi+ebx*4],dl
  41a70c:	and    DWORD PTR [edi+0x3d5c6c15],ebx
  41a712:	shr    BYTE PTR [edx],cl
  41a714:	pop    ss
  41a715:	daa    
  41a716:	mov    edi,0xb9a21b7e
  41a71b:	(bad)  
  41a71c:	int    0x86
  41a71e:	add    eax,DWORD PTR [esi+edx*8-0x55cee59]
  41a725:	sub    al,0x66
  41a727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a728:	fadd   st,st(7)
  41a72a:	repz pushf 
  41a72c:	xchg   edx,eax
  41a72d:	test   dl,dh
  41a72f:	push   ds
  41a730:	cld    
  41a731:	xchg   edx,eax
  41a732:	call   0xf1d8:0x9d59adf7
  41a739:	and    al,0x51
  41a73b:	pop    ss
  41a73c:	sub    eax,DWORD PTR [edi]
  41a73e:	pop    edi
  41a73f:	ja     0x41a7b8
  41a741:	loop   0x41a6f0
  41a743:	aaa    
  41a744:	or     al,0xde
  41a746:	std    
  41a747:	push   ebx
  41a748:	retf   0x9efb
  41a74b:	sbb    dl,bh
  41a74d:	mov    ecx,DWORD PTR [edx]
  41a74f:	loope  0x41a6dd
  41a751:	outs   dx,DWORD PTR ds:[esi]
  41a752:	fdiv   DWORD PTR [eax-0xd637c73]
  41a758:	(bad)  
  41a75a:	jns    0x41a70c
  41a75c:	xchg   BYTE PTR [esi+0x38],cl
  41a75f:	cdq    
  41a760:	mov    ds:0x836b26b5,al
  41a765:	xchg   ecx,eax
  41a766:	pop    ecx
  41a767:	stos   DWORD PTR es:[edi],eax
  41a768:	pop    ebp
  41a769:	inc    ebp
  41a76a:	shl    DWORD PTR [ecx-0x6a],0xdd
  41a76e:	jns    0x41a742
  41a770:	or     ch,BYTE PTR [edi+0x34bb4027]
  41a776:	and    eax,0x74901ee6
  41a77b:	add    BYTE PTR [edi+ecx*2],bh
  41a77e:	sbb    eax,edx
  41a780:	adc    al,0xe6
  41a782:	cmp    al,0x27
  41a784:	hlt    
  41a785:	and    al,0x70
  41a787:	fsub   QWORD PTR [esi]
  41a789:	cdq    
  41a78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a78b:	push   0x66
  41a78d:	and    BYTE PTR [edi+0x2],ah
  41a790:	jo     0x41a71d
  41a792:	sub    al,0xf4
  41a794:	(bad)  
  41a795:	jb     0x41a751
  41a797:	test   DWORD PTR [edx],ebp
  41a799:	xchg   edx,eax
  41a79a:	sub    al,0x3c
  41a79c:	ja     0x41a77d
  41a79e:	pop    ecx
  41a79f:	in     al,dx
  41a7a0:	jl     0x41a808
  41a7a2:	inc    BYTE PTR [esi+0x703288fd]
  41a7a8:	xor    ebx,DWORD PTR [edi-0x4d8422cc]
  41a7ae:	stos   DWORD PTR es:[edi],eax
  41a7af:	mov    eax,0xee61aff3
  41a7b4:	mov    DWORD PTR [eax],ebx
  41a7b6:	inc    esp
  41a7b7:	outs   dx,BYTE PTR ds:[esi]
  41a7b8:	and    bh,BYTE PTR [esi]
  41a7ba:	loopne 0x41a7a0
  41a7bc:	dec    ebp
  41a7bd:	ss mov dl,0xce
  41a7c0:	jp     0x41a7a5
  41a7c2:	mov    cl,BYTE PTR [edx]
  41a7c4:	xchg   edi,eax
  41a7c5:	add    ax,0x7bd
  41a7c9:	adc    cl,ah
  41a7cb:	adc    edx,DWORD PTR [esi-0x6e9b5d40]
  41a7d1:	scas   al,BYTE PTR es:[edi]
  41a7d2:	push   ss
  41a7d3:	mov    WORD PTR [ecx+0x7f],es
  41a7d6:	xchg   edx,eax
  41a7d7:	cmp    eax,0xe6d4b1ee
  41a7dc:	jmp    0x88d1:0x8b98f5b9
  41a7e3:	adc    DWORD PTR [eax-0x74],ebx
  41a7e6:	sub    edx,edi
  41a7e8:	loope  0x41a7f8
  41a7ea:	xchg   esi,eax
  41a7eb:	mov    ds:0xf38b360,al
  41a7f0:	mov    DWORD PTR [ebx+eiz*4],esp
  41a7f3:	sbb    al,0x3e
  41a7f5:	xchg   DWORD PTR [ecx+0x4e],eax
  41a7f8:	pop    ebp
  41a7f9:	adc    esi,DWORD PTR [esi+eiz*8-0x69]
  41a7fd:	les    edi,FWORD PTR [eax-0x7e]
  41a800:	outs   dx,DWORD PTR ds:[esi]
  41a801:	repnz out 0x6d,al
  41a804:	cmp    DWORD PTR [ebx],esp
  41a806:	(bad)  
  41a807:	sbb    eax,0x1171173c
  41a80c:	pop    esi
  41a80d:	mov    bh,0xcf
  41a80f:	add    dl,dl
  41a811:	jl     0x41a7f4
  41a813:	add    eax,0x165d3008
  41a818:	cmp    ah,BYTE PTR [esi]
  41a81a:	fmulp  st(7),st
  41a81c:	sbb    ebx,DWORD PTR [eax+eiz*4+0x37]
  41a820:	mov    ds:0x72de6eca,al
  41a825:	ret    0x8e50
  41a828:	pop    ss
  41a829:	sub    eax,0x3934fbb
  41a82e:	enter  0x50c5,0x17
  41a832:	and    al,0x42
  41a834:	out    0x7a,eax
  41a836:	in     eax,0x4e
  41a838:	sbb    cl,BYTE PTR [edi+0x36]
  41a83b:	mov    esp,0x8854963
  41a840:	inc    esi
  41a841:	mov    bl,0x2e
  41a843:	enter  0x5eca,0x2a
  41a847:	ins    DWORD PTR es:[edi],dx
  41a848:	inc    edi
  41a849:	lds    eax,FWORD PTR gs:[ebp+0x7ef6a02f]
  41a850:	cmp    bl,BYTE PTR [ebx*8+0x17c51239]
  41a857:	adc    esi,DWORD PTR [edi+eax*2]
  41a85a:	mov    bl,0x8c
  41a85c:	sbb    bl,BYTE PTR [eax-0x5c]
  41a85f:	mov    eax,0x1a5d8695
  41a864:	fldln2 
  41a866:	les    ecx,FWORD PTR [eax]
  41a868:	out    dx,eax
  41a869:	jmp    0xeb09:0xad2b29c
  41a870:	and    BYTE PTR ds:0xbe1de301,dh
  41a876:	mov    dh,0xc2
  41a878:	int3   
  41a879:	ror    edx,cl
  41a87b:	push   ss
  41a87c:	sbb    dl,dl
  41a87e:	pop    es
  41a87f:	push   edi
  41a880:	ret    
  41a881:	xchg   DWORD PTR [eax+eiz*4-0x59c73ffc],ebx
  41a888:	sbb    DWORD PTR [esp+edi*4+0x5e],ecx
  41a88c:	(bad)  
  41a88d:	cmc    
  41a88e:	lds    ecx,FWORD PTR [esi]
  41a890:	cmp    BYTE PTR [eax+0x2e],cl
  41a893:	mov    al,0xfb
  41a895:	test   DWORD PTR [edx+ebp*4-0x73],ebx
  41a899:	rcl    BYTE PTR [esi+0x89b5238],0x62
  41a8a0:	repz mov cl,dh
  41a8a3:	mov    ecx,0x270704ac
  41a8a8:	mov    fs,WORD PTR [edx+edx*2+0x92896ba]
  41a8af:	clc    
  41a8b0:	pop    ebp
  41a8b1:	xlat   BYTE PTR ds:[ebx]
  41a8b2:	cmp    ah,BYTE PTR [edi-0x2cd1f27c]
  41a8b8:	in     eax,0x74
  41a8ba:	sub    eax,DWORD PTR [edx+0x50]
  41a8bd:	fadd   QWORD PTR [ecx]
  41a8bf:	and    ecx,DWORD PTR ds:0xa2ccc179
  41a8c5:	sar    DWORD PTR [eax],1
  41a8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8c8:	jl     0x41a8ff
  41a8ca:	sar    DWORD PTR ds:0x41c4194e,cl
  41a8d0:	loop   0x41a8ae
  41a8d2:	aad    0x9e
  41a8d4:	and    bh,BYTE PTR [eax]
  41a8d6:	pop    ebx
  41a8d7:	shr    eax,0x36
  41a8da:	cmp    eax,0x62424291
  41a8df:	test   BYTE PTR [edx+0x38ed28e5],0x89
  41a8e6:	lods   al,BYTE PTR ds:[esi]
  41a8e7:	xchg   esi,eax
  41a8e8:	dec    edx
  41a8e9:	pop    ds
  41a8ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8eb:	sub    esi,ebp
  41a8ed:	mov    DWORD PTR [ebx],esp
  41a8ef:	fwait
  41a8f0:	cmp    eax,esp
  41a8f2:	inc    ebp
  41a8f3:	nop
  41a8f4:	push   eax
  41a8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8f6:	cdq    
  41a8f7:	jp     0x41a884
  41a8f9:	and    al,0x41
  41a8fb:	push   ebx
  41a8fc:	jne    0x41a91b
  41a8fe:	inc    eax
  41a8ff:	pop    edi
  41a900:	sbb    al,0xb6
  41a902:	loopne 0x41a964
  41a904:	inc    ebp
  41a905:	stos   BYTE PTR es:[edi],al
  41a906:	inc    edi
  41a907:	push   ss
  41a908:	fnsave [edi+0xe963897]
  41a90e:	and    ebx,DWORD PTR [edi+0x5a]
  41a911:	ss xor al,ah
  41a914:	adc    BYTE PTR ds:0x15a09cf5,bl
  41a91a:	ins    DWORD PTR es:[edi],dx
  41a91b:	out    dx,al
  41a91c:	cmp    eax,0xbd0654f6
  41a921:	mov    ch,0xa1
  41a923:	lods   al,BYTE PTR ds:[esi]
  41a924:	cmc    
  41a925:	ds push eax
  41a927:	push   ss
  41a928:	xor    al,0xa2
  41a92a:	sub    dh,dh
  41a92c:	add    eax,0x8185cfef
  41a931:	inc    ebx
  41a932:	retf   0xa08
  41a935:	out    0x95,al
  41a937:	add    BYTE PTR [ecx],0x3c
  41a93a:	fwait
  41a93b:	mov    al,0x4
  41a93d:	inc    edx
  41a93e:	mov    BYTE PTR [edx+0x239d5d6],dh
  41a944:	mov    esp,0xeaca4105
  41a949:	shr    BYTE PTR [eax-0x3b6999a9],0x4d
  41a950:	sub    al,0xfa
  41a952:	scas   al,BYTE PTR es:[edi]
  41a953:	scas   eax,DWORD PTR es:[edi]
  41a954:	sti    
  41a955:	bound  esp,QWORD PTR [eax+0x14]
  41a958:	sbb    ecx,ebp
  41a95a:	pop    edi
  41a95b:	sbb    ebp,DWORD PTR [eax]
  41a95d:	(bad)  
  41a95e:	mov    eax,0x121304b
  41a963:	adc    DWORD PTR [ebx],edx
  41a965:	es cdq 
  41a967:	outs   dx,DWORD PTR ds:[esi]
  41a968:	or     BYTE PTR [eax-0x5a4dc9a],cl
  41a96e:	mov    ah,BYTE PTR [ebx+esi*4]
  41a971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a972:	repz adc ebp,eax
  41a975:	adc    eax,0x5d300b07
  41a97a:	shr    DWORD PTR [ebx+0x5bdc8711],0xcf
  41a981:	stos   BYTE PTR es:[edi],al
  41a982:	and    eax,0xe00b0070
  41a987:	and    BYTE PTR [ebx+0x6f8290a7],bl
  41a98d:	arpl   WORD PTR [edi-0x38],di
  41a990:	lds    ebp,FWORD PTR [eax]
  41a992:	imul   edx,DWORD PTR [eax],0xffffffeb
  41a995:	scas   al,BYTE PTR es:[edi]
  41a996:	sub    eax,0xb89576eb
  41a99b:	dec    ebp
  41a99c:	fmul   QWORD PTR [esi+ebx*4+0x317670b]
  41a9a3:	mov    dh,0x60
  41a9a5:	jle    0x41aa26
  41a9a7:	inc    ebx
  41a9a8:	mov    ds:0x4592b5bc,al
  41a9ad:	mov    edx,0x17a4c21e
  41a9b2:	add    edi,esp
  41a9b4:	mov    edx,eax
  41a9b6:	mov    BYTE PTR [esp+edx*4],bl
  41a9b9:	xchg   ebx,eax
  41a9ba:	dec    eax
  41a9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9bc:	nop
  41a9bd:	outs   dx,DWORD PTR ds:[esi]
  41a9be:	imul   DWORD PTR [edi+0x3f996911]
  41a9c4:	or     al,cl
  41a9c6:	or     BYTE PTR [ebx-0x7970026c],bh
  41a9cc:	xchg   edi,eax
  41a9cd:	cmc    
  41a9ce:	pop    ss
  41a9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9d0:	mov    BYTE PTR [ebp-0x7408d0d6],dl
  41a9d6:	sub    eax,0xe3a7023c
  41a9db:	enter  0x8639,0xa8
  41a9df:	int3   
  41a9e0:	pushf  
  41a9e1:	xchg   ebx,eax
  41a9e2:	out    0xdd,al
  41a9e4:	pop    ebp
  41a9e5:	mov    esp,DWORD PTR [eax+0x32e389d9]
  41a9eb:	xor    BYTE PTR [esp+eax*2+0x26],dl
  41a9ef:	call   0xb8077482
  41a9f4:	xor    ebp,esi
  41a9f6:	jle    0x41aa6d
  41a9f8:	stos   DWORD PTR es:[edi],eax
  41a9f9:	cs (bad) 
  41a9fb:	or     DWORD PTR [ebx-0x619643e5],edx
  41aa01:	outs   dx,DWORD PTR ds:[esi]
  41aa02:	mov    esi,0xe2eaae78
  41aa07:	ret    0xef62
  41aa0a:	aam    0x8c
  41aa0c:	xchg   ebx,eax
  41aa0d:	in     al,0x41
  41aa0f:	push   esp
  41aa10:	dec    ebx
  41aa11:	mov    esi,0xf4f0a22
  41aa16:	(bad)
  41aa19:	sub    eax,0xe281add5
  41aa1e:	icebp  
  41aa1f:	mov    es,WORD PTR [ecx-0x247c1727]
  41aa25:	jb     0x41aa06
  41aa27:	ja     0x41aa09
  41aa29:	add    eax,0x22e2d6e3
  41aa2e:	inc    esp
  41aa30:	add    bh,BYTE PTR [ebx]
  41aa32:	aas    
  41aa33:	mov    WORD PTR [ebp-0x3149c23],es
  41aa39:	jne    0x41a9f4
  41aa3b:	test   bl,dl
  41aa3d:	add    BYTE PTR [esi-0x3],cl
  41aa40:	test   esi,esp
  41aa42:	cld    
  41aa43:	sbb    al,0x33
  41aa45:	or     bh,al
  41aa47:	or     edx,DWORD PTR cs:[esi]
  41aa4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa4b:	ss scas eax,DWORD PTR es:[edi]
  41aa4d:	inc    eax
  41aa4e:	mov    esi,0x60ff0fce
  41aa53:	adc    DWORD PTR [esp+eax*8-0x3d],edx
  41aa57:	das    
  41aa58:	es stos BYTE PTR es:[edi],al
  41aa5a:	add    al,0x19
  41aa5c:	enter  0xd637,0xe1
  41aa60:	cwde   
  41aa61:	mov    al,ds:0xad5120c3
  41aa66:	rol    BYTE PTR [edi+0x4d],0xb9
  41aa6a:	push   esi
  41aa6b:	mov    al,0x46
  41aa6d:	xlat   BYTE PTR ds:[ebx]
  41aa6e:	hlt    
  41aa6f:	dec    eax
  41aa70:	xor    bl,0xe5
  41aa73:	jo     0x41aa72
  41aa75:	out    dx,al
  41aa76:	or     dl,bl
  41aa78:	pop    es
  41aa79:	dec    eax
  41aa7a:	adc    esi,DWORD PTR [ebx-0x56]
  41aa7d:	add    BYTE PTR [edi+0x190f4321],cl
  41aa83:	add    BYTE PTR [ebx-0xa],0x8f
  41aa87:	or     DWORD PTR [eax+0x4a],ecx
  41aa8a:	xlat   BYTE PTR ds:[ebx]
  41aa8b:	imul   edx,DWORD PTR [ebx],0xffffffe8
  41aa8e:	jbe    0x41aa1e
  41aa90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa91:	loop   0x41aa8a
  41aa93:	push   0x98af514d
  41aa98:	mov    bh,0xa0
  41aa9a:	and    BYTE PTR [ebp+0x37],dh
  41aa9d:	addr16 jle 0x41aab4
  41aaa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaa1:	xor    al,0xe
  41aaa3:	push   edx
  41aaa4:	fild   QWORD PTR [esi-0x42]
  41aaa7:	mov    bh,0xf2
  41aaa9:	ins    BYTE PTR es:[edi],dx
  41aaaa:	stos   DWORD PTR es:[edi],eax
  41aaab:	rcl    BYTE PTR [eax-0x7e],1
  41aaae:	add    DWORD PTR [ebp+0x43e6347c],eax
  41aab4:	(bad)  
  41aab5:	mov    ebx,0xf9e207f
  41aaba:	push   0x1c
  41aabc:	gs clc 
  41aabe:	jmp    0x9f39b2df
  41aac3:	imul   ebx,DWORD PTR [edx+0x4a],0x5c6e40f4
  41aaca:	sub    BYTE PTR [esi-0x2f78b887],ah
  41aad0:	(bad)  
  41aad1:	div    bl
  41aad3:	xchg   ebx,eax
  41aad4:	inc    esp
  41aad5:	adc    cl,BYTE PTR [eax-0x76]
  41aad8:	mov    dh,0xe8
  41aada:	fidivr DWORD PTR [ecx+0x1d1c01f7]
  41aae0:	xchg   ebx,eax
  41aae1:	xchg   esi,eax
  41aae2:	shl    BYTE PTR [ecx-0x14],1
  41aae5:	adc    ebp,DWORD PTR [ebx]
  41aae7:	frstor [ebx+0x4c]
  41aaea:	hlt    
  41aaeb:	scas   eax,DWORD PTR es:[edi]
  41aaec:	leave  
  41aaed:	faddp  st(2),st
  41aaef:	push   ecx
  41aaf0:	sti    
  41aaf1:	int    0x74
  41aaf3:	pavgw  mm1,QWORD PTR [esi+0x463b6b90]
  41aafa:	sbb    al,0x95
  41aafc:	ret    0x1a91
  41aaff:	aaa    
  41ab00:	lods   al,BYTE PTR ds:[esi]
  41ab01:	xchg   ebx,eax
  41ab02:	es aaa 
  41ab04:	repnz sub bl,bl
  41ab07:	aas    
  41ab08:	cmp    bh,ah
  41ab0a:	aaa    
  41ab0b:	mov    ebp,0x7b3428ce
  41ab10:	dec    eax
  41ab11:	and    al,0xb4
  41ab13:	not    cl
  41ab15:	aas    
  41ab16:	push   es
  41ab17:	and    dh,ah
  41ab19:	in     eax,dx
  41ab1a:	pop    ebx
  41ab1b:	ja     0x41aab2
  41ab1d:	fstp   TBYTE PTR [ecx-0x4e9b51df]
  41ab23:	stc    
  41ab24:	loope  0x41aac6
  41ab26:	aam    0xcb
  41ab28:	aad    0x6c
  41ab2a:	push   0x11
  41ab2c:	bound  esp,QWORD PTR [ebp+0x33bea1a8]
  41ab32:	jmp    0x41aab9
  41ab34:	dec    edi
  41ab35:	mov    ebx,0x5e741b0f
  41ab3a:	fild   WORD PTR [edi-0x4e]
  41ab3d:	pop    ds
  41ab3e:	lahf   
  41ab3f:	inc    ecx
  41ab40:	cmp    al,0xd7
  41ab42:	mov    eax,0x8831542d
  41ab47:	test   al,0x52
  41ab49:	outs   dx,BYTE PTR ds:[esi]
  41ab4a:	xchg   DWORD PTR [esi-0x415345d2],ecx
  41ab50:	aas    
  41ab51:	mov    edi,esi
  41ab53:	cmp    BYTE PTR [eax],bl
  41ab55:	pushf  
  41ab56:	test   cl,bl
  41ab58:	(bad)  
  41ab59:	gs jge 0x41ab40
  41ab5c:	das    
  41ab5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab5e:	and    al,BYTE PTR [ecx+0x13ef8e80]
  41ab64:	add    DWORD PTR [ecx],esp
  41ab66:	cmovno ecx,ebp
  41ab69:	push   eax
  41ab6a:	sti    
  41ab6b:	retf   
  41ab6c:	mov    ecx,0x374ae466
  41ab71:	pop    ebp
  41ab72:	fwait
  41ab73:	popa   
  41ab74:	cld    
  41ab75:	add    dh,BYTE PTR [esi]
  41ab77:	repnz int 0x37
  41ab7a:	mov    eax,ds:0x6a68a387
  41ab7f:	test   ch,dh
  41ab81:	mov    dh,0x95
  41ab83:	cmp    eax,0x4e202a14
  41ab88:	pop    es
  41ab89:	add    eax,0x60ec1ab4
  41ab8e:	push   0x81d8e5dc
  41ab93:	into   
  41ab94:	div    DWORD PTR [ecx-0x68]
  41ab97:	cmp    eax,DWORD PTR [edi-0x61349020]
  41ab9d:	jmp    0x6b5c4955
  41aba2:	push   ebx
  41aba3:	push   0xb4dde7f6
  41aba8:	inc    ecx
  41aba9:	idiv   DWORD PTR [esi+0x3e74007b]
  41abaf:	or     al,0x51
  41abb1:	int3   
  41abb2:	xchg   edx,eax
  41abb3:	cli    
  41abb4:	dec    edi
  41abb5:	fstp   QWORD PTR [ecx]
  41abb7:	mov    ebp,0xf6748b93
  41abbc:	xchg   ebp,eax
  41abbd:	mov    dl,cl
  41abbf:	bound  edx,QWORD PTR [ebx]
  41abc1:	sbb    dl,BYTE PTR ds:0xd48533f8
  41abc7:	ins    BYTE PTR es:[edi],dx
  41abc8:	outs   dx,DWORD PTR ds:[esi]
  41abc9:	pusha  
  41abca:	aaa    
  41abcb:	into   
  41abcc:	xor    BYTE PTR [ebx+0x74],0xcd
  41abd0:	scas   al,BYTE PTR es:[edi]
  41abd1:	adc    DWORD PTR [esi+0x5],ecx
  41abd4:	xor    DWORD PTR [ecx],esi
  41abd6:	mov    bh,0xca
  41abd8:	or     BYTE PTR [ebx+edx*4],ch
  41abdb:	scas   eax,DWORD PTR es:[edi]
  41abdc:	inc    ebx
  41abdd:	sub    DWORD PTR [esi*8+0x29af72b6],ebp
  41abe4:	sub    al,0xbe
  41abe6:	adc    esi,esi
  41abe8:	inc    esi
  41abe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abeb:	xor    ah,BYTE PTR [ebx-0x3b30e9d2]
  41abf1:	add    ebx,eax
  41abf3:	retf   0x8497
  41abf6:	inc    ecx
  41abf7:	inc    esi
  41abf8:	cmp    DWORD PTR [esi+0x5d],0x353db8b6
  41abff:	cmp    al,0x3a
  41ac01:	arpl   WORD PTR [edi+ebx*4+0x48],bx
  41ac05:	daa    
  41ac06:	mov    ds:0x6371c9e1,al
  41ac0b:	cli    
  41ac0c:	pop    ecx
  41ac0d:	jbe    0x41ac29
  41ac0f:	adc    edi,DWORD PTR [ecx]
  41ac11:	outs   dx,BYTE PTR ds:[esi]
  41ac12:	push   0xd03e94b4
  41ac17:	jmp    0x80ed6eb0
  41ac1c:	in     al,0x3e
  41ac1e:	xor    ebx,DWORD PTR [ebp-0x29]
  41ac21:	or     ecx,esp
  41ac23:	and    ah,BYTE PTR [eax]
  41ac25:	dec    DWORD PTR [ebp-0x630bb955]
  41ac2b:	dec    edx
  41ac2c:	push   0xffffff87
  41ac2e:	mov    ebp,0x1654dcb7
  41ac33:	mov    ecx,0x4c0aada8
  41ac38:	adc    eax,DWORD PTR [eax+0x43]
  41ac3b:	(bad)  
  41ac3c:	shl    edi,cl
  41ac3e:	sub    al,0xe7
  41ac40:	xchg   DWORD PTR [edi],ebp
  41ac42:	out    0xfd,eax
  41ac44:	es and al,0x26
  41ac47:	jg     0x41ac7b
  41ac49:	jns    0x41ac34
  41ac4b:	lods   eax,DWORD PTR ds:[esi]
  41ac4c:	mov    dh,0xc4
  41ac4e:	cld    
  41ac4f:	or     BYTE PTR [edx-0x63],bh
  41ac52:	sbb    ebx,esp
  41ac54:	mov    BYTE PTR [ebp+0x6],ah
  41ac57:	ret    0x12bd
  41ac5a:	dec    eax
  41ac5b:	pop    esp
  41ac5c:	int    0x60
  41ac5e:	mov    bl,0xa5
  41ac60:	adc    DWORD PTR [ebx],0x6e5d7b98
  41ac66:	dec    ebp
  41ac67:	ds pop ss
  41ac69:	cmp    DWORD PTR [ecx],edx
  41ac6b:	je     0x41acdd
  41ac6d:	and    dl,BYTE PTR [ecx+0x1d]
  41ac70:	dec    eax
  41ac71:	(bad)  
  41ac72:	test   eax,0x68387557
  41ac77:	jbe    0x41acf4
  41ac79:	(bad)  
  41ac7a:	push   ebx
  41ac7b:	scas   al,BYTE PTR es:[edi]
  41ac7c:	inc    eax
  41ac7d:	fisttp DWORD PTR ds:0xf10a4394
  41ac83:	int3   
  41ac84:	xlat   BYTE PTR ds:[ebx]
  41ac85:	ret    0xe18d
  41ac88:	xor    al,0x62
  41ac8a:	loope  0x41ac15
  41ac8c:	cmp    edi,DWORD PTR [eax]
  41ac8e:	pushf  
  41ac8f:	daa    
  41ac90:	pop    ds
  41ac91:	sub    cl,BYTE PTR [edx-0x299eb084]
  41ac97:	adc    DWORD PTR [ecx],edx
  41ac99:	adc    eax,0x300c44e5
  41ac9e:	fwait
  41ac9f:	addr16 xor al,0x98
  41aca2:	mov    DWORD PTR [ecx],esi
  41aca4:	jne    0x41ac90
  41aca6:	scas   eax,DWORD PTR es:[edi]
  41aca7:	retf   
  41aca8:	mov    eax,0x404f7e25
  41acad:	cmp    al,dh
  41acaf:	cwde   
  41acb0:	mov    BYTE PTR [ebx],bh
  41acb2:	pop    edx
  41acb3:	sub    ch,bh
  41acb5:	hlt    
  41acb6:	mov    eax,0x24b131ed
  41acbb:	aad    0xa1
  41acbd:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acbf:	sub    ah,BYTE PTR [esi-0x22]
  41acc2:	jle    0x41ad3d
  41acc4:	sbb    ch,dh
  41acc6:	sub    eax,0xf55d82d9
  41accb:	mov    eax,ds:0x815da0dd
  41acd0:	jp     0x41ac73
  41acd2:	mov    WORD PTR [ecx+eax*8-0x11c61f35],es
  41acd9:	xlat   BYTE PTR ds:[ebx]
  41acda:	cmp    al,BYTE PTR ds:0xfd88fa33
  41ace0:	je     0x3447b936
  41ace6:	mov    ecx,0x37d32f2a
  41aceb:	adc    edi,edx
  41aced:	mov    DWORD PTR [eax-0xc91f26a],edi
  41acf3:	hlt    
  41acf4:	mov    bl,0x3c
  41acf6:	div    BYTE PTR [ebp+0x3adc42be]
  41acfc:	xor    DWORD PTR [esi+0x1f],ebx
  41acff:	xchg   esp,eax
  41ad00:	call   DWORD PTR [ebx+edi*2-0x76e0c18c]
  41ad07:	mov    ds:0x65cb79d8,al
  41ad0c:	(bad)  
  41ad0d:	jmp    0x41ad33
  41ad0f:	inc    ebp
  41ad10:	mov    ebp,0xac917f88
  41ad15:	call   0xf0005980
  41ad1a:	mul    BYTE PTR [ecx+edi*8]
  41ad1d:	push   cs
  41ad1e:	jge    0x41ad17
  41ad20:	xchg   ecx,eax
  41ad21:	aaa    
  41ad22:	sub    DWORD PTR [edx],edi
  41ad24:	sbb    BYTE PTR [edi-0x69],bl
  41ad27:	in     al,0xfe
  41ad29:	int    0xe0
  41ad2b:	cmp    al,bh
  41ad2d:	scas   al,BYTE PTR es:[edi]
  41ad2e:	call   0xa2bb81be
  41ad33:	jge    0x41ad4a
  41ad35:	into   
  41ad36:	add    eax,0x64fca7bf
  41ad3b:	aam    0x89
  41ad3d:	jns    0x41ad0c
  41ad3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad40:	mov    al,0xbb
  41ad42:	push   ss
  41ad43:	pusha  
  41ad44:	(bad)  
  41ad45:	sbb    al,0x5b
  41ad47:	jg     0x41ad22
  41ad49:	sbb    eax,0xc42dbc6c
  41ad4e:	or     esp,eax
  41ad50:	shl    BYTE PTR [ecx+ebx*1-0x40],cl
  41ad54:	clc    
  41ad55:	rcr    DWORD PTR [ebx-0xf8b80e9],0xdc
  41ad5c:	ficom  DWORD PTR [edi-0xb]
  41ad5f:	mov    ecx,0x87c2ab25
  41ad64:	xchg   esp,eax
  41ad65:	adc    esp,ecx
  41ad67:	cmp    ch,dl
  41ad69:	xor    esp,DWORD PTR [edi+0x56818036]
  41ad6f:	(bad)
  41ad72:	adc    DWORD PTR [esi+0x2c],ebp
  41ad75:	push   ebp
  41ad76:	push   ecx
  41ad77:	scas   al,BYTE PTR es:[edi]
  41ad78:	popa   
  41ad79:	outs   dx,BYTE PTR ds:[esi]
  41ad7a:	lahf   
  41ad7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad7c:	lods   al,BYTE PTR ds:[esi]
  41ad7d:	jno    0x41ad68
  41ad7f:	push   edi
  41ad80:	cwde   
  41ad81:	push   ss
  41ad82:	lea    ebx,ds:0xd97309de
  41ad88:	add    DWORD PTR [esi],ebp
  41ad8a:	sub    DWORD PTR [ebp-0x7d],esp
  41ad8d:	loop   0x41ae07
  41ad8f:	xlat   BYTE PTR ds:[ebx]
  41ad90:	cmc    
  41ad91:	in     eax,dx
  41ad92:	idiv   BYTE PTR [eax+0x17cd301f]
  41ad98:	lds    esp,FWORD PTR [eax+eiz*1-0x4f]
  41ad9c:	xchg   DWORD PTR [eax-0x4a6fa708],esp
  41ada2:	mov    cs,esp
  41ada4:	adc    bl,BYTE PTR [edi]
  41ada6:	xor    al,0x4c
  41ada8:	mov    ds:0xe0b16b99,al
  41adad:	mov    al,0x86
  41adaf:	scas   eax,DWORD PTR es:[edi]
  41adb0:	test   al,0xe7
  41adb2:	std    
  41adb3:	mov    edx,0xb7be580e
  41adb8:	xchg   ebx,eax
  41adb9:	jne    0x41ad6a
  41adbb:	cs inc eax
  41adbd:	imul   esp,ecx,0xe71e44b
  41adc3:	fcomip st,st(1)
  41adc5:	mov    WORD PTR [edi+0x7f90dfa3],ds
  41adcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adcc:	mov    ds:0x914c2dcf,eax
  41add1:	imul   ebp,DWORD PTR [esp+edx*4-0x72],0xf372d3b2
  41add9:	xor    bl,BYTE PTR [esi]
  41addb:	jmp    0x774bc3cf
  41ade0:	push   0xfc0059cb
  41ade5:	jp     0x41ae19
  41ade7:	push   0x274a7a57
  41adec:	mov    ch,0xa
  41adee:	push   ss
  41adef:	test   BYTE PTR [ecx+ebx*1],ch
  41adf2:	enter  0xa956,0x52
  41adf6:	pop    ecx
  41adf7:	retf   0x58d2
  41adfa:	test   eax,0x68f688d
  41adff:	sbb    al,0xdc
  41ae01:	adc    bl,dl
  41ae03:	mov    al,0xe
  41ae05:	pop    ecx
  41ae06:	mov    ecx,DWORD PTR [ebp+0x7038676]
  41ae0c:	and    BYTE PTR [esi+eax*8],ch
  41ae0f:	retf   
  41ae10:	inc    edi
  41ae11:	cmp    eax,0xe9d26668
  41ae16:	sub    BYTE PTR [esi+0x161c727e],al
  41ae1c:	cmp    al,0x34
  41ae1e:	mov    esi,0x6460ed0e
  41ae23:	test   DWORD PTR [edi+0x28974bfb],ecx
  41ae29:	pop    eax
  41ae2a:	(bad)  
  41ae2b:	ds pop ds
  41ae2d:	dec    ebp
  41ae2e:	icebp  
  41ae2f:	sbb    BYTE PTR ds:0x2331d443,ah
  41ae35:	cmp    DWORD PTR [eax],esp
  41ae37:	test   al,0x53
  41ae39:	icebp  
  41ae3a:	ficom  WORD PTR [edx]
  41ae3c:	pop    edi
  41ae3d:	std    
  41ae3e:	or     BYTE PTR [eax+ebp*2],0x9f
  41ae42:	push   ss
  41ae43:	int3   
  41ae44:	stos   BYTE PTR es:[edi],al
  41ae45:	xor    eax,0xbccf5373
  41ae4a:	test   eax,0x64ec4900
  41ae4f:	das    
  41ae50:	xchg   DWORD PTR [esi+0x4511512c],esp
  41ae56:	je     0x41ae19
  41ae58:	scas   eax,DWORD PTR es:[edi]
  41ae59:	adc    BYTE PTR [edx+ebp*4],dh
  41ae5c:	pop    ds
  41ae5d:	mov    eax,ds:0xf6c55c0a
  41ae62:	das    
  41ae63:	mov    ebx,edx
  41ae65:	pop    esi
  41ae66:	xchg   esp,eax
  41ae67:	aad    0xeb
  41ae69:	repnz bound ebp,QWORD PTR ds:0x58fd83da
  41ae70:	mov    eax,0x3f0615d0
  41ae75:	iret   
  41ae76:	sbb    esi,DWORD PTR [esi+0x74]
  41ae79:	pop    ebx
  41ae7a:	xor    BYTE PTR ds:0x6126d393,dl
  41ae80:	enter  0x493d,0x25
  41ae84:	xor    eax,0x390f7476
  41ae89:	cs push esp
  41ae8b:	xor    dh,BYTE PTR [edx-0x3a]
  41ae8e:	fcmovb st,st(1)
  41ae90:	test   bh,bh
  41ae92:	inc    esp
  41ae93:	aad    0xca
  41ae95:	inc    edx
  41ae96:	int    0xf2
  41ae98:	cmp    eax,0x210c3e8d
  41ae9d:	mov    cl,0xd3
  41ae9f:	dec    edi
  41aea0:	inc    esp
  41aea1:	in     al,0x50
  41aea3:	(bad)
  41aea6:	sub    al,0xaf
  41aea8:	test   al,0x83
  41aeaa:	mov    ds:0x11613bab,al
  41aeaf:	into   
  41aeb0:	aam    0x80
  41aeb2:	adc    ebp,DWORD PTR [ebx]
  41aeb4:	int3   
  41aeb5:	dec    ecx
  41aeb6:	shl    BYTE PTR [ecx+0x72b18e2d],cl
  41aebc:	ret    
  41aebd:	call   0x2c12:0x4515587
  41aec4:	into   
  41aec5:	mov    dh,0xb2
  41aec7:	mov    al,0x59
  41aec9:	shr    BYTE PTR [ebp+0x511dd6c3],1
  41aecf:	jne    0x41ae59
  41aed1:	or     BYTE PTR [eax-0x12],al
  41aed4:	stos   BYTE PTR es:[edi],al
  41aed5:	ja     0x41aee5
  41aed7:	or     DWORD PTR [ebp-0x5f3223ef],0xb0fca3af
  41aee1:	bound  ebp,QWORD PTR [ebx+ebx*4-0x55]
  41aee5:	mov    ch,0x4d
  41aee7:	sub    DWORD PTR [ebp+0x36],ebx
  41aeea:	adc    BYTE PTR [ebp+0x27],dl
  41aeed:	cmp    edx,0x2fc29862
  41aef3:	daa    
  41aef4:	pop    es
  41aef5:	push   cs
  41aef6:	and    al,0x3
  41aef8:	das    
  41aef9:	fbld   TBYTE PTR [ebx-0x4a67dba5]
  41aeff:	mov    ebx,0xe2eb46eb
  41af04:	push   edx
  41af05:	hlt    
  41af06:	sbb    BYTE PTR [ebx+0x7c436f25],ch
  41af0c:	mov    DWORD PTR ds:[eax+0x66045e43],0x638aebdb
  41af17:	mov    eax,0x999870ea
  41af1c:	mov    bh,0xa9
  41af1e:	push   ss
  41af1f:	add    esp,DWORD PTR [edi+ebp*4-0x67]
  41af23:	push   ds
  41af24:	addr16 retf 
  41af26:	or     esi,DWORD PTR [edx+0x1f]
  41af29:	dec    edx
  41af2a:	inc    ebx
  41af2b:	std    
  41af2c:	push   esp
  41af2d:	xchg   edi,eax
  41af2e:	pop    ebx
  41af2f:	pop    ebx
  41af30:	mov    ds:0x87e06304,al
  41af35:	jl     0x41af73
  41af37:	sbb    ebx,DWORD PTR [ebx]
  41af39:	xor    ah,BYTE PTR [ebx+0x4a]
  41af3c:	pop    ss
  41af3d:	xchg   ebx,eax
  41af3e:	cdq    
  41af3f:	dec    ebp
  41af40:	xor    eax,0xa6c6bd18
  41af45:	pop    ds
  41af46:	inc    ebx
  41af47:	in     eax,0xe9
  41af49:	pop    ds
  41af4a:	mov    DWORD PTR [edi],esi
  41af4c:	add    al,0x94
  41af4e:	sub    DWORD PTR [eax+0x51be7b41],esp
  41af54:	shl    BYTE PTR [ecx+0x3dcbee6d],cl
  41af5a:	out    dx,al
  41af5b:	sbb    edx,DWORD PTR [ebx-0x664623e1]
  41af61:	fdiv   DWORD PTR [edx]
  41af63:	jl     0x41af2e
  41af65:	shr    DWORD PTR ds:0x6c66647f,1
  41af6b:	dec    eax
  41af6c:	xchg   edi,eax
  41af6d:	arpl   WORD PTR [ecx-0x5393378d],bx
  41af73:	gs clc 
  41af75:	daa    
  41af76:	(bad)  
  41af77:	loop   0x41afd3
  41af79:	shl    bl,cl
  41af7b:	shl    edx,1
  41af7d:	fldenv [ebx]
  41af7f:	pop    edi
  41af80:	(bad)  
  41af81:	cmp    esi,DWORD PTR [esi]
  41af83:	inc    eax
  41af84:	js     0x41afb3
  41af86:	jbe    0x41af16
  41af88:	js     0x41af71
  41af8a:	mov    dl,0xee
  41af8c:	or     esi,esi
  41af8e:	dec    esp
  41af8f:	addr16 ja 0x41af7f
  41af92:	fimul  WORD PTR [eax-0x3b]
  41af95:	inc    ebp
  41af96:	aad    0xd2
  41af98:	adc    esi,DWORD PTR [esi-0x59]
  41af9b:	dec    esp
  41af9c:	push   edx
  41af9d:	cmp    al,0x43
  41af9f:	dec    esp
  41afa0:	popa   
  41afa1:	or     ch,BYTE PTR [edi+eax*4]
  41afa4:	daa    
  41afa5:	test   al,0x1c
  41afa7:	jb     0x41aff8
  41afa9:	into   
  41afaa:	mov    ch,0xdd
  41afac:	leave  
  41afad:	pop    esp
  41afae:	add    al,0xff
  41afb0:	mov    cl,0xfe
  41afb2:	ins    DWORD PTR es:[edi],dx
  41afb3:	outs   dx,DWORD PTR ds:[esi]
  41afb4:	sbb    eax,esp
  41afb6:	add    dl,bh
  41afb8:	loope  0x41af6f
  41afba:	test   al,0x32
  41afbc:	mov    WORD PTR [ecx],?
  41afbe:	jge    0x41af51
  41afc0:	and    al,0xd9
  41afc2:	out    dx,al
  41afc3:	xor    eax,0x7f672e7b
  41afc8:	fiadd  DWORD PTR [esi-0x21]
  41afcb:	aad    0xde
  41afcd:	push   edx
  41afce:	push   esp
  41afcf:	pop    eax
  41afd0:	(bad)  
  41afd1:	xlat   BYTE PTR ds:[ebx]
  41afd2:	leave  
  41afd3:	fbld   TBYTE PTR [edi]
  41afd5:	cmp    eax,0x41b3b0a9
  41afda:	imul   ebx,DWORD PTR [edi],0xfffffff9
  41afdd:	adc    ch,BYTE PTR [ebx]
  41afdf:	fwait
  41afe0:	(bad)  
  41afe1:	ins    DWORD PTR es:[edi],dx
  41afe2:	test   bh,0x17
  41afe5:	xchg   esp,eax
  41afe6:	call   FWORD PTR [edi+eiz*1]
  41afe9:	cmp    eax,DWORD PTR [ebx-0x535f0e80]
  41afef:	fsub   st(3),st
  41aff1:	push   edx
  41aff2:	sbb    ebx,edi
  41aff4:	ja     0x41b060
  41aff6:	xor    eax,0x86d116ae
  41affb:	sbb    eax,0x8bd70e55
  41b000:	mov    eax,0x2ca28e1
  41b005:	inc    edi
  41b006:	out    dx,al
  41b007:	mov    dl,0x55
  41b009:	(bad)  
  41b00a:	xchg   ebx,eax
  41b00b:	rcl    DWORD PTR [eax],cl
  41b00d:	push   0xd7285e43
  41b012:	hlt    
  41b013:	lds    eax,FWORD PTR [eax]
  41b015:	mov    ebx,0xed3d7de6
  41b01a:	dec    edx
  41b01b:	sub    DWORD PTR [edx+0x2],ecx
  41b01e:	mov    ebp,0xa810f311
  41b023:	mov    al,ds:0x38712298
  41b028:	and    al,0xae
  41b02a:	mov    eax,0x87db474d
  41b02f:	and    DWORD PTR [edx],ecx
  41b031:	add    bh,BYTE PTR [edi]
  41b033:	pushf  
  41b034:	push   es
  41b035:	(bad)  
  41b036:	(bad)  
  41b037:	fcomp  DWORD PTR [esi+0x37]
  41b03a:	jmp    0xbaf2355b
  41b03f:	fild   WORD PTR [edi+0x2eac5082]
  41b045:	loopne 0x41aff0
  41b047:	push   edi
  41b048:	cmp    eax,0xbecdcfca
  41b04d:	sub    al,0xc0
  41b04f:	adc    BYTE PTR [edx],ah
  41b051:	jno    0x41b053
  41b053:	ret    0xea86
  41b056:	or     cl,BYTE PTR [ebx-0x3f]
  41b059:	adc    ah,BYTE PTR [edi-0x65]
  41b05c:	int3   
  41b05d:	sub    DWORD PTR [si-0x3e],ecx
  41b061:	(bad)  
  41b062:	mov    es,esi
  41b064:	mov    esi,0xde371a48
  41b069:	jmp    0x41afec
  41b06b:	popa   
  41b06c:	cmp    al,0xa3
  41b06e:	mov    ch,0xfa
  41b070:	(bad)  
  41b071:	jle    0x41b053
  41b073:	inc    ebx
  41b074:	mov    ds:0xd5639e75,al
  41b079:	jnp    0x41b0d6
  41b07b:	rcr    BYTE PTR [eax-0x36e13186],0x14
  41b082:	push   ebx
  41b083:	dec    edi
  41b084:	stos   DWORD PTR es:[edi],eax
  41b085:	inc    ebp
  41b086:	sbb    DWORD PTR [edx],esi
  41b088:	jl     0x41b07b
  41b08a:	mov    edx,0xf17e662a
  41b08f:	sub    al,dl
  41b091:	addr16 jo 0x41b0d2
  41b094:	add    dl,BYTE PTR [ecx+0x13]
  41b097:	(bad)  
  41b098:	pop    ds
  41b099:	sbb    eax,0x82662577
  41b09e:	jle    0x41b073
  41b0a0:	mov    eax,0x54abe19b
  41b0a5:	dec    esi
  41b0a6:	push   ds
  41b0a7:	dec    ecx
  41b0a8:	pop    edx
  41b0a9:	jg     0x41b07d
  41b0ab:	xlat   BYTE PTR ds:[ebx]
  41b0ac:	ins    DWORD PTR es:[edi],dx
  41b0ad:	addr16 (bad) 
  41b0af:	mov    ebp,0xd45f4cbe
  41b0b4:	mov    DWORD PTR [edx-0x71],eax
  41b0b7:	push   edi
  41b0b8:	push   es
  41b0b9:	clc    
  41b0ba:	sub    ax,0xef4e
  41b0be:	sub    BYTE PTR [ecx],bl
  41b0c0:	es or  eax,0x5962f723
  41b0c6:	dec    ecx
  41b0c7:	(bad)  
  41b0c8:	rcr    BYTE PTR [edx+0x46],1
  41b0cb:	aam    0x64
  41b0cd:	add    BYTE PTR [eax+ecx*2],0x45
  41b0d1:	mov    bh,0xec
  41b0d3:	xlat   BYTE PTR ds:[ebx]
  41b0d4:	icebp  
  41b0d5:	jnp    0x41b0e3
  41b0d7:	jno    0x41b099
  41b0d9:	mul    BYTE PTR [edi+0x37838466]
  41b0df:	pushf  
  41b0e0:	mov    eax,DWORD PTR [eax]
  41b0e2:	outs   dx,DWORD PTR ds:[esi]
  41b0e3:	iret   
  41b0e4:	fsubp  st(0),st
  41b0e6:	ret    
  41b0e7:	inc    edi
  41b0e8:	(bad)  
  41b0e9:	jae    0x41b084
  41b0eb:	mov    ebx,0x87e422d0
  41b0f0:	sti    
  41b0f1:	mov    al,ds:0xdf2a0021
  41b0f6:	mov    al,es:0x971d6d1c
  41b0fc:	jge    0x41b146
  41b0fe:	jmp    0x41b0df
  41b100:	mov    bh,0x91
  41b102:	das    
  41b103:	sub    edx,DWORD PTR [eax-0xf9f76cc]
  41b109:	cmc    
  41b10a:	sbb    DWORD PTR [ebx],esp
  41b10c:	sar    BYTE PTR [edi+0x757ccce8],1
  41b112:	dec    edx
  41b113:	push   esi
  41b114:	xchg   DWORD PTR [ecx-0x58],eax
  41b117:	jo     0x41b170
  41b119:	stos   BYTE PTR es:[edi],al
  41b11a:	(bad)  
  41b11b:	hlt    
  41b11c:	xor    BYTE PTR [esi-0x1c],cl
  41b11f:	sub    eax,DWORD PTR [eax-0x3f673770]
  41b125:	or     al,0xc8
  41b127:	push   esp
  41b128:	adc    al,0xdc
  41b12a:	int3   
  41b12b:	mov    ds:0x5c47464a,al
  41b130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	push   esi
  41b132:	push   ds
  41b133:	das    
  41b134:	aas    
  41b135:	xor    al,BYTE PTR [ecx+0x5c]
  41b138:	sub    eax,0xbe2f58e
  41b13d:	mov    ah,0xc3
  41b13f:	fmul   QWORD PTR [esi+0x74c1472e]
  41b145:	mov    ecx,0x5b444281
  41b14a:	adc    BYTE PTR [ebp-0x209a2c84],bl
  41b150:	inc    ebx
  41b151:	pop    es
  41b152:	inc    ecx
  41b153:	pop    eax
  41b154:	or     ecx,DWORD PTR [ecx+ebx*8]
  41b157:	adc    esp,DWORD PTR [ebp-0x57b5716b]
  41b15d:	sahf   
  41b15e:	xchg   BYTE PTR [edx-0x5ac3a6f0],bh
  41b164:	push   ebx
  41b165:	jns    0x41b187
  41b167:	les    ebp,FWORD PTR [ebp+0x2c2c5ef6]
  41b16d:	sbb    eax,0xe92dd31d
  41b172:	lahf   
  41b173:	xor    al,BYTE PTR [eax]
  41b175:	out    dx,eax
  41b176:	sub    eax,0xbeb4a68c
  41b17b:	fcompp 
  41b17d:	dec    ebx
  41b17e:	loop   0x41b1ff
  41b180:	add    DWORD PTR [ecx-0x23],edi
  41b183:	add    ah,ch
  41b185:	ror    DWORD PTR [edi-0x9],1
  41b188:	and    eax,0x7aee9f62
  41b18d:	rol    BYTE PTR [edx+0x58],1
  41b190:	out    0x88,al
  41b192:	neg    BYTE PTR [ecx+0x67219934]
  41b198:	xchg   edx,eax
  41b199:	and    eax,0x59a4565d
  41b19e:	int3   
  41b19f:	fld    TBYTE PTR [ebx+0x6e]
  41b1a3:	jle    0x41b1c5
  41b1a5:	mov    bh,0x73
  41b1a7:	rol    BYTE PTR [edi+0x653ac913],0xa6
  41b1ae:	cli    
  41b1af:	or     bl,cl
  41b1b1:	mov    ah,0xad
  41b1b3:	data16 xlat BYTE PTR ds:[ebx]
  41b1b5:	fidiv  DWORD PTR [edi+0x18efd32]
  41b1bb:	or     BYTE PTR [eax+0x2b062411],ch
  41b1c1:	cwde   
  41b1c2:	jle    0x41b229
  41b1c4:	mov    esi,0xd137a153
  41b1c9:	add    eax,0x8fb3e2f4
  41b1ce:	hlt    
  41b1cf:	jno    0x41b22c
  41b1d1:	jp     0x41b166
  41b1d3:	std    
  41b1d4:	aas    
  41b1d5:	and    bh,BYTE PTR [eax+0x38]
  41b1d8:	pusha  
  41b1d9:	push   eax
  41b1da:	mov    ch,0x8f
  41b1dc:	lods   eax,DWORD PTR ds:[esi]
  41b1dd:	cld    
  41b1de:	fistp  WORD PTR [ebx+0x6c]
  41b1e1:	pop    ss
  41b1e2:	test   BYTE PTR [ebx],bh
  41b1e4:	in     al,0xfa
  41b1e6:	and    ch,dh
  41b1e8:	ins    DWORD PTR es:[edi],dx
  41b1e9:	fcom   st(2)
  41b1eb:	pop    ecx
  41b1ec:	mov    ebp,0x406e17f2
  41b1f1:	cmp    eax,0x878d9798
  41b1f6:	or     al,0xf8
  41b1f8:	inc    ebp
  41b1f9:	(bad)  [ecx]
  41b1fb:	cmp    DWORD PTR [esi+0x48f65495],0x50
  41b202:	and    ecx,DWORD PTR [esi+0x69]
  41b205:	inc    edi
  41b206:	add    ebx,ecx
  41b208:	ret    0x6102
  41b20b:	mov    ebx,0xefdd0f48
  41b210:	mov    al,0x51
  41b212:	test   eax,0x6186c6d7
  41b217:	repz push ebp
  41b219:	stos   BYTE PTR es:[edi],al
  41b21a:	sub    DWORD PTR ds:0x1c7fcfb0,esi
  41b220:	shl    DWORD PTR [ebx+eiz*1],0xe8
  41b224:	dec    ecx
  41b225:	xchg   edi,eax
  41b226:	cmp    ecx,DWORD PTR [eax+0x46e5746c]
  41b22c:	cmc    
  41b22d:	adc    ax,0x4da8
  41b231:	das    
  41b232:	adc    BYTE PTR [edx],0x2
  41b235:	add    ah,BYTE PTR [ebx+eiz*4]
  41b238:	cmp    eax,0x45b22374
  41b23d:	xchg   ebx,eax
  41b23e:	push   0xffffffbe
  41b240:	sbb    edi,DWORD PTR [ebp-0x53]
  41b243:	dec    ebx
  41b244:	and    ch,BYTE PTR [eax]
  41b246:	sti    
  41b247:	mov    dh,0x60
  41b249:	popa   
  41b24a:	cld    
  41b24b:	push   cs
  41b24c:	retf   0x302f
  41b24f:	clc    
  41b250:	gs pop ds
  41b252:	in     al,dx
  41b253:	retf   0xcdd6
  41b256:	xchg   edx,eax
  41b257:	push   eax
  41b258:	cld    
  41b259:	mov    dl,0x7f
  41b25b:	pop    esi
  41b25c:	jns    0x41b236
  41b25e:	in     al,dx
  41b25f:	fnsave [ebx-0x28]
  41b262:	sbb    BYTE PTR [ebx],ah
  41b264:	sub    ah,dl
  41b266:	nop
  41b267:	sub    DWORD PTR [esi-0x42],edi
  41b26a:	or     esi,eax
  41b26c:	pop    es
  41b26d:	retf   
  41b26e:	icebp  
  41b26f:	test   BYTE PTR [ecx],cl
  41b271:	aaa    
  41b272:	and    ah,BYTE PTR [ecx-0x39]
  41b275:	cmp    BYTE PTR ds:0xa5f55b30,al
  41b27b:	push   es
  41b27c:	or     ch,al
  41b27e:	imul   ebx,DWORD PTR [ecx+0x71],0xffffffe1
  41b282:	pop    ebp
  41b283:	aad    0xeb
  41b285:	xor    BYTE PTR [eax],cl
  41b287:	scas   eax,DWORD PTR es:[edi]
  41b288:	cmp    eax,0x3a0031c5
  41b28d:	call   0x7edc:0x4fbfba19
  41b294:	aaa    
  41b295:	out    0xcb,al
  41b297:	rcr    BYTE PTR [edi],1
  41b299:	mov    eax,ds:0x5cbdc563
  41b29e:	stos   BYTE PTR es:[edi],al
  41b29f:	lahf   
  41b2a0:	mov    ss,WORD PTR [ebx-0x70b775ef]
  41b2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2a7:	out    0xdf,al
  41b2a9:	inc    ebx
  41b2aa:	lea    ebx,[edi-0x311dfb69]
  41b2b0:	ficom  DWORD PTR [edi]
  41b2b2:	inc    esp
  41b2b3:	or     eax,0x4f8ada70
  41b2b8:	in     eax,0xa3
  41b2ba:	sub    eax,0x435b9a93
  41b2bf:	(bad)  [edx+0x68]
  41b2c2:	push   ebp
  41b2c3:	dec    BYTE PTR [ecx-0x4f]
  41b2c6:	call   DWORD PTR [ebx+0x2b3bf5bc]
  41b2cc:	xor    al,0xfc
  41b2ce:	ror    DWORD PTR [ebp-0x18],1
  41b2d1:	out    0xc3,al
  41b2d3:	adc    eax,0x3b6b144
  41b2d8:	add    ebp,eax
  41b2da:	dec    ebp
  41b2db:	call   0x1d93:0x1b015ac4
  41b2e2:	xor    al,0x68
  41b2e4:	jl     0x41b269
  41b2e6:	scas   al,BYTE PTR es:[edi]
  41b2e7:	mov    esi,0xd21d7400
  41b2ec:	dec    edx
  41b2ed:	shl    DWORD PTR [ebx],0x1b
  41b2f0:	aam    0x3b
  41b2f2:	sub    eax,0xc6487d58
  41b2f7:	jb     0x41b2d1
  41b2f9:	aad    0xc
  41b2fb:	sar    DWORD PTR [edi+eiz*2-0x7553495f],cl
  41b302:	dec    esi
  41b303:	push   cs
  41b304:	jno    0x41b290
  41b306:	xchg   BYTE PTR [ebp-0x4d],ch
  41b309:	or     eax,0x9dc5c82f
  41b30e:	dec    ecx
  41b30f:	leave  
  41b310:	loope  0x41b2e9
  41b312:	add    cl,ah
  41b314:	mov    BYTE PTR [edx+0x6273f4d0],dh
  41b31a:	cwde   
  41b31b:	mov    ch,0xe5
  41b31d:	out    dx,eax
  41b31e:	je     0x41b2b0
  41b320:	xchg   edx,eax
  41b321:	test   al,0x65
  41b323:	xchg   esi,eax
  41b324:	cmp    DWORD PTR [ebx+0x6d],0x64
  41b328:	mov    bh,0x1a
  41b32a:	xor    eax,0x21d42457
  41b32f:	ror    DWORD PTR [ecx-0x4f],0x86
  41b333:	dec    ebx
  41b334:	pop    esp
  41b335:	xchg   ah,ah
  41b337:	adc    ch,BYTE PTR [eax-0x3db93d48]
  41b33d:	push   ecx
  41b33e:	ret    
  41b33f:	loope  0x41b344
  41b341:	ja     0x41b323
  41b343:	ins    BYTE PTR es:[edi],dx
  41b344:	je     0x41b2ea
  41b346:	clc    
  41b347:	and    al,al
  41b349:	out    0xb9,eax
  41b34b:	into   
  41b34c:	push   ebx
  41b34d:	and    bl,dh
  41b34f:	xor    BYTE PTR [ecx+0x7a],bh
  41b352:	hlt    
  41b353:	mov    edi,0xfbf2d83
  41b358:	fsubr  QWORD PTR [ebx+0x6]
  41b35b:	mul    DWORD PTR [ebx]
  41b35d:	cmp    BYTE PTR [edi],dh
  41b35f:	jmp    0xb03:0x47855b60
  41b366:	daa    
  41b367:	and    BYTE PTR [esi],0xcc
  41b36a:	or     eax,0xbcf95e85
  41b36f:	dec    esi
  41b370:	cwde   
  41b371:	or     BYTE PTR [ecx],dl
  41b373:	push   edx
  41b374:	xor    BYTE PTR [esp+eiz*2+0x63f54919],ch
  41b37b:	push   ss
  41b37c:	mov    ebx,ecx
  41b37e:	test   ecx,ecx
  41b380:	cmp    DWORD PTR [ebx],ecx
  41b382:	inc    eax
  41b383:	push   ebx
  41b384:	sahf   
  41b385:	xchg   ebx,eax
  41b386:	xchg   edi,eax
  41b387:	(bad)  
  41b389:	cmp    al,0x4b
  41b38b:	fadd   DWORD PTR [eax]
  41b38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b38e:	dec    ebp
  41b38f:	inc    ebp
  41b390:	pop    esp
  41b391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b392:	jnp    0x41b39f
  41b394:	mov    al,ds:0x5949b75
  41b399:	push   ecx
  41b39a:	addr16 jl 0x41b326
  41b39d:	into   
  41b39e:	call   0x22e1f2e6
  41b3a3:	and    eax,0xd1fe0caa
  41b3a8:	(bad)  
  41b3a9:	cmp    edi,esi
  41b3ab:	mov    ds:0x55e76e08,eax
  41b3b0:	and    eax,0xd266bda9
  41b3b5:	out    0x54,al
  41b3b7:	and    al,0xb1
  41b3b9:	add    BYTE PTR [ebx+ecx*1+0x337630e6],ah
  41b3c0:	jmp    FWORD PTR [ecx-0x78]
  41b3c3:	lods   al,BYTE PTR ds:[esi]
  41b3c4:	ror    BYTE PTR [ebp-0x639d5bac],1
  41b3ca:	sub    DWORD PTR [edx+edx*1-0x27b35c8e],ecx
  41b3d1:	rcr    BYTE PTR [ecx+0x7c531dd3],cl
  41b3d7:	xchg   ebp,eax
  41b3d8:	cld    
  41b3d9:	icebp  
  41b3da:	(bad)  
  41b3db:	icebp  
  41b3dc:	mov    ah,0x81
  41b3de:	jns    0x41b397
  41b3e0:	xor    bh,BYTE PTR [ebx+0x5b823442]
  41b3e6:	sti    
  41b3e7:	xchg   ecx,eax
  41b3e8:	cmp    DWORD PTR [eax+eiz*1+0x5f],ebx
  41b3ec:	outs   dx,DWORD PTR ds:[esi]
  41b3ed:	dec    esp
  41b3ee:	and    al,0x1d
  41b3f0:	or     edx,DWORD PTR [edx]
  41b3f2:	mov    al,ds:0x269c6b06
  41b3f7:	cwde   
  41b3f8:	cmc    
  41b3f9:	in     al,dx
  41b3fa:	push   ebx
  41b3fb:	add    DWORD PTR [ebx],edi
  41b3fd:	jns    0x41b3a1
  41b3ff:	repz pop edx
  41b401:	push   0xffffff88
  41b403:	das    
  41b404:	adc    edx,edi
  41b406:	lods   al,BYTE PTR ds:[esi]
  41b407:	(bad)  
  41b408:	pushf  
  41b409:	hlt    
  41b40a:	lea    edx,[ebx+edx*4-0x73]
  41b40e:	dec    esi
  41b40f:	and    bh,bh
  41b411:	mov    edx,0xa02fa769
  41b416:	retf   
  41b417:	mov    ch,0x7f
  41b419:	sub    al,0xdb
  41b41b:	push   ss
  41b41c:	or     ebp,DWORD PTR [eax+ebp*4-0x5f7a3fea]
  41b423:	test   eax,0x1d020f41
  41b428:	add    eax,0x2a0280cc
  41b42d:	xchg   ebx,eax
  41b42e:	cmp    eax,DWORD PTR [ebx]
  41b430:	stos   BYTE PTR es:[edi],al
  41b431:	enter  0x30ce,0x83
  41b435:	stc    
  41b436:	addr16 mov cl,0x7
  41b439:	cs dec esi
  41b43b:	aaa    
  41b43c:	retf   
  41b43d:	mov    eax,ds:0x14dd5b3d
  41b442:	cmp    esi,DWORD PTR [edi]
  41b444:	test   DWORD PTR [ebx+edx*2-0x76],ebp
  41b448:	into   
  41b449:	bnd je 0x41b488
  41b44c:	xor    BYTE PTR [esi],dh
  41b44e:	sahf   
  41b44f:	jge    0x41b466
  41b451:	fidiv  WORD PTR ss:[edi+0x7928e2c]
  41b458:	(bad)  
  41b459:	push   0xffffffa8
  41b45b:	(bad)  
  41b45c:	daa    
  41b45d:	rcr    dl,1
  41b45f:	mov    ebx,0xaf7fb8b8
  41b464:	jge    0x41b447
  41b466:	fwait
  41b467:	js     0x41b489
  41b469:	and    bh,dl
  41b46b:	es stc 
  41b46d:	dec    esp
  41b46e:	inc    esp
  41b46f:	retf   0x3b70
  41b472:	loopne 0x41b4b7
  41b474:	cdq    
  41b475:	(bad)  
  41b476:	sub    cl,ah
  41b478:	ror    DWORD PTR [ebp-0x48],0x88
  41b47c:	test   ch,0x99
  41b47f:	ins    BYTE PTR es:[edi],dx
  41b480:	push   ss
  41b481:	pop    edi
  41b482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b483:	rcl    bh,1
  41b485:	stos   BYTE PTR es:[edi],al
  41b486:	sub    eax,0xe26c02bc
  41b48b:	and    BYTE PTR ds:0x2d48d5ef,cl
  41b491:	out    0xfe,al
  41b493:	sbb    eax,0x71214a87
  41b498:	sub    ch,BYTE PTR [edx+ebp*2+0x18]
  41b49c:	clc    
  41b49d:	jecxz  0x41b4be
  41b49f:	push   es
  41b4a0:	lods   al,BYTE PTR ds:[esi]
  41b4a1:	and    al,0x33
  41b4a3:	sar    ebp,0x84
  41b4a6:	pop    esi
  41b4a7:	pop    esp
  41b4a8:	in     eax,0xee
  41b4aa:	sbb    al,0xa6
  41b4ac:	jecxz  0x41b473
  41b4ae:	mov    dh,0x43
  41b4b0:	pop    ss
  41b4b1:	mov    bl,0x54
  41b4b3:	sbb    DWORD PTR [edi],esp
  41b4b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4b6:	jno    0x41b505
  41b4b8:	push   edi
  41b4b9:	jb     0x41b4d7
  41b4bb:	dec    edx
  41b4bc:	mov    al,0x13
  41b4be:	into   
  41b4bf:	jp     0x41b491
  41b4c1:	push   0x9
  41b4c3:	pop    edi
  41b4c4:	js     0x41b531
  41b4c6:	mov    ecx,0xf0d409cb
  41b4cb:	adc    ebx,DWORD PTR [edx]
  41b4cd:	xor    BYTE PTR ds:0x6d2ce6e0,bh
  41b4d3:	pop    eax
  41b4d4:	pop    ds
  41b4d5:	add    esi,DWORD PTR [ebx-0x28]
  41b4d8:	repz push ebx
  41b4da:	pop    esi
  41b4db:	jo     0x41b544
  41b4dd:	loop   0x41b52e
  41b4df:	sbb    al,0x57
  41b4e1:	or     al,0x23
  41b4e3:	out    0x7a,eax
  41b4e5:	das    
  41b4e6:	jge    0x41b4a3
  41b4e8:	mov    ah,0x90
  41b4ea:	xchg   ebx,eax
  41b4eb:	xor    ebp,DWORD PTR [eax+0x75]
  41b4ee:	sbb    edi,edi
  41b4f0:	sahf   
  41b4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4f2:	cmp    BYTE PTR [ecx-0x70a11e65],bl
  41b4f8:	test   eax,0xa4924ec2
  41b4fd:	or     al,0x68
  41b4ff:	mov    al,0x62
  41b501:	sub    esi,ebx
  41b503:	pop    esp
  41b504:	xor    eax,0xfebf27ee
  41b509:	das    
  41b50a:	fild   QWORD PTR [ecx]
  41b50c:	jmp    edx
  41b50e:	loop   0x41b509
  41b510:	sub    DWORD PTR [ebx-0x2f89c9f3],0x19
  41b517:	popf   
  41b518:	mov    eax,0xc2144bf4
  41b51d:	imul   esi,DWORD PTR [ebx-0x2a784dc0],0xbaa4e894
  41b527:	sar    BYTE PTR [esi],cl
  41b529:	ss mov dl,0xe9
  41b52c:	sbb    BYTE PTR [ebp+0x6e38c108],al
  41b532:	hlt    
  41b533:	aas    
  41b534:	loopne 0x41b519
  41b536:	test   DWORD PTR [ebx-0x1f],edx
  41b539:	pop    esp
  41b53a:	cmp    ah,BYTE PTR [edi+0x15ee729b]
  41b540:	and    BYTE PTR [ebx-0x122afbd6],ch
  41b546:	mov    DWORD PTR [eax],ecx
  41b548:	and    al,0x6d
  41b54a:	inc    ebp
  41b54b:	xor    al,0xa3
  41b54d:	sahf   
  41b54e:	xor    al,0x60
  41b550:	pop    edi
  41b551:	enter  0x3072,0x61
  41b555:	jae    0x41b555
  41b557:	pop    ebp
  41b558:	push   edi
  41b559:	das    
  41b55a:	idiv   DWORD PTR [esi+0x2a94d2da]
  41b560:	and    BYTE PTR [esi+0x3c],cl
  41b563:	sbb    eax,DWORD PTR [ebx+0x73]
  41b566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b567:	out    dx,al
  41b568:	mov    DWORD PTR [edi-0x4e],0x9c401b8f
  41b56f:	out    0xde,eax
  41b571:	ins    DWORD PTR es:[edi],dx
  41b572:	adc    BYTE PTR [edi+eiz*8+0x4addcc52],dh
  41b579:	fild   DWORD PTR [edi]
  41b57b:	mov    al,ds:0x7320e717
  41b580:	mov    ecx,0x1fea67b7
  41b585:	xchg   esp,eax
  41b586:	inc    esp
  41b587:	push   esp
  41b588:	cmp    DWORD PTR [edi-0x4a2c2ab7],esi
  41b58e:	jb     0x41b577
  41b590:	mov    al,ds:0x63dc0e66
  41b595:	ror    DWORD PTR [edx+0x7],1
  41b598:	mov    ds:0x66502faa,al
  41b59d:	pop    esp
  41b59e:	ss dec ebx
  41b5a0:	in     al,0x50
  41b5a2:	cmp    dl,ah
  41b5a4:	xchg   esi,eax
  41b5a5:	(bad)  
  41b5a6:	mov    dl,0x55
  41b5a8:	rol    DWORD PTR [esi-0x4faf8c56],0x1d
  41b5af:	mov    dh,0x6
  41b5b1:	push   edi
  41b5b2:	add    bl,BYTE PTR [ebx+0x1c]
  41b5b5:	dec    esi
  41b5b6:	(bad)  
  41b5b7:	scas   al,BYTE PTR es:[edi]
  41b5b8:	adc    BYTE PTR [ecx-0x9],cl
  41b5bb:	mov    DWORD PTR [edx+0x76adf451],edi
  41b5c1:	lods   al,BYTE PTR ds:[esi]
  41b5c2:	lea    ecx,[edi]
  41b5c4:	sbb    al,BYTE PTR [ecx-0x3a]
  41b5c7:	sbb    al,0xbd
  41b5c9:	dec    eax
  41b5ca:	jns    0x41b5fa
  41b5cc:	jle    0x41b61b
  41b5ce:	mov    ebx,0x3874a22a
  41b5d3:	mov    esi,0x93acac9f
  41b5d8:	xchg   ecx,eax
  41b5d9:	inc    edi
  41b5da:	mov    esp,0xdbe4b4c8
  41b5df:	inc    esp
  41b5e0:	shr    ch,0xf5
  41b5e3:	pop    eax
  41b5e4:	adc    eax,0x28deec90
  41b5e9:	push   ecx
  41b5ea:	pop    edx
  41b5eb:	mov    ch,0x40
  41b5ed:	xor    al,0xfe
  41b5ef:	mov    esp,DWORD PTR ds:0xd132dad3
  41b5f5:	pushf  
  41b5f6:	xor    DWORD PTR [edi-0x21],ecx
  41b5f9:	daa    
  41b5fa:	mov    al,ds:0xc4b1ea44
  41b5ff:	fidivr WORD PTR [esp+ebp*4+0x519f9fdf]
  41b606:	pop    esp
  41b607:	in     al,0xed
  41b609:	(bad)  
  41b60a:	arpl   bp,cx
  41b60c:	(bad)  
  41b60d:	cdq    
  41b60e:	je     0x41b670
  41b610:	repz je 0x41b5e3
  41b613:	sbb    ah,dh
  41b615:	inc    esi
  41b616:	cmp    al,0x27
  41b618:	inc    edi
  41b619:	adc    eax,0x8db90c3a
  41b61e:	inc    ecx
  41b61f:	into   
  41b620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b621:	in     al,dx
  41b622:	mov    esp,0x945a3eca
  41b627:	mov    ds,WORD PTR [ecx+0x8d2cd26]
  41b62d:	mov    al,ds:0xcc41f46d
  41b632:	mov    cl,BYTE PTR ds:0x4fdbec71
  41b638:	sub    eax,0xc499fab
  41b63d:	adc    DWORD PTR [esi],edx
  41b63f:	(bad)  
  41b640:	cmc    
  41b641:	in     eax,dx
  41b642:	mov    ah,0x1f
  41b645:	cmp    al,0xe
  41b647:	cmp    eax,0xb5d02361
  41b64c:	xchg   DWORD PTR [ebp-0x5f],ebp
  41b64f:	dec    ebx
  41b650:	mov    esp,0xc4786efe
  41b655:	pop    ss
  41b656:	mov    ebp,0x9478d9a4
  41b65b:	push   ss
  41b65c:	mov    ah,BYTE PTR [ecx+0x786e1dc9]
  41b662:	dec    esi
  41b663:	lods   al,BYTE PTR ds:[esi]
  41b664:	push   eax
  41b665:	in     al,dx
  41b666:	rol    DWORD PTR [edx+0x57409af9],0x28
  41b66d:	ret    0x9007
  41b670:	sbb    eax,0x230afd97
  41b675:	fisttp DWORD PTR [ebp-0x23105b4a]
  41b67b:	sar    DWORD PTR [eax],cl
  41b67d:	int3   
  41b67e:	loope  0x41b6df
  41b680:	repz jl 0x41b60f
  41b683:	sbb    DWORD PTR [ebp-0x25358db1],esi
  41b689:	xlat   BYTE PTR ds:[ebx]
  41b68a:	adc    eax,0x165b82a2
  41b68f:	xor    al,0x70
  41b691:	es and al,0xb8
  41b694:	push   edx
  41b695:	repz (bad) 
  41b697:	std    
  41b698:	out    0x75,eax
  41b69a:	aaa    
  41b69b:	xor    eax,esi
  41b69d:	inc    esi
  41b69e:	or     cl,ah
  41b6a0:	mov    ebx,ds
  41b6a2:	sti    
  41b6a3:	xchg   esi,eax
  41b6a4:	xchg   DWORD PTR [eax+0x21],edi
  41b6a7:	mov    ebp,0x609a6d3f
  41b6ac:	retf   
  41b6ad:	lea    esi,[ecx+0x226e9666]
  41b6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b4:	shl    DWORD PTR [ebx+0x4e],1
  41b6b7:	dec    esi
  41b6b8:	push   ebx
  41b6b9:	call   0xecf3:0x4e21d5cb
  41b6c0:	(bad)  
  41b6c1:	fld    TBYTE PTR [ebp+eiz*4-0x46c7b1b1]
  41b6c8:	shr    DWORD PTR [eax-0x29becf27],1
  41b6ce:	andnps xmm3,XMMWORD PTR [ecx]
  41b6d1:	sbb    BYTE PTR [esi+eax*2],bl
  41b6d4:	enter  0x93de,0x97
  41b6d8:	jmp    0x41b6d5
  41b6da:	in     al,0x8c
  41b6dc:	sbb    esi,eax
  41b6de:	ds shr ch,cl
  41b6e1:	pop    ds
  41b6e2:	int3   
  41b6e3:	repz add DWORD PTR [esi+0x55cfdc1c],esp
  41b6ea:	xchg   edx,esp
  41b6ec:	dec    esi
  41b6ed:	inc    edx
  41b6ee:	jmp    0xa46f7a41
  41b6f3:	xchg   edi,eax
  41b6f4:	je     0x41b773
  41b6f6:	push   cs
  41b6f7:	adc    eax,0x8dd20bb2
  41b6fc:	mov    esi,0xb449366d
  41b701:	xor    bh,ch
  41b703:	imul   ebx,DWORD PTR [ecx+0x75],0x3b
  41b707:	push   0xde6b7c53
  41b70c:	fsubr  QWORD PTR [esi+0x8650dc9]
  41b712:	xlat   BYTE PTR ds:[ebx]
  41b713:	jp     0x41b6b7
  41b715:	std    
  41b716:	push   es
  41b717:	in     al,0x7b
  41b719:	dec    esp
  41b71a:	xor    DWORD PTR [ecx+0x3e932219],ebp
  41b720:	pop    ds
  41b721:	adc    al,dl
  41b723:	mov    dl,0x16
  41b725:	lock cld 
  41b727:	mov    BYTE PTR [ebx],al
  41b729:	retf   0xa373
  41b72c:	adc    BYTE PTR [ebx-0x75757629],ah
  41b732:	or     eax,0xffec0d0b
  41b737:	push   edi
  41b738:	dec    esp
  41b739:	or     DWORD PTR [edi-0x2a],ebp
  41b73c:	dec    eax
  41b73d:	jecxz  0x41b70f
  41b73f:	xchg   ecx,eax
  41b740:	sar    BYTE PTR [edx-0x25],0xbb
  41b744:	jo     0x41b72e
  41b746:	call   0xdc37:0x333b837e
  41b74d:	and    BYTE PTR [eax+0x62acd4d5],cl
  41b753:	lods   eax,DWORD PTR ds:[esi]
  41b754:	sti    
  41b755:	fdivr  st,st(2)
  41b757:	test   eax,0xbf928a20
  41b75c:	outs   dx,DWORD PTR ds:[esi]
  41b75d:	idiv   esp
  41b75f:	sahf   
  41b760:	stos   BYTE PTR es:[edi],al
  41b761:	push   ds
  41b762:	shl    BYTE PTR [esi-0x4a],cl
  41b765:	or     ecx,ebx
  41b767:	xchg   ebx,eax
  41b768:	sub    al,0xc7
  41b76a:	add    al,0xad
  41b76c:	jg     0x41b71a
  41b76e:	adc    ch,dh
  41b770:	imul   esi,edi,0x53
  41b773:	cdq    
  41b774:	mov    BYTE PTR [edi+0x1ecae1d2],bh
  41b77a:	das    
  41b77b:	pop    esp
  41b77c:	push   0xed113c55
  41b781:	rol    BYTE PTR [edi+0x11da761c],cl
  41b787:	rcr    edx,0xc
  41b78a:	mov    eax,ds:0x881fc8a4
  41b78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b790:	adc    eax,DWORD PTR [ebx-0x41]
  41b793:	adc    eax,0xa781ab8
  41b798:	cmp    BYTE PTR [esi+0x44],bl
  41b79b:	sub    edx,ebx
  41b79d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b79e:	dec    eax
  41b79f:	dec    ebx
  41b7a0:	sbb    bl,bl
  41b7a2:	stos   BYTE PTR es:[edi],al
  41b7a3:	jle    0x41b77d
  41b7a5:	out    0x27,eax
  41b7a7:	and    ebx,DWORD PTR [esi]
  41b7a9:	jne    0x41b7b7
  41b7ab:	mov    ebx,0xaa52b06a
  41b7b0:	stc    
  41b7b1:	pusha  
  41b7b2:	mov    esp,0x52592ebe
  41b7b7:	push   es
  41b7b8:	cmp    ebp,DWORD PTR [edx-0x15d8a2c]
  41b7be:	jae    0x41b792
  41b7c0:	jp     0x41b7f9
  41b7c2:	retf   
  41b7c3:	xor    BYTE PTR [eax+0x37],ah
  41b7c6:	jle    0x41b7ba
  41b7c8:	push   ecx
  41b7c9:	je     0x41b7be
  41b7cb:	cmp    esi,DWORD PTR [ecx-0x27b28b85]
  41b7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d2:	xor    bl,al
  41b7d4:	mov    esi,0xcd2e0895
  41b7d9:	inc    ecx
  41b7da:	or     edx,DWORD PTR [ecx+0x36]
  41b7dd:	loope  0x41b82e
  41b7df:	xchg   edi,eax
  41b7e0:	ds ror ebp,cl
  41b7e3:	mov    ds:0x13732cc5,eax
  41b7e8:	or     eax,0x447180fc
  41b7ed:	pop    es
  41b7ee:	in     eax,0x1a
  41b7f0:	rol    DWORD PTR [eax],0xef
  41b7f3:	dec    ecx
  41b7f4:	cld    
  41b7f5:	push   esp
  41b7f6:	mov    edx,0x105fc09
  41b7fb:	test   DWORD PTR [ecx],ecx
  41b7fd:	add    eax,0x5c462c43
  41b802:	adc    al,0x9d
  41b804:	loop   0x41b850
  41b806:	sub    ah,BYTE PTR [edx]
  41b808:	dec    edi
  41b809:	and    DWORD PTR [ecx-0x6f],0xe1b19981
  41b810:	ficom  WORD PTR [ebx]
  41b812:	push   cs
  41b813:	ss jle 0x41b7a8
  41b816:	mov    ebx,DWORD PTR [esi+ebx*8]
  41b819:	sub    BYTE PTR [eax+0x0],0x26
  41b81d:	adc    dl,BYTE PTR [edx-0x657b0a22]
  41b823:	sub    dl,BYTE PTR [esi]
  41b825:	xor    BYTE PTR [eax-0x2b81bfa0],dl
  41b82b:	mov    ch,0xf9
  41b82d:	sbb    dl,0x70
  41b830:	sbb    al,0x2f
  41b832:	in     al,0xd7
  41b834:	xor    BYTE PTR [edi+0x58a98404],0xad
  41b83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b83c:	inc    ecx
  41b83d:	scas   eax,DWORD PTR es:[edi]
  41b83e:	jmp    0xbd13:0x4749479a
  41b845:	in     al,dx
  41b846:	stos   BYTE PTR es:[edi],al
  41b847:	fild   QWORD PTR [edi-0x30]
  41b84a:	ret    0xaf04
  41b84d:	push   0x1e
  41b84f:	or     DWORD PTR [ebp+0x0],ecx
  41b852:	add    ecx,DWORD PTR [edi-0xf8140c7]
  41b858:	cdq    
  41b859:	out    dx,al
  41b85a:	stc    
  41b85b:	stos   DWORD PTR es:[edi],eax
  41b85c:	mov    cl,0x92
  41b85e:	xchg   ebp,eax
  41b85f:	push   edi
  41b860:	call   0xcd2d:0x2aeabd23
  41b867:	add    ecx,DWORD PTR [esp+eiz*2+0x9]
  41b86b:	inc    ecx
  41b86c:	xchg   esi,eax
  41b86d:	push   es
  41b86e:	add    DWORD PTR [eax-0x25],edx
  41b871:	mov    ch,0xbe
  41b873:	fidiv  DWORD PTR [edi+edx*4+0x4e]
  41b877:	sbb    dh,cl
  41b879:	(bad)  
  41b87a:	mov    eax,ds:0xfea126b0
  41b87f:	xlat   BYTE PTR ds:[ebx]
  41b880:	pop    edx
  41b881:	inc    ebx
  41b882:	cmp    ebx,DWORD PTR [esi]
  41b884:	and    eax,0xfc10e0c6
  41b889:	or     eax,0x5e58b9e5
  41b88e:	adc    BYTE PTR [eax+0x53],0x77
  41b892:	push   esi
  41b893:	fdivr  DWORD PTR [ecx+0x486f1692]
  41b899:	out    dx,al
  41b89a:	and    DWORD PTR [esi-0x7543d8e4],edi
  41b8a0:	jae    0x41b840
  41b8a2:	adc    ch,0x47
  41b8a5:	ins    BYTE PTR es:[edi],dx
  41b8a6:	and    dh,BYTE PTR [esi]
  41b8a8:	push   es
  41b8a9:	test   eax,0x5f0c84ba
  41b8ae:	outs   dx,BYTE PTR ds:[esi]
  41b8af:	or     DWORD PTR [ebx],eax
  41b8b1:	sar    DWORD PTR [esi],1
  41b8b3:	or     al,0xea
  41b8b5:	fidiv  WORD PTR [eax-0x23]
  41b8b8:	xchg   edi,eax
  41b8b9:	in     al,0x29
  41b8bb:	lahf   
  41b8bc:	retf   0x2a10
  41b8bf:	inc    ebp
  41b8c0:	cmp    bh,BYTE PTR [esi]
  41b8c2:	cdq    
  41b8c3:	aam    0x58
  41b8c5:	ror    DWORD PTR [eax-0x52dc3df9],0xc7
  41b8cc:	out    0x64,eax
  41b8ce:	fst    DWORD PTR [ebx]
  41b8d1:	sbb    eax,0xe7e2ebce
  41b8d6:	dec    ecx
  41b8d7:	sbb    DWORD PTR [esi+0x33],0x4706aae3
  41b8de:	jg     0x41b931
  41b8e0:	(bad)  
  41b8e1:	adc    bl,cl
  41b8e3:	or     eax,0xdc920463
  41b8e8:	mov    dh,0xe9
  41b8ea:	cmp    cl,BYTE PTR [esi-0x76]
  41b8ed:	adc    al,0xea
  41b8ef:	sahf   
  41b8f0:	hlt    
  41b8f1:	adc    DWORD PTR [edx+0x17],ecx
  41b8f4:	iret   
  41b8f5:	pusha  
  41b8f6:	mov    eax,ds:0x2fc1c045
  41b8fb:	mov    ds:0x80b9151,eax
  41b900:	imul   esi,DWORD PTR [ebp-0x34b5c7fc],0x68e4cf67
  41b90a:	out    dx,al
  41b90b:	xor    bh,BYTE PTR [eax+0x3e]
  41b90e:	(bad)  
  41b90f:	jmp    0xbfcd:0xf89ee8a6
  41b916:	add    cl,ch
  41b918:	fs stos BYTE PTR es:[edi],al
  41b91a:	imul   edx,DWORD PTR [ecx-0x1587638d],0x4f
  41b921:	(bad)  
  41b922:	mov    ah,0x36
  41b924:	xor    eax,0x43b1ba86
  41b929:	in     eax,dx
  41b92a:	mov    ebp,0x7a8447b1
  41b92f:	imul   edi,DWORD PTR [edi+ebp*2],0x112acc68
  41b936:	aam    0xed
  41b938:	ins    DWORD PTR es:[edi],dx
  41b939:	sbb    eax,0x95a49621
  41b93e:	hlt    
  41b93f:	jl     0x41b92c
  41b941:	retf   
  41b942:	loopne 0x41b8da
  41b944:	xor    ebp,eax
  41b946:	cmc    
  41b947:	mov    esi,0x453198fd
  41b94c:	mov    ah,0x3f
  41b94e:	(bad)  
  41b951:	xchg   ecx,eax
  41b952:	push   cs
  41b953:	and    eax,0xf605c946
  41b958:	push   ecx
  41b959:	lds    esi,FWORD PTR [ecx+edi*4]
  41b95c:	daa    
  41b95d:	push   esp
  41b95e:	cmp    BYTE PTR [ebx+0x16],dl
  41b961:	(bad)  
  41b963:	mov    cs,WORD PTR [ebx]
  41b965:	cmp    al,0x6
  41b967:	outs   dx,BYTE PTR ds:[esi]
  41b968:	into   
  41b969:	mov    edx,0x4559bf4a
  41b96e:	inc    DWORD PTR [esi]
  41b970:	arpl   WORD PTR [edx],bp
  41b972:	inc    esi
  41b973:	hlt    
  41b974:	sbb    al,0x4d
  41b976:	pushf  
  41b977:	mov    cl,0x4
  41b979:	xor    cl,0x4f
  41b97c:	jb     0x41b9de
  41b97e:	mov    ebx,0xaadf6eb2
  41b983:	mov    ds:0x930756df,eax
  41b988:	and    eax,0x156daa3a
  41b98d:	dec    ecx
  41b98e:	pop    es
  41b98f:	arpl   WORD PTR [eax+0x10],di
  41b992:	push   0xffffff8a
  41b994:	sbb    al,0xeb
  41b996:	and    DWORD PTR [esi],0x79
  41b999:	push   0x1e47baff
  41b99e:	mov    ds:0xdbb00935,eax
  41b9a3:	ror    DWORD PTR ds:[ebp-0xc8f07ed],0x3
  41b9ab:	xchg   edx,eax
  41b9ac:	xchg   DWORD PTR [ecx+eax*8+0x45875cc1],ecx
  41b9b3:	adc    bh,BYTE PTR [edi]
  41b9b5:	retf   0xc692
  41b9b8:	mov    ch,0x1b
  41b9ba:	add    al,BYTE PTR [ebx]
  41b9bc:	push   esp
  41b9bd:	(bad)  
  41b9be:	bnd jns 0x41ba20
  41b9c1:	adc    ebx,DWORD PTR [ebx+0xe7db5b5]
  41b9c7:	sbb    edi,DWORD PTR [edx+0x1e]
  41b9ca:	fwait
  41b9cb:	loope  0x41ba36
  41b9cd:	pusha  
  41b9ce:	cmp    edx,DWORD PTR [esi+edi*8]
  41b9d1:	out    0x7c,eax
  41b9d3:	push   edi
  41b9d4:	add    BYTE PTR [ebx+0xf],cl
  41b9d7:	rcl    dh,0xd7
  41b9da:	sbb    edx,DWORD PTR [edi]
  41b9dc:	jge    0x41b9ad
  41b9de:	mov    bl,0xe9
  41b9e0:	clc    
  41b9e1:	pop    ebp
  41b9e2:	and    dl,BYTE PTR [ecx+0x41]
  41b9e5:	xlat   BYTE PTR ds:[ebx]
  41b9e6:	stos   DWORD PTR es:[edi],eax
  41b9e7:	mov    WORD PTR [ecx],es
  41b9e9:	or     eax,0x7e657841
  41b9ee:	xchg   ecx,eax
  41b9ef:	xchg   esp,eax
  41b9f0:	or     BYTE PTR [ebx+edx*4-0x75],dl
  41b9f4:	(bad)  
  41b9f5:	sahf   
  41b9f6:	ror    BYTE PTR [ebp-0x6c],1
  41b9f9:	sahf   
  41b9fa:	xchg   cl,dl
  41b9fc:	sub    al,al
  41b9fe:	push   es
  41b9ff:	jns    0x41ba7e
  41ba01:	adc    al,0x92
  41ba03:	adc    DWORD PTR [ebx],esi
  41ba05:	sub    eax,0xbd66f97e
  41ba0a:	xchg   ebp,eax
  41ba0b:	rcr    DWORD PTR [edi],0x24
  41ba0e:	fadd   DWORD PTR [eax-0x5]
  41ba11:	call   0x7ba47c3
  41ba16:	inc    eax
  41ba17:	ror    DWORD PTR [edx],cl
  41ba19:	lahf   
  41ba1a:	shl    DWORD PTR [ebx-0x28],0xb2
  41ba1e:	xchg   ebx,eax
  41ba1f:	(bad)  
  41ba20:	jle    0x41b9f7
  41ba22:	aam    0x6f
  41ba24:	dec    ebx
  41ba25:	mov    al,ds:0xae3c06aa
  41ba2a:	in     eax,dx
  41ba2b:	pop    eax
  41ba2c:	mov    ah,0x7a
  41ba2e:	inc    ebx
  41ba2f:	or     ecx,DWORD PTR [edx+0x3d]
  41ba32:	stos   BYTE PTR es:[edi],al
  41ba33:	xlat   BYTE PTR ds:[ebx]
  41ba34:	imul   eax,DWORD PTR [eax],0xffffff8c
  41ba37:	aad    0xbc
  41ba39:	xchg   ecx,eax
  41ba3a:	push   es
  41ba3b:	outs   dx,BYTE PTR ds:[esi]
  41ba3c:	test   BYTE PTR [edi-0x3d],ch
  41ba3f:	loope  0x41b9ed
  41ba41:	pop    ss
  41ba42:	add    edx,DWORD PTR [eax+0x50]
  41ba45:	jbe    0x41ba0f
  41ba47:	or     edi,edx
  41ba49:	aam    0xf2
  41ba4b:	ret    
  41ba4c:	inc    ebp
  41ba4d:	hlt    
  41ba4e:	inc    esp
  41ba4f:	xchg   edx,eax
  41ba50:	cmp    al,0x79
  41ba52:	sahf   
  41ba53:	outs   dx,BYTE PTR ds:[esi]
  41ba54:	sub    DWORD PTR [eax],0x5a
  41ba57:	cli    
  41ba58:	lock adc DWORD PTR [eax-0x4a40205],ebx
  41ba5f:	loope  0x41bab4
  41ba61:	outs   dx,DWORD PTR ds:[esi]
  41ba62:	xchg   esi,eax
  41ba63:	inc    esi
  41ba64:	cmp    DWORD PTR ds:[eax-0x41624642],esi
  41ba6b:	pop    ebp
  41ba6c:	imul   edi,DWORD PTR [esi],0xffffff99
  41ba6f:	dec    ebx
  41ba70:	stc    
  41ba71:	mov    ch,al
  41ba73:	inc    edi
  41ba74:	addr16 clc 
  41ba76:	mov    DWORD PTR [esi-0x2de550f2],edi
  41ba7c:	inc    ebx
  41ba7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba7e:	xor    eax,DWORD PTR [ebp-0x35a3a4ea]
  41ba84:	ffreep st(2)
  41ba86:	stos   BYTE PTR es:[edi],al
  41ba87:	and    edi,DWORD PTR [ebx-0x785c6f0a]
  41ba8d:	push   edx
  41ba8e:	jle    0x41baea
  41ba90:	push   cs
  41ba91:	(bad)  
  41ba92:	push   0x5bb07c95
  41ba97:	cmp    esi,DWORD PTR [ebp-0x74ddec4d]
  41ba9d:	iret   
  41ba9e:	dec    edi
  41ba9f:	lods   al,BYTE PTR ds:[esi]
  41baa0:	push   edx
  41baa1:	aas    
  41baa2:	add    edi,DWORD PTR ds:[edx+0x20]
  41baa6:	in     eax,dx
  41baa7:	lods   al,BYTE PTR ds:[esi]
  41baa8:	xor    eax,0x21d58525
  41baad:	pop    eax
  41baae:	xchg   edx,eax
  41baaf:	test   bh,dl
  41bab1:	cli    
  41bab2:	or     edi,DWORD PTR [esi+0x1f]
  41bab5:	out    0x2c,eax
  41bab7:	add    esi,DWORD PTR es:[eax-0x17]
  41babb:	dec    ecx
  41babc:	inc    ebp
  41babd:	mov    esp,0x15c54cb5
  41bac2:	shl    BYTE PTR [edi+0x6c],cl
  41bac5:	ret    0xaf79
  41bac8:	push   eax
  41bac9:	dec    edi
  41baca:	scas   al,BYTE PTR es:[edi]
  41bacb:	sbb    al,0xf5
  41bacd:	loop   0x41bad7
  41bacf:	icebp  
  41bad0:	in     al,0x74
  41bad2:	xor    al,0xb
  41bad4:	pop    esp
  41bad5:	pop    edi
  41bad6:	cld    
  41bad7:	xor    BYTE PTR [ecx-0x7d7a6753],bh
  41badd:	movzx  esp,WORD PTR [esi+0x6b]
  41bae1:	jne    0xc7e2353
  41bae7:	(bad)  
  41bae8:	aad    0x46
  41baea:	addr16 jle 0x41bb58
  41baed:	inc    esp
  41baee:	fld    QWORD PTR [ebp-0x78]
  41baf1:	mov    ch,0x70
  41baf3:	arpl   WORD PTR [ebx-0x3a],bx
  41baf6:	xor    al,al
  41baf8:	pushf  
  41baf9:	test   al,0xb
  41bafb:	test   BYTE PTR [ecx+0x3d],bh
  41bafe:	loope  0x41bb49
  41bb00:	popa   
  41bb01:	mov    ds:0x6d3d0a2f,eax
  41bb06:	jl     0x41baf4
  41bb08:	and    BYTE PTR [edx-0x7d25d48d],ah
  41bb0e:	mov    al,0x87
  41bb10:	mov    al,0xec
  41bb12:	push   0xb2cf9f78
  41bb17:	sahf   
  41bb18:	or     dh,ch
  41bb1a:	hlt    
  41bb1b:	test   al,0x30
  41bb1d:	test   BYTE PTR [edx-0x5a315624],cl
  41bb23:	inc    esp
  41bb24:	pop    ebp
  41bb25:	jl     0x41bb97
  41bb27:	neg    dh
  41bb29:	jecxz  0x41bac0
  41bb2b:	shl    esp,1
  41bb2d:	aaa    
  41bb2e:	push   ebx
  41bb2f:	dec    ecx
  41bb30:	xchg   ebp,eax
  41bb31:	or     edi,DWORD PTR [edx-0x8]
  41bb34:	sub    eax,0xba50196b
  41bb39:	push   ebp
  41bb3a:	inc    edi
  41bb3b:	fcomp  QWORD PTR [esi]
  41bb3d:	out    0xc,al
  41bb3f:	or     DWORD PTR [ecx],0x2a
  41bb42:	pop    esi
  41bb43:	(bad)  
  41bb44:	dec    esp
  41bb45:	(bad)  
  41bb46:	jmp    0x41bb4c
  41bb48:	shr    BYTE PTR [edi+0x5c],cl
  41bb4b:	loopne 0x41bb55
  41bb4d:	dec    esp
  41bb4e:	bound  ecx,QWORD PTR [eax-0x61]
  41bb51:	cwde   
  41bb52:	fld    QWORD PTR [ebx+0x1ff9738]
  41bb58:	pop    esp
  41bb59:	pop    ecx
  41bb5a:	adc    BYTE PTR [eax+0x7ea7e621],cl
  41bb60:	adc    eax,0x7b7331af
  41bb65:	pop    edi
  41bb66:	mov    al,0x37
  41bb68:	dec    esi
  41bb69:	cmp    cl,BYTE PTR [ebp+0x22]
  41bb6c:	pop    edx
  41bb6d:	retf   
  41bb6e:	lea    edx,[edi]
  41bb70:	call   0x1e30:0xe8b6d2f5
  41bb77:	je     0x41bb4d
  41bb79:	imul   ebp,DWORD PTR [esp+esi*8-0x5],0xffffffb2
  41bb7e:	lahf   
  41bb7f:	push   ebx
  41bb80:	or     ebp,DWORD PTR [edi]
  41bb82:	lods   al,BYTE PTR ds:[esi]
  41bb83:	xchg   ebp,eax
  41bb84:	or     edi,DWORD PTR [esi-0x75]
  41bb87:	dec    eax
  41bb88:	lods   al,BYTE PTR ds:[esi]
  41bb89:	enter  0x8f2f,0xe4
  41bb8d:	imul   ebx,ebx,0x16
  41bb90:	clc    
  41bb91:	sbb    al,0x2b
  41bb93:	stc    
  41bb94:	jecxz  0x41bb7e
  41bb96:	sub    al,0x17
  41bb98:	inc    eax
  41bb99:	pop    edi
  41bb9a:	test   esp,ebx
  41bb9c:	push   ss
  41bb9d:	mov    bh,0x2a
  41bb9f:	jg     0x41bbc0
  41bba1:	xchg   ecx,eax
  41bba2:	adc    BYTE PTR ds:0x9d858304,al
  41bba8:	ret    
  41bba9:	sbb    eax,0xb0400d1d
  41bbae:	sub    BYTE PTR [esi],ch
  41bbb0:	inc    edx
  41bbb1:	push   0x1
  41bbb3:	adc    al,0xf4
  41bbb5:	pop    ebx
  41bbb6:	xchg   ecx,eax
  41bbb7:	jl     0x41bb5a
  41bbb9:	jmp    0x41bb73
  41bbbb:	sub    al,al
  41bbbd:	mov    cl,0x64
  41bbbf:	test   al,al
  41bbc1:	ins    DWORD PTR es:[edi],dx
  41bbc2:	pop    eax
  41bbc3:	mov    eax,0xfa89ec3b
  41bbc8:	out    0x6d,eax
  41bbca:	and    BYTE PTR [eax],ch
  41bbcc:	sbb    eax,0xdca7177a
  41bbd1:	mov    bh,0x38
  41bbd3:	xor    BYTE PTR [esi+0x60],bl
  41bbd6:	and    al,0xc
  41bbd8:	pop    ebx
  41bbd9:	and    BYTE PTR [edi],bl
  41bbdb:	stc    
  41bbdc:	mov    edx,0xcbe1f6bd
  41bbe1:	sbb    dh,bh
  41bbe3:	adc    eax,0xf8cf20d0
  41bbe8:	popa   
  41bbe9:	push   edx
  41bbea:	mov    ebp,0x98e8378c
  41bbef:	mov    edi,0x10de7ab4
  41bbf4:	push   ss
  41bbf5:	int    0xb6
  41bbf7:	inc    edi
  41bbf8:	stc    
  41bbf9:	pop    ebx
  41bbfa:	add    eax,0x911345bd
  41bbff:	stc    
  41bc00:	or     eax,0xc14b2287
  41bc05:	cmp    DWORD PTR [ecx-0x45],eax
  41bc08:	dec    esp
  41bc09:	xchg   esp,eax
  41bc0a:	cmp    bh,BYTE PTR [eax-0x580c6d0f]
  41bc10:	sub    cl,bh
  41bc12:	or     al,0xf4
  41bc14:	scas   al,BYTE PTR es:[edi]
  41bc15:	pop    ecx
  41bc16:	xchg   DWORD PTR [edi-0x21],edx
  41bc19:	out    0xe5,al
  41bc1b:	dec    esi
  41bc1c:	loopne 0x41bc94
  41bc1e:	fdivrp st(3),st
  41bc20:	fdiv   QWORD PTR [esi+0x3e]
  41bc23:	inc    eax
  41bc24:	ja     0x41bbe2
  41bc26:	and    eax,0x9ff5c94c
  41bc2b:	mov    al,ds:0x672b062c
  41bc30:	aad    0x9
  41bc32:	and    al,0xa4
  41bc34:	xchg   edx,eax
  41bc35:	(bad)  
  41bc36:	mov    ebx,0x578f52c6
  41bc3b:	xchg   esp,eax
  41bc3c:	ins    DWORD PTR es:[edi],dx
  41bc3d:	outs   dx,BYTE PTR ds:[esi]
  41bc3e:	gs sahf 
  41bc40:	mov    ah,0xc4
  41bc42:	daa    
  41bc43:	pop    es
  41bc44:	pop    esi
  41bc45:	push   ebp
  41bc46:	jl     0x41bbea
  41bc48:	xchg   ecx,eax
  41bc49:	fwait
  41bc4a:	out    dx,al
  41bc4b:	push   ebp
  41bc4c:	xor    eax,0xfaf2a80f
  41bc51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc52:	mov    al,0x2
  41bc54:	or     eax,0xa93b12c3
  41bc59:	int3   
  41bc5a:	aam    0x37
  41bc5c:	mov    edi,es
  41bc5e:	add    BYTE PTR [esp+ebp*2+0xd3fd269],dl
  41bc65:	jecxz  0x41bc9b
  41bc67:	push   eax
  41bc68:	popf   
  41bc69:	xchg   esp,eax
  41bc6a:	mov    bh,0x64
  41bc6c:	aas    
  41bc6d:	push   esp
  41bc6e:	add    bh,BYTE PTR [eax-0x1e]
  41bc71:	cdq    
  41bc72:	test   al,0xdc
  41bc74:	cmp    DWORD PTR [eax],ecx
  41bc76:	sub    eax,DWORD PTR [ebp-0x4]
  41bc79:	sub    BYTE PTR [edx+ebx*4-0x21e3977e],dl
  41bc80:	mov    ds:0xdaa0cf2e,al
  41bc85:	ret    
  41bc86:	inc    edi
  41bc87:	ds mov ebp,0x4da4ad0b
  41bc8d:	aam    0xf4
  41bc8f:	adc    BYTE PTR [edi+eiz*4+0x699629eb],dh
  41bc96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc97:	(bad)  
  41bc98:	push   bp
  41bc9a:	lea    ebx,[ebp-0x4e]
  41bc9d:	and    BYTE PTR [ecx],bh
  41bc9f:	mov    eax,0x62925bd5
  41bca4:	jge    0x41bc3c
  41bca6:	mov    WORD PTR [eax-0x3f],cs
  41bca9:	cmp    BYTE PTR [edx],ch
  41bcab:	pop    ds
  41bcac:	jmp    0xe9de:0xb813ede4
  41bcb3:	adc    eax,0xe717a1b3
  41bcb8:	out    dx,al
  41bcb9:	inc    esi
  41bcba:	dec    eax
  41bcbb:	xchg   ebp,eax
  41bcbc:	push   ecx
  41bcbd:	dec    edi
  41bcbe:	mov    bh,0x29
  41bcc0:	(bad)  
  41bcc1:	(bad)  
  41bcc2:	push   esi
  41bcc3:	pop    ecx
  41bcc4:	sbb    DWORD PTR [eax-0x46153582],0x4bf83f97
  41bcce:	leave  
  41bccf:	jg     0x41bd3b
  41bcd1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcd3:	stc    
  41bcd4:	push   eax
  41bcd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcd6:	adc    ch,BYTE PTR gs:[edi+esi*2]
  41bcda:	mov    ecx,esp
  41bcdc:	loopne 0x41bcb2
  41bcde:	adc    DWORD PTR [ecx+eax*1-0x4e5ce1fe],esp
  41bce5:	or     DWORD PTR [edx+0x4ff7897f],ebx
  41bceb:	jno    0x41bd04
  41bced:	cdq    
  41bcee:	xchg   edx,eax
  41bcef:	jl     0x41bd31
  41bcf1:	outs   dx,DWORD PTR cs:[esi]
  41bcf3:	dec    esi
  41bcf4:	mov    ebp,0x7564b2e3
  41bcf9:	jae    0x41bc8e
  41bcfb:	adc    al,0x12
  41bcfd:	shl    cl,cl
  41bcff:	sub    BYTE PTR [ebp+0x4f],0x34
  41bd03:	lods   eax,DWORD PTR ds:[esi]
  41bd04:	sahf   
  41bd05:	add    bl,cl
  41bd07:	xlat   BYTE PTR ds:[ebx]
  41bd08:	dec    ecx
  41bd09:	inc    edi
  41bd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd0b:	and    ebx,DWORD PTR [ecx+0x480e902]
  41bd11:	mov    ds:0x120a7f8d,al
  41bd16:	mov    dl,0x43
  41bd18:	(bad)  
  41bd19:	fcmovnu st,st(4)
  41bd1b:	cdq    
  41bd1c:	mov    dl,0x6d
  41bd1e:	jmp    0x76562469
  41bd23:	lods   eax,DWORD PTR ds:[esi]
  41bd24:	ja     0x41bcbd
  41bd26:	mov    bh,0x0
  41bd28:	cli    
  41bd29:	sbb    esi,DWORD PTR [ebx-0x71]
  41bd2c:	arpl   di,dx
  41bd2e:	fiadd  DWORD PTR [ebx+0x552a3ec7]
  41bd34:	aad    0xeb
  41bd36:	scas   eax,DWORD PTR es:[edi]
  41bd37:	jl     0x41bd13
  41bd39:	das    
  41bd3a:	loope  0x41bd52
  41bd3c:	jmp    0x41bd7b
  41bd3e:	test   eax,0x3081dc47
  41bd43:	pop    edx
  41bd44:	mov    ch,0xf9
  41bd46:	xor    ebx,DWORD PTR [ebp+0x30]
  41bd49:	mov    ds:0x480c844,al
  41bd4e:	or     eax,DWORD PTR [ecx+ecx*2]
  41bd51:	dec    eax
  41bd52:	xor    al,0x79
  41bd54:	pop    esi
  41bd55:	mov    esp,eax
  41bd57:	out    0xb4,al
  41bd59:	push   ss
  41bd5a:	push   esp
  41bd5b:	shl    BYTE PTR [esi+0x8586538],1
  41bd61:	xchg   edx,eax
  41bd62:	in     al,dx
  41bd63:	(bad)  
  41bd64:	mov    esp,0xf54f4222
  41bd69:	aas    
  41bd6a:	add    ecx,DWORD PTR gs:[eax+ecx*2-0x6]
  41bd6f:	mov    edx,0xbc8befcc
  41bd74:	ds jno 0x41bd56
  41bd77:	icebp  
  41bd78:	jg     0x41bd74
  41bd7a:	test   al,0xbb
  41bd7c:	addr16 (bad) 
  41bd7e:	mov    bl,0xc
  41bd80:	loop   0x41bd78
  41bd82:	stos   DWORD PTR es:[edi],eax
  41bd83:	imul   edi,DWORD PTR [edi-0x76],0x41d29a3a
  41bd8a:	pop    ds
  41bd8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd8c:	mov    ?,WORD PTR [esp+eax*8]
  41bd8f:	shl    BYTE PTR [ecx+edi*8],cl
  41bd92:	mov    WORD PTR [ebx],gs
  41bd94:	adc    esp,DWORD PTR [ecx-0x66]
  41bd97:	pusha  
  41bd98:	aaa    
  41bd99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd9a:	xchg   esi,eax
  41bd9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd9c:	fild   QWORD PTR [edx]
  41bd9e:	sbb    al,0x6c
  41bda0:	jne    0x41be1c
  41bda2:	mov    BYTE PTR [eax],dh
  41bda4:	call   0x3d09:0x84634065
  41bdab:	idiv   DWORD PTR ds:0x5d23f38d
  41bdb1:	out    0x1d,al
  41bdb3:	add    bh,BYTE PTR [esi+0x34ed0bf9]
  41bdb9:	mov    esp,0x34397ecb
  41bdbe:	push   0x6af887d1
  41bdc3:	pop    edx
  41bdc4:	(bad)  
  41bdc5:	cs cdq 
  41bdc7:	gs dec ecx
  41bdc9:	jp     0x41bd78
  41bdcb:	ret    
  41bdcc:	jae    0x41bde8
  41bdce:	scas   eax,DWORD PTR es:[edi]
  41bdcf:	cs scas al,BYTE PTR es:[edi]
  41bdd1:	sbb    ebx,DWORD PTR [edi+0x6e]
  41bdd4:	(bad)  
  41bdd5:	sbb    cl,BYTE PTR [edx-0x5c]
  41bdd8:	scas   eax,DWORD PTR es:[edi]
  41bdd9:	ja     0x41be59
  41bddb:	int3   
  41bddc:	pop    ebp
  41bddd:	repnz xlat BYTE PTR ds:[ebx]
  41bddf:	mov    esp,0xf5061484
  41bde4:	out    0xc4,eax
  41bde6:	jno    0x41bdb2
  41bde8:	or     ah,BYTE PTR [eax-0x56]
  41bdeb:	mov    ebp,0x1d52fb9d
  41bdf0:	je     0x41bda6
  41bdf2:	or     bl,BYTE PTR [eax-0x7b]
  41bdf5:	repz mov bl,0xd7
  41bdf8:	adc    ah,BYTE PTR [edx+0x471adea5]
  41bdfe:	pop    ebx
  41bdff:	loope  0x41be26
  41be01:	lods   al,BYTE PTR ds:[esi]
  41be02:	pxor   mm0,QWORD PTR [edx+0x33]
  41be06:	mov    DWORD PTR [edx-0x25985ce8],ebx
  41be0c:	cld    
  41be0d:	push   ds
  41be0e:	xlat   BYTE PTR ds:[ebx]
  41be0f:	push   ecx
  41be10:	pop    ecx
  41be11:	stc    
  41be12:	adc    DWORD PTR [ebx-0x62dd1d46],edx
  41be18:	pushf  
  41be19:	and    dh,BYTE PTR [ecx+0x4e060fbf]
  41be1f:	add    eax,0x1a9883e3
  41be24:	(bad)
  41be27:	leave  
  41be28:	jbe    0x41be31
  41be2a:	mov    dl,0xd6
  41be2c:	sbb    eax,0x6bded25f
  41be31:	xchg   esp,eax
  41be32:	add    BYTE PTR [edi],0xee
  41be35:	das    
  41be36:	push   0x7a
  41be38:	push   edx
  41be39:	retf   0x74e7
  41be3c:	loop   0x41bde2
  41be3e:	in     al,dx
  41be3f:	adc    edx,DWORD PTR [eax-0x237f8c]
  41be45:	cld    
  41be46:	adc    cl,BYTE PTR [edi-0x26eff1c2]
  41be4c:	rol    esi,0x3c
  41be4f:	pop    ds
  41be50:	cmp    ch,cl
  41be52:	adc    BYTE PTR [edi+0x46406e00],cl
  41be58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be59:	adc    BYTE PTR [edx],ch
  41be5b:	push   edx
  41be5c:	cmp    BYTE PTR [ebp-0x59],bl
  41be5f:	mov    cl,0xd3
  41be61:	adc    ebp,eax
  41be63:	enter  0x53df,0xa3
  41be67:	xor    eax,0xe7b746c3
  41be6c:	cmp    edx,DWORD PTR [edx-0x54a1877c]
  41be72:	mov    ah,0x88
  41be74:	(bad)  
  41be75:	mov    ecx,0xdbbe1944
  41be7a:	mov    dl,0x89
  41be7c:	pop    edx
  41be7d:	scas   eax,DWORD PTR es:[edi]
  41be7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be7f:	or     edx,DWORD PTR [eax]
  41be81:	daa    
  41be82:	or     eax,0xffffff89
  41be85:	inc    edi
  41be86:	dec    esp
  41be87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be88:	aas    
  41be89:	call   0xabf3e040
  41be8e:	xlat   BYTE PTR ds:[ebx]
  41be8f:	jo     0x41be90
  41be91:	add    dl,dh
  41be93:	sbb    eax,0xbb6190e1
  41be98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be99:	outs   dx,DWORD PTR ds:[esi]
  41be9a:	pop    ecx
  41be9b:	mov    al,ds:0x9fdae018
  41bea0:	mov    ebx,0xbd3b3283
  41bea5:	xor    BYTE PTR [esi],cl
  41bea7:	pushf  
  41bea8:	add    ebx,0x5c98da44
  41beae:	inc    eax
  41beaf:	xchg   edi,eax
  41beb0:	repnz inc BYTE PTR [ecx]
  41beb3:	push   esi
  41beb4:	add    ecx,DWORD PTR [eax-0x6295bfb1]
  41beba:	out    0x7b,eax
  41bebc:	repz ror DWORD PTR [ebx],cl
  41bebf:	in     eax,dx
  41bec0:	xchg   edi,eax
  41bec1:	pop    ebx
  41bec2:	(bad)  
  41bec3:	mov    ah,0x25
  41bec5:	jae    0x41bec6
  41bec7:	mov    bl,0xe3
  41bec9:	out    dx,al
  41beca:	inc    esi
  41becb:	inc    ebp
  41becc:	ret    
  41becd:	mov    al,0x8c
  41becf:	(bad)  
  41bed1:	fs mov ebp,0x553573ff
  41bed7:	or     al,0xfe
  41bed9:	jmp    0x4e08:0x3f7f6bad
  41bee0:	and    eax,0x33419ce
  41bee5:	out    0x81,eax
  41bee7:	fsub   st,st(2)
  41bee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beea:	cli    
  41beeb:	ror    DWORD PTR [ecx+0x268e7c1a],1
  41bef1:	shl    DWORD PTR [ecx],0x7d
  41bef4:	pushf  
  41bef5:	and    bl,BYTE PTR [esp+eax*4+0x10479b83]
  41befc:	call   0xef25d875
  41bf01:	push   ss
  41bf02:	not    BYTE PTR [eax]
  41bf04:	jbe    0x41bec0
  41bf06:	fsub   st(4),st
  41bf08:	push   ss
  41bf09:	xchg   esi,eax
  41bf0a:	sub    al,0xcb
  41bf0c:	lea    esp,[ebx]
  41bf0e:	int    0xe0
  41bf10:	add    dl,al
  41bf12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf13:	xchg   eax,ebx
  41bf15:	sub    al,0x22
  41bf17:	sbb    al,0x98
  41bf19:	mov    edx,0xf5d876a5
  41bf1e:	js     0x41bf92
  41bf20:	retf   
  41bf21:	frstor [ebp-0x3b]
  41bf24:	fdivr  QWORD PTR [eax]
  41bf26:	in     eax,0xfc
  41bf28:	inc    ebp
  41bf29:	addr16 ret 
  41bf2b:	pop    esp
  41bf2c:	mov    BYTE PTR ds:0x977a123,dl
  41bf32:	iret   
  41bf33:	sbb    al,0xc6
  41bf35:	nop
  41bf36:	jge    0x41bed9
  41bf38:	(bad)  
  41bf39:	nop
  41bf3a:	into   
  41bf3b:	mov    edx,0x7fc522ba
  41bf40:	cmp    esp,DWORD PTR [ecx-0x7a]
  41bf43:	iret   
  41bf44:	ja     0x41bf6f
  41bf46:	xor    DWORD PTR [esi+0x1a],ebx
  41bf49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf4a:	ja     0x41bf16
  41bf4c:	ins    BYTE PTR es:[edi],dx
  41bf4d:	loopne 0x41bf1a
  41bf4f:	call   0x24a5f98e
  41bf54:	inc    ebx
  41bf55:	push   esp
  41bf56:	mov    ds:0x8e078e0d,eax
  41bf5b:	sub    eax,0x332ae365
  41bf60:	test   al,0xaf
  41bf62:	call   0x850cdf2e
  41bf67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf68:	out    0x70,al
  41bf6a:	or     ah,BYTE PTR [eax-0x45]
  41bf6d:	adc    BYTE PTR [ebx+0x5f3fed5c],cl
  41bf73:	data16 aas 
  41bf75:	pop    ebx
  41bf76:	jo     0x41bf80
  41bf78:	mov    cl,BYTE PTR [edi]
  41bf7a:	xor    eax,ebp
  41bf7c:	int    0x53
  41bf7e:	cs int 0x97
  41bf81:	mov    dh,0xb1
  41bf83:	out    0x70,al
  41bf85:	mov    eax,ds:0x440207a6
  41bf8a:	ins    DWORD PTR es:[edi],dx
  41bf8b:	les    eax,FWORD PTR [ecx+eax*2-0x2b]
  41bf8f:	xchg   ebx,eax
  41bf90:	clc    
  41bf91:	ficomp WORD PTR [ecx+ecx*2-0x44]
  41bf95:	int    0xcc
  41bf97:	loop   0x41c013
  41bf99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf9a:	ds ja  0x41bffd
  41bf9d:	mov    eax,ds:0x1a9bb2bf
  41bfa2:	mov    ecx,0xc5893361
  41bfa7:	outs   dx,BYTE PTR ds:[esi]
  41bfa8:	and    DWORD PTR [eax+0x2b45a95b],edi
  41bfae:	xchg   ecx,eax
  41bfaf:	in     eax,0x78
  41bfb1:	in     al,0x21
  41bfb3:	enter  0xbac,0xf2
  41bfb7:	rol    BYTE PTR ds:0x5e000a1b,0x4c
  41bfbe:	dec    esi
  41bfbf:	or     al,0xb9
  41bfc1:	lock mov al,ds:0xb86004fc
  41bfc7:	pop    ecx
  41bfc8:	fucom  st(3)
  41bfca:	and    BYTE PTR [ebp+0x6a8bce5b],dl
  41bfd0:	jae    0x41c04b
  41bfd2:	dec    edi
  41bfd3:	je     0x41c012
  41bfd5:	and    eax,0x8e1c0ef1
  41bfda:	sti    
  41bfdb:	and    BYTE PTR [edi+0x15],dl
  41bfde:	or     bh,dh
  41bfe0:	pop    ss
  41bfe1:	sti    
  41bfe2:	mov    ds:0x8bd94d,al
  41bfe7:	xor    bh,BYTE PTR [edx-0x3e]
  41bfea:	pop    eax
  41bfeb:	inc    edi
  41bfec:	sti    
  41bfed:	imul   ebp,edx,0x32cc5a19
  41bff3:	pushf  
  41bff4:	jns    0x41c008
  41bff6:	cli    
  41bff7:	xchg   DWORD PTR [eax-0x10],edi
  41bffa:	mov    ch,0x69
  41bffc:	push   ebp
  41bffd:	mov    DWORD PTR [edi-0x418f4cb0],edi
  41c003:	adc    eax,0x39aeb439
  41c008:	popa   
  41c009:	dec    ebp
  41c00a:	sbb    BYTE PTR [edi+ebp*4+0x4764139e],0xf
  41c012:	push   ds
  41c013:	popa   
  41c014:	push   0xe7547dc2
  41c019:	mov    al,0x84
  41c01b:	adc    eax,0xac8ee69d
  41c020:	push   esp
  41c021:	add    eax,0xf47c4b41
  41c026:	push   esi
  41c027:	xchg   BYTE PTR [ebx-0x5ccb104b],dh
  41c02d:	std    
  41c02e:	push   esi
  41c02f:	xchg   edi,eax
  41c030:	lods   al,BYTE PTR ds:[esi]
  41c031:	cmp    edx,DWORD PTR [edx]
  41c033:	lock pop es
  41c035:	or     cl,BYTE PTR [edi]
  41c037:	mov    al,ds:0xaef5aee4
  41c03c:	add    eax,0x8cc6449e
  41c041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c042:	ss add ebx,esi
  41c045:	sti    
  41c046:	test   BYTE PTR [ebx-0x7e],bh
  41c049:	arpl   WORD PTR [ecx-0x5],sp
  41c04c:	push   edi
  41c04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c04e:	clc    
  41c04f:	sbb    bh,al
  41c051:	jge    0x41c006
  41c053:	add    edi,DWORD PTR [eax-0x4a]
  41c056:	xchg   edx,eax
  41c057:	out    0x10,eax
  41c059:	retf   
  41c05a:	or     al,0x22
  41c05c:	shl    BYTE PTR [edi+0xd],1
  41c05f:	rol    DWORD PTR [edi-0x3eecd360],cl
  41c065:	call   0x46fc:0x6e02797a
  41c06c:	sbb    al,0x22
  41c06e:	fwait
  41c06f:	pop    ss
  41c070:	inc    edi
  41c071:	std    
  41c072:	ror    BYTE PTR [edi+0x7153ca7a],0x9c
  41c079:	dec    ebx
  41c07a:	push   0xfffffff2
  41c07c:	cmp    bl,BYTE PTR [eax]
  41c07e:	fwait
  41c07f:	sar    BYTE PTR [ebp-0x199bc65b],cl
  41c085:	out    0xb7,al
  41c087:	mov    eax,0xb45f9d2e
  41c08c:	xor    BYTE PTR [esp+esi*4],0x63
  41c090:	fs inc edi
  41c092:	(bad)  
  41c093:	data16 ja 0x41c0b2
  41c096:	lahf   
  41c097:	call   0xcd410345
  41c09c:	retf   0x2f9f
  41c09f:	out    0xd0,eax
  41c0a1:	(bad)  
  41c0a2:	std    
  41c0a3:	out    dx,al
  41c0a4:	outs   dx,DWORD PTR ds:[esi]
  41c0a5:	add    BYTE PTR [eax+edx*8-0x5b4cab0d],dl
  41c0ac:	or     esi,ebp
  41c0ae:	sub    ch,BYTE PTR [ecx+edx*8+0x26]
  41c0b2:	cli    
  41c0b3:	and    al,0xfe
  41c0b5:	mov    ?,WORD PTR [di+0x4bdf]
  41c0ba:	lods   eax,DWORD PTR ds:[esi]
  41c0bb:	fild   WORD PTR [ecx-0x2f]
  41c0be:	std    
  41c0bf:	nop
  41c0c0:	mov    ah,cl
  41c0c2:	push   0xffffffee
  41c0c4:	out    0x9f,eax
  41c0c6:	adc    BYTE PTR [ebx-0x77],0x49
  41c0ca:	(bad)  
  41c0cc:	fidiv  DWORD PTR [ebx-0x80]
  41c0cf:	cmp    esp,DWORD PTR [edx+0x16]
  41c0d2:	or     esi,ecx
  41c0d4:	mov    dl,0xe4
  41c0d6:	(bad)  
  41c0d7:	int    0x95
  41c0d9:	fild   QWORD PTR [ecx+0xf]
  41c0dc:	ret    0xe6dd
  41c0df:	aaa    
  41c0e0:	mov    al,0x22
  41c0e2:	fstp   st(4)
  41c0e4:	jg     0x41c0f2
  41c0e6:	and    eax,DWORD PTR [esi+0x4d0d8cd2]
  41c0ec:	pop    ds
  41c0ed:	shl    DWORD PTR ds:0x2950c478,1
  41c0f3:	repnz cld 
  41c0f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0f6:	xor    esi,DWORD PTR [ecx+0x7d]
  41c0f9:	jle    0x41c0fd
  41c0fb:	or     cl,dl
  41c0fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0fe:	lods   eax,DWORD PTR ds:[esi]
  41c0ff:	in     al,0x83
  41c101:	inc    edi
  41c102:	mov    bh,0x49
  41c104:	int3   
  41c105:	mov    al,0xd4
  41c107:	aaa    
  41c108:	outs   dx,DWORD PTR ds:[esi]
  41c109:	mov    cl,0xf5
  41c10b:	mov    esi,0xeec8f13f
  41c110:	jle    0x41c0ff
  41c112:	and    eax,0x71afcda
  41c117:	mov    al,0xbb
  41c119:	dec    edx
  41c11a:	jo     0x41c0ef
  41c11c:	dec    ecx
  41c11d:	mov    ah,0x1a
  41c11f:	fimul  DWORD PTR [eax]
  41c121:	(bad)  [edi]
  41c123:	or     DWORD PTR [edi],eax
  41c125:	jbe    0x41c18d
  41c127:	xchg   DWORD PTR [ebx],ecx
  41c129:	fisttp QWORD PTR [ebx]
  41c12b:	sar    BYTE PTR [ecx-0x42],cl
  41c12e:	xchg   esp,eax
  41c12f:	test   DWORD PTR [ebx+0x54fa1534],0x538381cf
  41c139:	lds    ax,DWORD PTR [edx-0x3f38ef8b]
  41c140:	mov    dl,0xda
  41c142:	outs   dx,BYTE PTR ds:[esi]
  41c143:	cmp    al,0x51
  41c145:	pop    ss
  41c146:	adc    eax,0xe3f597c0
  41c14b:	popa   
  41c14c:	push   es
  41c14d:	jge    0x41c16c
  41c14f:	js     0x41c0de
  41c151:	sbb    al,0x31
  41c153:	jp     0x41c1d0
  41c155:	int    0xeb
  41c157:	inc    ecx
  41c158:	fsub   QWORD PTR [eax]
  41c15a:	into   
  41c15b:	sbb    eax,0xe8e3d376
  41c160:	outs   dx,BYTE PTR ds:[esi]
  41c161:	in     eax,dx
  41c162:	lahf   
  41c163:	xchg   ebp,eax
  41c164:	(bad)  
  41c165:	std    
  41c166:	mov    ebx,eax
  41c168:	pop    esi
  41c169:	sub    al,0xaf
  41c16b:	pusha  
  41c16c:	cdq    
  41c16d:	pop    ss
  41c16e:	push   esp
  41c16f:	sbb    esi,DWORD PTR [esi-0x52]
  41c172:	repz leave 
  41c174:	mov    edx,0x527e86df
  41c179:	sub    eax,0x768a5014
  41c17e:	hlt    
  41c17f:	out    0x80,al
  41c181:	(bad)  
  41c182:	xchg   ebx,eax
  41c183:	push   0xd50c0976
  41c188:	out    0xc9,al
  41c18a:	jmp    0xca0cb56a
  41c18f:	into   
  41c190:	push   ebp
  41c191:	or     BYTE PTR [ebp+0xbc3348d],0x91
  41c198:	addr16 dec ebx
  41c19a:	or     DWORD PTR [eax-0x25],0x1a4b910
  41c1a1:	pop    esi
  41c1a2:	or     al,0xdf
  41c1a4:	fdivr  QWORD PTR [edx+0x1a]
  41c1a7:	dec    ebx
  41c1a8:	scas   al,BYTE PTR es:[edi]
  41c1a9:	sar    DWORD PTR ds:0xd108f1f5,0x1d
  41c1b0:	mov    eax,ds:0xc2e03f72
  41c1b5:	push   ebp
  41c1b6:	mov    BYTE PTR [edi+0x1ffbc91e],dh
  41c1bc:	rcl    DWORD PTR [ebx+ebx*4],1
  41c1bf:	xlat   BYTE PTR ds:[ebx]
  41c1c0:	adc    ch,BYTE PTR [ebp-0x67]
  41c1c3:	pop    edi
  41c1c4:	sbb    ah,0xb9
  41c1c7:	dec    edi
  41c1c8:	iret   
  41c1c9:	ret    
  41c1ca:	dec    esp
  41c1cb:	daa    
  41c1cc:	lock add esp,DWORD PTR [ecx+0x7e8e6f4a]
  41c1d3:	pop    es
  41c1d4:	sbb    eax,0x1a1584b5
  41c1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1da:	outs   dx,DWORD PTR ds:[esi]
  41c1db:	addr16 loop 0x41c1e9
  41c1de:	adc    BYTE PTR [edx+0x76],dl
  41c1e1:	int3   
  41c1e2:	xor    ebp,DWORD PTR [edi+0x6233bf9b]
  41c1e8:	mov    dl,0x9c
  41c1ea:	jae    0x41c1f2
  41c1ec:	hlt    
  41c1ed:	jne    0x41c1e7
  41c1ef:	adc    bl,BYTE PTR [ecx+0x4e927f67]
  41c1f5:	cld    
  41c1f6:	inc    ebp
  41c1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1f8:	ins    DWORD PTR es:[edi],dx
  41c1f9:	pop    ds
  41c1fa:	mov    eax,0xa2589e9b
  41c1ff:	push   es
  41c200:	sub    ebx,DWORD PTR [edx+0x16]
  41c203:	sub    eax,0xca3e9c29
  41c208:	je     0x41c1cb
  41c20a:	pop    esp
  41c20b:	mov    ebx,0x25a7078
  41c210:	push   edx
  41c211:	aas    
  41c212:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c214:	or     eax,0x6cd2ca8e
  41c219:	push   ebx
  41c21a:	aaa    
  41c21b:	mov    ebp,DWORD PTR [edx]
  41c21d:	or     eax,DWORD PTR [ecx-0x19]
  41c220:	hlt    
  41c221:	jmp    0x91e4:0xfcb5d164
  41c228:	call   0x943f:0xc351a3ac
  41c22f:	sbb    dh,BYTE PTR [edx+0x20]
  41c232:	ret    0x8fa4
  41c235:	out    dx,al
  41c236:	lock mov ebx,0x6cfa42aa
  41c23c:	jp     0x41c26f
  41c23e:	cmc    
  41c23f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c240:	mov    al,0xff
  41c242:	cdq    
  41c243:	in     al,dx
  41c244:	mov    bh,0x7f
  41c246:	(bad)  
  41c247:	enter  0xbf3c,0x42
  41c24b:	sbb    eax,0x9a5c368b
  41c250:	and    DWORD PTR [edx-0x3a557c2e],ebp
  41c256:	dec    edi
  41c257:	xchg   ecx,eax
  41c258:	push   ss
  41c259:	jns    0x41c20b
  41c25b:	pop    ss
  41c25c:	stos   DWORD PTR es:[edi],eax
  41c25d:	ins    DWORD PTR es:[edi],dx
  41c25e:	test   dl,dh
  41c260:	jno    0x41c25a
  41c262:	or     eax,0x645050b4
  41c267:	mov    ah,cl
  41c269:	push   cs
  41c26a:	mov    ebp,0xe523ba53
  41c26f:	inc    ebp
  41c270:	repz pop ecx
  41c272:	push   0xffffffbb
  41c274:	jne    0x41c262
  41c276:	sahf   
  41c277:	jae    0x41c2bf
  41c279:	jle    0x41c275
  41c27b:	or     eax,0x426405a4
  41c280:	rol    bh,cl
  41c282:	js     0x41c21b
  41c284:	aas    
  41c285:	jbe    0x41c250
  41c287:	jp     0x41c268
  41c289:	(bad)
  41c28d:	or     eax,0xa22c487d
  41c292:	pop    ds
  41c293:	jle    0x41c2b3
  41c295:	std    
  41c296:	push   0xffffffc9
  41c298:	mov    al,0xf
  41c29a:	lea    esi,[ebx+0x1eb083a0]
  41c2a0:	xchg   esp,eax
  41c2a1:	(bad)  
  41c2a2:	sub    BYTE PTR [edx+0x67799124],dh
  41c2a8:	inc    eax
  41c2a9:	popa   
  41c2aa:	inc    edi
  41c2ab:	rcr    ecx,cl
  41c2ad:	adc    al,0x4a
  41c2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b0:	xor    eax,0xeabf3a64
  41c2b5:	stc    
  41c2b6:	adc    eax,0x5f5701e1
  41c2bb:	sbb    al,0x46
  41c2bd:	cmp    cl,BYTE PTR [ebx+0x13e3098a]
  41c2c3:	fucomip st,st(3)
  41c2c5:	cmp    esp,DWORD PTR [esi-0x621770d1]
  41c2cb:	or     BYTE PTR [ecx-0x53],dl
  41c2ce:	sbb    BYTE PTR [ecx-0x47],bl
  41c2d1:	mov    ah,BYTE PTR [ebx-0x2e3f7ca7]
  41c2d7:	fwait
  41c2d8:	sub    ebp,DWORD PTR [edi]
  41c2da:	int3   
  41c2db:	and    dh,BYTE PTR [esi-0x28]
  41c2de:	shr    DWORD PTR [eax+edx*1],cl
  41c2e1:	push   ds
  41c2e2:	ret    
  41c2e3:	rcr    ch,cl
  41c2e5:	sub    eax,0xbce91026
  41c2ea:	adc    eax,0x5a2d960e
  41c2ef:	popf   
  41c2f0:	mov    dh,0x7f
  41c2f2:	outs   dx,DWORD PTR ds:[esi]
  41c2f3:	jmp    0x7edd:0x91e23a0d
  41c2fa:	and    ebp,DWORD PTR [ebp-0x39]
  41c2fd:	adc    eax,0x99ddb281
  41c302:	test   al,0x3d
  41c304:	retf   0x6cd3
  41c307:	scas   eax,DWORD PTR es:[edi]
  41c308:	mov    esi,0x5e3ca52b
  41c30d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c30f:	xchg   edx,eax
  41c310:	arpl   WORD PTR [ebx+0x0],ax
  41c313:	dec    ecx
  41c314:	push   ebp
  41c315:	aad    0x83
  41c317:	sbb    DWORD PTR [ecx],ecx
  41c319:	stc    
  41c31a:	icebp  
  41c31b:	bound  esp,QWORD PTR [eax]
  41c31d:	rol    DWORD PTR [eax],0x22
  41c320:	jae    0x41c310
  41c322:	push   eax
  41c323:	mov    ecx,0x7560f6da
  41c328:	ins    DWORD PTR es:[edi],dx
  41c329:	inc    esp
  41c32a:	neg    ebx
  41c32c:	aas    
  41c32d:	fcom   DWORD PTR [ecx-0x775518a6]
  41c333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c334:	psubsb mm4,QWORD PTR [esi+0x7b99fc25]
  41c33b:	sbb    BYTE PTR [edx-0x13],bh
  41c33e:	push   eax
  41c33f:	lds    esi,FWORD PTR [esi-0x59a41e62]
  41c345:	scas   eax,DWORD PTR es:[edi]
  41c346:	sub    ebp,DWORD PTR [ebx+eiz*8-0x3e346181]
  41c34d:	or     DWORD PTR [eax],0x244960f1
  41c353:	jge    0x41c3b2
  41c355:	xor    al,BYTE PTR [esp+ebx*1]
  41c358:	mov    eax,0xf1785368
  41c35d:	fwait
  41c35e:	push   ebp
  41c35f:	inc    eax
  41c360:	push   cs
  41c361:	sbb    DWORD PTR [edi],esi
  41c363:	into   
  41c364:	adc    al,al
  41c366:	int    0xa6
  41c368:	rol    DWORD PTR [ebp-0x2b],1
  41c36b:	dec    ebx
  41c36c:	xor    cl,bh
  41c36e:	dec    esi
  41c36f:	ret    
  41c370:	rcl    DWORD PTR [eax+0x3b],0x8b
  41c374:	cmp    al,0x76
  41c376:	add    al,bl
  41c378:	aad    0x3e
  41c37a:	sub    bh,cl
  41c37c:	dec    edi
  41c37d:	adc    eax,0xdf6d65d0
  41c382:	lods   al,BYTE PTR ds:[si]
  41c384:	mov    bh,0x7c
  41c386:	mov    cl,0x86
  41c388:	ds adc al,0x6
  41c38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c38c:	jge    0x41c374
  41c38e:	inc    esi
  41c38f:	je     0x41c325
  41c391:	jne    0x41c38f
  41c393:	in     al,0xe7
  41c395:	xor    eax,0x3b6e80ee
  41c39a:	sbb    al,0xaa
  41c39c:	(bad)  
  41c39d:	xlat   BYTE PTR ds:[ebx]
  41c39e:	(bad)  
  41c39f:	scas   al,BYTE PTR es:[edi]
  41c3a0:	inc    BYTE PTR [eax-0x128861c0]
  41c3a6:	(bad)  
  41c3a8:	popf   
  41c3a9:	lock ret 
  41c3ab:	test   eax,0xbbac6ef4
  41c3b0:	daa    
  41c3b1:	sar    BYTE PTR [esi-0x6d],1
  41c3b4:	pop    es
  41c3b5:	pop    ebx
  41c3b6:	fnstenv [ebx]
  41c3b8:	les    eax,FWORD PTR [ebx]
  41c3ba:	push   esi
  41c3bb:	ins    DWORD PTR es:[edi],dx
  41c3bc:	leave  
  41c3bd:	add    dl,BYTE PTR [edx+0x30]
  41c3c0:	fiadd  DWORD PTR [edi+0x36f96acf]
  41c3c6:	mov    ebp,0xf52737aa
  41c3cb:	sbb    dh,bh
  41c3cd:	mov    ?,ebp
  41c3cf:	push   edx
  41c3d0:	push   ebp
  41c3d1:	fcomp  DWORD PTR [esi+0x68]
  41c3d4:	(bad)  
  41c3d5:	fistp  WORD PTR [eax+0x35]
  41c3d8:	fisubr DWORD PTR [edx]
  41c3da:	cld    
  41c3db:	cmp    esi,DWORD PTR [ecx+0x4a]
  41c3de:	dec    esi
  41c3df:	loope  0x41c431
  41c3e1:	sbb    eax,0xab156c3
  41c3e6:	ret    
  41c3e7:	mov    esi,0xf8625531
  41c3ec:	ret    
  41c3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3ee:	dec    eax
  41c3ef:	cwde   
  41c3f0:	clc    
  41c3f1:	jmp    0x41c3ec
  41c3f3:	jae    0x41c466
  41c3f5:	fadd   st(5),st
  41c3f7:	in     al,dx
  41c3f8:	xor    BYTE PTR [ebp+0xb],al
  41c3fb:	icebp  
  41c3fc:	popf   
  41c3fd:	fcos   
  41c3ff:	xchg   ebx,eax
  41c400:	and    BYTE PTR [edx+0x8],ch
  41c403:	pop    ds
  41c404:	test   eax,0xf7dd2d96
  41c409:	(bad)  
  41c40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c40b:	adc    ah,bh
  41c40d:	cs mov ah,0x14
  41c410:	dec    esp
  41c411:	mov    eax,ds:0xa1a151fe
  41c416:	xchg   esp,eax
  41c417:	pop    es
  41c418:	and    eax,0x1a119c51
  41c41d:	adc    ch,BYTE PTR [ecx-0x63e80868]
  41c423:	test   DWORD PTR [edi-0x64c6ba0d],ebp
  41c429:	jb     0x41c442
  41c42b:	mov    ds:0x41f26681,eax
  41c430:	push   ecx
  41c431:	ret    
  41c432:	jmp    0xc3f3ec1a
  41c437:	cmp    BYTE PTR [eax+0xd4eb933],0x4e
  41c43e:	ds jp  0x41c482
  41c441:	sahf   
  41c442:	add    BYTE PTR [esi],al
  41c444:	push   esp
  41c445:	cs xor edx,ebp
  41c448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c449:	jnp    0x41c4ca
  41c44b:	loope  0x41c3ef
  41c44d:	test   al,0x5e
  41c44f:	jae    0x41c442
  41c451:	into   
  41c452:	shl    DWORD PTR [ecx-0x26],cl
  41c455:	cli    
  41c456:	arpl   WORD PTR [esp+ecx*4],cx
  41c459:	fld    DWORD PTR [ecx]
  41c45b:	pop    edi
  41c45c:	cwde   
  41c45d:	ja     0x41c464
  41c45f:	sub    BYTE PTR [ebx-0x4f89424a],dl
  41c465:	jne    0x41c4ab
  41c467:	arpl   WORD PTR [eax],ax
  41c469:	retf   
  41c46a:	aam    0xa9
  41c46c:	push   edi
  41c46d:	jmp    0x41c446
  41c46f:	test   eax,0x7c14be9f
  41c474:	leave  
  41c475:	push   es
  41c476:	jno    0x41c44e
  41c478:	pushf  
  41c479:	es into 
  41c47b:	popa   
  41c47c:	add    edi,DWORD PTR [ebp+0x24]
  41c47f:	jge    0x41c4c9
  41c481:	out    0xd3,eax
  41c483:	outs   dx,DWORD PTR ds:[esi]
  41c484:	dec    eax
  41c485:	lahf   
  41c486:	call   0xc6b083cf
  41c48b:	rcl    DWORD PTR [esi],0xb0
  41c48e:	mov    eax,0xfd7313b4
  41c493:	xchg   BYTE PTR [ebp+0x75],bh
  41c496:	out    0xdf,al
  41c498:	xchg   BYTE PTR [esi-0x7a729d96],bh
  41c49e:	stc    
  41c49f:	and    DWORD PTR [eax+0x13],ebp
  41c4a2:	jne    0x41c45b
  41c4a4:	arpl   WORD PTR [ebp-0x755fdb39],ax
  41c4aa:	inc    ecx
  41c4ab:	xor    al,dh
  41c4ad:	scas   al,BYTE PTR es:[edi]
  41c4ae:	mov    cl,0x55
  41c4b0:	xchg   ebp,eax
  41c4b1:	out    dx,al
  41c4b2:	dec    esp
  41c4b3:	inc    DWORD PTR [ebp-0x46]
  41c4b6:	in     al,dx
  41c4b7:	fcom   st(7)
  41c4b9:	jmp    0x41c440
  41c4bb:	aam    0x83
  41c4bd:	clc    
  41c4be:	sbb    BYTE PTR [ebp+0x3563beaf],bl
  41c4c4:	cwde   
  41c4c5:	aas    
  41c4c6:	jns    0x41c502
  41c4c8:	cmp    ch,BYTE PTR [eax-0x47]
  41c4cb:	xchg   esi,eax
  41c4cc:	frstor [edi+0x373fd89b]
  41c4d2:	imul   edi,DWORD PTR [ebx],0x70
  41c4d5:	push   esi
  41c4d6:	or     ebx,DWORD PTR [ebp-0x2e9787f9]
  41c4dc:	(bad)  
  41c4dd:	jmp    0xda921c4b
  41c4e2:	sti    
  41c4e3:	call   0x1211:0x9ca08c59
  41c4ea:	dec    BYTE PTR [eax+0x7cb535ac]
  41c4f0:	push   esi
  41c4f1:	imul   ebp,DWORD PTR [ecx+0x40],0x2e
  41c4f5:	or     esi,edx
  41c4f7:	jecxz  0x41c52a
  41c4f9:	fnstcw WORD PTR [ecx+esi*1]
  41c4fc:	dec    ecx
  41c4fd:	pop    ds
  41c4fe:	adc    al,0x1d
  41c500:	lahf   
  41c501:	fwait
  41c502:	pop    esi
  41c503:	mov    edx,0x8123dcfb
  41c508:	pusha  
  41c509:	and    ecx,DWORD PTR [edi-0x62ae9c40]
  41c50f:	xor    ebx,DWORD PTR [edx+0x55]
  41c512:	nop
  41c513:	shl    BYTE PTR [ebx-0x55],1
  41c516:	outs   dx,DWORD PTR ds:[esi]
  41c517:	mov    dh,0xe2
  41c519:	jmp    0x9a8fa532
  41c51e:	in     al,dx
  41c51f:	cmc    
  41c520:	add    esi,DWORD PTR [esp]
  41c523:	adc    al,0xc5
  41c525:	hlt    
  41c526:	xchg   edx,eax
  41c527:	mov    dl,0xae
  41c529:	into   
  41c52a:	cmp    DWORD PTR [ecx-0x15],0x39c4e94a
  41c531:	repnz iret 
  41c533:	jge    0x41c500
  41c535:	scas   al,BYTE PTR es:[edi]
  41c536:	arpl   WORD PTR [ebp-0x5d],ax
  41c539:	sub    BYTE PTR [edx],bh
  41c53b:	jbe    0x41c5af
  41c53d:	pop    edi
  41c53e:	mov    WORD PTR [esi-0x2af1937d],?
  41c544:	sub    ebx,ebx
  41c546:	test   eax,0x14fa39ff
  41c54b:	test   DWORD PTR [ebp-0x645bb0fc],edi
  41c551:	clc    
  41c552:	in     eax,0xe0
  41c554:	push   edx
  41c555:	cmp    BYTE PTR [esi+0x14],dl
  41c558:	xor    al,0x9b
  41c55a:	fdivp  st(5),st
  41c55c:	xchg   ecx,eax
  41c55d:	jmp    0xc24c:0x1b051217
  41c564:	in     eax,0x92
  41c566:	mov    edx,0xe10368e4
  41c56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c56c:	inc    esi
  41c56d:	ss mov ecx,0x9a1fade3
  41c573:	dec    edi
  41c574:	mov    DWORD PTR ds:0xfea405b1,esi
  41c57a:	cdq    
  41c57b:	inc    ebx
  41c57c:	push   0xffffff81
  41c57e:	lea    esi,[edx-0x50]
  41c581:	pmullw mm5,QWORD PTR [ebp+0x3e95123d]
  41c588:	dec    esp
  41c589:	ror    DWORD PTR [ebp-0x3aeb8e6a],0xe9
  41c590:	loope  0x41c536
  41c592:	test   al,0x78
  41c594:	jo     0x41c524
  41c596:	or     DWORD PTR gs:[ecx+0x1311a9f9],esi
  41c59d:	pop    esi
  41c59e:	inc    ebp
  41c59f:	mov    cl,0xbc
  41c5a1:	(bad)  
  41c5a2:	jns    0x41c5fc
  41c5a4:	adc    BYTE PTR [ecx-0x5878a370],dl
  41c5aa:	cmp    eax,0xa22cd642
  41c5af:	sbb    ebx,DWORD PTR [edx-0x76fcd39a]
  41c5b5:	clc    
  41c5b6:	xchg   cl,cl
  41c5b8:	add    BYTE PTR [ebx+0x14a680c7],cl
  41c5be:	xchg   edi,eax
  41c5bf:	je     0x41c58e
  41c5c1:	adc    DWORD PTR [ebx-0x56df9230],ebp
  41c5c7:	in     eax,0x3c
  41c5c9:	popf   
  41c5ca:	repnz nop
  41c5cc:	cli    
  41c5cd:	inc    ebx
  41c5ce:	inc    esi
  41c5cf:	clc    
  41c5d0:	xor    ah,0xaa
  41c5d3:	stc    
  41c5d4:	inc    edi
  41c5d5:	les    ecx,FWORD PTR [ebp-0x6735d7b4]
  41c5db:	or     ecx,DWORD PTR [ebx]
  41c5dd:	lods   al,BYTE PTR ds:[esi]
  41c5de:	jb     0x41c5c7
  41c5e0:	push   esp
  41c5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5e2:	iret   
  41c5e3:	jb     0x41c606
  41c5e5:	mul    DWORD PTR [esi+0x47804573]
  41c5eb:	shl    dh,cl
  41c5ed:	xlat   BYTE PTR ds:[ebx]
  41c5ee:	jmp    0x80d86b97
  41c5f3:	jle    0x41c661
  41c5f5:	leave  
  41c5f6:	pop    ss
  41c5f7:	xlat   BYTE PTR ds:[ebx]
  41c5f8:	gs pop ebp
  41c5fa:	jbe    0x41c5b9
  41c5fc:	retf   0x903a
  41c5ff:	aad    0x65
  41c601:	mov    eax,ds:0xb5f95f2
  41c606:	mov    BYTE PTR fs:[edi+0x3acc09a1],dl
  41c60d:	mov    eax,0xf1814e0
  41c612:	popf   
  41c613:	rcl    DWORD PTR [ebp-0x42b17990],0xb0
  41c61a:	ds pop ebp
  41c61c:	add    BYTE PTR ds:0xb7ad1965,0x59
  41c623:	ficomp DWORD PTR [esi]
  41c625:	mov    esp,0x889c676f
  41c62a:	or     al,0x9b
  41c62c:	std    
  41c62d:	push   0x6ce8b4fe
  41c632:	add    ah,ch
  41c634:	mov    WORD PTR [ebx-0x12],ss
  41c637:	mov    esi,DWORD PTR [esi+0x7c932594]
  41c63d:	jge    0x41c61c
  41c63f:	sbb    BYTE PTR [edx-0x4f],0x1d
  41c643:	lods   eax,DWORD PTR ds:[esi]
  41c644:	call   0xa3e511a4
  41c649:	pop    edi
  41c64a:	shl    BYTE PTR [eax+ebx*8-0x29],0x55
  41c64f:	rol    ebp,cl
  41c651:	neg    DWORD PTR [ebp-0x4dbbdb2b]
  41c657:	in     al,0xa4
  41c659:	enter  0xff5e,0x36
  41c65d:	rcr    eax,0xb6
  41c660:	mov    al,0x7a
  41c662:	jmp    0x41c607
  41c664:	push   cs
  41c665:	mov    DWORD PTR [edx-0x76a7467e],ebp
  41c66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c66c:	add    eax,0xe8e8bcfe
  41c671:	jmp    0x4574:0xba810ea0
  41c678:	dec    edi
  41c679:	loop   0x41c669
  41c67b:	lock je 0x41c60f
  41c67e:	xor    edi,ebx
  41c680:	adc    DWORD PTR ds:0xfdf96ba4,esi
  41c686:	push   edx
  41c687:	or     al,0x2b
  41c689:	adc    dh,ah
  41c68b:	call   0xb47c573a
  41c690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c691:	lock ror DWORD PTR [eax-0x48],cl
  41c695:	lock out 0x2b,al
  41c698:	fsubr  DWORD PTR [ebx+0x1]
  41c69b:	or     DWORD PTR ds:0xbe3f7221,ebx
  41c6a1:	push   ecx
  41c6a2:	ror    ah,1
  41c6a4:	ins    DWORD PTR es:[edi],dx
  41c6a5:	aas    
  41c6a6:	ret    0x35e7
  41c6a9:	jo     0x41c728
  41c6ab:	fistp  QWORD PTR [edi+eiz*2+0x72eb206d]
  41c6b2:	mov    WORD PTR [ebx+0x45],gs
  41c6b5:	mov    bh,0x40
  41c6b7:	mov    ebp,0x3e0bbb7d
  41c6bc:	xor    BYTE PTR [ebx-0x44],al
  41c6bf:	(bad)  
  41c6c1:	inc    edi
  41c6c2:	fwait
  41c6c3:	sbb    DWORD PTR [ebp+0x6b],edx
  41c6c6:	jne    0x41c720
  41c6c8:	cld    
  41c6c9:	xchg   esi,eax
  41c6ca:	fxtract 
  41c6cc:	out    dx,eax
  41c6cd:	iret   
  41c6ce:	test   DWORD PTR [ecx-0x6da7760],esi
  41c6d4:	imul   ecx,DWORD PTR [ebx+0xb],0x4b
  41c6d8:	cmp    esi,DWORD PTR [ebx+0x65]
  41c6db:	push   ecx
  41c6dc:	fcmovbe st,st(7)
  41c6de:	push   esp
  41c6df:	ret    0xe8ed
  41c6e2:	mov    DWORD PTR [esi+0x35],esp
  41c6e5:	mov    esp,0xf5e55c23
  41c6ea:	mov    BYTE PTR [ecx],cl
  41c6ec:	cld    
  41c6ed:	jge    0x41c726
  41c6ef:	xor    dh,dl
  41c6f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f2:	hlt    
  41c6f3:	xchg   esp,eax
  41c6f4:	xchg   edx,eax
  41c6f5:	ret    
  41c6f6:	lock xchg esp,eax
  41c6f8:	xor    esi,DWORD PTR [ecx+0x9]
  41c6fb:	sub    ebp,DWORD PTR [ecx-0x44]
  41c6fe:	rcr    DWORD PTR [bx+0x48],1
  41c702:	(bad)  
  41c704:	sbb    al,0x1a
  41c706:	sbb    esi,DWORD PTR [edi-0x12]
  41c709:	(bad)  
  41c70a:	js     0x41c75f
  41c70c:	add    al,0xa3
  41c70e:	fxch   st(7)
  41c710:	out    0x4c,al
  41c712:	push   ds
  41c713:	aas    
  41c714:	sub    cl,al
  41c716:	adc    DWORD PTR [edi],eax
  41c718:	cmp    bl,BYTE PTR [ebp-0x4d]
  41c71b:	cmp    ebp,DWORD PTR [eax+0x31]
  41c71e:	pop    ds
  41c71f:	sub    al,0xa9
  41c721:	mov    edi,0xb823459a
  41c726:	jns    0x41c6c7
  41c728:	jl     0x41c722
  41c72a:	jecxz  0x41c6c1
  41c72c:	sub    dh,BYTE PTR [edx-0x7c32cb7]
  41c732:	fwait
  41c733:	mov    ds:0x1559cba4,eax
  41c738:	adc    eax,0xc2ec997d
  41c73d:	mov    ecx,0x2cb262bd
  41c742:	mov    WORD PTR [ebp+0x1d],gs
  41c745:	pop    ss
  41c746:	loopne 0x41c6fc
  41c748:	xchg   edi,eax
  41c749:	iret   
  41c74a:	call   0x7828:0x1c5906df
  41c751:	adc    ecx,DWORD PTR [edi-0xb416fd2]
  41c757:	std    
  41c758:	std    
  41c759:	fcmovu st,st(2)
  41c75b:	test   eax,0x1d70accb
  41c760:	pop    ebx
  41c761:	out    0xd3,al
  41c763:	in     al,dx
  41c764:	pop    esp
  41c765:	pop    esi
  41c766:	xchg   BYTE PTR [esi-0x21dd329a],dl
  41c76c:	ficom  DWORD PTR [edi-0x25353e19]
  41c772:	xor    DWORD PTR [edi+0x44],0xffffffb1
  41c776:	repnz aad 0xf5
  41c779:	mov    dl,BYTE PTR [esi]
  41c77b:	dec    edi
  41c77c:	pop    edi
  41c77d:	fist   WORD PTR [eax-0x37029a0f]
  41c783:	(bad)  
  41c784:	or     esi,DWORD PTR [ebp+0x21]
  41c787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c788:	jmp    0x41c7fa
  41c78a:	jb     0x41c778
  41c78c:	mov    dh,0x3b
  41c78e:	and    DWORD PTR [esi+0x57],esp
  41c791:	and    al,0xb7
  41c793:	mov    eax,ds:0x3e6d3dc6
  41c798:	mov    esp,esp
  41c79a:	cmp    edi,eax
  41c79c:	cmp    cl,BYTE PTR [ebx-0x58]
  41c79f:	or     BYTE PTR [ecx+0x20838b37],cl
  41c7a5:	and    BYTE PTR [ebx-0x5f80eacf],0xef
  41c7ac:	and    al,0x16
  41c7ae:	inc    BYTE PTR [ecx+0x50]
  41c7b1:	and    al,0xdf
  41c7b3:	sub    cl,BYTE PTR [ebp-0x582aa14e]
  41c7b9:	jo     0x41c7c1
  41c7bb:	sub    cl,BYTE PTR [edi-0x7213bc11]
  41c7c1:	(bad)  
  41c7c2:	js     0x41c829
  41c7c4:	ret    
  41c7c5:	mov    eax,ds:0x6a1f5a80
  41c7ca:	push   ds
  41c7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7cc:	inc    ebp
  41c7cd:	fdivrp st(7),st
  41c7cf:	fnsave [edi-0x51]
  41c7d2:	fimul  WORD PTR [edx]
  41c7d4:	fcom   QWORD PTR [edi]
  41c7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7d7:	xor    esp,DWORD PTR [edx]
  41c7d9:	push   0xffffffe1
  41c7db:	imul   edi,ebp,0xffffffb2
  41c7de:	cmp    bl,BYTE PTR [ecx]
  41c7e0:	mov    dl,0x53
  41c7e2:	or     al,cl
  41c7e4:	retf   
  41c7e5:	jno    0x41c7ad
  41c7e7:	sti    
  41c7e8:	es sti 
  41c7ea:	retf   0x52fb
  41c7ed:	(bad)  
  41c7ee:	xor    DWORD PTR [edi+0x35],eax
  41c7f1:	xor    BYTE PTR [ebx-0x12],dh
  41c7f4:	pusha  
  41c7f5:	je     0x41c866
  41c7f7:	out    dx,eax
  41c7f8:	js     0x41c83f
  41c7fa:	mov    BYTE PTR [edx-0x339531d],cl
  41c800:	jns    0x41c856
  41c802:	push   ebx
  41c803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c804:	or     bl,cl
  41c806:	lahf   
  41c807:	cmp    ebp,edx
  41c809:	inc    ecx
  41c80a:	clc    
  41c80b:	and    eax,0xd26b4be3
  41c810:	or     ch,BYTE PTR [edx+0x39b87b4a]
  41c816:	mov    ah,0xbf
  41c818:	sbb    al,0xde
  41c81a:	cmp    ecx,esp
  41c81c:	sub    DWORD PTR [edi+0x27c04d27],edi
  41c822:	icebp  
  41c823:	adc    al,BYTE PTR [ecx]
  41c825:	sbb    al,0xd8
  41c827:	popf   
  41c828:	ss dec edi
  41c82a:	enter  0x4bc1,0x3c
  41c82e:	retf   
  41c82f:	xchg   esp,eax
  41c830:	pop    edi
  41c831:	loop   0x41c86d
  41c833:	lods   al,BYTE PTR ds:[esi]
  41c834:	push   ds
  41c835:	call   0x4da3c41e
  41c83a:	xchg   edx,eax
  41c83b:	pop    ds
  41c83c:	dec    ebp
  41c83d:	adc    al,0xa1
  41c83f:	sbb    eax,0xa7397923
  41c844:	dec    esp
  41c845:	out    0xd9,eax
  41c847:	xchg   ebx,eax
  41c848:	fild   DWORD PTR [ecx]
  41c84a:	push   edi
  41c84b:	or     DWORD PTR [edx+ebx*4+0x2d],0xd
  41c850:	aas    
  41c851:	mov    ds:0x3051ecef,al
  41c856:	push   es
  41c857:	nop
  41c858:	mov    al,0x7a
  41c85a:	adc    eax,0xf395a03c
  41c85f:	(bad)  
  41c861:	dec    ecx
  41c862:	push   edi
  41c863:	add    bl,0x52
  41c866:	and    BYTE PTR [esi+0x46],al
  41c869:	(bad)  
  41c86a:	mov    al,0xbe
  41c86c:	sub    eax,0x145c6acb
  41c871:	cmc    
  41c872:	inc    ebx
  41c873:	pop    edx
  41c874:	push   esp
  41c875:	mov    ah,0x85
  41c877:	enter  0x97dd,0xb0
  41c87b:	lock cmp al,0xba
  41c87e:	(bad)  
  41c87f:	test   BYTE PTR [edx+0x5f],0xd6
  41c883:	loopne 0x41c8e2
  41c885:	mov    eax,DWORD PTR [ebx]
  41c887:	xchg   ebx,eax
  41c888:	dec    edi
  41c889:	stc    
  41c88a:	out    dx,al
  41c88b:	fisub  DWORD PTR [ebp+0x464a8bfa]
  41c891:	lahf   
  41c892:	enter  0xdd0b,0x2
  41c896:	push   esi
  41c897:	mov    ebx,0xa88bb3c5
  41c89c:	icebp  
  41c89d:	aas    
  41c89e:	mov    ds,WORD PTR [edi-0x4a4bb22b]
  41c8a4:	and    BYTE PTR [esi+0x49780c88],al
  41c8aa:	sub    DWORD PTR [ecx+0x2d66ee2c],ebp
  41c8b0:	out    dx,al
  41c8b1:	out    dx,al
  41c8b2:	rcr    DWORD PTR [eax-0x31],1
  41c8b5:	das    
  41c8b6:	ja     0x41c910
  41c8b8:	aam    0x61
  41c8ba:	icebp  
  41c8bb:	fnstenv [ebp-0x67]
  41c8be:	jle    0x41c885
  41c8c0:	cmp    eax,0x38fc61ee
  41c8c5:	adc    eax,0x73d88b5e
  41c8ca:	jg     0x41c87a
  41c8cc:	rcr    BYTE PTR ds:0xf463e80b,cl
  41c8d2:	ds jg  0x41c916
  41c8d5:	icebp  
  41c8d6:	cdq    
  41c8d7:	in     eax,dx
  41c8d8:	mov    eax,0xa46306b4
  41c8dd:	jne    0x41c8ce
  41c8df:	pop    ebp
  41c8e0:	sbb    al,0xcf
  41c8e2:	test   eax,0xad708c0e
  41c8e7:	test   al,0x90
  41c8e9:	inc    eax
  41c8ea:	adc    cl,BYTE PTR [edi+0x4d]
  41c8ed:	dec    ebx
  41c8ee:	inc    edx
  41c8ef:	xchg   edi,eax
  41c8f0:	push   es
  41c8f1:	lock and DWORD PTR [edi-0x4c5a365f],ebp
  41c8f8:	jecxz  0x41c94c
  41c8fa:	push   ebp
  41c8fb:	push   edi
  41c8fc:	cmp    DWORD PTR [eax-0x5b79e577],eax
  41c902:	push   cs
  41c903:	xor    ch,BYTE PTR [eax+eiz*1]
  41c906:	outs   dx,BYTE PTR ds:[esi]
  41c907:	mov    BYTE PTR [edx+eax*8-0x5f],bl
  41c90b:	sub    DWORD PTR [edx-0x10],eax
  41c90e:	addr16 xchg ch,bl
  41c911:	das    
  41c912:	add    esp,DWORD PTR [eax-0x24f77e04]
  41c918:	mov    edx,0xdf104411
  41c91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c91e:	inc    edi
  41c91f:	dec    ecx
  41c920:	mov    ecx,0x57c703d3
  41c925:	sti    
  41c926:	test   BYTE PTR [eax-0x4d83f465],bh
  41c92c:	lock xor BYTE PTR [ebx],bh
  41c92f:	fstp   TBYTE PTR [edi+0x5d]
  41c932:	icebp  
  41c933:	imul   edi,DWORD PTR [edx],0x68
  41c936:	adc    DWORD PTR [edi],ebx
  41c938:	mov    dh,0x6d
  41c93a:	pop    ebx
  41c93b:	es cmp eax,0x5440a7e7
  41c941:	int    0xce
  41c943:	jge    0x41c9c1
  41c945:	clc    
  41c946:	xor    cl,BYTE PTR [ebx-0x1f]
  41c949:	fwait
  41c94a:	(bad)  
  41c94b:	push   esp
  41c94c:	push   ds
  41c94d:	xchg   BYTE PTR [edi],ch
  41c94f:	mov    ebp,0x6db37a38
  41c954:	pop    edi
  41c955:	jbe    0x41c950
  41c957:	mov    eax,ds:0x961b254a
  41c95c:	int3   
  41c95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c95e:	and    ebp,ebx
  41c960:	test   eax,0x2c9768d8
  41c965:	inc    ebx
  41c966:	(bad)  
  41c967:	std    
  41c968:	inc    ebx
  41c969:	stos   DWORD PTR es:[edi],eax
  41c96a:	test   eax,0xbe3b5da3
  41c96f:	popa   
  41c970:	or     DWORD PTR [edi-0x3ee997f9],ecx
  41c976:	xlat   BYTE PTR ds:[ebx]
  41c977:	and    al,0xc
  41c979:	xor    esi,DWORD PTR [ecx+0x34]
  41c97c:	mov    bl,0x49
  41c97e:	dec    ebp
  41c97f:	lds    eax,FWORD PTR [ecx+0x47]
  41c982:	nop
  41c983:	(bad)  
  41c984:	out    dx,al
  41c985:	sbb    DWORD PTR [edx+0x232c0129],ebp
  41c98b:	enter  0x68d9,0xa2
  41c98f:	fcomp  DWORD PTR [edi+0x153fb0a7]
  41c995:	enter  0xd78f,0x4f
  41c999:	jge    0x41c9ca
  41c99b:	push   eax
  41c99c:	mov    dl,BYTE PTR [edx+0x24]
  41c99f:	jo     0x41c95f
  41c9a1:	inc    esp
  41c9a2:	xor    DWORD PTR [ebp+0xb],esp
  41c9a5:	rcl    DWORD PTR [ecx-0x206e4609],0xb0
  41c9ac:	cmp    al,0xc9
  41c9ae:	adc    al,0x62
  41c9b0:	or     edx,esi
  41c9b2:	imul   eax,DWORD PTR [eax+0x5b3f651],0xe
  41c9b9:	fsubr  QWORD PTR [edi+0x15]
  41c9bc:	cwde   
  41c9bd:	pushf  
  41c9be:	dec    ecx
  41c9bf:	xchg   edx,eax
  41c9c0:	mov    bh,0x2f
  41c9c2:	jnp    0x41c9b7
  41c9c4:	adc    DWORD PTR [esi-0x1a],esi
  41c9c7:	cli    
  41c9c8:	iret   
  41c9c9:	and    al,BYTE PTR [ebp-0x30]
  41c9cc:	dec    esi
  41c9cd:	mov    ah,0x4b
  41c9cf:	push   ds
  41c9d0:	fnsave [ebp-0x26]
  41c9d3:	pushf  
  41c9d4:	mov    ds:0xfb01fcad,al
  41c9d9:	mov    ebp,gs
  41c9db:	jge    0x41ca0e
  41c9dd:	xchg   DWORD PTR [eax+0x2c5c762b],esi
  41c9e3:	arpl   WORD PTR [ecx],dx
  41c9e5:	das    
  41c9e6:	xor    DWORD PTR [ebx-0x7],esi
  41c9e9:	mov    BYTE PTR [edx-0x50],bh
  41c9ec:	dec    ebp
  41c9ed:	adc    dh,bl
  41c9ef:	mov    al,ds:0x61c0c3ff
  41c9f4:	and    BYTE PTR [ecx],0x49
  41c9f7:	push   ds
  41c9f8:	mov    dl,0x1a
  41c9fa:	ds (bad) 
  41c9fc:	sub    bh,ah
  41c9fe:	stos   BYTE PTR es:[edi],al
  41c9ff:	pop    edx
  41ca00:	and    BYTE PTR [ecx],0x85
  41ca03:	into   
  41ca04:	add    esi,eax
  41ca06:	dec    ebx
  41ca07:	shr    bh,1
  41ca09:	mov    cl,0xa2
  41ca0b:	mov    eax,0xe799ceb8
  41ca10:	cmp    dl,BYTE PTR [edx-0x1c35a526]
  41ca16:	jmp    0x2afc:0xaae693e6
  41ca1d:	arpl   WORD PTR [ebp-0x7738f6a4],si
  41ca23:	jne    0x41ca89
  41ca25:	(bad)  
  41ca26:	enter  0x4967,0x2
  41ca2a:	pop    eax
  41ca2b:	outs   dx,BYTE PTR ds:[esi]
  41ca2c:	mov    eax,0x892cf648
  41ca31:	and    BYTE PTR cs:[ecx],cl
  41ca34:	test   BYTE PTR fs:[ebx],bl
  41ca37:	pop    edi
  41ca38:	(bad)  [edi-0x5c]
  41ca3b:	sub    eax,0x48b42fd4
  41ca40:	aaa    
  41ca41:	stos   DWORD PTR es:[edi],eax
  41ca42:	cli    
  41ca43:	mov    edx,ebp
  41ca45:	in     eax,0x61
  41ca47:	sbb    BYTE PTR [edx],ah
  41ca49:	call   0x13ae83a1
  41ca4e:	xchg   edi,eax
  41ca4f:	(bad)  
  41ca51:	dec    ebp
  41ca52:	xchg   DWORD PTR [eax-0x6d],ecx
  41ca55:	sub    eax,0x6395fe8
  41ca5a:	inc    edx
  41ca5b:	or     BYTE PTR [ebp+0x112df459],dh
  41ca61:	and    BYTE PTR [edi-0x1b],dh
  41ca64:	or     eax,0xcbf05502
  41ca69:	cmp    BYTE PTR [ebx+0x2847178a],0xac
  41ca70:	xor    al,BYTE PTR [ecx-0x40]
  41ca73:	in     eax,dx
  41ca74:	pop    ebp
  41ca75:	adc    dl,dl
  41ca77:	aaa    
  41ca78:	cmp    ch,BYTE PTR [ebx-0x75]
  41ca7b:	test   edi,esp
  41ca7d:	imul   edx,DWORD PTR [edi],0xffffff91
  41ca80:	popa   
  41ca81:	sbb    cl,BYTE PTR [edx-0x2bdad105]
  41ca87:	(bad)
  41ca8a:	xor    eax,0xa8e06565
  41ca8f:	int    0x61
  41ca91:	mov    ds:0x7e66d148,al
  41ca96:	xchg   esp,eax
  41ca97:	cmp    al,0xc1
  41ca99:	adc    eax,0x8ef530a9
  41ca9e:	sub    DWORD PTR [edx],ebx
  41caa0:	xchg   BYTE PTR [ebx-0x5a472136],al
  41caa6:	lea    esi,[esi-0x51]
  41caa9:	jno    0x41cb24
  41caab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caac:	push   esp
  41caad:	push   edx
  41caae:	mov    ds:0x38adc523,eax
  41cab3:	push   0x64
  41cab5:	(bad)  
  41cab6:	fiadd  WORD PTR [eax+0x22c423d8]
  41cabc:	push   0xfa29d380
  41cac1:	push   cs
  41cac2:	pushf  
  41cac3:	call   0x5c8f433
  41cac8:	add    DWORD PTR [ecx],ebp
  41caca:	dec    eax
  41cacb:	rcl    DWORD PTR [ebp-0x55],0xc
  41cacf:	mov    ecx,0x86609b4e
  41cad4:	and    DWORD PTR [esi+ecx*1+0x4a],edx
  41cad8:	and    eax,0x78954425
  41cadd:	mov    ah,0x41
  41cadf:	xor    al,0x28
  41cae1:	retf   
  41cae2:	sbb    DWORD PTR [ebx],ebp
  41cae4:	stc    
  41cae5:	xor    al,0xc8
  41cae7:	cmp    BYTE PTR [ecx-0x7d9daf5f],0x6a
  41caee:	xor    ah,ah
  41caf0:	xor    DWORD PTR [edx],esi
  41caf2:	mov    DWORD PTR [eax-0x39],edx
  41caf5:	ror    BYTE PTR [ebx],1
  41caf7:	pop    esp
  41caf8:	pop    es
  41caf9:	(bad)  
  41cafa:	int3   
  41cafb:	shl    BYTE PTR [ecx+0x78],cl
  41cafe:	push   es
  41caff:	test   BYTE PTR [eax+0x11758447],al
  41cb05:	push   esp
  41cb06:	xchg   ebp,eax
  41cb07:	mov    DWORD PTR [ebp-0x52],ecx
  41cb0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb0b:	add    edx,DWORD PTR [edi]
  41cb0d:	aas    
  41cb0e:	outs   dx,DWORD PTR ds:[esi]
  41cb0f:	xchg   ecx,eax
  41cb10:	dec    ebp
  41cb11:	push   edx
  41cb12:	mov    edx,0xc78cec50
  41cb17:	(bad)  
  41cb18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb19:	xor    eax,0xcddb4459
  41cb1e:	adc    eax,0x89285fe7
  41cb23:	cli    
  41cb24:	cdq    
  41cb25:	sbb    ah,BYTE PTR [edi+ebp*8]
  41cb28:	sbb    BYTE PTR [edx-0x7c58c251],0x56
  41cb2f:	sub    DWORD PTR [edi-0x38e07b4e],edx
  41cb35:	ins    BYTE PTR es:[edi],dx
  41cb36:	add    esp,0xc659fc09
  41cb3c:	inc    edi
  41cb3d:	icebp  
  41cb3e:	mov    dl,BYTE PTR [edi]
  41cb40:	(bad)  
  41cb41:	pop    ds
  41cb42:	int    0xfc
  41cb44:	shr    dh,cl
  41cb46:	hlt    
  41cb47:	into   
  41cb48:	jmp    0x601fe2e7
  41cb4d:	sub    al,BYTE PTR [eax+0x76c36b2a]
  41cb53:	nop
  41cb54:	or     al,0x78
  41cb56:	ins    BYTE PTR es:[edi],dx
  41cb57:	push   eax
  41cb58:	cmc    
  41cb59:	jecxz  0x41cb63
  41cb5b:	jno    0x41caf9
  41cb5d:	sbb    DWORD PTR [edx],edx
  41cb5f:	push   eax
  41cb60:	jo     0x41cb9b
  41cb62:	pop    ds
  41cb63:	retf   
  41cb64:	idiv   esi
  41cb66:	push   edx
  41cb67:	inc    ebx
  41cb68:	adc    al,0x6a
  41cb6a:	xor    BYTE PTR [esi],bh
  41cb6c:	fild   QWORD PTR [esi+0x1a3a0b0]
  41cb72:	sti    
  41cb73:	mov    eax,0xb57c7ecd
  41cb78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb79:	sbb    eax,DWORD PTR [ebx-0x5f]
  41cb7c:	fmul   QWORD PTR [edx+0x30819d26]
  41cb82:	inc    ebx
  41cb83:	or     al,0x2c
  41cb85:	mov    ds:0xe53f5d09,eax
  41cb8a:	les    ebp,FWORD PTR [ebx-0x5c]
  41cb8d:	mov    ecx,0xa0825954
  41cb92:	mov    eax,eax
  41cb94:	loopne 0x41cbc7
  41cb96:	xchg   BYTE PTR [bp+di],ch
  41cb99:	div    DWORD PTR [ecx]
  41cb9b:	fs pop ecx
  41cb9d:	test   dl,0x89
  41cba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cba1:	arpl   sp,sp
  41cba3:	sahf   
  41cba4:	cld    
  41cba5:	xchg   DWORD PTR [ebp+0x7c],esi
  41cba8:	inc    eax
  41cba9:	xor    bh,BYTE PTR [edx+0x72cf38af]
  41cbaf:	mov    esi,eax
  41cbb1:	mov    ebp,0x172106eb
  41cbb6:	sbb    bh,BYTE PTR [edi]
  41cbb8:	push   eax
  41cbb9:	push   eax
  41cbba:	sbb    BYTE PTR [ebp+0x4a4450fd],al
  41cbc0:	pop    es
  41cbc1:	(bad)  
  41cbc3:	add    DWORD PTR [ebx],ecx
  41cbc5:	int3   
  41cbc6:	jb     0x41cba7
  41cbc8:	jnp    0x41cbc9
  41cbca:	out    dx,eax
  41cbcb:	ja     0x41cc49
  41cbcd:	stos   DWORD PTR es:[edi],eax
  41cbce:	mov    ah,0xc8
  41cbd0:	and    ah,cl
  41cbd2:	push   0xffffffd6
  41cbd4:	out    dx,eax
  41cbd5:	mov    ds:0x95f32f50,al
  41cbda:	pop    ebp
  41cbdb:	push   sp
  41cbdd:	sbb    BYTE PTR [ebx],al
  41cbdf:	retf   
  41cbe0:	sbb    BYTE PTR [eax],dh
  41cbe2:	dec    edx
  41cbe3:	jle    0x41cb8d
  41cbe5:	mov    dh,0xbf
  41cbe7:	mov    ebp,0xc476806f
  41cbec:	jae    0x41cb9f
  41cbee:	push   ecx
  41cbef:	cpuid  
  41cbf1:	sub    eax,0xf4aac629
  41cbf6:	(bad)  
  41cbf7:	aam    0xf7
  41cbf9:	sbb    BYTE PTR [esi],bh
  41cbfb:	mov    ecx,0xbb247187
  41cc00:	add    ah,BYTE PTR [ebp-0x15]
  41cc03:	push   eax
  41cc04:	sbb    al,0x39
  41cc06:	outs   dx,BYTE PTR ds:[esi]
  41cc07:	add    eax,0xf942c5eb
  41cc0c:	sbb    BYTE PTR [ecx+0x22],ah
  41cc0f:	mov    ecx,0x36655832
  41cc14:	push   edi
  41cc15:	dec    esp
  41cc16:	sti    
  41cc17:	daa    
  41cc18:	jle    0x41cc5e
  41cc1a:	stos   DWORD PTR es:[edi],eax
  41cc1b:	mov    bl,0xfe
  41cc1d:	cdq    
  41cc1e:	jmp    0x3019602b
  41cc23:	and    edi,DWORD PTR [esi+0x20440c8]
  41cc29:	add    DWORD PTR [esi+0x2c377c6e],0x32
  41cc30:	adc    edi,DWORD PTR ds:0xbab7e6d7
  41cc36:	sub    DWORD PTR [edx-0x2d71eabe],eax
  41cc3c:	jo     0x41cbff
  41cc3e:	shl    BYTE PTR [ebx+0x455c773c],cl
  41cc44:	add    BYTE PTR [ecx-0x6],cl
  41cc47:	lods   al,BYTE PTR ds:[esi]
  41cc48:	xlat   BYTE PTR ds:[ebx]
  41cc49:	push   edi
  41cc4a:	mov    BYTE PTR [esi+0x568e350d],dh
  41cc50:	mov    esp,0x83d0a3ed
  41cc55:	imul   ebx,ecx,0xffffff93
  41cc58:	xor    bl,BYTE PTR [esi*1+0x1ce1f6a7]
  41cc5f:	cmp    ax,0x58da
  41cc63:	aad    0x56
  41cc65:	cli    
  41cc66:	aaa    
  41cc67:	and    eax,0x4117d3ca
  41cc6c:	and    eax,0xaea0afbc
  41cc71:	stos   DWORD PTR es:[edi],eax
  41cc72:	cmp    eax,0x4187fd75
  41cc77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc78:	mov    dl,0x44
  41cc7a:	shr    BYTE PTR [edi-0x46977181],0x15
  41cc81:	dec    edx
  41cc82:	inc    edi
  41cc83:	xor    al,al
  41cc85:	(bad)  [edx+0x59ef340f]
  41cc8b:	retf   
  41cc8c:	cmp    eax,0x51928689
  41cc91:	push   cs
  41cc92:	adc    al,0x7
  41cc94:	ins    DWORD PTR es:[edi],dx
  41cc95:	xor    dl,ah
  41cc97:	and    ebp,ebx
  41cc99:	fcomp  QWORD PTR [ebx]
  41cc9b:	jns    0x41cd0d
  41cc9d:	out    0x11,al
  41cc9f:	cmp    dh,ah
  41cca1:	mov    dh,0xd2
  41cca3:	jge    0x41cc33
  41cca5:	pop    ebp
  41cca6:	lahf   
  41cca7:	ja     0x41cd15
  41cca9:	enter  0x35fa,0x7b
  41ccad:	in     eax,dx
  41ccae:	cmp    DWORD PTR [ebx+0x1df6aa89],eax
  41ccb4:	mov    al,ds:0x22850548
  41ccb9:	adc    al,0xa6
  41ccbb:	or     DWORD PTR [edx],0x92ec115f
  41ccc1:	imul   ecx,ebp,0xebc693bd
  41ccc7:	fldenv [ebp+ebp*4+0x59]
  41cccb:	into   
  41cccc:	xchg   DWORD PTR [edi+0x6e],esi
  41cccf:	stos   DWORD PTR es:[edi],eax
  41ccd0:	popf   
  41ccd1:	jno    0x41cca0
  41ccd3:	in     eax,0x2d
  41ccd5:	lds    ebp,FWORD PTR [ecx+0x390a8efb]
  41ccdb:	lahf   
  41ccdc:	test   eax,0xb01cd774
  41cce1:	popa   
  41cce2:	push   edi
  41cce3:	push   ds
  41cce4:	add    ah,dl
  41cce6:	fisttp DWORD PTR [edx-0x5e]
  41cce9:	cli    
  41ccea:	fdecstp 
  41ccec:	scas   eax,DWORD PTR es:[edi]
  41cced:	fidiv  DWORD PTR [eax-0x68]
  41ccf0:	lahf   
  41ccf1:	sub    esp,DWORD PTR [edx+0x667092e5]
  41ccf7:	lods   al,BYTE PTR ds:[esi]
  41ccf8:	xchg   esi,eax
  41ccf9:	mov    al,ds:0x7604677b
  41ccfe:	pop    ds
  41ccff:	pop    DWORD PTR [esi+0xc]
  41cd02:	nop
  41cd03:	sub    edx,DWORD PTR [ebp+eax*1+0x5f]
  41cd07:	aad    0x32
  41cd09:	xchg   edx,eax
  41cd0a:	inc    edi
  41cd0b:	into   
  41cd0c:	mov    edx,DWORD PTR [edi]
  41cd0e:	ins    DWORD PTR es:[edi],dx
  41cd0f:	retf   
  41cd10:	dec    ecx
  41cd11:	fs push edi
  41cd13:	aas    
  41cd14:	fnsave [esi-0x61]
  41cd17:	pop    edi
  41cd18:	popf   
  41cd19:	retf   0x3514
  41cd1c:	fdiv   DWORD PTR [ecx]
  41cd1e:	int3   
  41cd1f:	xor    DWORD PTR [edi-0x62],ebx
  41cd22:	or     eax,0x43163fff
  41cd27:	cmp    BYTE PTR [esp+eiz*4],ch
  41cd2a:	into   
  41cd2b:	cld    
  41cd2c:	pop    eax
  41cd2d:	jb     0x41ccf1
  41cd2f:	cwde   
  41cd30:	rcl    DWORD PTR gs:[edx-0x5a7eb3e4],0x12
  41cd38:	jne    0x41cd2d
  41cd3a:	jnp    0x41cd2c
  41cd3c:	jb     0x41cd22
  41cd3e:	pop    ss
  41cd3f:	inc    ebx
  41cd40:	pop    esp
  41cd41:	test   BYTE PTR gs:[edx],cl
  41cd44:	mov    ah,0xaf
  41cd46:	xchg   esp,eax
  41cd47:	(bad)  
  41cd48:	popa   
  41cd49:	and    DWORD PTR [ebp*8-0x23c55e09],ebx
  41cd50:	inc    edi
  41cd51:	out    dx,eax
  41cd52:	gs mov bl,0x88
  41cd55:	mov    ds:0x98eee59e,eax
  41cd5a:	cvttps2pi mm0,xmm0
  41cd5d:	fistp  QWORD PTR [ebx+0x24]
  41cd60:	dec    edi
  41cd61:	ja     0x41cda0
  41cd63:	xor    esi,0x2e
  41cd66:	dec    esi
  41cd67:	cld    
  41cd68:	js     0x41cd63
  41cd6a:	fs hlt 
  41cd6c:	xlat   BYTE PTR ds:[ebx]
  41cd6d:	and    eax,0x31c4e892
  41cd72:	sahf   
  41cd73:	(bad)  
  41cd74:	mov    ds:0x457c451a,al
  41cd79:	pusha  
  41cd7a:	adc    WORD PTR [ecx+0x2e],sp
  41cd7e:	push   edi
  41cd7f:	loope  0x41cd17
  41cd81:	sub    eax,0x3da449c5
  41cd86:	rol    BYTE PTR [edi],1
  41cd88:	leave  
  41cd89:	nop
  41cd8a:	pmaxub mm5,mm7
  41cd8d:	ds jl  0x41cd6c
  41cd90:	mov    dh,0xef
  41cd92:	(bad)  
  41cd93:	jle    0x41cdfa
  41cd95:	mov    esi,0xe2e064e3
  41cd9a:	add    esp,esp
  41cd9c:	and    edx,DWORD PTR [edx+edi*8-0x5a]
  41cda0:	or     ah,BYTE PTR [edx+0x50cc24f1]
  41cda6:	push   edx
  41cda7:	rcl    DWORD PTR [esp+edi*8],0xd5
  41cdab:	xchg   DWORD PTR [eax-0x24],esi
  41cdae:	mov    WORD PTR [edx+0x4df191d3],gs
  41cdb4:	jp     0x41cdf7
  41cdb6:	add    DWORD PTR [edx],esp
  41cdb8:	loope  0x41cdc2
  41cdba:	rcl    DWORD PTR [edx+ecx*4+0x782f542f],0x86
  41cdc2:	push   ebp
  41cdc3:	repnz xor al,0x85
  41cdc6:	or     eax,0x35012f2
  41cdcb:	jg     0x41ce06
  41cdcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdce:	jg     0x41cdcb
  41cdd0:	cmp    dl,BYTE PTR [esi+0x37]
  41cdd3:	ins    DWORD PTR es:[edi],dx
  41cdd4:	inc    edx
  41cdd5:	popf   
  41cdd6:	add    eax,0xd8ed80eb
  41cddb:	jbe    0x41cd8f
  41cddd:	mov    bh,0xe0
  41cddf:	and    edx,DWORD PTR [ebp+0x48]
  41cde2:	scas   eax,DWORD PTR es:[edi]
  41cde3:	(bad)  
  41cde4:	fcomp  DWORD PTR [ebp-0x5d0a98cd]
  41cdea:	pusha  
  41cdeb:	shl    DWORD PTR [edi+ebp*8-0x2305451b],0x73
  41cdf3:	pop    ebx
  41cdf4:	mov    ecx,0xbf7862e2
  41cdf9:	ins    DWORD PTR es:[edi],dx
  41cdfa:	addr16 xchg ecx,eax
  41cdfc:	add    dl,BYTE PTR [eax+0x2b]
  41cdff:	sub    ebp,DWORD PTR ds:0x859d7066
  41ce05:	mov    dl,0xb2
  41ce07:	pop    eax
  41ce08:	cmp    BYTE PTR [eax*8-0x244a66c1],bl
  41ce0f:	sub    DWORD PTR [edx-0x3632070f],esi
  41ce15:	mov    es,WORD PTR [ebx+0x64667229]
  41ce1b:	ss fwait
  41ce1d:	popa   
  41ce1e:	jb     0x41ce71
  41ce20:	adc    DWORD PTR [edx+0x38fff0c4],0xffffffea
  41ce27:	mov    dh,0x6
  41ce29:	scas   eax,DWORD PTR es:[edi]
  41ce2a:	sti    
  41ce2b:	call   0x4bbd28fb
  41ce30:	or     BYTE PTR [edx-0x7b9aa66a],dl
  41ce36:	imul   edi,DWORD PTR [ebx-0x70],0xfffffffc
  41ce3a:	cmp    esi,ecx
  41ce3c:	or     al,0x53
  41ce3e:	in     eax,0x2d
  41ce40:	pop    edx
  41ce41:	ins    BYTE PTR es:[edi],dx
  41ce42:	jmp    0xf1b6:0x8d8747cf
  41ce49:	dec    esi
  41ce4a:	xor    eax,0x43ee93b9
  41ce4f:	scas   eax,DWORD PTR es:[edi]
  41ce50:	pusha  
  41ce51:	loope  0x41ceae
  41ce53:	mov    edx,0xc741a708
  41ce58:	sub    eax,0xf6e6f92
  41ce5d:	popf   
  41ce5e:	pop    esp
  41ce5f:	rcr    BYTE PTR [eax-0x20],0x92
  41ce63:	xchg   ebx,eax
  41ce64:	jecxz  0x41cdef
  41ce66:	sub    eax,0xa913cd82
  41ce6b:	dec    ebp
  41ce6c:	rcl    BYTE PTR [ebx],0x40
  41ce6f:	daa    
  41ce70:	xor    BYTE PTR [ebx],al
  41ce72:	popa   
  41ce73:	int3   
  41ce74:	jmp    DWORD PTR [ebp+0x25]
  41ce77:	push   edx
  41ce78:	dec    ecx
  41ce79:	lods   eax,DWORD PTR ds:[esi]
  41ce7a:	(bad)  
  41ce7b:	pop    ss
  41ce7c:	inc    eax
  41ce7d:	jmp    0x41ce83
  41ce7f:	into   
  41ce80:	jbe    0x41ce56
  41ce82:	or     DWORD PTR [eax+edx*8+0x15],edx
  41ce86:	add    DWORD PTR [ebp-0x31],edi
  41ce89:	adc    eax,0xe97f93e3
  41ce8e:	test   eax,0xd1005517
  41ce93:	out    0xaa,eax
  41ce95:	push   ebx
  41ce96:	push   0xb
  41ce98:	(bad)  
  41ce99:	(bad)  
  41ce9a:	push   esp
  41ce9b:	sahf   
  41ce9c:	dec    esp
  41ce9d:	pop    ebp
  41ce9e:	dec    ebx
  41ce9f:	js     0x41ceec
  41cea1:	xchg   BYTE PTR [edi+0x13cddc31],bh
  41cea7:	cmc    
  41cea8:	dec    ebx
  41cea9:	mov    eax,ds:0x3ff76720
  41ceae:	push   0xffffffcf
  41ceb0:	not    BYTE PTR [esi-0x3d937c37]
  41ceb6:	arpl   WORD PTR [esi-0x7f],si
  41ceb9:	ret    
  41ceba:	adc    dl,BYTE PTR [ecx+0x37078ae]
  41cec0:	inc    ecx
  41cec1:	je     0x41ceaa
  41cec3:	int    0x4d
  41cec5:	mov    bl,0xa5
  41cec7:	fbld   TBYTE PTR [edx]
  41cec9:	xchg   edx,eax
  41ceca:	xchg   edx,eax
  41cecb:	push   0x7a777b04
  41ced0:	xchg   ecx,eax
  41ced1:	dec    edx
  41ced2:	or     BYTE PTR [ebp-0x2f28964],0x40
  41ced9:	add    ah,dh
  41cedb:	rol    DWORD PTR [edi+esi*8],cl
  41cede:	xchg   BYTE PTR [edx+0x59],al
  41cee1:	mov    ebx,DWORD PTR [ebx]
  41cee3:	ss cdq 
  41cee5:	cmp    al,cl
  41cee7:	xchg   ecx,eax
  41cee8:	adc    BYTE PTR [ebp+0x2f],al
  41ceeb:	imul   eax,DWORD PTR [eax],0x3f
  41ceee:	data16 daa 
  41cef0:	ret    
  41cef1:	sbb    BYTE PTR [edx-0x4c139c03],cl
  41cef7:	add    eax,0xb2f5029b
  41cefc:	sbb    BYTE PTR [esi-0x65],0xa5
  41cf00:	adc    eax,0xd2fe1e0
  41cf05:	xchg   bl,dl
  41cf07:	sub    DWORD PTR ds:0xe50eab40,eax
  41cf0d:	mov    esi,0xa4ac5ddc
  41cf12:	mov    ah,0x22
  41cf14:	xor    ebx,DWORD PTR [ebx+eax*8-0x2a76a813]
  41cf1b:	test   eax,0xa89e7943
  41cf20:	call   0xc886f969
  41cf25:	repz jno 0x41cf56
  41cf28:	jge    0x41cf90
  41cf2a:	jp     0x41cecb
  41cf2c:	dec    ebx
  41cf2d:	dec    edx
  41cf2e:	inc    ecx
  41cf2f:	adc    eax,0x620a2de1
  41cf34:	(bad)  
  41cf35:	outs   dx,DWORD PTR ds:[esi]
  41cf36:	shl    DWORD PTR [edx],cl
  41cf38:	lods   al,BYTE PTR ds:[esi]
  41cf39:	xchg   ebp,eax
  41cf3a:	cdq    
  41cf3b:	dec    edx
  41cf3c:	add    al,0x9c
  41cf3e:	or     BYTE PTR ds:0x43635514,dl
  41cf44:	and    BYTE PTR [esi+edi*2-0x1967badc],0x1b
  41cf4c:	xchg   DWORD PTR [esi+0x57c2e661],ecx
  41cf52:	pop    es
  41cf53:	pop    es
  41cf54:	lahf   
  41cf55:	(bad)  
  41cf56:	retf   0xf7bc
  41cf59:	sub    BYTE PTR [eax-0x54cb4ef7],cl
  41cf5f:	mov    al,ds:0xb2d2322d
  41cf64:	pop    ss
  41cf65:	jp     0x41cf6c
  41cf67:	repz adc bh,BYTE PTR [edx-0xd40e7c8]
  41cf6e:	leave  
  41cf6f:	mov    ds:0xd11eafdb,eax
  41cf74:	and    BYTE PTR [edx],bl
  41cf76:	loopne 0x41cf6b
  41cf78:	es in  al,0xdb
  41cf7b:	iret   
  41cf7c:	je     0x41cf13
  41cf7e:	dec    ebx
  41cf7f:	inc    bp
  41cf81:	enter  0xa77,0xb6
  41cf85:	adc    eax,0x1acdaad7
  41cf8a:	push   cs
  41cf8b:	pop    ds
  41cf8c:	mov    ebp,DWORD PTR [ebx]
  41cf8e:	daa    
  41cf8f:	mov    ds:0xc0e2b71b,al
  41cf94:	mov    edi,0x572c6b89
  41cf99:	lods   al,BYTE PTR ds:[esi]
  41cf9a:	inc    ebp
  41cf9b:	sub    ebx,edx
  41cf9d:	fsubr  st(4),st
  41cf9f:	aam    0x47
  41cfa1:	pop    eax
  41cfa2:	xchg   ebp,eax
  41cfa3:	jle    0x41d018
  41cfa5:	fucomip st,st(2)
  41cfa7:	in     al,0x5
  41cfa9:	xchg   edx,eax
  41cfaa:	sub    al,0x3
  41cfac:	ja     0x41cf50
  41cfae:	xor    BYTE PTR [esi+esi*8+0x48436782],cl
  41cfb5:	cmp    cl,ch
  41cfb7:	sbb    bl,BYTE PTR [esi+ebx*8]
  41cfba:	xchg   ebx,eax
  41cfbb:	mov    ds:0x99321f1a,al
  41cfc0:	mov    ds:0xa8103be6,al
  41cfc5:	in     al,0x9e
  41cfc7:	(bad)  
  41cfc8:	(bad)  
  41cfc9:	test   eax,0x826ef2f3
  41cfce:	xor    bh,BYTE PTR [ebx]
  41cfd0:	es jo  0x41cf80
  41cfd3:	pusha  
  41cfd4:	xchg   ebp,eax
  41cfd5:	inc    esi
  41cfd6:	adc    esp,ecx
  41cfd8:	mov    ch,0x67
  41cfda:	(bad)  [edx]
  41cfdc:	mov    cs,WORD PTR [edi-0x69fba5d6]
  41cfe2:	pop    ebp
  41cfe3:	and    al,0x50
  41cfe5:	scas   al,BYTE PTR es:[edi]
  41cfe6:	stos   BYTE PTR es:[edi],al
  41cfe7:	pop    eax
  41cfe8:	inc    edx
  41cfe9:	mov    ebx,0xd4544c3d
  41cfee:	(bad)  [ecx+0x30]
  41cff1:	hlt    
  41cff2:	sub    ah,bh
  41cff4:	adc    cl,BYTE PTR [eax+0x42]
  41cff7:	xchg   edx,eax
  41cff8:	js     0x41d03c
  41cffa:	not    DWORD PTR [esi-0x2c]
  41cffd:	sti    
  41cffe:	push   ebp
  41cfff:	pop    edx
  41d000:	and    dl,BYTE PTR [esi+0x2a523aa4]
  41d006:	dec    ebx
  41d007:	mov    ch,0x88
  41d009:	xchg   edi,eax
  41d00a:	mov    ch,0x6e
  41d00c:	xchg   bl,cl
  41d00e:	dec    ebx
  41d00f:	jo     0x41cfe6
  41d011:	hlt    
  41d012:	sub    al,0x4c
  41d014:	mov    ch,0xfb
  41d016:	jnp    0x41cfd4
  41d018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d019:	and    eax,0xec4eb609
  41d01e:	mov    eax,0x86d94aff
  41d023:	xor    al,0x83
  41d025:	push   ecx
  41d026:	sub    DWORD PTR es:[ebx-0xd27fdf8],esp
  41d02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d02e:	add    eax,0x1428c001
  41d033:	or     edi,ebx
  41d035:	aas    
  41d036:	loopne 0x41d034
  41d038:	add    BYTE PTR [edi+edx*8+0x3948cd01],cl
  41d03f:	leave  
  41d040:	lea    esi,[ebp+edx*2+0x73]
  41d044:	cs nop
  41d046:	sub    cl,BYTE PTR [edi]
  41d048:	ds jmp 0x5d4f:0x312f2ffb
  41d050:	mov    cl,0xf8
  41d052:	aad    0xd6
  41d054:	inc    ebp
  41d055:	adc    bl,BYTE PTR [esi]
  41d057:	dec    ecx
  41d058:	fidiv  WORD PTR [eax-0x492e94ed]
  41d05e:	int    0x7d
  41d060:	test   eax,0xe41efea1
  41d065:	mov    ebp,0x71e1f73d
  41d06a:	imul   esp,DWORD PTR [eax],0x99e932da
  41d070:	mov    edx,0x962919ff
  41d075:	inc    esp
  41d076:	test   ax,0xdc07
  41d07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d07b:	cmc    
  41d07c:	es das 
  41d07e:	inc    eax
  41d07f:	hlt    
  41d080:	gs xor eax,0x802df4bf
  41d086:	(bad)  [edi+0x49ce44a]
  41d08c:	jp     0x41d035
  41d08e:	out    0x20,al
  41d090:	pop    edx
  41d091:	pusha  
  41d092:	mov    ebp,0x9cc41a7d
  41d097:	retf   
  41d098:	or     al,0x43
  41d09a:	retf   
  41d09b:	cwde   
  41d09c:	pop    ss
  41d09d:	fxch   st(4)
  41d09f:	mov    bh,ah
  41d0a1:	out    0xaa,al
  41d0a3:	mov    DWORD PTR [ebx-0x75],ebx
  41d0a6:	cmp    cl,ch
  41d0a8:	test   BYTE PTR [edx-0x5a],al
  41d0ab:	(bad)  
  41d0ad:	cmp    BYTE PTR [eax+0x62],dh
  41d0b0:	repz lahf 
  41d0b2:	nop
  41d0b3:	jl     0x41d08c
  41d0b5:	sub    DWORD PTR [esi],esp
  41d0b7:	xchg   ecx,eax
  41d0b8:	test   BYTE PTR [edx+0xb],cl
  41d0bb:	xor    edi,DWORD PTR [edi-0x631d43a7]
  41d0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0c2:	adc    al,0x1d
  41d0c4:	pushf  
  41d0c5:	lds    ebp,FWORD PTR [eax]
  41d0c7:	leave  
  41d0c8:	(bad)  
  41d0c9:	push   edi
  41d0ca:	shl    DWORD PTR [ecx+0x3ac6dd48],cl
  41d0d0:	popf   
  41d0d1:	enter  0x4635,0x9e
  41d0d5:	mov    ebp,0xbd1b5380
  41d0da:	test   eax,0x20ebd7bc
  41d0df:	test   BYTE PTR [esi-0x35],ch
  41d0e2:	xor    BYTE PTR [esi-0x4f7a56d8],bh
  41d0e8:	mov    eax,ds:0xc088afc8
  41d0ed:	in     eax,dx
  41d0ee:	mov    eax,0xa2a40ced
  41d0f3:	adc    dl,bl
  41d0f5:	adc    ecx,esi
  41d0f7:	mov    ?,WORD PTR [edx+0x1c9a4ba1]
  41d0fd:	pop    ebp
  41d0fe:	or     eax,0x78adc94a
  41d103:	and    DWORD PTR [edx+eiz*4],eax
  41d106:	ins    BYTE PTR es:[edi],dx
  41d107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d108:	mov    dh,0x5d
  41d10a:	pop    esp
  41d10b:	mov    bh,0x92
  41d10d:	xchg   ebx,eax
  41d10e:	enter  0xf887,0x6
  41d112:	sub    bl,al
  41d114:	push   edx
  41d115:	mov    ebx,0xb6560557
  41d11a:	out    dx,eax
  41d11b:	mov    BYTE PTR [esi-0x52],dh
  41d11e:	pop    ebx
  41d11f:	pop    DWORD PTR [edi-0xc8f61eb]
  41d125:	aam    0xe7
  41d127:	sub    al,BYTE PTR [ebx+0x5d04be88]
  41d12d:	pop    eax
  41d12e:	dec    edx
  41d12f:	adc    BYTE PTR [edi-0x65ca30f8],bh
  41d135:	push   cs
  41d136:	push   eax
  41d137:	cmp    DWORD PTR [ecx-0x63],edx
  41d13a:	xor    edi,DWORD PTR [edi+0x701e9c2d]
  41d140:	call   0x4b34bcb0
  41d145:	test   BYTE PTR [edi],bh
  41d147:	add    BYTE PTR [ebx-0x71],0x94
  41d14b:	or     cl,dh
  41d14d:	jl     0x41d1b1
  41d14f:	inc    ebx
  41d150:	lods   al,BYTE PTR ds:[esi]
  41d151:	fstp   DWORD PTR [esi+0x15]
  41d154:	outs   dx,DWORD PTR ds:[esi]
  41d155:	xchg   ebx,eax
  41d156:	xor    ebp,DWORD PTR [ecx+eiz*1-0x7a]
  41d15a:	and    bh,BYTE PTR [eax]
  41d15c:	repz or eax,0x56c0271c
  41d162:	add    ah,BYTE PTR [esi+edx*2-0x1a947cde]
  41d169:	mov    al,0xa8
  41d16b:	xchg   BYTE PTR [ebp+0x71e1f186],ah
  41d171:	in     eax,dx
  41d172:	and    al,0x4d
  41d174:	les    ebx,FWORD PTR [edx]
  41d176:	outs   dx,DWORD PTR ds:[esi]
  41d177:	pop    es
  41d178:	leave  
  41d179:	into   
  41d17a:	(bad)  
  41d17b:	ret    0x2908
  41d17e:	sub    bl,al
  41d180:	out    dx,eax
  41d181:	jns    0x41d15f
  41d183:	pop    edx
  41d184:	ds scas al,BYTE PTR es:[edi]
  41d186:	and    DWORD PTR [ebx+0x91e41c5],0xffffffbb
  41d18d:	imul   esi,DWORD PTR [ecx+0x8],0xc1e71d92
  41d194:	jg     0x41d1b2
  41d196:	cwde   
  41d197:	jb     0x41d215
  41d199:	sbb    DWORD PTR [eax+0x40],esi
  41d19c:	out    dx,al
  41d19d:	push   edx
  41d19e:	or     ch,ah
  41d1a0:	cmc    
  41d1a1:	dec    edx
  41d1a2:	lea    ebp,[ebp+0x466964be]
  41d1a8:	pop    esi
  41d1a9:	jmp    0xf75:0xb8704257
  41d1b0:	xchg   esi,eax
  41d1b1:	xchg   ecx,eax
  41d1b2:	cwde   
  41d1b3:	xor    ecx,DWORD PTR [eax+edx*8-0x42bf4a60]
  41d1ba:	jns    0x41d22c
  41d1bc:	test   DWORD PTR [edx+0x6f],edx
  41d1bf:	scas   eax,DWORD PTR es:[edi]
  41d1c0:	rcr    BYTE PTR [esi],0x3f
  41d1c3:	push   edx
  41d1c4:	xor    ecx,DWORD PTR [eax]
  41d1c6:	ins    BYTE PTR es:[edi],dx
  41d1c7:	lds    eax,FWORD PTR [eax+0x59]
  41d1ca:	rol    BYTE PTR [edx],0x1b
  41d1cd:	jg     0x41d182
  41d1cf:	adc    esp,DWORD PTR [eax+0x72]
  41d1d2:	ja     0x41d164
  41d1d4:	xchg   ebp,eax
  41d1d5:	jbe    0x41d178
  41d1d7:	inc    ebp
  41d1d8:	sti    
  41d1d9:	loope  0x41d1f4
  41d1db:	fiadd  WORD PTR [edx-0x26]
  41d1de:	ins    BYTE PTR es:[edi],dx
  41d1df:	addr16 retf 
  41d1e1:	daa    
  41d1e2:	daa    
  41d1e3:	cmp    BYTE PTR [edx+0x77108fd8],ah
  41d1e9:	repz fs jne 0x41d21d
  41d1ed:	hlt    
  41d1ee:	and    DWORD PTR [edi-0x4876b34c],edi
  41d1f4:	mov    WORD PTR [esi-0x36],?
  41d1f7:	cwde   
  41d1f8:	sub    dh,BYTE PTR [ebp+eiz*8+0x11]
  41d1fc:	sub    edi,DWORD PTR [edx]
  41d1fe:	mov    ?,ebx
  41d200:	inc    edi
  41d201:	ss ret 0x4eb3
  41d205:	jb     0x41d1c8
  41d207:	ficomp DWORD PTR [edx+0x73eae47f]
  41d20d:	fcmovnb st,st(2)
  41d20f:	xchg   esi,eax
  41d210:	jae    0x41d26c
  41d212:	mov    DWORD PTR [ebp+ebx*2-0x35],ecx
  41d216:	add    al,0x39
  41d218:	jns    0x41d24e
  41d21a:	add    dh,dh
  41d21c:	lahf   
  41d21d:	xchg   edi,eax
  41d21e:	push   ds
  41d21f:	jecxz  0x41d227
  41d221:	outs   dx,DWORD PTR ds:[esi]
  41d222:	cdq    
  41d223:	leave  
  41d224:	imul   edx,DWORD PTR [edx],0xffffff95
  41d227:	dec    ebx
  41d228:	pop    edi
  41d229:	adc    bl,BYTE PTR [eax+0xc851b17]
  41d22f:	sub    eax,0x101e766f
  41d234:	hlt    
  41d235:	and    al,BYTE PTR [edi+0x175c8902]
  41d23b:	jne    0x41d22a
  41d23d:	push   cs
  41d23e:	jne    0x41d1cc
  41d240:	mov    dl,0x54
  41d242:	test   DWORD PTR [ebp+0x35a81d70],eax
  41d248:	push   ds
  41d249:	loope  0x41d1f5
  41d24b:	mov    ds:0x1369b92c,al
  41d250:	mov    eax,ds:0x7ceac09f
  41d255:	pop    edx
  41d256:	adc    DWORD PTR [edx],esi
  41d258:	ja     0x41d205
  41d25a:	leave  
  41d25b:	cmp    al,BYTE PTR [ebp-0x6203f08e]
  41d261:	pop    ss
  41d262:	mov    ebp,0x7abd4fd2
  41d267:	iret   
  41d268:	or     eax,0x27da3dc5
  41d26d:	mov    ah,0xd3
  41d26f:	lea    edx,[edi+0x71]
  41d272:	xor    bh,bh
  41d274:	jbe    0x41d1fa
  41d276:	lea    ebx,[ebp+0x73]
  41d279:	test   DWORD PTR [edi],ecx
  41d27b:	dec    ecx
  41d27c:	xchg   esi,eax
  41d27d:	jl     0x41d2e3
  41d27f:	scas   eax,DWORD PTR es:[edi]
  41d280:	mov    esi,0x8f148ae4
  41d285:	icebp  
  41d286:	aas    
  41d287:	dec    edi
  41d288:	scas   al,BYTE PTR es:[edi]
  41d289:	and    dh,BYTE PTR [edx-0x49940ec5]
  41d28f:	push   ebp
  41d290:	pop    ecx
  41d291:	xchg   esi,eax
  41d292:	xor    cl,BYTE PTR [edx+0x40]
  41d295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d296:	lds    ebx,FWORD PTR [ebp-0x5c0f9b94]
  41d29c:	mov    ds:0x15d98662,eax
  41d2a1:	mov    esp,0xe883c103
  41d2a6:	dec    edx
  41d2a7:	xor    al,BYTE PTR ds:0xb95e25e9
  41d2ad:	call   0x944e:0x4d6fac0b
  41d2b4:	jno    0x41d317
  41d2b6:	push   ebp
  41d2b7:	cli    
  41d2b8:	sbb    esp,edi
  41d2ba:	dec    esp
  41d2bb:	push   ebp
  41d2bc:	and    DWORD PTR [ecx+0x4c],0x99d55f74
  41d2c3:	mov    edx,0xb4c06bc2
  41d2c8:	and    dl,BYTE PTR [ecx+0x20]
  41d2cb:	icebp  
  41d2cc:	adc    BYTE PTR [ebx+0x17],ch
  41d2cf:	dec    edx
  41d2d0:	repnz xor eax,0x9f0f2ae2
  41d2d6:	leave  
  41d2d7:	push   ss
  41d2d8:	adc    edi,eax
  41d2da:	push   ebp
  41d2db:	mov    bl,0x6
  41d2dd:	jl     0x41d2d9
  41d2df:	rol    BYTE PTR gs:[eax-0x3904b61c],1
  41d2e6:	imul   ebx,DWORD PTR [ecx+0x73],0x60
  41d2ea:	shl    DWORD PTR [esi-0xef08a66],0x81
  41d2f1:	popf   
  41d2f2:	xchg   edi,eax
  41d2f3:	xchg   edx,eax
  41d2f4:	lds    ebx,FWORD PTR [eax]
  41d2f6:	cmp    DWORD PTR [eax-0x5dff1721],edi
  41d2fc:	sbb    DWORD PTR ds:0x826db34,ecx
  41d302:	sub    dh,dl
  41d304:	out    dx,al
  41d305:	push   esi
  41d306:	adc    DWORD PTR [ecx+0x542bd41d],ebp
  41d30c:	rcr    BYTE PTR [eax+0x7c4ddb18],0x28
  41d313:	jle    0x41d2dd
  41d315:	jns    0x41d331
  41d317:	add    eax,0x86abcb68
  41d31c:	add    eax,0xbd64a7dd
  41d321:	pop    ecx
  41d322:	(bad)  
  41d323:	scas   al,BYTE PTR es:[edi]
  41d324:	push   esp
  41d325:	pop    esi
  41d326:	and    al,0xc2
  41d328:	dec    esp
  41d329:	sub    BYTE PTR [edi],ch
  41d32b:	pop    ebx
  41d32c:	test   bh,al
  41d32e:	fs rcr bl,1
  41d331:	and    DWORD PTR [eax+edx*8],ebp
  41d334:	enter  0x6780,0x26
  41d338:	fist   WORD PTR [edi+ebp*2+0xcc55535]
  41d33f:	adc    al,0x93
  41d341:	stos   DWORD PTR es:[edi],eax
  41d342:	fwait
  41d343:	(bad)  
  41d344:	adc    dh,BYTE PTR [esi+0x64]
  41d347:	popf   
  41d348:	pop    ds
  41d349:	fcmovu st,st(3)
  41d34b:	and    eax,esi
  41d34d:	push   0xffffffc6
  41d34f:	inc    DWORD PTR [eax-0x2e]
  41d352:	sub    BYTE PTR [ebp-0x5c],ah
  41d355:	mov    fs:0x1d55ca2b,al
  41d35b:	sbb    al,0x9
  41d35d:	shl    bl,1
  41d35f:	push   esp
  41d360:	fcomp  st(3)
  41d362:	and    ah,BYTE PTR [edi-0x79]
  41d365:	mov    bl,0xa7
  41d367:	jnp    0x41d3e6
  41d369:	enter  0xdfc8,0xe4
  41d36d:	cli    
  41d36e:	mov    BYTE PTR [ebx-0x445d893d],cl
  41d374:	sbb    ebp,DWORD PTR [edx-0x6ceb7309]
  41d37a:	test   DWORD PTR [edi],ecx
  41d37c:	sbb    eax,0xaf1628fa
  41d381:	xchg   esp,eax
  41d382:	xchg   ecx,eax
  41d383:	jl     0x41d3b3
  41d385:	imul   esp,DWORD PTR [edi+eax*4-0x2d240e1d],0x4f991ed9
  41d390:	test   DWORD PTR [edx+edi*4-0x680964ba],0x288cc387
  41d39b:	dec    ecx
  41d39c:	fsubr  DWORD PTR [ecx-0x5fcbe1db]
  41d3a2:	inc    edi
  41d3a3:	jae    0x41d3a9
  41d3a5:	mov    edi,ecx
  41d3a7:	je     0x41d345
  41d3a9:	test   BYTE PTR [edx],al
  41d3ab:	(bad)  
  41d3ad:	mov    esi,0x61a46b77
  41d3b3:	mov    ds:0x5e5ae5ec,al
  41d3b8:	stc    
  41d3b9:	pop    ebx
  41d3ba:	ss pop ebp
  41d3bc:	mov    ds:0xe2f72e5d,eax
  41d3c1:	add    BYTE PTR [edx+0x51],cl
  41d3c4:	rcr    DWORD PTR [edi-0x297e5173],cl
  41d3ca:	aas    
  41d3cb:	daa    
  41d3cc:	jp     0x41d3ed
  41d3ce:	xchg   ebp,eax
  41d3cf:	push   ecx
  41d3d0:	(bad)  
  41d3d3:	inc    edx
  41d3d4:	aam    0x56
  41d3d6:	pop    ds
  41d3d7:	or     eax,0xd9472497
  41d3dc:	xor    bl,ch
  41d3de:	(bad)
  41d3e2:	jne    0x41d3de
  41d3e4:	dec    edx
  41d3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e6:	je     0x41d464
  41d3e8:	mov    ds:0xb3a93335,eax
  41d3ed:	jbe    0x41d3a3
  41d3ef:	popa   
  41d3f0:	fidivr WORD PTR [ebp+0x14]
  41d3f3:	stc    
  41d3f4:	popf   
  41d3f5:	jmp    0x9099:0xdf864d81
  41d3fc:	xchg   ebp,eax
  41d3fd:	scas   eax,DWORD PTR es:[edi]
  41d3fe:	les    ecx,FWORD PTR [edx]
  41d400:	nop
  41d401:	popf   
  41d402:	push   edx
  41d403:	test   ebx,edi
  41d405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d406:	sti    
  41d407:	mov    ecx,0xefdf1e73
  41d40c:	mov    ch,0x34
  41d40e:	jecxz  0x41d45f
  41d410:	stos   DWORD PTR es:[edi],eax
  41d411:	mov    cl,0x30
  41d413:	fcmove st,st(7)
  41d415:	and    eax,0x8cde3831
  41d41a:	adc    al,bl
  41d41c:	cdq    
  41d41d:	enter  0x704c,0x99
  41d421:	in     al,dx
  41d422:	adc    bh,ch
  41d424:	inc    ebx
  41d425:	push   cs
  41d426:	and    al,0xc6
  41d428:	loopne 0x41d476
  41d42a:	sbb    cl,BYTE PTR [esi+edi*4]
  41d42d:	xchg   esi,eax
  41d42e:	pop    edi
  41d42f:	stos   BYTE PTR es:[edi],al
  41d430:	mov    eax,DWORD PTR [esi]
  41d432:	sub    eax,0x9ba276c3
  41d437:	jg     0x41d493
  41d439:	repz or BYTE PTR [ecx],cl
  41d43c:	adc    DWORD PTR [edi-0x3a32f63b],esi
  41d442:	dec    edx
  41d443:	icebp  
  41d444:	ds rcl ch,0x43
  41d448:	das    
  41d449:	dec    ebp
  41d44a:	loop   0x41d44f
  41d44c:	push   ds
  41d44d:	in     eax,0xb3
  41d44f:	inc    ebp
  41d450:	test   eax,0xd590a26
  41d455:	xor    al,0xab
  41d457:	pop    edx
  41d458:	lods   eax,DWORD PTR ds:[esi]
  41d459:	pop    ebp
  41d45a:	cmp    al,0xfb
  41d45c:	inc    edi
  41d45d:	mov    ds:0x2691b7d9,eax
  41d462:	in     al,0xdf
  41d464:	repz ret 
  41d466:	push   es
  41d467:	fdiv   DWORD PTR [ebx-0x3aedc1f5]
  41d46d:	repz fcom DWORD PTR [ebp-0x79]
  41d471:	push   esp
  41d472:	lods   eax,DWORD PTR ds:[esi]
  41d473:	inc    ebx
  41d474:	jae    0x41d496
  41d476:	unpcklps xmm0,XMMWORD PTR [ebx+0x57]
  41d47a:	push   0x7a3ed997
  41d47f:	or     edi,DWORD PTR [edi+0x7f74b7fa]
  41d485:	cmp    ah,BYTE PTR [edi]
  41d487:	pop    ebx
  41d488:	xchg   esi,eax
  41d489:	mov    dl,0x79
  41d48b:	inc    esp
  41d48c:	adc    al,0x25
  41d48e:	mov    al,0xee
  41d490:	retf   
  41d491:	xchg   ebp,eax
  41d492:	mov    DWORD PTR ss:[edx],0xcbd6705
  41d499:	imul   edi,DWORD PTR [ebx+0xe],0x947da63c
  41d4a0:	xchg   DWORD PTR [esi+0x51047688],esp
  41d4a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4a7:	push   es
  41d4a8:	aaa    
  41d4a9:	sahf   
  41d4aa:	add    al,0xcf
  41d4ac:	sub    DWORD PTR [ebx+eiz*8],esi
  41d4af:	loope  0x41d431
  41d4b1:	(bad)  
  41d4b2:	fdivrp st(6),st
  41d4b4:	je     0x41d4b1
  41d4b6:	fnstsw WORD PTR ds:0x4e68bc6
  41d4bc:	rol    BYTE PTR [esi-0x22],1
  41d4bf:	mov    ah,0xbf
  41d4c1:	rcr    BYTE PTR [edx],cl
  41d4c3:	inc    edx
  41d4c4:	add    dh,BYTE PTR [esi-0x20840a14]
  41d4ca:	jg     0x41d46b
  41d4cc:	mov    al,0xf5
  41d4ce:	cmp    edx,DWORD PTR [edi]
  41d4d0:	mov    dl,0x48
  41d4d2:	and    al,0x18
  41d4d4:	clc    
  41d4d5:	sub    DWORD PTR [eax-0x6fe707d8],ebx
  41d4db:	mov    eax,ds:0xa7568e51
  41d4e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4e1:	ret    0xa643
  41d4e4:	mov    al,ds:0x7f72f54f
  41d4e9:	jns    0x41d476
  41d4eb:	cwde   
  41d4ec:	jno    0x41d48c
  41d4ee:	retf   0x1eb5
  41d4f1:	outs   dx,DWORD PTR ds:[esi]
  41d4f2:	iret   
  41d4f3:	mov    ch,0xe6
  41d4f5:	sub    al,0x99
  41d4f7:	sar    BYTE PTR [esi+eax*8+0x73],cl
  41d4fb:	or     DWORD PTR es:[esi-0x1ec1b22d],ebx
  41d502:	xchg   esi,eax
  41d503:	sub    ch,BYTE PTR [esi]
  41d505:	pop    ss
  41d506:	not    DWORD PTR [bx-0x34]
  41d50a:	mov    bh,0x9f
  41d50c:	jno    0x41d50a
  41d50e:	add    BYTE PTR [esi],ah
  41d510:	addr16 je 0x41d4d2
  41d513:	arpl   WORD PTR [eax+0x46],bx
  41d516:	test   BYTE PTR [edx+0xaf894f1],bh
  41d51c:	test   DWORD PTR [edi+0x45a5440b],0x55905f01
  41d526:	jnp    0x41d54a
  41d528:	test   DWORD PTR [edi+0x79490bcf],esi
  41d52e:	push   ds
  41d52f:	xchg   ebp,eax
  41d530:	inc    esi
  41d531:	out    0x88,al
  41d533:	in     eax,0x39
  41d535:	or     eax,0xc65625b7
  41d53a:	out    0x89,eax
  41d53c:	add    cl,dh
  41d53e:	data16 addr16 adc al,0x50
  41d542:	sbb    ebx,0xffffff9e
  41d545:	dec    ecx
  41d546:	iret   
  41d547:	(bad)  
  41d548:	aas    
  41d549:	sahf   
  41d54a:	xchg   edx,eax
  41d54b:	aad    0x99
  41d54d:	mov    eax,0x61bbfc4f
  41d552:	xchg   DWORD PTR [ecx-0x7d],ebp
  41d555:	enter  0x1a19,0x47
  41d559:	push   edx
  41d55a:	push   es
  41d55b:	lea    edi,[ecx+0x33]
  41d55e:	fdivr  st(3),st
  41d560:	daa    
  41d561:	adc    edx,DWORD PTR [ecx+0x45f8f37e]
  41d567:	dec    edx
  41d568:	imul   eax,DWORD PTR [edi+ebp*4-0x70],0x5b64f3dc
  41d570:	mov    ds:0x5b84392e,eax
  41d575:	clc    
  41d576:	ja     0x41d501
  41d578:	data16 mov bl,0x22
  41d57b:	sub    BYTE PTR [edi+eiz*1],dh
  41d57e:	mov    dl,BYTE PTR ds:0x88426be
  41d584:	push   edi
  41d585:	cmp    bh,BYTE PTR [eax+0x32]
  41d588:	sbb    DWORD PTR [esi],eax
  41d58a:	add    BYTE PTR ds:0x92a38c13,ah
  41d590:	bound  ebp,QWORD PTR [edi-0x46]
  41d593:	fsubr  DWORD PTR [eax+0x549aa836]
  41d599:	pop    edi
  41d59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d59b:	gs mov ebx,0xdea11971
  41d5a1:	xor    esp,DWORD PTR [edi-0x28]
  41d5a4:	repnz (bad) 
  41d5a6:	pop    edx
  41d5a7:	inc    ecx
  41d5a8:	ret    0xf1a5
  41d5ab:	jns    0x41d592
  41d5ad:	and    DWORD PTR [esi],ecx
  41d5af:	shr    DWORD PTR es:[edx+ecx*4-0x614bd5f9],cl
  41d5b7:	test   al,0xf4
  41d5b9:	into   
  41d5ba:	in     al,dx
  41d5bb:	cwde   
  41d5bc:	jle    0x41d5e3
  41d5be:	xor    bh,BYTE PTR [ecx+0x76]
  41d5c1:	xor    eax,0xed52f1c0
  41d5c6:	repz inc edi
  41d5c8:	aam    0xa6
  41d5ca:	shl    DWORD PTR [edx+0x320b6a8e],cl
  41d5d0:	mov    esp,0xd28b50f2
  41d5d5:	adc    bl,BYTE PTR [edi-0x7fba9e78]
  41d5db:	cmp    edx,edi
  41d5dd:	imul   eax,DWORD PTR [edx+0x1e5a20d4],0x49
  41d5e4:	sbb    esp,esi
  41d5e6:	fsubr  DWORD PTR [ebx-0x35]
  41d5e9:	or     BYTE PTR [edi-0x3c01b1b6],al
  41d5ef:	bound  eax,QWORD PTR [ebp+0x586b542c]
  41d5f5:	mov    edx,0x4d894e5c
  41d5fa:	inc    ecx
  41d5fb:	mov    WORD PTR [ebx-0x7],ss
  41d5fe:	jns    0x41d654
  41d600:	fwait
  41d601:	daa    
  41d602:	push   ecx
  41d603:	xchg   BYTE PTR ss:[ebx],dl
  41d606:	dec    edx
  41d607:	dec    esi
  41d608:	mov    WORD PTR [esi],es
  41d60a:	jns    0x41d637
  41d60c:	fstp   TBYTE PTR [ebx+0x67222723]
  41d612:	std    
  41d613:	push   ecx
  41d614:	mov    ds:0xff6bfdcb,eax
  41d619:	rol    BYTE PTR [edi+0x0],1
  41d61c:	jnp    0x41d636
  41d61e:	push   ebx
  41d61f:	inc    ax
  41d621:	dec    ecx
  41d622:	leave  
  41d623:	pop    ebp
  41d624:	leave  
  41d625:	or     eax,0x1d70a2d
  41d62a:	xchg   esi,eax
  41d62b:	jmp    0x944c3df6
  41d630:	dec    esp
  41d631:	jns    0x41d5e3
  41d633:	mov    ebp,0x66e77e89
  41d638:	xchg   ecx,eax
  41d639:	inc    ebx
  41d63a:	cmp    eax,0x2dcaf88a
  41d63f:	nop
  41d640:	bound  edx,QWORD PTR [ecx]
  41d642:	xor    al,0xf0
  41d644:	adc    dh,bh
  41d646:	repnz test DWORD PTR [ecx+0x3fb86913],ebp
  41d64d:	sar    BYTE PTR [esi],1
  41d64f:	and    ecx,DWORD PTR [edi]
  41d651:	pop    edi
  41d652:	sbb    eax,0x8715880d
  41d657:	mov    BYTE PTR [esi+0x8],dh
  41d65a:	pushf  
  41d65b:	add    eax,0xcbc5dbee
  41d660:	test   DWORD PTR [edx+0x3e],edi
  41d663:	inc    ebp
  41d664:	jge    0x41d699
  41d666:	dec    eax
  41d667:	push   ebx
  41d668:	lock mov DWORD PTR [edi],esi
  41d66b:	dec    ebx
  41d66c:	(bad)  
  41d66d:	sub    ebp,esi
  41d66f:	push   esp
  41d670:	cmpps  xmm4,XMMWORD PTR [edi-0x6a3791ee],0xca
  41d678:	xor    BYTE PTR [ebp-0x60],cl
  41d67b:	cld    
  41d67c:	out    dx,eax
  41d67d:	mov    ebx,0x8336f2c
  41d682:	sbb    eax,0xb4e3b4cf
  41d687:	push   cs
  41d688:	clc    
  41d689:	jl     0x41d675
  41d68b:	mov    esi,0xbb9e3109
  41d690:	jle    0x41d672
  41d692:	addr16 push ecx
  41d694:	out    0xb1,al
  41d696:	in     eax,dx
  41d697:	dec    esp
  41d698:	pop    ebp
  41d699:	sbb    al,0xd9
  41d69b:	push   0x2
  41d69d:	jno    0x41d6c9
  41d69f:	enter  0xfb45,0x42
  41d6a3:	retf   
  41d6a4:	cmp    esp,eax
  41d6a6:	cmc    
  41d6a7:	sub    dh,cl
  41d6a9:	(bad)  
  41d6ab:	jge    0x41d6a8
  41d6ad:	pop    ebp
  41d6ae:	inc    eax
  41d6af:	inc    ebx
  41d6b0:	inc    ebx
  41d6b1:	add    eax,0xc2b71965
  41d6b6:	xor    BYTE PTR [ecx-0x2c],bh
  41d6b9:	adc    BYTE PTR [edi-0x7335060e],ch
  41d6bf:	sbb    eax,0x32621e65
  41d6c4:	fwait
  41d6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c6:	and    al,0x2e
  41d6c8:	mov    eax,0xf9ed48e5
  41d6cd:	push   cs
  41d6ce:	jecxz  0x41d65c
  41d6d0:	pop    es
  41d6d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d2:	clc    
  41d6d3:	xchg   esi,eax
  41d6d4:	xor    dl,BYTE PTR [eax-0x3a]
  41d6d7:	sti    
  41d6d8:	mov    ebx,0x82ab61da
  41d6dd:	retf   0x913e
  41d6e0:	mov    dh,0xf1
  41d6e2:	aaa    
  41d6e3:	jbe    0x41d707
  41d6e5:	mov    ds:0x44aec56,al
  41d6ea:	mov    DWORD PTR [ecx],ebx
  41d6ec:	sub    eax,0xea111cbe
  41d6f1:	fiadd  DWORD PTR [edx]
  41d6f3:	dec    edx
  41d6f4:	aas    
  41d6f5:	push   esi
  41d6f6:	pop    ebx
  41d6f7:	pop    si
  41d6f9:	or     BYTE PTR [ecx+0x6db6b9d5],0xf2
  41d700:	mov    ebx,0xaafc3157
  41d705:	jmp    0x41d6d0
  41d707:	mov    cl,0xe
  41d709:	aad    0x62
  41d70b:	sbb    al,0x3f
  41d70d:	jmp    0x91ea:0x9bcc1570
  41d714:	scas   al,BYTE PTR es:[edi]
  41d715:	pop    ebp
  41d716:	popf   
  41d717:	xor    eax,0x73312206
  41d71c:	into   
  41d71d:	lds    edx,FWORD PTR [ecx-0x36176d19]
  41d723:	nop
  41d724:	inc    ecx
  41d725:	cmp    ebp,DWORD PTR [edi-0x480ac422]
  41d72b:	pop    ss
  41d72c:	ss daa 
  41d72e:	jae    0x41d6d9
  41d730:	js     0x41d741
  41d732:	pusha  
  41d733:	out    dx,eax
  41d734:	int    0xa5
  41d736:	push   edi
  41d737:	int3   
  41d738:	pcmpgtb mm2,QWORD PTR [ecx-0x17]
  41d73c:	(bad)  
  41d73e:	mov    ebp,0x2cbecb84
  41d743:	outs   dx,DWORD PTR ds:[esi]
  41d744:	jmp    0xf304:0x9102890f
  41d74b:	cmp    dl,al
  41d74d:	inc    esi
  41d74e:	inc    esp
  41d74f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d750:	(bad)  
  41d752:	das    
  41d753:	mov    al,ds:0x54b2a0ad
  41d758:	or     eax,0x9968f2c0
  41d75d:	or     eax,0x1b7710a4
  41d762:	jl     0x41d752
  41d764:	and    eax,0xdee0b38
  41d769:	mov    edx,0xc51d35df
  41d76e:	xchg   ebp,eax
  41d76f:	cs fcmove st,st(6)
  41d772:	mov    ebx,0x75773034
  41d777:	pop    eax
  41d778:	cmp    ebp,eax
  41d77a:	and    DWORD PTR [ebx-0x332b833b],ebx
  41d780:	(bad)  
  41d781:	fcmovb st,st(6)
  41d783:	mov    eax,ds:0x41f2b89a
  41d788:	mov    BYTE PTR [edi+0x22045602],0x7a
  41d78f:	jge    0x41d7ee
  41d791:	mov    bh,0x8c
  41d793:	das    
  41d794:	ficom  WORD PTR [ebx-0x10838022]
  41d79a:	out    dx,al
  41d79b:	dec    edi
  41d79c:	push   es
  41d79d:	mov    ch,0x8f
  41d79f:	outs   dx,BYTE PTR ds:[esi]
  41d7a0:	jae    0x41d794
  41d7a2:	repnz mov cl,0xbd
  41d7a5:	cli    
  41d7a6:	adc    DWORD PTR [edi-0x6c],ebx
  41d7a9:	test   al,0xaa
  41d7ab:	sbb    al,0x77
  41d7ad:	push   esp
  41d7ae:	mov    eax,ds:0xeabe33e5
  41d7b3:	mov    bh,0x3b
  41d7b5:	test   BYTE PTR [edx-0x4f],bl
  41d7b8:	test   eax,0x469acc7f
  41d7bd:	inc    ebp
  41d7be:	push   ebp
  41d7bf:	xor    ebp,0xdf4cd14d
  41d7c5:	(bad)  
  41d7c6:	lock add al,0x4a
  41d7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7ca:	add    eax,0x4e196f96
  41d7cf:	sti    
  41d7d0:	adc    al,0x30
  41d7d2:	sar    esp,cl
  41d7d4:	jbe    0x41d84e
  41d7d6:	cmc    
  41d7d7:	clts   
  41d7d9:	inc    ebp
  41d7da:	sub    al,0x44
  41d7dc:	cmp    BYTE PTR [edi+0x6c2f8437],bh
  41d7e2:	aaa    
  41d7e3:	or     al,0xfc
  41d7e5:	scas   al,BYTE PTR es:[edi]
  41d7e6:	lods   al,BYTE PTR ds:[esi]
  41d7e7:	pop    ebx
  41d7e8:	jmp    0x12300a6a
  41d7ed:	je     0x41d76f
  41d7ef:	push   es
  41d7f0:	jnp    0x41d79d
  41d7f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7f3:	adc    eax,0xfe736dc8
  41d7f8:	hlt    
  41d7f9:	enter  0xb4d4,0x9e
  41d7fd:	test   DWORD PTR [eax+0x3b],eax
  41d800:	mov    WORD PTR [ebp-0x73],ss
  41d803:	or     al,0xf
  41d805:	and    al,0xb
  41d807:	test   eax,0xa9fc2079
  41d80c:	sbb    al,ah
  41d80e:	dec    eax
  41d80f:	aad    0x98
  41d811:	aas    
  41d812:	(bad)
  41d815:	xchg   BYTE PTR [ecx+0x72],dl
  41d818:	aaa    
  41d819:	mov    ds:0xc50d4a97,eax
  41d81e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d81f:	(bad)
  41d822:	popa   
  41d823:	jp     0x41d886
  41d825:	mov    edx,0xe78ed2fc
  41d82a:	pushf  
  41d82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82c:	push   edx
  41d82d:	ds mov edx,0x46a01e3d
  41d833:	pop    ebp
  41d834:	jmp    0x602b6444
  41d839:	push   ebp
  41d83a:	fisttp QWORD PTR [ebx]
  41d83c:	push   esi
  41d83d:	sbb    eax,0xc93e9928
  41d842:	scas   al,BYTE PTR es:[edi]
  41d843:	repz push 0x47d09bc2
  41d849:	arpl   WORD PTR [ebp-0x5b],ax
  41d84c:	(bad)  [ecx+0x40]
  41d84f:	sar    BYTE PTR [edi-0x65ca7d47],1
  41d855:	mov    ecx,0x5cf9f99f
  41d85a:	jecxz  0x41d85a
  41d85c:	sbb    eax,0xa7a3ead6
  41d861:	and    BYTE PTR [eax-0x4a],al
  41d864:	cmp    BYTE PTR [eax+ebp*1+0x4daa19c0],bl
  41d86b:	mov    bl,0x60
  41d86d:	mov    bl,0x79
  41d86f:	ins    DWORD PTR es:[edi],dx
  41d870:	mov    esi,0xecc3c6b5
  41d875:	xor    al,0xed
  41d877:	into   
  41d878:	das    
  41d879:	imul   esp,DWORD PTR [ecx],0x478db3a
  41d87f:	push   cs
  41d880:	stos   BYTE PTR es:[edi],al
  41d881:	fimul  DWORD PTR ss:[esi+ebp*8-0x10da82be]
  41d889:	imul   esp,DWORD PTR [ebp+ebx*2+0x2f737a9],0x21ae19a1
  41d894:	jns    0x41d914
  41d896:	push   esi
  41d897:	add    cl,0x1b
  41d89a:	push   es
  41d89b:	sbb    ch,BYTE PTR [ecx+0xb]
  41d89e:	aam    0xbc
  41d8a0:	pop    esi
  41d8a1:	inc    ebx
  41d8a2:	xchg   ebx,eax
  41d8a3:	and    eax,0xcf0c281d
  41d8a8:	aad    0xfd
  41d8aa:	addr16 push ebx
  41d8ac:	mov    bh,0x2c
  41d8ae:	rol    BYTE PTR [ebx],0xa1
  41d8b1:	(bad)
  41d8b5:	cmp    DWORD PTR [esi+ebp*1-0x3b],0x5
  41d8ba:	and    edx,ecx
  41d8bc:	aas    
  41d8bd:	sub    esp,DWORD PTR [ebx]
  41d8bf:	pop    esp
  41d8c0:	int3   
  41d8c1:	xchg   ebp,eax
  41d8c2:	bound  edx,QWORD PTR [ebp-0x44dc5121]
  41d8c8:	test   DWORD PTR [ebx-0x44],0x17161a2
  41d8cf:	inc    eax
  41d8d0:	mul    edx
  41d8d2:	pop    esi
  41d8d3:	jmp    0x41d8df
  41d8d5:	imul   ebx,DWORD PTR [ebx+edi*2],0x47d5550e
  41d8dc:	inc    edi
  41d8dd:	ins    BYTE PTR es:[edi],dx
  41d8de:	rcr    BYTE PTR [esp+ebx*1-0x4a4eed3c],0x6f
  41d8e6:	(bad)  
  41d8e7:	mov    al,0x6f
  41d8e9:	popf   
  41d8ea:	test   eax,0xda3283ed
  41d8ef:	sub    cl,dh
  41d8f1:	cmp    al,0xae
  41d8f3:	rcl    DWORD PTR [edi-0x287299af],0x4d
  41d8fa:	(bad)  
  41d8fb:	aad    0x6b
  41d8fd:	inc    edx
  41d8fe:	out    0x95,eax
  41d900:	and    BYTE PTR [edi-0x55],bh
  41d903:	pop    ebx
  41d904:	pushf  
  41d905:	and    al,0x1a
  41d907:	jnp    0x41d8c8
  41d909:	repz sub eax,0x2bff53b6
  41d90f:	mov    cl,0xd7
  41d911:	push   0x643bac3c
  41d916:	test   eax,0x347313e4
  41d91b:	push   cs
  41d91c:	je     0x41d8d6
  41d91e:	ins    DWORD PTR es:[edi],dx
  41d91f:	cmp    esp,eax
  41d921:	pop    es
  41d922:	mov    esi,0x915b0a52
  41d927:	ret    0x580c
  41d92a:	paddb  mm7,QWORD PTR [edi]
  41d92d:	dec    BYTE PTR [ebx-0x63]
  41d930:	shl    cl,1
  41d932:	push   cs
  41d933:	or     ah,BYTE PTR [eax]
  41d935:	pop    es
  41d936:	outs   dx,BYTE PTR ds:[esi]
  41d937:	push   ds
  41d938:	fild   WORD PTR [edx+0x7138e3f1]
  41d93e:	neg    DWORD PTR [eax]
  41d940:	popa   
  41d941:	iret   
  41d942:	or     DWORD PTR [edx+0x1de0dec8],esi
  41d948:	(bad)  
  41d949:	(bad)  
  41d94a:	mov    ecx,0xe99324f0
  41d94f:	imul   edx,esi,0xe6fab01c
  41d955:	sub    dh,BYTE PTR [eax]
  41d957:	outs   dx,BYTE PTR ds:[esi]
  41d958:	stos   BYTE PTR es:[edi],al
  41d959:	pop    eax
  41d95a:	add    ch,BYTE PTR [ecx+0x28]
  41d95d:	sub    dl,0xe
  41d960:	mov    ah,0x38
  41d962:	repz xchg ebx,eax
  41d964:	ror    DWORD PTR [esi],1
  41d966:	or     DWORD PTR [edx+0x3b],ebp
  41d969:	mov    eax,ds:0x82335e1f
  41d96e:	push   ecx
  41d96f:	cmp    BYTE PTR [ecx+ebx*1+0x23],ch
  41d973:	arpl   WORD PTR [ecx-0x11],di
  41d976:	or     BYTE PTR [ecx+edi*8+0x5b],bl
  41d97a:	and    dh,BYTE PTR [ebx]
  41d97c:	mov    ebx,0xdf27150c
  41d981:	mov    edi,0x85a6c565
  41d986:	xor    edi,DWORD PTR [edx-0x641b3913]
  41d98c:	rol    DWORD PTR [ebx-0x7876d92],cl
  41d992:	push   ss
  41d993:	jnp    0x41da14
  41d995:	(bad)  
  41d996:	imul   edi,DWORD PTR [edi+ebp*2],0xffffffa5
  41d99a:	dec    esi
  41d99b:	mov    cl,0x5
  41d99d:	mov    ds:0xabfb941f,al
  41d9a2:	mov    bh,0x1d
  41d9a4:	sub    eax,0x3cf648a8
  41d9a9:	rcr    DWORD PTR [eax-0x7bfe5262],0x89
  41d9b0:	add    al,0x54
  41d9b2:	mov    ah,0xb
  41d9b4:	out    0x65,eax
  41d9b6:	aam    0xa7
  41d9b8:	mov    dh,0x11
  41d9ba:	inc    edi
  41d9bb:	stc    
  41d9bc:	js     0x41d9d5
  41d9be:	fdivr  QWORD PTR [esi]
  41d9c0:	ja     0x41d98c
  41d9c2:	outs   dx,BYTE PTR ds:[esi]
  41d9c3:	aam    0xd8
  41d9c5:	inc    edi
  41d9c6:	int3   
  41d9c7:	sbb    ebp,DWORD PTR [ebx-0x60]
  41d9ca:	sub    cl,BYTE PTR es:[esi]
  41d9cd:	int3   
  41d9ce:	stc    
  41d9cf:	push   esp
  41d9d0:	out    dx,eax
  41d9d1:	pushf  
  41d9d2:	icebp  
  41d9d3:	push   ds
  41d9d4:	pushf  
  41d9d5:	xchg   DWORD PTR [esi-0x5ad4dff0],esp
  41d9db:	mov    cl,0x6
  41d9dd:	and    al,BYTE PTR [ebp+0x35]
  41d9e0:	(bad)  
  41d9e1:	pop    edi
  41d9e2:	inc    ecx
  41d9e3:	mov    ecx,0x5a302414
  41d9e8:	add    ecx,DWORD PTR [esi]
  41d9ea:	data16 lods al,BYTE PTR ds:[esi]
  41d9ec:	mov    bl,0x1d
  41d9ee:	xor    al,0xf
  41d9f0:	jecxz  0x41d993
  41d9f2:	dec    esp
  41d9f3:	scas   eax,DWORD PTR es:[edi]
  41d9f4:	cli    
  41d9f5:	bound  esi,QWORD PTR [eax-0x41]
  41d9f8:	(bad)  
  41d9f9:	push   ebx
  41d9fa:	data16 jae 0x41da4a
  41d9fd:	mov    ch,BYTE PTR [edx-0x6f3cfb1]
  41da03:	add    BYTE PTR [edi-0x75],ah
  41da06:	pusha  
  41da07:	mov    DWORD PTR [ebx],eax
  41da09:	mov    ds,WORD PTR [eax+0x4e]
  41da0c:	sbb    eax,0xce67013d
  41da11:	xor    eax,0x5e119909
  41da16:	pop    es
  41da17:	mov    ebx,0x4b7b055f
  41da1c:	mov    al,0x52
  41da1e:	jp     0x41da79
  41da20:	inc    edx
  41da21:	add    eax,0x80d4f8af
  41da26:	push   ebx
  41da27:	aad    0x76
  41da29:	aas    
  41da2a:	mov    edi,0xf06672e9
  41da2f:	sti    
  41da30:	jo     0x41d9bd
  41da32:	xchg   ebx,eax
  41da33:	or     esp,0x58
  41da36:	lds    ebp,FWORD PTR [eax]
  41da38:	sub    al,bh
  41da3a:	xchg   BYTE PTR [edi],al
  41da3c:	ja     0x41d9ca
  41da3e:	fisttp WORD PTR [ecx]
  41da40:	mov    dl,0x2a
  41da42:	xor    dh,BYTE PTR [eax+ebp*2+0x3cd9ff49]
  41da49:	jnp    0x41d9ec
  41da4b:	(bad)  
  41da4c:	aam    0x3c
  41da4e:	(bad)
  41da52:	pop    esp
  41da53:	call   0x7c7a:0xe8f1622d
  41da5a:	in     al,dx
  41da5b:	push   eax
  41da5c:	jge    0x41da50
  41da5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da5f:	add    ebp,esp
  41da61:	pop    ebp
  41da62:	mov    fs,WORD PTR [eax]
  41da64:	jb     0x41da74
  41da66:	scas   al,BYTE PTR es:[edi]
  41da67:	(bad)  
  41da68:	je     0x41da54
  41da6a:	mov    dh,0xbc
  41da6c:	cmp    ch,dl
  41da6e:	rol    BYTE PTR [eax+0x73],cl
  41da71:	imul   esp,DWORD PTR [ebp+eax*1+0x7853dcba],0x4f
  41da79:	inc    ebx
  41da7a:	lea    ecx,[eax+0x58]
  41da7d:	stos   DWORD PTR es:[edi],eax
  41da7e:	addr16 or eax,0x2593471c
  41da84:	push   ss
  41da85:	cmc    
  41da86:	sub    DWORD PTR [edx-0x69],esp
  41da89:	push   esp
  41da8a:	(bad)  
  41da8b:	pop    ebx
  41da8c:	leave  
  41da8d:	les    esp,FWORD PTR [ebp-0x1317a38]
  41da93:	js     0x41da70
  41da95:	inc    ebp
  41da96:	cli    
  41da97:	adc    ebp,DWORD PTR [ebp-0x6e075882]
  41da9d:	iret   
  41da9e:	fndisi(8087 only) 
  41daa0:	jle    0x41dae6
  41daa2:	hlt    
  41daa3:	xchg   esi,eax
  41daa4:	mov    edi,0x8639ddd6
  41daa9:	xor    BYTE PTR [esp+ecx*2+0x7d4d0814],0xd5
  41dab1:	and    dl,bl
  41dab3:	test   eax,0xde759fa9
  41dab8:	bswap  ebp
  41daba:	in     eax,0x8e
  41dabc:	ins    DWORD PTR es:[edi],dx
  41dabd:	mov    ds:0x381444d4,al
  41dac2:	mov    edi,0xba68bddb
  41dac7:	retf   
  41dac8:	mov    ds:0x10cfde5c,al
  41dacd:	jecxz  0x41daea
  41dacf:	mov    DWORD PTR [edi*4-0x158bf298],eax
  41dad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dad7:	iret   
  41dad8:	repz repz inc edi
  41dadb:	lock (bad) 
  41dadd:	jnp    0x41dab3
  41dadf:	ficom  DWORD PTR [eax+edx*2+0x110d107e]
  41dae6:	icebp  
  41dae7:	sbb    BYTE PTR [esi+0x667bc629],bl
  41daed:	rcl    DWORD PTR [edi+eiz*4],1
  41daf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daf1:	sbb    dl,bl
  41daf3:	mov    ah,BYTE PTR [eax+0x25b1a313]
  41daf9:	js     0x41dae0
  41dafb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dafc:	mov    bl,0xc0
  41dafe:	push   eax
  41daff:	mov    esp,esi
  41db01:	xchg   edx,eax
  41db02:	fnstsw WORD PTR [ecx+0x2b]
  41db05:	pop    ebp
  41db06:	mov    ebp,0x832152da
  41db0b:	sub    ebp,0x52db69c7
  41db11:	std    
  41db12:	adc    BYTE PTR [edi-0x1b5581f3],dh
  41db18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db19:	mov    bl,0x94
  41db1b:	inc    ecx
  41db1c:	cdq    
  41db1d:	jge    0x41dab6
  41db1f:	cmp    al,0x9
  41db21:	repz xchg ebx,eax
  41db23:	lahf   
  41db24:	mov    ebp,0xc614804
  41db29:	dec    edi
  41db2a:	fcomp  DWORD PTR [eax]
  41db2c:	cmp    BYTE PTR [edx+0x5615a88],al
  41db32:	rol    ah,0x49
  41db35:	gs jp  0x41dafe
  41db38:	dec    edi
  41db39:	test   eax,0xc71f5590
  41db3e:	ins    BYTE PTR es:[edi],dx
  41db3f:	rcl    BYTE PTR [ebx+edx*1],1
  41db42:	pop    es
  41db43:	add    DWORD PTR [ebp+0x2],esi
  41db46:	pusha  
  41db47:	and    eax,0x3a0c2f4b
  41db4c:	add    bh,dh
  41db4e:	push   eax
  41db4f:	jae    0x41dba9
  41db51:	div    BYTE PTR [esi-0x43a85d9f]
  41db57:	mov    esi,DWORD PTR [eax]
  41db59:	(bad)  
  41db5a:	or     ecx,DWORD PTR [esi+edx*4-0x75]
  41db5e:	pop    ebx
  41db5f:	push   esi
  41db60:	in     al,0xae
  41db62:	sub    al,0x24
  41db64:	dec    ecx
  41db65:	push   ds
  41db66:	cwde   
  41db67:	mov    ah,0x38
  41db69:	fisub  DWORD PTR [edx-0x5]
  41db6c:	mov    edx,0xaa4dee09
  41db71:	jne    0x41dbee
  41db73:	xlat   BYTE PTR ds:[ebx]
  41db74:	or     BYTE PTR [edx+0x30e73f92],0xc2
  41db7b:	add    bh,BYTE PTR [ebp-0x41]
  41db7e:	xor    al,0x88
  41db80:	inc    ecx
  41db81:	jnp    0x41dbcf
  41db83:	pop    ds
  41db84:	popa   
  41db85:	sbb    ebp,eax
  41db87:	outs   dx,DWORD PTR ds:[esi]
  41db88:	mov    bh,0x25
  41db8a:	dec    ebx
  41db8b:	mov    ebx,0x2a0a2053
  41db90:	add    al,0x85
  41db92:	ja     0x41dbf6
  41db94:	mov    ch,0xf7
  41db96:	outs   dx,BYTE PTR ds:[esi]
  41db97:	loop   0x41dbe2
  41db99:	or     al,0xfc
  41db9b:	sbb    cl,BYTE PTR [edx]
  41db9d:	mov    edx,0x20c8368
  41dba2:	mov    BYTE PTR ds:0xf36b178,bl
  41dba8:	or     eax,0xcaa8c173
  41dbad:	push   0x601173ff
  41dbb2:	sbb    ebx,0x44
  41dbb5:	jp     0x41dbd9
  41dbb7:	push   cx
  41dbb9:	out    dx,al
  41dbba:	or     esp,DWORD PTR [edx+0x32]
  41dbbd:	xchg   edx,eax
  41dbbe:	ins    DWORD PTR es:[edi],dx
  41dbbf:	xor    cl,BYTE PTR [ecx-0x65]
  41dbc2:	or     al,0x93
  41dbc4:	aas    
  41dbc5:	push   cs
  41dbc6:	mov    WORD PTR [ecx+0x3c],?
  41dbc9:	pop    ss
  41dbca:	fistp  WORD PTR [ecx+0x6d44f3b7]
  41dbd0:	test   eax,0x86bab26f
  41dbd5:	push   esp
  41dbd6:	mov    edx,0x74b7686d
  41dbdb:	jp     0x41dc28
  41dbdd:	dec    esp
  41dbde:	dec    edi
  41dbdf:	mov    dh,BYTE PTR [esi+ecx*4]
  41dbe2:	(bad)  
  41dbe3:	adc    ch,BYTE PTR [ecx-0x61]
  41dbe6:	pop    ecx
  41dbe7:	and    BYTE PTR [ebx+0x4c],cl
  41dbea:	fdivr  QWORD PTR [ebx+ecx*4+0x6aad773d]
  41dbf1:	test   BYTE PTR [esi],0x3
  41dbf4:	enter  0x410d,0x87
  41dbf8:	cdq    
  41dbf9:	jnp    0x41dc4a
  41dbfb:	int3   
  41dbfc:	shl    BYTE PTR [edx+0x5eddf529],0x54
  41dc03:	sbb    DWORD PTR [ebx-0x64035f4],esp
  41dc09:	clc    
  41dc0a:	mov    DWORD PTR [esi+0x7bb97063],esp
  41dc10:	xchg   ebp,eax
  41dc11:	mov    edi,0x1de6ab75
  41dc16:	jno    0x41dbe5
  41dc18:	and    bl,ch
  41dc1a:	fisub  DWORD PTR [ebx-0x6dd596c8]
  41dc20:	cli    
  41dc21:	dec    ebp
  41dc22:	ds xchg bl,ch
  41dc25:	add    DWORD PTR [ecx-0x50],ecx
  41dc28:	mov    ds:0xa55eb2e8,al
  41dc2d:	das    
  41dc2e:	clc    
  41dc2f:	gs cmp eax,0x824e26bb
  41dc35:	dec    eax
  41dc36:	sub    DWORD PTR [esi],ebx
  41dc38:	sbb    DWORD PTR [ebx+0x5e],ebx
  41dc3b:	push   esi
  41dc3c:	sub    eax,0x7d1681f1
  41dc41:	scas   al,BYTE PTR es:[edi]
  41dc42:	(bad)  
  41dc43:	out    0xd8,eax
  41dc45:	push   edi
  41dc46:	jg     0x41dbcc
  41dc48:	gs jecxz 0x41dc06
  41dc4b:	jb     0x41dcbd
  41dc4d:	daa    
  41dc4e:	lods   eax,DWORD PTR ds:[esi]
  41dc4f:	lods   eax,DWORD PTR ds:[esi]
  41dc50:	mov    eax,0xf063d40c
  41dc55:	xor    eax,0x28dce219
  41dc5a:	pop    ebx
  41dc5b:	rol    al,0x2
  41dc5e:	dec    esp
  41dc5f:	pushf  
  41dc60:	fldcw  WORD PTR [eax]
  41dc62:	aaa    
  41dc63:	daa    
  41dc64:	mov    edx,0xc3680f97
  41dc69:	cmp    DWORD PTR [ecx-0x2334995d],ebp
  41dc6f:	or     ah,BYTE PTR [ebp+0x49]
  41dc72:	cmp    ch,BYTE PTR [ecx+eax*4+0x55]
  41dc76:	adc    ch,BYTE PTR [edi+0x13]
  41dc79:	and    al,0x36
  41dc7b:	hlt    
  41dc7c:	lods   eax,DWORD PTR ds:[esi]
  41dc7d:	push   cs
  41dc7e:	push   es
  41dc7f:	clc    
  41dc80:	inc    ebp
  41dc81:	loop   0x41dccf
  41dc83:	adc    edx,ebp
  41dc85:	imul   eax,DWORD PTR [eax+ebx*8],0x6c
  41dc89:	sbb    DWORD PTR [edi],edi
  41dc8b:	jp     0x41dc42
  41dc8d:	sub    DWORD PTR [ebx+0x3be1047],eax
  41dc93:	jno    0x41dc22
  41dc95:	xchg   esp,eax
  41dc96:	xor    DWORD PTR [edx],eax
  41dc98:	fisub  DWORD PTR [ecx+ecx*1+0x39]
  41dc9c:	mov    ebx,0x62602698
  41dca1:	push   0xf6411d7
  41dca6:	dec    edi
  41dca7:	fwait
  41dca8:	cld    
  41dca9:	jg     0x41dceb
  41dcab:	push   edx
  41dcac:	or     BYTE PTR [ebx+0x6a9cd693],ah
  41dcb2:	pop    ss
  41dcb3:	js     0x41dc78
  41dcb5:	(bad)  
  41dcb6:	fcom   st(4)
  41dcb8:	adc    BYTE PTR [ecx+esi*4],al
  41dcbb:	xchg   DWORD PTR [edi],ecx
  41dcbd:	aas    
  41dcbe:	inc    edx
  41dcbf:	ret    0xa7ea
  41dcc2:	dec    ebp
  41dcc3:	add    eax,0x8426409a
  41dcc8:	jmp    0xb5d6:0x13931762
  41dccf:	ins    DWORD PTR es:[di],dx
  41dcd1:	push   ecx
  41dcd2:	or     al,0x81
  41dcd4:	test   DWORD PTR [eiz*4+0x3adc6dd7],esp
  41dcdb:	ret    0x6ee0
  41dcde:	(bad)  
  41dcdf:	(bad)  
  41dce0:	and    esp,0xfab31e1f
  41dce6:	sbb    esi,DWORD PTR [edx+0x79]
  41dce9:	cmc    
  41dcea:	jnp    0x41dd5f
  41dcec:	push   0xe9f0ccc1
  41dcf1:	ja     0x41dcca
  41dcf3:	sbb    bh,BYTE PTR ds:0xa083e354
  41dcf9:	mov    cl,0xb5
  41dcfb:	in     al,0xd1
  41dcfd:	mov    eax,ebp
  41dcff:	scas   al,BYTE PTR es:[edi]
  41dd00:	mov    ch,0x61
  41dd02:	mov    dh,0xf2
  41dd04:	dec    ecx
  41dd05:	(bad)  
  41dd06:	xchg   ebp,eax
  41dd07:	push   ds
  41dd08:	scas   al,BYTE PTR es:[edi]
  41dd09:	popa   
  41dd0a:	add    dl,BYTE PTR [eax]
  41dd0c:	fisttp WORD PTR [edx-0x69]
  41dd0f:	add    eax,0xddf8e515
  41dd14:	or     BYTE PTR [ecx],ah
  41dd16:	rcl    DWORD PTR [ebx-0x3e],cl
  41dd19:	mov    ah,BYTE PTR [ebp-0x5eb0d054]
  41dd1f:	(bad)  
  41dd20:	scas   al,BYTE PTR es:[edi]
  41dd21:	mov    ebp,0x7a1c43ad
  41dd26:	mov    ebp,0x28c9ff86
  41dd2b:	xor    BYTE PTR [ebp-0x243d2a36],dh
  41dd31:	mov    edi,0xbc19344e
  41dd36:	test   ecx,ebx
  41dd38:	les    eax,FWORD PTR [ecx+esi*1-0xbb82653]
  41dd3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd40:	rcr    BYTE PTR [esi-0x75c0fa63],cl
  41dd46:	dec    ecx
  41dd47:	push   edx
  41dd48:	jbe    0x41dcda
  41dd4a:	or     DWORD PTR [edx+0x35],ebp
  41dd4d:	jne    0x41dd0d
  41dd4f:	adc    eax,0x3f6ccb70
  41dd54:	ds pop edx
  41dd56:	aad    0x6b
  41dd58:	mov    BYTE PTR [edx],dl
  41dd5a:	xchg   eax,esp
  41dd5c:	push   esi
  41dd5d:	push   0xffffff96
  41dd5f:	fcomp  QWORD PTR ds:[ebx+0xc40712d]
  41dd66:	into   
  41dd67:	test   dl,0x65
  41dd6a:	psrld  mm4,QWORD PTR [esi-0x5adf5de8]
  41dd71:	gs pop eax
  41dd73:	and    al,BYTE PTR [ebp-0x2]
  41dd76:	or     edi,edi
  41dd78:	push   es
  41dd79:	out    0xac,al
  41dd7b:	aam    0x56
  41dd7d:	xchg   BYTE PTR [edx+0x626aa79f],bh
  41dd83:	adc    ecx,DWORD PTR [ebp+0x79]
  41dd86:	fwait
  41dd87:	push   ebp
  41dd88:	out    0x55,eax
  41dd8a:	cli    
  41dd8b:	and    BYTE PTR [edx+0xd91f645],ah
  41dd91:	sub    eax,0x9b1f3f8
  41dd97:	js     0x41dd8f
  41dd99:	sbb    eax,0xc6770272
  41dd9e:	jo     0x41dddd
  41dda0:	lods   eax,DWORD PTR ds:[esi]
  41dda1:	je     0x41dd68
  41dda3:	mov    eax,DWORD PTR [edi+0x1fc019aa]
  41dda9:	aas    
  41ddaa:	dec    ecx
  41ddab:	dec    ecx
  41ddac:	(bad)  
  41ddad:	pop    edi
  41ddae:	ins    BYTE PTR es:[edi],dx
  41ddaf:	das    
  41ddb0:	xchg   ecx,eax
  41ddb1:	mov    es,WORD PTR [edi+edx*4]
  41ddb4:	adc    BYTE PTR [ebx-0x72177452],ah
  41ddba:	gs call 0x1e2d:0x8a743d8a
  41ddc2:	stos   DWORD PTR es:[edi],eax
  41ddc3:	jp     0x41ddfc
  41ddc5:	imul   esp,DWORD PTR [esi],0xf2932a8c
  41ddcb:	sbb    DWORD PTR [ebp+0x53],0xf8a148d0
  41ddd2:	add    eax,DWORD PTR [ecx+0x50]
  41ddd5:	loop   0x41de43
  41ddd7:	and    eax,0xee296ea
  41dddc:	js     0x41de12
  41ddde:	push   ds
  41dddf:	lds    edi,FWORD PTR [ebx-0x6]
  41dde2:	mov    ch,BYTE PTR [ebp-0xe]
  41dde5:	and    DWORD PTR [ebx-0x29],esi
  41dde8:	mov    edi,0x3a037309
  41dded:	outs   dx,BYTE PTR ds:[esi]
  41ddee:	sbb    edi,DWORD PTR [eax]
  41ddf0:	mov    ebx,0x67290454
  41ddf5:	inc    esp
  41ddf6:	or     bl,dl
  41ddf8:	setbe  BYTE PTR [ebx+0x36]
  41ddfc:	push   ds
  41ddfd:	retf   0x805d
  41de00:	ja     0x41ddb2
  41de02:	ds sahf 
  41de04:	xchg   ebx,eax
  41de05:	test   eax,0xb947a769
  41de0a:	fisttp DWORD PTR [ecx+0x311d786d]
  41de10:	xchg   ecx,eax
  41de11:	cmp    eax,0xbf223426
  41de16:	lds    ebx,FWORD PTR [edi+0x3d960e63]
  41de1c:	inc    ecx
  41de1d:	xchg   DWORD PTR [ebx+0x3d4fe106],ecx
  41de23:	call   0xd4385d69
  41de28:	sbb    eax,0x1751b7c6
  41de2d:	add    DWORD PTR [edi],ebx
  41de2f:	dec    ebx
  41de30:	pop    ds
  41de31:	ds repz cmp esp,esi
  41de35:	mov    eax,0x706b705b
  41de3a:	sub    BYTE PTR [ecx+edi*2-0x49],0xc7
  41de3f:	fisttp WORD PTR [esi*4+0x3e642dde]
  41de46:	out    dx,eax
  41de47:	rol    edx,0x40
  41de4a:	(bad)  
  41de4c:	loopne 0x41ddee
  41de4e:	push   esi
  41de4f:	pop    ds
  41de50:	adc    DWORD PTR [esi-0x23],edi
  41de53:	rcl    DWORD PTR [edi+0x43],1
  41de56:	je     0x41de4c
  41de58:	mov    al,BYTE PTR [ebp+0x5a]
  41de5b:	shl    dh,1
  41de5d:	std    
  41de5e:	sub    al,0x75
  41de60:	or     DWORD PTR [eax],ebx
  41de62:	mov    eax,ds:0x4c885649
  41de67:	std    
  41de68:	(bad)  
  41de69:	cmp    al,0xc
  41de6b:	push   ds
  41de6c:	test   al,0xe0
  41de6e:	(bad)  
  41de6f:	mov    esp,0xd6d0ca8c
  41de74:	hlt    
  41de75:	pusha  
  41de76:	dec    edx
  41de77:	icebp  
  41de78:	mov    ah,0xb6
  41de7a:	xor    BYTE PTR ds:[eax-0x5c],ah
  41de7e:	aaa    
  41de7f:	fs (bad) 
  41de82:	in     al,dx
  41de83:	leave  
  41de84:	cli    
  41de85:	sti    
  41de86:	outs   dx,DWORD PTR ds:[esi]
  41de87:	hlt    
  41de88:	ins    DWORD PTR es:[edi],dx
  41de89:	lds    ecx,FWORD PTR [ebx-0x523228b5]
  41de8f:	pop    edi
  41de90:	jge    0x41debc
  41de92:	retf   0x5d25
  41de95:	es cld 
  41de97:	jno    0x41de86
  41de99:	mov    ds:0x8fb4218c,eax
  41de9e:	pop    ss
  41de9f:	les    esp,FWORD PTR [edi-0x58]
  41dea2:	ja     0x41debc
  41dea4:	jg     0x41deca
  41dea6:	in     al,0x75
  41dea8:	pop    edi
  41dea9:	lea    edi,[ebx+0x41]
  41deac:	shl    bh,cl
  41deae:	fmul   QWORD PTR [esi-0x6b]
  41deb1:	push   ds
  41deb2:	push   edx
  41deb3:	lods   eax,DWORD PTR ds:[esi]
  41deb4:	sub    DWORD PTR [edx],ebx
  41deb6:	mov    dl,0xe2
  41deb8:	jae    0x41de6f
  41deba:	xchg   edx,eax
  41debb:	sar    DWORD PTR [esi],cl
  41debd:	sub    BYTE PTR [esi+0x25262510],bl
  41dec3:	jns    0x41df35
  41dec5:	lods   eax,DWORD PTR ds:[esi]
  41dec6:	pop    ecx
  41dec7:	xchg   esp,eax
  41dec8:	jo     0x41deec
  41deca:	jmp    0x41df19
  41decc:	cmp    eax,0x3e819f02
  41ded1:	xor    eax,0x9d23a078
  41ded6:	jno    0x41df43
  41ded8:	dec    ebx
  41ded9:	inc    ebp
  41deda:	gs ret 0xe910
  41dede:	js     0x41dec0
  41dee0:	lock std 
  41dee2:	test   eax,0x5cb5354
  41dee7:	out    0xef,al
  41dee9:	and    DWORD PTR [edi+0x7f],0x2d7dfa8a
  41def0:	imul   ebp,DWORD PTR [ebp-0x41],0x3b
  41def4:	mov    ch,0x3f
  41def6:	inc    ebx
  41def7:	mov    WORD PTR [edi],gs
  41def9:	into   
  41defa:	jmp    FWORD PTR [edi+0x57]
  41defd:	jne    0x41df7b
  41deff:	das    
  41df00:	xchg   ecx,eax
  41df01:	or     dh,BYTE PTR [edi+0x47]
  41df04:	and    eax,DWORD PTR [ebp*4-0x3c8bd292]
  41df0b:	shr    DWORD PTR [ebx+ebx*1],1
  41df0e:	pop    ebx
  41df0f:	adc    BYTE PTR [esi-0x4e],0x30
  41df13:	sbb    edx,edx
  41df15:	add    ch,BYTE PTR [edi]
  41df17:	fnstsw WORD PTR [eax-0x456e6f20]
  41df1d:	and    al,0xfc
  41df1f:	cmp    eax,0x7e9c28a1
  41df24:	xor    ch,BYTE PTR ds:0xba68d280
  41df2a:	cld    
  41df2b:	mov    ebp,0x47955912
  41df30:	pop    ecx
  41df31:	mov    dl,0x3e
  41df33:	mov    ch,0xf9
  41df35:	cmp    eax,0xb91af9f6
  41df3a:	ins    BYTE PTR es:[edi],dx
  41df3b:	xchg   dl,al
  41df3d:	pop    ebx
  41df3e:	cmc    
  41df3f:	jmp    DWORD PTR [esi+0x63]
  41df42:	gs mov ecx,0xe5643206
  41df48:	repz and edx,DWORD PTR [edi]
  41df4b:	cwde   
  41df4c:	lahf   
  41df4d:	scas   eax,DWORD PTR es:[edi]
  41df4e:	mov    eax,0x6aa0090e
  41df53:	pop    ebx
  41df54:	fisttp WORD PTR [ecx-0x315ab992]
  41df5a:	pusha  
  41df5b:	mov    eax,0x7364cc93
  41df60:	test   DWORD PTR [ebx],ebp
  41df62:	stos   BYTE PTR es:[edi],al
  41df63:	fs xchg esi,ecx
  41df66:	sbb    ch,al
  41df68:	or     ch,BYTE PTR [ebp+0x445ea4dd]
  41df6e:	sbb    DWORD PTR [ecx-0x73fda8e0],edi
  41df74:	adc    BYTE PTR [ebx],ch
  41df76:	cmp    eax,0x41c664e2
  41df7b:	sub    BYTE PTR [ebx-0x25],bh
  41df7e:	out    0x1e,al
  41df80:	leave  
  41df81:	jl     0x41df99
  41df83:	dec    esp
  41df84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df85:	cdq    
  41df86:	jbe    0x41df0a
  41df88:	ror    DWORD PTR [eax+0x74],0xe9
  41df8c:	test   DWORD PTR [ebx+edx*1],edx
  41df8f:	mov    WORD PTR [edx+0x56],ss
  41df92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df93:	in     al,dx
  41df94:	or     al,0x5a
  41df96:	imul   ebx,edx,0x63e7e0b8
  41df9c:	inc    edi
  41df9d:	xchg   BYTE PTR [eax],al
  41df9f:	out    0xc,eax
  41dfa1:	xchg   ebp,eax
  41dfa2:	sbb    dh,BYTE PTR [edx]
  41dfa4:	sbb    BYTE PTR [ebp+ecx*2+0x3a49c677],bl
  41dfab:	adc    eax,0xc956bec6
  41dfb0:	xchg   edx,eax
  41dfb1:	int3   
  41dfb2:	das    
  41dfb3:	call   0xba9:0x4b2c44fd
  41dfba:	fld    QWORD PTR [eax+0x2a5993ed]
  41dfc0:	cld    
  41dfc1:	or     BYTE PTR [ebx],dh
  41dfc3:	mov    cl,0xe5
  41dfc5:	pop    ebp
  41dfc6:	call   0x41c36a7d
  41dfcb:	mov    bl,0x4d
  41dfcd:	xor    BYTE PTR [edx],dl
  41dfcf:	push   ss
  41dfd0:	pop    ecx
  41dfd1:	jns    0x41dfa8
  41dfd3:	sti    
  41dfd4:	push   ebp
  41dfd5:	dec    eax
  41dfd6:	push   ds
  41dfd7:	and    BYTE PTR [ecx+ebx*4+0x56],dh
  41dfdb:	push   eax
  41dfdc:	mov    dl,0x48
  41dfde:	inc    ecx
  41dfdf:	jmp    0xa660:0xb2ca6ede
  41dfe6:	inc    edi
  41dfe7:	loope  0x41e049
  41dfe9:	retf   0x288a
  41dfec:	outs   dx,DWORD PTR ds:[esi]
  41dfed:	call   0x86962426
  41dff2:	push   esi
  41dff3:	pop    esp
  41dff4:	and    edi,DWORD PTR [esi-0x10]
  41dff7:	adc    eax,0xbd73a3ba
  41dffc:	sub    edx,DWORD PTR [edx]
  41dffe:	rcr    dl,1
  41e000:	push   edi
  41e001:	push   eax
  41e002:	pop    ecx
  41e003:	pop    es
  41e004:	cld    
  41e005:	popf   
  41e006:	popf   
  41e007:	test   al,0x3f
  41e009:	mov    al,0xb6
  41e00b:	and    eax,0x256de03d
  41e010:	push   0x224722fb
  41e015:	daa    
  41e016:	les    edx,FWORD PTR [ebp+0x4b]
  41e019:	lods   al,BYTE PTR ds:[esi]
  41e01a:	push   esp
  41e01b:	loop   0x41e016
  41e01d:	xchg   edx,eax
  41e01e:	inc    edx
  41e01f:	test   DWORD PTR [esi],0xe060feb8
  41e025:	pusha  
  41e026:	sbb    bh,0xf1
  41e029:	mov    esp,0x49bb804d
  41e02e:	popa   
  41e02f:	xor    eax,0xf2d6d344
  41e034:	loop   0x41dfb7
  41e036:	jmp    0xc26be64c
  41e03b:	xchg   esp,eax
  41e03c:	in     al,0x99
  41e03e:	inc    edi
  41e03f:	mov    es,WORD PTR [eax+0x28]
  41e042:	mov    edx,0xca186798
  41e047:	in     eax,0x22
  41e049:	jno    0x41dff3
  41e04b:	xor    dl,dh
  41e04d:	pop    eax
  41e04e:	mov    dh,0x46
  41e050:	mov    gs,edx
  41e052:	or     BYTE PTR [eax+0x35b4d75e],dl
  41e058:	jecxz  0x41e07b
  41e05a:	and    ebx,eax
  41e05c:	in     eax,dx
  41e05d:	leave  
  41e05e:	pop    eax
  41e05f:	push   0xffffffe1
  41e061:	sub    eax,DWORD PTR [eax-0x75e5aa98]
  41e067:	jmp    0x5ed7:0x43082f5a
  41e06e:	aam    0xce
  41e070:	push   ss
  41e071:	nop
  41e072:	dec    esp
  41e073:	js     0x41e0a2
  41e075:	cs int 0x3b
  41e078:	into   
  41e079:	push   esp
  41e07a:	aam    0xeb
  41e07c:	pop    eax
  41e07d:	fst    DWORD PTR [edx+ecx*8]
  41e080:	(bad)  
  41e081:	mov    esi,0x3f2b5d7c
  41e086:	iret   
  41e087:	test   dl,dl
  41e089:	mov    ds:0xdb3f2f81,eax
  41e08e:	jg     0x41e059
  41e090:	imul   esi,ebp,0x95179a20
  41e096:	mov    edi,0x47b81700
  41e09b:	inc    ebp
  41e09c:	cmc    
  41e09d:	inc    ecx
  41e09e:	xor    al,0x48
  41e0a0:	jmp    0x41e038
  41e0a2:	adc    eax,0xb71b0bbb
  41e0a7:	sbb    al,0xd
  41e0a9:	dec    esp
  41e0aa:	in     eax,0x35
  41e0ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0ad:	cmp    BYTE PTR [edx+0x64],ch
  41e0b0:	push   eax
  41e0b1:	xor    edx,edi
  41e0b3:	gs sti 
  41e0b5:	lahf   
  41e0b6:	adc    ebx,DWORD PTR [ebx-0x3c2ebaa7]
  41e0bc:	shr    DWORD PTR [eax-0xf70f245],cl
  41e0c2:	cli    
  41e0c3:	aam    0x44
  41e0c5:	movaps XMMWORD PTR [edi],xmm0
  41e0c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0c9:	ret    0x36f
  41e0cc:	fsubr  QWORD PTR [ecx]
  41e0ce:	xchg   edi,eax
  41e0cf:	ins    DWORD PTR es:[edi],dx
  41e0d0:	mov    ?,WORD PTR [ecx-0x334140b]
  41e0d6:	cmp    al,0xc4
  41e0d8:	test   eax,0x4bab36dd
  41e0dd:	retf   0x146f
  41e0e0:	mov    al,0x3a
  41e0e2:	or     DWORD PTR [edx],ecx
  41e0e4:	bt     ebx,edi
  41e0e7:	adc    al,0xb0
  41e0e9:	push   ecx
  41e0ea:	aaa    
  41e0eb:	xor    esi,DWORD PTR [esi]
  41e0ed:	cdq    
  41e0ee:	dec    edx
  41e0ef:	mov    ds:0xe027d1f7,eax
  41e0f4:	pop    esp
  41e0f5:	neg    ecx
  41e0f7:	mov    dl,0xc0
  41e0f9:	pop    ss
  41e0fa:	pop    ss
  41e0fb:	or     al,0x9c
  41e0fd:	not    BYTE PTR [edx]
  41e0ff:	mov    edi,0x5a342ef0
  41e104:	push   cs
  41e105:	pushf  
  41e106:	adc    DWORD PTR [ecx-0x1d4efd28],ecx
  41e10c:	cmp    al,0xe5
  41e10e:	popf   
  41e10f:	adc    ebx,DWORD PTR [esi+0x7c]
  41e112:	and    BYTE PTR [ecx-0x22],0x7f
  41e116:	mov    DWORD PTR [ebp-0x3729441e],ecx
  41e11c:	icebp  
  41e11d:	test   eax,0xe0a97901
  41e122:	sbb    esi,DWORD PTR [ebx]
  41e124:	sar    DWORD PTR [ebx-0x62],0xd8
  41e128:	jo     0x41e0ae
  41e12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e12b:	scas   al,BYTE PTR es:[edi]
  41e12c:	xor    al,0x3f
  41e12e:	xchg   edi,eax
  41e12f:	lock nop
  41e131:	(bad)  
  41e132:	push   ss
  41e133:	push   ebp
  41e134:	mov    edx,0xc7b03756
  41e139:	addr16 push ds
  41e13b:	mov    esi,0xf062120b
  41e140:	jae    0x41e166
  41e142:	mov    dl,0x94
  41e144:	cmp    DWORD PTR [esi+edx*1],ebx
  41e147:	push   ebp
  41e148:	jmp    0x41e128
  41e14a:	fist   DWORD PTR [edi+0x4a]
  41e14d:	test   DWORD PTR [esi-0x2f],esp
  41e150:	mov    DWORD PTR es:[ebx],0xa54b96bb
  41e157:	stos   BYTE PTR es:[di],al
  41e159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e15b:	lsl    esp,WORD PTR [eax+0x3beb83fc]
  41e162:	leave  
  41e163:	daa    
  41e164:	(bad)  
  41e165:	je     0x41e14b
  41e167:	pusha  
  41e168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e169:	test   DWORD PTR [edx+eiz*1],ebp
  41e16c:	jle    0x41e0f1
  41e16e:	arpl   WORD PTR [edx],dx
  41e170:	sub    DWORD PTR [edx-0x6c9aedcd],ebp
  41e176:	loope  0x41e139
  41e178:	adc    ah,ah
  41e17a:	mov    ecx,0x45aa5018
  41e17f:	lahf   
  41e180:	es (bad) 
  41e182:	sub    edi,DWORD PTR [ebx-0xa]
  41e185:	push   ss
  41e186:	jne    0x41e206
  41e188:	call   0xa2be:0xdb6af8b0
  41e18f:	bound  ebp,QWORD PTR [ebp+0x3d]
  41e192:	dec    ecx
  41e193:	in     eax,dx
  41e194:	test   ebx,ecx
  41e196:	int3   
  41e197:	(bad)  
  41e198:	rol    BYTE PTR [ecx+edi*2+0x66ddb651],1
  41e19f:	or     al,0xbe
  41e1a1:	jae    0x41e204
  41e1a3:	dec    edx
  41e1a4:	add    ebx,DWORD PTR [esi-0x22]
  41e1a7:	and    DWORD PTR [bx],ecx
  41e1aa:	jo     0x41e1aa
  41e1ac:	pop    ss
  41e1ad:	sbb    esi,DWORD PTR [edi-0x3e97b6f5]
  41e1b3:	mov    edi,0xf9abc62b
  41e1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1ba:	pusha  
  41e1bb:	mov    ?,WORD PTR [esi+ecx*4+0x48]
  41e1bf:	cli    
  41e1c0:	inc    edx
  41e1c1:	xchg   ecx,eax
  41e1c2:	cwde   
  41e1c3:	or     al,BYTE PTR [edx+0x5656ce9f]
  41e1c9:	inc    edx
  41e1cb:	loope  0x41e1bf
  41e1cd:	jne    0x41e193
  41e1cf:	inc    ecx
  41e1d0:	pop    ss
  41e1d1:	outs   dx,BYTE PTR ds:[esi]
  41e1d2:	cs jae 0x41e15a
  41e1d5:	adc    al,dl
  41e1d7:	imul   ebp,DWORD PTR [ebp-0x5f],0x1b
  41e1db:	sar    DWORD PTR [edi],1
  41e1dd:	fwait
  41e1de:	and    ebx,ebx
  41e1e0:	sub    cl,cl
  41e1e2:	(bad)  
  41e1e3:	jg     0x41e239
  41e1e5:	and    DWORD PTR [di-0x6e93],eax
  41e1ea:	inc    ebp
  41e1eb:	mov    ah,0xa5
  41e1ed:	xchg   ebp,eax
  41e1ee:	das    
  41e1ef:	mov    esp,0xec6ba873
  41e1f4:	rcl    DWORD PTR [edi-0x313c587c],0x43
  41e1fb:	das    
  41e1fc:	dec    edx
  41e1fd:	lods   al,BYTE PTR fs:[esi]
  41e1ff:	imul   eax,DWORD PTR [ecx+0x4b],0xffffffab
  41e203:	retf   
  41e204:	mov    bl,BYTE PTR [eax]
  41e206:	jno    0x41e280
  41e208:	test   eax,0x35d598bf
  41e20d:	sub    ch,BYTE PTR [ecx+0x7f2c071b]
  41e213:	sub    DWORD PTR [eax-0x14],0xfffffff5
  41e217:	and    BYTE PTR [edx],al
  41e219:	and    dh,dh
  41e21b:	retf   
  41e21c:	or     eax,0x55ae820
  41e221:	adc    DWORD PTR [ebp+0x14],edi
  41e224:	fwait
  41e225:	(bad)  
  41e226:	out    dx,al
  41e227:	ror    BYTE PTR [eax+0x59a7f264],1
  41e22d:	inc    BYTE PTR [edi+0x7d39cab3]
  41e233:	lahf   
  41e234:	imul   eax,DWORD PTR [ecx],0xffffff9e
  41e237:	jae    0x41e21c
  41e239:	repnz inc ebp
  41e23b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e23c:	cdq    
  41e23d:	pop    eax
  41e23e:	iret   
  41e23f:	aas    
  41e240:	jg     0x41e2b6
  41e242:	add    eax,0x474b8c26
  41e247:	rol    DWORD PTR [ebx],cl
  41e249:	scas   eax,DWORD PTR es:[edi]
  41e24a:	cs (bad) 
  41e24c:	sub    eax,0x948a83c6
  41e251:	shl    BYTE PTR [ebx],cl
  41e253:	push   esi
  41e254:	jmp    0xf54bc445
  41e259:	sbb    al,0xf9
  41e25c:	jge    0x41e2d4
  41e25e:	cmp    ebp,DWORD PTR [esp+ebp*2-0x14]
  41e262:	rcr    BYTE PTR [edx],cl
  41e264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e265:	and    al,0x46
  41e267:	adc    eax,0xe0a6e06c
  41e26c:	out    0xc0,eax
  41e26e:	retf   0x98b5
  41e271:	mov    ds:0x60bdc56b,al
  41e276:	(bad)  
  41e277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e278:	test   BYTE PTR [ebp-0x3b7c2383],cl
  41e27e:	pop    eax
  41e27f:	pop    edi
  41e280:	gs sahf 
  41e282:	pusha  
  41e283:	das    
  41e284:	add    BYTE PTR [ecx],0x29
  41e287:	rcl    DWORD PTR [ebx+0x542824ed],1
  41e28d:	xor    al,0x5f
  41e28f:	cmp    BYTE PTR [ebp+0xfc57bc5],dh
  41e295:	xor    edi,DWORD PTR [esi]
  41e297:	sub    cl,dl
  41e299:	xchg   ecx,eax
  41e29a:	leave  
  41e29b:	xchg   esp,eax
  41e29c:	outs   dx,DWORD PTR ds:[esi]
  41e29d:	push   edi
  41e29e:	push   ebx
  41e29f:	xor    al,0x92
  41e2a1:	mov    al,ds:0x70983514
  41e2a6:	mov    eax,0xe4eeda72
  41e2ab:	inc    esp
  41e2ac:	gs loope 0x41e2cb
  41e2af:	dec    ebx
  41e2b0:	add    al,0x2f
  41e2b2:	push   0xea1a672b
  41e2b7:	mov    ds:0xe7e81ed2,al
  41e2bc:	xor    BYTE PTR [edx+eax*1+0x610a479],ch
  41e2c3:	or     cl,al
  41e2c5:	pop    ebp
  41e2c6:	push   es
  41e2c7:	mov    ds:0xae3e9e3a,al
  41e2cc:	aas    
  41e2cd:	sti    
  41e2ce:	les    ecx,FWORD PTR [ebx]
  41e2d0:	imul   edi,DWORD PTR [esi+esi*2+0x28],0x72
  41e2d5:	stc    
  41e2d6:	mov    ecx,0x99b47054
  41e2db:	clc    
  41e2dc:	push   ecx
  41e2dd:	dec    edx
  41e2de:	in     al,0xeb
  41e2e0:	js     0x41e275
  41e2e2:	adc    BYTE PTR [ebp-0x30],0xcd
  41e2e6:	call   0x9d861671
  41e2eb:	dec    esi
  41e2ec:	dec    ebx
  41e2ed:	add    al,0x74
  41e2ef:	pushf  
  41e2f0:	outs   dx,BYTE PTR ds:[esi]
  41e2f1:	jle    0x41e281
  41e2f3:	mov    ?,WORD PTR [eax-0x6a]
  41e2f6:	mov    ch,0xcb
  41e2f8:	sub    eax,0xde4b9ec9
  41e2fd:	dec    esp
  41e2fe:	dec    ebp
  41e2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e300:	sub    eax,0x23a7778d
  41e305:	ret    0x1b92
  41e308:	sbb    DWORD PTR [ecx],0xb2359577
  41e30e:	outs   dx,BYTE PTR ds:[esi]
  41e30f:	sti    
  41e310:	or     ebp,DWORD PTR [ebx-0x5553fa3d]
  41e316:	into   
  41e317:	jle    0x41e37a
  41e319:	ins    BYTE PTR es:[edi],dx
  41e31a:	mov    ch,0x29
  41e31c:	push   ebx
  41e31d:	pop    edx
  41e31e:	(bad)  
  41e31f:	fisttp DWORD PTR es:[ecx]
  41e322:	pop    ebp
  41e323:	stos   BYTE PTR es:[edi],al
  41e324:	(bad)  
  41e325:	call   0x812eff44
  41e32a:	dec    eax
  41e32b:	movntps XMMWORD PTR [esi+0x7bbca51b],xmm0
  41e332:	mov    eax,ebx
  41e334:	push   ecx
  41e335:	popf   
  41e336:	jo     0x41e2fd
  41e338:	add    ecx,esi
  41e33a:	push   cs
  41e33b:	aam    0x75
  41e33d:	into   
  41e33e:	aas    
  41e33f:	adc    eax,0x90d53e29
  41e344:	out    0x4,al
  41e346:	adc    al,0xe8
  41e348:	ret    0x3d6b
  41e34b:	fst    QWORD PTR [ecx+0x68]
  41e34e:	jmp    0x95c1:0xda25faea
  41e355:	cmp    esp,esp
  41e357:	pop    ebp
  41e358:	into   
  41e359:	call   0x74136450
  41e35e:	jl     0x41e35c
  41e360:	pop    ds
  41e361:	dec    dl
  41e363:	aas    
  41e364:	hlt    
  41e365:	adc    esp,DWORD PTR [ebx]
  41e367:	jno    0x41e320
  41e369:	les    ebx,FWORD PTR [edx+0x4]
  41e36c:	out    dx,al
  41e36d:	pop    ecx
  41e36e:	mov    ah,0xce
  41e370:	fs ins BYTE PTR es:[edi],dx
  41e372:	pop    edi
  41e373:	cmp    eax,0x9f69c8e6
  41e378:	sbb    esp,DWORD PTR [edx]
  41e37a:	mov    dh,0x98
  41e37c:	mov    al,ds:0x78d793be
  41e381:	xchg   edi,eax
  41e382:	test   DWORD PTR [esi-0x7a7a794e],ebp
  41e388:	cli    
  41e389:	and    ah,BYTE PTR [edi]
  41e38b:	or     eax,0x1b6d78bb
  41e390:	sbb    DWORD PTR [ebp-0x49b44916],ecx
  41e396:	jnp    0x41e337
  41e398:	xchg   eax,edx
  41e39a:	jmp    0x41e328
  41e39c:	mov    BYTE PTR [eax+0x740d50d4],0x28
  41e3a3:	adc    al,BYTE PTR ds:0x7e2718e8
  41e3a9:	sbb    edi,ebp
  41e3ab:	aad    0x64
  41e3ad:	sub    ecx,ebx
  41e3af:	jle    0x41e376
  41e3b1:	mov    edx,0x658a67e3
  41e3b6:	mov    ds,ecx
  41e3b8:	sar    edx,cl
  41e3ba:	sbb    BYTE PTR [esi+0x10],bl
  41e3bd:	loope  0x41e367
  41e3bf:	inc    esp
  41e3c0:	sub    bh,bl
  41e3c2:	(bad)  
  41e3c3:	data16 add al,cl
  41e3c6:	xor    esi,DWORD PTR [esp+ebp*2+0x1cb0a758]
  41e3cd:	xchg   ebp,eax
  41e3ce:	push   ss
  41e3cf:	js     0x41e37b
  41e3d1:	mov    WORD PTR [ebp-0x5033adc0],cs
  41e3d7:	jns    0x41e3e6
  41e3d9:	xchg   ecx,eax
  41e3da:	cmp    esi,DWORD PTR [edx]
  41e3dc:	(bad)  
  41e3dd:	push   0x85ab0f35
  41e3e2:	xor    al,0xfb
  41e3e4:	adc    ah,BYTE PTR [eax+eax*2-0x68504ccd]
  41e3eb:	repz push ss
  41e3ed:	pop    ebx
  41e3ee:	jg     0x41e39b
  41e3f0:	hlt    
  41e3f1:	xor    DWORD PTR ds:0xf13797db,0xffffffe5
  41e3f8:	jge    0x41e3bc
  41e3fa:	loop   0x41e470
  41e3fc:	mov    ecx,0x4b7a3146
  41e401:	sbb    esi,eax
  41e403:	cwde   
  41e404:	ficom  DWORD PTR [edx+0x23]
  41e407:	sbb    DWORD PTR [ebp+0x73c7699c],ebp
  41e40d:	cdq    
  41e40e:	cmp    esi,DWORD PTR [edi-0xb]
  41e411:	jbe    0x41e41a
  41e413:	je     0x41e3c6
  41e415:	ret    
  41e416:	fwait
  41e417:	xor    eax,0x3bf61d08
  41e41c:	xchg   edi,eax
  41e41d:	(bad)  
  41e41e:	(bad)  
  41e41f:	dec    ebp
  41e420:	pop    ebp
  41e421:	mov    dh,0x18
  41e423:	bound  esp,QWORD PTR [edi-0x3ea26027]
  41e429:	in     al,0xb9
  41e42b:	jg     0x41e3fd
  41e42d:	xchg   edi,eax
  41e42e:	mov    esi,0x22b50da3
  41e433:	and    DWORD PTR [esi],ebp
  41e435:	mov    cl,0x70
  41e437:	cmp    eax,0xb8e6fdcb
  41e43c:	loopne 0x41e43f
  41e43e:	pop    ds
  41e43f:	scas   al,BYTE PTR es:[edi]
  41e440:	dec    edi
  41e441:	mov    dh,0x3a
  41e443:	es push ecx
  41e445:	sbb    BYTE PTR [edx],cl
  41e447:	jne    0x41e483
  41e449:	dec    edx
  41e44a:	sahf   
  41e44b:	scas   al,BYTE PTR es:[edi]
  41e44c:	(bad)  
  41e44f:	jnp    0x41e477
  41e451:	jecxz  0x41e426
  41e453:	dec    ecx
  41e454:	gs cmp al,0xef
  41e457:	shl    dh,1
  41e459:	jmp    0x1ae4:0x81e0df26
  41e460:	mov    cl,0xc
  41e462:	mov    bl,0x6b
  41e464:	sub    DWORD PTR [eax*2-0x3f1ef26c],0x1
  41e46c:	and    eax,0x71ebdd31
  41e471:	mov    BYTE PTR [ebp-0x3b],cl
  41e474:	frstor [edi+0x382b60c5]
  41e47a:	jecxz  0x41e4c3
  41e47c:	repnz mov ebp,0x888769ce
  41e482:	cli    
  41e483:	mov    cl,0x1d
  41e485:	pop    esp
  41e486:	mov    edx,DWORD PTR ds:0x5c4ab2f6
  41e48c:	xor    dl,0xb0
  41e48f:	sbb    eax,0xae68afa7
  41e494:	imul   ebp,DWORD PTR [eax+0x2f],0x55e9edce
  41e49b:	enter  0x20a5,0x65
  41e49f:	sbb    DWORD PTR [edx],0x25167235
  41e4a5:	dec    edx
  41e4a6:	dec    esp
  41e4a7:	jmp    0x8c901ee8
  41e4ac:	push   esp
  41e4ad:	mov    eax,ds:0xf406bf94
  41e4b2:	hlt    
  41e4b3:	repnz mov ebp,0x32567666
  41e4b9:	sahf   
  41e4ba:	mov    DWORD PTR [eax+0x1],ecx
  41e4bd:	pop    edi
  41e4be:	sbb    eax,0x4bff4659
  41e4c3:	test   eax,0xe63aa94d
  41e4c8:	les    ebp,FWORD PTR [ebx]
  41e4ca:	stos   BYTE PTR es:[edi],al
  41e4cb:	pop    esi
  41e4cc:	and    ebx,DWORD PTR [edi+eiz*2]
  41e4cf:	sub    DWORD PTR [eax-0x596d4379],esp
  41e4d5:	test   eax,0xb47eb344
  41e4da:	inc    edi
  41e4db:	popa   
  41e4dc:	jmp    FWORD PTR [edx-0x55]
  41e4df:	aas    
  41e4e0:	data16 ja 0x41e4cf
  41e4e3:	push   ebp
  41e4e4:	mov    esp,0xc7b55a52
  41e4e9:	sbb    DWORD PTR [esi],edi
  41e4eb:	sti    
  41e4ec:	fist   DWORD PTR [ebx+esi*1]
  41e4ef:	shl    DWORD PTR [ebp+0x34],0x85
  41e4f3:	jbe    0x41e54f
  41e4f5:	mov    bh,0x81
  41e4f7:	mov    edi,0x143d94d
  41e4fc:	enter  0x23c2,0x53
  41e500:	outs   dx,BYTE PTR ds:[esi]
  41e501:	and    BYTE PTR [ebp+0x4ead5c9c],dl
  41e507:	inc    ebx
  41e508:	push   ebp
  41e509:	cmovne ecx,DWORD PTR [edx]
  41e50c:	sti    
  41e50d:	rol    BYTE PTR [ebp+edi*4-0x7ec8c0d6],cl
  41e514:	ja     0x41e50d
  41e516:	sub    ebp,DWORD PTR [eax+0x6a]
  41e519:	cmp    BYTE PTR [ecx+0x53],bl
  41e51c:	cdq    
  41e51d:	scas   eax,DWORD PTR es:[edi]
  41e51e:	arpl   WORD PTR [ebp-0x3a],sp
  41e521:	push   es
  41e522:	or     dl,BYTE PTR [ebx]
  41e524:	(bad)  [edx+0x6d]
  41e527:	ds pop ebp
  41e529:	mov    bh,0xc0
  41e52b:	sbb    eax,0xf76fa75b
  41e530:	cmp    DWORD PTR [esi],edi
  41e532:	adc    esi,DWORD PTR [esi-0x7c31645e]
  41e538:	push   ecx
  41e539:	ds sbb al,ch
  41e53c:	cwde   
  41e53d:	jbe    0x41e598
  41e53f:	cmp    BYTE PTR [eax],cl
  41e541:	or     eax,0x30be23e1
  41e546:	mov    eax,0xabb0accf
  41e54b:	push   0x6b512ca8
  41e550:	xchg   edx,eax
  41e551:	xchg   BYTE PTR [esi-0x56],ah
  41e554:	pop    edi
  41e555:	mov    dh,0x7d
  41e557:	xor    eax,0xa7a2e8bc
  41e55c:	jmp    0x8fd8e4f6
  41e561:	sti    
  41e562:	inc    esp
  41e563:	pop    es
  41e564:	pop    ebx
  41e565:	pop    ecx
  41e566:	lods   eax,DWORD PTR ds:[esi]
  41e567:	push   es
  41e568:	sbb    bh,cl
  41e56a:	jno    0x41e5e9
  41e56c:	jne    0x41e5af
  41e56e:	mov    edi,0xfc4c8984
  41e573:	lahf   
  41e574:	enter  0x8d4b,0xd8
  41e578:	mov    al,ds:0xb7b17098
  41e57d:	repz add dh,BYTE PTR [ebx+0x4]
  41e581:	in     al,0x78
  41e583:	outs   dx,BYTE PTR ds:[esi]
  41e584:	mov    ebp,DWORD PTR [esi]
  41e586:	and    esp,edi
  41e588:	and    eax,0x39e0858e
  41e58d:	bound  esp,QWORD PTR [eax]
  41e58f:	ret    0xe00e
  41e592:	xlat   BYTE PTR ds:[ebx]
  41e593:	es jmp 0x2cae:0x55801a51
  41e59b:	xor    al,bl
  41e59d:	js     0x41e562
  41e59f:	scas   eax,DWORD PTR es:[edi]
  41e5a0:	jl     0x41e5ee
  41e5a2:	mov    ds:0xa6538abb,eax
  41e5a7:	jl     0x41e576
  41e5a9:	jge    0x41e537
  41e5ab:	inc    ecx
  41e5ac:	dec    edi
  41e5ad:	xor    eax,0x890ce32f
  41e5b2:	sbb    edi,edx
  41e5b4:	dec    ebx
  41e5b5:	inc    ebp
  41e5b6:	mov    BYTE PTR [esi*1-0x6c0cfe4c],0x1e
  41e5be:	mov    ecx,0xbd7d0061
  41e5c3:	or     DWORD PTR [ecx],esi
  41e5c5:	cmc    
  41e5c6:	out    dx,al
  41e5c7:	bound  edi,QWORD PTR [ebx+0x2d]
  41e5ca:	scas   eax,DWORD PTR es:[edi]
  41e5cb:	cwde   
  41e5cc:	and    bh,BYTE PTR [ecx+0x57e02476]
  41e5d2:	pop    es
  41e5d3:	aad    0xf5
  41e5d5:	jle    0x41e58e
  41e5d7:	or     ecx,DWORD PTR ds:0x4f1b3bb9
  41e5dd:	pop    ecx
  41e5de:	outs   dx,DWORD PTR ds:[esi]
  41e5df:	mov    ah,0x6c
  41e5e1:	aas    
  41e5e2:	in     eax,dx
  41e5e3:	(bad)  
  41e5e4:	jne    0x41e5ff
  41e5e6:	push   0x68
  41e5e8:	repz cld 
  41e5ea:	in     eax,dx
  41e5eb:	lods   eax,DWORD PTR ds:[esi]
  41e5ec:	sub    esi,DWORD PTR [esi+0x757f427f]
  41e5f2:	cwde   
  41e5f3:	fs mov dl,0x9
  41e5f6:	cmp    esi,DWORD PTR [edi+0x284beaa1]
  41e5fc:	call   0x2c9f4a60
  41e601:	repz (bad) 
  41e603:	dec    ebp
  41e604:	sub    al,0x4d
  41e606:	or     BYTE PTR [esp+ebp*1+0x34],ch
  41e60a:	ja     0x41e625
  41e60c:	mov    cl,0xfc
  41e60e:	xchg   ebx,eax
  41e60f:	jmp    0x95b718b0
  41e614:	pop    edx
  41e615:	and    ah,BYTE PTR [esi+0x96a78b]
  41e61b:	jne    0x41e646
  41e61d:	gs pushf 
  41e61f:	clc    
  41e620:	jb     0x41e675
  41e622:	and    al,0x59
  41e624:	sbb    BYTE PTR [ebx],0x18
  41e627:	in     eax,dx
  41e628:	clc    
  41e629:	ins    DWORD PTR es:[edi],dx
  41e62a:	xchg   esp,eax
  41e62b:	push   ebp
  41e62c:	mov    ebp,0x58b63dd5
  41e631:	in     eax,0x97
  41e633:	sbb    ebp,esi
  41e635:	not    eax
  41e637:	in     al,0xd0
  41e639:	adc    cl,BYTE PTR [ebp-0x59e99735]
  41e63f:	sbb    eax,0xd7ffa9f9
  41e644:	mov    edx,0x3b88334
  41e649:	hlt    
  41e64a:	mov    DWORD PTR [ecx],edi
  41e64c:	push   es
  41e64d:	mov    ah,0xcc
  41e650:	aam    0xe9
  41e652:	loope  0x41e697
  41e654:	or     al,0xda
  41e656:	ja     0x41e60c
  41e658:	mov    esp,0x17ddad0e
  41e65d:	mov    bl,0xfa
  41e65f:	and    al,0xbd
  41e661:	mov    edi,0xcaca490f
  41e666:	pop    ebx
  41e667:	pop    ss
  41e668:	invd   
  41e66a:	(bad)  
  41e66c:	inc    ebp
  41e66d:	int    0x52
  41e66f:	add    al,0x60
  41e671:	mov    bl,0x10
  41e673:	clc    
  41e674:	inc    esp
  41e675:	jo     0x41e69e
  41e677:	pop    eax
  41e678:	ja     0x41e699
  41e67a:	in     eax,0xa2
  41e67c:	jb     0x41e622
  41e67e:	dec    esp
  41e67f:	scas   eax,DWORD PTR es:[edi]
  41e680:	fisttp DWORD PTR [ebx-0x5201a2d6]
  41e686:	(bad)  
  41e687:	pop    es
  41e688:	mov    ebx,0xf93583fc
  41e68d:	ss mov al,0xb7
  41e690:	int    0xea
  41e692:	test   esp,edx
  41e694:	outs   dx,BYTE PTR ds:[esi]
  41e695:	dec    ebp
  41e696:	loope  0x41e6dd
  41e698:	(bad)  [eax+0x47]
  41e69b:	arpl   WORD PTR [ebx],si
  41e69d:	lods   eax,DWORD PTR ds:[esi]
  41e69e:	adc    cl,BYTE PTR [ebp+edi*8-0x20]
  41e6a2:	ins    BYTE PTR es:[edi],dx
  41e6a3:	push   ss
  41e6a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a5:	push   0xf514a449
  41e6aa:	int    0x1e
  41e6ac:	jl     0x41e6b9
  41e6ae:	sbb    DWORD PTR [ebx-0x6c],ebp
  41e6b1:	add    ebx,DWORD PTR ds:0x91f6be1
  41e6b7:	dec    esi
  41e6b8:	mov    cl,BYTE PTR [esi-0x655b3c0c]
  41e6be:	mov    ah,BYTE PTR [esi+0x2d2d99c3]
  41e6c4:	dec    esi
  41e6c5:	push   eax
  41e6c6:	dec    edx
  41e6c7:	sbb    eax,0x21bf3000
  41e6cc:	mov    edx,0xbb455249
  41e6d1:	out    dx,eax
  41e6d2:	push   edi
  41e6d3:	mov    edx,0x31beada2
  41e6d8:	mov    eax,ds:0x9c7b5a67
  41e6dd:	pop    ebx
  41e6de:	leave  
  41e6df:	mul    DWORD PTR [ecx+0x2f]
  41e6e2:	call   0x40a5:0x267af1d6
  41e6e9:	addr16 idiv eax
  41e6ec:	pop    ecx
  41e6ed:	sub    al,0xb8
  41e6ef:	cmp    ebp,edi
  41e6f1:	push   es
  41e6f2:	mov    ds:0x30fd29c,eax
  41e6f7:	test   al,0xfa
  41e6f9:	pop    edx
  41e6fa:	mov    eax,0x2f0687a1
  41e6ff:	mov    ecx,DWORD PTR [edi-0x370d6c57]
  41e705:	jle    0x41e707
  41e707:	and    eax,0xcc40d9a8
  41e70c:	stos   BYTE PTR es:[edi],al
  41e70d:	dec    ecx
  41e70e:	mov    ebx,0x658aa9b2
  41e713:	or     eax,0x5a4f28f1
  41e718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e719:	jmp    0x41e779
  41e71b:	loopne 0x41e713
  41e71d:	cmc    
  41e71e:	mov    edi,0x2362cc34
  41e723:	(bad)  
  41e724:	xor    DWORD PTR [esi+0x5f27173d],ecx
  41e72a:	fwait
  41e72b:	pop    eax
  41e72c:	xchg   ecx,eax
  41e72d:	push   ebx
  41e72e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e72f:	fistp  WORD PTR [edi]
  41e731:	push   esp
  41e732:	iret   
  41e733:	pop    eax
  41e734:	xor    DWORD PTR [ebx-0x6c76e172],eax
  41e73a:	mov    edi,0x22aa62fb
  41e73f:	neg    ch
  41e741:	mov    fs,ebx
  41e743:	loopne 0x41e72f
  41e745:	adc    DWORD PTR [esi],eax
  41e747:	into   
  41e748:	adc    al,0xc5
  41e74a:	data16 mov dl,BYTE PTR [eax-0xd]
  41e74e:	jne    0x41e6e8
  41e750:	int    0xc5
  41e752:	daa    
  41e753:	ins    DWORD PTR es:[edi],dx
  41e754:	xor    al,0xd
  41e756:	and    eax,0x4ec8d018
  41e75b:	mov    esi,0xb8444803
  41e760:	inc    ebx
  41e761:	or     eax,0xe55f392d
  41e766:	jno    0x41e724
  41e768:	test   bl,dh
  41e76a:	(bad)  
  41e76b:	es or  al,dl
  41e76e:	jg     0x41e79b
  41e770:	add    BYTE PTR [ecx+edi*4+0x5d],ch
  41e774:	or     DWORD PTR [esi+0x5a7ef1a6],edi
  41e77a:	jle    0x41e700
  41e77c:	mov    dl,0xf6
  41e77e:	adc    ecx,eax
  41e780:	data16 sub bh,BYTE PTR [edx+eax*4+0x39fd4d36]
  41e788:	cdq    
  41e789:	add    al,0x8f
  41e78b:	outs   dx,BYTE PTR ds:[esi]
  41e78c:	mov    bh,0x13
  41e78e:	(bad)  
  41e790:	pop    ebx
  41e791:	cmp    bl,BYTE PTR [ebx+0x2b]
  41e794:	push   ds
  41e795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e796:	and    eax,0x597888cb
  41e79b:	mov    esp,0x67a691da
  41e7a0:	xchg   edi,eax
  41e7a1:	retfw  0x6f08
  41e7a5:	pop    eax
  41e7a6:	fs mov ah,0x27
  41e7a9:	or     bl,BYTE PTR [esi-0x2]
  41e7ac:	xchg   edi,eax
  41e7ad:	inc    ecx
  41e7ae:	jge    0x41e7cd
  41e7b0:	push   esi
  41e7b1:	in     eax,dx
  41e7b2:	xchg   dh,bl
  41e7b4:	xor    ch,ch
  41e7b6:	adc    eax,0x2970b114
  41e7bb:	hlt    
  41e7bc:	adc    DWORD PTR [esi-0x14bf880],ecx
  41e7c2:	push   eax
  41e7c3:	in     eax,0x3f
  41e7c5:	sbb    DWORD PTR [ebx],esi
  41e7c7:	in     eax,0x4f
  41e7c9:	in     eax,0xf1
  41e7cb:	inc    esi
  41e7cc:	sbb    eax,ecx
  41e7ce:	mov    ah,0xba
  41e7d0:	push   eax
  41e7d1:	rcr    BYTE PTR [ebx],1
  41e7d3:	push   edx
  41e7d4:	test   BYTE PTR [ecx+0x5a302745],bh
  41e7da:	sti    
  41e7db:	cwde   
  41e7dc:	jg     0x41e836
  41e7de:	adc    cl,BYTE PTR [ecx-0x8]
  41e7e1:	jne    0x41e83f
  41e7e3:	and    BYTE PTR [esp+eiz*2+0x3],bh
  41e7e7:	lods   al,BYTE PTR ds:[esi]
  41e7e8:	je     0x41e817
  41e7ea:	mov    ebx,0x19bb2741
  41e7ef:	(bad)  
  41e7f0:	mov    ax,0xadf3
  41e7f4:	mov    edi,0xde3504dc
  41e7f9:	mov    edx,0x3854ff20
  41e7fe:	mov    ebp,0x5aee9de2
  41e803:	enter  0xf0ad,0x15
  41e807:	lds    edi,FWORD PTR [eax]
  41e809:	lock sub al,0x8
  41e80c:	pop    esi
  41e80d:	sbb    eax,0x7a7a62bf
  41e812:	sub    DWORD PTR ds:0xe7b8c2ad,eax
  41e818:	xchg   ebp,eax
  41e819:	ins    BYTE PTR es:[edi],dx
  41e81a:	les    ebx,FWORD PTR [edx-0x11ad39a1]
  41e820:	(bad)  
  41e821:	jbe    0x41e852
  41e823:	push   edi
  41e824:	std    
  41e825:	sahf   
  41e826:	mov    esi,0xa31c7fc7
  41e82b:	inc    eax
  41e82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e82d:	cmp    esp,ebx
  41e82f:	test   al,0x15
  41e831:	cld    
  41e832:	mov    al,ds:0x7000d7a4
  41e837:	fmul   st,st(4)
  41e839:	or     al,0xf5
  41e83b:	sub    al,0x75
  41e83d:	sahf   
  41e83e:	dec    ebx
  41e83f:	inc    ebx
  41e840:	mov    ebx,DWORD PTR [edi]
  41e842:	out    dx,al
  41e843:	in     eax,0x9f
  41e845:	mov    WORD PTR [ecx+0x7595c2c6],es
  41e84b:	retf   
  41e84c:	xchg   ecx,eax
  41e84d:	aam    0xe1
  41e84f:	outs   dx,BYTE PTR ds:[esi]
  41e850:	cli    
  41e851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e853:	push   0xfffffff6
  41e855:	adc    ebx,DWORD PTR [ecx]
  41e857:	mov    edx,0xaa5d6714
  41e85c:	adc    WORD PTR [edi+0x34],bp
  41e860:	loopne 0x41e8ad
  41e862:	fcomp  DWORD PTR [edx]
  41e864:	adc    BYTE PTR [ecx-0x74f3a100],bh
  41e86a:	pop    ebx
  41e86b:	and    BYTE PTR [ebp+0x32],dh
  41e86e:	mov    eax,0xbb3b5b71
  41e873:	mov    dl,0xfb
  41e875:	out    dx,eax
  41e876:	push   esi
  41e877:	scas   eax,DWORD PTR es:[edi]
  41e878:	push   cs
  41e879:	lahf   
  41e87a:	jns    0x41e812
  41e87c:	push   edi
  41e87d:	pop    ebp
  41e87e:	rcl    DWORD PTR [eax-0x75],1
  41e881:	scas   al,BYTE PTR es:[edi]
  41e882:	xlat   BYTE PTR ds:[ebx]
  41e883:	retf   
  41e884:	call   0x7ec0ee9e
  41e889:	test   dl,cl
  41e88b:	test   bl,bh
  41e88d:	adc    BYTE PTR [ebx],0x42
  41e890:	adc    eax,0x54dec8f2
  41e895:	or     eax,0xa282d390
  41e89a:	or     esp,esi
  41e89c:	inc    ebx
  41e89d:	sub    eax,0x9b10b018
  41e8a2:	je     0x41e8d5
  41e8a4:	pop    eax
  41e8a5:	mov    bl,0xc0
  41e8a7:	sahf   
  41e8a8:	sbb    WORD PTR [ebx+0x45],bp
  41e8ac:	add    al,0x44
  41e8ae:	sbb    eax,edx
  41e8b0:	stos   BYTE PTR es:[edi],al
  41e8b1:	mov    fs,ebp
  41e8b3:	enter  0x3601,0xa4
  41e8b7:	ss and eax,0x3935a0c5
  41e8bd:	cmp    al,0xb5
  41e8bf:	cli    
  41e8c0:	ret    
  41e8c1:	push   si
  41e8c3:	clc    
  41e8c4:	push   ecx
  41e8c5:	out    0xd9,eax
  41e8c7:	and    eax,DWORD PTR [eax-0x367f9dd1]
  41e8cd:	mov    eax,ds:0x9deb60eb
  41e8d2:	sbb    BYTE PTR [ebp-0x52403a75],dl
  41e8d8:	rol    BYTE PTR [esi+0x2],1
  41e8db:	dec    edi
  41e8dc:	fnstcw WORD PTR [esi+0x54f74389]
  41e8e2:	jmp    0xa08dd568
  41e8e7:	loope  0x41e91f
  41e8e9:	dec    eax
  41e8ea:	push   ebp
  41e8eb:	scas   eax,DWORD PTR es:[edi]
  41e8ec:	addr16 push ds
  41e8ee:	and    DWORD PTR [esi-0x3f],eax
  41e8f1:	mov    esp,0x47356e94
  41e8f6:	push   esi
  41e8f7:	popa   
  41e8f8:	ja     0x41e920
  41e8fa:	mov    ch,BYTE PTR [ebp+0x27]
  41e8fd:	in     al,0x2f
  41e8ff:	dec    ebx
  41e900:	jae    0x41e8c9
  41e902:	sbb    esi,DWORD PTR [edx+0x30]
  41e905:	mov    cl,0x9e
  41e907:	sti    
  41e908:	jnp    0x41e92c
  41e90a:	or     al,0x1b
  41e90c:	gs call 0xbcf93413
  41e912:	aad    0xf5
  41e914:	cmp    eax,0x9a6005d
  41e919:	in     al,0xad
  41e91b:	sub    bh,BYTE PTR [edi-0x8be9cf9]
  41e921:	mov    esp,0x6a18cea7
  41e926:	ficom  WORD PTR [ecx-0xa]
  41e929:	pushf  
  41e92a:	lock xor al,0xfe
  41e92d:	iret   
  41e92e:	jo     0x41e8f2
  41e930:	cmp    dl,BYTE PTR [esi+0x20]
  41e933:	lea    esi,[ecx+edi*1]
  41e936:	int    0xc0
  41e938:	push   cs
  41e939:	push   esi
  41e93a:	jae    0x41e946
  41e93c:	leave  
  41e93d:	test   BYTE PTR [edi],ch
  41e93f:	xchg   ecx,eax
  41e940:	dec    eax
  41e941:	and    edi,esi
  41e943:	add    eax,DWORD PTR [esi+ebp*1+0x50c180c6]
  41e94a:	mov    ecx,0xd7618e7a
  41e94f:	cmp    BYTE PTR [eax+0x370cbbaf],dl
  41e955:	popf   
  41e956:	in     al,dx
  41e957:	mov    esi,0xdf754ad3
  41e95c:	inc    ebp
  41e95d:	jnp    0x41e9d7
  41e95f:	(bad)  
  41e960:	ins    DWORD PTR es:[edi],dx
  41e961:	jnp    0x41e93a
  41e963:	adc    ecx,DWORD PTR [ebx-0x742e8fcf]
  41e969:	sub    eax,0x150a2447
  41e96e:	add    DWORD PTR [ebx+0x6f],ebp
  41e971:	and    edi,DWORD PTR [eax]
  41e973:	pop    eax
  41e974:	dec    edx
  41e975:	add    dl,bh
  41e977:	or     DWORD PTR [edi+0x722349dc],0x60e7b012
  41e981:	jb     0x41e963
  41e983:	pop    ebx
  41e984:	(bad)  
  41e985:	int    0xfd
  41e987:	dec    ecx
  41e988:	popa   
  41e989:	ss cmc 
  41e98b:	and    eax,0x50457dfb
  41e990:	mov    al,0xe5
  41e992:	jmp    0xe22:0xb6b40f6e
  41e999:	push   edx
  41e99a:	std    
  41e99b:	push   ds
  41e99c:	add    bl,BYTE PTR [edi+0x7a]
  41e99f:	and    eax,0xfbbfb220
  41e9a4:	and    edx,edi
  41e9a6:	bound  esi,QWORD PTR [edi+0x36c96724]
  41e9ac:	ds (bad) 
  41e9ae:	or     al,0x7a
  41e9b0:	inc    esi
  41e9b1:	cli    
  41e9b2:	arpl   WORD PTR [ebp*8+0x45c794a],dx
  41e9b9:	pushf  
  41e9ba:	imul   eax,DWORD PTR [ecx+0x76fd3166],0xfffffffd
  41e9c1:	fmul   DWORD PTR [ebp+ebp*2-0x79bb064f]
  41e9c8:	pop    eax
  41e9c9:	and    cl,dl
  41e9cb:	arpl   WORD PTR [edx+ebp*2+0x3d80755d],si
  41e9d2:	test   al,0xf8
  41e9d4:	cmp    esi,ebp
  41e9d6:	mov    ebp,0xdaea509e
  41e9db:	add    eax,0x45af9705
  41e9e0:	push   cs
  41e9e1:	sti    
  41e9e2:	lahf   
  41e9e3:	xor    eax,0xe648166
  41e9e8:	mov    al,BYTE PTR [edx+edi*8]
  41e9eb:	jecxz  0x41e99e
  41e9ed:	fidivr DWORD PTR [edx+0x4fadaa52]
  41e9f3:	ds es das 
  41e9f6:	dec    edx
  41e9f7:	adc    al,0xb5
  41e9f9:	inc    ecx
  41e9fa:	gs stos DWORD PTR es:[edi],eax
  41e9fc:	push   esi
  41e9fd:	in     eax,dx
  41e9fe:	dec    ecx
  41e9ff:	sahf   
  41ea00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea01:	mov    dh,0x25
  41ea03:	rcl    BYTE PTR [edx+0x56d58537],cl
  41ea09:	into   
  41ea0a:	retf   0x4bc7
  41ea0d:	lods   al,BYTE PTR ds:[esi]
  41ea0e:	xchg   ecx,eax
  41ea0f:	push   cs
  41ea10:	mov    edi,0x1890f635
  41ea15:	add    ebp,DWORD PTR [edi]
  41ea17:	stos   BYTE PTR es:[edi],al
  41ea18:	test   DWORD PTR [edx+0x2c0f1fa9],0x1e0ac9e0
  41ea22:	xchg   esi,eax
  41ea23:	sbb    ebx,DWORD PTR [esi-0x1f]
  41ea26:	pop    edi
  41ea27:	xchg   esp,eax
  41ea28:	add    DWORD PTR [esi+0x7c],0x3a
  41ea2c:	lds    ebp,FWORD PTR es:[edx-0x2b]
  41ea30:	pop    ecx
  41ea31:	cmp    al,0x10
  41ea33:	jmp    0x41e9c4
  41ea35:	sub    BYTE PTR [edi-0x5a1e6d32],ah
  41ea3b:	cmp    cl,BYTE PTR [eax+edx*4+0x3a634965]
  41ea42:	xchg   ebp,eax
  41ea43:	sub    eax,0x8414717c
  41ea48:	(bad)  [eax+0x7d11308b]
  41ea4e:	sti    
  41ea4f:	jmp    0x3f74:0xfb9154a0
  41ea56:	repnz aam 0x6
  41ea59:	cmp    DWORD PTR [ebp+eax*4-0xd4f59d3],esp
  41ea60:	nop
  41ea61:	inc    esp
  41ea62:	in     eax,dx
  41ea63:	cwde   
  41ea64:	and    DWORD PTR [ecx],esi
  41ea66:	mov    esi,0xca2f4472
  41ea6b:	fld    DWORD PTR [ecx+ebx*1-0x6c]
  41ea6f:	jns    0x41eacd
  41ea71:	fimul  DWORD PTR [eax+ecx*8-0x5d]
  41ea75:	jle    0x41ea5c
  41ea77:	pop    ebp
  41ea78:	lahf   
  41ea79:	enter  0xab6c,0x7c
  41ea7d:	jge    0x41ea7e
  41ea7f:	(bad)  
  41ea80:	scas   eax,DWORD PTR es:[edi]
  41ea81:	loop   0x41ea2a
  41ea83:	or     DWORD PTR [esi],edx
  41ea85:	push   ebp
  41ea86:	int    0x75
  41ea88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea89:	unpcklps xmm4,XMMWORD PTR [esi+eiz*1]
  41ea8d:	push   ss
  41ea8e:	dec    esp
  41ea8f:	add    cl,BYTE PTR [esp+eax*4-0x4bd768ac]
  41ea96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea97:	xchg   ebp,eax
  41ea98:	mov    ebx,0xd24700f0
  41ea9d:	sub    edx,edx
  41ea9f:	mov    dl,0xa
  41eaa1:	mov    esp,0x44812bb6
  41eaa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa7:	mov    DWORD PTR [ecx+0x5b],ebx
  41eaaa:	add    BYTE PTR [eax+0x72],al
  41eaad:	mov    al,ds:0xf064b3d0
  41eab2:	cwde   
  41eab3:	cli    
  41eab4:	pop    esp
  41eab5:	and    al,0x68
  41eab7:	mov    dh,0x34
  41eab9:	push   edi
  41eaba:	or     bh,BYTE PTR [esi]
  41eabc:	rcl    esp,1
  41eabe:	jp     0x41ea64
  41eac0:	jecxz  0x41eb35
  41eac2:	sbb    DWORD PTR [ecx-0x1c],edi
  41eac5:	and    DWORD PTR [ecx+0x65fa43d7],0x8f2b3e59
  41eacf:	add    BYTE PTR [edi+0x40],0x76
  41ead3:	mov    ebx,0xc95a2eb9
  41ead8:	xchg   ebx,eax
  41ead9:	or     al,0x4a
  41eadb:	out    dx,al
  41eadc:	jle    0x41ea75
  41eade:	ret    0x54f3
  41eae1:	add    eax,0xe32085cb
  41eae6:	jmp    0xad06:0xe4451d18
  41eaed:	sbb    DWORD PTR [ebx+0x73],0x64
  41eaf1:	js     0x41eb51
  41eaf3:	not    BYTE PTR [ebx+ecx*1+0x468ec1f4]
  41eafa:	fadd   QWORD PTR [eax-0x59b9056a]
  41eb00:	(bad)  
  41eb01:	ja     0x41ead7
  41eb03:	xlat   BYTE PTR ds:[ebx]
  41eb04:	out    0x54,eax
  41eb06:	cs inc esi
  41eb08:	call   0xbcbe27
  41eb0d:	pop    ebp
  41eb0e:	mov    BYTE PTR [eax+0x17384532],ah
  41eb14:	jne    0x41eae2
  41eb16:	jp     0x41eb00
  41eb18:	sbb    bh,BYTE PTR ds:0xf8200629
  41eb1e:	xlat   BYTE PTR ds:[ebx]
  41eb1f:	scas   al,BYTE PTR es:[edi]
  41eb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb21:	popf   
  41eb22:	xor    DWORD PTR [edx-0x18],esp
  41eb25:	fild   DWORD PTR ds:0x4ff539cc
  41eb2b:	dec    edx
  41eb2c:	pop    es
  41eb2d:	add    al,0x12
  41eb2f:	adc    DWORD PTR [ebx+0x13],ebp
  41eb32:	std    
  41eb33:	inc    eax
  41eb34:	(bad)  
  41eb35:	push   ss
  41eb36:	pop    esp
  41eb37:	and    BYTE PTR [ecx],bl
  41eb39:	xchg   esi,eax
  41eb3a:	or     al,0x18
  41eb3c:	(bad)  
  41eb3d:	in     eax,0x86
  41eb3f:	adc    al,0x9d
  41eb41:	retf   0xe54d
  41eb44:	test   eax,0x9aee3e7e
  41eb49:	fsubr  DWORD PTR [ecx+0x55]
  41eb4c:	mov    bh,0xa6
  41eb4e:	sbb    al,0x7b
  41eb50:	mov    esi,0x2937230f
  41eb55:	push   cs
  41eb56:	(bad)  
  41eb57:	loopne 0x41eb51
  41eb59:	(bad)  
  41eb5b:	jb     0x41eb81
  41eb5d:	xor    al,al
  41eb5f:	adc    esi,DWORD PTR [ecx]
  41eb61:	fadd   QWORD PTR [ebp+0x2b]
  41eb64:	test   bl,al
  41eb66:	test   DWORD PTR [esi+0x3825288b],edi
  41eb6c:	dec    edi
  41eb6d:	lea    ebp,[edx]
  41eb6f:	retf   
  41eb70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb71:	cdq    
  41eb72:	mov    ch,0xe3
  41eb74:	nop
  41eb75:	xor    al,0x74
  41eb77:	xchg   esi,eax
  41eb78:	fisubr WORD PTR [ecx+0x41]
  41eb7b:	dec    eax
  41eb7c:	push   cs
  41eb7d:	jns    0x41eb77
  41eb7f:	or     bh,ah
  41eb81:	pop    esi
  41eb82:	int    0xb5
  41eb84:	inc    ebx
  41eb85:	dec    ebp
  41eb86:	sub    DWORD PTR [edi-0x3b],0x3972534
  41eb8d:	test   DWORD PTR [edi],ecx
  41eb8f:	out    dx,al
  41eb90:	jmp    0x47933db
  41eb95:	or     eax,esi
  41eb97:	adc    bl,0xfc
  41eb9a:	jns    0x41ebf4
  41eb9c:	(bad)  
  41eb9d:	ror    BYTE PTR [ebp+ecx*1-0x4a],1
  41eba1:	ins    DWORD PTR es:[edi],dx
  41eba2:	(bad)  
  41eba3:	ror    esp,1
  41eba5:	add    eax,0xc9c8dfb4
  41ebaa:	mov    ?,WORD PTR ds:0x51b31aaf
  41ebb0:	pop    ecx
  41ebb1:	cwde   
  41ebb2:	mov    WORD PTR [eax],es
  41ebb4:	cmp    ebp,0x9
  41ebb7:	imul   edi,eax,0x2b1b3613
  41ebbd:	cld    
  41ebbe:	inc    eax
  41ebbf:	dec    esi
  41ebc0:	pop    ebx
  41ebc1:	pop    ecx
  41ebc2:	mov    bl,0xb1
  41ebc4:	cmp    DWORD PTR ds:0x863e8db2,0xcc53e11f
  41ebce:	iret   
  41ebcf:	arpl   WORD PTR fs:[esi+eax*1+0x2ee7bcda],bp
  41ebd7:	jae    0x41eb90
  41ebd9:	fcomi  st,st(3)
  41ebdb:	sub    eax,0x311fd953
  41ebe0:	and    al,0x2e
  41ebe2:	sub    dh,al
  41ebe4:	add    BYTE PTR [esi+0x4483533c],dl
  41ebea:	mov    al,ds:0x404faac8
  41ebef:	call   0x8f763abf
  41ebf4:	cmp    eax,0xf9b31d70
  41ebf9:	call   0x3c8c:0x76d098f0
  41ec00:	arpl   WORD PTR [edx-0x80d82a3],si
  41ec06:	pop    ds
  41ec07:	push   eax
  41ec08:	fiadd  DWORD PTR [eax+0x1dde1b57]
  41ec0e:	and    al,0x69
  41ec10:	pop    ds
  41ec11:	mov    bl,0x6d
  41ec13:	data16 lahf 
  41ec15:	test   BYTE PTR [ebx+0x159f5a24],cl
  41ec1b:	daa    
  41ec1c:	jne    0x41ebc6
  41ec1e:	test   DWORD PTR [edi+edi*4],0x956ac022
  41ec25:	adc    BYTE PTR [edi+0x66],ah
  41ec28:	mov    edi,0xcec3509f
  41ec2d:	(bad)  
  41ec2e:	pop    ebx
  41ec2f:	cdq    
  41ec30:	mov    ds:0xf05cfcf7,al
  41ec35:	push   ebp
  41ec36:	(bad)  
  41ec37:	shl    DWORD PTR [eax-0x78],cl
  41ec3a:	out    dx,eax
  41ec3b:	rol    BYTE PTR [ebx],1
  41ec3d:	mov    ah,0x7c
  41ec3f:	js     0x41ec91
  41ec41:	xchg   edi,eax
  41ec42:	pop    esp
  41ec43:	add    esp,DWORD PTR [eax]
  41ec45:	jp     0x41ec81
  41ec47:	das    
  41ec48:	fldenv [edi-0x5c749d91]
  41ec4e:	jle    0x41eccc
  41ec50:	xor    al,0x7f
  41ec52:	aas    
  41ec53:	inc    ebp
  41ec54:	ja     0x41ec1a
  41ec56:	jb     0x41ec64
  41ec58:	(bad)  [ecx]
  41ec5a:	dec    ecx
  41ec5b:	in     eax,dx
  41ec5c:	push   cs
  41ec5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec5e:	aaa    
  41ec5f:	sbb    eax,0xafb77697
  41ec64:	scas   al,BYTE PTR es:[edi]
  41ec65:	sbb    al,0x22
  41ec67:	inc    edi
  41ec68:	xor    esi,edi
  41ec6a:	fs pop ebx
  41ec6c:	lea    edi,[eax+0x7c]
  41ec6f:	sub    eax,0x18422fea
  41ec74:	sbb    ecx,ecx
  41ec76:	cmp    edx,DWORD PTR [ebx+0x723ee56b]
  41ec7c:	je     0x41ecfb
  41ec7e:	pusha  
  41ec7f:	mov    BYTE PTR [ecx+0x18],al
  41ec82:	jbe    0x41ecd5
  41ec84:	push   0xffffffb7
  41ec86:	adc    eax,0x511957b3
  41ec8b:	xchg   ah,ch
  41ec8d:	test   al,0x8b
  41ec8f:	and    al,0xce
  41ec91:	jmp    0x41ecb6
  41ec93:	test   esi,0x4507c088
  41ec99:	lods   al,BYTE PTR ds:[esi]
  41ec9a:	js     0x41ecd5
  41ec9c:	mov    eax,ds:0x96bfc4dd
  41eca1:	(bad)  
  41eca2:	daa    
  41eca3:	imul   esi,edi,0xdd756443
  41eca9:	mov    esp,0x8354c478
  41ecae:	je     0x41ece2
  41ecb0:	sti    
  41ecb1:	inc    eax
  41ecb2:	stos   BYTE PTR es:[edi],al
  41ecb3:	or     eax,0xe4f3608d
  41ecb8:	inc    ebp
  41ecb9:	xchg   ebx,eax
  41ecba:	int    0x76
  41ecbc:	into   
  41ecbd:	fs adc ch,BYTE PTR ss:[edx]
  41ecc1:	popf   
  41ecc2:	jnp    0x41ed14
  41ecc4:	stos   DWORD PTR es:[edi],eax
  41ecc5:	sbb    BYTE PTR [edi+0x3ec5b29c],0x76
  41eccc:	sub    al,0x63
  41ecce:	jno    0x41ec66
  41ecd0:	pushf  
  41ecd1:	pop    edi
  41ecd2:	xchg   dl,ch
  41ecd4:	mov    eax,0x2c748ef7
  41ecd9:	stc    
  41ecda:	cmp    BYTE PTR [ebx+0x3f],0x93
  41ecde:	pop    ebp
  41ecdf:	mov    bl,0xe2
  41ece1:	nop
  41ece2:	push   0x5c
  41ece4:	jg     0x41ed41
  41ece6:	and    DWORD PTR [eax-0x3e],0x8b47a56c
  41eced:	mov    dl,0x10
  41ecef:	sub    esi,DWORD PTR [eax]
  41ecf1:	ins    BYTE PTR es:[edi],dx
  41ecf2:	scas   al,BYTE PTR es:[edi]
  41ecf3:	xchg   ebp,eax
  41ecf4:	dec    esp
  41ecf6:	xor    esi,DWORD PTR [ecx+0x4aed9614]
  41ecfc:	(bad)  
  41ecfd:	lahf   
  41ecfe:	mov    al,0xfd
  41ed00:	mov    bl,0xd1
  41ed02:	xchg   BYTE PTR [eax],dl
  41ed04:	out    dx,al
  41ed05:	mov    eax,0x1b482784
  41ed0a:	xchg   edi,eax
  41ed0b:	mov    edx,0xcded9cff
  41ed10:	lock lods eax,DWORD PTR ds:[esi]
  41ed12:	mov    es,ebx
  41ed14:	repz frstor [edi+0x51]
  41ed18:	sub    dh,BYTE PTR [ecx+0x5ceb2a37]
  41ed1e:	pop    ecx
  41ed1f:	mov    ds:0xf0e33ee9,al
  41ed24:	(bad)  
  41ed26:	push   edx
  41ed27:	add    BYTE PTR [edx],ah
  41ed29:	pop    esi
  41ed2a:	pusha  
  41ed2b:	(bad)  
  41ed2c:	out    dx,eax
  41ed2d:	ss pop edx
  41ed2f:	mov    ebp,0x403cb926
  41ed34:	mov    ebx,esi
  41ed36:	cmp    bl,dl
  41ed38:	adc    al,0xfa
  41ed3a:	into   
  41ed3b:	jge    0x41ed20
  41ed3d:	fdiv   st,st(1)
  41ed3f:	jno    0x41ed63
  41ed41:	lods   eax,DWORD PTR ds:[esi]
  41ed42:	pop    es
  41ed43:	or     eax,0xb295a03c
  41ed48:	cs ror edx,1
  41ed4b:	aas    
  41ed4c:	jmp    0x80a4:0xf1737d4f
  41ed53:	lods   eax,DWORD PTR ds:[esi]
  41ed54:	sbb    ah,BYTE PTR [ecx+0x76]
  41ed57:	mov    DWORD PTR [esi-0x1bc9989],esp
  41ed5d:	xchg   ch,cl
  41ed5f:	outs   dx,DWORD PTR ds:[esi]
  41ed60:	push   esp
  41ed61:	pop    es
  41ed62:	jo     0x41eda5
  41ed64:	bound  ebp,QWORD PTR [ebp+0x3a4ba7dc]
  41ed6a:	mov    dl,0x0
  41ed6c:	or     BYTE PTR [ecx],al
  41ed6e:	mov    edx,0xd10bb38
  41ed73:	adc    al,0x66
  41ed75:	cmp    DWORD PTR ds:0x2dd553d9,esi
  41ed7b:	scas   al,BYTE PTR es:[edi]
  41ed7c:	imul   esi,DWORD PTR [eax-0x55474915],0xffffffab
  41ed83:	or     cl,bl
  41ed85:	out    dx,al
  41ed86:	sbb    BYTE PTR [ebp+0x1e],bl
  41ed89:	loopne 0x41ed66
  41ed8b:	and    eax,0x289409a3
  41ed90:	repnz test DWORD PTR [edi-0x7cbfe1b2],esp
  41ed97:	adc    edx,DWORD PTR [ecx]
  41ed99:	xchg   BYTE PTR [edi+0x221b53f9],cl
  41ed9f:	inc    ecx
  41eda0:	add    eax,DWORD PTR [ebx+ecx*2]
  41eda3:	mov    edx,0x282edc8e
  41eda8:	(bad)  
  41eda9:	hlt    
  41edaa:	xchg   ebx,eax
  41edab:	add    dl,BYTE PTR [ebx-0x5e]
  41edae:	mov    esp,0x377ecd57
  41edb3:	jge    0x41edbd
  41edb5:	fwait
  41edb6:	xchg   ebx,eax
  41edb7:	pop    esp
  41edb8:	pop    ebp
  41edb9:	push   0x2b
  41edbb:	add    ebp,esp
  41edbd:	pop    esp
  41edbe:	xchg   esp,eax
  41edbf:	fsqrt  
  41edc1:	adc    ebp,DWORD PTR [esi-0x24]
  41edc4:	and    cl,BYTE PTR [edi-0x6c]
  41edc7:	xchg   ebx,eax
  41edc8:	jb     0x41ee1c
  41edca:	xor    BYTE PTR [edi],ch
  41edcc:	mov    dh,0xc
  41edce:	imul   ebp,ebx,0xa2fdf20a
  41edd4:	xchg   ecx,eax
  41edd5:	dec    ebx
  41edd6:	in     eax,0x66
  41edd8:	aad    0xde
  41edda:	(bad)  
  41eddb:	pop    edx
  41eddc:	pop    esi
  41eddd:	mov    bh,0x3f
  41eddf:	xor    ebp,DWORD PTR [ebp+0x6de60915]
  41ede5:	es dec esi
  41ede7:	jmp    0x41ee1e
  41ede9:	push   es
  41edea:	rcl    BYTE PTR [ecx+0x47],cl
  41eded:	cmp    edx,edi
  41edef:	int    0x3e
  41edf1:	push   edi
  41edf2:	mov    al,ds:0x903fef2e
  41edf7:	shr    DWORD PTR [edi],cl
  41edf9:	cmp    ch,dl
  41edfb:	clc    
  41edfc:	cmp    al,0x61
  41edfe:	mov    ebp,DWORD PTR [ecx]
  41ee00:	mov    edi,0xe2abec03
  41ee05:	adc    bl,BYTE PTR [edi]
  41ee07:	mov    al,0xca
  41ee09:	fwait
  41ee0a:	int3   
  41ee0b:	call   0x545ad384
  41ee10:	mov    ch,0xa1
  41ee12:	iret   
  41ee13:	jmp    0x2032:0x3ad72335
  41ee1a:	(bad)  
  41ee1b:	jmp    0x41ee28
  41ee1d:	adc    dh,bh
  41ee1f:	adc    eax,0xb4d2990a
  41ee24:	inc    esi
  41ee25:	int    0x10
  41ee27:	out    0xd8,eax
  41ee29:	cmp    DWORD PTR [esi],ebp
  41ee2b:	xchg   edx,eax
  41ee2c:	xchg   ebp,eax
  41ee2d:	aam    0xcc
  41ee2f:	cwde   
  41ee30:	sub    BYTE PTR [ebx+0x30],al
  41ee33:	sub    al,BYTE PTR fs:[esi-0x37343bb5]
  41ee3a:	stc    
  41ee3b:	fcom   DWORD PTR [ebp+0x570d80e6]
  41ee41:	xor    ecx,DWORD PTR [edx]
  41ee43:	xor    BYTE PTR [eax],bl
  41ee45:	jae    0x41edde
  41ee47:	fcmove st,st(0)
  41ee49:	out    dx,eax
  41ee4a:	mov    bl,0x24
  41ee4c:	xchg   ecx,eax
  41ee4d:	add    ebp,edx
  41ee4f:	inc    esi
  41ee50:	test   esi,ecx
  41ee52:	(bad)  
  41ee53:	stc    
  41ee54:	pop    esp
  41ee55:	mov    ds:0x364335ca,al
  41ee5a:	test   eax,0xa149f67b
  41ee5f:	pop    ebp
  41ee60:	push   ds
  41ee61:	mov    edx,0x4e5e17c4
  41ee66:	jp     0x41edea
  41ee68:	add    ebx,ebx
  41ee6a:	clc    
  41ee6b:	bound  ebx,QWORD PTR [ebp-0xbcb7dac]
  41ee71:	push   es
  41ee72:	scas   al,BYTE PTR es:[edi]
  41ee73:	sahf   
  41ee74:	mov    esi,0x965c40a2
  41ee79:	mov    ds:0xaf089642,al
  41ee7e:	inc    edx
  41ee7f:	pop    edi
  41ee80:	xchg   DWORD PTR [eax+0x71],ecx
  41ee83:	popa   
  41ee84:	shr    eax,0xc7
  41ee87:	rcr    cl,1
  41ee89:	(bad)  
  41ee8a:	out    0x2e,eax
  41ee8c:	jne    0x41eef4
  41ee8e:	in     al,0xa5
  41ee90:	imul   esp,DWORD PTR [edi+eax*4+0x421bf2b4],0xffffff88
  41ee98:	in     ax,dx
  41ee9a:	mov    WORD PTR [ebp+0x1e14b181],?
  41eea0:	test   al,0xaa
  41eea2:	jge    0x41ee9b
  41eea4:	jno    0x41eeef
  41eea6:	and    al,0x53
  41eea8:	or     dh,dh
  41eeaa:	aad    0x64
  41eeac:	or     al,0x88
  41eeae:	dec    ecx
  41eeaf:	mov    ebp,edx
  41eeb1:	popa   
  41eeb2:	fisttp DWORD PTR [edx+0x299bd72d]
  41eeb8:	xor    eax,0x66646347
  41eebd:	or     edi,DWORD PTR [eax+0x5a]
  41eec0:	mov    cl,0xab
  41eec2:	and    esp,DWORD PTR [ecx-0x2b]
  41eec5:	push   cs
  41eec6:	cmp    esi,DWORD PTR [ecx]
  41eec8:	stc    
  41eec9:	test   DWORD PTR [ebp-0x22ea2382],ecx
  41eecf:	(bad)  
  41eed1:	popf   
  41eed2:	pop    esi
  41eed3:	test   eax,0x777170a5
  41eed8:	stos   BYTE PTR es:[edi],al
  41eed9:	jg     0x41ef0f
  41eedb:	mov    bh,0x9b
  41eedd:	adc    eax,0x43b4148d
  41eee2:	jl     0x41eeee
  41eee4:	sub    edi,DWORD PTR [edi]
  41eee6:	cmp    BYTE PTR [eax],bh
  41eee8:	ds pop edi
  41eeea:	adc    BYTE PTR [ebx-0x2d4ce04c],ch
  41eef0:	xchg   BYTE PTR [edi],dl
  41eef2:	adc    dh,BYTE PTR [ecx+edi*2]
  41eef5:	out    dx,al
  41eef6:	lds    esi,FWORD PTR [edi]
  41eef8:	scas   eax,DWORD PTR es:[edi]
  41eef9:	or     edx,esp
  41eefb:	cli    
  41eefc:	inc    ebx
  41eefd:	jle    0x41ee88
  41eeff:	sbb    eax,0xd3e5dc13
  41ef04:	pop    edi
  41ef05:	int    0x23
  41ef07:	mov    esi,0xf7378062
  41ef0c:	xchg   ebp,eax
  41ef0d:	xor    al,0xb2
  41ef0f:	add    eax,0xad8d1184
  41ef14:	hlt    
  41ef15:	stos   BYTE PTR es:[edi],al
  41ef16:	rol    dh,cl
  41ef18:	dec    esi
  41ef19:	(bad)  
  41ef1a:	arpl   WORD PTR [eax],dx
  41ef1c:	xor    DWORD PTR [esi-0x2b],0x93fa6bec
  41ef23:	popf   
  41ef24:	add    al,0x3f
  41ef26:	ror    BYTE PTR [ecx+0x58368a37],0x69
  41ef2d:	inc    esp
  41ef2e:	mov    ch,0xec
  41ef30:	mov    ds:0x4538ba9,al
  41ef35:	push   edx
  41ef36:	das    
  41ef37:	and    DWORD PTR [ebx],esp
  41ef39:	and    eax,0x205c0009
  41ef3e:	sub    dl,BYTE PTR [ebp+0x60]
  41ef41:	mov    cl,0xa2
  41ef43:	repz fidivr WORD PTR [esi-0x57bc2e6c]
  41ef4a:	pop    ebp
  41ef4b:	or     DWORD PTR [ebx+0x1a227bc2],ebp
  41ef51:	(bad)  
  41ef52:	out    dx,eax
  41ef53:	xlat   BYTE PTR ds:[ebx]
  41ef54:	mov    al,ch
  41ef56:	dec    edi
  41ef57:	mov    ch,dh
  41ef59:	loopne 0x41ef01
  41ef5b:	sub    al,0xa8
  41ef5d:	les    ebx,FWORD PTR [esi+0xf]
  41ef60:	aaa    
  41ef61:	out    dx,al
  41ef62:	das    
  41ef63:	pop    ss
  41ef64:	xor    al,0x71
  41ef66:	jnp    0x41eef3
  41ef68:	(bad)  
  41ef69:	in     al,dx
  41ef6a:	xchg   ecx,esi
  41ef6c:	xor    al,0x53
  41ef6e:	and    ah,BYTE PTR [ebx]
  41ef70:	jnp    0x41efcc
  41ef72:	mov    ebp,0x1d8da252
  41ef77:	adc    eax,0xd3fd1180
  41ef7c:	ins    BYTE PTR es:[edi],dx
  41ef7d:	pop    edx
  41ef7e:	xchg   esp,eax
  41ef7f:	cdq    
  41ef80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef81:	push   ebp
  41ef82:	sbb    ah,BYTE PTR [edx+0x42]
  41ef85:	int    0x15
  41ef87:	push   cs
  41ef88:	sar    BYTE PTR [edi-0xb],0xaf
  41ef8c:	cmc    
  41ef8d:	(bad)  
  41ef8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef8f:	or     ax,WORD PTR [ecx+edx*1-0x66d32db]
  41ef97:	enter  0x995e,0xb0
  41ef9b:	shr    DWORD PTR [edx-0x4b],0x5
  41ef9f:	push   ds
  41efa0:	pop    ebp
  41efa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efa2:	lds    ax,DWORD PTR [ebp-0x41277b95]
  41efa9:	inc    ebp
  41efaa:	and    ebp,DWORD PTR [ecx+0x50]
  41efad:	sahf   
  41efae:	dec    ecx
  41efaf:	add    eax,DWORD PTR [ebx+eax*1+0x5ff38dbe]
  41efb6:	jmp    FWORD PTR [edi]
  41efb8:	adc    eax,0xd0611b21
  41efbd:	mov    ds:0x8d25195e,al
  41efc2:	mov    ah,0x3b
  41efc4:	sbb    al,0xb8
  41efc6:	cli    
  41efc7:	or     al,0xbb
  41efc9:	ret    0x5b9
  41efcc:	rcl    BYTE PTR [ebp+ecx*4+0xcbac6df],1
  41efd3:	call   0x2f41:0xe7ef9468
  41efda:	retf   
  41efdb:	add    BYTE PTR [ebx+ecx*2+0xa],cl
  41efdf:	mov    ds:0x155341c6,al
  41efe4:	cmp    al,0xf9
  41efe6:	nop
  41efe7:	mul    BYTE PTR [ecx-0x3056e1a]
  41efed:	sub    ebp,DWORD PTR [ebp-0x1019090c]
  41eff3:	(bad)  
  41eff4:	loopne 0x41efbc
  41eff6:	push   edi
  41eff7:	fdiv   QWORD PTR [edi+0x26ad2b4a]
  41effd:	mov    al,0x52
  41efff:	cmc    
  41f000:	daa    
  41f001:	retf   
  41f002:	jge    0x41f035
  41f004:	dec    edi
  41f005:	push   ebx
  41f006:	stc    
  41f007:	sbb    BYTE PTR [edx],0xf2
  41f00a:	pop    eax
  41f00b:	sbb    al,BYTE PTR [esi]
  41f00d:	sub    eax,0x417f0c22
  41f012:	push   0x418f6e2c
  41f017:	push   ss
  41f018:	scas   eax,DWORD PTR es:[edi]
  41f019:	dec    edi
  41f01a:	sahf   
  41f01b:	mov    ebp,0x8d83651e
  41f020:	fwait
  41f021:	ds stos DWORD PTR es:[edi],eax
  41f023:	(bad)  
  41f024:	and    eax,0x7a5ba897
  41f029:	lea    esi,[edi-0x1b]
  41f02c:	xor    al,0xc5
  41f02e:	test   BYTE PTR [edi-0xcb92dfb],dl
  41f034:	hlt    
  41f035:	inc    edx
  41f036:	dec    esi
  41f037:	test   BYTE PTR [edx],al
  41f039:	inc    ecx
  41f03a:	dec    ebx
  41f03b:	adc    DWORD PTR [ebp-0x57],esp
  41f03e:	fisubr DWORD PTR [edx-0x50]
  41f041:	addr16 mov cl,0x5e
  41f044:	shl    ah,0x15
  41f047:	sbb    BYTE PTR [ebp-0x1f],0x11
  41f04b:	test   BYTE PTR [ebx],cl
  41f04d:	loopne 0x41f04b
  41f04f:	sub    BYTE PTR ds:0xbe8a3f7b,dh
  41f055:	push   edx
  41f056:	jnp    0x41f012
  41f058:	add    BYTE PTR [ecx-0x35c3a739],cl
  41f05e:	aad    0x8c
  41f060:	iret   
  41f061:	inc    esp
  41f062:	add    eax,0x97b82b37
  41f067:	aad    0x92
  41f069:	push   edx
  41f06a:	cmp    BYTE PTR [ecx],cl
  41f06c:	jecxz  0x41f086
  41f06e:	lock cmp eax,ecx
  41f071:	push   0xfffffff6
  41f073:	ror    al,1
  41f075:	jns    0x41eff7
  41f077:	std    
  41f078:	sar    BYTE PTR [ebx+0x55c676b1],0x45
  41f07f:	xor    al,0x68
  41f081:	enter  0x948f,0xe6
  41f085:	mov    ebp,0x2b2f12bf
  41f08a:	adc    eax,0x64b4400d
  41f08f:	xchg   esi,eax
  41f090:	out    dx,al
  41f091:	dec    edi
  41f092:	jne    0x41f07f
  41f094:	push   eax
  41f095:	inc    esi
  41f096:	test   DWORD PTR ds:0x5287ae6c,ecx
  41f09c:	fwait
  41f09d:	inc    esi
  41f09e:	mov    ds:0xefd33d48,al
  41f0a3:	pop    bx
  41f0a5:	test   cl,ch
  41f0a7:	inc    edx
  41f0a8:	scas   al,BYTE PTR es:[edi]
  41f0a9:	xor    BYTE PTR ds:0xb6632428,bh
  41f0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0b0:	xchg   DWORD PTR [edi+0x3ffeba5e],edi
  41f0b6:	inc    ecx
  41f0b7:	lock fidivr WORD PTR [edi+0x2]
  41f0bb:	add    BYTE PTR [ecx+0x69],0x98
  41f0bf:	xchg   ebx,eax
  41f0c0:	retf   0x19b4
  41f0c3:	fmul   DWORD PTR [eax+0x3b18271d]
  41f0c9:	sbb    al,0xca
  41f0cb:	ins    DWORD PTR es:[edi],dx
  41f0cc:	in     al,dx
  41f0cd:	push   ecx
  41f0ce:	sub    ecx,ecx
  41f0d0:	mov    al,0xf4
  41f0d2:	test   BYTE PTR [edx+0x64],0x2b
  41f0d6:	sub    ebp,DWORD PTR [ecx-0x72]
  41f0d9:	div    BYTE PTR [ecx+0x14]
  41f0dc:	adc    al,0x74
  41f0de:	sub    DWORD PTR [edi],edi
  41f0e0:	adc    bh,BYTE PTR [ebp+0x55a579ba]
  41f0e6:	jecxz  0x41f0ac
  41f0e8:	aas    
  41f0e9:	jge    0x41f169
  41f0eb:	in     al,0xad
  41f0ed:	jmp    0x62a4:0x1958349d
  41f0f4:	repz std 
  41f0f6:	in     al,dx
  41f0f7:	push   esp
  41f0f8:	mov    BYTE PTR [ebp-0x11],ch
  41f0fb:	fldenv [edi+0x3fd22bac]
  41f101:	jo     0x41f098
  41f103:	fwait
  41f104:	js     0x41f13b
  41f106:	dec    esp
  41f107:	xor    edi,DWORD PTR [esi+ebx*8-0x47df6a79]
  41f10e:	cwde   
  41f10f:	sbb    dh,BYTE PTR [esi]
  41f111:	repz push es
  41f113:	jmp    0x2003:0xd45fc65c
  41f11a:	push   0xd23addcb
  41f11f:	arpl   dx,bx
  41f121:	xchg   DWORD PTR es:[eax-0x68138029],ebp
  41f128:	cwd    
  41f12a:	sub    al,0x1e
  41f12c:	inc    edi
  41f12d:	aam    0xa6
  41f12f:	xor    BYTE PTR [eax],dh
  41f131:	bound  esi,QWORD PTR ds:0x809443ca
  41f137:	in     eax,0xf2
  41f139:	arpl   dx,di
  41f13b:	pop    edi
  41f13c:	mov    eax,ds:0x696a552d
  41f141:	xchg   ebp,eax
  41f142:	inc    edx
  41f143:	or     DWORD PTR ds:0x6bc3f2e5,ecx
  41f149:	bound  ebp,QWORD PTR [esi]
  41f14b:	dec    esp
  41f14c:	inc    edx
  41f14d:	pushf  
  41f14e:	cmp    eax,0x17b7dbda
  41f153:	inc    edx
  41f154:	test   DWORD PTR [eax+0x59],esp
  41f157:	sbb    eax,0xd3a3de34
  41f15c:	mov    esi,0xa4618510
  41f161:	dec    ebx
  41f162:	mov    bl,0xe0
  41f164:	ins    BYTE PTR es:[edi],dx
  41f165:	mov    ecx,0xe30ced11
  41f16a:	popa   
  41f16b:	out    dx,eax
  41f16c:	mov    esp,0xccbfd2fa
  41f171:	push   edx
  41f172:	xchg   BYTE PTR ds:0x3f5b728e,bl
  41f178:	shl    DWORD PTR [ebx],0x4
  41f17b:	xlat   BYTE PTR ds:[ebx]
  41f17c:	loope  0x41f1d5
  41f17e:	leave  
  41f17f:	in     eax,0xc6
  41f181:	(bad)  
  41f182:	jecxz  0x41f1d1
  41f184:	(bad)  
  41f186:	inc    ebp
  41f187:	sar    BYTE PTR [eax],0x60
  41f18a:	jmp    0x9c29:0xc90e2cea
  41f191:	in     eax,0xb1
  41f193:	shr    ebx,0xad
  41f196:	int3   
  41f197:	call   0x4c799020
  41f19c:	xchg   esi,eax
  41f19d:	mov    eax,ds:0xd8289221
  41f1a2:	ds scas eax,DWORD PTR es:[edi]
  41f1a4:	pop    ecx
  41f1a5:	sub    DWORD PTR [ecx*4-0x5f42c179],ebx
  41f1ac:	xchg   edi,eax
  41f1ad:	adc    DWORD PTR [eax],ebp
  41f1af:	lds    edi,FWORD PTR [ebx-0x25f7cf4d]
  41f1b5:	sbb    cl,dh
  41f1b7:	out    0x2e,eax
  41f1b9:	fisub  WORD PTR ds:0x3fa8e31c
  41f1bf:	ret    
  41f1c0:	scas   al,BYTE PTR es:[edi]
  41f1c1:	jmp    0x533c:0x50d15a9e
  41f1c8:	in     eax,0xd4
  41f1ca:	pop    ss
  41f1cb:	sub    eax,0xa3027d9a
  41f1d0:	int    0x30
  41f1d2:	push   ebp
  41f1d3:	aaa    
  41f1d4:	fnstcw WORD PTR ds:0xafc8b66a
  41f1da:	pop    ss
  41f1db:	inc    esp
  41f1dc:	int3   
  41f1dd:	xchg   BYTE PTR [ebx+0x61],cl
  41f1e0:	aaa    
  41f1e1:	push   edi
  41f1e2:	repnz das 
  41f1e4:	les    ecx,FWORD PTR [esi]
  41f1e6:	retf   
  41f1e7:	out    dx,al
  41f1e8:	mov    ecx,0x6990efcc
  41f1ed:	iret   
  41f1ee:	lds    edi,FWORD PTR [esi-0x114ed7f3]
  41f1f4:	nop
  41f1f5:	lahf   
  41f1f6:	and    bl,BYTE PTR [eax-0x26ee4f38]
  41f1fc:	addr16 jmp 0x4963:0x3b3b9531
  41f204:	daa    
  41f205:	add    ecx,ebp
  41f207:	test   eax,0x73c0d2a8
  41f20c:	sub    dh,bh
  41f20e:	rol    BYTE PTR [edi+ebx*1+0x4],0x87
  41f213:	mov    ds:0x4af036c9,al
  41f218:	pusha  
  41f219:	je     0x41f288
  41f21b:	test   eax,0xc29b1fe9
  41f221:	mov    bh,0xf
  41f223:	nop
  41f224:	test   DWORD PTR [edx+0x69b4d718],eax
  41f22a:	pop    edi
  41f22b:	pop    edi
  41f22c:	ror    BYTE PTR [eax+0x36e21462],1
  41f232:	mov    bh,0x5e
  41f234:	push   ds
  41f235:	pop    edi
  41f236:	(bad)  
  41f237:	sti    
  41f238:	jns    0x41f1bb
  41f23a:	lods   al,BYTE PTR ds:[esi]
  41f23b:	fisubr DWORD PTR [ecx+0x13815fce]
  41f241:	lock iret 
  41f243:	stc    
  41f244:	outs   dx,DWORD PTR ds:[esi]
  41f245:	xchg   BYTE PTR [edx-0x4e],bh
  41f248:	or     DWORD PTR [edi],ecx
  41f24a:	fimul  DWORD PTR [eax+edi*8]
  41f24d:	pusha  
  41f24e:	scas   eax,DWORD PTR es:[edi]
  41f24f:	(bad)  
  41f250:	aas    
  41f251:	dec    edx
  41f252:	arpl   WORD PTR [eax-0x1bd05ba7],si
  41f258:	ret    
  41f259:	mov    ah,0x84
  41f25b:	push   eax
  41f25c:	ror    DWORD PTR [ebx-0x1f],cl
  41f25f:	jne    0x41f224
  41f261:	push   edx
  41f262:	outs   dx,DWORD PTR ds:[esi]
  41f263:	imul   eax,DWORD PTR [ebx-0x2],0xa16a9443
  41f26a:	test   eax,0x17c813ef
  41f26f:	pop    ecx
  41f270:	aam    0xe4
  41f272:	cmp    al,0xd2
  41f274:	lock jecxz 0x41f24e
  41f277:	into   
  41f278:	ror    BYTE PTR [ebx-0x3e3ad388],0x58
  41f27f:	fld    DWORD PTR [ebx]
  41f281:	mov    ebp,0x91ca265
  41f286:	cmp    edi,DWORD PTR [edx]
  41f288:	mov    esi,0x5904c998
  41f28d:	dec    edi
  41f28e:	test   eax,0x6e04a2f5
  41f293:	test   eax,0x18b88c23
  41f298:	xchg   edx,eax
  41f299:	fwait
  41f29a:	cmp    DWORD PTR [eax-0x5f],0xa8678fb0
  41f2a1:	js     0x41f273
  41f2a3:	mov    ecx,0xa4979c5a
  41f2a8:	mov    WORD PTR [edx],?
  41f2aa:	aad    0x39
  41f2ac:	in     al,dx
  41f2ad:	xchg   ebx,eax
  41f2ae:	adc    ebx,DWORD PTR [eax]
  41f2b0:	xchg   BYTE PTR [esi-0xf8b8ad],bh
  41f2b6:	lods   eax,DWORD PTR ds:[esi]
  41f2b7:	jmp    DWORD PTR [ecx-0x7f]
  41f2ba:	mov    cl,0xa9
  41f2bc:	sbb    eax,DWORD PTR [edi+0x4c]
  41f2bf:	adc    al,0xf6
  41f2c1:	mov    ch,0x17
  41f2c3:	jmp    0x41f2b3
  41f2c5:	enter  0xb545,0xda
  41f2c9:	mov    dl,0x35
  41f2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2cc:	mov    cl,0x4b
  41f2ce:	inc    ebx
  41f2cf:	cs test al,0x7
  41f2d2:	repz push eax
  41f2d4:	xor    BYTE PTR [ebp+0x4c],al
  41f2d7:	cmp    al,0x5e
  41f2d9:	xchg   si,ax
  41f2db:	push   esp
  41f2dc:	mov    WORD PTR [ecx],gs
  41f2de:	pop    ebx
  41f2df:	xor    DWORD PTR [eax],ebp
  41f2e1:	call   DWORD PTR [eax-0x37]
  41f2e4:	pop    ebp
  41f2e5:	popf   
  41f2e6:	(bad)  
  41f2e7:	test   al,0x54
  41f2e9:	mov    edi,0x1fbe2a5
  41f2ee:	push   edi
  41f2ef:	imul   esp,DWORD PTR [ecx+0x15f6f157],0xe3cfdf2a
  41f2f9:	lock gs jmp 0x41f2b1
  41f2fd:	rol    DWORD PTR ds:0x4b5c873a,1
  41f303:	pop    es
  41f304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f305:	js     0x41f2bf
  41f307:	in     al,dx
  41f308:	inc    ecx
  41f309:	repz adc bh,BYTE PTR [ecx-0x3]
  41f30d:	aaa    
  41f30e:	and    esp,eax
  41f310:	fcomi  st,st(2)
  41f312:	fsub   QWORD PTR [edi+eax*1-0x69e75023]
  41f319:	or     eax,0x369c59f6
  41f31e:	test   ecx,ebx
  41f320:	out    dx,al
  41f321:	xchg   esi,eax
  41f322:	rol    DWORD PTR [edi-0xe32d623],1
  41f328:	sub    DWORD PTR [ebx-0x72],esp
  41f32b:	sbb    eax,0x40434225
  41f330:	mov    edi,0xafa349da
  41f335:	pusha  
  41f336:	dec    ebp
  41f337:	call   0xfef8c799
  41f33c:	push   ss
  41f33d:	xchg   ebp,eax
  41f33e:	fstp   TBYTE PTR [edi]
  41f340:	dec    esi
  41f341:	xchg   ebx,eax
  41f342:	push   es
  41f343:	gs cld 
  41f345:	cwde   
  41f346:	pop    ecx
  41f347:	cmp    ecx,DWORD PTR [ebx]
  41f349:	push   ecx
  41f34a:	push   esp
  41f34b:	pop    eax
  41f34c:	leave  
  41f34d:	push   cs
  41f34e:	iret   
  41f34f:	ja     0x41f3c4
  41f351:	ret    0x454a
  41f354:	jp     0x41f3bc
  41f356:	shr    al,0x86
  41f359:	jp     0x41f3b0
  41f35b:	out    0x59,al
  41f35d:	fcmovbe st,st(4)
  41f35f:	and    bh,BYTE PTR [edi]
  41f361:	add    eax,0x2518c417
  41f366:	test   BYTE PTR [edx-0x1b273fa4],al
  41f36c:	fld    TBYTE PTR [esi]
  41f36e:	enter  0xda11,0x8
  41f372:	sub    al,0xc
  41f374:	push   edx
  41f375:	rcr    BYTE PTR [esi-0x2c2e23d],cl
  41f37b:	xlat   BYTE PTR ds:[ebx]
  41f37c:	sub    dh,BYTE PTR ds:0x43065782
  41f382:	push   edx
  41f383:	xor    cl,BYTE PTR ds:0x52e04527
  41f389:	lock iret 
  41f38b:	(bad)  
  41f38c:	test   al,0x11
  41f38e:	dec    ebx
  41f38f:	rol    DWORD PTR ds:0x43324422,1
  41f395:	cmc    
  41f396:	data16 scas al,BYTE PTR es:[edi]
  41f398:	pop    edi
  41f399:	ss xchg esp,ebx
  41f39c:	sbb    DWORD PTR [esi],eax
  41f39e:	iret   
  41f39f:	mov    ch,0x59
  41f3a1:	bound  esp,QWORD PTR [ebx+0x4a]
  41f3a4:	inc    edi
  41f3a5:	stc    
  41f3a6:	imul   edx,DWORD PTR [ecx],0x6fb6d11
  41f3ac:	shl    BYTE PTR [ecx+0x2eb6505e],1
  41f3b2:	aad    0xb2
  41f3b4:	or     bl,BYTE PTR [eax-0x4f24a9f7]
  41f3ba:	pop    ds
  41f3bb:	dec    edx
  41f3bc:	data16 adc cl,dl
  41f3bf:	adc    DWORD PTR [esi+0x620b531],edi
  41f3c5:	je     0x41f3a6
  41f3c7:	and    cl,BYTE PTR [ebx]
  41f3c9:	and    al,0x3
  41f3cb:	dec    esi
  41f3cc:	ret    
  41f3cd:	rcr    dh,1
  41f3cf:	jl     0x41f379
  41f3d1:	test   al,0x1f
  41f3d3:	jmp    0x41f39d
  41f3d5:	scas   al,BYTE PTR es:[edi]
  41f3d6:	and    al,0xff
  41f3d8:	arpl   WORD PTR [edx+ebx*4-0x7b9bf8db],di
  41f3df:	pop    es
  41f3e0:	sbb    bh,ah
  41f3e2:	add    al,0x88
  41f3e4:	repz hlt 
  41f3e6:	faddp  st(2),st
  41f3e8:	sbb    al,0xa0
  41f3ea:	bound  eax,QWORD PTR [eax+ecx*4]
  41f3ed:	shl    esi,cl
  41f3ef:	pop    ecx
  41f3f0:	dec    edi
  41f3f1:	lods   al,BYTE PTR ds:[esi]
  41f3f2:	mov    ebx,0xa7d3323b
  41f3f7:	loope  0x41f44d
  41f3f9:	push   ss
  41f3fa:	(bad)  
  41f3fc:	pop    esp
  41f3fd:	imul   eax,DWORD PTR [ecx-0x3d99b33],0x52640fe8
  41f407:	int3   
  41f408:	mov    WORD PTR [ecx],es
  41f40a:	out    0x20,al
  41f40c:	push   ds
  41f40d:	cli    
  41f40e:	push   esi
  41f40f:	adc    DWORD PTR [edi-0x3ac711b6],esp
  41f415:	mov    esi,edx
  41f417:	mov    eax,ds:0x5cbe1c7b
  41f41c:	dec    esp
  41f41d:	adc    ecx,DWORD PTR [ecx+0x6ae12bcc]
  41f423:	sub    eax,0xf0dc1cb7
  41f428:	out    dx,eax
  41f429:	mov    ebp,0xd60efd0
  41f42e:	push   0x21122534
  41f433:	cmp    ah,BYTE PTR [eax]
  41f435:	(bad)
  41f439:	jle    0x41f3c9
  41f43b:	scas   al,BYTE PTR es:[edi]
  41f43c:	or     al,0x3b
  41f43e:	aaa    
  41f43f:	scas   eax,DWORD PTR es:[edi]
  41f440:	sbb    al,0xcb
  41f442:	inc    esi
  41f443:	dec    esp
  41f444:	idiv   esp
  41f446:	pop    edi
  41f447:	mov    dl,0x4c
  41f449:	push   edx
  41f44a:	daa    
  41f44b:	xchg   edi,eax
  41f44c:	neg    DWORD PTR [edx+0x2ee80fd5]
  41f452:	push   esi
  41f453:	cmp    esi,edi
  41f455:	inc    edi
  41f456:	ret    0x7a53
  41f459:	stos   DWORD PTR es:[edi],eax
  41f45a:	xchg   edi,ecx
  41f45c:	ja     0x41f403
  41f45e:	push   es
  41f45f:	nop
  41f460:	pusha  
  41f461:	test   al,0xc3
  41f463:	out    0x16,al
  41f465:	shr    ebp,0xe0
  41f468:	dec    esp
  41f469:	or     DWORD PTR [edx-0x79],edx
  41f46c:	sub    esp,esi
  41f46e:	(bad)  
  41f46f:	sbb    ebp,ebx
  41f471:	(bad)
  41f474:	lahf   
  41f475:	inc    ebx
  41f476:	sub    DWORD PTR [esi+0x16],esi
  41f479:	adc    eax,0x6d
  41f47c:	(bad)  
  41f47d:	sub    edx,DWORD PTR [ebx+0x71974c91]
  41f483:	pop    ebx
  41f484:	xchg   esi,eax
  41f485:	sahf   
  41f486:	jmp    0x41f4d3
  41f488:	sbb    BYTE PTR [edx],al
  41f48a:	cwde   
  41f48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f48c:	adc    DWORD PTR [eax],0x18
  41f48f:	jp     0x41f49c
  41f491:	pusha  
  41f492:	fsubr  DWORD PTR [eax]
  41f494:	mov    ds:0x59f753f9,al
  41f499:	int3   
  41f49a:	mov    cl,0xce
  41f49c:	ins    BYTE PTR es:[edi],dx
  41f49d:	sub    edx,DWORD PTR [edx]
  41f49f:	mov    ebx,0x62565a08
  41f4a4:	sub    eax,0x14971ca4
  41f4a9:	mov    ecx,fs
  41f4ab:	pop    ds
  41f4ac:	popf   
  41f4ad:	jg     0x41f4c3
  41f4af:	and    ebx,DWORD PTR [ebx+0x74]
  41f4b2:	push   ss
  41f4b3:	ret    0x473d
  41f4b6:	mul    DWORD PTR [eax]
  41f4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4b9:	mov    ch,0x1d
  41f4bb:	jne    0x41f4a4
  41f4bd:	enter  0x6055,0x4d
  41f4c1:	add    dh,BYTE PTR [eax+ebp*4+0x618ef5fb]
  41f4c8:	pop    ebp
  41f4c9:	mov    BYTE PTR ds:0x191e572e,dl
  41f4cf:	stos   BYTE PTR es:[edi],al
  41f4d0:	xchg   ebp,eax
  41f4d1:	inc    ecx
  41f4d2:	not    DWORD PTR [ecx]
  41f4d4:	test   eax,0x9dcb369e
  41f4d9:	int    0x1c
  41f4db:	inc    esi
  41f4dc:	add    DWORD PTR [eax+0x4ad77db7],edi
  41f4e2:	push   cs
  41f4e3:	dec    esi
  41f4e4:	lds    ecx,FWORD PTR [edi]
  41f4e6:	xchg   edx,eax
  41f4e7:	inc    edx
  41f4e8:	add    DWORD PTR es:[ecx-0x7a],ebx
  41f4ec:	pusha  
  41f4ed:	cld    
  41f4ee:	aad    0xc7
  41f4f0:	dec    edi
  41f4f1:	adc    dh,cl
  41f4f3:	xchg   edi,eax
  41f4f4:	push   ds
  41f4f5:	clc    
  41f4f6:	out    0x5c,al
  41f4f8:	mov    eax,0x625d98e1
  41f4fd:	in     al,0xa5
  41f4ff:	or     ebp,DWORD PTR fs:[edx]
  41f502:	pop    esp
  41f503:	inc    edi
  41f504:	add    BYTE PTR [ebp+0x1c],bh
  41f507:	aaa    
  41f508:	(bad)  
  41f509:	jmp    0xd8427ebb
  41f50e:	leave  
  41f50f:	aas    
  41f510:	or     ecx,DWORD PTR [ebx+0x61b71347]
  41f516:	rcl    DWORD PTR [ecx+ebx*1-0x1270f8ef],cl
  41f51d:	jmp    0x45d175dc
  41f522:	jae    0x41f4fe
  41f524:	js     0x41f4f5
  41f526:	imul   edi,DWORD PTR [eax],0xd21d4733
  41f52c:	repz retf 
  41f52e:	cmp    DWORD PTR [ebx],ecx
  41f530:	sbb    eax,0xd78e282a
  41f535:	inc    edi
  41f536:	mov    bh,0x22
  41f538:	sbb    al,0xb6
  41f53a:	cdq    
  41f53b:	sbb    edi,DWORD PTR [eax]
  41f53d:	jns    0x41f4eb
  41f53f:	inc    ebp
  41f540:	mov    ds:0xfca43a9f,eax
  41f545:	or     dl,BYTE PTR [edi-0x26]
  41f548:	out    dx,eax
  41f549:	xor    BYTE PTR [edi+ebp*2],0x42
  41f54d:	inc    esi
  41f54e:	mov    al,ds:0x62a77838
  41f553:	push   ecx
  41f554:	mov    ch,0xae
  41f556:	push   eax
  41f557:	or     al,0x81
  41f559:	loope  0x41f593
  41f55b:	xchg   bl,ch
  41f55d:	sbb    al,BYTE PTR [ecx+0x7dc9d33]
  41f563:	xchg   ebx,eax
  41f564:	leave  
  41f565:	inc    ecx
  41f566:	jle    0x41f51c
  41f568:	int3   
  41f569:	(bad)  
  41f56a:	pop    edx
  41f56b:	pop    ebp
  41f56c:	dec    esp
  41f56d:	push   ebx
  41f56e:	add    DWORD PTR ds:0x8124b9b3,0x5663b827
  41f578:	jmp    0x41f55d
  41f57a:	imul   edi,ebx,0xffffffb4
  41f57d:	pop    esp
  41f57e:	ret    
  41f57f:	mov    eax,ds:0xd452a883
  41f584:	or     ch,BYTE PTR [eax+0x34]
  41f587:	cmp    bl,bl
  41f589:	pop    esi
  41f58a:	xor    BYTE PTR [ebx-0xa],0x79
  41f58e:	sbb    DWORD PTR [ecx+0x30],0x3420b116
  41f595:	pop    ebp
  41f596:	imul   edi,DWORD PTR [eax],0xd
  41f599:	mov    edi,0x4c0a443d
  41f59e:	xchg   ebx,eax
  41f59f:	jmp    0x41f564
  41f5a1:	jge    0x41f52e
  41f5a3:	jnp    0x41f616
  41f5a5:	jbe    0x41f602
  41f5a7:	retf   
  41f5a8:	mov    al,0x21
  41f5aa:	mov    bh,0xe6
  41f5ac:	imul   ebp,DWORD PTR [ebx+0x63f14729],0x46a6fa4b
  41f5b6:	lods   eax,DWORD PTR ds:[esi]
  41f5b7:	mov    ds:0x369a8b6,al
  41f5bc:	xor    BYTE PTR [edx+ebx*4-0x4d78e0a5],dl
  41f5c3:	adc    al,0x36
  41f5c5:	adc    edi,DWORD PTR [esi-0x19]
  41f5c8:	xchg   esp,eax
  41f5c9:	jle    0x41f58f
  41f5cb:	mov    edx,0x27fa13fc
  41f5d0:	or     BYTE PTR [esi+0x6d],bh
  41f5d3:	inc    edi
  41f5d4:	ins    BYTE PTR es:[edi],dx
  41f5d5:	imul   ecx,DWORD PTR [edx-0x6d020a0],0xffffffe1
  41f5dc:	pop    ds
  41f5dd:	pop    esi
  41f5de:	pop    es
  41f5df:	dec    eax
  41f5e0:	lods   eax,DWORD PTR ds:[esi]
  41f5e1:	sbb    dl,bl
  41f5e3:	aas    
  41f5e4:	push   ebp
  41f5e5:	cvtpi2ps xmm5,mm2
  41f5e8:	loop   0x41f65d
  41f5ea:	imul   ecx,DWORD PTR ds:[ecx+0x41],0xae9865e9
  41f5f2:	loope  0x41f62f
  41f5f4:	stc    
  41f5f5:	mov    eax,0x4a589a8d
  41f5fa:	scas   al,BYTE PTR es:[edi]
  41f5fb:	xchg   ebp,eax
  41f5fc:	adc    BYTE PTR [edx+edi*4],0x4
  41f600:	jae    0x41f5a8
  41f602:	cmp    eax,0x808594ae
  41f607:	mov    cl,0x60
  41f609:	aas    
  41f60a:	mov    ah,0x17
  41f60c:	sbb    BYTE PTR [ecx+edx*4-0x5dd37ad5],ch
  41f613:	ret    
  41f614:	repnz in al,0x94
  41f617:	dec    eax
  41f618:	xchg   esp,eax
  41f619:	stos   BYTE PTR es:[edi],al
  41f61a:	push   0xffffffcd
  41f61c:	push   esi
  41f61d:	jno    0x41f5d9
  41f61f:	push   ds
  41f620:	lahf   
  41f621:	test   al,0x1a
  41f623:	jns    0x41f5a6
  41f625:	ja     0x41f62b
  41f627:	push   ss
  41f628:	adc    dl,bl
  41f62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f62b:	sub    al,0x66
  41f62d:	xchg   ecx,eax
  41f62e:	pop    DWORD PTR [ecx-0x4d4fa52f]
  41f634:	out    0xd6,eax
  41f636:	jl     0x41f64f
  41f638:	test   edx,esi
  41f63a:	out    0xf3,al
  41f63c:	add    eax,0x3fe71df4
  41f641:	mov    WORD PTR [eax-0x5a4cb2f7],cs
  41f647:	inc    esi
  41f648:	outs   dx,BYTE PTR ds:[esi]
  41f649:	cmp    eax,0x1421b1dd
  41f64e:	inc    ecx
  41f64f:	inc    ecx
  41f650:	or     DWORD PTR [edx-0x79cafa99],ecx
  41f656:	cmp    ebx,DWORD PTR [ebx-0x42]
  41f659:	jle    0x41f6a5
  41f65b:	fidiv  WORD PTR [esi-0x5b]
  41f65e:	and    bl,cl
  41f660:	into   
  41f661:	cli    
  41f662:	mov    edi,0xc6fbf7e9
  41f667:	xchg   ebp,eax
  41f668:	mov    fs,WORD PTR [ebx]
  41f66a:	out    dx,eax
  41f66b:	mov    bl,0x9
  41f66d:	mov    ah,0xc6
  41f66f:	in     al,0x79
  41f671:	out    dx,al
  41f672:	cmp    dl,BYTE PTR [esi-0x8]
  41f675:	xchg   ecx,eax
  41f676:	daa    
  41f677:	test   eax,0xa02da36d
  41f67c:	push   edx
  41f67d:	push   esp
  41f67e:	mov    esi,0x85b560c2
  41f683:	or     BYTE PTR [ebx+0x4b],bl
  41f686:	pop    esp
  41f687:	hlt    
  41f688:	cmp    esi,DWORD PTR [edx]
  41f68a:	jge    0x41f6a9
  41f68c:	fdiv   DWORD PTR [edi-0x3598c0cc]
  41f692:	retf   0x1be5
  41f695:	and    ebx,DWORD PTR [edi+0xf8f050c]
  41f69b:	ss aad 0x2d
  41f69e:	xchg   edx,eax
  41f69f:	mov    ah,0xc7
  41f6a1:	sub    DWORD PTR [eax],esi
  41f6a3:	mov    ebp,0x60f427b8
  41f6a8:	mov    WORD PTR [esp+esi*4+0x1],gs
  41f6ac:	or     al,0xaf
  41f6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6af:	ds in  al,dx
  41f6b1:	push   ebx
  41f6b2:	and    eax,DWORD PTR ds:0xb45cde34
  41f6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6b9:	mov    eax,0x5f720bdb
  41f6be:	cs pop ebx
  41f6c0:	hlt    
  41f6c1:	sbb    esi,DWORD PTR [esi-0x5e05f280]
  41f6c7:	ins    BYTE PTR es:[edi],dx
  41f6c8:	xchg   esi,eax
  41f6c9:	popf   
  41f6ca:	hlt    
  41f6cb:	xchg   ebp,eax
  41f6cc:	inc    ebx
  41f6cd:	in     al,0xce
  41f6cf:	and    dh,BYTE PTR [ebp-0x64]
  41f6d2:	repz xlat BYTE PTR ds:[ebx]
  41f6d4:	jno    0x41f750
  41f6d6:	dec    eax
  41f6d7:	inc    esi
  41f6d8:	test   DWORD PTR [edx],edx
  41f6da:	push   ds
  41f6db:	cmp    BYTE PTR [ebx-0x6b],0x98
  41f6df:	mov    DWORD PTR [edx+esi*8+0xf],esp
  41f6e3:	sti    
  41f6e4:	or     DWORD PTR [eax-0x77],ebx
  41f6e7:	test   DWORD PTR [ebx],esi
  41f6e9:	retf   0x288e
  41f6ec:	lods   eax,DWORD PTR ds:[esi]
  41f6ed:	(bad)  
  41f6ef:	fld    DWORD PTR [ebx]
  41f6f1:	mov    eax,0x6b270fce
  41f6f6:	int3   
  41f6f7:	outs   dx,BYTE PTR ds:[esi]
  41f6f8:	imul   esp,edi,0x974a26ab
  41f6fe:	push   0x50
  41f700:	jae    0x41f723
  41f702:	scas   eax,DWORD PTR es:[edi]
  41f703:	add    eax,0x64398ffd
  41f708:	xchg   dl,ah
  41f70a:	nop
  41f70b:	fsubr  QWORD PTR [ecx]
  41f70d:	test   eax,0x42289e0b
  41f712:	adc    al,0xd7
  41f714:	int3   
  41f715:	fwait
  41f716:	push   ecx
  41f717:	enter  0x928b,0x25
  41f71b:	mov    dh,0x3e
  41f71d:	test   al,0xfb
  41f71f:	(bad)
  41f722:	xor    al,0xa0
  41f724:	sub    DWORD PTR [edx],0x314de78c
  41f72a:	push   ebp
  41f72b:	shl    DWORD PTR [esi+eiz*4+0x6b],1
  41f72f:	pushf  
  41f730:	xchg   edi,eax
  41f731:	adc    eax,0x3289c129
  41f736:	xchg   edi,eax
  41f737:	xor    BYTE PTR [ebp-0x7f],bl
  41f73a:	push   ss
  41f73b:	mov    al,0xf7
  41f73d:	imul   BYTE PTR ds:0x3ad2f67b
  41f743:	push   eax
  41f744:	and    ah,BYTE PTR [ebp-0x44]
  41f747:	call   0x7eb9d5e8
  41f74c:	mov    al,ds:0xdb1bd2e
  41f751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f752:	int    0xc8
  41f754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f755:	sbb    edx,eax
  41f757:	scas   eax,DWORD PTR es:[edi]
  41f758:	xor    BYTE PTR ds:0x4e3e38f6,cl
  41f75e:	in     eax,dx
  41f75f:	xor    ch,BYTE PTR [edx-0x50]
  41f762:	fidivr WORD PTR [edi+0xba8b0db]
  41f768:	retf   0x616a
  41f76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f76c:	cmp    al,0x92
  41f76e:	pusha  
  41f76f:	mov    ds:0xacaf414b,al
  41f774:	fcomip st,st(2)
  41f776:	test   al,0x7e
  41f778:	xlat   BYTE PTR ds:[ebx]
  41f779:	loop   0x41f7b1
  41f77b:	cmp    eax,0xe037cd93
  41f780:	pop    eax
  41f781:	(bad)  
  41f783:	dec    edx
  41f784:	sahf   
  41f785:	enter  0xa98e,0xf9
  41f789:	cs cdq 
  41f78b:	repnz sub al,BYTE PTR [esi+0x5c]
  41f78f:	int3   
  41f790:	mov    ch,0x35
  41f792:	jo     0x41f7f7
  41f794:	mov    ah,0xb4
  41f796:	adc    esi,DWORD PTR [ecx]
  41f798:	jge    0x41f76f
  41f79a:	out    0xe7,al
  41f79c:	push   0xc6ce8eef
  41f7a1:	scas   eax,DWORD PTR es:[edi]
  41f7a2:	mov    eax,eax
  41f7a4:	out    dx,al
  41f7a5:	or     DWORD PTR [ecx*8-0x77a88a9a],esp
  41f7ac:	push   DWORD PTR [esi+ebx*8-0x37ee1706]
  41f7b3:	inc    edi
  41f7b4:	jnp    0x41f7ba
  41f7b6:	ret    0xbbbf
  41f7b9:	jb     0x41f7ac
  41f7bb:	add    DWORD PTR [ebx+0x582317e4],edx
  41f7c1:	or     BYTE PTR [ebp+0x7b],bl
  41f7c4:	xor    BYTE PTR [eax+0xc],dl
  41f7c7:	adc    esp,DWORD PTR [edx+0x5cde1672]
  41f7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ce:	and    ah,BYTE PTR [ecx]
  41f7d0:	and    al,0xd7
  41f7d2:	mov    ecx,0x3d517a61
  41f7d7:	add    BYTE PTR [ebx],bl
  41f7d9:	cli    
  41f7da:	and    eax,0xf453b6a6
  41f7df:	adc    al,0x5e
  41f7e1:	xor    DWORD PTR ds:0xdea90055,0xffffff88
  41f7e8:	(bad)  
  41f7e9:	jno    0x41f7a3
  41f7eb:	(bad)  [edi-0x2]
  41f7ee:	mov    al,0x17
  41f7f0:	popa   
  41f7f1:	scas   al,BYTE PTR es:[edi]
  41f7f2:	xor    edx,DWORD PTR [edx-0xd98c6dd]
  41f7f8:	test   DWORD PTR [ebp+0x26],ebx
  41f7fb:	jmp    0x41f783
  41f7fd:	xchg   ecx,eax
  41f7fe:	add    ah,dh
  41f800:	adc    al,BYTE PTR [esi]
  41f802:	jae    0x41f7bb
  41f804:	sub    al,0xb5
  41f806:	inc    esi
  41f807:	pop    esp
  41f808:	jbe    0x41f87e
  41f80a:	ins    BYTE PTR es:[edi],dx
  41f80b:	hlt    
  41f80c:	xchg   ecx,eax
  41f80d:	loop   0x41f884
  41f80f:	cmp    DWORD PTR [esi+0x293c9bed],0xffffff8a
  41f816:	adc    eax,0xa914a0d6
  41f81b:	add    ebp,DWORD PTR [ebp-0x11]
  41f81e:	in     eax,dx
  41f81f:	mov    bl,BYTE PTR [ebx-0x2df2790d]
  41f825:	jb     0x41f7a7
  41f827:	aad    0x7f
  41f829:	gs pop edi
  41f82b:	mov    al,ds:0x64f0a9d
  41f830:	mov    esp,0x123d184
  41f835:	push   eax
  41f836:	xor    edi,DWORD PTR fs:[edx+0x71]
  41f83a:	push   ebp
  41f83b:	inc    ecx
  41f83c:	shl    DWORD PTR [edi+ebx*8],cl
  41f83f:	adc    al,0x62
  41f841:	repz ror ah,0x56
  41f845:	push   esi
  41f846:	retf   
  41f847:	jbe    0x41f8ad
  41f849:	jno    0x41f84b
  41f84b:	add    ecx,ebx
  41f84d:	aad    0x87
  41f84f:	jmp    0x6f6a38b
  41f854:	icebp  
  41f855:	inc    ebp
  41f856:	adc    al,0x63
  41f858:	adc    BYTE PTR [edx*4+0x2af499c6],ah
  41f85f:	pop    es
  41f860:	and    ebx,esi
  41f862:	pop    ss
  41f863:	add    bh,BYTE PTR [ebp-0x4b36dbd7]
  41f869:	mov    ch,BYTE PTR [edx-0xc]
  41f86c:	int3   
  41f86d:	loopne 0x41f884
  41f86f:	inc    esi
  41f870:	retf   0x76f5
  41f873:	cdq    
  41f874:	lds    ebx,FWORD PTR [esi]
  41f876:	dec    esp
  41f877:	jl     0x41f817
  41f879:	fld    QWORD PTR [edi-0x62]
  41f87c:	inc    ecx
  41f87d:	add    esp,ebx
  41f87f:	mov    edi,0x1d021116
  41f884:	mov    ds:0x7fdb5e0b,al
  41f889:	jmp    0x399f:0x54219b4f
  41f890:	sahf   
  41f891:	enter  0xd343,0x8b
  41f895:	(bad)  
  41f896:	cmp    ah,0x6f
  41f899:	sbb    BYTE PTR [ebx-0x16731266],bl
  41f89f:	or     eax,DWORD PTR [eax]
  41f8a1:	xchg   edx,eax
  41f8a2:	retf   0x4fb8
  41f8a5:	lahf   
  41f8a6:	test   al,0x12
  41f8a8:	dec    esi
  41f8a9:	inc    eax
  41f8aa:	out    0x16,eax
  41f8ac:	test   DWORD PTR [ecx],0x622d085b
  41f8b2:	dec    edi
  41f8b3:	xchg   esp,eax
  41f8b4:	jmp    0x23e6:0xa3cc888
  41f8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8bc:	mov    es,WORD PTR [ebx-0x2596dbf7]
  41f8c2:	and    DWORD PTR [eax-0x38],ebx
  41f8c5:	pop    es
  41f8c6:	lods   eax,DWORD PTR ds:[esi]
  41f8c7:	xchg   esp,eax
  41f8c8:	dec    ecx
  41f8c9:	addr16 mov esp,0xf66c5589
  41f8cf:	hlt    
  41f8d0:	mov    bh,0xc8
  41f8d2:	imul   edi,DWORD PTR [esi-0x5a23b975],0x1ee2f252
  41f8dc:	lahf   
  41f8dd:	add    eax,0x382c330f
  41f8e2:	sub    eax,0xa044b74e
  41f8e7:	xchg   DWORD PTR [ebx+0x1b320833],ebp
  41f8ed:	sub    al,0xc0
  41f8ef:	push   ebx
  41f8f0:	pop    edi
  41f8f1:	push   esi
  41f8f2:	hlt    
  41f8f3:	stc    
  41f8f4:	mov    ds:0x7fec4de4,al
  41f8f9:	sbb    eax,0x3324c590
  41f8fe:	xor    DWORD PTR [edx+ecx*1-0x39],ecx
  41f902:	xor    al,BYTE PTR [eax-0x82e294c]
  41f908:	clc    
  41f909:	xor    BYTE PTR [eax+0x3ad40f28],dl
  41f90f:	div    esp
  41f911:	or     bh,BYTE PTR [edx-0x236f44ad]
  41f917:	xchg   ecx,eax
  41f918:	or     ecx,DWORD PTR [eax-0x32]
  41f91b:	(bad)  
  41f91d:	push   0x25
  41f91f:	cmp    ebp,eax
  41f921:	inc    esi
  41f922:	imul   eax,esp,0x1d32d2d2
  41f928:	inc    ebp
  41f929:	dec    ebx
  41f92a:	pusha  
  41f92b:	adc    dh,BYTE PTR [esi-0x54]
  41f92e:	pop    ss
  41f92f:	mov    ebx,0x1001fccb
  41f934:	jmp    0xed95:0xce8b7f72
  41f93b:	pop    ss
  41f93c:	sub    ebp,DWORD PTR [eax-0x4a]
  41f93f:	adc    DWORD PTR [edi],edi
  41f941:	sub    ebx,DWORD PTR [ecx]
  41f943:	mov    dh,0x3d
  41f945:	inc    ecx
  41f946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f947:	lods   eax,DWORD PTR ds:[esi]
  41f948:	or     esp,DWORD PTR [edx-0x38fa360a]
  41f94e:	mov    bh,0x56
  41f950:	jg     0x41f9c4
  41f952:	leave  
  41f953:	mov    al,ds:0xd9f306a4
  41f958:	test   al,0xec
  41f95a:	mov    edx,0x6d230bfc
  41f95f:	std    
  41f960:	(bad)  
  41f961:	jmp    0xfded:0xe7f811ee
  41f968:	jmp    0xce18:0x6d415016
  41f96f:	das    
  41f970:	lock dec ebp
  41f972:	jge    0x41f9ab
  41f974:	sub    esi,0x5f
  41f977:	jae    0x41f963
  41f979:	sub    DWORD PTR ds:0xe63597d9,eax
  41f97f:	fist   DWORD PTR ss:[edi+0x12c4c8b7]
  41f986:	loopne 0x41f967
  41f988:	cli    
  41f989:	pushf  
  41f98a:	mov    cl,0x80
  41f98c:	rol    ebp,0x54
  41f98f:	lods   eax,DWORD PTR ds:[esi]
  41f990:	mov    cl,0xb8
  41f992:	xchg   BYTE PTR [edx+0x7a],bh
  41f995:	or     cl,BYTE PTR [edx+0x360d114c]
  41f99b:	add    eax,0x2f23ae49
  41f9a0:	xchg   edx,eax
  41f9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9a2:	ins    DWORD PTR es:[edi],dx
  41f9a3:	mov    edx,0x95c9cf2b
  41f9a8:	mov    ebp,0xbde7eed3
  41f9ad:	lock sub BYTE PTR [ebx+ebx*1+0x1141eed1],bl
  41f9b5:	xor    esp,edi
  41f9b7:	cmp    DWORD PTR [edx-0x7903a883],ebx
  41f9bd:	add    bl,dh
  41f9bf:	push   ss
  41f9c0:	xor    eax,0x1cd612ca
  41f9c5:	adc    dl,BYTE PTR [edx+ebp*2-0x6f0f0820]
  41f9cc:	mov    bh,0xa8
  41f9ce:	and    DWORD PTR [eax+0x4d],esi
  41f9d1:	push   esi
  41f9d3:	dec    edx
  41f9d4:	test   DWORD PTR [ecx+0x5ba19d6],esp
  41f9da:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f9dc:	js     0x41f9c6
  41f9de:	and    dh,BYTE PTR [edx+0x5b]
  41f9e1:	out    0x73,eax
  41f9e3:	sar    ah,cl
  41f9e5:	jns    0x41f994
  41f9e7:	dec    edi
  41f9e8:	je     0x41f972
  41f9ea:	pop    ebp
  41f9eb:	mov    ds:0xa723aad5,al
  41f9f0:	cmp    edi,DWORD PTR [edi+0x7e76f52c]
  41f9f6:	mov    ds:0xc2b5357d,eax
  41f9fb:	push   eax
  41f9fc:	fcomp  st(2)
  41f9fe:	xchg   edi,eax
  41f9ff:	arpl   WORD PTR [ecx+0x51],sp
  41fa02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa03:	pop    ds
  41fa04:	aaa    
  41fa05:	inc    esp
  41fa06:	add    eax,0x6a9c7bf2
  41fa0b:	inc    edx
  41fa0c:	repnz out dx,al
  41fa0e:	fs int 0x83
  41fa11:	push   ebx
  41fa12:	and    dl,ch
  41fa14:	and    eax,0xbd22cc2b
  41fa19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa1a:	sub    BYTE PTR [ecx-0x7f18da13],0xa9
  41fa21:	popa   
  41fa22:	add    bl,dh
  41fa24:	ins    BYTE PTR es:[edi],dx
  41fa25:	jl     0x41fa83
  41fa27:	xchg   edx,eax
  41fa28:	xor    DWORD PTR [esi-0x6b],ebx
  41fa2b:	pop    edi
  41fa2c:	call   0xd2b9:0x1127fda2
  41fa33:	jo     0x5b98230a
  41fa39:	ftst   
  41fa3b:	pop    esp
  41fa3c:	pop    ebp
  41fa3d:	std    
  41fa3e:	sbb    dh,BYTE PTR [esi+ebx*4+0x534bbb0]
  41fa45:	or     DWORD PTR [ebx+0x19],esp
  41fa48:	xor    DWORD PTR [esi+eiz*4],0x29674071
  41fa4f:	stos   DWORD PTR es:[edi],eax
  41fa50:	stos   BYTE PTR es:[edi],al
  41fa51:	fisttp WORD PTR [edx-0x54]
  41fa54:	sahf   
  41fa55:	jns    0x41fa48
  41fa57:	imul   esp,edx,0x736c7077
  41fa5d:	jne    0x41fa20
  41fa5f:	sahf   
  41fa60:	sbb    al,0xa8
  41fa62:	cdq    
  41fa63:	jmp    0x41fadd
  41fa65:	es lahf 
  41fa67:	inc    edx
  41fa68:	cdq    
  41fa69:	mov    eax,ds:0x4306cb62
  41fa6e:	call   0xeede58c1
  41fa73:	and    eax,0x95b70fdf
  41fa78:	cmp    DWORD PTR [edi+ebp*1],esi
  41fa7b:	sub    DWORD PTR [ebp-0x47],ebx
  41fa7e:	mov    ch,BYTE PTR [edi+0x15]
  41fa81:	fwait
  41fa82:	sbb    BYTE PTR [ebx],0xad
  41fa85:	shr    esp,1
  41fa87:	or     esp,DWORD PTR fs:[ebx+esi*1+0x79572ac3]
  41fa8f:	mov    dh,0x6a
  41fa91:	shl    BYTE PTR [edi+0x49],cl
  41fa94:	jmp    0x41fb02
  41fa96:	(bad)  
  41fa97:	and    bh,BYTE PTR [ebx-0x34fa21f3]
  41fa9d:	(bad)  
  41fa9e:	retf   
  41fa9f:	inc    edx
  41faa0:	mov    al,0x58
  41faa2:	cs jne 0x41faa5
  41faa5:	iret   
  41faa6:	(bad)  
  41faa7:	pop    ebx
  41faa8:	retf   
  41faa9:	shl    BYTE PTR [ebp+0x2328bc30],0x23
  41fab0:	mov    bh,ch
  41fab2:	idiv   DWORD PTR [ecx+0x25]
  41fab5:	(bad)  
  41fab6:	sub    al,0xce
  41fab8:	add    DWORD PTR [ecx],esp
  41faba:	rcl    BYTE PTR [esi+0x47],0x25
  41fabe:	lods   al,BYTE PTR ds:[esi]
  41fabf:	inc    edi
  41fac0:	mov    esp,DWORD PTR [edx+0x24468d21]
  41fac6:	hlt    
  41fac7:	je     0x41fa7d
  41fac9:	xor    ah,ah
  41facb:	inc    esp
  41facc:	dec    dl
  41face:	add    al,BYTE PTR [edx]
  41fad0:	mov    dh,0x79
  41fad2:	clc    
  41fad3:	pop    ebx
  41fad4:	sub    edi,DWORD PTR [ecx]
  41fad6:	sbb    bh,BYTE PTR [eax-0x68]
  41fad9:	xchg   ebp,eax
  41fada:	mov    ecx,0x4765cc67
  41fadf:	pop    ss
  41fae0:	jge    0x41fafc
  41fae2:	push   eax
  41fae3:	popa   
  41fae4:	test   dh,bh
  41fae6:	popa   
  41fae7:	loopne 0x41fae3
  41fae9:	hlt    
  41faea:	lock push 0x95f1bb06
  41faf0:	call   0x5de4:0x9bf11d2c
  41faf7:	or     eax,0x4d26647e
  41fafc:	lock fisubr WORD PTR [bp+si-0x5f]
  41fb01:	adc    BYTE PTR [ebp+0x44],al
  41fb04:	(bad)  [ecx]
  41fb06:	xor    DWORD PTR [ecx+0x58c19f62],ecx
  41fb0c:	sti    
  41fb0d:	pushf  
  41fb0e:	and    DWORD PTR cs:[esp+ebx*4+0x37],ebp
  41fb13:	add    ch,ah
  41fb15:	jns    0x41fb24
  41fb17:	add    esp,DWORD PTR [ebx+0x6]
  41fb1a:	or     DWORD PTR [ecx-0x729d0532],ebp
  41fb20:	(bad)  
  41fb21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb22:	test   BYTE PTR [eax+0x2620585a],bh
  41fb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb29:	test   eax,0xb60c0603
  41fb2e:	sub    ah,BYTE PTR [esi+edx*1-0x2d]
  41fb32:	aam    0x5c
  41fb34:	cmp    eax,0xfeb8256c
  41fb39:	(bad)  
  41fb3a:	ret    0xad42
  41fb3d:	inc    esi
  41fb3e:	popa   
  41fb3f:	lahf   
  41fb40:	pop    edi
  41fb41:	ss jle 0x41faf1
  41fb44:	loopne 0x41fb0a
  41fb46:	inc    edx
  41fb47:	cdq    
  41fb48:	inc    eax
  41fb49:	out    0xb3,eax
  41fb4b:	lods   eax,DWORD PTR ds:[esi]
  41fb4c:	adc    al,0x6a
  41fb4e:	xchg   edi,eax
  41fb4f:	das    
  41fb50:	pop    ss
  41fb51:	test   al,0xdb
  41fb53:	imul   ebp,DWORD PTR [ebx+esi*1-0x3d0dbb1a],0xffffff84
  41fb5b:	mov    ds:0x3461ad5f,eax
  41fb60:	(bad)
  41fb63:	popa   
  41fb64:	test   eax,0x9da59501
  41fb69:	dec    ecx
  41fb6a:	and    al,0x30
  41fb6c:	pop    esp
  41fb6d:	add    bh,al
  41fb6f:	(bad)  
  41fb70:	pop    esp
  41fb71:	dec    esi
  41fb72:	pop    edi
  41fb73:	push   esi
  41fb74:	or     bh,BYTE PTR [eax]
  41fb76:	jmp    0x1b456af1
  41fb7b:	sbb    eax,0x212e7bff
  41fb80:	cmp    al,BYTE PTR [ecx-0x7c5ee717]
  41fb86:	mov    edi,0xe9ffb288
  41fb8b:	mov    dh,0x53
  41fb8d:	out    dx,al
  41fb8e:	bound  eax,QWORD PTR [edi-0x8]
  41fb91:	cmp    ch,dh
  41fb93:	(bad)  
  41fb94:	and    edi,edi
  41fb96:	jns    0x41fb92
  41fb98:	inc    esi
  41fb99:	fs inc ebp
  41fb9b:	jns    0x41fb6d
  41fb9d:	shl    DWORD PTR [edx],1
  41fb9f:	inc    esp
  41fba0:	mov    WORD PTR es:[eax+ebp*8],ds
  41fba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba5:	mov    edi,esi
  41fba7:	fs xchg edi,eax
  41fba9:	sti    
  41fbaa:	daa    
  41fbab:	pop    esp
  41fbac:	or     DWORD PTR fs:[eax+0x77],esp
  41fbb0:	dec    edx
  41fbb1:	cwde   
  41fbb2:	rol    esp,0x55
  41fbb5:	popa   
  41fbb6:	xchg   ah,dh
  41fbb8:	ins    BYTE PTR es:[edi],dx
  41fbb9:	in     al,0xf7
  41fbbb:	jecxz  0x41fb5a
  41fbbd:	push   ss
  41fbbe:	push   edi
  41fbbf:	pusha  
  41fbc0:	push   es
  41fbc1:	ret    
  41fbc2:	sub    eax,DWORD PTR [ecx-0x4724edc0]
  41fbc8:	ret    0xdc23
  41fbcb:	add    al,0xf5
  41fbcd:	loop   0x41fbca
  41fbcf:	adc    cl,BYTE PTR [ebx+0x1fd2ad35]
  41fbd5:	inc    ebp
  41fbd6:	fisubr DWORD PTR [esi-0x5b1d5952]
  41fbdc:	jmp    0x397bc3f
  41fbe1:	pop    es
  41fbe2:	sbb    al,dh
  41fbe4:	mov    edx,es
  41fbe6:	xchg   ebx,eax
  41fbe7:	sub    ah,BYTE PTR [esi-0x2be0b27b]
  41fbed:	ss push esi
  41fbef:	xor    DWORD PTR [edx+ebp*2],eax
  41fbf2:	data16 mov ah,0xc7
  41fbf5:	push   ss
  41fbf6:	call   0x43a5f44
  41fbfb:	outs   dx,DWORD PTR ds:[esi]
  41fbfc:	push   es
  41fbfd:	and    DWORD PTR [edx-0x363d166e],ecx
  41fc03:	xor    BYTE PTR [edi],0x63
  41fc06:	adc    bl,BYTE PTR [eax+0x4a]
  41fc09:	dec    ecx
  41fc0a:	adc    ebx,DWORD PTR [esi+0x5e]
  41fc0d:	mov    bl,0x5c
  41fc0f:	jmp    0x79c5:0x555cf49c
  41fc16:	call   0xba970638
  41fc1b:	inc    edi
  41fc1c:	sub    esp,ecx
  41fc1e:	push   esi
  41fc1f:	add    cl,0x65
  41fc22:	jle    0x41fbf6
  41fc24:	sbb    al,0xcb
  41fc26:	sbb    al,0xa8
  41fc28:	inc    eax
  41fc29:	das    
  41fc2a:	loope  0x41fc7a
  41fc2c:	xor    dh,ah
  41fc2e:	fisub  DWORD PTR [edx+0x5d3a8c1c]
  41fc34:	push   ss
  41fc35:	jb     0x41fbd1
  41fc37:	xchg   edi,eax
  41fc38:	addr16 jns 0x41fbf3
  41fc3b:	pop    esi
  41fc3c:	jno    0x41fc8f
  41fc3e:	imul   edx,esp,0x5
  41fc41:	test   eax,0x92a311f4
  41fc46:	addr16 push esp
  41fc48:	ins    BYTE PTR es:[edi],dx
  41fc49:	je     0x41fbee
  41fc4b:	pushf  
  41fc4c:	cmp    ebx,eax
  41fc4e:	jmp    0x41fcb0
  41fc50:	jno    0x41fcc1
  41fc52:	scas   eax,DWORD PTR es:[edi]
  41fc53:	dec    ebx
  41fc54:	push   eax
  41fc55:	loopne 0x41fcab
  41fc57:	loopne 0x41fc95
  41fc59:	psubb  mm3,mm4
  41fc5c:	jno    0x41fbe1
  41fc5e:	mov    ch,0xd0
  41fc60:	and    DWORD PTR [edi],esi
  41fc62:	add    eax,0xb392366c
  41fc67:	mov    ah,BYTE PTR [ecx-0x49]
  41fc6a:	cmp    dl,BYTE PTR [ecx+esi*4]
  41fc6d:	and    al,0x4e
  41fc6f:	(bad)
  41fc73:	add    al,0x10
  41fc75:	add    DWORD PTR [ebx],ebp
  41fc77:	dec    ecx
  41fc78:	sbb    BYTE PTR [ebx+ecx*1+0x7d579fd6],cl
  41fc7f:	retf   0x3e01
  41fc82:	cmp    BYTE PTR [eax],0xa0
  41fc85:	(bad)  [edi+0x5b]
  41fc88:	cmp    eax,0xf9f3643f
  41fc8d:	jg     0x41fc78
  41fc8f:	adc    DWORD PTR [esi+0x5b],esp
  41fc92:	or     DWORD PTR [ebp-0x6db1fc03],esi
  41fc98:	lahf   
  41fc99:	data16 jbe 0x41fc5a
  41fc9c:	add    al,BYTE PTR [esp+ebp*2+0x2c233a31]
  41fca3:	mov    WORD PTR [eax+ebp*2-0x5625d133],ss
  41fcaa:	lods   eax,DWORD PTR ds:[esi]
  41fcab:	dec    eax
  41fcac:	mov    ebx,0x8000d692
  41fcb1:	inc    BYTE PTR ds:0x73590795
  41fcb7:	ins    DWORD PTR es:[edi],dx
  41fcb8:	cmp    eax,DWORD PTR [ecx+0x59]
  41fcbb:	mov    cl,0x5f
  41fcbd:	sub    edx,DWORD PTR [esi-0x7759815d]
  41fcc3:	out    dx,al
  41fcc4:	inc    esi
  41fcc5:	aas    
  41fcc6:	inc    edx
  41fcc7:	and    BYTE PTR [edx-0x7d],cl
  41fcca:	dec    ebx
  41fccb:	jae    0x41fd3a
  41fccd:	jmp    0x41fc86
  41fccf:	or     al,cl
  41fcd1:	cmp    ch,ch
  41fcd3:	test   eax,0x707b84bd
  41fcd8:	fcmove st,st(2)
  41fcda:	sbb    al,0x73
  41fcdc:	stc    
  41fcdd:	ja     0x41fc9e
  41fcdf:	sti    
  41fce0:	imul   DWORD PTR [ebp-0x7c]
  41fce3:	shl    DWORD PTR [esi+0x6d39b71],cl
  41fce9:	mov    cl,0x3f
  41fceb:	xchg   ebp,eax
  41fcec:	call   0x8056:0x1d3dcdab
  41fcf3:	push   cs
  41fcf4:	loope  0x41fcf8
  41fcf6:	jmp    FWORD PTR [ebx+0x0]
  41fcf9:	mov    dh,0xb2
  41fcfb:	mov    ebp,0x39c77669
  41fd00:	sbb    esp,esp
  41fd02:	mov    esp,ebp
  41fd04:	enter  0x6cd1,0xfc
  41fd08:	push   ds
  41fd09:	and    eax,0x54ca8730
  41fd0e:	ins    BYTE PTR es:[edi],dx
  41fd0f:	add    eax,0x5b68afbd
  41fd14:	xchg   ecx,eax
  41fd15:	test   DWORD PTR [edi-0x27],edx
  41fd18:	pop    ebx
  41fd19:	je     0x41fcd7
  41fd1b:	(bad)  
  41fd1c:	jmp    0x41fd30
  41fd1e:	jnp    0x41fcfe
  41fd20:	rol    DWORD PTR [ebp-0x4c35453f],cl
  41fd26:	out    0xd2,al
  41fd28:	jno    0x41fd5c
  41fd2a:	jne    0x41fd66
  41fd2c:	lock and ebx,edx
  41fd2f:	out    dx,eax
  41fd30:	pop    eax
  41fd31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd32:	arpl   WORD PTR [ecx],sp
  41fd34:	das    
  41fd35:	loopne 0x41fd93
  41fd37:	jns    0x41fdae
  41fd39:	adc    bh,BYTE PTR [eax+eax*4]
  41fd3c:	or     bl,BYTE PTR [ebx-0x1e]
  41fd3f:	outs   dx,BYTE PTR ds:[esi]
  41fd40:	mov    BYTE PTR [eax-0x51695ffd],bl
  41fd46:	retf   
  41fd47:	jmp    DWORD PTR [eax]
  41fd49:	in     al,0x86
  41fd4b:	popf   
  41fd4c:	aaa    
  41fd4d:	ds xor bh,dh
  41fd50:	popa   
  41fd51:	in     eax,0xe6
  41fd53:	mov    bl,0x97
  41fd55:	mov    ah,0xf
  41fd57:	cmp    BYTE PTR [ecx-0x5b71733d],dl
  41fd5d:	or     dl,cl
  41fd5f:	jmp    0x41fd11
  41fd61:	add    dl,BYTE PTR [ebp+0x32225048]
  41fd67:	nop
  41fd68:	rol    DWORD PTR [edi-0x67a0ee21],1
  41fd6e:	pop    edx
  41fd6f:	rol    eax,1
  41fd71:	sub    ch,BYTE PTR [edi-0x29a68ba9]
  41fd77:	sub    DWORD PTR [edi],esi
  41fd79:	mov    ch,0x1
  41fd7b:	xlat   BYTE PTR ds:[ebx]
  41fd7c:	popa   
  41fd7d:	test   eax,0x4b0221ed
  41fd82:	or     al,0xd5
  41fd84:	cld    
  41fd85:	inc    edi
  41fd86:	pop    ecx
  41fd87:	sbb    cl,BYTE PTR [ebx]
  41fd89:	jl     0x41fdcd
  41fd8b:	sbb    edx,DWORD PTR [edx+0x4d8fe494]
  41fd91:	and    BYTE PTR [ebx],bl
  41fd93:	push   ecx
  41fd94:	xchg   ebx,eax
  41fd95:	add    DWORD PTR [edx-0x5c],esp
  41fd98:	add    eax,ebx
  41fd9a:	mov    ebx,0x59af65d0
  41fd9f:	scas   al,BYTE PTR es:[edi]
  41fda0:	pop    ebx
  41fda1:	fistp  WORD PTR ds:0x2a879aac
  41fda7:	jne    0x41fd3b
  41fda9:	repz mov eax,0x770d942c
  41fdaf:	cmp    bh,BYTE PTR [ebp-0x68]
  41fdb2:	int3   
  41fdb3:	scas   eax,DWORD PTR es:[edi]
  41fdb4:	mov    dh,0xe6
  41fdb6:	push   ebx
  41fdb7:	in     eax,dx
  41fdb8:	xchg   BYTE PTR [ebp-0x56ada54b],ch
  41fdbe:	popa   
  41fdbf:	and    al,0xa8
  41fdc1:	pop    esi
  41fdc2:	enter  0x7975,0x4f
  41fdc6:	addr16 push es
  41fdc8:	add    edi,DWORD PTR [ebx+0x770856cc]
  41fdce:	or     DWORD PTR ds:0x6b087664,ebp
  41fdd4:	mov    eax,ds:0x972042c8
  41fdd9:	adc    dl,cl
  41fddb:	lods   eax,DWORD PTR ds:[esi]
  41fddc:	xchg   esi,eax
  41fddd:	mov    ecx,?
  41fddf:	jl     0x41fdce
  41fde1:	cmp    BYTE PTR [ebx+0x45a34489],ch
  41fde7:	mov    ds:0xf65fc2fb,al
  41fdec:	mov    esi,0x70acb089
  41fdf1:	xchg   ecx,eax
  41fdf2:	sub    DWORD PTR [ecx-0x12],esp
  41fdf5:	jne    0x41fe0a
  41fdf7:	(bad)  
  41fdf8:	xchg   esi,eax
  41fdf9:	jp     0x41fd8a
  41fdfb:	pusha  
  41fdfc:	icebp  
  41fdfd:	jno    0x41fe05
  41fdff:	add    DWORD PTR [eax],esi
  41fe01:	and    eax,0x8a4d348e
  41fe06:	ins    BYTE PTR es:[edi],dx
  41fe07:	lods   al,BYTE PTR ds:[esi]
  41fe08:	jmp    0xe3273814
  41fe0d:	cld    
  41fe0e:	mov    edi,0xbdcd1
  41fe13:	dec    ebx
  41fe14:	aad    0xcb
  41fe16:	mov    dl,0xfe
  41fe18:	fsub   DWORD PTR [esi+0x5f27c4d]
  41fe1e:	sti    
  41fe1f:	fisttp WORD PTR [ecx]
  41fe21:	jno    0x41fddd
  41fe23:	cmp    eax,0xadff9a32
  41fe28:	lds    ebx,FWORD PTR [esi-0x29716466]
  41fe2e:	xchg   DWORD PTR ss:0x18b6845d,ebp
  41fe35:	mov    al,BYTE PTR [edi-0x43756ea3]
  41fe3b:	adc    BYTE PTR [ebx],bh
  41fe3d:	or     al,BYTE PTR [eax+0x51]
  41fe40:	je     0x41feba
  41fe42:	out    0x65,eax
  41fe44:	sar    DWORD PTR ds:0x9a823bbe,0xf3
  41fe4b:	mov    esi,0x2951649
  41fe50:	addr16 jle 0x41fe71
  41fe53:	ins    BYTE PTR es:[edi],dx
  41fe54:	out    0xd9,eax
  41fe56:	mov    dl,0xcb
  41fe58:	dec    ebx
  41fe59:	test   BYTE PTR [eax-0x10fef1b],bh
  41fe5f:	imul   esp,DWORD PTR [ebp-0x6b],0x0
  41fe63:	add    DWORD PTR [edx],eax
  41fe65:	sbb    dl,BYTE PTR [esi-0x7392acb0]
  41fe6b:	lock mov cl,BYTE PTR [edx]
  41fe6e:	push   ebx
  41fe6f:	fidiv  WORD PTR [eax+0x3a468a23]
  41fe75:	mov    bl,0xe2
  41fe77:	ds pop esi
  41fe79:	jno    0x41feb2
  41fe7b:	inc    ebp
  41fe7c:	(bad)  
  41fe7d:	idiv   DWORD PTR [esi]
  41fe7f:	ret    
  41fe80:	mov    eax,0xc08f7734
  41fe85:	sahf   
  41fe86:	scas   eax,DWORD PTR es:[edi]
  41fe87:	jp     0x41fe15
  41fe89:	xor    eax,edi
  41fe8b:	sub    BYTE PTR [ecx+0x5],al
  41fe8e:	inc    esp
  41fe8f:	mov    esi,0xa03a8d1
  41fe94:	sbb    eax,0xf4534eee
  41fe99:	popf   
  41fe9a:	add    al,0x9
  41fe9c:	dec    esi
  41fe9d:	repnz mov bh,0xfb
  41fea0:	stos   DWORD PTR es:[edi],eax
  41fea1:	stos   BYTE PTR es:[edi],al
  41fea2:	enter  0x2dfa,0x73
  41fea6:	pusha  
  41fea7:	(bad)  
  41fea8:	inc    esp
  41fea9:	data16 in al,dx
  41feab:	fwait
  41feac:	cmp    dl,BYTE PTR [ebx+0x25]
  41feaf:	imul   esp,DWORD PTR [esp+eax*2+0x3574e41b],0x9e287919
  41feba:	inc    BYTE PTR [ebx]
  41febc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41febd:	xchg   ecx,eax
  41febe:	and    ch,BYTE PTR [esi+0x5]
  41fec1:	outs   dx,BYTE PTR ds:[esi]
  41fec2:	xor    ecx,DWORD PTR [eax-0x75]
  41fec5:	adc    eax,DWORD PTR [ecx+0x31]
  41fec8:	xchg   edx,eax
  41fec9:	test   DWORD PTR [esi-0x25],ecx
  41fecc:	scas   eax,DWORD PTR es:[edi]
  41fecd:	jecxz  0x41ff4c
  41fecf:	mov    dh,0x22
  41fed1:	shr    BYTE PTR [esi],1
  41fed3:	(bad)  
  41fed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fed5:	sub    eax,0x4ac6ba2c
  41feda:	fcmovb st,st(4)
  41fedc:	iret   
  41fedd:	xor    bl,BYTE PTR [edx-0x38a48f34]
  41fee3:	(bad)  
  41fee5:	daa    
  41fee6:	xchg   ebx,eax
  41fee7:	sbb    eax,0x3fe0217c
  41feec:	not    DWORD PTR [eax+0x7cdd953d]
  41fef2:	(bad)  
  41fef3:	jno    0x41ff2a
  41fef5:	pop    edi
  41fef6:	or     DWORD PTR [eax+eax*1],edx
  41fef9:	jnp    0x41ff4e
  41fefb:	mov    ebp,0x6cdd8269
  41ff00:	cli    
  41ff01:	fcom   st(5)
  41ff03:	test   DWORD PTR [esi-0x21],ecx
  41ff06:	clc    
  41ff07:	shr    DWORD PTR [ebx-0x62],0x20
  41ff0b:	mov    edx,0xf1818902
  41ff10:	fcomp  QWORD PTR [ebx-0x70832058]
  41ff16:	rol    BYTE PTR [edx+0x6],1
  41ff19:	cld    
  41ff1a:	aas    
  41ff1b:	xor    DWORD PTR [ebx-0x73],0x7e
  41ff1f:	mov    bh,BYTE PTR [edi+0x6b]
  41ff22:	shl    DWORD PTR [esi+0x3],cl
  41ff25:	sub    bh,dh
  41ff27:	xor    BYTE PTR [ebx],ah
  41ff29:	js     0x15324707
  41ff2f:	popa   
  41ff30:	pop    edi
  41ff31:	fcomp  QWORD PTR [esi-0x30]
  41ff34:	scas   eax,DWORD PTR es:[edi]
  41ff35:	jmp    0x6caa:0x635528f3
  41ff3c:	test   DWORD PTR [ebx-0x6a],esi
  41ff3f:	mov    eax,0x86101a6a
  41ff44:	mov    esp,DWORD PTR [bp+0x20c]
  41ff49:	pushf  
  41ff4a:	daa    
  41ff4b:	adc    dl,BYTE PTR [ebx]
  41ff4d:	ficom  WORD PTR [ebx+ecx*4-0x4757eb80]
  41ff54:	xor    bl,BYTE PTR [edx-0x2]
  41ff57:	sbb    al,0x1e
  41ff59:	int    0xc5
  41ff5b:	mov    bl,0x9f
  41ff5d:	cmp    eax,0xdc1af21c
  41ff62:	jne    0x41ff53
  41ff64:	leave  
  41ff65:	jp     0x41ffd2
  41ff67:	add    DWORD PTR [edx+0x44],esi
  41ff6a:	les    edi,FWORD PTR [ebx]
  41ff6c:	cli    
  41ff6d:	mov    bl,0x54
  41ff6f:	repnz test al,0x7
  41ff72:	and    DWORD PTR [ebx+0x1422afb1],0xffffff9f
  41ff79:	call   0xf8f26d30
  41ff7e:	sbb    dl,BYTE PTR [eax-0x42]
  41ff81:	jbe    0x41ff15
  41ff83:	aam    0x61
  41ff85:	mov    ecx,edx
  41ff87:	sub    DWORD PTR [ebp-0x901e185],ebp
  41ff8d:	jne    0x41ffd0
  41ff8f:	ret    0x5293
  41ff92:	sbb    ecx,DWORD PTR [ecx-0x43fc021]
  41ff98:	mov    WORD PTR [esp+ecx*8],?
  41ff9b:	lods   eax,DWORD PTR ds:[esi]
  41ff9c:	lahf   
  41ff9d:	mov    dl,0xa9
  41ff9f:	test   BYTE PTR [edi],dl
  41ffa1:	mov    edx,DWORD PTR [eax]
  41ffa3:	add    al,0x9
  41ffa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffa6:	mov    cl,0x34
  41ffa8:	cmp    edi,edi
  41ffaa:	ror    dh,0xeb
  41ffad:	and    edi,DWORD PTR [eax+0x37a3befd]
  41ffb3:	cmp    DWORD PTR [edi-0x60],esp
  41ffb6:	ret    0xa42
  41ffb9:	adc    cl,BYTE PTR [eax+0x66acc9eb]
  41ffbf:	dec    ecx
  41ffc0:	mov    ds:0xc0c01f91,al
  41ffc5:	and    DWORD PTR [ecx],esi
  41ffc7:	dec    esi
  41ffc8:	pusha  
  41ffc9:	dec    esi
  41ffca:	stos   BYTE PTR es:[edi],al
  41ffcb:	ficom  DWORD PTR [ecx-0x4b]
  41ffce:	cdq    
  41ffcf:	jae    0x42001d
  41ffd1:	aad    0x59
  41ffd3:	mov    ecx,0xfe4b9e2a
  41ffd8:	jbe    0x420053
  41ffda:	or     eax,0xfbbfd1da
  41ffdf:	jae    0x41ffbe
  41ffe1:	cmp    dl,BYTE PTR ds:0x6ae04cdf
  41ffe7:	aad    0xd7
  41ffe9:	pop    edx
  41ffea:	cmp    al,BYTE PTR gs:[edx+0x30]
  41ffee:	push   esp
  41ffef:	mov    eax,0xccd9b2be
  41fff4:	mov    esp,0x68081465
  41fff9:	mov    eax,0x37ab0274
  41fffe:	(bad)  
  41ffff:	sbb    DWORD PTR [eax-0x5f67a9ac],ebp
  420005:	jg     0x420036
  420007:	mov    ecx,0xb5ec0f80
  42000c:	(bad)  
  42000d:	and    eax,0x124a4a5f
  420012:	jno    0x41ffa2
  420014:	cmp    eax,0x922429a4
  420019:	sub    eax,DWORD PTR [esi]
  42001b:	lds    edi,FWORD PTR [edi]
  42001d:	ror    DWORD PTR [ebx+0x59],1
  420020:	outs   dx,DWORD PTR ds:[esi]
  420021:	or     ah,cl
  420023:	jle    0x42006a
  420025:	fidivr WORD PTR [eax+eiz*2]
  420028:	xchg   DWORD PTR [edx+0x44a2f82a],esp
  42002e:	dec    eax
  42002f:	adc    BYTE PTR [edx+0x4d],al
  420032:	push   edx
  420033:	sbb    BYTE PTR [esi+0x1353c986],cl
  420039:	push   eax
  42003a:	pop    ecx
  42003b:	dec    ebp
  42003c:	(bad)  
  42003d:	sar    esp,cl
  42003f:	push   ebx
  420040:	movaps XMMWORD PTR [ecx+0x9589fd7],xmm3
  420047:	sub    ch,BYTE PTR [eax]
  420049:	aaa    
  42004a:	in     eax,0x7a
  42004c:	dec    edx
  42004d:	xchg   ecx,eax
  42004e:	(bad)  
  42004f:	inc    ebp
  420050:	in     al,dx
  420051:	imul   eax,DWORD PTR ds:0x956a4215,0xb593eff6
  42005b:	test   DWORD PTR [ecx],edi
  42005d:	icebp  
  42005e:	pop    ecx
  42005f:	pop    edx
  420060:	sbb    bh,bl
  420062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420063:	xor    ebx,DWORD PTR [eax-0x40769762]
  420069:	mov    eax,ds:0x50f6bd5c
  42006e:	shl    BYTE PTR [eax+0x39fda999],cl
  420074:	pop    edx
  420075:	xor    al,BYTE PTR gs:[ecx-0x31266b41]
  42007c:	sbb    ah,BYTE PTR [edi]
  42007e:	ficomp WORD PTR [esi-0x45cbd84e]
  420084:	mov    WORD PTR [edi],ss
  420086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420087:	mov    edi,0x41a1c650
  42008c:	cli    
  42008d:	rcr    ecx,1
  42008f:	fwait
  420090:	repz enter 0xcf74,0xeb
  420095:	test   BYTE PTR [ecx-0x6c264089],ch
  42009b:	xchg   BYTE PTR [esi-0x5714e5ca],al
  4200a1:	and    eax,0x9a172eb7
  4200a6:	ins    BYTE PTR es:[edi],dx
  4200a7:	push   ebp
  4200a8:	(bad)  
  4200a9:	xor    eax,0x2d8621a4
  4200ae:	jb     0x4200a9
  4200b0:	adc    eax,0x38ce16be
  4200b5:	sub    esp,DWORD PTR [ecx+0x4ff01300]
  4200bb:	retf   
  4200bc:	lods   eax,DWORD PTR ds:[esi]
  4200bd:	jbe    0x42005c
  4200bf:	or     al,0x74
  4200c1:	jbe    0x4200eb
  4200c3:	xchg   edi,edx
  4200c5:	mov    esi,0x4a4b89a8
  4200ca:	popa   
  4200cb:	mov    ch,0x14
  4200cd:	stos   BYTE PTR es:[edi],al
  4200ce:	sub    eax,0xae023567
  4200d3:	jge    0x420094
  4200d5:	and    al,BYTE PTR [edx-0x488fc6d1]
  4200db:	in     eax,0x75
  4200dd:	das    
  4200de:	dec    esi
  4200df:	sbb    esi,ebp
  4200e1:	mov    ebx,0x803b3be1
  4200e6:	xor    BYTE PTR [esi],ch
  4200e8:	dec    ecx
  4200e9:	(bad)  
  4200ea:	push   esi
  4200eb:	inc    edi
  4200ec:	mov    BYTE PTR [eax-0x9],ah
  4200ef:	mov    cl,0x58
  4200f1:	(bad)
  4200f4:	mov    ecx,0xde277fee
  4200f9:	shr    edx,1
  4200fb:	mov    esp,DWORD PTR [edi+0x7c6e0d16]
  420101:	shl    BYTE PTR [esi-0x1b350b1f],0x77
  420108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420109:	add    DWORD PTR [ebp+0x38ca3978],ebp
  42010f:	fmul   DWORD PTR [edx-0x4191d611]
  420115:	xchg   ebx,eax
  420116:	lods   eax,DWORD PTR ds:[esi]
  420117:	xor    DWORD PTR ds:0x3742053f,ebp
  42011d:	mov    ?,WORD PTR [edx-0x60d05003]
  420123:	and    bl,0xbc
  420126:	pop    ss
  420127:	mov    DWORD PTR [edx+0x28],ecx
  42012a:	or     ah,BYTE PTR [eax]
  42012c:	aam    0x52
  42012e:	fnstsw WORD PTR [edi-0x1c861c2a]
  420134:	add    esp,DWORD PTR [eax+0x82558c1]
  42013a:	loopne 0x42011e
  42013c:	dec    edx
  42013d:	add    eax,0x6bf2ca24
  420142:	ja     0x420101
  420144:	push   0xbb857598
  420149:	aad    0x4f
  42014b:	xchg   ecx,eax
  42014c:	or     dl,ah
  42014e:	or     DWORD PTR [edx-0x2c],ebp
  420151:	(bad)  
  420154:	or     dl,bh
  420156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420157:	jl     0x420176
  420159:	inc    ebx
  42015a:	mov    ecx,esp
  42015c:	dec    esi
  42015d:	scas   al,BYTE PTR es:[di]
  42015f:	pusha  
  420160:	mov    ebx,0x68f76e40
  420165:	int    0x86
  420167:	xchg   edx,eax
  420168:	inc    eax
  420169:	call   0x680f:0x58129f5e
  420170:	mov    dl,0x97
  420172:	add    al,0x6d
  420174:	pop    ds
  420175:	(bad)  
  420176:	jno    0x4201a8
  420178:	jp     0x4201d6
  42017a:	add    edi,DWORD PTR [ebx]
  42017c:	pop    es
  42017d:	adc    ecx,DWORD PTR [ebx]
  42017f:	scas   eax,DWORD PTR es:[edi]
  420180:	adc    edi,0xd611ce1a
  420186:	stos   DWORD PTR es:[edi],eax
  420187:	jmp    0x8a81ed61
  42018c:	xor    al,BYTE PTR [ebx+0x19eb2ebc]
  420192:	xchg   edx,eax
  420193:	mov    cl,0x45
  420195:	add    al,0x40
  420197:	jecxz  0x4201e7
  420199:	jp     0x420202
  42019b:	ror    DWORD PTR [edi],cl
  42019d:	and    al,0xbf
  42019f:	fs sub eax,0x6e509c86
  4201a5:	adc    eax,0x7ba57a72
  4201aa:	outs   dx,DWORD PTR ds:[esi]
  4201ab:	cmc    
  4201ac:	pop    ss
  4201ad:	or     eax,0x21b4edcb
  4201b2:	das    
  4201b3:	cmp    BYTE PTR [edi+0x668231cb],ah
  4201b9:	out    0x86,eax
  4201bb:	pop    ebp
  4201bc:	xchg   esp,eax
  4201bd:	push   ds
  4201be:	jge    0x4201eb
  4201c0:	ss ins BYTE PTR es:[edi],dx
  4201c2:	cmp    BYTE PTR [eax],bl
  4201c4:	int    0x6f
  4201c6:	test   ebx,edx
  4201c8:	aad    0xb1
  4201ca:	sbb    al,0x10
  4201cc:	ins    BYTE PTR es:[edi],dx
  4201cd:	pop    esi
  4201ce:	mov    eax,0x49263079
  4201d3:	add    DWORD PTR [edi+0x1bd3d4ac],ebp
  4201d9:	xor    ebx,DWORD PTR [edi+0x14]
  4201dc:	fdivr  QWORD PTR [ebp+0x55]
  4201df:	cmp    al,0x6e
  4201e1:	popf   
  4201e2:	adc    DWORD PTR [eax+0x19],ecx
  4201e5:	lahf   
  4201e6:	push   0x6d
  4201e8:	ret    0x5439
  4201eb:	pop    edx
  4201ec:	add    BYTE PTR [ecx-0x23],bh
  4201ef:	(bad)  
  4201f0:	mov    ecx,0xe89021cf
  4201f5:	arpl   dx,ax
  4201f7:	and    eax,0x4fddae50
  4201fc:	mov    eax,ds:0xcc95ffd2
  420201:	mov    eax,ds:0x34b3f146
  420206:	pop    es
  420207:	fxch   st(4)
  420209:	sub    BYTE PTR [edx-0x2feec619],0xb
  420210:	xor    DWORD PTR [ebp-0x5c],0xffffff8c
  420214:	out    dx,al
  420215:	aad    0xeb
  420217:	push   esi
  420218:	and    DWORD PTR [ecx+edi*8-0x56],ebp
  42021c:	mov    ah,0x3b
  42021e:	out    dx,al
  42021f:	ror    BYTE PTR fs:[edx+0x46718c0d],1
  420226:	lea    ebp,[eax]
  420228:	inc    esp
  420229:	inc    edi
  42022a:	fiadd  DWORD PTR [esp+eiz*2]
  42022d:	ret    0xeca7
  420230:	int    0x57
  420232:	mov    ch,0x7b
  420234:	fist   DWORD PTR [eax-0x5e]
  420237:	dec    esi
  420238:	mov    ecx,0x81505a61
  42023d:	fiadd  DWORD PTR [ecx+0x13e6c909]
  420243:	(bad)  
  420244:	fld    QWORD PTR [ebx-0xc]
  420247:	repz xchg ebp,eax
  420249:	sub    ch,BYTE PTR ds:0x1bd0eb06
  42024f:	or     cl,cl
  420251:	ret    
  420252:	push   eax
  420253:	stos   BYTE PTR es:[edi],al
  420254:	aad    0xd6
  420256:	sbb    dl,BYTE PTR [edx+0x7c7b2f86]
  42025c:	ja     0x4201f1
  42025e:	lds    ebp,FWORD PTR [edx+0x79bae744]
  420264:	adc    BYTE PTR [edx],0xf8
  420267:	mov    bh,0x7b
  420269:	in     al,dx
  42026a:	sbb    DWORD PTR [esi],ebx
  42026c:	pop    ebx
  42026d:	add    eax,0x25c857fc
  420272:	add    eax,0xb9d07733
  420277:	and    eax,0x46d2f178
  42027c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42027d:	lahf   
  42027e:	xor    esi,DWORD PTR [eax+0x7c57afe6]
  420284:	mov    ecx,0x4c415cbe
  420289:	jne    0x42023f
  42028b:	jmp    0x4202f2
  42028d:	shl    dh,cl
  42028f:	fldcw  WORD PTR [edx+0x1ea3308d]
  420295:	xchg   esp,eax
  420296:	push   eax
  420297:	addr16 in al,0x5b
  42029a:	jns    0x42028d
  42029c:	cmp    eax,DWORD PTR gs:[edx+0x48494510]
  4202a3:	fwait
  4202a4:	fwait
  4202a5:	hlt    
  4202a6:	push   cs
  4202a7:	ret    
  4202a8:	(bad)  
  4202a9:	jnp    0x4202a9
  4202ab:	ds test al,0x72
  4202ae:	push   ds
  4202af:	push   ebp
  4202b0:	xchg   ecx,eax
  4202b1:	aaa    
  4202b2:	loope  0x420318
  4202b4:	cld    
  4202b5:	test   ah,ch
  4202b7:	outs   dx,BYTE PTR ds:[esi]
  4202b8:	pop    ecx
  4202b9:	imul   edx,DWORD PTR [esi+0x1c],0x44
  4202bd:	or     al,0xb8
  4202bf:	fnstcw WORD PTR [ecx-0x13]
  4202c2:	adc    DWORD PTR [edx+0x50c4d793],ebx
  4202c8:	push   esp
  4202c9:	stc    
  4202ca:	xchg   esi,eax
  4202cb:	sub    al,0x76
  4202cd:	mov    cl,0x9
  4202cf:	cmc    
  4202d0:	inc    edi
  4202d1:	sbb    DWORD PTR [edx-0x1c],0x2f
  4202d5:	scas   eax,DWORD PTR es:[edi]
  4202d6:	xchg   ecx,eax
  4202d7:	sti    
  4202d8:	les    esi,FWORD PTR [esi+eax*2+0x2ca7c425]
  4202df:	add    eax,0x49a2c590
  4202e4:	data16 sahf 
  4202e6:	mov    edi,DWORD PTR [ebx+esi*4+0xc5f702a]
  4202ed:	das    
  4202ee:	adc    eax,0x61cb0de0
  4202f3:	loopne 0x42034f
  4202f5:	add    BYTE PTR [esi],0x4
  4202f8:	sub    BYTE PTR ds:0x86610097,dh
  4202fe:	jle    0x4202ca
  420300:	inc    DWORD PTR [ebp+0x91efa8d]
  420306:	mov    ds:0x997daf9a,al
  42030b:	imul   edx,DWORD PTR [ecx-0x55d32cac],0xbc2e4782
  420315:	jns    0x4202b7
  420317:	ficomp DWORD PTR [edi-0x268a5007]
  42031d:	mov    DWORD PTR [esp+eiz*4-0x51],esi
  420321:	mov    esi,es
  420323:	stc    
  420324:	and    eax,DWORD PTR [eax-0x4c012e67]
  42032a:	xor    eax,0x50be895c
  42032f:	push   edx
  420330:	mov    ebp,0x65ccd2e1
  420335:	dec    esp
  420336:	jg     0x420371
  420338:	pop    ecx
  420339:	hlt    
  42033a:	stos   BYTE PTR es:[edi],al
  42033b:	sbb    al,al
  42033d:	jb     0x4203a3
  42033f:	adc    DWORD PTR [ebx],0x19
  420342:	test   DWORD PTR [eax+ebp*4],ebx
  420345:	xor    bl,BYTE PTR [edx]
  420347:	test   DWORD PTR [ebx-0x5a5b52e7],esi
  42034d:	hlt    
  42034e:	ror    DWORD PTR [ecx],cl
  420350:	jnp    0x4202e0
  420352:	out    dx,al
  420353:	mov    ecx,0x5a47001d
  420358:	call   FWORD PTR [ebx-0x4b]
  42035b:	or     eax,0xed3f8c9e
  420360:	fbld   TBYTE PTR ds:0xbf1579c
  420366:	inc    edx
  420367:	inc    eax
  420368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420369:	xor    esp,DWORD PTR [ebx+edi*1-0x3ba75580]
  420370:	jb     0x420383
  420372:	adc    eax,esp
  420374:	cmp    BYTE PTR [ebx-0xb162be9],al
  42037a:	jg     0x4203f1
  42037c:	or     BYTE PTR [ecx+eax*8-0x40],dh
  420380:	(bad)  
  420381:	fnstsw ax
  420383:	and    dl,ch
  420385:	shr    DWORD PTR [ebx-0x55],0x21
  420389:	fwait
  42038a:	mov    BYTE PTR [edi+0x32e637c7],al
  420390:	cmc    
  420391:	inc    edi
  420392:	add    eax,0x4972334c
  420397:	fstp   QWORD PTR [ebx+0x1c]
  42039a:	sub    bh,BYTE PTR [ecx]
  42039c:	cmp    ebp,DWORD PTR [ecx+0x41]
  42039f:	mov    ecx,0xdaa19892
  4203a4:	or     DWORD PTR [esi-0xd],ebp
  4203a7:	(bad)  
  4203a8:	aam    0xfc
  4203aa:	xor    ebp,DWORD PTR [edi+0x2c22240]
  4203b0:	sahf   
  4203b1:	push   esi
  4203b2:	adc    DWORD PTR [esi],0xffffff83
  4203b5:	pop    es
  4203b6:	xchg   BYTE PTR [edx+0x762aff7b],bh
  4203bc:	cmc    
  4203bd:	add    BYTE PTR [ecx],dh
  4203bf:	xlat   BYTE PTR ds:[ebx]
  4203c0:	or     esi,edi
  4203c2:	mov    ah,0x4b
  4203c4:	pop    edx
  4203c5:	cwde   
  4203c6:	test   eax,0x77cb16f2
  4203cb:	xor    edi,DWORD PTR [ecx+0x50]
  4203ce:	in     eax,dx
  4203cf:	out    dx,eax
  4203d0:	cmp    ax,0x5033
  4203d4:	or     ebp,DWORD PTR [ebx+eiz*4]
  4203d7:	sub    DWORD PTR [ebp*4+0x5ee4bbb7],0xffffffe8
  4203df:	jns    0x42039b
  4203e1:	dec    edx
  4203e2:	ror    BYTE PTR ds:0x997c77cd,cl
  4203e8:	cwde   
  4203e9:	add    cl,dh
  4203eb:	xchg   ecx,eax
  4203ec:	pop    esi
  4203ed:	inc    esp
  4203ee:	sahf   
  4203ef:	or     al,0xab
  4203f1:	xor    bl,BYTE PTR [esi+0x6f1b7652]
  4203f7:	cmp    al,0x22
  4203f9:	jle    0x420399
  4203fb:	(bad)  
  4203fc:	cmc    
  4203fd:	ins    DWORD PTR es:[edi],dx
  4203fe:	nop
  4203ff:	fnsave [edx]
  420401:	add    BYTE PTR [ebx-0x27a0b93],dl
  420407:	outs   dx,BYTE PTR ds:[esi]
  420408:	in     al,0xa3
  42040a:	gs push cs
  42040c:	pop    ds
  42040d:	xchg   edx,eax
  42040e:	adc    esp,DWORD PTR [ecx+0x43]
  420411:	ds gs inc esi
  420414:	jae    0x42042d
  420416:	mul    ecx
  420418:	lods   eax,DWORD PTR ds:[esi]
  420419:	mov    esp,DWORD PTR [eax-0xf77aee]
  42041f:	cmp    eax,0x85e26e4f
  420424:	cmp    eax,0xa3074582
  420429:	sbb    DWORD PTR [eax-0x3],0xf419d6cc
  420430:	lock or DWORD PTR [ecx+ebp*1+0x5d734c42],ebp
  420438:	pop    ebx
  420439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42043a:	dec    ebp
  42043b:	ins    BYTE PTR es:[edi],dx
  42043c:	mov    bl,0x79
  42043e:	frstor [edi+0x54]
  420441:	mov    ebx,0xa8c63a69
  420446:	jl     0x42041d
  420448:	in     eax,dx
  420449:	dec    ecx
  42044a:	push   esp
  42044b:	clc    
  42044c:	xchg   edi,eax
  42044d:	push   ebp
  42044e:	mov    dl,0x5
  420450:	out    dx,al
  420451:	mov    esp,0x1558bb04
  420456:	and    bh,BYTE PTR [ebx]
  420458:	dec    esi
  420459:	test   DWORD PTR [ecx-0x26],ebx
  42045c:	jbe    0x420468
  42045e:	(bad)  
  42045f:	jg     0x4203e7
  420461:	jo     0x420485
  420463:	add    al,0x12
  420465:	mov    ebp,0x9e86ede3
  42046a:	(bad)  
  42046b:	das    
  42046c:	dec    ebx
  42046d:	popf   
  42046e:	push   edi
  42046f:	fs inc edx
  420471:	test   DWORD PTR [ebx+0x5c489d15],0x2d1e8440
  42047b:	adc    BYTE PTR [ebp-0x37],bl
  42047e:	popa   
  42047f:	loope  0x420455
  420481:	(bad)  
  420483:	mov    ds,WORD PTR [eax+0x1866f678]
  420489:	data16 jne 0x42049e
  42048c:	mov    eax,0xf542e16
  420491:	jle    0x42043c
  420493:	xor    ebx,esp
  420495:	cs aaa 
  420497:	hlt    
  420498:	scas   eax,DWORD PTR es:[edi]
  420499:	sub    al,0x93
  42049b:	fstp   TBYTE PTR [esi]
  42049d:	adc    dh,BYTE PTR [ecx]
  42049f:	outs   dx,BYTE PTR ds:[esi]
  4204a0:	ret    0xfb64
  4204a3:	cmp    BYTE PTR ds:0xb23ad062,cl
  4204a9:	sahf   
  4204aa:	in     eax,dx
  4204ab:	bound  edi,QWORD PTR [edi+eax*8+0x4a]
  4204af:	jp     0x4204bc
  4204b1:	jbe    0x420433
  4204b3:	xchg   BYTE PTR [ecx-0x479b6bcf],bh
  4204b9:	xchg   edx,eax
  4204ba:	or     DWORD PTR [esi+0x6b],esi
  4204bd:	mul    BYTE PTR ds:0x7c1b84a1
  4204c3:	mov    dl,0x6a
  4204c5:	in     eax,dx
  4204c6:	js     0x4204f7
  4204c8:	jmp    0x51bb:0xccb3372
  4204cf:	pop    ds
  4204d0:	sub    ebx,eax
  4204d2:	fnsave [esp+ebp*2+0x72ad0032]
  4204d9:	mov    edi,0x9e764987
  4204de:	add    dh,dl
  4204e0:	cmp    eax,edi
  4204e2:	das    
  4204e3:	fstp   QWORD PTR [ebx+0x386129a8]
  4204e9:	adc    eax,0x9d53d391
  4204ee:	dec    edx
  4204ef:	pusha  
  4204f0:	sub    DWORD PTR ds:0x23f3adaf,ecx
  4204f6:	mov    esi,0x33e20dd7
  4204fb:	pop    esp
  4204fc:	sbb    DWORD PTR [ebp+0x1b037c5b],ecx
  420502:	scas   al,BYTE PTR es:[edi]
  420503:	push   DWORD PTR [edx]
  420505:	ins    DWORD PTR es:[edi],dx
  420506:	sbb    al,0x68
  420508:	jb     0x420525
  42050a:	(bad)  
  42050b:	out    0x34,al
  42050d:	adc    al,0x14
  42050f:	dec    ecx
  420510:	aaa    
  420511:	fnstcw WORD PTR [ecx+0x4a]
  420514:	mov    al,bl
  420516:	shl    bl,0x83
  420519:	sub    BYTE PTR [esi+0x6e3c6088],cl
  42051f:	mov    edx,0xdb3c7afd
  420524:	(bad)  
  420525:	xor    ah,BYTE PTR [ecx+0x76a570ad]
  42052b:	cmp    eax,0xf165ea99
  420530:	mov    esp,0x70288216
  420535:	arpl   WORD PTR [edi-0x30],bx
  420538:	inc    ecx
  420539:	push   esp
  42053a:	mov    edx,DWORD PTR [edx]
  42053c:	clc    
  42053d:	xchg   esi,eax
  42053e:	jg     0x4204c0
  420540:	xchg   esp,eax
  420541:	ret    0x7395
  420544:	imul   esp,DWORD PTR [edx+ecx*2-0x6515131f],0x59
  42054c:	adc    ah,BYTE PTR [eax+0x51]
  42054f:	lahf   
  420550:	(bad)  
  420551:	mov    ds:0x6bd4b3e8,al
  420556:	(bad)  
  420557:	leave  
  420558:	data16 mov dl,ah
  42055b:	aas    
  42055c:	cwde   
  42055d:	add    al,0x91
  42055f:	adc    esi,edx
  420561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420562:	lods   al,BYTE PTR ds:[esi]
  420563:	lods   al,BYTE PTR ds:[esi]
  420564:	retf   0xadf
  420567:	in     al,dx
  420568:	data16 js 0x420580
  42056b:	leave  
  42056c:	and    al,dh
  42056e:	std    
  42056f:	fnstsw WORD PTR [ebx-0x67]
  420572:	js     0x420544
  420574:	daa    
  420575:	xchg   ebp,eax
  420576:	sti    
  420577:	in     eax,dx
  420578:	xor    edx,DWORD PTR [esi]
  42057a:	xor    eax,0xbf253a68
  42057f:	(bad)  
  420580:	cmp    al,0xac
  420582:	xor    dh,BYTE PTR [edi-0x57]
  420585:	retf   0xac03
  420588:	sub    al,0x9a
  42058a:	lock lea esi,[eax-0x17bb0e4d]
  420591:	adc    DWORD PTR [edx-0x4a0d72c],esp
  420597:	in     al,dx
  420598:	cmp    ecx,DWORD PTR [esi]
  42059a:	add    BYTE PTR [esi+ebp*2],ah
  42059d:	dec    esp
  42059e:	dec    edx
  42059f:	inc    edx
  4205a0:	dec    esi
  4205a1:	mov    dh,cl
  4205a3:	sbb    dl,BYTE PTR [eax-0x284f2288]
  4205a9:	sahf   
  4205aa:	rol    edi,0x8b
  4205ad:	mov    eax,ds:0x890518f7
  4205b2:	or     eax,0x216baf9b
  4205b7:	mov    ds:0xcda12dc1,al
  4205bc:	pop    ss
  4205bd:	pop    esp
  4205be:	fdivrp st(6),st
  4205c0:	shl    esp,1
  4205c2:	scas   eax,DWORD PTR es:[edi]
  4205c3:	sbb    ecx,DWORD PTR [ebx-0x39cd1474]
  4205c9:	test   dh,dh
  4205cb:	pop    ss
  4205cc:	adc    dl,BYTE PTR [edi+0x78681ef6]
  4205d2:	mov    dl,0x21
  4205d4:	mov    ds:0xa53578bd,al
  4205d9:	test   DWORD PTR [edi],edi
  4205db:	jbe    0x420581
  4205dd:	ret    0xa725
  4205e0:	xor    al,0x61
  4205e2:	mov    bl,0x6a
  4205e4:	arpl   si,ax
  4205e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205e7:	fcomip st,st(2)
  4205e9:	jmp    ecx
  4205eb:	jno    0x4205ee
  4205ed:	aam    0xad
  4205ef:	cmp    bl,BYTE PTR [ebx+edi*1-0x48fd7c75]
  4205f6:	mov    edi,0xad5c5acb
  4205fb:	pop    ss
  4205fc:	fist   WORD PTR [edx+0x1656f487]
  420602:	(bad)  
  420603:	shr    DWORD PTR [edi+0x6d],1
  420606:	test   edx,edi
  420608:	sbb    al,0xe8
  42060a:	pusha  
  42060b:	mov    al,0x93
  42060d:	adc    eax,0x30b92b89
  420612:	mov    bh,0xe9
  420614:	jns    0x42062a
  420616:	mov    edi,0xa1e125a1
  42061b:	mov    eax,0x4ba62e43
  420620:	jle    0x420695
  420622:	call   0xce8:0x54a9ce1f
  420629:	xor    DWORD PTR [esi],esp
  42062b:	lock sbb DWORD PTR [esi+0x62],ecx
  42062f:	pusha  
  420630:	dec    ebp
  420631:	xchg   ebx,eax
  420632:	jns    0x4206a1
  420634:	fwait
  420635:	daa    
  420636:	sbb    DWORD PTR [eax],ebx
  420638:	add    DWORD PTR [eax],edi
  42063a:	pop    eax
  42063b:	mov    gs,WORD PTR [ecx+esi*1+0x44]
  42063f:	adc    DWORD PTR ds:0x8794e63c,ebp
  420645:	xor    BYTE PTR [edi+0x7b2f11da],ch
  42064b:	or     BYTE PTR [ecx-0x26],dl
  42064e:	and    DWORD PTR [edi],edi
  420650:	dec    ebx
  420651:	cwde   
  420652:	les    ebx,FWORD PTR [esp+eiz*4]
  420655:	add    al,0x9b
  420657:	sub    eax,0x43978beb
  42065c:	lahf   
  42065d:	xchg   esp,eax
  42065e:	sbb    cl,bh
  420660:	out    0x10,eax
  420662:	jle    0x42069e
  420664:	ss pusha 
  420666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420667:	cmc    
  420668:	cmp    al,0x24
  42066a:	jne    0x420613
  42066c:	icebp  
  42066d:	retf   0xc5cd
  420670:	xchg   ebx,eax
  420671:	ficomp DWORD PTR [edi-0xf2d6dbf]
  420677:	mov    bh,0xb2
  420679:	mov    ah,bh
  42067b:	inc    esp
  42067c:	cmp    esp,DWORD PTR [esi-0x44f7e501]
  420682:	fdivr  DWORD PTR [ebx]
  420684:	mov    edx,0xed3c3c48
  420689:	leave  
  42068a:	ret    0xc40e
  42068d:	dec    esp
  42068e:	and    eax,0x92614c6d
  420693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420694:	int3   
  420695:	imul   edx,DWORD PTR [ebx+0x33],0x5d
  420699:	dec    eax
  42069a:	push   eax
  42069b:	test   bl,bl
  42069d:	(bad)  
  42069e:	outs   dx,BYTE PTR ds:[esi]
  42069f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206a0:	sahf   
  4206a1:	add    DWORD PTR [ebx],0x11
  4206a4:	imul   DWORD PTR [edx-0x6b]
  4206a7:	aaa    
  4206a8:	icebp  
  4206a9:	(bad)  
  4206aa:	gs jae 0x4206dc
  4206ad:	mov    BYTE PTR [ebp+0x583f4560],dh
  4206b3:	jge    0x4206e4
  4206b5:	sbb    BYTE PTR [ebp+ebp*1+0x5d39c3a4],bl
  4206bc:	rcl    BYTE PTR [edi-0x32f822f7],1
  4206c2:	mov    ecx,0xb4bc1bca
  4206c7:	pause  
  4206c9:	jg     0x420686
  4206cb:	pop    es
  4206cc:	retf   
  4206cd:	pop    eax
  4206ce:	mov    DWORD PTR [eax],eax
  4206d0:	pushf  
  4206d1:	(bad)  
  4206d2:	hlt    
  4206d3:	fdivr  DWORD PTR [esi-0x5eeb0c06]
  4206d9:	sbb    eax,0x333a7a4
  4206de:	adc    eax,0xb3b4b3ae
  4206e3:	in     eax,dx
  4206e4:	test   eax,0xee5e794c
  4206e9:	push   eax
  4206ea:	push   esi
  4206ec:	hlt    
  4206ed:	test   eax,0x309fb5f5
  4206f2:	addr16 adc al,0x8
  4206f5:	ds pop eax
  4206f7:	mov    eax,ebp
  4206f9:	test   eax,0x1e2d8a87
  4206fe:	dec    ebp
  4206ff:	int3   
  420700:	pop    edx
  420701:	push   cs
  420702:	cli    
  420703:	adc    al,0xd7
  420705:	xor    bl,bl
  420707:	sar    BYTE PTR [esi],1
  420709:	mov    dh,0x9a
  42070b:	or     edx,DWORD PTR [edi]
  42070d:	sahf   
  42070e:	adc    eax,0x72f30432
  420713:	and    dl,dl
  420715:	fwait
  420716:	call   0xf685:0x5f095a66
  42071d:	in     eax,0xe
  42071f:	push   ds
  420720:	fcmovb st,st(2)
  420722:	mov    ebp,0xc5bc172e
  420727:	pusha  
  420728:	ret    
  420729:	loopne 0x4207a4
  42072b:	xchg   edi,eax
  42072c:	test   DWORD PTR [eax-0x14bebb3a],esi
  420732:	aas    
  420733:	cmc    
  420734:	ss dec esp
  420736:	scas   eax,DWORD PTR es:[edi]
  420737:	and    BYTE PTR [ecx-0x3c],0xe6
  42073b:	aam    0xed
  42073d:	test   al,0x80
  42073f:	adc    BYTE PTR [eax-0x72450db5],0xe5
  420746:	call   0xe9b9:0x34767a16
  42074d:	es mov edx,0xd3f79efe
  420753:	xor    eax,DWORD PTR [eax]
  420755:	imul   esi,DWORD PTR [ecx-0x79],0x5080b1bf
  42075c:	(bad)  
  42075d:	loop   0x4207db
  42075f:	xchg   edi,eax
  420760:	lods   al,BYTE PTR ds:[esi]
  420761:	out    0x14,al
  420763:	ins    DWORD PTR es:[edi],dx
  420764:	fstp   DWORD PTR [edx-0x31]
  420767:	ins    BYTE PTR es:[edi],dx
  420768:	inc    edx
  420769:	mov    bh,0x31
  42076b:	mov    ah,0xc7
  42076d:	retf   
  42076e:	and    al,dl
  420770:	xchg   esi,eax
  420771:	cli    
  420772:	in     al,dx
  420773:	jno    0x420761
  420775:	or     eax,0x6e934946
  42077a:	adc    DWORD PTR [edi-0x70c788e8],0xffffff9b
  420781:	mov    ah,0xb6
  420783:	aaa    
  420784:	jns    0x4207eb
  420786:	xlat   BYTE PTR ds:[ebx]
  420787:	and    al,0xaf
  420789:	adc    esi,DWORD PTR [esi-0x318a6859]
  42078f:	jle    0x420783
  420791:	aas    
  420792:	into   
  420793:	repnz sub cl,BYTE PTR [ecx]
  420796:	sub    ebp,DWORD PTR [edi+0x32]
  420799:	sbb    BYTE PTR [ebp-0x36b6504e],cl
  42079f:	push   ebp
  4207a0:	push   ss
  4207a1:	pop    edx
  4207a2:	sbb    DWORD PTR [edi+eax*2-0x542a574f],esp
  4207a9:	gs out 0xf7,al
  4207ac:	not    DWORD PTR [ebx-0x1e]
  4207af:	mov    es,WORD PTR [edx]
  4207b1:	or     eax,0xd424db3d
  4207b6:	dec    esi
  4207b7:	xor    al,BYTE PTR [ebx+0x1c]
  4207ba:	jle    0x420817
  4207bc:	in     al,dx
  4207bd:	push   DWORD PTR [edi]
  4207bf:	sbb    esp,DWORD PTR [ebp+0x5fda0d90]
  4207c5:	stc    
  4207c6:	xchg   esp,eax
  4207c7:	mov    ?,WORD PTR [edi+0x25]
  4207ca:	sub    eax,0x634074fb
  4207cf:	add    ebx,eax
  4207d1:	(bad)  
  4207d2:	push   ecx
  4207d3:	xor    DWORD PTR [ecx+edi*4+0x53],ebp
  4207d7:	cmc    
  4207d8:	(bad)  
  4207d9:	in     eax,0x38
  4207db:	xchg   bh,dh
  4207dd:	std    
  4207de:	inc    edi
  4207df:	jmp    0x50bd:0x24b741c8
  4207e6:	dec    edx
  4207e7:	add    eax,0x3527ccf9
  4207ec:	xchg   ecx,eax
  4207ed:	mov    cl,0x2e
  4207ef:	int    0xab
  4207f1:	(bad)  
  4207f2:	xchg   ebx,eax
  4207f3:	addr16 (bad) 
  4207f5:	mov    WORD PTR ds:0x870afef,gs
  4207fb:	stc    
  4207fc:	js     0x4207b4
  4207fe:	rcl    BYTE PTR [ebp+ecx*1-0x2c455a5c],cl
  420805:	iret   
  420806:	xor    eax,0x8f468215
  42080b:	push   esi
  42080c:	enter  0xb332,0x97
  420810:	mov    edi,0xa4d6dd28
  420815:	xchg   esp,eax
  420816:	mov    al,ds:0xfa1509cb
  42081b:	mov    ah,0xb8
  42081d:	pop    es
  42081e:	(bad)  
  42081f:	sbb    al,0x5d
  420821:	mov    edi,0xb5d35fc2
  420826:	cli    
  420827:	imul   ebx,esp,0xa07c0ff8
  42082d:	add    dh,BYTE PTR [ebp-0x35]
  420830:	inc    ebp
  420831:	ret    
  420832:	jge    0x420816
  420834:	inc    ebx
  420835:	es mov esi,0x8ed87311
  42083b:	pop    esi
  42083c:	dec    esi
  42083d:	sub    eax,0x19197768
  420842:	mov    edx,DWORD PTR [esi]
  420844:	inc    ebp
  420845:	sahf   
  420846:	mov    edi,0xa68307cd
  42084b:	jns    0x4208a9
  42084d:	cmp    ecx,DWORD PTR [ecx]
  42084f:	outs   dx,BYTE PTR ds:[si]
  420851:	add    dh,BYTE PTR [ecx-0x2d]
  420854:	shl    DWORD PTR [ebx+0x5b6a6073],0x72
  42085b:	inc    esp
  42085c:	sbb    ch,BYTE PTR [edi]
  42085e:	mov    ebx,?
  420860:	fisttp QWORD PTR [edi-0x32]
  420863:	les    eax,FWORD PTR [ecx-0x72b2d6ce]
  420869:	add    eax,DWORD PTR ds:0xd5095ed7
  42086f:	std    
  420870:	repz (bad) [ebx+0x2e]
  420874:	call   FWORD PTR [ebp-0x51]
  420877:	sub    al,0xfe
  420879:	lock mov eax,ds:0xef6d16ff
  42087f:	inc    edi
  420880:	pop    ecx
  420881:	mov    ?,esp
  420883:	out    0x86,eax
  420885:	sahf   
  420886:	cmp    eax,0x9e33b9f0
  42088b:	nop
  42088c:	mov    BYTE PTR [eax+0x5f319057],0xee
  420893:	outs   dx,DWORD PTR ds:[esi]
  420894:	lods   eax,DWORD PTR ds:[esi]
  420895:	ret    
  420896:	xchg   ebp,eax
  420897:	in     al,0x41
  420899:	sahf   
  42089a:	inc    edi
  42089b:	push   esp
  42089c:	xor    esp,DWORD PTR [edi+0x640f7fad]
  4208a2:	jecxz  0x4208a0
  4208a4:	jmp    0x1d898f30
  4208a9:	dec    edx
  4208aa:	cs inc esp
  4208ac:	pop    es
  4208ad:	sbb    BYTE PTR [edx+0x64],ch
  4208b0:	fsub   DWORD PTR [edi-0x5a]
  4208b3:	xchg   ebp,eax
  4208b4:	mov    edx,esp
  4208b6:	aaa    
  4208b7:	pop    ds
  4208b8:	out    dx,eax
  4208b9:	inc    edx
  4208ba:	in     eax,0x3f
  4208bc:	ja     0x42091b
  4208be:	inc    edx
  4208bf:	fs sbb ch,cl
  4208c2:	(bad)  
  4208c3:	mov    cl,0xe
  4208c5:	and    BYTE PTR [ebx],bh
  4208c7:	lock int 0xce
  4208ca:	aam    0xc5
  4208cc:	jmp    0xee01:0x6c5d08bb
  4208d3:	arpl   WORD PTR ds:0x67e4ab38,ax
  4208d9:	mov    cl,0x18
  4208db:	shr    DWORD PTR [edx+0x1471377f],0x20
  4208e2:	jmp    0xe0ec:0xec121b48
  4208e9:	mov    esp,0x91b11864
  4208ee:	mov    WORD PTR [esi],?
  4208f0:	xchg   edi,eax
  4208f1:	dec    ebx
  4208f2:	or     ebx,DWORD PTR [ecx-0x17]
  4208f5:	fstp   TBYTE PTR [ecx-0x4767a58d]
  4208fb:	pusha  
  4208fc:	arpl   WORD PTR [ebp-0x22dc222c],ax
  420902:	nop
  420903:	in     al,0x8
  420905:	mov    edi,esi
  420907:	cmp    bl,BYTE PTR [edx+edx*1]
  42090a:	test   BYTE PTR [ebx+eiz*2+0x7b2ab3a2],dh
  420911:	xchg   edx,eax
  420912:	jae    0x4208dc
  420914:	div    dh
  420916:	popf   
  420917:	add    eax,0xbcc76a91
  42091c:	test   BYTE PTR [esi+0x77],ah
  42091f:	cs in  al,0x85
  420922:	ret    0xc1d7
  420925:	sub    BYTE PTR [edi],al
  420927:	add    al,0x52
  420929:	jns    0x420952
  42092b:	popa   
  42092c:	js     0x4208da
  42092e:	inc    esi
  42092f:	dec    ebx
  420930:	jbe    0x42096c
  420932:	add    ebp,ebp
  420934:	ss pop ebx
  420936:	push   ecx
  420937:	mov    BYTE PTR [eax],0x2c
  42093a:	sub    BYTE PTR [edx-0x5a8283e2],ah
  420940:	arpl   WORD PTR [esp+edi*2-0x2ae74a1],ax
  420947:	push   esi
  420948:	mov    eax,ds:0xca3e0f59
  42094d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42094e:	int    0x1a
  420950:	scas   al,BYTE PTR es:[edi]
  420951:	rcr    BYTE PTR [esi-0x4],cl
  420954:	xchg   esi,eax
  420955:	inc    DWORD PTR [ebx]
  420957:	leave  
  420958:	pop    eax
  420959:	jl     0x4208ee
  42095b:	push   edi
  42095c:	cld    
  42095d:	or     edi,edx
  42095f:	xchg   di,ax
  420961:	sub    BYTE PTR [edi],al
  420963:	repz push ds
  420965:	fs mov ch,0xce
  420968:	mov    bl,0x9a
  42096a:	cmp    eax,0x26873bec
  42096f:	scas   eax,DWORD PTR es:[edi]
  420970:	test   al,0x99
  420972:	cmp    ah,ch
  420974:	push   0x656cdc22
  420979:	mov    dl,0xe0
  42097b:	inc    ebx
  42097c:	nop
  42097d:	adc    al,0x78
  42097f:	jbe    0x42094f
  420981:	(bad)  
  420983:	sbb    bl,BYTE PTR [ecx]
  420985:	jns    0x420978
  420987:	lock jno 0x4209c2
  42098a:	push   ecx
  42098b:	int3   
  42098c:	push   ecx
  42098d:	pusha  
  42098e:	sub    al,0xff
  420990:	out    0x21,eax
  420992:	jmp    0x4209be
  420994:	add    al,bl
  420996:	xchg   esp,eax
  420997:	aam    0x19
  420999:	inc    edi
  42099a:	adc    bl,BYTE PTR [eax+0x5b]
  42099d:	dec    ebp
  42099e:	mov    DWORD PTR [ebp+0x6],edx
  4209a1:	mov    cl,0x64
  4209a3:	xchg   esi,eax
  4209a4:	nop
  4209a5:	adc    ebx,edi
  4209a7:	aam    0xae
  4209a9:	daa    
  4209aa:	add    DWORD PTR [esi],eax
  4209ac:	push   edi
  4209ad:	xchg   edx,eax
  4209ae:	jecxz  0x4209ae
  4209b0:	dec    ebx
  4209b1:	fist   DWORD PTR [ebp+0x61]
  4209b4:	mov    eax,0x2d811750
  4209b9:	repz mov al,0x2
  4209bc:	inc    edi
  4209bd:	int3   
  4209be:	leave  
  4209bf:	jmp    0x4209a5
  4209c1:	nop
  4209c2:	xchg   esi,eax
  4209c3:	dec    eax
  4209c4:	adc    al,0x2f
  4209c6:	(bad)  
  4209c8:	test   DWORD PTR [esi+ebp*2-0x7bc97cff],esi
  4209cf:	not    ebp
  4209d1:	dec    ebp
  4209d2:	mov    edi,DWORD PTR ds:0x95bd70d5
  4209d8:	loope  0x420a2a
  4209da:	push   eax
  4209db:	xchg   edi,eax
  4209dc:	jecxz  0x4209eb
  4209de:	sbb    al,0xfc
  4209e0:	mov    edx,0x4ca0c581
  4209e5:	leave  
  4209e6:	addr16 mov ecx,0x7a742ddd
  4209ec:	xor    al,0x77
  4209ee:	mov    ds,WORD PTR [edi]
  4209f0:	neg    ecx
  4209f2:	enter  0x8c68,0x60
  4209f6:	fld    TBYTE PTR [esi]
  4209f8:	mov    ebx,0xe19d7ce9
  4209fd:	and    al,0x8c
  4209ff:	push   edi
  420a00:	cdq    
  420a01:	fnstsw WORD PTR ds:0xfda87487
  420a07:	cmp    eax,0x6ed225d9
  420a0c:	mov    al,ds:0xe41e10b6
  420a11:	pushf  
  420a12:	prefetch BYTE PTR [esi-0x5]
  420a16:	lds    esp,FWORD PTR [ebx+edi*4+0x7]
  420a1a:	mov    eax,0x1b808c6b
  420a1f:	ret    0x8d08
  420a22:	out    0x60,eax
  420a24:	stos   DWORD PTR es:[edi],eax
  420a25:	mov    bh,0x86
  420a27:	inc    edx
  420a28:	mov    WORD PTR [ecx-0x41],cs
  420a2b:	lods   eax,DWORD PTR ds:[esi]
  420a2c:	inc    esi
  420a2d:	pop    edi
  420a2e:	mov    WORD PTR ds:0x1342798c,ds
  420a34:	xor    bl,BYTE PTR [ebx+0x3b543eb8]
  420a3a:	jecxz  0x420a81
  420a3c:	loopne 0x4209db
  420a3e:	fsub   st(5),st
  420a40:	push   0xfffffff6
  420a42:	push   ds
  420a43:	mov    ah,BYTE PTR [esi]
  420a45:	pushaw 
  420a47:	dec    ecx
  420a48:	push   ecx
  420a49:	jmp    0x420a8c
  420a4b:	pushf  
  420a4c:	sbb    ch,al
  420a4e:	jmp    0x80d4:0x820715f1
  420a55:	inc    ecx
  420a56:	enter  0x2b5b,0xea
  420a5a:	in     eax,0xe9
  420a5c:	stos   BYTE PTR es:[edi],al
  420a5d:	add    BYTE PTR [ebx+0x16],bh
  420a60:	and    al,0x3b
  420a62:	mov    DWORD PTR [esp+esi*8-0x8],esp
  420a66:	es std 
  420a68:	dec    ebp
  420a69:	inc    ecx
  420a6a:	xor    eax,DWORD PTR [eax+0x74]
  420a6d:	xlat   BYTE PTR ds:[ebx]
  420a6e:	adc    eax,0xea68c86e
  420a73:	push   cs
  420a74:	jecxz  0x420a29
  420a76:	ret    
  420a77:	and    al,0x81
  420a79:	clc    
  420a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a7b:	jecxz  0x420a1c
  420a7d:	fcmovne st,st(7)
  420a7f:	or     eax,0x735803b9
  420a84:	cli    
  420a85:	aas    
  420a86:	inc    esp
  420a87:	cs cwde 
  420a89:	pop    ss
  420a8a:	bound  edx,QWORD PTR [esi-0x77913f77]
  420a90:	retf   0x377e
  420a93:	lahf   
  420a94:	push   0xffffffd6
  420a96:	pop    esi
  420a97:	test   edi,0x8e6852c8
  420a9d:	or     ecx,DWORD PTR [eax+0x4f481933]
  420aa3:	jno    0x420afc
  420aa5:	adc    BYTE PTR [ecx],bh
  420aa7:	mov    esp,0x3424ee78
  420aac:	rol    dh,cl
  420aae:	ret    
  420aaf:	hlt    
  420ab0:	aas    
  420ab1:	push   ebp
  420ab2:	jmp    0x420adc
  420ab4:	je     0x420a98
  420ab6:	and    BYTE PTR [edi],ah
  420ab8:	xor    DWORD PTR [ecx-0x12],ecx
  420abb:	mov    esi,DWORD PTR [ebx]
  420abd:	mov    bl,dh
  420abf:	test   ebx,ebp
  420ac1:	or     bh,BYTE PTR [ebx+0x72]
  420ac4:	pop    esp
  420ac5:	jae    0x420af7
  420ac7:	push   ds
  420ac8:	jbe    0x420b48
  420aca:	aas    
  420acb:	scas   al,BYTE PTR es:[edi]
  420acc:	inc    esi
  420acd:	(bad)  
  420ace:	pop    ebx
  420acf:	outs   dx,BYTE PTR ds:[esi]
  420ad0:	and    edx,ecx
  420ad2:	push   ebx
  420ad3:	ins    BYTE PTR es:[edi],dx
  420ad4:	rol    DWORD PTR [ebx-0x27126e72],0xd
  420adb:	lea    ecx,[eax-0x67252ddb]
  420ae1:	xlat   BYTE PTR ds:[ebx]
  420ae2:	push   es
  420ae3:	lock hlt 
  420ae5:	outs   dx,BYTE PTR ds:[esi]
  420ae6:	in     eax,0xa
  420ae8:	repnz pop edi
  420aea:	push   ecx
  420aeb:	push   ecx
  420aec:	out    dx,eax
  420aed:	repz clc 
  420aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420af0:	xchg   DWORD PTR [eax+0x220c2d6a],ebx
  420af6:	dec    ecx
  420af7:	stc    
  420af8:	and    BYTE PTR [ebx],ch
  420afa:	cmc    
  420afb:	mov    edx,0xb507f464
  420b00:	mov    ch,BYTE PTR [edx+0x310d5423]
  420b06:	in     eax,dx
  420b07:	xchg   ebx,eax
  420b08:	dec    ebp
  420b09:	or     eax,0x81b4c498
  420b0e:	aam    0xe2
  420b10:	jecxz  0x420b52
  420b12:	pop    ecx
  420b13:	icebp  
  420b14:	je     0x420b19
  420b16:	jno    0x420b35
  420b18:	scas   al,BYTE PTR es:[edi]
  420b19:	dec    ah
  420b1b:	sub    eax,0x757c8ef9
  420b20:	not    DWORD PTR [ebp+0x12]
  420b23:	dec    ebx
  420b24:	pop    ebx
  420b25:	mov    al,ds:0x4f36323f
  420b2a:	xor    eax,DWORD PTR [esi-0x3c]
  420b2d:	mov    bx,0x24e5
  420b31:	jnp    0x420b38
  420b33:	sub    ecx,DWORD PTR [edi+0x3a]
  420b36:	xchg   esi,eax
  420b37:	pop    edi
  420b38:	push   0x3e
  420b3a:	xor    ecx,ebx
  420b3c:	in     al,0xab
  420b3e:	daa    
  420b3f:	test   eax,0x5e5048dc
  420b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b45:	pop    DWORD PTR [esi-0x63]
  420b48:	(bad)  
  420b49:	pop    ebp
  420b4a:	les    ecx,FWORD PTR [ebp-0x1451cc07]
  420b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b51:	mov    cs,esi
  420b53:	mov    ebp,0x8c49fc44
  420b58:	nop
  420b59:	cli    
  420b5a:	mov    dl,0x1e
  420b5c:	adc    al,0x5a
  420b5e:	dec    esp
  420b5f:	mov    ebp,0x5a59556e
  420b64:	mov    al,0x68
  420b66:	sbb    al,0x67
  420b68:	jns    0x420b0c
  420b6a:	sub    eax,0x2e00a4bb
  420b6f:	in     al,dx
  420b70:	test   eax,0x1beaf3d
  420b75:	jecxz  0x420b13
  420b77:	lods   al,BYTE PTR ds:[esi]
  420b78:	outs   dx,BYTE PTR ds:[esi]
  420b79:	inc    ebp
  420b7a:	(bad)  
  420b7b:	jmp    0x420bb8
  420b7d:	jbe    0x420bb1
  420b7f:	sahf   
  420b80:	sbb    eax,0x4dc583c9
  420b85:	pop    ds
  420b86:	cmp    ebp,DWORD PTR [edx+0x2d]
  420b89:	mov    ?,WORD PTR [ecx+0x4cfb25f6]
  420b8f:	arpl   WORD PTR ds:0xd346867f,bp
  420b95:	xor    al,0xfd
  420b97:	sub    DWORD PTR [edx],esi
  420b99:	push   edx
  420b9a:	pop    es
  420b9b:	aam    0x85
  420b9d:	mov    ebx,0x11b88c54
  420ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba3:	jmp    0xbab0cc43
  420ba8:	push   edi
  420ba9:	or     eax,0x23722a42
  420bae:	cwde   
  420baf:	mov    bh,BYTE PTR [ecx-0x80]
  420bb2:	arpl   WORD PTR [edi+0x4c],bp
  420bb5:	pop    edx
  420bb6:	inc    ebp
  420bb7:	mov    eax,ecx
  420bb9:	cmp    ah,dh
  420bbb:	inc    esi
  420bbc:	cmp    DWORD PTR [edi+0x43],edx
  420bbf:	adc    esp,DWORD PTR ds:0xd896fc61
  420bc5:	pop    esi
  420bc6:	pop    esi
  420bc7:	das    
  420bc8:	and    eax,0x7ef448f3
  420bcd:	cmp    eax,0xc003d17a
  420bd2:	test   al,0xd3
  420bd4:	jmp    0xcd195087
  420bd9:	lock pop DWORD PTR [eax+ebp*8+0x6a130fb4]
  420be1:	clc    
  420be2:	cmp    DWORD PTR [esi+eax*8-0x5846973c],esp
  420be9:	push   ebx
  420bea:	and    dl,BYTE PTR [eax]
  420bec:	push   ecx
  420bed:	add    ebp,esp
  420bef:	bound  ebx,QWORD PTR [ebp+ebp*8+0x5d]
  420bf3:	xor    edi,DWORD PTR [eax+edx*1+0x1ecdd2ba]
  420bfa:	inc    edx
  420bfb:	imul   ebx,esp,0x327d3dcf
  420c01:	lahf   
  420c02:	jmp    0x5bc2:0xcf6f007a
  420c09:	scas   eax,DWORD PTR es:[edi]
  420c0a:	js     0x420c1f
  420c0c:	in     eax,dx
  420c0d:	mov    dl,0xaa
  420c0f:	imul   edx,DWORD PTR [ebp+0x1954e493],0xfffffff5
  420c16:	add    edx,ebx
  420c18:	push   0x2e
  420c1a:	(bad)  
  420c1b:	(bad)  
  420c1c:	ins    BYTE PTR es:[edi],dx
  420c1d:	aad    0xfc
  420c1f:	dec    ebx
  420c20:	aas    
  420c21:	stos   DWORD PTR es:[edi],eax
  420c22:	aaa    
  420c23:	repnz popf 
  420c25:	or     DWORD PTR [esi-0x4d],esp
  420c28:	push   esi
  420c29:	xchg   ebp,eax
  420c2a:	fld    DWORD PTR [edi]
  420c2c:	test   eax,0x3781e789
  420c31:	or     eax,0xe817a52f
  420c36:	sbb    esi,DWORD PTR [eax]
  420c38:	retf   0xc2fd
  420c3b:	push   edx
  420c3c:	loop   0x420c3f
  420c3e:	imul   eax,DWORD PTR [ebx-0x61ac2d1b],0xe151847
  420c48:	ins    DWORD PTR es:[edi],dx
  420c49:	mov    ds:0x432ed8d9,al
  420c4e:	loope  0x420c10
  420c50:	nop
  420c51:	push   esp
  420c52:	ins    BYTE PTR es:[edi],dx
  420c53:	cs push 0x8a024158
  420c59:	call   0x4bd835ae
  420c5e:	test   ecx,esp
  420c60:	(bad)  
  420c61:	cmc    
  420c62:	xor    eax,0xf5cea534
  420c67:	out    0x40,eax
  420c69:	sar    DWORD PTR [ebx+ecx*4-0x32eab2a0],1
  420c70:	add    ecx,DWORD PTR ss:[esi+0x71]
  420c74:	test   bh,0x8f
  420c77:	pop    ss
  420c78:	ror    BYTE PTR cs:[esi],0xaf
  420c7c:	add    ah,ch
  420c7e:	shl    edi,0x48
  420c81:	push   esp
  420c82:	jne    0x420c67
  420c84:	cmp    DWORD PTR [esi-0x31867e3b],0x1e
  420c8b:	inc    ecx
  420c8c:	sbb    DWORD PTR [edi+edi*4+0x1199c736],eax
  420c93:	xchg   ebx,eax
  420c94:	mov    eax,DWORD PTR [ecx]
  420c96:	fs cwde 
  420c98:	mov    BYTE PTR [ecx+edi*2],dl
  420c9b:	jecxz  0x420c2a
  420c9d:	and    ch,BYTE PTR [ebp+esi*8-0x1d]
  420ca1:	call   0x1aeb:0x9ad91287
  420ca8:	(bad)  [esi+edx*4]
  420cab:	push   ss
  420cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cad:	sub    BYTE PTR [ecx],ch
  420caf:	mov    cl,0x1a
  420cb1:	inc    edi
  420cb2:	mov    eax,0xf93c7697
  420cb7:	scas   al,BYTE PTR es:[edi]
  420cb8:	stos   BYTE PTR es:[edi],al
  420cb9:	pop    ebx
  420cba:	sbb    eax,DWORD PTR [esi-0x5c]
  420cbd:	je     0x420c73
  420cbf:	in     eax,dx
  420cc0:	out    dx,al
  420cc1:	lds    esi,FWORD PTR [esi+0x323d1e5c]
  420cc7:	and    DWORD PTR [esi],ebp
  420cc9:	inc    esp
  420cca:	ds jle 0x420cc0
  420ccd:	fbstp  TBYTE PTR [edx+0x2c]
  420cd0:	jmp    0x6c72:0xd920be40
  420cd7:	and    al,0xfe
  420cd9:	outs   dx,DWORD PTR ds:[esi]
  420cda:	cli    
  420cdb:	mov    esi,0x8c73575b
  420ce0:	loop   0x420c81
  420ce2:	loop   0x420c81
  420ce4:	je     0x420cc1
  420ce6:	(bad)  
  420ce7:	rcl    DWORD PTR [ebp+0x2f95a98],cl
  420ced:	mov    cl,0x5a
  420cef:	loope  0x420cd1
  420cf1:	mov    esi,?
  420cf3:	mov    edi,0xaec6ea92
  420cf8:	and    BYTE PTR [eax],ah
  420cfa:	inc    ebx
  420cfb:	inc    edx
  420cfc:	aaa    
  420cfd:	jo     0x420cb1
  420cff:	ss inc edx
  420d01:	mov    ah,0xd8
  420d03:	ss xchg edi,eax
  420d05:	int    0x37
  420d07:	daa    
  420d08:	fcomp  QWORD PTR [esi+eiz*2-0x5e976fbf]
  420d0f:	fist   WORD PTR [ebx-0x7a]
  420d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d13:	push   edi
  420d14:	xchg   edi,eax
  420d15:	xchg   esp,eax
  420d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d17:	lock or al,0x43
  420d1a:	mov    edi,0xaca35fbf
  420d1f:	push   0x44b423b5
  420d24:	call   0xaea9:0x60b31a82
  420d2b:	mov    al,ds:0x699fe2f4
  420d30:	or     BYTE PTR [eax],0x64
  420d33:	cmp    eax,0x76587fdb
  420d38:	mov    ebp,edi
  420d3a:	adc    al,0x86
  420d3c:	lahf   
  420d3d:	pop    esi
  420d3e:	addr16 sub al,0xbb
  420d41:	jp     0x420cd4
  420d43:	sub    al,0x24
  420d45:	fisttp QWORD PTR ds:[eax-0x58b388e8]
  420d4c:	clc    
  420d4d:	sub    DWORD PTR [edi],ecx
  420d4f:	inc    eax
  420d50:	out    dx,al
  420d51:	cmp    esp,DWORD PTR [eax+ebx*8+0x39]
  420d55:	pop    ebx
  420d56:	add    DWORD PTR [ebp-0x28a9dc2f],ebx
  420d5c:	daa    
  420d5d:	ins    DWORD PTR es:[edi],dx
  420d5e:	ds jmp 0xcee1:0xdda547e
  420d66:	xchg   esp,eax
  420d67:	std    
  420d68:	and    BYTE PTR [ebp+0x41],dh
  420d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d6c:	adc    al,0x8
  420d6e:	mov    esp,0xd77dcb60
  420d73:	xchg   esp,eax
  420d74:	pop    esi
  420d75:	pop    eax
  420d76:	call   0xa5f2d511
  420d7b:	sub    eax,0xf65f5d10
  420d80:	rol    dh,0x5a
  420d83:	(bad)  
  420d84:	adc    ah,bl
  420d86:	test   bh,0x11
  420d89:	push   ds
  420d8a:	inc    edx
  420d8b:	push   0x62
  420d8d:	push   edi
  420d8e:	cmp    DWORD PTR [eax-0x66],ebp
  420d91:	xlat   BYTE PTR ds:[ebx]
  420d92:	xchg   esp,eax
  420d93:	test   DWORD PTR [ecx],0x7aa8c872
  420d99:	popf   
  420d9a:	xor    ah,BYTE PTR [ebp+0x1803783c]
  420da0:	push   cs
  420da1:	jg     0x420d6b
  420da3:	and    DWORD PTR [esi-0x5585a848],eax
  420da9:	repnz retf 0x87d7
  420dad:	or     eax,0x78a47a2
  420db2:	into   
  420db3:	mov    ebp,0x4219b598
  420db8:	fwait
  420db9:	push   ebx
  420dba:	mov    al,ds:0xd53e837f
  420dbf:	sub    dl,cl
  420dc1:	dec    ebx
  420dc2:	out    dx,eax
  420dc3:	adc    DWORD PTR [ecx],0x498f5f73
  420dc9:	fiadd  WORD PTR [ebx]
  420dcb:	fcmovu st,st(2)
  420dcd:	in     eax,0x9
  420dcf:	and    al,BYTE PTR [ebp-0x69f0ed9c]
  420dd5:	inc    esi
  420dd6:	jno    0x420e39
  420dd8:	mov    ch,BYTE PTR [edx-0x7e]
  420ddb:	jmp    esp
  420ddd:	loopne 0x420d9d
  420ddf:	iret   
  420de0:	cwde   
  420de1:	add    al,0x7e
  420de3:	mov    cl,ah
  420de5:	push   esp
  420de6:	xchg   esi,eax
  420de7:	pop    esi
  420de8:	cwde   
  420de9:	inc    eax
  420dea:	inc    esi
  420deb:	pop    edx
  420dec:	xor    cl,cl
  420dee:	add    ah,BYTE PTR [ebx+0x34b2da85]
  420df4:	call   0x8c90:0x916aebaa
  420dfb:	or     DWORD PTR [ebp+0x0],0xea2f2816
  420e02:	push   0x59f231db
  420e07:	xlat   BYTE PTR ds:[ebx]
  420e08:	jmp    0x420e3a
  420e0a:	test   BYTE PTR [edi],dh
  420e0c:	add    al,0xa3
  420e0e:	adc    al,0x78
  420e10:	retf   
  420e11:	add    esi,ecx
  420e13:	cmc    
  420e14:	sub    eax,0x3f1dab59
  420e19:	test   eax,0x13eb7895
  420e1e:	imul   esp,DWORD PTR [ebx+ebp*8+0x75],0x2b
  420e23:	fsubr  st,st(5)
  420e25:	xchg   esi,eax
  420e26:	inc    esi
  420e27:	gs jl  0x420e87
  420e2a:	out    dx,al
  420e2b:	xor    al,0xf9
  420e2d:	test   DWORD PTR [ecx+0x24d5dca9],ecx
  420e33:	mov    ds:0x453bb37f,eax
  420e38:	inc    esi
  420e39:	(bad)  
  420e3a:	das    
  420e3b:	(bad)  
  420e3c:	sbb    edx,DWORD PTR [ebx]
  420e3e:	ret    0x1629
  420e41:	leave  
  420e42:	dec    eax
  420e43:	pop    ebx
  420e44:	cmp    edx,DWORD PTR [esi-0x271904b]
  420e4a:	ins    BYTE PTR es:[edi],dx
  420e4b:	dec    esp
  420e4c:	cmp    BYTE PTR [ebp+0x67b1f802],bl
  420e52:	cmc    
  420e53:	mov    edx,ebp
  420e55:	mov    edi,0xabf7d2ab
  420e5a:	jae    0x420e20
  420e5c:	lahf   
  420e5d:	jecxz  0x420e37
  420e5f:	popf   
  420e60:	add    ah,BYTE PTR [ecx+0x23]
  420e63:	mov    al,ds:0x1e055a36
  420e69:	xor    eax,0x21742ed5
  420e6e:	or     BYTE PTR [esi+0x50],dl
  420e71:	mov    ss,WORD PTR [esi*2-0x617c59b1]
  420e78:	clc    
  420e79:	mov    esi,0xc5f93fa4
  420e7e:	pop    DWORD PTR [eax]
  420e80:	loope  0x420e81
  420e82:	or     eax,0xdf3997c0
  420e87:	shl    bl,1
  420e89:	and    bh,al
  420e8b:	mov    ecx,0x258c50e
  420e90:	jg     0x420e17
  420e92:	sbb    BYTE PTR [ebx-0x7524cf37],bh
  420e98:	mov    ds:0x1a6e21c9,eax
  420e9d:	adc    ebp,DWORD PTR [eax]
  420e9f:	dec    ebx
  420ea0:	aad    0x2
  420ea2:	xor    BYTE PTR [esi+0x67],0x16
  420ea6:	ds jmp 0x1cba387
  420eac:	push   edi
  420ead:	addr16 out dx,al
  420eaf:	int    0xcf
  420eb1:	and    eax,0x707ab8cb
  420eb6:	scas   eax,DWORD PTR es:[edi]
  420eb7:	cmp    eax,0x9d26b67e
  420ebc:	loopne 0x420e9f
  420ebe:	lods   eax,DWORD PTR ds:[esi]
  420ebf:	jmp    FWORD PTR [ecx]
  420ec1:	xchg   ebp,eax
  420ec2:	ins    BYTE PTR es:[edi],dx
  420ec3:	popf   
  420ec4:	and    BYTE PTR [edx],bl
  420ec6:	pop    ecx
  420ec7:	ja     0x420ebe
  420ec9:	mov    ah,BYTE PTR ds:0x6a4e9c4d
  420ecf:	aam    0xa9
  420ed1:	aad    0x67
  420ed3:	sti    
  420ed4:	lock mov edx,0x7b706c95
  420eda:	dec    ebp
  420edb:	jno    0x420e9a
  420edd:	jge    0x420e8f
  420edf:	sub    BYTE PTR [edx-0x7ced66b1],ch
  420ee5:	jmp    0x5a72:0xa3086728
  420eec:	or     bh,ch
  420eee:	or     al,0xdb
  420ef0:	mov    bl,0x88
  420ef2:	push   0x5f
  420ef4:	lea    esi,[ecx-0x6dbb686b]
  420efa:	cwde   
  420efb:	and    al,0x1f
  420efd:	sub    edx,DWORD PTR [edx-0x1af2cb0d]
  420f03:	add    bl,ch
  420f05:	or     cl,bl
  420f07:	call   0xf217fcf3
  420f0c:	pop    ss
  420f0d:	and    dh,BYTE PTR [ecx-0x68]
  420f10:	or     DWORD PTR [edx+0x27d3a31e],ebp
  420f16:	or     al,0x0
  420f18:	mov    eax,0x80148485
  420f1d:	push   ebx
  420f1e:	fcom   DWORD PTR [edx-0x6906f7a5]
  420f24:	rcr    ch,0x49
  420f27:	sub    ecx,DWORD PTR [ecx]
  420f29:	dec    edi
  420f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f2b:	add    DWORD PTR [esi],edi
  420f2d:	dec    ecx
  420f2e:	aam    0xb5
  420f30:	out    0xbc,eax
  420f32:	stc    
  420f33:	in     al,0xdd
  420f35:	xor    eax,0x7e365a99
  420f3a:	mov    ah,0xd3
  420f3c:	mov    ebp,0xafc08d80
  420f41:	jg     0x420f77
  420f43:	imul   ebp,DWORD PTR [ecx],0xf0655dca
  420f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f4a:	sahf   
  420f4b:	out    dx,al
  420f4c:	(bad)  
  420f4d:	bound  ebx,QWORD PTR [eax]
  420f4f:	inc    BYTE PTR [ecx-0xa]
  420f52:	ja     0x420f87
  420f54:	jmp    0x420f14
  420f56:	mov    ds:0xb0cbaa93,eax
  420f5b:	mov    bh,0x9e
  420f5d:	xor    BYTE PTR [edi+0x17],0x7e
  420f61:	and    DWORD PTR [eax+0x46c976e8],0xffffffe3
  420f68:	pop    edx
  420f69:	jg     0x420fc3
  420f6b:	cmp    ah,BYTE PTR [ecx+ebx*2+0x5]
  420f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f70:	xchg   ebx,eax
  420f71:	jp     0x420fdc
  420f73:	add    BYTE PTR [ebx+0x3],dl
  420f76:	popf   
  420f77:	mov    ds:0x4de9012d,eax
  420f7c:	jb     0x420fec
  420f7e:	inc    ecx
  420f7f:	cmp    DWORD PTR [ebx+esi*2-0x28],esi
  420f83:	test   BYTE PTR ss:[eax+0x1c],dh
  420f87:	nop
  420f88:	fsubr  QWORD PTR [edi]
  420f8a:	std    
  420f8b:	sar    DWORD PTR [esi],1
  420f8d:	pop    ds
  420f8e:	mov    esi,0xdb1a4d0
  420f93:	out    0x58,eax
  420f95:	push   ebx
  420f96:	imul   esi,eax,0xa52b4e4a
  420f9c:	mov    ch,0xc9
  420f9e:	push   ds
  420f9f:	ret    0xb262
  420fa2:	sub    eax,eax
  420fa4:	clc    
  420fa5:	cmp    DWORD PTR [ebx-0x1b],edi
  420fa8:	jl     0x42101d
  420faa:	and    al,0xaf
  420fac:	sub    eax,0xba1835c7
  420fb1:	pop    edi
  420fb2:	add    ebx,DWORD PTR [eax-0x34]
  420fb5:	mov    bl,cl
  420fb7:	int3   
  420fb8:	mov    esi,0x76e30142
  420fbd:	push   0x873c3576
  420fc2:	clc    
  420fc3:	push   cs
  420fc4:	cmp    al,dh
  420fc6:	xchg   ebx,eax
  420fc7:	std    
  420fc8:	dec    esi
  420fc9:	mov    ecx,0x62c84d93
  420fce:	es cdq 
  420fd0:	mov    ebx,0xf513af00
  420fd5:	cld    
  420fd6:	xchg   edi,eax
  420fd7:	loope  0x420ff9
  420fd9:	in     eax,0x6f
  420fdb:	add    BYTE PTR [ebp+0x2b],ch
  420fde:	out    0xd6,al
  420fe0:	ror    DWORD PTR ds:0xcb1e819c,0x4c
  420fe7:	pop    ds
  420fe8:	ins    DWORD PTR es:[edi],dx
  420fe9:	push   cs
  420fea:	dec    esi
  420feb:	lock scas al,BYTE PTR es:[edi]
  420fed:	stos   DWORD PTR es:[edi],eax
  420fee:	xor    BYTE PTR [esi+0x2b],0xf3
  420ff2:	pushf  
  420ff3:	xchg   esi,eax
  420ff5:	pop    es
  420ff6:	mov    ebx,0x6100da25
  420ffb:	(bad)  
  420ffc:	je     0x420f91
  420ffe:	stc    
  420fff:	jp     0x420ffa
  421001:	xor    bh,BYTE PTR [ebp*8-0x1dfbb68]
  421008:	inc    esi
  421009:	ins    BYTE PTR es:[edi],dx
  42100a:	nop
  42100b:	sbb    eax,0xcba05be4
  421010:	xor    DWORD PTR [ebx],esp
  421012:	mov    bl,0x25
  421014:	push   cs
  421015:	mov    ah,0x61
  421017:	rol    BYTE PTR [ecx],0x13
  42101a:	aas    
  42101b:	pusha  
  42101c:	retf   
  42101d:	in     eax,0x26
  42101f:	addr16 (bad) 
  421021:	and    dl,al
  421023:	cdq    
  421024:	sub    DWORD PTR [ebx-0x6dc11fdf],ebp
  42102a:	add    al,0xf4
  42102c:	xchg   ecx,eax
  42102d:	mov    ds:0x66a29329,al
  421032:	push   ecx
  421033:	dec    esi
  421034:	xchg   ecx,eax
  421035:	inc    ecx
  421036:	push   ss
  421037:	aad    0x6
  421039:	xor    BYTE PTR [ecx],al
  42103b:	jmp    0x53ca:0x424b9f
  421042:	sub    DWORD PTR [ecx+eiz*2+0xb],eax
  421046:	mov    esi,0xaa720de8
  42104b:	push   edi
  42104c:	add    DWORD PTR [bx-0x2f45],edx
  421051:	sub    BYTE PTR [ecx+0x4c5cf1e8],0xb5
  421058:	dec    ebx
  421059:	sahf   
  42105a:	adc    al,0x8f
  42105c:	stos   BYTE PTR es:[edi],al
  42105d:	or     ah,BYTE PTR [eax+0x2c]
  421060:	imul   ebx,DWORD PTR [esi-0x7e],0x579f0069
  421067:	add    BYTE PTR [eax+0x4e],bh
  42106a:	(bad)  
  42106b:	test   eax,0x5521ada1
  421070:	xor    eax,0xbf1c2861
  421075:	out    0x96,eax
  421077:	mov    ecx,ebp
  421079:	mov    eax,ds:0xf0c9c81b
  42107e:	xchg   esp,edx
  421080:	sbb    DWORD PTR gs:[esi-0x21],ebp
  421084:	or     al,0x93
  421086:	(bad)  
  421087:	dec    ebx
  421088:	aad    0xbf
  42108a:	dec    esi
  42108b:	es jl  0x42101c
  42108e:	lock arpl WORD PTR [edi-0x38],si
  421092:	inc    esi
  421093:	rcr    BYTE PTR [esi-0x6a],1
  421096:	xchg   ch,bl
  421098:	pop    es
  421099:	aam    0x5c
  42109b:	mov    WORD PTR [ebp+0x2c],?
  42109e:	je     0x421117
  4210a0:	enter  0x8379,0xde
  4210a4:	xor    eax,0x6bec954a
  4210a9:	pop    ds
  4210aa:	mov    ecx,ecx
  4210ac:	hlt    
  4210ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ae:	shl    DWORD PTR [eax-0x8],0x30
  4210b2:	dec    edx
  4210b3:	fisub  DWORD PTR [esi]
  4210b5:	push   esp
  4210b6:	ins    BYTE PTR es:[edi],dx
  4210b7:	iret   
  4210b8:	imul   ebx,DWORD PTR [ebx+0x3d9b3f27],0x9891c0a4
  4210c2:	popf   
  4210c3:	popa   
  4210c4:	and    ah,BYTE PTR ds:0x13a80d73
  4210ca:	push   ds
  4210cb:	xchg   BYTE PTR [edx-0x3b0115b6],dh
  4210d1:	push   eax
  4210d2:	and    al,0x97
  4210d4:	push   esp
  4210d5:	cmc    
  4210d6:	mov    bl,0x69
  4210d8:	cdq    
  4210d9:	or     eax,0xf9c2338
  4210de:	in     eax,0xea
  4210e0:	and    dl,ah
  4210e2:	mov    ah,0x65
  4210e4:	ror    DWORD PTR [edi],1
  4210e6:	jmp    0x1fc9:0xa16bb02f
  4210ed:	add    DWORD PTR [esi+0x103e9308],eax
  4210f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210f4:	add    BYTE PTR [esi-0xad2c0fd],ch
  4210fa:	add    ch,BYTE PTR [ebx+0x4b9f1bb7]
  421100:	and    eax,0xd49caba6
  421105:	adc    eax,0x9a1144b8
  42110a:	ins    BYTE PTR es:[edi],dx
  42110b:	stos   DWORD PTR es:[edi],eax
  42110c:	call   0x729f9ada
  421111:	add    esi,esp
  421113:	in     eax,0x6a
  421115:	ss inc eax
  421117:	cmc    
  421118:	xchg   ebx,eax
  421119:	or     al,BYTE PTR [ecx-0x3787a686]
  42111f:	dec    esi
  421120:	fistp  QWORD PTR [esp+ebp*1-0x562dad]
  421127:	je     0x421167
  421129:	mov    ebp,0xe3072d18
  42112e:	ficom  WORD PTR [ebx+0x68]
  421131:	xor    edx,esi
  421133:	div    BYTE PTR [eax-0x5d]
  421136:	fmulp  st(2),st
  421138:	les    esp,FWORD PTR [edi+0x4e]
  42113b:	dec    edi
  42113c:	sub    DWORD PTR [edi-0x71],esi
  42113f:	inc    esi
  421140:	imul   esp,DWORD PTR [esi+0x21a90a48],0x251f116
  42114a:	jbe    0x42112d
  42114c:	sub    esp,ebp
  42114e:	lea    edi,[edx]
  421150:	ret    0x9628
  421153:	fnstenv [esi]
  421155:	inc    ecx
  421156:	retf   0xb6fe
  421159:	push   es
  42115a:	int3   
  42115b:	push   0xed2f9ed
  421160:	sbb    eax,0xec9dd908
  421165:	mov    dl,0xaf
  421167:	scas   al,BYTE PTR es:[edi]
  421168:	mov    dl,0xf9
  42116a:	jne    0x4211c9
  42116c:	sbb    esp,edx
  42116e:	icebp  
  42116f:	sbb    edi,DWORD PTR [ecx+0x4a]
  421172:	sbb    ebx,esi
  421174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421175:	sbb    esi,DWORD PTR [edx-0x70]
  421178:	inc    ebp
  421179:	push   ds
  42117a:	loope  0x4211b5
  42117c:	add    ch,BYTE PTR [ecx+0x684d31a9]
  421182:	pop    esi
  421183:	in     al,0x0
  421185:	sti    
  421186:	mov    BYTE PTR [eax+0x4a25f1f5],dh
  42118c:	fild   DWORD PTR [esi+0x13]
  42118f:	fiadd  DWORD PTR ds:0xb975bae
  421195:	out    dx,eax
  421196:	les    eax,FWORD PTR [eax+0x6a]
  421199:	xchg   edx,eax
  42119a:	jno    0x421195
  42119c:	mov    ss,WORD PTR ds:0x96f143e0
  4211a2:	fidiv  DWORD PTR [ecx+0xd]
  4211a5:	or     edi,DWORD PTR [ebp-0x64]
  4211a8:	add    DWORD PTR [esi-0x55],ebx
  4211ab:	inc    eax
  4211ac:	cwde   
  4211ad:	outs   dx,BYTE PTR ds:[si]
  4211af:	add    al,0x3f
  4211b1:	or     ch,bl
  4211b3:	js     0x42119e
  4211b5:	pushf  
  4211b6:	arpl   WORD PTR [ecx+0x1cb2021],bx
  4211bc:	(bad)  
  4211bd:	sar    DWORD PTR [esi+ebx*2+0x4f],1
  4211c1:	adc    BYTE PTR [edi],ch
  4211c3:	and    dl,BYTE PTR [ebp-0x6c2400c7]
  4211c9:	popa   
  4211ca:	mov    eax,0x5a60f83
  4211cf:	out    dx,al
  4211d0:	push   0x6b9a012e
  4211d5:	stos   BYTE PTR es:[edi],al
  4211d6:	add    ebp,DWORD PTR [ecx]
  4211d8:	(bad)  [edi+0x4a2118b9]
  4211de:	xlat   BYTE PTR ds:[ebx]
  4211df:	jp     0x4211ab
  4211e1:	cmp    al,0xe9
  4211e3:	test   eax,0xaa0bbf8c
  4211e8:	int    0x2a
  4211ea:	sbb    eax,0x9ee03a96
  4211ef:	add    BYTE PTR [esp+eax*4+0x62],ch
  4211f3:	rcl    BYTE PTR [ecx],1
  4211f5:	leave  
  4211f6:	in     al,dx
  4211f7:	mov    al,0xf5
  4211f9:	retf   
  4211fa:	lods   al,BYTE PTR ds:[esi]
  4211fb:	pop    ecx
  4211fc:	pop    esp
  4211fd:	add    DWORD PTR [edx-0x7dee5908],0x4fb3806c
  421207:	dec    edx
  421208:	xchg   ecx,eax
  421209:	into   
  42120a:	jle    0x4211d5
  42120c:	nop
  42120d:	scas   al,BYTE PTR es:[edi]
  42120e:	and    al,0xd4
  421210:	push   ebp
  421211:	(bad)  
  421212:	mov    edi,0xb9ab0bf6
  421217:	cs mov ah,0x9c
  42121a:	cmp    ebx,edx
  42121c:	aas    
  42121d:	pop    edx
  42121e:	rol    edx,0xb0
  421221:	jne    0x4211fe
  421223:	aaa    
  421224:	outs   dx,DWORD PTR ds:[esi]
  421225:	out    0x3b,al
  421227:	int3   
  421228:	jb     0x4211b4
  42122a:	out    dx,eax
  42122b:	push   esp
  42122c:	cld    
  42122d:	iret   
  42122e:	jnp    0x421262
  421230:	outs   dx,DWORD PTR ds:[esi]
  421231:	and    DWORD PTR [ebx+0x5a81f493],ebx
  421237:	push   cs
  421238:	std    
  421239:	and    ebp,DWORD PTR [eax-0x3a]
  42123c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42123d:	fimul  DWORD PTR [esi+0x2c68f109]
  421243:	int    0xe8
  421245:	cmp    esi,ebp
  421247:	or     DWORD PTR [edi-0x29],ebp
  42124a:	scas   al,BYTE PTR es:[edi]
  42124b:	es ds lahf 
  42124e:	jbe    0x4211f1
  421250:	push   cs
  421251:	mov    BYTE PTR [edi-0x23],ch
  421254:	mov    al,0xd
  421256:	ror    BYTE PTR [eax-0x51f1b8b8],0x63
  42125d:	adc    eax,0xaa9f9544
  421262:	xor    ecx,0xfffffff5
  421265:	adc    dh,BYTE PTR [ebp+eiz*8+0x7]
  421269:	jns    0x42120b
  42126b:	call   0x5503:0xe30064da
  421272:	mov    esp,0x7199fd1e
  421277:	push   ss
  421278:	and    al,0xe
  42127a:	adc    al,0xc9
  42127c:	cmp    eax,0xf41f4e28
  421281:	dec    esi
  421282:	cmp    bh,BYTE PTR [edx+0x46a608d9]
  421288:	mov    ecx,0x89bec3e5
  42128d:	test   al,0xae
  42128f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421290:	cmp    al,0x58
  421292:	test   al,0x30
  421294:	mov    eax,0x3ab64379
  421299:	imul   ecx,DWORD PTR [ebp+0x7471c4c],0x53e8b416
  4212a3:	push   ds
  4212a4:	dec    edx
  4212a5:	mov    edx,0x147982bb
  4212aa:	adc    eax,0xebdee0ee
  4212af:	push   ss
  4212b0:	(bad)  
  4212b1:	rcr    DWORD PTR [ebp-0x74f7c811],0xd2
  4212b8:	dec    edi
  4212b9:	ret    0xa56c
  4212bc:	sub    DWORD PTR [esi],ebp
  4212be:	mov    cl,0x49
  4212c0:	push   edi
  4212c1:	jno    0x4212b2
  4212c3:	add    DWORD PTR [eax],esp
  4212c5:	lods   al,BYTE PTR ds:[esi]
  4212c6:	call   0xa3ce7c39
  4212cb:	jecxz  0x421311
  4212cd:	aad    0x9e
  4212cf:	sar    DWORD PTR [edi+edi*8],1
  4212d2:	mov    esp,0xa5ae6f7
  4212d7:	hlt    
  4212d8:	xchg   esi,eax
  4212d9:	add    DWORD PTR [ecx-0x26],0x572e18cf
  4212e0:	add    BYTE PTR [esi-0x11ebc2b],cl
  4212e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212e7:	mov    ebx,0xcf809e17
  4212ec:	daa    
  4212ed:	cmp    cl,BYTE PTR [edx+edi*4-0x55]
  4212f1:	(bad)  
  4212f2:	mov    ecx,ecx
  4212f4:	and    edi,DWORD PTR [ebp+0x4aaac0b]
  4212fa:	repz cmp ch,dl
  4212fd:	mov    bl,0x3
  4212ff:	mov    ds:0x99d98b88,al
  421304:	pop    esi
  421305:	stc    
  421306:	sahf   
  421307:	pop    ebx
  421308:	inc    ebx
  421309:	pop    ds
  42130a:	mov    ah,0x20
  42130c:	cmp    BYTE PTR [edi],ch
  42130e:	bound  esi,QWORD PTR [edi-0x2c3f74c1]
  421314:	aaa    
  421315:	inc    eax
  421316:	mov    eax,ds:0xfb2177df
  42131b:	push   ss
  42131c:	(bad)  
  42131e:	lds    eax,FWORD PTR [edx+0x77]
  421321:	jmp    0x421390
  421323:	mov    WORD PTR [esi],es
  421325:	or     al,dl
  421327:	cmp    BYTE PTR [edi+0x27e9112e],ch
  42132d:	ret    0xa682
  421330:	pop    es
  421331:	les    edx,FWORD PTR [ebx+0x171252fe]
  421337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421338:	push   esp
  421339:	pop    ebp
  42133a:	mov    ecx,0xd918aef9
  42133f:	cmp    al,0x42
  421341:	popa   
  421342:	sbb    BYTE PTR [edx+0xb4df792],ah
  421348:	xor    BYTE PTR [eax-0x762f0b9d],al
  42134e:	mov    ebx,0x3ea5dc17
  421353:	int3   
  421354:	jp     0x4213c8
  421356:	int    0x6a
  421358:	fst    QWORD PTR [ebx+eax*4+0x42]
  42135c:	adc    BYTE PTR [edi],0x2a
  42135f:	jmp    0x421319
  421361:	dec    ecx
  421362:	out    0xa3,al
  421364:	inc    eax
  421365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421366:	xchg   esp,eax
  421367:	add    BYTE PTR [edi+ecx*1+0xe],dl
  42136b:	mov    eax,ds:0x7a308413
  421370:	inc    esi
  421371:	mov    ebx,0xb6526d1c
  421376:	adc    DWORD PTR [esi+eax*4-0x2e],esi
  42137a:	lahf   
  42137b:	popa   
  42137c:	inc    ebp
  42137d:	jl     0x421393
  42137f:	mov    bl,0xcc
  421381:	stos   BYTE PTR es:[edi],al
  421382:	push   ebx
  421383:	sbb    eax,ebx
  421385:	jmp    0x421389
  421387:	dec    ecx
  421388:	push   edi
  421389:	jb     0x421349
  42138b:	push   esi
  42138c:	adc    bl,dh
  42138e:	das    
  42138f:	ja     0x421353
  421391:	add    dh,BYTE PTR ds:0x5ee5da20
  421397:	push   ss
  421398:	add    al,0x82
  42139a:	pop    ebx
  42139b:	fucomip st,st(4)
  42139d:	scas   eax,DWORD PTR es:[edi]
  42139e:	sbb    eax,0x50ece1c4
  4213a3:	(bad)
  4213a6:	jecxz  0x4213d0
  4213a8:	int    0xe2
  4213aa:	stc    
  4213ab:	xor    dh,BYTE PTR [edi+0x653f57ad]
  4213b1:	sar    BYTE PTR [ebp-0x2],0xef
  4213b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213b6:	mov    dl,0xb2
  4213b8:	sahf   
  4213b9:	jl     0x42135e
  4213bb:	call   0x725:0xa4897459
  4213c2:	mov    ch,0xba
  4213c4:	xchg   edi,eax
  4213c5:	stc    
  4213c6:	dec    ebp
  4213c7:	xor    ebx,DWORD PTR [ebp+0x630b633c]
  4213cd:	xchg   ebp,eax
  4213ce:	mov    ebp,0xdd78e776
  4213d3:	xor    al,0x2b
  4213d5:	jg     0x4213e5
  4213d7:	retf   
  4213d8:	mov    esi,0x123d395f
  4213dd:	pusha  
  4213de:	and    cl,BYTE PTR [ebx+0x57]
  4213e1:	(bad)  
  4213e2:	add    ecx,DWORD PTR [esi]
  4213e4:	ja     0x421376
  4213e6:	push   0x6d
  4213e8:	(bad)  
  4213e9:	enter  0x7137,0x62
  4213ed:	or     eax,0xb1c78508
  4213f2:	xchg   ebp,eax
  4213f3:	pop    ecx
  4213f4:	jnp    0x421448
  4213f6:	jmp    0x830b4175
  4213fb:	cld    
  4213fc:	stos   BYTE PTR es:[edi],al
  4213fd:	jmp    0x4238:0x68774b2e
  421404:	sbb    eax,0x15b2a0b2
  421409:	ficom  WORD PTR [edx+0x43]
  42140c:	clc    
  42140d:	lods   al,BYTE PTR ds:[esi]
  42140e:	adc    BYTE PTR [ebp-0x6a],dl
  421411:	xlat   BYTE PTR ds:[ebx]
  421412:	and    bh,BYTE PTR [eax]
  421414:	or     al,0x80
  421416:	icebp  
  421417:	pop    edx
  421418:	jecxz  0x421422
  42141a:	inc    ebp
  42141b:	(bad)  
  42141c:	aaa    
  42141d:	fs fadd st,st(4)
  421420:	jnp    0x42146c
  421422:	aaa    
  421423:	pop    eax
  421424:	push   eax
  421425:	aam    0x47
  421427:	xchg   BYTE PTR [ebx],dh
  421429:	dec    esi
  42142a:	fisub  WORD PTR [ebx-0xf6f9c9e]
  421430:	(bad)  
  421432:	test   bl,al
  421434:	lds    ebp,FWORD PTR [ebp+0x1d]
  421437:	out    0xaf,eax
  421439:	imul   eax,esp,0x47290be
  42143f:	push   es
  421440:	pop    edi
  421441:	pop    ds
  421442:	mov    ebp,0x3d6c491e
  421447:	scas   al,BYTE PTR es:[edi]
  421448:	pop    edx
  421449:	mov    bl,BYTE PTR [ebp+0x931dbfc]
  42144f:	xor    DWORD PTR [eax-0x4ace5520],0xffffffeb
  421456:	mov    esp,0xee7451ad
  42145b:	jge    0x421471
  42145d:	pop    ebp
  42145e:	ror    BYTE PTR [eax-0x3bfdaba],0xaf
  421465:	repnz inc esp
  421467:	push   edx
  421468:	(bad)  
  421469:	jg     0x421462
  42146b:	and    BYTE PTR fs:[ecx],bh
  42146e:	inc    esi
  42146f:	retf   0xb7dc
  421472:	imul   edx,DWORD PTR [esp+ecx*1+0x20232cc3],0xb57f9204
  42147d:	in     eax,0x8d
  42147f:	mov    eax,0xca5b3046
  421484:	mov    esp,DWORD PTR [eax-0x4366736d]
  42148a:	dec    ecx
  42148b:	lea    eax,[eax+0x23]
  42148e:	mov    al,ds:0xae2a3a66
  421493:	ror    BYTE PTR [eax+0x53ade7af],1
  421499:	xor    al,0xd6
  42149b:	enter  0x9aab,0xd0
  42149f:	je     0x4214b4
  4214a1:	mov    edi,0x762cde1f
  4214a6:	xor    edx,0xffffffd0
  4214a9:	mov    eax,0x44fa533d
  4214ae:	imul   edi,DWORD PTR [edi],0x96a2bfc0
  4214b4:	sti    
  4214b5:	adc    eax,0x9e0946a5
  4214ba:	je     0x421486
  4214bc:	sahf   
  4214bd:	dec    ebx
  4214be:	jb     0x4214a3
  4214c0:	scas   eax,DWORD PTR es:[edi]
  4214c1:	or     edx,DWORD PTR [esi+ecx*4]
  4214c4:	fistp  WORD PTR [esi]
  4214c6:	adc    cl,BYTE PTR [ecx+0x1e]
  4214c9:	cmp    BYTE PTR [ebx+eiz*1-0x78503c2a],bh
  4214d0:	xor    bl,dh
  4214d2:	sub    edi,DWORD PTR [ecx]
  4214d4:	adc    dh,cl
  4214d6:	js     0x42145e
  4214d8:	mov    ebp,0x278e392e
  4214dd:	das    
  4214de:	ja     0x4214be
  4214e0:	jl     0x4214f8
  4214e2:	push   edx
  4214e3:	xor    al,0xfb
  4214e5:	xchg   esi,eax
  4214e6:	unpckhps xmm4,XMMWORD PTR [ebx]
  4214e9:	data16 sar cl,cl
  4214ec:	inc    esi
  4214ed:	xchg   edi,eax
  4214ee:	ficom  DWORD PTR [edx+0x5c24e892]
  4214f4:	stos   BYTE PTR es:[edi],al
  4214f5:	push   cs
  4214f6:	add    ah,BYTE PTR [edi-0x6c]
  4214f9:	mov    al,ds:0xf9f54630
  4214fe:	xchg   bh,bh
  421500:	std    
  421501:	mov    dl,0x24
  421503:	jo     0x4214a5
  421505:	jne    0x42148a
  421507:	pop    esp
  421508:	jno    0x421493
  42150a:	sub    al,0xe2
  42150c:	js     0x42150b
  42150e:	cmp    al,0x62
  421510:	call   0x395a:0x563fa46f
  421517:	add    eax,DWORD PTR [ecx]
  421519:	xchg   edi,eax
  42151a:	fimul  WORD PTR [ebp-0xb]
  42151d:	xchg   BYTE PTR [esi+0x4e],dh
  421520:	imul   ecx,ecx,0xaf1d7e00
  421526:	xchg   esp,eax
  421527:	aad    0x83
  421529:	pop    edi
  42152a:	push   0xffffffc5
  42152c:	in     eax,dx
  42152d:	inc    esp
  42152e:	mov    ebp,0x3b8e5c7
  421533:	adc    edx,esi
  421535:	out    0xd7,al
  421537:	loope  0x4214fc
  421539:	xor    eax,0xec046456
  42153e:	adc    al,0xe2
  421540:	cs or  eax,0x595d5ec6
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x30],0x0
  42155d:	mov    DWORD PTR [ebp-0x70],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x60],0x0
  421572:	mov    DWORD PTR [ebp-0x4c],0x0
  421579:	mov    DWORD PTR [ebp-0x8],0x0
  421580:	mov    DWORD PTR [ebp-0x18],0x0
  421587:	mov    DWORD PTR [ebp-0x48],0x0
  42158e:	mov    DWORD PTR [ebp-0x10],0x0
  421595:	mov    DWORD PTR [ebp-0x6c],0x0
  42159c:	mov    DWORD PTR [ebp-0x54],0x0
  4215a3:	mov    DWORD PTR [ebp-0x4],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x50],0x0
  4215b8:	mov    DWORD PTR [ebp-0x68],0x0
  4215bf:	mov    DWORD PTR [ebp-0xc],0x0
  4215c6:	mov    DWORD PTR [ebp-0x5c],0x0
  4215cd:	mov    DWORD PTR [ebp-0x14],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x60]
  42162e:	push   eax
  42162f:	push   0x0
  421631:	push   0x0
  421633:	mov    ecx,DWORD PTR [ebp-0x68]
  421636:	push   ecx
  421637:	call   0x422a10
  42163c:	lea    edx,[ebp-0xc]
  42163f:	push   edx
  421640:	lea    eax,[ebp-0xc]
  421643:	push   eax
  421644:	lea    ecx,[ebp-0x14]
  421647:	push   ecx
  421648:	call   DWORD PTR ds:0x428004
  42164e:	test   eax,eax
  421650:	je     0x42166b
  421652:	mov    edx,DWORD PTR [ebp-0x60]
  421655:	push   edx
  421656:	push   0x8
  421658:	mov    eax,DWORD PTR [ebp-0x68]
  42165b:	push   eax
  42165c:	call   DWORD PTR ds:0x428030
  421662:	mov    ecx,DWORD PTR [ebp-0xc]
  421665:	add    ecx,0x1
  421668:	mov    DWORD PTR [ebp-0xc],ecx
  42166b:	push   0x0
  42166d:	push   0x0
  42166f:	push   0x0
  421671:	call   DWORD PTR ds:0x428000
  421677:	mov    BYTE PTR [ebp-0x40],0x56
  42167b:	call   DWORD PTR ds:0x42803c
  421681:	mov    DWORD PTR [ebp-0x30],eax
  421684:	mov    BYTE PTR [ebp-0x3e],0x72
  421688:	movzx  edx,WORD PTR [ebp-0x30]
  42168c:	test   edx,edx
  42168e:	jne    0x4216e0
  421690:	mov    BYTE PTR [ebp-0x34],0x0
  421694:	mov    DWORD PTR [ebp-0x14],0xe0d
  42169b:	lea    eax,[ebp-0x28]
  42169e:	push   eax
  42169f:	call   DWORD PTR ds:0x428044
  4216a5:	mov    DWORD PTR [ebp-0x60],eax
  4216a8:	mov    DWORD PTR [ebp-0x58],0x3a
  4216af:	lea    ecx,[ebp-0x40]
  4216b2:	push   ecx
  4216b3:	mov    edx,DWORD PTR [ebp-0x60]
  4216b6:	push   edx
  4216b7:	call   DWORD PTR ds:0x428040
  4216bd:	mov    DWORD PTR [ebp-0x44],eax
  4216c0:	mov    DWORD PTR [ebp-0x4],0x3ab10a4b
  4216c7:	push   0x3
  4216c9:	push   0x0
  4216cb:	push   0x0
  4216cd:	mov    eax,DWORD PTR [ebp-0x68]
  4216d0:	push   eax
  4216d1:	call   DWORD PTR ds:0x42812c
  4216d7:	mov    DWORD PTR [ebp-0x6c],0x10e7cf
  4216de:	jmp    0x421701
  4216e0:	mov    BYTE PTR ds:0x445fe8,0x0
  4216e7:	mov    BYTE PTR ds:0x42d1f0,0x0
  4216ee:	push   0x0
  4216f0:	mov    ecx,DWORD PTR [ebp-0x60]
  4216f3:	push   ecx
  4216f4:	call   DWORD PTR ds:0x42800c
  4216fa:	mov    BYTE PTR ds:0x4439a8,0x0
  421701:	push   DWORD PTR [ebp-0x2c]
  421704:	push   0x1000
  421709:	mov    eax,DWORD PTR [ebp-0x14]
  42170c:	add    eax,0x23
  42170f:	add    eax,0x23
  421712:	push   eax
  421713:	xor    eax,eax
  421715:	push   eax
  421716:	mov    ecx,DWORD PTR [ebp-0x44]
  421719:	call   ecx
  42171b:	mov    edx,eax
  42171d:	mov    DWORD PTR [ebp-0x8],edx
  421720:	mov    edx,DWORD PTR [ebp-0x6c]
  421723:	sub    edx,0xdae0b
  421729:	mov    DWORD PTR [ebp-0x6c],edx
  42172c:	cmp    DWORD PTR [ebp-0x8],0x0
  421730:	jne    0x42174d
  421732:	mov    eax,DWORD PTR [ebp-0x68]
  421735:	push   eax
  421736:	push   0x0
  421738:	mov    ecx,DWORD PTR [ebp-0x60]
  42173b:	push   ecx
  42173c:	push   0x1
  42173e:	push   0x0
  421740:	call   DWORD PTR ds:0x428120
  421746:	mov    BYTE PTR ds:0x4439a8,0x0
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x14]
  421753:	mov    eax,DWORD PTR [ebp-0x4]
  421756:	mov    DWORD PTR [edx],eax
  421758:	mov    DWORD PTR [ebp-0x30],0x410000
  42175f:	mov    ecx,DWORD PTR [ebp-0x60]
  421762:	push   ecx
  421763:	call   DWORD PTR ds:0x428048
  421769:	call   DWORD PTR ds:0x428130
  42176f:	push   DWORD PTR ds:0x428044
  421775:	pop    edx
  421776:	mov    DWORD PTR [ebp-0x70],edx
  421779:	mov    edx,DWORD PTR [ebp-0x8]
  42177c:	add    edx,DWORD PTR [ebp-0x58]
  42177f:	mov    DWORD PTR [ebp-0x5c],edx
  421782:	mov    eax,ds:0x428040
  421787:	mov    DWORD PTR [ebp-0x4c],eax
  42178a:	mov    ecx,DWORD PTR [ebp-0x8]
  42178d:	add    ecx,DWORD PTR [ebp-0x14]
  421790:	mov    edx,DWORD PTR [ebp+0x8]
  421793:	mov    DWORD PTR [ecx+0x4],edx
  421796:	mov    eax,DWORD PTR [ebp-0x8]
  421799:	add    eax,DWORD PTR [ebp-0x14]
  42179c:	mov    DWORD PTR [ebp-0x10],eax
  42179f:	mov    ecx,DWORD PTR [ebp-0x68]
  4217a2:	push   ecx
  4217a3:	call   DWORD PTR ds:0x428050
  4217a9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4217ad:	jbe    0x4217ca
  4217af:	mov    edx,DWORD PTR [ebp-0x10]
  4217b2:	push   edx
  4217b3:	mov    eax,DWORD PTR [ebp-0x14]
  4217b6:	push   eax
  4217b7:	mov    ecx,DWORD PTR [ebp-0x30]
  4217ba:	add    ecx,DWORD PTR [ebp-0x6c]
  4217bd:	push   ecx
  4217be:	mov    edx,DWORD PTR [ebp-0x8]
  4217c1:	push   edx
  4217c2:	call   0x411000
  4217c7:	add    esp,0x10
  4217ca:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217ce:	je     0x4217de
  4217d0:	push   DWORD PTR [ebp-0x4c]
  4217d3:	push   DWORD PTR [ebp-0x70]
  4217d6:	mov    edx,DWORD PTR [ebp-0x5c]
  4217d9:	push   eax
  4217da:	jmp    edx
  4217dc:	jmp    0x4217e4
  4217de:	mov    eax,DWORD PTR [ebp+0x8]
  4217e1:	mov    DWORD PTR [ebp-0x18],eax
  4217e4:	mov    eax,0x1
  4217e9:	mov    esp,ebp
  4217eb:	pop    ebp
  4217ec:	ret    
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0xa
  4217f9:	mov    DWORD PTR [ebp-0x4],0x0
  421800:	call   DWORD PTR ds:0x428028
  421806:	mov    esi,DWORD PTR ds:0x42803c
  42180c:	push   0xa
  42180e:	push   0xa
  421810:	push   0x0
  421812:	mov    DWORD PTR [ebp-0x8],esi
  421815:	call   DWORD PTR ds:0x428010
  42181b:	test   esi,esi
  42181d:	jne    0x421829
  42181f:	push   0xa
  421821:	push   esi
  421822:	push   esi
  421823:	call   DWORD PTR ds:0x428024
  421829:	call   DWORD PTR ds:0x428020
  42182f:	push   0x0
  421831:	push   0x4e
  421833:	push   0x1e
  421835:	push   0x0
  421837:	push   0xffffffff
  421839:	call   DWORD PTR ds:0x42801c
  42183f:	test   eax,eax
  421841:	je     0x421852
  421843:	push   0x0
  421845:	push   0x1
  421847:	push   0x0
  421849:	call   DWORD PTR ds:0x428018
  42184f:	mov    DWORD PTR [ebp-0x4],eax
  421852:	mov    esi,DWORD PTR [ebp-0x8]
  421855:	call   esi
  421857:	mov    DWORD PTR [ebp-0x4],eax
  42185a:	cmp    DWORD PTR [ebp-0x4],0x57
  42185e:	jne    0x421879
  421860:	push   0x5247395a
  421865:	call   0x421550
  42186a:	add    esp,0x4
  42186d:	push   0x1
  42186f:	push   0x0
  421871:	push   0x0
  421873:	call   DWORD PTR ds:0x428128
  421879:	xor    eax,eax
  42187b:	pop    esi
  42187c:	mov    esp,ebp
  42187e:	pop    ebp
  42187f:	ret    
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	call   DWORD PTR ds:0x428034
  42188d:	lea    eax,[esp+0x0]
  421891:	push   eax
  421892:	call   DWORD PTR ds:0x42804c
  421898:	push   0xa
  42189a:	call   DWORD PTR ds:0x428028
  4218a0:	cmp    WORD PTR [esp+0x0],0x0
  4218a6:	je     0x4218c4
  4218a8:	push   0x0
  4218aa:	push   0x0
  4218ac:	push   0x0
  4218ae:	push   0x0
  4218b0:	call   0x422a10
  4218b5:	push   0x0
  4218b7:	call   0x4217f0
  4218bc:	add    esp,0x4
  4218bf:	jmp    0x4229f1
  4218c4:	call   FWORD PTR [ebx-0x3d819a2c]
  4218ca:	adc    ah,BYTE PTR [edi-0x65]
  4218cd:	lods   al,BYTE PTR ds:[esi]
  4218ce:	out    dx,al
  4218cf:	or     al,0x4c
  4218d1:	cmp    eax,0xc6f58e29
  4218d6:	rcl    DWORD PTR [edx],0x67
  4218d9:	fwait
  4218da:	test   al,0xee
  4218dc:	or     al,0xc
  4218de:	ret    0x8ed6
  4218e1:	cmc    
  4218e2:	jle    0x4218a5
  4218e4:	adc    ah,BYTE PTR [edi-0x65]
  4218e7:	test   al,0xee
  4218e9:	or     al,0x4c
  4218eb:	ret    0x8ed6
  4218ee:	cmc    
  4218ef:	jle    0x4218b2
  4218f1:	adc    ah,BYTE PTR [edi-0x65]
  4218f4:	test   al,0xee
  4218f6:	or     al,0x4c
  4218f8:	ret    0x8ed6
  4218fb:	cmc    
  4218fc:	jle    0x4218bf
  4218fe:	adc    ah,BYTE PTR [edi-0x65]
  421901:	push   eax
  421902:	out    dx,al
  421903:	or     al,0x4c
  421905:	int3   
  421906:	leave  
  421907:	xor    al,0xfb
  421909:	jle    0x421980
  42190b:	sbb    ebp,DWORD PTR [edx+0x40ef10ba]
  421911:	and    ebx,0xd9ce682
  421917:	loope  0x42197b
  421919:	adc    eax,0x6d9ccff4
  42191e:	and    edx,esp
  421920:	mov    ch,0xef
  421922:	fwait
  421923:	adc    BYTE PTR [esi-0x3206b89a],ch
  421929:	into   
  42192a:	jle    0x421965
  42192c:	lods   al,BYTE PTR ds:[esi]
  42192d:	mul    bh
  42192f:	fwait
  421930:	pop    esi
  421931:	test   DWORD PTR [ebp+0x34],ebx
  421934:	mov    ebx,0x296881c5
  421939:	in     al,dx
  42193a:	fild   DWORD PTR [ebx+0x12c15aff]
  421940:	addr16 fwait
  421942:	test   al,0xee
  421944:	or     al,0x4b
  421946:	pop    ebx
  421947:	sub    dl,bh
  421949:	mov    dh,0x86
  42194b:	push   ebx
  42194c:	sbb    BYTE PTR [ebx+eiz*2],ah
  42194f:	cmp    ah,ah
  421951:	dec    edi
  421952:	mov    ah,0x50
  421954:	(bad)  
  421956:	nop
  421957:	jb     0x421924
  421959:	dec    ebp
  42195a:	lahf   
  42195b:	or     DWORD PTR [edx-0x378b964a],esp
  421961:	adc    al,0x76
  421963:	addr16 je 0x4218ff
  421966:	ja     0x4219c6
  421968:	xchg   ecx,eax
  421969:	rcl    BYTE PTR [esi],0x9e
  42196c:	inc    esi
  42196d:	out    dx,al
  42196e:	pop    eax
  42196f:	mov    bh,0xff
  421971:	cmp    BYTE PTR [ecx],bh
  421973:	sub    BYTE PTR [ebp-0x2f],0x28
  421977:	inc    DWORD PTR [esi]
  421979:	push   es
  42197a:	cmp    al,BYTE PTR [esp+eax*4-0x41]
  42197e:	inc    al
  421980:	sbb    BYTE PTR [edi],bh
  421982:	arpl   WORD PTR [edx],di
  421984:	in     al,0x4f
  421986:	mov    ah,0x51
  421988:	fsub   QWORD PTR [esi-0x523413f4]
  42198e:	mov    edi,0xf4a3a21b
  421993:	fmulp  st(0),st
  421995:	mov    gs,ebx
  421997:	enter  0xc974,0xea
  42199b:	cmc    
  42199c:	xchg   ecx,eax
  42199d:	lock mov eax,DWORD PTR [esi+eax*2]
  4219a1:	sub    BYTE PTR [esi],0x1c
  4219a4:	jmp    DWORD PTR [esi]
  4219a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219a7:	sbb    eax,0x7c50d96d
  4219ac:	push   es
  4219ad:	push   ds
  4219ae:	stos   DWORD PTR es:[edi],eax
  4219af:	mov    ch,0xe6
  4219b1:	mov    dh,0x86
  4219b3:	push   ebx
  4219b4:	sbb    BYTE PTR [edi-0x65],ah
  4219b7:	test   al,0xee
  4219b9:	or     al,0x4c
  4219bb:	ret    0xded6
  4219be:	mov    al,0x7e
  4219c0:	rcr    DWORD PTR [esi+0x66],0x99
  4219c4:	test   al,0x2
  4219c6:	out    dx,eax
  4219c7:	adc    ecx,DWORD PTR [ebp+0x7ef58ed6]
  4219cd:	rcl    DWORD PTR [edx],0x67
  4219d0:	fwait
  4219d1:	dec    eax
  4219d2:	out    dx,al
  4219d3:	cmovge ecx,ecx
  4219d6:	xlat   BYTE PTR ds:[ebx]
  4219d7:	test   ch,dh
  4219d9:	jle    0x421a08
  4219db:	push   ss
  4219dc:	addr16 fwait
  4219de:	lods   al,BYTE PTR ds:[esi]
  4219df:	call   0xd70465f0
  4219e4:	mov    ?,esp
  4219e6:	ret    
  4219e7:	rcl    DWORD PTR [edx],0x67
  4219ea:	mov    ebp,DWORD PTR [eax-0x38b3f312]
  4219f0:	(bad)  
  4219f1:	mov    ?,ebp
  4219f3:	aas    
  4219f4:	rcl    DWORD PTR [edx],0x77
  4219f7:	fwait
  4219f8:	test   al,0xee
  4219fa:	push   cs
  4219fb:	dec    esp
  4219fc:	ret    0x8ed3
  4219ff:	hlt    
  421a00:	jle    0x4219c3
  421a02:	adc    ah,BYTE PTR [edi-0x65]
  421a05:	lods   eax,DWORD PTR ds:[esi]
  421a06:	out    dx,al
  421a07:	or     eax,0x8ed6c24c
  421a0c:	cmc    
  421a0d:	jle    0x421a50
  421a0f:	sbb    DWORD PTR [edi-0x65],esp
  421a12:	lods   al,BYTE PTR ds:[esi]
  421a13:	out    dx,al
  421a14:	or     al,0xf1
  421a16:	repz ror DWORD PTR [esi-0x6d3e8109],cl
  421a1d:	addr16 fwait
  421a1f:	mov    eax,0xc25c0cee
  421a24:	(bad)  
  421a25:	mov    ?,ebp
  421a27:	outs   dx,BYTE PTR ds:[esi]
  421a28:	rcl    DWORD PTR [edx],0x77
  421a2b:	fwait
  421a2c:	test   al,0xee
  421a2e:	or     al,0x4c
  421a30:	ret    0x8ec6
  421a33:	cmc    
  421a34:	jle    0x4219f7
  421a36:	adc    ah,BYTE PTR [edi-0x65]
  421a39:	test   al,0xee
  421a3b:	or     al,0x4c
  421a3d:	inc    esi
  421a3e:	mov    eax,0xc217f585
  421a43:	adc    ah,BYTE PTR [edi-0x65]
  421a46:	cwde   
  421a47:	in     eax,0xc
  421a49:	cmp    edi,0xffffffd6
  421a4c:	mov    ?,ebp
  421a4e:	jle    0x421a11
  421a50:	adc    ah,BYTE PTR [edi-0x65]
  421a53:	test   al,0xee
  421a55:	or     al,0x4c
  421a57:	ret    0x8ed6
  421a5a:	cmc    
  421a5b:	jle    0x421a1e
  421a5d:	adc    ah,BYTE PTR [edi-0x65]
  421a60:	test   al,0xee
  421a62:	or     al,0x4c
  421a64:	ret    0x8ed6
  421a67:	cmc    
  421a68:	jle    0x421a2b
  421a6a:	adc    ah,BYTE PTR [edi-0x65]
  421a6d:	test   al,0xee
  421a6f:	or     al,0x4c
  421a71:	ret    0x8ed6
  421a74:	cmc    
  421a75:	jle    0x421a38
  421a77:	adc    ah,BYTE PTR [edi-0x65]
  421a7a:	test   al,0xee
  421a7c:	or     al,0x4c
  421a7e:	ret    0x8ed6
  421a81:	cmc    
  421a82:	jle    0x421a45
  421a84:	adc    ah,BYTE PTR [edi-0x65]
  421a87:	test   al,0xee
  421a89:	or     al,0x4c
  421a8b:	ret    0x8ed6
  421a8e:	cmc    
  421a8f:	jle    0x421a52
  421a91:	adc    ah,BYTE PTR [edi-0x65]
  421a94:	test   al,0xee
  421a96:	or     al,0x4c
  421a98:	ret    0x8ed6
  421a9b:	cmc    
  421a9c:	jle    0x421a5f
  421a9e:	adc    ah,BYTE PTR [edi-0x65]
  421aa1:	test   al,0xee
  421aa3:	or     al,0x4c
  421aa5:	ret    0x8ed6
  421aa8:	cmc    
  421aa9:	jle    0x421a6c
  421aab:	adc    ah,BYTE PTR [edi-0x65]
  421aae:	test   al,0xee
  421ab0:	or     al,0x4c
  421ab2:	ret    0x8ed6
  421ab5:	fisttp DWORD PTR [edx]
  421ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ab8:	push   0x13
  421aba:	fwait
  421abb:	test   al,0xee
  421abd:	or     al,0x6c
  421abf:	leave  
  421ac0:	(bad)  
  421ac1:	mov    fs,ebp
  421ac3:	jle    0x421a86
  421ac5:	adc    bl,BYTE PTR [ebp-0x61]
  421ac8:	test   al,0xee
  421aca:	or     BYTE PTR [edx+eax*8-0x7a],cl
  421ace:	retf   
  421acf:	mov    dh,0x4c
  421ad1:	xchg   ebp,eax
  421ad2:	pop    ebp
  421ad3:	addr16 fwait
  421ad5:	test   al,0xee
  421ad7:	or     al,0x4c
  421ad9:	loop   0x421ab1
  421adb:	mov    ss,WORD PTR ds:0x1561b350
  421ae1:	clc    
  421ae2:	test   al,0xee
  421ae4:	or     al,0x4c
  421ae6:	xchg   edx,eax
  421ae7:	(bad)  
  421ae8:	mov    ?,ebp
  421aea:	dec    esi
  421aeb:	retf   0x6712
  421aee:	retf   
  421aef:	test   al,0xee
  421af1:	or     al,0x72
  421af3:	(bad)  
  421af4:	(bad)  
  421af5:	mov    ?,ebp
  421af7:	jle    0x421aba
  421af9:	adc    ah,BYTE PTR [edi-0x65]
  421afc:	test   al,0xee
  421afe:	or     al,0x4c
  421b00:	ret    0x8ef6
  421b03:	cmc    
  421b04:	sahf   
  421b05:	rcl    DWORD PTR [edx],0x67
  421b08:	fwait
  421b09:	test   al,0xee
  421b0b:	or     al,0x4c
  421b0d:	ret    0x8ed6
  421b10:	cmc    
  421b11:	jle    0x421ad4
  421b13:	adc    ah,BYTE PTR [edi-0x65]
  421b16:	test   al,0xee
  421b18:	or     al,0x4c
  421b1a:	ret    0x8ed6
  421b1d:	cmc    
  421b1e:	jle    0x421ae1
  421b20:	adc    ah,BYTE PTR [edi-0x65]
  421b23:	test   al,0xee
  421b25:	or     al,0x4c
  421b27:	ret    0x8ed6
  421b2a:	cmc    
  421b2b:	jle    0x421aee
  421b2d:	adc    ah,BYTE PTR [edi-0x65]
  421b30:	test   al,0xee
  421b32:	or     al,0x4c
  421b34:	ret    0x8ed6
  421b37:	cmc    
  421b38:	jle    0x421afb
  421b3a:	adc    ah,BYTE PTR [edi-0x65]
  421b3d:	test   al,0xee
  421b3f:	or     al,0x4c
  421b41:	ret    0x8ed6
  421b44:	cmc    
  421b45:	jle    0x421b08
  421b47:	adc    ah,BYTE PTR [edi-0x65]
  421b4a:	test   al,0xee
  421b4c:	or     al,0x4c
  421b4e:	ret    0x8ed6
  421b51:	cmc    
  421b52:	jle    0x421b15
  421b54:	adc    ah,BYTE PTR [edi-0x65]
  421b57:	test   al,0xee
  421b59:	or     al,0x4c
  421b5b:	ret    0x8ed6
  421b5e:	cmc    
  421b5f:	jle    0x421b22
  421b61:	adc    ah,BYTE PTR [edi-0x65]
  421b64:	test   al,0xee
  421b66:	or     al,0x4c
  421b68:	ret    0x8ed6
  421b6b:	cmc    
  421b6c:	jle    0x421b2f
  421b6e:	adc    ah,BYTE PTR [edi-0x65]
  421b71:	test   al,0xee
  421b73:	or     al,0x4c
  421b75:	ret    0x8ed6
  421b78:	cmc    
  421b79:	jle    0x421b3c
  421b7b:	adc    ah,BYTE PTR [edi-0x65]
  421b7e:	test   al,0xee
  421b80:	or     al,0x4c
  421b82:	ret    0x8ed6
  421b85:	cmc    
  421b86:	jle    0x421b49
  421b88:	adc    ah,BYTE PTR [edi-0x65]
  421b8b:	test   al,0xee
  421b8d:	or     al,0x4c
  421b8f:	ret    0x8ed6
  421b92:	cmc    
  421b93:	jle    0x421b56
  421b95:	adc    ah,BYTE PTR [edi-0x65]
  421b98:	test   al,0xee
  421b9a:	or     al,0x4c
  421b9c:	ret    0x8ed6
  421b9f:	cmc    
  421ba0:	jle    0x421b63
  421ba2:	adc    ah,BYTE PTR [edi-0x65]
  421ba5:	test   al,0xee
  421ba7:	or     al,0x4c
  421ba9:	ret    0x8ed6
  421bac:	cmc    
  421bad:	jle    0x421b70
  421baf:	adc    ah,BYTE PTR [edi-0x65]
  421bb2:	test   al,0xee
  421bb4:	or     al,0x4c
  421bb6:	ret    0x8ed6
  421bb9:	cmc    
  421bba:	jle    0x421b7d
  421bbc:	adc    ah,BYTE PTR [edi-0x65]
  421bbf:	test   al,0xee
  421bc1:	or     al,0x4c
  421bc3:	ret    0x8ed6
  421bc6:	cmc    
  421bc7:	jle    0x421b8a
  421bc9:	adc    ah,BYTE PTR [edi-0x65]
  421bcc:	test   al,0xee
  421bce:	or     al,0x4c
  421bd0:	ret    0x8ed6
  421bd3:	cmc    
  421bd4:	jle    0x421b97
  421bd6:	adc    ah,BYTE PTR [edi-0x65]
  421bd9:	test   al,0xee
  421bdb:	or     al,0x4c
  421bdd:	ret    0x8ed6
  421be0:	cmc    
  421be1:	jle    0x421ba4
  421be3:	adc    ah,BYTE PTR [edi-0x65]
  421be6:	test   al,0xee
  421be8:	or     al,0x4c
  421bea:	ret    0x8ed6
  421bed:	cmc    
  421bee:	jle    0x421bb1
  421bf0:	adc    ah,BYTE PTR [edi-0x65]
  421bf3:	test   al,0xee
  421bf5:	or     al,0x4c
  421bf7:	ret    0x8ed6
  421bfa:	cmc    
  421bfb:	jle    0x421bbe
  421bfd:	adc    ah,BYTE PTR [edi-0x65]
  421c00:	test   al,0xee
  421c02:	or     al,0x4c
  421c04:	ret    0x8ed6
  421c07:	cmc    
  421c08:	jle    0x421bcb
  421c0a:	adc    ah,BYTE PTR [edi-0x65]
  421c0d:	test   al,0xee
  421c0f:	or     al,0x4c
  421c11:	ret    0x8ed6
  421c14:	cmc    
  421c15:	jle    0x421bd8
  421c17:	adc    ah,BYTE PTR [edi-0x65]
  421c1a:	test   al,0xee
  421c1c:	or     al,0x4c
  421c1e:	ret    0x8ed6
  421c21:	cmc    
  421c22:	jle    0x421be5
  421c24:	adc    ah,BYTE PTR [edi-0x65]
  421c27:	test   al,0xee
  421c29:	or     al,0x4c
  421c2b:	ret    0x8ed6
  421c2e:	cmc    
  421c2f:	jle    0x421bf2
  421c31:	adc    ah,BYTE PTR [edi-0x65]
  421c34:	test   al,0xee
  421c36:	or     al,0x4c
  421c38:	ret    0x8ed6
  421c3b:	cmc    
  421c3c:	jle    0x421bff
  421c3e:	adc    ah,BYTE PTR [edi-0x65]
  421c41:	test   al,0xee
  421c43:	or     al,0x4c
  421c45:	ret    0x8ed6
  421c48:	cmc    
  421c49:	jle    0x421c0c
  421c4b:	adc    ah,BYTE PTR [edi-0x65]
  421c4e:	test   al,0xee
  421c50:	or     al,0x4c
  421c52:	ret    0x8ed6
  421c55:	cmc    
  421c56:	jle    0x421c19
  421c58:	adc    ah,BYTE PTR [edi-0x65]
  421c5b:	test   al,0xee
  421c5d:	or     al,0x4c
  421c5f:	ret    0x8ed6
  421c62:	cmc    
  421c63:	jle    0x421c26
  421c65:	adc    ah,BYTE PTR [edi-0x65]
  421c68:	test   al,0xee
  421c6a:	or     al,0x4c
  421c6c:	ret    0x8ed6
  421c6f:	cmc    
  421c70:	jle    0x421c33
  421c72:	adc    ah,BYTE PTR [edi-0x65]
  421c75:	test   al,0xee
  421c77:	or     al,0x4c
  421c79:	ret    0x8ed6
  421c7c:	cmc    
  421c7d:	jle    0x421c40
  421c7f:	adc    ah,BYTE PTR [edi-0x65]
  421c82:	test   al,0xee
  421c84:	or     al,0x4c
  421c86:	ret    0x8ed6
  421c89:	cmc    
  421c8a:	jle    0x421c4d
  421c8c:	adc    ah,BYTE PTR [edi-0x65]
  421c8f:	test   al,0xee
  421c91:	or     al,0x4c
  421c93:	ret    0x8ed6
  421c96:	cmc    
  421c97:	jle    0x421c5a
  421c99:	adc    ah,BYTE PTR [edi-0x65]
  421c9c:	test   al,0xee
  421c9e:	or     al,0x4c
  421ca0:	ret    0x8ed6
  421ca3:	cmc    
  421ca4:	jle    0x421c67
  421ca6:	adc    ah,BYTE PTR [edi-0x65]
  421ca9:	test   al,0xee
  421cab:	or     al,0x4c
  421cad:	ret    0x8ed6
  421cb0:	cmc    
  421cb1:	jle    0x421c74
  421cb3:	adc    ah,BYTE PTR [edi-0x65]
  421cb6:	test   al,0xee
  421cb8:	or     al,0x4c
  421cba:	ret    0x8ed6
  421cbd:	cmc    
  421cbe:	jle    0x421c81
  421cc0:	adc    ah,BYTE PTR [edi-0x65]
  421cc3:	test   al,0xee
  421cc5:	dec    ebx
  421cc6:	mov    ds:0xf5a1d6c8,al
  421ccb:	jle    0x421c9e
  421ccd:	adc    ah,BYTE PTR [edi-0x4f]
  421cd0:	or     dh,BYTE PTR [edi*2+0x10fb3d2a]
  421cd7:	jb     0x421d07
  421cd9:	sub    al,0x24
  421cdb:	(bad)
  421cdf:	push   0x3d
  421ce1:	inc    esi
  421ce2:	mov    WORD PTR [ebp+0x7fd7c944],ds
  421ce8:	adc    DWORD PTR [ecx],0x29
  421ceb:	sub    BYTE PTR [edx],ah
  421ced:	cs push edx
  421cef:	jmp    0x7073e3ab
  421cf4:	add    eax,0x498f9b45
  421cf9:	test   BYTE PTR [ecx],bl
  421cfb:	xchg   ebx,eax
  421cfc:	mov    ebx,0x1c43c727
  421d01:	push   es
  421d02:	(bad)  
  421d03:	sti    
  421d04:	mov    eax,0x2d5d2ab5
  421d09:	mov    edi,0x7b99992f
  421d0e:	mov    al,ds:0x3a10fc16
  421d14:	cmp    al,0xf
  421d16:	dec    edi
  421d17:	mov    WORD PTR [ebp-0x49],ss
  421d1a:	lds    eax,FWORD PTR [ebp-0x644b5be2]
  421d20:	adc    ebp,edi
  421d22:	ins    BYTE PTR es:[edi],dx
  421d23:	add    DWORD PTR ds:0x1e8b392d,edx
  421d29:	cs xchg esi,eax
  421d2b:	les    edx,FWORD PTR [esi+eax*4+0x41]
  421d2f:	mov    ch,BYTE PTR [eax]
  421d31:	push   0x77cb4302
  421d36:	xor    DWORD PTR ds:0x2ccc706b,ebp
  421d3c:	adc    al,0x9d
  421d3e:	int    0x11
  421d40:	pushf  
  421d41:	sub    dl,al
  421d43:	sub    al,0x18
  421d45:	jo     0x421d0c
  421d47:	lods   al,BYTE PTR ds:[esi]
  421d48:	dec    eax
  421d49:	sub    DWORD PTR [ebp+0x10],ebx
  421d4c:	mov    cl,0x9c
  421d4e:	push   ss
  421d4f:	pusha  
  421d50:	inc    esp
  421d51:	pushf  
  421d52:	test   DWORD PTR ds:0x8ca76ddc,edi
  421d58:	(bad)  
  421d59:	retf   
  421d5a:	das    
  421d5b:	inc    edx
  421d5c:	fisub  WORD PTR [edi+ecx*2]
  421d5f:	inc    ebx
  421d60:	in     al,dx
  421d61:	in     al,0x96
  421d63:	or     BYTE PTR [esi+ebx*8],dl
  421d66:	fcomp  DWORD PTR [eax-0x71]
  421d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d6a:	pop    esp
  421d6b:	out    0x4c,al
  421d6d:	sub    eax,0x4892c9b3
  421d72:	in     eax,dx
  421d73:	(bad)  
  421d74:	push   ebp
  421d75:	jo     0x421d5c
  421d77:	mov    BYTE PTR [esi+0x51],ah
  421d7a:	or     edi,edi
  421d7c:	ret    0x8c09
  421d7f:	out    0xd8,al
  421d81:	adc    al,0xc5
  421d83:	call   0x7670fa71
  421d88:	shl    BYTE PTR ss:[edi+ebx*8],cl
  421d8c:	or     BYTE PTR [edi+esi*2+0x14],bl
  421d90:	fadd   st(4),st
  421d92:	cmp    al,0x78
  421d94:	cmp    dl,BYTE PTR [edx]
  421d96:	jmp    0x2e982a7b
  421d9b:	inc    edx
  421d9c:	cmc    
  421d9d:	and    BYTE PTR [ebx+0x1d8118f8],cl
  421da3:	scas   al,BYTE PTR es:[edi]
  421da4:	fild   QWORD PTR [ebp+0x502c21da]
  421daa:	aas    
  421dab:	mul    DWORD PTR [edx-0x78778606]
  421db1:	adc    DWORD PTR [eax+0x55],esi
  421db4:	mov    dl,0x55
  421db6:	call   0xbe46:0x5a29a381
  421dbd:	xchg   edi,eax
  421dbe:	jle    0x421d95
  421dc0:	aad    0x96
  421dc2:	sub    eax,0xd5e6147a
  421dc7:	aaa    
  421dc8:	ja     0x421e39
  421dca:	push   edx
  421dcb:	mov    edi,0xd5de01d5
  421dd0:	push   cs
  421dd1:	push   edi
  421dd2:	mov    ebp,0x43a8cea9
  421dd7:	jmp    0x421dc2
  421dd9:	inc    ecx
  421dda:	mov    BYTE PTR [ebx],al
  421ddc:	call   DWORD PTR [esi]
  421dde:	mov    WORD PTR [ebp+0xa],cs
  421de1:	cmp    edx,eax
  421de3:	es sbb al,0x87
  421de6:	in     eax,dx
  421de7:	adc    BYTE PTR [edx],bl
  421de9:	imul   edx,DWORD PTR [edx-0x4],0xec682674
  421df0:	lock mov edx,0x175db25f
  421df6:	(bad)  
  421df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421df8:	or     ebx,esi
  421dfa:	jbe    0x421e4d
  421dfc:	stos   DWORD PTR es:[edi],eax
  421dfd:	pop    esi
  421dfe:	mov    ah,0xfb
  421e00:	xor    eax,DWORD PTR [edx+ecx*1+0x1222b752]
  421e07:	jno    0x421e52
  421e09:	mov    bh,0xf9
  421e0b:	mov    edx,0xb5890001
  421e10:	sub    al,0x68
  421e12:	jp     0x421dab
  421e14:	xchg   ebp,eax
  421e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e16:	rcr    BYTE PTR [ecx],cl
  421e18:	or     DWORD PTR [edi+0x39],ebp
  421e1b:	dec    edx
  421e1c:	pusha  
  421e1d:	test   al,0x8a
  421e1f:	loope  0x421dbb
  421e21:	in     eax,0xe
  421e23:	pop    ds
  421e24:	mov    dl,0xbb
  421e26:	jmp    0x421e8c
  421e28:	dec    edi
  421e29:	xchg   ecx,eax
  421e2a:	call   0xadd8cf5b
  421e2f:	dec    ebp
  421e30:	push   cs
  421e31:	mov    ah,0x1e
  421e33:	dec    edx
  421e34:	mov    ecx,0xca926e3d
  421e39:	mov    al,ds:0xfd349638
  421e3e:	std    
  421e3f:	fstp   DWORD PTR [ebp+0x6d]
  421e42:	push   0x6ce1bf04
  421e47:	push   ebx
  421e48:	test   dh,dh
  421e4a:	je     0x421e7c
  421e4c:	inc    esi
  421e4d:	mov    eax,ds:0x345f6ffa
  421e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e53:	das    
  421e54:	adc    al,0x84
  421e56:	push   ebp
  421e57:	jl     0x421e2f
  421e59:	add    DWORD PTR [eax],ebx
  421e5b:	test   al,0xa7
  421e5d:	xor    DWORD PTR [edx*2+0x2ffcbead],ebp
  421e64:	daa    
  421e65:	cld    
  421e66:	sub    dh,BYTE PTR [ebp+0x2f]
  421e69:	xchg   ebx,eax
  421e6a:	push   ss
  421e6b:	mov    edi,0xe72f857c
  421e70:	add    al,bl
  421e72:	mov    DWORD PTR [ebx-0x19c63c88],ebp
  421e78:	adc    BYTE PTR [eax],bl
  421e7a:	inc    ebp
  421e7b:	loop   0x421eb0
  421e7d:	addr16 xchg ebp,eax
  421e7f:	imul   esp,DWORD PTR [eax-0x3e],0x23
  421e83:	push   ecx
  421e84:	pop    ebx
  421e85:	adc    al,0xeb
  421e87:	mov    al,ds:0x37597491
  421e8c:	cs repnz mov dl,0x70
  421e90:	jp     0x421ed8
  421e92:	(bad)  [edi]
  421e94:	mov    esp,0x65835743
  421e99:	adc    BYTE PTR [eax+0x77535ed8],ch
  421e9f:	inc    ebx
  421ea0:	repz in eax,0x2e
  421ea3:	mov    eax,ds:0xdcadb4f1
  421ea9:	test   al,0x7b
  421eab:	test   eax,0xce9a35cc
  421eb0:	xchg   ebp,eax
  421eb1:	mov    esp,0x3a18ec29
  421eb6:	aad    0xb4
  421eb8:	call   0x8c7d832
  421ebd:	xchg   esp,eax
  421ebe:	in     al,dx
  421ebf:	mov    al,ds:0x5eae596a
  421ec4:	jns    0x421e9d
  421ec6:	jbe    0x421ee5
  421ec8:	dec    edi
  421ec9:	push   esp
  421eca:	bound  edi,QWORD PTR [esi]
  421ecc:	xor    BYTE PTR [eax-0x4a3efdb0],0xee
  421ed3:	stos   BYTE PTR es:[edi],al
  421ed4:	imul   edi,ecx,0x9bee0ee0
  421eda:	gs jmp 0xd8d268e1
  421ee0:	or     DWORD PTR [esi],0x9444ef1
  421ee6:	add    DWORD PTR [esi-0x9],esp
  421ee9:	adc    ebp,DWORD PTR [esi]
  421eeb:	pop    edi
  421eec:	jecxz  0x421eeb
  421eee:	and    eax,0xb33b96d9
  421ef3:	cli    
  421ef4:	pusha  
  421ef5:	xor    DWORD PTR [ebx-0x360f3b80],ecx
  421efb:	jnp    0x421f7c
  421efd:	and    BYTE PTR [edx-0x12],ah
  421f00:	mov    cl,0x3
  421f02:	test   DWORD PTR [eax-0x30],ebx
  421f05:	lahf   
  421f06:	mov    dl,BYTE PTR [edx]
  421f08:	gs jle 0x421eba
  421f0b:	sbb    esp,esi
  421f0d:	inc    esp
  421f0e:	lds    edx,FWORD PTR [edi+0x76]
  421f11:	xchg   edx,eax
  421f12:	fld    QWORD PTR [eax+esi*1+0x2a]
  421f16:	enter  0x5600,0xbe
  421f1a:	jecxz  0x421eed
  421f1c:	retf   0x5ac1
  421f1f:	jae    0x421ebc
  421f21:	sub    al,0x8
  421f23:	cmp    eax,0x8b95e646
  421f28:	mov    ebp,0x502bb7af
  421f2d:	dec    ebp
  421f2e:	out    dx,al
  421f2f:	pop    ebp
  421f30:	cmp    BYTE PTR [edx+0x31d2a126],0x8e
  421f37:	imul   esi,DWORD PTR [edi],0x53
  421f3a:	or     edx,DWORD PTR ds:0x9a924702
  421f40:	xchg   esp,eax
  421f41:	ja     0x421f69
  421f43:	je     0x421ef1
  421f45:	xor    esi,edi
  421f47:	xchg   bp,ax
  421f49:	and    al,BYTE PTR [edx]
  421f4b:	pop    ebx
  421f4c:	pop    esi
  421f4d:	test   DWORD PTR [edi+esi*2],eax
  421f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f51:	iret   
  421f52:	dec    esi
  421f53:	stc    
  421f54:	popf   
  421f55:	out    0x95,eax
  421f57:	push   ds
  421f58:	dec    esp
  421f59:	fnstcw WORD PTR [esi]
  421f5b:	shl    DWORD PTR ds:0xbf4339b6,cl
  421f61:	mov    eax,ds:0xf263e4a3
  421f66:	mov    cl,BYTE PTR ds:0xdaa2cad7
  421f6c:	jns    0x421fb6
  421f6e:	sub    edi,esp
  421f70:	dec    edi
  421f71:	neg    BYTE PTR [ebp+0x38f57f1f]
  421f77:	pop    eax
  421f78:	mov    eax,ds:0xd24b7572
  421f7d:	rol    DWORD PTR [ebx-0x67b2b724],1
  421f83:	adc    eax,0x853b53af
  421f88:	fdivrp st(6),st
  421f8a:	ja     0x421f73
  421f8c:	xchg   ebp,eax
  421f8d:	cld    
  421f8e:	retf   0x6c04
  421f91:	jle    0x421fa8
  421f93:	dec    ebp
  421f94:	xor    dl,BYTE PTR [ecx]
  421f96:	push   esp
  421f97:	or     eax,0x8f10cc5a
  421f9c:	in     al,dx
  421f9d:	mov    al,0x9
  421f9f:	dec    edi
  421fa0:	test   DWORD PTR [ecx],ecx
  421fa2:	pop    esi
  421fa3:	fidiv  DWORD PTR ds:[eax-0x7cd86b70]
  421faa:	adc    BYTE PTR [ebp-0x461cd19f],dh
  421fb0:	mov    esi,DWORD PTR [ecx]
  421fb2:	dec    esi
  421fb3:	mov    al,0x57
  421fb5:	pcmpgtd mm4,mm2
  421fb8:	or     ecx,DWORD PTR [esi]
  421fba:	jmp    0x3d41:0x5050be5b
  421fc1:	mov    ?,ecx
  421fc3:	(bad)  
  421fc4:	(bad)  
  421fc5:	in     al,dx
  421fc6:	dec    ecx
  421fc7:	lods   eax,DWORD PTR ds:[esi]
  421fc8:	cmp    al,0xf2
  421fca:	add    al,0x6f
  421fcc:	mov    ebx,0xb7271d11
  421fd1:	and    DWORD PTR [esi],0xfffffffb
  421fd4:	fisttp DWORD PTR [edi]
  421fd6:	sub    BYTE PTR [ecx+edx*8+0x4],bh
  421fda:	stos   DWORD PTR es:[edi],eax
  421fdb:	sbb    ecx,DWORD PTR [eax-0x79]
  421fde:	push   ebp
  421fdf:	out    dx,eax
  421fe0:	sahf   
  421fe1:	push   esp
  421fe2:	cmc    
  421fe3:	fld    TBYTE PTR [ecx]
  421fe5:	cs cmp edx,eax
  421fe8:	aad    0x3f
  421fea:	scas   al,BYTE PTR es:[edi]
  421feb:	je     0x421fe2
  421fed:	cmp    BYTE PTR [ecx+0x4212f59a],dl
  421ff3:	push   ds
  421ff4:	xchg   esp,eax
  421ff5:	xor    edx,DWORD PTR [esi]
  421ff7:	mov    dl,0x22
  421ff9:	push   0x38
  421ffb:	dec    esi
  421ffc:	lds    ebp,FWORD PTR [ebp-0x3e]
  421fff:	fsub   st,st(4)
  422001:	test   DWORD PTR [ebp-0x436bb478],ebx
  422007:	jns    0x421fd9
  422009:	es jp  0x421f94
  42200c:	cdq    
  42200d:	xor    al,0x80
  42200f:	mov    BYTE PTR [ecx-0x48513c40],bl
  422015:	test   BYTE PTR [ebp+0x34],0x2d
  422019:	pusha  
  42201a:	and    eax,0x1573837e
  42201f:	hlt    
  422020:	pop    edi
  422021:	push   edx
  422022:	sbb    eax,0x5660b8db
  422027:	push   gs
  422029:	sbb    al,0xe7
  42202b:	(bad)
  422030:	outs   dx,DWORD PTR ds:[esi]
  422031:	in     al,0x68
  422033:	jbe    0x42206f
  422035:	jb     0x42207c
  422037:	adc    dl,BYTE PTR [eax-0x79]
  42203a:	cmp    al,0x67
  42203c:	or     eax,eax
  42203e:	mov    ah,0x48
  422040:	fst    DWORD PTR [eax+0xbd428ac]
  422046:	test   al,0x2d
  422048:	cmp    dh,BYTE PTR [edi+0x1c37d722]
  42204e:	aam    0x3a
  422050:	test   al,0x71
  422052:	retf   
  422053:	dec    esp
  422054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422055:	push   eax
  422056:	mov    ecx,DWORD PTR [esi+0x43]
  422059:	mov    al,ds:0xd1613d2b
  42205e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42205f:	mov    ebx,fs
  422061:	sbb    eax,0x7580c142
  422066:	adc    BYTE PTR ds:0xa8736c45,bh
  42206c:	or     ebp,DWORD PTR [ecx-0x7019c7fe]
  422072:	and    esi,DWORD PTR [edx]
  422074:	pop    es
  422075:	cmc    
  422076:	mov    esi,0x37111fee
  42207b:	dec    esi
  42207c:	cwde   
  42207d:	test   bh,al
  42207f:	fsub   QWORD PTR [ecx]
  422081:	xor    BYTE PTR [ecx],bl
  422083:	cmp    DWORD PTR ds:[edi],ebp
  422086:	int    0x98
  422088:	pop    esp
  422089:	loop   0x4220a6
  42208b:	je     0x4220c5
  42208d:	xor    ecx,esi
  42208f:	inc    edx
  422090:	dec    DWORD PTR [edx]
  422092:	popa   
  422093:	add    esi,edi
  422095:	mov    eax,0x68b62390
  42209a:	ins    DWORD PTR es:[edi],dx
  42209b:	or     ch,ch
  42209d:	inc    edi
  42209e:	das    
  42209f:	popa   
  4220a0:	inc    ebp
  4220a1:	les    ebx,FWORD PTR [edx]
  4220a3:	aam    0x9e
  4220a5:	xchg   BYTE PTR [ebx+0x30],dl
  4220a8:	ins    DWORD PTR es:[edi],dx
  4220a9:	ret    0xd114
  4220ac:	in     al,0x13
  4220ae:	jo     0x4220c5
  4220b0:	sbb    DWORD PTR [ebx],esp
  4220b2:	mov    esp,0x3c18608f
  4220b7:	xor    DWORD PTR [edi-0x44],esi
  4220ba:	jbe    0x422080
  4220bc:	cmp    al,0xf7
  4220be:	xor    eax,0x8f808e71
  4220c3:	sub    ecx,DWORD PTR [esi]
  4220c5:	fsubrp st(5),st
  4220c7:	pop    esi
  4220c8:	sbb    BYTE PTR [eax-0x386ddf2b],ch
  4220ce:	ficomp DWORD PTR [esi-0x4f]
  4220d1:	retf   0x23de
  4220d4:	jmp    0x205ea212
  4220d9:	and    eax,0x853b48fa
  4220de:	loop   0x42211d
  4220e0:	outs   dx,DWORD PTR ds:[esi]
  4220e1:	addr16 pop es
  4220e3:	fst    st(3)
  4220e5:	xchg   dl,bl
  4220e7:	rcl    DWORD PTR [eax],0x85
  4220ea:	jecxz  0x4220fd
  4220ec:	adc    BYTE PTR [esi],bh
  4220ee:	pop    es
  4220ef:	loop   0x422163
  4220f1:	aaa    
  4220f2:	out    0x82,eax
  4220f4:	dec    ecx
  4220f5:	pop    es
  4220f6:	std    
  4220f7:	outs   dx,DWORD PTR ds:[esi]
  4220f8:	push   es
  4220f9:	jge    0x42209f
  4220fb:	ins    BYTE PTR es:[edi],dx
  4220fc:	or     edx,DWORD PTR [ecx]
  4220fe:	cli    
  4220ff:	sub    ch,BYTE PTR [edx-0x6461c2f5]
  422105:	(bad)  
  422106:	clc    
  422107:	retf   0x271c
  42210a:	push   edi
  42210b:	push   edi
  42210c:	hlt    
  42210d:	dec    esp
  42210e:	fidivr DWORD PTR [ecx]
  422110:	mov    esp,0x1a044276
  422115:	push   edi
  422116:	clc    
  422117:	push   ss
  422118:	or     al,0xff
  42211a:	mov    DWORD PTR [ebp+0x3b],edi
  42211d:	ret    0xdba2
  422120:	jg     0x422185
  422122:	psubw  mm6,QWORD PTR [edi+0x72850635]
  422129:	fnstenv [ebx-0x54]
  42212c:	mov    dh,0x4d
  42212e:	repz dec edx
  422130:	mov    dh,0xba
  422132:	fst    QWORD PTR [ebx+esi*4+0x3d]
  422136:	or     BYTE PTR [ecx],bl
  422138:	test   eax,0xeeaa5975
  42213d:	push   esp
  42213e:	int3   
  42213f:	inc    esp
  422140:	shr    DWORD PTR [edi],0x5c
  422143:	and    eax,0xa4206bee
  422148:	add    dh,ch
  42214a:	shl    BYTE PTR [ecx],cl
  42214c:	pop    ds
  42214d:	loope  0x422194
  42214f:	ffree  st(3)
  422151:	mov    edx,0xc4a9cd16
  422156:	jno    0x422170
  422158:	pop    esp
  422159:	dec    edi
  42215a:	pop    esi
  42215b:	cwde   
  42215c:	aas    
  42215d:	arpl   WORD PTR [esi+0x45],di
  422160:	mov    dx,0xce16
  422164:	xchg   edx,eax
  422165:	out    dx,eax
  422166:	xchg   DWORD PTR [edi],edx
  422168:	cmp    esi,ecx
  42216a:	repnz mov ch,0x8d
  42216d:	imul   eax,eax,0xffffff96
  422170:	xchg   edx,eax
  422171:	push   eax
  422172:	mov    WORD PTR [ecx+edx*2+0x5d],?
  422176:	mov    edx,0xd858fdfb
  42217b:	push   edi
  42217c:	imul   ebx,DWORD PTR [edx-0x31],0xc1a446ce
  422183:	adc    BYTE PTR [esi-0x3e],cl
  422186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422187:	sub    ebp,edi
  422189:	xor    al,0x94
  42218b:	and    bh,BYTE PTR [ecx]
  42218d:	ins    BYTE PTR es:[edi],dx
  42218e:	jecxz  0x42215e
  422190:	mov    ebp,0x4b048d60
  422195:	ret    0x1d27
  422198:	sbb    al,0xfd
  42219a:	in     eax,0x66
  42219c:	stc    
  42219d:	jbe    0x422164
  42219f:	pop    eax
  4221a0:	push   0x7a737170
  4221a5:	(bad)  
  4221a6:	xchg   esp,eax
  4221a7:	pop    eax
  4221a8:	mov    ebp,0xf89ce00b
  4221ad:	sbb    ax,0x22f9
  4221b1:	inc    edx
  4221b2:	sbb    eax,0x42273cda
  4221b7:	mov    esi,0xb4f19412
  4221bc:	shr    BYTE PTR [edx],cl
  4221be:	mov    ebx,0x580fe5c1
  4221c3:	or     DWORD PTR [eax+0x0],esi
  4221c6:	xlat   BYTE PTR ds:[ebx]
  4221c7:	repnz fsubr st(3),st
  4221ca:	mov    ds:0x61fb469f,eax
  4221cf:	jecxz  0x4221e5
  4221d1:	lock dec esp
  4221d3:	ds cwde 
  4221d5:	aas    
  4221d6:	iret   
  4221d7:	ret    
  4221d8:	xchg   esp,eax
  4221d9:	out    dx,eax
  4221da:	inc    ebp
  4221db:	stc    
  4221dc:	cmp    al,0x1e
  4221de:	push   eax
  4221df:	jge    0x4221c2
  4221e1:	mov    bl,0x29
  4221e3:	sbb    al,BYTE PTR [eax]
  4221e5:	mov    ds:0x6b8c36a2,eax
  4221ea:	outs   dx,BYTE PTR ds:[esi]
  4221eb:	cmc    
  4221ec:	push   ecx
  4221ed:	test   eax,0x2fb2df18
  4221f2:	lods   al,BYTE PTR ds:[esi]
  4221f3:	les    ecx,FWORD PTR [edx]
  4221f5:	ss push ss
  4221f7:	adc    BYTE PTR [ecx],ch
  4221f9:	mov    ah,0xa3
  4221fb:	mov    DWORD PTR [esi-0x53c8f35f],ebp
  422201:	ss mov ecx,0xd5a6c00
  422207:	adc    bh,BYTE PTR [edx+0x28]
  42220a:	jnp    0x422246
  42220c:	jle    0x4221a8
  42220e:	push   0xffffff8d
  422210:	cdq    
  422211:	push   ds
  422212:	inc    ebp
  422213:	fld    TBYTE PTR [esi-0x56]
  422216:	(bad)  
  422217:	test   eax,0x841ade70
  42221c:	mov    ?,edx
  42221e:	lods   al,BYTE PTR ds:[esi]
  42221f:	mov    ebx,0xe0a94454
  422224:	lea    edi,[ebp+0x77b3d62d]
  42222a:	pop    ecx
  42222b:	xor    al,BYTE PTR [esi+0x28]
  42222e:	loope  0x42222e
  422230:	(bad)  
  422231:	mov    ebx,0x48a7ec05
  422236:	and    BYTE PTR [esi],cl
  422238:	repnz adc BYTE PTR [ebp+0x4a],ah
  42223c:	xlat   BYTE PTR ds:[ebx]
  42223d:	xlat   BYTE PTR ds:[ebx]
  42223e:	mov    ecx,0xc1c713c5
  422243:	ins    BYTE PTR es:[edi],dx
  422244:	sahf   
  422245:	jge    0x422239
  422247:	std    
  422248:	inc    ecx
  422249:	mov    ecx,0x772451e8
  42224e:	fnstsw WORD PTR [ebp+0x574de1f6]
  422254:	push   ds
  422255:	jnp    0x42222c
  422257:	sbb    edx,DWORD PTR [ecx+0x2c]
  42225a:	jmp    DWORD PTR [eax]
  42225c:	mov    al,0xf1
  42225e:	dec    esp
  42225f:	fs (bad) 
  422261:	and    BYTE PTR [eax+0xa],dh
  422264:	out    dx,eax
  422265:	mov    DWORD PTR [ebx+0x52],edx
  422268:	cmp    BYTE PTR [eax],al
  42226a:	mov    ecx,0x7dcf6879
  42226f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422270:	jl     0x4222b4
  422272:	call   0x50ed:0x4dd8d9a7
  422279:	sbb    edx,DWORD PTR gs:[edi]
  42227c:	fstp   DWORD PTR [ecx-0x7eb36279]
  422282:	cs mov ss,esp
  422285:	retf   0x9a05
  422288:	and    ax,0x84b0
  42228c:	and    DWORD PTR [esi-0x7fed70df],ecx
  422292:	aam    0x9
  422294:	xlat   BYTE PTR ds:[ebx]
  422295:	jmp    0x323a:0xb9cd67dd
  42229c:	imul   ecx,DWORD PTR [edi-0x9],0x5a
  4222a0:	ss inc eax
  4222a2:	inc    ecx
  4222a3:	dec    ebp
  4222a4:	or     edx,DWORD PTR [edi]
  4222a6:	imul   edi,DWORD PTR [eax+0x1d07c1e],0xffffffad
  4222ad:	retf   
  4222ae:	fdiv   st(5),st
  4222b0:	dec    DWORD PTR [edx-0x2a]
  4222b3:	dec    ebx
  4222b4:	xchg   BYTE PTR [eax-0x28f49983],dh
  4222ba:	and    BYTE PTR [eax+0x4f],dl
  4222bd:	push   cs
  4222be:	shl    BYTE PTR [ebp+edx*8+0x38d79810],cl
  4222c5:	out    dx,al
  4222c6:	and    eax,0xe09dec37
  4222cb:	push   edx
  4222cc:	adc    DWORD PTR [ebx],ebx
  4222ce:	les    sp,DWORD PTR [esi+0x540b69e2]
  4222d5:	pop    ss
  4222d6:	loope  0x422357
  4222d8:	inc    eax
  4222d9:	loopne 0x4222f5
  4222db:	fwait
  4222dc:	call   0xca4b7620
  4222e1:	loope  0x422292
  4222e3:	add    dl,al
  4222e5:	mov    al,0x90
  4222e7:	outs   dx,BYTE PTR ds:[esi]
  4222e8:	les    edx,FWORD PTR [ecx-0x1f894936]
  4222ee:	les    eax,FWORD PTR [ebx+0x6d]
  4222f1:	ins    DWORD PTR es:[edi],dx
  4222f2:	jbe    0x422315
  4222f4:	lahf   
  4222f5:	int    0x19
  4222f7:	sti    
  4222f8:	mov    ebx,0x2f8e130f
  4222fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222fe:	or     al,0x59
  422300:	and    ebp,DWORD PTR [esi-0x4e]
  422303:	jo     0x4222b1
  422305:	inc    ecx
  422306:	loop   0x4222c6
  422308:	nop
  422309:	fwait
  42230a:	stos   DWORD PTR es:[edi],eax
  42230b:	mov    dl,0x6e
  42230d:	push   esp
  42230e:	push   esi
  42230f:	dec    ebx
  422310:	push   esi
  422311:	mov    eax,ds:0xfff1bf8d
  422316:	xor    al,0xb1
  422318:	js     0x4222f3
  42231a:	nop
  42231b:	enter  0x8b7,0x9c
  42231f:	lock add eax,0x8b87295c
  422325:	jle    0x422335
  422327:	mov    bl,0xbb
  422329:	mov    ds:0xa3f692a1,al
  42232e:	imul   eax
  422330:	fs pop esp
  422332:	out    dx,eax
  422333:	test   eax,0xbafba520
  422338:	mov    ecx,0xd8d0b306
  42233d:	fdiv   DWORD PTR [ebp+0x3c05a5c0]
  422343:	pop    ds
  422344:	add    eax,0xa0ab084f
  422349:	fistp  DWORD PTR [ebp-0x59c926de]
  42234f:	iret   
  422350:	popa   
  422351:	leave  
  422352:	push   edx
  422353:	push   cs
  422354:	pusha  
  422355:	jle    0x4223c1
  422357:	sbb    eax,0x25ae9d1f
  42235c:	sti    
  42235d:	shl    DWORD PTR [edi-0x3e],1
  422360:	stos   BYTE PTR es:[edi],al
  422361:	xchg   ebp,eax
  422362:	aad    0xc6
  422364:	imul   ecx,DWORD PTR [eax],0x53
  422367:	inc    esp
  422368:	jnp    0x4223e4
  42236a:	out    0x14,al
  42236c:	inc    ecx
  42236d:	cmp    eax,0xa20261ec
  422372:	popa   
  422373:	daa    
  422374:	mov    ch,bl
  422376:	mov    ch,0x79
  422378:	cmp    BYTE PTR [esp+ecx*8-0x1e],al
  42237c:	in     al,0x3c
  42237e:	and    esp,DWORD PTR [ebx+0x37603c97]
  422384:	mov    edx,0xd2d6c55d
  422389:	jne    0x4223dc
  42238b:	push   es
  42238c:	cdq    
  42238d:	stos   DWORD PTR es:[edi],eax
  42238e:	cmp    eax,0xb8db8fb4
  422393:	jb     0x4223c0
  422395:	add    al,al
  422397:	out    0x19,al
  422399:	(bad)  
  42239a:	nop
  42239b:	(bad)  
  42239c:	nop
  42239d:	or     DWORD PTR [edi+0x57e5a867],eax
  4223a3:	sbb    DWORD PTR ss:[edi],edi
  4223a6:	jg     0x42237c
  4223a8:	ja     0x42232f
  4223aa:	fcmovb st,st(7)
  4223ac:	cmp    ah,BYTE PTR ds:0x3076ef58
  4223b2:	aaa    
  4223b3:	rol    DWORD PTR ds:0x3332e8f0,0x42
  4223ba:	jno    0x42240e
  4223bc:	dec    esi
  4223bd:	sbb    DWORD PTR [esi],0x66650161
  4223c3:	call   0x4cbb:0xcb572211
  4223ca:	enter  0xbec1,0x84
  4223ce:	repnz retf 0x129c
  4223d2:	out    0x48,eax
  4223d4:	jl     0x4223f1
  4223d6:	push   edi
  4223d7:	jmp    0x422451
  4223d9:	or     ah,BYTE PTR [ebx]
  4223db:	cmp    eax,0x195a07b4
  4223e0:	pop    es
  4223e1:	xor    eax,0x64407745
  4223e6:	push   ecx
  4223e7:	add    esp,DWORD PTR [ebx-0x4c]
  4223ea:	dec    ebx
  4223eb:	sub    BYTE PTR [ecx-0x22e41da3],0xc6
  4223f2:	pop    eax
  4223f3:	cmp    ecx,esp
  4223f5:	stos   DWORD PTR es:[edi],eax
  4223f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223f7:	cmp    edi,ebp
  4223f9:	shr    BYTE PTR [edi-0x50],cl
  4223fc:	jo     0x4223cf
  4223fe:	or     esp,ebx
  422400:	sub    dh,ch
  422402:	jl     0x42241a
  422404:	cmp    BYTE PTR [edi],dl
  422406:	cmp    al,0x58
  422408:	jnp    0x422443
  42240a:	pop    ebp
  42240b:	mov    ecx,DWORD PTR [esi]
  42240d:	push   eax
  42240e:	pop    ebx
  42240f:	bnd ja 0x422484
  422412:	push   ecx
  422413:	(bad)  
  422414:	mov    ?,WORD PTR [eax]
  422416:	mov    esi,0xeee48b8b
  42241b:	fxch   st(3)
  42241d:	and    eax,0xfd1006ed
  422422:	enter  0x7f48,0xd
  422426:	fidiv  WORD PTR [edx+0x600f0218]
  42242c:	mov    edx,0x2e3dd462
  422431:	pop    edx
  422432:	lods   eax,DWORD PTR ds:[esi]
  422433:	imul   esi,DWORD PTR [ebp+0x34947ea9],0x3d
  42243a:	mov    ax,ds:0x3c428184
  422440:	cdq    
  422441:	pusha  
  422442:	in     eax,0x9c
  422444:	add    bh,bh
  422446:	mov    BYTE PTR [edi+0x39],ah
  422449:	fild   WORD PTR [edi-0x51]
  42244c:	in     al,0x5f
  42244e:	pusha  
  42244f:	add    al,0x75
  422451:	clc    
  422452:	sub    BYTE PTR [ebp+0x54],al
  422455:	(bad)  
  422456:	out    dx,eax
  422457:	cmp    BYTE PTR [edi+0x4e3e6214],bh
  42245d:	xor    dl,BYTE PTR [ebp+0x77520348]
  422463:	ret    
  422464:	nop
  422465:	fwait
  422466:	mov    cl,0xa7
  422468:	mov    edx,0xc2a689ed
  42246d:	pop    es
  42246e:	add    BYTE PTR [ebx+0x7a6ba000],bh
  422474:	sbb    esp,DWORD PTR fs:[eax]
  422477:	in     al,0xcd
  422479:	push   cs
  42247a:	test   edx,esi
  42247c:	sbb    eax,0xe51987ad
  422481:	bnd ja 0x422429
  422484:	inc    ecx
  422485:	inc    esi
  422486:	and    eax,0x5a5eed3a
  42248b:	mov    BYTE PTR ds:0x59d457e8,al
  422491:	pop    ebp
  422492:	mov    dl,0x73
  422494:	jmp    0xd64dee03
  422499:	jle    0x422474
  42249b:	cdq    
  42249c:	or     edi,DWORD PTR [ebx+0x6f]
  42249f:	in     al,dx
  4224a0:	js     0xd9a77594
  4224a6:	sti    
  4224a7:	push   esi
  4224a8:	fwait
  4224a9:	mov    esp,cs
  4224ab:	push   0xffffff97
  4224ad:	add    al,0x75
  4224af:	xor    DWORD PTR [ebx+eax*4+0x58],esp
  4224b3:	or     al,0x70
  4224b5:	or     esi,DWORD PTR [ecx]
  4224b7:	out    dx,eax
  4224b8:	mov    eax,ds:0xd363a35c
  4224bd:	mov    ch,0xde
  4224bf:	add    al,0x21
  4224c1:	pop    ebp
  4224c2:	dec    edi
  4224c3:	xchg   edi,eax
  4224c4:	push   ecx
  4224c5:	inc    edx
  4224c6:	aad    0x9b
  4224c8:	jecxz  0x422487
  4224ca:	cmc    
  4224cb:	addr16 sti 
  4224cd:	cmp    bh,ch
  4224cf:	repz jns 0x4224de
  4224d2:	mov    ecx,ecx
  4224d4:	and    DWORD PTR [ecx-0x1e118c99],eax
  4224da:	(bad)  
  4224db:	(bad)  
  4224dc:	add    dh,al
  4224de:	cmp    edi,esi
  4224e0:	dec    esi
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	int    0x23
  4224e4:	mov    eax,0xe97fea35
  4224e9:	stc    
  4224ea:	jle    0x422490
  4224ec:	xchg   edi,eax
  4224ed:	xor    BYTE PTR [eax],al
  4224ef:	mov    eax,ds:0x55c3e931
  4224f4:	dec    ebx
  4224f5:	cdq    
  4224f6:	pop    esi
  4224f7:	inc    esi
  4224f8:	and    ah,BYTE PTR [eax]
  4224fa:	mov    eax,ds:0xc97227ea
  4224ff:	mov    BYTE PTR [edi+ebx*4+0x6962b61b],bh
  422506:	pop    ds
  422507:	cdq    
  422508:	ins    BYTE PTR es:[edi],dx
  422509:	mov    eax,ds:0xc51807de
  42250e:	mov    ebx,DWORD PTR [eax+0x32]
  422511:	xchg   ecx,eax
  422512:	mov    ebp,0xc0dba2db
  422517:	jbe    0x422522
  422519:	dec    ebx
  42251a:	pop    esi
  42251b:	add    BYTE PTR [eax],0xe4
  42251e:	mov    esi,0x4e101f4a
  422523:	mov    ecx,0xab851408
  422528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422529:	xor    dh,dh
  42252b:	jbe    0x42256f
  42252d:	add    al,0xa6
  42252f:	jns    0x422502
  422531:	sub    BYTE PTR [eax+esi*8-0x47],dl
  422535:	push   edx
  422536:	jbe    0x4225a7
  422538:	ins    BYTE PTR es:[edi],dx
  422539:	cld    
  42253a:	xor    DWORD PTR [edi],esp
  42253c:	scas   al,BYTE PTR es:[edi]
  42253d:	pop    es
  42253e:	cmc    
  42253f:	out    0x96,eax
  422541:	mov    eax,ds:0xb1c92831
  422546:	xor    DWORD PTR [esi],0xde33d4b
  42254c:	aaa    
  42254d:	jl     0x42251d
  42254f:	push   ebx
  422550:	ds jl  0x42257e
  422553:	outs   dx,BYTE PTR ds:[esi]
  422554:	and    DWORD PTR [edx],ebp
  422556:	sub    bl,ch
  422558:	iret   
  422559:	test   eax,0x66cbde71
  42255e:	and    esi,eax
  422560:	xchg   edi,eax
  422561:	inc    eax
  422562:	adc    al,0x39
  422564:	fldcw  WORD PTR [edi+ecx*4+0x3a885d8e]
  42256b:	call   0xc9f:0xeb71d6b7
  422572:	arpl   WORD PTR [edx],sp
  422574:	sbb    dh,BYTE PTR [eax+ecx*2+0x7e8a8588]
  42257b:	les    eax,FWORD PTR [esi]
  42257d:	and    bl,bh
  42257f:	cmp    edi,edi
  422581:	jae    0x4225b1
  422583:	cmp    DWORD PTR [ebp+0x5998c4a8],edi
  422589:	repz or edx,edi
  42258c:	xchg   ecx,eax
  42258d:	in     al,dx
  42258e:	repz div DWORD PTR [esi+0x1e]
  422592:	sbb    bl,al
  422594:	test   al,bl
  422596:	aad    0x34
  422598:	adc    DWORD PTR [esi+0x615499d2],ebx
  42259e:	stc    
  42259f:	cmp    DWORD PTR [ebx-0x12],edx
  4225a2:	shl    DWORD PTR fs:[ebp+0x34d3e055],cl
  4225a9:	mov    ds:0x9e14f464,eax
  4225ae:	out    dx,eax
  4225af:	in     al,dx
  4225b0:	sbb    ecx,DWORD PTR [edx+0x3f]
  4225b3:	and    al,0xed
  4225b5:	cmp    eax,0xa06413b
  4225ba:	les    ecx,FWORD PTR [ecx+0x2263f389]
  4225c0:	popf   
  4225c1:	jnp    0x42254e
  4225c3:	or     al,0x7a
  4225c5:	push   ebx
  4225c6:	int    0x86
  4225c8:	cmp    bh,BYTE PTR [ebp+0x6e]
  4225cb:	jge    0x422556
  4225cd:	test   DWORD PTR [eax+0x4ea4c62f],edx
  4225d3:	lds    ebp,FWORD PTR [ebp+0x36aedf81]
  4225d9:	hlt    
  4225da:	cmp    eax,0x4ecaf716
  4225df:	shr    BYTE PTR [edx+esi*4],1
  4225e2:	inc    edx
  4225e3:	data16 aaa 
  4225e5:	loopne 0x422597
  4225e7:	out    dx,al
  4225e8:	xor    al,0x4d
  4225ea:	or     eax,0xe5b4b217
  4225ef:	dec    esp
  4225f0:	in     al,dx
  4225f1:	mov    dl,0xc6
  4225f3:	xor    edx,DWORD PTR [esi-0x4e]
  4225f6:	push   0x9a4c35d9
  4225fb:	fwait
  4225fc:	xchg   ebx,eax
  4225fd:	leave  
  4225fe:	ds xor ah,BYTE PTR fs:[eax]
  422602:	mov    BYTE PTR [ebx+0x70122c25],ch
  422608:	dec    edx
  422609:	sbb    al,0x35
  42260b:	cdq    
  42260c:	lahf   
  42260d:	in     eax,0x31
  42260f:	pop    esp
  422610:	sub    eax,0xc25babf2
  422615:	dec    edi
  422616:	and    ebp,DWORD PTR [eax-0x7e]
  422619:	out    dx,eax
  42261a:	imul   ebx,DWORD PTR [esp+edi*2+0x20],0xffffffe4
  42261f:	add    al,0x23
  422621:	dec    ebp
  422622:	dec    eax
  422623:	mov    ch,0x15
  422625:	jo     0x422694
  422627:	xor    DWORD PTR [esi+0x36ba54d0],ebx
  42262d:	inc    ebx
  42262e:	ror    DWORD PTR [edi+0x77],cl
  422631:	imul   ebx,DWORD PTR [edi-0x10ece762],0xffffffa4
  422638:	inc    ebp
  422639:	inc    esi
  42263a:	dec    esp
  42263b:	xchg   edx,eax
  42263c:	hlt    
  42263d:	mov    ecx,0x4b968e5c
  422642:	mov    ?,WORD PTR [ecx]
  422644:	pop    edi
  422645:	push   ecx
  422646:	xlat   BYTE PTR ds:[ebx]
  422647:	stos   BYTE PTR es:[edi],al
  422648:	ds xor esp,eax
  42264b:	out    dx,eax
  42264c:	retf   0xda32
  42264f:	fnstenv [edi+0x6db94386]
  422655:	jnp    0x42267e
  422657:	push   ss
  422658:	sahf   
  422659:	jg     0x422609
  42265b:	pop    es
  42265c:	pop    es
  42265d:	mov    ch,0x2c
  42265f:	stos   BYTE PTR es:[edi],al
  422660:	fsub   DWORD PTR [eax-0x5c592df8]
  422666:	sub    dl,ch
  422668:	daa    
  422669:	ror    DWORD PTR [edi+edx*1+0x35],1
  42266d:	jnp    0x4226ea
  42266f:	xchg   dl,al
  422671:	mov    edx,0xa57f2771
  422676:	(bad)  
  422677:	call   0xf35e1029
  42267c:	xlat   BYTE PTR es:[ebx]
  42267e:	outs   dx,BYTE PTR ds:[esi]
  42267f:	vxorps xmm0,xmm7,XMMWORD PTR [edi]
  422683:	pusha  
  422684:	clc    
  422685:	jb     0x4226ff
  422687:	or     BYTE PTR [ecx+0x5c21fa0],0xc8
  42268e:	mov    ch,0x9c
  422690:	shl    BYTE PTR [esi+ecx*2-0x48ae3fbe],cl
  422697:	push   ds
  422698:	int3   
  422699:	cs (bad) 
  42269b:	fldenv [esi]
  42269d:	retf   
  42269e:	in     al,dx
  42269f:	dec    ebp
  4226a0:	ficomp WORD PTR [eax+0x3e]
  4226a3:	(bad)  
  4226a4:	mov    esi,0x9bea967a
  4226a9:	cmc    
  4226aa:	inc    ecx
  4226ab:	daa    
  4226ac:	mov    cl,0xfa
  4226ae:	lea    ecx,[ebx-0x45]
  4226b1:	shl    DWORD PTR [eax-0x4467efcb],cl
  4226b7:	in     eax,0xbf
  4226b9:	scas   al,BYTE PTR es:[edi]
  4226ba:	adc    BYTE PTR [esi+ecx*1],dl
  4226bd:	pop    edx
  4226be:	add    dl,bh
  4226c0:	in     eax,0x39
  4226c2:	jns    0x422718
  4226c4:	dec    ebp
  4226c5:	mov    ds:0x18c46709,eax
  4226ca:	pop    es
  4226cb:	not    DWORD PTR [ebx]
  4226cd:	addr16 push 0x1d
  4226d0:	xchg   ecx,eax
  4226d1:	jp     0x42270c
  4226d3:	scas   eax,DWORD PTR es:[edi]
  4226d4:	jo     0x422723
  4226d6:	mov    DWORD PTR [edx-0x3dbddb8c],edx
  4226dc:	sbb    al,BYTE PTR [esi+eiz*4]
  4226df:	hlt    
  4226e0:	rcl    BYTE PTR [ebx],0x83
  4226e3:	pop    eax
  4226e4:	or     eax,DWORD PTR [eax-0x59]
  4226e7:	ins    DWORD PTR es:[edi],dx
  4226e8:	mov    edi,0x3935b67d
  4226ed:	call   0xb08e235
  4226f2:	das    
  4226f3:	ja     0x422676
  4226f5:	sti    
  4226f6:	dec    edx
  4226f7:	xchg   edi,eax
  4226f8:	lods   eax,DWORD PTR ds:[esi]
  4226f9:	leave  
  4226fa:	sbb    eax,0x9afb4cf3
  4226ff:	rcr    BYTE PTR [esi],1
  422701:	cld    
  422702:	aad    0x24
  422704:	shr    DWORD PTR [edi],1
  422706:	add    DWORD PTR [ebx],ebx
  422708:	jle    0x4226da
  42270a:	lea    eax,[edx]
  42270c:	adc    eax,0x5de23bcc
  422711:	adc    eax,0x5a1e94cc
  422716:	inc    ebx
  422717:	shl    DWORD PTR [ecx+0x66b80b41],cl
  42271d:	push   ebx
  42271e:	mov    bl,0x4c
  422720:	xchg   cl,bh
  422722:	popf   
  422723:	int    0x39
  422725:	sub    ch,bh
  422727:	in     eax,0x97
  422729:	es push esp
  42272b:	dec    edi
  42272c:	fnstsw WORD PTR [edx]
  42272e:	cld    
  42272f:	fcom   DWORD PTR [ebp-0x6ba5ad0b]
  422735:	add    ah,BYTE PTR fs:[edi+0x595ce68]
  42273c:	rcr    BYTE PTR [edi],1
  42273e:	jne    0x422785
  422740:	cmp    eax,0x64745528
  422745:	xor    dh,BYTE PTR [edi+0x2b]
  422748:	retf   
  422749:	mov    dh,0x9d
  42274b:	rcl    BYTE PTR [ecx-0x5867d5cc],0x12
  422752:	and    eax,0x835dadc8
  422757:	xor    eax,DWORD PTR ds:0x9e014ebb
  42275d:	sbb    eax,0xc081ca25
  422762:	mov    WORD PTR [edx-0x6d],?
  422765:	js     0x4227ba
  422767:	jnp    0x4226ed
  422769:	test   eax,0x1dc9b031
  42276e:	(bad)  
  42276f:	out    dx,eax
  422770:	adc    BYTE PTR [ecx+0x5b30f5a0],0x43
  422777:	sub    eax,0x7056af17
  42277c:	jne    0x422779
  42277e:	pusha  
  42277f:	sbb    esi,esi
  422781:	lds    ebx,FWORD PTR [edi]
  422783:	push   0x44
  422785:	jbe    0x4227f3
  422787:	sub    eax,0xddc75494
  42278c:	and    eax,0xb5f6e61a
  422791:	pusha  
  422792:	sbb    edx,eax
  422794:	rcr    BYTE PTR [edi],1
  422796:	push   esp
  422797:	mov    ebx,0x123eff0
  42279c:	jecxz  0x42279c
  42279e:	sub    bh,BYTE PTR [ebx-0x3e]
  4227a1:	jb     0x4227a8
  4227a3:	push   ebp
  4227a4:	and    cl,BYTE PTR [edi-0x9d3ef26]
  4227aa:	jle    0x422733
  4227ac:	dec    esp
  4227ad:	(bad)  
  4227af:	scas   eax,DWORD PTR es:[edi]
  4227b0:	jp     0x4227b2
  4227b2:	inc    ebx
  4227b3:	push   edi
  4227b4:	gs dec edx
  4227b6:	popf   
  4227b7:	jp     0x4227a0
  4227b9:	sbb    DWORD PTR [edi],ecx
  4227bb:	adc    bh,BYTE PTR [ebx]
  4227bd:	fdiv   DWORD PTR [edx+0x7f]
  4227c0:	cmp    DWORD PTR [edx],esi
  4227c2:	out    0x98,eax
  4227c4:	jno    0x42279f
  4227c6:	pop    ebp
  4227c7:	ret    
  4227c8:	(bad)
  4227cb:	out    0x1c,al
  4227cd:	ins    DWORD PTR es:[edi],dx
  4227ce:	outs   dx,BYTE PTR ds:[esi]
  4227cf:	out    dx,al
  4227d0:	add    eax,0x3fbe6505
  4227d5:	inc    edi
  4227d6:	inc    esp
  4227d7:	aas    
  4227d8:	in     al,0x1a
  4227da:	inc    edx
  4227db:	jp     0x42284e
  4227dd:	rcl    BYTE PTR es:[esi-0x7ad67360],1
  4227e4:	sub    BYTE PTR [ecx],dh
  4227e6:	mov    WORD PTR [ecx+0x28],?
  4227e9:	lea    edx,[esi-0x65]
  4227ec:	aad    0x81
  4227ee:	or     al,0x3a
  4227f0:	es js  0x422853
  4227f3:	into   
  4227f4:	mov    dh,0xbc
  4227f6:	and    eax,0x92df6496
  4227fb:	std    
  4227fc:	ins    BYTE PTR es:[edi],dx
  4227fd:	add    eax,0xdef713ad
  422802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422803:	cwde   
  422804:	push   0xb196f108
  422809:	mov    cs:0xc93a1e24,eax
  42280f:	out    0x2d,eax
  422811:	mov    al,0xa3
  422813:	aad    0xb
  422815:	and    DWORD PTR [ebp+0x2bf89844],edx
  42281b:	jno    0x4227e0
  42281d:	push   ds
  42281e:	pop    edi
  42281f:	push   esi
  422820:	(bad)  
  422821:	(bad)  
  422822:	cmp    cl,ch
  422824:	(bad)  
  422825:	in     al,0xbf
  422827:	jbe    0x4227ea
  422829:	pop    esi
  42282a:	fmul   st,st(1)
  42282c:	js     0x4227c8
  42282e:	pop    ss
  42282f:	shrd   DWORD PTR [edx+0x2cd1f0ba],ebx,0xef
  422837:	push   eax
  422838:	cmp    al,0x92
  42283a:	push   0x3ea4342
  42283f:	cmp    al,0xa7
  422841:	adc    dl,BYTE PTR [edx-0x47d14d3e]
  422847:	dec    edi
  422848:	mov    ecx,0x40d30393
  42284d:	jno    0x42286e
  42284f:	push   es
  422850:	(bad)  
  422852:	(bad)  
  422853:	scas   al,BYTE PTR es:[edi]
  422854:	mov    BYTE PTR [eax],al
  422856:	sbb    BYTE PTR [ecx],dl
  422858:	push   cs
  422859:	pop    ss
  42285a:	daa    
  42285b:	push   ecx
  42285c:	and    ch,ch
  42285e:	and    dh,ch
  422860:	jnp    0x4228d5
  422862:	ret    0xab0a
  422865:	stc    
  422866:	(bad)  
  422867:	adc    al,0xb4
  422869:	xchg   ebx,eax
  42286a:	xchg   edi,eax
  42286b:	sub    al,0x98
  42286d:	aas    
  42286e:	mov    esi,0x6412024
  422873:	inc    ecx
  422874:	dec    edi
  422875:	out    dx,al
  422876:	inc    ebp
  422877:	jecxz  0x4228f5
  422879:	int    0x43
  42287b:	push   eax
  42287c:	fwait
  42287d:	mov    ah,0x85
  42287f:	sub    dh,BYTE PTR [ecx]
  422881:	mov    edx,0x4cd208be
  422886:	loopne 0x422835
  422888:	pop    edx
  422889:	lods   eax,DWORD PTR ds:[esi]
  42288a:	popa   
  42288b:	dec    BYTE PTR [ebx+0x24]
  42288e:	sbb    eax,DWORD PTR [esi-0x1fc379d2]
  422894:	sahf   
  422895:	push   esi
  422896:	dec    esi
  422897:	and    BYTE PTR [ecx],dl
  422899:	cmp    al,0x80
  42289b:	jmp    0xe9f552a
  4228a0:	xor    al,0xe0
  4228a2:	arpl   WORD PTR [esi-0x7c],bp
  4228a5:	mov    ds:0x2eecee3b,eax
  4228aa:	jns    0x422845
  4228ac:	mov    ss,WORD PTR [ecx+0x3a]
  4228af:	adc    ecx,esp
  4228b1:	cmp    DWORD PTR [ebx-0x56acfa92],ecx
  4228b7:	test   eax,0xef80102a
  4228bc:	mov    ecx,0x5c9cbf11
  4228c1:	mov    ds:0x5b6f13e8,eax
  4228c6:	hlt    
  4228c7:	push   cs
  4228c8:	xor    eax,0xcf894198
  4228cd:	inc    esp
  4228ce:	cld    
  4228cf:	loopne 0x4228b9
  4228d1:	mov    ds:0x3064f7e0,al
  4228d6:	pop    eax
  4228d7:	mov    ah,0xfc
  4228d9:	sbb    bh,bl
  4228db:	mov    ds:0x22ffbdb,al
  4228e0:	call   0xfdcfb4d8
  4228e5:	push   esi
  4228e6:	mov    ds:0x194d2980,al
  4228eb:	push   0xffffff9e
  4228ed:	mov    esi,0x5a8d7e5a
  4228f2:	lea    ebp,[edx+0x6c]
  4228f5:	fcom   DWORD PTR [edi-0x7]
  4228f8:	inc    esi
  4228f9:	jmp    0x4228e1
  4228fb:	fwait
  4228fc:	ror    DWORD PTR [edi-0xa],0xd5
  422900:	retf   
  422901:	push   esp
  422902:	sti    
  422903:	xchg   esp,eax
  422904:	inc    edi
  422905:	sub    eax,0xdde4a78e
  42290a:	lds    eax,FWORD PTR [ebx+0x78936c33]
  422910:	pop    ss
  422911:	icebp  
  422912:	adc    al,0x66
  422914:	jae    0x42292e
  422916:	sbb    bl,BYTE PTR [edx]
  422918:	jge    0x4228d8
  42291a:	inc    ebp
  42291b:	ins    BYTE PTR es:[edi],dx
  42291c:	mov    dl,0x85
  42291e:	push   esp
  42291f:	ret    0x7534
  422922:	push   0xffffffd4
  422924:	(bad)  
  422925:	jle    0x4228e6
  422927:	and    edi,ebp
  422929:	mov    ds:0xd2c7d62e,al
  42292e:	mov    ah,0x83
  422930:	mov    al,0x95
  422932:	cld    
  422933:	call   0x712fd69a
  422938:	fnstenv [edi+0x6ac21a6a]
  42293e:	mov    edx,0x1468913d
  422943:	imul   esp,ebx,0xc31a595c
  422949:	into   
  42294a:	jecxz  0x422950
  42294c:	add    eax,0x2806c5c4
  422951:	call   0x4b10aabe
  422956:	jne    0x42291b
  422958:	repz shr BYTE PTR [esi],1
  42295b:	into   
  42295c:	mov    ss,WORD PTR [ebx-0x5c61f8c3]
  422962:	pop    ecx
  422963:	jg     0x4229b7
  422965:	dec    ebp
  422966:	pop    ecx
  422967:	lds    ecx,FWORD PTR ds:0x11f00799
  42296d:	or     al,0x1
  42296f:	sbb    ch,bl
  422971:	pop    eax
  422972:	sbb    al,0xa6
  422974:	inc    eax
  422975:	ins    DWORD PTR es:[edi],dx
  422976:	or     cl,BYTE PTR [eax+esi*4]
  422979:	jbe    0x422943
  42297b:	in     al,0x63
  42297d:	jae    0x422972
  42297f:	push   ss
  422980:	mov    bh,dl
  422982:	(bad)  
  422983:	mov    DWORD PTR [esi-0x7669d79b],ebx
  422989:	jbe    0x4229ba
  42298b:	pop    esi
  42298c:	sub    ecx,esp
  42298e:	adc    BYTE PTR [edx+0x5b0bee9],bl
  422994:	jmp    0x42299f
  422996:	sub    ebx,ecx
  422998:	mov    dl,0x46
  42299a:	stc    
  42299b:	scas   eax,DWORD PTR es:[edi]
  42299c:	xchg   ecx,eax
  42299d:	repnz lds esi,FWORD PTR [ecx-0x74]
  4229a1:	inc    ebx
  4229a2:	inc    eax
  4229a3:	test   bl,cl
  4229a5:	jmp    0x422988
  4229a7:	sar    edi,0xb7
  4229aa:	mov    BYTE PTR [ecx+0x17],bh
  4229ad:	shr    DWORD PTR [ebx+ebx*8-0x6e],1
  4229b1:	ret    0xf71e
  4229b4:	mov    dl,0xfc
  4229b6:	jge    0x422a02
  4229b8:	sub    BYTE PTR [edx-0x50],0x97
  4229bc:	test   DWORD PTR [esi+0x2e],eax
  4229bf:	leave  
  4229c0:	add    ch,BYTE PTR [eax]
  4229c2:	pop    es
  4229c3:	(bad)  
  4229c5:	mov    eax,DWORD PTR [ebp-0x66144d00]
  4229cb:	add    DWORD PTR [eax],ebp
  4229cd:	fist   DWORD PTR [edi]
  4229cf:	icebp  
  4229d0:	mov    dl,bh
  4229d2:	sbb    BYTE PTR [ebx-0x6f],0x6f
  4229d6:	or     BYTE PTR [edi+0x1c],ah
  4229d9:	and    esi,DWORD PTR [ebx+0x41]
  4229dc:	mov    ah,0xa7
  4229de:	or     ecx,DWORD PTR [edi+0x8]
  4229e1:	xlat   BYTE PTR ds:[ebx]
  4229e2:	and    BYTE PTR [eax],dl
  4229e4:	jmp    0x4229ca
  4229e6:	mov    cl,0x3c
  4229e8:	pop    ebp
  4229e9:	sti    
  4229ea:	sbb    eax,0xf117c429
  4229ef:	nop
  4229f0:	and    ebp,DWORD PTR [edx+0x0]
  4229f3:	call   DWORD PTR ds:0x428134
  4229f9:	push   0x0
  4229fb:	push   0x0
  4229fd:	push   0x100000
  422a02:	call   DWORD PTR ds:0x42802c
  422a08:	xor    eax,eax
  422a0a:	add    esp,0x10
  422a0d:	ret    0x10
  422a10:	jmp    DWORD PTR ds:0x428118
  422a16:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x4653e8
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428160
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428064
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x465d04,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x465d10,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x465d14,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x465d08,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x465d08,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x465d0c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428060
  422b6a:	mov    ds:0x4664b4,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x465cf4,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x42805c
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x42817c
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x42816c
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x428040
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x428068
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x4664b0
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x465d44,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428070
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x42806c
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x465d40,esi
  422d0d:	mov    ds:0x465d3c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x4664a8
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x4664a4
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x4664a4
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x4664a8
  422d40:	mov    ds:0x4664a4,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x465d44,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x465660
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x4653f0]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x4653f0]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x465cfc
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x4653ec,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x42807c
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284d4
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d0
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x4653f4]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284b4
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b0
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x4653f4]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428488
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x4653f4]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x428078
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428074
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x465cfc
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x4653ec,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x465d48
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x465504
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x4654f8
  423025:	mov    eax,ds:0x4654fc
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x4654f8
  423044:	mov    ebx,DWORD PTR ds:0x4654fc
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428080
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x4664ac,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x4664b4
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284eb
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x4664ac,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x465cf4
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x465d24,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x465cf4
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x465cf4
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x465cf4,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x4664a0,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x465d24
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x465d24,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x466161],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x466161],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x466161],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x4664ac,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x465e54,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x465d50
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x42807c
  4233cb:	mov    eax,ds:0x4664b4
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x465d34,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x465d18,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x465d1c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x465e58
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x465e58,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x42803c
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x465e58,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x465e58
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428088
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428084
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x4663a0,eax
  423580:	mov    DWORD PTR ds:0x466388,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x4663a0
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x42805c
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x466388,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x4663a4
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x466388,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x466388,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x466388
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x4663a0]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x4663a0
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x428078
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x466388
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f0
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428500
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f50
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x46552c
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x46552c,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x42803c
  42380b:	push   DWORD PTR ds:0x46552c
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b0
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x46552c
  42383a:	call   DWORD PTR ds:0x4280ac
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x465480
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x428020
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b4
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x46552c,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x46552c
  4238b1:	call   DWORD PTR ds:0x4280ac
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x465480
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x428020
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x465d04,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x465d10,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280bc
  423914:	test   eax,eax
  423916:	mov    ds:0x466380,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x466384,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x466380
  423941:	call   DWORD PTR ds:0x4280b8
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x465e60
  4239e6:	cmp    DWORD PTR [esi*8+0x465544],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x465540]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x465540],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x465540
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x465660
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x465540
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x465660
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x465540]
  423a88:	call   DWORD PTR ds:0x4280c8
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x465540]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x465540]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280cc
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x4664a8
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x4664a4
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x4664a8
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x4664a8
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x4664a4
  423b9c:	sub    ecx,DWORD PTR ds:0x4664a8
  423ba2:	mov    ds:0x4664a8,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x4664a4,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x4664a4,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x4664a8,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x4664a8
  423be0:	mov    ds:0x4664a4,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428510
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465fb0,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428580
  423c4a:	call   DWORD PTR ds:0x4280d0
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x428040
  423c60:	push   0x428574
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465fb0,eax
  423c6f:	je     0x423ced
  423c71:	push   0x428564
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428550
  423c7e:	push   edi
  423c7f:	mov    ds:0x465fb4,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x465d04,0x2
  423c8d:	mov    ds:0x465fb8,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x428534
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465fc0,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x42851c
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x465fbc,eax
  423cb2:	mov    eax,ds:0x465fbc
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465fc0
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x465d10,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465fb4
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465fb8
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465fb0
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428590
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x428068
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x465660
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x466161],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x466160
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x466264,eax
  4240b0:	mov    ds:0x46615c,eax
  4240b5:	mov    ds:0x466154,eax
  4240ba:	mov    edi,0x466270
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x465660
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x466264
  4240e3:	call   DWORD PTR ds:0x4280dc
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x466154
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x466264
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x466264
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x466154
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x466264
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x466154
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x466161],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x466280],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x466161],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x466280],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x466161],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x466280],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x466161],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x466280],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x465660
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x465670],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280dc
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x466160
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x466264,esi
  4242b9:	mov    DWORD PTR ds:0x466154,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x466160
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x465680]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x465668]
  424324:	or     BYTE PTR [eax+0x466161],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x466264,eax
  42434b:	mov    DWORD PTR ds:0x46615c,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x465674]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x466270
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x466154,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x466161],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x466161],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x466154,eax
  4243a9:	mov    DWORD PTR ds:0x46615c,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x46615c,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x466270
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465fc4,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a0
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465fc4,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465fc4,0x1
  424421:	call   DWORD PTR ds:0x4280d8
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465fc4,0x1
  424438:	call   DWORD PTR ds:0x4280d4
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465fc4,0x1
  42444f:	mov    eax,ds:0x465ff4
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x466264
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x466158
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x466264
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x46615c
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x466154
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x466270]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x466160]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x466280]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x466158,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x466158
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x4664ac,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x4664ac,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b0
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x466384,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x466380
  4245bf:	call   DWORD PTR ds:0x4280c4
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c0
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x466384,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x466144
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x466384,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x466380
  42462e:	call   DWORD PTR ds:0x428030
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x466008
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e0
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428608
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465fc8
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x465d04,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285f4
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285cc
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x428040
  424a16:	mov    ds:0x465fc8,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465fc8,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428618
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x466384,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x466144
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x466380
  424aea:	call   DWORD PTR ds:0x428030
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x466008,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x466014
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x466130
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x466134
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46612c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x466010
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x4657bc
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x4657bc
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x4657bc
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x4657bc
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x4657bc
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x4657bc
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x4657bc
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x4657bc
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x465768
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287a8
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x466380
  424cf7:	call   DWORD PTR ds:0x428030
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x466140,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x466138,0x0
  424d12:	and    DWORD PTR ds:0x46613c,0x0
  424d19:	mov    ds:0x466148,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x466144,ecx
  424d26:	mov    DWORD PTR ds:0x46614c,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46613c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x466140
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x466138
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x466150
  424f8c:	mov    esi,DWORD PTR ds:0x4280c0
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x466150
  424fac:	mov    eax,ds:0x466138
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x466138
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x466150
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x466138
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x466138
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x466138
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x466138
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x466380
  425011:	call   DWORD PTR ds:0x4280c4
  425017:	mov    eax,ds:0x46613c
  42501c:	mov    edx,DWORD PTR ds:0x466140
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x466138
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46613c
  42504c:	cmp    eax,DWORD PTR ds:0x466138
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x466140
  42505d:	mov    ds:0x466148,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x466138,eax
  42506a:	mov    DWORD PTR ds:0x466150,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46613c
  42507a:	mov    ecx,DWORD PTR ds:0x46614c
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x466140
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x466380
  42509c:	call   DWORD PTR ds:0x4280e8
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x46614c,0x10
  4250b1:	mov    ds:0x466140,eax
  4250b6:	mov    eax,ds:0x46613c
  4250bb:	mov    ecx,DWORD PTR ds:0x466140
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x466380
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x428030
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280e4
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x466380
  42510a:	call   DWORD PTR ds:0x4280c4
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46613c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280e4
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46613c
  42551f:	mov    edx,DWORD PTR ds:0x466140
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x466148
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x466148,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x466138
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x466150
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x466138,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287b8
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x466384,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x466144
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x466380
  4259d9:	call   DWORD PTR ds:0x428030
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x466380
  425a30:	call   DWORD PTR ds:0x4280e8
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x466008,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x466380
  425a81:	call   DWORD PTR ds:0x4280e8
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x466008,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287c8
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x466384,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x466380
  425b00:	call   DWORD PTR ds:0x428018
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x4280f8
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x4280f4
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x428020
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280f0
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280ec
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x465660,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x465660,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428978
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x465660
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465fd8
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x428954
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428880
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x42807c
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284d4
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d0
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b0
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287d4
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428488
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428d98
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x465ffc,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d94
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428104
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x465ffc,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x42803c
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x465ffc,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x465ffc
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465ff4
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x428100
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x428100
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428104
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428104
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428104
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465fe4
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465ff4
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x4280fc
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x4280fc
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x4280fc
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc0
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x466000,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d94
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x42810c
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x466000,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x42803c
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x466000,0x2
  4260c3:	mov    eax,ds:0x466000
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465ff4
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x428100
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x428100
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x42810c
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465fe4
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465ff4
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428108
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x466004
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x465b64
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x465b34
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x465b64
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x465b38
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x465b64
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x465b3c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x465b64
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x465b40
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x465b64
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x465b44
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x465b64
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x465b48
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x465b64
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x465b4c
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x465b64
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x465b50
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x465b64
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x465b54
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x465b64
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x465b58
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x465b7c
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x465b7c
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x465660
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x428110
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428ef8
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x465660
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280dc
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x428100
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x428100
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x428024
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428038
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x465d04
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x428024
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280e4
  426e8b:	mov    eax,ds:0x465d04
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428054
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x4657bc
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428058
